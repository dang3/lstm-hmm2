mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
imul
testl
or
dec
insb
imul
add
out
fcmovne
pop
pop
dec
and
addr16
push
xor
data16
das
add
jns
test
push
outsl
jb
add
stc
scas
lcall
mov
cmp
call
outsl
jne
insb
andb
sti
rcrb
jne
jb
outsb
arpl
nop
rclb
pop
add
mov
aas
add
push
je
mov
or
push
sbb
iret
in
imul
imulb
je
and
or
and
repz
add
cmp
out
mov
cmp
sti
jg
push
dec
bound
arpl
pop
sbb
cld
lcall
insl
test
dec
insb
mov
cmp
gs
add
pop
ffree
leave
inc
add
or
imul
add
pop
add
add
in
dec
addl
jmp
adc
sbb
mov
adc
fnstsw
mov
mov
minps
xor
inc
dec
jb
int
pusha
shlb
adc
loope
in
fs
jle
jle
push
mov
enter
inc
clc
popa
jns
ja
mov
mov
jno
add
push
inc
popa
push
push
imul
inc
add
xchg
xchg
fisttpl
lock
in
call
in
enter
aam
int3
or
fcmovne
leave
leave
enter
setae
mov
xchg
xchg
xchg
xchg
lods
test
mov
pushf
cwtl
iret
add
aas
nop
fmull
dec
mov
unpcklps
dec
inc
sahf
mov
test
sub
xorb
je
xchg
xchg
js
push
add
mov
pushl
ja
add
add
xor
ret
jb
cmp
addr16
punpckhbw
in
pusha
pop
pop
push
lahf
int
jge
mov
add
push
add
out
mov
mov
test
jne
xor
pop
enter
mov
mov
ret
incl
rorb
mov
mov
inc
cmp
jne
mov
mov
mov
push
nop
mov
inc
add
scas
mov
mov
xchg
movsb
test
xchg
mov
mov
mov
testb
push
add
or
adc
add
mov
aaa
xor
mov
push
or
and
pop
lock
or
push
mov
mov
mov
mov
add
rol
fistpl
cmp
push
or
push
or
ret
and
mov
sub
inc
mov
or
inc
add
adc
insb
fistpl
jne
aaa
sub
jne
mov
sbbl
add
pop
pop
pop
push
jg
push
je
sti
mov
xchg
cmp
jb
sbb
testb
add
int
bound
jne
mov
dec
mov
dec
ret
jmp
add
mov
add
pop
repnz
sub
jl
mov
jnp
push
sub
mov
or
mov
aam
or
or
mov
or
jmp
sbb
sti
jne
sbb
testl
mov
mov
cmp
mov
ss
add
xchg
scas
dec
sarl
push
push
jg
clc
mov
test
xchg
mov
mov
dec
orb
call
push
and
push
mov
fstl
data16
dec
add
fsts
sbb
imul
or
mov
pushf
cmpl
in
mov
test
pandn
mov
mov
or
mov
call
faddl
lds
popf
jmp
in
in
scas
loope
es
ja
mov
add
cmp
ja
cmp
fcmovnu
popa
addr16
sub
sbb
jmp
push
in
or
add
mov
cmp
sub
pop
cmp
outsb
jle
sbb
sbb
sbb
pop
jg
jne
push
adc
hlt
outsl
mov
mov
sub
add
jb
sbb
loop
mov
roll
mov
sub
or
lds
xorl
jle
add
and
mov
cmp
or
or
jbe
scas
adc
xorl
sti
push
push
xorl
adc
sbb
mov
xchg
or
push
jb
mov
mov
xor
jmp
mov
nop
out
sub
outsb
jg
adc
cmp
jae
mov
cmp
jae
or
or
std
add
add
xorb
add
rorb
ja
loopne
clc
mov
aas
or
add
repnz
shlb
cmp
cmpsl
inc
idivb
inc
xlat
mov
pop
fdivl
cmpsl
jg
je
mov
inc
jl,pt
aas
or
leave
push
pop
push
dec
pop
sti
stos
scas
and
cmpl
movsl
and
fs
push
push
mov
jp
js
mov
cli
jl
jno
inc
and
cmp
dec
clc
mov
xchg
fidivs
push
sub
clc
lcall
or
nop
lods
call
jne
sub
sbb
fcoms
or
mov
xor
mov
cld
xchg
jmp
jo
mov
jne
xchg
cmp
xlat
js
faddl
xchg
lock
popf
adc
push
pop
xchg
call
mov
mov
lcall
cmp
lock
jae
mov
out
popa
sbb
rorl
popf
andb
sti
jno
pop
push
test
je
imul
lock
add
adc
add
jecxz
mov
sub
sbb
add
mov
push
push
pushl
mov
push
xor
dec
and
or
mov
sub
push
fbld
xchg
mov
or
mov
sbb
leave
jle
hlt
inc
cmp
in
mov
cmp
add
les
pop
jo
ds
pop
pop
push
adc
sub
jg
sub
lods
jmp
mov
into
sbb
test
rcrb
inc
mov
mov
xor
add
insb
rolb
add
test
imul
outsl
mov
adc
je
bound
nop
inc
lock
mov
sbb
loopne
adc
pushf
fistpl
push
cmp
cmp
add
adc
clc
dec
or
adc
test
jns
add
roll
stc
add
and
insl
aaa
daa
dec
mov
sub
mov
xchg
sbbb
cmp
mov
push
pop
add
or
mov
ret
fldl
or
cli
lcall
sbb
xchg
lea
cmp
jl
movl
add
sahf
bound
mov
leave
add
mov
mov
and
out
jle
or
std
mov
sub
test
cld
xchg
adc
adc
daa
fists
lods
jbe
or
push
or
push
jle
outsl
stos
rolb
cwtl
xchg
or
ret
incb
xor
adc
xor
cmp
je
add
cmpsb
popa
stos
fistpll
sub
inc
aas
std
add
add
je
mov
sub
cmp
shl
xchg
push
testb
fisubrs
mov
xor
add
mov
pop
mov
fsubs
test
jne
mov
bound
test
sub
pop
adc
add
cmp
dec
xorb
orb
or
sub
cld
jg
clc
sub
sub
cmp
jge
mov
lahf
lret
fsub
or
lea
in
add
insb
and
sub
push
clc
add
adc
push
scas
mov
jp
or
and
mov
xchg
iret
pop
jp
mov
add
sub
jo
or
sbb
test
mov
in
mov
enter
adc
mov
cmp
jmp
hlt
inc
push
mov
push
pop
add
sub
cmp
push
outsb
iret
orl
sbb
or
insb
sbb
rcll
adc
movb
daa
or
adc
inc
push
or
fdivrl
ret
jg
lock
mov
cwtl
pinsrw
or
loop
ret
notl
push
mov
cmp
pusha
xchg
in
pop
add
xchg
xchg
push
adc
repz
sub
mov
sub
sub
xchg
jbe
jp
out
subl
mov
mov
and
test
mov
lock
and
pusha
pop
pop
inc
in
ret
pop
int3
rol
pusha
or
mov
jmp
add
push
fdivrl
adc
or
ljmp
lock
push
cmp
adc
mov
pop
movd
lods
pop
mov
lock
pop
mov
pop
je
pop
jmp
fxch
inc
ja
or
dec
sbb
add
jle
pop
cmp
orb
cmpl
adc
inc
add
xor
mov
out
sub
popf
push
jmp
cli
xlat
dec
inc
and
leave
jmp
adc
jne
js
cmp
cmp
or
pop
add
inc
xlat
test
aam
xor
pop
movsb
pusha
or
je
sbb
jle
inc
cld
jbe
lahf
push
repnz
xor
push
push
mov
sbbl
jmp
pop
or
sti
mov
mov
roll
clc
loop
xchg
or
movb
loopne
aaa
xor
inc
scas
shlb
push
or
jns
mov
jmp
mov
jge
ret
lods
inc
pushf
or
pop
lea
or
mov
in
add
add
sbb
mov
sbb
punpckldq
cmp
add
cltd
xor
inc
and
or
adc
arpl
or
pop
pop
test
pop
pop
push
push
sbb
mov
or
jne
out
or
nop
xchg
pop
into
jo
xor
mov
mov
test
jne
test
sbb
fisttpl
ja
decl
lock
add
add
add
mov
mov
add
push
or
test
jge
xor
cmp
das
add
pop
mov
mov
cmp
mov
js
stos
in
and
jle
sbb
js
jg
dec
mov
adc
ret
sbb
scas
or
inc
cli
testl
mov
mov
movl
dec
add
inc
adc
rcl
shll
pop
mov
sbbb
pop
jg
adc
lea
test
lock
call
scas
addr16
pop
loope
add
mov
lock
push
jecxz
fsts
and
sbbl
notb
adcl
cli
add
jge
sub
jne
mov
popf
or
xor
rorb
add
scas
push
sbb
mov
cmp
imul
sub
fnsave
cmpl
iret
adc
in
pop
shl
xor
dec
daa
add
inc
lahf
add
add
dec
or
mov
loopne
sub
popa
dec
add
aad
pop
sub
add
mov
jo
movsb
push
pop
mov
loop
fadd
shr
xchg
or
add
xchg
mov
mov
add
cs
and
fdiv
cmpl
enter
or
adc
adc
sbb
mov
adc
dec
xor
enter
seto
jecxz
in
loope
jecxz
sbb
add
cmpsb
dec
pop
clc
out
adc
ret
mov
fldt
insl
ret
add
inc
adc
mov
dec
sbb
jbe
mov
add
cmp
push
aas
cmpsb
test
jle
adc
negb
dec
jmp
xor
mov
and
leave
repz
je
rcrl
jg
or
sbb
enter
sub
in
pop
or
add
push
jmp
mov
subl
bound
mov
repz
push
mov
mov
dec
sbb
pop
mov
ret
rol
add
jb
test
inc
sbb
pop
or
xor
jg
pop
pop
pop
out
mov
jle
sbb
mov
or
cmp
add
sbb
fdivr
vandnps
cmp
ja
mov
mov
hlt
iret
pop
inc
sbb
aas
and
adc
add
push
push
push
xor
pop
fld
ret
xorb
rclb
call
mov
jp
mov
mov
sub
sbb
ret
sub
inc
sub
lcall
fdivrl
sarl
mov
inc
repz
sahf
ss
leave
jmp
mov
jmp
mov
mov
inc
outsl
add
adc
stos
nop
sbb
mov
mov
cmp
ja
je
dec
js
rep
xchg
jbe
xor
lea
xor
std
xor
push
xlat
add
add
addb
fucomi
ret
pop
jmp
roll
dec
adc
mov
cmp
jbe
cmpb
xchg
cmpb
add
out
in
mov
jmp
dec
fcmovnu
inc
cmp
xor
push
shrb
roll
ljmp
jne
in
sbb
scas
or
ja
push
mov
mov
xor
jmp
inc
mov
adc
mov
mov
inc
aam
mov
adc
cmc
shl
pop
pop
movsl
or
into
test
clc
lahf
push
addb
in
xchg
mov
divb
push
push
jno
iret
add
ss
jmp
and
mov
scas
mov
ja
sub
data16
aas
mov
dec
jmp
mov
popa
jb
cmp
sti
jp
add
ret
nop
mov
fldcw
adc
pop
push
sub
fists
fwait
pop
pop
pop
fidivrs
sub
inc
add
add
fldcw
test
pop
fldcw
pop
inc
test
in
inc
xchg
sub
jl
mov
and
xor
out
fucomip
cmp
mov
jbe
mov
add
pusha
je
mov
insb
pop
clc
in
and
jnp
or
movl
cli
in
sub
and
loope
jg
mov
sbb
call
mov
or
lea
push
and
hlt
add
add
decb
xor
addb
addb
push
mov
xor
into
pop
fwait
loope
push
es
push
addl
mov
cs
cwtl
imull
dec
pusha
push
in
mov
jo
fisttpl
sbb
jecxz
push
push
imul
adc
cs
adc
sub
in
pshufw
je
add
pushw
andb
xlat
mov
push
or
fucomp
daa
das
inc
add
push
sarb
adcl
cli
cmpb
mov
push
jge
push
push
push
lea
push
sbb
lock
jp
cmp
mov
cmpl
out
jne
dec
add
pushl
outsl
out
in
adc
sub
jbe
xchg
push
aaa
ret
iret
xor
mov
loop
rorl
ds
inc
sbb
mov
jae
fs
mov
cmp
sub
out
push
xchg
sub
sar
mov
out
dec
jne
jmp
lea
push
fmull
xor
dec
popa
push
hlt
mov
call
pop
push
push
hlt
jmp
cmc
jne
movsb
sbbl
mov
pop
mov
mov
cs
dec
push
stos
xor
rclb
imul
inc
fdivl
leave
mov
lea
adc
mov
sahf
jbe
and
push
push
insl
ret
ret
push
lea
pop
call
das
movb
insb
lcall
pusha
cmovns
jmp
loopne
jmp
shll
fucomi
pop
cmp
sbb
ret
xlat
and
push
rcl
and
push
sbb
sbb
jmp
or
and
fdivs
negb
pop
imul
and
cwtl
adc
sub
sbb
fcmovnb
lret
adc
mov
adc
push
fadds
mov
aaa
push
loopne
scas
xchg
mov
mov
xor
mov
inc
add
mov
adc
enter
rorl
add
mov
jbe
sbb
lock
jmp
mov
mov
sbb
lret
mov
mov
inc
inc
and
xor
arpl
push
xchg
inc
inc
dec
pusha
add
push
rcr
ljmp
pop
cmp
jne
dec
je
mov
add
aaa
cmpl
mov
lock
or
loop
push
adc
add
and
je
imul
dec
je
mov
cmp
jne
or
jg
push
adc
add
adc
cmp
jne
shr
or
adc
add
push
mov
shr
repz
loope
mov
inc
dec
dec
pop
repz
out
add
or
ret
and
imul
dec
dec
dec
and
int
dec
sbb
fistpl
std
xchg
adc
xchg
mov
mov
shl
or
jae
or
mov
cmova
jl
pop
daa
push
mov
outsb
mov
fstpt
push
inc
cmp
je
mov
or
je
or
je
fstp
pop
imul
push
xor
ficomps
dec
inc
test
jmp
or
ret
or
cmp
ja
lea
push
add
shll
dec
je
sarb
jmp
inc
mov
neg
jle
js
pop
sub
jmp
inc
inc
jmp
mov
fidivrl
je
andb
and
sar
adc
or
push
filds
aad
cwtl
pop
xor
mov
rclb
mov
inc
imul
mov
add
sbb
fidivrs
pop
mov
imul
push
jmp
and
cmp
xor
js
push
sub
cmp
jg
add
rcll
shrl
jnp
add
push
mov
ficoml
and
dec
or
nop
inc
mov
stos
pop
mov
sbb
mov
mov
pop
and
and
ret
pop
test
jg
movsl
sub
push
idiv
add
lock
dec
and
or
jmp
add
sub
cmp
pusha
ss
lahf
mov
pushl
and
cmp
ss
das
lcall
sbb
repz
mov
add
in
repz
sub
xchg
lods
loopne
fwait
cli
jge
dec
je
adc
lea
decl
pop
lea
fldt
fsubr
add
addr16
pcmpeqb
cltd
xor
std
sbb
mov
inc
das
ss
adc
xchg
mov
inc
idivl
push
fstp
fldt
pusha
and
adc
out
mov
add
adc
mov
jl
leave
inc
cli
or
or
ret
in
lahf
and
adc
mov
xchg
vpcomgtud
xchg
and
inc
mov
pop
adc
es
test
std
xor
out
sub
pop
jecxz
add
leave
sbb
pop
lds
mov
jbe
imul
cmp
mov
mov
mov
lods
lods
inc
cmpb
xlat
fadds
rep
lods
outsb
xor
xchg
push
or
push
push
int3
into
sbb
sar
cmp
decl
mov
push
pop
test
enter
movsl
outsl
movsl
push
inc
cmp
and
daa
decl
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
dec
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
mov
fwait
lds
stos
mov
cmp
or
mov
pop
out
sub
cld
incl
push
daa
cmp
inc
xor
cmp
call
mov
sti
jmp
jle
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
call
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
jmp
xchg
pop
ds
push
cmpsb
scas
mov
pop
or
addl
call
mov
push
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
pushl
lcall
clc
repz
mov
subb
and
and
clc
lcall
outsb
bound
xor
jmp
fcmovnbe
fidivrs
shll
cmp
jne
push
pop
cmp
pop
add
insb
repz
push
add
addr16
mov
test
cld
push
or
push
add
fcompl
repz
scas
hlt
push
push
mov
movl
xor
hlt
push
data16
add
cwtl
aam
lock
inc
sub
cmpsb
out
cltd
mov
mov
jmp
push
clc
pop
fwait
or
icebp
aas
or
mov
dec
incl
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
aaa
scas
cld
imul
jne
fninit
fwait
add
call
mov
push
in
xlat
mov
xor
mov
inc
rep
push
or
jmp
jg
push
mov
or
dec
cld
jne
dec
mov
xor
and
jne
sub
mov
fdivs
inc
fsubl
xchg
adc
lock
inc
sub
pop
pop
rcrb
fs
aaa
inc
sti
jle
mov
add
outsl
test
or
pop
xor
jl
movups
fs
shll
ret
xor
pop
icebp
pop
gs
int3
outsb
loopne
mov
or
push
cld
std
mov
ret
jl
mov
xor
push
shr
dec
rep
testb
mov
sub
movsb
add
pop
fcoml
cmp
je
pop
mov
add
incb
sbb
push
push
mov
mov
push
sbb
fildl
jecxz
lods
mov
mov
mov
sub
inc
cmp
mov
cmp
jb
jb
add
jmp
rolb
popf
inc
add
add
adc
push
lahf
fcomip
in
icebp
push
mov
mov
pop
xchg
cmp
mov
sub
sbb
add
lock
push
ret
stc
push
push
mov
push
add
pop
call
push
fildll
dec
setne
scas
jbe
cmp
lods
push
sub
pop
mov
das
test
imul
mov
cmp
fdivl
add
jo
fmull
or
jne
js
inc
rorl
push
inc
inc
fcompl
vmovdqa
mov
and
add
sub
mov
sarb
idiv
push
mov
mov
cmp
je
mov
leave
jne
mov
add
es
jmp
lret
adc
les
push
add
repnz
je
pop
in
negb
loop
inc
pop
add
sub
mov
pop
cs
xchg
add
ret
dec
sub
jmp
pop
mov
int3
mov
mov
xor
das
mov
rorb
out
sbb
lds
push
inc
rorb
xor
sub
data16
sbb
push
stos
pop
lcall
mov
push
ds
sbb
js
xchg
adc
je
movb
dec
push
cmp
sbb
add
dec
jne
icebp
dec
sar
jnp
jmp
push
jmp
add
sbb
jecxz
mov
cmp
fistps
xor
sbb
rcrb
sbb
jmp
lahf
fdivs
in
push
pop
add
mov
jl
ljmp
out
push
hlt
xor
adc
mov
mov
movl
test
cmp
or
inc
cmp
sub
mov
or
dec
mov
adcl
movsl
sbb
xor
call
mov
dec
je
in
enter
mov
pop
scas
cmpb
jecxz
addb
cli
in
push
call
jae
aaa
mov
push
pusha
push
mov
dec
jae
cmp
cmp
pop
iret
mov
repnz
add
add
rcrl
sub
or
jae
addr16
pop
idivb
fsts
and
sbb
jmp
sub
movsbl
inc
inc
jmp
add
sbb
sbb
jecxz
shlb
xor
adc
loop
fdivrl
rorb
adc
les
pop
test
inc
add
jne
scas
jl
cmp
inc
mov
dec
adc
outsb
pop
ja
jg
daa
mov
je
jae
pop
adc
sahf
cld
mov
cmp
cli
out
push
je
sbb
sbb
jb
jbe
test
cwtl
mov
and
push
pop
fwait
mov
sti
cmp
stos
pop
cmc
enter
enter
adc
adc
test
or
push
jns
sub
orl
out
ja
loopne
push
sbb
push
sub
push
add
sbb
add
decl
jbe
outsl
or
inc
add
xchg
sbb
mov
pusha
jmp
xlat
xor
mov
nop
cmovno
xor
pop
mov
xchg
je
dec
jne
sahf
or
push
add
mov
fsubrp
pusha
adc
push
or
hlt
pop
adc
add
lds
pusha
mov
mov
sub
repnz
addb
filds
fdivrs
dec
fdivs
xchg
mov
mov
or
mov
jg
pushw
lock
mov
rolb
inc
jno
adc
inc
jmp
sbb
sbbl
push
adc
lahf
adc
adc
insl
or
inc
push
subps
pop
adc
dec
aam
adc
sbb
jmp
paddw
mov
popf
pop
cmpsb
movl
ret
pushf
ret
push
subb
xor
inc
outsl
or
mov
shr
aas
pop
push
push
push
push
push
mov
add
jns
and
loopne
add
mov
inc
sahf
sbb
lds
pusha
add
testl
jle
fdivs
pop
mov
mov
cmc
lea
jae
mov
push
cmp
push
pop
lods
pop
insl
mov
shlb
test
ret
mov
addl
add
stos
fidivrl
pop
cmp
push
sub
mov
cmp
pusha
add
sub
jb
je
jmp
cmp
ja
adc
xchg
cs
adc
jmp
sub
jmp
das
dec
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
jg
lock
sbb
into
jmp
mov
mov
jmp
mov
jmp
or
lret
call
push
or
pop
xor
xor
or
leave
cmp
je
push
dec
mov
mov
jp
xchg
inc
pop
rorb
push
push
inc
sbb
mov
mov
loopne
mov
or
push
inc
sti
sub
mov
jo
cmpsb
push
sub
outsb
pusha
push
adc
stc
xor
adcl
scas
ret
ret
mov
enter
push
ret
in
aas
mov
or
sbb
cmp
cmpsb
add
or
stc
pushl
add
adc
es
test
mov
dec
dec
push
add
mov
mov
call
fdivrs
idivl
dec
mov
inc
fiadds
call
and
and
loope
jecxz
adc
js
jl
lret
or
pop
ds
mov
insb
mov
inc
mov
repz
add
add
das
fildl
cmp
jg
jns
insl
je
add
adc
and
fldl
fwait
mov
outsb
xchg
stos
mov
call
ss
bnd
cmp
or
adc
push
add
add
fadds
jbe
adc
dec
jne
pop
pop
pop
gs
add
dec
jmp
pop
pusha
pop
out
add
mov
xchg
or
xor
dec
sbb
push
add
push
adc
mov
xor
rorl
lock
mov
cmpsb
mov
js
xchg
nop
adc
mov
mov
push
test
sbb
sub
xchg
rolb
outsl
das
rcrb
adc
ja
add
mov
mov
jbe
movsl
pop
leave
pop
push
cmpsb
dec
add
das
rcll
cmp
mov
push
les
mov
orb
loopne
push
push
popa
push
jg
add
inc
inc
sub
or
pop
ret
mov
ss
aaa
mov
cmp
push
repnz
or
shlb
mov
sub
or
push
cmpl
adc
shlb
clc
mov
call
out
dec
outsb
icebp
jge
and
xchg
xor
daa
adc
xor
add
mov
mov
imul
jbe
fwait
inc
adc
or
shl
lock
or
cmp
je
es
insl
jo
jbe
pusha
movsl
or
data16
sbb
add
pop
cmp
lods
pop
or
adc
or
pusha
rclb
push
popf
jb
sub
aas
mov
jmp
mov
aam
pop
mov
dec
clc
dec
jl
lock
push
lea
push
int
ret
or
push
les
popa
xchg
inc
jle
sbb
add
or
mov
fidivl
dec
and
jge
je
inc
jg
cmp
ss
mov
pop
jne
jle
push
dec
sbb
pop
pop
jmp
jbe
xchg
adc
sub
xchg
xchg
jle
mov
jle
push
add
loopne
push
or
push
sti
pop
movw
loopne
mov
push
cld
sub
insl
faddp
sbb
ja,pn
mov
mov
push
xor
or
stc
mov
loopne
ds
test
fsubs
mov
push
xchg
push
mov
dec
bound
loopne
mov
jns
jo
clc
cmp
aaa
addb
les
xchg
mov
xchg
jo
or
mov
pop
lea
cmp
push
lock
sbb
mov
jle
enter
test
rcrb
sub
xor
shrl
dec
jnp
pop
pop
sbb
add
cmp
mov
call
loop
loope
fistpl
leave
mov
je
out
adc
nop
jle
add
pop
add
call
pop
sub
sbb
shr
pop
pop
sub
and
in
out
stc
cmp
je
push
addr16
in
add
stc
in
gs
add
or
xor
hlt
xchg
out
lret
jle
lock
pop
rcrl
rcrl
mov
add
and
pop
mov
fisubs
fnstcw
or
inc
jo
mov
xchg
aas
lock
lock
pop
add
aas
xchg
test
sbb
mov
ljmp
mov
loop
pop
and
mov
adc
mov
sahf
ret
das
sub
pop
daa
out
popa
cmpl
je
cmp
push
mov
cld
sub
jo
out
push
out
scas
rorl
inc
mov
cmp
mov
mov
cli
lds
push
sbb
pop
push
mov
dec
clc
mov
in
out
loope
lret
mov
push
fwait
mov
jae
cmpsb
xor
mov
jl
dec
in
cmp
outsb
xchg
dec
sbb
or
push
cmp
fs
dec
jne
or
sbb
mov
cld
jge
aam
cmp
pushl
add
dec
jmp
and
inc
pushf
sbb
repnz
add
pop
dec
jne
adc
mov
mov
or
and
loope
mov
pop
lea
jmp
xchg
shll
rolb
push
sub
rolb
rorb
and
xor
cmp
cmp
adc
faddl
or
daa
push
and
jmp
aam
sub
or
cmpsl
notl
das
lods
pop
add
add
push
jmp
mov
je
push
jmp
mov
adc
cltd
lret
xchg
pop
adc
mov
shlb
cmp
and
movd
clc
filds
es
jl
cmp
jge
sub
jbe
scas
xor
mov
jg
push
fnsave
adc
inc
aad
call
jmp
and
mov
cmp
lret
jl
sub
mov
clc
fisttpl
inc
sub
add
lea
inc
dec
lret
shld
cmp
mov
pop
or
lahf
cltd
mov
push
mov
jle
ds
dec
jge
cmp
adc
imul
mov
fsubs
push
mov
lea
lock
sub
sbb
add
mov
adc
add
pop
inc
pushf
xor
mov
push
insb
dec
js
mov
add
jb
adc
adc
call
lret
fcoml
push
faddl
mov
cmpsl
and
push
int3
or
aas
inc
dec
out
and
sbb
push
aam
or
loopne
xor
sbb
jecxz
mov
jo
lods
jmp
out
aad
divb
arpl
cli
pop
cmp
fisubl
pop
jg
rcrl
enter
ljmp
in
jne
clc
sbb
push
lretw
hlt
sahf
shrb
pop
mov
jo
or
fisubl
dec
xchg
ret
std
add
clc
push
std
add
sbb
pop
mov
push
addr16
push
push
das
sbb
push
fldenv
sub
dec
dec
lea
cltd
aad
out
push
cmp
call
mov
scas
mov
test
in
jno
nop
pop
je
cmp
jmp
pop
add
pop
call
and
rorb
add
xchg
adc
and
cmp
push
lock
or
dec
push
das
int3
call
pushl
mov
and
or
scas
add
and
add
add
pop
xor
cmp
cmpl
push
add
nop
and
mov
and
pop
sbb
push
or
sbb
je
shrb
or
adc
fwait
ret
mov
jge
ds
pusha
clc
xchg
lock
jge
pop
dec
cmp
nop
pop
out
dec
negl
cmp
push
lods
add
pop
out
loop
add
cmp
je
daa
test
cli
cltd
cmp
les
stos
test
jmp
pop
adc
enter
sub
xor
mov
pop
movsb
cli
ja
lea
mov
mov
mov
adc
aas
cwtl
cmp
arpl
mov
scas
push
add
or
lcall
cmp
je
cmp
je
cmp
je
cmp
mov
je
mov
pop
adc
push
or
mov
in
jp
clc
jmp
adc
or
push
pop
sbbb
aad
push
or
scas
pusha
rcrl
cs
adc
cmp
pop
jmp
push
push
jbe
xor
lock
in
push
jmp
enter
cwtl
xchg
mov
or
call
loope
adc
cmp
loopne
repz
add
and
iret
push
pop
jbe
test
push
mov
inc
pop
test
int3
jg
dec
out
mov
pop
int3
fdivrs
daa
ja
cmp
jmp
and
xor
push
dec
insb
sub
jmp
in
pop
dec
inc
test
cmp
lods
subb
test
test
pop
loope
xor
and
icebp
jmp
push
daa
xchg
xchg
sub
dec
cmpl
test
adc
dec
popa
pop
add
in
cs
clc
inc
add
cld
les
push
push
add
push
mov
mov
into
or
pop
push
mov
cmp
xor
outsb
outsb
or
je
or
dec
or
jo
mov
pusha
pusha
adcb
mov
push
mov
adc
fs
add
ret
xchg
jmp
and
in
sbb
jl
adc
scas
mov
call
lock
mov
mov
jmp
aas
cs
fidivl
xchg
ret
xor
mov
pop
push
mov
dec
adc
and
xchg
roll
dec
jne
lods
ss
rclb
sbb
fistpll
dec
pop
or
insb
and
mov
dec
movsl
jb
in
inc
push
popa
dec
enter
xchg
pushf
jg
push
dec
mov
jne
lds
jl
inc
fwait
cmp
push
imul
adc
test
les
cmp
cmp
or
ja
loopne
mov
sti
add
add
inc
ljmp
icebp
loop
mov
jo
add
je
cmp
aaa
leave
cltd
or
daa
cmp
xor
adc
jecxz
lock
pop
movsb
call
inc
sub
inc
jo
lods
call
lods
pop
pop
add
and
push
add
inc
xor
push
inc
mov
pop
aaa
jo
test
mov
out
enter
mov
ds
sbb
clc
mov
adc
popf
cmc
lea
and
shrl
and
add
dec
adc
pop
pop
ret
xorl
mov
or
outsl
test
push
or
fbstp
aam
or
sub
jl
fstp
scas
pop
lret
add
jne
sbb
or
std
inc
jmp
cmp
jne
mov
inc
and
sub
test
cmp
je
daa
xor
pop
loopne
cs
imul
add
ljmp
inc
movsl
mov
sbb
mov
and
loopne
out
xor
sbb
aaa
jmp
pop
jo
mov
mov
jmp
jl
insb
sub
inc
sub
jbe
jmp
jg
mov
cltd
aas
cld
adc
movsb
shrb
push
or
add
adc
rcrb
xor
mov
pop
lods
inc
xor
ljmp
movsl
mov
mov
inc
xchg
neg
push
cmp
add
sub
testl
shlb
das
jg
jp
or
pop
inc
sub
push
orb
adc
jmp
sub
pop
or
add
jmp
setb
jmp
setl
cmp
je
dec
add
mov
or
mov
mov
mov
in
push
mov
test
jmp
jmp
scas
pop
pop
xchg
inc
jo
xchg
loopne
lods
xor
pop
add
lods
push
loope
add
sbb
pop
mov
mov
lods
rolb
xor
aaa
jmp
and
push
push
into
inc
add
inc
pop
push
test
les
push
call
test
adc
notb
mov
dec
imull
dec
in
in
cmp
pushl
fidivl
or
xor
inc
cld
loopne
jge
jge
and
in
add
fildl
imul
sub
add
sbb
enter
mov
stc
mov
pop
decl
stos
xor
fcoml
lret
testb
jge
or
sbb
jecxz
test
insb
inc
push
inc
je
and
mov
mov
fldl
sti
in
add
mov
or
js
lock
lock
test
sarl
cmpl
jle
cwtl
or
shrl
xchg
dec
jo
and
add
or
pusha
mov
fdivr
push
dec
jne
enter
sub
cmp
add
jne
pop
sub
sbb
clc
jae
lds
pop
jo
xor
pusha
push
out
adc
push
loopne
pop
outsl
push
loop
cld
xlat
dec
mov
sub
je
mull
sarl
into
pop
cmp
add
xor
ja
xlat
cmp
jle
repnz
lds
jle
inc
orb
mov
or
mov
adc
mov
push
mov
hlt
jo
cmp
mov
inc
xor
jge
add
push
xor
sbb
xchg
dec
push
sub
je
xchg
test
xchg
cmp
roll
test
rcll
sub
pusha
xor
lock
jne
mov
push
mov
adc
push
aam
pop
and
in
into
mov
stc
adc
ret
mov
push
push
mov
incl
movsl
pop
pop
mov
in
sbb
shrb
jge
add
ss
mov
cwtl
inc
sbb
pop
inc
xor
es
fs
dec
jne
out
pop
clc
enter
repz
sub
xor
ret
add
or
bound
jno
and
outsl
mov
add
sbb
add
cli
inc
aam
sbb
aas
add
inc
shl
ret
jmp
dec
mov
test
out
pop
nop
mov
fmuls
js
xor
cmp
jnp
mov
cwtl
inc
inc
push
inc
push
push
and
pop
test
je
call
rcrb
imull
sub
in
sbb
out
fiaddl
js
pop
jne
add
fdivrs
mov
xor
xlat
dec
push
and
mov
ljmp
rcr
mov
mov
dec
ret
imul
mov
add
inc
cmp
dec
flds
add
push
gs
imul
out
and
je
std
fs
pusha
xor
rorb
cmp
fwait
jg
movb
ret
dec
push
push
nop
scas
insl
ret
mov
xchg
lahf
test
dec
jmp
pop
lods
lret
imul
gs
xor
cs
fucomip
fs
insb
pop
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
daa
sub
lret
loopne
sbb
mov
movb
int3
push
data16
pop
sbb
xor
fs
xchg
and
in
icebp
or
pop
pop
or
push
mov
sub
out
and
int
pusha
pusha
cmpsl
fstpt
iret
les
add
test
int
push
repnz
pusha
sbb
mov
pushf
and
push
lods
repz
movzwl
pop
mov
mov
mov
js
jecxz
jge
data16
fs
imul
negb
add
cmp
stos
pop
cmp
jne
adc
sahf
push
push
inc
and
cmp
jecxz
sub
sbb
add
lods
mov
fs
fbstp
ljmp
mov
xchg
adc
add
mov
outsl
data16
popa
jb
inc
push
mov
or
jae
aaa
mov
inc
cltd
dec
aam
pop
cmp
ja
hlt
mov
xchg
lea
cmp
jo
test
hlt
xchg
fldt
and
fucomip
sbb
mov
aaa
sbb
out
jp
mov
sub
mov
fmuls
in
add
fsts
ret
dec
adc
outsl
cli
mov
mov
lea
scas
cmp
shlb
inc
dec
add
ret
ds
or
xor
mov
movsl
loopne
mov
sbb
test
mov
je
cmovo
pusha
stos
cmp
and
or
push
das
pusha
sti
repz
add
mov
pop
mov
test
mov
cmp
jne
addl
inc
mov
pop
mov
ret
mov
call
and
sahf
sub
bound
push
lock
xchg
lock
mov
and
insl
pop
shlb
sahf
je
xchg
popa
sahf
mov
mov
or
push
mov
outsb
pop
daa
pop
sbb
mov
pop
pop
ret
sbb
adc
sub
inc
inc
test
lods
pop
inc
pushl
lock
mov
or
xchg
jp
pop
das
sub
call
mov
add
or
loope
and
fcomps
js
inc
xor
mov
movsb
ret
test
jnp
insb
jns
and
scas
sbbb
cld
call
mov
sub
cmp
outsl
mov
arpl
pop
pushf
je
push
fidivl
leave
inc
xchg
jmp
jg
sub
mov
dec
inc
cmp
ja
mov
inc
jmp
cmp
dec
jbe
lea
cmp
ja
fcmovb
jmp
or
mov
aaa
in
outsl
out
adc
sbb
and
lret
add
jmp
pusha
add
dec
outsl
out
imul
or
sub
sti
cmp
jb
or
dec
movb
and
ror
mov
jbe
pop
mov
inc
add
jb
lea
ret
mov
mov
mov
hlt
add
lock
push
and
rcl
sbb
push
cmc
fdiv
adc
clc
pop
add
inc
test
je
or
jae
test
aas
and
je
cmp
adc
mov
and
cmp
jne
cmp
cwtl
and
mov
rorl
data16
jg
dec
cld
mov
mov
inc
lcall
cmp
xor
ficoml
or
sub
and
jmp
adc
inc
mov
ret
xor
mov
inc
adc
in
xorb
mov
daa
or
jb
inc
mov
int
out
daa
out
mov
adc
sbb
jns
rclb
mov
jge
push
je
adc
lea
push
fdivrs
add
mov
or
and
jnp
add
pop
pop
sub
or
test
lret
push
jmp
adc
repz
fs
std
pop
nop
dec
dec
enter
cmp
mov
hlt
enter
test
dec
pop
mov
inc
ds
cmp
cmp
enter
cmp
and
push
cmp
cmp
cmp
pop
leave
cmp
pop
gs
mov
push
rcll
jmp
gs
add
xor
push
cli
arpl
ljmp
sbb
add
pop
sub
jle
in
rcr
clc
aaa
mov
shlb
pop
mov
lock
shlb
adc
lea
push
push
lock
jp
ljmp
and
neg
cmp
pop
rclb
andb
bound
push
xchg
out
sub
add
movsb
and
dec
fldcw
call
lcall
jne
outsb
scas
clc
subl
test
cld
movb
mov
and
and
inc
je
xchg
loopne
cwtl
adc
dec
mov
cmp
adc
and
and
in
or
xchg
mov
pop
loop
inc
mov
mov
pop
lods
lods
sub
clc
add
les
test
jmp
dec
mov
cld
mov
cwtl
mov
xor
jmp
insb
xlat
cmp
cmp
rorb
push
push
pop
fisttpll
push
or
and
inc
dec
adc
lock
cmpsl
xor
and
or
jmp
dec
ja
fstl
push
push
aaa
sbb
mov
jnp
and
mov
clc
xchg
mov
ret
adcb
ret
mov
xor
lret
sub
into
mov
mov
lods
sub
out
fldlg2
cmp
mov
out
mov
xor
jg
xor
fsubrl
cmp
cmp
loopne
sub
sbb
or
ss
pop
pusha
mov
pop
mov
in
insb
push
pop
es
inc
mov
sti
push
add
add
push
or
lods
xchg
or
and
mov
add
xor
add
fbstp
outsl
fs
gs
out
shr
push
gs
inc
adc
outsb
add
and
insb
adc
dec
jg
inc
push
outsl
arpl
inc
gs
jne
je
fcmovnu
call
outsl
je
imul
mov
gs
outsl
inc
int3
fsubp
fisubl
lods
or
or
or
neg
jle
inc
xor
xor
outsl
insl
bound
outsl
js
and
idiv
imul
ja
nop
xchg
cmp
jo
sti
andps
outsb
dec
inc
xor
je
stc
xor
cmp
push
jns
jb
push
dec
dec
xchg
xor
cmp
sbb
cmp
cmp
cmp
cmp
push
cmp
pop
push
cmp
cmp
push
dec
dec
inc
cmp
cmp
inc
cmp
xor
cmp
cmp
sub
and
cmp
cmp
sbb
adc
cmp
cmp
or
add
mov
add
xor
hlt
pushf
pushf
pushf
pushf
lock
call
pushf
loopne
fcom
pushf
pushf
pushf
pushf
ror
enter
pushf
pushf
sarb
mov
test
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
nop
mov
pushf
cmpb
pushf
pushf
pushf
jo
push
pushf
pusha
movsb
xor
dec
les
mov
daa
mov
lods
test
daa
daa
daa
movsb
mov
daa
daa
xchg
nop
mov
test
daa
daa
je
insb
push
fs
pop
pop
daa
daa
daa
daa
push
push
dec
dec
daa
daa
daa
daa
inc
inc
cmp
daa
daa
daa
daa
xor
sub
daa
daa
daa
daa
and
sbb
daa
daa
daa
daa
adc
or
xchg
daa
daa
daa
add
cld
xor
hlt
lock
xchg
xchg
xchg
xchg
call
xchg
xchg
xchg
fcom
ror
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
mov
leave
leave
enter
xor
leave
leave
leave
leave
and
xor
leave
leave
leave
cmp
sbb
leave
leave
leave
leave
adc
or
fs
leave
add
cld
ss
in
in
hlt
lock
call
in
leave
in
in
aam
int3
mov
leave
sarb
mov
test
leave
leave
leave
movsb
mov
leave
leave
xchg
nop
mov
test
leave
leave
je
insb
push
fs
pop
pop
leave
leave
leave
leave
push
push
dec
dec
leave
leave
leave
leave
inc
inc
cmp
leave
leave
leave
leave
xor
sub
leave
leave
leave
leave
and
sbb
pop
enter
adc
mov
mov
xor
pushf
hlt
lock
leave
leave
leave
leave
call
leave
leave
leave
fcom
ror
leave
leave
leave
leave
enter
leave
leave
leave
leave
mov
leave
leave
leave
test
mov
leave
cwtl
xchg
nop
mov
leave
leave
leave
mov
leave
js
jo
leave
leave
leave
leave
push
leave
leave
leave
pop
push
push
dec
leave
leave
leave
leave
dec
inc
inc
cmp
leave
leave
leave
cmp
sub
leave
leave
leave
sub
sbb
leave
leave
leave
sbb
or
leave
leave
leave
or
cld
xor
in
fs
hlt
lock
in
in
call
in
in
aam
movzwl
aam
iret
clc
shl
or
repnz
xchg
clc
mov
inc
imulb
je
fxch
and
or
mov
popf
nop
xor
mov
loope
sar
scas
push
dec
movswl
add
sahf
add
inc
and
xchg
pop
jae
mov
adc
and
xor
jg
dec
cmp
push
arpl
test
sahf
or
add
pop
add
pop
xchg
mov
rorl
adc
repz
adc
sbb
and
ss
jnp
push
push
push
push
fs
inc
sbb
sbb
cmpsl
mov
stos
and
daa
stc
mov
push
addr16
push
or
pop
push
ds
orl
push
push
pop
pop
rcrb
push
sbb
loopne
aam
push
lds
dec
shll
or
inc
cmp
or
inc
pop
or
xchg
repz
add
gs
jne
sti
das
push
dec
inc
inc
dec
add
outsl
loop
jle
sti
and
dec
push
inc
push
dec
pop
and
mov
dec
push
push
pop
sub
push
inc
dec
pop
dec
and
inc
push
das
push
loope
xchg
or
js
jne
sbb
dec
jbe
sbb
and
inc
lret
nop
jl
lock
movsb
xor
psllw
repz
in
hlt
cmc
div
in
in
clc
stc
cli
sti
in
in
cld
std
jmp
in
in
loope
jecxz
in
in
in
out
in
in
jmp
in
in
in
out
out
in
in
rcl
rcl
in
in
aam
xlat
in
in
fcomp
fcmovu
in
in
in
in
rol
ret
in
in
in
in
enter
in
in
int3
int
iret
in
in
mov
mov
in
in
mov
mov
in
in
mov
in
in
mov
in
mov
in
in
movsl
cmpsb
cmpsl
in
in
test
stos
stos
in
in
lods
lods
scas
scas
in
out
nop
xchg
popa
jns
leave
add
ds
mov
push
inc
imul
hlt
lcall
push
or
popa
jb
push
repz
mov
lock
bound
lock
lahf
add
je
pop
out
pop
ss
adc
inc
js
xorl
imul
adc
in
repnz
movsb
jns
movb
mov
mov
mov
mov
call
jp
inc
dec
jne
dec
dec
gs
outsl
jb
lea
mov
outsb
jnp
outsl
jle
push
or
outsb
mov
push
mov
or
or
push
mov
mov
shrb
sbb
adc
and
jl
cmp
sbb
stos
in
mov
and
decl
inc
inc
imul
outsl
nop
rcl
mov
push
popa
outsb
sub
add
jge
cmp
outsb
jbe
jb
insb
outsl
ja
mov
and
test
dec
mov
adcl
push
push
leave
xchg
fdivrl
jge
jbe
inc
sti
cmp
imul
xor
or
inc
or
insl
jle
in
insl
mov
mov
rcl
scas
pop
shll
andnps
cmp
addr16
cmp
jg
popa
cwtl
add
mov
mov
dec
cwtl
mov
or
popa
pop
jo
or
inc
popa
jae
lea
pop
sbbl
call
shrb
jb
xchg
push
adcb
addb
push
adc
mov
popa
sbb
mov
cmpsb
push
push
jb
insb
cmp
out
xor
sbbl
adc
inc
fisubl
add
or
je
insb
inc
or
ds
pop
xchg
rol
sub
cmp
mov
add
xchg
mov
popa
faddl
fcmovb
mov
js
sub
push
bound
cmpb
push
pusha
adc
jo
nop
pop
push
js
orl
and
inc
push
stos
push
or
ds
in
inc
mov
data16
mov
adc
cs
xor
pop
dec
invd
pop
lds
mov
out
inc
jo
add
cmp
add
push
push
mov
fisttps
mov
push
adc
jb
and
loop
popa
pinsrw
xor
push
int3
add
in
inc
shrd
loopne
int
lock
aam
orl
jno
jnp
pushf
out
sahf
test
popa
imul
push
mov
jnp
sbb
push
loopne
sbb
lods
or
inc
mov
in
xor
aas
xor
push
adc
outsl
js
fdivrl
dec
jne
push
mov
and
push
push
fcomps
fsubs
ret
arpl
cmp
aas
test
ret
adc
in
add
div
mov
adc
push
lret
mov
mov
std
in
leave
mov
or
in
ret
push
cmp
repnz
aas
mov
dec
les
lods
adc
lock
xor
ret
stos
mov
movsl
pop
mov
loope
jg
unpckhps
adc
dec
add
or
cltd
mov
pop
pop
or
jg
phaddw
mov
mov
sub
or
orl
test
adc
mov
add
mov
inc
inc
dec
lock
ja
xor
push
inc
pop
add
sbb
or
mov
cmp
jbe
cmp
repz
je
movzbl
push
push
lcall
insb
shr
add
mov
repz
jne
mov
out
add
inc
inc
ds
mov
sub
or
xchg
push
scas
out
and
sti
je
loopne
out
sub
pop
pop
jne
adc
push
cld
lock
jbe
mov
jg
ss
ret
pop
add
xchg
inc
testb
fcomp
push
cmp
xchg
sub
aam
in
push
adc
xchg
ret
jle
sbbb
jo,pn
sub
mov
add
add
int3
ss
jnp
push
adc
or
mov
cli
jg
add
ret
dec
mov
repz
addb
std
jl
jmp
jbe
adc
test
in
mov
sub
clc
push
sub
inc
mov
enter
push
cmp
mov
outsb
insl
sub
xchg
mov
pop
test
mov
and
pusha
filds
repz
fistps
je
je
ljmp
xor
sub
cmp
push
jmp
sub
cld
or
inc
jmp
daa
and
aaa
push
pop
rcll
add
adc
jae
jne
pop
mov
test
inc
in
aas
aaa
mov
stc
loope
jne
add
sbb
iret
nop
in
das
xor
lcall
adc
outsb
add
jmp
add
pop
or
sbb
push
lock
cmpb
xor
and
push
cmp
outsl
clc
or
int3
out
jge
pop
lock
push
mov
cmpb
in
push
mov
xchg
cmp
scas
test
aaa
mov
sbb
sub
std
arpl
mov
adc
jae
cmp
jl
inc
mov
stos
mov
add
push
pop
or
jae
inc
dec
rorl
or
jne
pop
decl
jp
jns
idivl
mov
inc
dec
xchg
ret
dec
aam
sarb
div
dec
ds
ljmp
pop
mov
add
pop
pop
sub
sub
jbe
das
clc
add
sub
jmp
add
dec
jne
push
mov
loopne
popf
std
sub
xor
push
outsb
cltd
mov
cmp
iret
xor
dec
ljmp
xor
jo
pop
mov
negl
andl
mov
sub
data16
add
push
or
push
xchg
fs
xchg
pop
sub
mov
sbb
dec
ja
mov
fs
push
or
fildll
fistps
ret
add
add
sub
in
fcmovnu
add
rorl
fdivr
mov
cmpb
add
push
sub
rcrl
loope
gs
ret
ffree
fstl
ffree
pop
aad
add
stos
jns
add
frstor
push
cmp
orl
loop
and
pop
xor
pop
outsl
cmp
add
push
gs
mov
lret
push
dec
movhlps
and
push
pop
adc
inc
dec
sbb
cmpb
or
mov
or
jo
fnstenv
outsb
pop
cmpsl
fidivl
out
insl
imul
sub
push
shlb
movzbl
pop
aas
inc
js
pop
xor
inc
mov
test
pop
push
and
sbb
pop
lock
pushf
cmpl
fs
dec
mov
lds
mov
push
inc
sub
nop
pusha
testl
loope
pop
add
das
add
movb
xor
xor
and
push
mov
xor
cmp
add
jecxz
push
sbb
inc
js
outsl
push
std
dec
pop
or
xchg
mov
mov
adc
insl
lock
lahf
ljmp
ss
push
push
divl
cmp
pop
addr16
and
nop
add
scas
mov
dec
ret
xchg
aam
cmp
sbb
sub
sub
push
dec
sub
loop
testl
das
les
cmp
adc
cmp
cs
repnz
or
mov
sbb
add
mov
and
add
push
inc
ja
jno
add
xchg
sbb
sbb
insb
out
add
push
mov
mov
dec
push
ds
rolb
fstps
movb
movb
mov
adc
cwtl
scas
push
cmp
repnz
mov
push
pop
pop
jae
rol
imull
popa
lods
in
pop
adc
pop
hlt
mov
bound
sahf
push
add
mov
jns
lret
shrb
add
push
pop
adc
aas
mov
cmp
or
lock
pop
and
jne
negl
enter
repnz
push
hlt
and
dec
inc
cld
rcr
pop
fmuls
mov
lods
pop
jnp
sub
iret
nop
add
push
add
xorb
push
push
inc
jmp
lea
inc
cmpsl
jl
shlb
insl
fwait
adc
and
loopne
inc
sub
mov
adc
add
mov
cmp
fbld
lea
mov
test
test
push
rolb
adc
js,pt
ds
adc
push
pop
addb
cmc
subb
adc
push
fnstsw
fdecstp
and
or
pop
pusha
and
or
test
cs
bound
mov
cmp
je
mov
dec
add
scas
outsl
addr16
stos
mov
scas
sub
loopne
sahf
je
add
push
ret
xlat
popf
jne
dec
ljmp
mulb
xor
mov
loopne
in
xchg
mov
andps
sub
add
aas
inc
jle
lret
dec
imul
cmovle
inc
mov
ss
sahf
xchg
clc
adc
mov
pop
cmp
mov
sarl
into
mov
pop
jg
addr16
int3
jne
test
outsl
lock
in
sbb
cld
jle
hlt
jne,pn
xchg
lcall
adc
addr16
and
js
ss
and
out
xor
cwtl
mov
xorb
pop
jbe
mov
jne
rorl
add
call
push
or
ljmp
push
hlt
clc
cld
push
jne
adc
jmp
dec
cld
imull
out
inc
call
adc
cmp
outsb
and
cmp
jae
mov
lock
mov
ret
nop
pop
dec
in
push
fadd
and
adc
mov
sub
mov
ret
das
lea
daa
mov
mov
push
add
cli
mov
add
jl
not
mov
push
add
clc
mov
scas
je
js
pop
pop
ret
cld
popf
or
dec
adc
pop
dec
adc
inc
sub
pop
cli
mov
push
add
pop
pusha
das
pop
aaa
xchg
dec
out
or
pop
adc
hlt
pop
sbb
push
and
xlat
mov
xor
cwtl
fldl
xor
repz
mov
mov
inc
fisttps
dec
mov
cli
add
out
in
cli
ljmp
cmp
rorb
andl
xorl
jmp
les
rolb
fildl
mov
jne
scas
xchg
inc
jb,pt
incb
pop
inc
inc
dec
je
mov
mov
pop
sub
ret
mov
icebp
jbe
sbb
pop
inc
lods
mov
mov
push
mov
and
shll
icebp
nop
xchg
inc
add
mov
sbb
imul
or
mov
ret
dec
and
mov
jecxz
adc
xchg
test
adcb
lahf
test
sbb
fcompp
inc
cmp
mov
xlat
pop
jbe
pop
loope
dec
jg
mov
add
ficompl
adc
inc
sti
movb
les
and
pop
add
add
add
mov
inc
or
cmp
sub
push
je
mov
push
sub
inc
addr16
xchg
push
mov
or
dec
into
jle
dec
shr
push
add
jge
adc
ja
pminub
and
jne
mov
sub
jmp
push
jp
test
sar
mov
mov
jg
mov
fsubrl
jne
cs
and
lods
jmp
sub
push
dec
mov
fisubs
iret
sub
sub
mov
loopne
dec
mov
xchg
pop
mov
outsl
scas
and
fildl
sub
jae
shll
movsb
xchg
pop
mov
rep
sbb
das
lea
movsl
xchg
pop
pop
mov
sub
loopne
sarb
jb
cmp
ja
imul
mov
add
pop
lods
out
add
testb
movsb
pop
mov
or
jl
inc
loopne
je
ret
je
xchg
ret
and
mov
lcall
pop
pop
sbb
notb
or
xor
mov
lcall
cwtl
mov
repz
popa
out
cltd
push
pop
jns
fisubrs
das
pop
sub
fsubrp
mulb
das
push
js
sub
pop
mov
mov
cmpsl
inc
lea
and
ret
fidivs
cld
dec
stos
sub
je
push
imul
or
imul
cmp
aas
movsl
outsb
adc
icebp
call
add
sbb
mov
stc
push
jne
pusha
xchg
ret
sbb
sbb
cmpl
jbe
mov
aad
or
jmp
xor
inc
cld
xchg
and
jmp
mov
or
mov
mov
jge
and
incl
pop
js
mov
add
inc
mov
cmp
ja
jb
inc
adc
scas
jmp
js
fisubl
jecxz
dec
mov
dec
call
ds
leave
mov
dec
addl
out
mov
stos
lods
les
inc
je
mov
or
fistpll
cmp
mov
dec
je
dec
jl
aas
fcompl
adc
cmp
jbe
mov
push
jne
xchg
adc
ret
inc
fdivrl
pop
mov
inc
lret
xchg
mov
inc
iret
fcom
inc
movsl
dec
sbb
clc
xchg
ret
xor
rcl
sbb
and
rolb
stos
ds
adc
addl
stos
lock
test
mov
nop
mov
int3
int3
xchg
lock
fcoml
sub
mov
cmp
sti
and
lret
or
rolb
push
arpl
push
and
jne
in
mov
sbb
gs
cld
lea
out
jg
scas
mov
dec
fbstp
rorb
aam
add
cmpsb
cmp
cltd
adc
push
cmpsl
test
lea
push
xchg
or
lea
lahf
cs
xor
stos
or
or
pop
test
ljmp
push
or
enter
xchg
push
mov
jp
or
mov
mov
inc
dec
cs
incl
jg
dec
mov
stos
cmp
jne
pop
pop
iret
pop
sub
popa
aam
sub
filds
psubd
mov
sub
repz
faddl
adc
add
push
test
loop
cmp
add
loopne
push
daa
dec
adc
jb
rorb
fidivrl
mov
movzwl
sub
bnd
sbb
dec
int3
pushf
add
add
inc
inc
mov
sub
adc
sti
mov
add
ja
movswl
mov
add
lea
popf
mov
or
rorl
out
sub
cld
jmp
inc
popf
push
js
loopne
pushf
loop
dec
inc
dec
inc
dec
lods
or
shrl
xor
jge
out
sbb
std
mov
aam
adc
jg
test
clc
cmp
jl
pop
sbb
je
cmc
jbe
cmp
sbb
stos
jmp
inc
inc
mov
je
stos
loop
movlps
pop
pop
inc
clc
imul
push
mov
and
mov
es
sbb
ss
jbe
sub
add
leave
mov
mov
lods
roll
add
aam
mov
insl
cmp
add
jb
mov
ret
add
scas
je
mov
dec
adc
div
mov
inc
test
jne
sbb
or
fldt
pop
in
stos
xor
call
imul
or
je
inc
jne
pop
ret
inc
mov
mov
ret
xchg
repnz
sbb
aam
or
repnz
loope
push
in
lret
adc
pushf
fwait
inc
sahf
iret
mov
pusha
push
inc
je
push
push
cmp
sub
fmuls
sbb
xor
lock
add
or
jns
pop
inc
loop
push
mov
cmpsl
add
cmp
ret
and
inc
add
and
and
adc
and
popf
outsl
mov
sub
inc
sub
sub
fucomp
int3
push
sbb
and
sub
lahf
addr16
sub
xor
sub
cmp
in
xor
fldenv
fwait
add
dec
je
fstpt
iret
adc
subl
sub
testl
jge
fimull
cmpl
iret
mov
movb
je,pn
cmp
hlt
imul
mov
out
fabs
push
scas
ds
movlps
movsb
pop
frndint
rcr
scas
insb
or
fstps
push
negb
je
fidivl
out
fistps
call
or
mov
nop
shr
and
pop
loope
pcmpgtd
jmp
shrb
add
jns
lcall
out
outsl
or
cmpb
jb
movb
js
decb
outsb
mov
ja
jmp
call
loopne
adc
cmp
inc
xor
out
push
pusha
push
or
shr
mov
add
mov
adc
mov
pusha
cmc
push
adc
adc
out
pop
into
rorl
je
test
in
xchg
ficompl
add
jmp
in
lock
pop
mov
cmpsl
sbb
jae
dec
add
in
inc
loopne
push
in
insl
or
call
or
mov
jmp
loope
sbb
setnp
movsb
rcrl
sub
pushf
and
mov
dec
sub
cmp
jg
cmp
inc
or
ljmp
enter
roll
divl
add
jmp
mov
sbb
or
scas
inc
test
pop
sub
shl
sbb
mov
f2xm1
fwait
hlt
pop
mov
fldz
cmpsb
xchg
ljmp
inc
stos
sti
dec
lods
or
icebp
daa
lcall
pusha
jne
inc
sbb
dec
and
fistpll
jne
inc
push
sub
cwtl
jne
mov
ret
or
push
sahf
add
jg
frstor
loopne
adc
aas
jmp
fstpt
ss
push
add
or
mov
sbb
push
push
test
insl
dec
adc
and
push
int3
sahf
incl
add
mov
cmp
jae
fcmovu
in
add
add
jmp
aaa
add
add
mov
negb
es
loopne
call
inc
imul
push
cmp
iret
fsubs
call
inc
lds
sbb
adc
insb
push
cmp
xor
stc
mov
mov
mov
sbb
popl
mov
pop
add
and
push
in
adc
sbb
mov
fcomps
sbb
or
inc
dec
cmp
sub
aam
bound
pop
insb
jg
cmp
je
subb
fwait
cmpsl
push
fstps
bound
mov
push
in
cmpsb
xchg
xor
cmp
inc
or
cli
in
push
adc
dec
adc
mov
divl
push
adc
sbb
xchg
test
rcrb
clc
and
hlt
inc
sarl
or
cmp
inc
stc
inc
arpl
cmp
sub
add
imul
pop
mov
call
cmp
fdivs
add
mov
fstpl
fwait
pop
dec
mov
lock
pop
push
mov
movsb
dec
fisttps
xor
xor
xchg
pop
mov
add
push
mov
pop
fnstsw
nop
out
or
mov
pushl
add
push
jnp
fmuls
mov
lret
cmpsl
inc
inc
cmp
lret
fcomps
cmp
fdivl
and
call
imul
and
out
dec
adc
mov
adc
and
or
adc
mov
dec
shrb
subb
shl
std
add
movsb
jg
cmc
das
or
add
lea
incb
jb
ljmp
and
xor
js
or
jb
sti
insb
cli
cmp
adc
bound
orb
orl
mov
incb
jne
sub
dec
mov
aas
add
cltd
idiv
imul
sbb
repnz
ds
ds
add
pusha
or
sub
daa
loope
std
std
lds
inc
xor
mov
or
jle
pop
add
pop
pop
pop
push
ret
pop
mov
and
dec
in
test
jg
fmul
in
rcll
cmp
hlt
sbbl
mov
fistpl
pop
inc
inc
dec
data16
fs
jl
addl
push
jl
mov
and
je
mov
pop
xchg
mov
add
or
dec
lock
mov
cmp
fcoms
pop
lods
insb
jae
repnz
pop
sub
loopne
sub
or
cmp
fmuls
lock
xor
ret
js
or
push
pusha
loop
dec
mov
jb
adc
sub
fildll
mov
ds
hlt
and
hlt
mov
stc
pop
mov
sbb
jbe
or
insb
adc
dec
mov
xchg
pushf
pop
jge
fwait
loope
ret
cmp
addr16
xchg
lods
dec
and
rcrl
push
scas
das
or
test
push
adc
push
sub
fidivrl
inc
outsl
sub
rcrl
fidivrl
ja
mov
and
xchg
add
xchg
jnp
cwtl
xor
fldt
popl
sti
xchg
inc
pop
aas
lahf
jbe
cmp
jle
push
shl
shl
or
mov
call
mov
and
rcrb
arpl
sbb
cs
faddl
mov
push
dec
fnstcw
mov
dec
sti
je
insb
inc
lds
in
mov
inc
hlt
out
push
cmpb
mov
movb
add
add
jg
mov
push
lea
or
xchg
repnz
movb
sub
outsl
jecxz
cs
mov
push
mov
out
ljmp
jecxz
xchg
add
add
test
add
inc
js
sahf
cltd
rclb
and
pop
cwtl
mov
inc
push
add
ret
dec
shrb
lods
test
inc
mov
jnp
xchg
push
mov
pop
decl
mov
je
or
mov
cmpsb
add
aas
add
sarl
mov
cmp
dec
pop
add
sub
adc
cmp
and
add
dec
and
xor
jge
cs
cmp
mov
sbb
xor
enter
ljmp
imul
cmp
addr16
iret
test
stos
jmp
jg
int
inc
enter
or
ret
stos
loope
xor
jne
inc
cmpb
jne
push
or
jo
or
and
stos
out
xchg
out
sub
jns
pop
add
add
fmuls
inc
fadds
in
pusha
inc
or
cmp
pop
mov
outsb
add
sub
incl
mov
adc
jecxz
push
enter
mov
mov
pop
inc
cmp
insl
cmc
push
or
cmp
pop
repnz
sahf
nop
jns
mov
andb
jae
mov
cmp
jne
cmp
jne
mov
xor
data16
rcll
xchg
xchg
mov
std
ret
sub
jmp
or
dec
dec
pop
push
or
iret
decl
add
add
or
jnp
jnp
or
push
adc
jbe
scas
sbb
jns
jg
in
mov
insl
lock
push
shl
or
mov
and
mov
mov
cltd
xor
loopne
test
std
inc
subb
mov
sub
dec
push
lea
mov
cwtl
fcompl
adc
lcall
hlt
dec
mov
push
insl
sub
rcrl
test
mov
into
fmul
mov
ret
dec
add
jmp
out
aad
fldl
cs
shll
lahf
adc
or
dec
xchg
fists
and
nop
es
fwait
or
lds
pop
and
aaa
mov
loope
bound
sahf
into
stos
lock
addb
mov
jg
je
mov
add
out
sbb
pop
sub
je
pop
je
jmp
cmpb
dec
mov
cmp
in
jmp
movsb
sub
adc
arpl
mov
add
adc
loope
add
lods
cmp
popa
mov
ljmp
outsb
dec
push
data16
or
adc
in
or
or
adc
or
or
fcoml
fcomip
fcoms
lea
call
mov
xchg
mov
and
lret
in
test
push
rcl
jb
adc
ljmp
pop
cmp
jae
push
and
inc
xlat
push
jns
add
push
xchg
add
jns
stc
push
roll
jmp
and
nop
add
xor
xchg
jb
push
cltd
lea
sub
out
xor
xchg
pusha
mov
adc
sbb
or
or
lods
into
adc
popf
add
cmp
insl
int
imul
push
std
cmp
jmp
sbb
push
test
jnp
jo
fucomi
add
or
mov
sub
add
mov
repnz
cld
sub
imul
adc
jns
pop
sbb
clc
inc
mov
pop
iret
mov
outsb
imul
int3
jmp
inc
dec
das
push
dec
popf
mov
push
adc
push
mov
lcall
insl
mov
add
into
in
iret
jne
or
mov
lea
mov
decl
mov
inc
mov
fists
ja
outsb
mov
and
push
push
jo
cmp
jg
imul
mov
je
dec
pusha
inc
mov
adc
and
mov
mov
bound
and
vandps
push
ljmp
jnp
mov
adc
sub
jae
pop
jb
mov
pop
pop
xchg
jle
scas
or
add
mov
cmp
mov
fsubrp
testl
sbb
and
push
adc
mov
dec
cmp
sbb
inc
insb
inc
mov
inc
test
icebp
js
cmp
mov
arpl
test
adc
in
sbb
cltd
pop
push
mov
out
xchg
push
lret
fcompl
pop
push
cli
pop
in
cmp
jne
incl
int3
dec
cmp
fcoml
cmpsl
mov
shrl
inc
notrack
sub
je
dec
je
sub
ljmp
je
jmp
mov
jmp
push
push
push
faddp
outsb
and
jbe
push
inc
mov
jle
fadd
or
xor
pop
ret
mov
cmp
pushf
mov
xor
jg
jl
bound
push
mov
bound
or
sub
mov
rcrl
jmp
sub
rclb
pop
cmp
xchg
cmp
cmp
mov
std
mov
sub
add
fs
idivl
hlt
imul
add
cmpl
jle
adc
pop
and
je
push
push
out
cld
gs
xchg
psubusb
loopne
jecxz
sbb
or
pop
sbb
inc
out
mov
add
test
stos
ror
inc
mul
push
nop
data16
test
jne
icebp
jo
je
hlt
mov
int
and
insl
and
ret
js
fsubr
lret
in
cmp
mov
into
popa
movsl
cmp
fsubrs
or
mov
hlt
lods
mov
pushw
fcomps
and
add
jmp
bnd
daa
nop
add
add
lock
addl
bound
adc
jmp
jmp
mov
and
in
call
mov
hlt
push
sbb
mov
ss
repnz
sbb
jmp
push
bound
mov
adc
push
jmp
cmpb
ja
mov
sub
push
push
mov
data16
div
ja
lock
add
cmpb
jle
and
fs
jne
jo
mov
mov
add
or
xor
pop
jle
push
or
cmp
enter
aaa
xor
lods
dec
sbb
cmp
fwait
pop
mov
and
xor
test
jne
fmul
or
sarl
push
mov
fstpt
fsubrl
fiadds
movsb
imul
xor
mov
das
xor
inc
repnz
out
dec
xchg
adc
sti
adc
add
mov
gs
add
add
push
stos
hlt
aad
inc
repnz
fildl
stos
push
push
dec
frstor
ja
dec
jnp
sbb
jmp
push
enter
mov
cmp
ljmp
sub
add
xorl
mov
push
xor
or
or
lret
cwtl
testb
iret
je
orl
add
fs
add
add
and
mov
push
lock
out
xchg
mov
and
dec
inc
pmaxsw
jo
or
jne,pt
add
pop
sbb
sub
and
pushf
or
and
push
add
and
and
mov
mov
mov
int3
test
pop
push
pop
push
adc
fildll
mov
icebp
movsl
in
sub
xchg
cmp
sbbb
addr16
inc
ds
in
mov
jno
aaa
dec
sti
js
adc
lock
sbb
mov
push
cmp
ret
jne
aas
jle
xor
cmp
sbb
sbb
stos
fstpl
fwait
jmp
je
mov
sbb
mov
fucom
add
jp
pop
outsl
push
dec
push
push
xchg
xor
popf
adcb
jmp
jns
push
add
sub
jb
adc
movd
or
xchg
jmp
jno
fwait
lret
jp
shlb
out
inc
int
mov
adc
das
popf
or
movb
xor
or
fldt
cmp
arpl
push
addl
mov
add
adc
leave
movsl
pop
arpl
out
add
push
push
pop
or
adc
mov
push
add
xchg
mov
aam
jecxz
lods
cmp
or
or
jge
mov
mov
rorl
inc
inc
lahf
addb
lret
fcomps
dec
inc
push
imul
in
mov
inc
loop
cmp
or
daa
sub
pop
add
pop
push
xchg
push
pop
and
xor
in
faddl
xchg
popa
loope
dec
call
ret
es
call
out
sbb
aas
xor
sbb
xchg
add
jl
je
xchg
adc
popf
insl
or
rolb
adc
adc
jne
add
ret
js
pusha
inc
cmp
cmp
sub
incl
jnp
lds
jl
add
mov
leave
mov
jmp
mov
in
xchg
dec
add
mov
dec
sarb
or
push
fcmovu
jbe
pop
shrb
add
pop
adc
fcoml
or
jmp
outsl
cli
dec
jne
push
push
and
orb
rol
leave
mov
ja
xor
push
subb
push
pop
sahf
adc
xor
add
es
clc
test
cmpsb
or
jb
sub
clc
xlat
add
and
subb
sbb
je
scas
ret
push
sbb
nop
lcall
add
mov
cwtl
jno
xchg
cs
sbb
ds
pusha
mov
getsec
jg
lods
add
stc
push
jg
mov
mov
scas
inc
cmovp
jle
xchg
inc
sahf
dec
xchg
adc
ret
add
push
mov
push
jns
pop
jmp
push
xor
jmp
xchg
dec
push
add
in
jle
into
mov
inc
repnz
mov
ja
push
add
mov
push
add
aas
gs
pop
sub
and
mov
aas
imulb
mov
or
fcmovbe
push
sbb
add
dec
clc
cmpl
cwtl
aaa
out
flds
idivb
mov
enter
cmp
inc
and
or
popf
cmpsb
dec
imul
rolb
repz
ss
ret
pop
xchg
test
push
ret
and
or
xchg
hlt
push
es
sub
rol
and
es
mov
add
shrb
push
pop
mov
movsl
loopne
push
cld
dec
adc
test
popa
mov
adcl
sbb
or
movb
iret
in
mov
push
xor
mov
mov
cmp
mov
out
xchg
int3
sahf
stc
push
lea
sar
or
pcmpgtd
add
push
or
or
ret
shlb
cmp
clc
pop
mov
sbb
xchg
sbb
inc
and
xchg
fldt
mov
mov
mov
cld
hlt
mov
enter
pop
adc
les
fisttpll
jmp
push
cmp
aam
push
sbb
sub
lahf
and
rcl
into
mov
pop
in
das
in
add
or
inc
add
sub
fildl
test
sub
push
mov
xlat
add
mov
ror
gs
addl
adc
sbb
pop
sbb
adc
xchg
inc
xchg
test
dec
xchg
xchg
fwait
lds
inc
xor
mov
inc
sbb
rolb
xchg
pop
cmpb
mov
or
adc
gs
mov
or
nop
dec
fcoml
pop
scas
inc
aas
xor
gs
lods
out
jbe
mov
jg
cmp
sbb
pop
sub
sub
sbb
mov
pop
fcoms
or
and
jo
pop
addr16
or
fxsave
dec
cmp
and
jg
adc
ljmp
inc
movsl
insl
inc
jmp
push
pushf
and
lea
inc
or
in
jp
jbe
jb
mov
mov
xor
daa
loopne
push
js
sbb
cmp
lods
mov
add
lahf
lods
xchg
rol
aad
sbb
lret
fnstenv
or
jge
nop
fucomi
mov
push
loopne
xchg
or
stc
lock
loopne
int3
and
adc
push
sbb
outsl
cmp
insb
loopne
int3
pop
insl
add
and
and
rol
add
nop
loop
dec
mov
scas
into
les
addb
add
pop
push
push
dec
jle
jg
dec
je
jmp
xor
inc
xor
sub
jmp
and
add
xor
ret
mov
add
push
pop
or
xor
or
push
push
repnz
js
iret
mov
push
mov
seto
adc
mov
leave
pop
xorb
inc
lret
jg
mov
adc
movaps
jb
leave
mov
inc
fcoml
jae
daa
jl
adc
sbb
or
or
sbb
loope
xor
aad
xor
rcrb
fs
inc
push
jmp
adc
in
in
inc
add
pop
pusha
scas
sbb
jnp
jae
pop
mov
push
enter
rcr
add
repnz
aam
sub
mov
roll
lea
mov
add
jmp
sub
push
mov
mov
xchg
test
add
and
nop
cltd
mov
lret
cs
push
dec
dec
int3
aad
and
dec
xlat
sub
jns
gs
cld
std
jne
lods
call
add
sub
into
sbb
and
addl
pop
or
sub
aam
mov
jl
lock
nop
pop
mov
cmp
out
mov
push
in
adc
jp
sbb
adc
dec
and
mov
dec
adc
add
fwait
xlat
leave
xchg
mov
sub
push
data16
lock
sbb
add
push
stos
mov
adc
adc
and
mov
fbld
inc
inc
pop
lret
movl
test
add
pop
loope
dec
iret
cwtl
daa
sbb
adcl
fwait
pushf
mov
pop
inc
pushf
pushf
adc
into
cltd
ret
aaa
faddp
or
mov
adc
push
stc
or
and
inc
adc
cltd
push
push
xchg
push
daa
push
insb
cmp
out
pop
sbb
inc
adc
push
lahf
std
inc
aaa
mov
rolb
sbb
das
add
repnz
mov
aam
ret
mov
je
enter
out
mov
loopne
int3
mov
jl
pavgw
aam
jne
cmp
add
or
call
rolb
loope
jnp
lds
sbb
pop
push
sbbb
jae
and
orl
js
popf
lret
mov
dec
xor
add
jns
stos
sub
push
jbe
and
mov
sbbl
movsl
int
addb
rcrb
daa
jle
data16
adc
mov
aad
or
rclb
or
dec
jmp
dec
fcoms
pusha
mov
xor
jmp
and
loopne
xor
jns
dec
or
inc
pop
push
add
add
add
and
mov
xlat
loop
rolb
je
jmp
adc
test
mov
js
push
jle
leave
cmp
daa
lcall
jmp
sbb
adc
sbb
jl
xlat
leave
inc
inc
jbe
in
pop
jg
mov
scas
das
adc
mov
and
push
add
and
dec
inc
rcrb
inc
jge
push
mov
shlb
xchg
xchg
inc
inc
scas
andl
and
sbb
lret
mov
pop
pop
hlt
fucom
addl
and
push
push
stos
xor
xor
dec
and
ret
arpl
inc
andl
xor
inc
jle
fildll
push
cli
inc
enter
in
cmp
test
pop
lods
jg
cmc
jg
xchg
xor
decl
add
fwait
movl
jns
mov
mov
mov
jns
scas
pop
test
ret
sub
pop
loopnew
aaa
push
daa
push
xor
lods
scas
das
pop
and
cmpl
dec
or
xchg
sub
popa
push
movsb
jae
push
dec
push
sbb
adc
fsubrs
shlb
or
mov
adc
fidivl
dec
incl
inc
mov
sub
mov
in
push
aas
adc
cmp
jl
or
sub
bound
inc
jmp
mov
push
sbb
and
inc
sahf
jge
sbb
popa
jl
insl
ja
iret
adc
inc
sbb
repnz
and
jl
rol
lds
cmpb
push
jo
add
cmp
adc
mov
push
andl
aam
adc
je
scas
push
push
daa
push
inc
scas
or
pop
inc
inc
in
add
imul
dec
shrb
cmp
jbe
mov
bound
push
aaa
dec
xchg
outsb
ret
lods
dec
fildl
mov
hlt
rcrb
mov
mov
fsubrs
inc
loopne
xor
adc
jo
inc
inc
jne
addl
or
xchg
sar
pop
mov
dec
imul
and
mov
push
fstpl
pop
xchg
fdivs
adc
hlt
add
and
fisttps
in
push
mov
fwait
pusha
xor
push
icebp
incl
aaa
push
mov
sub
jb
inc
mov
inc
pop
js
pop
sti
stos
sbb
lret
jne
int
ret
test
or
inc
jne
mov
test
mov
clc
pop
ja
push
pop
or
or
inc
xor
mov
push
or
test
dec
add
pop
lret
hlt
mov
mov
cmp
mov
jo
jo
call
call
dec
add
mov
shl
add
test
imul
push
in
or
je
mov
push
cmp
inc
ja
mov
or
nop
test
loope
repnz
popa
mov
call
inc
cmp
jnp
cmc
lea
and
adc
scas
mov
loopne
cmp
xchg
rorl
cmpsl
insb
ss
lret
jg
jne
jmp
push
cmp
arpl
push
and
fimull
xor
arpl
add
cmp
leave
sub
jne
push
loop
xlat
in
movsb
pop
lahf
aam
lods
adc
pop
scas
in
les
jo
lcall
xor
out
lock
push
orb
mov
and
sub
cmp
call
mulb
mov
mov
mov
dec
mov
sbb
mov
insl
das
mov
rcrb
pop
fmul
int
xchg
js
scas
pushf
loopne
nop
xor
iret
ss
add
and
mov
repnz
fcomp
mov
push
fldenv
mov
cwtl
sarb
sub
shlb
jns
mov
sub
xchg
pop
int3
mov
add
and
enter
add
xor
inc
sbb
sbbb
leave
xchg
rolb
bswap
mov
fsubr
cs
xchg
mov
push
mov
jb
cmp
cmp
test
or
dec
lea
push
add
xlat
test
mov
sbb
outsl
push
insl
das
fs
push
loopne
fistl
fs
out
aaa
cltd
mov
add
pop
jo
sbb
cmc
pop
push
and
jbe
dec
pop
sbb
dec
ja
int3
pop
push
cmp
sbb
dec
dec
out
in
enter
pop
push
fldcw
jmp
aas
testb
je
scas
jmp
pop
lea
adc
adc
nop
mov
pop
sub
adc
daa
xor
movsb
inc
sub
jp
hlt
test
cmc
sub
mov
jge
add
es
daa
adcb
in
dec
jmp
sbb
xchg
pop
and
add
inc
mov
mov
data16
flds
inc
out
mov
outsl
xchg
je
inc
dec
mov
mov
cmp
leave
cld
ds
icebp
sbb
adc
adc
pop
and
sbb
addb
lcall
in
or
call
test
dec
push
xchg
add
movsl
popf
pushf
xor
mov
cmpsl
mov
sbb
push
ret
fmuls
lods
icebp
inc
repz
xor
orl
repz
testl
push
xchg
push
cmpsl
shr
push
and
fstps
add
xchg
xor
or
loope
orb
or
jb
gs
jo
adc
mov
xchg
lock
mov
inc
inc
call
dec
ret
xchg
mov
sti
mov
sbb
out
or
testb
push
lret
insl
inc
or
and
mov
sbb
inc
cmp
jne
cli
and
mov
push
xlat
sub
fstpt
sub
inc
or
cmpl
mov
inc
jmp
es
mov
lahf
les
je
mov
mov
jmp
jnp
add
fsubr
or
loopne
push
imulb
call
jne
push
mov
push
mov
inc
movl
lea
insl
or
lret
adc
add
mov
hlt
mov
mov
gs
je
xorl
lea
xchg
test
adc
jle
popa
pop
sbb
outsb
das
repnz
add
hlt
xor
cmp
or
sub
movl
jp
add
enter
pop
mov
sbb
pusha
int
inc
sahf
xorl
xchg
ja
pushf
lcall
mov
lret
cs
cltd
adc
cmp
idiv
mov
pop
mov
enter
outsl
dec
push
sbb
pop
add
adc
loop
les
clc
mov
jnp
ja
je
popa
rorl
outsl
sub
js
mov
test
push
ds
mov
lea
lret
sbb
mov
dec
dec
sbb
loop
call
data16
push
jns
roll
in
aam
orb
or
ficoms
sete
incl
xor
xchg
adc
testb
sbb
jnp
mov
inc
shr
int
or
sbb
lret
add
xchg
movsl
pop
lock
xor
inc
or
add
cmp
rorl
cmp
jmp
and
rcl
inc
aad
add
test
dec
mov
inc
lcall
aas
ja
and
aad
or
dec
sti
lods
cltd
pop
out
test
mov
cmp
loopne
stos
jmp
insb
adc
test
incl
pop
ret
fidivl
xchg
jecxz
inc
inc
pop
jo
outsl
bound
add
pop
shlb
xor
add
jns
jge
fistpll
xchg
jo
jle
push
xor
aam
std
cmp
and
adc
cmp
and
insl
fdivs
jne
movsb
dec
sahf
ja
pop
lret
inc
test
inc
sub
jnp
inc
cmp
push
loopne
jge
and
insl
rclb
and
mov
pop
out
aas
inc
dec
pop
popf
arpl
pop
roll
mov
ret
int3
stos
add
lret
data16
add
rclb
cmp
adc
xchg
push
pusha
loopne
mov
fsubrs
iret
jnp
enter
push
pop
mov
cmp
test
aam
push
jo
cmp
negl
movsb
mov
jnp
repz
jl
cs
jle
idivl
mov
pusha
push
call
stc
fisubrs
jle
repz
jns
adc
scas
adc
xor
repz
sub
mov
jns
mov
add
jl
sbb
push
xchg
iret
enter
mov
adc
or
or
add
push
daa
out
popf
mov
iret
enter
inc
clc
push
jo
hlt
pop
repnz
sahf
xchg
pop
lock
in
inc
mov
call
add
jae
mov
adc
inc
fdiv
dec
sahf
aam
shrb
add
sahf
xchg
ja
push
mov
sbb
fmulp
jae
mov
cs
out
out
mov
cwtl
mov
fwait
cmp
insb
lods
ja
test
mov
movsb
pop
test
daa
iret
pushf
adc
out
mov
jbe
leave
xor
popf
push
mov
pop
in
jg
loopne
fiaddl
push
iret
adc
das
jl
lret
mov
pop
bound
aas
xchg
movb
and
xchg
out
xchg
pop
adc
add
rclb
nop
adc
int
add
add
sbb
cmp
pop
pushf
push
daa
cmpsl
jge
orb
or
jb
iret
fsubl
or
jb
addb
enter
pushf
xchg
nop
xchg
inc
push
jb
fadds
les
fdivrl
fidivs
nop
in
and
xor
sub
push
loope
sbb
lahf
adc
gs
jl
outsb
xor
xor
xchg
push
mov
add
jbe
adc
in
xor
outsb
xchg
add
jge
dec
dec
js
inc
cmpl
enter
mov
inc
dec
mov
mov
out
aad
pop
ret
dec
rclb
jl
xchg
dec
or
iret
mov
enter
xchg
add
sbb
push
adc
mov
test
jg
out
fwait
cmp
push
ret
pop
adc
sub
xor
rorb
out
add
out
dec
push
test
adc
mov
xchg
sub
es
clc
jecxz
call
movsb
clc
clc
lea
jge
sti
loopne
add
sbb
adc
mov
std
adcb
xlat
push
mov
and
imul
sbb
inc
imul
aam
sbb
jb
jns
pop
popa
xor
jecxz
call
pusha
nop
fbld
jmp
mov
loope
pop
adc
jmp
call
mov
dec
or
divl
imul
adc
adc
test
out
add
mov
aaa
punpckhbw
cmp
push
xor
sbb
cld
sbb
and
jmp
sub
add
ret
push
jecxz
fnstsw
ror
push
mov
pop
mov
leave
and
nop
sub
xor
push
mov
mov
leave
and
inc
mov
leave
and
dec
mov
dec
xor
xchg
dec
xor
les
dec
xor
and
jl
mov
test
mov
mov
and
pushf
dec
push
mov
loopne
dec
push
mov
out
mov
rcr
dec
repnz
in
lock
cld
hlt
xor
mov
in
clc
push
push
scas
add
jne
push
leave
sarb
mov
push
lcall
add
outsl
je
mov
fs
jne
das
dec
jne
inc
fs
lret
imul
fs
outsb
inc
mov
add
jb
insl
jo
inc
fs
mov
push
je
pop
push
cmp
and
jns
adc
add
adc
inc
jns
ss
jae
pop
outsl
pushf
in
scas
mov
dec
in
xor
test
add
sbb
or
scas
cmp
add
and
pop
add
adc
subb
in
mov
mov
mov
add
outsb
add
xor
sti
loopne
inc
push
pop
push
jo
movsb
test
imul
pop
dec
fmul
repz
shrb
inc
or
mov
push
and
inc
jne
dec
inc
cmp
pusha
mov
nop
dec
testb
test
jmp
call
inc
jl
lods
add
adc
adc
fsubs
and
add
mov
add
in
mov
sbb
ret
xor
dec
div
subl
or
hlt
int3
int3
flds
ds
repz
mov
int3
out
lcall
lret
mov
jg
push
mov
sub
push
sbb
in
pushf
inc
aam
adc
nop
pusha
jl
mov
arpl
pusha
cmp
push
sbb
andl
imul
xor
inc
cmp
pop
jnp
mov
adcl
imul
xlat
pushf
pushf
ret
pop
adc
test
add
lods
xor
and
inc
mov
pop
push
fisubl
enter
mov
adc
or
sub
push
sub
jo
nop
repnz
xchg
fs
mov
nop
or
mov
in
add
iret
rolb
clc
inc
jb
cmp
pusha
repz
repz
add
fsubl
sbb
dec
insl
jo
mov
adc
sub
sub
sub
adc
pop
test
divb
mov
into
mov
push
sub
mov
out
nop
imul
repnz
mov
jno
cld
ficoms
inc
xor
les
hlt
mov
pop
pop
in
in
in
adc
in
mov
lret
xorb
jno
aaa
mov
dec
outsb
iret
cwtl
or
call
jns
pusha
cltd
es
mov
nop
dec
push
cmpb
add
loop
nop
adc
and
in
out
xchg
inc
and
jmp
sbb
sub
push
mov
pushf
add
xor
negb
and
in
adc
add
inc
rorb
and
int
or
add
jg
fwait
add
enter
es
sub
mov
call
fildll
dec
je
sbb
xchg
push
fs
leave
jbe
push
nop
es
jbe
add
push
fldl
cmc
mov
pop
stc
pop
inc
push
jl
dec
pop
in
fidivl
aas
clc
mov
pop
in
in
stos
hlt
mov
icebp
in
enter
fs
inc
repnz
enter
test
in
adc
leave
jae
scas
call
js
cmp
sbb
rcrl
lea
jmp
inc
xor
cmp
jmp
mov
movl
or
cmpsb
push
les
fdivs
xor
fmul
out
pop
adc
xor
jo
sub
mov
dec
loopne
mov
mov
sbb
mov
fcomp
push
push
mov
xchg
add
cmpsb
push
and
mov
rcl
clc
jmp
adc
adc
enter
and
aas
push
orb
dec
sbb
fs
mov
cli
jmp
xor
daa
jmp
inc
test
add
push
rorb
shll
adc
seto
inc
hlt
inc
cli
and
fsubl
xor
fs
daa
add
pop
xor
adc
or
xchg
add
cld
sbb
setg
dec
inc
and
ss
negl
nop
sti
cltd
cmp
incl
popf
inc
insb
jnp
and
pushf
xchg
jne
sub
insb
test
jmp
push
or
les
mov
insl
xchg
adc
mov
pop
mov
call
cld
test
test
sti
jo
mov
add
outsb
push
add
pop
sub
shlb
xor
maskmovq
imull
mov
test
dec
xchg
pop
data16
sti
les
adc
dec
xchg
cmpsl
arpl
and
inc
jo
out
mov
lock
or
lock
les
xor
lea
inc
jg
jo
repnz
into
jle
test
lea
shlb
mov
adcl
inc
pop
dec
inc
inc
dec
push
jbe
sahf
jmp
inc
mov
mov
pop
insb
lahf
mov
push
dec
jnp
pop
cwtl
mov
sub
in
test
aaa
sbb
cmp
cmp
lahf
mov
push
cld
aad
loopne
and
sti
pop
imul
adc
or
sbb
clc
push
jp
jne
dec
jnp
shlb
imul
add
push
adc
push
jbe
popf
xor
div
and
sbb
xchg
iret
add
xchg
xlat
and
roll
and
pop
ret
or
add
jne
adc
inc
or
pop
ret
aas
in
push
push
in
sub
test
clc
fimull
nop
mov
mov
mov
in
or
adc
adc
loopne
dec
scas
nop
add
in
inc
inc
cs
xchg
inc
je
lret
std
stc
push
push
jno
xchg
mov
test
in
inc
jbe
adc
jb
and
or
nop
cmpsb
dec
call
imul
mov
sub
pop
aad
sub
jmp
push
fildl
or
out
lock
cwtl
and
rcll
decl
cmp
enter
inc
jns
pop
xchg
add
movsl
xchg
adc
push
and
dec
incl
cmpsl
sbb
js
mov
movsb
xor
xor
sbb
adc
jg
add
inc
in
test
sub
aam
push
arpl
je
sbb
sub
or
pop
loopne
aas
or
ss
jne
inc
adc
movsl
push
insl
or
mov
add
or
das
mov
or
int3
lahf
out
or
and
cmp
lret
insb
fmul
dec
inc
xchg
and
xchg
test
repnz
dec
rorl
push
movsb
push
add
push
lds
ret
dec
mov
cwtl
pop
jns
inc
sub
mov
outsl
xor
cmp
adc
xchg
push
adc
mov
add
add
jns
cmpsl
cmp
add
jno
repnz
inc
mov
jns
insl
daa
out
clc
or
clc
xlat
and
ret
mov
mov
shl
pop
daa
mov
inc
mov
push
and
faddl
stc
sbb
inc
xor
mov
mov
js
xchg
fbld
push
ficompl
rclb
pop
addr16
arpl
xchg
xchg
data16
jl
mov
imul
mov
pop
ja
pop
pushl
stos
xlat
dec
fwait
push
js
push
jecxz
loopne
aaa
inc
icebp
ret
rcrb
jl
sub
jmp
xchg
push
cld
add
orl
jecxz
bound
scas
testb
lret
hlt
add
push
jae
lods
xor
or
inc
xor
jp
mov
or
sbb
cwtl
xlat
icebp
ljmp
fidivrs
sub
and
test
rorl
dec
mov
mov
dec
jmp
adc
fisubrl
setae
or
imul
aas
adcb
enter
xchg
mov
sbb
sbb
xor
scas
push
add
cmp
or
enter
push
xor
and
in
das
insb
int3
dec
mov
pop
sub
insl
adc
sub
lret
push
mov
clc
les
push
push
mov
sub
mov
xor
nop
popa
jae
pop
push
push
pop
push
pop
popf
popa
sti
pop
aas
nop
add
addb
mov
mov
cmpb
pop
repnz
push
lds
push
clc
xlat
sbb
es
pop
js
rorl
aaa
aam
sbb
or
xor
pop
pop
lock
or
lret
add
cmp
sbb
sub
imull
xlat
sbb
adc
mov
iret
repz
adc
sbb
inc
pusha
jp
out
cmp
scas
cs
inc
mov
data16
pop
daa
shl
push
clc
aas
dec
mov
push
data16
sbb
cmp
rcl
add
daa
movsb
dec
or
xlat
loopne
jb
pop
ljmp
in
jmp
add
sub
or
fimuls
jecxz
add
js
fstps
fwait
and
or
loopne
fstpl
idivb
leave
xor
mov
ret
jb
daa
push
push
mov
repz
or
aas
xor
pop
mov
cld
push
inc
jmp
and
lods
pusha
jmp
fwait
add
lock
and
add
jmp
adc
cmpb
je
dec
andnps
out
dec
js
adc
mov
pop
and
push
das
out
lret
fbstp
sbb
inc
push
push
cmp
xchg
xlat
add
ds
mov
jecxz
jp
fsubp
or
sti
std
jg
sub
xor
repnz
clc
fcomip
lea
adc
adc
push
sbb
shll
push
data16
xchg
or
pop
or
and
inc
stc
cmp
lods
or
fiaddl
dec
and
add
jle
push
adc
hlt
ror
pusha
scas
fists
add
pop
cmp
mov
or
in
and
add
scas
sbb
pusha
das
xchg
inc
add
mov
push
cmp
push
je
push
outsl
push
test
call
or
pop
out
adc
and
mov
mov
aad
inc
mov
arpl
iret
repz
rcl
out
cmp
jmp
or
dec
sahf
idivb
or
sahf
out
jbe
xchg
xchg
movsl
mov
ljmp
and
xchg
pop
xchg
data16
aas
imul
mov
jae
mov
fldenv
pushf
push
sar
cmp
pop
push
jb
inc
jnp
cwtl
inc
fnsave
push
push
push
test
sbb
and
enter
jo
int
ljmp
outsb
inc
add
mov
pushf
clc
sub
add
pop
dec
je
jmp
outsl
gs
sbb
rcrl
inc
adc
and
mov
addr16
pop
repz
out
or
fdivr
and
fidivs
jle
lock
out
jbe
or
scas
mov
jo
mov
ret
pop
push
pop
insb
mov
fldcw
mov
push
leave
fstp
sub
xchg
push
adc
push
fwait
test
lret
and
lods
and
mov
fists
push
xor
movsb
sub
or
addl
or
daa
add
jmp
mov
dec
push
or
scas
dec
sbb
push
movhps
lret
sub
sbb
or
add
mov
pop
in
addr16
jb
add
std
sbb
push
or
add
pop
jb
test
rcll
xor
mov
mov
jmp
rcpps
leave
pop
jb
or
es
fadds
rcrb
mov
sbb
loopne
inc
adc
outsl
in
loopne
jns
pop
push
xchg
add
mov
xchg
xchg
push
dec
xchg
push
xchg
or
or
mov
adc
mov
loop
in
lock
add
iret
repz
add
or
adc
cmp
dec
enter
add
inc
scas
mov
jp
jns
ret
push
mov
mov
push
mov
push
mov
lds
in
cmp
aas
orps
add
in
shll
rorb
in
add
add
jo
sahf
testl
cmpsb
jg
jb
push
fistl
gs
in
fistl
mov
and
xchg
add
adc
int
xor
ret
pop
mov
adc
and
dec
repz
dec
push
or
adc
nop
sub
adc
adc
enter
movswl
adc
xlat
inc
dec
adc
mov
xchg
sub
or
lret
sbb
xchg
fs
push
sbb
cltd
sub
add
push
cmp
cmp
push
adc
in
and
aaa
cltd
jne
stc
rclb
ret
push
xor
aaa
sbb
or
adc
sbb
mov
in
cmp
repnz
in
push
or
in
adc
pop
hlt
loope
ret
orb
mov
mov
push
jl
test
cmp
jno
movsb
mov
and
popa
dec
call
adcb
fnsave
mov
push
xor
xchg
pop
rcrl
inc
clc
cmp
sbb
in
mov
mov
addr16
push
jae
call
pop
and
jp
sub
rorl
mov
dec
ja
mov
cmp
movsb
xor
lock
cmp
pop
lret
pop
adc
cmp
repz
stos
mov
repz
lret
jns
and
pop
inc
push
shlb
out
jnp
clc
lock
adc
rclb
adc
ss
icebp
ss
fsubs
sub
adc
pushf
sbb
or
mov
add
sbb
insb
cmpsb
movsb
and
mov
daa
mov
mov
ret
dec
fs
dec
xchg
cmp
mov
adcl
xchg
cmpl
sub
test
push
jns
out
test
xchg
test
cmpsl
fwait
mov
push
pop
and
jns
mov
pop
pop
ss
pop
push
movsb
sbb
rcrl
lods
mov
xchg
das
xor
add
xchg
loop
pop
pop
dec
pop
adc
mov
push
movsl
jmp
and
cwtl
gs
push
je
in
add
inc
out
sub
loope
sbb
nop
inc
nop
push
cmp
and
and
fildll
insb
xchg
stos
pop
outsb
fwait
test
pop
in
aam
sbb
sub
xchg
xor
and
mov
cmp
cltd
lret
sti
lock
pop
push
mov
nop
out
cmp
or
sbb
or
decl
sbb
add
mov
jno
dec
push
rolb
pop
out
je
pusha
test
sub
outsl
jnp
out
adc
inc
jmp
testl
push
or
sub
push
jns
dec
or
add
jp
iret
sarl
push
inc
data16
stc
cmp
repz
stos
rcl
sbb
in
sbb
hlt
movsb
repz
sbb
es
xorl
inc
cmp
mov
lock
sbb
sbb
inc
addl
pop
nop
fldt
fstp
imul
das
test
sti
lods
mov
push
push
incl
adc
aas
add
add
add
icebp
fcompl
pop
adc
push
das
sbb
push
or
arpl
int3
ds
push
inc
lods
sbb
add
cmp
repz
ss
fstl
inc
mov
fiadds
cltd
cmp
repz
mov
lret
xchg
xor
pop
in
push
sbb
pusha
push
and
fucom
pop
loop
xor
mov
adcb
sbb
out
pop
dec
sbb
inc
sbb
sbb
and
mov
add
and
lds
inc
call
imul
imul
fisubrs
neg
ret
xchg
sbb
psubusw
sub
add
inc
clc
adc
xchg
mov
insl
call
pshufw
add
or
sbb
jecxz
add
mov
shll
or
mov
inc
repnz
das
mov
jb
popa
lock
mov
nop
push
push
or
pop
cmpb
mov
cwtl
xchg
imul
or
cmp
jbe
bound
iret
repz
into
loopne
and
push
imul
add
jns
inc
pop
and
in
frstor
adc
sbb
filds
and
fcmovnu
into
daa
popa
lock
imul
pop
add
and
inc
jge
arpl
mov
and
mov
lods
fiaddl
sub
pop
push
mov
flds
add
hlt
push
fildll
add
mov
inc
dec
dec
jnp
out
and
in
pop
add
add
ja
nop
push
sbb
push
xor
cmp
mov
and
xor
out
sahf
cmpsl
aas
dec
pop
outsl
andl
inc
cmpsl
push
push
daa
mov
rolb
out
adc
sbb
pusha
xor
loope
sbb
loop
mov
shrl
push
mov
inc
imul
inc
add
add
icebp
sub
jmp
daa
mov
movsb
xor
imul
pop
insl
jmp
mov
lds
adc
pop
and
mov
aam
loopne
mov
or
dec
adc
rolb
add
jbe
or
cmp
fldt
sub
jmp
es
lcall
sbb
in
add
sub
mov
out
pop
push
je
lcall
mov
adc
add
lea
aas
out
adc
insb
add
mov
adc
push
lahf
hlt
fildl
xorb
mov
add
mov
xchg
lret
mov
lock
shl
fildll
dec
xchg
pop
inc
jo
dec
push
xor
and
aaa
cs
add
adc
rorb
into
xchg
push
test
loopne
call
mov
test
push
cmp
cwtl
pusha
es
loopne
sbb
popa
movsb
ror
dec
push
pop
mov
test
out
push
es
scas
jl
sbb
dec
xchg
adc
aaa
lock
push
dec
dec
cmp
stc
fcmove
movsl
pusha
push
lock
mov
jbe
pop
leave
stos
nop
sub
stc
and
mov
add
mov
xorl
les
shl
add
push
out
sahf
ja
push
xor
ljmp
pop
push
push
in
test
xchg
scas
daa
fistps
xchg
outsb
repnz
sarb
rclb
movsb
fstl
adc
in
es
sub
lahf
push
mov
int3
or
lahf
sbb
sub
movsb
or
xchg
mov
adc
mov
mov
cmp
xor
fwait
sub
pop
lret
mov
inc
fists
addr16
jnp
imul
xor
test
mov
mov
sub
jb
dec
dec
outsl
sub
push
jne
adc
dec
inc
pushf
in
dec
xchg
push
push
adc
adcb
adc
add
in
sub
pop
das
xchg
sub
xchg
sbb
outsl
cwtl
cld
in
push
push
pop
nop
out
push
sub
fildll
mov
or
fs
fildll
in
xor
pop
leave
andl
jge
repnz
dec
push
xor
push
mov
iret
repz
push
cmp
adcb
mov
sub
ss
push
imul
sub
xor
iret
pop
jne
outsb
and
in
ret
or
fildl
imul
pop
and
lods
out
pop
sbb
pop
mov
rorb
insl
test
mov
add
jae
adcl
adcb
iret
pop
and
lcall
pusha
push
das
pop
xor
sti
cmp
dec
inc
pop
imul
in
popf
push
inc
daa
mov
jns
hlt
push
push
sub
jno
daa
fildl
lods
inc
stos
and
mov
pop
fisubl
and
dec
push
mov
lods
movsl
movsb
add
mov
mov
pusha
lds
pushf
or
or
ljmp
ret
mov
pop
mov
push
inc
lea
xchg
mov
cmp
mov
scas
pop
in
xor
jne
pusha
mov
xchg
or
popa
ds
je
and
clc
mov
add
adc
jmp
inc
lock
cmpsb
rcrb
hlt
sbb
ret
add
add
dec
add
mov
mov
xor
xchg
cltd
xor
js
loopne
pop
sub
dec
sbb
inc
inc
add
and
inc
rol
pop
clc
cmp
jecxz
add
or
xchg
sbb
loope
jno
xor
mov
mov
orb
lods
adc
and
in
sbb
jl
or
pop
test
or
lds
xor
adcl
inc
popa
movsl
add
or
adc
lods
or
cmpsb
add
jnp
lret
mov
cmp
adc
push
scas
and
es
jns
sti
cmpsl
aaa
mov
inc
add
xor
repz
repz
xchg
iret
loop
xor
adc
sahf
fildl
sub
cmp
pushf
popf
xor
pushf
daa
push
add
mov
sub
dec
cld
scas
xchg
xchg
movb
sbb
add
jb
xor
lret
mov
cld
in
rorl
inc
fucomp
add
mov
or
or
cmp
clc
add
test
or
cmp
mov
mov
into
push
or
or
xchg
in
and
lea
pushf
xor
mov
pushf
xor
mov
xor
shlb
andb
or
cmp
call
inc
das
jbe
jne
sar
int
jbe
xchg
dec
mov
and
lret
mov
aad
outsl
shlb
shlb
and
mov
lock
cmp
out
cmp
xchg
xor
ss
imul
repz
cltd
jl
push
mov
lock
sbbb
in
xchg
mov
mov
push
outsl
add
and
cmp
pop
enter
xchg
pushf
je
lods
lods
cmp
sbb
push
out
shll
movsb
push
adc
negb
es
mov
dec
gs
push
pushf
cwtl
mov
shlb
cwtl
xor
stos
xchg
insl
or
push
shlb
nop
dec
mov
cmp
gs
imul
stos
and
adc
mov
adc
mov
cmp
mov
dec
jb
or
mov
or
mov
test
mov
in
dec
test
out
jmp
leave
add
or
push
jno
adc
jecxz
dec
sub
adc
dec
cmp
dec
pop
mov
cmp
xchg
push
adc
ret
xchg
ret
and
leave
cmp
push
xor
loopne
aad
cmp
xor
mov
nop
xchg
jne
es
sbb
lret
mov
sbb
cmp
vphaddubd
dec
cmp
dec
push
push
push
ljmp
shlb
out
sahf
pop
jne
mov
out
dec
mov
jl
cmp
ljmp
imul
dec
push
fs
sbbb
cmp
fsubrl
jo
fisubrs
cmp
add
sub
dec
dec
fcoms
push
xor
xor
inc
xor
xor
push
pop
dec
fcomps
cmp
enter
cli
in
in
adc
dec
jno
aaa
loopne
and
lods
jnp
fmull
mov
dec
fdivs
fdivs
aam
shlb
add
ror
push
pusha
dec
dec
jno
xchg
loopne
fcompl
daa
mov
es
insb
enter
es
xchg
cmpsl
sub
outsl
std
sbb
aaa
pop
mov
ds
lret
cmp
jns
push
inc
jnp
sub
repz
imul
out
or
add
test
ss
add
mov
adc
mov
xor
fnstsw
sub
sbb
mov
mov
pop
cmp
es
mov
aaa
mov
arpl
test
movsb
or
rol
movsb
aad
lcall
pushf
aaa
cwtl
lods
fstpl
cmp
cwtl
mov
dec
out
jno
aaa
dec
adc
lcall
xchg
jecxz
nop
popf
nop
mov
pushf
aaa
cmp
sub
mov
cld
sbb
dec
add
mov
and
xchg
add
es
repnz
test
sbb
nop
int3
loopne
mov
nop
pop
mov
hlt
bound
popa
test
or
ret
ret
gs
dec
aas
and
inc
enter
pop
aaa
push
cmp
pusha
or
mov
or
je
jmp
sub
outsl
mov
sub
ss
sbb
cmovp
jmp
cmc
mov
mov
or
jge
outsb
adc
sbb
shlb
xor
jecxz
add
sbb
sub
inc
out
add
cli
out
dec
insb
popf
movsb
out
ret
repnz
adcb
jb
or
lea
sub
outsb
inc
xor
dec
and
lock
push
nop
fmuls
add
std
pop
ret
push
testw
imul
addr16
aam
rol
mov
jg
mov
jmp
movw
ja
shrb
lods
xchg
inc
or
out
sub
ds
adc
mov
mov
cmpb
mov
adc
aad
or
inc
aas
adcb
adc
scas
lods
mov
xchg
pop
das
push
xchg
dec
bound
cmpsb
mov
lahf
push
inc
scas
inc
scas
push
pop
dec
adc
or
or
sub
inc
fwait
adcb
xlat
and
fstpl
roll
or
xor
add
js
and
dec
inc
mov
lods
ds
nop
xchg
pop
mov
dec
cmp
adc
call
and
aas
addl
cmpsl
leave
or
jns
sub
or
enter
xchg
jecxz
nop
inc
push
jb
call
and
add
inc
push
sarb
push
xor
fsubrl
cmp
cmp
mov
sub
sub
test
pushf
pushf
add
or
fsubs
shl
xor
scas
inc
das
push
xor
mov
xor
xchg
mov
or
push
repnz
cmp
push
ja
jmp
in
inc
xor
call
jb
pushf
fmuls
jno
jne
jmp
addl
adc
adc
je
dec
aas
faddl
add
aaa
and
inc
sub
lmsw
dec
jmp
adcb
and
test
aaa
in
pop
or
and
or
cmp
outsl
inc
lret
mov
xchg
pop
inc
insl
jo
add
test
dec
jne
jmp
lahf
mov
or
jnp
pop
mov
in
jae
push
ds
add
push
fiaddl
lods
add
add
iret
add
add
insb
rcrb
lods
mov
mov
push
aad
xor
pop
sub
repnz
and
outsb
imul
cld
jl
dec
inc
arpl
pop
add
inc
adc
adc
push
or
cmp
pop
into
test
ret
jb
test
cmp
shlb
aaa
ss
xchg
mov
shrl
cmp
add
cmp
pop
adc
sti
out
int3
or
push
enter
dec
add
out
lahf
cmp
pop
mov
hlt
insb
das
add
jno
cmp
jno
mov
mov
test
stos
xchg
cld
inc
popa
xchg
and
hlt
pop
cmp
mov
adc
sub
popa
into
inc
jl
mov
lret
adc
test
leave
mov
sbb
or
and
enter
xchg
daa
or
sub
xchg
in
push
shll
pop
mov
jns
mov
inc
push
and
pushw
dec
ret
jmp
lret
push
cmp
scas
aaa
cmc
mov
into
pusha
nop
pusha
nop
jmp
xchg
push
add
daa
xor
cmp
add
mov
sahf
fs
hlt
cmp
cmpsb
add
mov
jo
pop
test
sbb
adc
and
pop
std
dec
ljmp
popf
cmp
pusha
test
pop
add
pop
arpl
mov
sub
daa
daa
or
mov
and
push
sbb
jo
adc
mov
push
or
inc
fisubl
setne
push
and
mov
lock
je
jo
add
or
or
insb
sub
dec
cld
rsqrtps
mov
adc
jne
sub
push
cmp
push
nop
clc
aaa
xchg
inc
sar
inc
roll
outsl
lret
movb
pop
cmp
and
jg
lret
mov
or
push
dec
push
sub
inc
mov
pop
xchg
outsl
dec
jne
arpl
js
and
xchg
inc
test
sbb
jnp
push
push
pop
jg
int
or
jle
inc
xor
and
pop
or
pop
lret
push
jge
xchg
test
push
jp
xor
and
mov
test
decl
jmp
ljmp
fcomps
xchg
xchg
movb
shr
push
inc
aas
mov
jg
shl
cmp
cs
jae
sub
dec
test
adc
movaps
mov
jne
xchg
outsb
dec
push
ss
test
jbe
xor
sti
jl
add
lea
cmc
les
iret
jge
sub
sahf
out
mov
inc
call
sbb
inc
adc
add
arpl
orl
int3
cmp
push
jecxz
pop
add
adc
mov
or
jmp
js
push
movsb
dec
clc
enter
xor
pop
mov
adcb
adc
ljmp
pop
push
mov
inc
jle
pushl
dec
jns
push
jo
pop
pop
lahf
es
fs
or
and
cltd
xchg
fmull
out
lcall
xchg
jmp
xchg
xor
adc
stos
nop
xchg
out
sbb
ss
sbb
cmp
mov
cltd
sbb
push
lock
in
lock
lahf
fstpl
inc
adc
repnz
and
sbb
mov
sbb
jb
or
jge
xchg
mov
inc
push
lea
mov
and
fwait
mov
inc
xchg
clc
cltd
andnps
js
cltd
dec
sbb
push
add
inc
jbe
cmp
sub
push
mov
or
jge
ljmp
hlt
sahf
mull
gs
or
add
inc
cmp
jle
dec
enter
call
or
mov
mov
enter
hlt
hlt
rcll
adc
loopne
outsl
push
inc
loop
adc
cmpb
je
push
or
or
aaa
pop
fst
lret
push
push
mov
push
sub
ljmp
stos
push
jle
sti
xor
aas
inc
incb
adc
inc
jle
mov
mov
mov
push
cmpb
add
inc
dec
pusha
sbb
pop
jne
mov
adc
sbbl
xchg
xor
cmpsb
les
pop
mov
xor
inc
jl
inc
xor
cld
adc
lods
addr16
into
add
call
dec
mov
fisttps
dec
sub
lret
cmpl
andl
inc
dec
jne
fisubrs
and
cmp
clc
add
mov
xorl
decl
xchg
fildl
pop
int3
adc
bound
orl
pop
cs
sbb
pop
cmp
dec
enter
or
dec
adc
add
lods
jge
adc
mov
sbb
sub
jo
call
push
test
sbbb
fdivrs
scas
mov
fdivrl
adc
mov
add
pop
or
in
push
andb
je
int
je
pcmpeqb
and
leave
lahf
lock
add
push
mov
cld
jo
or
imul
hlt
push
pop
inc
sub
lods
ficoms
mov
repz
int3
mov
and
push
inc
mov
test
call
cmp
sarl
jg
fists
sarb
hlt
add
mov
fnstcw
or
jo
loop
out
lods
jg
ficomps
mov
pushf
add
mov
and
pop
imul
or
fwait
ljmp
shrl
jg
sbb
ffree
lret
stos
push
or
xchg
iret
repz
pop
les
out
add
push
adc
xor
insl
movsl
mov
push
call
mov
add
add
mov
jnp
shrl
adc
push
push
fistl
ds
mov
idivb
and
mov
xor
xchg
cld
flds
and
xchg
mov
repnz
fildll
cmp
add
xor
cltd
scas
sbb
pusha
aad
cmpsb
pcmpeqb
dec
shl
or
jecxz
insl
jg
xor
pop
imul
lea
sbb
fs
imul
sahf
push
xchg
sub
push
cmp
sbb
or
in
sbb
insb
sub
pop
cmp
sub
or
mov
loopne
and
addr16
cmp
adc
inc
pop
sahf
mov
lock
xor
dec
add
rorb
add
cmp
ret
mov
xchg
movsb
cmp
lods
or
xor
cmp
cmp
inc
xor
imul
in
inc
jb
aas
in
int
arpl
sub
inc
xor
pop
add
cmp
dec
inc
fcoms
add
in
sbb
roll
call
in
fsubs
mov
sub
push
sub
scas
push
popf
adc
push
cmp
pop
add
and
repz
repz
push
bound
xchg
inc
mov
lea
or
jb
fs
aam
faddl
test
add
aas
xor
mov
stc
or
pop
sbb
sbb
sbb
and
sbb
inc
cmpsb
push
movsl
sbb
xor
jmp
push
out
jmp
lods
shl
sahf
pop
or
dec
jg
popa
imul
das
insb
jmp
xor
jbe
mov
xor
shlb
les
call
imul
inc
jo
jmp
cwtl
fdivrs
jl
outsb
xor
add
cmp
add
dec
out
inc
mov
mov
or
pop
clc
out
std
push
jmp
cmp
push
mov
cmp
xor
lahf
pop
push
jnp
cli
pushl
sti
pop
inc
xchg
pop
js
push
orb
out
and
scas
dec
ds
mov
xor
incb
adc
fldcw
jmp
inc
adc
insb
mov
daa
loope
dec
cmc
jge
cmp
scas
test
adc
rorl
ds
xchg
or
sbb
xor
inc
xchg
inc
xchg
imul
lock
lea
add
add
pop
mov
out
addb
leave
adc
mov
call
mov
sbb
ret
pushl
ja
or
ret
add
incl
dec
pop
aas
adc
lret
sar
mov
push
push
mov
into
cmp
mov
imul
leave
inc
mov
or
xor
pop
sub
jge
adc
aad
inc
dec
loope
sti
xor
or
push
mulb
sub
das
in
lock
mov
pusha
cld
sbb
ja
nop
inc
mov
shl
sub
fstpt
cmp
dec
add
jo
jns
mov
mov
cmpsl
push
add
push
int
pop
sub
jl
mov
or
xor
inc
dec
jne
aas
lcall
stos
jne
and
jl
mov
jae
sbb
jmp
add
int3
sub
in
add
xor
and
aam
cmpsb
mov
add
mov
xchg
daa
enter
enter
inc
daa
push
adc
pop
cmp
adc
rolb
loopne
add
test
in
push
sub
inc
in
lods
mov
jno
inc
pop
xor
cs
push
jle
or
add
dec
dec
mov
sbbb
mov
es
imul
push
inc
inc
stos
int3
scas
movl
movsl
out
and
movw
cmpsb
addr16
cmp
dec
or
jmp
cmp
ss
ds
sub
inc
pop
ret
in
int3
add
repnz
cmp
push
rcll
dec
fdivrl
filds
daa
xor
outsl
sbb
pop
xchg
ja
ljmp
add
nop
inc
cmpsl
enter
bound
inc
cmpsl
jmp
sbb
or
daa
insb
jle
arpl
inc
daa
adc
xchg
pop
jle
insb
xor
or
gs
xor
mov
xchg
mov
aaa
nop
les
push
ja
or
test
leave
andl
pusha
or
mov
lock
or
mov
cmp
in
ret
add
and
lea
pop
cmp
cmpsb
insb
push
pop
mov
push
shl
dec
clc
lea
cld
push
cmp
ss
mov
mov
jge
enter
and
leave
arpl
or
mov
mov
dec
dec
scas
imul
sti
add
push
clc
mov
jne
cmp
cmp
inc
hlt
xorl
sbb
mov
inc
sub
or
jmp
ja
jno
sbb
shrl
inc
or
sbb
mov
or
or
out
jnp
cmpsl
jp
lock
arpl
add
hlt
inc
or
hlt
inc
aaa
pop
notl
daa
testl
js
loope
imul
mov
out
in
bound
add
pop
push
add
cmpsl
subb
inc
mov
cmp
adc
cmp
and
fsts
fsubs
cwtl
daa
sbb
repz
mov
hlt
pop
and
das
les
mov
add
cld
xchg
movsb
add
or
and
xchg
es
jp
sub
or
or
loopne
sbb
push
int
push
or
push
push
enter
mov
into
cmp
pop
xor
js
daa
ret
sarb
addr16
aad
jecxz
jne
test
push
jecxz
aaa
jle
dec
aam
js
add
inc
adc
sub
push
and
gs
xor
or
mov
sbb
loop
loop
xor
outsb
xchg
rolb
or
pop
dec
jmp
jge
or
cltd
out
push
jge
scas
lds
xlat
xchg
fsubrs
push
stc
add
inc
popl
insb
add
mov
mov
xor
push
dec
scas
add
cmp
cmp
or
push
sbb
push
jl
sbb
pusha
in
sbb
push
push
test
ds
xacquire
push
adc
and
fbld
inc
push
loop
push
xchg
fadds
push
push
clc
dec
les
les
mov
xor
test
dec
pop
push
pop
inc
cld
inc
and
outsb
jo
mov
les
fimull
ja
lock
ror
sub
std
dec
sub
or
pop
jbe
lcall
jle
cld
dec
adc
sbb
pop
and
mov
mov
loope
fdivr
sti
cmp
setg
testl
sub
test
inc
add
push
mov
and
xchg
lock
mov
addr16
fs
add
mov
lock
push
cli
and
add
sbb
mov
out
push
arpl
add
sbb
mov
xchg
add
xor
ret
mov
push
add
add
and
and
inc
add
and
nop
sbb
mov
jecxz
or
pop
out
and
inc
lock
leave
call
push
mov
dec
add
dec
dec
mov
add
adc
hlt
jno
and
sub
data16
fisubrl
jae
jne
mov
neg
mov
adc
cwtl
cmc
adc
test
mov
xor
cld
xchg
out
lret
daa
jo
xor
inc
sbb
adc
das
sub
add
xor
cmp
cwtl
cmp
test
or
xchg
cmp
inc
inc
inc
inc
ds
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
cwtl
cltd
inc
inc
inc
inc
lcall
inc
sahf
lahf
addb
addl
xchg
inc
mov
inc
inc
mov
inc
inc
jb
addr16
inc
sub
enter
inc
inc
sub
rclb
adcb
push
and
lock
cmp
jnp
xchg
push
popf
jns
loopne
call
aas
lea
push
lahf
push
cmc
or
xchg
test
sub
movaps
adc
adc
and
jl
adc
or
mov
jo
lock
push
push
nop
imul
push
loopne
add
pop
mov
repnz
push
jb
jo
jb
jns
imul
mov
pop
fldl
or
dec
inc
pop
mov
dec
adc
or
popa
faddl
bound
ja
push
out
xlat
sti
xchg
out
daa
mov
pop
and
add
aas
sub
bound
iret
call
add
lock
mov
inc
nop
lea
jge
xchg
inc
insb
or
or
mov
jae
add
jne
jl
pop
sbb
pop
add
and
push
or
mov
data16
imul
push
in
cmp
mov
daa
das
jl
out
out
daa
movsb
push
mov
into
mov
bound
sbb
insl
add
repz
icebp
jbe
and
sub
push
cmp
pushf
inc
dec
pusha
or
add
mov
jne
lahf
inc
push
pop
cmpb
imul
xor
fstp
sub
and
jge
mov
movsb
cmp
jmp
xor
and
cmp
xor
das
insl
je
push
pop
outsb
sub
shll
mov
xor
cs
inc
mov
xor
add
bnd
pop
insl
out
cmp
or
dec
insb
call
in
and
jge
adc
out
negb
or
adc
push
sbb
sub
jne
sub
push
or
sbb
scas
or
or
jle
and
pop
insb
leave
push
and
test
shll
test
push
nop
test
hlt
sub
pop
dec
es
cmc
mov
rolb
das
insl
dec
lahf
out
sti
xorb
mov
dec
outsb
dec
fidivs
lds
ficoms
loopne
pop
in
push
or
inc
add
xchg
or
sbb
repnz
or
pop
push
pop
mov
int3
add
inc
xor
inc
or
inc
and
leave
cmp
cmp
adc
push
pop
nop
nop
dec
cli
jne
ljmp
jge
lods
or
lea
scas
mov
les
ss
shll
lock
in
sbb
ss
leave
pop
jno
push
cmp
in
call
movsb
std
imul
jmp
push
pushf
mov
or
or
cmpsl
lahf
outsb
push
jmp
cmp
and
jne
sub
inc
popa
jnp
xor
adc
adcl
lods
mov
xor
jmp
add
jno
mov
cmp
ljmp
aas
insb
fnsave
add
iret
loope
fldcw
stos
pushf
xlat
mov
mov
mov
daa
orb
leave
inc
rclb
jo
add
mov
add
adc
xor
idiv
pop
sbb
scas
lods
xchg
dec
or
mov
xor
xlat
loope
mov
xchg
adc
les
adc
add
ljmp
js
ljmp
icebp
jo
aad
push
movsl
xchg
and
and
sub
jo
dec
lods
inc
or
mov
or
push
lods
mov
pop
adc
xor
test
jne
out
push
push
cs
dec
xor
clc
jle
mov
cmp
add
int
fimuls
sub
jb
add
loopne
cld
cmc
xor
adc
push
movsb
pop
push
sub
mov
addl
jp
or
fcmovb
dec
mov
pop
inc
gs
push
mov
testb
mov
mov
adc
add
pop
or
mov
push
or
sbb
pop
sbb
jmp
lret
je
mov
dec
and
sbb
xor
mov
insl
shll
jmp
jle
in
je
jmp
cmp
lock
test
out
jne
pop
call
std
mov
or
sbb
pop
mov
and
aam
je
sub
inc
addb
and
int3
add
xchg
lds
ja
cmp
aas
pop
je
pop
lods
in
or
dec
and
decb
ja
and
adc
sbb
and
mov
mov
cmp
insb
push
add
adc
pop
es
or
movsbl
or
sbb
jp
lcall
aas
dec
aaa
mov
in
fisttpl
sarl
cmp
lret
or
xchg
out
orb
testb
call
out
mov
mov
or
pusha
test
fcomip
popa
or
imul
inc
out
loope
mov
popa
dec
mov
mov
ljmp
cmpsl
or
imul
mov
cmpsb
mov
and
lock
jno
adc
xchg
xorb
or
pop
cmp
movsl
sub
inc
and
lcall
icebp
jb
rcrb
in
inc
dec
dec
loope
ret
test
sub
and
and
out
mov
push
push
imul
fwait
xor
mov
mov
pop
pop
pop
pop
test
pop
sbb
mov
add
xor
pusha
inc
or
add
cmc
fcmovbe
sub
push
mov
outsl
sahf
mov
add
div
je
add
lgs
dec
pop
mov
add
jne
pop
xor
sbb
sbb
add
je
jge
roll
mov
dec
push
mov
pusha
sub
mov
mov
dec
jae
nop
add
pop
imull
pop
push
jne
mov
or
movb
pop
jl
test
or
dec
and
movsb
cltd
add
adc
ds
mov
in
add
out
xlat
andb
movsl
jle
xor
adc
incl
cmp
pop
push
ret
call
rolb
or
ret
fcomip
ja
mov
lods
cmp
mov
enter
mov
push
mov
addl
popa
sbb
cltd
push
jge
ret
or
lds
inc
fstps
data16
pop
pop
cmp
das
cltd
es
sbb
or
xor
or
enter
mov
pop
clc
inc
jge
test
bound
fcmovnb
ja
add
xorb
inc
sbb
lret
mov
sub
js
scas
sbb
inc
xlat
cmp
add
ret
push
scas
push
mov
push
or
std
adc
sub
je
or
dec
je
jl
adc
sbb
stos
mov
je
addr16
fdivr
jg
mov
mov
sub
or
jmp
gs
aam
xor
or
mov
xchg
daa
out
pop
and
jns
imull
jecxz
adc
push
jmp
pop
sub
call
mov
rorb
fsts
and
sbbl
adc
sbb
xor
push
mov
aam
hlt
hlt
or
movsl
bound
decb
ficomps
fiaddl
adc
and
fbstp
rol
and
hlt
or
and
jp
sub
out
or
sbb
jp
scas
loope
iret
and
dec
shr
or
js
les
clc
clc
add
xor
ret
or
int3
lcall
pop
inc
dec
sahf
inc
mov
hlt
add
xchg
out
in
push
add
push
push
mov
test
fsubl
jnp
or
ja
enter
push
cmc
repz
mov
fsub
flds
frstpm(287
dec
sti
xor
adc
xchg
fcomps
lods
test
cs
push
and
push
cmp
jmp
das
push
jnp
add
jle
je
add
add
mov
adc
adc
rcrb
and
cmp
mov
cmp
aas
jbe
add
xor
push
jno
mov
imul
rorl
ja
lods
mov
enter
idivb
cld
jge
jl
insl
or
sbb
insl
push
adc
shlb
xor
add
mov
fimull
cmp
adc
or
cmp
mov
sti
fmuls
aaa
pop
add
xchg
mov
adc
fisttpl
test
or
push
push
fs
jns
movsb
cmp
and
mov
insl
pop
xchg
dec
sub
xor
push
sub
cmp
outsl
xor
sub
testl
or
cs
jge
sub
adc
jmp
pop
jmp
sbb
sub
jmp
or
pop
ret
nop
sbb
div
add
loopne
dec
mov
jge
rcrl
pop
pop
jp
adc
jno
incl
fildl
sbb
adc
push
mov
xchg
sub
xor
je
lods
inc
pop
or
or
pop
loope
mov
cs
std
into
xlat
mov
ret
vaddss
sbb
pop
adc
push
hlt
in
dec
or
dec
add
push
pop
shlb
cwtl
flds
cwtl
pushf
fstps
dec
cmp
and
pusha
or
mov
or
in
wbinvd
test
into
in
adc
ja
sbb
lahf
inc
dec
or
dec
jg
pop
mov
sarb
aam
push
das
js
nop
xchg
jg
jge
ret
fs
cld
call
je
addr16
push
dec
push
dec
pop
push
dec
or
cmp
rolb
inc
invd
dec
push
gs
imul
pop
or
add
inc
xchg
and
orl
or
mov
popa
insl
cmp
dec
mov
es
add
or
cmpsl
shl
or
pop
inc
inc
push
orb
pop
dec
and
fisttpll
or
and
or
or
or
mov
cmp
iret
adc
pop
addr16
enter
adc
mov
loop
pop
dec
outsb
push
insb
cmp
jmp
add
dec
int3
jg
jae
testl
adcl
mov
sbb
mov
pushf
add
arpl
cmp
ljmp
je
pop
andb
lds
sub
push
sub
adc
shlb
adc
fcmovnu
pop
ja
push
ja
outsb
addr16
stos
shrl
inc
cmp
xchg
insb
jp
in
icebp
nop
mov
dec
fwait
inc
fisubrl
jne
push
orb
jnp
mov
popa
aas
xor
pop
push
pushf
fsubl
pop
jle
cmpxchg
movsb
mov
pushf
cwtl
xchg
nop
mov
shrb
xchg
shrb
arpl
dec
mov
sub
insb
imul
test
cwtl
xor
dec
gs
fsubrs
jns
sbb
scas
sbb
dec
push
mov
inc
fldl
jae
call
cmp
imul
fmulp
lret
fs
outsl
test
nopl
addr16
adc
dec
outsl
sbb
mov
jbe
pop
adc
dec
outsb
insb
jns
xchg
inc
fisubs
xchg
inc
fldt
bound
or
jp
into
pop
insb
or
cmpsl
or
dec
imul
adc
xchg
test
or
pop
cmpsl
mov
pop
push
dec
add
and
add
nop
loopne
add
mov
sbb
fsubrl
or
dec
gs
fstpt
jae
add
xchg
cmp
insl
xor
cs
adc
inc
jbe
dec
or
push
fsubs
xor
xorl
xor
adc
test
cmpsl
add
in
into
pop
test
mov
xchg
or
pusha
sub
mov
dec
or
or
xchg
mov
cld
sub
outsb
mov
xchg
adc
or
inc
repnz
jb
insb
insb
adc
in
test
inc
pop
sbbl
mov
and
pop
xor
sbb
scas
sbb
or
inc
and
inc
inc
mov
mov
cmpsl
pop
arpl
aam
add
push
imul
mov
imul
test
jnp
loopne
in
rclb
xor
mov
insl
jo
push
mov
inc
mov
mov
push
lds
pushf
mov
lcall
push
push
lea
cltd
jno
adc
jle
ja
mov
popf
ljmp
mov
test
insb
push
push
shrb
push
add
pusha
mov
xor
jbe
jp
or
mov
mov
push
sbb
push
pop
push
or
stos
mov
sbb
es
add
jnp
mov
nop
mov
mov
test
push
xor
jle
sub
lcall
lods
mov
pop
addr16
xchg
flds
adc
or
adc
dec
test
jmp
in
movsb
lods
cmp
mov
adc
add
imul
xchg
scas
inc
or
jns
out
cld
sbb
push
xlat
mov
push
ret
sbb
aas
jo
fbld
inc
lock
jnp
push
cmpl
cs
out
xor
mov
xor
filds
cmovns
jae
fs
jo
lcall
jecxz
jge
das
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
cmp
sub
sbbb
xlat
mov
jp
adc
mov
mov
divb
mov
pop
mov
mov
sarb
fldcw
cmp
sbb
je
inc
jo
inc
mov
testl
mov
sub
xchg
or
fs
or
cmp
loopne
scas
pop
sbb
xchg
mov
push
lods
lea
dec
lcall
pop
insb
bound
mov
rcrb
jb
stc
lock
mov
loope
mov
lods
lds
loopne
call
popf
pop
pop
movl
enter
data16
leave
pusha
ret
insb
ret
or
push
dec
aaa
leave
sbb
mov
pop
inc
movb
nop
pop
rolb
test
mov
add
xchg
sbb
mov
sbb
inc
xor
dec
dec
popl
mov
loopne
mov
fadds
lock
pop
nop
lret
rolb
push
push
mov
fistpll
sahf
testb
int
in
xchg
mov
push
or
popa
imul
mov
enter
push
xor
in
iret
inc
in
and
sbb
xlat
mov
loopne
inc
sbb
adc
inc
mov
mov
xchg
mov
mov
lret
adc
idivl
adc
inc
nop
lods
rolb
xchg
push
rorl
rolb
rcl
pop
mov
xor
mov
sbb
cmp
shl
andps
pop
cmpsl
in
or
or
sbb
adcl
enter
or
sbbl
sub
add
mov
orl
dec
xchg
jl
out
or
pop
das
cmp
xchg
repz
sarl
repnz
and
jnp
push
adc
push
adc
mov
lahf
loop
or
push
or
lcall
adc
fs
jl
add
push
mov
adc
mov
pop
adc
mov
push
inc
push
adc
das
fidivrl
add
sub
aam
dec
aam
xor
mov
pop
xchg
add
jl
sbb
in
inc
fldt
push
push
les
ds
enter
push
inc
or
loop
call
inc
xor
inc
and
inc
pmuludq
ret
or
adc
add
xchg
aas
fcmovb
mov
mov
aas
pop
call
rcll
stos
mov
rorb
mov
xchg
xor
outsb
and
hlt
adc
pop
push
imul
ror
int3
inc
or
pop
cmp
addr16
add
pop
sbb
incl
int
dec
addb
mov
lcall
cmpsb
popa
imull
push
add
xor
mov
xor
data16
in
pop
inc
addr16
inc
mov
mov
push
inc
or
orb
mov
push
nop
push
mov
bound
sti
adc
jmp
adc
sti
inc
cli
stc
clc
push
push
push
push
push
dec
jnp
mov
loop
push
ljmp
xor
cmp
iret
repz
push
pop
pusha
insb
jns
mov
push
dec
into
pop
push
cmp
sub
adc
mov
cmp
pop
push
mov
test
std
cmp
xor
pop
add
push
xor
aad
sarb
add
ss
xchg
mov
adc
out
sbb
push
mov
cld
mov
rclb
and
push
inc
push
mov
push
push
arpl
sahf
dec
scas
dec
enter
adc
leave
mov
push
pusha
push
push
mov
or
and
xchg
sahf
cmpsl
stc
mov
push
cmp
adc
rcrb
ja
cmc
push
add
or
or
sbb
push
je
sub
loopne
and
adc
ljmp
dec
roll
loopne
ss
adc
mov
js
pop
pop
pusha
ficoml
or
test
push
push
rcr
or
cltd
mov
gs
clc
and
in
cmpsl
dec
push
arpl
call
add
inc
repnz
xchg
cltd
xchg
cltd
filds
add
add
jb
jne
out
mov
in
scas
in
and
xchg
js
or
pop
lret
sub
in
fwait
mov
pop
sub
mov
in
push
mov
dec
lahf
les
pop
cmp
xor
add
xchg
xchg
and
out
xchg
or
pop
and
jmp
push
push
inc
sub
mov
pop
lcall
and
add
sub
lock
push
sub
fldt
or
cli
jne
and
jmp
mov
outsb
jmp
jecxz
sub
add
neg
pop
sbb
movsl
mov
icebp
orl
out
nop
stos
mov
inc
inc
add
int3
lea
cmp
jmp
or
pop
jl
lcall
sbb
jmp
addps
movsl
aam
jecxz
cmc
cld
inc
add
mov
and
sbb
mov
clc
mov
daa
mov
inc
and
add
pop
adc
mov
pop
sbb
pop
pop
pop
jp
pop
mov
rolb
pop
or
dec
icebp
dec
push
inc
or
jmp
dec
sbb
push
cld
xchg
hlt
push
insl
dec
into
lret
iret
pushf
fildl
mov
inc
daa
jno
or
mov
pop
xchg
popf
mov
lock
enter
xchg
test
pop
adc
pushf
cld
jmp
gs
jo
push
orb
pop
std
rol
cmp
inc
dec
call
mov
push
xchg
inc
cmp
jbe
sbb
adc
fmuls
sub
enter
add
cmp
movsb
imul
imul
xchg
imul
xor
jo
sub
and
pop
test
xchg
sbb
imul
mov
lret
gs
xchg
dec
adc
mov
clc
push
call
inc
or
or
das
xor
pop
cmp
mov
cmp
pusha
fcmovbe
cmp
add
movb
popf
ret
out
xor
stos
pop
call
mov
in
jl
inc
xor
out
mov
xor
inc
dec
jne
mov
rorl
test
cmpsb
inc
cmpsl
outsb
lds
inc
loopne
cmp
sbb
push
sub
jg
inc
rcr
nop
sub
xchg
mov
dec
cmpb
dec
popf
xchg
outsb
add
pop
add
xchg
sub
leave
xchg
je
lahf
clc
rorl
rcll
test
inc
clc
mov
xchg
sbb
add
cld
pop
sub
cltd
out
xor
add
add
adc
mov
pop
mov
xchg
movsl
roll
mov
int3
pop
shl
jne
push
sbb
pop
imul
mov
push
inc
add
or
jl
or
dec
fsubrs
rcrb
in
xor
xorb
outsb
repnz
inc
pop
imul
push
loopne
es
mov
insl
sub
cmp
push
xor
cmpsb
jecxz
dec
call
jne
movl
jno
push
sbb
inc
adc
push
sbb
jb
jle
mov
lret
out
dec
jae
inc
test
call
aad
jge
sbbb
and
mov
xchg
mov
mov
sbb
xchg
aad
or
test
pop
mov
repz
stos
sub
pop
xchg
mov
hlt
xchg
inc
mov
aad
lret
lahf
sbb
inc
sub
xor
cli
mov
mov
mov
repz
shlb
cld
cwtl
cltd
or
adc
in
pop
in
ret
leave
or
fstpl
or
mov
mov
sbb
xchg
pop
mov
nop
sub
aam
fcom
into
mov
jae
push
test
sbb
adc
notl
add
jo
adc
mov
push
sub
ja
cli
dec
or
and
clc
and
cmpsl
sbb
mov
xchg
xchg
daa
lods
roll
jmp
mov
or
add
es
rolb
add
movsb
mov
ja
enter
ret
fsubrs
jbe
adc
mov
push
jno
inc
call
jg
xchg
lret
xchg
and
xchg
mov
xchg
jmp
inc
clc
mov
jmp
push
je
cmp
insb
cmp
push
shll
enter
movsl
and
lds
sub
sbb
xchg
je
push
xchg
xchg
add
or
popf
xchg
add
and
sub
mov
lea
jbe
pushf
cmp
aas
adc
dec
rolb
rol
loope
ss
addr16
icebp
and
or
or
push
push
sub
sub
mov
push
outsb
xchg
movsb
hlt
fsubrs
bound
cmp
outsl
mov
and
pop
adc
bsf
js
pop
add
lret
mov
jbe
rolb
cmp
addr16
mov
in
lahf
add
sub
clc
pop
push
mov
sub
lea
add
add
daa
addb
cld
mov
jmp
ret
pop
and
and
mov
add
inc
adc
add
sbb
jge
adc
sbb
jns
ret
idivl
sub
mov
in
pusha
push
sub
data16
push
cmp
push
mov
push
fs
mov
add
mov
in
je
rcrb
ja
cmp
dec
lahf
pop
mov
mov
aam
and
and
mov
jbe
daa
inc
popf
or
test
test
pop
icebp
sahf
push
mov
aam
or
jge
jbe
pop
xor
fldcw
mov
xchg
ret
mov
test
push
sbb
jb
cmp
add
pop
add
add
sub
test
jae
testl
rcl
cmp
push
xchg
sub
fdivrl
xlat
arpl
pop
mov
aaa
push
insb
mov
out
sbb
mov
lcall
push
dec
xchg
mov
adc
lock
int
mov
push
or
pushf
test
shll
mov
xchg
cld
pop
mov
outsb
stos
sbb
cmc
and
cmp
mov
jo
je
mov
in
jno
and
cmp
push
pop
dec
adc
pusha
jno
mov
pop
fld
or
xor
gs
in
mov
mov
cmp
rol
xchg
in
and
mov
sbb
shlb
fstpl
dec
imul
push
mov
movsb
push
mov
mov
shrl
rorb
aas
movl
bound
push
jge
inc
je
enter
xor
ja
rcl
and
shll
loop
inc
adc
pop
pop
aas
ljmp
leave
int
push
fisubl
or
jne
mov
das
and
js
inc
stos
add
insb
push
into
cld
loopne
iret
cli
sub
or
dec
or
mov
sbb
inc
idivl
shl
loop
adc
or
in
push
jmp
cmc
mov
icebp
xchg
adc
sbb
xor
jp
push
mov
clc
push
xchg
pop
mov
shr
jmp
or
inc
mov
sub
ficoms
pop
xchg
mov
into
test
xor
push
lods
dec
lcall
sbb
cmpsb
add
int
cmp
push
sbb
adc
push
lret
cmp
and
push
sbb
fcomp
jnp
add
imul
jmp
inc
cmp
jge
add
push
push
jnp
cmpsb
jne
sbb
leave
rorl
popf
iret
std
jle
inc
lds
jae
push
push
mov
inc
loopne
inc
sbb
jecxz
xchg
pusha
pop
jg
jecxz
sub
in
push
ret
cmc
mov
test
mov
test
add
jb
and
leave
xchg
out
lea
pop
sarb
adc
pop
pusha
xchg
je
scas
dec
jmp
or
shl
lcall
xor
call
push
fildl
lock
sbbl
jle
test
inc
loopne
jo
mov
push
bound
ja
call
std
jg
dec
hlt
dec
nop
rolb
fstpt
jo
cs
xchg
cmpsl
xorl
inc
mov
loop
dec
cmpsb
jb
sub
call
shl
scas
adc
je
sbb
push
push
mov
in
dec
jo
mov
mov
insl
jmp
cmpb
das
push
dec
xor
xchg
inc
jne
test
jmp
dec
add
add
sahf
or
bnd
dec
push
dec
popa
andb
movsl
dec
adc
pop
das
aaa
fcmovnu
or
xchg
add
or
loop
testl
fadds
sbbb
mov
push
movsl
movsb
hlt
enter
mov
adc
inc
mov
add
mov
mov
dec
or
adc
clc
add
pop
xor
sub
shl
cmp
je
addb
pop
nop
dec
push
andl
fisubl
icebp
add
sbb
adc
test
mov
fstps
push
fcmovnbe
adc
adc
adc
sub
cmp
jae
cmpb
dec
or
je
stos
adc
btr
loope
adc
push
add
mov
cld
push
push
inc
push
mov
fisubl
fmuls
mov
dec
test
adcb
into
dec
xorb
call
cli
pop
ja
test
push
dec
mov
mov
add
push
mov
mov
adc
push
inc
cmp
jne
inc
decl
jne
adc
pop
mov
bound
leave
hlt
lock
adc
xchg
mov
sbb
subl
in
sub
dec
xchg
test
incl
sub
mov
imul
mov
mov
pop
lods
loopne
movb
inc
dec
jmp
adc
jl
imul
das
lahf
adcb
inc
mov
sbb
add
sub
inc
inc
mov
sub
pop
cmp
push
dec
and
push
test
pop
cmpsb
pushl
js
sub
jne
push
adc
bound
test
ss
dec
push
mov
mov
mov
add
xchg
and
mov
or
int3
adc
add
pushf
mov
inc
add
mov
adc
cmp
sbb
aam
sub
inc
sub
jb
cmp
inc
jle
dec
and
arpl
or
test
pop
pop
jnp
lcall
jns
xor
and
push
mov
dec
enter
mov
fimull
inc
call
adc
mov
push
data16
xor
dec
and
test
fcoms
rorl
fdivrl
mov
clc
icebp
lock
or
xchg
cmp
call
notl
js
sub
lret
enter
push
mov
and
out
shrl
push
mov
cmp
mov
pusha
loopne
mov
inc
ret
xor
leave
and
cld
fiaddl
adc
inc
push
mov
adc
xchg
out
pop
pop
push
push
add
pop
or
adc
popa
mov
mov
dec
mov
push
add
and
movsb
adc
aaa
adc
je
shlb
mov
sbb
pop
aaa
daa
daa
dec
clc
shll
repz
adc
jecxz
lahf
add
addr16
movsb
adc
inc
movsl
push
push
ret
sbb
jbe
jl
ficomps
testl
lret
lcall
mov
les
push
dec
shll
push
add
jae
in
outsb
jmp
pop
and
daa
xor
xchg
cmp
mov
or
xor
xchg
fdivrs
and
pop
in
push
in
inc
ljmp
or
mov
cmp
into
mov
outsb
sbb
sub
inc
push
and
test
cmp
fs
pop
iret
lds
popa
inc
imul
dec
in
or
mov
sub
cld
adc
movsb
ret
loop
enter
ss
stos
and
mov
aad
sbb
clc
and
or
rdtsc
mov
sub
std
lock
and
fucomi
xchg
imul
aad
sbb
xchg
lret
inc
int
mov
ret
loopne
aad
pop
or
pop
and
push
loope
push
loopne
mov
clc
dec
xor
xchg
adc
inc
push
sbb
adc
xchg
pop
push
add
push
push
inc
add
test
outsb
scas
dec
in
fwait
pop
call
stos
lcall
push
and
inc
jnp
in
in
mov
cmp
add
sub
jg
inc
sub
or
dec
ficomps
adc
cwtl
sub
clc
inc
mov
mull
xor
dec
inc
adc
fcoml
xchg
inc
add
arpl
aas
addr16
js
call
add
sub
addr16
insb
and
or
xlat
nop
pop
cmpsb
mov
sub
add
js
jo
loopne
fmul
call
rcrb
add
call
cmp
movsb
test
cmp
movsb
scas
dec
lods
mov
inc
popf
jecxz
xlat
pop
addb
ds
push
sahf
and
mov
pop
cmp
or
pop
lods
ret
aaa
or
test
sbb
js
adc
mov
dec
repnz
xlat
je
dec
ret
lock
out
cmp
mov
pop
call
clc
clc
movsl
or
mov
ret
das
jmp
sub
lea
mov
push
xchg
or
adc
sub
cmpl
mov
lods
cwtl
sarb
adc
cwtl
pushf
dec
mov
mov
clc
sbb
bound
dec
push
add
loopne
pop
xor
aam
xor
xor
add
adc
lret
inc
rcr
inc
cmp
bound
js
adc
xadd
add
push
pop
push
call
loopne
aad
int3
out
fstl
or
push
ror
sbb
shl
jp
pop
das
push
xchg
cmp
sarb
mov
pop
add
dec
or
pushf
in
gs
aad
das
or
xchg
in
rol
xor
mov
push
cwtl
insl
adc
jge
das
repnz
daa
pop
movsb
mov
aaa
mov
in
rcll
inc
jb
or
xor
sub
ret
sub
add
cmp
mov
testb
add
scas
add
mov
sub
jle
and
cmpb
jne
or
scas
nop
inc
hlt
add
int
ret
jno
sub
mov
ret
adc
loop
and
insb
pop
rcll
test
fcoml
or
mov
and
ja
iret
loope
sar
testb
cmp
pop
sti
std
ret
sub
push
testb
orb
inc
dec
pop
mov
dec
xlat
lcall
sub
inc
popl
movsl
pushf
outsb
insb
pop
outsl
add
faddl
adc
inc
pop
inc
test
adc
sub
xor
pusha
cs
adc
and
rol
loop
adc
cmp
dec
inc
xchg
inc
xor
sbb
sbb
pop
dec
fiaddl
jmp
rorb
jl
sub
test
pushf
jl
mov
mov
sub
inc
mov
xor
data16
sub
inc
mov
and
sub
je
lcall
or
lods
inc
int3
dec
adc
shrb
ret
push
andb
inc
pop
adc
pop
dec
nop
gs
add
jge
jo
les
in
jbe
adc
or
roll
and
push
xor
roll
imul
fisttpll
out
cld
lock
dec
sbb
mov
sbb
adc
pop
add
add
jecxz
roll
clc
cmpb
cltd
ficoml
rcr
jle
cmp
aas
mov
jmp
sbb
andb
add
pop
sbb
jge
lea
add
dec
in
xor
dec
into
adc
add
add
repz
imul
mov
inc
add
push
xchg
outsb
sahf
inc
ljmp
aaa
aas
add
dec
push
sbb
add
mov
mov
sub
iret
cmpsl
push
push
stos
loopne
sbb
mov
xor
adc
test
or
das
int
je
xchg
pop
mov
mov
dec
sub
or
sbbb
mov
or
cmp
sbb
or
nop
and
ret
jns
push
test
and
or
mov
shrl
sbb
test
adc
mov
and
lock
pop
shr
add
shr
out
rorl
cmp
and
jg
arpl
and
idivb
cmp
jne
mov
or
or
test
dec
inc
jge
sbb
jle
lea
pop
mov
in
hlt
jl
adc
xorb
add
add
jg
aad
cmp
je
lcall
lods
nop
enter
and
xchg
imul
sahf
clc
lret
or
enter
loopne
add
jnp
xchg
xchg
inc
push
jge
inc
add
mov
push
add
ja
cmp
out
xchg
cmpb
out
add
add
pop
dec
test
xor
push
push
xchg
mov
cmp
push
pop
push
insl
insl
xorb
popf
mov
add
js
flds
shl
adc
push
test
movsb
cmpl
in
xchg
jge
adc
and
add
jb
push
sahf
or
shl
cmpsl
scas
cwtl
pop
add
ret
adc
mov
sbb
in
sbb
scas
or
xchg
lea
jecxz
xor
shlb
insl
pusha
pushf
or
insl
scas
dec
loopne
cltd
or
cmp
into
jne
sbb
mov
inc
pop
xor
int3
inc
movsb
bound
xor
mov
mov
pop
cmp
xchg
andl
push
mov
adc
rolb
lods
ret
fidivs
inc
add
es
andl
mov
fcom
xchg
aas
mull
xchg
outsl
dec
cs
adc
js
and
inc
nopl
pusha
xchg
popf
sbb
rorb
or
lods
push
inc
push
pusha
or
fwait
js
adc
add
add
jbe
or
sbb
or
push
inc
mov
adc
add
inc
ds
int3
cmp
fldt
jge
in
in
jmp
sti
jge
push
and
lret
stc
mov
jecxz
dec
mov
sbb
repnz
mov
xchg
movsb
inc
fst
mov
pusha
pop
in
lahf
inc
rolb
jl
sbb
xor
repnz
pop
ret
fsubrs
inc
cmp
mov
lahf
sbb
in
pop
jb
add
int
clc
xor
lea
xor
ja
lock
or
xor
cmp
fcompl
cmp
push
inc
sub
sbb
jecxz
mov
fs
xchg
xchg
push
out
orb
dec
mov
lea
movsb
sub
jg
cwtl
aam
subl
mov
cmc
inc
or
adc
adc
es
fwait
xlat
xchg
fsubl
add
jecxz
inc
cmpsb
xchg
imul
imul
cmc
mov
shll
inc
enter
cmpl
add
mov
lods
pop
add
cld
fcomi
pop
sub
frstor
mov
xor
fsubr
cmp
inc
lcall
pop
mov
push
sbb
jle
jge
and
loopne
and
adc
inc
and
xchg
or
push
fadd
dec
mov
pop
or
leave
add
pushf
xchg
or
aam
lock
jnp
test
pop
jae
dec
mov
loopne
cmp
jne
jecxz
je
or
mov
jae
push
mov
in
jmp
or
dec
or
adc
iret
or
push
add
sbb
push
ret
ss
dec
mov
pop
mov
daa
lahf
shlb
in
imul
aas
test
add
mov
popf
addl
lock
pop
jp
test
inc
addb
mov
dec
aam
pusha
daa
loope
rorb
aam
adc
inc
cmp
jecxz
cmp
cmp
jge
data16
dec
je
adc
cmp
jp
add
or
adc
lock
or
inc
and
cmp
je
or
mov
jne
arpl
inc
rclb
je
mov
mov
mov
sub
daa
or
sbb
pusha
cwtl
inc
push
cs
pusha
inc
add
inc
rorl
sub
sbb
orb
out
les
scas
xor
pop
lret
add
cmp
cmp
jle
or
mov
xor
pushf
xlat
test
dec
sahf
add
lds
mov
lret
and
pusha
rolb
add
add
or
nop
pop
sub
dec
add
pop
adc
test
shll
mov
add
push
clc
adc
adc
sbb
mov
pop
jmp
daa
jno
inc
push
cltd
lcall
ds
ret
adcb
xor
adc
repnz
sub
adc
sub
jg
out
pop
sbb
iret
adc
test
pop
mov
vcvtss2sd
and
mov
or
lods
pop
or
in
mov
inc
sbb
mov
inc
nop
insb
xchg
sbb
or
and
cs
pushf
insb
in
sub
add
xor
cs
adc
negl
push
addb
jne
lea
in
xorl
push
aam
mov
xchg
mov
ret
ret
nop
aaa
mov
mov
add
or
mov
lea
pop
shlb
adc
popa
test
inc
nop
pushf
ja
lods
push
mov
ficoms
loopne
jne
bound
mov
sub
mov
lea
int
inc
movsb
pop
insb
mov
or
and
or
dec
or
rcrl
ss
dec
and
fmuls
or
aaa
add
loop
dec
mov
sub
fidivs
sbbb
inc
add
jns
xor
cwtl
mov
xlat
shlb
leave
int
addr16
jmp
dec
dec
imul
scas
push
add
popl
out
add
adc
xchg
mov
cmp
scas
add
jo
sbb
cs
sbbb
je
fs
or
inc
push
ja
add
xchg
xlat
dec
cwtl
inc
cmp
jg
sarl
push
and
jl
push
pop
sbb
outsl
daa
or
mov
or
bound
jge
add
add
je
push
clc
xor
arpl
pop
mov
pop
xor
fdivrs
clc
lods
inc
add
je
sbb
adc
scas
xchg
loopne
cmp
sub
pop
ss
and
mov
pop
shll
cmp
and
cli
jecxz
in
jmp
aaa
pop
pop
inc
cmp
jl
inc
add
xor
mov
cmpl
mov
add
sub
andw
xchg
sbb
je
fnstcw
sub
and
inc
fldcw
pop
ret
cmpl
sbb
rcrl
pop
mov
lock
xor
and
scas
push
pop
or
mov
in
adc
adc
dec
je
inc
rcll
cmp
adc
add
xlat
pop
sbb
in
fiaddl
lret
adc
jbe
mov
or
push
pop
lret
aas
and
xchg
inc
and
fldl
add
and
andl
data16
movlps
add
and
ret
das
fnstsw
test
jmp
dec
adc
jmp
pushf
pop
cltd
hlt
ret
lahf
jne
jo
les
or
sbb
add
adc
push
mov
mov
xchg
mulb
mov
ret
ja
mov
cmpsl
ds
iret
push
adcb
testb
pop
adc
add
add
xchg
mov
nop
cmp
xchg
fdivrl
loopne
icebp
or
fisttpll
push
enter
dec
hlt
aaa
test
push
jno
inc
fsub
mov
mov
lea
mov
daa
subl
pushf
mov
incl
pop
push
inc
lret
call
arpl
daa
out
mov
imul
les
or
stos
inc
enter
sub
lock
and
xchg
fld
jnp
jno
mov
add
movsb
cmp
sbbb
pop
mov
pop
clc
fsts
mov
mov
pusha
cmp
push
add
push
push
or
popl
jne
add
out
loope
inc
or
and
fiadds
arpl
push
rolb
adc
pop
movsb
jnp
inc
in
xchg
sbbl
ljmp
movsb
cmp
pop
mov
fcomps
loop
lea
sub
inc
sbb
add
pop
adc
push
in
inc
xor
pusha
bound
movsl
rorb
fidivs
leave
xor
pop
pop
mov
scas
jns
test
ja
fmulp
lods
dec
and
and
aam
outsl
iret
jl
and
imul
sub
add
mov
push
xlat
fnstsw
movsb
push
dec
jne
and
xor
shlb
xchg
movups
mov
pop
jecxz
jmp
xchg
test
sub
sbb
movswl
jg
imul
xchg
pop
fbld
push
mov
dec
jne
mov
nop
in
sub
push
cmp
je
popa
mov
and
or
add
test
pop
pop
xor
rcll
push
cmp
roll
iret
xchg
xor
jp
jecxz
lret
pushf
pusha
loopne
pop
es
mov
dec
pop
sarb
or
rolb
cmp
outsb
fsts
movsl
je
or
imul
dec
mov
or
pop
cli
mov
jne
pop
inc
addl
dec
dec
mov
mov
sti
mov
rolb
xor
sub
loopne
xchg
jo
sub
jns
mov
cmp
dec
push
mov
jmp
mov
push
stos
loopne
scas
cltd
lock
fstl
or
cmpb
shll
or
lods
xchg
jge
in
add
add
fildl
lock
mov
int
mov
mov
fs
push
loope
fmuls
and
dec
pop
ss
enter
dec
inc
lods
movsb
mov
xchg
out
lahf
pop
sbb
inc
xor
or
adc
push
sbb
out
adc
sbb
jp
testb
inc
mov
and
loope
mov
sub
push
pop
push
pop
add
mov
cmp
cmpsl
lea
mov
cld
dec
mov
js
add
jge
pop
mov
cwtl
mov
or
add
push
jb
jmp
lea
shlb
sub
int3
ret
sbb
add
mov
mov
test
lsl
add
call
or
and
rcrb
jo
fistl
push
popf
lods
insb
das
arpl
call
add
int
xchg
pop
ficoml
add
scas
lea
adc
mov
push
xor
push
push
sti
loope
sbb
in
xchg
jo
imul
adc
mov
xchg
in
dec
jno
popa
sub
iret
fnstsw
iret
push
pop
mov
dec
sbb
xchg
insb
mov
adc
jecxz
aam
or
or
test
add
pop
das
imul
cmp
arpl
xor
cmpsb
sbb
movb
sbb
adc
jecxz
push
sub
mov
add
imul
das
enter
dec
aam
adc
xorl
in
or
jne
adc
or
inc
rcll
pop
inc
in
sub
lods
cwtl
in
adc
xor
fdivs
inc
aad
adc
sbb
fs
daa
mov
popa
in
mov
out
mov
or
testl
call
imul
fcoml
addr16
sub
sbb
fsubs
scas
fisubl
push
divb
or
aam
pop
jmp
rcrl
pop
ss
pop
popf
cmp
enter
xor
pop
scas
fneni(8087
push
mov
mov
pop
popf
jne
inc
sbb
aam
cmp
test
push
lret
xlat
sbb
rcrb
add
inc
in
adc
and
test
xchg
cld
out
cmp
adc
pusha
sbb
push
xor
imul
fisttps
popa
mov
push
stc
adc
jmp
inc
mov
pop
cmp
jo
xor
in
inc
scas
and
dec
or
lods
pop
adcl
jmp
rcrl
setp
sub
fsubs
cmp
pop
out
cwtl
out
sub
adc
fst
cltd
add
daa
or
push
roll
jns,pn
xchg
pop
call
sbb
pushf
bswap
push
enter
xlat
pop
ret
jle
jmp
cmp
push
xchg
popf
lock
sbb
sbb
add
les
shlb
fs
lcall
movsb
fidivrs
imul
pusha
sub
sbbb
xor
aad
mov
in
clc
cld
imul
hlt
sub
aaa
push
add
jbe
push
cmp
aam
jo
ret
mov
sub
push
xchg
gs
hlt
add
frndint
cmp
add
sbb
add
pop
jb
lock
and
cmp
orl
jbe
shr
ja
inc
arpl
lahf
adc
or
leave
xchg
xchg
cmp
fmuls
sahf
mov
adc
das
ljmp
je
scas
add
and
jns
jns
mov
lea
fimull
mov
or
pop
add
fldcw
loop
into
aam
das
sbb
jae
in
hlt
adc
adc
add
jns
mov
add
fwait
mov
cmp
xchg
sub
xor
and
ss
push
or
testb
mov
aas
orl
mov
sbb
xor
fs
daa
cmp
ret
cmp
cltd
jnp
or
mov
mov
loopne
stos
nopl
jbe
mov
mov
jne
mov
or
push
push
mov
pop
or
add
leave
mov
stc
in
pop
xchg
pop
lea
outsl
push
mov
dec
add
pop
hlt
pop
inc
add
std
sub
lahf
lret
mov
loopne
push
lret
inc
jp
es
pop
and
push
mov
inc
fsubrl
sub
mov
and
sbb
xchg
inc
das
aad
lret
mov
xchg
pop
add
adc
or
xlat
out
push
lcall
out
jmp
hlt
inc
xor
mov
or
out
add
je
sti
adc
ds
add
jl
xchg
xor
test
or
mov
gs
imul
push
jo
jle
pop
gs
mov
xchg
std
iret
movsb
test
mov
pop
cmpb
roll
cmpsl
and
popa
enter
mov
mov
push
jo
fwait
push
loop
inc
jmp
sbb
adc
lock
loopne
jmp
mov
cld
pusha
rcl
lock
mov
add
popa
adc
lds
dec
iret
jl
push
pop
adc
fdivrl
dec
xor
cmpb
jo
push
push
fstpt
xchg
out
sti
out
popa
movsl
lret
or
sub
push
nop
mov
sub
call
adc
gs
cmovns
add
je
pushf
fmuls
pop
and
xor
add
xchg
mov
mov
mov
sub
out
lock
cmp
add
pop
icebp
or
cmpsb
hlt
sbb
or
insl
mov
loop
sbb
pusha
and
add
lcall
or
sub
adc
gs
pop
mov
adc
clc
jge
shr
fisubl
enter
inc
cmp
adc
rcrb
jg
enter
jl
mov
jno
roll
add
fisubl
imull
mov
or
pop
pop
test
imul
mov
adc
mov
xchg
sbb
jae
jl
sarb
jns
faddl
repnz
in
jns
sti
call
push
dec
jae
roll
iret
insb
push
mov
pop
inc
push
test
add
xchg
test
daa
fisttps
in
push
enterw
rclb
lcall
jnp
ficoms
cmp
loope
call
xor
repnz
and
adc
repnz
fsubrl
arpl
cmp
adc
cli
sub
es
stos
sbb
cmp
cli
push
addb
cmc
fs
xchg
lods
inc
push
sbb
ret
push
lods
popf
dec
pop
or
fwait
mov
add
jo
lcall
faddl
cld
inc
pcmpeqb
loop
aaa
xchg
in
sbb
daa
push
mov
sub
pop
jo
push
aas
outsb
push
jmp
in
fdivrl
pop
adc
jae
mov
and
iret
dec
dec
or
ret
cmp
wbinvd
dec
push
jge
mov
daa
adc
push
cmc
ret
xchg
or
int3
sti
add
mov
inc
addr16
xlat
shlb
add
fcomp
nop
xlat
or
push
xchg
ret
and
rorl
dec
mov
notb
mov
out
test
mov
sbb
add
out
js,pn
push
sub
add
jle
aad
jmp
mov
fdivl
mov
hlt
mov
sbb
jmp
mov
mov
nop
out
dec
shl
mov
lods
aam
jo
inc
sbbl
das
loop
bound
les
sbb
je
outsl
imul
push
sbb
jmp
xchg
je
test
dec
sbb
pop
cmp
jecxz
adc
mov
sub
fs
lds
das
xchg
scas
xor
das
xchg
arpl
and
and
sub
jbe
xchg
je
pushl
adcl
fstl
push
mov
stos
into
mov
ds
push
fistps
or
je
in
jecxz
adc
mov
or
test
mov
mov
or
add
lods
pop
hlt
and
lock
xchg
or
iret
mov
mov
ret
mov
aaa
out
mov
rolb
xor
dec
ja
and
les
clc
loope
out
adc
push
enter
imul
bts
jmp
lds
sub
popa
ljmp
push
xchg
adc
mov
aad
xlat
push
out
mov
add
rclb
stc
pop
daa
push
sbb
rorb
add
xchg
adc
push
mov
add
mov
jge
mov
cmp
push
push
push
and
adc
mov
inc
xchg
cld
fld
xchg
adc
adc
jb
sahf
sbb
push
fdivl
lret
inc
jae
push
push
mov
iret
inc
jo
pop
ja
adc
sbb
inc
lock
jmp
push
inc
aas
and
pop
or
ds
dec
cmpl
rorl
roll
mov
out
inc
imul
lcall
sub
or
out
push
dec
cli
sbb
inc
nop
pop
lods
lock
js
ljmp
jp
xor
mov
insl
add
out
adc
pop
hlt
mov
pop
scas
shrb
dec
fcoml
and
scas
shll
xchg
mov
lret
inc
mov
das
pusha
repz
and
pop
mov
pop
xor
push
jno
out
mov
aas
sti
inc
orl
mov
ds
iret
mov
or
and
sub
cmp
repz
pop
data16
and
lods
push
insb
jge
scas
push
pop
pop
and
and
pop
and
xchg
add
ret
adc
insb
mov
sarw
insl
das
pop
push
adc
push
mov
dec
shlb
sub
adc
mov
shll
repnz
loope
or
test
dec
and
nop
mov
gs
mov
dec
sbb
decl
stos
pop
aas
and
sbb
lock
xchg
mov
ret
ret
sbb
push
aam
mov
sbb
je
sub
je,pt
lahf
loop
jae
ljmp
jns
mov
xor
scas
dec
es
inc
inc
push
dec
mov
rcll
adc
inc
push
call
cmp
and
jg
sbb
sub
add
testb
inc
test
test
test
clc
inc
popa
subb
mov
mov
inc
inc
call
jmp
in
adc
push
sub
dec
rcr
mov
cmpsl
xchg
or
sbb
push
inc
push
lret
push
sub
hlt
push
add
loope
sbb
pushf
add
or
and
mov
leave
mov
pushf
add
adc
cmp
pop
dec
or
pop
push
int
sub
and
mov
jg
js
xchg
inc
shlb
icebp
add
mov
or
nop
out
mov
int3
lock
aam
xchg
cli
inc
inc
adc
inc
bound
test
into
inc
cld
mov
mov
ja
sbb
dec
cld
shl
rol
jp
dec
cmpsl
in
push
daa
xlat
fidivrs
ret
clc
clc
iret
mov
mov
jmp
lret
sbb
and
adc
lds
mov
movsl
add
cmpsl
mov
sarb
dec
scas
add
push
mov
cmp
stc
dec
call
clc
das
inc
add
lret
cli
fisttps
mov
sub
aas
sbb
xor
push
out
xlat
xchg
je
arpl
or
jecxz
mov
adcb
fidivl
cmpsb
push
int
push
ret
clc
adc
push
int
movsb
pop
repz
and
cmp
dec
ja
ret
mov
mov
cs
fldenv
ss
dec
mov
add
push
add
cs
fadds
and
jo
xor
pop
inc
push
shl
or
cs
insl
mov
cmpl
clc
lods
cmpsl
pop
lea
out
inc
jge
jecxz
pop
dec
jmp
sbb
cwtl
es
ret
fxch
jecxz
jno
and
add
aas
ret
cmp
or
loopne
mov
fsub
jns
dec
or
dec
clc
repz
sbb
ljmp
sub
push
mov
add
add
mov
pushw
xchg
dec
pop
mov
jb
mov
jne
jmp
mov
int3
sbbb
bswap
ficoms
cli
jge
cmpb
jg
out
cmp
add
adc
adc
cmpl
aam
and
dec
cmpsb
std
cmpb
add
enter
mov
mov
mov
or
nop
inc
add
mov
pop
add
mov
xchg
jne
dec
ss
enter
push
jecxz
gs
add
cmpb
mov
pop
out
loope
dec
cmp
push
rclb
adc
push
sbb
jo
pop
push
mov
sbb
enter
mov
and
mov
inc
add
cmp
mov
or
sub
jg
jge
push
mov
call
out
xchg
sbb
push
pop
or
sbbl
cmc
pop
pop
filds
aad
adc
je
sbb
pop
fmull
push
inc
test
mov
testb
push
jns
and
clc
and
pop
hlt
push
out
addr16
push
xor
push
add
mov
xchg
jg
dec
jp
xor
not
loopne
push
adc
dec
pop
dec
sbb
test
rcrl
xor
test
mov
or
cmp
addr16
adc
mov
cmpsl
xchg
cmp
mov
adc
cmp
xor
lahf
sbb
lcall
dec
mov
inc
and
mov
xchg
sub
clc
fcompl
dec
push
inc
rcll
into
loope
hlt
test
shll
stc
dec
loop
test
jle
or
imul
dec
and
mov
jb
out
ljmp
mov
xchg
icebp
stc
xor
in
mov
mov
lret
push
or
jge
xor
in
pop
xor
and
mov
into
or
or
es
ficompl
or
sbb
or
orw
stos
lock
divl
fldt
mov
daa
sbb
sbb
sub
mov
inc
push
push
push
adc
push
or
shl
adc
jo
mov
pop
push
jmp
or
sbb
xlat
push
das
inc
sbb
or
pop
mov
jnp
cld
testb
inc
mov
or
and
ds
scas
inc
pop
push
je
addr16
pushf
sub
bound
xchg
push
clc
mov
dec
sbb
xchg
and
cmp
aam
mulb
les
std
inc
add
xchg
and
or
pop
data16
and
mov
pop
adc
rclb
adc
fsubrs
inc
aam
repnz
orl
movsb
cltd
cmp
inc
push
adc
cltd
clc
push
add
lock
or
adc
xchg
adc
sbb
test
stos
cli
add
into
adc
jecxz
call
sbb
adc
xorb
je
jp
lahf
xlat
adc
and
ficompl
sub
lods
andb
push
push
cmp
push
or
ficoml
fwait
push
setne
mov
add
pusha
push
fnstcw
sbb
jo
and
mov
dec
gs
outsl
jo
push
push
adc
aas
add
jb
ffreep
and
fwait
pop
and
push
ss
inc
inc
pop
inc
idivl
in
mov
decb
add
pop
xlat
test
lret
push
mov
es
mov
inc
dec
ja
pop
call
pop
add
xor
call
cs
jne
hlt
dec
call
cwtl
mov
jmp
test
push
push
repz
scas
or
in
mov
inc
cmp
mov
or
data16
pop
dec
in
sbb
xor
frstor
and
in
sbb
mov
xor
inc
dec
jne
les
ret
or
push
imul
fsubrs
dec
push
push
addb
sbb
lcall
sbb
jmp
sbb
dec
aad
adc
ffreep
scas
inc
adc
ljmp
daa
adc
add
xor
mov
push
sub
jl
adc
inc
add
leave
push
enter
movsb
push
sub
jp
push
or
aas
orb
jg
push
dec
cmp
mov
xlat
xor
gs
ret
sub
nop
pop
xlat
call
into
mov
pop
mov
or
sbb
andb
jmp
sbb
es
mov
inc
add
clc
scas
icebp
and
fs
xchg
ljmp
or
add
adc
les
mov
aam
rorl
jo
hlt
add
cmp
lahf
pop
sbb
inc
pop
jecxz
cmpsl
or
inc
sarb
cmp
push
andb
movsb
xor
dec
loop
and
or
pop
xlat
xchg
push
loope
xchg
jne
es
and
push
push
sbb
cmpsl
add
mov
mov
and
lahf
mov
imul
insb
hlt
or
cmp
or
cltd
pop
mov
mov
mov
cmpsl
xor
xor
inc
mov
mov
add
mov
push
test
inc
jl
jle
fbld
cmp
je
int
add
xchg
shll
ds
or
add
rol
dec
or
push
pop
add
and
adc
adc
push
in
pusha
dec
add
loope
sbb
jo
lods
add
add
sbb
jmp
ret
xor
ds
in
pop
out
inc
push
pop
ss
andl
push
xlat
jns
cli
inc
imul
cmp
lcall
push
sub
or
arpl
lcall
aaa
dec
dec
das
test
inc
mov
rorb
inc
je
dec
push
fwait
mov
xor
sbb
xlat
sub
adc
out
cmpb
mov
push
loopne
and
adc
rorl
or
jecxz
jo
gs
lods
mov
es
ficompl
adc
and
inc
pusha
scas
frstor
wrmsr
push
push
pop
mov
add
or
dec
addl
add
insb
andb
adc
iret
enter
pop
cld
out
adc
jge
test
add
jp
loopne
shll
dec
adc
sahf
lea
adc
int3
sbbb
push
test
rorb
iret
push
adc
and
add
add
add
xlat
pop
adc
es
movsb
cmpsb
push
ficoml
jle
and
cs
add
add
inc
lret
mov
negl
pop
sbb
sbb
or
nop
push
and
jle
sbb
cmp
inc
lods
out
insb
pop
jmp
loope
adc
push
adc
add
dec
mov
add
pop
fs
xor
iret
stc
inc
cli
push
push
movsb
hlt
inc
push
inc
orl
sub
in
cwtl
insb
and
pop
stc
pop
call
hlt
add
adc
mov
add
arpl
and
clc
jne
jmp
lret
push
or
mov
cs
call
inc
stos
mov
add
xlat
cmpb
clc
mov
push
fwait
inc
adc
test
enter
push
sub
inc
adc
add
fsub
dec
xchg
fcompl
push
cmp
rolb
or
inc
cld
mov
fcompl
inc
dec
pop
daa
decl
and
sub
add
out
sub
add
sbb
push
nop
push
push
outsb
sbb
lahf
orl
and
or
sbb
push
push
xlat
adc
incb
lcall
in
mov
sub
pusha
cmp
adc
sbb
lds
adc
mov
arpl
sbb
mov
add
pop
add
sbb
or
es
cmpsl
negb
ja
push
test
ret
inc
loopne
inc
sub
sub
mov
sub
and
sub
pop
lret
stos
dec
cs
sbb
or
or
push
mov
push
mov
or
cmpsl
push
push
push
push
adc
jecxz
xchg
cmp
pop
inc
and
pop
mov
add
xor
and
inc
or
add
adc
cmp
cmp
push
mov
insb
push
mov
mov
pop
dec
mov
cmpb
add
ja
mov
dec
clc
mulb
mov
pop
or
add
jmp
mov
add
pop
add
fisubrs
idivl
fisttpl
jbe
mov
pop
jo
inc
push
or
add
sub
mov
add
add
add
pop
iret
dec
addl
sbb
add
mov
and
les
cld
outsb
and
jbe
pop
paddq
push
pop
inc
pop
inc
dec
ret
push
pop
cmpsb
dec
pop
add
mov
cmpsl
sbb
adc
inc
pop
call
xchg
outsb
imul
mov
cld
push
xchg
mov
mov
stc
ss
cld
push
jo
clc
maxps
cmp
xor
adc
jns
xor
mov
lret
mov
in
sahf
mov
mov
and
cld
in
std
pop
mov
jmp
cld
pop
test
dec
int3
mov
popa
add
fstpl
sbb
mov
mov
inc
pop
popa
cltd
adc
daa
or
lret
les
int3
dec
add
inc
mov
adc
out
mov
mov
or
mov
movzwl
dec
dec
dec
cmp
je
jbe
dec
dec
dec
dec
js
jp
dec
dec
dec
dec
jl
jle
dec
dec
dec
dec
pusha
popa
bound
dec
dec
dec
fs
dec
dec
dec
push
dec
dec
dec
insb
insl
outsb
outsl
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xor
dec
dec
dec
dec
xor
ss
dec
dec
dec
dec
cmp
cmp
dec
dec
dec
dec
cmp
ds
dec
dec
dec
dec
and
and
daa
push
jno
and
dec
sbb
inc
mov
inc
push
or
mov
add
mulb
outsl
or
mov
push
es
jo
getsec
leave
addb
arpl
dec
sbbl
or
xchg
ds
outsl
outsb
je
imul
cmp
or
mov
popa
sbb
sbb
stc
mov
jae
addb
pusha
seto
add
pop
xchg
mov
jae
je
fidivl
dec
lods
fists
jns
loope
test
mov
inc
add
cltd
enter
je
arpl
adc
mov
jecxz
outsb
gs
xor
gs
cmc
sarl
add
jae
add
cs
into
es
outsb
int
sarb
pop
jo
outsl
sbb
push
inc
pop
idiv
inc
popa
jae
add
sbb
or
sub
jl
or
add
testl
iret
or
bswap
js
inc
idivb
push
push
push
dec
outsl
jo
je
push
andb
sbb
or
out
frstor
nop
and
add
sbb
adc
xor
pop
idivb
aas
mov
loopne
pop
mov
cmp
pop
adc
fdivl
ja
and
inc
jb
fimull
pop
xor
bound
jno
fiaddl
jl
jp
fistps
sbb
je
adc
cs
inc
imul
pop
inc
outsl
jb
jae
es
cmpsb
loope
and
add
jnp
push
and
pop
or
adc
sbb
filds
incl
jbe
push
aad
jmp
inc
lahf
mov
push
or
inc
xor
ja
popa
push
push
test
pop
outsb
mov
add
and
mov
xchg
out
cmpsl
inc
xchg
insl
mov
rolb
out
cmpsb
cmpsl
out
mulb
and
cmp
adcl
pop
cmp
js
lcall
cmp
loopne
fst
add
rolb
aam
pusha
aad
adc
and
dec
les
das
pop
adc
ret
stos
aas
pop
sbb
inc
iret
adc
rclb
add
scas
les
aas
push
push
dec
test
movsb
inc
mov
add
cmp
mov
xor
xchg
cmp
jnp
sbb
xor
add
push
imul
cmp
pusha
addb
movl
and
bound
pop
sbb
ja
outsl
leave
xor
push
add
mov
pop
pop
sbb
lds
repnz
jle
cmpl
add
dec
bnd
imul
inc
inc
add
add
push
xor
nop
loopne
imul
jmp
test
mov
add
push
push
inc
je
dec
and
dec
jae
pop
and
sbb
jo
push
clc
inc
and
movzwl
cmp
add
out
xchg
add
pop
inc
pusha
inc
add
movsl
rorb
enter
inc
add
sahf
mov
adc
cmp
je
inc
add
imul
mov
lock
push
and
push
inc
popa
sbb
sub
lods
pop
sbb
push
movsl
push
and
adc
dec
imul
popa
add
pop
aas
mov
push
or
insl
cld
and
hlt
imul
fmuls
stos
mov
das
fmul
insb
jmp
pop
sbb
fcompl
sbb
push
fsubr
test
lret
es
in
rorl
aad
and
mov
sbb
lock
pusha
mov
adc
and
fdivrs
es
add
daa
pop
lds
sahf
fwait
clc
das
push
sub
mov
in
nop
mov
pop
inc
pop
push
jle
mov
dec
adc
sysret
pop
popa
fstpt
loopne
inc
bound
pop
fidivs
pop
and
ss
aas
pop
push
loopne
rclb
or
popl
and
enter
push
mov
out
pop
push
mov
cmp
fadds
inc
mov
or
xor
daa
cmpsl
xchg
ret
xchg
cmpsl
call
fwait
xchg
clc
xor
cmpsl
or
sbb
sub
insb
scas
sbb
addr16
insb
sub
imul
dec
arpl
addl
push
push
arpl
jmp
and
sbb
mov
jl
pop
int3
xchg
lods
pop
push
les
bound
jns
call
pop
add
push
cmp
movl
cvtpi2ps
add
xor
add
out
mov
das
dec
mov
push
push
add
out
jne
fs
insl
popa
addr16
xchg
mov
andl
sub
insb
cld
mov
inc
lock
push
lods
ret
nop
hlt
mov
push
mov
psubw
jl
inc
lods
jo
cmpsb
dec
jnp
inc
jno
mov
jae
in
in
outsl
lock
shlb
js
call
ds
jnp
xor
inc
mov
dec
mov
repz
cwtl
jge
sbb
or
lods
andl
push
jno
xchg
or
inc
aam
jg
and
je
and
sub
addb
ds
fwait
nop
inc
popa
mov
pop
pop
xor
jg
enter
jo
inc
pop
mov
xchg
sub
insb
xchg
enter
fimull
mov
push
mov
test
lods
in
popf
add
aas
nop
xchg
xchg
cmp
fmull
pop
push
popa
or
mov
mov
sbb
out
rcrb
push
fwait
call
push
dec
arpl
pop
js
xor
push
pop
fsubrl
and
jns
or
outsl
in
cmpsb
fmuls
add
inc
jns
jb
sbb
mov
mov
rcll
xchg
cs
push
cmp
stos
jbe
es
nop
sbb
cmp
ffree
pop
mov
pop
xor
enter
loop
adc
addl
rorl
add
inc
rolb
imul
or
nop
lock
mov
ret
push
push
sub
add
sbb
rorb
ffree
mov
add
sub
call
mov
inc
ss
dec
je
sbb
push
inc
ret
jne
cmp
jbe
mov
das
inc
aam
lock
inc
and
imul
dec
arpl
cmp
adc
and
stos
mov
dec
or
xchg
xchg
add
xchg
decl
xchg
push
xchg
das
pandn
inc
add
pop
stos
jno
add
push
push
xor
out
outsl
das
test
dec
lock
loope
cwtl
sete
mull
dec
push
shrb
cmp
mov
cmc
pusha
mov
and
dec
ss
imull
and
jbe
xchg
jo
nop
mov
pop
push
sub
cs
mov
add
xor
sub
out
aaa
push
add
outsb
and
je
fdivr
xlat
cmp
push
push
repnz
or
imul
cwtl
fs
jmp
adc
inc
push
jle
aad
enter
jae
sub
xchg
addb
pop
sbb
mov
out
adc
or
mov
xor
xchg
sbb
insl
jecxz
fucom
adc
xor
xchg
mov
lock
insl
mov
nop
xor
push
daa
iret
in
lods
or
adc
insl
inc
fdivrl
les
push
jg
mov
or
add
js
in
adc
cmp
cmp
or
sbbl
shlb
and
jmp
nopl
stc
packsswb
jb
outsl
outsb
inc
out
repnz
mov
outsb
pop
dec
insb
imul
das
stc
dec
popa
jbe
add
jb
insb
gs
xor
add
push
gs
insb
pop
andb
push
imul
push
push
cmpsb
xchg
pop
cwtl
iret
pop
gs
insb
outsl
ja
jmp
negb
jne
push
adc
jne
mov
pop
pop
or
jns
push
fadds
add
ja
cmp
inc
dec
stc
adc
data16
push
fdivl
lock
xor
popa
test
dec
pop
pop
jo
push
pop
lock
and
inc
push
addr16
pop
jnp
or
inc
je
inc
push
xchg
int3
mov
aam
cld
insb
add
or
dec
shll
jg
gs
or
insl
das
push
jmp
jno
outsb
daa
pop
xchg
imul
lahf
sbb
sbb
xor
inc
pop
pusha
add
push
notb
shlb
jg
int
nop
mov
loope
fcomip
aaa
adc
insb
andb
aaa
int
in
sbb
or
outsw
inc
push
enter
pop
add
pop
ret
outsb
jne
pop
xchg
fwait
or
or
sbb
sbb
addr16
push
arpl
add
jle
inc
inc
imul
das
xorl
punpcklbw
insb
daa
or
aaa
das
or
add
aas
push
cmp
scas
jmp
ret
push
mov
out
pop
dec
out
pop
test
fisttps
dec
or
inc
xchg
mov
or
fcoms
aas
int3
testl
dec
inc
push
push
inc
push
add
inc
xor
inc
inc
inc
loop
or
jg
notl
dec
inc
dec
dec
arpl
xchg
cmpl
dec
dec
inc
push
dec
dec
push
pop
mov
cmpb
addr16
dec
dec
and
out
inc
inc
xor
dec
enter
movb
and
mov
aas
fiaddl
xchg
inc
push
inc
inc
dec
int
in
mov
push
push
dec
dec
push
dec
dec
mov
push
insl
imul
sbb
mov
nop
jl
inc
dec
push
mov
dec
inc
dec
mov
out
push
dec
pop
test
inc
inc
push
push
push
dec
push
inc
scas
mov
aas
in
inc
dec
push
mov
daa
xchg
test
js
push
mov
mov
jl
shl
add
orl
dec
jl
add
adc
add
mov
lock
orb
sbbb
add
add
repnz
mov
mov
lea
outsl
add
and
fyl2xp1
lea
mov
sub
prefetch
pusha
imul
insl
or
add
and
dec
pusha
xchg
in
sbb
mov
add
sub
push
fs
adc
mov
and
dec
aas
or
pop
xchg
mov
jno
test
es
into
rclb
test
or
jmp
lods
xchg
movsl
ret
and
jl
lcall
es
adc
inc
and
jns
ret
das
idivb
dec
popf
mov
and
xor
clc
subl
cmc
xor
ss
adc
lret
loope
ficoms
xor
or
and
cld
or
mov
arpl
scas
rcll
fcoms
add
push
cli
das
fcoms
inc
lea
adc
das
movsl
mov
pop
leave
mov
jae
xchg
jmp
mov
xchg
pop
push
cmp
jb
mov
pop
mov
sub
xor
adc
int3
sbb
and
mov
fwait
orl
test
pop
in
mov
xchg
enter
inc
cli
je
fldt
jmp
adc
lcall
add
jae
mov
inc
sbb
dec
fs
xlat
lea
incb
mov
push
adc
cmp
subb
inc
push
cmp
test
jo
xor
push
jl
pop
movb
push
fcomp
add
mov
jge
dec
push
mov
jmp
inc
fildl
mov
jae
or
jmp
mov
push
ljmp
xchg
or
or
int
xlat
pop
out
jmp
xchg
add
mov
inc
inc
add
jp
mov
repz
aam
outsl
loop
imul
mov
inc
sub
sub
mov
nop
push
inc
sub
imul
pop
add
jo
iret
adc
pusha
inc
xchg
xor
mov
sbb
insb
xchg
fwait
nop
sub
inc
imul
popf
hlt
mov
xor
neg
cmpsb
imull
jg
inc
push
das
fiadds
ficoml
jp
mov
add
test
andb
dec
imul
mov
or
aaa
adc
inc
sbb
shl
div
sti
xchg
pop
and
leave
add
or
pop
or
pop
sub
lahf
movsb
dec
loopne
inc
sbb
or
loopne
dec
add
cmp
fidivrl
sbb
nop
or
mov
cmp
test
loope
or
je
fwait
or
xorb
push
leave
test
je
jns
rclb
add
das
cmp
in
push
jne
pop
repnz
cs
jne
pushl
test
rcrl
mov
inc
test
inc
jp
mov
adc
and
call
pop
enter
loopne
mov
cmp
mov
sbb
leave
repz
lock
or
mov
sub
xchg
xchg
andl
lret
mov
jb
in
sbbl
mov
push
nop
or
xchg
inc
in
xchg
mov
ret
mov
push
nop
pop
push
lock
push
aas
sub
and
nop
inc
in
inc
fisttpll
movlps
mov
mov
inc
ds
pop
push
xchg
inc
inc
mov
adc
add
mov
lock
lock
xchg
in
push
popa
inc
fistpll
imul
mov
and
adc
fs
mov
clc
dec
jb
push
add
mov
lock
inc
jecxz
jns
add
adc
xor
hlt
dec
lret
call
lock
or
and
movsb
dec
push
aas
push
ret
inc
xorl
mov
xor
jmp
mov
movb
cs
push
inc
nop
add
ss
sub
mov
xchg
lret
daa
xchg
jo
pop
inc
add
or
xchg
lret
adc
dec
and
sbb
xor
inc
sbb
popl
add
lahf
clc
or
sbb
scas
mov
or
sar
aad
and
push
adc
inc
rclb
movsl
andl
sbb
mov
fidivrl
sarl
inc
mov
out
idiv
sbb
push
or
push
add
or
pop
or
or
dec
xor
sbb
xchg
lds
push
push
pushl
pusha
mov
dec
call
jg
pop
xor
sub
cmp
inc
mov
xor
shrl
or
sub
inc
xchg
and
mov
sbbb
sbb
add
jp
js
xor
push
rorl
pop
cmp
push
push
mov
push
in
cwtl
test
andl
iret
jge
push
insl
push
pop
or
pop
mov
or
imul
sbb
lea
clc
dec
imul
inc
push
mov
push
or
cmp
inc
push
pop
xor
insl
and
aam
test
imul
negl
sbb
pusha
lods
pusha
push
mov
ja
adc
ror
dec
movsb
xchg
jp
lea
mov
or
cmpsl
pop
xchg
ret
and
xor
xorl
add
stos
or
fidivrs
cmp
daa
rolb
mov
addb
mov
pop
out
dec
cltd
mov
mov
xchg
les
stos
mov
test
loop
rclb
pop
sub
fmuls
lcall
cmova
pop
adc
push
adc
lds
pushf
push
dec
and
and
std
dec
adc
das
mov
aam
fmuls
dec
pop
sub
popa
inc
xlat
stos
sbbb
movsb
dec
cmpsl
scas
xchg
pushf
mov
sub
adc
popf
add
or
pop
inc
jae
fildll
jl
dec
mov
and
mov
cmp
je
mov
pushf
out
nop
mov
movsl
pop
pop
aad
movsb
lods
add
mov
out
push
mov
push
and
cmpl
clc
sbbl
or
and
orb
jl
adc
adc
ja
jbe
sti
lock
not
and
mov
jg
cmp
je
ret
inc
sub
add
mov
gs
mov
imul
inc
and
jo
mov
pusha
xor
sbb
push
xor
and
sub
or
sub
push
adc
repz
inc
adc
sbb
testl
fcmovu
push
jo
daa
cmp
dec
and
push
movsl
xor
testl
pop
testb
pop
xor
sti
out
mov
add
mov
xchg
jl
mov
add
rcrb
mov
adc
nop
mov
imul
pop
pop
out
in
cmp
dec
inc
cmp
hlt
mov
mov
scas
cmc
dec
inc
fmuls
add
gs
add
inc
push
mov
rolb
sti
or
cli
dec
lods
daa
adc
fstpt
cmp
lea
sub
clc
add
mov
arpl
popa
lock
mov
lcall
popl
mov
in
popa
hlt
push
shlb
int3
jge,pt
mov
int3
js
dec
loope
push
adc
in
decb
push
sbbb
push
xor
adc
cmp
call
bound
jbe
cmc
fwait
insl
imul
in
pusha
jns
outsb
xchg
rcrb
bound
roll
cmp
mov
sbb
in
mov
sahf
lock
jle
fdivl
add
pop
in
in
xlat
fmuls
fimull
push
sti
sub
inc
pop
mov
mov
aas
imulb
mov
add
cs
hlt
adc
add
fcmovu
fisubl
push
mov
pop
shl
mov
testb
divl
shl
and
jle
sarb
pop
sar
mov
mov
pop
xchg
mov
aas
mov
aam
add
mov
loop
sub
pop
sub
test
sub
add
cmp
jo
test
push
stc
push
out
xor
pop
push
mov
stos
test
arpl
push
ret
push
insb
cwtl
stos
and
push
ror
inc
cmp
nop
lret
push
rcll
sbb
add
cmp
sbb
or
mov
push
push
push
jge
ja
sbb
mov
jnp
and
cmpsl
sbb
and
arpl
push
sub
dec
xor
jmp
jns
pop
mov
dec
add
sbb
lock
cmp
ficompl
das
inc
sbb
stos
daa
or
pop
clc
stos
popa
mov
loopne
movb
mov
ja
inc
add
stos
dec
in
gs
out
leave
movsb
mov
pop
call
add
fiadds
cmp
mov
sub
jecxz
add
loope
scas
and
mov
adc
push
mov
mov
or
outsb
and
aaa
add
add
dec
das
xchg
mov
imul
dec
fcomps
adc
aas
dec
push
es
mov
mov
subl
push
mov
pop
pop
push
ss
and
dec
jne
fidivrl
add
cmp
notl
adc
adc
sbb
push
inc
inc
push
dec
and
cmp
sbb
call
in
mov
push
loope
sbb
and
cmp
push
and
mov
enter
xor
jmp
jp
mulb
mov
sub
shl
mov
mov
jmp
fwait
addr16
sti
data16
insb
loop
mov
adc
adc
cld
push
mov
rcrb
out
push
push
incb
mov
jo
or
push
jnp
or
movsb
rdpmc
cmp
push
rorb
fldl
add
ds
ds
mov
inc
movzwl
lea
lock
pop
push
cmp
xor
daa
jmp
add
ss
data16
test
push
cld
icebp
arpl
das
scas
hlt
rolb
sahf
sub
cmp
mov
cwtl
pushf
mov
add
push
and
or
jl
pop
stc
ljmp
cmp
mov
add
rcrl
mov
lea
adc
cld
mov
or
add
pop
pop
mov
xor
push
push
dec
clc
jns
jae
push
xor
cmp
sti
fisttpl
jmp
es
pushf
orb
ret
popa
pop
cwtl
ss
jo
dec
loope
mov
movups
inc
mov
mov
dec
add
sub
and
es
sbb
loope
inc
add
add
inc
inc
ljmp
or
add
in
sbb
mov
call
lods
fnsave
mov
inc
jl
sub
or
push
push
jmp
cmp
test
das
cmpsb
or
mov
pop
xor
jge
orl
shrb
xlat
or
push
push
add
inc
in
pop
movsb
js
movsl
inc
mov
pop
push
push
inc
xor
sub
cmp
add
popa
push
test
es
jl
add
sbb
sub
and
stos
rcr
pop
pop
adc
movl
and
and
xorl
jns
adc
mov
repnz
sbb
cs
push
cmp
lock
adc
nop
mov
mov
add
push
dec
dec
fadd
xchg
jl
sub
fcompl
add
sub
testb
call
lock
mov
dec
cmp
fadd
das
lods
movsl
or
mov
cmp
xor
lods
jg
test
jle
cmp
jl
aaa
pop
iret
sahf
xchg
sarb
enter
test
clc
jle
test
push
dec
out
sbb
or
add
repz
push
pop
jne
inc
in
xor
loop
inc
cmp
mov
sbb
fsubl
adc
arpl
push
pop
cli
in
xchg
sbb
adc
mov
pop
fcomp
rcrb
leave
pop
mov
insl
movsl
xchg
sbb
scas
into
xor
jbe
in
xchg
push
and
push
sbb
popf
les
sub
inc
mov
jp
inc
data16
dec
or
inc
test
in
cmp
ds
ret
sbb
fisubrs
in
sub
loopne
es
cmp
gs
mov
xchg
hlt
movsl
cld
push
mov
inc
dec
jne
enter
cmp
pop
out
inc
and
xor
push
xor
cli
lock
pop
ss
repnz
add
sub
add
adc
mov
adc
test
shlb
mov
adc
jp
inc
xor
mov
enter
jbe
inc
xchg
movsb
or
mov
mov
mov
push
mov
cs
ret
sbb
xor
hlt
mov
sarb
add
push
int3
mov
repnz
push
mov
adc
sarb
mov
push
push
dec
outsl
xor
or
popf
pop
shl
push
and
rorb
add
rolb
aas
mov
and
test
in
pop
pop
push
stos
gs
loop
cmp
adc
push
xor
adc
xor
test
lods
ficomps
xchg
push
call
test
dec
jl
aas
data16
mov
pop
sbb
jb
xor
or
ret
outsb
or
jmp
adc
ds
add
or
jns
jl
cmovs
or
jle
lock
jmp
jge
pop
push
jl
in
and
test
sbb
cmp
insb
and
clc
icebp
dec
data16
or
inc
and
jae
mov
jbe
mov
add
sub
scas
xor
ljmp
mov
loopne
les
mov
orl
in
cld
arpl
adc
pop
or
mov
or
pop
pusha
bound
adc
xor
rclb
sbb
adc
pop
fucomp
push
jl
push
add
loopne
adc
lcall
mov
xor
fucomip
cmpl
pop
ljmp
push
int
mov
or
pop
mov
in
push
ficoml
add
sbb
mov
hlt
pop
clc
pop
enter
hlt
hlt
decl
dec
sbb
cmpsl
add
cli
loopne
jg
dec
jecxz
jl
sub
cmpsl
cmpb
lods
loop
ljmp
cs
pop
out
sbb
lcall
jg
add
flds
out
adc
fimull
pop
xchg
mov
pop
push
push
in
pop
xchg
call
imull
sbb
lcall
adc
in
outsl
sbb
dec
loopne
fsubr
js
mov
loope
imul
adcl
or
mov
add
sbb
rclb
jns
xchg
adc
fidivl
push
xchg
fwait
xor
mov
mov
add
lods
or
lods
data16
ss
cs
mov
mov
lods
cmpsl
mov
add
mov
jle
mov
jbe
js
add
lcall
in
in
cmp
xor
in
pop
fldt
sti
fcoml
clc
call
sarb
sbbl
add
addr16
sbb
sub
pop
or
lods
pop
movb
scas
adc
lahf
icebp
lods
mov
pop
mov
mov
dec
es
sbb
shll
sbb
adc
sub
mov
mov
nop
ret
pop
inc
mov
adc
adc
dec
insb
or
inc
cmpsb
adc
push
push
jne
mov
sahf
adc
and
push
adc
pop
mov
pop
insl
xchg
arpl
je
sub
adc
inc
sub
push
add
dec
dec
add
popa
outsl
clc
dec
pop
push
cltd
fadds
cs
mov
scas
mov
push
add
xchg
in
data16
cmp
or
or
and
cmp
xchg
mov
test
icebp
mov
ret
ja
popa
inc
mov
inc
push
shll
insb
sbb
push
pop
adc
push
adc
xchg
jae
cmp
xchg
pusha
loope
cmpsl
cmp
pop
ret
push
aaa
bound
pop
bound
sub
cmp
rorb
inc
rolb
lcall
outsl
jb
test
movsl
add
in
fidivrs
push
add
dec
ds
ds
pusha
dec
push
xor
inc
adc
ss
out
dec
stos
push
or
inc
sbb
in
ljmp
push
sbb
xchg
fcompl
add
repnz
ds
push
adc
mov
nop
daa
stc
hlt
mov
call
repz
lock
lock
fwait
pop
in
inc
inc
bound
xchg
arpl
rcll
ja
popw
gs
arpl
insl
jo
pop
sar
pop
and
pop
sbb
xorb
xchg
bound
cmpb
inc
dec
jne
adc
add
add
sbbl
icebp
or
movsb
mov
jl
sbb
add
sbb
adc
push
filds
lea
pop
mov
das
loope
pushf
and
mov
xor
mov
or
xchg
xchg
mov
and
test
xor
aad
rorb
push
clc
mov
mov
pop
sbb
cltd
movsl
shrb
add
cld
push
cmpsl
lea
test
add
xchg
add
fisubrs
bound
adc
push
arpl
mov
and
mov
push
call
push
add
cwtl
imul
pop
dec
orl
into
jno
data16
or
and
cmp
js
ds
test
daa
cmpl
seto
daa
mov
popf
and
push
add
dec
or
push
adc
dec
xor
sub
fwait
test
sbb
jmp
cs
sub
xchg
pop
pusha
gs
ds
mov
outsb
fnsave
jg
xlat
pop
jne
das
add
inc
mov
or
pusha
jecxz
fdivr
push
dec
or
adc
int
mov
inc
pop
dec
scas
icebp
out
int3
les
adc
push
push
in
pop
das
sbb
or
sub
test
adc
jno
cvttps2pi
sbb
push
fildl
and
cld
or
mov
push
pop
xchg
lret
testl
popa
enter
nop
cmp
inc
pusha
mov
pop
adc
adc
std
sbb
adc
mov
and
xor
add
gs
xlat
inc
push
aas
aas
jno
arpl
dec
cmp
ffreep
and
cmp
and
arpl
lcall
mov
inc
add
push
jge
rcrl
sbb
xor
sbb
pop
xchg
xor
cmpsl
sbb
push
and
enter
jo
push
mov
jns
jns
cmpl
push
adc
fwait
dec
dec
mov
loopne
xchg
jno
sbb
movsl
test
sub
xchg
push
or
inc
fistpll
push
push
jno
sti
xor
pop
add
add
dec
leave
mov
bound
cmpl
xchg
add
je
xor
pop
or
jecxz
arpl
insb
inc
add
jbe
cmpsl
adcb
aaa
add
cmp
and
int
inc
add
xor
push
mov
je
orl
push
or
mov
sbb
adc
pusha
aaa
icebp
add
add
pop
rcrl
in
shll
fucom
mov
mov
insb
imul
sbb
pop
les
das
div
cli
dec
or
loop
or
jge
fimull
mov
cmp
xchg
mov
sbbb
outsl
jg
dec
push
xchg
scas
pop
sub
push
pshufw
out
imul
cmp
clc
pop
aad
das
bound
inc
jle
and
mov
and
mov
xchg
daa
aaa
jecxz
push
sbb
or
sbb
dec
push
dec
movsb
outsl
test
pop
or
loopne
push
jne
cmpb
outsl
xchg
dec
call
mov
push
fs
test
jmp
push
xor
push
dec
sub
icebp
cmp
inc
sbb
or
and
pop
repnz
and
and
insb
pop
adcl
add
and
mov
adc
test
jle
push
push
in
das
popf
cs
mov
sub
subb
cmp
stos
push
dec
popa
mov
push
cmp
xchg
adc
mull
or
out
sbb
xchg
xor
or
add
loop
xor
and
push
cmp
mov
push
mov
pop
pop
outsb
sti
cmpsl
add
movb
push
and
and
les
push
mov
sub
and
xor
push
mov
sub
inc
sub
int3
inc
sub
mov
sub
sub
inc
sub
pop
mov
mov
inc
pop
es
iret
inc
cmp
and
cmp
loopne
imul
or
fdivl
sbb
add
cmpl
fsubrs
in
or
push
push
mov
orb
loope
and
push
in
fs
mov
push
push
ret
adc
adc
ds
mov
mov
bound
int
push
js
inc
sub
adc
xor
dec
cmp
js
loope
xchg
pop
sbb
or
in
insl
aas
xor
add
std
adc
jnp
test
insl
into
inc
cmpl
ret
add
leave
and
enter
and
pop
mov
or
inc
pusha
icebp
xor
rolb
out
pushf
pminub
rcrl
sub
sbb
addb
sub
add
fs
and
push
out
sbb
fcoms
jns
adc
test
push
or
test
addr16
or
push
dec
imul
arpl
add
sub
divb
incb
jo
ja
xor
xchg
and
dec
add
ss
adc
in
xor
shll
ja
and
xor
sbb
inc
push
nop
out
or
mov
push
aad
cli
insl
xor
gs
sbb
cwtl
fdivrp
mov
aaa
data16
and
lcall
in
les
aad
add
xor
xchg
dec
pop
and
add
push
jo
xor
add
or
ret
push
or
daa
cmp
orl
and
fs
movsl
cltd
test
cmp
cmpl
je
xchg
loopne
pop
add
frstor
push
dec
jl
loop
jne
inc
ja
dec
enter
sub
cltd
out
mov
add
sbb
mov
mov
sbb
mov
adc
adc
dec
sbb
stc
jae
jbe
mov
and
les
or
cmp
and
loopne
pop
or
scas
int
lcall
data16
jle
repnz
subl
sar
hlt
mov
add
ja
mov
out
adc
mov
push
pushf
fsub
and
mov
mov
lret
sbb
popf
andb
push
push
in
ret
out
cmpl
aad
insb
into
or
push
mov
lea
dec
loop
mov
lea
dec
mov
lods
pop
fistl
mov
adc
cmpsl
cld
add
push
xchg
xchg
test
std
out
enter
xchg
dec
lock
push
and
sub
sti
fwait
dec
or
jge
mov
xorb
lcall
je
add
push
aaa
sbb
lock
push
sti
mov
stc
cmp
and
imul
add
je
cmpb
jl
arpl
imul
insb
dec
xchg
adcl
push
add
jp
cmp
mov
xchg
stc
or
lahf
aam
ss
add
or
fmull
mov
jp
inc
iret
imul
and
jbe
jb
addb
push
pop
sbb
xor
xor
or
fisubl
jmp
pop
push
adc
push
add
pop
divl
push
push
mov
pop
das
rcrb
lds
in
loope
sbb
and
or
push
push
sbb
inc
movsb
or
jg
nop
and
fistps
pop
and
push
test
mov
jmp
sbbl
push
dec
fs
clc
sub
push
mov
gs
inc
pop
orb
mov
loop
jmp
or
cmp
xor
aad
jmp
bound
jle
dec
cmp
jo
sbb
jecxz
dec
xchg
push
int
pop
jae
adc
sbb
pop
or
sbb
shlb
xchg
sbb
and
popf
clc
les
mov
lods
mov
and
addb
std
push
ret
pop
jo
jmp
aam
cmpb
imul
or
inc
lock
pop
mov
insl
adc
pop
cltd
jmp
xchg
inc
adc
or
mov
in
sub
sub
push
mov
shrl
or
xchg
stc
scas
test
xchg
rol
pop
addl
push
cmp
push
je
shlb
push
loop
inc
ret
pop
subl
or
jmp
pop
pop
loopne
push
mov
and
call
fisubs
add
repnz
mov
or
pop
or
in
push
or
cmp
ss
scas
sbb
or
jb
cmp
je
aas
xchg
pop
in
icebp
shll
pushf
mov
cmp
in
call
jge
sub
sbb
or
lods
adc
mov
ror
inc
push
repnz
les
movl
fiaddl
push
call
call
js
add
popl
and
and
xchg
or
out
pop
in
shlb
push
pop
inc
insb
addb
mov
cmp
mov
pop
sub
add
or
pop
xchg
arpl
mov
push
das
lods
enter
dec
je
and
pop
pusha
dec
in
les
cmp
outsb
dec
xlat
xor
xor
jmp
xor
pushf
mov
mov
movsl
test
mov
or
lods
sbb
or
in
in
or
jne
imul
test
sub
pop
pop
add
pop
les
rcrb
shr
loopne
add
sub
mov
movsl
cmp
ljmp
pop
sti
cld
shlb
cltd
stos
mov
adc
lods
mov
add
sub
jne
xor
pop
insl
subb
test
testb
pushl
lock
xchg
fwait
pop
sub
shll
push
xor
xchg
inc
pop
ror
test
and
jge
pop
dec
stc
add
and
mov
sbb
dec
xorl
push
out
movsl
and
pop
shl
mov
adc
mov
lock
pop
mov
mov
aad
clc
push
lods
xchg
cmp
xorb
fs
paddb
add
jne
loopne
inc
sub
bound
inc
imul
adc
adc
inc
cmc
es
adc
xor
adcb
cmp
int
enter
mov
or
orb
xor
es
std
adc
cmp
and
sti
mov
sub
or
or
adc
mov
lcall
add
jp
leave
or
mov
and
cs
add
outsb
test
adc
cmp
test
xchg
adc
dec
inc
xlat
je
icebp
add
not
add
inc
pop
mov
and
adc
jb
shll
inc
loopne
xchg
fbld
sbb
and
add
xchg
xchg
incl
decl
pop
imul
int
je
adc
repz
sbb
sbb
jne
sub
or
addr16
dec
adc
add
movsl
dec
nop
sbb
js
push
push
adc
or
sbb
jl
lret
xor
push
jno
mov
jne
jecxz
mov
sub
outsb
inc
sub
push
or
inc
adc
add
scas
mov
cmp
mov
push
divb
push
insb
pop
bound
fbld
mov
and
inc
faddl
push
xchg
out
movl
xchg
inc
add
sub
and
dec
faddp
fcomps
call
dec
mov
out
push
fmull
fwait
sbb
adc
cmp
cs
insl
push
and
lods
ss
fldt
or
int3
sub
xchg
mov
fsubrl
push
pop
daa
ret
lcall
jbe
scas
xchg
test
repnz
pop
cmpsl
hlt
cmp
pusha
stos
add
in
nop
add
xor
xchg
and
mov
clc
inc
cmp
and
loopne
xor
insl
lcall
mov
fisttpll
adc
adc
loopne
pop
daa
sub
push
adc
push
sbb
inc
mov
ret
shrb
jne
ret
or
out
xor
pop
inc
push
mov
test
daa
clc
mov
xorb
jbe
mov
test
or
nop
sub
pop
je
dec
incl
mov
test
push
push
xchg
stos
and
test
sbb
mov
pop
mov
sbb
or
xor
mov
stos
xchg
pop
out
mov
inc
xor
fimull
and
in
sbb
add
add
mov
cwtl
jno
pop
fwait
mov
inc
in
push
xor
mov
pusha
pop
adc
mov
shlb
add
in
and
cmp
mov
mov
popf
repnz
mov
and
inc
dec
mov
fadds
push
ret
adc
std
loopne
xor
and
stc
push
adc
orl
andb
or
call
push
inc
mov
mov
or
lret
cmp
xchg
xor
sub
push
jecxz
imul
in
loope
or
mov
xor
lock
cmpsl
test
pop
jge
in
fwait
add
jg
call
add
into
and
inc
dec
lock
iret
daa
push
lcall
jb
nop
xchg
xor
push
scas
insb
mov
pop
inc
dec
xor
cs
gs
scas
add
aam
or
lret
dec
mov
sbb
test
nop
dec
fildl
dec
mov
cmpsl
ret
arpl
adc
iret
loopne
push
test
dec
jle
jge
loopne
ds
dec
ljmp
sub
mov
xchg
lods
xchg
nop
jl
leave
hlt
mov
mov
or
cmp
inc
out
add
loope
inc
cmp
hlt
or
sub
add
push
sysenter
sbb
push
or
push
and
dec
lock
sub
push
fwait
mov
lock
cmpsb
lock
insb
inc
lods
imul
xchg
sub
xchg
imul
js
cmp
shlb
popa
popa
ret
or
rorl
lret
lea
xchg
test
inc
mov
addb
cli
in
pop
je
sub
cmp
rolb
mov
insb
popl
jge
sub
dec
xchg
dec
add
test
adc
mov
xor
mov
mov
xchg
or
or
data16
scas
icebp
or
jg
xchg
sub
xchg
push
and
xor
cmp
test
dec
or
or
mov
sbb
das
mov
imul
or
cmp
sbb
mov
enter
xchg
push
mov
xchg
pop
rcll
imul
out
pop
lea
hlt
cmp
mov
clc
mov
pop
jp
sbb
dec
sbb
or
sub
jo
ss
pop
pop
lock
test
jecxz
clc
xor
cld
cld
lods
fwait
shlb
push
mov
adcb
push
or
insl
mov
movb
leave
push
lahf
xor
int3
orl
add
loop
mov
pop
push
or
mov
xor
jo
das
repz
lret
loopne
adcb
test
mov
popa
fwait
cld
pop
push
xchg
ret
ret
lods
add
inc
in
adc
movsb
adc
and
sbb
mov
pusha
sbb
mov
lea
jg
shlb
push
dec
sub
scas
rol
jno
add
cmp
lds
add
pop
cmp
test
dec
pop
or
sbb
push
or
xchg
adc
xor
arpl
add
fisubrs
pop
gs
nop
sbb
pop
nop
add
inc
shll
ret
imul
dec
add
xor
pop
popa
aam
pop
dec
inc
or
inc
leave
push
mov
xlat
nop
icebp
xchg
out
pop
and
inc
ds
test
inc
pusha
or
fcmovu
out
mov
orl
xchg
mov
mov
sbb
adc
das
adc
mov
loope
xchg
pop
adc
sub
clc
out
mov
pop
stos
movsb
push
out
lock
add
ljmp
jno
mov
popa
xorb
add
jle
adc
push
sbb
and
pop
bsf
push
sbb
push
sub
mov
ds
sub
mov
insb
add
jnp
add
lods
adc
lret
lock
jle
mov
sub
mov
add
sub
movl
sbb
xlat
inc
cmp
lock
mov
xor
or
adc
pop
sbb
mov
movsb
xchg
sub
cmp
and
cmp
in
cmp
das
jmp
mov
dec
imul
pop
jbe
stos
rcrl
adc
inc
cmp
jne
in
mov
rcrl
ja
stos
or
and
cli
pop
pop
xor
adc
sbb
ret
adc
insb
xchg
or
loop
jb
gs
xor
adc
call
sbb
or
sbb
inc
es
add
int3
pop
test
or
fisubs
adc
data16
add
test
ja
jae
repnz
lret
loope
out
sub
inc
pop
stos
add
cmpsl
inc
pop
xchg
pop
aaa
iret
jne
xchg
icebp
adc
dec
sarb
push
notl
xchg
hlt
mov
popa
cltd
fnstcw
xchg
dec
sahf
mov
ficomps
into
addb
mov
mov
icebp
dec
fidivl
dec
lret
or
xor
fimull
or
adcl
js
push
dec
jl
xor
divb
mov
add
xor
jp
mov
mov
sub
mov
jge
adc
adc
mov
cmp
push
lea
sub
out
ss
inc
sub
adc
xor
pushf
pop
mov
daa
push
push
leave
adc
inc
push
shlb
push
js
sub
ljmp
cmp
ljmp
aam
cs
cltd
adc
movb
test
cmp
je
jl
xor
fistl
lods
or
fnstenv
cmpsb
or
sbb
pop
jbe
inc
into
xchg
sub
mov
inc
jo
dec
push
pop
jmp
and
sub
xchg
test
psrlw
stc
inc
ret
rcr
mov
sub
lea
lods
adc
push
dec
dec
or
es
lea
frstor
push
jl
adc
push
sub
dec
or
adc
lea
daa
insb
mov
clc
ja
xchg
cwtl
in
fs
xchg
pop
sbb
cmp
in
xchg
mov
sub
add
je
sub
mov
jp
aad
push
push
lds
dec
ja
or
mov
nop
xchg
insl
loopne
dec
fcoms
push
ffreep
filds
jne
arpl
dec
or
add
loop
fwait
sbb
shll
or
xor
adc
subl
jmp
sbb
cmpsl
mov
outsb
or
inc
sbb
cmp
shlb
ret
out
or
pop
or
mov
push
call
mov
xchg
add
rcrb
movsl
enter
or
jl
push
push
jle
add
and
lret
scas
sbb
pop
sbb
push
fsubl
sub
mov
fs
fstl
shll
adc
add
div
fisubl
adc
sti
and
popa
dec
or
mov
add
iret
ret
inc
in
or
subl
jne
ss
mov
into
ljmp
add
push
in
icebp
dec
loope
mov
inc
add
sub
or
loop
inc
jno
add
and
mov
xchg
or
js
hlt
fsubs
sub
sbb
je
dec
xchg
xor
lock
in
insb
and
inc
jbe
jmp
mov
aam
jmp
cmova
insl
loop
fildll
or
fsubr
loope
push
enter
scas
fwait
mov
into
pop
lods
adc
movsb
fisttpl
sub
aam
fwait
iret
pop
sub
jbe
mov
xchg
inc
push
xor
fwait
hlt
mov
jb
aam
fwait
int3
std
shll
movsb
and
pop
sbb
cmc
push
push
and
leave
ret
mov
xchg
cli
add
pop
push
cwtl
xchg
in
mov
movsl
pusha
aam
loope
leave
and
sar
cs
add
lcall
add
adc
loopne
pusha
inc
in
xchg
mov
pushf
leave
inc
xchg
cmp
sbb
pushf
ja
sub
in
out
or
insb
rcll
pop
jbe
adc
adc
dec
and
push
adc
fs
mov
push
push
and
jnp
sbb
adc
and
and
and
add
add
push
call
mov
in
mov
push
fcomps
fcmovnb
ret
dec
movl
frstor
mov
push
or
inc
scas
test
lds
and
and
mov
and
push
xchg
out
cmpsl
xorb
sub
jle
test
push
inc
dec
stc
int
pop
mov
out
and
mov
jle
call
inc
add
sbb
dec
test
or
dec
xchg
pop
test
dec
sahf
dec
cli
mov
imul
pop
cld
add
mov
inc
lods
xchg
mov
add
push
test
sbb
rol
or
fs
pusha
push
jo
mov
push
stc
sub
fadd
or
add
int3
xchg
loop
push
cwtl
mov
outsl
adc
push
push
sbb
push
jo
push
mov
xchg
ds
fstp
mov
lea
je
adc
nop
fmul
ror
or
dec
and
nop
lea
or
xchg
add
test
jmp
sbb
add
mov
fsubrp
push
jecxz
and
inc
mov
adc
fidivrl
insb
icebp
and
js
and
or
mov
push
and
das
call
or
movsl
jg
orl
xor
or
add
cmp
xorb
shl
add
dec
ja
and
adc
call
sub
mov
lahf
mov
js
jmp
in
pop
mov
cli
test
and
or
jge
and
inc
maxps
iret
lret
xchg
sbb
mov
iret
push
mov
sbb
add
dec
sbb
adc
in
movb
rcll
sbb
sbb
insl
loope
mov
xor
popf
adc
leave
pop
aaa
or
mov
cmpsl
and
es
lds
rorb
loopne
push
jp
out
mov
movsb
add
imul
push
jne
inc
jl
outsb
sub
mov
push
push
inc
sbb
dec
xchg
jno
jge
mov
and
mov
ja
scas
lret
test
add
int3
rcll
add
shrb
imul
push
ss
sub
or
or
sub
inc
pop
clc
out
pop
push
mov
or
ss
inc
arpl
cmp
cmpl
or
adc
sub
gs
loope
sub
pop
test
pop
pusha
ss
adc
cmp
cwtl
add
rcll
sbb
movl
inc
sbb
je
sub
rolb
sarb
or
dec
jbe
xor
push
push
dec
inc
and
dec
out
or
pop
inc
dec
pop
pop
cmpsl
push
loope
jle
test
stc
push
push
mov
push
xor
movsb
sbb
inc
add
pop
jns
cmp
sbb
pop
cs
test
sub
cmp
adcb
mov
movsl
rcrl
adc
mov
clc
or
je
mov
sub
psrad
mov
adc
or
cmp
jo
ja
out
cltd
and
inc
fcomps
shl
sub
inc
mov
jecxz
or
or
add
push
cmp
inc
mov
cs
movsl
imul
push
pusha
nop
loope
sbb
xchg
je
inc
and
cmp
ljmp
xor
pop
adc
pop
dec
push
add
inc
and
enter
push
test
nop
xor
call
xchg
lea
or
xor
sti
sub
inc
mov
xchg
jmp
sti
mov
inc
or
pop
cmp
or
aam
cmp
pop
add
xchg
in
icebp
inc
jns
pop
add
dec
jge
xor
mov
cmp
cmc
mov
inc
adc
adc
push
stos
daa
adc
es
or
sub
xor
xor
cmc
pop
sbb
jne
cmp
test
icebp
push
dec
add
rorb
mov
and
mov
clc
jnp
ds
inc
fsub
cmpsb
jle
aaa
mov
lods
pop
pop
ds
testl
xchg
or
call
test
imul
pop
push
cmp
aam
idivb
imulb
mov
gs
cmp
pop
sbb
and
xchg
xchg
adc
cmp
pop
inc
data16
xor
push
push
cld
loope
and
pop
lret
pmullw
enter
mov
ret
imul
testl
outsl
push
test
aaa
push
iret
in
lods
lcall
xchg
shlb
or
shlb
pop
mov
jns
inc
mov
ret
mov
sub
xlat
cmp
aaa
sub
cmpsb
shrl
out
lds
mov
or
imul
fldcw
pop
push
cmpsl
rclb
icebp
mov
add
sub
mov
push
pop
enter
test
daa
mov
stc
cs
adc
and
xchg
add
sub
cmp
das
jecxz
scas
push
push
xchg
push
into
pusha
jmp
clc
pop
mov
or
push
loope
xorb
and
sub
inc
jnp
mov
sbb
mov
ja
insb
andb
adcl
cli
addb
stos
iret
dec
xor
iret
mov
dec
mov
cmpsb
xor
nop
xor
test
nop
jo
or
test
pop
test
enter
test
cmp
jne
push
mov
sub
and
mov
ror
and
pop
mov
pushf
xchg
mov
mov
pop
rcrl
test
dec
jmp
lock
adc
push
cwtl
sub
add
and
add
ja
add
fdivrs
mov
sub
clc
dec
ja
pop
testl
repz
cmp
and
rclb
adc
dec
push
fcmovnbe
and
pop
dec
or
inc
ds
dec
or
inc
cmp
sub
sub
or
jne
push
cmp
movq
sbb
push
jp
push
pop
femms
jecxz
push
outsb
hlt
jecxz
ret
xor
nop
or
ljmp
fimuls
mov
call
adc
push
in
mov
sbb
xor
and
mov
jmp
out
adc
cmpsb
or
imul
nop
inc
call
pop
fisubl
adc
cmp
push
divb
add
call
or
xchg
sub
cwtl
inc
rolb
fisubrs
sub
pusha
and
lret
sbb
into
in
rcrl
out
fwait
sbb
jo
push
and
mov
fldcw
pop
mov
push
subl
jns
fisttpll
fwait
cwtl
mov
mov
sub
movsb
sbb
sub
loopne
das
fistps
in
or
fwait
mov
add
sahf
and
jbe
lods
mov
hlt
or
out
xor
es
aaa
mov
cltd
add
xor
cmp
jg
pushf
fld
rorb
jl
dec
mov
in
xchg
push
mov
cmc
push
ficoml
add
test
jl
mov
or
adc
adc
mov
and
cmpb
or
mov
xchg
cmp
fs
jl
in
in
mov
mov
aam
inc
adcb
pop
pop
xor
outsl
lods
adc
out
sub
push
das
adc
rclb
or
cli
lret
movsl
push
mov
subb
inc
lahf
and
inc
insb
mov
adc
add
xchg
mov
cmpsb
push
popa
mov
adcb
mov
lock
or
add
mov
iret
jmp
or
inc
xchg
jbe
mov
enter
add
xchg
test
hlt
in
push
jmp
sbb
in
in
adc
dec
mov
mov
add
inc
sahf
fmull
add
aaa
clc
hlt
dec
dec
dec
dec
lock
call
dec
loopne
fcom
dec
cs
dec
shl
stc
lret
nop
sbb
clc
add
daa
fcoms
pop
ds
mov
lods
pop
imul
cmpb
add
sbb
and
je
push
xor
pop
lahf
fstps
loopew
or
mov
push
or
adc
add
sbbb
cld
mov
jmp
mov
pop
movb
adc
jno
mov
and
pxor
push
ret
je
jb
push
add
roll
and
mov
pop
add
push
jmp
js
or
adc
add
push
pop
dec
adc
adc
jmp
cmp
mov
or
sbb
pushw
push
arpl
xchg
pop
daa
and
adc
push
jnp
sub
jb
cmp
faddl
jge
sbb
and
mov
mov
aaa
call
cmp
mov
in
xchg
and
or
incb
push
push
popa
cmp
jle
push
pop
lcall
mov
or
das
sub
test
ficoms
aam
pop
and
mov
and
pop
cmp
lcall
sbb
popf
pop
push
popa
ficomps
or
sbb
push
xchg
fcoml
nop
movsl
js
and
adc
adc
daa
xor
lock
movsl
loope
test
cmpl
xor
es
and
lock
mov
jl
inc
or
test
das
adc
repnz
stos
pop
test
sub
mov
dec
xor
in
and
call
jne
xor
cmpl
jb
or
xor
dec
jge
sub
insl
adc
push
inc
sbb
aas
adc
jle
lea
fcomps
decb
and
jb
push
push
push
call
pop
in
inc
shll
push
cmpsb
sbb
decb
push
dec
inc
pop
cmpsl
sub
adc
pushf
adc
push
enter
inc
sub
xchg
daa
mov
enter
adc
mov
push
aam
jne
lret
cmpsb
sub
mov
adcl
sub
push
push
js
mov
push
inc
pusha
and
mov
inc
jne
inc
inc
andb
push
and
loopne
sbb
lock
out
mov
fmuls
and
loopne
sbb
loop
and
push
ss
sub
pop
jne
add
ss
jmp
ds
add
adc
loop
mov
push
push
shrb
adc
inc
outsb
jne
mov
insb
popa
jns
jae
push
aas
lock
movl
add
or
add
mov
mov
movsb
or
cmp
adc
mov
fwait
insb
loopne
mov
push
push
inc
push
jp
dec
cmp
dec
mov
jns
sbb
push
mov
xchg
cmpb
push
mov
in
mov
enter
test
prefetchw
aas
inc
cmp
std
outsl
sti
pop
jnp
test
xchg
cld
mov
pop
rcll
mov
cmp
inc
mov
mov
popf
or
fidivrl
cmp
adc
fistps
sub
push
imul
jb
inc
or
dec
adc
dec
mov
mov
mov
adc
popa
and
je
movsl
repnz
add
hlt
or
xorl
add
xor
push
cmpl
mov
fsub
sbb
xchg
push
ljmp
mov
pop
and
in
or
enter
orb
lcall
ds
fwait
sbb
jmp
mov
and
inc
into
movzwl
cmpb
fsub
repz
ds
push
sub
std
mov
add
ja
jns
out
cmp
push
pop
sbb
inc
aam
ja
jae,pn
inc
sub
aaa
fdivrl
dec
mov
loope
out
add
xor
lret
inc
dec
or
dec
int3
or
adc
sbb
fsts
mov
es
sub
pop
xchg
jg
shrb
das
add
cmp
mov
and
mov
jmp
dec
push
les
jecxz
nop
fiaddl
je
mov
loope
frstor
xchg
inc
lock
pop
ja
sbb
mov
insb
or
test
andb
pop
cmp
sbb
pusha
adc
loope
mov
mov
test
and
lea
pop
mov
push
pop
inc
cmp
popa
nop
iret
pop
hlt
sbb
xor
mov
ja
hlt
test
fsubl
add
or
add
rorb
and
imul
jp
xchg
or
or
sbb
lds
rcll
ret
sbb
jno
jno
sub
rorl
add
jne
mov
adc
popa
cmp
dec
jle
int3
push
into
popa
jg
pop
and
adc
xchg
test
arpl
adc
test
sub
add
dec
lock
lock
ficoml
out
add
or
mov
add
rclb
push
xor
rolb
mov
or
pop
or
mov
int3
mov
pop
movsb
and
sub
mov
or
mov
cmp
hlt
jne
fcompp
aaa
dec
sbb
cs
orb
pop
mov
or
ss
in
daa
sbb
sub
les
add
je
and
out
xorb
sub
inc
xchg
add
jo
fwait
nop
xchg
xor
pop
inc
sbb
jge
inc
cmc
and
out
inc
inc
sbb
jle
dec
jne
mov
sbb
dec
data16
loope
cwtl
sub
inc
lds
rcrb
cmp
jge
lock
cmp
mov
adc
ret
dec
xor
push
rorb
shrb
shlb
loopne
fyl2xp1
inc
shlb
or
or
mov
and
fldcw
data16
mov
into
daa
xor
jmp
in
inc
inc
inc
add
pop
fsubl
cwtl
add
aas
outsl
push
sub
dec
lods
or
js
lcall
sbb
push
mov
dec
add
add
in
pop
insl
jle
push
adc
das
adc
and
xchg
xchg
ds
ja
cltd
push
fsubrl
cmp
outsl
dec
sub
dec
in
jno
out
js
fadd
cmp
loope
xor
test
lds
fwait
pop
inc
dec
lea
cmp
and
icebp
fisubl
loopne
jmp
inc
jmp
ja
jns
mov
sti
xor
orl
nop
sbb
nop
movl
and
ret
rorl
and
mov
sbb
mov
push
xor
inc
test
xor
popa
jle
adc
call
in
lock
xlat
inc
inc
dec
mov
sbb
inc
call
call
sub
cld
loopne
push
enter
sub
je
nop
lcall
xlat
adc
mov
jbe
fldenv
pop
leave
icebp
or
shll
mov
pop
in
repnz
in
pop
clc
xchg
jo
mov
addps
xor
sbb
leave
test
xor
punpckhwd
push
stos
leavew
lock
fs
clc
adcb
xor
popa
push
iret
icebp
push
adc
inc
xor
and
add
stc
test
add
fdivs
pusha
clc
movsl
jno
loope
sub
into
cld
mov
or
dec
je
or
sbb
xchg
loopne
ds
jmp
adc
jmp
push
movb
mov
mov
and
test
sbb
and
test
aas
cld
sbb
add
std
inc
jns,pn
cmp
jne
sbb
or
push
adc
and
xor
adc
movsb
and
xchg
pop
mov
cmpl
test
js
push
sub
adc
xchg
jne
sbb
xor
je
xchg
movsl
das
jns
repz
pop
mov
jmp
or
lret
cmp
sub
scas
dec
inc
or
sbb
inc
test
sbb
arpl
loopne
in
adc
sub
rclb
push
dec
cli
leave
pop
leave
jo
push
adcb
fldt
es
and
dec
fisubrl
and
cmp
xchg
lret
insb
push
cmp
mov
insb
outsl
pushf
inc
inc
adcb
jae
cwtl
jns
jb
dec
mov
dec
lret
push
mov
movsb
or
and
and
push
test
and
lock
add
or
pop
or
and
int3
sbb
xchg
lahf
and
insl
arpl
or
mov
data16
insb
xor
lods
jle
inc
daa
push
sub
xchg
xchg
pop
lods
iret
jb
inc
dec
pop
push
das
push
loop
loop
inc
outsb
adc
mov
outsl
ja
xchg
mov
fidivrl
push
jnp
or
pop
outsl
jae
push
jg
push
push
inc
iret
or
and
lcall
lods
jl
and
iret
inc
mov
push
push
push
push
xchg
nop
cwtl
push
or
pusha
loop
sti
nop
adc
sbb
mov
pusha
iret
je
movsb
push
mov
sub
call
push
inc
jb
dec
push
les
push
arpl
push
dec
shlb
sbb
xchg
sub
pop
call
lods
mov
cltd
add
jns
and
pop
pop
push
icebp
rolb
inc
es
sarb
in
inc
sub
inc
sub
mov
enter
xor
decl
stc
fisubrs
adc
sbb
or
addl
or
enter
sub
enter
xchg
cwtl
enter
pushf
mov
enter
mov
enter
mov
enter
rcl
fmul
enter
loopne
call
in
lock
clc
enter
cld
add
add
enter
or
adc
enter
sbb
and
push
lret
enter
xor
push
sub
sub
xor
mov
mov
out
ja
adc
cmp
add
adc
loopne
and
xchg
lds
je
jl
and
addb
fmuls
clc
xchg
or
movsb
xor
xchg
cwtl
and
mov
sbb
dec
gs
sub
test
aam
movsb
xor
mov
adcb
fcoms
jb
adc
and
nop
lret
cmp
inc
sub
push
dec
fcomps
or
fsubrl
js
and
adcb
in
mov
sbb
loopne
inc
sub
clc
lock
add
mov
sub
add
gs
sub
xor
add
push
push
movsb
xor
adc
sbb
sbb
sub
push
sbb
mov
enter
inc
sub
sub
xchg
add
repnz
jmp
pushl
mov
les
push
dec
rcrb
fcmove
sub
outsl
jae
and
sbb
mov
or
mov
cwtl
adc
add
scas
or
popa
jb
add
fistl
test
test
sbb
je
jne
adc
mov
addr16
xchg
mov
jae
addr16
fs
das
scas
pop
dec
arpl
jae
test
xor
fs
lea
or
jbe
or
jns
jp
jae
sbb
int
les
mov
pop
lahf
pop
xor
pop
and
push
inc
loop
sub
testb
imul
pop
mov
pop
dec
xor
dec
pop
adc
pop
iret
popf
loopne
add
dec
xor
in
pop
or
iret
mov
add
outsb
popa
and
and
nop
cwtl
mov
aad
mov
mov
fstpl
in
pop
push
xchg
mov
jl
mov
ja
and
jo
jg
jae
mov
addr16
jne
insl
outsb
sub
das
pop
fs
ss
sbb
inc
imul
popf
pusha
fs
mov
jno
arpl
inc
popa
loope
push
xchg
cmp
and
pop
outsl
pop
cmp
sbb
adc
adc
sbb
or
mov
inc
hlt
cwtl
fidivrl
inc
imul
ds
mov
jg
daa
daa
inc
sbb
subl
cmpsb
add
sbb
jnp
xchg
in
push
movsb
xchg
dec
sub
in
fcmove
mov
mov
outsl
dec
push
fs
push
and
dec
push
and
nop
dec
push
pop
inc
sbb
inc
mov
lds
xchg
add
in
add
pop
add
adc
xor
leave
fisttpl
popl
jbe
add
pusha
dec
pusha
pushl
and
push
jge
test
inc
fs
mov
push
push
push
pop
mov
push
push
je
jp
adc
inc
and
adc
jl
outsl
loop
out
xor
pop
fildll
push
test
ja
cmpsb
mov
inc
xchg
add
add
jmp
push
xchg
pavgb
mov
push
or
sbb
push
icebp
xchg
sub
aaa
and
popf
push
push
xor
clc
cmpsb
xchg
xor
incl
fxch
push
movsl
lret
add
inc
push
pop
cmp
cmp
mov
or
cmp
adc
repnz
cmpb
test
add
lds
and
sarl
inc
xor
push
push
adc
mov
mov
cli
push
xor
out
or
dec
push
divl
adc
xchg
fsubrp
cmp
js
rclb
aam
arpl
xchg
push
add
sub
enter
cmp
add
push
push
add
ret
sbb
mov
mov
andl
pop
pop
pop
cmp
xor
mov
scas
mov
mov
pop
popa
in
inc
insb
pop
sbb
or
add
test
out
out
add
add
gs
push
aas
mov
mov
outsw
test
mov
mov
out
and
cmpsb
in
push
and
test
pop
and
test
mov
fnstcw
cmp
mov
adcb
loopne
insb
adc
lea
jae
mov
pop
mov
bound
fbstp
inc
cmp
pop
or
and
daa
push
push
push
popf
or
pop
pop
rclb
add
and
dec
outsl
add
inc
xchg
add
les
bound
inc
bound
je
push
loope
inc
xor
negb
outsb
outsl
pop
cvtdq2ps
movl
add
and
inc
dec
jmp
push
call
mov
push
clc
sbb
push
sbb
test
sub
movb
jns
stos
js
sub
jg
mov
shlb
add
inc
lret
and
pop
in
std
test
insl
fs
addr16
push
cmp
add
lret
sub
push
adc
arpl
and
adc
mov
adc
es
dec
aas
or
nop
cs
iret
enter
mov
iret
leave
cmp
cmp
repnz
sahf
xchg
adc
xchg
xchg
lret
test
inc
sbb
repnz
sahf
jo
insb
push
loopne
jbe
pushf
add
insb
cmpsb
adc
push
icebp
sub
or
rcll
xor
pop
add
or
loop
insb
cmpsl
xor
cmpsl
dec
xor
inc
mov
xor
push
adc
sbb
sub
pop
pushf
repnz
xor
gs
insb
icebp
pop
push
fbstp
or
dec
outsl
ja
cmpsl
insb
or
push
popa
imul
add
jae
mov
push
pop
mov
je
add
or
xchg
cld
dec
xor
pop
aaa
and
je
sbb
test
adc
xchg
cmp
shrb
jb
sub
das
jle
lds
enter
dec
xchg
inc
aas
enter
sbb
inc
test
inc
add
in
jnp
mov
push
lock
ret
ret
aas
in
lret
inc
das
enter
pop
imul
test
push
fimuls
mov
sti
xor
in
jle
push
sbb
nop
rclb
fdivp
xchg
lret
or
int
fmul
iret
jnp
push
into
jle
icebp
rorb
dec
rcrl
sub
hlt
sbb
test
sahf
sub
xchg
adc
add
outsb
popa
stos
pop
sarb
add
pop
push
add
insl
and
hlt
push
aas
test
push
inc
rorb
in
popf
jle
inc
je
fdiv
orb
inc
push
in
inc
xchg
jae
lcall
xchg
femms
add
jb
push
idivl
push
iret
imul
cmpsl
sti
xor
mov
cltd
dec
xor
sahf
push
sbb
fstl
stos
test
iret
xor
push
jnp
das
test
and
mov
add
push
push
imul
nop
dec
out
mov
jne
jp
js
addb
outsl
cmc
and
mull
mull
sub
mov
in
xchg
pop
neg
xor
nop
testl
loop
clc
add
test
sti
pop
xchg
cmp
push
addr16
inc
xor
mov
ret
sbb
mov
cmp
aaa
xchg
sbb
pop
out
loopne
jge
in
xlat
fs
sub
ss
push
and
pop
call
dec
adc
cmp
inc
es
pop
repnz
inc
loopne
clc
std
hlt
insl
mov
cmp
dec
lcall
inc
inc
pop
int3
ss
shrl
xor
adc
mov
pop
xor
adc
push
fsubrs
outsb
push
mov
fisubrl
push
stc
push
pop
lcall
push
and
sub
or
cmp
xor
inc
js
jl
xchg
incl
movsb
sti
xor
mov
mov
mov
mov
mov
lret
cli
push
push
sub
add
iret
insb
adc
push
into
or
push
push
sub
outsb
and
sbbl
lret
push
ret
nop
fwait
or
lahf
fcomp
rolb
push
stc
imul
imulb
adc
inc
pop
dec
subl
imul
xchg
sub
xor
push
inc
iret
aaa
and
inc
cwtl
cmp
add
std
adc
cmp
add
or
and
or
pop
or
adc
lret
push
in
mov
jne
lods
mov
jo
add
sub
mov
dec
xchg
push
outsb
dec
adc
dec
lcall
jne
pushf
xchg
adc
jns
jns
add
sbb
xor
in
pop
and
pusha
sbb
sub
and
push
adc
cwtl
and
adcb
ret
test
cmp
mov
cmp
adc
bound
add
enter
into
or
mov
xor
fstl
adc
mov
or
push
push
in
add
push
pop
xchg
push
dec
cld
je
xor
loope
cmpsl
mov
jno
aaa
sbb
jmp
test
and
pushf
mov
dec
bound
loopne
jp
jp
xor
hlt
sbb
dec
addr16
mov
push
mov
insb
jl
dec
fwait
sbb
or
pop
sbb
dec
mov
hlt
addb
sbb
and
push
and
adc
and
push
xchg
inc
popa
and
sbb
adc
test
sarl
jo
dec
push
jno
or
and
add
mov
pop
jmp
int3
into
push
dec
lret
pusha
push
insb
pop
mov
adc
ss
fisubrs
dec
jbe
pop
lcall
pop
jae
pop
mov
iret
pop
fs
add
pop
jno
xchg
aaa
and
lds
cmp
add
lret
in
jnp
adc
cmp
mov
es
int
notb
jo
jo
push
mov
sub
add
insb
inc
out
and
jnp
sub
push
lds
cmp
mov
inc
sbb
sub
sbb
int3
dec
sarb
out
sub
stos
out
sbb
rolb
mov
mov
and
or
das
add
aad
stc
cltd
and
lahf
lods
mov
xor
loope
in
pop
xor
push
jle
and
pop
je
push
mov
xor
or
lcall
dec
mov
mov
psubusw
pop
xchg
xor
mov
inc
add
popf
xchg
sbb
dec
xor
jb
dec
fcmovnu
call
xor
fstpl
es
or
mov
or
fs
sahf
sbb
aaa
xchg
out
jns
insl
rolb
add
test
enter
repz
push
js
and
rolb
xchg
cmp
cmp
or
add
cmp
repnz
cmp
push
fcomp
add
in
cmp
daa
pop
enter
dec
loopne
add
push
loope
pop
xorl
inc
clc
ds
js
mov
xchg
insb
push
add
in
fnstcw
rclb
rolb
cmp
insb
xchg
lock
lock
and
push
dec
jge
xchg
add
pop
cld
out
ret
dec
and
add
xchg
into
add
jmp
dec
das
jl
mov
dec
dec
das
add
imul
cmpsl
cmp
cld
push
dec
mov
add
add
lods
test
inc
in
pop
ds
pop
lcall
hlt
rolb
sub
adc
mov
xor
mov
or
jle
dec
push
sub
mov
jp
or
out
movsl
adc
dec
inc
inc
or
add
xchg
outsl
add
mov
push
or
movb
movsl
or
mov
mov
pop
loopne
adc
out
pop
lret
cmp
nopl
adc
jb
aaa
imul
cmp
lcall
outsb
bound
add
mov
mov
in
fadds
movsb
push
xchg
repnz
mov
imul
add
pop
xchg
push
mov
sbb
cwtl
add
hlt
shll
rorl
aad
scas
mov
cmp
out
int
or
mov
or
aam
aas
pop
mov
add
add
es
or
js
push
adc
mul
adc
adc
sub
ds
out
or
push
jne
mov
stos
xor
push
les
fists
cmp
into
fadds
add
add
adc
dec
push
and
cmp
add
sbb
cltd
add
shll
daa
xchg
adc
popl
adc
fisubs
inc
push
or
adc
push
push
adc
and
inc
sub
call
add
mov
out
ds
push
sarl
divb
lock
pushf
loop
dec
dec
inc
ljmp
dec
pop
mov
xor
mov
outsl
adc
sbb
addr16
push
cmp
popa
insl
jae
or
dec
mov
pop
xor
les
inc
shlb
fstp
cmp
add
pop
movsb
hlt
imul
push
xlat
mov
insb
in
mov
jnp
dec
cmp
jmp
push
fdivs
push
out
or
gs
adcb
push
mov
mov
jnp
add
adc
filds
or
xchg
fsubr
int3
push
push
jne
xorb
in
cltd
add
call
test
cld
or
aam
aaa
xchg
cmp
js
jne
dec
out
inc
or
lods
push
and
sbb
add
lods
adcl
clc
mov
mov
mov
lahf
clc
adc
out
dec
lods
push
popa
nop
mov
push
cmpsl
xchg
inc
cmpb
adc
mov
and
fs
inc
bound
and
sbb
enter
stos
clc
cmp
or
or
leave
lods
adc
xor
cmp
mov
lahf
sbbl
test
push
out
sbb
call
es
mov
mov
not
and
push
push
mov
je
sub
xchg
push
add
add
mov
xchg
sbb
and
pop
mov
jne
cmp
add
or
add
push
push
addr16
add
movsb
add
xorl
aam
or
mov
incl
fldenv
cmpb
movsl
or
inc
mov
data16
fisubrs
jg
orl
cld
dec
aam
sub
jnp
or
aaa
fildll
adc
adc
push
or
cmpb
fwait
add
inc
or
addr16
mov
pop
sti
sahf
hlt
sub
in
movsl
mov
mov
xchg
jbe
popa
loop
sbb
adc
enter
mov
sbb
adc
mov
dec
dec
inc
fcoml
cmp
and
clc
sub
cmp
push
mov
imul
popf
dec
push
adc
movsl
sbb
lock
hlt
shll
jle
xlat
sbb
nop
xchg
add
cld
push
inc
jle
push
enter
das
clc
adc
dec
inc
clc
pop
mov
lock
std
sahf
inc
lods
sbb
sub
adc
sbb
push
pop
insl
andl
dec
in
loope
jbe
sbb
cmp
jo,pt
xchg
movsb
lods
push
sahf
sbb
xor
in
or
fwait
jge
cmp
xchg
cmc
movsl
or
clc
ja
or
inc
push
push
sbb
addl
pop
inc
add
sub
sar
rclb
shr
mov
dec
icebp
sbb
iret
inc
add
loopne
cmp
jmp
clc
push
mov
in
or
cwtl
loop
add
jmp
inc
sub
sti
adc
xchg
nop
jecxz
loope
roll
mov
sbb
out
test
inc
aaa
adc
push
enter
adc
hlt
sbb
mov
push
test
mov
and
and
cli
cltd
neg
aad
pop
movsb
dec
outsb
xor
gs
push
pop
xchg
mov
cltd
add
data16
ljmp
in
add
pushl
jge
sub
call
mov
push
jne
sub
and
pop
sbb
inc
dec
or
dec
lock
addb
in
jl
jnp
stos
mov
jnp
jb
xor
jge
dec
inc
sbb
testl
dec
arpl
movsb
imul
in
loopne
xor
int
cmpsb
or
test
cwtl
xchg
sub
outsl
xchg
inc
add
jl
or
mov
adcl
mov
fbld
mov
jne
ret
add
push
mov
inc
lret
shl
and
out
pop
mov
or
pop
pop
fnstenv
rcll
testb
decl
sub
in
in
sub
cs
in
in
adc
adc
in
in
adc
push
pop
in
in
sbb
sbb
in
in
sbb
push
pop
in
in
add
add
in
in
add
push
pop
in
in
or
or
in
in
or
push
jb
repnz
icebp
bnd
jb
hlt
cmc
div
add
out
das
negb
add
push
sbb
adc
or
stc
cmp
cmp
xor
add
out
sahf
hlt
and
sbb
adc
sahf
out
fmull
add
repz
repz
or
hlt
mov
iret
mov
lods
fsubl
pushf
int3
xchg
les
test
iret
je
insb
pushf
fs
cmp
repz
mov
repz
repz
je
insb
iret
repz
xor
sub
and
cmp
repz
dec
adc
or
cmp
xor
xchg
sub
jns
out
hlt
and
sbb
sahf
out
sahf
adc
or
add
cmp
sarl
hlt
mov
repz
in
inc
push
insl
std
sbb
mov
les
add
pop
xchg
push
stc
push
ret
and
sub
inc
xor
xchg
rcll
in
imul
xchg
or
mov
jp
mov
sub
mov
nop
xchg
mov
loope
bound
mov
push
jo
movb
les
and
aam
pop
or
sub
xchg
dec
add
and
mov
mov
into
xchg
outsb
sub
insl
and
mov
or
mov
add
add
call
cmpsl
cltd
add
mov
add
sahf
mov
mov
xchg
mov
and
repnz
xchg
ja
push
inc
adc
rclb
cmp
add
inc
dec
pop
js
enter
je
cmp
jo
repnz
sahf
xchg
push
insb
mov
adc
hlt
xlat
jo
shll
inc
cltd
nop
pushf
hlt
test
stc
in
push
ja
nop
sbb
sbb
mov
leave
int
dec
mov
in
pop
rolb
push
notl
xchg
xor
les
mov
ret
fnsave
pushf
aaa
push
jg
iret
nop
xor
ds
in
add
jae
jb
lock
lock
add
scas
dec
fstl
mov
aas
lahf
add
push
jecxz
in
dec
xlat
jl
inc
push
inc
mov
push
inc
or
arpl
sub
add
jmp
cmp
shrl
inc
inc
xchg
roll
dec
clc
dec
aas
add
les
push
movb
ja
es
mov
psubsw
pop
and
and
ljmp
xchg
fisttps
imul
sbb
sbb
or
inc
push
push
mov
addr16
loope
xchg
or
fldt
cmp
pop
sbbb
dec
push
clc
ret
and
in
push
sbb
lods
add
out
into
scas
lret
hlt
mov
sub
pop
jge
hlt
shr
xchg
adcl
xor
dec
pop
por
cs
inc
sbb
dec
scas
inc
push
lea
push
and
xor
ret
fdivrl
mov
pusha
xchg
mov
hlt
inc
jmp
movsb
pop
push
pop
add
nop
into
aaa
and
mov
sbb
jbe
push
add
inc
sub
inc
mov
cmpl
mov
jns
or
stos
test
sbb
and
movl
xor
or
sub
dec
adc
data16
xchg
test
ret
packsswb
dec
mov
lods
xchg
mov
xchg
sub
sub
add
cwtl
nop
test
dec
ljmp
xchg
sub
jmp
push
cmp
sub
pop
rcr
add
or
sub
jmp
cmp
xor
inc
daa
pop
xchg
xchg
test
pushf
jbe
rol
inc
dec
inc
xchg
es
sbb
mov
pop
jecxz
aam
inc
cmp
push
daa
sbb
ja
inc
push
or
xchg
pop
or
xor
pop
or
gs
add
push
dec
dec
mov
rol
push
and
jae
enter
xor
pushf
or
cmpsb
pop
adc
enter
scas
xchg
scas
dec
repnz
sbb
adc
mov
insb
rcl
push
roll
or
scas
push
or
mov
ja
in
sbb
ds
xor
cmp
push
push
or
push
out
mov
fcmovbe
inc
enter
and
mov
mov
ja
nop
pop
xchg
mov
je
adc
sbb
pop
mov
sub
outsl
mov
or
or
stos
adc
pusha
dec
shll
add
inc
fisubs
es
bound
pop
rorl
push
dec
or
in
das
push
ret
inc
mov
xchg
cmp
mov
les
cmp
inc
xchg
add
or
loopne
push
cmp
inc
pop
scas
xchg
jo
adc
inc
cmp
lahf
cmpsb
push
push
push
and
lods
imul
lock
and
and
push
inc
neg
xor
xor
dec
imul
dec
and
push
add
out
add
outsb
pop
imul
call
imul
insl
inc
mov
pop
js
bound
pop
and
jo
jb
jb
popa
or
mov
popa
dec
es
jae
out
data16
es
imulb
cmp
adc
pop
addr16
jb
fdivp
out
mov
add
mov
arpl
mov
testb
daa
push
jg
jnp
out
into
sub
insb
das
je
insl
sti
fsubp
cmpsl
sbb
and
pop
lock
mov
jge
push
je
jo
jb
sbb
jns
outsl
dec
data16
sbb
das
add
or
imul
pop
push
hlt
sub
mov
pop
ret
pop
xlat
sbb
mov
ret
jl
cmp
add
test
or
jb
loop
add
push
daa
and
daa
xor
jl
or
orb
sti
and
add
shlb
pop
fs
pop
rorl
mov
rorl
cmpb
or
sub
andl
push
insb
push
push
jg
mov
xchg
mov
mov
inc
sbb
jne
pop
or
add
call
fstpl
imul
pushl
push
mov
xor
hlt
addl
into
push
push
pop
mov
mov
xchg
xchg
and
and
je
inc
lcall
pushf
shrb
iret
xchg
rorb
ret
pop
dec
lcall
int3
lods
bound
mov
cmp
add
jge
and
imul
pop
es
jl
jns
sbb
in
xor
cmp
push
orb
add
mov
xor
and
add
mov
or
daa
sbbl
jb
sub
add
outsb
inc
adc
out
push
jmp
sbb
pop
xor
push
sub
mov
sbb
add
or
adc
js
lcall
xor
pop
jb
stos
or
adc
sbb
adc
or
pop
dec
push
adc
push
sahf
pop
lret
inc
decb
add
fbstp
push
pop
pop
or
or
repz
or
or
or
or
cmp
repz
adc
repz
sbb
sbb
imul
push
pop
and
and
and
lock
fcoms
jns
out
leave
cld
iret
repz
or
push
bound
repz
test
iret
repz
or
out
sahf
cmpsl
sbb
sahf
out
sahf
jb
mov
jns
aam
xchg
mov
fdivs
jmp
add
lret
add
push
mov
push
adc
pop
pop
adc
push
xchg
dec
sub
in
lret
sbb
mov
or
pop
push
and
sub
dec
sub
xchg
lret
adc
cmp
adc
mov
sub
sbb
and
sbb
xchg
pop
sbb
sbb
xor
sbb
popa
imul
adcl
mov
and
xchg
inc
sub
push
sbb
push
pop
mov
cmc
push
cmp
clc
test
pop
adc
jnp
ljmp
xchg
jmp
cmp
loopne
cltd
sbb
inc
push
lea
push
mov
js
lock
add
popa
or
pop
push
or
mov
sar
push
adc
push
add
or
andl
pop
cmpl
loopne
je
jns
mov
loope
or
push
imul
rcr
pusha
loopne
dec
pop
or
add
cmp
inc
mov
outsb
xor
stos
push
sub
sbb
ss
nop
out
jnp
bts
adc
movl
sbb
shlb
hlt
mov
adc
into
sbb
lock
not
test
or
js
sub
inc
add
inc
cmp
cmp
dec
inc
xchg
dec
inc
or
inc
dec
jecxz
xchg
push
int
or
mov
hlt
adc
dec
add
inc
sbb
add
addr16
sub
jne
sbb
push
je
push
xchg
mov
lahf
sbb
pusha
sbb
fcomps
dec
ret
mov
or
sbb
jmp
jbe
gs
xor
dec
sub
in
rcrl
or
orl
add
add
das
xchg
sbb
push
adc
inc
leave
push
jb
adc
and
pop
lods
lret
pop
dec
sbb
push
pop
sbb
xchg
stos
lret
negl
xorb
mov
orb
push
jb
jb
push
sbb
inc
leave
pop
and
arpl
xchg
and
inc
nop
and
stc
sub
pop
and
dec
scas
xchg
or
sbb
jb
stc
cmpsb
xchg
stos
in
sub
sub
or
add
pop
push
inc
mov
and
and
xor
in
mov
mov
inc
and
ljmp
test
xorb
insb
and
push
and
or
push
jl
ja
adc
push
nop
or
iret
loopne
sub
jmp
push
mov
cmp
inc
add
and
inc
fldl
inc
push
outsb
sub
add
hlt
mov
mov
mov
mov
inc
xchg
es
mov
push
rolb
dec
popa
bound
inc
in
xor
pop
sub
xchg
jns
xchg
nop
push
and
bswap
in
xchg
and
pushf
push
push
stc
nop
scas
pop
sbb
and
sbb
fsubl
adc
daa
xor
insb
repz
push
rorb
lods
aas
jg
add
in
add
movups
mov
test
enter
dec
pop
or
push
and
pop
daa
outsl
or
add
pusha
and
dec
sbb
xchg
stos
or
inc
scas
sbb
daa
mov
popa
jo
addb
lea
mov
daa
je
cmp
mov
or
push
jbe
dec
fisubrs
loopne
aaa
sub
icebp
inc
pop
outsl
test
and
or
inc
arpl
jo
cs
xchg
mov
xchg
pop
jne
sub
xor
xlat
add
sub
and
fs
or
js
js
pop
jb
das
dec
gs
loop
inc
cs
mov
cs
and
jg
and
add
dec
mov
push
or
insb
or
mov
inc
add
in
pop
lods
test
or
sub
pop
sub
sbb
dec
push
and
pop
leave
sub
in
xchg
dec
pop
inc
or
adc
cmp
inc
insb
push
inc
push
test
push
pop
imulb
pop
stos
pop
push
xorb
add
and
inc
rclb
adc
push
pop
jns
mov
pop
outsb
push
xor
in
cld
pop
fsubr
or
sahf
mov
notb
mov
mov
in
jnp
inc
adc
push
cmp
push
hlt
sbb
lock
push
and
shll
or
gs
pop
and
or
data16
bound
jno
or
sub
mov
aam
ja
sub
pushf
loop
add
sbb
pop
xchg
add
lea
xchg
adc
and
bound
cltd
or
mov
add
xor
inc
mov
into
jl
inc
cld
and
sub
cmovne
jae
push
xchg
mull
cmp
adc
pop
xchg
lods
pop
js
test
or
xchg
xchg
adc
adcb
mov
adc
int
xor
or
push
inc
scas
add
add
adc
add
mov
sub
mov
xchg
stos
sbb
cmp
sub
sbb
adc
xchg
dec
imul
mov
pop
test
dec
insl
gs
inc
insb
adc
popf
pop
or
outsl
and
or
mov
push
jns
dec
popa
js
outsb
addr16
inc
sahf
daa
push
inc
adc
and
dec
mov
imul
or
push
or
jns
xor
add
jae
lods
inc
mov
or
imul
xchg
rclb
dec
pusha
and
adcb
sub
dec
adcl
rclb
aad
xor
movsl
add
cmp
xchg
jae
xchg
cmp
push
sub
lahf
inc
leave
add
pop
and
scas
mov
xor
xor
ss
jns
xchg
mov
fcomp
lret
or
int
cmp
loopne
loopne
shll
and
inc
push
sahf
push
lret
je
call
or
dec
push
jo
cmp
add
push
mov
daa
inc
pusha
xor
pushf
xor
or
out
mov
cwtl
xor
inc
imul
sbbb
mov
pushf
data16
cmp
push
cmp
adcl
sub
in
and
and
and
bound
arpl
shlb
icebp
aaa
lock
sub
xchg
sub
fists
sbb
pushw
adc
or
push
inc
add
or
and
lock
mov
xor
call
and
enter
sbb
inc
enter
or
in
and
add
mov
mov
inc
nop
push
scas
and
mov
push
pop
cmp
xchg
sbb
sbb
sbb
es
push
sbb
sbb
test
loopne
xchg
lods
add
shlb
cmpsb
xchg
or
sub
push
jecxz
inc
scas
and
popa
loopne
or
sbb
mov
movsb
ss
mov
icebp
mov
outsb
pop
sub
inc
mov
xor
jl
inc
shlb
push
xor
add
xchg
sbb
xor
leave
push
jb
xor
xchg
pop
and
leave
push
xor
cmp
xor
and
push
cmp
add
inc
test
dec
inc
inc
pusha
orl
inc
cmpsl
divb
or
inc
pop
mov
inc
push
inc
fists
loop
push
mov
xor
out
mov
bound
repz
inc
mov
out
mov
rorb
nop
push
mov
mov
adc
adc
mov
push
fs
jne
inc
adc
mov
add
and
fidivrs
mov
lret
pop
adc
inc
hlt
data16
add
mov
je
xchg
pop
pushf
aas
cwtl
cmpsb
pushf
push
add
mov
add
adc
fs
dec
or
nop
push
xchg
out
enter
sub
mov
xchg
add
dec
out
inc
sub
stc
xor
inc
pop
inc
sbb
enter
ja
add
push
push
outsb
mov
add
jge
add
jmp
incl
push
cmp
stc
sahf
cmpsl
push
xor
push
pop
pop
roll
pop
sbb
rcr
inc
add
add
inc
adc
jo
add
les
mov
push
bound
push
in
jg
mov
push
add
cmpsl
or
and
pxor
test
cltd
inc
cs
pop
pop
dec
in
mov
dec
mov
jo
sbb
les
insb
adc
daa
add
cmp
or
mov
xchg
sbb
sbb
and
xor
sub
dec
push
pop
shll
or
leave
and
or
and
dec
scas
xchg
and
es
sub
xchg
sub
inc
push
inc
sub
dec
das
xor
and
add
lahf
mov
pop
movsb
adc
pushf
jb
adcl
pop
inc
xchg
jg
mov
sbbb
bound
mov
fcompl
nop
add
ja
add
push
hlt
pop
inc
or
sub
sbb
fisttpl
scas
into
push
test
xor
inc
add
and
rolb
stos
cld
sub
loop
call
daa
xchg
nop
mov
push
xchg
inc
add
mov
lods
outsl
leave
adc
dec
mov
mov
out
movsl
andl
ss
dec
push
adc
leave
pop
sbb
fsts
pop
pop
or
stos
insb
and
rolb
lret
cmpsl
mov
addb
lods
popa
rcrb
and
add
and
lea
je
sub
sbb
mov
mov
sbb
rorb
push
insb
cld
insl
fmull
inc
pop
jmp
imul
cmp
inc
fistl
je
fcomps
in
mov
ret
xchg
fistps
sar
mov
xchg
leave
add
mov
push
push
push
fisttpl
shl
shll
pop
aas
bound
push
test
idiv
pxor
jmp
or
push
repz
mov
jno
cmp
pop
ret
rcrl
push
jo
js
movsb
movsb
add
pushf
jae
int
sub
xchg
mov
popw
lahf
jle
add
vunpckhps
add
mov
dec
push
ss
imul
dec
mov
add
cmp
out
icebp
mov
inc
and
ss
in
pop
out
test
or
pusha
shlb
cwtl
dec
dec
adc
or
rol
cmp
stos
and
and
aas
das
mov
test
push
je
mov
insb
or
call
jne
lea
mov
adc
xchg
fmull
sbb
clc
addb
dec
sub
inc
jmp
pop
lods
inc
push
nop
push
xor
nop
js
popf
je
sub
or
sbb
dec
dec
push
or
xlat
cmpsl
cwtl
inc
mov
movsb
shll
or
arpl
pop
cli
rolb
cld
cld
pop
and
xor
sub
dec
inc
nop
push
sub
gs
add
xchg
jae
mov
insb
imul
pusha
add
xor
jl
xor
add
pop
daa
push
xor
decl
aam
test
inc
mov
dec
cltd
push
add
xchg
inc
pop
adc
jo
or
enter
xor
mov
enter
mov
sub
adc
or
pop
addb
push
insb
mov
mov
or
dec
sub
jo
mov
es
jne
andl
xor
lods
movl
inc
jle
push
test
test
aad
push
inc
cmp
and
scas
jnp
inc
movl
xor
adc
addl
adc
adc
and
arpl
xchg
mov
xchg
loopne
movsb
stc
lock
sub
cwtl
dec
add
aad
xorb
adc
inc
aam
aam
cmpsl
and
cmp
xor
lock
xor
out
iret
inc
daa
insb
or
mov
xchg
in
push
insb
outsb
pop
fdivr
ljmp
mov
addl
adc
cwtl
pop
add
test
sbb
sbb
sub
cmp
add
push
xchg
out
stos
push
mov
rcrb
and
sbb
mov
adc
sarl
push
mov
faddl
sbb
and
xchg
adc
inc
inc
leave
jno
rorb
and
mov
sub
testb
insb
push
push
ret
inc
pop
fwait
dec
ljmp
shrl
inc
dec
loopne
add
or
lret
adc
lcall
outsb
sub
and
insb
js
push
daa
cmp
add
jle
adc
testb
add
neg
xor
push
mov
sub
imul
cmp
pop
int
testl
fcoml
push
stc
xchg
inc
fcoml
jae
stc
mov
inc
mov
cmp
and
outsl
cmp
mov
pop
pop
arpl
adc
sbbl
rclb
cmp
push
jne
xchg
push
rcl
jb
jge
push
mov
fxch
or
nop
dec
les
cmpl
andb
dec
pop
inc
loopne
jnp
mov
mov
sub
adc
test
sbb
fstpl
mov
sub
sbb
push
dec
je
dec
fsubrs
les
inc
inc
add
gs
jp
js
add
orb
mov
xchg
pop
js
mov
mov
out
push
xor
push
testb
fimuls
add
adc
mov
jmp
test
in
and
test
push
dec
or
lds
pop
or
btc
lods
cmp
cmp
add
mov
xor
lahf
adc
insb
enter
adc
call
pop
outsl
idivl
mov
xor
and
rol
pop
mov
sti
sbb
pop
adc
adc
movsb
sbb
cmpsl
arpl
arpl
mov
in
pop
xchg
cltd
addr16
push
push
mov
out
push
or
push
and
xchg
jge
repnz
mov
sub
or
cli
popf
dec
mov
and
mov
jg
sahf
push
out
sub
setnp
iret
and
lods
into
push
xchg
and
mov
mov
push
adc
mov
loopne
fcomps
xchg
sub
sbb
scas
shlb
insl
gs
mov
sti
pop
push
sub
push
idivb
pop
inc
xor
mov
push
pop
mov
and
rclb
pop
push
sub
daa
add
test
popf
add
pop
and
clc
push
inc
add
clc
jg
dec
lock
mov
or
sbb
lods
test
inc
loopne
xor
pop
cli
xor
imul
dec
int3
pop
add
adc
xchg
lods
pop
cld
inc
pop
cld
les
adc
pop
lret
pop
sub
cld
sub
jno
mov
loope
das
mov
mov
dec
or
scas
mov
add
and
inc
cs
daa
es
mov
out
inc
push
inc
sbb
and
adc
pusha
or
cli
clc
dec
dec
inc
inc
dec
push
pop
xor
adc
jg
movsl
jecxz
inc
lea
inc
add
or
cld
mov
xchg
dec
jns
pop
aam
jmp
bound
andl
jmp
rcr
mov
pop
inc
rorb
adc
pop
mov
inc
adc
daa
mov
xchg
pop
add
jecxz
sub
fmull
mov
jl
inc
or
lret
sbb
adc
and
mov
aaa
add
dec
dec
sbb
ret
incl
mov
mov
xor
push
fnstcw
pop
pop
iret
cld
in
inc
sub
mov
dec
js
xor
clc
add
jo
xor
dec
add
roll
mov
mov
mov
sbb
bound
and
mov
push
fildll
addr16
push
popa
ss
or
add
nop
clc
add
mov
sbb
xchg
test
jae
pop
faddp
add
sti
add
cmp
fs
ret
cmp
sbb
repz
sbb
mov
add
call
push
pop
adc
inc
sbb
mov
popa
jo
notl
add
shll
or
test
rcrb
hlt
xchg
add
imul
test
xor
lcall
inc
testb
cmp
push
or
rorl
jp
add
insb
mov
add
arpl
cmp
cmpsl
adcb
in
or
pop
sbb
cmp
pusha
cmovns
fldt
adc
orl
mov
pop
sub
and
cmp
mov
mov
dec
push
mov
cmp
rorl
fists
test
jnp
test
adc
lcall
inc
movl
adc
faddl
je
dec
and
aaa
shll
out
xchg
add
into
mov
cmp
add
loopne
and
fwait
js
ja
inc
or
fbld
clc
inc
inc
or
mov
loope
les
sahf
dec
clc
bound
mov
dec
pusha
les
imul
pop
cmp
sti
test
mov
fcoms
fwait
xchg
push
push
mov
adc
or
mov
xchg
cmp
ss
out
inc
jo
dec
and
add
cmovg
inc
add
inc
cmp
mov
add
jge
xor
jo
cmp
push
adc
push
xlat
sbb
mov
outsb
and
cmp
mov
xor
sub
adc
jge
das
mov
sbb
ficoms
cmp
aaa
testl
nop
filds
dec
popf
int
imul
roll
js
jg
jl
lret
xchg
pushf
sbb
mov
and
add
and
sub
dec
xchg
mov
andl
aam
inc
in
test
sub
adc
test
mov
bound
les
movsl
mov
lods
cmp
xor
or
inc
push
stc
ret
pop
pop
loopne
call
movb
aas
enter
dec
inc
dec
shlb
pop
xchg
mov
add
in
out
jnp
lock
add
push
mov
rorb
add
loop
loope
test
xchg
dec
icebp
nop
je
ja
dec
mov
sbb
cld
add
or
or
inc
and
aas
inc
add
push
xlat
xorl
jb
pop
testb
inc
sbb
and
out
push
adc
addb
dec
dec
lds
mov
mov
mov
nop
cmp
cmp
mov
add
sbb
test
sbb
lea
movzwl
inc
push
leave
cmp
outsb
ljmp
sub
ficompl
inc
mov
mov
dec
inc
or
pushf
add
mov
mov
inc
gs
and
xor
inc
xchg
dec
pushf
mov
mov
sbb
xchg
es
cmpb
in
dec
or
andl
cmp
mov
and
mov
repz
sbb
and
push
idivb
or
movb
mov
loop
push
xor
faddl
stos
popl
add
xchg
fwait
lds
movsb
enter
mov
pop
pop
cmp
adcl
mov
ja
orb
repnz
add
out
inc
shll
xchg
ljmp
adc
jmp
mov
inc
test
nop
clc
inc
jne
movb
or
xor
iret
adc
adc
mov
push
lcall
roll
imul
aas
inc
scas
insl
mov
pop
scas
pop
jg
push
pop
sub
or
mov
dec
jb
inc
mov
xor
mov
pop
or
fsubrs
andb
push
adc
mov
and
leave
cld
dec
sub
add
pop
adc
push
pop
pop
or
xchg
call
imull
sub
mov
inc
or
or
inc
decl
jge
jecxz
xlat
or
ja
mov
pop
orl
fiadds
or
push
loopne
bound
pop
mov
mov
dec
arpl
mov
mov
xor
movsl
mov
or
outsl
xchg
movsb
add
or
loop
sbb
sbb
add
cmp
je
mov
xlat
inc
dec
push
or
mov
push
mov
sbb
mov
cmp
push
gs
mov
mov
das
add
pushf
or
sub
push
push
push
dec
dec
xlat
cmc
aaa
lsl
dec
mov
add
xchg
es
rcr
test
xor
or
loope
adc
sbb
or
fucom
xor
pop
cmp
cmp
jne
sbb
xor
fs
sub
jne
cmpsl
sub
add
or
in
imul
or
or
xor
and
pop
jmp
inc
add
insl
jp
cli
pop
shlb
je
cli
js
xor
add
xchg
sbb
sub
insb
add
fnstcw
add
jae
in
pop
fsubl
sub
and
xchg
xchg
xchg
inc
add
inc
add
inc
sub
pop
lea
roll
and
push
mov
xor
pop
and
pop
push
dec
add
outsb
daa
ret
jae
push
lcall
sbb
add
sub
jns
mov
cld
sub
jb
cwtl
insl
cld
stos
dec
fadds
clc
xchg
pop
loopne
pushf
insl
adc
data16
arpl
daa
inc
gs
pusha
inc
fxch
xchg
xchg
pop
shlb
js
mov
dec
cmovl
xor
xchg
jb
loopne
int
adc
daa
push
xor
insl
fnstsw
iret
repz
in
cmc
std
add
imul
repz
add
mov
lock
cmp
and
aaa
inc
outsb
scas
nop
fs
push
subb
adc
add
es
mov
test
pop
mov
push
push
dec
or
add
test
add
dec
cmc
fcmovbe
add
inc
adc
or
sbb
and
jae
test
push
cmpl
dec
jbe
xor
mov
clc
push
mov
sbb
or
sbbb
sub
pop
daa
outsl
lock
push
or
outsb
sbb
movq
add
adc
cmp
or
mov
test
mov
or
jo
nop
mov
xor
mov
mov
nop
inc
push
cmc
mov
addl
cmp
or
lds
loope
cmp
jl
pop
add
or
xor
rcrl
mov
cmp
adc
divl
ret
push
inc
and
add
pop
xchg
jbe
pop
inc
mov
or
push
mov
cmp
arpl
mov
push
or
mov
fstl
das
popf
dec
or
pop
arpl
jb
sub
and
xor
fisttpl
sub
cmp
adc
in
in
and
sbb
call
orb
ret
pop
fs
adc
clc
outsb
mov
or
test
mov
adc
dec
shl
sub
clc
lods
xorb
call
xor
jecxz
mov
dec
inc
sub
sub
and
sub
push
pop
dec
gs
sbb
cmp
sub
sub
and
xor
sub
retw
pop
rol
movb
cmp
sbbl
push
call
mov
jmp
jae
add
inc
xlat
adc
or
xor
inc
addb
and
add
adc
mov
loop
or
cld
jmp
mov
enter
imul
push
cld
incb
add
pop
push
pop
fldl
stc
add
lock
dec
jne
adc
test
jo
inc
call
sbb
add
jne
sbb
push
or
add
and
xchg
stos
cmc
call
test
and
aaa
and
jo
aaa
imul
push
sbb
cmp
bound
and
jge
adc
cmp
ja
rcrl
cmp
or
repz
and
add
jge
decl
je
or
je
xor
fcompl
loopne
stos
test
fdivrp
dec
es
jnp
sbb
popf
mov
push
xor
inc
lock
fs
mov
loope
sub
sub
repz
inc
and
fcmovnu
repz
jp
fildl
push
ja
adc
jg
sub
sub
cmovb
xlat
xchg
pop
enter
and
jecxz
in
cwtl
inc
mov
add
mov
xchg
mov
dec
pop
jb
sti
dec
inc
dec
push
add
mov
mov
add
lret
dec
cld
and
xor
aaa
loopne
or
or
add
jmp
rcrl
enter
mov
js
push
nop
inc
jp
mov
nop
inc
fsubrl
cmp
jne
sub
ret
jne,pt
mov
insl
jbe
insb
loope
nop
rclb
pop
cmp
pop
or
imul
mov
inc
sub
cmp
lock
inc
pop
mov
mov
fdivl
aaa
mov
lods
int3
pop
mov
les
fmull
imul
push
sbb
in
test
in
dec
mov
fdivl
leave
dec
xor
outsb
sub
adc
movsl
test
cmp
ret
test
movsl
in
xor
jns
sbb
mov
adc
pop
loopne
mov
add
mov
jb
inc
and
pop
pop
jp
in
xchg
pusha
jne
mov
mov
clc
sbb
inc
add
and
and
ud1
gs
out
mov
subb
jae
lods
push
cwtl
loopne
jno
insb
jns
shlb
dec
aaa
loop
add
mov
add
outsb
sbb
push
addl
nop
in
pop
push
add
sti
add
or
mov
mov
mov
clc
jp
insb
add
add
popa
loope
or
sub
insb
push
out
test
outsb
adc
test
fisttpll
mov
mov
inc
add
aas
leave
add
mov
inc
sub
ss
push
mov
jnp
push
mov
nop
or
dec
sbb
mov
and
ret
aaa
mov
incl
adc
ds
jl
push
jb
push
jl
and
push
pop
or
jnp
add
push
hlt
gs
push
sbb
rcr
fiadds
cmp
add
test
or
add
adc
fnstcw
movsb
xor
adc
daa
jns
push
pop
sarb
and
cmp
pusha
jle
leave
push
subl
out
mov
or
sbb
push
push
int3
rcl
sbb
push
loopne
cmpsl
pop
mov
je
pop
sub
sbb
inc
enter
rcrb
xchg
push
sbbl
and
mov
addr16
scas
or
mov
inc
add
mov
sbb
movl
sub
cltd
fwait
dec
pop
dec
aaa
and
mov
rcrb
les
xchg
mov
xchg
inc
and
jns
enter
mov
adc
inc
das
enter
mov
add
add
test
mov
insl
bound
pop
pop
insl
bound
jg
push
dec
add
inc
scas
gs
fwait
add
andb
outsb
jne
insl
outsb
ljmp
or
jmp
popl
jbe
or
fs
insb
xchg
nop
xchg
pop
loopne
gs
xorl
sbb
push
imul
imul
jmp
mov
jle
or
push
dec
dec
fdivrl
mulb
lods
or
add
popa
in
popa
imul
mov
adc
fldz
in
sbb
pop
or
and
add
add
and
mov
add
popl
addb
inc
xor
outsl
nop
out
and
adc
dec
movl
adc
mov
sub
sub
add
mov
pop
je
inc
loop
mov
or
push
or
dec
out
push
lea
add
cltd
in
add
adc
xchg
mov
dec
add
or
or
mov
add
push
push
jmp
lods
dec
adc
test
pop
icebp
adc
sbb
or
xor
adcl
gs
dec
sub
mov
testl
enter
pop
sahf
sub
int3
mov
negb
fildl
iret
mov
add
inc
xchg
and
mov
insl
mov
paddsb
sub
add
pop
xlat
roll
xchg
mov
or
repz
hlt
mov
pop
adc
clc
loopne
pop
lock
je
psubq
lret
popa
nop
cs
into
aam
cmpsl
shufps
inc
jp
pop
daa
pop
popf
sbb
xchg
hlt
dec
loop
push
outsl
pop
and
mov
popa
jb
gs
ret
xchg
enter
pop
pop
jo
inc
pop
push
movsb
or
sbb
stos
jae
divl
sbbb
orb
jmp
dec
mov
gs
shlb
add
add
in
cs
faddl
mov
lgdtl
sub
add
addb
or
jnp
mov
bound
arpl
add
jmp
mov
jo
test
sub
stc
add
addr16
das
sbb
or
test
push
push
jno
fnstenv
and
inc
imul
add
inc
jl
push
push
imul
roll
scas
out
push
out
xchg
or
jb
js
clc
dec
repz
mov
push
push
scas
xchg
pop
imul
sbb
wrmsr
sbb
cmpsl
sub
cmp
mov
push
sbb
dec
das
push
jo
test
push
mov
repz
push
dec
lahf
jo
and
push
mov
pop
test
fidivl
out
notb
int3
lea
cli
mov
adc
xchg
inc
fdivrl
adc
inc
out
and
ja
andps
jg
adc
dec
mov
add
push
add
add
add
pop
add
mov
imulb
mov
mov
mov
mov
mov
mov
pop
sbb
incb
cmp
mov
in
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
ljmp
cmpsb
fdivr
ficompl
call
call
call
call
call
mov
call
call
dec
cli
into
dec
dec
inc
inc
ljmp
leave
scas
mov
lret
and
jbe
push
lock
mov
push
mov
out
adc
push
push
jns
iret
rep
in
pushf
jmp
pop
in
ljmp
out
in
push
icebp
push
sub
push
dec
pusha
ss
cmp
imul
es
lock
mov
cmpsl
ja
rcr
xlat
push
movsb
repnz
cmp
fs
sub
je
or
push
call
fldcw
in
loopne
cwtl
shl
int3
mov
out
sub
xor
cs
lcall
push
hlt
rorb
sti
fidivrs
aam
cs
push
call
sbb
pop
sbb
fwait
orb
add
inc
out
lea
inc
sbb
inc
cwtl
add
cmp
add
mov
dec
in
orb
rcrl
enter
js
adc
add
mov
aas
incl
inc
pop
test
fcoml
in
dec
or
std
or
fiaddl
subb
adcl
repnz
ffreep
nop
pop
dec
insb
jmp
or
jmp
ds
fdivrs
or
repnz
xchg
xchg
cs
addr16
add
pop
cld
jle
cld
sahf
sbb
dec
insl
or
or
adc
adc
pop
adc
popa
pop
dec
and
push
or
xchg
inc
add
adc
inc
lds
inc
cmove
cmp
pop
jb
push
dec
popa
je
xchg
inc
push
push
addr16
lcall
mov
jg
push
pushf
nop
push
nop
mov
cmpsl
aaa
jno
ret
mov
outsb
add
mov
popa
iret
sarw
mov
bound
or
xchg
mov
adc
jb
aaa
xchg
add
xchg
push
xchg
iret
dec
mov
inc
bound
in
nop
xchg
bound
xchg
or
rcrb
xor
xor
pop
xchg
dec
imul
in
or
imul
or
rorb
ja
mov
add
popa
mov
push
nop
leave
mov
out
popa
jns
sbb
jo
fwait
divb
fisttps
outsb
cmp
pop
stos
lods
out
sbb
add
repz
and
js
inc
aas
add
xchg
adc
aaa
lldt
add
add
int
add
rolb
push
ss
push
popa
pop
stos
xor
addb
add
sub
adc
das
loopne
mov
adcl
test
adc
sbb
sbb
cmp
push
add
aaa
mov
ret
lods
mov
mov
outsb
mov
adc
dec
call
and
pop
les
mov
mov
mov
mov
clc
incl
xor
cmp
sbb
lcall
or
push
inc
inc
inc
decl
mov
into
std
mov
and
mov
jmp
dec
sub
mov
mov
mov
mov
jl
cmpsl
stc
mov
or
push
cld
and
jo
out
sahf
nop
mov
clc
sbb
inc
frstor
sbb
or
pop
fwait
out
mov
dec
and
and
daa
loop
repz
in
and
jbe
imul
je
push
pop
inc
jle
push
xor
dec
repz
push
pusha
and
out
pop
add
jbe
cmpsb
push
push
jo
sbb
sub
out
mov
sub
mov
iret
mov
mov
test
adc
lahf
idivl
pushf
movsb
les
imul
das
add
out
and
and
push
push
clc
xor
pop
jns
data16
push
int3
pop
cwtl
or
lahf
mov
jp
or
shlb
cmp
mov
imul
and
cmp
sbb
push
add
inc
out
loop
decl
in
cmp
into
inc
pop
and
mov
push
mov
or
adc
pop
rcrb
xor
fisubs
or
dec
dec
inc
pop
aad
cmp
into
sub
add
xchg
sbb
pop
sub
aas
pop
cmp
scas
xor
sbb
pop
push
dec
fadds
loopne
cwtl
cmpsl
add
inc
adc
mov
cmp
xchg
xor
loopne
movsb
adc
data16
push
push
insl
popa
xor
dec
lahf
sbb
sub
loopne
rolb
daa
nop
cwtl
mov
cltd
shll
jo
mov
sbb
pushf
addb
dec
mov
dec
test
pop
call
fs
adc
dec
xchg
cmp
mov
add
mov
mov
in
push
dec
pop
lret
stos
das
sbb
pushf
cltd
inc
rorl
imul
mov
test
fistps
mov
add
add
cmp
mov
mov
or
or
and
xor
adc
outsl
xor
add
sbb
arpl
enter
pusha
mov
xchg
cmpsb
sahf
push
test
out
sahf
sbb
sub
ds
jl
out
pop
gs
mov
in
inc
mov
je
cmp
lahf
push
ffree
mov
in
imul
andb
pop
cmp
lods
insb
jno
inc
js
ss
pop
subb
push
or
loopne
movsb
sahf
fcompl
fcompl
das
aad
push
cmp
sbb
pop
lds
jmp
pushf
push
add
daa
push
jg
pop
sbbl
fcmovb
or
nop
lcall
mov
jo
sbb
adc
cmp
push
push
and
rcrb
sbb
pop
lea
add
jb
mov
test
scas
test
inc
ret
fadd
add
int3
es
dec
rcll
sub
cs
nop
sbb
div
sbb
cmp
jp
pop
mov
xchg
pop
lea
inc
xor
nop
imul
sti
xor
sub
sub
cmp
adc
in
mov
jmp
aad
lods
jno
je
js
pop
sbb
scas
sbb
adc
push
push
inc
push
or
nop
or
inc
xchg
pop
daa
rcrb
in
sbb
pop
dec
inc
gs
insl
add
add
or
mov
push
xchg
daa
push
cmp
in
dec
dec
push
push
inc
push
inc
fmull
pop
push
or
add
or
mov
inc
insb
popa
clts
sbb
add
xchg
dec
pop
mov
daa
dec
push
jo
inc
es
imul
mov
pop
xchg
mov
movl
repnz
push
rorb
stos
add
jo
pop
sub
sbb
imul
mov
daa
enter
or
add
pop
test
add
lahf
cli
mov
mov
jecxz
adc
jmp
push
adc
cwtl
sbb
ror
jl
test
push
push
in
shlb
xchg
jmp
jle
inc
inc
add
push
add
mov
adc
jp
and
mov
out
pop
out
sub
inc
mov
psubsb
int
and
sbb
ss
mov
inc
je
maxps
sub
add
cmp
mov
xor
mov
das
inc
aam
or
or
movsl
orb
sub
add
push
or
add
imul
add
adc
push
scas
popf
mov
dec
imul
add
xchg
cli
sub
bound
lock
and
push
clc
adc
jno
mov
movsb
add
sbb
inc
movsb
jle
cmp
sub
xor
dec
jne
xor
mov
cmp
cmp
in
aad
es
es
dec
and
or
push
push
dec
sub
add
sub
push
push
out
imul
or
lcall
sbb
and
cmpsb
imul
dec
cld
andl
xchg
mov
mov
xchg
mov
out
iret
ret
arpl
js
jb
shl
push
inc
sbb
sub
cmpsl
mov
mov
sar
mov
sbb
add
sbb
mov
mov
push
xchg
sub
mov
mov
add
aam
mov
fisttps
pop
enter
imul
mov
add
adc
sahf
adc
mov
inc
cmp
dec
sub
adc
inc
sbb
or
sbb
lcall
data16
scas
add
pop
sub
pop
pop
mov
loopne
in
add
jmp
or
incl
and
ss
sub
mov
add
sub
or
pop
lods
rol
and
test
adc
setno
insb
pop
xor
cltd
inc
ret
push
jl
jg
mov
mov
mov
pop
adc
add
fdivrs
aam
cs
dec
fcomip
mov
shlb
xchg
and
pop
add
sub
aad
es
lea
mov
dec
jp
dec
outsl
sbb
dec
jae
lock
xor
or
shrb
in
das
ja
cld
cmpsl
daa
inc
add
inc
mov
inc
jge
or
loopne
dec
jge
xor
nop
dec
mov
sub
and
jge
std
mov
aaa
push
push
mov
xchg
fdivs
push
insb
insb
push
xchg
out
pop
jnp,pn
movsl
pop
push
pop
pop
mov
inc
inc
mov
mov
addr16
and
in
jl
lods
push
pop
enter
ret
cmp
movsb
xchg
add
ror
test
add
add
clc
pop
xchg
sub
or
mov
dec
push
sub
pop
shlb
ffreep
ljmp
popf
dec
inc
sub
add
neg
xchg
inc
push
movb
inc
cmp
pop
aaa
push
ja
jae
xor
aaa
daa
fisubrl
arpl
mov
xchg
dec
xchg
clc
push
and
mov
inc
and
test
mov
add
push
cmc
divb
mov
sarl
jb
and
pushl
add
adc
xor
test
test
dec
repnz
lret
cmp
mov
les
ficoml
xlat
push
ljmp
adc
in
ret
pusha
call
mov
clc
in
sti
sub
xor
pop
sub
or
jecxz
pop
dec
add
sub
push
jnp
repz
fdivrl
cmp
inc
imul
shrb
pop
movsl
ret
cmp
mov
dec
shrb
mov
inc
subb
test
xor
fsubrl
cmpsl
jae
js
addb
add
xorl
push
arpl
mov
xchg
repz
aaa
testl
js
sarb
aaa
adc
in
sub
add
mov
addb
insb
cmp
je
dec
mov
sarb
test
cmp
adc
in
add
lods
loopne
in
lea
orl
ret
je
jge
div
lea
or
push
push
ja
scas
cmpl
push
inc
xchg
fs
sub
add
into
mov
iret
xor
addl
addr16
scas
adc
outsl
fldl
pminsw
mov
scas
movsl
sub
xchg
jg
inc
rol
sti
push
cmpb
jge
xchg
jae
and
cmpsb
loopne
jno
push
negb
pop
lock
pusha
hlt
lahf
sbb
push
adc
dec
jle
inc
push
stos
vpshuflw
sub
ret
dec
push
jmp
jl
add
fdivrs
xorl
in
mov
test
or
addb
add
push
jmp
or
sbbl
jl
jl
and
call
and
cmp
je
popf
push
jno
pop
inc
push
cmp
fildl
mov
and
cmp
rcr
cmp
and
and
push
inc
xor
sbb
sti
pusha
or
pop
in
sbb
hlt
testl
jbe
push
sbb
mov
mov
call
das
mov
push
sbb
dec
aaa
and
sti
dec
push
push
sbb
cmp
ss
xchg
xchg
inc
add
in
or
jae
push
inc
ret
andb
popa
cmove
mov
or
nop
fucomp
out
lock
leave
sub
inc
push
sahf
test
sub
xchg
test
add
sbb
xchg
cmp
inc
push
lods
or
rolb
push
pop
fisubrl
and
cmpsl
rcr
xor
sbb
pop
push
xchg
push
pop
or
mov
popa
lcall
data16
jl
mov
pop
jae
mov
adc
pop
adc
xchg
popa
aaa
call
cmp
push
aam
pusha
test
push
push
jo
or
or
sub
fwait
sub
rcl
repz
pop
std
jno
or
mov
lock
sub
dec
jge
mov
jbe
inc
add
insb
mov
sub
or
lcall
icebp
mov
adcl
mov
xor
cmpb
movb
fnstcw
mov
xchg
add
xor
sti
movsb
imul
pop
add
dec
jmp
inc
in
or
jl
out
cmp
xchg
sub
adc
add
add
les
inc
pop
sub
and
es
sub
sub
add
mov
push
repz
adc
add
push
rorl
and
push
pusha
mov
and
std
enter
sbb
cmp
mov
xor
push
cmpsl
inc
jmp
fldenv
ss
sti
inc
enter
inc
cmp
mov
imul
inc
pop
xchg
pusha
das
js
or
push
cltd
test
ja
xadd
sbb
push
push
push
cmp
out
pop
nop
pushf
jl
xor
mov
pop
ficoms
push
fdivs
mov
and
push
fstpt
popf
ret
dec
out
xor
jle
push
pop
lret
mov
fadds
aad
xor
les
in
fdivrl
ret
dec
sbb
out
shlb
inc
adc
flds
pop
inc
push
ja
or
pop
aam
inc
adc
ljmp
imul
orl
out
jne
rcll
lea
js
or
stc
adc
jp
push
or
xchg
cmp
fistpl
dec
es
cs
add
push
stc
fstpl
fwait
jmp
sub
add
out
and
lcall
lods
fnstenv
sub
imul
push
push
insl
push
sbb
jns
sub
pusha
push
add
adc
sbb
jl
fistpl
or
ljmp
cltd
xchg
inc
pop
incl
loopne
cmpsl
insb
push
arpl
xor
xchg
loopne
arpl
inc
inc
loopne
insb
andl
addr16
inc
stos
dec
cmp
sbb
mov
dec
sbb
lret
mov
cs
dec
negb
popf
add
xchg
xchg
fbld
lea
xchg
adc
jo
and
adc
xchg
enter
inc
push
aaa
imul
xor
iret
xor
mov
jmp
dec
pop
add
lret
negl
loopne
mov
sbb
call
push
dec
sub
fdivrs
mov
add
pop
jno
dec
ja
xor
push
sbb
add
and
es
lahf
loopne
push
inc
popa
leave
xor
xor
lods
adc
mov
xor
xchg
add
push
push
jne
ss
sahf
test
sbb
dec
mov
pop
sub
dec
js
adc
stos
pushf
jecxz
add
xor
mov
fistpll
sub
lahf
mov
fcmovnb
inc
incb
or
add
sbb
cmpsl
sub
mov
cmpsb
std
inc
jle
out
movb
adc
or
stos
sbbb
cltd
push
lahf
xchg
xorl
movsb
xchg
cmpsb
mov
or
inc
insb
cmc
sub
in
nop
inc
sub
mov
sub
xchg
testb
cli
jmp
inc
mov
loop
adc
xchg
test
xor
xchg
sbb
movsl
adc
mov
insl
xor
arpl
fidivl
je
test
pop
outsb
cmpsb
adc
mov
rolb
pop
loope
xor
mov
jecxz
push
std
inc
jmp
icebp
or
rolb
add
jl
cmp
outsb
lock
pusha
or
add
sbb
sbb
adc
imul
cwtl
cmp
cld
push
adc
and
adc
das
cmp
xor
lret
and
mov
adc
cli
jl
push
and
mov
addl
xor
adc
mov
in
mov
mov
xor
dec
mov
insb
dec
jge
daa
movsb
add
nop
mov
adc
pushf
jle
or
ret
jecxz
sub
push
repz
inc
faddp
sbb
xor
shlb
nop
inc
or
sti
lock
jmp
enter
lcall
add
cmp
xor
movsb
xchg
into
cmp
jge
add
pop
sub
cli
pusha
add
add
push
push
adcb
xchg
je
jge
arpl
pop
ret
or
leave
les
sub
push
add
iret
and
leave
clc
iret
insb
loopne
jne
cld
frstor
mov
aas
jnp
mov
lcall
out
inc
sub
enter
cs
cmc
mov
push
lahf
dec
daa
cmp
push
pop
lods
repz
cmp
fwait
mov
insl
hlt
imul
add
rcll
lods
sbb
cltd
xor
pop
dec
mov
and
outsb
mov
dec
sbb
mov
jnp
add
cmpsw
insb
pop
lea
pop
iret
mov
sub
sub
shll
inc
push
inc
jge
mov
push
pop
push
clts
mov
xchg
test
xchg
andb
or
roll
xchg
lcall
xor
sbb
or
mov
sub
mul
je
mov
ja
daa
add
les
les
or
andl
xchg
push
aas
aam
add
fnstenv
andb
rcrl
or
or
je
xor
pop
or
and
inc
dec
add
inc
sub
push
dec
in
in
mov
jmp
cmp
je
mov
test
jbe
push
adc
insl
int3
jae
pushf
jge
cmp
push
or
dec
sub
adc
pop
je
je
mov
pusha
jbe
cmp
cmp
xchg
pop
je
cmp
daa
mov
nop
or
pop
jp
orb
fadds
dec
cmp
cmpsb
mov
in
mov
mov
add
dec
jbe
sbb
test
loopne
xlat
push
jl
cli
ljmp
sbb
icebp
pop
xchg
xchg
push
and
push
aas
jmp
adc
mov
adc
mov
mov
pusha
push
cmp
sub
mov
xchg
cmpsb
pushf
sub
sub
ja
jl
and
hlt
sub
mov
mov
jno
and
fs
add
clc
add
out
mov
lcall
sbb
add
mov
iret
mov
mov
insb
and
aam
add
sbb
sbb
sbb
ja
jmp
and
cmp
out
stc
mov
scas
add
adc
mov
or
xchg
inc
mov
lcall
sbb
mov
push
xor
sbb
cltd
mov
ja
sbb
cmp
push
out
add
push
cmpsl
xchg
and
xchg
data16
out
inc
and
mov
and
dec
mov
or
push
je
sbb
xchg
jne
cmp
ret
mov
push
add
stc
pop
mov
cmp
xor
cmpsb
fdivs
jl
push
aaa
aas
or
mov
test
xlat
add
movsb
scas
enter
lret
mov
adc
pop
push
push
out
xor
jae
mov
movb
inc
daa
addb
stos
mov
dec
je
sbb
movl
xchg
movb
push
pop
pop
idivb
int
sbbl
add
mov
lret
hlt
jmp
shlb
ds
add
lods
add
aad
pop
sbb
or
add
xchg
aas
dec
cmp
in
sub
mov
cmpsl
push
ret
nop
mov
push
push
xchg
dec
sti
sub
xor
add
fcmovbe
sbb
fs
pop
push
push
mov
testl
jbe
out
daa
addr16
ret
jae
and
cmp
xor
dec
inc
xor
push
sbb
fstpt
mov
push
jae
dec
push
insl
and
test
xlat
jo
inc
lea
fwait
dec
sub
sbb
jne
sarb
ss
dec
pop
loop
rorb
js
dec
lds
dec
dec
insb
imul
movups
fdivrs
xor
or
push
pop
push
add
add
fcomps
ret
push
sbb
andl
outsl
bnd
orl
adc
aam
push
fldcw
mov
repz
and
mov
inc
or
in
in
inc
xchg
loop
push
cmp
add
cwtl
loope
in
notl
or
pop
push
mov
pop
fsub
xor
enter
lret
cmp
xorl
rorl
xchg
push
ret
fldl
sbb
xchg
clc
or
xchg
pop
mov
dec
push
mov
sub
aaa
xlat
fisttpl
sub
push
arpl
cmp
int
out
loope
or
nop
or
adc
and
cmpsl
lcall
cli
push
jmp
jle
jne
mov
aas
pop
and
clc
jne
sub
add
mov
test
and
inc
loopne
clc
xor
or
jo
fadds
push
je
adc
mov
les
push
out
dec
fnstsw
shr
std
sub
ret
jne
sub
popa
pop
mov
and
ss
cs
inc
dec
push
push
dec
pop
push
inc
and
push
or
ret
or
cmp
icebp
leave
xchg
xor
sbb
add
scas
jb
inc
jbe
rol
lock
jne
cmp
aam
mov
xchg
lock
push
push
ret
mov
xchg
jns
inc
mov
mov
jle
gs
inc
add
add
pusha
or
addr16
and
iret
dec
or
jle
pusha
out
push
and
test
inc
test
mov
pop
popa
mov
cmp
jg
call
sete
data16
add
sahf
push
mov
dec
mov
push
adc
es
adc
dec
add
rol
sub
dec
mov
in
daa
inc
adc
rcll
test
xor
sbb
adc
cmp
add
xchg
jg
lahf
and
int3
jmp
inc
xor
or
pop
mov
dec
and
push
sbb
inc
dec
das
subl
decl
rolb
sub
mov
roll
mov
lret
inc
dec
stos
insl
outsl
roll
dec
dec
push
xchg
dec
pushf
or
mov
xchg
push
inc
or
mov
lods
mov
cmp
imul
imul
cmp
fs
in
mov
test
push
call
dec
add
adc
bound
je
mov
cmp
cli
clc
dec
and
mov
mov
mov
lds
push
cmpsl
push
popa
nop
inc
lcall
add
mov
dec
or
adc
mov
pusha
xor
cmpsb
mov
insl
test
or
rcrb
or
add
imull
rolb
test
xchg
loop
jnp
scas
xor
cmp
dec
lret
mov
dec
add
add
mov
sbb
dec
fsubs
out
cli
push
mov
ljmp
inc
xor
int
mov
lahf
cmp
or
xchg
push
xchg
lea
ret
xchg
add
push
mov
lods
dec
idivl
fldt
add
or
jge
aam
mov
cltd
fiaddl
jns
pusha
and
and
hlt
pop
lret
cmp
aam
mov
incl
add
sub
pop
sbb
push
gs
fiadds
push
and
inc
sbb
xor
pop
fiadds
mov
inc
xchg
flds
lcall
nop
xchg
or
push
sub
jno
and
sbb
inc
or
xor
xchg
cmp
sub
add
sbb
jne
push
jno
xchg
movsb
xchg
mov
decl
mov
shll
lret
aam
mov
testl
and
adc
mov
das
or
push
ret
mov
lea
adc
test
f2xm1
ljmp
cs
cmp
les
mov
or
in
add
adc
inc
loopne
adc
adc
aam
loopne
movsb
push
push
xor
xor
push
pop
jno
xchg
adc
add
adc
mov
nop
add
pop
ret
fimuls
inc
lcall
lret
or
adc
xor
cmp
rcll
push
xchg
xor
fmull
or
mov
lea
rclb
jecxz
dec
divl
xchg
pop
push
rclb
cmpb
loopne
addb
adc
or
rcrb
xor
popf
movsl
popf
push
cmp
jle
or
inc
cwtl
decl
push
cmp
je
mov
lret
jo
pop
dec
and
add
or
idivb
xchg
inc
push
and
xor
add
inc
or
lock
addr16
push
pop
pop
pop
or
fldl
jl
shlb
inc
enter
mov
and
and
mov
test
xlat
adcl
pop
inc
js
pop
adc
push
push
sbb
or
mov
inc
dec
xor
inc
cmp
xor
sbb
cmp
cmpsb
in
add
sub
mov
add
pusha
mov
and
test
mov
pop
jle
fs
cmp
je
pushf
dec
mov
int
push
xor
mov
mov
fldcw
pushf
xlat
adc
je
mov
push
mov
in
dec
or
pop
push
add
or
sbb
jle
dec
or
mov
or
nop
test
pop
out
jo
mov
jo
scas
stc
add
inc
inc
add
outsl
push
mov
mov
imul
daa
sub
push
lret
mov
mov
push
jo
movsb
pop
mov
xchg
add
std
in
and
push
cltd
sub
nop
into
aaa
jl
jnp
outsb
pop
je
mov
movb
ja
mov
or
push
push
lds
push
lret
mov
fwait
bound
mov
push
cs
xor
pop
push
xor
or
mov
mov
xor
pusha
and
subl
or
push
adc
or
insl
lock
nop
cltd
sbb
mov
mov
dec
and
and
setnp
push
cmp
inc
lcall
or
cs
pop
pop
and
xchg
in
inc
pusha
pusha
lods
mov
fdivrs
data16
adc
push
adc
fcoms
aas
shrb
icebp
mov
jle
rcl
adc
mov
out
sub
lahf
sub
insb
mov
adc
xor
pop
pushf
xor
in
cmp
xor
les
aaa
inc
shll
xor
dec
add
sub
mov
daa
mov
leave
je
idivl
sti
jp
xchg
xchg
dec
push
jo
adc
les
scas
rcrl
sub
out
add
popa
pop
or
inc
divl
dec
dec
mov
and
adc
roll
iret
inc
enter
mov
adc
inc
mov
mov
add
dec
test
or
xchg
cmpb
adc
cmp
testb
enter
push
fmull
dec
out
pop
and
sbb
pop
xor
mov
mov
rclb
jno
popf
inc
pop
je
adc
jne
mov
push
adc
dec
lock
add
jge
lock
inc
mov
or
dec
out
pop
push
nop
in
dec
mov
ja
add
outsb
xchg
or
mov
pusha
jg
lds
roll
out
movl
je
and
add
inc
pop
or
pop
jo
sub
stc
cmp
loope
in
pop
aad
xor
ret
mov
add
inc
fbld
adc
pop
jne
js
pandn
insl
xor
pop
cmpsb
xchg
mov
fcmovbe
inc
pop
aam
aam
sbb
inc
push
pop
inc
pop
add
push
popa
outsb
enter
sub
adc
jg
xchg
mov
mov
push
xor
xchg
fcoml
mov
xor
xchg
adc
mov
or
push
mov
push
movsb
mov
pop
das
add
xor
cmp
pop
jb
xchg
adc
inc
cld
add
adc
popl
mov
mov
iret
ret
jae
mov
dec
stos
pusha
mov
imul
int
adc
insb
push
js
push
mov
ret
jge
mov
ret
les
cmp
test
dec
add
in
dec
or
imul
lock
add
sbb
adc
roll
add
sbb
dec
iret
fdivs
repnz
sbb
xor
adc
dec
or
dec
lret
push
jns
hlt
lock
ja
fnstenv
ljmp
repz
gs
call
add
jmp
adc
adc
adc
outsl
and
add
push
dec
sbb
sbb
daa
js
inc
aad
fiaddl
pusha
cmpb
jne
adc
movsb
add
flds
xor
mov
lock
les
dec
and
inc
or
loope
int
fucomip
mov
adc
ret
aaa
enter
inc
fst
sbb
in
adc
xorl
jle
add
mov
mov
lcall
sub
inc
add
or
or
adc
or
push
push
push
insb
push
mov
cmp
inc
js
test
testb
test
inc
mov
or
add
and
sub
add
add
arpl
and
hlt
and
or
xor
pop
pop
je
cmp
push
lods
sub
notb
roll
jo
jne
add
push
fcoms
pushf
shrb
mov
pop
sbb
testl
or
jle
neg
pop
lea
ljmp
imul
ret
cmp
pop
mov
cmp
jge
mov
aas
mov
hlt
cmp
addb
sub
jl
cs
or
push
sarb
addb
jl
adc
add
cs
dec
dec
add
aaa
loopne
sbb
insb
aas
push
lea
loopne
fucomip
mov
cmpb
les
xor
push
adc
clc
jns
fnstcw
and
mov
dec
mov
add
push
xor
sub
sub
cmp
push
jle
leave
js
dec
mov
cmp
test
imul
sub
sub
lods
cmp
push
addl
cmp
and
pusha
test
add
push
shrb
dec
sbb
call
sbb
push
pop
out
cli
in
outsl
or
and
push
mov
cmp
jne
aaa
mov
adc
cmp
cld
ja
cltd
pop
je
mov
sub
jb
je
ret
add
inc
loope
inc
and
lock
dec
or
or
adc
add
or
push
mov
inc
adc
fidivs
loopne
fwait
mov
jb
xchg
sbb
es
fiaddl
pop
inc
data16
int3
pusha
mov
cld
test
movntq
sbb
fsubrl
add
add
sbb
push
das
enter
mov
inc
inc
pop
fdivrl
cmpsl
and
outsl
sbb
adc
loope
pusha
testl
imul
popa
mov
test
movsb
pop
outsl
inc
push
mov
int3
leave
jle
int3
loopne
jo
push
sahf
sti
jmp
add
lea
ret
sub
sahf
inc
bound
or
and
and
mov
dec
pop
add
pop
rol
xor
or
mov
dec
insb
incl
and
xor
es
pop
mov
xlat
or
test
scas
and
lea
cmp
sbbl
imul
ja
mov
and
inc
mov
inc
or
add
ret
loopne
sbb
pop
clc
mov
stos
popa
add
loop
push
das
jp
xor
mov
sbb
lret
aam
popa
and
dec
add
and
adc
add
addr16
xor
aam
inc
dec
add
ret
loop
test
push
adc
popf
les
push
pop
cmpsl
loopne
inc
or
int3
pop
add
pushf
sub
push
iret
xchg
pop
xchg
adc
sbb
loop
mov
movsb
inc
or
sar
mov
out
mov
pop
mov
jae
mov
cmp
or
xor
add
cltd
icebp
popa
sti
xor
inc
or
push
into
loopne
test
add
js
repz
cltd
int3
lcall
mov
push
inc
int3
test
adc
mov
add
outsl
test
stos
sub
xor
push
movsl
test
add
rorb
mov
or
lock
cmp
inc
or
jbe
insb
loop
scas
or
or
adc
mov
push
sub
add
or
pop
dec
dec
or
or
inc
js
rcrl
fldl
cmp
push
inc
dec
pop
test
or
mov
adc
sub
jge
roll
or
mov
test
jmp
sub
push
pop
mov
push
or
lcall
mov
cmpsb
adc
inc
sub
or
inc
sub
dec
add
aaa
aaa
jge
push
mov
push
dec
mov
rclb
dec
mov
pop
push
inc
cmpb
dec
mov
pushf
cmp
jge
inc
jae
addr16
jmp
add
repnz
or
mov
dec
inc
and
movsb
xlat
sub
dec
and
and
sbb
mov
cmp
mov
sbb
add
test
push
add
sub
add
int
adc
add
and
or
aaa
cmp
mov
fs
add
xchg
pushf
jne
bound
add
jb
adc
mov
add
or
add
ss
mov
imulb
sbb
cmp
stos
mov
push
shrl
test
in
clc
testb
or
push
add
jle
push
jmp
sti
xchg
sbb
xorb
adc
and
enter
adc
inc
sbb
push
ret
xor
inc
xchg
imul
inc
hlt
mov
adc
cmp
inc
pop
add
and
mov
cmpsl
aad
add
iret
mov
imul
xchg
mov
das
mov
test
add
jmp
cmpsb
jbe
add
clc
jbe
neg
aam
pushf
inc
xchg
add
xchg
xor
outsb
jp
inc
cs
mov
fisttpll
call
xchg
and
outsl
xchg
and
adc
and
mov
rolb
inc
pop
xor
pop
or
sub
jmp
out
hlt
add
adc
cmp
add
inc
pop
and
jo
and
pop
int
push
jle
test
add
mov
pop
dec
dec
dec
jecxz
rolb
cmpsl
mov
stos
push
test
sub
fcmove
mov
or
subl
sbb
mov
and
inc
imul
and
das
test
xchg
mov
push
or
fsubr
sbb
dec
repnz
sub
sub
sub
ret
mov
add
add
push
xchg
std
fmuls
cmp
rolb
and
out
xor
push
js
inc
push
xor
jg
jg
adc
mov
das
and
orb
sar
push
sbb
mov
push
dec
lahf
je
aad
movswl
xchg
lea
or
dec
pop
mov
roll
mov
add
or
sub
shr
sub
or
fiaddl
mov
sbb
dec
aaa
test
cmp
imul
sbb
sub
lods
mov
inc
lea
ret
addr16
stos
pop
pop
sbb
or
add
test
and
dec
mov
cs
cmp
cmp
lock
or
pop
and
mov
sahf
icebp
or
fwait
jne
test
cmpb
ret
pop
jge
mov
ret
shl
push
bnd
or
mov
xchg
pop
leave
rorb
inc
aad
xchg
fistpl
add
mov
rcll
cli
fiaddl
daa
xchg
mov
xor
addr16
fs
orl
jnp
shrl
push
bound
call
daa
ret
pop
aam
pop
mov
push
rcrb
dec
or
xor
in
les
push
cmpsb
add
shll
mov
pop
dec
xor
js
fisubl
push
sbb
mov
cmp
inc
and
addr16
pop
fcoms
rorl
leave
test
sub
xor
lahf
xlat
pusha
sbb
out
outsl
add
mov
mov
or
xchg
jne
insl
cmp
andb
sbb
sub
js
inc
adc
add
and
into
and
dec
or
packssdw
out
push
adc
ret
xor
xor
pop
ret
adc
je
pop
outsl
mov
lret
popa
addr16
jmp
push
push
xor
pop
lock
xor
in
mov
notb
es
jle
rclb
adc
or
ret
cmp
adc
lds
mov
bound
jne
testb
add
push
inc
add
jle
jae
cmp
cmp
push
jne
cld
add
add
fs
int3
aad
add
inc
rclb
mov
fisubrl
pop
pop
jl
mov
insb
and
aas
xor
mov
xor
jecxz
insb
sbb
xor
popa
pusha
mov
or
les
jo
xchg
mov
enter
dec
push
mov
mov
cltd
test
xor
adcl
movsl
push
aad
lret
rol
inc
inc
loope
das
push
prefetch
adc
add
pop
add
mov
xlat
lcall
mov
xchg
fcmovne
and
pop
mov
cmc
sub
push
in
fistl
nop
int
or
rorb
aas
insb
ret
xchg
sbb
int3
outsl
das
adc
cmc
sub
dec
mov
pop
xor
inc
lcall
rol
adc
dec
dec
daa
or
dec
nop
pop
add
dec
stos
mov
outsl
xchg
sbb
mulb
jge
jo
sub
mov
sub
dec
mov
lea
outsl
ret
sbb
xchg
mov
cltd
jb
push
sub
ficoms
push
xor
or
lea
test
adc
xor
outsl
mov
mov
cwtl
hlt
or
dec
dec
push
movsl
jo
aad
push
inc
add
push
cld
js
xor
movb
inc
add
and
fwait
xor
add
sub
or
scas
cld
sub
fdivrl
or
call
pusha
xchg
add
lret
jbe
sub
pushf
and
push
rcr
mov
les
mov
xor
jns
stos
in
lcall
cmp
xchg
je
idiv
dec
cld
int3
push
clc
fstl
stos
lock
and
sub
hlt
push
mov
and
inc
fs
cmpl
jno
xchg
push
adc
push
cmpb
or
dec
ret
and
inc
mov
add
inc
mov
imul
and
and
inc
or
leave
pop
cmp
jg
sbb
push
dec
inc
mov
and
fisubrl
mov
aas
xchg
pop
and
sub
pop
leave
inc
jb
inc
or
bound
xchg
arpl
push
shlb
pop
sub
xor
out
sbb
cmp
cwtl
push
push
ficomps
mov
xor
mov
fsub
daa
lea
loope
cmp
adc
push
xchg
movl
jmp
or
fwait
out
in
xchg
xlat
scas
ja
in
xchg
and
or
ror
fldl
fcompl
add
leave
outsb
fiadds
push
xlat
arpl
inc
mov
xorb
dec
add
and
add
addl
fidivrs
add
insl
cmp
push
add
test
push
dec
loopne
inc
mov
fisttpl
dec
cmp
or
or
adc
sbb
outsb
sahf
ja
nop
xor
xor
and
test
fwait
outsb
pop
inc
aas
and
add
mov
dec
je
out
insl
mov
add
jmp
bnd
in
aam
int3
pop
fs
jecxz
aaa
xchg
outsb
rorb
add
lds
stos
les
rolb
ficoml
dec
push
push
dec
push
and
mov
mov
push
iret
ficoml
sbb
loopne
push
add
or
pop
je
add
add
and
es
adc
insl
cltd
out
pop
out
lods
sbb
imull
sbb
jnp
jne
mov
repnz
cmp
sub
and
pop
push
add
or
and
cwtl
push
dec
or
hlt
aad
inc
loop
lea
mov
les
rorb
mov
adc
mov
mov
sbb
ret
mov
mov
push
push
out
sbb
inc
movsb
fcmovnu
jne
xor
jnp
add
sbb
fwait
sbbb
mov
inc
sbb
push
mov
sbb
lret
lods
xchg
cmp
mov
or
aad
dec
cmp
es
dec
pop
and
xchg
jbe
xor
sarb
and
cmpsb
xor
xchg
sbb
out
jno
sub
inc
jg
rorb
dec
dec
out
ja
xor
inc
scas
shlb
and
std
xor
bound
hlt
or
dec
sbb
or
adc
push
popf
mov
in
test
gs
mov
cmpsl
popf
cmpl
jmp
sbb
mov
sub
in
jae
mov
imul
ds
andl
arpl
lret
jno
outsb
push
jb
sbb
hlt
add
test
sub
out
stos
cmpb
xor
loope
cld
lcall
and
shlb
sar
pop
pop
call
aad
repnz
sbb
repz
rorb
repnz
push
sti
je
mov
shlb
dec
or
mov
adc
dec
push
scas
fsubrs
dec
adc
mov
es
push
jnp
into
enter
shl
push
pop
cwtl
rcl
adc
insl
hlt
pop
push
out
inc
popa
in
jl
xor
mov
jl
cmp
add
add
out
sbb
hlt
sti
push
inc
push
xor
loopne
and
mov
out
xlat
cmc
mov
adc
outsl
xor
ds
sbb
sarl
mov
add
pop
sub
jbe
lahf
pop
in
cmp
xor
xor
jo
aam
cld
fsubr
cmpsb
jno
lods
pop
push
mov
sti
pop
ss
jmp
xchg
sahf
cld
ja
out
mov
inc
cmp
setg
jmp
push
faddl
insb
inc
add
sbb
push
dec
cmp
setle
dec
imul
inc
inc
es
adc
cmpsb
dec
inc
dec
adc
add
push
imul
add
arpl
loopne
add
rorb
mov
inc
lds
lods
cmp
ljmp
or
out
popa
inc
fs
je
adc
dec
pop
lcall
or
dec
jnp
aam
mov
sbb
shlb
ret
fcmove
inc
loopne
jl
shll
aaa
pop
notl
sbb
out
imul
popa
mov
adc
adcb
out
sub
rorb
push
aaa
sbb
notb
hlt
jmp
xorl
xchg
sbb
dec
pop
outsb
aad
daa
and
std
or
xor
leave
add
dec
call
sbb
cmp
push
dec
popf
movb
and
in
pop
xchg
ret
cmp
call
mov
adc
add
lret
cmp
mov
sub
aaa
loop
loopne
jl
push
xchg
sub
movsl
loop
cmp
fs
or
loope
xor
pop
add
pop
add
jg
in
jnp
lock
scas
int
mov
jle
es
push
lcall
ret
jmp
xor
add
jle
psubq
sub
lods
or
fs
add
rorl
fsubr
push
sbb
adc
test
testl
pop
int3
ja
int3
mov
mov
adc
stos
cmp
imul
jo
lods
or
cli
mov
or
xchg
and
cli
data16
pop
lcall
sti
push
mov
xchg
jns
lret
fucomip
stos
push
pop
in
popa
in
push
dec
sub
xchg
push
xlat
sbb
add
push
dec
lods
pop
and
sbbl
fidivrl
and
sbb
mov
je
jbe
sub
out
sbb
subl
pop
cli
sbb
cmp
jne
push
mov
cmp
mov
fs
xlat
pushf
add
xor
add
es
jo
cmpb
mov
lds
inc
xchg
cmp
push
sahf
cmc
les
dec
or
dec
push
cmp
insb
je
xchg
add
sub
idiv
cmp
jge
push
sbb
inc
lods
fsub
lret
sahf
pop
sarl
iret
leave
sbb
aam
pop
clc
add
and
pop
inc
loope
xor
push
hlt
and
pusha
in
mov
int
into
ret
shlb
jne
push
rclb
filds
shlb
push
push
mov
lock
pushf
xor
or
or
pop
sbb
sti
sub
cmp
jne
push
jp
mov
or
test
xor
push
bound
lock
mov
jae
pop
cmpsl
sbb
and
adcb
push
cmp
rolb
xchg
pop
xchg
pop
mov
xchg
mov
and
push
enter
cmpsl
jmp
pop
adc
add
orl
add
inc
xchg
shlb
cmovbe
not
std
xchg
cmpsb
bound
iret
and
push
in
and
push
das
jbe
cmpsb
fbld
sbb
jb
xchg
xlat
test
ja
scas
mov
jge
aaa
and
pusha
push
out
mov
call
imul
push
mov
jne
push
ficoml
es
jb
test
xorl
in
ljmp
movsl
and
in
pop
fnstenv
xchg
lret
or
mov
jmp
sub
mov
dec
sub
cmpl
pushf
push
sub
dec
adc
mov
xor
add
pop
xor
pushl
jo
andl
mov
sbb
in
popa
sub
inc
push
cs
pop
and
cltd
aas
adc
jecxz
shll
dec
jne
mov
pop
jbe
push
dec
mov
sub
sub
mov
mov
jmp
mov
out
pop
mov
adc
push
push
xchg
test
out
dec
add
jno
jmp
pop
xor
lea
dec
lcall
into
jg
push
mov
add
add
dec
insb
aas
loop
outsl
xor
js
and
dec
xlat
xchg
dec
xchg
rolb
rorl
rcrb
inc
cmpsb
hlt
sbb
or
in
fsubrs
das
jne
test
sbb
and
xchg
pop
or
adc
repz
push
shll
dec
mov
adc
push
repnz
adc
movsb
mov
adc
imul
stos
add
push
mov
or
iret
fwait
cmp
mov
aas
jmp
adc
jmp
lds
jbe
lea
filds
xlat
and
lods
test
arpl
daa
shlb
and
adc
pushf
pop
cmp
jle
clc
call
jmp
lock
inc
inc
adc
sub
mov
je
add
sbb
out
xlat
jne
inc
mov
dec
in
daa
xchg
call
stos
pop
lods
push
arpl
ret
jle
insl
sbb
mov
outsl
popa
inc
add
or
fcomps
les
cmp
pop
mov
push
push
push
and
sub
dec
loop
add
and
sbb
dec
push
dec
insb
fidivrl
mov
adc
xchg
outsb
or
fbstp
sbb
js
orl
bound
inc
nop
cmpsl
cmp
ret
add
sub
popf
es
xchg
xchg
add
inc
dec
mov
xchg
or
dec
fmuls
push
lea
hlt
or
jmp
pop
sub
je
orl
mov
adc
and
call
movsb
stos
mov
sarb
or
inc
pop
inc
dec
rcll
dec
adc
dec
add
mov
jle
fs
and
or
adc
fldl
ficompl
push
mov
xor
inc
mov
push
pop
test
and
dec
cmpl
popf
add
out
incl
xor
pop
pop
pop
xchg
or
adc
cwtl
add
xchg
nop
aam
testb
sub
pop
add
and
jmp
sahf
test
inc
jmp
dec
lcall
fwait
add
or
pop
ret
nop
movl
adc
xor
jae
bound
clc
fwait
dec
xchg
push
inc
je
and
pushf
stc
mov
aas
push
sbb
sub
adc
cwtl
add
xchg
inc
push
out
mov
push
mov
sti
mov
jl
insl
and
sub
fdecstp
add
fdivs
bound
sub
cwtl
les
test
sub
iret
test
dec
pusha
outsb
clc
ret
ss
or
insb
pop
inc
inc
pushl
inc
inc
fwait
push
lods
inc
int3
and
inc
mov
and
stc
lcall
arpl
insb
mov
add
jne
cwtl
jge
into
pop
and
mov
mov
notl
inc
int
push
dec
jnp
mov
xchg
repz
fidivrl
mov
or
inc
mov
movsl
push
mov
and
pop
leave
cmp
fmuls
stos
mov
cmp
test
das
mov
aaa
loop
xchg
clc
sub
cmp
loopne
jl
cmpb
mov
pop
or
inc
popa
jne
loopne
lea
or
jle
pop
pop
icebp
jg
mov
and
jnp
adc
cld
and
in
mov
push
jl
inc
or
addl
cltd
clc
shlb
jo
adc
mov
es
lcall
andb
sub
xlat
imul
int3
rorb
adc
xlat
add
or
and
rcrl
or
sub
das
inc
or
and
mov
fldl
repnz
lock
jmp
push
and
in
idiv
adc
lahf
sbb
xor
push
lahf
mov
repz
and
xchg
jnp
push
in
pop
pop
add
cli
inc
dec
js
leave
or
dec
inc
adc
shlb
lea
ja
mov
inc
test
push
mov
lea
jbe
outsl
je
out
and
sbb
mov
mov
scas
mov
imul
nop
cmpl
arpl
jg
mov
and
and
or
test
dec
sub
clc
cmp
adc
adc
or
dec
xor
jmp
xchg
daa
mov
mov
pusha
nop
push
popa
mov
mov
dec
mov
push
sti
nop
and
xchg
push
inc
nop
or
sbb
push
nop
inc
mov
xor
mov
nop
mov
loope
dec
fsubrp
or
aaa
hlt
sub
out
mov
inc
nop
cwtl
idiv
adcb
pop
data16
bound
sub
js
mov
je
mov
push
arpl
inc
mov
push
aas
dec
cld
cmp
mov
add
mov
cltd
sub
scas
iret
imul
add
adc
popa
daa
add
inc
ret
adc
out
pop
mov
sub
ja
add
inc
sbb
fldcw
lahf
out
or
push
pop
out
xor
xchg
add
push
daa
adcl
clc
movsl
sub
fcompl
inc
lods
or
mov
sub
aas
push
lods
push
pushl
lods
adc
add
cmp
add
jno
add
push
inc
add
xor
add
jp
mov
inc
mov
and
gs
cltd
lock
or
xchg
adc
lahf
mov
popf
mov
std
cmpl
pop
pop
push
jne
outsb
or
shll
dec
decb
into
adc
rolb
sub
mov
mov
enter
push
cmpsb
adc
gs
push
push
mov
fdivs
pop
xor
fbstp
mov
sub
ret
or
outsl
roll
mov
pop
lods
sbb
adc
or
sbb
pop
jmp
push
mov
cwtl
or
daa
push
mov
cmpb
pop
adc
dec
add
dec
je
push
pop
lcall
add
jo
or
adc
out
xchg
loopne
sbb
popl
pop
sbb
xchg
cs
and
imulb
jmp
outsb
cli
inc
sbb
jne
addb
adc
into
cmp
test
and
mov
stos
cmpl
jo
jae
mov
push
adc
jmp
dec
imul
push
cld
add
dec
es
sub
or
and
movsb
or
clc
xchg
xchg
jecxz
cmp
jne
xor
les
xlat
imul
aaa
pusha
xchg
mov
test
push
rcll
arpl
mov
or
pop
pop
dec
adc
imul
fcomp
rorb
add
fldenv
pop
imul
sbb
addl
add
imul
cmp
push
repz
pop
xor
popf
xchg
sbb
je
cwtl
pop
mov
clc
or
sbb
insl
inc
adc
sub
mov
add
adc
or
mov
or
inc
pusha
dec
add
mov
dec
adc
push
pop
xchg
test
fstps
adc
xchg
int
rclb
rdtsc
add
dec
mov
inc
add
and
adc
inc
rorb
inc
es
cwtl
jae
and
xor
and
ret
je
inc
push
adc
pop
aaa
je
inc
xor
pop
enter
pop
dec
ss
daa
or
scas
adc
sbb
sbb
xor
or
ret
adc
jno
cmp
pop
js
mov
cwtl
movl
pop
movsl
stos
adc
xor
add
sub
cmpb
add
push
cmpl
push
xchg
lods
push
mov
sbb
iret
es
mov
or
call
dec
pop
lea
add
sub
pop
pop
add
adcb
roll
nop
inc
dec
mov
dec
inc
je
test
xorl
mov
push
fiadds
cwtl
gs
mov
loope
in
movsl
lahf
jbe
cmp
push
push
mov
push
xchg
cmpsl
shlb
add
push
dec
mov
adc
clc
add
and
popa
movsb
pusha
stos
leave
out
js
jge
push
mov
xchg
fldenv
mov
aad
test
or
xor
jb
dec
or
out
fmulp
adc
test
jns
mov
push
jbe
fwait
inc
test
cmp
dec
sbb
les
pop
cmpsl
rorl
lods
xor
push
xchg
addr16
xchg
call
test
stos
je
xor
adcl
pinsrw
les
dec
pop
ja
jp
pop
sub
repnz
add
xorb
add
mov
daa
mov
pop
negb
in
xor
xorl
mov
pop
aad
sbb
mov
xchg
pop
setae
or
cmp
cmc
xchg
aas
xor
repz
inc
dec
push
and
js
sbb
mov
rol
xor
xchg
sub
jecxz
push
mov
dec
jmp
dec
pop
cs
add
sbb
sti
fmull
rcrl
enter
lods
push
add
mov
jl
jnp
sbb
cmp
xchg
push
adc
lods
lahf
popf
call
xor
and
dec
mov
add
jns
add
das
pop
mov
sbb
pop
aaa
inc
aas
add
in
cmp
ret
sub
aad
hlt
push
adc
roll
or
popa
inc
inc
sbb
iret
shl
push
adcb
add
pop
fldt
daa
sbb
mov
dec
cmp
push
xchg
or
mov
xor
iret
es
inc
nop
ss
pop
daa
aas
pop
int3
test
call
mov
jg
daa
aas
xor
or
dec
xchg
push
and
cld
and
sub
xchg
movsb
adc
adc
or
scas
sbb
push
sub
mov
and
fisttpll
xorb
nop
pop
pop
pop
les
je
sbb
jl
ror
pop
fs
add
xor
es
popa
adcb
inc
add
loopne
sbb
daa
pusha
pop
or
add
sub
mov
pop
push
stos
sbb
iret
nop
inc
cs
sbb
push
rol
fadd
gs
fdivr
lea
xchg
xchg
jne
daa
aam
inc
call
lahf
inc
adc
push
adc
or
dec
sub
xchg
or
inc
test
outsl
ret
adc
inc
rorl
pop
inc
xor
mov
pop
mov
cmp
inc
ret
call
adc
adc
cs
inc
cmp
inc
pushw
dec
or
push
mov
jecxz
test
test
xchg
stos
ss
in
js
sub
mov
pop
movswl
cmpl
jmp
fimull
add
jmp
adc
push
xor
fldt
sbb
mov
push
pusha
adc
push
xor
xchg
mov
fs
push
daa
or
dec
cmp
push
pop
movb
xor
add
push
xchg
add
add
xchg
popa
cwtl
pop
clc
cmpl
dec
ret
cld
mov
cmp
inc
pop
je
pop
mov
cmp
test
dec
xchg
fcoms
xor
sub
jne
add
xlat
pop
push
iret
mov
jno
xchg
xchg
adc
add
mov
push
push
inc
sub
out
inc
in
jle
xor
push
push
add
adc
popf
inc
cmp
and
orl
mov
bound
in
cwtl
mov
shlb
dec
scas
mov
inc
xchg
lret
rorb
cmp
lret
or
adc
adc
ret
cmp
stos
mov
mov
sub
aaa
rcrl
mov
imul
loop
sarl
dec
pop
rolb
test
mov
loop
fimull
ja
aaa
ret
pop
andl
pop
loopne
jle
mov
iret
rcll
into
xlat
push
hlt
jmp
fcomp
adc
cmp
fwait
mov
adc
cld
sub
pop
cmp
outsl
mov
xor
divl
loope
je
dec
test
out
mov
jge
addr16
add
dec
or
add
xchg
cmp
shrl
sbbb
or
mov
stos
lds
test
mov
pop
cs
sbb
sub
dec
fistps
or
push
mov
out
loop
push
xor
fiaddl
lret
daa
adc
ror
shrb
push
cmpsl
mov
mov
lret
inc
xchg
jne
mov
dec
xorl
rcll
fcomip
out
push
mov
and
lahf
in
je
mov
pop
loopne
sub
jle
push
popa
push
push
andb
push
popa
cmp
push
pop
sahf
mov
add
mov
sub
or
imul
lea
ja
inc
push
xor
test
fists
add
or
outsb
scas
mov
sahf
add
push
inc
and
cmp
sub
adc
add
adc
iret
xor
push
pop
push
mov
cmp
test
sti
xchg
xchg
lock
and
cmpsl
mov
bound
or
shlb
inc
sub
int3
ret
sarb
pop
cmc
or
adc
push
ds
inc
ret
and
addr16
aaa
or
dec
adc
adc
push
and
dec
nop
adcb
add
and
or
or
daa
ja
pusha
ljmp
je
out
dec
bswap
and
lret
fcoml
mov
dec
nop
pop
cmp
xor
sbb
cmc
push
mov
inc
loope
iret
add
cmp
in
test
or
add
sbb
xorl
mov
dec
sbb
push
or
push
shrb
or
aam
aaa
pop
or
dec
scas
push
iret
ljmp
add
and
aam
mov
adc
nop
and
loop
jae
rcll
in
sbb
shrl
and
or
jge
aaa
and
adc
orb
in
inc
adc
inc
sub
arpl
push
inc
sub
or
add
das
insl
pop
movsl
mov
rolb
and
jle
mov
dec
add
adc
test
jne
push
and
push
rcrb
push
fsts
jo
rol
sbb
jle
popl
sub
or
icebp
sub
sbb
mov
or
je
adc
bound
adc
add
pop
inc
outsb
or
or
adc
cmp
pop
mov
in
pop
sub
or
loope
jl
stos
push
xchg
pop
push
sbb
add
ret
and
out
add
xor
aam
out
pop
sbb
cmp
lods
or
faddp
xor
jle
movb
jle
jle
test
mov
ret
lds
out
jns
cs
jge
sbb
movsl
subl
test
jne
popf
push
pop
cmpb
adc
xor
fdivp
xchg
inc
sub
lret
cli
in
or
inc
fcmovbe
xor
test
aas
les
inc
inc
loope
ficoml
and
les
cwtl
dec
sub
test
movb
imul
rcrl
das
es
int3
call
loope,pt
jo
lds
mov
mov
and
cmp
cmp
inc
sbb
push
sbb
xchg
add
push
sbb
pop
pop
cltd
jae
inc
shl
fyl2x
jg
aad
mov
popf
cmovp
push
mov
pop
mov
fdiv
icebp
ss
mov
psraw
pop
mov
add
loop
inc
mov
call
push
cmpsb
shlb
cmpsl
lret
jns
jo
add
shrb
dec
lds
xor
pop
cwtl
jbe
das
dec
enter
sbb
ret
ret
js
lea
or
andl
dec
ljmp
test
push
pop
jo
mov
outsl
push
jmp
idivl
insb
lods
loope
push
xor
mov
jle
scas
or
cmp
pop
je
dec
and
pop
pop
std
push
ret
jle
cmp
add
das
in
pop
sbb
ret
or
push
xchg
sarb
popa
daa
pusha
jmp
pop
push
adc
xor
idivl
loope
cmp
syscall
xor
push
out
jnp
add
prefetch
or
fcoms
cmp
jb
dec
cmp
cli
pop
lret
jb
shlb
loopne
subb
push
jne
mov
add
push
dec
xlat
cmp
pop
ljmp
int3
and
xor
adc
hlt
mov
cltd
mov
pop
inc
inc
adc
adc
pop
mov
jl
nop
cmpsb
cmp
dec
ret
stos
pop
das
push
call
add
push
pop
fstpl
orl
add
clc
xchg
add
cmpl
fildl
movsb
lods
dec
add
jae,pn
lods
or
xor
xor
cmp
stos
xchg
mov
scas
inc
jecxz
sub
push
adc
pop
jmp
adcl
out
rcr
or
push
mov
loop
subl
push
or
xor
mov
adc
xor
sahf
lock
add
gs
push
pop
aad
adc
pop
xorb
pop
dec
push
iret
leave
xchg
dec
sbb
jmp
add
adcl
adc
mov
cmp
dec
leave
test
push
pop
iret
mov
add
add
jne
sti
aaa
aas
dec
xor
and
ret
daa
addr16
movsb
pop
mov
jl
sbb
je
sub
rorb
loope
push
subl
imul
inc
loope
add
sub
fmuls
mov
inc
rcl
les
inc
loopne
dec
push
mov
lea
pushf
push
movsb
sub
lds
adc
in
out
jecxz
call
icebp
rorb
xor
and
or
pop
and
dec
arpl
je
mov
mov
push
push
fwait
sti
nop
or
mov
xchg
nop
sbb
addb
cmpsl
popf
xor
out
push
add
add
mov
or
in
out
jmp
or
push
xor
push
enter
dec
ss
inc
or
cmpsb
loopne
cltd
push
and
fucomip
in
ljmp
sub
out
add
sub
insb
or
inc
and
inc
or
xchg
int
add
mov
test
and
or
xchg
rcl
push
rol
inc
hlt
dec
lods
adc
mov
sub
inc
cwtl
pop
shrl
loopne
cmp
push
inc
sub
test
fbld
jg
les
dec
ret
add
xchg
je
mov
pop
testl
dec
dec
bound
dec
test
mov
lods
sbb
daa
mov
jbe
xchg
xor
pop
popf
jmp
push
mov
fldt
jle
and
add
aad
add
addps
add
dec
jecxz
test
jl
inc
xchg
mov
sbb
jns
mov
std
andl
add
nop
xchg
mov
pusha
mov
aam
jo
ret
add
xchg
push
xlat
or
adc
clc
dec
shl
sahf
sbb
mov
push
mov
hlt
mov
cmp
or
jl
xchg
mov
dec
pop
ret
divl
nop
or
or
cmpb
out
xor
inc
ljmp
pushf
xor
fwait
push
pop
mov
jecxz
mov
repz
dec
icebp
and
dec
inc
fs
dec
mov
and
popf
subb
lea
push
dec
rcll
sbb
jo
fucomip
pop
or
push
sarb
push
aaa
pop
or
roll
sub
inc
sub
inc
sub
dec
lds
add
adc
in
test
hlt
movsb
sbb
and
jne,pn
imul
sarb
inc
mov
cwtl
sbb
pop
push
jl
andl
fimuls
jno
mov
bound
and
cld
repz
call
push
sbb
sub
call
cmp
fs
add
mov
sarb
data16
and
xchg
leave
lcall
iret
sbbb
adc
fildll
or
mov
arpl
roll
enter
test
push
outsl
xchg
mov
add
and
sahf
push
iret
cltd
hlt
movsl
or
xor
lock
xor
xadd
xchg
je
cmp
lock
fisttps
push
dec
mov
sub
pop
sub
inc
rclb
test
xchg
adc
xor
xchg
sub
adc
or
cmc
or
mov
jnp
int3
ds
arpl
wrmsr
lock
cmp
cmp
and
add
mov
fwait
loopne
movsl
xchg
jno
push
ret
jp
arpl
pop
push
adc
icebp
cltd
mov
call
add
cmp
xchg
sub
and
or
cs
cmp
out
push
add
push
xor
pop
jns
or
fcomps
xchg
cmpsl
jg
lock
mov
adc
test
xor
inc
shlb
add
jno
and
add
cmovbe
or
hlt
push
je
sbb
add
les
jmp
adc
or
or
ss
andl
clc
sub
adc
leave
adc
mov
inc
sub
dec
inc
cwtl
push
xchg
or
push
mov
jl
and
outsl
test
push
fistpll
inc
sahf
push
mov
pop
xor
and
mov
bnd
adc
jmp
sub
loop
jne
test
pop
mov
adc
hlt
jne
inc
loop,pt
movb
sub
push
pop
cmpl
xlat
sbb
add
sbb
fwait
pushl
pop
or
or
sub
sti
popf
dec
inc
addr16
lock
mov
push
pinsrw
push
add
adcb
adc
jle
ja
add
cmpb
es
into
inc
xor
mov
mov
mov
cmp
add
cmp
in
dec
cmp
js
push
mov
add
sub
pop
orl
aas
push
dec
rolb
das
xchg
mov
insb
add
mov
ret
lds
rorb
and
ret
add
mov
add
ret
or
push
aam
adc
add
mov
and
or
and
jo
int
pop
fcomps
dec
add
clc
and
push
clc
mov
inc
pop
rcpps
adc
mov
adc
hlt
pop
or
adc
je
push
add
xor
xchg
outsl
or
rcl
and
sqrtps
push
mov
or
shlb
and
cltd
lds
mov
dec
fidivrl
stos
inc
mov
hlt
stos
jmp
sbb
pop
push
dec
call
sub
mov
pop
inc
push
loopne
sub
sub
pusha
mov
adc
cmp
int
fldt
sub
push
clc
clc
lock
imul
mov
mov
xchg
and
xchg
dec
movsl
rorb
fmul
fmul
aam
adc
sub
popf
adc
mov
xchg
or
sahf
dec
in
push
lahf
add
pusha
stc
mov
sub
mov
test
cmp
rcr
push
dec
subb
or
push
pop
rolb
push
movb
jno
push
or
mov
pop
insl
arpl
inc
inc
xor
rcrb
rolb
insb
movsb
imul
cs
sub
sub
clc
or
rcr
arpl
notl
add
push
dec
mov
dec
mov
in
imul
mov
or
push
push
dec
or
shlb
mov
add
sub
push
aaa
mov
mov
jmp
inc
inc
ja
sub
adc
sarb
dec
dec
shlb
and
push
adc
outsl
das
cs
ficoms
pusha
mov
and
jle
adc
jp
dec
add
add
dec
sub
mov
out
cmpsb
mov
jo
push
adc
fmul
adc
ja
or
pop
mov
and
into
adc
into
inc
dec
add
add
mov
sbb
sbb
mov
dec
xchg
xor
xor
add
sbb
fsubl
dec
jnp
jb
fmull
or
scas
sbb
xchg
cmp
pop
mov
xchg
or
popf
aam
les
sbb
and
movsl
movsl
push
inc
cs
add
data16
push
add
mov
add
push
push
and
pop
repnz
or
pop
add
add
xchg
adc
in
lds
hlt
test
xchg
imul
xchg
jge
dec
or
enter
add
add
mov
or
inc
pop
add
add
aam
pop
mov
jb
xchg
add
mov
mov
sbb
unpckhps
pop
jns
mov
xor
sarl
sub
lret
push
dec
mov
pop
jnp
pusha
sub
lock
imul
int3
sub
and
cs
xlat
inc
jmp
movzwl
inc
mov
or
push
lock
ret
movsl
xor
loopne
outsl
or
cmp
shrb
dec
or
mov
add
cmp
adc
aad
push
clc
xchg
xor
xor
sub
test
fmull
dec
movsl
ror
hlt
add
and
cltd
icebp
pop
pusha
dec
sbb
cmp
mov
sbb
scas
clc
xor
sub
lcall
fiaddl
xchg
in
mov
dec
jbe
int
mov
pop
pop
sub
fwait
nop
gs
sub
mov
shl
and
dec
out
shl
sti
mov
push
mov
gs
fcmove
mov
dec
arpl
dec
sbb
mov
js
mov
imulb
or
fldenv
cmp
push
adc
enter
pop
add
inc
or
jns
insb
add
sub
gs
mov
je
insb
mov
subl
pop
lcall
inc
outsl
repnz
adc
add
sub
sub
jnp
rcl
mov
lea
pop
imul
or
dec
cmp
cmp
aam
or
imul
xor
and
or
add
pop
adc
fldl
cmp
sbb
push
fmul
add
test
out
inc
adc
inc
adc
sub
xchg
dec
or
or
test
fsubrp
cs
rclb
xchg
xorb
ds
movsl
xor
cmp
mulb
into
enter
test
test
or
pop
xor
orl
or
je
and
fucomi
ret
popa
pop
dec
cmpsl
cwtl
add
lods
push
push
xchg
inc
lds
xor
aas
mov
test
cvtps2pi
cltd
xor
pop
add
adc
in
push
imull
mov
ret
js
push
add
pop
pop
movsl
pusha
mov
loope
inc
or
push
testl
xor
sub
lcall
add
arpl
and
test
lahf
cwtl
cmpl
mov
adc
aad
popa
adc
xor
adc
adc
jle
jecxz
filds
add
inc
xchg
jmp
sbb
outsb
stc
test
xor
aas
add
inc
xor
cmp
test
adc
loope
jp
pop
cmp
fiadds
mov
scas
fsubrs
add
add
fwait
test
scas
mov
xchg
movsb
repnz
ljmp
pop
js
mov
call
inc
daa
mov
sbb
ljmp
outsl
inc
cs
fwait
rolb
test
push
xchg
dec
sti
adc
hlt
fisubrs
outsl
mov
dec
hlt
je
addb
scas
sub
jno
mov
sbb
push
lahf
lcall
jo
mov
or
movsl
mov
call
insb
ljmp
xchg
push
stos
push
lods
decl
mov
pop
and
aam
push
pop
in
cmp
inc
and
insb
add
mov
sub
add
inc
sub
test
movsb
sbb
scas
insl
cmp
loope
or
dec
cvtdq2ps
out
test
xor
jns
loopne
addr16
add
pop
fiaddl
movsl
popf
or
mov
push
add
cmpl
sub
orb
aaa
into
mov
jbe
push
or
imul
sub
xlat
nop
sbb
cmpb
dec
xchg
and
add
int3
subb
push
jno
mov
xchg
and
inc
and
xchg
adcb
inc
or
and
mov
bnd
jne
pop
hlt
cmp
adc
mov
xor
pop
jmp
cli
mov
add
dec
enter
adc
pop
ss
call
pop
dec
call
or
and
mov
je
je
add
shll
adc
cs
lods
test
mov
or
ret
andb
out
inc
adc
xchg
int3
push
je
lahf
in
cmp
jge
cmpl
clc
jo
rcll
in
daa
pop
das
sbb
cs
dec
sbb
or
outsb
mov
ret
cwtl
inc
frstor
add
stos
dec
cmp
call
ds
push
xor
inc
rcrl
repz
cmc
mov
dec
imul
stos
mov
loopne
iret
lock
adc
rolb
xor
dec
mov
jp
pop
jne
xchg
or
mov
add
orl
push
or
mov
adc
out
in
imul
mov
dec
mov
add
pop
arpl
push
mov
loopne
add
popa
in
inc
loopne
out
je
lods
popa
dec
and
sub
push
and
pop
inc
inc
rol
cld
dec
adc
push
js
sub
iret
test
or
xor
call
mov
popa
inc
dec
fistpl
push
push
cld
in
test
hlt
leave
add
and
incl
add
out
movsb
push
rorb
data16
out
js
movswl
fwait
in
sbb
dec
xor
push
inc
push
push
cmpsl
cwtl
xchg
sarb
xor
xchg
inc
add
arpl
sbbl
out
sbb
sbb
inc
inc
adc
mov
orb
jo
test
cmc
mov
or
cmp
lock
push
or
jb
jg
dec
adc
mov
mov
test
mov
scas
popa
iret
mov
pop
cmp
jb
loopne
or
push
js
sbb
jle
inc
orb
mov
pop
stos
add
inc
stos
lret
fimuls
adc
mov
cmp
je
pop
inc
movsb
mov
mov
pop
sbb
ret
lret
je
call
mov
xchg
xorb
pop
xor
xor
xor
lock
adc
mov
pop
in
mov
pop
and
or
lods
outsl
and
insb
xchg
mov
aas
mov
pusha
mov
aam
dec
mov
xor
stos
lahf
xor
pop
movsb
roll
movb
push
out
ret
cmpb
lods
xchg
pop
ja
inc
pop
enter
add
test
jp
lds
add
jbe
pop
inc
xchg
out
les
andb
cmp
aaa
rolb
orb
daa
mov
fs
popf
call
dec
popf
dec
and
inc
scas
movl
pop
or
stc
or
push
inc
je
push
mov
jle
cmpb
or
adcb
xchg
sub
inc
mov
cltd
push
lods
add
movsl
inc
loopne
inc
pusha
clc
fstpt
fmuls
sub
adc
rcll
mulb
repnz
or
incl
and
sbb
inc
jl
pop
mov
mov
out
dec
cmp
push
pushf
outsb
mov
cmp
lahf
xor
ret
push
add
sbb
ds
adc
leave
mov
pop
mov
movsb
jns
rolb
mov
cmp
insl
jae
sbb
sbb
cmp
jnp
and
cmp
add
push
mov
push
loope
xor
xor
sbb
adc
push
imul
or
inc
stos
and
fildl
fs
push
mov
lods
mov
fs
jne
enter
cmovo
dec
jne
into
inc
and
fadd
mov
ja
sub
mov
repz
lcall
fwait
jbe
jg
jl
stos
test
xchg
sub
jmp
aam
ljmp
adc
and
push
add
inc
loopne
sbb
sub
jecxz
adc
mov
jae
pusha
or
fidivrs
outsb
add
in
adc
adc
pop
imul
mov
test
lret
pushf
je
jp
aad
pop
pop
push
adc
mov
cmp
add
daa
or
adc
add
movsb
pop
pop
lret
pop
lea
stos
xor
ret
add
sub
push
ss
imul
mov
je
gs
jle
dec
cmp
hlt
out
mov
add
mov
test
inc
cmp
and
mov
bswap
fidivl
ret
dec
or
mov
pop
mov
adc
pushf
dec
mov
mov
scas
movsb
pop
cwtl
adc
pop
add
test
dec
push
add
mov
adc
adc
sbb
jp
fwait
subb
pop
push
adc
mov
cmp
push
lock
lods
inc
decb
out
and
sbb
pop
lock
push
xchg
adc
push
xchg
jge
jne
push
repz
cmpsb
ret
mov
and
in
and
jnp
adc
push
push
inc
push
je
clc
loope
fs
inc
mov
adc
pusha
xor
push
dec
fiaddl
ds
sbb
xchg
jo
loopne
lret
pop
ret
adc
inc
data16
push
scas
mov
jae
adc
inc
cld
mov
shlb
lods
js
int3
and
mov
int
idivl
fs
cmpsb
pop
or
and
jle
fiaddl
popf
int
cwtl
inc
or
fs
stos
push
iret
pop
pop
arpl
cltd
mov
cmp
out
jl
daa
rol
outsl
push
lock
adc
push
jg
push
dec
loope
in
movsl
add
xlat
popw
clc
add
xchg
loopne
pop
sbb
sbb
or
and
add
hlt
pop
shll
mov
push
jo
lret
pusha
and
clc
sub
sub
add
and
add
mov
sub
or
pop
adc
ret
mov
hlt
lds
jmp
pop
mov
or
loope
add
test
jle
shl
fs
movsl
shlb
mov
mov
lock
ret
cwtl
lcall
cmp
cmp
and
call
lea
aad
push
fisubrl
pushf
stos
mov
mov
xchg
or
fistpl
sbb
push
pop
dec
sbb
sub
rolb
fucomi
ljmp
add
add
addl
incl
push
dec
insb
push
xor
jg
or
icebp
adc
fs
addps
adc
and
fdivr
lea
or
test
mov
inc
scas
fstl
or
xchg
push
inc
adc
sbb
enter
sbb
fs
fsts
shrb
mov
xlat
pop
leave
les
icebp
lea
ud0
outsb
sub
aam
dec
pop
dec
adc
and
lods
jne
adc
ret
push
loope
stos
daa
icebp
and
mov
adc
insl
mov
jg
in
jbe
cmp
call
hlt
mov
adcl
push
lods
and
andb
aaa
rolb
adc
in
cwtl
cmp
sub
es
dec
out
fwait
mov
mov
inc
adc
jge
aaa
add
imul
shrb
pop
ljmp
pop
das
dec
mov
pop
rclb
nop
daa
and
xchg
mov
mov
push
rclb
orl
and
lcall
xor
inc
sbb
pop
es
pop
jecxz
or
ret
add
add
pop
cld
mov
pop
sub
xchg
data16
fisubl
add
call
fs
cs
rclb
or
mov
jmp
dec
int
pusha
vmread
inc
mov
inc
push
and
sub
add
xchg
jne
or
jmp
into
push
mov
mov
cmp
roll
xchg
shrb
or
nop
mov
pusha
fucomi
sbb
notl
dec
int3
imul
inc
dec
cs
ret
arpl
jg
into
mov
fadds
cmp
push
scas
daa
faddl
or
inc
inc
dec
and
sub
and
or
add
mov
xor
idivb
and
jo
fsubr
rolb
adcb
cltd
sbb
in
inc
dec
inc
les
add
orb
xchg
adcl
adc
stc
ja
push
lds
dec
xor
inc
loop
or
sbb
or
or
sbb
adc
xchg
clc
adc
or
pop
das
aas
pop
adc
push
mov
mov
shll
js
jmp
xchg
sbb
out
sahf
lock
inc
sub
mov
pop
adc
push
dec
adc
test
and
or
or
notl
sbb
pop
xchg
cmp
dec
rcll
adc
jmp
sub
sbb
xchg
xor
decb
faddp
mov
movhps
lods
pop
adc
cmp
inc
icebp
pop
negb
mov
clc
sub
or
ljmp
xorl
adc
in
xor
push
leave
cltd
add
add
fdivrs
add
cmp
shlb
iret
mov
mov
pop
or
data16
aam
clc
sbb
jle
jb
cmp
xor
push
cmp
rolb
add
aaa
mov
mov
sub
aas
sbb
adc
adc
add
jmp
insl
and
out
or
scas
add
pop
jg
cmp
jl
sti
pop
mov
ret
push
sti
adc
or
jmp
cmc
sbb
mov
push
sbb
lahf
in
pop
dec
insb
adc
pop
xchg
insb
cmpsb
test
xchg
loope
in
stos
or
push
jp
cmp
or
mov
xor
add
push
in
shlb
jae
andb
bound
dec
xor
dec
add
fwait
popl
ljmp
sbb
sbb
push
mov
mov
push
sub
xchg
add
lods
mov
push
daa
jne
jno
lock
dec
adc
insb
stc
mov
test
gs
mov
push
jle
jne,pt
adc
xor
jmp
aaa
xchg
adc
add
jno
sbb
repnz
and
test
xchg
pop
addr16
or
in
push
in
inc
mov
pop
mov
loopne
push
inc
lahf
add
push
xor
or
lock
mov
mov
xchg
or
enter
and
clc
lock
mov
lea
filds
sub
add
adc
cmp
and
xchg
leave
add
cmp
adc
jae
subb
and
insl
pop
icebp
aam
or
or
sbb
dec
daa
rolb
fs
jmp
sbb
inc
in
sbbb
es
or
inc
lea
pushf
sub
or
xor
inc
pushf
and
in
loopne
push
sub
adc
sub
movsl
imul
inc
inc
sbb
cld
push
pop
mov
cmp
movsl
bound
cmp
andl
in
cmpsb
mov
mov
faddp
popf
xor
sub
test
add
es
sarb
subb
add
outsl
test
add
pushf
or
stc
das
enter
jl
sbb
fsubs
js
or
jbe
sub
lret
dec
and
pop
cmp
add
loope
js
test
inc
mov
inc
aas
out
cmpsb
sti
jo
test
jp
add
inc
add
and
roll
inc
fsubl
push
jmp
push
adc
inc
sbb
mov
popf
ret
scas
xor
cmp
cltd
and
add
popa
leave
push
jae
dec
adc
ja
arpl
dec
aad
push
xchg
cld
lcall
retw
test
push
dec
dec
add
fildll
popa
inc
xchg
insb
xor
pop
inc
adc
ret
add
ret
popa
cmp
jne
sub
cmp
clc
in
add
sub
adc
xchg
cmpsb
adc
inc
call
sbb
rorb
rorb
in
push
pusha
inc
int3
scas
inc
pop
lock
pop
movsb
push
rcll
jmp
jnp
jo
shll
popa
test
dec
out
cmp
pop
lret
cmp
inc
fldcw
jecxz
and
push
test
push
or
inc
sbb
movsb
popa
and
xchg
sbb
push
bound
sub
cmp
ss
cmpb
mov
mov
sub
push
push
cmp
aad
or
adc
arpl
xchg
dec
das
push
fiaddl
pop
or
add
jo
das
add
mov
imul
add
jae
push
stos
dec
dec
push
das
adc
or
add
clc
sbb
adc
fcoms
popf
push
inc
pop
or
pusha
testl
or
jge
mov
add
inc
popa
iret
popf
lahf
xchg
lea
push
outsl
rol
sbbl
xchg
or
outsl
pusha
pop
repnz
dec
pop
sbb
cltd
shlb
icebp
push
cmp
into
xchg
outsl
sbb
or
sbb
push
pop
mov
sbb
imul
fs
jecxz
or
or
inc
xchg
add
add
ds
movb
enter
or
add
and
cmp
mov
cmc
mov
mov
loop
sahf
xchg
adc
push
jb
and
hlt
rorb
push
dec
sbb
pop
sbb
in
daa
pushf
nop
xchg
mov
and
add
lea
ret
in
sbb
or
stos
pop
aad
clc
jnp
push
sub
lods
gs
cmp
push
xchg
outsb
das
sbb
jmp
mov
mov
shrl
inc
push
xor
lret
adc
dec
pusha
out
divl
pop
push
dec
repnz
sub
xor
testl
fisubs
add
inc
or
push
dec
jae
call
daa
push
lods
sub
in
pop
or
scas
out
mov
repz
imul
in
pop
push
int3
sbb
loope
fwait
jmp
pop
sub
xorl
sbb
sub
mov
stos
sahf
and
outsb
roll
xor
test
outsl
inc
lock
mov
ja
in
add
fs
mov
mov
sbb
mov
adc
adc
or
xchg
and
xchg
push
jo
sbb
push
adc
lret
adc
sarb
mov
push
jl
xor
flds
jge
fmull
mov
push
pop
jecxz
jl
insb
lret
nop
add
ja
push
add
push
fldt
or
inc
dec
mov
sub
add
dec
inc
inc
and
add
mov
jo
push
test
inc
inc
clc
cmc
rcrb
cbtw
push
stos
jle
icebp
push
pushf
xchg
jo
aas
out
jo
ljmp
out
lods
out
mov
and
data16
add
dec
fs
jmp
imul
inc
ss
xchg
pusha
pusha
js
fwait
cmp
ja
inc
sub
or
daa
jns
dec
and
stos
jno
mov
inc
add
in
test
jb
jo
lcall
inc
mov
jmp
add
sub
lods
dec
jne
jp
lds
sub
mov
mov
insl
mov
pop
pusha
sub
hlt
in
cmpsl
push
pop
push
lahf
push
pop
jecxz
adcl
pop
imul
lahf
call
lock
mov
adc
fcomps
sahf
inc
mov
sarb
xor
inc
inc
dec
dec
jbe
rolb
mov
test
sub
adc
out
push
add
jne
pop
loope,pn
dec
jmp
adc
andl
sbb
aas
or
dec
addb
push
inc
mov
and
outsl
jmp
adc
out
and
pusha
stos
ss
push
pop
adc
add
xor
sahf
mov
icebp
mov
xchg
push
mov
rcr
jae
push
xor
clc
lock
push
imul
sti
push
fldenv
pop
and
pop
js
pop
pop
outsb
xchg
cmp
mov
in
xchg
imul
jb
jp
pop
or
push
push
pop
scas
lods
adc
mov
push
and
and
fld
xchg
out
subb
xchg
minps
sbb
das
insb
push
push
dec
jne
pop
pusha
and
ret
nop
ss
xchg
pusha
call
rorl
cmpsb
dec
or
loop
test
push
or
push
dec
mov
addr16
lods
and
sbb
and
test
pop
nop
pop
enter
jo
xor
aaa
mov
inc
inc
mov
inc
les
leave
lret
xor
fmul
inc
enter
mov
mov
jecxz
ja
cld
je
popa
xor
in
mov
fs
in
arpl
aaa
sub
adc
or
jecxz
mov
leave
jno
inc
mov
clc
cmc
xchg
cmp
jne
lock
clc
ret
or
add
rolb
fistpl
insb
sbb
stos
add
clc
push
std
mov
xlat
scas
push
mov
push
pusha
adc
add
rcll
mov
mov
jge
jle
jl
dec
jnp
push
xor
lock
ret
fnsave
inc
ss
es
push
mov
mov
and
fdivs
icebp
push
inc
mov
loope
hlt
add
push
and
rclb
xor
int
addr16
pop
push
push
mov
ficoml
js
test
pop
xor
out
cmp
aad
and
test
aas
aad
int3
pop
roll
mov
adc
jl
sub
cs
repz
jmp
adc
mov
xor
or
cmp
pop
and
popa
sub
sub
mov
mov
mov
fcomi
sbb
pop
xchg
and
sbb
pop
jmp
lret
inc
aaa
adc
popa
stos
lods
inc
pop
das
dec
das
push
mov
xchg
stos
loope
pop
xchg
or
bound
xchg
push
push
pop
ret
pushl
pop
je
jbe
lret
and
push
loopne
ret
push
pop
jmp
adc
iret
jp
mov
inc
push
mov
or
scas
popa
add
and
push
push
xor
rcrl
or
nop
mov
pop
out
mov
and
adc
pusha
pop
inc
lea
out
testb
pop
cmp
jl
or
dec
push
jns
addr16
xor
jmp
push
ss
xchg
or
xor
adc
lret
mov
in
jno
jge
add
xorb
and
insl
mov
add
sub
inc
add
adc
decl
jnp
sub
test
or
xchg
stc
adc
test
xor
insl
ss
dec
in
sar
jle
imul
mov
aas
xor
mov
dec
xchg
mov
cmpsb
jge
push
or
push
push
jae
pop
push
or
adc
cmp
mov
imul
lock
cmpsb
pusha
push
dec
inc
outsb
push
rolb
popf
hlt
icebp
insb
bound
sbb
adc
test
iret
je
jne
ret
mov
dec
cmp
push
popa
cmp
mov
mov
sbb
mov
push
sti
jmp
incl
push
adc
xor
popa
js
pop
adc
lods
out
or
bound
xlat
subb
xor
and
xchg
fs
inc
push
xchg
ss
mov
mov
mov
push
test
xchg
cmp
inc
add
int
and
aas
sbb
imul
test
ja
adc
pushf
clc
movswl
cmc
mov
jne
out
pop
inc
clc
inc
xor
push
xor
add
push
inc
sti
cld
push
cltd
cmp
enter
cmpb
loopne
sbb
mov
mov
loopne
cs
push
stc
loopne
inc
loopne
inc
inc
inc
mov
call
inc
dec
ret
push
jmp
or
add
sbb
cmp
jmp
add
insb
or
mov
pop
jo
jge
je
rolb
adc
xor
add
mov
and
mov
or
cmp
sub
add
pop
sub
jg
adc
pop
or
inc
mov
mov
sub
adc
dec
and
mov
out
jnp
les
xor
fs
push
push
or
ret
fisttpll
pop
in
push
cmp
inc
mov
sub
test
inc
adc
push
rcll
push
dec
adc
push
and
mov
pop
jge
hlt
cmp
lcall
movsb
inc
add
or
xchg
mov
sbb
push
jns
inc
popa
inc
push
mov
je
jmp
popa
faddl
cmp
pusha
cmp
clc
pusha
cs
int3
push
inc
in
sub
mov
movsb
dec
jmp
sbb
jb
mov
sub
adc
mov
inc
enter
inc
fs
repnz
add
mov
mov
fcompl
mov
cmp
aam
int3
out
in
sahf
sbb
push
pop
andb
jns
sarb
and
insb
push
mov
jo
in
sub
je
js
test
loopne
jb
xchg
cmp
adc
mov
inc
jecxz
dec
cmp
sbb
sbb
xchg
and
push
fdiv
incl
leave
dec
dec
inc
add
insl
faddl
jns
push
inc
gs
into
ss
icebp
pop
push
gs
subb
cld
daa
inc
lahf
and
jae
sub
cmp
insl
jo
mov
jns
das
imul
das
ss
add
jae
pop
mov
sbb
dec
pop
js
fidivl
adc
sbb
push
inc
push
popf
xchg
add
adc
inc
add
mov
adcb
push
int
inc
lods
jae
mov
rcrl
mov
insb
dec
push
popf
mov
test
push
sub
ret
mov
rcrl
orb
sub
ret
jmp
push
adc
and
jbe
imul
ret
mov
js
add
jo
cmp
je
loopne
popf
mov
lea
pop
sbb
mov
test
mov
sub
mov
sub
xor
and
test
inc
push
cmp
arpl
adc
rolb
movsl
lea
lea
leave
sarb
push
mov
inc
mov
and
or
dec
js
sbb
push
icebp
inc
idiv
loopne
enter
mov
adc
inc
and
or
loope
outsl
sub
xchg
cmpsl
fsubrl
lods
mov
jno
lock
jg
xor
cmp
adc
enter
xchg
xor
nop
fdivp
iret
xor
mov
nop
mov
add
inc
inc
ljmp
jl
and
insb
loope
test
or
dec
cmp
addr16
cwtl
pusha
add
sub
pop
pop
daa
adc
mov
das
aaa
ja
outsb
mov
or
pop
dec
pop
cs
imul
xchg
adc
cld
cmp
jae
mov
or
in
push
mov
fistl
pop
push
xchg
dec
xchg
imul
pop
mov
pop
adc
xchg
add
loop
fsubs
daa
fists
cltd
inc
pop
pushf
mov
pushf
les
fdivrs
xor
js
pop
and
jo
inc
pusha
pop
mov
enter
xchg
xchg
mov
test
enter
jmp
pop
xor
clc
out
adc
sarb
sahf
add
fdivp
push
adc
jno
fiaddl
xor
hlt
xchg
rorl
cmpsb
ret
sahf
or
sar
adc
mov
or
add
pop
cmp
and
mov
mov
adc
dec
push
bound
and
push
push
bswap
mov
inc
mov
sbb
sbb
push
add
push
imul
insb
mov
imul
cmp
mov
lods
aas
pop
xchg
popa
pushf
test
inc
sbb
add
xor
inc
test
int3
lea
inc
or
xor
aad
lock
sub
movl
adc
jae
dec
repnz
jle
cpuid
into
mov
mov
and
xchg
inc
dec
mov
vmread
loopne
out
stc
add
out
lods
aam
or
ret
push
mov
and
movups
add
je
mov
clc
cmpl
and
out
push
jo
cwtl
lods
shl
sahf
out
enter
sahf
out
sahf
fcomp
loopne
call
jge
push
cmp
pop
in
jb
ss
jg
test
pop
sub
mov
xor
cli
ds
aaa
popa
cwtl
out
and
sti
push
movb
ja
add
sbb
xchg
xor
pop
addl
jl
and
inc
pop
sub
aas
dec
decb
pop
mov
pop
mov
add
mov
lret
jmp
or
add
pop
jno
nop
mov
pop
lcall
pop
cmpl
fdivl
sbb
movsl
pusha
movsb
jnp
addb
inc
add
repz
cs
sti
xor
add
lret
sub
cmp
adc
fs
das
dec
popa
enter
scas
lock
adc
jns
sbb
adc
sub
or
xor
cltd
inc
sub
mov
xor
bound
pop
bound
inc
test
inc
roll
ja
and
insb
sub
jmp
xor
aas
inc
lahf
adc
sbb
sar
and
inc
mov
xor
push
add
push
ja
outsl
adc
push
adc
leave
xor
mov
adc
rorl
lock
or
cmpsl
cmp
es
and
sbb
fisubs
and
dec
jecxz
jge
push
cmp
jle
pop
ds
cmp
adc
mov
add
pop
movsl
mov
int3
pop
xchg
aas
cmp
adcl
pop
loopne
pop
add
jp
xchg
mov
inc
mov
outsb
or
adc
loope
mov
call
imul
mov
jae
cmp
mov
mov
addl
inc
push
or
dec
je
xchg
pop
sti
out
addr16
stc
push
and
sbb
aas
cwtl
lods
ret
inc
sub
cmp
jae
cmpl
fimull
inc
push
je
sbb
cmp
add
xchg
or
pop
inc
sbb
xor
push
push
fadd
pusha
lds
daa
mov
adc
movb
add
add
stos
movsb
sub
add
push
or
aas
add
push
sub
cwtl
add
mov
nop
add
and
and
sbb
dec
xorl
ss
and
imul
mov
push
push
push
icebp
mov
and
dec
mov
test
xchg
sbb
mov
es
mov
inc
dec
dec
shll
dec
dec
cmp
test
cmp
sub
shrl
xchg
nop
mov
pop
xchg
add
fucom
jle
jo
push
dec
scas
fmull
xchg
push
sbb
cmpsl
mov
adc
xor
inc
xor
push
repnz
ret
in
xchg
cmp
sbb
popf
push
sbb
add
popa
leave
add
mov
pushf
jns
sbb
pop
dec
jne
test
and
jle
out
dec
testl
clc
movsl
inc
xchg
sub
jle
cld
je
lds
roll
test
mov
js
popa
rol
sarl
lahf
xchg
inc
push
pop
inc
shrl
je
cmp
mov
movsl
fldt
sub
dec
cmp
mov
push
inc
mov
push
add
xchg
mov
ljmp
cmp
lods
xor
mov
out
adc
aad
pusha
add
stos
cmp
ror
js
int
sbb
cmp
je
jns
inc
sbb
pop
jb
in
push
cmpl
subb
cmp
je
jne
das
enter
mov
dec
or
mov
push
enter
inc
sub
mov
mov
mov
push
cmp
add
lds
mov
frstor
mov
andl
or
jecxz
inc
jge
icebp
test
and
dec
mov
out
js
dec
add
mov
dec
jp
aaa
mov
sbb
pop
movsl
mov
jmp
dec
imul
xchg
jg
sbb
or
add
mov
pop
inc
pop
or
push
mov
pop
loop
invd
push
js
pop
daa
lock
jb
mov
or
inc
out
out
movsb
jae
scas
mov
shll
push
cmpsb
xlat
sti
xor
and
movl
enter
scas
mov
test
call
inc
sbb
mov
jmp
and
cwtl
inc
xchg
sub
xor
xlat
sub
and
jnp
pop
jno
xorb
xor
jo
hlt
stos
xchg
scas
sbb
push
pop
mov
in
pop
call
add
pushf
dec
enter
lds
mull
lcall
fsubrl
adc
xor
movsb
inc
fists
or
scas
cwtl
mov
push
outsb
mov
movsb
shrb
push
adc
and
sbb
push
aaa
xchg
xor
in
pop
xor
mov
subl
dec
mov
inc
inc
cli
fsts
mov
push
out
adc
test
push
fidivrs
int
push
movsl
and
inc
xor
or
adc
and
mov
inc
dec
or
ja
adc
repnz
out
mov
das
lea
push
push
dec
std
dec
sbb
daa
xchg
inc
sub
test
movb
push
enter
push
xor
jge
cld
mov
inc
xor
movl
pop
into
inc
add
sbb
jne
dec
sub
xor
add
mov
pushf
jmp
pusha
andb
data16
sub
pop
mov
dec
ljmp
push
xchg
xchg
pusha
loope
mov
inc
dec
or
xor
lret
pop
and
ret
dec
cmp
cli
pop
sub
lahf
mov
into
adc
dec
mov
test
mov
pop
adc
inc
mov
sahf
jno
int3
xor
das
cltd
adc
out
fdivrs
push
lcall
adc
xor
xor
adc
movsl
iret
call
xor
xchg
popf
movsb
loope
cmp
scas
jl
test
dec
adc
movsl
cld
pop
add
loopne
add
icebp
or
push
push
sub
push
fs
add
mov
cmp
jg
addl
aas
mov
mov
push
push
jp
lods
outsl
push
gs
pop
rcll
xchg
call
and
fnstcw
push
sbb
xor
stos
sahf
stos
adc
or
jae
inc
mov
mov
cmp
sbb
dec
ss
jbe
add
xor
sbbl
sub
push
dec
lahf
inc
pushf
arpl
cmp
nop
sub
iret
xor
push
outsl
inc
shufps
inc
cmp
and
or
pop
mov
jbe
js
adc
push
or
sbb
adc
or
mov
call
cmp
jecxz
jae
test
cmp
pusha
je
sbb
inc
mov
out
inc
jg
dec
sub
dec
cmp
nop
dec
pop
xchg
imul
xor
fidivs
xchg
daa
or
inc
ret
pusha
sub
rcrl
hlt
pop
inc
jle
pop
cmpl
cs
lods
rclb
call
movsl
cmp
add
xchg
push
pop
mov
fwait
xchg
addb
add
dec
or
and
mov
xor
adc
aaa
push
add
andb
aaa
inc
xorb
adc
mov
push
mov
test
cmp
lods
loopne
push
sbb
ret
push
cmp
inc
loope
outsb
inc
pop
loop
loope
lret
rolb
push
sarb
and
adc
xchg
addb
pusha
sarl
inc
add
loop
mov
pop
cs
into
repz
data16
loopne
or
and
lock
xchg
clc
xchg
sbb
in
cmp
pop
adc
push
in
insb
movsb
fwait
inc
testb
push
xchg
and
cmp
ds
int
imul
stos
ja
test
mov
enter
inc
xor
jno
mov
pop
mov
lea
jo
in
mov
ss
dec
cmpsb
in
fwait
push
sbbl
inc
fistps
call
les
and
scas
stos
lods
mov
icebp
cmpl
hlt
dec
jecxz
xor
pop
imul
dec
mov
cli
ror
sti
dec
cmp
cmc
xchg
fsubrs
or
cmp
jne
add
testb
inc
or
mov
cmc
dec
test
ret
cmp
test
daa
jmp
lea
mov
sbb
enter
and
dec
loope
call
subb
inc
aas
and
sarl
or
mov
adc
shll
cmp
out
cmpsb
insb
sbb
orb
jl
pop
inc
stos
sbb
sub
sbb
roll
push
push
je
mov
fsubl
push
ja
lret
mov
fcom
andl
mov
and
out
gs
inc
loopne
aas
test
lcall
inc
jmp
ljmp
mov
mov
dec
dec
insb
add
cmpsl
add
ss
mov
cmpsl
inc
dec
xor
dec
adc
roll
mov
adc
dec
mov
mov
pushf
aam
fistl
popa
mov
daa
mov
or
scas
adc
incb
fdivs
cwtl
popa
pop
insl
cwtl
jg
test
je
add
imul
cmp
in
sub
hlt
pop
hlt
mov
pop
js
scas
dec
clc
es
ds
mov
inc
subl
fiadds
repnz
inc
sbb
add
pushf
adc
jecxz
lahf
rclb
add
pushf
mov
mov
adc
push
inc
jle
push
test
xchg
jg
fstl
rorb
sahf
insl
mov
xlat
push
add
jno
nop
test
les
cmpsl
adc
popf
or
pusha
adc
xchg
ss
stos
jge
lock
adc
adc
ret
adc
in
sbb
aaa
cmp
in
imul
mov
rorb
nop
orb
xchg
dec
xor
or
fsubrl
push
sub
xor
mov
cs
mov
add
dec
inc
imul
scas
adc
xchg
push
ret
xor
movups
lea
pop
xor
and
in
xchg
ds
js
in
arpl
dec
in
push
mov
inc
push
loopne
push
das
dec
scas
push
aas
xchg
stos
cmp
jo
xor
pop
mov
pushf
pusha
mov
leave
or
cmpsb
xchg
xlat
in
fsubr
or
push
les
push
sub
rolb
jg
sub
push
mov
enter
or
lods
adc
add
test
sub
adc
outsb
lods
rclb
add
xchg
fdivrl
xchg
adc
sub
int
xor
mov
dec
jne
cmpsb
add
dec
pop
pop
xor
cmp
es
clc
test
or
xchg
cs
fcmovnb
or
or
mov
push
lods
fists
jecxz
cmp
shll
imul
das
aas
xor
and
sub
out
loopne
int3
mov
mov
and
repz
or
xor
jmp
xor
pop
cmpsl
cmp
jne
sahf
dec
int3
jl
dec
in
fwait
aam
ss
or
cltd
inc
ja
rolb
mov
mov
subl
stos
jb
push
and
push
push
jns
dec
and
dec
fdiv
sbb
scas
dec
dec
test
inc
push
cld
js
test
push
mov
dec
push
mov
insb
test
xlat
mov
push
push
pop
sub
xchg
dec
add
sbb
adc
pop
aas
pop
or
repnz
ret
push
add
incl
mov
cli
dec
pop
cmpb
movb
mov
gs
add
xchg
jmp
add
lcall
mov
xchg
sbb
or
cmp
outsb
push
orb
ljmp
je
stos
nop
mov
and
imul
mov
fcomip
fsts
or
popa
jb
add
popa
jae
jle
adc
xchg
jp
stos
add
mov
mov
pop
push
jl
nop
cli
bound
insb
add
test
lods
or
scas
adc
popa
inc
adc
push
adc
inc
mov
cs
mov
repz
mov
xor
js
lcall
fs
arpl
mov
adc
fsub
stos
icebp
jo
lock
shrl
xchg
inc
add
aam
pop
fcmovb
lds
and
pusha
mov
adc
mov
lcall
ret
pop
or
fstps
dec
int
push
or
push
notl
lret
pop
pop
mov
or
lret
es
ficomps
mov
add
ds
mov
inc
mov
inc
insb
enter
fiadds
push
dec
push
call
pop
xchg
sbb
ds
repz
insb
mov
bswap
call
push
dec
loop,pn
cmp
pop
rcr
sub
lock
cmp
xor
mov
adc
icebp
inc
add
inc
insb
int
add
repnz
mov
inc
cwtl
push
call
cwtl
in
bound
ljmp
in
xor
pop
icebp
dec
js
das
sbb
cmp
cmp
jb
jmp
je
push
lods
out
lcall
sbb
xor
push
xor
loopne
enter
inc
cmpsl
leave
add
adc
test
imul
pop
shl
pop
cmp
int3
stc
mov
push
inc
jl
pop
dec
dec
imul
dec
cmp
sti
test
add
and
ret
outsl
adcl
fbstp
adc
cmp
scas
dec
cwtl
pushf
out
dec
out
sbb
add
sbb
out
dec
lcall
call
into
add
lea
cmp
repnz
ret
or
jne
cmpsl
add
xchg
cmp
and
das
or
cmp
shl
jo
fidivrs
cmp
or
inc
aas
xor
cmpsb
jg
xorb
pop
or
popa
push
dec
pop
mov
loop
push
call
pop
loopne
adc
jecxz
cltd
or
test
jb
ljmp
sbb
jl
popa
cmp
movnti
popa
fs
adc
cwtl
cmp
insl
mov
dec
adc
movl
mov
adc
subb
inc
add
or
xchg
nop
adc
shll
push
add
jns
in
andb
in
mov
mov
mov
mov
daa
push
push
subb
jns
pop
bound
pop
repnz
enter
je
inc
add
add
adc
inc
mov
jmp
call
jl
lret
pop
test
dec
xchg
add
roll
adc
loope
add
xor
or
push
mov
filds
lock
or
add
pop
cmp
out
mov
shlb
shr
or
nop
or
dec
imul
pop
pop
and
jl
or
idivl
push
dec
bnd
add
stos
add
add
addr16
lds
andb
jge
xor
or
xor
push
mov
adc
aam
xchg
pop
es
jnp,pn
into
cwtl
add
jns
mov
into
int3
enter
or
or
sub
dec
rcl
or
nop
mov
shr
call
cmp
jno
adc
jo
aad
popa
jo
xchg
fchs
inc
dec
repnz
mov
push
jb
arpl
popf
int
scas
fdivl
or
xchg
add
and
divl
fdivs
add
mov
sub
popa
test
outsb
outsl
jnp
frstor
popa
sbb
and
push
sbb
int
mov
push
push
daa
in
fwait
add
mov
pop
xor
and
inc
jne
inc
scas
fcoms
inc
push
sub
ja
jle
adc
or
adcl
push
loope
leave
adc
les
xchg
mov
xor
popa
ljmp
cwtl
push
pop
and
push
hlt
loopne
mov
cwtl
push
test
ret
inc
test
mov
mov
or
nop
xlat
sub
pushf
xor
sbb
test
lods
jo
jo
xchg
paddsb
mov
xchg
jo
sbb
and
jl
imul
andl
cmp
cmc
mov
and
xor
xor
xor
pop
push
les
test
dec
dec
dec
dec
dec
dec
dec
dec
sub
inc
enter
push
push
imul
and
xor
adc
nop
xor
xor
push
cmp
cltd
test
js
inc
jne
dec
push
sbb
into
jmp
sbb
xor
adc
xor
lret
jae
inc
cli
and
add
add
mov
or
xor
dec
push
outsl
leave
lods
lcall
mov
fsts
pop
rolb
xchg
pop
push
xor
pop
add
idiv
pop
cmp
sbb
add
stc
and
pop
cwtl
rcr
sub
sub
clc
dec
mov
or
je
push
test
sub
jg
cmp
in
addr16
mov
push
inc
jge
shrl
dec
jae
and
xor
and
mov
imul
mov
xor
xchg
pop
mov
adc
xchg
mov
mov
push
xchg
sbb
ret
add
xchg
or
imul
jmp
loope
mov
ret
aaa
nop
jmp
enter
inc
inc
inc
dec
pusha
lret
and
jo
dec
call
pop
dec
jecxz
mov
or
call
jns
dec
mov
add
les
add
sbb
mov
pop
insl
aas
mov
jmp
xchg
xor
xchg
and
hlt
pop
sub
test
inc
mov
push
xchg
lock
test
adc
lods
iret
fiadds
bswap
or
dec
ljmp
mov
sub
jl
xchg
jl
aas
clc
xchg
jmp
addr16
in
loopne
faddl
mov
pop
or
pop
push
fdivrs
xor
jmp
xor
or
push
pop
iret
popa
push
xor
pop
sub
lahf
loopne
xchg
jmp
mov
mov
sub
dec
xchg
jmp
inc
sti
push
add
push
enter
outsb
ret
inc
cli
pop
int3
mov
pop
mov
push
mov
std
test
mov
and
imul
pop
arpl
xor
mov
mov
push
push
mov
lock
inc
pushl
sbb
xor
fiadds
mov
pusha
je
mov
add
test
sti
mov
popa
inc
cmp
jg
mov
ret
add
mov
test
dec
sbb
cltd
insl
xorb
clc
icebp
mov
pop
cwtl
ljmp
out
mov
add
xchg
push
jle
arpl
mov
push
es
sub
push
push
or
sub
lock
iret
leave
shll
jo
imul
mov
jmp
jmp
xor
inc
cmp
push
xor
pop
xchg
je
out
jbe
aaa
in
xlat
adc
fsts
out
cmovle
dec
adc
dec
jecxz
testl
cmp
imul
sub
and
mov
add
add
adc
pop
insb
sbb
inc
imul
mov
push
dec
push
nop
cmp
je
xchg
pusha
aaa
mov
add
clc
pop
fisubl
cmpb
xor
nop
fnstenv
sbb
mov
or
movzbl
cmp
filds
addb
push
addr16
inc
sub
imul
dec
inc
dec
ja
cs
sub
mov
iret
xchg
es
cltd
js
add
pop
xchg
mov
xlat
test
and
fwait
aas
fcomps
sub
movsb
je
wrmsr
add
mov
push
das
or
inc
fwait
or
cmp
add
inc
aas
cmp
sub
setb
add
mov
inc
xchg
add
movb
mov
mov
push
cmp
add
aas
andb
pop
pusha
add
inc
mov
jmp
adc
js
inc
lret
shlb
push
xorl
add
ret
push
or
fdivrs
jmp
jb
pop
imul
mov
dec
jg
cmpl
adc
and
in
sbb
cltd
inc
shrd
nop
push
add
sbb
fimuls
mov
and
cmpsl
add
xchg
add
add
dec
add
rolb
leave
push
ficomps
ret
and
inc
ror
dec
jnp
outsl
ret
call
dec
xor
imul
mov
cmp
pusha
dec
jae
xor
fs
push
fmul
adc
testl
test
subb
push
dec
sarb
addb
or
add
or
pusha
aam
cmpb
sbb
xlat
and
call
int
lcall
jo
sti
shlb
dec
cld
adc
flds
inc
adc
lods
or
push
cmp
mov
or
icebp
or
je
mov
push
shrb
dec
idivl
out
ret
mov
xor
pop
cmp
adc
xchg
roll
xlat
sub
dec
cmpsb
loope
jmp
xchg
push
and
test
push
test
in
cmp
dec
insb
sti
cmp
jo
sub
push
inc
fdivl
adc
pop
mov
mov
push
or
push
in
jmp
inc
lret
adcl
xor
inc
lcall
pop
xlat
xchg
inc
or
sub
inc
cld
dec
sti
psrld
add
adc
enter
pop
jo
push
iret
sub
leave
mov
push
mov
adc
pop
adc
adc
mov
mov
mov
popa
mov
and
and
sub
mov
lock
sbb
pop
nop
inc
inc
or
inc
sub
pop
and
and
lods
testb
sub
shlb
push
aas
in
xchg
and
or
sbb
xchg
xorb
push
jecxz
inc
and
jnp
push
adc
stos
push
je
jp
mov
testb
icebp
sahf
or
adc
lock
xchg
out
add
xchg
negb
pop
add
adc
scas
clc
or
cmp
decb
inc
jo
hlt
rcrb
cmp
jp
int3
push
or
rcrb
and
pop
aaa
cmp
xor
jns
pop
cmp
mov
pop
dec
pop
flds
icebp
mov
lahf
mov
pop
inc
cmp
push
aad
mov
and
jae
mov
fldl
jl
xor
sbb
push
pop
inc
loope
rorb
inc
movsb
dec
xor
mov
mov
or
mov
adc
push
push
dec
or
ret
data16
inc
rcll
xchg
inc
sub
push
cltd
clc
xor
sbb
xchg
and
xor
mov
in
test
pop
xor
dec
rcll
clc
and
loope,pn
rorb
xor
mov
cmp
adc
add
mov
and
add
mov
movl
xor
mov
lahf
hlt
shlb
mov
jo
xor
xchg
lretw
outsb
call
ret
stos
addl
add
sub
pop
test
xor
xor
shll
sbb
pop
aad
jle
jg
insl
outsl
jmp
js
add
je
mov
pop
inc
cmp
test
orb
jecxz
jo
or
xor
jns
cmp
mov
subl
mov
sbb
shrb
xchg
adc
cwtl
out
sub
or
cmpsl
xor
add
or
pop
orb
andps
inc
mov
icebp
scas
xchg
mov
mov
dec
js
movsl
rcll
xor
inc
idivb
fisubl
jl
imulb
je
inc
or
bound
insb
and
pop
xor
push
ss
popa
dec
xlat
or
adc
loopne
stos
inc
cmpl
jmp
iret
dec
cmp
int3
xchg
mov
pop
adc
test
cmc
mov
and
dec
pop
notl
stc
lock
mov
enter
fiaddl
add
std
xchg
jo
lock
out
and
movl
movsl
mov
data16
sbb
shlb
xchg
push
les
push
sbb
ss
shll
mov
loope
and
and
dec
pusha
inc
xchg
outsb
add
addr16
hlt
mov
mov
add
sub
jnp
lock
imul
inc
xor
sub
sbb
hlt
xor
xchg
sub
jo
shll
testb
push
sti
popa
test
sub
or
jo
mov
jns
imul
addr16
insl
test
dec
xor
xchg
jmp
and
nopl
dec
adc
push
insb
clc
push
inc
lock
inc
cwtl
pop
add
leave
inc
popa
imul
jl
mov
pop
push
push
inc
adc
idivb
imul
imul
xlat
mov
inc
mov
fs
pop
mov
jge
xchg
push
pop
cwtl
push
mov
sbb
jb
sbb
repnz
ss
or
push
jno
sub
xchg
dec
incb
push
add
inc
push
sub
int3
push
enter
sub
roll
pop
add
movsb
xor
and
pop
adc
test
pop
and
lea
xor
xor
mov
cmc
sub
add
andl
cmp
or
sbb
mov
xchg
iret
hlt
cltd
fmuls
rcl
sbb
pop
into
hlt
sub
inc
add
test
lcall
dec
outsl
mov
or
pop
jns
stos
sbb
xor
cs
sbb
xor
leave
lock
rorl
add
movsb
loopne
add
jp
xchg
pop
fildll
push
and
nop
push
in
or
mov
movsl
or
fsubrs
dec
ja
addb
clc
loopne
push
xor
or
xchg
or
loopne
ret
xchg
ja
outsb
aaa
fistps
leave
addl
add
loopne
ja
dec
jmp
push
sbb
add
add
test
pushf
pop
lock
or
ret
xchg
call
dec
iret
push
inc
les
enter
sub
notl
lcall
sbb
loop
or
adc
adc
inc
js
push
sbb
mov
andb
addl
cwtl
jbe
or
add
sub
add
sub
enter
jge
fs
test
in
push
sbbb
push
lock
push
xor
xor
add
pop
in
add
add
je
push
shll
ret
cmp
adc
dec
call
outsb
pop
lods
inc
sbb
push
and
test
push
movl
ficompl
mov
mov
setge
enter
pop
les
xor
clc
loopne
mov
pushf
push
or
and
insb
stos
inc
clc
mov
rclb
mov
enter
clc
sub
inc
movsb
nop
lock
dec
lock
and
repnz
fbld
loopne
es
cmp
movsl
cmp
add
clc
arpl
push
movsl
sub
pop
xor
insl
adc
push
inc
pop
in
and
sbb
dec
sub
add
call
adc
in
add
leave
test
sbb
mov
or
out
loopne
sbb
add
cmp
inc
mov
add
inc
pusha
add
data16
pop
cmp
popf
ficomps
inc
movb
jecxz
dec
dec
int
rcl
sbb
add
xlat
and
sub
cmpsl
dec
shlb
mov
jae
jl
push
push
cmp
jge
sub
shl
je,pt
fs
push
shrl
adc
lcall
aaa
aas
mov
pop
xchg
inc
push
dec
fsubrs
mov
je
loope
sub
in
dec
insl
fisubl
push
sbbl
mov
sbb
mov
mov
add
lret
pop
pusha
mov
jp
loope
inc
stos
repz
pop
jl
or
adc
call
aam
movsb
dec
out
scas
movsl
mov
test
push
dec
lea
je
dec
or
sbb
and
push
nop
fcmovbe
sarb
dec
add
mov
ret
sub
or
mov
push
add
repnz
mov
das
nop
xor
mov
dec
pop
mov
cltd
add
mov
out
push
rcrl
sbb
mov
mov
incl
xchg
mov
sbb
call
xor
push
sub
shl
dec
movsl
sbb
aad
mov
aaa
dec
dec
ficomps
sbb
ljmp
mov
es
mov
mov
lcall
loope
lret
cwtl
popa
xor
mov
push
cmp
cld
ja
sbb
jae
add
jge
jle
push
xor
xchg
push
pop
adc
add
data16
add
dec
arpl
xchg
shlb
or
adc
cmc
mov
ds
incb
add
mov
jp
scas
clc
xchg
push
out
lods
and
and
ret
les
dec
inc
inc
cmp
cmpsb
dec
fstl
aam
or
pop
or
pop
xor
cmp
pop
insl
and
pop
outsl
cmp
jle
sub
mov
or
add
jb
addr16
jg
pop
jp
aas
pop
shrb
test
fnstenv
cmp
mov
inc
fadds
daa
inc
dec
adc
addb
and
and
test
push
mov
pop
pop
sarb
mov
mov
push
lods
add
cmpsl
cmp
lea
adc
pop
xor
inc
jbe
sbb
jo
pop
cmpsb
fsubrl
mov
add
addr16
cmpsl
out
aas
je
inc
adc
fmull
in
in
pop
and
jne
mov
push
jne
jno
pop
movl
cmp
mov
pop
xor
add
pop
test
adc
pop
into
pusha
lds
mov
mov
nop
dec
ds
inc
push
inc
inc
rcll
and
sbb
leave
outsb
xor
or
imul
sub
mov
lock
jbe
mov
push
pop
test
dec
pop
mov
arpl
ret
jge
imul
or
mov
inc
outsl
bound
rol
rorl
dec
cwtl
cmp
add
lret
and
cltd
lret
fs
pop
shll
out
inc
fcmovu
mov
xchg
es
lea
xchg
or
je
mov
scas
add
out
js
xchg
outsl
jmp
jge
outsb
pop
dec
imul
push
aas
jbe
and
into
aaa
mov
fsub
mov
popa
test
shll
outsl
popa
xor
sbb
inc
mov
aad
test
mov
or
mov
sbb
out
pop
sbb
push
push
mov
pop
xchg
push
pusha
pop
pushf
add
addr16
jge
or
or
imul
sahf
gs
jns
add
add
mov
xchg
xchg
outsb
jmp
jne
xor
fbld
movsl
fcoms
sub
lahf
and
scas
add
mov
add
xor
inc
dec
repz
inc
and
arpl
lock
cmpsl
and
add
movsl
mov
and
pop
sub
mov
lret
shrl
mov
insb
xor
dec
repnz
sbbb
popa
mov
ret
push
fsubs
es
enter
in
in
pop
push
ss
js
test
xchg
xorb
inc
pop
xorl
xchg
push
insb
cmp
pop
pop
and
inc
jmp
inc
mov
cli
sbb
mov
dec
ret
xchg
dec
inc
dec
or
fsubl
mov
cs
nop
inc
dec
mov
cltd
nop
fiadds
push
repnz
pop
lock
cmpsl
mov
xor
in
add
lods
dec
add
mov
loop
mov
jg
stos
das
lods
out
scas
out
cmpl
pop
clc
addb
jo
iret
lcall
fdivs
sbb
or
js
and
cmp
cmp
ja
push
fdivrl
fs
lret
push
cmp
fstps
mov
cmp
jnp
es
push
push
loop
popf
mov
xchg
sti
mov
imul
aas
pop
mov
push
les
jns
cmp
mov
fcomps
xor
test
insb
ja
lods
shll
push
pop
push
rcl
les
lea
pop
lea
aas
insb
mov
in
inc
xchg
jne
sar
jmp
mov
jle
push
push
data16
push
ds
mov
add
adc
inc
lods
pop
cmp
and
arpl
cmpsb
push
shlb
mov
incb
and
cs
mov
xor
in
mov
lcall
or
inc
or
xor
push
pop
push
inc
xchg
xor
adc
insb
xchg
iret
inc
sub
mov
mov
and
pusha
mov
scas
or
or
ffree
jmp
mov
loop
jmp
enter
push
in
mov
xlat
jl
inc
or
sbb
and
loop
ja
sbb
scas
rolb
adc
and
into
xor
gs
add
and
push
outsl
mov
mov
inc
ret
shlb
nop
test
or
push
ret
mov
sub
out
xorb
jecxz
pop
adc
in
fwait
cltd
bound
dec
xor
push
jnp
inc
adc
add
xor
les
mov
sar
call
js
mov
dec
or
jno
push
sub
outsl
adc
cwtl
lahf
inc
leave
mov
push
mov
mov
rcrb
and
inc
nop
loope
fisttpl
ret
dec
jne
jnp
pop
mov
or
inc
fdiv
mov
rorb
push
lock
inc
mov
inc
add
pushl
push
imull
or
cld
push
aas
stc
xchg
push
push
jmp
pushl
dec
push
lea
inc
add
and
xor
sub
push
mov
mov
add
sarl
lcall
les
in
inc
leave
dec
add
call
adc
inc
out
mov
cmp
jl
mov
sbb
push
call
or
fcmovnu
mov
sub
test
mov
fs
cltd
nop
mov
cltd
fimull
sub
enter
movsb
into
mov
cmp
stc
or
cmp
inc
mov
or
mov
ss
add
les
jns
in
pop
or
jne
dec
push
pop
outsb
je
pushf
dec
xor
push
outsl
push
sbb
aam
je
push
sbb
push
fldenv
shlb
or
out
or
push
pop
adc
int
xlat
xor
sarl
lea
movsl
cmp
data16
shlb
mov
mov
push
les
xor
mov
dec
xchg
adc
jne
and
js
push
inc
sbb
mov
jns
jbe
orb
dec
inc
aas
in
fisttpll
dec
add
mov
enter
lea
scas
in
jnp
inc
aaa
xor
cmp
or
adc
xchg
mov
pushf
cmp
adc
push
or
jle
jecxz
pop
xlat
orb
cmp
je
fsub
adc
lods
xorb
or
loopne
pop
push
call
sahf
insb
movsb
jns
pop
leave
adc
sbb
sbb
ret
clc
arpl
pusha
sbb
addr16
add
jp
cli
jge
push
insl
push
sub
aas
lea
mov
cmc
sbb
nop
mov
and
mov
inc
es
and
aad
mov
mov
popa
or
sbb
fsubrs
shl
sbb
ds
int3
cmpsl
ret
stos
fcmovnb
call
movsb
add
mov
test
pop
cmp
stos
dec
fdivs
sbb
lods
and
lods
adc
cli
xchg
inc
and
mov
adcb
adc
es
sbb
dec
ja
sti
jl
inc
test
mov
jmp
cmp
inc
rorb
push
pusha
into
mov
dec
ret
inc
sbbl
testl
or
inc
test
test
add
popa
adc
pop
jne
loope
in
mov
fistl
movsb
aad
mov
dec
enter
aaa
dec
and
mov
inc
jne
and
nop
idivb
mov
inc
cmp
pop
cmpl
insl
jl
adc
jmp
mov
or
adc
pop
push
cmp
add
xchg
sbb
mov
subl
add
xchg
fprem1
inc
xchg
mov
pop
int3
or
xor
add
mov
add
cld
fdivrs
add
adc
inc
cmp
clc
fmuls
add
test
mov
inc
inc
jae
sbb
push
sbb
into
dec
push
inc
xor
out
mov
dec
ret
inc
stc
xchg
jae
dec
daa
pop
sar
fdivrs
push
mov
or
xchg
cmp
push
dec
cmpl
push
cwtl
ret
add
mov
inc
fcoml
push
add
pusha
xchg
sub
mov
or
lock
and
or
sbb
add
in
cld
fildll
pop
push
push
out
sbb
inc
popf
jp
scas
push
push
dec
pop
std
add
and
rorb
push
pushl
sbb
sub
gs
add
push
or
call
out
add
and
aad
test
punpckhwd
xchg
call
fdivrl
add
js
int3
js
nop
insb
or
push
mov
mov
pop
pop
ret
or
mov
mov
cltd
push
hlt
rolb
or
sti
pop
sbb
addr16
cmp
in
fcoms
cld
or
sbb
or
into
aas
clc
mov
or
sub
pop
adc
test
or
or
out
push
xor
test
insb
inc
sbb
sub
jo
or
ret
movl
and
aaa
push
mov
xor
xor
test
sbb
loopne
add
jecxz
xchg
int
ja
in
into
xchg
cmp
rolb
fbld
ret
add
add
xchg
jbe
dec
xchg
fsubrs
jp
adc
movb
adc
push
cli
in
mov
loopne
adc
lods
popa
imul
add
jge
ljmp
xor
or
divl
cmp
add
xlat
cwtl
adc
inc
sbbb
call
mov
adc
pop
add
dec
loopne
or
push
add
push
and
mov
popa
lds
inc
or
add
add
or
pop
loop
xchg
data16
cli
add
add
push
fsubrs
inc
sub
push
and
push
mov
pop
push
add
pop
jecxz
mov
sbb
rcr
repz
jbe
inc
cmp
ret
dec
push
push
cltd
nop
cld
addr16
dec
xchg
add
repz
inc
addr16
mov
push
jno
xor
arpl
mov
push
cltd
push
push
loope
test
popa
pop
rcl
add
decb
pop
sbbb
or
mov
mov
cmovae
sub
inc
sub
ss
sahf
dec
cmp
and
sub
mov
push
ja
pop
fldcw
sbb
mov
test
jmp
inc
cmp
je
xor
dec
mov
lcall
dec
ret
ret
mov
lods
inc
dec
inc
cmp
addl
ss
jne
jp
aas
pop
lea
cld
mov
pusha
jno,pn
sbb
outsl
test
fxch
das
insb
jecxz
addr16
test
mov
inc
push
lahf
jo
ret
add
mov
add
and
push
lcall
loope
jle
pop
clc
jb
bswap
insl
ja,pt
mov
loopne
test
sbb
jecxz
push
sbb
adc
jo
add
ret
cmp
pop
push
mov
jl
jmp
sbb
sarb
dec
xchg
data16
add
xlat
add
push
sbb
in
mov
mov
sbb
xor
jecxz
or
inc
mov
xor
jbe
sbb
bound
push
mov
pop
adc
hlt
mov
mov
inc
or
xchg
iret
push
lock
and
adc
adc
cmpb
in
hlt
or
addr16
mov
std
or
ret
loopne
and
bound
dec
outsb
and
or
add
les
aaa
mov
pop
xchg
test
dec
aas
in
in
jae,pn
iret
dec
inc
jns
and
in
mov
ja
and
mov
nop
or
cs
push
outsl
and
xor
adc
je
ret
sbb
adc
sbb
mov
xchg
jno
jmp
xor
in
adc
cmp
leave
xchg
dec
fs
sbb
mov
das
sbb
mov
jns
cs
jnp
sub
inc
out
push
mov
sub
cmp
and
daa
mov
test
jge
or
dec
xchg
movsb
sub
and
clc
push
sbb
mov
jmp
adc
hlt
pop
pop
pop
cli
fs
lret
xor
jo
ret
fs
fwait
sti
mov
inc
lock
call
xlat
aam
mov
lock
fimuls
orl
cs
adc
and
dec
shrb
dec
push
mov
mov
cli
cmc
push
xor
gs
idivl
add
jmp
sbb
or
ss
out
int3
lods
mov
fidivrs
add
insl
addl
jl
adc
loopew
mov
decw
nop
or
mov
jno
and
fwait
jmp
sbb
add
xchg
test
xchg
mov
into
or
scas
sbb
adc
xchg
in
push
nop
push
in
aaa
movsl
fiaddl
xchg
mov
bound
push
push
ss
icebp
add
lcall
loope
clc
pushf
lods
addr16
push
xor
mov
cmpb
sti
mov
and
movb
pop
fmull
decl
sbb
mov
pop
inc
loopne
jb
or
int
push
movsl
js
cli
mov
insb
cmp
xor
inc
lock
hlt
add
mov
inc
inc
pop
mov
aaa
sbb
inc
test
push
insl
pusha
mov
push
pop
push
mov
ret
and
push
sbb
push
bound
mov
push
mov
add
push
adc
pop
and
cmp
ret
adc
mov
sbb
pop
js
jb
pop
imul
fcoms
adcl
cmc
push
mov
ja
out
push
add
in
add
mov
mov
rcrb
add
inc
loopne
adc
cwtl
push
mov
or
jmp
mov
jbe
inc
adc
dec
dec
push
or
mov
aaa
js
mov
arpl
cmp
adc
inc
push
jno
and
inc
push
pop
adc
or
xchg
xchg
insl
sbb
jns
cld
iret
call
pop
dec
inc
aas
cmp
sbb
or
add
test
ds
loop
repz
jae
les
popa
je
or
les
push
jmp
stos
nop
hlt
jl
inc
pop
xor
nop
int3
adc
nop
shr
cmp
push
fbstp
adc
addb
jl
fildll
or
pusha
add
fwait
arpl
scas
test
push
andl
shrb
or
add
daa
sub
int3
add
adc
out
cltd
xchg
das
jns
add
adc
cmpsb
adc
dec
xchg
addb
add
imul
xchg
pop
imul
loop
testb
add
mov
test
mov
jne
adc
sbb
mov
xor
push
in
add
fld
adc
and
repz
dec
dec
sbb
cmpl
idivb
push
mov
sahf
add
or
imul
sbb
cli
add
inc
repnz
lahf
es
loopne
adc
sbb
jmp
and
int
addl
push
and
cmp
sbb
push
sti
inc
sti
mov
push
out
xor
pop
or
scas
aaa
daa
or
clc
mov
sbb
sbb
lock
test
and
xor
xor
fdivrl
mov
add
adc
push
sbb
mov
fmull
imul
xor
sarb
cltd
mov
in
mov
mov
cmp
inc
xchg
cli
pop
push
xor
lea
sbb
add
xor
push
push
dec
xlat
out
push
adc
adc
xchg
add
adc
push
jo
inc
fdivr
roll
in
repnz
mov
cmovg
setl
dec
in
mov
push
in
dec
pop
xor
shrb
lcall
sbb
xchg
xchg
cmp
fisttpl
sub
lret
jne
jb
bound
test
push
dec
fstps
or
mov
adc
cmp
mov
cmp
and
ss
xchg
lods
dec
rcl
jmp
push
lds
jecxz
clc
xor
imul
rolb
dec
inc
or
or
dec
es
push
icebp
or
add
out
sahf
pop
push
loope
add
add
lods
movl
addl
je
jne
pop
cmp
cmc
add
cmp
inc
popa
add
les
or
add
mov
mov
cmpsl
add
push
and
sbb
cmpsb
pop
je
mov
add
mov
push
mov
mov
aaa
dec
xor
lods
add
mov
rclb
cmp
dec
jmp
jge
xor
ret
sbbl
shlb
aas
aas
cmpb
rorb
xor
or
push
add
pop
ret
adc
and
xchg
mov
int3
pop
movups
sub
pop
adc
pop
or
push
push
daa
pop
cmpsb
add
inc
xor
jmp
dec
inc
xor
lret
mov
insl
gs
mov
std
mov
lcall
sub
sub
and
movzwl
pop
imul
xor
fnstcw
push
stos
adc
fs
dec
outsl
add
cmp
ficomps
xchg
mov
nop
ds
sbb
loopne
jg
sbb
xor
movsl
ret
add
imul
sbb
xor
outsb
testb
aaa
add
jg
or
sbb
or
jg
push
sbb
jmp
jbe
sbb
dec
add
addr16
xor
cmpsb
jmp
repnz
pusha
cmp
dec
ja
and
push
pop
vpshuflw
loope
mov
clc
out
push
cmp
jne
inc
ss
xchg
sub
sub
sbb
and
adc
sub
fwait
mov
movsl
std
jmp
sbb
stos
pusha
pusha
sti
pop
inc
jg
test
lock
ret
sub
pop
daa
cmp
mov
lock
jl
mov
imul
and
push
jmp
les
add
jl
inc
sbb
insl
dec
popl
jge
mov
scas
arpl
and
popa
adc
push
and
ret
sbb
ds
stos
imul
adc
inc
jae
cmp
nop
push
jns
iret
repz
sub
rclb
cld
out
jns
out
dec
js,pt
inc
or
pop
fcompl
cmp
cmp
sbb
cmp
dec
fsubrs
les
idivl
pusha
and
out
out
in
sbb
push
adc
dec
and
gs
push
add
lods
cmp
dec
mov
nop
nop
inc
adc
adc
mov
mov
mov
push
jnp
jo
inc
dec
cmp
test
adc
mov
xchg
xchg
out
aaa
add
insb
mov
and
movsb
mov
mov
test
add
cli
add
add
mov
filds
or
lcall
in
aad
hlt
cmp
push
ss
pop
adc
inc
insb
popa
je
je
adc
add
testl
int3
pop
mov
inc
nop
icebp
dec
push
pop
dec
add
nop
cmp
int
jmp
and
outsb
mov
xor
add
add
pop
add
add
jo
add
adc
sub
mov
sub
jno
fs
scas
cld
mov
or
pop
mov
aas
or
clc
lock
or
inc
push
or
sbb
fdivrp
and
sub
rolb
add
test
sub
add
cmp
out
inc
adc
inc
dec
inc
inc
push
dec
cmp
pop
sub
in
pop
push
insl
outsl
fs
add
inc
scas
test
inc
roll
lock
lret
mov
or
inc
push
push
enter
pop
sbb
ret
arpl
mov
pop
push
je
and
or
sbb
jl
js
or
das
adc
and
mov
or
divl
dec
inc
imul
inc
fs
js
pop
inc
sbb
sbb
sbb
ds
sbb
push
mov
pop
cld
inc
inc
repnz
pop
adc
test
mov
dec
inc
add
inc
testl
dec
jbe
push
add
inc
ja
cmp
fisubrs
sub
nop
and
in
jp
stc
push
and
push
inc
cmp
or
inc
nop
add
jne
pop
xor
xchg
sbbb
loope
mov
stos
push
push
jge
inc
dec
inc
jp
jae
dec
aaa
dec
or
or
and
dec
aam
sub
add
add
push
mov
pop
inc
add
xlat
push
pop
mov
cmp
or
ret
push
jp
or
jle
fisttpll
gs
in
mov
leave
rorb
add
cli
mov
prefetch
sbb
mov
xchg
xchg
inc
dec
movsl
sbb
out
and
int3
inc
std
das
mov
popa
pop
adcl
cwtl
or
jnp
nop
push
shl
int
jns
xchg
pop
add
enter
dec
aaa
jb
les
sarl
and
inc
jnp
add
cmp
or
lods
or
mov
xchg
addr16
cwtl
sbb
sbb
arpl
mov
es
sub
sbb
add
es
adc
outsl
cwtl
pop
inc
xlat
push
pop
outsb
divl
xchg
nop
or
lea
pop
jl
jo
addr16
adc
adc
ret
adc
rcrl
and
push
push
fbld
andb
jge
xorb
adc
shll
orb
dec
repz
fs
mov
mov
and
add
fs
mov
roll
insl
popa
jb
or
push
push
push
out
mov
pusha
popa
sub
iret
insb
push
jo
addb
out
sbbl
or
pop
ds
add
iret
add
lea
or
xor
setne
dec
imul
popa
or
iret
add
mov
add
enter
sbb
sub
push
rcr
push
ficomps
aam
xchg
jne
adc
jo
xchg
pop
sarb
mov
inc
test
or
mov
add
addr16
push
push
dec
push
add
inc
outsb
jge
inc
out
mov
neg
dec
pop
push
pop
nop
loopne
and
test
shrl
fisttpll
dec
xlat
lea
xchg
lcall
and
mov
cmp
pop
and
and
jle
mov
clc
inc
clc
sbb
dec
inc
add
push
jl
enter
jne
pop
push
int3
push
inc
pop
jle
lods
sbb
into
push
fs
inc
inc
add
sub
fcompl
cwtl
inc
add
mov
inc
movsb
and
push
clc
mov
inc
inc
sbb
inc
mov
arpl
jb
pslld
sbb
inc
adc
testl
add
mov
incb
into
data16
mov
nop
call
clc
dec
mov
repz
pop
push
pusha
sbb
push
xchg
fs
cli
inc
call
add
jmp
or
and
pop
ljmp
add
add
inc
imul
inc
loop
sbb
mov
push
add
fsubl
xchg
or
adc
jp
mov
scas
add
or
jg
mov
mov
pushl
push
push
ljmp
pop
adc
stos
iret
cmp
shrb
dec
jle
test
push
enter
in
add
jns
divl
in
addb
enter
notl
push
inc
test
test
cwtl
imul
xchg
xchg
lock
mov
jo
sub
ss
push
xor
lahf
repnz
aam
dec
mov
sahf
out
sub
je
pop
int3
cmp
flds
push
movsb
jnp
pop
fistpll
inc
pop
into
cwtl
mov
int3
jl
mov
jnp
xchg
es
gs
cmp
mov
loope
sarl
mov
cmp
mov
lahf
pop
and
loope
jp
pop
shll
out
insb
and
add
dec
daa
pusha
and
sbb
fnstcw
ret
or
sbb
dec
ret
push
movsl
cld
and
pop
push
cwtl
or
or
or
data16
rclb
sub
push
or
leave
mov
jmp
lret
loopne
sbb
clc
mov
cltd
push
pusha
add
jo
mov
out
out
push
decl
mov
in
add
aaa
jb
add
cmp
add
inc
add
pop
inc
adc
test
mov
adc
xchg
maskmovq
notl
inc
dec
gs
push
ljmp
sub
add
pop
add
ja
pop
insb
add
incl
sbb
add
inc
add
xchg
jne
mov
insl
xor
cmp
sbb
pop
inc
clc
adc
sbb
sbb
lock
add
sbb
call
adc
sbb
dec
xchg
push
xchg
in
push
add
inc
repnz
add
adc
pop
xor
and
and
adc
and
xor
mov
or
and
jb
dec
andl
mov
cmp
and
and
adc
in
pop
das
int3
je
aam
insl
sub
or
roll
pop
inc
test
pop
push
lock
add
push
pop
sbbl
jmp
mov
and
movsb
stc
dec
cmp
sub
icebp
jmp
fwait
sub
shlb
rolb
push
mov
push
or
xor
jno
pop
pop
xor
aam
insb
fs
mov
jne
jecxz
mov
adc
dec
pusha
jo
push
inc
pop
dec
rol
mov
or
adc
sbb
mov
xchg
nop
imul
mov
ds
jae
mov
xlat
sub
inc
pop
pop
dec
xor
xor
arpl
pop
xchg
cmp
xor
xor
fnstsw
and
hlt
pop
sub
out
xor
mov
aas
int
addb
push
hlt
inc
ss
push
sbb
and
add
loope
jns
jns
push
mov
in
cmp
jmp
data16
inc
or
and
clc
jle
out
fbstp
scas
inc
add
jge
pop
pop
cs
jle
insb
push
lret
cmp
aad
and
pop
pop
xchg
cmp
add
dec
push
dec
enter
or
test
aas
pop
xchg
xor
xlat
and
xorb
adc
test
nop
fcoms
aas
fwait
inc
pop
inc
cwtl
dec
lods
test
stos
inc
adc
loopne
insl
push
or
and
inc
inc
inc
fs
sar
rolb
mov
xchg
inc
mov
inc
inc
movsb
test
jmp
outsb
clc
jns
mov
shlb
pop
push
pop
ret
inc
pop
jb
dec
nop
inc
mov
inc
dec
stos
fs
das
inc
push
inc
xchg
dec
gs
xchg
pop
leave
jl
dec
add
and
mov
test
test
inc
inc
test
and
dec
inc
push
and
push
xor
push
cmp
inc
push
and
inc
push
cmp
in
mov
cmp
imul
nop
das
in
push
add
pop
enter
push
dec
adc
push
cmp
insb
in
push
hlt
das
mov
test
mov
repz
push
inc
pop
test
test
nop
rcrb
test
jns
ror
enter
in
mov
rorl
enter
xchg
or
jg
or
hlt
lods
cmp
pop
push
cmp
pop
leave
add
aas
rcrb
lcall
repnz
inc
mov
mov
imul
xchg
push
iret
mov
iret
clc
push
popf
out
data16
lcall
cs
or
out
pop
sub
mov
push
test
mov
or
nop
in
add
mov
inc
pop
or
vminss
mov
iret
pop
imul
push
mov
out
mov
cmovo
adc
cmp
movups
and
adc
inc
shrd
enter
loopne
xchg
nop
adc
scas
inc
xor
xor
leave
out
xor
add
xor
mov
mov
inc
pop
testl
jb
pop
push
andps
or
mov
add
loop
xor
imul
not
mov
cmp
push
add
cmc
jnp
fdivs
jmp
push
je
and
or
push
inc
fdivs
ret
mov
call
mov
insb
xor
add
mov
add
loopne
and
jge
xchg
hlt
es
sub
js
add
dec
sub
bound
repnz
adc
dec
pop
jo
or
fsubrs
in
add
into
jl
divb
hlt
mov
and
sarb
ss
xchg
inc
inc
xor
add
mov
mov
xor
imul
adc
ds
fisttpl
mull
cld
leave
call
cbtw
dec
and
sub
or
xor
nop
lods
xchg
aam
scas
and
cmp
inc
mov
xor
sub
sub
push
test
xchg
add
pop
pushf
mov
adc
mov
push
adc
pop
dec
or
push
repnz
xorb
je
mov
movnti
test
rclb
push
sbb
cmp
out
test
xor
xchg
xor
adc
sbb
xchg
push
inc
and
cs
mov
mov
add
aaa
repz
aaa
dec
mov
mov
cmp
xchg
mov
aam
sbb
insb
push
or
jbe
or
jae
pop
pusha
out
mov
xchg
inc
movsl
mov
out
loopne
int
dec
cmpsl
div
mov
lret
jnp
mov
int3
add
out
pop
sahf
add
or
adc
cmp
fcmovnb
sbb
add
fisubl
cwtl
addr16
cltd
dec
adc
iret
aad
lahf
ja
testb
jae
cs
sbb
add
pop
lcall
push
sub
add
inc
cmp
fadds
cmpsl
pop
pop
aam
dec
cmp
adc
add
lods
test
xlat
mull
ret
pop
pop
shl
add
icebp
jl
cmp
sub
add
inc
push
je
sbbb
mov
dec
push
out
js
stos
mov
push
mov
movsl
mov
fwait
or
mov
fwait
mov
pop
cs
fwait
jae
and
or
sbb
notb
ds
push
inc
add
jge
inc
aas
mov
and
and
fistps
xor
add
sub
push
xor
dec
xor
push
adc
xor
xor
add
push
or
outsb
or
shlb
pop
dec
shrb
add
or
sub
or
push
inc
sbb
pop
or
mov
pop
xchg
out
pop
cld
add
jl
inc
and
mov
inc
add
add
test
mov
add
sub
es
in
or
add
imul
xlat
mov
jbe
add
call
sbb
inc
loope
jp
push
xlat
and
mov
test
les
add
mov
or
lret
dec
aas
cmpb
push
cmp
add
adc
jmp
sub
sub
imul
pop
testb
mov
faddl
rclb
lea
and
fsubs
arpl
inc
cmpl
adc
sbb
loop
fwait
and
add
lock
add
mov
xor
stos
cmp
push
and
fadd
sbb
lods
dec
jl
adcl
sbb
jg
int3
pop
or
or
sti
cmp
fucomi
arpl
test
xor
test
iret
cli
lds
jo
push
push
test
mov
es
bnd
adc
hlt
push
mov
int3
sub
leave
rcr
in
push
dec
leave
cmp
and
lret
add
mov
mov
mov
mov
push
and
cmpsl
push
push
lahf
mov
sbb
ds
or
movsl
add
movl
mov
popa
inc
push
shr
push
pop
push
fs
adc
mov
lods
jmp
nop
lea
cmpsb
adc
push
pop
repnz
xor
or
and
inc
fs
jmp
push
inc
pop
inc
scas
cmpl
icebp
jmp
out
and
inc
or
dec
cmp
hlt
out
insl
cmp
cs
or
sbb
and
lret
sbb
lods
arpl
jo
mov
ret
sub
push
push
cmp
push
mov
sub
fnstsw
sub
fstps
xor
push
jmp
dec
in
xchg
add
adc
add
jle
or
or
stos
or
je
inc
xchg
jl
fcoms
sub
ljmp
xchg
icebp
xor
inc
mov
sahf
test
dec
inc
mov
cmp
cltd
daa
xchg
dec
enter
aaa
add
and
dec
inc
xor
loop
mov
jle
push
lea
sbb
cs
out
inc
push
mov
and
and
dec
mov
dec
sub
test
push
adc
pop
mov
and
fdivrs
push
and
mov
sbb
sbbb
or
mov
daa
fiaddl
inc
or
push
push
xchg
std
or
jge
jmp
pop
sub
or
push
dec
inc
sbb
add
adcl
mov
imul
fcmovnb
xchg
js
xor
jae
adc
pop
add
rolb
inc
xchg
aam
add
add
mov
or
dec
pop
das
addr16
adc
ss
ds
add
and
sbb
jp
pop
mov
inc
dec
ds
xchg
mov
adc
loop
sbb
xor
sbb
or
cmp
sbb
adc
push
nop
and
xor
inc
push
aaa
mov
shrb
mov
inc
adc
and
lret
shrl
addb
xor
popa
movb
ret
pop
adc
jge
mov
pop
ss
daa
mov
cld
aas
cmp
test
cmp
inc
out
test
sbb
or
add
add
adc
sub
xor
and
pusha
popa
and
sbb
in
and
add
inc
push
xor
mov
cmpsb
push
sub
enter
mov
cmpsl
fisttpl
and
mov
js
ja
cmp
lock
mov
and
push
mov
mov
xchg
stos
adc
sub
jae
mov
loop
inc
loop
mov
dec
and
adc
or
sub
ljmp
rcrb
out
aas
or
test
dec
dec
notb
hlt
sub
pusha
pop
adc
subb
dec
lea
xor
mov
rclb
in
aaa
or
xor
add
cmp
mov
or
mov
adc
adc
cmp
and
mov
inc
inc
pop
sbb
sub
push
or
sub
add
mull
ds
addb
ret
inc
je
mov
and
ret
xchg
add
sub
aaa
lods
jno
jno
call
mov
push
adc
push
push
popa
mov
jle
movsb
pop
daa
lock
outsb
sbb
mov
pop
xor
inc
add
aaa
out
pop
jmp
sub
pop
sarl
push
xorl
adc
ss
jne
lock
or
nopl
and
push
in
push
jo
js
roll
push
dec
repz
inc
inc
lock
mov
mov
xorb
or
cmp
pop
je
mov
sbb
emms
shlb
ret
loopne
add
outsl
dec
mov
pop
or
xor
pop
jmp
sub
jmp
lret
push
inc
dec
dec
movb
add
loope
pushf
cmp
ret
or
sub
iret
push
xor
inc
mov
pop
dec
inc
mov
or
adc
in
and
dec
and
push
dec
inc
sbb
xchg
decl
jge
dec
stos
add
insb
icebp
push
sar
jns
cli
cmpsb
jbe
xchg
rcrl
push
dec
jmp
nop
or
sub
aad
sbb
mov
push
push
iret
sbb
mov
clc
adc
fisubrs
lea
push
mov
mov
icebp
or
dec
fcmovbe
addl
outsl
or
lds
sbb
out
sbb
mov
cmp
jno
push
jle
enter
mov
mov
fcmovnbe
mov
or
sbb
or
or
lods
and
inc
push
nop
push
add
adc
mov
scas
call
sbb
pop
popa
cmp
lcall
js
adc
vmovddup
in
or
add
ret
add
push
pusha
xor
cmp
test
and
and
pop
in
gs
xorb
dec
dec
mov
aam
fidivs
movb
dec
pusha
or
je
mov
or
dec
cmp
mov
pop
add
cmpsb
push
lret
xlat
cli
pop
mov
pop
cmp
add
and
inc
dec
cmp
pusha
jne
sbb
inc
rol
adc
adc
sub
out
stos
push
mov
ds
je,pn
or
jne
or
or
xor
ret
mov
arpl
adc
jo
or
and
xchg
xor
sbb
neg
sub
fcoms
dec
push
decb
add
or
xchg
xchg
mov
mov
ret
pusha
pop
test
out
dec
dec
or
add
mov
sbb
ss
jb
cwtl
add
push
push
stos
adc
popa
push
xlat
cmpsb
nop
push
or
movl
adc
pop
fchs
adc
push
loopne
rcrb
aad
xor
pop
dec
clc
dec
add
popf
movsb
mov
cwtl
aam
xor
add
test
cmp
jo
rorb
rorb
rcrb
lcall
mov
pop
pop
pop
lods
adc
scas
and
fs
clc
adc
xchg
dec
or
dec
sahf
hlt
incb
xchg
iret
nop
cltd
aam
push
shr
sbb
dec
repz
dec
inc
in
les
xor
mov
imul
xchg
jo
ret
icebp
testb
mov
mov
aas
push
popl
dec
test
push
pushf
and
inc
pusha
or
xchg
mov
jae
movsb
and
sub
sbb
mov
xchg
mov
cmp
das
sbbl
mov
adc
lock
adc
jecxz
mov
addb
add
cmp
mov
adc
sbb
add
pop
adc
testl
sbbl
xlat
push
or
mov
das
mov
in
adc
dec
hlt
xchg
pusha
nop
adc
mov
inc
nop
pop
jne
movsl
or
pop
movl
push
stos
adc
sbb
add
add
inc
cmpsl
out
es
rorb
mov
add
pop
mov
add
fsubrs
push
movsl
or
leave
or
es
inc
out
xchg
pop
inc
xchg
fwait
mov
jl
xor
lods
scas
arpl
sbb
into
pop
repnz
mov
inc
add
jne
push
test
in
pop
sub
sub
ds
add
adcl
dec
jmp
inc
enter
xchg
daa
imul
sbbl
ret
pop
test
add
iret
dec
popf
mov
cmp
jb
xchg
lret
fiaddl
fdivrl
push
in
pop
jb
add
cmpsl
lods
xor
and
mov
mov
mov
inc
push
lcall
jne
push
ds
ja
inc
inc
mov
and
xor
lea
iret
sub
setne
das
in
mov
test
cmp
jne
cmc
in
loop
popf
fs
add
jmp
pop
scas
xchg
roll
out
adc
lahf
push
movsb
frstor
xlat
jo
pop
nop
push
addb
pusha
insb
add
mov
xlat
xchg
inc
sub
movb
pop
mov
mov
mov
pop
dec
jb
jo
adc
sub
xor
xchg
in
hlt
pop
mov
pop
jo
inc
inc
pop
mov
cmp
je
adc
cs
das
daa
push
subb
pop
insl
jo
push
loop
xor
ret
sbb
test
pop
fidivrl
xchg
repz
push
jg
test
mov
and
lods
aaa
add
and
sahf
repnz
not
sbb
pop
or
bswap
insb
and
mov
inc
popa
inc
adc
outsl
es
sbb
mov
adc
enter
das
lret
cwtl
pop
and
ret
sub
and
out
add
xchg
inc
adc
or
inc
aas
stc
sub
push
lods
push
les
xor
mov
loope
das
pushf
sbb
mov
cmp
xor
or
lds
stos
les
inc
arpl
push
fmuls
add
scas
mov
repnz
iret
adc
enter
mov
add
push
lock
test
xchg
lcall
xchg
paddsw
in
sub
pop
mov
mov
int3
lcall
adcl
mov
pop
lods
and
call
add
popa
dec
iret
xor
loope
push
cmpsb
mov
and
add
lock
push
imul
sbb
test
and
cmpb
mov
imul
subb
adc
add
sub
loopne
xor
pop
dec
cld
cwtl
pmuludq
in
xchg
cmpb
cmpl
outsl
pushf
adc
xorl
ja
sbb
mov
mov
add
adcl
push
xchg
add
or
xchg
or
dec
pop
out
add
mov
aas
int3
enter
dec
xlat
frstor
lods
addl
cmpl
test
aam
push
mov
js
inc
or
dec
jnp
xchg
mov
dec
or
push
push
mov
pop
imul
sbbl
jmp
cmp
sub
mov
mov
xorb
cli
xchg
xor
xor
icebp
jl
sbb
lock
xor
adc
inc
pusha
sbb
xchg
mov
inc
push
outsl
sbb
jae
add
cmp
inc
mov
xchg
jp
or
pop
fwait
push
lret
fcmovne
push
and
inc
pusha
xor
sbb
cmp
int
fistpll
je
inc
aad
and
dec
pop
pop
int3
dec
and
mov
push
test
shr
add
pop
mov
imul
push
pop
ja
loopne,pt
push
mov
mov
pop
in
and
or
push
pop
sbb
testb
pop
insb
hlt
pusha
rorb
jns
outsl
testb
fildl
fmulp
jmp
andb
ds
pop
sub
and
or
ret
xor
push
cmp
pop
cmp
jne
and
movsb
pop
sub
test
test
mov
insb
lahf
pop
mov
int3
xor
addl
popf
cmpsb
push
xchg
push
pop
outsb
push
mov
inc
cmp
arpl
das
adc
pop
loop
imul
sub
mov
jmp
inc
jg
lea
ret
ret
jb
adc
mov
or
push
dec
or
icebp
xchg
mov
movb
pop
fnstsw
dec
je
daa
cmpb
fdivl
pop
aam
pop
jne
sbb
sbb
mov
or
xor
pop
cmp
inc
or
sbb
and
or
inc
xor
cmpsb
pop
xchg
push
xor
ds
xchg
push
jbe
mov
mov
sbb
mov
fwait
push
inc
push
dec
sub
inc
push
popa
inc
test
xchg
adc
push
pop
test
arpl
lcall
add
add
insl
or
shrb
lea
test
popa
add
inc
imul
mov
mov
jnp
cmp
or
push
pop
add
cs
jmp
fstpl
ret
hlt
frstor
jl
pop
in
clc
cmp
inc
imul
hlt
xchg
or
push
add
in
pop
mov
push
mov
inc
mov
ret
jae
ds
nop
add
pop
push
out
arpl
repnz
lcall
leave
sbb
pushf
pusha
lock
shll
xor
and
lea
adc
xchg
or
mov
bound
lock
cmp
shrb
mov
and
dec
xchg
or
dec
xchg
adc
inc
sbb
sbb
or
add
fs
jae
push
sbb
outsb
or
movsl
mov
add
inc
add
fwait
movsl
andb
inc
ss
imul
mov
xchg
mov
movq
sbb
push
fnstenv
inc
shlb
push
push
pop
adc
into
xbegin
lahf
lods
call
push
mov
pop
push
xchg
stc
cmp
inc
pop
add
or
dec
movsb
test
insl
cmp
xchg
xchg
fadds
fwait
adc
sbb
dec
mov
sbb
gs
cmovne
testl
sub
sub
pop
rol
or
jmp
popf
adc
sbb
sub
movsb
xor
je
out
inc
gs
xor
nop
test
dec
test
fsts
out
add
insb
das
xor
pop
ja
cmp
lret
mov
xchg
adc
mov
in
jl
mov
test
add
cmp
scas
xchg
cmp
jle
sub
push
adc
add
sbb
push
js
and
andl
ret
insb
xchg
daa
mov
dec
sbb
into
or
lds
and
and
xor
push
mov
icebp
pusha
iret
add
push
pop
fdivrs
mov
sub
sub
mov
rcrb
mov
mov
gs
jne
xchg
pop
ljmp
gs
nop
fnstcw
js
jle
imul
push
inc
nop
testb
jmp
sbb
in
add
gs
add
fs
nop
in
add
mov
xchg
and
leave
pop
scas
ret
das
cli
mov
mov
popf
pop
loop
ja
mov
jo
pop
movb
stc
and
icebp
jnp
cltd
cli
std
or
mov
jge
adc
adc
cmp
je
and
icebp
xchg
sub
xor
je
jo
xor
shlb
mov
sub
xor
adc
sub
movb
ret
jno
mov
cmpsl
movsl
and
rcrl
sub
addb
push
ret
aaa
or
xchg
add
sbb
dec
sbb
mov
add
nop
filds
lods
loope
mov
nop
and
cmp
and
add
add
push
mov
xor
repnz
adc
or
popf
sbb
into
and
cmp
add
adc
lock
cmp
mov
sarb
test
les
push
inc
pop
and
fldt
popa
dec
fnstenv
or
sub
adc
adc
sub
mov
mov
and
and
xchg
cmp
inc
imull
pop
jno
es
jl
xlat
movsb
inc
setg
int3
ja
pop
cmpsl
out
das
ljmp
adc
pop
hlt
jno
icebp
pop
aam
mov
scas
mov
add
sbb
push
fldenv
add
arpl
dec
aam
xor
fdivrl
dec
xchg
inc
sahf
jecxz
iret
cmpb
xor
sahf
popf
xchg
jbe
jo
xchg
and
or
verr
and
dec
add
add
push
pause
test
adc
mov
adc
xor
jnp
inc
cmp
test
mov
add
pop
xchg
pop
sbb
lock
imul
add
popa
shrl
popf
cmp
or
cmp
je
and
gs
or
jecxz,pn
int3
adc
lock
sbb
cld
jne
fimull
sub
and
or
fnstenv
add
mov
imul
or
inc
jbe
std
or
push
and
cmpsb
pop
push
dec
je
add
nop
mov
ret
push
test
clc
je
cmp
nop
insl
insb
sbb
jmp
int
mov
dec
iret
popa
add
nop
imul
jl
jo
cs
popf
xchg
rorb
adcb
inc
xchg
hlt
shll
movsl
and
cmpsl
push
or
push
sbbl
lock
ret
inc
pop
loope
mov
adc
es
test
or
lfs
int3
add
pop
inc
pop
pop
add
loopne
and
rcll
cmp
or
add
sbb
or
push
jo
or
fnstcw
pop
pop
xchg
scas
add
mov
add
and
ljmp
jne
mov
ret
mov
sbb
pop
inc
test
nop
inc
fisubrs
lods
rorb
mov
jo
sbb
imull
mov
and
pushf
inc
dec
int3
sub
mov
push
or
lret
push
push
shl
xor
xchg
mov
and
mov
adc
cmpsl
mov
inc
sti
lods
add
movsb
inc
ja
add
outsb
nop
dec
mov
mov
push
push
cmp
cwtl
xor
fs
mov
add
add
fisttps
cmp
cmp
and
outsb
sbb
stc
ss
sbbb
pushf
pop
bound
push
mov
sub
scas
adc
xor
testb
imul
mov
add
xor
cmpsb
rorb
je
and
shrb
arpl
call
ds
punpckhdq
bound
sti
adcl
xor
add
mov
or
jnp
je
xlat
mov
add
stos
sub
adc
dec
jmp
add
sbb
lds
pop
pusha
aad
push
or
or
cmp
dec
adc
push
sbb
inc
fcoml
pop
test
and
add
lea
fdivr
ja
loopne
add
ss
mov
sbb
das
jl
sbb
add
push
sub
inc
outsl
add
dec
sub
imul
adc
lods
adc
iret
aas
cmp
xchg
nop
pop
sub
or
sbb
pop
mov
jecxz
sbb
fiadds
mov
xor
sub
mov
xor
add
imul
xchg
pop
adc
mov
cli
push
psrld
sbb
rclb
mulb
add
mov
cmp
adc
jmp
sahf
movsb
adc
dec
das
insl
loop
mulb
sbb
or
lods
lea
add
adc
inc
data16
lods
push
push
mov
fadds
sub
add
add
xchg
pushf
push
inc
shlb
cltd
sub
add
or
mov
movsb
flds
add
add
data16
jo
dec
ret
cli
rclb
mov
aas
mov
add
push
or
add
fcoms
xlat
push
sbb
jecxz
mov
adc
or
sbb
scas
add
jo
cmpsl
rcrb
popf
sarb
xchg
inc
xchg
add
add
push
xchg
xchg
hlt
repz
in
or
arpl
adc
rcrl
mov
jae
sarl
dec
pop
es
nop
sbb
jmp
pop
or
fisttpl
jp
or
sbb
adc
and
js
dec
sbb
dec
mov
je
imul
test
push
push
dec
xorl
hlt
inc
add
dec
dec
inc
dec
push
or
in
push
dec
call
push
or
pushf
mov
or
rcl
rclb
or
lea
mov
lea
adc
fdivl
cmp
mov
xor
shll
in
adc
sbb
dec
shl
add
and
xchg
and
xorb
ret
xor
push
or
pop
and
mov
daa
fdivrs
pop
incl
idiv
dec
sub
jecxz
out
xchg
cld
pop
adc
adc
and
push
loop
pop
or
and
add
xorb
out
inc
dec
popa
and
mov
push
pop
inc
cmpl
jne
inc
mov
cmp
pushf
call
loop
mov
jbe
popa
xchg
jo
ss
pop
faddl
fbstp
test
jne
pushf
or
mov
mov
ja
iret
add
pop
bound
imul
mov
adc
mov
les
mov
ja
sbb
adc
xor
test
and
outsb
jnp
shlb
outsl
sahf
cs
imul
bound
add
subb
cmp
or
aam
sahf
pop
mov
and
out
or
adc
jae
xchg
adc
or
mov
mov
insb
push
xor
daa
dec
dec
jmp
adc
cmc
and
shrb
leave
aam
mov
or
push
or
sbb
call
jns
js
pop
dec
loopne
out
sub
ljmp
push
or
jnp
or
cmp
addr16
jnp
pop
insl
add
mov
sbb
loop
sub
add
sbb
fimuls
dec
adc
sbb
pop
lock
inc
pop
jno
mov
inc
outsl
inc
sbb
cmp
or
dec
sbb
and
adc
and
repnz
sbb
jne
mov
dec
mov
stc
pop
mov
xchg
sahf
les
sbb
pop
add
adc
or
and
pop
mov
adc
test
arpl
and
xchg
or
and
sub
sub
outsb
mov
xchg
sub
lock
fs
loope
popa
sub
stos
cmpsb
daa
mov
xchg
adc
cmpl
fistpl
cmc
pop
ret
and
xchg
mov
ret
add
stos
push
pop
cmc
sbb
mov
lock
dec
push
and
mov
sbb
aas
arpl
test
les
mov
or
mov
jns
pop
mov
cmpl
jmp
and
inc
inc
je
ja
hlt
out
xor
mov
mul
and
or
mov
dec
movsl
xchg
mov
mov
sub
hlt
xchg
dec
cmc
sub
sbb
je
in
inc
and
and
movsl
adc
jo
inc
lock
push
cmp
sub
cs
ss
in
jne
and
push
xchg
push
mov
loopne
and
popa
enter
dec
jb
mov
mov
mov
movsb
mov
dec
mov
adc
xor
sti
scas
test
enter
cmp
inc
sbbl
sti
sub
loop
and
and
fisubrl
je
xlat
or
sbb
pusha
cmpsb
xor
push
and
fistl
imul
dec
mov
mov
ja
dec
js
push
cmp
int
dec
loope
pop
xchg
xchg
inc
push
pushf
mov
fmuls
insl
jmp
xchg
mov
dec
jne
arpl
cmp
sbb
mov
rolb
mov
scas
fwait
mov
push
adc
out
cmp
and
push
adc
sti
cmp
inc
pop
js
inc
hlt
fwait
movsl
je
in
push
xor
mov
adc
stos
push
addb
sbb
add
popf
sbb
pop
daa
movsb
rcll
push
push
std
and
push
inc
xchg
shrl
pop
cld
sub
shlb
fbld
push
repz
test
sahf
mov
loop
inc
in
fwait
add
les
icebp
adc
das
rolb
imulb
sbb
nop
outsb
sbb
add
sbb
cmp
or
push
outsl
pusha
aaa
add
push
sbb
daa
push
pop
or
popf
pusha
sub
imul
and
xchg
inc
sub
adc
xchg
adc
stos
fwait
add
and
cmp
push
shlb
dec
add
add
push
push
loopne
and
lock
sub
stos
sub
mov
sub
bound
or
test
adc
adcb
sbb
add
xchg
dec
jns
add
sbb
orl
mov
test
adc
pop
jmp
sbb
out
cmp
fadds
jmp
add
dec
roll
cmpsb
insl
orl
pusha
add
xor
sahf
pusha
nop
pop
xlat
cmpl
cmp
push
data16
push
add
sub
or
fiaddl
inc
movsb
and
daa
test
inc
or
and
jno
sbb
inc
je
mov
daa
inc
mov
mov
rcrb
aad
add
enter
push
loopne
roll
pusha
movsb
enter
fwait
scas
push
push
mov
fwait
cmp
push
test
mov
cmovp
pop
mov
jns
loopne
inc
jo
lea
add
push
mov
push
js
add
push
xchg
push
or
nop
jp
pop
or
aaa
xchg
jae
push
hlt
mov
mov
insb
subb
scas
cltd
dec
inc
mov
inc
jecxz
sbb
pop
faddl
cwtl
fwait
push
scas
fwait
inc
sbb
or
jp
test
push
dec
adc
sub
fcoml
or
jno
cmpw
icebp
popw
add
popa
mov
inc
leave
push
or
es
jmp
dec
les
pop
into
movb
mov
xor
jo
adc
jmp
inc
leave
in
cmp
ret
jno
push
pop
sub
adc
dec
cmp
arpl
inc
or
inc
aaa
insb
add
jo
and
xchg
adc
movsl
cmp
or
push
dec
and
add
mov
leave
neg
lds
leave
cmpsl
sub
pusha
add
add
add
xor
sub
dec
xor
adc
stc
or
leave
outsl
out
xchg
add
add
jns
add
jne
dec
nop
int3
movsl
push
add
outsl
movb
rcrb
jne
outsb
adc
xchg
xchg
xor
push
inc
iret
cmc
test
inc
imul
inc
out
mov
or
test
pop
fsub
cltd
xchg
sbb
fidivrl
xor
je
sbb
scas
and
cmp
and
inc
fcompl
xlat
mov
in
push
and
dec
jge
sub
pusha
sub
mov
sbb
pop
jae
sub
xchg
push
and
mov
inc
or
ss
lcall
sbb
adc
mov
or
sub
insl
jo
es
inc
jmp
add
lock
loopne
mov
sbb
mov
jp
lods
lock
les
out
dec
pop
or
inc
je
dec
stos
and
push
jl
bound
adc
add
or
int
enter
push
and
sbb
dec
pop
int
insb
rclb
lahf
sub
jne
add
sub
cmc
fs
cs
andb
or
xchg
mov
fmuls
add
and
dec
mov
shlb
inc
or
mov
push
shr
push
or
xchg
xchg
imul
scas
mulb
cmp
loopne
pop
pop
les
mulb
and
cmp
aaa
push
test
xchg
jle
mov
adc
sbb
mov
addl
jl
test
adc
sub
jp
das
jbe
xor
addr16
jl
inc
pop
xchg
in
add
adc
in
mov
add
imul
mov
sub
adc
les
sbb
or
iret
sbb
stc
sbb
inc
cmp
xor
mov
clc
mov
xor
rorb
or
mov
mov
cmpsl
and
push
cmp
or
dec
and
push
int3
movl
jae
pop
jp
push
loopne
cmp
es
cli
lcall
enter
dec
cmp
int3
xor
ret
inc
sbb
xor
subl
inc
cmp
sarb
mov
lcall
lcall
push
push
movsl
jbe
or
rorl
inc
test
jl
cmp
ds
jo
jmp
jne
dec
sbb
push
loope
ds
and
dec
or
add
sbb
js
rolb
sub
add
popf
xchg
andb
and
mov
adc
xor
enter
ss
sbb
adc
test
push
loop
lods
push
fwait
sub
sahf
fs
or
das
cmp
add
mov
shlb
jg
pusha
pop
push
in
pop
mov
add
lea
jb
scas
or
insb
in
or
out
sub
lds
adc
push
dec
push
add
mov
andl
cmpsl
mov
pop
mov
dec
loope
or
mov
es
mov
mov
or
xchg
adc
xor
mov
push
push
outsb
test
inc
cmp
inc
fadds
or
nop
mov
jmp
push
les
cmp
adc
xchg
push
ss
ja
sub
jle
pop
js
rcll
inc
dec
shr
inc
inc
into
adcl
cmpsb
mov
push
push
cld
in
mov
inc
cmp
sub
cmc
dec
pop
and
out
push
xchg
add
or
orl
inc
jg
jg
insl
jb
repnz
pop
and
add
orps
sub
cmpsb
scas
aam
mov
lret
cmp
int
cmp
add
add
or
test
cmp
mov
xor
sbb
rclb
xchg
pop
inc
sbb
cltd
ret
rorl
add
stc
fcoms
or
push
rdpmc
or
sbb
jle
rclb
add
por
xchg
pop
call
sub
adc
xchg
inc
insb
adcl
or
in
ret
inc
inc
push
xchg
xchg
inc
and
add
add
cwtl
adcl
popa
push
cltd
xchg
cmc
shrl
and
and
push
nop
aaa
pop
loopne
test
fstl
pop
cwtl
and
je
or
add
bound
loopne
cld
adc
loopne
imul
inc
inc
je
mov
sbb
pop
or
shll
call
addb
push
jmp
dec
test
jl
out
push
lods
aad
xor
ficompl
add
adc
pop
shlb
sti
mov
sbb
out
inc
sub
sub
jle
mov
xchg
popf
add
jecxz
movsb
or
xchg
cmc
add
aam
cmpb
sub
add
pop
daa
dec
pusha
and
add
push
mov
fdivs
cmc
ja
stos
xchg
jbe
pusha
push
std
pusha
sbb
cmp
xor
mov
sub
pop
aam
adc
sub
cli
add
adc
pop
or
sbb
push
clc
xor
in
jno
and
lock
inc
inc
lock
negl
rolb
mov
imul
movsl
or
xor
mov
dec
enter
push
bound
and
xchg
pop
js
add
test
loop
rcl
in
inc
push
xor
push
push
dec
int
bound
pop
and
bound
push
adc
dec
test
ja
jnp
insl
inc
shl
fistpl
jnp
mov
push
sarb
pushf
fmul
mov
add
cmp
das
jne
push
adc
lds
adc
or
push
cmp
dec
add
xchg
adc
test
mov
xchg
adc
fdivs
ss
ret
in
loop
mov
or
xor
in
mov
sbb
push
test
or
insl
or
lock
dec
cmpsb
xchg
xchg
and
add
and
add
xor
mov
popf
and
adc
sbb
fldl
test
ret
in
dec
push
lcall
mov
mov
jnp
pop
test
xorb
push
push
inc
or
out
or
mov
out
xchg
pop
or
sbb
sub
fisubrl
fistl
xchg
or
mov
call
ret
add
cs
push
ret
ret
xchg
adc
pushf
cli
or
xor
mov
jg
cmpl
and
inc
out
lret
aas
cmp
into
mov
mov
mov
testl
nop
or
data16
pusha
sarl
push
call
jl
cmp
fsubp
and
adc
out
xchg
and
pop
xchg
adc
or
test
setl
loope
jb
filds
mov
sbb
arpl
aas
jno
shl
sbb
sub
mov
or
mov
outsb
mov
lret
aam
inc
insb
mov
adc
shll
mov
jge
cmpsl
cmpsb
xchg
mov
inc
pusha
movsl
or
inc
popa
stc
shlb
hlt
xor
inc
test
jns
push
test
cltd
cmp
push
cmpsb
daa
rol
or
sub
iret
or
orb
dec
loopne
push
mov
fiadds
insb
adc
sub
fnstsw
push
lock
clc
sbb
enter
lcall
xlat
pextrw
xchg
lods
aaa
and
push
pop
out
dec
xlat
inc
add
pop
push
leave
push
stos
adc
adc
or
fisttpll
mov
inc
xchg
push
inc
mov
and
jo
mov
ret
inc
lods
add
and
jge
cmp
and
jle
jge
push
and
mov
enter
cwtl
ds
add
test
insb
call
sbb
mov
push
inc
sbb
pop
adc
lahf
jnp
cmp
or
fistpl
sbb
mov
or
inc
hlt
or
push
sahf
add
add
adc
aas
ret
xorb
adc
sarb
and
out
and
cld
inc
push
xor
cld
cld
inc
add
sub
xchg
cld
cld
cld
and
add
in
sahf
inc
xlat
inc
movb
add
push
mov
int
aas
mov
andl
sbb
pop
outsb
shlb
push
dec
hlt
sbb
xchg
add
or
das
pop
push
enter
das
lcall
iret
fadd
push
lods
adc
imul
sti
test
jle
pop
sub
xor
adc
adc
movl
mov
and
lock
xchg
dec
cli
sbbb
mov
xor
dec
enter
push
pop
xor
test
ds
push
xor
or
roll
test
cmp
push
and
lahf
add
int3
cmc
imul
xorb
dec
sti
aam
call
mov
push
dec
popf
pushf
pushf
pushf
xor
pop
jle
cmpsl
or
push
inc
pop
mov
scas
cwtl
pop
inc
and
lds
jp
pop
sub
adc
test
pop
mov
mov
enter
sbb
aas
push
fcmovnb
dec
cs
jbe
pop
dec
dec
push
nop
in
dec
dec
cwtl
in
sbb
pop
dec
jnp
sbb
jne
push
push
fcom
push
fsubrs
jns
es
push
or
push
sbb
and
inc
sbb
dec
jo
xchg
movsl
inc
cmp
pop
iret
fwait
mov
aad
dec
insl
movsl
xor
mov
dec
mov
adc
inc
js
add
out
or
sbb
xor
push
call
pop
xchg
iret
cmp
xchg
mov
mov
sti
out
jl
or
jle
mov
cmp
pop
or
add
mov
cmp
pop
cmp
int3
sub
aas
pop
cmp
xabort
clc
mov
dec
mov
or
cmpsb
adc
xor
or
add
inc
mov
fs
sub
and
pop
stos
nop
in
cmc
pop
jg
mov
pop
sbb
mov
push
das
cmp
cs
cmpsb
mov
add
les
adc
lret
dec
cltd
mov
xor
push
inc
rol
inc
add
jg
in
mov
insl
add
in
adc
jbe
pusha
add
xor
xchg
cmp
sub
push
mov
sbb
adc
jne
adc
mov
mov
dec
xchg
mov
loopne
mov
div
sub
loopne
sub
into
ror
or
out
loopne
jne
jbe
ret
call
les
adc
xchg
leave
sbb
js
cmp
jne
adc
adcb
jno
jno
mov
rorl
lahf
and
mov
negb
mov
inc
sbb
ret
mov
cmpl
sbb
mov
frstor
xchg
and
cmpsl
or
lods
loop
inc
adc
pop
jl
adc
dec
mov
add
aam
pop
jle
outsb
insb
sbb
xlat
inc
sbb
add
push
lds
jne
aam
inc
shll
or
mov
jo
int3
jne
cmpl
es
mov
adc
push
pop
lahf
cmpsl
mov
jb
push
push
xor
cmp
xchg
aad
in
call
shrb
mov
add
pusha
dec
or
ror
or
xor
jae
cmpsb
out
movsb
add
jle
divb
aam
sbb
movsl
mov
inc
ljmp
call
loopne
jne
in
test
sub
loope
mov
aas
mov
lds
jp
and
loop
movswl
xor
insl
loope
inc
dec
pop
int
popa
outsb
iret
insb
dec
pop
in
xchg
push
mov
cmp
or
and
or
push
jecxz
sti
cmp
pop
pop
sbb
scas
or
and
jmp
mov
clc
pusha
mov
outsl
mov
enter
xor
dec
jmp
sub
xor
dec
and
jbe
iret
and
mov
pushf
sub
out
dec
jnp
imul
push
inc
insb
and
in
inc
rclb
or
icebp
or
mov
and
mov
mov
addr16
add
inc
sub
mov
ds
pushf
es
xchg
or
dec
cmp
testb
jno
ror
sub
cmp
nop
dec
enter
jmp
adc
xor
mov
sub
xchg
cli
xchg
push
mov
sub
adc
fldenv
lar
dec
jae
das
jmp
add
cld
pop
sar
sub
rolb
xchg
push
jecxz
cmc
cpuid
and
add
or
hlt
push
pop
fcmovu
lods
lcall
in
adc
mov
pushf
fmul
push
sbb
icebp
mov
adc
push
lock
out
xor
push
loop
jmp
sbb
xor
pop
sub
test
into
push
mov
ret
enter
in
or
jne
lods
imul
mov
cld
push
dec
cmp
rclb
xchg
add
sub
cmp
loop
push
push
gs
mov
mov
mov
inc
sub
inc
and
inc
or
xor
lock
sub
pop
pop
insb
insl
roll
jmp
sbb
sub
jo
sub
adc
hlt
je
sahf
pop
dec
es
roll
insb
mov
cmp
fsqrt
and
jge
cmp
lods
or
ss
imul
xor
test
clc
ror
jbe
jecxz
lock
fbstp
push
popa
mov
pop
js
mov
dec
mov
sub
push
pop
hlt
je
clc
or
adc
add
ret
sbb
xlat
cmp
unpckhps
subl
fmuls
pusha
and
xor
pop
insl
filds
lahf
mov
rorl
mov
mov
adc
cltd
sbb
pop
pop
lea
gs
xchg
mov
dec
shlb
dec
mov
lock
add
fwait
clc
addr16
sarb
iret
clc
into
lods
inc
add
add
and
and
mov
inc
inc
es
xlat
xlat
jge
in
dec
xlat
inc
sbb
fucomip
pop
sbb
insb
sbb
jb
sbb
in
shlb
sbb
sub
pop
pop
xchg
mov
outsb
xchg
je
in
add
test
add
xor
sub
inc
cmp
or
repz
adc
test
stos
jo
inc
or
push
leave
dec
dec
push
dec
add
je
movsb
pop
jmp
mov
xorb
subl
pop
cmp
add
cltd
stc
sbb
and
inc
mov
loope
hlt
add
xlat
mov
ds
sub
push
sub
lods
and
nop
sbb
test
or
adc
inc
add
xor
mov
mov
inc
sbb
movl
lock
enter
push
xchg
or
mov
mov
jns
adc
mov
fldl
push
aas
movsl
bound
dec
pop
sbb
adc
push
jbe
js
xchg
out
loope
add
enter
imul
jmp
xchg
rcrb
push
xchg
sbb
push
lock
loopne
cmp
sbb
fwait
into
leave
je
pop
arpl
mov
pop
enter
adc
add
adc
xchg
rcrb
pop
mov
ret
fcom
test
in
or
or
leave
or
test
or
xor
es
cmp
in
sub
mov
test
dec
xor
in
dec
add
push
ret
adc
and
push
dec
add
push
roll
rclb
mov
insb
test
pop
jne
pop
jmp
outsl
adc
mov
jge
pop
xlat
xor
and
mov
test
mov
cmp
or
movl
and
inc
js
test
xorb
fadd
or
or
add
cmp
push
xor
dec
popa
test
add
orb
ja
ror
inc
add
pop
mov
scas
arpl
daa
or
mov
mov
call
lea
daa
cmp
and
lea
mov
sti
orb
and
stc
pop
rclb
sti
loopne
sbb
mov
pop
test
adc
sub
or
mov
inc
dec
dec
dec
inc
ljmp
adc
fiadds
lock
cltd
xor
inc
mov
or
insl
jno
jb
inc
hlt
add
and
sbb
hlt
mov
imul
inc
movb
add
into
cmp
push
push
mov
xor
sub
adc
test
lret
sub
add
push
sarb
and
movsl
xchg
sub
sbb
dec
push
scas
int
test
fs
mov
adc
cwtl
sbb
sub
jecxz
inc
and
fs
rcll
mov
sbb
dec
push
ret
push
leave
sbb
adc
int3
lods
mov
les
je
fmull
jmp
push
cmpsl
mov
sbb
or
push
enter
aam
pusha
adc
fimull
inc
ret
and
cmp
dec
int3
cmp
mov
enter
lret
shlb
sbb
xchg
outsb
pop
adc
mov
mov
sub
scas
lods
inc
pop
das
push
shlb
repnz
insb
xorb
xor
or
repz
aam
inc
aam
dec
cmp
stos
ljmp
dec
cmc
mov
ret
push
fs
sbb
xor
sbb
push
push
js
pusha
lods
mov
lahf
and
rcrb
into
ljmp
sub
sbb
pop
xor
js
and
js
out
fisubl
adc
sti
or
leave
dec
lods
dec
cli
adc
nop
nop
mov
dec
mov
dec
mov
sbbb
ljmp
xchg
or
out
xchg
mov
xchg
mov
pop
lock
inc
mov
mov
loop
pop
cs
pop
adcb
adc
dec
push
fs
nop
cmp
pop
mov
add
sub
add
mov
adc
inc
loop
lock
mov
jnp
aad
add
out
or
mov
push
push
sbb
xchg
loop
in
dec
fwait
ret
push
mov
ljmp
adc
jle
movsl
fdivr
xadd
pop
subl
je
and
mov
adc
sub
jmp
xorl
test
adc
inc
iret
xor
add
test
mov
sbb
xchg
pop
aam
dec
pmullw
pop
fsubrs
pop
in
or
repz
fdivs
popf
cld
ret
and
pop
adc
or
add
xor
push
push
xor
xchg
and
adc
sbb
inc
or
rorb
rolb
clc
sub
inc
xchg
mov
dec
adc
inc
adc
xor
inc
push
pop
js
adc
and
repnz
mov
push
mov
add
sub
daa
mov
inc
or
pop
test
jmp
jecxz
xor
cmp
hlt
inc
ficomps
xchg
jg
je
in
add
adc
rcl
mov
or
inc
js
dec
mov
fdivrl
pop
fstps
cmpsb
daa
into
mov
popf
or
sbb
sbb
adc
jle
imul
lods
push
sub
cmp
adc
cmp
imul
sbb
cmc
sub
pop
mov
jb
insb
out
jbe
sbb
out
add
or
add
xchg
pop
mov
mov
dec
icebp
add
lock
or
shl
andb
pop
adc
je
sub
mov
icebp
scas
enter
mov
push
fcomps
pop
mov
shrb
sub
mov
or
ss
mov
clc
movl
sbb
pop
cld
js
mov
ret
mov
sub
fadds
pop
inc
adc
into
push
test
repnz
lods
cmpsb
rclb
enter
cltd
xor
adc
adc
jg
inc
inc
bound
mov
jbe
push
add
sub
push
ljmp
sub
test
or
scas
lock
inc
xor
jecxz
rorb
add
sbb
pop
fdivs
arpl
fimuls
xchg
and
ficomps
lea
js
mov
adc
iret
loopne
cmp
push
lods
ja
xchg
repz
cli
orb
inc
mov
push
mov
outsl
push
jg
mov
das
test
sbb
or
shrb
loope
mov
lock
sbb
mov
sti
dec
pop
es
inc
mov
sub
or
push
in
shlb
arpl
and
call
lret
loopne
iret
movb
mov
xor
rcrb
ret
adc
enter
aaa
or
pop
dec
out
fcmovnb
cmp
pop
pop
add
sti
xor
xor
ja
cmpsl
or
push
xchg
sbb
dec
push
add
mov
addl
sbb
dec
insl
cmp
movl
sbb
lods
jno
inc
mov
lret
jae
je
fildll
jmp
xor
mov
xchg
movb
sub
rolb
out
or
inc
jmp
test
push
jecxz
ret
imul
and
addr16
cmp
je
xor
test
jb
movsl
or
sarl
nop
stos
aas
rorl
dec
aaa
dec
stmxcsr
cwtl
pop
mov
fstpt
pop
popl
xor
inc
xlat
pop
xchg
dec
adc
je
push
xchg
add
testb
push
dec
xchg
call
pop
push
leave
pop
sbb
pop
mov
inc
add
add
and
clc
pop
cltd
or
cmp
xchg
or
pop
pop
icebp
into
pusha
leave
xchg
or
adcl
mov
fmuls
ror
mov
sti
pop
cwtl
rol
in
cmp
hlt
sarl
or
push
popf
js
pop
inc
sub
aas
pop
mov
push
std
adc
jle
lcall
outsl
popf
cmp
daa
pop
and
addl
sub
outsl
pop
or
and
test
test
je
mov
mov
jb
sbb
pusha
cltd
mov
es
in
xor
push
fnsave
gs
fists
pop
and
ret
jmp
pop
stos
mov
movsl
push
or
popf
jno
jg
inc
jg
sbb
add
je
xorb
insb
stos
lea
cmpb
adc
ja
xor
dec
inc
movsl
fwait
mov
ja
xor
subb
ds
cmp
pushf
or
std
leave
ja,pn
sbb
inc
aaa
sbb
test
faddp
adc
loope
jmp
push
into
or
jecxz
add
imul
inc
jecxz
push
addl
icebp
push
jnp
lds
clc
cmp
sbb
cmpsl
cli
sbbl
mov
insb
pushf
mov
add
inc
inc
push
jo
daa
ds
mov
mov
test
pushf
jnp
cmpsb
and
adc
adc
cmpsb
add
sub
imul
xchg
cld
out
test
popa
call
add
test
je
or
leave
fiaddl
jle
ja
xchg
fdivrs
and
pop
cmc
movb
ficomps
daa
cmp
mov
das
aas
add
out
sbb
and
nop
adc
pop
mov
movsl
sub
outsb
pop
jmp
mov
fidivs
das
or
mov
faddl
movsb
popa
insb
lcall
push
jo
inc
lcall
add
hlt
leave
push
mov
insl
iret
pop
in
rolb
mov
cmpsl
mov
pop
add
sub
sti
cmp
popf
iret
adc
repz
jne
cmp
sbb
dec
xchg
push
mov
in
movsl
xchg
sbb
dec
frstor
es
jle
das
cmp
cwtl
xor
mov
and
sbb
call
sbb
push
scas
cmpl
ret
std
clc
loopne
and
sti
shll
mov
dec
or
movsl
clc
xor
test
xor
in
jecxz
jmp
inc
push
adc
jbe
adc
mov
pop
arpl
lea
and
add
add
dec
push
outsb
dec
test
mov
inc
lds
ja
xchg
sbb
dec
mov
orl
outsl
jno
scas
mov
test
sbb
add
inc
daa
scas
repnz
pop
cmp
push
push
mov
sbb
jge
xchg
movsb
mov
sub
or
lods
dec
pop
cmp
je
mov
fs
loop
adc
jecxz
in
push
add
xchg
push
adc
cmp
jmp
mov
or
repz
movsl
sub
les
lret
push
rcll
fldt
push
fwait
rcr
xchg
outsl
ret
dec
sbb
cmp
and
ret
sub
fwait
inc
add
aas
push
xor
leave
inc
dec
push
leave
shl
rclb
pop
jo
jmp
dec
jno
and
and
mov
and
push
test
leave
leave
mov
hlt
in
inc
sub
dec
sbb
clc
clc
inc
dec
inc
ds
lret
add
les
jno
insb
outsb
or
das
xchg
xorl
fs
push
and
inc
das
mov
mov
lret
adc
iret
test
sub
mov
lods
or
cmp
inc
cmp
add
push
push
adc
insl
push
cmp
or
dec
add
dec
push
ss
sbb
in
sbb
xchg
jns
cmp
xchg
outsb
or
repnz
cmp
xchg
dec
in
add
sub
add
sbb
mov
jo
adc
push
faddl
in
shll
inc
push
push
shlb
mov
add
push
test
or
repz
ret
aam
pop
loope
div
rcll
je
les
dec
mov
inc
dec
iret
mov
inc
shll
jge
or
outsb
sbb
mov
jns
enter
adc
pop
fidivrl
push
lret
popa
loop
or
lds
fcmovnb
mov
pusha
daa
push
push
xchg
push
dec
cmpsl
jno
add
rcll
jg
sbb
inc
enter
inc
jns
nop
inc
or
xor
aas
ffree
and
fstps
sub
cmovp
add
pushf
pop
sub
adc
aaa
sbb
enter
jmp
loop
sbb
push
movsl
ret
pop
and
js
jae
cmp
fwait
nop
mov
add
inc
pusha
fdivrs
adc
inc
jge
test
aam
dec
adcb
add
fistps
push
push
cmp
jne
cmpb
iret
adc
dec
test
xor
sub
dec
subl
cmp
stos
or
and
arpl
xchg
mov
ret
adc
inc
stos
pop
mov
es
add
add
xor
das
hlt
punpckhbw
bound
ror
add
sti
pop
and
cmp
push
and
test
xor
xor
mov
inc
dec
inc
jmp
rclb
test
mov
pop
fwait
das
aam
adc
sbb
mov
dec
sub
or
sbb
clc
std
in
pop
sub
and
mov
cld
adc
out
push
mov
in
jbe
inc
push
cmpsb
dec
mov
mov
mov
addl
mov
insb
pop
sub
push
dec
mov
test
dec
and
or
cmc
add
cmc
inc
cmpsl
push
inc
push
cltd
cmp
test
sbb
es
xchg
mov
sbb
aam
or
ja
mov
dec
and
lahf
xchg
mov
inc
insb
and
mov
cmp
push
addb
push
inc
push
pop
std
outsl
popa
push
xlat
shlb
jmp
inc
mov
outsb
ljmp
in
xor
or
mov
cwtl
mov
smsw
subb
xor
dec
jl
mov
mov
cmpsb
push
fsts
pop
cmpsb
dec
dec
xor
inc
daa
mov
push
ja
mov
in
and
loopne
test
sub
sub
lods
jbe
imul
clc
dec
dec
adc
cltd
stc
or
fwait
xchg
dec
frstor
scas
cmp
jne
xchg
loopne
mov
adc
rolb
sub
inc
pop
xchg
mov
mov
sbb
xor
dec
fistps
mov
push
pusha
adc
adc
or
daa
cmpl
imul
mov
mov
jg
mov
sbb
mov
xor
repnz
dec
adc
lock
shrl
ds
and
inc
faddl
data16
daa
out
mov
xor
mov
add
sub
adcb
into
jbe
jp
sub
ret
xlat
inc
loopne
pop
pop
movsb
loopne
xchg
insb
jge
daa
inc
push
mov
les
fsqrt
pop
repz
mov
aad
xor
dec
jge
and
jmp
add
dec
adc
test
add
lret
insb
mov
pop
mov
hlt
and
dec
inc
push
arpl
inc
jge
push
mov
out
fcoms
lock
arpl
or
or
js
or
scas
jne
rcl
std
cmpsb
pop
ss
add
and
add
pop
sar
xor
js
jge,pn
mov
sub
jmp
stc
ret
pop
shlb
adcb
cmpsb
lock
shrb
insl
imul
mov
pop
jns
idivl
sub
add
cmp
scas
mov
mov
and
xchg
imul
fnstsw
add
mov
sbb
ret
or
xlat
or
mov
pop
inc
rcrb
jae
je
ljmp
dec
push
das
cmp
xorl
sti
add
imul
cli
test
and
mov
mov
adc
jmp
mov
cld
cwtl
add
or
add
sub
sub
mov
or
sbb
in
mov
popa
mov
pushl
sbb
movsb
movsl
addb
cltd
cmp
and
mov
jp
inc
aas
push
flds
and
adc
and
pop
fcoml
daa
pop
cmp
add
adc
xor
loopne
jne
jp
and
cltd
cmpsb
or
add
aam
insl
int3
std
sub
and
cmp
ror
jge
sub
inc
ret
jnp
daa
nop
lock
jle
jae
jmp
jo,pn
or
add
or
lret
dec
add
fld
stos
dec
or
push
inc
or
lea
scas
or
lahf
test
repnz
lea
mov
xor
cmc
or
ds
adc
sub
rcrb
push
aam
mov
and
push
adc
mov
push
mov
mov
cmpb
adcb
fucomi
sbb
adc
xchg
xor
xchg
xchg
xchg
xor
loop
aad
push
sbb
inc
pop
ljmp
dec
pop
out
scas
je
adc
inc
movl
call
mov
repnz
mov
fdivs
sub
insl
and
loope
pop
dec
add
mov
lock
xchg
loopne
add
scas
std
lock
sbb
push
add
adc
shlb
insb
nop
insb
jo
in
jl
push
imul
mov
sahf
mov
ss
or
adc
push
xchg
jmp
xchg
aam
mov
xchg
sbb
lds
add
shrl
movsl
inc
cmp
test
pop
sbb
xor
add
mov
jge
mov
imul
xor
loopne
rcr
test
cmp
call
rcl
dec
cwtl
dec
sti
pop
cld
outsb
inc
cmp
je
test
aaa
lds
sub
sbb
sub
lret
dec
sbb
adc
or
xchg
add
loop
inc
insl
test
nop
pop
nop
test
fs
sub
dec
lret
clc
sbbb
fiaddl
xchg
pop
push
aad
fiaddl
ljmp
gs
nop
add
stos
add
enter
mov
inc
add
jecxz
je
bound
lods
push
int3
outsb
cltd
add
push
ret
sbb
ja
jl
add
test
mov
pop
adc
add
cmp
mov
sub
mov
adc
lcall
mov
pop
lret
les
inc
add
repnz
out
and
sub
jl
pushf
dec
cwtl
jns
add
rorb
cs
addb
or
jb
fs
outsl
decb
cli
sbb
xchg
xchg
sti
cld
std
decb
xchg
aam
add
inc
mov
pop
add
add
fists
add
and
out
jbe
mov
scas
aas
adc
or
adcb
mov
rcr
lea
fnsave
stos
in
sbb
inc
xlat
or
add
xor
pusha
fmull
inc
dec
je
add
xchg
nop
gs
mov
ret
pop
pop
dec
gs
jb
insb
pop
pop
sbb
daa
addr16
add
fldenv
or
sub
cmp
rorl
xor
and
jbe
xchg
adc
add
jle
pop
clc
inc
jne
cmpl
mov
outsl
fdivrp
mov
sbb
loope
push
icebp
mov
pop
and
xchg
dec
dec
pop
adc
movsb
cmpxchg
pop
mov
cltd
sub
repz
xor
std
fs
out
jbe
hlt
dec
rcrb
jmp
movsb
and
orl
jns
sbb
xchg
adc
mov
sti
add
pop
les
dec
and
inc
or
enter
adc
inc
xchg
mov
fdivs
movsl
lret
cmc
push
sub
scas
jb
test
or
hlt
iret
sub
push
push
aaa
cli
movsb
mov
pop
fstpl
xchg
dec
aam
adc
push
insl
push
cmpsl
push
or
cs
push
push
cmpsb
push
iret
sub
in
dec
movsb
xchg
movl
mov
dec
and
sub
stos
cmp
or
xchg
sbb
or
test
cmpsb
inc
add
mov
and
lea
pushf
or
adc
add
sub
xor
ret
sbb
pop
adc
pop
mov
jae
jno
dec
fs
jmp
mov
ljmp
cli
or
pop
out
sbb
dec
push
xor
sub
je
xchg
add
vmptrld
aas
loope
mov
cmp
fstpl
arpl
adc
ja
in
rol
sbb
lock
out
hlt
mov
je
fwait
xchg
ret
dec
push
push
mov
push
xor
aaa
push
sti
cmp
imul
subl
lea
mov
mov
push
xchg
loop
daa
add
dec
cld
movsb
repnz
mov
dec
cld
inc
and
adc
pop
add
add
arpl
cmp
cld
loope
roll
push
push
stc
jne
pusha
push
dec
lret
imul
dec
gs
jo
mov
mov
cltd
movsb
mov
sub
dec
add
adc
xchg
pop
inc
js
adc
fs
cmpl
into
add
dec
xlat
sub
int
movsb
movsb
mov
jae
dec
sbb
fs
mov
jae
loopne
sub
mov
dec
das
fldenv
mov
mov
xchg
andl
mov
push
add
jmp
nop
mov
and
adc
outsb
and
lock
es
sbb
push
xor
in
call
mov
pop
mov
std
sbbb
xchg
scas
in
nop
aam
inc
in
lock
cmp
je
inc
mov
add
jo
lcall
xchg
xlat
shl
enter
jle
cmp
jle
add
add
pop
or
cmpsl
lcall
mov
dec
out
xchg
inc
outsb
test
in
xor
call
mov
test
and
and
js
cli
push
inc
cmp
call
or
fnstcw
cmp
loope
jne
push
lea
hlt
or
xor
testl
add
adc
jle
js
or
call
push
ss
adc
jnp
push
push
pop
repz
inc
cli
cmp
jne
jns
push
push
or
fwait
iret
rorb
scas
scas
or
xchg
push
mov
mov
ds
inc
movsl
orl
pop
pop
xor
sbb
dec
sti
outsb
jae
push
adc
adc
movsl
out
or
pop
push
or
sbb
xchg
pop
sub
add
and
add
jg
mov
movsl
paddd
pop
imul
test
ret
or
aam
jge
mov
jnp
jo
pop
dec
jge
jne
lea
sub
les
repnz
or
cmp
mov
movl
in
aam
call
mov
ss
loopne
test
add
mov
sbb
inc
push
rclb
or
mov
adc
xchg
pop
pop
sbbb
dec
iret
push
mov
pop
xchg
mov
inc
add
or
enter
jo
adc
xor
shr
sbb
dec
out
icebp
adc
aaa
repnz
pop
imul
xchg
sbb
and
insb
cmp
mov
mov
add
inc
cvtdq2ps
loopne
arpl
jle
gs
les
les
xor
jo
adc
sahf
and
inc
dec
add
or
xor
xor
loopne
pop
call
or
pusha
jae
xchg
or
icebp
dec
in
lock
jecxz
insl
xor
add
push
fiaddl
fiadds
add
or
pop
js
loope
call
dec
stos
and
pop
mov
pop
jmp
jb
pusha
dec
and
hlt
mov
pop
ret
pop
leave
xor
and
adc
fsubrp
jnp
inc
jbe
arpl
movups
cmp
dec
push
int
cmpsl
sub
inc
int3
loope
inc
mov
cld
std
lahf
subb
pusha
dec
add
or
adc
add
fsubrs
sub
push
pop
rolb
pop
xor
pop
or
cmp
dec
mov
cmp
dec
aam
mov
subb
xchg
or
sub
mov
and
or
fld
xchg
lock
or
or
mov
sbb
jge
insl
loopne
xchg
add
call
pop
leave
roll
dec
call
push
lret
ret
xchg
sbb
scas
xor
add
adc
dec
nop
xor
aam
pop
insb
and
test
sub
je
cmp
jb
cmp
ja
pusha
pop
pop
inc
cmc
push
push
mov
jmp
add
pshufw
fistl
scas
push
je
push
jne
mov
lock
aaa
add
push
xchg
dec
test
fnstenv
sub
stc
and
fisubs
add
add
je
or
push
mov
pop
andl
fmull
sbb
lock
add
push
int3
pop
fbstp
mov
jmp
xor
xchg
push
sbb
clc
fcoml
add
pushl
xchg
inc
cmp
or
mov
add
daa
mov
cmp
leave
jmp
outsb
in
pop
push
mov
in
push
adc
pop
xor
ret
inc
pop
outsl
flds
jle
mov
fildll
add
js
repz
pop
hlt
lods
shll
cmp
xchg
daa
daa
mov
outsl
adc
xor
inc
inc
or
pop
cld
addb
int
and
pop
adc
sub
adc
mov
inc
mov
and
mov
push
xchg
adc
push
xchg
sbb
inc
mov
mov
inc
mov
ret
xchg
jp
insl
loope
loopne
mov
in
fmuls
add
add
mov
pop
inc
ljmp
add
cmpb
mov
add
daa
nop
dec
lret
imul
inc
fsubrs
dec
jl
mov
sub
jge
mov
inc
push
mov
iret
movl
jecxz
push
shrb
fs
cmp
out
arpl
pop
push
mov
fsubrp
in
pop
repnz
inc
in
lock
in
and
push
sub
ja
out
sub
sbb
test
popf
test
dec
aam
shrb
xchg
xchg
outsb
or
adc
test
add
pop
aas
push
es
sbb
adc
push
cltd
lock
xchg
sahf
out
pop
sub
add
sbb
out
out
sti
fwait
icebp
out
sbb
mov
adc
xor
fadd
add
adc
mov
add
xchg
xchg
shl
jmp
push
rcl
xchg
xor
add
cmp
fmul
repz
dec
pop
xor
push
insl
dec
push
cmp
repz
lea
ja
mov
push
rclb
mov
mov
mov
daa
out
and
mov
and
push
lock
sub
pop
sub
cld
in
inc
nop
fstps
and
testb
aas
cmpsl
add
jb
pop
out
nop
int3
jns
out
pop
addl
imul
lods
mov
add
xor
loope
repz
jns
inc
xchg
lock
lock
fdiv
jo
mov
daa
sbb
js
aam
insb
movsb
mov
push
sbb
aaa
inc
aam
add
repnz
pop
repnz
inc
outsl
inc
dec
push
sub
int3
xor
mov
xor
scas
repnz
inc
fmull
loopne
out
mov
mov
add
push
in
sbb
inc
mov
push
nop
push
inc
jle
mov
aas
in
repz
dec
add
rcrb
inc
setle
sbb
or
inc
pop
or
and
shl
inc
js
jno
es
push
out
enter
adc
movsb
mov
add
std
incl
or
movb
sub
sbb
push
push
and
dec
lret
fisubl
mov
popa
stos
imul
bnd
icebp
jmp
sbb
aam
in
cmp
lahf
rcrl
repz
mov
mov
aas
dec
jmp
aas
push
daa
imul
clc
clc
xchg
dec
jge
std
repz
sbb
addr16
mov
inc
outsl
inc
hlt
clc
add
mov
into
int3
call
and
cmp
ja
mov
xchg
js
adc
lods
pusha
sbb
lea
ret
add
pusha
mov
xor
pop
push
pop
outsl
adc
mov
add
subl
test
add
inc
adc
dec
adc
jge
repz
rolb
outsl
pop
xor
or
fisttps
mov
adc
rorb
filds
cmc
xchg
scas
push
nop
inc
addb
push
mov
mov
aam
jg
xchg
in
sbb
sbb
mov
nop
call
sub
clc
arpl
test
add
lret
mov
push
insb
fldcw
fsubl
sub
push
fdivl
adc
sbb
sbb
jbe
popl
fs
subl
sbb
pop
add
imul
je
cmp
xor
xlat
not
lret
and
jl
daa
jmp
popa
pop
adc
ret
push
mov
xor
mov
cmp
sub
mov
adc
jmp
sub
icebp
loop
adc
inc
or
fcomps
pop
sub
xlat
sbb
repz
idivb
add
lods
adc
aas
fisttps
cmpsb
stc
xor
mov
and
jns
ret
stc
loope
dec
dec
mov
dec
pop
pushf
aad
mov
loope
and
xchg
testl
loopne
add
or
ss
icebp
dec
sbb
mov
les
add
xchg
add
sub
xor
xchg
xchg
sbb
mov
arpl
dec
push
cmp
into
mov
jmp
add
and
xor
aad
push
inc
adc
aas
xchg
lods
add
in
stc
cli
fstps
rcrb
int
rolb
cs
fst
cld
movl
sbb
dec
aaa
fwait
out
loope
rorb
sti
fistpll
fwait
jb
mov
das
ret
push
imull
mov
seto
pop
dec
rcrb
pop
and
movsb
movsl
popa
frstor
in
add
nop
inc
push
lock
pop
je
popa
addr16
addl
push
jno
in
push
push
arpl
lcall
sbb
sti
add
jmp
ss
add
js
adc
mov
and
mov
dec
js
addr16
or
and
popf
movsl
inc
pushl
mov
jp
and
dec
clc
inc
cld
and
and
aad
xchg
cmpsl
add
push
inc
inc
lea
mov
aam
test
fnsave
push
fmuls
sbb
cmpsb
xor
jo
or
cmp
xor
je
and
leave
push
mov
dec
test
and
or
add
inc
fucomip
push
xchg
push
dec
outsl
push
jns
shll
sub
popa
mov
and
xchg
sbb
adc
fwait
aas
or
mov
daa
xor
fs
mov
mov
pop
test
adc
lock
icebp
ss
cmp
enter
sub
aaa
dec
sub
pop
cld
call
jmp
aam
sbb
jmp
lock
call
ds
outsb
dec
fdiv
mov
js
out
mov
xor
leave
mov
stos
and
rol
test
test
flds
xor
sbbl
lods
inc
imull
xchg
icebp
jle
je
sub
lds
dec
lods
cltd
push
out
ja
sbbb
mov
daa
jmp
fdivrp
push
or
nop
inc
fprem
rclb
sbbb
call
ret
mov
pop
adc
cltd
test
pcmpgtd
mov
or
add
roll
daa
or
jo
test
inc
push
mov
lock
adc
js
dec
sbb
test
push
imul
roll
sbb
adc
nop
cmp
incl
dec
and
push
pushl
push
scas
mov
and
push
and
movsl
aaa
add
pop
dec
popf
add
pop
and
mov
pop
negl
push
inc
pop
addb
lea
sti
dec
pop
mov
addr16
pop
or
sub
das
adc
sub
push
jae
rcrb
dec
dec
or
cmp
add
aaa
sbb
repnz
nop
das
sti
pop
cmpsl
imul
push
add
ret
test
rorb
rcrb
mov
mov
mov
xchg
inc
les
icebp
sub
xchg
xchg
sub
push
jmp
xchg
adc
cmc
scas
xchg
ljmp
mov
mov
adc
jg
rcrb
adc
xor
push
lods
cmp
push
sub
movsl
fsubr
stos
int
xchg
test
repnz
shll
pop
inc
lsl
add
fisubl
pop
and
bound
jno
in
add
sub
cmp
jae,pn
imul
adc
sub
sub
xorb
add
or
outsl
insb
gs
outsl
es
add
mov
add
mov
dec
test
imul
arpl
xor
aaa
dec
outsl
popa
xor
xchg
rcll
xchg
jnp
pop
lea
inc
xchg
mov
ds
xchg
lock
jp
pop
jmp
dec
inc
mov
insb
movl
sti
int3
das
mov
rclb
lea
push
and
ss
sub
imul
out
out
pop
sarb
cs
and
adc
sbb
mov
jmp
fldt
add
fdivs
std
fmuls
dec
and
fs
in
jo
xchg
decl
or
leave
leave
loopne
loop
in
loopne
fisttpll
mul
rorl
fmuls
clc
xchg
fcoml
in
push
add
or
enter
dec
adc
out
mov
add
xor
imul
or
or
imull
mov
fcoml
push
push
add
dec
sbb
ds
cmpsb
pushf
or
mov
cmpl
outsb
shrb
sbb
cmp
pop
sbb
mov
sub
ficoml
lret
push
fs
movsw
mov
lods
push
fs
into
sbb
cwtl
test
xor
jb
and
lods
test
and
pop
es
je
push
fs
orb
sbb
lods
mov
inc
rorl
add
nop
add
sub
add
xchg
add
and
xor
xor
nop
dec
mov
mov
enter
sbb
orb
mov
mov
adc
or
mov
fs
push
xchg
lods
les
fs
fsub
icebp
rdmsr
and
pushf
int3
pop
pop
dec
repz
sbbb
and
sahf
out
lcall
jns
out
lret
xchg
lahf
repz
out
orb
sahf
iretw
repz
jae
aas
dec
pop
in
out
jns
pop
icebp
decb
push
sbb
and
inc
or
sub
out
or
sarl
stc
push
or
and
cmp
repz
jmp
jg
stc
cmp
repz
cmpsb
mov
inc
or
repz
cmpsl
push
fs
push
add
mov
jns
cmp
addb
sub
or
adc
adc
lret
fwait
cmp
sub
mov
push
push
add
enter
mov
sbb
jno
pop
repnz
mov
test
pusha
sbb
addb
push
ss
pop
outsb
or
jp
mov
rcrb
push
and
pop
add
sahf
out
adc
pop
jns
out
mov
inc
les
inc
inc
aas
and
leave
sbb
and
xor
inc
add
repnz
adc
and
cmp
and
sbb
jns
or
and
jo
sub
and
xor
push
mov
cmp
scas
mov
and
mov
xor
sbb
and
mov
and
jo
push
enter
out
sub
xor
es
dec
test
fisubrs
fmuls
jmp
sub
push
sub
sub
xor
aam
cs
pushf
xor
push
rcrb
fwait
push
pop
and
add
mov
xlat
orb
jmp
mov
push
daa
testb
sub
lock
mov
mov
xchg
add
cmp
fstps
inc
lods
dec
out
mov
daa
xchg
lcallw
sbb
push
shl
and
orl
test
or
sbb
add
mov
push
mov
outsb
out
mov
xor
push
mov
sub
les
sbb
fninit
daa
xor
pusha
nop
les
jbe
daa
daa
jo
add
ret
popf
pop
or
jmp
and
jne
fimull
cld
cmp
push
test
dec
adc
sub
cmpl
jmp
and
inc
add
sbb
or
or
and
mov
sbb
mov
inc
and
or
pop
lret
mov
cmp
mov
sub
and
enter
push
outsl
aam
mov
imul
cmp
daa
push
push
shrb
inc
sbb
dec
ja
and
out
addr16
push
inc
stos
add
dec
xchg
push
push
test
dec
sub
adc
cmpl
test
pusha
pushf
xor
pop
mov
inc
es
dec
cmpl
add
mov
sub
test
daa
js
or
imul
ficompl
inc
adc
cmp
leave
or
and
or
sbb
or
nop
sub
lea
dec
add
pusha
je
jp
adc
dec
add
ficoms
push
outsl
xchg
jle
popa
in
push
mov
cmpl
pop
inc
push
mov
sub
dec
roll
sbb
mov
inc
cmp
mov
or
and
cltd
add
sbb
xchg
stos
test
in
and
jnp
adc
adc
sbb
pop
rorl
ss
or
mov
add
inc
lahf
imul
pop
fs
cmp
adc
bound
xchg
stc
outsl
sbb
fcoms
pop
xchg
jne
lret
dec
les
jecxz
sbb
sbb
ja
jge
mov
adc
push
inc
sbb
imul
pop
jb
leave
pop
inc
push
cltd
mov
out
jge
add
call
dec
and
aaa
xchg
dec
cmpsb
sub
push
add
fmulp
add
push
inc
pusha
pop
jb
mov
into
mov
push
cmp
adc
jmp
xor
lea
or
sbb
push
inc
add
aas
or
std
cmp
enter
add
lcall
repnz
push
int
cmp
cmp
or
pop
je
xchg
adc
add
mov
nop
nop
mov
les
and
pop
scas
fs
mov
add
jne
jae
xor
in
mov
or
out
inc
aaa
cmc
add
ret
mov
push
add
mul
inc
push
mov
sub
cmp
mov
lea
add
mov
xor
xchg
xor
test
sbb
sti
add
pop
in
jo
jmp
jl
inc
push
stc
in
mov
aam
adc
repnz
adc
pop
inc
inc
cltd
loopne
jg
adc
popf
mov
jecxz
leave
push
xchg
sbb
mov
sub
sub
and
loope
add
xor
xchg
adc
shll
dec
pop
inc
cmp
jae
mov
fcomp
ret
sub
mov
sub
jg
inc
adc
and
rcrl
call
sub
divl
loope
push
popf
add
push
mov
jno
sbb
sbb
pop
inc
sbb
xchg
push
movsl
mov
sbb
dec
jb
push
mov
jb
cmp
loop
jo
mov
jne
or
adc
inc
push
inc
pop
add
ljmp
add
mov
push
adc
jl
add
aas
push
cltd
sbb
mov
test
stos
xchg
mov
xor
loopne
xorl
hlt
sbb
sub
test
orb
sbb
popa
outsb
mov
ret
mov
xor
add
fisubs
mov
mov
jno
cwtl
inc
lahf
adc
xor
cmp
sub
adc
adc
and
and
outsl
jmp
inc
dec
or
sub
fs
dec
adc
xchg
push
out
je
fs
and
jnp
mov
lcall
cmp
in
jmp
sub
adc
sub
mov
pop
jno
xor
ljmp
sbb
adc
je
inc
cmp
jne
hlt
decb
mov
jns
xchg
jb
fcmovbe
xor
inc
outsb
adc
pop
or
adc
cs
mov
inc
add
ret
pop
in
aam
mov
in
and
lret
xor
add
xor
fmull
or
test
sbb
inc
mov
adc
fwait
out
leavew
mov
repnz
xchg
and
cmp
xor
xor
sub
add
add
adc
mov
jp
shl
dec
adc
test
sub
inc
adc
enter
mov
push
add
pop
into
adc
xlat
xchg
loopne
jmp
in
ret
inc
mov
push
inc
cmp
cltd
dec
sbb
movl
lds
or
xchg
mov
lock
cmp
mov
movsb
int3
das
xchg
xor
dec
test
xor
rolb
bound
jns
xchg
pushw
xchg
sbb
inc
adc
jne
lahf
scas
mov
fs
sbb
mov
and
pop
loopne
xor
push
mov
push
lahf
mov
jae
mov
cmp
ja
or
fwait
enter
dec
add
sarb
mov
dec
daa
inc
or
ret
ss
test
adc
fs
add
or
sbb
shll
hlt
cmpl
mov
inc
loopne
lret
insb
mov
or
int
rcll
add
add
mov
sub
adcl
test
adc
cli
or
stos
add
sbb
xorb
add
das
or
sar
xchg
mov
idivl
adc
sub
pop
scas
dec
add
gs
mov
adc
in
mov
and
add
jmp
adc
add
dec
mov
sarl
mov
adc
jp
mov
push
inc
push
call
bndldx
or
inc
cmp
push
icebp
sbb
nopl
incl
lret
push
dec
lea
add
add
ljmp
add
loop
dec
push
xorb
adc
pop
or
xor
adc
decb
js
xorl
push
adc
cmp
inc
pop
push
adc
cmp
icebp
js
lock
add
mov
popa
cmpsb
cld
pop
decb
mov
add
rorb
push
cmp
push
daa
push
inc
inc
sbb
adc
add
add
aam
or
pop
rclb
or
pop
fsubrl
clc
adc
jne
test
call
jmp
sub
push
mov
cmc
es
lret
xor
mov
xor
xlat
and
js
imul
xor
js
or
call
nop
xchg
pop
jge
rol
sahf
test
mov
push
pop
pop
or
inc
enter
push
dec
cmp
sbb
xor
stc
dec
loopne
add
xchg
pop
pop
inc
xor
lahf
push
in
fwait
inc
mov
xchg
rclb
dec
push
push
add
mov
mov
aad
and
in
push
pop
lock
daa
and
jne
jmp
incb
in
mov
es
jns
mov
inc
rcrb
xor
test
pop
jg
sbb
sbb
pushf
movsl
and
lods
sub
or
popa
lods
push
lret
inc
aas
sbbl
lods
and
cwtl
push
or
push
pop
orl
jmp
add
adc
or
xor
ja
inc
jmp
aam
pop
sub
jb
and
adc
mov
mov
mov
lock
adc
xchg
dec
outsl
and
hlt
test
les
push
movsl
dec
or
push
frstor
sub
xor
pop
pop
pop
and
mov
or
push
cwtl
inc
adc
in
cwtl
jo
shll
cmp
mov
pop
test
jmp
and
les
adc
fdivrs
clc
rolb
adc
je
mov
das
in
and
hlt
and
test
pop
test
mov
dec
cmpb
sub
add
push
pop
and
sti
and
dec
mov
jp
es
jmp
adcb
dec
leave
dec
mov
add
inc
cmpsb
mov
leave
stos
jg
sub
enter
xor
dec
inc
mov
lods
dec
pushf
or
or
add
loop
in
cmp
xor
add
es
sbb
sub
dec
dec
in
es
inc
sahf
push
xor
rorb
cmp
xchg
rcrb
push
mov
nop
add
add
addb
sub
or
jge
pop
xchg
push
icebp
pusha
and
ljmpw
inc
cmpsb
sub
mov
lret
xor
sbb
and
xchg
lcall
daa
lea
add
clc
cmc
mov
out
out
mov
je
fwait
dec
sbb
bound
mov
out
mov
add
dec
pushf
fwait
adc
shrl
jo
adc
adc
sbb
test
sub
mov
cmpsl
mov
adc
movsb
and
outsb
imul
push
nop
push
lcall
mov
lds
sbb
xlat
sub
add
push
nop
iret
mov
subl
sub
imul
ja
push
sbb
and
mov
jns
jl
cmp
cld
dec
clc
scas
clc
sub
out
sbb
and
mov
insl
xchg
sub
xor
inc
sbb
and
inc
adc
test
mov
fsts
mov
jbe
mov
add
jae
jbe
sub
pusha
lahf
add
dec
cld
sbb
push
ret
and
pop
xchg
imul
cwtl
or
dec
push
repz
lret
imul
ss
je
test
push
push
mov
imul
dec
jmp
iret
sub
aam
pop
dec
jne
xor
pop
jecxz
test
cmpsb
push
stos
mov
ja
cmpl
cltd
dec
inc
cmp
lock
repz
mov
mov
pusha
adcb
jp
icebp
loope
adc
daa
nop
repnz
sbb
mov
cwtl
lds
cmp
push
scas
or
xor
jbe
mov
inc
push
imul
sbb
push
inc
push
cld
jns
and
sbb
clc
sub
cs
cs
add
sbb
test
add
xor
or
sbb
jl
dec
dec
insb
cmp
jns
xchg
adc
pop
inc
cmpsb
out
pushf
popf
pop
pop
add
sub
shrl
lea
inc
clc
leave
or
or
fbstp
icebp
out
call
fwait
or
sub
jne
in
imul
or
add
orl
sbb
xor
cmp
iret
rcr
or
fstps
pop
mov
pop
add
stos
mov
sub
inc
cmp
sbbb
rorb
mov
insl
loop
pop
cmpsl
adcl
aam
push
xchg
push
imul
xchg
cmp
cs
jo
fwait
sub
test
jmp
movsb
mov
dec
outsl
pop
or
aam
cs
dec
pop
push
popa
and
lock
std
adc
adc
into
and
jnp
and
fldcw
or
xchg
inc
push
inc
push
es
fs
cltd
mov
and
mov
sbb
inc
push
std
mov
aam
mov
fs
incb
loop
insb
mov
pop
in
add
das
dec
loopne
adc
sub
in
sbb
jns
rorb
add
rorl
mov
push
push
insl
insw
cmp
pop
push
gs
sbb
sub
push
lock
mov
inc
and
popf
shlb
and
gs
iret
mov
aad
add
outsl
shl
sbb
je
mov
mov
iret
imul
fwait
dec
rcrl
adc
jp
add
stos
mov
inc
cmpsl
pop
das
inc
pop
lcall
sub
insl
lods
ret
cmpsb
push
mov
dec
pop
leave
push
xchg
or
mov
inc
loopne
add
xchg
mov
jo
push
push
mov
outsb
mov
daa
movsb
inc
aad
cmp
xor
ret
sbb
test
je
out
jno
sti
add
mov
add
jbe
or
pop
roll
test
dec
mov
aas
outsl
or
movsl
xchg
or
incb
add
mov
push
fwait
inc
add
jmp
add
jmp
flds
fmuls
add
xor
fdivrp
adc
in
flds
aaa
inc
sub
add
dec
inc
push
inc
lahf
sub
xchg
or
inc
lods
int
notl
push
jge
insb
adc
imul
sub
pop
lea
add
movsl
rorl
xor
es
lds
cltd
dec
adc
mov
pop
pop
mov
or
sti
jg
sbb
imul
xor
sub
xchg
aad
sbb
cltd
fisubrs
nop
cmp
push
out
or
add
add
pop
pop
xor
or
mov
lret
add
dec
push
dec
push
push
mov
xor
fcom
mov
xor
loopne
jne
xchg
outsl
and
adc
lock
lret
pop
xchg
int
mov
filds
add
mov
mov
out
or
or
sbb
jmp
fbld
aas
xchg
push
inc
sub
ficoml
xor
mov
cli
insl
xor
sbb
mov
daa
pop
fisttpl
adc
dec
hlt
and
insl
mov
outsl
sbb
daa
cmp
push
sarb
in
cmp
insb
inc
imul
jmp
sbb
sbb
in
pop
lods
fstps
inc
ja
insl
sub
shlb
sbb
mov
push
xor
dec
lea
aad
ja
cmp
or
or
fcomip
fbstp
daa
pop
aam
ret
into
repz
imul
jo
add
sub
iret
pop
cld
mov
mov
das
or
sub
push
push
add
mov
jbe
jnp
loope
out
sbb
pop
mov
push
js
cmpsb
sbb
fnstenv
inc
pop
and
inc
dec
fadds
sub
pop
adc
enter
xchg
ret
and
sbb
cmp
jmp
roll
add
sub
out
sub
daa
xor
arpl
push
pop
xor
leave
aas
mov
cmp
es
push
jl
sub
dec
ss
xchg
jns
inc
dec
or
test
mov
xchg
push
jge
cmp
add
xchg
push
dec
adc
cmp
sbb
inc
inc
mov
dec
xchg
jno
pop
outsl
in
sbb
leave
aam
cmp
dec
aam
dec
mov
pop
loope
test
add
orl
cmp
adc
jne
shll
popa
mov
insl
mov
mov
pop
dec
popf
arpl
aaa
fildl
xor
pop
add
out
and
sub
mov
lods
sub
enter
cmp
cmp
cmp
fdivp
pusha
or
cltd
sub
lock
push
inc
push
aaa
cmp
fidivrl
pop
xchg
inc
xchg
mov
lock
or
das
adc
jo
inc
pop
mov
outsb
outsb
push
sbb
sub
xor
cmc
subb
arpl
jne
xorb
sbb
sbb
jbe
adc
and
insl
ja
movb
adc
inc
je
xor
outsl
rcrl
and
lcall
push
enter
mov
or
push
adc
rorb
sahf
out
push
and
cmp
stc
stos
cmp
pop
push
inc
jmp
cmp
add
cs
adc
aam
dec
push
add
bound
ds
or
shrl
cmc
xchg
push
sti
lfs
sbb
in
or
push
add
push
lret
pushf
outsl
mov
sbb
inc
int3
push
lock
push
jl
dec
jmp
inc
inc
jecxz
repnz
inc
xchg
inc
insb
jg
inc
push
ja
inc
push
add
inc
dec
xchg
mov
add
xor
inc
inc
ltr
lods
cmp
add
sarb
push
shll
add
and
scas
pusha
dec
je
mov
psubusb
xor
adc
insb
dec
movsb
xor
out
and
leave
mov
fs
sbb
sub
es
pusha
push
jl
and
and
or
jnp
xchg
insl
les
fimuls
or
inc
sub
push
enter
sub
sub
dec
push
sbb
xchg
pusha
sbb
je
dec
cmp
inc
cld
push
push
cmp
inc
xchg
lods
push
xchg
jo
xor
add
add
movsl
xchg
dec
or
pop
mov
cltd
jo
and
int3
aas
enter
inc
fsubr
das
imul
arpl
push
and
dec
push
cmp
and
enter
je
push
and
stc
add
push
and
add
mov
push
mov
sarl
xor
cmpsb
sbb
inc
sarl
push
jo
pop
xor
and
dec
aas
dec
jge
mov
xchg
add
inc
jb
movsb
lea
mov
mov
call
jmp
cmp
mov
inc
mov
xchg
lock
sub
les
push
loop
add
sub
or
jbe
dec
cmp
xlat
leave
ret
jmp
inc
aam
jns
push
inc
mov
add
inc
ja
sub
jb
lods
stc
add
leave
insb
outsb
dec
bound
movsl
jno
mov
sbb
jb
mov
in
xchg
add
cmpsb
xlat
push
call
aam
test
inc
popf
pusha
movsl
xor
xchg
dec
test
int3
dec
jmp
cli
mov
sbb
add
inc
pop
sub
and
outsl
ljmp
inc
lock
shl
mov
dec
or
in
dec
sbb
aaa
insb
sbb
add
mov
cs
cmp
mov
sbb
cmp
ss
ret
rcll
mov
pop
xor
pop
dec
pop
jb
cmovbe
inc
and
inc
inc
cmp
inc
and
adc
ss
xchg
mov
fldl
bound
push
movsb
les
sub
adc
mov
push
dec
mov
jne
notb
sbb
shlb
scas
sub
add
xchg
je
dec
lahf
cwtl
outsl
or
cmp
mov
or
scas
int
adc
leave
loop
adc
xchg
cld
ds
int3
data16
push
pusha
popa
call
movsb
mov
xchg
and
add
loopne
dec
movsl
mull
push
rclb
sahf
sbb
dec
outsb
cmpsb
fwait
add
inc
and
mov
or
cli
movsl
pop
aad
lods
iret
test
push
sbb
sbb
pop
dec
loopne
aam
stos
push
or
add
int
cmpl
call
je
sub
xor
ret
sahf
outsl
xchg
or
inc
das
jmp
cmpsl
sbb
jnp
or
imul
cmp
test
add
or
adc
push
push
dec
sub
adc
inc
jae
bsr
cmp
add
aaa
inc
je
aam
mov
xchg
mov
xchg
aaa
xor
aam
and
pusha
inc
mov
loop
add
mov
test
scas
loope
jmp
sarb
imul
outsb
jnp
add
nop
add
xchg
scas
test
cmp
rcrb
dec
outsb
mov
movsl
cmp
rorb
push
inc
inc
ljmp
sbb
sub
xor
scas
pusha
push
fcmovu
add
sub
push
push
mov
aam
adc
cltd
pop
movsl
pop
or
fwait
out
push
xor
je
sbb
out
jbe
xchg
sub
or
aas
xchg
dec
testl
dec
cmpsb
push
add
push
cld
into
pusha
or
ss
inc
je
inc
add
rorb
sbb
xorl
sarl
cmp
out
sub
jge
arpl
insl
or
prefetch
nop
or
push
sbbb
sqrtps
xchg
pop
adc
sub
arpl
adc
or
leave
push
inc
sbb
push
push
pop
nop
or
lret
xchg
cs
adc
mov
mov
sbbb
inc
lahf
mov
xchg
xchg
sbb
cli
fs
adc
xchg
sbb
dec
sahf
ja
jno
nop
pop
and
inc
or
dec
sbb
aad
stos
cmp
sub
xchg
xchg
push
inc
dec
sub
cmp
add
js
data16
mov
mov
and
in
push
imul
daa
and
lea
inc
xchg
push
sub
jge
and
add
imul
xchg
mov
inc
jo
mov
sub
push
ret
or
xchg
sub
in
sub
and
mov
push
add
rcrl
stos
sbb
jo
sbb
add
andb
out
js
sub
adc
imul
pop
sbbb
xor
add
lock
push
cmc
push
dec
faddl
outsb
in
or
jmp
popa
sub
push
ja
pop
in
pop
cmpsl
test
popa
mov
cmpsl
loopne
jecxz
sub
mov
cmp
mov
repz
adcb
add
gs
les
popf
pop
fs
ljmp
loope
mov
mov
insl
jo
xor
lret
and
inc
sub
repnz
jge
push
subl
push
jne
lcall
xor
repnz
shlb
repnz
sub
adc
inc
fcomp
jns
sub
xor
pop
inc
loopne
mov
in
in
push
fisubrs
ss
mov
dec
lock
shll
lods
and
inc
iret
xchg
nop
pop
mov
xor
cld
es
sbbl
dec
adc
enter
dec
int3
sbb
and
and
add
xchg
xchg
push
adc
mov
out
adc
ja
mov
or
push
inc
mov
inc
loop
mov
inc
jno
add
dec
jnp
xchg
mov
mov
xor
push
push
popf
xor
dec
imul
add
inc
and
cmpsl
in
sub
push
and
popf
or
outsl
sbb
enter
sub
nop
dec
push
push
xor
xchg
and
xchg
sti
aad
add
sub
pusha
pop
add
add
fadd
pop
mov
lds
xor
ss
jecxz
pmulhw
and
out
scas
sbb
dec
push
and
cmp
mov
mov
pop
and
cmpsb
fsubl
in
inc
add
pop
inc
sbb
imul
mov
aaa
cmpsl
mov
sbb
adc
xchg
imul
mov
push
ja
andb
movsb
shll
push
loope
pop
mov
xor
push
or
in
xor
adc
adc
das
adc
or
insb
and
or
xchg
loopne
adc
jle
jl
add
scas
addb
and
mov
repz
mov
cmp
test
sahf
cmpsb
pop
adc
cs
pop
repnz
lods
add
add
cmpsl
cmp
sbb
or
add
xor
jns
orl
push
and
add
push
les
imul
arpl
test
fs
add
or
pop
gs
sub
repz
js
jne
fwait
and
dec
repz
sbb
adc
or
inc
out
shrb
ljmp
loop
sbb
sbb
adc
jns
pop
inc
xor
pop
add
or
sbb
push
jle
insl
pushf
push
jp
fimull
or
aam
mov
das
push
dec
mov
mov
cmpsb
jle
xchg
push
push
adc
sub
out
test
fistpl
xor
or
enter
jle
pop
rcrl
and
dec
cwtl
test
mov
or
xchg
adc
fwait
or
pop
ja
inc
sub
in
jle
xchg
sub
add
inc
js
cmp
push
cltd
or
push
mov
push
or
push
dec
xor
lcall
inc
js
cmp
or
dec
mov
pop
add
cmpsl
inc
adc
mov
pop
and
sub
push
push
ja
cmp
or
or
or
adc
jo
or
cmpsb
push
adc
push
jmp
hlt
pop
push
mov
scas
push
lahf
push
push
sbb
iret
jnp
sub
or
or
popf
out
cmp
or
or
dec
push
adc
cmc
movsb
outsl
cmpb
push
pop
add
lret
cs
push
fidivrs
sbb
sbb
push
pop
push
sbb
or
add
or
mov
iret
and
push
push
pop
adc
rcrl
adc
push
jle
and
mov
adc
sbb
stos
push
into
lea
sub
dec
pop
dec
aas
clc
and
lcall
mov
push
mov
add
mov
out
nop
push
push
xchg
or
push
mov
pop
or
mov
popf
push
add
or
mov
cld
stos
push
lock
scas
les
pop
jns
lcall
and
push
dec
outsl
pop
sbb
mov
dec
lea
mov
dec
pop
push
mov
sub
cwtl
or
xchg
xchg
xchg
cmpsl
push
or
push
xor
adc
or
or
xchg
add
dec
push
jecxz
add
mov
sti
dec
mov
sub
mov
xor
xchg
les
fs
sbb
sbb
dec
mov
popa
mov
movsb
mov
or
push
jle
cmp
jl
in
test
and
lods
push
inc
mov
outsl
pop
mov
out
call
insl
or
cs
sbb
out
ret
or
sbb
fs
mov
mov
daa
pop
out
add
and
and
insl
mov
sub
pop
dec
in
cmp
clc
xchg
inc
pop
lods
jns
orl
dec
fsub
fsubr
outsl
sub
inc
out
sub
imul
add
dec
loopne
loopne
inc
sbb
add
data16
lock
cmpsl
and
imul
xor
hlt
fstpl
fwait
push
push
lcall
pop
in
jae
popa
pop
sub
pop
dec
dec
cs
lods
jge
inc
mov
inc
lock
sbb
repz
adc
and
xor
sub
sub
add
dec
pusha
js
xor
out
pop
adc
int3
add
jne
jl
mov
mov
sbb
or
fucomp
add
inc
aaa
cwtl
adc
add
lods
nop
xchg
inc
cwtl
xchg
lcall
inc
sbb
shr
inc
pushf
lcall
pop
pop
pop
enter
lock
or
and
jge
mov
sub
pop
ja
or
cmp
push
mov
std
or
jbe
jl
add
divl
mov
movsl
pop
mov
mov
xor
adc
adc
add
sub
mov
add
es
or
pushf
add
aam
test
and
xlat
rcll
push
push
scas
dec
pop
mov
hlt
insb
push
add
call
jecxz
add
or
ret
adc
pushf
cmp
outsb
add
or
xchg
sbb
enter
xorl
xchg
jmp
nop
scas
push
mov
add
loope
xchg
insb
add
sbb
pop
and
pop
bound
dec
or
sti
xor
fcmovb
xchg
int3
faddl
jmp
adc
sub
xchg
repnz
sub
ja
bound
add
movswl
bound
add
or
dec
push
add
or
dec
in
xchg
int3
or
mov
jle
jl
lds
xchg
xor
mov
pop
or
sbb
pop
ja
pop
loope
cltd
xchg
jae
sahf
rclb
sbb
push
int
or
jbe
test
sbb
xchg
clc
clc
add
je
stos
jecxz
repz
cmp
in
arpl
loop
push
xchg
loopne
aaa
and
test
test
add
mov
and
nop
push
add
adc
xor
push
inc
arpl
mov
dec
ds
adc
iret
xchg
pop
inc
jp
cmpsl
movsb
fs
cld
mov
mov
insl
adc
and
xor
mov
xchg
push
ljmp
adc
push
je
nop
add
sahf
mov
and
adc
shlb
adc
and
pop
aaa
pop
cmpsl
pop
and
pop
sub
sub
mov
jle
sub
imul
lods
jbe
sub
stc
addr16
add
jl
iret
jnp
push
inc
fsub
add
or
sub
lret
cmp
sub
pop
lret
pop
repnz
nop
insb
dec
add
dec
mov
mov
pop
sub
jne
inc
outsl
push
mov
push
cltd
test
mov
and
movsl
pop
insw
stos
sub
lret
ja
and
push
pop
ret
das
mov
jbe
fwait
or
inc
add
imul
nop
mov
nop
addr16
ror
jb
xor
lcall
in
inc
popa
popf
push
add
and
mov
sub
xchg
hlt
push
insb
jge
and
xchg
dec
cmpsb
jno
movsl
lahf
rclb
lret
imul
mov
orl
jl
add
inc
sahf
and
pop
mov
sbb
aam
call
push
fildll
nop
outsl
fsubrl
cmp
add
mov
rclb
xchg
pusha
jp
jae
fs
fmuls
add
testb
pop
aad
hlt
pop
cltd
fisttps
fdivrs
imul
and
and
inc
imul
shlb
out
or
and
add
and
xchg
aaa
repnz
subl
lea
mov
es
mov
mov
or
adcb
data16
or
fimuls
fldcw
push
mov
call
xchg
jns
sahf
pop
sidtl
loopne
pop
jo
arpl
dec
pop
xorl
aaa
pop
inc
sub
adc
push
roll
adc
or
sbb
and
adc
adc
xor
push
lahf
xchg
add
sbbl
jb
cmp
stos
insb
lea
jmp
sub
and
scas
and
mov
dec
push
cmp
pusha
insb
add
stos
mov
pop
mov
dec
insb
xchg
insb
rorb
in
mov
mov
enter
dec
shrb
and
pop
stos
jb
push
in
push
aas
loopne
add
add
insl
fldcw
jmp
rclb
pop
xor
sub
je
dec
je
add
jmp
inc
xor
sarl
push
mov
jmp
clc
inc
pop
jb
push
and
ret
xchg
xchg
push
push
push
add
sub
sub
pop
xor
mov
push
popa
cmpl
outsl
enter
test
outsl
nop
rcrb
outsl
or
mov
sbb
ja
sbb
dec
dec
imul
fildl
ret
sbb
add
mull
dec
jnp
lods
in
mov
sbbb
dec
add
testb
xor
inc
mov
sbb
hlt
ficomps
fidivs
dec
dec
adc
xor
cmpb
ja
and
adc
inc
push
fldenv
mov
ja
xchg
or
enter
jae
jb
jo
and
leave
mov
push
adc
ret
notl
orb
fists
sub
pop
lods
pop
add
cs
xchg
dec
sbb
pop
pop
mov
rorb
clc
mov
cli
push
int
nop
cmp
ss
cmp
mov
sub
cmp
add
es
jbe
sahf
sub
or
xor
pop
rorl
xor
pushf
jge
cmpsb
lea
jae
sbb
mov
sub
int3
cmp
fucomip
loope
popf
xor
adc
or
xor
roll
cmp
xor
and
and
xor
in
sbb
sbb
sar
jo
addb
jmp
fadds
mov
lcall
cmc
or
imul
sub
shr
sbb
adc
or
xchg
fcompl
jns
out
sbb
or
add
push
push
test
and
mov
movsl
jg
scas
and
pop
add
fadds
pop
push
mov
sub
push
rclb
add
add
add
in
adc
jle
adc
sbb
pop
add
mov
cmp
daa
and
lods
or
xchg
jne
aad
aad
inc
jns
xlat
mov
stos
xor
jge
ljmp
pop
push
out
fcmovu
mov
push
or
sub
mov
or
dec
dec
addr16
add
dec
jne
dec
inc
mov
popa
lock
jne
andb
sub
sub
add
mov
inc
out
inc
sbb
pusha
cmc
adc
and
pop
pop
xlat
mov
bound
andb
cmpsb
fisttpl
inc
shll
call
rorb
push
add
mov
push
clc
mov
cmp
jg
lea
adc
in
add
mov
xor
pusha
in
dec
inc
jo
mov
mov
xchg
xor
jne
loopne
sarb
jne
push
xor
jne
or
sub
push
nop
cmp
adc
add
sbb
fldl
call
sbb
jns
cs
cwtl
sbb
and
clc
outsb
inc
ja
sbb
sub
pop
adc
aad
pusha
jae
inc
inc
or
popf
sub
dec
ja
xchg
mov
jne
in
clc
jnp
mov
or
sbb
or
hlt
mov
icebp
mov
int
sbb
hlt
call
and
call
inc
lock
call
in
in
loope
sbb
loop
cld
sub
push
fcoml
cltd
dec
and
mov
or
pop
xor
xor
cmp
rol
rcl
sub
outsb
loope
jmp
push
jecxz
movsb
insl
jp
push
push
pusha
mov
mov
or
jo
out
popa
xorb
sbb
xchg
pop
lock
mov
mov
jp
mov
sbb
out
add
loope
outsb
sbb
mov
jne
pop
sbb
xchg
mov
and
nop
add
sub
and
call
inc
mov
or
add
pop
aam
jecxz
push
add
sahf
adc
ds
add
stos
addl
fmull
jecxz
mov
ror
push
mov
lret
pop
cmp
mov
ja
inc
stos
imul
gs
dec
enter
dec
fistpl
xor
les
dec
shrb
mov
bound
sarb
or
insl
shll
jns
add
sarb
push
in
or
mov
add
cmpsl
inc
and
mov
pop
inc
fwait
adc
adc
stos
inc
mov
or
inc
mov
xor
push
mov
mov
xchg
and
lods
mov
stc
clc
lds
test
xor
gs
ljmp
div
mov
add
mov
sub
pop
adcl
pop
pop
push
dec
sbbb
rorb
xchg
push
sbbl
lcall
loopne
dec
mov
cmp
clc
sub
mov
icebp
and
lods
fcoml
fdivrs
in
mov
fdiv
lock
mov
jne,pn
inc
mov
mov
adc
popa
decl
xor
push
ret
dec
fidivs
cmp
sti
pushf
inc
xor
imul
stos
pusha
sub
xor
and
pop
rorb
insb
int3
dec
jo
movsl
iret
adc
jnp
adc
popa
movsb
jmp
fstl
rorl
icebp
lock
ljmp
cwtl
outsb
nop
out
xlat
mov
xchg
out
les
and
mov
inc
or
cwtl
mov
xor
mov
ret
mov
mov
lcall
mov
sub
mov
xor
lods
jb
or
imul
test
xor
popa
outsl
pop
adc
cmp
sbb
xor
jl
les
loopne
push
add
aaa
push
sarl
icebp
and
jmp
test
sar
add
pop
add
mov
or
add
add
add
lcall
sti
push
adc
in
or
push
xor
imul
add
in
js
add
stos
pop
insb
pop
pop
mov
adc
addb
add
jnp
addb
fisttpl
add
lahf
fldl2e
je,pn
or
adc
pop
fldt
dec
test
fildll
sbb
insb
loopne
rclb
mov
mov
add
addr16
mov
loop
jo
dec
add
pusha
or
xor
imul
das
push
xchg
push
test
sub
pop
test
jle
ljmp
jno
daa
insl
lods
hlt
std
mov
verw
dec
sahf
sbb
xchg
inc
inc
test
mov
inc
sahf
jle
push
sbb
sub
xchg
xorl
nop
dec
lcall
pop
add
pop
out
sarb
call
cmpsb
dec
cmp
dec
jbe
mov
dec
aaa
dec
add
lock
adc
repz
fs
push
cmp
in
mov
mov
mov
pusha
cmp
jg
pop
and
rolb
jnp
pop
loope
jle
jmp
addr16
xchg
inc
mov
fnstenv
xchg
and
pop
imul
xor
mov
std
arpl
add
jg
fdiv
sub
push
jecxz
add
movsb
movsl
mov
pop
inc
add
std
repz
sbb
xor
lock
gs
movsb
mov
stos
jno
adc
out
add
xchg
cmp
jne
inc
and
sarl
jbe
xchg
stos
sbb
jmp
mov
dec
cvtps2pi
nop
mov
pop
dec
imul
dec
pop
jl
in
sbb
sub
sub
dec
rorb
test
fs
add
divb
in
sbb
mov
movsb
stc
lods
outsb
inc
fmuls
mov
imul
mov
sahf
sbb
call
mov
lret
or
sub
aaa
jmp
lock
mov
push
insl
test
cmp
mov
jmp
insb
rcll
push
adc
ret
leave
add
adc
int3
jle
daa
add
or
inc
push
dec
lcall
xor
dec
add
pop
or
push
pop
pop
fldl
adc
shlb
inc
mov
dec
pop
push
or
push
xchg
mov
lds
push
cmp
adc
lds
push
push
xlat
push
xchg
rcll
imul
dec
add
es
push
outsl
js
adc
jb
jecxz
mov
add
pop
enter
andl
inc
test
xor
sub
aam
shll
inc
aaa
ds
int
in
dec
cmc
or
test
xor
pop
push
push
incb
push
pusha
jmp
push
clc
or
pop
inc
xor
adc
rclb
test
push
sbb
jns
int
clc
inc
adc
mov
pop
test
dec
push
fildl
mov
sub
aas
xor
add
cmp
jb
mov
mov
mov
sub
out
add
sub
jbe
hlt
lcall
lods
add
cmp
adc
jae
mov
add
adc
and
or
lods
mov
sti
mov
or
mov
stos
ss
outsb
add
ds
test
adc
jb
xrelease
fildll
and
dec
adc
std
or
dec
sbb
or
sbb
gs
cmp
mov
add
mov
in
add
outsl
cmp
jae
cwtl
fstp
cmp
add
add
insl
scas
xorb
sub
fucomip
popf
or
push
xor
pop
mov
jle
mov
jecxz
jmp
sub
fsubs
nop
add
inc
pop
jmp
mov
sbb
scas
sub
inc
mov
inc
fsubr
add
adcl
xchg
xlat
cli
cli
ret
add
fs
xchg
call
mov
xor
fistl
lods
cmp
je
sub
fcompl
fidivrl
add
les
loop
and
xor
add
xchg
ja
pusha
adc
mov
jmp
adc
clc
xor
mov
fwait
add
sub
mov
insl
and
out
jecxz
mov
test
push
and
add
mov
mov
jg
stos
cltd
cmpsb
push
adc
jns
lock
mov
test
loope
adc
test
or
js
out
mov
dec
testl
adc
mov
or
inc
add
mov
add
cmpl
push
add
mov
add
xchg
xchg
mov
push
xchg
cmpb
les
roll
inc
adc
add
xchg
outsb
push
sbb
add
lcall
and
xor
cmp
lea
or
add
dec
pusha
mov
xchg
mov
jne
mov
clc
mov
push
mov
mov
sub
sbb
mov
mov
inc
push
das
loopne
add
push
data16
inc
or
adcl
int3
cmc
push
fadds
cmp
mov
sub
mov
sbb
sti
ret
push
mov
or
int3
and
out
add
test
mov
or
pop
cmpsl
stos
xchg
sbb
imul
and
push
pusha
cld
sbb
lods
adc
push
sub
cmp
pop
jno
pop
pop
stos
pop
xchg
insl
sbb
roll
hlt
xchg
cmp
push
mov
add
nop
stc
add
test
add
mov
and
lcall
imul
outsb
cs
mov
jmp
in
push
mov
and
fmull
adc
sar
and
cmp
xorb
cmp
loop
loop
pop
aam
dec
test
cli
mov
mov
xchg
and
inc
arpl
outsl
mov
nop
lret
add
cmp
insl
insb
push
or
ljmp
ljmp
xchg
mov
inc
cmp
jne
fucomip
out
add
loopne
sbb
fimull
sbb
xchg
ret
shr
cmp
clc
repz
mov
pop
and
es
mov
adc
mov
mov
mov
add
mov
adc
pop
inc
pop
dec
fcom
adc
jo
dec
and
ret
add
add
mov
cmpsl
test
ljmp
fwait
add
dec
cmpsb
call
mov
jmp
push
push
push
inc
xor
ret
push
inc
ljmp
fnstenv
lock
aaa
inc
jg
inc
or
ret
push
adc
out
lock
pop
cmp
ret
insl
cmp
int3
iret
push
or
push
imul
lds
popa
pop
test
inc
cmc
push
mov
sbb
mov
rolb
incl
inc
add
addr16
and
lret
jbe
sbb
outsl
sub
push
inc
fidivrs
mov
push
movsb
mov
push
adc
jb
or
push
push
pop
cmpsl
stos
push
sarl
pushf
mov
jne
mov
sahf
js
push
cld
popf
mov
ret
and
cli
inc
adc
jo
dec
mov
cwtl
pop
jg
sbb
or
dec
std
scas
fistpll
add
lret
mov
data16
dec
repnz
loope
pop
jg
dec
sarb
cli
jl
sti
pop
dec
inc
sti
jle
pop
mov
cld
mov
imul
push
sbb
push
lea
lock
xchg
mov
addl
cld
jge
ds
sti
test
mov
ret
xor
mov
dec
xchg
mov
aas
mov
out
call
or
ret
sub
add
add
sub
add
adc
add
mov
or
fiaddl
adc
mov
xchg
xorl
ret
cmp
push
cmp
movsl
mov
ds
fidivrl
jo
xchg
lret
adc
adc
fiaddl
jle
in
and
or
insb
and
shlb
push
pop
dec
aaa
lock
in
mov
fdivs
pop
mov
xor
rorl
repz
pop
lock
or
xchg
cmp
fdecstp
add
mov
dec
scas
mov
mov
out
test
inc
jae
cmp
lea
sti
add
sub
cmp
jg
sbb
sub
ret
in
sahf
mov
outsb
mov
jae
or
sbb
inc
test
fst
popf
pushf
xchg
mov
push
inc
xor
sub
loop
es
add
test
jg
or
sub
outsl
add
sarl
mov
cmp
push
lret
cmp
mov
or
jge
leave
clc
and
jmp
insb
and
add
add
jl
jno
push
in
lea
and
push
push
outsl
add
cmp
dec
add
xor
jp
sarb
loop
loopne
neg
jbe
out
jg
xchg
icebp
or
add
outsb
shll
popa
and
add
xor
or
cmpsl
cmp
push
adc
inc
in
sbb
inc
mov
pop
rolb
fisttpl
xor
inc
jl
ja
jmp
jne
cmpsl
and
inc
dec
or
inc
pop
pop
sbb
loopne
movsb
pop
leave
mov
nop
pusha
inc
addr16
leave
add
add
push
xchg
insb
das
sbb
iret
pop
xor
and
mov
add
xchg
mov
fcoms
adc
xor
mov
jno
push
jp
aas
testb
or
adc
adc
inc
inc
in
mov
ljmp
int
daa
pop
pop
pop
pop
enter
lds
enter
add
pop
dec
or
inc
test
leave
xchg
add
sarb
in
das
nop
push
lds
sub
and
push
push
inc
lods
pop
mov
push
das
add
add
dec
mov
or
push
adc
fsubs
add
inc
jnp
lcall
push
cmp
push
add
aad
lock
into
aas
daa
mov
cli
movl
test
rorb
push
add
repz
xor
lea
cmp
cmpsl
inc
in
xchg
jne
add
add
test
xlat
push
aad
mov
sbb
sarb
jge
mov
jns
jmp
jge
push
xchg
push
test
or
lret
xor
push
sarb
xchg
sbb
leave
cmp
add
dec
pop
add
add
loope
pop
xabort
cmpb
or
inc
add
or
push
notl
mov
pop
push
mov
xchg
and
and
add
fmuls
xchg
pop
pop
push
mov
cmp
ja
push
jle
mov
inc
inc
cli
insl
push
div
pop
das
hlt
push
movb
dec
mull
mov
sbb
dec
add
inc
dec
arpl
mov
cmpsl
sub
and
test
shr
int
pop
mov
loop
data16
push
and
in
imul
sub
jmp
jle
cmpb
and
pop
movb
data16
inc
test
stc
pusha
pop
jae
add
pop
mov
jne
popa
or
xchg
ret
popa
push
add
dec
jno
push
les
dec
fwait
push
ret
aaa
pop
add
jmp
push
push
adc
repnz
fmull
sbb
pop
or
je
jge
and
lcall
subl
test
push
jae
jbe
adc
js
xchg
push
add
ret
mov
ljmp
adc
adc
push
shlb
inc
mov
cmp
inc
mov
adc
push
mov
mov
fwait
pop
js
shrb
jnp
sub
loope
add
gs
sbb
sbb
mov
adc
jecxz
mov
mov
sub
pop
xor
outsl
xor
add
inc
and
lahf
jb
loope
ret
mov
xchg
mov
sbb
movsl
mov
ja
filds
xchg
jo
push
add
fistpll
dec
movb
or
or
jns
not
rcl
test
inc
fisttpl
cld
xchg
mov
or
je
sar
ja
add
push
sub
fdivs
es
jmp
ds
mov
inc
push
add
cltd
ret
out
mov
lahf
or
xorb
push
out
jns
dec
add
and
xchg
jb
sidtl
mov
sub
adc
inc
cmp
jne
fldz
jmp
mov
add
mov
cltd
out
sub
sbb
add
in
fistps
add
loopne
loopne
adcl
leave
fstcw
fldcw
fnstsw
fimuls
adc
not
and
cmpsl
mov
scas
sbbb
lcall
inc
cmp
inc
sub
fs
ljmp
iret
xlat
imul
mov
pop
pop
inc
ljmp
ficompl
addr16
inc
jmp
pop
fwait
movsl
mov
xchg
add
lea
das
add
lods
inc
out
and
nop
adc
out
iret
push
insb
outsl
bound
or
or
jmp
insl
je
or
aad
push
sub
dec
jnp
xor
sbb
add
mov
lods
pop
jns
push
xor
dec
aas
movsb
mov
pop
arpl
ss
sti
sub
aam
mov
jnp
pop
inc
push
add
add
orb
gs
sub
xor
jne
in
sbb
daa
inc
add
fistl
sub
inc
aas
inc
jne
popa
or
ss
orl
xor
fwait
inc
push
inc
inc
push
gs
imul
outsb
sti
dec
and
jb
mov
in
test
incb
add
and
cmp
jp
in
sub
in
mov
pop
pshufw
or
pop
pmulhw
call
push
lock
sub
sbb
jns
out
push
popa
imul
test
fbld
dec
xchg
push
sub
cld
filds
add
lds
inc
mov
dec
push
mov
pop
cmp
xchg
mov
sbb
rcr
jb
pushf
inc
pop
add
es
add
es
and
call
cmpsb
push
fwait
inc
mov
inc
mov
sbb
mov
insl
sub
scas
adc
movsl
sub
mov
adc
pop
cltd
in
popf
pusha
sub
mov
js
aam
and
es
or
dec
xlat
dec
sahf
addl
adc
and
pushf
inc
sub
jbe
cltd
cli
mov
into
nop
movl
push
adc
and
jb
push
out
psubsw
in
in
jmp
in
fs
ljmp
cmp
shl
sahf
cmp
in
sahf
fs
lahf
aaa
jp
int
sub
in
mov
add
and
sarl
add
add
and
ficompl
add
inc
inc
xchg
popa
jnp
punpckhbw
push
sbb
pop
bound
adc
mov
dec
jmp
cmp
add
sbb
add
push
xor
addl
jle
adc
mov
xor
add
mov
or
and
and
push
lods
aaa
add
movsl
inc
and
xchg
or
dec
outsl
addr16
add
jecxz
add
inc
add
inc
mov
daa
mov
sub
pop
push
add
fsubs
push
jl
or
cs
insb
lods
mov
lea
adc
push
mov
lods
jnp
or
xchg
mull
dec
adcl
or
popf
out
pushf
adc
and
push
ficomps
sub
adc
push
inc
mov
in
cmp
jno
out
xor
or
dec
cs
popa
dec
or
shll
xor
push
mov
cmpsl
das
and
pop
mov
ret
adc
shl
adc
push
pop
and
mov
add
xlat
pop
push
shr
inc
movsl
push
cwtl
in
movsb
adc
sbb
pop
shrb
adc
cmp
sub
mov
andl
mov
das
mov
push
inc
cmp
push
enter
or
mov
out
mov
cmpsl
ror
push
xor
jae
dec
leave
inc
jb
in
mov
pop
movsl
sbb
inc
dec
movsl
pop
dec
add
or
iret
orl
mov
push
in
lcall
xchg
xor
std
loope
add
ljmp
xor
pop
sub
fisttpll
sbb
push
shll
push
mov
dec
mov
dec
lret
adc
add
insl
pop
mov
adc
mov
push
inc
xchg
mov
mov
xor
cmpsb
dec
jo
push
nop
test
andb
sahf
insl
test
dec
adc
dec
xchg
cmp
pop
add
mov
or
xor
xchg
or
add
add
lock
add
xorb
cs
and
dec
sbb
cmpsb
addl
orl
add
sub
cli
or
fwait
adc
adc
push
fcmovnbe
aam
std
sbb
push
in
mov
pushf
adc
xor
jo
cmp
push
xor
and
lret
or
xchg
pop
inc
dec
clc
dec
lock
pop
inc
inc
push
push
roll
push
add
outsl
dec
repnz
dec
xor
in
sub
xlat
jno
dec
jne
or
rcrb
and
xor
nop
cmpsb
test
xchg
lret
pop
shll
adc
add
icebp
dec
and
push
lret
xor
xlat
cmp
popf
and
adc
cwtl
aas
pop
pop
mov
or
mov
jne
stos
or
sbb
aas
xchg
lea
movsl
in
icebp
es
out
pop
mov
nop
nop
adc
xchg
add
pop
and
in
or
pop
push
add
stos
out
stos
nop
xor
incl
xchg
and
out
or
jae
xchg
fdivl
scas
insb
sub
push
pusha
int3
mov
pushf
rorb
dec
cmp
popf
and
hlt
pop
aaa
xor
hlt
hlt
lock
xchg
xadd
in
jge
sahf
out
fiadds
jne
dec
lahf
out
mov
fwait
mov
andb
or
outsb
loop
xchg
subb
and
ds
cli
and
xchg
adc
ja
cmp
out
das
repz
je
or
je
or
shll
add
fnsave
lods
push
jle
hlt
push
inc
add
sub
je
jmp
mov
daa
mov
mov
push
push
sbb
mov
pop
ficompl
adc
pop
add
push
dec
push
repnz
and
adc
mov
enter
adc
iret
leave
cmp
sbb
adc
das
mov
push
cwtl
adc
lods
mov
adc
loopne
xor
sub
pop
mov
pop
jo
inc
mov
xchg
xchg
inc
or
nop
mov
scas
xor
movsl
mov
ret
add
xchg
sub
jle
push
add
pop
rorb
enter
aam
int
or
test
add
xchg
add
push
movsb
sub
lret
cwtl
fs
sub
pushf
je
add
xchg
movsb
xor
xchg
test
lods
mov
adcb
mov
sbb
add
add
iret
iret
adc
bound
push
ss
or
cs
jae
outsl
iret
dec
std
push
xchg
inc
imul
pop
dec
fs
mov
das
fwait
and
insl
mov
xchg
push
enter
pop
jne
push
pop
adcl
add
cld
xchg
lea
dec
outsl
fs
gs
pop
aas
push
pop
sbb
dec
jp
adc
insl
sbb
xchg
and
xchg
cwtl
xchg
inc
pop
lea
imul
idivb
inc
outsl
bound
nop
push
inc
push
push
imul
pop
aas
mov
imul
and
xor
hlt
sub
jmp
imul
jp
sub
scas
mov
inc
adc
push
sub
dec
and
pop
inc
cltd
aaa
sub
jbe
jne
outsl
and
xchg
and
sub
adc
adc
add
or
inc
jmp
push
inc
inc
sub
cmp
bound
push
pop
pop
push
inc
pop
inc
dec
inc
pop
inc
push
and
addr16
cs
data16
jno
jo
cwtl
orb
setl
mov
dec
pop
xor
xor
lret
adc
popa
imul
xor
out
push
push
pop
aaa
sbb
and
cs
pop
js
mov
enter
adc
sbb
movsb
cld
jae
lret
fidivs
sbb
jge
add
push
jle
inc
mov
sbb
fildl
popa
pushw
push
sbb
dec
inc
shll
jo
popa
cmp
test
insb
xlat
push
adc
insb
push
imul
orb
jp
sub
rcrb
mov
imul
inc
dec
dec
inc
push
jg
sub
and
aas
ja
sbb
xchg
rclb
push
jno
outsb
pop
pop
dec
push
mov
filds
lods
cmp
pop
xor
andl
jne
test
push
dec
jne
popa
push
mov
xor
add
gs
loope
pop
cli
inc
inc
and
jae
mov
lods
ret
push
ret
push
mov
adc
push
aam
rcll
sbb
or
pop
push
push
iret
iret
adc
inc
inc
inc
inc
pop
lret
les
aas
sbb
iret
mov
pop
and
loopne
inc
or
orps
or
inc
insl
ja
repnz
push
jbe
xor
pop
xor
mov
push
icebp
lret
push
inc
push
pop
push
cs
je
push
sub
and
sahf
rolb
fists
sub
add
cmp
or
call
pop
or
jp
imul
jns
push
push
jb
dec
rcr
aaa
adc
add
pop
pop
push
push
dec
jne
pop
pop
sbbl
stos
scas
in
aaa
push
cli
insb
je
imul
inc
inc
scas
push
outsl
outsl
jne
inc
xchg
notb
cwtl
loop
xlat
sub
jne
and
pop
add
cmp
or
mov
pop
xchg
push
iret
jo
mov
push
sub
mov
push
inc
push
stc
les
jp
outsl
push
shlb
inc
pop
outsl
shll
mov
pusha
andb
or
imul
push
inc
push
inc
push
pop
push
mov
pusha
cmc
push
sub
push
xor
pop
ja
add
mov
push
push
and
mov
and
inc
adc
mov
insb
and
shrb
and
xchg
xchg
jne
push
sub
cwtl
ss
adc
push
mov
mov
or
sbb
jbe
mov
xlat
sub
sbb
cmp
pop
pop
and
cmp
xor
xor
cmp
and
insl
aas
xor
xor
add
xor
xor
cmp
imul
aaa
aas
or
ja
cmp
xor
repnz
cmp
or
aas
and
inc
xor
aas
cmp
sub
rolb
in
jbe
xor
mov
aas
cmp
jg
imul
mov
aas
mov
dec
push
pushf
bound
ss
adc
cmp
xor
das
sub
or
aaa
aas
cmp
mov
adc
aas
mov
mov
cmp
push
int3
push
incb
ds
ss
mov
cmp
mov
aaa
pushl
in
sbb
mov
pushl
mov
sti
mov
jle
lds
mov
pop
jg
out
or
xor
ss
xor
sub
xor
cmp
shlb
inc
xor
aas
or
and
jle
jg
push
lock
aas
jg
ja
in
clc
xorl
outsl
mov
das
xor
cmp
xor
xor
cmp
shrb
and
mov
cmp
cmp
xor
jbe
push
cmp
out
xor
inc
dec
and
aaa
cmp
xor
jb
mov
mov
repnz
lds
or
pop
insb
sbb
das
cmp
nop
pop
nop
xor
xor
or
rcrl
cmp
add
enter
jg
stos
loopne
or
pop
jg
or
ja
xor
xor
or
dec
xor
xor
sysexit
xor
shlb
mov
xor
xor
ret
add
mov
das
aaa
aas
roll
pop
and
push
lds
jb
xor
xor
add
add
ss
jp
cmp
pop
cmp
xor
add
add
inc
das
xor
pop
enter
xor
enter
add
sbb
cs
push
subb
aaa
clc
xchg
ret
inc
add
lret
movsb
push
divl
jecxz
push
fidivs
fiaddl
cltd
clc
cld
mov
and
int3
push
mov
mov
add
negl
jl
mov
cltd
cmp
adc
or
or
fistpl
orb
je
rclb
sbb
mov
pop
push
stc
pop
adcb
dec
pop
ja
xchg
rclb
or
int3
mov
adc
les
pop
ja
gs
popf
push
mov
pop
xchg
xchg
test
imul
sbb
mov
xor
inc
fisttpll
incb
sahf
fildl
adc
push
lea
icebp
sub
pop
and
inc
inc
push
jbe
pop
leave
and
popf
push
sbb
xchg
sub
xor
dec
xchg
xchg
sarb
mov
cmp
add
mov
inc
mov
adc
mov
add
add
push
ret
lret
lock
xor
nop
sub
cmpb
cmpsb
xchg
test
inc
scas
mov
mov
cmp
jb
mov
sbb
insl
fnstcw
pop
and
pop
xchg
push
or
out
orb
dec
int3
adc
mov
add
or
or
or
push
jns
jno
mov
scas
cld
insl
add
data16
js
lcall
test
gs
aaa
inc
adc
loopne
mov
mov
flds
pop
push
orb
push
js
imul
add
jnp
imul
fiadds
cmp
adc
psubusb
lret
and
xchg
out
fs
lock
movsb
test
or
pop
je
enter
dec
xchg
push
das
dec
xor
adc
movsb
cld
pop
xchg
dec
rcrl
andb
jno
pop
inc
test
mov
mov
cs
cld
sub
xor
adc
outsb
dec
ficoml
dec
movsb
ret
gs
sbb
push
jns
nop
sbb
pushl
fs
out
push
pop
sub
mov
popf
dec
sti
pop
xchg
dec
cmp
dec
cmpl
dec
js
arpl
je
add
pop
lea
test
js
add
hlt
test
and
adc
daa
jne
inc
es
inc
sub
notb
sar
or
inc
int
test
sarl
adc
push
sbb
dec
and
push
adc
xor
sbb
mov
adc
xchg
mov
fdivrs
or
add
xchg
int3
imul
leave
cmp
flds
int3
cmp
pop
push
xor
xor
clc
lock
popa
push
sub
call
lret
aaa
sub
or
xor
and
incl
xor
and
jo
mov
xorl
gs
inc
mov
test
add
ja
stos
std
lahf
fmull
inc
dec
inc
pop
push
dec
dec
push
inc
cs
inc
test
pushl
and
jb
jno
bound
jle
iret
add
sub
aas
fidivrl
ret
pop
and
hlt
mov
and
inc
imull
xor
push
sbb
pop
push
fs
gs
and
pop
sub
insb
fs
mov
and
sbb
and
jo
ret
pop
push
and
push
jae
or
add
mov
sbb
movsb
sarl
dec
sub
arpl
dec
pop
and
xor
add
and
and
pop
in
and
test
fstpl
inc
sub
or
imul
add
push
pop
clc
mov
dec
cmpsb
cltd
stos
fcoml
fs
stos
fadd
test
aam
in
ud1
mov
add
leave
in
hlt
pop
cmp
mov
enter
outsl
or
je
cmpsl
rorb
push
hlt
inc
call
inc
stos
or
xbegin
hlt
push
xor
call
das
shrb
adc
mov
xchg
jmp
mov
fistpll
int3
aaa
pop
test
int3
fcomip
in
inc
jb
or
aad
add
in
xchg
bnd
movsb
dec
outsb
iret
enter
mov
outsb
jb
jb
test
je
repnz
sub
jg
mov
mov
sbb
sub
jns
adc
das
daa
xchg
test
mov
jb
cmpsb
je
dec
or
and
xlat
rol
pop
pop
pop
imul
dec
js
outsl
sub
add
out
sbb
cmp
das
cmpsb
add
inc
flds
fdivrs
xchg
test
xchg
filds
sub
daa
inc
test
ret
js
lds
sbb
cld
rolb
jb
test
jbe
fwait
dec
mov
jo
push
cld
jmp
pop
dec
mov
lret
enter
sti
add
pushf
jne
lea
and
repnz
hlt
mov
hlt
mov
in
jmp
dec
insb
insb
pushf
loopne
sbb
in
lret
pop
sbb
jmp
pop
repnz
mov
cmp
gs
frstor
sub
dec
mov
cs
aaa
lret
and
sarb
mov
hlt
or
testl
pop
pop
lods
or
xchg
pop
pop
add
fs
cs
and
gs
scas
push
push
sbb
nop
push
push
aam
dec
dec
nop
lret
dec
dec
sub
inc
jb
xchg
sub
inc
inc
cmp
or
cmp
add
dec
sub
xchg
lret
xor
add
xchg
xor
pop
pushf
xchg
sub
and
sub
insb
pop
xor
and
mov
mov
icebp
add
xchg
ficoml
inc
ds
repz
shrb
jb
shlb
xchg
pop
ret
test
lea
lock
mov
rcll
sbb
pop
leave
in
pop
push
orb
or
fimuls
dec
scas
or
pop
aas
pop
leave
mov
push
incb
xor
xor
add
add
or
lcall
cmp
repnz
bnd
mov
adc
cli
test
sub
jg
out
int3
sub
enter
inc
es
js
cmp
loopne
inc
mov
push
xchg
push
xor
repnz
repnz
repnz
in
loope
je
push
pop
sbb
ficoml
sub
add
jg
add
pop
es
jbe
pushf
movsb
cli
jb
and
mov
shll
add
adc
movsb
jb
add
mov
and
sub
ret
clc
int3
aad
adc
int3
add
inc
dec
xorl
pop
push
repnz
sub
inc
cld
cld
sti
and
cld
mov
cli
fadds
push
and
jns
mov
inc
dec
fldcw
inc
push
movsb
cli
call
cmp
pop
xor
gs
daa
test
add
or
das
mov
add
cs
inc
dec
push
push
aas
jb
push
test
pop
add
dec
cs
dec
dec
push
jecxz
lea
lahf
daa
mov
and
out
scas
mov
push
dec
inc
and
push
dec
sbb
hlt
arpl
xchg
pop
lahf
testb
int3
fcmovbe
mov
push
aas
inc
dec
push
inc
and
pop
lahf
or
fadds
nop
inc
push
pop
inc
dec
es
insl
mov
lods
inc
pop
pop
rcrb
inc
sbb
adc
adc
pop
shrb
insb
jae
xor
xor
fildl
sub
cld
adc
inc
lea
pop
je
dec
xchg
js
inc
and
inc
push
clc
jns
cmp
sub
cmp
jo
loopne
xor
call
in
inc
fcomp
or
ficompl
ret
arpl
sti
jmp
jl
imul
xchg
icebp
add
lcall
repz
enter
dec
popf
add
add
stc
ja
les
inc
or
sub
loope
inc
push
clc
filds
add
jbe
sbb
sbb
inc
cs
dec
push
call
add
dec
dec
inc
int
jle
dec
ret
data16
jnp
in
and
inc
mov
xchg
push
adc
inc
adc
or
inc
in
dec
add
fstpt
mov
and
cmc
cs
mov
das
movsb
xorl
pusha
adc
sbb
jg
pop
and
adc
out
aaa
nop
pop
adc
sub
int
sbb
and
jne
xchg
cmp
lcall
and
dec
leave
leave
xchg
enter
inc
jb
pop
leave
adc
and
pushf
sbb
ror
jb
inc
or
fmull
mov
cmp
add
add
mov
jb
mov
sbb
xchg
and
inc
adc
sub
xor
fildll
fdivrl
scas
mov
mov
dec
pop
insb
adc
bound
gs
imul
outsb
outsl
jo
mov
jns
dec
jge
push
addl
jae
cltd
xor
push
aas
aas
mov
add
jns
inc
flds
daa
dec
inc
or
or
sub
imul
pop
ja
pop
jg
inc
dec
rol
jmp
dec
pusha
pusha
cltd
divb
or
mov
clc
gs
fidivrl
ljmp
adc
pop
insl
std
inc
fadds
mov
mov
mov
les
out
js
cmp
std
mov
cmp
dec
and
les
mov
push
fs
jmp
inc
add
xor
cmpl
pushl
mov
loop
xor
jb
lods
frstor
lock
bound
call
test
sahf
xchg
add
dec
shrb
mov
sub
shl
inc
in
sub
jne
dec
jp
mov
or
cmp
repz
ret
rorb
test
insl
mov
rclb
jo
sahf
inc
dec
xchg
das
mov
mov
bound
fnstenv
daa
push
dec
inc
push
push
push
push
inc
pop
mov
sbbb
xchg
aaa
dec
lahf
addb
xchg
in
mov
sbb
lods
push
and
and
pop
mov
sub
out
xor
adc
clc
rcl
xor
enter
movsb
mov
adc
dec
test
pop
sbb
orl
add
popf
jge
xchg
cmp
inc
popf
pop
pop
scas
sbb
pop
jb
sahf
push
push
sub
dec
xorb
insl
jae
fisubl
and
adc
or
sub
inc
sbb
pop
adc
adc
cmp
cmp
and
mov
add
ja
mov
shrl
mov
pop
stos
mov
out
or
sub
jmp
fiadds
inc
sub
and
pop
add
xlat
sbb
add
addb
pushl
rol
inc
pusha
dec
pop
mov
push
rolb
sub
inc
cwtl
insb
cmp
dec
in
adc
mov
test
mov
cld
lret
in
ss
roll
cld
push
ret
stos
stos
adc
ret
adc
xor
insb
vpmaxsw
ret
fsub
adc
cmp
mov
jne
nop
and
adc
pop
mov
sbb
popa
mov
mov
and
bound
xor
cmpsl
mov
push
pop
inc
stos
mov
rcpps
mov
gs
cmpsb
scas
jo
sbb
sbb
mov
test
or
in
jne
cmp
pop
lea
cltd
out
lds
movsb
mov
insb
daa
fwait
sarb
mov
in
out
mov
xchg
pop
clc
add
sub
push
cld
push
xchg
stos
pop
push
sub
inc
and
movb
or
and
sub
lea
sub
add
daa
test
hlt
push
cmp
adc
rclb
inc
push
call
xor
mov
sbbb
in
mov
and
and
stc
inc
lds
ljmp
sbb
aam
add
or
repz
push
xor
push
cmp
inc
out
sahf
dec
jno
out
add
icebp
pop
xor
add
daa
jb
ja
inc
jmp
and
daa
nop
movsb
push
nop
je
stos
jmp
push
shl
rolb
add
push
and
sbb
arpl
lods
mov
sbb
loopne
lea
mov
jl
bound
push
push
popf
cmp
int
ja
lahf
fadds
mov
lock
imul
pop
adc
adc
adc
jno
aam
shrb
orb
jne
call
popf
in
loop
aam
xor
add
test
mov
andb
cld
push
outsb
fs
outsl
arpl
add
loopne
les
pop
dec
aas
xchg
dec
mov
jne
sarl
sub
cmp
dec
push
adc
in
inc
and
sub
cltd
imul
in
out
push
sahf
in
roll
clc
or
xchg
cmp
pop
and
in
test
xchg
mov
inc
dec
aas
cmp
arpl
mov
sbb
sub
add
and
shl
and
pop
adc
jbe
xor
dec
lods
movl
xlat
adc
cmp
cmc
add
push
push
test
pop
or
xor
push
sbb
addr16
nop
ljmp
mov
add
xchg
push
or
push
nop
pop
sbb
and
pop
xor
stos
popa
or
fisubrl
cmp
and
inc
push
lea
mov
jp
jmp
and
cld
cmpb
mov
pop
movsb
cmp
call
int3
push
sbb
aam
js
cmpl
push
call
xor
loopne
mov
inc
jae
daa
subb
pop
test
pop
fsubrl
mov
pushl
push
nop
add
and
lock
or
adc
mov
sbb
jecxz
fdivrs
test
add
push
rclb
cwtl
add
lock
push
cld
mov
rorb
push
inc
adc
pushf
xor
rcl
sub
iret
mull
or
loop
inc
loop
xor
in
mov
ds
in
inc
das
cwtl
je
mov
sub
leave
mov
subl
push
leave
or
icebp
xchg
add
cltd
enter
insb
jo
lea
add
sbb
les
cltd
inc
push
or
rol
push
xchg
add
lea
push
add
pop
push
out
fnstenv
dec
xor
add
xor
ja
xor
cs
jbe
fnstsw
imul
sub
xor
cmp
jbe
aas
sbb
add
and
ss
aaa
into
mov
xchg
mov
xor
xor
push
dec
sbb
xor
test
and
fsubrl
and
in
jbe
push
inc
mov
out
cmpsl
jns
inc
test
push
repnz
adc
push
popa
jbe
pusha
frstor
cmp
ja
bound
loop
daa
push
jae
add
mov
jae
bound
daa
mov
ds
lea
xor
out
or
cmp
add
call
jb
test
std
ficoms
jecxz
movsb
or
gs
sbb
xor
inc
sub
out
xor
sbb
pushl
test
std
cmpsb
out
daa
rcrl
xchg
enter
enter
add
dec
in
add
inc
dec
pop
cmc
mov
nop
adcb
mov
jle
int
aam
cli
mov
int3
adc
jns
or
mov
or
xchg
movsb
add
xchg
je
mov
sub
pop
pop
test
push
es
lods
xchg
inc
mov
mov
inc
mov
movsb
test
movsb
cmp
dec
scas
fsubrs
sub
inc
mov
xchg
xchg
xchg
nop
cwtl
cltd
in
mov
cs
test
nop
insb
xchg
addr16
mov
sar
mov
fmul
enter
decb
xchg
sub
xchg
fdivr
and
lods
mov
mov
or
mov
movsl
xor
jno
jno
add
nop
dec
fs
jae
cmp
adc
test
insl
scas
inc
fisttps
imul
xor
movsl
pop
sbb
add
pop
pop
aaa
and
dec
dec
inc
pop
pop
inc
push
push
push
cmp
pop
push
pop
inc
inc
sub
add
push
push
and
out
ja
pop
push
adc
mov
adc
xchg
pop
xorl
lods
das
or
insl
and
iret
das
inc
bound
aas
enter
xchg
jmp
arpl
cli
arpl
or
cmpsb
and
fwait
dec
mov
data16
push
mov
mov
in
jne
and
push
hlt
out
add
nop
addb
cmp
xor
int
in
jecxz
in
sbb
gs
add
repz
jg
add
inc
add
pop
mov
adc
imul
mov
sti
mov
ss
sbb
pop
dec
scas
stc
mov
scas
push
les
push
je
inc
repz
lahf
push
cld
rolb
int3
movsb
fidivrl
jns
data16
shlb
jl
pusha
xor
and
add
andl
push
les
cmp
iret
repz
push
cld
mov
push
rclb
loop
lock
test
xchg
clc
fidivs
sti
mov
push
xchg
push
sahf
cmpsl
stc
jl
inc
aam
add
lahf
out
je
add
insl
insb
out
popf
dec
test
push
push
and
fmull
adc
inc
add
cwtl
push
mov
iret
inc
repz
repz
hlt
in
les
push
aam
repnz
dec
out
in
in
push
add
mov
cmp
lods
or
faddl
push
idivl
cmpsl
shrb
push
clc
pusha
xor
int
popf
push
setns
in
cwtl
shlb
pop
arpl
popf
nop
add
mov
push
dec
stos
adc
movsl
mov
lahf
out
mov
mov
cmp
into
jmp
add
popf
data16
stc
les
cld
push
orb
cli
sbb
sbb
mov
in
pop
fnstsw
inc
test
and
mov
xor
xchg
pop
dec
add
das
xor
enter
push
push
negb
add
and
mov
xor
sar
aas
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
test
sbb
es
mov
je
and
adc
repnz
and
popa
je
xor
lock
and
fildll
xor
dec
mov
das
and
or
test
xor
inc
sbb
jns
rolb
test
push
movsb
jno
add
adc
cmp
pop
aas
mov
cli
jg
data16
and
js
repz
repz
sbb
sub
cmp
repz
inc
dec
push
pop
fs
cmp
repz
jl
mov
movsb
lods
mov
iret
repz
int3
aam
in
sahf
out
cmp
cld
add
or
je
out
sbb
sub
pushf
fsubrl
add
out
or
dec
inc
push
shrb
jge
and
fdivl
mov
leave
enter
jg
xorb
orl
negb
sbbb
jnp
mov
rcrl
and
pop
cs
dec
sahf
add
add
in
mov
pop
add
add
jmp
inc
or
sub
add
mov
or
cltd
add
pop
call
aad
clts
testl
xchg
adc
adc
adc
pusha
inc
repz
push
cmpsb
push
adcb
fsubr
clc
or
sahf
out
sahf
sbb
cmp
pop
push
jl
pushf
mov
add
add
pop
imul
imul
xor
mov
jmp
inc
sarl
clc
sbb
or
add
imul
jg
xor
lods
push
adc
cld
cmp
shlb
loopne
addb
test
add
push
adc
test
xor
and
add
dec
imul
insb
xlat
xchg
das
jg
incl
jl
add
xchg
jg
fdivl
add
sti
push
fdivrl
movsb
add
or
out
sahf
testl
sahf
out
sahf
pusha
adc
adc
mov
int3
cmpsl
jne
repz
sbb
xor
adc
or
jns
out
or
xchg
out
sahf
out
mov
rclb
int
jns
in
clc
push
or
cmp
pop
xor
jns
jnp
dec
push
add
adc
sahf
push
test
add
jns
les
ss
add
repz
add
mov
cmp
repz
iret
rolb
push
mov
sbb
xor
dec
out
sahf
out
fs
jns
xchg
fisubrs
xlat
jns
std
adc
call
add
imull
jb
cmp
or
or
mov
cvttps2pi
pop
rcr
push
mov
pop
jbe
push
jno
adcb
sbb
fidivrs
aad
mov
negb
testl
or
repz
fisubs
sbb
push
hlt
repz
mov
cmp
shl
lock
adc
jns
sbb
inc
add
or
cmp
repz
sub
cmp
xor
iret
repz
push
and
sbbb
stc
xchg
sub
add
mov
and
lds
jbe
adc
dec
jle
out
xchg
jge
ljmp
sti
paddd
or
add
es
daa
daa
adc
adc
and
daa
mov
femms
or
adc
daa
daa
daa
sbb
add
sbb
pushf
es
rcll
jb
add
pop
xlat
push
insb
fidivs
jl
out
sahf
test
jl
jp
push
lock
or
adc
lods
adc
push
hlt
or
nop
and
add
xchg
scas
push
push
js
sahf
out
sahf
xchg
test
int3
fdiv
cmp
repz
or
sbb
cmp
cmp
repz
pusha
jo
mov
repz
pushf
lods
mov
pop
in
cmp
cmp
notl
imul
adc
fldcw
je
mov
push
cld
pusha
inc
outsb
inc
aad
add
addb
aas
pop
int
aas
add
or
nop
pop
jo
xor
std
xchg
cld
movsb
cli
out
sahf
out
stc
enter
repz
div
testb
sbb
repz
sub
cmp
repz
repz
icebp
fs
repz
out
mov
mov
repz
jmp
ljmp
mov
inc
add
dec
dec
ret
xor
and
js
bound
add
cmp
js
dec
mov
pop
mov
filds
ds
or
or
add
inc
ffree
cmpsl
lods
pop
and
sub
data16
jecxz
sub
add
pusha
pusha
stos
addr16
or
or
movsb
lods
outsl
inc
add
mov
add
pop
pop
add
or
imul
add
call
aaa
mov
or
xchg
pop
xchg
inc
add
xchg
pop
add
outsl
xchg
stc
mov
mov
sti
cld
std
out
sahf
out
incb
add
sahf
out
sahf
addb
stos
les
adc
inc
sbb
inc
jns
loope
scas
add
aam
ljmp
push
xor
adc
and
xor
adc
daa
xchg
add
insb
push
imul
jno
cli
mov
cld
aaa
xchg
ja
add
out
aas
orl
jg
push
mov
xor
adc
mov
gs
xchg
dec
repnz
dec
adc
cmova
cmpsb
inc
push
xchg
add
out
repz
hlt
push
or
sbb
cmp
int3
mov
lret
jl
sbb
jp
push
enter
out
jmp
out
dec
push
pop
push
insb
sahf
out
sahf
adcb
int
jns
lock
iret
repz
push
iret
mov
cmpsl
stc
cmp
adc
mov
js
mov
rcr
push
sahf
ss
repz
test
jns
iret
repz
loopne
out
out
xor
les
repz
add
sub
imul
loopne
mov
out
sahf
out
insb
mov
int
mov
push
insb
nop
test
iret
repz
loopne
sbb
jns
test
out
add
repz
jl
test
fdivr
sahf
out
ds
cmp
jl
jns
idivl
fdivrl
out
sahf
out
mov
out
sahf
mov
mov
mov
out
sahf
out
mov
out
sahf
mov
mov
mov
out
sahf
out
mov
sahf
ja
mov
test
jns
out
mov
in
iret
repz
adc
sub
pop
je
ds
repz
mov
iret
repz
cmpsb
push
xor
fs
ds
repz
fdiv
or
jns
out
and
push
insb
test
jns
out
mov
in
jns
out
adc
incb
inc
pop
je
jne,pn
out
mov
imul
pushw
ja
movsl
xchg
dec
into
jbe
xlat
push
pop
arpl
cmp
inc
daa
aam
scas
and
in
push
push
sub
fildl
sub
mov
xor
mov
scas
jbe
adc
inc
jnp
jnp
xchg
dec
or
push
push
sub
add
jae
sbb
cmp
cmp
je
scas
add
or
fdivrl
mov
push
xchg
dec
ds
mov
jle
daa
ds
shrl
dec
int3
push
test
add
jmp
push
xor
xchg
popf
jb
out
js
mov
in
dec
push
push
dec
or
dec
push
aam
jns
sbb
testb
fidivs
mov
movsb
sti
faddp
push
jbe
data16
xchg
push
aam
push
xor
jno
lods
test
insb
sbb
xor
fisubs
fs
mov
push
sub
es
or
enter
lcall
cmp
inc
lods
pop
jl
lock
dec
mov
cmpsb
adc
fnstenv
add
pop
inc
sbb
push
faddp
push
int3
jle
cs
pop
negl
push
mov
out
out
xchg
inc
cld
ss
movsb
scas
mov
pop
push
pop
fistps
neg
inc
xor
jo
cmp
fs
iret
jnp
dec
out
and
cs
mov
mov
push
pop
fst
mov
inc
push
neg
jnp
mov
push
jl
adc
jae
dec
sti
push
add
xchg
es
xchg
negl
sahf
inc
cmpsb
test
push
andb
popa
and
in
mov
div
push
cmp
pop
mov
push
adc
or
cmpsb
dec
mov
mov
push
es
push
sub
inc
xlat
push
loopne
ja
or
inc
xchg
add
mov
int3
jbe
les
cmp
sub
pop
shlb
mov
pop
and
faddl
jmp
jge
mov
fsubrp
xor
sub
mov
jae
mov
in
add
lock
add
adc
cmpsb
iret
ss
js
push
outsl
mov
je
mov
ficoms
adc
fs
push
loopne
or
in
dec
rolb
shll
xchg
hlt
push
mov
dec
ficomps
push
daa
outsb
xchg
push
clc
imull
daa
outsb
les
stc
sbb
into
sub
jmp
push
ja
out
jns
cmp
pop
ss
or
jne
mov
out
pusha
out
loopne
out
negl
push
fs
push
lock
shr
push
pushf
in
pop
aaa
push
addb
and
outsb
cmp
cmpsb
xchg
imulb
xchg
call
adcl
xchg
mov
inc
sbb
ss
fcomps
mov
outsb
inc
sbb
xchg
jle
sahf
aam
dec
iret
push
jl
outsl
es
jnp
jnp
and
cmp
enter
ss
or
sub
xlat
or
cwtl
addl
adc
adc
add
inc
pusha
inc
add
mov
jge
jo
add
and
xor
xchg
mov
add
add
addb
add
pop
inc
add
fsubr
jg
dec
push
str
inc
add
dec
add
cs
add
fidivl
or
and
xchg
or
fnstsw
inc
add
dec
aaa
add
mov
inc
sbb
and
mov
dec
scas
push
pop
dec
aaa
push
pop
dec
add
fnsave
fwait
inc
add
adc
imul
loop
push
inc
mov
or
pop
pop
jmp
ja
loopne
inc
pop
jae
sub
idivb
mov
pop
push
sahf
push
ja
or
push
lret
pop
repnz
test
and
pop
push
pop
outsl
pusha
pop
fstpt
maxps
inc
or
or
ret
jnp
inc
repz
rcrb
cs
xchg
and
inc
jmp
lock
cs
mov
or
jnp
repz
dec
cmp
mov
jnp
push
rsqrtps
lret
inc
aas
pop
ja
push
or
rdmsr
adcl
jnp
sti
pop
inc
aas
or
imul
dec
mov
dec
push
dec
pop
pop
iret
setne
push
or
clc
mov
sub
pop
mov
int
mov
nop
push
push
add
dec
add
insl
jne
int
mov
outsb
and
add
pusha
cli
xor
push
inc
es
and
dec
add
add
pop
inc
sub
add
dec
addr16
sub
ds
mov
bound
ret
loopne
pop
addr16
add
mov
adcb
lock
add
decb
sub
sub
sbb
lods
cld
inc
dec
inc
inc
rclb
lret
and
pusha
inc
inc
push
inc
dec
add
mov
dec
inc
mov
push
pop
dec
push
rolb
test
imul
out
dec
or
cmp
pop
and
lahf
movsb
jb
bnd
sbb
add
rcr
xor
gs
outsl
arpl
add
jae
dec
push
sub
dec
and
aam
add
sub
and
jae
lret
and
cmp
inc
jns
jbe
insl
cwtl
sub
subb
test
pusha
loope
loopne
pop
clc
push
add
or
mov
or
or
mov
push
sub
add
and
inc
or
sub
js
adc
mov
sub
inc
sahf
add
mov
or
inc
fiaddl
jae
jl
enter
xchg
sub
mov
add
lds
test
push
push
sahf
and
inc
lea
lock
insl
ltr
notl
les
addl
mov
movsb
adc
es
mov
or
out
sub
inc
sbb
loope
adc
mov
sbb
inc
jmp
xor
out
dec
or
and
and
roll
in
in
sbb
or
in
in
sub
jb
xor
cld
sar
hlt
lock
jb
in
call
jb
aam
sarl
cmp
sbb
xor
pushf
pushf
mov
ror
enter
pushf
pushf
sarb
dec
cmp
inc
sub
add
les
les
mov
fsubs
push
and
stc
clc
mov
mov
adc
mov
and
push
into
push
add
push
mov
push
xchg
or
xchg
mov
mov
sti
insb
sub
sub
add
inc
sub
insb
pop
add
or
aad
push
or
mov
into
dec
add
cmp
and
jae
jmp
lock
orb
xchg
pop
in
call
adc
cmp
adc
repnz
push
pop
cmc
std
inc
inc
add
repnz
lcall
fs
and
lock
and
test
add
repnz
xchg
xchg
or
ja
or
aaa
xchg
add
pop
call
pop
ds
add
les
fldl
jo
cwtl
movsl
jne
test
dec
push
and
adc
insb
dec
out
enter
idivl
inc
in
stc
adc
cld
cmp
inc
pushf
add
mov
sti
ret
xor
add
or
testl
mov
cld
call
std
incl
cld
jmp
and
sar
decl
leave
in
jmp
jge
decl
std
call
or
ss
sbb
dec
cmpsl
xchg
std
inc
cli
decl
adc
push
cltd
xchg
mov
add
test
jl
in
ss
pushl
push
mov
call
sbb
gs
cmpb
notb
je
and
dec
ret
sub
inc
dec
testl
and
or
jns
or
les
les
les
or
stos
adc
add
or
sub
sub
adc
notb
loopne
pop
lds
mov
sbb
iret
add
and
rolb
les
notl
pop
and
cmp
out
mov
stos
clc
xchg
add
fsubl
fisttps
sub
adc
sbb
push
lret
std
testl
fisttpl
dec
outsb
xchg
push
inc
and
mov
jmp
xchg
icebp
sbb
pusha
xchg
and
nop
inc
dec
ret
js
inc
leave
xchg
scas
js
inc
sbb
inc
mov
add
add
ret
inc
add
mov
in
lret
lcall
les
or
sbb
inc
sbb
inc
enter
lcall
pushl
adc
clc
jno
shrl
dec
mov
mov
int3
ret
and
scas
push
inc
mov
clc
ja
mov
and
in
cmp
mov
jle
pop
push
add
xor
and
pusha
rcll
push
mov
shr
mov
je
inc
or
incl
add
push
das
dec
adc
adc
repnz
xchg
cmp
les
les
loope
out
jo
adc
and
pop
xor
in
mov
call
lea
lahf
enter
mov
pushl
dec
sbb
push
sahf
push
xchg
lahf
jo
inc
insb
les
nop
mov
clc
call
incl
jbe
iret
popa
lea
roll
lock
rclb
and
stc
mov
add
xchg
mov
decl
in
pop
sbb
decl
pop
in
jo
inc
jo
inc
cld
ret
inc
add
inc
repnz
les
sti
jmp
decl
pusha
mov
inc
xchg
mov
jbe
stc
call
stc
repz
sbb
ss
pusha
xchg
and
test
pop
xchg
stc
nop
je
inc
lret
and
lods
jl
je
inc
xchg
repz
dec
popl
mov
mov
subl
add
inc
dec
cmpb
add
popa
mov
push
pop
je
jmp
jg
sub
cmp
add
cltd
and
mov
nop
pushf
or
fwait
repz
xchg
pusha
push
loope
icebp
es
or
aad
push
xchg
nop
sahf
notl
xlat
jl
lea
add
and
pop
fucomi
lock
pusha
xchg
xchg
les
or
add
or
dec
mov
or
and
mov
xchg
and
arpl
sahf
push
ds
ja
nop
clc
pushl
inc
xchg
mov
js
in
cmp
pop
lods
fucomip
jmp
pause
test
sbb
inc
sbb
inc
mov
clc
cmp
cmp
and
push
dec
leave
and
mov
sub
jo
repnz
add
inc
jo
inc
stc
shrb
dec
pop
jno
xchg
mov
cmp
mov
add
idiv
fstl
outsb
ja
push
xchg
jo
jno
les
xchg
lahf
inc
insb
les
adc
cmpsb
mov
dec
sbb
dec
daa
add
mov
add
inc
lock
push
jp
mov
jno
in
enter
decl
cmpl
decl
push
sbb
xor
out
mull
sbbb
xchg
adc
scas
push
dec
and
fistpll
aaa
inc
dec
ret
mov
and
dec
jp
lea
jb
sti
jge
push
leave
sub
pop
and
pop
inc
jmp
adc
push
xor
mov
or
jle
jne
jmp
sub
mov
cs
int
inc
cld
xor
mov
dec
dec
add
inc
push
bound
or
idiv
lods
add
rorl
adcb
sbb
call
sub
adc
lret
pop
or
pop
dec
bswap
jle
aas
xchg
and
in
or
add
xor
test
popl
push
or
nop
jg
prefetch
or
les
sarb
inc
repnz
shlb
fsubp
lahf
shrb
call
add
or
pop
dec
jno
push
mov
imul
or
adc
xor
lcall
inc
and
movsb
adc
popa
sbb
adc
add
and
adc
hlt
out
cmp
xor
mov
cmp
ss
adc
pusha
pop
scas
in
mov
xor
dec
cmp
jle
ret
push
push
or
call
clc
sub
pop
stos
xor
in
ret
push
insl
pop
aas
mov
xor
push
rorb
or
loopne
fcoml
jp
xchg
ret
js
sbb
shlb
out
mov
push
mov
xor
mov
loope
mov
nop
push
mov
test
xlat
or
nop
lock
in
adc
add
addr16
insb
dec
clc
push
xchg
mov
fbld
cmp
xchg
repnz
in
test
jne
pop
jnp
cmp
ret
mov
or
movl
out
fstps
loope
adc
cmpsb
mov
imul
jle
xor
mov
jle
xchg
adc
push
add
jle
out
adc
repz
fisttps
push
bound
pop
repz
int
dec
push
fmuls
in
fisubs
int
push
or
shrl
andb
push
add
add
es
dec
clc
cmp
int
ret
inc
leave
pop
xchg
sub
sbb
adc
cli
in
push
dec
out
nop
adc
aaa
or
aam
movsl
lret
or
and
xchg
xchg
add
insb
or
sti
nop
daa
nop
aaa
ss
enter
fiadds
add
mov
push
int3
fcmovnbe
and
dec
in
test
aas
rolb
pop
out
js
inc
xor
jge
cmp
in
add
xor
cmpsl
push
fdivrs
into
inc
xlat
das
call
sub
or
jo
xchg
sbbl
loop
dec
sub
push
call
sahf
xchg
add
add
int
jecxz
push
rclb
pop
lock
xor
in
xchg
add
jb
jnp
and
dec
or
add
pop
xchg
psllw
add
cmp
lahf
xchg
cmp
in
push
in
sub
daa
enter
in
aam
cmp
jle
jmp
xchg
sbb
pushf
xchg
aas
cmp
bound
test
xor
leave
jl
imul
pop
jns
jg
xchg
add
add
decl
and
and
pop
push
xor
mov
pmulhuw
jb
jle,pn
call
fcomps
dec
mov
mov
jg
xor
sub
dec
push
jns
jmp
fldt
incl
adc
inc
arpl
repz
insb
pusha
lock
fnstenv
leave
pusha
cmp
insb
jecxz
or
stc
gs
les
lcall
fs
jo
pop
dec
scas
mov
push
push
jmp
dec
inc
subb
jns
add
add
pop
cli
call
add
lcall
add
add
add
in
jnp
call
jmp
add
rol
daa
in
or
pop
pushl
fldenv
shr
xor
js
adc
dec
inc
ret
loope
and
cmovs
or
inc
sbb
jo
push
adc
mov
or
nop
cmpl
and
dec
or
jg
das
mov
iret
mov
sarl
mov
mov
push
js
out
adc
and
sarb
pop
shlb
test
xchg
jge
jns
or
pushw
xlat
adc
pusha
or
add
push
mov
or
mov
pop
popa
leave
add
push
xor
jne
pop
les
xchg
sbb
nop
lea
hlt
test
fbld
inc
dec
add
xchg
xchg
repz
es
adcb
xchg
and
add
cwtl
hlt
rcrb
jnp
lcall
repz
cltd
jg
or
leave
movb
jbe
jle
leave
nop
jo
jbe
call
add
xchg
and
and
or
pop
and
adc
scas
mov
jmp
loope
pop
ret
jmp
loope
xor
mov
fwait
jo
xchg
aaa
mov
pop
fdivrp
repnz
jle
into
add
add
incl
in
mov
pushf
decb
int
lcall
decl
dec
jle
repz
decl
repz
incl
jmp
loop
xchg
cmp
or
push
inc
addb
or
adc
inc
cld
dec
jne
call
sbb
xchg
adc
inc
ret
repnz
decl
icebp
std
lea
rclb
or
pusha
dec
lock
inc
shll
push
sbb
fwait
btr
pop
cli
dec
push
or
push
into
sub
pop
cld
std
call
pop
outsl
inc
or
mov
ja
add
add
or
pushl
clc
pop
out
gs
dec
and
lock
pushl
repnz
stc
daa
std
lcall
push
dec
cld
push
dec
dec
dec
daa
or
dec
ret
jl
push
inc
dec
dec
js
call
imul
push
lret
outsb
outsb
inc
das
cmp
sbb
or
sub
adc
je
xchg
xchg
and
and
loop
in
cmp
dec
push
call
decb
add
xor
inc
dec
push
or
in
icebp
cs
xchg
fs
lahf
es
sbb
mov
push
and
sub
jmp
dec
or
jae
popa
jl
jge
push
sbb
xor
mov
push
pop
call
dec
ret
pop
sub
sub
rcr
sahf
mov
neg
call
in
push
ljmp
push
inc
add
repnz
jae
jae,pt
pop
rol
pop
dec
dec
fdivrs
sahf
imull
sub
adc
and
add
mov
mov
push
rcll
das
call
sbb
mov
push
sub
or
adc
pushf
xor
xchg
push
decl
inc
nop
mov
jmp
or
lahf
cli
adc
ret
sbb
test
cmp
adc
pop
jle
jmp
call
rol
push
fs
add
outsb
xchg
push
push
mov
lahf
dec
and
fisubrl
pop
mov
stc
jg
cmp
jae
scas
or
scas
adc
andl
or
jge
inc
call
push
push
insl
or
xchg
lock
cmp
je
test
dec
testb
sbb
sbb
cmp
fnsave
testl
add
clc
shll
sbb
dec
arpl
push
pusha
test
loopne
pop
cmpsb
or
lahf
rorb
lahf
and
or
adc
iret
fsubrs
and
mov
imul
subl
adc
sbb
or
enter
mov
pop
pop
sti
or
stos
jmp
inc
jns
in
pop
ja
cwtl
and
aad
inc
shlb
aaa
push
aam
mov
inc
cmp
movsb
mov
sbb
cld
div
and
mov
mov
xchg
xorl
ja
inc
xor
call
sarb
add
mov
push
mov
in
and
rcrb
cmc
mov
loopne
jmp
inc
popa
add
push
aaa
lock
xchg
or
adc
cmp
inc
adc
sub
mov
scas
mov
test
sbb
test
push
loop
dec
nop
adc
call
or
sarl
rclb
jle
xor
ss
std
adc
js
xor
iret
jmp
pop
scas
and
xlat
addb
jne
or
rorb
inc
dec
sti
dec
add
add
add
add
cmp
cmp
cmp
daa
cmp
cmp
rcl
jmp
push
adc
push
inc
stc
add
pop
pop
adc
mov
pop
in
leave
xor
ljmp
mov
mov
dec
inc
xchg
repnz
rcrb
sub
xchg
vphaddbq
inc
pop
jmp
jl
mov
mov
sbb
pushf
mov
addr16
test
ds
jne
insb
push
leave
popa
test
lods
or
and
dec
js
shr
test
lahf
push
push
and
xchg
or
or
sub
adc
sbb
cmp
add
mov
dec
mov
mov
jmp
ss
sbb
adc
pop
dec
jne
loopne
mov
mov
or
cli
jae
pop
dec
andb
pop
minps
cmp
jb
mov
or
dec
and
das
and
push
ljmp
cmp
ja
test
inc
push
adc
pop
fdivs
ret
mov
mov
cmp
int3
xor
les
rorb
ret
mov
jl
mov
sbb
xor
mov
imul
test
enterw
xlat
cmp
lock
sub
xchg
test
mov
adc
fwait
dec
loopne
ret
out
loope
jbe
jne
add
pop
or
rorl
mov
jb
adc
add
and
call
dec
orb
cmpsb
cmp
cld
xor
fmull
adc
clc
sbb
or
xor
js
add
add
fldln2
cmc
sbbl
sbb
pop
sub
inc
pusha
adc
mov
icebp
iret
mov
dec
sub
int3
and
mov
insb
add
add
fdivs
gs
paddusb
or
xor
popa
xor
push
sbb
iret
cmpb
mov
and
mov
sbb
js
gs
clc
mov
cs
cmp
pushf
cld
out
jg
sub
push
push
mov
xor
jo
and
adc
outsb
dec
je
push
mov
je
jnp
repz
call
mov
pop
dec
repnz
jp
cwtl
pop
repnz
gs
xor
rcl
push
pusha
stos
outsl
or
enter
shrb
sbb
mov
sub
jle
jbe
push
push
mov
pop
cmp
jo
xor
sbb
add
adc
xchg
mov
or
daa
mov
fwait
mov
ret
andb
xor
xchg
adc
or
inc
loop
call
push
lea
xor
aam
xor
aas
and
pushf
mov
cli
or
scas
mov
pop
sub
sub
call
icebp
pop
pop
hlt
xlat
insb
jmp
ret
jl
je
jns
stc
enter
shrb
shlb
jae
inc
sub
mov
and
inc
push
pop
adc
ret
ja
dec
dec
gs
ret
test
sub
out
cmpsl
add
dec
imul
leave
add
sub
xor
mull
inc
inc
outsl
xchg
adc
aam
xor
and
add
push
cmpb
idivb
es
add
xor
iret
out
lahf
xor
fmull
add
ss
mov
mov
lods
clc
repz
and
jmp
dec
movsl
loope
sbb
xchg
xchg
fistl
dec
dec
in
leave
enter
add
shl
in
fs
hlt
lock
in
in
call
in
in
aam
int3
in
in
enter
in
in
mov
in
in
movsb
mov
in
xchg
nop
mov
in
in
test
in
je
insb
repnz
in
fs
cmp
jb
jb
cmp
xor
jb
jb
and
sbb
jb
jb
adc
jp
repnz
dec
inc
pop
es
push
call
arpl
pop
and
cmpsl
add
pop
lahf
dec
inc
push
inc
xor
sbb
add
fwait
push
xor
sub
and
mov
lcall
adc
and
xchg
push
lahf
jg
inc
push
popa
inc
dec
ljmp
jns
les
pop
inc
fsubrs
insb
or
jg
mov
xchg
jb
lods
ret
sbb
adc
test
test
pop
pop
pusha
inc
pop
test
in
adc
mov
movq
ret
loopne
and
dec
xor
popa
test
jg
bound
or
test
dec
xor
push
orl
or
test
pop
xchg
dec
mov
insb
or
xchg
lods
nop
and
sub
xchg
lods
jg
mov
insb
or
adc
and
dec
or
adc
aaa
or
xor
push
xchg
jg
mov
xchg
loopne
sub
dec
or
mov
fwait
and
es
in
push
ljmp
call
rcll
pop
adc
adc
xlat
or
ja
out
cmc
ret
dec
testb
scas
or
mov
stc
lds
out
inc
cmp
or
cld
sbb
adcl
clc
addb
cmp
nop
dec
inc
scas
les
sbb
adc
mov
adc
inc
lods
sbb
jmp
fldcw
lcall
std
and
add
dec
test
or
jbe
push
lock
push
maskmovq
divl
pop
mov
sbb
mov
dec
inc
sub
jnp
push
cmp
lock
or
pop
or
mov
or
xor
add
mov
xor
xchg
pusha
je
sub
movl
in
add
popa
scas
push
push
in
test
into
add
sahf
xor
xor
in
dec
push
test
adc
loop
xor
mov
lds
call
adc
xchg
std
popa
fisubrl
rcll
arpl
enter
push
inc
adc
mov
dec
inc
cmp
mov
sub
dec
sbb
jne
fs
add
add
out
lret
aas
pushl
lret
hlt
hlt
call
loopne
inc
popf
xor
cmp
cld
clc
xor
cmp
ja
imul
sub
decl
shlb
clc
push
pop
pushf
xor
ja
cli
and
lea
sahf
cmpsl
stc
cmp
lds
dec
into
arpl
nop
dec
das
pop
je
lret
or
inc
testb
loopne
shr
or
cmp
je
or
push
ret
loopne
jne
xchg
xchg
cld
sub
fildl
add
add
jne
xor
div
dec
mov
adc
scas
and
mov
fcoml
mov
cli
and
sbb
hlt
xchg
test
add
fmull
inc
xor
or
push
sub
fucom
in
pushl
rorb
xor
jmp
loope
repnz
pop
xor
in
les
push
scas
movsb
in
call
js
shll
nop
fsubrl
or
mov
adc
jmp
add
or
add
cld
mov
mov
loope
lret
lea
inc
movsl
jbe
incb
jnp
push
sbbb
fadd
ret
cmpsl
test
lea
mov
pop
and
in
int
incl
loope
call
decl
add
dec
mov
js
or
jne
insb
jae
dec
mul
mov
push
mov
iret
sbb
pop
dec
stos
lods
fs
sbb
sbb
jle
rcr
adc
daa
sub
push
iret
jmp
and
sahf
mov
push
sahf
loope
lds
arpl
pop
or
cmpsl
andl
subl
add
aaa
out
push
or
andl
cmpxchg
test
or
int
fisubrl
fucomi
sbb
movsl
inc
pop
arpl
push
jge
or
loope
mov
sahf
hlt
adc
adc
cmp
xor
repz
jns
pop
ret
test
fs
test
lahf
gs
jnp
std
and
cs
cmp
xchg
sbb
push
push
push
jmp
cltd
sbb
xchg
xchg
xchg
adc
fstl
mov
mov
loope
pop
sbb
or
lods
movsb
inc
sub
cld
jmp
xchg
push
inc
sub
cmp
aad
jo
sbbl
and
jns
xchg
and
push
pop
test
dec
imul
or
and
xchg
je
clc
mov
xchg
inc
or
fsubr
push
lret
push
clc
mov
inc
add
test
mov
mov
stos
call
pushf
sbb
stos
rcr
mov
xlat
adcb
mov
sub
call
adc
lcall
adc
pop
cmpsl
sbbb
dec
cmp
daa
xchg
test
push
decl
imul
and
mov
push
daa
and
sbb
lods
jle
aas
dec
sbb
inc
push
cli
or
pop
mov
rcll
mov
and
inc
pusha
out
cmc
push
pop
inc
push
push
mov
sbb
push
lea
sar
push
int
mov
mov
repnz
cmp
and
nop
repnz
popf
rolb
cs
sbb
xchg
pop
cltd
std
xor
pushf
dec
mov
push
loop
int3
sbb
addb
sbb
lahf
cmpsl
add
dec
hlt
in
fwait
je
mov
and
clc
fsubrs
adc
xor
xchg
pop
pop
add
jle
mov
xchg
aam
add
pop
xchg
pop
sbb
daa
bound
push
les
jle
mov
xlat
cmpsl
mov
inc
mull
sbb
lahf
adc
incl
add
cwtl
inc
or
and
or
dec
cmp
xchg
clc
ljmp
cmp
fld
aad
xchg
pop
jl
in
jg
call
and
pop
adcl
jo
pop
ljmp
or
repnz
lcall
or
mov
mulps
nop
out
lret
clc
imul
gs
std
ja
cld
test
inc
cmpsl
ficoms
xor
arpl
inc
and
out
and
mov
add
xorb
sti
pop
mov
lock
sub
mov
xchg
test
rcrb
push
call
test
dec
push
sub
addr16
lea
aas
mov
jmp
mov
into
int
test
inc
sahf
mov
and
jle
fsubrp
xchg
rclb
inc
xor
add
or
adc
pop
sub
add
ret
mov
xchg
and
jae
jmp
mov
jp
fmull
push
mov
dec
pop
dec
sub
add
inc
pop
and
lds
xor
mov
das
xchg
loop
mov
push
adc
add
xchg
out
ret
lods
inc
mov
pop
xorb
jp
add
push
in
aad
rolb
out
inc
cmp
cmp
mov
mov
mov
push
into
add
pop
adc
test
pop
loopne
mov
or
pushf
cmpsl
fstpt
or
sub
sub
jae
dec
push
xor
pop
push
xor
or
jle
adc
push
sub
enter
call
in
lea
sbbb
and
and
adc
les
xchg
and
mov
dec
pop
push
shlb
xchg
mov
or
dec
icebp
jmp
xor
sbb
leave
inc
pop
loop
jg
inc
mov
sub
je
stos
loop
mov
loope
unpckhps
shll
or
xor
shlb
mov
mov
ret
orl
mov
push
mov
jb
xor
mov
hlt
dec
stos
or
jg
sbb
fdivl
shl
xor
leave
pop
inc
or
cmp
jne
pop
in
xchg
and
repnz
sub
mov
mov
inc
call
loop
stos
dec
je
dec
jne
mov
ljmp
std
xchg
mov
jl
jo
inc
sbb
and
jg
dec
xchg
unpcklps
fnstenv
mov
add
lea
sbb
adc
or
fnsave
adc
pop
xchg
push
sub
push
xchg
inc
jbe
xor
xchg
cmc
ror
mov
or
adc
mov
jmp
inc
or
and
es
pop
jo
call
xchg
inc
adc
cmp
call
or
cmc
mov
mov
xlat
out
mov
dec
rclb
inc
int3
orb
sub
jne
adc
jle
jno
xor
xor
xor
sub
sbb
fucompp
cmp
and
pushl
shl
clc
jne
jecxz
lods
cmp
je
cmp
sahf
imul
shll
adc
out
loop
mov
push
add
jmp
sbb
ret
jle
cmp
je
or
jmp
cld
cmpsb
mov
adc
push
push
mov
sahf
and
idiv
mov
je
cmp
je
mov
je
cmp
je
xchg
inc
xchg
fbstp
xlat
jmp
inc
jmp
sub
call
mov
jmp
cmpl
rcr
xchg
jo
mov
loope
push
test
mov
ret
mov
in
imul
lcall
cmp
pop
ret
jge
pop
xchg
fldt
dec
adc
sarb
jg
inc
add
je
add
jb
std
adc
pop
stos
add
xor
or
repz
add
ret
repz
push
sbb
push
inc
fwait
mov
aam
dec
int
sub
aaa
sti
int
hlt
mov
cmp
cld
or
pop
xor
inc
pusha
mov
orb
push
mov
lock
sbb
sub
ret
and
xchg
push
cmpsl
sbb
and
and
dec
fdivs
jmp
jmp
faddl
inc
push
inc
cmp
dec
xchg
inc
cwtl
and
jle
cli
fs
jmp
stos
jne
jae
fiadds
lss
repnz
out
leave
push
jge
nop
movsl
sbb
ss
pop
call
adc
or
add
mov
adc
or
mov
and
movsl
xor
add
add
js
sbb
mov
sub
imul
inc
test
in
loopne
xchg
sub
mov
inc
clc
mov
fisttps
enter
xor
and
test
cld
dec
xor
push
hlt
fildll
mov
sub
and
ret
fidivl
repnz
sahf
out
or
les
ret
mov
add
stos
aas
in
in
inc
mov
mov
sub
in
xchg
xchg
shlb
push
inc
inc
xor
jge
cld
mov
pop
inc
mov
add
adc
decl
add
xor
rcrl
dec
add
mov
jg
mov
shr
inc
xchg
sahf
jl
sbb
mov
call
xor
adc
adc
adc
in
dec
repnz
xor
sbb
xchg
aaa
pop
or
fiaddl
xor
xor
mov
inc
add
add
imul
in
cmpsl
push
clc
jl
fldln2
add
xchg
fs
or
loope
into
inc
ja
sub
pop
push
push
adc
mov
ja
and
scas
scas
push
jmp
dec
add
fdivs
out
add
adcl
jno
inc
xchg
rclb
testb
pop
pop
add
add
inc
clc
xchg
in
bound
add
int
in
mov
jp
sbb
bound
push
popa
cmp
out
xor
push
sub
pop
data16
or
jns
sbb
push
mulb
push
das
outsl
push
mov
and
cwtl
ret
sbb
mov
push
push
gs
sbb
shr
ds
add
mov
int
incl
pop
jns
inc
cmp
lret
fwait
pop
sub
sub
fiadds
xchg
add
call
movsl
incl
test
mov
push
insl
adc
cs
jg
fsubr
sub
sbb
std
add
inc
sbb
sbb
mov
popa
sti
popa
sbb
incb
fdivrs
jge
in
mov
ret
sbb
adc
and
add
xor
cmp
sbb
add
xchg
xchg
mov
cmpb
push
sbb
and
mov
call
adc
add
pop
push
imul
mov
mov
icebp
popf
pushf
sbb
loopne
pop
add
jmp
xor
add
sbb
sbb
jle
inc
jmp
xchg
jle
push
fstpl
jmp
int3
fsubrl
add
pop
filds
imul
and
cvtps2pi
cmp
push
mov
pop
gs
ja
and
push
adc
sub
mov
xor
popa
clc
inc
stc
mov
daa
pusha
push
inc
xchg
sbb
sub
xor
std
in
lds
push
popl
arpl
mov
add
leave
lret
or
test
int
push
xorb
data16
ja
adc
scas
dec
jns
xorl
std
xchg
add
inc
cmp
sarl
adc
pushl
add
sbb
and
leave
fcoms
fsubs
jmp
xchg
lret
aad
push
pop
aaa
cmp
sub
or
and
xchg
shr
lret
das
xchg
rcr
inc
daa
imul
inc
fildll
cmpsb
mov
mov
adc
cmpsb
mov
das
pop
in
js
pop
inc
movnti
notl
call
push
lret
fwait
xchg
jo
divb
int
loopne
ret
or
pushf
push
xchg
jmp
scas
sub
andb
cli
and
icebp
adc
inc
adcb
push
push
cli
xchg
xchg
inc
pop
incl
inc
mov
sub
inc
and
xchg
ret
or
jne
jne
or
and
repnz
push
xor
inc
adc
sbb
not
push
sti
stos
leave
push
ud2
clc
jge
pop
data16
shrl
or
jmp
in
arpl
sbb
ret
test
call
mov
rcr
shlb
cld
call
sub
push
push
repnz
je
or
dec
jmp
adc
and
mov
in
push
inc
adc
dec
push
cld
mov
jb
sub
mulb
test
add
fistps
mov
int
push
lods
mov
sub
or
xor
fcmovu
lret
lds
xchg
add
loop
and
popa
test
lds
out
sbb
push
stos
jae
repz
out
and
sbb
add
test
test
sbb
ds
push
fimuls
push
repz
ss
and
and
xchg
repnz
mov
xchg
rorb
std
cld
gs
mov
mov
addb
scas
inc
add
or
out
cmp
cli
push
xor
lds
scas
insb
fdivs
daa
leave
les
sarl
inc
adc
je
rclb
pop
push
mov
push
dec
sti
cs
dec
add
pop
call
mov
movsb
lahf
ret
popa
adc
add
outsb
xchg
int
adc
pop
inc
outsb
inc
imul
push
rclb
push
rclb
cs
cmpsl
jge
pop
je
invd
es
push
xor
mov
sbbl
jb
call
sarb
adc
lods
in
cmc
div
mov
push
call
pop
imul
and
in
or
and
lds
jl
pushl
icebp
fsub
sbb
jp
add
sarb
mov
mov
dec
movb
je
popf
inc
jno
inc
dec
outsb
dec
or
insb
aaa
xchg
xchg
pop
add
pop
movsb
orl
adc
add
adc
add
int
test
aam
data16
ret
insb
inc
outsl
pop
mov
and
mov
leave
or
push
outsl
lock
clc
roll
pop
daa
stc
and
mov
inc
imul
cmpsl
add
andl
push
sti
adc
push
or
stos
aam
lods
or
ret
lock
repz
cmp
add
xor
adc
fs
sbbb
js
ja
mov
sub
es
push
mov
sbb
outsl
xchg
add
test
mov
push
outsb
mov
roll
insb
xchg
jo
adcb
movsb
ret
sbb
sub
xor
mov
mov
sub
shll
xor
addr16
add
inc
mov
rclb
sub
loop
cmpsl
cs
xor
inc
or
ja
and
dec
sub
xor
mov
sbb
mov
and
jb
mull
rol
clc
dec
pop
sbb
fsubrl
jbe
lods
outsb
popa
lods
and
fdivrl
loopne
dec
pop
mov
sbb
and
in
fadd
scas
addl
stos
in
or
or
add
xchg
aam
lock
lret
jo
pop
roll
mov
cvtdq2ps
jg
cmp
cmp
in
and
cld
add
jg
in
sar
cli
and
cmp
movsb
les
loop
rcrb
imul
and
adc
jb
add
shlb
sub
jns
divl
xor
cmp
dec
mov
fsubr
mov
mov
jmp
xor
and
xor
cmpsl
popf
nop
iret
or
jb
je
rcr
xor
clc
sub
les
push
repnz
jb
adc
adc
inc
ja
aas
jno
jbe
jns
sub
loop
pusha
and
movsb
popf
ds
adc
call
mov
add
jmp
cmp
add
call
and
xchg
jae
mov
dec
adc
les
and
fs
mov
in
xor
icebp
cmp
les
aaa
jecxz
xor
lods
or
es
cmp
sahf
icebp
fisubrs
push
adc
pop
mov
mov
push
inc
mov
pop
mov
mov
xchg
rcrb
ss
add
adc
jnp
daa
fs
add
inc
xchg
add
bound
push
add
mov
push
add
xor
dec
add
mov
into
iret
in
jp
inc
add
pop
iret
mov
mov
fimuls
std
jp
movsb
dec
iret
pop
int3
xchg
xchg
adc
hlt
je
inc
out
sbb
sbb
orb
sbb
mov
mov
enter
testb
pop
addr16
or
dec
or
rclb
push
jbe
clc
insl
call
popa
lret
and
cld
pop
dec
inc
ret
pop
pop
pusha
cmp
pop
add
push
cmpl
repz
cmp
add
sub
inc
adc
rorb
jge
or
in
stc
es
jo
clc
dec
jle
std
stc
mov
lods
aas
jne
xchg
adcb
push
lahf
dec
ds
aaa
push
push
rcrb
xchg
and
sbb
mov
jbe
or
popa
sub
fs
mov
xchg
jbe
nop
mov
mov
pop
fwait
add
push
movsl
insb
xchg
and
inc
sbb
xchg
push
xor
adc
mov
test
jmp
nop
pushf
xlat
xchg
scas
je
sbb
or
dec
dec
jp
push
push
dec
inc
sub
imul
mov
imul
idivb
fwait
pop
mov
add
mov
dec
jne
mov
sub
shll
xchg
jne
inc
xor
lcall
pushf
mov
xchg
push
test
add
push
test
and
sub
adc
fld
sub
fwait
or
dec
inc
adc
arpl
bound
loopne
xchg
pop
mov
in
cmc
push
mov
ljmp
cmp
xchg
mov
addb
mov
jmp
leave
jge
push
add
push
push
test
dec
or
push
imul
or
sti
adc
mov
sub
test
sub
sub
imull
mov
mov
or
jmp
adc
addb
add
add
jne
sbb
push
repnz
cmpsl
mov
dec
scas
hlt
push
mov
push
in
inc
mov
leave
push
mov
dec
xchg
mov
mov
mov
add
inc
and
dec
push
jne
es
add
cmp
test
dec
ss
call
loop
ljmp
and
clc
dec
iret
push
call
or
fisttpll
pop
and
loopne
add
cltd
cwtl
or
cs
mov
sbb
adc
cmp
movsl
addl
pusha
inc
or
adc
push
aad
jne
jg
pop
sarl
rcl
lret
lock
and
pop
clc
cmpsb
add
lahf
scas
push
sbb
sbb
pop
test
nop
fsubrp
push
or
mov
and
dec
inc
scas
dec
mov
or
sub
jnp
add
enter
pop
or
xlat
rcl
clc
xlat
add
insb
imul
or
call
or
cmpb
cmp
adc
dec
stos
dec
sbb
es
cmp
xor
bound
loopne
adc
or
lock
fwait
adc
ljmp
cltd
inc
or
pop
shll
pop
jnp
cmp
fcomp
sbb
fdivs
sahf
mov
ja
aad
sbb
push
sbb
fisubrs
repnz
adc
pop
sbb
jmp
sti
add
jl
rol
ret
cmpsl
and
std
into
push
sar
jmp
adc
iret
dec
push
je
lods
daa
outsl
add
rorb
test
ja
icebp
repnz
daa
pop
jge
jle
jg
aas
addl
inc
xor
das
sub
adc
lcall
jl
inc
sbb
inc
pusha
sub
pop
push
in
mov
xchg
cmp
sub
and
mov
jne
je
sub
dec
sub
or
les
fidivl
dec
cmp
lret
xor
stos
sub
sarl
adc
repz
jge
mov
mov
push
pop
cmpb
inc
jecxz
xor
push
mov
sahf
aam
jp
pop
lods
add
dec
out
fs
push
jo
fsubl
push
call
clc
xor
js
outsb
sub
inc
push
push
rorl
stos
test
jne
or
pusha
test
sahf
jg
lock
mov
add
or
rolb
pop
addl
sbb
add
and
inc
int
dec
mov
dec
or
mulb
xchg
jbe
pop
cli
or
adc
xor
inc
aam
aad
fs
psubw
pop
iret
push
pop
xchg
bound
enter
mov
ljmp
imul
xor
orb
in
sbb
mov
pop
push
adc
push
cs
add
pop
jbe
call
add
add
je
jmp
out
xor
sbb
push
or
shlb
cmp
jb
inc
adc
mov
insb
and
imul
dec
mov
popaw
addr16
mov
add
jo
sbb
push
push
add
int3
add
mov
mov
add
mov
test
loop
inc
sbb
jbe
adc
ret
push
lock
mov
jmp
pop
push
pop
pop
lea
or
stos
push
sbb
or
pop
dec
div
fwait
in
jmp
stos
and
shl
mov
or
inc
cmp
dec
or
rolb
jl
jg
adc
push
mov
je
shr
add
cmp
ja
sub
or
iret
test
mov
hlt
ds
inc
lods
cmpsb
out
repnz
inc
add
ffree
rorb
mov
aaa
or
mov
movsb
movzwl
push
or
ljmp
bnd
cld
or
mov
sar
add
sbbl
pop
shl
or
add
add
or
je
enter
or
sar
sub
sbb
mov
lret
push
add
mov
xchg
js
popa
mov
testb
add
dec
cld
or
and
jne
nop
insl
shl
push
adcl
gs
ret
fs
xchg
mov
jg
cwtl
xchg
cmp
jge
test
xor
into
jle
clc
inc
adc
lock
jl
ja
xchg
bound
pop
mov
call
imulb
jl
fadd
movb
paddsw
and
std
mov
add
sbb
xchg
inc
testb
add
add
xchg
insb
data16
sti
cwtl
mov
and
add
testb
adc
xor
inc
shlb
outsl
inc
cmpb
shrb
sbb
mov
dec
push
add
dec
pop
cmp
cmp
sbb
cmp
inc
orb
inc
pop
sub
adc
dec
and
add
dec
or
inc
pop
adc
sub
jmp
rcl
jae
sub
add
inc
jbe
add
sbb
aam
fdivr
pop
mov
fildl
sbb
xor
inc
shl
add
rclb
sub
sti
add
in
roll
iret
xchg
nop
es
stos
jmp
lea
add
xchg
mov
subl
jno
fidivrl
loop
ficompl
sub
add
jb
pop
loopne
pop
fmull
push
mov
cmpb
and
mov
fisubrl
aam
mov
in
xor
int3
sub
jae
cs
les
or
cmpsb
jge
mov
and
push
sbb
test
xorb
int3
decl
xor
dec
test
inc
les
mov
jbe
inc
dec
mov
push
or
jne
mov
mov
dec
fcoml
pop
sbb
inc
rcll
and
mov
jae
push
cwtl
data16
nop
ret
int
lods
push
out
dec
jb
mov
sub
push
rclb
loop
dec
les
je
mov
bound
mov
mov
xor
lcall
nop
jmp
add
in
push
jns
and
adc
push
cwtl
jmp
in
lock
add
mov
fdivrl
rcrb
cmp
cwtl
mov
and
lcall
adc
inc
cmp
jne
decl
mov
int3
in
lock
ret
ja
push
add
mov
add
insl
ja
jmp
mov
dec
jmp
sub
dec
adc
xchg
push
je
dec
insb
ja
stos
sbb
sub
enter
push
lock
sarb
mov
pop
cmc
jmp
lock
lea
inc
cld
add
sarl
ja
outsb
mov
inc
loopne
dec
mov
push
mov
xchg
cld
cli
rorb
testl
push
sbb
movsb
movsb
or
lods
add
dec
loopne
mov
mov
mov
adc
scas
mov
mov
mov
pop
ljmp
sbb
xor
lcall
or
jnp
testl
stc
or
fwait
and
add
push
push
jmp
insb
fwait
inc
subb
mov
stc
sbb
add
xchg
lods
or
loopne
sti
xchg
add
daa
frstor
add
add
les
and
popf
add
movsb
mov
fldcw
rcrb
push
adc
inc
rcll
mov
push
js
jmp
mov
and
or
lret
mov
aas
enter
nop
push
test
and
xor
repz
lcall
pop
push
or
lods
in
add
mov
jb
loopne
or
fadds
dec
pop
or
outsl
or
movsb
cmp
mov
int3
pusha
add
and
movb
punpcklbw
mov
mov
clc
pop
mov
ja
mov
pushf
mov
sub
add
cmp
mov
fiadds
arpl
jb
jbe
cmp
xchg
icebp
test
pushf
add
call
pop
aam
add
add
adcb
cltd
imul
cmp
outsl
notb
add
inc
sub
testb
jge
adc
cmp
jbe
out
int
scas
pop
adc
or
lret
mov
fs
vmovmskps
mov
fisttpll
jp
stos
pop
aad
rclb
jecxz
push
mov
jb
and
jb
incb
test
mov
mov
mov
std
je
lret
inc
sub
pop
mov
and
imul
popf
add
push
sbb
sub
push
mov
mov
and
ja
lcall
dec
xor
lods
mov
cld
cli
push
adc
xor
dec
test
js
sar
mov
mov
shrb
mov
and
fidivs
jmp
xchg
add
sahf
or
xor
sub
dec
sbb
inc
dec
fstpl
lock
lret
add
dec
push
jne
sub
sahf
mov
mov
icebp
dec
cmp
rol
cli
je
push
dec
adc
cmpsb
test
ja
hlt
push
push
jle
pop
cmpsl
out
cmpsl
std
movb
mov
or
orl
call
or
sahf
or
or
loopne
clc
sub
mov
lock
das
iret
jmp
cmpsb
cmpsb
test
dec
pop
movsb
add
push
scas
mov
je
jo
inc
cmc
orb
in
ss
inc
or
or
in
in
adc
inc
out
in
and
lds
int3
mov
enter
mov
test
imul
mov
push
jae
pop
dec
shr
sarb
inc
and
push
or
and
jno
sbb
hlt
cmp
cld
jnp
lods
out
adc
inc
mov
call
adc
es
call
insl
and
sbbl
xchg
xchg
cmp
insl
ja
pop
mov
xchg
mov
xor
dec
test
getsec
and
push
aad
mov
cmp
ret
xchg
xchg
movsl
xchg
mov
push
push
enter
cwtl
dec
jecxz
push
cmp
adc
adc
cmpsl
pop
add
leave
imul
scas
das
pusha
dec
adc
notl
xchg
test
lcall
cmpsb
pop
mov
mov
adcl
push
push
inc
imul
decb
jl
jne
mov
mov
jmp
jmp
icebp
enter
shl
mov
rol
mov
mov
mov
push
out
cmp
jle
loopne
and
enter
pop
pop
sbb
mov
pop
xchg
mov
push
je
sbb
fimull
shlb
pushf
or
pop
test
lds
cwtl
and
xor
sub
xchg
sub
cmp
insl
inc
ja
or
pop
inc
mov
sub
les
jb
das
push
inc
mov
or
fsubl
inc
add
jo
and
pop
call
xchg
lcall
mov
jno
jl
or
lcall
adc
adc
cwtl
cmp
lock
cmpb
shrb
adc
lret
adc
in
dec
push
fimull
xchg
sbb
jg
or
call
jns
sbb
pop
sbb
or
add
inc
mov
loopne
and
sarb
adc
fmul
ds
pop
cmpb
int3
rclb
xchg
push
adc
mov
aam
adc
mov
jmp
jecxz
xchg
in
in
ss
das
fimull
inc
ret
mov
cmp
ret
and
movsb
sbb
jmp
push
nop
in
mov
test
test
nop
xor
enter
cwtl
cmpl
fistpl
bound
arpl
jne
stos
mov
jb
cmc
dec
call
vpmacsdqh
ja
push
dec
ss
pop
inc
adc
or
stos
test
jne
pop
xchg
mov
pop
int
mov
out
push
adc
pop
rclb
mov
xchg
in
add
mov
push
sbbb
dec
test
shr
dec
jne
lods
jmp
mov
nop
xchg
mov
inc
out
into
pusha
xchg
jl
pusha
int3
mov
je
clc
xor
aam
test
addr16
inc
subl
sub
xorb
cs
pop
ds
call
testl
popf
xor
fadds
test
in
and
dec
enter
mov
sbb
sub
push
test
lret
sub
dec
mov
repz
pop
aas
push
xchg
lahf
push
or
dec
jecxz
mov
adc
inc
sub
in
into
lret
xchg
adc
imul
fprem1
mov
sub
mov
aaa
les
inc
mov
outsb
call
add
adc
or
das
call
addr16
std
pushf
ret
call
and
fistps
xchg
shl
sbb
stc
insl
clc
in
out
lds
mov
xchg
lret
negb
loope
adc
sahf
add
int
fiaddl
fisubs
and
mov
popa
fchs
mov
sub
mov
lock
je
adc
mov
aad
xor
jo
sbb
add
adc
lret
adc
or
and
pop
call
lcall
jl
lods
pop
push
cmpsb
data16
imul
sbb
add
pusha
jle
rolb
cwtl
ja
sbb
mov
and
xor
testl
or
mov
jge
cli
sbb
add
push
call
je
shlb
push
mov
ja
dec
push
sbb
add
xchg
mov
inc
xor
ljmp
cmp
sub
out
psubb
lock
scas
call
ret
or
shll
call
mov
das
dec
and
sub
setne
les
int
mov
fldt
xchg
and
add
popa
push
fdiv
mov
mov
pop
leave
lret
popf
push
xchg
inc
pushf
mov
das
xlat
fcomi
xchg
aad
pop
adc
push
xchg
mov
and
xor
aas
mov
daa
push
sbb
dec
jns
mov
lods
out
cld
sbb
inc
dec
jne
in
out
shlb
inc
ds
push
arpl
push
dec
xor
push
orb
pop
dec
loop
push
lahf
cmp
ret
pushf
inc
xchg
sti
xchg
jge
xlat
xchg
mov
xor
das
push
push
clc
data16
xor
or
dec
add
push
push
push
push
insl
sti
pop
imul
jge
push
cmp
mov
shl
add
mov
adc
and
or
push
sbb
mov
idivb
arpl
cmp
or
xor
shlb
inc
mov
int3
adc
dec
add
mov
into
addl
leave
xchg
enter
dec
mov
adc
call
loope
movsb
mov
in
enter
test
lret
cmp
inc
nop
sbb
inc
sub
subl
and
jle
sub
jnp
mov
mov
lret
test
mov
adc
or
sahf
xchg
or
adc
xchg
xor
jnp
inc
or
decl
sub
inc
das
lcall
dec
and
lret
and
inc
test
mov
add
fs
bound
push
fidivl
clc
loopne
lret
sarb
or
push
fsubr
or
or
pop
int3
cmp
fiaddl
sbb
mov
test
stos
jno
xchg
add
sbb
jo
or
mov
pop
nop
inc
mov
movl
sub
cmp
fildll
jno
call
jl,pt
jl
es
repnz
popf
js
pop
mov
xor
mov
in
sub
push
push
test
adc
out
push
adc
cwtl
pop
cwtl
mov
xchg
mov
inc
cmpsb
cmp
pop
and
lods
lret
xchg
testl
mov
dec
xchg
pop
pusha
cltd
sub
push
xor
xor
lock
ja
adcl
popf
push
je
sub
cmp
push
xchg
divb
lret
adc
sar
jge
jle
sar
add
add
cld
pop
clc
add
mov
pminsw
adc
daa
pusha
cld
lret
push
push
sbb
push
xchg
lods
addl
sbb
rorb
cli
outsb
or
out
sbb
jle
adcb
jnp
jnp
fisttpll
mov
add
aas
inc
mov
adc
and
sub
inc
pop
push
push
rorb
add
out
and
cld
clc
sub
and
rorb
mov
test
popa
sahf
add
cmpsb
mov
fsubr
cli
mov
hlt
leave
loop
cli
jl
lret
out
hlt
pop
adc
pop
mov
mov
add
dec
and
loop
js
outsb
mov
cmc
mov
xchg
or
inc
cmp
cltd
and
movsl
push
rorb
mov
fsubs
lock
add
dec
adc
inc
mov
adc
pop
cmp
cs
mov
sub
xor
xchg
mov
and
ds
add
jae
cmp
xchg
into
inc
dec
or
mov
xchg
out
daa
fcom
mov
xchg
inc
sbb
mov
dec
lods
pushf
mov
xchg
mov
je
inc
mov
frstor
push
push
mov
add
movsl
in
and
movsl
mov
or
sbb
ret
scas
mov
inc
xor
sbb
jp
orb
andl
ljmp
inc
xor
out
inc
out
test
dec
cld
adc
ljmp
add
cmpb
mov
test
mov
test
adc
test
cs
xor
or
repnz
cmpsl
push
inc
inc
je
imulb
sti
scas
mov
mov
mov
lret
hlt
addr16
jge
mov
imul
mov
enter
out
out
pop
int
jne
mov
xchg
inc
jno
fsts
adc
int
enter
movsl
sub
loopne
or
mov
scas
fbstp
or
lds
jle
int
lahf
mov
inc
sbb
or
xor
push
repnz
dec
mov
sahf
ficoml
pop
gs
mov
dec
sbb
cmp
movl
xchg
mov
and
pop
mov
nop
decb
jp
push
sbb
lock
push
cli
mov
ret
dec
mov
cmpsb
adc
lahf
mov
shll
sysret
pop
inc
xlat
xor
incb
xchg
jns
es
loop
sbb
xchg
clc
mov
mov
rcrb
add
cmp
mov
add
add
fimull
nop
out
insb
js
aam
movsl
mov
cwtl
xchg
arpl
pop
cmpsb
pusha
sub
dec
sbb
dec
shrl
and
rclb
xor
and
inc
pop
jecxz
pop
add
pop
xchg
mov
adc
pusha
hlt
sub
mov
call
lret
call
loope
hlt
call
cmc
idivl
rcl
push
call
div
loop
push
call
lahf
cmp
push
push
pushf
cltd
or
cltd
cs
jle
hlt
adc
xchg
pop
push
fnstcw
les
ljmp
movsb
scas
cld
jp
pop
fsubs
mov
mov
sub
mov
jmp
lds
subps
test
insl
sbb
dec
fwait
sub
repnz
inc
shll
sbb
xchg
cmp
mov
out
fiaddl
loop
shrb
leave
mov
pop
in
xchg
pushf
pop
mov
jae
nop
push
cli
ljmp
in
call
ret
pop
dec
outsb
outsb
outsl
and
fs
pop
jecxz
pop
push
push
inc
push
dec
inc
pop
adc
dec
test
and
add
inc
popa
push
xchg
pop
dec
pusha
mov
push
xor
movsb
and
adc
popf
and
das
push
or
cmp
fs
iret
repz
mov
in
add
cmp
push
jl
out
xchg
push
pushf
inc
nop
fcoml
add
loopne
mov
and
imul
dec
cltd
mov
out
mov
fwait
hlt
lcall
bt
stos
stos
mov
adc
cmpsl
lgdtl
add
or
sbb
push
icebp
out
sub
xor
sub
jg
insb
mov
xor
sub
cmp
jno
fsubrl
and
jne
outsl
xor
rorb
popl
cmp
fldt
push
rorb
sarb
aam
repnz
mov
shll
xor
dec
es
int
fnstcw
flds
jae
es
rorb
repz
xchg
stos
aam
iret
repz
lock
adc
and
out
xor
push
out
sahf
out
lcall
sahf
aam
repnz
adc
out
mov
out
punpckldq
xchg
cmpsb
das
enter
aaa
bnd
push
aad
push
inc
push
push
repz
repz
mov
stos
mov
sahf
out
ds
sbb
ds
jns
out
data16
cmpsb
mov
int3
loop
add
sbb
repz
es
insb
adcb
mov
aam
fadd
out
hlt
add
push
fmuls
jns
out
push
inc
push
push
data16
scas
ret
data16
mov
adc
sysenter
jo
subl
loop,pn
arpl
mov
mov
movsb
dec
cmp
jb
add
add
and
sbb
arpl
pop
mov
mov
pop
xor
fcoml
mov
outsl
cmpsl
nop
add
inc
lods
push
insb
jae
dec
jb
push
jl
inc
dec
push
mov
pop
add
xchg
or
dec
or
mov
repz
fmul
nop
xor
inc
and
inc
xchg
mov
adc
jo
push
loopne
iret
jl
mov
and
dec
inc
sahf
je
push
outsb
ja
cmpsl
jno
push
push
fs
push
xor
lods
inc
inc
fnstenv
rcl
xor
mov
adc
adc
lahf
repnz
push
jns
lcall
fwait
dec
out
rolb
les
and
xor
mov
jmp
cld
dec
cmpsl
lods
cmp
sub
add
mov
divl
dec
outsb
pop
fcomps
jbe
sub
jbe
jo
lret
test
sbb
nop
fstp
ret
dec
fsubr
push
cs
pop
and
test
sbb
stos
pop
loopne
rcll
mov
jo
cltd
inc
sbb
outsl
xlat
je
sarb
je
add
adc
push
aaa
push
mov
mov
lretw
xor
dec
jo
inc
cmp
mov
arpl
or
outsl
lods
jecxz
jae
imul
inc
and
push
popa
fs
bound
ja
mov
decb
inc
inc
inc
push
dec
adcb
mov
addr16
das
inc
xchg
ja
lods
mov
pop
mov
inc
movsb
call
mov
sbbl
lds
dec
mov
sub
aas
in
mov
mov
inc
xor
dec
sub
sub
addr16
xchg
cmpsb
inc
cmpsl
mov
pop
inc
cld
gs
xor
xchg
sub
and
and
inc
mov
je
pop
pusha
add
pop
sub
inc
inc
push
out
imul
mov
nop
add
add
jb
inc
jecxz
pop
movsl
push
xchg
and
sbb
sbb
adc
test
leave
cmp
mov
or
cmp
push
mov
inc
push
test
inc
or
xchg
and
roll
jg
daa
stos
sbb
jmp
ja
lret
mov
mov
adc
sbb
xchg
insb
inc
cmp
insb
jb
mov
insb
and
xchg
or
or
push
add
and
xlat
mov
push
imul
dec
add
rorb
loopne
push
push
inc
xor
fcoml
lock
fcomps
cmp
daa
jns
out
or
mov
out
sahf
out
adc
sbb
fistpl
imul
addb
jbe
test
pop
fcomip
mov
into
cs
push
mov
iret
repz
mov
ljmp
mov
sub
outsb
bound
add
add
pop
xchg
pop
mov
aaa
xor
dec
mov
jo
cltd
das
jo
or
add
mov
das
mov
add
cs
or
lock
out
mov
adc
add
and
push
insl
cmp
adc
push
add
int3
sbb
cmpsb
inc
fisubrl
inc
insb
pop
rcrb
es
push
shlb
incb
sarb
cmp
mov
pop
repnz
in
scas
pushf
sub
das
jns
enter
mov
and
mov
and
adc
rcl
ficoms
addb
adc
push
inc
adc
outsl
incl
adc
and
jo
push
decl
ja
ja
mov
mov
mov
fwait
jg
lock
filds
orb
lods
stc
out
jo
ja
cmpb
js
jo
js
and
das
movsb
jl
leave
flds
decl
add
jb
stos
stos
scas
xchg
ja
stos
jg
jo
pop
pop
clts
pop
outsb
push
xchg
out
add
loopne
popa
leave
repz
lock
dec
shrb
jmp
jno
xlat
inc
push
ss
int
ss
add
add
adc
push
data16
insb
add
and
sub
push
push
dec
add
cmp
jle
jg
push
push
add
add
movb
out
shrl
sbb
es
out
fidivs
and
push
cwtd
int3
jns
out
decl
data16
repz
cltd
cltd
cltd
cltd
popf
out
out
cltd
cs
int3
int3
out
cmp
flds
insb
shl
pushw
cltd
int3
incl
add
cmp
repz
xor
cs
iret
data16
cmp
repz
cltd
repz
cmp
int3
int3
int3
int3
pushf
out
mov
cmp
out
push
shrl
push
data16
mov
jmp
cmp
ss
xor
or
data16
push
mov
xor
data16
repz
data16
iret
repz
into
int3
jns
out
out
into
cmp
int3
jo
push
add
cmp
push
xor
dec
jmp
shll
data16
data16
out
es
cltd
cltd
cltd
jno
cmp
imulb
ljmp
int3
out
cmp
das
cltd
push
outsb
ret
adc
add
push
and
cltd
int3
jmp
push
int3
data16
jge
adc
push
cwtd
out
mov
int3
decl
insb
cs
sub
jno
int3
int3
xor
int3
adc
jmp
or
cmp
sub
push
lcall
dec
jns
out
dec
jmp
jns
out
jns
jns
incl
out
ljmp
data16
cmpsl
ds
insb
ss
adc
pop
add
ja
xchg
xchg
int
mov
add
add
add
insb
ss
jecxz
ljmp
or
sbb
push
outsb
out
inc
pop
in
pop
xor
cli
jg
int
pop
in
pop
pop
cli
pop
pop
pop
add
sti
sti
cmpsb
or
lcall
sti
jnp
cmp
incl
in
sti
push
pop
mov
ja
cmp
add
in
in
add
cmc
jg
mov
in
dec
in
push
outsl
jp
xor
dec
pop
cmp
cmp
in
pop
inc
jae
fwait
mov
pop
and
pop
ss
dec
add
lock
adc
stos
push
iret
and
inc
pop
adcb
int
aas
nop
ja
js
fstl
jg
fcomip
adc
jo
xchg
std
fstps
incl
pop
js
mov
cwtl
mov
xchg
mov
jg
jg
js
jo
mov
mov
ret
inc
aas
js
mov
xchg
outsl
pop
jg
jnp
fwait
mov
pushl
clc
testl
or
fimuls
mov
jo
pop
jge
pop
dec
xor
enter
notl
adc
xchg
mov
jo
ja
js
mov
fwait
xchg
cwtl
pop
or
pop
mov
xchg
xorl
inc
sub
add
enter
and
das
pop
sbbl
xorl
stos
gs
jns
pop
push
sti
mov
xor
mov
pop
inc
ds
pop
mov
lcall
sub
sbbl
jl
jo
pop
add
int
jmp
ss
push
jo
and
jg
add
in
in
pusha
add
xor
xchg
out
add
cmp
clc
cld
clc
inc
and
push
add
mov
addb
nop
mov
add
inc
add
mov
xor
in
mov
pop
aas
xor
outsl
leave
lahf
inc
cmp
add
out
ds
pushf
cmp
inc
jmp
out
popf
or
repnz
jg
jl
jnp
imul
shlb
add
ljmp
cmp
adc
mov
jg,pt
add
lock
jg
xor
aaa
nop
mov
mov
add
fldl
jae
mov
lock
inc
mov
js
ds
cmp
mov
dec
push
loope
inc
inc
lahf
aas
idivl
jge
cmpl
mov
aas
add
jmp
cld
fisubl
cmp
aas
push
in
add
jmp
bound
testl
fistpll
out
or
loop
mov
std
jnp
xchg
adcl
fcmovu
lret
ss
aas
int3
mov
sti
jp
xor
dec
aas
fldt
or
aas
arpl
inc
lret
rolb
in
insl
imul
jg
aas
insl
mov
pop
inc
aas
jp
adc
sbb
lods
mov
aas
aas
pop
mov
add
in
add
adc
push
bound
and
dec
nop
dec
sub
addr16
test
gs
out
in
gs
cmp
mov
fsubrs
in
pop
addr16
mulb
xchg
adc
push
mov
or
add
cwtl
cs
push
jg
js
push
sbb
dec
ja
push
fsubs
push
push
pop
pop
outsl
xor
cli
mov
out
test
xchg
out
mov
mov
idivb
push
mov
jnp
or
add
ss
mov
and
push
mov
mov
fstp
fcompp
out
jp
mov
push
test
ds
rol
js
jbe
add
pop
xchg
aas
xchg
gs
and
insl
inc
push
xchg
fs
bound
in
int
rorl
xchg
arpl
daa
clc
xchg
fs
dec
adc
xchg
cltd
jnp
dec
adc
dec
push
pop
pop
arpl
aas
add
mov
jb
pop
add
inc
fisttps
mov
lcall
ret
cmp
jl
add
xor
adc
pop
or
arpl
addb
add
adc
daa
fcomp
cmp
mov
sub
sub
popa
jbe
sub
xchg
pop
cmp
lahf
and
cmp
or
jecxz
push
add
mov
pop
sub
jp
pop
inc
sub
cmp
maxps
xchg
lds
dec
jae
es
add
addr16
cmp
lret
mov
iret
xchg
ljmp
pop
daa
cwtl
std
outsb
adcl
adc
mov
sahf
push
insb
lret
push
jb
add
or
push
sub
sarl
addr16
xor
arpl
sbb
mov
icebp
sarl
adc
sbb
pop
shl
loopne
add
jle
bound
inc
scas
mov
lret
dec
das
and
ret
and
pop
mov
pop
call
add
xchg
or
popf
sub
inc
add
dec
jb
inc
add
jns
mov
aas
push
outsb
push
sahf
jg
cmp
arpl
je
add
jbe
in
popf
sbb
arpl
pop
jne
sahf
or
jb
add
cmp
roll
add
adc
fiaddl
or
jae
or
js
pop
pop
je
insl
mov
addb
outsl
add
or
inc
or
cwtl
xchg
mov
andps
gs
or
jnp
shl
ja
pop
popa
push
outsl
fldt
outsl
push
jnp
pop
xchg
outsb
mov
pop
or
jb
mov
and
ret
aas
iret
inc
pop
cld
jg
and
jb
insb
push
je
int
xlat
jnp
sub
decl
ret
lcall
or
mov
sar
lret
cli
xor
fldenv
mov
add
je,pt
shl
sbb
cltd
cwtl
clc
add
add
add
jge
fiaddl
sbb
xchg
ret
inc
mov
ss
xchg
icebp
push
adc
inc
push
dec
ficoms
imul
push
mov
iret
pushf
out
sahf
je
outsb
mov
inc
adc
sbb
outsl
inc
ret
imul
push
xor
sahf
out
test
push
inc
inc
lcall
adc
imul
jne
jge
xchg
outsb
and
addr16
out
mov
xchg
out
sbb
popa
lahf
add
mov
push
clc
push
bound
add
aaa
pop
inc
imul
push
roll
pusha
add
lock
adc
pinsrw
out
add
mov
add
xchg
jns
mov
hlt
jecxz
dec
je
add
notl
outsl
mov
shlb
jne
imull
aaa
dec
add
mov
adcb
ret
mov
dec
push
cmp
cmp
jae
or
data16
js
sub
pop
cmp
and
gs
sub
lods
outsb
out
sbb
mov
and
and
outsl
in
das
lcall
jns
jae
aas
ds
or
push
jl
jae
jne
outsb
cmp
push
sbb
jmp
loopne
in
lods
cmp
insl
jbe,pn
mov
add
xchg
push
xlat
jbe
or
je
ret
clc
frstor
dec
push
les
fdivr
sub
outsl
imul
cld
dec
js
and
and
jo
ja
and
les
jae
dec
xchg
inc
outsl
cmp
das
dec
dec
cmp
sbb
jns
je
add
or
dec
pop
sbb
cs
pop
cwtl
subl
sub
pusha
push
ss
and
push
jo
loop
js
lcall
cmp
xor
arpl
xor
xor
pop
push
insb
aad
sub
das
addb
jae
mov
lds
outsl
pusha
insl
jno
xor
arpl
pop
or
xor
andb
neg
or
sub
push
cltd
dec
jo
test
or
mov
jb
test
add
add
xor
ds
shlb
add
push
das
sti
das
jns
xor
xchg
nop
loop
ja
or
jo
divb
insb
and
jo
das
das
stc
cmp
cs
push
dec
dec
das
xor
xor
pusha
or
lods
loopne
adcl
popa
dec
movsb
lock
sbb
dec
subl
mov
add
inc
rorl
push
and
xchg
jnp
cli
cmp
dec
xor
aaa
sub
sub
sub
sub
sub
xor
xor
call
out
xor
cmp
xor
cltd
ljmp
popa
xor
xor
xor
xchg
popa
jb
das
inc
inc
sbb
aaa
cmp
or
jmp
sbb
jg
xchg
inc
cmp
call
cmp
icebp
pop
addr16
xchg
xor
inc
mov
cld
mov
jmp
subl
mov
incl
pop
outsl
dec
jno
outsl
punpckldq
cld
fimull
inc
leave
adc
call
das
xchg
lock
mov
outsl
fucomp
in
aam
adc
inc
jg
decl
xchg
lret
xor
scas
jno
or
loop
fs
incl
or
ljmp
int
or
lods
lods
iret
les
or
je
outsl
out
daa
sar
call
int
rcrb
cmp
lods
fistps
pop
xor
stos
test
mov
addl
lcall
mov
xchg
mov
lcall
aaa
mov
andl
add
out
fisttps
or
sbb
mov
add
out
pop
sbb
repnz
jmp
out
cmp
std
ljmp
mov
and
mov
adc
sbb
mov
aaa
and
pushl
imul
les
adc
leave
xchg
outsb
push
inc
jge
sbb
aas
call
cld
incl
mov
out
jbe
insb
pop
lret
pop
jbe
lds
cmp
lcall
call
pop
push
loopne
popa
movsb
ret
inc
imul
filds
push
ljmp
je
stc
dec
mov
in
pop
adc
add
inc
mov
mov
sar
jg
mov
scas
loope
mov
lahf
in
rorb
outsb
fwait
mov
ljmp
xchg
or
xchg
or
repz
cmovbe
les
cmc
adc
lret
inc
xor
decl
pushf
dec
mov
sbb
mov
adc
clc
xor
sbb
mov
pop
ja
pushl
adc
push
mov
mov
mov
call
mov
or
clc
insl
into
mov
dec
fmul
out
cwtl
sarl
cwtl
test
hlt
hlt
ljmp
loopne
call
adc
mov
mov
sqrtps
fstps
mov
push
pop
fimull
push
mov
decl
push
lds
mov
mov
inc
cmpsl
mov
andl
xor
xchg
xlat
ljmp
andl
sahf
test
test
ds
aam
popa
adcl
sbb
adc
cld
loope
pop
call
jmp
xchg
imull
loopne
push
cmp
jecxz
out
dec
addr16
pushl
out
popa
mov
adc
mov
rol
dec
int
push
push
jl
lds
lcall
sub
stc
outsl
nop
pushf
and
stc
adc
out
loop
lcall
inc
out
mov
mov
icebp
fwait
mov
xchg
xor
into
int
jge
rorl
pushl
mov
int3
mov
mov
hlt
sbb
cld
inc
pop
in
mov
decl
fisubl
ljmp
jge
mov
andl
lcall
movsl
mov
repnz
pop
pop
jg
clc
mov
sbb
jmp
sub
call
mov
jg
push
sbb
dec
icebp
adc
cmpsb
ret
mov
pop
jne
ret
mov
jns
clc
cs
pop
push
les
inc
push
mov
mov
aam
jge
sub
int3
mov
test
lock
iret
xor
jecxz
lcall
or
int3
xor
sbb
ljmp
push
xor
jns
mov
pushf
and
testb
test
xor
fwait
mov
or
mov
mov
inc
test
js
lcall
dec
lahf
dec
jecxz
add
out
les
mov
push
std
inc
xchg
leave
mov
mov
cmp
mov
push
and
orb
pushl
rclb
rcl
fsubr
mov
lds
pop
addr16
bound
jmp
idiv
lcall
add
dec
push
outsl
push
add
enter
push
or
outsl
scas
popa
ljmp
loopne
add
outsl
lahf
sbb
clc
xchg
mov
mov
leave
cmpsl
dec
mov
inc
adc
xchg
pop
pop
out
add
aam
out
jmp
lret
mov
mov
loope
jbe
decl
imul
xor
or
out
shrb
jns
dec
mov
jmp
arpl
jmp
sarl
repnz
lcall
icebp
xor
cmp
rclb
mov
cmpsl
addl
pop
jno
fsubs
adc
sub
inc
les
int
and
sub
pop
xor
push
call
inc
gs
in
imul
pop
jecxz
cs
push
fsubs
shlb
or
sbb
mov
pop
push
pop
xchg
jb
add
push
sbb
lret
sub
jmp
pop
jl
sbb
add
add
pusha
or
add
rcr
pop
inc
and
pushl
scas
test
xor
dec
bound
cmp
movsl
fiadds
or
sub
sbb
ror
mov
test
sbb
iret
pop
mov
and
cmp
call
or
les
adc
mov
mov
xor
push
mov
xorl
std
daa
mov
xor
mov
test
jb
sbb
hlt
push
fisubrs
inc
pop
fs
incl
push
cmp
push
ljmp
es
daa
mov
mov
sbb
xlat
dec
jmp
push
xchg
xor
adc
ret
sub
fwait
xchg
xchg
jnp
out
and
cmp
jp
lret
adc
dec
mov
sbb
les
jmp
pusha
mov
idivl
daa
jae
pop
mov
pop
imul
fucompp
cmp
sub
js
pushf
jae
jbe
lcall
jl
cmp
pop
xorb
or
jns
jno
arpl
outsl
dec
lea
ja
ficoml
ss
sbb
sbb
mov
mov
push
call
popa
push
out
les
xor
mov
mov
in
push
mov
pop
mov
mov
loop
jmp
out
push
jg
fs
addb
mulb
stos
out
into
dec
fbstp
inc
sub
jnp
jg
decl
xlat
jns
sub
test
cmp
cmpsb
mov
test
aas
push
fcmovb
stos
xor
fldl
negb
jae
mov
lahf
xor
mov
icebp
decl
lods
adc
pop
xorl
dec
push
jl
mov
add
push
roll
clc
add
shlb
mov
imul
jmp
sub
cmp
scas
jo
fldcw
lret
movl
lock
and
out
stc
faddl
xchg
inc
or
cltd
mov
call
xor
mov
das
xchg
pushl
and
jg
or
notb
mov
and
lret
push
movsb
call
imul
jp,pn
or
in
out
nop
add
mov
sbb
fnstcw
mov
mov
enter
mov
mov
jo
or
jno
dec
add
and
movsl
mov
jmp
loop
shll
jbe
in
add
arpl
test
loop
daa
xor
push
je
decl
insl
mov
sbb
loop
inc
and
test
test
jns
scas
in
sar
ds
dec
loopne
jae
test
aam
jmp
mov
nop
push
dec
pop
sub
sbb
mov
push
jo
push
addr16
test
dec
mov
jl
sarb
mov
cmp
mov
es
pusha
fld
cmpsl
mov
xor
jb
xchg
popa
xor
ret
sub
cli
jbe
jmp
adc
jne
sbb
stos
mov
jmp
imul
mov
sub
sbb
cltd
adc
sbb
in
test
fistl
decl
lock
test
adc
lods
data16
hlt
dec
adc
stos
hlt
xor
fucomi
or
insl
xor
insl
lea
mov
sar
and
or
std
ror
pop
mov
cmpsl
shll
sbb
sub
call
mov
mov
push
popf
in
xor
sbbl
xchg
add
inc
push
decl
mov
jp
sti
and
outsl
movnti
push
pushl
aas
aaa
push
repz
enter
sbb
leave
test
cmpsl
test
insb
fdivrs
add
mov
xchg
inc
int
mov
stos
in
adc
jg
sub
outsb
xchg
ds
pop
fwait
pusha
gs
mov
idiv
jg
pushl
aaa
xor
cli
stos
fnstsw
rcl
push
mov
xchg
mov
jg
mov
add
push
adc
inc
jae
and
outsb
pusha
std
jnp
popa
js
lahf
aas
movsb
adc
inc
lret
bswap
lock
jg
inc
popa
sbbb
aad
test
pop
shl
xchg
out
testl
push
ja
decl
cmp
das
push
mov
and
negb
aas
lcall
incl
push
adc
pop
push
pop
mov
scas
inc
inc
rclb
cmpsb
cmc
into
cmp
call
adc
lret
movsl
xchg
movsl
fists
test
or
jmp
lods
push
sbb
jmp
jle
jbe
adc
mov
dec
rclb
add
ret
xlat
fstpl
popa
adc
jmp
and
les
pop
std
stos
inc
bound
sbb
scas
mov
jno
sti
fdivl
push
and
bound
stos
out
fwait
inc
xor
or
add
pop
std
insb
dec
pusha
andl
xor
sbb
and
cld
mov
mov
inc
ljmp
incl
dec
and
fwait
pop
adc
ds
mov
js
add
pop
dec
xchg
out
rcll
cmpsb
cli
pushf
jle
jg
call
test
cmp
fs
fwait
xchg
es
add
inc
ljmp
std
incl
ss
call
xlat
std
mov
sti
cwtl
add
jg
mov
push
test
imul
dec
push
stos
pushl
and
xor
xchg
xchg
out
mov
jo
jb
bound
nop
mov
ljmp
push
jno
lds
std
sbb
scas
sub
shrl
dec
je
pusha
jb
test
pushl
aam
sub
sub
cmp
popa
push
xchg
imul
stc
call
data16
push
mov
imul
dec
pushf
imul
sub
add
or
test
roll
and
adc
loopne
mov
inc
pop
call
sbb
jl
insb
daa
push
mov
daa
sub
test
stos
into
mov
mov
jge
insl
fs
sub
xor
fists
xor
add
inc
out
loopne
scas
add
inc
mov
jmp
xlat
or
jmp
jmp
lods
jns
sub
ss
and
rcrl
imul
andl
loope
xlat
sbb
push
inc
fucomp
ja
mov
decb
aam
or
add
loope
xchg
mov
dec
ljmp
clc
pushl
jae
imul
dec
jo
inc
xchg
add
push
xor
fstpt
jecxz
mov
cs
fdivl
inc
adc
insb
inc
sub
sbb
fistl
pop
lock
push
std
mov
shrl
or
cs
xchg
out
sbb
mov
xchg
in
int3
mov
fcompl
fwait
out
xchg
mov
sbb
xor
popf
add
xchg
lret
add
jmp
mov
add
test
dec
push
inc
loope
lea
jmp
or
outsl
mov
aam
mov
aam
out
shll
cmp
or
es
decl
ja
cmp
repz
lahf
es
rcll
inc
gs
pop
out
mov
icebp
mov
adc
mov
adc
test
and
loopne
or
pushl
andl
sbb
push
mov
cltd
stos
pop
das
push
stos
les
adc
imul
lcall
sbb
add
imul
stos
dec
push
lock
or
xchg
mov
das
cli
decl
out
dec
jb
icebp
enter
or
hlt
add
in
test
mov
ret
pop
sti
lcall
addb
fiaddl
dec
cmp
mov
ljmp
cli
je
mov
ljmp
inc
mov
shrl
cwtl
mov
xchg
mov
and
loopne
aaa
mov
xor
jb
ljmp
push
ljmp
add
mov
outsb
or
je
push
push
divl
dec
jne
or
adc
mov
xchg
fs
dec
inc
sub
ret
stos
lret
test
ljmp
mov
cmp
popf
lds
call
mov
call
lret
pop
mov
push
jb
add
inc
outsb
movsb
inc
mov
cmp
scas
jb
or
subb
xor
incl
pop
sub
mov
dec
aas
mov
push
cmpsb
mov
pop
xchg
adc
lds
fcoms
fistpll
pop
inc
mov
push
mov
arpl
outsl
mov
inc
lahf
dec
mov
push
push
sbb
pushf
mov
push
cmc
aas
in
push
adcb
cltd
mov
cmp
cmp
lcall
seto
or
xchg
in
and
nop
sub
subb
push
decl
push
cmp
fwait
pcmpgtw
sahf
push
cmp
add
jmp
push
fmull
hlt
jnp
aaa
push
cmpsl
test
mov
scas
test
inc
cmp
jmp
pop
fcompl
and
adc
ret
xor
loop
cmc
jne
scas
sbb
jge
inc
cltd
xor
sar
aad
rorl
shlb
sbb
adc
xorb
pop
lods
mov
fcomip
add
lds
xchg
and
js
mov
jmp
add
xlat
sarl
mov
data16
cs
xchg
push
xor
incl
pop
stos
mov
call
mov
test
fisttps
cmp
frstor
sbb
icebp
jl
mov
ret
shrl
incl
and
repz
and
mov
cwtl
test
js
loope
dec
jmp
and
mov
popa
mov
outsl
ljmp
jmp
push
dec
push
les
fbld
rcl
ljmp
out
mov
sbb
fstpt
cmpsb
mov
outsb
lea
xor
nop
aam
clc
jmp
rorb
movsl
or
outsb
outsb
jno
lcall
xchg
jns
xlat
lods
cwtl
divb
cld
sub
sbb
push
jmp
outsl
aam
call
repnz
mov
lds
std
leave
jae
add
inc
xchg
fdivs
lcall
xor
aam
adc
jge
push
mov
or
or
bound
dec
mov
xor
fdivp
scas
popa
mov
incl
mov
adc
in
adcb
xor
and
popf
das
fwait
in
imul
pop
inc
outsb
movhps
push
inc
or
jbe
push
and
js
pushl
jb,pn
cmpsb
call
sub
in
sbb
adc
mov
cmc
andl
dec
mov
or
mov
dec
mov
test
lea
adc
mov
or
ljmp
clc
sbb
and
in
popa
ja
xor
rcll
and
mov
pop
mov
icebp
jle
mov
clc
add
lahf
outsl
inc
jmp
dec
fcmovnu
fldt
js
pop
pop
test
movsb
repnz
rcr
sub
sbb
adc
stc
jl
mov
fadd
lock
mov
cmp
xchg
jmp
add
xor
or
aaa
xor
cmc
push
cmpsl
inc
xchg
push
out
ret
jl
adc
mov
bound
dec
sahf
mov
pop
sub
les
mov
insl
mov
sbb
mov
lods
sub
jno
cs
add
pushf
in
add
clc
das
clc
or
fists
cmp
aas
push
pop
xchg
icebp
ret
outsb
popa
sub
into
pushl
cmp
inc
mov
fsubrs
fisubl
sub
js
outsl
jo
iret
pop
sti
mov
mov
mov
sub
jecxz
jbe
jne
pop
loopne
in
fmulp
in
out
mov
push
scas
icebp
ja
sbb
ret
cmc
fwait
popa
jne
incl
scas
out
in
jne
adc
xor
jl
arpl
pop
gs
pop
ja
popa
mov
jp
repz
nop
dec
arpl
mov
pushl
je
out
add
mov
jae
push
daa
xor
and
mov
mov
pop
leave
inc
mov
out
dec
push
add
or
decl
ja
sbb
dec
inc
movsb
push
rol
pop
mov
push
adc
or
pop
call
sbbb
jp
cmc
inc
add
fdivl
rorb
loopne
pop
and
dec
fs
call
add
imul
sahf
mov
cmp
popf
cmc
test
fimull
movsb
mov
incl
decl
std
inc
ror
or
push
cs
inc
pop
dec
insb
lcall
xor
inc
pushf
mov
or
ret
sub
lret
mov
orb
int3
mov
and
sub
aaa
adc
pushl
scas
adc
cmp
and
inc
insb
stc
andb
pop
cmpsl
jge
repz
xlat
inc
hlt
out
sarb
ljmp
pushl
inc
xchg
ret
adc
aaa
in
cmpsb
inc
testb
movsb
jmp
lds
hlt
bound
sti
and
inc
imul
xchg
sbb
lods
sbb
xor
mov
dec
cmp
ljmp
call
andl
jnp
nop
pop
dec
in
test
sbb
add
decl
xchg
int
jp
or
shl
pop
push
mov
mov
mov
fs
call
call
inc
jne
mov
pop
call
inc
and
and
stc
adc
mov
out
flds
ret
and
lock
or
dec
push
popf
xor
add
add
push
pop
add
stc
addl
ret
sub
rorl
in
hlt
mov
imul
ja
clc
pcmpeqd
out
adc
sub
decl
adc
insl
loope
inc
xchg
shrl
cmpsb
cmpsb
fwait
arpl
lock
mov
pushl
repz
push
inc
jle
dec
jb
popf
adc
jl
fstpl
inc
ljmp
cmp
sub
or
shlb
cmc
jbe
push
or
cli
push
pop
jnp
gs
call
cwtl
and
or
std
push
pop
inc
sub
pop
nop
ss
movsl
sahf
mov
loopne
jl
loopne
fmul
push
shlb
fidivl
push
iret
jbe
fcoms
pop
sub
mov
pop
fsts
sahf
ret
in
dec
aam
sub
mov
stos
xor
ljmp
mov
imul
ja
call
xor
push
cwtl
pop
mov
icebp
jg
jmp
js
lods
cmp
xchg
xchg
sbb
lods
or
dec
adc
dec
sar
mov
enter
add
outsb
or
adc
test
call
mov
jne
and
int
es
cmp
inc
pop
std
rcl
inc
sbb
movsl
sarb
je
pushl
jle
pop
mov
fdivr
fistps
insb
push
adc
insl
out
and
cmp
imul
add
loopne
dec
nop
push
testb
or
jo
scas
insb
cmp
xor
and
fcmovne
inc
aaa
adc
decl
jp
push
mov
test
pop
xchg
bound
out
dec
jb
push
cmp
mov
cmp
mov
mulb
gs
mov
cmp
fnstsw
dec
sub
mull
mov
shrl
mov
dec
fisubrs
aas
xchg
jb
or
xchg
adc
mov
leave
gs
inc
mov
inc
daa
cmp
push
int3
nop
repz
out
scas
xor
jns
in
loope
inc
xchg
gs
inc
es
mov
dec
xchg
sarb
inc
push
inc
nop
and
xor
pusha
out
sub
adc
dec
ret
push
mov
pop
loope
lahf
sub
push
sar
incl
push
jnp
inc
data16
mov
dec
mov
icebp
cltd
rclb
jae
push
jns
divl
sbb
jmp
roll
test
imul
xor
jns
lock
cld
mov
push
xchg
aas
add
data16
sar
ljmp
dec
pop
clc
lcall
ss
or
movsl
data16
in
mov
sbb
shl
inc
cmpsb
scas
jmp
adc
cmp
dec
lods
inc
mov
jns
push
ret
lods
cmpl
xchg
mov
iret
stos
jmp
xchg
add
cmpsl
lock
pop
rcll
jmp
shll
sub
fsubrl
xchg
scas
push
icebp
rcrb
push
loope
jl
dec
jne
decl
pop
sbb
jmp
lds
jo
mov
outsl
push
mov
mov
adc
jmp
popa
push
and
pop
lods
iret
fmulp
inc
add
sbb
iret
push
and
popa
push
mov
mov
pop
push
push
xor
mov
jae
dec
xchg
inc
fsubrl
lcall
sti
leave
pop
sbb
ljmp
and
dec
adc
cli
or
xor
mov
fidivs
call
ja
jle
fisubl
lahf
pop
push
xor
cmp
rol
adc
push
dec
mov
jmp
divl
cmc
out
lds
scas
imul
jae
scas
mov
and
jns
dec
sti
adc
cmp
arpl
sub
aam
repz
subl
mov
inc
xor
fucomi
out
lahf
push
add
pop
jno
out
aam
jbe
sub
mov
jp
into
xchg
nop
xor
mov
xorl
test
out
aad
inc
xlat
gs
mov
loope
mov
jne
arpl
pop
jns
push
or
pop
pusha
sub
imul
cmp
cmpsb
or
adc
aas
pop
push
fs
cwtl
adc
dec
or
pushl
jmp
dec
in
out
jge
push
into
in
jns
rcrl
outsl
test
cs
stc
inc
stos
inc
xchg
sub
inc
and
add
stos
mov
or
inc
mov
cmpsb
pop
cmovne
mov
aas
loop
mov
ljmp
imul
mov
adc
mov
mov
dec
and
xchg
or
es
add
lcall
repnz
adc
inc
jge
adc
mov
js
cmc
push
mov
lea
movsl
iret
or
test
incl
movsl
jo
xchg
mov
mov
cmp
dec
test
cmp
js
xchg
rcrb
jp
pusha
mov
pop
cmp
std
das
addr16
cmp
jecxz
ljmp
imull
and
mov
adc
gs
cwtl
pop
mov
decl
mov
aad
inc
repnz
in
pop
mov
push
imul
call
xchg
and
cmp
dec
xchg
xor
mov
mov
add
out
jge
pop
cmp
or
decl
push
loop
push
out
lret
pop
popf
pop
lcall
ljmp
data16
xchg
mov
cmpsb
mov
es
and
sahf
repnz
inc
sub
aaa
jns
jmp
cmc
inc
jne
data16
sahf
jecxz
std
jne
xchg
cld
in
les
sahf
mov
or
or
ss
mov
lock
xor
push
sub
jge
xchg
js
jbe
scas
mov
xchg
sbb
lea
xchg
data16
imul
rclb
xchg
loopne
jmp
leave
pop
loop
cmp
adc
dec
hlt
add
nop
fnstcw
call
int3
outsb
mov
push
sub
add
push
lock
push
sti
push
outsb
cmc
rcll
push
lahf
popa
mov
std
dec
push
fsubrl
testb
fildl
inc
les
jmp
mov
mov
outsl
xchg
mov
pop
scas
test
fsts
jno
jno
std
incl
sbb
or
lret
cmp
jmp
mov
jmp
cs
rcrb
int
or
sub
lock
stc
jmp
sub
test
mov
adc
xchg
push
dec
addr16
fs
cld
pop
xor
push
and
pop
add
sahf
sub
and
andb
fstp
dec
jg
push
call
mov
lock
nop
insl
out
add
sub
mov
sub
incl
data16
std
inc
adc
push
or
jg
pop
mov
or
xor
lods
neg
decl
sahf
out
and
dec
scas
test
bound
fidivl
sub
mov
loope
hlt
lcall
lock
jmp
pinsrw
push
out
push
std
mov
jecxz
add
mov
push
xor
push
decl
in
cmpsl
sub
mov
sbb
mov
lds
and
jb
sub
clc
ljmp
and
jle
in
rcrb
std
notb
arpl
dec
dec
jno
mov
jmp
fs
adc
sub
mov
inc
mov
mov
push
lock
decl
rorb
xchg
fbld
mov
jge
movsl
jg,pn
sub
sarl
test
pop
and
ljmp
test
jne
xchg
fiaddl
mov
push
xor
add
inc
ret
dec
inc
das
jecxz
js
dec
movsb
and
jbe
push
loopne
jmp
repz
jg
jno
cld
jg
fldcw
fs
lret
out
negb
fistps
loop
push
mov
jbe
clc
push
push
lahf
add
ja
arpl
inc
mov
movsb
mov
lret
jl
mov
mov
sbb
fs
insl
push
dec
std
lods
in
scas
sub
inc
sub
popa
jl
hlt
sub
ret
lods
or
pop
mov
mov
cmp
lcall
sub
xor
sbb
dec
mov
lods
daa
mov
fistpll
nop
jbe
push
adc
call
jb
ja
pop
loopne
cmpsl
addb
xor
sbb
jp
xchg
and
cmp
cli
lahf
icebp
xchg
adc
pusha
or
push
movb
mov
push
or
js
pop
pop
loopne
std
notl
add
and
sbb
push
mov
enter
mov
mov
sbb
mov
rorb
loop
les
push
bnd
inc
sub
in
outsl
inc
sub
test
ss
mov
dec
add
add
jp
pushl
mov
fcmovu
les
call
shlb
lea
push
mov
jmp
cmpsl
fisttpll
fdivl
and
loop
inc
inc
outsb
xor
dec
push
hlt
rcl
in
jno
incl
daa
lahf
mov
jno
push
roll
divb
mov
loopne
ljmp
cmpsl
or
push
pop
push
dec
outsl
cmp
xorl
incl
jnp
push
gs
pop
inc
xchg
cmc
ret
mov
in
popa
jmp
ljmp
stos
imul
sub
ficoms
pop
xor
mov
hlt
mov
push
out
ja
out
jo
adc
cltd
jp
aad
std
jmp
pop
xlat
cmpsb
mov
scas
out
ja
mov
jmp
cmp
adc
movsb
sub
loop
test
cmp
in
lcall
pusha
call
mov
ljmp
rcll
test
fildl
push
push
mov
call
std
fnstsw
stc
cltd
sbbb
cmp
sysexit
sbb
cmp
ljmp
clc
mov
dec
test
xor
mov
cltd
inc
mov
sbb
push
dec
sar
notl
dec
mov
fimull
cmp
sbb
mov
inc
test
pop
fsubs
decl
pop
inc
jns
sbb
xor
xchg
inc
lea
fwait
das
loopne
ljmp
pop
pop
pop
fsubs
pop
mov
inc
pop
lret
or
pushf
jecxz
ljmp
or
cmp
xchg
mov
sub
xor
cmp
xchg
push
fldcw
lcall
cmp
popa
mov
cmp
lods
rolb
aas
in
dec
mov
hlt
push
scas
adc
or
fwait
pop
jecxz
mov
xlat
mov
mov
test
dec
and
call
push
call
lock
dec
mov
stos
fldcw
mov
jle
lcall
cmpsl
repnz
lea
adc
xchg
shr
sbb
or
xor
ret
decl
xchg
imul
imul
repnz
mov
push
in
popf
scas
jg
lcall
pop
add
dec
and
mov
addl
pop
or
clc
jb
mov
xor
incl
ret
sbbl
mov
test
and
adc
and
jae
xor
or
ud1
rorb
fiaddl
mov
rcll
ljmp
and
out
pop
or
cs
bnd
lods
inc
cmp
call
adc
adc
jl
hlt
pushf
push
inc
mov
jmp
mov
fidivs
jmp
icebp
aad
dec
pop
pop
scas
rolb
outsb
enter
sub
inc
pop
mov
pushl
cld
cs
jg
and
jno
js
call
shll
sub
jo
stc
gs
call
dec
sub
mov
test
cmp
sub
cmp
jp
cmp
jg
jmp
int3
lcall
pop
or
not
lock
add
or
into
xchg
int3
iret
arpl
fcomip
add
cs
push
pop
adc
ljmp
pushl
andl
push
lock
dec
iret
sub
ds
lcall
mov
cli
xchg
dec
jmp
inc
ds
fstpl
or
aas
daa
lcall
leave
leave
adc
push
fsubrp
rorb
push
loope
or
cmp
outsl
fmull
data16
mov
js
rcrb
mull
ljmp
aad
int
inc
add
xor
outsb
roll
arpl
pop
lock
xchg
add
and
stos
pushf
rorb
lods
mov
xchg
jp
nop
lcall
or
in
arpl
dec
mov
stos
inc
or
jmp
int3
adc
shr
call
jg,pt
in
mov
push
add
xor
out
xchg
mov
fdivr
pushl
std
aas
add
out
sub
sub
fisubs
adc
pop
xchg
lods
ret
in
add
pushl
sub
stos
loop
inc
movsl
inc
push
cwtl
arpl
in
int3
repnz
lods
sbb
fdivl
ret
icebp
cld
push
cmpsl
jb
xchg
or
dec
bound
aam
push
mov
pusha
and
outsb
imul
incl
mov
loopne
loope
jae
inc
mov
les
sbbl
and
cmp
movsb
mov
mov
in
lods
test
lret
dec
sbb
sti
pusha
test
test
jnp
lock
sbb
test
mov
cltd
lods
push
push
mov
sbb
add
call
iret
jge
rorb
or
xchg
lcall
sbb
jg
sti
dec
push
movsb
testb
pop
sbb
jo
test
out
adc
incl
or
data16
imul
cmp
mov
dec
ret
dec
mov
push
or
insl
and
sahf
xchg
pop
fcmovu
outsb
sar
ds
into
in
paddb
cs
and
push
ss
add
jg
xor
sub
psubw
nop
mov
aaa
xchg
mov
push
call
mov
inc
fdivrl
and
shll
push
js
mov
cli
popa
mov
pusha
outsl
ficompl
scas
cmpsl
dec
lahf
dec
pop
push
xchg
xor
inc
enter
sbb
sbb
cs
dec
jne
mov
clc
cld
loop
iret
jb
jne
mov
xchg
cli
pop
clc
aam
xor
lcall
stc
mov
ds
jle
int3
adc
js
add
mov
scas
mov
mov
jle
scas
sub
sbb
in
fiadds
pop
adc
sub
lock
pushl
cld
das
lock
repnz
mov
std
sbbb
mov
scas
andb
mov
jg
dec
test
mov
pop
xchg
xor
ljmp
xchg
mov
test
dec
pop
mov
int3
sbb
push
push
pop
cmp
sbb
call
int
insl
push
imul
hlt
mov
iret
cli
lcall
pop
fcmove
jg
inc
popa
lds
shll
fld
push
pop
leave
call
jl
adc
outsb
cs
pushl
sub
insb
mov
std
mov
cli
xor
mov
mov
stos
mov
add
cs
adc
pop
into
jge
je
jbe
int3
inc
shrb
rorb
cmpsb
adc
dec
clc
cmpsb
sub
mov
mov
jae
jmp
jne
sub
lcall
sub
lds
cs
add
xchg
dec
jno
add
imul
pushl
leave
fldz
pop
inc
ljmp
iret
out
test
repz
xor
xchg
imul
push
dec
rorb
jo
loop
pop
out
cmp
add
pushw
adc
idivl
sub
add
xchg
sahf
movups
icebp
jns
mov
inc
loopne
outsl
orb
jbe
jmp
repz
jbe
xchg
xchg
mov
sbb
push
dec
lock
cmp
call
sub
in
pop
lds
enter
ret
sbb
jo
pop
pextrw
dec
int3
jno
and
push
pusha
sub
add
arpl
daa
mov
mov
lock
scas
sub
incl
push
mov
adc
hlt
js
cwtl
cli
shl
ss
clc
sti
pop
lock
and
repnz
pushl
sarl
xchg
outsl
adc
lcall
bound
pop
cwtl
add
fsubs
and
jp
mov
adc
in
test
dec
and
gs
repnz
incl
ja
in
mov
inc
movsb
inc
adc
pop
sbb
decl
xchg
cld
xor
xchg
pop
mov
scas
nop
daa
mov
in
fiaddl
sub
sbb
lods
enter
testb
mov
inc
setle
aaa
cld
decl
cltd
movsl
sbb
int3
fldenv
stos
jecxz
fidivl
scas
je
sub
fdivrp
jno
jno
stos
xor
pop
adc
call
xchg
das
in
fwait
xchg
imul
orb
and
mov
sub
jg
inc
out
jmp
or
aaa
fcompl
sbbb
sub
in
in
sarb
out
and
call
pop
xor
jmp
adcb
mov
dec
and
addl
mov
inc
in
inc
sar
xchg
aam
ljmp
xor
lcall
mov
push
or
lcall
fildl
in
dec
cltd
das
mov
mov
cmpsl
fcmovb
jbe
movsb
jl
orb
add
push
scas
cmp
jmp
addb
inc
pop
and
mov
mov
out
call
stc
mov
mov
or
jp
push
into
icebp
mov
and
mov
pop
aam
pushl
imul
add
in
or
divb
jno
sub
insl
std
stos
cltd
push
add
stos
popf
pop
mov
ja
movsb
cmp
lock
xor
punpckldq
aad
mov
sti
inc
sbb
push
in
nop
add
dec
das
sub
mov
stos
dec
daa
lret
mov
pushl
fwait
adc
enter
jmp
xchg
into
pop
cmp
lods
adc
jg
lcall
mov
jg
iret
lds
push
add
rclb
and
lcall
dec
fdivrl
mov
push
outsb
add
or
popf
jecxz
sbb
lods
mov
jmp
sbb
hlt
adc
mov
mov
adc
xor
pop
xor
add
adc
stos
cmp
and
insl
xchg
js
das
mov
pop
fadds
pop
rcll
or
mov
test
lods
jmp
push
movsb
push
popl
add
sti
push
loope
cmp
push
mov
andb
cmp
cmpl
sub
add
std
pushl
xchg
fcoms
mov
cmp
ss
and
mov
mov
mov
add
mov
jmp
nop
mov
addr16
xor
inc
adc
imul
inc
sub
or
inc
lea
ja
jg
cmp
add
and
add
call
jns
pop
outsl
shll
movsl
scas
arpl
xchg
pusha
scas
mov
mov
inc
ror
and
xchg
or
jmp
std
inc
stc
adc
dec
jmp
xor
movd
or
lcall
jno
scas
jg
pushf
mov
mov
popa
inc
stos
push
mov
mov
lock
call
xor
out
mov
test
mov
call
fucomip
xchg
fs
pop
push
hlt
loop
or
fnstenv
lcall
sub
decl
dec
fistl
push
nop
leave
call
mov
xor
mov
add
cli
into
decl
mov
dec
inc
and
outsl
stos
enter
aam
sbb
test
pushl
inc
dec
xchg
orl
pop
dec
stos
lea
cmpsl
jge
shlb
icebp
dec
ffree
ljmp
std
test
jp
loop
incl
movl
lret
lret
push
cmp
stos
push
sahf
sahf
adc
mov
cmc
and
lcall
mov
dec
jg
or
xor
sti
and
sbb
adc
push
addr16
fcomip
ljmp
push
xor
push
enter
sbb
aas
mov
fwait
and
enter
lcall
mov
lahf
push
xchg
leave
dec
or
ds
lock
jnp
jg
sahf
mov
daa
mov
inc
testb
xchg
push
mov
mov
xchg
pop
mov
daa
dec
mov
push
test
popf
sbb
add
lahf
pushl
lods
insl
dec
mov
lcall
fst
sub
fdivl
nop
bound
inc
decl
repnz
xchg
cwtl
cmp
push
and
mov
xlat
xor
lods
in
and
leave
scas
cli
cmp
mov
push
adc
push
sub
sub
out
pop
loopne
call
mov
cmp
cs
cltd
xchg
movsl
es
clc
sub
sbb
dec
scas
outsl
vsqrtpd
xchg
adc
lock
stos
daa
mov
outsb
sbb
call
inc
inc
das
jne
mov
movsl
cwtl
xor
das
dec
idiv
fistpll
ss
movsb
push
push
dec
inc
ljmp
mov
test
and
lcall
test
adc
repz
fidivrs
push
jge
decl
call
in
in
insb
pop
xchg
and
and
aaa
test
fmuls
repz
dec
lcall
ljmp
in
fisttpl
ret
and
cld
mov
and
loopne
dec
fbstp
jl
or
sbb
repnz
daa
jmp
sbb
dec
test
jae
insb
jmp
enter
cltd
pop
dec
xchg
outsl
outsl
and
pushl
fnstsw
imul
cmp
ret
loopne
xchg
in
push
lods
sub
imul
ds
dec
ret
mov
mov
decl
and
fistpl
jmp
push
enter
popa
mov
call
push
push
fs
mov
jl
xchg
mov
cmp
jnp
in
test
ljmp
jl
inc
lret
xchg
sti
out
push
xchg
in
adc
call
cli
jnp
pushl
arpl
pushf
lds
cmp
shl
nop
testb
xchg
cld
lcall
xor
cmp
cmp
lea
mov
in
dec
push
jge
or
jl
call
pushl
nop
cmp
in
mov
arpl
out
nop
cmpsb
pop
mov
cmc
in
cwtl
mov
sub
push
push
jl
pop
scas
jle
jl
push
int3
pushf
pop
js
or
aam
or
hlt
out
cmp
inc
sbb
jbe
mov
or
xor
ret
aad
sahf
movsl
cmp
repnz
in
cmp
ss
incl
fmull
daa
mov
adc
lods
mov
into
and
ror
loop
inc
scas
adc
jmp
mov
xchg
mov
jg
mov
jecxz
sti
push
out
sub
subb
pop
call
xchg
outsl
mull
jecxz
cmp
movsb
in
enter
and
mov
xchg
jne
or
pushl
xchg
movsb
test
and
dec
std
arpl
aaa
popa
inc
push
or
ljmp
cld
mov
cmp
mov
cmc
outsb
dec
into
lret
daa
dec
lret
leave
jmp
repz
inc
es
or
fmul
add
adc
push
xor
and
lcall
mov
scas
push
ljmp
xor
push
sar
call
dec
pop
fcompl
sbb
popf
dec
xor
dec
push
mov
mov
ret
lock
adc
scas
sbb
loop
dec
push
ds
dec
xor
xchg
lea
pop
jmp
dec
mov
xchg
xor
xchg
jmp
adc
ljmp
lret
cmp
negb
mul
faddp
das
repnz
aaa
test
pop
xor
ljmp
sub
or
pusha
adc
pop
repnz
pop
jno
push
lea
mov
mov
push
movsb
decb
repz
push
ss
inc
movsb
xchg
mov
shll
orl
xchg
dec
pop
jg
jg
inc
xchg
mov
call
pop
push
push
mov
jno
push
out
xor
cli
adc
push
jne
cmp
mov
mov
mov
ljmp
push
xchg
pop
jmp
xor
or
fdivrl
pop
pop
movsl
xor
add
test
mov
fisubrs
lods
sub
xchg
pusha
insb
pop
das
fcmovnu
ljmp
fs
test
ljmp
in
jb
faddp
sub
lods
movsb
mov
mov
arpl
iret
popf
push
movl
ljmp
jl
fs
dec
or
inc
out
dec
push
fdiv
xchg
jno
cmp
call
inc
pop
fiaddl
cwtl
jae
sub
jp
arpl
hlt
add
and
xchg
subb
sbb
mov
adc
enter
jmp
jmp
pusha
sbb
fdiv
bound
lcall
mov
aaa
sbb
lds
popf
or
dec
xorb
in
cmp
xchg
mov
pop
lcall
out
addr16
imul
outsl
dec
xchg
jno
mov
pop
fucom
push
jecxz
or
mov
lret
leave
mov
stc
scas
dec
test
cmp
test
decl
pop
adc
cmp
test
repz
cmpsb
xor
sub
arpl
lods
cmp
xor
jp
mov
mov
sbb
imul
dec
mov
inc
mov
rclb
xchg
dec
xor
call
test
int
bound
adc
loopne
in
xor
push
or
clc
lcall
adc
in
stc
mov
xor
pop
leave
push
sub
mov
and
ljmp
jecxz
dec
aam
sub
or
push
jmp
cmc
int
xchg
jecxz
jns
adc
pop
in
pushl
xchg
mov
xor
jmp
sbb
mov
dec
xor
push
or
mov
cmc
and
add
aad
popa
mov
push
movsl
je
fidivrl
mov
mov
lcall
inc
scas
fldcw
lds
inc
dec
movsl
ret
xor
jmp
or
jmp
int3
loop
push
push
pop
mov
xchg
jmp
loope
fs
dec
xchg
roll
push
add
pop
scas
adc
lcall
mov
mov
sub
std
pextrw
adc
fidivrs
xchg
mov
dec
nop
sbb
inc
pusha
divl
mov
stos
icebp
call
xor
push
mov
insl
and
dec
loope
movsb
add
pop
ret
pop
pushf
xor
fbld
dec
dec
insb
rorl
movsl
sbb
mov
out
in
push
std
jmp
imul
lods
xchg
dec
fcmovne
cli
jl
inc
mov
jp,pn
mov
and
push
mov
cmp
lock
dec
mov
jmp
cmpsl
push
cmp
adc
bound
pop
sti
cld
and
lret
addr16
jp
outsl
adc
jmp
pop
fdiv
roll
ja
int
sbb
ja
popf
push
jnp
mov
xor
in
decl
or
mov
div
mov
jmp
js
in
lcall
dec
cli
jge
test
cmp
mov
or
je
dec
jle
xchg
call
cmpsl
pushf
bound
fcmovnbe
outsl
iret
inc
out
cmp
ffreep
lock
movsb
jle
jne
orb
mov
loop
es
fstps
pop
jb
push
call
and
sbb
rcll
dec
push
jg
pusha
pushf
inc
lock
stos
test
pushl
sbb
jmp
jno
popf
jge
shll
sahf
roll
add
outsb
jnp
jmp
jg
adc
lds
loop
xchg
shlb
push
std
lret
jg
call
cmp
shlb
xchg
or
aas
dec
jae
push
mov
fs
pop
jns
call
xchg
test
gs
popa
inc
jmp
cmpl
lahf
and
push
int3
sub
xchg
rcrl
cmpsb
ds
xchg
fdivr
jg
pushf
mov
sub
fstl
sbb
ficoml
in
dec
cwtl
cmp
push
or
add
lods
js
mov
in
inc
pop
jmp
push
adc
lods
push
sar
decl
xor
sbb
dec
jno
push
cmp
test
xchg
push
mov
mov
adc
xchg
pusha
xchg
mov
std
jg
iret
push
add
xor
mov
push
jg
addb
lret
xor
loopne
dec
jle
pop
adc
cwtl
jmp
dec
push
out
sbb
mov
mov
inc
fiaddl
jg
ljmp
ss
push
and
jne
out
cmp
jp
movsb
pushf
sub
rcr
push
inc
jmp
rcrl
call
pop
cmp
std
pusha
pop
adc
cmp
cs
into
int
mov
lcall
vpinsrw
push
jmp
add
mov
lds
ja
test
add
pop
mov
fcomip
inc
mov
inc
inc
mov
mov
loope
add
dec
sub
push
hlt
and
lret
jnp
add
sbb
ljmp
enter
leave
test
icebp
arpl
or
xor
lea
and
ljmp
gs
mov
lahf
add
adc
sub
cmp
mov
push
mov
sar
decl
adc
mov
pop
xchg
xor
scas
addr16
int
lahf
aad
inc
adcl
jl
cmp
gs
mov
pop
stos
add
xchg
jmp
xor
call
or
scas
mov
imul
outsl
ljmp
in
les
adc
push
out
mov
arpl
dec
das
sub
iret
inc
xchg
pop
jo
sbb
jo
inc
pusha
mov
fdiv
fwait
or
add
es
pop
test
decl
fs
push
jg
add
adc
cmp
int
adc
dec
decl
sbb
lcall
sbb
mov
xchg
push
xchg
cmp
jb
mov
popf
aam
ljmp
dec
mov
push
sub
inc
icebp
add
dec
addb
push
inc
in
pop
cmpsb
cli
call
xchg
pop
sub
xchg
ljmp
mov
dec
dec
dec
pop
jns
enter
clc
outsb
sbb
inc
ljmp
lcall
and
movb
rcll
gs
ftst
adcb
and
jmp
lcall
adc
dec
les
fstps
lret
stos
mov
das
stos
getsec
jb
call
inc
aad
pop
idivb
ljmp
dec
jnp
test
cwtl
push
incl
jnp
shlb
fildl
adc
cltd
arpl
popa
stos
jmp
jle
inc
sbb
mov
mov
fidivs
aam
mov
test
gs
cmp
cld
fwait
les
mov
mov
push
sti
cs
repnz
repz
pop
pop
ljmp
ljmp
push
and
mov
mov
lahf
sub
xchg
or
cli
adc
xor
call
mov
xchg
outsb
scas
hlt
faddl
xor
cwtl
cmp
cmc
mov
not
push
or
rorl
insl
jnp
das
in
mov
gs
inc
pop
pop
adc
shr
repz
sti
cmpsl
inc
cli
incl
inc
mov
das
sbb
jmp
or
ljmp
repz
ljmp
clc
xor
lods
cwtl
push
in
inc
jbe
sbb
push
imul
mull
push
cmp
imul
push
ds
or
mov
ljmp
cld
lahf
xchg
xchg
lcall
test
mov
push
scas
divb
imul
aas
inc
adc
in
loop
adc
test
ret
hlt
adc
dec
mov
ljmp
dec
inc
xchg
stos
sbbl
insl
das
add
pop
pushf
inc
xlat
dec
addr16
fcompl
inc
push
and
sub
dec
fs
incl
cmc
jmp
test
push
sub
pop
xor
stos
repnz
mov
pushl
sub
mov
push
push
fwait
leave
or
push
ss
repnz
lret
jmp
mov
pop
mov
mov
pop
imul
and
scas
addb
xor
inc
shrb
xor
inc
jae
mov
ja
xchg
jge
add
jmp
sbb
and
push
push
sbb
into
pop
insb
mov
adc
call
inc
or
out
sub
push
jecxz
sub
cmc
xchg
or
ljmp
ljmp
dec
std
sbb
add
mov
mov
xor
pop
inc
push
pushl
cltd
loopne
jecxz
sub
sbb
pop
inc
out
push
cmp
lcall
dec
sub
add
xchg
mov
test
mov
bswap
lods
push
mov
or
mov
jmp
mov
mov
mov
push
adc
jo
aas
jg
cmp
inc
nop
imul
decl
in
je
lods
sub
out
xor
mov
push
imull
push
sbb
in
adc
outsl
test
outsl
xor
jmp
aas
pusha
cmp
into
mov
lea
test
in
xchg
xor
jle
dec
or
clc
push
sahf
andl
xchg
pop
or
pushf
inc
jo
xchg
mov
add
cld
lret
inc
lcall
mov
jb
xchg
push
mov
rclb
pushf
imul
ljmp
push
test
inc
iret
and
and
test
in
movsl
jp
dec
cmp
lcall
xor
lret
popf
pop
or
add
xchg
decl
push
xchg
lods
loopne
inc
mov
test
jmp
or
stos
cmpsl
xlat
pushf
jbe
testl
call
ljmp
xor
sti
dec
sbb
sahf
sarl
xor
pop
mov
call
push
into
in
cmp
xchg
sbb
or
std
xor
sbb
lret
mov
mov
pushl
cmp
fldcw
pop
add
pop
xor
xor
dec
inc
push
xchg
jmp
insb
scas
icebp
or
mov
add
adc
cmc
xchg
pusha
fists
decl
dec
stos
add
mov
dec
dec
and
jmp
sbb
jmp
clc
insl
xor
stos
jne
mov
xchg
push
sbb
fcomip
cmp
xlat
ds
jb
push
mov
mov
cmp
jbe
jno
lahf
jg
adc
in
xor
testb
sbb
cmp
xor
mov
test
pushf
and
call
pop
lret
sahf
fadds
outsb
push
inc
in
roll
pop
and
incl
pop
cmp
sub
and
int
lcall
enter
jecxz
decb
mov
pop
cmp
lds
cmp
jnp
sub
push
into
cmc
push
jg
add
out
cmp
jnp
dec
jle
sub
arpl
decl
push
paddsb
arpl
mov
adc
cltd
sahf
mov
iret
pop
inc
push
sbb
gs
dec
sub
inc
xchg
in
xor
pop
inc
pinsrw
pop
sbb
dec
push
mov
xor
mov
ljmp
xor
inc
mov
sahf
roll
pop
out
jns
mov
loopne,pt
sbb
cmp
mov
push
pop
push
adc
je
xchg
jg
push
fbld
cmp
adc
xor
shl
dec
int3
cmp
ljmp
mov
mov
ret
je
sahf
sbb
ja
decl
les
pop
in
add
ljmp
mov
incl
call
jecxz
cld
ds
divb
out
mov
scas
loopne
movsl
or
repz
and
pushl
cld
loope
in
in
lcall
jb
mov
clc
adc
outsl
movb
cli
clc
ds
adc
popa
mov
je
nop
push
push
push
adc
inc
sbb
jg
adc
and
push
and
lret
lcall
sbb
sub
adc
gs
or
or
out
push
shlb
inc
sti
inc
xorb
fsubs
loop
sbb
test
pop
gs
into
enter
xchg
incl
cmpsb
dec
das
xchg
cmp
bound
cmpsl
pushl
rcrb
jl
mov
int3
or
mov
add
in
decl
cmpsl
rcl
push
jmp
mov
test
cmp
in
and
mov
lcall
rcrb
icebp
pusha
mov
mov
test
rolb
ljmp
cmp
push
test
test
cmp
scas
mov
cmp
add
in
cmpsl
sbbb
pop
mov
and
divb
nop
dec
mov
push
orb
pop
fwait
mov
pop
or
cld
sbb
and
call
testl
ds
leave
cltd
cld
dec
push
roll
fildll
mov
jge
call
mov
xor
cmp
or
sub
jnp
cmp
mov
call
mov
cmp
inc
mov
adc
mov
testl
inc
adc
jbe
pushl
mov
clc
sbb
jmp
mov
rorl
sarb
push
mov
jg
lds
insb
mov
js
shlb
ds
and
scas
lods
rcrb
and
fcomip
lret
and
pop
inc
jo
cltd
adc
mov
movsb
sbb
repz
jmp
ljmp
stc
stos
adc
in
jbe
jns
pop
add
dec
das
stos
fwait
add
loop
cmp
call
push
in
mov
das
gs
jle
loop
xchg
pop
mov
add
mov
add
fisubrl
cs
inc
pop
clc
push
cmpsb
scas
sub
mov
add
push
push
sbb
jecxz
leave
mov
dec
xchg
shlb
mov
push
adc
test
aaa
cmp
cmp
pushl
cld
flds
pop
iret
pop
push
lods
ss
popf
push
mov
fcomp
push
inc
push
movsb
jmp
inc
pop
xor
nop
jl
pop
jo
inc
testb
mov
adc
lods
ljmp
xchg
lret
in
lock
iret
xor
xorl
lods
inc
nop
testl
fsubp
jl
cmp
jns
or
addr16
xor
jo
xchg
xchg
pop
insb
cmp
fcomps
call
pusha
scas
mov
push
mov
popf
cmp
mov
and
cmp
xchg
pop
stc
ja
cmp
jmp
shll
out
es
flds
mov
idiv
mov
push
inc
adc
pop
dec
adc
mov
into
test
xchg
pop
call
cs
cwtl
mov
lock
lea
jnp
call
push
out
adc
cmc
add
cmp
pop
gs
daa
push
enter
jg
inc
jle
push
mov
clc
vpaddsw
push
xchg
stos
loop
scas
shl
fwait
loopne
mov
lea
decl
loop
sbb
mov
or
repz
outsb
imul
cmp
rcrl
dec
lods
xchg
fiaddl
call
ljmp
scas
aaa
jno
cld
pop
jl
xchg
ret
inc
dec
push
cmp
sbb
incl
enter
icebp
in
sbb
cmpsb
js
pop
inc
std
cmp
aam
and
pop
dec
insb
sub
aaa
std
pop
lock
scas
shll
dec
test
test
adc
mov
ljmp
test
sub
mov
mov
enter
clc
mov
es
fsub
sahf
lret
inc
lock
int
scas
or
xchg
mov
test
cmp
jge
ds
jbe
jae
xchg
out
push
nop
bound
lret
jecxz
inc
mov
fadds
sub
xchg
jno
int
mov
mov
add
ljmp
aam
and
jge
add
push
scas
mov
dec
icebp
ja,pn
push
add
ds
call
insb
inc
addr16
pop
xchg
inc
ljmp
adc
jns
sahf
mov
xlat
jg
call
fistpl
or
push
hlt
arpl
ficompl
ror
lock
lcall
lcall
out
mov
repz
fucomip
insl
pop
fldcw
pop
sarl
push
mov
bound
fists
sbb
mov
mov
sbb
or
dec
mov
mov
cmp
fbld
fmuls
and
mov
lret
test
sbb
dec
das
cli
inc
outsl
cs
rcrl
bound
fldz
incb
aaa
push
xor
ljmp
and
imul
push
xor
jl
iret
cmp
xchg
mov
in
mov
cmp
js
dec
adc
stc
push
idiv
jmp
jl
push
pop
lods
adc
daa
add
mov
sbb
xor
add
or
lcall
add
adc
outsb
jle
dec
movsb
enter
dec
call
jle
sub
outsb
xlat
adc
es
sub
inc
testb
jo
cmpsb
rcrl
inc
sar
decl
jns
aam
add
arpl
push
sbb
mov
and
lcall
sub
std
stc
mov
fstps
add
pop
ja
or
push
pop
xlat
addl
incl
and
popa
mov
xchg
push
or
xor
inc
lock
mov
stc
or
movsl
cmp
loop
inc
xchg
sbb
and
movsb
fstpl
adcl
les
decl
xor
xchg
jo
mov
and
stc
clc
cltd
inc
cmp
inc
lcall
pop
push
xchg
call
loope
mov
jle
js
mov
xchg
pushf
inc
ja
pop
movsl
jecxz
rorb
stc
mov
lea
fwait
fwait
lahf
mov
js
lods
pop
jl
scas
mov
incb
incl
repnz
das
or
enter
test
stos
leave
insb
and
cmp
pop
push
lock
jp
adc
jg
cmp
xor
sbb
mov
outsb
cmp
inc
and
sbb
stos
in
int3
inc
xlat
aad
ljmp
push
push
jnp
aaa
iret
jmp
and
bound
and
sbb
adc
out
inc
push
ljmp
xlat
jne
loope
fistl
fldl
imul
adc
push
loope
decl
push
sub
orl
dec
stos
arpl
repnz
xor
lock
lock
jnp
movsl
and
jl
out
dec
pop
aaa
lcall
decl
and
daa
fbld
sbb
testl
jg
pop
mov
dec
adc
fidivl
adcl
subb
aad
mov
out
mov
cmp
decb
or
xor
sub
mov
stos
popf
insb
loopne
repnz
mov
popf
pushf
cs
add
jno
in
xor
mov
mov
lea
fnsave
cmp
cs
das
dec
mov
call
fldt
xchg
lds
adc
push
in
loopne
pushf
mov
ljmp
jmp
jns
or
out
jg
shlb
add
jno
inc
push
int3
adc
cmp
loope
test
dec
mov
movsl
inc
fdivrl
jno
mov
jle
add
and
ja
insb
push
mov
test
call
push
stos
mov
adc
clc
xorb
xlat
sub
es
mov
dec
pop
loopne
incl
scas
int
inc
ss
fcmovnb
mov
aaa
mov
and
call
cmp
mov
xchg
cmc
dec
inc
mov
add
in
out
adc
scas
loop
mov
pushl
mov
mov
pop
shufps
int
push
jne
sbb
arpl
fidivl
dec
sahf
popa
inc
rolb
les
or
mov
pushf
daa
pop
data16
call
insl
xlat
scas
xchg
mov
inc
dec
lret
xchg
faddl
lods
fsub
or
imul
dec
jmp
outsl
dec
pushf
movsl
sbbl
cmp
fnsave
push
pop
push
sub
mov
call
jo
cwtl
add
push
ds
mov
sub
add
in
jg
fcomip
xor
lahf
iret
push
xchg
jne
mov
fnsetpm(287
push
cld
xlat
out
adc
xor
pushl
test
pop
add
mov
pop
jle
adc
adc
stos
dec
xchg
nop
call
mov
testl
push
or
fwait
mull
aad
aad
fmul
lea
jg
les
lods
add
adc
out
push
adc
push
sbb
ds
push
in
adc
mov
pop
pop
mov
dec
cmc
mov
pop
std
mov
daa
insb
pop
es
decl
test
sbb
adc
ljmp
xchg
in
iret
pop
xorl
jge
push
pop
cld
jmp
inc
inc
movsb
dec
mov
push
ljmp
inc
mov
dec
adc
and
fistps
ds
adc
sarb
mov
mov
xchg
test
fmull
jno
jnp
pop
fsubl
jg
xlat
pop
loop
mov
xor
pop
subl
cmpsb
fsub
outsl
cmc
lret
lcall
push
xchg
adc
sub
mov
decl
xor
lret
dec
sbb
cmp
pop
mov
ljmp
xchg
push
in
ss
mov
int
inc
dec
in
lahf
rorb
mov
fsts
popa
lea
mov
cmp
nop
mov
ds
pop
mov
jp
stos
lcall
push
jnp
inc
xchg
mov
fcmovnb
or
insb
fnstsw
je
adc
pop
and
inc
dec
adcb
mov
lock
mov
fwait
insb
js
mov
lretw
pop
jmp
mov
jmp
clc
and
gs
into
mov
push
icebp
jmp
incl
push
or
ja
dec
clc
scas
cmp
psrlw
cmc
fcomip
incl
inc
pop
cmp
add
xchg
jae
rorb
pushf
sub
cs
pusha
out
and
stc
adc
sbb
push
adc
jg
inc
cltd
rcrb
adc
xchg
pop
mov
add
outsl
clc
mov
push
popf
sub
push
jae
xchg
movsl
mov
dec
ljmp
inc
push
mov
xchg
lret
fistpll
ds
or
cld
rcrl
fisttpll
lock
xchg
inc
insl
mov
sbb
wrmsr
mov
imul
or
xchg
pushl
xor
das
adc
pushf
aas
pop
into
loopne
sbb
dec
sbb
push
push
hlt
pushl
mov
add
xchg
roll
push
pusha
addr16
lret
test
ja
lcall
repnz
call
imul
imul
add
sub
jo
jge
jg
xlat
call
or
push
cmp
repnz
push
repnz
in
mov
mov
cs
pop
xor
add
fs
ljmp
xchg
fisttpl
push
push
sbb
movsb
cvttps2pi
mov
mov
sbb
fstpl
stos
dec
clc
lcall
fisttpl
pop
sbb
sahf
call
push
fidivs
sahf
loope
pop
loopne
das
ljmp
stos
stos
lcall
add
outsb
dec
lcall
in
jnp
jmp
outsl
scas
pop
sar
daa
inc
test
aad
adc
fdiv
pusha
push
mov
movsl
faddl
and
inc
outsl
pushl
std
dec
ss
pop
cmp
test
jne
outsb
ret
icebp
movsl
xorl
lcall
xchg
push
out
sub
imull
dec
notl
pop
nop
loope
nop
sbb
xor
int
pop
cld
out
mov
into
mov
adc
in
push
clc
repnz
rcl
pop
add
clc
dec
pop
cs
xor
mov
push
hlt
lea
ljmp
xchg
xchg
arpl
push
mov
mov
push
inc
inc
jl
ja
xor
sbb
add
out
inc
insb
nop
add
stc
mov
jl
fldcw
std
mov
or
dec
jecxz
push
int
aas
inc
jg
cmp
lods
xchg
rcrl
jle
data16
mov
xor
fld1
js
jnp
mov
imull
in
repz
jmp
dec
fimull
leave
clc
das
mov
bound
lea
shrl
jle
incl
ljmp
xor
leave
divb
push
int3
das
and
pushf
test
fcmovb
loopne
mov
movsb
jg
jle
pop
notl
mov
cld
int3
insb
fstps
cmp
dec
incl
stos
test
xchg
imul
cmp
imul
jg
call
sub
push
gs
lods
insl
ja
add
xor
int
add
xor
mov
loopne
jmp
inc
test
adc
mov
std
out
jb
dec
inc
in
in
inc
ret
mov
push
sub
add
push
in
pushf
sub
cmc
mov
mov
mov
mov
stos
jno
nop
cwtl
mov
pop
adc
nop
mov
lds
push
mov
jmp
adc
mov
add
pop
pop
mov
and
ret
inc
jp
sub
stos
js
repz
loopne
inc
lods
jnp
pushl
push
cmp
pop
add
sub
adc
inc
mov
stos
enter
decl
sub
sub
movsl
and
aam
sub
mov
pushf
dec
pop
dec
arpl
sti
mov
test
push
dec
adc
insb
cmp
or
mov
mov
aaa
xor
add
mov
out
nop
mov
mov
call
fiadds
pop
inc
jns
fidivrl
rcrl
pop
mov
xor
jbe
lcall
bound
pop
add
adc
sbb
rorb
mov
decl
bound
adc
pop
scas
mov
call
inc
nop
push
stos
adc
or
push
ljmp
sar
mov
pop
loop
movsb
cli
jge
sbb
into
mov
lcall
xor
mov
add
fimull
arpl
jge
sub
push
lret
mov
cmp
ljmp
subl
addr16
push
ret
sti
pusha
push
or
xor
mov
jbe
fwait
mov
inc
aas
cmpsb
mov
ljmp
cli
movl
mov
dec
or
shlb
cs
stc
in
decl
lcall
pop
sbb
sub
mov
shrl
in
mov
mov
loopne
xor
sub
push
xor
pop
push
sub
push
aam
add
addr16
mov
pop
leave
pop
lods
loopne
ljmp
cmp
ljmp
pushf
mov
inc
cmp
lcall
pusha
dec
or
mov
dec
mov
outsb
test
lcall
popf
fnstcw
cwtl
adc
lea
fs
cmpsl
aam
inc
sbb
ljmp
mov
jp
adc
dec
mov
add
mov
push
ljmp
push
and
mov
xchg
cli
stos
scas
sarb
mov
add
adc
out
fdivrp
mov
sub
dec
jbe
and
js
pushl
aam
inc
inc
xchg
mov
test
cmp
addr16
push
fadds
mov
xchg
fildl
jo
sbb
cs
mov
mov
icebp
pop
xor
jmp
mov
imul
mov
outsl
jmp
xchg
sub
clc
xor
fs
fs
mov
push
dec
pop
les
fnsave
scas
sbb
std
out
jbe
and
mov
lret
pop
inc
arpl
jge
xor
cmp
incl
jmp
aas
inc
incl
fdivl
test
xchg
push
imul
xor
movsl
adc
xor
in
pop
sbb
repz
cltd
mov
lahf
rorb
jmp
in
cli
xchg
jp
mov
cmp
fists
jg
or
or
roll
cli
and
mov
stc
fdivrl
adc
in
or
mov
jg
inc
sub
jo
add
mov
pop
popa
ljmp
sti
inc
push
jae
fwait
xchg
cltd
mov
test
les
call
push
mov
repnz
jge
lock
mov
enter
ret
pop
or
push
loope
inc
lahf
sub
js
jecxz
fists
cmp
into
push
cld
sti
rcrl
ret
cltd
mov
decl
dec
cmp
hlt
or
enter
inc
jb
dec
mov
sub
popa
mov
and
loop
push
inc
cli
adc
sub
outsl
cmpl
xchg
adc
lock
jg
lahf
cmp
mov
ret
sbbl
sub
pushl
dec
dec
scas
testl
test
jg
pop
xchg
jge
jg
aam
out
add
or
movb
popa
fwait
data16
rol
mov
mov
sub
and
xchg
idivb
cmpsb
loopne
cld
movsl
pop
adc
das
dec
jp
jge
je
mov
or
rclb
pop
or
aas
into
and
sahf
push
rorb
dec
je
dec
divb
and
leave
mov
mov
cmc
daa
lcall
pushf
lods
out
mov
mov
lods
cld
adcl
popa
lods
dec
aaa
icebp
gs
push
std
mov
test
les
sub
fnstsw
test
push
xchg
ret
mov
pushl
scas
nop
xor
mov
push
sbb
mov
fildl
lds
call
or
shrl
xchg
stc
mov
xor
roll
test
pop
push
test
pop
in
fsubrl
roll
in
adc
add
pop
xchg
mov
xor
fistps
sbb
ja
adc
sub
fisttps
loop
cmc
shrl
addr16
cmp
and
add
pop
jmp
into
adc
ret
in
lods
repnz
sub
push
mov
out
dec
gs
sub
mov
incl
es
adc
dec
jle
mov
in
aaa
popf
mov
nop
jg
jecxz
daa
in
mov
imul
cwtl
sub
pop
fwait
mov
scas
jnp
popa
mov
cmp
push
jo
lcall
lahf
push
scas
cmp
xor
mov
pushl
jo
mov
mov
repz
out
jb
mov
mov
mov
call
push
dec
cmc
xor
sbb
adc
or
test
bound
mov
lods
push
mov
sbb
inc
out
sub
fstpl
in
mov
rcrb
sbb
xchg
lret
sarb
mov
incl
or
fldl
mov
les
shrl
mov
scas
and
inc
decl
lock
pop
je
and
sbb
adc
sti
cmc
sbb
sub
aas
mov
stc
pop
loope
push
std
stc
pop
out
pop
mov
sbbb
dec
mov
xchg
incl
xor
jo
jbe
les
mov
stos
push
ljmp
int
jmp
aaa
push
lods
sti
in
jo
add
mov
shll
fsubrl
loop
inc
pop
jae
inc
aad
les
lods
sub
mov
xor
or
jmp
fistps
orl
stos
pop
pop
xchg
mov
adc
push
dec
inc
ja
push
nop/reserved
sbb
or
ljmp
mov
clc
xor
sub
ljmp
nop
negl
and
xor
pop
cltd
call
jmp
gs
xor
jmp
xor
mov
out
xchg
scas
nop
push
roll
sar
decl
nop
notb
and
pop
jmp
arpl
adc
mov
shrb
add
mov
cmp
cmp
aaa
inc
cld
aaa
ja
lret
add
idiv
in
cltd
cmovl
loopne
arpl
test
clc
jb
adc
das
push
and
das
xchg
or
in
and
pop
std
lcall
pop
popf
rcr
dec
jb
inc
inc
mov
xorb
test
ljmp
cwtl
jnp
fwait
adc
inc
popa
lret
sti
sub
in
pop
cmp
xor
outsb
cmp
jmp
xchg
mov
cwtl
add
ja
mov
movups
mov
xlat
in
lret
jno
cmp
xchg
aad
out
push
enter
adc
cld
insb
in
scas
test
adc
mov
jle
cmp
decl
cli
xor
pushf
lds
push
cmp
dec
fs
fsubs
ds
loopne
pop
cld
ljmp
pop
sub
add
xchg
mov
cmc
pop
and
or
pop
fdivrs
mov
and
sahf
call
das
pop
pop
scas
xchg
mov
sbb
in
lret
push
inc
sbb
sub
fs
call
test
xor
xor
add
lcall
push
aam
xchg
adc
call
or
repnz
clc
into
mov
jno
incl
test
mov
scas
mov
push
out
cmp
loop
push
call
mov
sub
aam
in
cmp
and
sbb
push
test
data16
mov
pop
cld
jmp
cmp
aas
lock
fdiv
fsubrs
mov
or
repz
inc
or
incl
and
divb
ja
cwtl
xlat
sbb
lock
or
pop
fdivl
jmp
fmul
inc
outsl
dec
adc
cmpsl
lcall
push
push
push
sub
adc
pop
inc
jno
ljmp
into
push
scas
das
lret
das
mov
mov
loopne
jle
enter
repz
icebp
xchg
imul
inc
nop
stos
push
out
hlt
mov
jge
arpl
ljmp
jg
sub
out
sub
daa
pop
pop
jle
loop
jb
push
add
mulb
pop
sbb
cwtl
or
push
or
ss
inc
xchg
cmc
icebp
in
incl
les
fdivs
xchg
std
inc
jl
call
daa
dec
sub
or
sti
xor
adcl
ja
jecxz
sbb
adc
ljmp
adc
lds
jb
cmpsl
stos
lret
adc
je
push
movsl
call
fsubs
stc
pop
push
inc
inc
cli
xor
add
rolb
fadd
scas
mov
push
andb
call
repnz
stos
aad
and
push
bound
mov
sub
mov
jg
mov
mov
shr
adc
outsl
pop
add
shll
movsb
imul
sti
add
ret
inc
inc
outsl
in
inc
test
movsb
jnp
dec
insb
ljmp
sar
aas
mov
lock
dec
js
je
adc
adc
mov
jl
sbb
stos
dec
xchg
loope
in
in
push
sbb
out
dec
jbe
nop
jg
ret
pushl
push
movb
inc
cwtl
xor
pop
jge
mov
roll
into
cmp
xchg
inc
mov
mov
cli
dec
mov
das
adc
jno
cmpsl
out
mov
in
and
call
scas
jge
sbb
addr16
or
clc
dec
pop
xchg
add
push
sbb
xor
xchg
aad
mov
sbb
fiaddl
out
daa
sbb
decl
jmp
add
dec
aad
insb
out
xor
xor
and
xchg
mov
inc
call
arpl
les
and
jge
je
dec
dec
add
jns
dec
call
jg
push
cmc
push
sbb
outsl
icebp
push
push
in
cltd
cltd
outsb
jb
xchg
outsb
mov
clc
outsb
inc
rcr
lea
int
test
sub
mov
and
jecxz
or
or
mov
outsl
cmpsb
lret
xor
lret
xchg
out
out
sbb
pop
mov
inc
and
pushl
imul
aas
lahf
mov
cwtl
movsb
dec
xchg
and
sahf
dec
ficomps
pop
push
sub
call
pushf
and
and
jae
bound
adc
xor
and
ljmp
test
scas
push
inc
sub
stos
mov
inc
dec
hlt
pop
sbb
aas
add
push
fildll
xor
push
cmp
jge
into
sub
pop
shll
mov
sti
decl
out
jae
add
popf
aas
and
test
es
fldcw
bound
loopne
jmp
adc
xor
sbb
cmp
pop
fwait
scas
je
call
insb
adc
popa
add
pop
mov
sub
sub
aad
dec
shll
fwait
dec
jne
xchg
icebp
lcall
push
jmp
cli
cs
sub
pop
mov
enter
adc
jno
lcall
pop
nop
decb
insl
les
lcall
dec
mov
dec
or
lret
out
mov
push
testl
mov
int3
xchg
cmp
lock
sahf
inc
into
mov
in
mov
cmpl
shlb
or
mov
daa
je
pop
aad
push
xlat
mov
and
std
and
jne
rcl
and
fsubr
popa
fs
pushl
lret
pop
pop
sub
popa
insl
and
das
stc
into
in
jae
xchg
xchg
lock
test
jno
sar
decl
jecxz
push
imul
push
sub
out
mov
pushf
ljmp
mov
sub
je
or
dec
xor
jb
fcomip
decl
ret
rol
push
aad
xor
aam
ljmp
sbb
pushl
insl
sbb
nop
in
stc
lods
dec
and
ja
pushf
mov
xchg
inc
lcall
jmp
and
mov
icebp
adc
faddl
add
inc
shrb
jg
add
jmp
inc
mov
enter
xor
mov
sub
ds
adc
xor
mov
lcall
insl
mov
dec
mov
xchg
lods
sub
out
cs
js
data16
dec
dec
pop
mov
xchg
lds
push
test
sub
in
xchg
aam
xchg
jg
call
sbb
ud1
xchg
lds
sub
add
cmp
pop
mov
xchg
xor
sub
pop
insl
pushl
mov
lahf
push
fs
std
push
popf
test
hlt
sub
insl
mov
dec
xor
arpl
js
push
sub
cli
loopne
daa
aam
and
inc
sub
cmp
decb
ffreep
cmpsl
cmp
loope
sub
hlt
fidivl
loop
in
pop
push
bswap
inc
popf
mov
js
sub
hlt
shrb
pop
arpl
test
les
mov
and
aam
int
pop
rclb
jns
popa
xchg
adc
push
outsb
rcll
cmp
fisttps
push
loopne
xorl
loope
xchg
push
add
movsl
outsb
dec
cltd
out
xchg
dec
or
or
push
stc
pop
rolb
popa
addb
lds
sbb
lcall
jmp
mov
stc
and
les
leave
pushf
adc
sbb
in
pop
hlt
ljmp
sub
push
lret
stc
sbb
movsl
sbb
in
ljmp
dec
mov
push
stos
fists
xchg
xor
call
test
jmp
shll
xchg
gs
pop
inc
scas
cli
mov
adc
jns
jae
or
decl
adc
and
push
int
xor
add
lods
lods
ret
sahf
fistpl
ret
es
xor
jb
sbb
lcall
sbb
gs
push
mov
jecxz
push
mov
out
jl
mov
inc
sbb
repz
cli
mov
pop
push
sbb
xchg
dec
cmp
iret
ja
ljmp
leave
jle
xor
loope
in
pop
cmp
mov
xor
xchg
mov
jmp
imul
mov
scas
push
lret
bound
fistps
insl
dec
cld
jg
out
shl
sbb
cmp
incl
sub
orb
ss
mov
popf
mov
hlt
pop
dec
mov
decl
or
cli
loop
hlt
mov
orl
aam
sbb
and
out
outsb
aaa
fbld
mov
test
ja
jp
pop
mov
inc
adc
push
lds
mov
decl
mov
sub
test
or
pop
ret
fildl
inc
xchg
jno
jns
sar
pop
cld
jmp
adc
call
mov
ret
sub
mov
nop
negb
dec
loop
add
aaa
std
inc
sahf
push
pop
adc
ficompl
aam
xchg
es
or
jo
ljmp
aas
fs
fcmovb
and
xor
xchg
loope
and
outsb
lret
xchg
orb
jns
jae
pushf
xor
push
cmp
adc
mov
out
jno
inc
dec
loop
push
or
lds
test
cmpsb
mov
mov
adc
xor
or
sub
incl
mov
sahf
and
sbb
roll
lcall
pop
xchg
sbb
cli
test
jmp
mov
adc
lcall
xchg
lods
les
or
daa
mov
decl
fucomp
fs
je
push
push
mov
push
ret
mov
mov
jns
call
movsb
fsts
fnstcw
push
pushf
sbb
loop
or
lods
std
push
jge
inc
fsubp
inc
inc
loope
mov
xor
repz
mov
notl
pushf
pusha
nop
mov
decl
push
imul
cs
xchg
ss
mov
out
mov
das
fcoms
inc
sub
call
loop
jne
sahf
add
cli
aad
imull
add
aas
test
ret
cmp
pushl
cld
das
je
sub
lcall
shll
popa
mov
mov
call
adcb
pop
fdivp
lahf
sti
xchg
call
pop
out
out
cmpb
lock
mov
dec
iret
cmc
inc
into
mov
sub
pop
dec
imul
add
rorb
loopne
jmp
sbb
cmp
mov
mov
ret
clc
xchg
out
fdivl
stos
mov
gs
adc
sbb
mov
mov
or
int
mov
mul
add
call
loopne
push
and
xor
cmpsb
mov
inc
cmpsb
movsl
jecxz
stos
and
sbb
ljmp
fbstp
dec
scas
jns
mov
icebp
push
scas
test
into
push
sahf
inc
test
pushf
cmpsb
repnz
incl
cwtl
mov
gs
push
adc
pushf
shr
rcrb
aas
scas
sub
inc
mov
stos
xlat
incl
push
lds
dec
ds
loope
add
mov
bound
dec
xchg
mov
aaa
jno
push
adc
lcall
arpl
push
mov
and
loope
bnd
addr16
sub
adc
lret
mov
fsubr
jbe
jecxz
mov
mov
xchg
mov
call
push
pop
push
cmpsb
adc
imul
add
negl
decl
ret
pop
and
fs
decl
jp
popf
mov
xor
mov
dec
cmp
sbb
lods
mov
scas
clc
ds
lcall
iret
jmp
test
imul
mov
stos
test
insl
sbbb
push
arpl
ret
sbb
sbb
lock
pop
outsb
roll
cld
call
sbb
mov
xor
stos
int3
les
fdivr
fbstp
jb
xor
dec
mov
mov
sub
cmp
cli
inc
in
xchg
sbb
dec
in
ljmp
mov
xchg
lret
js
movzwl
xlat
repnz
maskmovq
testl
aad
sub
add
mov
xchg
xor
pop
loope
loopne,pn
push
pop
movsb
decl
movsb
arpl
push
sbb
or
adcb
mov
faddl
mov
das
pushl
jmp
mov
loope
inc
lahf
movsb
sub
adc
in
loop
push
xchg
pop
popf
jnp
into
ja
jmp
xor
ret
jge
inc
mov
fistpl
dec
inc
cmp
lcall
ds
cs
pop
cmp
pop
pop
shlw
xchg
pop
andb
dec
jb
inc
jb
test
test
pop
aaa
stos
add
xor
sub
mov
decl
xor
xlat
aaa
rcrl
dec
jno
mov
adc
dec
sti
addr16
ljmp
sbb
sub
test
xor
int
les
lcall
pushl
lods
jnp
and
cs
ror
popfw
add
add
frstor
test
jmp
dec
cld
push
xchg
lods
add
mov
clc
fidivs
mov
mov
test
iret
xchg
xchg
imul
inc
dec
cmpsl
adc
aas
or
incl
jecxz
les
mov
xor
fwait
push
cmpsb
in
sub
test
sbb
inc
addr16
test
pop
jp
decl
repnz
jno
das
pop
or
sub
idivl
mov
sbb
pop
repz
mov
in
or
jne
push
outsl
fs
stos
pop
jle
test
decb
dec
push
call
lret
insb
and
orb
cmp
rcll
mov
rcrl
xchg
incl
mov
pop
ljmp
enter
fcom
cmpsb
pop
and
aaa
cmp
xor
lcall
in
lods
in
repz
jmp
mov
enter
cmpsl
xchg
cmp
ljmp
fdiv
xchg
pop
push
pop
cmp
mov
lods
xchg
loopne
xor
movsb
clc
dec
imul
call
push
bound
jmp
mov
sub
movsl
jmp
cmp
cmc
push
mov
incl
loopne
mov
push
insb
xchg
repnz
lds
out
movl
xor
decl
icebp
rcrl
sbb
xchg
sub
mov
or
pop
cmp
push
rclb
xchg
imul
insl
pop
cmp
sbb
out
inc
push
inc
mov
lods
fdivs
mov
xor
test
sbb
sub
dec
mov
push
sbb
call
adcl
lods
add
mov
add
shll
bnd
adc
ret
into
dec
notb
jnp
std
sahf
inc
sbb
and
jl
add
test
imul
call
push
lahf
outsl
push
les
insl
mov
icebp
or
cmpsl
aam
mov
bnd
fidivs
mov
fidivrl
ret
mov
stos
lods
aas
in
fidivrs
sar
ret
daa
dec
mov
es
ja
stos
sbb
ret
sbb
xchg
lock
push
icebp
cmp
mov
ljmp
xor
fbld
xor
mull
adc
cld
aaa
fiaddl
or
pop
aas
push
jb
dec
pop
decl
dec
faddl
fildl
mov
out
mov
xchg
sbb
sub
ljmp
xor
out
mov
xchg
bound
out
clc
data16
dec
in
fstl
inc
ret
nop
inc
xor
mov
shll
adc
and
ret
adc
testb
jne
in
mov
pop
leave
xor
sub
mov
dec
jecxz
mov
ds
andb
lods
lahf
or
and
shrl
lcall
jmp
jb
xor
sbb
fwait
and
lods
je
sbb
test
imul
mov
push
aam
lcall
outsl
push
stc
add
push
and
mov
mov
cmc
lret
sbb
decl
jo
push
dec
sahf
dec
push
push
or
xchg
cmp
and
push
mov
fstps
daa
ljmp
xchg
jae
cmp
lock
xchg
insl
sub
out
pop
add
aam
or
pushl
fsts
fcompl
and
shlb
fwait
mov
inc
ret
sbb
mov
nop
fistps
xchg
pushf
test
push
call
into
in
or
ret
std
adc
rclb
mov
xchg
pusha
jg
iret
pop
mov
xlat
adc
jp
mov
pop
mov
fnstcw
arpl
mov
pushl
push
outsb
xlat
cmp
jnp
jg
std
and
dec
test
shlb
call
jo
xor
inc
ret
sub
aaa
jge
mov
mov
aam
out
and
lcall
jle
jbe
cmp
xchg
inc
ja
add
add
xchg
fidivrl
sbb
cmp
sub
rcrl
sbb
dec
mov
insb
cmp
fmulp
sub
into
xchg
cmp
pushl
xor
test
sbb
ds
mov
pop
out
inc
test
in
addr16
jmp
mov
fiadds
loop
adc
jg
xlat
stos
pop
insl
push
mov
jae
js
decl
sub
daa
call
shll
insl
loopne
push
repz
mov
loop
xor
in
xor
arpl
mov
test
into
lock
jbe
mov
cmp
movsb
stc
xor
stos
cltd
mov
insb
leave
push
and
jl
andb
jg
bound
stc
xchg
pop
mov
dec
in
pop
subb
in
jp
scas
push
in
ljmp
jl
scas
sbb
stos
xchg
icebp
std
enter
jecxz
mov
repz
js
inc
test
sbb
pop
les
inc
out
cmp
cld
and
mov
or
push
dec
bswap
stos
mov
push
or
cmp
inc
outsb
ret
imulb
decl
lcall
adc
dec
jnp
mov
pushf
sub
pop
inc
pop
fdivrs
movsb
sti
fbstp
inc
clc
pushl
ljmp
mov
cmp
repnz
sub
fdivrl
decl
out
sbb
inc
imul
mov
cmpsb
mov
fdivrl
pop
cwtl
lcall
ja
push
jl
imul
xchg
ja
mov
jg
cmpsb
out
mov
roll
test
ss
adc
divl
push
jge
mov
testb
cmp
call
mov
ror
and
test
add
bnd
pop
mov
jg
stc
inc
cmc
cli
int3
cwtl
mov
xor
mov
jb
and
pop
or
incl
cli
jg
les
inc
cli
add
pop
and
aad
popa
mov
dec
scas
cmp
movsb
loope
lcall
fwait
mov
stc
in
ficoms
pop
test
pop
movsl
mov
call
pop
cmc
lcall
xchg
add
mov
push
push
rcrl
and
xchg
or
mov
and
xchg
rcll
or
adc
sub
std
pop
sbb
incl
call
stos
fadd
and
dec
out
or
popl
ljmp
enter
xchg
xor
sarb
dec
mov
decl
insl
adc
jae
xor
aaa
aas
xchg
xor
fists
sti
aam
decl
jb
shll
jge
ds
bound
or
mov
sub
or
sahf
cmc
push
lcall
sbb
jmp
xchg
out
in
int
cmp
fmuls
test
xor
outsb
inc
push
inc
sub
aad
mov
xchg
mov
push
cmp
dec
paddsw
dec
mov
ljmp
imull
jmp
push
sbb
inc
pop
jmp
jns
loope
lea
mov
decl
xchg
add
inc
lea
icebp
ret
ds
xchg
pop
mov
gs
sub
jl
mov
inc
pop
dec
push
stos
add
sub
cmpsl
xchg
push
mov
in
sar
call
adc
jl
out
adc
cld
in
inc
insb
xor
stos
movl
sar
push
cmp
shrl
enter
aad
mov
inc
sbb
adc
xchg
xor
lock
outsb
out
stos
jno
add
dec
pop
repz
out
clc
jg
mov
jno
mov
rolb
inc
pop
push
push
jne
je
mov
jmp
mov
shlb
fnstenv
icebp
mov
pushf
add
aam
mov
mov
pop
sti
gs
xchg
jb
cmp
mov
ss
xlat
stos
int3
fdivs
shlb
call
out
inc
scas
and
push
mov
mov
jns
shlb
jmp
popf
mov
popf
xor
xchg
leave
inc
fcoms
enter
shrb
mov
sbb
push
call
cmpsb
icebp
mov
lret
addr16
faddp
icebp
lcall
jno
shr
out
setbe
in
mov
jae
stos
sub
jg
xor
fs
in
jne
jmp
mov
lcall
xor
faddp
bound
ja
cmp
out
mov
pop
fildll
pop
sbb
out
sub
sub
adc
dec
mov
inc
inc
arpl
mov
ret
or
and
lcall
fcmovu
pop
sbb
ds
inc
xor
cld
daa
imul
hlt
sbbb
pop
loopne
scas
insl
decb
into
jmp
pop
add
mov
mov
popa
lcall
fdiv
and
or
sbb
sbb
jle
mov
stos
icebp
fs
rcrl
lcall
adc
aam
ds
lds
lret
lret
sbb
clc
dec
dec
and
cmp
iret
jg
pop
std
cmp
into
xchg
subb
push
adc
add
mov
incl
pop
pop
dec
inc
cmpsb
cmp
data16
mov
in
daa
add
xor
popa
push
jp
push
ljmp
incl
adc
and
xor
sub
nop
sbbl
inc
xchg
mull
in
insb
push
jne
pop
xchg
pop
sub
ds
ljmp
xchg
out
mov
int
xlat
call
ljmp
pop
incl
ljmp
jecxz
js
push
mov
pushf
inc
in
cwtl
enter
lea
or
incl
push
jae
add
icebp
pop
pushf
cmp
aaa
push
imul
mov
cmp
pop
adcb
cmc
pop
jl
jae
clc
push
data16
loope
pop
shlb
jg
decl
mov
dec
cmp
pusha
outsb
insl
nop
aas
adc
jmp
loop
adc
aam
add
push
loop
cmp
mov
aam
loopne
call
push
add
call
or
sub
leave
push
imul
testl
call
int
jbe
pop
inc
loope
xchg
mov
cmc
pusha
dec
xchg
or
jmp
mov
aaa
dec
insb
call
scas
pop
xor
dec
inc
cmp
inc
cmp
mov
loope
add
xchg
sgdtl
pushl
icebp
aas
movsl
movsl
or
sbb
push
jl
jno
shlb
push
sbb
mov
cmp
mov
movsb
push
jno
mov
sbb
ja,pn
dec
fistl
or
arpl
mov
lret
pop
shlb
ja
lret
bound
cmp
jg
push
movsb
mov
inc
decb
sbb
jno
jno
pop
xor
xor
sbb
lcall
jns
inc
dec
adc
popa
mov
sti
fstpt
add
test
out
mulb
mov
push
ljmp
call
fidivl
je
or
push
addb
jo
jmp
out
rcl
mov
mov
jno
xchg
sbb
push
push
call
clc
daa
mov
cs
nop
jo
rcll
adc
add
lret
out
cmp
inc
pop
imul
lcall
test
jne
and
dec
mov
mov
or
pushf
fwait
stos
shlb
or
cmp
ss
xchg
xchg
ds
pushl
lods
aam
iret
xor
inc
dec
xchg
sub
xor
mov
jle
push
add
inc
stc
sub
js
sub
jns
pop
mov
xor
fmulp
movsl
jl
mov
jbe
testl
dec
push
push
das
xchg
cld
or
lahf
adc
mov
lds
mov
dec
xlat
stc
ja
arpl
and
mov
shlb
into
jne
mov
repnz
jge
cmp
push
inc
sub
mov
bound
pop
loopne
jmp
adc
pop
xor
mov
and
jmp
jle
in
xchg
mov
cmc
or
dec
sbb
daa
jns
xchg
mov
sahf
sar
insl
dec
xor
pop
push
add
mov
and
jb
into
ljmp
push
xchg
pop
adc
fcomi
push
fstpt
or
xchg
add
pop
ljmp
push
sub
mov
cmpsb
aam
lods
adc
mov
hlt
add
in
add
jg
dec
ret
cs
je
inc
sbb
adc
sbb
sbb
outsb
lcall
push
jae
jb
leave
rcll
xor
arpl
dec
pop
xlat
inc
lock
mov
incl
movsl
sahf
arpl
inc
adc
in
sub
subb
scas
push
lea
rcll
mov
ljmp
add
stc
add
or
sub
or
mov
pop
jg
incl
sbb
in
sahf
fidivs
dec
repnz
sbb
fwait
mov
lahf
pushl
fldcw
push
insl
pop
fsubrs
imul
movsl
or
mov
or
lcall
sub
movsb
loope
outsb
pop
lods
cmp
lret
adc
cld
add
clc
imul
sbbb
clc
incl
mov
pop
pop
arpl
pop
mov
xchg
mov
sbb
or
fwait
sub
pusha
insb
and
mov
jbe
xchg
push
loopne
call
ss
cs
xchg
cmc
aas
sub
jo
movl
test
mov
fcmovne
dec
xor
mov
xlat
sti
movaps
insl
mov
arpl
movsl
fnstsw
mov
ds
fisubs
cmp
cmp
adc
jns
cmp
xlat
adc
rcrb
lods
adc
cmc
lret
aaa
lret
in
xchg
dec
xchg
jno
jl
shlb
mov
jmp
xor
popa
fcompl
xchg
jle
clc
add
rcl
out
push
fsubrs
inc
xchg
incl
lods
out
incl
shrb
icebp
mov
xchg
nop
cmp
arpl
in
call
or
xchg
and
icebp
mov
xor
xchg
subb
lret
mov
lock
mov
inc
aas
shll
js
popa
pop
call
stos
sub
jl
lcall
jb
cltd
lods
jecxz
push
dec
jmp
incl
imul
mov
arpl
aad
jno
lahf
cmp
push
add
pusha
scas
clc
decl
pop
push
stos
or
cmpl
ret
repz
dec
lock
cmpsl
ss
insl
xchg
lods
fcomip
incl
fwait
icebp
je
aad
std
fidivrl
or
jecxz
cli
scas
xor
cmp
cld
jno
lahf
aam
inc
out
sbb
jo
aas
outsl
cmp
sub
addr16
mov
cmpsb
jbe
dec
jmp
jae
xor
xchg
fistpll
mov
scas
in
out
std
jns
mov
sbb
mov
cmp
jbe
out
in
add
aam
xor
ja
xchg
out
inc
xor
xor
push
xchg
adc
xchg
ljmp
push
mov
push
jnp
push
sub
adc
and
cli
gs
dec
dec
xchg
ljmp
lcall
jge
sbb
mov
cmp
dec
enter
iret
sbb
sar
add
cs
loopne
mov
je
mov
loopne
mov
xor
lcall
out
add
daa
dec
pop
sti
das
pop
scas
je
push
mov
pop
out
inc
cmp
add
adcl
inc
daa
mov
mov
sarb
out
fucom
fwait
or
std
add
add
lcall
xchg
pop
cmp
pushf
sahf
jnp
inc
clc
es
cld
mov
enter
std
adc
mov
lcall
ss
inc
ds
mov
cltd
pushf
popa
jnp
xor
sti
scas
pushf
xchg
jne
pusha
cli
sub
jmp
lret
into
fists
pop
lret
jae
xchg
loope
pop
mov
xor
es
ljmp
jecxz,pt
and
shrb
sti
fnstcw
pop
mov
pop
movsl
pop
push
fistpl
test
add
clc
call
lcall
or
test
mov
sub
call
or
cmp
inc
lods
fiadds
dec
leave
cmpl
lret
test
icebp
push
fistl
and
cmpsb
sbb
inc
xchg
adc
adc
aas
pushf
sub
fwait
imull
js
pop
mov
jl
rcrb
loopne
vpperm
js
fdivrs
mov
incl
sub
arpl
mov
lods
repnz
callw
jle
cmc
test
addb
dec
lock
push
xchg
adc
and
out
add
xchg
xor
loopne
or
ljmp
lcall
pop
sub
fisttpll
dec
lret
mov
insl
popf
xlat
imul
movsb
stc
lahf
gs
ja
xor
loopne
js
push
mov
pop
push
xchg
daa
ljmp
xchg
mull
jns
sub
into
leave
imul
sub
mov
mov
adc
inc
movsb
pop
xchg
push
sub
mov
fiaddl
xor
or
cmp
jmp
lods
mov
into
sahf
loope
lds
sub
lea
mov
lahf
fisttpll
int
mov
scas
jmp
sbb
jle
pop
inc
mov
lret
adc
mov
idivl
icebp
jnp
jnp
mov
xchg
fbld
loopne
mov
xchg
into
xchg
push
in
cmpsl
in
mov
popf
aas
cmpsl
mov
into
mov
cltd
in
lret
pop
sbb
out
idiv
dec
rol
in
fiadds
xchg
bound
insb
ja
mov
cld
call
inc
adc
inc
push
std
stc
mov
inc
push
in
aam
push
mov
out
inc
mov
ljmp
sub
sub
xchg
dec
mov
pushl
ficoms
mov
repnz
jae
mov
cmp
call
aad
sub
adc
pop
jl
jle
or
mov
jl
das
std
mov
pop
outsb
xor
pushl
push
sub
popa
fdivp
pop
fnsave
pop
fisubl
in
xor
jmp
and
shll
add
xchg
mov
pushf
xor
ljmp
push
add
push
fstpt
mov
dec
xchg
jle
jg
adc
cmp
jl
dec
testb
js
lret
xchg
xor
insl
imul
mov
ret
add
lret
jmp
ret
test
shlb
fmull
or
stc
mov
jo
jp
aas
stos
push
into
pop
xor
jg
and
adc
cmpsb
out
sub
dec
aaa
clc
dec
popf
jne
ds
mov
rol
ljmp
lods
pop
jo
es
pusha
stos
mov
xor
out
mov
sbbb
inc
out
dec
and
xor
mov
jbe
cwtl
sub
pushl
push
sub
and
sub
popf
push
pop
inc
ss
adc
jg
mov
mov
mov
jno
pusha
lock
dec
xchg
repz
xorb
add
mov
decl
jo
mov
rcr
lea
ljmp
jg
movsb
cmc
imul
in
lods
bound
outsl
data16
inc
mov
ljmp
sub
pop
ret
sub
dec
dec
lea
add
mov
incl
mov
iret
dec
les
pop
xchg
jecxz
and
xchg
xchg
xor
call
inc
xchg
sbb
cmc
cmpb
sbb
push
and
fisttpll
notl
jmp
lods
dec
addr16
stos
add
or
stos
mov
adc
pop
push
shrl
push
decl
sbbb
pop
sub
and
bound
xchg
jp
sbb
xor
lea
jmp
call
std
mov
mov
call
mov
pop
push
loope
and
pushl
jnp
dec
js
insl
lods
lret
and
mov
lret
pop
rolb
test
jmp
or
pop
daa
lahf
int
and
cmpsb
or
lods
xchg
cmp
outsb
iret
stc
push
cmp
nop
fs
push
idiv
aam
cmp
jb
mov
adc
filds
dec
push
push
push
mov
ljmp
sahf
adc
adc
cmp
test
push
pop
or
cs
or
shl
push
cmp
lock
push
add
outsl
pushf
push
cmpsb
insl
adc
pop
jle
ljmp
and
mov
fisttpl
filds
imul
out
cmp
ficoms
cmp
jmp
push
jle
loope
aad
dec
add
pop
dec
sbb
rolb
rcll
pushf
ja
loopne
jecxz
mov
dec
mov
repnz
aas
sub
fstpt
adcl
decl
imul
xchg
mov
mov
mov
leave
popa
test
mov
ficomps
in
movsl
push
push
adc
fldenv
decl
ret
les
mov
fwait
or
call
dec
fwait
ss
push
add
aam
incl
mov
sbb
pop
cs
mov
xlat
das
sbb
mov
cli
rclb
nop
test
icebp
shl
pop
jp
rcrb
or
pop
xchg
inc
dec
insb
xchg
jno
add
xor
pushl
inc
and
mov
and
or
xor
sarl
xchg
add
and
in
mov
incl
and
call
aad
popa
fwait
xchg
sbbb
mov
jns
loopne
push
call
stos
popa
mov
dec
lods
sbb
mov
jecxz
mov
cmp
decl
cwtl
aam
push
mov
inc
cmc
pop
es
cmp
aam
xorl
fsubrl
jne
jg
out
imul
int
std
lods
out
mov
mov
ljmp
fcoml
push
inc
inc
mov
pop
rcl
or
mov
and
aam
dec
sbb
incl
popf
jno
popf
xchg
jb
and
leave
xor
ljmp
outsl
adc
shll
adc
inc
in
sbb
out
or
cmpsl
adc
push
rorb
testl
inc
xor
dec
incl
mov
add
test
cmovbe
mov
mov
jne
ss
sti
stos
sub
ljmp
jl
xchg
pop
inc
gs
push
iret
cld
xor
add
mov
push
data16
movsl
xchg
in
icebp
adc
push
fwait
inc
scas
adc
xchg
jmp
rcrl
or
adc
adc
test
mov
dec
je
jmp
inc
das
add
sti
rclb
push
enter
xor
jp
mov
mov
mov
dec
rol
mov
push
fildl
hlt
inc
bound
add
mov
lret
push
jp
sahf
aas
repnz
out
sahf
in
sbb
sbb
dec
jp
inc
clc
ficomps
add
sub
and
sbb
stos
movsl
add
in
lret
lea
inc
mov
push
or
daa
inc
xor
pop
ret
in
push
mov
scas
or
std
ret
mov
scas
pushl
jecxz
xor
sti
mov
inc
jo
fsubs
sbb
xorl
inc
add
frstor
push
das
out
jle
adc
jle
sub
movsl
and
adc
incl
cmp
mov
jmp
sub
adc
adc
xor
decl
mov
mov
cmpl
jo
jp
jnp
call
sbb
xchg
ds
jnp
adcb
je
icebp
dec
data16
sub
lret
lcall
idiv
test
mov
fsub
repnz
bound
or
xchg
lcall
das
lret
out
cmp
in
shll
jne
clc
repz
push
xchg
arpl
jg
sbb
lcall
push
adc
mov
mov
out
ljmp
sub
push
sbb
repz
pop
int3
ss
or
push
push
shrb
mov
lret
and
jne
push
ljmp
cld
inc
in
push
add
clc
stos
or
sbb
ds
fcomps
idiv
push
std
lcall
xlat
lahf
leave
inc
insb
out
xorb
shl
mov
sar
incl
jmp
dec
call
fldcw
inc
jl,pt
mov
mov
insl
push
pushl
les
ret
push
sub
or
jmp
jge
adc
xchg
fildll
push
lcall
data16
jmp
das
rolb
push
ret
and
push
decl
pushl
out
shl
pop
test
mov
xchg
sbb
frstor
jo
inc
cmp
or
or
fstps
mov
decl
add
jae
mov
clc
cmp
jns
lea
fisttpl
aas
popf
xor
scas
pop
lcall
push
dec
mov
outsb
mov
sbb
sub
push
cli
sbb
call
xor
inc
inc
inc
mov
sbb
xchg
arpl
insb
mov
popa
out
ja
sbbb
and
daa
jne
leave
ss
shr
in
stos
fisttpl
fcmovnbe
dec
pop
jecxz
or
sub
add
in
filds
mov
mov
pop
push
js
jg
or
sub
xchg
in
mov
mov
lcall
or
sub
sub
and
jo
inc
adc
mov
push
rcrl
mov
xchg
out
jbe
sbb
rclb
jg
dec
test
mov
mov
dec
sbb
jb
push
jne
jo
popf
test
mov
dec
sti
insl
sbb
lcall
push
and
imul
jp
lcall
cli
cmp
testl
mov
aam
add
push
out
jg
incl
incb
pop
mov
add
jp
dec
loopne
xchg
mov
cmp
inc
ret
jne
outsb
stc
stc
imull
aas
ss
mov
shrl
aaa
repz
mov
out
mov
lds
jle
push
mov
lahf
xor
lods
test
mov
inc
rclb
push
lret
daa
mov
mov
or
clc
inc
mov
push
push
decl
andb
pop
cmp
and
push
stos
or
mov
xor
cmpsb
mov
cld
sti
sub
push
dec
cmp
ja
fstp
cmp
cmp
inc
cli
jl
cmp
adc
call
notl
sti
pop
cmp
andl
push
inc
sub
cmp
mov
mov
push
push
jp
stos
cli
aad
ljmp
aam
stos
push
movsb
cmpb
out
sbb
addr16
movsb
sbb
imul
pop
rcrl
mov
stc
cmp
cmp
lret
cmp
lahf
dec
dec
lods
mov
stc
ljmp
stc
sub
xor
lods
push
cmpsb
dec
xchg
int3
sbb
sub
pop
cld
mov
pop
subl
and
push
outsb
sub
cmpsb
jg
push
add
call
inc
sub
sub
cmp
out
adc
add
arpl
lods
lea
sbbl
imul
lcall
mov
jp
or
mov
jno
adc
bound
dec
adc
ret
lea
in
pushl
push
sbb
xchg
test
jle
cmp
sub
jl
adc
jmp
leave
push
pop
outsl
cltd
dec
add
sbb
mov
fimuls
gs
dec
pop
mov
cli
dec
mov
out
idivb
ja
cltd
pop
or
cmp
bnd
movsb
push
test
ljmp
je
jno
jno
and
mov
enter
pop
mov
arpl
push
sbb
sar
sub
jae
in
lret
jecxz
or
repnz
korw
xor
decl
jns
nop
dec
mov
test
xchg
ss
outsl
data16
cmpsl
flds
imul
sub
push
jmp
fsts
jl
mov
cmpl
scas
adc
or
leave
fwait
sub
es
ljmp
lcall
subb
shll
cmp
shr
pop
dec
daa
mov
lock
push
cmp
call
add
iret
lea
es
inc
adc
outsl
std
enter
and
mov
dec
insb
dec
mov
and
sets
bound
inc
and
jbe
dec
lods
rcrl
add
movsb
test
cmp
enter
clc
mov
dec
pop
adc
mov
and
sub
call
jmp
push
pop
push
or
mov
push
cmovg
aam
daa
xor
outsl
clc
jge
ljmp
mov
mov
and
adc
fsubrl
inc
out
pop
mov
cmp
adc
out
and
jne
xchg
pop
inc
jle
arpl
pushl
inc
negl
add
xor
push
jnp
test
and
or
or
or
or
or
jae
mov
xor
sbb
loopne
sbb
and
push
inc
mov
add
call
loopne
mov
pop
inc
pop
xchg
loope
sti
daa
jge
cli
icebp
aad
das
jnp
dec
pop
pop
loopne
lcall
js
mov
int3
or
pusha
jno
iret
push
mov
adc
in
out
mov
pop
mov
push
jg
sub
jbe
sbb
ret
inc
sbb
inc
repnz
sbb
cmpsl
cltd
sub
test
cmp
fstps
fs
ja
rol
aas
dec
push
std
call
pop
je
add
push
incl
pop
aas
into
pop
add
cmpsb
lahf
loope
jns
sub
mov
cvtdq2ps
dec
fdivr
inc
fisubs
clc
mov
push
push
adc
pushf
sbb
inc
data16
dec
xor
or
clc
out
repnz
jle
mov
jmp
incl
dec
ret
push
dec
test
or
roll
fstps
addr16
stos
push
out
sbb
jo
loop
xchg
stos
subl
incl
adc
mov
enter
adcl
add
rcrb
pop
cmp
addb
std
mov
dec
xor
dec
sbb
lcall
test
mov
out
mov
pop
inc
fidivrl
push
mov
xor
orb
sbb
or
cmpsb
mov
fdivs
mov
push
xchg
cmpsl
pop
test
jecxz
mov
outsl
adc
pushl
mov
push
jb
inc
clc
mov
lahf
ds
add
fisubrs
cli
in
or
fiadds
imul
cmp
jbe
int3
daa
mov
mov
add
lea
pop
in
insl
cmpl
aaa
or
insl
xrelease
add
into
rcrb
fwait
bound
nop
cmp
pop
dec
out
cli
jmp
cmc
mov
push
testb
invd
push
pop
aam
pop
pop
adc
add
lahf
inc
nop
xchg
add
enter
pop
inc
xor
mov
ljmp
int
arpl
movsb
sub
fimuls
out
adc
daa
aaa
and
decl
add
les
or
jl
cmpsl
mov
jae
or
sahf
test
push
or
das
cli
ljmp
loop
pop
mov
inc
lret
dec
xchg
ss
adc
pop
push
jecxz
in
xor
popf
xlat
or
sahf
push
jne
lds
addr16
xor
jo
insb
divl
xor
or
jmp
lea
aas
dec
mov
cmpsl
test
orb
cmpsb
mov
andl
loopne
jnp,pn
hlt
inc
xor
scas
inc
pop
mov
out
decl
stos
cmp
sub
mov
adc
jmp
div
incl
sbb
arpl
sub
dec
shll
lret
sub
jp
rorb
fcoml
lea
movsb
les
add
test
sbb
rolb
add
sub
mov
mov
push
fstps
adc
jg
mov
mov
jg
pushf
and
bound
movsb
sub
jg
jmp
xchg
fwait
sbb
mov
jb
test
iret
pop
inc
imul
pushl
test
hlt
push
aad
inc
xor
test
incl
xor
jmp
mov
dec
dec
dec
pop
in
lock
jg
dec
in
filds
int3
push
jg
add
mov
dec
dec
mov
in
adc
jge
insb
popa
insb
test
addr16
stos
jmp
pusha
push
pop
pop
xlat
adc
jg
dec
lods
loope
and
je
scas
cmc
mov
getsec
pushw
mov
sbb
int
lods
push
std
call
dec
push
dec
pushl
rcrb
jge
push
movsb
jmp
and
adc
scas
push
mov
lock
sbb
or
sub
call
xlat
add
aam
jae
push
xor
mov
mov
popa
popa
add
sbb
mov
xchg
negb
in
enter
push
mov
test
push
dec
dec
mov
ljmp
faddl
decb
add
mov
xchg
movsl
push
lcall
add
push
inc
mov
stc
cli
push
adc
outsl
jmp
xchg
scas
and
add
lea
hlt
aaa
sbb
inc
jp
cmp
sub
sbb
jno
jl
lcall
push
icebp
cmp
cld
addl
incl
add
inc
inc
sbb
adc
sti
cld
pop
movsb
sub
xor
ds
ja
sarl
lock
ljmp
daa
hlt
jo
scas
lret
stc
jnp
rcr
dec
sbb
movsl
inc
mov
in
cmp
insb
loopne
push
bound
jne
stc
fldcw
les
pushl
cld
fdivs
push
inc
xor
dec
addr16
push
xor
stos
shlb
adc
add
lds
ljmp
pop
push
ret
or
pop
dec
add
aas
sbb
cs
into
xchg
lcall
mov
sbb
in
mov
xor
mov
scas
inc
popa
and
mov
lcall
inc
jge
cmc
sub
sbb
lods
ds
fisubl
adc
jb
in
cmp
push
mov
fs
jbe
push
nop
xor
adc
jmp
pop
sahf
cld
shll
lds
mov
xor
xlat
jae
lahf
and
clc
incl
movsl
repnz
leave
dec
movsl
xchg
call
imul
push
pushl
mov
stc
mov
mov
mov
pushl
sub
xchg
cmp
sbb
imul
idivl
dec
imul
call
ds
in
mov
loop
xor
dec
pop
dec
and
dec
outsl
ds
mov
ds
ret
lods
adc
push
sub
sbb
mov
addl
in
fisttps
std
lcall
inc
popf
out
cmp
cs
insl
mov
pop
loope
mov
ljmp
xlat
mov
lret
push
test
mov
stos
push
mov
dec
add
mov
xor
mov
pop
adc
mov
or
sub
mov
inc
lds
or
fwait
xchg
mov
dec
inc
leave
fxch
jle
bnd
ss
lcall
sub
push
cwtl
dec
sbb
push
adc
lcall
ret
cmp
in
dec
aaa
aaa
in
iret
mov
sti
inc
inc
repz
sub
cltd
xchg
lahf
jmp
push
push
fmull
pushl
pop
mov
lods
ja
jne
and
outsl
out
pusha
inc
adc
inc
cmp
dec
iretw
mov
adc
rclb
jmp
mov
into
dec
sbb
cs
ret
mov
xlat
jle
nop
fisubrl
je
mov
xor
lahf
mov
aaa
cmpb
sbb
sbb
dec
push
pushl
insl
inc
lret
lret
sbb
ret
sarl
and
push
inc
cmc
jmp
cwtl
inc
xchg
out
lcall
leave
je
loop
xchg
cmp
fisubrl
bound
lock
das
and
test
mov
decl
or
gs
jge
mov
and
jmp
add
cmc
push
in
sbb
decl
and
mov
add
mov
in
xchg
sub
les
add
sbb
and
fsts
mov
out
add
cs
aaa
test
lea
je
ljmp
mov
inc
or
xchg
cld
subb
xchg
outsl
jae
cmc
leave
test
lcall
int3
add
push
outsb
ret
sbb
popa
data16
sbb
inc
or
ret
push
bound
add
dec
cmp
clc
and
pushf
popa
in
ljmp
fstp
lahf
imul
addr16
mov
mov
pop
xchg
shlb
cld
dec
cs
jp
in
idiv
dec
mov
and
cmc
cmovl
sub
ret
pop
push
in
jl
mov
jb
out
add
mov
pushf
pop
adc
add
push
cld
fwait
test
sbb
test
or
incl
cltd
push
xchg
add
add
sub
cmpsb
leave
and
mov
loopne
jmp
fs
clc
dec
js
jge
adc
test
lcall
and
add
scas
add
jns
pop
mov
and
call
push
cmp
fs
outsl
mov
hlt
inc
add
ljmp
jmp
push
dec
bound
sbb
or
lea
iretw
adc
mov
imul
in
int3
mov
and
mov
in
jbe
pop
xor
aam
xchg
mov
xchg
loope
rcl
jmp
es
pop
fidivrl
push
pop
push
pusha
inc
push
xchg
icebp
jne
adc
lret
add
xor
mov
cmpsb
cmp
std
push
lcall
or
outsb
jne
in
jge
jg
pushl
cmpb
push
jecxz
pop
push
hlt
inc
push
pop
testl
and
std
decl
loopne
and
addr16
dec
sbb
push
lock
icebp
push
jnp
dec
int3
push
ss
push
std
pushl
or
add
pop
push
sub
jecxz
loop
mov
jecxz
stos
or
cli
stc
add
jmp
jmp
out
push
ss
adc
movsl
data16
push
jns
jae
and
jbe
sub
fwait
cmp
jg
stos
ret
push
mov
jg
inc
cmp
xchg
inc
or
enter
rclb
scas
in
jl
pop
sub
call
ret
outsl
add
cld
insb
add
sbb
ret
ds
aaa
mov
pop
jl
pop
jns
xlat
aam
add
pop
movsl
cmpsb
into
sar
jb
ja
or
sar
lcall
lret
xlat
std
mov
sbb
outsb
inc
sbb
jmp
int
rcll
pop
add
or
out
pop
cmp
cmpb
inc
cmp
fildl
dec
adc
decl
clc
sub
or
mov
lods
insb
xchg
sbb
dec
or
inc
dec
ds
cmc
pushl
jg
repnz
xor
stos
jns
pop
out
jne
xor
fistpll
addb
out
and
mov
pop
movsl
mov
int3
pop
lcall
sbb
adc
dec
jae
push
mov
jb
or
les
ljmp
rcl
ds
cmp
stos
pop
rcrl
lods
push
aaa
out
outsb
sub
scas
std
add
xchg
inc
or
push
and
and
pop
dec
in
inc
shll
mul
icebp
ret
mov
mov
mov
mov
adc
adc
xor
pushl
mov
out
adc
lahf
xlat
or
pop
subl
pop
int
cmp
jg
shll
push
sub
icebp
sbb
cmp
push
cmpsl
mov
xchg
push
inc
call
scas
and
jae
mov
xor
data16
test
add
sub
fmull
sbb
sbb
adc
cmc
fnstsw
fidivrs
jns
bsf
decl
adc
xor
ljmp
adc
loopne
loope
outsb
xor
rorl
idivl
xchg
sub
scas
xchg
or
cmpsl
pushf
aam
xchg
cmp
push
inc
or
lcall
dec
mov
jge
fists
lahf
mov
cmp
and
out
imul
sbb
or
ret
xchg
xor
mov
push
out
dec
testl
aad
call
icebp
inc
call
bound
stos
sub
adc
imul
cmp
pop
andl
daa
mov
int
fists
imul
in
mov
vandnps
cs
fxch
pop
push
mov
xchg
sub
vcvttps2dq
outsb
mov
pop
add
xor
hlt
mov
roll
push
mov
mov
out
dec
lea
fimull
incl
mov
mov
jae
jge
pop
sti
out
sub
jo
aas
clc
cmp
incl
sbb
lds
fnstenv
xor
mov
mov
test
xchg
call
cld
dec
and
mov
dec
loopne
push
pop
add
mov
ja
in
jb
add
lcall
outsl
gs
jp
or
es
and
loopne
ss
xor
cmp
mov
add
dec
jp
lods
or
in
insb
pop
xchg
push
fs
jle
mov
call
sbb
xor
and
rcl
push
push
lods
xor
sub
loop
test
ret
stc
sbb
rcl
cmp
and
movsb
incl
add
xchg
fdivs
sbb
mov
xchg
lea
mov
cmp
lods
inc
xchg
jecxz
add
leave
orb
dec
decl
inc
xchg
sbb
inc
inc
stos
lods
xor
pusha
je
dec
in
in
es
pop
jb
sbb
test
imul
lcall
leave
jae
sbb
das
sub
vmread
sbb
das
add
decl
pop
addr16
mov
pop
cli
jp
sbb
imul
mov
shlb
ljmp
cmp
xor
mov
fisubs
imull
je
test
outsb
sbb
je
fmul
hlt
push
pop
add
pop
xor
int3
fs
mov
mov
loopne
and
lds
mov
mov
jbe
subb
push
lcall
mov
dec
daa
lock
sub
lea
push
or
dec
aad
mov
into
hlt
in
negb
cmp
shlb
sahf
cs
lods
adc
outsb
or
enter
jg
mov
push
rorl
movsb
call
scas
pop
clc
pop
sub
ret
mov
cmp
push
and
or
scas
aam
shll
ret
stc
es
mov
push
mov
pushl
dec
mov
cmc
ret
xchg
push
lret
bound
sbb
rcr
jg
into
jg
fstps
fdivrs
call
jne
dec
outsb
cld
push
imul
test
add
mov
sub
jg
pushl
xor
inc
jle
adc
mov
cmp
lret
pusha
mov
jg
insl
mov
inc
lds
fstpt
push
mov
fstpt
jg
cmp
mov
xchg
or
cld
cmp
and
fisubl
push
inc
call
insb
mov
incl
call
sar
cmc
pop
and
cmpsb
xchg
add
fcoms
and
nop
scas
sub
cli
movsl
xor
in
int
mov
idivb
insb
lcall
call
xchg
mov
jae
jb
jne
push
push
cmc
mov
xchg
mov
xchg
pop
rep
inc
aaa
cld
call
inc
out
cmp
scas
jo
xchg
fstp
or
lods
stc
push
push
stos
xlat
test
incl
pop
mov
lds
cmp
jmp
fwait
sub
in
imul
adc
push
sub
sub
iret
mov
mov
lock
push
push
dec
pop
movsb
dec
mov
add
movsl
push
mov
xchg
inc
lret
push
fsub
pop
pop
decl
lahf
push
pop
test
lods
mov
ret
lds
fimuls
aas
orb
fcomip
sbb
jg
call
add
or
and
xchg
cmc
aam
sarb
dec
cmc
sub
scas
cli
jns
pop
mov
insb
and
adc
pop
cmp
and
mov
or
jmp
inc
aad
jbe
and
xchg
scas
sahf
adc
lock
das
cli
and
dec
mov
sbb
movsl
lock
dec
cld
ds
adc
sbb
pushf
stc
aaa
test
call
cld
mov
dec
pop
cmp
lods
inc
into
into
sbb
loop
jmp
adc
push
inc
insl
imul
dec
lret
adc
mov
xor
incl
je
scas
in
xchg
xor
out
push
xchg
xchg
arpl
mov
decl
js
sbb
insl
repz
or
push
arpl
cmpsb
fimull
insb
push
ja
arpl
sub
out
cli
call
push
mov
xchg
xor
adc
mov
lock
mov
fnsave
out
rep
mov
daa
or
mov
nop
cmp
in
enter
push
dec
sbb
and
pop
jge
cmp
rcrb
sbb
scas
imul
subl
lahf
int
fdivl
lods
push
enter
popa
std
jle
pushl
lret
xchg
cmp
xchg
pusha
dec
dec
and
sbb
pushl
fwait
mov
insb
jne
out
rorl
inc
xchg
out
cmpsb
cmp
cmp
cmp
ljmp
clc
sub
mov
in
lret
fcoml
imul
fimull
cmpsl
lods
xchg
in
bound
adc
pop
pop
push
insl
inc
bound
lahf
mov
lcall
out
inc
aam
daa
jl
popf
adc
sub
pop
int3
inc
jnp
mov
mov
fisubrs
lret
pop
xchg
jo
test
sub
xor
jp
or
add
call
add
adc
movsl
enter
xchg
popf
jg
test
loopne
mov
mov
mov
roll
jg
sbb
xchg
aad
sub
aam
sbb
lcall
cmp
call
loopne
mov
bound
sub
cmpsl
mov
add
sbb
mov
call
orb
cmc
mov
daa
dec
jp
mov
pusha
xchg
aaa
pop
in
hlt
add
jg
pushl
das
cmp
dec
dec
mov
push
pop
mov
and
add
xor
adc
ret
adc
mov
mov
cmp
out
xor
inc
out
sbb
mov
lcall
jecxz
jnp
testl
pushl
pop
and
add
sbb
add
test
cmp
xchg
pop
std
incl
fildl
dec
sbb
int3
jle
in
scas
xchg
divb
cmpsl
sub
icebp
pop
cmc
out
sub
dec
add
xchg
iret
mov
and
mov
ret
movsl
loop
mov
xor
in
mov
jbe
cmp
adc
imul
sub
into
mov
pop
cmp
aas
push
jg
push
mov
xchg
cmp
adc
pop
int3
mov
int
add
mov
cwtl
out
sub
inc
mov
cmpsb
jp
dec
aam
andb
xor
int
pop
pop
and
les
mov
popf
add
and
out
add
jl
dec
fbstp
xor
cmp
stc
push
add
pushl
jge
cld
enter
sahf
loope
pshufw
loope
jae
xlat
push
clc
ds
nop
add
jl
ljmp
push
shlb
incl
aas
adc
dec
std
xor
sub
mov
lods
push
pop
push
lods
adc
incl
cmp
mov
insl
xchg
lahf
sbb
or
xor
jns
int
js
das
xor
insl
test
mov
xor
mov
sub
mov
mov
addr16
fbld
adc
vmovhpd
jl
xchg
mov
sahf
sahf
xor
lcall
ret
or
or
inc
push
adc
shrl
jb
fstpl
mov
std
pushf
bound
decl
or
adc
movsl
adc
ljmp
inc
mov
cmpsb
xlat
les
call
dec
jg
pop
jnp
jp
jg
ja
sub
sbb
imul
xor
mov
loopne
xlat
int3
call
shlb
push
pop
dec
imul
adc
dec
out
mov
arpl
gs
sbb
add
jg
sbb
mov
jae
cmpsl
mov
xor
mov
mov
rcrb
repnz
out
mov
xlat
inc
cmp
mov
push
cs
xor
jmp
pop
add
jbe
jnp
data16
mov
pop
and
mov
dec
push
subl
clc
flds
ret
mov
pushf
mov
jl
stos
xchg
adc
adc
ljmp
jmp
into
push
sbbb
adc
xchg
test
sbb
mov
or
jmp
cli
lea
fsubrs
sub
jmp
out
push
cld
ljmp
push
stc
enter
movsl
cmc
pop
pop
jb
test
call
enter
pop
lret
lods
inc
popf
aam
ret
adc
jl
dec
fmull
push
pop
adc
call
dec
imul
mov
xchg
jp
out
jge
push
fst
outsl
push
sub
movsb
aam
inc
cmp
repz
sub
jo
xchg
dec
mov
mov
arpl
push
in
xchg
xor
dec
ret
xchg
jns
dec
out
inc
insb
fcmovu
repz
popa
popf
xchg
call
pop
fidivs
mov
jo
inc
pushl
xor
or
lods
cmpsl
adc
xchg
insl
faddl
mov
and
loope
jb
flds
jmp
out
xchg
popf
inc
xor
sbb
stos
repz
mov
dec
adc
adc
into
in
sub
inc
lock
xor
and
mov
incl
popf
stos
cmp
out
mov
test
jae
add
mov
and
jl
mov
dec
shlb
dec
sbbb
sbb
or
xlat
sub
rclb
mov
sbb
mov
inc
popa
sti
mov
repnz
mov
push
mov
xor
leave
fildll
call
bound
cmp
loopne
popa
pop
jmp
mov
daa
sbb
mov
push
cmpsl
pushf
lock
loop
pop
jne
xchg
in
xchg
adc
test
cmp
dec
push
jne
xchg
mov
subl
fwait
push
insl
nop
fcom
pop
stos
mov
sub
push
cmp
jnp
mov
dec
outsb
popa
das
mov
pop
sbb
xlat
sarb
idivl
nop
mov
test
dec
test
jno
dec
push
sub
cmp
push
enter
jmp
nop
divb
adc
out
xor
or
sub
movsb
in
outsb
inc
inc
xchg
and
lods
xchg
jmp
cs
or
incl
or
jg
scas
dec
mov
jp
daa
xlat
add
ljmp
inc
push
and
pushf
inc
sbb
dec
add
repnz
inc
sub
or
jns
mov
sub
ja
xchg
xor
ljmp
lods
dec
push
test
mov
addb
fdivrp
loope
inc
repnz
pop
mov
es
mov
stc
sub
lret
shll
aam
xchg
lcall
popf
les
outsl
lods
xor
sbb
enter
push
or
xlat
lahf
sub
add
call
sub
shrb
or
fs
inc
out
ret
and
xor
mov
jae
int3
xchg
mov
loop
jo
inc
repz
jmp
sub
pop
jmp
mov
insb
add
push
push
je
xchg
pusha
ljmp
rcl
cmp
inc
mov
add
jno
imul
cmc
adc
sbb
out
insb
inc
jmp
inc
adc
cmp
scas
or
inc
mov
int3
outsb
jae
push
fisubs
ljmp
push
add
mov
xlat
or
insl
sbbl
repnz
sub
out
imul
sti
mov
cli
inc
pop
repz
cmp
push
icebp
es
cmp
xchg
adc
lcall
daa
push
cmp
push
jge
adc
lcall
mov
xchg
pusha
push
shl
inc
ffree
imul
inc
cli
fadds
lcall
pusha
pop
scas
push
testb
decl
in
daa
jle
push
leave
mov
popf
aas
mov
shlb
jbe
xchg
data16
fwait
jb
incl
mov
dec
negl
mov
cwtl
cmpsl
inc
test
dec
adc
decl
push
inc
decl
lock
push
ret
lahf
cmc
mov
mov
xor
ljmp
push
adc
add
pop
ficomps
push
mov
sbb
mov
fs
xor
clc
fmulp
or
out
jecxz,pn
incb
pop
sub
jl
xorl
mov
or
cmp
mov
das
ret
out
jle
or
in
cmpsl
fwait
mov
jmp
jecxz
dec
mov
subl
inc
xor
je
fisubl
push
xchg
imul
cli
arpl
or
push
jae
popf
es
ljmp
cli
and
orb
adc
push
sub
mov
je
inc
out
ljmp
push
push
xlat
sti
jl
or
shll
lock
push
dec
pop
lcall
mov
jbe
or
pop
outsl
xchg
ljmp
scas
sub
test
outsl
clc
mov
xchg
sbb
push
jmp
cmp
out
xchg
push
jecxz
dec
xchg
push
ror
and
sub
leave
and
jno
sarl
dec
xchg
or
push
ljmp
lods
inc
mov
arpl
mov
jno
push
out
sahf
inc
js
and
ljmp
leave
mov
jbe
shlb
mov
insb
mov
sub
mov
call
mov
sbb
je
stc
mov
daa
faddl
aad
fwait
sti
jg
mov
dec
adc
cmp
sti
pop
pop
xchg
in
add
jg
push
inc
push
insb
fcmovu
adc
gs
std
stos
ss
out
and
orb
imull
or
incl
lds
push
mov
cli
push
popf
in
mov
push
cli
pop
mov
mov
or
out
ljmp
sbb
push
add
arpl
dec
inc
fists
loope
movsl
movntps
xor
push
or
mov
push
in
and
and
out
mov
ljmp
mov
orl
push
fwait
iret
dec
ljmp
push
add
iret
adc
mov
incl
ja,pn
in
xor
or
mov
cmp
cltd
mov
push
pushl
repnz
adc
shll
mov
mov
xor
xchg
js
fnstcw
push
fldenv
dec
fcomps
pushf
test
or
xchg
inc
jne
pushf
enter
decl
mulb
jne
popf
fidivrs
sti
push
add
xor
sub
mov
mov
sub
xlat
cmc
sbb
movsb
cli
fidivl
jbe
pop
jnp
xor
mov
fcoml
cld
pop
sbb
sbb
test
pushl
inc
push
hlt
mov
in
outsb
fcompl
xor
pop
subb
mov
lcall
call
in
rep
dec
outsb
mov
rol
push
mov
arpl
cmpsb
aas
lcall
in
ret
jne
fistps
dec
dec
inc
and
test
pop
stos
frstor
ret
add
inc
arpl
int
ficompl
xchg
ja
aad
outsb
inc
pop
std
inc
cmpl
lcall
inc
or
lods
cmpsl
mov
adc
jge
jne
mov
mov
dec
loop
shl
cwtl
and
push
loope
cmp
lods
decl
out
xor
and
xchg
xchg
daa
pop
popf
inc
arpl
decl
jae
mov
xor
mov
or
int
mov
fst
jle
js
jo
dec
or
dec
inc
sub
sub
jb
nop
dec
mov
incl
mov
xchg
loopne
popa
push
mov
push
sbbb
shr
add
clc
call
xor
sbb
nop
jnp
and
inc
mov
les
call
xchg
test
in
mov
jl
fcoms
pop
insl
push
jecxz
mov
ljmp
mov
std
lea
mov
fldenv
fistl
ljmp
push
lret
imul
out
js
fiadds
sarb
cmp
mov
not
mov
mov
fistl
repz
sahf
mov
jo
mov
imul
mov
xor
add
inc
mov
jae
jae
xchg
cs
push
jbe
xor
add
cld
mov
xor
loop
sub
mov
sbb
je
sbb
cmp
fcomip
sbb
xor
cwtl
cmp
push
pusha
xchg
sub
jp
rclb
outsl
adc
xchg
jbe
mov
arpl
insb
ret
sbb
mov
cmpsb
inc
loope
lcall
or
ss
cli
ds
jmp
mov
and
xchg
sub
shrl
in
add
bnd
add
jne
push
lcall
int
in
repnz
clc
add
dec
mov
push
push
jno
xor
adc
cmpsl
out
mov
divl
xchg
pop
jle
mov
ljmp
inc
mov
sbb
test
daa
rcrb
mov
pop
pop
gs
adc
clc
decl
cli
pusha
or
gs
in
addr16
push
cmpsb
mov
mov
inc
push
rolb
sbb
sahf
mov
and
push
cmpl
mov
int
fisttpll
cbtw
cmp
xor
sbb
pop
and
int3
popf
lock
clc
sub
sbb
inc
fcompl
xchg
cmpsl
imul
movsb
idivl
dec
int3
jb
and
add
out
addb
nop
xchg
push
sarb
inc
movsl
sar
call
inc
pop
inc
jmp
cmpsl
jl
aad
or
sub
and
add
fs
pusha
sub
fbstp
cmp
stos
push
or
in
xchg
sub
loope
mov
lea
das
jne
pushl
jno
fwait
pop
add
dec
or
loopne
call
mov
aad
jmp
sahf
es
sar
inc
cmpsl
xor
xor
pop
mov
adc
or
pop
js
push
sub
sbb
fwait
in
popa
mov
cmp
test
incl
sbb
push
inc
int3
sbb
mov
mov
in
call
and
mov
idivl
rcll
fidivl
mov
fs
enter
lret
call
aas
call
cltd
aam
repz
lahf
cli
fnstenv
popf
inc
incl
idivl
bound
sbb
sub
adc
decl
xor
scas
push
adc
dec
push
push
clc
lcall
mov
incl
out
mov
pusha
out
mov
popf
and
leave
clc
push
xor
insb
jnp
stos
mov
pop
nop
int3
aas
cld
lds
mov
or
out
mov
lcall
fisttpll
gs
inc
dec
sbb
jmp
mov
dec
push
test
add
mov
jmp
push
test
in
movsb
pop
fmull
hlt
or
mov
xchg
in
inc
int
jns
pushl
loope
cmp
call
xchg
add
jp
fwait
pop
addr16
in
in
cwtl
subb
movsl
sti
lcall
mov
rclb
xor
jae
clc
mov
and
xchg
sbb
sar
jg
adc
mov
sbb
jg
and
xor
cmpsb
jg
ljmp
sbb
mov
pop
xchg
sti
jmp
data16
gs
lcall
jmp
out
lods
add
push
orl
mov
adc
and
push
test
aad
push
and
sarb
cmc
or
rolb
lcall
pop
mov
sub
push
pop
cwtl
add
dec
cmp
popf
fnsave
iret
xchg
in
jle
out
adc
loop
movsb
ds
mov
pop
sub
pop
stos
pop
out
les
clc
lcall
insb
or
fisubl
out
sbbb
lret
cmp
call
lock
test
pop
sub
mov
xchg
and
dec
cmp
loopne
mov
cmp
test
inc
mov
mov
dec
js
ljmp
stc
inc
out
test
mov
rcll
pop
or
mov
sbb
in
sarl
in
mov
cmp
inc
push
stos
mov
push
jmp
mov
sahf
stos
mov
hlt
mov
sbb
call
loope
lcall
xchg
stos
mov
ja
mov
mov
stos
in
and
jmp
xchg
xor
fnstsw
call
dec
dec
cmpsl
cmp
add
jmp
fcmovnbe
mov
divl
jo
ror
les
inc
cmp
lock
xor
jg
pushl
mov
popf
test
mov
push
sbb
or
clc
idivl
lcall
push
and
sbb
icebp
dec
push
fdivl
mov
inc
mov
xor
daa
xor
pushf
xchg
mov
in
and
or
insl
test
cmpsl
mov
add
lcall
add
xchg
cltd
xchg
inc
push
shr
pop
inc
clc
and
incl
data16
fnstsw
popa
sub
xchg
sbbb
movsl
jl
cwtl
adc
or
std
bndstx
jmp
jmp
rorl
push
cld
add
or
and
jbe
push
push
cmp
sbb
jmp
insb
inc
das
daa
icebp
adc
push
pop
insb
sub
lret
ljmp
mov
outsl
and
repz
pop
sbb
filds
sti
cltd
aaa
leave
xchg
cmpsb
mov
dec
addr16
insl
xor
in
dec
mov
test
jmp
outsb
repnz
lds
push
aad
dec
fisubrs
pushl
test
pop
dec
cmp
aad
pop
addr16
mov
fwait
outsb
adc
or
xor
lcall
push
sub
xor
jle
out
outsb
lods
and
jo
hlt
movsl
aad
fildl
add
pusha
cli
jecxz
add
fcomps
sub
mov
scas
insl
out
lret
push
in
fcomp
out
lock
push
add
nop
mov
add
jg
decl
pop
pop
xchg
fstpt
movsb
sbb
repz
lds
gs
jmp
cmpsb
loope
add
pop
inc
addb
xor
sub
mov
xchg
fistl
xor
add
ljmp
or
sub
stos
jg
mov
lret
jp
dec
mov
stos
pop
pop
ret
sub
incl
or
push
gs
popa
and
mov
and
call
pop
jnp
pushf
jge
or
dec
adc
mov
fadds
ss
sar
decl
push
out
into
ljmp
shlb
cmp
mov
mov
shl
jbe
sbb
xor
insl
xchg
pop
mov
cwtl
pusha
stos
imul
call
xchg
imul
and
pop
xor
lahf
jo
jns
pop
lret
gs
xchg
inc
int
incl
ret
sub
popf
dec
adcl
mov
dec
inc
leave
lea
call
xchg
jbe
sbb
fs
shl
cs
mov
addr16
xor
push
decl
lock
lock
jnp
dec
pop
inc
loopne
stos
lds
test
mov
mov
stos
add
pop
push
in
test
rcrl
jecxz
dec
inc
addl
test
scas
xor
and
fsubrl
rcr
notb
cmp
push
das
or
gs
mov
sar
lcall
or
inc
jmp
add
icebp
loope
jmp
int
addr16
mov
andb
shrl
mov
dec
xor
xchg
ja
inc
js
std
ret
mov
xor
outsb
pop
xchg
inc
es
dec
stos
pop
into
das
fisubl
push
nop
loop
push
pop
ret
or
xor
sbb
dec
int
inc
mov
cmc
fnsave
icebp
jl
scas
lds
shll
adc
sub
xchg
pop
sub
decl
jmp
outsl
mov
hlt
and
cli
out
sahf
jbe
aam
mov
or
bound
call
pop
aas
mov
or
repnz
cmp
aas
std
adc
loop
jg
jmp
jl
cmp
pop
sbb
cmp
dec
xchg
ljmp
cmp
mov
jne
adc
add
repz
js
fs
incl
inc
je
in
shlb
outsl
stos
scas
mov
sbb
jecxz
into
lcall
out
cmp
mulb
pushl
addr16
filds
cwtl
bound
mov
decb
sub
nop
xchg
adc
rclb
xor
sub
bound
ret
sub
repz
lret
call
mov
call
cmp
xchg
jo
push
mov
mov
xchg
jge
mov
jnp
sbb
add
and
dec
dec
push
sub
mov
xchg
notl
incl
gs
xlat
test
mov
cmp
push
push
ljmp
pop
pop
lods
fcomip
mov
js
push
xchg
xor
push
inc
mov
enter
sub
pop
mov
out
scas
sub
into
test
cmp
and
push
inc
pop
cmp
test
dec
and
xchg
popl
mov
add
call
jg
shrd
out
into
outsb
pop
inc
push
int
stos
cwtl
xor
jno
out
test
int
call
leave
sarl
inc
inc
xchg
out
adc
cwtl
repnz
push
fisubrl
js
pop
out
mov
jle
dec
xchg
out
lret
js
cmp
sub
fwait
enter
mull
les
sar
decl
enter
inc
int
mov
out
daa
into
add
xlat
loop
jg
dec
push
inc
inc
mov
jns
mov
mov
repnz
xor
shlb
ljmp
jmp
mov
inc
sahf
sub
sub
cwtl
pop
test
mov
aaa
ret
mov
cmp
push
mov
ljmp
pop
clc
xchg
imul
pop
or
jae
lds
cs
pop
mov
decl
xchg
aas
pop
sub
fwait
cmp
pop
xchg
xor
pushf
repz
xlat
mov
inc
jns
ljmp
jnp
lahf
pop
or
sub
loop
pinsrw
lret
pushl
mov
scas
movsb
lods
sbb
ror
sbb
dec
lahf
jmp
mov
ljmp
insl
outsl
nop
mov
add
push
push
xor
fcmove
lcall
dec
insb
outsl
ret
imul
jmp
je
adc
mov
xchg
les
or
movsb
in
pop
jg
mov
push
and
add
scas
scas
adc
push
inc
adc
ds
dec
popa
push
int3
nop
push
add
sbbl
jg
clc
push
mov
jg
sub
subb
xchg
imul
or
lods
pop
bound
rol
xchg
cmc
push
in
mov
adc
add
cld
stc
jp
stos
icebp
mov
das
xor
test
cli
decl
ret
cmp
fldcw
iret
loopne
jo
push
popf
sub
or
inc
aaa
clc
cmpsl
aaa
mov
pushf
push
cwtl
insb
ret
subl
jg
repnz
dec
rcl
nop
loop
sti
push
pushf
mov
add
adc
or
jmp
mov
loopne
js
imul
jecxz
in
ret
not
fcmovbe
jecxz
loope
cmpsl
push
push
jmp
cmp
fcomip
jmp
push
imul
jmp
xchg
scas
ss
push
int3
and
idiv
ljmp
xchg
dec
mov
xlat
repnz
cltd
sub
dec
sub
and
addr16
push
dec
lcall
cmp
sahf
or
daa
fnstcw
xchg
mov
lret
add
stos
bound
test
call
fxch
fldl
or
outsb
jp
xchg
pop
mov
into
sbb
xor
sbb
lcall
outsb
pop
push
dec
sbb
add
push
je
and
fwait
mov
mov
ljmp
sub
cs
mov
out
jae
adc
dec
or
sbb
jno
sub
ljmp
cmp
lcall
jl
mov
mov
jl
ljmp
mov
and
cmpsl
sub
jns
mov
lea
movsl
sbb
lds
inc
aam
and
sahf
push
inc
insl
add
sbb
jnp
dec
out
cmpsb
je
lret
mov
in
lcall
push
xor
loope
incl
aaa
std
and
movsb
add
pusha
andb
inc
xor
loope
add
fildll
dec
jg
jp
enter
or
mov
outsb
cld
lcall
jne
dec
scas
jns
shll
bound
xor
pop
das
jae
cli
adc
nop
inc
fadds
mov
sbb
sub
pop
xor
jae
and
sbb
dec
jmp
out
inc
jle
sub
mov
insb
cmpsl
lock
pop
out
jns
cmp
decl
in
push
xchg
mov
jge
lretw
mov
mov
movsl
mov
sub
or
insl
shll
pop
shr
push
sub
decl
daa
ja
mov
mov
add
pop
mov
sub
aas
cli
les
xchg
sub
jno
sbb
pushf
iret
inc
sub
int
or
jg
xor
call
jo
dec
int
js
sub
sti
cmc
fwait
adc
push
cmp
lcall
push
or
sbb
adc
mov
pop
pop
add
add
lock
pop
inc
cmc
lcall
push
unpckhps
cmc
roll
inc
xchg
cwtl
orb
adc
lcall
sbb
pop
bound
les
and
int
push
insl
pop
test
ljmp
mov
jmp
into
aas
outsl
pop
push
seto
pop
cmpsl
pop
insb
pop
inc
outsl
icebp
loop
mov
out
push
aaa
aaa
mov
sar
lock
pop
and
shrb
sarb
out
mov
mov
lcall
lock
cmp
in
iret
xchg
adc
xchg
cmp
pop
jne
das
cwtl
imul
ljmp
add
push
adc
inc
js
xor
pushf
roll
leave
mov
xlat
xorb
xlat
mov
mov
sbb
rorb
jg
add
jge
mov
rorl
mov
cltd
mov
cmp
fcomip
incl
mov
repnz
js
sbb
gs
mov
pushl
cld
arpl
mov
lods
scas
pop
jb
pop
xchg
stc
push
jle
xchg
inc
test
mov
incl
mov
jno
dec
sbb
rolb
push
lahf
xchg
add
push
hlt
pushf
inc
push
inc
adc
lret
cmp
push
jl
mov
fwait
add
incl
mov
clc
dec
ret
adc
shrb
inc
adc
mov
call
in
xchg
pop
xchg
add
hlt
lock
jno
xor
ret
fstpl
sbb
push
arpl
ljmp
pop
push
ljmp
sub
sbb
xchg
test
xorb
and
mov
lds
sbb
sub
test
inc
and
pop
mov
jmp
popa
test
cltd
insl
pop
push
mov
xchg
push
test
pop
fdivrl
inc
mov
push
inc
sbbl
gs
shll
mov
dec
loope
call
push
cmp
mov
icebp
ds
mov
pop
test
pop
imul
ficoml
negl
popf
sub
pushl
fs
add
nop
pop
cmpsb
jp
cmpsb
lods
xchg
mov
dec
cmp
dec
xchg
aaa
mov
std
jl
or
std
jne
pop
inc
loopne
cmp
ss
mull
sub
call
add
jle
movnti
pop
mov
jle
sti
cwtl
stos
into
add
cmp
dec
sub
imul
or
jge
sbb
mov
mov
decl
mulb
jbe
fnstsw
push
push
adc
ds
sub
cmp
out
push
pop
gs
xor
fcmovne
mov
cld
xor
mov
adc
mov
dec
pop
or
pop
xlat
jnp
imul
mov
imul
jnp
adc
pop
dec
in
ret
mov
incl
mov
sub
cltd
jae
lock
mov
pushl
cli
div
or
es
enter
mov
loopne
xlat
adc
mov
ror
cmp
decl
shll
jg
int3
pop
insb
push
inc
negb
dec
std
les
je
cli
ror
out
sub
hlt
incl
in
ljmp
fucomip
pop
push
outsl
xor
je
adc
mov
sbb
xchg
inc
xchg
or
sub
pop
scas
mov
push
psubb
sahf
cmp
repnz
imul
lock
shl
pushl
sub
mov
mov
jmp
outsl
test
fs
in
repz
incl
mov
shlb
leave
pop
ss
icebp
or
jmp
mov
jge
jge
mov
xor
xchg
push
lods
aaa
je
clc
js
mov
les
and
inc
rcll
xor
outsb
jno
xchg
xchg
lock
jbe
xchg
lods
test
or
sub
mov
sar
decl
cwtl
jecxz
lods
pop
pop
push
rclb
ret
xor
mov
cmp
mov
dec
dec
jmp
push
es
cs
push
pop
and
push
int
dec
hlt
jbe
fldl
mov
push
outsl
dec
movsb
in
imul
sbb
gs
imul
pushl
cld
mov
fs
mov
push
or
sbbb
dec
dec
xchg
xchg
sbb
lcall
fwait
mov
sub
add
cli
sbb
enter
xchg
pop
js
incl
sub
mov
dec
pop
sbbb
xor
push
mov
in
fistpl
jmp
lcall
testl
sbb
mov
fmulp
shr
rolb
addr16
fldenv
jecxz
push
jle
fnstcw
mov
jge
mov
call
cld
jae
ljmp
pushl
sub
dec
insl
or
fdivr
incl
mov
ss
push
xor
dec
push
loopne
addl
sub
lcall
mov
add
sbb
popf
push
je
popa
or
enter
lock
dec
dec
and
leave
pop
xchg
push
sbb
mov
mov
sarb
daa
daa
lcall
mov
jne
scas
push
sub
adc
mul
test
testl
std
sbb
scas
xchg
mov
fcomps
movsb
cs
and
adc
call
cmc
jl
fdivrl
sub
push
std
xchg
cmc
sub
and
mov
popa
lret
rcrl
lcall
xorb
into
push
cmp
repnz
lcall
das
into
inc
jmp
push
xchg
mov
sbb
xor
loop
inc
hlt
loopne
lret
mov
incl
mov
xchg
pop
mov
test
shll
inc
adc
mov
xchg
add
cwtl
fs
mov
ficomps
pusha
cmp
or
or
icebp
shr
ljmp
leave
movsb
fcoms
fidivrs
sbb
dec
mov
outsb
test
icebp
fadd
js
jmp
cmp
movsb
and
jle
dec
imul
mov
shl
in
sub
repz
cld
dec
push
xchg
pushl
lret
jo
pop
inc
or
movsl
adc
mov
sub
or
sahf
inc
push
jmp
in
repnz
clc
inc
cmp
cmp
dec
aaa
jl
roll
cmp
pop
data16
in
incl
arpl
inc
adc
lret
cmp
jmp
jmp
xchg
add
jge
xchg
dec
call
push
push
cmp
int
cmpl
or
popa
data16
xor
lcall
fldt
dec
fwait
pop
sub
incl
push
cmp
sarb
mov
jmp
rolb
xchg
xor
nop
and
enter
cs
repnz
iret
mov
dec
lcall
test
incl
xchg
sub
pop
add
inc
inc
dec
or
dec
iret
aaa
push
orl
and
cltd
lcall
push
ss
cmp
sub
leave
popf
push
mov
or
test
mov
decl
iret
sub
loope
or
pop
xchg
sbb
bound
ja
mov
xchg
mov
movsb
es
lret
pushl
sbb
sti
pop
aam
adc
iret
mov
pop
stos
incl
sbb
inc
adc
enter
jns
fcmove
sahf
jae
leave
test
inc
lret
xor
popa
fwait
mov
pop
push
pop
pop
jne
or
xchg
cmpsl
lea
cmc
imul
imul
jb
in
cmp
lret
push
xchg
insl
mov
lret
dec
cmpsb
push
inc
call
xchg
fcompl
jge
pushf
xorl
cld
xchg
sbb
sbb
rorb
and
mov
popa
iret
adc
ljmp
add
cmp
in
jp
test
xor
push
imul
jmp
mov
pop
xchg
sbb
jg
stos
fiaddl
jmp
and
jmp
js
xchg
cwtl
sbb
stc
xchg
loopne
stc
notl
pop
or
push
lret
mov
sets
pushl
sbb
xor
jb
cwtl
std
cmp
pop
xor
ja
push
ljmp
adcl
cmp
pop
div
enter
cpuid
addr16
push
lcall
cmp
cmp
mov
aas
imul
push
loop
push
stc
das
pushl
pop
xchg
std
mov
sbb
mov
mov
pop
loop
push
int
movsl
pop
sbb
call
outsb
dec
lahf
loopne
and
je
imul
je
dec
cmpsb
mov
aam
push
jno
jge
adc
sub
cld
cmp
insl
sbb
test
push
mov
inc
pop
sahf
jno
pop
aas
push
pop
push
sbb
movsb
outsb
xchg
lcall
sbb
subb
fstpl
fldl
ja
outsl
lcall
jns
or
cmp
jne
dec
pextrw
push
mov
sbb
mov
in
ljmp
inc
pop
iret
aas
movsl
or
sbbl
sbb
ljmp
cmc
aad
ficoms
leave
imul
call
fs
jbe
jne
movsb
push
fcompl
les
clc
aam
ret
sub
dec
or
xchg
divl
adc
push
sahf
aas
mov
xchg
in
inc
aad
lock
decl
jns
sti
test
lock
cmp
mov
cli
lds
xchg
jg
sub
cmp
fiaddl
ss
jbe,pt
stc
cmpsl
inc
cld
xchg
aaa
stc
pop
add
cmp
jae
cmp
jp
lods
aaa
cs
ljmp
insl
mov
mov
mov
jmp
fldcw
notb
dec
pushl
mov
mov
ret
rol
cmp
sarl
call
or
cmp
outsb
mov
mov
and
and
lcall
inc
mov
pop
and
adc
pop
sub
cld
out
pop
aas
cmpb
loope
in
mov
jge
cwtl
and
rolb
imull
imul
xchg
aad
push
inc
xchg
lcall
ljmp
rep
mov
mov
fstpt
push
pusha
sub
dec
mov
incl
aad
mov
and
in
mov
inc
xchg
sti
push
sbb
stos
ljmp
inc
adc
pop
cmp
shlb
testl
mov
mov
mov
add
add
cwtl
aaa
and
outsl
cli
jg
xor
cmpsb
in
insb
pop
adc
sbb
adc
fs
inc
ret
mov
decl
push
aad
xchg
movsl
add
jmp
andl
sbb
jl
and
jg
or
movsl
cwtl
fcomp
aaa
lcall
inc
mov
icebp
outsb
in
xlat
ds
mov
xchg
stos
dec
lahf
mov
jg
jmp
xchg
clc
jle
cld
je
dec
mulb
mov
bound
dec
inc
movsb
lahf
jmp
out
inc
push
andnps
insl
mov
push
ss
aad
pushf
popa
rcrb
inc
cli
in
ret
pop
stos
pop
je
cmp
inc
mov
push
lods
cwtl
dec
je
stos
dec
pop
pop
in
pop
jg
jl
je
jmp
pop
push
addr16
lods
andb
les
leave
in
and
sub
mov
leave
pop
cli
loopne
dec
stos
sbb
dec
in
ret
dec
xlat
sub
cli
ljmp
lahf
repnz
push
faddl
pop
push
jbe
xlat
nop
and
push
or
incl
or
int3
or
adcb
cmpsl
mov
data16
cmc
dec
push
sub
xor
decl
leave
lock
jmp
in
not
fcoms
popf
sub
jnp
and
xor
ljmp
clc
jmp
push
lret
fs
xor
push
adc
stc
push
loope
pop
lret
je
jmp
fmulp
stc
je
loop
icebp
repnz
lods
int
orb
stc
arpl
rorb
jle
fcomip
lcall
movsb
movsb
dec
js
push
shrl
insb
shrb
lret
movsl
fsubrs
sbb
incl
pop
mov
xchg
leave
push
hlt
sbb
mov
adc
mov
js
xor
add
inc
mov
lods
stos
sub
cmp
adc
repz
das
inc
xor
xor
ljmp
lcall
sub
jbe
enter
jae
aam
bound
decl
mov
insb
sti
mov
xorl
std
mov
pop
lcall
iret
dec
and
push
pop
shrb
call
scas
xor
sbb
sbb
adc
sti
sti
mov
incl
or
lea
pop
adc
test
insl
aam
xchg
test
dec
pop
outsl
mov
pushf
imul
daa
fcmovnu
mov
filds
cmpsb
loopne
jl
dec
add
arpl
sahf
mov
pop
incl
push
ret
inc
lods
lods
jge
shll
enter
iret
mov
aad
inc
popa
out
ret
cmp
test
or
mov
cmp
dec
cmp
ljmp
add
frndint
mov
lcall
and
lods
fdivrp
es
pushl
mov
ret
mov
mov
add
fcompl
jg
lcall
pop
mov
cmp
cmp
xlat
dec
mov
xchg
js
ret
shlb
decb
std
fildll
rorb
push
cmpsl
sbb
add
jg
mov
pop
out
xlat
outsl
pop
push
inc
fnsave
push
and
call
cmpl
add
ljmp
mov
mov
aaa
test
dec
decl
push
sbb
rclb
addr16
popa
test
incl
mov
js
icebp
sbb
insb
xchg
mov
or
setnp
in
jge
jl
ljmp
lcall
add
dec
mov
mov
inc
push
loope
mov
dec
fwait
ret
iret
fisubl
imul
aas
jecxz
fdivr
arpl
lcall
cld
pushl
popf
movsl
or
inc
repz
daa
movsb
inc
bound
xchg
mov
in
pushf
shrb
pop
ljmp
cmpsl
nop
jno
popa
stc
dec
xchg
mov
negl
decl
xor
add
mov
push
ret
push
insb
hlt
jmp
lea
sbb
call
sbb
jno
loop
xor
mov
insb
jg
lcall
icebp
mov
clc
mov
repz
in
pop
mov
incl
ret
out
arpl
insb
mov
mov
cmp
adc
lret
arpl
jg
stc
fs
lcall
inc
fdivl
lahf
stos
outsb
sbb
fwait
push
call
lods
jnp
jge
cli
ja
mov
repz
mov
push
mov
sbb
mov
ljmp
cmp
lret
mov
xor
pop
dec
fimuls
lret
mov
inc
cmpsb
jle
mov
call
sbb
xchg
stos
or
lret
xchg
mov
call
dec
cwtl
lods
pop
dec
in
scas
mov
rcll
xchg
mov
sbb
imul
stos
iret
and
jnp
dec
push
test
or
mov
jp
incl
lods
sub
fisttpll
inc
jmp
popf
js
out
nop
pop
scas
cmp
mov
in
or
stc
out
jecxz
xchg
fwait
adc
into
mov
sbb
jnp
cmp
in
pop
test
das
xor
stc
adc
sbb
dec
jno
in
xor
decl
adc
dec
pop
sub
push
sbb
pop
cmpsl
ja
cmp
cmp
ja
cmp
lcall
xor
into
sub
js
out
sub
int
test
and
jg
pop
frstor
jle
or
movl
fs
test
ljmp
notb
insb
rcrb
fisubl
iret
and
cld
hlt
jns
add
gs
push
das
roll
push
or
pushl
stc
pop
jmp
cmp
dec
shl
gs
mov
xchg
test
add
ljmp
cltd
mov
cmp
rorl
lahf
xlat
xchg
mov
cmc
rorl
hlt
nop
out
xchg
mov
mov
jmp
test
dec
mov
es
loop
or
fiaddl
andb
cvttps2pi
call
lret
mov
xlat
xor
call
push
in
xor
xor
cltd
es
jecxz
mov
test
adc
sbb
movsb
sahf
jle
or
decl
push
sbb
ljmp
fcomps
mov
mov
inc
cmp
cmp
sar
pop
mov
pushf
pop
scas
dec
cmpsb
decb
fidivs
cmp
xchg
ret
pop
decl
test
int
idivl
outsl
aaa
sub
insl
sub
mov
cli
mov
push
cld
jmp
jns
jnp
push
dec
inc
dec
ss
xchg
lcall
fwait
out
in
test
repnz
jmp
mov
rcrl
jbe
jae
fwait
adcl
mov
insl
xchg
int
verw
mov
jae
cmc
add
push
std
inc
and
fld
ja
mov
and
popf
int
test
enter
dec
loope
jb
mov
lcall
fildl
xchg
mov
sub
fnstcw
rclb
push
cli
xchg
stos
test
pop
stc
mov
loop
daa
imul
push
jbe
jbe
stos
xor
idiv
filds
mov
sbb
insl
es
and
fsubp
xchg
inc
cmc
lcall
int3
mov
call
sub
sahf
lds
jmp
mov
outsl
rcr
or
pop
jnp
pop
icebp
or
dec
fwait
in
cmp
stos
test
ljmp
sti
or
adc
and
das
cs
sub
pop
hlt
ljmp
jno
incb
add
adc
jmp
out
xchg
enter
jmp
jno
ljmp
cli
dec
xor
or
int3
cltd
iret
add
xchg
pop
mov
or
fimull
pushl
popa
xor
xor
sbb
repz
sub
push
xchg
cmpsl
add
das
pop
sub
lcall
fbstp
inc
inc
movsb
sti
add
inc
mov
pop
xchg
pop
mov
movsb
sarl
jae
mov
call
mov
xor
inc
xchg
loope
push
sbb
repnz
clc
jmp
pop
lret
lock
test
outsb
sub
cmp
mov
fimuls
call
les
pop
rclb
pop
nop
and
bswap
push
loop
divb
decl
ret
cli
loopne
dec
cmc
sub
add
mov
xor
fisttpl
pinsrw
lods
fdivr
imul
sub
push
inc
xor
fisttpll
jae
adc
dec
test
mov
out
inc
adc
add
xor
push
or
inc
and
adc
popf
mov
mov
das
cwtl
lcall
push
mov
inc
ja
or
scas
jecxz
insb
mov
call
push
cmpl
out
icebp
ror
adc
pop
cmp
gs
in
mov
les
mov
test
mov
arpl
test
mov
add
pop
sahf
push
iret
push
push
cmovl
add
data16
sbb
sub
pushl
xchg
mov
leave
inc
fsts
mov
xor
adc
inc
repnz
incl
jno
arpl
push
or
lds
in
sub
push
arpl
stos
enter
rclb
mov
cmp
push
push
jb
cmp
push
repnz
mov
fs
push
push
insl
adc
push
rcr
mov
jmp
sub
jge
or
cmp
jmp
add
mov
rcr
sub
and
push
mov
ret
mov
ljmp
repz
ss
sub
jnp
mov
jge
xor
add
xor
jae
repz
decl
fists
xor
fwait
dec
adc
add
mov
xchg
cmp
adc
add
pop
lods
inc
call
pop
xor
stos
je
shl
ljmp
insb
rcll
sbb
repz
pushl
pop
les
out
mov
setp
or
out
jne
aas
fdivrl
pop
mov
in
inc
bound
cmc
frstor
pop
insl
cmp
mov
pushf
inc
push
xchg
loopne
sub
add
push
jmp
sub
loope
xor
and
inc
or
jmp
mov
pusha
mov
iret
mov
xchg
lret
rolb
mov
movsl
push
mov
or
es
loopne
cld
incl
inc
stc
mov
pop
ret
push
test
out
add
cmpsb
or
lcall
das
clc
pushl
sbbb
mov
add
add
stos
clc
ljmp
clc
cmp
out
push
sbb
mov
jmp
ja
jg
cs
jecxz,pt
out
adc
sub
stos
lahf
test
dec
jmp
incl
or
sahf
aaa
addr16
lods
ljmp
cmp
mov
mov
daa
inc
lods
testb
xchg
clc
cwtl
dec
lds
fwait
jl
mov
sub
in
pop
aas
mov
loop
pop
ret
add
pop
and
aas
pushf
adc
std
jmp
push
cmp
lcall
add
into
lcall
push
adc
jb
testb
mov
sbb
or
das
sar
jg
ficoms
sahf
push
and
adc
mov
cmp
lcall
jns
add
push
mov
inc
add
mov
or
or
clc
rcrb
pusha
jns
pop
ret
adc
and
xor
xchg
sbb
sti
push
mov
xor
loop
cmp
out
xchg
dec
mov
or
lcall
sbb
pusha
scas
xor
rclb
pushl
fwait
int3
scas
dec
sbb
dec
ja
mov
aas
in
jecxz
ficomps
inc
and
nop
sarb
mov
dec
add
mov
and
lock
call
ficompl
imul
ja
psllq
xchg
rcll
inc
stos
push
ljmp
out
cmpsl
and
jmp
sbb
es
pop
inc
sbb
jne
aaa
pop
ljmp
int
lods
ret
jbe
mov
jns
lahf
push
xchg
popa
inc
sbb
push
std
pushl
rolb
js
popw
std
incb
rolb
fwait
js
mov
ljmp
mov
arpl
xchg
stos
popf
push
test
test
test
dec
stos
dec
sbb
cld
incl
icebp
sbb
push
int
inc
xor
mov
outsl
out
fsubl
add
lcall
repnz
xchg
sti
jns
aas
or
mov
pop
repz
and
jg
sti
and
outsw
bound
or
clc
adc
pop
aam
push
hlt
add
jg
jg
shlb
add
lods
mov
mov
fcomip
pop
mov
mov
mov
lcall
cmp
and
xor
dec
cld
xchg
jbe
out
sbb
xor
sar
mov
ds
jp
loop
xor
jecxz
mov
lods
jg
dec
inc
cld
pop
int3
ljmp
jp
adc
ljmp
mov
and
sbbl
call
loopne
int
jp
fstpl
decl
ds
push
gs
adc
sbb
sbb
xlat
loop
aas
movswl
or
ljmp
jle
es
daa
jecxz
leave
dec
cmp
jl
fmuls
inc
push
mov
jmp
add
std
mov
jge
sub
mov
pushf
in
stos
inc
mov
push
xchg
sti
sub
push
ja
xchg
aas
xorb
xlat
decl
cmp
dec
cmc
in
and
in
in
fstl
ds
data16
dec
addr16
lock
xrelease
sub
in
mov
mov
cli
pusha
popf
sbb
inc
ret
leave
aas
jae
aam
sbb
cmp
in
jmp
inc
js
xor
hlt
xchg
xchg
jae
xadd
mov
ret
dec
je
hlt
xchg
ljmp
xchg
in
lods
and
icebp
push
mov
add
movsb
mov
jmp
std
push
out
or
mov
ss
lcall
imul
jl
loopne
push
xchg
pop
movsl
aaa
adc
mov
or
mov
push
rcll
lods
ljmp
adc
pop
data16
je
shlb
pop
imul
roll
jg
jmp
cmp
jnp
sub
aad
cmp
scas
inc
lea
shr
cld
jo
fs
sarl
dec
pop
mov
mov
sbb
mov
pop
inc
pop
mov
mov
xchg
call
jle
jb
pop
loopne
je
subb
and
mov
cmp
lock
push
adc
cmpsl
jp
sbb
ror
dec
paddsb
jb
inc
movsb
add
cs
fstpt
and
cmp
jecxz
adc
pop
xor
ja
hlt
repnz
setae
adc
jbe
lret
fbld
pop
ljmpw
add
ret
jno
xor
sar
call
or
xchg
mov
sub
and
aad
xchg
sub
sbb
inc
ret
mov
xor
pop
inc
loopne
daa
cmp
test
sbb
shrl
jl
lcall
inc
shl
xor
sarb
jg
mov
out
pop
andl
xor
out
test
mov
xchg
add
dec
or
mov
test
dec
arpl
cmpsl
scas
dec
je
or
mov
jo
push
rorb
xchg
lea
ja
jg
jo
into
inc
inc
ret
lcall
shlb
lcall
jmp
sub
fs
mov
xor
push
sub
xor
icebp
mov
stc
scas
push
jbe
mov
mov
loopne
call
xchg
add
aam
pop
stos
fstp
mov
lods
call
repz
fcmovnbe
xor
mov
add
adc
leave
inc
xchg
jecxz
dec
ljmp
cmp
loope
cmp
data16
push
mov
cmp
jmp
and
imul
mov
jns
xlat
dec
call
push
decl
lods
shl
daa
mov
cmp
negb
sub
repz
sbb
dec
cmp
in
call
mov
mov
and
xor
mov
or
inc
lods
xor
xchg
pop
ss
pushl
jne
lret
push
call
push
aas
add
mov
lods
mov
call
sarl
aaa
mov
vunpckhpd
das
adc
movsl
sub
jmp
add
jno
les
push
cwtl
jp
in
push
xor
ja
xor
shlb
cmp
fists
jg
jbe
fmuls
test
inc
out
jne
or
push
out
sub
mov
push
push
popa
or
test
out
out
out
cs
cmp
cmpsl
cwtl
sbb
imul
sub
dec
adc
or
lret
cs
xor
and
testb
fistl
fiaddl
call
iret
pop
xchg
or
and
imul
dec
and
fisttpll
loop
ss
jo
lods
es
arpl
and
out
xchg
fisubrs
push
sarb
jno
xlat
inc
lret
inc
xchg
incl
cld
pop
movsl
sbb
icebp
lods
movsb
outsb
push
ret
gs
mov
push
ret
inc
inc
adc
jle
leave
clc
and
call
inc
xor
fs
ljmp
bound
sti
xchg
pusha
cwtl
jle
inc
or
add
ljmp
imul
movsb
mov
xchg
ret
sbb
pushf
lds
and
lcall
sahf
and
arpl
in
add
mov
jg
mov
inc
je
dec
aam
mov
insl
jmp
mov
fldl
xchg
lea
jo
test
cltd
out
mov
fcomip
jp
es
sub
aas
mov
xor
aaa
mov
inc
cld
adc
jb
lock
mov
test
xor
push
adc
adc
test
cmp
iret
pop
in
push
jge
mov
fs
lcall
xchg
pusha
mov
or
call
push
bound
stc
into
adc
insl
lret
sar
jmp
mov
cwtl
sub
lcall
sub
repz
aam
and
mov
mov
lods
stos
xchg
mov
out
sbb
icebp
pushl
push
clc
jl
jmp
mov
xor
das
xchg
jle
lea
lcall
imul
sahf
out
loope
dec
mov
xor
pop
sub
push
movsb
repnz
insl
iret
insb
xchg
dec
clc
jmp
idivl
int
mov
push
add
jge
cmc
loope
inc
lahf
movsl
data16
out
aad
add
ja
pushf
ljmp
cwtl
mov
pushl
xchg
mov
sbb
aaa
stos
lret
lret
sub
push
fldcw
in
in
pop
pushl
rcl
jge
test
orb
xchg
je
shlb
xchg
call
mov
addr16
daa
data16
inc
out
jl
inc
xor
fwait
daa
xchg
jns
out
in
dec
or
xor
ljmp
jg
xchg
cwtl
cmp
push
outsb
roll
add
pop
lock
mov
jmp
shrb
dec
sahf
fldt
fdivr
jmp
inc
jg
sbb
cmpl
imul
ljmp
call
mov
hlt
popf
xchg
cmpsb
ljmp
pop
and
test
decl
das
and
sahf
push
push
mov
push
sbbb
xor
lahf
pop
xor
sub
jbe
decl
cmp
mov
jae
inc
mov
arpl
xchg
jp
xchg
xlat
dec
daa
or
jl
lods
mov
or
mov
fwait
cmp
xchg
inc
mov
ss
pop
adc
inc
push
fcoms
xorl
fwait
insb
push
cmp
lcall
sub
push
jbe
inc
gs
out
clc
ljmp
inc
pop
iret
jle
mov
xchg
jle
adc
int3
mov
stos
repz
fs
in
es
lods
ss
scas
mov
xchg
mov
add
inc
pusha
push
push
cmp
ficoms
adc
adc
imul
inc
jno
adc
mov
or
in
jecxz
xor
dec
mov
adc
shll
pop
pushl
inc
jno
pop
cmp
and
xchg
clc
xchg
rcrl
mov
jmp
sub
test
push
test
das
out
test
pop
out
std
stos
pusha
jno
call
fwait
sbb
mov
negb
lods
js
rolb
adc
aaa
mov
jmp
mov
sbb
call
adc
stos
js
sub
lds
adc
xorb
ljmp
lret
popf
mov
mov
pop
adc
xchg
cmp
decl
jne
sahf
movsl
add
js
jo
sarb
cmc
hlt
popf
cmpsb
movsb
mov
mov
pop
add
test
jbe
pop
pop
pop
mov
je
push
pop
and
out
lock
lcall
push
sbb
in
addr16
das
pusha
pop
mov
pop
push
pop
dec
mov
fistps
and
xor
dec
ss
int
cmp
jle
xchg
repz
fldl
leave
clc
adc
call
adc
ss
xchg
gs
and
imulb
in
rcrl
mov
push
pop
sbb
incl
lret
dec
popa
push
pop
or
enter
xchg
in
sub
pop
clc
popa
sub
sbb
jno
dec
out
push
shll
fcos
lahf
shl
lret
sbb
cli
mov
push
sub
lahf
lcall
gs
in
fmuls
jns
xchg
leave
cmp
jg
and
jmp
sub
call
lahf
pop
in
gs
add
dec
adc
fisttpl
test
call
add
loope
sub
mov
inc
repnz
xchg
popf
cltd
mov
cvtps2pd
cmc
mov
mov
gs
jmp
pop
outsl
push
test
nop
out
lahf
jnp
fiaddl
cmp
and
and
nop
lahf
rolb
cmp
inc
jl
lcall
orb
push
icebp
fdivrp
mov
ss
xor
ret
or
pop
das
sbb
jl
andps
out
fidivl
push
mov
icebp
inc
pushl
adc
pop
aad
mov
jnp
ret
push
test
mov
pop
ja
dec
testb
sub
sahf
push
jne
xchg
pushfw
jno
cltd
stc
orb
ljmp
je
lret
imul
aam
fwait
push
in
sbb
xchg
leave
or
and
push
decl
mov
mov
aad
movsb
xchg
ds
pop
stc
aas
lods
fwait
pop
pop
cld
cli
inc
pop
cwtl
sar
ljmp
imul
lahf
outsb
clc
roll
mov
add
xchg
je
faddp
aam
mov
xchg
pop
pop
loope
sar
decl
cmp
sbb
dec
mov
inc
loopne
push
or
aad
test
sbb
add
lock
lcall
jnp
xchg
mov
mov
scas
sti
loopne
pop
dec
repnz
ljmp
xor
test
mov
pushf
pushf
and
mov
pop
mov
jbe
sbb
adc
cmp
mov
sub
inc
repz
xchg
fcmovb
jge
and
pop
or
inc
push
rclb
inc
sbb
jge
cmpsb
xor
inc
add
dec
mov
shrb
adc
mov
orb
shll
fadds
stos
sbb
and
inc
sahf
nop
mov
call
aaa
sbb
movsb
test
mov
push
ret
sahf
push
cwtl
dec
add
fidivl
mov
rclb
or
xor
cmpsl
inc
fwait
cld
incl
es
push
sbb
test
pusha
cmp
sbb
sub
adc
and
call
push
repnz
mov
cmp
adc
cmc
out
bound
push
sbb
jge
out
clc
ljmp
popf
xlat
js
push
fs
cmp
sub
shlb
and
mov
decl
cmp
fnstenv
out
pop
decl
jno
mov
bound
mov
fdivrp
pop
ljmp
jno
lods
shl
inc
dec
repz
arpl
aam
stos
sti
lahf
adc
imul
outsl
clc
stos
addr16
pop
loopne
notl
adc
sbb
imul
int3
leave
std
popf
ret
out
dec
dec
scas
loopne
sbb
jmp
repz
jne
pushf
rorb
int
pop
clc
stos
out
pop
mov
in
xchg
or
xchg
clc
rcrb
insb
xchg
sub
std
pop
icebp
pop
xchg
dec
shll
popf
adc
push
sar
mov
sarl
jmp
addr16
cmpsl
sahf
xor
jge
xchg
xor
mov
cli
add
std
out
out
jb
xchg
jmp
mov
lcall
popa
add
dec
stos
inc
call
std
das
mov
mov
inc
add
movl
out
shl
iret
pop
xchg
inc
mov
mov
fdivr
iret
sbb
in
test
test
dec
data16
sub
or
add
add
incl
mov
jl
fsubrl
js
inc
into
popf
cmp
jp
ficoms
sbb
in
pop
adc
pop
xchg
add
dec
mov
dec
mov
repnz
pop
ljmp
add
loopne
retw
xor
imul
inc
test
or
out
into
bound
add
cmpsl
jnp
js
push
in
je
xlat
cmp
imul
aas
lahf
ljmp
sar
call
filds
mov
xor
mov
bound
test
stos
add
lock
jg
mov
cmp
push
mov
ja
mov
test
mov
jns
in
clc
adc
ljmp
scas
test
pop
and
lods
mov
inc
ljmp
lahf
pop
mov
fcompl
xlat
inc
add
jbe
jo
xchg
push
dec
jg
lcall
outsb
jbe
push
dec
pushf
or
lods
and
icebp
loope
pop
sub
call
mov
xor
bound
mov
push
fcomps
popa
addr16
pop
arpl
in
sub
sub
sar
imulb
jl
ljmp
hlt
or
mov
push
jg
mov
ret
add
cbtw
mov
jp
xchg
sti
mov
xchg
push
push
mov
stc
jecxz
mov
mov
mov
andl
in
sub
push
stos
call
inc
jnp
adc
out
mov
xlat
xorb
mov
sub
add
adcl
cmp
dec
dec
and
in
outsl
xor
clc
mov
in
inc
aaa
addb
stos
outsb
popf
orl
mov
loopne
in
shl
inc
js
mov
fs
add
mov
inc
push
sub
xlat
in
sub
addr16
dec
dec
jle
mov
sbb
pop
sub
incl
outsl
dec
icebp
sbb
xchg
cs
lods
mov
jecxz
push
jle
clc
enter
cli
xor
enter
jmp
pop
sbb
push
fs
add
jo
lods
fsubrs
incl
mov
jmp
mov
adc
push
js
cli
sub
mov
inc
call
in
movsb
push
and
inc
inc
mov
cmp
cmp
xchg
aaa
add
mov
xor
test
mov
xchg
out
dec
cmp
inc
mov
xchg
ret
jmp
std
ret
push
mov
adc
push
mov
lods
sub
stos
aaa
cld
jmp
lock
out
xchg
rorb
or
call
shlb
mov
sbb
xchg
add
push
test
movsb
cmpsb
cmp
movsb
shlb
inc
ljmp
add
sub
mov
and
jo
push
jmp
mov
jg
xchg
xchg
outsb
jno
popa
xor
scas
and
out
sub
inc
dec
jo
iret
arpl
mov
push
pop
scas
aaa
mov
mov
lock
decl
andl
adc
pop
pushf
sbb
mov
gs
jns
mov
cli
out
rolb
movsb
dec
rolb
mov
je
cld
mov
mov
shll
into
ret
pop
hlt
out
add
xchg
add
pop
mov
mov
push
in
and
icebp
ja
mov
adc
out
xchg
bound
or
lcall
lock
clc
ret
or
mov
lds
cmpl
inc
out
cli
call
les
js
cmp
imul
sub
imul
aam
scas
test
mov
xchg
inc
aad
js
push
cwtl
movsl
dec
dec
addr16
push
lods
loope
cld
outsb
stos
mov
mov
shll
movsl
jle
lds
ljmp
pushf
lcall
rcrb
push
insb
ds
push
pop
mov
lods
lcall
fwait
push
dec
mov
mov
in
mov
js
arpl
add
inc
inc
pop
cs
lea
sar
addb
jns
stos
add
sub
fcomps
and
sbbb
repz
jbe
fdivr
insb
sbb
jmp
stos
aam
out
mov
jp
pop
loope
xlat
popa
pop
sbb
icebp
rcrb
cmp
decl
sti
mov
push
add
jae
xchg
pop
je
and
push
repnz
push
test
dec
dec
sar
jmp
add
cmc
hlt
cmp
dec
push
lods
jae
jns
rorl
push
cmp
mov
pop
xor
incl
adc
repnz
lods
je
divb
sub
popa
lret
mov
xchg
fimull
lcall
fsubs
sub
cwtl
mov
push
pop
mov
or
jmp
addr16
pushf
cmc
addr16
aaa
std
enter
mov
mov
mov
mov
jmp
outsl
incl
cmp
pop
mov
mov
pop
in
out
in
mov
add
mov
outsl
daa
sbb
call
cltd
ret
mov
rorl
pop
aam
sbb
and
cmc
call
rcl
negl
mov
mov
pop
jae
rol
mov
dec
mov
xor
sbb
iret
lahf
dec
inc
mov
xor
xchg
incl
fnstcw
repnz
mov
sub
inc
pop
hlt
out
fmull
decl
and
mov
ljmp
mov
dec
ljmp
ljmp
adc
inc
sub
jl
shlb
inc
and
bound
fdiv
dec
fcomip
push
int3
fpatan
lods
in
mov
test
adc
xchg
out
lcall
mov
aad
call
rcl
aas
cmp
push
aaa
mov
dec
mov
ffreep
enter
test
ret
imul
decl
addb
stos
subb
aas
and
or
pop
das
decl
sbb
mov
mov
jl
rcl
mov
push
outsb
js
sbb
addr16
xchg
mov
jmp
rcrl
je
push
jecxz
in
push
ret
insb
clc
std
add
jp
pop
mov
decl
imul
jge
daa
lcall
nop
ret
sbb
inc
shr
pop
into
les
and
decl
ljmp
jl
xchg
push
sbb
fcmovbe
add
out
xchg
dec
and
mov
arpl
lret
sub
pop
roll
daa
push
xor
jg
mov
xchg
pusha
clc
inc
jb
push
cmp
movsb
fldcw
push
sti
and
call
inc
add
ljmp
jne
sub
xorb
iret
rcrb
fistpl
out
cli
xor
or
inc
rcll
call
insb
and
lcall
cvtps2pi
lret
mov
lea
or
jmp
icebp
jb
mov
pop
inc
lcall
out
mov
cmp
sbb
mov
and
add
cwtl
jge
repnz
cmpsb
jmp
stos
mov
ja
imul
into
leave
out
xchg
insb
fisttps
mov
push
arpl
inc
lock
pushl
sbb
les
adc
rclb
outsl
clc
mov
out
cmpsl
outsl
sub
push
shlb
cmp
pop
sbbl
jg
jnp
mov
fdivl
fisubrl
fsubp
inc
in
mov
scas
cmpl
lret
pop
and
test
jl
cmp
mov
or
repz
aas
xor
fstps
call
iret
jne
adc
jae
pop
xorb
adc
mov
jg
jmp
jbe
enter
or
lds
lea
daa
push
sbb
pushl
xor
mov
xchg
jmp
shrb
stc
and
push
lcall
mov
inc
int
ja
jae
and
shlb
incl
les
pop
lods
mov
cmp
xchg
push
jge
sub
inc
hlt
lret
call
popa
scas
mov
xor
repz
or
call
std
mov
ficompl
sahf
jl
cmp
sti
adc
filds
jecxz
push
ljmp
inc
mov
ljmp
inc
dec
mov
adc
push
das
cli
pushl
push
test
add
out
jno
jge
aas
adc
lcall
es
cmpsb
call
in
in
out
or
cwtl
sbb
data16
ljmp
push
mov
dec
sub
lods
xchg
xchg
mov
cmp
jmp
push
movsl
or
sub
jnp
mov
aaa
test
inc
imul
adc
mov
dec
add
mov
movsl
mul
or
cli
daa
pop
out
add
mov
dec
mov
call
or
cld
bnd
sbb
mov
pop
inc
inc
or
scas
add
pushl
add
ret
push
cmpsl
cmpsb
adc
daa
pop
shll
jg
push
popa
bound
pop
cmp
leave
jg
cmp
les
cli
inc
adc
mov
mov
pop
mov
push
lods
inc
in
lea
cmpl
popa
mov
incl
xchg
cmp
out
pop
aaa
shl
scas
pop
dec
shll
movsb
push
ds
cmp
add
fnstsw
ret
xchg
add
mov
push
enter
push
bound
in
out
pop
ret
mov
in
xchg
clc
mov
lcall
pusha
jmp
mov
xchg
int3
pop
jp
push
imul
out
scas
clc
push
lcall
pop
ss
in
faddl
decl
clc
sub
pop
mov
cltd
movsl
cld
cltd
outsb
lock
call
or
and
mov
and
or
repnz
outsl
cli
xchg
add
outsl
and
sbb
or
shll
pop
mov
push
popa
cmp
pop
insb
dec
adc
fsubrl
xchg
inc
insb
dec
cwtl
add
ja
jg
dec
test
pop
stos
lret
xor
cld
lcall
inc
cmp
cmpsl
call
in
dec
push
pop
xchg
jbe
cmp
cmpsl
ljmp
jmp
jno
adc
push
int3
ljmp
pushf
jno
cmpsb
int
mov
mov
lcall
outsb
push
push
pop
movl
lret
hlt
jg
or
fildll
neg
stc
cmp
adc
sti
into
cmp
push
imul
decl
or
jge
mov
and
movsb
stos
mov
lock
ljmp
mov
sub
mov
xchg
xchg
ja
sub
fbstp
out
sbb
outsl
xor
jmp
sbb
mov
push
icebp
nop
pusha
cmp
mov
mov
into
cli
sub
push
ret
lods
or
aas
in
and
push
push
add
inc
ljmp
sbb
pop
ja
push
xor
cmp
lcall
loop
fdivrs
call
fiaddl
lret
and
imul
mov
in
adc
jmp
decl
cwtl
out
movl
fdivr
cltd
push
orb
rcl
outsl
cli
mov
fisttpl
xchg
mov
lret
sub
jns
pushf
jae
shrb
sbb
sbb
xchg
mov
sahf
sbb
xchg
call
leave
test
add
jb
mov
arpl
hlt
or
push
and
decl
iret
ret
fistpl
test
inc
cltd
shl
and
mov
mov
mov
push
xchg
pop
or
pushl
sub
mov
and
pop
inc
repnz
lock
test
aaa
mov
je
in
push
dec
xchg
dec
and
jl
adc
inc
or
js
cwtl
aad
jmp
cmp
sub
mov
cli
les
sub
jecxz
test
lret
jne
pusha
loop
insb
lock
sar
in
loope
cmp
icebp
ja
bound
hlt
shll
pop
inc
xlat
rcrl
ljmp
push
adc
mov
jb
jle
xlat
mov
andl
out
add
jle
out
adc
in
sarl
sub
mov
loopne
shrl
sbb
rcrb
int3
jmp
jp
or
adc
push
mov
in
mov
int3
into
pop
mov
add
in
ljmp
loope
mov
and
mov
mov
push
sbb
fsts
sbb
fistpl
sub
out
cltd
lock
negb
pop
addl
incl
jg
nop
mov
inc
adc
push
xchg
cmpsl
lods
sub
out
aaa
std
jg
mov
shlb
pop
das
pop
xor
hlt
xchg
inc
fisubrl
mov
sbb
call
add
stos
sqrtps
imul
lret
ret
push
mov
loopne
mov
in
xor
sbb
mov
ja
jnp
pop
std
jmp
mov
dec
inc
xorl
lcall
mov
pushf
pop
dec
jp
mov
mov
scas
lcall
movsb
bound
push
pushf
sbbb
jae
push
dec
lcall
ljmp
jnp
fimull
fs
dec
mov
rorl
test
dec
mov
dec
inc
iret
iret
pop
fcmovbe
clc
jp
mov
mov
jp
jo
inc
jbe
add
pushl
in
jecxz
fwait
push
xor
push
add
lock
and
in
and
jnp
ds
pushl
fists
xlat
push
mov
test
push
sub
pop
or
ljmp
fisttps
stos
cmpsl
add
xor
ficompl
mov
stos
mov
jbe
sar
push
aam
mov
sub
loope
push
xchg
fsubl
out
repz
push
sub
insb
fisubl
std
jmp
rdtsc
idivb
pop
repz
jge
arpl
movsl
stc
sbbl
jg
call
clc
inc
int
lea
cmp
ss
test
pop
cwtl
sub
or
ljmp
mov
jbe
insb
xchg
leave
in
in
ljmp
clc
filds
xchg
imul
jnp
lahf
call
jg
out
mov
test
mov
adc
into
shrl
incl
xor
add
pop
fwait
mov
daa
fwait
xor
inc
repnz
mov
sub
decl
mov
push
insl
push
into
dec
push
lcallw
test
mov
cli
outsl
cli
call
daa
stc
enter
cmp
adc
xor
ljmp
sub
or
jno
lods
xchg
mov
into
xchg
jae
fisubrs
pop
ljmp
push
jmp
out
sti
push
or
mov
xor
sub
dec
fmull
call
incl
adc
jle
sub
test
or
in
sub
test
addr16
jns
in
hlt
mov
lods
jnp
adc
push
in
cld
fmuls
adc
jmp
mov
cmp
out
inc
out
pop
mov
fs
xor
pushl
sbb
mov
mov
add
shlb
mov
fwait
outsb
jae
out
and
in
xchg
dec
loope
ljmp
xor
jecxz
xchg
add
mov
cs
lcall
xor
jmp
test
pushf
mov
mov
mov
mov
pushl
jbe
jmp
movsb
insb
dec
cmp
inc
mov
shlb
add
and
mov
lcall
push
sbb
vunpckhpd
stos
mov
fcmovne
loop
ret
cmp
aaa
xchg
push
ret
xchg
shr
mov
scas
xchg
jl
gs
outsl
dec
jp
incl
pushf
stos
fdivrl
push
mov
mov
push
push
loop
or
clc
incl
push
shll
lcall
adc
andb
incl
xchg
lahf
and
insb
mov
mov
and
test
enter
mov
stc
adc
sub
shl
js
fstl
into
sbb
out
stos
test
jne
mov
mov
and
pop
fisubrs
or
aaa
std
pushl
test
sahf
inc
jp
xor
aam
or
or
sbb
idiv
jmp
xor
sarb
cmp
fbstp
decl
cmp
sbb
mov
je
jo
movsb
jb
lods
gs
in
test
int3
stos
sarb
loopne
jg
or
aam
int3
push
xchg
jl
negl
fs
incl
push
jnp
sbb
lret
lds
hlt
ljmp
rcrl
pop
fwait
inc
cmp
imul
add
add
cmp
fisubrs
xchg
outsl
popa
inc
push
mov
fdivl
ds
jg
insb
add
jmp
cmp
mov
add
cmc
pop
or
xchg
outsl
inc
cmp
fwait
testb
ss
xchg
mov
cmp
cs
int
or
ljmp
push
pushf
jmp
push
test
ljmp
out
sub
ret
lock
mov
popa
ret
and
inc
scas
fmull
xchg
hlt
push
adc
nop
adc
xchg
lahf
fisubrl
jmp
cltd
pop
out
dec
mov
xchg
sbb
push
mov
adc
dec
xchg
mov
sbb
inc
in
test
dec
pusha
xlat
js
test
aaa
mov
or
pop
cmp
jge
pop
dec
mov
dec
test
push
and
push
jecxz
adc
lcall
incl
xor
mov
and
cmpsl
push
and
inc
push
or
xchg
outsl
sbb
subb
pushf
cld
dec
int3
out
adc
subl
imul
inc
xchg
scas
decl
icebp
cmpsb
dec
pop
mov
scas
rol
lret
pop
ljmp
addr16
out
xor
aam
lock
push
and
cltd
imul
addr16
ljmp
hlt
out
loope
sbbb
mov
mov
pop
sbb
aam
popa
or
fcomip
call
popf
or
mov
test
add
sbb
pushl
std
bound
jge
out
add
imul
int3
cmpsl
incl
in
adc
add
xor
or
iret
adc
outsl
clc
cli
inc
push
jle
int
xchg
inc
hlt
clc
out
dec
mov
mov
and
sbb
jg
in
cmpsl
scas
or
mov
orb
gs
out
sbb
xchg
lcall
xor
in
imul
leave
mov
fidivl
dec
decl
ljmp
mov
pop
and
cwtl
stos
mov
bound
in
rolb
pushaw
rcrl
inc
incl
push
mov
das
and
outsl
inc
dec
or
call
rcl
jno
mov
jns
inc
xorl
into
xor
cmpsl
inc
jo
stc
xor
ds
gs
insl
stc
pusha
xor
call
fdivs
rclb
or
in
mov
mov
in
mov
test
idiv
decl
mov
xor
jno
adc
lock
or
sbb
jmp
jbe
push
divb
aaa
adc
std
adc
arpl
cmp
jp
and
jb
call
movsb
pop
inc
push
testl
jmp
fnstsw
pop
daa
sub
or
call
enter
movsb
cld
push
aad
or
push
daa
movsb
add
insb
lcall
xchg
adc
out
incb
movsl
ja
dec
add
push
loop
leave
push
jg
shll
xchg
shrl
push
scas
decl
inc
outsl
xor
orl
push
inc
sti
cmc
pop
bound
rclb
mov
popa
jb
sti
cmpsb
cmp
mov
push
inc
sub
jg
test
jbe
call
es
fsubp
sbb
adc
lea
mov
mov
mov
cld
incl
mov
pop
shlb
outsl
sbb
jecxz
decl
jle
ret
xchg
mov
pop
push
cmp
movsl
and
std
or
push
lds
dec
scas
mov
rorl
push
dec
aaa
push
xchg
rcrl
cmc
leave
test
incl
leave
decl
sub
mov
dec
lock
or
iret
dec
push
jg
hlt
cmp
nop
mulb
stos
outsb
and
or
push
pop
decl
scas
arpl
add
dec
mov
adc
sub
aam
lock
cmp
pop
push
push
ja
jle
jmp
lods
adc
cmp
jp
aas
cmp
daa
cmp
call
les
out
into
in
pop
gs
adc
cld
repnz
lods
int
xchg
fwait
popf
sub
movl
push
inc
mov
push
test
scas
mov
roll
jb
sub
mov
mov
sub
lret
in
unpcklps
xor
pusha
push
mov
and
push
scas
mov
mov
inc
inc
mov
lods
imul
call
in
jg
decl
orb
ja
jne
andl
sti
bound
pop
xchg
out
orl
add
incl
jo
mov
sbb
leave
lds
add
inc
sahf
dec
pop
sbb
stos
push
into
fimull
cmpsb
enter
stc
xorl
xchg
jge
jmp
sub
cli
pushl
test
sahf
cli
es
aaa
into
inc
mov
dec
nop
aas
xor
repz
pushl
sbb
es
jnp
int
or
lock
repnz
xlat
shll
fiadds
push
hlt
inc
cmc
mov
and
lods
xchg
imull
les
jle
adc
inc
push
je
lret
pop
lahf
pop
popf
in
jnp
ret
lret
push
xchg
mov
and
mov
ljmp
mov
incl
ja
mov
xchg
lea
jg
shlb
mov
lds
pop
pop
scas
jb
popa
fistl
sbb
or
cmove
fildll
lahf
push
xchg
and
mov
adc
sbb
xlat
rcll
dec
xchg
mov
dec
push
push
fmul
std
mov
fwait
sub
xor
out
inc
cltd
push
pushf
lcall
call
jl
push
mov
push
add
inc
add
in
nop
dec
int3
dec
lock
fsubs
out
mov
or
pop
cltd
adc
in
cmpsl
sub
rclb
jle
hlt
jmp
cmpsl
sahf
dec
rorl
sub
loope
jbe
jle
fwait
ljmp
aas
mov
incl
sbb
pop
jp
push
dec
shlb
pusha
sbb
sbb
and
daa
fmuls
xor
incl
lahf
cltd
out
push
adc
and
dec
cmpsl
or
and
dec
repnz
mov
std
mov
jne
out
stos
mov
adc
cmovs
out
pop
std
lahf
jg
push
add
jg
adc
cld
mov
mov
test
lret
nop
push
push
sbb
std
call
pop
in
jge
pop
arpl
xor
sub
dec
dec
jns
out
push
mov
mov
int3
sbb
sbb
and
add
les
or
mov
test
ljmp
rcrl
xchg
aas
popf
or
sub
call
lret
imul
jmp
push
xor
pop
lcall
push
push
popa
in
sbb
pop
loope
out
mov
cmp
add
cmp
fisubrl
test
mov
sbb
xchg
aam
xor
xchg
arpl
or
push
adc
dec
xor
xchg
push
js
and
xchg
add
fs
add
and
lcall
pop
add
pop
mov
aas
add
test
push
sarb
pop
je
pop
ds
xor
ja
call
sbb
notl
add
sub
hlt
testb
clc
fbld
call
pushl
mov
dec
mov
scas
pop
pop
cld
test
inc
jae
lcall
mov
sbb
pop
pop
adc
je
icebp
jbe
mov
mov
sub
sub
mov
lds
decl
out
inc
iret
push
cmp
xlat
stc
lcall
iret
push
arpl
mov
dec
in
mov
xor
out
push
in
xchg
addr16
fadds
fwait
xchg
cmpsl
mov
or
push
decl
cmpsb
outsb
pop
and
stos
sbb
dec
xchg
cmp
fisttpl
daa
iret
jns
lcall
jmp
test
notl
cmp
xor
mov
mov
cwtl
dec
xor
incl
fcompl
lods
jp
ret
push
stc
in
lret
inc
adc
in
test
out
dec
sub
call
pop
add
and
cs
and
or
into
mov
jle
hlt
sarl
jmp
sarl
js
add
clc
jge
popf
scas
xchg
int3
int3
jg
lcall
and
cmp
push
mov
movsl
push
fistps
push
jno
sbb
dec
outsl
jg
xorl
fwait
imul
cs
push
or
xchg
xchg
mov
shlb
out
or
pop
dec
stc
push
cmp
inc
cmp
sbb
and
call
cs
push
jl
cmpsl
pop
sub
stc
and
decl
jge
enter
xchg
bound
iret
lock
mov
push
mov
in
pop
pop
sub
or
adc
scas
cli
dec
mov
out
lcall
mov
push
cmp
jno
int3
xchg
lahf
scas
and
push
dec
or
mov
dec
xchg
repz
sbb
sub
int
xchg
xchg
aas
adc
jno
inc
ret
push
mov
fs
adc
push
jle
sti
shl
inc
xlat
fldt
add
mov
sbb
insb
jae
cmpsl
insl
cs
jne
sub
sbb
mov
pop
outsl
js
hlt
dec
jecxz
incl
in
adc
test
rcl
mov
loope
leave
call
xor
shr
inc
sub
inc
pop
popa
mov
insl
mov
lret
ret
pop
xchg
xor
ljmp
pop
pop
ret
xchg
imul
out
daa
push
rcll
add
imull
in
xor
les
dec
test
cmc
mov
sahf
insb
pop
insb
mov
fstpt
pusha
pop
dec
scas
add
jbe
insb
repnz
cmp
aad
mov
repnz
pushl
xchg
rclb
mov
int3
stc
rcrb
js
movsb
in
shll
xchg
adc
adc
ljmp
popa
cmc
das
daa
js
sub
push
xor
int
sub
add
aas
repnz
push
fcmovnb
or
dec
jb
inc
push
fs
rcrb
sahf
xlat
dec
fstl
in
pop
cmp
lcall
and
adc
pop
inc
out
jbe
push
xor
nop
inc
adc
push
aas
inc
sub
inc
mov
clc
jne
mov
ss
and
pop
jg
pop
and
pop
mov
xchg
jo
test
bnd
jmp
popa
out
pop
jmp
dec
in
loope
lcall
ja
call
out
push
aas
jnp
cmpsb
push
ficompl
shll
mov
adc
jmp
decl
push
pop
sub
jb
sub
xor
clc
pushl
adc
fcmove
movsb
int
stos
in
pop
and
imul
push
imul
dec
aad
bound
cmc
mov
push
adc
ljmp
in
pop
jne
movsl
lods
mov
aad
in
or
popf
mov
sub
incl
jmp
scas
mov
xchg
test
mov
mov
mov
push
sbbl
jle
test
lods
xor
mov
imul
push
jbe
rolb
pop
xor
jl
sbb
test
mov
dec
xchg
xchg
dec
pop
out
cli
daa
stos
ret
jp
mov
lret
shlb
inc
xor
inc
test
mov
fnsave
push
xor
rcll
ds
jmp
dec
dec
sti
dec
sarb
int3
mov
sbb
ret
inc
adc
fwait
sub
jmp
and
or
pop
xor
in
movb
xchg
inc
add
jge
sarb
xchg
pop
inc
sti
test
pusha
jp
sbb
loop
out
jp
mov
push
adc
fists
jmp
subl
push
add
loope
mov
sbb
push
cmp
loopne
and
jnp
add
push
es
or
jns
xchg
dec
xchg
cmc
mov
je
sbb
cmp
iret
enter
push
pop
pop
cld
jg
into
push
ret
scas
hlt
push
cmp
repnz
aas
mov
pop
ljmp
and
loope
out
xchg
jne
xlat
adc
push
pusha
sub
cmp
add
push
mov
incl
and
rcrl
lods
inc
into
sbb
sub
imul
fstps
pushl
clc
inc
inc
mov
enter
mov
xor
test
jo
inc
minps
loopw
dec
lods
and
fbstp
test
shlb
mov
inc
fwait
and
out
pop
arpl
call
cs
inc
inc
ficompl
push
insl
je
pop
pop
int
dec
outsl
les
or
dec
mov
lods
mov
push
pop
push
fisttpll
pop
pop
mov
mov
cs
push
or
ljmp
aam
cmpsb
sub
jge
shrb
add
cli
jno
or
jmp
pop
std
sbb
sbb
sbb
cmp
pop
jmp
xchg
cmpsb
sbb
cld
jecxz
sbb
dec
cmp
push
and
outsl
add
incl
or
pusha
insl
negb
jle
pushl
andl
push
cltd
jg
icebp
cmpsl
test
jmp
sub
popa
les
mov
sub
push
loopne
adc
mov
push
rcl
mov
lret
icebp
cmp
mov
mov
rcrl
fcoml
ret
into
arpl
lcall
push
cmp
xchg
dec
mov
sub
mov
loop
xadd
cmp
call
scas
mov
leave
adc
int3
hlt
xchg
push
xlat
inc
cmp
dec
in
pop
push
clc
dec
inc
push
out
repnz
sub
jo
hlt
stc
pop
ljmp
add
int
mov
decl
cmc
sub
not
pop
sbb
rcrb
push
push
sar
ficoms
jecxz
pop
push
call
jbe
cmp
inc
mov
mov
cmpsl
mov
rcr
pop
sbb
movl
scas
clc
pushl
in
ret
mov
fistl
imul
ljmp
jg
push
cld
testb
in
popa
sbbb
outsl
and
mov
loop
sbb
jecxz
notb
jae
sub
sub
pop
cmp
rcr
in
lds
enter
ljmp
push
mov
sub
push
lods
jmp
ret
enter
in
add
push
dec
pop
pop
out
adc
mov
loope
and
xor
fsubrs
cld
xor
xchg
orb
sub
inc
adc
fldcw
bound
stc
dec
or
sar
call
mov
jle
fcoml
mov
sub
gs
mov
notb
dec
scas
not
add
jb
inc
mov
sub
not
sub
movsl
pop
in
cmpsl
lods
in
jle
movsl
inc
dec
jbe
jg
sbbl
jg
decl
mov
sahf
loopne
fnstsw
xor
mov
sbbb
sbb
jp
hlt
pushl
pop
lock
aaa
pop
dec
ss
mov
scas
jnp
clc
add
pop
and
call
push
repz
or
cld
dec
addl
xchg
pop
cs
bound
add
jge
fistpl
ljmp
in
mov
jne
sbb
xchg
cld
push
inc
pop
mov
cmp
ljmp
in
mov
push
jae
push
mov
notl
int3
stos
mov
call
fs
ss
decl
cmpsl
inc
cmp
leave
loope,pt
pop
loopne
lret
jo
inc
data16
outsb
lods
push
cmp
mov
adc
pusha
fs
cmp
mov
xor
mov
cwtl
loope
pop
ljmp
mov
ret
push
xor
fisubrl
dec
cli
xchg
mov
and
add
aaa
ljmp
std
lcall
adc
scas
mov
xchg
or
cmp
movsb
push
pop
mov
lods
je
in
daa
cli
in
push
mov
pushl
pop
pop
pop
mov
dec
mov
dec
push
adc
mov
jno
mov
mov
or
jge
fldl
je
stc
imull
stos
xor
xchg
jae
push
ljmp
and
cwtl
test
scas
add
jb
aas
dec
pop
xor
fsub
inc
xor
cmc
decl
jns
les
test
push
push
mov
mov
push
xor
stos
out
cmpsb
mov
mov
addr16
xchg
xor
stos
in
xchg
add
fcomip
push
xchg
add
ret
push
jbe
and
imul
aam
add
fbstp
jle
das
sub
inc
add
adc
jge
add
ret
push
loopne
sbbb
xchg
and
push
loop
fsubrp
or
push
std
ljmp
jle
insl
enter
popl
mov
cmp
pop
mov
sub
add
je
mov
fwait
or
xor
test
insl
fcom
adc
adc
inc
jle
incl
jb
and
inc
daa
push
adc
sbb
or
pushf
mov
xor
lods
xchg
addr16
aam
mov
mov
icebp
inc
lcall
fwait
data16
clc
push
xor
ljmp
sbb
arpl
das
mov
jne
rolb
pusha
lcall
test
pop
clc
stos
or
test
cpuid
sub
mov
clc
call
subl
xchg
lods
push
pop
pusha
pusha
fmull
ljmp
jbe
push
lds
pop
push
adc
lods
and
dec
pop
inc
lcall
lods
sub
pop
hlt
jg
mov
adc
mov
stos
repnz
insl
cli
sbbb
lods
scas
gs
mov
loope
xlat
push
jno
xchg
int
js
dec
or
sar
cld
into
mov
arpl
adc
cmp
xchg
sbb
testb
sbb
decl
add
cmp
mov
mov
and
ret
pop
in
jnp
sbb
pushl
adc
test
dec
lds
adc
sbb
pusha
leave
inc
xchg
filds
pushf
jle
pop
push
movsb
sub
fdiv
inc
call
or
out
pop
jae
xchg
pushf
rolb
fs
and
dec
stc
mov
jae
jg
pushf
inc
ja
ja
mov
jns
xchg
xchg
lock
xchg
das
ret
cmp
mov
data16
lcall
mov
inc
sbb
ret
sbb
xchg
stos
jae
adc
and
dec
iret
iret
incl
enter
xchg
and
cmpb
pop
mov
jg
jnp
cld
cwtl
add
dec
push
dec
out
push
je
sbb
xchg
sub
lea
loopne
incl
clc
mov
call
pop
out
test
mov
xor
fcoml
shll
xchg
mov
add
and
sbb
push
jg
pusha
cld
iret
pop
mov
cmp
xor
out
fcomip
pushl
shrl
dec
inc
aam
mov
ds
movsb
movsl
cmp
jmp
xchg
nop
out
clc
outsl
clc
add
icebp
xchg
lret
xchg
testl
jle,pn
ljmp
and
outsb
cmpsb
jo
cmp
mov
in
mov
rol
ljmp
shr
movsb
mov
push
in
push
sub
dec
mov
jnp
call
nop
cmp
inc
add
pop
push
jecxz
lods
xchg
push
sub
addb
dec
jmp
xchg
stos
cmp
insl
movsl
mov
jnp
ljmp
fnstenv
mov
xor
loopne
lret
sub
lcall
andb
mov
mov
data16
data16
sbb
ljmp
ficompl
shl
adc
clc
inc
and
adc
add
imul
imul
cli
mov
icebp
fldcw
outsl
outsl
jecxz
inc
ds
jnp
in
mov
mov
insb
rol
subl
mov
jecxz
sahf
call
push
insl
pop
jno
es
mov
and
fistps
cmp
andb
xor
inc
dec
pushl
mov
popf
out
pop
xchg
push
pop
jnp
push
fstps
orps
lock
push
sbb
shl
daa
outsb
or
xor
rcrw
xchg
push
jmp
aam
mov
xor
mov
jge
adc
rcrb
outsb
dec
adc
xor
repnz
lcall
mov
mov
int3
je
mov
mov
jmp
enter
sbb
out
jmp
pop
es
shl
jmp
mov
mov
into
cmpsb
adc
push
cmc
jle
sbb
clc
jecxz
jmp
xor
mov
test
inc
dec
dec
cwtl
dec
jp
add
loop
lcall
sbb
push
inc
xchg
mov
fucom
mov
sbb
inc
xchg
add
cmpsl
or
fldl
enter
jmp
lret
in
fadd
jns
mov
loopne
pop
mov
loop
mov
lcall
mov
add
shl
sbb
sbb
jae
xor
loop
mov
call
sub
add
ret
dec
cwtl
sub
and
ljmp
decb
sahf
add
or
iret
and
cmpl
das
decl
and
in
iret
loopne
cmpsl
lea
cmp
pop
lods
and
jecxz
out
add
dec
jbe
or
in
mov
push
dec
idivb
xor
inc
popf
jp
clc
stc
nop
inc
int3
ljmp
jg
sbb
jmp
fdivs
adc
aas
and
pushl
loope
icebp
sub
mov
cmc
add
andl
inc
lcall
movsb
mov
insb
test
inc
loope
pop
push
mov
or
mov
call
int3
rorl
mov
cmpsl
inc
jns
jo
add
add
mov
add
xor
cltd
jmp
scas
or
lods
jecxz
cmp
and
push
jnp
mov
xor
ljmp
inc
or
mov
jmp
outsl
call
pop
xlat
dec
decl
imul
sbb
cmp
or
cmp
jp
and
adc
sti
mov
ljmp
repz
adc
enter
aaa
cld
mov
sti
cmc
ljmp
mov
jmp
xor
outsl
mov
and
cmp
xchg
xor
jle
mov
add
out
aad
fstps
add
cmp
mov
lods
fsub
fdivrs
cmp
gs
rcll
add
xchg
and
adc
and
push
pop
fdivr
pop
cmp
mov
push
add
shl
popf
sub
in
hlt
je
jno
ds
mov
sub
test
mov
add
adc
decl
push
sub
fnstcw
push
std
jp
push
sbb
push
fdiv
cmp
mov
into
out
ljmp
icebp
inc
sub
ljmp
cmp
lcall
movsb
hlt
sbb
lcall
dec
mov
sbb
jecxz
gs
xchg
push
call
call
or
jnp
lret
mov
xchg
mov
scas
jecxz
xchg
xchg
push
andb
out
fnstsw
cmp
xacquire
xor
cmc
mov
ja
xlat
xchg
aaa
xchg
sub
sahf
outsl
dec
out
mov
decl
push
insl
fadds
and
xor
xchg
movsb
in
and
int3
rcr
mov
jmp
xchg
sbb
adc
ja
hlt
dec
mov
movsl
dec
pop
loop
out
pop
insl
add
sub
incl
mov
dec
xor
stc
dec
out
rorl
sbb
movsl
or
stc
addb
decl
jecxz
shll
mov
push
rclb
mov
lret
xchg
shrb
cmpsb
fiaddl
pushl
clc
mov
fwait
lea
out
mov
fdiv
adc
xchg
jmp
dec
xchg
aad
mov
push
pop
jmp
mov
jmp
mov
es
decl
es
sahf
hlt
call
cmp
jg
fdivrl
sub
out
insb
dec
or
cmc
outsb
sbbl
jl
jmp
mov
test
jmp
test
imul
mov
add
xor
movsb
lea
ljmp
push
das
nop
inc
popa
loope
hlt
int3
insb
popf
sahf
stos
pushf
in
neg
inc
push
dec
push
sub
repz
lcall
or
imul
stc
sbb
ret
sbb
mov
int
call
cwtl
insl
repnz
lds
and
adc
lret
mov
fdivr
in
push
fwait
aas
dec
call
lahf
pop
lock
in
out
push
out
jp
pushl
push
xlat
jbe
loop
add
lcall
cmp
pop
lret
jne
stos
cltd
add
iret
repnz
movsb
jg
test
stc
dec
or
jb
dec
mov
dec
mov
sti
std
xor
add
out
sbb
add
mov
or
jo
outsl
inc
in
jg
arpl
and
mov
jb
repz
imul
pop
rcll
lcall
addb
arpl
stos
add
adc
mov
sub
test
cltd
lret
jne
mov
and
push
or
push
out
mov
push
xchg
push
loop
cld
popa
int
loopne
jmp
lods
pushf
adc
xor
push
xchg
add
mov
adc
sub
mov
call
es
push
popf
mov
or
xor
mov
sar
data16
xor
xor
aas
adc
addl
sbb
decl
outsl
sti
push
or
negl
sub
sub
orb
jns
jg
or
add
jl
jge
mov
inc
inc
stos
push
mov
jecxz
adc
lcall
in
cmp
das
push
push
lds
and
jo
iret
in
mov
icebp
leave
rdpmc
negl
mov
or
call
jp
mov
sub
cmp
inc
repnz
in
sub
dec
testl
ja
aaa
sub
dec
or
push
xor
push
popa
add
push
jmp
outsb
jb
ljmp
jmp
leave
xor
mov
xchg
out
push
ljmp
sar
add
adc
jno
sbb
jb
ljmp
adc
adc
cmp
idivl
pusha
rorb
push
inc
cli
adc
inc
jg
fadds
sub
mov
ret
lock
fs
ja
test
cmp
and
in
adc
mov
adc
in
mov
dec
xchg
ret
cmp
push
and
shll
ljmp
jmp
push
mov
loop
scas
imul
arpl
js
and
lret
out
add
movsl
push
mov
push
jl
cmpb
add
pop
xchg
pushl
mov
popf
pop
iret
in
add
fwait
mov
inc
jnp
jmp
sbb
decl
lock
dec
lahf
add
nop
xor
and
jl
ret
aam
in
decl
fsubrp
pop
cs
rclb
rolb
xor
sti
adc
int
fildl
jmp
adc
dec
dec
inc
ret
add
xor
sub
divb
pop
cmc
call
dec
xorl
cmp
enter
jp
cmp
out
xchg
jg
call
pop
jl
sub
fisttps
lret
cmp
push
mov
push
cmp
pushl
fidivrl
xor
in
mov
dec
out
xor
lcall
push
aad
push
incl
ficomps
mov
test
nop
or
adc
test
jg
andb
cmp
lcall
add
dec
or
fwait
sbb
inc
pop
ret
adc
les
dec
add
filds
fwait
into
inc
test
mov
repnz
leave
mov
push
jle
sub
sbb
incl
lock
test
jle
ret
das
into
pop
sbb
push
es
mov
cmc
call
ss
popf
dec
leave
jne
cld
ror
inc
mov
out
sub
ljmp
mov
daa
shlb
mov
ss
outsb
or
out
pop
testl
lcall
lods
push
sbb
lret
pop
sub
xchg
repz
std
aam
inc
mov
arpl
mov
pusha
jmp
jo
jl
xor
aaa
sti
push
sbb
test
push
push
lods
add
daa
push
dec
nop
call
xchg
push
pushl
cld
jmp
fstpt
pop
outsl
js
jo
sub
inc
sub
add
call
scas
cltd
fs
frstor
push
adcb
pushf
and
or
les
in
inc
call
popa
arpl
movsb
iret
lahf
sub
adc
mov
sbb
in
call
lea
fwait
andl
adc
xor
mov
dec
je
jmp
mov
push
mov
sub
push
cld
lods
cmp
ljmp
jmp
jg
ljmp
popa
das
mov
enter
or
jmp
lret
adc
mov
jo
sbb
mov
les
ret
mov
or
lds
pop
mov
inc
popa
pop
sbb
inc
sbb
push
jmp
or
lcall
int
or
sbb
fsubrl
inc
out
mov
das
lea
je
mov
lods
lock
das
add
and
insb
jg
call
inc
xor
xor
mov
in
movsb
or
mov
jmp
sbb
mov
test
bnd
rol
push
jecxz
js
lret
lcall
adc
cmc
pop
out
xor
enter
mov
fs
imul
ret
mov
jns
fistps
xor
test
pushf
cmpb
xchg
sbb
data16
push
inc
or
push
dec
jmp
inc
stc
xor
xor
and
das
mov
mov
cld
ja
jmp
repz
dec
dec
jae
outsl
sub
nop
adc
xorl
cmp
mov
add
mov
int
cld
repz
in
lret
sub
jmp
bound
fwait
xlat
div
and
mov
idivb
jp
xor
rcrb
cmp
das
clc
into
pop
fildll
xor
int
xchg
sahf
stos
cmp
cld
push
out
out
push
cld
ja
push
jae
imul
sti
loopne
mov
xchg
incl
cmp
lods
adc
or
in
pop
lea
lcall
insl
mov
pop
sti
add
out
xchg
adc
xor
aad
lret
clc
cmp
in
pushl
jle
out
pop
dec
or
std
mov
stos
cli
fwait
push
sub
xlat
xor
or
clc
lcall
dec
cmc
movsl
adc
testb
icebp
push
mov
pop
mov
jb
pusha
movsb
push
cmpsl
inc
lods
das
or
mov
mov
mov
roll
and
add
rcll
arpl
rcll
sub
ljmp
call
or
mov
test
or
pop
inc
out
incl
sub
imulb
fadd
pop
sbb
bound
inc
dec
test
jmp
and
mov
pusha
xor
rolb
int
pop
sbb
push
dec
dec
mov
call
leave
mov
test
xor
jle
mov
in
in
loopne
or
pusha
xorb
fisubrl
xor
mov
mov
or
jbe
lods
ljmp
adc
and
cmp
add
stos
loop
push
ja
in
add
push
adc
xchg
add
aad
mov
test
sbb
cmc
cmp
mov
dec
xor
popf
xor
decl
ret
inc
mov
out
push
mov
cmp
xor
out
xor
mov
rcll
cmp
jg
fistpll
xchg
test
stos
mov
mov
xchg
and
mov
nop
int
push
repz
out
or
movb
xchg
mov
sub
imul
inc
ljmp
inc
xlat
sbb
mov
dec
mov
jae
ljmp
aaa
sub
inc
add
aad
jne
jo
fldenv
mov
call
fldt
outsb
push
sbb
mov
mov
leavew
imul
jg
hlt
jp
sbb
insb
pop
in
negb
lods
pop
xchg
xor
mov
pop
stc
in
jne
daa
jmp
insl
mov
lcall
call
and
mov
push
fnstcw
lcall
in
sbb
fimuls
adc
push
mov
fsubrs
test
cmp
mov
sub
movsb
out
xlat
mov
mov
dec
or
cs
mov
call
push
int3
jae
inc
out
pop
rorb
jge
test
pop
cmp
adc
pop
fsubrl
clc
cmp
scas
xor
adc
fidivrl
mov
mov
ds
movsl
sub
call
push
jp
jo
je
pop
pop
pusha
dec
dec
push
inc
inc
add
sub
mov
rorb
dec
mov
fs
lret
sar
mov
lea
int
push
sub
scas
xchg
jne
xchg
fisttpll
ljmp
fs
add
add
cmp
push
lods
addb
int
dec
stos
dec
jg
sbb
jle
cmp
dec
out
mov
sub
in
pop
push
fdivrl
fnstcw
jmp
mov
rorl
jecxz
stos
or
inc
stos
sub
fmulp
mov
scas
sbb
lcall
sbb
jg
push
repnz
pop
aaa
inc
add
push
repnz
popf
cld
orb
pop
ljmp
add
sarb
mov
icebp
push
add
pushl
mov
lds
xchg
dec
add
push
gs
push
call
mov
mov
cmp
dec
jae
mov
cmp
mov
xchg
nop
cs
incl
rorb
in
xchg
lahf
mov
jg
jle
cwtl
inc
in
push
inc
or
push
sar
pop
cld
adc
mov
clc
int3
jl
sub
jae
mov
dec
std
aaa
push
lds
pushf
test
test
stc
clc
mov
dec
push
mov
daa
inc
or
push
aam
cltd
sbb
and
inc
ljmp
scas
data16
jne
mov
popa
mov
inc
jae
adc
pushf
mov
and
lods
cmp
inc
pop
sub
cmp
dec
lock
mov
test
jmp
jge
sbb
jecxz
cmc
ljmp
shlb
and
divb
mov
add
push
lcall
fadds
outsl
mov
pop
push
fwait
cltd
pop
mov
mov
and
call
test
imul
sbb
lods
jae
stos
rorl
nop
scas
jge
mov
push
mov
pop
in
push
push
pop
jg
or
in
popf
or
js
jle
and
mov
cmc
aas
out
test
mov
cmp
pusha
xchg
popf
jl
in
dec
filds
add
or
push
push
add
mov
xchg
pop
ljmp
fdivs
dec
jmp
stc
lcall
cli
pushl
scas
and
push
pop
mov
fildll
push
test
inc
dec
clc
out
xor
cli
lods
jg
movl
mov
xor
movsl
aad
loopne
or
lods
pop
loop
dec
outsl
es
aas
push
sbb
int
mulb
call
nop
jge
clc
cmc
lret
stc
pop
cmp
lods
jbe
popf
dec
rorl
mov
das
rclb
inc
pop
icebp
inc
xchg
ret
shlb
pop
bound
cli
incl
daa
cmp
mov
dec
fists
dec
adc
loop
mov
xor
pushl
subb
aaa
data16
and
popa
jno
int
repz
dec
das
sar
xchg
cmpsb
mov
jo
iret
jns
add
add
jg
push
cmp
cs
jo
mov
imul
mov
pop
sbb
sarb
packssdw
movsb
ret
cmp
fsts
mov
ret
div
fs
xor
xchg
mov
hlt
mov
jno
jecxz
mov
pop
out
inc
jnp
and
and
mov
xor
stos
sbb
add
pop
scas
clc
call
mov
lret
xor
fidivrl
int3
and
aam
mov
lock
sub
mov
lock
sarl
std
lahf
jmp
cli
pop
lahf
out
incb
mov
loope,pn
jns
push
pop
jmp
adc
out
daa
cmp
adc
daa
xchg
add
dec
bound
fldenv
mov
mov
mov
stc
inc
add
in
push
loopne
jg
decl
pop
mov
jns
subl
xor
loope
testb
jmp
jmp
pop
dec
data16
ds
sub
ds
punpcklwd
js
mov
sub
ljmp
pop
xchg
cli
jbe
fcompl
in
call
daa
jnp
lods
in
or
test
pop
pop
lods
dec
or
jmp
push
adc
stos
stc
imul
ja
mov
das
mov
xor
or
inc
jo
mov
js
cmpsl
inc
inc
mov
push
mov
std
push
mov
dec
xor
mov
je
or
sub
pushl
sahf
loop
sahf
inc
mov
adc
sub
popf
lahf
jmp
xchg
outsb
arpl
pushl
add
jp
sub
and
mov
add
js
jl
push
and
push
mov
pop
jb
pop
mov
call
pop
nop
pop
aam
mov
scas
nop
jne
movsl
mov
inc
push
rcll
cmp
test
cmp
pushl
cs
mov
xchg
popf
enter
addr16
mov
daa
cs
scas
dec
test
push
test
sti
iret
cmp
mov
lods
push
push
mov
sbb
pop
cmpl
adc
pop
lods
jmp
ljmp
mov
cmp
sbb
inc
out
xor
add
gs
fld
cmp
cmp
pop
je
insl
std
sti
movsb
iret
jg
xchg
mov
mov
loop
filds
gs
das
out
jae
aas
jo
mov
call
imul
subl
mov
jle
jmp
mov
xchg
aam
jb
stc
lods
pop
cwtl
or
mov
aad
add
mov
pop
filds
rorl
pop
ret
lret
outsl
dec
aas
lods
lcall
pusha
jg
fisttpl
push
and
je
inc
pusha
inc
cmpb
xchg
loop
call
ja
es
iret
mov
aam
fcmovbe
and
cmpsb
cwtl
pop
imul
jp
ljmp
js
imul
xorb
sarb
lret
push
mov
pusha
jg
insb
and
push
inc
xorl
add
cmpsl
aas
and
mov
insl
mov
call
test
pop
mov
jecxz
sbb
negb
push
addr16
imul
jbe
xchg
decl
mov
js
lahf
jo
jl
push
movsb
aad
ja
mov
ret
mov
jmp
stos
xor
fwait
loop
jg
cmp
jbe
adc
mov
jg
pop
jmp
sbb
cmpb
ja
lret
inc
sub
cmp
or
cli
jmp
sub
inc
or
loope
pusha
lds
push
ds
rcrb
xor
cmc
mov
inc
ret
sahf
push
cmpsl
cmp
xor
cwtl
aad
inc
notb
cmp
inc
dec
add
pop
fdivrl
aam
les
mov
cmc
adc
inc
loopne,pn
jmp
clc
lcall
jmp
inc
lds
xor
lock
push
clc
sbb
hlt
pushl
inc
lret
cmpsl
cmp
xchg
jns
cmp
inc
stos
mov
sarb
dec
in
pop
jge
push
sub
incl
inc
iret
test
sarb
xchg
les
jecxz
repnz
ss
das
iret
pop
and
adc
movsl
cmp
or
icebp
mov
lods
cltd
aad
std
out
jne
adc
loop
stos
mov
pop
add
or
jmp
mov
icebp
mov
insl
mov
inc
mov
push
imul
mov
call
dec
cld
pushf
movsb
test
inc
les
lods
mov
or
sbb
out
and
decl
adc
cli
popa
pop
cmpsl
out
push
dec
jle
hlt
daa
cmp
dec
loope
loopne
in
adc
push
mov
ljmp
cmc
pop
xor
mov
icebp
addl
add
xchg
dec
lods
lock
add
gs
out
ljmp
adc
add
pop
inc
add
push
mov
push
jne
inc
mov
add
mov
mov
mov
pop
jp
jno
loope
pop
in
cmp
push
dec
dec
ljmp
gs
mov
cmp
or
push
xchg
inc
rolb
jae
dec
push
pushf
decl
pop
jge
imul
jo
das
cmp
ret
incl
dec
push
mov
push
fcoml
test
addr16
and
xor
lcall
insl
aas
add
lret
xchg
iret
pop
mov
push
aaa
and
pop
xchg
rolb
call
adc
out
mov
popa
mov
lea
cld
mov
pop
mov
pop
lahf
decl
or
hlt
stc
sub
jne
or
mov
jnp
sti
or
repnz
or
xchg
lods
inc
cmpsl
inc
adc
xchg
adc
mov
out
sarl
outsl
xor
jg
addl
std
sbb
sbb
inc
in
mov
jg
ljmp
out
ror
dec
cs
mov
sbb
jbe
dec
mov
cmp
pushl
mov
xlat
lret
fisttpll
cltd
xchg
xchg
sub
shll
sti
popf
lods
xchg
mov
incl
cld
decl
lock
add
sub
loopne
decl
ss
cmp
std
iret
add
jmp
scas
mov
xor
sub
decl
cmp
xchg
not
xchg
and
test
jp
jecxz
pop
jbe
pop
pop
inc
and
jl
add
add
sbb
fldt
mov
pushl
mov
xchg
push
adc
pop
cli
jnp
addr16
mov
incl
pop
cmp
inc
push
nop
sahf
jno
insl
adc
je
mov
ljmp
mov
sbb
and
lcall
mov
and
call
pop
int3
int
or
ret
mov
or
sbb
fwait
pushl
mov
mov
sar
js
jmp
mov
dec
adc
fs
mov
loop
xor
xchg
pop
sahf
and
lods
jo
pop
icebp
js
push
aas
xchg
inc
inc
cmp
pop
pushl
loop
icebp
dec
leave
adc
mov
mov
ljmp
sbb
fbld
inc
cmp
cmc
enter
mov
mov
fmuls
inc
mov
adc
sub
sbb
pushl
jno
jbe
pop
jl
cmp
push
popf
aad
sub
loopne
push
imul
jg
out
jbe
jge
mov
fucom
mov
mov
pop
pushf
in
jns
push
addr16
sub
sub
lcall
mov
scas
pop
cltd
nop
xor
jmp
mov
cli
push
fucom
sub
pop
or
lcall
push
mov
shlb
mov
mov
andb
lcall
mov
clc
sbb
cld
push
rolb
push
xchg
inc
jns
popa
sub
lcall
arpl
or
xchg
int3
or
push
cmp
cmp
pop
and
mov
and
mov
jle
lods
pop
aaa
xchg
sti
clc
cmpsl
adc
popf
cmp
or
pop
mov
jg
jmp
jnp
sbb
pop
push
neg
xchg
std
decl
clc
adc
adc
jmp
cwtl
subl
jae
pop
adc
mov
mov
add
xor
or
lds
arpl
lds
test
ljmp
das
cmp
mov
and
xchg
fbld
or
xchg
mov
pushl
fs
icebp
or
data16
pop
add
adc
fwait
pop
mov
iret
sbb
decl
cmp
dec
mov
pop
push
xor
and
mov
push
mov
xchg
mov
aad
call
cmc
js
fs
movsl
xlat
fmuls
testb
in
bound
inc
add
dec
lcall
adc
int
data16
sbb
dec
push
xor
or
adc
cmpsl
jle
mov
lahf
arpl
pop
lods
test
jns
lcall
dec
jne
adc
icebp
add
adc
rclb
sbb
cmp
mov
mov
mov
je
mov
jp
cltd
push
in
push
push
pop
xchg
xchg
nop
stos
smsw
mov
pushf
cwtl
sub
popf
add
push
in
adc
sbb
call
stos
jle
adc
and
mov
repz
and
sbb
fwait
jmp
jle
popa
mov
lcall
aad
push
add
xchg
jl
cltd
xchg
les
fisttpl
add
dec
imul
loopne
xchg
push
cli
fucomp
test
stos
xchg
repz
xchg
test
cli
fdivp
push
cmp
hlt
cli
mov
int3
xchg
out
movsl
sbb
pop
movsl
cmp
outsb
in
push
push
mov
cmp
pushf
jecxz
jg
dec
fcoml
in
dec
arpl
pop
pop
inc
pop
xlat
mov
jge
or
dec
sub
push
jge
inc
mov
sub
inc
pop
out
mov
shll
and
add
in
cmp
sbb
jmp
aad
mov
jmp
pop
ja
sbb
test
lret
inc
or
jmp
lcall
and
icebp
sub
test
push
xor
push
hlt
sub
dec
cli
mov
fs
aaa
std
aas
pop
add
fidivrs
xchg
adc
leave
mov
cmp
pop
xor
aas
cmp
cmp
std
mov
mov
or
or
idiv
xor
lcall
rcr
in
adc
pusha
add
loop
lcall
incl
and
jle
inc
js
stos
or
sarl
jle
icebp
int
sti
push
xchg
aaa
repz
adc
cmp
ds
cmp
std
sub
pushf
sub
mov
jne
xchg
xchg
decl
add
fistps
mov
jg
pop
dec
das
test
push
adc
jmp
lea
mov
lret
or
mov
mov
xlat
cltd
or
iret
mov
shll
mov
sahf
dec
negb
cs
ss
call
popf
jmp
faddl
dec
pop
xor
lods
data16
and
call
loopne
lcall
mov
ja
std
xchg
test
pop
inc
mov
xlat
aas
mov
fmuls
pop
or
imul
push
cmp
adc
js
cmp
xchg
aaa
icebp
jecxz
mov
lahf
gs
lcall
cmovns
or
sbb
js
inc
and
test
gs
and
or
adc
in
sbb
ds
push
or
cmp
sahf
xchg
ds
ja
xchg
mov
sbbb
sub
stos
add
decb
ljmp
jmp
test
inc
mov
ret
inc
jbe
mov
test
xchg
das
scas
xchg
les
sub
pushl
sub
in
push
sbb
adc
jb
ficoms
push
jmp
out
adc
gs
decl
rorl
icebp
jne
call
fsubrl
push
dec
mov
pop
cmp
sar
idivl
mov
inc
mov
in
out
xchg
push
mov
cmp
push
std
cmp
xor
cli
imul
xor
jp
mov
pushl
and
fs
dec
mov
fstpt
add
mov
decl
stos
inc
ffree
jb
out
pop
test
xor
dec
jg
aas
stos
xor
add
add
mov
out
ljmp
je
push
rcrl
mov
inc
rcll
jno
xor
roll
lea
incl
xor
jne
jmp
push
movsl
mov
pushf
xor
fdivs
push
mov
fdivl
mov
xlat
sbb
sbb
and
pop
aaa
mov
movsb
sarb
fnstenv
and
pop
iret
jne
adc
decl
mov
cmp
adc
scas
loop
sub
loopne
xor
or
int
sub
mov
pop
ja
aam
push
jb
push
pop
sahf
inc
cmp
ds
jmp
dec
es
sar
mov
jg
or
add
xchg
adc
pop
hlt
call
test
mov
out
loope
jbe
icebp
int3
inc
sbb
and
sub
inc
in
lcall
add
inc
xchg
in
out
iret
fcmovnbe
pop
sub
jp
xchg
jae
js
cmp
incl
cmpsb
scas
jbe
icebp
int3
cmp
or
or
repz
ret
cmpsl
xchg
ds
xchg
stos
ljmp
sbb
das
sub
mov
mov
testl
imul
mov
movsb
imul
mov
cli
jno
cmpsw
dec
cmp
test
adc
call
lret
push
jmp
es
cmp
and
jge
cld
push
sub
call
nop
test
imul
jg
sarl
ds
push
scas
pushf
sub
int
or
fmuls
scas
cli
pushl
pushf
mov
xlat
ret
dec
jmp
je
cmpsb
sahf
and
decl
cmpl
fisubs
fs
out
mov
mov
jae
dec
call
mov
adc
addr16
mov
cmpsl
in
dec
push
stos
push
mov
cld
fbstp
lds
aad
add
lea
stos
sub
pop
push
push
push
mov
and
xchg
pusha
xor
sub
jmp
inc
xlat
jmp
mov
xchg
and
or
aaa
iret
arpl
add
mov
mov
test
ljmp
cmpsb
xchg
push
mov
in
push
jb
xlat
in
mov
test
mov
cld
pushl
adc
mov
lods
test
cmp
jg
push
stos
lods
popa
clc
sbbl
decl
mov
and
adc
pop
movsb
popf
cmc
shll
and
adc
cmpsb
push
adc
out
mov
ret
in
add
pop
stos
lahf
sbb
lea
aas
mov
fdivrs
push
inc
sarl
cmp
jmp
iret
xchg
xor
outsl
push
sub
out
push
loop
adc
addps
jns
jmp
fstps
nop
jmp
lods
shll
clc
lods
sub
add
xchg
or
push
mov
pop
push
and
cwtl
imul
mov
in
lods
testl
scas
xchg
sub
or
mov
sbb
movsb
xchg
repnz
les
stos
push
inc
adc
jnp
call
leave
push
sbb
in
jge
push
xor
pusha
call
lret
clc
jo
add
bound
or
imul
gs
rorb
dec
jg
in
call
lret
andl
rcll
loope
pop
sti
mov
ljmp
push
test
sub
repnz
cmpsl
rcrb
lea
pop
jge
and
pop
ja
arpl
pushl
outsb
outsl
jne
das
push
dec
inc
leave
push
or
sbb
sub
sbb
test
out
push
mov
call
repz
mov
notb
arpl
xor
inc
add
pop
dec
jmp
repz
std
adc
xor
iret
jle
sbbl
lcall
les
or
adc
fsubs
cli
push
ret
push
sub
decl
stos
add
stc
rorl
add
add
pop
add
lret
inc
fucomip
sbbb
out
std
pushl
dec
ljmp
jle
xor
mov
call
add
cld
incl
mov
pop
cmp
xor
add
inc
pop
insl
cmc
mov
add
cs
es
scas
cli
mov
and
icebp
cwtl
stos
pop
stos
add
std
sbb
push
sbbb
dec
mov
jmp
mov
add
fcmove
push
sub
dec
imul
cli
int
jmp
jne
push
dec
hlt
mov
fnstenv
pop
pop
jno
adc
mov
and
or
pop
xor
subl
add
sub
mov
fwait
nop
mov
jo
jb
lcall
mov
mov
dec
sarl
cwtl
je
jle
push
insl
mov
cmp
or
add
ret
je
push
jae
add
pop
lock
test
xchg
fs
dec
dec
jl
dec
push
mov
inc
or
std
data16
repz
aad
lods
in
mov
mov
hlt
jecxz
cmp
push
sahf
lea
mov
das
xchg
add
jnp
mov
js
jg
add
dec
movsb
movsl
shl
xchg
or
jne
add
push
out
out
jg
pushf
aam
jp
in
int3
insb
cltd
cwtl
pop
mov
inc
mov
push
push
es
add
pop
sbb
mov
mov
lea
iret
inc
and
and
sub
filds
mov
mov
and
jmp
mov
cld
sbb
push
xchg
mov
decl
jae
fisubrl
je
adc
xchg
jnp
inc
clc
cmpsb
sbb
push
ds
loop
imul
imulb
add
in
adc
icebp
leave
inc
mov
into
adc
stos
popa
xchg
call
enter
lcall
pop
inc
cmp
push
jb
mov
xor
adc
test
cmp
mov
call
mov
sub
inc
lret
data16
mov
sar
mov
lock
notb
adc
std
inc
popa
out
sti
mov
mov
enter
adc
ljmp
xor
ljmp
xchg
cmp
jbe
add
test
jge
lods
xor
cmp
add
cmpsl
or
rcrb
mov
or
ret
sub
or
pop
cmp
jns
jmp
das
mov
pop
xchg
lock
ds
in
lds
xchg
hlt
cmpsb
mov
xchg
fistpll
lcall
mov
jecxz
xchg
aaa
adc
fcom
xchg
mov
aad
mov
and
lcall
loopne
adc
xchg
cmc
cld
sub
sub
cltd
or
es
pushl
mov
stos
pop
jo
push
sbb
cmp
loop
lret
ds
mov
cli
mov
inc
jl
jg
bswap
dec
fs
push
popf
in
aaa
adc
int
push
jge
sahf
stc
jb
and
pop
dec
je
jmp
cld
jg
mov
mov
out
iret
push
xor
xchg
and
clc
lock
xchg
test
pushl
jb
push
pop
int
xchg
xor
mov
add
adc
stos
and
or
ljmp
loop
das
adc
outsb
fs
repz
or
sub
xchg
jl
lcall
xchg
fwait
pop
cltd
pop
xchg
sub
xor
mov
je
adc
add
lret
jmp
icebp
sub
xchg
inc
fdivrs
ja
inc
add
decl
push
and
bound
dec
pop
xor
pop
pusha
lods
dec
cs
test
lcall
pop
jmp
jno
sub
cmp
and
cli
repz
add
xchg
jmp
mov
sub
push
xchg
mov
scas
shrb
jmp
jp
xor
test
loopne
add
ljmp
sbb
xchg
lahf
in
rcrb
loop
mov
andl
mov
and
xchg
ljmp
pop
inc
push
mov
adc
pop
mov
adc
or
mov
mov
push
sub
or
int3
out
adc
loopne
push
mov
adc
stos
add
and
ljmp
imul
push
fldt
mov
cmp
bound
ljmp
pop
cmpsl
fmull
rcr
je
lock
repz
ret
and
and
xlat
push
out
push
mov
lea
add
sbb
adc
out
cli
lds
sahf
scas
lret
popf
ja
adc
adc
inc
fisubrl
cwtl
out
or
ljmp
js
xchg
lahf
out
mov
pop
dec
lods
cmpsb
pop
cli
pop
ficoml
call
movsl
fistpll
mov
pop
lahf
cmp
cmp
les
cmp
xlat
jp,pt
mov
xor
lods
sub
lock
push
fiaddl
in
gs
icebp
sub
jle
sbb
lcall
out
sahf
fwait
mov
push
sahf
add
loope
sbb
or
insb
repz
std
fmuls
cmp
push
or
pop
push
jb
test
add
lds
add
aad
jmp
outsl
cmp
mov
sub
sub
scas
lcall
mov
and
mov
stos
pusha
cmp
push
push
xor
fldpi
pop
pop
adc
stos
push
mov
loopne
xchg
push
and
std
les
sbbl
mov
in
jmp
fildl
out
xor
add
dec
dec
xchg
fcmove
aad
imul
mov
mov
es
pop
sbb
and
outsb
movsl
pop
sub
ja
and
xchg
call
cmpsl
mov
and
sub
push
lret
sub
or
lods
xor
jmp
mov
sub
call
arpl
dec
dec
mov
mov
add
and
insb
cmp
mov
sti
dec
stc
or
enter
fstl
iret
movsl
mov
cmovnp
pop
mov
aaa
or
cli
xchg
mov
jnp
push
inc
mov
sbb
mov
pop
lcall
add
in
test
jl
cmc
jmp
push
push
push
adc
sarb
call
mov
xor
xor
mov
aam
jb
push
cmp
fsubrs
push
sahf
cmp
lea
in
xlat
js
popf
jmp
adc
jb
pop
js
xor
and
adc
jmp
fcoms
xlat
arpl
inc
fidivl
movsl
xor
or
inc
out
mov
stos
pusha
push
push
sbb
dec
mov
pushf
jns
cmp
cwtl
xchg
sub
icebp
arpl
decl
ds
cmp
mov
icebp
shrb
fstl
mov
sbb
pop
repnz
fistpl
cmp
jo
enter
sar
decl
addl
push
es
lret
or
mov
mov
and
insb
inc
xchg
and
aaa
cld
outsb
std
add
mov
scas
pop
sbb
cmp
call
inc
dec
lock
mov
and
and
xchg
hlt
xchg
add
incl
loope
lahf
repnz
mov
xchg
inc
adc
inc
loopne
testb
mov
ljmp
add
add
and
iret
adc
sbb
inc
sbb
in
stc
test
call
cmp
pop
push
jmp
movsb
loop
xor
ja
push
xor
dec
cwtl
adc
insb
pushf
fcompl
cmp
and
test
mov
lods
out
leave
push
or
pop
loope
ret
repz
mov
dec
cmp
mov
sub
aad
mov
icebp
pop
int
call
out
xchg
dec
sbb
cmp
inc
lock
cmp
cs
nop
cmp
xchg
insl
sub
incl
shll
fcomip
sbbb
xlat
and
idiv
stos
push
sub
push
mov
pop
sub
gs
test
incl
gs
cs
mov
mov
pusha
outsl
arpl
sbb
push
lods
mov
divb
sub
scas
inc
ds
cmp
mov
jae
sub
call
outsb
ficompl
or
push
in
das
and
xor
adc
int3
repz
pushf
pop
imul
loop
mov
incl
cltd
into
pushf
ficompl
scas
out
jmp
imul
ficoms
decl
and
cltd
inc
fwait
xor
test
sbb
mov
loope
push
clc
push
jg
inc
jmp
test
in
jae
pop
imul
mov
rol
outsb
sub
push
sbb
stc
mov
outsb
xchg
rorb
in
or
out
ret
aaa
ljmp
enter
shll
push
mov
loopne
push
enter
mov
call
add
shlb
mov
fnsave
mov
or
mov
jne
push
dec
js
jg
mov
and
mov
repnz
sbb
jne
call
cmc
sbb
sub
mov
mov
int3
cmp
imull
push
xor
inc
sahf
and
ljmp
clc
xchg
rolb
pushf
cmp
sbb
dec
push
mov
ljmp
ljmp
shll
or
mov
xchg
mov
xchg
or
idivl
loop
call
std
jns
and
pop
xchg
xchg
mov
icebp
out
lods
sti
int3
stos
lods
inc
call
or
repz
fwait
les
mov
jl,pt
adc
test
xor
add
add
pushl
or
pop
outsl
cwtl
int3
mov
push
mov
out
ss
inc
pop
lcall
iret
jg
jmp
and
push
or
cmp
jno
lcall
ljmp
pushl
cmp
outsb
dec
mov
push
jmp
xchg
lea
loope
mov
ljmp
dec
mov
aam
cmp
inc
cmpsl
dec
jns
inc
and
sar
incl
jae
push
scas
out
mov
dec
stos
mov
cwtl
sub
dec
adc
aaa
das
repz
jg
incl
mov
insb
xor
int
cmp
push
test
jne
repnz
roll
sbb
imul
adc
xchg
jne
repz
rcl
call
std
cmpsl
iret
and
std
clc
push
mov
inc
leave
mov
lcall
call
xchg
repz
jns
dec
sub
cmp
test
inc
ds
icebp
jnp
jbe
sub
jno
in
cld
mov
or
arpl
mov
pop
mov
mov
ljmp
sbbb
dec
jno
sbb
xchg
xor
or
mov
mov
gs
and
add
push
push
inc
xchg
inc
pop
mov
mov
cmp
adc
cmpb
ljmp
xchg
js
and
xchg
out
mov
and
dec
mov
dec
repz
mov
in
arpl
xchg
sbb
xchg
decl
stos
push
mov
in
rcrl
aad
loope
popf
scas
and
decl
and
xchg
jns
popa
pop
add
loope
or
dec
dec
leave
das
ja
pminub
je
or
ljmp
flds
movsl
push
cmp
stc
inc
adcb
mov
insb
cmc
sar
jmp
femms
add
mov
jno
iret
jbe
imul
sbb
test
inc
jl
iret
scas
or
xchg
les
jmp
and
add
out
fwait
mov
ss
push
dec
lret
cmp
test
js
jne
in
ret
mov
xor
mov
aad
add
jg
fdivrs
loop
cld
jle
mov
scas
lcall
movsl
sub
scas
cli
decl
mov
std
push
dec
mov
jmp
jg
call
mov
mov
shll
mov
stos
inc
mov
push
out
test
ds
bnd
repz
loopne
adc
repz
out
loop
mov
shl
cmp
incl
fsts
adc
pushf
ljmp
and
inc
out
cmpsl
shll
push
inc
cld
fimull
add
pusha
data16
adc
in
cmp
jmp
lret
push
add
mov
sarb
xor
pushl
rclb
or
mov
mov
and
insl
arpl
pop
test
add
inc
ret
mov
xorb
jg
ret
push
cmpsl
dec
push
fldl
jmp
ror
and
sbb
repnz
test
adc
cmp
mov
movl
lods
or
add
dec
add
ret
jle
or
das
ret
inc
sbb
jecxz
ljmp
mov
dec
inc
jge
mov
adc
add
leave
cmp
in
in
add
fdivr
incl
and
cltd
aam
xchg
inc
xor
sbb
add
jmp
mov
popf
incl
lock
stos
inc
fildl
dec
or
les
xor
decl
insb
jp
sahf
fcomps
push
jmp
push
pop
xlat
adc
mov
scas
loope
inc
push
decl
lock
mov
lcall
push
lea
gs
not
lods
xlat
stos
fxsave
js
sub
pusha
in
add
push
subl
pop
pop
cmp
repnz
dec
shlb
and
fxch
push
pop
sar
sbb
or
aas
adc
jg
or
cwtl
pop
dec
sub
out
dec
lret
repz
adc
aam
cmpsb
pushl
rorb
xor
stos
mov
adc
sahf
adc
dec
addl
push
das
mov
sbb
mov
test
mov
mov
mov
les
mov
lds
mov
inc
data16
test
fcomip
call
test
mov
fnsave
insb
pop
or
test
cmpsl
pushl
sub
and
mov
filds
popf
pop
ret
push
cmc
add
inc
jbe
mov
sbb
ljmp
fiadds
xchg
fldenvs
dec
add
inc
ret
sub
cmp
pushl
push
or
ret
jns
push
out
fmulp
ljmp
jns
std
mov
bound
inc
xchg
dec
jmp
cmp
inc
insl
test
or
mov
push
jge
sbb
add
xchg
repz
out
dec
mov
lahf
and
movb
mov
jmp
mov
and
or
or
aad
or
mov
adc
roll
loop
cli
decl
pop
popa
jp
int3
mov
jns
cltd
jle
cmpsb
incb
std
xchg
imul
ljmp
push
subb
fsubrl
pop
dec
or
mov
or
or
jb
dec
sarb
in
andb
add
fdivl
imul
pushf
aaa
pop
xchg
push
in
out
jne
pop
loopne
incl
mov
js
sub
lcall
jmp
lods
addl
lock
ss
add
aam
jp
sbb
and
call
inc
mov
orb
rcll
inc
fdivrl
sub
mov
mov
adc
cmp
pop
imul
pop
add
lods
rorb
lods
jle
lcall
push
mov
es
loop
cmp
xorps
cli
rolb
or
adc
incb
stos
aad
and
adc
inc
cmpsb
call
les
adc
popa
mov
loopne
xchg
insb
cmp
repnz
lret
lods
cmp
sub
dec
xor
scas
das
push
pop
les
or
inc
dec
das
movsb
mov
ss
mov
ds
std
cmp
lcall
repz
es
fisttps
cmc
pop
mov
test
outsb
jg
cmp
xchg
jne
and
dec
mov
sbb
jg
incl
sub
scas
push
ficomps
icebp
popa
aad
adc
icebp
int
popaw
fcmovu
ja
sub
add
push
scas
ljmp
sub
loop
mov
fsubl
add
adc
in
std
loop
inc
adc
mov
inc
push
xchg
push
rcl
jnp
jle
jmp
dec
mov
jmp
orb
jmp
jl
stos
mov
mov
mov
pushl
popa
enter
lock
mov
cmp
addr16
push
cwtl
or
xor
in
ret
jmp
push
pop
test
jp
pop
sub
bound
or
xchg
jne
mov
stc
out
imul
push
lods
js
pop
stos
fcoml
lcall
jae
gs
stc
pop
mov
add
inc
fdivrs
mov
push
push
mov
arpl
push
dec
sub
test
stos
add
fdivrp
pushl
jns
cmp
mov
push
lcall
xchg
sbb
fcos
arpl
bound
movsb
push
leave
cli
lcall
int
in
mov
shr
push
or
dec
cwtl
cmp
stos
mov
incl
pop
dec
push
push
inc
shrb
xor
pop
stos
sub
scas
pushl
scas
clc
ds
xchg
imul
out
mov
fldenv
cmc
mov
add
lods
sahf
mov
stc
pop
cmp
sub
and
push
cmp
call
push
stos
bound
dec
out
jnp
adc
add
ds
incl
pop
call
mov
das
ljmp
mov
ficompl
stos
jp
dec
bound
mov
cmp
push
mov
xor
inc
ljmp
lret
ss
leave
lock
cld
and
dec
or
and
imul
pop
push
insb
movsl
hlt
ja
mov
cmp
int
xor
push
fsts
scas
jne
mov
ret
mov
incl
sub
xchg
pop
insl
cmpl
cmp
jge
jg
push
cltd
loopne
out
or
mov
lods
xchg
lods
aaa
ret
enter
bound
xor
incl
inc
into
fsub
adc
adc
cmpsl
and
cli
adc
xchg
mov
jg
jg
out
jg
xchg
xchg
pop
icebp
jno
add
add
dec
xor
sub
pushl
push
mov
mov
jg
jno
adc
test
call
dec
dec
rorl
fdivs
inc
and
cs
into
jecxz
incl
or
pusha
sbb
xchg
hlt
and
and
inc
inc
dec
xchg
pmulhuw
fcomip
lcall
mov
xchg
xor
sub
out
mov
jbe
jg
jg
mov
xchg
mov
stos
or
dec
stos
mov
sub
mov
ret
scas
int3
pop
sub
call
push
lods
xchg
mov
scas
dec
roll
xor
test
push
xchg
jmp
mov
jnp
sub
in
out
rcrl
xor
aaa
xchg
fs
jg
shr
shl
jne
push
lcall
fcoml
sti
mov
adc
mov
cmpsb
sbb
cmp
imul
sbb
ds
popf
ljmp
and
add
pushf
cs
ret
inc
xor
scas
cmp
mov
xor
and
les
mov
mov
subb
dec
xor
sti
cmpsb
and
cs
add
aad
inc
mov
outsb
jmp
xchg
dec
lahf
jmp
push
pop
shrb
scas
cli
xchg
push
and
idivb
ret
cld
mov
mov
addb
ja
pushl
dec
jle
push
or
call
inc
mov
cmp
rclb
sbb
bound
mov
sbb
std
push
cmc
dec
data16
or
add
jecxz
mov
movl
add
arpl
sub
dec
jno
aad
and
and
lcall
add
hlt
pop
cs
inc
xchg
jmp
and
cmp
insb
out
cmp
std
loope
jmp
pushl
pop
cmp
loop
insl
in
rcrl
aaa
cmp
fcoml
lea
repz
dec
jnp
adc
cmp
outsl
or
lahf
jecxz
sbb
sbb
or
shrb
lds
les
inc
aaa
ljmp
adc
rorl
lret
incl
jl
dec
rorl
shll
dec
jl
lods
push
or
ficompl
sbb
mov
dec
jmp
imull
jo
jbe
inc
in
mov
imulb
js
dec
test
push
mov
push
cltd
fcom
inc
jecxz
fnstenv
je
adc
fsts
mov
push
mov
adc
loopne
lret
xchg
stos
pop
loope
or
leave
adc
dec
insb
mov
sub
pop
xchg
test
insl
popf
or
xlat
push
mov
push
cmp
daa
cmp
hlt
mov
mov
xchg
mov
sub
xchg
rol
push
jp
lcall
test
xchg
xchg
push
cmp
fucomp
outsb
in
sub
jle
push
les
jmp
sbb
ja
dec
xchg
mov
mov
in
xchg
push
pushl
xchg
cltd
or
mov
mov
sbbl
cmpsb
addb
pop
cmp
sub
rcr
movsl
ds
xor
daa
or
inc
push
lods
push
cld
repnz
push
cmc
mov
or
ret
inc
dec
push
sbb
lahf
mov
stc
jle
cmp
adcb
jo
mov
jge
mov
jmp
test
xor
push
es
in
mov
cmc
fnsave
rolb
into
sbb
xorl
in
mov
sar
jmp
mov
leave
dec
je
aaa
inc
jge
jg
jg
mov
dec
pop
test
and
pop
call
inc
test
jle
mov
pop
pop
mov
jp
iret
or
lret
adcb
and
mov
das
addl
mov
pushl
xchg
mov
add
push
mov
scas
sar
pop
jnp
inc
pop
hlt
loop
or
push
sub
sbb
xor
fimull
aad
rcrb
jo
nop
pop
xchg
cmp
push
sti
add
cs
daa
cmp
les
inc
call
js
dec
cmp
mov
mov
leave
es
mov
leave
shrb
and
shll
test
stc
neg
push
shlb
xor
dec
inc
mov
inc
mov
incl
arpl
addl
aas
cmp
mov
fsts
cmc
fidivl
xlat
dec
fimuls
in
lret
fisubl
outsl
mov
xchg
paddb
ljmp
ljmp
xor
fs
and
fadd
std
jnp
mov
jno
mov
push
jg
mov
rorb
or
and
cmc
sub
mov
cmp
or
clc
ljmp
clc
dec
mov
push
lcall
mov
mov
call
arpl
out
lret
mov
jmp
out
js
dec
sub
shlb
push
xor
mov
cmp
mov
ljmp
rcrb
enter
enter
mov
sub
icebp
fdivr
fildll
leave
mov
std
mov
pusha
sbb
or
pop
add
cmp
jmp
out
jl
jmp
jae
push
je
decl
fisttps
xor
ror
pop
nop
aad
fadds
jge
mov
shl
das
mov
mov
or
jle
cwtl
loop
sti
inc
xor
cmc
incl
or
or
fwait
and
inc
aaa
push
sahf
loop
icebp
dec
xchg
xor
adc
sarb
std
sub
fdivrs
std
lods
sub
rcl
pop
out
imul
ud0
lods
mov
mov
lock
mov
jecxz
push
jge
pop
cmc
ljmp
out
fs
pop
int3
mov
sbb
int
in
mov
xor
aas
push
and
dec
add
dec
xchg
sti
stos
int
scas
mov
mov
mov
enter
add
add
sbbb
leave
dec
mov
mov
mov
outsl
add
xchg
inc
pusha
cmpsb
add
insl
fdivs
ds
ljmp
mov
lahf
push
call
cmpsl
mov
in
pop
aaa
mov
aas
les
mov
push
sub
cmp
lock
jbe
push
mov
dec
fcomip
call
push
call
add
mov
imulb
out
stos
xchg
jb
adc
pushl
fwait
push
or
lret
and
mov
inc
push
ljmp
ret
cs
incl
ja
loopne
adc
sub
sahf
js
xor
fistps
cmovns
fcomip
and
jae
orl
pop
movsl
pshufw
mulb
in
stc
cmp
mov
fidivrs
int3
push
xchg
loopne
xchg
inc
cwtl
arpl
scas
neg
mov
call
in
insl
or
fwait
push
jbe
sbb
das
repz
imulb
cmp
leave
and
ja
ljmp
sahf
ret
push
cmp
enter
cmc
pop
dec
cmp
pop
iret
adcb
xchg
dec
jo
imul
or
lahf
je
loope
sbbb
in
gs
call
pusha
test
movsb
xchg
in
sub
jno
icebp
cmp
pop
pusha
pop
ljmp
rcr
sub
popa
outsl
sbb
rorl
adc
xchg
inc
adc
call
sbbl
lcall
and
lock
jg
mov
lret
cmpsl
xchg
add
xlat
icebp
ljmp
inc
mov
fadd
pop
push
or
xchg
mov
fcoms
jne
xorl
mov
ret
xchg
fbstp
int3
push
clc
call
push
mov
test
rcrb
inc
pushl
push
test
mov
pushf
pop
sub
outsb
data16
push
mov
push
loop
rcr
mov
clc
push
in
jns
cwtl
insb
test
call
fs
decl
mov
fnstsw
inc
jmp
mov
sub
push
notb
hlt
push
push
stos
sti
sub
sbb
add
std
mov
add
into
inc
push
movsb
mov
cmp
out
ljmp
or
pop
and
pop
decl
lret
outsb
imul
mov
sbb
lcall
sub
jg
int3
jp
shll
scas
in
scas
popf
scas
movsb
pop
mov
cs
ss
call
sub
enter
pop
xor
sub
dec
ljmp
jmp
dec
cmp
lcall
jne
shll
daa
mull
cmp
xbegin
adc
gs
mov
pop
mov
jb
and
out
out
jge
xorl
mov
in
inc
fisttpll
lcall
fucom
mov
ds
test
sub
pop
setbe
lods
fnsave
decl
and
ret
add
std
mov
rcrb
test
add
fst
mov
mov
cmp
bound
and
lret
add
decl
mov
repz
data16
int3
fdivrs
push
adcl
cmp
xchg
mov
jge
mov
add
mov
xor
sub
dec
pushf
incl
lea
sub
adc
xor
pop
imul
cmp
out
or
or
cmp
test
ret
cli
and
negb
add
jl
push
push
pop
fsubrs
es
inc
gs
call
inc
mov
mov
jbe
dec
sub
dec
pushf
fnstcw
pushl
xor
mov
sub
outsb
ffree
sbb
outsb
ljmp
and
sub
adc
cwtl
ja
int3
stos
mov
cmp
inc
lcall
incl
shrl
ret
gs
sbb
mov
xlat
jmp
lods
pusha
mov
pop
xorl
call
push
daa
xchg
and
lock
rcll
fbld
ljmp
rcrl
inc
movsl
mov
jmp
jnp
loope
pop
dec
and
out
popf
or
jmp
mov
rcrb
mov
or
call
add
add
adc
movsl
in
fwait
pop
jge
cld
imul
ljmp
es
aam
push
add
mov
das
or
leave
fimuls
mov
ljmp
decb
cli
mov
adc
in
mov
adcb
pop
testl
cmp
adc
add
pop
sub
mov
inc
pop
ja
scas
loop
shr
or
jmp
cltd
pop
pop
inc
cltd
jg
xchg
shll
jmp
aam
jmp
fiaddl
gs
sbb
jns
fiadds
inc
in
movsb
sbb
push
stos
nop
push
or
mov
arpl
jns
outsl
cli
ljmp
pop
dec
roll
lods
or
mov
rcr
push
push
in
inc
int
ljmp
dec
jmp
fcmovne
sub
or
sub
pop
imul
jmp
mov
inc
adc
sti
repz
cs
jmp
cld
push
lcall
loop
push
mov
pop
or
cmp
insb
adc
lcall
dec
and
rol
push
jb
pop
cmp
sbbl
xchg
and
mov
xor
popf
add
xlat
loopne
cmp
and
push
pusha
mov
cmp
cmpl
fcoml
mov
xor
jbe
jo
fimull
ljmp
pop
movsb
sub
push
add
mov
add
shl
loope
in
std
push
jmp
dec
lret
pop
cs
sub
xchg
into
xchg
push
dec
mov
fbstp
loope
push
aas
pop
ret
pop
mov
ja
push
in
decl
lods
sub
sbb
inc
mov
paddq
in
stos
and
insb
xchg
sbb
lods
mov
call
call
les
mov
pusha
fwait
daa
or
xlat
sub
cltd
test
ljmp
pop
scas
ljmp
jo
hlt
not
mov
adc
mov
pushl
jmp
xchg
cwtl
lcall
arpl
mov
lods
add
sub
js
jne
lods
xchg
sub
jmp
sbb
cmp
aaa
and
gs
push
lds
cli
scas
movsb
pop
push
std
jmp
add
mov
adc
gs
sbb
inc
lea
aaa
dec
pushf
xchg
out
push
dec
dec
or
push
ljmp
push
mov
aaa
xor
jo
mov
inc
sub
out
orl
ret
adc
or
cltd
pop
mov
xchg
fwait
cmp
adc
fistpll
ret
mov
xchg
mov
cmpb
movsb
push
or
call
sahf
xor
cmpl
inc
mov
cmp
xchg
mov
sbb
lahf
or
dec
lcall
mov
jns
push
pop
push
enter
mov
pusha
pushl
repnz
adc
adc
jo
xor
insb
pop
push
push
fs
or
mov
jmp
fnstenv
les
bound
pop
cmp
out
sbb
scas
jl
clc
cmpsb
dec
mov
push
mov
xchg
inc
dec
test
iret
mov
and
cmp
fwait
popf
dec
psllq
adc
negl
jecxz
or
and
sbb
fimull
pushf
sub
rcrl
mov
adc
test
es
test
adc
call
dec
ja
cvtpi2ps
mov
movsb
inc
lret
push
mov
scas
inc
fsts
pop
flds
cld
loope
fiaddl
push
rcll
lahf
leave
push
rol
xchg
shll
adc
jl
imul
fcmovnu
push
jo
shrb
fcoms
pop
pop
mov
sbb
jo
push
and
cmpb
rolb
fmull
mov
decb
popf
in
cmp
cmpsb
sbb
fsts
and
sbb
out
mov
jmp
push
mov
lods
adc
into
sbb
mov
cs
movsb
fimuls
imul
mov
ljmp
iret
mov
cmp
sbb
or
in
jmp
call
aad
bound
adcl
leave
mov
jne
jecxz
sub
xor
and
mov
pop
push
pop
add
push
sub
add
orb
xchg
add
mov
dec
inc
test
pop
mov
gs
inc
addr16
inc
mov
mov
notb
push
scas
cli
mov
in
mov
sub
repnz
add
add
sbb
cs
dec
push
in
loopne
ficoml
pop
mov
incl
sub
gs
fiadds
xor
in
sbb
jne
adc
daa
cmp
shl
add
fsub
push
jg
adc
mov
inc
jns
add
lock
pushl
mov
xchg
mov
stos
push
scas
add
loopne
mov
dec
sbb
outsb
aas
lcall
add
jge
dec
adc
fwait
std
insb
sub
jae
lods
xor
add
addr16
pushl
cmp
iret
mov
add
push
call
and
dec
inc
pushl
fisttps
push
mov
add
popa
inc
scas
in
add
adc
jmp
loope
push
movsl
mov
movsb
fs
mov
rclb
mov
mov
sbb
add
shlb
cmp
sar
decl
pusha
ret
mov
cltd
fbld
cmpb
aas
and
pop
inc
aam
lea
jl
push
push
enter
ljmp
xchg
push
ficoml
pop
pop
mov
fdivrs
fcom
inc
std
jae
xchg
ljmp
lcall
add
mov
ds
lock
lcall
jg
jg
push
shlb
mov
sub
sahf
or
les
aad
iret
dec
xor
ljmp
jb
add
int3
jmp
fildll
push
out
adc
addr16
aad
push
sbb
aaa
clc
pushl
inc
mov
sti
push
cmpsl
and
das
cmp
fiadds
popf
rorb
in
mov
rcr
ljmp
mov
fwait
sbb
insl
pusha
push
jnp
aam
mov
jg
popa
repnz
jp
insb
pop
push
in
and
jp
stc
sarl
sti
outsl
xchg
and
sbb
lahf
push
push
xchg
adc
test
lods
ss
lcall
ljmp
in
mov
sahf
dec
test
xlat
cmpsl
stos
repz
adc
jb
mov
jmp
pop
out
fistpll
jb
loope
pop
pop
test
sub
lock
call
adc
push
adc
jmp
mov
inc
jp
lea
negb
decl
cmpsl
mov
mov
mov
or
sub
stos
in
cmpsb
dec
pushl
jecxz
and
out
xor
mov
cmp
out
pop
out
rcr
dec
mov
decl
cltd
addr16
test
lds
lahf
jne
stos
jno
xor
mov
mov
inc
test
mov
aad
inc
mov
and
pop
int3
loope
push
mov
dec
ljmp
push
jmp
loope
in
int
data16
push
es
call
sahf
call
sbb
push
xchg
hlt
mov
repz
aas
pop
mov
jmp
pusha
mov
jbe
fstp
fisttpll
ret
pop
jp
mov
pop
shr
clc
pop
loopne
das
ficoml
adc
sti
lea
decl
lcall
js
inc
pop
xchg
add
mov
mov
pushl
nop
scas
push
nop
xchg
lea
cmp
push
sarl
and
jnp
pop
lcall
ljmp
clc
cmp
add
loope
pop
enter
std
adc
bound
int
lods
fnstcw
pop
jmp
pop
in
divl
lock
daa
repz
ljmp
mov
sbb
lock
rcrl
les
sub
lods
out
pop
subl
xor
jg
sbb
xchg
ja
push
into
in
mov
dec
xor
hlt
sahf
sub
adc
cli
jb
pop
mov
and
xchg
add
sub
into
enter
call
in
cs
scas
sbb
xor
push
andl
push
ja
negl
xchg
push
xchg
aam
mov
fisubrl
jge
imul
ljmp
xchg
call
mov
fnstsw
fisubs
popf
adc
jg
ljmp
loop
ja
ret
push
insl
mov
xor
jmp
pushl
cmp
insb
dec
in
sbb
push
dec
pop
jno
mov
mov
aam
fbstp
call
pop
jb
jns
xchg
cmpsl
push
aam
adc
jl
mov
movsb
subl
incl
ficoms
mov
imul
scas
insb
or
fdivr
lods
push
jecxz
jg
mov
cmpsb
jl
push
enter
xchg
orb
inc
sti
pop
stos
call
pushf
cmpsb
in
ja
ljmp
xchg
call
lods
inc
ret
mov
sub
cmpsl
pusha
call
add
out
mov
add
mov
repnz
aam
pop
dec
fdivl
fcom
mov
shlb
cld
push
cmpsb
jbe
std
lods
outsb
pop
jae
cmp
lcall
scas
fmuls
jbe
arpl
or
push
in
nop
das
cli
call
outsb
enter
sarl
lock
mov
xor
cs
adc
cltd
loopne
pop
clc
or
jne
push
ror
pusha
add
xchg
cmpsl
arpl
xor
jecxz
das
jmp
into
mov
mov
cmp
mov
jbe
inc
jae
and
loope
js
stc
xchg
mulb
pop
pop
push
loop
inc
pop
mov
imul
add
cmp
fucomi
push
cmc
pushl
lds
pop
jb
mov
out
pushl
popf
mov
pushf
dec
xchg
call
sbb
sub
jb
int3
sar
dec
cli
call
mov
dec
cmp
pop
adc
rorb
rorb
mov
outsb
mov
arpl
fmull
in
in
lods
stc
sarl
dec
mov
jb
test
or
test
push
and
mov
ja
mov
aaa
cmp
or
mov
loope
fildll
lds
jge
dec
pop
push
test
jg
sbb
add
pop
lea
push
mov
xor
ljmp
mov
and
das
ja
rcrl
or
dec
imul
negb
adc
sub
call
push
outsb
cmp
pop
mov
or
add
mov
in
ja
fiaddl
cwtl
test
loope
jmp
xchg
call
loop
daa
mov
jmp
pop
jmp
outsl
mov
or
dec
repnz
or
ljmp
adc
lret
mov
incl
iret
cs
fnstsw
sub
icebp
xorb
pop
jge
pop
mov
mov
ljmp
sti
fbld
xchg
pushf
fidivs
jg
fstpl
fcmovu
js
scas
pushl
mov
mov
cwtl
rcll
jecxz
in
das
xchg
or
aaa
cld
push
dec
cld
out
push
dec
jecxz
xchg
scas
add
pop
add
mov
les
fiadds
or
imul
loop
pop
dec
inc
pop
iret
pushl
push
adc
mov
out
mov
dec
or
aaa
std
aam
ffree
xor
repz
jg
mov
push
adc
lds
pushl
int
test
push
and
pop
das
inc
mov
jmp
jnp
xor
cltd
imul
call
repnz
adc
push
mov
or
loopne
push
test
fildl
call
push
cmp
or
shrb
mov
or
jns
je
mov
push
dec
mov
lcall
les
xor
inc
es
xchg
cld
cmp
aad
movsl
into
cmpl
fnsave
sar
jmp
adc
movsb
and
pusha
adc
ret
jp
sub
xlat
mov
mov
xchg
lret
jmp
sub
jg
clc
or
pop
sahf
dec
call
add
mov
add
sbb
pop
ret
ljmp
mov
dec
clc
inc
les
cmp
pop
rol
into
pop
mov
decl
xchg
vsubss
leave
inc
dec
lret
sbb
mov
test
mov
lret
sbb
or
call
cmp
rorl
jmp
jno
mov
fists
mov
outsb
push
das
repnz
pop
loopne
pushl
repnz
into
or
in
adc
xchg
nop
mov
outsb
xor
adc
out
cli
push
pop
pop
hlt
fisubrs
sbb
mov
push
xor
xchg
ret
aam
or
inc
cwtl
push
dec
cltd
jb
adc
push
mov
cmp
decl
xlat
mov
mov
lods
xchg
lock
imul
push
dec
mov
sbb
sbb
xor
ljmp
mov
test
std
ljmp
sarb
add
push
aaa
mov
sbb
repz
daa
xchg
fldt
jae
call
repnz
jmp
mov
jmp
adc
jne
adc
and
pop
jg
or
decl
in
mov
or
mov
jae
icebp
jecxz
and
push
push
stos
call
push
jl
jo
mov
fcoml
scas
sbb
add
or
ljmp
lods
push
fs
push
fcomps
mov
int
dec
jecxz
rorl
sub
jmp
aad
push
sub
inc
mov
ljmp
decl
xor
push
and
pop
testl
pop
hlt
jmp
pop
sarb
daa
sti
or
mov
sbb
out
stc
and
dec
mov
xor
test
and
outsb
imul
push
jmp
mov
adc
shl
into
mov
loopne
mov
fidivrl
mull
imull
mov
pop
push
cmp
cld
cwtl
push
inc
push
xor
ljmp
pushl
imul
scas
xor
clc
sub
mov
std
pop
xor
imul
push
incl
repz
insb
ja
fmuls
dec
int
sahf
push
std
and
push
loope
ljmp
idivl
mov
in
in
stos
sub
cmpsb
nop
jp
mov
sub
add
addr16
ljmp
test
into
fbld
test
in
jl
lret
push
jge
sub
adc
rclb
cwtl
inc
jge
xchg
mov
inc
cmpsb
rorl
mov
cmp
push
lret
scas
push
out
call
aam
mov
call
add
xor
rol
ljmp
dec
enter
jge
ud1
fimuls
mov
jl
cmp
repz
sub
rcrl
stos
popa
add
lea
xchg
pop
push
pop
fcompl
jnp
pop
jmp
sbb
jmp
fwait
ja
arpl
scas
jmp
scas
enter
and
clc
repz
rolb
aad
std
jg
xor
or
push
jp
or
or
aas
xchg
sbb
pushl
sahf
movsl
in
xchg
mov
loope
mov
repz
data16
cmp
lcall
push
sbb
mov
push
mov
jp
push
mov
lret
rorl
popf
and
dec
lods
repz
test
stc
mov
scas
sub
stc
ljmp
rolb
jmp
xchg
cli
and
sub
push
jmp
call
sbb
lods
stc
mov
cwtl
outsb
mov
push
bswap
movsb
or
and
data16
lahf
ljmp
cli
jmp
jge
cld
xchg
mov
adc
lods
push
jle
mov
stos
mov
and
cwtl
push
jg
pop
inc
test
test
xlat
fmuls
mov
mov
add
mov
mov
aam
xchg
pop
fadd
popl
arpl
dec
pop
inc
aam
shrl
cmovg
sbb
mov
scas
insb
adc
xchg
and
pusha
jl
sbb
cld
addb
push
bound
in
sahf
or
and
and
push
mov
js
lods
sahf
mov
leave
test
pushl
aaa
xchg
cmp
jmp
out
movsb
pop
bound
xor
mov
pushl
push
sub
xor
or
out
cltd
outsl
xor
mov
mov
js
push
mov
mov
jl
push
aaa
in
dec
pop
lret
xchg
sub
stos
push
jne
fs
in
dec
lret
push
std
lcall
mov
mov
xor
mov
xor
xor
cwtl
jg
incl
call
lret
stos
mov
lahf
cs
iret
es
je
data16
inc
idiv
sahf
sahf
mov
mov
jmp
cmp
mov
incl
fstpt
dec
pcmpeqw
dec
int3
icebp
fwait
and
pushf
pop
cwtl
pop
add
sbb
xchg
adc
lcall
ljmp
lods
fcoml
push
outsl
bnd
cmpsl
inc
dec
mov
fistps
dec
sub
div
cli
insb
fidivrl
in
outsl
dec
xor
sbb
imulb
pushl
shrl
mov
and
mov
fucom
mul
je
mov
mov
incl
in
movsb
mov
cmpb
push
loope
or
sub
push
and
or
cld
pop
adc
std
lea
push
aam
sbb
es
ljmp
pop
fistpl
push
shl
pop
and
xlat
aaa
mov
and
jb
xor
inc
loop
sbb
movsb
mov
xor
insb
cmpsl
test
xchg
sbb
mov
xchg
mov
pop
dec
jmp
inc
loope
decl
aas
xchg
stos
jle
addr16
cwtl
xlat
fimull
and
pop
fildll
add
mov
push
mov
push
cmp
mov
ljmp
stos
jmp
lock
and
lret
push
sbb
decl
je
sahf
and
rcrb
in
or
repz
decl
xor
xchg
adc
dec
ret
inc
out
movsl
mov
cli
mov
sti
test
jns
adcl
aad
lods
pop
das
push
icebp
mov
push
dec
ljmp
arpl
jmp
push
cltd
xor
fwait
inc
cmpsb
cld
popf
adc
in
cmpb
mov
push
fbld
sbb
loope
cmpb
ljmp
nop
scas
mov
mov
jge
sbbb
insl
jno
inc
mov
arpl
arpl
inc
mov
test
pop
jg
lods
xor
ja
xor
adc
aaa
pop
js
mov
jns
bound
sahf
add
push
out
int3
pop
cs
lock
mov
mov
ljmp
stos
in
lock
sub
fsubrs
mov
pop
mov
xor
add
cmp
adc
pop
std
das
clc
pushl
mov
imul
add
dec
xchg
push
mov
push
push
sbb
xor
pop
cmc
clc
daa
add
data16
adc
pop
xchg
mov
rcr
inc
iret
std
mov
call
int3
or
fistps
xor
icebp
nop
out
decl
jbe
xchg
cmpsb
gs
mov
ret
mov
pusha
xor
fiaddl
xor
inc
jb
push
outsb
loopnew
adc
aam
incl
jle
inc
mov
jmp
js
mov
nop
add
add
decl
les
data16
or
ss
push
mov
mov
mov
jle
mov
jb
in
test
dec
xchg
push
adc
sbbl
push
movsb
mov
xchg
and
in
inc
and
popa
imul
test
aas
jecxz
enter
jg
clc
xorl
add
cmpsl
xor
pop
mov
je
lock
lea
ja
mov
mov
test
pop
mov
sub
pushf
pop
lds
pop
jmp
call
pop
ljmp
lods
push
aaa
xor
inc
cmp
xor
jg
cmp
push
lcall
bound
lods
push
pop
cmp
jmp
sbb
jnp
test
bound
xor
inc
data16
adc
xchg
push
scas
addr16
movsb
jbe
insb
call
arpl
xor
scas
test
lcall
add
mov
stos
xchg
cli
clc
lods
mov
mov
xor
mov
mov
incl
inc
push
cmp
repz
loop
pop
push
notb
xor
mov
mov
btc
not
jbe
pushl
mov
push
jmp
setne
imulb
testl
jmp
lods
adc
incl
adc
imull
push
jl
push
jno
outsl
sbb
test
and
stos
fdiv
or
lahf
cmp
dec
shl
mov
in
test
shl
jno
lods
sub
mov
or
gs
mov
call
loopne
push
adc
adc
rcrb
jg
mov
sbb
pop
and
clc
pop
dec
lods
pop
inc
clc
outsl
loope
inc
incl
push
loop
pop
push
cmovb
inc
call
jp
jge
scas
push
addr16
fsubrs
or
cltd
push
push
cli
ret
mov
mov
rol
mov
hlt
jbe
mov
cmp
mov
inc
xor
lcall
ret
out
pushf
push
lahf
mov
scas
aaa
xor
arpl
xchg
mov
mov
sar
pushl
ss
add
sbb
pop
adc
fcomps
inc
icebp
aas
cmp
and
jnp
ljmp
lods
sbb
aaa
jecxz
jbe
mov
adc
mov
add
fimull
scas
pushl
cld
mulb
clc
sbb
in
je
testl
cmc
jl
jnp
cmc
cmc
cmp
lock
dec
sub
fwait
add
jns
sub
push
in
mov
add
add
xor
mov
hlt
xorb
add
ljmp
lret
bound
in
adc
out
dec
sub
orl
hlt
dec
cmp
inc
push
data16
or
imulb
aas
add
ljmp
nop
and
popa
es
mov
popl
or
fidivs
pop
inc
inc
xor
decb
ret
fisttpl
das
sbb
dec
mov
lds
ljmp
lcall
push
ja
xchg
rcrb
fldcw
aam
call
incl
in
xchg
popf
movsb
outsl
stos
test
cmp
decl
inc
mov
in
dec
aam
adc
call
popa
or
movsl
cmpsb
sub
ljmp
shll
repnz
subb
sbb
jmp
mov
test
mov
adc
dec
repnz
inc
lods
imul
adc
call
adc
fwait
fs
das
loop
daa
inc
xchg
sbb
ljmp
inc
pushf
in
sub
dec
sbb
push
lods
mov
ds
adc
mov
jg
incl
inc
xor
xchg
fisubs
leave
xchg
pop
popf
sti
mov
dec
pop
xor
cltd
xchg
addl
push
mov
pop
pop
adc
je
psllq
jl
sub
or
movsl
fldl
mov
add
or
sbb
lods
scas
ficompl
mov
pop
out
dec
call
mov
xchg
inc
test
jmp
mov
cmp
orb
inc
push
sbb
pop
sahf
and
dec
jmp
into
xor
scas
xor
cmp
ljmp
arpl
and
mov
movsb
cli
outsb
int
or
movsl
jo
cltd
fisubl
xchg
mov
cmpl
xlat
add
sbb
pushf
jne
icebp
mov
push
cwtl
jbe
mov
daa
ret
pop
loop
mov
rol
rolb
out
inc
xchg
stos
dec
in
dec
dec
jle
dec
scas
lds
jle
mov
lock
mov
push
pop
dec
loope
mov
scas
jno
pop
xchg
sahf
xchg
mov
leave
inc
dec
mov
sub
xchg
stc
js
std
add
mov
add
lock
test
icebp
lahf
movsl
inc
aad
inc
not
std
ljmp
and
sbb
adc
test
int
movsb
mov
jge
pop
inc
pop
pop
ror
sbb
je
cmpsl
xchg
dec
lret
cmpsb
push
neg
sti
sub
mov
ljmp
leave
inc
leave
adc
fisubrl
into
pop
push
cmp
add
mov
mov
in
push
ficoms
jl
and
lret
jbe
imul
movl
cmpsb
jg
and
fs
loop
sub
call
or
bnd
xlat
jle
jno
inc
cmp
cmc
rcrb
into
in
cmp
jg
jg
push
es
xchg
fadd
xor
das
xor
xchg
shrl
shll
in
push
dec
or
call
pusha
cltd
loopne
mov
pusha
sbb
inc
pop
sar
decl
sub
pop
pop
pushl
jecxz
mov
pop
jmp
and
jo
hlt
mov
pushl
std
cmpl
imulb
pop
jecxz
cmp
ja
scas
daa
pop
mov
test
call
pop
mov
cmc
mov
mov
test
cmpl
pop
jge
sub
push
rcrl
lcall
sahf
pop
add
xor
shlb
and
inc
shll
daa
lods
dec
xchg
push
ljmp
icebp
xor
jno
fsubrl
dec
mov
dec
cmp
xlat
cwtl
pushl
into
push
xchg
pushf
cmp
test
mov
xor
and
out
lock
mov
pushf
mov
loopne
mov
imul
ja
add
push
mov
jecxz
push
adc
sub
out
outsb
addr16
and
out
aas
cmp
jmp
bound
push
rcrb
rolb
movsb
sbb
inc
fildl
inc
mov
loop
xchg
push
or
std
in
mov
and
out
nop
data16
jns
cmpb
pusha
iret
loopne
and
pop
inc
dec
ss
mov
mov
dec
movl
dec
add
sbb
xor
mov
push
aas
push
sub
mov
jmp
pop
dec
pop
pop
jl
mov
imulb
sar
fcomp
arpl
arpl
test
clc
cli
gs
inc
push
mov
xchg
aaa
push
mov
incl
cli
dec
addb
push
fisttps
cmp
ds
jo,pt
pop
test
jmp
shl
aas
inc
inc
mov
sub
outsl
mov
inc
ret
mov
movsb
mov
inc
fdivrs
inc
push
decl
inc
movsl
dec
pushf
xchg
sub
ljmp
jmp
int
dec
test
decl
pop
jne
cmpsb
adc
scas
mov
mov
lock
sarb
inc
sbb
decl
xchg
gs
ljmp
out
lret
push
pop
sbb
xchg
fsubrl
pop
inc
decl
call
scas
lcall
inc
xchg
popa
lahf
scas
or
or
pusha
sahf
out
mov
jl
and
inc
lcall
movsl
and
sub
cmp
cli
scas
and
ljmp
adc
shrl
push
mov
enter
call
push
push
add
jle
lcall
inc
mov
fidivl
and
xor
push
sbb
cmpsb
mov
je
mov
call
ret
loopne
push
call
fimull
shlb
lret
loope
fwait
cmp
mov
lret
jmp
xlat
fisubrs
pop
ds
call
jnp
fmuls
out
int
adc
xchg
ficompl
mov
ljmp
xor
test
jbe
test
cmp
push
pop
rcrb
out
pop
sbb
or
jmp
add
jge
inc
mov
stos
mov
idiv
int
adc
cmp
dec
mov
in
push
push
sbb
mov
dec
jecxz
inc
fistl
loopne
mov
sti
pop
int3
xchg
aaa
jp
jmp
outsb
in
adc
clc
aaa
pop
shlb
dec
cs
arpl
repnz
mov
in
movsb
test
add
gs
ret
repnz
push
lods
pop
ja
fcomip
aaa
and
aaa
dec
push
jl
jbe
ljmp
mul
mov
ljmp
cld
or
popa
push
dec
mov
lcall
lcall
lret
jecxz
in
xchg
dec
mov
cltd
jg
push
mov
sbb
push
popf
push
iret
in
cs
sub
insb
mov
mov
mov
xor
adc
shrl
lods
xchg
out
dec
scas
jge
or
pushf
push
loopne
mov
pop
into
repz
mov
xor
pushl
stos
movaps
xchg
xchg
call
and
mov
push
dec
adc
rorb
sub
adc
mov
sar
call
and
stos
and
jp
fnstcw
bound
cmp
jg
loope
inc
push
jle
mov
roll
adcl
std
pushl
stos
adc
add
mov
ret
mov
test
pushl
lret
ljmp
rcr
xchg
jg
aas
fdivl
iret
and
ja
sub
enter
add
jnp
or
fisubl
or
push
scas
dec
out
test
lcall
sub
inc
pushf
frstor
sbb
jne
aam
outsl
dec
mov
cmp
mov
fsubl
imul
lods
or
repnz
add
xlat
add
mov
pop
and
xor
xchg
pusha
xor
dec
popa
stc
subl
push
xchg
fiaddl
ret
jg
test
cmc
xor
push
lods
xlat
adc
repnz
stos
fwait
inc
sbb
mov
jg
fisttpl
jmp
iret
cmp
sub
roll
mov
pop
popa
js
lret
push
adc
in
jle
cmp
jmp
sahf
jbe
sbb
int
dec
lret
pop
mov
call
jp
imul
dec
lods
pop
or
sahf
iret
push
sti
rolb
cmp
imulb
out
pop
sub
xchg
insl
stc
not
and
sbb
xchg
jp
mov
rorl
xchg
and
dec
mov
xchg
xchg
dec
jle
ret
decl
test
loop
sbb
jb
popf
add
dec
je
js
call
mov
loop
insl
mov
lds
pop
fadds
pushl
push
pop
pusha
adcb
sbb
test
mov
mov
push
inc
mov
decl
shlb
or
pop
pop
movsb
daa
outsl
rorl
int3
sbb
in
and
mov
arpl
push
mov
out
inc
icebp
xchg
and
adc
out
outsb
push
imul
pushl
xchg
ja
lahf
pusha
imul
jb
add
mov
add
ljmp
mov
sbb
movsl
cmc
movsb
jl
xchg
dec
jg
inc
enter
aad
xchg
or
jg
hlt
mov
inc
adc
dec
lcall
movsl
stc
xorl
mov
pop
sub
jnp
scas
decl
inc
ror
add
sbb
into
scas
and
outsb
add
xchg
and
sbb
gs
mov
and
xlat
ret
aad
pop
or
sahf
push
out
imul
xchg
mov
dec
and
rcrl
push
jae
jp
adc
les
xchg
push
push
pop
push
sbb
and
cmpl
dec
dec
add
repnz
movsb
aad
xchg
stc
mov
in
mov
lods
xchg
dec
clc
ljmp
rclb
leave
int3
and
mov
mov
je
mov
cmp
pop
cld
out
inc
mov
mov
pop
sahf
or
idivl
fsin
xor
inc
xor
pop
dec
add
jbe
int3
add
sub
dec
mov
lods
fimuls
mov
fisubl
jno
negl
test
jmp
aas
adc
dec
jbe
movsl
jmp
jo
xchg
es
daa
and
ret
inc
inc
jecxz
popf
test
std
xchg
xor
cmp
mov
cli
push
cld
inc
stos
mov
jae
lret
sub
push
addr16
andb
push
jmp
inc
ljmp
stos
push
out
pop
xchg
sahf
inc
jno
sbb
mov
sub
mov
mov
pop
decl
decb
inc
xchg
mov
clc
ret
add
dec
sahf
call
testl
mov
sub
mov
es
fwait
dec
cmc
cld
add
mov
scas
mov
ljmp
andb
adc
in
jmp
pushf
cwtl
mov
or
mov
jg
lcall
push
xchg
cltd
aad
jb
dec
push
lods
mov
sub
jl
mov
jle
addb
inc
sub
pop
add
sbb
imul
mov
jae
lcall
in
dec
sbb
xchg
mov
test
cli
lods
cmpsl
or
incb
insb
pushl
icebp
sbb
popf
push
es
push
inc
inc
fnstenv
adc
xchg
ja
push
push
pop
cli
leave
jnp
mov
push
test
pusha
push
rorb
mov
dec
mov
push
std
jmp
cmp
and
loopne
cmpsb
jge
push
xchg
cli
pushl
xor
jg
xchg
ds
sub
pop
jbe
test
push
sbb
pushf
push
shlb
fs
popf
std
pushl
sub
repnz
push
roll
into
dec
and
pushl
lock
jbe
sub
fistl
mov
ret
popa
out
rorb
mov
xor
push
lcall
dec
mov
sahf
add
push
adc
add
data16
clc
les
jge
mov
jb
movsl
fstl
outsl
aas
inc
loope
mov
mov
adc
cmpsl
sub
cmpl
mov
std
lock
dec
arpl
jge
pop
stos
dec
jae
mov
repz
and
ffree
popf
imul
decl
jno
cmp
imul
pop
pop
out
inc
pop
incl
iret
inc
pop
mov
popf
ljmp
xor
test
push
aas
shrl
jmp
les
pop
je
or
pop
ja
inc
xlat
rcr
movsb
push
cs
cmpsb
sbb
test
pop
cmp
xor
xchg
mov
push
cwtl
insl
cs
fwait
sarl
cmpsl
pushl
push
mov
jb
cmpsb
push
inc
dec
jnp
xchg
push
push
repz
lock
sbb
and
popl
cmp
dec
cmp
stos
jae
push
bound
or
adc
mov
push
adc
fs
call
or
cld
inc
dec
and
mov
ljmp
mov
pop
fwait
adc
outsb
hlt
inc
lcall
xchg
mov
cmp
or
inc
or
es
mov
lea
fists
jmp
cld
fldl
in
add
loopne
jbe
cmpsl
hlt
adc
cmp
adc
pop
call
xor
imul
pop
jb
pop
xchg
repz
scas
test
dec
fdivrp
call
insb
or
push
lret
dec
mov
mov
mov
mov
pushf
fimuls
add
test
jle
xor
clc
scas
arpl
je
push
mov
jp
xchg
push
outsb
inc
inc
mov
cmp
pop
mov
cld
xor
sub
call
in
push
sub
push
subb
mov
xchg
insb
mov
mov
stc
pop
mov
mov
xor
pop
adc
fcomip
adc
das
jb
sar
or
cltd
arpl
adc
xchg
adc
fcomip
push
lds
lods
mov
push
and
rcrb
cmp
xchg
scas
in
inc
in
fdivr
cld
jmp
sahf
mov
ds
adc
enter
lods
cmpsl
repz
pop
push
fildll
in
push
pop
mov
pop
aas
fildll
or
and
add
dec
push
lods
or
lretw
and
xchg
aam
dec
xchg
jge
xor
jmp
dec
mov
stc
and
sub
je
gs
sub
jg
cwtl
jne
sbb
popf
fs
adc
ljmp
cli
cmc
inc
sub
test
rcr
dec
pop
or
ja
inc
mov
sbb
or
jmp
push
sub
dec
popf
cli
roll
sub
incl
push
jno
add
sbb
sti
mov
adc
inc
in
in
mov
icebp
jg
pop
push
bound
test
gs
repnz
aas
sti
mov
std
fists
and
jb
jbe
xchg
sub
mov
dec
shll
adc
incl
lods
push
dec
stos
dec
jae
push
ds
insb
or
xchg
cli
popf
xor
pop
test
ljmp
arpl
sub
data16
test
gs
ret
mov
push
imul
pushl
push
mov
sbb
push
icebp
aaa
add
mov
jmp
call
stc
push
ret
enter
sub
popl
inc
inc
mov
es
out
ljmp
mov
imul
cmp
xchg
in
fs
or
decl
push
push
dec
jge
push
push
repnz
dec
imul
adc
mov
pop
dec
lds
sbb
or
cltd
sbb
jg
out
mov
xchg
jns
jb
inc
cld
fildll
push
lcall
push
sbb
push
repnz
clc
add
arpl
insl
adc
incl
sbb
pop
test
push
pusha
jbe
pop
pop
in
loopne
pushl
adc
pusha
inc
push
pop
in
lret
in
push
aad
imul
push
jmp
xchg
jp
inc
mov
xchg
push
mov
repz
xor
inc
fdivr
incl
cmp
cmpsl
cmpsl
imul
sets
push
dec
rcll
movsl
call
in
sbb
lock
sub
mov
leave
pop
arpl
lods
sbbl
inc
sti
incl
mov
fcmovb
arpl
jl
out
xorl
cli
sbb
shll
lods
and
outsl
movsb
jno
or
mov
or
jle
call
pushl
int3
adc
add
arpl
pop
cmp
mov
push
fs
pop
adc
clc
ljmp
call
add
sbb
or
dec
out
cs
ret
lock
mov
pop
and
fmull
mov
inc
ficompl
ljmp
dec
test
pop
int
les
dec
out
stos
pop
cmp
movsb
data16
aam
ret
cmp
pop
mov
mov
add
adc
mov
xchg
fwait
push
cmpsl
repnz
push
shrl
lcall
ljmp
sub
popf
lods
je
ds
jp
cli
mov
imul
xlat
mov
mov
add
loop
into
std
cmp
pop
loopne
addr16
shlb
insl
xor
push
in
xor
jo
xor
decl
sbb
xor
push
daa
clc
addr16
data16
push
std
and
sub
cwtl
loope
pop
dec
push
fstps
cmp
jecxz
loopne
push
jg
or
pop
fsts
cs
insb
lds
mov
jae
popf
icebp
jmp
xchg
jo
stos
add
daa
mov
dec
cld
push
or
jecxz
mov
add
loopne
lock
sub
ljmp
jmp
imul
xchg
ja
ret
xchg
into
sbb
adc
jecxz
in
call
sbb
adc
test
or
xchg
shrl
pop
cmp
add
icebp
int3
xchg
jecxz
jmp
sahf
into
pop
xlat
adc
mov
pop
jp
stos
push
jg
jg
mov
and
push
cmpsb
jge
push
int3
add
mov
loopne
jmp
xchg
fisttps
cwtl
shll
dec
mov
in
loope
cmp
test
aad
test
and
mov
push
pop
mov
sbb
mov
jmp
cli
dec
sahf
jbe
jg
add
inc
iret
dec
shl
fistl
sbb
jmp
mov
xchg
pop
decb
outsl
int3
test
mov
outsb
sub
sbb
fprem
in
cld
and
out
ss
mov
data16
mov
loop,pn
inc
outsb
ds
push
cmpsb
xchg
ljmp
cli
imulb
enter
mov
sbb
outsb
sbbb
add
push
pusha
into
inc
jecxz
out
jns
push
or
jne
daa
cmc
cltd
xorl
lds
push
popa
mov
xchg
mov
push
mov
push
dec
fwait
sti
ljmp
ljmp
add
cmp
xlat
movsl
inc
mov
pushf
pop
push
add
and
dec
push
lods
fs
stos
inc
pop
loope
filds
pop
xor
adc
andl
call
push
mov
stos
xchg
shll
roll
and
incl
or
aam
fcompl
stos
int3
psrlq
mov
add
sbb
pop
sbbb
add
inc
inc
mov
inc
xchg
xchg
sub
or
scas
sbb
cmpsb
inc
xor
rolb
xor
cmp
cmpsl
movsb
das
jne
pop
xchg
add
out
icebp
rclb
pop
pop
stos
loop
jo
or
jnp
adc
cwtl
fdivr
jg
mov
adc
mov
sub
mov
cwtl
insb
dec
out
mov
sbb
rcr
popa
stos
xchg
stc
into
aas
mov
mulb
popf
sahf
add
lcall
mov
movsb
cld
push
cwtl
xchg
jbe
in
popf
cmp
cmp
out
clc
mov
sbb
arpl
push
adc
sub
jb
adc
push
mov
sub
push
movsb
imul
cs
outsb
xchg
addr16
pop
lcall
jle
loope
enter
push
into
divl
dec
pop
and
addr16
pop
test
ljmp
popa
pop
ljmp
jmp
add
push
lcall
ret
scas
mov
mov
xor
cld
jns
lods
cmp
adc
jmp
outsb
jae
iret
or
mov
jns
lret
xor
pushl
in
mov
outsb
out
nopl
push
fs
xchg
add
push
sar
hlt
xchg
clc
adc
lcall
movsb
or
loopne
loopne
push
andb
sbb
test
push
mov
push
jg
decl
jle
es
mov
xchg
push
inc
or
inc
lret
fs
mov
inc
dec
push
jns
cltd
loope
adc
mov
jle
jno
mov
pop
sbb
add
push
or
insb
push
rolb
fldcw
sub
mov
xlat
call
cmp
in
inc
adc
icebp
arpl
data16
inc
lahf
mov
jmp
mov
jnp
cmp
mov
ss
add
dec
pop
ss
mov
sarb
mov
mov
enter
movsb
loopne
cli
lcall
jmp
enter
push
outsb
in
fisubrl
jle
arpl
mov
mov
push
shlb
vmovups
imul
std
sbb
out
ss
out
sub
push
scas
push
imul
dec
testb
add
movsl
shll
pop
xor
or
fldl2t
cwtl
push
xor
sar
cmp
push
test
ja
mov
dec
inc
sbb
subb
pop
jmp
fisttps
sti
loopne
mov
add
lea
ljmp
lea
push
inc
push
cwtl
je
pop
pop
ss
dec
xor
xchg
test
lahf
cmp
pop
icebp
decl
adc
hlt
scas
cld
mov
push
mov
mov
jnp
add
lcall
in
insl
test
pushf
sub
enter
mov
and
jo
xchg
outsl
xchg
pop
cld
aaa
adcl
rorb
mov
adcl
and
enter
cmovp
incl
bound
rcll
inc
dec
xchg
jo
push
xchg
push
mov
xor
inc
xchg
dec
pushl
je
xor
out
call
imul
mov
pop
push
add
pushl
jo
ljmp
fisttpl
fnstcw
add
push
mov
dec
les
jo
push
leave
in
pop
jg
dec
idivb
pop
wbinvd
loop
decl
mov
cmpsb
xchg
sbb
cs
dec
mov
mov
and
fwait
xchg
popf
mov
pop
js
insb
out
sbb
dec
leave
jle
jp
jle
sbb
and
das
pop
iret
xor
fwait
jb
adc
clc
cmp
xchg
mov
mov
or
sbb
cmp
xchg
xor
push
test
out
jmp
dec
jb
rol
xchg
xchg
sbb
ror
sbb
push
hlt
pop
out
and
or
push
je
mov
out
frstor
cmpsl
add
decl
cmc
xor
je
xchg
xchg
mov
aad
push
dec
mov
daa
pop
sti
addb
jmp
cmpsl
in
aaa
cmp
mov
out
rorb
decl
inc
sahf
pop
cwtl
add
xor
loop
mov
and
insl
mov
sbb
incl
xchg
sub
mov
out
loope
ret
jnp
dec
stc
jae
add
mov
fdivr
call
addr16
or
leave
add
mov
movsl
idivb
lods
test
fwait
repnz
and
xor
add
test
ja
cwtl
lret
adcl
mov
cmp
jle
xlat
mov
repnz
pop
cmp
popa
jg
aas
int
inc
es
mov
pop
scas
push
push
xchg
sbb
das
mov
adc
jb
lret
xor
ljmp
or
ja
fistpll
mov
sti
jmp
lcall
lods
fdivs
aaa
push
cmc
daa
negb
ja
jb
pop
clc
jae
and
scas
iret
fcmovb
lcall
push
ficoms
fistpll
add
mov
dec
ljmp
stos
mov
pop
sarb
or
outsl
sub
ljmp
in
sub
add
xchg
mov
ljmp
gs
sbbl
xchg
loope
pop
std
add
aaa
fldcw
xchg
iret
hlt
cmc
jbe
jo
cmp
jb
lock
xchg
sub
ret
and
aas
mov
jne
lret
cwtl
jl
dec
sbb
iret
into
mov
sbb
das
cli
pop
jb
jmp
pop
insl
dec
mov
call
xor
loopne
push
imul
xlat
mov
xor
sbb
imul
jmp
and
sub
pop
cmp
push
cmp
cwtl
pusha
shlb
xor
fcomip
enter
and
fwait
jnp
stos
and
aas
cmp
ds
cwtl
push
aaa
lcall
or
stc
addr16
inc
mov
nop
vunpcklpd
mov
icebp
enter
inc
mov
cmpsl
out
call
lock
inc
or
pop
push
cmovb
pop
test
je
stc
pop
lock
int
call
std
ret
xchg
xor
jb
sbb
test
aaa
mov
jb
jge
jo
out
adc
jg
mov
hlt
ret
sbb
loopne
mov
mov
jmp
bound
push
cmc
nop
jmp
mov
fistpll
aad
jno
and
loop
ss
insl
pushl
clc
outsl
mov
mov
mov
fidivl
mov
xor
call
sub
nop
dec
aaa
mov
add
xchg
cmpsb
xor
incb
push
mov
mov
jbe
out
add
mov
inc
pop
call
lods
sub
scas
or
push
lahf
mov
jge
dec
arpl
lods
arpl
out
push
in
mov
inc
fcoml
fldl
lock
loopne
xchg
cs
mov
out
shlb
pop
push
add
mov
pop
adc
sbb
ljmp
in
movsl
xlat
aam
mov
xchg
bound
cmp
cwtl
insb
xor
mov
xorb
inc
pop
in
mov
xor
cmp
jg
and
pop
repnz
mov
jae
lret
xor
jmp
sbb
out
pop
stos
mov
mov
stos
in
jbe
or
shl
dec
inc
pop
push
daa
decl
push
lret
daa
int
sti
sbb
and
sub
xor
daa
mov
das
sar
or
pop
nop
or
femms
frstor
loope
out
dec
rcll
xchg
fwait
ja
cs
xor
xlat
mov
outsl
push
dec
aad
cmp
clc
in
insl
mov
rolb
mov
stos
leave
add
dec
add
jl
pop
mov
inc
pushl
fnstcw
sub
call
ljmp
adc
pop
mov
decl
pop
loope
clc
enter
and
cmp
outsl
shll
and
hlt
add
das
push
xor
sbb
out
lcall
and
dec
out
push
xor
ljmp
add
jnp
jnp
push
addr16
stos
fsubrl
mov
dec
ret
stc
xchg
mov
or
xchg
adc
stos
push
and
pushl
in
inc
push
dec
push
jl
in
fisttpll
aam
ret
incl
pop
mov
outsl
add
jnp
mov
andb
xor
adc
test
jg
cmc
sbb
inc
cmpsl
inc
cld
icebp
or
in
daa
push
mull
xor
les
cmc
int3
loopne
stos
ljmp
loope
mov
and
lds
jb
mov
cld
pop
enter
incl
and
out
jbe
mov
and
icebp
push
add
or
jns
push
ljmp
cmc
xor
xchg
mov
mov
out
call
adcb
xor
mov
pop
mov
pop
movsb
call
push
and
scas
popa
int
jnp
int3
pushf
add
sti
jbe
push
and
mov
decl
ret
inc
jae
loop
enter
mov
clc
cmp
jmp
push
call
lock
or
push
jb
pop
loope
nop
mov
lods
lcall
sub
lret
ja
xor
cltd
cld
or
pop
pop
jg
test
xchg
mov
or
mov
mov
loopne
xchg
push
rorb
mov
mov
fwait
jl
gs
pushl
ss
out
pop
jl
ss
loop
pop
pop
jl
inc
dec
inc
pop
mov
test
jle
std
jmp
ret
jl
inc
or
rcll
xchg
push
xorl
addr16
mov
pushl
incl
cmp
or
sub
push
insb
stos
push
repnz
cli
decl
mov
enter
mov
jne
jnp
cmp
call
sub
repnz
push
mov
push
cmpsb
je
test
das
mov
xor
jo
mov
mov
lock
dec
pushf
lcall
push
loopne
mov
xor
out
lcall
cmp
push
dec
xchg
popa
sbb
jno
mov
pop
gs
andl
xor
sahf
ja
call
or
inc
aad
adc
rcrb
push
popa
into
push
loopne
das
pushl
fsubrp
adc
push
aam
add
sub
out
cli
rcr
pop
imul
scas
add
sbb
jmp
push
imul
push
cwtl
aam
sbb
test
mov
push
faddp
mov
dec
ds
sbb
push
mov
dec
cmp
jne
mov
loopne
das
jae
data16
push
test
test
stc
sbb
es
pop
ss
es
std
pushl
xchg
nop
test
pusha
imul
incb
out
xchg
pop
stc
daa
repz
inc
mov
mov
stc
stos
xor
xchg
push
push
push
decl
lcall
cmp
jns
cmp
add
mov
mov
jge
pop
sahf
aad
mov
lcall
ss
ret
sahf
pusha
dec
iret
pop
mov
call
ja
mov
jno
add
cmp
pop
jl
pop
rol
sub
mov
push
jne
push
ljmp
mov
or
jmp
push
jae
pop
jbe
adc
xor
mov
push
cmpsl
cmp
cmpsl
cmp
fists
int3
ds
in
mov
xchg
cmpsl
fisubs
rcrl
scas
clc
jno
ljmp
test
hlt
int3
mov
sar
push
nop
lock
lock
les
nop
or
sbb
xlat
fidivrl
dec
aam
jecxz
inc
adc
cmc
mov
xchg
movsl
pop
add
sub
pushl
sub
rcl
cli
xchg
repz
sub
dec
mov
mov
ds
decl
stos
and
pop
xchg
jno
sub
into
push
test
mov
rolb
fildll
ds
xor
sbb
movsb
fisubl
imulb
sbb
push
mov
mov
mov
adc
sahf
xor
and
into
lahf
cmpsl
subb
xor
ret
shrb
cmpsb
sub
outsl
or
sbb
aam
call
xchg
imul
inc
fisttpll
mov
ss
das
jecxz
sahf
in
push
repz
jge
scas
dec
je
call
inc
lea
das
mov
mov
xor
jmp
movsl
push
push
fidivrs
out
mov
in
std
push
inc
movsb
mov
jns
scas
or
jmp
sub
inc
and
pop
jne
stos
and
mov
pop
stc
dec
aas
fildl
cmp
mov
jo
jge
movsl
out
jge
xor
testb
jmp
xchg
mov
dec
into
mov
cmpsb
jle
or
cmp
fisttps
ss
dec
popa
rolb
rol
cmp
lock
je
sahf
arpl
dec
and
cmp
sbbb
aaa
loopne
call
xchg
push
mov
push
sub
cmp
sub
lds
movsl
insl
jg
loop
test
cwtl
movsl
es
adc
pushf
inc
jae
ljmp
clc
mov
fmull
pushf
and
sub
gs
decl
cmpsb
jb
pusha
es
lahf
mov
inc
js
mov
scas
movb
jne
iret
mov
xchg
pop
ja
and
negl
jnp
ss
es
push
lock
incl
cmp
les
or
fldcw
xchg
sbb
mov
cmp
push
mov
gs
lcall
mov
and
push
dec
lock
dec
mov
das
jp
lret
scas
cmp
cmp
call
xor
pop
out
mov
inc
mov
mov
pop
cmp
mov
or
fisttps
testb
add
decl
imulb
into
clc
dec
jg
jp
mov
clc
fdivr
lcall
jp
sub
cmpsb
cmpsl
jb
fs
daa
sbb
inc
cmp
jb
jge
xchg
fdivrl
lods
or
xchg
andb
add
inc
scas
pop
jmp
dec
incl
divl
sub
cld
inc
orl
call
and
pushl
lods
sbb
fsubrl
or
cmp
dec
xchg
fisttps
dec
mov
cltd
add
xchg
decl
das
testl
fdivr
xchg
cmp
sub
gs
push
push
mov
insl
mov
ja
pop
add
stc
push
xor
addr16
cwtl
cld
xchg
cld
insb
stos
dec
pop
out
aaa
lcall
int3
inc
xchg
shll
adc
icebp
ret
mov
sub
test
iret
imul
or
je
add
aas
adc
sbb
filds
hlt
jmp
lret
push
mulb
stos
sub
test
and
mov
jle
outsl
lcall
std
subl
leave
stos
mov
pop
repnz
lcall
repnz
outsb
add
cs
pop
repz
mov
cmp
jecxz
ljmp
cmp
xchg
repz
shr
lods
dec
rcll
imul
nop
inc
bound
mov
mov
call
mov
mov
push
pop
ja
sbb
mov
dec
mov
jbe
iret
fs
jmp
mov
out
inc
inc
out
cmp
xchg
in
std
in
dec
js
lret
ja
pushl
mov
inc
frstor
dec
mov
cltd
mov
or
add
shrl
pop
push
mov
insb
outsl
lods
sahf
repz
mov
inc
push
xchg
xchg
cmpsl
imul
pop
je
adc
cld
jb
xchg
pop
lcall
push
call
xor
repz
xor
jmp
or
aaa
xlat
lock
stos
adc
pop
dec
push
mov
repz
jbe
stos
rclb
inc
sbb
ficomps
imul
pushl
sbb
loop
pop
std
loope
dec
pop
aad
in
in
fcomip
filds
enter
aas
dec
jne
js
cmp
movsb
jmp
mov
inc
xchg
sub
lods
cltd
in
loop
xor
shlb
pusha
fidivs
and
mov
popf
adc
cmp
sbb
cmp
xor
adc
lcall
std
call
movlhps
dec
jns
cmp
iret
inc
insb
test
cmp
test
decl
push
cmp
pop
mov
enter
fistps
inc
mov
add
clc
jmp
aaa
push
pushf
sbb
mov
popf
sbb
nop
jg
mov
jae
dec
in
ljmp
push
push
insb
test
ljmp
jbe
add
icebp
push
xchg
cli
cmp
out
enter
in
add
addr16
mov
cmpsb
mov
mov
mov
pop
ja
scas
pop
shrl
ljmp
ja
mov
cmp
xor
inc
sti
dec
push
jmp
jmp
data16
add
mov
repnz
push
es
decl
rclb
call
xlat
cli
lahf
lret
std
xor
xchg
xor
add
test
ret
lcall
enter
call
loopne
negb
dec
lahf
idivb
dec
jle
mov
das
mov
ljmp
jle
call
out
cmp
inc
push
mov
dec
loopne
shl
push
mov
loope
pop
or
add
decl
and
dec
cli
out
dec
repz
int
adc
cmpsb
ret
mov
dec
subl
icebp
lock
fbld
loop
jb
mov
incb
lods
es
jmp
inc
or
out
arpl
lock
inc
xchg
test
lods
loopne
sbb
fsubrs
or
mov
adcl
addb
std
jp,pn
xchg
and
pushl
jb
xchg
ja
pop
lea
xorl
xor
sbb
call
pop
push
push
pop
mov
cwtl
or
inc
in
mov
int3
mov
push
cwtl
inc
test
inc
dec
pop
push
popa
scas
rorb
in
scas
int
push
clc
loop
std
jmp
mov
test
mov
dec
jle
pop
test
mov
sub
inc
jns
shrb
dec
imul
insb
dec
xor
xchg
insl
inc
int3
incl
fdivrl
addb
adc
xor
adc
popf
int3
jo
dec
call
xorl
push
adc
mov
inc
imul
mov
push
cmp
pop
bound
add
push
jle
jge
mov
decl
xor
stos
aad
test
and
cmp
jg
cmpsb
mov
cmp
enter
pop
clc
jecxz
ret
int3
xchg
sub
outsl
rcrb
popa
mov
ljmp
stos
dec
out
pusha
adc
repz
hlt
jns
add
inc
mov
cmpsl
and
sbb
daa
sub
mov
inc
lds
test
in
sub
ja
xchg
xlat
push
mov
and
pop
les
ret
fildll
cmc
popa
lock
stos
bound
dec
jp
fwait
movsb
pop
aad
and
rolb
mov
into
or
call
iret
mov
xor
adc
pop
fisttpl
pop
jl
negl
sbb
push
push
mov
daa
lods
add
mov
mov
jae
xor
adc
mov
jno
inc
inc
je
fsubs
loop
xchg
mov
decl
pop
pop
adc
mov
scas
insl
dec
shll
imul
cs
dec
and
decl
iret
xlat
leave
js
push
push
mov
lahf
mov
jb
aam
push
jmp
outsb
call
cmp
hlt
dec
mov
hlt
testl
xlat
jecxz
mov
mov
insl
jmp
imul
add
adc
xchg
lret
ljmp
pusha
mov
dec
in
cmp
test
in
xor
pop
ret
incl
jbe
mov
xchg
jnp
push
xchg
test
xor
mov
popf
dec
jo
cmpsl
int
inc
in
fstpl
jns
movsb
mov
scas
add
outsb
pop
xor
pop
fisubs
cmp
push
je
lods
pop
cld
scas
shlb
pop
gs
repz
lret
sub
das
clc
xor
and
sbb
jecxz
aas
arpl
jmp
mov
jg
mov
outsl
lock
dec
ja
sar
movsb
movsl
adc
notl
adc
add
inc
mov
lret
enter
test
adc
mov
push
mov
add
push
jecxz
xchg
sbb
adc
rcrb
and
lds
int
or
xchg
mov
loopne
call
in
sbb
stos
daa
push
sbb
pop
inc
sbb
addb
and
mov
call
out
push
enter
push
or
iret
mov
cld
or
pop
add
incl
pop
mov
repz
fistps
xchg
lahf
mov
cmp
jae
xchg
es
sub
mov
mov
mov
push
xchg
dec
push
call
pop
adc
xchg
sub
fidivs
pop
imul
movl
iret
mov
jg
pop
out
inc
mov
loop
loope
adc
mov
xor
stos
and
cmp
rcrb
mov
adc
nop
add
or
mov
setp
adc
lcall
mov
cmp
mov
lret
push
outsb
mov
shl
movsb
add
lcall
adc
push
dec
add
lock
pushl
mov
push
hlt
fcoml
pop
jg
jmp
outsl
std
jp
add
les
cmpsl
xchg
cmp
fcmovne
cmp
mov
mov
subb
lret
push
adc
imul
mov
jns
stc
ret
cmp
out
mov
xlat
add
adc
xor
out
incl
and
rolb
mov
xor
fldt
push
jne
in
xor
test
outsl
xchg
icebp
fsts
je
call
xor
dec
decb
sub
jmp
xor
jmp
adc
das
mov
sbb
div
aad
pop
icebp
mov
push
ret
push
jbe
test
push
loopne
decl
and
fucom
push
in
pusha
xor
fcomps
xor
call
scas
xchg
aas
mov
inc
mov
sti
inc
mov
add
add
fcmove
clc
and
pop
cmc
jmp
xor
jns
pushf
jnp
and
loop
dec
and
aam
sti
gs
lcall
mov
lods
pop
fs
jb
pop
mov
shl
dec
inc
push
or
cmp
mov
nop
icebp
ljmp
inc
enter
decl
lods
mov
pushl
pop
sbb
ss
and
stos
repz
lea
rcrl
scas
mov
std
pop
dec
push
push
lea
fcomps
int3
jg
mov
push
jnp
xchg
movb
mov
add
incl
loopne
jge
mov
jmp
call
pushf
xchg
addr16
imul
cmpsl
mov
adc
aas
inc
aam
sti
aam
addb
jnp
jo
lea
leave
fdivrp
ljmp
xor
jns
cmp
mov
cmp
mov
insl
mov
insb
stc
sbb
mul
mov
or
daa
jecxz
push
pusha
daa
dec
insl
arpl
icebp
xor
pusha
ljmp
pop
popl
jle
dec
mov
xchg
mov
push
inc
stos
popa
addl
or
ljmp
add
push
jb
sbb
cli
and
xor
sahf
mov
ljmp
xchg
cmpsb
movsl
incl
dec
ficompl
popf
out
add
jmp
imull
add
cmc
shll
sbb
xchg
aam
test
jb
sar
fcoml
in
hlt
out
sti
or
inc
out
test
adc
push
lahf
and
scas
mov
mov
fisubrl
mov
jo
inc
pushl
fisttps
shll
dec
xchg
popf
sbbl
push
lahf
sbb
mov
enter
stos
mov
push
or
or
out
dec
pop
call
negl
xchg
mov
daa
xchg
add
push
adc
int3
mov
test
mov
push
and
mov
ljmp
repnz
and
popa
sti
adc
cmovne
xchg
mov
mov
mov
pop
inc
jmp
xor
xchg
js
mov
lods
ss
mov
hlt
ljmp
cli
dec
movsb
js
pop
call
inc
ss
mov
psllw
jg
ljmp
loopne
mov
scas
dec
mov
jge
xorl
adc
incl
data16
sahf
orl
mov
push
ret
cmp
sbb
in
loope
pop
adc
inc
dec
repz
jmp
rcrl
sbbl
and
lret
sti
test
cli
dec
lahf
mov
int
mov
dec
add
xchg
xor
ljmp
cmpl
mov
fs
fwait
dec
cwtl
insl
xlat
in
pop
and
push
ret
lcall
push
iret
push
cmp
jmp
mov
inc
jge
aad
std
orb
or
pop
cwtl
loope
ljmp
jl
dec
loop
mov
mov
inc
popa
arpl
dec
lahf
shrl
and
test
dec
push
pop
mov
in
negl
push
jo
pop
cmc
incl
cltd
sarb
int3
push
cwtl
cwtl
rcll
aad
sub
pop
mov
xor
dec
stc
sub
adc
mov
jl
test
jmp
xor
ss
xlat
lcall
or
in
aaa
into
push
pop
inc
iret
aaa
cmp
sbb
xchg
fidivrl
or
adc
ljmp
lret
sub
les
sub
es
ljmp
push
lock
movsb
xchg
jns
xchg
sub
mov
mov
sahf
mov
subb
add
fiadds
xor
pusha
shr
out
pop
aaa
in
push
cmp
lret
ret
jae
xor
jle
inc
and
mov
fadd
xor
std
pushl
std
div
or
xchg
cwtl
jo
xor
sub
out
cmc
pop
pop
dec
jns
jmp
adc
cld
call
push
push
pop
pop
push
push
icebp
imul
orl
into
popa
mov
adc
sub
out
jl
test
orl
aam
xchg
psrld
push
dec
cmpb
inc
std
out
adc
xor
ss
fnstenv
inc
cmp
ja
xchg
out
lds
mov
push
lock
lcall
xchg
ja
mov
pusha
out
xchg
xor
aad
sub
lcall
inc
cmp
push
fadd
out
sti
es
sbb
xchg
stos
ficoms
lock
or
adc
jmp
sbb
pop
ljmp
pop
cltd
inc
dec
pop
roll
mov
inc
jmp
cmp
dec
test
into
pop
out
mov
sbb
pop
mov
cmc
dec
dec
mov
mov
cld
call
add
pusha
dec
fisubrs
dec
enter
std
mov
scas
out
mov
dec
insl
in
in
pushl
push
mov
xor
adc
adc
pop
cmp
xor
in
pop
int
scas
xor
or
cwtl
loopne
dec
pushf
inc
mov
test
jmp
loope
int
popf
add
xorl
mov
xchg
xor
and
imul
incl
ljmp
adc
or
jo
popa
or
fildl
lds
imull
pop
into
or
leave
mov
pusha
push
push
adc
les
gs
lods
inc
pop
adcb
cmp
mov
push
aad
pushf
dec
or
xchg
adc
mov
xchg
jbe
pop
mov
sbb
pusha
cmp
or
pushl
cmp
sub
cmp
lahf
mov
cmove
test
orb
lret
call
inc
push
js
lret
push
pop
push
sub
call
mov
fiadds
scas
insb
mov
test
pusha
sub
push
decl
jmp
out
pushf
mov
xor
mov
dec
repnz
dec
mov
lods
pushl
mov
mov
loopne
jns
add
sub
test
jg
js
popl
dec
mov
ljmp
mov
scas
push
jne
es
pop
scas
cli
inc
pop
push
lcall
and
mov
inc
jecxz
and
lahf
loopne
clc
fists
sbb
jb
lcall
leave
stos
adc
adc
and
jnp
dec
js,pn
sbb
ljmp
ret
repnz
fnop
iret
lods
dec
mov
mov
push
jp
ljmp
ss
mov
js
subb
inc
mov
mov
iret
filds
push
mov
jno
mov
pop
lock
mov
add
or
add
jl
mov
adc
cld
dec
add
sbb
push
test
shr
fldt
out
jne
mov
inc
dec
sub
xor
or
loopne
jbe
loop
mov
mov
lods
push
push
into
adc
or
mov
xlat
push
pop
dec
inc
cli
imul
cld
mov
lahf
cltd
xor
sbb
jmp
xor
call
push
inc
mov
movq
sub
or
mov
mov
jmp
shrb
pop
jnp
jbe
and
lds
mov
lods
adc
pop
std
sar
push
dec
and
mov
mov
xchg
sbb
je
pop
fistps
dec
leave
cli
das
jb
and
jmp
or
mov
mov
jle
jge
dec
dec
imull
rcr
loop
call
cmc
jo
jmp
add
fwait
mov
popa
pop
testb
ljmp
jb
out
jl
or
jg
repz
out
fdivl
frstor
or
mov
je
inc
cmc
stos
jmp
adc
shll
ret
add
push
ljmp
sbb
mov
inc
shrl
and
cmp
fdiv
stos
push
cmp
jmp
inc
mov
jno
push
or
and
sbb
xor
lock
shrb
pop
push
test
ljmp
call
push
testl
sti
ret
jmp
lock
outsl
cs
cmp
cs
inc
sbb
jg
mov
pop
movsb
inc
push
lcall
fs
jnp
ds
cli
mov
cld
mov
pop
fs
xchg
loopne
pop
add
cmp
push
or
mov
aas
rclb
lock
and
mov
loopne
lcall
iret
idiv
cwtl
lods
xchg
cli
movsb
mov
clc
xchg
add
mov
inc
mov
sbbl
arpl
clc
in
loopne
dec
sub
mov
stos
fcoms
nop
mov
xlat
cs
fisubrl
mov
scas
test
xchg
and
mov
decl
movsl
inc
aas
push
xor
sarl
cmc
adc
cli
in
pop
xchg
mov
int3
lds
js
or
mov
dec
jmp
xchg
jbe
dec
sti
decl
testl
dec
jmp
ss
int3
pop
xchg
mov
insb
pop
insb
jmp
icebp
sub
cs
psubw
rorb
popa
lret
repnz
and
pushl
lcall
pusha
inc
inc
aam
xchg
movsl
sub
add
xchg
shrl
hlt
and
jmp
lock
pop
and
mov
xorb
mov
mov
mov
jl
out
cli
jmp
rcrb
mov
push
gs
ds
mov
orb
imul
aaa
cmc
cmp
lret
aam
cmpb
icebp
push
lcall
mov
dec
add
inc
cmp
sbb
lcall
cmp
lret
mov
push
push
xchg
pushf
sub
xchg
cmpsb
pop
lcall
dec
jge
int3
cmp
arpl
sahf
fldl
lret
fs
scas
lea
call
mov
jae
dec
leave
sbb
mov
inc
sbb
fdiv
ljmp
sbb
and
sbb
jecxz
cmpsb
add
cmp
adc
pushl
and
lods
jb
fidivrl
or
jmp
lods
cmc
popf
dec
add
mov
inc
mov
push
dec
pop
adc
sbb
dec
pop
test
adc
aad
shrl
imul
call
sub
mov
out
xchg
cmp
aas
or
repnz
inc
add
jmp
imul
and
xor
stc
mov
push
lds
sbb
movsl
inc
or
xchg
jae
mov
adc
or
adc
cmp
sti
push
ljmp
insb
inc
cwtl
aam
movsb
enter
lcall
cmp
rorl
outsb
xor
cwtl
push
in
arpl
xchg
lds
dec
loop
or
push
in
pop
ss
xchg
ljmp
or
dec
add
mov
mov
jno
rolb
jne
loope
mov
push
xchg
xor
lock
in
leave
add
and
push
lea
fwait
sub
cli
cmp
movsb
or
movsl
push
ljmp
mov
lcall
xor
xchg
in
adc
negl
mov
imul
mov
fcomi
sub
adc
or
jecxz
push
popf
testl
cmp
or
xchg
sti
decl
sub
pusha
iret
sahf
push
jp
jl
mov
xchg
jp
popf
lret
aam
dec
jle
enter
jmp
popa
cmpsb
arpl
out
imul
or
mov
insb
mov
push
xchg
scas
add
decl
test
sub
subb
ret
pop
or
test
leave
addr16
xchg
lds
fdiv
cmpsb
adc
inc
andl
add
cmp
xlat
pop
mov
jno
sub
leave
inc
adc
dec
scas
loopne
jg
cli
push
je
arpl
stos
jae
xlat
addr16
sti
sbbl
mov
loope
in
lcall
add
test
in
and
xor
push
shll
lret
stos
push
subl
mov
push
cwtl
daa
fmuls
xor
jmp
jmp
decl
mov
pusha
jp
daa
jmp
cmpb
test
lock
ljmp
pusha
jp
mov
stos
nop
out
jnp
cmp
push
pop
aaa
lock
aam
dec
sbb
pop
ficoms
mov
xor
scas
and
cmc
sbb
cmp
jbe
adc
call
sub
scas
cmp
xchg
rorl
add
cmpl
jecxz
loopne
data16
lock
int
pop
enter
or
repz
cmpb
mov
add
jmp
sahf
loopne
push
adc
pushl
jbe
sbb
mov
iret
rep
push
xchg
fs
push
xchg
lret
push
dec
lcall
cmpsl
imul
pop
aad
xchg
xchg
les
jae
dec
lcall
dec
push
inc
mov
fidivs
mov
push
jmp
in
mov
lret
cmpsb
rcrl
mov
adc
adc
int
ljmp
adc
cmp
inc
add
mov
jmp
add
and
pop
imul
fdivrp
mov
jae
andl
push
sub
mov
adc
pop
movsl
mov
mov
fwait
lea
insb
mov
mov
pushl
push
mov
sbb
mov
pushf
test
pop
pop
pop
decl
fdivrs
xor
stos
cld
shl
mov
pop
mov
pushf
add
xor
fiadds
mov
add
fiadds
repz
dec
ds
push
push
into
jl
mov
mov
mov
pop
mov
in
test
jle
pusha
std
mov
sti
test
dec
cmp
inc
mov
mov
outsl
jnp
adc
aam
jl
xchg
hlt
mov
mov
sbb
hlt
xchg
sahf
aam
icebp
lcall
pushf
mov
mov
push
cmc
cmp
bound
ljmp
clc
popf
stos
xor
pop
cmpsb
inc
or
add
adc
jmp
fucomp
cmpsl
adc
inc
cli
mov
mov
icebp
fistpll
mov
icebp
mov
mov
fidivrl
jae
mov
push
negl
int
ds
or
or
jmp
dec
push
jbe
sbb
or
decl
fsts
cmp
stos
cmc
sbb
xlat
ret
mov
outsb
idivb
sbb
ljmp
clc
cmp
mov
hlt
mov
fmuls
xor
mov
shl
xchg
xchg
imul
or
pop
ss
cmp
movb
lds
dec
jge
stc
loop
ljmp
stos
imul
ffree
bnd
push
nop
push
cmp
hlt
inc
jmp
pop
out
dec
dec
imul
lahf
mov
adc
ljmp
mov
push
mov
mov
fstl
dec
pop
shrl
push
insl
loop
push
inc
repz
clc
ljmp
outsb
ret
sbb
loope
dec
mov
jmp
push
xchg
mov
jg
mov
in
outsb
pop
loop
out
arpl
add
call
ljmp
leave
or
dec
in
xor
sub
or
out
mov
int
xor
in
call
cs
cmp
test
testl
clc
inc
das
jp
int3
dec
pushl
mov
adc
outsb
push
in
aad
scas
push
fs
sar
ljmp
shld
mov
inc
jne
fs
outsl
lret
lock
or
sbbl
enter
adc
jmp
mov
mov
inc
pushf
js
incl
popa
xor
xchg
rcl
adc
sub
and
xor
lea
pop
insl
les
in
mov
mov
out
fwait
cmpsl
iret
ret
lods
ds
int
clc
adc
ret
lahf
dec
pushl
push
andb
testb
aam
repnz
sbb
pushf
iret
iret
jg
or
mov
pop
ss
in
mov
subl
xchg
sbb
aaa
pop
rcr
xchg
add
rcrb
ljmp
mov
iret
cmp
add
xchg
xor
into
sahf
pop
sub
mov
decl
gs
xchg
sarb
nop
gs
sub
faddl
cmp
imul
nop
mov
sahf
aaa
mov
arpl
fnstcw
push
or
movlps
cmp
mov
adc
mov
dec
pop
into
mov
xchg
push
test
push
adc
mov
add
xor
lcall
lods
shll
add
push
xchg
pop
cmpsl
das
mov
popa
cmp
mov
movsb
pop
hlt
push
lret
enter
sar
call
jns
adc
adc
rclb
test
loop
add
dec
stos
mov
dec
mov
lock
pop
in
sub
fs
incl
pop
mov
pop
aaa
imulb
out
test
fnsave
push
xor
lock
idiv
sub
pushf
cmp
mov
popa
das
mov
nop
dec
aad
dec
push
xor
incl
mov
into
gs
js
push
sarb
test
pop
mov
or
sbb
and
out
push
sbb
js
jo
push
add
push
mov
aam
je
scas
call
pop
scas
jbe
dec
jmp
adc
xchg
int
pop
aaa
into
mov
cltd
inc
in
dec
mov
lcall
fists
rcrb
mov
shlb
sub
dec
movsb
and
fiaddl
lahf
pusha
or
mov
and
cs
in
pop
out
inc
jns
out
scas
cmp
dec
ljmp
mov
mov
and
mov
aaa
rcl
sbb
or
sbb
lods
ja
movsb
mov
jecxz
xor
xchg
sub
ljmp
dec
fimull
lods
push
pusha
sbb
in
mov
mov
jo
xor
pusha
mov
in
int
xchg
xor
xchg
mov
cmpl
call
pop
inc
leave
push
sbbl
mov
mov
sub
jne
pop
cmp
or
insb
aam
sar
das
jp
push
scas
mov
mov
pop
xlat
or
pop
push
js
jp
adc
filds
flds
jbe
cld
inc
imul
mov
push
and
add
inc
repnz
and
inc
call
dec
loopne
xchg
testl
or
lods
jmp
push
jne
jmp
aad
lahf
mov
cs
cli
int
ja
adc
enter
adc
xchg
incl
fs
push
loop
je
add
and
jg
adc
notb
frstor
add
ljmp
or
cld
xchg
mov
lock
decl
push
sub
scas
and
jecxz
dec
or
rorb
call
loopne
test
sbb
loopne
mov
imul
xor
add
nop
pop
cli
inc
lods
mov
icebp
fcmovnb
clc
aas
in
jl
lods
aam
sbb
jbe
xchg
fst
mov
jg
add
or
mov
incl
mov
cmp
push
push
jbe
cli
add
add
dec
xchg
mov
pusha
push
pop
inc
cmpsb
inc
cmp
out
cwtl
push
mov
nop
into
xor
and
js
lcall
filds
rcrb
nop
mov
pop
sbb
xchg
call
ja
lahf
and
fcoml
dec
out
dec
sub
adc
movsl
inc
sahf
sti
push
daa
incl
shr
xlat
fdivrl
mov
leave
mov
mov
les
sub
mov
lcall
fwait
push
mov
sbb
fs
add
push
or
add
je
lea
dec
ret
decl
cmp
jb
aam
or
push
jge
sbb
sbbb
call
shll
rep
or
jmp
sar
pusha
xchg
jmp
push
jg
and
roll
jmp
leave
cmpl
nop
out
and
inc
scas
xor
xor
xchg
incl
adc
push
xor
or
dec
inc
cli
ret
jle
push
adc
loop
fprem
mov
outsl
cli
fadd
fsubp
jle
mov
jbe
xchg
jle
pop
cltd
fisubrs
cmp
out
mov
mov
in
leave
int
in
jge
mov
test
and
lods
repz
frstor
cmp
pop
fisttps
jno
call
cmpb
aas
setno
jo
xchg
jecxz
nop
repnz
ljmp
clc
dec
std
imul
or
popa
push
out
dec
mov
adc
movntq
out
imul
or
mov
pop
xchg
or
enter
sbb
call
mov
xchg
cmpsl
loope
incl
and
adc
mov
in
dec
push
xor
adc
xchg
cmp
dec
mov
jmp
adc
in
mov
fdivrl
sahf
and
mov
jmp
push
outsb
je
adc
std
jmp
into
add
xchg
jb
sbb
xchg
icebp
clc
push
or
ljmp
mov
subb
out
mov
insb
arpl
and
xor
notb
or
sbb
cmp
and
ljmp
out
push
incl
jae
xor
lcall
sti
aam
or
out
and
call
adc
loopne
stc
xor
inc
xchg
xor
outsl
xchg
mov
pop
lock
mov
pop
push
jl
bt
push
jp
fimuls
pop
mov
scas
pop
mov
jg
dec
lcall
js
sbb
inc
push
cmp
addr16
dec
adc
cltd
icebp
ljmp
cmp
pusha
test
jecxz
mov
fistps
stos
jp
aaa
fwait
mov
mov
sbb
in
fimull
inc
movsl
orl
mov
inc
addr16
test
std
dec
mov
ljmp
add
out
xor
jecxz
jle
xor
dec
nop
xorl
fldenv
in
stos
mulb
in
jmp
cli
xchg
loop
dec
lcall
and
jns
pop
add
test
insl
loop
mov
jmp
fldl
lods
movsb
jl
ret
push
jecxz
cmp
inc
es
stos
or
xor
mov
sub
das
clc
decl
adc
sub
out
add
cli
cmc
xor
test
fstpt
les
loop
dec
cltd
dec
ret
push
bound
imul
shl
and
shrl
movsl
or
rorl
pop
fnsave
xchg
pop
dec
mov
jg
mov
test
jnp
fnstsw
xchg
aam
dec
data16
jmp
cmp
jmp
inc
imul
cwtl
pop
inc
enter
jbe
pushl
clc
dec
mov
cmp
xor
shr
outsb
push
mov
cmp
pop
arpl
push
pushl
dec
xchg
in
push
fbstp
fmul
lods
addr16
ret
xor
sub
mov
pop
pop
push
mov
loope
decl
movsb
mov
movsl
dec
lret
stc
aaa
cmp
ret
imul
mov
repnz
adc
jl
mov
xor
sub
cmpsl
out
adcb
mov
mov
and
add
lods
push
enter
pusha
sarb
lcall
push
and
call
popa
ja
xchg
jae
sbb
lret
and
adc
popa
inc
aaa
mov
orps
sub
out
add
jns
lcall
js
scas
push
or
inc
mov
ja
fidivl
mov
out
call
dec
push
mov
push
push
jmp
xor
fwait
mov
dec
mov
ljmp
push
lock
ret
sbb
mov
xchg
aas
pushl
lods
jno
pushf
stos
cmp
cmp
inc
inc
std
jns
repz
ja
test
cmp
imul
scas
cmp
mov
fs
in
sbb
jg
mov
nop
push
jl
es
in
pop
imul
sar
arpl
clc
int
es
xor
pop
je
adc
and
scas
sub
es
pop
add
dec
gs
mov
fsub
push
out
mov
fwait
ljmp
mov
aad
or
andb
mov
repnz
loop
jecxz
cwtl
mov
lcall
jle
in
std
aam
and
dec
fisttpll
fnstsw
nop
lahf
push
inc
xchg
mov
inc
mov
incl
cmp
dec
mov
lret
or
rcr
push
dec
push
push
sarl
ljmp
out
insl
add
lret
fabs
fsubp
and
dec
mov
pop
aam
or
sbb
bound
call
mov
incl
dec
push
pop
add
cmp
push
jns
lods
sub
inc
cmpsl
cmp
jle
jno
enter
jmp
imul
jl
rorl
pop
test
adc
lea
movsl
jmp
ljmp
push
xlat
and
pop
in
xchg
sbb
jg
out
in
mov
lock
push
push
icebp
scas
imull
xchg
inc
mov
cmpsb
pop
ja
shr
jecxz
rcrl
xchg
mov
andb
testl
push
mov
call
subl
cwtl
sti
popf
xor
push
cmpl
es
add
nop
dec
xlat
xor
sar
incl
jbe
sahf
cmp
pop
push
mov
test
mov
aam
fnstenv
inc
call
push
and
subb
inc
jb
xchg
int3
enter
in
mov
jno
std
fcomip
lcall
inc
dec
testl
pusha
sbb
ret
jnp
outsl
mov
mov
sbb
sub
dec
xchg
jge
cmp
jmp
ror
scas
lock
incl
mov
test
jge
call
cmp
cwtl
shrl
stos
scas
sub
pop
sbb
lret
add
inc
xor
mov
fbld
sti
out
std
mov
and
mov
loope
lret
pop
pop
add
cmp
pop
test
pusha
jb
jge
movsb
jmp
adc
mov
dec
aad
std
and
push
cs
xchg
add
adcb
cmp
int3
pushl
ret
incb
xchg
and
jae
mov
inc
jl
add
jae
cli
xor
ljmp
in
push
inc
adc
inc
mov
jp
shl
shl
pop
mov
cmp
mov
bnd
in
inc
fisttps
push
std
cmp
fnsave
pop
fcmovne
push
sub
cmp
push
cmp
pop
add
ljmp
std
stos
pop
mov
xlat
loop
cld
and
push
push
movsl
push
mov
loop
fldenv
and
out
dec
insb
jb
hlt
jmp
stos
dec
cs
mov
xor
ds
cmc
xor
jg
je
enter
cld
adc
out
mov
in
repnz
add
pusha
test
in
pop
in
out
mov
sti
jnp
xor
add
fcoms
fcmovu
sar
ljmp
jbe
jae
ficoms
ss
pop
outsl
mov
lea
popf
sub
add
mov
jns
mov
xor
sbb
cmpsb
stc
int3
adc
and
jae
call
jp
scas
sbb
into
shr
ss
push
push
push
sbbb
fistl
js
push
mov
ljmp
mov
cmpsl
rcrb
call
sarl
arpl
xchg
jmp
int
filds
in
push
stc
rorb
inc
ds
nop
inc
sti
sub
cmp
decl
inc
or
rcrl
sbb
jp
dec
cmp
sub
repnz
incl
push
outsl
push
xor
icebp
xor
mov
cltd
cwtl
out
sub
incl
lret
in
cmpsb
leave
std
mov
loopne
dec
popf
and
in
cmp
mov
pop
loop
fildll
mov
jge
cmp
jp
or
sbbl
enter
adc
dec
jmp
inc
aas
jns
jne
fsubrs
insb
sbb
push
pop
sbb
out
mov
mov
cmc
in
dec
inc
push
vmaxps
decl
jne
stos
pop
rorb
testl
or
or
lock
adc
fbld
incl
push
fdiv
inc
lcall
cli
cmp
lahf
adc
es
decl
out
cli
fisttpll
dec
jae
dec
dec
cltd
and
and
cmp
inc
ds
cmp
pushl
xchg
mov
fcoml
xor
test
js
jge
sti
and
aas
add
int3
andb
call
push
and
shl
pop
cs
cmp
fnstenv
pop
mov
or
pusha
adc
sbb
repz
inc
pop
inc
lea
aam
sbb
add
dec
pop
icebp
fbld
sbb
call
rclb
dec
xor
mov
inc
mov
iret
sub
setge
mov
fwait
mov
mov
incl
xchg
push
popf
mov
sti
mov
js
arpl
lea
cmp
sub
or
call
mov
adc
out
cmc
icebp
notl
mov
mov
decl
fstpt
movsb
popa
jle
mov
mov
icebp
jmp
add
faddp
lcall
sbb
and
negb
inc
clc
repnz
fsubrl
push
and
lods
lock
jg
push
imul
and
xchg
jb
shlb
jge
sbb
decl
mov
cmp
cld
push
and
adc
pop
jns
incl
pop
and
call
mov
insl
loopne
in
push
test
cmp
addr16
int
decl
lcall
pop
dec
cmc
lahf
sub
add
rol
pop
pop
nop
ljmp
clc
aam
fwait
shrb
les
pop
outsl
lcall
ljmp
xorb
xchg
ljmp
dec
jnp
lods
and
incl
sbb
out
es
jle
lds
pop
imul
daa
jle
or
or
push
cld
mov
shl
mov
loop
repz
xchg
in
out
cld
fbld
cmpsb
mov
and
mov
repz
aam
ficompl
das
aaa
cmp
decl
cmp
clc
pop
jmp
jae
sub
in
jge
fimuls
lds
dec
mov
andb
sahf
gs
xchg
pop
sbb
mov
sub
sub
pop
pop
push
xor
mov
xlat
rorb
ret
mov
dec
pushf
sub
push
imul
sub
mov
iret
push
inc
in
jb
sub
enter
lods
test
imull
fdivrp
mov
adc
and
cmp
add
xor
imul
out
inc
jle
jno
xor
insb
lds
out
sbb
lods
xchg
je
cs
decl
mov
push
push
out
out
or
mov
cli
out
incl
cwtl
pop
mov
pop
inc
outsl
clc
rcll
pop
mov
sahf
sbb
sub
adc
and
call
arpl
loopne
gs
mov
push
push
sub
xor
inc
cmpsl
out
incl
adc
shll
sub
fdivr
in
xor
pop
lods
and
test
decl
stos
loopne
test
cld
in
add
mov
call
jno
cmp
push
dec
pop
cmpsl
hlt
in
pop
lea
scas
sbb
cld
push
data16
mov
add
fcomi
inc
aaa
ficompl
js
jmp
cli
mov
mov
xchg
inc
es
and
sub
ss
lcall
sbb
ljmp
testl
mov
mov
fs
cmp
pop
idiv
call
xor
ret
inc
cmpsl
data16
cmp
fs
decl
loope
xchg
xchg
enter
stc
push
mov
insl
adc
mov
cli
arpl
out
jp
sbb
mov
and
push
xor
dec
cmp
jg
add
shll
sub
mov
pop
cmp
dec
lds
test
stos
sub
daa
add
fmull
out
mov
aad
in
jno
test
jle
mov
test
xchg
dec
pushl
mov
mov
or
cltd
jg
pusha
out
cmp
jns
ljmp
xchg
sbb
xchg
push
push
push
fwait
and
daa
orl
dec
loopne
iret
mov
mov
dec
cli
movsl
jp
cli
lods
xchg
aad
dec
aaa
and
cld
aad
fnsave
mov
jg
add
xchg
loope
sbb
test
mov
pop
dec
repz
arpl
inc
leave
shrb
push
mov
mov
scas
cli
mov
into
sahf
cmp
or
movsb
add
jns
and
aam
inc
mov
jnp
push
in
lds
leave
cmp
jo
repz
ds
cmp
aam
mov
push
push
arpl
push
add
rcll
jle
xchg
repnz
dec
inc
incl
shr
lds
mov
outsl
mov
daa
cmp
scas
cli
push
stos
ret
sti
adc
je
out
inc
pop
add
decl
add
pop
icebp
lods
and
test
xlat
push
mov
loopne
in
movsl
popf
sbb
fcmovnu
mov
lret
call
adc
insl
pop
stos
sbb
mov
lcall
push
sbb
sahf
push
pop
jae
mov
arpl
lahf
repnz
mov
lcall
imul
mov
or
clc
or
lret
pushf
cmp
mov
or
insl
stos
push
xlat
push
lock
push
out
lret
cmp
dec
arpl
cmp
inc
lods
mov
push
mov
cmp
nop
push
addr16
jne
test
jge
shrb
and
cmp
lods
push
fwait
sbb
outsl
lcall
in
stc
inc
mov
add
imul
xlat
and
stc
add
lcall
adc
mov
cltd
mov
enter
jmp
movsl
js
int3
xor
lcall
sub
sbbl
mov
mov
stos
fldenv
adc
inc
rolb
push
dec
xchg
xchg
mov
cmp
xchg
jg
jg
pushf
leave
aas
and
fwait
mov
jp
pop
fwait
jl
cmp
jb
incl
fnstenv
mov
ljmp
hlt
mov
xor
rorl
push
test
push
mov
inc
outsl
add
mov
pop
pop
insb
in
cmpsb
incl
pop
mov
popa
add
mov
daa
hlt
int3
dec
into
in
mov
add
mov
leave
std
inc
adc
mov
pop
mov
cmc
dec
inc
mov
adc
jp
mov
xchg
mov
lret
lock
inc
insb
mov
fbstp
ja
loopne
clc
movsl
mov
adc
inc
dec
mov
roll
adc
aaa
filds
sar
ljmp
dec
cmp
orl
mov
mov
cmp
xchg
sub
push
inc
popf
fsubl
push
pop
mov
in
xorl
call
xor
and
push
lcall
call
jbe
pop
ss
push
repnz
mov
int3
fnstsw
nop
sub
push
jmp
push
jne
push
cs
in
gs
adc
outsl
scas
xchg
dec
repnz
fdivrs
cmp
push
push
pop
outsb
jmp
movsl
mov
push
loop
xchg
mov
insl
or
daa
xchg
shrl
and
pop
cld
sti
lcall
in
rorb
jle
jp
movsb
dec
imulb
mov
shll
jmp
stos
and
cmc
sarl
jp
scas
stos
xlat
add
inc
pop
cwtl
jne
push
lods
push
cmpsb
mov
stos
push
mov
add
fst
pop
xchg
cmp
lahf
mov
lcall
xchg
jmp
aas
jno
or
iret
lock
mov
in
popa
into
ror
fistpl
aad
mov
aas
imull
ret
dec
nop
ds
insb
inc
not
and
xchg
pop
cli
cmpsb
dec
out
inc
sub
incl
fnstsw
inc
daa
xchg
test
pop
push
cmpsb
mov
xor
inc
je
mov
clc
or
std
lahf
in
pop
inc
pause
jbe
add
ret
mov
push
in
push
dec
rcrl
push
add
shlb
mov
mov
js
daa
add
jg
mov
daa
pop
aam
rcl
ljmp
aad
fsubrs
jbe
notl
dec
dec
sub
lock
pop
cmp
inc
imul
mov
arpl
dec
aas
mov
imul
adc
push
xor
jno
push
cmc
adc
andb
lock
incl
loope
bound
adc
mov
pop
push
lock
mov
push
lcall
outsb
lret
xchg
xor
push
xor
mov
dec
xlat
lea
ror
ret
add
cmp
mov
test
mov
mov
mov
mov
int3
scas
jg
cwtl
pop
push
push
inc
movsb
addr16
pop
icebp
lcall
adcb
es
pop
lcall
inc
mov
fcom
cmp
push
addr16
pop
adc
add
sbb
cmpsl
cmp
inc
je
inc
fnstenv
inc
insl
ljmp
scas
mov
movsb
frstor
or
mov
jle
pushl
inc
in
jo
push
push
adc
push
ds
sahf
pop
cmp
ljmp
decl
cmc
or
or
movsl
lret
dec
not
adc
pop
inc
mov
adc
lret
std
jg
mov
push
loop
dec
dec
xor
mov
call
adc
pop
or
mov
test
fdivrl
jne
repz
decl
adc
and
or
sti
lret
loopne,pn
sub
add
jle
dec
mov
outsb
xchg
cmp
repnz
jmp
jmp
mov
stos
push
sub
imul
jecxz
repz
cmc
mov
pusha
dec
push
cmp
call
std
popa
out
push
sbb
jecxz
push
pop
icebp
lock
movsb
adc
dec
xchg
push
fildll
and
sbb
xchg
and
mov
sub
scas
ds
xchg
pop
xor
cwtl
and
jmp
icebp
pop
pop
movsb
mov
jp
orb
mov
or
cld
jmp
sub
arpl
dec
int3
test
push
ret
lret
outsl
sub
sub
call
int
inc
xchg
dec
fadds
cmp
add
jbe
xchg
cld
test
add
ljmp
push
lods
mov
add
arpl
mov
repz
roll
xchg
cmpb
sbb
mov
sub
hlt
jg
iret
cmp
pop
pop
popa
mov
rolb
xor
jno
sbb
arpl
add
jp
sub
call
cmp
scas
out
mov
or
mov
push
inc
jg
push
daa
ds
mov
add
sub
mov
cmp
test
movsb
cld
pusha
pop
mov
lcall
cmp
lret
jo
faddp
jns
sbb
inc
das
and
mov
jp
fmull
inc
ret
lcall
push
add
and
jge
mov
incl
shrl
out
push
loope
mov
mov
stos
incb
mov
cmpsl
sbb
push
out
fdivrs
push
ret
mov
sub
push
mov
xchg
jge
repnz
cmp
in
fiadds
sub
push
int
pop
lock
ljmp
mov
push
inc
out
xor
fildll
push
push
or
popf
or
jg
mov
push
mov
push
out
xor
fnstenv
push
xor
mov
hlt
add
in
sub
xor
mov
or
insb
pop
decl
xlat
test
push
jge
pop
cmp
enter
mov
xchg
push
clc
pop
push
push
out
dec
jmp
xchg
dec
aam
inc
sbb
or
repz
jns
in
insb
inc
add
ljmp
adc
pop
push
fistpl
adc
pop
sbbb
push
pop
int3
xchg
rcrb
mov
popa
test
std
jg
cmc
insl
and
out
xor
xchg
sub
pop
loopne
aaa
mov
jbe
lret
aaa
cmpsb
push
stos
data16
aas
ds
filds
inc
mov
xor
in
sub
dec
mov
cmpsb
dec
andl
add
out
xchg
cli
xchg
inc
mov
movl
js
lcall
mov
loope
fisttps
jno
out
xchg
or
jmp
int3
or
sbb
lcall
inc
dec
jmp
pop
cmp
inc
mul
loope
popf
outsb
js
aad
out
cmpsl
dec
subb
dec
xor
ljmp
les
test
mov
add
dec
dec
mov
mov
adc
mov
decl
cmpsb
or
jno
jno
pusha
push
add
js
inc
cmp
scas
and
incl
inc
push
mov
xchg
test
push
pop
pop
mov
fsubrl
jno
mov
movsl
mov
les
pop
repnz
pop
sbb
pop
out
gs
repz
repnz
idivb
inc
clc
scas
mov
test
cmp
das
clc
inc
mov
dec
arpl
cld
xor
jecxz
sbb
and
mov
sbb
test
in
scas
ds
inc
ljmp
mov
dec
mov
push
xor
cmpsb
je
dec
push
cwtl
sbb
push
lcall
pop
repz
xor
and
clc
mov
out
dec
stc
ficoms
and
cld
mov
add
insb
mov
mov
rclb
enter
mov
incl
dec
push
out
xchg
pop
xor
dec
mov
push
inc
jb
and
jg
add
and
outsb
add
movsl
adc
lcall
pop
jno
mov
push
sub
lret
mov
in
xchg
xor
mov
call
lock
jmp
sub
sarb
mov
repnz
push
xor
test
daa
cmp
mov
xchg
pop
scas
in
cmp
jg
jae
gs
dec
test
mov
cmp
mov
push
xchg
mov
mov
ljmp
stc
xchg
jecxz
sti
jnp
mov
movsl
push
xchg
inc
inc
cwtl
inc
pop
setle
adc
scas
dec
loope
jl
or
add
je
sahf
and
scas
gs
js
dec
add
jae
into
decl
xchg
mov
rol
xorl
dec
int
fwait
sbb
in
xchg
ds
adc
decl
or
xorb
adc
pop
push
gs
mov
test
cmp
mov
xchg
dec
sar
sub
push
jmp
repnz
jo
xchg
je
inc
or
scas
sub
or
add
cmpsb
dec
xor
cld
push
cmp
mov
cmp
aad
add
cld
jg
dec
cmp
stos
push
test
xchg
ds
or
dec
mov
xchg
sbb
jle
push
mov
gs
push
xor
xor
jo
pop
mov
jmp
lock
mov
mov
adc
push
fs
gs
mov
adc
inc
fistl
or
addl
lods
lahf
sarb
fstpt
pop
iret
cmp
pushl
cli
dec
imul
hlt
xchg
aad
sbb
bound
jl
xor
lret
popf
icebp
pop
push
decl
or
inc
sub
fwait
sub
dec
sarl
clc
scas
cmpsl
xchg
jbe
outsb
into
shl
test
mov
fsts
in
mov
clc
pop
jmp
icebp
sub
or
push
jno
test
cmp
push
push
daa
loope
stos
fcomp
cmp
dec
mov
jecxz
mov
in
push
loope
call
test
aaa
push
loop
sbb
sub
fsubl
xchg
pop
mov
xchg
push
jge
mov
sbb
and
cmp
les
sahf
dec
pushf
ja
loopnew
pop
pop
out
sub
cli
jb
push
sub
int
adcl
and
daa
sub
jnp
adc
jg
gs
jno
inc
xchg
cmp
push
call
mov
sbb
int
out
mov
or
je
divl
repnz
jmp
push
xlat
das
negb
imul
inc
cltd
mov
loope
or
inc
add
mov
lret
push
jmp
pop
adc
fwait
sbb
push
cmp
lds
jmp
push
jns
fdecstp
repnz
pop
lods
ss
mov
push
int
adcb
mov
pushl
dec
clc
insl
scas
lea
pop
loopne
ja
jo
push
jg
loop
es
sub
adc
push
push
pusha
fimull
push
push
adc
outsl
lcall
cmp
xor
movsb
or
insb
loopne
clc
in
push
fidivrl
in
lcall
mov
cwtl
add
pop
and
pop
jmp
negb
imul
fldenv
pop
test
sub
adc
mov
decl
outsb
data16
or
in
fldcw
sub
nop
aad
stc
cld
mov
mov
mov
imul
mov
stos
lret
fisttpl
cld
or
cmp
jo
fdivs
roll
adc
add
sarl
mov
cmp
sub
mov
or
sti
add
pushf
cmp
jp
lahf
pextrw
sbb
stc
add
lock
pop
fbstp
mov
addb
fisttps
dec
ret
adc
mov
popf
and
pop
mov
add
inc
in
add
addb
xchg
mull
pushf
cmp
push
pop
cmpsb
dec
shr
adc
stos
mov
pop
ret
jge
sub
dec
sbb
mov
aad
xchg
jecxz
jle
incl
hlt
pushf
push
adc
in
jo
mov
dec
xchg
pusha
cmp
fld
pushf
iret
jl
jnp
hlt
ljmp
add
add
mov
popf
push
ljmp
arpl
das
repnz
call
into
lods
dec
nop
fsub
mov
push
adc
jl
dec
push
push
adc
movsl
out
inc
cmp
add
arpl
es
fimull
arpl
fs
push
loop
xchg
mov
adc
jns
jo
loop
jg
outsb
push
jnp
dec
testb
call
mov
stos
mov
push
mov
mov
mov
cltd
add
fwait
sahf
into
jo
clc
pop
test
adc
lcall
retw
loop
xor
mov
das
in
push
daa
jl
push
fcoml
cmpl
pushl
jo
inc
in
cmp
scas
cmp
movsb
andl
hlt
stos
ret
or
ret
jmp
dec
lret
sub
fcompl
xchg
cmp
mov
ss
push
jg
dec
cmp
out
lcall
or
add
cmp
sub
ljmp
pop
sbb
pop
movsl
jecxz
fnstcw
ljmp
push
shl
pop
xlat
fbld
pushf
add
into
and
leave
clc
addps
decl
je
out
notb
test
iret
notb
int
cmp
cmp
jno
jmp
lcall
aaa
jge
ja
and
or
or
adc
aaa
xchg
jb
mov
das
or
int
filds
cmp
data16
jle
mov
lods
xlat
es
sbb
fcomip
xor
pushl
jg
adc
sahf
sub
stos
push
cli
lret
movsb
dec
mov
loopne
jae
inc
sbb
jg
lea
pop
sub
mov
test
sub
jl
inc
dec
lcall
jns
mov
jl
fisttpll
mov
pop
or
mov
mov
push
mov
pop
sbb
push
push
xor
call
scas
pop
cmpb
cmp
mov
push
mov
push
mov
lds
mov
xlat
mov
hlt
xchg
and
pop
mov
sbb
xor
jnp
jg
sar
pushl
or
pop
arpl
push
or
int3
xchg
pop
clc
inc
push
inc
lea
les
and
pop
jp
dec
mov
adc
push
sbb
incl
push
cmpsb
mov
push
add
pushf
mov
push
adcl
cwtl
mov
adcl
out
mov
add
add
cmp
incl
jmp
cmp
inc
aas
mov
jle
jge
fs
xor
dec
sbb
jb
jg
jg
pushl
push
mov
adc
pop
mov
cmp
jbe
std
pushl
jbe
mov
and
orb
mov
jge
dec
sub
pushl
aam
shll
bound
mov
push
add
into
add
dec
arpl
sbb
ljmp
lret
push
sub
cmpsl
stc
dec
mov
sbb
lahf
jle
or
pop
sub
aad
jmp
inc
xchg
push
xlat
inc
fimull
dec
jbe
cmp
cltd
in
add
subb
movsb
mov
call
insb
xor
aam
adc
into
mov
pop
dec
mov
outsl
gs
cld
cmp
pop
stos
xor
jae
pop
pop
movsl
mov
int
in
mov
push
pusha
sbb
mov
jmp
insb
adc
mov
clc
shll
sbb
cmp
or
shl
add
negb
mov
pop
iret
dec
mov
in
loop
xchg
inc
shr
sub
jmp
cli
push
popa
sub
adc
mov
imul
ds
shl
lods
enter
pushl
shlb
sbb
insl
cmp
sub
int
int
sbb
lea
orb
xchg
in
add
dec
xlat
or
dec
adc
rcr
cmp
in
cs
dec
pop
sub
ja
icebp
int3
mov
jecxz
inc
jmp
dec
rclb
out
addb
scas
stos
rcr
sbb
or
mov
js
adc
ljmp
imul
jl
cmc
add
cmpb
mov
int3
and
pop
mov
psubusb
fistps
jns
insb
ljmp
popa
cmp
sbb
add
inc
lcall
dec
arpl
rcll
into
sarb
jecxz
addl
cmc
sub
loopne
stos
icebp
jmp
push
dec
movsb
lea
out
add
enter
int3
cli
ljmp
out
push
outsl
sub
pop
cmp
push
push
aas
and
ljmp
out
sbb
sbb
test
mov
rcll
sub
ljmp
adc
adc
jno
jl
sets
cli
iret
jecxz
ss
pushf
and
push
sub
pushl
xchg
dec
rol
pop
in
adc
in
and
outsb
int
inc
test
in
xchg
sti
pusha
lret
cmp
lds
fmul
xchg
in
fsubrp
cmpsl
cmp
pop
fiaddl
ljmp
cli
rcll
cmp
pop
adc
shrb
inc
cmpsb
push
dec
fmul
popf
arpl
lcall
cmp
or
jno
add
xchg
inc
or
inc
sbb
mov
cld
ljmp
jle
pop
fwait
inc
leave
sub
inc
testb
fcoms
aam
cwtl
adc
jg
sub
jge
jbe
ljmp
aaa
mov
scas
ljmp
and
dec
and
mov
mov
or
sbb
cmpsb
sub
gs
fs
nop
call
push
sub
stos
sub
dec
mov
adc
jecxz
sbb
in
sub
insb
jmp
adcl
xchg
dec
sub
pop
add
pop
es
cli
sar
mov
dec
data16
mov
pushl
cmpb
lahf
push
add
repnz
daa
arpl
jp
push
or
pushl
in
inc
leave
sbb
cs
nop
or
les
sub
mov
push
sub
nop
and
insb
addl
lcall
mov
mov
xchg
adc
aad
out
icebp
inc
loopne
addl
pushl
jae
push
lods
loopne
dec
xchg
cmp
or
sbb
or
sbbl
sti
dec
or
push
out
mov
decl
push
test
sub
shlb
mov
repnz
nop
sbb
decl
lods
xchg
cmp
sbb
aaa
outsl
mov
xchg
fistpll
mov
data16
call
sbb
push
cmpsb
adc
mov
arpl
inc
aaa
push
adc
mov
incl
pop
push
enter
jno
and
and
outsb
inc
mov
aas
dec
das
ljmp
ret
and
call
xor
jne
hlt
sahf
push
loop
dec
xchg
bound
jo
jns
daa
jg
adcb
insl
ja
int3
mov
jl
into
scas
or
xchg
pop
sub
inc
fstpl
lds
mov
mov
mov
xor
out
scas
js
jmp
pop
jnp
stc
mov
cmp
sub
sbb
and
xchg
xchg
jmp
cmc
decl
and
or
adc
sub
dec
or
es
in
lret
mov
xchg
add
mov
xor
mov
call
sahf
pop
pop
xchg
mov
fs
incl
and
sbb
idivb
xor
loopne
stos
push
sub
jg
cltd
pop
or
jae
push
ss
xchg
cmp
pop
add
test
loope
pop
dec
inc
insb
adc
jae
mov
jg
stos
sub
or
push
jns
loop
ds
fimuls
inc
push
mov
mov
pop
jmp
fisttpl
jo
movsl
or
mov
adc
pop
cmpsb
pusha
daa
jbe
and
scas
jmp
mov
fcomip
call
je
addr16
ficompl
jbe
or
pop
fwait
cmc
bound
int3
or
mov
add
ds
aas
idivb
jae
insb
jne
push
leave
cltd
sub
mov
andl
add
call
push
lahf
jae
out
addl
mov
pop
or
test
mov
mov
mov
or
push
push
fistpll
and
cmp
xchg
sbb
outsb
lock
lcall
test
xchg
imul
data16
dec
test
add
mov
ds
ds
xchg
jl
cwtl
jno
sbb
jo
mov
sub
lods
lahf
incl
lods
push
mov
in
sub
pop
cmp
data16
mov
inc
sub
popa
loope
pop
xor
dec
and
cld
mov
cld
js
ss
call
addr16
sahf
adc
cmpsb
mov
ja
leave
lds
lods
mov
and
ss
adc
push
iret
push
add
incl
adc
popf
loop
nop
jno
imul
jmp
mov
push
jnp
mov
inc
push
loop
mov
aas
scas
or
mov
mov
mov
xchg
xor
xlat
lea
sub
jae
fcompl
hlt
cltd
sub
lcall
scas
push
sub
popf
and
jmp
test
mov
inc
repz
xchg
xor
push
dec
adc
or
jb
inc
dec
aaa
les
pop
aad
push
icebp
repz
out
sti
lds
mov
or
mov
or
xor
ljmp
gs
shll
pop
mov
pop
cmp
pop
enter
es
fidivrs
aam
lds
xor
adc
mov
fistps
xlat
inc
sbb
lods
dec
daa
xchg
cmp
or
pop
cmp
xor
jg
or
jecxz
or
shll
cmc
fisttpll
cltd
cmp
arpl
loope
fisttps
pusha
mov
addr16
pushl
dec
inc
aaa
cld
pop
cli
sub
nop
sbb
xchg
push
fstps
outsb
xchg
pushf
jecxz
rcrb
ljmp
or
orl
mov
movsb
and
xchg
orl
lods
mov
sbb
xchg
das
add
ljmp
jnp
popa
sub
cmp
sbb
mov
test
ljmp
push
fucomip
test
xchg
adc
movsb
imul
sbb
jp
jno
xchg
call
mov
push
xchg
push
inc
out
pop
adc
xor
loopne
in
mov
mov
ljmp
and
mov
aaa
jl
or
int3
jae
aas
pop
outsb
stc
push
pop
ret
mov
in
pop
jmp
arpl
sub
sarl
adc
and
dec
fneni(8087
dec
push
out
jmp
adc
mov
mov
cwtl
xchg
sbb
sbb
fwait
imul
push
pop
jge
stos
les
call
hlt
cmp
fdivrs
mov
sar
pushl
pop
das
xchg
fidivrl
mov
test
mov
xchg
dec
ds
mov
mov
sar
decl
pop
sbb
repnz
fsubrl
insb
imul
jmp
fcomip
call
lods
int3
adc
sub
fs
push
inc
loop
faddl
inc
xor
mulb
add
cmp
popf
xor
cltd
mov
incl
lods
jp
mov
cmp
jecxz
shrl
clc
imul
scas
fsubrs
jmp
sub
jge
arpl
jp
push
stos
jbe
lcall
jne
imul
je
aas
push
pop
or
jmp
push
lods
iret
call
sbb
cmp
sub
xorl
pop
fstpt
in
mov
test
gs
jmp
hlt
jecxz
js
mov
xor
dec
imul
stos
add
sbb
lods
dec
pop
popl
pushf
push
inc
lock
icebp
pushf
sbb
add
pop
xorl
push
push
lret
mov
gs
pop
movsb
push
dec
or
aad
int
mov
std
xchg
adc
popl
sub
fildl
add
sub
popf
aam
inc
loopne
loop
mov
stos
dec
cmp
inc
imulb
int
ja
rcll
lcall
scas
mov
push
in
leave
dec
sub
repnz
mov
es
nopl
out
ficoml
in
push
xor
xor
inc
push
jno
pop
xor
push
ds
pop
cld
push
adc
lret
and
outsl
dec
mov
xor
enter
addb
js
js
xor
cmp
ljmp
pop
shrb
arpl
xor
je
inc
int
push
mov
rorl
enter
rclb
call
xor
or
rcr
dec
daa
mov
cwtl
inc
adc
and
lcall
mov
lcall
pop
xchg
iret
push
aaa
scas
aam
add
call
mov
into
mov
fstl
rcrb
add
push
sahf
add
cmp
test
or
decl
inc
inc
adc
mov
xor
mov
push
jecxz
mov
incl
lods
xor
imul
insl
leave
sub
xlat
dec
inc
mov
cmp
add
data16
mov
ds
ret
movsl
or
insb
pop
mov
push
rcrl
adc
mov
and
mov
xorl
loopne
sub
jmp
inc
mov
jnp
ds
xor
in
jns
xchg
xchg
lods
sub
pop
cmpsl
popa
mov
inc
mov
xor
sbb
cld
xchg
test
xor
push
movsb
pop
cmp
adc
cmp
lcall
xchg
add
les
adc
ljmp
xchg
cmpsb
incl
outsl
shrl
outsb
inc
les
fsubs
cmp
push
or
incl
mov
leave
pop
pop
fmuls
lea
jne
mov
jmp
int
les
push
test
push
add
ret
mov
incl
sbb
jb
cmp
add
or
inc
sub
subb
dec
outsb
clc
das
lcall
pop
push
adc
sbb
cli
mov
pusha
shlb
mov
ljmp
int
and
lods
imul
dec
xor
daa
lahf
rorb
ljmp
and
sbb
inc
push
enter
pushl
mov
pop
sub
cs
inc
rcrl
popl
arpl
push
xchg
vunpcklpd
xchg
dec
sbb
sbb
sbb
gs
lcall
xchg
and
push
cwtl
push
cmpsl
or
cld
xchg
cmp
jae
daa
int
mov
mov
inc
test
mov
sub
pop
dec
test
out
mov
int
repnz
roll
mov
inc
jge
addr16
jb
imul
jbe
movsl
repz
mov
incl
sub
sub
inc
or
dec
mov
xchg
aam
adc
dec
lret
and
cmp
sbb
mov
stos
mov
leave
addr16
jp
fisubl
lahf
int3
mov
mov
aam
mov
lcall
mov
test
mov
imul
nop
dec
push
pushf
pop
sub
cs
add
test
lcall
inc
jl
jmp
mov
cmc
loopne
andl
rolb
mov
mov
cli
or
cmp
sbb
sub
or
mov
cwtl
divb
mov
ja
neg
or
dec
xor
loopne
incl
mov
outsb
lahf
out
xchg
out
cwtl
sub
mov
in
ss
xchg
call
clc
loop
out
pop
pop
add
sbb
adc
cmc
or
incl
dec
xor
dec
xchg
ljmp
rcll
and
in
and
add
lcall
cmp
pop
inc
xchg
push
fiaddl
mov
lcall
mov
loopne
mov
and
enter
mov
fucom
mov
pop
enter
dec
mov
cltd
or
std
push
mov
push
xor
fcomip
add
addr16
mov
or
xchg
mov
mov
cmp
push
mov
cmp
mov
aam
scas
hlt
or
cld
cmp
jecxz
idivl
clc
inc
aaa
xor
imulb
in
mull
dec
jno
sbb
outsb
and
ret
and
mov
push
inc
clc
push
loop
xor
sbb
cmp
jb
out
xor
sti
in
adcl
jb
and
shrl
cwtl
pop
std
jmp
push
pop
mov
push
sub
imul
push
popa
pop
das
mov
mov
xlat
insb
jns
jg
imul
add
pop
xor
xor
sahf
or
jbe
and
xlat
adc
jecxz
xchg
dec
mov
jle
test
mov
call
out
cld
add
adc
cs
fimuls
adc
add
jae
mov
mov
sub
jo
inc
leave
xchg
push
mov
call
imul
xlat
jno
lret
enter
lret
aad
fs
xor
jle
jle
add
jge
outsl
or
out
xchg
push
in
mov
mov
sub
into
or
pushl
inc
filds
faddl
bound
fiadds
push
adc
mov
lea
jbe
int
cwtl
jge
push
fs
loop
or
dec
rorl
pop
loopne
incl
push
test
mov
and
test
cmp
call
push
mov
int3
sti
loope
cmp
xchg
mov
jmp
fidivrl
aad
push
mulb
sti
mov
mov
clc
xor
ficompl
lcall
add
pop
jecxz
adc
xor
add
jge
pop
int
and
stos
ret
xlat
dec
icebp
push
pushl
std
ljmp
xchg
popf
push
cwtl
jecxz
loope
aaa
dec
outsb
or
mov
sbb
cld
cld
rcl
jb
mov
jl
sbb
jmp
pushl
xor
imul
aas
push
add
jecxz
imul
mov
repnz
dec
and
pop
outsb
stos
in
ds
sub
cli
mov
jge
lcall
rclb
dec
add
inc
imul
pushf
nop
fwait
test
incl
insl
repnz
mov
xor
jp
mov
inc
in
push
adc
repnz
sub
call
enter
loope
lods
addr16
ljmp
and
push
inc
insb
dec
xchg
fdivrl
incl
sbbb
inc
sub
psubw
fsubrs
addr16
mov
filds
rcr
es
cli
and
out
adc
subl
xchg
es
xchg
pop
and
inc
mov
xorb
jne
mov
xchg
in
fldenv
icebp
mov
scas
std
add
add
sbb
push
les
cmc
cmp
mov
lods
cwtl
push
sbb
loope
mov
adc
xlat
jnp
lcall
add
test
adc
jne
aaa
fcom
rcr
pop
mov
clc
outsb
push
xor
pusha
sbb
cmpsl
xor
jno
sahf
mov
pop
fstpt
enter
call
aaa
push
sti
and
out
bound
inc
test
shrb
pop
or
lret
pop
js
pop
xor
lcall
cmp
push
jge,pn
cmc
lcall
repz
movsl
inc
jne
movsl
test
out
nop
clc
fidivrs
dec
sarb
ret
js
xchg
sbb
jmp
cmp
sarb
inc
pop
cmpsb
sub
xor
mov
les
mov
jno
push
push
cltd
sar
ljmp
movsl
adc
cmp
aad
mov
aaa
push
test
outsl
jno
pop
or
xor
xchg
mov
pop
hlt
jne
leave
or
jo
shrb
data16
or
xor
add
mov
cmc
pop
jns
mov
fwait
aas
fldenv
xchg
stos
addr16
ljmp
and
push
xchg
pop
dec
xlat
sbb
pop
in
das
adc
mov
imul
sti
popf
pop
sbbb
and
pop
sub
pop
aas
and
insl
sub
cmp
cmpsl
lret
ret
xchg
xlat
xlat
mov
pop
cmp
iret
xor
add
mov
shl
scas
cli
decl
lret
iret
push
jg
iret
push
xchg
xchg
xchg
jo
xchg
fmulp
daa
fwait
jmp
cmc
xchg
and
lcall
shlb
int
mov
and
std
incl
out
jae
mov
daa
adc
lahf
jg
mov
dec
adc
out
mov
cmp
outsl
jo
inc
push
push
aam
push
jo
jo
sti
xor
lcall
fwait
imulb
dec
ret
add
pop
jp
pop
sub
jns
mov
jmp
iret
or
or
dec
stos
sti
test
or
fs
jg
arpl
clc
popa
lahf
in
ds
imul
jmp
insb
jge
jg
or
cld
and
xor
icebp
stos
in
jp
sub
jmp
lahf
leave
push
daa
pop
insb
call
jl
mov
dec
sbb
scas
cmp
jae
jno
shrb
push
sbb
xor
sub
icebp
jecxz
lcall
jmp
clc
rcr
movsl
js
add
call
push
icebp
addr16
mov
inc
js
lret
lret
xor
xchg
je
lods
pop
call
or
xor
incl
cld
incl
sbb
std
shlb
addr16
cmp
sti
ljmp
jle
add
mov
out
test
fmulp
lret
shll
call
mov
repnz
adc
bound
cwtl
nop
sbb
negl
mov
adc
and
fidivrs
popf
arpl
in
mov
test
enter
push
xchg
xor
jb
stos
ret
filds
call
fsubrs
dec
and
mov
jo
jg
inc
pop
sahf
test
mov
sbb
push
shlb
inc
push
push
sub
inc
std
jbe
decl
mov
data16
cs
dec
idivb
daa
outsb
xchg
jae
and
cli
inc
nop
dec
mov
jne
cmpsl
dec
xorl
add
push
jle
sbb
xchg
mov
andl
aad
push
inc
adc
rorl
add
adc
imul
jecxz
xor
cmp
add
cld
pop
sbb
mov
cmp
mov
xchg
es
add
sbbb
xchg
lock
aam
sub
pusha
shl
cwtl
jb
add
sbb
sarb
idiv
and
sar
jo
rcll
cmpsb
cli
dec
cmp
decl
arpl
ss
add
sub
inc
mov
add
adc
jo
pop
mov
adc
decl
mov
and
mov
adc
sub
pop
cli
mov
scas
imul
shll
inc
mov
and
in
dec
inc
sbb
adc
sbb
fst
call
in
xlat
inc
lods
cmpb
jecxz
icebp
or
or
adc
jg
les
dec
jbe
xor
jae
pusha
cli
clc
out
lret
les
outsl
jle
hlt
inc
sub
ljmp
rclb
daa
pop
leave
mov
insl
xchg
testb
loop
in
icebp
jae
mov
jbe
call
sbb
loope
sbb
aam
jmp
push
jbe
adc
push
ljmp
incl
xchg
mov
out
ds
bound
loopne
lea
cmp
mov
add
cmp
push
call
jmp
in
xchg
inc
inc
sbbb
leave
out
add
cmp
in
sbb
mov
lcall
pop
mov
enter
ja
mov
adc
loope
sbb
dec
inc
cwtl
sbb
fisttpl
lea
andb
inc
aad
mov
fldcw
sbb
pushl
cltd
jp
mov
mov
pop
iret
xor
push
cmc
movsb
mov
pop
mov
icebp
cmp
mov
dec
and
shlb
js
pop
ret
ret
movsb
pop
jmp
sbb
icebp
out
xor
or
mov
enter
pushl
sbbb
outsl
stc
cmc
jnp
mov
dec
cmpsb
push
mov
xchg
mov
sbb
jns
push
cwtl
xor
inc
inc
cwtl
test
out
jb
add
mov
push
xchg
fwait
lds
movsl
test
or
cld
leave
mov
pop
push
in
sub
jnp
dec
mov
xchg
cmp
dec
leave
xchg
lock
inc
dec
test
dec
into
std
mov
xchg
orb
jbe
jnp
test
mov
xor
das
es
jg
incl
scas
std
jmp
cltd
push
cmc
sbb
inc
add
das
rorb
std
int3
mov
adc
mov
push
pop
sub
sbb
sarb
outsl
in
cmp
ja
push
mov
pop
inc
pop
adc
movhlps
incl
fnstsw
cmpsl
pusha
sbb
jo
sahf
cmpsl
and
jo
mov
xor
jno
mov
mov
cld
jmp
mov
popa
pop
pop
push
in
cli
and
jne
cld
shll
sbb
clc
xchg
ljmp
add
rcr
clc
or
inc
sub
imul
out
sbb
jno
mov
dec
pop
lock
out
pushf
movsb
insb
dec
scas
xchg
rcrl
xor
call
adc
insb
push
add
push
mov
fsubl
inc
rcrb
icebp
xor
add
add
fstl
inc
test
ss
jg
sbb
sbb
cmp
and
jmp
int3
push
jnp
pop
lods
ljmp
les
push
and
daa
inc
mov
mov
scas
aaa
popf
test
mov
lahf
pop
std
dec
call
dec
lcall
lahf
or
push
ljmp
pushl
push
mov
adc
into
sub
and
mul
data16
mov
lret
std
cmp
aam
mov
mov
push
pop
lret
ja
or
clc
adc
push
jns
xchg
pusha
shrl
loope
popf
or
fdivr
das
cli
decl
xchg
mov
mov
daa
push
dec
mov
jecxz
jns
pminub
int
out
jg
lcall
mov
pop
xor
inc
or
xchg
sbb
and
sbb
dec
dec
shlb
aad
add
mov
repz
decl
dec
stos
jne
pop
sub
push
ret
es
push
ljmp
dec
cmc
or
xchg
call
aaa
cmp
mov
cmp
pop
push
push
jne
dec
divl
adc
sbb
jae
ljmp
test
inc
dec
rcrb
leave
scas
stos
pushf
sbb
test
xlat
or
je
test
pushl
cmp
daa
xchg
stc
shlb
lret
pop
rcr
popa
cmpsl
pop
pop
mov
mov
cmpsl
sub
jo
icebp
das
repz
dec
insl
pushl
add
ja
sub
jmp
sub
pushf
test
add
ljmp
nop
adc
adc
mov
jmp
pop
mov
rcll
loop
push
xchg
jae
or
enter
cmp
lcall
inc
pop
push
pop
iret
ficoms
lret
or
adc
push
jmp
inc
jg
popf
mov
push
or
aad
xchg
out
mov
and
out
lahf
incl
and
xchg
inc
lock
push
inc
call
pop
push
and
clc
mov
fidivl
cmpsl
mov
call
and
dec
out
inc
lods
loop
pop
xchg
pop
dec
jg
add
ds
incl
mov
ljmp
adc
dec
mov
mov
and
enter
enter
in
mov
jo
cmp
mov
lods
jnp
dec
push
dec
cli
in
push
inc
out
push
ret
cltd
insb
dec
pushl
sub
xchg
pop
mov
test
ret
movsl
adc
push
mov
lcall
icebp
test
inc
xchg
popf
push
inc
cmp
test
rclb
push
mov
push
add
cli
and
dec
cld
ljmp
ficoms
jle
cmp
mov
xor
rcll
test
mov
std
inc
jnp
jg
and
mov
jb
into
mov
call
lret
jl
mov
shrb
xchg
movsb
cmpsb
cmp
or
pop
pop
jmp
in
jns
xorl
xlat
or
push
lahf
jmp
mov
pushl
cmp
sahf
cmpsb
and
leave
call
sub
dec
incl
rcll
sub
and
cltd
jb
punpckhbw
scas
loop
pushl
inc
jecxz
sub
gs
xchg
roll
xchg
push
lret
aaa
std
adc
enter
sbb
scas
shll
adc
cmp
mov
rcl
jge
dec
jecxz
inc
jg
aas
pop
mov
push
and
int
jle
ficomps
out
and
push
test
icebp
push
std
incl
push
mov
and
push
int3
test
roll
jmp
out
mov
iret
xchg
ret
mov
gs
aam
add
or
call
test
pop
in
loope
mov
int3
mov
decl
mov
xchg
xlat
mov
adc
dec
push
lcall
call
xchg
test
and
push
mov
sub
sub
cmpsl
pop
xchg
sbb
or
dec
mov
movsl
stc
push
cltd
mov
xchg
push
dec
scas
push
mov
jg
sbb
xlat
adc
inc
out
rcrl
rcrl
subl
mov
fcomip
ljmp
xchg
test
ret
sar
or
jg
subb
call
cli
xchg
outsb
adc
dec
clc
lcall
ljmp
je,pn
shr
dec
push
sub
adc
mov
fists
sarl
xor
xchg
ja
int3
mov
push
jns
inc
adc
test
push
in
ljmp
jp
jne
scas
ljmp
adc
out
scas
fwait
repnz
test
pusha
scas
ds
mov
mov
push
cmc
fsubs
jne
mov
aam
mov
scas
sub
push
add
jmp
shll
cmpsl
dec
push
outsb
test
mov
rorl
mov
mov
ljmp
pop
or
and
push
lock
xchg
sub
pop
movl
in
movsl
mov
punpckldq
lahf
sbbl
sub
int
ds
or
and
hlt
cwtl
cmp
ret
ja
jae
dec
xchg
in
push
sbb
out
in
xchg
push
and
fisttpll
mov
div
push
scas
xchg
rcl
leave
ljmp
punpckhdq
push
scas
mov
lods
shrb
push
fsubl
xchg
mov
mov
jne
inc
cwtl
jmp
outsb
mov
mov
out
push
decl
adc
mov
repnz
outsb
enter
iret
loop
dec
cwtl
inc
test
icebp
popa
xchg
ret
fldt
incl
mov
xchg
cmpsl
inc
in
test
out
jle
movsb
data16
jl
ret
loope
mov
add
in
ljmp
push
out
and
dec
ret
out
sbb
popa
mov
xchg
ja
bnd
loop
or
mov
andl
ret
out
dec
addr16
mov
or
je
sub
aas
icebp
fcmovnb
shrl
lock
jne
adc
cld
jg
in
adc
lods
clc
sti
leave
test
loopne
test
or
mov
stc
mov
push
push
push
lret
jmp
inc
and
jbe
insl
add
clc
add
mov
lock
outsl
xchg
lcall
pop
dec
mov
dec
stc
push
xchg
sbb
imul
rcll
loope
ds
xchg
jg
push
push
ss
movsl
cs
mov
and
das
mov
sbb
dec
std
lcall
out
iret
leave
inc
test
aaa
jle
push
push
out
push
jmp
sub
fcomip
outsl
cltd
ljmp
pop
ja
or
aam
ror
stc
lods
jbe
ja
decl
adcl
inc
cmpsb
push
or
sub
dec
incl
pop
out
dec
pop
lcall
cld
call
cld
xchg
loope
and
mov
xchg
scas
jno
jne
jecxz
cld
jecxz
push
leave
aam
jle
jnp
and
ss
std
pinsrw
lock
cmp
and
out
cmp
shll
pop
aas
lcall
push
and
pop
pop
mov
dec
mov
sarb
dec
sub
xchg
mov
xchg
loop
into
popf
mov
sti
inc
sbb
into
mov
popf
mov
stc
push
jle
sar
jg
jbe
cmp
outsl
lods
jo
popf
jnp
jl
push
loopne
mov
xchg
andb
lds
mov
stos
lcall
test
adc
cs
mov
and
fsubl
adc
cmp
out
decl
stos
jp
loope
out
or
mov
adc
ja
or
ja
dec
push
subb
sti
cmp
in
pop
pushf
inc
sbb
test
add
pop
mov
inc
dec
push
mov
xor
jecxz
cltd
popa
inc
jne
addr16
lret
sbb
jmp
in
mov
ret
subl
xor
mov
sbb
xor
jae
decl
clc
sbb
pop
subl
add
pusha
subl
xorb
popa
fs
cmp
movsb
jmp
push
pop
in
cmp
aaa
mov
cld
mov
das
fwait
jbe
sbb
sub
call
mov
add
sarb
or
in
cmp
into
jle
inc
test
decl
dec
mov
lahf
lock
fsubs
ja
mov
push
cmpsb
pushl
aam
jo
fld
adc
repz
lea
decl
sbb
imul
lods
addb
scas
mov
arpl
adcb
incl
data16
enter
pop
mov
sbb
mov
xchg
movsb
lea
jmp
jmp
mov
push
stos
jnp
mov
push
xor
scas
push
inc
sbb
mov
clc
aas
dec
daa
les
fiadds
popa
in
clc
pop
pop
shl
lods
xchg
jne
sbb
push
mov
mul
adc
ljmp
in
push
insb
adc
popf
fs
sbb
push
add
inc
dec
pop
lds
ss
ds
aas
lods
sub
fldcw
pop
popf
sahf
daa
out
cmp
xchg
cmc
pop
sti
and
aam
aas
mov
push
pushl
das
or
push
jp
add
mov
mov
dec
js
in
lcall
mov
std
jns
cmp
sbb
sub
into
jbe
shrb
leave
ss
xor
mov
ljmp
inc
jg
out
aas
push
xchg
mov
les
and
nop
test
decl
scas
sub
mov
shrb
push
pop
pop
loopne
clc
ljmp
mov
mov
mov
mov
pop
xchg
inc
ja
shrl
aaa
adc
pop
mov
lds
mov
mov
nop
scas
push
js
ss
sbb
push
pushf
add
dec
or
out
or
fstpt
jmp
jp
mov
inc
fildll
imul
dec
cli
nop
test
pop
pop
xchg
cld
fs
push
test
movsl
mov
test
imul
scas
clc
ljmp
push
cmp
mov
mov
sub
shll
and
jmp
adc
jbe
dec
in
adc
loop
je
push
jne
mov
call
aad
fistl
add
jl
scas
out
sahf
sbb
test
mov
cmp
xchg
mov
rcrb
out
xor
pop
cld
adc
out
or
sub
mov
and
cwtl
mov
mov
push
jae
pop
cmc
incl
add
leave
ret
es
in
sub
mov
xor
jae
incl
mov
xchg
testl
xor
clc
mov
mov
ljmp
pop
bndstx
xchg
cmp
bound
pop
in
cmp
ss
dec
lods
jmp
ss
dec
std
incl
insl
lock
xor
ret
loope
mov
mov
je
je
mov
test
jne
mov
sub
decb
pop
lret
cmp
ljmp
push
mov
inc
add
sub
dec
pushf
mov
vmovapd
pop
push
sarb
xor
nop
sbb
pop
std
pushl
int
pop
repnz
loop
rolb
pushf
lahf
and
aad
sub
mov
jecxz
mulb
lret
inc
clc
xor
notb
add
inc
rorb
hlt
decl
xchg
inc
icebp
xchg
mov
int3
aam
sub
es
lea
je
dec
cld
fcomip
enter
xchg
dec
push
roll
lods
jb
jecxz
jg
push
into
mov
add
mov
and
inc
xchg
pusha
imul
call
popl
je
jg
xchg
ss
imul
negb
aam
mov
scas
and
leave
imul
gs
mov
inc
outsb
mov
mov
adc
std
adcb
neg
xor
push
jbe
fcos
ljmp
lds
outsl
cmpsl
lods
jle
and
sub
subb
cld
lcall
jle
hlt
sbb
aam
mov
aam
mov
call
or
mov
loope
and
ror
mov
mov
sub
and
push
loopne
fcmovnbe
loopne
scas
adc
jle
xchg
outsb
out
movsb
mov
pushf
xor
incl
inc
shr
push
sub
sarb
pop
divb
mov
inc
mov
sti
std
mov
and
lret
scas
lcall
test
xor
hlt
sbb
incb
add
lret
es
pushl
shlb
xchg
mov
movsb
pop
xor
hlt
mov
test
pushl
pop
pop
jmp
ljmp
lahf
iret
dec
mov
lahf
movl
dec
or
shl
xor
mov
cmp
and
adc
mov
xor
je
leave
and
xchg
cld
call
cld
pop
sub
adc
gs
dec
fildl
std
add
loop
jmp
rclb
jns
jg
add
pop
xor
add
jp
mov
jmp
xor
jae
es
ror
cmpsb
gs
lret
sbb
jnp
fsubrl
imul
fcom
push
xchg
adc
popf
into
mov
insb
out
mov
xchg
divb
jg
add
dec
xchg
lret
mov
sbb
cwtl
inc
cwtl
cld
aaa
and
pop
adc
scas
ud0
jl
shlb
aad
dec
data16
xchg
mov
hlt
mov
mov
dec
adc
inc
mov
fidivl
ret
xchg
shrb
jecxz
sbb
xchg
cmpsl
je
fneni(8087
add
ljmp
sub
repz
cmc
pop
jle
mov
mov
test
jg
cmp
int
xchg
add
sub
push
popa
scas
imull
pop
jno
jb
sti
xor
push
mov
jns
popf
aad
xchg
mov
cmpsl
add
ljmp
sub
cmp
xor
pop
imul
test
sbb
xlat
xchg
fnstenv
sbb
stos
repz
jns
pop
push
mov
cmp
fdivl
clc
push
inc
mov
rcr
pop
out
rolb
aas
test
outsl
clc
jle
or
int3
loop
pop
adc
inc
inc
into
push
mov
mov
cs
mov
jne
aam
inc
mov
outsb
mov
test
lcall
gs
cmp
pop
or
sub
mov
push
nop
test
dec
dec
jbe
lret
jo
push
sub
call
fs
push
test
mov
ljmp
xor
push
inc
out
out
dec
push
jge
fcoms
shlb
daa
in
lock
ljmp
outsl
jne
jns
bound
fwait
and
push
aam
out
xor
add
repz
imul
add
int3
ds
xchg
jg
clc
push
mov
arpl
lea
mov
pop
jnp
adc
call
sahf
shll
jb
outsl
dec
into
lret
push
inc
repz
lods
push
adc
cli
sub
stc
dec
mov
lea
xor
push
bound
lahf
sbbl
mov
sbb
jp
push
negl
xchg
inc
dec
mov
mov
aaa
mov
decl
or
in
call
aad
outsl
mov
xor
jl
push
push
mov
in
pop
xchg
or
ljmp
jge
sbb
pusha
insl
mov
ret
push
out
cltd
dec
push
sbb
and
cmc
inc
jbe
mov
xchg
lcall
ret
adc
roll
inc
xor
in
mov
mov
int3
sub
mov
jmp
and
insb
loopne
mov
sti
jg
cmp
mov
test
aaa
repnz
js
push
iret
aaa
fstl
call
call
lods
dec
cmp
fsts
jbe
nop
lea
popf
mov
call
js
adcl
int
fsubrl
xor
jle
and
pop
aas
push
rolb
lcall
xchg
fcoml
sbb
or
inc
dec
cmp
leave
pop
dec
mov
push
add
pop
adc
aam
mov
jg
push
or
or
adc
or
adc
push
test
movsl
test
lcall
xchg
dec
xor
shlb
fdivp
aam
test
adc
stos
aad
add
cmp
jbe
lods
cld
or
outsl
lahf
hlt
jg
sub
adc
jmp
flds
fists
sbb
push
int
push
mov
lahf
sbb
sbb
xchg
mov
lret
into
les
mov
test
xchg
mov
fisubl
pop
push
je
fsubs
lods
enter
into
dec
scas
sub
adc
insl
sbb
xchg
int
nop
sub
ljmp
jne
outsl
mov
es
bound
aad
dec
or
pop
test
jle
jno
dec
ljmp
pushl
xchg
xor
mov
xor
jne
aam
pop
clc
call
push
int
adc
leave
and
call
pushf
xchg
or
pop
pop
jno
add
mov
incl
lods
add
aad
xchg
ljmp
ja
test
ficomps
insl
incl
cld
incl
cli
cld
ss
jge
mov
fcmovnu
arpl
das
test
mov
fmuls
outsl
xchg
test
xor
lcall
aaa
sub
sub
js
pusha
aaa
xor
lcall
mov
push
jp
sub
popf
or
and
shlb
ljmp
dec
mov
rorb
mov
xchg
jb
or
push
loopne
call
nop
mov
and
movb
popf
xchg
sbb
hlt
fwait
mov
ret
push
loope
enter
incl
scas
pop
jmp
pop
xor
add
xchg
insb
stos
mov
movsb
insb
jge
cltd
call
xor
cmc
xchg
bound
cltd
xchg
sub
xchg
ficompl
sbb
mov
adc
ficompl
jge
or
pop
lret
mov
push
sahf
rcrb
call
ja
cmpsl
jp
idivl
dec
popf
pop
ret
in
out
je
rorb
icebp
mov
stos
aam
pop
ljmp
mov
xlat
mov
shll
mov
mov
mov
or
jmp
shl
inc
fcoms
dec
call
inc
insl
sti
adcb
ljmp
imulb
pop
out
fcomip
orl
movsb
sbb
jb
inc
fsubr
daa
mov
push
cmp
aas
push
call
in
pop
add
mov
xchg
aam
in
mov
das
mov
cmp
incl
and
pop
dec
ja
xorb
testb
cmp
pop
repnz
out
clc
dec
rclb
aad
dec
xchg
decl
push
jne
hlt
fucomi
lods
outsb
xchg
movsb
inc
sarl
mov
pusha
cmp
dec
cld
call
insb
stc
mov
aaa
das
jl
jae
call
cmp
ljmp
popf
pmulhw
decl
adc
add
sub
xor
dec
add
inc
add
mov
decb
fmul
pop
and
mov
inc
shl
dec
push
pop
out
imul
js
xchg
arpl
orl
mov
pusha
pop
push
pop
es
sub
jnp
test
jg
mov
in
jnp
mov
mov
sti
inc
push
inc
clc
mov
lcall
pop
inc
pop
andl
fwait
xchg
jp
push
ja
pop
push
popf
fldcw
dec
frstor
shll
in
rclb
sbb
pop
and
int
repnz
mov
hlt
shlb
cmp
fldl
les
fadds
js
lret
and
xorl
or
xor
cmp
incl
push
notb
aad
sbb
test
lcall
xorb
sahf
sbb
call
fwait
jle
xchg
incb
sub
andb
js
bound
clc
loopne
lock
sub
idivb
scas
and
ja
test
test
inc
and
xor
xchg
clc
fists
inc
jno
lods
jp
mov
out
incl
andl
add
shr
add
loop
cmp
ljmp
dec
insb
push
pop
popf
adc
cmpb
dec
mov
std
adc
pushl
xlat
hlt
addl
mov
sub
sbb
inc
hlt
loop
sub
dec
out
push
push
pushf
pmaxsw
mov
pop
sahf
idivb
sbb
loope
loopne
adc
sti
mov
jge
sub
push
and
cmp
fnclex
dec
pop
sbb
push
ljmp
cli
dec
or
js
inc
xor
pop
jb
push
hlt
popf
mov
sbb
ljmp
pop
xchg
jb
sbb
sub
dec
adc
imul
xchg
repnz
lcall
outsl
cmc
scas
inc
loope
mov
ret
cmp
inc
out
enter
mov
jno
aas
mov
xor
inc
leave
add
lcall
sbbl
in
xchg
jmp
sbb
push
js
std
test
xchg
fdivl
xchg
push
sub
mov
lock
aad
jle
fiaddl
addr16
movl
fcmovbe
sar
jmp
dec
fs
jo
leave
add
dec
ret
imulb
xor
mov
push
mov
mov
jb
xchg
jb
data16
push
mov
inc
fcomi
lods
xchg
mov
fiadds
sub
mov
push
jmp
int
push
jg
decb
xchg
orl
cmp
call
push
fxtract
pushl
cwtl
mov
insl
mov
pushf
mov
outsb
or
cmpsl
push
jbe
cmpsb
sub
xlat
cmp
cmp
cs
call
xchg
in
insl
test
out
daa
adc
out
clc
neg
in
xor
lea
pop
and
subl
clc
iret
cli
les
test
data16
lret
mov
jo
cltd
jg
imul
mov
jge
popa
shrb
and
rcll
or
push
int3
aam
enter
and
call
pop
sbb
sbb
sub
pop
cmpb
mov
das
push
loope
mov
ljmp
adc
sub
vpsubusw
inc
ljmp
aam
filds
cwtl
dec
ret
jmp
dec
iret
sti
aad
je
fs
cmc
xor
sti
mov
pop
sub
fisttps
idivl
fs
dec
ljmp
jbe
decl
lods
mov
sbb
imul
popa
jp
cmp
pop
ds
jmp
leave
stc
decl
lock
nop
dec
scas
mov
arpl
and
cmp
icebp
pushl
jl
adc
ljmp
push
cltd
sbb
and
push
jb
jmp
fmul
and
mov
insl
aas
xchg
je
ror
cmpsl
dec
sbb
aad
addr16
call
jl
jb
or
pop
and
inc
mov
shrl
jmp
push
push
cmp
rol
ljmp
adc
int3
mov
jns
push
cli
leave
and
mov
in
ret
cmpsb
adc
xchg
ljmp
mov
mov
sti
fnsave
shrl
das
add
cmc
popf
xlat
movzwl
mov
and
or
xchg
ljmp
aas
mov
ss
ljmp
cmp
jg
dec
xchg
leave
lahf
leave
ret
lcall
stos
pop
sub
orb
push
data16
hlt
pop
mov
mov
scas
decl
cwtl
lock
mov
adc
inc
cmp
not
push
movsl
test
jno
pop
std
ljmp
sub
jno
mov
aas
shl
stos
inc
pop
add
pushf
into
pop
dec
sub
dec
mov
jmp
in
insb
xchg
lret
sub
out
imul
inc
pop
add
jmp
jmp
and
jmp
cmpsb
push
test
outsl
inc
xchg
or
test
imul
inc
ds
cmp
pusha
dec
mov
mov
hlt
js
jmp
xchg
incl
mov
pop
ss
adc
mov
fnsetpm(287
sub
pop
mov
lcall
push
or
sub
std
sub
or
jp
scas
les
shll
xchg
pushl
cmp
cmpb
inc
xchg
push
call
or
jmp
push
ljmp
nop
cmc
cmpsl
jns
rcrl
stos
push
cmp
scas
fcompl
jecxz
pop
ljmp
es
inc
test
sbb
repnz
fistl
adc
call
enter
jo
std
lods
push
mov
aam
jnp
rorb
out
aam
jp
test
jo
stos
lcall
std
in
mov
cld
pop
mov
popa
jecxz
addr16
out
fldt
call
xchg
or
mov
xchg
or
xchg
test
lcall
lds
cs
out
jne
loop
loope
aaa
subl
cld
jo
in
fdivrl
mov
repz
cmp
or
dec
xchg
sti
cmp
cli
lcall
mov
or
test
and
xchg
shl
sbb
incl
mov
dec
pusha
adc
and
cmpsb
rcr
insl
inc
fnstsw
adc
cmp
decl
lcall
cmpsb
pop
xchg
pop
xor
sub
mov
adcb
call
sub
scas
sbb
test
add
xchg
mov
into
js
xlat
ljmp
test
cmp
mov
movsb
shrl
dec
or
sub
fisubl
cmp
hlt
dec
fists
or
cmpb
lcall
jle
jnp
cmp
into
aad
xor
mov
dec
push
fcoms
shlb
mov
pop
lods
arpl
sbb
adc
xchg
xlat
lea
mov
dec
mov
pop
std
call
inc
movsl
xor
rolb
ror
and
ss
cmp
ljmp
sahf
xlat
and
test
and
jl
ret
xor
rorl
mov
fwait
add
jg
hlt
call
addb
in
dec
fcompl
js
or
fimuls
std
ljmp
cli
and
cmp
dec
setno
mov
lahf
mov
out
mov
push
ss
add
pushf
lds
inc
pop
lods
ljmp
scas
adc
jge
pop
fnstenv
push
add
mov
stos
cmc
sub
std
scas
lock
dec
push
push
add
push
and
mov
add
cmp
call
loopne
xchg
mov
mov
aaa
cld
jmp
or
jb
sar
dec
shlb
cmp
push
sbb
ret
movsl
and
andl
lods
xor
stos
jmp
mov
gs
ret
mov
arpl
mov
in
and
pushl
mov
test
movsb
dec
adc
or
jl
jg
mov
xchg
adc
sub
je
lret
add
ja
fmuls
cld
jmp
jno
repnz
subb
inc
push
mov
sahf
sahf
ljmp
roll
sub
mov
sarb
arpl
add
mov
out
sbb
jge
bound
je
xor
es
ljmp
pushf
adc
xlat
leave
sti
testb
pop
jl
imul
sbb
ljmp
jae
loop
mov
lock
add
push
adcb
enter
mov
in
or
mulb
mov
shrl
leave
jp
pop
sbb
mov
push
lret
cmpsl
dec
xchg
push
jns
mov
sub
dec
jns
sub
add
push
or
push
cltd
sub
jle
shlb
adcb
pop
es
push
dec
xor
fcmovu
and
sbb
sub
lods
add
in
mov
mov
insl
and
xchg
test
cmpb
xor
mov
mov
mov
jnp
subl
outsb
filds
add
xlat
loope
jmp
sbbb
das
call
jns
jne
lret
mov
loopne
roll
push
andl
inc
adc
aad
jp
incl
push
out
push
dec
and
mov
xor
iret
sbb
sub
mov
fidivrl
rolb
mov
ljmp
xchg
cmc
nop
add
lcall
ret
ja
cmp
push
pop
mov
sub
add
daa
fistl
xchg
aam
push
dec
xchg
mov
or
dec
pushf
jne
sub
sub
call
cld
pushl
add
fdivrs
and
in
cwtl
or
dec
sub
dec
nop
mov
sub
xor
loop
fistpll
andb
daa
fcompl
mov
test
rcl
es
cld
out
add
pushl
bnd
sub
cmp
or
mov
inc
and
loopne
ret
fistpll
add
push
push
lret
xor
hlt
dec
popa
jns
push
dec
outsl
or
cmp
pushl
jnp
add
xchg
orb
mov
das
dec
add
data16
sbb
incl
sub
pop
fcoms
pop
fidivs
inc
xchg
adc
mov
lcall
xlat
lods
jnp
xor
xor
jns
test
sbb
pop
xorb
ljmp
push
mov
lea
jns
enter
fdivr
dec
in
xor
dec
frstor
jl
pop
adc
cwtl
or
push
sbb
subb
cmc
add
mov
push
call
mov
jno
mov
mov
mov
incl
sti
adc
insb
loopne
popa
enter
adc
inc
lcall
scas
add
mov
scas
fildl
mov
cwtl
imul
iret
xchg
xchg
incl
and
aas
aas
or
sbb
out
stos
or
mov
dec
insb
pop
out
inc
stc
inc
add
mov
popf
dec
test
mov
pop
into
lods
aam
fisubrs
xchg
lcall
ljmp
mov
cltd
fwait
mov
push
pusha
aam
clc
push
xlat
sbb
and
stos
mov
mov
or
add
dec
ljmp
incb
loope
cltd
addr16
icebp
notl
inc
insl
gs
stos
jnp
jo
out
ror
lods
fisubl
jl
and
mov
mov
inc
incl
xor
push
imul
dec
or
jl
add
stc
jge
adc
mov
dec
pop
nop
jo
cs
or
jmp
sbb
stos
lcall
cmp
lock
add
adc
inc
test
loopne
mov
sub
iret
test
inc
add
pop
or
int3
and
xchg
mov
das
clc
dec
mov
cmp
daa
and
fnstcw
test
pop
and
mov
push
call
aad
jne
push
add
scas
mov
or
divb
cwtl
inc
scas
aas
xlat
mov
push
push
jmp
data16
cmc
arpl
push
inc
mov
loope
fnsave
mov
cmp
pushl
jbe
xor
test
div
repnz
cli
xor
nop
inc
fadd
or
fnstcw
jns
push
sbb
pop
push
cs
adc
mov
rolb
lahf
and
je
cmp
xchg
mov
lcall
lret
mov
std
pusha
out
inc
push
repnz
rcrb
in
dec
imul
inc
daa
lahf
jb
mov
out
sarl
sbb
cmp
push
pop
je
or
call
cwtl
addr16
clc
push
mov
lret
and
adc
push
lock
adc
mov
int
je
sub
xchg
and
fwait
dec
nop
fistl
mov
cltd
and
dec
mov
popa
xor
push
sbb
mov
jb
xor
popa
adc
pop
insl
lcall
mov
and
mov
sub
daa
pop
cs
jne
stc
mov
xchg
push
push
and
mov
sbbb
adc
dec
ljmp
cmp
fisubrs
xor
mov
lret
and
ljmp
dec
out
sub
cs
fsubs
popf
in
test
decl
dec
sub
inc
mov
out
movsb
ljmp
mov
dec
push
incl
les
push
xchg
fcoml
imul
push
sub
adc
and
jp
decl
mov
jno
dec
ljmp
push
cmpsb
push
dec
pop
sahf
pop
push
je
mov
xchg
bnd
xor
fcos
decl
push
jg
mov
loop
je
fildl
adc
or
mov
nop
mov
push
jl
mov
or
mov
movsl
movsl
jmp
cmp
sti
test
inc
insl
mov
mov
xor
ret
enter
ret
pop
test
cltd
fadd
pop
cli
xor
notb
addr16
jmp
js
nop
scas
lds
cld
mov
jge
pop
enter
shll
adcb
mov
sahf
pusha
jo
ja
das
ljmp
sbb
shl
mull
cltd
arpl
jae
mov
push
push
mov
repz
mov
mov
int3
xchg
comiss
loop
hlt
adc
in
mov
movsl
incl
les
mov
shlb
mov
ret
xor
sahf
lret
dec
mov
adc
repnz
call
fisubrs
and
popl
lock
enter
sub
and
jae
jg
test
or
adc
rol
in
add
xchg
out
clc
ret
iret
xchg
cmc
mov
and
xor
or
cltd
fildll
mov
inc
lcall
aas
in
cwtl
sub
or
and
negb
jno
cld
arpl
imul
jmp
out
add
test
pop
roll
or
jmp
lcall
and
rclb
incl
mov
mov
dec
mov
pop
pushf
cmp
cltd
or
cmp
rcrb
std
call
in
jb
out
loopne
xor
push
add
mov
push
stc
in
imul
hlt
in
mov
out
pushl
shr
cmpl
xchg
or
int
mov
testb
mov
pop
fisubrs
cmp
mov
or
test
and
inc
pop
xchg
jg
cmp
sub
in
enter
cltd
gs
sub
popf
and
lods
xlat
incl
cld
aad
dec
pop
mov
imul
jo
add
xlat
sbb
subl
nop
dec
inc
andb
and
lcall
and
xchg
sub
div
dec
mov
jb
xorl
sub
outsl
mov
in
inc
mov
mov
push
js
loopne
lcall
incl
nop
dec
dec
enter
pop
in
inc
push
xchg
outsb
nopl
cld
ss
push
pushl
jo
test
test
add
int3
dec
out
and
dec
psadbw
pop
test
xchg
gs
mov
or
fwait
popf
push
sub
es
sub
xor
incl
sub
push
outsb
push
and
xchg
mov
mov
xlat
repnz
sub
xchg
pushl
std
push
in
fidivrl
es
icebp
jl
movsl
scas
orl
bound
in
sub
inc
mov
and
lret
rolb
push
and
pushl
shrb
test
jmp
nop
xlat
mov
scas
aam
or
mov
xchg
xchg
jmp
mov
dec
fstpt
loopne
xchg
pop
mov
pop
sub
adc
mov
int3
cmp
out
sub
mov
cld
mov
ds
sub
popa
push
jae
in
mov
popa
incl
in
cbtw
imul
ret
mov
pop
xchg
sbb
pop
std
mov
fstl
fstl
movsb
addr16
push
jae
cmpsb
dec
mov
cmp
add
and
outsb
movsb
mov
cmp
popf
jge
push
cli
call
xchg
mov
xchg
jo
sarl
jge
mov
adc
inc
ret
jmp
adc
mov
xchg
adc
jo
lds
call
incl
xchg
push
in
push
jle
jp
outsl
jl
test
divb
inc
cwtl
push
cmp
mov
lds
imul
or
xor
push
mov
xorb
inc
xchg
out
ljmp
andb
and
aad
dec
pop
sbb
jg
adc
pop
bound
push
insb
push
dec
into
jbe
icebp
sub
inc
repz
lcall
mov
mov
pop
gs
push
lret
mov
ja
sub
fdivrs
pushl
mov
fisubrs
test
loopne
js
dec
mov
out
insl
subl
dec
xchg
dec
sub
jmp
pushl
jg
push
int
loope
es
sar
jo
pop
push
sahf
push
sbb
cmpsb
fsubs
mov
gs
add
adc
push
movsl
repnz
lahf
pop
cmp
mov
mov
fdivr
mov
cli
fwait
push
faddl
pusha
xchg
mov
fistpll
jbe
movsb
jmp
call
aas
pop
movsl
out
cltd
pop
xchg
inc
push
mov
xor
jg
dec
dec
movsl
cmc
fdiv
mov
sbb
pop
cmp
jmp
mov
ja
aam
jno
out
adc
in
ja
jecxz
decl
lcall
pushf
cmp
inc
hlt
inc
add
push
adc
mov
scas
rcll
jg
adc
add
mov
jmp
ret
nop
int3
jmp
jg
mov
fadds
mov
add
aas
adc
aas
ljmp
lods
ljmp
ja
mov
or
lea
push
test
incl
inc
push
push
scas
aad
adc
sti
push
popa
std
imul
xchg
repz
sub
call
call
sbb
cmp
fnstsw
popf
pop
xorl
or
shlb
ja
cmp
nop
cmp
mov
add
fwait
imul
mov
jne
and
pop
jmp
push
jge
pushf
cli
rcl
cmp
mov
ljmp
aam
jb
es
lods
lods
add
out
add
mov
je
fldt
test
add
push
lret
add
test
test
mov
bswap
xor
cwtl
test
pop
sbb
dec
add
call
mov
jl
sbb
dec
sub
jle
and
or
lcall
cmp
flds
sub
mov
mov
cmpsl
or
inc
hlt
lods
imul
pop
cld
decl
sub
mov
fcmovnb
fwait
sub
mov
mov
and
mov
jmp
mov
idivb
enter
fnstenv
stos
call
xchg
mov
xorl
mov
inc
jg
inc
or
lods
cmp
add
jo
iret
data16
sbb
lcall
enter
incl
push
pop
cmc
stc
mov
mov
pop
mov
mov
es
mov
stc
add
pusha
jae
rolb
sbb
xchg
mov
loope
ret
mov
mov
jb
sub
and
mov
mov
loope
js
push
jg
pop
xor
popf
xchg
xor
or
es
dec
outsl
push
fbld
mov
sar
lcall
cmp
iret
popa
or
aaa
loopne
cmp
movb
sub
jg
or
lods
xchg
arpl
cmp
pop
mov
pop
popf
xchg
subb
sub
sub
enter
int
xchg
sub
xor
ja
lcall
dec
ljmp
ja
mov
hlt
pop
dec
inc
call
ljmp
xorb
inc
xbegin
push
pop
sbb
fisttps
jecxz
dec
cs
cld
lods
hlt
sub
push
loopne
cld
and
decl
jb
inc
push
out
xchg
gs
adc
rorb
cltd
jge
push
mov
jg
sub
enter
ljmp
xchg
into
push
jmp
aas
aad
int
or
mov
jp
icebp
lcall
cwtl
adc
cld
ljmp
cmp
inc
sbb
xor
cmp
jle
insb
or
adc
pop
outsl
and
dec
call
push
stc
fdivr
ret
add
sbb
cmpsl
test
faddp
xchg
add
clc
xchg
lods
push
incl
leave
and
push
mov
xchg
ffreep
mov
inc
fcomip
decl
jle
fxtract
loop
pop
aad
cmc
pop
sub
mov
sbbl
decl
xor
fisubrs
scas
xchg
mov
call
popl
jg
mov
fisubs
sbb
cmc
pop
sub
dec
mov
add
jg
sbb
cwtl
mov
fildll
movsb
pop
mov
jg
or
or
sbb
sarb
jns
lcall
and
mov
or
xor
mov
jmp
pop
cld
sbb
in
or
movsb
xchg
std
jne
jp
adc
or
into
call
inc
jp
sbb
jecxz
jmp
enter
jecxz
or
lcall
xlat
inc
or
sbb
sbb
push
push
and
imul
jmp
and
ss
cmp
add
push
adc
in
into
cwtl
pop
mov
pop
stos
sub
push
sarb
mov
sti
xor
lahf
out
fs
xor
pusha
cmp
out
pop
inc
int3
cmp
call
ret
pop
cmc
xor
vmread
lea
cs
ljmp
stc
popa
and
add
dec
in
push
loopne
lret
aam
sub
sbb
insl
sbb
or
lcall
sub
pop
xchg
jmp
lahf
dec
sbb
jmp
scas
jae
cli
cmp
test
xlat
dec
jge
ds
push
xchg
loopne
cltd
inc
pop
fidivs
andb
cltd
decl
lock
jecxz
pop
adc
push
add
pop
loop
arpl
mov
and
jmp
aaa
in
sbb
insl
cmpsb
and
enter
xchg
pop
pop
inc
inc
xor
jmp
jp
xchg
xchg
insb
cli
sbb
imul
mov
orl
sbb
jmp
hlt
cs
sbb
cmp
cmc
loope
pop
fdivp
leave
pop
sahf
stc
or
movsl
or
cmp
xchg
and
jmp
dec
gs
incl
scas
cmp
cmpsl
ljmp
sub
inc
test
xor
ljmp
cs
pop
lcall
aaa
mov
sbb
fidivl
rol
enter
test
jg
mov
push
xchg
sbb
rcr
xchg
enter
jmp
add
out
mov
scas
aad
add
mov
int
cmpsb
or
mov
cmp
rorl
adc
ror
sbb
test
inc
call
jns
mov
or
sub
mov
mov
repnz
les
pushl
inc
cmp
jecxz
outsb
jl
jp
xchg
mov
in
inc
jne
scas
push
mov
mov
stos
push
decl
xor
push
jnp
mov
pop
xchg
push
lret
push
dec
push
call
xchg
clc
push
jp
sub
push
mov
add
ljmp
imul
and
add
lret
es
outsb
mov
decl
lods
adc
jns
push
xlat
loop
mov
xchg
sub
incl
cmpsb
icebp
aas
std
pop
out
push
adcb
cwtl
xchg
pop
adc
sahf
stos
fs
inc
xchg
lahf
jnp
lret
inc
cmp
adc
fs
call
incl
inc
popl
jo
cwtl
out
loop
addr16
sub
popf
std
popa
jae
and
sti
insb
or
jmp
lods
inc
sbb
sbb
and
dec
sbb
out
cli
and
adc
pop
jno
inc
mov
adc
sub
int3
clc
incl
dec
adcl
pop
es
jp
jnp
or
ljmp
test
je
cwtl
mov
jmp
outsl
or
data16
inc
sbb
cmp
cmp
aas
loopne
xchg
aad
ret
adc
push
js
stc
mov
push
xor
lock
jmp
nop
sub
clc
out
lahf
scas
inc
mov
pop
sub
push
mov
adc
or
test
test
jg
decl
adc
xchg
mov
outsl
dec
and
fwait
sahf
sub
pop
or
incl
fdivl
push
mov
adc
lret
daa
fistpll
dec
jmp
adc
movsl
fsubl
jecxz
mov
jle
cmp
filds
push
mov
std
cmp
fcmovb
sti
negb
loope
sti
mov
leave
jmp
inc
mov
push
or
jae
mov
icebp
decl
push
jo
or
pop
lea
xor
ljmp
lcall
fwait
into
xor
in
ffree
inc
in
shll
mov
mov
insb
popa
sub
pop
pop
or
jg
pushl
inc
fidivl
jle
lret
dec
or
cwtl
mov
arpl
aad
lcall
out
jmp
jecxz
loop
add
push
pop
adc
repnz
adc
cmp
incl
aaa
inc
adc
inc
jns
clc
cwtl
and
mov
into
pop
out
xchg
arpl
push
loop
cltd
fidivrs
shlb
jae
push
mov
lods
in
and
push
iret
ljmp
jecxz
int3
cmpsb
sbb
loopne
dec
clc
test
fmull
cmpsl
popa
xchg
movsb
sub
jle
pushl
xor
and
cmp
cmp
bound
push
mov
inc
jg
mov
mov
xchg
xor
xlat
stos
and
lcall
mov
push
mov
inc
subl
sbb
pop
push
dec
xor
loopne
int3
mov
shlb
ss
inc
fwait
cmp
mov
rcrb
push
pop
ljmp
rcl
div
push
cmp
fwait
out
dec
and
xchg
adc
ds
add
das
sar
cmp
xor
and
jbe
push
xchg
or
jg,pt
mov
popf
fisttpll
or
jbe
adc
lds
cmp
ficompl
lcall
dec
jno
xor
stos
inc
jne
dec
sbb
sti
mov
mov
fimull
inc
jecxz
push
cmc
inc
inc
cltd
hlt
pop
mov
xor
ds
cmpsl
pop
enter
fiadds
dec
mov
lods
movsb
movsb
sbb
push
lods
pushl
lret
cli
and
inc
jae
pop
test
pop
mov
sbb
cmp
pop
sub
aaa
xacquire
gs
incl
dec
testb
xchg
mov
mov
outsb
push
mov
ss
scas
loope
adc
jmp
mov
add
scas
in
dec
fisttps
or
sub
stc
arpl
adc
ljmp
jmp
out
fs
mov
leave
mov
mov
test
mov
dec
mov
lods
stos
pop
jmp
sub
repz
dec
mov
and
gs
cmp
in
cmp
sti
mov
cld
call
xchg
or
addr16
nop
pushf
dec
fwait
jbe
and
or
sub
iret
xchg
jp
cmp
pushl
in
pop
scas
call
stc
movsb
jo
dec
out
gs
fwait
leave
push
fwait
loopne
imul
js
lcall
das
mov
ret
mov
mov
lods
xchg
sbbl
dec
add
jae
lcall
xchg
mov
js
xchg
or
push
lock
fnstsw
lcall
js
mov
sti
push
aad
sub
add
popf
mov
jo
in
loope
jmp
dec
in
movsb
rcr
je
mov
mov
add
cli
mov
mov
adc
jb
push
enter
aas
xor
movsl
cltd
inc
jg
lcall
cs
aam
pop
push
lahf
or
mov
sbb
scas
incl
jg
mov
mov
jecxz
loopne
dec
sub
ret
mov
push
inc
mov
das
jo
mov
push
out
ljmp
xor
cltd
mov
orb
dec
inc
add
jmp
sub
aas
leave
lcall
out
daa
out
xor
aaa
cld
call
inc
fiaddl
lea
dec
fcompl
shll
xchg
xchg
jg
call
inc
daa
sti
ljmp
fnsave
or
outsl
jmp
out
addr16
or
xlat
add
idiv
call
pop
cld
xchg
popw
mov
xchg
xor
jmp
cltd
and
xchg
or
sbb
push
inc
cmc
xchg
xchg
xor
adc
mov
ljmp
and
shl
mov
sub
fcomps
cmp
test
mov
cmp
mov
and
cmp
add
or
insl
loope
cmp
jno
push
ja
pushl
imul
add
xor
out
push
sub
lea
inc
aam
mov
mov
pusha
insl
mov
mov
adc
xchg
dec
scas
jne
cmpsb
lcall
insl
incl
xchg
rcrl
fistps
mov
sti
cltd
mov
aas
rorl
lahf
out
or
push
dec
or
adcb
lds
ret
in
dec
je
jl
sub
mov
jmp
insl
cmp
xlat
jmp
xor
dec
bound
pop
sbbl
sub
bound
xchg
sar
or
scas
stos
ljmp
movsl
push
aam
dec
enter
lcall
mov
daa
fists
aaa
call
sub
push
scas
pop
jmp
sub
aas
mov
lret
clc
popa
and
xor
insl
pop
mov
pushf
cli
iret
dec
sbb
rcrb
xor
xchg
sub
outsl
push
insl
mov
jp
push
ret
mov
int3
mov
push
mov
adc
pop
out
or
je
stos
push
sbb
loopne
lahf
enter
mov
ljmp
mov
mov
dec
lea
rcr
add
decl
test
xorb
mov
push
shl
jg
cs
dec
jno
js
test
xor
je
sbb
xchg
cwtl
mov
call
aaa
cld
and
adc
insb
rcl
mov
pop
add
shrl
icebp
adc
incl
es
sub
ret
sbb
push
pop
pushf
xchg
lcall
sub
push
scas
jmp
jns
cmp
test
addr16
in
jmp
sub
aam
dec
adc
mov
sbb
in
adc
lcall
das
sahf
sub
and
out
sub
aas
nop
cmpsb
popa
ret
dec
cltd
sub
sub
imul
out
xor
arpl
mov
insb
jg
call
sbb
sub
cmp
push
mov
mov
push
decl
or
jbe
xchg
push
neg
in
outsb
test
rcrb
sbb
jmp
jg
adc
jno
pushf
fiaddl
push
iret
add
enter
lods
dec
sub
jmp
data16
and
lahf
add
push
mov
and
lock
push
out
out
jmp
fdiv
cmpsl
imul
xor
sarb
add
inc
mov
mov
gs
mov
xor
jnp
cmp
push
in
popf
subps
ljmp
and
or
inc
sbb
sbb
fs
sbb
jge
jmp
pop
xchg
dec
pushl
cld
push
shl
popa
mov
fdivr
cmpl
lods
mov
leave
pushf
xchg
test
push
sbb
push
inc
es
pop
xor
inc
or
or
test
leave
dec
les
mov
push
adc
cltd
sbb
gs
je
push
cmc
loop
fildll
cmpsb
fsts
in
dec
and
adc
inc
je
mov
and
inc
mov
or
xor
jno
inc
pop
mov
sbb
cmp
incl
jbe
nop
inc
mov
out
push
inc
enter
cli
add
je
lods
add
std
fidivrs
incl
dec
icebp
push
sbb
pavgw
aad
insl
mov
arpl
add
jg
lds
mov
les
fisubrs
testl
test
cmp
push
addr16
pop
outsb
lea
pop
adc
mov
aaa
mov
ljmp
and
sbb
faddl
add
pop
out
and
call
jg
scas
fcmovbe
cli
mov
mov
adc
out
shrb
adc
ljmp
ret
dec
xor
test
jg
sbb
sbb
incb
fisttps
shlb
test
adc
inc
jmp
or
call
push
movsb
rclb
popa
ss
aaa
std
lcall
inc
psubw
lods
push
lods
inc
sub
sbb
or
out
mov
add
stos
sub
adc
push
aas
sar
mov
and
dec
pop
and
lret
inc
inc
jecxz
jge
and
or
mov
mov
cmp
add
pop
push
mov
ljmp
xchg
ljmp
sub
cmp
aas
sbb
ja
jns,pn
sub
xor
out
adc
push
data16
jo
incl
inc
sub
adc
mov
add
call
ss
adc
sbb
pop
mov
jb
push
rorl
arpl
decl
test
clc
ret
gs
adc
sub
out
mov
sbb
cmp
push
incl
ljmp
ja
ljmp
or
mov
pop
jle
mov
decl
ljmp
cmc
rclb
stos
sub
ss
cmpsl
mov
pushl
jmp
stos
pop
jae
xor
das
or
jne
sub
push
cmc
mov
cmpb
ljmp
xor
faddl
fcmove
mov
decl
push
add
subl
lret
pmaxsw
xor
mov
test
ljmp
subb
mov
and
ss
mov
outsb
jns
xchg
stos
xchg
lcall
test
mov
lea
leave
jl
sub
leave
push
xchg
mov
dec
lahf
cmp
ret
dec
mov
fmull
xchg
mov
jge
xchg
stos
gs
xor
push
fisttps
incl
imul
test
call
push
data16
xlat
or
cmp
jmp
orl
push
sub
imul
lods
popl
xchg
arpl
call
ljmp
iret
mov
ljmp
aam
lea
in
hlt
outsl
dec
inc
stos
add
mov
mov
dec
das
cmpsb
mov
xchg
mov
outsl
outsb
cmpb
lods
int
notb
mov
lcall
mov
sti
stos
imul
ret
jno
jb
lds
inc
jae
pushl
daa
leave
outsb
pushf
sbb
inc
aaa
repnz
ds
mov
cmp
or
pop
adc
in
incb
dec
xchg
cmpsl
sar
fidivl
divb
mov
adc
outsb
idivl
adc
dec
dec
jmp
pop
ror
pop
pop
lea
push
imul
jmp
call
push
mov
es
scas
add
test
jo
push
pop
push
nop
sub
push
add
or
lcall
add
fmuls
cld
outsb
cwtl
xor
mov
add
mov
stos
jl
add
addl
add
push
out
fisttps
pushl
lea
icebp
cmp
jae
xchg
or
jle
shrb
shrb
sbb
fisubs
scas
xor
add
adc
call
cmp
xchg
dec
dec
lock
jmp
mov
adc
testl
pop
stos
call
push
cwtl
sbb
fdivr
call
dec
xchg
lret
adc
jno
shll
loop
mov
stos
mov
out
cmp
popa
notb
fucom
incl
out
fimuls
xor
daa
lock
push
repz
mov
js
stos
int3
int3
mov
ffree
mov
push
jae
lea
pop
insb
cmc
cmp
pop
popf
xor
pop
sbb
cmp
push
xchg
lods
or
fs
jmp
ret
test
xchg
mov
call
out
aam
push
push
andb
shll
inc
fdiv
xchg
mov
add
xor
push
pop
test
incl
ret
lock
mov
xchg
mov
push
fsubrs
les
ja
ret
ljmp
cld
loop
add
mov
and
ret
arpl
jl
xchg
inc
insl
add
mov
push
inc
xchg
ja
ljmp
or
mov
sbb
sub
insl
jno
dec
decl
es
mov
dec
in
or
pusha
push
imul
das
jns
popa
push
test
sbb
bound
clc
adc
pop
mov
movsb
scas
xchg
jmp
out
es
pop
loope
pop
divl
sub
adc
jg
in
ret
data16
adc
and
sub
pop
inc
ffreep
or
jmp
repnz
and
cvtps2pi
push
sar
lcall
pop
out
pop
push
or
sbb
fisubrl
inc
loop
cli
clc
inc
cmp
sub
pushl
pop
sti
mov
cmpsl
xor
jg
or
mov
jg
stos
je
cld
mov
ljmp
mov
adcl
icebp
sub
int
sbb
sbb
jp
xchg
add
cld
jge
or
cltd
jge
inc
shlb
insb
cmp
mov
incl
push
or
rol
insl
xchg
jl
jns
add
jmp
idivb
or
lcall
push
mov
out
pop
pop
inc
pusha
dec
sub
test
fcmovb
fsubr
loop
je
pop
add
incl
pop
aaa
movb
arpl
cmp
ljmp
popf
mov
or
cmp
dec
push
sbb
mov
shrl
xlat
pop
xchg
aam
incl
imul
xor
sub
js
aam
cmpb
fadds
leave
fdivs
cs
cld
scas
add
ljmp
jecxz
popa
dec
lcall
out
mov
jae
jbe
mov
pushl
cmp
aaa
mov
mov
push
push
pop
push
push
jb
incl
lds
fimull
dec
mov
pop
sbb
inc
mov
loop
sub
push
jae
pop
seto
repz
jno
push
sub
push
decl
hlt
cmp
ds
loope
jg
mov
dec
push
imul
je
stc
jmp
push
cltd
cltd
mov
sbb
fbld
and
iret
sbb
cld
jge
adc
aaa
in
fmull
fldt
decl
xchg
jo
mov
inc
lods
add
or
add
movsl
inc
clc
and
lock
ljmp
js
or
cmpb
sbb
enter
push
mov
cmp
cmpb
push
cmp
jmp
dec
aas
cmpsb
cmpb
xchg
testb
jmp
push
bound
or
ljmp
inc
xchg
xchg
data16
test
pop
adc
fdivrs
mov
in
inc
lock
jo
jg
inc
pushl
outsb
iret
into
or
dec
or
call
xchg
lcall
xchg
es
cmc
fs
nop
mov
fwait
push
sub
jns
sub
sub
adc
movsl
test
jns
mov
mov
push
lahf
clc
out
pop
outsb
push
jl
loope
xor
ljmp
call
test
inc
aaa
stos
sti
mov
inc
inc
jmp
sti
call
mov
add
mov
or
pop
xlat
adc
and
and
xchg
inc
cmc
out
mov
and
cmpl
scas
rorl
mov
mov
jp
inc
inc
dec
iret
adc
das
lcall
mov
outsl
adc
decl
xor
pop
jge
mov
inc
lea
cmp
and
sbb
mov
scas
jle
lret
push
cltd
inc
loopne
cmp
sbb
add
mov
jl
or
xchg
and
mov
ss
fistpll
add
sub
cmp
add
lds
xor
sti
and
hlt
ljmp
add
cmpl
lcall
hlt
adc
das
mov
pop
fstl
jo
cli
cmp
xor
xchg
in
lahf
arpl
dec
xor
mov
dec
rclb
xor
lcall
push
fisttpll
test
mov
adc
xchg
decl
arpl
fildl
test
daa
sub
xor
dec
in
mov
out
cld
lcall
in
mov
das
cld
into
xor
test
mov
outsl
adc
jg
sub
jb
in
and
jg
data16
incl
ret
mov
fwait
imul
xchg
decl
jg
rol
shll
shrb
mov
mov
pop
lock
fistps
adc
adc
cltd
imul
jmp
mov
call
int
mov
divb
loope
jo
jne
jbe
data16
inc
lret
repz
mov
in
adc
xor
cmp
adc
call
sbb
and
cmpsb
call
fists
push
lret
negb
jmp
add
adcb
ljmp
aam
add
iret
das
xor
mov
inc
push
cmp
pushf
adc
mov
sbb
out
jne
and
ret
add
cwtl
mov
xchg
push
leave
adc
sahf
push
pop
mov
std
adc
mov
or
mov
inc
ret
fimull
mov
mov
mov
pop
aas
mov
or
hlt
jmp
shll
sbb
jb
cmpsb
xor
add
jo
push
jg
loope
sbb
call
lock
jmp
and
lret
add
fs
mov
sbb
ljmp
xchg
jmp
das
fwait
rep
div
lock
mov
mov
sub
outsb
mov
mov
mov
cwtl
incl
xor
lcall
out
sar
and
pop
mov
lcall
inc
and
mov
scas
aam
aas
xor
ljmp
out
sbb
push
mov
insl
into
inc
and
pop
lock
incl
push
cmp
push
xor
inc
jb
cltd
stc
lcall
fs
push
loop
xor
inc
pushf
shll
sub
push
cmp
mov
decl
mov
inc
repz
jmp
stc
mov
movsl
jl
mov
mov
jg
xchg
lret
cwtl
sub
movb
fninit
pushf
inc
and
mov
mov
cmp
xchg
dec
jg
push
jae
xorl
dec
cld
inc
dec
jno
ja
mov
popa
std
rclb
test
ljmp
pop
rolb
movb
mov
fildll
sbb
lahf
stos
negl
int3
pop
repnz
mov
add
imul
xor
ljmp
out
stos
adc
mov
in
aam
divl
xor
es
cld
push
pop
inc
add
push
test
pop
scas
mov
lock
jmp
jo
sub
icebp
rcrl
mov
dec
mov
mov
hlt
jg
inc
push
mov
aaa
cli
sub
xor
push
jae
pop
inc
jecxz
imul
fisttps
sbb
mov
pop
mov
sub
cmpsl
xchg
cltd
pop
lahf
cmpsl
xchg
and
ss
pop
js
sub
fcmovb
pop
leave
cmpsb
hlt
dec
in
mov
jp
aaa
mov
mov
inc
dec
in
ret
adc
decl
xlat
sbb
outsb
dec
aas
out
mov
.byte
.byte
mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
imul
testl
or
dec
insb
imul
add
out
fcmovne
pop
pop
dec
and
addr16
push
xor
data16
das
add
jns
test
push
outsl
jb
add
stc
scas
lcall
mov
cmp
call
outsl
jne
insb
andb
sti
rcrb
jne
jb
outsb
arpl
nop
rclb
pop
add
mov
aas
add
push
je
mov
or
push
sbb
iret
in
imul
imulb
je
and
or
and
repz
add
cmp
out
mov
cmp
sti
jg
push
dec
bound
arpl
pop
sbb
cld
lcall
insl
test
dec
insb
mov
cmp
gs
add
pop
ffree
leave
inc
add
or
imul
add
pop
add
add
in
dec
addl
jmp
adc
sbb
mov
adc
fnstsw
mov
mov
minps
xor
inc
dec
jb
int
pusha
shlb
adc
loope
in
fs
jle
jle
push
mov
enter
inc
clc
popa
jns
ja
mov
mov
jno
add
push
inc
popa
push
push
imul
inc
add
xchg
xchg
fisttpl
lock
in
call
in
enter
aam
int3
or
fcmovne
leave
leave
enter
setae
mov
xchg
xchg
xchg
xchg
lods
test
mov
pushf
cwtl
iret
add
aas
nop
fmull
dec
mov
unpcklps
dec
inc
sahf
mov
test
sub
xorb
je
xchg
xchg
js
push
add
mov
pushl
ja
add
add
xor
ret
jb
cmp
addr16
punpckhbw
in
pusha
pop
pop
push
lahf
int
jge
mov
add
push
add
out
mov
mov
test
jne
xor
pop
enter
mov
mov
ret
incl
rorb
mov
mov
inc
cmp
jne
mov
mov
mov
push
nop
mov
inc
add
scas
mov
mov
xchg
movsb
test
xchg
mov
mov
mov
testb
push
add
or
adc
add
mov
aaa
xor
mov
push
or
and
pop
lock
or
push
mov
mov
mov
mov
add
rol
fistpl
cmp
push
or
push
or
ret
and
mov
sub
inc
mov
or
inc
add
adc
insb
fistpl
jne
aaa
sub
jne
mov
sbbl
add
pop
pop
pop
push
jg
push
je
sti
mov
xchg
cmp
jb
sbb
testb
add
int
bound
jne
mov
dec
mov
dec
ret
jmp
add
mov
add
pop
repnz
sub
jl
mov
jnp
push
sub
mov
or
mov
aam
or
or
mov
or
jmp
sbb
sti
jne
sbb
testl
mov
mov
cmp
mov
ss
add
xchg
scas
dec
sarl
push
push
jg
clc
mov
test
xchg
mov
mov
dec
orb
call
push
and
push
mov
fstl
data16
dec
add
fsts
sbb
imul
or
mov
pushf
cmpl
in
mov
test
pandn
mov
mov
or
mov
call
faddl
lds
popf
jmp
in
in
scas
loope
es
ja
mov
add
cmp
ja
cmp
fcmovnu
popa
addr16
sub
sbb
jmp
push
in
or
add
mov
cmp
sub
pop
cmp
outsb
jle
sbb
sbb
sbb
pop
jg
jne
push
adc
hlt
outsl
mov
mov
sub
add
jb
sbb
loop
mov
roll
mov
sub
or
lds
xorl
jle
add
and
mov
cmp
or
or
jbe
scas
adc
xorl
sti
push
push
xorl
adc
sbb
mov
xchg
or
push
jb
mov
mov
xor
jmp
mov
nop
out
sub
outsb
jg
adc
cmp
jae
mov
cmp
jae
or
or
std
add
add
xorb
add
rorb
ja
loopne
clc
mov
aas
or
add
repnz
shlb
cmp
cmpsl
inc
idivb
inc
xlat
mov
pop
fdivl
cmpsl
jg
je
mov
inc
jl,pt
aas
or
leave
push
pop
push
dec
pop
sti
stos
scas
and
cmpl
movsl
and
fs
push
push
mov
jp
js
mov
cli
jl
jno
inc
and
cmp
dec
clc
mov
xchg
fidivs
push
sub
clc
lcall
or
nop
lods
call
jne
sub
sbb
fcoms
or
mov
xor
mov
cld
xchg
jmp
jo
mov
jne
xchg
cmp
xlat
js
faddl
xchg
lock
popf
adc
push
pop
xchg
call
mov
mov
lcall
cmp
lock
jae
mov
out
popa
sbb
rorl
popf
andb
sti
jno
pop
push
test
je
imul
lock
add
adc
add
jecxz
mov
sub
sbb
add
mov
push
push
pushl
mov
push
xor
dec
and
or
mov
sub
push
fbld
xchg
mov
or
mov
sbb
leave
jle
hlt
inc
cmp
in
mov
cmp
add
les
pop
jo
ds
pop
pop
push
adc
sub
jg
sub
lods
jmp
mov
into
sbb
test
rcrb
inc
mov
mov
xor
add
insb
rolb
add
test
imul
outsl
mov
adc
je
bound
nop
inc
lock
mov
sbb
loopne
adc
pushf
fistpl
push
cmp
cmp
add
adc
clc
dec
or
adc
test
jns
add
roll
stc
add
and
insl
aaa
daa
dec
mov
sub
mov
xchg
sbbb
cmp
mov
push
pop
add
or
mov
ret
fldl
or
cli
lcall
sbb
xchg
lea
cmp
jl
movl
add
sahf
bound
mov
leave
add
mov
mov
and
out
jle
or
std
mov
sub
test
cld
xchg
adc
adc
daa
fists
lods
jbe
or
push
or
push
jle
outsl
stos
rolb
cwtl
xchg
or
ret
incb
xor
adc
xor
cmp
je
add
cmpsb
popa
stos
fistpll
sub
inc
aas
std
add
add
je
mov
sub
cmp
shl
xchg
push
testb
fisubrs
mov
xor
add
mov
pop
mov
fsubs
test
jne
mov
bound
test
sub
pop
adc
add
cmp
dec
xorb
orb
or
sub
cld
jg
clc
sub
sub
cmp
jge
mov
lahf
lret
fsub
or
lea
in
add
insb
and
sub
push
clc
add
adc
push
scas
mov
jp
or
and
mov
xchg
iret
pop
jp
mov
add
sub
jo
or
sbb
test
mov
in
mov
enter
adc
mov
cmp
jmp
hlt
inc
push
mov
push
pop
add
sub
cmp
push
outsb
iret
orl
sbb
or
insb
sbb
rcll
adc
movb
daa
or
adc
inc
push
or
fdivrl
ret
jg
lock
mov
cwtl
pinsrw
or
loop
ret
notl
push
mov
cmp
pusha
xchg
in
pop
add
xchg
xchg
push
adc
repz
sub
mov
sub
sub
xchg
jbe
jp
out
subl
mov
mov
and
test
mov
lock
and
pusha
pop
pop
inc
in
ret
pop
int3
rol
pusha
or
mov
jmp
add
push
fdivrl
adc
or
ljmp
lock
push
cmp
adc
mov
pop
movd
lods
pop
mov
lock
pop
mov
pop
je
pop
jmp
fxch
inc
ja
or
dec
sbb
add
jle
pop
cmp
orb
cmpl
adc
inc
add
xor
mov
out
sub
popf
push
jmp
cli
xlat
dec
inc
and
leave
jmp
adc
jne
js
cmp
cmp
or
pop
add
inc
xlat
test
aam
xor
pop
movsb
pusha
or
je
sbb
jle
inc
cld
jbe
lahf
push
repnz
xor
push
push
mov
sbbl
jmp
pop
or
sti
mov
mov
roll
clc
loop
xchg
or
movb
loopne
aaa
xor
inc
scas
shlb
push
or
jns
mov
jmp
mov
jge
ret
lods
inc
pushf
or
pop
lea
or
mov
in
add
add
sbb
mov
sbb
punpckldq
cmp
add
cltd
xor
inc
and
or
adc
arpl
or
pop
pop
test
pop
pop
push
push
sbb
mov
or
jne
out
or
nop
xchg
pop
into
jo
xor
mov
mov
test
jne
test
sbb
fisttpl
ja
decl
lock
add
add
add
mov
mov
add
push
or
test
jge
xor
cmp
das
add
pop
mov
mov
cmp
mov
js
stos
in
and
jle
sbb
js
jg
dec
mov
adc
ret
sbb
scas
or
inc
cli
testl
mov
mov
movl
dec
add
inc
adc
rcl
shll
pop
mov
sbbb
pop
jg
adc
lea
test
lock
call
scas
addr16
pop
loope
add
mov
lock
push
jecxz
fsts
and
sbbl
notb
adcl
cli
add
jge
sub
jne
mov
popf
or
xor
rorb
add
scas
push
sbb
mov
cmp
imul
sub
fnsave
cmpl
iret
adc
in
pop
shl
xor
dec
daa
add
inc
lahf
add
add
dec
or
mov
loopne
sub
popa
dec
add
aad
pop
sub
add
mov
jo
movsb
push
pop
mov
loop
fadd
shr
xchg
or
add
xchg
mov
mov
add
cs
and
fdiv
cmpl
enter
or
adc
adc
sbb
mov
adc
dec
xor
enter
seto
jecxz
in
loope
jecxz
sbb
add
cmpsb
dec
pop
clc
out
adc
ret
mov
fldt
insl
ret
add
inc
adc
mov
dec
sbb
jbe
mov
add
cmp
push
aas
cmpsb
test
jle
adc
negb
dec
jmp
xor
mov
and
leave
repz
je
rcrl
jg
or
sbb
enter
sub
in
pop
or
add
push
jmp
mov
subl
bound
mov
repz
push
mov
mov
dec
sbb
pop
mov
ret
rol
add
jb
test
inc
sbb
pop
or
xor
jg
pop
pop
pop
out
mov
jle
sbb
mov
or
cmp
add
sbb
fdivr
vandnps
cmp
ja
mov
mov
hlt
iret
pop
inc
sbb
aas
and
adc
add
push
push
push
xor
pop
fld
ret
xorb
rclb
call
mov
jp
mov
mov
sub
sbb
ret
sub
inc
sub
lcall
fdivrl
sarl
mov
inc
repz
sahf
ss
leave
jmp
mov
jmp
mov
mov
inc
outsl
add
adc
stos
nop
sbb
mov
mov
cmp
ja
je
dec
js
rep
xchg
jbe
xor
lea
xor
std
xor
push
xlat
add
add
addb
fucomi
ret
pop
jmp
roll
dec
adc
mov
cmp
jbe
cmpb
xchg
cmpb
add
out
in
mov
jmp
dec
fcmovnu
inc
cmp
xor
push
shrb
roll
ljmp
jne
in
sbb
scas
or
ja
push
mov
mov
xor
jmp
inc
mov
adc
mov
mov
inc
aam
mov
adc
cmc
shl
pop
pop
movsl
or
into
test
clc
lahf
push
addb
in
xchg
mov
divb
push
push
jno
iret
add
ss
jmp
and
mov
scas
mov
ja
sub
data16
aas
mov
dec
jmp
mov
popa
jb
cmp
sti
jp
add
ret
nop
mov
fldcw
adc
pop
push
sub
fists
fwait
pop
pop
pop
fidivrs
sub
inc
add
add
fldcw
test
pop
fldcw
pop
inc
test
in
inc
xchg
sub
jl
mov
and
xor
out
fucomip
cmp
mov
jbe
mov
add
pusha
je
mov
insb
pop
clc
in
and
jnp
or
movl
cli
in
sub
and
loope
jg
mov
sbb
call
mov
or
lea
push
and
hlt
add
add
decb
xor
addb
addb
push
mov
xor
into
pop
fwait
loope
push
es
push
addl
mov
cs
cwtl
imull
dec
pusha
push
in
mov
jo
fisttpl
sbb
jecxz
push
push
imul
adc
cs
adc
sub
in
pshufw
je
add
pushw
andb
xlat
mov
push
or
fucomp
daa
das
inc
add
push
sarb
adcl
cli
cmpb
mov
push
jge
push
push
push
lea
push
sbb
lock
jp
cmp
mov
cmpl
out
jne
dec
add
pushl
outsl
out
in
adc
sub
jbe
xchg
push
aaa
ret
iret
xor
mov
loop
rorl
ds
inc
sbb
mov
jae
fs
mov
cmp
sub
out
push
xchg
sub
sar
mov
out
dec
jne
jmp
lea
push
fmull
xor
dec
popa
push
hlt
mov
call
pop
push
push
hlt
jmp
cmc
jne
movsb
sbbl
mov
pop
mov
mov
cs
dec
push
stos
xor
rclb
imul
inc
fdivl
leave
mov
lea
adc
mov
sahf
jbe
and
push
push
insl
ret
ret
push
lea
pop
call
das
movb
insb
lcall
pusha
cmovns
jmp
loopne
jmp
shll
fucomi
pop
cmp
sbb
ret
xlat
and
push
rcl
and
push
sbb
sbb
jmp
or
and
fdivs
negb
pop
imul
and
cwtl
adc
sub
sbb
fcmovnb
lret
adc
mov
adc
push
fadds
mov
aaa
push
loopne
scas
xchg
mov
mov
xor
mov
inc
add
mov
adc
enter
rorl
add
mov
jbe
sbb
lock
jmp
mov
mov
sbb
lret
mov
mov
inc
inc
and
xor
arpl
push
xchg
inc
inc
dec
pusha
add
push
rcr
ljmp
pop
cmp
jne
dec
je
mov
add
aaa
cmpl
mov
lock
or
loop
push
adc
add
and
je
imul
dec
je
mov
cmp
jne
or
jg
push
adc
add
adc
cmp
jne
shr
or
adc
add
push
mov
shr
repz
loope
mov
inc
dec
dec
pop
repz
out
add
or
ret
and
imul
dec
dec
dec
and
int
dec
sbb
fistpl
std
xchg
adc
xchg
mov
mov
shl
or
jae
or
mov
cmova
jl
pop
daa
push
mov
outsb
mov
fstpt
push
inc
cmp
je
mov
or
je
or
je
fstp
pop
imul
push
xor
ficomps
dec
inc
test
jmp
or
ret
or
cmp
ja
lea
push
add
shll
dec
je
sarb
jmp
inc
mov
neg
jle
js
pop
sub
jmp
inc
inc
jmp
mov
fidivrl
je
andb
and
sar
adc
or
push
filds
aad
cwtl
pop
xor
mov
rclb
mov
inc
imul
mov
add
sbb
fidivrs
pop
mov
imul
push
jmp
and
cmp
xor
js
push
sub
cmp
jg
add
rcll
shrl
jnp
add
push
mov
ficoml
and
dec
or
nop
inc
mov
stos
pop
mov
sbb
mov
mov
pop
and
and
ret
pop
test
jg
movsl
sub
push
idiv
add
lock
dec
and
or
jmp
add
sub
cmp
pusha
ss
lahf
mov
pushl
and
cmp
ss
das
lcall
sbb
repz
mov
add
in
repz
sub
xchg
lods
loopne
fwait
cli
jge
dec
je
adc
lea
decl
pop
lea
fldt
fsubr
add
addr16
pcmpeqb
cltd
xor
std
sbb
mov
inc
das
ss
adc
xchg
mov
inc
idivl
push
fstp
fldt
pusha
and
adc
out
mov
add
adc
mov
jl
leave
inc
cli
or
or
ret
in
lahf
and
adc
mov
xchg
vpcomgtud
xchg
and
inc
mov
pop
adc
es
test
std
xor
out
sub
pop
jecxz
add
leave
sbb
pop
lds
mov
jbe
imul
cmp
mov
mov
mov
lods
lods
inc
cmpb
xlat
fadds
rep
lods
outsb
xor
xchg
push
or
push
push
int3
into
sbb
sar
cmp
decl
mov
push
pop
test
enter
movsl
outsl
movsl
push
inc
cmp
and
daa
decl
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
dec
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
mov
fwait
lds
stos
mov
cmp
or
mov
pop
out
sub
cld
incl
push
daa
cmp
inc
xor
cmp
call
mov
sti
jmp
jle
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
call
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
jmp
xchg
pop
ds
push
cmpsb
scas
mov
pop
or
addl
call
mov
push
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
pushl
lcall
clc
repz
mov
subb
and
and
clc
lcall
outsb
bound
xor
jmp
fcmovnbe
fidivrs
shll
cmp
jne
push
pop
cmp
pop
add
insb
repz
push
add
addr16
mov
test
cld
push
or
push
add
fcompl
repz
scas
hlt
push
push
mov
movl
xor
hlt
push
data16
add
cwtl
aam
lock
inc
sub
cmpsb
out
cltd
mov
mov
jmp
push
clc
pop
fwait
or
icebp
aas
or
mov
dec
incl
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
aaa
scas
cld
imul
jne
fninit
fwait
add
call
mov
push
in
xlat
mov
xor
mov
inc
rep
push
or
jmp
jg
push
mov
or
dec
cld
jne
dec
mov
xor
and
jne
sub
mov
fdivs
inc
fsubl
xchg
adc
lock
inc
sub
pop
pop
rcrb
fs
aaa
inc
sti
jle
mov
add
outsl
test
or
pop
xor
jl
movups
fs
shll
ret
xor
pop
icebp
pop
gs
int3
outsb
loopne
mov
or
push
cld
std
mov
ret
jl
mov
xor
push
shr
dec
rep
testb
mov
sub
movsb
add
pop
fcoml
cmp
je
pop
mov
add
incb
sbb
push
push
mov
mov
push
sbb
fildl
jecxz
lods
mov
mov
mov
sub
inc
cmp
mov
cmp
jb
jb
add
jmp
rolb
popf
inc
add
add
adc
push
lahf
fcomip
in
icebp
push
mov
mov
pop
xchg
cmp
mov
sub
sbb
add
lock
push
ret
stc
push
push
mov
push
add
pop
call
push
fildll
dec
setne
scas
jbe
cmp
lods
push
sub
pop
mov
das
test
imul
mov
cmp
fdivl
add
jo
fmull
or
jne
js
inc
rorl
push
inc
inc
fcompl
vmovdqa
mov
and
add
sub
mov
sarb
idiv
push
mov
mov
cmp
je
mov
leave
jne
mov
add
es
jmp
lret
adc
les
push
add
repnz
je
pop
in
negb
loop
inc
pop
add
sub
mov
pop
cs
xchg
add
ret
dec
sub
jmp
pop
mov
int3
mov
mov
xor
das
mov
rorb
out
sbb
lds
push
inc
rorb
xor
sub
data16
sbb
push
stos
pop
lcall
mov
push
ds
sbb
js
xchg
adc
je
movb
dec
push
cmp
sbb
add
dec
jne
icebp
dec
sar
jnp
jmp
push
jmp
add
sbb
jecxz
mov
cmp
fistps
xor
sbb
rcrb
sbb
jmp
lahf
fdivs
in
push
pop
add
mov
jl
ljmp
out
push
hlt
xor
adc
mov
mov
movl
test
cmp
or
inc
cmp
sub
mov
or
dec
mov
adcl
movsl
sbb
xor
call
mov
dec
je
in
enter
mov
pop
scas
cmpb
jecxz
addb
cli
in
push
call
jae
aaa
mov
push
pusha
push
mov
dec
jae
cmp
cmp
pop
iret
mov
repnz
add
add
rcrl
sub
or
jae
addr16
pop
idivb
fsts
and
sbb
jmp
sub
movsbl
inc
inc
jmp
add
sbb
sbb
jecxz
shlb
xor
adc
loop
fdivrl
rorb
adc
les
pop
test
inc
add
jne
scas
jl
cmp
inc
mov
dec
adc
outsb
pop
ja
jg
daa
mov
je
jae
pop
adc
sahf
cld
mov
cmp
cli
out
push
je
sbb
sbb
jb
jbe
test
cwtl
mov
and
push
pop
fwait
mov
sti
cmp
stos
pop
cmc
enter
enter
adc
adc
test
or
push
jns
sub
orl
out
ja
loopne
push
sbb
push
sub
push
add
sbb
add
decl
jbe
outsl
or
inc
add
xchg
sbb
mov
pusha
jmp
xlat
xor
mov
nop
cmovno
xor
pop
mov
xchg
je
dec
jne
sahf
or
push
add
mov
fsubrp
pusha
adc
push
or
hlt
pop
adc
add
lds
pusha
mov
mov
sub
repnz
addb
filds
fdivrs
dec
fdivs
xchg
mov
mov
or
mov
jg
pushw
lock
mov
rolb
inc
jno
adc
inc
jmp
sbb
sbbl
push
adc
lahf
adc
adc
insl
or
inc
push
subps
pop
adc
dec
aam
adc
sbb
jmp
paddw
mov
popf
pop
cmpsb
movl
ret
pushf
ret
push
subb
xor
inc
outsl
or
mov
shr
aas
pop
push
push
push
push
push
mov
add
jns
and
loopne
add
mov
inc
sahf
sbb
lds
pusha
add
testl
jle
fdivs
pop
mov
mov
cmc
lea
jae
mov
push
cmp
push
pop
lods
pop
insl
mov
shlb
test
ret
mov
addl
add
stos
fidivrl
pop
cmp
push
sub
mov
cmp
pusha
add
sub
jb
je
jmp
cmp
ja
adc
xchg
cs
adc
jmp
sub
jmp
das
dec
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
jg
lock
sbb
into
jmp
mov
mov
jmp
mov
jmp
or
lret
call
push
or
pop
xor
xor
or
leave
cmp
je
push
dec
mov
mov
jp
xchg
inc
pop
rorb
push
push
inc
sbb
mov
mov
loopne
mov
or
push
inc
sti
sub
mov
jo
cmpsb
push
sub
outsb
pusha
push
adc
stc
xor
adcl
scas
ret
ret
mov
enter
push
ret
in
aas
mov
or
sbb
cmp
cmpsb
add
or
stc
pushl
add
adc
es
test
mov
dec
dec
push
add
mov
mov
call
fdivrs
idivl
dec
mov
inc
fiadds
call
and
and
loope
jecxz
adc
js
jl
lret
or
pop
ds
mov
insb
mov
inc
mov
repz
add
add
das
fildl
cmp
jg
jns
insl
je
add
adc
and
fldl
fwait
mov
outsb
xchg
stos
mov
call
ss
bnd
cmp
or
adc
push
add
add
fadds
jbe
adc
dec
jne
pop
pop
pop
gs
add
dec
jmp
pop
pusha
pop
out
add
mov
xchg
or
xor
dec
sbb
push
add
push
adc
mov
xor
rorl
lock
mov
cmpsb
mov
js
xchg
nop
adc
mov
mov
push
test
sbb
sub
xchg
rolb
outsl
das
rcrb
adc
ja
add
mov
mov
jbe
movsl
pop
leave
pop
push
cmpsb
dec
add
das
rcll
cmp
mov
push
les
mov
orb
loopne
push
push
popa
push
jg
add
inc
inc
sub
or
pop
ret
mov
ss
aaa
mov
cmp
push
repnz
or
shlb
mov
sub
or
push
cmpl
adc
shlb
clc
mov
call
out
dec
outsb
icebp
jge
and
xchg
xor
daa
adc
xor
add
mov
mov
imul
jbe
fwait
inc
adc
or
shl
lock
or
cmp
je
es
insl
jo
jbe
pusha
movsl
or
data16
sbb
add
pop
cmp
lods
pop
or
adc
or
pusha
rclb
push
popf
jb
sub
aas
mov
jmp
mov
aam
pop
mov
dec
clc
dec
jl
lock
push
lea
push
int
ret
or
push
les
popa
xchg
inc
jle
sbb
add
or
mov
fidivl
dec
and
jge
je
inc
jg
cmp
ss
mov
pop
jne
jle
push
dec
sbb
pop
pop
jmp
jbe
xchg
adc
sub
xchg
xchg
jle
mov
jle
push
add
loopne
push
or
push
sti
pop
movw
loopne
mov
push
cld
sub
insl
faddp
sbb
ja,pn
mov
mov
push
xor
or
stc
mov
loopne
ds
test
fsubs
mov
push
xchg
push
mov
dec
bound
loopne
mov
jns
jo
clc
cmp
aaa
addb
les
xchg
mov
xchg
jo
or
mov
pop
lea
cmp
push
lock
sbb
mov
jle
enter
test
rcrb
sub
xor
shrl
dec
jnp
pop
pop
sbb
add
cmp
mov
call
loop
loope
fistpl
leave
mov
je
out
adc
nop
jle
add
pop
add
call
pop
sub
sbb
shr
pop
pop
sub
and
in
out
stc
cmp
je
push
addr16
in
add
stc
in
gs
add
or
xor
hlt
xchg
out
lret
jle
lock
pop
rcrl
rcrl
mov
add
and
pop
mov
fisubs
fnstcw
or
inc
jo
mov
xchg
aas
lock
lock
pop
add
aas
xchg
test
sbb
mov
ljmp
mov
loop
pop
and
mov
adc
mov
sahf
ret
das
sub
pop
daa
out
popa
cmpl
je
cmp
push
mov
cld
sub
jo
out
push
out
scas
rorl
inc
mov
cmp
mov
mov
cli
lds
push
sbb
pop
push
mov
dec
clc
mov
in
out
loope
lret
mov
push
fwait
mov
jae
cmpsb
xor
mov
jl
dec
in
cmp
outsb
xchg
dec
sbb
or
push
cmp
fs
dec
jne
or
sbb
mov
cld
jge
aam
cmp
pushl
add
dec
jmp
and
inc
pushf
sbb
repnz
add
pop
dec
jne
adc
mov
mov
or
and
loope
mov
pop
lea
jmp
xchg
shll
rolb
push
sub
rolb
rorb
and
xor
cmp
cmp
adc
faddl
or
daa
push
and
jmp
aam
sub
or
cmpsl
notl
das
lods
pop
add
add
push
jmp
mov
je
push
jmp
mov
adc
cltd
lret
xchg
pop
adc
mov
shlb
cmp
and
movd
clc
filds
es
jl
cmp
jge
sub
jbe
scas
xor
mov
jg
push
fnsave
adc
inc
aad
call
jmp
and
mov
cmp
lret
jl
sub
mov
clc
fisttpl
inc
sub
add
lea
inc
dec
lret
shld
cmp
mov
pop
or
lahf
cltd
mov
push
mov
jle
ds
dec
jge
cmp
adc
imul
mov
fsubs
push
mov
lea
lock
sub
sbb
add
mov
adc
add
pop
inc
pushf
xor
mov
push
insb
dec
js
mov
add
jb
adc
adc
call
lret
fcoml
push
faddl
mov
cmpsl
and
push
int3
or
aas
inc
dec
out
and
sbb
push
aam
or
loopne
xor
sbb
jecxz
mov
jo
lods
jmp
out
aad
divb
arpl
cli
pop
cmp
fisubl
pop
jg
rcrl
enter
ljmp
in
jne
clc
sbb
push
lretw
hlt
sahf
shrb
pop
mov
jo
or
fisubl
dec
xchg
ret
std
add
clc
push
std
add
sbb
pop
mov
push
addr16
push
push
das
sbb
push
fldenv
sub
dec
dec
lea
cltd
aad
out
push
cmp
call
mov
scas
mov
test
in
jno
nop
pop
je
cmp
jmp
pop
add
pop
call
and
rorb
add
xchg
adc
and
cmp
push
lock
or
dec
push
das
int3
call
pushl
mov
and
or
scas
add
and
add
add
pop
xor
cmp
cmpl
push
add
nop
and
mov
and
pop
sbb
push
or
sbb
je
shrb
or
adc
fwait
ret
mov
jge
ds
pusha
clc
xchg
lock
jge
pop
dec
cmp
nop
pop
out
dec
negl
cmp
push
lods
add
pop
out
loop
add
cmp
je
daa
test
cli
cltd
cmp
les
stos
test
jmp
pop
adc
enter
sub
xor
mov
pop
movsb
cli
ja
lea
mov
mov
mov
adc
aas
cwtl
cmp
arpl
mov
scas
push
add
or
lcall
cmp
je
cmp
je
cmp
je
cmp
mov
je
mov
pop
adc
push
or
mov
in
jp
clc
jmp
adc
or
push
pop
sbbb
aad
push
or
scas
pusha
rcrl
cs
adc
cmp
pop
jmp
push
push
jbe
xor
lock
in
push
jmp
enter
cwtl
xchg
mov
or
call
loope
adc
cmp
loopne
repz
add
and
iret
push
pop
jbe
test
push
mov
inc
pop
test
int3
jg
dec
out
mov
pop
int3
fdivrs
daa
ja
cmp
jmp
and
xor
push
dec
insb
sub
jmp
in
pop
dec
inc
test
cmp
lods
subb
test
test
pop
loope
xor
and
icebp
jmp
push
daa
xchg
xchg
sub
dec
cmpl
test
adc
dec
popa
pop
add
in
cs
clc
inc
add
cld
les
push
push
add
push
mov
mov
into
or
pop
push
mov
cmp
xor
outsb
outsb
or
je
or
dec
or
jo
mov
pusha
pusha
adcb
mov
push
mov
adc
fs
add
ret
xchg
jmp
and
in
sbb
jl
adc
scas
mov
call
lock
mov
mov
jmp
aas
cs
fidivl
xchg
ret
xor
mov
pop
push
mov
dec
adc
and
xchg
roll
dec
jne
lods
ss
rclb
sbb
fistpll
dec
pop
or
insb
and
mov
dec
movsl
jb
in
inc
push
popa
dec
enter
xchg
pushf
jg
push
dec
mov
jne
lds
jl
inc
fwait
cmp
push
imul
adc
test
les
cmp
cmp
or
ja
loopne
mov
sti
add
add
inc
ljmp
icebp
loop
mov
jo
add
je
cmp
aaa
leave
cltd
or
daa
cmp
xor
adc
jecxz
lock
pop
movsb
call
inc
sub
inc
jo
lods
call
lods
pop
pop
add
and
push
add
inc
xor
push
inc
mov
pop
aaa
jo
test
mov
out
enter
mov
ds
sbb
clc
mov
adc
popf
cmc
lea
and
shrl
and
add
dec
adc
pop
pop
ret
xorl
mov
or
outsl
test
push
or
fbstp
aam
or
sub
jl
fstp
scas
pop
lret
add
jne
sbb
or
std
inc
jmp
cmp
jne
mov
inc
and
sub
test
cmp
je
daa
xor
pop
loopne
cs
imul
add
ljmp
inc
movsl
mov
sbb
mov
and
loopne
out
xor
sbb
aaa
jmp
pop
jo
mov
mov
jmp
jl
insb
sub
inc
sub
jbe
jmp
jg
mov
cltd
aas
cld
adc
movsb
shrb
push
or
add
adc
rcrb
xor
mov
pop
lods
inc
xor
ljmp
movsl
mov
mov
inc
xchg
neg
push
cmp
add
sub
testl
shlb
das
jg
jp
or
pop
inc
sub
push
orb
adc
jmp
sub
pop
or
add
jmp
setb
jmp
setl
cmp
je
dec
add
mov
or
mov
mov
mov
in
push
mov
test
jmp
jmp
scas
pop
pop
xchg
inc
jo
xchg
loopne
lods
xor
pop
add
lods
push
loope
add
sbb
pop
mov
mov
lods
rolb
xor
aaa
jmp
and
push
push
into
inc
add
inc
pop
push
test
les
push
call
test
adc
notb
mov
dec
imull
dec
in
in
cmp
pushl
fidivl
or
xor
inc
cld
loopne
jge
jge
and
in
add
fildl
imul
sub
add
sbb
enter
mov
stc
mov
pop
decl
stos
xor
fcoml
lret
testb
jge
or
sbb
jecxz
test
insb
inc
push
inc
je
and
mov
mov
fldl
sti
in
add
mov
or
js
lock
lock
test
sarl
cmpl
jle
cwtl
or
shrl
xchg
dec
jo
and
add
or
pusha
mov
fdivr
push
dec
jne
enter
sub
cmp
add
jne
pop
sub
sbb
clc
jae
lds
pop
jo
xor
pusha
push
out
adc
push
loopne
pop
outsl
push
loop
cld
xlat
dec
mov
sub
je
mull
sarl
into
pop
cmp
add
xor
ja
xlat
cmp
jle
repnz
lds
jle
inc
orb
mov
or
mov
adc
mov
push
mov
hlt
jo
cmp
mov
inc
xor
jge
add
push
xor
sbb
xchg
dec
push
sub
je
xchg
test
xchg
cmp
roll
test
rcll
sub
pusha
xor
lock
jne
mov
push
mov
adc
push
aam
pop
and
in
into
mov
stc
adc
ret
mov
push
push
mov
incl
movsl
pop
pop
mov
in
sbb
shrb
jge
add
ss
mov
cwtl
inc
sbb
pop
inc
xor
es
fs
dec
jne
out
pop
clc
enter
repz
sub
xor
ret
add
or
bound
jno
and
outsl
mov
add
sbb
add
cli
inc
aam
sbb
aas
add
inc
shl
ret
jmp
dec
mov
test
out
pop
nop
mov
fmuls
js
xor
cmp
jnp
mov
cwtl
inc
inc
push
inc
push
push
and
pop
test
je
call
rcrb
imull
sub
in
sbb
out
fiaddl
js
pop
jne
add
fdivrs
mov
xor
xlat
dec
push
and
mov
ljmp
rcr
mov
mov
dec
ret
imul
mov
add
inc
cmp
dec
flds
add
push
gs
imul
out
and
je
std
fs
pusha
xor
rorb
cmp
fwait
jg
movb
ret
dec
push
push
nop
scas
insl
ret
mov
xchg
lahf
test
dec
jmp
pop
lods
lret
imul
gs
xor
cs
fucomip
fs
insb
pop
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
daa
sub
lret
loopne
sbb
mov
movb
int3
push
data16
pop
sbb
xor
fs
xchg
and
in
icebp
or
pop
pop
or
push
mov
sub
out
and
int
pusha
pusha
cmpsl
fstpt
iret
les
add
test
int
push
repnz
pusha
sbb
mov
pushf
and
push
lods
repz
movzwl
pop
mov
mov
mov
js
jecxz
jge
data16
fs
imul
negb
add
cmp
stos
pop
cmp
jne
adc
sahf
push
push
inc
and
cmp
jecxz
sub
sbb
add
lods
mov
fs
fbstp
ljmp
mov
xchg
adc
add
mov
outsl
data16
popa
jb
inc
push
mov
or
jae
aaa
mov
inc
cltd
dec
aam
pop
cmp
ja
hlt
mov
xchg
lea
cmp
jo
test
hlt
xchg
fldt
and
fucomip
sbb
mov
aaa
sbb
out
jp
mov
sub
mov
fmuls
in
add
fsts
ret
dec
adc
outsl
cli
mov
mov
lea
scas
cmp
shlb
inc
dec
add
ret
ds
or
xor
mov
movsl
loopne
mov
sbb
test
mov
je
cmovo
pusha
stos
cmp
and
or
push
das
pusha
sti
repz
add
mov
pop
mov
test
mov
cmp
jne
addl
inc
mov
pop
mov
ret
mov
call
and
sahf
sub
bound
push
lock
xchg
lock
mov
and
insl
pop
shlb
sahf
je
xchg
popa
sahf
mov
mov
or
push
mov
outsb
pop
daa
pop
sbb
mov
pop
pop
ret
sbb
adc
sub
inc
inc
test
lods
pop
inc
pushl
lock
mov
or
xchg
jp
pop
das
sub
call
mov
add
or
loope
and
fcomps
js
inc
xor
mov
movsb
ret
test
jnp
insb
jns
and
scas
sbbb
cld
call
mov
sub
cmp
outsl
mov
arpl
pop
pushf
je
push
fidivl
leave
inc
xchg
jmp
jg
sub
mov
dec
inc
cmp
ja
mov
inc
jmp
cmp
dec
jbe
lea
cmp
ja
fcmovb
jmp
or
mov
aaa
in
outsl
out
adc
sbb
and
lret
add
jmp
pusha
add
dec
outsl
out
imul
or
sub
sti
cmp
jb
or
dec
movb
and
ror
mov
jbe
pop
mov
inc
add
jb
lea
ret
mov
mov
mov
hlt
add
lock
push
and
rcl
sbb
push
cmc
fdiv
adc
clc
pop
add
inc
test
je
or
jae
test
aas
and
je
cmp
adc
mov
and
cmp
jne
cmp
cwtl
and
mov
rorl
data16
jg
dec
cld
mov
mov
inc
lcall
cmp
xor
ficoml
or
sub
and
jmp
adc
inc
mov
ret
xor
mov
inc
adc
in
xorb
mov
daa
or
jb
inc
mov
int
out
daa
out
mov
adc
sbb
jns
rclb
mov
jge
push
je
adc
lea
push
fdivrs
add
mov
or
and
jnp
add
pop
pop
sub
or
test
lret
push
jmp
adc
repz
fs
std
pop
nop
dec
dec
enter
cmp
mov
hlt
enter
test
dec
pop
mov
inc
ds
cmp
cmp
enter
cmp
and
push
cmp
cmp
cmp
pop
leave
cmp
pop
gs
mov
push
rcll
jmp
gs
add
xor
push
cli
arpl
ljmp
sbb
add
pop
sub
jle
in
rcr
clc
aaa
mov
shlb
pop
mov
lock
shlb
adc
lea
push
push
lock
jp
ljmp
and
neg
cmp
pop
rclb
andb
bound
push
xchg
out
sub
add
movsb
and
dec
fldcw
call
lcall
jne
outsb
scas
clc
subl
test
cld
movb
mov
and
and
inc
je
xchg
loopne
cwtl
adc
dec
mov
cmp
adc
and
and
in
or
xchg
mov
pop
loop
inc
mov
mov
pop
lods
lods
sub
clc
add
les
test
jmp
dec
mov
cld
mov
cwtl
mov
xor
jmp
insb
xlat
cmp
cmp
rorb
push
push
pop
fisttpll
push
or
and
inc
dec
adc
lock
cmpsl
xor
and
or
jmp
dec
ja
fstl
push
push
aaa
sbb
mov
jnp
and
mov
clc
xchg
mov
ret
adcb
ret
mov
xor
lret
sub
into
mov
mov
lods
sub
out
fldlg2
cmp
mov
out
mov
xor
jg
xor
fsubrl
cmp
cmp
loopne
sub
sbb
or
ss
pop
pusha
mov
pop
mov
in
insb
push
pop
es
inc
mov
sti
push
add
add
push
or
lods
xchg
or
and
mov
add
xor
add
fbstp
outsl
fs
gs
out
shr
push
gs
inc
adc
outsb
add
and
insb
adc
dec
jg
inc
push
outsl
arpl
inc
gs
jne
je
fcmovnu
call
outsl
je
imul
mov
gs
outsl
inc
int3
fsubp
fisubl
lods
or
or
or
neg
jle
inc
xor
xor
outsl
insl
bound
outsl
js
and
idiv
imul
ja
nop
xchg
cmp
jo
sti
andps
outsb
dec
inc
xor
je
stc
xor
cmp
push
jns
jb
push
dec
dec
xchg
xor
cmp
sbb
cmp
cmp
cmp
cmp
push
cmp
pop
push
cmp
cmp
push
dec
dec
inc
cmp
cmp
inc
cmp
xor
cmp
cmp
sub
and
cmp
cmp
sbb
adc
cmp
cmp
or
add
mov
add
xor
hlt
pushf
pushf
pushf
pushf
lock
call
pushf
loopne
fcom
pushf
pushf
pushf
pushf
ror
enter
pushf
pushf
sarb
mov
test
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
nop
mov
pushf
cmpb
pushf
pushf
pushf
jo
push
pushf
pusha
movsb
xor
dec
les
mov
daa
mov
lods
test
daa
daa
daa
movsb
mov
daa
daa
xchg
nop
mov
test
daa
daa
je
insb
push
fs
pop
pop
daa
daa
daa
daa
push
push
dec
dec
daa
daa
daa
daa
inc
inc
cmp
daa
daa
daa
daa
xor
sub
daa
daa
daa
daa
and
sbb
daa
daa
daa
daa
adc
or
xchg
daa
daa
daa
add
cld
xor
hlt
lock
xchg
xchg
xchg
xchg
call
xchg
xchg
xchg
fcom
ror
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
mov
leave
leave
enter
xor
leave
leave
leave
leave
and
xor
leave
leave
leave
cmp
sbb
leave
leave
leave
leave
adc
or
fs
leave
add
cld
ss
in
in
hlt
lock
call
in
leave
in
in
aam
int3
mov
leave
sarb
mov
test
leave
leave
leave
movsb
mov
leave
leave
xchg
nop
mov
test
leave
leave
je
insb
push
fs
pop
pop
leave
leave
leave
leave
push
push
dec
dec
leave
leave
leave
leave
inc
inc
cmp
leave
leave
leave
leave
xor
sub
leave
leave
leave
leave
and
sbb
pop
enter
adc
mov
mov
xor
pushf
hlt
lock
leave
leave
leave
leave
call
leave
leave
leave
fcom
ror
leave
leave
leave
leave
enter
leave
leave
leave
leave
mov
leave
leave
leave
test
mov
leave
cwtl
xchg
nop
mov
leave
leave
leave
mov
leave
js
jo
leave
leave
leave
leave
push
leave
leave
leave
pop
push
push
dec
leave
leave
leave
leave
dec
inc
inc
cmp
leave
leave
leave
cmp
sub
leave
leave
leave
sub
sbb
leave
leave
leave
sbb
or
leave
leave
leave
or
cld
xor
in
fs
hlt
lock
in
in
call
in
in
aam
movzwl
aam
iret
clc
shl
or
repnz
xchg
clc
mov
inc
imulb
je
fxch
and
or
mov
popf
nop
xor
mov
loope
sar
scas
push
dec
movswl
add
sahf
add
inc
and
xchg
pop
jae
mov
adc
and
xor
jg
dec
cmp
push
arpl
test
sahf
or
add
pop
add
pop
xchg
mov
rorl
adc
repz
adc
sbb
and
ss
jnp
push
push
push
push
fs
inc
sbb
sbb
cmpsl
mov
stos
and
daa
stc
mov
push
addr16
push
or
pop
push
ds
orl
push
push
pop
pop
rcrb
push
sbb
loopne
aam
push
lds
dec
shll
or
inc
cmp
or
inc
pop
or
xchg
repz
add
gs
jne
sti
das
push
dec
inc
inc
dec
add
outsl
loop
jle
sti
and
dec
push
inc
push
dec
pop
and
mov
dec
push
push
pop
sub
push
inc
dec
pop
dec
and
inc
push
das
push
loope
xchg
or
js
jne
sbb
dec
jbe
sbb
and
inc
lret
nop
jl
lock
movsb
xor
psllw
repz
in
hlt
cmc
div
in
in
clc
stc
cli
sti
in
in
cld
std
jmp
in
in
loope
jecxz
in
in
in
out
in
in
jmp
in
in
in
out
out
in
in
rcl
rcl
in
in
aam
xlat
in
in
fcomp
fcmovu
in
in
in
in
rol
ret
in
in
in
in
enter
in
in
int3
int
iret
in
in
mov
mov
in
in
mov
mov
in
in
mov
in
in
mov
in
mov
in
in
movsl
cmpsb
cmpsl
in
in
test
stos
stos
in
in
lods
lods
scas
scas
in
out
nop
xchg
popa
jns
leave
add
ds
mov
push
inc
imul
hlt
lcall
push
or
popa
jb
push
repz
mov
lock
bound
lock
lahf
add
je
pop
out
pop
ss
adc
inc
js
xorl
imul
adc
in
repnz
movsb
jns
movb
mov
mov
mov
mov
call
jp
inc
dec
jne
dec
dec
gs
outsl
jb
lea
mov
outsb
jnp
outsl
jle
push
or
outsb
mov
push
mov
or
or
push
mov
mov
shrb
sbb
adc
and
jl
cmp
sbb
stos
in
mov
and
decl
inc
inc
imul
outsl
nop
rcl
mov
push
popa
outsb
sub
add
jge
cmp
outsb
jbe
jb
insb
outsl
ja
mov
and
test
dec
mov
adcl
push
push
leave
xchg
fdivrl
jge
jbe
inc
sti
cmp
imul
xor
or
inc
or
insl
jle
in
insl
mov
mov
rcl
scas
pop
shll
andnps
cmp
addr16
cmp
jg
popa
cwtl
add
mov
mov
dec
cwtl
mov
or
popa
pop
jo
or
inc
popa
jae
lea
pop
sbbl
call
shrb
jb
xchg
push
adcb
addb
push
adc
mov
popa
sbb
mov
cmpsb
push
push
jb
insb
cmp
out
xor
sbbl
adc
inc
fisubl
add
or
je
insb
inc
or
ds
pop
xchg
rol
sub
cmp
mov
add
xchg
mov
popa
faddl
fcmovb
mov
js
sub
push
bound
cmpb
push
pusha
adc
jo
nop
pop
push
js
orl
and
inc
push
stos
push
or
ds
in
inc
mov
data16
mov
adc
cs
xor
pop
dec
invd
pop
lds
mov
out
inc
jo
add
cmp
add
push
push
mov
fisttps
mov
push
adc
jb
and
loop
popa
pinsrw
xor
push
int3
add
in
inc
shrd
loopne
int
lock
aam
orl
jno
jnp
pushf
out
sahf
test
popa
imul
push
mov
jnp
sbb
push
loopne
sbb
lods
or
inc
mov
in
xor
aas
xor
push
adc
outsl
js
fdivrl
dec
jne
push
mov
and
push
push
fcomps
fsubs
ret
arpl
cmp
aas
test
ret
adc
in
add
div
mov
adc
push
lret
mov
mov
std
in
leave
mov
or
in
ret
push
cmp
repnz
aas
mov
dec
les
lods
adc
lock
xor
ret
stos
mov
movsl
pop
mov
loope
jg
unpckhps
adc
dec
add
or
cltd
mov
pop
pop
or
jg
phaddw
mov
mov
sub
or
orl
test
adc
mov
add
mov
inc
inc
dec
lock
ja
xor
push
inc
pop
add
sbb
or
mov
cmp
jbe
cmp
repz
je
movzbl
push
push
lcall
insb
shr
add
mov
repz
jne
mov
out
add
inc
inc
ds
mov
sub
or
xchg
push
scas
out
and
sti
je
loopne
out
sub
pop
pop
jne
adc
push
cld
lock
jbe
mov
jg
ss
ret
pop
add
xchg
inc
testb
fcomp
push
cmp
xchg
sub
aam
in
push
adc
xchg
ret
jle
sbbb
jo,pn
sub
mov
add
add
int3
ss
jnp
push
adc
or
mov
cli
jg
add
ret
dec
mov
repz
addb
std
jl
jmp
jbe
adc
test
in
mov
sub
clc
push
sub
inc
mov
enter
push
cmp
mov
outsb
insl
sub
xchg
mov
pop
test
mov
and
pusha
filds
repz
fistps
je
je
ljmp
xor
sub
cmp
push
jmp
sub
cld
or
inc
jmp
daa
and
aaa
push
pop
rcll
add
adc
jae
jne
pop
mov
test
inc
in
aas
aaa
mov
stc
loope
jne
add
sbb
iret
nop
in
das
xor
lcall
adc
outsb
add
jmp
add
pop
or
sbb
push
lock
cmpb
xor
and
push
cmp
outsl
clc
or
int3
out
jge
pop
lock
push
mov
cmpb
in
push
mov
xchg
cmp
scas
test
aaa
mov
sbb
sub
std
arpl
mov
adc
jae
cmp
jl
inc
mov
stos
mov
add
push
pop
or
jae
inc
dec
rorl
or
jne
pop
decl
jp
jns
idivl
mov
inc
dec
xchg
ret
dec
aam
sarb
div
dec
ds
ljmp
pop
mov
add
pop
pop
sub
sub
jbe
das
clc
add
sub
jmp
add
dec
jne
push
mov
loopne
popf
std
sub
xor
push
outsb
cltd
mov
cmp
iret
xor
dec
ljmp
xor
jo
pop
mov
negl
andl
mov
sub
data16
add
push
or
push
xchg
fs
xchg
pop
sub
mov
sbb
dec
ja
mov
fs
push
or
fildll
fistps
ret
add
add
sub
in
fcmovnu
add
rorl
fdivr
mov
cmpb
add
push
sub
rcrl
loope
gs
ret
ffree
fstl
ffree
pop
aad
add
stos
jns
add
frstor
push
cmp
orl
loop
and
pop
xor
pop
outsl
cmp
add
push
gs
mov
lret
push
dec
movhlps
and
push
pop
adc
inc
dec
sbb
cmpb
or
mov
or
jo
fnstenv
outsb
pop
cmpsl
fidivl
out
insl
imul
sub
push
shlb
movzbl
pop
aas
inc
js
pop
xor
inc
mov
test
pop
push
and
sbb
pop
lock
pushf
cmpl
fs
dec
mov
lds
mov
push
inc
sub
nop
pusha
testl
loope
pop
add
das
add
movb
xor
xor
and
push
mov
xor
cmp
add
jecxz
push
sbb
inc
js
outsl
push
std
dec
pop
or
xchg
mov
mov
adc
insl
lock
lahf
ljmp
ss
push
push
divl
cmp
pop
addr16
and
nop
add
scas
mov
dec
ret
xchg
aam
cmp
sbb
sub
sub
push
dec
sub
loop
testl
das
les
cmp
adc
cmp
cs
repnz
or
mov
sbb
add
mov
and
add
push
inc
ja
jno
add
xchg
sbb
sbb
insb
out
add
push
mov
mov
dec
push
ds
rolb
fstps
movb
movb
mov
adc
cwtl
scas
push
cmp
repnz
mov
push
pop
pop
jae
rol
imull
popa
lods
in
pop
adc
pop
hlt
mov
bound
sahf
push
add
mov
jns
lret
shrb
add
push
pop
adc
aas
mov
cmp
or
lock
pop
and
jne
negl
enter
repnz
push
hlt
and
dec
inc
cld
rcr
pop
fmuls
mov
lods
pop
jnp
sub
iret
nop
add
push
add
xorb
push
push
inc
jmp
lea
inc
cmpsl
jl
shlb
insl
fwait
adc
and
loopne
inc
sub
mov
adc
add
mov
cmp
fbld
lea
mov
test
test
push
rolb
adc
js,pt
ds
adc
push
pop
addb
cmc
subb
adc
push
fnstsw
fdecstp
and
or
pop
pusha
and
or
test
cs
bound
mov
cmp
je
mov
dec
add
scas
outsl
addr16
stos
mov
scas
sub
loopne
sahf
je
add
push
ret
xlat
popf
jne
dec
ljmp
mulb
xor
mov
loopne
in
xchg
mov
andps
sub
add
aas
inc
jle
lret
dec
imul
cmovle
inc
mov
ss
sahf
xchg
clc
adc
mov
pop
cmp
mov
sarl
into
mov
pop
jg
addr16
int3
jne
test
outsl
lock
in
sbb
cld
jle
hlt
jne,pn
xchg
lcall
adc
addr16
and
js
ss
and
out
xor
cwtl
mov
xorb
pop
jbe
mov
jne
rorl
add
call
push
or
ljmp
push
hlt
clc
cld
push
jne
adc
jmp
dec
cld
imull
out
inc
call
adc
cmp
outsb
and
cmp
jae
mov
lock
mov
ret
nop
pop
dec
in
push
fadd
and
adc
mov
sub
mov
ret
das
lea
daa
mov
mov
push
add
cli
mov
add
jl
not
mov
push
add
clc
mov
scas
je
js
pop
pop
ret
cld
popf
or
dec
adc
pop
dec
adc
inc
sub
pop
cli
mov
push
add
pop
pusha
das
pop
aaa
xchg
dec
out
or
pop
adc
hlt
pop
sbb
push
and
xlat
mov
xor
cwtl
fldl
xor
repz
mov
mov
inc
fisttps
dec
mov
cli
add
out
in
cli
ljmp
cmp
rorb
andl
xorl
jmp
les
rolb
fildl
mov
jne
scas
xchg
inc
jb,pt
incb
pop
inc
inc
dec
je
mov
mov
pop
sub
ret
mov
icebp
jbe
sbb
pop
inc
lods
mov
mov
push
mov
and
shll
icebp
nop
xchg
inc
add
mov
sbb
imul
or
mov
ret
dec
and
mov
jecxz
adc
xchg
test
adcb
lahf
test
sbb
fcompp
inc
cmp
mov
xlat
pop
jbe
pop
loope
dec
jg
mov
add
ficompl
adc
inc
sti
movb
les
and
pop
add
add
add
mov
inc
or
cmp
sub
push
je
mov
push
sub
inc
addr16
xchg
push
mov
or
dec
into
jle
dec
shr
push
add
jge
adc
ja
pminub
and
jne
mov
sub
jmp
push
jp
test
sar
mov
mov
jg
mov
fsubrl
jne
cs
and
lods
jmp
sub
push
dec
mov
fisubs
iret
sub
sub
mov
loopne
dec
mov
xchg
pop
mov
outsl
scas
and
fildl
sub
jae
shll
movsb
xchg
pop
mov
rep
sbb
das
lea
movsl
xchg
pop
pop
mov
sub
loopne
sarb
jb
cmp
ja
imul
mov
add
pop
lods
out
add
testb
movsb
pop
mov
or
jl
inc
loopne
je
ret
je
xchg
ret
and
mov
lcall
pop
pop
sbb
notb
or
xor
mov
lcall
cwtl
mov
repz
popa
out
cltd
push
pop
jns
fisubrs
das
pop
sub
fsubrp
mulb
das
push
js
sub
pop
mov
mov
cmpsl
inc
lea
and
ret
fidivs
cld
dec
stos
sub
je
push
imul
or
imul
cmp
aas
movsl
outsb
adc
icebp
call
add
sbb
mov
stc
push
jne
pusha
xchg
ret
sbb
sbb
cmpl
jbe
mov
aad
or
jmp
xor
inc
cld
xchg
and
jmp
mov
or
mov
mov
jge
and
incl
pop
js
mov
add
inc
mov
cmp
ja
jb
inc
adc
scas
jmp
js
fisubl
jecxz
dec
mov
dec
call
ds
leave
mov
dec
addl
out
mov
stos
lods
les
inc
je
mov
or
fistpll
cmp
mov
dec
je
dec
jl
aas
fcompl
adc
cmp
jbe
mov
push
jne
xchg
adc
ret
inc
fdivrl
pop
mov
inc
lret
xchg
mov
inc
iret
fcom
inc
movsl
dec
sbb
clc
xchg
ret
xor
rcl
sbb
and
rolb
stos
ds
adc
addl
stos
lock
test
mov
nop
mov
int3
int3
xchg
lock
fcoml
sub
mov
cmp
sti
and
lret
or
rolb
push
arpl
push
and
jne
in
mov
sbb
gs
cld
lea
out
jg
scas
mov
dec
fbstp
rorb
aam
add
cmpsb
cmp
cltd
adc
push
cmpsl
test
lea
push
xchg
or
lea
lahf
cs
xor
stos
or
or
pop
test
ljmp
push
or
enter
xchg
push
mov
jp
or
mov
mov
inc
dec
cs
incl
jg
dec
mov
stos
cmp
jne
pop
pop
iret
pop
sub
popa
aam
sub
filds
psubd
mov
sub
repz
faddl
adc
add
push
test
loop
cmp
add
loopne
push
daa
dec
adc
jb
rorb
fidivrl
mov
movzwl
sub
bnd
sbb
dec
int3
pushf
add
add
inc
inc
mov
sub
adc
sti
mov
add
ja
movswl
mov
add
lea
popf
mov
or
rorl
out
sub
cld
jmp
inc
popf
push
js
loopne
pushf
loop
dec
inc
dec
inc
dec
lods
or
shrl
xor
jge
out
sbb
std
mov
aam
adc
jg
test
clc
cmp
jl
pop
sbb
je
cmc
jbe
cmp
sbb
stos
jmp
inc
inc
mov
je
stos
loop
movlps
pop
pop
inc
clc
imul
push
mov
and
mov
es
sbb
ss
jbe
sub
add
leave
mov
mov
lods
roll
add
aam
mov
insl
cmp
add
jb
mov
ret
add
scas
je
mov
dec
adc
div
mov
inc
test
jne
sbb
or
fldt
pop
in
stos
xor
call
imul
or
je
inc
jne
pop
ret
inc
mov
mov
ret
xchg
repnz
sbb
aam
or
repnz
loope
push
in
lret
adc
pushf
fwait
inc
sahf
iret
mov
pusha
push
inc
je
push
push
cmp
sub
fmuls
sbb
xor
lock
add
or
jns
pop
inc
loop
push
mov
cmpsl
add
cmp
ret
and
inc
add
and
and
adc
and
popf
outsl
mov
sub
inc
sub
sub
fucomp
int3
push
sbb
and
sub
lahf
addr16
sub
xor
sub
cmp
in
xor
fldenv
fwait
add
dec
je
fstpt
iret
adc
subl
sub
testl
jge
fimull
cmpl
iret
mov
movb
je,pn
cmp
hlt
imul
mov
out
fabs
push
scas
ds
movlps
movsb
pop
frndint
rcr
scas
insb
or
fstps
push
negb
je
fidivl
out
fistps
call
or
mov
nop
shr
and
pop
loope
pcmpgtd
jmp
shrb
add
jns
lcall
out
outsl
or
cmpb
jb
movb
js
decb
outsb
mov
ja
jmp
call
loopne
adc
cmp
inc
xor
out
push
pusha
push
or
shr
mov
add
mov
adc
mov
pusha
cmc
push
adc
adc
out
pop
into
rorl
je
test
in
xchg
ficompl
add
jmp
in
lock
pop
mov
cmpsl
sbb
jae
dec
add
in
inc
loopne
push
in
insl
or
call
or
mov
jmp
loope
sbb
setnp
movsb
rcrl
sub
pushf
and
mov
dec
sub
cmp
jg
cmp
inc
or
ljmp
enter
roll
divl
add
jmp
mov
sbb
or
scas
inc
test
pop
sub
shl
sbb
mov
f2xm1
fwait
hlt
pop
mov
fldz
cmpsb
xchg
ljmp
inc
stos
sti
dec
lods
or
icebp
daa
lcall
pusha
jne
inc
sbb
dec
and
fistpll
jne
inc
push
sub
cwtl
jne
mov
ret
or
push
sahf
add
jg
frstor
loopne
adc
aas
jmp
fstpt
ss
push
add
or
mov
sbb
push
push
test
insl
dec
adc
and
push
int3
sahf
incl
add
mov
cmp
jae
fcmovu
in
add
add
jmp
aaa
add
add
mov
negb
es
loopne
call
inc
imul
push
cmp
iret
fsubs
call
inc
lds
sbb
adc
insb
push
cmp
xor
stc
mov
mov
mov
sbb
popl
mov
pop
add
and
push
in
adc
sbb
mov
fcomps
sbb
or
inc
dec
cmp
sub
aam
bound
pop
insb
jg
cmp
je
subb
fwait
cmpsl
push
fstps
bound
mov
push
in
cmpsb
xchg
xor
cmp
inc
or
cli
in
push
adc
dec
adc
mov
divl
push
adc
sbb
xchg
test
rcrb
clc
and
hlt
inc
sarl
or
cmp
inc
stc
inc
arpl
cmp
sub
add
imul
pop
mov
call
cmp
fdivs
add
mov
fstpl
fwait
pop
dec
mov
lock
pop
push
mov
movsb
dec
fisttps
xor
xor
xchg
pop
mov
add
push
mov
pop
fnstsw
nop
out
or
mov
pushl
add
push
jnp
fmuls
mov
lret
cmpsl
inc
inc
cmp
lret
fcomps
cmp
fdivl
and
call
imul
and
out
dec
adc
mov
adc
and
or
adc
mov
dec
shrb
subb
shl
std
add
movsb
jg
cmc
das
or
add
lea
incb
jb
ljmp
and
xor
js
or
jb
sti
insb
cli
cmp
adc
bound
orb
orl
mov
incb
jne
sub
dec
mov
aas
add
cltd
idiv
imul
sbb
repnz
ds
ds
add
pusha
or
sub
daa
loope
std
std
lds
inc
xor
mov
or
jle
pop
add
pop
pop
pop
push
ret
pop
mov
and
dec
in
test
jg
fmul
in
rcll
cmp
hlt
sbbl
mov
fistpl
pop
inc
inc
dec
data16
fs
jl
addl
push
jl
mov
and
je
mov
pop
xchg
mov
add
or
dec
lock
mov
cmp
fcoms
pop
lods
insb
jae
repnz
pop
sub
loopne
sub
or
cmp
fmuls
lock
xor
ret
js
or
push
pusha
loop
dec
mov
jb
adc
sub
fildll
mov
ds
hlt
and
hlt
mov
stc
pop
mov
sbb
jbe
or
insb
adc
dec
mov
xchg
pushf
pop
jge
fwait
loope
ret
cmp
addr16
xchg
lods
dec
and
rcrl
push
scas
das
or
test
push
adc
push
sub
fidivrl
inc
outsl
sub
rcrl
fidivrl
ja
mov
and
xchg
add
xchg
jnp
cwtl
xor
fldt
popl
sti
xchg
inc
pop
aas
lahf
jbe
cmp
jle
push
shl
shl
or
mov
call
mov
and
rcrb
arpl
sbb
cs
faddl
mov
push
dec
fnstcw
mov
dec
sti
je
insb
inc
lds
in
mov
inc
hlt
out
push
cmpb
mov
movb
add
add
jg
mov
push
lea
or
xchg
repnz
movb
sub
outsl
jecxz
cs
mov
push
mov
out
ljmp
jecxz
xchg
add
add
test
add
inc
js
sahf
cltd
rclb
and
pop
cwtl
mov
inc
push
add
ret
dec
shrb
lods
test
inc
mov
jnp
xchg
push
mov
pop
decl
mov
je
or
mov
cmpsb
add
aas
add
sarl
mov
cmp
dec
pop
add
sub
adc
cmp
and
add
dec
and
xor
jge
cs
cmp
mov
sbb
xor
enter
ljmp
imul
cmp
addr16
iret
test
stos
jmp
jg
int
inc
enter
or
ret
stos
loope
xor
jne
inc
cmpb
jne
push
or
jo
or
and
stos
out
xchg
out
sub
jns
pop
add
add
fmuls
inc
fadds
in
pusha
inc
or
cmp
pop
mov
outsb
add
sub
incl
mov
adc
jecxz
push
enter
mov
mov
pop
inc
cmp
insl
cmc
push
or
cmp
pop
repnz
sahf
nop
jns
mov
andb
jae
mov
cmp
jne
cmp
jne
mov
xor
data16
rcll
xchg
xchg
mov
std
ret
sub
jmp
or
dec
dec
pop
push
or
iret
decl
add
add
or
jnp
jnp
or
push
adc
jbe
scas
sbb
jns
jg
in
mov
insl
lock
push
shl
or
mov
and
mov
mov
cltd
xor
loopne
test
std
inc
subb
mov
sub
dec
push
lea
mov
cwtl
fcompl
adc
lcall
hlt
dec
mov
push
insl
sub
rcrl
test
mov
into
fmul
mov
ret
dec
add
jmp
out
aad
fldl
cs
shll
lahf
adc
or
dec
xchg
fists
and
nop
es
fwait
or
lds
pop
and
aaa
mov
loope
bound
sahf
into
stos
lock
addb
mov
jg
je
mov
add
out
sbb
pop
sub
je
pop
je
jmp
cmpb
dec
mov
cmp
in
jmp
movsb
sub
adc
arpl
mov
add
adc
loope
add
lods
cmp
popa
mov
ljmp
outsb
dec
push
data16
or
adc
in
or
or
adc
or
or
fcoml
fcomip
fcoms
lea
call
mov
xchg
mov
and
lret
in
test
push
rcl
jb
adc
ljmp
pop
cmp
jae
push
and
inc
xlat
push
jns
add
push
xchg
add
jns
stc
push
roll
jmp
and
nop
add
xor
xchg
jb
push
cltd
lea
sub
out
xor
xchg
pusha
mov
adc
sbb
or
or
lods
into
adc
popf
add
cmp
insl
int
imul
push
std
cmp
jmp
sbb
push
test
jnp
jo
fucomi
add
or
mov
sub
add
mov
repnz
cld
sub
imul
adc
jns
pop
sbb
clc
inc
mov
pop
iret
mov
outsb
imul
int3
jmp
inc
dec
das
push
dec
popf
mov
push
adc
push
mov
lcall
insl
mov
add
into
in
iret
jne
or
mov
lea
mov
decl
mov
inc
mov
fists
ja
outsb
mov
and
push
push
jo
cmp
jg
imul
mov
je
dec
pusha
inc
mov
adc
and
mov
mov
bound
and
vandps
push
ljmp
jnp
mov
adc
sub
jae
pop
jb
mov
pop
pop
xchg
jle
scas
or
add
mov
cmp
mov
fsubrp
testl
sbb
and
push
adc
mov
dec
cmp
sbb
inc
insb
inc
mov
inc
test
icebp
js
cmp
mov
arpl
test
adc
in
sbb
cltd
pop
push
mov
out
xchg
push
lret
fcompl
pop
push
cli
pop
in
cmp
jne
incl
int3
dec
cmp
fcoml
cmpsl
mov
shrl
inc
notrack
sub
je
dec
je
sub
ljmp
je
jmp
mov
jmp
push
push
push
faddp
outsb
and
jbe
push
inc
mov
jle
fadd
or
xor
pop
ret
mov
cmp
pushf
mov
xor
jg
jl
bound
push
mov
bound
or
sub
mov
rcrl
jmp
sub
rclb
pop
cmp
xchg
cmp
cmp
mov
std
mov
sub
add
fs
idivl
hlt
imul
add
cmpl
jle
adc
pop
and
je
push
push
out
cld
gs
xchg
psubusb
loopne
jecxz
sbb
or
pop
sbb
inc
out
mov
add
test
stos
ror
inc
mul
push
nop
data16
test
jne
icebp
jo
je
hlt
mov
int
and
insl
and
ret
js
fsubr
lret
in
cmp
mov
into
popa
movsl
cmp
fsubrs
or
mov
hlt
lods
mov
pushw
fcomps
and
add
jmp
bnd
daa
nop
add
add
lock
addl
bound
adc
jmp
jmp
mov
and
in
call
mov
hlt
push
sbb
mov
ss
repnz
sbb
jmp
push
bound
mov
adc
push
jmp
cmpb
ja
mov
sub
push
push
mov
data16
div
ja
lock
add
cmpb
jle
and
fs
jne
jo
mov
mov
add
or
xor
pop
jle
push
or
cmp
enter
aaa
xor
lods
dec
sbb
cmp
fwait
pop
mov
and
xor
test
jne
fmul
or
sarl
push
mov
fstpt
fsubrl
fiadds
movsb
imul
xor
mov
das
xor
inc
repnz
out
dec
xchg
adc
sti
adc
add
mov
gs
add
add
push
stos
hlt
aad
inc
repnz
fildl
stos
push
push
dec
frstor
ja
dec
jnp
sbb
jmp
push
enter
mov
cmp
ljmp
sub
add
xorl
mov
push
xor
or
or
lret
cwtl
testb
iret
je
orl
add
fs
add
add
and
mov
push
lock
out
xchg
mov
and
dec
inc
pmaxsw
jo
or
jne,pt
add
pop
sbb
sub
and
pushf
or
and
push
add
and
and
mov
mov
mov
int3
test
pop
push
pop
push
adc
fildll
mov
icebp
movsl
in
sub
xchg
cmp
sbbb
addr16
inc
ds
in
mov
jno
aaa
dec
sti
js
adc
lock
sbb
mov
push
cmp
ret
jne
aas
jle
xor
cmp
sbb
sbb
stos
fstpl
fwait
jmp
je
mov
sbb
mov
fucom
add
jp
pop
outsl
push
dec
push
push
xchg
xor
popf
adcb
jmp
jns
push
add
sub
jb
adc
movd
or
xchg
jmp
jno
fwait
lret
jp
shlb
out
inc
int
mov
adc
das
popf
or
movb
xor
or
fldt
cmp
arpl
push
addl
mov
add
adc
leave
movsl
pop
arpl
out
add
push
push
pop
or
adc
mov
push
add
xchg
mov
aam
jecxz
lods
cmp
or
or
jge
mov
mov
rorl
inc
inc
lahf
addb
lret
fcomps
dec
inc
push
imul
in
mov
inc
loop
cmp
or
daa
sub
pop
add
pop
push
xchg
push
pop
and
xor
in
faddl
xchg
popa
loope
dec
call
ret
es
call
out
sbb
aas
xor
sbb
xchg
add
jl
je
xchg
adc
popf
insl
or
rolb
adc
adc
jne
add
ret
js
pusha
inc
cmp
cmp
sub
incl
jnp
lds
jl
add
mov
leave
mov
jmp
mov
in
xchg
dec
add
mov
dec
sarb
or
push
fcmovu
jbe
pop
shrb
add
pop
adc
fcoml
or
jmp
outsl
cli
dec
jne
push
push
and
orb
rol
leave
mov
ja
xor
push
subb
push
pop
sahf
adc
xor
add
es
clc
test
cmpsb
or
jb
sub
clc
xlat
add
and
subb
sbb
je
scas
ret
push
sbb
nop
lcall
add
mov
cwtl
jno
xchg
cs
sbb
ds
pusha
mov
getsec
jg
lods
add
stc
push
jg
mov
mov
scas
inc
cmovp
jle
xchg
inc
sahf
dec
xchg
adc
ret
add
push
mov
push
jns
pop
jmp
push
xor
jmp
xchg
dec
push
add
in
jle
into
mov
inc
repnz
mov
ja
push
add
mov
push
add
aas
gs
pop
sub
and
mov
aas
imulb
mov
or
fcmovbe
push
sbb
add
dec
clc
cmpl
cwtl
aaa
out
flds
idivb
mov
enter
cmp
inc
and
or
popf
cmpsb
dec
imul
rolb
repz
ss
ret
pop
xchg
test
push
ret
and
or
xchg
hlt
push
es
sub
rol
and
es
mov
add
shrb
push
pop
mov
movsl
loopne
push
cld
dec
adc
test
popa
mov
adcl
sbb
or
movb
iret
in
mov
push
xor
mov
mov
cmp
mov
out
xchg
int3
sahf
stc
push
lea
sar
or
pcmpgtd
add
push
or
or
ret
shlb
cmp
clc
pop
mov
sbb
xchg
sbb
inc
and
xchg
fldt
mov
mov
mov
cld
hlt
mov
enter
pop
adc
les
fisttpll
jmp
push
cmp
aam
push
sbb
sub
lahf
and
rcl
into
mov
pop
in
das
in
add
or
inc
add
sub
fildl
test
sub
push
mov
xlat
add
mov
ror
gs
addl
adc
sbb
pop
sbb
adc
xchg
inc
xchg
test
dec
xchg
xchg
fwait
lds
inc
xor
mov
inc
sbb
rolb
xchg
pop
cmpb
mov
or
adc
gs
mov
or
nop
dec
fcoml
pop
scas
inc
aas
xor
gs
lods
out
jbe
mov
jg
cmp
sbb
pop
sub
sub
sbb
mov
pop
fcoms
or
and
jo
pop
addr16
or
fxsave
dec
cmp
and
jg
adc
ljmp
inc
movsl
insl
inc
jmp
push
pushf
and
lea
inc
or
in
jp
jbe
jb
mov
mov
xor
daa
loopne
push
js
sbb
cmp
lods
mov
add
lahf
lods
xchg
rol
aad
sbb
lret
fnstenv
or
jge
nop
fucomi
mov
push
loopne
xchg
or
stc
lock
loopne
int3
and
adc
push
sbb
outsl
cmp
insb
loopne
int3
pop
insl
add
and
and
rol
add
nop
loop
dec
mov
scas
into
les
addb
add
pop
push
push
dec
jle
jg
dec
je
jmp
xor
inc
xor
sub
jmp
and
add
xor
ret
mov
add
push
pop
or
xor
or
push
push
repnz
js
iret
mov
push
mov
seto
adc
mov
leave
pop
xorb
inc
lret
jg
mov
adc
movaps
jb
leave
mov
inc
fcoml
jae
daa
jl
adc
sbb
or
or
sbb
loope
xor
aad
xor
rcrb
fs
inc
push
jmp
adc
in
in
inc
add
pop
pusha
scas
sbb
jnp
jae
pop
mov
push
enter
rcr
add
repnz
aam
sub
mov
roll
lea
mov
add
jmp
sub
push
mov
mov
xchg
test
add
and
nop
cltd
mov
lret
cs
push
dec
dec
int3
aad
and
dec
xlat
sub
jns
gs
cld
std
jne
lods
call
add
sub
into
sbb
and
addl
pop
or
sub
aam
mov
jl
lock
nop
pop
mov
cmp
out
mov
push
in
adc
jp
sbb
adc
dec
and
mov
dec
adc
add
fwait
xlat
leave
xchg
mov
sub
push
data16
lock
sbb
add
push
stos
mov
adc
adc
and
mov
fbld
inc
inc
pop
lret
movl
test
add
pop
loope
dec
iret
cwtl
daa
sbb
adcl
fwait
pushf
mov
pop
inc
pushf
pushf
adc
into
cltd
ret
aaa
faddp
or
mov
adc
push
stc
or
and
inc
adc
cltd
push
push
xchg
push
daa
push
insb
cmp
out
pop
sbb
inc
adc
push
lahf
std
inc
aaa
mov
rolb
sbb
das
add
repnz
mov
aam
ret
mov
je
enter
out
mov
loopne
int3
mov
jl
pavgw
aam
jne
cmp
add
or
call
rolb
loope
jnp
lds
sbb
pop
push
sbbb
jae
and
orl
js
popf
lret
mov
dec
xor
add
jns
stos
sub
push
jbe
and
mov
sbbl
movsl
int
addb
rcrb
daa
jle
data16
adc
mov
aad
or
rclb
or
dec
jmp
dec
fcoms
pusha
mov
xor
jmp
and
loopne
xor
jns
dec
or
inc
pop
push
add
add
add
and
mov
xlat
loop
rolb
je
jmp
adc
test
mov
js
push
jle
leave
cmp
daa
lcall
jmp
sbb
adc
sbb
jl
xlat
leave
inc
inc
jbe
in
pop
jg
mov
scas
das
adc
mov
and
push
add
and
dec
inc
rcrb
inc
jge
push
mov
shlb
xchg
xchg
inc
inc
scas
andl
and
sbb
lret
mov
pop
pop
hlt
fucom
addl
and
push
push
stos
xor
xor
dec
and
ret
arpl
inc
andl
xor
inc
jle
fildll
push
cli
inc
enter
in
cmp
test
pop
lods
jg
cmc
jg
xchg
xor
decl
add
fwait
movl
jns
mov
mov
mov
jns
scas
pop
test
ret
sub
pop
loopnew
aaa
push
daa
push
xor
lods
scas
das
pop
and
cmpl
dec
or
xchg
sub
popa
push
movsb
jae
push
dec
push
sbb
adc
fsubrs
shlb
or
mov
adc
fidivl
dec
incl
inc
mov
sub
mov
in
push
aas
adc
cmp
jl
or
sub
bound
inc
jmp
mov
push
sbb
and
inc
sahf
jge
sbb
popa
jl
insl
ja
iret
adc
inc
sbb
repnz
and
jl
rol
lds
cmpb
push
jo
add
cmp
adc
mov
push
andl
aam
adc
je
scas
push
push
daa
push
inc
scas
or
pop
inc
inc
in
add
imul
dec
shrb
cmp
jbe
mov
bound
push
aaa
dec
xchg
outsb
ret
lods
dec
fildl
mov
hlt
rcrb
mov
mov
fsubrs
inc
loopne
xor
adc
jo
inc
inc
jne
addl
or
xchg
sar
pop
mov
dec
imul
and
mov
push
fstpl
pop
xchg
fdivs
adc
hlt
add
and
fisttps
in
push
mov
fwait
pusha
xor
push
icebp
incl
aaa
push
mov
sub
jb
inc
mov
inc
pop
js
pop
sti
stos
sbb
lret
jne
int
ret
test
or
inc
jne
mov
test
mov
clc
pop
ja
push
pop
or
or
inc
xor
mov
push
or
test
dec
add
pop
lret
hlt
mov
mov
cmp
mov
jo
jo
call
call
dec
add
mov
shl
add
test
imul
push
in
or
je
mov
push
cmp
inc
ja
mov
or
nop
test
loope
repnz
popa
mov
call
inc
cmp
jnp
cmc
lea
and
adc
scas
mov
loopne
cmp
xchg
rorl
cmpsl
insb
ss
lret
jg
jne
jmp
push
cmp
arpl
push
and
fimull
xor
arpl
add
cmp
leave
sub
jne
push
loop
xlat
in
movsb
pop
lahf
aam
lods
adc
pop
scas
in
les
jo
lcall
xor
out
lock
push
orb
mov
and
sub
cmp
call
mulb
mov
mov
mov
dec
mov
sbb
mov
insl
das
mov
rcrb
pop
fmul
int
xchg
js
scas
pushf
loopne
nop
xor
iret
ss
add
and
mov
repnz
fcomp
mov
push
fldenv
mov
cwtl
sarb
sub
shlb
jns
mov
sub
xchg
pop
int3
mov
add
and
enter
add
xor
inc
sbb
sbbb
leave
xchg
rolb
bswap
mov
fsubr
cs
xchg
mov
push
mov
jb
cmp
cmp
test
or
dec
lea
push
add
xlat
test
mov
sbb
outsl
push
insl
das
fs
push
loopne
fistl
fs
out
aaa
cltd
mov
add
pop
jo
sbb
cmc
pop
push
and
jbe
dec
pop
sbb
dec
ja
int3
pop
push
cmp
sbb
dec
dec
out
in
enter
pop
push
fldcw
jmp
aas
testb
je
scas
jmp
pop
lea
adc
adc
nop
mov
pop
sub
adc
daa
xor
movsb
inc
sub
jp
hlt
test
cmc
sub
mov
jge
add
es
daa
adcb
in
dec
jmp
sbb
xchg
pop
and
add
inc
mov
mov
data16
flds
inc
out
mov
outsl
xchg
je
inc
dec
mov
mov
cmp
leave
cld
ds
icebp
sbb
adc
adc
pop
and
sbb
addb
lcall
in
or
call
test
dec
push
xchg
add
movsl
popf
pushf
xor
mov
cmpsl
mov
sbb
push
ret
fmuls
lods
icebp
inc
repz
xor
orl
repz
testl
push
xchg
push
cmpsl
shr
push
and
fstps
add
xchg
xor
or
loope
orb
or
jb
gs
jo
adc
mov
xchg
lock
mov
inc
inc
call
dec
ret
xchg
mov
sti
mov
sbb
out
or
testb
push
lret
insl
inc
or
and
mov
sbb
inc
cmp
jne
cli
and
mov
push
xlat
sub
fstpt
sub
inc
or
cmpl
mov
inc
jmp
es
mov
lahf
les
je
mov
mov
jmp
jnp
add
fsubr
or
loopne
push
imulb
call
jne
push
mov
push
mov
inc
movl
lea
insl
or
lret
adc
add
mov
hlt
mov
mov
gs
je
xorl
lea
xchg
test
adc
jle
popa
pop
sbb
outsb
das
repnz
add
hlt
xor
cmp
or
sub
movl
jp
add
enter
pop
mov
sbb
pusha
int
inc
sahf
xorl
xchg
ja
pushf
lcall
mov
lret
cs
cltd
adc
cmp
idiv
mov
pop
mov
enter
outsl
dec
push
sbb
pop
add
adc
loop
les
clc
mov
jnp
ja
je
popa
rorl
outsl
sub
js
mov
test
push
ds
mov
lea
lret
sbb
mov
dec
dec
sbb
loop
call
data16
push
jns
roll
in
aam
orb
or
ficoms
sete
incl
xor
xchg
adc
testb
sbb
jnp
mov
inc
shr
int
or
sbb
lret
add
xchg
movsl
pop
lock
xor
inc
or
add
cmp
rorl
cmp
jmp
and
rcl
inc
aad
add
test
dec
mov
inc
lcall
aas
ja
and
aad
or
dec
sti
lods
cltd
pop
out
test
mov
cmp
loopne
stos
jmp
insb
adc
test
incl
pop
ret
fidivl
xchg
jecxz
inc
inc
pop
jo
outsl
bound
add
pop
shlb
xor
add
jns
jge
fistpll
xchg
jo
jle
push
xor
aam
std
cmp
and
adc
cmp
and
insl
fdivs
jne
movsb
dec
sahf
ja
pop
lret
inc
test
inc
sub
jnp
inc
cmp
push
loopne
jge
and
insl
rclb
and
mov
pop
out
aas
inc
dec
pop
popf
arpl
pop
roll
mov
ret
int3
stos
add
lret
data16
add
rclb
cmp
adc
xchg
push
pusha
loopne
mov
fsubrs
iret
jnp
enter
push
pop
mov
cmp
test
aam
push
jo
cmp
negl
movsb
mov
jnp
repz
jl
cs
jle
idivl
mov
pusha
push
call
stc
fisubrs
jle
repz
jns
adc
scas
adc
xor
repz
sub
mov
jns
mov
add
jl
sbb
push
xchg
iret
enter
mov
adc
or
or
add
push
daa
out
popf
mov
iret
enter
inc
clc
push
jo
hlt
pop
repnz
sahf
xchg
pop
lock
in
inc
mov
call
add
jae
mov
adc
inc
fdiv
dec
sahf
aam
shrb
add
sahf
xchg
ja
push
mov
sbb
fmulp
jae
mov
cs
out
out
mov
cwtl
mov
fwait
cmp
insb
lods
ja
test
mov
movsb
pop
test
daa
iret
pushf
adc
out
mov
jbe
leave
xor
popf
push
mov
pop
in
jg
loopne
fiaddl
push
iret
adc
das
jl
lret
mov
pop
bound
aas
xchg
movb
and
xchg
out
xchg
pop
adc
add
rclb
nop
adc
int
add
add
sbb
cmp
pop
pushf
push
daa
cmpsl
jge
orb
or
jb
iret
fsubl
or
jb
addb
enter
pushf
xchg
nop
xchg
inc
push
jb
fadds
les
fdivrl
fidivs
nop
in
and
xor
sub
push
loope
sbb
lahf
adc
gs
jl
outsb
xor
xor
xchg
push
mov
add
jbe
adc
in
xor
outsb
xchg
add
jge
dec
dec
js
inc
cmpl
enter
mov
inc
dec
mov
mov
out
aad
pop
ret
dec
rclb
jl
xchg
dec
or
iret
mov
enter
xchg
add
sbb
push
adc
mov
test
jg
out
fwait
cmp
push
ret
pop
adc
sub
xor
rorb
out
add
out
dec
push
test
adc
mov
xchg
sub
es
clc
jecxz
call
movsb
clc
clc
lea
jge
sti
loopne
add
sbb
adc
mov
std
adcb
xlat
push
mov
and
imul
sbb
inc
imul
aam
sbb
jb
jns
pop
popa
xor
jecxz
call
pusha
nop
fbld
jmp
mov
loope
pop
adc
jmp
call
mov
dec
or
divl
imul
adc
adc
test
out
add
mov
aaa
punpckhbw
cmp
push
xor
sbb
cld
sbb
and
jmp
sub
add
ret
push
jecxz
fnstsw
ror
push
mov
pop
mov
leave
and
nop
sub
xor
push
mov
mov
leave
and
inc
mov
leave
and
dec
mov
dec
xor
xchg
dec
xor
les
dec
xor
and
jl
mov
test
mov
mov
and
pushf
dec
push
mov
loopne
dec
push
mov
out
mov
rcr
dec
repnz
in
lock
cld
hlt
xor
mov
in
clc
push
push
scas
add
jne
push
leave
sarb
mov
push
lcall
add
outsl
je
mov
fs
jne
das
dec
jne
inc
fs
lret
imul
fs
outsb
inc
mov
add
jb
insl
jo
inc
fs
mov
push
je
pop
push
cmp
and
jns
adc
add
adc
inc
jns
ss
jae
pop
outsl
pushf
in
scas
mov
dec
in
xor
test
add
sbb
or
scas
cmp
add
and
pop
add
adc
subb
in
mov
mov
mov
add
outsb
add
xor
sti
loopne
inc
push
pop
push
jo
movsb
test
imul
pop
dec
fmul
repz
shrb
inc
or
mov
push
and
inc
jne
dec
inc
cmp
pusha
mov
nop
dec
testb
test
jmp
call
inc
jl
lods
add
adc
adc
fsubs
and
add
mov
add
in
mov
sbb
ret
xor
dec
div
subl
or
hlt
int3
int3
flds
ds
repz
mov
int3
out
lcall
lret
mov
jg
push
mov
sub
push
sbb
in
pushf
inc
aam
adc
nop
pusha
jl
mov
arpl
pusha
cmp
push
sbb
andl
imul
xor
inc
cmp
pop
jnp
mov
adcl
imul
xlat
pushf
pushf
ret
pop
adc
test
add
lods
xor
and
inc
mov
pop
push
fisubl
enter
mov
adc
or
sub
push
sub
jo
nop
repnz
xchg
fs
mov
nop
or
mov
in
add
iret
rolb
clc
inc
jb
cmp
pusha
repz
repz
add
fsubl
sbb
dec
insl
jo
mov
adc
sub
sub
sub
adc
pop
test
divb
mov
into
mov
push
sub
mov
out
nop
imul
repnz
mov
jno
cld
ficoms
inc
xor
les
hlt
mov
pop
pop
in
in
in
adc
in
mov
lret
xorb
jno
aaa
mov
dec
outsb
iret
cwtl
or
call
jns
pusha
cltd
es
mov
nop
dec
push
cmpb
add
loop
nop
adc
and
in
out
xchg
inc
and
jmp
sbb
sub
push
mov
pushf
add
xor
negb
and
in
adc
add
inc
rorb
and
int
or
add
jg
fwait
add
enter
es
sub
mov
call
fildll
dec
je
sbb
xchg
push
fs
leave
jbe
push
nop
es
jbe
add
push
fldl
cmc
mov
pop
stc
pop
inc
push
jl
dec
pop
in
fidivl
aas
clc
mov
pop
in
in
stos
hlt
mov
icebp
in
enter
fs
inc
repnz
enter
test
in
adc
leave
jae
scas
call
js
cmp
sbb
rcrl
lea
jmp
inc
xor
cmp
jmp
mov
movl
or
cmpsb
push
les
fdivs
xor
fmul
out
pop
adc
xor
jo
sub
mov
dec
loopne
mov
mov
sbb
mov
fcomp
push
push
mov
xchg
add
cmpsb
push
and
mov
rcl
clc
jmp
adc
adc
enter
and
aas
push
orb
dec
sbb
fs
mov
cli
jmp
xor
daa
jmp
inc
test
add
push
rorb
shll
adc
seto
inc
hlt
inc
cli
and
fsubl
xor
fs
daa
add
pop
xor
adc
or
xchg
add
cld
sbb
setg
dec
inc
and
ss
negl
nop
sti
cltd
cmp
incl
popf
inc
insb
jnp
and
pushf
xchg
jne
sub
insb
test
jmp
push
or
les
mov
insl
xchg
adc
mov
pop
mov
call
cld
test
test
sti
jo
mov
add
outsb
push
add
pop
sub
shlb
xor
maskmovq
imull
mov
test
dec
xchg
pop
data16
sti
les
adc
dec
xchg
cmpsl
arpl
and
inc
jo
out
mov
lock
or
lock
les
xor
lea
inc
jg
jo
repnz
into
jle
test
lea
shlb
mov
adcl
inc
pop
dec
inc
inc
dec
push
jbe
sahf
jmp
inc
mov
mov
pop
insb
lahf
mov
push
dec
jnp
pop
cwtl
mov
sub
in
test
aaa
sbb
cmp
cmp
lahf
mov
push
cld
aad
loopne
and
sti
pop
imul
adc
or
sbb
clc
push
jp
jne
dec
jnp
shlb
imul
add
push
adc
push
jbe
popf
xor
div
and
sbb
xchg
iret
add
xchg
xlat
and
roll
and
pop
ret
or
add
jne
adc
inc
or
pop
ret
aas
in
push
push
in
sub
test
clc
fimull
nop
mov
mov
mov
in
or
adc
adc
loopne
dec
scas
nop
add
in
inc
inc
cs
xchg
inc
je
lret
std
stc
push
push
jno
xchg
mov
test
in
inc
jbe
adc
jb
and
or
nop
cmpsb
dec
call
imul
mov
sub
pop
aad
sub
jmp
push
fildl
or
out
lock
cwtl
and
rcll
decl
cmp
enter
inc
jns
pop
xchg
add
movsl
xchg
adc
push
and
dec
incl
cmpsl
sbb
js
mov
movsb
xor
xor
sbb
adc
jg
add
inc
in
test
sub
aam
push
arpl
je
sbb
sub
or
pop
loopne
aas
or
ss
jne
inc
adc
movsl
push
insl
or
mov
add
or
das
mov
or
int3
lahf
out
or
and
cmp
lret
insb
fmul
dec
inc
xchg
and
xchg
test
repnz
dec
rorl
push
movsb
push
add
push
lds
ret
dec
mov
cwtl
pop
jns
inc
sub
mov
outsl
xor
cmp
adc
xchg
push
adc
mov
add
add
jns
cmpsl
cmp
add
jno
repnz
inc
mov
jns
insl
daa
out
clc
or
clc
xlat
and
ret
mov
mov
shl
pop
daa
mov
inc
mov
push
and
faddl
stc
sbb
inc
xor
mov
mov
js
xchg
fbld
push
ficompl
rclb
pop
addr16
arpl
xchg
xchg
data16
jl
mov
imul
mov
pop
ja
pop
pushl
stos
xlat
dec
fwait
push
js
push
jecxz
loopne
aaa
inc
icebp
ret
rcrb
jl
sub
jmp
xchg
push
cld
add
orl
jecxz
bound
scas
testb
lret
hlt
add
push
jae
lods
xor
or
inc
xor
jp
mov
or
sbb
cwtl
xlat
icebp
ljmp
fidivrs
sub
and
test
rorl
dec
mov
mov
dec
jmp
adc
fisubrl
setae
or
imul
aas
adcb
enter
xchg
mov
sbb
sbb
xor
scas
push
add
cmp
or
enter
push
xor
and
in
das
insb
int3
dec
mov
pop
sub
insl
adc
sub
lret
push
mov
clc
les
push
push
mov
sub
mov
xor
nop
popa
jae
pop
push
push
pop
push
pop
popf
popa
sti
pop
aas
nop
add
addb
mov
mov
cmpb
pop
repnz
push
lds
push
clc
xlat
sbb
es
pop
js
rorl
aaa
aam
sbb
or
xor
pop
pop
lock
or
lret
add
cmp
sbb
sub
imull
xlat
sbb
adc
mov
iret
repz
adc
sbb
inc
pusha
jp
out
cmp
scas
cs
inc
mov
data16
pop
daa
shl
push
clc
aas
dec
mov
push
data16
sbb
cmp
rcl
add
daa
movsb
dec
or
xlat
loopne
jb
pop
ljmp
in
jmp
add
sub
or
fimuls
jecxz
add
js
fstps
fwait
and
or
loopne
fstpl
idivb
leave
xor
mov
ret
jb
daa
push
push
mov
repz
or
aas
xor
pop
mov
cld
push
inc
jmp
and
lods
pusha
jmp
fwait
add
lock
and
add
jmp
adc
cmpb
je
dec
andnps
out
dec
js
adc
mov
pop
and
push
das
out
lret
fbstp
sbb
inc
push
push
cmp
xchg
xlat
add
ds
mov
jecxz
jp
fsubp
or
sti
std
jg
sub
xor
repnz
clc
fcomip
lea
adc
adc
push
sbb
shll
push
data16
xchg
or
pop
or
and
inc
stc
cmp
lods
or
fiaddl
dec
and
add
jle
push
adc
hlt
ror
pusha
scas
fists
add
pop
cmp
mov
or
in
and
add
scas
sbb
pusha
das
xchg
inc
add
mov
push
cmp
push
je
push
outsl
push
test
call
or
pop
out
adc
and
mov
mov
aad
inc
mov
arpl
iret
repz
rcl
out
cmp
jmp
or
dec
sahf
idivb
or
sahf
out
jbe
xchg
xchg
movsl
mov
ljmp
and
xchg
pop
xchg
data16
aas
imul
mov
jae
mov
fldenv
pushf
push
sar
cmp
pop
push
jb
inc
jnp
cwtl
inc
fnsave
push
push
push
test
sbb
and
enter
jo
int
ljmp
outsb
inc
add
mov
pushf
clc
sub
add
pop
dec
je
jmp
outsl
gs
sbb
rcrl
inc
adc
and
mov
addr16
pop
repz
out
or
fdivr
and
fidivs
jle
lock
out
jbe
or
scas
mov
jo
mov
ret
pop
push
pop
insb
mov
fldcw
mov
push
leave
fstp
sub
xchg
push
adc
push
fwait
test
lret
and
lods
and
mov
fists
push
xor
movsb
sub
or
addl
or
daa
add
jmp
mov
dec
push
or
scas
dec
sbb
push
movhps
lret
sub
sbb
or
add
mov
pop
in
addr16
jb
add
std
sbb
push
or
add
pop
jb
test
rcll
xor
mov
mov
jmp
rcpps
leave
pop
jb
or
es
fadds
rcrb
mov
sbb
loopne
inc
adc
outsl
in
loopne
jns
pop
push
xchg
add
mov
xchg
xchg
push
dec
xchg
push
xchg
or
or
mov
adc
mov
loop
in
lock
add
iret
repz
add
or
adc
cmp
dec
enter
add
inc
scas
mov
jp
jns
ret
push
mov
mov
push
mov
push
mov
lds
in
cmp
aas
orps
add
in
shll
rorb
in
add
add
jo
sahf
testl
cmpsb
jg
jb
push
fistl
gs
in
fistl
mov
and
xchg
add
adc
int
xor
ret
pop
mov
adc
and
dec
repz
dec
push
or
adc
nop
sub
adc
adc
enter
movswl
adc
xlat
inc
dec
adc
mov
xchg
sub
or
lret
sbb
xchg
fs
push
sbb
cltd
sub
add
push
cmp
cmp
push
adc
in
and
aaa
cltd
jne
stc
rclb
ret
push
xor
aaa
sbb
or
adc
sbb
mov
in
cmp
repnz
in
push
or
in
adc
pop
hlt
loope
ret
orb
mov
mov
push
jl
test
cmp
jno
movsb
mov
and
popa
dec
call
adcb
fnsave
mov
push
xor
xchg
pop
rcrl
inc
clc
cmp
sbb
in
mov
mov
addr16
push
jae
call
pop
and
jp
sub
rorl
mov
dec
ja
mov
cmp
movsb
xor
lock
cmp
pop
lret
pop
adc
cmp
repz
stos
mov
repz
lret
jns
and
pop
inc
push
shlb
out
jnp
clc
lock
adc
rclb
adc
ss
icebp
ss
fsubs
sub
adc
pushf
sbb
or
mov
add
sbb
insb
cmpsb
movsb
and
mov
daa
mov
mov
ret
dec
fs
dec
xchg
cmp
mov
adcl
xchg
cmpl
sub
test
push
jns
out
test
xchg
test
cmpsl
fwait
mov
push
pop
and
jns
mov
pop
pop
ss
pop
push
movsb
sbb
rcrl
lods
mov
xchg
das
xor
add
xchg
loop
pop
pop
dec
pop
adc
mov
push
movsl
jmp
and
cwtl
gs
push
je
in
add
inc
out
sub
loope
sbb
nop
inc
nop
push
cmp
and
and
fildll
insb
xchg
stos
pop
outsb
fwait
test
pop
in
aam
sbb
sub
xchg
xor
and
mov
cmp
cltd
lret
sti
lock
pop
push
mov
nop
out
cmp
or
sbb
or
decl
sbb
add
mov
jno
dec
push
rolb
pop
out
je
pusha
test
sub
outsl
jnp
out
adc
inc
jmp
testl
push
or
sub
push
jns
dec
or
add
jp
iret
sarl
push
inc
data16
stc
cmp
repz
stos
rcl
sbb
in
sbb
hlt
movsb
repz
sbb
es
xorl
inc
cmp
mov
lock
sbb
sbb
inc
addl
pop
nop
fldt
fstp
imul
das
test
sti
lods
mov
push
push
incl
adc
aas
add
add
add
icebp
fcompl
pop
adc
push
das
sbb
push
or
arpl
int3
ds
push
inc
lods
sbb
add
cmp
repz
ss
fstl
inc
mov
fiadds
cltd
cmp
repz
mov
lret
xchg
xor
pop
in
push
sbb
pusha
push
and
fucom
pop
loop
xor
mov
adcb
sbb
out
pop
dec
sbb
inc
sbb
sbb
and
mov
add
and
lds
inc
call
imul
imul
fisubrs
neg
ret
xchg
sbb
psubusw
sub
add
inc
clc
adc
xchg
mov
insl
call
pshufw
add
or
sbb
jecxz
add
mov
shll
or
mov
inc
repnz
das
mov
jb
popa
lock
mov
nop
push
push
or
pop
cmpb
mov
cwtl
xchg
imul
or
cmp
jbe
bound
iret
repz
into
loopne
and
push
imul
add
jns
inc
pop
and
in
frstor
adc
sbb
filds
and
fcmovnu
into
daa
popa
lock
imul
pop
add
and
inc
jge
arpl
mov
and
mov
lods
fiaddl
sub
pop
push
mov
flds
add
hlt
push
fildll
add
mov
inc
dec
dec
jnp
out
and
in
pop
add
add
ja
nop
push
sbb
push
xor
cmp
mov
and
xor
out
sahf
cmpsl
aas
dec
pop
outsl
andl
inc
cmpsl
push
push
daa
mov
rolb
out
adc
sbb
pusha
xor
loope
sbb
loop
mov
shrl
push
mov
inc
imul
inc
add
add
icebp
sub
jmp
daa
mov
movsb
xor
imul
pop
insl
jmp
mov
lds
adc
pop
and
mov
aam
loopne
mov
or
dec
adc
rolb
add
jbe
or
cmp
fldt
sub
jmp
es
lcall
sbb
in
add
sub
mov
out
pop
push
je
lcall
mov
adc
add
lea
aas
out
adc
insb
add
mov
adc
push
lahf
hlt
fildl
xorb
mov
add
mov
xchg
lret
mov
lock
shl
fildll
dec
xchg
pop
inc
jo
dec
push
xor
and
aaa
cs
add
adc
rorb
into
xchg
push
test
loopne
call
mov
test
push
cmp
cwtl
pusha
es
loopne
sbb
popa
movsb
ror
dec
push
pop
mov
test
out
push
es
scas
jl
sbb
dec
xchg
adc
aaa
lock
push
dec
dec
cmp
stc
fcmove
movsl
pusha
push
lock
mov
jbe
pop
leave
stos
nop
sub
stc
and
mov
add
mov
xorl
les
shl
add
push
out
sahf
ja
push
xor
ljmp
pop
push
push
in
test
xchg
scas
daa
fistps
xchg
outsb
repnz
sarb
rclb
movsb
fstl
adc
in
es
sub
lahf
push
mov
int3
or
lahf
sbb
sub
movsb
or
xchg
mov
adc
mov
mov
cmp
xor
fwait
sub
pop
lret
mov
inc
fists
addr16
jnp
imul
xor
test
mov
mov
sub
jb
dec
dec
outsl
sub
push
jne
adc
dec
inc
pushf
in
dec
xchg
push
push
adc
adcb
adc
add
in
sub
pop
das
xchg
sub
xchg
sbb
outsl
cwtl
cld
in
push
push
pop
nop
out
push
sub
fildll
mov
or
fs
fildll
in
xor
pop
leave
andl
jge
repnz
dec
push
xor
push
mov
iret
repz
push
cmp
adcb
mov
sub
ss
push
imul
sub
xor
iret
pop
jne
outsb
and
in
ret
or
fildl
imul
pop
and
lods
out
pop
sbb
pop
mov
rorb
insl
test
mov
add
jae
adcl
adcb
iret
pop
and
lcall
pusha
push
das
pop
xor
sti
cmp
dec
inc
pop
imul
in
popf
push
inc
daa
mov
jns
hlt
push
push
sub
jno
daa
fildl
lods
inc
stos
and
mov
pop
fisubl
and
dec
push
mov
lods
movsl
movsb
add
mov
mov
pusha
lds
pushf
or
or
ljmp
ret
mov
pop
mov
push
inc
lea
xchg
mov
cmp
mov
scas
pop
in
xor
jne
pusha
mov
xchg
or
popa
ds
je
and
clc
mov
add
adc
jmp
inc
lock
cmpsb
rcrb
hlt
sbb
ret
add
add
dec
add
mov
mov
xor
xchg
cltd
xor
js
loopne
pop
sub
dec
sbb
inc
inc
add
and
inc
rol
pop
clc
cmp
jecxz
add
or
xchg
sbb
loope
jno
xor
mov
mov
orb
lods
adc
and
in
sbb
jl
or
pop
test
or
lds
xor
adcl
inc
popa
movsl
add
or
adc
lods
or
cmpsb
add
jnp
lret
mov
cmp
adc
push
scas
and
es
jns
sti
cmpsl
aaa
mov
inc
add
xor
repz
repz
xchg
iret
loop
xor
adc
sahf
fildl
sub
cmp
pushf
popf
xor
pushf
daa
push
add
mov
sub
dec
cld
scas
xchg
xchg
movb
sbb
add
jb
xor
lret
mov
cld
in
rorl
inc
fucomp
add
mov
or
or
cmp
clc
add
test
or
cmp
mov
mov
into
push
or
or
xchg
in
and
lea
pushf
xor
mov
pushf
xor
mov
xor
shlb
andb
or
cmp
call
inc
das
jbe
jne
sar
int
jbe
xchg
dec
mov
and
lret
mov
aad
outsl
shlb
shlb
and
mov
lock
cmp
out
cmp
xchg
xor
ss
imul
repz
cltd
jl
push
mov
lock
sbbb
in
xchg
mov
mov
push
outsl
add
and
cmp
pop
enter
xchg
pushf
je
lods
lods
cmp
sbb
push
out
shll
movsb
push
adc
negb
es
mov
dec
gs
push
pushf
cwtl
mov
shlb
cwtl
xor
stos
xchg
insl
or
push
shlb
nop
dec
mov
cmp
gs
imul
stos
and
adc
mov
adc
mov
cmp
mov
dec
jb
or
mov
or
mov
test
mov
in
dec
test
out
jmp
leave
add
or
push
jno
adc
jecxz
dec
sub
adc
dec
cmp
dec
pop
mov
cmp
xchg
push
adc
ret
xchg
ret
and
leave
cmp
push
xor
loopne
aad
cmp
xor
mov
nop
xchg
jne
es
sbb
lret
mov
sbb
cmp
vphaddubd
dec
cmp
dec
push
push
push
ljmp
shlb
out
sahf
pop
jne
mov
out
dec
mov
jl
cmp
ljmp
imul
dec
push
fs
sbbb
cmp
fsubrl
jo
fisubrs
cmp
add
sub
dec
dec
fcoms
push
xor
xor
inc
xor
xor
push
pop
dec
fcomps
cmp
enter
cli
in
in
adc
dec
jno
aaa
loopne
and
lods
jnp
fmull
mov
dec
fdivs
fdivs
aam
shlb
add
ror
push
pusha
dec
dec
jno
xchg
loopne
fcompl
daa
mov
es
insb
enter
es
xchg
cmpsl
sub
outsl
std
sbb
aaa
pop
mov
ds
lret
cmp
jns
push
inc
jnp
sub
repz
imul
out
or
add
test
ss
add
mov
adc
mov
xor
fnstsw
sub
sbb
mov
mov
pop
cmp
es
mov
aaa
mov
arpl
test
movsb
or
rol
movsb
aad
lcall
pushf
aaa
cwtl
lods
fstpl
cmp
cwtl
mov
dec
out
jno
aaa
dec
adc
lcall
xchg
jecxz
nop
popf
nop
mov
pushf
aaa
cmp
sub
mov
cld
sbb
dec
add
mov
and
xchg
add
es
repnz
test
sbb
nop
int3
loopne
mov
nop
pop
mov
hlt
bound
popa
test
or
ret
ret
gs
dec
aas
and
inc
enter
pop
aaa
push
cmp
pusha
or
mov
or
je
jmp
sub
outsl
mov
sub
ss
sbb
cmovp
jmp
cmc
mov
mov
or
jge
outsb
adc
sbb
shlb
xor
jecxz
add
sbb
sub
inc
out
add
cli
out
dec
insb
popf
movsb
out
ret
repnz
adcb
jb
or
lea
sub
outsb
inc
xor
dec
and
lock
push
nop
fmuls
add
std
pop
ret
push
testw
imul
addr16
aam
rol
mov
jg
mov
jmp
movw
ja
shrb
lods
xchg
inc
or
out
sub
ds
adc
mov
mov
cmpb
mov
adc
aad
or
inc
aas
adcb
adc
scas
lods
mov
xchg
pop
das
push
xchg
dec
bound
cmpsb
mov
lahf
push
inc
scas
inc
scas
push
pop
dec
adc
or
or
sub
inc
fwait
adcb
xlat
and
fstpl
roll
or
xor
add
js
and
dec
inc
mov
lods
ds
nop
xchg
pop
mov
dec
cmp
adc
call
and
aas
addl
cmpsl
leave
or
jns
sub
or
enter
xchg
jecxz
nop
inc
push
jb
call
and
add
inc
push
sarb
push
xor
fsubrl
cmp
cmp
mov
sub
sub
test
pushf
pushf
add
or
fsubs
shl
xor
scas
inc
das
push
xor
mov
xor
xchg
mov
or
push
repnz
cmp
push
ja
jmp
in
inc
xor
call
jb
pushf
fmuls
jno
jne
jmp
addl
adc
adc
je
dec
aas
faddl
add
aaa
and
inc
sub
lmsw
dec
jmp
adcb
and
test
aaa
in
pop
or
and
or
cmp
outsl
inc
lret
mov
xchg
pop
inc
insl
jo
add
test
dec
jne
jmp
lahf
mov
or
jnp
pop
mov
in
jae
push
ds
add
push
fiaddl
lods
add
add
iret
add
add
insb
rcrb
lods
mov
mov
push
aad
xor
pop
sub
repnz
and
outsb
imul
cld
jl
dec
inc
arpl
pop
add
inc
adc
adc
push
or
cmp
pop
into
test
ret
jb
test
cmp
shlb
aaa
ss
xchg
mov
shrl
cmp
add
cmp
pop
adc
sti
out
int3
or
push
enter
dec
add
out
lahf
cmp
pop
mov
hlt
insb
das
add
jno
cmp
jno
mov
mov
test
stos
xchg
cld
inc
popa
xchg
and
hlt
pop
cmp
mov
adc
sub
popa
into
inc
jl
mov
lret
adc
test
leave
mov
sbb
or
and
enter
xchg
daa
or
sub
xchg
in
push
shll
pop
mov
jns
mov
inc
push
and
pushw
dec
ret
jmp
lret
push
cmp
scas
aaa
cmc
mov
into
pusha
nop
pusha
nop
jmp
xchg
push
add
daa
xor
cmp
add
mov
sahf
fs
hlt
cmp
cmpsb
add
mov
jo
pop
test
sbb
adc
and
pop
std
dec
ljmp
popf
cmp
pusha
test
pop
add
pop
arpl
mov
sub
daa
daa
or
mov
and
push
sbb
jo
adc
mov
push
or
inc
fisubl
setne
push
and
mov
lock
je
jo
add
or
or
insb
sub
dec
cld
rsqrtps
mov
adc
jne
sub
push
cmp
push
nop
clc
aaa
xchg
inc
sar
inc
roll
outsl
lret
movb
pop
cmp
and
jg
lret
mov
or
push
dec
push
sub
inc
mov
pop
xchg
outsl
dec
jne
arpl
js
and
xchg
inc
test
sbb
jnp
push
push
pop
jg
int
or
jle
inc
xor
and
pop
or
pop
lret
push
jge
xchg
test
push
jp
xor
and
mov
test
decl
jmp
ljmp
fcomps
xchg
xchg
movb
shr
push
inc
aas
mov
jg
shl
cmp
cs
jae
sub
dec
test
adc
movaps
mov
jne
xchg
outsb
dec
push
ss
test
jbe
xor
sti
jl
add
lea
cmc
les
iret
jge
sub
sahf
out
mov
inc
call
sbb
inc
adc
add
arpl
orl
int3
cmp
push
jecxz
pop
add
adc
mov
or
jmp
js
push
movsb
dec
clc
enter
xor
pop
mov
adcb
adc
ljmp
pop
push
mov
inc
jle
pushl
dec
jns
push
jo
pop
pop
lahf
es
fs
or
and
cltd
xchg
fmull
out
lcall
xchg
jmp
xchg
xor
adc
stos
nop
xchg
out
sbb
ss
sbb
cmp
mov
cltd
sbb
push
lock
in
lock
lahf
fstpl
inc
adc
repnz
and
sbb
mov
sbb
jb
or
jge
xchg
mov
inc
push
lea
mov
and
fwait
mov
inc
xchg
clc
cltd
andnps
js
cltd
dec
sbb
push
add
inc
jbe
cmp
sub
push
mov
or
jge
ljmp
hlt
sahf
mull
gs
or
add
inc
cmp
jle
dec
enter
call
or
mov
mov
enter
hlt
hlt
rcll
adc
loopne
outsl
push
inc
loop
adc
cmpb
je
push
or
or
aaa
pop
fst
lret
push
push
mov
push
sub
ljmp
stos
push
jle
sti
xor
aas
inc
incb
adc
inc
jle
mov
mov
mov
push
cmpb
add
inc
dec
pusha
sbb
pop
jne
mov
adc
sbbl
xchg
xor
cmpsb
les
pop
mov
xor
inc
jl
inc
xor
cld
adc
lods
addr16
into
add
call
dec
mov
fisttps
dec
sub
lret
cmpl
andl
inc
dec
jne
fisubrs
and
cmp
clc
add
mov
xorl
decl
xchg
fildl
pop
int3
adc
bound
orl
pop
cs
sbb
pop
cmp
dec
enter
or
dec
adc
add
lods
jge
adc
mov
sbb
sub
jo
call
push
test
sbbb
fdivrs
scas
mov
fdivrl
adc
mov
add
pop
or
in
push
andb
je
int
je
pcmpeqb
and
leave
lahf
lock
add
push
mov
cld
jo
or
imul
hlt
push
pop
inc
sub
lods
ficoms
mov
repz
int3
mov
and
push
inc
mov
test
call
cmp
sarl
jg
fists
sarb
hlt
add
mov
fnstcw
or
jo
loop
out
lods
jg
ficomps
mov
pushf
add
mov
and
pop
imul
or
fwait
ljmp
shrl
jg
sbb
ffree
lret
stos
push
or
xchg
iret
repz
pop
les
out
add
push
adc
xor
insl
movsl
mov
push
call
mov
add
add
mov
jnp
shrl
adc
push
push
fistl
ds
mov
idivb
and
mov
xor
xchg
cld
flds
and
xchg
mov
repnz
fildll
cmp
add
xor
cltd
scas
sbb
pusha
aad
cmpsb
pcmpeqb
dec
shl
or
jecxz
insl
jg
xor
pop
imul
lea
sbb
fs
imul
sahf
push
xchg
sub
push
cmp
sbb
or
in
sbb
insb
sub
pop
cmp
sub
or
mov
loopne
and
addr16
cmp
adc
inc
pop
sahf
mov
lock
xor
dec
add
rorb
add
cmp
ret
mov
xchg
movsb
cmp
lods
or
xor
cmp
cmp
inc
xor
imul
in
inc
jb
aas
in
int
arpl
sub
inc
xor
pop
add
cmp
dec
inc
fcoms
add
in
sbb
roll
call
in
fsubs
mov
sub
push
sub
scas
push
popf
adc
push
cmp
pop
add
and
repz
repz
push
bound
xchg
inc
mov
lea
or
jb
fs
aam
faddl
test
add
aas
xor
mov
stc
or
pop
sbb
sbb
sbb
and
sbb
inc
cmpsb
push
movsl
sbb
xor
jmp
push
out
jmp
lods
shl
sahf
pop
or
dec
jg
popa
imul
das
insb
jmp
xor
jbe
mov
xor
shlb
les
call
imul
inc
jo
jmp
cwtl
fdivrs
jl
outsb
xor
add
cmp
add
dec
out
inc
mov
mov
or
pop
clc
out
std
push
jmp
cmp
push
mov
cmp
xor
lahf
pop
push
jnp
cli
pushl
sti
pop
inc
xchg
pop
js
push
orb
out
and
scas
dec
ds
mov
xor
incb
adc
fldcw
jmp
inc
adc
insb
mov
daa
loope
dec
cmc
jge
cmp
scas
test
adc
rorl
ds
xchg
or
sbb
xor
inc
xchg
inc
xchg
imul
lock
lea
add
add
pop
mov
out
addb
leave
adc
mov
call
mov
sbb
ret
pushl
ja
or
ret
add
incl
dec
pop
aas
adc
lret
sar
mov
push
push
mov
into
cmp
mov
imul
leave
inc
mov
or
xor
pop
sub
jge
adc
aad
inc
dec
loope
sti
xor
or
push
mulb
sub
das
in
lock
mov
pusha
cld
sbb
ja
nop
inc
mov
shl
sub
fstpt
cmp
dec
add
jo
jns
mov
mov
cmpsl
push
add
push
int
pop
sub
jl
mov
or
xor
inc
dec
jne
aas
lcall
stos
jne
and
jl
mov
jae
sbb
jmp
add
int3
sub
in
add
xor
and
aam
cmpsb
mov
add
mov
xchg
daa
enter
enter
inc
daa
push
adc
pop
cmp
adc
rolb
loopne
add
test
in
push
sub
inc
in
lods
mov
jno
inc
pop
xor
cs
push
jle
or
add
dec
dec
mov
sbbb
mov
es
imul
push
inc
inc
stos
int3
scas
movl
movsl
out
and
movw
cmpsb
addr16
cmp
dec
or
jmp
cmp
ss
ds
sub
inc
pop
ret
in
int3
add
repnz
cmp
push
rcll
dec
fdivrl
filds
daa
xor
outsl
sbb
pop
xchg
ja
ljmp
add
nop
inc
cmpsl
enter
bound
inc
cmpsl
jmp
sbb
or
daa
insb
jle
arpl
inc
daa
adc
xchg
pop
jle
insb
xor
or
gs
xor
mov
xchg
mov
aaa
nop
les
push
ja
or
test
leave
andl
pusha
or
mov
lock
or
mov
cmp
in
ret
add
and
lea
pop
cmp
cmpsb
insb
push
pop
mov
push
shl
dec
clc
lea
cld
push
cmp
ss
mov
mov
jge
enter
and
leave
arpl
or
mov
mov
dec
dec
scas
imul
sti
add
push
clc
mov
jne
cmp
cmp
inc
hlt
xorl
sbb
mov
inc
sub
or
jmp
ja
jno
sbb
shrl
inc
or
sbb
mov
or
or
out
jnp
cmpsl
jp
lock
arpl
add
hlt
inc
or
hlt
inc
aaa
pop
notl
daa
testl
js
loope
imul
mov
out
in
bound
add
pop
push
add
cmpsl
subb
inc
mov
cmp
adc
cmp
and
fsts
fsubs
cwtl
daa
sbb
repz
mov
hlt
pop
and
das
les
mov
add
cld
xchg
movsb
add
or
and
xchg
es
jp
sub
or
or
loopne
sbb
push
int
push
or
push
push
enter
mov
into
cmp
pop
xor
js
daa
ret
sarb
addr16
aad
jecxz
jne
test
push
jecxz
aaa
jle
dec
aam
js
add
inc
adc
sub
push
and
gs
xor
or
mov
sbb
loop
loop
xor
outsb
xchg
rolb
or
pop
dec
jmp
jge
or
cltd
out
push
jge
scas
lds
xlat
xchg
fsubrs
push
stc
add
inc
popl
insb
add
mov
mov
xor
push
dec
scas
add
cmp
cmp
or
push
sbb
push
jl
sbb
pusha
in
sbb
push
push
test
ds
xacquire
push
adc
and
fbld
inc
push
loop
push
xchg
fadds
push
push
clc
dec
les
les
mov
xor
test
dec
pop
push
pop
inc
cld
inc
and
outsb
jo
mov
les
fimull
ja
lock
ror
sub
std
dec
sub
or
pop
jbe
lcall
jle
cld
dec
adc
sbb
pop
and
mov
mov
loope
fdivr
sti
cmp
setg
testl
sub
test
inc
add
push
mov
and
xchg
lock
mov
addr16
fs
add
mov
lock
push
cli
and
add
sbb
mov
out
push
arpl
add
sbb
mov
xchg
add
xor
ret
mov
push
add
add
and
and
inc
add
and
nop
sbb
mov
jecxz
or
pop
out
and
inc
lock
leave
call
push
mov
dec
add
dec
dec
mov
add
adc
hlt
jno
and
sub
data16
fisubrl
jae
jne
mov
neg
mov
adc
cwtl
cmc
adc
test
mov
xor
cld
xchg
out
lret
daa
jo
xor
inc
sbb
adc
das
sub
add
xor
cmp
cwtl
cmp
test
or
xchg
cmp
inc
inc
inc
inc
ds
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
cwtl
cltd
inc
inc
inc
inc
lcall
inc
sahf
lahf
addb
addl
xchg
inc
mov
inc
inc
mov
inc
inc
jb
addr16
inc
sub
enter
inc
inc
sub
rclb
adcb
push
and
lock
cmp
jnp
xchg
push
popf
jns
loopne
call
aas
lea
push
lahf
push
cmc
or
xchg
test
sub
movaps
adc
adc
and
jl
adc
or
mov
jo
lock
push
push
nop
imul
push
loopne
add
pop
mov
repnz
push
jb
jo
jb
jns
imul
mov
pop
fldl
or
dec
inc
pop
mov
dec
adc
or
popa
faddl
bound
ja
push
out
xlat
sti
xchg
out
daa
mov
pop
and
add
aas
sub
bound
iret
call
add
lock
mov
inc
nop
lea
jge
xchg
inc
insb
or
or
mov
jae
add
jne
jl
pop
sbb
pop
add
and
push
or
mov
data16
imul
push
in
cmp
mov
daa
das
jl
out
out
daa
movsb
push
mov
into
mov
bound
sbb
insl
add
repz
icebp
jbe
and
sub
push
cmp
pushf
inc
dec
pusha
or
add
mov
jne
lahf
inc
push
pop
cmpb
imul
xor
fstp
sub
and
jge
mov
movsb
cmp
jmp
xor
and
cmp
xor
das
insl
je
push
pop
outsb
sub
shll
mov
xor
cs
inc
mov
xor
add
bnd
pop
insl
out
cmp
or
dec
insb
call
in
and
jge
adc
out
negb
or
adc
push
sbb
sub
jne
sub
push
or
sbb
scas
or
or
jle
and
pop
insb
leave
push
and
test
shll
test
push
nop
test
hlt
sub
pop
dec
es
cmc
mov
rolb
das
insl
dec
lahf
out
sti
xorb
mov
dec
outsb
dec
fidivs
lds
ficoms
loopne
pop
in
push
or
inc
add
xchg
or
sbb
repnz
or
pop
push
pop
mov
int3
add
inc
xor
inc
or
inc
and
leave
cmp
cmp
adc
push
pop
nop
nop
dec
cli
jne
ljmp
jge
lods
or
lea
scas
mov
les
ss
shll
lock
in
sbb
ss
leave
pop
jno
push
cmp
in
call
movsb
std
imul
jmp
push
pushf
mov
or
or
cmpsl
lahf
outsb
push
jmp
cmp
and
jne
sub
inc
popa
jnp
xor
adc
adcl
lods
mov
xor
jmp
add
jno
mov
cmp
ljmp
aas
insb
fnsave
add
iret
loope
fldcw
stos
pushf
xlat
mov
mov
mov
daa
orb
leave
inc
rclb
jo
add
mov
add
adc
xor
idiv
pop
sbb
scas
lods
xchg
dec
or
mov
xor
xlat
loope
mov
xchg
adc
les
adc
add
ljmp
js
ljmp
icebp
jo
aad
push
movsl
xchg
and
and
sub
jo
dec
lods
inc
or
mov
or
push
lods
mov
pop
adc
xor
test
jne
out
push
push
cs
dec
xor
clc
jle
mov
cmp
add
int
fimuls
sub
jb
add
loopne
cld
cmc
xor
adc
push
movsb
pop
push
sub
mov
addl
jp
or
fcmovb
dec
mov
pop
inc
gs
push
mov
testb
mov
mov
adc
add
pop
or
mov
push
or
sbb
pop
sbb
jmp
lret
je
mov
dec
and
sbb
xor
mov
insl
shll
jmp
jle
in
je
jmp
cmp
lock
test
out
jne
pop
call
std
mov
or
sbb
pop
mov
and
aam
je
sub
inc
addb
and
int3
add
xchg
lds
ja
cmp
aas
pop
je
pop
lods
in
or
dec
and
decb
ja
and
adc
sbb
and
mov
mov
cmp
insb
push
add
adc
pop
es
or
movsbl
or
sbb
jp
lcall
aas
dec
aaa
mov
in
fisttpl
sarl
cmp
lret
or
xchg
out
orb
testb
call
out
mov
mov
or
pusha
test
fcomip
popa
or
imul
inc
out
loope
mov
popa
dec
mov
mov
ljmp
cmpsl
or
imul
mov
cmpsb
mov
and
lock
jno
adc
xchg
xorb
or
pop
cmp
movsl
sub
inc
and
lcall
icebp
jb
rcrb
in
inc
dec
dec
loope
ret
test
sub
and
and
out
mov
push
push
imul
fwait
xor
mov
mov
pop
pop
pop
pop
test
pop
sbb
mov
add
xor
pusha
inc
or
add
cmc
fcmovbe
sub
push
mov
outsl
sahf
mov
add
div
je
add
lgs
dec
pop
mov
add
jne
pop
xor
sbb
sbb
add
je
jge
roll
mov
dec
push
mov
pusha
sub
mov
mov
dec
jae
nop
add
pop
imull
pop
push
jne
mov
or
movb
pop
jl
test
or
dec
and
movsb
cltd
add
adc
ds
mov
in
add
out
xlat
andb
movsl
jle
xor
adc
incl
cmp
pop
push
ret
call
rolb
or
ret
fcomip
ja
mov
lods
cmp
mov
enter
mov
push
mov
addl
popa
sbb
cltd
push
jge
ret
or
lds
inc
fstps
data16
pop
pop
cmp
das
cltd
es
sbb
or
xor
or
enter
mov
pop
clc
inc
jge
test
bound
fcmovnb
ja
add
xorb
inc
sbb
lret
mov
sub
js
scas
sbb
inc
xlat
cmp
add
ret
push
scas
push
mov
push
or
std
adc
sub
je
or
dec
je
jl
adc
sbb
stos
mov
je
addr16
fdivr
jg
mov
mov
sub
or
jmp
gs
aam
xor
or
mov
xchg
daa
out
pop
and
jns
imull
jecxz
adc
push
jmp
pop
sub
call
mov
rorb
fsts
and
sbbl
adc
sbb
xor
push
mov
aam
hlt
hlt
or
movsl
bound
decb
ficomps
fiaddl
adc
and
fbstp
rol
and
hlt
or
and
jp
sub
out
or
sbb
jp
scas
loope
iret
and
dec
shr
or
js
les
clc
clc
add
xor
ret
or
int3
lcall
pop
inc
dec
sahf
inc
mov
hlt
add
xchg
out
in
push
add
push
push
mov
test
fsubl
jnp
or
ja
enter
push
cmc
repz
mov
fsub
flds
frstpm(287
dec
sti
xor
adc
xchg
fcomps
lods
test
cs
push
and
push
cmp
jmp
das
push
jnp
add
jle
je
add
add
mov
adc
adc
rcrb
and
cmp
mov
cmp
aas
jbe
add
xor
push
jno
mov
imul
rorl
ja
lods
mov
enter
idivb
cld
jge
jl
insl
or
sbb
insl
push
adc
shlb
xor
add
mov
fimull
cmp
adc
or
cmp
mov
sti
fmuls
aaa
pop
add
xchg
mov
adc
fisttpl
test
or
push
push
fs
jns
movsb
cmp
and
mov
insl
pop
xchg
dec
sub
xor
push
sub
cmp
outsl
xor
sub
testl
or
cs
jge
sub
adc
jmp
pop
jmp
sbb
sub
jmp
or
pop
ret
nop
sbb
div
add
loopne
dec
mov
jge
rcrl
pop
pop
jp
adc
jno
incl
fildl
sbb
adc
push
mov
xchg
sub
xor
je
lods
inc
pop
or
or
pop
loope
mov
cs
std
into
xlat
mov
ret
vaddss
sbb
pop
adc
push
hlt
in
dec
or
dec
add
push
pop
shlb
cwtl
flds
cwtl
pushf
fstps
dec
cmp
and
pusha
or
mov
or
in
wbinvd
test
into
in
adc
ja
sbb
lahf
inc
dec
or
dec
jg
pop
mov
sarb
aam
push
das
js
nop
xchg
jg
jge
ret
fs
cld
call
je
addr16
push
dec
push
dec
pop
push
dec
or
cmp
rolb
inc
invd
dec
push
gs
imul
pop
or
add
inc
xchg
and
orl
or
mov
popa
insl
cmp
dec
mov
es
add
or
cmpsl
shl
or
pop
inc
inc
push
orb
pop
dec
and
fisttpll
or
and
or
or
or
mov
cmp
iret
adc
pop
addr16
enter
adc
mov
loop
pop
dec
outsb
push
insb
cmp
jmp
add
dec
int3
jg
jae
testl
adcl
mov
sbb
mov
pushf
add
arpl
cmp
ljmp
je
pop
andb
lds
sub
push
sub
adc
shlb
adc
fcmovnu
pop
ja
push
ja
outsb
addr16
stos
shrl
inc
cmp
xchg
insb
jp
in
icebp
nop
mov
dec
fwait
inc
fisubrl
jne
push
orb
jnp
mov
popa
aas
xor
pop
push
pushf
fsubl
pop
jle
cmpxchg
movsb
mov
pushf
cwtl
xchg
nop
mov
shrb
xchg
shrb
arpl
dec
mov
sub
insb
imul
test
cwtl
xor
dec
gs
fsubrs
jns
sbb
scas
sbb
dec
push
mov
inc
fldl
jae
call
cmp
imul
fmulp
lret
fs
outsl
test
nopl
addr16
adc
dec
outsl
sbb
mov
jbe
pop
adc
dec
outsb
insb
jns
xchg
inc
fisubs
xchg
inc
fldt
bound
or
jp
into
pop
insb
or
cmpsl
or
dec
imul
adc
xchg
test
or
pop
cmpsl
mov
pop
push
dec
add
and
add
nop
loopne
add
mov
sbb
fsubrl
or
dec
gs
fstpt
jae
add
xchg
cmp
insl
xor
cs
adc
inc
jbe
dec
or
push
fsubs
xor
xorl
xor
adc
test
cmpsl
add
in
into
pop
test
mov
xchg
or
pusha
sub
mov
dec
or
or
xchg
mov
cld
sub
outsb
mov
xchg
adc
or
inc
repnz
jb
insb
insb
adc
in
test
inc
pop
sbbl
mov
and
pop
xor
sbb
scas
sbb
or
inc
and
inc
inc
mov
mov
cmpsl
pop
arpl
aam
add
push
imul
mov
imul
test
jnp
loopne
in
rclb
xor
mov
insl
jo
push
mov
inc
mov
mov
push
lds
pushf
mov
lcall
push
push
lea
cltd
jno
adc
jle
ja
mov
popf
ljmp
mov
test
insb
push
push
shrb
push
add
pusha
mov
xor
jbe
jp
or
mov
mov
push
sbb
push
pop
push
or
stos
mov
sbb
es
add
jnp
mov
nop
mov
mov
test
push
xor
jle
sub
lcall
lods
mov
pop
addr16
xchg
flds
adc
or
adc
dec
test
jmp
in
movsb
lods
cmp
mov
adc
add
imul
xchg
scas
inc
or
jns
out
cld
sbb
push
xlat
mov
push
ret
sbb
aas
jo
fbld
inc
lock
jnp
push
cmpl
cs
out
xor
mov
xor
filds
cmovns
jae
fs
jo
lcall
jecxz
jge
das
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
cmp
sub
sbbb
xlat
mov
jp
adc
mov
mov
divb
mov
pop
mov
mov
sarb
fldcw
cmp
sbb
je
inc
jo
inc
mov
testl
mov
sub
xchg
or
fs
or
cmp
loopne
scas
pop
sbb
xchg
mov
push
lods
lea
dec
lcall
pop
insb
bound
mov
rcrb
jb
stc
lock
mov
loope
mov
lods
lds
loopne
call
popf
pop
pop
movl
enter
data16
leave
pusha
ret
insb
ret
or
push
dec
aaa
leave
sbb
mov
pop
inc
movb
nop
pop
rolb
test
mov
add
xchg
sbb
mov
sbb
inc
xor
dec
dec
popl
mov
loopne
mov
fadds
lock
pop
nop
lret
rolb
push
push
mov
fistpll
sahf
testb
int
in
xchg
mov
push
or
popa
imul
mov
enter
push
xor
in
iret
inc
in
and
sbb
xlat
mov
loopne
inc
sbb
adc
inc
mov
mov
xchg
mov
mov
lret
adc
idivl
adc
inc
nop
lods
rolb
xchg
push
rorl
rolb
rcl
pop
mov
xor
mov
sbb
cmp
shl
andps
pop
cmpsl
in
or
or
sbb
adcl
enter
or
sbbl
sub
add
mov
orl
dec
xchg
jl
out
or
pop
das
cmp
xchg
repz
sarl
repnz
and
jnp
push
adc
push
adc
mov
lahf
loop
or
push
or
lcall
adc
fs
jl
add
push
mov
adc
mov
pop
adc
mov
push
inc
push
adc
das
fidivrl
add
sub
aam
dec
aam
xor
mov
pop
xchg
add
jl
sbb
in
inc
fldt
push
push
les
ds
enter
push
inc
or
loop
call
inc
xor
inc
and
inc
pmuludq
ret
or
adc
add
xchg
aas
fcmovb
mov
mov
aas
pop
call
rcll
stos
mov
rorb
mov
xchg
xor
outsb
and
hlt
adc
pop
push
imul
ror
int3
inc
or
pop
cmp
addr16
add
pop
sbb
incl
int
dec
addb
mov
lcall
cmpsb
popa
imull
push
add
xor
mov
xor
data16
in
pop
inc
addr16
inc
mov
mov
push
inc
or
orb
mov
push
nop
push
mov
bound
sti
adc
jmp
adc
sti
inc
cli
stc
clc
push
push
push
push
push
dec
jnp
mov
loop
push
ljmp
xor
cmp
iret
repz
push
pop
pusha
insb
jns
mov
push
dec
into
pop
push
cmp
sub
adc
mov
cmp
pop
push
mov
test
std
cmp
xor
pop
add
push
xor
aad
sarb
add
ss
xchg
mov
adc
out
sbb
push
mov
cld
mov
rclb
and
push
inc
push
mov
push
push
arpl
sahf
dec
scas
dec
enter
adc
leave
mov
push
pusha
push
push
mov
or
and
xchg
sahf
cmpsl
stc
mov
push
cmp
adc
rcrb
ja
cmc
push
add
or
or
sbb
push
je
sub
loopne
and
adc
ljmp
dec
roll
loopne
ss
adc
mov
js
pop
pop
pusha
ficoml
or
test
push
push
rcr
or
cltd
mov
gs
clc
and
in
cmpsl
dec
push
arpl
call
add
inc
repnz
xchg
cltd
xchg
cltd
filds
add
add
jb
jne
out
mov
in
scas
in
and
xchg
js
or
pop
lret
sub
in
fwait
mov
pop
sub
mov
in
push
mov
dec
lahf
les
pop
cmp
xor
add
xchg
xchg
and
out
xchg
or
pop
and
jmp
push
push
inc
sub
mov
pop
lcall
and
add
sub
lock
push
sub
fldt
or
cli
jne
and
jmp
mov
outsb
jmp
jecxz
sub
add
neg
pop
sbb
movsl
mov
icebp
orl
out
nop
stos
mov
inc
inc
add
int3
lea
cmp
jmp
or
pop
jl
lcall
sbb
jmp
addps
movsl
aam
jecxz
cmc
cld
inc
add
mov
and
sbb
mov
clc
mov
daa
mov
inc
and
add
pop
adc
mov
pop
sbb
pop
pop
pop
jp
pop
mov
rolb
pop
or
dec
icebp
dec
push
inc
or
jmp
dec
sbb
push
cld
xchg
hlt
push
insl
dec
into
lret
iret
pushf
fildl
mov
inc
daa
jno
or
mov
pop
xchg
popf
mov
lock
enter
xchg
test
pop
adc
pushf
cld
jmp
gs
jo
push
orb
pop
std
rol
cmp
inc
dec
call
mov
push
xchg
inc
cmp
jbe
sbb
adc
fmuls
sub
enter
add
cmp
movsb
imul
imul
xchg
imul
xor
jo
sub
and
pop
test
xchg
sbb
imul
mov
lret
gs
xchg
dec
adc
mov
clc
push
call
inc
or
or
das
xor
pop
cmp
mov
cmp
pusha
fcmovbe
cmp
add
movb
popf
ret
out
xor
stos
pop
call
mov
in
jl
inc
xor
out
mov
xor
inc
dec
jne
mov
rorl
test
cmpsb
inc
cmpsl
outsb
lds
inc
loopne
cmp
sbb
push
sub
jg
inc
rcr
nop
sub
xchg
mov
dec
cmpb
dec
popf
xchg
outsb
add
pop
add
xchg
sub
leave
xchg
je
lahf
clc
rorl
rcll
test
inc
clc
mov
xchg
sbb
add
cld
pop
sub
cltd
out
xor
add
add
adc
mov
pop
mov
xchg
movsl
roll
mov
int3
pop
shl
jne
push
sbb
pop
imul
mov
push
inc
add
or
jl
or
dec
fsubrs
rcrb
in
xor
xorb
outsb
repnz
inc
pop
imul
push
loopne
es
mov
insl
sub
cmp
push
xor
cmpsb
jecxz
dec
call
jne
movl
jno
push
sbb
inc
adc
push
sbb
jb
jle
mov
lret
out
dec
jae
inc
test
call
aad
jge
sbbb
and
mov
xchg
mov
mov
sbb
xchg
aad
or
test
pop
mov
repz
stos
sub
pop
xchg
mov
hlt
xchg
inc
mov
aad
lret
lahf
sbb
inc
sub
xor
cli
mov
mov
mov
repz
shlb
cld
cwtl
cltd
or
adc
in
pop
in
ret
leave
or
fstpl
or
mov
mov
sbb
xchg
pop
mov
nop
sub
aam
fcom
into
mov
jae
push
test
sbb
adc
notl
add
jo
adc
mov
push
sub
ja
cli
dec
or
and
clc
and
cmpsl
sbb
mov
xchg
xchg
daa
lods
roll
jmp
mov
or
add
es
rolb
add
movsb
mov
ja
enter
ret
fsubrs
jbe
adc
mov
push
jno
inc
call
jg
xchg
lret
xchg
and
xchg
mov
xchg
jmp
inc
clc
mov
jmp
push
je
cmp
insb
cmp
push
shll
enter
movsl
and
lds
sub
sbb
xchg
je
push
xchg
xchg
add
or
popf
xchg
add
and
sub
mov
lea
jbe
pushf
cmp
aas
adc
dec
rolb
rol
loope
ss
addr16
icebp
and
or
or
push
push
sub
sub
mov
push
outsb
xchg
movsb
hlt
fsubrs
bound
cmp
outsl
mov
and
pop
adc
bsf
js
pop
add
lret
mov
jbe
rolb
cmp
addr16
mov
in
lahf
add
sub
clc
pop
push
mov
sub
lea
add
add
daa
addb
cld
mov
jmp
ret
pop
and
and
mov
add
inc
adc
add
sbb
jge
adc
sbb
jns
ret
idivl
sub
mov
in
pusha
push
sub
data16
push
cmp
push
mov
push
fs
mov
add
mov
in
je
rcrb
ja
cmp
dec
lahf
pop
mov
mov
aam
and
and
mov
jbe
daa
inc
popf
or
test
test
pop
icebp
sahf
push
mov
aam
or
jge
jbe
pop
xor
fldcw
mov
xchg
ret
mov
test
push
sbb
jb
cmp
add
pop
add
add
sub
test
jae
testl
rcl
cmp
push
xchg
sub
fdivrl
xlat
arpl
pop
mov
aaa
push
insb
mov
out
sbb
mov
lcall
push
dec
xchg
mov
adc
lock
int
mov
push
or
pushf
test
shll
mov
xchg
cld
pop
mov
outsb
stos
sbb
cmc
and
cmp
mov
jo
je
mov
in
jno
and
cmp
push
pop
dec
adc
pusha
jno
mov
pop
fld
or
xor
gs
in
mov
mov
cmp
rol
xchg
in
and
mov
sbb
shlb
fstpl
dec
imul
push
mov
movsb
push
mov
mov
shrl
rorb
aas
movl
bound
push
jge
inc
je
enter
xor
ja
rcl
and
shll
loop
inc
adc
pop
pop
aas
ljmp
leave
int
push
fisubl
or
jne
mov
das
and
js
inc
stos
add
insb
push
into
cld
loopne
iret
cli
sub
or
dec
or
mov
sbb
inc
idivl
shl
loop
adc
or
in
push
jmp
cmc
mov
icebp
xchg
adc
sbb
xor
jp
push
mov
clc
push
xchg
pop
mov
shr
jmp
or
inc
mov
sub
ficoms
pop
xchg
mov
into
test
xor
push
lods
dec
lcall
sbb
cmpsb
add
int
cmp
push
sbb
adc
push
lret
cmp
and
push
sbb
fcomp
jnp
add
imul
jmp
inc
cmp
jge
add
push
push
jnp
cmpsb
jne
sbb
leave
rorl
popf
iret
std
jle
inc
lds
jae
push
push
mov
inc
loopne
inc
sbb
jecxz
xchg
pusha
pop
jg
jecxz
sub
in
push
ret
cmc
mov
test
mov
test
add
jb
and
leave
xchg
out
lea
pop
sarb
adc
pop
pusha
xchg
je
scas
dec
jmp
or
shl
lcall
xor
call
push
fildl
lock
sbbl
jle
test
inc
loopne
jo
mov
push
bound
ja
call
std
jg
dec
hlt
dec
nop
rolb
fstpt
jo
cs
xchg
cmpsl
xorl
inc
mov
loop
dec
cmpsb
jb
sub
call
shl
scas
adc
je
sbb
push
push
mov
in
dec
jo
mov
mov
insl
jmp
cmpb
das
push
dec
xor
xchg
inc
jne
test
jmp
dec
add
add
sahf
or
bnd
dec
push
dec
popa
andb
movsl
dec
adc
pop
das
aaa
fcmovnu
or
xchg
add
or
loop
testl
fadds
sbbb
mov
push
movsl
movsb
hlt
enter
mov
adc
inc
mov
add
mov
mov
dec
or
adc
clc
add
pop
xor
sub
shl
cmp
je
addb
pop
nop
dec
push
andl
fisubl
icebp
add
sbb
adc
test
mov
fstps
push
fcmovnbe
adc
adc
adc
sub
cmp
jae
cmpb
dec
or
je
stos
adc
btr
loope
adc
push
add
mov
cld
push
push
inc
push
mov
fisubl
fmuls
mov
dec
test
adcb
into
dec
xorb
call
cli
pop
ja
test
push
dec
mov
mov
add
push
mov
mov
adc
push
inc
cmp
jne
inc
decl
jne
adc
pop
mov
bound
leave
hlt
lock
adc
xchg
mov
sbb
subl
in
sub
dec
xchg
test
incl
sub
mov
imul
mov
mov
pop
lods
loopne
movb
inc
dec
jmp
adc
jl
imul
das
lahf
adcb
inc
mov
sbb
add
sub
inc
inc
mov
sub
pop
cmp
push
dec
and
push
test
pop
cmpsb
pushl
js
sub
jne
push
adc
bound
test
ss
dec
push
mov
mov
mov
add
xchg
and
mov
or
int3
adc
add
pushf
mov
inc
add
mov
adc
cmp
sbb
aam
sub
inc
sub
jb
cmp
inc
jle
dec
and
arpl
or
test
pop
pop
jnp
lcall
jns
xor
and
push
mov
dec
enter
mov
fimull
inc
call
adc
mov
push
data16
xor
dec
and
test
fcoms
rorl
fdivrl
mov
clc
icebp
lock
or
xchg
cmp
call
notl
js
sub
lret
enter
push
mov
and
out
shrl
push
mov
cmp
mov
pusha
loopne
mov
inc
ret
xor
leave
and
cld
fiaddl
adc
inc
push
mov
adc
xchg
out
pop
pop
push
push
add
pop
or
adc
popa
mov
mov
dec
mov
push
add
and
movsb
adc
aaa
adc
je
shlb
mov
sbb
pop
aaa
daa
daa
dec
clc
shll
repz
adc
jecxz
lahf
add
addr16
movsb
adc
inc
movsl
push
push
ret
sbb
jbe
jl
ficomps
testl
lret
lcall
mov
les
push
dec
shll
push
add
jae
in
outsb
jmp
pop
and
daa
xor
xchg
cmp
mov
or
xor
xchg
fdivrs
and
pop
in
push
in
inc
ljmp
or
mov
cmp
into
mov
outsb
sbb
sub
inc
push
and
test
cmp
fs
pop
iret
lds
popa
inc
imul
dec
in
or
mov
sub
cld
adc
movsb
ret
loop
enter
ss
stos
and
mov
aad
sbb
clc
and
or
rdtsc
mov
sub
std
lock
and
fucomi
xchg
imul
aad
sbb
xchg
lret
inc
int
mov
ret
loopne
aad
pop
or
pop
and
push
loope
push
loopne
mov
clc
dec
xor
xchg
adc
inc
push
sbb
adc
xchg
pop
push
add
push
push
inc
add
test
outsb
scas
dec
in
fwait
pop
call
stos
lcall
push
and
inc
jnp
in
in
mov
cmp
add
sub
jg
inc
sub
or
dec
ficomps
adc
cwtl
sub
clc
inc
mov
mull
xor
dec
inc
adc
fcoml
xchg
inc
add
arpl
aas
addr16
js
call
add
sub
addr16
insb
and
or
xlat
nop
pop
cmpsb
mov
sub
add
js
jo
loopne
fmul
call
rcrb
add
call
cmp
movsb
test
cmp
movsb
scas
dec
lods
mov
inc
popf
jecxz
xlat
pop
addb
ds
push
sahf
and
mov
pop
cmp
or
pop
lods
ret
aaa
or
test
sbb
js
adc
mov
dec
repnz
xlat
je
dec
ret
lock
out
cmp
mov
pop
call
clc
clc
movsl
or
mov
ret
das
jmp
sub
lea
mov
push
xchg
or
adc
sub
cmpl
mov
lods
cwtl
sarb
adc
cwtl
pushf
dec
mov
mov
clc
sbb
bound
dec
push
add
loopne
pop
xor
aam
xor
xor
add
adc
lret
inc
rcr
inc
cmp
bound
js
adc
xadd
add
push
pop
push
call
loopne
aad
int3
out
fstl
or
push
ror
sbb
shl
jp
pop
das
push
xchg
cmp
sarb
mov
pop
add
dec
or
pushf
in
gs
aad
das
or
xchg
in
rol
xor
mov
push
cwtl
insl
adc
jge
das
repnz
daa
pop
movsb
mov
aaa
mov
in
rcll
inc
jb
or
xor
sub
ret
sub
add
cmp
mov
testb
add
scas
add
mov
sub
jle
and
cmpb
jne
or
scas
nop
inc
hlt
add
int
ret
jno
sub
mov
ret
adc
loop
and
insb
pop
rcll
test
fcoml
or
mov
and
ja
iret
loope
sar
testb
cmp
pop
sti
std
ret
sub
push
testb
orb
inc
dec
pop
mov
dec
xlat
lcall
sub
inc
popl
movsl
pushf
outsb
insb
pop
outsl
add
faddl
adc
inc
pop
inc
test
adc
sub
xor
pusha
cs
adc
and
rol
loop
adc
cmp
dec
inc
xchg
inc
xor
sbb
sbb
pop
dec
fiaddl
jmp
rorb
jl
sub
test
pushf
jl
mov
mov
sub
inc
mov
xor
data16
sub
inc
mov
and
sub
je
lcall
or
lods
inc
int3
dec
adc
shrb
ret
push
andb
inc
pop
adc
pop
dec
nop
gs
add
jge
jo
les
in
jbe
adc
or
roll
and
push
xor
roll
imul
fisttpll
out
cld
lock
dec
sbb
mov
sbb
adc
pop
add
add
jecxz
roll
clc
cmpb
cltd
ficoml
rcr
jle
cmp
aas
mov
jmp
sbb
andb
add
pop
sbb
jge
lea
add
dec
in
xor
dec
into
adc
add
add
repz
imul
mov
inc
add
push
xchg
outsb
sahf
inc
ljmp
aaa
aas
add
dec
push
sbb
add
mov
mov
sub
iret
cmpsl
push
push
stos
loopne
sbb
mov
xor
adc
test
or
das
int
je
xchg
pop
mov
mov
dec
sub
or
sbbb
mov
or
cmp
sbb
or
nop
and
ret
jns
push
test
and
or
mov
shrl
sbb
test
adc
mov
and
lock
pop
shr
add
shr
out
rorl
cmp
and
jg
arpl
and
idivb
cmp
jne
mov
or
or
test
dec
inc
jge
sbb
jle
lea
pop
mov
in
hlt
jl
adc
xorb
add
add
jg
aad
cmp
je
lcall
lods
nop
enter
and
xchg
imul
sahf
clc
lret
or
enter
loopne
add
jnp
xchg
xchg
inc
push
jge
inc
add
mov
push
add
ja
cmp
out
xchg
cmpb
out
add
add
pop
dec
test
xor
push
push
xchg
mov
cmp
push
pop
push
insl
insl
xorb
popf
mov
add
js
flds
shl
adc
push
test
movsb
cmpl
in
xchg
jge
adc
and
add
jb
push
sahf
or
shl
cmpsl
scas
cwtl
pop
add
ret
adc
mov
sbb
in
sbb
scas
or
xchg
lea
jecxz
xor
shlb
insl
pusha
pushf
or
insl
scas
dec
loopne
cltd
or
cmp
into
jne
sbb
mov
inc
pop
xor
int3
inc
movsb
bound
xor
mov
mov
pop
cmp
xchg
andl
push
mov
adc
rolb
lods
ret
fidivs
inc
add
es
andl
mov
fcom
xchg
aas
mull
xchg
outsl
dec
cs
adc
js
and
inc
nopl
pusha
xchg
popf
sbb
rorb
or
lods
push
inc
push
pusha
or
fwait
js
adc
add
add
jbe
or
sbb
or
push
inc
mov
adc
add
inc
ds
int3
cmp
fldt
jge
in
in
jmp
sti
jge
push
and
lret
stc
mov
jecxz
dec
mov
sbb
repnz
mov
xchg
movsb
inc
fst
mov
pusha
pop
in
lahf
inc
rolb
jl
sbb
xor
repnz
pop
ret
fsubrs
inc
cmp
mov
lahf
sbb
in
pop
jb
add
int
clc
xor
lea
xor
ja
lock
or
xor
cmp
fcompl
cmp
push
inc
sub
sbb
jecxz
mov
fs
xchg
xchg
push
out
orb
dec
mov
lea
movsb
sub
jg
cwtl
aam
subl
mov
cmc
inc
or
adc
adc
es
fwait
xlat
xchg
fsubl
add
jecxz
inc
cmpsb
xchg
imul
imul
cmc
mov
shll
inc
enter
cmpl
add
mov
lods
pop
add
cld
fcomi
pop
sub
frstor
mov
xor
fsubr
cmp
inc
lcall
pop
mov
push
sbb
jle
jge
and
loopne
and
adc
inc
and
xchg
or
push
fadd
dec
mov
pop
or
leave
add
pushf
xchg
or
aam
lock
jnp
test
pop
jae
dec
mov
loopne
cmp
jne
jecxz
je
or
mov
jae
push
mov
in
jmp
or
dec
or
adc
iret
or
push
add
sbb
push
ret
ss
dec
mov
pop
mov
daa
lahf
shlb
in
imul
aas
test
add
mov
popf
addl
lock
pop
jp
test
inc
addb
mov
dec
aam
pusha
daa
loope
rorb
aam
adc
inc
cmp
jecxz
cmp
cmp
jge
data16
dec
je
adc
cmp
jp
add
or
adc
lock
or
inc
and
cmp
je
or
mov
jne
arpl
inc
rclb
je
mov
mov
mov
sub
daa
or
sbb
pusha
cwtl
inc
push
cs
pusha
inc
add
inc
rorl
sub
sbb
orb
out
les
scas
xor
pop
lret
add
cmp
cmp
jle
or
mov
xor
pushf
xlat
test
dec
sahf
add
lds
mov
lret
and
pusha
rolb
add
add
or
nop
pop
sub
dec
add
pop
adc
test
shll
mov
add
push
clc
adc
adc
sbb
mov
pop
jmp
daa
jno
inc
push
cltd
lcall
ds
ret
adcb
xor
adc
repnz
sub
adc
sub
jg
out
pop
sbb
iret
adc
test
pop
mov
vcvtss2sd
and
mov
or
lods
pop
or
in
mov
inc
sbb
mov
inc
nop
insb
xchg
sbb
or
and
cs
pushf
insb
in
sub
add
xor
cs
adc
negl
push
addb
jne
lea
in
xorl
push
aam
mov
xchg
mov
ret
ret
nop
aaa
mov
mov
add
or
mov
lea
pop
shlb
adc
popa
test
inc
nop
pushf
ja
lods
push
mov
ficoms
loopne
jne
bound
mov
sub
mov
lea
int
inc
movsb
pop
insb
mov
or
and
or
dec
or
rcrl
ss
dec
and
fmuls
or
aaa
add
loop
dec
mov
sub
fidivs
sbbb
inc
add
jns
xor
cwtl
mov
xlat
shlb
leave
int
addr16
jmp
dec
dec
imul
scas
push
add
popl
out
add
adc
xchg
mov
cmp
scas
add
jo
sbb
cs
sbbb
je
fs
or
inc
push
ja
add
xchg
xlat
dec
cwtl
inc
cmp
jg
sarl
push
and
jl
push
pop
sbb
outsl
daa
or
mov
or
bound
jge
add
add
je
push
clc
xor
arpl
pop
mov
pop
xor
fdivrs
clc
lods
inc
add
je
sbb
adc
scas
xchg
loopne
cmp
sub
pop
ss
and
mov
pop
shll
cmp
and
cli
jecxz
in
jmp
aaa
pop
pop
inc
cmp
jl
inc
add
xor
mov
cmpl
mov
add
sub
andw
xchg
sbb
je
fnstcw
sub
and
inc
fldcw
pop
ret
cmpl
sbb
rcrl
pop
mov
lock
xor
and
scas
push
pop
or
mov
in
adc
adc
dec
je
inc
rcll
cmp
adc
add
xlat
pop
sbb
in
fiaddl
lret
adc
jbe
mov
or
push
pop
lret
aas
and
xchg
inc
and
fldl
add
and
andl
data16
movlps
add
and
ret
das
fnstsw
test
jmp
dec
adc
jmp
pushf
pop
cltd
hlt
ret
lahf
jne
jo
les
or
sbb
add
adc
push
mov
mov
xchg
mulb
mov
ret
ja
mov
cmpsl
ds
iret
push
adcb
testb
pop
adc
add
add
xchg
mov
nop
cmp
xchg
fdivrl
loopne
icebp
or
fisttpll
push
enter
dec
hlt
aaa
test
push
jno
inc
fsub
mov
mov
lea
mov
daa
subl
pushf
mov
incl
pop
push
inc
lret
call
arpl
daa
out
mov
imul
les
or
stos
inc
enter
sub
lock
and
xchg
fld
jnp
jno
mov
add
movsb
cmp
sbbb
pop
mov
pop
clc
fsts
mov
mov
pusha
cmp
push
add
push
push
or
popl
jne
add
out
loope
inc
or
and
fiadds
arpl
push
rolb
adc
pop
movsb
jnp
inc
in
xchg
sbbl
ljmp
movsb
cmp
pop
mov
fcomps
loop
lea
sub
inc
sbb
add
pop
adc
push
in
inc
xor
pusha
bound
movsl
rorb
fidivs
leave
xor
pop
pop
mov
scas
jns
test
ja
fmulp
lods
dec
and
and
aam
outsl
iret
jl
and
imul
sub
add
mov
push
xlat
fnstsw
movsb
push
dec
jne
and
xor
shlb
xchg
movups
mov
pop
jecxz
jmp
xchg
test
sub
sbb
movswl
jg
imul
xchg
pop
fbld
push
mov
dec
jne
mov
nop
in
sub
push
cmp
je
popa
mov
and
or
add
test
pop
pop
xor
rcll
push
cmp
roll
iret
xchg
xor
jp
jecxz
lret
pushf
pusha
loopne
pop
es
mov
dec
pop
sarb
or
rolb
cmp
outsb
fsts
movsl
je
or
imul
dec
mov
or
pop
cli
mov
jne
pop
inc
addl
dec
dec
mov
mov
sti
mov
rolb
xor
sub
loopne
xchg
jo
sub
jns
mov
cmp
dec
push
mov
jmp
mov
push
stos
loopne
scas
cltd
lock
fstl
or
cmpb
shll
or
lods
xchg
jge
in
add
add
fildl
lock
mov
int
mov
mov
fs
push
loope
fmuls
and
dec
pop
ss
enter
dec
inc
lods
movsb
mov
xchg
out
lahf
pop
sbb
inc
xor
or
adc
push
sbb
out
adc
sbb
jp
testb
inc
mov
and
loope
mov
sub
push
pop
push
pop
add
mov
cmp
cmpsl
lea
mov
cld
dec
mov
js
add
jge
pop
mov
cwtl
mov
or
add
push
jb
jmp
lea
shlb
sub
int3
ret
sbb
add
mov
mov
test
lsl
add
call
or
and
rcrb
jo
fistl
push
popf
lods
insb
das
arpl
call
add
int
xchg
pop
ficoml
add
scas
lea
adc
mov
push
xor
push
push
sti
loope
sbb
in
xchg
jo
imul
adc
mov
xchg
in
dec
jno
popa
sub
iret
fnstsw
iret
push
pop
mov
dec
sbb
xchg
insb
mov
adc
jecxz
aam
or
or
test
add
pop
das
imul
cmp
arpl
xor
cmpsb
sbb
movb
sbb
adc
jecxz
push
sub
mov
add
imul
das
enter
dec
aam
adc
xorl
in
or
jne
adc
or
inc
rcll
pop
inc
in
sub
lods
cwtl
in
adc
xor
fdivs
inc
aad
adc
sbb
fs
daa
mov
popa
in
mov
out
mov
or
testl
call
imul
fcoml
addr16
sub
sbb
fsubs
scas
fisubl
push
divb
or
aam
pop
jmp
rcrl
pop
ss
pop
popf
cmp
enter
xor
pop
scas
fneni(8087
push
mov
mov
pop
popf
jne
inc
sbb
aam
cmp
test
push
lret
xlat
sbb
rcrb
add
inc
in
adc
and
test
xchg
cld
out
cmp
adc
pusha
sbb
push
xor
imul
fisttps
popa
mov
push
stc
adc
jmp
inc
mov
pop
cmp
jo
xor
in
inc
scas
and
dec
or
lods
pop
adcl
jmp
rcrl
setp
sub
fsubs
cmp
pop
out
cwtl
out
sub
adc
fst
cltd
add
daa
or
push
roll
jns,pn
xchg
pop
call
sbb
pushf
bswap
push
enter
xlat
pop
ret
jle
jmp
cmp
push
xchg
popf
lock
sbb
sbb
add
les
shlb
fs
lcall
movsb
fidivrs
imul
pusha
sub
sbbb
xor
aad
mov
in
clc
cld
imul
hlt
sub
aaa
push
add
jbe
push
cmp
aam
jo
ret
mov
sub
push
xchg
gs
hlt
add
frndint
cmp
add
sbb
add
pop
jb
lock
and
cmp
orl
jbe
shr
ja
inc
arpl
lahf
adc
or
leave
xchg
xchg
cmp
fmuls
sahf
mov
adc
das
ljmp
je
scas
add
and
jns
jns
mov
lea
fimull
mov
or
pop
add
fldcw
loop
into
aam
das
sbb
jae
in
hlt
adc
adc
add
jns
mov
add
fwait
mov
cmp
xchg
sub
xor
and
ss
push
or
testb
mov
aas
orl
mov
sbb
xor
fs
daa
cmp
ret
cmp
cltd
jnp
or
mov
mov
loopne
stos
nopl
jbe
mov
mov
jne
mov
or
push
push
mov
pop
or
add
leave
mov
stc
in
pop
xchg
pop
lea
outsl
push
mov
dec
add
pop
hlt
pop
inc
add
std
sub
lahf
lret
mov
loopne
push
lret
inc
jp
es
pop
and
push
mov
inc
fsubrl
sub
mov
and
sbb
xchg
inc
das
aad
lret
mov
xchg
pop
add
adc
or
xlat
out
push
lcall
out
jmp
hlt
inc
xor
mov
or
out
add
je
sti
adc
ds
add
jl
xchg
xor
test
or
mov
gs
imul
push
jo
jle
pop
gs
mov
xchg
std
iret
movsb
test
mov
pop
cmpb
roll
cmpsl
and
popa
enter
mov
mov
push
jo
fwait
push
loop
inc
jmp
sbb
adc
lock
loopne
jmp
mov
cld
pusha
rcl
lock
mov
add
popa
adc
lds
dec
iret
jl
push
pop
adc
fdivrl
dec
xor
cmpb
jo
push
push
fstpt
xchg
out
sti
out
popa
movsl
lret
or
sub
push
nop
mov
sub
call
adc
gs
cmovns
add
je
pushf
fmuls
pop
and
xor
add
xchg
mov
mov
mov
sub
out
lock
cmp
add
pop
icebp
or
cmpsb
hlt
sbb
or
insl
mov
loop
sbb
pusha
and
add
lcall
or
sub
adc
gs
pop
mov
adc
clc
jge
shr
fisubl
enter
inc
cmp
adc
rcrb
jg
enter
jl
mov
jno
roll
add
fisubl
imull
mov
or
pop
pop
test
imul
mov
adc
mov
xchg
sbb
jae
jl
sarb
jns
faddl
repnz
in
jns
sti
call
push
dec
jae
roll
iret
insb
push
mov
pop
inc
push
test
add
xchg
test
daa
fisttps
in
push
enterw
rclb
lcall
jnp
ficoms
cmp
loope
call
xor
repnz
and
adc
repnz
fsubrl
arpl
cmp
adc
cli
sub
es
stos
sbb
cmp
cli
push
addb
cmc
fs
xchg
lods
inc
push
sbb
ret
push
lods
popf
dec
pop
or
fwait
mov
add
jo
lcall
faddl
cld
inc
pcmpeqb
loop
aaa
xchg
in
sbb
daa
push
mov
sub
pop
jo
push
aas
outsb
push
jmp
in
fdivrl
pop
adc
jae
mov
and
iret
dec
dec
or
ret
cmp
wbinvd
dec
push
jge
mov
daa
adc
push
cmc
ret
xchg
or
int3
sti
add
mov
inc
addr16
xlat
shlb
add
fcomp
nop
xlat
or
push
xchg
ret
and
rorl
dec
mov
notb
mov
out
test
mov
sbb
add
out
js,pn
push
sub
add
jle
aad
jmp
mov
fdivl
mov
hlt
mov
sbb
jmp
mov
mov
nop
out
dec
shl
mov
lods
aam
jo
inc
sbbl
das
loop
bound
les
sbb
je
outsl
imul
push
sbb
jmp
xchg
je
test
dec
sbb
pop
cmp
jecxz
adc
mov
sub
fs
lds
das
xchg
scas
xor
das
xchg
arpl
and
and
sub
jbe
xchg
je
pushl
adcl
fstl
push
mov
stos
into
mov
ds
push
fistps
or
je
in
jecxz
adc
mov
or
test
mov
mov
or
add
lods
pop
hlt
and
lock
xchg
or
iret
mov
mov
ret
mov
aaa
out
mov
rolb
xor
dec
ja
and
les
clc
loope
out
adc
push
enter
imul
bts
jmp
lds
sub
popa
ljmp
push
xchg
adc
mov
aad
xlat
push
out
mov
add
rclb
stc
pop
daa
push
sbb
rorb
add
xchg
adc
push
mov
add
mov
jge
mov
cmp
push
push
push
and
adc
mov
inc
xchg
cld
fld
xchg
adc
adc
jb
sahf
sbb
push
fdivl
lret
inc
jae
push
push
mov
iret
inc
jo
pop
ja
adc
sbb
inc
lock
jmp
push
inc
aas
and
pop
or
ds
dec
cmpl
rorl
roll
mov
out
inc
imul
lcall
sub
or
out
push
dec
cli
sbb
inc
nop
pop
lods
lock
js
ljmp
jp
xor
mov
insl
add
out
adc
pop
hlt
mov
pop
scas
shrb
dec
fcoml
and
scas
shll
xchg
mov
lret
inc
mov
das
pusha
repz
and
pop
mov
pop
xor
push
jno
out
mov
aas
sti
inc
orl
mov
ds
iret
mov
or
and
sub
cmp
repz
pop
data16
and
lods
push
insb
jge
scas
push
pop
pop
and
and
pop
and
xchg
add
ret
adc
insb
mov
sarw
insl
das
pop
push
adc
push
mov
dec
shlb
sub
adc
mov
shll
repnz
loope
or
test
dec
and
nop
mov
gs
mov
dec
sbb
decl
stos
pop
aas
and
sbb
lock
xchg
mov
ret
ret
sbb
push
aam
mov
sbb
je
sub
je,pt
lahf
loop
jae
ljmp
jns
mov
xor
scas
dec
es
inc
inc
push
dec
mov
rcll
adc
inc
push
call
cmp
and
jg
sbb
sub
add
testb
inc
test
test
test
clc
inc
popa
subb
mov
mov
inc
inc
call
jmp
in
adc
push
sub
dec
rcr
mov
cmpsl
xchg
or
sbb
push
inc
push
lret
push
sub
hlt
push
add
loope
sbb
pushf
add
or
and
mov
leave
mov
pushf
add
adc
cmp
pop
dec
or
pop
push
int
sub
and
mov
jg
js
xchg
inc
shlb
icebp
add
mov
or
nop
out
mov
int3
lock
aam
xchg
cli
inc
inc
adc
inc
bound
test
into
inc
cld
mov
mov
ja
sbb
dec
cld
shl
rol
jp
dec
cmpsl
in
push
daa
xlat
fidivrs
ret
clc
clc
iret
mov
mov
jmp
lret
sbb
and
adc
lds
mov
movsl
add
cmpsl
mov
sarb
dec
scas
add
push
mov
cmp
stc
dec
call
clc
das
inc
add
lret
cli
fisttps
mov
sub
aas
sbb
xor
push
out
xlat
xchg
je
arpl
or
jecxz
mov
adcb
fidivl
cmpsb
push
int
push
ret
clc
adc
push
int
movsb
pop
repz
and
cmp
dec
ja
ret
mov
mov
cs
fldenv
ss
dec
mov
add
push
add
cs
fadds
and
jo
xor
pop
inc
push
shl
or
cs
insl
mov
cmpl
clc
lods
cmpsl
pop
lea
out
inc
jge
jecxz
pop
dec
jmp
sbb
cwtl
es
ret
fxch
jecxz
jno
and
add
aas
ret
cmp
or
loopne
mov
fsub
jns
dec
or
dec
clc
repz
sbb
ljmp
sub
push
mov
add
add
mov
pushw
xchg
dec
pop
mov
jb
mov
jne
jmp
mov
int3
sbbb
bswap
ficoms
cli
jge
cmpb
jg
out
cmp
add
adc
adc
cmpl
aam
and
dec
cmpsb
std
cmpb
add
enter
mov
mov
mov
or
nop
inc
add
mov
pop
add
mov
xchg
jne
dec
ss
enter
push
jecxz
gs
add
cmpb
mov
pop
out
loope
dec
cmp
push
rclb
adc
push
sbb
jo
pop
push
mov
sbb
enter
mov
and
mov
inc
add
cmp
mov
or
sub
jg
jge
push
mov
call
out
xchg
sbb
push
pop
or
sbbl
cmc
pop
pop
filds
aad
adc
je
sbb
pop
fmull
push
inc
test
mov
testb
push
jns
and
clc
and
pop
hlt
push
out
addr16
push
xor
push
add
mov
xchg
jg
dec
jp
xor
not
loopne
push
adc
dec
pop
dec
sbb
test
rcrl
xor
test
mov
or
cmp
addr16
adc
mov
cmpsl
xchg
cmp
mov
adc
cmp
xor
lahf
sbb
lcall
dec
mov
inc
and
mov
xchg
sub
clc
fcompl
dec
push
inc
rcll
into
loope
hlt
test
shll
stc
dec
loop
test
jle
or
imul
dec
and
mov
jb
out
ljmp
mov
xchg
icebp
stc
xor
in
mov
mov
lret
push
or
jge
xor
in
pop
xor
and
mov
into
or
or
es
ficompl
or
sbb
or
orw
stos
lock
divl
fldt
mov
daa
sbb
sbb
sub
mov
inc
push
push
push
adc
push
or
shl
adc
jo
mov
pop
push
jmp
or
sbb
xlat
push
das
inc
sbb
or
pop
mov
jnp
cld
testb
inc
mov
or
and
ds
scas
inc
pop
push
je
addr16
pushf
sub
bound
xchg
push
clc
mov
dec
sbb
xchg
and
cmp
aam
mulb
les
std
inc
add
xchg
and
or
pop
data16
and
mov
pop
adc
rclb
adc
fsubrs
inc
aam
repnz
orl
movsb
cltd
cmp
inc
push
adc
cltd
clc
push
add
lock
or
adc
xchg
adc
sbb
test
stos
cli
add
into
adc
jecxz
call
sbb
adc
xorb
je
jp
lahf
xlat
adc
and
ficompl
sub
lods
andb
push
push
cmp
push
or
ficoml
fwait
push
setne
mov
add
pusha
push
fnstcw
sbb
jo
and
mov
dec
gs
outsl
jo
push
push
adc
aas
add
jb
ffreep
and
fwait
pop
and
push
ss
inc
inc
pop
inc
idivl
in
mov
decb
add
pop
xlat
test
lret
push
mov
es
mov
inc
dec
ja
pop
call
pop
add
xor
call
cs
jne
hlt
dec
call
cwtl
mov
jmp
test
push
push
repz
scas
or
in
mov
inc
cmp
mov
or
data16
pop
dec
in
sbb
xor
frstor
and
in
sbb
mov
xor
inc
dec
jne
les
ret
or
push
imul
fsubrs
dec
push
push
addb
sbb
lcall
sbb
jmp
sbb
dec
aad
adc
ffreep
scas
inc
adc
ljmp
daa
adc
add
xor
mov
push
sub
jl
adc
inc
add
leave
push
enter
movsb
push
sub
jp
push
or
aas
orb
jg
push
dec
cmp
mov
xlat
xor
gs
ret
sub
nop
pop
xlat
call
into
mov
pop
mov
or
sbb
andb
jmp
sbb
es
mov
inc
add
clc
scas
icebp
and
fs
xchg
ljmp
or
add
adc
les
mov
aam
rorl
jo
hlt
add
cmp
lahf
pop
sbb
inc
pop
jecxz
cmpsl
or
inc
sarb
cmp
push
andb
movsb
xor
dec
loop
and
or
pop
xlat
xchg
push
loope
xchg
jne
es
and
push
push
sbb
cmpsl
add
mov
mov
and
lahf
mov
imul
insb
hlt
or
cmp
or
cltd
pop
mov
mov
mov
cmpsl
xor
xor
inc
mov
mov
add
mov
push
test
inc
jl
jle
fbld
cmp
je
int
add
xchg
shll
ds
or
add
rol
dec
or
push
pop
add
and
adc
adc
push
in
pusha
dec
add
loope
sbb
jo
lods
add
add
sbb
jmp
ret
xor
ds
in
pop
out
inc
push
pop
ss
andl
push
xlat
jns
cli
inc
imul
cmp
lcall
push
sub
or
arpl
lcall
aaa
dec
dec
das
test
inc
mov
rorb
inc
je
dec
push
fwait
mov
xor
sbb
xlat
sub
adc
out
cmpb
mov
push
loopne
and
adc
rorl
or
jecxz
jo
gs
lods
mov
es
ficompl
adc
and
inc
pusha
scas
frstor
wrmsr
push
push
pop
mov
add
or
dec
addl
add
insb
andb
adc
iret
enter
pop
cld
out
adc
jge
test
add
jp
loopne
shll
dec
adc
sahf
lea
adc
int3
sbbb
push
test
rorb
iret
push
adc
and
add
add
add
xlat
pop
adc
es
movsb
cmpsb
push
ficoml
jle
and
cs
add
add
inc
lret
mov
negl
pop
sbb
sbb
or
nop
push
and
jle
sbb
cmp
inc
lods
out
insb
pop
jmp
loope
adc
push
adc
add
dec
mov
add
pop
fs
xor
iret
stc
inc
cli
push
push
movsb
hlt
inc
push
inc
orl
sub
in
cwtl
insb
and
pop
stc
pop
call
hlt
add
adc
mov
add
arpl
and
clc
jne
jmp
lret
push
or
mov
cs
call
inc
stos
mov
add
xlat
cmpb
clc
mov
push
fwait
inc
adc
test
enter
push
sub
inc
adc
add
fsub
dec
xchg
fcompl
push
cmp
rolb
or
inc
cld
mov
fcompl
inc
dec
pop
daa
decl
and
sub
add
out
sub
add
sbb
push
nop
push
push
outsb
sbb
lahf
orl
and
or
sbb
push
push
xlat
adc
incb
lcall
in
mov
sub
pusha
cmp
adc
sbb
lds
adc
mov
arpl
sbb
mov
add
pop
add
sbb
or
es
cmpsl
negb
ja
push
test
ret
inc
loopne
inc
sub
sub
mov
sub
and
sub
pop
lret
stos
dec
cs
sbb
or
or
push
mov
push
mov
or
cmpsl
push
push
push
push
adc
jecxz
xchg
cmp
pop
inc
and
pop
mov
add
xor
and
inc
or
add
adc
cmp
cmp
push
mov
insb
push
mov
mov
pop
dec
mov
cmpb
add
ja
mov
dec
clc
mulb
mov
pop
or
add
jmp
mov
add
pop
add
fisubrs
idivl
fisttpl
jbe
mov
pop
jo
inc
push
or
add
sub
mov
add
add
add
pop
iret
dec
addl
sbb
add
mov
and
les
cld
outsb
and
jbe
pop
paddq
push
pop
inc
pop
inc
dec
ret
push
pop
cmpsb
dec
pop
add
mov
cmpsl
sbb
adc
inc
pop
call
xchg
outsb
imul
mov
cld
push
xchg
mov
mov
stc
ss
cld
push
jo
clc
maxps
cmp
xor
adc
jns
xor
mov
lret
mov
in
sahf
mov
mov
and
cld
in
std
pop
mov
jmp
cld
pop
test
dec
int3
mov
popa
add
fstpl
sbb
mov
mov
inc
pop
popa
cltd
adc
daa
or
lret
les
int3
dec
add
inc
mov
adc
out
mov
mov
or
mov
movzwl
dec
dec
dec
cmp
je
jbe
dec
dec
dec
dec
js
jp
dec
dec
dec
dec
jl
jle
dec
dec
dec
dec
pusha
popa
bound
dec
dec
dec
fs
dec
dec
dec
push
dec
dec
dec
insb
insl
outsb
outsl
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xor
dec
dec
dec
dec
xor
ss
dec
dec
dec
dec
cmp
cmp
dec
dec
dec
dec
cmp
ds
dec
dec
dec
dec
and
and
daa
push
jno
and
dec
sbb
inc
mov
inc
push
or
mov
add
mulb
outsl
or
mov
push
es
jo
getsec
leave
addb
arpl
dec
sbbl
or
xchg
ds
outsl
outsb
je
imul
cmp
or
mov
popa
sbb
sbb
stc
mov
jae
addb
pusha
seto
add
pop
xchg
mov
jae
je
fidivl
dec
lods
fists
jns
loope
test
mov
inc
add
cltd
enter
je
arpl
adc
mov
jecxz
outsb
gs
xor
gs
cmc
sarl
add
jae
add
cs
into
es
outsb
int
sarb
pop
jo
outsl
sbb
push
inc
pop
idiv
inc
popa
jae
add
sbb
or
sub
jl
or
add
testl
iret
or
bswap
js
inc
idivb
push
push
push
dec
outsl
jo
je
push
andb
sbb
or
out
frstor
nop
and
add
sbb
adc
xor
pop
idivb
aas
mov
loopne
pop
mov
cmp
pop
adc
fdivl
ja
and
inc
jb
fimull
pop
xor
bound
jno
fiaddl
jl
jp
fistps
sbb
je
adc
cs
inc
imul
pop
inc
outsl
jb
jae
es
cmpsb
loope
and
add
jnp
push
and
pop
or
adc
sbb
filds
incl
jbe
push
aad
jmp
inc
lahf
mov
push
or
inc
xor
ja
popa
push
push
test
pop
outsb
mov
add
and
mov
xchg
out
cmpsl
inc
xchg
insl
mov
rolb
out
cmpsb
cmpsl
out
mulb
and
cmp
adcl
pop
cmp
js
lcall
cmp
loopne
fst
add
rolb
aam
pusha
aad
adc
and
dec
les
das
pop
adc
ret
stos
aas
pop
sbb
inc
iret
adc
rclb
add
scas
les
aas
push
push
dec
test
movsb
inc
mov
add
cmp
mov
xor
xchg
cmp
jnp
sbb
xor
add
push
imul
cmp
pusha
addb
movl
and
bound
pop
sbb
ja
outsl
leave
xor
push
add
mov
pop
pop
sbb
lds
repnz
jle
cmpl
add
dec
bnd
imul
inc
inc
add
add
push
xor
nop
loopne
imul
jmp
test
mov
add
push
push
inc
je
dec
and
dec
jae
pop
and
sbb
jo
push
clc
inc
and
movzwl
cmp
add
out
xchg
add
pop
inc
pusha
inc
add
movsl
rorb
enter
inc
add
sahf
mov
adc
cmp
je
inc
add
imul
mov
lock
push
and
push
inc
popa
sbb
sub
lods
pop
sbb
push
movsl
push
and
adc
dec
imul
popa
add
pop
aas
mov
push
or
insl
cld
and
hlt
imul
fmuls
stos
mov
das
fmul
insb
jmp
pop
sbb
fcompl
sbb
push
fsubr
test
lret
es
in
rorl
aad
and
mov
sbb
lock
pusha
mov
adc
and
fdivrs
es
add
daa
pop
lds
sahf
fwait
clc
das
push
sub
mov
in
nop
mov
pop
inc
pop
push
jle
mov
dec
adc
sysret
pop
popa
fstpt
loopne
inc
bound
pop
fidivs
pop
and
ss
aas
pop
push
loopne
rclb
or
popl
and
enter
push
mov
out
pop
push
mov
cmp
fadds
inc
mov
or
xor
daa
cmpsl
xchg
ret
xchg
cmpsl
call
fwait
xchg
clc
xor
cmpsl
or
sbb
sub
insb
scas
sbb
addr16
insb
sub
imul
dec
arpl
addl
push
push
arpl
jmp
and
sbb
mov
jl
pop
int3
xchg
lods
pop
push
les
bound
jns
call
pop
add
push
cmp
movl
cvtpi2ps
add
xor
add
out
mov
das
dec
mov
push
push
add
out
jne
fs
insl
popa
addr16
xchg
mov
andl
sub
insb
cld
mov
inc
lock
push
lods
ret
nop
hlt
mov
push
mov
psubw
jl
inc
lods
jo
cmpsb
dec
jnp
inc
jno
mov
jae
in
in
outsl
lock
shlb
js
call
ds
jnp
xor
inc
mov
dec
mov
repz
cwtl
jge
sbb
or
lods
andl
push
jno
xchg
or
inc
aam
jg
and
je
and
sub
addb
ds
fwait
nop
inc
popa
mov
pop
pop
xor
jg
enter
jo
inc
pop
mov
xchg
sub
insb
xchg
enter
fimull
mov
push
mov
test
lods
in
popf
add
aas
nop
xchg
xchg
cmp
fmull
pop
push
popa
or
mov
mov
sbb
out
rcrb
push
fwait
call
push
dec
arpl
pop
js
xor
push
pop
fsubrl
and
jns
or
outsl
in
cmpsb
fmuls
add
inc
jns
jb
sbb
mov
mov
rcll
xchg
cs
push
cmp
stos
jbe
es
nop
sbb
cmp
ffree
pop
mov
pop
xor
enter
loop
adc
addl
rorl
add
inc
rolb
imul
or
nop
lock
mov
ret
push
push
sub
add
sbb
rorb
ffree
mov
add
sub
call
mov
inc
ss
dec
je
sbb
push
inc
ret
jne
cmp
jbe
mov
das
inc
aam
lock
inc
and
imul
dec
arpl
cmp
adc
and
stos
mov
dec
or
xchg
xchg
add
xchg
decl
xchg
push
xchg
das
pandn
inc
add
pop
stos
jno
add
push
push
xor
out
outsl
das
test
dec
lock
loope
cwtl
sete
mull
dec
push
shrb
cmp
mov
cmc
pusha
mov
and
dec
ss
imull
and
jbe
xchg
jo
nop
mov
pop
push
sub
cs
mov
add
xor
sub
out
aaa
push
add
outsb
and
je
fdivr
xlat
cmp
push
push
repnz
or
imul
cwtl
fs
jmp
adc
inc
push
jle
aad
enter
jae
sub
xchg
addb
pop
sbb
mov
out
adc
or
mov
xor
xchg
sbb
insl
jecxz
fucom
adc
xor
xchg
mov
lock
insl
mov
nop
xor
push
daa
iret
in
lods
or
adc
insl
inc
fdivrl
les
push
jg
mov
or
add
js
in
adc
cmp
cmp
or
sbbl
shlb
and
jmp
nopl
stc
packsswb
jb
outsl
outsb
inc
out
repnz
mov
outsb
pop
dec
insb
imul
das
stc
dec
popa
jbe
add
jb
insb
gs
xor
add
push
gs
insb
pop
andb
push
imul
push
push
cmpsb
xchg
pop
cwtl
iret
pop
gs
insb
outsl
ja
jmp
negb
jne
push
adc
jne
mov
pop
pop
or
jns
push
fadds
add
ja
cmp
inc
dec
stc
adc
data16
push
fdivl
lock
xor
popa
test
dec
pop
pop
jo
push
pop
lock
and
inc
push
addr16
pop
jnp
or
inc
je
inc
push
xchg
int3
mov
aam
cld
insb
add
or
dec
shll
jg
gs
or
insl
das
push
jmp
jno
outsb
daa
pop
xchg
imul
lahf
sbb
sbb
xor
inc
pop
pusha
add
push
notb
shlb
jg
int
nop
mov
loope
fcomip
aaa
adc
insb
andb
aaa
int
in
sbb
or
outsw
inc
push
enter
pop
add
pop
ret
outsb
jne
pop
xchg
fwait
or
or
sbb
sbb
addr16
push
arpl
add
jle
inc
inc
imul
das
xorl
punpcklbw
insb
daa
or
aaa
das
or
add
aas
push
cmp
scas
jmp
ret
push
mov
out
pop
dec
out
pop
test
fisttps
dec
or
inc
xchg
mov
or
fcoms
aas
int3
testl
dec
inc
push
push
inc
push
add
inc
xor
inc
inc
inc
loop
or
jg
notl
dec
inc
dec
dec
arpl
xchg
cmpl
dec
dec
inc
push
dec
dec
push
pop
mov
cmpb
addr16
dec
dec
and
out
inc
inc
xor
dec
enter
movb
and
mov
aas
fiaddl
xchg
inc
push
inc
inc
dec
int
in
mov
push
push
dec
dec
push
dec
dec
mov
push
insl
imul
sbb
mov
nop
jl
inc
dec
push
mov
dec
inc
dec
mov
out
push
dec
pop
test
inc
inc
push
push
push
dec
push
inc
scas
mov
aas
in
inc
dec
push
mov
daa
xchg
test
js
push
mov
mov
jl
shl
add
orl
dec
jl
add
adc
add
mov
lock
orb
sbbb
add
add
repnz
mov
mov
lea
outsl
add
and
fyl2xp1
lea
mov
sub
prefetch
pusha
imul
insl
or
add
and
dec
pusha
xchg
in
sbb
mov
add
sub
push
fs
adc
mov
and
dec
aas
or
pop
xchg
mov
jno
test
es
into
rclb
test
or
jmp
lods
xchg
movsl
ret
and
jl
lcall
es
adc
inc
and
jns
ret
das
idivb
dec
popf
mov
and
xor
clc
subl
cmc
xor
ss
adc
lret
loope
ficoms
xor
or
and
cld
or
mov
arpl
scas
rcll
fcoms
add
push
cli
das
fcoms
inc
lea
adc
das
movsl
mov
pop
leave
mov
jae
xchg
jmp
mov
xchg
pop
push
cmp
jb
mov
pop
mov
sub
xor
adc
int3
sbb
and
mov
fwait
orl
test
pop
in
mov
xchg
enter
inc
cli
je
fldt
jmp
adc
lcall
add
jae
mov
inc
sbb
dec
fs
xlat
lea
incb
mov
push
adc
cmp
subb
inc
push
cmp
test
jo
xor
push
jl
pop
movb
push
fcomp
add
mov
jge
dec
push
mov
jmp
inc
fildl
mov
jae
or
jmp
mov
push
ljmp
xchg
or
or
int
xlat
pop
out
jmp
xchg
add
mov
inc
inc
add
jp
mov
repz
aam
outsl
loop
imul
mov
inc
sub
sub
mov
nop
push
inc
sub
imul
pop
add
jo
iret
adc
pusha
inc
xchg
xor
mov
sbb
insb
xchg
fwait
nop
sub
inc
imul
popf
hlt
mov
xor
neg
cmpsb
imull
jg
inc
push
das
fiadds
ficoml
jp
mov
add
test
andb
dec
imul
mov
or
aaa
adc
inc
sbb
shl
div
sti
xchg
pop
and
leave
add
or
pop
or
pop
sub
lahf
movsb
dec
loopne
inc
sbb
or
loopne
dec
add
cmp
fidivrl
sbb
nop
or
mov
cmp
test
loope
or
je
fwait
or
xorb
push
leave
test
je
jns
rclb
add
das
cmp
in
push
jne
pop
repnz
cs
jne
pushl
test
rcrl
mov
inc
test
inc
jp
mov
adc
and
call
pop
enter
loopne
mov
cmp
mov
sbb
leave
repz
lock
or
mov
sub
xchg
xchg
andl
lret
mov
jb
in
sbbl
mov
push
nop
or
xchg
inc
in
xchg
mov
ret
mov
push
nop
pop
push
lock
push
aas
sub
and
nop
inc
in
inc
fisttpll
movlps
mov
mov
inc
ds
pop
push
xchg
inc
inc
mov
adc
add
mov
lock
lock
xchg
in
push
popa
inc
fistpll
imul
mov
and
adc
fs
mov
clc
dec
jb
push
add
mov
lock
inc
jecxz
jns
add
adc
xor
hlt
dec
lret
call
lock
or
and
movsb
dec
push
aas
push
ret
inc
xorl
mov
xor
jmp
mov
movb
cs
push
inc
nop
add
ss
sub
mov
xchg
lret
daa
xchg
jo
pop
inc
add
or
xchg
lret
adc
dec
and
sbb
xor
inc
sbb
popl
add
lahf
clc
or
sbb
scas
mov
or
sar
aad
and
push
adc
inc
rclb
movsl
andl
sbb
mov
fidivrl
sarl
inc
mov
out
idiv
sbb
push
or
push
add
or
pop
or
or
dec
xor
sbb
xchg
lds
push
push
pushl
pusha
mov
dec
call
jg
pop
xor
sub
cmp
inc
mov
xor
shrl
or
sub
inc
xchg
and
mov
sbbb
sbb
add
jp
js
xor
push
rorl
pop
cmp
push
push
mov
push
in
cwtl
test
andl
iret
jge
push
insl
push
pop
or
pop
mov
or
imul
sbb
lea
clc
dec
imul
inc
push
mov
push
or
cmp
inc
push
pop
xor
insl
and
aam
test
imul
negl
sbb
pusha
lods
pusha
push
mov
ja
adc
ror
dec
movsb
xchg
jp
lea
mov
or
cmpsl
pop
xchg
ret
and
xor
xorl
add
stos
or
fidivrs
cmp
daa
rolb
mov
addb
mov
pop
out
dec
cltd
mov
mov
xchg
les
stos
mov
test
loop
rclb
pop
sub
fmuls
lcall
cmova
pop
adc
push
adc
lds
pushf
push
dec
and
and
std
dec
adc
das
mov
aam
fmuls
dec
pop
sub
popa
inc
xlat
stos
sbbb
movsb
dec
cmpsl
scas
xchg
pushf
mov
sub
adc
popf
add
or
pop
inc
jae
fildll
jl
dec
mov
and
mov
cmp
je
mov
pushf
out
nop
mov
movsl
pop
pop
aad
movsb
lods
add
mov
out
push
mov
push
and
cmpl
clc
sbbl
or
and
orb
jl
adc
adc
ja
jbe
sti
lock
not
and
mov
jg
cmp
je
ret
inc
sub
add
mov
gs
mov
imul
inc
and
jo
mov
pusha
xor
sbb
push
xor
and
sub
or
sub
push
adc
repz
inc
adc
sbb
testl
fcmovu
push
jo
daa
cmp
dec
and
push
movsl
xor
testl
pop
testb
pop
xor
sti
out
mov
add
mov
xchg
jl
mov
add
rcrb
mov
adc
nop
mov
imul
pop
pop
out
in
cmp
dec
inc
cmp
hlt
mov
mov
scas
cmc
dec
inc
fmuls
add
gs
add
inc
push
mov
rolb
sti
or
cli
dec
lods
daa
adc
fstpt
cmp
lea
sub
clc
add
mov
arpl
popa
lock
mov
lcall
popl
mov
in
popa
hlt
push
shlb
int3
jge,pt
mov
int3
js
dec
loope
push
adc
in
decb
push
sbbb
push
xor
adc
cmp
call
bound
jbe
cmc
fwait
insl
imul
in
pusha
jns
outsb
xchg
rcrb
bound
roll
cmp
mov
sbb
in
mov
sahf
lock
jle
fdivl
add
pop
in
in
xlat
fmuls
fimull
push
sti
sub
inc
pop
mov
mov
aas
imulb
mov
add
cs
hlt
adc
add
fcmovu
fisubl
push
mov
pop
shl
mov
testb
divl
shl
and
jle
sarb
pop
sar
mov
mov
pop
xchg
mov
aas
mov
aam
add
mov
loop
sub
pop
sub
test
sub
add
cmp
jo
test
push
stc
push
out
xor
pop
push
mov
stos
test
arpl
push
ret
push
insb
cwtl
stos
and
push
ror
inc
cmp
nop
lret
push
rcll
sbb
add
cmp
sbb
or
mov
push
push
push
jge
ja
sbb
mov
jnp
and
cmpsl
sbb
and
arpl
push
sub
dec
xor
jmp
jns
pop
mov
dec
add
sbb
lock
cmp
ficompl
das
inc
sbb
stos
daa
or
pop
clc
stos
popa
mov
loopne
movb
mov
ja
inc
add
stos
dec
in
gs
out
leave
movsb
mov
pop
call
add
fiadds
cmp
mov
sub
jecxz
add
loope
scas
and
mov
adc
push
mov
mov
or
outsb
and
aaa
add
add
dec
das
xchg
mov
imul
dec
fcomps
adc
aas
dec
push
es
mov
mov
subl
push
mov
pop
pop
push
ss
and
dec
jne
fidivrl
add
cmp
notl
adc
adc
sbb
push
inc
inc
push
dec
and
cmp
sbb
call
in
mov
push
loope
sbb
and
cmp
push
and
mov
enter
xor
jmp
jp
mulb
mov
sub
shl
mov
mov
jmp
fwait
addr16
sti
data16
insb
loop
mov
adc
adc
cld
push
mov
rcrb
out
push
push
incb
mov
jo
or
push
jnp
or
movsb
rdpmc
cmp
push
rorb
fldl
add
ds
ds
mov
inc
movzwl
lea
lock
pop
push
cmp
xor
daa
jmp
add
ss
data16
test
push
cld
icebp
arpl
das
scas
hlt
rolb
sahf
sub
cmp
mov
cwtl
pushf
mov
add
push
and
or
jl
pop
stc
ljmp
cmp
mov
add
rcrl
mov
lea
adc
cld
mov
or
add
pop
pop
mov
xor
push
push
dec
clc
jns
jae
push
xor
cmp
sti
fisttpl
jmp
es
pushf
orb
ret
popa
pop
cwtl
ss
jo
dec
loope
mov
movups
inc
mov
mov
dec
add
sub
and
es
sbb
loope
inc
add
add
inc
inc
ljmp
or
add
in
sbb
mov
call
lods
fnsave
mov
inc
jl
sub
or
push
push
jmp
cmp
test
das
cmpsb
or
mov
pop
xor
jge
orl
shrb
xlat
or
push
push
add
inc
in
pop
movsb
js
movsl
inc
mov
pop
push
push
inc
xor
sub
cmp
add
popa
push
test
es
jl
add
sbb
sub
and
stos
rcr
pop
pop
adc
movl
and
and
xorl
jns
adc
mov
repnz
sbb
cs
push
cmp
lock
adc
nop
mov
mov
add
push
dec
dec
fadd
xchg
jl
sub
fcompl
add
sub
testb
call
lock
mov
dec
cmp
fadd
das
lods
movsl
or
mov
cmp
xor
lods
jg
test
jle
cmp
jl
aaa
pop
iret
sahf
xchg
sarb
enter
test
clc
jle
test
push
dec
out
sbb
or
add
repz
push
pop
jne
inc
in
xor
loop
inc
cmp
mov
sbb
fsubl
adc
arpl
push
pop
cli
in
xchg
sbb
adc
mov
pop
fcomp
rcrb
leave
pop
mov
insl
movsl
xchg
sbb
scas
into
xor
jbe
in
xchg
push
and
push
sbb
popf
les
sub
inc
mov
jp
inc
data16
dec
or
inc
test
in
cmp
ds
ret
sbb
fisubrs
in
sub
loopne
es
cmp
gs
mov
xchg
hlt
movsl
cld
push
mov
inc
dec
jne
enter
cmp
pop
out
inc
and
xor
push
xor
cli
lock
pop
ss
repnz
add
sub
add
adc
mov
adc
test
shlb
mov
adc
jp
inc
xor
mov
enter
jbe
inc
xchg
movsb
or
mov
mov
mov
push
mov
cs
ret
sbb
xor
hlt
mov
sarb
add
push
int3
mov
repnz
push
mov
adc
sarb
mov
push
push
dec
outsl
xor
or
popf
pop
shl
push
and
rorb
add
rolb
aas
mov
and
test
in
pop
pop
push
stos
gs
loop
cmp
adc
push
xor
adc
xor
test
lods
ficomps
xchg
push
call
test
dec
jl
aas
data16
mov
pop
sbb
jb
xor
or
ret
outsb
or
jmp
adc
ds
add
or
jns
jl
cmovs
or
jle
lock
jmp
jge
pop
push
jl
in
and
test
sbb
cmp
insb
and
clc
icebp
dec
data16
or
inc
and
jae
mov
jbe
mov
add
sub
scas
xor
ljmp
mov
loopne
les
mov
orl
in
cld
arpl
adc
pop
or
mov
or
pop
pusha
bound
adc
xor
rclb
sbb
adc
pop
fucomp
push
jl
push
add
loopne
adc
lcall
mov
xor
fucomip
cmpl
pop
ljmp
push
int
mov
or
pop
mov
in
push
ficoml
add
sbb
mov
hlt
pop
clc
pop
enter
hlt
hlt
decl
dec
sbb
cmpsl
add
cli
loopne
jg
dec
jecxz
jl
sub
cmpsl
cmpb
lods
loop
ljmp
cs
pop
out
sbb
lcall
jg
add
flds
out
adc
fimull
pop
xchg
mov
pop
push
push
in
pop
xchg
call
imull
sbb
lcall
adc
in
outsl
sbb
dec
loopne
fsubr
js
mov
loope
imul
adcl
or
mov
add
sbb
rclb
jns
xchg
adc
fidivl
push
xchg
fwait
xor
mov
mov
add
lods
or
lods
data16
ss
cs
mov
mov
lods
cmpsl
mov
add
mov
jle
mov
jbe
js
add
lcall
in
in
cmp
xor
in
pop
fldt
sti
fcoml
clc
call
sarb
sbbl
add
addr16
sbb
sub
pop
or
lods
pop
movb
scas
adc
lahf
icebp
lods
mov
pop
mov
mov
dec
es
sbb
shll
sbb
adc
sub
mov
mov
nop
ret
pop
inc
mov
adc
adc
dec
insb
or
inc
cmpsb
adc
push
push
jne
mov
sahf
adc
and
push
adc
pop
mov
pop
insl
xchg
arpl
je
sub
adc
inc
sub
push
add
dec
dec
add
popa
outsl
clc
dec
pop
push
cltd
fadds
cs
mov
scas
mov
push
add
xchg
in
data16
cmp
or
or
and
cmp
xchg
mov
test
icebp
mov
ret
ja
popa
inc
mov
inc
push
shll
insb
sbb
push
pop
adc
push
adc
xchg
jae
cmp
xchg
pusha
loope
cmpsl
cmp
pop
ret
push
aaa
bound
pop
bound
sub
cmp
rorb
inc
rolb
lcall
outsl
jb
test
movsl
add
in
fidivrs
push
add
dec
ds
ds
pusha
dec
push
xor
inc
adc
ss
out
dec
stos
push
or
inc
sbb
in
ljmp
push
sbb
xchg
fcompl
add
repnz
ds
push
adc
mov
nop
daa
stc
hlt
mov
call
repz
lock
lock
fwait
pop
in
inc
inc
bound
xchg
arpl
rcll
ja
popw
gs
arpl
insl
jo
pop
sar
pop
and
pop
sbb
xorb
xchg
bound
cmpb
inc
dec
jne
adc
add
add
sbbl
icebp
or
movsb
mov
jl
sbb
add
sbb
adc
push
filds
lea
pop
mov
das
loope
pushf
and
mov
xor
mov
or
xchg
xchg
mov
and
test
xor
aad
rorb
push
clc
mov
mov
pop
sbb
cltd
movsl
shrb
add
cld
push
cmpsl
lea
test
add
xchg
add
fisubrs
bound
adc
push
arpl
mov
and
mov
push
call
push
add
cwtl
imul
pop
dec
orl
into
jno
data16
or
and
cmp
js
ds
test
daa
cmpl
seto
daa
mov
popf
and
push
add
dec
or
push
adc
dec
xor
sub
fwait
test
sbb
jmp
cs
sub
xchg
pop
pusha
gs
ds
mov
outsb
fnsave
jg
xlat
pop
jne
das
add
inc
mov
or
pusha
jecxz
fdivr
push
dec
or
adc
int
mov
inc
pop
dec
scas
icebp
out
int3
les
adc
push
push
in
pop
das
sbb
or
sub
test
adc
jno
cvttps2pi
sbb
push
fildl
and
cld
or
mov
push
pop
xchg
lret
testl
popa
enter
nop
cmp
inc
pusha
mov
pop
adc
adc
std
sbb
adc
mov
and
xor
add
gs
xlat
inc
push
aas
aas
jno
arpl
dec
cmp
ffreep
and
cmp
and
arpl
lcall
mov
inc
add
push
jge
rcrl
sbb
xor
sbb
pop
xchg
xor
cmpsl
sbb
push
and
enter
jo
push
mov
jns
jns
cmpl
push
adc
fwait
dec
dec
mov
loopne
xchg
jno
sbb
movsl
test
sub
xchg
push
or
inc
fistpll
push
push
jno
sti
xor
pop
add
add
dec
leave
mov
bound
cmpl
xchg
add
je
xor
pop
or
jecxz
arpl
insb
inc
add
jbe
cmpsl
adcb
aaa
add
cmp
and
int
inc
add
xor
push
mov
je
orl
push
or
mov
sbb
adc
pusha
aaa
icebp
add
add
pop
rcrl
in
shll
fucom
mov
mov
insb
imul
sbb
pop
les
das
div
cli
dec
or
loop
or
jge
fimull
mov
cmp
xchg
mov
sbbb
outsl
jg
dec
push
xchg
scas
pop
sub
push
pshufw
out
imul
cmp
clc
pop
aad
das
bound
inc
jle
and
mov
and
mov
xchg
daa
aaa
jecxz
push
sbb
or
sbb
dec
push
dec
movsb
outsl
test
pop
or
loopne
push
jne
cmpb
outsl
xchg
dec
call
mov
push
fs
test
jmp
push
xor
push
dec
sub
icebp
cmp
inc
sbb
or
and
pop
repnz
and
and
insb
pop
adcl
add
and
mov
adc
test
jle
push
push
in
das
popf
cs
mov
sub
subb
cmp
stos
push
dec
popa
mov
push
cmp
xchg
adc
mull
or
out
sbb
xchg
xor
or
add
loop
xor
and
push
cmp
mov
push
mov
pop
pop
outsb
sti
cmpsl
add
movb
push
and
and
les
push
mov
sub
and
xor
push
mov
sub
inc
sub
int3
inc
sub
mov
sub
sub
inc
sub
pop
mov
mov
inc
pop
es
iret
inc
cmp
and
cmp
loopne
imul
or
fdivl
sbb
add
cmpl
fsubrs
in
or
push
push
mov
orb
loope
and
push
in
fs
mov
push
push
ret
adc
adc
ds
mov
mov
bound
int
push
js
inc
sub
adc
xor
dec
cmp
js
loope
xchg
pop
sbb
or
in
insl
aas
xor
add
std
adc
jnp
test
insl
into
inc
cmpl
ret
add
leave
and
enter
and
pop
mov
or
inc
pusha
icebp
xor
rolb
out
pushf
pminub
rcrl
sub
sbb
addb
sub
add
fs
and
push
out
sbb
fcoms
jns
adc
test
push
or
test
addr16
or
push
dec
imul
arpl
add
sub
divb
incb
jo
ja
xor
xchg
and
dec
add
ss
adc
in
xor
shll
ja
and
xor
sbb
inc
push
nop
out
or
mov
push
aad
cli
insl
xor
gs
sbb
cwtl
fdivrp
mov
aaa
data16
and
lcall
in
les
aad
add
xor
xchg
dec
pop
and
add
push
jo
xor
add
or
ret
push
or
daa
cmp
orl
and
fs
movsl
cltd
test
cmp
cmpl
je
xchg
loopne
pop
add
frstor
push
dec
jl
loop
jne
inc
ja
dec
enter
sub
cltd
out
mov
add
sbb
mov
mov
sbb
mov
adc
adc
dec
sbb
stc
jae
jbe
mov
and
les
or
cmp
and
loopne
pop
or
scas
int
lcall
data16
jle
repnz
subl
sar
hlt
mov
add
ja
mov
out
adc
mov
push
pushf
fsub
and
mov
mov
lret
sbb
popf
andb
push
push
in
ret
out
cmpl
aad
insb
into
or
push
mov
lea
dec
loop
mov
lea
dec
mov
lods
pop
fistl
mov
adc
cmpsl
cld
add
push
xchg
xchg
test
std
out
enter
xchg
dec
lock
push
and
sub
sti
fwait
dec
or
jge
mov
xorb
lcall
je
add
push
aaa
sbb
lock
push
sti
mov
stc
cmp
and
imul
add
je
cmpb
jl
arpl
imul
insb
dec
xchg
adcl
push
add
jp
cmp
mov
xchg
stc
or
lahf
aam
ss
add
or
fmull
mov
jp
inc
iret
imul
and
jbe
jb
addb
push
pop
sbb
xor
xor
or
fisubl
jmp
pop
push
adc
push
add
pop
divl
push
push
mov
pop
das
rcrb
lds
in
loope
sbb
and
or
push
push
sbb
inc
movsb
or
jg
nop
and
fistps
pop
and
push
test
mov
jmp
sbbl
push
dec
fs
clc
sub
push
mov
gs
inc
pop
orb
mov
loop
jmp
or
cmp
xor
aad
jmp
bound
jle
dec
cmp
jo
sbb
jecxz
dec
xchg
push
int
pop
jae
adc
sbb
pop
or
sbb
shlb
xchg
sbb
and
popf
clc
les
mov
lods
mov
and
addb
std
push
ret
pop
jo
jmp
aam
cmpb
imul
or
inc
lock
pop
mov
insl
adc
pop
cltd
jmp
xchg
inc
adc
or
mov
in
sub
sub
push
mov
shrl
or
xchg
stc
scas
test
xchg
rol
pop
addl
push
cmp
push
je
shlb
push
loop
inc
ret
pop
subl
or
jmp
pop
pop
loopne
push
mov
and
call
fisubs
add
repnz
mov
or
pop
or
in
push
or
cmp
ss
scas
sbb
or
jb
cmp
je
aas
xchg
pop
in
icebp
shll
pushf
mov
cmp
in
call
jge
sub
sbb
or
lods
adc
mov
ror
inc
push
repnz
les
movl
fiaddl
push
call
call
js
add
popl
and
and
xchg
or
out
pop
in
shlb
push
pop
inc
insb
addb
mov
cmp
mov
pop
sub
add
or
pop
xchg
arpl
mov
push
das
lods
enter
dec
je
and
pop
pusha
dec
in
les
cmp
outsb
dec
xlat
xor
xor
jmp
xor
pushf
mov
mov
movsl
test
mov
or
lods
sbb
or
in
in
or
jne
imul
test
sub
pop
pop
add
pop
les
rcrb
shr
loopne
add
sub
mov
movsl
cmp
ljmp
pop
sti
cld
shlb
cltd
stos
mov
adc
lods
mov
add
sub
jne
xor
pop
insl
subb
test
testb
pushl
lock
xchg
fwait
pop
sub
shll
push
xor
xchg
inc
pop
ror
test
and
jge
pop
dec
stc
add
and
mov
sbb
dec
xorl
push
out
movsl
and
pop
shl
mov
adc
mov
lock
pop
mov
mov
aad
clc
push
lods
xchg
cmp
xorb
fs
paddb
add
jne
loopne
inc
sub
bound
inc
imul
adc
adc
inc
cmc
es
adc
xor
adcb
cmp
int
enter
mov
or
orb
xor
es
std
adc
cmp
and
sti
mov
sub
or
or
adc
mov
lcall
add
jp
leave
or
mov
and
cs
add
outsb
test
adc
cmp
test
xchg
adc
dec
inc
xlat
je
icebp
add
not
add
inc
pop
mov
and
adc
jb
shll
inc
loopne
xchg
fbld
sbb
and
add
xchg
xchg
incl
decl
pop
imul
int
je
adc
repz
sbb
sbb
jne
sub
or
addr16
dec
adc
add
movsl
dec
nop
sbb
js
push
push
adc
or
sbb
jl
lret
xor
push
jno
mov
jne
jecxz
mov
sub
outsb
inc
sub
push
or
inc
adc
add
scas
mov
cmp
mov
push
divb
push
insb
pop
bound
fbld
mov
and
inc
faddl
push
xchg
out
movl
xchg
inc
add
sub
and
dec
faddp
fcomps
call
dec
mov
out
push
fmull
fwait
sbb
adc
cmp
cs
insl
push
and
lods
ss
fldt
or
int3
sub
xchg
mov
fsubrl
push
pop
daa
ret
lcall
jbe
scas
xchg
test
repnz
pop
cmpsl
hlt
cmp
pusha
stos
add
in
nop
add
xor
xchg
and
mov
clc
inc
cmp
and
loopne
xor
insl
lcall
mov
fisttpll
adc
adc
loopne
pop
daa
sub
push
adc
push
sbb
inc
mov
ret
shrb
jne
ret
or
out
xor
pop
inc
push
mov
test
daa
clc
mov
xorb
jbe
mov
test
or
nop
sub
pop
je
dec
incl
mov
test
push
push
xchg
stos
and
test
sbb
mov
pop
mov
sbb
or
xor
mov
stos
xchg
pop
out
mov
inc
xor
fimull
and
in
sbb
add
add
mov
cwtl
jno
pop
fwait
mov
inc
in
push
xor
mov
pusha
pop
adc
mov
shlb
add
in
and
cmp
mov
mov
popf
repnz
mov
and
inc
dec
mov
fadds
push
ret
adc
std
loopne
xor
and
stc
push
adc
orl
andb
or
call
push
inc
mov
mov
or
lret
cmp
xchg
xor
sub
push
jecxz
imul
in
loope
or
mov
xor
lock
cmpsl
test
pop
jge
in
fwait
add
jg
call
add
into
and
inc
dec
lock
iret
daa
push
lcall
jb
nop
xchg
xor
push
scas
insb
mov
pop
inc
dec
xor
cs
gs
scas
add
aam
or
lret
dec
mov
sbb
test
nop
dec
fildl
dec
mov
cmpsl
ret
arpl
adc
iret
loopne
push
test
dec
jle
jge
loopne
ds
dec
ljmp
sub
mov
xchg
lods
xchg
nop
jl
leave
hlt
mov
mov
or
cmp
inc
out
add
loope
inc
cmp
hlt
or
sub
add
push
sysenter
sbb
push
or
push
and
dec
lock
sub
push
fwait
mov
lock
cmpsb
lock
insb
inc
lods
imul
xchg
sub
xchg
imul
js
cmp
shlb
popa
popa
ret
or
rorl
lret
lea
xchg
test
inc
mov
addb
cli
in
pop
je
sub
cmp
rolb
mov
insb
popl
jge
sub
dec
xchg
dec
add
test
adc
mov
xor
mov
mov
xchg
or
or
data16
scas
icebp
or
jg
xchg
sub
xchg
push
and
xor
cmp
test
dec
or
or
mov
sbb
das
mov
imul
or
cmp
sbb
mov
enter
xchg
push
mov
xchg
pop
rcll
imul
out
pop
lea
hlt
cmp
mov
clc
mov
pop
jp
sbb
dec
sbb
or
sub
jo
ss
pop
pop
lock
test
jecxz
clc
xor
cld
cld
lods
fwait
shlb
push
mov
adcb
push
or
insl
mov
movb
leave
push
lahf
xor
int3
orl
add
loop
mov
pop
push
or
mov
xor
jo
das
repz
lret
loopne
adcb
test
mov
popa
fwait
cld
pop
push
xchg
ret
ret
lods
add
inc
in
adc
movsb
adc
and
sbb
mov
pusha
sbb
mov
lea
jg
shlb
push
dec
sub
scas
rol
jno
add
cmp
lds
add
pop
cmp
test
dec
pop
or
sbb
push
or
xchg
adc
xor
arpl
add
fisubrs
pop
gs
nop
sbb
pop
nop
add
inc
shll
ret
imul
dec
add
xor
pop
popa
aam
pop
dec
inc
or
inc
leave
push
mov
xlat
nop
icebp
xchg
out
pop
and
inc
ds
test
inc
pusha
or
fcmovu
out
mov
orl
xchg
mov
mov
sbb
adc
das
adc
mov
loope
xchg
pop
adc
sub
clc
out
mov
pop
stos
movsb
push
out
lock
add
ljmp
jno
mov
popa
xorb
add
jle
adc
push
sbb
and
pop
bsf
push
sbb
push
sub
mov
ds
sub
mov
insb
add
jnp
add
lods
adc
lret
lock
jle
mov
sub
mov
add
sub
movl
sbb
xlat
inc
cmp
lock
mov
xor
or
adc
pop
sbb
mov
movsb
xchg
sub
cmp
and
cmp
in
cmp
das
jmp
mov
dec
imul
pop
jbe
stos
rcrl
adc
inc
cmp
jne
in
mov
rcrl
ja
stos
or
and
cli
pop
pop
xor
adc
sbb
ret
adc
insb
xchg
or
loop
jb
gs
xor
adc
call
sbb
or
sbb
inc
es
add
int3
pop
test
or
fisubs
adc
data16
add
test
ja
jae
repnz
lret
loope
out
sub
inc
pop
stos
add
cmpsl
inc
pop
xchg
pop
aaa
iret
jne
xchg
icebp
adc
dec
sarb
push
notl
xchg
hlt
mov
popa
cltd
fnstcw
xchg
dec
sahf
mov
ficomps
into
addb
mov
mov
icebp
dec
fidivl
dec
lret
or
xor
fimull
or
adcl
js
push
dec
jl
xor
divb
mov
add
xor
jp
mov
mov
sub
mov
jge
adc
adc
mov
cmp
push
lea
sub
out
ss
inc
sub
adc
xor
pushf
pop
mov
daa
push
push
leave
adc
inc
push
shlb
push
js
sub
ljmp
cmp
ljmp
aam
cs
cltd
adc
movb
test
cmp
je
jl
xor
fistl
lods
or
fnstenv
cmpsb
or
sbb
pop
jbe
inc
into
xchg
sub
mov
inc
jo
dec
push
pop
jmp
and
sub
xchg
test
psrlw
stc
inc
ret
rcr
mov
sub
lea
lods
adc
push
dec
dec
or
es
lea
frstor
push
jl
adc
push
sub
dec
or
adc
lea
daa
insb
mov
clc
ja
xchg
cwtl
in
fs
xchg
pop
sbb
cmp
in
xchg
mov
sub
add
je
sub
mov
jp
aad
push
push
lds
dec
ja
or
mov
nop
xchg
insl
loopne
dec
fcoms
push
ffreep
filds
jne
arpl
dec
or
add
loop
fwait
sbb
shll
or
xor
adc
subl
jmp
sbb
cmpsl
mov
outsb
or
inc
sbb
cmp
shlb
ret
out
or
pop
or
mov
push
call
mov
xchg
add
rcrb
movsl
enter
or
jl
push
push
jle
add
and
lret
scas
sbb
pop
sbb
push
fsubl
sub
mov
fs
fstl
shll
adc
add
div
fisubl
adc
sti
and
popa
dec
or
mov
add
iret
ret
inc
in
or
subl
jne
ss
mov
into
ljmp
add
push
in
icebp
dec
loope
mov
inc
add
sub
or
loop
inc
jno
add
and
mov
xchg
or
js
hlt
fsubs
sub
sbb
je
dec
xchg
xor
lock
in
insb
and
inc
jbe
jmp
mov
aam
jmp
cmova
insl
loop
fildll
or
fsubr
loope
push
enter
scas
fwait
mov
into
pop
lods
adc
movsb
fisttpl
sub
aam
fwait
iret
pop
sub
jbe
mov
xchg
inc
push
xor
fwait
hlt
mov
jb
aam
fwait
int3
std
shll
movsb
and
pop
sbb
cmc
push
push
and
leave
ret
mov
xchg
cli
add
pop
push
cwtl
xchg
in
mov
movsl
pusha
aam
loope
leave
and
sar
cs
add
lcall
add
adc
loopne
pusha
inc
in
xchg
mov
pushf
leave
inc
xchg
cmp
sbb
pushf
ja
sub
in
out
or
insb
rcll
pop
jbe
adc
adc
dec
and
push
adc
fs
mov
push
push
and
jnp
sbb
adc
and
and
and
add
add
push
call
mov
in
mov
push
fcomps
fcmovnb
ret
dec
movl
frstor
mov
push
or
inc
scas
test
lds
and
and
mov
and
push
xchg
out
cmpsl
xorb
sub
jle
test
push
inc
dec
stc
int
pop
mov
out
and
mov
jle
call
inc
add
sbb
dec
test
or
dec
xchg
pop
test
dec
sahf
dec
cli
mov
imul
pop
cld
add
mov
inc
lods
xchg
mov
add
push
test
sbb
rol
or
fs
pusha
push
jo
mov
push
stc
sub
fadd
or
add
int3
xchg
loop
push
cwtl
mov
outsl
adc
push
push
sbb
push
jo
push
mov
xchg
ds
fstp
mov
lea
je
adc
nop
fmul
ror
or
dec
and
nop
lea
or
xchg
add
test
jmp
sbb
add
mov
fsubrp
push
jecxz
and
inc
mov
adc
fidivrl
insb
icebp
and
js
and
or
mov
push
and
das
call
or
movsl
jg
orl
xor
or
add
cmp
xorb
shl
add
dec
ja
and
adc
call
sub
mov
lahf
mov
js
jmp
in
pop
mov
cli
test
and
or
jge
and
inc
maxps
iret
lret
xchg
sbb
mov
iret
push
mov
sbb
add
dec
sbb
adc
in
movb
rcll
sbb
sbb
insl
loope
mov
xor
popf
adc
leave
pop
aaa
or
mov
cmpsl
and
es
lds
rorb
loopne
push
jp
out
mov
movsb
add
imul
push
jne
inc
jl
outsb
sub
mov
push
push
inc
sbb
dec
xchg
jno
jge
mov
and
mov
ja
scas
lret
test
add
int3
rcll
add
shrb
imul
push
ss
sub
or
or
sub
inc
pop
clc
out
pop
push
mov
or
ss
inc
arpl
cmp
cmpl
or
adc
sub
gs
loope
sub
pop
test
pop
pusha
ss
adc
cmp
cwtl
add
rcll
sbb
movl
inc
sbb
je
sub
rolb
sarb
or
dec
jbe
xor
push
push
dec
inc
and
dec
out
or
pop
inc
dec
pop
pop
cmpsl
push
loope
jle
test
stc
push
push
mov
push
xor
movsb
sbb
inc
add
pop
jns
cmp
sbb
pop
cs
test
sub
cmp
adcb
mov
movsl
rcrl
adc
mov
clc
or
je
mov
sub
psrad
mov
adc
or
cmp
jo
ja
out
cltd
and
inc
fcomps
shl
sub
inc
mov
jecxz
or
or
add
push
cmp
inc
mov
cs
movsl
imul
push
pusha
nop
loope
sbb
xchg
je
inc
and
cmp
ljmp
xor
pop
adc
pop
dec
push
add
inc
and
enter
push
test
nop
xor
call
xchg
lea
or
xor
sti
sub
inc
mov
xchg
jmp
sti
mov
inc
or
pop
cmp
or
aam
cmp
pop
add
xchg
in
icebp
inc
jns
pop
add
dec
jge
xor
mov
cmp
cmc
mov
inc
adc
adc
push
stos
daa
adc
es
or
sub
xor
xor
cmc
pop
sbb
jne
cmp
test
icebp
push
dec
add
rorb
mov
and
mov
clc
jnp
ds
inc
fsub
cmpsb
jle
aaa
mov
lods
pop
pop
ds
testl
xchg
or
call
test
imul
pop
push
cmp
aam
idivb
imulb
mov
gs
cmp
pop
sbb
and
xchg
xchg
adc
cmp
pop
inc
data16
xor
push
push
cld
loope
and
pop
lret
pmullw
enter
mov
ret
imul
testl
outsl
push
test
aaa
push
iret
in
lods
lcall
xchg
shlb
or
shlb
pop
mov
jns
inc
mov
ret
mov
sub
xlat
cmp
aaa
sub
cmpsb
shrl
out
lds
mov
or
imul
fldcw
pop
push
cmpsl
rclb
icebp
mov
add
sub
mov
push
pop
enter
test
daa
mov
stc
cs
adc
and
xchg
add
sub
cmp
das
jecxz
scas
push
push
xchg
push
into
pusha
jmp
clc
pop
mov
or
push
loope
xorb
and
sub
inc
jnp
mov
sbb
mov
ja
insb
andb
adcl
cli
addb
stos
iret
dec
xor
iret
mov
dec
mov
cmpsb
xor
nop
xor
test
nop
jo
or
test
pop
test
enter
test
cmp
jne
push
mov
sub
and
mov
ror
and
pop
mov
pushf
xchg
mov
mov
pop
rcrl
test
dec
jmp
lock
adc
push
cwtl
sub
add
and
add
ja
add
fdivrs
mov
sub
clc
dec
ja
pop
testl
repz
cmp
and
rclb
adc
dec
push
fcmovnbe
and
pop
dec
or
inc
ds
dec
or
inc
cmp
sub
sub
or
jne
push
cmp
movq
sbb
push
jp
push
pop
femms
jecxz
push
outsb
hlt
jecxz
ret
xor
nop
or
ljmp
fimuls
mov
call
adc
push
in
mov
sbb
xor
and
mov
jmp
out
adc
cmpsb
or
imul
nop
inc
call
pop
fisubl
adc
cmp
push
divb
add
call
or
xchg
sub
cwtl
inc
rolb
fisubrs
sub
pusha
and
lret
sbb
into
in
rcrl
out
fwait
sbb
jo
push
and
mov
fldcw
pop
mov
push
subl
jns
fisttpll
fwait
cwtl
mov
mov
sub
movsb
sbb
sub
loopne
das
fistps
in
or
fwait
mov
add
sahf
and
jbe
lods
mov
hlt
or
out
xor
es
aaa
mov
cltd
add
xor
cmp
jg
pushf
fld
rorb
jl
dec
mov
in
xchg
push
mov
cmc
push
ficoml
add
test
jl
mov
or
adc
adc
mov
and
cmpb
or
mov
xchg
cmp
fs
jl
in
in
mov
mov
aam
inc
adcb
pop
pop
xor
outsl
lods
adc
out
sub
push
das
adc
rclb
or
cli
lret
movsl
push
mov
subb
inc
lahf
and
inc
insb
mov
adc
add
xchg
mov
cmpsb
push
popa
mov
adcb
mov
lock
or
add
mov
iret
jmp
or
inc
xchg
jbe
mov
enter
add
xchg
test
hlt
in
push
jmp
sbb
in
in
adc
dec
mov
mov
add
inc
sahf
fmull
add
aaa
clc
hlt
dec
dec
dec
dec
lock
call
dec
loopne
fcom
dec
cs
dec
shl
stc
lret
nop
sbb
clc
add
daa
fcoms
pop
ds
mov
lods
pop
imul
cmpb
add
sbb
and
je
push
xor
pop
lahf
fstps
loopew
or
mov
push
or
adc
add
sbbb
cld
mov
jmp
mov
pop
movb
adc
jno
mov
and
pxor
push
ret
je
jb
push
add
roll
and
mov
pop
add
push
jmp
js
or
adc
add
push
pop
dec
adc
adc
jmp
cmp
mov
or
sbb
pushw
push
arpl
xchg
pop
daa
and
adc
push
jnp
sub
jb
cmp
faddl
jge
sbb
and
mov
mov
aaa
call
cmp
mov
in
xchg
and
or
incb
push
push
popa
cmp
jle
push
pop
lcall
mov
or
das
sub
test
ficoms
aam
pop
and
mov
and
pop
cmp
lcall
sbb
popf
pop
push
popa
ficomps
or
sbb
push
xchg
fcoml
nop
movsl
js
and
adc
adc
daa
xor
lock
movsl
loope
test
cmpl
xor
es
and
lock
mov
jl
inc
or
test
das
adc
repnz
stos
pop
test
sub
mov
dec
xor
in
and
call
jne
xor
cmpl
jb
or
xor
dec
jge
sub
insl
adc
push
inc
sbb
aas
adc
jle
lea
fcomps
decb
and
jb
push
push
push
call
pop
in
inc
shll
push
cmpsb
sbb
decb
push
dec
inc
pop
cmpsl
sub
adc
pushf
adc
push
enter
inc
sub
xchg
daa
mov
enter
adc
mov
push
aam
jne
lret
cmpsb
sub
mov
adcl
sub
push
push
js
mov
push
inc
pusha
and
mov
inc
jne
inc
inc
andb
push
and
loopne
sbb
lock
out
mov
fmuls
and
loopne
sbb
loop
and
push
ss
sub
pop
jne
add
ss
jmp
ds
add
adc
loop
mov
push
push
shrb
adc
inc
outsb
jne
mov
insb
popa
jns
jae
push
aas
lock
movl
add
or
add
mov
mov
movsb
or
cmp
adc
mov
fwait
insb
loopne
mov
push
push
inc
push
jp
dec
cmp
dec
mov
jns
sbb
push
mov
xchg
cmpb
push
mov
in
mov
enter
test
prefetchw
aas
inc
cmp
std
outsl
sti
pop
jnp
test
xchg
cld
mov
pop
rcll
mov
cmp
inc
mov
mov
popf
or
fidivrl
cmp
adc
fistps
sub
push
imul
jb
inc
or
dec
adc
dec
mov
mov
mov
adc
popa
and
je
movsl
repnz
add
hlt
or
xorl
add
xor
push
cmpl
mov
fsub
sbb
xchg
push
ljmp
mov
pop
and
in
or
enter
orb
lcall
ds
fwait
sbb
jmp
mov
and
inc
into
movzwl
cmpb
fsub
repz
ds
push
sub
std
mov
add
ja
jns
out
cmp
push
pop
sbb
inc
aam
ja
jae,pn
inc
sub
aaa
fdivrl
dec
mov
loope
out
add
xor
lret
inc
dec
or
dec
int3
or
adc
sbb
fsts
mov
es
sub
pop
xchg
jg
shrb
das
add
cmp
mov
and
mov
jmp
dec
push
les
jecxz
nop
fiaddl
je
mov
loope
frstor
xchg
inc
lock
pop
ja
sbb
mov
insb
or
test
andb
pop
cmp
sbb
pusha
adc
loope
mov
mov
test
and
lea
pop
mov
push
pop
inc
cmp
popa
nop
iret
pop
hlt
sbb
xor
mov
ja
hlt
test
fsubl
add
or
add
rorb
and
imul
jp
xchg
or
or
sbb
lds
rcll
ret
sbb
jno
jno
sub
rorl
add
jne
mov
adc
popa
cmp
dec
jle
int3
push
into
popa
jg
pop
and
adc
xchg
test
arpl
adc
test
sub
add
dec
lock
lock
ficoml
out
add
or
mov
add
rclb
push
xor
rolb
mov
or
pop
or
mov
int3
mov
pop
movsb
and
sub
mov
or
mov
cmp
hlt
jne
fcompp
aaa
dec
sbb
cs
orb
pop
mov
or
ss
in
daa
sbb
sub
les
add
je
and
out
xorb
sub
inc
xchg
add
jo
fwait
nop
xchg
xor
pop
inc
sbb
jge
inc
cmc
and
out
inc
inc
sbb
jle
dec
jne
mov
sbb
dec
data16
loope
cwtl
sub
inc
lds
rcrb
cmp
jge
lock
cmp
mov
adc
ret
dec
xor
push
rorb
shrb
shlb
loopne
fyl2xp1
inc
shlb
or
or
mov
and
fldcw
data16
mov
into
daa
xor
jmp
in
inc
inc
inc
add
pop
fsubl
cwtl
add
aas
outsl
push
sub
dec
lods
or
js
lcall
sbb
push
mov
dec
add
add
in
pop
insl
jle
push
adc
das
adc
and
xchg
xchg
ds
ja
cltd
push
fsubrl
cmp
outsl
dec
sub
dec
in
jno
out
js
fadd
cmp
loope
xor
test
lds
fwait
pop
inc
dec
lea
cmp
and
icebp
fisubl
loopne
jmp
inc
jmp
ja
jns
mov
sti
xor
orl
nop
sbb
nop
movl
and
ret
rorl
and
mov
sbb
mov
push
xor
inc
test
xor
popa
jle
adc
call
in
lock
xlat
inc
inc
dec
mov
sbb
inc
call
call
sub
cld
loopne
push
enter
sub
je
nop
lcall
xlat
adc
mov
jbe
fldenv
pop
leave
icebp
or
shll
mov
pop
in
repnz
in
pop
clc
xchg
jo
mov
addps
xor
sbb
leave
test
xor
punpckhwd
push
stos
leavew
lock
fs
clc
adcb
xor
popa
push
iret
icebp
push
adc
inc
xor
and
add
stc
test
add
fdivs
pusha
clc
movsl
jno
loope
sub
into
cld
mov
or
dec
je
or
sbb
xchg
loopne
ds
jmp
adc
jmp
push
movb
mov
mov
and
test
sbb
and
test
aas
cld
sbb
add
std
inc
jns,pn
cmp
jne
sbb
or
push
adc
and
xor
adc
movsb
and
xchg
pop
mov
cmpl
test
js
push
sub
adc
xchg
jne
sbb
xor
je
xchg
movsl
das
jns
repz
pop
mov
jmp
or
lret
cmp
sub
scas
dec
inc
or
sbb
inc
test
sbb
arpl
loopne
in
adc
sub
rclb
push
dec
cli
leave
pop
leave
jo
push
adcb
fldt
es
and
dec
fisubrl
and
cmp
xchg
lret
insb
push
cmp
mov
insb
outsl
pushf
inc
inc
adcb
jae
cwtl
jns
jb
dec
mov
dec
lret
push
mov
movsb
or
and
and
push
test
and
lock
add
or
pop
or
and
int3
sbb
xchg
lahf
and
insl
arpl
or
mov
data16
insb
xor
lods
jle
inc
daa
push
sub
xchg
xchg
pop
lods
iret
jb
inc
dec
pop
push
das
push
loop
loop
inc
outsb
adc
mov
outsl
ja
xchg
mov
fidivrl
push
jnp
or
pop
outsl
jae
push
jg
push
push
inc
iret
or
and
lcall
lods
jl
and
iret
inc
mov
push
push
push
push
xchg
nop
cwtl
push
or
pusha
loop
sti
nop
adc
sbb
mov
pusha
iret
je
movsb
push
mov
sub
call
push
inc
jb
dec
push
les
push
arpl
push
dec
shlb
sbb
xchg
sub
pop
call
lods
mov
cltd
add
jns
and
pop
pop
push
icebp
rolb
inc
es
sarb
in
inc
sub
inc
sub
mov
enter
xor
decl
stc
fisubrs
adc
sbb
or
addl
or
enter
sub
enter
xchg
cwtl
enter
pushf
mov
enter
mov
enter
mov
enter
rcl
fmul
enter
loopne
call
in
lock
clc
enter
cld
add
add
enter
or
adc
enter
sbb
and
push
lret
enter
xor
push
sub
sub
xor
mov
mov
out
ja
adc
cmp
add
adc
loopne
and
xchg
lds
je
jl
and
addb
fmuls
clc
xchg
or
movsb
xor
xchg
cwtl
and
mov
sbb
dec
gs
sub
test
aam
movsb
xor
mov
adcb
fcoms
jb
adc
and
nop
lret
cmp
inc
sub
push
dec
fcomps
or
fsubrl
js
and
adcb
in
mov
sbb
loopne
inc
sub
clc
lock
add
mov
sub
add
gs
sub
xor
add
push
push
movsb
xor
adc
sbb
sbb
sub
push
sbb
mov
enter
inc
sub
sub
xchg
add
repnz
jmp
pushl
mov
les
push
dec
rcrb
fcmove
sub
outsl
jae
and
sbb
mov
or
mov
cwtl
adc
add
scas
or
popa
jb
add
fistl
test
test
sbb
je
jne
adc
mov
addr16
xchg
mov
jae
addr16
fs
das
scas
pop
dec
arpl
jae
test
xor
fs
lea
or
jbe
or
jns
jp
jae
sbb
int
les
mov
pop
lahf
pop
xor
pop
and
push
inc
loop
sub
testb
imul
pop
mov
pop
dec
xor
dec
pop
adc
pop
iret
popf
loopne
add
dec
xor
in
pop
or
iret
mov
add
outsb
popa
and
and
nop
cwtl
mov
aad
mov
mov
fstpl
in
pop
push
xchg
mov
jl
mov
ja
and
jo
jg
jae
mov
addr16
jne
insl
outsb
sub
das
pop
fs
ss
sbb
inc
imul
popf
pusha
fs
mov
jno
arpl
inc
popa
loope
push
xchg
cmp
and
pop
outsl
pop
cmp
sbb
adc
adc
sbb
or
mov
inc
hlt
cwtl
fidivrl
inc
imul
ds
mov
jg
daa
daa
inc
sbb
subl
cmpsb
add
sbb
jnp
xchg
in
push
movsb
xchg
dec
sub
in
fcmove
mov
mov
outsl
dec
push
fs
push
and
dec
push
and
nop
dec
push
pop
inc
sbb
inc
mov
lds
xchg
add
in
add
pop
add
adc
xor
leave
fisttpl
popl
jbe
add
pusha
dec
pusha
pushl
and
push
jge
test
inc
fs
mov
push
push
push
pop
mov
push
push
je
jp
adc
inc
and
adc
jl
outsl
loop
out
xor
pop
fildll
push
test
ja
cmpsb
mov
inc
xchg
add
add
jmp
push
xchg
pavgb
mov
push
or
sbb
push
icebp
xchg
sub
aaa
and
popf
push
push
xor
clc
cmpsb
xchg
xor
incl
fxch
push
movsl
lret
add
inc
push
pop
cmp
cmp
mov
or
cmp
adc
repnz
cmpb
test
add
lds
and
sarl
inc
xor
push
push
adc
mov
mov
cli
push
xor
out
or
dec
push
divl
adc
xchg
fsubrp
cmp
js
rclb
aam
arpl
xchg
push
add
sub
enter
cmp
add
push
push
add
ret
sbb
mov
mov
andl
pop
pop
pop
cmp
xor
mov
scas
mov
mov
pop
popa
in
inc
insb
pop
sbb
or
add
test
out
out
add
add
gs
push
aas
mov
mov
outsw
test
mov
mov
out
and
cmpsb
in
push
and
test
pop
and
test
mov
fnstcw
cmp
mov
adcb
loopne
insb
adc
lea
jae
mov
pop
mov
bound
fbstp
inc
cmp
pop
or
and
daa
push
push
push
popf
or
pop
pop
rclb
add
and
dec
outsl
add
inc
xchg
add
les
bound
inc
bound
je
push
loope
inc
xor
negb
outsb
outsl
pop
cvtdq2ps
movl
add
and
inc
dec
jmp
push
call
mov
push
clc
sbb
push
sbb
test
sub
movb
jns
stos
js
sub
jg
mov
shlb
add
inc
lret
and
pop
in
std
test
insl
fs
addr16
push
cmp
add
lret
sub
push
adc
arpl
and
adc
mov
adc
es
dec
aas
or
nop
cs
iret
enter
mov
iret
leave
cmp
cmp
repnz
sahf
xchg
adc
xchg
xchg
lret
test
inc
sbb
repnz
sahf
jo
insb
push
loopne
jbe
pushf
add
insb
cmpsb
adc
push
icebp
sub
or
rcll
xor
pop
add
or
loop
insb
cmpsl
xor
cmpsl
dec
xor
inc
mov
xor
push
adc
sbb
sub
pop
pushf
repnz
xor
gs
insb
icebp
pop
push
fbstp
or
dec
outsl
ja
cmpsl
insb
or
push
popa
imul
add
jae
mov
push
pop
mov
je
add
or
xchg
cld
dec
xor
pop
aaa
and
je
sbb
test
adc
xchg
cmp
shrb
jb
sub
das
jle
lds
enter
dec
xchg
inc
aas
enter
sbb
inc
test
inc
add
in
jnp
mov
push
lock
ret
ret
aas
in
lret
inc
das
enter
pop
imul
test
push
fimuls
mov
sti
xor
in
jle
push
sbb
nop
rclb
fdivp
xchg
lret
or
int
fmul
iret
jnp
push
into
jle
icebp
rorb
dec
rcrl
sub
hlt
sbb
test
sahf
sub
xchg
adc
add
outsb
popa
stos
pop
sarb
add
pop
push
add
insl
and
hlt
push
aas
test
push
inc
rorb
in
popf
jle
inc
je
fdiv
orb
inc
push
in
inc
xchg
jae
lcall
xchg
femms
add
jb
push
idivl
push
iret
imul
cmpsl
sti
xor
mov
cltd
dec
xor
sahf
push
sbb
fstl
stos
test
iret
xor
push
jnp
das
test
and
mov
add
push
push
imul
nop
dec
out
mov
jne
jp
js
addb
outsl
cmc
and
mull
mull
sub
mov
in
xchg
pop
neg
xor
nop
testl
loop
clc
add
test
sti
pop
xchg
cmp
push
addr16
inc
xor
mov
ret
sbb
mov
cmp
aaa
xchg
sbb
pop
out
loopne
jge
in
xlat
fs
sub
ss
push
and
pop
call
dec
adc
cmp
inc
es
pop
repnz
inc
loopne
clc
std
hlt
insl
mov
cmp
dec
lcall
inc
inc
pop
int3
ss
shrl
xor
adc
mov
pop
xor
adc
push
fsubrs
outsb
push
mov
fisubrl
push
stc
push
pop
lcall
push
and
sub
or
cmp
xor
inc
js
jl
xchg
incl
movsb
sti
xor
mov
mov
mov
mov
mov
lret
cli
push
push
sub
add
iret
insb
adc
push
into
or
push
push
sub
outsb
and
sbbl
lret
push
ret
nop
fwait
or
lahf
fcomp
rolb
push
stc
imul
imulb
adc
inc
pop
dec
subl
imul
xchg
sub
xor
push
inc
iret
aaa
and
inc
cwtl
cmp
add
std
adc
cmp
add
or
and
or
pop
or
adc
lret
push
in
mov
jne
lods
mov
jo
add
sub
mov
dec
xchg
push
outsb
dec
adc
dec
lcall
jne
pushf
xchg
adc
jns
jns
add
sbb
xor
in
pop
and
pusha
sbb
sub
and
push
adc
cwtl
and
adcb
ret
test
cmp
mov
cmp
adc
bound
add
enter
into
or
mov
xor
fstl
adc
mov
or
push
push
in
add
push
pop
xchg
push
dec
cld
je
xor
loope
cmpsl
mov
jno
aaa
sbb
jmp
test
and
pushf
mov
dec
bound
loopne
jp
jp
xor
hlt
sbb
dec
addr16
mov
push
mov
insb
jl
dec
fwait
sbb
or
pop
sbb
dec
mov
hlt
addb
sbb
and
push
and
adc
and
push
xchg
inc
popa
and
sbb
adc
test
sarl
jo
dec
push
jno
or
and
add
mov
pop
jmp
int3
into
push
dec
lret
pusha
push
insb
pop
mov
adc
ss
fisubrs
dec
jbe
pop
lcall
pop
jae
pop
mov
iret
pop
fs
add
pop
jno
xchg
aaa
and
lds
cmp
add
lret
in
jnp
adc
cmp
mov
es
int
notb
jo
jo
push
mov
sub
add
insb
inc
out
and
jnp
sub
push
lds
cmp
mov
inc
sbb
sub
sbb
int3
dec
sarb
out
sub
stos
out
sbb
rolb
mov
mov
and
or
das
add
aad
stc
cltd
and
lahf
lods
mov
xor
loope
in
pop
xor
push
jle
and
pop
je
push
mov
xor
or
lcall
dec
mov
mov
psubusw
pop
xchg
xor
mov
inc
add
popf
xchg
sbb
dec
xor
jb
dec
fcmovnu
call
xor
fstpl
es
or
mov
or
fs
sahf
sbb
aaa
xchg
out
jns
insl
rolb
add
test
enter
repz
push
js
and
rolb
xchg
cmp
cmp
or
add
cmp
repnz
cmp
push
fcomp
add
in
cmp
daa
pop
enter
dec
loopne
add
push
loope
pop
xorl
inc
clc
ds
js
mov
xchg
insb
push
add
in
fnstcw
rclb
rolb
cmp
insb
xchg
lock
lock
and
push
dec
jge
xchg
add
pop
cld
out
ret
dec
and
add
xchg
into
add
jmp
dec
das
jl
mov
dec
dec
das
add
imul
cmpsl
cmp
cld
push
dec
mov
add
add
lods
test
inc
in
pop
ds
pop
lcall
hlt
rolb
sub
adc
mov
xor
mov
or
jle
dec
push
sub
mov
jp
or
out
movsl
adc
dec
inc
inc
or
add
xchg
outsl
add
mov
push
or
movb
movsl
or
mov
mov
pop
loopne
adc
out
pop
lret
cmp
nopl
adc
jb
aaa
imul
cmp
lcall
outsb
bound
add
mov
mov
in
fadds
movsb
push
xchg
repnz
mov
imul
add
pop
xchg
push
mov
sbb
cwtl
add
hlt
shll
rorl
aad
scas
mov
cmp
out
int
or
mov
or
aam
aas
pop
mov
add
add
es
or
js
push
adc
mul
adc
adc
sub
ds
out
or
push
jne
mov
stos
xor
push
les
fists
cmp
into
fadds
add
add
adc
dec
push
and
cmp
add
sbb
cltd
add
shll
daa
xchg
adc
popl
adc
fisubs
inc
push
or
adc
push
push
adc
and
inc
sub
call
add
mov
out
ds
push
sarl
divb
lock
pushf
loop
dec
dec
inc
ljmp
dec
pop
mov
xor
mov
outsl
adc
sbb
addr16
push
cmp
popa
insl
jae
or
dec
mov
pop
xor
les
inc
shlb
fstp
cmp
add
pop
movsb
hlt
imul
push
xlat
mov
insb
in
mov
jnp
dec
cmp
jmp
push
fdivs
push
out
or
gs
adcb
push
mov
mov
jnp
add
adc
filds
or
xchg
fsubr
int3
push
push
jne
xorb
in
cltd
add
call
test
cld
or
aam
aaa
xchg
cmp
js
jne
dec
out
inc
or
lods
push
and
sbb
add
lods
adcl
clc
mov
mov
mov
lahf
clc
adc
out
dec
lods
push
popa
nop
mov
push
cmpsl
xchg
inc
cmpb
adc
mov
and
fs
inc
bound
and
sbb
enter
stos
clc
cmp
or
or
leave
lods
adc
xor
cmp
mov
lahf
sbbl
test
push
out
sbb
call
es
mov
mov
not
and
push
push
mov
je
sub
xchg
push
add
add
mov
xchg
sbb
and
pop
mov
jne
cmp
add
or
add
push
push
addr16
add
movsb
add
xorl
aam
or
mov
incl
fldenv
cmpb
movsl
or
inc
mov
data16
fisubrs
jg
orl
cld
dec
aam
sub
jnp
or
aaa
fildll
adc
adc
push
or
cmpb
fwait
add
inc
or
addr16
mov
pop
sti
sahf
hlt
sub
in
movsl
mov
mov
xchg
jbe
popa
loop
sbb
adc
enter
mov
sbb
adc
mov
dec
dec
inc
fcoml
cmp
and
clc
sub
cmp
push
mov
imul
popf
dec
push
adc
movsl
sbb
lock
hlt
shll
jle
xlat
sbb
nop
xchg
add
cld
push
inc
jle
push
enter
das
clc
adc
dec
inc
clc
pop
mov
lock
std
sahf
inc
lods
sbb
sub
adc
sbb
push
pop
insl
andl
dec
in
loope
jbe
sbb
cmp
jo,pt
xchg
movsb
lods
push
sahf
sbb
xor
in
or
fwait
jge
cmp
xchg
cmc
movsl
or
clc
ja
or
inc
push
push
sbb
addl
pop
inc
add
sub
sar
rclb
shr
mov
dec
icebp
sbb
iret
inc
add
loopne
cmp
jmp
clc
push
mov
in
or
cwtl
loop
add
jmp
inc
sub
sti
adc
xchg
nop
jecxz
loope
roll
mov
sbb
out
test
inc
aaa
adc
push
enter
adc
hlt
sbb
mov
push
test
mov
and
and
cli
cltd
neg
aad
pop
movsb
dec
outsb
xor
gs
push
pop
xchg
mov
cltd
add
data16
ljmp
in
add
pushl
jge
sub
call
mov
push
jne
sub
and
pop
sbb
inc
dec
or
dec
lock
addb
in
jl
jnp
stos
mov
jnp
jb
xor
jge
dec
inc
sbb
testl
dec
arpl
movsb
imul
in
loopne
xor
int
cmpsb
or
test
cwtl
xchg
sub
outsl
xchg
inc
add
jl
or
mov
adcl
mov
fbld
mov
jne
ret
add
push
mov
inc
lret
shl
and
out
pop
mov
or
pop
pop
fnstenv
rcll
testb
decl
sub
in
in
sub
cs
in
in
adc
adc
in
in
adc
push
pop
in
in
sbb
sbb
in
in
sbb
push
pop
in
in
add
add
in
in
add
push
pop
in
in
or
or
in
in
or
push
jb
repnz
icebp
bnd
jb
hlt
cmc
div
add
out
das
negb
add
push
sbb
adc
or
stc
cmp
cmp
xor
add
out
sahf
hlt
and
sbb
adc
sahf
out
fmull
add
repz
repz
or
hlt
mov
iret
mov
lods
fsubl
pushf
int3
xchg
les
test
iret
je
insb
pushf
fs
cmp
repz
mov
repz
repz
je
insb
iret
repz
xor
sub
and
cmp
repz
dec
adc
or
cmp
xor
xchg
sub
jns
out
hlt
and
sbb
sahf
out
sahf
adc
or
add
cmp
sarl
hlt
mov
repz
in
inc
push
insl
std
sbb
mov
les
add
pop
xchg
push
stc
push
ret
and
sub
inc
xor
xchg
rcll
in
imul
xchg
or
mov
jp
mov
sub
mov
nop
xchg
mov
loope
bound
mov
push
jo
movb
les
and
aam
pop
or
sub
xchg
dec
add
and
mov
mov
into
xchg
outsb
sub
insl
and
mov
or
mov
add
add
call
cmpsl
cltd
add
mov
add
sahf
mov
mov
xchg
mov
and
repnz
xchg
ja
push
inc
adc
rclb
cmp
add
inc
dec
pop
js
enter
je
cmp
jo
repnz
sahf
xchg
push
insb
mov
adc
hlt
xlat
jo
shll
inc
cltd
nop
pushf
hlt
test
stc
in
push
ja
nop
sbb
sbb
mov
leave
int
dec
mov
in
pop
rolb
push
notl
xchg
xor
les
mov
ret
fnsave
pushf
aaa
push
jg
iret
nop
xor
ds
in
add
jae
jb
lock
lock
add
scas
dec
fstl
mov
aas
lahf
add
push
jecxz
in
dec
xlat
jl
inc
push
inc
mov
push
inc
or
arpl
sub
add
jmp
cmp
shrl
inc
inc
xchg
roll
dec
clc
dec
aas
add
les
push
movb
ja
es
mov
psubsw
pop
and
and
ljmp
xchg
fisttps
imul
sbb
sbb
or
inc
push
push
mov
addr16
loope
xchg
or
fldt
cmp
pop
sbbb
dec
push
clc
ret
and
in
push
sbb
lods
add
out
into
scas
lret
hlt
mov
sub
pop
jge
hlt
shr
xchg
adcl
xor
dec
pop
por
cs
inc
sbb
dec
scas
inc
push
lea
push
and
xor
ret
fdivrl
mov
pusha
xchg
mov
hlt
inc
jmp
movsb
pop
push
pop
add
nop
into
aaa
and
mov
sbb
jbe
push
add
inc
sub
inc
mov
cmpl
mov
jns
or
stos
test
sbb
and
movl
xor
or
sub
dec
adc
data16
xchg
test
ret
packsswb
dec
mov
lods
xchg
mov
xchg
sub
sub
add
cwtl
nop
test
dec
ljmp
xchg
sub
jmp
push
cmp
sub
pop
rcr
add
or
sub
jmp
cmp
xor
inc
daa
pop
xchg
xchg
test
pushf
jbe
rol
inc
dec
inc
xchg
es
sbb
mov
pop
jecxz
aam
inc
cmp
push
daa
sbb
ja
inc
push
or
xchg
pop
or
xor
pop
or
gs
add
push
dec
dec
mov
rol
push
and
jae
enter
xor
pushf
or
cmpsb
pop
adc
enter
scas
xchg
scas
dec
repnz
sbb
adc
mov
insb
rcl
push
roll
or
scas
push
or
mov
ja
in
sbb
ds
xor
cmp
push
push
or
push
out
mov
fcmovbe
inc
enter
and
mov
mov
ja
nop
pop
xchg
mov
je
adc
sbb
pop
mov
sub
outsl
mov
or
or
stos
adc
pusha
dec
shll
add
inc
fisubs
es
bound
pop
rorl
push
dec
or
in
das
push
ret
inc
mov
xchg
cmp
mov
les
cmp
inc
xchg
add
or
loopne
push
cmp
inc
pop
scas
xchg
jo
adc
inc
cmp
lahf
cmpsb
push
push
push
and
lods
imul
lock
and
and
push
inc
neg
xor
xor
dec
imul
dec
and
push
add
out
add
outsb
pop
imul
call
imul
insl
inc
mov
pop
js
bound
pop
and
jo
jb
jb
popa
or
mov
popa
dec
es
jae
out
data16
es
imulb
cmp
adc
pop
addr16
jb
fdivp
out
mov
add
mov
arpl
mov
testb
daa
push
jg
jnp
out
into
sub
insb
das
je
insl
sti
fsubp
cmpsl
sbb
and
pop
lock
mov
jge
push
je
jo
jb
sbb
jns
outsl
dec
data16
sbb
das
add
or
imul
pop
push
hlt
sub
mov
pop
ret
pop
xlat
sbb
mov
ret
jl
cmp
add
test
or
jb
loop
add
push
daa
and
daa
xor
jl
or
orb
sti
and
add
shlb
pop
fs
pop
rorl
mov
rorl
cmpb
or
sub
andl
push
insb
push
push
jg
mov
xchg
mov
mov
inc
sbb
jne
pop
or
add
call
fstpl
imul
pushl
push
mov
xor
hlt
addl
into
push
push
pop
mov
mov
xchg
xchg
and
and
je
inc
lcall
pushf
shrb
iret
xchg
rorb
ret
pop
dec
lcall
int3
lods
bound
mov
cmp
add
jge
and
imul
pop
es
jl
jns
sbb
in
xor
cmp
push
orb
add
mov
xor
and
add
mov
or
daa
sbbl
jb
sub
add
outsb
inc
adc
out
push
jmp
sbb
pop
xor
push
sub
mov
sbb
add
or
adc
js
lcall
xor
pop
jb
stos
or
adc
sbb
adc
or
pop
dec
push
adc
push
sahf
pop
lret
inc
decb
add
fbstp
push
pop
pop
or
or
repz
or
or
or
or
cmp
repz
adc
repz
sbb
sbb
imul
push
pop
and
and
and
lock
fcoms
jns
out
leave
cld
iret
repz
or
push
bound
repz
test
iret
repz
or
out
sahf
cmpsl
sbb
sahf
out
sahf
jb
mov
jns
aam
xchg
mov
fdivs
jmp
add
lret
add
push
mov
push
adc
pop
pop
adc
push
xchg
dec
sub
in
lret
sbb
mov
or
pop
push
and
sub
dec
sub
xchg
lret
adc
cmp
adc
mov
sub
sbb
and
sbb
xchg
pop
sbb
sbb
xor
sbb
popa
imul
adcl
mov
and
xchg
inc
sub
push
sbb
push
pop
mov
cmc
push
cmp
clc
test
pop
adc
jnp
ljmp
xchg
jmp
cmp
loopne
cltd
sbb
inc
push
lea
push
mov
js
lock
add
popa
or
pop
push
or
mov
sar
push
adc
push
add
or
andl
pop
cmpl
loopne
je
jns
mov
loope
or
push
imul
rcr
pusha
loopne
dec
pop
or
add
cmp
inc
mov
outsb
xor
stos
push
sub
sbb
ss
nop
out
jnp
bts
adc
movl
sbb
shlb
hlt
mov
adc
into
sbb
lock
not
test
or
js
sub
inc
add
inc
cmp
cmp
dec
inc
xchg
dec
inc
or
inc
dec
jecxz
xchg
push
int
or
mov
hlt
adc
dec
add
inc
sbb
add
addr16
sub
jne
sbb
push
je
push
xchg
mov
lahf
sbb
pusha
sbb
fcomps
dec
ret
mov
or
sbb
jmp
jbe
gs
xor
dec
sub
in
rcrl
or
orl
add
add
das
xchg
sbb
push
adc
inc
leave
push
jb
adc
and
pop
lods
lret
pop
dec
sbb
push
pop
sbb
xchg
stos
lret
negl
xorb
mov
orb
push
jb
jb
push
sbb
inc
leave
pop
and
arpl
xchg
and
inc
nop
and
stc
sub
pop
and
dec
scas
xchg
or
sbb
jb
stc
cmpsb
xchg
stos
in
sub
sub
or
add
pop
push
inc
mov
and
and
xor
in
mov
mov
inc
and
ljmp
test
xorb
insb
and
push
and
or
push
jl
ja
adc
push
nop
or
iret
loopne
sub
jmp
push
mov
cmp
inc
add
and
inc
fldl
inc
push
outsb
sub
add
hlt
mov
mov
mov
mov
inc
xchg
es
mov
push
rolb
dec
popa
bound
inc
in
xor
pop
sub
xchg
jns
xchg
nop
push
and
bswap
in
xchg
and
pushf
push
push
stc
nop
scas
pop
sbb
and
sbb
fsubl
adc
daa
xor
insb
repz
push
rorb
lods
aas
jg
add
in
add
movups
mov
test
enter
dec
pop
or
push
and
pop
daa
outsl
or
add
pusha
and
dec
sbb
xchg
stos
or
inc
scas
sbb
daa
mov
popa
jo
addb
lea
mov
daa
je
cmp
mov
or
push
jbe
dec
fisubrs
loopne
aaa
sub
icebp
inc
pop
outsl
test
and
or
inc
arpl
jo
cs
xchg
mov
xchg
pop
jne
sub
xor
xlat
add
sub
and
fs
or
js
js
pop
jb
das
dec
gs
loop
inc
cs
mov
cs
and
jg
and
add
dec
mov
push
or
insb
or
mov
inc
add
in
pop
lods
test
or
sub
pop
sub
sbb
dec
push
and
pop
leave
sub
in
xchg
dec
pop
inc
or
adc
cmp
inc
insb
push
inc
push
test
push
pop
imulb
pop
stos
pop
push
xorb
add
and
inc
rclb
adc
push
pop
jns
mov
pop
outsb
push
xor
in
cld
pop
fsubr
or
sahf
mov
notb
mov
mov
in
jnp
inc
adc
push
cmp
push
hlt
sbb
lock
push
and
shll
or
gs
pop
and
or
data16
bound
jno
or
sub
mov
aam
ja
sub
pushf
loop
add
sbb
pop
xchg
add
lea
xchg
adc
and
bound
cltd
or
mov
add
xor
inc
mov
into
jl
inc
cld
and
sub
cmovne
jae
push
xchg
mull
cmp
adc
pop
xchg
lods
pop
js
test
or
xchg
xchg
adc
adcb
mov
adc
int
xor
or
push
inc
scas
add
add
adc
add
mov
sub
mov
xchg
stos
sbb
cmp
sub
sbb
adc
xchg
dec
imul
mov
pop
test
dec
insl
gs
inc
insb
adc
popf
pop
or
outsl
and
or
mov
push
jns
dec
popa
js
outsb
addr16
inc
sahf
daa
push
inc
adc
and
dec
mov
imul
or
push
or
jns
xor
add
jae
lods
inc
mov
or
imul
xchg
rclb
dec
pusha
and
adcb
sub
dec
adcl
rclb
aad
xor
movsl
add
cmp
xchg
jae
xchg
cmp
push
sub
lahf
inc
leave
add
pop
and
scas
mov
xor
xor
ss
jns
xchg
mov
fcomp
lret
or
int
cmp
loopne
loopne
shll
and
inc
push
sahf
push
lret
je
call
or
dec
push
jo
cmp
add
push
mov
daa
inc
pusha
xor
pushf
xor
or
out
mov
cwtl
xor
inc
imul
sbbb
mov
pushf
data16
cmp
push
cmp
adcl
sub
in
and
and
and
bound
arpl
shlb
icebp
aaa
lock
sub
xchg
sub
fists
sbb
pushw
adc
or
push
inc
add
or
and
lock
mov
xor
call
and
enter
sbb
inc
enter
or
in
and
add
mov
mov
inc
nop
push
scas
and
mov
push
pop
cmp
xchg
sbb
sbb
sbb
es
push
sbb
sbb
test
loopne
xchg
lods
add
shlb
cmpsb
xchg
or
sub
push
jecxz
inc
scas
and
popa
loopne
or
sbb
mov
movsb
ss
mov
icebp
mov
outsb
pop
sub
inc
mov
xor
jl
inc
shlb
push
xor
add
xchg
sbb
xor
leave
push
jb
xor
xchg
pop
and
leave
push
xor
cmp
xor
and
push
cmp
add
inc
test
dec
inc
inc
pusha
orl
inc
cmpsl
divb
or
inc
pop
mov
inc
push
inc
fists
loop
push
mov
xor
out
mov
bound
repz
inc
mov
out
mov
rorb
nop
push
mov
mov
adc
adc
mov
push
fs
jne
inc
adc
mov
add
and
fidivrs
mov
lret
pop
adc
inc
hlt
data16
add
mov
je
xchg
pop
pushf
aas
cwtl
cmpsb
pushf
push
add
mov
add
adc
fs
dec
or
nop
push
xchg
out
enter
sub
mov
xchg
add
dec
out
inc
sub
stc
xor
inc
pop
inc
sbb
enter
ja
add
push
push
outsb
mov
add
jge
add
jmp
incl
push
cmp
stc
sahf
cmpsl
push
xor
push
pop
pop
roll
pop
sbb
rcr
inc
add
add
inc
adc
jo
add
les
mov
push
bound
push
in
jg
mov
push
add
cmpsl
or
and
pxor
test
cltd
inc
cs
pop
pop
dec
in
mov
dec
mov
jo
sbb
les
insb
adc
daa
add
cmp
or
mov
xchg
sbb
sbb
and
xor
sub
dec
push
pop
shll
or
leave
and
or
and
dec
scas
xchg
and
es
sub
xchg
sub
inc
push
inc
sub
dec
das
xor
and
add
lahf
mov
pop
movsb
adc
pushf
jb
adcl
pop
inc
xchg
jg
mov
sbbb
bound
mov
fcompl
nop
add
ja
add
push
hlt
pop
inc
or
sub
sbb
fisttpl
scas
into
push
test
xor
inc
add
and
rolb
stos
cld
sub
loop
call
daa
xchg
nop
mov
push
xchg
inc
add
mov
lods
outsl
leave
adc
dec
mov
mov
out
movsl
andl
ss
dec
push
adc
leave
pop
sbb
fsts
pop
pop
or
stos
insb
and
rolb
lret
cmpsl
mov
addb
lods
popa
rcrb
and
add
and
lea
je
sub
sbb
mov
mov
sbb
rorb
push
insb
cld
insl
fmull
inc
pop
jmp
imul
cmp
inc
fistl
je
fcomps
in
mov
ret
xchg
fistps
sar
mov
xchg
leave
add
mov
push
push
push
fisttpl
shl
shll
pop
aas
bound
push
test
idiv
pxor
jmp
or
push
repz
mov
jno
cmp
pop
ret
rcrl
push
jo
js
movsb
movsb
add
pushf
jae
int
sub
xchg
mov
popw
lahf
jle
add
vunpckhps
add
mov
dec
push
ss
imul
dec
mov
add
cmp
out
icebp
mov
inc
and
ss
in
pop
out
test
or
pusha
shlb
cwtl
dec
dec
adc
or
rol
cmp
stos
and
and
aas
das
mov
test
push
je
mov
insb
or
call
jne
lea
mov
adc
xchg
fmull
sbb
clc
addb
dec
sub
inc
jmp
pop
lods
inc
push
nop
push
xor
nop
js
popf
je
sub
or
sbb
dec
dec
push
or
xlat
cmpsl
cwtl
inc
mov
movsb
shll
or
arpl
pop
cli
rolb
cld
cld
pop
and
xor
sub
dec
inc
nop
push
sub
gs
add
xchg
jae
mov
insb
imul
pusha
add
xor
jl
xor
add
pop
daa
push
xor
decl
aam
test
inc
mov
dec
cltd
push
add
xchg
inc
pop
adc
jo
or
enter
xor
mov
enter
mov
sub
adc
or
pop
addb
push
insb
mov
mov
or
dec
sub
jo
mov
es
jne
andl
xor
lods
movl
inc
jle
push
test
test
aad
push
inc
cmp
and
scas
jnp
inc
movl
xor
adc
addl
adc
adc
and
arpl
xchg
mov
xchg
loopne
movsb
stc
lock
sub
cwtl
dec
add
aad
xorb
adc
inc
aam
aam
cmpsl
and
cmp
xor
lock
xor
out
iret
inc
daa
insb
or
mov
xchg
in
push
insb
outsb
pop
fdivr
ljmp
mov
addl
adc
cwtl
pop
add
test
sbb
sbb
sub
cmp
add
push
xchg
out
stos
push
mov
rcrb
and
sbb
mov
adc
sarl
push
mov
faddl
sbb
and
xchg
adc
inc
inc
leave
jno
rorb
and
mov
sub
testb
insb
push
push
ret
inc
pop
fwait
dec
ljmp
shrl
inc
dec
loopne
add
or
lret
adc
lcall
outsb
sub
and
insb
js
push
daa
cmp
add
jle
adc
testb
add
neg
xor
push
mov
sub
imul
cmp
pop
int
testl
fcoml
push
stc
xchg
inc
fcoml
jae
stc
mov
inc
mov
cmp
and
outsl
cmp
mov
pop
pop
arpl
adc
sbbl
rclb
cmp
push
jne
xchg
push
rcl
jb
jge
push
mov
fxch
or
nop
dec
les
cmpl
andb
dec
pop
inc
loopne
jnp
mov
mov
sub
adc
test
sbb
fstpl
mov
sub
sbb
push
dec
je
dec
fsubrs
les
inc
inc
add
gs
jp
js
add
orb
mov
xchg
pop
js
mov
mov
out
push
xor
push
testb
fimuls
add
adc
mov
jmp
test
in
and
test
push
dec
or
lds
pop
or
btc
lods
cmp
cmp
add
mov
xor
lahf
adc
insb
enter
adc
call
pop
outsl
idivl
mov
xor
and
rol
pop
mov
sti
sbb
pop
adc
adc
movsb
sbb
cmpsl
arpl
arpl
mov
in
pop
xchg
cltd
addr16
push
push
mov
out
push
or
push
and
xchg
jge
repnz
mov
sub
or
cli
popf
dec
mov
and
mov
jg
sahf
push
out
sub
setnp
iret
and
lods
into
push
xchg
and
mov
mov
push
adc
mov
loopne
fcomps
xchg
sub
sbb
scas
shlb
insl
gs
mov
sti
pop
push
sub
push
idivb
pop
inc
xor
mov
push
pop
mov
and
rclb
pop
push
sub
daa
add
test
popf
add
pop
and
clc
push
inc
add
clc
jg
dec
lock
mov
or
sbb
lods
test
inc
loopne
xor
pop
cli
xor
imul
dec
int3
pop
add
adc
xchg
lods
pop
cld
inc
pop
cld
les
adc
pop
lret
pop
sub
cld
sub
jno
mov
loope
das
mov
mov
dec
or
scas
mov
add
and
inc
cs
daa
es
mov
out
inc
push
inc
sbb
and
adc
pusha
or
cli
clc
dec
dec
inc
inc
dec
push
pop
xor
adc
jg
movsl
jecxz
inc
lea
inc
add
or
cld
mov
xchg
dec
jns
pop
aam
jmp
bound
andl
jmp
rcr
mov
pop
inc
rorb
adc
pop
mov
inc
adc
daa
mov
xchg
pop
add
jecxz
sub
fmull
mov
jl
inc
or
lret
sbb
adc
and
mov
aaa
add
dec
dec
sbb
ret
incl
mov
mov
xor
push
fnstcw
pop
pop
iret
cld
in
inc
sub
mov
dec
js
xor
clc
add
jo
xor
dec
add
roll
mov
mov
mov
sbb
bound
and
mov
push
fildll
addr16
push
popa
ss
or
add
nop
clc
add
mov
sbb
xchg
test
jae
pop
faddp
add
sti
add
cmp
fs
ret
cmp
sbb
repz
sbb
mov
add
call
push
pop
adc
inc
sbb
mov
popa
jo
notl
add
shll
or
test
rcrb
hlt
xchg
add
imul
test
xor
lcall
inc
testb
cmp
push
or
rorl
jp
add
insb
mov
add
arpl
cmp
cmpsl
adcb
in
or
pop
sbb
cmp
pusha
cmovns
fldt
adc
orl
mov
pop
sub
and
cmp
mov
mov
dec
push
mov
cmp
rorl
fists
test
jnp
test
adc
lcall
inc
movl
adc
faddl
je
dec
and
aaa
shll
out
xchg
add
into
mov
cmp
add
loopne
and
fwait
js
ja
inc
or
fbld
clc
inc
inc
or
mov
loope
les
sahf
dec
clc
bound
mov
dec
pusha
les
imul
pop
cmp
sti
test
mov
fcoms
fwait
xchg
push
push
mov
adc
or
mov
xchg
cmp
ss
out
inc
jo
dec
and
add
cmovg
inc
add
inc
cmp
mov
add
jge
xor
jo
cmp
push
adc
push
xlat
sbb
mov
outsb
and
cmp
mov
xor
sub
adc
jge
das
mov
sbb
ficoms
cmp
aaa
testl
nop
filds
dec
popf
int
imul
roll
js
jg
jl
lret
xchg
pushf
sbb
mov
and
add
and
sub
dec
xchg
mov
andl
aam
inc
in
test
sub
adc
test
mov
bound
les
movsl
mov
lods
cmp
xor
or
inc
push
stc
ret
pop
pop
loopne
call
movb
aas
enter
dec
inc
dec
shlb
pop
xchg
mov
add
in
out
jnp
lock
add
push
mov
rorb
add
loop
loope
test
xchg
dec
icebp
nop
je
ja
dec
mov
sbb
cld
add
or
or
inc
and
aas
inc
add
push
xlat
xorl
jb
pop
testb
inc
sbb
and
out
push
adc
addb
dec
dec
lds
mov
mov
mov
nop
cmp
cmp
mov
add
sbb
test
sbb
lea
movzwl
inc
push
leave
cmp
outsb
ljmp
sub
ficompl
inc
mov
mov
dec
inc
or
pushf
add
mov
mov
inc
gs
and
xor
inc
xchg
dec
pushf
mov
mov
sbb
xchg
es
cmpb
in
dec
or
andl
cmp
mov
and
mov
repz
sbb
and
push
idivb
or
movb
mov
loop
push
xor
faddl
stos
popl
add
xchg
fwait
lds
movsb
enter
mov
pop
pop
cmp
adcl
mov
ja
orb
repnz
add
out
inc
shll
xchg
ljmp
adc
jmp
mov
inc
test
nop
clc
inc
jne
movb
or
xor
iret
adc
adc
mov
push
lcall
roll
imul
aas
inc
scas
insl
mov
pop
scas
pop
jg
push
pop
sub
or
mov
dec
jb
inc
mov
xor
mov
pop
or
fsubrs
andb
push
adc
mov
and
leave
cld
dec
sub
add
pop
adc
push
pop
pop
or
xchg
call
imull
sub
mov
inc
or
or
inc
decl
jge
jecxz
xlat
or
ja
mov
pop
orl
fiadds
or
push
loopne
bound
pop
mov
mov
dec
arpl
mov
mov
xor
movsl
mov
or
outsl
xchg
movsb
add
or
loop
sbb
sbb
add
cmp
je
mov
xlat
inc
dec
push
or
mov
push
mov
sbb
mov
cmp
push
gs
mov
mov
das
add
pushf
or
sub
push
push
push
dec
dec
xlat
cmc
aaa
lsl
dec
mov
add
xchg
es
rcr
test
xor
or
loope
adc
sbb
or
fucom
xor
pop
cmp
cmp
jne
sbb
xor
fs
sub
jne
cmpsl
sub
add
or
in
imul
or
or
xor
and
pop
jmp
inc
add
insl
jp
cli
pop
shlb
je
cli
js
xor
add
xchg
sbb
sub
insb
add
fnstcw
add
jae
in
pop
fsubl
sub
and
xchg
xchg
xchg
inc
add
inc
add
inc
sub
pop
lea
roll
and
push
mov
xor
pop
and
pop
push
dec
add
outsb
daa
ret
jae
push
lcall
sbb
add
sub
jns
mov
cld
sub
jb
cwtl
insl
cld
stos
dec
fadds
clc
xchg
pop
loopne
pushf
insl
adc
data16
arpl
daa
inc
gs
pusha
inc
fxch
xchg
xchg
pop
shlb
js
mov
dec
cmovl
xor
xchg
jb
loopne
int
adc
daa
push
xor
insl
fnstsw
iret
repz
in
cmc
std
add
imul
repz
add
mov
lock
cmp
and
aaa
inc
outsb
scas
nop
fs
push
subb
adc
add
es
mov
test
pop
mov
push
push
dec
or
add
test
add
dec
cmc
fcmovbe
add
inc
adc
or
sbb
and
jae
test
push
cmpl
dec
jbe
xor
mov
clc
push
mov
sbb
or
sbbb
sub
pop
daa
outsl
lock
push
or
outsb
sbb
movq
add
adc
cmp
or
mov
test
mov
or
jo
nop
mov
xor
mov
mov
nop
inc
push
cmc
mov
addl
cmp
or
lds
loope
cmp
jl
pop
add
or
xor
rcrl
mov
cmp
adc
divl
ret
push
inc
and
add
pop
xchg
jbe
pop
inc
mov
or
push
mov
cmp
arpl
mov
push
or
mov
fstl
das
popf
dec
or
pop
arpl
jb
sub
and
xor
fisttpl
sub
cmp
adc
in
in
and
sbb
call
orb
ret
pop
fs
adc
clc
outsb
mov
or
test
mov
adc
dec
shl
sub
clc
lods
xorb
call
xor
jecxz
mov
dec
inc
sub
sub
and
sub
push
pop
dec
gs
sbb
cmp
sub
sub
and
xor
sub
retw
pop
rol
movb
cmp
sbbl
push
call
mov
jmp
jae
add
inc
xlat
adc
or
xor
inc
addb
and
add
adc
mov
loop
or
cld
jmp
mov
enter
imul
push
cld
incb
add
pop
push
pop
fldl
stc
add
lock
dec
jne
adc
test
jo
inc
call
sbb
add
jne
sbb
push
or
add
and
xchg
stos
cmc
call
test
and
aaa
and
jo
aaa
imul
push
sbb
cmp
bound
and
jge
adc
cmp
ja
rcrl
cmp
or
repz
and
add
jge
decl
je
or
je
xor
fcompl
loopne
stos
test
fdivrp
dec
es
jnp
sbb
popf
mov
push
xor
inc
lock
fs
mov
loope
sub
sub
repz
inc
and
fcmovnu
repz
jp
fildl
push
ja
adc
jg
sub
sub
cmovb
xlat
xchg
pop
enter
and
jecxz
in
cwtl
inc
mov
add
mov
xchg
mov
dec
pop
jb
sti
dec
inc
dec
push
add
mov
mov
add
lret
dec
cld
and
xor
aaa
loopne
or
or
add
jmp
rcrl
enter
mov
js
push
nop
inc
jp
mov
nop
inc
fsubrl
cmp
jne
sub
ret
jne,pt
mov
insl
jbe
insb
loope
nop
rclb
pop
cmp
pop
or
imul
mov
inc
sub
cmp
lock
inc
pop
mov
mov
fdivl
aaa
mov
lods
int3
pop
mov
les
fmull
imul
push
sbb
in
test
in
dec
mov
fdivl
leave
dec
xor
outsb
sub
adc
movsl
test
cmp
ret
test
movsl
in
xor
jns
sbb
mov
adc
pop
loopne
mov
add
mov
jb
inc
and
pop
pop
jp
in
xchg
pusha
jne
mov
mov
clc
sbb
inc
add
and
and
ud1
gs
out
mov
subb
jae
lods
push
cwtl
loopne
jno
insb
jns
shlb
dec
aaa
loop
add
mov
add
outsb
sbb
push
addl
nop
in
pop
push
add
sti
add
or
mov
mov
mov
clc
jp
insb
add
add
popa
loope
or
sub
insb
push
out
test
outsb
adc
test
fisttpll
mov
mov
inc
add
aas
leave
add
mov
inc
sub
ss
push
mov
jnp
push
mov
nop
or
dec
sbb
mov
and
ret
aaa
mov
incl
adc
ds
jl
push
jb
push
jl
and
push
pop
or
jnp
add
push
hlt
gs
push
sbb
rcr
fiadds
cmp
add
test
or
add
adc
fnstcw
movsb
xor
adc
daa
jns
push
pop
sarb
and
cmp
pusha
jle
leave
push
subl
out
mov
or
sbb
push
push
int3
rcl
sbb
push
loopne
cmpsl
pop
mov
je
pop
sub
sbb
inc
enter
rcrb
xchg
push
sbbl
and
mov
addr16
scas
or
mov
inc
add
mov
sbb
movl
sub
cltd
fwait
dec
pop
dec
aaa
and
mov
rcrb
les
xchg
mov
xchg
inc
and
jns
enter
mov
adc
inc
das
enter
mov
add
add
test
mov
insl
bound
pop
pop
insl
bound
jg
push
dec
add
inc
scas
gs
fwait
add
andb
outsb
jne
insl
outsb
ljmp
or
jmp
popl
jbe
or
fs
insb
xchg
nop
xchg
pop
loopne
gs
xorl
sbb
push
imul
imul
jmp
mov
jle
or
push
dec
dec
fdivrl
mulb
lods
or
add
popa
in
popa
imul
mov
adc
fldz
in
sbb
pop
or
and
add
add
and
mov
add
popl
addb
inc
xor
outsl
nop
out
and
adc
dec
movl
adc
mov
sub
sub
add
mov
pop
je
inc
loop
mov
or
push
or
dec
out
push
lea
add
cltd
in
add
adc
xchg
mov
dec
add
or
or
mov
add
push
push
jmp
lods
dec
adc
test
pop
icebp
adc
sbb
or
xor
adcl
gs
dec
sub
mov
testl
enter
pop
sahf
sub
int3
mov
negb
fildl
iret
mov
add
inc
xchg
and
mov
insl
mov
paddsb
sub
add
pop
xlat
roll
xchg
mov
or
repz
hlt
mov
pop
adc
clc
loopne
pop
lock
je
psubq
lret
popa
nop
cs
into
aam
cmpsl
shufps
inc
jp
pop
daa
pop
popf
sbb
xchg
hlt
dec
loop
push
outsl
pop
and
mov
popa
jb
gs
ret
xchg
enter
pop
pop
jo
inc
pop
push
movsb
or
sbb
stos
jae
divl
sbbb
orb
jmp
dec
mov
gs
shlb
add
add
in
cs
faddl
mov
lgdtl
sub
add
addb
or
jnp
mov
bound
arpl
add
jmp
mov
jo
test
sub
stc
add
addr16
das
sbb
or
test
push
push
jno
fnstenv
and
inc
imul
add
inc
jl
push
push
imul
roll
scas
out
push
out
xchg
or
jb
js
clc
dec
repz
mov
push
push
scas
xchg
pop
imul
sbb
wrmsr
sbb
cmpsl
sub
cmp
mov
push
sbb
dec
das
push
jo
test
push
mov
repz
push
dec
lahf
jo
and
push
mov
pop
test
fidivl
out
notb
int3
lea
cli
mov
adc
xchg
inc
fdivrl
adc
inc
out
and
ja
andps
jg
adc
dec
mov
add
push
add
add
add
pop
add
mov
imulb
mov
mov
mov
mov
mov
mov
pop
sbb
incb
cmp
mov
in
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
ljmp
cmpsb
fdivr
ficompl
call
call
call
call
call
mov
call
call
dec
cli
into
dec
dec
inc
inc
ljmp
leave
scas
mov
lret
and
jbe
push
lock
mov
push
mov
out
adc
push
push
jns
iret
rep
in
pushf
jmp
pop
in
ljmp
out
in
push
icebp
push
sub
push
dec
pusha
ss
cmp
imul
es
lock
mov
cmpsl
ja
rcr
xlat
push
movsb
repnz
cmp
fs
sub
je
or
push
call
fldcw
in
loopne
cwtl
shl
int3
mov
out
sub
xor
cs
lcall
push
hlt
rorb
sti
fidivrs
aam
cs
push
call
sbb
pop
sbb
fwait
orb
add
inc
out
lea
inc
sbb
inc
cwtl
add
cmp
add
mov
dec
in
orb
rcrl
enter
js
adc
add
mov
aas
incl
inc
pop
test
fcoml
in
dec
or
std
or
fiaddl
subb
adcl
repnz
ffreep
nop
pop
dec
insb
jmp
or
jmp
ds
fdivrs
or
repnz
xchg
xchg
cs
addr16
add
pop
cld
jle
cld
sahf
sbb
dec
insl
or
or
adc
adc
pop
adc
popa
pop
dec
and
push
or
xchg
inc
add
adc
inc
lds
inc
cmove
cmp
pop
jb
push
dec
popa
je
xchg
inc
push
push
addr16
lcall
mov
jg
push
pushf
nop
push
nop
mov
cmpsl
aaa
jno
ret
mov
outsb
add
mov
popa
iret
sarw
mov
bound
or
xchg
mov
adc
jb
aaa
xchg
add
xchg
push
xchg
iret
dec
mov
inc
bound
in
nop
xchg
bound
xchg
or
rcrb
xor
xor
pop
xchg
dec
imul
in
or
imul
or
rorb
ja
mov
add
popa
mov
push
nop
leave
mov
out
popa
jns
sbb
jo
fwait
divb
fisttps
outsb
cmp
pop
stos
lods
out
sbb
add
repz
and
js
inc
aas
add
xchg
adc
aaa
lldt
add
add
int
add
rolb
push
ss
push
popa
pop
stos
xor
addb
add
sub
adc
das
loopne
mov
adcl
test
adc
sbb
sbb
cmp
push
add
aaa
mov
ret
lods
mov
mov
outsb
mov
adc
dec
call
and
pop
les
mov
mov
mov
mov
clc
incl
xor
cmp
sbb
lcall
or
push
inc
inc
inc
decl
mov
into
std
mov
and
mov
jmp
dec
sub
mov
mov
mov
mov
jl
cmpsl
stc
mov
or
push
cld
and
jo
out
sahf
nop
mov
clc
sbb
inc
frstor
sbb
or
pop
fwait
out
mov
dec
and
and
daa
loop
repz
in
and
jbe
imul
je
push
pop
inc
jle
push
xor
dec
repz
push
pusha
and
out
pop
add
jbe
cmpsb
push
push
jo
sbb
sub
out
mov
sub
mov
iret
mov
mov
test
adc
lahf
idivl
pushf
movsb
les
imul
das
add
out
and
and
push
push
clc
xor
pop
jns
data16
push
int3
pop
cwtl
or
lahf
mov
jp
or
shlb
cmp
mov
imul
and
cmp
sbb
push
add
inc
out
loop
decl
in
cmp
into
inc
pop
and
mov
push
mov
or
adc
pop
rcrb
xor
fisubs
or
dec
dec
inc
pop
aad
cmp
into
sub
add
xchg
sbb
pop
sub
aas
pop
cmp
scas
xor
sbb
pop
push
dec
fadds
loopne
cwtl
cmpsl
add
inc
adc
mov
cmp
xchg
xor
loopne
movsb
adc
data16
push
push
insl
popa
xor
dec
lahf
sbb
sub
loopne
rolb
daa
nop
cwtl
mov
cltd
shll
jo
mov
sbb
pushf
addb
dec
mov
dec
test
pop
call
fs
adc
dec
xchg
cmp
mov
add
mov
mov
in
push
dec
pop
lret
stos
das
sbb
pushf
cltd
inc
rorl
imul
mov
test
fistps
mov
add
add
cmp
mov
mov
or
or
and
xor
adc
outsl
xor
add
sbb
arpl
enter
pusha
mov
xchg
cmpsb
sahf
push
test
out
sahf
sbb
sub
ds
jl
out
pop
gs
mov
in
inc
mov
je
cmp
lahf
push
ffree
mov
in
imul
andb
pop
cmp
lods
insb
jno
inc
js
ss
pop
subb
push
or
loopne
movsb
sahf
fcompl
fcompl
das
aad
push
cmp
sbb
pop
lds
jmp
pushf
push
add
daa
push
jg
pop
sbbl
fcmovb
or
nop
lcall
mov
jo
sbb
adc
cmp
push
push
and
rcrb
sbb
pop
lea
add
jb
mov
test
scas
test
inc
ret
fadd
add
int3
es
dec
rcll
sub
cs
nop
sbb
div
sbb
cmp
jp
pop
mov
xchg
pop
lea
inc
xor
nop
imul
sti
xor
sub
sub
cmp
adc
in
mov
jmp
aad
lods
jno
je
js
pop
sbb
scas
sbb
adc
push
push
inc
push
or
nop
or
inc
xchg
pop
daa
rcrb
in
sbb
pop
dec
inc
gs
insl
add
add
or
mov
push
xchg
daa
push
cmp
in
dec
dec
push
push
inc
push
inc
fmull
pop
push
or
add
or
mov
inc
insb
popa
clts
sbb
add
xchg
dec
pop
mov
daa
dec
push
jo
inc
es
imul
mov
pop
xchg
mov
movl
repnz
push
rorb
stos
add
jo
pop
sub
sbb
imul
mov
daa
enter
or
add
pop
test
add
lahf
cli
mov
mov
jecxz
adc
jmp
push
adc
cwtl
sbb
ror
jl
test
push
push
in
shlb
xchg
jmp
jle
inc
inc
add
push
add
mov
adc
jp
and
mov
out
pop
out
sub
inc
mov
psubsb
int
and
sbb
ss
mov
inc
je
maxps
sub
add
cmp
mov
xor
mov
das
inc
aam
or
or
movsl
orb
sub
add
push
or
add
imul
add
adc
push
scas
popf
mov
dec
imul
add
xchg
cli
sub
bound
lock
and
push
clc
adc
jno
mov
movsb
add
sbb
inc
movsb
jle
cmp
sub
xor
dec
jne
xor
mov
cmp
cmp
in
aad
es
es
dec
and
or
push
push
dec
sub
add
sub
push
push
out
imul
or
lcall
sbb
and
cmpsb
imul
dec
cld
andl
xchg
mov
mov
xchg
mov
out
iret
ret
arpl
js
jb
shl
push
inc
sbb
sub
cmpsl
mov
mov
sar
mov
sbb
add
sbb
mov
mov
push
xchg
sub
mov
mov
add
aam
mov
fisttps
pop
enter
imul
mov
add
adc
sahf
adc
mov
inc
cmp
dec
sub
adc
inc
sbb
or
sbb
lcall
data16
scas
add
pop
sub
pop
pop
mov
loopne
in
add
jmp
or
incl
and
ss
sub
mov
add
sub
or
pop
lods
rol
and
test
adc
setno
insb
pop
xor
cltd
inc
ret
push
jl
jg
mov
mov
mov
pop
adc
add
fdivrs
aam
cs
dec
fcomip
mov
shlb
xchg
and
pop
add
sub
aad
es
lea
mov
dec
jp
dec
outsl
sbb
dec
jae
lock
xor
or
shrb
in
das
ja
cld
cmpsl
daa
inc
add
inc
mov
inc
jge
or
loopne
dec
jge
xor
nop
dec
mov
sub
and
jge
std
mov
aaa
push
push
mov
xchg
fdivs
push
insb
insb
push
xchg
out
pop
jnp,pn
movsl
pop
push
pop
pop
mov
inc
inc
mov
mov
addr16
and
in
jl
lods
push
pop
enter
ret
cmp
movsb
xchg
add
ror
test
add
add
clc
pop
xchg
sub
or
mov
dec
push
sub
pop
shlb
ffreep
ljmp
popf
dec
inc
sub
add
neg
xchg
inc
push
movb
inc
cmp
pop
aaa
push
ja
jae
xor
aaa
daa
fisubrl
arpl
mov
xchg
dec
xchg
clc
push
and
mov
inc
and
test
mov
add
push
cmc
divb
mov
sarl
jb
and
pushl
add
adc
xor
test
test
dec
repnz
lret
cmp
mov
les
ficoml
xlat
push
ljmp
adc
in
ret
pusha
call
mov
clc
in
sti
sub
xor
pop
sub
or
jecxz
pop
dec
add
sub
push
jnp
repz
fdivrl
cmp
inc
imul
shrb
pop
movsl
ret
cmp
mov
dec
shrb
mov
inc
subb
test
xor
fsubrl
cmpsl
jae
js
addb
add
xorl
push
arpl
mov
xchg
repz
aaa
testl
js
sarb
aaa
adc
in
sub
add
mov
addb
insb
cmp
je
dec
mov
sarb
test
cmp
adc
in
add
lods
loopne
in
lea
orl
ret
je
jge
div
lea
or
push
push
ja
scas
cmpl
push
inc
xchg
fs
sub
add
into
mov
iret
xor
addl
addr16
scas
adc
outsl
fldl
pminsw
mov
scas
movsl
sub
xchg
jg
inc
rol
sti
push
cmpb
jge
xchg
jae
and
cmpsb
loopne
jno
push
negb
pop
lock
pusha
hlt
lahf
sbb
push
adc
dec
jle
inc
push
stos
vpshuflw
sub
ret
dec
push
jmp
jl
add
fdivrs
xorl
in
mov
test
or
addb
add
push
jmp
or
sbbl
jl
jl
and
call
and
cmp
je
popf
push
jno
pop
inc
push
cmp
fildl
mov
and
cmp
rcr
cmp
and
and
push
inc
xor
sbb
sti
pusha
or
pop
in
sbb
hlt
testl
jbe
push
sbb
mov
mov
call
das
mov
push
sbb
dec
aaa
and
sti
dec
push
push
sbb
cmp
ss
xchg
xchg
inc
add
in
or
jae
push
inc
ret
andb
popa
cmove
mov
or
nop
fucomp
out
lock
leave
sub
inc
push
sahf
test
sub
xchg
test
add
sbb
xchg
cmp
inc
push
lods
or
rolb
push
pop
fisubrl
and
cmpsl
rcr
xor
sbb
pop
push
xchg
push
pop
or
mov
popa
lcall
data16
jl
mov
pop
jae
mov
adc
pop
adc
xchg
popa
aaa
call
cmp
push
aam
pusha
test
push
push
jo
or
or
sub
fwait
sub
rcl
repz
pop
std
jno
or
mov
lock
sub
dec
jge
mov
jbe
inc
add
insb
mov
sub
or
lcall
icebp
mov
adcl
mov
xor
cmpb
movb
fnstcw
mov
xchg
add
xor
sti
movsb
imul
pop
add
dec
jmp
inc
in
or
jl
out
cmp
xchg
sub
adc
add
add
les
inc
pop
sub
and
es
sub
sub
add
mov
push
repz
adc
add
push
rorl
and
push
pusha
mov
and
std
enter
sbb
cmp
mov
xor
push
cmpsl
inc
jmp
fldenv
ss
sti
inc
enter
inc
cmp
mov
imul
inc
pop
xchg
pusha
das
js
or
push
cltd
test
ja
xadd
sbb
push
push
push
cmp
out
pop
nop
pushf
jl
xor
mov
pop
ficoms
push
fdivs
mov
and
push
fstpt
popf
ret
dec
out
xor
jle
push
pop
lret
mov
fadds
aad
xor
les
in
fdivrl
ret
dec
sbb
out
shlb
inc
adc
flds
pop
inc
push
ja
or
pop
aam
inc
adc
ljmp
imul
orl
out
jne
rcll
lea
js
or
stc
adc
jp
push
or
xchg
cmp
fistpl
dec
es
cs
add
push
stc
fstpl
fwait
jmp
sub
add
out
and
lcall
lods
fnstenv
sub
imul
push
push
insl
push
sbb
jns
sub
pusha
push
add
adc
sbb
jl
fistpl
or
ljmp
cltd
xchg
inc
pop
incl
loopne
cmpsl
insb
push
arpl
xor
xchg
loopne
arpl
inc
inc
loopne
insb
andl
addr16
inc
stos
dec
cmp
sbb
mov
dec
sbb
lret
mov
cs
dec
negb
popf
add
xchg
xchg
fbld
lea
xchg
adc
jo
and
adc
xchg
enter
inc
push
aaa
imul
xor
iret
xor
mov
jmp
dec
pop
add
lret
negl
loopne
mov
sbb
call
push
dec
sub
fdivrs
mov
add
pop
jno
dec
ja
xor
push
sbb
add
and
es
lahf
loopne
push
inc
popa
leave
xor
xor
lods
adc
mov
xor
xchg
add
push
push
jne
ss
sahf
test
sbb
dec
mov
pop
sub
dec
js
adc
stos
pushf
jecxz
add
xor
mov
fistpll
sub
lahf
mov
fcmovnb
inc
incb
or
add
sbb
cmpsl
sub
mov
cmpsb
std
inc
jle
out
movb
adc
or
stos
sbbb
cltd
push
lahf
xchg
xorl
movsb
xchg
cmpsb
mov
or
inc
insb
cmc
sub
in
nop
inc
sub
mov
sub
xchg
testb
cli
jmp
inc
mov
loop
adc
xchg
test
xor
xchg
sbb
movsl
adc
mov
insl
xor
arpl
fidivl
je
test
pop
outsb
cmpsb
adc
mov
rolb
pop
loope
xor
mov
jecxz
push
std
inc
jmp
icebp
or
rolb
add
jl
cmp
outsb
lock
pusha
or
add
sbb
sbb
adc
imul
cwtl
cmp
cld
push
adc
and
adc
das
cmp
xor
lret
and
mov
adc
cli
jl
push
and
mov
addl
xor
adc
mov
in
mov
mov
xor
dec
mov
insb
dec
jge
daa
movsb
add
nop
mov
adc
pushf
jle
or
ret
jecxz
sub
push
repz
inc
faddp
sbb
xor
shlb
nop
inc
or
sti
lock
jmp
enter
lcall
add
cmp
xor
movsb
xchg
into
cmp
jge
add
pop
sub
cli
pusha
add
add
push
push
adcb
xchg
je
jge
arpl
pop
ret
or
leave
les
sub
push
add
iret
and
leave
clc
iret
insb
loopne
jne
cld
frstor
mov
aas
jnp
mov
lcall
out
inc
sub
enter
cs
cmc
mov
push
lahf
dec
daa
cmp
push
pop
lods
repz
cmp
fwait
mov
insl
hlt
imul
add
rcll
lods
sbb
cltd
xor
pop
dec
mov
and
outsb
mov
dec
sbb
mov
jnp
add
cmpsw
insb
pop
lea
pop
iret
mov
sub
sub
shll
inc
push
inc
jge
mov
push
pop
push
clts
mov
xchg
test
xchg
andb
or
roll
xchg
lcall
xor
sbb
or
mov
sub
mul
je
mov
ja
daa
add
les
les
or
andl
xchg
push
aas
aam
add
fnstenv
andb
rcrl
or
or
je
xor
pop
or
and
inc
dec
add
inc
sub
push
dec
in
in
mov
jmp
cmp
je
mov
test
jbe
push
adc
insl
int3
jae
pushf
jge
cmp
push
or
dec
sub
adc
pop
je
je
mov
pusha
jbe
cmp
cmp
xchg
pop
je
cmp
daa
mov
nop
or
pop
jp
orb
fadds
dec
cmp
cmpsb
mov
in
mov
mov
add
dec
jbe
sbb
test
loopne
xlat
push
jl
cli
ljmp
sbb
icebp
pop
xchg
xchg
push
and
push
aas
jmp
adc
mov
adc
mov
mov
pusha
push
cmp
sub
mov
xchg
cmpsb
pushf
sub
sub
ja
jl
and
hlt
sub
mov
mov
jno
and
fs
add
clc
add
out
mov
lcall
sbb
add
mov
iret
mov
mov
insb
and
aam
add
sbb
sbb
sbb
ja
jmp
and
cmp
out
stc
mov
scas
add
adc
mov
or
xchg
inc
mov
lcall
sbb
mov
push
xor
sbb
cltd
mov
ja
sbb
cmp
push
out
add
push
cmpsl
xchg
and
xchg
data16
out
inc
and
mov
and
dec
mov
or
push
je
sbb
xchg
jne
cmp
ret
mov
push
add
stc
pop
mov
cmp
xor
cmpsb
fdivs
jl
push
aaa
aas
or
mov
test
xlat
add
movsb
scas
enter
lret
mov
adc
pop
push
push
out
xor
jae
mov
movb
inc
daa
addb
stos
mov
dec
je
sbb
movl
xchg
movb
push
pop
pop
idivb
int
sbbl
add
mov
lret
hlt
jmp
shlb
ds
add
lods
add
aad
pop
sbb
or
add
xchg
aas
dec
cmp
in
sub
mov
cmpsl
push
ret
nop
mov
push
push
xchg
dec
sti
sub
xor
add
fcmovbe
sbb
fs
pop
push
push
mov
testl
jbe
out
daa
addr16
ret
jae
and
cmp
xor
dec
inc
xor
push
sbb
fstpt
mov
push
jae
dec
push
insl
and
test
xlat
jo
inc
lea
fwait
dec
sub
sbb
jne
sarb
ss
dec
pop
loop
rorb
js
dec
lds
dec
dec
insb
imul
movups
fdivrs
xor
or
push
pop
push
add
add
fcomps
ret
push
sbb
andl
outsl
bnd
orl
adc
aam
push
fldcw
mov
repz
and
mov
inc
or
in
in
inc
xchg
loop
push
cmp
add
cwtl
loope
in
notl
or
pop
push
mov
pop
fsub
xor
enter
lret
cmp
xorl
rorl
xchg
push
ret
fldl
sbb
xchg
clc
or
xchg
pop
mov
dec
push
mov
sub
aaa
xlat
fisttpl
sub
push
arpl
cmp
int
out
loope
or
nop
or
adc
and
cmpsl
lcall
cli
push
jmp
jle
jne
mov
aas
pop
and
clc
jne
sub
add
mov
test
and
inc
loopne
clc
xor
or
jo
fadds
push
je
adc
mov
les
push
out
dec
fnstsw
shr
std
sub
ret
jne
sub
popa
pop
mov
and
ss
cs
inc
dec
push
push
dec
pop
push
inc
and
push
or
ret
or
cmp
icebp
leave
xchg
xor
sbb
add
scas
jb
inc
jbe
rol
lock
jne
cmp
aam
mov
xchg
lock
push
push
ret
mov
xchg
jns
inc
mov
mov
jle
gs
inc
add
add
pusha
or
addr16
and
iret
dec
or
jle
pusha
out
push
and
test
inc
test
mov
pop
popa
mov
cmp
jg
call
sete
data16
add
sahf
push
mov
dec
mov
push
adc
es
adc
dec
add
rol
sub
dec
mov
in
daa
inc
adc
rcll
test
xor
sbb
adc
cmp
add
xchg
jg
lahf
and
int3
jmp
inc
xor
or
pop
mov
dec
and
push
sbb
inc
dec
das
subl
decl
rolb
sub
mov
roll
mov
lret
inc
dec
stos
insl
outsl
roll
dec
dec
push
xchg
dec
pushf
or
mov
xchg
push
inc
or
mov
lods
mov
cmp
imul
imul
cmp
fs
in
mov
test
push
call
dec
add
adc
bound
je
mov
cmp
cli
clc
dec
and
mov
mov
mov
lds
push
cmpsl
push
popa
nop
inc
lcall
add
mov
dec
or
adc
mov
pusha
xor
cmpsb
mov
insl
test
or
rcrb
or
add
imull
rolb
test
xchg
loop
jnp
scas
xor
cmp
dec
lret
mov
dec
add
add
mov
sbb
dec
fsubs
out
cli
push
mov
ljmp
inc
xor
int
mov
lahf
cmp
or
xchg
push
xchg
lea
ret
xchg
add
push
mov
lods
dec
idivl
fldt
add
or
jge
aam
mov
cltd
fiaddl
jns
pusha
and
and
hlt
pop
lret
cmp
aam
mov
incl
add
sub
pop
sbb
push
gs
fiadds
push
and
inc
sbb
xor
pop
fiadds
mov
inc
xchg
flds
lcall
nop
xchg
or
push
sub
jno
and
sbb
inc
or
xor
xchg
cmp
sub
add
sbb
jne
push
jno
xchg
movsb
xchg
mov
decl
mov
shll
lret
aam
mov
testl
and
adc
mov
das
or
push
ret
mov
lea
adc
test
f2xm1
ljmp
cs
cmp
les
mov
or
in
add
adc
inc
loopne
adc
adc
aam
loopne
movsb
push
push
xor
xor
push
pop
jno
xchg
adc
add
adc
mov
nop
add
pop
ret
fimuls
inc
lcall
lret
or
adc
xor
cmp
rcll
push
xchg
xor
fmull
or
mov
lea
rclb
jecxz
dec
divl
xchg
pop
push
rclb
cmpb
loopne
addb
adc
or
rcrb
xor
popf
movsl
popf
push
cmp
jle
or
inc
cwtl
decl
push
cmp
je
mov
lret
jo
pop
dec
and
add
or
idivb
xchg
inc
push
and
xor
add
inc
or
lock
addr16
push
pop
pop
pop
or
fldl
jl
shlb
inc
enter
mov
and
and
mov
test
xlat
adcl
pop
inc
js
pop
adc
push
push
sbb
or
mov
inc
dec
xor
inc
cmp
xor
sbb
cmp
cmpsb
in
add
sub
mov
add
pusha
mov
and
test
mov
pop
jle
fs
cmp
je
pushf
dec
mov
int
push
xor
mov
mov
fldcw
pushf
xlat
adc
je
mov
push
mov
in
dec
or
pop
push
add
or
sbb
jle
dec
or
mov
or
nop
test
pop
out
jo
mov
jo
scas
stc
add
inc
inc
add
outsl
push
mov
mov
imul
daa
sub
push
lret
mov
mov
push
jo
movsb
pop
mov
xchg
add
std
in
and
push
cltd
sub
nop
into
aaa
jl
jnp
outsb
pop
je
mov
movb
ja
mov
or
push
push
lds
push
lret
mov
fwait
bound
mov
push
cs
xor
pop
push
xor
or
mov
mov
xor
pusha
and
subl
or
push
adc
or
insl
lock
nop
cltd
sbb
mov
mov
dec
and
and
setnp
push
cmp
inc
lcall
or
cs
pop
pop
and
xchg
in
inc
pusha
pusha
lods
mov
fdivrs
data16
adc
push
adc
fcoms
aas
shrb
icebp
mov
jle
rcl
adc
mov
out
sub
lahf
sub
insb
mov
adc
xor
pop
pushf
xor
in
cmp
xor
les
aaa
inc
shll
xor
dec
add
sub
mov
daa
mov
leave
je
idivl
sti
jp
xchg
xchg
dec
push
jo
adc
les
scas
rcrl
sub
out
add
popa
pop
or
inc
divl
dec
dec
mov
and
adc
roll
iret
inc
enter
mov
adc
inc
mov
mov
add
dec
test
or
xchg
cmpb
adc
cmp
testb
enter
push
fmull
dec
out
pop
and
sbb
pop
xor
mov
mov
rclb
jno
popf
inc
pop
je
adc
jne
mov
push
adc
dec
lock
add
jge
lock
inc
mov
or
dec
out
pop
push
nop
in
dec
mov
ja
add
outsb
xchg
or
mov
pusha
jg
lds
roll
out
movl
je
and
add
inc
pop
or
pop
jo
sub
stc
cmp
loope
in
pop
aad
xor
ret
mov
add
inc
fbld
adc
pop
jne
js
pandn
insl
xor
pop
cmpsb
xchg
mov
fcmovbe
inc
pop
aam
aam
sbb
inc
push
pop
inc
pop
add
push
popa
outsb
enter
sub
adc
jg
xchg
mov
mov
push
xor
xchg
fcoml
mov
xor
xchg
adc
mov
or
push
mov
push
movsb
mov
pop
das
add
xor
cmp
pop
jb
xchg
adc
inc
cld
add
adc
popl
mov
mov
iret
ret
jae
mov
dec
stos
pusha
mov
imul
int
adc
insb
push
js
push
mov
ret
jge
mov
ret
les
cmp
test
dec
add
in
dec
or
imul
lock
add
sbb
adc
roll
add
sbb
dec
iret
fdivs
repnz
sbb
xor
adc
dec
or
dec
lret
push
jns
hlt
lock
ja
fnstenv
ljmp
repz
gs
call
add
jmp
adc
adc
adc
outsl
and
add
push
dec
sbb
sbb
daa
js
inc
aad
fiaddl
pusha
cmpb
jne
adc
movsb
add
flds
xor
mov
lock
les
dec
and
inc
or
loope
int
fucomip
mov
adc
ret
aaa
enter
inc
fst
sbb
in
adc
xorl
jle
add
mov
mov
lcall
sub
inc
add
or
or
adc
or
push
push
push
insb
push
mov
cmp
inc
js
test
testb
test
inc
mov
or
add
and
sub
add
add
arpl
and
hlt
and
or
xor
pop
pop
je
cmp
push
lods
sub
notb
roll
jo
jne
add
push
fcoms
pushf
shrb
mov
pop
sbb
testl
or
jle
neg
pop
lea
ljmp
imul
ret
cmp
pop
mov
cmp
jge
mov
aas
mov
hlt
cmp
addb
sub
jl
cs
or
push
sarb
addb
jl
adc
add
cs
dec
dec
add
aaa
loopne
sbb
insb
aas
push
lea
loopne
fucomip
mov
cmpb
les
xor
push
adc
clc
jns
fnstcw
and
mov
dec
mov
add
push
xor
sub
sub
cmp
push
jle
leave
js
dec
mov
cmp
test
imul
sub
sub
lods
cmp
push
addl
cmp
and
pusha
test
add
push
shrb
dec
sbb
call
sbb
push
pop
out
cli
in
outsl
or
and
push
mov
cmp
jne
aaa
mov
adc
cmp
cld
ja
cltd
pop
je
mov
sub
jb
je
ret
add
inc
loope
inc
and
lock
dec
or
or
adc
add
or
push
mov
inc
adc
fidivs
loopne
fwait
mov
jb
xchg
sbb
es
fiaddl
pop
inc
data16
int3
pusha
mov
cld
test
movntq
sbb
fsubrl
add
add
sbb
push
das
enter
mov
inc
inc
pop
fdivrl
cmpsl
and
outsl
sbb
adc
loope
pusha
testl
imul
popa
mov
test
movsb
pop
outsl
inc
push
mov
int3
leave
jle
int3
loopne
jo
push
sahf
sti
jmp
add
lea
ret
sub
sahf
inc
bound
or
and
and
mov
dec
pop
add
pop
rol
xor
or
mov
dec
insb
incl
and
xor
es
pop
mov
xlat
or
test
scas
and
lea
cmp
sbbl
imul
ja
mov
and
inc
mov
inc
or
add
ret
loopne
sbb
pop
clc
mov
stos
popa
add
loop
push
das
jp
xor
mov
sbb
lret
aam
popa
and
dec
add
and
adc
add
addr16
xor
aam
inc
dec
add
ret
loop
test
push
adc
popf
les
push
pop
cmpsl
loopne
inc
or
int3
pop
add
pushf
sub
push
iret
xchg
pop
xchg
adc
sbb
loop
mov
movsb
inc
or
sar
mov
out
mov
pop
mov
jae
mov
cmp
or
xor
add
cltd
icebp
popa
sti
xor
inc
or
push
into
loopne
test
add
js
repz
cltd
int3
lcall
mov
push
inc
int3
test
adc
mov
add
outsl
test
stos
sub
xor
push
movsl
test
add
rorb
mov
or
lock
cmp
inc
or
jbe
insb
loop
scas
or
or
adc
mov
push
sub
add
or
pop
dec
dec
or
or
inc
js
rcrl
fldl
cmp
push
inc
dec
pop
test
or
mov
adc
sub
jge
roll
or
mov
test
jmp
sub
push
pop
mov
push
or
lcall
mov
cmpsb
adc
inc
sub
or
inc
sub
dec
add
aaa
aaa
jge
push
mov
push
dec
mov
rclb
dec
mov
pop
push
inc
cmpb
dec
mov
pushf
cmp
jge
inc
jae
addr16
jmp
add
repnz
or
mov
dec
inc
and
movsb
xlat
sub
dec
and
and
sbb
mov
cmp
mov
sbb
add
test
push
add
sub
add
int
adc
add
and
or
aaa
cmp
mov
fs
add
xchg
pushf
jne
bound
add
jb
adc
mov
add
or
add
ss
mov
imulb
sbb
cmp
stos
mov
push
shrl
test
in
clc
testb
or
push
add
jle
push
jmp
sti
xchg
sbb
xorb
adc
and
enter
adc
inc
sbb
push
ret
xor
inc
xchg
imul
inc
hlt
mov
adc
cmp
inc
pop
add
and
mov
cmpsl
aad
add
iret
mov
imul
xchg
mov
das
mov
test
add
jmp
cmpsb
jbe
add
clc
jbe
neg
aam
pushf
inc
xchg
add
xchg
xor
outsb
jp
inc
cs
mov
fisttpll
call
xchg
and
outsl
xchg
and
adc
and
mov
rolb
inc
pop
xor
pop
or
sub
jmp
out
hlt
add
adc
cmp
add
inc
pop
and
jo
and
pop
int
push
jle
test
add
mov
pop
dec
dec
dec
jecxz
rolb
cmpsl
mov
stos
push
test
sub
fcmove
mov
or
subl
sbb
mov
and
inc
imul
and
das
test
xchg
mov
push
or
fsubr
sbb
dec
repnz
sub
sub
sub
ret
mov
add
add
push
xchg
std
fmuls
cmp
rolb
and
out
xor
push
js
inc
push
xor
jg
jg
adc
mov
das
and
orb
sar
push
sbb
mov
push
dec
lahf
je
aad
movswl
xchg
lea
or
dec
pop
mov
roll
mov
add
or
sub
shr
sub
or
fiaddl
mov
sbb
dec
aaa
test
cmp
imul
sbb
sub
lods
mov
inc
lea
ret
addr16
stos
pop
pop
sbb
or
add
test
and
dec
mov
cs
cmp
cmp
lock
or
pop
and
mov
sahf
icebp
or
fwait
jne
test
cmpb
ret
pop
jge
mov
ret
shl
push
bnd
or
mov
xchg
pop
leave
rorb
inc
aad
xchg
fistpl
add
mov
rcll
cli
fiaddl
daa
xchg
mov
xor
addr16
fs
orl
jnp
shrl
push
bound
call
daa
ret
pop
aam
pop
mov
push
rcrb
dec
or
xor
in
les
push
cmpsb
add
shll
mov
pop
dec
xor
js
fisubl
push
sbb
mov
cmp
inc
and
addr16
pop
fcoms
rorl
leave
test
sub
xor
lahf
xlat
pusha
sbb
out
outsl
add
mov
mov
or
xchg
jne
insl
cmp
andb
sbb
sub
js
inc
adc
add
and
into
and
dec
or
packssdw
out
push
adc
ret
xor
xor
pop
ret
adc
je
pop
outsl
mov
lret
popa
addr16
jmp
push
push
xor
pop
lock
xor
in
mov
notb
es
jle
rclb
adc
or
ret
cmp
adc
lds
mov
bound
jne
testb
add
push
inc
add
jle
jae
cmp
cmp
push
jne
cld
add
add
fs
int3
aad
add
inc
rclb
mov
fisubrl
pop
pop
jl
mov
insb
and
aas
xor
mov
xor
jecxz
insb
sbb
xor
popa
pusha
mov
or
les
jo
xchg
mov
enter
dec
push
mov
mov
cltd
test
xor
adcl
movsl
push
aad
lret
rol
inc
inc
loope
das
push
prefetch
adc
add
pop
add
mov
xlat
lcall
mov
xchg
fcmovne
and
pop
mov
cmc
sub
push
in
fistl
nop
int
or
rorb
aas
insb
ret
xchg
sbb
int3
outsl
das
adc
cmc
sub
dec
mov
pop
xor
inc
lcall
rol
adc
dec
dec
daa
or
dec
nop
pop
add
dec
stos
mov
outsl
xchg
sbb
mulb
jge
jo
sub
mov
sub
dec
mov
lea
outsl
ret
sbb
xchg
mov
cltd
jb
push
sub
ficoms
push
xor
or
lea
test
adc
xor
outsl
mov
mov
cwtl
hlt
or
dec
dec
push
movsl
jo
aad
push
inc
add
push
cld
js
xor
movb
inc
add
and
fwait
xor
add
sub
or
scas
cld
sub
fdivrl
or
call
pusha
xchg
add
lret
jbe
sub
pushf
and
push
rcr
mov
les
mov
xor
jns
stos
in
lcall
cmp
xchg
je
idiv
dec
cld
int3
push
clc
fstl
stos
lock
and
sub
hlt
push
mov
and
inc
fs
cmpl
jno
xchg
push
adc
push
cmpb
or
dec
ret
and
inc
mov
add
inc
mov
imul
and
and
inc
or
leave
pop
cmp
jg
sbb
push
dec
inc
mov
and
fisubrl
mov
aas
xchg
pop
and
sub
pop
leave
inc
jb
inc
or
bound
xchg
arpl
push
shlb
pop
sub
xor
out
sbb
cmp
cwtl
push
push
ficomps
mov
xor
mov
fsub
daa
lea
loope
cmp
adc
push
xchg
movl
jmp
or
fwait
out
in
xchg
xlat
scas
ja
in
xchg
and
or
ror
fldl
fcompl
add
leave
outsb
fiadds
push
xlat
arpl
inc
mov
xorb
dec
add
and
add
addl
fidivrs
add
insl
cmp
push
add
test
push
dec
loopne
inc
mov
fisttpl
dec
cmp
or
or
adc
sbb
outsb
sahf
ja
nop
xor
xor
and
test
fwait
outsb
pop
inc
aas
and
add
mov
dec
je
out
insl
mov
add
jmp
bnd
in
aam
int3
pop
fs
jecxz
aaa
xchg
outsb
rorb
add
lds
stos
les
rolb
ficoml
dec
push
push
dec
push
and
mov
mov
push
iret
ficoml
sbb
loopne
push
add
or
pop
je
add
add
and
es
adc
insl
cltd
out
pop
out
lods
sbb
imull
sbb
jnp
jne
mov
repnz
cmp
sub
and
pop
push
add
or
and
cwtl
push
dec
or
hlt
aad
inc
loop
lea
mov
les
rorb
mov
adc
mov
mov
sbb
ret
mov
mov
push
push
out
sbb
inc
movsb
fcmovnu
jne
xor
jnp
add
sbb
fwait
sbbb
mov
inc
sbb
push
mov
sbb
lret
lods
xchg
cmp
mov
or
aad
dec
cmp
es
dec
pop
and
xchg
jbe
xor
sarb
and
cmpsb
xor
xchg
sbb
out
jno
sub
inc
jg
rorb
dec
dec
out
ja
xor
inc
scas
shlb
and
std
xor
bound
hlt
or
dec
sbb
or
adc
push
popf
mov
in
test
gs
mov
cmpsl
popf
cmpl
jmp
sbb
mov
sub
in
jae
mov
imul
ds
andl
arpl
lret
jno
outsb
push
jb
sbb
hlt
add
test
sub
out
stos
cmpb
xor
loope
cld
lcall
and
shlb
sar
pop
pop
call
aad
repnz
sbb
repz
rorb
repnz
push
sti
je
mov
shlb
dec
or
mov
adc
dec
push
scas
fsubrs
dec
adc
mov
es
push
jnp
into
enter
shl
push
pop
cwtl
rcl
adc
insl
hlt
pop
push
out
inc
popa
in
jl
xor
mov
jl
cmp
add
add
out
sbb
hlt
sti
push
inc
push
xor
loopne
and
mov
out
xlat
cmc
mov
adc
outsl
xor
ds
sbb
sarl
mov
add
pop
sub
jbe
lahf
pop
in
cmp
xor
xor
jo
aam
cld
fsubr
cmpsb
jno
lods
pop
push
mov
sti
pop
ss
jmp
xchg
sahf
cld
ja
out
mov
inc
cmp
setg
jmp
push
faddl
insb
inc
add
sbb
push
dec
cmp
setle
dec
imul
inc
inc
es
adc
cmpsb
dec
inc
dec
adc
add
push
imul
add
arpl
loopne
add
rorb
mov
inc
lds
lods
cmp
ljmp
or
out
popa
inc
fs
je
adc
dec
pop
lcall
or
dec
jnp
aam
mov
sbb
shlb
ret
fcmove
inc
loopne
jl
shll
aaa
pop
notl
sbb
out
imul
popa
mov
adc
adcb
out
sub
rorb
push
aaa
sbb
notb
hlt
jmp
xorl
xchg
sbb
dec
pop
outsb
aad
daa
and
std
or
xor
leave
add
dec
call
sbb
cmp
push
dec
popf
movb
and
in
pop
xchg
ret
cmp
call
mov
adc
add
lret
cmp
mov
sub
aaa
loop
loopne
jl
push
xchg
sub
movsl
loop
cmp
fs
or
loope
xor
pop
add
pop
add
jg
in
jnp
lock
scas
int
mov
jle
es
push
lcall
ret
jmp
xor
add
jle
psubq
sub
lods
or
fs
add
rorl
fsubr
push
sbb
adc
test
testl
pop
int3
ja
int3
mov
mov
adc
stos
cmp
imul
jo
lods
or
cli
mov
or
xchg
and
cli
data16
pop
lcall
sti
push
mov
xchg
jns
lret
fucomip
stos
push
pop
in
popa
in
push
dec
sub
xchg
push
xlat
sbb
add
push
dec
lods
pop
and
sbbl
fidivrl
and
sbb
mov
je
jbe
sub
out
sbb
subl
pop
cli
sbb
cmp
jne
push
mov
cmp
mov
fs
xlat
pushf
add
xor
add
es
jo
cmpb
mov
lds
inc
xchg
cmp
push
sahf
cmc
les
dec
or
dec
push
cmp
insb
je
xchg
add
sub
idiv
cmp
jge
push
sbb
inc
lods
fsub
lret
sahf
pop
sarl
iret
leave
sbb
aam
pop
clc
add
and
pop
inc
loope
xor
push
hlt
and
pusha
in
mov
int
into
ret
shlb
jne
push
rclb
filds
shlb
push
push
mov
lock
pushf
xor
or
or
pop
sbb
sti
sub
cmp
jne
push
jp
mov
or
test
xor
push
bound
lock
mov
jae
pop
cmpsl
sbb
and
adcb
push
cmp
rolb
xchg
pop
xchg
pop
mov
xchg
mov
and
push
enter
cmpsl
jmp
pop
adc
add
orl
add
inc
xchg
shlb
cmovbe
not
std
xchg
cmpsb
bound
iret
and
push
in
and
push
das
jbe
cmpsb
fbld
sbb
jb
xchg
xlat
test
ja
scas
mov
jge
aaa
and
pusha
push
out
mov
call
imul
push
mov
jne
push
ficoml
es
jb
test
xorl
in
ljmp
movsl
and
in
pop
fnstenv
xchg
lret
or
mov
jmp
sub
mov
dec
sub
cmpl
pushf
push
sub
dec
adc
mov
xor
add
pop
xor
pushl
jo
andl
mov
sbb
in
popa
sub
inc
push
cs
pop
and
cltd
aas
adc
jecxz
shll
dec
jne
mov
pop
jbe
push
dec
mov
sub
sub
mov
mov
jmp
mov
out
pop
mov
adc
push
push
xchg
test
out
dec
add
jno
jmp
pop
xor
lea
dec
lcall
into
jg
push
mov
add
add
dec
insb
aas
loop
outsl
xor
js
and
dec
xlat
xchg
dec
xchg
rolb
rorl
rcrb
inc
cmpsb
hlt
sbb
or
in
fsubrs
das
jne
test
sbb
and
xchg
pop
or
adc
repz
push
shll
dec
mov
adc
push
repnz
adc
movsb
mov
adc
imul
stos
add
push
mov
or
iret
fwait
cmp
mov
aas
jmp
adc
jmp
lds
jbe
lea
filds
xlat
and
lods
test
arpl
daa
shlb
and
adc
pushf
pop
cmp
jle
clc
call
jmp
lock
inc
inc
adc
sub
mov
je
add
sbb
out
xlat
jne
inc
mov
dec
in
daa
xchg
call
stos
pop
lods
push
arpl
ret
jle
insl
sbb
mov
outsl
popa
inc
add
or
fcomps
les
cmp
pop
mov
push
push
push
and
sub
dec
loop
add
and
sbb
dec
push
dec
insb
fidivrl
mov
adc
xchg
outsb
or
fbstp
sbb
js
orl
bound
inc
nop
cmpsl
cmp
ret
add
sub
popf
es
xchg
xchg
add
inc
dec
mov
xchg
or
dec
fmuls
push
lea
hlt
or
jmp
pop
sub
je
orl
mov
adc
and
call
movsb
stos
mov
sarb
or
inc
pop
inc
dec
rcll
dec
adc
dec
add
mov
jle
fs
and
or
adc
fldl
ficompl
push
mov
xor
inc
mov
push
pop
test
and
dec
cmpl
popf
add
out
incl
xor
pop
pop
pop
xchg
or
adc
cwtl
add
xchg
nop
aam
testb
sub
pop
add
and
jmp
sahf
test
inc
jmp
dec
lcall
fwait
add
or
pop
ret
nop
movl
adc
xor
jae
bound
clc
fwait
dec
xchg
push
inc
je
and
pushf
stc
mov
aas
push
sbb
sub
adc
cwtl
add
xchg
inc
push
out
mov
push
mov
sti
mov
jl
insl
and
sub
fdecstp
add
fdivs
bound
sub
cwtl
les
test
sub
iret
test
dec
pusha
outsb
clc
ret
ss
or
insb
pop
inc
inc
pushl
inc
inc
fwait
push
lods
inc
int3
and
inc
mov
and
stc
lcall
arpl
insb
mov
add
jne
cwtl
jge
into
pop
and
mov
mov
notl
inc
int
push
dec
jnp
mov
xchg
repz
fidivrl
mov
or
inc
mov
movsl
push
mov
and
pop
leave
cmp
fmuls
stos
mov
cmp
test
das
mov
aaa
loop
xchg
clc
sub
cmp
loopne
jl
cmpb
mov
pop
or
inc
popa
jne
loopne
lea
or
jle
pop
pop
icebp
jg
mov
and
jnp
adc
cld
and
in
mov
push
jl
inc
or
addl
cltd
clc
shlb
jo
adc
mov
es
lcall
andb
sub
xlat
imul
int3
rorb
adc
xlat
add
or
and
rcrl
or
sub
das
inc
or
and
mov
fldl
repnz
lock
jmp
push
and
in
idiv
adc
lahf
sbb
xor
push
lahf
mov
repz
and
xchg
jnp
push
in
pop
pop
add
cli
inc
dec
js
leave
or
dec
inc
adc
shlb
lea
ja
mov
inc
test
push
mov
lea
jbe
outsl
je
out
and
sbb
mov
mov
scas
mov
imul
nop
cmpl
arpl
jg
mov
and
and
or
test
dec
sub
clc
cmp
adc
adc
or
dec
xor
jmp
xchg
daa
mov
mov
pusha
nop
push
popa
mov
mov
dec
mov
push
sti
nop
and
xchg
push
inc
nop
or
sbb
push
nop
inc
mov
xor
mov
nop
mov
loope
dec
fsubrp
or
aaa
hlt
sub
out
mov
inc
nop
cwtl
idiv
adcb
pop
data16
bound
sub
js
mov
je
mov
push
arpl
inc
mov
push
aas
dec
cld
cmp
mov
add
mov
cltd
sub
scas
iret
imul
add
adc
popa
daa
add
inc
ret
adc
out
pop
mov
sub
ja
add
inc
sbb
fldcw
lahf
out
or
push
pop
out
xor
xchg
add
push
daa
adcl
clc
movsl
sub
fcompl
inc
lods
or
mov
sub
aas
push
lods
push
pushl
lods
adc
add
cmp
add
jno
add
push
inc
add
xor
add
jp
mov
inc
mov
and
gs
cltd
lock
or
xchg
adc
lahf
mov
popf
mov
std
cmpl
pop
pop
push
jne
outsb
or
shll
dec
decb
into
adc
rolb
sub
mov
mov
enter
push
cmpsb
adc
gs
push
push
mov
fdivs
pop
xor
fbstp
mov
sub
ret
or
outsl
roll
mov
pop
lods
sbb
adc
or
sbb
pop
jmp
push
mov
cwtl
or
daa
push
mov
cmpb
pop
adc
dec
add
dec
je
push
pop
lcall
add
jo
or
adc
out
xchg
loopne
sbb
popl
pop
sbb
xchg
cs
and
imulb
jmp
outsb
cli
inc
sbb
jne
addb
adc
into
cmp
test
and
mov
stos
cmpl
jo
jae
mov
push
adc
jmp
dec
imul
push
cld
add
dec
es
sub
or
and
movsb
or
clc
xchg
xchg
jecxz
cmp
jne
xor
les
xlat
imul
aaa
pusha
xchg
mov
test
push
rcll
arpl
mov
or
pop
pop
dec
adc
imul
fcomp
rorb
add
fldenv
pop
imul
sbb
addl
add
imul
cmp
push
repz
pop
xor
popf
xchg
sbb
je
cwtl
pop
mov
clc
or
sbb
insl
inc
adc
sub
mov
add
adc
or
mov
or
inc
pusha
dec
add
mov
dec
adc
push
pop
xchg
test
fstps
adc
xchg
int
rclb
rdtsc
add
dec
mov
inc
add
and
adc
inc
rorb
inc
es
cwtl
jae
and
xor
and
ret
je
inc
push
adc
pop
aaa
je
inc
xor
pop
enter
pop
dec
ss
daa
or
scas
adc
sbb
sbb
xor
or
ret
adc
jno
cmp
pop
js
mov
cwtl
movl
pop
movsl
stos
adc
xor
add
sub
cmpb
add
push
cmpl
push
xchg
lods
push
mov
sbb
iret
es
mov
or
call
dec
pop
lea
add
sub
pop
pop
add
adcb
roll
nop
inc
dec
mov
dec
inc
je
test
xorl
mov
push
fiadds
cwtl
gs
mov
loope
in
movsl
lahf
jbe
cmp
push
push
mov
push
xchg
cmpsl
shlb
add
push
dec
mov
adc
clc
add
and
popa
movsb
pusha
stos
leave
out
js
jge
push
mov
xchg
fldenv
mov
aad
test
or
xor
jb
dec
or
out
fmulp
adc
test
jns
mov
push
jbe
fwait
inc
test
cmp
dec
sbb
les
pop
cmpsl
rorl
lods
xor
push
xchg
addr16
xchg
call
test
stos
je
xor
adcl
pinsrw
les
dec
pop
ja
jp
pop
sub
repnz
add
xorb
add
mov
daa
mov
pop
negb
in
xor
xorl
mov
pop
aad
sbb
mov
xchg
pop
setae
or
cmp
cmc
xchg
aas
xor
repz
inc
dec
push
and
js
sbb
mov
rol
xor
xchg
sub
jecxz
push
mov
dec
jmp
dec
pop
cs
add
sbb
sti
fmull
rcrl
enter
lods
push
add
mov
jl
jnp
sbb
cmp
xchg
push
adc
lods
lahf
popf
call
xor
and
dec
mov
add
jns
add
das
pop
mov
sbb
pop
aaa
inc
aas
add
in
cmp
ret
sub
aad
hlt
push
adc
roll
or
popa
inc
inc
sbb
iret
shl
push
adcb
add
pop
fldt
daa
sbb
mov
dec
cmp
push
xchg
or
mov
xor
iret
es
inc
nop
ss
pop
daa
aas
pop
int3
test
call
mov
jg
daa
aas
xor
or
dec
xchg
push
and
cld
and
sub
xchg
movsb
adc
adc
or
scas
sbb
push
sub
mov
and
fisttpll
xorb
nop
pop
pop
pop
les
je
sbb
jl
ror
pop
fs
add
xor
es
popa
adcb
inc
add
loopne
sbb
daa
pusha
pop
or
add
sub
mov
pop
push
stos
sbb
iret
nop
inc
cs
sbb
push
rol
fadd
gs
fdivr
lea
xchg
xchg
jne
daa
aam
inc
call
lahf
inc
adc
push
adc
or
dec
sub
xchg
or
inc
test
outsl
ret
adc
inc
rorl
pop
inc
xor
mov
pop
mov
cmp
inc
ret
call
adc
adc
cs
inc
cmp
inc
pushw
dec
or
push
mov
jecxz
test
test
xchg
stos
ss
in
js
sub
mov
pop
movswl
cmpl
jmp
fimull
add
jmp
adc
push
xor
fldt
sbb
mov
push
pusha
adc
push
xor
xchg
mov
fs
push
daa
or
dec
cmp
push
pop
movb
xor
add
push
xchg
add
add
xchg
popa
cwtl
pop
clc
cmpl
dec
ret
cld
mov
cmp
inc
pop
je
pop
mov
cmp
test
dec
xchg
fcoms
xor
sub
jne
add
xlat
pop
push
iret
mov
jno
xchg
xchg
adc
add
mov
push
push
inc
sub
out
inc
in
jle
xor
push
push
add
adc
popf
inc
cmp
and
orl
mov
bound
in
cwtl
mov
shlb
dec
scas
mov
inc
xchg
lret
rorb
cmp
lret
or
adc
adc
ret
cmp
stos
mov
mov
sub
aaa
rcrl
mov
imul
loop
sarl
dec
pop
rolb
test
mov
loop
fimull
ja
aaa
ret
pop
andl
pop
loopne
jle
mov
iret
rcll
into
xlat
push
hlt
jmp
fcomp
adc
cmp
fwait
mov
adc
cld
sub
pop
cmp
outsl
mov
xor
divl
loope
je
dec
test
out
mov
jge
addr16
add
dec
or
add
xchg
cmp
shrl
sbbb
or
mov
stos
lds
test
mov
pop
cs
sbb
sub
dec
fistps
or
push
mov
out
loop
push
xor
fiaddl
lret
daa
adc
ror
shrb
push
cmpsl
mov
mov
lret
inc
xchg
jne
mov
dec
xorl
rcll
fcomip
out
push
mov
and
lahf
in
je
mov
pop
loopne
sub
jle
push
popa
push
push
andb
push
popa
cmp
push
pop
sahf
mov
add
mov
sub
or
imul
lea
ja
inc
push
xor
test
fists
add
or
outsb
scas
mov
sahf
add
push
inc
and
cmp
sub
adc
add
adc
iret
xor
push
pop
push
mov
cmp
test
sti
xchg
xchg
lock
and
cmpsl
mov
bound
or
shlb
inc
sub
int3
ret
sarb
pop
cmc
or
adc
push
ds
inc
ret
and
addr16
aaa
or
dec
adc
adc
push
and
dec
nop
adcb
add
and
or
or
daa
ja
pusha
ljmp
je
out
dec
bswap
and
lret
fcoml
mov
dec
nop
pop
cmp
xor
sbb
cmc
push
mov
inc
loope
iret
add
cmp
in
test
or
add
sbb
xorl
mov
dec
sbb
push
or
push
shrb
or
aam
aaa
pop
or
dec
scas
push
iret
ljmp
add
and
aam
mov
adc
nop
and
loop
jae
rcll
in
sbb
shrl
and
or
jge
aaa
and
adc
orb
in
inc
adc
inc
sub
arpl
push
inc
sub
or
add
das
insl
pop
movsl
mov
rolb
and
jle
mov
dec
add
adc
test
jne
push
and
push
rcrb
push
fsts
jo
rol
sbb
jle
popl
sub
or
icebp
sub
sbb
mov
or
je
adc
bound
adc
add
pop
inc
outsb
or
or
adc
cmp
pop
mov
in
pop
sub
or
loope
jl
stos
push
xchg
pop
push
sbb
add
ret
and
out
add
xor
aam
out
pop
sbb
cmp
lods
or
faddp
xor
jle
movb
jle
jle
test
mov
ret
lds
out
jns
cs
jge
sbb
movsl
subl
test
jne
popf
push
pop
cmpb
adc
xor
fdivp
xchg
inc
sub
lret
cli
in
or
inc
fcmovbe
xor
test
aas
les
inc
inc
loope
ficoml
and
les
cwtl
dec
sub
test
movb
imul
rcrl
das
es
int3
call
loope,pt
jo
lds
mov
mov
and
cmp
cmp
inc
sbb
push
sbb
xchg
add
push
sbb
pop
pop
cltd
jae
inc
shl
fyl2x
jg
aad
mov
popf
cmovp
push
mov
pop
mov
fdiv
icebp
ss
mov
psraw
pop
mov
add
loop
inc
mov
call
push
cmpsb
shlb
cmpsl
lret
jns
jo
add
shrb
dec
lds
xor
pop
cwtl
jbe
das
dec
enter
sbb
ret
ret
js
lea
or
andl
dec
ljmp
test
push
pop
jo
mov
outsl
push
jmp
idivl
insb
lods
loope
push
xor
mov
jle
scas
or
cmp
pop
je
dec
and
pop
pop
std
push
ret
jle
cmp
add
das
in
pop
sbb
ret
or
push
xchg
sarb
popa
daa
pusha
jmp
pop
push
adc
xor
idivl
loope
cmp
syscall
xor
push
out
jnp
add
prefetch
or
fcoms
cmp
jb
dec
cmp
cli
pop
lret
jb
shlb
loopne
subb
push
jne
mov
add
push
dec
xlat
cmp
pop
ljmp
int3
and
xor
adc
hlt
mov
cltd
mov
pop
inc
inc
adc
adc
pop
mov
jl
nop
cmpsb
cmp
dec
ret
stos
pop
das
push
call
add
push
pop
fstpl
orl
add
clc
xchg
add
cmpl
fildl
movsb
lods
dec
add
jae,pn
lods
or
xor
xor
cmp
stos
xchg
mov
scas
inc
jecxz
sub
push
adc
pop
jmp
adcl
out
rcr
or
push
mov
loop
subl
push
or
xor
mov
adc
xor
sahf
lock
add
gs
push
pop
aad
adc
pop
xorb
pop
dec
push
iret
leave
xchg
dec
sbb
jmp
add
adcl
adc
mov
cmp
dec
leave
test
push
pop
iret
mov
add
add
jne
sti
aaa
aas
dec
xor
and
ret
daa
addr16
movsb
pop
mov
jl
sbb
je
sub
rorb
loope
push
subl
imul
inc
loope
add
sub
fmuls
mov
inc
rcl
les
inc
loopne
dec
push
mov
lea
pushf
push
movsb
sub
lds
adc
in
out
jecxz
call
icebp
rorb
xor
and
or
pop
and
dec
arpl
je
mov
mov
push
push
fwait
sti
nop
or
mov
xchg
nop
sbb
addb
cmpsl
popf
xor
out
push
add
add
mov
or
in
out
jmp
or
push
xor
push
enter
dec
ss
inc
or
cmpsb
loopne
cltd
push
and
fucomip
in
ljmp
sub
out
add
sub
insb
or
inc
and
inc
or
xchg
int
add
mov
test
and
or
xchg
rcl
push
rol
inc
hlt
dec
lods
adc
mov
sub
inc
cwtl
pop
shrl
loopne
cmp
push
inc
sub
test
fbld
jg
les
dec
ret
add
xchg
je
mov
pop
testl
dec
dec
bound
dec
test
mov
lods
sbb
daa
mov
jbe
xchg
xor
pop
popf
jmp
push
mov
fldt
jle
and
add
aad
add
addps
add
dec
jecxz
test
jl
inc
xchg
mov
sbb
jns
mov
std
andl
add
nop
xchg
mov
pusha
mov
aam
jo
ret
add
xchg
push
xlat
or
adc
clc
dec
shl
sahf
sbb
mov
push
mov
hlt
mov
cmp
or
jl
xchg
mov
dec
pop
ret
divl
nop
or
or
cmpb
out
xor
inc
ljmp
pushf
xor
fwait
push
pop
mov
jecxz
mov
repz
dec
icebp
and
dec
inc
fs
dec
mov
and
popf
subb
lea
push
dec
rcll
sbb
jo
fucomip
pop
or
push
sarb
push
aaa
pop
or
roll
sub
inc
sub
inc
sub
dec
lds
add
adc
in
test
hlt
movsb
sbb
and
jne,pn
imul
sarb
inc
mov
cwtl
sbb
pop
push
jl
andl
fimuls
jno
mov
bound
and
cld
repz
call
push
sbb
sub
call
cmp
fs
add
mov
sarb
data16
and
xchg
leave
lcall
iret
sbbb
adc
fildll
or
mov
arpl
roll
enter
test
push
outsl
xchg
mov
add
and
sahf
push
iret
cltd
hlt
movsl
or
xor
lock
xor
xadd
xchg
je
cmp
lock
fisttps
push
dec
mov
sub
pop
sub
inc
rclb
test
xchg
adc
xor
xchg
sub
adc
or
cmc
or
mov
jnp
int3
ds
arpl
wrmsr
lock
cmp
cmp
and
add
mov
fwait
loopne
movsl
xchg
jno
push
ret
jp
arpl
pop
push
adc
icebp
cltd
mov
call
add
cmp
xchg
sub
and
or
cs
cmp
out
push
add
push
xor
pop
jns
or
fcomps
xchg
cmpsl
jg
lock
mov
adc
test
xor
inc
shlb
add
jno
and
add
cmovbe
or
hlt
push
je
sbb
add
les
jmp
adc
or
or
ss
andl
clc
sub
adc
leave
adc
mov
inc
sub
dec
inc
cwtl
push
xchg
or
push
mov
jl
and
outsl
test
push
fistpll
inc
sahf
push
mov
pop
xor
and
mov
bnd
adc
jmp
sub
loop
jne
test
pop
mov
adc
hlt
jne
inc
loop,pt
movb
sub
push
pop
cmpl
xlat
sbb
add
sbb
fwait
pushl
pop
or
or
sub
sti
popf
dec
inc
addr16
lock
mov
push
pinsrw
push
add
adcb
adc
jle
ja
add
cmpb
es
into
inc
xor
mov
mov
mov
cmp
add
cmp
in
dec
cmp
js
push
mov
add
sub
pop
orl
aas
push
dec
rolb
das
xchg
mov
insb
add
mov
ret
lds
rorb
and
ret
add
mov
add
ret
or
push
aam
adc
add
mov
and
or
and
jo
int
pop
fcomps
dec
add
clc
and
push
clc
mov
inc
pop
rcpps
adc
mov
adc
hlt
pop
or
adc
je
push
add
xor
xchg
outsl
or
rcl
and
sqrtps
push
mov
or
shlb
and
cltd
lds
mov
dec
fidivrl
stos
inc
mov
hlt
stos
jmp
sbb
pop
push
dec
call
sub
mov
pop
inc
push
loopne
sub
sub
pusha
mov
adc
cmp
int
fldt
sub
push
clc
clc
lock
imul
mov
mov
xchg
and
xchg
dec
movsl
rorb
fmul
fmul
aam
adc
sub
popf
adc
mov
xchg
or
sahf
dec
in
push
lahf
add
pusha
stc
mov
sub
mov
test
cmp
rcr
push
dec
subb
or
push
pop
rolb
push
movb
jno
push
or
mov
pop
insl
arpl
inc
inc
xor
rcrb
rolb
insb
movsb
imul
cs
sub
sub
clc
or
rcr
arpl
notl
add
push
dec
mov
dec
mov
in
imul
mov
or
push
push
dec
or
shlb
mov
add
sub
push
aaa
mov
mov
jmp
inc
inc
ja
sub
adc
sarb
dec
dec
shlb
and
push
adc
outsl
das
cs
ficoms
pusha
mov
and
jle
adc
jp
dec
add
add
dec
sub
mov
out
cmpsb
mov
jo
push
adc
fmul
adc
ja
or
pop
mov
and
into
adc
into
inc
dec
add
add
mov
sbb
sbb
mov
dec
xchg
xor
xor
add
sbb
fsubl
dec
jnp
jb
fmull
or
scas
sbb
xchg
cmp
pop
mov
xchg
or
popf
aam
les
sbb
and
movsl
movsl
push
inc
cs
add
data16
push
add
mov
add
push
push
and
pop
repnz
or
pop
add
add
xchg
adc
in
lds
hlt
test
xchg
imul
xchg
jge
dec
or
enter
add
add
mov
or
inc
pop
add
add
aam
pop
mov
jb
xchg
add
mov
mov
sbb
unpckhps
pop
jns
mov
xor
sarl
sub
lret
push
dec
mov
pop
jnp
pusha
sub
lock
imul
int3
sub
and
cs
xlat
inc
jmp
movzwl
inc
mov
or
push
lock
ret
movsl
xor
loopne
outsl
or
cmp
shrb
dec
or
mov
add
cmp
adc
aad
push
clc
xchg
xor
xor
sub
test
fmull
dec
movsl
ror
hlt
add
and
cltd
icebp
pop
pusha
dec
sbb
cmp
mov
sbb
scas
clc
xor
sub
lcall
fiaddl
xchg
in
mov
dec
jbe
int
mov
pop
pop
sub
fwait
nop
gs
sub
mov
shl
and
dec
out
shl
sti
mov
push
mov
gs
fcmove
mov
dec
arpl
dec
sbb
mov
js
mov
imulb
or
fldenv
cmp
push
adc
enter
pop
add
inc
or
jns
insb
add
sub
gs
mov
je
insb
mov
subl
pop
lcall
inc
outsl
repnz
adc
add
sub
sub
jnp
rcl
mov
lea
pop
imul
or
dec
cmp
cmp
aam
or
imul
xor
and
or
add
pop
adc
fldl
cmp
sbb
push
fmul
add
test
out
inc
adc
inc
adc
sub
xchg
dec
or
or
test
fsubrp
cs
rclb
xchg
xorb
ds
movsl
xor
cmp
mulb
into
enter
test
test
or
pop
xor
orl
or
je
and
fucomi
ret
popa
pop
dec
cmpsl
cwtl
add
lods
push
push
xchg
inc
lds
xor
aas
mov
test
cvtps2pi
cltd
xor
pop
add
adc
in
push
imull
mov
ret
js
push
add
pop
pop
movsl
pusha
mov
loope
inc
or
push
testl
xor
sub
lcall
add
arpl
and
test
lahf
cwtl
cmpl
mov
adc
aad
popa
adc
xor
adc
adc
jle
jecxz
filds
add
inc
xchg
jmp
sbb
outsb
stc
test
xor
aas
add
inc
xor
cmp
test
adc
loope
jp
pop
cmp
fiadds
mov
scas
fsubrs
add
add
fwait
test
scas
mov
xchg
movsb
repnz
ljmp
pop
js
mov
call
inc
daa
mov
sbb
ljmp
outsl
inc
cs
fwait
rolb
test
push
xchg
dec
sti
adc
hlt
fisubrs
outsl
mov
dec
hlt
je
addb
scas
sub
jno
mov
sbb
push
lahf
lcall
jo
mov
or
movsl
mov
call
insb
ljmp
xchg
push
stos
push
lods
decl
mov
pop
and
aam
push
pop
in
cmp
inc
and
insb
add
mov
sub
add
inc
sub
test
movsb
sbb
scas
insl
cmp
loope
or
dec
cvtdq2ps
out
test
xor
jns
loopne
addr16
add
pop
fiaddl
movsl
popf
or
mov
push
add
cmpl
sub
orb
aaa
into
mov
jbe
push
or
imul
sub
xlat
nop
sbb
cmpb
dec
xchg
and
add
int3
subb
push
jno
mov
xchg
and
inc
and
xchg
adcb
inc
or
and
mov
bnd
jne
pop
hlt
cmp
adc
mov
xor
pop
jmp
cli
mov
add
dec
enter
adc
pop
ss
call
pop
dec
call
or
and
mov
je
je
add
shll
adc
cs
lods
test
mov
or
ret
andb
out
inc
adc
xchg
int3
push
je
lahf
in
cmp
jge
cmpl
clc
jo
rcll
in
daa
pop
das
sbb
cs
dec
sbb
or
outsb
mov
ret
cwtl
inc
frstor
add
stos
dec
cmp
call
ds
push
xor
inc
rcrl
repz
cmc
mov
dec
imul
stos
mov
loopne
iret
lock
adc
rolb
xor
dec
mov
jp
pop
jne
xchg
or
mov
add
orl
push
or
mov
adc
out
in
imul
mov
dec
mov
add
pop
arpl
push
mov
loopne
add
popa
in
inc
loopne
out
je
lods
popa
dec
and
sub
push
and
pop
inc
inc
rol
cld
dec
adc
push
js
sub
iret
test
or
xor
call
mov
popa
inc
dec
fistpl
push
push
cld
in
test
hlt
leave
add
and
incl
add
out
movsb
push
rorb
data16
out
js
movswl
fwait
in
sbb
dec
xor
push
inc
push
push
cmpsl
cwtl
xchg
sarb
xor
xchg
inc
add
arpl
sbbl
out
sbb
sbb
inc
inc
adc
mov
orb
jo
test
cmc
mov
or
cmp
lock
push
or
jb
jg
dec
adc
mov
mov
test
mov
scas
popa
iret
mov
pop
cmp
jb
loopne
or
push
js
sbb
jle
inc
orb
mov
pop
stos
add
inc
stos
lret
fimuls
adc
mov
cmp
je
pop
inc
movsb
mov
mov
pop
sbb
ret
lret
je
call
mov
xchg
xorb
pop
xor
xor
xor
lock
adc
mov
pop
in
mov
pop
and
or
lods
outsl
and
insb
xchg
mov
aas
mov
pusha
mov
aam
dec
mov
xor
stos
lahf
xor
pop
movsb
roll
movb
push
out
ret
cmpb
lods
xchg
pop
ja
inc
pop
enter
add
test
jp
lds
add
jbe
pop
inc
xchg
out
les
andb
cmp
aaa
rolb
orb
daa
mov
fs
popf
call
dec
popf
dec
and
inc
scas
movl
pop
or
stc
or
push
inc
je
push
mov
jle
cmpb
or
adcb
xchg
sub
inc
mov
cltd
push
lods
add
movsl
inc
loopne
inc
pusha
clc
fstpt
fmuls
sub
adc
rcll
mulb
repnz
or
incl
and
sbb
inc
jl
pop
mov
mov
out
dec
cmp
push
pushf
outsb
mov
cmp
lahf
xor
ret
push
add
sbb
ds
adc
leave
mov
pop
mov
movsb
jns
rolb
mov
cmp
insl
jae
sbb
sbb
cmp
jnp
and
cmp
add
push
mov
push
loope
xor
xor
sbb
adc
push
imul
or
inc
stos
and
fildl
fs
push
mov
lods
mov
fs
jne
enter
cmovo
dec
jne
into
inc
and
fadd
mov
ja
sub
mov
repz
lcall
fwait
jbe
jg
jl
stos
test
xchg
sub
jmp
aam
ljmp
adc
and
push
add
inc
loopne
sbb
sub
jecxz
adc
mov
jae
pusha
or
fidivrs
outsb
add
in
adc
adc
pop
imul
mov
test
lret
pushf
je
jp
aad
pop
pop
push
adc
mov
cmp
add
daa
or
adc
add
movsb
pop
pop
lret
pop
lea
stos
xor
ret
add
sub
push
ss
imul
mov
je
gs
jle
dec
cmp
hlt
out
mov
add
mov
test
inc
cmp
and
mov
bswap
fidivl
ret
dec
or
mov
pop
mov
adc
pushf
dec
mov
mov
scas
movsb
pop
cwtl
adc
pop
add
test
dec
push
add
mov
adc
adc
sbb
jp
fwait
subb
pop
push
adc
mov
cmp
push
lock
lods
inc
decb
out
and
sbb
pop
lock
push
xchg
adc
push
xchg
jge
jne
push
repz
cmpsb
ret
mov
and
in
and
jnp
adc
push
push
inc
push
je
clc
loope
fs
inc
mov
adc
pusha
xor
push
dec
fiaddl
ds
sbb
xchg
jo
loopne
lret
pop
ret
adc
inc
data16
push
scas
mov
jae
adc
inc
cld
mov
shlb
lods
js
int3
and
mov
int
idivl
fs
cmpsb
pop
or
and
jle
fiaddl
popf
int
cwtl
inc
or
fs
stos
push
iret
pop
pop
arpl
cltd
mov
cmp
out
jl
daa
rol
outsl
push
lock
adc
push
jg
push
dec
loope
in
movsl
add
xlat
popw
clc
add
xchg
loopne
pop
sbb
sbb
or
and
add
hlt
pop
shll
mov
push
jo
lret
pusha
and
clc
sub
sub
add
and
add
mov
sub
or
pop
adc
ret
mov
hlt
lds
jmp
pop
mov
or
loope
add
test
jle
shl
fs
movsl
shlb
mov
mov
lock
ret
cwtl
lcall
cmp
cmp
and
call
lea
aad
push
fisubrl
pushf
stos
mov
mov
xchg
or
fistpl
sbb
push
pop
dec
sbb
sub
rolb
fucomi
ljmp
add
add
addl
incl
push
dec
insb
push
xor
jg
or
icebp
adc
fs
addps
adc
and
fdivr
lea
or
test
mov
inc
scas
fstl
or
xchg
push
inc
adc
sbb
enter
sbb
fs
fsts
shrb
mov
xlat
pop
leave
les
icebp
lea
ud0
outsb
sub
aam
dec
pop
dec
adc
and
lods
jne
adc
ret
push
loope
stos
daa
icebp
and
mov
adc
insl
mov
jg
in
jbe
cmp
call
hlt
mov
adcl
push
lods
and
andb
aaa
rolb
adc
in
cwtl
cmp
sub
es
dec
out
fwait
mov
mov
inc
adc
jge
aaa
add
imul
shrb
pop
ljmp
pop
das
dec
mov
pop
rclb
nop
daa
and
xchg
mov
mov
push
rclb
orl
and
lcall
xor
inc
sbb
pop
es
pop
jecxz
or
ret
add
add
pop
cld
mov
pop
sub
xchg
data16
fisubl
add
call
fs
cs
rclb
or
mov
jmp
dec
int
pusha
vmread
inc
mov
inc
push
and
sub
add
xchg
jne
or
jmp
into
push
mov
mov
cmp
roll
xchg
shrb
or
nop
mov
pusha
fucomi
sbb
notl
dec
int3
imul
inc
dec
cs
ret
arpl
jg
into
mov
fadds
cmp
push
scas
daa
faddl
or
inc
inc
dec
and
sub
and
or
add
mov
xor
idivb
and
jo
fsubr
rolb
adcb
cltd
sbb
in
inc
dec
inc
les
add
orb
xchg
adcl
adc
stc
ja
push
lds
dec
xor
inc
loop
or
sbb
or
or
sbb
adc
xchg
clc
adc
or
pop
das
aas
pop
adc
push
mov
mov
shll
js
jmp
xchg
sbb
out
sahf
lock
inc
sub
mov
pop
adc
push
dec
adc
test
and
or
or
notl
sbb
pop
xchg
cmp
dec
rcll
adc
jmp
sub
sbb
xchg
xor
decb
faddp
mov
movhps
lods
pop
adc
cmp
inc
icebp
pop
negb
mov
clc
sub
or
ljmp
xorl
adc
in
xor
push
leave
cltd
add
add
fdivrs
add
cmp
shlb
iret
mov
mov
pop
or
data16
aam
clc
sbb
jle
jb
cmp
xor
push
cmp
rolb
add
aaa
mov
mov
sub
aas
sbb
adc
adc
add
jmp
insl
and
out
or
scas
add
pop
jg
cmp
jl
sti
pop
mov
ret
push
sti
adc
or
jmp
cmc
sbb
mov
push
sbb
lahf
in
pop
dec
insb
adc
pop
xchg
insb
cmpsb
test
xchg
loope
in
stos
or
push
jp
cmp
or
mov
xor
add
push
in
shlb
jae
andb
bound
dec
xor
dec
add
fwait
popl
ljmp
sbb
sbb
push
mov
mov
push
sub
xchg
add
lods
mov
push
daa
jne
jno
lock
dec
adc
insb
stc
mov
test
gs
mov
push
jle
jne,pt
adc
xor
jmp
aaa
xchg
adc
add
jno
sbb
repnz
and
test
xchg
pop
addr16
or
in
push
in
inc
mov
pop
mov
loopne
push
inc
lahf
add
push
xor
or
lock
mov
mov
xchg
or
enter
and
clc
lock
mov
lea
filds
sub
add
adc
cmp
and
xchg
leave
add
cmp
adc
jae
subb
and
insl
pop
icebp
aam
or
or
sbb
dec
daa
rolb
fs
jmp
sbb
inc
in
sbbb
es
or
inc
lea
pushf
sub
or
xor
inc
pushf
and
in
loopne
push
sub
adc
sub
movsl
imul
inc
inc
sbb
cld
push
pop
mov
cmp
movsl
bound
cmp
andl
in
cmpsb
mov
mov
faddp
popf
xor
sub
test
add
es
sarb
subb
add
outsl
test
add
pushf
or
stc
das
enter
jl
sbb
fsubs
js
or
jbe
sub
lret
dec
and
pop
cmp
add
loope
js
test
inc
mov
inc
aas
out
cmpsb
sti
jo
test
jp
add
inc
add
and
roll
inc
fsubl
push
jmp
push
adc
inc
sbb
mov
popf
ret
scas
xor
cmp
cltd
and
add
popa
leave
push
jae
dec
adc
ja
arpl
dec
aad
push
xchg
cld
lcall
retw
test
push
dec
dec
add
fildll
popa
inc
xchg
insb
xor
pop
inc
adc
ret
add
ret
popa
cmp
jne
sub
cmp
clc
in
add
sub
adc
xchg
cmpsb
adc
inc
call
sbb
rorb
rorb
in
push
pusha
inc
int3
scas
inc
pop
lock
pop
movsb
push
rcll
jmp
jnp
jo
shll
popa
test
dec
out
cmp
pop
lret
cmp
inc
fldcw
jecxz
and
push
test
push
or
inc
sbb
movsb
popa
and
xchg
sbb
push
bound
sub
cmp
ss
cmpb
mov
mov
sub
push
push
cmp
aad
or
adc
arpl
xchg
dec
das
push
fiaddl
pop
or
add
jo
das
add
mov
imul
add
jae
push
stos
dec
dec
push
das
adc
or
add
clc
sbb
adc
fcoms
popf
push
inc
pop
or
pusha
testl
or
jge
mov
add
inc
popa
iret
popf
lahf
xchg
lea
push
outsl
rol
sbbl
xchg
or
outsl
pusha
pop
repnz
dec
pop
sbb
cltd
shlb
icebp
push
cmp
into
xchg
outsl
sbb
or
sbb
push
pop
mov
sbb
imul
fs
jecxz
or
or
inc
xchg
add
add
ds
movb
enter
or
add
and
cmp
mov
cmc
mov
mov
loop
sahf
xchg
adc
push
jb
and
hlt
rorb
push
dec
sbb
pop
sbb
in
daa
pushf
nop
xchg
mov
and
add
lea
ret
in
sbb
or
stos
pop
aad
clc
jnp
push
sub
lods
gs
cmp
push
xchg
outsb
das
sbb
jmp
mov
mov
shrl
inc
push
xor
lret
adc
dec
pusha
out
divl
pop
push
dec
repnz
sub
xor
testl
fisubs
add
inc
or
push
dec
jae
call
daa
push
lods
sub
in
pop
or
scas
out
mov
repz
imul
in
pop
push
int3
sbb
loope
fwait
jmp
pop
sub
xorl
sbb
sub
mov
stos
sahf
and
outsb
roll
xor
test
outsl
inc
lock
mov
ja
in
add
fs
mov
mov
sbb
mov
adc
adc
or
xchg
and
xchg
push
jo
sbb
push
adc
lret
adc
sarb
mov
push
jl
xor
flds
jge
fmull
mov
push
pop
jecxz
jl
insb
lret
nop
add
ja
push
add
push
fldt
or
inc
dec
mov
sub
add
dec
inc
inc
and
add
mov
jo
push
test
inc
inc
clc
cmc
rcrb
cbtw
push
stos
jle
icebp
push
pushf
xchg
jo
aas
out
jo
ljmp
out
lods
out
mov
and
data16
add
dec
fs
jmp
imul
inc
ss
xchg
pusha
pusha
js
fwait
cmp
ja
inc
sub
or
daa
jns
dec
and
stos
jno
mov
inc
add
in
test
jb
jo
lcall
inc
mov
jmp
add
sub
lods
dec
jne
jp
lds
sub
mov
mov
insl
mov
pop
pusha
sub
hlt
in
cmpsl
push
pop
push
lahf
push
pop
jecxz
adcl
pop
imul
lahf
call
lock
mov
adc
fcomps
sahf
inc
mov
sarb
xor
inc
inc
dec
dec
jbe
rolb
mov
test
sub
adc
out
push
add
jne
pop
loope,pn
dec
jmp
adc
andl
sbb
aas
or
dec
addb
push
inc
mov
and
outsl
jmp
adc
out
and
pusha
stos
ss
push
pop
adc
add
xor
sahf
mov
icebp
mov
xchg
push
mov
rcr
jae
push
xor
clc
lock
push
imul
sti
push
fldenv
pop
and
pop
js
pop
pop
outsb
xchg
cmp
mov
in
xchg
imul
jb
jp
pop
or
push
push
pop
scas
lods
adc
mov
push
and
and
fld
xchg
out
subb
xchg
minps
sbb
das
insb
push
push
dec
jne
pop
pusha
and
ret
nop
ss
xchg
pusha
call
rorl
cmpsb
dec
or
loop
test
push
or
push
dec
mov
addr16
lods
and
sbb
and
test
pop
nop
pop
enter
jo
xor
aaa
mov
inc
inc
mov
inc
les
leave
lret
xor
fmul
inc
enter
mov
mov
jecxz
ja
cld
je
popa
xor
in
mov
fs
in
arpl
aaa
sub
adc
or
jecxz
mov
leave
jno
inc
mov
clc
cmc
xchg
cmp
jne
lock
clc
ret
or
add
rolb
fistpl
insb
sbb
stos
add
clc
push
std
mov
xlat
scas
push
mov
push
pusha
adc
add
rcll
mov
mov
jge
jle
jl
dec
jnp
push
xor
lock
ret
fnsave
inc
ss
es
push
mov
mov
and
fdivs
icebp
push
inc
mov
loope
hlt
add
push
and
rclb
xor
int
addr16
pop
push
push
mov
ficoml
js
test
pop
xor
out
cmp
aad
and
test
aas
aad
int3
pop
roll
mov
adc
jl
sub
cs
repz
jmp
adc
mov
xor
or
cmp
pop
and
popa
sub
sub
mov
mov
mov
fcomi
sbb
pop
xchg
and
sbb
pop
jmp
lret
inc
aaa
adc
popa
stos
lods
inc
pop
das
dec
das
push
mov
xchg
stos
loope
pop
xchg
or
bound
xchg
push
push
pop
ret
pushl
pop
je
jbe
lret
and
push
loopne
ret
push
pop
jmp
adc
iret
jp
mov
inc
push
mov
or
scas
popa
add
and
push
push
xor
rcrl
or
nop
mov
pop
out
mov
and
adc
pusha
pop
inc
lea
out
testb
pop
cmp
jl
or
dec
push
jns
addr16
xor
jmp
push
ss
xchg
or
xor
adc
lret
mov
in
jno
jge
add
xorb
and
insl
mov
add
sub
inc
add
adc
decl
jnp
sub
test
or
xchg
stc
adc
test
xor
insl
ss
dec
in
sar
jle
imul
mov
aas
xor
mov
dec
xchg
mov
cmpsb
jge
push
or
push
push
jae
pop
push
or
adc
cmp
mov
imul
lock
cmpsb
pusha
push
dec
inc
outsb
push
rolb
popf
hlt
icebp
insb
bound
sbb
adc
test
iret
je
jne
ret
mov
dec
cmp
push
popa
cmp
mov
mov
sbb
mov
push
sti
jmp
incl
push
adc
xor
popa
js
pop
adc
lods
out
or
bound
xlat
subb
xor
and
xchg
fs
inc
push
xchg
ss
mov
mov
mov
push
test
xchg
cmp
inc
add
int
and
aas
sbb
imul
test
ja
adc
pushf
clc
movswl
cmc
mov
jne
out
pop
inc
clc
inc
xor
push
xor
add
push
inc
sti
cld
push
cltd
cmp
enter
cmpb
loopne
sbb
mov
mov
loopne
cs
push
stc
loopne
inc
loopne
inc
inc
inc
mov
call
inc
dec
ret
push
jmp
or
add
sbb
cmp
jmp
add
insb
or
mov
pop
jo
jge
je
rolb
adc
xor
add
mov
and
mov
or
cmp
sub
add
pop
sub
jg
adc
pop
or
inc
mov
mov
sub
adc
dec
and
mov
out
jnp
les
xor
fs
push
push
or
ret
fisttpll
pop
in
push
cmp
inc
mov
sub
test
inc
adc
push
rcll
push
dec
adc
push
and
mov
pop
jge
hlt
cmp
lcall
movsb
inc
add
or
xchg
mov
sbb
push
jns
inc
popa
inc
push
mov
je
jmp
popa
faddl
cmp
pusha
cmp
clc
pusha
cs
int3
push
inc
in
sub
mov
movsb
dec
jmp
sbb
jb
mov
sub
adc
mov
inc
enter
inc
fs
repnz
add
mov
mov
fcompl
mov
cmp
aam
int3
out
in
sahf
sbb
push
pop
andb
jns
sarb
and
insb
push
mov
jo
in
sub
je
js
test
loopne
jb
xchg
cmp
adc
mov
inc
jecxz
dec
cmp
sbb
sbb
xchg
and
push
fdiv
incl
leave
dec
dec
inc
add
insl
faddl
jns
push
inc
gs
into
ss
icebp
pop
push
gs
subb
cld
daa
inc
lahf
and
jae
sub
cmp
insl
jo
mov
jns
das
imul
das
ss
add
jae
pop
mov
sbb
dec
pop
js
fidivl
adc
sbb
push
inc
push
popf
xchg
add
adc
inc
add
mov
adcb
push
int
inc
lods
jae
mov
rcrl
mov
insb
dec
push
popf
mov
test
push
sub
ret
mov
rcrl
orb
sub
ret
jmp
push
adc
and
jbe
imul
ret
mov
js
add
jo
cmp
je
loopne
popf
mov
lea
pop
sbb
mov
test
mov
sub
mov
sub
xor
and
test
inc
push
cmp
arpl
adc
rolb
movsl
lea
lea
leave
sarb
push
mov
inc
mov
and
or
dec
js
sbb
push
icebp
inc
idiv
loopne
enter
mov
adc
inc
and
or
loope
outsl
sub
xchg
cmpsl
fsubrl
lods
mov
jno
lock
jg
xor
cmp
adc
enter
xchg
xor
nop
fdivp
iret
xor
mov
nop
mov
add
inc
inc
ljmp
jl
and
insb
loope
test
or
dec
cmp
addr16
cwtl
pusha
add
sub
pop
pop
daa
adc
mov
das
aaa
ja
outsb
mov
or
pop
dec
pop
cs
imul
xchg
adc
cld
cmp
jae
mov
or
in
push
mov
fistl
pop
push
xchg
dec
xchg
imul
pop
mov
pop
adc
xchg
add
loop
fsubs
daa
fists
cltd
inc
pop
pushf
mov
pushf
les
fdivrs
xor
js
pop
and
jo
inc
pusha
pop
mov
enter
xchg
xchg
mov
test
enter
jmp
pop
xor
clc
out
adc
sarb
sahf
add
fdivp
push
adc
jno
fiaddl
xor
hlt
xchg
rorl
cmpsb
ret
sahf
or
sar
adc
mov
or
add
pop
cmp
and
mov
mov
adc
dec
push
bound
and
push
push
bswap
mov
inc
mov
sbb
sbb
push
add
push
imul
insb
mov
imul
cmp
mov
lods
aas
pop
xchg
popa
pushf
test
inc
sbb
add
xor
inc
test
int3
lea
inc
or
xor
aad
lock
sub
movl
adc
jae
dec
repnz
jle
cpuid
into
mov
mov
and
xchg
inc
dec
mov
vmread
loopne
out
stc
add
out
lods
aam
or
ret
push
mov
and
movups
add
je
mov
clc
cmpl
and
out
push
jo
cwtl
lods
shl
sahf
out
enter
sahf
out
sahf
fcomp
loopne
call
jge
push
cmp
pop
in
jb
ss
jg
test
pop
sub
mov
xor
cli
ds
aaa
popa
cwtl
out
and
sti
push
movb
ja
add
sbb
xchg
xor
pop
addl
jl
and
inc
pop
sub
aas
dec
decb
pop
mov
pop
mov
add
mov
lret
jmp
or
add
pop
jno
nop
mov
pop
lcall
pop
cmpl
fdivl
sbb
movsl
pusha
movsb
jnp
addb
inc
add
repz
cs
sti
xor
add
lret
sub
cmp
adc
fs
das
dec
popa
enter
scas
lock
adc
jns
sbb
adc
sub
or
xor
cltd
inc
sub
mov
xor
bound
pop
bound
inc
test
inc
roll
ja
and
insb
sub
jmp
xor
aas
inc
lahf
adc
sbb
sar
and
inc
mov
xor
push
add
push
ja
outsl
adc
push
adc
leave
xor
mov
adc
rorl
lock
or
cmpsl
cmp
es
and
sbb
fisubs
and
dec
jecxz
jge
push
cmp
jle
pop
ds
cmp
adc
mov
add
pop
movsl
mov
int3
pop
xchg
aas
cmp
adcl
pop
loopne
pop
add
jp
xchg
mov
inc
mov
outsb
or
adc
loope
mov
call
imul
mov
jae
cmp
mov
mov
addl
inc
push
or
dec
je
xchg
pop
sti
out
addr16
stc
push
and
sbb
aas
cwtl
lods
ret
inc
sub
cmp
jae
cmpl
fimull
inc
push
je
sbb
cmp
add
xchg
or
pop
inc
sbb
xor
push
push
fadd
pusha
lds
daa
mov
adc
movb
add
add
stos
movsb
sub
add
push
or
aas
add
push
sub
cwtl
add
mov
nop
add
and
and
sbb
dec
xorl
ss
and
imul
mov
push
push
push
icebp
mov
and
dec
mov
test
xchg
sbb
mov
es
mov
inc
dec
dec
shll
dec
dec
cmp
test
cmp
sub
shrl
xchg
nop
mov
pop
xchg
add
fucom
jle
jo
push
dec
scas
fmull
xchg
push
sbb
cmpsl
mov
adc
xor
inc
xor
push
repnz
ret
in
xchg
cmp
sbb
popf
push
sbb
add
popa
leave
add
mov
pushf
jns
sbb
pop
dec
jne
test
and
jle
out
dec
testl
clc
movsl
inc
xchg
sub
jle
cld
je
lds
roll
test
mov
js
popa
rol
sarl
lahf
xchg
inc
push
pop
inc
shrl
je
cmp
mov
movsl
fldt
sub
dec
cmp
mov
push
inc
mov
push
add
xchg
mov
ljmp
cmp
lods
xor
mov
out
adc
aad
pusha
add
stos
cmp
ror
js
int
sbb
cmp
je
jns
inc
sbb
pop
jb
in
push
cmpl
subb
cmp
je
jne
das
enter
mov
dec
or
mov
push
enter
inc
sub
mov
mov
mov
push
cmp
add
lds
mov
frstor
mov
andl
or
jecxz
inc
jge
icebp
test
and
dec
mov
out
js
dec
add
mov
dec
jp
aaa
mov
sbb
pop
movsl
mov
jmp
dec
imul
xchg
jg
sbb
or
add
mov
pop
inc
pop
or
push
mov
pop
loop
invd
push
js
pop
daa
lock
jb
mov
or
inc
out
out
movsb
jae
scas
mov
shll
push
cmpsb
xlat
sti
xor
and
movl
enter
scas
mov
test
call
inc
sbb
mov
jmp
and
cwtl
inc
xchg
sub
xor
xlat
sub
and
jnp
pop
jno
xorb
xor
jo
hlt
stos
xchg
scas
sbb
push
pop
mov
in
pop
call
add
pushf
dec
enter
lds
mull
lcall
fsubrl
adc
xor
movsb
inc
fists
or
scas
cwtl
mov
push
outsb
mov
movsb
shrb
push
adc
and
sbb
push
aaa
xchg
xor
in
pop
xor
mov
subl
dec
mov
inc
inc
cli
fsts
mov
push
out
adc
test
push
fidivrs
int
push
movsl
and
inc
xor
or
adc
and
mov
inc
dec
or
ja
adc
repnz
out
mov
das
lea
push
push
dec
std
dec
sbb
daa
xchg
inc
sub
test
movb
push
enter
push
xor
jge
cld
mov
inc
xor
movl
pop
into
inc
add
sbb
jne
dec
sub
xor
add
mov
pushf
jmp
pusha
andb
data16
sub
pop
mov
dec
ljmp
push
xchg
xchg
pusha
loope
mov
inc
dec
or
xor
lret
pop
and
ret
dec
cmp
cli
pop
sub
lahf
mov
into
adc
dec
mov
test
mov
pop
adc
inc
mov
sahf
jno
int3
xor
das
cltd
adc
out
fdivrs
push
lcall
adc
xor
xor
adc
movsl
iret
call
xor
xchg
popf
movsb
loope
cmp
scas
jl
test
dec
adc
movsl
cld
pop
add
loopne
add
icebp
or
push
push
sub
push
fs
add
mov
cmp
jg
addl
aas
mov
mov
push
push
jp
lods
outsl
push
gs
pop
rcll
xchg
call
and
fnstcw
push
sbb
xor
stos
sahf
stos
adc
or
jae
inc
mov
mov
cmp
sbb
dec
ss
jbe
add
xor
sbbl
sub
push
dec
lahf
inc
pushf
arpl
cmp
nop
sub
iret
xor
push
outsl
inc
shufps
inc
cmp
and
or
pop
mov
jbe
js
adc
push
or
sbb
adc
or
mov
call
cmp
jecxz
jae
test
cmp
pusha
je
sbb
inc
mov
out
inc
jg
dec
sub
dec
cmp
nop
dec
pop
xchg
imul
xor
fidivs
xchg
daa
or
inc
ret
pusha
sub
rcrl
hlt
pop
inc
jle
pop
cmpl
cs
lods
rclb
call
movsl
cmp
add
xchg
push
pop
mov
fwait
xchg
addb
add
dec
or
and
mov
xor
adc
aaa
push
add
andb
aaa
inc
xorb
adc
mov
push
mov
test
cmp
lods
loopne
push
sbb
ret
push
cmp
inc
loope
outsb
inc
pop
loop
loope
lret
rolb
push
sarb
and
adc
xchg
addb
pusha
sarl
inc
add
loop
mov
pop
cs
into
repz
data16
loopne
or
and
lock
xchg
clc
xchg
sbb
in
cmp
pop
adc
push
in
insb
movsb
fwait
inc
testb
push
xchg
and
cmp
ds
int
imul
stos
ja
test
mov
enter
inc
xor
jno
mov
pop
mov
lea
jo
in
mov
ss
dec
cmpsb
in
fwait
push
sbbl
inc
fistps
call
les
and
scas
stos
lods
mov
icebp
cmpl
hlt
dec
jecxz
xor
pop
imul
dec
mov
cli
ror
sti
dec
cmp
cmc
xchg
fsubrs
or
cmp
jne
add
testb
inc
or
mov
cmc
dec
test
ret
cmp
test
daa
jmp
lea
mov
sbb
enter
and
dec
loope
call
subb
inc
aas
and
sarl
or
mov
adc
shll
cmp
out
cmpsb
insb
sbb
orb
jl
pop
inc
stos
sbb
sub
sbb
roll
push
push
je
mov
fsubl
push
ja
lret
mov
fcom
andl
mov
and
out
gs
inc
loopne
aas
test
lcall
inc
jmp
ljmp
mov
mov
dec
dec
insb
add
cmpsl
add
ss
mov
cmpsl
inc
dec
xor
dec
adc
roll
mov
adc
dec
mov
mov
pushf
aam
fistl
popa
mov
daa
mov
or
scas
adc
incb
fdivs
cwtl
popa
pop
insl
cwtl
jg
test
je
add
imul
cmp
in
sub
hlt
pop
hlt
mov
pop
js
scas
dec
clc
es
ds
mov
inc
subl
fiadds
repnz
inc
sbb
add
pushf
adc
jecxz
lahf
rclb
add
pushf
mov
mov
adc
push
inc
jle
push
test
xchg
jg
fstl
rorb
sahf
insl
mov
xlat
push
add
jno
nop
test
les
cmpsl
adc
popf
or
pusha
adc
xchg
ss
stos
jge
lock
adc
adc
ret
adc
in
sbb
aaa
cmp
in
imul
mov
rorb
nop
orb
xchg
dec
xor
or
fsubrl
push
sub
xor
mov
cs
mov
add
dec
inc
imul
scas
adc
xchg
push
ret
xor
movups
lea
pop
xor
and
in
xchg
ds
js
in
arpl
dec
in
push
mov
inc
push
loopne
push
das
dec
scas
push
aas
xchg
stos
cmp
jo
xor
pop
mov
pushf
pusha
mov
leave
or
cmpsb
xchg
xlat
in
fsubr
or
push
les
push
sub
rolb
jg
sub
push
mov
enter
or
lods
adc
add
test
sub
adc
outsb
lods
rclb
add
xchg
fdivrl
xchg
adc
sub
int
xor
mov
dec
jne
cmpsb
add
dec
pop
pop
xor
cmp
es
clc
test
or
xchg
cs
fcmovnb
or
or
mov
push
lods
fists
jecxz
cmp
shll
imul
das
aas
xor
and
sub
out
loopne
int3
mov
mov
and
repz
or
xor
jmp
xor
pop
cmpsl
cmp
jne
sahf
dec
int3
jl
dec
in
fwait
aam
ss
or
cltd
inc
ja
rolb
mov
mov
subl
stos
jb
push
and
push
push
jns
dec
and
dec
fdiv
sbb
scas
dec
dec
test
inc
push
cld
js
test
push
mov
dec
push
mov
insb
test
xlat
mov
push
push
pop
sub
xchg
dec
add
sbb
adc
pop
aas
pop
or
repnz
ret
push
add
incl
mov
cli
dec
pop
cmpb
movb
mov
gs
add
xchg
jmp
add
lcall
mov
xchg
sbb
or
cmp
outsb
push
orb
ljmp
je
stos
nop
mov
and
imul
mov
fcomip
fsts
or
popa
jb
add
popa
jae
jle
adc
xchg
jp
stos
add
mov
mov
pop
push
jl
nop
cli
bound
insb
add
test
lods
or
scas
adc
popa
inc
adc
push
adc
inc
mov
cs
mov
repz
mov
xor
js
lcall
fs
arpl
mov
adc
fsub
stos
icebp
jo
lock
shrl
xchg
inc
add
aam
pop
fcmovb
lds
and
pusha
mov
adc
mov
lcall
ret
pop
or
fstps
dec
int
push
or
push
notl
lret
pop
pop
mov
or
lret
es
ficomps
mov
add
ds
mov
inc
mov
inc
insb
enter
fiadds
push
dec
push
call
pop
xchg
sbb
ds
repz
insb
mov
bswap
call
push
dec
loop,pn
cmp
pop
rcr
sub
lock
cmp
xor
mov
adc
icebp
inc
add
inc
insb
int
add
repnz
mov
inc
cwtl
push
call
cwtl
in
bound
ljmp
in
xor
pop
icebp
dec
js
das
sbb
cmp
cmp
jb
jmp
je
push
lods
out
lcall
sbb
xor
push
xor
loopne
enter
inc
cmpsl
leave
add
adc
test
imul
pop
shl
pop
cmp
int3
stc
mov
push
inc
jl
pop
dec
dec
imul
dec
cmp
sti
test
add
and
ret
outsl
adcl
fbstp
adc
cmp
scas
dec
cwtl
pushf
out
dec
out
sbb
add
sbb
out
dec
lcall
call
into
add
lea
cmp
repnz
ret
or
jne
cmpsl
add
xchg
cmp
and
das
or
cmp
shl
jo
fidivrs
cmp
or
inc
aas
xor
cmpsb
jg
xorb
pop
or
popa
push
dec
pop
mov
loop
push
call
pop
loopne
adc
jecxz
cltd
or
test
jb
ljmp
sbb
jl
popa
cmp
movnti
popa
fs
adc
cwtl
cmp
insl
mov
dec
adc
movl
mov
adc
subb
inc
add
or
xchg
nop
adc
shll
push
add
jns
in
andb
in
mov
mov
mov
mov
daa
push
push
subb
jns
pop
bound
pop
repnz
enter
je
inc
add
add
adc
inc
mov
jmp
call
jl
lret
pop
test
dec
xchg
add
roll
adc
loope
add
xor
or
push
mov
filds
lock
or
add
pop
cmp
out
mov
shlb
shr
or
nop
or
dec
imul
pop
pop
and
jl
or
idivl
push
dec
bnd
add
stos
add
add
addr16
lds
andb
jge
xor
or
xor
push
mov
adc
aam
xchg
pop
es
jnp,pn
into
cwtl
add
jns
mov
into
int3
enter
or
or
sub
dec
rcl
or
nop
mov
shr
call
cmp
jno
adc
jo
aad
popa
jo
xchg
fchs
inc
dec
repnz
mov
push
jb
arpl
popf
int
scas
fdivl
or
xchg
add
and
divl
fdivs
add
mov
sub
popa
test
outsb
outsl
jnp
frstor
popa
sbb
and
push
sbb
int
mov
push
push
daa
in
fwait
add
mov
pop
xor
and
inc
jne
inc
scas
fcoms
inc
push
sub
ja
jle
adc
or
adcl
push
loope
leave
adc
les
xchg
mov
xor
popa
ljmp
cwtl
push
pop
and
push
hlt
loopne
mov
cwtl
push
test
ret
inc
test
mov
mov
or
nop
xlat
sub
pushf
xor
sbb
test
lods
jo
jo
xchg
paddsb
mov
xchg
jo
sbb
and
jl
imul
andl
cmp
cmc
mov
and
xor
xor
xor
pop
push
les
test
dec
dec
dec
dec
dec
dec
dec
dec
sub
inc
enter
push
push
imul
and
xor
adc
nop
xor
xor
push
cmp
cltd
test
js
inc
jne
dec
push
sbb
into
jmp
sbb
xor
adc
xor
lret
jae
inc
cli
and
add
add
mov
or
xor
dec
push
outsl
leave
lods
lcall
mov
fsts
pop
rolb
xchg
pop
push
xor
pop
add
idiv
pop
cmp
sbb
add
stc
and
pop
cwtl
rcr
sub
sub
clc
dec
mov
or
je
push
test
sub
jg
cmp
in
addr16
mov
push
inc
jge
shrl
dec
jae
and
xor
and
mov
imul
mov
xor
xchg
pop
mov
adc
xchg
mov
mov
push
xchg
sbb
ret
add
xchg
or
imul
jmp
loope
mov
ret
aaa
nop
jmp
enter
inc
inc
inc
dec
pusha
lret
and
jo
dec
call
pop
dec
jecxz
mov
or
call
jns
dec
mov
add
les
add
sbb
mov
pop
insl
aas
mov
jmp
xchg
xor
xchg
and
hlt
pop
sub
test
inc
mov
push
xchg
lock
test
adc
lods
iret
fiadds
bswap
or
dec
ljmp
mov
sub
jl
xchg
jl
aas
clc
xchg
jmp
addr16
in
loopne
faddl
mov
pop
or
pop
push
fdivrs
xor
jmp
xor
or
push
pop
iret
popa
push
xor
pop
sub
lahf
loopne
xchg
jmp
mov
mov
sub
dec
xchg
jmp
inc
sti
push
add
push
enter
outsb
ret
inc
cli
pop
int3
mov
pop
mov
push
mov
std
test
mov
and
imul
pop
arpl
xor
mov
mov
push
push
mov
lock
inc
pushl
sbb
xor
fiadds
mov
pusha
je
mov
add
test
sti
mov
popa
inc
cmp
jg
mov
ret
add
mov
test
dec
sbb
cltd
insl
xorb
clc
icebp
mov
pop
cwtl
ljmp
out
mov
add
xchg
push
jle
arpl
mov
push
es
sub
push
push
or
sub
lock
iret
leave
shll
jo
imul
mov
jmp
jmp
xor
inc
cmp
push
xor
pop
xchg
je
out
jbe
aaa
in
xlat
adc
fsts
out
cmovle
dec
adc
dec
jecxz
testl
cmp
imul
sub
and
mov
add
add
adc
pop
insb
sbb
inc
imul
mov
push
dec
push
nop
cmp
je
xchg
pusha
aaa
mov
add
clc
pop
fisubl
cmpb
xor
nop
fnstenv
sbb
mov
or
movzbl
cmp
filds
addb
push
addr16
inc
sub
imul
dec
inc
dec
ja
cs
sub
mov
iret
xchg
es
cltd
js
add
pop
xchg
mov
xlat
test
and
fwait
aas
fcomps
sub
movsb
je
wrmsr
add
mov
push
das
or
inc
fwait
or
cmp
add
inc
aas
cmp
sub
setb
add
mov
inc
xchg
add
movb
mov
mov
push
cmp
add
aas
andb
pop
pusha
add
inc
mov
jmp
adc
js
inc
lret
shlb
push
xorl
add
ret
push
or
fdivrs
jmp
jb
pop
imul
mov
dec
jg
cmpl
adc
and
in
sbb
cltd
inc
shrd
nop
push
add
sbb
fimuls
mov
and
cmpsl
add
xchg
add
add
dec
add
rolb
leave
push
ficomps
ret
and
inc
ror
dec
jnp
outsl
ret
call
dec
xor
imul
mov
cmp
pusha
dec
jae
xor
fs
push
fmul
adc
testl
test
subb
push
dec
sarb
addb
or
add
or
pusha
aam
cmpb
sbb
xlat
and
call
int
lcall
jo
sti
shlb
dec
cld
adc
flds
inc
adc
lods
or
push
cmp
mov
or
icebp
or
je
mov
push
shrb
dec
idivl
out
ret
mov
xor
pop
cmp
adc
xchg
roll
xlat
sub
dec
cmpsb
loope
jmp
xchg
push
and
test
push
test
in
cmp
dec
insb
sti
cmp
jo
sub
push
inc
fdivl
adc
pop
mov
mov
push
or
push
in
jmp
inc
lret
adcl
xor
inc
lcall
pop
xlat
xchg
inc
or
sub
inc
cld
dec
sti
psrld
add
adc
enter
pop
jo
push
iret
sub
leave
mov
push
mov
adc
pop
adc
adc
mov
mov
mov
popa
mov
and
and
sub
mov
lock
sbb
pop
nop
inc
inc
or
inc
sub
pop
and
and
lods
testb
sub
shlb
push
aas
in
xchg
and
or
sbb
xchg
xorb
push
jecxz
inc
and
jnp
push
adc
stos
push
je
jp
mov
testb
icebp
sahf
or
adc
lock
xchg
out
add
xchg
negb
pop
add
adc
scas
clc
or
cmp
decb
inc
jo
hlt
rcrb
cmp
jp
int3
push
or
rcrb
and
pop
aaa
cmp
xor
jns
pop
cmp
mov
pop
dec
pop
flds
icebp
mov
lahf
mov
pop
inc
cmp
push
aad
mov
and
jae
mov
fldl
jl
xor
sbb
push
pop
inc
loope
rorb
inc
movsb
dec
xor
mov
mov
or
mov
adc
push
push
dec
or
ret
data16
inc
rcll
xchg
inc
sub
push
cltd
clc
xor
sbb
xchg
and
xor
mov
in
test
pop
xor
dec
rcll
clc
and
loope,pn
rorb
xor
mov
cmp
adc
add
mov
and
add
mov
movl
xor
mov
lahf
hlt
shlb
mov
jo
xor
xchg
lretw
outsb
call
ret
stos
addl
add
sub
pop
test
xor
xor
shll
sbb
pop
aad
jle
jg
insl
outsl
jmp
js
add
je
mov
pop
inc
cmp
test
orb
jecxz
jo
or
xor
jns
cmp
mov
subl
mov
sbb
shrb
xchg
adc
cwtl
out
sub
or
cmpsl
xor
add
or
pop
orb
andps
inc
mov
icebp
scas
xchg
mov
mov
dec
js
movsl
rcll
xor
inc
idivb
fisubl
jl
imulb
je
inc
or
bound
insb
and
pop
xor
push
ss
popa
dec
xlat
or
adc
loopne
stos
inc
cmpl
jmp
iret
dec
cmp
int3
xchg
mov
pop
adc
test
cmc
mov
and
dec
pop
notl
stc
lock
mov
enter
fiaddl
add
std
xchg
jo
lock
out
and
movl
movsl
mov
data16
sbb
shlb
xchg
push
les
push
sbb
ss
shll
mov
loope
and
and
dec
pusha
inc
xchg
outsb
add
addr16
hlt
mov
mov
add
sub
jnp
lock
imul
inc
xor
sub
sbb
hlt
xor
xchg
sub
jo
shll
testb
push
sti
popa
test
sub
or
jo
mov
jns
imul
addr16
insl
test
dec
xor
xchg
jmp
and
nopl
dec
adc
push
insb
clc
push
inc
lock
inc
cwtl
pop
add
leave
inc
popa
imul
jl
mov
pop
push
push
inc
adc
idivb
imul
imul
xlat
mov
inc
mov
fs
pop
mov
jge
xchg
push
pop
cwtl
push
mov
sbb
jb
sbb
repnz
ss
or
push
jno
sub
xchg
dec
incb
push
add
inc
push
sub
int3
push
enter
sub
roll
pop
add
movsb
xor
and
pop
adc
test
pop
and
lea
xor
xor
mov
cmc
sub
add
andl
cmp
or
sbb
mov
xchg
iret
hlt
cltd
fmuls
rcl
sbb
pop
into
hlt
sub
inc
add
test
lcall
dec
outsl
mov
or
pop
jns
stos
sbb
xor
cs
sbb
xor
leave
lock
rorl
add
movsb
loopne
add
jp
xchg
pop
fildll
push
and
nop
push
in
or
mov
movsl
or
fsubrs
dec
ja
addb
clc
loopne
push
xor
or
xchg
or
loopne
ret
xchg
ja
outsb
aaa
fistps
leave
addl
add
loopne
ja
dec
jmp
push
sbb
add
add
test
pushf
pop
lock
or
ret
xchg
call
dec
iret
push
inc
les
enter
sub
notl
lcall
sbb
loop
or
adc
adc
inc
js
push
sbb
mov
andb
addl
cwtl
jbe
or
add
sub
add
sub
enter
jge
fs
test
in
push
sbbb
push
lock
push
xor
xor
add
pop
in
add
add
je
push
shll
ret
cmp
adc
dec
call
outsb
pop
lods
inc
sbb
push
and
test
push
movl
ficompl
mov
mov
setge
enter
pop
les
xor
clc
loopne
mov
pushf
push
or
and
insb
stos
inc
clc
mov
rclb
mov
enter
clc
sub
inc
movsb
nop
lock
dec
lock
and
repnz
fbld
loopne
es
cmp
movsl
cmp
add
clc
arpl
push
movsl
sub
pop
xor
insl
adc
push
inc
pop
in
and
sbb
dec
sub
add
call
adc
in
add
leave
test
sbb
mov
or
out
loopne
sbb
add
cmp
inc
mov
add
inc
pusha
add
data16
pop
cmp
popf
ficomps
inc
movb
jecxz
dec
dec
int
rcl
sbb
add
xlat
and
sub
cmpsl
dec
shlb
mov
jae
jl
push
push
cmp
jge
sub
shl
je,pt
fs
push
shrl
adc
lcall
aaa
aas
mov
pop
xchg
inc
push
dec
fsubrs
mov
je
loope
sub
in
dec
insl
fisubl
push
sbbl
mov
sbb
mov
mov
add
lret
pop
pusha
mov
jp
loope
inc
stos
repz
pop
jl
or
adc
call
aam
movsb
dec
out
scas
movsl
mov
test
push
dec
lea
je
dec
or
sbb
and
push
nop
fcmovbe
sarb
dec
add
mov
ret
sub
or
mov
push
add
repnz
mov
das
nop
xor
mov
dec
pop
mov
cltd
add
mov
out
push
rcrl
sbb
mov
mov
incl
xchg
mov
sbb
call
xor
push
sub
shl
dec
movsl
sbb
aad
mov
aaa
dec
dec
ficomps
sbb
ljmp
mov
es
mov
mov
lcall
loope
lret
cwtl
popa
xor
mov
push
cmp
cld
ja
sbb
jae
add
jge
jle
push
xor
xchg
push
pop
adc
add
data16
add
dec
arpl
xchg
shlb
or
adc
cmc
mov
ds
incb
add
mov
jp
scas
clc
xchg
push
out
lods
and
and
ret
les
dec
inc
inc
cmp
cmpsb
dec
fstl
aam
or
pop
or
pop
xor
cmp
pop
insl
and
pop
outsl
cmp
jle
sub
mov
or
add
jb
addr16
jg
pop
jp
aas
pop
shrb
test
fnstenv
cmp
mov
inc
fadds
daa
inc
dec
adc
addb
and
and
test
push
mov
pop
pop
sarb
mov
mov
push
lods
add
cmpsl
cmp
lea
adc
pop
xor
inc
jbe
sbb
jo
pop
cmpsb
fsubrl
mov
add
addr16
cmpsl
out
aas
je
inc
adc
fmull
in
in
pop
and
jne
mov
push
jne
jno
pop
movl
cmp
mov
pop
xor
add
pop
test
adc
pop
into
pusha
lds
mov
mov
nop
dec
ds
inc
push
inc
inc
rcll
and
sbb
leave
outsb
xor
or
imul
sub
mov
lock
jbe
mov
push
pop
test
dec
pop
mov
arpl
ret
jge
imul
or
mov
inc
outsl
bound
rol
rorl
dec
cwtl
cmp
add
lret
and
cltd
lret
fs
pop
shll
out
inc
fcmovu
mov
xchg
es
lea
xchg
or
je
mov
scas
add
out
js
xchg
outsl
jmp
jge
outsb
pop
dec
imul
push
aas
jbe
and
into
aaa
mov
fsub
mov
popa
test
shll
outsl
popa
xor
sbb
inc
mov
aad
test
mov
or
mov
sbb
out
pop
sbb
push
push
mov
pop
xchg
push
pusha
pop
pushf
add
addr16
jge
or
or
imul
sahf
gs
jns
add
add
mov
xchg
xchg
outsb
jmp
jne
xor
fbld
movsl
fcoms
sub
lahf
and
scas
add
mov
add
xor
inc
dec
repz
inc
and
arpl
lock
cmpsl
and
add
movsl
mov
and
pop
sub
mov
lret
shrl
mov
insb
xor
dec
repnz
sbbb
popa
mov
ret
push
fsubs
es
enter
in
in
pop
push
ss
js
test
xchg
xorb
inc
pop
xorl
xchg
push
insb
cmp
pop
pop
and
inc
jmp
inc
mov
cli
sbb
mov
dec
ret
xchg
dec
inc
dec
or
fsubl
mov
cs
nop
inc
dec
mov
cltd
nop
fiadds
push
repnz
pop
lock
cmpsl
mov
xor
in
add
lods
dec
add
mov
loop
mov
jg
stos
das
lods
out
scas
out
cmpl
pop
clc
addb
jo
iret
lcall
fdivs
sbb
or
js
and
cmp
cmp
ja
push
fdivrl
fs
lret
push
cmp
fstps
mov
cmp
jnp
es
push
push
loop
popf
mov
xchg
sti
mov
imul
aas
pop
mov
push
les
jns
cmp
mov
fcomps
xor
test
insb
ja
lods
shll
push
pop
push
rcl
les
lea
pop
lea
aas
insb
mov
in
inc
xchg
jne
sar
jmp
mov
jle
push
push
data16
push
ds
mov
add
adc
inc
lods
pop
cmp
and
arpl
cmpsb
push
shlb
mov
incb
and
cs
mov
xor
in
mov
lcall
or
inc
or
xor
push
pop
push
inc
xchg
xor
adc
insb
xchg
iret
inc
sub
mov
mov
and
pusha
mov
scas
or
or
ffree
jmp
mov
loop
jmp
enter
push
in
mov
xlat
jl
inc
or
sbb
and
loop
ja
sbb
scas
rolb
adc
and
into
xor
gs
add
and
push
outsl
mov
mov
inc
ret
shlb
nop
test
or
push
ret
mov
sub
out
xorb
jecxz
pop
adc
in
fwait
cltd
bound
dec
xor
push
jnp
inc
adc
add
xor
les
mov
sar
call
js
mov
dec
or
jno
push
sub
outsl
adc
cwtl
lahf
inc
leave
mov
push
mov
mov
rcrb
and
inc
nop
loope
fisttpl
ret
dec
jne
jnp
pop
mov
or
inc
fdiv
mov
rorb
push
lock
inc
mov
inc
add
pushl
push
imull
or
cld
push
aas
stc
xchg
push
push
jmp
pushl
dec
push
lea
inc
add
and
xor
sub
push
mov
mov
add
sarl
lcall
les
in
inc
leave
dec
add
call
adc
inc
out
mov
cmp
jl
mov
sbb
push
call
or
fcmovnu
mov
sub
test
mov
fs
cltd
nop
mov
cltd
fimull
sub
enter
movsb
into
mov
cmp
stc
or
cmp
inc
mov
or
mov
ss
add
les
jns
in
pop
or
jne
dec
push
pop
outsb
je
pushf
dec
xor
push
outsl
push
sbb
aam
je
push
sbb
push
fldenv
shlb
or
out
or
push
pop
adc
int
xlat
xor
sarl
lea
movsl
cmp
data16
shlb
mov
mov
push
les
xor
mov
dec
xchg
adc
jne
and
js
push
inc
sbb
mov
jns
jbe
orb
dec
inc
aas
in
fisttpll
dec
add
mov
enter
lea
scas
in
jnp
inc
aaa
xor
cmp
or
adc
xchg
mov
pushf
cmp
adc
push
or
jle
jecxz
pop
xlat
orb
cmp
je
fsub
adc
lods
xorb
or
loopne
pop
push
call
sahf
insb
movsb
jns
pop
leave
adc
sbb
sbb
ret
clc
arpl
pusha
sbb
addr16
add
jp
cli
jge
push
insl
push
sub
aas
lea
mov
cmc
sbb
nop
mov
and
mov
inc
es
and
aad
mov
mov
popa
or
sbb
fsubrs
shl
sbb
ds
int3
cmpsl
ret
stos
fcmovnb
call
movsb
add
mov
test
pop
cmp
stos
dec
fdivs
sbb
lods
and
lods
adc
cli
xchg
inc
and
mov
adcb
adc
es
sbb
dec
ja
sti
jl
inc
test
mov
jmp
cmp
inc
rorb
push
pusha
into
mov
dec
ret
inc
sbbl
testl
or
inc
test
test
add
popa
adc
pop
jne
loope
in
mov
fistl
movsb
aad
mov
dec
enter
aaa
dec
and
mov
inc
jne
and
nop
idivb
mov
inc
cmp
pop
cmpl
insl
jl
adc
jmp
mov
or
adc
pop
push
cmp
add
xchg
sbb
mov
subl
add
xchg
fprem1
inc
xchg
mov
pop
int3
or
xor
add
mov
add
cld
fdivrs
add
adc
inc
cmp
clc
fmuls
add
test
mov
inc
inc
jae
sbb
push
sbb
into
dec
push
inc
xor
out
mov
dec
ret
inc
stc
xchg
jae
dec
daa
pop
sar
fdivrs
push
mov
or
xchg
cmp
push
dec
cmpl
push
cwtl
ret
add
mov
inc
fcoml
push
add
pusha
xchg
sub
mov
or
lock
and
or
sbb
add
in
cld
fildll
pop
push
push
out
sbb
inc
popf
jp
scas
push
push
dec
pop
std
add
and
rorb
push
pushl
sbb
sub
gs
add
push
or
call
out
add
and
aad
test
punpckhwd
xchg
call
fdivrl
add
js
int3
js
nop
insb
or
push
mov
mov
pop
pop
ret
or
mov
mov
cltd
push
hlt
rolb
or
sti
pop
sbb
addr16
cmp
in
fcoms
cld
or
sbb
or
into
aas
clc
mov
or
sub
pop
adc
test
or
or
out
push
xor
test
insb
inc
sbb
sub
jo
or
ret
movl
and
aaa
push
mov
xor
xor
test
sbb
loopne
add
jecxz
xchg
int
ja
in
into
xchg
cmp
rolb
fbld
ret
add
add
xchg
jbe
dec
xchg
fsubrs
jp
adc
movb
adc
push
cli
in
mov
loopne
adc
lods
popa
imul
add
jge
ljmp
xor
or
divl
cmp
add
xlat
cwtl
adc
inc
sbbb
call
mov
adc
pop
add
dec
loopne
or
push
add
push
and
mov
popa
lds
inc
or
add
add
or
pop
loop
xchg
data16
cli
add
add
push
fsubrs
inc
sub
push
and
push
mov
pop
push
add
pop
jecxz
mov
sbb
rcr
repz
jbe
inc
cmp
ret
dec
push
push
cltd
nop
cld
addr16
dec
xchg
add
repz
inc
addr16
mov
push
jno
xor
arpl
mov
push
cltd
push
push
loope
test
popa
pop
rcl
add
decb
pop
sbbb
or
mov
mov
cmovae
sub
inc
sub
ss
sahf
dec
cmp
and
sub
mov
push
ja
pop
fldcw
sbb
mov
test
jmp
inc
cmp
je
xor
dec
mov
lcall
dec
ret
ret
mov
lods
inc
dec
inc
cmp
addl
ss
jne
jp
aas
pop
lea
cld
mov
pusha
jno,pn
sbb
outsl
test
fxch
das
insb
jecxz
addr16
test
mov
inc
push
lahf
jo
ret
add
mov
add
and
push
lcall
loope
jle
pop
clc
jb
bswap
insl
ja,pt
mov
loopne
test
sbb
jecxz
push
sbb
adc
jo
add
ret
cmp
pop
push
mov
jl
jmp
sbb
sarb
dec
xchg
data16
add
xlat
add
push
sbb
in
mov
mov
sbb
xor
jecxz
or
inc
mov
xor
jbe
sbb
bound
push
mov
pop
adc
hlt
mov
mov
inc
or
xchg
iret
push
lock
and
adc
adc
cmpb
in
hlt
or
addr16
mov
std
or
ret
loopne
and
bound
dec
outsb
and
or
add
les
aaa
mov
pop
xchg
test
dec
aas
in
in
jae,pn
iret
dec
inc
jns
and
in
mov
ja
and
mov
nop
or
cs
push
outsl
and
xor
adc
je
ret
sbb
adc
sbb
mov
xchg
jno
jmp
xor
in
adc
cmp
leave
xchg
dec
fs
sbb
mov
das
sbb
mov
jns
cs
jnp
sub
inc
out
push
mov
sub
cmp
and
daa
mov
test
jge
or
dec
xchg
movsb
sub
and
clc
push
sbb
mov
jmp
adc
hlt
pop
pop
pop
cli
fs
lret
xor
jo
ret
fs
fwait
sti
mov
inc
lock
call
xlat
aam
mov
lock
fimuls
orl
cs
adc
and
dec
shrb
dec
push
mov
mov
cli
cmc
push
xor
gs
idivl
add
jmp
sbb
or
ss
out
int3
lods
mov
fidivrs
add
insl
addl
jl
adc
loopew
mov
decw
nop
or
mov
jno
and
fwait
jmp
sbb
add
xchg
test
xchg
mov
into
or
scas
sbb
adc
xchg
in
push
nop
push
in
aaa
movsl
fiaddl
xchg
mov
bound
push
push
ss
icebp
add
lcall
loope
clc
pushf
lods
addr16
push
xor
mov
cmpb
sti
mov
and
movb
pop
fmull
decl
sbb
mov
pop
inc
loopne
jb
or
int
push
movsl
js
cli
mov
insb
cmp
xor
inc
lock
hlt
add
mov
inc
inc
pop
mov
aaa
sbb
inc
test
push
insl
pusha
mov
push
pop
push
mov
ret
and
push
sbb
push
bound
mov
push
mov
add
push
adc
pop
and
cmp
ret
adc
mov
sbb
pop
js
jb
pop
imul
fcoms
adcl
cmc
push
mov
ja
out
push
add
in
add
mov
mov
rcrb
add
inc
loopne
adc
cwtl
push
mov
or
jmp
mov
jbe
inc
adc
dec
dec
push
or
mov
aaa
js
mov
arpl
cmp
adc
inc
push
jno
and
inc
push
pop
adc
or
xchg
xchg
insl
sbb
jns
cld
iret
call
pop
dec
inc
aas
cmp
sbb
or
add
test
ds
loop
repz
jae
les
popa
je
or
les
push
jmp
stos
nop
hlt
jl
inc
pop
xor
nop
int3
adc
nop
shr
cmp
push
fbstp
adc
addb
jl
fildll
or
pusha
add
fwait
arpl
scas
test
push
andl
shrb
or
add
daa
sub
int3
add
adc
out
cltd
xchg
das
jns
add
adc
cmpsb
adc
dec
xchg
addb
add
imul
xchg
pop
imul
loop
testb
add
mov
test
mov
jne
adc
sbb
mov
xor
push
in
add
fld
adc
and
repz
dec
dec
sbb
cmpl
idivb
push
mov
sahf
add
or
imul
sbb
cli
add
inc
repnz
lahf
es
loopne
adc
sbb
jmp
and
int
addl
push
and
cmp
sbb
push
sti
inc
sti
mov
push
out
xor
pop
or
scas
aaa
daa
or
clc
mov
sbb
sbb
lock
test
and
xor
xor
fdivrl
mov
add
adc
push
sbb
mov
fmull
imul
xor
sarb
cltd
mov
in
mov
mov
cmp
inc
xchg
cli
pop
push
xor
lea
sbb
add
xor
push
push
dec
xlat
out
push
adc
adc
xchg
add
adc
push
jo
inc
fdivr
roll
in
repnz
mov
cmovg
setl
dec
in
mov
push
in
dec
pop
xor
shrb
lcall
sbb
xchg
xchg
cmp
fisttpl
sub
lret
jne
jb
bound
test
push
dec
fstps
or
mov
adc
cmp
mov
cmp
and
ss
xchg
lods
dec
rcl
jmp
push
lds
jecxz
clc
xor
imul
rolb
dec
inc
or
or
dec
es
push
icebp
or
add
out
sahf
pop
push
loope
add
add
lods
movl
addl
je
jne
pop
cmp
cmc
add
cmp
inc
popa
add
les
or
add
mov
mov
cmpsl
add
push
and
sbb
cmpsb
pop
je
mov
add
mov
push
mov
mov
aaa
dec
xor
lods
add
mov
rclb
cmp
dec
jmp
jge
xor
ret
sbbl
shlb
aas
aas
cmpb
rorb
xor
or
push
add
pop
ret
adc
and
xchg
mov
int3
pop
movups
sub
pop
adc
pop
or
push
push
daa
pop
cmpsb
add
inc
xor
jmp
dec
inc
xor
lret
mov
insl
gs
mov
std
mov
lcall
sub
sub
and
movzwl
pop
imul
xor
fnstcw
push
stos
adc
fs
dec
outsl
add
cmp
ficomps
xchg
mov
nop
ds
sbb
loopne
jg
sbb
xor
movsl
ret
add
imul
sbb
xor
outsb
testb
aaa
add
jg
or
sbb
or
jg
push
sbb
jmp
jbe
sbb
dec
add
addr16
xor
cmpsb
jmp
repnz
pusha
cmp
dec
ja
and
push
pop
vpshuflw
loope
mov
clc
out
push
cmp
jne
inc
ss
xchg
sub
sub
sbb
and
adc
sub
fwait
mov
movsl
std
jmp
sbb
stos
pusha
pusha
sti
pop
inc
jg
test
lock
ret
sub
pop
daa
cmp
mov
lock
jl
mov
imul
and
push
jmp
les
add
jl
inc
sbb
insl
dec
popl
jge
mov
scas
arpl
and
popa
adc
push
and
ret
sbb
ds
stos
imul
adc
inc
jae
cmp
nop
push
jns
iret
repz
sub
rclb
cld
out
jns
out
dec
js,pt
inc
or
pop
fcompl
cmp
cmp
sbb
cmp
dec
fsubrs
les
idivl
pusha
and
out
out
in
sbb
push
adc
dec
and
gs
push
add
lods
cmp
dec
mov
nop
nop
inc
adc
adc
mov
mov
mov
push
jnp
jo
inc
dec
cmp
test
adc
mov
xchg
xchg
out
aaa
add
insb
mov
and
movsb
mov
mov
test
add
cli
add
add
mov
filds
or
lcall
in
aad
hlt
cmp
push
ss
pop
adc
inc
insb
popa
je
je
adc
add
testl
int3
pop
mov
inc
nop
icebp
dec
push
pop
dec
add
nop
cmp
int
jmp
and
outsb
mov
xor
add
add
pop
add
add
jo
add
adc
sub
mov
sub
jno
fs
scas
cld
mov
or
pop
mov
aas
or
clc
lock
or
inc
push
or
sbb
fdivrp
and
sub
rolb
add
test
sub
add
cmp
out
inc
adc
inc
dec
inc
inc
push
dec
cmp
pop
sub
in
pop
push
insl
outsl
fs
add
inc
scas
test
inc
roll
lock
lret
mov
or
inc
push
push
enter
pop
sbb
ret
arpl
mov
pop
push
je
and
or
sbb
jl
js
or
das
adc
and
mov
or
divl
dec
inc
imul
inc
fs
js
pop
inc
sbb
sbb
sbb
ds
sbb
push
mov
pop
cld
inc
inc
repnz
pop
adc
test
mov
dec
inc
add
inc
testl
dec
jbe
push
add
inc
ja
cmp
fisubrs
sub
nop
and
in
jp
stc
push
and
push
inc
cmp
or
inc
nop
add
jne
pop
xor
xchg
sbbb
loope
mov
stos
push
push
jge
inc
dec
inc
jp
jae
dec
aaa
dec
or
or
and
dec
aam
sub
add
add
push
mov
pop
inc
add
xlat
push
pop
mov
cmp
or
ret
push
jp
or
jle
fisttpll
gs
in
mov
leave
rorb
add
cli
mov
prefetch
sbb
mov
xchg
xchg
inc
dec
movsl
sbb
out
and
int3
inc
std
das
mov
popa
pop
adcl
cwtl
or
jnp
nop
push
shl
int
jns
xchg
pop
add
enter
dec
aaa
jb
les
sarl
and
inc
jnp
add
cmp
or
lods
or
mov
xchg
addr16
cwtl
sbb
sbb
arpl
mov
es
sub
sbb
add
es
adc
outsl
cwtl
pop
inc
xlat
push
pop
outsb
divl
xchg
nop
or
lea
pop
jl
jo
addr16
adc
adc
ret
adc
rcrl
and
push
push
fbld
andb
jge
xorb
adc
shll
orb
dec
repz
fs
mov
mov
and
add
fs
mov
roll
insl
popa
jb
or
push
push
push
out
mov
pusha
popa
sub
iret
insb
push
jo
addb
out
sbbl
or
pop
ds
add
iret
add
lea
or
xor
setne
dec
imul
popa
or
iret
add
mov
add
enter
sbb
sub
push
rcr
push
ficomps
aam
xchg
jne
adc
jo
xchg
pop
sarb
mov
inc
test
or
mov
add
addr16
push
push
dec
push
add
inc
outsb
jge
inc
out
mov
neg
dec
pop
push
pop
nop
loopne
and
test
shrl
fisttpll
dec
xlat
lea
xchg
lcall
and
mov
cmp
pop
and
and
jle
mov
clc
inc
clc
sbb
dec
inc
add
push
jl
enter
jne
pop
push
int3
push
inc
pop
jle
lods
sbb
into
push
fs
inc
inc
add
sub
fcompl
cwtl
inc
add
mov
inc
movsb
and
push
clc
mov
inc
inc
sbb
inc
mov
arpl
jb
pslld
sbb
inc
adc
testl
add
mov
incb
into
data16
mov
nop
call
clc
dec
mov
repz
pop
push
pusha
sbb
push
xchg
fs
cli
inc
call
add
jmp
or
and
pop
ljmp
add
add
inc
imul
inc
loop
sbb
mov
push
add
fsubl
xchg
or
adc
jp
mov
scas
add
or
jg
mov
mov
pushl
push
push
ljmp
pop
adc
stos
iret
cmp
shrb
dec
jle
test
push
enter
in
add
jns
divl
in
addb
enter
notl
push
inc
test
test
cwtl
imul
xchg
xchg
lock
mov
jo
sub
ss
push
xor
lahf
repnz
aam
dec
mov
sahf
out
sub
je
pop
int3
cmp
flds
push
movsb
jnp
pop
fistpll
inc
pop
into
cwtl
mov
int3
jl
mov
jnp
xchg
es
gs
cmp
mov
loope
sarl
mov
cmp
mov
lahf
pop
and
loope
jp
pop
shll
out
insb
and
add
dec
daa
pusha
and
sbb
fnstcw
ret
or
sbb
dec
ret
push
movsl
cld
and
pop
push
cwtl
or
or
or
data16
rclb
sub
push
or
leave
mov
jmp
lret
loopne
sbb
clc
mov
cltd
push
pusha
add
jo
mov
out
out
push
decl
mov
in
add
aaa
jb
add
cmp
add
inc
add
pop
inc
adc
test
mov
adc
xchg
maskmovq
notl
inc
dec
gs
push
ljmp
sub
add
pop
add
ja
pop
insb
add
incl
sbb
add
inc
add
xchg
jne
mov
insl
xor
cmp
sbb
pop
inc
clc
adc
sbb
sbb
lock
add
sbb
call
adc
sbb
dec
xchg
push
xchg
in
push
add
inc
repnz
add
adc
pop
xor
and
and
adc
and
xor
mov
or
and
jb
dec
andl
mov
cmp
and
and
adc
in
pop
das
int3
je
aam
insl
sub
or
roll
pop
inc
test
pop
push
lock
add
push
pop
sbbl
jmp
mov
and
movsb
stc
dec
cmp
sub
icebp
jmp
fwait
sub
shlb
rolb
push
mov
push
or
xor
jno
pop
pop
xor
aam
insb
fs
mov
jne
jecxz
mov
adc
dec
pusha
jo
push
inc
pop
dec
rol
mov
or
adc
sbb
mov
xchg
nop
imul
mov
ds
jae
mov
xlat
sub
inc
pop
pop
dec
xor
xor
arpl
pop
xchg
cmp
xor
xor
fnstsw
and
hlt
pop
sub
out
xor
mov
aas
int
addb
push
hlt
inc
ss
push
sbb
and
add
loope
jns
jns
push
mov
in
cmp
jmp
data16
inc
or
and
clc
jle
out
fbstp
scas
inc
add
jge
pop
pop
cs
jle
insb
push
lret
cmp
aad
and
pop
pop
xchg
cmp
add
dec
push
dec
enter
or
test
aas
pop
xchg
xor
xlat
and
xorb
adc
test
nop
fcoms
aas
fwait
inc
pop
inc
cwtl
dec
lods
test
stos
inc
adc
loopne
insl
push
or
and
inc
inc
inc
fs
sar
rolb
mov
xchg
inc
mov
inc
inc
movsb
test
jmp
outsb
clc
jns
mov
shlb
pop
push
pop
ret
inc
pop
jb
dec
nop
inc
mov
inc
dec
stos
fs
das
inc
push
inc
xchg
dec
gs
xchg
pop
leave
jl
dec
add
and
mov
test
test
inc
inc
test
and
dec
inc
push
and
push
xor
push
cmp
inc
push
and
inc
push
cmp
in
mov
cmp
imul
nop
das
in
push
add
pop
enter
push
dec
adc
push
cmp
insb
in
push
hlt
das
mov
test
mov
repz
push
inc
pop
test
test
nop
rcrb
test
jns
ror
enter
in
mov
rorl
enter
xchg
or
jg
or
hlt
lods
cmp
pop
push
cmp
pop
leave
add
aas
rcrb
lcall
repnz
inc
mov
mov
imul
xchg
push
iret
mov
iret
clc
push
popf
out
data16
lcall
cs
or
out
pop
sub
mov
push
test
mov
or
nop
in
add
mov
inc
pop
or
vminss
mov
iret
pop
imul
push
mov
out
mov
cmovo
adc
cmp
movups
and
adc
inc
shrd
enter
loopne
xchg
nop
adc
scas
inc
xor
xor
leave
out
xor
add
xor
mov
mov
inc
pop
testl
jb
pop
push
andps
or
mov
add
loop
xor
imul
not
mov
cmp
push
add
cmc
jnp
fdivs
jmp
push
je
and
or
push
inc
fdivs
ret
mov
call
mov
insb
xor
add
mov
add
loopne
and
jge
xchg
hlt
es
sub
js
add
dec
sub
bound
repnz
adc
dec
pop
jo
or
fsubrs
in
add
into
jl
divb
hlt
mov
and
sarb
ss
xchg
inc
inc
xor
add
mov
mov
xor
imul
adc
ds
fisttpl
mull
cld
leave
call
cbtw
dec
and
sub
or
xor
nop
lods
xchg
aam
scas
and
cmp
inc
mov
xor
sub
sub
push
test
xchg
add
pop
pushf
mov
adc
mov
push
adc
pop
dec
or
push
repnz
xorb
je
mov
movnti
test
rclb
push
sbb
cmp
out
test
xor
xchg
xor
adc
sbb
xchg
push
inc
and
cs
mov
mov
add
aaa
repz
aaa
dec
mov
mov
cmp
xchg
mov
aam
sbb
insb
push
or
jbe
or
jae
pop
pusha
out
mov
xchg
inc
movsl
mov
out
loopne
int
dec
cmpsl
div
mov
lret
jnp
mov
int3
add
out
pop
sahf
add
or
adc
cmp
fcmovnb
sbb
add
fisubl
cwtl
addr16
cltd
dec
adc
iret
aad
lahf
ja
testb
jae
cs
sbb
add
pop
lcall
push
sub
add
inc
cmp
fadds
cmpsl
pop
pop
aam
dec
cmp
adc
add
lods
test
xlat
mull
ret
pop
pop
shl
add
icebp
jl
cmp
sub
add
inc
push
je
sbbb
mov
dec
push
out
js
stos
mov
push
mov
movsl
mov
fwait
or
mov
fwait
mov
pop
cs
fwait
jae
and
or
sbb
notb
ds
push
inc
add
jge
inc
aas
mov
and
and
fistps
xor
add
sub
push
xor
dec
xor
push
adc
xor
xor
add
push
or
outsb
or
shlb
pop
dec
shrb
add
or
sub
or
push
inc
sbb
pop
or
mov
pop
xchg
out
pop
cld
add
jl
inc
and
mov
inc
add
add
test
mov
add
sub
es
in
or
add
imul
xlat
mov
jbe
add
call
sbb
inc
loope
jp
push
xlat
and
mov
test
les
add
mov
or
lret
dec
aas
cmpb
push
cmp
add
adc
jmp
sub
sub
imul
pop
testb
mov
faddl
rclb
lea
and
fsubs
arpl
inc
cmpl
adc
sbb
loop
fwait
and
add
lock
add
mov
xor
stos
cmp
push
and
fadd
sbb
lods
dec
jl
adcl
sbb
jg
int3
pop
or
or
sti
cmp
fucomi
arpl
test
xor
test
iret
cli
lds
jo
push
push
test
mov
es
bnd
adc
hlt
push
mov
int3
sub
leave
rcr
in
push
dec
leave
cmp
and
lret
add
mov
mov
mov
mov
push
and
cmpsl
push
push
lahf
mov
sbb
ds
or
movsl
add
movl
mov
popa
inc
push
shr
push
pop
push
fs
adc
mov
lods
jmp
nop
lea
cmpsb
adc
push
pop
repnz
xor
or
and
inc
fs
jmp
push
inc
pop
inc
scas
cmpl
icebp
jmp
out
and
inc
or
dec
cmp
hlt
out
insl
cmp
cs
or
sbb
and
lret
sbb
lods
arpl
jo
mov
ret
sub
push
push
cmp
push
mov
sub
fnstsw
sub
fstps
xor
push
jmp
dec
in
xchg
add
adc
add
jle
or
or
stos
or
je
inc
xchg
jl
fcoms
sub
ljmp
xchg
icebp
xor
inc
mov
sahf
test
dec
inc
mov
cmp
cltd
daa
xchg
dec
enter
aaa
add
and
dec
inc
xor
loop
mov
jle
push
lea
sbb
cs
out
inc
push
mov
and
and
dec
mov
dec
sub
test
push
adc
pop
mov
and
fdivrs
push
and
mov
sbb
sbbb
or
mov
daa
fiaddl
inc
or
push
push
xchg
std
or
jge
jmp
pop
sub
or
push
dec
inc
sbb
add
adcl
mov
imul
fcmovnb
xchg
js
xor
jae
adc
pop
add
rolb
inc
xchg
aam
add
add
mov
or
dec
pop
das
addr16
adc
ss
ds
add
and
sbb
jp
pop
mov
inc
dec
ds
xchg
mov
adc
loop
sbb
xor
sbb
or
cmp
sbb
adc
push
nop
and
xor
inc
push
aaa
mov
shrb
mov
inc
adc
and
lret
shrl
addb
xor
popa
movb
ret
pop
adc
jge
mov
pop
ss
daa
mov
cld
aas
cmp
test
cmp
inc
out
test
sbb
or
add
add
adc
sub
xor
and
pusha
popa
and
sbb
in
and
add
inc
push
xor
mov
cmpsb
push
sub
enter
mov
cmpsl
fisttpl
and
mov
js
ja
cmp
lock
mov
and
push
mov
mov
xchg
stos
adc
sub
jae
mov
loop
inc
loop
mov
dec
and
adc
or
sub
ljmp
rcrb
out
aas
or
test
dec
dec
notb
hlt
sub
pusha
pop
adc
subb
dec
lea
xor
mov
rclb
in
aaa
or
xor
add
cmp
mov
or
mov
adc
adc
cmp
and
mov
inc
inc
pop
sbb
sub
push
or
sub
add
mull
ds
addb
ret
inc
je
mov
and
ret
xchg
add
sub
aaa
lods
jno
jno
call
mov
push
adc
push
push
popa
mov
jle
movsb
pop
daa
lock
outsb
sbb
mov
pop
xor
inc
add
aaa
out
pop
jmp
sub
pop
sarl
push
xorl
adc
ss
jne
lock
or
nopl
and
push
in
push
jo
js
roll
push
dec
repz
inc
inc
lock
mov
mov
xorb
or
cmp
pop
je
mov
sbb
emms
shlb
ret
loopne
add
outsl
dec
mov
pop
or
xor
pop
jmp
sub
jmp
lret
push
inc
dec
dec
movb
add
loope
pushf
cmp
ret
or
sub
iret
push
xor
inc
mov
pop
dec
inc
mov
or
adc
in
and
dec
and
push
dec
inc
sbb
xchg
decl
jge
dec
stos
add
insb
icebp
push
sar
jns
cli
cmpsb
jbe
xchg
rcrl
push
dec
jmp
nop
or
sub
aad
sbb
mov
push
push
iret
sbb
mov
clc
adc
fisubrs
lea
push
mov
mov
icebp
or
dec
fcmovbe
addl
outsl
or
lds
sbb
out
sbb
mov
cmp
jno
push
jle
enter
mov
mov
fcmovnbe
mov
or
sbb
or
or
lods
and
inc
push
nop
push
add
adc
mov
scas
call
sbb
pop
popa
cmp
lcall
js
adc
vmovddup
in
or
add
ret
add
push
pusha
xor
cmp
test
and
and
pop
in
gs
xorb
dec
dec
mov
aam
fidivs
movb
dec
pusha
or
je
mov
or
dec
cmp
mov
pop
add
cmpsb
push
lret
xlat
cli
pop
mov
pop
cmp
add
and
inc
dec
cmp
pusha
jne
sbb
inc
rol
adc
adc
sub
out
stos
push
mov
ds
je,pn
or
jne
or
or
xor
ret
mov
arpl
adc
jo
or
and
xchg
xor
sbb
neg
sub
fcoms
dec
push
decb
add
or
xchg
xchg
mov
mov
ret
pusha
pop
test
out
dec
dec
or
add
mov
sbb
ss
jb
cwtl
add
push
push
stos
adc
popa
push
xlat
cmpsb
nop
push
or
movl
adc
pop
fchs
adc
push
loopne
rcrb
aad
xor
pop
dec
clc
dec
add
popf
movsb
mov
cwtl
aam
xor
add
test
cmp
jo
rorb
rorb
rcrb
lcall
mov
pop
pop
pop
lods
adc
scas
and
fs
clc
adc
xchg
dec
or
dec
sahf
hlt
incb
xchg
iret
nop
cltd
aam
push
shr
sbb
dec
repz
dec
inc
in
les
xor
mov
imul
xchg
jo
ret
icebp
testb
mov
mov
aas
push
popl
dec
test
push
pushf
and
inc
pusha
or
xchg
mov
jae
movsb
and
sub
sbb
mov
xchg
mov
cmp
das
sbbl
mov
adc
lock
adc
jecxz
mov
addb
add
cmp
mov
adc
sbb
add
pop
adc
testl
sbbl
xlat
push
or
mov
das
mov
in
adc
dec
hlt
xchg
pusha
nop
adc
mov
inc
nop
pop
jne
movsl
or
pop
movl
push
stos
adc
sbb
add
add
inc
cmpsl
out
es
rorb
mov
add
pop
mov
add
fsubrs
push
movsl
or
leave
or
es
inc
out
xchg
pop
inc
xchg
fwait
mov
jl
xor
lods
scas
arpl
sbb
into
pop
repnz
mov
inc
add
jne
push
test
in
pop
sub
sub
ds
add
adcl
dec
jmp
inc
enter
xchg
daa
imul
sbbl
ret
pop
test
add
iret
dec
popf
mov
cmp
jb
xchg
lret
fiaddl
fdivrl
push
in
pop
jb
add
cmpsl
lods
xor
and
mov
mov
mov
inc
push
lcall
jne
push
ds
ja
inc
inc
mov
and
xor
lea
iret
sub
setne
das
in
mov
test
cmp
jne
cmc
in
loop
popf
fs
add
jmp
pop
scas
xchg
roll
out
adc
lahf
push
movsb
frstor
xlat
jo
pop
nop
push
addb
pusha
insb
add
mov
xlat
xchg
inc
sub
movb
pop
mov
mov
mov
pop
dec
jb
jo
adc
sub
xor
xchg
in
hlt
pop
mov
pop
jo
inc
inc
pop
mov
cmp
je
adc
cs
das
daa
push
subb
pop
insl
jo
push
loop
xor
ret
sbb
test
pop
fidivrl
xchg
repz
push
jg
test
mov
and
lods
aaa
add
and
sahf
repnz
not
sbb
pop
or
bswap
insb
and
mov
inc
popa
inc
adc
outsl
es
sbb
mov
adc
enter
das
lret
cwtl
pop
and
ret
sub
and
out
add
xchg
inc
adc
or
inc
aas
stc
sub
push
lods
push
les
xor
mov
loope
das
pushf
sbb
mov
cmp
xor
or
lds
stos
les
inc
arpl
push
fmuls
add
scas
mov
repnz
iret
adc
enter
mov
add
push
lock
test
xchg
lcall
xchg
paddsw
in
sub
pop
mov
mov
int3
lcall
adcl
mov
pop
lods
and
call
add
popa
dec
iret
xor
loope
push
cmpsb
mov
and
add
lock
push
imul
sbb
test
and
cmpb
mov
imul
subb
adc
add
sub
loopne
xor
pop
dec
cld
cwtl
pmuludq
in
xchg
cmpb
cmpl
outsl
pushf
adc
xorl
ja
sbb
mov
mov
add
adcl
push
xchg
add
or
xchg
or
dec
pop
out
add
mov
aas
int3
enter
dec
xlat
frstor
lods
addl
cmpl
test
aam
push
mov
js
inc
or
dec
jnp
xchg
mov
dec
or
push
push
mov
pop
imul
sbbl
jmp
cmp
sub
mov
mov
xorb
cli
xchg
xor
xor
icebp
jl
sbb
lock
xor
adc
inc
pusha
sbb
xchg
mov
inc
push
outsl
sbb
jae
add
cmp
inc
mov
xchg
jp
or
pop
fwait
push
lret
fcmovne
push
and
inc
pusha
xor
sbb
cmp
int
fistpll
je
inc
aad
and
dec
pop
pop
int3
dec
and
mov
push
test
shr
add
pop
mov
imul
push
pop
ja
loopne,pt
push
mov
mov
pop
in
and
or
push
pop
sbb
testb
pop
insb
hlt
pusha
rorb
jns
outsl
testb
fildl
fmulp
jmp
andb
ds
pop
sub
and
or
ret
xor
push
cmp
pop
cmp
jne
and
movsb
pop
sub
test
test
mov
insb
lahf
pop
mov
int3
xor
addl
popf
cmpsb
push
xchg
push
pop
outsb
push
mov
inc
cmp
arpl
das
adc
pop
loop
imul
sub
mov
jmp
inc
jg
lea
ret
ret
jb
adc
mov
or
push
dec
or
icebp
xchg
mov
movb
pop
fnstsw
dec
je
daa
cmpb
fdivl
pop
aam
pop
jne
sbb
sbb
mov
or
xor
pop
cmp
inc
or
sbb
and
or
inc
xor
cmpsb
pop
xchg
push
xor
ds
xchg
push
jbe
mov
mov
sbb
mov
fwait
push
inc
push
dec
sub
inc
push
popa
inc
test
xchg
adc
push
pop
test
arpl
lcall
add
add
insl
or
shrb
lea
test
popa
add
inc
imul
mov
mov
jnp
cmp
or
push
pop
add
cs
jmp
fstpl
ret
hlt
frstor
jl
pop
in
clc
cmp
inc
imul
hlt
xchg
or
push
add
in
pop
mov
push
mov
inc
mov
ret
jae
ds
nop
add
pop
push
out
arpl
repnz
lcall
leave
sbb
pushf
pusha
lock
shll
xor
and
lea
adc
xchg
or
mov
bound
lock
cmp
shrb
mov
and
dec
xchg
or
dec
xchg
adc
inc
sbb
sbb
or
add
fs
jae
push
sbb
outsb
or
movsl
mov
add
inc
add
fwait
movsl
andb
inc
ss
imul
mov
xchg
mov
movq
sbb
push
fnstenv
inc
shlb
push
push
pop
adc
into
xbegin
lahf
lods
call
push
mov
pop
push
xchg
stc
cmp
inc
pop
add
or
dec
movsb
test
insl
cmp
xchg
xchg
fadds
fwait
adc
sbb
dec
mov
sbb
gs
cmovne
testl
sub
sub
pop
rol
or
jmp
popf
adc
sbb
sub
movsb
xor
je
out
inc
gs
xor
nop
test
dec
test
fsts
out
add
insb
das
xor
pop
ja
cmp
lret
mov
xchg
adc
mov
in
jl
mov
test
add
cmp
scas
xchg
cmp
jle
sub
push
adc
add
sbb
push
js
and
andl
ret
insb
xchg
daa
mov
dec
sbb
into
or
lds
and
and
xor
push
mov
icebp
pusha
iret
add
push
pop
fdivrs
mov
sub
sub
mov
rcrb
mov
mov
gs
jne
xchg
pop
ljmp
gs
nop
fnstcw
js
jle
imul
push
inc
nop
testb
jmp
sbb
in
add
gs
add
fs
nop
in
add
mov
xchg
and
leave
pop
scas
ret
das
cli
mov
mov
popf
pop
loop
ja
mov
jo
pop
movb
stc
and
icebp
jnp
cltd
cli
std
or
mov
jge
adc
adc
cmp
je
and
icebp
xchg
sub
xor
je
jo
xor
shlb
mov
sub
xor
adc
sub
movb
ret
jno
mov
cmpsl
movsl
and
rcrl
sub
addb
push
ret
aaa
or
xchg
add
sbb
dec
sbb
mov
add
nop
filds
lods
loope
mov
nop
and
cmp
and
add
add
push
mov
xor
repnz
adc
or
popf
sbb
into
and
cmp
add
adc
lock
cmp
mov
sarb
test
les
push
inc
pop
and
fldt
popa
dec
fnstenv
or
sub
adc
adc
sub
mov
mov
and
and
xchg
cmp
inc
imull
pop
jno
es
jl
xlat
movsb
inc
setg
int3
ja
pop
cmpsl
out
das
ljmp
adc
pop
hlt
jno
icebp
pop
aam
mov
scas
mov
add
sbb
push
fldenv
add
arpl
dec
aam
xor
fdivrl
dec
xchg
inc
sahf
jecxz
iret
cmpb
xor
sahf
popf
xchg
jbe
jo
xchg
and
or
verr
and
dec
add
add
push
pause
test
adc
mov
adc
xor
jnp
inc
cmp
test
mov
add
pop
xchg
pop
sbb
lock
imul
add
popa
shrl
popf
cmp
or
cmp
je
and
gs
or
jecxz,pn
int3
adc
lock
sbb
cld
jne
fimull
sub
and
or
fnstenv
add
mov
imul
or
inc
jbe
std
or
push
and
cmpsb
pop
push
dec
je
add
nop
mov
ret
push
test
clc
je
cmp
nop
insl
insb
sbb
jmp
int
mov
dec
iret
popa
add
nop
imul
jl
jo
cs
popf
xchg
rorb
adcb
inc
xchg
hlt
shll
movsl
and
cmpsl
push
or
push
sbbl
lock
ret
inc
pop
loope
mov
adc
es
test
or
lfs
int3
add
pop
inc
pop
pop
add
loopne
and
rcll
cmp
or
add
sbb
or
push
jo
or
fnstcw
pop
pop
xchg
scas
add
mov
add
and
ljmp
jne
mov
ret
mov
sbb
pop
inc
test
nop
inc
fisubrs
lods
rorb
mov
jo
sbb
imull
mov
and
pushf
inc
dec
int3
sub
mov
push
or
lret
push
push
shl
xor
xchg
mov
and
mov
adc
cmpsl
mov
inc
sti
lods
add
movsb
inc
ja
add
outsb
nop
dec
mov
mov
push
push
cmp
cwtl
xor
fs
mov
add
add
fisttps
cmp
cmp
and
outsb
sbb
stc
ss
sbbb
pushf
pop
bound
push
mov
sub
scas
adc
xor
testb
imul
mov
add
xor
cmpsb
rorb
je
and
shrb
arpl
call
ds
punpckhdq
bound
sti
adcl
xor
add
mov
or
jnp
je
xlat
mov
add
stos
sub
adc
dec
jmp
add
sbb
lds
pop
pusha
aad
push
or
or
cmp
dec
adc
push
sbb
inc
fcoml
pop
test
and
add
lea
fdivr
ja
loopne
add
ss
mov
sbb
das
jl
sbb
add
push
sub
inc
outsl
add
dec
sub
imul
adc
lods
adc
iret
aas
cmp
xchg
nop
pop
sub
or
sbb
pop
mov
jecxz
sbb
fiadds
mov
xor
sub
mov
xor
add
imul
xchg
pop
adc
mov
cli
push
psrld
sbb
rclb
mulb
add
mov
cmp
adc
jmp
sahf
movsb
adc
dec
das
insl
loop
mulb
sbb
or
lods
lea
add
adc
inc
data16
lods
push
push
mov
fadds
sub
add
add
xchg
pushf
push
inc
shlb
cltd
sub
add
or
mov
movsb
flds
add
add
data16
jo
dec
ret
cli
rclb
mov
aas
mov
add
push
or
add
fcoms
xlat
push
sbb
jecxz
mov
adc
or
sbb
scas
add
jo
cmpsl
rcrb
popf
sarb
xchg
inc
xchg
add
add
push
xchg
xchg
hlt
repz
in
or
arpl
adc
rcrl
mov
jae
sarl
dec
pop
es
nop
sbb
jmp
pop
or
fisttpl
jp
or
sbb
adc
and
js
dec
sbb
dec
mov
je
imul
test
push
push
dec
xorl
hlt
inc
add
dec
dec
inc
dec
push
or
in
push
dec
call
push
or
pushf
mov
or
rcl
rclb
or
lea
mov
lea
adc
fdivl
cmp
mov
xor
shll
in
adc
sbb
dec
shl
add
and
xchg
and
xorb
ret
xor
push
or
pop
and
mov
daa
fdivrs
pop
incl
idiv
dec
sub
jecxz
out
xchg
cld
pop
adc
adc
and
push
loop
pop
or
and
add
xorb
out
inc
dec
popa
and
mov
push
pop
inc
cmpl
jne
inc
mov
cmp
pushf
call
loop
mov
jbe
popa
xchg
jo
ss
pop
faddl
fbstp
test
jne
pushf
or
mov
mov
ja
iret
add
pop
bound
imul
mov
adc
mov
les
mov
ja
sbb
adc
xor
test
and
outsb
jnp
shlb
outsl
sahf
cs
imul
bound
add
subb
cmp
or
aam
sahf
pop
mov
and
out
or
adc
jae
xchg
adc
or
mov
mov
insb
push
xor
daa
dec
dec
jmp
adc
cmc
and
shrb
leave
aam
mov
or
push
or
sbb
call
jns
js
pop
dec
loopne
out
sub
ljmp
push
or
jnp
or
cmp
addr16
jnp
pop
insl
add
mov
sbb
loop
sub
add
sbb
fimuls
dec
adc
sbb
pop
lock
inc
pop
jno
mov
inc
outsl
inc
sbb
cmp
or
dec
sbb
and
adc
and
repnz
sbb
jne
mov
dec
mov
stc
pop
mov
xchg
sahf
les
sbb
pop
add
adc
or
and
pop
mov
adc
test
arpl
and
xchg
or
and
sub
sub
outsb
mov
xchg
sub
lock
fs
loope
popa
sub
stos
cmpsb
daa
mov
xchg
adc
cmpl
fistpl
cmc
pop
ret
and
xchg
mov
ret
add
stos
push
pop
cmc
sbb
mov
lock
dec
push
and
mov
sbb
aas
arpl
test
les
mov
or
mov
jns
pop
mov
cmpl
jmp
and
inc
inc
je
ja
hlt
out
xor
mov
mul
and
or
mov
dec
movsl
xchg
mov
mov
sub
hlt
xchg
dec
cmc
sub
sbb
je
in
inc
and
and
movsl
adc
jo
inc
lock
push
cmp
sub
cs
ss
in
jne
and
push
xchg
push
mov
loopne
and
popa
enter
dec
jb
mov
mov
mov
movsb
mov
dec
mov
adc
xor
sti
scas
test
enter
cmp
inc
sbbl
sti
sub
loop
and
and
fisubrl
je
xlat
or
sbb
pusha
cmpsb
xor
push
and
fistl
imul
dec
mov
mov
ja
dec
js
push
cmp
int
dec
loope
pop
xchg
xchg
inc
push
pushf
mov
fmuls
insl
jmp
xchg
mov
dec
jne
arpl
cmp
sbb
mov
rolb
mov
scas
fwait
mov
push
adc
out
cmp
and
push
adc
sti
cmp
inc
pop
js
inc
hlt
fwait
movsl
je
in
push
xor
mov
adc
stos
push
addb
sbb
add
popf
sbb
pop
daa
movsb
rcll
push
push
std
and
push
inc
xchg
shrl
pop
cld
sub
shlb
fbld
push
repz
test
sahf
mov
loop
inc
in
fwait
add
les
icebp
adc
das
rolb
imulb
sbb
nop
outsb
sbb
add
sbb
cmp
or
push
outsl
pusha
aaa
add
push
sbb
daa
push
pop
or
popf
pusha
sub
imul
and
xchg
inc
sub
adc
xchg
adc
stos
fwait
add
and
cmp
push
shlb
dec
add
add
push
push
loopne
and
lock
sub
stos
sub
mov
sub
bound
or
test
adc
adcb
sbb
add
xchg
dec
jns
add
sbb
orl
mov
test
adc
pop
jmp
sbb
out
cmp
fadds
jmp
add
dec
roll
cmpsb
insl
orl
pusha
add
xor
sahf
pusha
nop
pop
xlat
cmpl
cmp
push
data16
push
add
sub
or
fiaddl
inc
movsb
and
daa
test
inc
or
and
jno
sbb
inc
je
mov
daa
inc
mov
mov
rcrb
aad
add
enter
push
loopne
roll
pusha
movsb
enter
fwait
scas
push
push
mov
fwait
cmp
push
test
mov
cmovp
pop
mov
jns
loopne
inc
jo
lea
add
push
mov
push
js
add
push
xchg
push
or
nop
jp
pop
or
aaa
xchg
jae
push
hlt
mov
mov
insb
subb
scas
cltd
dec
inc
mov
inc
jecxz
sbb
pop
faddl
cwtl
fwait
push
scas
fwait
inc
sbb
or
jp
test
push
dec
adc
sub
fcoml
or
jno
cmpw
icebp
popw
add
popa
mov
inc
leave
push
or
es
jmp
dec
les
pop
into
movb
mov
xor
jo
adc
jmp
inc
leave
in
cmp
ret
jno
push
pop
sub
adc
dec
cmp
arpl
inc
or
inc
aaa
insb
add
jo
and
xchg
adc
movsl
cmp
or
push
dec
and
add
mov
leave
neg
lds
leave
cmpsl
sub
pusha
add
add
add
xor
sub
dec
xor
adc
stc
or
leave
outsl
out
xchg
add
add
jns
add
jne
dec
nop
int3
movsl
push
add
outsl
movb
rcrb
jne
outsb
adc
xchg
xchg
xor
push
inc
iret
cmc
test
inc
imul
inc
out
mov
or
test
pop
fsub
cltd
xchg
sbb
fidivrl
xor
je
sbb
scas
and
cmp
and
inc
fcompl
xlat
mov
in
push
and
dec
jge
sub
pusha
sub
mov
sbb
pop
jae
sub
xchg
push
and
mov
inc
or
ss
lcall
sbb
adc
mov
or
sub
insl
jo
es
inc
jmp
add
lock
loopne
mov
sbb
mov
jp
lods
lock
les
out
dec
pop
or
inc
je
dec
stos
and
push
jl
bound
adc
add
or
int
enter
push
and
sbb
dec
pop
int
insb
rclb
lahf
sub
jne
add
sub
cmc
fs
cs
andb
or
xchg
mov
fmuls
add
and
dec
mov
shlb
inc
or
mov
push
shr
push
or
xchg
xchg
imul
scas
mulb
cmp
loopne
pop
pop
les
mulb
and
cmp
aaa
push
test
xchg
jle
mov
adc
sbb
mov
addl
jl
test
adc
sub
jp
das
jbe
xor
addr16
jl
inc
pop
xchg
in
add
adc
in
mov
add
imul
mov
sub
adc
les
sbb
or
iret
sbb
stc
sbb
inc
cmp
xor
mov
clc
mov
xor
rorb
or
mov
mov
cmpsl
and
push
cmp
or
dec
and
push
int3
movl
jae
pop
jp
push
loopne
cmp
es
cli
lcall
enter
dec
cmp
int3
xor
ret
inc
sbb
xor
subl
inc
cmp
sarb
mov
lcall
lcall
push
push
movsl
jbe
or
rorl
inc
test
jl
cmp
ds
jo
jmp
jne
dec
sbb
push
loope
ds
and
dec
or
add
sbb
js
rolb
sub
add
popf
xchg
andb
and
mov
adc
xor
enter
ss
sbb
adc
test
push
loop
lods
push
fwait
sub
sahf
fs
or
das
cmp
add
mov
shlb
jg
pusha
pop
push
in
pop
mov
add
lea
jb
scas
or
insb
in
or
out
sub
lds
adc
push
dec
push
add
mov
andl
cmpsl
mov
pop
mov
dec
loope
or
mov
es
mov
mov
or
xchg
adc
xor
mov
push
push
outsb
test
inc
cmp
inc
fadds
or
nop
mov
jmp
push
les
cmp
adc
xchg
push
ss
ja
sub
jle
pop
js
rcll
inc
dec
shr
inc
inc
into
adcl
cmpsb
mov
push
push
cld
in
mov
inc
cmp
sub
cmc
dec
pop
and
out
push
xchg
add
or
orl
inc
jg
jg
insl
jb
repnz
pop
and
add
orps
sub
cmpsb
scas
aam
mov
lret
cmp
int
cmp
add
add
or
test
cmp
mov
xor
sbb
rclb
xchg
pop
inc
sbb
cltd
ret
rorl
add
stc
fcoms
or
push
rdpmc
or
sbb
jle
rclb
add
por
xchg
pop
call
sub
adc
xchg
inc
insb
adcl
or
in
ret
inc
inc
push
xchg
xchg
inc
and
add
add
cwtl
adcl
popa
push
cltd
xchg
cmc
shrl
and
and
push
nop
aaa
pop
loopne
test
fstl
pop
cwtl
and
je
or
add
bound
loopne
cld
adc
loopne
imul
inc
inc
je
mov
sbb
pop
or
shll
call
addb
push
jmp
dec
test
jl
out
push
lods
aad
xor
ficompl
add
adc
pop
shlb
sti
mov
sbb
out
inc
sub
sub
jle
mov
xchg
popf
add
jecxz
movsb
or
xchg
cmc
add
aam
cmpb
sub
add
pop
daa
dec
pusha
and
add
push
mov
fdivs
cmc
ja
stos
xchg
jbe
pusha
push
std
pusha
sbb
cmp
xor
mov
sub
pop
aam
adc
sub
cli
add
adc
pop
or
sbb
push
clc
xor
in
jno
and
lock
inc
inc
lock
negl
rolb
mov
imul
movsl
or
xor
mov
dec
enter
push
bound
and
xchg
pop
js
add
test
loop
rcl
in
inc
push
xor
push
push
dec
int
bound
pop
and
bound
push
adc
dec
test
ja
jnp
insl
inc
shl
fistpl
jnp
mov
push
sarb
pushf
fmul
mov
add
cmp
das
jne
push
adc
lds
adc
or
push
cmp
dec
add
xchg
adc
test
mov
xchg
adc
fdivs
ss
ret
in
loop
mov
or
xor
in
mov
sbb
push
test
or
insl
or
lock
dec
cmpsb
xchg
xchg
and
add
and
add
xor
mov
popf
and
adc
sbb
fldl
test
ret
in
dec
push
lcall
mov
mov
jnp
pop
test
xorb
push
push
inc
or
out
or
mov
out
xchg
pop
or
sbb
sub
fisubrl
fistl
xchg
or
mov
call
ret
add
cs
push
ret
ret
xchg
adc
pushf
cli
or
xor
mov
jg
cmpl
and
inc
out
lret
aas
cmp
into
mov
mov
mov
testl
nop
or
data16
pusha
sarl
push
call
jl
cmp
fsubp
and
adc
out
xchg
and
pop
xchg
adc
or
test
setl
loope
jb
filds
mov
sbb
arpl
aas
jno
shl
sbb
sub
mov
or
mov
outsb
mov
lret
aam
inc
insb
mov
adc
shll
mov
jge
cmpsl
cmpsb
xchg
mov
inc
pusha
movsl
or
inc
popa
stc
shlb
hlt
xor
inc
test
jns
push
test
cltd
cmp
push
cmpsb
daa
rol
or
sub
iret
or
orb
dec
loopne
push
mov
fiadds
insb
adc
sub
fnstsw
push
lock
clc
sbb
enter
lcall
xlat
pextrw
xchg
lods
aaa
and
push
pop
out
dec
xlat
inc
add
pop
push
leave
push
stos
adc
adc
or
fisttpll
mov
inc
xchg
push
inc
mov
and
jo
mov
ret
inc
lods
add
and
jge
cmp
and
jle
jge
push
and
mov
enter
cwtl
ds
add
test
insb
call
sbb
mov
push
inc
sbb
pop
adc
lahf
jnp
cmp
or
fistpl
sbb
mov
or
inc
hlt
or
push
sahf
add
add
adc
aas
ret
xorb
adc
sarb
and
out
and
cld
inc
push
xor
cld
cld
inc
add
sub
xchg
cld
cld
cld
and
add
in
sahf
inc
xlat
inc
movb
add
push
mov
int
aas
mov
andl
sbb
pop
outsb
shlb
push
dec
hlt
sbb
xchg
add
or
das
pop
push
enter
das
lcall
iret
fadd
push
lods
adc
imul
sti
test
jle
pop
sub
xor
adc
adc
movl
mov
and
lock
xchg
dec
cli
sbbb
mov
xor
dec
enter
push
pop
xor
test
ds
push
xor
or
roll
test
cmp
push
and
lahf
add
int3
cmc
imul
xorb
dec
sti
aam
call
mov
push
dec
popf
pushf
pushf
pushf
xor
pop
jle
cmpsl
or
push
inc
pop
mov
scas
cwtl
pop
inc
and
lds
jp
pop
sub
adc
test
pop
mov
mov
enter
sbb
aas
push
fcmovnb
dec
cs
jbe
pop
dec
dec
push
nop
in
dec
dec
cwtl
in
sbb
pop
dec
jnp
sbb
jne
push
push
fcom
push
fsubrs
jns
es
push
or
push
sbb
and
inc
sbb
dec
jo
xchg
movsl
inc
cmp
pop
iret
fwait
mov
aad
dec
insl
movsl
xor
mov
dec
mov
adc
inc
js
add
out
or
sbb
xor
push
call
pop
xchg
iret
cmp
xchg
mov
mov
sti
out
jl
or
jle
mov
cmp
pop
or
add
mov
cmp
pop
cmp
int3
sub
aas
pop
cmp
xabort
clc
mov
dec
mov
or
cmpsb
adc
xor
or
add
inc
mov
fs
sub
and
pop
stos
nop
in
cmc
pop
jg
mov
pop
sbb
mov
push
das
cmp
cs
cmpsb
mov
add
les
adc
lret
dec
cltd
mov
xor
push
inc
rol
inc
add
jg
in
mov
insl
add
in
adc
jbe
pusha
add
xor
xchg
cmp
sub
push
mov
sbb
adc
jne
adc
mov
mov
dec
xchg
mov
loopne
mov
div
sub
loopne
sub
into
ror
or
out
loopne
jne
jbe
ret
call
les
adc
xchg
leave
sbb
js
cmp
jne
adc
adcb
jno
jno
mov
rorl
lahf
and
mov
negb
mov
inc
sbb
ret
mov
cmpl
sbb
mov
frstor
xchg
and
cmpsl
or
lods
loop
inc
adc
pop
jl
adc
dec
mov
add
aam
pop
jle
outsb
insb
sbb
xlat
inc
sbb
add
push
lds
jne
aam
inc
shll
or
mov
jo
int3
jne
cmpl
es
mov
adc
push
pop
lahf
cmpsl
mov
jb
push
push
xor
cmp
xchg
aad
in
call
shrb
mov
add
pusha
dec
or
ror
or
xor
jae
cmpsb
out
movsb
add
jle
divb
aam
sbb
movsl
mov
inc
ljmp
call
loopne
jne
in
test
sub
loope
mov
aas
mov
lds
jp
and
loop
movswl
xor
insl
loope
inc
dec
pop
int
popa
outsb
iret
insb
dec
pop
in
xchg
push
mov
cmp
or
and
or
push
jecxz
sti
cmp
pop
pop
sbb
scas
or
and
jmp
mov
clc
pusha
mov
outsl
mov
enter
xor
dec
jmp
sub
xor
dec
and
jbe
iret
and
mov
pushf
sub
out
dec
jnp
imul
push
inc
insb
and
in
inc
rclb
or
icebp
or
mov
and
mov
mov
addr16
add
inc
sub
mov
ds
pushf
es
xchg
or
dec
cmp
testb
jno
ror
sub
cmp
nop
dec
enter
jmp
adc
xor
mov
sub
xchg
cli
xchg
push
mov
sub
adc
fldenv
lar
dec
jae
das
jmp
add
cld
pop
sar
sub
rolb
xchg
push
jecxz
cmc
cpuid
and
add
or
hlt
push
pop
fcmovu
lods
lcall
in
adc
mov
pushf
fmul
push
sbb
icebp
mov
adc
push
lock
out
xor
push
loop
jmp
sbb
xor
pop
sub
test
into
push
mov
ret
enter
in
or
jne
lods
imul
mov
cld
push
dec
cmp
rclb
xchg
add
sub
cmp
loop
push
push
gs
mov
mov
mov
inc
sub
inc
and
inc
or
xor
lock
sub
pop
pop
insb
insl
roll
jmp
sbb
sub
jo
sub
adc
hlt
je
sahf
pop
dec
es
roll
insb
mov
cmp
fsqrt
and
jge
cmp
lods
or
ss
imul
xor
test
clc
ror
jbe
jecxz
lock
fbstp
push
popa
mov
pop
js
mov
dec
mov
sub
push
pop
hlt
je
clc
or
adc
add
ret
sbb
xlat
cmp
unpckhps
subl
fmuls
pusha
and
xor
pop
insl
filds
lahf
mov
rorl
mov
mov
adc
cltd
sbb
pop
pop
lea
gs
xchg
mov
dec
shlb
dec
mov
lock
add
fwait
clc
addr16
sarb
iret
clc
into
lods
inc
add
add
and
and
mov
inc
inc
es
xlat
xlat
jge
in
dec
xlat
inc
sbb
fucomip
pop
sbb
insb
sbb
jb
sbb
in
shlb
sbb
sub
pop
pop
xchg
mov
outsb
xchg
je
in
add
test
add
xor
sub
inc
cmp
or
repz
adc
test
stos
jo
inc
or
push
leave
dec
dec
push
dec
add
je
movsb
pop
jmp
mov
xorb
subl
pop
cmp
add
cltd
stc
sbb
and
inc
mov
loope
hlt
add
xlat
mov
ds
sub
push
sub
lods
and
nop
sbb
test
or
adc
inc
add
xor
mov
mov
inc
sbb
movl
lock
enter
push
xchg
or
mov
mov
jns
adc
mov
fldl
push
aas
movsl
bound
dec
pop
sbb
adc
push
jbe
js
xchg
out
loope
add
enter
imul
jmp
xchg
rcrb
push
xchg
sbb
push
lock
loopne
cmp
sbb
fwait
into
leave
je
pop
arpl
mov
pop
enter
adc
add
adc
xchg
rcrb
pop
mov
ret
fcom
test
in
or
or
leave
or
test
or
xor
es
cmp
in
sub
mov
test
dec
xor
in
dec
add
push
ret
adc
and
push
dec
add
push
roll
rclb
mov
insb
test
pop
jne
pop
jmp
outsl
adc
mov
jge
pop
xlat
xor
and
mov
test
mov
cmp
or
movl
and
inc
js
test
xorb
fadd
or
or
add
cmp
push
xor
dec
popa
test
add
orb
ja
ror
inc
add
pop
mov
scas
arpl
daa
or
mov
mov
call
lea
daa
cmp
and
lea
mov
sti
orb
and
stc
pop
rclb
sti
loopne
sbb
mov
pop
test
adc
sub
or
mov
inc
dec
dec
dec
inc
ljmp
adc
fiadds
lock
cltd
xor
inc
mov
or
insl
jno
jb
inc
hlt
add
and
sbb
hlt
mov
imul
inc
movb
add
into
cmp
push
push
mov
xor
sub
adc
test
lret
sub
add
push
sarb
and
movsl
xchg
sub
sbb
dec
push
scas
int
test
fs
mov
adc
cwtl
sbb
sub
jecxz
inc
and
fs
rcll
mov
sbb
dec
push
ret
push
leave
sbb
adc
int3
lods
mov
les
je
fmull
jmp
push
cmpsl
mov
sbb
or
push
enter
aam
pusha
adc
fimull
inc
ret
and
cmp
dec
int3
cmp
mov
enter
lret
shlb
sbb
xchg
outsb
pop
adc
mov
mov
sub
scas
lods
inc
pop
das
push
shlb
repnz
insb
xorb
xor
or
repz
aam
inc
aam
dec
cmp
stos
ljmp
dec
cmc
mov
ret
push
fs
sbb
xor
sbb
push
push
js
pusha
lods
mov
lahf
and
rcrb
into
ljmp
sub
sbb
pop
xor
js
and
js
out
fisubl
adc
sti
or
leave
dec
lods
dec
cli
adc
nop
nop
mov
dec
mov
dec
mov
sbbb
ljmp
xchg
or
out
xchg
mov
xchg
mov
pop
lock
inc
mov
mov
loop
pop
cs
pop
adcb
adc
dec
push
fs
nop
cmp
pop
mov
add
sub
add
mov
adc
inc
loop
lock
mov
jnp
aad
add
out
or
mov
push
push
sbb
xchg
loop
in
dec
fwait
ret
push
mov
ljmp
adc
jle
movsl
fdivr
xadd
pop
subl
je
and
mov
adc
sub
jmp
xorl
test
adc
inc
iret
xor
add
test
mov
sbb
xchg
pop
aam
dec
pmullw
pop
fsubrs
pop
in
or
repz
fdivs
popf
cld
ret
and
pop
adc
or
add
xor
push
push
xor
xchg
and
adc
sbb
inc
or
rorb
rolb
clc
sub
inc
xchg
mov
dec
adc
inc
adc
xor
inc
push
pop
js
adc
and
repnz
mov
push
mov
add
sub
daa
mov
inc
or
pop
test
jmp
jecxz
xor
cmp
hlt
inc
ficomps
xchg
jg
je
in
add
adc
rcl
mov
or
inc
js
dec
mov
fdivrl
pop
fstps
cmpsb
daa
into
mov
popf
or
sbb
sbb
adc
jle
imul
lods
push
sub
cmp
adc
cmp
imul
sbb
cmc
sub
pop
mov
jb
insb
out
jbe
sbb
out
add
or
add
xchg
pop
mov
mov
dec
icebp
add
lock
or
shl
andb
pop
adc
je
sub
mov
icebp
scas
enter
mov
push
fcomps
pop
mov
shrb
sub
mov
or
ss
mov
clc
movl
sbb
pop
cld
js
mov
ret
mov
sub
fadds
pop
inc
adc
into
push
test
repnz
lods
cmpsb
rclb
enter
cltd
xor
adc
adc
jg
inc
inc
bound
mov
jbe
push
add
sub
push
ljmp
sub
test
or
scas
lock
inc
xor
jecxz
rorb
add
sbb
pop
fdivs
arpl
fimuls
xchg
and
ficomps
lea
js
mov
adc
iret
loopne
cmp
push
lods
ja
xchg
repz
cli
orb
inc
mov
push
mov
outsl
push
jg
mov
das
test
sbb
or
shrb
loope
mov
lock
sbb
mov
sti
dec
pop
es
inc
mov
sub
or
push
in
shlb
arpl
and
call
lret
loopne
iret
movb
mov
xor
rcrb
ret
adc
enter
aaa
or
pop
dec
out
fcmovnb
cmp
pop
pop
add
sti
xor
xor
ja
cmpsl
or
push
xchg
sbb
dec
push
add
mov
addl
sbb
dec
insl
cmp
movl
sbb
lods
jno
inc
mov
lret
jae
je
fildll
jmp
xor
mov
xchg
movb
sub
rolb
out
or
inc
jmp
test
push
jecxz
ret
imul
and
addr16
cmp
je
xor
test
jb
movsl
or
sarl
nop
stos
aas
rorl
dec
aaa
dec
stmxcsr
cwtl
pop
mov
fstpt
pop
popl
xor
inc
xlat
pop
xchg
dec
adc
je
push
xchg
add
testb
push
dec
xchg
call
pop
push
leave
pop
sbb
pop
mov
inc
add
add
and
clc
pop
cltd
or
cmp
xchg
or
pop
pop
icebp
into
pusha
leave
xchg
or
adcl
mov
fmuls
ror
mov
sti
pop
cwtl
rol
in
cmp
hlt
sarl
or
push
popf
js
pop
inc
sub
aas
pop
mov
push
std
adc
jle
lcall
outsl
popf
cmp
daa
pop
and
addl
sub
outsl
pop
or
and
test
test
je
mov
mov
jb
sbb
pusha
cltd
mov
es
in
xor
push
fnsave
gs
fists
pop
and
ret
jmp
pop
stos
mov
movsl
push
or
popf
jno
jg
inc
jg
sbb
add
je
xorb
insb
stos
lea
cmpb
adc
ja
xor
dec
inc
movsl
fwait
mov
ja
xor
subb
ds
cmp
pushf
or
std
leave
ja,pn
sbb
inc
aaa
sbb
test
faddp
adc
loope
jmp
push
into
or
jecxz
add
imul
inc
jecxz
push
addl
icebp
push
jnp
lds
clc
cmp
sbb
cmpsl
cli
sbbl
mov
insb
pushf
mov
add
inc
inc
push
jo
daa
ds
mov
mov
test
pushf
jnp
cmpsb
and
adc
adc
cmpsb
add
sub
imul
xchg
cld
out
test
popa
call
add
test
je
or
leave
fiaddl
jle
ja
xchg
fdivrs
and
pop
cmc
movb
ficomps
daa
cmp
mov
das
aas
add
out
sbb
and
nop
adc
pop
mov
movsl
sub
outsb
pop
jmp
mov
fidivs
das
or
mov
faddl
movsb
popa
insb
lcall
push
jo
inc
lcall
add
hlt
leave
push
mov
insl
iret
pop
in
rolb
mov
cmpsl
mov
pop
add
sub
sti
cmp
popf
iret
adc
repz
jne
cmp
sbb
dec
xchg
push
mov
in
movsl
xchg
sbb
dec
frstor
es
jle
das
cmp
cwtl
xor
mov
and
sbb
call
sbb
push
scas
cmpl
ret
std
clc
loopne
and
sti
shll
mov
dec
or
movsl
clc
xor
test
xor
in
jecxz
jmp
inc
push
adc
jbe
adc
mov
pop
arpl
lea
and
add
add
dec
push
outsb
dec
test
mov
inc
lds
ja
xchg
sbb
dec
mov
orl
outsl
jno
scas
mov
test
sbb
add
inc
daa
scas
repnz
pop
cmp
push
push
mov
sbb
jge
xchg
movsb
mov
sub
or
lods
dec
pop
cmp
je
mov
fs
loop
adc
jecxz
in
push
add
xchg
push
adc
cmp
jmp
mov
or
repz
movsl
sub
les
lret
push
rcll
fldt
push
fwait
rcr
xchg
outsl
ret
dec
sbb
cmp
and
ret
sub
fwait
inc
add
aas
push
xor
leave
inc
dec
push
leave
shl
rclb
pop
jo
jmp
dec
jno
and
and
mov
and
push
test
leave
leave
mov
hlt
in
inc
sub
dec
sbb
clc
clc
inc
dec
inc
ds
lret
add
les
jno
insb
outsb
or
das
xchg
xorl
fs
push
and
inc
das
mov
mov
lret
adc
iret
test
sub
mov
lods
or
cmp
inc
cmp
add
push
push
adc
insl
push
cmp
or
dec
add
dec
push
ss
sbb
in
sbb
xchg
jns
cmp
xchg
outsb
or
repnz
cmp
xchg
dec
in
add
sub
add
sbb
mov
jo
adc
push
faddl
in
shll
inc
push
push
shlb
mov
add
push
test
or
repz
ret
aam
pop
loope
div
rcll
je
les
dec
mov
inc
dec
iret
mov
inc
shll
jge
or
outsb
sbb
mov
jns
enter
adc
pop
fidivrl
push
lret
popa
loop
or
lds
fcmovnb
mov
pusha
daa
push
push
xchg
push
dec
cmpsl
jno
add
rcll
jg
sbb
inc
enter
inc
jns
nop
inc
or
xor
aas
ffree
and
fstps
sub
cmovp
add
pushf
pop
sub
adc
aaa
sbb
enter
jmp
loop
sbb
push
movsl
ret
pop
and
js
jae
cmp
fwait
nop
mov
add
inc
pusha
fdivrs
adc
inc
jge
test
aam
dec
adcb
add
fistps
push
push
cmp
jne
cmpb
iret
adc
dec
test
xor
sub
dec
subl
cmp
stos
or
and
arpl
xchg
mov
ret
adc
inc
stos
pop
mov
es
add
add
xor
das
hlt
punpckhbw
bound
ror
add
sti
pop
and
cmp
push
and
test
xor
xor
mov
inc
dec
inc
jmp
rclb
test
mov
pop
fwait
das
aam
adc
sbb
mov
dec
sub
or
sbb
clc
std
in
pop
sub
and
mov
cld
adc
out
push
mov
in
jbe
inc
push
cmpsb
dec
mov
mov
mov
addl
mov
insb
pop
sub
push
dec
mov
test
dec
and
or
cmc
add
cmc
inc
cmpsl
push
inc
push
cltd
cmp
test
sbb
es
xchg
mov
sbb
aam
or
ja
mov
dec
and
lahf
xchg
mov
inc
insb
and
mov
cmp
push
addb
push
inc
push
pop
std
outsl
popa
push
xlat
shlb
jmp
inc
mov
outsb
ljmp
in
xor
or
mov
cwtl
mov
smsw
subb
xor
dec
jl
mov
mov
cmpsb
push
fsts
pop
cmpsb
dec
dec
xor
inc
daa
mov
push
ja
mov
in
and
loopne
test
sub
sub
lods
jbe
imul
clc
dec
dec
adc
cltd
stc
or
fwait
xchg
dec
frstor
scas
cmp
jne
xchg
loopne
mov
adc
rolb
sub
inc
pop
xchg
mov
mov
sbb
xor
dec
fistps
mov
push
pusha
adc
adc
or
daa
cmpl
imul
mov
mov
jg
mov
sbb
mov
xor
repnz
dec
adc
lock
shrl
ds
and
inc
faddl
data16
daa
out
mov
xor
mov
add
sub
adcb
into
jbe
jp
sub
ret
xlat
inc
loopne
pop
pop
movsb
loopne
xchg
insb
jge
daa
inc
push
mov
les
fsqrt
pop
repz
mov
aad
xor
dec
jge
and
jmp
add
dec
adc
test
add
lret
insb
mov
pop
mov
hlt
and
dec
inc
push
arpl
inc
jge
push
mov
out
fcoms
lock
arpl
or
or
js
or
scas
jne
rcl
std
cmpsb
pop
ss
add
and
add
pop
sar
xor
js
jge,pn
mov
sub
jmp
stc
ret
pop
shlb
adcb
cmpsb
lock
shrb
insl
imul
mov
pop
jns
idivl
sub
add
cmp
scas
mov
mov
and
xchg
imul
fnstsw
add
mov
sbb
ret
or
xlat
or
mov
pop
inc
rcrb
jae
je
ljmp
dec
push
das
cmp
xorl
sti
add
imul
cli
test
and
mov
mov
adc
jmp
mov
cld
cwtl
add
or
add
sub
sub
mov
or
sbb
in
mov
popa
mov
pushl
sbb
movsb
movsl
addb
cltd
cmp
and
mov
jp
inc
aas
push
flds
and
adc
and
pop
fcoml
daa
pop
cmp
add
adc
xor
loopne
jne
jp
and
cltd
cmpsb
or
add
aam
insl
int3
std
sub
and
cmp
ror
jge
sub
inc
ret
jnp
daa
nop
lock
jle
jae
jmp
jo,pn
or
add
or
lret
dec
add
fld
stos
dec
or
push
inc
or
lea
scas
or
lahf
test
repnz
lea
mov
xor
cmc
or
ds
adc
sub
rcrb
push
aam
mov
and
push
adc
mov
push
mov
mov
cmpb
adcb
fucomi
sbb
adc
xchg
xor
xchg
xchg
xchg
xor
loop
aad
push
sbb
inc
pop
ljmp
dec
pop
out
scas
je
adc
inc
movl
call
mov
repnz
mov
fdivs
sub
insl
and
loope
pop
dec
add
mov
lock
xchg
loopne
add
scas
std
lock
sbb
push
add
adc
shlb
insb
nop
insb
jo
in
jl
push
imul
mov
sahf
mov
ss
or
adc
push
xchg
jmp
xchg
aam
mov
xchg
sbb
lds
add
shrl
movsl
inc
cmp
test
pop
sbb
xor
add
mov
jge
mov
imul
xor
loopne
rcr
test
cmp
call
rcl
dec
cwtl
dec
sti
pop
cld
outsb
inc
cmp
je
test
aaa
lds
sub
sbb
sub
lret
dec
sbb
adc
or
xchg
add
loop
inc
insl
test
nop
pop
nop
test
fs
sub
dec
lret
clc
sbbb
fiaddl
xchg
pop
push
aad
fiaddl
ljmp
gs
nop
add
stos
add
enter
mov
inc
add
jecxz
je
bound
lods
push
int3
outsb
cltd
add
push
ret
sbb
ja
jl
add
test
mov
pop
adc
add
cmp
mov
sub
mov
adc
lcall
mov
pop
lret
les
inc
add
repnz
out
and
sub
jl
pushf
dec
cwtl
jns
add
rorb
cs
addb
or
jb
fs
outsl
decb
cli
sbb
xchg
xchg
sti
cld
std
decb
xchg
aam
add
inc
mov
pop
add
add
fists
add
and
out
jbe
mov
scas
aas
adc
or
adcb
mov
rcr
lea
fnsave
stos
in
sbb
inc
xlat
or
add
xor
pusha
fmull
inc
dec
je
add
xchg
nop
gs
mov
ret
pop
pop
dec
gs
jb
insb
pop
pop
sbb
daa
addr16
add
fldenv
or
sub
cmp
rorl
xor
and
jbe
xchg
adc
add
jle
pop
clc
inc
jne
cmpl
mov
outsl
fdivrp
mov
sbb
loope
push
icebp
mov
pop
and
xchg
dec
dec
pop
adc
movsb
cmpxchg
pop
mov
cltd
sub
repz
xor
std
fs
out
jbe
hlt
dec
rcrb
jmp
movsb
and
orl
jns
sbb
xchg
adc
mov
sti
add
pop
les
dec
and
inc
or
enter
adc
inc
xchg
mov
fdivs
movsl
lret
cmc
push
sub
scas
jb
test
or
hlt
iret
sub
push
push
aaa
cli
movsb
mov
pop
fstpl
xchg
dec
aam
adc
push
insl
push
cmpsl
push
or
cs
push
push
cmpsb
push
iret
sub
in
dec
movsb
xchg
movl
mov
dec
and
sub
stos
cmp
or
xchg
sbb
or
test
cmpsb
inc
add
mov
and
lea
pushf
or
adc
add
sub
xor
ret
sbb
pop
adc
pop
mov
jae
jno
dec
fs
jmp
mov
ljmp
cli
or
pop
out
sbb
dec
push
xor
sub
je
xchg
add
vmptrld
aas
loope
mov
cmp
fstpl
arpl
adc
ja
in
rol
sbb
lock
out
hlt
mov
je
fwait
xchg
ret
dec
push
push
mov
push
xor
aaa
push
sti
cmp
imul
subl
lea
mov
mov
push
xchg
loop
daa
add
dec
cld
movsb
repnz
mov
dec
cld
inc
and
adc
pop
add
add
arpl
cmp
cld
loope
roll
push
push
stc
jne
pusha
push
dec
lret
imul
dec
gs
jo
mov
mov
cltd
movsb
mov
sub
dec
add
adc
xchg
pop
inc
js
adc
fs
cmpl
into
add
dec
xlat
sub
int
movsb
movsb
mov
jae
dec
sbb
fs
mov
jae
loopne
sub
mov
dec
das
fldenv
mov
mov
xchg
andl
mov
push
add
jmp
nop
mov
and
adc
outsb
and
lock
es
sbb
push
xor
in
call
mov
pop
mov
std
sbbb
xchg
scas
in
nop
aam
inc
in
lock
cmp
je
inc
mov
add
jo
lcall
xchg
xlat
shl
enter
jle
cmp
jle
add
add
pop
or
cmpsl
lcall
mov
dec
out
xchg
inc
outsb
test
in
xor
call
mov
test
and
and
js
cli
push
inc
cmp
call
or
fnstcw
cmp
loope
jne
push
lea
hlt
or
xor
testl
add
adc
jle
js
or
call
push
ss
adc
jnp
push
push
pop
repz
inc
cli
cmp
jne
jns
push
push
or
fwait
iret
rorb
scas
scas
or
xchg
push
mov
mov
ds
inc
movsl
orl
pop
pop
xor
sbb
dec
sti
outsb
jae
push
adc
adc
movsl
out
or
pop
push
or
sbb
xchg
pop
sub
add
and
add
jg
mov
movsl
paddd
pop
imul
test
ret
or
aam
jge
mov
jnp
jo
pop
dec
jge
jne
lea
sub
les
repnz
or
cmp
mov
movl
in
aam
call
mov
ss
loopne
test
add
mov
sbb
inc
push
rclb
or
mov
adc
xchg
pop
pop
sbbb
dec
iret
push
mov
pop
xchg
mov
inc
add
or
enter
jo
adc
xor
shr
sbb
dec
out
icebp
adc
aaa
repnz
pop
imul
xchg
sbb
and
insb
cmp
mov
mov
add
inc
cvtdq2ps
loopne
arpl
jle
gs
les
les
xor
jo
adc
sahf
and
inc
dec
add
or
xor
xor
loopne
pop
call
or
pusha
jae
xchg
or
icebp
dec
in
lock
jecxz
insl
xor
add
push
fiaddl
fiadds
add
or
pop
js
loope
call
dec
stos
and
pop
mov
pop
jmp
jb
pusha
dec
and
hlt
mov
pop
ret
pop
leave
xor
and
adc
fsubrp
jnp
inc
jbe
arpl
movups
cmp
dec
push
int
cmpsl
sub
inc
int3
loope
inc
mov
cld
std
lahf
subb
pusha
dec
add
or
adc
add
fsubrs
sub
push
pop
rolb
pop
xor
pop
or
cmp
dec
mov
cmp
dec
aam
mov
subb
xchg
or
sub
mov
and
or
fld
xchg
lock
or
or
mov
sbb
jge
insl
loopne
xchg
add
call
pop
leave
roll
dec
call
push
lret
ret
xchg
sbb
scas
xor
add
adc
dec
nop
xor
aam
pop
insb
and
test
sub
je
cmp
jb
cmp
ja
pusha
pop
pop
inc
cmc
push
push
mov
jmp
add
pshufw
fistl
scas
push
je
push
jne
mov
lock
aaa
add
push
xchg
dec
test
fnstenv
sub
stc
and
fisubs
add
add
je
or
push
mov
pop
andl
fmull
sbb
lock
add
push
int3
pop
fbstp
mov
jmp
xor
xchg
push
sbb
clc
fcoml
add
pushl
xchg
inc
cmp
or
mov
add
daa
mov
cmp
leave
jmp
outsb
in
pop
push
mov
in
push
adc
pop
xor
ret
inc
pop
outsl
flds
jle
mov
fildll
add
js
repz
pop
hlt
lods
shll
cmp
xchg
daa
daa
mov
outsl
adc
xor
inc
inc
or
pop
cld
addb
int
and
pop
adc
sub
adc
mov
inc
mov
and
mov
push
xchg
adc
push
xchg
sbb
inc
mov
mov
inc
mov
ret
xchg
jp
insl
loope
loopne
mov
in
fmuls
add
add
mov
pop
inc
ljmp
add
cmpb
mov
add
daa
nop
dec
lret
imul
inc
fsubrs
dec
jl
mov
sub
jge
mov
inc
push
mov
iret
movl
jecxz
push
shrb
fs
cmp
out
arpl
pop
push
mov
fsubrp
in
pop
repnz
inc
in
lock
in
and
push
sub
ja
out
sub
sbb
test
popf
test
dec
aam
shrb
xchg
xchg
outsb
or
adc
test
add
pop
aas
push
es
sbb
adc
push
cltd
lock
xchg
sahf
out
pop
sub
add
sbb
out
out
sti
fwait
icebp
out
sbb
mov
adc
xor
fadd
add
adc
mov
add
xchg
xchg
shl
jmp
push
rcl
xchg
xor
add
cmp
fmul
repz
dec
pop
xor
push
insl
dec
push
cmp
repz
lea
ja
mov
push
rclb
mov
mov
mov
daa
out
and
mov
and
push
lock
sub
pop
sub
cld
in
inc
nop
fstps
and
testb
aas
cmpsl
add
jb
pop
out
nop
int3
jns
out
pop
addl
imul
lods
mov
add
xor
loope
repz
jns
inc
xchg
lock
lock
fdiv
jo
mov
daa
sbb
js
aam
insb
movsb
mov
push
sbb
aaa
inc
aam
add
repnz
pop
repnz
inc
outsl
inc
dec
push
sub
int3
xor
mov
xor
scas
repnz
inc
fmull
loopne
out
mov
mov
add
push
in
sbb
inc
mov
push
nop
push
inc
jle
mov
aas
in
repz
dec
add
rcrb
inc
setle
sbb
or
inc
pop
or
and
shl
inc
js
jno
es
push
out
enter
adc
movsb
mov
add
std
incl
or
movb
sub
sbb
push
push
and
dec
lret
fisubl
mov
popa
stos
imul
bnd
icebp
jmp
sbb
aam
in
cmp
lahf
rcrl
repz
mov
mov
aas
dec
jmp
aas
push
daa
imul
clc
clc
xchg
dec
jge
std
repz
sbb
addr16
mov
inc
outsl
inc
hlt
clc
add
mov
into
int3
call
and
cmp
ja
mov
xchg
js
adc
lods
pusha
sbb
lea
ret
add
pusha
mov
xor
pop
push
pop
outsl
adc
mov
add
subl
test
add
inc
adc
dec
adc
jge
repz
rolb
outsl
pop
xor
or
fisttps
mov
adc
rorb
filds
cmc
xchg
scas
push
nop
inc
addb
push
mov
mov
aam
jg
xchg
in
sbb
sbb
mov
nop
call
sub
clc
arpl
test
add
lret
mov
push
insb
fldcw
fsubl
sub
push
fdivl
adc
sbb
sbb
jbe
popl
fs
subl
sbb
pop
add
imul
je
cmp
xor
xlat
not
lret
and
jl
daa
jmp
popa
pop
adc
ret
push
mov
xor
mov
cmp
sub
mov
adc
jmp
sub
icebp
loop
adc
inc
or
fcomps
pop
sub
xlat
sbb
repz
idivb
add
lods
adc
aas
fisttps
cmpsb
stc
xor
mov
and
jns
ret
stc
loope
dec
dec
mov
dec
pop
pushf
aad
mov
loope
and
xchg
testl
loopne
add
or
ss
icebp
dec
sbb
mov
les
add
xchg
add
sub
xor
xchg
xchg
sbb
mov
arpl
dec
push
cmp
into
mov
jmp
add
and
xor
aad
push
inc
adc
aas
xchg
lods
add
in
stc
cli
fstps
rcrb
int
rolb
cs
fst
cld
movl
sbb
dec
aaa
fwait
out
loope
rorb
sti
fistpll
fwait
jb
mov
das
ret
push
imull
mov
seto
pop
dec
rcrb
pop
and
movsb
movsl
popa
frstor
in
add
nop
inc
push
lock
pop
je
popa
addr16
addl
push
jno
in
push
push
arpl
lcall
sbb
sti
add
jmp
ss
add
js
adc
mov
and
mov
dec
js
addr16
or
and
popf
movsl
inc
pushl
mov
jp
and
dec
clc
inc
cld
and
and
aad
xchg
cmpsl
add
push
inc
inc
lea
mov
aam
test
fnsave
push
fmuls
sbb
cmpsb
xor
jo
or
cmp
xor
je
and
leave
push
mov
dec
test
and
or
add
inc
fucomip
push
xchg
push
dec
outsl
push
jns
shll
sub
popa
mov
and
xchg
sbb
adc
fwait
aas
or
mov
daa
xor
fs
mov
mov
pop
test
adc
lock
icebp
ss
cmp
enter
sub
aaa
dec
sub
pop
cld
call
jmp
aam
sbb
jmp
lock
call
ds
outsb
dec
fdiv
mov
js
out
mov
xor
leave
mov
stos
and
rol
test
test
flds
xor
sbbl
lods
inc
imull
xchg
icebp
jle
je
sub
lds
dec
lods
cltd
push
out
ja
sbbb
mov
daa
jmp
fdivrp
push
or
nop
inc
fprem
rclb
sbbb
call
ret
mov
pop
adc
cltd
test
pcmpgtd
mov
or
add
roll
daa
or
jo
test
inc
push
mov
lock
adc
js
dec
sbb
test
push
imul
roll
sbb
adc
nop
cmp
incl
dec
and
push
pushl
push
scas
mov
and
push
and
movsl
aaa
add
pop
dec
popf
add
pop
and
mov
pop
negl
push
inc
pop
addb
lea
sti
dec
pop
mov
addr16
pop
or
sub
das
adc
sub
push
jae
rcrb
dec
dec
or
cmp
add
aaa
sbb
repnz
nop
das
sti
pop
cmpsl
imul
push
add
ret
test
rorb
rcrb
mov
mov
mov
xchg
inc
les
icebp
sub
xchg
xchg
sub
push
jmp
xchg
adc
cmc
scas
xchg
ljmp
mov
mov
adc
jg
rcrb
adc
xor
push
lods
cmp
push
sub
movsl
fsubr
stos
int
xchg
test
repnz
shll
pop
inc
lsl
add
fisubl
pop
and
bound
jno
in
add
sub
cmp
jae,pn
imul
adc
sub
sub
xorb
add
or
outsl
insb
gs
outsl
es
add
mov
add
mov
dec
test
imul
arpl
xor
aaa
dec
outsl
popa
xor
xchg
rcll
xchg
jnp
pop
lea
inc
xchg
mov
ds
xchg
lock
jp
pop
jmp
dec
inc
mov
insb
movl
sti
int3
das
mov
rclb
lea
push
and
ss
sub
imul
out
out
pop
sarb
cs
and
adc
sbb
mov
jmp
fldt
add
fdivs
std
fmuls
dec
and
fs
in
jo
xchg
decl
or
leave
leave
loopne
loop
in
loopne
fisttpll
mul
rorl
fmuls
clc
xchg
fcoml
in
push
add
or
enter
dec
adc
out
mov
add
xor
imul
or
or
imull
mov
fcoml
push
push
add
dec
sbb
ds
cmpsb
pushf
or
mov
cmpl
outsb
shrb
sbb
cmp
pop
sbb
mov
sub
ficoml
lret
push
fs
movsw
mov
lods
push
fs
into
sbb
cwtl
test
xor
jb
and
lods
test
and
pop
es
je
push
fs
orb
sbb
lods
mov
inc
rorl
add
nop
add
sub
add
xchg
add
and
xor
xor
nop
dec
mov
mov
enter
sbb
orb
mov
mov
adc
or
mov
fs
push
xchg
lods
les
fs
fsub
icebp
rdmsr
and
pushf
int3
pop
pop
dec
repz
sbbb
and
sahf
out
lcall
jns
out
lret
xchg
lahf
repz
out
orb
sahf
iretw
repz
jae
aas
dec
pop
in
out
jns
pop
icebp
decb
push
sbb
and
inc
or
sub
out
or
sarl
stc
push
or
and
cmp
repz
jmp
jg
stc
cmp
repz
cmpsb
mov
inc
or
repz
cmpsl
push
fs
push
add
mov
jns
cmp
addb
sub
or
adc
adc
lret
fwait
cmp
sub
mov
push
push
add
enter
mov
sbb
jno
pop
repnz
mov
test
pusha
sbb
addb
push
ss
pop
outsb
or
jp
mov
rcrb
push
and
pop
add
sahf
out
adc
pop
jns
out
mov
inc
les
inc
inc
aas
and
leave
sbb
and
xor
inc
add
repnz
adc
and
cmp
and
sbb
jns
or
and
jo
sub
and
xor
push
mov
cmp
scas
mov
and
mov
xor
sbb
and
mov
and
jo
push
enter
out
sub
xor
es
dec
test
fisubrs
fmuls
jmp
sub
push
sub
sub
xor
aam
cs
pushf
xor
push
rcrb
fwait
push
pop
and
add
mov
xlat
orb
jmp
mov
push
daa
testb
sub
lock
mov
mov
xchg
add
cmp
fstps
inc
lods
dec
out
mov
daa
xchg
lcallw
sbb
push
shl
and
orl
test
or
sbb
add
mov
push
mov
outsb
out
mov
xor
push
mov
sub
les
sbb
fninit
daa
xor
pusha
nop
les
jbe
daa
daa
jo
add
ret
popf
pop
or
jmp
and
jne
fimull
cld
cmp
push
test
dec
adc
sub
cmpl
jmp
and
inc
add
sbb
or
or
and
mov
sbb
mov
inc
and
or
pop
lret
mov
cmp
mov
sub
and
enter
push
outsl
aam
mov
imul
cmp
daa
push
push
shrb
inc
sbb
dec
ja
and
out
addr16
push
inc
stos
add
dec
xchg
push
push
test
dec
sub
adc
cmpl
test
pusha
pushf
xor
pop
mov
inc
es
dec
cmpl
add
mov
sub
test
daa
js
or
imul
ficompl
inc
adc
cmp
leave
or
and
or
sbb
or
nop
sub
lea
dec
add
pusha
je
jp
adc
dec
add
ficoms
push
outsl
xchg
jle
popa
in
push
mov
cmpl
pop
inc
push
mov
sub
dec
roll
sbb
mov
inc
cmp
mov
or
and
cltd
add
sbb
xchg
stos
test
in
and
jnp
adc
adc
sbb
pop
rorl
ss
or
mov
add
inc
lahf
imul
pop
fs
cmp
adc
bound
xchg
stc
outsl
sbb
fcoms
pop
xchg
jne
lret
dec
les
jecxz
sbb
sbb
ja
jge
mov
adc
push
inc
sbb
imul
pop
jb
leave
pop
inc
push
cltd
mov
out
jge
add
call
dec
and
aaa
xchg
dec
cmpsb
sub
push
add
fmulp
add
push
inc
pusha
pop
jb
mov
into
mov
push
cmp
adc
jmp
xor
lea
or
sbb
push
inc
add
aas
or
std
cmp
enter
add
lcall
repnz
push
int
cmp
cmp
or
pop
je
xchg
adc
add
mov
nop
nop
mov
les
and
pop
scas
fs
mov
add
jne
jae
xor
in
mov
or
out
inc
aaa
cmc
add
ret
mov
push
add
mul
inc
push
mov
sub
cmp
mov
lea
add
mov
xor
xchg
xor
test
sbb
sti
add
pop
in
jo
jmp
jl
inc
push
stc
in
mov
aam
adc
repnz
adc
pop
inc
inc
cltd
loopne
jg
adc
popf
mov
jecxz
leave
push
xchg
sbb
mov
sub
sub
and
loope
add
xor
xchg
adc
shll
dec
pop
inc
cmp
jae
mov
fcomp
ret
sub
mov
sub
jg
inc
adc
and
rcrl
call
sub
divl
loope
push
popf
add
push
mov
jno
sbb
sbb
pop
inc
sbb
xchg
push
movsl
mov
sbb
dec
jb
push
mov
jb
cmp
loop
jo
mov
jne
or
adc
inc
push
inc
pop
add
ljmp
add
mov
push
adc
jl
add
aas
push
cltd
sbb
mov
test
stos
xchg
mov
xor
loopne
xorl
hlt
sbb
sub
test
orb
sbb
popa
outsb
mov
ret
mov
xor
add
fisubs
mov
mov
jno
cwtl
inc
lahf
adc
xor
cmp
sub
adc
adc
and
and
outsl
jmp
inc
dec
or
sub
fs
dec
adc
xchg
push
out
je
fs
and
jnp
mov
lcall
cmp
in
jmp
sub
adc
sub
mov
pop
jno
xor
ljmp
sbb
adc
je
inc
cmp
jne
hlt
decb
mov
jns
xchg
jb
fcmovbe
xor
inc
outsb
adc
pop
or
adc
cs
mov
inc
add
ret
pop
in
aam
mov
in
and
lret
xor
add
xor
fmull
or
test
sbb
inc
mov
adc
fwait
out
leavew
mov
repnz
xchg
and
cmp
xor
xor
sub
add
add
adc
mov
jp
shl
dec
adc
test
sub
inc
adc
enter
mov
push
add
pop
into
adc
xlat
xchg
loopne
jmp
in
ret
inc
mov
push
inc
cmp
cltd
dec
sbb
movl
lds
or
xchg
mov
lock
cmp
mov
movsb
int3
das
xchg
xor
dec
test
xor
rolb
bound
jns
xchg
pushw
xchg
sbb
inc
adc
jne
lahf
scas
mov
fs
sbb
mov
and
pop
loopne
xor
push
mov
push
lahf
mov
jae
mov
cmp
ja
or
fwait
enter
dec
add
sarb
mov
dec
daa
inc
or
ret
ss
test
adc
fs
add
or
sbb
shll
hlt
cmpl
mov
inc
loopne
lret
insb
mov
or
int
rcll
add
add
mov
sub
adcl
test
adc
cli
or
stos
add
sbb
xorb
add
das
or
sar
xchg
mov
idivl
adc
sub
pop
scas
dec
add
gs
mov
adc
in
mov
and
add
jmp
adc
add
dec
mov
sarl
mov
adc
jp
mov
push
inc
push
call
bndldx
or
inc
cmp
push
icebp
sbb
nopl
incl
lret
push
dec
lea
add
add
ljmp
add
loop
dec
push
xorb
adc
pop
or
xor
adc
decb
js
xorl
push
adc
cmp
inc
pop
push
adc
cmp
icebp
js
lock
add
mov
popa
cmpsb
cld
pop
decb
mov
add
rorb
push
cmp
push
daa
push
inc
inc
sbb
adc
add
add
aam
or
pop
rclb
or
pop
fsubrl
clc
adc
jne
test
call
jmp
sub
push
mov
cmc
es
lret
xor
mov
xor
xlat
and
js
imul
xor
js
or
call
nop
xchg
pop
jge
rol
sahf
test
mov
push
pop
pop
or
inc
enter
push
dec
cmp
sbb
xor
stc
dec
loopne
add
xchg
pop
pop
inc
xor
lahf
push
in
fwait
inc
mov
xchg
rclb
dec
push
push
add
mov
mov
aad
and
in
push
pop
lock
daa
and
jne
jmp
incb
in
mov
es
jns
mov
inc
rcrb
xor
test
pop
jg
sbb
sbb
pushf
movsl
and
lods
sub
or
popa
lods
push
lret
inc
aas
sbbl
lods
and
cwtl
push
or
push
pop
orl
jmp
add
adc
or
xor
ja
inc
jmp
aam
pop
sub
jb
and
adc
mov
mov
mov
lock
adc
xchg
dec
outsl
and
hlt
test
les
push
movsl
dec
or
push
frstor
sub
xor
pop
pop
pop
and
mov
or
push
cwtl
inc
adc
in
cwtl
jo
shll
cmp
mov
pop
test
jmp
and
les
adc
fdivrs
clc
rolb
adc
je
mov
das
in
and
hlt
and
test
pop
test
mov
dec
cmpb
sub
add
push
pop
and
sti
and
dec
mov
jp
es
jmp
adcb
dec
leave
dec
mov
add
inc
cmpsb
mov
leave
stos
jg
sub
enter
xor
dec
inc
mov
lods
dec
pushf
or
or
add
loop
in
cmp
xor
add
es
sbb
sub
dec
dec
in
es
inc
sahf
push
xor
rorb
cmp
xchg
rcrb
push
mov
nop
add
add
addb
sub
or
jge
pop
xchg
push
icebp
pusha
and
ljmpw
inc
cmpsb
sub
mov
lret
xor
sbb
and
xchg
lcall
daa
lea
add
clc
cmc
mov
out
out
mov
je
fwait
dec
sbb
bound
mov
out
mov
add
dec
pushf
fwait
adc
shrl
jo
adc
adc
sbb
test
sub
mov
cmpsl
mov
adc
movsb
and
outsb
imul
push
nop
push
lcall
mov
lds
sbb
xlat
sub
add
push
nop
iret
mov
subl
sub
imul
ja
push
sbb
and
mov
jns
jl
cmp
cld
dec
clc
scas
clc
sub
out
sbb
and
mov
insl
xchg
sub
xor
inc
sbb
and
inc
adc
test
mov
fsts
mov
jbe
mov
add
jae
jbe
sub
pusha
lahf
add
dec
cld
sbb
push
ret
and
pop
xchg
imul
cwtl
or
dec
push
repz
lret
imul
ss
je
test
push
push
mov
imul
dec
jmp
iret
sub
aam
pop
dec
jne
xor
pop
jecxz
test
cmpsb
push
stos
mov
ja
cmpl
cltd
dec
inc
cmp
lock
repz
mov
mov
pusha
adcb
jp
icebp
loope
adc
daa
nop
repnz
sbb
mov
cwtl
lds
cmp
push
scas
or
xor
jbe
mov
inc
push
imul
sbb
push
inc
push
cld
jns
and
sbb
clc
sub
cs
cs
add
sbb
test
add
xor
or
sbb
jl
dec
dec
insb
cmp
jns
xchg
adc
pop
inc
cmpsb
out
pushf
popf
pop
pop
add
sub
shrl
lea
inc
clc
leave
or
or
fbstp
icebp
out
call
fwait
or
sub
jne
in
imul
or
add
orl
sbb
xor
cmp
iret
rcr
or
fstps
pop
mov
pop
add
stos
mov
sub
inc
cmp
sbbb
rorb
mov
insl
loop
pop
cmpsl
adcl
aam
push
xchg
push
imul
xchg
cmp
cs
jo
fwait
sub
test
jmp
movsb
mov
dec
outsl
pop
or
aam
cs
dec
pop
push
popa
and
lock
std
adc
adc
into
and
jnp
and
fldcw
or
xchg
inc
push
inc
push
es
fs
cltd
mov
and
mov
sbb
inc
push
std
mov
aam
mov
fs
incb
loop
insb
mov
pop
in
add
das
dec
loopne
adc
sub
in
sbb
jns
rorb
add
rorl
mov
push
push
insl
insw
cmp
pop
push
gs
sbb
sub
push
lock
mov
inc
and
popf
shlb
and
gs
iret
mov
aad
add
outsl
shl
sbb
je
mov
mov
iret
imul
fwait
dec
rcrl
adc
jp
add
stos
mov
inc
cmpsl
pop
das
inc
pop
lcall
sub
insl
lods
ret
cmpsb
push
mov
dec
pop
leave
push
xchg
or
mov
inc
loopne
add
xchg
mov
jo
push
push
mov
outsb
mov
daa
movsb
inc
aad
cmp
xor
ret
sbb
test
je
out
jno
sti
add
mov
add
jbe
or
pop
roll
test
dec
mov
aas
outsl
or
movsl
xchg
or
incb
add
mov
push
fwait
inc
add
jmp
add
jmp
flds
fmuls
add
xor
fdivrp
adc
in
flds
aaa
inc
sub
add
dec
inc
push
inc
lahf
sub
xchg
or
inc
lods
int
notl
push
jge
insb
adc
imul
sub
pop
lea
add
movsl
rorl
xor
es
lds
cltd
dec
adc
mov
pop
pop
mov
or
sti
jg
sbb
imul
xor
sub
xchg
aad
sbb
cltd
fisubrs
nop
cmp
push
out
or
add
add
pop
pop
xor
or
mov
lret
add
dec
push
dec
push
push
mov
xor
fcom
mov
xor
loopne
jne
xchg
outsl
and
adc
lock
lret
pop
xchg
int
mov
filds
add
mov
mov
out
or
or
sbb
jmp
fbld
aas
xchg
push
inc
sub
ficoml
xor
mov
cli
insl
xor
sbb
mov
daa
pop
fisttpl
adc
dec
hlt
and
insl
mov
outsl
sbb
daa
cmp
push
sarb
in
cmp
insb
inc
imul
jmp
sbb
sbb
in
pop
lods
fstps
inc
ja
insl
sub
shlb
sbb
mov
push
xor
dec
lea
aad
ja
cmp
or
or
fcomip
fbstp
daa
pop
aam
ret
into
repz
imul
jo
add
sub
iret
pop
cld
mov
mov
das
or
sub
push
push
add
mov
jbe
jnp
loope
out
sbb
pop
mov
push
js
cmpsb
sbb
fnstenv
inc
pop
and
inc
dec
fadds
sub
pop
adc
enter
xchg
ret
and
sbb
cmp
jmp
roll
add
sub
out
sub
daa
xor
arpl
push
pop
xor
leave
aas
mov
cmp
es
push
jl
sub
dec
ss
xchg
jns
inc
dec
or
test
mov
xchg
push
jge
cmp
add
xchg
push
dec
adc
cmp
sbb
inc
inc
mov
dec
xchg
jno
pop
outsl
in
sbb
leave
aam
cmp
dec
aam
dec
mov
pop
loope
test
add
orl
cmp
adc
jne
shll
popa
mov
insl
mov
mov
pop
dec
popf
arpl
aaa
fildl
xor
pop
add
out
and
sub
mov
lods
sub
enter
cmp
cmp
cmp
fdivp
pusha
or
cltd
sub
lock
push
inc
push
aaa
cmp
fidivrl
pop
xchg
inc
xchg
mov
lock
or
das
adc
jo
inc
pop
mov
outsb
outsb
push
sbb
sub
xor
cmc
subb
arpl
jne
xorb
sbb
sbb
jbe
adc
and
insl
ja
movb
adc
inc
je
xor
outsl
rcrl
and
lcall
push
enter
mov
or
push
adc
rorb
sahf
out
push
and
cmp
stc
stos
cmp
pop
push
inc
jmp
cmp
add
cs
adc
aam
dec
push
add
bound
ds
or
shrl
cmc
xchg
push
sti
lfs
sbb
in
or
push
add
push
lret
pushf
outsl
mov
sbb
inc
int3
push
lock
push
jl
dec
jmp
inc
inc
jecxz
repnz
inc
xchg
inc
insb
jg
inc
push
ja
inc
push
add
inc
dec
xchg
mov
add
xor
inc
inc
ltr
lods
cmp
add
sarb
push
shll
add
and
scas
pusha
dec
je
mov
psubusb
xor
adc
insb
dec
movsb
xor
out
and
leave
mov
fs
sbb
sub
es
pusha
push
jl
and
and
or
jnp
xchg
insl
les
fimuls
or
inc
sub
push
enter
sub
sub
dec
push
sbb
xchg
pusha
sbb
je
dec
cmp
inc
cld
push
push
cmp
inc
xchg
lods
push
xchg
jo
xor
add
add
movsl
xchg
dec
or
pop
mov
cltd
jo
and
int3
aas
enter
inc
fsubr
das
imul
arpl
push
and
dec
push
cmp
and
enter
je
push
and
stc
add
push
and
add
mov
push
mov
sarl
xor
cmpsb
sbb
inc
sarl
push
jo
pop
xor
and
dec
aas
dec
jge
mov
xchg
add
inc
jb
movsb
lea
mov
mov
call
jmp
cmp
mov
inc
mov
xchg
lock
sub
les
push
loop
add
sub
or
jbe
dec
cmp
xlat
leave
ret
jmp
inc
aam
jns
push
inc
mov
add
inc
ja
sub
jb
lods
stc
add
leave
insb
outsb
dec
bound
movsl
jno
mov
sbb
jb
mov
in
xchg
add
cmpsb
xlat
push
call
aam
test
inc
popf
pusha
movsl
xor
xchg
dec
test
int3
dec
jmp
cli
mov
sbb
add
inc
pop
sub
and
outsl
ljmp
inc
lock
shl
mov
dec
or
in
dec
sbb
aaa
insb
sbb
add
mov
cs
cmp
mov
sbb
cmp
ss
ret
rcll
mov
pop
xor
pop
dec
pop
jb
cmovbe
inc
and
inc
inc
cmp
inc
and
adc
ss
xchg
mov
fldl
bound
push
movsb
les
sub
adc
mov
push
dec
mov
jne
notb
sbb
shlb
scas
sub
add
xchg
je
dec
lahf
cwtl
outsl
or
cmp
mov
or
scas
int
adc
leave
loop
adc
xchg
cld
ds
int3
data16
push
pusha
popa
call
movsb
mov
xchg
and
add
loopne
dec
movsl
mull
push
rclb
sahf
sbb
dec
outsb
cmpsb
fwait
add
inc
and
mov
or
cli
movsl
pop
aad
lods
iret
test
push
sbb
sbb
pop
dec
loopne
aam
stos
push
or
add
int
cmpl
call
je
sub
xor
ret
sahf
outsl
xchg
or
inc
das
jmp
cmpsl
sbb
jnp
or
imul
cmp
test
add
or
adc
push
push
dec
sub
adc
inc
jae
bsr
cmp
add
aaa
inc
je
aam
mov
xchg
mov
xchg
aaa
xor
aam
and
pusha
inc
mov
loop
add
mov
test
scas
loope
jmp
sarb
imul
outsb
jnp
add
nop
add
xchg
scas
test
cmp
rcrb
dec
outsb
mov
movsl
cmp
rorb
push
inc
inc
ljmp
sbb
sub
xor
scas
pusha
push
fcmovu
add
sub
push
push
mov
aam
adc
cltd
pop
movsl
pop
or
fwait
out
push
xor
je
sbb
out
jbe
xchg
sub
or
aas
xchg
dec
testl
dec
cmpsb
push
add
push
cld
into
pusha
or
ss
inc
je
inc
add
rorb
sbb
xorl
sarl
cmp
out
sub
jge
arpl
insl
or
prefetch
nop
or
push
sbbb
sqrtps
xchg
pop
adc
sub
arpl
adc
or
leave
push
inc
sbb
push
push
pop
nop
or
lret
xchg
cs
adc
mov
mov
sbbb
inc
lahf
mov
xchg
xchg
sbb
cli
fs
adc
xchg
sbb
dec
sahf
ja
jno
nop
pop
and
inc
or
dec
sbb
aad
stos
cmp
sub
xchg
xchg
push
inc
dec
sub
cmp
add
js
data16
mov
mov
and
in
push
imul
daa
and
lea
inc
xchg
push
sub
jge
and
add
imul
xchg
mov
inc
jo
mov
sub
push
ret
or
xchg
sub
in
sub
and
mov
push
add
rcrl
stos
sbb
jo
sbb
add
andb
out
js
sub
adc
imul
pop
sbbb
xor
add
lock
push
cmc
push
dec
faddl
outsb
in
or
jmp
popa
sub
push
ja
pop
in
pop
cmpsl
test
popa
mov
cmpsl
loopne
jecxz
sub
mov
cmp
mov
repz
adcb
add
gs
les
popf
pop
fs
ljmp
loope
mov
mov
insl
jo
xor
lret
and
inc
sub
repnz
jge
push
subl
push
jne
lcall
xor
repnz
shlb
repnz
sub
adc
inc
fcomp
jns
sub
xor
pop
inc
loopne
mov
in
in
push
fisubrs
ss
mov
dec
lock
shll
lods
and
inc
iret
xchg
nop
pop
mov
xor
cld
es
sbbl
dec
adc
enter
dec
int3
sbb
and
and
add
xchg
xchg
push
adc
mov
out
adc
ja
mov
or
push
inc
mov
inc
loop
mov
inc
jno
add
dec
jnp
xchg
mov
mov
xor
push
push
popf
xor
dec
imul
add
inc
and
cmpsl
in
sub
push
and
popf
or
outsl
sbb
enter
sub
nop
dec
push
push
xor
xchg
and
xchg
sti
aad
add
sub
pusha
pop
add
add
fadd
pop
mov
lds
xor
ss
jecxz
pmulhw
and
out
scas
sbb
dec
push
and
cmp
mov
mov
pop
and
cmpsb
fsubl
in
inc
add
pop
inc
sbb
imul
mov
aaa
cmpsl
mov
sbb
adc
xchg
imul
mov
push
ja
andb
movsb
shll
push
loope
pop
mov
xor
push
or
in
xor
adc
adc
das
adc
or
insb
and
or
xchg
loopne
adc
jle
jl
add
scas
addb
and
mov
repz
mov
cmp
test
sahf
cmpsb
pop
adc
cs
pop
repnz
lods
add
add
cmpsl
cmp
sbb
or
add
xor
jns
orl
push
and
add
push
les
imul
arpl
test
fs
add
or
pop
gs
sub
repz
js
jne
fwait
and
dec
repz
sbb
adc
or
inc
out
shrb
ljmp
loop
sbb
sbb
adc
jns
pop
inc
xor
pop
add
or
sbb
push
jle
insl
pushf
push
jp
fimull
or
aam
mov
das
push
dec
mov
mov
cmpsb
jle
xchg
push
push
adc
sub
out
test
fistpl
xor
or
enter
jle
pop
rcrl
and
dec
cwtl
test
mov
or
xchg
adc
fwait
or
pop
ja
inc
sub
in
jle
xchg
sub
add
inc
js
cmp
push
cltd
or
push
mov
push
or
push
dec
xor
lcall
inc
js
cmp
or
dec
mov
pop
add
cmpsl
inc
adc
mov
pop
and
sub
push
push
ja
cmp
or
or
or
adc
jo
or
cmpsb
push
adc
push
jmp
hlt
pop
push
mov
scas
push
lahf
push
push
sbb
iret
jnp
sub
or
or
popf
out
cmp
or
or
dec
push
adc
cmc
movsb
outsl
cmpb
push
pop
add
lret
cs
push
fidivrs
sbb
sbb
push
pop
push
sbb
or
add
or
mov
iret
and
push
push
pop
adc
rcrl
adc
push
jle
and
mov
adc
sbb
stos
push
into
lea
sub
dec
pop
dec
aas
clc
and
lcall
mov
push
mov
add
mov
out
nop
push
push
xchg
or
push
mov
pop
or
mov
popf
push
add
or
mov
cld
stos
push
lock
scas
les
pop
jns
lcall
and
push
dec
outsl
pop
sbb
mov
dec
lea
mov
dec
pop
push
mov
sub
cwtl
or
xchg
xchg
xchg
cmpsl
push
or
push
xor
adc
or
or
xchg
add
dec
push
jecxz
add
mov
sti
dec
mov
sub
mov
xor
xchg
les
fs
sbb
sbb
dec
mov
popa
mov
movsb
mov
or
push
jle
cmp
jl
in
test
and
lods
push
inc
mov
outsl
pop
mov
out
call
insl
or
cs
sbb
out
ret
or
sbb
fs
mov
mov
daa
pop
out
add
and
and
insl
mov
sub
pop
dec
in
cmp
clc
xchg
inc
pop
lods
jns
orl
dec
fsub
fsubr
outsl
sub
inc
out
sub
imul
add
dec
loopne
loopne
inc
sbb
add
data16
lock
cmpsl
and
imul
xor
hlt
fstpl
fwait
push
push
lcall
pop
in
jae
popa
pop
sub
pop
dec
dec
cs
lods
jge
inc
mov
inc
lock
sbb
repz
adc
and
xor
sub
sub
add
dec
pusha
js
xor
out
pop
adc
int3
add
jne
jl
mov
mov
sbb
or
fucomp
add
inc
aaa
cwtl
adc
add
lods
nop
xchg
inc
cwtl
xchg
lcall
inc
sbb
shr
inc
pushf
lcall
pop
pop
pop
enter
lock
or
and
jge
mov
sub
pop
ja
or
cmp
push
mov
std
or
jbe
jl
add
divl
mov
movsl
pop
mov
mov
xor
adc
adc
add
sub
mov
add
es
or
pushf
add
aam
test
and
xlat
rcll
push
push
scas
dec
pop
mov
hlt
insb
push
add
call
jecxz
add
or
ret
adc
pushf
cmp
outsb
add
or
xchg
sbb
enter
xorl
xchg
jmp
nop
scas
push
mov
add
loope
xchg
insb
add
sbb
pop
and
pop
bound
dec
or
sti
xor
fcmovb
xchg
int3
faddl
jmp
adc
sub
xchg
repnz
sub
ja
bound
add
movswl
bound
add
or
dec
push
add
or
dec
in
xchg
int3
or
mov
jle
jl
lds
xchg
xor
mov
pop
or
sbb
pop
ja
pop
loope
cltd
xchg
jae
sahf
rclb
sbb
push
int
or
jbe
test
sbb
xchg
clc
clc
add
je
stos
jecxz
repz
cmp
in
arpl
loop
push
xchg
loopne
aaa
and
test
test
add
mov
and
nop
push
add
adc
xor
push
inc
arpl
mov
dec
ds
adc
iret
xchg
pop
inc
jp
cmpsl
movsb
fs
cld
mov
mov
insl
adc
and
xor
mov
xchg
push
ljmp
adc
push
je
nop
add
sahf
mov
and
adc
shlb
adc
and
pop
aaa
pop
cmpsl
pop
and
pop
sub
sub
mov
jle
sub
imul
lods
jbe
sub
stc
addr16
add
jl
iret
jnp
push
inc
fsub
add
or
sub
lret
cmp
sub
pop
lret
pop
repnz
nop
insb
dec
add
dec
mov
mov
pop
sub
jne
inc
outsl
push
mov
push
cltd
test
mov
and
movsl
pop
insw
stos
sub
lret
ja
and
push
pop
ret
das
mov
jbe
fwait
or
inc
add
imul
nop
mov
nop
addr16
ror
jb
xor
lcall
in
inc
popa
popf
push
add
and
mov
sub
xchg
hlt
push
insb
jge
and
xchg
dec
cmpsb
jno
movsl
lahf
rclb
lret
imul
mov
orl
jl
add
inc
sahf
and
pop
mov
sbb
aam
call
push
fildll
nop
outsl
fsubrl
cmp
add
mov
rclb
xchg
pusha
jp
jae
fs
fmuls
add
testb
pop
aad
hlt
pop
cltd
fisttps
fdivrs
imul
and
and
inc
imul
shlb
out
or
and
add
and
xchg
aaa
repnz
subl
lea
mov
es
mov
mov
or
adcb
data16
or
fimuls
fldcw
push
mov
call
xchg
jns
sahf
pop
sidtl
loopne
pop
jo
arpl
dec
pop
xorl
aaa
pop
inc
sub
adc
push
roll
adc
or
sbb
and
adc
adc
xor
push
lahf
xchg
add
sbbl
jb
cmp
stos
insb
lea
jmp
sub
and
scas
and
mov
dec
push
cmp
pusha
insb
add
stos
mov
pop
mov
dec
insb
xchg
insb
rorb
in
mov
mov
enter
dec
shrb
and
pop
stos
jb
push
in
push
aas
loopne
add
add
insl
fldcw
jmp
rclb
pop
xor
sub
je
dec
je
add
jmp
inc
xor
sarl
push
mov
jmp
clc
inc
pop
jb
push
and
ret
xchg
xchg
push
push
push
add
sub
sub
pop
xor
mov
push
popa
cmpl
outsl
enter
test
outsl
nop
rcrb
outsl
or
mov
sbb
ja
sbb
dec
dec
imul
fildl
ret
sbb
add
mull
dec
jnp
lods
in
mov
sbbb
dec
add
testb
xor
inc
mov
sbb
hlt
ficomps
fidivs
dec
dec
adc
xor
cmpb
ja
and
adc
inc
push
fldenv
mov
ja
xchg
or
enter
jae
jb
jo
and
leave
mov
push
adc
ret
notl
orb
fists
sub
pop
lods
pop
add
cs
xchg
dec
sbb
pop
pop
mov
rorb
clc
mov
cli
push
int
nop
cmp
ss
cmp
mov
sub
cmp
add
es
jbe
sahf
sub
or
xor
pop
rorl
xor
pushf
jge
cmpsb
lea
jae
sbb
mov
sub
int3
cmp
fucomip
loope
popf
xor
adc
or
xor
roll
cmp
xor
and
and
xor
in
sbb
sbb
sar
jo
addb
jmp
fadds
mov
lcall
cmc
or
imul
sub
shr
sbb
adc
or
xchg
fcompl
jns
out
sbb
or
add
push
push
test
and
mov
movsl
jg
scas
and
pop
add
fadds
pop
push
mov
sub
push
rclb
add
add
add
in
adc
jle
adc
sbb
pop
add
mov
cmp
daa
and
lods
or
xchg
jne
aad
aad
inc
jns
xlat
mov
stos
xor
jge
ljmp
pop
push
out
fcmovu
mov
push
or
sub
mov
or
dec
dec
addr16
add
dec
jne
dec
inc
mov
popa
lock
jne
andb
sub
sub
add
mov
inc
out
inc
sbb
pusha
cmc
adc
and
pop
pop
xlat
mov
bound
andb
cmpsb
fisttpl
inc
shll
call
rorb
push
add
mov
push
clc
mov
cmp
jg
lea
adc
in
add
mov
xor
pusha
in
dec
inc
jo
mov
mov
xchg
xor
jne
loopne
sarb
jne
push
xor
jne
or
sub
push
nop
cmp
adc
add
sbb
fldl
call
sbb
jns
cs
cwtl
sbb
and
clc
outsb
inc
ja
sbb
sub
pop
adc
aad
pusha
jae
inc
inc
or
popf
sub
dec
ja
xchg
mov
jne
in
clc
jnp
mov
or
sbb
or
hlt
mov
icebp
mov
int
sbb
hlt
call
and
call
inc
lock
call
in
in
loope
sbb
loop
cld
sub
push
fcoml
cltd
dec
and
mov
or
pop
xor
xor
cmp
rol
rcl
sub
outsb
loope
jmp
push
jecxz
movsb
insl
jp
push
push
pusha
mov
mov
or
jo
out
popa
xorb
sbb
xchg
pop
lock
mov
mov
jp
mov
sbb
out
add
loope
outsb
sbb
mov
jne
pop
sbb
xchg
mov
and
nop
add
sub
and
call
inc
mov
or
add
pop
aam
jecxz
push
add
sahf
adc
ds
add
stos
addl
fmull
jecxz
mov
ror
push
mov
lret
pop
cmp
mov
ja
inc
stos
imul
gs
dec
enter
dec
fistpl
xor
les
dec
shrb
mov
bound
sarb
or
insl
shll
jns
add
sarb
push
in
or
mov
add
cmpsl
inc
and
mov
pop
inc
fwait
adc
adc
stos
inc
mov
or
inc
mov
xor
push
mov
mov
xchg
and
lods
mov
stc
clc
lds
test
xor
gs
ljmp
div
mov
add
mov
sub
pop
adcl
pop
pop
push
dec
sbbb
rorb
xchg
push
sbbl
lcall
loopne
dec
mov
cmp
clc
sub
mov
icebp
and
lods
fcoml
fdivrs
in
mov
fdiv
lock
mov
jne,pn
inc
mov
mov
adc
popa
decl
xor
push
ret
dec
fidivs
cmp
sti
pushf
inc
xor
imul
stos
pusha
sub
xor
and
pop
rorb
insb
int3
dec
jo
movsl
iret
adc
jnp
adc
popa
movsb
jmp
fstl
rorl
icebp
lock
ljmp
cwtl
outsb
nop
out
xlat
mov
xchg
out
les
and
mov
inc
or
cwtl
mov
xor
mov
ret
mov
mov
lcall
mov
sub
mov
xor
lods
jb
or
imul
test
xor
popa
outsl
pop
adc
cmp
sbb
xor
jl
les
loopne
push
add
aaa
push
sarl
icebp
and
jmp
test
sar
add
pop
add
mov
or
add
add
add
lcall
sti
push
adc
in
or
push
xor
imul
add
in
js
add
stos
pop
insb
pop
pop
mov
adc
addb
add
jnp
addb
fisttpl
add
lahf
fldl2e
je,pn
or
adc
pop
fldt
dec
test
fildll
sbb
insb
loopne
rclb
mov
mov
add
addr16
mov
loop
jo
dec
add
pusha
or
xor
imul
das
push
xchg
push
test
sub
pop
test
jle
ljmp
jno
daa
insl
lods
hlt
std
mov
verw
dec
sahf
sbb
xchg
inc
inc
test
mov
inc
sahf
jle
push
sbb
sub
xchg
xorl
nop
dec
lcall
pop
add
pop
out
sarb
call
cmpsb
dec
cmp
dec
jbe
mov
dec
aaa
dec
add
lock
adc
repz
fs
push
cmp
in
mov
mov
mov
pusha
cmp
jg
pop
and
rolb
jnp
pop
loope
jle
jmp
addr16
xchg
inc
mov
fnstenv
xchg
and
pop
imul
xor
mov
std
arpl
add
jg
fdiv
sub
push
jecxz
add
movsb
movsl
mov
pop
inc
add
std
repz
sbb
xor
lock
gs
movsb
mov
stos
jno
adc
out
add
xchg
cmp
jne
inc
and
sarl
jbe
xchg
stos
sbb
jmp
mov
dec
cvtps2pi
nop
mov
pop
dec
imul
dec
pop
jl
in
sbb
sub
sub
dec
rorb
test
fs
add
divb
in
sbb
mov
movsb
stc
lods
outsb
inc
fmuls
mov
imul
mov
sahf
sbb
call
mov
lret
or
sub
aaa
jmp
lock
mov
push
insl
test
cmp
mov
jmp
insb
rcll
push
adc
ret
leave
add
adc
int3
jle
daa
add
or
inc
push
dec
lcall
xor
dec
add
pop
or
push
pop
pop
fldl
adc
shlb
inc
mov
dec
pop
push
or
push
xchg
mov
lds
push
cmp
adc
lds
push
push
xlat
push
xchg
rcll
imul
dec
add
es
push
outsl
js
adc
jb
jecxz
mov
add
pop
enter
andl
inc
test
xor
sub
aam
shll
inc
aaa
ds
int
in
dec
cmc
or
test
xor
pop
push
push
incb
push
pusha
jmp
push
clc
or
pop
inc
xor
adc
rclb
test
push
sbb
jns
int
clc
inc
adc
mov
pop
test
dec
push
fildl
mov
sub
aas
xor
add
cmp
jb
mov
mov
mov
sub
out
add
sub
jbe
hlt
lcall
lods
add
cmp
adc
jae
mov
add
adc
and
or
lods
mov
sti
mov
or
mov
stos
ss
outsb
add
ds
test
adc
jb
xrelease
fildll
and
dec
adc
std
or
dec
sbb
or
sbb
gs
cmp
mov
add
mov
in
add
outsl
cmp
jae
cwtl
fstp
cmp
add
add
insl
scas
xorb
sub
fucomip
popf
or
push
xor
pop
mov
jle
mov
jecxz
jmp
sub
fsubs
nop
add
inc
pop
jmp
mov
sbb
scas
sub
inc
mov
inc
fsubr
add
adcl
xchg
xlat
cli
cli
ret
add
fs
xchg
call
mov
xor
fistl
lods
cmp
je
sub
fcompl
fidivrl
add
les
loop
and
xor
add
xchg
ja
pusha
adc
mov
jmp
adc
clc
xor
mov
fwait
add
sub
mov
insl
and
out
jecxz
mov
test
push
and
add
mov
mov
jg
stos
cltd
cmpsb
push
adc
jns
lock
mov
test
loope
adc
test
or
js
out
mov
dec
testl
adc
mov
or
inc
add
mov
add
cmpl
push
add
mov
add
xchg
xchg
mov
push
xchg
cmpb
les
roll
inc
adc
add
xchg
outsb
push
sbb
add
lcall
and
xor
cmp
lea
or
add
dec
pusha
mov
xchg
mov
jne
mov
clc
mov
push
mov
mov
sub
sbb
mov
mov
inc
push
das
loopne
add
push
data16
inc
or
adcl
int3
cmc
push
fadds
cmp
mov
sub
mov
sbb
sti
ret
push
mov
or
int3
and
out
add
test
mov
or
pop
cmpsl
stos
xchg
sbb
imul
and
push
pusha
cld
sbb
lods
adc
push
sub
cmp
pop
jno
pop
pop
stos
pop
xchg
insl
sbb
roll
hlt
xchg
cmp
push
mov
add
nop
stc
add
test
add
mov
and
lcall
imul
outsb
cs
mov
jmp
in
push
mov
and
fmull
adc
sar
and
cmp
xorb
cmp
loop
loop
pop
aam
dec
test
cli
mov
mov
xchg
and
inc
arpl
outsl
mov
nop
lret
add
cmp
insl
insb
push
or
ljmp
ljmp
xchg
mov
inc
cmp
jne
fucomip
out
add
loopne
sbb
fimull
sbb
xchg
ret
shr
cmp
clc
repz
mov
pop
and
es
mov
adc
mov
mov
mov
add
mov
adc
pop
inc
pop
dec
fcom
adc
jo
dec
and
ret
add
add
mov
cmpsl
test
ljmp
fwait
add
dec
cmpsb
call
mov
jmp
push
push
push
inc
xor
ret
push
inc
ljmp
fnstenv
lock
aaa
inc
jg
inc
or
ret
push
adc
out
lock
pop
cmp
ret
insl
cmp
int3
iret
push
or
push
imul
lds
popa
pop
test
inc
cmc
push
mov
sbb
mov
rolb
incl
inc
add
addr16
and
lret
jbe
sbb
outsl
sub
push
inc
fidivrs
mov
push
movsb
mov
push
adc
jb
or
push
push
pop
cmpsl
stos
push
sarl
pushf
mov
jne
mov
sahf
js
push
cld
popf
mov
ret
and
cli
inc
adc
jo
dec
mov
cwtl
pop
jg
sbb
or
dec
std
scas
fistpll
add
lret
mov
data16
dec
repnz
loope
pop
jg
dec
sarb
cli
jl
sti
pop
dec
inc
sti
jle
pop
mov
cld
mov
imul
push
sbb
push
lea
lock
xchg
mov
addl
cld
jge
ds
sti
test
mov
ret
xor
mov
dec
xchg
mov
aas
mov
out
call
or
ret
sub
add
add
sub
add
adc
add
mov
or
fiaddl
adc
mov
xchg
xorl
ret
cmp
push
cmp
movsl
mov
ds
fidivrl
jo
xchg
lret
adc
adc
fiaddl
jle
in
and
or
insb
and
shlb
push
pop
dec
aaa
lock
in
mov
fdivs
pop
mov
xor
rorl
repz
pop
lock
or
xchg
cmp
fdecstp
add
mov
dec
scas
mov
mov
out
test
inc
jae
cmp
lea
sti
add
sub
cmp
jg
sbb
sub
ret
in
sahf
mov
outsb
mov
jae
or
sbb
inc
test
fst
popf
pushf
xchg
mov
push
inc
xor
sub
loop
es
add
test
jg
or
sub
outsl
add
sarl
mov
cmp
push
lret
cmp
mov
or
jge
leave
clc
and
jmp
insb
and
add
add
jl
jno
push
in
lea
and
push
push
outsl
add
cmp
dec
add
xor
jp
sarb
loop
loopne
neg
jbe
out
jg
xchg
icebp
or
add
outsb
shll
popa
and
add
xor
or
cmpsl
cmp
push
adc
inc
in
sbb
inc
mov
pop
rolb
fisttpl
xor
inc
jl
ja
jmp
jne
cmpsl
and
inc
dec
or
inc
pop
pop
sbb
loopne
movsb
pop
leave
mov
nop
pusha
inc
addr16
leave
add
add
push
xchg
insb
das
sbb
iret
pop
xor
and
mov
add
xchg
mov
fcoms
adc
xor
mov
jno
push
jp
aas
testb
or
adc
adc
inc
inc
in
mov
ljmp
int
daa
pop
pop
pop
pop
enter
lds
enter
add
pop
dec
or
inc
test
leave
xchg
add
sarb
in
das
nop
push
lds
sub
and
push
push
inc
lods
pop
mov
push
das
add
add
dec
mov
or
push
adc
fsubs
add
inc
jnp
lcall
push
cmp
push
add
aad
lock
into
aas
daa
mov
cli
movl
test
rorb
push
add
repz
xor
lea
cmp
cmpsl
inc
in
xchg
jne
add
add
test
xlat
push
aad
mov
sbb
sarb
jge
mov
jns
jmp
jge
push
xchg
push
test
or
lret
xor
push
sarb
xchg
sbb
leave
cmp
add
dec
pop
add
add
loope
pop
xabort
cmpb
or
inc
add
or
push
notl
mov
pop
push
mov
xchg
and
and
add
fmuls
xchg
pop
pop
push
mov
cmp
ja
push
jle
mov
inc
inc
cli
insl
push
div
pop
das
hlt
push
movb
dec
mull
mov
sbb
dec
add
inc
dec
arpl
mov
cmpsl
sub
and
test
shr
int
pop
mov
loop
data16
push
and
in
imul
sub
jmp
jle
cmpb
and
pop
movb
data16
inc
test
stc
pusha
pop
jae
add
pop
mov
jne
popa
or
xchg
ret
popa
push
add
dec
jno
push
les
dec
fwait
push
ret
aaa
pop
add
jmp
push
push
adc
repnz
fmull
sbb
pop
or
je
jge
and
lcall
subl
test
push
jae
jbe
adc
js
xchg
push
add
ret
mov
ljmp
adc
adc
push
shlb
inc
mov
cmp
inc
mov
adc
push
mov
mov
fwait
pop
js
shrb
jnp
sub
loope
add
gs
sbb
sbb
mov
adc
jecxz
mov
mov
sub
pop
xor
outsl
xor
add
inc
and
lahf
jb
loope
ret
mov
xchg
mov
sbb
movsl
mov
ja
filds
xchg
jo
push
add
fistpll
dec
movb
or
or
jns
not
rcl
test
inc
fisttpl
cld
xchg
mov
or
je
sar
ja
add
push
sub
fdivs
es
jmp
ds
mov
inc
push
add
cltd
ret
out
mov
lahf
or
xorb
push
out
jns
dec
add
and
xchg
jb
sidtl
mov
sub
adc
inc
cmp
jne
fldz
jmp
mov
add
mov
cltd
out
sub
sbb
add
in
fistps
add
loopne
loopne
adcl
leave
fstcw
fldcw
fnstsw
fimuls
adc
not
and
cmpsl
mov
scas
sbbb
lcall
inc
cmp
inc
sub
fs
ljmp
iret
xlat
imul
mov
pop
pop
inc
ljmp
ficompl
addr16
inc
jmp
pop
fwait
movsl
mov
xchg
add
lea
das
add
lods
inc
out
and
nop
adc
out
iret
push
insb
outsl
bound
or
or
jmp
insl
je
or
aad
push
sub
dec
jnp
xor
sbb
add
mov
lods
pop
jns
push
xor
dec
aas
movsb
mov
pop
arpl
ss
sti
sub
aam
mov
jnp
pop
inc
push
add
add
orb
gs
sub
xor
jne
in
sbb
daa
inc
add
fistl
sub
inc
aas
inc
jne
popa
or
ss
orl
xor
fwait
inc
push
inc
inc
push
gs
imul
outsb
sti
dec
and
jb
mov
in
test
incb
add
and
cmp
jp
in
sub
in
mov
pop
pshufw
or
pop
pmulhw
call
push
lock
sub
sbb
jns
out
push
popa
imul
test
fbld
dec
xchg
push
sub
cld
filds
add
lds
inc
mov
dec
push
mov
pop
cmp
xchg
mov
sbb
rcr
jb
pushf
inc
pop
add
es
add
es
and
call
cmpsb
push
fwait
inc
mov
inc
mov
sbb
mov
insl
sub
scas
adc
movsl
sub
mov
adc
pop
cltd
in
popf
pusha
sub
mov
js
aam
and
es
or
dec
xlat
dec
sahf
addl
adc
and
pushf
inc
sub
jbe
cltd
cli
mov
into
nop
movl
push
adc
and
jb
push
out
psubsw
in
in
jmp
in
fs
ljmp
cmp
shl
sahf
cmp
in
sahf
fs
lahf
aaa
jp
int
sub
in
mov
add
and
sarl
add
add
and
ficompl
add
inc
inc
xchg
popa
jnp
punpckhbw
push
sbb
pop
bound
adc
mov
dec
jmp
cmp
add
sbb
add
push
xor
addl
jle
adc
mov
xor
add
mov
or
and
and
push
lods
aaa
add
movsl
inc
and
xchg
or
dec
outsl
addr16
add
jecxz
add
inc
add
inc
mov
daa
mov
sub
pop
push
add
fsubs
push
jl
or
cs
insb
lods
mov
lea
adc
push
mov
lods
jnp
or
xchg
mull
dec
adcl
or
popf
out
pushf
adc
and
push
ficomps
sub
adc
push
inc
mov
in
cmp
jno
out
xor
or
dec
cs
popa
dec
or
shll
xor
push
mov
cmpsl
das
and
pop
mov
ret
adc
shl
adc
push
pop
and
mov
add
xlat
pop
push
shr
inc
movsl
push
cwtl
in
movsb
adc
sbb
pop
shrb
adc
cmp
sub
mov
andl
mov
das
mov
push
inc
cmp
push
enter
or
mov
out
mov
cmpsl
ror
push
xor
jae
dec
leave
inc
jb
in
mov
pop
movsl
sbb
inc
dec
movsl
pop
dec
add
or
iret
orl
mov
push
in
lcall
xchg
xor
std
loope
add
ljmp
xor
pop
sub
fisttpll
sbb
push
shll
push
mov
dec
mov
dec
lret
adc
add
insl
pop
mov
adc
mov
push
inc
xchg
mov
mov
xor
cmpsb
dec
jo
push
nop
test
andb
sahf
insl
test
dec
adc
dec
xchg
cmp
pop
add
mov
or
xor
xchg
or
add
add
lock
add
xorb
cs
and
dec
sbb
cmpsb
addl
orl
add
sub
cli
or
fwait
adc
adc
push
fcmovnbe
aam
std
sbb
push
in
mov
pushf
adc
xor
jo
cmp
push
xor
and
lret
or
xchg
pop
inc
dec
clc
dec
lock
pop
inc
inc
push
push
roll
push
add
outsl
dec
repnz
dec
xor
in
sub
xlat
jno
dec
jne
or
rcrb
and
xor
nop
cmpsb
test
xchg
lret
pop
shll
adc
add
icebp
dec
and
push
lret
xor
xlat
cmp
popf
and
adc
cwtl
aas
pop
pop
mov
or
mov
jne
stos
or
sbb
aas
xchg
lea
movsl
in
icebp
es
out
pop
mov
nop
nop
adc
xchg
add
pop
and
in
or
pop
push
add
stos
out
stos
nop
xor
incl
xchg
and
out
or
jae
xchg
fdivl
scas
insb
sub
push
pusha
int3
mov
pushf
rorb
dec
cmp
popf
and
hlt
pop
aaa
xor
hlt
hlt
lock
xchg
xadd
in
jge
sahf
out
fiadds
jne
dec
lahf
out
mov
fwait
mov
andb
or
outsb
loop
xchg
subb
and
ds
cli
and
xchg
adc
ja
cmp
out
das
repz
je
or
je
or
shll
add
fnsave
lods
push
jle
hlt
push
inc
add
sub
je
jmp
mov
daa
mov
mov
push
push
sbb
mov
pop
ficompl
adc
pop
add
push
dec
push
repnz
and
adc
mov
enter
adc
iret
leave
cmp
sbb
adc
das
mov
push
cwtl
adc
lods
mov
adc
loopne
xor
sub
pop
mov
pop
jo
inc
mov
xchg
xchg
inc
or
nop
mov
scas
xor
movsl
mov
ret
add
xchg
sub
jle
push
add
pop
rorb
enter
aam
int
or
test
add
xchg
add
push
movsb
sub
lret
cwtl
fs
sub
pushf
je
add
xchg
movsb
xor
xchg
test
lods
mov
adcb
mov
sbb
add
add
iret
iret
adc
bound
push
ss
or
cs
jae
outsl
iret
dec
std
push
xchg
inc
imul
pop
dec
fs
mov
das
fwait
and
insl
mov
xchg
push
enter
pop
jne
push
pop
adcl
add
cld
xchg
lea
dec
outsl
fs
gs
pop
aas
push
pop
sbb
dec
jp
adc
insl
sbb
xchg
and
xchg
cwtl
xchg
inc
pop
lea
imul
idivb
inc
outsl
bound
nop
push
inc
push
push
imul
pop
aas
mov
imul
and
xor
hlt
sub
jmp
imul
jp
sub
scas
mov
inc
adc
push
sub
dec
and
pop
inc
cltd
aaa
sub
jbe
jne
outsl
and
xchg
and
sub
adc
adc
add
or
inc
jmp
push
inc
inc
sub
cmp
bound
push
pop
pop
push
inc
pop
inc
dec
inc
pop
inc
push
and
addr16
cs
data16
jno
jo
cwtl
orb
setl
mov
dec
pop
xor
xor
lret
adc
popa
imul
xor
out
push
push
pop
aaa
sbb
and
cs
pop
js
mov
enter
adc
sbb
movsb
cld
jae
lret
fidivs
sbb
jge
add
push
jle
inc
mov
sbb
fildl
popa
pushw
push
sbb
dec
inc
shll
jo
popa
cmp
test
insb
xlat
push
adc
insb
push
imul
orb
jp
sub
rcrb
mov
imul
inc
dec
dec
inc
push
jg
sub
and
aas
ja
sbb
xchg
rclb
push
jno
outsb
pop
pop
dec
push
mov
filds
lods
cmp
pop
xor
andl
jne
test
push
dec
jne
popa
push
mov
xor
add
gs
loope
pop
cli
inc
inc
and
jae
mov
lods
ret
push
ret
push
mov
adc
push
aam
rcll
sbb
or
pop
push
push
iret
iret
adc
inc
inc
inc
inc
pop
lret
les
aas
sbb
iret
mov
pop
and
loopne
inc
or
orps
or
inc
insl
ja
repnz
push
jbe
xor
pop
xor
mov
push
icebp
lret
push
inc
push
pop
push
cs
je
push
sub
and
sahf
rolb
fists
sub
add
cmp
or
call
pop
or
jp
imul
jns
push
push
jb
dec
rcr
aaa
adc
add
pop
pop
push
push
dec
jne
pop
pop
sbbl
stos
scas
in
aaa
push
cli
insb
je
imul
inc
inc
scas
push
outsl
outsl
jne
inc
xchg
notb
cwtl
loop
xlat
sub
jne
and
pop
add
cmp
or
mov
pop
xchg
push
iret
jo
mov
push
sub
mov
push
inc
push
stc
les
jp
outsl
push
shlb
inc
pop
outsl
shll
mov
pusha
andb
or
imul
push
inc
push
inc
push
pop
push
mov
pusha
cmc
push
sub
push
xor
pop
ja
add
mov
push
push
and
mov
and
inc
adc
mov
insb
and
shrb
and
xchg
xchg
jne
push
sub
cwtl
ss
adc
push
mov
mov
or
sbb
jbe
mov
xlat
sub
sbb
cmp
pop
pop
and
cmp
xor
xor
cmp
and
insl
aas
xor
xor
add
xor
xor
cmp
imul
aaa
aas
or
ja
cmp
xor
repnz
cmp
or
aas
and
inc
xor
aas
cmp
sub
rolb
in
jbe
xor
mov
aas
cmp
jg
imul
mov
aas
mov
dec
push
pushf
bound
ss
adc
cmp
xor
das
sub
or
aaa
aas
cmp
mov
adc
aas
mov
mov
cmp
push
int3
push
incb
ds
ss
mov
cmp
mov
aaa
pushl
in
sbb
mov
pushl
mov
sti
mov
jle
lds
mov
pop
jg
out
or
xor
ss
xor
sub
xor
cmp
shlb
inc
xor
aas
or
and
jle
jg
push
lock
aas
jg
ja
in
clc
xorl
outsl
mov
das
xor
cmp
xor
xor
cmp
shrb
and
mov
cmp
cmp
xor
jbe
push
cmp
out
xor
inc
dec
and
aaa
cmp
xor
jb
mov
mov
repnz
lds
or
pop
insb
sbb
das
cmp
nop
pop
nop
xor
xor
or
rcrl
cmp
add
enter
jg
stos
loopne
or
pop
jg
or
ja
xor
xor
or
dec
xor
xor
sysexit
xor
shlb
mov
xor
xor
ret
add
mov
das
aaa
aas
roll
pop
and
push
lds
jb
xor
xor
add
add
ss
jp
cmp
pop
cmp
xor
add
add
inc
das
xor
pop
enter
xor
enter
add
sbb
cs
push
subb
aaa
clc
xchg
ret
inc
add
lret
movsb
push
divl
jecxz
push
fidivs
fiaddl
cltd
clc
cld
mov
and
int3
push
mov
mov
add
negl
jl
mov
cltd
cmp
adc
or
or
fistpl
orb
je
rclb
sbb
mov
pop
push
stc
pop
adcb
dec
pop
ja
xchg
rclb
or
int3
mov
adc
les
pop
ja
gs
popf
push
mov
pop
xchg
xchg
test
imul
sbb
mov
xor
inc
fisttpll
incb
sahf
fildl
adc
push
lea
icebp
sub
pop
and
inc
inc
push
jbe
pop
leave
and
popf
push
sbb
xchg
sub
xor
dec
xchg
xchg
sarb
mov
cmp
add
mov
inc
mov
adc
mov
add
add
push
ret
lret
lock
xor
nop
sub
cmpb
cmpsb
xchg
test
inc
scas
mov
mov
cmp
jb
mov
sbb
insl
fnstcw
pop
and
pop
xchg
push
or
out
orb
dec
int3
adc
mov
add
or
or
or
push
jns
jno
mov
scas
cld
insl
add
data16
js
lcall
test
gs
aaa
inc
adc
loopne
mov
mov
flds
pop
push
orb
push
js
imul
add
jnp
imul
fiadds
cmp
adc
psubusb
lret
and
xchg
out
fs
lock
movsb
test
or
pop
je
enter
dec
xchg
push
das
dec
xor
adc
movsb
cld
pop
xchg
dec
rcrl
andb
jno
pop
inc
test
mov
mov
cs
cld
sub
xor
adc
outsb
dec
ficoml
dec
movsb
ret
gs
sbb
push
jns
nop
sbb
pushl
fs
out
push
pop
sub
mov
popf
dec
sti
pop
xchg
dec
cmp
dec
cmpl
dec
js
arpl
je
add
pop
lea
test
js
add
hlt
test
and
adc
daa
jne
inc
es
inc
sub
notb
sar
or
inc
int
test
sarl
adc
push
sbb
dec
and
push
adc
xor
sbb
mov
adc
xchg
mov
fdivrs
or
add
xchg
int3
imul
leave
cmp
flds
int3
cmp
pop
push
xor
xor
clc
lock
popa
push
sub
call
lret
aaa
sub
or
xor
and
incl
xor
and
jo
mov
xorl
gs
inc
mov
test
add
ja
stos
std
lahf
fmull
inc
dec
inc
pop
push
dec
dec
push
inc
cs
inc
test
pushl
and
jb
jno
bound
jle
iret
add
sub
aas
fidivrl
ret
pop
and
hlt
mov
and
inc
imull
xor
push
sbb
pop
push
fs
gs
and
pop
sub
insb
fs
mov
and
sbb
and
jo
ret
pop
push
and
push
jae
or
add
mov
sbb
movsb
sarl
dec
sub
arpl
dec
pop
and
xor
add
and
and
pop
in
and
test
fstpl
inc
sub
or
imul
add
push
pop
clc
mov
dec
cmpsb
cltd
stos
fcoml
fs
stos
fadd
test
aam
in
ud1
mov
add
leave
in
hlt
pop
cmp
mov
enter
outsl
or
je
cmpsl
rorb
push
hlt
inc
call
inc
stos
or
xbegin
hlt
push
xor
call
das
shrb
adc
mov
xchg
jmp
mov
fistpll
int3
aaa
pop
test
int3
fcomip
in
inc
jb
or
aad
add
in
xchg
bnd
movsb
dec
outsb
iret
enter
mov
outsb
jb
jb
test
je
repnz
sub
jg
mov
mov
sbb
sub
jns
adc
das
daa
xchg
test
mov
jb
cmpsb
je
dec
or
and
xlat
rol
pop
pop
pop
imul
dec
js
outsl
sub
add
out
sbb
cmp
das
cmpsb
add
inc
flds
fdivrs
xchg
test
xchg
filds
sub
daa
inc
test
ret
js
lds
sbb
cld
rolb
jb
test
jbe
fwait
dec
mov
jo
push
cld
jmp
pop
dec
mov
lret
enter
sti
add
pushf
jne
lea
and
repnz
hlt
mov
hlt
mov
in
jmp
dec
insb
insb
pushf
loopne
sbb
in
lret
pop
sbb
jmp
pop
repnz
mov
cmp
gs
frstor
sub
dec
mov
cs
aaa
lret
and
sarb
mov
hlt
or
testl
pop
pop
lods
or
xchg
pop
pop
add
fs
cs
and
gs
scas
push
push
sbb
nop
push
push
aam
dec
dec
nop
lret
dec
dec
sub
inc
jb
xchg
sub
inc
inc
cmp
or
cmp
add
dec
sub
xchg
lret
xor
add
xchg
xor
pop
pushf
xchg
sub
and
sub
insb
pop
xor
and
mov
mov
icebp
add
xchg
ficoml
inc
ds
repz
shrb
jb
shlb
xchg
pop
ret
test
lea
lock
mov
rcll
sbb
pop
leave
in
pop
push
orb
or
fimuls
dec
scas
or
pop
aas
pop
leave
mov
push
incb
xor
xor
add
add
or
lcall
cmp
repnz
bnd
mov
adc
cli
test
sub
jg
out
int3
sub
enter
inc
es
js
cmp
loopne
inc
mov
push
xchg
push
xor
repnz
repnz
repnz
in
loope
je
push
pop
sbb
ficoml
sub
add
jg
add
pop
es
jbe
pushf
movsb
cli
jb
and
mov
shll
add
adc
movsb
jb
add
mov
and
sub
ret
clc
int3
aad
adc
int3
add
inc
dec
xorl
pop
push
repnz
sub
inc
cld
cld
sti
and
cld
mov
cli
fadds
push
and
jns
mov
inc
dec
fldcw
inc
push
movsb
cli
call
cmp
pop
xor
gs
daa
test
add
or
das
mov
add
cs
inc
dec
push
push
aas
jb
push
test
pop
add
dec
cs
dec
dec
push
jecxz
lea
lahf
daa
mov
and
out
scas
mov
push
dec
inc
and
push
dec
sbb
hlt
arpl
xchg
pop
lahf
testb
int3
fcmovbe
mov
push
aas
inc
dec
push
inc
and
pop
lahf
or
fadds
nop
inc
push
pop
inc
dec
es
insl
mov
lods
inc
pop
pop
rcrb
inc
sbb
adc
adc
pop
shrb
insb
jae
xor
xor
fildl
sub
cld
adc
inc
lea
pop
je
dec
xchg
js
inc
and
inc
push
clc
jns
cmp
sub
cmp
jo
loopne
xor
call
in
inc
fcomp
or
ficompl
ret
arpl
sti
jmp
jl
imul
xchg
icebp
add
lcall
repz
enter
dec
popf
add
add
stc
ja
les
inc
or
sub
loope
inc
push
clc
filds
add
jbe
sbb
sbb
inc
cs
dec
push
call
add
dec
dec
inc
int
jle
dec
ret
data16
jnp
in
and
inc
mov
xchg
push
adc
inc
adc
or
inc
in
dec
add
fstpt
mov
and
cmc
cs
mov
das
movsb
xorl
pusha
adc
sbb
jg
pop
and
adc
out
aaa
nop
pop
adc
sub
int
sbb
and
jne
xchg
cmp
lcall
and
dec
leave
leave
xchg
enter
inc
jb
pop
leave
adc
and
pushf
sbb
ror
jb
inc
or
fmull
mov
cmp
add
add
mov
jb
mov
sbb
xchg
and
inc
adc
sub
xor
fildll
fdivrl
scas
mov
mov
dec
pop
insb
adc
bound
gs
imul
outsb
outsl
jo
mov
jns
dec
jge
push
addl
jae
cltd
xor
push
aas
aas
mov
add
jns
inc
flds
daa
dec
inc
or
or
sub
imul
pop
ja
pop
jg
inc
dec
rol
jmp
dec
pusha
pusha
cltd
divb
or
mov
clc
gs
fidivrl
ljmp
adc
pop
insl
std
inc
fadds
mov
mov
mov
les
out
js
cmp
std
mov
cmp
dec
and
les
mov
push
fs
jmp
inc
add
xor
cmpl
pushl
mov
loop
xor
jb
lods
frstor
lock
bound
call
test
sahf
xchg
add
dec
shrb
mov
sub
shl
inc
in
sub
jne
dec
jp
mov
or
cmp
repz
ret
rorb
test
insl
mov
rclb
jo
sahf
inc
dec
xchg
das
mov
mov
bound
fnstenv
daa
push
dec
inc
push
push
push
push
inc
pop
mov
sbbb
xchg
aaa
dec
lahf
addb
xchg
in
mov
sbb
lods
push
and
and
pop
mov
sub
out
xor
adc
clc
rcl
xor
enter
movsb
mov
adc
dec
test
pop
sbb
orl
add
popf
jge
xchg
cmp
inc
popf
pop
pop
scas
sbb
pop
jb
sahf
push
push
sub
dec
xorb
insl
jae
fisubl
and
adc
or
sub
inc
sbb
pop
adc
adc
cmp
cmp
and
mov
add
ja
mov
shrl
mov
pop
stos
mov
out
or
sub
jmp
fiadds
inc
sub
and
pop
add
xlat
sbb
add
addb
pushl
rol
inc
pusha
dec
pop
mov
push
rolb
sub
inc
cwtl
insb
cmp
dec
in
adc
mov
test
mov
cld
lret
in
ss
roll
cld
push
ret
stos
stos
adc
ret
adc
xor
insb
vpmaxsw
ret
fsub
adc
cmp
mov
jne
nop
and
adc
pop
mov
sbb
popa
mov
mov
and
bound
xor
cmpsl
mov
push
pop
inc
stos
mov
rcpps
mov
gs
cmpsb
scas
jo
sbb
sbb
mov
test
or
in
jne
cmp
pop
lea
cltd
out
lds
movsb
mov
insb
daa
fwait
sarb
mov
in
out
mov
xchg
pop
clc
add
sub
push
cld
push
xchg
stos
pop
push
sub
inc
and
movb
or
and
sub
lea
sub
add
daa
test
hlt
push
cmp
adc
rclb
inc
push
call
xor
mov
sbbb
in
mov
and
and
stc
inc
lds
ljmp
sbb
aam
add
or
repz
push
xor
push
cmp
inc
out
sahf
dec
jno
out
add
icebp
pop
xor
add
daa
jb
ja
inc
jmp
and
daa
nop
movsb
push
nop
je
stos
jmp
push
shl
rolb
add
push
and
sbb
arpl
lods
mov
sbb
loopne
lea
mov
jl
bound
push
push
popf
cmp
int
ja
lahf
fadds
mov
lock
imul
pop
adc
adc
adc
jno
aam
shrb
orb
jne
call
popf
in
loop
aam
xor
add
test
mov
andb
cld
push
outsb
fs
outsl
arpl
add
loopne
les
pop
dec
aas
xchg
dec
mov
jne
sarl
sub
cmp
dec
push
adc
in
inc
and
sub
cltd
imul
in
out
push
sahf
in
roll
clc
or
xchg
cmp
pop
and
in
test
xchg
mov
inc
dec
aas
cmp
arpl
mov
sbb
sub
add
and
shl
and
pop
adc
jbe
xor
dec
lods
movl
xlat
adc
cmp
cmc
add
push
push
test
pop
or
xor
push
sbb
addr16
nop
ljmp
mov
add
xchg
push
or
push
nop
pop
sbb
and
pop
xor
stos
popa
or
fisubrl
cmp
and
inc
push
lea
mov
jp
jmp
and
cld
cmpb
mov
pop
movsb
cmp
call
int3
push
sbb
aam
js
cmpl
push
call
xor
loopne
mov
inc
jae
daa
subb
pop
test
pop
fsubrl
mov
pushl
push
nop
add
and
lock
or
adc
mov
sbb
jecxz
fdivrs
test
add
push
rclb
cwtl
add
lock
push
cld
mov
rorb
push
inc
adc
pushf
xor
rcl
sub
iret
mull
or
loop
inc
loop
xor
in
mov
ds
in
inc
das
cwtl
je
mov
sub
leave
mov
subl
push
leave
or
icebp
xchg
add
cltd
enter
insb
jo
lea
add
sbb
les
cltd
inc
push
or
rol
push
xchg
add
lea
push
add
pop
push
out
fnstenv
dec
xor
add
xor
ja
xor
cs
jbe
fnstsw
imul
sub
xor
cmp
jbe
aas
sbb
add
and
ss
aaa
into
mov
xchg
mov
xor
xor
push
dec
sbb
xor
test
and
fsubrl
and
in
jbe
push
inc
mov
out
cmpsl
jns
inc
test
push
repnz
adc
push
popa
jbe
pusha
frstor
cmp
ja
bound
loop
daa
push
jae
add
mov
jae
bound
daa
mov
ds
lea
xor
out
or
cmp
add
call
jb
test
std
ficoms
jecxz
movsb
or
gs
sbb
xor
inc
sub
out
xor
sbb
pushl
test
std
cmpsb
out
daa
rcrl
xchg
enter
enter
add
dec
in
add
inc
dec
pop
cmc
mov
nop
adcb
mov
jle
int
aam
cli
mov
int3
adc
jns
or
mov
or
xchg
movsb
add
xchg
je
mov
sub
pop
pop
test
push
es
lods
xchg
inc
mov
mov
inc
mov
movsb
test
movsb
cmp
dec
scas
fsubrs
sub
inc
mov
xchg
xchg
xchg
nop
cwtl
cltd
in
mov
cs
test
nop
insb
xchg
addr16
mov
sar
mov
fmul
enter
decb
xchg
sub
xchg
fdivr
and
lods
mov
mov
or
mov
movsl
xor
jno
jno
add
nop
dec
fs
jae
cmp
adc
test
insl
scas
inc
fisttps
imul
xor
movsl
pop
sbb
add
pop
pop
aaa
and
dec
dec
inc
pop
pop
inc
push
push
push
cmp
pop
push
pop
inc
inc
sub
add
push
push
and
out
ja
pop
push
adc
mov
adc
xchg
pop
xorl
lods
das
or
insl
and
iret
das
inc
bound
aas
enter
xchg
jmp
arpl
cli
arpl
or
cmpsb
and
fwait
dec
mov
data16
push
mov
mov
in
jne
and
push
hlt
out
add
nop
addb
cmp
xor
int
in
jecxz
in
sbb
gs
add
repz
jg
add
inc
add
pop
mov
adc
imul
mov
sti
mov
ss
sbb
pop
dec
scas
stc
mov
scas
push
les
push
je
inc
repz
lahf
push
cld
rolb
int3
movsb
fidivrl
jns
data16
shlb
jl
pusha
xor
and
add
andl
push
les
cmp
iret
repz
push
cld
mov
push
rclb
loop
lock
test
xchg
clc
fidivs
sti
mov
push
xchg
push
sahf
cmpsl
stc
jl
inc
aam
add
lahf
out
je
add
insl
insb
out
popf
dec
test
push
push
and
fmull
adc
inc
add
cwtl
push
mov
iret
inc
repz
repz
hlt
in
les
push
aam
repnz
dec
out
in
in
push
add
mov
cmp
lods
or
faddl
push
idivl
cmpsl
shrb
push
clc
pusha
xor
int
popf
push
setns
in
cwtl
shlb
pop
arpl
popf
nop
add
mov
push
dec
stos
adc
movsl
mov
lahf
out
mov
mov
cmp
into
jmp
add
popf
data16
stc
les
cld
push
orb
cli
sbb
sbb
mov
in
pop
fnstsw
inc
test
and
mov
xor
xchg
pop
dec
add
das
xor
enter
push
push
negb
add
and
mov
xor
sar
aas
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
test
sbb
es
mov
je
and
adc
repnz
and
popa
je
xor
lock
and
fildll
xor
dec
mov
das
and
or
test
xor
inc
sbb
jns
rolb
test
push
movsb
jno
add
adc
cmp
pop
aas
mov
cli
jg
data16
and
js
repz
repz
sbb
sub
cmp
repz
inc
dec
push
pop
fs
cmp
repz
jl
mov
movsb
lods
mov
iret
repz
int3
aam
in
sahf
out
cmp
cld
add
or
je
out
sbb
sub
pushf
fsubrl
add
out
or
dec
inc
push
shrb
jge
and
fdivl
mov
leave
enter
jg
xorb
orl
negb
sbbb
jnp
mov
rcrl
and
pop
cs
dec
sahf
add
add
in
mov
pop
add
add
jmp
inc
or
sub
add
mov
or
cltd
add
pop
call
aad
clts
testl
xchg
adc
adc
adc
pusha
inc
repz
push
cmpsb
push
adcb
fsubr
clc
or
sahf
out
sahf
sbb
cmp
pop
push
jl
pushf
mov
add
add
pop
imul
imul
xor
mov
jmp
inc
sarl
clc
sbb
or
add
imul
jg
xor
lods
push
adc
cld
cmp
shlb
loopne
addb
test
add
push
adc
test
xor
and
add
dec
imul
insb
xlat
xchg
das
jg
incl
jl
add
xchg
jg
fdivl
add
sti
push
fdivrl
movsb
add
or
out
sahf
testl
sahf
out
sahf
pusha
adc
adc
mov
int3
cmpsl
jne
repz
sbb
xor
adc
or
jns
out
or
xchg
out
sahf
out
mov
rclb
int
jns
in
clc
push
or
cmp
pop
xor
jns
jnp
dec
push
add
adc
sahf
push
test
add
jns
les
ss
add
repz
add
mov
cmp
repz
iret
rolb
push
mov
sbb
xor
dec
out
sahf
out
fs
jns
xchg
fisubrs
xlat
jns
std
adc
call
add
imull
jb
cmp
or
or
mov
cvttps2pi
pop
rcr
push
mov
pop
jbe
push
jno
adcb
sbb
fidivrs
aad
mov
negb
testl
or
repz
fisubs
sbb
push
hlt
repz
mov
cmp
shl
lock
adc
jns
sbb
inc
add
or
cmp
repz
sub
cmp
xor
iret
repz
push
and
sbbb
stc
xchg
sub
add
mov
and
lds
jbe
adc
dec
jle
out
xchg
jge
ljmp
sti
paddd
or
add
es
daa
daa
adc
adc
and
daa
mov
femms
or
adc
daa
daa
daa
sbb
add
sbb
pushf
es
rcll
jb
add
pop
xlat
push
insb
fidivs
jl
out
sahf
test
jl
jp
push
lock
or
adc
lods
adc
push
hlt
or
nop
and
add
xchg
scas
push
push
js
sahf
out
sahf
xchg
test
int3
fdiv
cmp
repz
or
sbb
cmp
cmp
repz
pusha
jo
mov
repz
pushf
lods
mov
pop
in
cmp
cmp
notl
imul
adc
fldcw
je
mov
push
cld
pusha
inc
outsb
inc
aad
add
addb
aas
pop
int
aas
add
or
nop
pop
jo
xor
std
xchg
cld
movsb
cli
out
sahf
out
stc
enter
repz
div
testb
sbb
repz
sub
cmp
repz
repz
icebp
fs
repz
out
mov
mov
repz
jmp
ljmp
mov
inc
add
dec
dec
ret
xor
and
js
bound
add
cmp
js
dec
mov
pop
mov
filds
ds
or
or
add
inc
ffree
cmpsl
lods
pop
and
sub
data16
jecxz
sub
add
pusha
pusha
stos
addr16
or
or
movsb
lods
outsl
inc
add
mov
add
pop
pop
add
or
imul
add
call
aaa
mov
or
xchg
pop
xchg
inc
add
xchg
pop
add
outsl
xchg
stc
mov
mov
sti
cld
std
out
sahf
out
incb
add
sahf
out
sahf
addb
stos
les
adc
inc
sbb
inc
jns
loope
scas
add
aam
ljmp
push
xor
adc
and
xor
adc
daa
xchg
add
insb
push
imul
jno
cli
mov
cld
aaa
xchg
ja
add
out
aas
orl
jg
push
mov
xor
adc
mov
gs
xchg
dec
repnz
dec
adc
cmova
cmpsb
inc
push
xchg
add
out
repz
hlt
push
or
sbb
cmp
int3
mov
lret
jl
sbb
jp
push
enter
out
jmp
out
dec
push
pop
push
insb
sahf
out
sahf
adcb
int
jns
lock
iret
repz
push
iret
mov
cmpsl
stc
cmp
adc
mov
js
mov
rcr
push
sahf
ss
repz
test
jns
iret
repz
loopne
out
out
xor
les
repz
add
sub
imul
loopne
mov
out
sahf
out
insb
mov
int
mov
push
insb
nop
test
iret
repz
loopne
sbb
jns
test
out
add
repz
jl
test
fdivr
sahf
out
ds
cmp
jl
jns
idivl
fdivrl
out
sahf
out
mov
out
sahf
mov
mov
mov
out
sahf
out
mov
out
sahf
mov
mov
mov
out
sahf
out
mov
sahf
ja
mov
test
jns
out
mov
in
iret
repz
adc
sub
pop
je
ds
repz
mov
iret
repz
cmpsb
push
xor
fs
ds
repz
fdiv
or
jns
out
and
push
insb
test
jns
out
mov
in
jns
out
adc
incb
inc
pop
je
jne,pn
out
mov
imul
pushw
ja
movsl
xchg
dec
into
jbe
xlat
push
pop
arpl
cmp
inc
daa
aam
scas
and
in
push
push
sub
fildl
sub
mov
xor
mov
scas
jbe
adc
inc
jnp
jnp
xchg
dec
or
push
push
sub
add
jae
sbb
cmp
cmp
je
scas
add
or
fdivrl
mov
push
xchg
dec
ds
mov
jle
daa
ds
shrl
dec
int3
push
test
add
jmp
push
xor
xchg
popf
jb
out
js
mov
in
dec
push
push
dec
or
dec
push
aam
jns
sbb
testb
fidivs
mov
movsb
sti
faddp
push
jbe
data16
xchg
push
aam
push
xor
jno
lods
test
insb
sbb
xor
fisubs
fs
mov
push
sub
es
or
enter
lcall
cmp
inc
lods
pop
jl
lock
dec
mov
cmpsb
adc
fnstenv
add
pop
inc
sbb
push
faddp
push
int3
jle
cs
pop
negl
push
mov
out
out
xchg
inc
cld
ss
movsb
scas
mov
pop
push
pop
fistps
neg
inc
xor
jo
cmp
fs
iret
jnp
dec
out
and
cs
mov
mov
push
pop
fst
mov
inc
push
neg
jnp
mov
push
jl
adc
jae
dec
sti
push
add
xchg
es
xchg
negl
sahf
inc
cmpsb
test
push
andb
popa
and
in
mov
div
push
cmp
pop
mov
push
adc
or
cmpsb
dec
mov
mov
push
es
push
sub
inc
xlat
push
loopne
ja
or
inc
xchg
add
mov
int3
jbe
les
cmp
sub
pop
shlb
mov
pop
and
faddl
jmp
jge
mov
fsubrp
xor
sub
mov
jae
mov
in
add
lock
add
adc
cmpsb
iret
ss
js
push
outsl
mov
je
mov
ficoms
adc
fs
push
loopne
or
in
dec
rolb
shll
xchg
hlt
push
mov
dec
ficomps
push
daa
outsb
xchg
push
clc
imull
daa
outsb
les
stc
sbb
into
sub
jmp
push
ja
out
jns
cmp
pop
ss
or
jne
mov
out
pusha
out
loopne
out
negl
push
fs
push
lock
shr
push
pushf
in
pop
aaa
push
addb
and
outsb
cmp
cmpsb
xchg
imulb
xchg
call
adcl
xchg
mov
inc
sbb
ss
fcomps
mov
outsb
inc
sbb
xchg
jle
sahf
aam
dec
iret
push
jl
outsl
es
jnp
jnp
and
cmp
enter
ss
or
sub
xlat
or
cwtl
addl
adc
adc
add
inc
pusha
inc
add
mov
jge
jo
add
and
xor
xchg
mov
add
add
addb
add
pop
inc
add
fsubr
jg
dec
push
str
inc
add
dec
add
cs
add
fidivl
or
and
xchg
or
fnstsw
inc
add
dec
aaa
add
mov
inc
sbb
and
mov
dec
scas
push
pop
dec
aaa
push
pop
dec
add
fnsave
fwait
inc
add
adc
imul
loop
push
inc
mov
or
pop
pop
jmp
ja
loopne
inc
pop
jae
sub
idivb
mov
pop
push
sahf
push
ja
or
push
lret
pop
repnz
test
and
pop
push
pop
outsl
pusha
pop
fstpt
maxps
inc
or
or
ret
jnp
inc
repz
rcrb
cs
xchg
and
inc
jmp
lock
cs
mov
or
jnp
repz
dec
cmp
mov
jnp
push
rsqrtps
lret
inc
aas
pop
ja
push
or
rdmsr
adcl
jnp
sti
pop
inc
aas
or
imul
dec
mov
dec
push
dec
pop
pop
iret
setne
push
or
clc
mov
sub
pop
mov
int
mov
nop
push
push
add
dec
add
insl
jne
int
mov
outsb
and
add
pusha
cli
xor
push
inc
es
and
dec
add
add
pop
inc
sub
add
dec
addr16
sub
ds
mov
bound
ret
loopne
pop
addr16
add
mov
adcb
lock
add
decb
sub
sub
sbb
lods
cld
inc
dec
inc
inc
rclb
lret
and
pusha
inc
inc
push
inc
dec
add
mov
dec
inc
mov
push
pop
dec
push
rolb
test
imul
out
dec
or
cmp
pop
and
lahf
movsb
jb
bnd
sbb
add
rcr
xor
gs
outsl
arpl
add
jae
dec
push
sub
dec
and
aam
add
sub
and
jae
lret
and
cmp
inc
jns
jbe
insl
cwtl
sub
subb
test
pusha
loope
loopne
pop
clc
push
add
or
mov
or
or
mov
push
sub
add
and
inc
or
sub
js
adc
mov
sub
inc
sahf
add
mov
or
inc
fiaddl
jae
jl
enter
xchg
sub
mov
add
lds
test
push
push
sahf
and
inc
lea
lock
insl
ltr
notl
les
addl
mov
movsb
adc
es
mov
or
out
sub
inc
sbb
loope
adc
mov
sbb
inc
jmp
xor
out
dec
or
and
and
roll
in
in
sbb
or
in
in
sub
jb
xor
cld
sar
hlt
lock
jb
in
call
jb
aam
sarl
cmp
sbb
xor
pushf
pushf
mov
ror
enter
pushf
pushf
sarb
dec
cmp
inc
sub
add
les
les
mov
fsubs
push
and
stc
clc
mov
mov
adc
mov
and
push
into
push
add
push
mov
push
xchg
or
xchg
mov
mov
sti
insb
sub
sub
add
inc
sub
insb
pop
add
or
aad
push
or
mov
into
dec
add
cmp
and
jae
jmp
lock
orb
xchg
pop
in
call
adc
cmp
adc
repnz
push
pop
cmc
std
inc
inc
add
repnz
lcall
fs
and
lock
and
test
add
repnz
xchg
xchg
or
ja
or
aaa
xchg
add
pop
call
pop
ds
add
les
fldl
jo
cwtl
movsl
jne
test
dec
push
and
adc
insb
dec
out
enter
idivl
inc
in
stc
adc
cld
cmp
inc
pushf
add
mov
sti
ret
xor
add
or
testl
mov
cld
call
std
incl
cld
jmp
and
sar
decl
leave
in
jmp
jge
decl
std
call
or
ss
sbb
dec
cmpsl
xchg
std
inc
cli
decl
adc
push
cltd
xchg
mov
add
test
jl
in
ss
pushl
push
mov
call
sbb
gs
cmpb
notb
je
and
dec
ret
sub
inc
dec
testl
and
or
jns
or
les
les
les
or
stos
adc
add
or
sub
sub
adc
notb
loopne
pop
lds
mov
sbb
iret
add
and
rolb
les
notl
pop
and
cmp
out
mov
stos
clc
xchg
add
fsubl
fisttps
sub
adc
sbb
push
lret
std
testl
fisttpl
dec
outsb
xchg
push
inc
and
mov
jmp
xchg
icebp
sbb
pusha
xchg
and
nop
inc
dec
ret
js
inc
leave
xchg
scas
js
inc
sbb
inc
mov
add
add
ret
inc
add
mov
in
lret
lcall
les
or
sbb
inc
sbb
inc
enter
lcall
pushl
adc
clc
jno
shrl
dec
mov
mov
int3
ret
and
scas
push
inc
mov
clc
ja
mov
and
in
cmp
mov
jle
pop
push
add
xor
and
pusha
rcll
push
mov
shr
mov
je
inc
or
incl
add
push
das
dec
adc
adc
repnz
xchg
cmp
les
les
loope
out
jo
adc
and
pop
xor
in
mov
call
lea
lahf
enter
mov
pushl
dec
sbb
push
sahf
push
xchg
lahf
jo
inc
insb
les
nop
mov
clc
call
incl
jbe
iret
popa
lea
roll
lock
rclb
and
stc
mov
add
xchg
mov
decl
in
pop
sbb
decl
pop
in
jo
inc
jo
inc
cld
ret
inc
add
inc
repnz
les
sti
jmp
decl
pusha
mov
inc
xchg
mov
jbe
stc
call
stc
repz
sbb
ss
pusha
xchg
and
test
pop
xchg
stc
nop
je
inc
lret
and
lods
jl
je
inc
xchg
repz
dec
popl
mov
mov
subl
add
inc
dec
cmpb
add
popa
mov
push
pop
je
jmp
jg
sub
cmp
add
cltd
and
mov
nop
pushf
or
fwait
repz
xchg
pusha
push
loope
icebp
es
or
aad
push
xchg
nop
sahf
notl
xlat
jl
lea
add
and
pop
fucomi
lock
pusha
xchg
xchg
les
or
add
or
dec
mov
or
and
mov
xchg
and
arpl
sahf
push
ds
ja
nop
clc
pushl
inc
xchg
mov
js
in
cmp
pop
lods
fucomip
jmp
pause
test
sbb
inc
sbb
inc
mov
clc
cmp
cmp
and
push
dec
leave
and
mov
sub
jo
repnz
add
inc
jo
inc
stc
shrb
dec
pop
jno
xchg
mov
cmp
mov
add
idiv
fstl
outsb
ja
push
xchg
jo
jno
les
xchg
lahf
inc
insb
les
adc
cmpsb
mov
dec
sbb
dec
daa
add
mov
add
inc
lock
push
jp
mov
jno
in
enter
decl
cmpl
decl
push
sbb
xor
out
mull
sbbb
xchg
adc
scas
push
dec
and
fistpll
aaa
inc
dec
ret
mov
and
dec
jp
lea
jb
sti
jge
push
leave
sub
pop
and
pop
inc
jmp
adc
push
xor
mov
or
jle
jne
jmp
sub
mov
cs
int
inc
cld
xor
mov
dec
dec
add
inc
push
bound
or
idiv
lods
add
rorl
adcb
sbb
call
sub
adc
lret
pop
or
pop
dec
bswap
jle
aas
xchg
and
in
or
add
xor
test
popl
push
or
nop
jg
prefetch
or
les
sarb
inc
repnz
shlb
fsubp
lahf
shrb
call
add
or
pop
dec
jno
push
mov
imul
or
adc
xor
lcall
inc
and
movsb
adc
popa
sbb
adc
add
and
adc
hlt
out
cmp
xor
mov
cmp
ss
adc
pusha
pop
scas
in
mov
xor
dec
cmp
jle
ret
push
push
or
call
clc
sub
pop
stos
xor
in
ret
push
insl
pop
aas
mov
xor
push
rorb
or
loopne
fcoml
jp
xchg
ret
js
sbb
shlb
out
mov
push
mov
xor
mov
loope
mov
nop
push
mov
test
xlat
or
nop
lock
in
adc
add
addr16
insb
dec
clc
push
xchg
mov
fbld
cmp
xchg
repnz
in
test
jne
pop
jnp
cmp
ret
mov
or
movl
out
fstps
loope
adc
cmpsb
mov
imul
jle
xor
mov
jle
xchg
adc
push
add
jle
out
adc
repz
fisttps
push
bound
pop
repz
int
dec
push
fmuls
in
fisubs
int
push
or
shrl
andb
push
add
add
es
dec
clc
cmp
int
ret
inc
leave
pop
xchg
sub
sbb
adc
cli
in
push
dec
out
nop
adc
aaa
or
aam
movsl
lret
or
and
xchg
xchg
add
insb
or
sti
nop
daa
nop
aaa
ss
enter
fiadds
add
mov
push
int3
fcmovnbe
and
dec
in
test
aas
rolb
pop
out
js
inc
xor
jge
cmp
in
add
xor
cmpsl
push
fdivrs
into
inc
xlat
das
call
sub
or
jo
xchg
sbbl
loop
dec
sub
push
call
sahf
xchg
add
add
int
jecxz
push
rclb
pop
lock
xor
in
xchg
add
jb
jnp
and
dec
or
add
pop
xchg
psllw
add
cmp
lahf
xchg
cmp
in
push
in
sub
daa
enter
in
aam
cmp
jle
jmp
xchg
sbb
pushf
xchg
aas
cmp
bound
test
xor
leave
jl
imul
pop
jns
jg
xchg
add
add
decl
and
and
pop
push
xor
mov
pmulhuw
jb
jle,pn
call
fcomps
dec
mov
mov
jg
xor
sub
dec
push
jns
jmp
fldt
incl
adc
inc
arpl
repz
insb
pusha
lock
fnstenv
leave
pusha
cmp
insb
jecxz
or
stc
gs
les
lcall
fs
jo
pop
dec
scas
mov
push
push
jmp
dec
inc
subb
jns
add
add
pop
cli
call
add
lcall
add
add
add
in
jnp
call
jmp
add
rol
daa
in
or
pop
pushl
fldenv
shr
xor
js
adc
dec
inc
ret
loope
and
cmovs
or
inc
sbb
jo
push
adc
mov
or
nop
cmpl
and
dec
or
jg
das
mov
iret
mov
sarl
mov
mov
push
js
out
adc
and
sarb
pop
shlb
test
xchg
jge
jns
or
pushw
xlat
adc
pusha
or
add
push
mov
or
mov
pop
popa
leave
add
push
xor
jne
pop
les
xchg
sbb
nop
lea
hlt
test
fbld
inc
dec
add
xchg
xchg
repz
es
adcb
xchg
and
add
cwtl
hlt
rcrb
jnp
lcall
repz
cltd
jg
or
leave
movb
jbe
jle
leave
nop
jo
jbe
call
add
xchg
and
and
or
pop
and
adc
scas
mov
jmp
loope
pop
ret
jmp
loope
xor
mov
fwait
jo
xchg
aaa
mov
pop
fdivrp
repnz
jle
into
add
add
incl
in
mov
pushf
decb
int
lcall
decl
dec
jle
repz
decl
repz
incl
jmp
loop
xchg
cmp
or
push
inc
addb
or
adc
inc
cld
dec
jne
call
sbb
xchg
adc
inc
ret
repnz
decl
icebp
std
lea
rclb
or
pusha
dec
lock
inc
shll
push
sbb
fwait
btr
pop
cli
dec
push
or
push
into
sub
pop
cld
std
call
pop
outsl
inc
or
mov
ja
add
add
or
pushl
clc
pop
out
gs
dec
and
lock
pushl
repnz
stc
daa
std
lcall
push
dec
cld
push
dec
dec
dec
daa
or
dec
ret
jl
push
inc
dec
dec
js
call
imul
push
lret
outsb
outsb
inc
das
cmp
sbb
or
sub
adc
je
xchg
xchg
and
and
loop
in
cmp
dec
push
call
decb
add
xor
inc
dec
push
or
in
icebp
cs
xchg
fs
lahf
es
sbb
mov
push
and
sub
jmp
dec
or
jae
popa
jl
jge
push
sbb
xor
mov
push
pop
call
dec
ret
pop
sub
sub
rcr
sahf
mov
neg
call
in
push
ljmp
push
inc
add
repnz
jae
jae,pt
pop
rol
pop
dec
dec
fdivrs
sahf
imull
sub
adc
and
add
mov
mov
push
rcll
das
call
sbb
mov
push
sub
or
adc
pushf
xor
xchg
push
decl
inc
nop
mov
jmp
or
lahf
cli
adc
ret
sbb
test
cmp
adc
pop
jle
jmp
call
rol
push
fs
add
outsb
xchg
push
push
mov
lahf
dec
and
fisubrl
pop
mov
stc
jg
cmp
jae
scas
or
scas
adc
andl
or
jge
inc
call
push
push
insl
or
xchg
lock
cmp
je
test
dec
testb
sbb
sbb
cmp
fnsave
testl
add
clc
shll
sbb
dec
arpl
push
pusha
test
loopne
pop
cmpsb
or
lahf
rorb
lahf
and
or
adc
iret
fsubrs
and
mov
imul
subl
adc
sbb
or
enter
mov
pop
pop
sti
or
stos
jmp
inc
jns
in
pop
ja
cwtl
and
aad
inc
shlb
aaa
push
aam
mov
inc
cmp
movsb
mov
sbb
cld
div
and
mov
mov
xchg
xorl
ja
inc
xor
call
sarb
add
mov
push
mov
in
and
rcrb
cmc
mov
loopne
jmp
inc
popa
add
push
aaa
lock
xchg
or
adc
cmp
inc
adc
sub
mov
scas
mov
test
sbb
test
push
loop
dec
nop
adc
call
or
sarl
rclb
jle
xor
ss
std
adc
js
xor
iret
jmp
pop
scas
and
xlat
addb
jne
or
rorb
inc
dec
sti
dec
add
add
add
add
cmp
cmp
cmp
daa
cmp
cmp
rcl
jmp
push
adc
push
inc
stc
add
pop
pop
adc
mov
pop
in
leave
xor
ljmp
mov
mov
dec
inc
xchg
repnz
rcrb
sub
xchg
vphaddbq
inc
pop
jmp
jl
mov
mov
sbb
pushf
mov
addr16
test
ds
jne
insb
push
leave
popa
test
lods
or
and
dec
js
shr
test
lahf
push
push
and
xchg
or
or
sub
adc
sbb
cmp
add
mov
dec
mov
mov
jmp
ss
sbb
adc
pop
dec
jne
loopne
mov
mov
or
cli
jae
pop
dec
andb
pop
minps
cmp
jb
mov
or
dec
and
das
and
push
ljmp
cmp
ja
test
inc
push
adc
pop
fdivs
ret
mov
mov
cmp
int3
xor
les
rorb
ret
mov
jl
mov
sbb
xor
mov
imul
test
enterw
xlat
cmp
lock
sub
xchg
test
mov
adc
fwait
dec
loopne
ret
out
loope
jbe
jne
add
pop
or
rorl
mov
jb
adc
add
and
call
dec
orb
cmpsb
cmp
cld
xor
fmull
adc
clc
sbb
or
xor
js
add
add
fldln2
cmc
sbbl
sbb
pop
sub
inc
pusha
adc
mov
icebp
iret
mov
dec
sub
int3
and
mov
insb
add
add
fdivs
gs
paddusb
or
xor
popa
xor
push
sbb
iret
cmpb
mov
and
mov
sbb
js
gs
clc
mov
cs
cmp
pushf
cld
out
jg
sub
push
push
mov
xor
jo
and
adc
outsb
dec
je
push
mov
je
jnp
repz
call
mov
pop
dec
repnz
jp
cwtl
pop
repnz
gs
xor
rcl
push
pusha
stos
outsl
or
enter
shrb
sbb
mov
sub
jle
jbe
push
push
mov
pop
cmp
jo
xor
sbb
add
adc
xchg
mov
or
daa
mov
fwait
mov
ret
andb
xor
xchg
adc
or
inc
loop
call
push
lea
xor
aam
xor
aas
and
pushf
mov
cli
or
scas
mov
pop
sub
sub
call
icebp
pop
pop
hlt
xlat
insb
jmp
ret
jl
je
jns
stc
enter
shrb
shlb
jae
inc
sub
mov
and
inc
push
pop
adc
ret
ja
dec
dec
gs
ret
test
sub
out
cmpsl
add
dec
imul
leave
add
sub
xor
mull
inc
inc
outsl
xchg
adc
aam
xor
and
add
push
cmpb
idivb
es
add
xor
iret
out
lahf
xor
fmull
add
ss
mov
mov
lods
clc
repz
and
jmp
dec
movsl
loope
sbb
xchg
xchg
fistl
dec
dec
in
leave
enter
add
shl
in
fs
hlt
lock
in
in
call
in
in
aam
int3
in
in
enter
in
in
mov
in
in
movsb
mov
in
xchg
nop
mov
in
in
test
in
je
insb
repnz
in
fs
cmp
jb
jb
cmp
xor
jb
jb
and
sbb
jb
jb
adc
jp
repnz
dec
inc
pop
es
push
call
arpl
pop
and
cmpsl
add
pop
lahf
dec
inc
push
inc
xor
sbb
add
fwait
push
xor
sub
and
mov
lcall
adc
and
xchg
push
lahf
jg
inc
push
popa
inc
dec
ljmp
jns
les
pop
inc
fsubrs
insb
or
jg
mov
xchg
jb
lods
ret
sbb
adc
test
test
pop
pop
pusha
inc
pop
test
in
adc
mov
movq
ret
loopne
and
dec
xor
popa
test
jg
bound
or
test
dec
xor
push
orl
or
test
pop
xchg
dec
mov
insb
or
xchg
lods
nop
and
sub
xchg
lods
jg
mov
insb
or
adc
and
dec
or
adc
aaa
or
xor
push
xchg
jg
mov
xchg
loopne
sub
dec
or
mov
fwait
and
es
in
push
ljmp
call
rcll
pop
adc
adc
xlat
or
ja
out
cmc
ret
dec
testb
scas
or
mov
stc
lds
out
inc
cmp
or
cld
sbb
adcl
clc
addb
cmp
nop
dec
inc
scas
les
sbb
adc
mov
adc
inc
lods
sbb
jmp
fldcw
lcall
std
and
add
dec
test
or
jbe
push
lock
push
maskmovq
divl
pop
mov
sbb
mov
dec
inc
sub
jnp
push
cmp
lock
or
pop
or
mov
or
xor
add
mov
xor
xchg
pusha
je
sub
movl
in
add
popa
scas
push
push
in
test
into
add
sahf
xor
xor
in
dec
push
test
adc
loop
xor
mov
lds
call
adc
xchg
std
popa
fisubrl
rcll
arpl
enter
push
inc
adc
mov
dec
inc
cmp
mov
sub
dec
sbb
jne
fs
add
add
out
lret
aas
pushl
lret
hlt
hlt
call
loopne
inc
popf
xor
cmp
cld
clc
xor
cmp
ja
imul
sub
decl
shlb
clc
push
pop
pushf
xor
ja
cli
and
lea
sahf
cmpsl
stc
cmp
lds
dec
into
arpl
nop
dec
das
pop
je
lret
or
inc
testb
loopne
shr
or
cmp
je
or
push
ret
loopne
jne
xchg
xchg
cld
sub
fildl
add
add
jne
xor
div
dec
mov
adc
scas
and
mov
fcoml
mov
cli
and
sbb
hlt
xchg
test
add
fmull
inc
xor
or
push
sub
fucom
in
pushl
rorb
xor
jmp
loope
repnz
pop
xor
in
les
push
scas
movsb
in
call
js
shll
nop
fsubrl
or
mov
adc
jmp
add
or
add
cld
mov
mov
loope
lret
lea
inc
movsl
jbe
incb
jnp
push
sbbb
fadd
ret
cmpsl
test
lea
mov
pop
and
in
int
incl
loope
call
decl
add
dec
mov
js
or
jne
insb
jae
dec
mul
mov
push
mov
iret
sbb
pop
dec
stos
lods
fs
sbb
sbb
jle
rcr
adc
daa
sub
push
iret
jmp
and
sahf
mov
push
sahf
loope
lds
arpl
pop
or
cmpsl
andl
subl
add
aaa
out
push
or
andl
cmpxchg
test
or
int
fisubrl
fucomi
sbb
movsl
inc
pop
arpl
push
jge
or
loope
mov
sahf
hlt
adc
adc
cmp
xor
repz
jns
pop
ret
test
fs
test
lahf
gs
jnp
std
and
cs
cmp
xchg
sbb
push
push
push
jmp
cltd
sbb
xchg
xchg
xchg
adc
fstl
mov
mov
loope
pop
sbb
or
lods
movsb
inc
sub
cld
jmp
xchg
push
inc
sub
cmp
aad
jo
sbbl
and
jns
xchg
and
push
pop
test
dec
imul
or
and
xchg
je
clc
mov
xchg
inc
or
fsubr
push
lret
push
clc
mov
inc
add
test
mov
mov
stos
call
pushf
sbb
stos
rcr
mov
xlat
adcb
mov
sub
call
adc
lcall
adc
pop
cmpsl
sbbb
dec
cmp
daa
xchg
test
push
decl
imul
and
mov
push
daa
and
sbb
lods
jle
aas
dec
sbb
inc
push
cli
or
pop
mov
rcll
mov
and
inc
pusha
out
cmc
push
pop
inc
push
push
mov
sbb
push
lea
sar
push
int
mov
mov
repnz
cmp
and
nop
repnz
popf
rolb
cs
sbb
xchg
pop
cltd
std
xor
pushf
dec
mov
push
loop
int3
sbb
addb
sbb
lahf
cmpsl
add
dec
hlt
in
fwait
je
mov
and
clc
fsubrs
adc
xor
xchg
pop
pop
add
jle
mov
xchg
aam
add
pop
xchg
pop
sbb
daa
bound
push
les
jle
mov
xlat
cmpsl
mov
inc
mull
sbb
lahf
adc
incl
add
cwtl
inc
or
and
or
dec
cmp
xchg
clc
ljmp
cmp
fld
aad
xchg
pop
jl
in
jg
call
and
pop
adcl
jo
pop
ljmp
or
repnz
lcall
or
mov
mulps
nop
out
lret
clc
imul
gs
std
ja
cld
test
inc
cmpsl
ficoms
xor
arpl
inc
and
out
and
mov
add
xorb
sti
pop
mov
lock
sub
mov
xchg
test
rcrb
push
call
test
dec
push
sub
addr16
lea
aas
mov
jmp
mov
into
int
test
inc
sahf
mov
and
jle
fsubrp
xchg
rclb
inc
xor
add
or
adc
pop
sub
add
ret
mov
xchg
and
jae
jmp
mov
jp
fmull
push
mov
dec
pop
dec
sub
add
inc
pop
and
lds
xor
mov
das
xchg
loop
mov
push
adc
add
xchg
out
ret
lods
inc
mov
pop
xorb
jp
add
push
in
aad
rolb
out
inc
cmp
cmp
mov
mov
mov
push
into
add
pop
adc
test
pop
loopne
mov
or
pushf
cmpsl
fstpt
or
sub
sub
jae
dec
push
xor
pop
push
xor
or
jle
adc
push
sub
enter
call
in
lea
sbbb
and
and
adc
les
xchg
and
mov
dec
pop
push
shlb
xchg
mov
or
dec
icebp
jmp
xor
sbb
leave
inc
pop
loop
jg
inc
mov
sub
je
stos
loop
mov
loope
unpckhps
shll
or
xor
shlb
mov
mov
ret
orl
mov
push
mov
jb
xor
mov
hlt
dec
stos
or
jg
sbb
fdivl
shl
xor
leave
pop
inc
or
cmp
jne
pop
in
xchg
and
repnz
sub
mov
mov
inc
call
loop
stos
dec
je
dec
jne
mov
ljmp
std
xchg
mov
jl
jo
inc
sbb
and
jg
dec
xchg
unpcklps
fnstenv
mov
add
lea
sbb
adc
or
fnsave
adc
pop
xchg
push
sub
push
xchg
inc
jbe
xor
xchg
cmc
ror
mov
or
adc
mov
jmp
inc
or
and
es
pop
jo
call
xchg
inc
adc
cmp
call
or
cmc
mov
mov
xlat
out
mov
dec
rclb
inc
int3
orb
sub
jne
adc
jle
jno
xor
xor
xor
sub
sbb
fucompp
cmp
and
pushl
shl
clc
jne
jecxz
lods
cmp
je
cmp
sahf
imul
shll
adc
out
loop
mov
push
add
jmp
sbb
ret
jle
cmp
je
or
jmp
cld
cmpsb
mov
adc
push
push
mov
sahf
and
idiv
mov
je
cmp
je
mov
je
cmp
je
xchg
inc
xchg
fbstp
xlat
jmp
inc
jmp
sub
call
mov
jmp
cmpl
rcr
xchg
jo
mov
loope
push
test
mov
ret
mov
in
imul
lcall
cmp
pop
ret
jge
pop
xchg
fldt
dec
adc
sarb
jg
inc
add
je
add
jb
std
adc
pop
stos
add
xor
or
repz
add
ret
repz
push
sbb
push
inc
fwait
mov
aam
dec
int
sub
aaa
sti
int
hlt
mov
cmp
cld
or
pop
xor
inc
pusha
mov
orb
push
mov
lock
sbb
sub
ret
and
xchg
push
cmpsl
sbb
and
and
dec
fdivs
jmp
jmp
faddl
inc
push
inc
cmp
dec
xchg
inc
cwtl
and
jle
cli
fs
jmp
stos
jne
jae
fiadds
lss
repnz
out
leave
push
jge
nop
movsl
sbb
ss
pop
call
adc
or
add
mov
adc
or
mov
and
movsl
xor
add
add
js
sbb
mov
sub
imul
inc
test
in
loopne
xchg
sub
mov
inc
clc
mov
fisttps
enter
xor
and
test
cld
dec
xor
push
hlt
fildll
mov
sub
and
ret
fidivl
repnz
sahf
out
or
les
ret
mov
add
stos
aas
in
in
inc
mov
mov
sub
in
xchg
xchg
shlb
push
inc
inc
xor
jge
cld
mov
pop
inc
mov
add
adc
decl
add
xor
rcrl
dec
add
mov
jg
mov
shr
inc
xchg
sahf
jl
sbb
mov
call
xor
adc
adc
adc
in
dec
repnz
xor
sbb
xchg
aaa
pop
or
fiaddl
xor
xor
mov
inc
add
add
imul
in
cmpsl
push
clc
jl
fldln2
add
xchg
fs
or
loope
into
inc
ja
sub
pop
push
push
adc
mov
ja
and
scas
scas
push
jmp
dec
add
fdivs
out
add
adcl
jno
inc
xchg
rclb
testb
pop
pop
add
add
inc
clc
xchg
in
bound
add
int
in
mov
jp
sbb
bound
push
popa
cmp
out
xor
push
sub
pop
data16
or
jns
sbb
push
mulb
push
das
outsl
push
mov
and
cwtl
ret
sbb
mov
push
push
gs
sbb
shr
ds
add
mov
int
incl
pop
jns
inc
cmp
lret
fwait
pop
sub
sub
fiadds
xchg
add
call
movsl
incl
test
mov
push
insl
adc
cs
jg
fsubr
sub
sbb
std
add
inc
sbb
sbb
mov
popa
sti
popa
sbb
incb
fdivrs
jge
in
mov
ret
sbb
adc
and
add
xor
cmp
sbb
add
xchg
xchg
mov
cmpb
push
sbb
and
mov
call
adc
add
pop
push
imul
mov
mov
icebp
popf
pushf
sbb
loopne
pop
add
jmp
xor
add
sbb
sbb
jle
inc
jmp
xchg
jle
push
fstpl
jmp
int3
fsubrl
add
pop
filds
imul
and
cvtps2pi
cmp
push
mov
pop
gs
ja
and
push
adc
sub
mov
xor
popa
clc
inc
stc
mov
daa
pusha
push
inc
xchg
sbb
sub
xor
std
in
lds
push
popl
arpl
mov
add
leave
lret
or
test
int
push
xorb
data16
ja
adc
scas
dec
jns
xorl
std
xchg
add
inc
cmp
sarl
adc
pushl
add
sbb
and
leave
fcoms
fsubs
jmp
xchg
lret
aad
push
pop
aaa
cmp
sub
or
and
xchg
shr
lret
das
xchg
rcr
inc
daa
imul
inc
fildll
cmpsb
mov
mov
adc
cmpsb
mov
das
pop
in
js
pop
inc
movnti
notl
call
push
lret
fwait
xchg
jo
divb
int
loopne
ret
or
pushf
push
xchg
jmp
scas
sub
andb
cli
and
icebp
adc
inc
adcb
push
push
cli
xchg
xchg
inc
pop
incl
inc
mov
sub
inc
and
xchg
ret
or
jne
jne
or
and
repnz
push
xor
inc
adc
sbb
not
push
sti
stos
leave
push
ud2
clc
jge
pop
data16
shrl
or
jmp
in
arpl
sbb
ret
test
call
mov
rcr
shlb
cld
call
sub
push
push
repnz
je
or
dec
jmp
adc
and
mov
in
push
inc
adc
dec
push
cld
mov
jb
sub
mulb
test
add
fistps
mov
int
push
lods
mov
sub
or
xor
fcmovu
lret
lds
xchg
add
loop
and
popa
test
lds
out
sbb
push
stos
jae
repz
out
and
sbb
add
test
test
sbb
ds
push
fimuls
push
repz
ss
and
and
xchg
repnz
mov
xchg
rorb
std
cld
gs
mov
mov
addb
scas
inc
add
or
out
cmp
cli
push
xor
lds
scas
insb
fdivs
daa
leave
les
sarl
inc
adc
je
rclb
pop
push
mov
push
dec
sti
cs
dec
add
pop
call
mov
movsb
lahf
ret
popa
adc
add
outsb
xchg
int
adc
pop
inc
outsb
inc
imul
push
rclb
push
rclb
cs
cmpsl
jge
pop
je
invd
es
push
xor
mov
sbbl
jb
call
sarb
adc
lods
in
cmc
div
mov
push
call
pop
imul
and
in
or
and
lds
jl
pushl
icebp
fsub
sbb
jp
add
sarb
mov
mov
dec
movb
je
popf
inc
jno
inc
dec
outsb
dec
or
insb
aaa
xchg
xchg
pop
add
pop
movsb
orl
adc
add
adc
add
int
test
aam
data16
ret
insb
inc
outsl
pop
mov
and
mov
leave
or
push
outsl
lock
clc
roll
pop
daa
stc
and
mov
inc
imul
cmpsl
add
andl
push
sti
adc
push
or
stos
aam
lods
or
ret
lock
repz
cmp
add
xor
adc
fs
sbbb
js
ja
mov
sub
es
push
mov
sbb
outsl
xchg
add
test
mov
push
outsb
mov
roll
insb
xchg
jo
adcb
movsb
ret
sbb
sub
xor
mov
mov
sub
shll
xor
addr16
add
inc
mov
rclb
sub
loop
cmpsl
cs
xor
inc
or
ja
and
dec
sub
xor
mov
sbb
mov
and
jb
mull
rol
clc
dec
pop
sbb
fsubrl
jbe
lods
outsb
popa
lods
and
fdivrl
loopne
dec
pop
mov
sbb
and
in
fadd
scas
addl
stos
in
or
or
add
xchg
aam
lock
lret
jo
pop
roll
mov
cvtdq2ps
jg
cmp
cmp
in
and
cld
add
jg
in
sar
cli
and
cmp
movsb
les
loop
rcrb
imul
and
adc
jb
add
shlb
sub
jns
divl
xor
cmp
dec
mov
fsubr
mov
mov
jmp
xor
and
xor
cmpsl
popf
nop
iret
or
jb
je
rcr
xor
clc
sub
les
push
repnz
jb
adc
adc
inc
ja
aas
jno
jbe
jns
sub
loop
pusha
and
movsb
popf
ds
adc
call
mov
add
jmp
cmp
add
call
and
xchg
jae
mov
dec
adc
les
and
fs
mov
in
xor
icebp
cmp
les
aaa
jecxz
xor
lods
or
es
cmp
sahf
icebp
fisubrs
push
adc
pop
mov
mov
push
inc
mov
pop
mov
mov
xchg
rcrb
ss
add
adc
jnp
daa
fs
add
inc
xchg
add
bound
push
add
mov
push
add
xor
dec
add
mov
into
iret
in
jp
inc
add
pop
iret
mov
mov
fimuls
std
jp
movsb
dec
iret
pop
int3
xchg
xchg
adc
hlt
je
inc
out
sbb
sbb
orb
sbb
mov
mov
enter
testb
pop
addr16
or
dec
or
rclb
push
jbe
clc
insl
call
popa
lret
and
cld
pop
dec
inc
ret
pop
pop
pusha
cmp
pop
add
push
cmpl
repz
cmp
add
sub
inc
adc
rorb
jge
or
in
stc
es
jo
clc
dec
jle
std
stc
mov
lods
aas
jne
xchg
adcb
push
lahf
dec
ds
aaa
push
push
rcrb
xchg
and
sbb
mov
jbe
or
popa
sub
fs
mov
xchg
jbe
nop
mov
mov
pop
fwait
add
push
movsl
insb
xchg
and
inc
sbb
xchg
push
xor
adc
mov
test
jmp
nop
pushf
xlat
xchg
scas
je
sbb
or
dec
dec
jp
push
push
dec
inc
sub
imul
mov
imul
idivb
fwait
pop
mov
add
mov
dec
jne
mov
sub
shll
xchg
jne
inc
xor
lcall
pushf
mov
xchg
push
test
add
push
test
and
sub
adc
fld
sub
fwait
or
dec
inc
adc
arpl
bound
loopne
xchg
pop
mov
in
cmc
push
mov
ljmp
cmp
xchg
mov
addb
mov
jmp
leave
jge
push
add
push
push
test
dec
or
push
imul
or
sti
adc
mov
sub
test
sub
sub
imull
mov
mov
or
jmp
adc
addb
add
add
jne
sbb
push
repnz
cmpsl
mov
dec
scas
hlt
push
mov
push
in
inc
mov
leave
push
mov
dec
xchg
mov
mov
mov
add
inc
and
dec
push
jne
es
add
cmp
test
dec
ss
call
loop
ljmp
and
clc
dec
iret
push
call
or
fisttpll
pop
and
loopne
add
cltd
cwtl
or
cs
mov
sbb
adc
cmp
movsl
addl
pusha
inc
or
adc
push
aad
jne
jg
pop
sarl
rcl
lret
lock
and
pop
clc
cmpsb
add
lahf
scas
push
sbb
sbb
pop
test
nop
fsubrp
push
or
mov
and
dec
inc
scas
dec
mov
or
sub
jnp
add
enter
pop
or
xlat
rcl
clc
xlat
add
insb
imul
or
call
or
cmpb
cmp
adc
dec
stos
dec
sbb
es
cmp
xor
bound
loopne
adc
or
lock
fwait
adc
ljmp
cltd
inc
or
pop
shll
pop
jnp
cmp
fcomp
sbb
fdivs
sahf
mov
ja
aad
sbb
push
sbb
fisubrs
repnz
adc
pop
sbb
jmp
sti
add
jl
rol
ret
cmpsl
and
std
into
push
sar
jmp
adc
iret
dec
push
je
lods
daa
outsl
add
rorb
test
ja
icebp
repnz
daa
pop
jge
jle
jg
aas
addl
inc
xor
das
sub
adc
lcall
jl
inc
sbb
inc
pusha
sub
pop
push
in
mov
xchg
cmp
sub
and
mov
jne
je
sub
dec
sub
or
les
fidivl
dec
cmp
lret
xor
stos
sub
sarl
adc
repz
jge
mov
mov
push
pop
cmpb
inc
jecxz
xor
push
mov
sahf
aam
jp
pop
lods
add
dec
out
fs
push
jo
fsubl
push
call
clc
xor
js
outsb
sub
inc
push
push
rorl
stos
test
jne
or
pusha
test
sahf
jg
lock
mov
add
or
rolb
pop
addl
sbb
add
and
inc
int
dec
mov
dec
or
mulb
xchg
jbe
pop
cli
or
adc
xor
inc
aam
aad
fs
psubw
pop
iret
push
pop
xchg
bound
enter
mov
ljmp
imul
xor
orb
in
sbb
mov
pop
push
adc
push
cs
add
pop
jbe
call
add
add
je
jmp
out
xor
sbb
push
or
shlb
cmp
jb
inc
adc
mov
insb
and
imul
dec
mov
popaw
addr16
mov
add
jo
sbb
push
push
add
int3
add
mov
mov
add
mov
test
loop
inc
sbb
jbe
adc
ret
push
lock
mov
jmp
pop
push
pop
pop
lea
or
stos
push
sbb
or
pop
dec
div
fwait
in
jmp
stos
and
shl
mov
or
inc
cmp
dec
or
rolb
jl
jg
adc
push
mov
je
shr
add
cmp
ja
sub
or
iret
test
mov
hlt
ds
inc
lods
cmpsb
out
repnz
inc
add
ffree
rorb
mov
aaa
or
mov
movsb
movzwl
push
or
ljmp
bnd
cld
or
mov
sar
add
sbbl
pop
shl
or
add
add
or
je
enter
or
sar
sub
sbb
mov
lret
push
add
mov
xchg
js
popa
mov
testb
add
dec
cld
or
and
jne
nop
insl
shl
push
adcl
gs
ret
fs
xchg
mov
jg
cwtl
xchg
cmp
jge
test
xor
into
jle
clc
inc
adc
lock
jl
ja
xchg
bound
pop
mov
call
imulb
jl
fadd
movb
paddsw
and
std
mov
add
sbb
xchg
inc
testb
add
add
xchg
insb
data16
sti
cwtl
mov
and
add
testb
adc
xor
inc
shlb
outsl
inc
cmpb
shrb
sbb
mov
dec
push
add
dec
pop
cmp
cmp
sbb
cmp
inc
orb
inc
pop
sub
adc
dec
and
add
dec
or
inc
pop
adc
sub
jmp
rcl
jae
sub
add
inc
jbe
add
sbb
aam
fdivr
pop
mov
fildl
sbb
xor
inc
shl
add
rclb
sub
sti
add
in
roll
iret
xchg
nop
es
stos
jmp
lea
add
xchg
mov
subl
jno
fidivrl
loop
ficompl
sub
add
jb
pop
loopne
pop
fmull
push
mov
cmpb
and
mov
fisubrl
aam
mov
in
xor
int3
sub
jae
cs
les
or
cmpsb
jge
mov
and
push
sbb
test
xorb
int3
decl
xor
dec
test
inc
les
mov
jbe
inc
dec
mov
push
or
jne
mov
mov
dec
fcoml
pop
sbb
inc
rcll
and
mov
jae
push
cwtl
data16
nop
ret
int
lods
push
out
dec
jb
mov
sub
push
rclb
loop
dec
les
je
mov
bound
mov
mov
xor
lcall
nop
jmp
add
in
push
jns
and
adc
push
cwtl
jmp
in
lock
add
mov
fdivrl
rcrb
cmp
cwtl
mov
and
lcall
adc
inc
cmp
jne
decl
mov
int3
in
lock
ret
ja
push
add
mov
add
insl
ja
jmp
mov
dec
jmp
sub
dec
adc
xchg
push
je
dec
insb
ja
stos
sbb
sub
enter
push
lock
sarb
mov
pop
cmc
jmp
lock
lea
inc
cld
add
sarl
ja
outsb
mov
inc
loopne
dec
mov
push
mov
xchg
cld
cli
rorb
testl
push
sbb
movsb
movsb
or
lods
add
dec
loopne
mov
mov
mov
adc
scas
mov
mov
mov
pop
ljmp
sbb
xor
lcall
or
jnp
testl
stc
or
fwait
and
add
push
push
jmp
insb
fwait
inc
subb
mov
stc
sbb
add
xchg
lods
or
loopne
sti
xchg
add
daa
frstor
add
add
les
and
popf
add
movsb
mov
fldcw
rcrb
push
adc
inc
rcll
mov
push
js
jmp
mov
and
or
lret
mov
aas
enter
nop
push
test
and
xor
repz
lcall
pop
push
or
lods
in
add
mov
jb
loopne
or
fadds
dec
pop
or
outsl
or
movsb
cmp
mov
int3
pusha
add
and
movb
punpcklbw
mov
mov
clc
pop
mov
ja
mov
pushf
mov
sub
add
cmp
mov
fiadds
arpl
jb
jbe
cmp
xchg
icebp
test
pushf
add
call
pop
aam
add
add
adcb
cltd
imul
cmp
outsl
notb
add
inc
sub
testb
jge
adc
cmp
jbe
out
int
scas
pop
adc
or
lret
mov
fs
vmovmskps
mov
fisttpll
jp
stos
pop
aad
rclb
jecxz
push
mov
jb
and
jb
incb
test
mov
mov
mov
std
je
lret
inc
sub
pop
mov
and
imul
popf
add
push
sbb
sub
push
mov
mov
and
ja
lcall
dec
xor
lods
mov
cld
cli
push
adc
xor
dec
test
js
sar
mov
mov
shrb
mov
and
fidivs
jmp
xchg
add
sahf
or
xor
sub
dec
sbb
inc
dec
fstpl
lock
lret
add
dec
push
jne
sub
sahf
mov
mov
icebp
dec
cmp
rol
cli
je
push
dec
adc
cmpsb
test
ja
hlt
push
push
jle
pop
cmpsl
out
cmpsl
std
movb
mov
or
orl
call
or
sahf
or
or
loopne
clc
sub
mov
lock
das
iret
jmp
cmpsb
cmpsb
test
dec
pop
movsb
add
push
scas
mov
je
jo
inc
cmc
orb
in
ss
inc
or
or
in
in
adc
inc
out
in
and
lds
int3
mov
enter
mov
test
imul
mov
push
jae
pop
dec
shr
sarb
inc
and
push
or
and
jno
sbb
hlt
cmp
cld
jnp
lods
out
adc
inc
mov
call
adc
es
call
insl
and
sbbl
xchg
xchg
cmp
insl
ja
pop
mov
xchg
mov
xor
dec
test
getsec
and
push
aad
mov
cmp
ret
xchg
xchg
movsl
xchg
mov
push
push
enter
cwtl
dec
jecxz
push
cmp
adc
adc
cmpsl
pop
add
leave
imul
scas
das
pusha
dec
adc
notl
xchg
test
lcall
cmpsb
pop
mov
mov
adcl
push
push
inc
imul
decb
jl
jne
mov
mov
jmp
jmp
icebp
enter
shl
mov
rol
mov
mov
mov
push
out
cmp
jle
loopne
and
enter
pop
pop
sbb
mov
pop
xchg
mov
push
je
sbb
fimull
shlb
pushf
or
pop
test
lds
cwtl
and
xor
sub
xchg
sub
cmp
insl
inc
ja
or
pop
inc
mov
sub
les
jb
das
push
inc
mov
or
fsubl
inc
add
jo
and
pop
call
xchg
lcall
mov
jno
jl
or
lcall
adc
adc
cwtl
cmp
lock
cmpb
shrb
adc
lret
adc
in
dec
push
fimull
xchg
sbb
jg
or
call
jns
sbb
pop
sbb
or
add
inc
mov
loopne
and
sarb
adc
fmul
ds
pop
cmpb
int3
rclb
xchg
push
adc
mov
aam
adc
mov
jmp
jecxz
xchg
in
in
ss
das
fimull
inc
ret
mov
cmp
ret
and
movsb
sbb
jmp
push
nop
in
mov
test
test
nop
xor
enter
cwtl
cmpl
fistpl
bound
arpl
jne
stos
mov
jb
cmc
dec
call
vpmacsdqh
ja
push
dec
ss
pop
inc
adc
or
stos
test
jne
pop
xchg
mov
pop
int
mov
out
push
adc
pop
rclb
mov
xchg
in
add
mov
push
sbbb
dec
test
shr
dec
jne
lods
jmp
mov
nop
xchg
mov
inc
out
into
pusha
xchg
jl
pusha
int3
mov
je
clc
xor
aam
test
addr16
inc
subl
sub
xorb
cs
pop
ds
call
testl
popf
xor
fadds
test
in
and
dec
enter
mov
sbb
sub
push
test
lret
sub
dec
mov
repz
pop
aas
push
xchg
lahf
push
or
dec
jecxz
mov
adc
inc
sub
in
into
lret
xchg
adc
imul
fprem1
mov
sub
mov
aaa
les
inc
mov
outsb
call
add
adc
or
das
call
addr16
std
pushf
ret
call
and
fistps
xchg
shl
sbb
stc
insl
clc
in
out
lds
mov
xchg
lret
negb
loope
adc
sahf
add
int
fiaddl
fisubs
and
mov
popa
fchs
mov
sub
mov
lock
je
adc
mov
aad
xor
jo
sbb
add
adc
lret
adc
or
and
pop
call
lcall
jl
lods
pop
push
cmpsb
data16
imul
sbb
add
pusha
jle
rolb
cwtl
ja
sbb
mov
and
xor
testl
or
mov
jge
cli
sbb
add
push
call
je
shlb
push
mov
ja
dec
push
sbb
add
xchg
mov
inc
xor
ljmp
cmp
sub
out
psubb
lock
scas
call
ret
or
shll
call
mov
das
dec
and
sub
setne
les
int
mov
fldt
xchg
and
add
popa
push
fdiv
mov
mov
pop
leave
lret
popf
push
xchg
inc
pushf
mov
das
xlat
fcomi
xchg
aad
pop
adc
push
xchg
mov
and
xor
aas
mov
daa
push
sbb
dec
jns
mov
lods
out
cld
sbb
inc
dec
jne
in
out
shlb
inc
ds
push
arpl
push
dec
xor
push
orb
pop
dec
loop
push
lahf
cmp
ret
pushf
inc
xchg
sti
xchg
jge
xlat
xchg
mov
xor
das
push
push
clc
data16
xor
or
dec
add
push
push
push
push
insl
sti
pop
imul
jge
push
cmp
mov
shl
add
mov
adc
and
or
push
sbb
mov
idivb
arpl
cmp
or
xor
shlb
inc
mov
int3
adc
dec
add
mov
into
addl
leave
xchg
enter
dec
mov
adc
call
loope
movsb
mov
in
enter
test
lret
cmp
inc
nop
sbb
inc
sub
subl
and
jle
sub
jnp
mov
mov
lret
test
mov
adc
or
sahf
xchg
or
adc
xchg
xor
jnp
inc
or
decl
sub
inc
das
lcall
dec
and
lret
and
inc
test
mov
add
fs
bound
push
fidivl
clc
loopne
lret
sarb
or
push
fsubr
or
or
pop
int3
cmp
fiaddl
sbb
mov
test
stos
jno
xchg
add
sbb
jo
or
mov
pop
nop
inc
mov
movl
sub
cmp
fildll
jno
call
jl,pt
jl
es
repnz
popf
js
pop
mov
xor
mov
in
sub
push
push
test
adc
out
push
adc
cwtl
pop
cwtl
mov
xchg
mov
inc
cmpsb
cmp
pop
and
lods
lret
xchg
testl
mov
dec
xchg
pop
pusha
cltd
sub
push
xor
xor
lock
ja
adcl
popf
push
je
sub
cmp
push
xchg
divb
lret
adc
sar
jge
jle
sar
add
add
cld
pop
clc
add
mov
pminsw
adc
daa
pusha
cld
lret
push
push
sbb
push
xchg
lods
addl
sbb
rorb
cli
outsb
or
out
sbb
jle
adcb
jnp
jnp
fisttpll
mov
add
aas
inc
mov
adc
and
sub
inc
pop
push
push
rorb
add
out
and
cld
clc
sub
and
rorb
mov
test
popa
sahf
add
cmpsb
mov
fsubr
cli
mov
hlt
leave
loop
cli
jl
lret
out
hlt
pop
adc
pop
mov
mov
add
dec
and
loop
js
outsb
mov
cmc
mov
xchg
or
inc
cmp
cltd
and
movsl
push
rorb
mov
fsubs
lock
add
dec
adc
inc
mov
adc
pop
cmp
cs
mov
sub
xor
xchg
mov
and
ds
add
jae
cmp
xchg
into
inc
dec
or
mov
xchg
out
daa
fcom
mov
xchg
inc
sbb
mov
dec
lods
pushf
mov
xchg
mov
je
inc
mov
frstor
push
push
mov
add
movsl
in
and
movsl
mov
or
sbb
ret
scas
mov
inc
xor
sbb
jp
orb
andl
ljmp
inc
xor
out
inc
out
test
dec
cld
adc
ljmp
add
cmpb
mov
test
mov
test
adc
test
cs
xor
or
repnz
cmpsl
push
inc
inc
je
imulb
sti
scas
mov
mov
mov
lret
hlt
addr16
jge
mov
imul
mov
enter
out
out
pop
int
jne
mov
xchg
inc
jno
fsts
adc
int
enter
movsl
sub
loopne
or
mov
scas
fbstp
or
lds
jle
int
lahf
mov
inc
sbb
or
xor
push
repnz
dec
mov
sahf
ficoml
pop
gs
mov
dec
sbb
cmp
movl
xchg
mov
and
pop
mov
nop
decb
jp
push
sbb
lock
push
cli
mov
ret
dec
mov
cmpsb
adc
lahf
mov
shll
sysret
pop
inc
xlat
xor
incb
xchg
jns
es
loop
sbb
xchg
clc
mov
mov
rcrb
add
cmp
mov
add
add
fimull
nop
out
insb
js
aam
movsl
mov
cwtl
xchg
arpl
pop
cmpsb
pusha
sub
dec
sbb
dec
shrl
and
rclb
xor
and
inc
pop
jecxz
pop
add
pop
xchg
mov
adc
pusha
hlt
sub
mov
call
lret
call
loope
hlt
call
cmc
idivl
rcl
push
call
div
loop
push
call
lahf
cmp
push
push
pushf
cltd
or
cltd
cs
jle
hlt
adc
xchg
pop
push
fnstcw
les
ljmp
movsb
scas
cld
jp
pop
fsubs
mov
mov
sub
mov
jmp
lds
subps
test
insl
sbb
dec
fwait
sub
repnz
inc
shll
sbb
xchg
cmp
mov
out
fiaddl
loop
shrb
leave
mov
pop
in
xchg
pushf
pop
mov
jae
nop
push
cli
ljmp
in
call
ret
pop
dec
outsb
outsb
outsl
and
fs
pop
jecxz
pop
push
push
inc
push
dec
inc
pop
adc
dec
test
and
add
inc
popa
push
xchg
pop
dec
pusha
mov
push
xor
movsb
and
adc
popf
and
das
push
or
cmp
fs
iret
repz
mov
in
add
cmp
push
jl
out
xchg
push
pushf
inc
nop
fcoml
add
loopne
mov
and
imul
dec
cltd
mov
out
mov
fwait
hlt
lcall
bt
stos
stos
mov
adc
cmpsl
lgdtl
add
or
sbb
push
icebp
out
sub
xor
sub
jg
insb
mov
xor
sub
cmp
jno
fsubrl
and
jne
outsl
xor
rorb
popl
cmp
fldt
push
rorb
sarb
aam
repnz
mov
shll
xor
dec
es
int
fnstcw
flds
jae
es
rorb
repz
xchg
stos
aam
iret
repz
lock
adc
and
out
xor
push
out
sahf
out
lcall
sahf
aam
repnz
adc
out
mov
out
punpckldq
xchg
cmpsb
das
enter
aaa
bnd
push
aad
push
inc
push
push
repz
repz
mov
stos
mov
sahf
out
ds
sbb
ds
jns
out
data16
cmpsb
mov
int3
loop
add
sbb
repz
es
insb
adcb
mov
aam
fadd
out
hlt
add
push
fmuls
jns
out
push
inc
push
push
data16
scas
ret
data16
mov
adc
sysenter
jo
subl
loop,pn
arpl
mov
mov
movsb
dec
cmp
jb
add
add
and
sbb
arpl
pop
mov
mov
pop
xor
fcoml
mov
outsl
cmpsl
nop
add
inc
lods
push
insb
jae
dec
jb
push
jl
inc
dec
push
mov
pop
add
xchg
or
dec
or
mov
repz
fmul
nop
xor
inc
and
inc
xchg
mov
adc
jo
push
loopne
iret
jl
mov
and
dec
inc
sahf
je
push
outsb
ja
cmpsl
jno
push
push
fs
push
xor
lods
inc
inc
fnstenv
rcl
xor
mov
adc
adc
lahf
repnz
push
jns
lcall
fwait
dec
out
rolb
les
and
xor
mov
jmp
cld
dec
cmpsl
lods
cmp
sub
add
mov
divl
dec
outsb
pop
fcomps
jbe
sub
jbe
jo
lret
test
sbb
nop
fstp
ret
dec
fsubr
push
cs
pop
and
test
sbb
stos
pop
loopne
rcll
mov
jo
cltd
inc
sbb
outsl
xlat
je
sarb
je
add
adc
push
aaa
push
mov
mov
lretw
xor
dec
jo
inc
cmp
mov
arpl
or
outsl
lods
jecxz
jae
imul
inc
and
push
popa
fs
bound
ja
mov
decb
inc
inc
inc
push
dec
adcb
mov
addr16
das
inc
xchg
ja
lods
mov
pop
mov
inc
movsb
call
mov
sbbl
lds
dec
mov
sub
aas
in
mov
mov
inc
xor
dec
sub
sub
addr16
xchg
cmpsb
inc
cmpsl
mov
pop
inc
cld
gs
xor
xchg
sub
and
and
inc
mov
je
pop
pusha
add
pop
sub
inc
inc
push
out
imul
mov
nop
add
add
jb
inc
jecxz
pop
movsl
push
xchg
and
sbb
sbb
adc
test
leave
cmp
mov
or
cmp
push
mov
inc
push
test
inc
or
xchg
and
roll
jg
daa
stos
sbb
jmp
ja
lret
mov
mov
adc
sbb
xchg
insb
inc
cmp
insb
jb
mov
insb
and
xchg
or
or
push
add
and
xlat
mov
push
imul
dec
add
rorb
loopne
push
push
inc
xor
fcoml
lock
fcomps
cmp
daa
jns
out
or
mov
out
sahf
out
adc
sbb
fistpl
imul
addb
jbe
test
pop
fcomip
mov
into
cs
push
mov
iret
repz
mov
ljmp
mov
sub
outsb
bound
add
add
pop
xchg
pop
mov
aaa
xor
dec
mov
jo
cltd
das
jo
or
add
mov
das
mov
add
cs
or
lock
out
mov
adc
add
and
push
insl
cmp
adc
push
add
int3
sbb
cmpsb
inc
fisubrl
inc
insb
pop
rcrb
es
push
shlb
incb
sarb
cmp
mov
pop
repnz
in
scas
pushf
sub
das
jns
enter
mov
and
mov
and
adc
rcl
ficoms
addb
adc
push
inc
adc
outsl
incl
adc
and
jo
push
decl
ja
ja
mov
mov
mov
fwait
jg
lock
filds
orb
lods
stc
out
jo
ja
cmpb
js
jo
js
and
das
movsb
jl
leave
flds
decl
add
jb
stos
stos
scas
xchg
ja
stos
jg
jo
pop
pop
clts
pop
outsb
push
xchg
out
add
loopne
popa
leave
repz
lock
dec
shrb
jmp
jno
xlat
inc
push
ss
int
ss
add
add
adc
push
data16
insb
add
and
sub
push
push
dec
add
cmp
jle
jg
push
push
add
add
movb
out
shrl
sbb
es
out
fidivs
and
push
cwtd
int3
jns
out
decl
data16
repz
cltd
cltd
cltd
cltd
popf
out
out
cltd
cs
int3
int3
out
cmp
flds
insb
shl
pushw
cltd
int3
incl
add
cmp
repz
xor
cs
iret
data16
cmp
repz
cltd
repz
cmp
int3
int3
int3
int3
pushf
out
mov
cmp
out
push
shrl
push
data16
mov
jmp
cmp
ss
xor
or
data16
push
mov
xor
data16
repz
data16
iret
repz
into
int3
jns
out
out
into
cmp
int3
jo
push
add
cmp
push
xor
dec
jmp
shll
data16
data16
out
es
cltd
cltd
cltd
jno
cmp
imulb
ljmp
int3
out
cmp
das
cltd
push
outsb
ret
adc
add
push
and
cltd
int3
jmp
push
int3
data16
jge
adc
push
cwtd
out
mov
int3
decl
insb
cs
sub
jno
int3
int3
xor
int3
adc
jmp
or
cmp
sub
push
lcall
dec
jns
out
dec
jmp
jns
out
jns
jns
incl
out
ljmp
data16
cmpsl
ds
insb
ss
adc
pop
add
ja
xchg
xchg
int
mov
add
add
add
insb
ss
jecxz
ljmp
or
sbb
push
outsb
out
inc
pop
in
pop
xor
cli
jg
int
pop
in
pop
pop
cli
pop
pop
pop
add
sti
sti
cmpsb
or
lcall
sti
jnp
cmp
incl
in
sti
push
pop
mov
ja
cmp
add
in
in
add
cmc
jg
mov
in
dec
in
push
outsl
jp
xor
dec
pop
cmp
cmp
in
pop
inc
jae
fwait
mov
pop
and
pop
ss
dec
add
lock
adc
stos
push
iret
and
inc
pop
adcb
int
aas
nop
ja
js
fstl
jg
fcomip
adc
jo
xchg
std
fstps
incl
pop
js
mov
cwtl
mov
xchg
mov
jg
jg
js
jo
mov
mov
ret
inc
aas
js
mov
xchg
outsl
pop
jg
jnp
fwait
mov
pushl
clc
testl
or
fimuls
mov
jo
pop
jge
pop
dec
xor
enter
notl
adc
xchg
mov
jo
ja
js
mov
fwait
xchg
cwtl
pop
or
pop
mov
xchg
xorl
inc
sub
add
enter
and
das
pop
sbbl
xorl
stos
gs
jns
pop
push
sti
mov
xor
mov
pop
inc
ds
pop
mov
lcall
sub
sbbl
jl
jo
pop
add
int
jmp
ss
push
jo
and
jg
add
in
in
pusha
add
xor
xchg
out
add
cmp
clc
cld
clc
inc
and
push
add
mov
addb
nop
mov
add
inc
add
mov
xor
in
mov
pop
aas
xor
outsl
leave
lahf
inc
cmp
add
out
ds
pushf
cmp
inc
jmp
out
popf
or
repnz
jg
jl
jnp
imul
shlb
add
ljmp
cmp
adc
mov
jg,pt
add
lock
jg
xor
aaa
nop
mov
mov
add
fldl
jae
mov
lock
inc
mov
js
ds
cmp
mov
dec
push
loope
inc
inc
lahf
aas
idivl
jge
cmpl
mov
aas
add
jmp
cld
fisubl
cmp
aas
push
in
add
jmp
bound
testl
fistpll
out
or
loop
mov
std
jnp
xchg
adcl
fcmovu
lret
ss
aas
int3
mov
sti
jp
xor
dec
aas
fldt
or
aas
arpl
inc
lret
rolb
in
insl
imul
jg
aas
insl
mov
pop
inc
aas
jp
adc
sbb
lods
mov
aas
aas
pop
mov
add
in
add
adc
push
bound
and
dec
nop
dec
sub
addr16
test
gs
out
in
gs
cmp
mov
fsubrs
in
pop
addr16
mulb
xchg
adc
push
mov
or
add
cwtl
cs
push
jg
js
push
sbb
dec
ja
push
fsubs
push
push
pop
pop
outsl
xor
cli
mov
out
test
xchg
out
mov
mov
idivb
push
mov
jnp
or
add
ss
mov
and
push
mov
mov
fstp
fcompp
out
jp
mov
push
test
ds
rol
js
jbe
add
pop
xchg
aas
xchg
gs
and
insl
inc
push
xchg
fs
bound
in
int
rorl
xchg
arpl
daa
clc
xchg
fs
dec
adc
xchg
cltd
jnp
dec
adc
dec
push
pop
pop
arpl
aas
add
mov
jb
pop
add
inc
fisttps
mov
lcall
ret
cmp
jl
add
xor
adc
pop
or
arpl
addb
add
adc
daa
fcomp
cmp
mov
sub
sub
popa
jbe
sub
xchg
pop
cmp
lahf
and
cmp
or
jecxz
push
add
mov
pop
sub
jp
pop
inc
sub
cmp
maxps
xchg
lds
dec
jae
es
add
addr16
cmp
lret
mov
iret
xchg
ljmp
pop
daa
cwtl
std
outsb
adcl
adc
mov
sahf
push
insb
lret
push
jb
add
or
push
sub
sarl
addr16
xor
arpl
sbb
mov
icebp
sarl
adc
sbb
pop
shl
loopne
add
jle
bound
inc
scas
mov
lret
dec
das
and
ret
and
pop
mov
pop
call
add
xchg
or
popf
sub
inc
add
dec
jb
inc
add
jns
mov
aas
push
outsb
push
sahf
jg
cmp
arpl
je
add
jbe
in
popf
sbb
arpl
pop
jne
sahf
or
jb
add
cmp
roll
add
adc
fiaddl
or
jae
or
js
pop
pop
je
insl
mov
addb
outsl
add
or
inc
or
cwtl
xchg
mov
andps
gs
or
jnp
shl
ja
pop
popa
push
outsl
fldt
outsl
push
jnp
pop
xchg
outsb
mov
pop
or
jb
mov
and
ret
aas
iret
inc
pop
cld
jg
and
jb
insb
push
je
int
xlat
jnp
sub
decl
ret
lcall
or
mov
sar
lret
cli
xor
fldenv
mov
add
je,pt
shl
sbb
cltd
cwtl
clc
add
add
add
jge
fiaddl
sbb
xchg
ret
inc
mov
ss
xchg
icebp
push
adc
inc
push
dec
ficoms
imul
push
mov
iret
pushf
out
sahf
je
outsb
mov
inc
adc
sbb
outsl
inc
ret
imul
push
xor
sahf
out
test
push
inc
inc
lcall
adc
imul
jne
jge
xchg
outsb
and
addr16
out
mov
xchg
out
sbb
popa
lahf
add
mov
push
clc
push
bound
add
aaa
pop
inc
imul
push
roll
pusha
add
lock
adc
pinsrw
out
add
mov
add
xchg
jns
mov
hlt
jecxz
dec
je
add
notl
outsl
mov
shlb
jne
imull
aaa
dec
add
mov
adcb
ret
mov
dec
push
cmp
cmp
jae
or
data16
js
sub
pop
cmp
and
gs
sub
lods
outsb
out
sbb
mov
and
and
outsl
in
das
lcall
jns
jae
aas
ds
or
push
jl
jae
jne
outsb
cmp
push
sbb
jmp
loopne
in
lods
cmp
insl
jbe,pn
mov
add
xchg
push
xlat
jbe
or
je
ret
clc
frstor
dec
push
les
fdivr
sub
outsl
imul
cld
dec
js
and
and
jo
ja
and
les
jae
dec
xchg
inc
outsl
cmp
das
dec
dec
cmp
sbb
jns
je
add
or
dec
pop
sbb
cs
pop
cwtl
subl
sub
pusha
push
ss
and
push
jo
loop
js
lcall
cmp
xor
arpl
xor
xor
pop
push
insb
aad
sub
das
addb
jae
mov
lds
outsl
pusha
insl
jno
xor
arpl
pop
or
xor
andb
neg
or
sub
push
cltd
dec
jo
test
or
mov
jb
test
add
add
xor
ds
shlb
add
push
das
sti
das
jns
xor
xchg
nop
loop
ja
or
jo
divb
insb
and
jo
das
das
stc
cmp
cs
push
dec
dec
das
xor
xor
pusha
or
lods
loopne
adcl
popa
dec
movsb
lock
sbb
dec
subl
mov
add
inc
rorl
push
and
xchg
jnp
cli
cmp
dec
xor
aaa
sub
sub
sub
sub
sub
xor
xor
call
out
xor
cmp
xor
cltd
ljmp
popa
xor
xor
xor
xchg
popa
jb
das
inc
inc
sbb
aaa
cmp
or
jmp
sbb
jg
xchg
inc
cmp
call
cmp
icebp
pop
addr16
xchg
xor
inc
mov
cld
mov
jmp
subl
mov
incl
pop
outsl
dec
jno
outsl
punpckldq
cld
fimull
inc
leave
adc
call
das
xchg
lock
mov
outsl
fucomp
in
aam
adc
inc
jg
decl
xchg
lret
xor
scas
jno
or
loop
fs
incl
or
ljmp
int
or
lods
lods
iret
les
or
je
outsl
out
daa
sar
call
int
rcrb
cmp
lods
fistps
pop
xor
stos
test
mov
addl
lcall
mov
xchg
mov
lcall
aaa
mov
andl
add
out
fisttps
or
sbb
mov
add
out
pop
sbb
repnz
jmp
out
cmp
std
ljmp
mov
and
mov
adc
sbb
mov
aaa
and
pushl
imul
les
adc
leave
xchg
outsb
push
inc
jge
sbb
aas
call
cld
incl
mov
out
jbe
insb
pop
lret
pop
jbe
lds
cmp
lcall
call
pop
push
loopne
popa
movsb
ret
inc
imul
filds
push
ljmp
je
stc
dec
mov
in
pop
adc
add
inc
mov
mov
sar
jg
mov
scas
loope
mov
lahf
in
rorb
outsb
fwait
mov
ljmp
xchg
or
xchg
or
repz
cmovbe
les
cmc
adc
lret
inc
xor
decl
pushf
dec
mov
sbb
mov
adc
clc
xor
sbb
mov
pop
ja
pushl
adc
push
mov
mov
mov
call
mov
or
clc
insl
into
mov
dec
fmul
out
cwtl
sarl
cwtl
test
hlt
hlt
ljmp
loopne
call
adc
mov
mov
sqrtps
fstps
mov
push
pop
fimull
push
mov
decl
push
lds
mov
mov
inc
cmpsl
mov
andl
xor
xchg
xlat
ljmp
andl
sahf
test
test
ds
aam
popa
adcl
sbb
adc
cld
loope
pop
call
jmp
xchg
imull
loopne
push
cmp
jecxz
out
dec
addr16
pushl
out
popa
mov
adc
mov
rol
dec
int
push
push
jl
lds
lcall
sub
stc
outsl
nop
pushf
and
stc
adc
out
loop
lcall
inc
out
mov
mov
icebp
fwait
mov
xchg
xor
into
int
jge
rorl
pushl
mov
int3
mov
mov
hlt
sbb
cld
inc
pop
in
mov
decl
fisubl
ljmp
jge
mov
andl
lcall
movsl
mov
repnz
pop
pop
jg
clc
mov
sbb
jmp
sub
call
mov
jg
push
sbb
dec
icebp
adc
cmpsb
ret
mov
pop
jne
ret
mov
jns
clc
cs
pop
push
les
inc
push
mov
mov
aam
jge
sub
int3
mov
test
lock
iret
xor
jecxz
lcall
or
int3
xor
sbb
ljmp
push
xor
jns
mov
pushf
and
testb
test
xor
fwait
mov
or
mov
mov
inc
test
js
lcall
dec
lahf
dec
jecxz
add
out
les
mov
push
std
inc
xchg
leave
mov
mov
cmp
mov
push
and
orb
pushl
rclb
rcl
fsubr
mov
lds
pop
addr16
bound
jmp
idiv
lcall
add
dec
push
outsl
push
add
enter
push
or
outsl
scas
popa
ljmp
loopne
add
outsl
lahf
sbb
clc
xchg
mov
mov
leave
cmpsl
dec
mov
inc
adc
xchg
pop
pop
out
add
aam
out
jmp
lret
mov
mov
loope
jbe
decl
imul
xor
or
out
shrb
jns
dec
mov
jmp
arpl
jmp
sarl
repnz
lcall
icebp
xor
cmp
rclb
mov
cmpsl
addl
pop
jno
fsubs
adc
sub
inc
les
int
and
sub
pop
xor
push
call
inc
gs
in
imul
pop
jecxz
cs
push
fsubs
shlb
or
sbb
mov
pop
push
pop
xchg
jb
add
push
sbb
lret
sub
jmp
pop
jl
sbb
add
add
pusha
or
add
rcr
pop
inc
and
pushl
scas
test
xor
dec
bound
cmp
movsl
fiadds
or
sub
sbb
ror
mov
test
sbb
iret
pop
mov
and
cmp
call
or
les
adc
mov
mov
xor
push
mov
xorl
std
daa
mov
xor
mov
test
jb
sbb
hlt
push
fisubrs
inc
pop
fs
incl
push
cmp
push
ljmp
es
daa
mov
mov
sbb
xlat
dec
jmp
push
xchg
xor
adc
ret
sub
fwait
xchg
xchg
jnp
out
and
cmp
jp
lret
adc
dec
mov
sbb
les
jmp
pusha
mov
idivl
daa
jae
pop
mov
pop
imul
fucompp
cmp
sub
js
pushf
jae
jbe
lcall
jl
cmp
pop
xorb
or
jns
jno
arpl
outsl
dec
lea
ja
ficoml
ss
sbb
sbb
mov
mov
push
call
popa
push
out
les
xor
mov
mov
in
push
mov
pop
mov
mov
loop
jmp
out
push
jg
fs
addb
mulb
stos
out
into
dec
fbstp
inc
sub
jnp
jg
decl
xlat
jns
sub
test
cmp
cmpsb
mov
test
aas
push
fcmovb
stos
xor
fldl
negb
jae
mov
lahf
xor
mov
icebp
decl
lods
adc
pop
xorl
dec
push
jl
mov
add
push
roll
clc
add
shlb
mov
imul
jmp
sub
cmp
scas
jo
fldcw
lret
movl
lock
and
out
stc
faddl
xchg
inc
or
cltd
mov
call
xor
mov
das
xchg
pushl
and
jg
or
notb
mov
and
lret
push
movsb
call
imul
jp,pn
or
in
out
nop
add
mov
sbb
fnstcw
mov
mov
enter
mov
mov
jo
or
jno
dec
add
and
movsl
mov
jmp
loop
shll
jbe
in
add
arpl
test
loop
daa
xor
push
je
decl
insl
mov
sbb
loop
inc
and
test
test
jns
scas
in
sar
ds
dec
loopne
jae
test
aam
jmp
mov
nop
push
dec
pop
sub
sbb
mov
push
jo
push
addr16
test
dec
mov
jl
sarb
mov
cmp
mov
es
pusha
fld
cmpsl
mov
xor
jb
xchg
popa
xor
ret
sub
cli
jbe
jmp
adc
jne
sbb
stos
mov
jmp
imul
mov
sub
sbb
cltd
adc
sbb
in
test
fistl
decl
lock
test
adc
lods
data16
hlt
dec
adc
stos
hlt
xor
fucomi
or
insl
xor
insl
lea
mov
sar
and
or
std
ror
pop
mov
cmpsl
shll
sbb
sub
call
mov
mov
push
popf
in
xor
sbbl
xchg
add
inc
push
decl
mov
jp
sti
and
outsl
movnti
push
pushl
aas
aaa
push
repz
enter
sbb
leave
test
cmpsl
test
insb
fdivrs
add
mov
xchg
inc
int
mov
stos
in
adc
jg
sub
outsb
xchg
ds
pop
fwait
pusha
gs
mov
idiv
jg
pushl
aaa
xor
cli
stos
fnstsw
rcl
push
mov
xchg
mov
jg
mov
add
push
adc
inc
jae
and
outsb
pusha
std
jnp
popa
js
lahf
aas
movsb
adc
inc
lret
bswap
lock
jg
inc
popa
sbbb
aad
test
pop
shl
xchg
out
testl
push
ja
decl
cmp
das
push
mov
and
negb
aas
lcall
incl
push
adc
pop
push
pop
mov
scas
inc
inc
rclb
cmpsb
cmc
into
cmp
call
adc
lret
movsl
xchg
movsl
fists
test
or
jmp
lods
push
sbb
jmp
jle
jbe
adc
mov
dec
rclb
add
ret
xlat
fstpl
popa
adc
jmp
and
les
pop
std
stos
inc
bound
sbb
scas
mov
jno
sti
fdivl
push
and
bound
stos
out
fwait
inc
xor
or
add
pop
std
insb
dec
pusha
andl
xor
sbb
and
cld
mov
mov
inc
ljmp
incl
dec
and
fwait
pop
adc
ds
mov
js
add
pop
dec
xchg
out
rcll
cmpsb
cli
pushf
jle
jg
call
test
cmp
fs
fwait
xchg
es
add
inc
ljmp
std
incl
ss
call
xlat
std
mov
sti
cwtl
add
jg
mov
push
test
imul
dec
push
stos
pushl
and
xor
xchg
xchg
out
mov
jo
jb
bound
nop
mov
ljmp
push
jno
lds
std
sbb
scas
sub
shrl
dec
je
pusha
jb
test
pushl
aam
sub
sub
cmp
popa
push
xchg
imul
stc
call
data16
push
mov
imul
dec
pushf
imul
sub
add
or
test
roll
and
adc
loopne
mov
inc
pop
call
sbb
jl
insb
daa
push
mov
daa
sub
test
stos
into
mov
mov
jge
insl
fs
sub
xor
fists
xor
add
inc
out
loopne
scas
add
inc
mov
jmp
xlat
or
jmp
jmp
lods
jns
sub
ss
and
rcrl
imul
andl
loope
xlat
sbb
push
inc
fucomp
ja
mov
decb
aam
or
add
loope
xchg
mov
dec
ljmp
clc
pushl
jae
imul
dec
jo
inc
xchg
add
push
xor
fstpt
jecxz
mov
cs
fdivl
inc
adc
insb
inc
sub
sbb
fistl
pop
lock
push
std
mov
shrl
or
cs
xchg
out
sbb
mov
xchg
in
int3
mov
fcompl
fwait
out
xchg
mov
sbb
xor
popf
add
xchg
lret
add
jmp
mov
add
test
dec
push
inc
loope
lea
jmp
or
outsl
mov
aam
mov
aam
out
shll
cmp
or
es
decl
ja
cmp
repz
lahf
es
rcll
inc
gs
pop
out
mov
icebp
mov
adc
mov
adc
test
and
loopne
or
pushl
andl
sbb
push
mov
cltd
stos
pop
das
push
stos
les
adc
imul
lcall
sbb
add
imul
stos
dec
push
lock
or
xchg
mov
das
cli
decl
out
dec
jb
icebp
enter
or
hlt
add
in
test
mov
ret
pop
sti
lcall
addb
fiaddl
dec
cmp
mov
ljmp
cli
je
mov
ljmp
inc
mov
shrl
cwtl
mov
xchg
mov
and
loopne
aaa
mov
xor
jb
ljmp
push
ljmp
add
mov
outsb
or
je
push
push
divl
dec
jne
or
adc
mov
xchg
fs
dec
inc
sub
ret
stos
lret
test
ljmp
mov
cmp
popf
lds
call
mov
call
lret
pop
mov
push
jb
add
inc
outsb
movsb
inc
mov
cmp
scas
jb
or
subb
xor
incl
pop
sub
mov
dec
aas
mov
push
cmpsb
mov
pop
xchg
adc
lds
fcoms
fistpll
pop
inc
mov
push
mov
arpl
outsl
mov
inc
lahf
dec
mov
push
push
sbb
pushf
mov
push
cmc
aas
in
push
adcb
cltd
mov
cmp
cmp
lcall
seto
or
xchg
in
and
nop
sub
subb
push
decl
push
cmp
fwait
pcmpgtw
sahf
push
cmp
add
jmp
push
fmull
hlt
jnp
aaa
push
cmpsl
test
mov
scas
test
inc
cmp
jmp
pop
fcompl
and
adc
ret
xor
loop
cmc
jne
scas
sbb
jge
inc
cltd
xor
sar
aad
rorl
shlb
sbb
adc
xorb
pop
lods
mov
fcomip
add
lds
xchg
and
js
mov
jmp
add
xlat
sarl
mov
data16
cs
xchg
push
xor
incl
pop
stos
mov
call
mov
test
fisttps
cmp
frstor
sbb
icebp
jl
mov
ret
shrl
incl
and
repz
and
mov
cwtl
test
js
loope
dec
jmp
and
mov
popa
mov
outsl
ljmp
jmp
push
dec
push
les
fbld
rcl
ljmp
out
mov
sbb
fstpt
cmpsb
mov
outsb
lea
xor
nop
aam
clc
jmp
rorb
movsl
or
outsb
outsb
jno
lcall
xchg
jns
xlat
lods
cwtl
divb
cld
sub
sbb
push
jmp
outsl
aam
call
repnz
mov
lds
std
leave
jae
add
inc
xchg
fdivs
lcall
xor
aam
adc
jge
push
mov
or
or
bound
dec
mov
xor
fdivp
scas
popa
mov
incl
mov
adc
in
adcb
xor
and
popf
das
fwait
in
imul
pop
inc
outsb
movhps
push
inc
or
jbe
push
and
js
pushl
jb,pn
cmpsb
call
sub
in
sbb
adc
mov
cmc
andl
dec
mov
or
mov
dec
mov
test
lea
adc
mov
or
ljmp
clc
sbb
and
in
popa
ja
xor
rcll
and
mov
pop
mov
icebp
jle
mov
clc
add
lahf
outsl
inc
jmp
dec
fcmovnu
fldt
js
pop
pop
test
movsb
repnz
rcr
sub
sbb
adc
stc
jl
mov
fadd
lock
mov
cmp
xchg
jmp
add
xor
or
aaa
xor
cmc
push
cmpsl
inc
xchg
push
out
ret
jl
adc
mov
bound
dec
sahf
mov
pop
sub
les
mov
insl
mov
sbb
mov
lods
sub
jno
cs
add
pushf
in
add
clc
das
clc
or
fists
cmp
aas
push
pop
xchg
icebp
ret
outsb
popa
sub
into
pushl
cmp
inc
mov
fsubrs
fisubl
sub
js
outsl
jo
iret
pop
sti
mov
mov
mov
sub
jecxz
jbe
jne
pop
loopne
in
fmulp
in
out
mov
push
scas
icebp
ja
sbb
ret
cmc
fwait
popa
jne
incl
scas
out
in
jne
adc
xor
jl
arpl
pop
gs
pop
ja
popa
mov
jp
repz
nop
dec
arpl
mov
pushl
je
out
add
mov
jae
push
daa
xor
and
mov
mov
pop
leave
inc
mov
out
dec
push
add
or
decl
ja
sbb
dec
inc
movsb
push
rol
pop
mov
push
adc
or
pop
call
sbbb
jp
cmc
inc
add
fdivl
rorb
loopne
pop
and
dec
fs
call
add
imul
sahf
mov
cmp
popf
cmc
test
fimull
movsb
mov
incl
decl
std
inc
ror
or
push
cs
inc
pop
dec
insb
lcall
xor
inc
pushf
mov
or
ret
sub
lret
mov
orb
int3
mov
and
sub
aaa
adc
pushl
scas
adc
cmp
and
inc
insb
stc
andb
pop
cmpsl
jge
repz
xlat
inc
hlt
out
sarb
ljmp
pushl
inc
xchg
ret
adc
aaa
in
cmpsb
inc
testb
movsb
jmp
lds
hlt
bound
sti
and
inc
imul
xchg
sbb
lods
sbb
xor
mov
dec
cmp
ljmp
call
andl
jnp
nop
pop
dec
in
test
sbb
add
decl
xchg
int
jp
or
shl
pop
push
mov
mov
mov
fs
call
call
inc
jne
mov
pop
call
inc
and
and
stc
adc
mov
out
flds
ret
and
lock
or
dec
push
popf
xor
add
add
push
pop
add
stc
addl
ret
sub
rorl
in
hlt
mov
imul
ja
clc
pcmpeqd
out
adc
sub
decl
adc
insl
loope
inc
xchg
shrl
cmpsb
cmpsb
fwait
arpl
lock
mov
pushl
repz
push
inc
jle
dec
jb
popf
adc
jl
fstpl
inc
ljmp
cmp
sub
or
shlb
cmc
jbe
push
or
cli
push
pop
jnp
gs
call
cwtl
and
or
std
push
pop
inc
sub
pop
nop
ss
movsl
sahf
mov
loopne
jl
loopne
fmul
push
shlb
fidivl
push
iret
jbe
fcoms
pop
sub
mov
pop
fsts
sahf
ret
in
dec
aam
sub
mov
stos
xor
ljmp
mov
imul
ja
call
xor
push
cwtl
pop
mov
icebp
jg
jmp
js
lods
cmp
xchg
xchg
sbb
lods
or
dec
adc
dec
sar
mov
enter
add
outsb
or
adc
test
call
mov
jne
and
int
es
cmp
inc
pop
std
rcl
inc
sbb
movsl
sarb
je
pushl
jle
pop
mov
fdivr
fistps
insb
push
adc
insl
out
and
cmp
imul
add
loopne
dec
nop
push
testb
or
jo
scas
insb
cmp
xor
and
fcmovne
inc
aaa
adc
decl
jp
push
mov
test
pop
xchg
bound
out
dec
jb
push
cmp
mov
cmp
mov
mulb
gs
mov
cmp
fnstsw
dec
sub
mull
mov
shrl
mov
dec
fisubrs
aas
xchg
jb
or
xchg
adc
mov
leave
gs
inc
mov
inc
daa
cmp
push
int3
nop
repz
out
scas
xor
jns
in
loope
inc
xchg
gs
inc
es
mov
dec
xchg
sarb
inc
push
inc
nop
and
xor
pusha
out
sub
adc
dec
ret
push
mov
pop
loope
lahf
sub
push
sar
incl
push
jnp
inc
data16
mov
dec
mov
icebp
cltd
rclb
jae
push
jns
divl
sbb
jmp
roll
test
imul
xor
jns
lock
cld
mov
push
xchg
aas
add
data16
sar
ljmp
dec
pop
clc
lcall
ss
or
movsl
data16
in
mov
sbb
shl
inc
cmpsb
scas
jmp
adc
cmp
dec
lods
inc
mov
jns
push
ret
lods
cmpl
xchg
mov
iret
stos
jmp
xchg
add
cmpsl
lock
pop
rcll
jmp
shll
sub
fsubrl
xchg
scas
push
icebp
rcrb
push
loope
jl
dec
jne
decl
pop
sbb
jmp
lds
jo
mov
outsl
push
mov
mov
adc
jmp
popa
push
and
pop
lods
iret
fmulp
inc
add
sbb
iret
push
and
popa
push
mov
mov
pop
push
push
xor
mov
jae
dec
xchg
inc
fsubrl
lcall
sti
leave
pop
sbb
ljmp
and
dec
adc
cli
or
xor
mov
fidivs
call
ja
jle
fisubl
lahf
pop
push
xor
cmp
rol
adc
push
dec
mov
jmp
divl
cmc
out
lds
scas
imul
jae
scas
mov
and
jns
dec
sti
adc
cmp
arpl
sub
aam
repz
subl
mov
inc
xor
fucomi
out
lahf
push
add
pop
jno
out
aam
jbe
sub
mov
jp
into
xchg
nop
xor
mov
xorl
test
out
aad
inc
xlat
gs
mov
loope
mov
jne
arpl
pop
jns
push
or
pop
pusha
sub
imul
cmp
cmpsb
or
adc
aas
pop
push
fs
cwtl
adc
dec
or
pushl
jmp
dec
in
out
jge
push
into
in
jns
rcrl
outsl
test
cs
stc
inc
stos
inc
xchg
sub
inc
and
add
stos
mov
or
inc
mov
cmpsb
pop
cmovne
mov
aas
loop
mov
ljmp
imul
mov
adc
mov
mov
dec
and
xchg
or
es
add
lcall
repnz
adc
inc
jge
adc
mov
js
cmc
push
mov
lea
movsl
iret
or
test
incl
movsl
jo
xchg
mov
mov
cmp
dec
test
cmp
js
xchg
rcrb
jp
pusha
mov
pop
cmp
std
das
addr16
cmp
jecxz
ljmp
imull
and
mov
adc
gs
cwtl
pop
mov
decl
mov
aad
inc
repnz
in
pop
mov
push
imul
call
xchg
and
cmp
dec
xchg
xor
mov
mov
add
out
jge
pop
cmp
or
decl
push
loop
push
out
lret
pop
popf
pop
lcall
ljmp
data16
xchg
mov
cmpsb
mov
es
and
sahf
repnz
inc
sub
aaa
jns
jmp
cmc
inc
jne
data16
sahf
jecxz
std
jne
xchg
cld
in
les
sahf
mov
or
or
ss
mov
lock
xor
push
sub
jge
xchg
js
jbe
scas
mov
xchg
sbb
lea
xchg
data16
imul
rclb
xchg
loopne
jmp
leave
pop
loop
cmp
adc
dec
hlt
add
nop
fnstcw
call
int3
outsb
mov
push
sub
add
push
lock
push
sti
push
outsb
cmc
rcll
push
lahf
popa
mov
std
dec
push
fsubrl
testb
fildl
inc
les
jmp
mov
mov
outsl
xchg
mov
pop
scas
test
fsts
jno
jno
std
incl
sbb
or
lret
cmp
jmp
mov
jmp
cs
rcrb
int
or
sub
lock
stc
jmp
sub
test
mov
adc
xchg
push
dec
addr16
fs
cld
pop
xor
push
and
pop
add
sahf
sub
and
andb
fstp
dec
jg
push
call
mov
lock
nop
insl
out
add
sub
mov
sub
incl
data16
std
inc
adc
push
or
jg
pop
mov
or
xor
lods
neg
decl
sahf
out
and
dec
scas
test
bound
fidivl
sub
mov
loope
hlt
lcall
lock
jmp
pinsrw
push
out
push
std
mov
jecxz
add
mov
push
xor
push
decl
in
cmpsl
sub
mov
sbb
mov
lds
and
jb
sub
clc
ljmp
and
jle
in
rcrb
std
notb
arpl
dec
dec
jno
mov
jmp
fs
adc
sub
mov
inc
mov
mov
push
lock
decl
rorb
xchg
fbld
mov
jge
movsl
jg,pn
sub
sarl
test
pop
and
ljmp
test
jne
xchg
fiaddl
mov
push
xor
add
inc
ret
dec
inc
das
jecxz
js
dec
movsb
and
jbe
push
loopne
jmp
repz
jg
jno
cld
jg
fldcw
fs
lret
out
negb
fistps
loop
push
mov
jbe
clc
push
push
lahf
add
ja
arpl
inc
mov
movsb
mov
lret
jl
mov
mov
sbb
fs
insl
push
dec
std
lods
in
scas
sub
inc
sub
popa
jl
hlt
sub
ret
lods
or
pop
mov
mov
cmp
lcall
sub
xor
sbb
dec
mov
lods
daa
mov
fistpll
nop
jbe
push
adc
call
jb
ja
pop
loopne
cmpsl
addb
xor
sbb
jp
xchg
and
cmp
cli
lahf
icebp
xchg
adc
pusha
or
push
movb
mov
push
or
js
pop
pop
loopne
std
notl
add
and
sbb
push
mov
enter
mov
mov
sbb
mov
rorb
loop
les
push
bnd
inc
sub
in
outsl
inc
sub
test
ss
mov
dec
add
add
jp
pushl
mov
fcmovu
les
call
shlb
lea
push
mov
jmp
cmpsl
fisttpll
fdivl
and
loop
inc
inc
outsb
xor
dec
push
hlt
rcl
in
jno
incl
daa
lahf
mov
jno
push
roll
divb
mov
loopne
ljmp
cmpsl
or
push
pop
push
dec
outsl
cmp
xorl
incl
jnp
push
gs
pop
inc
xchg
cmc
ret
mov
in
popa
jmp
ljmp
stos
imul
sub
ficoms
pop
xor
mov
hlt
mov
push
out
ja
out
jo
adc
cltd
jp
aad
std
jmp
pop
xlat
cmpsb
mov
scas
out
ja
mov
jmp
cmp
adc
movsb
sub
loop
test
cmp
in
lcall
pusha
call
mov
ljmp
rcll
test
fildl
push
push
mov
call
std
fnstsw
stc
cltd
sbbb
cmp
sysexit
sbb
cmp
ljmp
clc
mov
dec
test
xor
mov
cltd
inc
mov
sbb
push
dec
sar
notl
dec
mov
fimull
cmp
sbb
mov
inc
test
pop
fsubs
decl
pop
inc
jns
sbb
xor
xchg
inc
lea
fwait
das
loopne
ljmp
pop
pop
pop
fsubs
pop
mov
inc
pop
lret
or
pushf
jecxz
ljmp
or
cmp
xchg
mov
sub
xor
cmp
xchg
push
fldcw
lcall
cmp
popa
mov
cmp
lods
rolb
aas
in
dec
mov
hlt
push
scas
adc
or
fwait
pop
jecxz
mov
xlat
mov
mov
test
dec
and
call
push
call
lock
dec
mov
stos
fldcw
mov
jle
lcall
cmpsl
repnz
lea
adc
xchg
shr
sbb
or
xor
ret
decl
xchg
imul
imul
repnz
mov
push
in
popf
scas
jg
lcall
pop
add
dec
and
mov
addl
pop
or
clc
jb
mov
xor
incl
ret
sbbl
mov
test
and
adc
and
jae
xor
or
ud1
rorb
fiaddl
mov
rcll
ljmp
and
out
pop
or
cs
bnd
lods
inc
cmp
call
adc
adc
jl
hlt
pushf
push
inc
mov
jmp
mov
fidivs
jmp
icebp
aad
dec
pop
pop
scas
rolb
outsb
enter
sub
inc
pop
mov
pushl
cld
cs
jg
and
jno
js
call
shll
sub
jo
stc
gs
call
dec
sub
mov
test
cmp
sub
cmp
jp
cmp
jg
jmp
int3
lcall
pop
or
not
lock
add
or
into
xchg
int3
iret
arpl
fcomip
add
cs
push
pop
adc
ljmp
pushl
andl
push
lock
dec
iret
sub
ds
lcall
mov
cli
xchg
dec
jmp
inc
ds
fstpl
or
aas
daa
lcall
leave
leave
adc
push
fsubrp
rorb
push
loope
or
cmp
outsl
fmull
data16
mov
js
rcrb
mull
ljmp
aad
int
inc
add
xor
outsb
roll
arpl
pop
lock
xchg
add
and
stos
pushf
rorb
lods
mov
xchg
jp
nop
lcall
or
in
arpl
dec
mov
stos
inc
or
jmp
int3
adc
shr
call
jg,pt
in
mov
push
add
xor
out
xchg
mov
fdivr
pushl
std
aas
add
out
sub
sub
fisubs
adc
pop
xchg
lods
ret
in
add
pushl
sub
stos
loop
inc
movsl
inc
push
cwtl
arpl
in
int3
repnz
lods
sbb
fdivl
ret
icebp
cld
push
cmpsl
jb
xchg
or
dec
bound
aam
push
mov
pusha
and
outsb
imul
incl
mov
loopne
loope
jae
inc
mov
les
sbbl
and
cmp
movsb
mov
mov
in
lods
test
lret
dec
sbb
sti
pusha
test
test
jnp
lock
sbb
test
mov
cltd
lods
push
push
mov
sbb
add
call
iret
jge
rorb
or
xchg
lcall
sbb
jg
sti
dec
push
movsb
testb
pop
sbb
jo
test
out
adc
incl
or
data16
imul
cmp
mov
dec
ret
dec
mov
push
or
insl
and
sahf
xchg
pop
fcmovu
outsb
sar
ds
into
in
paddb
cs
and
push
ss
add
jg
xor
sub
psubw
nop
mov
aaa
xchg
mov
push
call
mov
inc
fdivrl
and
shll
push
js
mov
cli
popa
mov
pusha
outsl
ficompl
scas
cmpsl
dec
lahf
dec
pop
push
xchg
xor
inc
enter
sbb
sbb
cs
dec
jne
mov
clc
cld
loop
iret
jb
jne
mov
xchg
cli
pop
clc
aam
xor
lcall
stc
mov
ds
jle
int3
adc
js
add
mov
scas
mov
mov
jle
scas
sub
sbb
in
fiadds
pop
adc
sub
lock
pushl
cld
das
lock
repnz
mov
std
sbbb
mov
scas
andb
mov
jg
dec
test
mov
pop
xchg
xor
ljmp
xchg
mov
test
dec
pop
mov
int3
sbb
push
push
pop
cmp
sbb
call
int
insl
push
imul
hlt
mov
iret
cli
lcall
pop
fcmove
jg
inc
popa
lds
shll
fld
push
pop
leave
call
jl
adc
outsb
cs
pushl
sub
insb
mov
std
mov
cli
xor
mov
mov
stos
mov
add
cs
adc
pop
into
jge
je
jbe
int3
inc
shrb
rorb
cmpsb
adc
dec
clc
cmpsb
sub
mov
mov
jae
jmp
jne
sub
lcall
sub
lds
cs
add
xchg
dec
jno
add
imul
pushl
leave
fldz
pop
inc
ljmp
iret
out
test
repz
xor
xchg
imul
push
dec
rorb
jo
loop
pop
out
cmp
add
pushw
adc
idivl
sub
add
xchg
sahf
movups
icebp
jns
mov
inc
loopne
outsl
orb
jbe
jmp
repz
jbe
xchg
xchg
mov
sbb
push
dec
lock
cmp
call
sub
in
pop
lds
enter
ret
sbb
jo
pop
pextrw
dec
int3
jno
and
push
pusha
sub
add
arpl
daa
mov
mov
lock
scas
sub
incl
push
mov
adc
hlt
js
cwtl
cli
shl
ss
clc
sti
pop
lock
and
repnz
pushl
sarl
xchg
outsl
adc
lcall
bound
pop
cwtl
add
fsubs
and
jp
mov
adc
in
test
dec
and
gs
repnz
incl
ja
in
mov
inc
movsb
inc
adc
pop
sbb
decl
xchg
cld
xor
xchg
pop
mov
scas
nop
daa
mov
in
fiaddl
sub
sbb
lods
enter
testb
mov
inc
setle
aaa
cld
decl
cltd
movsl
sbb
int3
fldenv
stos
jecxz
fidivl
scas
je
sub
fdivrp
jno
jno
stos
xor
pop
adc
call
xchg
das
in
fwait
xchg
imul
orb
and
mov
sub
jg
inc
out
jmp
or
aaa
fcompl
sbbb
sub
in
in
sarb
out
and
call
pop
xor
jmp
adcb
mov
dec
and
addl
mov
inc
in
inc
sar
xchg
aam
ljmp
xor
lcall
mov
push
or
lcall
fildl
in
dec
cltd
das
mov
mov
cmpsl
fcmovb
jbe
movsb
jl
orb
add
push
scas
cmp
jmp
addb
inc
pop
and
mov
mov
out
call
stc
mov
mov
or
jp
push
into
icebp
mov
and
mov
pop
aam
pushl
imul
add
in
or
divb
jno
sub
insl
std
stos
cltd
push
add
stos
popf
pop
mov
ja
movsb
cmp
lock
xor
punpckldq
aad
mov
sti
inc
sbb
push
in
nop
add
dec
das
sub
mov
stos
dec
daa
lret
mov
pushl
fwait
adc
enter
jmp
xchg
into
pop
cmp
lods
adc
jg
lcall
mov
jg
iret
lds
push
add
rclb
and
lcall
dec
fdivrl
mov
push
outsb
add
or
popf
jecxz
sbb
lods
mov
jmp
sbb
hlt
adc
mov
mov
adc
xor
pop
xor
add
adc
stos
cmp
and
insl
xchg
js
das
mov
pop
fadds
pop
rcll
or
mov
test
lods
jmp
push
movsb
push
popl
add
sti
push
loope
cmp
push
mov
andb
cmp
cmpl
sub
add
std
pushl
xchg
fcoms
mov
cmp
ss
and
mov
mov
mov
add
mov
jmp
nop
mov
addr16
xor
inc
adc
imul
inc
sub
or
inc
lea
ja
jg
cmp
add
and
add
call
jns
pop
outsl
shll
movsl
scas
arpl
xchg
pusha
scas
mov
mov
inc
ror
and
xchg
or
jmp
std
inc
stc
adc
dec
jmp
xor
movd
or
lcall
jno
scas
jg
pushf
mov
mov
popa
inc
stos
push
mov
mov
lock
call
xor
out
mov
test
mov
call
fucomip
xchg
fs
pop
push
hlt
loop
or
fnstenv
lcall
sub
decl
dec
fistl
push
nop
leave
call
mov
xor
mov
add
cli
into
decl
mov
dec
inc
and
outsl
stos
enter
aam
sbb
test
pushl
inc
dec
xchg
orl
pop
dec
stos
lea
cmpsl
jge
shlb
icebp
dec
ffree
ljmp
std
test
jp
loop
incl
movl
lret
lret
push
cmp
stos
push
sahf
sahf
adc
mov
cmc
and
lcall
mov
dec
jg
or
xor
sti
and
sbb
adc
push
addr16
fcomip
ljmp
push
xor
push
enter
sbb
aas
mov
fwait
and
enter
lcall
mov
lahf
push
xchg
leave
dec
or
ds
lock
jnp
jg
sahf
mov
daa
mov
inc
testb
xchg
push
mov
mov
xchg
pop
mov
daa
dec
mov
push
test
popf
sbb
add
lahf
pushl
lods
insl
dec
mov
lcall
fst
sub
fdivl
nop
bound
inc
decl
repnz
xchg
cwtl
cmp
push
and
mov
xlat
xor
lods
in
and
leave
scas
cli
cmp
mov
push
adc
push
sub
sub
out
pop
loopne
call
mov
cmp
cs
cltd
xchg
movsl
es
clc
sub
sbb
dec
scas
outsl
vsqrtpd
xchg
adc
lock
stos
daa
mov
outsb
sbb
call
inc
inc
das
jne
mov
movsl
cwtl
xor
das
dec
idiv
fistpll
ss
movsb
push
push
dec
inc
ljmp
mov
test
and
lcall
test
adc
repz
fidivrs
push
jge
decl
call
in
in
insb
pop
xchg
and
and
aaa
test
fmuls
repz
dec
lcall
ljmp
in
fisttpl
ret
and
cld
mov
and
loopne
dec
fbstp
jl
or
sbb
repnz
daa
jmp
sbb
dec
test
jae
insb
jmp
enter
cltd
pop
dec
xchg
outsl
outsl
and
pushl
fnstsw
imul
cmp
ret
loopne
xchg
in
push
lods
sub
imul
ds
dec
ret
mov
mov
decl
and
fistpl
jmp
push
enter
popa
mov
call
push
push
fs
mov
jl
xchg
mov
cmp
jnp
in
test
ljmp
jl
inc
lret
xchg
sti
out
push
xchg
in
adc
call
cli
jnp
pushl
arpl
pushf
lds
cmp
shl
nop
testb
xchg
cld
lcall
xor
cmp
cmp
lea
mov
in
dec
push
jge
or
jl
call
pushl
nop
cmp
in
mov
arpl
out
nop
cmpsb
pop
mov
cmc
in
cwtl
mov
sub
push
push
jl
pop
scas
jle
jl
push
int3
pushf
pop
js
or
aam
or
hlt
out
cmp
inc
sbb
jbe
mov
or
xor
ret
aad
sahf
movsl
cmp
repnz
in
cmp
ss
incl
fmull
daa
mov
adc
lods
mov
into
and
ror
loop
inc
scas
adc
jmp
mov
xchg
mov
jg
mov
jecxz
sti
push
out
sub
subb
pop
call
xchg
outsl
mull
jecxz
cmp
movsb
in
enter
and
mov
xchg
jne
or
pushl
xchg
movsb
test
and
dec
std
arpl
aaa
popa
inc
push
or
ljmp
cld
mov
cmp
mov
cmc
outsb
dec
into
lret
daa
dec
lret
leave
jmp
repz
inc
es
or
fmul
add
adc
push
xor
and
lcall
mov
scas
push
ljmp
xor
push
sar
call
dec
pop
fcompl
sbb
popf
dec
xor
dec
push
mov
mov
ret
lock
adc
scas
sbb
loop
dec
push
ds
dec
xor
xchg
lea
pop
jmp
dec
mov
xchg
xor
xchg
jmp
adc
ljmp
lret
cmp
negb
mul
faddp
das
repnz
aaa
test
pop
xor
ljmp
sub
or
pusha
adc
pop
repnz
pop
jno
push
lea
mov
mov
push
movsb
decb
repz
push
ss
inc
movsb
xchg
mov
shll
orl
xchg
dec
pop
jg
jg
inc
xchg
mov
call
pop
push
push
mov
jno
push
out
xor
cli
adc
push
jne
cmp
mov
mov
mov
ljmp
push
xchg
pop
jmp
xor
or
fdivrl
pop
pop
movsl
xor
add
test
mov
fisubrs
lods
sub
xchg
pusha
insb
pop
das
fcmovnu
ljmp
fs
test
ljmp
in
jb
faddp
sub
lods
movsb
mov
mov
arpl
iret
popf
push
movl
ljmp
jl
fs
dec
or
inc
out
dec
push
fdiv
xchg
jno
cmp
call
inc
pop
fiaddl
cwtl
jae
sub
jp
arpl
hlt
add
and
xchg
subb
sbb
mov
adc
enter
jmp
jmp
pusha
sbb
fdiv
bound
lcall
mov
aaa
sbb
lds
popf
or
dec
xorb
in
cmp
xchg
mov
pop
lcall
out
addr16
imul
outsl
dec
xchg
jno
mov
pop
fucom
push
jecxz
or
mov
lret
leave
mov
stc
scas
dec
test
cmp
test
decl
pop
adc
cmp
test
repz
cmpsb
xor
sub
arpl
lods
cmp
xor
jp
mov
mov
sbb
imul
dec
mov
inc
mov
rclb
xchg
dec
xor
call
test
int
bound
adc
loopne
in
xor
push
or
clc
lcall
adc
in
stc
mov
xor
pop
leave
push
sub
mov
and
ljmp
jecxz
dec
aam
sub
or
push
jmp
cmc
int
xchg
jecxz
jns
adc
pop
in
pushl
xchg
mov
xor
jmp
sbb
mov
dec
xor
push
or
mov
cmc
and
add
aad
popa
mov
push
movsl
je
fidivrl
mov
mov
lcall
inc
scas
fldcw
lds
inc
dec
movsl
ret
xor
jmp
or
jmp
int3
loop
push
push
pop
mov
xchg
jmp
loope
fs
dec
xchg
roll
push
add
pop
scas
adc
lcall
mov
mov
sub
std
pextrw
adc
fidivrs
xchg
mov
dec
nop
sbb
inc
pusha
divl
mov
stos
icebp
call
xor
push
mov
insl
and
dec
loope
movsb
add
pop
ret
pop
pushf
xor
fbld
dec
dec
insb
rorl
movsl
sbb
mov
out
in
push
std
jmp
imul
lods
xchg
dec
fcmovne
cli
jl
inc
mov
jp,pn
mov
and
push
mov
cmp
lock
dec
mov
jmp
cmpsl
push
cmp
adc
bound
pop
sti
cld
and
lret
addr16
jp
outsl
adc
jmp
pop
fdiv
roll
ja
int
sbb
ja
popf
push
jnp
mov
xor
in
decl
or
mov
div
mov
jmp
js
in
lcall
dec
cli
jge
test
cmp
mov
or
je
dec
jle
xchg
call
cmpsl
pushf
bound
fcmovnbe
outsl
iret
inc
out
cmp
ffreep
lock
movsb
jle
jne
orb
mov
loop
es
fstps
pop
jb
push
call
and
sbb
rcll
dec
push
jg
pusha
pushf
inc
lock
stos
test
pushl
sbb
jmp
jno
popf
jge
shll
sahf
roll
add
outsb
jnp
jmp
jg
adc
lds
loop
xchg
shlb
push
std
lret
jg
call
cmp
shlb
xchg
or
aas
dec
jae
push
mov
fs
pop
jns
call
xchg
test
gs
popa
inc
jmp
cmpl
lahf
and
push
int3
sub
xchg
rcrl
cmpsb
ds
xchg
fdivr
jg
pushf
mov
sub
fstl
sbb
ficoml
in
dec
cwtl
cmp
push
or
add
lods
js
mov
in
inc
pop
jmp
push
adc
lods
push
sar
decl
xor
sbb
dec
jno
push
cmp
test
xchg
push
mov
mov
adc
xchg
pusha
xchg
mov
std
jg
iret
push
add
xor
mov
push
jg
addb
lret
xor
loopne
dec
jle
pop
adc
cwtl
jmp
dec
push
out
sbb
mov
mov
inc
fiaddl
jg
ljmp
ss
push
and
jne
out
cmp
jp
movsb
pushf
sub
rcr
push
inc
jmp
rcrl
call
pop
cmp
std
pusha
pop
adc
cmp
cs
into
int
mov
lcall
vpinsrw
push
jmp
add
mov
lds
ja
test
add
pop
mov
fcomip
inc
mov
inc
inc
mov
mov
loope
add
dec
sub
push
hlt
and
lret
jnp
add
sbb
ljmp
enter
leave
test
icebp
arpl
or
xor
lea
and
ljmp
gs
mov
lahf
add
adc
sub
cmp
mov
push
mov
sar
decl
adc
mov
pop
xchg
xor
scas
addr16
int
lahf
aad
inc
adcl
jl
cmp
gs
mov
pop
stos
add
xchg
jmp
xor
call
or
scas
mov
imul
outsl
ljmp
in
les
adc
push
out
mov
arpl
dec
das
sub
iret
inc
xchg
pop
jo
sbb
jo
inc
pusha
mov
fdiv
fwait
or
add
es
pop
test
decl
fs
push
jg
add
adc
cmp
int
adc
dec
decl
sbb
lcall
sbb
mov
xchg
push
xchg
cmp
jb
mov
popf
aam
ljmp
dec
mov
push
sub
inc
icebp
add
dec
addb
push
inc
in
pop
cmpsb
cli
call
xchg
pop
sub
xchg
ljmp
mov
dec
dec
dec
pop
jns
enter
clc
outsb
sbb
inc
ljmp
lcall
and
movb
rcll
gs
ftst
adcb
and
jmp
lcall
adc
dec
les
fstps
lret
stos
mov
das
stos
getsec
jb
call
inc
aad
pop
idivb
ljmp
dec
jnp
test
cwtl
push
incl
jnp
shlb
fildl
adc
cltd
arpl
popa
stos
jmp
jle
inc
sbb
mov
mov
fidivs
aam
mov
test
gs
cmp
cld
fwait
les
mov
mov
push
sti
cs
repnz
repz
pop
pop
ljmp
ljmp
push
and
mov
mov
lahf
sub
xchg
or
cli
adc
xor
call
mov
xchg
outsb
scas
hlt
faddl
xor
cwtl
cmp
cmc
mov
not
push
or
rorl
insl
jnp
das
in
mov
gs
inc
pop
pop
adc
shr
repz
sti
cmpsl
inc
cli
incl
inc
mov
das
sbb
jmp
or
ljmp
repz
ljmp
clc
xor
lods
cwtl
push
in
inc
jbe
sbb
push
imul
mull
push
cmp
imul
push
ds
or
mov
ljmp
cld
lahf
xchg
xchg
lcall
test
mov
push
scas
divb
imul
aas
inc
adc
in
loop
adc
test
ret
hlt
adc
dec
mov
ljmp
dec
inc
xchg
stos
sbbl
insl
das
add
pop
pushf
inc
xlat
dec
addr16
fcompl
inc
push
and
sub
dec
fs
incl
cmc
jmp
test
push
sub
pop
xor
stos
repnz
mov
pushl
sub
mov
push
push
fwait
leave
or
push
ss
repnz
lret
jmp
mov
pop
mov
mov
pop
imul
and
scas
addb
xor
inc
shrb
xor
inc
jae
mov
ja
xchg
jge
add
jmp
sbb
and
push
push
sbb
into
pop
insb
mov
adc
call
inc
or
out
sub
push
jecxz
sub
cmc
xchg
or
ljmp
ljmp
dec
std
sbb
add
mov
mov
xor
pop
inc
push
pushl
cltd
loopne
jecxz
sub
sbb
pop
inc
out
push
cmp
lcall
dec
sub
add
xchg
mov
test
mov
bswap
lods
push
mov
or
mov
jmp
mov
mov
mov
push
adc
jo
aas
jg
cmp
inc
nop
imul
decl
in
je
lods
sub
out
xor
mov
push
imull
push
sbb
in
adc
outsl
test
outsl
xor
jmp
aas
pusha
cmp
into
mov
lea
test
in
xchg
xor
jle
dec
or
clc
push
sahf
andl
xchg
pop
or
pushf
inc
jo
xchg
mov
add
cld
lret
inc
lcall
mov
jb
xchg
push
mov
rclb
pushf
imul
ljmp
push
test
inc
iret
and
and
test
in
movsl
jp
dec
cmp
lcall
xor
lret
popf
pop
or
add
xchg
decl
push
xchg
lods
loopne
inc
mov
test
jmp
or
stos
cmpsl
xlat
pushf
jbe
testl
call
ljmp
xor
sti
dec
sbb
sahf
sarl
xor
pop
mov
call
push
into
in
cmp
xchg
sbb
or
std
xor
sbb
lret
mov
mov
pushl
cmp
fldcw
pop
add
pop
xor
xor
dec
inc
push
xchg
jmp
insb
scas
icebp
or
mov
add
adc
cmc
xchg
pusha
fists
decl
dec
stos
add
mov
dec
dec
and
jmp
sbb
jmp
clc
insl
xor
stos
jne
mov
xchg
push
sbb
fcomip
cmp
xlat
ds
jb
push
mov
mov
cmp
jbe
jno
lahf
jg
adc
in
xor
testb
sbb
cmp
xor
mov
test
pushf
and
call
pop
lret
sahf
fadds
outsb
push
inc
in
roll
pop
and
incl
pop
cmp
sub
and
int
lcall
enter
jecxz
decb
mov
pop
cmp
lds
cmp
jnp
sub
push
into
cmc
push
jg
add
out
cmp
jnp
dec
jle
sub
arpl
decl
push
paddsb
arpl
mov
adc
cltd
sahf
mov
iret
pop
inc
push
sbb
gs
dec
sub
inc
xchg
in
xor
pop
inc
pinsrw
pop
sbb
dec
push
mov
xor
mov
ljmp
xor
inc
mov
sahf
roll
pop
out
jns
mov
loopne,pt
sbb
cmp
mov
push
pop
push
adc
je
xchg
jg
push
fbld
cmp
adc
xor
shl
dec
int3
cmp
ljmp
mov
mov
ret
je
sahf
sbb
ja
decl
les
pop
in
add
ljmp
mov
incl
call
jecxz
cld
ds
divb
out
mov
scas
loopne
movsl
or
repz
and
pushl
cld
loope
in
in
lcall
jb
mov
clc
adc
outsl
movb
cli
clc
ds
adc
popa
mov
je
nop
push
push
push
adc
inc
sbb
jg
adc
and
push
and
lret
lcall
sbb
sub
adc
gs
or
or
out
push
shlb
inc
sti
inc
xorb
fsubs
loop
sbb
test
pop
gs
into
enter
xchg
incl
cmpsb
dec
das
xchg
cmp
bound
cmpsl
pushl
rcrb
jl
mov
int3
or
mov
add
in
decl
cmpsl
rcl
push
jmp
mov
test
cmp
in
and
mov
lcall
rcrb
icebp
pusha
mov
mov
test
rolb
ljmp
cmp
push
test
test
cmp
scas
mov
cmp
add
in
cmpsl
sbbb
pop
mov
and
divb
nop
dec
mov
push
orb
pop
fwait
mov
pop
or
cld
sbb
and
call
testl
ds
leave
cltd
cld
dec
push
roll
fildll
mov
jge
call
mov
xor
cmp
or
sub
jnp
cmp
mov
call
mov
cmp
inc
mov
adc
mov
testl
inc
adc
jbe
pushl
mov
clc
sbb
jmp
mov
rorl
sarb
push
mov
jg
lds
insb
mov
js
shlb
ds
and
scas
lods
rcrb
and
fcomip
lret
and
pop
inc
jo
cltd
adc
mov
movsb
sbb
repz
jmp
ljmp
stc
stos
adc
in
jbe
jns
pop
add
dec
das
stos
fwait
add
loop
cmp
call
push
in
mov
das
gs
jle
loop
xchg
pop
mov
add
mov
add
fisubrl
cs
inc
pop
clc
push
cmpsb
scas
sub
mov
add
push
push
sbb
jecxz
leave
mov
dec
xchg
shlb
mov
push
adc
test
aaa
cmp
cmp
pushl
cld
flds
pop
iret
pop
push
lods
ss
popf
push
mov
fcomp
push
inc
push
movsb
jmp
inc
pop
xor
nop
jl
pop
jo
inc
testb
mov
adc
lods
ljmp
xchg
lret
in
lock
iret
xor
xorl
lods
inc
nop
testl
fsubp
jl
cmp
jns
or
addr16
xor
jo
xchg
xchg
pop
insb
cmp
fcomps
call
pusha
scas
mov
push
mov
popf
cmp
mov
and
cmp
xchg
pop
stc
ja
cmp
jmp
shll
out
es
flds
mov
idiv
mov
push
inc
adc
pop
dec
adc
mov
into
test
xchg
pop
call
cs
cwtl
mov
lock
lea
jnp
call
push
out
adc
cmc
add
cmp
pop
gs
daa
push
enter
jg
inc
jle
push
mov
clc
vpaddsw
push
xchg
stos
loop
scas
shl
fwait
loopne
mov
lea
decl
loop
sbb
mov
or
repz
outsb
imul
cmp
rcrl
dec
lods
xchg
fiaddl
call
ljmp
scas
aaa
jno
cld
pop
jl
xchg
ret
inc
dec
push
cmp
sbb
incl
enter
icebp
in
sbb
cmpsb
js
pop
inc
std
cmp
aam
and
pop
dec
insb
sub
aaa
std
pop
lock
scas
shll
dec
test
test
adc
mov
ljmp
test
sub
mov
mov
enter
clc
mov
es
fsub
sahf
lret
inc
lock
int
scas
or
xchg
mov
test
cmp
jge
ds
jbe
jae
xchg
out
push
nop
bound
lret
jecxz
inc
mov
fadds
sub
xchg
jno
int
mov
mov
add
ljmp
aam
and
jge
add
push
scas
mov
dec
icebp
ja,pn
push
add
ds
call
insb
inc
addr16
pop
xchg
inc
ljmp
adc
jns
sahf
mov
xlat
jg
call
fistpl
or
push
hlt
arpl
ficompl
ror
lock
lcall
lcall
out
mov
repz
fucomip
insl
pop
fldcw
pop
sarl
push
mov
bound
fists
sbb
mov
mov
sbb
or
dec
mov
mov
cmp
fbld
fmuls
and
mov
lret
test
sbb
dec
das
cli
inc
outsl
cs
rcrl
bound
fldz
incb
aaa
push
xor
ljmp
and
imul
push
xor
jl
iret
cmp
xchg
mov
in
mov
cmp
js
dec
adc
stc
push
idiv
jmp
jl
push
pop
lods
adc
daa
add
mov
sbb
xor
add
or
lcall
add
adc
outsb
jle
dec
movsb
enter
dec
call
jle
sub
outsb
xlat
adc
es
sub
inc
testb
jo
cmpsb
rcrl
inc
sar
decl
jns
aam
add
arpl
push
sbb
mov
and
lcall
sub
std
stc
mov
fstps
add
pop
ja
or
push
pop
xlat
addl
incl
and
popa
mov
xchg
push
or
xor
inc
lock
mov
stc
or
movsl
cmp
loop
inc
xchg
sbb
and
movsb
fstpl
adcl
les
decl
xor
xchg
jo
mov
and
stc
clc
cltd
inc
cmp
inc
lcall
pop
push
xchg
call
loope
mov
jle
js
mov
xchg
pushf
inc
ja
pop
movsl
jecxz
rorb
stc
mov
lea
fwait
fwait
lahf
mov
js
lods
pop
jl
scas
mov
incb
incl
repnz
das
or
enter
test
stos
leave
insb
and
cmp
pop
push
lock
jp
adc
jg
cmp
xor
sbb
mov
outsb
cmp
inc
and
sbb
stos
in
int3
inc
xlat
aad
ljmp
push
push
jnp
aaa
iret
jmp
and
bound
and
sbb
adc
out
inc
push
ljmp
xlat
jne
loope
fistl
fldl
imul
adc
push
loope
decl
push
sub
orl
dec
stos
arpl
repnz
xor
lock
lock
jnp
movsl
and
jl
out
dec
pop
aaa
lcall
decl
and
daa
fbld
sbb
testl
jg
pop
mov
dec
adc
fidivl
adcl
subb
aad
mov
out
mov
cmp
decb
or
xor
sub
mov
stos
popf
insb
loopne
repnz
mov
popf
pushf
cs
add
jno
in
xor
mov
mov
lea
fnsave
cmp
cs
das
dec
mov
call
fldt
xchg
lds
adc
push
in
loopne
pushf
mov
ljmp
jmp
jns
or
out
jg
shlb
add
jno
inc
push
int3
adc
cmp
loope
test
dec
mov
movsl
inc
fdivrl
jno
mov
jle
add
and
ja
insb
push
mov
test
call
push
stos
mov
adc
clc
xorb
xlat
sub
es
mov
dec
pop
loopne
incl
scas
int
inc
ss
fcmovnb
mov
aaa
mov
and
call
cmp
mov
xchg
cmc
dec
inc
mov
add
in
out
adc
scas
loop
mov
pushl
mov
mov
pop
shufps
int
push
jne
sbb
arpl
fidivl
dec
sahf
popa
inc
rolb
les
or
mov
pushf
daa
pop
data16
call
insl
xlat
scas
xchg
mov
inc
dec
lret
xchg
faddl
lods
fsub
or
imul
dec
jmp
outsl
dec
pushf
movsl
sbbl
cmp
fnsave
push
pop
push
sub
mov
call
jo
cwtl
add
push
ds
mov
sub
add
in
jg
fcomip
xor
lahf
iret
push
xchg
jne
mov
fnsetpm(287
push
cld
xlat
out
adc
xor
pushl
test
pop
add
mov
pop
jle
adc
adc
stos
dec
xchg
nop
call
mov
testl
push
or
fwait
mull
aad
aad
fmul
lea
jg
les
lods
add
adc
out
push
adc
push
sbb
ds
push
in
adc
mov
pop
pop
mov
dec
cmc
mov
pop
std
mov
daa
insb
pop
es
decl
test
sbb
adc
ljmp
xchg
in
iret
pop
xorl
jge
push
pop
cld
jmp
inc
inc
movsb
dec
mov
push
ljmp
inc
mov
dec
adc
and
fistps
ds
adc
sarb
mov
mov
xchg
test
fmull
jno
jnp
pop
fsubl
jg
xlat
pop
loop
mov
xor
pop
subl
cmpsb
fsub
outsl
cmc
lret
lcall
push
xchg
adc
sub
mov
decl
xor
lret
dec
sbb
cmp
pop
mov
ljmp
xchg
push
in
ss
mov
int
inc
dec
in
lahf
rorb
mov
fsts
popa
lea
mov
cmp
nop
mov
ds
pop
mov
jp
stos
lcall
push
jnp
inc
xchg
mov
fcmovnb
or
insb
fnstsw
je
adc
pop
and
inc
dec
adcb
mov
lock
mov
fwait
insb
js
mov
lretw
pop
jmp
mov
jmp
clc
and
gs
into
mov
push
icebp
jmp
incl
push
or
ja
dec
clc
scas
cmp
psrlw
cmc
fcomip
incl
inc
pop
cmp
add
xchg
jae
rorb
pushf
sub
cs
pusha
out
and
stc
adc
sbb
push
adc
jg
inc
cltd
rcrb
adc
xchg
pop
mov
add
outsl
clc
mov
push
popf
sub
push
jae
xchg
movsl
mov
dec
ljmp
inc
push
mov
xchg
lret
fistpll
ds
or
cld
rcrl
fisttpll
lock
xchg
inc
insl
mov
sbb
wrmsr
mov
imul
or
xchg
pushl
xor
das
adc
pushf
aas
pop
into
loopne
sbb
dec
sbb
push
push
hlt
pushl
mov
add
xchg
roll
push
pusha
addr16
lret
test
ja
lcall
repnz
call
imul
imul
add
sub
jo
jge
jg
xlat
call
or
push
cmp
repnz
push
repnz
in
mov
mov
cs
pop
xor
add
fs
ljmp
xchg
fisttpl
push
push
sbb
movsb
cvttps2pi
mov
mov
sbb
fstpl
stos
dec
clc
lcall
fisttpl
pop
sbb
sahf
call
push
fidivs
sahf
loope
pop
loopne
das
ljmp
stos
stos
lcall
add
outsb
dec
lcall
in
jnp
jmp
outsl
scas
pop
sar
daa
inc
test
aad
adc
fdiv
pusha
push
mov
movsl
faddl
and
inc
outsl
pushl
std
dec
ss
pop
cmp
test
jne
outsb
ret
icebp
movsl
xorl
lcall
xchg
push
out
sub
imull
dec
notl
pop
nop
loope
nop
sbb
xor
int
pop
cld
out
mov
into
mov
adc
in
push
clc
repnz
rcl
pop
add
clc
dec
pop
cs
xor
mov
push
hlt
lea
ljmp
xchg
xchg
arpl
push
mov
mov
push
inc
inc
jl
ja
xor
sbb
add
out
inc
insb
nop
add
stc
mov
jl
fldcw
std
mov
or
dec
jecxz
push
int
aas
inc
jg
cmp
lods
xchg
rcrl
jle
data16
mov
xor
fld1
js
jnp
mov
imull
in
repz
jmp
dec
fimull
leave
clc
das
mov
bound
lea
shrl
jle
incl
ljmp
xor
leave
divb
push
int3
das
and
pushf
test
fcmovb
loopne
mov
movsb
jg
jle
pop
notl
mov
cld
int3
insb
fstps
cmp
dec
incl
stos
test
xchg
imul
cmp
imul
jg
call
sub
push
gs
lods
insl
ja
add
xor
int
add
xor
mov
loopne
jmp
inc
test
adc
mov
std
out
jb
dec
inc
in
in
inc
ret
mov
push
sub
add
push
in
pushf
sub
cmc
mov
mov
mov
mov
stos
jno
nop
cwtl
mov
pop
adc
nop
mov
lds
push
mov
jmp
adc
mov
add
pop
pop
mov
and
ret
inc
jp
sub
stos
js
repz
loopne
inc
lods
jnp
pushl
push
cmp
pop
add
sub
adc
inc
mov
stos
enter
decl
sub
sub
movsl
and
aam
sub
mov
pushf
dec
pop
dec
arpl
sti
mov
test
push
dec
adc
insb
cmp
or
mov
mov
aaa
xor
add
mov
out
nop
mov
mov
call
fiadds
pop
inc
jns
fidivrl
rcrl
pop
mov
xor
jbe
lcall
bound
pop
add
adc
sbb
rorb
mov
decl
bound
adc
pop
scas
mov
call
inc
nop
push
stos
adc
or
push
ljmp
sar
mov
pop
loop
movsb
cli
jge
sbb
into
mov
lcall
xor
mov
add
fimull
arpl
jge
sub
push
lret
mov
cmp
ljmp
subl
addr16
push
ret
sti
pusha
push
or
xor
mov
jbe
fwait
mov
inc
aas
cmpsb
mov
ljmp
cli
movl
mov
dec
or
shlb
cs
stc
in
decl
lcall
pop
sbb
sub
mov
shrl
in
mov
mov
loopne
xor
sub
push
xor
pop
push
sub
push
aam
add
addr16
mov
pop
leave
pop
lods
loopne
ljmp
cmp
ljmp
pushf
mov
inc
cmp
lcall
pusha
dec
or
mov
dec
mov
outsb
test
lcall
popf
fnstcw
cwtl
adc
lea
fs
cmpsl
aam
inc
sbb
ljmp
mov
jp
adc
dec
mov
add
mov
push
ljmp
push
and
mov
xchg
cli
stos
scas
sarb
mov
add
adc
out
fdivrp
mov
sub
dec
jbe
and
js
pushl
aam
inc
inc
xchg
mov
test
cmp
addr16
push
fadds
mov
xchg
fildl
jo
sbb
cs
mov
mov
icebp
pop
xor
jmp
mov
imul
mov
outsl
jmp
xchg
sub
clc
xor
fs
fs
mov
push
dec
pop
les
fnsave
scas
sbb
std
out
jbe
and
mov
lret
pop
inc
arpl
jge
xor
cmp
incl
jmp
aas
inc
incl
fdivl
test
xchg
push
imul
xor
movsl
adc
xor
in
pop
sbb
repz
cltd
mov
lahf
rorb
jmp
in
cli
xchg
jp
mov
cmp
fists
jg
or
or
roll
cli
and
mov
stc
fdivrl
adc
in
or
mov
jg
inc
sub
jo
add
mov
pop
popa
ljmp
sti
inc
push
jae
fwait
xchg
cltd
mov
test
les
call
push
mov
repnz
jge
lock
mov
enter
ret
pop
or
push
loope
inc
lahf
sub
js
jecxz
fists
cmp
into
push
cld
sti
rcrl
ret
cltd
mov
decl
dec
cmp
hlt
or
enter
inc
jb
dec
mov
sub
popa
mov
and
loop
push
inc
cli
adc
sub
outsl
cmpl
xchg
adc
lock
jg
lahf
cmp
mov
ret
sbbl
sub
pushl
dec
dec
scas
testl
test
jg
pop
xchg
jge
jg
aam
out
add
or
movb
popa
fwait
data16
rol
mov
mov
sub
and
xchg
idivb
cmpsb
loopne
cld
movsl
pop
adc
das
dec
jp
jge
je
mov
or
rclb
pop
or
aas
into
and
sahf
push
rorb
dec
je
dec
divb
and
leave
mov
mov
cmc
daa
lcall
pushf
lods
out
mov
mov
lods
cld
adcl
popa
lods
dec
aaa
icebp
gs
push
std
mov
test
les
sub
fnstsw
test
push
xchg
ret
mov
pushl
scas
nop
xor
mov
push
sbb
mov
fildl
lds
call
or
shrl
xchg
stc
mov
xor
roll
test
pop
push
test
pop
in
fsubrl
roll
in
adc
add
pop
xchg
mov
xor
fistps
sbb
ja
adc
sub
fisttps
loop
cmc
shrl
addr16
cmp
and
add
pop
jmp
into
adc
ret
in
lods
repnz
sub
push
mov
out
dec
gs
sub
mov
incl
es
adc
dec
jle
mov
in
aaa
popf
mov
nop
jg
jecxz
daa
in
mov
imul
cwtl
sub
pop
fwait
mov
scas
jnp
popa
mov
cmp
push
jo
lcall
lahf
push
scas
cmp
xor
mov
pushl
jo
mov
mov
repz
out
jb
mov
mov
mov
call
push
dec
cmc
xor
sbb
adc
or
test
bound
mov
lods
push
mov
sbb
inc
out
sub
fstpl
in
mov
rcrb
sbb
xchg
lret
sarb
mov
incl
or
fldl
mov
les
shrl
mov
scas
and
inc
decl
lock
pop
je
and
sbb
adc
sti
cmc
sbb
sub
aas
mov
stc
pop
loope
push
std
stc
pop
out
pop
mov
sbbb
dec
mov
xchg
incl
xor
jo
jbe
les
mov
stos
push
ljmp
int
jmp
aaa
push
lods
sti
in
jo
add
mov
shll
fsubrl
loop
inc
pop
jae
inc
aad
les
lods
sub
mov
xor
or
jmp
fistps
orl
stos
pop
pop
xchg
mov
adc
push
dec
inc
ja
push
nop/reserved
sbb
or
ljmp
mov
clc
xor
sub
ljmp
nop
negl
and
xor
pop
cltd
call
jmp
gs
xor
jmp
xor
mov
out
xchg
scas
nop
push
roll
sar
decl
nop
notb
and
pop
jmp
arpl
adc
mov
shrb
add
mov
cmp
cmp
aaa
inc
cld
aaa
ja
lret
add
idiv
in
cltd
cmovl
loopne
arpl
test
clc
jb
adc
das
push
and
das
xchg
or
in
and
pop
std
lcall
pop
popf
rcr
dec
jb
inc
inc
mov
xorb
test
ljmp
cwtl
jnp
fwait
adc
inc
popa
lret
sti
sub
in
pop
cmp
xor
outsb
cmp
jmp
xchg
mov
cwtl
add
ja
mov
movups
mov
xlat
in
lret
jno
cmp
xchg
aad
out
push
enter
adc
cld
insb
in
scas
test
adc
mov
jle
cmp
decl
cli
xor
pushf
lds
push
cmp
dec
fs
fsubs
ds
loopne
pop
cld
ljmp
pop
sub
add
xchg
mov
cmc
pop
and
or
pop
fdivrs
mov
and
sahf
call
das
pop
pop
scas
xchg
mov
sbb
in
lret
push
inc
sbb
sub
fs
call
test
xor
xor
add
lcall
push
aam
xchg
adc
call
or
repnz
clc
into
mov
jno
incl
test
mov
scas
mov
push
out
cmp
loop
push
call
mov
sub
aam
in
cmp
and
sbb
push
test
data16
mov
pop
cld
jmp
cmp
aas
lock
fdiv
fsubrs
mov
or
repz
inc
or
incl
and
divb
ja
cwtl
xlat
sbb
lock
or
pop
fdivl
jmp
fmul
inc
outsl
dec
adc
cmpsl
lcall
push
push
push
sub
adc
pop
inc
jno
ljmp
into
push
scas
das
lret
das
mov
mov
loopne
jle
enter
repz
icebp
xchg
imul
inc
nop
stos
push
out
hlt
mov
jge
arpl
ljmp
jg
sub
out
sub
daa
pop
pop
jle
loop
jb
push
add
mulb
pop
sbb
cwtl
or
push
or
ss
inc
xchg
cmc
icebp
in
incl
les
fdivs
xchg
std
inc
jl
call
daa
dec
sub
or
sti
xor
adcl
ja
jecxz
sbb
adc
ljmp
adc
lds
jb
cmpsl
stos
lret
adc
je
push
movsl
call
fsubs
stc
pop
push
inc
inc
cli
xor
add
rolb
fadd
scas
mov
push
andb
call
repnz
stos
aad
and
push
bound
mov
sub
mov
jg
mov
mov
shr
adc
outsl
pop
add
shll
movsb
imul
sti
add
ret
inc
inc
outsl
in
inc
test
movsb
jnp
dec
insb
ljmp
sar
aas
mov
lock
dec
js
je
adc
adc
mov
jl
sbb
stos
dec
xchg
loope
in
in
push
sbb
out
dec
jbe
nop
jg
ret
pushl
push
movb
inc
cwtl
xor
pop
jge
mov
roll
into
cmp
xchg
inc
mov
mov
cli
dec
mov
das
adc
jno
cmpsl
out
mov
in
and
call
scas
jge
sbb
addr16
or
clc
dec
pop
xchg
add
push
sbb
xor
xchg
aad
mov
sbb
fiaddl
out
daa
sbb
decl
jmp
add
dec
aad
insb
out
xor
xor
and
xchg
mov
inc
call
arpl
les
and
jge
je
dec
dec
add
jns
dec
call
jg
push
cmc
push
sbb
outsl
icebp
push
push
in
cltd
cltd
outsb
jb
xchg
outsb
mov
clc
outsb
inc
rcr
lea
int
test
sub
mov
and
jecxz
or
or
mov
outsl
cmpsb
lret
xor
lret
xchg
out
out
sbb
pop
mov
inc
and
pushl
imul
aas
lahf
mov
cwtl
movsb
dec
xchg
and
sahf
dec
ficomps
pop
push
sub
call
pushf
and
and
jae
bound
adc
xor
and
ljmp
test
scas
push
inc
sub
stos
mov
inc
dec
hlt
pop
sbb
aas
add
push
fildll
xor
push
cmp
jge
into
sub
pop
shll
mov
sti
decl
out
jae
add
popf
aas
and
test
es
fldcw
bound
loopne
jmp
adc
xor
sbb
cmp
pop
fwait
scas
je
call
insb
adc
popa
add
pop
mov
sub
sub
aad
dec
shll
fwait
dec
jne
xchg
icebp
lcall
push
jmp
cli
cs
sub
pop
mov
enter
adc
jno
lcall
pop
nop
decb
insl
les
lcall
dec
mov
dec
or
lret
out
mov
push
testl
mov
int3
xchg
cmp
lock
sahf
inc
into
mov
in
mov
cmpl
shlb
or
mov
daa
je
pop
aad
push
xlat
mov
and
std
and
jne
rcl
and
fsubr
popa
fs
pushl
lret
pop
pop
sub
popa
insl
and
das
stc
into
in
jae
xchg
xchg
lock
test
jno
sar
decl
jecxz
push
imul
push
sub
out
mov
pushf
ljmp
mov
sub
je
or
dec
xor
jb
fcomip
decl
ret
rol
push
aad
xor
aam
ljmp
sbb
pushl
insl
sbb
nop
in
stc
lods
dec
and
ja
pushf
mov
xchg
inc
lcall
jmp
and
mov
icebp
adc
faddl
add
inc
shrb
jg
add
jmp
inc
mov
enter
xor
mov
sub
ds
adc
xor
mov
lcall
insl
mov
dec
mov
xchg
lods
sub
out
cs
js
data16
dec
dec
pop
mov
xchg
lds
push
test
sub
in
xchg
aam
xchg
jg
call
sbb
ud1
xchg
lds
sub
add
cmp
pop
mov
xchg
xor
sub
pop
insl
pushl
mov
lahf
push
fs
std
push
popf
test
hlt
sub
insl
mov
dec
xor
arpl
js
push
sub
cli
loopne
daa
aam
and
inc
sub
cmp
decb
ffreep
cmpsl
cmp
loope
sub
hlt
fidivl
loop
in
pop
push
bswap
inc
popf
mov
js
sub
hlt
shrb
pop
arpl
test
les
mov
and
aam
int
pop
rclb
jns
popa
xchg
adc
push
outsb
rcll
cmp
fisttps
push
loopne
xorl
loope
xchg
push
add
movsl
outsb
dec
cltd
out
xchg
dec
or
or
push
stc
pop
rolb
popa
addb
lds
sbb
lcall
jmp
mov
stc
and
les
leave
pushf
adc
sbb
in
pop
hlt
ljmp
sub
push
lret
stc
sbb
movsl
sbb
in
ljmp
dec
mov
push
stos
fists
xchg
xor
call
test
jmp
shll
xchg
gs
pop
inc
scas
cli
mov
adc
jns
jae
or
decl
adc
and
push
int
xor
add
lods
lods
ret
sahf
fistpl
ret
es
xor
jb
sbb
lcall
sbb
gs
push
mov
jecxz
push
mov
out
jl
mov
inc
sbb
repz
cli
mov
pop
push
sbb
xchg
dec
cmp
iret
ja
ljmp
leave
jle
xor
loope
in
pop
cmp
mov
xor
xchg
mov
jmp
imul
mov
scas
push
lret
bound
fistps
insl
dec
cld
jg
out
shl
sbb
cmp
incl
sub
orb
ss
mov
popf
mov
hlt
pop
dec
mov
decl
or
cli
loop
hlt
mov
orl
aam
sbb
and
out
outsb
aaa
fbld
mov
test
ja
jp
pop
mov
inc
adc
push
lds
mov
decl
mov
sub
test
or
pop
ret
fildl
inc
xchg
jno
jns
sar
pop
cld
jmp
adc
call
mov
ret
sub
mov
nop
negb
dec
loop
add
aaa
std
inc
sahf
push
pop
adc
ficompl
aam
xchg
es
or
jo
ljmp
aas
fs
fcmovb
and
xor
xchg
loope
and
outsb
lret
xchg
orb
jns
jae
pushf
xor
push
cmp
adc
mov
out
jno
inc
dec
loop
push
or
lds
test
cmpsb
mov
mov
adc
xor
or
sub
incl
mov
sahf
and
sbb
roll
lcall
pop
xchg
sbb
cli
test
jmp
mov
adc
lcall
xchg
lods
les
or
daa
mov
decl
fucomp
fs
je
push
push
mov
push
ret
mov
mov
jns
call
movsb
fsts
fnstcw
push
pushf
sbb
loop
or
lods
std
push
jge
inc
fsubp
inc
inc
loope
mov
xor
repz
mov
notl
pushf
pusha
nop
mov
decl
push
imul
cs
xchg
ss
mov
out
mov
das
fcoms
inc
sub
call
loop
jne
sahf
add
cli
aad
imull
add
aas
test
ret
cmp
pushl
cld
das
je
sub
lcall
shll
popa
mov
mov
call
adcb
pop
fdivp
lahf
sti
xchg
call
pop
out
out
cmpb
lock
mov
dec
iret
cmc
inc
into
mov
sub
pop
dec
imul
add
rorb
loopne
jmp
sbb
cmp
mov
mov
ret
clc
xchg
out
fdivl
stos
mov
gs
adc
sbb
mov
mov
or
int
mov
mul
add
call
loopne
push
and
xor
cmpsb
mov
inc
cmpsb
movsl
jecxz
stos
and
sbb
ljmp
fbstp
dec
scas
jns
mov
icebp
push
scas
test
into
push
sahf
inc
test
pushf
cmpsb
repnz
incl
cwtl
mov
gs
push
adc
pushf
shr
rcrb
aas
scas
sub
inc
mov
stos
xlat
incl
push
lds
dec
ds
loope
add
mov
bound
dec
xchg
mov
aaa
jno
push
adc
lcall
arpl
push
mov
and
loope
bnd
addr16
sub
adc
lret
mov
fsubr
jbe
jecxz
mov
mov
xchg
mov
call
push
pop
push
cmpsb
adc
imul
add
negl
decl
ret
pop
and
fs
decl
jp
popf
mov
xor
mov
dec
cmp
sbb
lods
mov
scas
clc
ds
lcall
iret
jmp
test
imul
mov
stos
test
insl
sbbb
push
arpl
ret
sbb
sbb
lock
pop
outsb
roll
cld
call
sbb
mov
xor
stos
int3
les
fdivr
fbstp
jb
xor
dec
mov
mov
sub
cmp
cli
inc
in
xchg
sbb
dec
in
ljmp
mov
xchg
lret
js
movzwl
xlat
repnz
maskmovq
testl
aad
sub
add
mov
xchg
xor
pop
loope
loopne,pn
push
pop
movsb
decl
movsb
arpl
push
sbb
or
adcb
mov
faddl
mov
das
pushl
jmp
mov
loope
inc
lahf
movsb
sub
adc
in
loop
push
xchg
pop
popf
jnp
into
ja
jmp
xor
ret
jge
inc
mov
fistpl
dec
inc
cmp
lcall
ds
cs
pop
cmp
pop
pop
shlw
xchg
pop
andb
dec
jb
inc
jb
test
test
pop
aaa
stos
add
xor
sub
mov
decl
xor
xlat
aaa
rcrl
dec
jno
mov
adc
dec
sti
addr16
ljmp
sbb
sub
test
xor
int
les
lcall
pushl
lods
jnp
and
cs
ror
popfw
add
add
frstor
test
jmp
dec
cld
push
xchg
lods
add
mov
clc
fidivs
mov
mov
test
iret
xchg
xchg
imul
inc
dec
cmpsl
adc
aas
or
incl
jecxz
les
mov
xor
fwait
push
cmpsb
in
sub
test
sbb
inc
addr16
test
pop
jp
decl
repnz
jno
das
pop
or
sub
idivl
mov
sbb
pop
repz
mov
in
or
jne
push
outsl
fs
stos
pop
jle
test
decb
dec
push
call
lret
insb
and
orb
cmp
rcll
mov
rcrl
xchg
incl
mov
pop
ljmp
enter
fcom
cmpsb
pop
and
aaa
cmp
xor
lcall
in
lods
in
repz
jmp
mov
enter
cmpsl
xchg
cmp
ljmp
fdiv
xchg
pop
push
pop
cmp
mov
lods
xchg
loopne
xor
movsb
clc
dec
imul
call
push
bound
jmp
mov
sub
movsl
jmp
cmp
cmc
push
mov
incl
loopne
mov
push
insb
xchg
repnz
lds
out
movl
xor
decl
icebp
rcrl
sbb
xchg
sub
mov
or
pop
cmp
push
rclb
xchg
imul
insl
pop
cmp
sbb
out
inc
push
inc
mov
lods
fdivs
mov
xor
test
sbb
sub
dec
mov
push
sbb
call
adcl
lods
add
mov
add
shll
bnd
adc
ret
into
dec
notb
jnp
std
sahf
inc
sbb
and
jl
add
test
imul
call
push
lahf
outsl
push
les
insl
mov
icebp
or
cmpsl
aam
mov
bnd
fidivs
mov
fidivrl
ret
mov
stos
lods
aas
in
fidivrs
sar
ret
daa
dec
mov
es
ja
stos
sbb
ret
sbb
xchg
lock
push
icebp
cmp
mov
ljmp
xor
fbld
xor
mull
adc
cld
aaa
fiaddl
or
pop
aas
push
jb
dec
pop
decl
dec
faddl
fildl
mov
out
mov
xchg
sbb
sub
ljmp
xor
out
mov
xchg
bound
out
clc
data16
dec
in
fstl
inc
ret
nop
inc
xor
mov
shll
adc
and
ret
adc
testb
jne
in
mov
pop
leave
xor
sub
mov
dec
jecxz
mov
ds
andb
lods
lahf
or
and
shrl
lcall
jmp
jb
xor
sbb
fwait
and
lods
je
sbb
test
imul
mov
push
aam
lcall
outsl
push
stc
add
push
and
mov
mov
cmc
lret
sbb
decl
jo
push
dec
sahf
dec
push
push
or
xchg
cmp
and
push
mov
fstps
daa
ljmp
xchg
jae
cmp
lock
xchg
insl
sub
out
pop
add
aam
or
pushl
fsts
fcompl
and
shlb
fwait
mov
inc
ret
sbb
mov
nop
fistps
xchg
pushf
test
push
call
into
in
or
ret
std
adc
rclb
mov
xchg
pusha
jg
iret
pop
mov
xlat
adc
jp
mov
pop
mov
fnstcw
arpl
mov
pushl
push
outsb
xlat
cmp
jnp
jg
std
and
dec
test
shlb
call
jo
xor
inc
ret
sub
aaa
jge
mov
mov
aam
out
and
lcall
jle
jbe
cmp
xchg
inc
ja
add
add
xchg
fidivrl
sbb
cmp
sub
rcrl
sbb
dec
mov
insb
cmp
fmulp
sub
into
xchg
cmp
pushl
xor
test
sbb
ds
mov
pop
out
inc
test
in
addr16
jmp
mov
fiadds
loop
adc
jg
xlat
stos
pop
insl
push
mov
jae
js
decl
sub
daa
call
shll
insl
loopne
push
repz
mov
loop
xor
in
xor
arpl
mov
test
into
lock
jbe
mov
cmp
movsb
stc
xor
stos
cltd
mov
insb
leave
push
and
jl
andb
jg
bound
stc
xchg
pop
mov
dec
in
pop
subb
in
jp
scas
push
in
ljmp
jl
scas
sbb
stos
xchg
icebp
std
enter
jecxz
mov
repz
js
inc
test
sbb
pop
les
inc
out
cmp
cld
and
mov
or
push
dec
bswap
stos
mov
push
or
cmp
inc
outsb
ret
imulb
decl
lcall
adc
dec
jnp
mov
pushf
sub
pop
inc
pop
fdivrs
movsb
sti
fbstp
inc
clc
pushl
ljmp
mov
cmp
repnz
sub
fdivrl
decl
out
sbb
inc
imul
mov
cmpsb
mov
fdivrl
pop
cwtl
lcall
ja
push
jl
imul
xchg
ja
mov
jg
cmpsb
out
mov
roll
test
ss
adc
divl
push
jge
mov
testb
cmp
call
mov
ror
and
test
add
bnd
pop
mov
jg
stc
inc
cmc
cli
int3
cwtl
mov
xor
mov
jb
and
pop
or
incl
cli
jg
les
inc
cli
add
pop
and
aad
popa
mov
dec
scas
cmp
movsb
loope
lcall
fwait
mov
stc
in
ficoms
pop
test
pop
movsl
mov
call
pop
cmc
lcall
xchg
add
mov
push
push
rcrl
and
xchg
or
mov
and
xchg
rcll
or
adc
sub
std
pop
sbb
incl
call
stos
fadd
and
dec
out
or
popl
ljmp
enter
xchg
xor
sarb
dec
mov
decl
insl
adc
jae
xor
aaa
aas
xchg
xor
fists
sti
aam
decl
jb
shll
jge
ds
bound
or
mov
sub
or
sahf
cmc
push
lcall
sbb
jmp
xchg
out
in
int
cmp
fmuls
test
xor
outsb
inc
push
inc
sub
aad
mov
xchg
mov
push
cmp
dec
paddsw
dec
mov
ljmp
imull
jmp
push
sbb
inc
pop
jmp
jns
loope
lea
mov
decl
xchg
add
inc
lea
icebp
ret
ds
xchg
pop
mov
gs
sub
jl
mov
inc
pop
dec
push
stos
add
sub
cmpsl
xchg
push
mov
in
sar
call
adc
jl
out
adc
cld
in
inc
insb
xor
stos
movl
sar
push
cmp
shrl
enter
aad
mov
inc
sbb
adc
xchg
xor
lock
outsb
out
stos
jno
add
dec
pop
repz
out
clc
jg
mov
jno
mov
rolb
inc
pop
push
push
jne
je
mov
jmp
mov
shlb
fnstenv
icebp
mov
pushf
add
aam
mov
mov
pop
sti
gs
xchg
jb
cmp
mov
ss
xlat
stos
int3
fdivs
shlb
call
out
inc
scas
and
push
mov
mov
jns
shlb
jmp
popf
mov
popf
xor
xchg
leave
inc
fcoms
enter
shrb
mov
sbb
push
call
cmpsb
icebp
mov
lret
addr16
faddp
icebp
lcall
jno
shr
out
setbe
in
mov
jae
stos
sub
jg
xor
fs
in
jne
jmp
mov
lcall
xor
faddp
bound
ja
cmp
out
mov
pop
fildll
pop
sbb
out
sub
sub
adc
dec
mov
inc
inc
arpl
mov
ret
or
and
lcall
fcmovu
pop
sbb
ds
inc
xor
cld
daa
imul
hlt
sbbb
pop
loopne
scas
insl
decb
into
jmp
pop
add
mov
mov
popa
lcall
fdiv
and
or
sbb
sbb
jle
mov
stos
icebp
fs
rcrl
lcall
adc
aam
ds
lds
lret
lret
sbb
clc
dec
dec
and
cmp
iret
jg
pop
std
cmp
into
xchg
subb
push
adc
add
mov
incl
pop
pop
dec
inc
cmpsb
cmp
data16
mov
in
daa
add
xor
popa
push
jp
push
ljmp
incl
adc
and
xor
sub
nop
sbbl
inc
xchg
mull
in
insb
push
jne
pop
xchg
pop
sub
ds
ljmp
xchg
out
mov
int
xlat
call
ljmp
pop
incl
ljmp
jecxz
js
push
mov
pushf
inc
in
cwtl
enter
lea
or
incl
push
jae
add
icebp
pop
pushf
cmp
aaa
push
imul
mov
cmp
pop
adcb
cmc
pop
jl
jae
clc
push
data16
loope
pop
shlb
jg
decl
mov
dec
cmp
pusha
outsb
insl
nop
aas
adc
jmp
loop
adc
aam
add
push
loop
cmp
mov
aam
loopne
call
push
add
call
or
sub
leave
push
imul
testl
call
int
jbe
pop
inc
loope
xchg
mov
cmc
pusha
dec
xchg
or
jmp
mov
aaa
dec
insb
call
scas
pop
xor
dec
inc
cmp
inc
cmp
mov
loope
add
xchg
sgdtl
pushl
icebp
aas
movsl
movsl
or
sbb
push
jl
jno
shlb
push
sbb
mov
cmp
mov
movsb
push
jno
mov
sbb
ja,pn
dec
fistl
or
arpl
mov
lret
pop
shlb
ja
lret
bound
cmp
jg
push
movsb
mov
inc
decb
sbb
jno
jno
pop
xor
xor
sbb
lcall
jns
inc
dec
adc
popa
mov
sti
fstpt
add
test
out
mulb
mov
push
ljmp
call
fidivl
je
or
push
addb
jo
jmp
out
rcl
mov
mov
jno
xchg
sbb
push
push
call
clc
daa
mov
cs
nop
jo
rcll
adc
add
lret
out
cmp
inc
pop
imul
lcall
test
jne
and
dec
mov
mov
or
pushf
fwait
stos
shlb
or
cmp
ss
xchg
xchg
ds
pushl
lods
aam
iret
xor
inc
dec
xchg
sub
xor
mov
jle
push
add
inc
stc
sub
js
sub
jns
pop
mov
xor
fmulp
movsl
jl
mov
jbe
testl
dec
push
push
das
xchg
cld
or
lahf
adc
mov
lds
mov
dec
xlat
stc
ja
arpl
and
mov
shlb
into
jne
mov
repnz
jge
cmp
push
inc
sub
mov
bound
pop
loopne
jmp
adc
pop
xor
mov
and
jmp
jle
in
xchg
mov
cmc
or
dec
sbb
daa
jns
xchg
mov
sahf
sar
insl
dec
xor
pop
push
add
mov
and
jb
into
ljmp
push
xchg
pop
adc
fcomi
push
fstpt
or
xchg
add
pop
ljmp
push
sub
mov
cmpsb
aam
lods
adc
mov
hlt
add
in
add
jg
dec
ret
cs
je
inc
sbb
adc
sbb
sbb
outsb
lcall
push
jae
jb
leave
rcll
xor
arpl
dec
pop
xlat
inc
lock
mov
incl
movsl
sahf
arpl
inc
adc
in
sub
subb
scas
push
lea
rcll
mov
ljmp
add
stc
add
or
sub
or
mov
pop
jg
incl
sbb
in
sahf
fidivs
dec
repnz
sbb
fwait
mov
lahf
pushl
fldcw
push
insl
pop
fsubrs
imul
movsl
or
mov
or
lcall
sub
movsb
loope
outsb
pop
lods
cmp
lret
adc
cld
add
clc
imul
sbbb
clc
incl
mov
pop
pop
arpl
pop
mov
xchg
mov
sbb
or
fwait
sub
pusha
insb
and
mov
jbe
xchg
push
loopne
call
ss
cs
xchg
cmc
aas
sub
jo
movl
test
mov
fcmovne
dec
xor
mov
xlat
sti
movaps
insl
mov
arpl
movsl
fnstsw
mov
ds
fisubs
cmp
cmp
adc
jns
cmp
xlat
adc
rcrb
lods
adc
cmc
lret
aaa
lret
in
xchg
dec
xchg
jno
jl
shlb
mov
jmp
xor
popa
fcompl
xchg
jle
clc
add
rcl
out
push
fsubrs
inc
xchg
incl
lods
out
incl
shrb
icebp
mov
xchg
nop
cmp
arpl
in
call
or
xchg
and
icebp
mov
xor
xchg
subb
lret
mov
lock
mov
inc
aas
shll
js
popa
pop
call
stos
sub
jl
lcall
jb
cltd
lods
jecxz
push
dec
jmp
incl
imul
mov
arpl
aad
jno
lahf
cmp
push
add
pusha
scas
clc
decl
pop
push
stos
or
cmpl
ret
repz
dec
lock
cmpsl
ss
insl
xchg
lods
fcomip
incl
fwait
icebp
je
aad
std
fidivrl
or
jecxz
cli
scas
xor
cmp
cld
jno
lahf
aam
inc
out
sbb
jo
aas
outsl
cmp
sub
addr16
mov
cmpsb
jbe
dec
jmp
jae
xor
xchg
fistpll
mov
scas
in
out
std
jns
mov
sbb
mov
cmp
jbe
out
in
add
aam
xor
ja
xchg
out
inc
xor
xor
push
xchg
adc
xchg
ljmp
push
mov
push
jnp
push
sub
adc
and
cli
gs
dec
dec
xchg
ljmp
lcall
jge
sbb
mov
cmp
dec
enter
iret
sbb
sar
add
cs
loopne
mov
je
mov
loopne
mov
xor
lcall
out
add
daa
dec
pop
sti
das
pop
scas
je
push
mov
pop
out
inc
cmp
add
adcl
inc
daa
mov
mov
sarb
out
fucom
fwait
or
std
add
add
lcall
xchg
pop
cmp
pushf
sahf
jnp
inc
clc
es
cld
mov
enter
std
adc
mov
lcall
ss
inc
ds
mov
cltd
pushf
popa
jnp
xor
sti
scas
pushf
xchg
jne
pusha
cli
sub
jmp
lret
into
fists
pop
lret
jae
xchg
loope
pop
mov
xor
es
ljmp
jecxz,pt
and
shrb
sti
fnstcw
pop
mov
pop
movsl
pop
push
fistpl
test
add
clc
call
lcall
or
test
mov
sub
call
or
cmp
inc
lods
fiadds
dec
leave
cmpl
lret
test
icebp
push
fistl
and
cmpsb
sbb
inc
xchg
adc
adc
aas
pushf
sub
fwait
imull
js
pop
mov
jl
rcrb
loopne
vpperm
js
fdivrs
mov
incl
sub
arpl
mov
lods
repnz
callw
jle
cmc
test
addb
dec
lock
push
xchg
adc
and
out
add
xchg
xor
loopne
or
ljmp
lcall
pop
sub
fisttpll
dec
lret
mov
insl
popf
xlat
imul
movsb
stc
lahf
gs
ja
xor
loopne
js
push
mov
pop
push
xchg
daa
ljmp
xchg
mull
jns
sub
into
leave
imul
sub
mov
mov
adc
inc
movsb
pop
xchg
push
sub
mov
fiaddl
xor
or
cmp
jmp
lods
mov
into
sahf
loope
lds
sub
lea
mov
lahf
fisttpll
int
mov
scas
jmp
sbb
jle
pop
inc
mov
lret
adc
mov
idivl
icebp
jnp
jnp
mov
xchg
fbld
loopne
mov
xchg
into
xchg
push
in
cmpsl
in
mov
popf
aas
cmpsl
mov
into
mov
cltd
in
lret
pop
sbb
out
idiv
dec
rol
in
fiadds
xchg
bound
insb
ja
mov
cld
call
inc
adc
inc
push
std
stc
mov
inc
push
in
aam
push
mov
out
inc
mov
ljmp
sub
sub
xchg
dec
mov
pushl
ficoms
mov
repnz
jae
mov
cmp
call
aad
sub
adc
pop
jl
jle
or
mov
jl
das
std
mov
pop
outsb
xor
pushl
push
sub
popa
fdivp
pop
fnsave
pop
fisubl
in
xor
jmp
and
shll
add
xchg
mov
pushf
xor
ljmp
push
add
push
fstpt
mov
dec
xchg
jle
jg
adc
cmp
jl
dec
testb
js
lret
xchg
xor
insl
imul
mov
ret
add
lret
jmp
ret
test
shlb
fmull
or
stc
mov
jo
jp
aas
stos
push
into
pop
xor
jg
and
adc
cmpsb
out
sub
dec
aaa
clc
dec
popf
jne
ds
mov
rol
ljmp
lods
pop
jo
es
pusha
stos
mov
xor
out
mov
sbbb
inc
out
dec
and
xor
mov
jbe
cwtl
sub
pushl
push
sub
and
sub
popf
push
pop
inc
ss
adc
jg
mov
mov
mov
jno
pusha
lock
dec
xchg
repz
xorb
add
mov
decl
jo
mov
rcr
lea
ljmp
jg
movsb
cmc
imul
in
lods
bound
outsl
data16
inc
mov
ljmp
sub
pop
ret
sub
dec
dec
lea
add
mov
incl
mov
iret
dec
les
pop
xchg
jecxz
and
xchg
xchg
xor
call
inc
xchg
sbb
cmc
cmpb
sbb
push
and
fisttpll
notl
jmp
lods
dec
addr16
stos
add
or
stos
mov
adc
pop
push
shrl
push
decl
sbbb
pop
sub
and
bound
xchg
jp
sbb
xor
lea
jmp
call
std
mov
mov
call
mov
pop
push
loope
and
pushl
jnp
dec
js
insl
lods
lret
and
mov
lret
pop
rolb
test
jmp
or
pop
daa
lahf
int
and
cmpsb
or
lods
xchg
cmp
outsb
iret
stc
push
cmp
nop
fs
push
idiv
aam
cmp
jb
mov
adc
filds
dec
push
push
push
mov
ljmp
sahf
adc
adc
cmp
test
push
pop
or
cs
or
shl
push
cmp
lock
push
add
outsl
pushf
push
cmpsb
insl
adc
pop
jle
ljmp
and
mov
fisttpl
filds
imul
out
cmp
ficoms
cmp
jmp
push
jle
loope
aad
dec
add
pop
dec
sbb
rolb
rcll
pushf
ja
loopne
jecxz
mov
dec
mov
repnz
aas
sub
fstpt
adcl
decl
imul
xchg
mov
mov
mov
leave
popa
test
mov
ficomps
in
movsl
push
push
adc
fldenv
decl
ret
les
mov
fwait
or
call
dec
fwait
ss
push
add
aam
incl
mov
sbb
pop
cs
mov
xlat
das
sbb
mov
cli
rclb
nop
test
icebp
shl
pop
jp
rcrb
or
pop
xchg
inc
dec
insb
xchg
jno
add
xor
pushl
inc
and
mov
and
or
xor
sarl
xchg
add
and
in
mov
incl
and
call
aad
popa
fwait
xchg
sbbb
mov
jns
loopne
push
call
stos
popa
mov
dec
lods
sbb
mov
jecxz
mov
cmp
decl
cwtl
aam
push
mov
inc
cmc
pop
es
cmp
aam
xorl
fsubrl
jne
jg
out
imul
int
std
lods
out
mov
mov
ljmp
fcoml
push
inc
inc
mov
pop
rcl
or
mov
and
aam
dec
sbb
incl
popf
jno
popf
xchg
jb
and
leave
xor
ljmp
outsl
adc
shll
adc
inc
in
sbb
out
or
cmpsl
adc
push
rorb
testl
inc
xor
dec
incl
mov
add
test
cmovbe
mov
mov
jne
ss
sti
stos
sub
ljmp
jl
xchg
pop
inc
gs
push
iret
cld
xor
add
mov
push
data16
movsl
xchg
in
icebp
adc
push
fwait
inc
scas
adc
xchg
jmp
rcrl
or
adc
adc
test
mov
dec
je
jmp
inc
das
add
sti
rclb
push
enter
xor
jp
mov
mov
mov
dec
rol
mov
push
fildl
hlt
inc
bound
add
mov
lret
push
jp
sahf
aas
repnz
out
sahf
in
sbb
sbb
dec
jp
inc
clc
ficomps
add
sub
and
sbb
stos
movsl
add
in
lret
lea
inc
mov
push
or
daa
inc
xor
pop
ret
in
push
mov
scas
or
std
ret
mov
scas
pushl
jecxz
xor
sti
mov
inc
jo
fsubs
sbb
xorl
inc
add
frstor
push
das
out
jle
adc
jle
sub
movsl
and
adc
incl
cmp
mov
jmp
sub
adc
adc
xor
decl
mov
mov
cmpl
jo
jp
jnp
call
sbb
xchg
ds
jnp
adcb
je
icebp
dec
data16
sub
lret
lcall
idiv
test
mov
fsub
repnz
bound
or
xchg
lcall
das
lret
out
cmp
in
shll
jne
clc
repz
push
xchg
arpl
jg
sbb
lcall
push
adc
mov
mov
out
ljmp
sub
push
sbb
repz
pop
int3
ss
or
push
push
shrb
mov
lret
and
jne
push
ljmp
cld
inc
in
push
add
clc
stos
or
sbb
ds
fcomps
idiv
push
std
lcall
xlat
lahf
leave
inc
insb
out
xorb
shl
mov
sar
incl
jmp
dec
call
fldcw
inc
jl,pt
mov
mov
insl
push
pushl
les
ret
push
sub
or
jmp
jge
adc
xchg
fildll
push
lcall
data16
jmp
das
rolb
push
ret
and
push
decl
pushl
out
shl
pop
test
mov
xchg
sbb
frstor
jo
inc
cmp
or
or
fstps
mov
decl
add
jae
mov
clc
cmp
jns
lea
fisttpl
aas
popf
xor
scas
pop
lcall
push
dec
mov
outsb
mov
sbb
sub
push
cli
sbb
call
xor
inc
inc
inc
mov
sbb
xchg
arpl
insb
mov
popa
out
ja
sbbb
and
daa
jne
leave
ss
shr
in
stos
fisttpl
fcmovnbe
dec
pop
jecxz
or
sub
add
in
filds
mov
mov
pop
push
js
jg
or
sub
xchg
in
mov
mov
lcall
or
sub
sub
and
jo
inc
adc
mov
push
rcrl
mov
xchg
out
jbe
sbb
rclb
jg
dec
test
mov
mov
dec
sbb
jb
push
jne
jo
popf
test
mov
dec
sti
insl
sbb
lcall
push
and
imul
jp
lcall
cli
cmp
testl
mov
aam
add
push
out
jg
incl
incb
pop
mov
add
jp
dec
loopne
xchg
mov
cmp
inc
ret
jne
outsb
stc
stc
imull
aas
ss
mov
shrl
aaa
repz
mov
out
mov
lds
jle
push
mov
lahf
xor
lods
test
mov
inc
rclb
push
lret
daa
mov
mov
or
clc
inc
mov
push
push
decl
andb
pop
cmp
and
push
stos
or
mov
xor
cmpsb
mov
cld
sti
sub
push
dec
cmp
ja
fstp
cmp
cmp
inc
cli
jl
cmp
adc
call
notl
sti
pop
cmp
andl
push
inc
sub
cmp
mov
mov
push
push
jp
stos
cli
aad
ljmp
aam
stos
push
movsb
cmpb
out
sbb
addr16
movsb
sbb
imul
pop
rcrl
mov
stc
cmp
cmp
lret
cmp
lahf
dec
dec
lods
mov
stc
ljmp
stc
sub
xor
lods
push
cmpsb
dec
xchg
int3
sbb
sub
pop
cld
mov
pop
subl
and
push
outsb
sub
cmpsb
jg
push
add
call
inc
sub
sub
cmp
out
adc
add
arpl
lods
lea
sbbl
imul
lcall
mov
jp
or
mov
jno
adc
bound
dec
adc
ret
lea
in
pushl
push
sbb
xchg
test
jle
cmp
sub
jl
adc
jmp
leave
push
pop
outsl
cltd
dec
add
sbb
mov
fimuls
gs
dec
pop
mov
cli
dec
mov
out
idivb
ja
cltd
pop
or
cmp
bnd
movsb
push
test
ljmp
je
jno
jno
and
mov
enter
pop
mov
arpl
push
sbb
sar
sub
jae
in
lret
jecxz
or
repnz
korw
xor
decl
jns
nop
dec
mov
test
xchg
ss
outsl
data16
cmpsl
flds
imul
sub
push
jmp
fsts
jl
mov
cmpl
scas
adc
or
leave
fwait
sub
es
ljmp
lcall
subb
shll
cmp
shr
pop
dec
daa
mov
lock
push
cmp
call
add
iret
lea
es
inc
adc
outsl
std
enter
and
mov
dec
insb
dec
mov
and
sets
bound
inc
and
jbe
dec
lods
rcrl
add
movsb
test
cmp
enter
clc
mov
dec
pop
adc
mov
and
sub
call
jmp
push
pop
push
or
mov
push
cmovg
aam
daa
xor
outsl
clc
jge
ljmp
mov
mov
and
adc
fsubrl
inc
out
pop
mov
cmp
adc
out
and
jne
xchg
pop
inc
jle
arpl
pushl
inc
negl
add
xor
push
jnp
test
and
or
or
or
or
or
jae
mov
xor
sbb
loopne
sbb
and
push
inc
mov
add
call
loopne
mov
pop
inc
pop
xchg
loope
sti
daa
jge
cli
icebp
aad
das
jnp
dec
pop
pop
loopne
lcall
js
mov
int3
or
pusha
jno
iret
push
mov
adc
in
out
mov
pop
mov
push
jg
sub
jbe
sbb
ret
inc
sbb
inc
repnz
sbb
cmpsl
cltd
sub
test
cmp
fstps
fs
ja
rol
aas
dec
push
std
call
pop
je
add
push
incl
pop
aas
into
pop
add
cmpsb
lahf
loope
jns
sub
mov
cvtdq2ps
dec
fdivr
inc
fisubs
clc
mov
push
push
adc
pushf
sbb
inc
data16
dec
xor
or
clc
out
repnz
jle
mov
jmp
incl
dec
ret
push
dec
test
or
roll
fstps
addr16
stos
push
out
sbb
jo
loop
xchg
stos
subl
incl
adc
mov
enter
adcl
add
rcrb
pop
cmp
addb
std
mov
dec
xor
dec
sbb
lcall
test
mov
out
mov
pop
inc
fidivrl
push
mov
xor
orb
sbb
or
cmpsb
mov
fdivs
mov
push
xchg
cmpsl
pop
test
jecxz
mov
outsl
adc
pushl
mov
push
jb
inc
clc
mov
lahf
ds
add
fisubrs
cli
in
or
fiadds
imul
cmp
jbe
int3
daa
mov
mov
add
lea
pop
in
insl
cmpl
aaa
or
insl
xrelease
add
into
rcrb
fwait
bound
nop
cmp
pop
dec
out
cli
jmp
cmc
mov
push
testb
invd
push
pop
aam
pop
pop
adc
add
lahf
inc
nop
xchg
add
enter
pop
inc
xor
mov
ljmp
int
arpl
movsb
sub
fimuls
out
adc
daa
aaa
and
decl
add
les
or
jl
cmpsl
mov
jae
or
sahf
test
push
or
das
cli
ljmp
loop
pop
mov
inc
lret
dec
xchg
ss
adc
pop
push
jecxz
in
xor
popf
xlat
or
sahf
push
jne
lds
addr16
xor
jo
insb
divl
xor
or
jmp
lea
aas
dec
mov
cmpsl
test
orb
cmpsb
mov
andl
loopne
jnp,pn
hlt
inc
xor
scas
inc
pop
mov
out
decl
stos
cmp
sub
mov
adc
jmp
div
incl
sbb
arpl
sub
dec
shll
lret
sub
jp
rorb
fcoml
lea
movsb
les
add
test
sbb
rolb
add
sub
mov
mov
push
fstps
adc
jg
mov
mov
jg
pushf
and
bound
movsb
sub
jg
jmp
xchg
fwait
sbb
mov
jb
test
iret
pop
inc
imul
pushl
test
hlt
push
aad
inc
xor
test
incl
xor
jmp
mov
dec
dec
dec
pop
in
lock
jg
dec
in
filds
int3
push
jg
add
mov
dec
dec
mov
in
adc
jge
insb
popa
insb
test
addr16
stos
jmp
pusha
push
pop
pop
xlat
adc
jg
dec
lods
loope
and
je
scas
cmc
mov
getsec
pushw
mov
sbb
int
lods
push
std
call
dec
push
dec
pushl
rcrb
jge
push
movsb
jmp
and
adc
scas
push
mov
lock
sbb
or
sub
call
xlat
add
aam
jae
push
xor
mov
mov
popa
popa
add
sbb
mov
xchg
negb
in
enter
push
mov
test
push
dec
dec
mov
ljmp
faddl
decb
add
mov
xchg
movsl
push
lcall
add
push
inc
mov
stc
cli
push
adc
outsl
jmp
xchg
scas
and
add
lea
hlt
aaa
sbb
inc
jp
cmp
sub
sbb
jno
jl
lcall
push
icebp
cmp
cld
addl
incl
add
inc
inc
sbb
adc
sti
cld
pop
movsb
sub
xor
ds
ja
sarl
lock
ljmp
daa
hlt
jo
scas
lret
stc
jnp
rcr
dec
sbb
movsl
inc
mov
in
cmp
insb
loopne
push
bound
jne
stc
fldcw
les
pushl
cld
fdivs
push
inc
xor
dec
addr16
push
xor
stos
shlb
adc
add
lds
ljmp
pop
push
ret
or
pop
dec
add
aas
sbb
cs
into
xchg
lcall
mov
sbb
in
mov
xor
mov
scas
inc
popa
and
mov
lcall
inc
jge
cmc
sub
sbb
lods
ds
fisubl
adc
jb
in
cmp
push
mov
fs
jbe
push
nop
xor
adc
jmp
pop
sahf
cld
shll
lds
mov
xor
xlat
jae
lahf
and
clc
incl
movsl
repnz
leave
dec
movsl
xchg
call
imul
push
pushl
mov
stc
mov
mov
mov
pushl
sub
xchg
cmp
sbb
imul
idivl
dec
imul
call
ds
in
mov
loop
xor
dec
pop
dec
and
dec
outsl
ds
mov
ds
ret
lods
adc
push
sub
sbb
mov
addl
in
fisttps
std
lcall
inc
popf
out
cmp
cs
insl
mov
pop
loope
mov
ljmp
xlat
mov
lret
push
test
mov
stos
push
mov
dec
add
mov
xor
mov
pop
adc
mov
or
sub
mov
inc
lds
or
fwait
xchg
mov
dec
inc
leave
fxch
jle
bnd
ss
lcall
sub
push
cwtl
dec
sbb
push
adc
lcall
ret
cmp
in
dec
aaa
aaa
in
iret
mov
sti
inc
inc
repz
sub
cltd
xchg
lahf
jmp
push
push
fmull
pushl
pop
mov
lods
ja
jne
and
outsl
out
pusha
inc
adc
inc
cmp
dec
iretw
mov
adc
rclb
jmp
mov
into
dec
sbb
cs
ret
mov
xlat
jle
nop
fisubrl
je
mov
xor
lahf
mov
aaa
cmpb
sbb
sbb
dec
push
pushl
insl
inc
lret
lret
sbb
ret
sarl
and
push
inc
cmc
jmp
cwtl
inc
xchg
out
lcall
leave
je
loop
xchg
cmp
fisubrl
bound
lock
das
and
test
mov
decl
or
gs
jge
mov
and
jmp
add
cmc
push
in
sbb
decl
and
mov
add
mov
in
xchg
sub
les
add
sbb
and
fsts
mov
out
add
cs
aaa
test
lea
je
ljmp
mov
inc
or
xchg
cld
subb
xchg
outsl
jae
cmc
leave
test
lcall
int3
add
push
outsb
ret
sbb
popa
data16
sbb
inc
or
ret
push
bound
add
dec
cmp
clc
and
pushf
popa
in
ljmp
fstp
lahf
imul
addr16
mov
mov
pop
xchg
shlb
cld
dec
cs
jp
in
idiv
dec
mov
and
cmc
cmovl
sub
ret
pop
push
in
jl
mov
jb
out
add
mov
pushf
pop
adc
add
push
cld
fwait
test
sbb
test
or
incl
cltd
push
xchg
add
add
sub
cmpsb
leave
and
mov
loopne
jmp
fs
clc
dec
js
jge
adc
test
lcall
and
add
scas
add
jns
pop
mov
and
call
push
cmp
fs
outsl
mov
hlt
inc
add
ljmp
jmp
push
dec
bound
sbb
or
lea
iretw
adc
mov
imul
in
int3
mov
and
mov
in
jbe
pop
xor
aam
xchg
mov
xchg
loope
rcl
jmp
es
pop
fidivrl
push
pop
push
pusha
inc
push
xchg
icebp
jne
adc
lret
add
xor
mov
cmpsb
cmp
std
push
lcall
or
outsb
jne
in
jge
jg
pushl
cmpb
push
jecxz
pop
push
hlt
inc
push
pop
testl
and
std
decl
loopne
and
addr16
dec
sbb
push
lock
icebp
push
jnp
dec
int3
push
ss
push
std
pushl
or
add
pop
push
sub
jecxz
loop
mov
jecxz
stos
or
cli
stc
add
jmp
jmp
out
push
ss
adc
movsl
data16
push
jns
jae
and
jbe
sub
fwait
cmp
jg
stos
ret
push
mov
jg
inc
cmp
xchg
inc
or
enter
rclb
scas
in
jl
pop
sub
call
ret
outsl
add
cld
insb
add
sbb
ret
ds
aaa
mov
pop
jl
pop
jns
xlat
aam
add
pop
movsl
cmpsb
into
sar
jb
ja
or
sar
lcall
lret
xlat
std
mov
sbb
outsb
inc
sbb
jmp
int
rcll
pop
add
or
out
pop
cmp
cmpb
inc
cmp
fildl
dec
adc
decl
clc
sub
or
mov
lods
insb
xchg
sbb
dec
or
inc
dec
ds
cmc
pushl
jg
repnz
xor
stos
jns
pop
out
jne
xor
fistpll
addb
out
and
mov
pop
movsl
mov
int3
pop
lcall
sbb
adc
dec
jae
push
mov
jb
or
les
ljmp
rcl
ds
cmp
stos
pop
rcrl
lods
push
aaa
out
outsb
sub
scas
std
add
xchg
inc
or
push
and
and
pop
dec
in
inc
shll
mul
icebp
ret
mov
mov
mov
mov
adc
adc
xor
pushl
mov
out
adc
lahf
xlat
or
pop
subl
pop
int
cmp
jg
shll
push
sub
icebp
sbb
cmp
push
cmpsl
mov
xchg
push
inc
call
scas
and
jae
mov
xor
data16
test
add
sub
fmull
sbb
sbb
adc
cmc
fnstsw
fidivrs
jns
bsf
decl
adc
xor
ljmp
adc
loopne
loope
outsb
xor
rorl
idivl
xchg
sub
scas
xchg
or
cmpsl
pushf
aam
xchg
cmp
push
inc
or
lcall
dec
mov
jge
fists
lahf
mov
cmp
and
out
imul
sbb
or
ret
xchg
xor
mov
push
out
dec
testl
aad
call
icebp
inc
call
bound
stos
sub
adc
imul
cmp
pop
andl
daa
mov
int
fists
imul
in
mov
vandnps
cs
fxch
pop
push
mov
xchg
sub
vcvttps2dq
outsb
mov
pop
add
xor
hlt
mov
roll
push
mov
mov
out
dec
lea
fimull
incl
mov
mov
jae
jge
pop
sti
out
sub
jo
aas
clc
cmp
incl
sbb
lds
fnstenv
xor
mov
mov
test
xchg
call
cld
dec
and
mov
dec
loopne
push
pop
add
mov
ja
in
jb
add
lcall
outsl
gs
jp
or
es
and
loopne
ss
xor
cmp
mov
add
dec
jp
lods
or
in
insb
pop
xchg
push
fs
jle
mov
call
sbb
xor
and
rcl
push
push
lods
xor
sub
loop
test
ret
stc
sbb
rcl
cmp
and
movsb
incl
add
xchg
fdivs
sbb
mov
xchg
lea
mov
cmp
lods
inc
xchg
jecxz
add
leave
orb
dec
decl
inc
xchg
sbb
inc
inc
stos
lods
xor
pusha
je
dec
in
in
es
pop
jb
sbb
test
imul
lcall
leave
jae
sbb
das
sub
vmread
sbb
das
add
decl
pop
addr16
mov
pop
cli
jp
sbb
imul
mov
shlb
ljmp
cmp
xor
mov
fisubs
imull
je
test
outsb
sbb
je
fmul
hlt
push
pop
add
pop
xor
int3
fs
mov
mov
loopne
and
lds
mov
mov
jbe
subb
push
lcall
mov
dec
daa
lock
sub
lea
push
or
dec
aad
mov
into
hlt
in
negb
cmp
shlb
sahf
cs
lods
adc
outsb
or
enter
jg
mov
push
rorl
movsb
call
scas
pop
clc
pop
sub
ret
mov
cmp
push
and
or
scas
aam
shll
ret
stc
es
mov
push
mov
pushl
dec
mov
cmc
ret
xchg
push
lret
bound
sbb
rcr
jg
into
jg
fstps
fdivrs
call
jne
dec
outsb
cld
push
imul
test
add
mov
sub
jg
pushl
xor
inc
jle
adc
mov
cmp
lret
pusha
mov
jg
insl
mov
inc
lds
fstpt
push
mov
fstpt
jg
cmp
mov
xchg
or
cld
cmp
and
fisubl
push
inc
call
insb
mov
incl
call
sar
cmc
pop
and
cmpsb
xchg
add
fcoms
and
nop
scas
sub
cli
movsl
xor
in
int
mov
idivb
insb
lcall
call
xchg
mov
jae
jb
jne
push
push
cmc
mov
xchg
mov
xchg
pop
rep
inc
aaa
cld
call
inc
out
cmp
scas
jo
xchg
fstp
or
lods
stc
push
push
stos
xlat
test
incl
pop
mov
lds
cmp
jmp
fwait
sub
in
imul
adc
push
sub
sub
iret
mov
mov
lock
push
push
dec
pop
movsb
dec
mov
add
movsl
push
mov
xchg
inc
lret
push
fsub
pop
pop
decl
lahf
push
pop
test
lods
mov
ret
lds
fimuls
aas
orb
fcomip
sbb
jg
call
add
or
and
xchg
cmc
aam
sarb
dec
cmc
sub
scas
cli
jns
pop
mov
insb
and
adc
pop
cmp
and
mov
or
jmp
inc
aad
jbe
and
xchg
scas
sahf
adc
lock
das
cli
and
dec
mov
sbb
movsl
lock
dec
cld
ds
adc
sbb
pushf
stc
aaa
test
call
cld
mov
dec
pop
cmp
lods
inc
into
into
sbb
loop
jmp
adc
push
inc
insl
imul
dec
lret
adc
mov
xor
incl
je
scas
in
xchg
xor
out
push
xchg
xchg
arpl
mov
decl
js
sbb
insl
repz
or
push
arpl
cmpsb
fimull
insb
push
ja
arpl
sub
out
cli
call
push
mov
xchg
xor
adc
mov
lock
mov
fnsave
out
rep
mov
daa
or
mov
nop
cmp
in
enter
push
dec
sbb
and
pop
jge
cmp
rcrb
sbb
scas
imul
subl
lahf
int
fdivl
lods
push
enter
popa
std
jle
pushl
lret
xchg
cmp
xchg
pusha
dec
dec
and
sbb
pushl
fwait
mov
insb
jne
out
rorl
inc
xchg
out
cmpsb
cmp
cmp
cmp
ljmp
clc
sub
mov
in
lret
fcoml
imul
fimull
cmpsl
lods
xchg
in
bound
adc
pop
pop
push
insl
inc
bound
lahf
mov
lcall
out
inc
aam
daa
jl
popf
adc
sub
pop
int3
inc
jnp
mov
mov
fisubrs
lret
pop
xchg
jo
test
sub
xor
jp
or
add
call
add
adc
movsl
enter
xchg
popf
jg
test
loopne
mov
mov
mov
roll
jg
sbb
xchg
aad
sub
aam
sbb
lcall
cmp
call
loopne
mov
bound
sub
cmpsl
mov
add
sbb
mov
call
orb
cmc
mov
daa
dec
jp
mov
pusha
xchg
aaa
pop
in
hlt
add
jg
pushl
das
cmp
dec
dec
mov
push
pop
mov
and
add
xor
adc
ret
adc
mov
mov
cmp
out
xor
inc
out
sbb
mov
lcall
jecxz
jnp
testl
pushl
pop
and
add
sbb
add
test
cmp
xchg
pop
std
incl
fildl
dec
sbb
int3
jle
in
scas
xchg
divb
cmpsl
sub
icebp
pop
cmc
out
sub
dec
add
xchg
iret
mov
and
mov
ret
movsl
loop
mov
xor
in
mov
jbe
cmp
adc
imul
sub
into
mov
pop
cmp
aas
push
jg
push
mov
xchg
cmp
adc
pop
int3
mov
int
add
mov
cwtl
out
sub
inc
mov
cmpsb
jp
dec
aam
andb
xor
int
pop
pop
and
les
mov
popf
add
and
out
add
jl
dec
fbstp
xor
cmp
stc
push
add
pushl
jge
cld
enter
sahf
loope
pshufw
loope
jae
xlat
push
clc
ds
nop
add
jl
ljmp
push
shlb
incl
aas
adc
dec
std
xor
sub
mov
lods
push
pop
push
lods
adc
incl
cmp
mov
insl
xchg
lahf
sbb
or
xor
jns
int
js
das
xor
insl
test
mov
xor
mov
sub
mov
mov
addr16
fbld
adc
vmovhpd
jl
xchg
mov
sahf
sahf
xor
lcall
ret
or
or
inc
push
adc
shrl
jb
fstpl
mov
std
pushf
bound
decl
or
adc
movsl
adc
ljmp
inc
mov
cmpsb
xlat
les
call
dec
jg
pop
jnp
jp
jg
ja
sub
sbb
imul
xor
mov
loopne
xlat
int3
call
shlb
push
pop
dec
imul
adc
dec
out
mov
arpl
gs
sbb
add
jg
sbb
mov
jae
cmpsl
mov
xor
mov
mov
rcrb
repnz
out
mov
xlat
inc
cmp
mov
push
cs
xor
jmp
pop
add
jbe
jnp
data16
mov
pop
and
mov
dec
push
subl
clc
flds
ret
mov
pushf
mov
jl
stos
xchg
adc
adc
ljmp
jmp
into
push
sbbb
adc
xchg
test
sbb
mov
or
jmp
cli
lea
fsubrs
sub
jmp
out
push
cld
ljmp
push
stc
enter
movsl
cmc
pop
pop
jb
test
call
enter
pop
lret
lods
inc
popf
aam
ret
adc
jl
dec
fmull
push
pop
adc
call
dec
imul
mov
xchg
jp
out
jge
push
fst
outsl
push
sub
movsb
aam
inc
cmp
repz
sub
jo
xchg
dec
mov
mov
arpl
push
in
xchg
xor
dec
ret
xchg
jns
dec
out
inc
insb
fcmovu
repz
popa
popf
xchg
call
pop
fidivs
mov
jo
inc
pushl
xor
or
lods
cmpsl
adc
xchg
insl
faddl
mov
and
loope
jb
flds
jmp
out
xchg
popf
inc
xor
sbb
stos
repz
mov
dec
adc
adc
into
in
sub
inc
lock
xor
and
mov
incl
popf
stos
cmp
out
mov
test
jae
add
mov
and
jl
mov
dec
shlb
dec
sbbb
sbb
or
xlat
sub
rclb
mov
sbb
mov
inc
popa
sti
mov
repnz
mov
push
mov
xor
leave
fildll
call
bound
cmp
loopne
popa
pop
jmp
mov
daa
sbb
mov
push
cmpsl
pushf
lock
loop
pop
jne
xchg
in
xchg
adc
test
cmp
dec
push
jne
xchg
mov
subl
fwait
push
insl
nop
fcom
pop
stos
mov
sub
push
cmp
jnp
mov
dec
outsb
popa
das
mov
pop
sbb
xlat
sarb
idivl
nop
mov
test
dec
test
jno
dec
push
sub
cmp
push
enter
jmp
nop
divb
adc
out
xor
or
sub
movsb
in
outsb
inc
inc
xchg
and
lods
xchg
jmp
cs
or
incl
or
jg
scas
dec
mov
jp
daa
xlat
add
ljmp
inc
push
and
pushf
inc
sbb
dec
add
repnz
inc
sub
or
jns
mov
sub
ja
xchg
xor
ljmp
lods
dec
push
test
mov
addb
fdivrp
loope
inc
repnz
pop
mov
es
mov
stc
sub
lret
shll
aam
xchg
lcall
popf
les
outsl
lods
xor
sbb
enter
push
or
xlat
lahf
sub
add
call
sub
shrb
or
fs
inc
out
ret
and
xor
mov
jae
int3
xchg
mov
loop
jo
inc
repz
jmp
sub
pop
jmp
mov
insb
add
push
push
je
xchg
pusha
ljmp
rcl
cmp
inc
mov
add
jno
imul
cmc
adc
sbb
out
insb
inc
jmp
inc
adc
cmp
scas
or
inc
mov
int3
outsb
jae
push
fisubs
ljmp
push
add
mov
xlat
or
insl
sbbl
repnz
sub
out
imul
sti
mov
cli
inc
pop
repz
cmp
push
icebp
es
cmp
xchg
adc
lcall
daa
push
cmp
push
jge
adc
lcall
mov
xchg
pusha
push
shl
inc
ffree
imul
inc
cli
fadds
lcall
pusha
pop
scas
push
testb
decl
in
daa
jle
push
leave
mov
popf
aas
mov
shlb
jbe
xchg
data16
fwait
jb
incl
mov
dec
negl
mov
cwtl
cmpsl
inc
test
dec
adc
decl
push
inc
decl
lock
push
ret
lahf
cmc
mov
mov
xor
ljmp
push
adc
add
pop
ficomps
push
mov
sbb
mov
fs
xor
clc
fmulp
or
out
jecxz,pn
incb
pop
sub
jl
xorl
mov
or
cmp
mov
das
ret
out
jle
or
in
cmpsl
fwait
mov
jmp
jecxz
dec
mov
subl
inc
xor
je
fisubl
push
xchg
imul
cli
arpl
or
push
jae
popf
es
ljmp
cli
and
orb
adc
push
sub
mov
je
inc
out
ljmp
push
push
xlat
sti
jl
or
shll
lock
push
dec
pop
lcall
mov
jbe
or
pop
outsl
xchg
ljmp
scas
sub
test
outsl
clc
mov
xchg
sbb
push
jmp
cmp
out
xchg
push
jecxz
dec
xchg
push
ror
and
sub
leave
and
jno
sarl
dec
xchg
or
push
ljmp
lods
inc
mov
arpl
mov
jno
push
out
sahf
inc
js
and
ljmp
leave
mov
jbe
shlb
mov
insb
mov
sub
mov
call
mov
sbb
je
stc
mov
daa
faddl
aad
fwait
sti
jg
mov
dec
adc
cmp
sti
pop
pop
xchg
in
add
jg
push
inc
push
insb
fcmovu
adc
gs
std
stos
ss
out
and
orb
imull
or
incl
lds
push
mov
cli
push
popf
in
mov
push
cli
pop
mov
mov
or
out
ljmp
sbb
push
add
arpl
dec
inc
fists
loope
movsl
movntps
xor
push
or
mov
push
in
and
and
out
mov
ljmp
mov
orl
push
fwait
iret
dec
ljmp
push
add
iret
adc
mov
incl
ja,pn
in
xor
or
mov
cmp
cltd
mov
push
pushl
repnz
adc
shll
mov
mov
xor
xchg
js
fnstcw
push
fldenv
dec
fcomps
pushf
test
or
xchg
inc
jne
pushf
enter
decl
mulb
jne
popf
fidivrs
sti
push
add
xor
sub
mov
mov
sub
xlat
cmc
sbb
movsb
cli
fidivl
jbe
pop
jnp
xor
mov
fcoml
cld
pop
sbb
sbb
test
pushl
inc
push
hlt
mov
in
outsb
fcompl
xor
pop
subb
mov
lcall
call
in
rep
dec
outsb
mov
rol
push
mov
arpl
cmpsb
aas
lcall
in
ret
jne
fistps
dec
dec
inc
and
test
pop
stos
frstor
ret
add
inc
arpl
int
ficompl
xchg
ja
aad
outsb
inc
pop
std
inc
cmpl
lcall
inc
or
lods
cmpsl
mov
adc
jge
jne
mov
mov
dec
loop
shl
cwtl
and
push
loope
cmp
lods
decl
out
xor
and
xchg
xchg
daa
pop
popf
inc
arpl
decl
jae
mov
xor
mov
or
int
mov
fst
jle
js
jo
dec
or
dec
inc
sub
sub
jb
nop
dec
mov
incl
mov
xchg
loopne
popa
push
mov
push
sbbb
shr
add
clc
call
xor
sbb
nop
jnp
and
inc
mov
les
call
xchg
test
in
mov
jl
fcoms
pop
insl
push
jecxz
mov
ljmp
mov
std
lea
mov
fldenv
fistl
ljmp
push
lret
imul
out
js
fiadds
sarb
cmp
mov
not
mov
mov
fistl
repz
sahf
mov
jo
mov
imul
mov
xor
add
inc
mov
jae
jae
xchg
cs
push
jbe
xor
add
cld
mov
xor
loop
sub
mov
sbb
je
sbb
cmp
fcomip
sbb
xor
cwtl
cmp
push
pusha
xchg
sub
jp
rclb
outsl
adc
xchg
jbe
mov
arpl
insb
ret
sbb
mov
cmpsb
inc
loope
lcall
or
ss
cli
ds
jmp
mov
and
xchg
sub
shrl
in
add
bnd
add
jne
push
lcall
int
in
repnz
clc
add
dec
mov
push
push
jno
xor
adc
cmpsl
out
mov
divl
xchg
pop
jle
mov
ljmp
inc
mov
sbb
test
daa
rcrb
mov
pop
pop
gs
adc
clc
decl
cli
pusha
or
gs
in
addr16
push
cmpsb
mov
mov
inc
push
rolb
sbb
sahf
mov
and
push
cmpl
mov
int
fisttpll
cbtw
cmp
xor
sbb
pop
and
int3
popf
lock
clc
sub
sbb
inc
fcompl
xchg
cmpsl
imul
movsb
idivl
dec
int3
jb
and
add
out
addb
nop
xchg
push
sarb
inc
movsl
sar
call
inc
pop
inc
jmp
cmpsl
jl
aad
or
sub
and
add
fs
pusha
sub
fbstp
cmp
stos
push
or
in
xchg
sub
loope
mov
lea
das
jne
pushl
jno
fwait
pop
add
dec
or
loopne
call
mov
aad
jmp
sahf
es
sar
inc
cmpsl
xor
xor
pop
mov
adc
or
pop
js
push
sub
sbb
fwait
in
popa
mov
cmp
test
incl
sbb
push
inc
int3
sbb
mov
mov
in
call
and
mov
idivl
rcll
fidivl
mov
fs
enter
lret
call
aas
call
cltd
aam
repz
lahf
cli
fnstenv
popf
inc
incl
idivl
bound
sbb
sub
adc
decl
xor
scas
push
adc
dec
push
push
clc
lcall
mov
incl
out
mov
pusha
out
mov
popf
and
leave
clc
push
xor
insb
jnp
stos
mov
pop
nop
int3
aas
cld
lds
mov
or
out
mov
lcall
fisttpll
gs
inc
dec
sbb
jmp
mov
dec
push
test
add
mov
jmp
push
test
in
movsb
pop
fmull
hlt
or
mov
xchg
in
inc
int
jns
pushl
loope
cmp
call
xchg
add
jp
fwait
pop
addr16
in
in
cwtl
subb
movsl
sti
lcall
mov
rclb
xor
jae
clc
mov
and
xchg
sbb
sar
jg
adc
mov
sbb
jg
and
xor
cmpsb
jg
ljmp
sbb
mov
pop
xchg
sti
jmp
data16
gs
lcall
jmp
out
lods
add
push
orl
mov
adc
and
push
test
aad
push
and
sarb
cmc
or
rolb
lcall
pop
mov
sub
push
pop
cwtl
add
dec
cmp
popf
fnsave
iret
xchg
in
jle
out
adc
loop
movsb
ds
mov
pop
sub
pop
stos
pop
out
les
clc
lcall
insb
or
fisubl
out
sbbb
lret
cmp
call
lock
test
pop
sub
mov
xchg
and
dec
cmp
loopne
mov
cmp
test
inc
mov
mov
dec
js
ljmp
stc
inc
out
test
mov
rcll
pop
or
mov
sbb
in
sarl
in
mov
cmp
inc
push
stos
mov
push
jmp
mov
sahf
stos
mov
hlt
mov
sbb
call
loope
lcall
xchg
stos
mov
ja
mov
mov
stos
in
and
jmp
xchg
xor
fnstsw
call
dec
dec
cmpsl
cmp
add
jmp
fcmovnbe
mov
divl
jo
ror
les
inc
cmp
lock
xor
jg
pushl
mov
popf
test
mov
push
sbb
or
clc
idivl
lcall
push
and
sbb
icebp
dec
push
fdivl
mov
inc
mov
xor
daa
xor
pushf
xchg
mov
in
and
or
insl
test
cmpsl
mov
add
lcall
add
xchg
cltd
xchg
inc
push
shr
pop
inc
clc
and
incl
data16
fnstsw
popa
sub
xchg
sbbb
movsl
jl
cwtl
adc
or
std
bndstx
jmp
jmp
rorl
push
cld
add
or
and
jbe
push
push
cmp
sbb
jmp
insb
inc
das
daa
icebp
adc
push
pop
insb
sub
lret
ljmp
mov
outsl
and
repz
pop
sbb
filds
sti
cltd
aaa
leave
xchg
cmpsb
mov
dec
addr16
insl
xor
in
dec
mov
test
jmp
outsb
repnz
lds
push
aad
dec
fisubrs
pushl
test
pop
dec
cmp
aad
pop
addr16
mov
fwait
outsb
adc
or
xor
lcall
push
sub
xor
jle
out
outsb
lods
and
jo
hlt
movsl
aad
fildl
add
pusha
cli
jecxz
add
fcomps
sub
mov
scas
insl
out
lret
push
in
fcomp
out
lock
push
add
nop
mov
add
jg
decl
pop
pop
xchg
fstpt
movsb
sbb
repz
lds
gs
jmp
cmpsb
loope
add
pop
inc
addb
xor
sub
mov
xchg
fistl
xor
add
ljmp
or
sub
stos
jg
mov
lret
jp
dec
mov
stos
pop
pop
ret
sub
incl
or
push
gs
popa
and
mov
and
call
pop
jnp
pushf
jge
or
dec
adc
mov
fadds
ss
sar
decl
push
out
into
ljmp
shlb
cmp
mov
mov
shl
jbe
sbb
xor
insl
xchg
pop
mov
cwtl
pusha
stos
imul
call
xchg
imul
and
pop
xor
lahf
jo
jns
pop
lret
gs
xchg
inc
int
incl
ret
sub
popf
dec
adcl
mov
dec
inc
leave
lea
call
xchg
jbe
sbb
fs
shl
cs
mov
addr16
xor
push
decl
lock
lock
jnp
dec
pop
inc
loopne
stos
lds
test
mov
mov
stos
add
pop
push
in
test
rcrl
jecxz
dec
inc
addl
test
scas
xor
and
fsubrl
rcr
notb
cmp
push
das
or
gs
mov
sar
lcall
or
inc
jmp
add
icebp
loope
jmp
int
addr16
mov
andb
shrl
mov
dec
xor
xchg
ja
inc
js
std
ret
mov
xor
outsb
pop
xchg
inc
es
dec
stos
pop
into
das
fisubl
push
nop
loop
push
pop
ret
or
xor
sbb
dec
int
inc
mov
cmc
fnsave
icebp
jl
scas
lds
shll
adc
sub
xchg
pop
sub
decl
jmp
outsl
mov
hlt
and
cli
out
sahf
jbe
aam
mov
or
bound
call
pop
aas
mov
or
repnz
cmp
aas
std
adc
loop
jg
jmp
jl
cmp
pop
sbb
cmp
dec
xchg
ljmp
cmp
mov
jne
adc
add
repz
js
fs
incl
inc
je
in
shlb
outsl
stos
scas
mov
sbb
jecxz
into
lcall
out
cmp
mulb
pushl
addr16
filds
cwtl
bound
mov
decb
sub
nop
xchg
adc
rclb
xor
sub
bound
ret
sub
repz
lret
call
mov
call
cmp
xchg
jo
push
mov
mov
xchg
jge
mov
jnp
sbb
add
and
dec
dec
push
sub
mov
xchg
notl
incl
gs
xlat
test
mov
cmp
push
push
ljmp
pop
pop
lods
fcomip
mov
js
push
xchg
xor
push
inc
mov
enter
sub
pop
mov
out
scas
sub
into
test
cmp
and
push
inc
pop
cmp
test
dec
and
xchg
popl
mov
add
call
jg
shrd
out
into
outsb
pop
inc
push
int
stos
cwtl
xor
jno
out
test
int
call
leave
sarl
inc
inc
xchg
out
adc
cwtl
repnz
push
fisubrl
js
pop
out
mov
jle
dec
xchg
out
lret
js
cmp
sub
fwait
enter
mull
les
sar
decl
enter
inc
int
mov
out
daa
into
add
xlat
loop
jg
dec
push
inc
inc
mov
jns
mov
mov
repnz
xor
shlb
ljmp
jmp
mov
inc
sahf
sub
sub
cwtl
pop
test
mov
aaa
ret
mov
cmp
push
mov
ljmp
pop
clc
xchg
imul
pop
or
jae
lds
cs
pop
mov
decl
xchg
aas
pop
sub
fwait
cmp
pop
xchg
xor
pushf
repz
xlat
mov
inc
jns
ljmp
jnp
lahf
pop
or
sub
loop
pinsrw
lret
pushl
mov
scas
movsb
lods
sbb
ror
sbb
dec
lahf
jmp
mov
ljmp
insl
outsl
nop
mov
add
push
push
xor
fcmove
lcall
dec
insb
outsl
ret
imul
jmp
je
adc
mov
xchg
les
or
movsb
in
pop
jg
mov
push
and
add
scas
scas
adc
push
inc
adc
ds
dec
popa
push
int3
nop
push
add
sbbl
jg
clc
push
mov
jg
sub
subb
xchg
imul
or
lods
pop
bound
rol
xchg
cmc
push
in
mov
adc
add
cld
stc
jp
stos
icebp
mov
das
xor
test
cli
decl
ret
cmp
fldcw
iret
loopne
jo
push
popf
sub
or
inc
aaa
clc
cmpsl
aaa
mov
pushf
push
cwtl
insb
ret
subl
jg
repnz
dec
rcl
nop
loop
sti
push
pushf
mov
add
adc
or
jmp
mov
loopne
js
imul
jecxz
in
ret
not
fcmovbe
jecxz
loope
cmpsl
push
push
jmp
cmp
fcomip
jmp
push
imul
jmp
xchg
scas
ss
push
int3
and
idiv
ljmp
xchg
dec
mov
xlat
repnz
cltd
sub
dec
sub
and
addr16
push
dec
lcall
cmp
sahf
or
daa
fnstcw
xchg
mov
lret
add
stos
bound
test
call
fxch
fldl
or
outsb
jp
xchg
pop
mov
into
sbb
xor
sbb
lcall
outsb
pop
push
dec
sbb
add
push
je
and
fwait
mov
mov
ljmp
sub
cs
mov
out
jae
adc
dec
or
sbb
jno
sub
ljmp
cmp
lcall
jl
mov
mov
jl
ljmp
mov
and
cmpsl
sub
jns
mov
lea
movsl
sbb
lds
inc
aam
and
sahf
push
inc
insl
add
sbb
jnp
dec
out
cmpsb
je
lret
mov
in
lcall
push
xor
loope
incl
aaa
std
and
movsb
add
pusha
andb
inc
xor
loope
add
fildll
dec
jg
jp
enter
or
mov
outsb
cld
lcall
jne
dec
scas
jns
shll
bound
xor
pop
das
jae
cli
adc
nop
inc
fadds
mov
sbb
sub
pop
xor
jae
and
sbb
dec
jmp
out
inc
jle
sub
mov
insb
cmpsl
lock
pop
out
jns
cmp
decl
in
push
xchg
mov
jge
lretw
mov
mov
movsl
mov
sub
or
insl
shll
pop
shr
push
sub
decl
daa
ja
mov
mov
add
pop
mov
sub
aas
cli
les
xchg
sub
jno
sbb
pushf
iret
inc
sub
int
or
jg
xor
call
jo
dec
int
js
sub
sti
cmc
fwait
adc
push
cmp
lcall
push
or
sbb
adc
mov
pop
pop
add
add
lock
pop
inc
cmc
lcall
push
unpckhps
cmc
roll
inc
xchg
cwtl
orb
adc
lcall
sbb
pop
bound
les
and
int
push
insl
pop
test
ljmp
mov
jmp
into
aas
outsl
pop
push
seto
pop
cmpsl
pop
insb
pop
inc
outsl
icebp
loop
mov
out
push
aaa
aaa
mov
sar
lock
pop
and
shrb
sarb
out
mov
mov
lcall
lock
cmp
in
iret
xchg
adc
xchg
cmp
pop
jne
das
cwtl
imul
ljmp
add
push
adc
inc
js
xor
pushf
roll
leave
mov
xlat
xorb
xlat
mov
mov
sbb
rorb
jg
add
jge
mov
rorl
mov
cltd
mov
cmp
fcomip
incl
mov
repnz
js
sbb
gs
mov
pushl
cld
arpl
mov
lods
scas
pop
jb
pop
xchg
stc
push
jle
xchg
inc
test
mov
incl
mov
jno
dec
sbb
rolb
push
lahf
xchg
add
push
hlt
pushf
inc
push
inc
adc
lret
cmp
push
jl
mov
fwait
add
incl
mov
clc
dec
ret
adc
shrb
inc
adc
mov
call
in
xchg
pop
xchg
add
hlt
lock
jno
xor
ret
fstpl
sbb
push
arpl
ljmp
pop
push
ljmp
sub
sbb
xchg
test
xorb
and
mov
lds
sbb
sub
test
inc
and
pop
mov
jmp
popa
test
cltd
insl
pop
push
mov
xchg
push
test
pop
fdivrl
inc
mov
push
inc
sbbl
gs
shll
mov
dec
loope
call
push
cmp
mov
icebp
ds
mov
pop
test
pop
imul
ficoml
negl
popf
sub
pushl
fs
add
nop
pop
cmpsb
jp
cmpsb
lods
xchg
mov
dec
cmp
dec
xchg
aaa
mov
std
jl
or
std
jne
pop
inc
loopne
cmp
ss
mull
sub
call
add
jle
movnti
pop
mov
jle
sti
cwtl
stos
into
add
cmp
dec
sub
imul
or
jge
sbb
mov
mov
decl
mulb
jbe
fnstsw
push
push
adc
ds
sub
cmp
out
push
pop
gs
xor
fcmovne
mov
cld
xor
mov
adc
mov
dec
pop
or
pop
xlat
jnp
imul
mov
imul
jnp
adc
pop
dec
in
ret
mov
incl
mov
sub
cltd
jae
lock
mov
pushl
cli
div
or
es
enter
mov
loopne
xlat
adc
mov
ror
cmp
decl
shll
jg
int3
pop
insb
push
inc
negb
dec
std
les
je
cli
ror
out
sub
hlt
incl
in
ljmp
fucomip
pop
push
outsl
xor
je
adc
mov
sbb
xchg
inc
xchg
or
sub
pop
scas
mov
push
psubb
sahf
cmp
repnz
imul
lock
shl
pushl
sub
mov
mov
jmp
outsl
test
fs
in
repz
incl
mov
shlb
leave
pop
ss
icebp
or
jmp
mov
jge
jge
mov
xor
xchg
push
lods
aaa
je
clc
js
mov
les
and
inc
rcll
xor
outsb
jno
xchg
xchg
lock
jbe
xchg
lods
test
or
sub
mov
sar
decl
cwtl
jecxz
lods
pop
pop
push
rclb
ret
xor
mov
cmp
mov
dec
dec
jmp
push
es
cs
push
pop
and
push
int
dec
hlt
jbe
fldl
mov
push
outsl
dec
movsb
in
imul
sbb
gs
imul
pushl
cld
mov
fs
mov
push
or
sbbb
dec
dec
xchg
xchg
sbb
lcall
fwait
mov
sub
add
cli
sbb
enter
xchg
pop
js
incl
sub
mov
dec
pop
sbbb
xor
push
mov
in
fistpl
jmp
lcall
testl
sbb
mov
fmulp
shr
rolb
addr16
fldenv
jecxz
push
jle
fnstcw
mov
jge
mov
call
cld
jae
ljmp
pushl
sub
dec
insl
or
fdivr
incl
mov
ss
push
xor
dec
push
loopne
addl
sub
lcall
mov
add
sbb
popf
push
je
popa
or
enter
lock
dec
dec
and
leave
pop
xchg
push
sbb
mov
mov
sarb
daa
daa
lcall
mov
jne
scas
push
sub
adc
mul
test
testl
std
sbb
scas
xchg
mov
fcomps
movsb
cs
and
adc
call
cmc
jl
fdivrl
sub
push
std
xchg
cmc
sub
and
mov
popa
lret
rcrl
lcall
xorb
into
push
cmp
repnz
lcall
das
into
inc
jmp
push
xchg
mov
sbb
xor
loop
inc
hlt
loopne
lret
mov
incl
mov
xchg
pop
mov
test
shll
inc
adc
mov
xchg
add
cwtl
fs
mov
ficomps
pusha
cmp
or
or
icebp
shr
ljmp
leave
movsb
fcoms
fidivrs
sbb
dec
mov
outsb
test
icebp
fadd
js
jmp
cmp
movsb
and
jle
dec
imul
mov
shl
in
sub
repz
cld
dec
push
xchg
pushl
lret
jo
pop
inc
or
movsl
adc
mov
sub
or
sahf
inc
push
jmp
in
repnz
clc
inc
cmp
cmp
dec
aaa
jl
roll
cmp
pop
data16
in
incl
arpl
inc
adc
lret
cmp
jmp
jmp
xchg
add
jge
xchg
dec
call
push
push
cmp
int
cmpl
or
popa
data16
xor
lcall
fldt
dec
fwait
pop
sub
incl
push
cmp
sarb
mov
jmp
rolb
xchg
xor
nop
and
enter
cs
repnz
iret
mov
dec
lcall
test
incl
xchg
sub
pop
add
inc
inc
dec
or
dec
iret
aaa
push
orl
and
cltd
lcall
push
ss
cmp
sub
leave
popf
push
mov
or
test
mov
decl
iret
sub
loope
or
pop
xchg
sbb
bound
ja
mov
xchg
mov
movsb
es
lret
pushl
sbb
sti
pop
aam
adc
iret
mov
pop
stos
incl
sbb
inc
adc
enter
jns
fcmove
sahf
jae
leave
test
inc
lret
xor
popa
fwait
mov
pop
push
pop
pop
jne
or
xchg
cmpsl
lea
cmc
imul
imul
jb
in
cmp
lret
push
xchg
insl
mov
lret
dec
cmpsb
push
inc
call
xchg
fcompl
jge
pushf
xorl
cld
xchg
sbb
sbb
rorb
and
mov
popa
iret
adc
ljmp
add
cmp
in
jp
test
xor
push
imul
jmp
mov
pop
xchg
sbb
jg
stos
fiaddl
jmp
and
jmp
js
xchg
cwtl
sbb
stc
xchg
loopne
stc
notl
pop
or
push
lret
mov
sets
pushl
sbb
xor
jb
cwtl
std
cmp
pop
xor
ja
push
ljmp
adcl
cmp
pop
div
enter
cpuid
addr16
push
lcall
cmp
cmp
mov
aas
imul
push
loop
push
stc
das
pushl
pop
xchg
std
mov
sbb
mov
mov
pop
loop
push
int
movsl
pop
sbb
call
outsb
dec
lahf
loopne
and
je
imul
je
dec
cmpsb
mov
aam
push
jno
jge
adc
sub
cld
cmp
insl
sbb
test
push
mov
inc
pop
sahf
jno
pop
aas
push
pop
push
sbb
movsb
outsb
xchg
lcall
sbb
subb
fstpl
fldl
ja
outsl
lcall
jns
or
cmp
jne
dec
pextrw
push
mov
sbb
mov
in
ljmp
inc
pop
iret
aas
movsl
or
sbbl
sbb
ljmp
cmc
aad
ficoms
leave
imul
call
fs
jbe
jne
movsb
push
fcompl
les
clc
aam
ret
sub
dec
or
xchg
divl
adc
push
sahf
aas
mov
xchg
in
inc
aad
lock
decl
jns
sti
test
lock
cmp
mov
cli
lds
xchg
jg
sub
cmp
fiaddl
ss
jbe,pt
stc
cmpsl
inc
cld
xchg
aaa
stc
pop
add
cmp
jae
cmp
jp
lods
aaa
cs
ljmp
insl
mov
mov
mov
jmp
fldcw
notb
dec
pushl
mov
mov
ret
rol
cmp
sarl
call
or
cmp
outsb
mov
mov
and
and
lcall
inc
mov
pop
and
adc
pop
sub
cld
out
pop
aas
cmpb
loope
in
mov
jge
cwtl
and
rolb
imull
imul
xchg
aad
push
inc
xchg
lcall
ljmp
rep
mov
mov
fstpt
push
pusha
sub
dec
mov
incl
aad
mov
and
in
mov
inc
xchg
sti
push
sbb
stos
ljmp
inc
adc
pop
cmp
shlb
testl
mov
mov
mov
add
add
cwtl
aaa
and
outsl
cli
jg
xor
cmpsb
in
insb
pop
adc
sbb
adc
fs
inc
ret
mov
decl
push
aad
xchg
movsl
add
jmp
andl
sbb
jl
and
jg
or
movsl
cwtl
fcomp
aaa
lcall
inc
mov
icebp
outsb
in
xlat
ds
mov
xchg
stos
dec
lahf
mov
jg
jmp
xchg
clc
jle
cld
je
dec
mulb
mov
bound
dec
inc
movsb
lahf
jmp
out
inc
push
andnps
insl
mov
push
ss
aad
pushf
popa
rcrb
inc
cli
in
ret
pop
stos
pop
je
cmp
inc
mov
push
lods
cwtl
dec
je
stos
dec
pop
pop
in
pop
jg
jl
je
jmp
pop
push
addr16
lods
andb
les
leave
in
and
sub
mov
leave
pop
cli
loopne
dec
stos
sbb
dec
in
ret
dec
xlat
sub
cli
ljmp
lahf
repnz
push
faddl
pop
push
jbe
xlat
nop
and
push
or
incl
or
int3
or
adcb
cmpsl
mov
data16
cmc
dec
push
sub
xor
decl
leave
lock
jmp
in
not
fcoms
popf
sub
jnp
and
xor
ljmp
clc
jmp
push
lret
fs
xor
push
adc
stc
push
loope
pop
lret
je
jmp
fmulp
stc
je
loop
icebp
repnz
lods
int
orb
stc
arpl
rorb
jle
fcomip
lcall
movsb
movsb
dec
js
push
shrl
insb
shrb
lret
movsl
fsubrs
sbb
incl
pop
mov
xchg
leave
push
hlt
sbb
mov
adc
mov
js
xor
add
inc
mov
lods
stos
sub
cmp
adc
repz
das
inc
xor
xor
ljmp
lcall
sub
jbe
enter
jae
aam
bound
decl
mov
insb
sti
mov
xorl
std
mov
pop
lcall
iret
dec
and
push
pop
shrb
call
scas
xor
sbb
sbb
adc
sti
sti
mov
incl
or
lea
pop
adc
test
insl
aam
xchg
test
dec
pop
outsl
mov
pushf
imul
daa
fcmovnu
mov
filds
cmpsb
loopne
jl
dec
add
arpl
sahf
mov
pop
incl
push
ret
inc
lods
lods
jge
shll
enter
iret
mov
aad
inc
popa
out
ret
cmp
test
or
mov
cmp
dec
cmp
ljmp
add
frndint
mov
lcall
and
lods
fdivrp
es
pushl
mov
ret
mov
mov
add
fcompl
jg
lcall
pop
mov
cmp
cmp
xlat
dec
mov
xchg
js
ret
shlb
decb
std
fildll
rorb
push
cmpsl
sbb
add
jg
mov
pop
out
xlat
outsl
pop
push
inc
fnsave
push
and
call
cmpl
add
ljmp
mov
mov
aaa
test
dec
decl
push
sbb
rclb
addr16
popa
test
incl
mov
js
icebp
sbb
insb
xchg
mov
or
setnp
in
jge
jl
ljmp
lcall
add
dec
mov
mov
inc
push
loope
mov
dec
fwait
ret
iret
fisubl
imul
aas
jecxz
fdivr
arpl
lcall
cld
pushl
popf
movsl
or
inc
repz
daa
movsb
inc
bound
xchg
mov
in
pushf
shrb
pop
ljmp
cmpsl
nop
jno
popa
stc
dec
xchg
mov
negl
decl
xor
add
mov
push
ret
push
insb
hlt
jmp
lea
sbb
call
sbb
jno
loop
xor
mov
insb
jg
lcall
icebp
mov
clc
mov
repz
in
pop
mov
incl
ret
out
arpl
insb
mov
mov
cmp
adc
lret
arpl
jg
stc
fs
lcall
inc
fdivl
lahf
stos
outsb
sbb
fwait
push
call
lods
jnp
jge
cli
ja
mov
repz
mov
push
mov
sbb
mov
ljmp
cmp
lret
mov
xor
pop
dec
fimuls
lret
mov
inc
cmpsb
jle
mov
call
sbb
xchg
stos
or
lret
xchg
mov
call
dec
cwtl
lods
pop
dec
in
scas
mov
rcll
xchg
mov
sbb
imul
stos
iret
and
jnp
dec
push
test
or
mov
jp
incl
lods
sub
fisttpll
inc
jmp
popf
js
out
nop
pop
scas
cmp
mov
in
or
stc
out
jecxz
xchg
fwait
adc
into
mov
sbb
jnp
cmp
in
pop
test
das
xor
stc
adc
sbb
dec
jno
in
xor
decl
adc
dec
pop
sub
push
sbb
pop
cmpsl
ja
cmp
cmp
ja
cmp
lcall
xor
into
sub
js
out
sub
int
test
and
jg
pop
frstor
jle
or
movl
fs
test
ljmp
notb
insb
rcrb
fisubl
iret
and
cld
hlt
jns
add
gs
push
das
roll
push
or
pushl
stc
pop
jmp
cmp
dec
shl
gs
mov
xchg
test
add
ljmp
cltd
mov
cmp
rorl
lahf
xlat
xchg
mov
cmc
rorl
hlt
nop
out
xchg
mov
mov
jmp
test
dec
mov
es
loop
or
fiaddl
andb
cvttps2pi
call
lret
mov
xlat
xor
call
push
in
xor
xor
cltd
es
jecxz
mov
test
adc
sbb
movsb
sahf
jle
or
decl
push
sbb
ljmp
fcomps
mov
mov
inc
cmp
cmp
sar
pop
mov
pushf
pop
scas
dec
cmpsb
decb
fidivs
cmp
xchg
ret
pop
decl
test
int
idivl
outsl
aaa
sub
insl
sub
mov
cli
mov
push
cld
jmp
jns
jnp
push
dec
inc
dec
ss
xchg
lcall
fwait
out
in
test
repnz
jmp
mov
rcrl
jbe
jae
fwait
adcl
mov
insl
xchg
int
verw
mov
jae
cmc
add
push
std
inc
and
fld
ja
mov
and
popf
int
test
enter
dec
loope
jb
mov
lcall
fildl
xchg
mov
sub
fnstcw
rclb
push
cli
xchg
stos
test
pop
stc
mov
loop
daa
imul
push
jbe
jbe
stos
xor
idiv
filds
mov
sbb
insl
es
and
fsubp
xchg
inc
cmc
lcall
int3
mov
call
sub
sahf
lds
jmp
mov
outsl
rcr
or
pop
jnp
pop
icebp
or
dec
fwait
in
cmp
stos
test
ljmp
sti
or
adc
and
das
cs
sub
pop
hlt
ljmp
jno
incb
add
adc
jmp
out
xchg
enter
jmp
jno
ljmp
cli
dec
xor
or
int3
cltd
iret
add
xchg
pop
mov
or
fimull
pushl
popa
xor
xor
sbb
repz
sub
push
xchg
cmpsl
add
das
pop
sub
lcall
fbstp
inc
inc
movsb
sti
add
inc
mov
pop
xchg
pop
mov
movsb
sarl
jae
mov
call
mov
xor
inc
xchg
loope
push
sbb
repnz
clc
jmp
pop
lret
lock
test
outsb
sub
cmp
mov
fimuls
call
les
pop
rclb
pop
nop
and
bswap
push
loop
divb
decl
ret
cli
loopne
dec
cmc
sub
add
mov
xor
fisttpl
pinsrw
lods
fdivr
imul
sub
push
inc
xor
fisttpll
jae
adc
dec
test
mov
out
inc
adc
add
xor
push
or
inc
and
adc
popf
mov
mov
das
cwtl
lcall
push
mov
inc
ja
or
scas
jecxz
insb
mov
call
push
cmpl
out
icebp
ror
adc
pop
cmp
gs
in
mov
les
mov
test
mov
arpl
test
mov
add
pop
sahf
push
iret
push
push
cmovl
add
data16
sbb
sub
pushl
xchg
mov
leave
inc
fsts
mov
xor
adc
inc
repnz
incl
jno
arpl
push
or
lds
in
sub
push
arpl
stos
enter
rclb
mov
cmp
push
push
jb
cmp
push
repnz
mov
fs
push
push
insl
adc
push
rcr
mov
jmp
sub
jge
or
cmp
jmp
add
mov
rcr
sub
and
push
mov
ret
mov
ljmp
repz
ss
sub
jnp
mov
jge
xor
add
xor
jae
repz
decl
fists
xor
fwait
dec
adc
add
mov
xchg
cmp
adc
add
pop
lods
inc
call
pop
xor
stos
je
shl
ljmp
insb
rcll
sbb
repz
pushl
pop
les
out
mov
setp
or
out
jne
aas
fdivrl
pop
mov
in
inc
bound
cmc
frstor
pop
insl
cmp
mov
pushf
inc
push
xchg
loopne
sub
add
push
jmp
sub
loope
xor
and
inc
or
jmp
mov
pusha
mov
iret
mov
xchg
lret
rolb
mov
movsl
push
mov
or
es
loopne
cld
incl
inc
stc
mov
pop
ret
push
test
out
add
cmpsb
or
lcall
das
clc
pushl
sbbb
mov
add
add
stos
clc
ljmp
clc
cmp
out
push
sbb
mov
jmp
ja
jg
cs
jecxz,pt
out
adc
sub
stos
lahf
test
dec
jmp
incl
or
sahf
aaa
addr16
lods
ljmp
cmp
mov
mov
daa
inc
lods
testb
xchg
clc
cwtl
dec
lds
fwait
jl
mov
sub
in
pop
aas
mov
loop
pop
ret
add
pop
and
aas
pushf
adc
std
jmp
push
cmp
lcall
add
into
lcall
push
adc
jb
testb
mov
sbb
or
das
sar
jg
ficoms
sahf
push
and
adc
mov
cmp
lcall
jns
add
push
mov
inc
add
mov
or
or
clc
rcrb
pusha
jns
pop
ret
adc
and
xor
xchg
sbb
sti
push
mov
xor
loop
cmp
out
xchg
dec
mov
or
lcall
sbb
pusha
scas
xor
rclb
pushl
fwait
int3
scas
dec
sbb
dec
ja
mov
aas
in
jecxz
ficomps
inc
and
nop
sarb
mov
dec
add
mov
and
lock
call
ficompl
imul
ja
psllq
xchg
rcll
inc
stos
push
ljmp
out
cmpsl
and
jmp
sbb
es
pop
inc
sbb
jne
aaa
pop
ljmp
int
lods
ret
jbe
mov
jns
lahf
push
xchg
popa
inc
sbb
push
std
pushl
rolb
js
popw
std
incb
rolb
fwait
js
mov
ljmp
mov
arpl
xchg
stos
popf
push
test
test
test
dec
stos
dec
sbb
cld
incl
icebp
sbb
push
int
inc
xor
mov
outsl
out
fsubl
add
lcall
repnz
xchg
sti
jns
aas
or
mov
pop
repz
and
jg
sti
and
outsw
bound
or
clc
adc
pop
aam
push
hlt
add
jg
jg
shlb
add
lods
mov
mov
fcomip
pop
mov
mov
mov
lcall
cmp
and
xor
dec
cld
xchg
jbe
out
sbb
xor
sar
mov
ds
jp
loop
xor
jecxz
mov
lods
jg
dec
inc
cld
pop
int3
ljmp
jp
adc
ljmp
mov
and
sbbl
call
loopne
int
jp
fstpl
decl
ds
push
gs
adc
sbb
sbb
xlat
loop
aas
movswl
or
ljmp
jle
es
daa
jecxz
leave
dec
cmp
jl
fmuls
inc
push
mov
jmp
add
std
mov
jge
sub
mov
pushf
in
stos
inc
mov
push
xchg
sti
sub
push
ja
xchg
aas
xorb
xlat
decl
cmp
dec
cmc
in
and
in
in
fstl
ds
data16
dec
addr16
lock
xrelease
sub
in
mov
mov
cli
pusha
popf
sbb
inc
ret
leave
aas
jae
aam
sbb
cmp
in
jmp
inc
js
xor
hlt
xchg
xchg
jae
xadd
mov
ret
dec
je
hlt
xchg
ljmp
xchg
in
lods
and
icebp
push
mov
add
movsb
mov
jmp
std
push
out
or
mov
ss
lcall
imul
jl
loopne
push
xchg
pop
movsl
aaa
adc
mov
or
mov
push
rcll
lods
ljmp
adc
pop
data16
je
shlb
pop
imul
roll
jg
jmp
cmp
jnp
sub
aad
cmp
scas
inc
lea
shr
cld
jo
fs
sarl
dec
pop
mov
mov
sbb
mov
pop
inc
pop
mov
mov
xchg
call
jle
jb
pop
loopne
je
subb
and
mov
cmp
lock
push
adc
cmpsl
jp
sbb
ror
dec
paddsb
jb
inc
movsb
add
cs
fstpt
and
cmp
jecxz
adc
pop
xor
ja
hlt
repnz
setae
adc
jbe
lret
fbld
pop
ljmpw
add
ret
jno
xor
sar
call
or
xchg
mov
sub
and
aad
xchg
sub
sbb
inc
ret
mov
xor
pop
inc
loopne
daa
cmp
test
sbb
shrl
jl
lcall
inc
shl
xor
sarb
jg
mov
out
pop
andl
xor
out
test
mov
xchg
add
dec
or
mov
test
dec
arpl
cmpsl
scas
dec
je
or
mov
jo
push
rorb
xchg
lea
ja
jg
jo
into
inc
inc
ret
lcall
shlb
lcall
jmp
sub
fs
mov
xor
push
sub
xor
icebp
mov
stc
scas
push
jbe
mov
mov
loopne
call
xchg
add
aam
pop
stos
fstp
mov
lods
call
repz
fcmovnbe
xor
mov
add
adc
leave
inc
xchg
jecxz
dec
ljmp
cmp
loope
cmp
data16
push
mov
cmp
jmp
and
imul
mov
jns
xlat
dec
call
push
decl
lods
shl
daa
mov
cmp
negb
sub
repz
sbb
dec
cmp
in
call
mov
mov
and
xor
mov
or
inc
lods
xor
xchg
pop
ss
pushl
jne
lret
push
call
push
aas
add
mov
lods
mov
call
sarl
aaa
mov
vunpckhpd
das
adc
movsl
sub
jmp
add
jno
les
push
cwtl
jp
in
push
xor
ja
xor
shlb
cmp
fists
jg
jbe
fmuls
test
inc
out
jne
or
push
out
sub
mov
push
push
popa
or
test
out
out
out
cs
cmp
cmpsl
cwtl
sbb
imul
sub
dec
adc
or
lret
cs
xor
and
testb
fistl
fiaddl
call
iret
pop
xchg
or
and
imul
dec
and
fisttpll
loop
ss
jo
lods
es
arpl
and
out
xchg
fisubrs
push
sarb
jno
xlat
inc
lret
inc
xchg
incl
cld
pop
movsl
sbb
icebp
lods
movsb
outsb
push
ret
gs
mov
push
ret
inc
inc
adc
jle
leave
clc
and
call
inc
xor
fs
ljmp
bound
sti
xchg
pusha
cwtl
jle
inc
or
add
ljmp
imul
movsb
mov
xchg
ret
sbb
pushf
lds
and
lcall
sahf
and
arpl
in
add
mov
jg
mov
inc
je
dec
aam
mov
insl
jmp
mov
fldl
xchg
lea
jo
test
cltd
out
mov
fcomip
jp
es
sub
aas
mov
xor
aaa
mov
inc
cld
adc
jb
lock
mov
test
xor
push
adc
adc
test
cmp
iret
pop
in
push
jge
mov
fs
lcall
xchg
pusha
mov
or
call
push
bound
stc
into
adc
insl
lret
sar
jmp
mov
cwtl
sub
lcall
sub
repz
aam
and
mov
mov
lods
stos
xchg
mov
out
sbb
icebp
pushl
push
clc
jl
jmp
mov
xor
das
xchg
jle
lea
lcall
imul
sahf
out
loope
dec
mov
xor
pop
sub
push
movsb
repnz
insl
iret
insb
xchg
dec
clc
jmp
idivl
int
mov
push
add
jge
cmc
loope
inc
lahf
movsl
data16
out
aad
add
ja
pushf
ljmp
cwtl
mov
pushl
xchg
mov
sbb
aaa
stos
lret
lret
sub
push
fldcw
in
in
pop
pushl
rcl
jge
test
orb
xchg
je
shlb
xchg
call
mov
addr16
daa
data16
inc
out
jl
inc
xor
fwait
daa
xchg
jns
out
in
dec
or
xor
ljmp
jg
xchg
cwtl
cmp
push
outsb
roll
add
pop
lock
mov
jmp
shrb
dec
sahf
fldt
fdivr
jmp
inc
jg
sbb
cmpl
imul
ljmp
call
mov
hlt
popf
xchg
cmpsb
ljmp
pop
and
test
decl
das
and
sahf
push
push
mov
push
sbbb
xor
lahf
pop
xor
sub
jbe
decl
cmp
mov
jae
inc
mov
arpl
xchg
jp
xchg
xlat
dec
daa
or
jl
lods
mov
or
mov
fwait
cmp
xchg
inc
mov
ss
pop
adc
inc
push
fcoms
xorl
fwait
insb
push
cmp
lcall
sub
push
jbe
inc
gs
out
clc
ljmp
inc
pop
iret
jle
mov
xchg
jle
adc
int3
mov
stos
repz
fs
in
es
lods
ss
scas
mov
xchg
mov
add
inc
pusha
push
push
cmp
ficoms
adc
adc
imul
inc
jno
adc
mov
or
in
jecxz
xor
dec
mov
adc
shll
pop
pushl
inc
jno
pop
cmp
and
xchg
clc
xchg
rcrl
mov
jmp
sub
test
push
test
das
out
test
pop
out
std
stos
pusha
jno
call
fwait
sbb
mov
negb
lods
js
rolb
adc
aaa
mov
jmp
mov
sbb
call
adc
stos
js
sub
lds
adc
xorb
ljmp
lret
popf
mov
mov
pop
adc
xchg
cmp
decl
jne
sahf
movsl
add
js
jo
sarb
cmc
hlt
popf
cmpsb
movsb
mov
mov
pop
add
test
jbe
pop
pop
pop
mov
je
push
pop
and
out
lock
lcall
push
sbb
in
addr16
das
pusha
pop
mov
pop
push
pop
dec
mov
fistps
and
xor
dec
ss
int
cmp
jle
xchg
repz
fldl
leave
clc
adc
call
adc
ss
xchg
gs
and
imulb
in
rcrl
mov
push
pop
sbb
incl
lret
dec
popa
push
pop
or
enter
xchg
in
sub
pop
clc
popa
sub
sbb
jno
dec
out
push
shll
fcos
lahf
shl
lret
sbb
cli
mov
push
sub
lahf
lcall
gs
in
fmuls
jns
xchg
leave
cmp
jg
and
jmp
sub
call
lahf
pop
in
gs
add
dec
adc
fisttpl
test
call
add
loope
sub
mov
inc
repnz
xchg
popf
cltd
mov
cvtps2pd
cmc
mov
mov
gs
jmp
pop
outsl
push
test
nop
out
lahf
jnp
fiaddl
cmp
and
and
nop
lahf
rolb
cmp
inc
jl
lcall
orb
push
icebp
fdivrp
mov
ss
xor
ret
or
pop
das
sbb
jl
andps
out
fidivl
push
mov
icebp
inc
pushl
adc
pop
aad
mov
jnp
ret
push
test
mov
pop
ja
dec
testb
sub
sahf
push
jne
xchg
pushfw
jno
cltd
stc
orb
ljmp
je
lret
imul
aam
fwait
push
in
sbb
xchg
leave
or
and
push
decl
mov
mov
aad
movsb
xchg
ds
pop
stc
aas
lods
fwait
pop
pop
cld
cli
inc
pop
cwtl
sar
ljmp
imul
lahf
outsb
clc
roll
mov
add
xchg
je
faddp
aam
mov
xchg
pop
pop
loope
sar
decl
cmp
sbb
dec
mov
inc
loopne
push
or
aad
test
sbb
add
lock
lcall
jnp
xchg
mov
mov
scas
sti
loopne
pop
dec
repnz
ljmp
xor
test
mov
pushf
pushf
and
mov
pop
mov
jbe
sbb
adc
cmp
mov
sub
inc
repz
xchg
fcmovb
jge
and
pop
or
inc
push
rclb
inc
sbb
jge
cmpsb
xor
inc
add
dec
mov
shrb
adc
mov
orb
shll
fadds
stos
sbb
and
inc
sahf
nop
mov
call
aaa
sbb
movsb
test
mov
push
ret
sahf
push
cwtl
dec
add
fidivl
mov
rclb
or
xor
cmpsl
inc
fwait
cld
incl
es
push
sbb
test
pusha
cmp
sbb
sub
adc
and
call
push
repnz
mov
cmp
adc
cmc
out
bound
push
sbb
jge
out
clc
ljmp
popf
xlat
js
push
fs
cmp
sub
shlb
and
mov
decl
cmp
fnstenv
out
pop
decl
jno
mov
bound
mov
fdivrp
pop
ljmp
jno
lods
shl
inc
dec
repz
arpl
aam
stos
sti
lahf
adc
imul
outsl
clc
stos
addr16
pop
loopne
notl
adc
sbb
imul
int3
leave
std
popf
ret
out
dec
dec
scas
loopne
sbb
jmp
repz
jne
pushf
rorb
int
pop
clc
stos
out
pop
mov
in
xchg
or
xchg
clc
rcrb
insb
xchg
sub
std
pop
icebp
pop
xchg
dec
shll
popf
adc
push
sar
mov
sarl
jmp
addr16
cmpsl
sahf
xor
jge
xchg
xor
mov
cli
add
std
out
out
jb
xchg
jmp
mov
lcall
popa
add
dec
stos
inc
call
std
das
mov
mov
inc
add
movl
out
shl
iret
pop
xchg
inc
mov
mov
fdivr
iret
sbb
in
test
test
dec
data16
sub
or
add
add
incl
mov
jl
fsubrl
js
inc
into
popf
cmp
jp
ficoms
sbb
in
pop
adc
pop
xchg
add
dec
mov
dec
mov
repnz
pop
ljmp
add
loopne
retw
xor
imul
inc
test
or
out
into
bound
add
cmpsl
jnp
js
push
in
je
xlat
cmp
imul
aas
lahf
ljmp
sar
call
filds
mov
xor
mov
bound
test
stos
add
lock
jg
mov
cmp
push
mov
ja
mov
test
mov
jns
in
clc
adc
ljmp
scas
test
pop
and
lods
mov
inc
ljmp
lahf
pop
mov
fcompl
xlat
inc
add
jbe
jo
xchg
push
dec
jg
lcall
outsb
jbe
push
dec
pushf
or
lods
and
icebp
loope
pop
sub
call
mov
xor
bound
mov
push
fcomps
popa
addr16
pop
arpl
in
sub
sub
sar
imulb
jl
ljmp
hlt
or
mov
push
jg
mov
ret
add
cbtw
mov
jp
xchg
sti
mov
xchg
push
push
mov
stc
jecxz
mov
mov
mov
andl
in
sub
push
stos
call
inc
jnp
adc
out
mov
xlat
xorb
mov
sub
add
adcl
cmp
dec
dec
and
in
outsl
xor
clc
mov
in
inc
aaa
addb
stos
outsb
popf
orl
mov
loopne
in
shl
inc
js
mov
fs
add
mov
inc
push
sub
xlat
in
sub
addr16
dec
dec
jle
mov
sbb
pop
sub
incl
outsl
dec
icebp
sbb
xchg
cs
lods
mov
jecxz
push
jle
clc
enter
cli
xor
enter
jmp
pop
sbb
push
fs
add
jo
lods
fsubrs
incl
mov
jmp
mov
adc
push
js
cli
sub
mov
inc
call
in
movsb
push
and
inc
inc
mov
cmp
cmp
xchg
aaa
add
mov
xor
test
mov
xchg
out
dec
cmp
inc
mov
xchg
ret
jmp
std
ret
push
mov
adc
push
mov
lods
sub
stos
aaa
cld
jmp
lock
out
xchg
rorb
or
call
shlb
mov
sbb
xchg
add
push
test
movsb
cmpsb
cmp
movsb
shlb
inc
ljmp
add
sub
mov
and
jo
push
jmp
mov
jg
xchg
xchg
outsb
jno
popa
xor
scas
and
out
sub
inc
dec
jo
iret
arpl
mov
push
pop
scas
aaa
mov
mov
lock
decl
andl
adc
pop
pushf
sbb
mov
gs
jns
mov
cli
out
rolb
movsb
dec
rolb
mov
je
cld
mov
mov
shll
into
ret
pop
hlt
out
add
xchg
add
pop
mov
mov
push
in
and
icebp
ja
mov
adc
out
xchg
bound
or
lcall
lock
clc
ret
or
mov
lds
cmpl
inc
out
cli
call
les
js
cmp
imul
sub
imul
aam
scas
test
mov
xchg
inc
aad
js
push
cwtl
movsl
dec
dec
addr16
push
lods
loope
cld
outsb
stos
mov
mov
shll
movsl
jle
lds
ljmp
pushf
lcall
rcrb
push
insb
ds
push
pop
mov
lods
lcall
fwait
push
dec
mov
mov
in
mov
js
arpl
add
inc
inc
pop
cs
lea
sar
addb
jns
stos
add
sub
fcomps
and
sbbb
repz
jbe
fdivr
insb
sbb
jmp
stos
aam
out
mov
jp
pop
loope
xlat
popa
pop
sbb
icebp
rcrb
cmp
decl
sti
mov
push
add
jae
xchg
pop
je
and
push
repnz
push
test
dec
dec
sar
jmp
add
cmc
hlt
cmp
dec
push
lods
jae
jns
rorl
push
cmp
mov
pop
xor
incl
adc
repnz
lods
je
divb
sub
popa
lret
mov
xchg
fimull
lcall
fsubs
sub
cwtl
mov
push
pop
mov
or
jmp
addr16
pushf
cmc
addr16
aaa
std
enter
mov
mov
mov
mov
jmp
outsl
incl
cmp
pop
mov
mov
pop
in
out
in
mov
add
mov
outsl
daa
sbb
call
cltd
ret
mov
rorl
pop
aam
sbb
and
cmc
call
rcl
negl
mov
mov
pop
jae
rol
mov
dec
mov
xor
sbb
iret
lahf
dec
inc
mov
xor
xchg
incl
fnstcw
repnz
mov
sub
inc
pop
hlt
out
fmull
decl
and
mov
ljmp
mov
dec
ljmp
ljmp
adc
inc
sub
jl
shlb
inc
and
bound
fdiv
dec
fcomip
push
int3
fpatan
lods
in
mov
test
adc
xchg
out
lcall
mov
aad
call
rcl
aas
cmp
push
aaa
mov
dec
mov
ffreep
enter
test
ret
imul
decl
addb
stos
subb
aas
and
or
pop
das
decl
sbb
mov
mov
jl
rcl
mov
push
outsb
js
sbb
addr16
xchg
mov
jmp
rcrl
je
push
jecxz
in
push
ret
insb
clc
std
add
jp
pop
mov
decl
imul
jge
daa
lcall
nop
ret
sbb
inc
shr
pop
into
les
and
decl
ljmp
jl
xchg
push
sbb
fcmovbe
add
out
xchg
dec
and
mov
arpl
lret
sub
pop
roll
daa
push
xor
jg
mov
xchg
pusha
clc
inc
jb
push
cmp
movsb
fldcw
push
sti
and
call
inc
add
ljmp
jne
sub
xorb
iret
rcrb
fistpl
out
cli
xor
or
inc
rcll
call
insb
and
lcall
cvtps2pi
lret
mov
lea
or
jmp
icebp
jb
mov
pop
inc
lcall
out
mov
cmp
sbb
mov
and
add
cwtl
jge
repnz
cmpsb
jmp
stos
mov
ja
imul
into
leave
out
xchg
insb
fisttps
mov
push
arpl
inc
lock
pushl
sbb
les
adc
rclb
outsl
clc
mov
out
cmpsl
outsl
sub
push
shlb
cmp
pop
sbbl
jg
jnp
mov
fdivl
fisubrl
fsubp
inc
in
mov
scas
cmpl
lret
pop
and
test
jl
cmp
mov
or
repz
aas
xor
fstps
call
iret
jne
adc
jae
pop
xorb
adc
mov
jg
jmp
jbe
enter
or
lds
lea
daa
push
sbb
pushl
xor
mov
xchg
jmp
shrb
stc
and
push
lcall
mov
inc
int
ja
jae
and
shlb
incl
les
pop
lods
mov
cmp
xchg
push
jge
sub
inc
hlt
lret
call
popa
scas
mov
xor
repz
or
call
std
mov
ficompl
sahf
jl
cmp
sti
adc
filds
jecxz
push
ljmp
inc
mov
ljmp
inc
dec
mov
adc
push
das
cli
pushl
push
test
add
out
jno
jge
aas
adc
lcall
es
cmpsb
call
in
in
out
or
cwtl
sbb
data16
ljmp
push
mov
dec
sub
lods
xchg
xchg
mov
cmp
jmp
push
movsl
or
sub
jnp
mov
aaa
test
inc
imul
adc
mov
dec
add
mov
movsl
mul
or
cli
daa
pop
out
add
mov
dec
mov
call
or
cld
bnd
sbb
mov
pop
inc
inc
or
scas
add
pushl
add
ret
push
cmpsl
cmpsb
adc
daa
pop
shll
jg
push
popa
bound
pop
cmp
leave
jg
cmp
les
cli
inc
adc
mov
mov
pop
mov
push
lods
inc
in
lea
cmpl
popa
mov
incl
xchg
cmp
out
pop
aaa
shl
scas
pop
dec
shll
movsb
push
ds
cmp
add
fnstsw
ret
xchg
add
mov
push
enter
push
bound
in
out
pop
ret
mov
in
xchg
clc
mov
lcall
pusha
jmp
mov
xchg
int3
pop
jp
push
imul
out
scas
clc
push
lcall
pop
ss
in
faddl
decl
clc
sub
pop
mov
cltd
movsl
cld
cltd
outsb
lock
call
or
and
mov
and
or
repnz
outsl
cli
xchg
add
outsl
and
sbb
or
shll
pop
mov
push
popa
cmp
pop
insb
dec
adc
fsubrl
xchg
inc
insb
dec
cwtl
add
ja
jg
dec
test
pop
stos
lret
xor
cld
lcall
inc
cmp
cmpsl
call
in
dec
push
pop
xchg
jbe
cmp
cmpsl
ljmp
jmp
jno
adc
push
int3
ljmp
pushf
jno
cmpsb
int
mov
mov
lcall
outsb
push
push
pop
movl
lret
hlt
jg
or
fildll
neg
stc
cmp
adc
sti
into
cmp
push
imul
decl
or
jge
mov
and
movsb
stos
mov
lock
ljmp
mov
sub
mov
xchg
xchg
ja
sub
fbstp
out
sbb
outsl
xor
jmp
sbb
mov
push
icebp
nop
pusha
cmp
mov
mov
into
cli
sub
push
ret
lods
or
aas
in
and
push
push
add
inc
ljmp
sbb
pop
ja
push
xor
cmp
lcall
loop
fdivrs
call
fiaddl
lret
and
imul
mov
in
adc
jmp
decl
cwtl
out
movl
fdivr
cltd
push
orb
rcl
outsl
cli
mov
fisttpl
xchg
mov
lret
sub
jns
pushf
jae
shrb
sbb
sbb
xchg
mov
sahf
sbb
xchg
call
leave
test
add
jb
mov
arpl
hlt
or
push
and
decl
iret
ret
fistpl
test
inc
cltd
shl
and
mov
mov
mov
push
xchg
pop
or
pushl
sub
mov
and
pop
inc
repnz
lock
test
aaa
mov
je
in
push
dec
xchg
dec
and
jl
adc
inc
or
js
cwtl
aad
jmp
cmp
sub
mov
cli
les
sub
jecxz
test
lret
jne
pusha
loop
insb
lock
sar
in
loope
cmp
icebp
ja
bound
hlt
shll
pop
inc
xlat
rcrl
ljmp
push
adc
mov
jb
jle
xlat
mov
andl
out
add
jle
out
adc
in
sarl
sub
mov
loopne
shrl
sbb
rcrb
int3
jmp
jp
or
adc
push
mov
in
mov
int3
into
pop
mov
add
in
ljmp
loope
mov
and
mov
mov
push
sbb
fsts
sbb
fistpl
sub
out
cltd
lock
negb
pop
addl
incl
jg
nop
mov
inc
adc
push
xchg
cmpsl
lods
sub
out
aaa
std
jg
mov
shlb
pop
das
pop
xor
hlt
xchg
inc
fisubrl
mov
sbb
call
add
stos
sqrtps
imul
lret
ret
push
mov
loopne
mov
in
xor
sbb
mov
ja
jnp
pop
std
jmp
mov
dec
inc
xorl
lcall
mov
pushf
pop
dec
jp
mov
mov
scas
lcall
movsb
bound
push
pushf
sbbb
jae
push
dec
lcall
ljmp
jnp
fimull
fs
dec
mov
rorl
test
dec
mov
dec
inc
iret
iret
pop
fcmovbe
clc
jp
mov
mov
jp
jo
inc
jbe
add
pushl
in
jecxz
fwait
push
xor
push
add
lock
and
in
and
jnp
ds
pushl
fists
xlat
push
mov
test
push
sub
pop
or
ljmp
fisttps
stos
cmpsl
add
xor
ficompl
mov
stos
mov
jbe
sar
push
aam
mov
sub
loope
push
xchg
fsubl
out
repz
push
sub
insb
fisubl
std
jmp
rdtsc
idivb
pop
repz
jge
arpl
movsl
stc
sbbl
jg
call
clc
inc
int
lea
cmp
ss
test
pop
cwtl
sub
or
ljmp
mov
jbe
insb
xchg
leave
in
in
ljmp
clc
filds
xchg
imul
jnp
lahf
call
jg
out
mov
test
mov
adc
into
shrl
incl
xor
add
pop
fwait
mov
daa
fwait
xor
inc
repnz
mov
sub
decl
mov
push
insl
push
into
dec
push
lcallw
test
mov
cli
outsl
cli
call
daa
stc
enter
cmp
adc
xor
ljmp
sub
or
jno
lods
xchg
mov
into
xchg
jae
fisubrs
pop
ljmp
push
jmp
out
sti
push
or
mov
xor
sub
dec
fmull
call
incl
adc
jle
sub
test
or
in
sub
test
addr16
jns
in
hlt
mov
lods
jnp
adc
push
in
cld
fmuls
adc
jmp
mov
cmp
out
inc
out
pop
mov
fs
xor
pushl
sbb
mov
mov
add
shlb
mov
fwait
outsb
jae
out
and
in
xchg
dec
loope
ljmp
xor
jecxz
xchg
add
mov
cs
lcall
xor
jmp
test
pushf
mov
mov
mov
mov
pushl
jbe
jmp
movsb
insb
dec
cmp
inc
mov
shlb
add
and
mov
lcall
push
sbb
vunpckhpd
stos
mov
fcmovne
loop
ret
cmp
aaa
xchg
push
ret
xchg
shr
mov
scas
xchg
jl
gs
outsl
dec
jp
incl
pushf
stos
fdivrl
push
mov
mov
push
push
loop
or
clc
incl
push
shll
lcall
adc
andb
incl
xchg
lahf
and
insb
mov
mov
and
test
enter
mov
stc
adc
sub
shl
js
fstl
into
sbb
out
stos
test
jne
mov
mov
and
pop
fisubrs
or
aaa
std
pushl
test
sahf
inc
jp
xor
aam
or
or
sbb
idiv
jmp
xor
sarb
cmp
fbstp
decl
cmp
sbb
mov
je
jo
movsb
jb
lods
gs
in
test
int3
stos
sarb
loopne
jg
or
aam
int3
push
xchg
jl
negl
fs
incl
push
jnp
sbb
lret
lds
hlt
ljmp
rcrl
pop
fwait
inc
cmp
imul
add
add
cmp
fisubrs
xchg
outsl
popa
inc
push
mov
fdivl
ds
jg
insb
add
jmp
cmp
mov
add
cmc
pop
or
xchg
outsl
inc
cmp
fwait
testb
ss
xchg
mov
cmp
cs
int
or
ljmp
push
pushf
jmp
push
test
ljmp
out
sub
ret
lock
mov
popa
ret
and
inc
scas
fmull
xchg
hlt
push
adc
nop
adc
xchg
lahf
fisubrl
jmp
cltd
pop
out
dec
mov
xchg
sbb
push
mov
adc
dec
xchg
mov
sbb
inc
in
test
dec
pusha
xlat
js
test
aaa
mov
or
pop
cmp
jge
pop
dec
mov
dec
test
push
and
push
jecxz
adc
lcall
incl
xor
mov
and
cmpsl
push
and
inc
push
or
xchg
outsl
sbb
subb
pushf
cld
dec
int3
out
adc
subl
imul
inc
xchg
scas
decl
icebp
cmpsb
dec
pop
mov
scas
rol
lret
pop
ljmp
addr16
out
xor
aam
lock
push
and
cltd
imul
addr16
ljmp
hlt
out
loope
sbbb
mov
mov
pop
sbb
aam
popa
or
fcomip
call
popf
or
mov
test
add
sbb
pushl
std
bound
jge
out
add
imul
int3
cmpsl
incl
in
adc
add
xor
or
iret
adc
outsl
clc
cli
inc
push
jle
int
xchg
inc
hlt
clc
out
dec
mov
mov
and
sbb
jg
in
cmpsl
scas
or
mov
orb
gs
out
sbb
xchg
lcall
xor
in
imul
leave
mov
fidivl
dec
decl
ljmp
mov
pop
and
cwtl
stos
mov
bound
in
rolb
pushaw
rcrl
inc
incl
push
mov
das
and
outsl
inc
dec
or
call
rcl
jno
mov
jns
inc
xorl
into
xor
cmpsl
inc
jo
stc
xor
ds
gs
insl
stc
pusha
xor
call
fdivs
rclb
or
in
mov
mov
in
mov
test
idiv
decl
mov
xor
jno
adc
lock
or
sbb
jmp
jbe
push
divb
aaa
adc
std
adc
arpl
cmp
jp
and
jb
call
movsb
pop
inc
push
testl
jmp
fnstsw
pop
daa
sub
or
call
enter
movsb
cld
push
aad
or
push
daa
movsb
add
insb
lcall
xchg
adc
out
incb
movsl
ja
dec
add
push
loop
leave
push
jg
shll
xchg
shrl
push
scas
decl
inc
outsl
xor
orl
push
inc
sti
cmc
pop
bound
rclb
mov
popa
jb
sti
cmpsb
cmp
mov
push
inc
sub
jg
test
jbe
call
es
fsubp
sbb
adc
lea
mov
mov
mov
cld
incl
mov
pop
shlb
outsl
sbb
jecxz
decl
jle
ret
xchg
mov
pop
push
cmp
movsl
and
std
or
push
lds
dec
scas
mov
rorl
push
dec
aaa
push
xchg
rcrl
cmc
leave
test
incl
leave
decl
sub
mov
dec
lock
or
iret
dec
push
jg
hlt
cmp
nop
mulb
stos
outsb
and
or
push
pop
decl
scas
arpl
add
dec
mov
adc
sub
aam
lock
cmp
pop
push
push
ja
jle
jmp
lods
adc
cmp
jp
aas
cmp
daa
cmp
call
les
out
into
in
pop
gs
adc
cld
repnz
lods
int
xchg
fwait
popf
sub
movl
push
inc
mov
push
test
scas
mov
roll
jb
sub
mov
mov
sub
lret
in
unpcklps
xor
pusha
push
mov
and
push
scas
mov
mov
inc
inc
mov
lods
imul
call
in
jg
decl
orb
ja
jne
andl
sti
bound
pop
xchg
out
orl
add
incl
jo
mov
sbb
leave
lds
add
inc
sahf
dec
pop
sbb
stos
push
into
fimull
cmpsb
enter
stc
xorl
xchg
jge
jmp
sub
cli
pushl
test
sahf
cli
es
aaa
into
inc
mov
dec
nop
aas
xor
repz
pushl
sbb
es
jnp
int
or
lock
repnz
xlat
shll
fiadds
push
hlt
inc
cmc
mov
and
lods
xchg
imull
les
jle
adc
inc
push
je
lret
pop
lahf
pop
popf
in
jnp
ret
lret
push
xchg
mov
and
mov
ljmp
mov
incl
ja
mov
xchg
lea
jg
shlb
mov
lds
pop
pop
scas
jb
popa
fistl
sbb
or
cmove
fildll
lahf
push
xchg
and
mov
adc
sbb
xlat
rcll
dec
xchg
mov
dec
push
push
fmul
std
mov
fwait
sub
xor
out
inc
cltd
push
pushf
lcall
call
jl
push
mov
push
add
inc
add
in
nop
dec
int3
dec
lock
fsubs
out
mov
or
pop
cltd
adc
in
cmpsl
sub
rclb
jle
hlt
jmp
cmpsl
sahf
dec
rorl
sub
loope
jbe
jle
fwait
ljmp
aas
mov
incl
sbb
pop
jp
push
dec
shlb
pusha
sbb
sbb
and
daa
fmuls
xor
incl
lahf
cltd
out
push
adc
and
dec
cmpsl
or
and
dec
repnz
mov
std
mov
jne
out
stos
mov
adc
cmovs
out
pop
std
lahf
jg
push
add
jg
adc
cld
mov
mov
test
lret
nop
push
push
sbb
std
call
pop
in
jge
pop
arpl
xor
sub
dec
dec
jns
out
push
mov
mov
int3
sbb
sbb
and
add
les
or
mov
test
ljmp
rcrl
xchg
aas
popf
or
sub
call
lret
imul
jmp
push
xor
pop
lcall
push
push
popa
in
sbb
pop
loope
out
mov
cmp
add
cmp
fisubrl
test
mov
sbb
xchg
aam
xor
xchg
arpl
or
push
adc
dec
xor
xchg
push
js
and
xchg
add
fs
add
and
lcall
pop
add
pop
mov
aas
add
test
push
sarb
pop
je
pop
ds
xor
ja
call
sbb
notl
add
sub
hlt
testb
clc
fbld
call
pushl
mov
dec
mov
scas
pop
pop
cld
test
inc
jae
lcall
mov
sbb
pop
pop
adc
je
icebp
jbe
mov
mov
sub
sub
mov
lds
decl
out
inc
iret
push
cmp
xlat
stc
lcall
iret
push
arpl
mov
dec
in
mov
xor
out
push
in
xchg
addr16
fadds
fwait
xchg
cmpsl
mov
or
push
decl
cmpsb
outsb
pop
and
stos
sbb
dec
xchg
cmp
fisttpl
daa
iret
jns
lcall
jmp
test
notl
cmp
xor
mov
mov
cwtl
dec
xor
incl
fcompl
lods
jp
ret
push
stc
in
lret
inc
adc
in
test
out
dec
sub
call
pop
add
and
cs
and
or
into
mov
jle
hlt
sarl
jmp
sarl
js
add
clc
jge
popf
scas
xchg
int3
int3
jg
lcall
and
cmp
push
mov
movsl
push
fistps
push
jno
sbb
dec
outsl
jg
xorl
fwait
imul
cs
push
or
xchg
xchg
mov
shlb
out
or
pop
dec
stc
push
cmp
inc
cmp
sbb
and
call
cs
push
jl
cmpsl
pop
sub
stc
and
decl
jge
enter
xchg
bound
iret
lock
mov
push
mov
in
pop
pop
sub
or
adc
scas
cli
dec
mov
out
lcall
mov
push
cmp
jno
int3
xchg
lahf
scas
and
push
dec
or
mov
dec
xchg
repz
sbb
sub
int
xchg
xchg
aas
adc
jno
inc
ret
push
mov
fs
adc
push
jle
sti
shl
inc
xlat
fldt
add
mov
sbb
insb
jae
cmpsl
insl
cs
jne
sub
sbb
mov
pop
outsl
js
hlt
dec
jecxz
incl
in
adc
test
rcl
mov
loope
leave
call
xor
shr
inc
sub
inc
pop
popa
mov
insl
mov
lret
ret
pop
xchg
xor
ljmp
pop
pop
ret
xchg
imul
out
daa
push
rcll
add
imull
in
xor
les
dec
test
cmc
mov
sahf
insb
pop
insb
mov
fstpt
pusha
pop
dec
scas
add
jbe
insb
repnz
cmp
aad
mov
repnz
pushl
xchg
rclb
mov
int3
stc
rcrb
js
movsb
in
shll
xchg
adc
adc
ljmp
popa
cmc
das
daa
js
sub
push
xor
int
sub
add
aas
repnz
push
fcmovnb
or
dec
jb
inc
push
fs
rcrb
sahf
xlat
dec
fstl
in
pop
cmp
lcall
and
adc
pop
inc
out
jbe
push
xor
nop
inc
adc
push
aas
inc
sub
inc
mov
clc
jne
mov
ss
and
pop
jg
pop
and
pop
mov
xchg
jo
test
bnd
jmp
popa
out
pop
jmp
dec
in
loope
lcall
ja
call
out
push
aas
jnp
cmpsb
push
ficompl
shll
mov
adc
jmp
decl
push
pop
sub
jb
sub
xor
clc
pushl
adc
fcmove
movsb
int
stos
in
pop
and
imul
push
imul
dec
aad
bound
cmc
mov
push
adc
ljmp
in
pop
jne
movsl
lods
mov
aad
in
or
popf
mov
sub
incl
jmp
scas
mov
xchg
test
mov
mov
mov
push
sbbl
jle
test
lods
xor
mov
imul
push
jbe
rolb
pop
xor
jl
sbb
test
mov
dec
xchg
xchg
dec
pop
out
cli
daa
stos
ret
jp
mov
lret
shlb
inc
xor
inc
test
mov
fnsave
push
xor
rcll
ds
jmp
dec
dec
sti
dec
sarb
int3
mov
sbb
ret
inc
adc
fwait
sub
jmp
and
or
pop
xor
in
movb
xchg
inc
add
jge
sarb
xchg
pop
inc
sti
test
pusha
jp
sbb
loop
out
jp
mov
push
adc
fists
jmp
subl
push
add
loope
mov
sbb
push
cmp
loopne
and
jnp
add
push
es
or
jns
xchg
dec
xchg
cmc
mov
je
sbb
cmp
iret
enter
push
pop
pop
cld
jg
into
push
ret
scas
hlt
push
cmp
repnz
aas
mov
pop
ljmp
and
loope
out
xchg
jne
xlat
adc
push
pusha
sub
cmp
add
push
mov
incl
and
rcrl
lods
inc
into
sbb
sub
imul
fstps
pushl
clc
inc
inc
mov
enter
mov
xor
test
jo
inc
minps
loopw
dec
lods
and
fbstp
test
shlb
mov
inc
fwait
and
out
pop
arpl
call
cs
inc
inc
ficompl
push
insl
je
pop
pop
int
dec
outsl
les
or
dec
mov
lods
mov
push
pop
push
fisttpll
pop
pop
mov
mov
cs
push
or
ljmp
aam
cmpsb
sub
jge
shrb
add
cli
jno
or
jmp
pop
std
sbb
sbb
sbb
cmp
pop
jmp
xchg
cmpsb
sbb
cld
jecxz
sbb
dec
cmp
push
and
outsl
add
incl
or
pusha
insl
negb
jle
pushl
andl
push
cltd
jg
icebp
cmpsl
test
jmp
sub
popa
les
mov
sub
push
loopne
adc
mov
push
rcl
mov
lret
icebp
cmp
mov
mov
rcrl
fcoml
ret
into
arpl
lcall
push
cmp
xchg
dec
mov
sub
mov
loop
xadd
cmp
call
scas
mov
leave
adc
int3
hlt
xchg
push
xlat
inc
cmp
dec
in
pop
push
clc
dec
inc
push
out
repnz
sub
jo
hlt
stc
pop
ljmp
add
int
mov
decl
cmc
sub
not
pop
sbb
rcrb
push
push
sar
ficoms
jecxz
pop
push
call
jbe
cmp
inc
mov
mov
cmpsl
mov
rcr
pop
sbb
movl
scas
clc
pushl
in
ret
mov
fistl
imul
ljmp
jg
push
cld
testb
in
popa
sbbb
outsl
and
mov
loop
sbb
jecxz
notb
jae
sub
sub
pop
cmp
rcr
in
lds
enter
ljmp
push
mov
sub
push
lods
jmp
ret
enter
in
add
push
dec
pop
pop
out
adc
mov
loope
and
xor
fsubrs
cld
xor
xchg
orb
sub
inc
adc
fldcw
bound
stc
dec
or
sar
call
mov
jle
fcoml
mov
sub
gs
mov
notb
dec
scas
not
add
jb
inc
mov
sub
not
sub
movsl
pop
in
cmpsl
lods
in
jle
movsl
inc
dec
jbe
jg
sbbl
jg
decl
mov
sahf
loopne
fnstsw
xor
mov
sbbb
sbb
jp
hlt
pushl
pop
lock
aaa
pop
dec
ss
mov
scas
jnp
clc
add
pop
and
call
push
repz
or
cld
dec
addl
xchg
pop
cs
bound
add
jge
fistpl
ljmp
in
mov
jne
sbb
xchg
cld
push
inc
pop
mov
cmp
ljmp
in
mov
push
jae
push
mov
notl
int3
stos
mov
call
fs
ss
decl
cmpsl
inc
cmp
leave
loope,pt
pop
loopne
lret
jo
inc
data16
outsb
lods
push
cmp
mov
adc
pusha
fs
cmp
mov
xor
mov
cwtl
loope
pop
ljmp
mov
ret
push
xor
fisubrl
dec
cli
xchg
mov
and
add
aaa
ljmp
std
lcall
adc
scas
mov
xchg
or
cmp
movsb
push
pop
mov
lods
je
in
daa
cli
in
push
mov
pushl
pop
pop
pop
mov
dec
mov
dec
push
adc
mov
jno
mov
mov
or
jge
fldl
je
stc
imull
stos
xor
xchg
jae
push
ljmp
and
cwtl
test
scas
add
jb
aas
dec
pop
xor
fsub
inc
xor
cmc
decl
jns
les
test
push
push
mov
mov
push
xor
stos
out
cmpsb
mov
mov
addr16
xchg
xor
stos
in
xchg
add
fcomip
push
xchg
add
ret
push
jbe
and
imul
aam
add
fbstp
jle
das
sub
inc
add
adc
jge
add
ret
push
loopne
sbbb
xchg
and
push
loop
fsubrp
or
push
std
ljmp
jle
insl
enter
popl
mov
cmp
pop
mov
sub
add
je
mov
fwait
or
xor
test
insl
fcom
adc
adc
inc
jle
incl
jb
and
inc
daa
push
adc
sbb
or
pushf
mov
xor
lods
xchg
addr16
aam
mov
mov
icebp
inc
lcall
fwait
data16
clc
push
xor
ljmp
sbb
arpl
das
mov
jne
rolb
pusha
lcall
test
pop
clc
stos
or
test
cpuid
sub
mov
clc
call
subl
xchg
lods
push
pop
pusha
pusha
fmull
ljmp
jbe
push
lds
pop
push
adc
lods
and
dec
pop
inc
lcall
lods
sub
pop
hlt
jg
mov
adc
mov
stos
repnz
insl
cli
sbbb
lods
scas
gs
mov
loope
xlat
push
jno
xchg
int
js
dec
or
sar
cld
into
mov
arpl
adc
cmp
xchg
sbb
testb
sbb
decl
add
cmp
mov
mov
and
ret
pop
in
jnp
sbb
pushl
adc
test
dec
lds
adc
sbb
pusha
leave
inc
xchg
filds
pushf
jle
pop
push
movsb
sub
fdiv
inc
call
or
out
pop
jae
xchg
pushf
rolb
fs
and
dec
stc
mov
jae
jg
pushf
inc
ja
ja
mov
jns
xchg
xchg
lock
xchg
das
ret
cmp
mov
data16
lcall
mov
inc
sbb
ret
sbb
xchg
stos
jae
adc
and
dec
iret
iret
incl
enter
xchg
and
cmpb
pop
mov
jg
jnp
cld
cwtl
add
dec
push
dec
out
push
je
sbb
xchg
sub
lea
loopne
incl
clc
mov
call
pop
out
test
mov
xor
fcoml
shll
xchg
mov
add
and
sbb
push
jg
pusha
cld
iret
pop
mov
cmp
xor
out
fcomip
pushl
shrl
dec
inc
aam
mov
ds
movsb
movsl
cmp
jmp
xchg
nop
out
clc
outsl
clc
add
icebp
xchg
lret
xchg
testl
jle,pn
ljmp
and
outsb
cmpsb
jo
cmp
mov
in
mov
rol
ljmp
shr
movsb
mov
push
in
push
sub
dec
mov
jnp
call
nop
cmp
inc
add
pop
push
jecxz
lods
xchg
push
sub
addb
dec
jmp
xchg
stos
cmp
insl
movsl
mov
jnp
ljmp
fnstenv
mov
xor
loopne
lret
sub
lcall
andb
mov
mov
data16
data16
sbb
ljmp
ficompl
shl
adc
clc
inc
and
adc
add
imul
imul
cli
mov
icebp
fldcw
outsl
outsl
jecxz
inc
ds
jnp
in
mov
mov
insb
rol
subl
mov
jecxz
sahf
call
push
insl
pop
jno
es
mov
and
fistps
cmp
andb
xor
inc
dec
pushl
mov
popf
out
pop
xchg
push
pop
jnp
push
fstps
orps
lock
push
sbb
shl
daa
outsb
or
xor
rcrw
xchg
push
jmp
aam
mov
xor
mov
jge
adc
rcrb
outsb
dec
adc
xor
repnz
lcall
mov
mov
int3
je
mov
mov
jmp
enter
sbb
out
jmp
pop
es
shl
jmp
mov
mov
into
cmpsb
adc
push
cmc
jle
sbb
clc
jecxz
jmp
xor
mov
test
inc
dec
dec
cwtl
dec
jp
add
loop
lcall
sbb
push
inc
xchg
mov
fucom
mov
sbb
inc
xchg
add
cmpsl
or
fldl
enter
jmp
lret
in
fadd
jns
mov
loopne
pop
mov
loop
mov
lcall
mov
add
shl
sbb
sbb
jae
xor
loop
mov
call
sub
add
ret
dec
cwtl
sub
and
ljmp
decb
sahf
add
or
iret
and
cmpl
das
decl
and
in
iret
loopne
cmpsl
lea
cmp
pop
lods
and
jecxz
out
add
dec
jbe
or
in
mov
push
dec
idivb
xor
inc
popf
jp
clc
stc
nop
inc
int3
ljmp
jg
sbb
jmp
fdivs
adc
aas
and
pushl
loope
icebp
sub
mov
cmc
add
andl
inc
lcall
movsb
mov
insb
test
inc
loope
pop
push
mov
or
mov
call
int3
rorl
mov
cmpsl
inc
jns
jo
add
add
mov
add
xor
cltd
jmp
scas
or
lods
jecxz
cmp
and
push
jnp
mov
xor
ljmp
inc
or
mov
jmp
outsl
call
pop
xlat
dec
decl
imul
sbb
cmp
or
cmp
jp
and
adc
sti
mov
ljmp
repz
adc
enter
aaa
cld
mov
sti
cmc
ljmp
mov
jmp
xor
outsl
mov
and
cmp
xchg
xor
jle
mov
add
out
aad
fstps
add
cmp
mov
lods
fsub
fdivrs
cmp
gs
rcll
add
xchg
and
adc
and
push
pop
fdivr
pop
cmp
mov
push
add
shl
popf
sub
in
hlt
je
jno
ds
mov
sub
test
mov
add
adc
decl
push
sub
fnstcw
push
std
jp
push
sbb
push
fdiv
cmp
mov
into
out
ljmp
icebp
inc
sub
ljmp
cmp
lcall
movsb
hlt
sbb
lcall
dec
mov
sbb
jecxz
gs
xchg
push
call
call
or
jnp
lret
mov
xchg
mov
scas
jecxz
xchg
xchg
push
andb
out
fnstsw
cmp
xacquire
xor
cmc
mov
ja
xlat
xchg
aaa
xchg
sub
sahf
outsl
dec
out
mov
decl
push
insl
fadds
and
xor
xchg
movsb
in
and
int3
rcr
mov
jmp
xchg
sbb
adc
ja
hlt
dec
mov
movsl
dec
pop
loop
out
pop
insl
add
sub
incl
mov
dec
xor
stc
dec
out
rorl
sbb
movsl
or
stc
addb
decl
jecxz
shll
mov
push
rclb
mov
lret
xchg
shrb
cmpsb
fiaddl
pushl
clc
mov
fwait
lea
out
mov
fdiv
adc
xchg
jmp
dec
xchg
aad
mov
push
pop
jmp
mov
jmp
mov
es
decl
es
sahf
hlt
call
cmp
jg
fdivrl
sub
out
insb
dec
or
cmc
outsb
sbbl
jl
jmp
mov
test
jmp
test
imul
mov
add
xor
movsb
lea
ljmp
push
das
nop
inc
popa
loope
hlt
int3
insb
popf
sahf
stos
pushf
in
neg
inc
push
dec
push
sub
repz
lcall
or
imul
stc
sbb
ret
sbb
mov
int
call
cwtl
insl
repnz
lds
and
adc
lret
mov
fdivr
in
push
fwait
aas
dec
call
lahf
pop
lock
in
out
push
out
jp
pushl
push
xlat
jbe
loop
add
lcall
cmp
pop
lret
jne
stos
cltd
add
iret
repnz
movsb
jg
test
stc
dec
or
jb
dec
mov
dec
mov
sti
std
xor
add
out
sbb
add
mov
or
jo
outsl
inc
in
jg
arpl
and
mov
jb
repz
imul
pop
rcll
lcall
addb
arpl
stos
add
adc
mov
sub
test
cltd
lret
jne
mov
and
push
or
push
out
mov
push
xchg
push
loop
cld
popa
int
loopne
jmp
lods
pushf
adc
xor
push
xchg
add
mov
adc
sub
mov
call
es
push
popf
mov
or
xor
mov
sar
data16
xor
xor
aas
adc
addl
sbb
decl
outsl
sti
push
or
negl
sub
sub
orb
jns
jg
or
add
jl
jge
mov
inc
inc
stos
push
mov
jecxz
adc
lcall
in
cmp
das
push
push
lds
and
jo
iret
in
mov
icebp
leave
rdpmc
negl
mov
or
call
jp
mov
sub
cmp
inc
repnz
in
sub
dec
testl
ja
aaa
sub
dec
or
push
xor
push
popa
add
push
jmp
outsb
jb
ljmp
jmp
leave
xor
mov
xchg
out
push
ljmp
sar
add
adc
jno
sbb
jb
ljmp
adc
adc
cmp
idivl
pusha
rorb
push
inc
cli
adc
inc
jg
fadds
sub
mov
ret
lock
fs
ja
test
cmp
and
in
adc
mov
adc
in
mov
dec
xchg
ret
cmp
push
and
shll
ljmp
jmp
push
mov
loop
scas
imul
arpl
js
and
lret
out
add
movsl
push
mov
push
jl
cmpb
add
pop
xchg
pushl
mov
popf
pop
iret
in
add
fwait
mov
inc
jnp
jmp
sbb
decl
lock
dec
lahf
add
nop
xor
and
jl
ret
aam
in
decl
fsubrp
pop
cs
rclb
rolb
xor
sti
adc
int
fildl
jmp
adc
dec
dec
inc
ret
add
xor
sub
divb
pop
cmc
call
dec
xorl
cmp
enter
jp
cmp
out
xchg
jg
call
pop
jl
sub
fisttps
lret
cmp
push
mov
push
cmp
pushl
fidivrl
xor
in
mov
dec
out
xor
lcall
push
aad
push
incl
ficomps
mov
test
nop
or
adc
test
jg
andb
cmp
lcall
add
dec
or
fwait
sbb
inc
pop
ret
adc
les
dec
add
filds
fwait
into
inc
test
mov
repnz
leave
mov
push
jle
sub
sbb
incl
lock
test
jle
ret
das
into
pop
sbb
push
es
mov
cmc
call
ss
popf
dec
leave
jne
cld
ror
inc
mov
out
sub
ljmp
mov
daa
shlb
mov
ss
outsb
or
out
pop
testl
lcall
lods
push
sbb
lret
pop
sub
xchg
repz
std
aam
inc
mov
arpl
mov
pusha
jmp
jo
jl
xor
aaa
sti
push
sbb
test
push
push
lods
add
daa
push
dec
nop
call
xchg
push
pushl
cld
jmp
fstpt
pop
outsl
js
jo
sub
inc
sub
add
call
scas
cltd
fs
frstor
push
adcb
pushf
and
or
les
in
inc
call
popa
arpl
movsb
iret
lahf
sub
adc
mov
sbb
in
call
lea
fwait
andl
adc
xor
mov
dec
je
jmp
mov
push
mov
sub
push
cld
lods
cmp
ljmp
jmp
jg
ljmp
popa
das
mov
enter
or
jmp
lret
adc
mov
jo
sbb
mov
les
ret
mov
or
lds
pop
mov
inc
popa
pop
sbb
inc
sbb
push
jmp
or
lcall
int
or
sbb
fsubrl
inc
out
mov
das
lea
je
mov
lods
lock
das
add
and
insb
jg
call
inc
xor
xor
mov
in
movsb
or
mov
jmp
sbb
mov
test
bnd
rol
push
jecxz
js
lret
lcall
adc
cmc
pop
out
xor
enter
mov
fs
imul
ret
mov
jns
fistps
xor
test
pushf
cmpb
xchg
sbb
data16
push
inc
or
push
dec
jmp
inc
stc
xor
xor
and
das
mov
mov
cld
ja
jmp
repz
dec
dec
jae
outsl
sub
nop
adc
xorl
cmp
mov
add
mov
int
cld
repz
in
lret
sub
jmp
bound
fwait
xlat
div
and
mov
idivb
jp
xor
rcrb
cmp
das
clc
into
pop
fildll
xor
int
xchg
sahf
stos
cmp
cld
push
out
out
push
cld
ja
push
jae
imul
sti
loopne
mov
xchg
incl
cmp
lods
adc
or
in
pop
lea
lcall
insl
mov
pop
sti
add
out
xchg
adc
xor
aad
lret
clc
cmp
in
pushl
jle
out
pop
dec
or
std
mov
stos
cli
fwait
push
sub
xlat
xor
or
clc
lcall
dec
cmc
movsl
adc
testb
icebp
push
mov
pop
mov
jb
pusha
movsb
push
cmpsl
inc
lods
das
or
mov
mov
mov
roll
and
add
rcll
arpl
rcll
sub
ljmp
call
or
mov
test
or
pop
inc
out
incl
sub
imulb
fadd
pop
sbb
bound
inc
dec
test
jmp
and
mov
pusha
xor
rolb
int
pop
sbb
push
dec
dec
mov
call
leave
mov
test
xor
jle
mov
in
in
loopne
or
pusha
xorb
fisubrl
xor
mov
mov
or
jbe
lods
ljmp
adc
and
cmp
add
stos
loop
push
ja
in
add
push
adc
xchg
add
aad
mov
test
sbb
cmc
cmp
mov
dec
xor
popf
xor
decl
ret
inc
mov
out
push
mov
cmp
xor
out
xor
mov
rcll
cmp
jg
fistpll
xchg
test
stos
mov
mov
xchg
and
mov
nop
int
push
repz
out
or
movb
xchg
mov
sub
imul
inc
ljmp
inc
xlat
sbb
mov
dec
mov
jae
ljmp
aaa
sub
inc
add
aad
jne
jo
fldenv
mov
call
fldt
outsb
push
sbb
mov
mov
leavew
imul
jg
hlt
jp
sbb
insb
pop
in
negb
lods
pop
xchg
xor
mov
pop
stc
in
jne
daa
jmp
insl
mov
lcall
call
and
mov
push
fnstcw
lcall
in
sbb
fimuls
adc
push
mov
fsubrs
test
cmp
mov
sub
movsb
out
xlat
mov
mov
dec
or
cs
mov
call
push
int3
jae
inc
out
pop
rorb
jge
test
pop
cmp
adc
pop
fsubrl
clc
cmp
scas
xor
adc
fidivrl
mov
mov
ds
movsl
sub
call
push
jp
jo
je
pop
pop
pusha
dec
dec
push
inc
inc
add
sub
mov
rorb
dec
mov
fs
lret
sar
mov
lea
int
push
sub
scas
xchg
jne
xchg
fisttpll
ljmp
fs
add
add
cmp
push
lods
addb
int
dec
stos
dec
jg
sbb
jle
cmp
dec
out
mov
sub
in
pop
push
fdivrl
fnstcw
jmp
mov
rorl
jecxz
stos
or
inc
stos
sub
fmulp
mov
scas
sbb
lcall
sbb
jg
push
repnz
pop
aaa
inc
add
push
repnz
popf
cld
orb
pop
ljmp
add
sarb
mov
icebp
push
add
pushl
mov
lds
xchg
dec
add
push
gs
push
call
mov
mov
cmp
dec
jae
mov
cmp
mov
xchg
nop
cs
incl
rorb
in
xchg
lahf
mov
jg
jle
cwtl
inc
in
push
inc
or
push
sar
pop
cld
adc
mov
clc
int3
jl
sub
jae
mov
dec
std
aaa
push
lds
pushf
test
test
stc
clc
mov
dec
push
mov
daa
inc
or
push
aam
cltd
sbb
and
inc
ljmp
scas
data16
jne
mov
popa
mov
inc
jae
adc
pushf
mov
and
lods
cmp
inc
pop
sub
cmp
dec
lock
mov
test
jmp
jge
sbb
jecxz
cmc
ljmp
shlb
and
divb
mov
add
push
lcall
fadds
outsl
mov
pop
push
fwait
cltd
pop
mov
mov
and
call
test
imul
sbb
lods
jae
stos
rorl
nop
scas
jge
mov
push
mov
pop
in
push
push
pop
jg
or
in
popf
or
js
jle
and
mov
cmc
aas
out
test
mov
cmp
pusha
xchg
popf
jl
in
dec
filds
add
or
push
push
add
mov
xchg
pop
ljmp
fdivs
dec
jmp
stc
lcall
cli
pushl
scas
and
push
pop
mov
fildll
push
test
inc
dec
clc
out
xor
cli
lods
jg
movl
mov
xor
movsl
aad
loopne
or
lods
pop
loop
dec
outsl
es
aas
push
sbb
int
mulb
call
nop
jge
clc
cmc
lret
stc
pop
cmp
lods
jbe
popf
dec
rorl
mov
das
rclb
inc
pop
icebp
inc
xchg
ret
shlb
pop
bound
cli
incl
daa
cmp
mov
dec
fists
dec
adc
loop
mov
xor
pushl
subb
aaa
data16
and
popa
jno
int
repz
dec
das
sar
xchg
cmpsb
mov
jo
iret
jns
add
add
jg
push
cmp
cs
jo
mov
imul
mov
pop
sbb
sarb
packssdw
movsb
ret
cmp
fsts
mov
ret
div
fs
xor
xchg
mov
hlt
mov
jno
jecxz
mov
pop
out
inc
jnp
and
and
mov
xor
stos
sbb
add
pop
scas
clc
call
mov
lret
xor
fidivrl
int3
and
aam
mov
lock
sub
mov
lock
sarl
std
lahf
jmp
cli
pop
lahf
out
incb
mov
loope,pn
jns
push
pop
jmp
adc
out
daa
cmp
adc
daa
xchg
add
dec
bound
fldenv
mov
mov
mov
stc
inc
add
in
push
loopne
jg
decl
pop
mov
jns
subl
xor
loope
testb
jmp
jmp
pop
dec
data16
ds
sub
ds
punpcklwd
js
mov
sub
ljmp
pop
xchg
cli
jbe
fcompl
in
call
daa
jnp
lods
in
or
test
pop
pop
lods
dec
or
jmp
push
adc
stos
stc
imul
ja
mov
das
mov
xor
or
inc
jo
mov
js
cmpsl
inc
inc
mov
push
mov
std
push
mov
dec
xor
mov
je
or
sub
pushl
sahf
loop
sahf
inc
mov
adc
sub
popf
lahf
jmp
xchg
outsb
arpl
pushl
add
jp
sub
and
mov
add
js
jl
push
and
push
mov
pop
jb
pop
mov
call
pop
nop
pop
aam
mov
scas
nop
jne
movsl
mov
inc
push
rcll
cmp
test
cmp
pushl
cs
mov
xchg
popf
enter
addr16
mov
daa
cs
scas
dec
test
push
test
sti
iret
cmp
mov
lods
push
push
mov
sbb
pop
cmpl
adc
pop
lods
jmp
ljmp
mov
cmp
sbb
inc
out
xor
add
gs
fld
cmp
cmp
pop
je
insl
std
sti
movsb
iret
jg
xchg
mov
mov
loop
filds
gs
das
out
jae
aas
jo
mov
call
imul
subl
mov
jle
jmp
mov
xchg
aam
jb
stc
lods
pop
cwtl
or
mov
aad
add
mov
pop
filds
rorl
pop
ret
lret
outsl
dec
aas
lods
lcall
pusha
jg
fisttpl
push
and
je
inc
pusha
inc
cmpb
xchg
loop
call
ja
es
iret
mov
aam
fcmovbe
and
cmpsb
cwtl
pop
imul
jp
ljmp
js
imul
xorb
sarb
lret
push
mov
pusha
jg
insb
and
push
inc
xorl
add
cmpsl
aas
and
mov
insl
mov
call
test
pop
mov
jecxz
sbb
negb
push
addr16
imul
jbe
xchg
decl
mov
js
lahf
jo
jl
push
movsb
aad
ja
mov
ret
mov
jmp
stos
xor
fwait
loop
jg
cmp
jbe
adc
mov
jg
pop
jmp
sbb
cmpb
ja
lret
inc
sub
cmp
or
cli
jmp
sub
inc
or
loope
pusha
lds
push
ds
rcrb
xor
cmc
mov
inc
ret
sahf
push
cmpsl
cmp
xor
cwtl
aad
inc
notb
cmp
inc
dec
add
pop
fdivrl
aam
les
mov
cmc
adc
inc
loopne,pn
jmp
clc
lcall
jmp
inc
lds
xor
lock
push
clc
sbb
hlt
pushl
inc
lret
cmpsl
cmp
xchg
jns
cmp
inc
stos
mov
sarb
dec
in
pop
jge
push
sub
incl
inc
iret
test
sarb
xchg
les
jecxz
repnz
ss
das
iret
pop
and
adc
movsl
cmp
or
icebp
mov
lods
cltd
aad
std
out
jne
adc
loop
stos
mov
pop
add
or
jmp
mov
icebp
mov
insl
mov
inc
mov
push
imul
mov
call
dec
cld
pushf
movsb
test
inc
les
lods
mov
or
sbb
out
and
decl
adc
cli
popa
pop
cmpsl
out
push
dec
jle
hlt
daa
cmp
dec
loope
loopne
in
adc
push
mov
ljmp
cmc
pop
xor
mov
icebp
addl
add
xchg
dec
lods
lock
add
gs
out
ljmp
adc
add
pop
inc
add
push
mov
push
jne
inc
mov
add
mov
mov
mov
pop
jp
jno
loope
pop
in
cmp
push
dec
dec
ljmp
gs
mov
cmp
or
push
xchg
inc
rolb
jae
dec
push
pushf
decl
pop
jge
imul
jo
das
cmp
ret
incl
dec
push
mov
push
fcoml
test
addr16
and
xor
lcall
insl
aas
add
lret
xchg
iret
pop
mov
push
aaa
and
pop
xchg
rolb
call
adc
out
mov
popa
mov
lea
cld
mov
pop
mov
pop
lahf
decl
or
hlt
stc
sub
jne
or
mov
jnp
sti
or
repnz
or
xchg
lods
inc
cmpsl
inc
adc
xchg
adc
mov
out
sarl
outsl
xor
jg
addl
std
sbb
sbb
inc
in
mov
jg
ljmp
out
ror
dec
cs
mov
sbb
jbe
dec
mov
cmp
pushl
mov
xlat
lret
fisttpll
cltd
xchg
xchg
sub
shll
sti
popf
lods
xchg
mov
incl
cld
decl
lock
add
sub
loopne
decl
ss
cmp
std
iret
add
jmp
scas
mov
xor
sub
decl
cmp
xchg
not
xchg
and
test
jp
jecxz
pop
jbe
pop
pop
inc
and
jl
add
add
sbb
fldt
mov
pushl
mov
xchg
push
adc
pop
cli
jnp
addr16
mov
incl
pop
cmp
inc
push
nop
sahf
jno
insl
adc
je
mov
ljmp
mov
sbb
and
lcall
mov
and
call
pop
int3
int
or
ret
mov
or
sbb
fwait
pushl
mov
mov
sar
js
jmp
mov
dec
adc
fs
mov
loop
xor
xchg
pop
sahf
and
lods
jo
pop
icebp
js
push
aas
xchg
inc
inc
cmp
pop
pushl
loop
icebp
dec
leave
adc
mov
mov
ljmp
sbb
fbld
inc
cmp
cmc
enter
mov
mov
fmuls
inc
mov
adc
sub
sbb
pushl
jno
jbe
pop
jl
cmp
push
popf
aad
sub
loopne
push
imul
jg
out
jbe
jge
mov
fucom
mov
mov
pop
pushf
in
jns
push
addr16
sub
sub
lcall
mov
scas
pop
cltd
nop
xor
jmp
mov
cli
push
fucom
sub
pop
or
lcall
push
mov
shlb
mov
mov
andb
lcall
mov
clc
sbb
cld
push
rolb
push
xchg
inc
jns
popa
sub
lcall
arpl
or
xchg
int3
or
push
cmp
cmp
pop
and
mov
and
mov
jle
lods
pop
aaa
xchg
sti
clc
cmpsl
adc
popf
cmp
or
pop
mov
jg
jmp
jnp
sbb
pop
push
neg
xchg
std
decl
clc
adc
adc
jmp
cwtl
subl
jae
pop
adc
mov
mov
add
xor
or
lds
arpl
lds
test
ljmp
das
cmp
mov
and
xchg
fbld
or
xchg
mov
pushl
fs
icebp
or
data16
pop
add
adc
fwait
pop
mov
iret
sbb
decl
cmp
dec
mov
pop
push
xor
and
mov
push
mov
xchg
mov
aad
call
cmc
js
fs
movsl
xlat
fmuls
testb
in
bound
inc
add
dec
lcall
adc
int
data16
sbb
dec
push
xor
or
adc
cmpsl
jle
mov
lahf
arpl
pop
lods
test
jns
lcall
dec
jne
adc
icebp
add
adc
rclb
sbb
cmp
mov
mov
mov
je
mov
jp
cltd
push
in
push
push
pop
xchg
xchg
nop
stos
smsw
mov
pushf
cwtl
sub
popf
add
push
in
adc
sbb
call
stos
jle
adc
and
mov
repz
and
sbb
fwait
jmp
jle
popa
mov
lcall
aad
push
add
xchg
jl
cltd
xchg
les
fisttpl
add
dec
imul
loopne
xchg
push
cli
fucomp
test
stos
xchg
repz
xchg
test
cli
fdivp
push
cmp
hlt
cli
mov
int3
xchg
out
movsl
sbb
pop
movsl
cmp
outsb
in
push
push
mov
cmp
pushf
jecxz
jg
dec
fcoml
in
dec
arpl
pop
pop
inc
pop
xlat
mov
jge
or
dec
sub
push
jge
inc
mov
sub
inc
pop
out
mov
shll
and
add
in
cmp
sbb
jmp
aad
mov
jmp
pop
ja
sbb
test
lret
inc
or
jmp
lcall
and
icebp
sub
test
push
xor
push
hlt
sub
dec
cli
mov
fs
aaa
std
aas
pop
add
fidivrs
xchg
adc
leave
mov
cmp
pop
xor
aas
cmp
cmp
std
mov
mov
or
or
idiv
xor
lcall
rcr
in
adc
pusha
add
loop
lcall
incl
and
jle
inc
js
stos
or
sarl
jle
icebp
int
sti
push
xchg
aaa
repz
adc
cmp
ds
cmp
std
sub
pushf
sub
mov
jne
xchg
xchg
decl
add
fistps
mov
jg
pop
dec
das
test
push
adc
jmp
lea
mov
lret
or
mov
mov
xlat
cltd
or
iret
mov
shll
mov
sahf
dec
negb
cs
ss
call
popf
jmp
faddl
dec
pop
xor
lods
data16
and
call
loopne
lcall
mov
ja
std
xchg
test
pop
inc
mov
xlat
aas
mov
fmuls
pop
or
imul
push
cmp
adc
js
cmp
xchg
aaa
icebp
jecxz
mov
lahf
gs
lcall
cmovns
or
sbb
js
inc
and
test
gs
and
or
adc
in
sbb
ds
push
or
cmp
sahf
xchg
ds
ja
xchg
mov
sbbb
sub
stos
add
decb
ljmp
jmp
test
inc
mov
ret
inc
jbe
mov
test
xchg
das
scas
xchg
les
sub
pushl
sub
in
push
sbb
adc
jb
ficoms
push
jmp
out
adc
gs
decl
rorl
icebp
jne
call
fsubrl
push
dec
mov
pop
cmp
sar
idivl
mov
inc
mov
in
out
xchg
push
mov
cmp
push
std
cmp
xor
cli
imul
xor
jp
mov
pushl
and
fs
dec
mov
fstpt
add
mov
decl
stos
inc
ffree
jb
out
pop
test
xor
dec
jg
aas
stos
xor
add
add
mov
out
ljmp
je
push
rcrl
mov
inc
rcll
jno
xor
roll
lea
incl
xor
jne
jmp
push
movsl
mov
pushf
xor
fdivs
push
mov
fdivl
mov
xlat
sbb
sbb
and
pop
aaa
mov
movsb
sarb
fnstenv
and
pop
iret
jne
adc
decl
mov
cmp
adc
scas
loop
sub
loopne
xor
or
int
sub
mov
pop
ja
aam
push
jb
push
pop
sahf
inc
cmp
ds
jmp
dec
es
sar
mov
jg
or
add
xchg
adc
pop
hlt
call
test
mov
out
loope
jbe
icebp
int3
inc
sbb
and
sub
inc
in
lcall
add
inc
xchg
in
out
iret
fcmovnbe
pop
sub
jp
xchg
jae
js
cmp
incl
cmpsb
scas
jbe
icebp
int3
cmp
or
or
repz
ret
cmpsl
xchg
ds
xchg
stos
ljmp
sbb
das
sub
mov
mov
testl
imul
mov
movsb
imul
mov
cli
jno
cmpsw
dec
cmp
test
adc
call
lret
push
jmp
es
cmp
and
jge
cld
push
sub
call
nop
test
imul
jg
sarl
ds
push
scas
pushf
sub
int
or
fmuls
scas
cli
pushl
pushf
mov
xlat
ret
dec
jmp
je
cmpsb
sahf
and
decl
cmpl
fisubs
fs
out
mov
mov
jae
dec
call
mov
adc
addr16
mov
cmpsl
in
dec
push
stos
push
mov
cld
fbstp
lds
aad
add
lea
stos
sub
pop
push
push
push
mov
and
xchg
pusha
xor
sub
jmp
inc
xlat
jmp
mov
xchg
and
or
aaa
iret
arpl
add
mov
mov
test
ljmp
cmpsb
xchg
push
mov
in
push
jb
xlat
in
mov
test
mov
cld
pushl
adc
mov
lods
test
cmp
jg
push
stos
lods
popa
clc
sbbl
decl
mov
and
adc
pop
movsb
popf
cmc
shll
and
adc
cmpsb
push
adc
out
mov
ret
in
add
pop
stos
lahf
sbb
lea
aas
mov
fdivrs
push
inc
sarl
cmp
jmp
iret
xchg
xor
outsl
push
sub
out
push
loop
adc
addps
jns
jmp
fstps
nop
jmp
lods
shll
clc
lods
sub
add
xchg
or
push
mov
pop
push
and
cwtl
imul
mov
in
lods
testl
scas
xchg
sub
or
mov
sbb
movsb
xchg
repnz
les
stos
push
inc
adc
jnp
call
leave
push
sbb
in
jge
push
xor
pusha
call
lret
clc
jo
add
bound
or
imul
gs
rorb
dec
jg
in
call
lret
andl
rcll
loope
pop
sti
mov
ljmp
push
test
sub
repnz
cmpsl
rcrb
lea
pop
jge
and
pop
ja
arpl
pushl
outsb
outsl
jne
das
push
dec
inc
leave
push
or
sbb
sub
sbb
test
out
push
mov
call
repz
mov
notb
arpl
xor
inc
add
pop
dec
jmp
repz
std
adc
xor
iret
jle
sbbl
lcall
les
or
adc
fsubs
cli
push
ret
push
sub
decl
stos
add
stc
rorl
add
add
pop
add
lret
inc
fucomip
sbbb
out
std
pushl
dec
ljmp
jle
xor
mov
call
add
cld
incl
mov
pop
cmp
xor
add
inc
pop
insl
cmc
mov
add
cs
es
scas
cli
mov
and
icebp
cwtl
stos
pop
stos
add
std
sbb
push
sbbb
dec
mov
jmp
mov
add
fcmove
push
sub
dec
imul
cli
int
jmp
jne
push
dec
hlt
mov
fnstenv
pop
pop
jno
adc
mov
and
or
pop
xor
subl
add
sub
mov
fwait
nop
mov
jo
jb
lcall
mov
mov
dec
sarl
cwtl
je
jle
push
insl
mov
cmp
or
add
ret
je
push
jae
add
pop
lock
test
xchg
fs
dec
dec
jl
dec
push
mov
inc
or
std
data16
repz
aad
lods
in
mov
mov
hlt
jecxz
cmp
push
sahf
lea
mov
das
xchg
add
jnp
mov
js
jg
add
dec
movsb
movsl
shl
xchg
or
jne
add
push
out
out
jg
pushf
aam
jp
in
int3
insb
cltd
cwtl
pop
mov
inc
mov
push
push
es
add
pop
sbb
mov
mov
lea
iret
inc
and
and
sub
filds
mov
mov
and
jmp
mov
cld
sbb
push
xchg
mov
decl
jae
fisubrl
je
adc
xchg
jnp
inc
clc
cmpsb
sbb
push
ds
loop
imul
imulb
add
in
adc
icebp
leave
inc
mov
into
adc
stos
popa
xchg
call
enter
lcall
pop
inc
cmp
push
jb
mov
xor
adc
test
cmp
mov
call
mov
sub
inc
lret
data16
mov
sar
mov
lock
notb
adc
std
inc
popa
out
sti
mov
mov
enter
adc
ljmp
xor
ljmp
xchg
cmp
jbe
add
test
jge
lods
xor
cmp
add
cmpsl
or
rcrb
mov
or
ret
sub
or
pop
cmp
jns
jmp
das
mov
pop
xchg
lock
ds
in
lds
xchg
hlt
cmpsb
mov
xchg
fistpll
lcall
mov
jecxz
xchg
aaa
adc
fcom
xchg
mov
aad
mov
and
lcall
loopne
adc
xchg
cmc
cld
sub
sub
cltd
or
es
pushl
mov
stos
pop
jo
push
sbb
cmp
loop
lret
ds
mov
cli
mov
inc
jl
jg
bswap
dec
fs
push
popf
in
aaa
adc
int
push
jge
sahf
stc
jb
and
pop
dec
je
jmp
cld
jg
mov
mov
out
iret
push
xor
xchg
and
clc
lock
xchg
test
pushl
jb
push
pop
int
xchg
xor
mov
add
adc
stos
and
or
ljmp
loop
das
adc
outsb
fs
repz
or
sub
xchg
jl
lcall
xchg
fwait
pop
cltd
pop
xchg
sub
xor
mov
je
adc
add
lret
jmp
icebp
sub
xchg
inc
fdivrs
ja
inc
add
decl
push
and
bound
dec
pop
xor
pop
pusha
lods
dec
cs
test
lcall
pop
jmp
jno
sub
cmp
and
cli
repz
add
xchg
jmp
mov
sub
push
xchg
mov
scas
shrb
jmp
jp
xor
test
loopne
add
ljmp
sbb
xchg
lahf
in
rcrb
loop
mov
andl
mov
and
xchg
ljmp
pop
inc
push
mov
adc
pop
mov
adc
or
mov
mov
push
sub
or
int3
out
adc
loopne
push
mov
adc
stos
add
and
ljmp
imul
push
fldt
mov
cmp
bound
ljmp
pop
cmpsl
fmull
rcr
je
lock
repz
ret
and
and
xlat
push
out
push
mov
lea
add
sbb
adc
out
cli
lds
sahf
scas
lret
popf
ja
adc
adc
inc
fisubrl
cwtl
out
or
ljmp
js
xchg
lahf
out
mov
pop
dec
lods
cmpsb
pop
cli
pop
ficoml
call
movsl
fistpll
mov
pop
lahf
cmp
cmp
les
cmp
xlat
jp,pt
mov
xor
lods
sub
lock
push
fiaddl
in
gs
icebp
sub
jle
sbb
lcall
out
sahf
fwait
mov
push
sahf
add
loope
sbb
or
insb
repz
std
fmuls
cmp
push
or
pop
push
jb
test
add
lds
add
aad
jmp
outsl
cmp
mov
sub
sub
scas
lcall
mov
and
mov
stos
pusha
cmp
push
push
xor
fldpi
pop
pop
adc
stos
push
mov
loopne
xchg
push
and
std
les
sbbl
mov
in
jmp
fildl
out
xor
add
dec
dec
xchg
fcmove
aad
imul
mov
mov
es
pop
sbb
and
outsb
movsl
pop
sub
ja
and
xchg
call
cmpsl
mov
and
sub
push
lret
sub
or
lods
xor
jmp
mov
sub
call
arpl
dec
dec
mov
mov
add
and
insb
cmp
mov
sti
dec
stc
or
enter
fstl
iret
movsl
mov
cmovnp
pop
mov
aaa
or
cli
xchg
mov
jnp
push
inc
mov
sbb
mov
pop
lcall
add
in
test
jl
cmc
jmp
push
push
push
adc
sarb
call
mov
xor
xor
mov
aam
jb
push
cmp
fsubrs
push
sahf
cmp
lea
in
xlat
js
popf
jmp
adc
jb
pop
js
xor
and
adc
jmp
fcoms
xlat
arpl
inc
fidivl
movsl
xor
or
inc
out
mov
stos
pusha
push
push
sbb
dec
mov
pushf
jns
cmp
cwtl
xchg
sub
icebp
arpl
decl
ds
cmp
mov
icebp
shrb
fstl
mov
sbb
pop
repnz
fistpl
cmp
jo
enter
sar
decl
addl
push
es
lret
or
mov
mov
and
insb
inc
xchg
and
aaa
cld
outsb
std
add
mov
scas
pop
sbb
cmp
call
inc
dec
lock
mov
and
and
xchg
hlt
xchg
add
incl
loope
lahf
repnz
mov
xchg
inc
adc
inc
loopne
testb
mov
ljmp
add
add
and
iret
adc
sbb
inc
sbb
in
stc
test
call
cmp
pop
push
jmp
movsb
loop
xor
ja
push
xor
dec
cwtl
adc
insb
pushf
fcompl
cmp
and
test
mov
lods
out
leave
push
or
pop
loope
ret
repz
mov
dec
cmp
mov
sub
aad
mov
icebp
pop
int
call
out
xchg
dec
sbb
cmp
inc
lock
cmp
cs
nop
cmp
xchg
insl
sub
incl
shll
fcomip
sbbb
xlat
and
idiv
stos
push
sub
push
mov
pop
sub
gs
test
incl
gs
cs
mov
mov
pusha
outsl
arpl
sbb
push
lods
mov
divb
sub
scas
inc
ds
cmp
mov
jae
sub
call
outsb
ficompl
or
push
in
das
and
xor
adc
int3
repz
pushf
pop
imul
loop
mov
incl
cltd
into
pushf
ficompl
scas
out
jmp
imul
ficoms
decl
and
cltd
inc
fwait
xor
test
sbb
mov
loope
push
clc
push
jg
inc
jmp
test
in
jae
pop
imul
mov
rol
outsb
sub
push
sbb
stc
mov
outsb
xchg
rorb
in
or
out
ret
aaa
ljmp
enter
shll
push
mov
loopne
push
enter
mov
call
add
shlb
mov
fnsave
mov
or
mov
jne
push
dec
js
jg
mov
and
mov
repnz
sbb
jne
call
cmc
sbb
sub
mov
mov
int3
cmp
imull
push
xor
inc
sahf
and
ljmp
clc
xchg
rolb
pushf
cmp
sbb
dec
push
mov
ljmp
ljmp
shll
or
mov
xchg
mov
xchg
or
idivl
loop
call
std
jns
and
pop
xchg
xchg
mov
icebp
out
lods
sti
int3
stos
lods
inc
call
or
repz
fwait
les
mov
jl,pt
adc
test
xor
add
add
pushl
or
pop
outsl
cwtl
int3
mov
push
mov
out
ss
inc
pop
lcall
iret
jg
jmp
and
push
or
cmp
jno
lcall
ljmp
pushl
cmp
outsb
dec
mov
push
jmp
xchg
lea
loope
mov
ljmp
dec
mov
aam
cmp
inc
cmpsl
dec
jns
inc
and
sar
incl
jae
push
scas
out
mov
dec
stos
mov
cwtl
sub
dec
adc
aaa
das
repz
jg
incl
mov
insb
xor
int
cmp
push
test
jne
repnz
roll
sbb
imul
adc
xchg
jne
repz
rcl
call
std
cmpsl
iret
and
std
clc
push
mov
inc
leave
mov
lcall
call
xchg
repz
jns
dec
sub
cmp
test
inc
ds
icebp
jnp
jbe
sub
jno
in
cld
mov
or
arpl
mov
pop
mov
mov
ljmp
sbbb
dec
jno
sbb
xchg
xor
or
mov
mov
gs
and
add
push
push
inc
xchg
inc
pop
mov
mov
cmp
adc
cmpb
ljmp
xchg
js
and
xchg
out
mov
and
dec
mov
dec
repz
mov
in
arpl
xchg
sbb
xchg
decl
stos
push
mov
in
rcrl
aad
loope
popf
scas
and
decl
and
xchg
jns
popa
pop
add
loope
or
dec
dec
leave
das
ja
pminub
je
or
ljmp
flds
movsl
push
cmp
stc
inc
adcb
mov
insb
cmc
sar
jmp
femms
add
mov
jno
iret
jbe
imul
sbb
test
inc
jl
iret
scas
or
xchg
les
jmp
and
add
out
fwait
mov
ss
push
dec
lret
cmp
test
js
jne
in
ret
mov
xor
mov
aad
add
jg
fdivrs
loop
cld
jle
mov
scas
lcall
movsl
sub
scas
cli
decl
mov
std
push
dec
mov
jmp
jg
call
mov
mov
shll
mov
stos
inc
mov
push
out
test
ds
bnd
repz
loopne
adc
repz
out
loop
mov
shl
cmp
incl
fsts
adc
pushf
ljmp
and
inc
out
cmpsl
shll
push
inc
cld
fimull
add
pusha
data16
adc
in
cmp
jmp
lret
push
add
mov
sarb
xor
pushl
rclb
or
mov
mov
and
insl
arpl
pop
test
add
inc
ret
mov
xorb
jg
ret
push
cmpsl
dec
push
fldl
jmp
ror
and
sbb
repnz
test
adc
cmp
mov
movl
lods
or
add
dec
add
ret
jle
or
das
ret
inc
sbb
jecxz
ljmp
mov
dec
inc
jge
mov
adc
add
leave
cmp
in
in
add
fdivr
incl
and
cltd
aam
xchg
inc
xor
sbb
add
jmp
mov
popf
incl
lock
stos
inc
fildl
dec
or
les
xor
decl
insb
jp
sahf
fcomps
push
jmp
push
pop
xlat
adc
mov
scas
loope
inc
push
decl
lock
mov
lcall
push
lea
gs
not
lods
xlat
stos
fxsave
js
sub
pusha
in
add
push
subl
pop
pop
cmp
repnz
dec
shlb
and
fxch
push
pop
sar
sbb
or
aas
adc
jg
or
cwtl
pop
dec
sub
out
dec
lret
repz
adc
aam
cmpsb
pushl
rorb
xor
stos
mov
adc
sahf
adc
dec
addl
push
das
mov
sbb
mov
test
mov
mov
mov
les
mov
lds
mov
inc
data16
test
fcomip
call
test
mov
fnsave
insb
pop
or
test
cmpsl
pushl
sub
and
mov
filds
popf
pop
ret
push
cmc
add
inc
jbe
mov
sbb
ljmp
fiadds
xchg
fldenvs
dec
add
inc
ret
sub
cmp
pushl
push
or
ret
jns
push
out
fmulp
ljmp
jns
std
mov
bound
inc
xchg
dec
jmp
cmp
inc
insl
test
or
mov
push
jge
sbb
add
xchg
repz
out
dec
mov
lahf
and
movb
mov
jmp
mov
and
or
or
aad
or
mov
adc
roll
loop
cli
decl
pop
popa
jp
int3
mov
jns
cltd
jle
cmpsb
incb
std
xchg
imul
ljmp
push
subb
fsubrl
pop
dec
or
mov
or
or
jb
dec
sarb
in
andb
add
fdivl
imul
pushf
aaa
pop
xchg
push
in
out
jne
pop
loopne
incl
mov
js
sub
lcall
jmp
lods
addl
lock
ss
add
aam
jp
sbb
and
call
inc
mov
orb
rcll
inc
fdivrl
sub
mov
mov
adc
cmp
pop
imul
pop
add
lods
rorb
lods
jle
lcall
push
mov
es
loop
cmp
xorps
cli
rolb
or
adc
incb
stos
aad
and
adc
inc
cmpsb
call
les
adc
popa
mov
loopne
xchg
insb
cmp
repnz
lret
lods
cmp
sub
dec
xor
scas
das
push
pop
les
or
inc
dec
das
movsb
mov
ss
mov
ds
std
cmp
lcall
repz
es
fisttps
cmc
pop
mov
test
outsb
jg
cmp
xchg
jne
and
dec
mov
sbb
jg
incl
sub
scas
push
ficomps
icebp
popa
aad
adc
icebp
int
popaw
fcmovu
ja
sub
add
push
scas
ljmp
sub
loop
mov
fsubl
add
adc
in
std
loop
inc
adc
mov
inc
push
xchg
push
rcl
jnp
jle
jmp
dec
mov
jmp
orb
jmp
jl
stos
mov
mov
mov
pushl
popa
enter
lock
mov
cmp
addr16
push
cwtl
or
xor
in
ret
jmp
push
pop
test
jp
pop
sub
bound
or
xchg
jne
mov
stc
out
imul
push
lods
js
pop
stos
fcoml
lcall
jae
gs
stc
pop
mov
add
inc
fdivrs
mov
push
push
mov
arpl
push
dec
sub
test
stos
add
fdivrp
pushl
jns
cmp
mov
push
lcall
xchg
sbb
fcos
arpl
bound
movsb
push
leave
cli
lcall
int
in
mov
shr
push
or
dec
cwtl
cmp
stos
mov
incl
pop
dec
push
push
inc
shrb
xor
pop
stos
sub
scas
pushl
scas
clc
ds
xchg
imul
out
mov
fldenv
cmc
mov
add
lods
sahf
mov
stc
pop
cmp
sub
and
push
cmp
call
push
stos
bound
dec
out
jnp
adc
add
ds
incl
pop
call
mov
das
ljmp
mov
ficompl
stos
jp
dec
bound
mov
cmp
push
mov
xor
inc
ljmp
lret
ss
leave
lock
cld
and
dec
or
and
imul
pop
push
insb
movsl
hlt
ja
mov
cmp
int
xor
push
fsts
scas
jne
mov
ret
mov
incl
sub
xchg
pop
insl
cmpl
cmp
jge
jg
push
cltd
loopne
out
or
mov
lods
xchg
lods
aaa
ret
enter
bound
xor
incl
inc
into
fsub
adc
adc
cmpsl
and
cli
adc
xchg
mov
jg
jg
out
jg
xchg
xchg
pop
icebp
jno
add
add
dec
xor
sub
pushl
push
mov
mov
jg
jno
adc
test
call
dec
dec
rorl
fdivs
inc
and
cs
into
jecxz
incl
or
pusha
sbb
xchg
hlt
and
and
inc
inc
dec
xchg
pmulhuw
fcomip
lcall
mov
xchg
xor
sub
out
mov
jbe
jg
jg
mov
xchg
mov
stos
or
dec
stos
mov
sub
mov
ret
scas
int3
pop
sub
call
push
lods
xchg
mov
scas
dec
roll
xor
test
push
xchg
jmp
mov
jnp
sub
in
out
rcrl
xor
aaa
xchg
fs
jg
shr
shl
jne
push
lcall
fcoml
sti
mov
adc
mov
cmpsb
sbb
cmp
imul
sbb
ds
popf
ljmp
and
add
pushf
cs
ret
inc
xor
scas
cmp
mov
xor
and
les
mov
mov
subb
dec
xor
sti
cmpsb
and
cs
add
aad
inc
mov
outsb
jmp
xchg
dec
lahf
jmp
push
pop
shrb
scas
cli
xchg
push
and
idivb
ret
cld
mov
mov
addb
ja
pushl
dec
jle
push
or
call
inc
mov
cmp
rclb
sbb
bound
mov
sbb
std
push
cmc
dec
data16
or
add
jecxz
mov
movl
add
arpl
sub
dec
jno
aad
and
and
lcall
add
hlt
pop
cs
inc
xchg
jmp
and
cmp
insb
out
cmp
std
loope
jmp
pushl
pop
cmp
loop
insl
in
rcrl
aaa
cmp
fcoml
lea
repz
dec
jnp
adc
cmp
outsl
or
lahf
jecxz
sbb
sbb
or
shrb
lds
les
inc
aaa
ljmp
adc
rorl
lret
incl
jl
dec
rorl
shll
dec
jl
lods
push
or
ficompl
sbb
mov
dec
jmp
imull
jo
jbe
inc
in
mov
imulb
js
dec
test
push
mov
push
cltd
fcom
inc
jecxz
fnstenv
je
adc
fsts
mov
push
mov
adc
loopne
lret
xchg
stos
pop
loope
or
leave
adc
dec
insb
mov
sub
pop
xchg
test
insl
popf
or
xlat
push
mov
push
cmp
daa
cmp
hlt
mov
mov
xchg
mov
sub
xchg
rol
push
jp
lcall
test
xchg
xchg
push
cmp
fucomp
outsb
in
sub
jle
push
les
jmp
sbb
ja
dec
xchg
mov
mov
in
xchg
push
pushl
xchg
cltd
or
mov
mov
sbbl
cmpsb
addb
pop
cmp
sub
rcr
movsl
ds
xor
daa
or
inc
push
lods
push
cld
repnz
push
cmc
mov
or
ret
inc
dec
push
sbb
lahf
mov
stc
jle
cmp
adcb
jo
mov
jge
mov
jmp
test
xor
push
es
in
mov
cmc
fnsave
rolb
into
sbb
xorl
in
mov
sar
jmp
mov
leave
dec
je
aaa
inc
jge
jg
jg
mov
dec
pop
test
and
pop
call
inc
test
jle
mov
pop
pop
mov
jp
iret
or
lret
adcb
and
mov
das
addl
mov
pushl
xchg
mov
add
push
mov
scas
sar
pop
jnp
inc
pop
hlt
loop
or
push
sub
sbb
xor
fimull
aad
rcrb
jo
nop
pop
xchg
cmp
push
sti
add
cs
daa
cmp
les
inc
call
js
dec
cmp
mov
mov
leave
es
mov
leave
shrb
and
shll
test
stc
neg
push
shlb
xor
dec
inc
mov
inc
mov
incl
arpl
addl
aas
cmp
mov
fsts
cmc
fidivl
xlat
dec
fimuls
in
lret
fisubl
outsl
mov
xchg
paddb
ljmp
ljmp
xor
fs
and
fadd
std
jnp
mov
jno
mov
push
jg
mov
rorb
or
and
cmc
sub
mov
cmp
or
clc
ljmp
clc
dec
mov
push
lcall
mov
mov
call
arpl
out
lret
mov
jmp
out
js
dec
sub
shlb
push
xor
mov
cmp
mov
ljmp
rcrb
enter
enter
mov
sub
icebp
fdivr
fildll
leave
mov
std
mov
pusha
sbb
or
pop
add
cmp
jmp
out
jl
jmp
jae
push
je
decl
fisttps
xor
ror
pop
nop
aad
fadds
jge
mov
shl
das
mov
mov
or
jle
cwtl
loop
sti
inc
xor
cmc
incl
or
or
fwait
and
inc
aaa
push
sahf
loop
icebp
dec
xchg
xor
adc
sarb
std
sub
fdivrs
std
lods
sub
rcl
pop
out
imul
ud0
lods
mov
mov
lock
mov
jecxz
push
jge
pop
cmc
ljmp
out
fs
pop
int3
mov
sbb
int
in
mov
xor
aas
push
and
dec
add
dec
xchg
sti
stos
int
scas
mov
mov
mov
enter
add
add
sbbb
leave
dec
mov
mov
mov
outsl
add
xchg
inc
pusha
cmpsb
add
insl
fdivs
ds
ljmp
mov
lahf
push
call
cmpsl
mov
in
pop
aaa
mov
aas
les
mov
push
sub
cmp
lock
jbe
push
mov
dec
fcomip
call
push
call
add
mov
imulb
out
stos
xchg
jb
adc
pushl
fwait
push
or
lret
and
mov
inc
push
ljmp
ret
cs
incl
ja
loopne
adc
sub
sahf
js
xor
fistps
cmovns
fcomip
and
jae
orl
pop
movsl
pshufw
mulb
in
stc
cmp
mov
fidivrs
int3
push
xchg
loopne
xchg
inc
cwtl
arpl
scas
neg
mov
call
in
insl
or
fwait
push
jbe
sbb
das
repz
imulb
cmp
leave
and
ja
ljmp
sahf
ret
push
cmp
enter
cmc
pop
dec
cmp
pop
iret
adcb
xchg
dec
jo
imul
or
lahf
je
loope
sbbb
in
gs
call
pusha
test
movsb
xchg
in
sub
jno
icebp
cmp
pop
pusha
pop
ljmp
rcr
sub
popa
outsl
sbb
rorl
adc
xchg
inc
adc
call
sbbl
lcall
and
lock
jg
mov
lret
cmpsl
xchg
add
xlat
icebp
ljmp
inc
mov
fadd
pop
push
or
xchg
mov
fcoms
jne
xorl
mov
ret
xchg
fbstp
int3
push
clc
call
push
mov
test
rcrb
inc
pushl
push
test
mov
pushf
pop
sub
outsb
data16
push
mov
push
loop
rcr
mov
clc
push
in
jns
cwtl
insb
test
call
fs
decl
mov
fnstsw
inc
jmp
mov
sub
push
notb
hlt
push
push
stos
sti
sub
sbb
add
std
mov
add
into
inc
push
movsb
mov
cmp
out
ljmp
or
pop
and
pop
decl
lret
outsb
imul
mov
sbb
lcall
sub
jg
int3
jp
shll
scas
in
scas
popf
scas
movsb
pop
mov
cs
ss
call
sub
enter
pop
xor
sub
dec
ljmp
jmp
dec
cmp
lcall
jne
shll
daa
mull
cmp
xbegin
adc
gs
mov
pop
mov
jb
and
out
out
jge
xorl
mov
in
inc
fisttpll
lcall
fucom
mov
ds
test
sub
pop
setbe
lods
fnsave
decl
and
ret
add
std
mov
rcrb
test
add
fst
mov
mov
cmp
bound
and
lret
add
decl
mov
repz
data16
int3
fdivrs
push
adcl
cmp
xchg
mov
jge
mov
add
mov
xor
sub
dec
pushf
incl
lea
sub
adc
xor
pop
imul
cmp
out
or
or
cmp
test
ret
cli
and
negb
add
jl
push
push
pop
fsubrs
es
inc
gs
call
inc
mov
mov
jbe
dec
sub
dec
pushf
fnstcw
pushl
xor
mov
sub
outsb
ffree
sbb
outsb
ljmp
and
sub
adc
cwtl
ja
int3
stos
mov
cmp
inc
lcall
incl
shrl
ret
gs
sbb
mov
xlat
jmp
lods
pusha
mov
pop
xorl
call
push
daa
xchg
and
lock
rcll
fbld
ljmp
rcrl
inc
movsl
mov
jmp
jnp
loope
pop
dec
and
out
popf
or
jmp
mov
rcrb
mov
or
call
add
add
adc
movsl
in
fwait
pop
jge
cld
imul
ljmp
es
aam
push
add
mov
das
or
leave
fimuls
mov
ljmp
decb
cli
mov
adc
in
mov
adcb
pop
testl
cmp
adc
add
pop
sub
mov
inc
pop
ja
scas
loop
shr
or
jmp
cltd
pop
pop
inc
cltd
jg
xchg
shll
jmp
aam
jmp
fiaddl
gs
sbb
jns
fiadds
inc
in
movsb
sbb
push
stos
nop
push
or
mov
arpl
jns
outsl
cli
ljmp
pop
dec
roll
lods
or
mov
rcr
push
push
in
inc
int
ljmp
dec
jmp
fcmovne
sub
or
sub
pop
imul
jmp
mov
inc
adc
sti
repz
cs
jmp
cld
push
lcall
loop
push
mov
pop
or
cmp
insb
adc
lcall
dec
and
rol
push
jb
pop
cmp
sbbl
xchg
and
mov
xor
popf
add
xlat
loopne
cmp
and
push
pusha
mov
cmp
cmpl
fcoml
mov
xor
jbe
jo
fimull
ljmp
pop
movsb
sub
push
add
mov
add
shl
loope
in
std
push
jmp
dec
lret
pop
cs
sub
xchg
into
xchg
push
dec
mov
fbstp
loope
push
aas
pop
ret
pop
mov
ja
push
in
decl
lods
sub
sbb
inc
mov
paddq
in
stos
and
insb
xchg
sbb
lods
mov
call
call
les
mov
pusha
fwait
daa
or
xlat
sub
cltd
test
ljmp
pop
scas
ljmp
jo
hlt
not
mov
adc
mov
pushl
jmp
xchg
cwtl
lcall
arpl
mov
lods
add
sub
js
jne
lods
xchg
sub
jmp
sbb
cmp
aaa
and
gs
push
lds
cli
scas
movsb
pop
push
std
jmp
add
mov
adc
gs
sbb
inc
lea
aaa
dec
pushf
xchg
out
push
dec
dec
or
push
ljmp
push
mov
aaa
xor
jo
mov
inc
sub
out
orl
ret
adc
or
cltd
pop
mov
xchg
fwait
cmp
adc
fistpll
ret
mov
xchg
mov
cmpb
movsb
push
or
call
sahf
xor
cmpl
inc
mov
cmp
xchg
mov
sbb
lahf
or
dec
lcall
mov
jns
push
pop
push
enter
mov
pusha
pushl
repnz
adc
adc
jo
xor
insb
pop
push
push
fs
or
mov
jmp
fnstenv
les
bound
pop
cmp
out
sbb
scas
jl
clc
cmpsb
dec
mov
push
mov
xchg
inc
dec
test
iret
mov
and
cmp
fwait
popf
dec
psllq
adc
negl
jecxz
or
and
sbb
fimull
pushf
sub
rcrl
mov
adc
test
es
test
adc
call
dec
ja
cvtpi2ps
mov
movsb
inc
lret
push
mov
scas
inc
fsts
pop
flds
cld
loope
fiaddl
push
rcll
lahf
leave
push
rol
xchg
shll
adc
jl
imul
fcmovnu
push
jo
shrb
fcoms
pop
pop
mov
sbb
jo
push
and
cmpb
rolb
fmull
mov
decb
popf
in
cmp
cmpsb
sbb
fsts
and
sbb
out
mov
jmp
push
mov
lods
adc
into
sbb
mov
cs
movsb
fimuls
imul
mov
ljmp
iret
mov
cmp
sbb
or
in
jmp
call
aad
bound
adcl
leave
mov
jne
jecxz
sub
xor
and
mov
pop
push
pop
add
push
sub
add
orb
xchg
add
mov
dec
inc
test
pop
mov
gs
inc
addr16
inc
mov
mov
notb
push
scas
cli
mov
in
mov
sub
repnz
add
add
sbb
cs
dec
push
in
loopne
ficoml
pop
mov
incl
sub
gs
fiadds
xor
in
sbb
jne
adc
daa
cmp
shl
add
fsub
push
jg
adc
mov
inc
jns
add
lock
pushl
mov
xchg
mov
stos
push
scas
add
loopne
mov
dec
sbb
outsb
aas
lcall
add
jge
dec
adc
fwait
std
insb
sub
jae
lods
xor
add
addr16
pushl
cmp
iret
mov
add
push
call
and
dec
inc
pushl
fisttps
push
mov
add
popa
inc
scas
in
add
adc
jmp
loope
push
movsl
mov
movsb
fs
mov
rclb
mov
mov
sbb
add
shlb
cmp
sar
decl
pusha
ret
mov
cltd
fbld
cmpb
aas
and
pop
inc
aam
lea
jl
push
push
enter
ljmp
xchg
push
ficoml
pop
pop
mov
fdivrs
fcom
inc
std
jae
xchg
ljmp
lcall
add
mov
ds
lock
lcall
jg
jg
push
shlb
mov
sub
sahf
or
les
aad
iret
dec
xor
ljmp
jb
add
int3
jmp
fildll
push
out
adc
addr16
aad
push
sbb
aaa
clc
pushl
inc
mov
sti
push
cmpsl
and
das
cmp
fiadds
popf
rorb
in
mov
rcr
ljmp
mov
fwait
sbb
insl
pusha
push
jnp
aam
mov
jg
popa
repnz
jp
insb
pop
push
in
and
jp
stc
sarl
sti
outsl
xchg
and
sbb
lahf
push
push
xchg
adc
test
lods
ss
lcall
ljmp
in
mov
sahf
dec
test
xlat
cmpsl
stos
repz
adc
jb
mov
jmp
pop
out
fistpll
jb
loope
pop
pop
test
sub
lock
call
adc
push
adc
jmp
mov
inc
jp
lea
negb
decl
cmpsl
mov
mov
mov
or
sub
stos
in
cmpsb
dec
pushl
jecxz
and
out
xor
mov
cmp
out
pop
out
rcr
dec
mov
decl
cltd
addr16
test
lds
lahf
jne
stos
jno
xor
mov
mov
inc
test
mov
aad
inc
mov
and
pop
int3
loope
push
mov
dec
ljmp
push
jmp
loope
in
int
data16
push
es
call
sahf
call
sbb
push
xchg
hlt
mov
repz
aas
pop
mov
jmp
pusha
mov
jbe
fstp
fisttpll
ret
pop
jp
mov
pop
shr
clc
pop
loopne
das
ficoml
adc
sti
lea
decl
lcall
js
inc
pop
xchg
add
mov
mov
pushl
nop
scas
push
nop
xchg
lea
cmp
push
sarl
and
jnp
pop
lcall
ljmp
clc
cmp
add
loope
pop
enter
std
adc
bound
int
lods
fnstcw
pop
jmp
pop
in
divl
lock
daa
repz
ljmp
mov
sbb
lock
rcrl
les
sub
lods
out
pop
subl
xor
jg
sbb
xchg
ja
push
into
in
mov
dec
xor
hlt
sahf
sub
adc
cli
jb
pop
mov
and
xchg
add
sub
into
enter
call
in
cs
scas
sbb
xor
push
andl
push
ja
negl
xchg
push
xchg
aam
mov
fisubrl
jge
imul
ljmp
xchg
call
mov
fnstsw
fisubs
popf
adc
jg
ljmp
loop
ja
ret
push
insl
mov
xor
jmp
pushl
cmp
insb
dec
in
sbb
push
dec
pop
jno
mov
mov
aam
fbstp
call
pop
jb
jns
xchg
cmpsl
push
aam
adc
jl
mov
movsb
subl
incl
ficoms
mov
imul
scas
insb
or
fdivr
lods
push
jecxz
jg
mov
cmpsb
jl
push
enter
xchg
orb
inc
sti
pop
stos
call
pushf
cmpsb
in
ja
ljmp
xchg
call
lods
inc
ret
mov
sub
cmpsl
pusha
call
add
out
mov
add
mov
repnz
aam
pop
dec
fdivl
fcom
mov
shlb
cld
push
cmpsb
jbe
std
lods
outsb
pop
jae
cmp
lcall
scas
fmuls
jbe
arpl
or
push
in
nop
das
cli
call
outsb
enter
sarl
lock
mov
xor
cs
adc
cltd
loopne
pop
clc
or
jne
push
ror
pusha
add
xchg
cmpsl
arpl
xor
jecxz
das
jmp
into
mov
mov
cmp
mov
jbe
inc
jae
and
loope
js
stc
xchg
mulb
pop
pop
push
loop
inc
pop
mov
imul
add
cmp
fucomi
push
cmc
pushl
lds
pop
jb
mov
out
pushl
popf
mov
pushf
dec
xchg
call
sbb
sub
jb
int3
sar
dec
cli
call
mov
dec
cmp
pop
adc
rorb
rorb
mov
outsb
mov
arpl
fmull
in
in
lods
stc
sarl
dec
mov
jb
test
or
test
push
and
mov
ja
mov
aaa
cmp
or
mov
loope
fildll
lds
jge
dec
pop
push
test
jg
sbb
add
pop
lea
push
mov
xor
ljmp
mov
and
das
ja
rcrl
or
dec
imul
negb
adc
sub
call
push
outsb
cmp
pop
mov
or
add
mov
in
ja
fiaddl
cwtl
test
loope
jmp
xchg
call
loop
daa
mov
jmp
pop
jmp
outsl
mov
or
dec
repnz
or
ljmp
adc
lret
mov
incl
iret
cs
fnstsw
sub
icebp
xorb
pop
jge
pop
mov
mov
ljmp
sti
fbld
xchg
pushf
fidivs
jg
fstpl
fcmovu
js
scas
pushl
mov
mov
cwtl
rcll
jecxz
in
das
xchg
or
aaa
cld
push
dec
cld
out
push
dec
jecxz
xchg
scas
add
pop
add
mov
les
fiadds
or
imul
loop
pop
dec
inc
pop
iret
pushl
push
adc
mov
out
mov
dec
or
aaa
std
aam
ffree
xor
repz
jg
mov
push
adc
lds
pushl
int
test
push
and
pop
das
inc
mov
jmp
jnp
xor
cltd
imul
call
repnz
adc
push
mov
or
loopne
push
test
fildl
call
push
cmp
or
shrb
mov
or
jns
je
mov
push
dec
mov
lcall
les
xor
inc
es
xchg
cld
cmp
aad
movsl
into
cmpl
fnsave
sar
jmp
adc
movsb
and
pusha
adc
ret
jp
sub
xlat
mov
mov
xchg
lret
jmp
sub
jg
clc
or
pop
sahf
dec
call
add
mov
add
sbb
pop
ret
ljmp
mov
dec
clc
inc
les
cmp
pop
rol
into
pop
mov
decl
xchg
vsubss
leave
inc
dec
lret
sbb
mov
test
mov
lret
sbb
or
call
cmp
rorl
jmp
jno
mov
fists
mov
outsb
push
das
repnz
pop
loopne
pushl
repnz
into
or
in
adc
xchg
nop
mov
outsb
xor
adc
out
cli
push
pop
pop
hlt
fisubrs
sbb
mov
push
xor
xchg
ret
aam
or
inc
cwtl
push
dec
cltd
jb
adc
push
mov
cmp
decl
xlat
mov
mov
lods
xchg
lock
imul
push
dec
mov
sbb
sbb
xor
ljmp
mov
test
std
ljmp
sarb
add
push
aaa
mov
sbb
repz
daa
xchg
fldt
jae
call
repnz
jmp
mov
jmp
adc
jne
adc
and
pop
jg
or
decl
in
mov
or
mov
jae
icebp
jecxz
and
push
push
stos
call
push
jl
jo
mov
fcoml
scas
sbb
add
or
ljmp
lods
push
fs
push
fcomps
mov
int
dec
jecxz
rorl
sub
jmp
aad
push
sub
inc
mov
ljmp
decl
xor
push
and
pop
testl
pop
hlt
jmp
pop
sarb
daa
sti
or
mov
sbb
out
stc
and
dec
mov
xor
test
and
outsb
imul
push
jmp
mov
adc
shl
into
mov
loopne
mov
fidivrl
mull
imull
mov
pop
push
cmp
cld
cwtl
push
inc
push
xor
ljmp
pushl
imul
scas
xor
clc
sub
mov
std
pop
xor
imul
push
incl
repz
insb
ja
fmuls
dec
int
sahf
push
std
and
push
loope
ljmp
idivl
mov
in
in
stos
sub
cmpsb
nop
jp
mov
sub
add
addr16
ljmp
test
into
fbld
test
in
jl
lret
push
jge
sub
adc
rclb
cwtl
inc
jge
xchg
mov
inc
cmpsb
rorl
mov
cmp
push
lret
scas
push
out
call
aam
mov
call
add
xor
rol
ljmp
dec
enter
jge
ud1
fimuls
mov
jl
cmp
repz
sub
rcrl
stos
popa
add
lea
xchg
pop
push
pop
fcompl
jnp
pop
jmp
sbb
jmp
fwait
ja
arpl
scas
jmp
scas
enter
and
clc
repz
rolb
aad
std
jg
xor
or
push
jp
or
or
aas
xchg
sbb
pushl
sahf
movsl
in
xchg
mov
loope
mov
repz
data16
cmp
lcall
push
sbb
mov
push
mov
jp
push
mov
lret
rorl
popf
and
dec
lods
repz
test
stc
mov
scas
sub
stc
ljmp
rolb
jmp
xchg
cli
and
sub
push
jmp
call
sbb
lods
stc
mov
cwtl
outsb
mov
push
bswap
movsb
or
and
data16
lahf
ljmp
cli
jmp
jge
cld
xchg
mov
adc
lods
push
jle
mov
stos
mov
and
cwtl
push
jg
pop
inc
test
test
xlat
fmuls
mov
mov
add
mov
mov
aam
xchg
pop
fadd
popl
arpl
dec
pop
inc
aam
shrl
cmovg
sbb
mov
scas
insb
adc
xchg
and
pusha
jl
sbb
cld
addb
push
bound
in
sahf
or
and
and
push
mov
js
lods
sahf
mov
leave
test
pushl
aaa
xchg
cmp
jmp
out
movsb
pop
bound
xor
mov
pushl
push
sub
xor
or
out
cltd
outsl
xor
mov
mov
js
push
mov
mov
jl
push
aaa
in
dec
pop
lret
xchg
sub
stos
push
jne
fs
in
dec
lret
push
std
lcall
mov
mov
xor
mov
xor
xor
cwtl
jg
incl
call
lret
stos
mov
lahf
cs
iret
es
je
data16
inc
idiv
sahf
sahf
mov
mov
jmp
cmp
mov
incl
fstpt
dec
pcmpeqw
dec
int3
icebp
fwait
and
pushf
pop
cwtl
pop
add
sbb
xchg
adc
lcall
ljmp
lods
fcoml
push
outsl
bnd
cmpsl
inc
dec
mov
fistps
dec
sub
div
cli
insb
fidivrl
in
outsl
dec
xor
sbb
imulb
pushl
shrl
mov
and
mov
fucom
mul
je
mov
mov
incl
in
movsb
mov
cmpb
push
loope
or
sub
push
and
or
cld
pop
adc
std
lea
push
aam
sbb
es
ljmp
pop
fistpl
push
shl
pop
and
xlat
aaa
mov
and
jb
xor
inc
loop
sbb
movsb
mov
xor
insb
cmpsl
test
xchg
sbb
mov
xchg
mov
pop
dec
jmp
inc
loope
decl
aas
xchg
stos
jle
addr16
cwtl
xlat
fimull
and
pop
fildll
add
mov
push
mov
push
cmp
mov
ljmp
stos
jmp
lock
and
lret
push
sbb
decl
je
sahf
and
rcrb
in
or
repz
decl
xor
xchg
adc
dec
ret
inc
out
movsl
mov
cli
mov
sti
test
jns
adcl
aad
lods
pop
das
push
icebp
mov
push
dec
ljmp
arpl
jmp
push
cltd
xor
fwait
inc
cmpsb
cld
popf
adc
in
cmpb
mov
push
fbld
sbb
loope
cmpb
ljmp
nop
scas
mov
mov
jge
sbbb
insl
jno
inc
mov
arpl
arpl
inc
mov
test
pop
jg
lods
xor
ja
xor
adc
aaa
pop
js
mov
jns
bound
sahf
add
push
out
int3
pop
cs
lock
mov
mov
ljmp
stos
in
lock
sub
fsubrs
mov
pop
mov
xor
add
cmp
adc
pop
std
das
clc
pushl
mov
imul
add
dec
xchg
push
mov
push
push
sbb
xor
pop
cmc
clc
daa
add
data16
adc
pop
xchg
mov
rcr
inc
iret
std
mov
call
int3
or
fistps
xor
icebp
nop
out
decl
jbe
xchg
cmpsb
gs
mov
ret
mov
pusha
xor
fiaddl
xor
inc
jb
push
outsb
loopnew
adc
aam
incl
jle
inc
mov
jmp
js
mov
nop
add
add
decl
les
data16
or
ss
push
mov
mov
mov
jle
mov
jb
in
test
dec
xchg
push
adc
sbbl
push
movsb
mov
xchg
and
in
inc
and
popa
imul
test
aas
jecxz
enter
jg
clc
xorl
add
cmpsl
xor
pop
mov
je
lock
lea
ja
mov
mov
test
pop
mov
sub
pushf
pop
lds
pop
jmp
call
pop
ljmp
lods
push
aaa
xor
inc
cmp
xor
jg
cmp
push
lcall
bound
lods
push
pop
cmp
jmp
sbb
jnp
test
bound
xor
inc
data16
adc
xchg
push
scas
addr16
movsb
jbe
insb
call
arpl
xor
scas
test
lcall
add
mov
stos
xchg
cli
clc
lods
mov
mov
xor
mov
mov
incl
inc
push
cmp
repz
loop
pop
push
notb
xor
mov
mov
btc
not
jbe
pushl
mov
push
jmp
setne
imulb
testl
jmp
lods
adc
incl
adc
imull
push
jl
push
jno
outsl
sbb
test
and
stos
fdiv
or
lahf
cmp
dec
shl
mov
in
test
shl
jno
lods
sub
mov
or
gs
mov
call
loopne
push
adc
adc
rcrb
jg
mov
sbb
pop
and
clc
pop
dec
lods
pop
inc
clc
outsl
loope
inc
incl
push
loop
pop
push
cmovb
inc
call
jp
jge
scas
push
addr16
fsubrs
or
cltd
push
push
cli
ret
mov
mov
rol
mov
hlt
jbe
mov
cmp
mov
inc
xor
lcall
ret
out
pushf
push
lahf
mov
scas
aaa
xor
arpl
xchg
mov
mov
sar
pushl
ss
add
sbb
pop
adc
fcomps
inc
icebp
aas
cmp
and
jnp
ljmp
lods
sbb
aaa
jecxz
jbe
mov
adc
mov
add
fimull
scas
pushl
cld
mulb
clc
sbb
in
je
testl
cmc
jl
jnp
cmc
cmc
cmp
lock
dec
sub
fwait
add
jns
sub
push
in
mov
add
add
xor
mov
hlt
xorb
add
ljmp
lret
bound
in
adc
out
dec
sub
orl
hlt
dec
cmp
inc
push
data16
or
imulb
aas
add
ljmp
nop
and
popa
es
mov
popl
or
fidivs
pop
inc
inc
xor
decb
ret
fisttpl
das
sbb
dec
mov
lds
ljmp
lcall
push
ja
xchg
rcrb
fldcw
aam
call
incl
in
xchg
popf
movsb
outsl
stos
test
cmp
decl
inc
mov
in
dec
aam
adc
call
popa
or
movsl
cmpsb
sub
ljmp
shll
repnz
subb
sbb
jmp
mov
test
mov
adc
dec
repnz
inc
lods
imul
adc
call
adc
fwait
fs
das
loop
daa
inc
xchg
sbb
ljmp
inc
pushf
in
sub
dec
sbb
push
lods
mov
ds
adc
mov
jg
incl
inc
xor
xchg
fisubs
leave
xchg
pop
popf
sti
mov
dec
pop
xor
cltd
xchg
addl
push
mov
pop
pop
adc
je
psllq
jl
sub
or
movsl
fldl
mov
add
or
sbb
lods
scas
ficompl
mov
pop
out
dec
call
mov
xchg
inc
test
jmp
mov
cmp
orb
inc
push
sbb
pop
sahf
and
dec
jmp
into
xor
scas
xor
cmp
ljmp
arpl
and
mov
movsb
cli
outsb
int
or
movsl
jo
cltd
fisubl
xchg
mov
cmpl
xlat
add
sbb
pushf
jne
icebp
mov
push
cwtl
jbe
mov
daa
ret
pop
loop
mov
rol
rolb
out
inc
xchg
stos
dec
in
dec
dec
jle
dec
scas
lds
jle
mov
lock
mov
push
pop
dec
loope
mov
scas
jno
pop
xchg
sahf
xchg
mov
leave
inc
dec
mov
sub
xchg
stc
js
std
add
mov
add
lock
test
icebp
lahf
movsl
inc
aad
inc
not
std
ljmp
and
sbb
adc
test
int
movsb
mov
jge
pop
inc
pop
pop
ror
sbb
je
cmpsl
xchg
dec
lret
cmpsb
push
neg
sti
sub
mov
ljmp
leave
inc
leave
adc
fisubrl
into
pop
push
cmp
add
mov
mov
in
push
ficoms
jl
and
lret
jbe
imul
movl
cmpsb
jg
and
fs
loop
sub
call
or
bnd
xlat
jle
jno
inc
cmp
cmc
rcrb
into
in
cmp
jg
jg
push
es
xchg
fadd
xor
das
xor
xchg
shrl
shll
in
push
dec
or
call
pusha
cltd
loopne
mov
pusha
sbb
inc
pop
sar
decl
sub
pop
pop
pushl
jecxz
mov
pop
jmp
and
jo
hlt
mov
pushl
std
cmpl
imulb
pop
jecxz
cmp
ja
scas
daa
pop
mov
test
call
pop
mov
cmc
mov
mov
test
cmpl
pop
jge
sub
push
rcrl
lcall
sahf
pop
add
xor
shlb
and
inc
shll
daa
lods
dec
xchg
push
ljmp
icebp
xor
jno
fsubrl
dec
mov
dec
cmp
xlat
cwtl
pushl
into
push
xchg
pushf
cmp
test
mov
xor
and
out
lock
mov
pushf
mov
loopne
mov
imul
ja
add
push
mov
jecxz
push
adc
sub
out
outsb
addr16
and
out
aas
cmp
jmp
bound
push
rcrb
rolb
movsb
sbb
inc
fildl
inc
mov
loop
xchg
push
or
std
in
mov
and
out
nop
data16
jns
cmpb
pusha
iret
loopne
and
pop
inc
dec
ss
mov
mov
dec
movl
dec
add
sbb
xor
mov
push
aas
push
sub
mov
jmp
pop
dec
pop
pop
jl
mov
imulb
sar
fcomp
arpl
arpl
test
clc
cli
gs
inc
push
mov
xchg
aaa
push
mov
incl
cli
dec
addb
push
fisttps
cmp
ds
jo,pt
pop
test
jmp
shl
aas
inc
inc
mov
sub
outsl
mov
inc
ret
mov
movsb
mov
inc
fdivrs
inc
push
decl
inc
movsl
dec
pushf
xchg
sub
ljmp
jmp
int
dec
test
decl
pop
jne
cmpsb
adc
scas
mov
mov
lock
sarb
inc
sbb
decl
xchg
gs
ljmp
out
lret
push
pop
sbb
xchg
fsubrl
pop
inc
decl
call
scas
lcall
inc
xchg
popa
lahf
scas
or
or
pusha
sahf
out
mov
jl
and
inc
lcall
movsl
and
sub
cmp
cli
scas
and
ljmp
adc
shrl
push
mov
enter
call
push
push
add
jle
lcall
inc
mov
fidivl
and
xor
push
sbb
cmpsb
mov
je
mov
call
ret
loopne
push
call
fimull
shlb
lret
loope
fwait
cmp
mov
lret
jmp
xlat
fisubrs
pop
ds
call
jnp
fmuls
out
int
adc
xchg
ficompl
mov
ljmp
xor
test
jbe
test
cmp
push
pop
rcrb
out
pop
sbb
or
jmp
add
jge
inc
mov
stos
mov
idiv
int
adc
cmp
dec
mov
in
push
push
sbb
mov
dec
jecxz
inc
fistl
loopne
mov
sti
pop
int3
xchg
aaa
jp
jmp
outsb
in
adc
clc
aaa
pop
shlb
dec
cs
arpl
repnz
mov
in
movsb
test
add
gs
ret
repnz
push
lods
pop
ja
fcomip
aaa
and
aaa
dec
push
jl
jbe
ljmp
mul
mov
ljmp
cld
or
popa
push
dec
mov
lcall
lcall
lret
jecxz
in
xchg
dec
mov
cltd
jg
push
mov
sbb
push
popf
push
iret
in
cs
sub
insb
mov
mov
mov
xor
adc
shrl
lods
xchg
out
dec
scas
jge
or
pushf
push
loopne
mov
pop
into
repz
mov
xor
pushl
stos
movaps
xchg
xchg
call
and
mov
push
dec
adc
rorb
sub
adc
mov
sar
call
and
stos
and
jp
fnstcw
bound
cmp
jg
loope
inc
push
jle
mov
roll
adcl
std
pushl
stos
adc
add
mov
ret
mov
test
pushl
lret
ljmp
rcr
xchg
jg
aas
fdivl
iret
and
ja
sub
enter
add
jnp
or
fisubl
or
push
scas
dec
out
test
lcall
sub
inc
pushf
frstor
sbb
jne
aam
outsl
dec
mov
cmp
mov
fsubl
imul
lods
or
repnz
add
xlat
add
mov
pop
and
xor
xchg
pusha
xor
dec
popa
stc
subl
push
xchg
fiaddl
ret
jg
test
cmc
xor
push
lods
xlat
adc
repnz
stos
fwait
inc
sbb
mov
jg
fisttpl
jmp
iret
cmp
sub
roll
mov
pop
popa
js
lret
push
adc
in
jle
cmp
jmp
sahf
jbe
sbb
int
dec
lret
pop
mov
call
jp
imul
dec
lods
pop
or
sahf
iret
push
sti
rolb
cmp
imulb
out
pop
sub
xchg
insl
stc
not
and
sbb
xchg
jp
mov
rorl
xchg
and
dec
mov
xchg
xchg
dec
jle
ret
decl
test
loop
sbb
jb
popf
add
dec
je
js
call
mov
loop
insl
mov
lds
pop
fadds
pushl
push
pop
pusha
adcb
sbb
test
mov
mov
push
inc
mov
decl
shlb
or
pop
pop
movsb
daa
outsl
rorl
int3
sbb
in
and
mov
arpl
push
mov
out
inc
icebp
xchg
and
adc
out
outsb
push
imul
pushl
xchg
ja
lahf
pusha
imul
jb
add
mov
add
ljmp
mov
sbb
movsl
cmc
movsb
jl
xchg
dec
jg
inc
enter
aad
xchg
or
jg
hlt
mov
inc
adc
dec
lcall
movsl
stc
xorl
mov
pop
sub
jnp
scas
decl
inc
ror
add
sbb
into
scas
and
outsb
add
xchg
and
sbb
gs
mov
and
xlat
ret
aad
pop
or
sahf
push
out
imul
xchg
mov
dec
and
rcrl
push
jae
jp
adc
les
xchg
push
push
pop
push
sbb
and
cmpl
dec
dec
add
repnz
movsb
aad
xchg
stc
mov
in
mov
lods
xchg
dec
clc
ljmp
rclb
leave
int3
and
mov
mov
je
mov
cmp
pop
cld
out
inc
mov
mov
pop
sahf
or
idivl
fsin
xor
inc
xor
pop
dec
add
jbe
int3
add
sub
dec
mov
lods
fimuls
mov
fisubl
jno
negl
test
jmp
aas
adc
dec
jbe
movsl
jmp
jo
xchg
es
daa
and
ret
inc
inc
jecxz
popf
test
std
xchg
xor
cmp
mov
cli
push
cld
inc
stos
mov
jae
lret
sub
push
addr16
andb
push
jmp
inc
ljmp
stos
push
out
pop
xchg
sahf
inc
jno
sbb
mov
sub
mov
mov
pop
decl
decb
inc
xchg
mov
clc
ret
add
dec
sahf
call
testl
mov
sub
mov
es
fwait
dec
cmc
cld
add
mov
scas
mov
ljmp
andb
adc
in
jmp
pushf
cwtl
mov
or
mov
jg
lcall
push
xchg
cltd
aad
jb
dec
push
lods
mov
sub
jl
mov
jle
addb
inc
sub
pop
add
sbb
imul
mov
jae
lcall
in
dec
sbb
xchg
mov
test
cli
lods
cmpsl
or
incb
insb
pushl
icebp
sbb
popf
push
es
push
inc
inc
fnstenv
adc
xchg
ja
push
push
pop
cli
leave
jnp
mov
push
test
pusha
push
rorb
mov
dec
mov
push
std
jmp
cmp
and
loopne
cmpsb
jge
push
xchg
cli
pushl
xor
jg
xchg
ds
sub
pop
jbe
test
push
sbb
pushf
push
shlb
fs
popf
std
pushl
sub
repnz
push
roll
into
dec
and
pushl
lock
jbe
sub
fistl
mov
ret
popa
out
rorb
mov
xor
push
lcall
dec
mov
sahf
add
push
adc
add
data16
clc
les
jge
mov
jb
movsl
fstl
outsl
aas
inc
loope
mov
mov
adc
cmpsl
sub
cmpl
mov
std
lock
dec
arpl
jge
pop
stos
dec
jae
mov
repz
and
ffree
popf
imul
decl
jno
cmp
imul
pop
pop
out
inc
pop
incl
iret
inc
pop
mov
popf
ljmp
xor
test
push
aas
shrl
jmp
les
pop
je
or
pop
ja
inc
xlat
rcr
movsb
push
cs
cmpsb
sbb
test
pop
cmp
xor
xchg
mov
push
cwtl
insl
cs
fwait
sarl
cmpsl
pushl
push
mov
jb
cmpsb
push
inc
dec
jnp
xchg
push
push
repz
lock
sbb
and
popl
cmp
dec
cmp
stos
jae
push
bound
or
adc
mov
push
adc
fs
call
or
cld
inc
dec
and
mov
ljmp
mov
pop
fwait
adc
outsb
hlt
inc
lcall
xchg
mov
cmp
or
inc
or
es
mov
lea
fists
jmp
cld
fldl
in
add
loopne
jbe
cmpsl
hlt
adc
cmp
adc
pop
call
xor
imul
pop
jb
pop
xchg
repz
scas
test
dec
fdivrp
call
insb
or
push
lret
dec
mov
mov
mov
mov
pushf
fimuls
add
test
jle
xor
clc
scas
arpl
je
push
mov
jp
xchg
push
outsb
inc
inc
mov
cmp
pop
mov
cld
xor
sub
call
in
push
sub
push
subb
mov
xchg
insb
mov
mov
stc
pop
mov
mov
xor
pop
adc
fcomip
adc
das
jb
sar
or
cltd
arpl
adc
xchg
adc
fcomip
push
lds
lods
mov
push
and
rcrb
cmp
xchg
scas
in
inc
in
fdivr
cld
jmp
sahf
mov
ds
adc
enter
lods
cmpsl
repz
pop
push
fildll
in
push
pop
mov
pop
aas
fildll
or
and
add
dec
push
lods
or
lretw
and
xchg
aam
dec
xchg
jge
xor
jmp
dec
mov
stc
and
sub
je
gs
sub
jg
cwtl
jne
sbb
popf
fs
adc
ljmp
cli
cmc
inc
sub
test
rcr
dec
pop
or
ja
inc
mov
sbb
or
jmp
push
sub
dec
popf
cli
roll
sub
incl
push
jno
add
sbb
sti
mov
adc
inc
in
in
mov
icebp
jg
pop
push
bound
test
gs
repnz
aas
sti
mov
std
fists
and
jb
jbe
xchg
sub
mov
dec
shll
adc
incl
lods
push
dec
stos
dec
jae
push
ds
insb
or
xchg
cli
popf
xor
pop
test
ljmp
arpl
sub
data16
test
gs
ret
mov
push
imul
pushl
push
mov
sbb
push
icebp
aaa
add
mov
jmp
call
stc
push
ret
enter
sub
popl
inc
inc
mov
es
out
ljmp
mov
imul
cmp
xchg
in
fs
or
decl
push
push
dec
jge
push
push
repnz
dec
imul
adc
mov
pop
dec
lds
sbb
or
cltd
sbb
jg
out
mov
xchg
jns
jb
inc
cld
fildll
push
lcall
push
sbb
push
repnz
clc
add
arpl
insl
adc
incl
sbb
pop
test
push
pusha
jbe
pop
pop
in
loopne
pushl
adc
pusha
inc
push
pop
in
lret
in
push
aad
imul
push
jmp
xchg
jp
inc
mov
xchg
push
mov
repz
xor
inc
fdivr
incl
cmp
cmpsl
cmpsl
imul
sets
push
dec
rcll
movsl
call
in
sbb
lock
sub
mov
leave
pop
arpl
lods
sbbl
inc
sti
incl
mov
fcmovb
arpl
jl
out
xorl
cli
sbb
shll
lods
and
outsl
movsb
jno
or
mov
or
jle
call
pushl
int3
adc
add
arpl
pop
cmp
mov
push
fs
pop
adc
clc
ljmp
call
add
sbb
or
dec
out
cs
ret
lock
mov
pop
and
fmull
mov
inc
ficompl
ljmp
dec
test
pop
int
les
dec
out
stos
pop
cmp
movsb
data16
aam
ret
cmp
pop
mov
mov
add
adc
mov
xchg
fwait
push
cmpsl
repnz
push
shrl
lcall
ljmp
sub
popf
lods
je
ds
jp
cli
mov
imul
xlat
mov
mov
add
loop
into
std
cmp
pop
loopne
addr16
shlb
insl
xor
push
in
xor
jo
xor
decl
sbb
xor
push
daa
clc
addr16
data16
push
std
and
sub
cwtl
loope
pop
dec
push
fstps
cmp
jecxz
loopne
push
jg
or
pop
fsts
cs
insb
lds
mov
jae
popf
icebp
jmp
xchg
jo
stos
add
daa
mov
dec
cld
push
or
jecxz
mov
add
loopne
lock
sub
ljmp
jmp
imul
xchg
ja
ret
xchg
into
sbb
adc
jecxz
in
call
sbb
adc
test
or
xchg
shrl
pop
cmp
add
icebp
int3
xchg
jecxz
jmp
sahf
into
pop
xlat
adc
mov
pop
jp
stos
push
jg
jg
mov
and
push
cmpsb
jge
push
int3
add
mov
loopne
jmp
xchg
fisttps
cwtl
shll
dec
mov
in
loope
cmp
test
aad
test
and
mov
push
pop
mov
sbb
mov
jmp
cli
dec
sahf
jbe
jg
add
inc
iret
dec
shl
fistl
sbb
jmp
mov
xchg
pop
decb
outsl
int3
test
mov
outsb
sub
sbb
fprem
in
cld
and
out
ss
mov
data16
mov
loop,pn
inc
outsb
ds
push
cmpsb
xchg
ljmp
cli
imulb
enter
mov
sbb
outsb
sbbb
add
push
pusha
into
inc
jecxz
out
jns
push
or
jne
daa
cmc
cltd
xorl
lds
push
popa
mov
xchg
mov
push
mov
push
dec
fwait
sti
ljmp
ljmp
add
cmp
xlat
movsl
inc
mov
pushf
pop
push
add
and
dec
push
lods
fs
stos
inc
pop
loope
filds
pop
xor
adc
andl
call
push
mov
stos
xchg
shll
roll
and
incl
or
aam
fcompl
stos
int3
psrlq
mov
add
sbb
pop
sbbb
add
inc
inc
mov
inc
xchg
xchg
sub
or
scas
sbb
cmpsb
inc
xor
rolb
xor
cmp
cmpsl
movsb
das
jne
pop
xchg
add
out
icebp
rclb
pop
pop
stos
loop
jo
or
jnp
adc
cwtl
fdivr
jg
mov
adc
mov
sub
mov
cwtl
insb
dec
out
mov
sbb
rcr
popa
stos
xchg
stc
into
aas
mov
mulb
popf
sahf
add
lcall
mov
movsb
cld
push
cwtl
xchg
jbe
in
popf
cmp
cmp
out
clc
mov
sbb
arpl
push
adc
sub
jb
adc
push
mov
sub
push
movsb
imul
cs
outsb
xchg
addr16
pop
lcall
jle
loope
enter
push
into
divl
dec
pop
and
addr16
pop
test
ljmp
popa
pop
ljmp
jmp
add
push
lcall
ret
scas
mov
mov
xor
cld
jns
lods
cmp
adc
jmp
outsb
jae
iret
or
mov
jns
lret
xor
pushl
in
mov
outsb
out
nopl
push
fs
xchg
add
push
sar
hlt
xchg
clc
adc
lcall
movsb
or
loopne
loopne
push
andb
sbb
test
push
mov
push
jg
decl
jle
es
mov
xchg
push
inc
or
inc
lret
fs
mov
inc
dec
push
jns
cltd
loope
adc
mov
jle
jno
mov
pop
sbb
add
push
or
insb
push
rolb
fldcw
sub
mov
xlat
call
cmp
in
inc
adc
icebp
arpl
data16
inc
lahf
mov
jmp
mov
jnp
cmp
mov
ss
add
dec
pop
ss
mov
sarb
mov
mov
enter
movsb
loopne
cli
lcall
jmp
enter
push
outsb
in
fisubrl
jle
arpl
mov
mov
push
shlb
vmovups
imul
std
sbb
out
ss
out
sub
push
scas
push
imul
dec
testb
add
movsl
shll
pop
xor
or
fldl2t
cwtl
push
xor
sar
cmp
push
test
ja
mov
dec
inc
sbb
subb
pop
jmp
fisttps
sti
loopne
mov
add
lea
ljmp
lea
push
inc
push
cwtl
je
pop
pop
ss
dec
xor
xchg
test
lahf
cmp
pop
icebp
decl
adc
hlt
scas
cld
mov
push
mov
mov
jnp
add
lcall
in
insl
test
pushf
sub
enter
mov
and
jo
xchg
outsl
xchg
pop
cld
aaa
adcl
rorb
mov
adcl
and
enter
cmovp
incl
bound
rcll
inc
dec
xchg
jo
push
xchg
push
mov
xor
inc
xchg
dec
pushl
je
xor
out
call
imul
mov
pop
push
add
pushl
jo
ljmp
fisttpl
fnstcw
add
push
mov
dec
les
jo
push
leave
in
pop
jg
dec
idivb
pop
wbinvd
loop
decl
mov
cmpsb
xchg
sbb
cs
dec
mov
mov
and
fwait
xchg
popf
mov
pop
js
insb
out
sbb
dec
leave
jle
jp
jle
sbb
and
das
pop
iret
xor
fwait
jb
adc
clc
cmp
xchg
mov
mov
or
sbb
cmp
xchg
xor
push
test
out
jmp
dec
jb
rol
xchg
xchg
sbb
ror
sbb
push
hlt
pop
out
and
or
push
je
mov
out
frstor
cmpsl
add
decl
cmc
xor
je
xchg
xchg
mov
aad
push
dec
mov
daa
pop
sti
addb
jmp
cmpsl
in
aaa
cmp
mov
out
rorb
decl
inc
sahf
pop
cwtl
add
xor
loop
mov
and
insl
mov
sbb
incl
xchg
sub
mov
out
loope
ret
jnp
dec
stc
jae
add
mov
fdivr
call
addr16
or
leave
add
mov
movsl
idivb
lods
test
fwait
repnz
and
xor
add
test
ja
cwtl
lret
adcl
mov
cmp
jle
xlat
mov
repnz
pop
cmp
popa
jg
aas
int
inc
es
mov
pop
scas
push
push
xchg
sbb
das
mov
adc
jb
lret
xor
ljmp
or
ja
fistpll
mov
sti
jmp
lcall
lods
fdivs
aaa
push
cmc
daa
negb
ja
jb
pop
clc
jae
and
scas
iret
fcmovb
lcall
push
ficoms
fistpll
add
mov
dec
ljmp
stos
mov
pop
sarb
or
outsl
sub
ljmp
in
sub
add
xchg
mov
ljmp
gs
sbbl
xchg
loope
pop
std
add
aaa
fldcw
xchg
iret
hlt
cmc
jbe
jo
cmp
jb
lock
xchg
sub
ret
and
aas
mov
jne
lret
cwtl
jl
dec
sbb
iret
into
mov
sbb
das
cli
pop
jb
jmp
pop
insl
dec
mov
call
xor
loopne
push
imul
xlat
mov
xor
sbb
imul
jmp
and
sub
pop
cmp
push
cmp
cwtl
pusha
shlb
xor
fcomip
enter
and
fwait
jnp
stos
and
aas
cmp
ds
cwtl
push
aaa
lcall
or
stc
addr16
inc
mov
nop
vunpcklpd
mov
icebp
enter
inc
mov
cmpsl
out
call
lock
inc
or
pop
push
cmovb
pop
test
je
stc
pop
lock
int
call
std
ret
xchg
xor
jb
sbb
test
aaa
mov
jb
jge
jo
out
adc
jg
mov
hlt
ret
sbb
loopne
mov
mov
jmp
bound
push
cmc
nop
jmp
mov
fistpll
aad
jno
and
loop
ss
insl
pushl
clc
outsl
mov
mov
mov
fidivl
mov
xor
call
sub
nop
dec
aaa
mov
add
xchg
cmpsb
xor
incb
push
mov
mov
jbe
out
add
mov
inc
pop
call
lods
sub
scas
or
push
lahf
mov
jge
dec
arpl
lods
arpl
out
push
in
mov
inc
fcoml
fldl
lock
loopne
xchg
cs
mov
out
shlb
pop
push
add
mov
pop
adc
sbb
ljmp
in
movsl
xlat
aam
mov
xchg
bound
cmp
cwtl
insb
xor
mov
xorb
inc
pop
in
mov
xor
cmp
jg
and
pop
repnz
mov
jae
lret
xor
jmp
sbb
out
pop
stos
mov
mov
stos
in
jbe
or
shl
dec
inc
pop
push
daa
decl
push
lret
daa
int
sti
sbb
and
sub
xor
daa
mov
das
sar
or
pop
nop
or
femms
frstor
loope
out
dec
rcll
xchg
fwait
ja
cs
xor
xlat
mov
outsl
push
dec
aad
cmp
clc
in
insl
mov
rolb
mov
stos
leave
add
dec
add
jl
pop
mov
inc
pushl
fnstcw
sub
call
ljmp
adc
pop
mov
decl
pop
loope
clc
enter
and
cmp
outsl
shll
and
hlt
add
das
push
xor
sbb
out
lcall
and
dec
out
push
xor
ljmp
add
jnp
jnp
push
addr16
stos
fsubrl
mov
dec
ret
stc
xchg
mov
or
xchg
adc
stos
push
and
pushl
in
inc
push
dec
push
jl
in
fisttpll
aam
ret
incl
pop
mov
outsl
add
jnp
mov
andb
xor
adc
test
jg
cmc
sbb
inc
cmpsl
inc
cld
icebp
or
in
daa
push
mull
xor
les
cmc
int3
loopne
stos
ljmp
loope
mov
and
lds
jb
mov
cld
pop
enter
incl
and
out
jbe
mov
and
icebp
push
add
or
jns
push
ljmp
cmc
xor
xchg
mov
mov
out
call
adcb
xor
mov
pop
mov
pop
movsb
call
push
and
scas
popa
int
jnp
int3
pushf
add
sti
jbe
push
and
mov
decl
ret
inc
jae
loop
enter
mov
clc
cmp
jmp
push
call
lock
or
push
jb
pop
loope
nop
mov
lods
lcall
sub
lret
ja
xor
cltd
cld
or
pop
pop
jg
test
xchg
mov
or
mov
mov
loopne
xchg
push
rorb
mov
mov
fwait
jl
gs
pushl
ss
out
pop
jl
ss
loop
pop
pop
jl
inc
dec
inc
pop
mov
test
jle
std
jmp
ret
jl
inc
or
rcll
xchg
push
xorl
addr16
mov
pushl
incl
cmp
or
sub
push
insb
stos
push
repnz
cli
decl
mov
enter
mov
jne
jnp
cmp
call
sub
repnz
push
mov
push
cmpsb
je
test
das
mov
xor
jo
mov
mov
lock
dec
pushf
lcall
push
loopne
mov
xor
out
lcall
cmp
push
dec
xchg
popa
sbb
jno
mov
pop
gs
andl
xor
sahf
ja
call
or
inc
aad
adc
rcrb
push
popa
into
push
loopne
das
pushl
fsubrp
adc
push
aam
add
sub
out
cli
rcr
pop
imul
scas
add
sbb
jmp
push
imul
push
cwtl
aam
sbb
test
mov
push
faddp
mov
dec
ds
sbb
push
mov
dec
cmp
jne
mov
loopne
das
jae
data16
push
test
test
stc
sbb
es
pop
ss
es
std
pushl
xchg
nop
test
pusha
imul
incb
out
xchg
pop
stc
daa
repz
inc
mov
mov
stc
stos
xor
xchg
push
push
push
decl
lcall
cmp
jns
cmp
add
mov
mov
jge
pop
sahf
aad
mov
lcall
ss
ret
sahf
pusha
dec
iret
pop
mov
call
ja
mov
jno
add
cmp
pop
jl
pop
rol
sub
mov
push
jne
push
ljmp
mov
or
jmp
push
jae
pop
jbe
adc
xor
mov
push
cmpsl
cmp
cmpsl
cmp
fists
int3
ds
in
mov
xchg
cmpsl
fisubs
rcrl
scas
clc
jno
ljmp
test
hlt
int3
mov
sar
push
nop
lock
lock
les
nop
or
sbb
xlat
fidivrl
dec
aam
jecxz
inc
adc
cmc
mov
xchg
movsl
pop
add
sub
pushl
sub
rcl
cli
xchg
repz
sub
dec
mov
mov
ds
decl
stos
and
pop
xchg
jno
sub
into
push
test
mov
rolb
fildll
ds
xor
sbb
movsb
fisubl
imulb
sbb
push
mov
mov
mov
adc
sahf
xor
and
into
lahf
cmpsl
subb
xor
ret
shrb
cmpsb
sub
outsl
or
sbb
aam
call
xchg
imul
inc
fisttpll
mov
ss
das
jecxz
sahf
in
push
repz
jge
scas
dec
je
call
inc
lea
das
mov
mov
xor
jmp
movsl
push
push
fidivrs
out
mov
in
std
push
inc
movsb
mov
jns
scas
or
jmp
sub
inc
and
pop
jne
stos
and
mov
pop
stc
dec
aas
fildl
cmp
mov
jo
jge
movsl
out
jge
xor
testb
jmp
xchg
mov
dec
into
mov
cmpsb
jle
or
cmp
fisttps
ss
dec
popa
rolb
rol
cmp
lock
je
sahf
arpl
dec
and
cmp
sbbb
aaa
loopne
call
xchg
push
mov
push
sub
cmp
sub
lds
movsl
insl
jg
loop
test
cwtl
movsl
es
adc
pushf
inc
jae
ljmp
clc
mov
fmull
pushf
and
sub
gs
decl
cmpsb
jb
pusha
es
lahf
mov
inc
js
mov
scas
movb
jne
iret
mov
xchg
pop
ja
and
negl
jnp
ss
es
push
lock
incl
cmp
les
or
fldcw
xchg
sbb
mov
cmp
push
mov
gs
lcall
mov
and
push
dec
lock
dec
mov
das
jp
lret
scas
cmp
cmp
call
xor
pop
out
mov
inc
mov
mov
pop
cmp
mov
or
fisttps
testb
add
decl
imulb
into
clc
dec
jg
jp
mov
clc
fdivr
lcall
jp
sub
cmpsb
cmpsl
jb
fs
daa
sbb
inc
cmp
jb
jge
xchg
fdivrl
lods
or
xchg
andb
add
inc
scas
pop
jmp
dec
incl
divl
sub
cld
inc
orl
call
and
pushl
lods
sbb
fsubrl
or
cmp
dec
xchg
fisttps
dec
mov
cltd
add
xchg
decl
das
testl
fdivr
xchg
cmp
sub
gs
push
push
mov
insl
mov
ja
pop
add
stc
push
xor
addr16
cwtl
cld
xchg
cld
insb
stos
dec
pop
out
aaa
lcall
int3
inc
xchg
shll
adc
icebp
ret
mov
sub
test
iret
imul
or
je
add
aas
adc
sbb
filds
hlt
jmp
lret
push
mulb
stos
sub
test
and
mov
jle
outsl
lcall
std
subl
leave
stos
mov
pop
repnz
lcall
repnz
outsb
add
cs
pop
repz
mov
cmp
jecxz
ljmp
cmp
xchg
repz
shr
lods
dec
rcll
imul
nop
inc
bound
mov
mov
call
mov
mov
push
pop
ja
sbb
mov
dec
mov
jbe
iret
fs
jmp
mov
out
inc
inc
out
cmp
xchg
in
std
in
dec
js
lret
ja
pushl
mov
inc
frstor
dec
mov
cltd
mov
or
add
shrl
pop
push
mov
insb
outsl
lods
sahf
repz
mov
inc
push
xchg
xchg
cmpsl
imul
pop
je
adc
cld
jb
xchg
pop
lcall
push
call
xor
repz
xor
jmp
or
aaa
xlat
lock
stos
adc
pop
dec
push
mov
repz
jbe
stos
rclb
inc
sbb
ficomps
imul
pushl
sbb
loop
pop
std
loope
dec
pop
aad
in
in
fcomip
filds
enter
aas
dec
jne
js
cmp
movsb
jmp
mov
inc
xchg
sub
lods
cltd
in
loop
xor
shlb
pusha
fidivs
and
mov
popf
adc
cmp
sbb
cmp
xor
adc
lcall
std
call
movlhps
dec
jns
cmp
iret
inc
insb
test
cmp
test
decl
push
cmp
pop
mov
enter
fistps
inc
mov
add
clc
jmp
aaa
push
pushf
sbb
mov
popf
sbb
nop
jg
mov
jae
dec
in
ljmp
push
push
insb
test
ljmp
jbe
add
icebp
push
xchg
cli
cmp
out
enter
in
add
addr16
mov
cmpsb
mov
mov
mov
pop
ja
scas
pop
shrl
ljmp
ja
mov
cmp
xor
inc
sti
dec
push
jmp
jmp
data16
add
mov
repnz
push
es
decl
rclb
call
xlat
cli
lahf
lret
std
xor
xchg
xor
add
test
ret
lcall
enter
call
loopne
negb
dec
lahf
idivb
dec
jle
mov
das
mov
ljmp
jle
call
out
cmp
inc
push
mov
dec
loopne
shl
push
mov
loope
pop
or
add
decl
and
dec
cli
out
dec
repz
int
adc
cmpsb
ret
mov
dec
subl
icebp
lock
fbld
loop
jb
mov
incb
lods
es
jmp
inc
or
out
arpl
lock
inc
xchg
test
lods
loopne
sbb
fsubrs
or
mov
adcl
addb
std
jp,pn
xchg
and
pushl
jb
xchg
ja
pop
lea
xorl
xor
sbb
call
pop
push
push
pop
mov
cwtl
or
inc
in
mov
int3
mov
push
cwtl
inc
test
inc
dec
pop
push
popa
scas
rorb
in
scas
int
push
clc
loop
std
jmp
mov
test
mov
dec
jle
pop
test
mov
sub
inc
jns
shrb
dec
imul
insb
dec
xor
xchg
insl
inc
int3
incl
fdivrl
addb
adc
xor
adc
popf
int3
jo
dec
call
xorl
push
adc
mov
inc
imul
mov
push
cmp
pop
bound
add
push
jle
jge
mov
decl
xor
stos
aad
test
and
cmp
jg
cmpsb
mov
cmp
enter
pop
clc
jecxz
ret
int3
xchg
sub
outsl
rcrb
popa
mov
ljmp
stos
dec
out
pusha
adc
repz
hlt
jns
add
inc
mov
cmpsl
and
sbb
daa
sub
mov
inc
lds
test
in
sub
ja
xchg
xlat
push
mov
and
pop
les
ret
fildll
cmc
popa
lock
stos
bound
dec
jp
fwait
movsb
pop
aad
and
rolb
mov
into
or
call
iret
mov
xor
adc
pop
fisttpl
pop
jl
negl
sbb
push
push
mov
daa
lods
add
mov
mov
jae
xor
adc
mov
jno
inc
inc
je
fsubs
loop
xchg
mov
decl
pop
pop
adc
mov
scas
insl
dec
shll
imul
cs
dec
and
decl
iret
xlat
leave
js
push
push
mov
lahf
mov
jb
aam
push
jmp
outsb
call
cmp
hlt
dec
mov
hlt
testl
xlat
jecxz
mov
mov
insl
jmp
imul
add
adc
xchg
lret
ljmp
pusha
mov
dec
in
cmp
test
in
xor
pop
ret
incl
jbe
mov
xchg
jnp
push
xchg
test
xor
mov
popf
dec
jo
cmpsl
int
inc
in
fstpl
jns
movsb
mov
scas
add
outsb
pop
xor
pop
fisubs
cmp
push
je
lods
pop
cld
scas
shlb
pop
gs
repz
lret
sub
das
clc
xor
and
sbb
jecxz
aas
arpl
jmp
mov
jg
mov
outsl
lock
dec
ja
sar
movsb
movsl
adc
notl
adc
add
inc
mov
lret
enter
test
adc
mov
push
mov
add
push
jecxz
xchg
sbb
adc
rcrb
and
lds
int
or
xchg
mov
loopne
call
in
sbb
stos
daa
push
sbb
pop
inc
sbb
addb
and
mov
call
out
push
enter
push
or
iret
mov
cld
or
pop
add
incl
pop
mov
repz
fistps
xchg
lahf
mov
cmp
jae
xchg
es
sub
mov
mov
mov
push
xchg
dec
push
call
pop
adc
xchg
sub
fidivs
pop
imul
movl
iret
mov
jg
pop
out
inc
mov
loop
loope
adc
mov
xor
stos
and
cmp
rcrb
mov
adc
nop
add
or
mov
setp
adc
lcall
mov
cmp
mov
lret
push
outsb
mov
shl
movsb
add
lcall
adc
push
dec
add
lock
pushl
mov
push
hlt
fcoml
pop
jg
jmp
outsl
std
jp
add
les
cmpsl
xchg
cmp
fcmovne
cmp
mov
mov
subb
lret
push
adc
imul
mov
jns
stc
ret
cmp
out
mov
xlat
add
adc
xor
out
incl
and
rolb
mov
xor
fldt
push
jne
in
xor
test
outsl
xchg
icebp
fsts
je
call
xor
dec
decb
sub
jmp
xor
jmp
adc
das
mov
sbb
div
aad
pop
icebp
mov
push
ret
push
jbe
test
push
loopne
decl
and
fucom
push
in
pusha
xor
fcomps
xor
call
scas
xchg
aas
mov
inc
mov
sti
inc
mov
add
add
fcmove
clc
and
pop
cmc
jmp
xor
jns
pushf
jnp
and
loop
dec
and
aam
sti
gs
lcall
mov
lods
pop
fs
jb
pop
mov
shl
dec
inc
push
or
cmp
mov
nop
icebp
ljmp
inc
enter
decl
lods
mov
pushl
pop
sbb
ss
and
stos
repz
lea
rcrl
scas
mov
std
pop
dec
push
push
lea
fcomps
int3
jg
mov
push
jnp
xchg
movb
mov
add
incl
loopne
jge
mov
jmp
call
pushf
xchg
addr16
imul
cmpsl
mov
adc
aas
inc
aam
sti
aam
addb
jnp
jo
lea
leave
fdivrp
ljmp
xor
jns
cmp
mov
cmp
mov
insl
mov
insb
stc
sbb
mul
mov
or
daa
jecxz
push
pusha
daa
dec
insl
arpl
icebp
xor
pusha
ljmp
pop
popl
jle
dec
mov
xchg
mov
push
inc
stos
popa
addl
or
ljmp
add
push
jb
sbb
cli
and
xor
sahf
mov
ljmp
xchg
cmpsb
movsl
incl
dec
ficompl
popf
out
add
jmp
imull
add
cmc
shll
sbb
xchg
aam
test
jb
sar
fcoml
in
hlt
out
sti
or
inc
out
test
adc
push
lahf
and
scas
mov
mov
fisubrl
mov
jo
inc
pushl
fisttps
shll
dec
xchg
popf
sbbl
push
lahf
sbb
mov
enter
stos
mov
push
or
or
out
dec
pop
call
negl
xchg
mov
daa
xchg
add
push
adc
int3
mov
test
mov
push
and
mov
ljmp
repnz
and
popa
sti
adc
cmovne
xchg
mov
mov
mov
pop
inc
jmp
xor
xchg
js
mov
lods
ss
mov
hlt
ljmp
cli
dec
movsb
js
pop
call
inc
ss
mov
psllw
jg
ljmp
loopne
mov
scas
dec
mov
jge
xorl
adc
incl
data16
sahf
orl
mov
push
ret
cmp
sbb
in
loope
pop
adc
inc
dec
repz
jmp
rcrl
sbbl
and
lret
sti
test
cli
dec
lahf
mov
int
mov
dec
add
xchg
xor
ljmp
cmpl
mov
fs
fwait
dec
cwtl
insl
xlat
in
pop
and
push
ret
lcall
push
iret
push
cmp
jmp
mov
inc
jge
aad
std
orb
or
pop
cwtl
loope
ljmp
jl
dec
loop
mov
mov
inc
popa
arpl
dec
lahf
shrl
and
test
dec
push
pop
mov
in
negl
push
jo
pop
cmc
incl
cltd
sarb
int3
push
cwtl
cwtl
rcll
aad
sub
pop
mov
xor
dec
stc
sub
adc
mov
jl
test
jmp
xor
ss
xlat
lcall
or
in
aaa
into
push
pop
inc
iret
aaa
cmp
sbb
xchg
fidivrl
or
adc
ljmp
lret
sub
les
sub
es
ljmp
push
lock
movsb
xchg
jns
xchg
sub
mov
mov
sahf
mov
subb
add
fiadds
xor
pusha
shr
out
pop
aaa
in
push
cmp
lret
ret
jae
xor
jle
inc
and
mov
fadd
xor
std
pushl
std
div
or
xchg
cwtl
jo
xor
sub
out
cmc
pop
pop
dec
jns
jmp
adc
cld
call
push
push
pop
pop
push
push
icebp
imul
orl
into
popa
mov
adc
sub
out
jl
test
orl
aam
xchg
psrld
push
dec
cmpb
inc
std
out
adc
xor
ss
fnstenv
inc
cmp
ja
xchg
out
lds
mov
push
lock
lcall
xchg
ja
mov
pusha
out
xchg
xor
aad
sub
lcall
inc
cmp
push
fadd
out
sti
es
sbb
xchg
stos
ficoms
lock
or
adc
jmp
sbb
pop
ljmp
pop
cltd
inc
dec
pop
roll
mov
inc
jmp
cmp
dec
test
into
pop
out
mov
sbb
pop
mov
cmc
dec
dec
mov
mov
cld
call
add
pusha
dec
fisubrs
dec
enter
std
mov
scas
out
mov
dec
insl
in
in
pushl
push
mov
xor
adc
adc
pop
cmp
xor
in
pop
int
scas
xor
or
cwtl
loopne
dec
pushf
inc
mov
test
jmp
loope
int
popf
add
xorl
mov
xchg
xor
and
imul
incl
ljmp
adc
or
jo
popa
or
fildl
lds
imull
pop
into
or
leave
mov
pusha
push
push
adc
les
gs
lods
inc
pop
adcb
cmp
mov
push
aad
pushf
dec
or
xchg
adc
mov
xchg
jbe
pop
mov
sbb
pusha
cmp
or
pushl
cmp
sub
cmp
lahf
mov
cmove
test
orb
lret
call
inc
push
js
lret
push
pop
push
sub
call
mov
fiadds
scas
insb
mov
test
pusha
sub
push
decl
jmp
out
pushf
mov
xor
mov
dec
repnz
dec
mov
lods
pushl
mov
mov
loopne
jns
add
sub
test
jg
js
popl
dec
mov
ljmp
mov
scas
push
jne
es
pop
scas
cli
inc
pop
push
lcall
and
mov
inc
jecxz
and
lahf
loopne
clc
fists
sbb
jb
lcall
leave
stos
adc
adc
and
jnp
dec
js,pn
sbb
ljmp
ret
repnz
fnop
iret
lods
dec
mov
mov
push
jp
ljmp
ss
mov
js
subb
inc
mov
mov
iret
filds
push
mov
jno
mov
pop
lock
mov
add
or
add
jl
mov
adc
cld
dec
add
sbb
push
test
shr
fldt
out
jne
mov
inc
dec
sub
xor
or
loopne
jbe
loop
mov
mov
lods
push
push
into
adc
or
mov
xlat
push
pop
dec
inc
cli
imul
cld
mov
lahf
cltd
xor
sbb
jmp
xor
call
push
inc
mov
movq
sub
or
mov
mov
jmp
shrb
pop
jnp
jbe
and
lds
mov
lods
adc
pop
std
sar
push
dec
and
mov
mov
xchg
sbb
je
pop
fistps
dec
leave
cli
das
jb
and
jmp
or
mov
mov
jle
jge
dec
dec
imull
rcr
loop
call
cmc
jo
jmp
add
fwait
mov
popa
pop
testb
ljmp
jb
out
jl
or
jg
repz
out
fdivl
frstor
or
mov
je
inc
cmc
stos
jmp
adc
shll
ret
add
push
ljmp
sbb
mov
inc
shrl
and
cmp
fdiv
stos
push
cmp
jmp
inc
mov
jno
push
or
and
sbb
xor
lock
shrb
pop
push
test
ljmp
call
push
testl
sti
ret
jmp
lock
outsl
cs
cmp
cs
inc
sbb
jg
mov
pop
movsb
inc
push
lcall
fs
jnp
ds
cli
mov
cld
mov
pop
fs
xchg
loopne
pop
add
cmp
push
or
mov
aas
rclb
lock
and
mov
loopne
lcall
iret
idiv
cwtl
lods
xchg
cli
movsb
mov
clc
xchg
add
mov
inc
mov
sbbl
arpl
clc
in
loopne
dec
sub
mov
stos
fcoms
nop
mov
xlat
cs
fisubrl
mov
scas
test
xchg
and
mov
decl
movsl
inc
aas
push
xor
sarl
cmc
adc
cli
in
pop
xchg
mov
int3
lds
js
or
mov
dec
jmp
xchg
jbe
dec
sti
decl
testl
dec
jmp
ss
int3
pop
xchg
mov
insb
pop
insb
jmp
icebp
sub
cs
psubw
rorb
popa
lret
repnz
and
pushl
lcall
pusha
inc
inc
aam
xchg
movsl
sub
add
xchg
shrl
hlt
and
jmp
lock
pop
and
mov
xorb
mov
mov
mov
jl
out
cli
jmp
rcrb
mov
push
gs
ds
mov
orb
imul
aaa
cmc
cmp
lret
aam
cmpb
icebp
push
lcall
mov
dec
add
inc
cmp
sbb
lcall
cmp
lret
mov
push
push
xchg
pushf
sub
xchg
cmpsb
pop
lcall
dec
jge
int3
cmp
arpl
sahf
fldl
lret
fs
scas
lea
call
mov
jae
dec
leave
sbb
mov
inc
sbb
fdiv
ljmp
sbb
and
sbb
jecxz
cmpsb
add
cmp
adc
pushl
and
lods
jb
fidivrl
or
jmp
lods
cmc
popf
dec
add
mov
inc
mov
push
dec
pop
adc
sbb
dec
pop
test
adc
aad
shrl
imul
call
sub
mov
out
xchg
cmp
aas
or
repnz
inc
add
jmp
imul
and
xor
stc
mov
push
lds
sbb
movsl
inc
or
xchg
jae
mov
adc
or
adc
cmp
sti
push
ljmp
insb
inc
cwtl
aam
movsb
enter
lcall
cmp
rorl
outsb
xor
cwtl
push
in
arpl
xchg
lds
dec
loop
or
push
in
pop
ss
xchg
ljmp
or
dec
add
mov
mov
jno
rolb
jne
loope
mov
push
xchg
xor
lock
in
leave
add
and
push
lea
fwait
sub
cli
cmp
movsb
or
movsl
push
ljmp
mov
lcall
xor
xchg
in
adc
negl
mov
imul
mov
fcomi
sub
adc
or
jecxz
push
popf
testl
cmp
or
xchg
sti
decl
sub
pusha
iret
sahf
push
jp
jl
mov
xchg
jp
popf
lret
aam
dec
jle
enter
jmp
popa
cmpsb
arpl
out
imul
or
mov
insb
mov
push
xchg
scas
add
decl
test
sub
subb
ret
pop
or
test
leave
addr16
xchg
lds
fdiv
cmpsb
adc
inc
andl
add
cmp
xlat
pop
mov
jno
sub
leave
inc
adc
dec
scas
loopne
jg
cli
push
je
arpl
stos
jae
xlat
addr16
sti
sbbl
mov
loope
in
lcall
add
test
in
and
xor
push
shll
lret
stos
push
subl
mov
push
cwtl
daa
fmuls
xor
jmp
jmp
decl
mov
pusha
jp
daa
jmp
cmpb
test
lock
ljmp
pusha
jp
mov
stos
nop
out
jnp
cmp
push
pop
aaa
lock
aam
dec
sbb
pop
ficoms
mov
xor
scas
and
cmc
sbb
cmp
jbe
adc
call
sub
scas
cmp
xchg
rorl
add
cmpl
jecxz
loopne
data16
lock
int
pop
enter
or
repz
cmpb
mov
add
jmp
sahf
loopne
push
adc
pushl
jbe
sbb
mov
iret
rep
push
xchg
fs
push
xchg
lret
push
dec
lcall
cmpsl
imul
pop
aad
xchg
xchg
les
jae
dec
lcall
dec
push
inc
mov
fidivs
mov
push
jmp
in
mov
lret
cmpsb
rcrl
mov
adc
adc
int
ljmp
adc
cmp
inc
add
mov
jmp
add
and
pop
imul
fdivrp
mov
jae
andl
push
sub
mov
adc
pop
movsl
mov
mov
fwait
lea
insb
mov
mov
pushl
push
mov
sbb
mov
pushf
test
pop
pop
pop
decl
fdivrs
xor
stos
cld
shl
mov
pop
mov
pushf
add
xor
fiadds
mov
add
fiadds
repz
dec
ds
push
push
into
jl
mov
mov
mov
pop
mov
in
test
jle
pusha
std
mov
sti
test
dec
cmp
inc
mov
mov
outsl
jnp
adc
aam
jl
xchg
hlt
mov
mov
sbb
hlt
xchg
sahf
aam
icebp
lcall
pushf
mov
mov
push
cmc
cmp
bound
ljmp
clc
popf
stos
xor
pop
cmpsb
inc
or
add
adc
jmp
fucomp
cmpsl
adc
inc
cli
mov
mov
icebp
fistpll
mov
icebp
mov
mov
fidivrl
jae
mov
push
negl
int
ds
or
or
jmp
dec
push
jbe
sbb
or
decl
fsts
cmp
stos
cmc
sbb
xlat
ret
mov
outsb
idivb
sbb
ljmp
clc
cmp
mov
hlt
mov
fmuls
xor
mov
shl
xchg
xchg
imul
or
pop
ss
cmp
movb
lds
dec
jge
stc
loop
ljmp
stos
imul
ffree
bnd
push
nop
push
cmp
hlt
inc
jmp
pop
out
dec
dec
imul
lahf
mov
adc
ljmp
mov
push
mov
mov
fstl
dec
pop
shrl
push
insl
loop
push
inc
repz
clc
ljmp
outsb
ret
sbb
loope
dec
mov
jmp
push
xchg
mov
jg
mov
in
outsb
pop
loop
out
arpl
add
call
ljmp
leave
or
dec
in
xor
sub
or
out
mov
int
xor
in
call
cs
cmp
test
testl
clc
inc
das
jp
int3
dec
pushl
mov
adc
outsb
push
in
aad
scas
push
fs
sar
ljmp
shld
mov
inc
jne
fs
outsl
lret
lock
or
sbbl
enter
adc
jmp
mov
mov
inc
pushf
js
incl
popa
xor
xchg
rcl
adc
sub
and
xor
lea
pop
insl
les
in
mov
mov
out
fwait
cmpsl
iret
ret
lods
ds
int
clc
adc
ret
lahf
dec
pushl
push
andb
testb
aam
repnz
sbb
pushf
iret
iret
jg
or
mov
pop
ss
in
mov
subl
xchg
sbb
aaa
pop
rcr
xchg
add
rcrb
ljmp
mov
iret
cmp
add
xchg
xor
into
sahf
pop
sub
mov
decl
gs
xchg
sarb
nop
gs
sub
faddl
cmp
imul
nop
mov
sahf
aaa
mov
arpl
fnstcw
push
or
movlps
cmp
mov
adc
mov
dec
pop
into
mov
xchg
push
test
push
adc
mov
add
xor
lcall
lods
shll
add
push
xchg
pop
cmpsl
das
mov
popa
cmp
mov
movsb
pop
hlt
push
lret
enter
sar
call
jns
adc
adc
rclb
test
loop
add
dec
stos
mov
dec
mov
lock
pop
in
sub
fs
incl
pop
mov
pop
aaa
imulb
out
test
fnsave
push
xor
lock
idiv
sub
pushf
cmp
mov
popa
das
mov
nop
dec
aad
dec
push
xor
incl
mov
into
gs
js
push
sarb
test
pop
mov
or
sbb
and
out
push
sbb
js
jo
push
add
push
mov
aam
je
scas
call
pop
scas
jbe
dec
jmp
adc
xchg
int
pop
aaa
into
mov
cltd
inc
in
dec
mov
lcall
fists
rcrb
mov
shlb
sub
dec
movsb
and
fiaddl
lahf
pusha
or
mov
and
cs
in
pop
out
inc
jns
out
scas
cmp
dec
ljmp
mov
mov
and
mov
aaa
rcl
sbb
or
sbb
lods
ja
movsb
mov
jecxz
xor
xchg
sub
ljmp
dec
fimull
lods
push
pusha
sbb
in
mov
mov
jo
xor
pusha
mov
in
int
xchg
xor
xchg
mov
cmpl
call
pop
inc
leave
push
sbbl
mov
mov
sub
jne
pop
cmp
or
insb
aam
sar
das
jp
push
scas
mov
mov
pop
xlat
or
pop
push
js
jp
adc
filds
flds
jbe
cld
inc
imul
mov
push
and
add
inc
repnz
and
inc
call
dec
loopne
xchg
testl
or
lods
jmp
push
jne
jmp
aad
lahf
mov
cs
cli
int
ja
adc
enter
adc
xchg
incl
fs
push
loop
je
add
and
jg
adc
notb
frstor
add
ljmp
or
cld
xchg
mov
lock
decl
push
sub
scas
and
jecxz
dec
or
rorb
call
loopne
test
sbb
loopne
mov
imul
xor
add
nop
pop
cli
inc
lods
mov
icebp
fcmovnb
clc
aas
in
jl
lods
aam
sbb
jbe
xchg
fst
mov
jg
add
or
mov
incl
mov
cmp
push
push
jbe
cli
add
add
dec
xchg
mov
pusha
push
pop
inc
cmpsb
inc
cmp
out
cwtl
push
mov
nop
into
xor
and
js
lcall
filds
rcrb
nop
mov
pop
sbb
xchg
call
ja
lahf
and
fcoml
dec
out
dec
sub
adc
movsl
inc
sahf
sti
push
daa
incl
shr
xlat
fdivrl
mov
leave
mov
mov
les
sub
mov
lcall
fwait
push
mov
sbb
fs
add
push
or
add
je
lea
dec
ret
decl
cmp
jb
aam
or
push
jge
sbb
sbbb
call
shll
rep
or
jmp
sar
pusha
xchg
jmp
push
jg
and
roll
jmp
leave
cmpl
nop
out
and
inc
scas
xor
xor
xchg
incl
adc
push
xor
or
dec
inc
cli
ret
jle
push
adc
loop
fprem
mov
outsl
cli
fadd
fsubp
jle
mov
jbe
xchg
jle
pop
cltd
fisubrs
cmp
out
mov
mov
in
leave
int
in
jge
mov
test
and
lods
repz
frstor
cmp
pop
fisttps
jno
call
cmpb
aas
setno
jo
xchg
jecxz
nop
repnz
ljmp
clc
dec
std
imul
or
popa
push
out
dec
mov
adc
movntq
out
imul
or
mov
pop
xchg
or
enter
sbb
call
mov
xchg
cmpsl
loope
incl
and
adc
mov
in
dec
push
xor
adc
xchg
cmp
dec
mov
jmp
adc
in
mov
fdivrl
sahf
and
mov
jmp
push
outsb
je
adc
std
jmp
into
add
xchg
jb
sbb
xchg
icebp
clc
push
or
ljmp
mov
subb
out
mov
insb
arpl
and
xor
notb
or
sbb
cmp
and
ljmp
out
push
incl
jae
xor
lcall
sti
aam
or
out
and
call
adc
loopne
stc
xor
inc
xchg
xor
outsl
xchg
mov
pop
lock
mov
pop
push
jl
bt
push
jp
fimuls
pop
mov
scas
pop
mov
jg
dec
lcall
js
sbb
inc
push
cmp
addr16
dec
adc
cltd
icebp
ljmp
cmp
pusha
test
jecxz
mov
fistps
stos
jp
aaa
fwait
mov
mov
sbb
in
fimull
inc
movsl
orl
mov
inc
addr16
test
std
dec
mov
ljmp
add
out
xor
jecxz
jle
xor
dec
nop
xorl
fldenv
in
stos
mulb
in
jmp
cli
xchg
loop
dec
lcall
and
jns
pop
add
test
insl
loop
mov
jmp
fldl
lods
movsb
jl
ret
push
jecxz
cmp
inc
es
stos
or
xor
mov
sub
das
clc
decl
adc
sub
out
add
cli
cmc
xor
test
fstpt
les
loop
dec
cltd
dec
ret
push
bound
imul
shl
and
shrl
movsl
or
rorl
pop
fnsave
xchg
pop
dec
mov
jg
mov
test
jnp
fnstsw
xchg
aam
dec
data16
jmp
cmp
jmp
inc
imul
cwtl
pop
inc
enter
jbe
pushl
clc
dec
mov
cmp
xor
shr
outsb
push
mov
cmp
pop
arpl
push
pushl
dec
xchg
in
push
fbstp
fmul
lods
addr16
ret
xor
sub
mov
pop
pop
push
mov
loope
decl
movsb
mov
movsl
dec
lret
stc
aaa
cmp
ret
imul
mov
repnz
adc
jl
mov
xor
sub
cmpsl
out
adcb
mov
mov
and
add
lods
push
enter
pusha
sarb
lcall
push
and
call
popa
ja
xchg
jae
sbb
lret
and
adc
popa
inc
aaa
mov
orps
sub
out
add
jns
lcall
js
scas
push
or
inc
mov
ja
fidivl
mov
out
call
dec
push
mov
push
push
jmp
xor
fwait
mov
dec
mov
ljmp
push
lock
ret
sbb
mov
xchg
aas
pushl
lods
jno
pushf
stos
cmp
cmp
inc
inc
std
jns
repz
ja
test
cmp
imul
scas
cmp
mov
fs
in
sbb
jg
mov
nop
push
jl
es
in
pop
imul
sar
arpl
clc
int
es
xor
pop
je
adc
and
scas
sub
es
pop
add
dec
gs
mov
fsub
push
out
mov
fwait
ljmp
mov
aad
or
andb
mov
repnz
loop
jecxz
cwtl
mov
lcall
jle
in
std
aam
and
dec
fisttpll
fnstsw
nop
lahf
push
inc
xchg
mov
inc
mov
incl
cmp
dec
mov
lret
or
rcr
push
dec
push
push
sarl
ljmp
out
insl
add
lret
fabs
fsubp
and
dec
mov
pop
aam
or
sbb
bound
call
mov
incl
dec
push
pop
add
cmp
push
jns
lods
sub
inc
cmpsl
cmp
jle
jno
enter
jmp
imul
jl
rorl
pop
test
adc
lea
movsl
jmp
ljmp
push
xlat
and
pop
in
xchg
sbb
jg
out
in
mov
lock
push
push
icebp
scas
imull
xchg
inc
mov
cmpsb
pop
ja
shr
jecxz
rcrl
xchg
mov
andb
testl
push
mov
call
subl
cwtl
sti
popf
xor
push
cmpl
es
add
nop
dec
xlat
xor
sar
incl
jbe
sahf
cmp
pop
push
mov
test
mov
aam
fnstenv
inc
call
push
and
subb
inc
jb
xchg
int3
enter
in
mov
jno
std
fcomip
lcall
inc
dec
testl
pusha
sbb
ret
jnp
outsl
mov
mov
sbb
sub
dec
xchg
jge
cmp
jmp
ror
scas
lock
incl
mov
test
jge
call
cmp
cwtl
shrl
stos
scas
sub
pop
sbb
lret
add
inc
xor
mov
fbld
sti
out
std
mov
and
mov
loope
lret
pop
pop
add
cmp
pop
test
pusha
jb
jge
movsb
jmp
adc
mov
dec
aad
std
and
push
cs
xchg
add
adcb
cmp
int3
pushl
ret
incb
xchg
and
jae
mov
inc
jl
add
jae
cli
xor
ljmp
in
push
inc
adc
inc
mov
jp
shl
shl
pop
mov
cmp
mov
bnd
in
inc
fisttps
push
std
cmp
fnsave
pop
fcmovne
push
sub
cmp
push
cmp
pop
add
ljmp
std
stos
pop
mov
xlat
loop
cld
and
push
push
movsl
push
mov
loop
fldenv
and
out
dec
insb
jb
hlt
jmp
stos
dec
cs
mov
xor
ds
cmc
xor
jg
je
enter
cld
adc
out
mov
in
repnz
add
pusha
test
in
pop
in
out
mov
sti
jnp
xor
add
fcoms
fcmovu
sar
ljmp
jbe
jae
ficoms
ss
pop
outsl
mov
lea
popf
sub
add
mov
jns
mov
xor
sbb
cmpsb
stc
int3
adc
and
jae
call
jp
scas
sbb
into
shr
ss
push
push
push
sbbb
fistl
js
push
mov
ljmp
mov
cmpsl
rcrb
call
sarl
arpl
xchg
jmp
int
filds
in
push
stc
rorb
inc
ds
nop
inc
sti
sub
cmp
decl
inc
or
rcrl
sbb
jp
dec
cmp
sub
repnz
incl
push
outsl
push
xor
icebp
xor
mov
cltd
cwtl
out
sub
incl
lret
in
cmpsb
leave
std
mov
loopne
dec
popf
and
in
cmp
mov
pop
loop
fildll
mov
jge
cmp
jp
or
sbbl
enter
adc
dec
jmp
inc
aas
jns
jne
fsubrs
insb
sbb
push
pop
sbb
out
mov
mov
cmc
in
dec
inc
push
vmaxps
decl
jne
stos
pop
rorb
testl
or
or
lock
adc
fbld
incl
push
fdiv
inc
lcall
cli
cmp
lahf
adc
es
decl
out
cli
fisttpll
dec
jae
dec
dec
cltd
and
and
cmp
inc
ds
cmp
pushl
xchg
mov
fcoml
xor
test
js
jge
sti
and
aas
add
int3
andb
call
push
and
shl
pop
cs
cmp
fnstenv
pop
mov
or
pusha
adc
sbb
repz
inc
pop
inc
lea
aam
sbb
add
dec
pop
icebp
fbld
sbb
call
rclb
dec
xor
mov
inc
mov
iret
sub
setge
mov
fwait
mov
mov
incl
xchg
push
popf
mov
sti
mov
js
arpl
lea
cmp
sub
or
call
mov
adc
out
cmc
icebp
notl
mov
mov
decl
fstpt
movsb
popa
jle
mov
mov
icebp
jmp
add
faddp
lcall
sbb
and
negb
inc
clc
repnz
fsubrl
push
and
lods
lock
jg
push
imul
and
xchg
jb
shlb
jge
sbb
decl
mov
cmp
cld
push
and
adc
pop
jns
incl
pop
and
call
mov
insl
loopne
in
push
test
cmp
addr16
int
decl
lcall
pop
dec
cmc
lahf
sub
add
rol
pop
pop
nop
ljmp
clc
aam
fwait
shrb
les
pop
outsl
lcall
ljmp
xorb
xchg
ljmp
dec
jnp
lods
and
incl
sbb
out
es
jle
lds
pop
imul
daa
jle
or
or
push
cld
mov
shl
mov
loop
repz
xchg
in
out
cld
fbld
cmpsb
mov
and
mov
repz
aam
ficompl
das
aaa
cmp
decl
cmp
clc
pop
jmp
jae
sub
in
jge
fimuls
lds
dec
mov
andb
sahf
gs
xchg
pop
sbb
mov
sub
sub
pop
pop
push
xor
mov
xlat
rorb
ret
mov
dec
pushf
sub
push
imul
sub
mov
iret
push
inc
in
jb
sub
enter
lods
test
imull
fdivrp
mov
adc
and
cmp
add
xor
imul
out
inc
jle
jno
xor
insb
lds
out
sbb
lods
xchg
je
cs
decl
mov
push
push
out
out
or
mov
cli
out
incl
cwtl
pop
mov
pop
inc
outsl
clc
rcll
pop
mov
sahf
sbb
sub
adc
and
call
arpl
loopne
gs
mov
push
push
sub
xor
inc
cmpsl
out
incl
adc
shll
sub
fdivr
in
xor
pop
lods
and
test
decl
stos
loopne
test
cld
in
add
mov
call
jno
cmp
push
dec
pop
cmpsl
hlt
in
pop
lea
scas
sbb
cld
push
data16
mov
add
fcomi
inc
aaa
ficompl
js
jmp
cli
mov
mov
xchg
inc
es
and
sub
ss
lcall
sbb
ljmp
testl
mov
mov
fs
cmp
pop
idiv
call
xor
ret
inc
cmpsl
data16
cmp
fs
decl
loope
xchg
xchg
enter
stc
push
mov
insl
adc
mov
cli
arpl
out
jp
sbb
mov
and
push
xor
dec
cmp
jg
add
shll
sub
mov
pop
cmp
dec
lds
test
stos
sub
daa
add
fmull
out
mov
aad
in
jno
test
jle
mov
test
xchg
dec
pushl
mov
mov
or
cltd
jg
pusha
out
cmp
jns
ljmp
xchg
sbb
xchg
push
push
push
fwait
and
daa
orl
dec
loopne
iret
mov
mov
dec
cli
movsl
jp
cli
lods
xchg
aad
dec
aaa
and
cld
aad
fnsave
mov
jg
add
xchg
loope
sbb
test
mov
pop
dec
repz
arpl
inc
leave
shrb
push
mov
mov
scas
cli
mov
into
sahf
cmp
or
movsb
add
jns
and
aam
inc
mov
jnp
push
in
lds
leave
cmp
jo
repz
ds
cmp
aam
mov
push
push
arpl
push
add
rcll
jle
xchg
repnz
dec
inc
incl
shr
lds
mov
outsl
mov
daa
cmp
scas
cli
push
stos
ret
sti
adc
je
out
inc
pop
add
decl
add
pop
icebp
lods
and
test
xlat
push
mov
loopne
in
movsl
popf
sbb
fcmovnu
mov
lret
call
adc
insl
pop
stos
sbb
mov
lcall
push
sbb
sahf
push
pop
jae
mov
arpl
lahf
repnz
mov
lcall
imul
mov
or
clc
or
lret
pushf
cmp
mov
or
insl
stos
push
xlat
push
lock
push
out
lret
cmp
dec
arpl
cmp
inc
lods
mov
push
mov
cmp
nop
push
addr16
jne
test
jge
shrb
and
cmp
lods
push
fwait
sbb
outsl
lcall
in
stc
inc
mov
add
imul
xlat
and
stc
add
lcall
adc
mov
cltd
mov
enter
jmp
movsl
js
int3
xor
lcall
sub
sbbl
mov
mov
stos
fldenv
adc
inc
rolb
push
dec
xchg
xchg
mov
cmp
xchg
jg
jg
pushf
leave
aas
and
fwait
mov
jp
pop
fwait
jl
cmp
jb
incl
fnstenv
mov
ljmp
hlt
mov
xor
rorl
push
test
push
mov
inc
outsl
add
mov
pop
pop
insb
in
cmpsb
incl
pop
mov
popa
add
mov
daa
hlt
int3
dec
into
in
mov
add
mov
leave
std
inc
adc
mov
pop
mov
cmc
dec
inc
mov
adc
jp
mov
xchg
mov
lret
lock
inc
insb
mov
fbstp
ja
loopne
clc
movsl
mov
adc
inc
dec
mov
roll
adc
aaa
filds
sar
ljmp
dec
cmp
orl
mov
mov
cmp
xchg
sub
push
inc
popf
fsubl
push
pop
mov
in
xorl
call
xor
and
push
lcall
call
jbe
pop
ss
push
repnz
mov
int3
fnstsw
nop
sub
push
jmp
push
jne
push
cs
in
gs
adc
outsl
scas
xchg
dec
repnz
fdivrs
cmp
push
push
pop
outsb
jmp
movsl
mov
push
loop
xchg
mov
insl
or
daa
xchg
shrl
and
pop
cld
sti
lcall
in
rorb
jle
jp
movsb
dec
imulb
mov
shll
jmp
stos
and
cmc
sarl
jp
scas
stos
xlat
add
inc
pop
cwtl
jne
push
lods
push
cmpsb
mov
stos
push
mov
add
fst
pop
xchg
cmp
lahf
mov
lcall
xchg
jmp
aas
jno
or
iret
lock
mov
in
popa
into
ror
fistpl
aad
mov
aas
imull
ret
dec
nop
ds
insb
inc
not
and
xchg
pop
cli
cmpsb
dec
out
inc
sub
incl
fnstsw
inc
daa
xchg
test
pop
push
cmpsb
mov
xor
inc
je
mov
clc
or
std
lahf
in
pop
inc
pause
jbe
add
ret
mov
push
in
push
dec
rcrl
push
add
shlb
mov
mov
js
daa
add
jg
mov
daa
pop
aam
rcl
ljmp
aad
fsubrs
jbe
notl
dec
dec
sub
lock
pop
cmp
inc
imul
mov
arpl
dec
aas
mov
imul
adc
push
xor
jno
push
cmc
adc
andb
lock
incl
loope
bound
adc
mov
pop
push
lock
mov
push
lcall
outsb
lret
xchg
xor
push
xor
mov
dec
xlat
lea
ror
ret
add
cmp
mov
test
mov
mov
mov
mov
int3
scas
jg
cwtl
pop
push
push
inc
movsb
addr16
pop
icebp
lcall
adcb
es
pop
lcall
inc
mov
fcom
cmp
push
addr16
pop
adc
add
sbb
cmpsl
cmp
inc
je
inc
fnstenv
inc
insl
ljmp
scas
mov
movsb
frstor
or
mov
jle
pushl
inc
in
jo
push
push
adc
push
ds
sahf
pop
cmp
ljmp
decl
cmc
or
or
movsl
lret
dec
not
adc
pop
inc
mov
adc
lret
std
jg
mov
push
loop
dec
dec
xor
mov
call
adc
pop
or
mov
test
fdivrl
jne
repz
decl
adc
and
or
sti
lret
loopne,pn
sub
add
jle
dec
mov
outsb
xchg
cmp
repnz
jmp
jmp
mov
stos
push
sub
imul
jecxz
repz
cmc
mov
pusha
dec
push
cmp
call
std
popa
out
push
sbb
jecxz
push
pop
icebp
lock
movsb
adc
dec
xchg
push
fildll
and
sbb
xchg
and
mov
sub
scas
ds
xchg
pop
xor
cwtl
and
jmp
icebp
pop
pop
movsb
mov
jp
orb
mov
or
cld
jmp
sub
arpl
dec
int3
test
push
ret
lret
outsl
sub
sub
call
int
inc
xchg
dec
fadds
cmp
add
jbe
xchg
cld
test
add
ljmp
push
lods
mov
add
arpl
mov
repz
roll
xchg
cmpb
sbb
mov
sub
hlt
jg
iret
cmp
pop
pop
popa
mov
rolb
xor
jno
sbb
arpl
add
jp
sub
call
cmp
scas
out
mov
or
mov
push
inc
jg
push
daa
ds
mov
add
sub
mov
cmp
test
movsb
cld
pusha
pop
mov
lcall
cmp
lret
jo
faddp
jns
sbb
inc
das
and
mov
jp
fmull
inc
ret
lcall
push
add
and
jge
mov
incl
shrl
out
push
loope
mov
mov
stos
incb
mov
cmpsl
sbb
push
out
fdivrs
push
ret
mov
sub
push
mov
xchg
jge
repnz
cmp
in
fiadds
sub
push
int
pop
lock
ljmp
mov
push
inc
out
xor
fildll
push
push
or
popf
or
jg
mov
push
mov
push
out
xor
fnstenv
push
xor
mov
hlt
add
in
sub
xor
mov
or
insb
pop
decl
xlat
test
push
jge
pop
cmp
enter
mov
xchg
push
clc
pop
push
push
out
dec
jmp
xchg
dec
aam
inc
sbb
or
repz
jns
in
insb
inc
add
ljmp
adc
pop
push
fistpl
adc
pop
sbbb
push
pop
int3
xchg
rcrb
mov
popa
test
std
jg
cmc
insl
and
out
xor
xchg
sub
pop
loopne
aaa
mov
jbe
lret
aaa
cmpsb
push
stos
data16
aas
ds
filds
inc
mov
xor
in
sub
dec
mov
cmpsb
dec
andl
add
out
xchg
cli
xchg
inc
mov
movl
js
lcall
mov
loope
fisttps
jno
out
xchg
or
jmp
int3
or
sbb
lcall
inc
dec
jmp
pop
cmp
inc
mul
loope
popf
outsb
js
aad
out
cmpsl
dec
subb
dec
xor
ljmp
les
test
mov
add
dec
dec
mov
mov
adc
mov
decl
cmpsb
or
jno
jno
pusha
push
add
js
inc
cmp
scas
and
incl
inc
push
mov
xchg
test
push
pop
pop
mov
fsubrl
jno
mov
movsl
mov
les
pop
repnz
pop
sbb
pop
out
gs
repz
repnz
idivb
inc
clc
scas
mov
test
cmp
das
clc
inc
mov
dec
arpl
cld
xor
jecxz
sbb
and
mov
sbb
test
in
scas
ds
inc
ljmp
mov
dec
mov
push
xor
cmpsb
je
dec
push
cwtl
sbb
push
lcall
pop
repz
xor
and
clc
mov
out
dec
stc
ficoms
and
cld
mov
add
insb
mov
mov
rclb
enter
mov
incl
dec
push
out
xchg
pop
xor
dec
mov
push
inc
jb
and
jg
add
and
outsb
add
movsl
adc
lcall
pop
jno
mov
push
sub
lret
mov
in
xchg
xor
mov
call
lock
jmp
sub
sarb
mov
repnz
push
xor
test
daa
cmp
mov
xchg
pop
scas
in
cmp
jg
jae
gs
dec
test
mov
cmp
mov
push
xchg
mov
mov
ljmp
stc
xchg
jecxz
sti
jnp
mov
movsl
push
xchg
inc
inc
cwtl
inc
pop
setle
adc
scas
dec
loope
jl
or
add
je
sahf
and
scas
gs
js
dec
add
jae
into
decl
xchg
mov
rol
xorl
dec
int
fwait
sbb
in
xchg
ds
adc
decl
or
xorb
adc
pop
push
gs
mov
test
cmp
mov
xchg
dec
sar
sub
push
jmp
repnz
jo
xchg
je
inc
or
scas
sub
or
add
cmpsb
dec
xor
cld
push
cmp
mov
cmp
aad
add
cld
jg
dec
cmp
stos
push
test
xchg
ds
or
dec
mov
xchg
sbb
jle
push
mov
gs
push
xor
xor
jo
pop
mov
jmp
lock
mov
mov
adc
push
fs
gs
mov
adc
inc
fistl
or
addl
lods
lahf
sarb
fstpt
pop
iret
cmp
pushl
cli
dec
imul
hlt
xchg
aad
sbb
bound
jl
xor
lret
popf
icebp
pop
push
decl
or
inc
sub
fwait
sub
dec
sarl
clc
scas
cmpsl
xchg
jbe
outsb
into
shl
test
mov
fsts
in
mov
clc
pop
jmp
icebp
sub
or
push
jno
test
cmp
push
push
daa
loope
stos
fcomp
cmp
dec
mov
jecxz
mov
in
push
loope
call
test
aaa
push
loop
sbb
sub
fsubl
xchg
pop
mov
xchg
push
jge
mov
sbb
and
cmp
les
sahf
dec
pushf
ja
loopnew
pop
pop
out
sub
cli
jb
push
sub
int
adcl
and
daa
sub
jnp
adc
jg
gs
jno
inc
xchg
cmp
push
call
mov
sbb
int
out
mov
or
je
divl
repnz
jmp
push
xlat
das
negb
imul
inc
cltd
mov
loope
or
inc
add
mov
lret
push
jmp
pop
adc
fwait
sbb
push
cmp
lds
jmp
push
jns
fdecstp
repnz
pop
lods
ss
mov
push
int
adcb
mov
pushl
dec
clc
insl
scas
lea
pop
loopne
ja
jo
push
jg
loop
es
sub
adc
push
push
pusha
fimull
push
push
adc
outsl
lcall
cmp
xor
movsb
or
insb
loopne
clc
in
push
fidivrl
in
lcall
mov
cwtl
add
pop
and
pop
jmp
negb
imul
fldenv
pop
test
sub
adc
mov
decl
outsb
data16
or
in
fldcw
sub
nop
aad
stc
cld
mov
mov
mov
imul
mov
stos
lret
fisttpl
cld
or
cmp
jo
fdivs
roll
adc
add
sarl
mov
cmp
sub
mov
or
sti
add
pushf
cmp
jp
lahf
pextrw
sbb
stc
add
lock
pop
fbstp
mov
addb
fisttps
dec
ret
adc
mov
popf
and
pop
mov
add
inc
in
add
addb
xchg
mull
pushf
cmp
push
pop
cmpsb
dec
shr
adc
stos
mov
pop
ret
jge
sub
dec
sbb
mov
aad
xchg
jecxz
jle
incl
hlt
pushf
push
adc
in
jo
mov
dec
xchg
pusha
cmp
fld
pushf
iret
jl
jnp
hlt
ljmp
add
add
mov
popf
push
ljmp
arpl
das
repnz
call
into
lods
dec
nop
fsub
mov
push
adc
jl
dec
push
push
adc
movsl
out
inc
cmp
add
arpl
es
fimull
arpl
fs
push
loop
xchg
mov
adc
jns
jo
loop
jg
outsb
push
jnp
dec
testb
call
mov
stos
mov
push
mov
mov
mov
cltd
add
fwait
sahf
into
jo
clc
pop
test
adc
lcall
retw
loop
xor
mov
das
in
push
daa
jl
push
fcoml
cmpl
pushl
jo
inc
in
cmp
scas
cmp
movsb
andl
hlt
stos
ret
or
ret
jmp
dec
lret
sub
fcompl
xchg
cmp
mov
ss
push
jg
dec
cmp
out
lcall
or
add
cmp
sub
ljmp
pop
sbb
pop
movsl
jecxz
fnstcw
ljmp
push
shl
pop
xlat
fbld
pushf
add
into
and
leave
clc
addps
decl
je
out
notb
test
iret
notb
int
cmp
cmp
jno
jmp
lcall
aaa
jge
ja
and
or
or
adc
aaa
xchg
jb
mov
das
or
int
filds
cmp
data16
jle
mov
lods
xlat
es
sbb
fcomip
xor
pushl
jg
adc
sahf
sub
stos
push
cli
lret
movsb
dec
mov
loopne
jae
inc
sbb
jg
lea
pop
sub
mov
test
sub
jl
inc
dec
lcall
jns
mov
jl
fisttpll
mov
pop
or
mov
mov
push
mov
pop
sbb
push
push
xor
call
scas
pop
cmpb
cmp
mov
push
mov
push
mov
lds
mov
xlat
mov
hlt
xchg
and
pop
mov
sbb
xor
jnp
jg
sar
pushl
or
pop
arpl
push
or
int3
xchg
pop
clc
inc
push
inc
lea
les
and
pop
jp
dec
mov
adc
push
sbb
incl
push
cmpsb
mov
push
add
pushf
mov
push
adcl
cwtl
mov
adcl
out
mov
add
add
cmp
incl
jmp
cmp
inc
aas
mov
jle
jge
fs
xor
dec
sbb
jb
jg
jg
pushl
push
mov
adc
pop
mov
cmp
jbe
std
pushl
jbe
mov
and
orb
mov
jge
dec
sub
pushl
aam
shll
bound
mov
push
add
into
add
dec
arpl
sbb
ljmp
lret
push
sub
cmpsl
stc
dec
mov
sbb
lahf
jle
or
pop
sub
aad
jmp
inc
xchg
push
xlat
inc
fimull
dec
jbe
cmp
cltd
in
add
subb
movsb
mov
call
insb
xor
aam
adc
into
mov
pop
dec
mov
outsl
gs
cld
cmp
pop
stos
xor
jae
pop
pop
movsl
mov
int
in
mov
push
pusha
sbb
mov
jmp
insb
adc
mov
clc
shll
sbb
cmp
or
shl
add
negb
mov
pop
iret
dec
mov
in
loop
xchg
inc
shr
sub
jmp
cli
push
popa
sub
adc
mov
imul
ds
shl
lods
enter
pushl
shlb
sbb
insl
cmp
sub
int
int
sbb
lea
orb
xchg
in
add
dec
xlat
or
dec
adc
rcr
cmp
in
cs
dec
pop
sub
ja
icebp
int3
mov
jecxz
inc
jmp
dec
rclb
out
addb
scas
stos
rcr
sbb
or
mov
js
adc
ljmp
imul
jl
cmc
add
cmpb
mov
int3
and
pop
mov
psubusb
fistps
jns
insb
ljmp
popa
cmp
sbb
add
inc
lcall
dec
arpl
rcll
into
sarb
jecxz
addl
cmc
sub
loopne
stos
icebp
jmp
push
dec
movsb
lea
out
add
enter
int3
cli
ljmp
out
push
outsl
sub
pop
cmp
push
push
aas
and
ljmp
out
sbb
sbb
test
mov
rcll
sub
ljmp
adc
adc
jno
jl
sets
cli
iret
jecxz
ss
pushf
and
push
sub
pushl
xchg
dec
rol
pop
in
adc
in
and
outsb
int
inc
test
in
xchg
sti
pusha
lret
cmp
lds
fmul
xchg
in
fsubrp
cmpsl
cmp
pop
fiaddl
ljmp
cli
rcll
cmp
pop
adc
shrb
inc
cmpsb
push
dec
fmul
popf
arpl
lcall
cmp
or
jno
add
xchg
inc
or
inc
sbb
mov
cld
ljmp
jle
pop
fwait
inc
leave
sub
inc
testb
fcoms
aam
cwtl
adc
jg
sub
jge
jbe
ljmp
aaa
mov
scas
ljmp
and
dec
and
mov
mov
or
sbb
cmpsb
sub
gs
fs
nop
call
push
sub
stos
sub
dec
mov
adc
jecxz
sbb
in
sub
insb
jmp
adcl
xchg
dec
sub
pop
add
pop
es
cli
sar
mov
dec
data16
mov
pushl
cmpb
lahf
push
add
repnz
daa
arpl
jp
push
or
pushl
in
inc
leave
sbb
cs
nop
or
les
sub
mov
push
sub
nop
and
insb
addl
lcall
mov
mov
xchg
adc
aad
out
icebp
inc
loopne
addl
pushl
jae
push
lods
loopne
dec
xchg
cmp
or
sbb
or
sbbl
sti
dec
or
push
out
mov
decl
push
test
sub
shlb
mov
repnz
nop
sbb
decl
lods
xchg
cmp
sbb
aaa
outsl
mov
xchg
fistpll
mov
data16
call
sbb
push
cmpsb
adc
mov
arpl
inc
aaa
push
adc
mov
incl
pop
push
enter
jno
and
and
outsb
inc
mov
aas
dec
das
ljmp
ret
and
call
xor
jne
hlt
sahf
push
loop
dec
xchg
bound
jo
jns
daa
jg
adcb
insl
ja
int3
mov
jl
into
scas
or
xchg
pop
sub
inc
fstpl
lds
mov
mov
mov
xor
out
scas
js
jmp
pop
jnp
stc
mov
cmp
sub
sbb
and
xchg
xchg
jmp
cmc
decl
and
or
adc
sub
dec
or
es
in
lret
mov
xchg
add
mov
xor
mov
call
sahf
pop
pop
xchg
mov
fs
incl
and
sbb
idivb
xor
loopne
stos
push
sub
jg
cltd
pop
or
jae
push
ss
xchg
cmp
pop
add
test
loope
pop
dec
inc
insb
adc
jae
mov
jg
stos
sub
or
push
jns
loop
ds
fimuls
inc
push
mov
mov
pop
jmp
fisttpl
jo
movsl
or
mov
adc
pop
cmpsb
pusha
daa
jbe
and
scas
jmp
mov
fcomip
call
je
addr16
ficompl
jbe
or
pop
fwait
cmc
bound
int3
or
mov
add
ds
aas
idivb
jae
insb
jne
push
leave
cltd
sub
mov
andl
add
call
push
lahf
jae
out
addl
mov
pop
or
test
mov
mov
mov
or
push
push
fistpll
and
cmp
xchg
sbb
outsb
lock
lcall
test
xchg
imul
data16
dec
test
add
mov
ds
ds
xchg
jl
cwtl
jno
sbb
jo
mov
sub
lods
lahf
incl
lods
push
mov
in
sub
pop
cmp
data16
mov
inc
sub
popa
loope
pop
xor
dec
and
cld
mov
cld
js
ss
call
addr16
sahf
adc
cmpsb
mov
ja
leave
lds
lods
mov
and
ss
adc
push
iret
push
add
incl
adc
popf
loop
nop
jno
imul
jmp
mov
push
jnp
mov
inc
push
loop
mov
aas
scas
or
mov
mov
mov
xchg
xor
xlat
lea
sub
jae
fcompl
hlt
cltd
sub
lcall
scas
push
sub
popf
and
jmp
test
mov
inc
repz
xchg
xor
push
dec
adc
or
jb
inc
dec
aaa
les
pop
aad
push
icebp
repz
out
sti
lds
mov
or
mov
or
xor
ljmp
gs
shll
pop
mov
pop
cmp
pop
enter
es
fidivrs
aam
lds
xor
adc
mov
fistps
xlat
inc
sbb
lods
dec
daa
xchg
cmp
or
pop
cmp
xor
jg
or
jecxz
or
shll
cmc
fisttpll
cltd
cmp
arpl
loope
fisttps
pusha
mov
addr16
pushl
dec
inc
aaa
cld
pop
cli
sub
nop
sbb
xchg
push
fstps
outsb
xchg
pushf
jecxz
rcrb
ljmp
or
orl
mov
movsb
and
xchg
orl
lods
mov
sbb
xchg
das
add
ljmp
jnp
popa
sub
cmp
sbb
mov
test
ljmp
push
fucomip
test
xchg
adc
movsb
imul
sbb
jp
jno
xchg
call
mov
push
xchg
push
inc
out
pop
adc
xor
loopne
in
mov
mov
ljmp
and
mov
aaa
jl
or
int3
jae
aas
pop
outsb
stc
push
pop
ret
mov
in
pop
jmp
arpl
sub
sarl
adc
and
dec
fneni(8087
dec
push
out
jmp
adc
mov
mov
cwtl
xchg
sbb
sbb
fwait
imul
push
pop
jge
stos
les
call
hlt
cmp
fdivrs
mov
sar
pushl
pop
das
xchg
fidivrl
mov
test
mov
xchg
dec
ds
mov
mov
sar
decl
pop
sbb
repnz
fsubrl
insb
imul
jmp
fcomip
call
lods
int3
adc
sub
fs
push
inc
loop
faddl
inc
xor
mulb
add
cmp
popf
xor
cltd
mov
incl
lods
jp
mov
cmp
jecxz
shrl
clc
imul
scas
fsubrs
jmp
sub
jge
arpl
jp
push
stos
jbe
lcall
jne
imul
je
aas
push
pop
or
jmp
push
lods
iret
call
sbb
cmp
sub
xorl
pop
fstpt
in
mov
test
gs
jmp
hlt
jecxz
js
mov
xor
dec
imul
stos
add
sbb
lods
dec
pop
popl
pushf
push
inc
lock
icebp
pushf
sbb
add
pop
xorl
push
push
lret
mov
gs
pop
movsb
push
dec
or
aad
int
mov
std
xchg
adc
popl
sub
fildl
add
sub
popf
aam
inc
loopne
loop
mov
stos
dec
cmp
inc
imulb
int
ja
rcll
lcall
scas
mov
push
in
leave
dec
sub
repnz
mov
es
nopl
out
ficoml
in
push
xor
xor
inc
push
jno
pop
xor
push
ds
pop
cld
push
adc
lret
and
outsl
dec
mov
xor
enter
addb
js
js
xor
cmp
ljmp
pop
shrb
arpl
xor
je
inc
int
push
mov
rorl
enter
rclb
call
xor
or
rcr
dec
daa
mov
cwtl
inc
adc
and
lcall
mov
lcall
pop
xchg
iret
push
aaa
scas
aam
add
call
mov
into
mov
fstl
rcrb
add
push
sahf
add
cmp
test
or
decl
inc
inc
adc
mov
xor
mov
push
jecxz
mov
incl
lods
xor
imul
insl
leave
sub
xlat
dec
inc
mov
cmp
add
data16
mov
ds
ret
movsl
or
insb
pop
mov
push
rcrl
adc
mov
and
mov
xorl
loopne
sub
jmp
inc
mov
jnp
ds
xor
in
jns
xchg
xchg
lods
sub
pop
cmpsl
popa
mov
inc
mov
xor
sbb
cld
xchg
test
xor
push
movsb
pop
cmp
adc
cmp
lcall
xchg
add
les
adc
ljmp
xchg
cmpsb
incl
outsl
shrl
outsb
inc
les
fsubs
cmp
push
or
incl
mov
leave
pop
pop
fmuls
lea
jne
mov
jmp
int
les
push
test
push
add
ret
mov
incl
sbb
jb
cmp
add
or
inc
sub
subb
dec
outsb
clc
das
lcall
pop
push
adc
sbb
cli
mov
pusha
shlb
mov
ljmp
int
and
lods
imul
dec
xor
daa
lahf
rorb
ljmp
and
sbb
inc
push
enter
pushl
mov
pop
sub
cs
inc
rcrl
popl
arpl
push
xchg
vunpcklpd
xchg
dec
sbb
sbb
sbb
gs
lcall
xchg
and
push
cwtl
push
cmpsl
or
cld
xchg
cmp
jae
daa
int
mov
mov
inc
test
mov
sub
pop
dec
test
out
mov
int
repnz
roll
mov
inc
jge
addr16
jb
imul
jbe
movsl
repz
mov
incl
sub
sub
inc
or
dec
mov
xchg
aam
adc
dec
lret
and
cmp
sbb
mov
stos
mov
leave
addr16
jp
fisubl
lahf
int3
mov
mov
aam
mov
lcall
mov
test
mov
imul
nop
dec
push
pushf
pop
sub
cs
add
test
lcall
inc
jl
jmp
mov
cmc
loopne
andl
rolb
mov
mov
cli
or
cmp
sbb
sub
or
mov
cwtl
divb
mov
ja
neg
or
dec
xor
loopne
incl
mov
outsb
lahf
out
xchg
out
cwtl
sub
mov
in
ss
xchg
call
clc
loop
out
pop
pop
add
sbb
adc
cmc
or
incl
dec
xor
dec
xchg
ljmp
rcll
and
in
and
add
lcall
cmp
pop
inc
xchg
push
fiaddl
mov
lcall
mov
loopne
mov
and
enter
mov
fucom
mov
pop
enter
dec
mov
cltd
or
std
push
mov
push
xor
fcomip
add
addr16
mov
or
xchg
mov
mov
cmp
push
mov
cmp
mov
aam
scas
hlt
or
cld
cmp
jecxz
idivl
clc
inc
aaa
xor
imulb
in
mull
dec
jno
sbb
outsb
and
ret
and
mov
push
inc
clc
push
loop
xor
sbb
cmp
jb
out
xor
sti
in
adcl
jb
and
shrl
cwtl
pop
std
jmp
push
pop
mov
push
sub
imul
push
popa
pop
das
mov
mov
xlat
insb
jns
jg
imul
add
pop
xor
xor
sahf
or
jbe
and
xlat
adc
jecxz
xchg
dec
mov
jle
test
mov
call
out
cld
add
adc
cs
fimuls
adc
add
jae
mov
mov
sub
jo
inc
leave
xchg
push
mov
call
imul
xlat
jno
lret
enter
lret
aad
fs
xor
jle
jle
add
jge
outsl
or
out
xchg
push
in
mov
mov
sub
into
or
pushl
inc
filds
faddl
bound
fiadds
push
adc
mov
lea
jbe
int
cwtl
jge
push
fs
loop
or
dec
rorl
pop
loopne
incl
push
test
mov
and
test
cmp
call
push
mov
int3
sti
loope
cmp
xchg
mov
jmp
fidivrl
aad
push
mulb
sti
mov
mov
clc
xor
ficompl
lcall
add
pop
jecxz
adc
xor
add
jge
pop
int
and
stos
ret
xlat
dec
icebp
push
pushl
std
ljmp
xchg
popf
push
cwtl
jecxz
loope
aaa
dec
outsb
or
mov
sbb
cld
cld
rcl
jb
mov
jl
sbb
jmp
pushl
xor
imul
aas
push
add
jecxz
imul
mov
repnz
dec
and
pop
outsb
stos
in
ds
sub
cli
mov
jge
lcall
rclb
dec
add
inc
imul
pushf
nop
fwait
test
incl
insl
repnz
mov
xor
jp
mov
inc
in
push
adc
repnz
sub
call
enter
loope
lods
addr16
ljmp
and
push
inc
insb
dec
xchg
fdivrl
incl
sbbb
inc
sub
psubw
fsubrs
addr16
mov
filds
rcr
es
cli
and
out
adc
subl
xchg
es
xchg
pop
and
inc
mov
xorb
jne
mov
xchg
in
fldenv
icebp
mov
scas
std
add
add
sbb
push
les
cmc
cmp
mov
lods
cwtl
push
sbb
loope
mov
adc
xlat
jnp
lcall
add
test
adc
jne
aaa
fcom
rcr
pop
mov
clc
outsb
push
xor
pusha
sbb
cmpsl
xor
jno
sahf
mov
pop
fstpt
enter
call
aaa
push
sti
and
out
bound
inc
test
shrb
pop
or
lret
pop
js
pop
xor
lcall
cmp
push
jge,pn
cmc
lcall
repz
movsl
inc
jne
movsl
test
out
nop
clc
fidivrs
dec
sarb
ret
js
xchg
sbb
jmp
cmp
sarb
inc
pop
cmpsb
sub
xor
mov
les
mov
jno
push
push
cltd
sar
ljmp
movsl
adc
cmp
aad
mov
aaa
push
test
outsl
jno
pop
or
xor
xchg
mov
pop
hlt
jne
leave
or
jo
shrb
data16
or
xor
add
mov
cmc
pop
jns
mov
fwait
aas
fldenv
xchg
stos
addr16
ljmp
and
push
xchg
pop
dec
xlat
sbb
pop
in
das
adc
mov
imul
sti
popf
pop
sbbb
and
pop
sub
pop
aas
and
insl
sub
cmp
cmpsl
lret
ret
xchg
xlat
xlat
mov
pop
cmp
iret
xor
add
mov
shl
scas
cli
decl
lret
iret
push
jg
iret
push
xchg
xchg
xchg
jo
xchg
fmulp
daa
fwait
jmp
cmc
xchg
and
lcall
shlb
int
mov
and
std
incl
out
jae
mov
daa
adc
lahf
jg
mov
dec
adc
out
mov
cmp
outsl
jo
inc
push
push
aam
push
jo
jo
sti
xor
lcall
fwait
imulb
dec
ret
add
pop
jp
pop
sub
jns
mov
jmp
iret
or
or
dec
stos
sti
test
or
fs
jg
arpl
clc
popa
lahf
in
ds
imul
jmp
insb
jge
jg
or
cld
and
xor
icebp
stos
in
jp
sub
jmp
lahf
leave
push
daa
pop
insb
call
jl
mov
dec
sbb
scas
cmp
jae
jno
shrb
push
sbb
xor
sub
icebp
jecxz
lcall
jmp
clc
rcr
movsl
js
add
call
push
icebp
addr16
mov
inc
js
lret
lret
xor
xchg
je
lods
pop
call
or
xor
incl
cld
incl
sbb
std
shlb
addr16
cmp
sti
ljmp
jle
add
mov
out
test
fmulp
lret
shll
call
mov
repnz
adc
bound
cwtl
nop
sbb
negl
mov
adc
and
fidivrs
popf
arpl
in
mov
test
enter
push
xchg
xor
jb
stos
ret
filds
call
fsubrs
dec
and
mov
jo
jg
inc
pop
sahf
test
mov
sbb
push
shlb
inc
push
push
sub
inc
std
jbe
decl
mov
data16
cs
dec
idivb
daa
outsb
xchg
jae
and
cli
inc
nop
dec
mov
jne
cmpsl
dec
xorl
add
push
jle
sbb
xchg
mov
andl
aad
push
inc
adc
rorl
add
adc
imul
jecxz
xor
cmp
add
cld
pop
sbb
mov
cmp
mov
xchg
es
add
sbbb
xchg
lock
aam
sub
pusha
shl
cwtl
jb
add
sbb
sarb
idiv
and
sar
jo
rcll
cmpsb
cli
dec
cmp
decl
arpl
ss
add
sub
inc
mov
add
adc
jo
pop
mov
adc
decl
mov
and
mov
adc
sub
pop
cli
mov
scas
imul
shll
inc
mov
and
in
dec
inc
sbb
adc
sbb
fst
call
in
xlat
inc
lods
cmpb
jecxz
icebp
or
or
adc
jg
les
dec
jbe
xor
jae
pusha
cli
clc
out
lret
les
outsl
jle
hlt
inc
sub
ljmp
rclb
daa
pop
leave
mov
insl
xchg
testb
loop
in
icebp
jae
mov
jbe
call
sbb
loope
sbb
aam
jmp
push
jbe
adc
push
ljmp
incl
xchg
mov
out
ds
bound
loopne
lea
cmp
mov
add
cmp
push
call
jmp
in
xchg
inc
inc
sbbb
leave
out
add
cmp
in
sbb
mov
lcall
pop
mov
enter
ja
mov
adc
loope
sbb
dec
inc
cwtl
sbb
fisttpl
lea
andb
inc
aad
mov
fldcw
sbb
pushl
cltd
jp
mov
mov
pop
iret
xor
push
cmc
movsb
mov
pop
mov
icebp
cmp
mov
dec
and
shlb
js
pop
ret
ret
movsb
pop
jmp
sbb
icebp
out
xor
or
mov
enter
pushl
sbbb
outsl
stc
cmc
jnp
mov
dec
cmpsb
push
mov
xchg
mov
sbb
jns
push
cwtl
xor
inc
inc
cwtl
test
out
jb
add
mov
push
xchg
fwait
lds
movsl
test
or
cld
leave
mov
pop
push
in
sub
jnp
dec
mov
xchg
cmp
dec
leave
xchg
lock
inc
dec
test
dec
into
std
mov
xchg
orb
jbe
jnp
test
mov
xor
das
es
jg
incl
scas
std
jmp
cltd
push
cmc
sbb
inc
add
das
rorb
std
int3
mov
adc
mov
push
pop
sub
sbb
sarb
outsl
in
cmp
ja
push
mov
pop
inc
pop
adc
movhlps
incl
fnstsw
cmpsl
pusha
sbb
jo
sahf
cmpsl
and
jo
mov
xor
jno
mov
mov
cld
jmp
mov
popa
pop
pop
push
in
cli
and
jne
cld
shll
sbb
clc
xchg
ljmp
add
rcr
clc
or
inc
sub
imul
out
sbb
jno
mov
dec
pop
lock
out
pushf
movsb
insb
dec
scas
xchg
rcrl
xor
call
adc
insb
push
add
push
mov
fsubl
inc
rcrb
icebp
xor
add
add
fstl
inc
test
ss
jg
sbb
sbb
cmp
and
jmp
int3
push
jnp
pop
lods
ljmp
les
push
and
daa
inc
mov
mov
scas
aaa
popf
test
mov
lahf
pop
std
dec
call
dec
lcall
lahf
or
push
ljmp
pushl
push
mov
adc
into
sub
and
mul
data16
mov
lret
std
cmp
aam
mov
mov
push
pop
lret
ja
or
clc
adc
push
jns
xchg
pusha
shrl
loope
popf
or
fdivr
das
cli
decl
xchg
mov
mov
daa
push
dec
mov
jecxz
jns
pminub
int
out
jg
lcall
mov
pop
xor
inc
or
xchg
sbb
and
sbb
dec
dec
shlb
aad
add
mov
repz
decl
dec
stos
jne
pop
sub
push
ret
es
push
ljmp
dec
cmc
or
xchg
call
aaa
cmp
mov
cmp
pop
push
push
jne
dec
divl
adc
sbb
jae
ljmp
test
inc
dec
rcrb
leave
scas
stos
pushf
sbb
test
xlat
or
je
test
pushl
cmp
daa
xchg
stc
shlb
lret
pop
rcr
popa
cmpsl
pop
pop
mov
mov
cmpsl
sub
jo
icebp
das
repz
dec
insl
pushl
add
ja
sub
jmp
sub
pushf
test
add
ljmp
nop
adc
adc
mov
jmp
pop
mov
rcll
loop
push
xchg
jae
or
enter
cmp
lcall
inc
pop
push
pop
iret
ficoms
lret
or
adc
push
jmp
inc
jg
popf
mov
push
or
aad
xchg
out
mov
and
out
lahf
incl
and
xchg
inc
lock
push
inc
call
pop
push
and
clc
mov
fidivl
cmpsl
mov
call
and
dec
out
inc
lods
loop
pop
xchg
pop
dec
jg
add
ds
incl
mov
ljmp
adc
dec
mov
mov
and
enter
enter
in
mov
jo
cmp
mov
lods
jnp
dec
push
dec
cli
in
push
inc
out
push
ret
cltd
insb
dec
pushl
sub
xchg
pop
mov
test
ret
movsl
adc
push
mov
lcall
icebp
test
inc
xchg
popf
push
inc
cmp
test
rclb
push
mov
push
add
cli
and
dec
cld
ljmp
ficoms
jle
cmp
mov
xor
rcll
test
mov
std
inc
jnp
jg
and
mov
jb
into
mov
call
lret
jl
mov
shrb
xchg
movsb
cmpsb
cmp
or
pop
pop
jmp
in
jns
xorl
xlat
or
push
lahf
jmp
mov
pushl
cmp
sahf
cmpsb
and
leave
call
sub
dec
incl
rcll
sub
and
cltd
jb
punpckhbw
scas
loop
pushl
inc
jecxz
sub
gs
xchg
roll
xchg
push
lret
aaa
std
adc
enter
sbb
scas
shll
adc
cmp
mov
rcl
jge
dec
jecxz
inc
jg
aas
pop
mov
push
and
int
jle
ficomps
out
and
push
test
icebp
push
std
incl
push
mov
and
push
int3
test
roll
jmp
out
mov
iret
xchg
ret
mov
gs
aam
add
or
call
test
pop
in
loope
mov
int3
mov
decl
mov
xchg
xlat
mov
adc
dec
push
lcall
call
xchg
test
and
push
mov
sub
sub
cmpsl
pop
xchg
sbb
or
dec
mov
movsl
stc
push
cltd
mov
xchg
push
dec
scas
push
mov
jg
sbb
xlat
adc
inc
out
rcrl
rcrl
subl
mov
fcomip
ljmp
xchg
test
ret
sar
or
jg
subb
call
cli
xchg
outsb
adc
dec
clc
lcall
ljmp
je,pn
shr
dec
push
sub
adc
mov
fists
sarl
xor
xchg
ja
int3
mov
push
jns
inc
adc
test
push
in
ljmp
jp
jne
scas
ljmp
adc
out
scas
fwait
repnz
test
pusha
scas
ds
mov
mov
push
cmc
fsubs
jne
mov
aam
mov
scas
sub
push
add
jmp
shll
cmpsl
dec
push
outsb
test
mov
rorl
mov
mov
ljmp
pop
or
and
push
lock
xchg
sub
pop
movl
in
movsl
mov
punpckldq
lahf
sbbl
sub
int
ds
or
and
hlt
cwtl
cmp
ret
ja
jae
dec
xchg
in
push
sbb
out
in
xchg
push
and
fisttpll
mov
div
push
scas
xchg
rcl
leave
ljmp
punpckhdq
push
scas
mov
lods
shrb
push
fsubl
xchg
mov
mov
jne
inc
cwtl
jmp
outsb
mov
mov
out
push
decl
adc
mov
repnz
outsb
enter
iret
loop
dec
cwtl
inc
test
icebp
popa
xchg
ret
fldt
incl
mov
xchg
cmpsl
inc
in
test
out
jle
movsb
data16
jl
ret
loope
mov
add
in
ljmp
push
out
and
dec
ret
out
sbb
popa
mov
xchg
ja
bnd
loop
or
mov
andl
ret
out
dec
addr16
mov
or
je
sub
aas
icebp
fcmovnb
shrl
lock
jne
adc
cld
jg
in
adc
lods
clc
sti
leave
test
loopne
test
or
mov
stc
mov
push
push
push
lret
jmp
inc
and
jbe
insl
add
clc
add
mov
lock
outsl
xchg
lcall
pop
dec
mov
dec
stc
push
xchg
sbb
imul
rcll
loope
ds
xchg
jg
push
push
ss
movsl
cs
mov
and
das
mov
sbb
dec
std
lcall
out
iret
leave
inc
test
aaa
jle
push
push
out
push
jmp
sub
fcomip
outsl
cltd
ljmp
pop
ja
or
aam
ror
stc
lods
jbe
ja
decl
adcl
inc
cmpsb
push
or
sub
dec
incl
pop
out
dec
pop
lcall
cld
call
cld
xchg
loope
and
mov
xchg
scas
jno
jne
jecxz
cld
jecxz
push
leave
aam
jle
jnp
and
ss
std
pinsrw
lock
cmp
and
out
cmp
shll
pop
aas
lcall
push
and
pop
pop
mov
dec
mov
sarb
dec
sub
xchg
mov
xchg
loop
into
popf
mov
sti
inc
sbb
into
mov
popf
mov
stc
push
jle
sar
jg
jbe
cmp
outsl
lods
jo
popf
jnp
jl
push
loopne
mov
xchg
andb
lds
mov
stos
lcall
test
adc
cs
mov
and
fsubl
adc
cmp
out
decl
stos
jp
loope
out
or
mov
adc
ja
or
ja
dec
push
subb
sti
cmp
in
pop
pushf
inc
sbb
test
add
pop
mov
inc
dec
push
mov
xor
jecxz
cltd
popa
inc
jne
addr16
lret
sbb
jmp
in
mov
ret
subl
xor
mov
sbb
xor
jae
decl
clc
sbb
pop
subl
add
pusha
subl
xorb
popa
fs
cmp
movsb
jmp
push
pop
in
cmp
aaa
mov
cld
mov
das
fwait
jbe
sbb
sub
call
mov
add
sarb
or
in
cmp
into
jle
inc
test
decl
dec
mov
lahf
lock
fsubs
ja
mov
push
cmpsb
pushl
aam
jo
fld
adc
repz
lea
decl
sbb
imul
lods
addb
scas
mov
arpl
adcb
incl
data16
enter
pop
mov
sbb
mov
xchg
movsb
lea
jmp
jmp
mov
push
stos
jnp
mov
push
xor
scas
push
inc
sbb
mov
clc
aas
dec
daa
les
fiadds
popa
in
clc
pop
pop
shl
lods
xchg
jne
sbb
push
mov
mul
adc
ljmp
in
push
insb
adc
popf
fs
sbb
push
add
inc
dec
pop
lds
ss
ds
aas
lods
sub
fldcw
pop
popf
sahf
daa
out
cmp
xchg
cmc
pop
sti
and
aam
aas
mov
push
pushl
das
or
push
jp
add
mov
mov
dec
js
in
lcall
mov
std
jns
cmp
sbb
sub
into
jbe
shrb
leave
ss
xor
mov
ljmp
inc
jg
out
aas
push
xchg
mov
les
and
nop
test
decl
scas
sub
mov
shrb
push
pop
pop
loopne
clc
ljmp
mov
mov
mov
mov
pop
xchg
inc
ja
shrl
aaa
adc
pop
mov
lds
mov
mov
nop
scas
push
js
ss
sbb
push
pushf
add
dec
or
out
or
fstpt
jmp
jp
mov
inc
fildll
imul
dec
cli
nop
test
pop
pop
xchg
cld
fs
push
test
movsl
mov
test
imul
scas
clc
ljmp
push
cmp
mov
mov
sub
shll
and
jmp
adc
jbe
dec
in
adc
loop
je
push
jne
mov
call
aad
fistl
add
jl
scas
out
sahf
sbb
test
mov
cmp
xchg
mov
rcrb
out
xor
pop
cld
adc
out
or
sub
mov
and
cwtl
mov
mov
push
jae
pop
cmc
incl
add
leave
ret
es
in
sub
mov
xor
jae
incl
mov
xchg
testl
xor
clc
mov
mov
ljmp
pop
bndstx
xchg
cmp
bound
pop
in
cmp
ss
dec
lods
jmp
ss
dec
std
incl
insl
lock
xor
ret
loope
mov
mov
je
je
mov
test
jne
mov
sub
decb
pop
lret
cmp
ljmp
push
mov
inc
add
sub
dec
pushf
mov
vmovapd
pop
push
sarb
xor
nop
sbb
pop
std
pushl
int
pop
repnz
loop
rolb
pushf
lahf
and
aad
sub
mov
jecxz
mulb
lret
inc
clc
xor
notb
add
inc
rorb
hlt
decl
xchg
inc
icebp
xchg
mov
int3
aam
sub
es
lea
je
dec
cld
fcomip
enter
xchg
dec
push
roll
lods
jb
jecxz
jg
push
into
mov
add
mov
and
inc
xchg
pusha
imul
call
popl
je
jg
xchg
ss
imul
negb
aam
mov
scas
and
leave
imul
gs
mov
inc
outsb
mov
mov
adc
std
adcb
neg
xor
push
jbe
fcos
ljmp
lds
outsl
cmpsl
lods
jle
and
sub
subb
cld
lcall
jle
hlt
sbb
aam
mov
aam
mov
call
or
mov
loope
and
ror
mov
mov
sub
and
push
loopne
fcmovnbe
loopne
scas
adc
jle
xchg
outsb
out
movsb
mov
pushf
xor
incl
inc
shr
push
sub
sarb
pop
divb
mov
inc
mov
sti
std
mov
and
lret
scas
lcall
test
xor
hlt
sbb
incb
add
lret
es
pushl
shlb
xchg
mov
movsb
pop
xor
hlt
mov
test
pushl
pop
pop
jmp
ljmp
lahf
iret
dec
mov
lahf
movl
dec
or
shl
xor
mov
cmp
and
adc
mov
xor
je
leave
and
xchg
cld
call
cld
pop
sub
adc
gs
dec
fildl
std
add
loop
jmp
rclb
jns
jg
add
pop
xor
add
jp
mov
jmp
xor
jae
es
ror
cmpsb
gs
lret
sbb
jnp
fsubrl
imul
fcom
push
xchg
adc
popf
into
mov
insb
out
mov
xchg
divb
jg
add
dec
xchg
lret
mov
sbb
cwtl
inc
cwtl
cld
aaa
and
pop
adc
scas
ud0
jl
shlb
aad
dec
data16
xchg
mov
hlt
mov
mov
dec
adc
inc
mov
fidivl
ret
xchg
shrb
jecxz
sbb
xchg
cmpsl
je
fneni(8087
add
ljmp
sub
repz
cmc
pop
jle
mov
mov
test
jg
cmp
int
xchg
add
sub
push
popa
scas
imull
pop
jno
jb
sti
xor
push
mov
jns
popf
aad
xchg
mov
cmpsl
add
ljmp
sub
cmp
xor
pop
imul
test
sbb
xlat
xchg
fnstenv
sbb
stos
repz
jns
pop
push
mov
cmp
fdivl
clc
push
inc
mov
rcr
pop
out
rolb
aas
test
outsl
clc
jle
or
int3
loop
pop
adc
inc
inc
into
push
mov
mov
cs
mov
jne
aam
inc
mov
outsb
mov
test
lcall
gs
cmp
pop
or
sub
mov
push
nop
test
dec
dec
jbe
lret
jo
push
sub
call
fs
push
test
mov
ljmp
xor
push
inc
out
out
dec
push
jge
fcoms
shlb
daa
in
lock
ljmp
outsl
jne
jns
bound
fwait
and
push
aam
out
xor
add
repz
imul
add
int3
ds
xchg
jg
clc
push
mov
arpl
lea
mov
pop
jnp
adc
call
sahf
shll
jb
outsl
dec
into
lret
push
inc
repz
lods
push
adc
cli
sub
stc
dec
mov
lea
xor
push
bound
lahf
sbbl
mov
sbb
jp
push
negl
xchg
inc
dec
mov
mov
aaa
mov
decl
or
in
call
aad
outsl
mov
xor
jl
push
push
mov
in
pop
xchg
or
ljmp
jge
sbb
pusha
insl
mov
ret
push
out
cltd
dec
push
sbb
and
cmc
inc
jbe
mov
xchg
lcall
ret
adc
roll
inc
xor
in
mov
mov
int3
sub
mov
jmp
and
insb
loopne
mov
sti
jg
cmp
mov
test
aaa
repnz
js
push
iret
aaa
fstl
call
call
lods
dec
cmp
fsts
jbe
nop
lea
popf
mov
call
js
adcl
int
fsubrl
xor
jle
and
pop
aas
push
rolb
lcall
xchg
fcoml
sbb
or
inc
dec
cmp
leave
pop
dec
mov
push
add
pop
adc
aam
mov
jg
push
or
or
adc
or
adc
push
test
movsl
test
lcall
xchg
dec
xor
shlb
fdivp
aam
test
adc
stos
aad
add
cmp
jbe
lods
cld
or
outsl
lahf
hlt
jg
sub
adc
jmp
flds
fists
sbb
push
int
push
mov
lahf
sbb
sbb
xchg
mov
lret
into
les
mov
test
xchg
mov
fisubl
pop
push
je
fsubs
lods
enter
into
dec
scas
sub
adc
insl
sbb
xchg
int
nop
sub
ljmp
jne
outsl
mov
es
bound
aad
dec
or
pop
test
jle
jno
dec
ljmp
pushl
xchg
xor
mov
xor
jne
aam
pop
clc
call
push
int
adc
leave
and
call
pushf
xchg
or
pop
pop
jno
add
mov
incl
lods
add
aad
xchg
ljmp
ja
test
ficomps
insl
incl
cld
incl
cli
cld
ss
jge
mov
fcmovnu
arpl
das
test
mov
fmuls
outsl
xchg
test
xor
lcall
aaa
sub
sub
js
pusha
aaa
xor
lcall
mov
push
jp
sub
popf
or
and
shlb
ljmp
dec
mov
rorb
mov
xchg
jb
or
push
loopne
call
nop
mov
and
movb
popf
xchg
sbb
hlt
fwait
mov
ret
push
loope
enter
incl
scas
pop
jmp
pop
xor
add
xchg
insb
stos
mov
movsb
insb
jge
cltd
call
xor
cmc
xchg
bound
cltd
xchg
sub
xchg
ficompl
sbb
mov
adc
ficompl
jge
or
pop
lret
mov
push
sahf
rcrb
call
ja
cmpsl
jp
idivl
dec
popf
pop
ret
in
out
je
rorb
icebp
mov
stos
aam
pop
ljmp
mov
xlat
mov
shll
mov
mov
mov
or
jmp
shl
inc
fcoms
dec
call
inc
insl
sti
adcb
ljmp
imulb
pop
out
fcomip
orl
movsb
sbb
jb
inc
fsubr
daa
mov
push
cmp
aas
push
call
in
pop
add
mov
xchg
aam
in
mov
das
mov
cmp
incl
and
pop
dec
ja
xorb
testb
cmp
pop
repnz
out
clc
dec
rclb
aad
dec
xchg
decl
push
jne
hlt
fucomi
lods
outsb
xchg
movsb
inc
sarl
mov
pusha
cmp
dec
cld
call
insb
stc
mov
aaa
das
jl
jae
call
cmp
ljmp
popf
pmulhw
decl
adc
add
sub
xor
dec
add
inc
add
mov
decb
fmul
pop
and
mov
inc
shl
dec
push
pop
out
imul
js
xchg
arpl
orl
mov
pusha
pop
push
pop
es
sub
jnp
test
jg
mov
in
jnp
mov
mov
sti
inc
push
inc
clc
mov
lcall
pop
inc
pop
andl
fwait
xchg
jp
push
ja
pop
push
popf
fldcw
dec
frstor
shll
in
rclb
sbb
pop
and
int
repnz
mov
hlt
shlb
cmp
fldl
les
fadds
js
lret
and
xorl
or
xor
cmp
incl
push
notb
aad
sbb
test
lcall
xorb
sahf
sbb
call
fwait
jle
xchg
incb
sub
andb
js
bound
clc
loopne
lock
sub
idivb
scas
and
ja
test
test
inc
and
xor
xchg
clc
fists
inc
jno
lods
jp
mov
out
incl
andl
add
shr
add
loop
cmp
ljmp
dec
insb
push
pop
popf
adc
cmpb
dec
mov
std
adc
pushl
xlat
hlt
addl
mov
sub
sbb
inc
hlt
loop
sub
dec
out
push
push
pushf
pmaxsw
mov
pop
sahf
idivb
sbb
loope
loopne
adc
sti
mov
jge
sub
push
and
cmp
fnclex
dec
pop
sbb
push
ljmp
cli
dec
or
js
inc
xor
pop
jb
push
hlt
popf
mov
sbb
ljmp
pop
xchg
jb
sbb
sub
dec
adc
imul
xchg
repnz
lcall
outsl
cmc
scas
inc
loope
mov
ret
cmp
inc
out
enter
mov
jno
aas
mov
xor
inc
leave
add
lcall
sbbl
in
xchg
jmp
sbb
push
js
std
test
xchg
fdivl
xchg
push
sub
mov
lock
aad
jle
fiaddl
addr16
movl
fcmovbe
sar
jmp
dec
fs
jo
leave
add
dec
ret
imulb
xor
mov
push
mov
mov
jb
xchg
jb
data16
push
mov
inc
fcomi
lods
xchg
mov
fiadds
sub
mov
push
jmp
int
push
jg
decb
xchg
orl
cmp
call
push
fxtract
pushl
cwtl
mov
insl
mov
pushf
mov
outsb
or
cmpsl
push
jbe
cmpsb
sub
xlat
cmp
cmp
cs
call
xchg
in
insl
test
out
daa
adc
out
clc
neg
in
xor
lea
pop
and
subl
clc
iret
cli
les
test
data16
lret
mov
jo
cltd
jg
imul
mov
jge
popa
shrb
and
rcll
or
push
int3
aam
enter
and
call
pop
sbb
sbb
sub
pop
cmpb
mov
das
push
loope
mov
ljmp
adc
sub
vpsubusw
inc
ljmp
aam
filds
cwtl
dec
ret
jmp
dec
iret
sti
aad
je
fs
cmc
xor
sti
mov
pop
sub
fisttps
idivl
fs
dec
ljmp
jbe
decl
lods
mov
sbb
imul
popa
jp
cmp
pop
ds
jmp
leave
stc
decl
lock
nop
dec
scas
mov
arpl
and
cmp
icebp
pushl
jl
adc
ljmp
push
cltd
sbb
and
push
jb
jmp
fmul
and
mov
insl
aas
xchg
je
ror
cmpsl
dec
sbb
aad
addr16
call
jl
jb
or
pop
and
inc
mov
shrl
jmp
push
push
cmp
rol
ljmp
adc
int3
mov
jns
push
cli
leave
and
mov
in
ret
cmpsb
adc
xchg
ljmp
mov
mov
sti
fnsave
shrl
das
add
cmc
popf
xlat
movzwl
mov
and
or
xchg
ljmp
aas
mov
ss
ljmp
cmp
jg
dec
xchg
leave
lahf
leave
ret
lcall
stos
pop
sub
orb
push
data16
hlt
pop
mov
mov
scas
decl
cwtl
lock
mov
adc
inc
cmp
not
push
movsl
test
jno
pop
std
ljmp
sub
jno
mov
aas
shl
stos
inc
pop
add
pushf
into
pop
dec
sub
dec
mov
jmp
in
insb
xchg
lret
sub
out
imul
inc
pop
add
jmp
jmp
and
jmp
cmpsb
push
test
outsl
inc
xchg
or
test
imul
inc
ds
cmp
pusha
dec
mov
mov
hlt
js
jmp
xchg
incl
mov
pop
ss
adc
mov
fnsetpm(287
sub
pop
mov
lcall
push
or
sub
std
sub
or
jp
scas
les
shll
xchg
pushl
cmp
cmpb
inc
xchg
push
call
or
jmp
push
ljmp
nop
cmc
cmpsl
jns
rcrl
stos
push
cmp
scas
fcompl
jecxz
pop
ljmp
es
inc
test
sbb
repnz
fistl
adc
call
enter
jo
std
lods
push
mov
aam
jnp
rorb
out
aam
jp
test
jo
stos
lcall
std
in
mov
cld
pop
mov
popa
jecxz
addr16
out
fldt
call
xchg
or
mov
xchg
or
xchg
test
lcall
lds
cs
out
jne
loop
loope
aaa
subl
cld
jo
in
fdivrl
mov
repz
cmp
or
dec
xchg
sti
cmp
cli
lcall
mov
or
test
and
xchg
shl
sbb
incl
mov
dec
pusha
adc
and
cmpsb
rcr
insl
inc
fnstsw
adc
cmp
decl
lcall
cmpsb
pop
xchg
pop
xor
sub
mov
adcb
call
sub
scas
sbb
test
add
xchg
mov
into
js
xlat
ljmp
test
cmp
mov
movsb
shrl
dec
or
sub
fisubl
cmp
hlt
dec
fists
or
cmpb
lcall
jle
jnp
cmp
into
aad
xor
mov
dec
push
fcoms
shlb
mov
pop
lods
arpl
sbb
adc
xchg
xlat
lea
mov
dec
mov
pop
std
call
inc
movsl
xor
rolb
ror
and
ss
cmp
ljmp
sahf
xlat
and
test
and
jl
ret
xor
rorl
mov
fwait
add
jg
hlt
call
addb
in
dec
fcompl
js
or
fimuls
std
ljmp
cli
and
cmp
dec
setno
mov
lahf
mov
out
mov
push
ss
add
pushf
lds
inc
pop
lods
ljmp
scas
adc
jge
pop
fnstenv
push
add
mov
stos
cmc
sub
std
scas
lock
dec
push
push
add
push
and
mov
add
cmp
call
loopne
xchg
mov
mov
aaa
cld
jmp
or
jb
sar
dec
shlb
cmp
push
sbb
ret
movsl
and
andl
lods
xor
stos
jmp
mov
gs
ret
mov
arpl
mov
in
and
pushl
mov
test
movsb
dec
adc
or
jl
jg
mov
xchg
adc
sub
je
lret
add
ja
fmuls
cld
jmp
jno
repnz
subb
inc
push
mov
sahf
sahf
ljmp
roll
sub
mov
sarb
arpl
add
mov
out
sbb
jge
bound
je
xor
es
ljmp
pushf
adc
xlat
leave
sti
testb
pop
jl
imul
sbb
ljmp
jae
loop
mov
lock
add
push
adcb
enter
mov
in
or
mulb
mov
shrl
leave
jp
pop
sbb
mov
push
lret
cmpsl
dec
xchg
push
jns
mov
sub
dec
jns
sub
add
push
or
push
cltd
sub
jle
shlb
adcb
pop
es
push
dec
xor
fcmovu
and
sbb
sub
lods
add
in
mov
mov
insl
and
xchg
test
cmpb
xor
mov
mov
mov
jnp
subl
outsb
filds
add
xlat
loope
jmp
sbbb
das
call
jns
jne
lret
mov
loopne
roll
push
andl
inc
adc
aad
jp
incl
push
out
push
dec
and
mov
xor
iret
sbb
sub
mov
fidivrl
rolb
mov
ljmp
xchg
cmc
nop
add
lcall
ret
ja
cmp
push
pop
mov
sub
add
daa
fistl
xchg
aam
push
dec
xchg
mov
or
dec
pushf
jne
sub
sub
call
cld
pushl
add
fdivrs
and
in
cwtl
or
dec
sub
dec
nop
mov
sub
xor
loop
fistpll
andb
daa
fcompl
mov
test
rcl
es
cld
out
add
pushl
bnd
sub
cmp
or
mov
inc
and
loopne
ret
fistpll
add
push
push
lret
xor
hlt
dec
popa
jns
push
dec
outsl
or
cmp
pushl
jnp
add
xchg
orb
mov
das
dec
add
data16
sbb
incl
sub
pop
fcoms
pop
fidivs
inc
xchg
adc
mov
lcall
xlat
lods
jnp
xor
xor
jns
test
sbb
pop
xorb
ljmp
push
mov
lea
jns
enter
fdivr
dec
in
xor
dec
frstor
jl
pop
adc
cwtl
or
push
sbb
subb
cmc
add
mov
push
call
mov
jno
mov
mov
mov
incl
sti
adc
insb
loopne
popa
enter
adc
inc
lcall
scas
add
mov
scas
fildl
mov
cwtl
imul
iret
xchg
xchg
incl
and
aas
aas
or
sbb
out
stos
or
mov
dec
insb
pop
out
inc
stc
inc
add
mov
popf
dec
test
mov
pop
into
lods
aam
fisubrs
xchg
lcall
ljmp
mov
cltd
fwait
mov
push
pusha
aam
clc
push
xlat
sbb
and
stos
mov
mov
or
add
dec
ljmp
incb
loope
cltd
addr16
icebp
notl
inc
insl
gs
stos
jnp
jo
out
ror
lods
fisubl
jl
and
mov
mov
inc
incl
xor
push
imul
dec
or
jl
add
stc
jge
adc
mov
dec
pop
nop
jo
cs
or
jmp
sbb
stos
lcall
cmp
lock
add
adc
inc
test
loopne
mov
sub
iret
test
inc
add
pop
or
int3
and
xchg
mov
das
clc
dec
mov
cmp
daa
and
fnstcw
test
pop
and
mov
push
call
aad
jne
push
add
scas
mov
or
divb
cwtl
inc
scas
aas
xlat
mov
push
push
jmp
data16
cmc
arpl
push
inc
mov
loope
fnsave
mov
cmp
pushl
jbe
xor
test
div
repnz
cli
xor
nop
inc
fadd
or
fnstcw
jns
push
sbb
pop
push
cs
adc
mov
rolb
lahf
and
je
cmp
xchg
mov
lcall
lret
mov
std
pusha
out
inc
push
repnz
rcrb
in
dec
imul
inc
daa
lahf
jb
mov
out
sarl
sbb
cmp
push
pop
je
or
call
cwtl
addr16
clc
push
mov
lret
and
adc
push
lock
adc
mov
int
je
sub
xchg
and
fwait
dec
nop
fistl
mov
cltd
and
dec
mov
popa
xor
push
sbb
mov
jb
xor
popa
adc
pop
insl
lcall
mov
and
mov
sub
daa
pop
cs
jne
stc
mov
xchg
push
push
and
mov
sbbb
adc
dec
ljmp
cmp
fisubrs
xor
mov
lret
and
ljmp
dec
out
sub
cs
fsubs
popf
in
test
decl
dec
sub
inc
mov
out
movsb
ljmp
mov
dec
push
incl
les
push
xchg
fcoml
imul
push
sub
adc
and
jp
decl
mov
jno
dec
ljmp
push
cmpsb
push
dec
pop
sahf
pop
push
je
mov
xchg
bnd
xor
fcos
decl
push
jg
mov
loop
je
fildl
adc
or
mov
nop
mov
push
jl
mov
or
mov
movsl
movsl
jmp
cmp
sti
test
inc
insl
mov
mov
xor
ret
enter
ret
pop
test
cltd
fadd
pop
cli
xor
notb
addr16
jmp
js
nop
scas
lds
cld
mov
jge
pop
enter
shll
adcb
mov
sahf
pusha
jo
ja
das
ljmp
sbb
shl
mull
cltd
arpl
jae
mov
push
push
mov
repz
mov
mov
int3
xchg
comiss
loop
hlt
adc
in
mov
movsl
incl
les
mov
shlb
mov
ret
xor
sahf
lret
dec
mov
adc
repnz
call
fisubrs
and
popl
lock
enter
sub
and
jae
jg
test
or
adc
rol
in
add
xchg
out
clc
ret
iret
xchg
cmc
mov
and
xor
or
cltd
fildll
mov
inc
lcall
aas
in
cwtl
sub
or
and
negb
jno
cld
arpl
imul
jmp
out
add
test
pop
roll
or
jmp
lcall
and
rclb
incl
mov
mov
dec
mov
pop
pushf
cmp
cltd
or
cmp
rcrb
std
call
in
jb
out
loopne
xor
push
add
mov
push
stc
in
imul
hlt
in
mov
out
pushl
shr
cmpl
xchg
or
int
mov
testb
mov
pop
fisubrs
cmp
mov
or
test
and
inc
pop
xchg
jg
cmp
sub
in
enter
cltd
gs
sub
popf
and
lods
xlat
incl
cld
aad
dec
pop
mov
imul
jo
add
xlat
sbb
subl
nop
dec
inc
andb
and
lcall
and
xchg
sub
div
dec
mov
jb
xorl
sub
outsl
mov
in
inc
mov
mov
push
js
loopne
lcall
incl
nop
dec
dec
enter
pop
in
inc
push
xchg
outsb
nopl
cld
ss
push
pushl
jo
test
test
add
int3
dec
out
and
dec
psadbw
pop
test
xchg
gs
mov
or
fwait
popf
push
sub
es
sub
xor
incl
sub
push
outsb
push
and
xchg
mov
mov
xlat
repnz
sub
xchg
pushl
std
push
in
fidivrl
es
icebp
jl
movsl
scas
orl
bound
in
sub
inc
mov
and
lret
rolb
push
and
pushl
shrb
test
jmp
nop
xlat
mov
scas
aam
or
mov
xchg
xchg
jmp
mov
dec
fstpt
loopne
xchg
pop
mov
pop
sub
adc
mov
int3
cmp
out
sub
mov
cld
mov
ds
sub
popa
push
jae
in
mov
popa
incl
in
cbtw
imul
ret
mov
pop
xchg
sbb
pop
std
mov
fstl
fstl
movsb
addr16
push
jae
cmpsb
dec
mov
cmp
add
and
outsb
movsb
mov
cmp
popf
jge
push
cli
call
xchg
mov
xchg
jo
sarl
jge
mov
adc
inc
ret
jmp
adc
mov
xchg
adc
jo
lds
call
incl
xchg
push
in
push
jle
jp
outsl
jl
test
divb
inc
cwtl
push
cmp
mov
lds
imul
or
xor
push
mov
xorb
inc
xchg
out
ljmp
andb
and
aad
dec
pop
sbb
jg
adc
pop
bound
push
insb
push
dec
into
jbe
icebp
sub
inc
repz
lcall
mov
mov
pop
gs
push
lret
mov
ja
sub
fdivrs
pushl
mov
fisubrs
test
loopne
js
dec
mov
out
insl
subl
dec
xchg
dec
sub
jmp
pushl
jg
push
int
loope
es
sar
jo
pop
push
sahf
push
sbb
cmpsb
fsubs
mov
gs
add
adc
push
movsl
repnz
lahf
pop
cmp
mov
mov
fdivr
mov
cli
fwait
push
faddl
pusha
xchg
mov
fistpll
jbe
movsb
jmp
call
aas
pop
movsl
out
cltd
pop
xchg
inc
push
mov
xor
jg
dec
dec
movsl
cmc
fdiv
mov
sbb
pop
cmp
jmp
mov
ja
aam
jno
out
adc
in
ja
jecxz
decl
lcall
pushf
cmp
inc
hlt
inc
add
push
adc
mov
scas
rcll
jg
adc
add
mov
jmp
ret
nop
int3
jmp
jg
mov
fadds
mov
add
aas
adc
aas
ljmp
lods
ljmp
ja
mov
or
lea
push
test
incl
inc
push
push
scas
aad
adc
sti
push
popa
std
imul
xchg
repz
sub
call
call
sbb
cmp
fnstsw
popf
pop
xorl
or
shlb
ja
cmp
nop
cmp
mov
add
fwait
imul
mov
jne
and
pop
jmp
push
jge
pushf
cli
rcl
cmp
mov
ljmp
aam
jb
es
lods
lods
add
out
add
mov
je
fldt
test
add
push
lret
add
test
test
mov
bswap
xor
cwtl
test
pop
sbb
dec
add
call
mov
jl
sbb
dec
sub
jle
and
or
lcall
cmp
flds
sub
mov
mov
cmpsl
or
inc
hlt
lods
imul
pop
cld
decl
sub
mov
fcmovnb
fwait
sub
mov
mov
and
mov
jmp
mov
idivb
enter
fnstenv
stos
call
xchg
mov
xorl
mov
inc
jg
inc
or
lods
cmp
add
jo
iret
data16
sbb
lcall
enter
incl
push
pop
cmc
stc
mov
mov
pop
mov
mov
es
mov
stc
add
pusha
jae
rolb
sbb
xchg
mov
loope
ret
mov
mov
jb
sub
and
mov
mov
loope
js
push
jg
pop
xor
popf
xchg
xor
or
es
dec
outsl
push
fbld
mov
sar
lcall
cmp
iret
popa
or
aaa
loopne
cmp
movb
sub
jg
or
lods
xchg
arpl
cmp
pop
mov
pop
popf
xchg
subb
sub
sub
enter
int
xchg
sub
xor
ja
lcall
dec
ljmp
ja
mov
hlt
pop
dec
inc
call
ljmp
xorb
inc
xbegin
push
pop
sbb
fisttps
jecxz
dec
cs
cld
lods
hlt
sub
push
loopne
cld
and
decl
jb
inc
push
out
xchg
gs
adc
rorb
cltd
jge
push
mov
jg
sub
enter
ljmp
xchg
into
push
jmp
aas
aad
int
or
mov
jp
icebp
lcall
cwtl
adc
cld
ljmp
cmp
inc
sbb
xor
cmp
jle
insb
or
adc
pop
outsl
and
dec
call
push
stc
fdivr
ret
add
sbb
cmpsl
test
faddp
xchg
add
clc
xchg
lods
push
incl
leave
and
push
mov
xchg
ffreep
mov
inc
fcomip
decl
jle
fxtract
loop
pop
aad
cmc
pop
sub
mov
sbbl
decl
xor
fisubrs
scas
xchg
mov
call
popl
jg
mov
fisubs
sbb
cmc
pop
sub
dec
mov
add
jg
sbb
cwtl
mov
fildll
movsb
pop
mov
jg
or
or
sbb
sarb
jns
lcall
and
mov
or
xor
mov
jmp
pop
cld
sbb
in
or
movsb
xchg
std
jne
jp
adc
or
into
call
inc
jp
sbb
jecxz
jmp
enter
jecxz
or
lcall
xlat
inc
or
sbb
sbb
push
push
and
imul
jmp
and
ss
cmp
add
push
adc
in
into
cwtl
pop
mov
pop
stos
sub
push
sarb
mov
sti
xor
lahf
out
fs
xor
pusha
cmp
out
pop
inc
int3
cmp
call
ret
pop
cmc
xor
vmread
lea
cs
ljmp
stc
popa
and
add
dec
in
push
loopne
lret
aam
sub
sbb
insl
sbb
or
lcall
sub
pop
xchg
jmp
lahf
dec
sbb
jmp
scas
jae
cli
cmp
test
xlat
dec
jge
ds
push
xchg
loopne
cltd
inc
pop
fidivs
andb
cltd
decl
lock
jecxz
pop
adc
push
add
pop
loop
arpl
mov
and
jmp
aaa
in
sbb
insl
cmpsb
and
enter
xchg
pop
pop
inc
inc
xor
jmp
jp
xchg
xchg
insb
cli
sbb
imul
mov
orl
sbb
jmp
hlt
cs
sbb
cmp
cmc
loope
pop
fdivp
leave
pop
sahf
stc
or
movsl
or
cmp
xchg
and
jmp
dec
gs
incl
scas
cmp
cmpsl
ljmp
sub
inc
test
xor
ljmp
cs
pop
lcall
aaa
mov
sbb
fidivl
rol
enter
test
jg
mov
push
xchg
sbb
rcr
xchg
enter
jmp
add
out
mov
scas
aad
add
mov
int
cmpsb
or
mov
cmp
rorl
adc
ror
sbb
test
inc
call
jns
mov
or
sub
mov
mov
repnz
les
pushl
inc
cmp
jecxz
outsb
jl
jp
xchg
mov
in
inc
jne
scas
push
mov
mov
stos
push
decl
xor
push
jnp
mov
pop
xchg
push
lret
push
dec
push
call
xchg
clc
push
jp
sub
push
mov
add
ljmp
imul
and
add
lret
es
outsb
mov
decl
lods
adc
jns
push
xlat
loop
mov
xchg
sub
incl
cmpsb
icebp
aas
std
pop
out
push
adcb
cwtl
xchg
pop
adc
sahf
stos
fs
inc
xchg
lahf
jnp
lret
inc
cmp
adc
fs
call
incl
inc
popl
jo
cwtl
out
loop
addr16
sub
popf
std
popa
jae
and
sti
insb
or
jmp
lods
inc
sbb
sbb
and
dec
sbb
out
cli
and
adc
pop
jno
inc
mov
adc
sub
int3
clc
incl
dec
adcl
pop
es
jp
jnp
or
ljmp
test
je
cwtl
mov
jmp
outsl
or
data16
inc
sbb
cmp
cmp
aas
loopne
xchg
aad
ret
adc
push
js
stc
mov
push
xor
lock
jmp
nop
sub
clc
out
lahf
scas
inc
mov
pop
sub
push
mov
adc
or
test
test
jg
decl
adc
xchg
mov
outsl
dec
and
fwait
sahf
sub
pop
or
incl
fdivl
push
mov
adc
lret
daa
fistpll
dec
jmp
adc
movsl
fsubl
jecxz
mov
jle
cmp
filds
push
mov
std
cmp
fcmovb
sti
negb
loope
sti
mov
leave
jmp
inc
mov
push
or
jae
mov
icebp
decl
push
jo
or
pop
lea
xor
ljmp
lcall
fwait
into
xor
in
ffree
inc
in
shll
mov
mov
insb
popa
sub
pop
pop
or
jg
pushl
inc
fidivl
jle
lret
dec
or
cwtl
mov
arpl
aad
lcall
out
jmp
jecxz
loop
add
push
pop
adc
repnz
adc
cmp
incl
aaa
inc
adc
inc
jns
clc
cwtl
and
mov
into
pop
out
xchg
arpl
push
loop
cltd
fidivrs
shlb
jae
push
mov
lods
in
and
push
iret
ljmp
jecxz
int3
cmpsb
sbb
loopne
dec
clc
test
fmull
cmpsl
popa
xchg
movsb
sub
jle
pushl
xor
and
cmp
cmp
bound
push
mov
inc
jg
mov
mov
xchg
xor
xlat
stos
and
lcall
mov
push
mov
inc
subl
sbb
pop
push
dec
xor
loopne
int3
mov
shlb
ss
inc
fwait
cmp
mov
rcrb
push
pop
ljmp
rcl
div
push
cmp
fwait
out
dec
and
xchg
adc
ds
add
das
sar
cmp
xor
and
jbe
push
xchg
or
jg,pt
mov
popf
fisttpll
or
jbe
adc
lds
cmp
ficompl
lcall
dec
jno
xor
stos
inc
jne
dec
sbb
sti
mov
mov
fimull
inc
jecxz
push
cmc
inc
inc
cltd
hlt
pop
mov
xor
ds
cmpsl
pop
enter
fiadds
dec
mov
lods
movsb
movsb
sbb
push
lods
pushl
lret
cli
and
inc
jae
pop
test
pop
mov
sbb
cmp
pop
sub
aaa
xacquire
gs
incl
dec
testb
xchg
mov
mov
outsb
push
mov
ss
scas
loope
adc
jmp
mov
add
scas
in
dec
fisttps
or
sub
stc
arpl
adc
ljmp
jmp
out
fs
mov
leave
mov
mov
test
mov
dec
mov
lods
stos
pop
jmp
sub
repz
dec
mov
and
gs
cmp
in
cmp
sti
mov
cld
call
xchg
or
addr16
nop
pushf
dec
fwait
jbe
and
or
sub
iret
xchg
jp
cmp
pushl
in
pop
scas
call
stc
movsb
jo
dec
out
gs
fwait
leave
push
fwait
loopne
imul
js
lcall
das
mov
ret
mov
mov
lods
xchg
sbbl
dec
add
jae
lcall
xchg
mov
js
xchg
or
push
lock
fnstsw
lcall
js
mov
sti
push
aad
sub
add
popf
mov
jo
in
loope
jmp
dec
in
movsb
rcr
je
mov
mov
add
cli
mov
mov
adc
jb
push
enter
aas
xor
movsl
cltd
inc
jg
lcall
cs
aam
pop
push
lahf
or
mov
sbb
scas
incl
jg
mov
mov
jecxz
loopne
dec
sub
ret
mov
push
inc
mov
das
jo
mov
push
out
ljmp
xor
cltd
mov
orb
dec
inc
add
jmp
sub
aas
leave
lcall
out
daa
out
xor
aaa
cld
call
inc
fiaddl
lea
dec
fcompl
shll
xchg
xchg
jg
call
inc
daa
sti
ljmp
fnsave
or
outsl
jmp
out
addr16
or
xlat
add
idiv
call
pop
cld
xchg
popw
mov
xchg
xor
jmp
cltd
and
xchg
or
sbb
push
inc
cmc
xchg
xchg
xor
adc
mov
ljmp
and
shl
mov
sub
fcomps
cmp
test
mov
cmp
mov
and
cmp
add
or
insl
loope
cmp
jno
push
ja
pushl
imul
add
xor
out
push
sub
lea
inc
aam
mov
mov
pusha
insl
mov
mov
adc
xchg
dec
scas
jne
cmpsb
lcall
insl
incl
xchg
rcrl
fistps
mov
sti
cltd
mov
aas
rorl
lahf
out
or
push
dec
or
adcb
lds
ret
in
dec
je
jl
sub
mov
jmp
insl
cmp
xlat
jmp
xor
dec
bound
pop
sbbl
sub
bound
xchg
sar
or
scas
stos
ljmp
movsl
push
aam
dec
enter
lcall
mov
daa
fists
aaa
call
sub
push
scas
pop
jmp
sub
aas
mov
lret
clc
popa
and
xor
insl
pop
mov
pushf
cli
iret
dec
sbb
rcrb
xor
xchg
sub
outsl
push
insl
mov
jp
push
ret
mov
int3
mov
push
mov
adc
pop
out
or
je
stos
push
sbb
loopne
lahf
enter
mov
ljmp
mov
mov
dec
lea
rcr
add
decl
test
xorb
mov
push
shl
jg
cs
dec
jno
js
test
xor
je
sbb
xchg
cwtl
mov
call
aaa
cld
and
adc
insb
rcl
mov
pop
add
shrl
icebp
adc
incl
es
sub
ret
sbb
push
pop
pushf
xchg
lcall
sub
push
scas
jmp
jns
cmp
test
addr16
in
jmp
sub
aam
dec
adc
mov
sbb
in
adc
lcall
das
sahf
sub
and
out
sub
aas
nop
cmpsb
popa
ret
dec
cltd
sub
sub
imul
out
xor
arpl
mov
insb
jg
call
sbb
sub
cmp
push
mov
mov
push
decl
or
jbe
xchg
push
neg
in
outsb
test
rcrb
sbb
jmp
jg
adc
jno
pushf
fiaddl
push
iret
add
enter
lods
dec
sub
jmp
data16
and
lahf
add
push
mov
and
lock
push
out
out
jmp
fdiv
cmpsl
imul
xor
sarb
add
inc
mov
mov
gs
mov
xor
jnp
cmp
push
in
popf
subps
ljmp
and
or
inc
sbb
sbb
fs
sbb
jge
jmp
pop
xchg
dec
pushl
cld
push
shl
popa
mov
fdivr
cmpl
lods
mov
leave
pushf
xchg
test
push
sbb
push
inc
es
pop
xor
inc
or
or
test
leave
dec
les
mov
push
adc
cltd
sbb
gs
je
push
cmc
loop
fildll
cmpsb
fsts
in
dec
and
adc
inc
je
mov
and
inc
mov
or
xor
jno
inc
pop
mov
sbb
cmp
incl
jbe
nop
inc
mov
out
push
inc
enter
cli
add
je
lods
add
std
fidivrs
incl
dec
icebp
push
sbb
pavgw
aad
insl
mov
arpl
add
jg
lds
mov
les
fisubrs
testl
test
cmp
push
addr16
pop
outsb
lea
pop
adc
mov
aaa
mov
ljmp
and
sbb
faddl
add
pop
out
and
call
jg
scas
fcmovbe
cli
mov
mov
adc
out
shrb
adc
ljmp
ret
dec
xor
test
jg
sbb
sbb
incb
fisttps
shlb
test
adc
inc
jmp
or
call
push
movsb
rclb
popa
ss
aaa
std
lcall
inc
psubw
lods
push
lods
inc
sub
sbb
or
out
mov
add
stos
sub
adc
push
aas
sar
mov
and
dec
pop
and
lret
inc
inc
jecxz
jge
and
or
mov
mov
cmp
add
pop
push
mov
ljmp
xchg
ljmp
sub
cmp
aas
sbb
ja
jns,pn
sub
xor
out
adc
push
data16
jo
incl
inc
sub
adc
mov
add
call
ss
adc
sbb
pop
mov
jb
push
rorl
arpl
decl
test
clc
ret
gs
adc
sub
out
mov
sbb
cmp
push
incl
ljmp
ja
ljmp
or
mov
pop
jle
mov
decl
ljmp
cmc
rclb
stos
sub
ss
cmpsl
mov
pushl
jmp
stos
pop
jae
xor
das
or
jne
sub
push
cmc
mov
cmpb
ljmp
xor
faddl
fcmove
mov
decl
push
add
subl
lret
pmaxsw
xor
mov
test
ljmp
subb
mov
and
ss
mov
outsb
jns
xchg
stos
xchg
lcall
test
mov
lea
leave
jl
sub
leave
push
xchg
mov
dec
lahf
cmp
ret
dec
mov
fmull
xchg
mov
jge
xchg
stos
gs
xor
push
fisttps
incl
imul
test
call
push
data16
xlat
or
cmp
jmp
orl
push
sub
imul
lods
popl
xchg
arpl
call
ljmp
iret
mov
ljmp
aam
lea
in
hlt
outsl
dec
inc
stos
add
mov
mov
dec
das
cmpsb
mov
xchg
mov
outsl
outsb
cmpb
lods
int
notb
mov
lcall
mov
sti
stos
imul
ret
jno
jb
lds
inc
jae
pushl
daa
leave
outsb
pushf
sbb
inc
aaa
repnz
ds
mov
cmp
or
pop
adc
in
incb
dec
xchg
cmpsl
sar
fidivl
divb
mov
adc
outsb
idivl
adc
dec
dec
jmp
pop
ror
pop
pop
lea
push
imul
jmp
call
push
mov
es
scas
add
test
jo
push
pop
push
nop
sub
push
add
or
lcall
add
fmuls
cld
outsb
cwtl
xor
mov
add
mov
stos
jl
add
addl
add
push
out
fisttps
pushl
lea
icebp
cmp
jae
xchg
or
jle
shrb
shrb
sbb
fisubs
scas
xor
add
adc
call
cmp
xchg
dec
dec
lock
jmp
mov
adc
testl
pop
stos
call
push
cwtl
sbb
fdivr
call
dec
xchg
lret
adc
jno
shll
loop
mov
stos
mov
out
cmp
popa
notb
fucom
incl
out
fimuls
xor
daa
lock
push
repz
mov
js
stos
int3
int3
mov
ffree
mov
push
jae
lea
pop
insb
cmc
cmp
pop
popf
xor
pop
sbb
cmp
push
xchg
lods
or
fs
jmp
ret
test
xchg
mov
call
out
aam
push
push
andb
shll
inc
fdiv
xchg
mov
add
xor
push
pop
test
incl
ret
lock
mov
xchg
mov
push
fsubrs
les
ja
ret
ljmp
cld
loop
add
mov
and
ret
arpl
jl
xchg
inc
insl
add
mov
push
inc
xchg
ja
ljmp
or
mov
sbb
sub
insl
jno
dec
decl
es
mov
dec
in
or
pusha
push
imul
das
jns
popa
push
test
sbb
bound
clc
adc
pop
mov
movsb
scas
xchg
jmp
out
es
pop
loope
pop
divl
sub
adc
jg
in
ret
data16
adc
and
sub
pop
inc
ffreep
or
jmp
repnz
and
cvtps2pi
push
sar
lcall
pop
out
pop
push
or
sbb
fisubrl
inc
loop
cli
clc
inc
cmp
sub
pushl
pop
sti
mov
cmpsl
xor
jg
or
mov
jg
stos
je
cld
mov
ljmp
mov
adcl
icebp
sub
int
sbb
sbb
jp
xchg
add
cld
jge
or
cltd
jge
inc
shlb
insb
cmp
mov
incl
push
or
rol
insl
xchg
jl
jns
add
jmp
idivb
or
lcall
push
mov
out
pop
pop
inc
pusha
dec
sub
test
fcmovb
fsubr
loop
je
pop
add
incl
pop
aaa
movb
arpl
cmp
ljmp
popf
mov
or
cmp
dec
push
sbb
mov
shrl
xlat
pop
xchg
aam
incl
imul
xor
sub
js
aam
cmpb
fadds
leave
fdivs
cs
cld
scas
add
ljmp
jecxz
popa
dec
lcall
out
mov
jae
jbe
mov
pushl
cmp
aaa
mov
mov
push
push
pop
push
push
jb
incl
lds
fimull
dec
mov
pop
sbb
inc
mov
loop
sub
push
jae
pop
seto
repz
jno
push
sub
push
decl
hlt
cmp
ds
loope
jg
mov
dec
push
imul
je
stc
jmp
push
cltd
cltd
mov
sbb
fbld
and
iret
sbb
cld
jge
adc
aaa
in
fmull
fldt
decl
xchg
jo
mov
inc
lods
add
or
add
movsl
inc
clc
and
lock
ljmp
js
or
cmpb
sbb
enter
push
mov
cmp
cmpb
push
cmp
jmp
dec
aas
cmpsb
cmpb
xchg
testb
jmp
push
bound
or
ljmp
inc
xchg
xchg
data16
test
pop
adc
fdivrs
mov
in
inc
lock
jo
jg
inc
pushl
outsb
iret
into
or
dec
or
call
xchg
lcall
xchg
es
cmc
fs
nop
mov
fwait
push
sub
jns
sub
sub
adc
movsl
test
jns
mov
mov
push
lahf
clc
out
pop
outsb
push
jl
loope
xor
ljmp
call
test
inc
aaa
stos
sti
mov
inc
inc
jmp
sti
call
mov
add
mov
or
pop
xlat
adc
and
and
xchg
inc
cmc
out
mov
and
cmpl
scas
rorl
mov
mov
jp
inc
inc
dec
iret
adc
das
lcall
mov
outsl
adc
decl
xor
pop
jge
mov
inc
lea
cmp
and
sbb
mov
scas
jle
lret
push
cltd
inc
loopne
cmp
sbb
add
mov
jl
or
xchg
and
mov
ss
fistpll
add
sub
cmp
add
lds
xor
sti
and
hlt
ljmp
add
cmpl
lcall
hlt
adc
das
mov
pop
fstl
jo
cli
cmp
xor
xchg
in
lahf
arpl
dec
xor
mov
dec
rclb
xor
lcall
push
fisttpll
test
mov
adc
xchg
decl
arpl
fildl
test
daa
sub
xor
dec
in
mov
out
cld
lcall
in
mov
das
cld
into
xor
test
mov
outsl
adc
jg
sub
jb
in
and
jg
data16
incl
ret
mov
fwait
imul
xchg
decl
jg
rol
shll
shrb
mov
mov
pop
lock
fistps
adc
adc
cltd
imul
jmp
mov
call
int
mov
divb
loope
jo
jne
jbe
data16
inc
lret
repz
mov
in
adc
xor
cmp
adc
call
sbb
and
cmpsb
call
fists
push
lret
negb
jmp
add
adcb
ljmp
aam
add
iret
das
xor
mov
inc
push
cmp
pushf
adc
mov
sbb
out
jne
and
ret
add
cwtl
mov
xchg
push
leave
adc
sahf
push
pop
mov
std
adc
mov
or
mov
inc
ret
fimull
mov
mov
mov
pop
aas
mov
or
hlt
jmp
shll
sbb
jb
cmpsb
xor
add
jo
push
jg
loope
sbb
call
lock
jmp
and
lret
add
fs
mov
sbb
ljmp
xchg
jmp
das
fwait
rep
div
lock
mov
mov
sub
outsb
mov
mov
mov
cwtl
incl
xor
lcall
out
sar
and
pop
mov
lcall
inc
and
mov
scas
aam
aas
xor
ljmp
out
sbb
push
mov
insl
into
inc
and
pop
lock
incl
push
cmp
push
xor
inc
jb
cltd
stc
lcall
fs
push
loop
xor
inc
pushf
shll
sub
push
cmp
mov
decl
mov
inc
repz
jmp
stc
mov
movsl
jl
mov
mov
jg
xchg
lret
cwtl
sub
movb
fninit
pushf
inc
and
mov
mov
cmp
xchg
dec
jg
push
jae
xorl
dec
cld
inc
dec
jno
ja
mov
popa
std
rclb
test
ljmp
pop
rolb
movb
mov
fildll
sbb
lahf
stos
negl
int3
pop
repnz
mov
add
imul
xor
ljmp
out
stos
adc
mov
in
aam
divl
xor
es
cld
push
pop
inc
add
push
test
pop
scas
mov
lock
jmp
jo
sub
icebp
rcrl
mov
dec
mov
mov
hlt
jg
inc
push
mov
aaa
cli
sub
xor
push
jae
pop
inc
jecxz
imul
fisttps
sbb
mov
pop
mov
sub
cmpsl
xchg
cltd
pop
lahf
cmpsl
xchg
and
ss
pop
js
sub
fcmovb
pop
leave
cmpsb
hlt
dec
in
mov
jp
aaa
mov
mov
inc
dec
in
ret
adc
decl
xlat
sbb
outsb
dec
aas
out
mov
ljmp
call
in
or
jmp
scas
pop
push
roll
in
outsb
jns
xchg
push
incl
lods
mov
rcll
gs
scas
dec
xchg
pushl
mov
push
or
outsb
mov
push
xchg
jecxz
aaa
or
call
dec
inc
clc
sub
std
fsubrp
scas
push
addr16
add
test
fwait
xchg
push
add
xor
jae
lcall
or
fst
dec
movsb
inc
adc
sti
das
sbb
mov
mov
and
ret
psrad
aad
movsl
repnz
xor
jg
scas
sbb
loope
pop
pushf
divb
flds
dec
iret
mov
sub
incl
bsr
mov
jae
flds
cwtl
jnp
stos
add
mov
mov
pushl
xchg
add
xchg
das
lret
push
clc
call
fwait
sub
fwait
insl
xlat
or
push
adc
ljmp
psubusw
popa
push
outsl
jg
adc
push
mov
mov
shl
add
hlt
decl
xchg
cld
pop
push
jno
xorb
jo
fwait
mov
pop
adc
xor
mov
mov
mov
mov
jmp
jl,pn
inc
add
mov
mov
dec
jmp
es
dec
enter
ljmp
inc
or
inc
sub
cmp
and
mov
jno
add
lcall
adc
jne
xchg
xchg
in
lret
out
in
sub
adc
xor
call
pop
adc
pop
aam
adc
add
push
push
aaa
popf
mov
out
cmp
lcall
mov
inc
adc
scas
in
dec
sub
in
or
mov
pop
repz
ljmp
dec
and
repz
xchg
sbb
into
dec
flds
in
mov
addl
ficoms
outsb
ljmp
adc
xchg
or
fisttpl
mov
cld
decl
sbb
adc
mov
mov
cli
mov
fistl
std
sbb
imull
dec
cmpl
clc
mov
pop
hlt
incl
in
and
shr
andb
repz
add
divb
adc
out
cli
call
mov
pusha
or
cmp
push
inc
cmpsb
push
pop
jne
push
add
pop
cmp
mov
loop
fnstsw
scas
insb
aaa
jmp
mov
and
test
clc
jmp
incl
dec
je
popf
mov
or
rolb
iret
push
movsl
aad
mov
aad
in
pop
mov
jns
mov
mov
addr16
dec
js
notb
movsl
ljmp
mov
dec
push
int3
mov
popa
jbe
adc
xor
cli
xchg
cmpsl
ja
cwtl
pushf
pushl
push
std
ljmp
je
jno
aam
cmp
adc
scas
jmp
add
into
push
push
incl
pop
add
dec
add
jae
insb
test
xchg
aad
cmp
jp
push
pop
inc
mov
jmp
ja
xor
sarb
push
sti
dec
loopne
and
dec
test
jmp
decl
jecxz
sub
xchg
add
pop
add
xchg
popf
adc
cmp
ljmp
ljmp
add
jns
insl
mov
les
mov
push
mov
inc
lret
jge
aas
and
incl
leave
outsl
jb
lods
adc
test
mov
dec
sbb
and
pop
fwait
dec
das
in
cmp
inc
push
pop
lock
incl
data16
popa
inc
dec
sub
orl
scas
xchg
orl
decl
scas
pop
rcrl
jp
in
push
and
push
or
mov
lcall
bound
rcr
xchg
and
pop
cltd
jge
incl
int3
dec
push
sbb
sbb
sti
mov
fsubr
pop
mov
cmp
push
cmpsb
mov
add
jo
xchg
push
pop
imul
and
pusha
fiaddl
cltd
sbb
pushl
insb
xor
lock
adc
ljmp
pop
popa
insl
mov
cmp
insb
or
mov
pop
ljmp
inc
out
push
dec
push
dec
sub
add
decl
add
push
and
jae
add
cs
add
daa
push
and
lock
or
pop
clc
inc
fs
rcrb
add
ror
sbb
pop
push
lds
popa
inc
fidivl
jno
or
fistps
shrl
adc
inc
test
mov
decl
push
mov
push
lahf
dec
lret
arpl
inc
sahf
scas
cmpsl
test
xchg
imul
cmp
cmp
and
mov
or
push
outsb
stos
or
mov
int3
test
inc
test
jo
aas
lret
xchg
or
push
rorl
mov
mov
dec
xchg
push
mov
shl
hlt
call
ljmp
fcmovb
push
add
inc
out
adc
mov
push
clc
adcb
dec
out
cmp
int
sahf
xlat
repnz
js
and
jmp
or
mov
dec
cmp
outsl
dec
dec
xor
ljmp
push
mov
push
shlb
loope
nop
lods
in
inc
sbb
xor
jg
insb
add
push
and
pop
lret
jnp
mov
jmp
push
xchg
pop
pop
pop
ret
or
xor
stos
loopne
pop
fisubs
pop
inc
push
mov
clc
das
mov
arpl
aas
cltd
add
decl
push
xor
pop
mov
shll
test
or
dec
lret
jbe
mov
das
sar
aaa
inc
mov
jp
or
in
fistpl
push
or
add
loope
jmp
idivb
dec
sub
inc
jbe
push
add
into
daa
divl
ljmp
mov
sbb
push
out
lock
fcompp
dec
and
inc
dec
xchg
sbb
mov
sub
xchg
cltd
repz
ljmp
rol
iret
enter
adc
fistpl
sub
mov
or
ffree
pop
jo
add
sub
pop
push
or
jge
lahf
push
mov
xchg
jg
lcall
jl
mov
js
inc
paddd
xlat
sub
in
lods
dec
jmp
mov
ret
andl
xchg
adc
jecxz
inc
stos
in
pop
mov
subb
mov
idivb
push
sbb
pushl
shrb
daa
pop
lret
out
xor
and
inc
pop
lea
sub
mov
out
jns
dec
es
push
push
js
mov
xor
fidivrl
icebp
xor
pop
leave
js
into
pop
out
jmp
fiadds
cmpsl
sti
repz
fisttps
inc
outsb
fst
and
cld
cld
ret
adc
mov
nop
fs
add
dec
xor
jmp
and
add
jmp
cmp
dec
mov
add
call
adc
enter
sub
xbegin
lods
test
shlb
in
hlt
ljmp
call
mov
cli
add
scas
jge
in
push
lock
out
push
nop
inc
dec
js
xor
repz
push
mov
rcll
fnstsw
jns
out
shlb
pusha
push
fsts
les
mov
es
lcall
cmp
push
mov
pop
test
add
sbb
pop
push
ljmp
jmp
push
jle
clc
inc
out
setno
or
add
pusha
xchg
adc
test
jmp
cmp
daa
int3
sub
into
dec
jmp
shll
cmp
dec
xor
xchg
incl
push
sub
mov
dec
push
pop
and
aad
cmp
int3
xchg
dec
ds
movsl
fmul
pushl
movsb
lds
and
inc
adc
pop
adc
push
cmpsb
shl
pop
or
call
les
fdivl
pop
dec
push
sub
push
out
jg
dec
sahf
cmp
ljmp
and
push
scas
addr16
repz
sti
jp
sub
fucomip
nop
jle
je
out
f2xm1
inc
loop
or
out
shlb
mov
push
xlat
outsl
cli
mov
sub
mov
movsl
sub
fdivrs
lcall
adc
ljmp
mov
mov
pushl
push
adc
adc
xor
gs
les
mov
push
das
loop
fwait
jb
mov
pop
jno
addb
lods
inc
icebp
cli
je
push
lock
lcall
pop
lcall
push
aas
or
sbb
inc
inc
adc
jge
sbb
mov
xchg
xor
les
add
sub
push
stos
fstpl
lahf
cwtl
mov
jge
cmp
mov
pop
les
mov
addr16
fbld
mov
pop
push
xlat
fmul
push
push
in
jl
cmpsb
jae
test
xlat
dec
loop
add
add
dec
mov
xlat
mov
aaa
test
addr16
mov
xor
mov
pushl
movsl
insb
ds
gs
cmc
addr16
pushf
adc
cmp
sub
ror
add
add
and
xlat
aam
fisttpll
mov
mov
into
or
cmc
jmp
jmp
xor
stos
fsubl
xchg
repnz
call
flds
xchg
int3
movsb
dec
xchg
lock
sub
jb
dec
cmc
add
jle
mov
jge
call
inc
sbbl
shrb
mov
mov
in
sbb
aaa
cld
mov
dec
xchg
xor
and
xor
push
xor
decl
dec
call
xor
xchg
jae
cmp
xchg
stc
pushl
rclb
repnz
ds
stos
mov
ret
out
rolb
call
sbb
jle
xchg
test
xchg
cltd
out
xchg
mov
negb
mov
std
adc
rclb
ljmp
jle
adc
xchg
jb
orb
sahf
mov
in
or
out
adc
scas
adc
data16
stos
mov
mov
stos
inc
std
rclb
add
cld
outsb
testl
cmp
jge
out
push
mov
arpl
in
out
out
push
in
or
jmp
pop
mov
call
aam
test
jbe
es
cmpsl
in
sbb
scas
push
sbb
insb
sbb
decl
mov
cmpsb
pop
xchg
and
xlat
cs
and
mov
push
lret
lds
dec
push
aam
in
jbe
loope
pop
add
push
scas
lcall
or
or
push
imul
push
ficoms
inc
clc
inc
das
mov
ja
jmp
call
adc
and
mov
cmp
mov
pop
dec
jnp
dec
mov
jmp
adc
xchg
insb
xchg
sbb
jns
movl
jp
or
push
pop
pop
jp
lods
jecxz
insb
std
dec
stos
and
jbe
outsb
sub
sahf
pop
in
fildll
cmpsb
repnz
and
dec
cmc
dec
shl
jp
data16
incl
clc
and
das
pop
rorl
ss
and
sub
sbb
clc
lret
cld
loopne
outsl
loop
mov
sub
imulb
mov
in
or
and
sahf
adc
xchg
xor
mov
mov
loopne
iret
inc
std
shrb
cld
int3
aad
cmc
popa
mov
vpsubsw
movsl
ret
mov
inc
sub
adc
xor
and
mov
mov
and
loop
popa
out
ds
movsb
xchg
test
aam
sub
mov
jle
clc
jno
mov
aam
popl
mov
inc
jae
jno
shrb
outsl
jae
jl
sahf
xchg
lret
lcall
test
and
out
push
sub
add
cltd
scas
call
decl
push
imul
imul
dec
sub
insl
push
mov
data16
js
icebp
fsts
or
sbb
ljmp
arpl
push
mov
xchg
aaa
add
jge
leave
dec
outsb
ds
cwtl
stc
adc
jg
jg
pop
out
cli
mov
mov
jecxz
outsb
sbb
cmpsb
dec
pushf
mov
aaa
int3
jg
jmp
sbb
sub
sarl
inc
mov
arpl
and
enter
ficoml
lcall
ljmp
lcall
stos
and
mov
insb
sub
decl
xlat
lret
dec
mov
mov
push
or
hlt
outsb
jg
jmp
pop
pop
pop
call
push
lcall
pushl
dec
ss
decl
lock
popf
inc
pop
lret
inc
cmp
fs
lret
xchg
mov
rcr
popf
mov
ljmp
mov
imul
aaa
pop
mov
fwait
cmp
xchg
imul
inc
dec
pushf
lcall
aaa
adc
cwtl
popf
repz
js
fidivl
jnp
mov
loopne
mov
testb
mov
loopne
out
xabort
fildl
xchg
adc
cmpl
pop
loopne
jmp
push
xor
cmc
jl
fs
arpl
aas
fidivrs
xor
shrb
dec
ljmp
inc
pop
jecxz
add
repnz
call
imul
ret
rol
mov
ds
cwtl
mov
cltd
cmpsb
jecxz
std
sti
mov
cmp
adc
insb
xor
or
stos
sahf
pop
cmpsl
or
scas
rorl
stos
push
fcos
jmp
ret
or
xor
mov
pop
mov
mov
or
pushl
call
into
lods
lods
cwtl
int3
repnz
fs
incl
xchg
push
mov
adc
ret
fiaddl
mov
or
xlat
mov
idiv
pushl
sti
gs
pop
lods
bnd
jb
cwtl
sbb
jne
outsl
addb
pop
addr16
mov
lods
pop
aas
or
cmp
out
push
inc
or
inc
ret
dec
add
icebp
mov
pop
push
ret
pop
insl
loop
shrl
mov
addr16
daa
arpl
sti
xor
movsl
jb
out
insb
push
rol
loop
mov
sbb
rolb
cltd
dec
add
pop
shl
and
sahf
mov
call
js
xchg
mov
pushl
lds
sbb
loop
ret
lahf
inc
jmp
clc
call
sbb
jge
push
cmpsb
popf
cwtl
out
and
and
adc
xor
call
repnz
ret
push
dec
cmp
popf
bswap
inc
sti
mov
enter
pop
mov
jg
incl
xor
jae
rolb
lgs
xor
cmp
shll
or
mov
mov
mov
xchg
daa
aam
jg
fidivl
les
xor
scas
ficoml
js
shll
ljmp
pop
int
cmpsl
jno
sbbl
xchg
mov
xor
jbe
in
push
cwtl
mov
push
push
call
xchg
incb
div
push
xor
pusha
mov
cmp
jge
mov
lcall
dec
push
daa
pusha
movsb
sarl
mov
xlat
add
jmp
incl
dec
out
lods
repnz
loope
add
mov
and
sahf
xchg
jecxz
aad
cmp
xchg
aaa
lret
call
clc
idivl
stc
decl
adc
mov
nop
xchg
dec
xchg
dec
loopne
dec
shlb
incl
mov
add
fwait
sbb
aaa
and
stos
insl
fstpl
push
dec
cmp
loop
pop
lcall
push
cmp
nop
cmp
jnp
xchg
lods
mov
push
std
or
and
cwtl
out
mov
jmp
cmp
xchg
mov
push
call
test
add
sbb
movsl
inc
je
pop
jnp
incl
outsb
or
mov
add
ja
or
xchg
cmpsl
imulb
add
pop
mov
decl
xor
shrl
cmp
stos
into
pop
sub
decl
int
loopne
clc
hlt
ljmp
sbb
dec
fbld
inc
rcll
sub
decl
or
sti
out
push
cmp
pop
mov
inc
sub
mov
call
sub
outsl
mov
mov
and
in
mov
addl
gs
incl
imul
ds
jmp
push
push
push
sti
or
xor
pop
inc
or
or
add
leave
ljmp
jns
mov
push
aas
mov
sbb
pushl
push
mov
mov
and
jne
mov
cli
xchg
hlt
inc
aam
xchg
shlb
xor
ljmp
push
stc
scas
xor
cld
andb
push
push
mov
ret
sbb
mov
cmpsb
scas
mov
xor
sbb
out
test
xor
cli
leave
xchg
xchg
rcll
scas
and
push
push
pop
call
ljmp
rcrb
sub
push
add
mov
pushl
nop
pop
stc
subl
lcall
and
loope
sub
int
ja
add
mov
fimuls
add
sarl
lock
sub
into
mov
stos
add
cli
std
add
call
arpl
in
into
sbb
int
pop
movsb
test
enter
aaa
pop
fdivrl
adc
push
mov
jle
xchg
decl
leave
cli
inc
and
out
sarl
shll
jmp
sub
inc
adc
imul
ret
int3
popa
and
loope
in
sbb
call
loopne
push
outsl
xor
int
in
jl
fistl
inc
aam
movsb
ljmp
cmp
loope
lea
and
popa
nop
jb
mov
pusha
inc
dec
test
aas
aaa
mov
ljmp
movsb
insb
les
shl
bound
mov
add
push
mov
ljmp
ljmp
pop
cmp
xchg
clc
xor
cmp
lcall
cmc
call
movsb
push
repnz
in
or
aaa
mov
mov
fcomip
lods
inc
aas
xchg
cmpsb
mov
jb
lahf
test
loop
clc
jnp
inc
mov
pop
cld
cmp
mov
das
lret
xchg
int3
mov
or
stc
in
les
lahf
lcall
adc
fs
sub
mov
daa
outsl
dec
out
mov
push
movsb
mov
xor
push
and
lahf
lds
in
shl
jg
or
in
enter
sub
or
push
filds
enter
ss
inc
jg
aad
dec
lcall
inc
pop
clc
std
dec
push
sar
neg
repz
pop
xchg
decl
lahf
mov
xchg
jl
add
shrb
xchg
lcall
aad
inc
fcmovbe
pop
pop
into
les
pusha
fwait
in
fbld
sbbb
jb
pop
mov
clc
mov
lret
jo
hlt
pop
pop
mov
sub
incl
sbb
aad
push
loop
push
insb
cmc
call
or
dec
push
push
push
leave
dec
cmp
jmp
push
dec
ret
stos
and
std
subb
jg
pop
and
ret
loope
push
cwtl
add
jb
lods
fdivrl
sub
mov
mov
mov
xchg
into
xor
into
loopne
or
inc
sti
hlt
rorl
pushl
cmp
loope
sub
sub
stos
loopne
mov
sarl
and
inc
xchg
and
out
ja
incl
add
or
or
fstpt
in
pop
cwtl
pop
jge
jmp
ljmp
xchg
dec
cmpsl
jg
push
jae
in
sub
loop
movsl
jg
call
inc
push
mov
movsb
sub
cs
xchg
call
sbb
pop
sub
lods
sti
mov
loopne
inc
add
ror
mov
decl
fcomps
leave
enter
je
loopne
sbb
xor
fisubrl
xchg
mov
incl
insb
or
cmp
pop
aas
jp
xchg
inc
cli
lcall
or
cld
lcall
cltd
mov
mov
sarl
xchg
xor
sbb
sar
decl
jno
inc
jmp
push
push
mov
in
sbb
xor
jg
pop
imul
stos
leave
inc
push
loope
mov
rcll
in
mov
mov
cmp
cmp
les
cld
cwtl
sbb
lcall
jns
mov
out
loopne
push
adcl
lret
call
into
pop
mov
fisttps
clc
int
shl
test
das
lods
ss
jl
mov
lahf
mov
sbbl
sti
mov
push
daa
dec
and
es
call
in
int3
dec
fcoml
inc
jb
mov
bound
mov
pusha
fcomi
les
sbb
incl
stos
jp
rorb
leave
mov
cmp
jae
xor
call
cs
pop
xorb
jo
adc
mov
inc
or
fidivs
sbb
fs
cmp
lcall
aam
stc
scas
movsb
xor
add
push
sbb
sub
sub
push
inc
xor
loope
push
inc
sbbl
daa
add
dec
loopne
aad
stos
fidivl
dec
sbb
incl
fidivrl
and
mov
jo
js
cwtl
jmp
mov
push
fisttps
jecxz
nop
les
or
bound
push
xchg
filds
fs
mov
aad
adc
je
sti
test
repz
ljmp
sar
jbe
push
movsb
xchg
xor
add
lds
pop
dec
sub
add
sub
test
hlt
cmpsl
xchg
pop
sahf
dec
enter
shrb
xchg
pushl
faddl
push
shlb
dec
roll
cmpsl
js
pop
popa
jge
xchg
pusha
std
jmp
sub
ret
sbb
imul
std
jg
ja
testl
incl
pusha
sti
or
fdivr
inc
mov
jp
pop
sub
mov
fdiv
jg
fldt
andb
dec
js
mov
pop
lret
cmp
jb
and
je
adc
cld
mov
incl
sub
orl
jg
inc
jns
incb
imul
push
mov
pop
pop
out
mov
in
inc
or
decl
sbb
jno
pop
xor
and
cmp
fstpt
stos
in
outsb
test
inc
enter
inc
jb
add
std
stc
dec
inc
je
pop
sbb
inc
jle
notb
in
and
lock
sub
aaa
xchg
call
jo
mov
test
or
into
adc
xor
stos
push
jmp
orl
enter
lret
bound
xchg
dec
loope
cmp
lock
orb
cwtl
sub
mov
cs
jmp
aad
sbb
add
fwait
or
sbb
js
fcmovu
cmc
pushl
or
adc
clc
cmp
je
cmp
movsl
clc
enter
cld
repnz
lock
dec
jne
cmpsb
lcall
in
lret
into
mov
je
push
sbb
jmp
pushf
fstps
fiaddl
fisttps
adc
xor
enter
jbe
mov
mov
mov
lods
js
sub
iret
cmp
dec
je
iret
decl
mov
movsl
push
dec
mov
or
xor
dec
pushl
fbld
int3
ljmp
jmp
jge
in
cmpsb
jo,pn
mov
std
in
ja
add
inc
sbb
push
test
insl
and
ljmp
cmp
mov
pop
add
and
sbb
repnz
sbb
xchg
ds
loopne
add
mov
push
sbb
test
nop
incb
repnz
cmpsb
xchg
xor
or
cmp
mov
in
pop
fadds
push
mov
adc
sbb
ljmp
pop
push
pusha
dec
xor
rclb
adc
fcomip
xchg
add
ds
adc
inc
in
loopne
mov
test
inc
repnz
pop
inc
das
mov
add
pop
jo
pop
jae
addr16
sub
ljmp
idivl
adc
movsl
xchg
or
sbb
add
jg
jmp
stos
mov
or
repz
xchg
out
clc
jnp
nop
jl
fwait
push
sub
stos
call
xor
inc
xchg
lret
mov
int
loop
jbe
out
in
ljmp
cmp
sub
and
mov
or
pop
pop
sbbl
jecxz
push
lcall
loopne
movsb
lret
mov
decl
mov
fld
cli
das
add
and
dec
ret
cwtl
cmc
jne
cmp
inc
scas
test
jno
dec
push
pop
fs
jae
sub
cli
aas
addr16
cmp
cmp
push
adc
jo
push
mov
add
cwtl
cmp
fidivs
jbe
mov
xchg
and
or
jg
test
push
sub
lods
pop
cmp
cmp
call
test
xor
test
test
faddl
dec
add
push
int3
xor
das
mov
ljmp
sbb
adc
das
addr16
fcoms
stos
push
adc
out
js
int
jbe
push
out
adc
lcall
mov
pop
xor
ljmp
incl
subb
pop
or
xlat
sbbl
inc
mov
jle
adc
sub
scas
lcall
mov
fadds
pop
stc
stos
cmp
inc
aaa
push
mov
push
cmp
in
cli
call
test
loop
sub
movsb
cmp
sub
jbe
push
decb
adc
fsubp
insl
push
dec
imul
ret
fwait
mov
xlat
in
mov
inc
mov
mov
incl
ret
sub
xchg
push
xchg
ljmp
fcoms
pushf
out
dec
imul
adc
cmc
jmp
mov
outsb
ds
jecxz
rolb
pop
mov
dec
es
stos
jge
loope
and
cld
jg
int3
mov
aad
push
push
call
iret
test
das
pop
add
jns
sarb
lahf
or
fcmovne
stc
mov
dec
idivb
jmp
dec
xchg
mov
fisttpl
loope
and
rcrl
inc
mov
xchg
fisubrl
cmc
rdtsc
divl
jecxz
in
or
mov
ficompl
cmp
fwait
stos
pop
out
les
or
loopne
jae
cld
adc
dec
or
fs
inc
jmp
jg
mov
pop
cmp
mov
pop
xchg
xor
inc
data16
lcall
hlt
icebp
gs
sti
das
xchg
adcb
gs
stos
mov
sbb
fsubp
lds
pop
loopne
xor
pusha
mov
mov
lret
imul
ja
push
mov
decl
mov
cs
out
adc
movb
push
adc
loopne
lcall
aaa
mov
icebp
pop
scas
push
xchg
adc
fs
xor
xor
mov
out
pop
mov
pop
cmp
scas
rcrl
pop
xor
cmc
lds
push
int3
jmp
stos
xor
or
add
adc
xchg
xchg
lods
jbe
cmp
aas
jmp
and
xor
jl
stc
or
mov
scas
add
and
mov
mov
jnp
add
sbb
pop
sbb
adc
mov
mov
mov
pop
dec
push
incb
rcrb
movsb
decb
ljmp
outsb
lea
adc
xor
out
rcll
add
into
add
push
mov
dec
sbbl
sbb
push
mov
or
mov
jg
cmp
adc
ficompl
pop
push
jae
jmp
push
mov
hlt
adc
addl
filds
sub
mov
call
cmp
adc
loop
mov
and
clc
sbbl
xor
inc
sub
xor
xchg
fsubr
mov
lcall
cmp
mov
fnsave
adc
rorl
fldcw
out
mov
inc
pushf
mov
mov
inc
xchg
jns
jo
rcll
lcall
sbb
cmpsb
or
or
jns
sub
mov
leave
mov
mov
sbb
mov
mov
mov
imul
xchg
inc
jecxz
sbb
aas
adc
push
repz
pusha
cli
pop
ret
adc
push
std
xor
lret
mov
and
decl
lock
repnz
fbstp
pop
pavgb
icebp
or
push
dec
imul
shl
test
push
add
mov
icebp
stos
dec
in
xchg
ljmp
ja
inc
loop
fistps
xchg
push
mov
pmulhuw
fstpt
out
sub
pop
or
cmp
frstor
mov
cli
mov
adc
jmp
fs
mov
aad
pusha
or
jns
mov
call
jns
add
cmpsb
and
das
hlt
es
push
mov
shr
stc
or
push
jp
call
stc
insb
lcall
rclb
jp
fisubrs
mov
popa
test
pop
jne
dec
scas
sbb
shlb
stc
cmovl
lods
sub
mov
xlat
push
mov
dec
loope
incl
jbe
out
pop
and
icebp
xchg
sub
add
cs
mov
popf
movsb
and
lret
mov
adc
ljmp
sub
cli
mov
rcll
ror
pushf
xorl
mov
jne
mov
inc
jae
in
mov
jle
adc
enter
sbb
and
mov
insb
xor
mov
xorb
push
hlt
decl
mov
outsb
fdivrl
sti
mov
jmp
scas
cmp
shl
adc
push
adc
inc
lods
sbb
rorb
dec
fildll
add
fcoms
and
or
inc
dec
xlat
jne
adc
lahf
mov
movsl
call
jb
lea
test
jns
scas
pop
add
or
jae
scas
ret
sbb
fs
decl
out
push
stc
cmpl
dec
pushf
fwait
xchg
xor
mov
mov
arpl
sub
lcall
je
or
mov
aam
and
and
mov
xchg
test
ljmp
lods
aad
xchg
scas
leave
pop
jbe
mov
adc
sub
inc
mov
pop
fdivrs
dec
call
mov
and
dec
rorb
inc
push
lods
das
pop
std
jbe
mulb
dec
xlat
sub
jbe
jp
xchg
mov
dec
xchg
in
in
fdivrs
lock
lahf
gs
sahf
jmp
incl
cwtl
ds
cmpsl
inc
cmpl
pop
into
adc
push
icebp
fmull
daa
add
and
inc
imul
push
dec
mov
test
decl
js
lea
into
mov
sbb
aas
loope
fldcw
fildll
scas
mov
lcall
cld
sahf
ds
ljmp
clc
xor
notb
mov
std
push
iret
test
push
dec
ljmp
adc
call
cltd
mov
xchg
jno
iret
stos
call
sbb
and
rol
movsl
push
ds
mov
push
push
xor
cmp
clc
push
cmpb
add
int3
incl
jmp
pop
stos
into
dec
mov
iret
filds
xor
mov
adc
inc
loopne
stc
std
sub
test
pop
xchg
cmp
das
stc
out
inc
divb
leave
sbb
or
xor
das
xchg
cmpsb
jbe
jb
in
testl
adc
xchg
push
mov
or
jp
sub
xor
push
mov
push
lret
push
inc
mov
test
push
inc
test
sti
sub
clc
jb
dec
adc
push
push
aas
add
cli
or
lods
int3
add
icebp
cli
jp
test
inc
in
mov
lret
pop
push
dec
fdivrs
or
lcall
pop
lock
daa
add
xchg
decb
pop
cs
mov
add
mov
sahf
icebp
pop
xlat
cmpsb
pop
idivb
ljmp
push
mov
not
mov
lods
mov
mov
push
test
les
mov
cmp
dec
clc
sahf
out
mov
pop
les
stos
aad
data16
push
leave
dec
cmpsl
adc
xchg
scas
push
leave
pop
cmc
movsb
aam
xor
leave
push
cmp
xchg
mov
fadd
aas
mov
dec
movsb
jbe
mov
negl
xchg
negb
lcall
arpl
xchg
in
mov
mov
push
pop
andb
push
dec
jge
inc
mov
je
add
mov
lea
pusha
cmp
adc
sub
popa
cmp
push
push
and
out
jg
pop
loopne
fnstsw
repnz
inc
lods
shl
push
add
jbe
dec
out
sbb
std
hlt
inc
lcall
call
pop
or
dec
or
out
inc
and
xor
xor
adc
adcl
ljmp
sub
xor
rolb
push
mov
or
fucom
lods
ss
mov
loopne
cld
fs
ret
adc
and
lahf
jmp
dec
popa
pop
fiaddl
sahf
and
mov
pop
push
xchg
cmpsl
loop
pop
fcmove
sbb
bound
push
ret
faddp
push
mov
and
shl
mull
mov
dec
mov
cmp
movsb
or
fstpl
and
jge
pushl
or
pop
mov
sub
push
fmuls
or
pop
loopne
call
cmp
adcl
aad
inc
push
in
mov
lock
adc
int3
jg
mov
scas
cmp
int3
ljmp
into
loopne
mov
insl
add
push
pop
fidivrl
call
call
out
arpl
popf
push
mulb
jle
imul
das
sbb
filds
movsb
adc
sbb
clc
push
sub
subb
in
iret
ljmp
andb
mov
out
push
pop
rcll
push
xor
and
and
pushf
pop
movsb
and
loopne
lcall
mov
mov
push
aaa
xchg
xor
cld
dec
stos
sub
stos
cwtl
sub
xor
or
mov
cwtl
xchg
lods
xchg
lcall
lret
mov
icebp
mov
hlt
sbb
and
push
iret
adc
sub
out
pop
cld
lcall
jae
xchg
mov
loopne
iret
dec
jge
mov
movl
jmp
int
add
xchg
out
mov
subl
ret
insl
gs
pushf
pusha
xchg
lcall
add
jle
adc
adc
adc
inc
fs
sbbl
xor
lret
xchg
adc
dec
push
or
or
fisttpll
sar
int
xlat
xorl
and
cmp
xchg
notb
cmp
pushl
adc
repnz
push
adc
or
js,pn
mov
in
pushl
les
flds
mov
pop
mov
jbe
call
call
test
xchg
insl
jb
scas
aaa
or
icebp
cltd
lahf
dec
mov
push
jmp
mov
call
and
repz
loopne
cmp
inc
jae
int3
rcrb
out
inc
jg
lahf
push
loopne,pt
jno
jae
outsb
push
or
mov
pop
cli
call
inc
push
and
cmp
bound
inc
sub
ja
dec
mov
cmp
call
or
popa
xchg
call
xor
stc
cmp
and
js,pt
lock
loopne
incl
sbb
and
jb
imul
stos
lcall
lret
sub
jns
jge
incl
in
xor
xor
xchg
incl
xor
mov
mov
mov
addr16
inc
lahf
pop
dec
add
mov
pop
sarl
mov
int
imul
decl
jns
inc
push
mov
mov
loop
shrb
push
jmp
repz
and
jl
jle
mov
nop
pop
mov
inc
xor
jno
movsl
adc
and
jmp
sbb
or
insb
ret
sahf
dec
scas
popa
mov
clc
in
decl
scas
and
test
pushl
es
loop
fcmovb
cmp
cs
pop
mov
adc
adc
add
mov
pop
fbld
call
mov
inc
xchg
call
push
jmp
loope
lods
mov
lock
test
pop
int3
cmp
arpl
or
outsl
cli
incl
inc
mov
gs
pop
cmp
andb
xchg
test
outsb
mov
dec
push
add
shrb
jnp
repnz
inc
pushf
int
fcoms
iret
or
les
enter
call
fnstenv
sbb
adc
xor
bound
inc
ret
into
orb
repnz
adc
scas
pop
or
jmp
jecxz
dec
or
out
pop
xor
mov
stos
dec
aam
jp
stos
sbb
addr16
lods
add
sub
dec
mov
pushl
cld
incl
xchg
mov
movsl
pop
push
mov
xor
xchg
repz
lcall
jns
sub
inc
xchg
sbb
ds
add
and
push
aas
decl
popf
movsl
mov
xor
mov
mov
in
jb
sbb
ljmp
inc
scas
add
mov
push
ret
jl
adc
jge,pn
xor
mov
imul
cmp
jle
call
push
fs
cmp
test
and
je
xor
aaa
and
call
cld
jno
cwtl
lods
in
test
mov
sub
jmp
ret
push
cmc
and
cmpsb
ljmp
xlat
ss
mov
daa
mov
jno
fsub
mov
xchg
outsb
shld
and
pop
lret
jmp
push
push
test
xchg
out
xor
loop
xor
arpl
pop
daa
scas
mov
shr
mov
xchg
cwtl
pop
push
add
mov
or
pop
dec
xchg
push
call
inc
pushf
je
cmp
add
inc
cmpl
int
fildll
dec
jns
loopne
ss
addr16
ljmp
cwtl
add
insl
push
cmpb
jmp
mov
cmc
jecxz
and
je
mov
ss
jns
inc
lret
lcall
dec
loope
push
pop
inc
xor
and
enter
push
mov
jb
lcall
xor
clc
hlt
mov
cmp
pop
jle
jnp
cmpsl
shll
sub
push
pushl
inc
ret
fildll
movsb
sbb
or
std
mov
orb
mov
cmp
or
in
insb
inc
add
push
out
dec
sbb
mov
fucomip
cmpsb
insb
lods
inc
xor
xor
xchg
cmp
push
fnsave
popf
inc
jb
pop
jmp
sbb
loope
mov
xor
inc
cmp
mov
add
xor
push
cmp
hlt
pusha
jmp
xchg
mov
sbb
push
int3
icebp
xlat
mov
xchg
les
aaa
std
call
mov
cmpb
cmp
mov
mov
es
aas
loopne
hlt
mov
mov
addb
xchg
or
mov
pushf
sub
pop
fsubrs
push
fcom
jg
dec
rcrl
std
insb
mov
push
add
pop
daa
rcr
sbb
lcall
jl
cmpsb
mov
cmpsl
pop
inc
popa
shrl
xchg
out
mov
pop
cmpb
pop
cmpb
sahf
adc
sub
icebp
adc
and
ljmp
cli
jne
mov
sbb
cmp
push
ja
xchg
in
fldl
pop
hlt
inc
xlat
aam
jmp
pop
mov
enter
ds
xchg
fisubs
lock
pop
in
and
loop
push
push
lea
lock
dec
sbb
hlt
ljmp
jnp
adcl
inc
loope
inc
cwtl
cmp
xorl
inc
shl
cmc
js
jecxz
cmc
test
lret
cld
dec
or
aas
cmp
pusha
in
xchg
sub
mov
or
pop
outsl
lods
outsl
cmc
mov
cli
pop
idiv
xchg
cmpsb
out
leave
outsb
xchg
xor
es
shlb
cmpsb
push
dec
xlat
rdtsc
aaa
inc
push
push
stos
decl
sub
xor
js
push
jno
out
adc
decl
sbb
push
sub
jmp
test
mov
xlat
call
ds
cmpsb
stos
sbb
and
mov
icebp
decl
mov
push
add
xchg
nop
or
cltd
adc
call
sub
add
outsb
das
push
adc
lea
aaa
mov
and
dec
dec
cwtl
pinsrw
flds
cmpsb
das
subb
sub
mov
sbb
xlat
xchg
xor
cmp
std
lds
call
adc
xor
bound
aaa
mov
dec
lahf
out
ficompl
adc
jo
das
inc
dec
push
pushl
and
je
not
mov
mov
mov
inc
push
inc
push
mov
lods
sbb
jle
jmp
sbb
out
dec
and
pop
adc
cld
adc
jg
push
cmp
xor
mov
jp
sar
cli
dec
adc
jne
lcall
movsb
add
mov
ja
fwait
adc
sbb
xchg
hlt
in
dec
les
in
adc
jb
mov
mov
incl
into
mulps
test
ror
out
push
lods
sbb
mov
orb
inc
cmpsb
adcl
ds
xor
scas
xchg
jbe
adc
mov
ss
inc
pop
xchg
adc
xor
push
mov
dec
fcomip
push
xor
and
in
mov
aaa
scas
fidivs
or
or
xor
outsl
popa
pop
fiadds
mov
dec
mov
and
pop
add
and
push
sub
jmp
ja
arpl
ror
les
ret
pop
outsl
lcall
es
cs
jl
pop
xchg
call
icebp
and
or
pusha
sbb
mov
push
pushl
mov
mov
add
aad
stc
sub
inc
in
sub
stos
popl
push
sub
lods
nop
sub
mov
les
jae
nop
xor
pop
push
out
pop
ljmp
lret
mov
pop
outsl
jle
test
dec
movsl
mov
mov
jp
push
lods
and
scas
cli
jmp
push
call
push
and
mov
repz
mov
and
pop
mov
fsubrl
movsl
je
or
jge
lret
out
pushf
outsl
or
ja
les
lock
mov
push
xor
xor
xor
mov
pop
add
mov
pushl
pop
lods
ss
jecxz
test
hlt
cld
fistl
outsb
mov
iret
roll
sar
cmpsl
in
sbb
mov
bound
inc
lcall
xchg
pop
or
stc
add
lock
mov
incl
cmc
and
xor
iret
push
inc
mov
xchg
jmp
rorb
aam
xchg
inc
push
add
fcmovb
mov
iret
insb
lods
pop
jp
mov
inc
cltd
out
sar
cmc
or
adc
lds
adc
and
jle
jge
decl
in
and
xchg
push
sahf
xchg
lret
ret
jne
bound
adc
sub
imul
sbb
add
pop
aad
aas
fisttpll
push
lock
test
push
clc
jns
loope
mov
mov
outsb
pop
push
jno
cmp
fwait
sahf
jnp
sub
leave
pop
push
mov
jmp
fnsave
xor
popf
mov
rcll
adc
fistpll
mov
xchg
fisubrs
jp
jo
and
cmp
andb
xor
mov
popf
test
adc
add
shll
cmp
mov
outsl
inc
test
insb
inc
inc
push
test
cwtl
add
std
lret
inc
popf
data16
mov
icebp
xchg
cmp
out
jb
xlat
or
jle
pushf
jmp
push
inc
insl
ss
repz
adc
push
mov
pop
inc
rcll
loopne
int
push
mov
std
mov
xchg
js
push
inc
sti
stos
movsb
dec
add
inc
jne
cmc
mov
xchg
cli
jg
xor
int3
push
loope
mov
mov
popa
pop
push
ds
cmp
push
pop
insb
dec
lea
std
pop
xchg
jp
int3
cld
aam
push
lcall
or
call
cmp
aas
pop
and
xor
int
xor
dec
push
push
jnp
jmp
sbb
clc
roll
fmul
inc
fdivrl
daa
and
mov
aad
xor
loopne
jne
mov
sarl
call
dec
idivl
movsl
add
inc
fldl
rcll
mov
adc
iret
test
stos
decl
push
clc
sub
int
mov
mov
arpl
mov
ljmp
dec
test
test
or
aas
mov
dec
es
call
mov
pushl
mov
xor
stc
nop
pop
shr
add
adc
cmpsl
xchg
jle
incl
push
dec
hlt
inc
mov
int
adc
jne
jl
pop
sbb
js
pushl
gs
aaa
lret
push
mov
sti
iret
jle
cmp
xchg
pop
mov
mov
xor
mov
pushl
xorl
pop
lret
insl
mov
jg
nop
in
mov
dec
lcallw
jno
push
sahf
repnz
add
push
lahf
mov
sub
adc
jnp
shr
aaa
in
sub
dec
jg
ret
in
test
mov
push
outsl
mov
fistps
xchg
pop
xchg
jnp
int3
jns
mov
call
mov
inc
into
jne
lds
nop
sub
out
loop
aad
aas
lds
jg
mov
ret
sbb
orb
pop
jl
movsb
jmp
push
shlb
xchg
xchg
fdivr
pop
pop
bound
scas
ret
mov
sbb
adc
add
or
adc
jmp
add
add
and
pop
roll
data16
cmpsl
or
jno
push
dec
add
ljmp
jo
jne
jmp
inc
inc
cmc
push
cmc
mov
lds
adc
jns
cmovge
cld
ljmp
scas
adc
icebp
mulb
and
lea
sbb
aaa
out
clc
cmp
inc
lock
mov
int
out
adc
decl
ja
pop
lahf
clc
movsb
shlb
mov
je
iret
sbb
adc
negl
pushf
pop
incl
and
pusha
insb
adcl
mov
icebp
jg
ljmp
scas
jl
aad
lods
adc
adc
pop
push
sbb
mov
fwait
decb
subb
aas
sbb
fwait
ljmp
push
icebp
jg
imulb
inc
sahf
jle
out
mov
sarb
jmp
stos
mov
fists
mov
sub
mov
push
dec
aaa
dec
negb
call
decl
jbe
in
shlb
cmpsb
js
xor
daa
mov
or
add
in
cli
lcall
test
and
pusha
cmp
hlt
mov
mov
daa
and
mov
add
lcall
enter
sub
pop
imul
icebp
mov
or
add
sub
insb
xor
add
lcall
decl
cmp
mov
sub
arpl
cmp
inc
push
out
orb
incl
sahf
adc
dec
rorb
call
ja
inc
fldz
loop
jnp
adc
insb
pop
adc
sub
fucom
hlt
cltd
mov
outsb
add
xchg
fisubrl
imul
fxch
push
cmpsl
nop
pusha
xchg
jo
pop
cwtl
jg
push
jns
icebp
mov
je
sarb
dec
xchg
mov
test
jle
lret
pop
loop
dec
sub
jecxz
jle
rcll
sbb
std
lods
jp
hlt
sub
test
cmp
mov
adc
std
rclb
jmp
mov
cmp
jae
or
inc
cmp
mov
dec
test
std
inc
push
shl
cwtl
xor
xorl
dec
rolb
clc
or
std
ljmp
cli
mov
cmp
sbb
pop
ret
les
outsl
insb
in
cmp
push
call
js
sbb
mov
mov
mov
lret
repz
scas
sar
lcall
mov
out
mov
cmpsb
sub
insl
aam
cmpsb
out
add
pop
fdivrl
ljmp
xor
xchg
repz
daa
mov
decl
lock
jp
icebp
rorb
sub
adc
inc
in
test
jmp
call
call
push
xchg
movsb
inc
in
jae
pushl
out
mov
inc
cmp
ret
rclb
sbb
inc
out
mov
inc
cld
in
mov
push
mov
ds
aad
jmp
push
jg
and
adc
loope
mov
hlt
rep
and
cs
push
sahf
in
call
cld
stos
imul
sbb
data16
mov
pushf
xor
sbb
mov
lea
decl
fstl
cmp
sub
mov
mov
pop
mov
outsl
dec
loopne
call
frstor
mov
adc
aaa
rorl
js
dec
ljmp
dec
std
lds
ss
ja
mov
and
cmp
lahf
fldl
push
push
pop
loopne
subb
mov
mov
add
pushf
or
sarl
in
lods
lods
mov
xor
arpl
push
fisttps
call
pushf
repz
inc
insl
ss
or
ficoml
xchg
mov
push
es
call
xchg
mov
lods
pop
int
cmc
mov
mov
imul
jmp
pop
sbb
dec
aaa
bound
add
xchg
mov
mov
incl
mov
nop
loop
sub
fsubrs
push
xor
mov
test
and
and
dec
mov
pop
mov
adc
ds
push
jmp
and
lret
scas
test
sahf
pushf
rcrb
fcomp
outsb
push
mov
push
xor
pop
shlb
xor
add
lods
sbb
sarl
xchg
js
mov
pop
cmpsb
push
out
stos
jge
movsb
outsl
and
decl
mov
push
insl
adc
inc
dec
mov
fwait
int
scas
and
scas
test
ljmp
add
jmp
loop
cmc
push
mov
out
mov
pop
adc
or
stos
dec
cmp
rcrl
imul
mov
icebp
js
jnp
add
incl
nop
mov
xchg
lea
lret
icebp
mov
cmp
out
mov
push
adc
sar
ja
ljmp
mov
xor
mov
insb
sbb
addb
push
movsl
xor
testb
loop
jmp
movsb
loopne
cmpsl
cwtl
scas
nop
lods
sahf
jle
mov
pop
mov
rorb
dec
jecxz
cmp
call
gs
hlt
sarl
ret
mov
mov
add
call
ret
sub
rorl
jnp
comiss
dec
xchg
jecxz
fcomip
incl
mov
or
cmp
xchg
mov
js
cmc
divb
jg
call
mov
push
or
mov
dec
push
inc
xchg
lret
and
outsl
clc
inc
lcall
jb
into
add
cmpsb
mov
add
pop
mov
push
call
rclb
jo
mov
jb
imul
mov
pushl
cmc
push
cmpsb
cld
mov
imul
andb
pop
ror
stos
push
mov
and
push
cmp
les
aam
add
notb
xor
call
sbb
or
pop
insl
dec
push
add
cmp
in
cmp
and
sbb
sbb
push
addr16
aas
int
aaa
inc
clc
pushl
add
jle
pop
push
jb
jecxz
mov
sysenter
lcall
xchg
test
icebp
xchg
jns
mov
enter
sbb
xchg
sarb
dec
xlat
scas
cmc
call
stos
inc
imul
xchg
int
dec
or
mov
lcall
call
cld
fnstsw
mov
mov
push
rcrl
push
shrb
mov
cli
out
adc
sub
inc
add
jne
sub
es
stos
addr16
es
sub
push
loop
cmp
icebp
pop
adc
mov
pop
lcall
and
pushl
adc
cmp
inc
xchg
sub
mov
mov
sub
outsb
clc
popa
push
insb
clc
incl
lds
add
push
inc
mov
cmp
je
sub
gs
xchg
call
jl
jae
mov
in
sbb
cmc
or
adc
divb
jge
addr16
fmull
jg
jo
push
inc
cmpsl
cmpsb
aad
shll
bound
and
jae
loop
stos
lcall
push
pushl
pushf
sbbl
cmpsb
or
daa
ss
jne
pushl
lock
cmpsl
cmp
out
mov
andl
and
adc
pop
cmp
cmp
out
sub
push
addl
std
dec
sahf
js
div
fwait
jbe
mov
movsl
cld
fcomip
mov
xchg
shlb
xchg
sbb
add
sbb
fnstenv
gs
call
enter
push
orl
xchg
xlat
loopne
shlb
lret
or
mov
sarb
pusha
mov
and
out
mov
xchg
or
mov
mov
pop
mov
decl
jmp
lock
mov
push
push
bound
insb
je
adc
call
inc
lret
cmpl
pop
cwtl
xor
sbb
jl
roll
mov
scas
sub
mull
int
repz
decl
stc
ret
div
inc
loopne
je
pop
loop
fwait
add
ss
mov
and
pushl
cmc
add
les
fwait
sbb
or
push
pop
ljmp
add
shrd
push
pushl
cld
jmp
cld
dec
or
fnsave
inc
jb
cmc
js
push
mov
orl
mov
imul
jnp
fcmovnbe
and
mov
pushf
mov
sar
call
jl
mov
loop
fcomi
loopne
jmp
cmp
clc
incl
pop
std
pop
or
mov
jg
stos
lods
mov
xchg
jecxz
fidivrl
ljmp
mov
inc
mov
andb
xchg
andb
mov
pushl
jo
sbb
jb
or
test
sbb
mov
adc
cwtl
cmp
lcall
dec
pop
xchg
and
sbb
adc
sbb
or
sbb
stos
testl
std
pop
popf
sahf
or
and
push
sbb
ljmp
stc
pop
inc
decl
inc
cld
mov
mov
inc
loop
out
and
call
int3
outsb
jmp
bound
sub
and
pop
xor
mov
test
mov
incl
mov
rcrl
pop
dec
std
xor
ficompl
in
xchg
nop
mov
outsl
cli
jmp
sbb
add
cmp
jae
rcrl
out
mov
loop
mov
leave
add
pop
jecxz
imul
pop
inc
xor
popa
pop
rorb
pop
inc
sbb
pop
rolb
xor
lods
outsb
enter
mov
jmp
jae
shl
jg
out
cmp
inc
push
add
pop
jae
mov
jns
push
push
loopne
decl
repz
lret
dec
sub
in
push
mov
lcall
and
mov
sbb
adc
jmp
pop
enter
shlb
lcall
jg
lods
cld
dec
push
mov
pop
dec
rcrl
adc
subb
pop
xlat
cmp
cmp
sub
fadd
out
les
cmp
adc
mov
pop
mov
repnz
jb
xchg
sub
sbb
mov
loope
lahf
das
pusha
test
iret
xchg
es
inc
je
fwait
cmpsb
rolb
pop
imul
loopne
hlt
pop
shll
push
stc
push
inc
mov
xchg
and
std
xchg
cs
jmp
pop
pop
adc
inc
xor
inc
scas
add
mov
sub
nop
cmpsl
call
movsl
mov
ss
fwait
movl
push
push
shrl
fcomps
push
mull
and
lahf
ret
xor
out
shlb
push
mov
sub
aaa
fwait
clc
loopne
fst
fnstsw
mov
mov
push
jge
shlb
jg
mov
fldenv
sub
in
jae
mov
xor
les
fcoml
xchg
sub
adc
lds
loope
sarb
xor
ja
lret
cmp
cmp
adc
mov
loop
lahf
outsb
pop
xchg
jmp
mov
add
cmpsb
push
into
repnz
push
hlt
ljmp
jbe
push
movswl
in
ljmp
jmp
lds
jp
jno
sbb
adcb
sbbb
xchg
add
push
gs
movaps
lcall
filds
add
mov
ret
lret
and
push
adc
push
es
std
mov
mov
cli
cmpsl
dec
mov
in
xchg
sub
fs
mov
xor
es
adc
in
jg
inc
cmpsb
lcall
cmp
mov
test
test
pushl
mov
mov
test
mov
imul
xchg
add
jg
pop
outsb
call
out
repnz
cmp
push
xor
dec
mov
jmp
dec
clc
sti
cltd
scas
sub
mov
in
fsubs
jmp
adc
xchg
xor
pop
push
jmp
push
mov
cmp
stos
out
out
lret
cmp
clc
ljmp
xchg
and
add
push
movsb
movd
insl
stos
popf
adc
jmp
cmc
aaa
push
clc
incl
dec
xor
sarl
and
dec
mov
jmp
push
mov
ret
sti
stos
pop
xor
add
hlt
sbb
dec
aas
add
das
incl
subb
inc
repnz
loop
xor
jmp
dec
addr16
clc
ljmp
cmp
outsb
add
push
ret
jbe
call
xchg
xor
test
jmp
inc
cs
mov
xchg
clc
fidivrl
jg
call
aad
hlt
sub
dec
mov
add
pop
dec
fsts
push
pop
popa
ljmp
sahf
sbb
mov
sbb
fidivrl
sub
cmp
cmp
movsl
nop
scas
adc
mov
push
in
jnp
push
loope
clc
mov
filds
pushl
sbb
pusha
aaa
hlt
push
sbb
jmp
iret
push
xchg
popf
pop
gs
mov
mov
test
jle
mov
jmp
push
dec
add
sti
push
mov
mov
or
cltd
inc
and
pushl
jmp
adc
and
in
dec
add
subl
decl
add
push
fildl
cld
mov
les
jg
or
push
and
mov
test
pop
add
ljmp
in
mov
cli
push
int
adc
adc
shr
outsb
jl
decl
jp
into
mov
leave
jnp
or
cmp
mov
stc
add
dec
test
push
leave
pop
in
imul
cwtl
fistpl
mov
imul
jo
push
mov
cmpsl
and
loopne
sbbb
xorl
xor
lcall
ret
shlb
mov
inc
in
mov
push
fld1
jg
dec
push
fnstsw
aad
sub
daa
cmp
out
xchg
cmp
xor
ja
jnp
pop
jne
nop
xchg
sahf
sahf
mov
into
and
arpl
xor
loopne
or
or
adc
dec
shl
jo
shlb
push
pop
dec
ret
add
pop
cld
xchg
lods
rcl
or
jp
mov
call
mov
jmp
mov
mov
ds
dec
add
js
sub
decl
inc
push
xor
lods
xor
and
je
aas
lret
and
jmp
sbb
jp
out
jmp
push
push
aam
vprotd
jns
icebp
fwait
shlb
aam
hlt
xor
test
or
in
fsts
sub
int
mov
mov
stc
in
rcll
lods
movsl
cmp
adc
jecxz
lcall
int3
fisttpl
lahf
jmp
iret
stos
incl
add
mov
aas
pop
fcompl
inc
popl
dec
repz
loop
loop
jmp
out
sbb
or
dec
pushf
jl
pop
ja
std
jp
adc
and
cmp
das
xchg
mov
imul
push
jo
ljmp
jno
add
outsb
pop
call
lock
adc
incl
pop
into
inc
xchg
cmp
sub
jg
push
pop
cmp
add
arpl
mov
imull
mov
inc
enter
repz
decl
insb
push
and
xchg
test
cmp
es
jg
flds
pop
dec
lds
dec
mov
repnz
inc
js
js
pop
pop
mov
loop
test
jmp
in
pop
xor
addr16
cld
pop
inc
mov
or
js
fcmove
dec
or
pushf
je
ss
push
inc
call
sbb
xchg
pop
clc
dec
shl
cmpsb
pushl
dec
je
out
neg
mov
add
out
fisubs
leave
imul
ds
xchg
stos
xchg
or
pop
mov
xchg
xor
jg
jge
add
mov
std
les
lcall
jge
pop
inc
mov
pop
jae
xchg
push
cmp
or
xor
aad
decl
or
mov
jnp
xor
pushl
ds
xlat
rorb
stos
loop
std
push
jecxz
incl
lea
xchg
adc
fdivrl
xor
int3
ljmp
dec
insb
mov
inc
dec
mov
add
stos
cmpl
inc
out
cld
adc
pusha
mov
lods
xchg
loope
pushl
es
popa
pushf
js
pop
push
test
sahf
idiv
lahf
sbb
add
test
orl
aaa
cmpsl
add
insb
adc
pushf
cmp
push
push
mov
jp
fisttpl
in
mov
mov
xchg
je
mov
or
idivl
cs
icebp
ljmp
mov
fsts
cmp
lods
sbb
mov
std
mov
sarl
mov
in
xchg
pop
sbb
push
mov
xor
sbb
mov
sub
test
js
lret
ljmp
and
stos
inc
shrl
add
push
add
imul
xchg
clc
xchg
ds
push
shlb
or
xchg
je
in
fcomip
mov
dec
mov
mov
xchg
jno
add
data16
dec
stc
clc
mov
imul
inc
in
xchg
sbb
mov
out
rcr
shl
jmp
sub
pop
and
jne
push
pop
mov
cmc
roll
mov
cmp
leave
mov
xlat
lods
loopne
cmpsb
lods
cmp
pop
mov
adc
icebp
sti
aas
mov
jp
cmp
cs
ss
insb
mov
pop
inc
in
cmpsb
dec
out
mov
nop
rorl
add
call
dec
cmpsl
mov
sbb
icebp
mov
dec
push
sub
scas
js
jb
xor
dec
loopne
jne
in
loope
shl
iretw
pop
inc
adc
scas
pusha
shlb
jge
push
dec
icebp
lcall
imul
lret
lahf
mov
add
aaa
xor
imul
out
adc
xor
stos
sub
ljmp
mov
aas
rol
xchg
sbb
outsb
into
pop
push
jmp
dec
mov
test
leave
or
push
jle
dec
pop
imul
inc
mov
and
xor
xchg
mov
mov
call
adc
sbb
rcrb
mov
push
mov
cld
cmpsl
scas
add
rorl
push
cltd
test
sahf
xchg
mov
mov
push
xchg
and
lret
or
add
incl
xchg
mov
pop
pusha
in
call
cmpsl
sbbl
jle
outsl
icebp
cmp
loopne
loope
adc
jecxz
dec
test
jg
ljmp
dec
xchg
sahf
lret
jbe
and
stos
or
ss
pop
mov
adc
mov
pushl
cwtl
ds
inc
adc
ret
dec
xchg
inc
mov
out
dec
dec
adc
aaa
add
ret
addr16
adc
cmp
fwait
incb
inc
repnz
test
cmp
addl
sahf
xchg
shll
and
fsubr
mov
scas
pop
sub
xlat
dec
loopne
ret
iret
sar
decl
dec
mov
cld
out
ljmp
add
and
mov
push
test
push
cmp
lcall
test
lea
xchg
pop
loopne
les
cmp
push
jbe
and
pushl
imul
pop
out
fwait
push
outsl
sub
pushf
out
fmull
loop
pusha
fdiv
push
outsb
push
nop
pop
push
sbb
incl
and
jmp
mov
loope
lcall
push
nop
xchg
or
mov
incl
daa
inc
loopne
lock
bound
mov
jecxz
sbb
outsb
cli
mov
xor
pop
mov
ss
call
repz
sbb
push
xor
ja
cmp
decl
dec
push
leave
adc
jmp
mov
scas
sar
ficoms
mov
jle
in
call
mov
bound
inc
inc
and
mov
and
lock
inc
les
push
xor
scas
inc
jne
sbb
jmp
mov
jb
js
push
jbe
pusha
aam
loope
test
dec
scas
clc
mov
mov
out
test
xchg
sub
inc
xchg
adc
test
jno
das
clc
fsubrl
mov
or
inc
lret
or
lret
sbb
xchg
fcompl
jg
ljmp
or
gs
loopne
sahf
stos
sbb
cwtl
decl
loope
pop
movsl
inc
dec
pop
or
or
mov
fsubrl
insb
mov
stc
jge
in
inc
sub
inc
aas
mov
xchg
and
add
cwtl
jmp
xchg
mov
add
ret
incl
jbe
es
sub
xor
cmp
add
decl
sbb
testl
orl
decl
aas
cmp
insl
stos
push
push
sub
add
mov
jbe
hlt
cltd
bound
pop
out
cmpsl
or
pushl
gs
cld
adc
gs
xchg
xlat
imull
out
popf
addr16
ljmp
cs
rorb
lock
jecxz
ret
std
cmp
adc
pop
or
sti
cmpl
inc
adc
sub
in
add
lea
mov
scas
xor
gs
dec
js
scas
icebp
cltd
push
jae
es
push
sub
rcll
mov
mov
pop
adc
cmp
push
aaa
mov
cmp
shll
mov
and
xchg
mov
mov
lret
seta
cmpsl
jns
dec
sbb
ljmp
and
fcomip
ljmp
std
mov
inc
rclb
xchg
inc
and
inc
mov
fistl
mov
jae
dec
cmp
les
mov
das
ds
xor
mov
pop
jnp
jecxz
mul
mov
xchg
mov
jle
adc
sti
inc
pop
icebp
decl
cwtl
lret
xchg
inc
sub
mov
push
lods
fwait
push
cmc
leave
jg
push
loop
mov
jmp
sbb
and
addl
out
lock
popa
cld
jo
repnz
cmpsb
jp
ljmp
push
andb
loope
pushf
test
or
ret
pusha
sti
pop
lock
mov
lea
sbb
call
xor
cmc
xor
adc
out
and
ljmp
xchg
leave
mov
fcoml
mov
jp
test
mov
in
xor
shrb
add
adc
test
aas
cmp
jg
pop
and
aas
xchg
pop
js
fsubrs
mov
loopne
mov
push
ret
cli
sub
movsl
fldenv
aaa
repz
ds
mov
jmp
shl
xchg
and
jecxz
ss
push
movsl
mov
fidivrs
jg
outsl
xchg
mov
cmpsl
ja
sti
lock
and
pop
xchg
sub
mov
push
or
ds
mov
mov
mov
fdivrl
std
sub
lock
xor
roll
cld
decl
xor
outsl
imul
jbe
imul
jnp
das
mov
mov
xor
idivl
ret
sbb
rcrb
pushl
loopne
xchg
sub
xchg
cmp
xor
mov
push
jne
jp
int
pop
subb
xchg
mov
pop
inc
mov
repnz
jo
mov
rorb
adc
incl
jb
push
sbb
push
incl
lahf
in
je
and
mov
or
loop
rolb
aad
sarb
add
pop
mov
fcomip
popa
movsl
daa
and
pop
jg
mov
fisubs
scas
lret
push
std
das
xchg
icebp
fwait
pop
inc
jnp
dec
leave
in
cmp
bound
sbb
es
or
add
aaa
jnp
fdivs
shlb
push
lea
int
jmp
add
testl
hlt
out
scas
call
pop
test
pop
sbb
repz
cmpsl
stos
and
in
jne
mov
mov
sbb
incb
packsswb
mov
in
bound
fmull
pusha
lods
ss
pushl
pop
xchg
add
adc
pop
cwtl
lock
incl
fimull
jmp
cmp
dec
int
icebp
cld
pop
push
xchg
scas
jle
icebp
dec
add
clc
ljmp
fs
imul
jp
cli
fildl
jp
and
call
scas
lods
push
sub
mov
enter
pop
hlt
mov
xchg
idivl
adc
mov
inc
push
stc
mov
neg
add
push
in
minps
lods
push
fistpl
dec
sahf
outsb
pop
mov
inc
in
les
faddp
pushl
call
test
sub
rcll
sti
add
jnp
daa
cmc
ret
ret
jge
lcall
add
jmp
adc
push
jno
sti
loop
mov
dec
sub
sbb
cmp
cli
inc
test
inc
xor
movsl
pop
jle
push
fadd
ss
ljmp
insl
pop
orb
jg
das
clc
xor
pop
ja
mov
cli
mov
call
or
push
sub
xor
sahf
sub
loope
out
push
lcall
or
stc
jecxz
cmc
fs
cmc
cld
sti
stos
jo
pop
cs
ljmp
xor
fs
call
outsl
icebp
xchg
lea
scas
gs
xchg
push
sub
sub
lahf
dec
jp
out
xchg
std
push
add
scas
xchg
adc
jecxz
jb
mov
mov
add
scas
or
and
mov
int
fwait
cmc
les
aaa
sub
dec
xor
shl
outsl
and
cmp
ds
cmc
adc
pop
loopne
xchg
cmpsb
jno
cmc
mov
and
fcomps
sbb
pop
and
stos
in
cmp
shll
pop
xor
push
dec
push
insl
push
lcall
pop
call
jecxz
pop
jbe
out
push
nop
mov
push
inc
mov
adc
lret
movsb
movsb
incb
loope
int
or
cmp
lret
aaa
and
imul
mov
and
pop
or
call
loop
add
imull
lock
jo
or
add
cmp
xchg
push
xchg
movsb
jmp
xchg
mov
inc
test
jg
fidivrl
mov
loop
rcrb
inc
lahf
das
pop
mov
mov
int
jae
dec
add
lcall
and
xchg
and
loop
sti
jbe
ret
mov
fidivrs
adc
push
jnp
inc
mov
std
cmp
imul
push
add
pop
xchg
jo
ds
sub
mov
or
decl
into
sbb
adc
iret
fcmovb
jo
sahf
repnz
shll
xor
ljmp
rorb
ficompl
xchg
inc
cmp
cmp
jle
aaa
arpl
hlt
jg
sub
dec
cmpb
out
jne
mov
movsl
pop
and
xchg
adc
mov
cmp
jecxz
aad
fistl
add
ljmp
inc
pushf
xor
push
sub
push
inc
cmp
dec
outsl
pop
fwait
jg
push
push
xchg
adc
inc
cmpsl
push
incl
sub
pop
fcoms
adc
insl
and
or
subl
faddp
sarl
jg
pushf
and
decl
call
jl
jl
outsb
jbe
outsb
push
insb
fucomip
andb
jmp
cmp
popa
ffree
xchg
lock
mov
push
add
inc
sbb
stos
out
push
mov
dec
call
out
inc
pop
pop
je
cmp
lcall
sub
sub
jmp
mov
shrl
roll
aas
sbb
das
push
test
test
push
push
xor
js
out
sbb
incl
shlb
cmp
or
test
pop
lods
mov
cli
jmp
ja
fwait
mov
shrb
rorb
pop
pop
jo
enter
lods
push
das
incl
xchg
push
das
mov
dec
es
aaa
push
dec
mov
stos
enter
adc
dec
sub
outsl
in
cmpb
dec
div
scas
inc
data16
and
jbe
mov
push
test
imul
mov
cmp
lahf
ljmp
lcall
xchg
mov
inc
sbb
lds
pop
outsl
sbb
aad
adc
lcall
jmp
xor
loope
mov
or
jg
lods
or
xorl
fldt
jae
mov
incl
push
imul
loope
jne
jg
enter
cmp
ret
lcall
jne
out
gs
cmpsb
sbb
hlt
aad
enter
repnz
sbb
insb
out
sub
pop
icebp
incl
inc
int3
fistpl
xor
test
pop
addr16
push
jg
push
mov
insl
cmp
loope
cmp
or
jl
mov
adc
xchg
or
movsb
pop
xor
jle
into
call
dec
sub
out
pop
sahf
imul
adc
jecxz
xchg
lods
imul
ds
mov
sub
shlb
cmp
push
jg
stc
xchg
arpl
mov
mov
mov
pop
xor
add
inc
xchg
lcall
mov
pusha
loop
in
xchg
ret
test
ljmp
inc
repz
mov
push
sbb
dec
xchg
inc
cmp
std
into
or
jno
jle
into
jg
sbb
cs
lcall
cmp
and
mov
stc
pop
call
in
dec
dec
hlt
sub
xchg
mov
adc
adc
pop
jnp
sarb
cld
mov
cli
insb
roll
dec
dec
dec
cld
mov
call
shll
add
iret
shl
incb
out
sahf
push
testl
clc
jle
jmp
cltd
out
scas
cmp
mov
jae
push
cmpsl
xchg
test
test
adc
adc
jg
sarb
xor
xor
inc
clc
int
int3
hlt
sbb
fisubl
jmp
or
and
inc
rorl
and
fs
add
add
ljmp
inc
shll
fidivrs
cmp
jp
setnp
call
in
add
sbb
mov
bound
fcoml
xchg
int3
cwtl
mov
daa
repz
xor
outsl
or
addb
jmp
ret
pop
cwtl
das
movsb
xor
mov
imul
in
test
dec
or
in
dec
sbb
jmp
add
dec
imul
ret
aad
hlt
stos
add
les
outsl
push
bound
jge
aaa
iret
stos
and
inc
jns
or
cld
pop
in
xchg
sbb
lock
pusha
cli
in
out
jns
call
dec
push
mov
jb
jo
dec
ret
sti
cmp
sbb
push
lahf
inc
int3
mov
lcall
or
arpl
dec
movsb
xor
movsl
call
pusha
pop
or
fdivl
mov
jecxz
xlat
ss
pop
mov
cltd
loope
loopne
ror
xchg
fcoml
sbb
lods
mov
add
push
iret
sti
hlt
inc
xchg
insb
or
ss
cld
incl
int3
cmp
lret
mov
cmp
pop
ret
scas
cmp
call
les
push
fidivrl
cmp
mov
and
lods
sbb
jge
jb
dec
dec
ds
sub
xor
hlt
mov
mov
push
lret
clc
decl
pop
cmp
shll
sti
and
cs
in
call
sub
mov
cli
lret
aad
stos
pushf
rcll
mov
leave
mov
stos
popf
ss
cmp
lcall
out
insb
mov
cmp
sub
sub
and
je
fcoms
inc
push
mov
cmp
in
movsb
xchg
jmp
sahf
aad
in
xor
xor
mov
dec
adc
and
jb
mov
push
lock
call
ljmp
sub
cwtl
in
popf
add
xor
orl
sar
in
call
stc
jp
and
push
pop
jns
mov
sub
lret
mov
or
sbb
pop
lret
out
cli
aas
ds
jg
je
out
outsl
es
mov
rolb
lret
inc
ljmp
popa
les
push
sub
adc
aad
ficomps
cmp
hlt
incl
push
or
ja
inc
cld
inc
loopne
xor
push
sbb
jecxz
mov
xor
daa
js
sbb
push
decl
xchg
lods
jne
push
push
ret
pop
loop
sar
decl
push
out
add
out
les
push
into
and
inc
xchg
shrb
sbb
xchg
call
outsb
inc
xchg
insl
js
negb
insl
aad
pop
mov
or
je
inc
js
lds
inc
inc
loope
call
cwtl
sbb
lret
jp
addl
loopne
cmc
in
loope
pop
xchg
cltd
sub
cmp
dec
dec
sub
cmp
fmul
mov
push
movsb
mov
fstpt
pop
ret
cld
mov
enter
jmp
or
popf
inc
int3
mov
or
loopne
scas
or
xchg
sub
aas
lahf
xor
hlt
adc
and
xchg
push
not
jp
sbb
in
xor
pop
ficompl
push
mov
mov
ljmp
sti
loope
mov
jp
rcrb
rep
push
call
fs
in
in
dec
popa
repnz
ss
adc
sub
mov
mov
cwtl
bound
aad
lret
incl
fcmovne
cmpsb
mov
jo
mov
cmp
xchg
lret
popf
mov
incl
jle
pop
outsb
or
into
cwtl
dec
mov
imul
rolb
push
jg
xchg
jecxz
mulb
sahf
dec
add
test
aam
nop
pop
mov
mov
lcall
xorl
and
loope
movsl
mov
jno
pop
mov
add
mov
icebp
sub
into
add
xchg
pop
bound
call
xchg
je
mov
leave
dec
cmp
pop
mov
inc
jae
call
or
xchg
lcall
mov
movb
loop
insb
stos
mov
adc
adc
shl
inc
aaa
cmpsl
sti
jmp
add
into
sarb
stc
dec
stc
pop
fisubrs
sbb
scas
mov
and
jg
mov
insb
fildl
sbb
xchg
mov
mov
mov
lcall
pop
imul
or
xor
decl
and
mov
xchg
adc
cwtl
push
add
lret
aaa
sahf
push
cmpsl
and
lcall
sub
pop
les
fldenv
pop
add
repnz
pusha
or
incl
or
cltd
loopne
inc
pop
xorb
cli
lods
rclb
xchg
add
es
mov
push
stc
negb
xor
push
cs
add
add
dec
dec
pusha
setne
mov
jo
push
pop
jbe
mov
jecxz
in
push
roll
push
std
add
cmpb
imul
ljmp
jmp
dec
inc
pop
cld
cmp
or
out
mov
fmull
outsb
loope
jae
out
insb
lret
cmp
fldcw
stos
jecxz
dec
jg
iret
inc
xor
fsts
dec
push
xchg
push
and
add
out
lcall
decl
shl
lret
fstps
push
aam
ret
aaa
lret
inc
inc
sti
cs
sbb
jno
add
push
push
add
sbb
call
add
rcrb
mov
data16
loop
jb
fsubl
arpl
test
and
into
mov
pushl
jmp
xor
mov
call
insb
enter
sub
imul
add
decl
inc
pop
cmpsb
cmp
and
push
out
cmp
ja
popa
and
out
mov
pop
mov
jmp
pop
fcoml
xor
pop
fimull
mov
lret
mov
dec
mov
sahf
pop
inc
insb
adc
jae
pop
adc
decl
fdivrp
jge
cmc
inc
lock
outsl
out
pop
push
mov
std
pushf
dec
and
push
push
das
adc
movsl
or
mov
sbb
iret
mov
jae
out
push
imul
notb
cs
pop
adc
cltd
in
pushl
mov
hlt
notb
out
xor
dec
adc
ljmp
sub
adc
repz
aad
mov
jns
enter
sbbb
rolb
mov
mov
or
pop
lahf
daa
cltd
mov
add
int3
mov
xchg
jne
push
pop
mov
pop
fnstsw
jbe
ss
jecxz
add
push
fsubr
adc
outsl
std
test
imulb
add
andl
lcall
pop
shll
imul
ret
xchg
cltd
insb
dec
movsl
mov
fsubr
clc
inc
das
sar
sarl
dec
pop
sub
sahf
scas
and
inc
jno
cmpsb
or
mov
imul
or
data16
movsb
push
cmp
rcr
in
xchg
and
fcos
call
loopne
xchg
repnz
xor
ret
sbb
enter
pop
imul
sbb
pop
cmp
hlt
ret
mov
call
xchg
sbb
xchg
mov
rclb
xchg
jg
mov
test
push
popa
xchg
icebp
rcll
mov
xor
ja
jp
mov
scas
mov
inc
mov
ds
rcrb
pusha
rcll
dec
fiadds
add
cmp
insl
lea
xor
or
push
nop
inc
fdivs
dec
lods
inc
call
xchg
xor
cmp
pop
pop
adc
mov
shlb
movsb
push
aad
inc
cmp
jl
pushl
insb
into
sbb
dec
push
inc
pusha
xchg
xchg
jae
ljmp
out
sub
ljmp
jae
mov
dec
pusha
push
cmp
sub
pop
cmc
lcall
xchg
jp
mov
jecxz
aam
mov
pop
mov
int3
bound
pushf
incl
sub
xor
mov
inc
xchg
mov
test
xchg
push
mov
aas
xchg
mov
movsb
lret
mov
xor
add
push
fstpt
sar
dec
mov
mov
daa
ret
xor
sbb
xchg
bound
jmp
cmp
xor
testb
pop
mov
xchg
add
fdivs
das
clc
ljmp
std
sub
pop
iret
fucompp
cmp
mov
jmp
jp
mov
in
sti
cmpsb
flds
mov
and
call
pop
call
push
sti
sub
push
adc
push
jne
cli
jp
inc
pop
mov
mov
dec
xchg
mov
cmc
jns
mov
inc
repz
inc
imull
in
push
std
mov
es
call
pop
or
loope
cltd
add
pop
out
decl
lcall
sbb
cmp
test
xchg
push
cli
ljmp
xchg
leave
or
test
fs
add
cmp
push
xor
int
pusha
cmp
adc
test
in
call
sbb
mov
aad
ret
jl
mov
xor
fs
daa
data16
call
fsub
xor
hlt
pop
mov
pop
stc
negb
cmp
xor
dec
pop
fisttpl
pushf
mov
call
sub
xor
rclb
lods
repz
push
lods
or
push
lods
decl
push
cmp
lock
jmp
fisttps
adc
fimuls
or
enter
decl
push
and
dec
jge
lea
and
ss
mov
dec
add
xchg
sti
jmp
dec
shrl
les
xchg
push
push
xlat
mov
sti
cli
dec
dec
imul
repz
andl
jns
mov
stc
pop
mov
out
sub
lret
fsub
out
lahf
inc
jnp
call
subl
sub
shrb
cmp
scas
fldl
in
decl
inc
jb
lock
jno
push
jp
rolb
sahf
push
cld
dec
sbbl
jns
insl
xor
inc
pushf
push
cmp
mov
sub
jg
and
mov
movsl
stos
cld
push
cwtl
fistpll
xlat
jne
pushl
xchg
outsl
mov
adc
mov
std
jl
pushf
out
mov
lock
ljmp
add
pop
std
or
sbb
or
xchg
or
hlt
dec
pop
insl
orl
ljmp
push
lret
aam
rclb
mov
fidivrl
in
ljmp
push
xor
fildl
movsb
push
scas
pop
aad
stos
hlt
cs
xchg
and
repz
adc
jmp
addl
add
mov
mov
int
sbb
mov
adc
shlb
sbb
mov
mov
jno
sub
xor
xor
sub
add
push
mov
dec
fs
mov
mov
push
cmp
or
ss
sbb
sbb
mov
enter
adc
dec
push
btc
mov
lock
cmp
fiadds
repz
cmpsl
ret
push
lahf
cmpb
pop
jg
test
ljmp
fld
cmpsb
or
fnsave
or
adc
adc
out
dec
mov
dec
pushl
dec
loope
xchg
lods
sarl
cli
push
push
adc
sub
jg
call
sub
xchg
int3
jae
lock
pop
lcall
push
adc
shlb
or
sti
push
fcompl
loop
cmp
add
and
sar
call
jb
push
insl
cltd
cwtl
cld
outsl
push
jecxz
xchg
pop
sarl
or
ja
hlt
pushl
add
push
loopne
shr
mov
pushf
lock
scas
cli
push
fnstsw
push
push
cld
decl
sbb
loop
imulb
inc
testl
aam
pushl
pop
popa
lods
push
scas
arpl
pusha
fs
pop
push
cmp
inc
out
dec
in
call
aaa
mov
and
xchg
add
xor
and
mov
jb
adc
call
aam
sbb
ja
pop
in
ficoms
lret
mov
mov
push
sbb
or
mov
push
adc
sar
jmp
mov
mov
pop
add
fbstp
adc
push
clc
xchg
test
test
cmp
stos
dec
push
mov
jne
add
dec
leave
mov
ja
inc
or
clc
sbb
sub
mov
or
cs
inc
mov
enter
aas
out
roll
or
cmpsb
cli
ret
icebp
jno
jmp
pop
mov
test
iret
test
push
jle
negb
or
pop
cmpl
or
xor
sub
adc
insb
sbb
cmc
incl
shlb
xor
add
add
mov
or
inc
or
loope
lcall
xchg
xor
mov
gs
stc
inc
arpl
outsl
ficompl
out
dec
incl
push
sti
aas
dec
lock
cld
jo
pop
ja
aad
dec
push
repz
ljmp
shrb
ret
push
movsb
sub
outsb
lcall
sti
sbb
mov
hlt
sub
ljmp
loop
pop
xlat
or
mov
jp
cmp
xor
dec
movsb
push
les
test
or
mov
xor
add
cmpsb
out
inc
bound
addr16
in
dec
call
lahf
shlb
fs
pop
push
xor
push
les
loopne
addr16
popf
popa
jb
out
cmp
mov
movsb
jne
imul
pop
pop
ljmp
xchg
dec
mov
inc
in
pop
mov
add
sti
fistps
mov
jmp
insb
decl
mov
ja
sahf
aam
subb
add
in
hlt
stos
jmp
pop
js
shl
xor
mov
lods
cmp
rol
fdivrs
pop
push
jns
sbb
flds
xchg
rorl
jns
mov
jo
cltd
mov
sbb
inc
jmp
add
mov
cmovbe
fidivs
lods
mov
movsb
dec
ljmp
adc
push
jns
arpl
add
and
add
outsl
call
into
jp
movsl
or
sub
cmp
mov
les
stos
jno
clc
decl
sub
adc
lcall
or
adc
pusha
rclb
ljmp
dec
rcrl
js
jmp
ret
jbe
ret
mov
test
push
cltd
and
jnp
inc
clc
call
pop
add
aam
dec
or
mov
int
add
out
ds
mov
stos
inc
jmp
aaa
or
pop
arpl
sub
jns
cmc
incl
pop
les
insb
push
testb
outsb
adc
lahf
xor
sub
test
push
cmp
ja
sahf
adc
xchg
mov
jg
in
pop
push
and
ljmp
int
jmp
mov
push
cmp
pushl
mov
fisubrl
incl
iret
int3
fs
enter
out
cld
je
lods
call
sbb
xor
xchg
lret
mov
pushl
fbstp
pop
test
push
xlat
xchg
adc
inc
jmp
mov
movsb
pop
push
mov
in
leave
pop
outsl
jle
int
adc
cmp
test
cmc
lods
mov
dec
cld
pushl
and
fisubl
mov
outsb
add
pop
imul
xchg
lcall
je
mov
xchg
mov
cmp
loop
jbe
jo
call
or
inc
mov
repz
sahf
fstl
inc
xor
int3
push
lcall
xor
jae
test
and
sbb
pop
insb
fucomp
scas
shll
inc
inc
movsl
stos
dec
or
aam
frstor
mov
and
cmp
sub
sub
mov
pushl
xchg
pusha
mov
fnstcw
mov
out
inc
adc
ljmp
xor
pop
mov
adc
cmp
xchg
sub
xchg
inc
imul
arpl
fnstsw
xchg
movsb
inc
and
jg
push
lret
mov
stc
enter
cmp
ljmp
inc
popf
fsubr
pop
out
pop
xchg
mov
nop
ret
sarb
cmp
mov
jo
inc
lods
es
inc
dec
pop
cli
and
inc
jo
aaa
ljmp
xor
xor
scas
in
sub
in
mov
jmp
gs
inc
setg
pop
in
mov
pop
faddl
sbbb
sbb
outsl
cli
and
and
push
scas
das
js
stc
iret
xchg
ret
xor
and
or
scas
mov
lock
sar
and
mov
mov
ret
pop
mov
sbb
sbb
mov
popa
push
imul
or
add
out
mov
das
lods
js
leave
mov
mov
call
outsb
or
insb
movsl
cmp
loope
or
movsb
add
add
xor
int3
cmp
int3
ret
pop
and
fcmovb
pushf
lds
enter
adc
mov
out
and
pop
mov
fwait
dec
mov
ljmp
xchg
xlat
in
mov
xor
js
cmp
dec
sti
cmpb
shl
cmpsb
bound
ret
mov
into
loop
push
rolb
jmp
hlt
rolb
test
push
xlat
neg
and
mov
xchg
and
stc
jmp
ret
mov
mov
pop
pushf
adc
push
ljmp
pop
sbb
lahf
cwtl
in
cmp
or
clc
and
push
lahf
or
fcos
dec
aas
jnp
fdivrs
pop
insb
test
mov
pop
push
xor
pop
dec
aas
or
int
sbb
movsl
dec
xor
mov
xor
js
call
cmp
mov
rcll
outsb
xor
xchg
sub
sti
lods
out
push
mov
hlt
push
mov
js
std
push
adc
call
test
in
fsubs
out
cli
mov
sbb
cli
not
mov
push
in
push
pop
or
pushl
push
xlat
in
sub
loopne
cld
pushl
cmp
inc
int3
lea
dec
iret
inc
bound
add
sbb
cmc
lcall
ljmp
sbb
cmc
repnz
mov
std
add
icebp
roll
mov
xchg
add
cld
das
or
pushl
movsb
pop
imull
inc
mov
cmp
push
sub
jo
outsl
jge
push
and
jns
das
jg
lret
aad
nop
push
mov
sbb
push
icebp
adc
ds
aas
les
xor
sti
sub
or
mov
xchg
inc
push
dec
xor
imul
mov
into
sub
jno
xchg
mov
lahf
loope
loopne
adc
pushf
cvtdq2ps
or
mov
adc
decl
inc
in
out
adc
mov
mov
xor
scas
sbb
decl
lods
imul
in
out
mov
repz
test
mov
gs
mov
xor
incl
adc
out
jmp
sub
cmc
mov
in
xchg
ljmp
pop
add
mov
lcall
xchg
mov
push
mov
lods
push
sahf
sar
cld
jecxz
sti
mov
mov
incl
push
xchg
lret
sub
mov
insb
and
ds
js
dec
mov
jle
xchg
and
pop
xor
popa
fs
adc
cld
dec
and
sti
push
in
cmp
arpl
movsl
pop
mov
push
adc
pop
sub
decl
mov
add
cmpsb
and
xchg
lcall
dec
ss
clc
mov
std
stos
lret
jg
ljmp
add
adc
popf
mov
incl
cmp
mov
clc
idivl
dec
push
popf
stos
iret
nop
clc
cmp
push
stos
cmp
lcall
loop
mov
in
xlat
ljmp
lock
ljmp
call
jb
sub
or
inc
jnp
xor
mov
cmp
scas
xchg
xchg
rcl
add
lcall
xor
and
out
inc
mov
push
mov
push
dec
test
out
sub
mov
outsb
aaa
dec
xor
mov
dec
push
add
call
mov
sbb
decl
inc
lods
test
push
xchg
fwait
add
cli
jge
je
sarb
sbb
popa
int3
ljmp
int
lahf
xor
xchg
pushl
mov
call
or
and
das
das
dec
std
das
clc
lcall
and
mov
stc
hlt
in
jecxz
outsb
fcmovbe
push
and
jge
rcr
mov
gs
in
sub
mov
and
push
push
incl
test
and
xchg
aaa
adc
inc
in
pop
call
adc
xchg
rolb
lret
or
incl
js
mov
sub
jae
fidivrs
fwait
sbb
mov
stc
inc
and
out
fimuls
sarl
bound
mov
call
push
inc
leave
cmp
sahf
stc
in
jge
and
out
mov
dec
dec
push
fcoms
jmp
sub
jno
pop
sbb
inc
mov
sub
or
adc
adc
fmuls
decl
cmp
inc
pop
mov
adc
jae
insb
test
insb
xor
loop
fcomip
and
adc
in
lods
rcrl
dec
adc
add
incl
lds
cld
orl
inc
ljmp
pop
dec
lahf
mov
arpl
cmp
mov
ljmp
jge
dec
push
bound
xchg
mov
loope
jmp
xchg
xchg
pop
les
push
ds
sub
pushl
ret
push
in
cltd
leave
icebp
das
ds
int
decl
push
loop
fisttpl
arpl
pavgw
mov
out
or
decl
mov
int
mov
lret
jmp
mov
lcall
mov
add
jl
xchg
cmp
sub
mov
repz
call
daa
sub
push
xchg
jg
cwtl
mov
pop
xchg
stos
xchg
sub
xchg
mov
pusha
pushl
cmp
cmpsl
pop
fwait
mov
popa
stc
push
sub
cmp
pop
push
icebp
cmp
lds
mov
scas
cmc
imul
movsb
jp
adc
decl
cmp
fsubl
pop
add
jmp
or
push
in
imul
add
incl
adc
sbb
mov
fsts
add
and
testb
lcall
mov
jecxz
cld
xchg
cmp
mov
mov
xchg
andps
inc
fwait
push
iret
or
and
ljmp
jl
mov
sub
mov
fiadds
in
mov
and
sub
in
decl
pop
push
movsl
and
or
xchg
and
xchg
data16
dec
dec
sub
mov
gs
popf
mov
subl
incl
cmc
cltd
pop
mov
daa
fwait
in
leave
in
pop
sub
mov
push
js
out
cli
sbb
xchg
ljmp
push
push
lret
add
fisttpll
cmp
ljmp
outsl
or
lret
imul
push
imul
add
je
pop
ljmp
dec
clc
outsb
fbstp
dec
jl
cmp
or
loope
fcomip
inc
push
pop
mov
popf
push
sub
add
data16
sar
pop
lret
inc
das
cli
mov
divl
mov
mov
dec
jmp
push
sbb
fidivrl
bound
add
movb
pop
adc
incl
push
out
sub
mul
push
je
mov
push
orb
imull
lea
decl
fbstp
xor
lods
loopne
and
push
pop
xchg
out
adc
or
add
mov
fdivr
fs
push
scas
aas
stos
repz
and
fnstenv
in
insb
loopne
push
inc
inc
icebp
fidivrl
sbbb
in
mov
mov
inc
inc
lods
adc
aad
cmp
mov
jmp
lahf
pop
jge
and
ret
ljmp
sbb
jne
lret
or
pop
es
push
jns
push
lcall
decl
rol
push
mov
sti
clc
and
movsb
idivl
jbe
scas
loopne
jl
mov
lcall
xchg
xchg
sti
fcomps
dec
xor
push
mov
decl
mov
pop
repz
push
scas
jnp
xchg
pop
fucomip
jmp
pop
lcall
push
adc
xlat
mov
test
cmp
inc
jg
mov
imul
inc
mov
negl
mov
ljmp
lahf
sbb
pop
aas
cli
jbe
outsb
lea
cmpsb
jbe
pop
mov
or
push
into
aad
decl
and
out
mov
ja
scas
xor
test
push
popf
lods
inc
and
cwtl
repz
clc
ljmp
mov
outsb
lret
mov
jg
mov
lahf
sub
push
jo
cmpsl
push
stos
pop
xchg
and
outsl
fiadds
lret
pushf
lock
daa
clc
fistpll
jg
test
push
lods
into
lret
xchg
inc
enter
decl
xor
imul
mov
sub
mov
and
jg
insl
sbb
lret
stc
pop
fsubrs
test
sub
popl
ljmp
pop
lcall
push
and
lock
nop
inc
roll
jmp
icebp
mov
stos
shrb
cwtl
mov
jb
pop
or
iret
call
std
repz
stc
stos
mov
inc
out
or
jmp
lcall
ret
push
cmpsb
icebp
clc
jno
call
adc
mov
lds
scas
lea
cmp
arpl
jmp
js
gs
push
adc
sbb
shl
push
xlat
mov
out
aaa
or
or
push
sbb
sarl
xor
das
insb
xor
add
aad
or
jg
arpl
and
dec
add
ljmp
ds
jmp
sbb
dec
ret
jmp
out
in
movsl
add
sub
ret
xchg
xchg
lds
outsl
sbb
ret
cld
and
in
fistpll
mov
mov
inc
adc
push
mov
adc
pushf
rcrb
leave
adc
pop
incl
mov
pop
cltd
mov
fstl
pop
inc
mov
int
mov
pop
xor
cmp
push
mov
mov
or
sbb
lods
jmp
fdivs
cmp
jbe
jo
mov
cs
cld
cmp
push
nop
cmpsl
hlt
xchg
shll
call
std
ljmp
and
lods
sbb
and
sbb
cwtl
je
add
gs
jb
pop
mov
outsb
stos
shl
dec
cli
mov
ds
mov
jmp
jae
aaa
imul
aas
mov
outsl
ljmp
pop
sbb
sbb
mov
test
push
mov
pop
dec
ror
adc
repnz
movsl
repnz
nop
cmp
incl
lcall
ljmp
movsl
insb
out
cs
add
pop
out
sbb
jnp
or
repz
out
sbb
std
stos
in
popf
pop
add
push
cltd
popf
xlat
push
mov
sub
add
fs
add
mov
mov
pop
xchg
outsl
cli
idiv
xlat
shl
lods
lds
cli
test
mov
or
xlat
dec
inc
lcall
std
sbb
pop
pop
ljmp
dec
lods
mov
jg
jnp
testl
stc
decb
sbb
push
dec
dec
shrb
xor
lcall
dec
and
adc
cmp
pop
inc
int3
cltd
lods
sub
ss
test
decl
test
or
cmp
clc
loopne
add
inc
insb
fwait
stc
inc
out
or
mov
fidivrs
pop
mov
lods
sbbb
dec
jo
mov
push
push
sub
stos
add
sbb
outsb
mov
lahf
cmp
fdivl
jg
push
gs
inc
das
sub
call
mov
movsl
loopne
sbb
add
loopne
fs
stc
and
and
mov
jle
addl
bnd
add
sbb
and
jmp
adc
test
loopne
xor
mov
ljmp
push
mov
add
cmp
test
jbe
inc
sbb
cli
nop
lcall
sbb
sub
loop
sbb
nop
and
loop
or
aaa
ret
daa
insl
stos
push
data16
es
fsubrl
push
sub
and
or
popa
test
aaa
push
and
xchg
clc
add
xchg
jl
push
jmp
cmp
cld
call
popa
out
fildl
mov
icebp
fcomip
incl
pop
add
fimuls
cmpl
cmc
jbe
adc
aad
xor
fcompl
sub
call
jmp
mov
jp
jg
jnp
lcall
adc
add
or
mov
test
cltd
xchg
jnp
push
jle
jg
aaa
clc
inc
clc
cld
lcall
add
rclb
idivl
lods
jb
xchg
punpckhwd
or
push
sbb
xor
fcoms
add
ret
call
xor
iret
sbb
cmp
orl
sbb
inc
call
test
jmp
jae
add
imul
std
push
jmp
nop
push
add
lcall
mov
call
decl
pop
sbb
sbb
dec
aam
push
daa
xlat
xor
inc
sar
ljmp
imul
jb
mov
not
xchg
pop
ret
mov
mov
call
pop
dec
mov
push
cmpsb
adc
pop
inc
gs
das
add
xchg
repnz
call
mov
xor
cmp
lods
push
cmp
iret
jno
je
fcoms
cmp
fcmovne
outsl
ret
pushl
scas
push
sahf
daa
lahf
mov
dec
das
or
adc
repz
add
scas
ljmp
ret
gs
decb
or
cmp
pushl
test
pop
sub
pop
and
adc
inc
arpl
pop
adc
lock
stos
sbb
mov
stos
xor
inc
and
pop
or
or
imul
jp
mov
and
inc
bound
mov
into
jg
es
dec
movsl
adc
iret
stos
xchg
push
ret
ljmp
ds
pop
outsl
outsl
decl
cmp
sahf
pop
cmp
sbb
mov
daa
rcl
int3
dec
lcall
pushl
and
cmpsb
cmp
and
negb
xlat
mov
cld
sti
mov
ds
out
nop
jecxz
or
cmp
lahf
pop
push
sbb
xlat
in
out
lahf
insb
popf
xchg
lock
faddl
cmp
pop
out
xchg
lock
inc
mov
mov
cmp
int
cs
incl
xchg
pop
jecxz
fsub
jge
pop
fst
lods
fldt
loop
push
loop
mov
sahf
lret
subb
repz
pushf
jp
xchg
adc
adc
add
mov
adc
sub
push
sbb
and
push
cmc
pushl
pusha
jle
pop
fldt
xor
adc
es
ljmp
xchg
mov
and
cmpsl
rorb
sbb
sbbb
add
jmp
add
cmc
lock
hlt
sahf
pusha
repnz
xchg
test
das
clc
jo
movsb
xchg
gs
mov
mov
ljmp
or
xchg
cmp
sub
pop
adc
aam
ss
call
jecxz
cwtl
aam
cwtl
dec
lods
adc
std
adc
add
mov
xchg
movsb
decl
clc
xlat
jo
ror
mov
xchg
lds
movsb
pop
pop
jns
out
mov
mov
loop
dec
pop
add
decl
add
xchg
das
pop
push
rcrb
mov
call
mov
loopne
add
xor
and
push
jb
es
push
cwtl
int
icebp
mov
inc
add
rclb
and
decl
out
dec
ja
dec
lods
mov
pushf
jne
jl
shll
lret
jp
cmpsb
inc
in
stc
in
sbb
bound
insb
pushf
sahf
push
jmp
adc
or
sbb
cltd
push
sub
cmpb
mov
sahf
xlat
pop
push
decl
lock
jae
addr16
repz
cs
mov
jno
iret
inc
dec
add
add
lcall
dec
loop
dec
and
call
out
cmp
xchg
jle
and
sbb
int3
pop
mov
int3
jmp
pop
pop
inc
jge
xor
push
cld
decl
lock
lret
mov
xchg
mov
cmpsl
mov
and
lods
out
aad
xor
adc
shlb
jg
xchg
imul
and
mov
adc
call
cld
jmp
nop
int
sbb
pop
jmp
jns
mov
pop
mov
nop
pop
push
mov
fldenv
jle
mov
not
push
mov
gs
lcall
jbe
push
jmp
cld
mov
fcomip
int3
push
pop
adcb
or
test
test
fistps
cmpsb
pop
fisttps
jno
cld
xchg
push
fistps
push
sbb
jmp
ds
jecxz
ja
ljmp
or
mov
test
pop
or
stc
pop
inc
cmp
inc
mov
mov
mov
lret
lahf
adc
popa
test
jmp
and
mov
hlt
loop
pop
fisubs
jo
call
pop
and
out
icebp
test
adcb
pop
xchg
adc
fcomip
out
and
cmp
adc
inc
movsl
mov
sti
mov
pop
mov
or
jle
loopne
mov
or
aas
inc
adc
jg
decl
pop
mov
movsl
dec
popf
aad
repz
sub
dec
jle
out
lahf
jbe
ret
mov
insb
lods
mov
lret
fisubs
cmpsl
or
and
push
adc
jbe
mov
fcomps
ljmp
jbe
lcall
or
outsb
xor
adc
movsl
out
mov
cli
cmpsb
loop
pushf
dec
stos
mov
fcoms
inc
decl
and
inc
adc
jmp
lahf
mov
jp
fwait
mov
dec
xlat
ffree
mov
scas
pop
scas
jne
aad
pop
scas
les
xchg
out
pusha
mov
stos
xor
fst
inc
adc
incl
push
xor
out
and
jmp
jp,pt
mov
xor
in
mov
out
je
pop
pop
cmp
test
mov
incl
sub
aas
out
imul
test
jmp
add
xchg
mov
mov
jecxz
cmpsb
pushf
jbe
aas
mov
call
lcall
out
in
inc
insl
fwait
adc
loope
jbe
das
aas
xchg
gs
push
adc
aaa
cld
outsl
ds
out
mov
add
add
fptan
pop
imul
fldt
sub
push
arpl
jae
push
out
mov
sub
pushl
int3
into
xor
out
push
push
cmp
xlat
clc
xchg
cmp
pushl
jmp
xor
lea
or
fs
sub
clc
fcomip
xor
lods
jle
cltd
push
filds
jmp
les
cmp
fistpl
pushl
test
out
repz
xchg
das
jmp
mov
rorb
and
ret
inc
fdivl
outsl
dec
nop
cmpl
sbb
jge
enter
ljmp
pop
dec
jmp
xchg
mov
scas
mov
ja
cli
jmp
into
repz
mov
cli
loop
adc
jge
test
cmp
mov
sub
cmp
jge
clc
out
xor
mov
sbb
out
movsb
outsb
rclb
mov
push
insl
iret
out
sub
ficomps
gs
xor
jae
pop
push
cmp
stos
call
std
dec
dec
and
sbb
xchg
cmp
sbb
pop
insb
adc
mov
sbb
inc
cld
lcall
repnz
dec
mov
lcall
sbb
push
sub
mov
std
stc
andb
outsl
test
jb
jne
in
lods
pop
jle
cltd
loope
jmp
mov
sbb
pop
jecxz
sbb
je
hlt
mov
cltd
mov
dec
icebp
jnp
ljmp
nop
push
cmp
adc
push
xor
xchg
cmpsb
rorb
add
push
add
maxps
es
add
loope
sub
roll
cs
jne
out
decl
nop
sbb
decl
rorb
sbb
xchg
pop
push
fstpl
add
inc
dec
sbb
push
addl
lcall
pop
arpl
testb
xor
mov
jg
pop
into
mov
fdivs
mov
lods
push
dec
sbb
aam
inc
int
aas
mov
andb
incl
out
sbb
inc
inc
sbbl
mov
mov
js
push
mov
pop
or
pushl
out
pop
jl
push
call
fmull
incl
xchg
jo
fdivrs
movsb
outsb
ja
mov
adc
ljmp
out
mov
mov
imul
cmp
jg
adc
aaa
inc
lods
cld
int3
adc
push
xor
xchg
lret
jmp
js
mov
push
lcall
rcrb
cmp
mov
sub
pop
or
call
or
shl
jae
pop
xor
into
stc
lods
and
loopne
and
jno
lret
and
xor
fnstcw
adc
or
mov
incl
cld
cmpb
push
sub
xor
xchg
sub
into
lods
add
mov
daa
or
push
jno
push
jns
sub
mov
sbb
cmp
and
mov
mov
ss
call
pop
add
jno
shlb
std
ds
mov
aaa
inc
adc
outsb
jnp
pop
fdivrp
push
ficoms
fstps
insb
decl
xor
add
inc
lret
sub
test
and
cmp
xchg
lcall
je
mov
movsb
inc
inc
mov
in
push
xlat
push
push
insb
je
dec
test
or
jmp
dec
fnstsw
jmp
jbe
lret
lret
adc
icebp
dec
sub
xlat
iret
shll
call
pop
pop
fdivrs
inc
jb
add
pop
imul
popa
std
lcall
test
mov
jmp
add
mov
out
pop
ret
ffree
push
xchg
dec
xchg
fidivrl
notb
cs
adc
and
decl
mov
sub
sub
outsl
lcall
out
xor
cld
push
jl
jnp
mov
popf
push
test
adc
test
stc
fcompl
call
sbb
ret
fisttpl
mov
fsubrs
shlb
test
jo
call
xor
lods
push
ret
xchg
dec
mov
dec
inc
lahf
jg
fidivrs
clc
cmp
fcoml
das
ss
cmp
rcr
stos
fldl
mov
test
mov
pop
pop
adc
shlb
mov
adc
mov
mov
mov
ficoms
inc
add
icebp
fbstp
mov
mov
push
je
jb
jmp
lods
pop
mov
filds
pop
dec
mov
test
dec
and
cs
pusha
fwait
or
ret
cs
inc
mov
aaa
add
out
cmp
ret
sbb
rcrl
repnz
xor
or
jmp
and
rcll
fsubrl
movsl
inc
jg
aad
jmp
adc
and
fisubrl
scas
inc
mov
pushl
bound
pop
lods
lea
sbb
mov
movsb
inc
sub
lds
xor
shlb
push
outsl
lock
cmp
cmp
clc
mov
insb
ljmp
sbb
pushf
mov
int3
daa
dec
in
lods
ljmp
pop
push
lcall
imull
test
cmp
inc
pushf
xchg
repz
mov
xor
adc
int3
in
jp
push
pop
jnp,pn
dec
and
sbb
dec
mov
mov
das
xchg
cmpsl
insl
mov
cmp
dec
fimull
lret
mov
xlat
jge
nop
inc
cmp
orb
adc
or
hlt
decl
gs
lods
ret
xchg
stos
push
jecxz
mov
mov
loopne
xchg
pushf
adcb
lds
loopne
popf
mov
repnz
fwait
adc
ljmp
cmp
adc
mov
mov
aam
fbstp
pop
aad
rcrl
add
dec
mov
jecxz
cmp
call
pop
in
and
jl
fistpl
jbe
addr16
cwtl
lahf
jg
fdivp
xchg
incl
shll
rcrb
dec
jg
inc
int
testb
sub
popf
add
in
incl
cs
imul
sarl
or
add
pushl
adc
enter
dec
enter
mov
jp
lcall
aam
pushf
cwtl
mov
sbb
or
push
ljmp
mov
jp
out
cmp
lahf
pop
cltd
sar
lcall
daa
out
mov
insl
pop
mov
xchg
outsb
sub
push
mov
popf
js
pop
ljmp
lret
and
push
aas
jno
fmull
lods
mov
pop
dec
dec
adc
push
adc
dec
into
popa
and
add
sbb
adc
jae
sub
fsubrs
mov
add
jmp
daa
inc
mov
outsl
add
icebp
mov
repz
incl
movsb
stc
std
mov
cmc
jnp
cltd
stos
cmp
inc
mov
cmovae
test
ljmp
dec
xor
cmc
orl
popf
xchg
pushf
inc
sti
shr
ljmp
rorl
int
lcall
leave
movsb
fldt
inc
stos
dec
aad
lret
daa
test
mov
push
cmovle
dec
push
mov
cli
out
addr16
sbb
pop
or
test
cmp
test
jnp
pop
test
inc
in
jmp
mov
repz
hlt
jb
sbb
jg
or
dec
pop
or
les
inc
cmp
xor
clc
mov
mov
addr16
sbbl
jl
xchg
cmp
enter
xchg
int
ss
or
out
adc
insl
insb
push
add
shll
adc
xor
scas
or
sbbb
jmp
insl
repz
test
stos
xchg
mov
scas
push
data16
dec
and
xchg
lock
out
push
push
ret
sbb
scas
add
dec
das
xorl
jb
pop
add
sbbl
sbb
call
jns
mov
jg
cmpsb
cmc
gs
adc
inc
or
loop
mov
or
fs
nop
push
jmp
pop
cwtl
mov
push
or
jae
xchg
and
dec
cmpsl
ret
mov
adc
and
xchg
inc
incl
xchg
pop
subb
pop
jecxz
push
out
sub
mov
add
xor
lcall
aad
inc
adc
inc
push
cmp
mov
jl
ja
mov
in
adc
call
push
aad
or
add
rol
add
xchg
adcl
inc
and
idiv
lcall
push
xor
and
ss
xor
xor
sbb
mov
cmp
popf
xchg
sbb
jmp
mov
ror
xor
mov
pop
adcl
xor
cmp
add
ljmp
xor
pop
and
lret
aam
inc
dec
in
fdivl
imul
mov
aad
cmpsb
stos
insl
sarl
lods
cli
xor
sub
call
popa
out
push
ss
mov
inc
xchg
sti
mov
std
imul
add
mov
fisttps
pop
cmp
mov
fimull
dec
dec
inc
push
fistpl
inc
fyl2x
mov
idiv
shl
sahf
test
enter
out
insb
sbb
incl
jae
rol
rorl
insl
sbb
add
mov
lds
lea
ljmp
fadds
loope
mov
ja
sar
sbb
in
dec
gs
cwtl
lcall
xor
imul
xchg
push
sub
mov
fwait
sbb
pop
xchg
in
sub
dec
xor
in
pop
add
shl
cwtl
mov
fldenv
fwait
aas
in
rcll
mov
add
in
fstpl
lret
push
push
repz
jl
cltd
mov
ljmp
lret
sub
arpl
shlb
decl
pop
not
push
ror
jp
and
xchg
int
fidivl
rorl
add
incl
sub
loope
nop
scas
push
nop
test
loopne
les
dec
inc
popa
dec
jle
and
push
test
es
xlat
loop
inc
xchg
in
xchg
mov
push
aam
cmp
sbb
xchg
pop
mov
pushl
mov
cmp
jmp
or
jmp
cmp
xchg
insl
data16
cmp
cmp
pop
movaps
test
ljmp
hlt
mov
push
ljmp
jo
xor
and
jmp
xchg
adc
dec
push
push
les
test
repnz
call
dec
jl
mov
idivl
cmpsb
mov
stos
pop
add
cmp
mov
test
jmp
cmp
mov
sti
test
decl
ljmp
mov
inc
add
sbb
movsl
out
mov
movb
cli
lcall
pop
into
hlt
mov
adc
insl
mov
sbbb
push
pusha
pop
inc
stos
jns
lock
sbb
jg
and
mov
xchg
push
mov
fisttps
push
call
push
xchg
bound
lret
dec
icebp
push
es
out
enter
loope
push
mov
sub
fcmovnu
pop
push
mov
jp
daa
jb
sbb
pop
in
rclb
incl
inc
pushf
xor
sbb
xor
fnstenv
mov
ljmp
mov
push
push
sbb
cld
icebp
ss
repz
lret
inc
adc
mov
mov
xor
pushl
loop
mov
cld
or
adc
stc
jbe
sub
mov
ljmp
rcll
fadd
insl
jno
pop
mov
pop
cmp
lcall
sahf
xchg
jae
cmp
mov
in
inc
cwtl
xchg
scas
and
ret
mov
jmp
push
or
sub
enter
inc
mov
cli
subl
mov
cmc
or
mov
jecxz
cltd
push
loope
leave
inc
fbld
ljmp
cltd
cmp
gs
mov
xchg
in
repnz
push
inc
hlt
mov
dec
adc
jmp
xor
inc
pusha
fists
scas
pop
mov
js
mov
rcll
inc
xor
movsb
xchg
ljmp
es
movsb
gs
sub
aad
scas
jo
xor
pusha
sbb
xchg
cli
pop
cmove
cmp
loop
ret
and
add
mov
enter
cmp
incl
inc
sub
cmp
sub
ljmp
sbb
call
xchg
fldcw
push
ja
fsubl
dec
xor
adc
jmp
mov
adc
mov
js
mov
outsl
incl
sub
jne
sub
outsb
push
mov
mull
xor
test
call
adc
push
mov
mov
sub
jle
cmp
stc
cmp
mov
mov
jbe
sbb
pushl
cltd
sbb
add
lahf
fcoms
aad
xorb
repnz
scas
in
js
push
ljmp
mov
dec
pop
mov
sarl
mov
sahf
insl
inc
adc
outsb
shlb
xor
das
scas
push
sti
leave
js
fcoms
sbb
mov
sbb
xchg
std
lcall
push
sbb
dec
pushl
js
rcr
in
lods
dec
and
mov
sbb
ret
pop
andb
clc
rol
push
push
cmp
ret
lods
rcrb
mov
cmp
out
daa
xlat
outsl
clc
mov
cmpsl
aas
mov
and
out
sub
cmp
incl
mov
insl
mov
fstps
xchg
xor
inc
inc
sub
imul
jle
insl
pop
mov
lcall
adc
pop
xchg
das
or
jo
dec
push
xor
pop
jo
call
out
clc
add
repnz
push
cmp
push
data16
sbb
call
clc
mov
aad
jno
sbb
jecxz
xor
inc
mov
lret
add
or
jmp
test
push
inc
sti
push
dec
mov
push
sub
pop
inc
pushf
xor
add
mov
leave
mov
clc
call
xchg
jns
or
inc
jg
dec
xor
and
cwtl
mov
or
out
xor
add
das
frstor
rcrl
jne
mov
filds
or
jg
das
sub
cmp
orl
ljmp
insb
fdivr
gs
fmul
add
fistpl
fcoms
pop
jmp
add
call
cmp
fldl
cwtl
mov
dec
and
rcrb
ljmp
ljmp
enter
pop
jns
movsb
jno
jmp
jmp
ljmp
shl
popa
aas
aas
aam
movsl
or
mov
push
pop
or
jnp
pushl
loop
jnp
sahf
scas
fisubrs
bound
cmp
sbb
jmp
adc
lret
jo
shlb
divb
aad
movsl
pop
jns
out
fidivrl
mov
lcall
inc
mov
jmp
cs
imul
mov
hlt
mov
jmp
call
std
fdivrs
lods
addr16
arpl
pop
mov
bound
fsubp
push
popf
aam
lcall
jbe
ja
sub
inc
pop
mov
cmpsb
pause
fsubs
xor
xchg
xchg
nop
cmp
call
jp
or
and
or
dec
iret
cltd
mov
in
jecxz
ljmp
mov
sbb
sub
and
mov
mov
sbb
jmp
jne
mov
adc
cmp
in
js
cmp
jmp
pop
mov
xor
sub
mov
jmp
cvtps2pi
lods
cli
pop
popf
xchg
test
ljmp
std
cmp
mov
mov
call
in
xchg
jle
lcall
test
sahf
nop
packuswb
xchg
add
xchg
inc
outsl
mov
push
and
js
inc
mov
pusha
mov
mov
xor
mov
ljmp
fisttps
lcall
mov
ret
cwtl
mulb
mov
imul
pop
aaa
incl
mov
leave
xchg
xor
xor
scas
mov
and
aaa
std
push
aad
cmpb
incl
sbb
cmp
gs
xchg
dec
pop
scas
pusha
pop
lock
out
push
add
dec
dec
in
movl
mov
bnd
jg
cmp
int3
and
push
addl
sarb
fucom
inc
sahf
arpl
add
fs
sahf
pop
jae
mov
push
or
pusha
loopne
rorl
and
insl
sbb
aas
sahf
sbb
or
pushl
lock
mov
cmp
jle
ret
jp
fnstcw
ror
mov
xchg
loope
adcb
loop
pop
cmp
mov
push
outsb
xchg
push
mov
cs
lock
sub
pop
dec
dec
movsb
ja
mov
mov
jmp
mov
inc
xchg
cmc
stos
push
fldcw
pop
jmp
clc
pushf
in
adc
in
xchg
mov
les
mov
insl
pop
push
xchg
pop
sbb
lret
push
shlb
pop
loopne
pushl
cld
call
in
jns
dec
out
mov
mov
xor
push
test
clc
decl
xorl
popf
data16
adc
add
xchg
or
jecxz
call
loopne
aam
mov
andl
mov
aas
fs
ljmp
jns
adc
mov
jl
fsubrs
xor
gs
mov
stc
aas
cmp
jb
test
lcall
clc
rcrl
fdivrs
inc
xor
pushl
inc
in
lods
sti
dec
mov
test
push
std
fsubs
loopne
cmp
arpl
adc
sbb
out
into
pop
cwtl
clc
decl
lds
je
fstp
pop
add
jmp
xchg
mov
pusha
add
push
mov
sbb
jno
inc
push
test
jmp
loope
pusha
clc
mov
adc
xor
mov
cmpsl
jl
inc
and
decl
dec
xchg
clc
outsl
jmp
cmpsb
in
mov
mov
dec
push
movsl
push
sub
in
addr16
fdiv
sub
xor
push
sub
pop
sbb
pop
dec
aad
dec
test
mov
popf
pop
lea
jp
nop
jl
es
or
fcomip
and
jbe
out
cmp
lcall
leave
or
push
cmpsl
js
mov
std
inc
sub
push
add
dec
in
xor
fnsave
push
dec
sbb
cmp
push
xor
sub
pushl
push
dec
incl
arpl
jmp
or
cmp
icebp
in
mov
int3
stos
ss
sbb
sub
je
fisubrl
ret
lahf
pop
pushf
loopne
ljmp
ja
scas
js
jno
xor
lods
arpl
out
inc
in
and
sbbb
jo
jne
pop
sub
jb
cli
inc
dec
xor
mov
test
adc
std
outsl
out
xorb
jmp
les
fidivs
mov
std
in
lods
rorl
cmpl
repnz
sub
aad
mov
ds
push
out
shll
outsl
inc
push
lea
ja
lcall
stos
add
dec
adc
cltd
cmp
push
cmpsb
ja
pop
inc
jae
push
andl
les
les
mov
or
pop
js
add
clc
rclb
cmp
xor
and
mov
outsl
jnp
adc
rol
sahf
inc
and
mov
pop
cmp
lahf
das
xor
lea
xchg
push
jl
mov
test
decl
pop
notl
leave
in
adc
ja
lock
cmp
push
push
xchg
pop
inc
shrl
es
cld
mov
fnstenv
xchg
fidivs
in
rcrb
les
mov
lahf
xor
adcl
and
adc
out
ja
xchg
test
pop
inc
fldenv
mov
fimuls
jnp
or
imul
lods
add
sti
mov
or
pushf
arpl
mov
mov
enter
call
jecxz
lcall
adc
push
xor
cwtl
repnz
ficompl
mov
ds
sbb
add
lods
xchg
jmp
push
mov
cmp
clc
incl
loopne
or
rorl
enter
pop
mov
sub
rcrb
add
int3
outsb
push
ljmp
hlt
std
imul
and
fnsave
xor
jnp
mov
push
notb
pusha
rol
fstpl
cld
pop
adc
out
add
push
lahf
int3
lahf
sbb
mov
lea
addr16
lret
or
stos
pop
jae
lcall
jmp
lods
push
fcmovbe
pop
fidivs
push
mov
dec
gs
je
inc
hlt
daa
mov
lahf
push
pop
out
mov
cmpsl
cmpsl
ret
les
repz
decb
shlb
aad
dec
std
cli
pusha
mov
xorl
dec
xchg
jg
xchg
fnstcw
add
jmp
and
sbb
cld
jmp
test
lret
mov
xchg
xchg
xor
inc
or
aad
int
in
sbb
bnd
fwait
add
push
inc
in
dec
fldt
arpl
dec
test
jns
push
push
lods
adc
sbb
mov
call
mov
imul
call
sbb
add
or
cmp
movsb
mov
mov
dec
lret
adc
mov
jo
aaa
add
xor
std
decl
pop
int
xchg
inc
jns
js
jne
inc
xchg
mov
cmp
fcompl
ljmp
pop
and
popa
fsubp
cwtl
and
ficoms
ljmp
push
sub
jbe
cs
jae
shll
aas
sub
sub
aad
test
ljmp
lods
in
in
cld
lea
and
lcall
fildl
insb
adc
cmpb
mov
jg
call
jae
gs
jp
into
cmp
imul
and
mov
insb
add
call
fadd
jg
mov
aaa
pop
into
inc
push
fnstenv
xchg
xor
xchg
addr16
xor
mov
ljmp
test
pop
jnp
sbb
cwtl
int3
adcb
xchg
xor
xchg
push
mov
sbb
mov
inc
mov
cmpsl
lret
fidivl
cmpsl
mov
jne
inc
nop
fwait
mov
popf
mov
and
and
pop
scas
push
lods
and
mov
xchg
add
lcall
jns
or
js
dec
sub
popa
into
adc
gs
out
xchg
mov
lcall
filds
pop
jne
dec
fsub
clc
sub
fstpt
out
hlt
popa
sbb
mov
scas
dec
push
pop
inc
test
jge
and
out
movsb
stos
iret
xchg
dec
adc
mov
incl
jmp
push
push
push
insb
stos
and
jg
movsb
dec
mov
push
push
aam
decl
inc
pushl
jns
out
adc
sar
jge
imul
andb
pop
test
xchg
jae
xchg
jle
mov
push
xchg
mov
fnstcw
stos
clc
xor
jmp
clc
out
cmp
jb
fldenv
mov
adc
aad
add
mov
jle
sar
loope
pop
das
das
fistpl
lods
mov
cli
mov
inc
push
das
adcl
sbb
popl
fwait
mov
cld
lcall
icebp
mov
push
pop
scas
sub
fdivrp
jg
push
dec
jbe
loopne
mov
and
sbb
xchg
mov
in
int
jno
pop
stos
pop
jb
imul
fnsave
jns
dec
aas
outsb
and
decl
repnz
push
movsb
sbb
or
add
adc
ljmp
mov
in
stc
cmp
sub
pop
and
xchg
and
dec
std
lahf
andl
mov
push
out
aam
lahf
sub
pop
movsb
fiadds
mov
pop
decl
decl
mov
fimuls
test
xchg
mov
pop
ficomps
mov
push
dec
leave
cmc
cmpsb
decl
les
pop
pushf
mov
dec
popf
push
mov
pop
pop
sahf
jmp
sub
sub
dec
xchg
dec
out
push
movsl
inc
cmp
mov
lret
insb
subl
das
sar
add
fdivrs
xchg
jmp
mov
iret
ds
mov
sub
out
into
jp
mov
mov
xor
xor
cs
into
daa
push
xor
pop
enter
incl
cmp
jge
push
outsb
inc
pop
mov
mov
popf
mov
jb
sbb
mov
sbb
aad
clc
mov
int3
xlat
fucomi
movsb
pushf
scas
cmpsl
jmp
xchg
fmuls
sbb
call
mov
test
xchg
mov
fwait
sub
xchg
decl
cmp
testb
mov
ret
pop
sub
xorb
xchg
les
in
lods
add
mov
stc
adc
incl
ja
jnp
xchg
repnz
cmp
jno
mov
cltd
cli
push
mov
push
in
mov
pop
and
or
mov
fisubs
mov
movsb
sub
xchg
insb
cmp
inc
sub
fcomi
lcall
xor
or
divb
testl
stos
cmpsb
cmp
lcall
dec
sub
mov
movsb
dec
pop
idivb
insb
adc
sar
pushl
shrb
cmpsl
mov
das
push
out
sub
mov
mov
jle
imul
pushl
mov
popf
mov
test
dec
dec
fistl
xchg
decl
mov
pcmpeqb
pop
inc
stos
notb
data16
push
nop
and
lcall
ds
fsubl
xor
fidivrs
push
sbb
push
or
dec
mov
pop
or
outsl
les
xor
inc
jecxz
pop
xchg
cmp
push
add
pop
sbb
and
jge
in
sbb
mov
dec
mov
loopne
enter
jg
data16
stos
mov
mov
sub
jo
lcall
popa
movsb
je
mov
dec
xor
pop
jg
jmp
dec
fisttpl
arpl
sahf
lods
fcmovnu
cld
push
out
xchg
incl
dec
mov
out
mov
ds
out
dec
jae
iret
cmp
dec
movsb
sar
mov
cmp
push
and
movsl
cmp
dec
push
pop
xorb
pushl
daa
cmpsl
insb
xchg
pushl
jecxz
adc
and
rcll
jne
xor
call
test
std
mov
loopne
cmp
and
dec
sub
mov
mov
pop
sar
call
xchg
mov
pmaxub
pop
push
jb
sub
rorl
ljmp
or
dec
in
cwtl
cmp
shlb
jp
sub
pop
jle
in
mov
sub
jg
decl
xchg
sub
enter
add
xchg
lcall
jle
pop
xor
or
push
cld
push
nop
ljmp
cmpsl
out
adc
jne
mov
adc
mov
add
aad
add
into
ds
cmp
push
and
mov
call
jp
jp
xchg
mov
in
inc
scas
and
cmp
popf
stos
xchg
clc
pop
fdivr
lcall
cmp
xchg
mov
mov
dec
inc
jle
shll
sahf
movsb
xor
adc
leave
cmc
mov
jl
cmpsl
add
push
pop
lcall
jle
inc
and
fistpll
inc
rclb
loope
test
push
sbb
sub
xlat
sbb
loope
repnz
ljmp
outsb
mov
cltd
pop
jo
mov
ret
pop
xchg
mov
push
pop
clc
pop
lock
mov
dec
add
and
dec
ss
push
add
inc
shlb
arpl
cmp
outsb
push
fdivr
shr
and
xchg
or
dec
sbb
mov
xchg
mov
sbb
call
xchg
shrb
mov
cmp
out
or
inc
ja
clc
cmpsb
decl
sub
addb
fcmovb
sub
jmp
bswap
inc
sbb
inc
cltd
cmp
or
or
cld
mov
je
pop
push
add
mov
dec
add
inc
push
push
inc
imul
repnz
sub
dec
add
inc
or
out
scas
movsb
les
or
pushf
loop
into
into
cmp
mov
add
adc
dec
cmp
ljmp
push
sub
lahf
jo
test
shrl
ffreep
inc
pop
jecxz
pop
loope
clc
add
cmp
xchg
inc
xorb
lds
lcall
mov
xchg
mov
test
shlb
orb
iret
jno
out
or
inc
clc
incl
sbb
aad
mov
ja
inc
stc
lret
shll
decl
sbb
push
loope
bound
mov
pushf
mov
ljmp
inc
pusha
add
dec
imul
enter
sbb
scas
xchg
inc
cld
decl
lock
inc
push
fsts
add
cs
call
push
int
jbe
pop
das
mov
adc
sbb
lods
popa
leave
mov
mov
call
xchg
mulb
outsl
sub
in
inc
sbb
popa
pop
push
mov
stc
stos
xchg
std
inc
pushl
push
mov
fimull
push
mov
mov
or
inc
ret
mov
ss
icebp
dec
fldl
fstpt
movsb
gs
mov
mov
in
das
lock
or
data16
pop
enter
inc
dec
pushf
or
in
mov
sbb
add
cwtl
call
or
pop
scas
test
sub
mov
sub
pop
scas
xchg
mov
insl
shrl
sub
shlb
inc
outsb
or
push
lods
lret
mov
or
bnd
shrb
lcall
cltd
add
into
mov
mov
jp
mov
lcall
jle
imul
jg
adc
je
pushf
fdiv
push
adc
mov
jnp
lcall
dec
cmp
push
pushf
and
insl
mov
notb
fldcw
pop
popf
outsl
aad
inc
pop
cwtl
clc
lcall
xchg
xchg
or
dec
push
je
dec
push
call
into
nop
test
daa
inc
movsl
sub
cmc
mov
sahf
mov
xchg
js
jg
nop
rorl
lcall
cmc
pop
xchg
leave
sahf
lcallw
inc
incl
dec
sahf
jmp
add
cltd
lods
mov
add
mulb
xor
dec
arpl
inc
add
stos
int
jecxz
push
cmc
mov
jae
push
jns
pop
test
loope
inc
or
mov
sub
mov
aad
out
or
push
cltd
insl
dec
add
dec
xchg
scas
dec
cmc
clc
out
push
sbb
lret
rcll
lea
jns
cwtl
icebp
out
and
mov
xchg
mov
cmp
loopne
test
push
cld
pop
mov
cs
pop
iret
outsl
mov
or
lcall
ss
mov
dec
call
xchg
les
jle
daa
sub
adc
ljmp
mov
ss
repnz
jmp
push
or
cmp
mov
fldl
arpl
test
sub
xchg
enter
jno
push
add
jmp
adc
pop
out
into
out
dec
jge
xor
adcb
xor
sbb
adc
call
lods
stos
xor
sbb
pop
leave
adc
mov
popf
loop
test
ret
mov
pop
jo
fwait
std
in
mov
popl
lcall
push
cld
inc
xlat
sbb
or
clc
jns
mov
cmp
enter
fs
inc
mov
movsb
push
popf
and
inc
jns
and
decl
in
jns
mov
jl
sbb
aad
lret
adc
mov
jb
jp
jle
shl
in
sbb
shlb
out
shrb
mov
pop
out
outsb
das
dec
imul
fbld
adc
aam
sti
cmpsl
adc
outsl
cli
dec
xchg
call
call
cmc
lret
mov
push
add
pop
ljmp
lcall
or
iret
jne
or
mov
sti
push
adc
mov
xlat
pop
xor
xchg
mov
ds
lret
test
fwait
ljmp
dec
test
gs
pop
mov
pop
xlat
adcb
cmc
mov
xchg
popa
scas
mov
and
mov
jmp
dec
ja
cmp
mov
fisttpll
loop
out
sbb
and
mov
aas
jg
mov
mov
sub
inc
movsl
gs
test
fs
mov
sti
iret
xor
xor
push
insl
cmp
es
outsb
cli
add
mov
fiadds
fisttpll
inc
loop
xlat
xchg
inc
mov
lods
cmp
decl
pop
sub
and
out
les
orl
add
add
iret
add
jl
push
fs
cld
adc
cmp
mov
lcall
inc
and
push
ja
pop
jne
sub
mov
into
push
mov
adc
add
lock
movsb
and
les
sub
fsubl
ljmp
incl
dec
jns
pop
pop
in
outsl
scas
js
inc
lods
idivl
out
clc
or
xchg
sbb
or
icebp
popf
push
dec
fiaddl
xchg
jmp
scas
mov
mov
add
fadds
lock
ljmp
int
cltd
enter
mov
mov
mov
lret
push
mov
jmp
jb
jl
dec
sub
lahf
mov
dec
cs
xchg
pop
subl
sbb
stc
fidivrl
rclb
mov
xor
cli
add
test
push
mov
cwtl
bound
incl
mov
jae
mov
mov
add
mov
aas
sti
sar
jl
and
mull
out
pop
iret
xchg
pusha
cmpsl
jecxz
fdivr
out
jecxz
lods
jmp
add
loopne
mov
aam
insl
les
adc
incl
cmp
xchg
pop
mov
in
add
cmp
fildll
cld
jns
movsl
xchg
xorl
mov
add
adc
and
std
ljmp
nop
push
mov
popf
std
lds
shrb
pop
add
xchg
adc
mov
js
mov
mov
pop
nop
test
out
js
mov
clc
adc
add
pop
std
faddl
dec
lret
xchg
xchg
test
filds
loope
lahf
mov
pop
or
push
jmp
lcall
adc
test
pop
fadds
push
adcb
ljmp
sbb
sub
jnp
pop
fst
xor
rorb
lods
xchg
sbb
push
leave
mov
mov
idivb
cmpsl
stos
xchg
mov
out
lea
mov
ret
add
pushf
mov
jl
xchg
xor
push
inc
xchg
js
mov
mov
add
and
int3
xor
jmp
jmp
nop
test
push
jmp
and
xor
movb
fistl
mov
scas
je
add
dec
nop
cmp
sub
outsb
out
jl
lock
or
int
ljmp
push
cmp
mov
pop
pop
icebp
arpl
into
mov
je
sbb
decl
jecxz
popa
inc
fs
jp
gs
ret
push
fidivrs
xchg
incb
xorl
jo
inc
push
lahf
ljmp
cmpsb
sbb
xor
fisubrs
adc
pop
cmp
xchg
ret
xor
lcall
mov
movsl
repz
add
movsl
or
add
div
mov
daa
lods
lcall
mov
mov
mov
add
lods
and
out
add
adc
fcmovbe
push
jmp
test
jmp
xorl
mov
inc
shll
fwait
jbe
aam
iret
std
in
incl
popf
xor
add
psrlw
mov
test
pop
not
lcall
mov
jle
push
ljmp
out
push
stos
fxch
jmp
cltd
cmp
insb
push
and
xchg
and
insl
std
push
out
int3
ficoms
je
push
cltd
lds
movsb
mov
push
lcall
mov
jmp
test
lret
ret
scas
shrl
push
shr
jae
lcall
pop
test
cld
inc
push
inc
fldt
sti
clc
lock
jecxz
insl
pop
xchg
mov
pop
xchg
sub
mov
add
mov
dec
sahf
xchg
mov
ljmp
mov
movsl
or
fs
and
sbb
dec
inc
ja
mov
pushl
ljmp
lea
cs
hlt
iret
dec
fcomp
pop
cmp
pop
pop
clc
aam
repnz
movl
dec
rol
cmp
mov
or
add
in
addr16
call
push
and
adc
dec
mov
sbb
mov
dec
mov
pop
popl
dec
mov
inc
jns
fcomps
lods
out
push
cmp
out
ret
sbb
or
xchg
push
push
inc
jp
dec
xchg
or
dec
push
xlat
mov
shlb
enter
call
push
imul
test
dec
xchg
pop
aas
push
jge
out
mov
in
mov
or
clc
fsubr
decl
push
inc
mov
mov
repz
icebp
ss
fstpl
ds
cmpsb
insb
outsl
lcall
mov
pop
xchg
sbbb
fdivrl
divb
sub
mov
orl
aaa
dec
push
or
call
je
incl
scas
icebp
lahf
bound
xchg
fld
int
push
fisubrs
jmp
lcall
and
sbb
pushl
nop
icebp
mov
push
adc
lods
imul
xchg
test
xor
fcomip
sub
or
aaa
push
rcll
xchg
cmp
adc
pushl
outsl
mov
xor
mov
arpl
in
cmp
sub
add
push
aad
mov
sbb
or
mov
call
mov
iret
cmp
mov
mov
mov
pop
ss
fdiv
sbb
mov
addr16
cmp
xchg
imul
push
test
pusha
pop
cli
in
ret
push
inc
fisttps
xchg
mov
fcoml
ljmp
loope
sar
jo
adc
loopne
data16
ljmp
addr16
icebp
aaa
push
mov
divl
cmp
xchg
aas
imul
and
xor
xchg
addr16
cli
incl
cmp
jmp
call
in
cwtl
ds
and
dec
ss
mov
xchg
in
mov
lahf
pop
lcall
xchg
popa
out
pop
jno
mov
in
lret
pop
imulb
fbld
dec
jle
fs
adc
outsb
cmp
xor
mov
sub
push
incl
inc
cmpsb
sub
fiadds
loopne
inc
int
or
mov
sub
pop
or
incl
insb
cli
xor
roll
xchg
push
mov
push
dec
stos
ds
mov
mov
mov
lock
add
push
push
scas
xchg
ret
adc
repz
and
or
cmp
sub
stos
aas
mov
push
jmp
lcall
aas
scas
jmp
enter
sbbl
out
pop
mov
loope
decl
pop
repnz
in
xchg
mov
jmp
sbb
sub
xchg
leave
es
std
decl
data16
and
loop
and
sub
inc
insb
cld
out
loope
incl
fistps
jbe
icebp
mov
and
stos
sbb
mov
inc
iret
cmpsb
jae
xor
cld
jmp
dec
xchg
sbb
shll
add
xlat
idiv
dec
scas
jg
lahf
int3
xchg
outsb
inc
and
std
jmp
dec
or
inc
sbb
xlat
inc
jnp
es
lods
push
lock
in
dec
fisttpl
pop
in
pushl
lcall
xchg
loope
loope
movsl
test
in
push
out
sub
jg
sub
mov
lock
sbb
push
pushl
pop
out
test
jnp
scas
pop
in
rcrb
jmp
repz
sbb
cli
ljmp
sub
sub
lods
daa
in
add
xlat
or
lcall
push
outsb
cmp
rcr
mov
or
mov
data16
pusha
addl
jg
add
dec
jne
xor
cmpsb
test
push
pop
mov
jmp
dec
mov
cltd
sub
mov
and
and
xchg
aad
pop
or
lcall
cli
jg
loopne
push
fs
enter
decl
xlat
pop
and
aas
jae
daa
aad
add
mov
sub
jle
push
dec
mov
mov
sbb
lea
inc
loopne
cli
data16
add
mov
dec
jno
push
pusha
inc
cltd
xchg
frstor
stc
pushf
lcall
pop
mov
int3
je
pop
and
pushf
xor
les
jp
mov
jg
jbe
sub
ljmp
fwait
xchg
outsl
dec
mov
sar
or
andb
sahf
movsl
gs
push
mov
pushl
mov
dec
sub
leave
cmp
inc
fwait
push
dec
pop
bound
pop
push
mov
push
mov
pushl
je
dec
or
cmp
push
add
mov
push
mov
jl
xchg
or
push
xchg
addr16
imul
inc
cmc
adc
iret
pop
inc
mov
sub
inc
adcb
stc
cmp
sbb
lds
std
sub
call
neg
js
int3
sarl
out
sub
xor
ja
xor
pusha
fisttps
and
in
das
or
cmpsb
rcrb
add
daa
pushf
je
leave
inc
scas
xchg
sbb
fwait
or
jg
in
mov
mov
iret
cwtl
ret
sbb
jge
popf
adc
aas
sarb
inc
jae
dec
inc
pop
bound
negb
into
pop
adc
jg
jecxz
pusha
and
jno
mov
pop
push
sub
xchg
jmp
mov
pusha
push
out
mov
fcomip
decl
stos
xchg
ret
mov
mov
inc
dec
add
lods
lods
sub
push
call
cmp
inc
mov
aas
jmp
xchg
std
fadds
movb
push
dec
pop
shr
jnp
ljmp
incb
fsubrp
mov
punpckhdq
cmp
das
call
jg
dec
fld
adc
lcall
cld
cmpsl
test
dec
jb
lods
cmpsb
inc
or
or
inc
mov
fstl
jne
out
repnz
insb
loop
sub
mov
and
ret
cmp
xor
mov
jg,pt
push
inc
or
mov
lcall
push
insb
jae
lcall
or
inc
adc
jle
push
pushf
pop
lods
xchg
xor
insl
testb
jbe
adc
movsl
dec
mov
inc
jecxz
dec
incl
jp
lea
cmc
lret
mov
xchg
fsubrs
addr16
fs
jmp
mov
lea
pop
std
ljmp
xchg
xchg
mov
or
decl
das
jle
mov
movl
test
outsl
xchg
shlb
or
js
cmp
aaa
inc
xchg
mov
enter
sub
sar
les
mov
xor
or
lcall
cmp
mov
sbbl
jbe
adc
xor
pushl
cmpsl
cmc
push
popf
enter
out
mov
adc
aad
mov
call
lcall
fimull
adc
pushf
mov
in
es
sub
xchg
dec
and
xchg
incl
fsubrs
mov
cwtl
sbb
sahf
lds
pop
stc
mov
sub
decl
adc
jecxz
add
sub
mov
xchg
pop
arpl
lcall
push
loopne
sub
test
sbb
push
jno
mov
mov
inc
ds
std
incl
fcoms
or
or
insb
jmp
lock
dec
adc
and
imull
jmp
and
int
icebp
pop
add
push
aam
jns
and
inc
jns
and
incl
pop
movb
dec
sbb
push
scas
inc
mov
popa
stos
cwtl
jg
arpl
jb
ljmp
stos
outsl
push
test
or
ljmp
fildll
test
jne
popf
pop
loop
imul
subl
cmp
mov
add
push
mov
aam
fldt
jnp
repz
mov
mov
call
andl
push
sub
fs
mov
sbbb
jno
lcall
test
dec
xchg
cmpb
cmp
gs
inc
pusha
push
xchg
and
incl
rol
popf
xlat
pop
cwtl
or
ds
gs
loopne
mov
mov
cmpsl
xchg
or
leave
or
sub
sub
jo
lea
in
pushl
incl
ret
repnz
and
sarb
loopne
insb
repz
add
fnstcw
sar
lcall
ficompl
or
cmp
sarb
insl
push
adc
or
pushl
or
or
xor
sub
jns
or
dec
test
out
mov
and
xor
jecxz
mov
add
es
ljmp
mov
jmp
lea
out
inc
loop
cli
cwtl
bound
pusha
fmuls
les
repz
test
and
adc
and
in
jbe
mov
add
into
ret
push
dec
in
out
test
aaa
jnp
mov
loop
cld
ljmp
ljmp
mov
push
lret
pushf
xchg
sub
es
fdivr
call
pop
lcall
jae
nop
out
in
sub
mov
imulb
lods
mov
call
aam
fwait
dec
pushf
dec
jge
push
xor
mov
leave
movsl
xchg
push
cmpsl
xchg
jmp
jmp
es
outsl
inc
ljmp
jae
adc
jno
and
cmp
fildll
xchg
pusha
adc
adc
fildll
jecxz
cmp
rcrl
push
fcoms
popf
lret
imul
add
mov
incl
inc
jnp
rcl
cwtl
movsl
dec
add
push
stos
jmp
sub
cmp
mov
shlb
lret
popf
call
insb
pop
xor
adc
outsl
adc
dec
inc
call
rol
ficoml
fs
insl
fists
mov
mov
jmp
mov
in
pop
insl
pop
lcall
sbb
test
inc
lods
incl
jnp
pop
idiv
mov
pop
or
negl
xchg
rolb
xchg
into
jne
jmp
push
lcall
movsb
test
cmp
hlt
xchg
popf
sbb
jg
add
scas
insb
pusha
es
cmpl
pushl
jae
stos
pop
push
push
js
sbb
lds
dec
and
xchg
push
rcll
push
hlt
dec
mov
mov
cwtl
push
arpl
lcall
loop
adc
aam
data16
mov
add
cs
mov
imul
mov
sbb
add
aas
pop
adc
xor
dec
hlt
mov
lcallw
repz
test
incl
pop
sti
jne
mov
ja
sub
mov
jle
cli
push
and
add
in
mov
cltd
stc
sbb
pop
iret
xchg
cli
xchg
sbb
pop
pop
cmc
push
mov
and
push
xor
xor
add
ss
adc
aaa
mov
inc
lfs
mov
test
sbb
and
repz
loop
test
movsb
jl
gs
lcall
dec
mov
jno
inc
push
sub
bound
lock
push
add
jl
inc
ljmp
jmp
popf
sub
sbb
mov
mov
xchg
movsb
mov
or
dec
out
lret
jnp
shlb
cmp
hlt
cmp
inc
insl
cwtl
je
mov
dec
mov
int
test
insl
add
inc
mov
cwtl
or
incl
bound
and
push
mov
mov
imul
cmpsb
jmp
mov
xor
fidivrs
lods
mov
outsl
das
es
nop
jp
sbbl
nop
call
mov
adc
cld
xchg
jg
out
inc
dec
pop
in
lret
xor
mov
mov
cmpsl
mov
int
dec
out
insl
xchg
push
lret
les
jns
inc
mov
incl
lcall
andb
cwtl
adc
push
xchg
nop
cmp
lcall
jne
aaa
mov
sub
data16
xchg
out
mov
scas
test
cld
pop
adc
aad
arpl
pushl
lods
cs
out
lock
xor
pop
lahf
mov
cmp
std
sub
call
dec
pop
mov
inc
mov
loop
or
cmp
cmp
das
clc
enter
mov
add
sar
sarb
loope
push
mov
inc
jmp
clc
jmp
add
cs
sar
sbb
xor
or
pop
mov
xchg
test
adc
sub
cld
push
jmp
add
jecxz
dec
cli
jmp
mov
mov
aas
ja
push
mov
xlat
pushl
sar
adc
cld
pop
in
xchg
movsl
and
cmpsb
lahf
or
sbb
jg
cmp
hlt
ret
decl
clc
push
je
push
stc
mov
add
gs
test
cmc
out
and
and
popa
jecxz
sbb
mov
or
call
cmc
test
jl
pop
dec
cmp
sti
or
lcall
aad
ja
rol
cmp
decl
mov
xchg
out
xor
dec
lods
fwait
pop
mov
lock
pop
jl
mov
ffree
cmp
lcall
pop
xor
xor
movsl
out
push
test
in
mov
rcl
hlt
out
icebp
pusha
lock
decl
testb
loope
sub
test
and
test
testb
push
cmpsb
mov
or
icebp
call
cld
xor
sbb
sti
inc
mov
or
imul
mov
loop
jns
outsb
cld
subb
jb
call
adc
arpl
aas
xchg
adc
lret
push
call
xchg
push
mov
add
call
mov
cltd
and
mov
or
sti
and
inc
popf
ljmp
inc
xchg
or
cmp
aaa
mov
sahf
mov
scas
imul
mov
jo
adc
adc
add
mov
pop
std
lcall
lret
sub
mov
icebp
xchg
or
lcall
arpl
incb
dec
dec
mov
clc
xchg
hlt
lcall
xlat
xor
jns
int3
cmc
push
ja
sbb
jo
lds
inc
inc
jmp
xchg
lea
inc
jbe
mov
call
adcl
dec
sbb
icebp
mov
scas
xchg
jno
xchg
popf
aad
adc
movsb
xchg
inc
movsl
out
in
mov
cmp
scas
imul
push
jne
std
mov
push
bound
ljmp
push
incl
pop
test
lds
js
mov
jg
dec
xor
bound
repnz
and
inc
mov
cmpsl
mov
call
mov
cmp
or
stos
jg
xor
mov
repnz
outsl
xchg
pusha
sub
pop
sub
decl
mov
fwait
and
pop
mov
pop
xchg
sahf
mov
mov
addr16
repz
inc
cmp
jbe,pt
decl
jl
jno
ret
fisttps
or
arpl
xor
scas
test
test
stos
flds
add
sbb
cmp
xchg
shlb
inc
push
add
out
pop
mov
push
xlat
incl
dec
inc
adc
dec
mov
sti
inc
jno
sbbb
or
sbb
jg
push
add
cs
rorb
lret
dec
xor
pop
fs
mov
add
mov
lcall
pushl
ss
call
inc
fcmovu
lea
ljmp
dec
out
ja
push
adc
in
in
push
repnz
xchg
lds
leave
dec
xor
out
pop
aam
icebp
lcall
call
fnstcw
pop
push
lret
sarl
jle
jecxz
mov
mov
or
dec
or
lock
in
xor
mov
sub
jmp
jge
lcall
jg
cmp
mov
sub
sub
sbb
les
lds
push
push
hlt
outsl
clc
pushl
jg
cmp
xor
out
push
jns
insl
mov
popf
gs
divl
push
add
lret
outsb
call
jle
mov
cli
pop
je
test
cmp
fcomip
fcmovu
and
xchg
ret
pop
fwait
and
mov
sbb
call
jge
or
mov
mov
dec
jo
lock
les
mov
cmc
cltd
movsw
mov
shll
fildl
nop
xor
push
stc
outsb
jg
shlb
add
cmpsl
mov
sub
push
jbe
rorl
fstpl
add
push
adc
mov
jg
mov
cmpsb
outsl
add
mov
pushf
xchg
cmp
movsb
jl
adc
mov
jmp
sbb
cltd
jecxz
or
loop
call
cmp
add
inc
ljmp
sub
cld
ljmp
inc
popf
fwait
lods
xchg
cmp
cmp
or
pop
lcall
decl
stos
clc
data16
add
cmp
loopne
dec
add
mov
incl
jmp
mov
ds
jno
fwait
and
mov
sub
decl
js
rcl
jb
stc
imul
and
js
mov
addl
mov
add
push
scas
pop
push
mov
jns
cmp
jl
clc
mov
push
mov
in
cmp
cmpsl
pop
add
add
in
cmp
divl
cmpsl
push
mov
cmp
std
fiadds
push
and
iret
inc
and
dec
shlb
dec
xor
cld
mov
adc
incl
mov
jne
push
fs
ret
pop
rclb
push
decl
lock
mov
sarb
imul
ljmp
lret
pop
or
shll
in
xchg
and
iret
dec
mov
mov
loop
incl
out
mov
incb
cmp
cld
push
jno
jp
jecxz
inc
out
mov
push
adc
rcrb
push
out
push
repz
adc
lcall
je
dec
sub
cltd
call
out
fidivl
sbb
sub
decl
mov
scas
outsl
lock
xchg
mov
sahf
inc
pop
ret
loope
loop
xor
clc
inc
push
pop
lds
xchg
js
cmp
cmp
fcoml
mov
cs
pop
sbb
mov
incl
dec
daa
and
int3
pop
mov
rcll
fistps
add
inc
aad
cmp
lods
ret
push
rcrb
cmp
leave
mov
lock
into
insb
jns
jne
mov
inc
ret
mov
mov
jg
cmp
sbb
pusha
lock
outsl
add
addr16
andb
lahf
mov
mov
sahf
imul
decl
test
jne
lds
sub
shlb
mov
inc
roll
cmp
and
xor
das
mov
mov
mov
cmpsb
in
or
ds
mov
call
ds
xchg
add
mov
imul
mov
ljmp
mov
clc
call
push
faddl
push
orl
jne
and
xchg
pop
cld
pop
mov
out
clc
aaa
aaa
lcall
or
sub
and
jmp
rolb
push
lods
outsb
fsubr
or
fs
or
ljmp
adc
pop
mov
bound
clc
dec
jmp
cs
sbbb
adcb
test
lcall
xchg
movsb
jb
out
pop
xor
push
pop
and
add
jg
ljmp
add
clc
mov
dec
inc
cmc
jmp
mov
sti
out
loope
mov
xchg
or
add
scas
and
or
clc
decl
je
iret
sbb
jecxz
mov
inc
lds
jbe
iret
sub
jae
and
jo
aad
sub
pop
xor
add
cmc
jno
and
pop
rolb
add
mov
fildll
push
mov
enter
mov
push
inc
sbb
pop
jmp
and
mov
dec
mov
mov
xor
lret
into
scas
scas
sub
aad
cli
jg
ljmp
lret
xlat
sbb
xlat
fwait
push
jl
loopne
andb
or
out
movsb
out
test
xlat
or
fimuls
sti
mov
cmpsl
push
pop
addb
cmpsb
incl
add
cmc
adc
flds
ficompl
test
lcall
sub
xchg
and
int
or
adc
stc
cltd
outsb
aas
ljmp
cli
jmp
mov
pop
fprem
mov
jecxz
dec
mov
out
pop
push
mov
ret
jmp
bound
sub
mov
sbb
fsubl
stos
push
jmp
test
mov
incl
andl
out
orb
push
fstl
sbb
stos
ljmp
scas
fiadds
xor
mov
push
add
and
pop
ret
push
pop
into
pop
lahf
mov
inc
pop
aaa
mov
mov
or
jmp
xchg
inc
mov
hlt
pop
add
incl
ret
and
inc
adc
mov
xor
into
into
xchg
out
ss
ljmp
cmc
decb
mov
ss
mov
fmul
aas
out
dec
xor
ljmp
cmp
sahf
mov
sbb
push
jae
push
xchg
cmp
inc
aas
mov
repnz
lds
xchg
xor
sub
sbb
adcw
mov
push
or
or
sbb
ja
mov
call
or
xchg
imul
xor
rcrb
into
inc
jo
jb
filds
push
rcr
and
cmp
sbbb
mov
and
or
cmc
pushf
mov
ljmp
mov
cmp
loope
pop
je
mov
test
cmpsb
int
pop
inc
add
je
dec
pushl
mov
mov
test
mov
push
test
leave
call
adc
jmp
and
clc
cmpsl
js
xchg
xor
or
push
stos
leave
out
mov
or
push
fcomip
decl
out
cmp
not
call
out
popf
inc
push
inc
mov
pop
xor
rcr
dec
xchg
dec
inc
mov
dec
pcmpeqb
add
cmp
jg
and
gs
jp
in
inc
push
adc
cltd
or
aad
add
lcall
daa
cmp
aam
inc
mov
mov
sbb
jge
sbb
clc
add
xchg
and
mov
jle
fwait
lds
insb
ss
sub
dec
insb
adc
in
add
fiadds
xchg
shlb
inc
xchg
in
inc
pop
cmp
repnz
out
aam
sbb
shrb
add
ret
and
mov
in
dec
cwtl
lods
js
dec
outsb
push
out
mov
cmpsl
divl
mov
lods
sar
jp
enter
mov
and
jg
test
dec
mov
hlt
sbb
inc
daa
jno
xchg
sar
adc
pushl
push
jmp
xor
jae
jmp
mov
pop
jne
mov
or
out
mov
lods
pop
mov
xor
addr16
inc
ret
add
jge
inc
mov
ret
out
jnp
fadd
push
fcompl
movsl
mov
sub
or
pop
ljmp
lea
stos
ljmp
icebp
adc
push
pop
inc
faddp
mov
sti
xchg
incl
inc
sub
push
xlat
stc
pop
into
jne
adc
cltd
pop
push
xchg
scas
adc
mov
xchg
or
adc
inc
sub
out
mov
add
aaa
xor
dec
test
mov
orb
das
ljmp
and
les
push
sub
imulb
call
xor
test
dec
jbe
push
pop
mov
mov
jno
xchg
lock
adc
jnp,pn
adc
fisttpl
mov
jecxz
mov
incl
ret
or
incl
ljmp
shlb
dec
in
inc
mov
not
xchg
roll
stc
je
adc
and
mov
das
mov
hlt
jmp
aaa
sub
fiadds
sub
repnz
jb
bnd
add
jo
jl
mov
sarb
cmp
sbb
adc
mov
mov
adc
fbld
clc
int3
test
cmc
fistpl
stc
xor
lcall
push
cld
leave
dec
leave
test
cmp
dec
data16
mov
out
pushf
sub
fsubr
xor
pop
negl
jp
stos
hlt
cmp
clc
lcall
insb
and
and
movsb
loopne
push
push
jge
scas
mov
enter
std
call
inc
jle
das
mov
cmp
insl
xchg
xchg
pusha
xchg
xor
das
sar
push
sahf
int3
mov
shlb
repz
loope
into
jg
push
adc
mov
jae
pop
xor
push
pop
mov
shr
mov
cwtl
andb
jmp
push
pushf
inc
xor
pop
les
sbb
mov
pop
ret
pop
test
cwtl
mov
in
mov
or
test
std
arpl
mov
stos
mov
mov
push
out
lods
dec
jmp
push
adc
mov
inc
mov
mov
cmovb
cmovae
mov
push
sti
je
roll
add
add
decl
aas
adc
mov
dec
cmp
mov
lea
lret
cld
fstl
ljmp
ret
cmp
jbe
jb
add
lock
mov
iret
pop
mov
inc
ja
jg
jns
ljmp
shl
data16
sub
das
push
popf
and
call
pop
pop
mov
xchg
dec
lds
adc
jb
or
pop
pushf
xchg
jmp
cwtl
clc
ja
lock
push
dec
and
call
outsb
stos
mov
jl
loop
dec
bound
das
cmp
jl
fs
ss
inc
mov
fidivrl
lcall
mull
mov
push
mov
loope
pushf
pop
clc
repz
push
imul
jecxz
mov
xchg
and
insb
js
mov
int
xchg
and
mov
out
aas
push
shlb
popf
mov
jae
mov
lret
push
insb
ret
ljmp
int
mov
dec
ret
push
cmpsb
mov
rcr
loopne
lahf
jecxz
addl
icebp
adc
mul
bound
push
iret
sbb
ljmp
xchg
repz
hlt
inc
jp
mov
ret
mov
and
adc
push
xor
call
scas
insb
leave
ljmp
jo
sbb
test
mov
dec
or
inc
push
imul
pushf
out
cmp
inc
jno
mov
push
inc
sub
dec
cmp
js
inc
movsl
lods
das
call
in
xor
lcall
sti
cld
push
xchg
mov
fldenv
or
imul
push
push
clc
aam
mov
fnstenv
fwait
inc
mov
push
rcll
inc
dec
outsb
int
loop
loopne
movsl
cld
outsb
cmp
incl
dec
mov
sahf
testb
sbb
cltd
and
mov
jne
mov
mov
decl
out
pop
hlt
push
out
and
call
mov
incl
cli
cwtl
dec
clc
cmp
cmc
iret
int3
pop
insl
xchg
cmpsl
je,pn
das
mov
test
movsb
arpl
gs
push
loope
or
pop
dec
mov
shlb
pop
pop
sbb
adc
lcall
ljmp
dec
mov
xlat
xchg
pop
inc
add
fadds
sbb
mov
pushf
mov
fstl
sub
add
leave
lea
sar
lock
inc
and
xor
xchg
jle
xchg
in
cmpsb
jg
icebp
aaa
cmp
dec
jb
push
mov
adc
fdivr
mov
cmp
lock
sub
ljmp
aaa
repz
outsb
cmp
mov
xor
clc
fwait
js
inc
push
hlt
incl
add
adc
test
cmp
std
sbb
es
fildll
sahf
stos
push
xor
shll
jl
sbb
mov
in
stos
rcrb
and
loop
out
out
adc
loope
sub
lcall
adc
jno
fnsave
sbb
punpckhwd
out
push
popa
sbbb
sbb
lret
ljmp
push
sbb
push
cmpsb
push
es
jge
push
cmp
add
incl
call
data16
icebp
ficompl
testb
cmpsb
add
daa
fnsave
ret
incl
es
mov
ja
cmp
cmpsb
in
aaa
push
xchg
jo
in
cwtl
mov
mov
mov
jne
inc
or
push
lret
fisubl
lret
stos
call
lret
cmp
aad
and
sbb
in
pop
mov
mov
loopne
push
adc
ret
lods
cli
les
ljmp
in
sbb
pop
sbb
es
ss
cmp
adc
jmp
push
jecxz
jbe
cli
or
lods
jp
ljmp
sar
jle
or
leave
push
icebp
sbb
ss
in
dec
insl
jno
push
pop
ljmp
and
lret
inc
push
sub
jp
push
push
and
sahf
fs
add
mov
mov
lcall
repz
jmp
mov
dec
inc
sahf
lds
mov
call
fucomi
iret
add
mov
in
loop
mov
stos
into
push
adc
mov
sbb
dec
ss
adc
jmp
add
mov
xchg
inc
addr16
shll
js
mov
push
enter
dec
dec
jmp
pop
push
shlb
cmpb
mov
cmpsb
mov
inc
jns
movsb
push
aam
pmaxsw
ljmp
add
lea
sbb
cmp
push
cld
imul
test
dec
inc
decl
xor
push
inc
cmp
aaa
xlat
ds
cli
cltd
loop
sbb
rcrb
pop
and
call
jne
pop
cld
inc
mov
xor
es
das
jnp
cwtl
mov
mov
jo
mov
call
jns
mov
inc
test
cli
mov
xchg
mov
leave
jecxz
or
pushl
incl
sub
xchg
sub
jp
sar
sbb
mov
ret
rolb
inc
jmp
sbb
mov
xchg
add
aaa
inc
mov
dec
mov
cmp
je
lds
aad
mov
test
sbb
cmp
icebp
push
cs
enter
or
or
cmpsl
adc
or
int
insl
sbb
aaa
js
jno
xchg
in
out
jmp
pushl
shrl
out
cmp
dec
mov
lods
push
daa
stos
out
fsubl
sbb
js
ficoml
lcall
out
lock
sarb
push
jg
mov
sbb
loopne
clc
aam
mov
and
push
jo
into
fdivr
decl
subl
imul
stos
fistpll
pop
ja
call
out
cmp
js
sbb
sub
push
mov
add
jge
fiaddl
push
or
or
jp
call
lods
iret
enter
and
pop
sbb
and
cmpsl
out
repnz
pop
and
lret
xchg
std
jp
adc
dec
pop
leave
adc
xor
out
shl
mov
lret
jns
or
and
mov
popf
add
jmp
call
cmpsl
sbb
pop
xlat
pop
dec
adc
in
mov
adc
test
mov
inc
mov
add
xor
or
sub
mov
cmp
cs
insb
xchg
push
subl
dec
jbe
mov
push
loope
xor
aam
inc
dec
jle
xor
and
add
fiaddl
sbb
xchg
lahf
jb
push
enter
iret
xor
fdivrl
loop
pop
fnstsw
pop
mov
xchg
add
jp
and
nop
adc
jmp
mov
sub
clc
std
inc
add
clc
mov
and
cmp
mov
loopne
aad
leave
inc
fucomip
das
and
imul
mov
cwtl
aad
mov
int3
or
sub
add
mov
dec
add
pop
jge
or
mov
into
mov
ret
mov
adc
add
cmp
pop
adc
or
call
jno
xchg
insb
sub
jmp
aas
xchg
popf
mov
mov
out
imul
cmp
push
cmp
sub
jmp
sbb
add
sbb
sub
mov
pop
push
xor
call
loopne
ss
push
push
mov
or
pop
pop
mov
jno
pop
call
sub
xchg
loop
push
pop
scas
in
sub
mov
enter
test
stos
sbb
add
ljmp
adc
lahf
pushf
lea
mov
inc
jmp
repnz
int3
add
cwtl
shlb
popf
movsl
inc
lods
pop
subl
rcrl
mov
shlb
cwtl
push
shll
test
lea
xor
enter
shll
decl
lock
cltd
dec
repnz
mov
movsl
sub
and
gs
xor
dec
mov
in
or
addr16
aas
shlb
cli
pop
xchg
rorb
adcl
or
scas
rolb
test
and
inc
shlb
imul
inc
pop
and
inc
shrb
loopne
jg
add
ljmp
ret
int
xchg
sub
push
and
push
mov
xor
fcmovnu
fstl
dec
mov
mov
int3
lds
je
add
xchg
addl
ficomps
fimuls
pslld
inc
mov
loopne
xor
pop
je
xchg
aas
iret
in
rcrb
out
enter
loop
ljmp
inc
es
les
jb
jle
mov
out
inc
popf
or
addr16
jge
mov
jp
call
hlt
popa
adc
mov
adc
lcall
inc
fucomi
pop
fwait
mov
pop
inc
shrb
lret
repnz
outsl
xchg
loopne
rorl
nop
push
mov
and
push
es
cs
sub
movsl
pop
pop
mov
loope
ljmp
mov
inc
add
pop
xor
stos
sbb
jno
aad
sbb
decl
sub
mov
ret
in
pop
inc
and
fwait
ljmp
out
pop
push
aaa
rorb
pop
mov
add
cmp
std
in
fbld
xor
mov
test
ds
push
test
ljmp
lock
movsl
or
leave
int3
xor
movb
imul
out
cltd
push
dec
cld
inc
bound
sahf
lret
xlat
mov
rcl
and
dec
into
mov
incl
sub
lahf
es
fildll
cld
cli
loopne
lods
dec
xorb
xor
dec
dec
rcrb
xor
into
inc
adc
frstor
or
lahf
test
xchg
push
rorb
lds
pusha
mov
adc
arpl
cli
add
lods
sbbl
sub
sub
jmp
gs
call
fwait
sbb
ror
mov
sbb
xchg
dec
xchg
lods
arpl
pop
lods
add
movsl
icebp
pop
inc
dec
mov
push
pop
jmp
test
ret
mov
add
rcr
inc
mov
sbb
or
cmp
mov
sarb
pop
add
ret
dec
and
cmpsb
fdiv
filds
cmp
call
push
xor
pop
xor
je
in
das
xor
jmp
fimull
jle
sub
jns
js
xchg
xchg
pop
mov
dec
fdiv
out
mov
dec
cltd
adc
push
stc
sub
les
ljmp
xchg
sbb
mov
clc
repnz
xor
aam
jne
scas
adc
pushl
push
push
in
dec
or
scas
je
fiadds
les
push
mov
jno
jge
sahf
repnz
std
add
iret
popf
cld
das
xchg
incl
or
xchg
ret
push
fstpl
mov
daa
ret
dec
sub
fiadds
in
in
cmp
pop
jns
in
test
imul
mov
cs
xor
adc
adc
inc
pop
xor
push
and
sbb
outsb
jo
jmp
out
ljmp
ficoml
push
pop
leave
icebp
adc
inc
cmp
stos
mov
gs
and
mov
in
xchg
dec
mov
fsubrs
repnz
jb
das
sbb
pop
clc
jmp
mov
xor
xchg
push
cld
cld
out
sub
repnz
stos
fildl
loop
lods
rcrb
insb
out
ret
inc
xor
jecxz
std
pop
dec
push
sbb
repz
ljmp
mov
pop
loop
jo
xchg
jbe
inc
sahf
jbe
movsb
in
jmp
int3
lret
xchg
push
and
repnz
lcall
insl
jmp
sub
sub
sahf
cmpsb
xor
pop
jg
std
jg
fcomp
iret
push
mov
mov
loop
negl
add
sbb
pop
nop
ds
mov
call
and
scas
out
stc
rolb
fcmovbe
sub
and
rcrb
fisttps
or
fstpt
mov
lcall
jmp
aam
fnstcw
outsl
movsb
pop
sub
xchg
push
jle
lcall
clc
shlb
jbe
imul
sarb
or
and
shl
das
inc
pop
test
jns
cwtl
insb
add
popf
mov
fsts
lret
lea
shl
mov
mov
push
adc
mov
dec
call
jg
out
jns
movl
or
aas
test
add
pop
fs
cmp
lods
pop
inc
dec
fadds
or
in
ljmp
call
addr16
insl
nop
push
sub
ret
or
dec
adc
push
ljmp
psllq
imul
cli
cltd
idivl
cs
out
and
out
or
clc
xchg
orl
lea
pop
sar
cmc
pop
fildll
mov
sub
mov
test
je
and
sub
andl
jle
cmp
jmp
and
loope
cmc
add
repz
sahf
xchg
pop
xor
clc
mov
jle
in
nop
pop
inc
cwtl
sbb
inc
int3
xchg
pop
hlt
pop
sbb
addr16
push
xchg
stc
decl
int
jg
and
ds
into
jnp
jle
fs
in
sahf
add
add
mov
jle
push
les
sarb
mov
cwtl
sbb
pop
pop
cmp
cmp
jb
jmp
cwtl
inc
push
jbe
out
in
cmp
in
sbb
int3
push
dec
mov
mov
push
in
cld
push
lret
add
dec
xchg
sub
adc
fcmovnb
dec
sub
out
jg
lock
add
sub
imul
jp
pop
iret
idiv
jg
fwait
push
sbb
cmp
sub
pushf
inc
sub
lcall
inc
push
dec
lock
mov
jae
sbb
sub
push
sub
or
out
sub
cmpb
lcall
mov
cld
push
jg
daa
xor
jmp
addr16
adc
dec
je
aad
movsl
mov
rorb
pushf
cmpsb
sub
iret
das
je
pop
fsub
or
pop
sub
je
mov
or
xor
rcr
xchg
adc
push
xor
hlt
lcall
pop
jb
nop
fdivrl
bound
sti
xor
shrl
or
add
mov
stos
cmp
orl
iret
into
push
js
inc
push
data16
sub
jmp
aad
rcrl
xor
lods
stc
pop
aaa
in
xchg
out
js
test
cld
xor
dec
cmp
adc
mov
xor
int
stc
ficompl
xor
out
push
push
push
sub
je
daa
fidivs
sbb
cmc
and
or
decl
mov
in
or
mov
cmpsb
data16
mov
inc
mov
dec
inc
data16
xchg
cltd
jge
inc
std
inc
sbb
sub
xchg
fnstsw
add
sahf
pop
push
pop
mov
jmp
mov
addr16
enter
xor
xlat
jmp
fs
inc
adc
pop
pop
lods
push
xchg
ds
jnp
arpl
arpl
incl
cmp
clc
stc
cmp
push
sahf
xor
icebp
pushl
cld
loop
inc
jnp
sbb
or
fildll
jnp
push
jle
pop
aad
mov
mov
call
xchg
jne,pt
add
cmp
das
sbb
lret
inc
cmp
cmpsl
sub
xchg
cmc
lock
or
xor
lcall
fdivrs
in
jns
vxorps
imul
mov
and
mov
scas
rsqrtps
ljmp
sbb
xchg
sbbb
out
mov
mov
or
andl
inc
or
dec
xor
jb
nop
mov
lods
adc
push
fsubrl
fisttpl
aad
cmp
mov
jo
xor
dec
out
movsl
and
mov
lock
mov
idiv
or
xchg
sub
test
add
fcoml
xchg
mov
push
xlat
xor
xor
sbb
inc
mov
test
sbb
aaa
xchg
and
cmpsb
fistpl
pop
sar
aam
mov
incl
mov
test
iret
inc
jnp
dec
in
pop
mov
xchg
syscall
jns
decl
ljmp
add
test
or
xor
roll
les
adcb
push
push
lcall
xor
pop
outsl
sahf
mov
fidivl
mov
xlat
and
test
fisttps
xchg
outsl
jmp
das
std
or
test
and
insl
stc
push
mov
decl
movb
fadds
in
adc
ljmp
call
mov
pop
sub
cmp
dec
jg
repz
test
bound
dec
jecxz
inc
test
incl
pushf
sub
and
clc
push
inc
shlb
pop
shrb
vmwrite
xor
in
sar
jmp
or
ljmp
sbb
shl
push
push
bnd
dec
stos
fdivrp
lds
fwait
sbbb
mov
cs
and
sbb
js
int
or
and
jl
int
or
ljmp
cli
sub
push
fwait
cs
rol
in
push
sbb
jmp
lea
leave
add
js
and
jmp
mov
jle
jl
and
add
sub
sbb
mov
xchg
leave
inc
inc
add
lcall
leave
fwait
in
rclb
sub
arpl
sub
dec
pusha
bnd
cmpsl
mov
stc
jae
mov
imul
mov
pop
or
mov
lret
fimull
and
fisubrs
vmaxps
pop
fsubp
jp
push
mov
mov
fidivs
mov
cmpsb
andl
mov
fists
adc
cmpsl
clc
and
test
rcrl
dec
xchg
mov
and
out
clc
dec
repz
mov
pusha
and
loop
ret
call
clc
in
fwait
andb
das
fisttpl
jne
negl
into
pushf
scas
mov
cmpsl
test
lcall
sub
aaa
cmp
dec
sar
add
add
movsl
xor
or
mov
cmpl
push
mov
cmp
lods
fistpll
cmp
cmp
xor
les
loope
ljmp
push
add
pop
mov
movsb
cmp
push
jnp
lcallw
mov
mov
filds
ds
jp
bound
mov
mov
ss
in
in
ret
clc
xchg
call
sahf
fmull
jmp
mov
stos
or
out
addr16
lcall
cmp
imul
mov
mov
mov
and
bound
xchg
push
pushf
mov
adc
mov
out
jno
xor
daa
mov
decb
fs
fnstsw
adc
sub
add
jle
mov
sti
icebp
cmp
cmc
dec
mov
hlt
les
xchg
dec
add
mov
or
lcall
push
int
cs
imul
jae
pop
icebp
fbld
jp
les
sub
test
shll
pop
xorb
iret
arpl
inc
adc
lea
insb
mov
dec
incl
cld
pushl
jb
xor
jge
adc
pusha
ds
jns
mov
inc
inc
dec
mov
jbe
xchg
pop
mov
fnstenv
jmp
mov
iret
dec
lret
test
and
pop
cld
decl
mov
xlat
inc
add
pop
jns
mov
bound
loope
sahf
aad
fisttpl
push
sbb
sub
sbb
pushl
aad
cmp
add
cmpsl
ffreep
mov
jbe
xor
adc
sbb
cmpsl
sub
ds
jae
jnp
test
or
cmp
cmpsb
inc
adc
cs
gs
jge
test
sub
mov
jmp
jno
int3
mov
ja
push
inc
mov
sub
popf
leave
fsts
jecxz
dec
sbbl
subl
testl
pop
xchg
pop
inc
lds
pop
mov
ljmp
cli
lea
cs
add
in
xchg
cmc
push
das
xor
inc
gs
lcall
add
inc
dec
push
jmp
sbbl
xorb
popa
inc
jecxz
leave
mov
jb
add
mov
aas
add
push
or
and
mov
loop
xchg
pop
dec
xor
push
mov
jmp
mov
je
sbb
aam
mov
not
sbb
pop
stos
pop
iret
jp
divl
pushl
int
repz
dec
mov
pop
sti
cwtl
test
cmpb
cmp
push
xor
insl
and
xchg
lds
rorb
incl
roll
push
aas
or
inc
jge
pop
aam
jne
sub
and
movsb
push
jae
lcall
jge
shrb
push
sarl
fcompl
cmp
pusha
add
pushl
jno
cwtl
out
inc
fbstp
sbb
adc
xchg
add
cmp
push
push
mov
jg
mov
int3
aad
arpl
test
dec
mov
in
push
rcrb
lret
mov
xchg
test
fisttpl
shlb
inc
mov
fdivrl
pushf
xor
jmp
dec
iret
jge
push
pushf
jbe
je
xchg
xor
fbstp
xor
sbb
jmp
xor
adc
adcl
cli
mov
out
shll
lcall
mov
inc
fcompl
insl
mov
aaa
lret
xchg
mov
fistl
mov
call
gs
ja
add
xlat
mov
mov
fnstenv
or
aaa
jg
lods
hlt
lock
xchg
push
outsb
push
fisubrs
ljmp
lahf
movsl
cmp
aaa
or
sub
sub
sub
pop
and
sub
inc
push
ljmp
je
iret
imul
push
pop
or
pop
xchg
inc
repz
ljmp
xchg
pop
push
pop
ss
add
popa
add
pop
mov
incl
lret
scas
jmp
adc
mov
push
inc
xor
in
call
xchg
cmp
addb
lods
rcrl
push
pushf
pop
ljmp
sbb
ficoms
out
arpl
pop
or
cmp
sub
dec
inc
add
gs
test
pop
sub
mov
jg
jmp
push
jmp
mov
adc
jne
fldl
push
inc
pop
mov
or
shlb
insb
pop
fsts
pop
pushf
xor
adc
dec
sub
cltd
xor
pop
lahf
sub
sbb
xchg
popa
scas
pop
jl
jb
dec
cli
mov
mov
ljmp
jg
mov
add
jmp
ljmp
pop
lret
sar
out
jbe
jmp
stos
aad
decb
ds
inc
jecxz
call
push
mov
jle
jns
std
stos
imul
mov
mov
add
adc
cs
scas
sti
dec
and
out
jbe
push
jo
jl
pushl
cld
xlat
or
add
aas
push
pop
lock
mov
incb
lcall
imul
xchg
sub
mov
ljmp
clc
jmp
fadds
ljmp
rcrb
fmull
dec
insl
pop
into
ljmp
or
daa
xchg
int3
in
movsl
cltd
jns
out
ret
or
leave
mov
fadd
stc
dec
add
call
lret
add
mov
cld
xor
fdivs
loopne
sbb
mov
lcall
lret
mov
mov
roll
lock
push
test
jae
cltd
insl
cmp
cli
aam
and
sti
sub
decl
rclb
imul
jo
shl
mov
aad
mov
loop
mov
add
out
cld
frstor
push
jecxz
bound
cli
pop
fs
lea
pusha
adc
out
xor
jae
cmpsl
mov
nop
xor
xorl
push
loopne
lret
cmp
imul
pop
mov
xor
mov
jnp
or
sarb
rcrb
sbb
iret
cld
pushl
stos
int
push
push
xor
imul
jne
pushf
aaa
lods
pushl
into
test
out
pop
test
push
das
and
xchg
lahf
mov
enter
adc
pushl
xchg
mov
sahf
cltd
xor
xchg
das
negb
js
and
mov
fcmovnbe
sbb
rcrb
cwtl
nop
mov
dec
mov
jmp
into
fists
jmp
dec
nop
call
int
xor
or
negb
xchg
fdivl
mov
mov
movsl
mov
cmp
inc
xchg
hlt
xchg
ljmp
les
incl
add
pop
mov
mov
inc
cmp
gs
call
add
mov
daa
jnp
jle
pop
cmpsl
jle
scas
cmp
inc
stc
ret
cwtl
push
adc
fsubrl
mov
add
ljmp
pop
sbb
sub
xor
xor
cld
lcall
add
dec
imul
call
adc
mov
stos
bound
jle
sub
pop
mov
call
sbbb
lods
dec
and
mov
inc
mov
adc
movsl
pushl
cmp
das
jp
pop
fbld
jmp
mov
xchg
push
push
leave
sahf
pusha
pop
rorl
outsl
incl
dec
and
jnp
add
mov
lcall
pushf
lea
pop
xchg
add
lods
pop
test
ljmp
add
xchg
lret
mov
in
in
mov
ljmp
push
pop
imul
and
repnz
hlt
iret
cmp
divl
mov
dec
dec
or
ds
push
xchg
jg
or
stc
fisttpl
sahf
dec
jecxz
mov
lea
jge
idiv
incl
mov
lds
leave
dec
mov
stos
or
fildll
jmp
call
dec
pop
dec
aaa
cmpsb
lea
push
jb
into
mov
in
ret
rorl
jne
adc
lock
jmp
cs
pop
hlt
pop
mov
cld
fidivrs
add
adc
decl
std
pop
scas
mov
mov
adc
faddl
push
sub
jmp
int3
jno
lods
and
repz
dec
pop
adc
fildll
inc
xchg
xchg
xchg
dec
add
iret
mov
push
sbb
fwait
add
push
mov
loope
lret
add
and
xor
decl
lcall
jecxz
jmp
xchg
fsubrs
pop
jp
mov
sub
call
test
loope
das
sarl
pusha
aad
pop
mov
or
sub
bound
ja
jg
xor
mov
cld
call
cmpsb
pop
push
pop
cmp
adc
clc
decl
cmp
mov
mov
sub
mov
push
pop
std
incl
jp
jne
and
test
lcall
mov
loope
fadds
cmp
mov
mov
pop
cmpsl
aas
rorb
cmp
call
in
popf
xor
loope
xor
nop
mov
int3
ljmp
add
pop
insl
sahf
jmp
int3
lods
sub
mov
sub
cmpsb
pop
mov
push
adc
dec
pop
stos
jmp
loopne
arpl
sub
out
inc
pop
test
xchg
mov
or
mov
pushl
fs
push
in
mov
adc
xchg
insb
push
push
aam
inc
cmpsb
sub
rol
leave
lods
push
sbb
les
jmp
movsl
push
mov
les
cltd
ficompl
jae
pop
sbb
jnp
jns
popf
push
inc
pushl
push
mov
add
mov
pop
stc
in
dec
mov
test
jmp
cmp
push
sbb
cld
cltd
or
popa
loop
out
in
loopne
js
call
cmp
jle
xchg
sub
xor
xchg
pop
sbb
pop
dec
in
int
enter
jne
mov
ljmp
xor
mov
gs
mov
cwtl
imul
inc
pop
fs
popa
add
sahf
and
mov
lock
inc
outsl
sti
dec
test
mov
add
mov
shll
out
ss
loop
decl
push
cld
sub
imul
int3
sub
outsl
lret
jl
dec
aas
sbb
and
outsl
dec
sbb
push
cld
jmp
xchg
in
test
ljmp
sbb
daa
ljmp
frstor
jge
and
sbb
pop
mov
outsb
lcall
jl
popf
inc
insb
neg
ljmp
andb
inc
ljmp
dec
in
jg
dec
movsl
pop
filds
push
and
clc
inc
mov
adc
push
decl
cmp
addl
test
xor
pop
xor
ljmp
aam
or
cmpsl
push
inc
ja
lods
mov
xchg
test
xchg
sub
repz
lcall
pusha
inc
mov
jne
adcl
testb
jo
loopne
movsb
pushl
cmp
cwtl
out
mov
loopne
xchg
scas
cwtl
mov
xchg
mov
mov
xchg
cmpsl
fildll
les
fcomip
push
push
ret
ret
imul
test
iret
lret
push
decl
lock
mov
shlb
in
test
inc
xor
cmc
jp
add
adc
push
dec
in
shrl
sbb
push
and
mov
addr16
lcall
pop
arpl
push
pop
stos
inc
cmp
add
aam
mov
rolb
or
pop
jg
incl
pop
fidivs
jecxz
pop
or
repnz
orb
mov
cld
push
mov
dec
cmp
xorb
repz
push
lods
int3
scas
adc
ja
movsl
sub
imul
and
jp
pop
test
lods
ds
mov
clc
lcall
xchg
mov
xchg
test
out
pcmpgtb
adc
in
push
je
sbb
ret
mov
mov
jnp
div
ds
lcall
test
fnstcw
inc
push
jp
inc
jmp
mov
and
ja
aas
jecxz
ret
or
call
orl
call
movb
cmpl
sbb
or
xor
outsb
adc
push
push
mov
sarb
lea
or
mov
add
jbe
mov
ljmp
dec
inc
or
jg
scas
xchg
iret
xor
out
and
and
das
sbb
dec
xchg
mov
dec
out
imul
lods
add
fdivr
jg
in
call
fists
lcall
xchg
test
in
pop
sub
aam
mov
pop
mov
inc
cli
int3
mov
push
cld
clc
icebp
sbb
push
mov
dec
cli
gs
pop
icebp
ret
dec
jae
cld
xor
xchg
jmp
ljmp
mov
dec
lcall
push
mov
jg
pop
add
xchg
int3
dec
xchg
pop
ljmp
mov
shlb
lds
and
xchg
mov
ja
mov
sti
sub
je
sbb
dec
adc
sbbb
pushf
gs
into
add
sub
test
mov
insb
out
inc
or
lret
mov
ljmp
aam
push
mov
jns
scas
test
test
dec
jae
jle
pop
pop
les
inc
aaa
dec
mov
and
lea
xorb
mov
movsb
adc
jns
aam
mov
andb
insb
inc
mov
inc
rorl
outsl
jb
dec
outsl
mov
mov
call
or
cltd
jb
mov
pusha
mov
aam
daa
jge
shl
pop
ljmp
add
mov
pop
pop
pushf
mov
into
mov
jns
fstl
adc
dec
or
inc
lods
jecxz
enter
cmp
call
mov
stos
cmovge
in
fnstsw
jl
paddusb
loop
inc
fwait
mov
lcall
test
ret
mov
sbb
xlat
sbb
cmpsb
imul
incl
push
imul
add
sub
cmp
pop
mov
mov
incl
pusha
aas
inc
mov
in
xlat
jp
imul
fisttps
jg
std
cmp
pop
dec
in
imul
incl
bound
push
repnz
pop
nop
rclb
icebp
pushl
ljmp
inc
adc
sbb
fs
xchg
ljmp
xlat
lea
ret
in
cmp
push
push
xchg
pushf
icebp
call
dec
pop
roll
insb
xlat
sbbb
xor
add
aaa
scas
jg
decl
pushl
pop
inc
cwtl
sbb
and
pop
push
or
mov
add
fcomip
sbb
outsb
addr16
or
pop
jg
lock
clc
ret
dec
xchg
and
lahf
lock
push
gs
incl
adc
test
lret
insb
lock
push
inc
add
inc
or
fdiv
sti
lcall
mov
push
sub
xchg
insl
mov
in
cli
test
bound
cs
call
inc
repnz
cld
leave
cmp
jge
out
daa
ljmp
sti
pop
and
and
call
xchg
loopne
vcvtsd2ss
pushl
shlb
addr16
pop
xchg
sahf
fistpl
xchg
sbb
adc
in
inc
mov
aad
fisttps
out
imul
jb
sbb
repz
into
or
or
data16
push
jnp
outsl
clc
mov
sbb
repnz
leave
pop
loop
out
test
inc
add
ljmp
adc
mov
mov
inc
aam
lret
inc
cmp
test
ftst
jnp
cmp
sub
popa
cmp
aam
cli
adc
ljmp
test
mov
call
ret
mov
dec
shr
hlt
lret
mov
pushl
push
adcb
sub
and
je
dec
ljmp
into
orl
cwtl
jge
aam
fucom
and
mov
xchg
pop
enter
jle
inc
lcall
mov
dec
sarl
cli
sbb
gs
fdivrs
icebp
jl
fdiv
fcomip
incl
add
and
dec
aas
js
outsb
xor
sub
and
mov
ljmp
mov
mov
jmp
mov
jb
orb
es
jbe
clc
xor
dec
push
and
notb
xchg
lods
filds
adcb
push
stos
jno
fwait
or
loope
enter
mov
divb
shrb
sahf
daa
jl
int3
insl
loope
call
loope
aaa
pushf
iret
or
sub
aaa
mov
stc
cmp
push
fildll
les
gs
mov
jmp
mov
jmp
and
iret
push
insb
sub
shrb
jns
push
adc
out
test
decl
shr
test
mov
gs
dec
mov
std
jnp
das
mull
lcall
mov
jnp
movsl
jo
jg
xor
pushf
mov
dec
lea
jne
lret
push
inc
cs
dec
seta
fnsave
enter
jmp
gs
out
pop
inc
ret
cmp
arpl
mov
decl
dec
mov
pop
sti
adc
scas
sub
dec
sub
push
xchg
incl
icebp
cli
dec
push
push
out
jl
inc
call
pusha
aam
fsubrl
inc
dec
call
sbb
cmp
aad
jmp
mov
mov
aas
pushf
cmpsl
add
in
in
ss
cmpsb
loope
mov
add
xor
jns
add
cwtl
inc
clc
decl
enter
sub
sbb
inc
filds
loope
jge
dec
xchg
test
decl
or
add
cmp
add
add
lret
stos
cmp
shll
dec
js
or
incl
shrl
dec
xlat
and
imul
outsl
xchg
fidivrl
call
es
add
cmp
dec
push
rclb
lret
fmuls
lret
andl
in
aam
xchg
inc
add
fisttps
outsl
fidivs
cli
divl
add
xchg
cltd
xchg
push
out
mov
push
call
mov
push
inc
aas
test
out
xchg
jecxz
inc
bound
inc
mov
mov
or
and
mulb
cmp
jmp
lret
xor
fstpl
movsb
xchg
pushl
pop
push
inc
or
fs
adc
aaa
jge
testb
jb
insl
lods
lods
rcrl
call
xor
iret
std
sbb
stos
insb
push
fs
jle
adc
jecxz,pn
inc
jle
jge
pushl
lock
inc
mov
adc
and
lea
dec
adc
pushl
cmp
fwait
xor
outsl
and
mov
xchg
int
jns
xchg
xchg
mov
int3
imul
jno
push
out
push
into
adc
push
dec
pop
ret
or
jo
or
idiv
in
mov
sbb
andb
aad
ljmp
addb
out
jnp
pop
jno
cmc
outsb
stos
ret
aas
adc
cmp
test
xchg
jnp
dec
sti
inc
cld
or
stos
je
nop
rol
fdiv
incl
xor
jne
jne
add
int3
in
mov
sar
scas
push
ja
bnd
or
test
or
mov
negb
xorl
inc
inc
cli
jle
mov
ljmp
jo
adc
addr16
fisubl
jno
ret
test
test
fisttpll
nop
insl
pusha
or
sub
sahf
add
cld
jg
cmp
or
cmp
std
dec
iret
test
rorl
add
notb
rcrl
roll
aad
cld
into
push
cmc
test
mov
add
dec
inc
lods
cmp
push
add
jns
cltd
rol
add
or
add
pop
shl
daa
jo
sbb
rorl
dec
scas
loop
lcall
adc
push
call
jge
push
cmp
stos
repz
push
mov
pushl
cld
js
adc
fs
leave
fwait
outsl
orb
sub
jl
stc
push
jmp
incl
mov
push
mov
xchg
push
pop
pop
fcoml
incl
push
rcrl
rcrl
or
test
in
xor
xchg
jmp
inc
cld
pusha
int3
mov
xchg
pop
adc
mov
mov
mov
jmp
push
repz
mov
leave
mov
pushf
js
adc
bound
pop
pop
adc
inc
push
sbb
pushl
mov
ret
sbb
inc
leave
mov
lock
jnp
mov
xor
decl
dec
andb
inc
adc
cld
xor
ljmp
mov
shrl
fisttps
ljmp
dec
outsb
test
test
stos
das
and
decl
mov
repnz
pop
das
dec
cwtl
or
decl
and
in
cmp
sub
in
lret
in
cs
and
cmpl
jmp
inc
pushf
inc
push
aad
cmp
xchg
lahf
mov
inc
mov
lcall
pop
das
ja
mov
test
xchg
es
jno
mov
nop
dec
lock
subl
and
iret
push
paddd
fstl
movsl
cmp
inc
fildl
ljmp
xchg
jo
rolb
es
fcos
ret
repnz
mov
jmp
mov
icebp
sub
push
push
sub
xchg
sub
shrb
jmp
call
add
xorb
in
or
cmpsb
jl
in
insb
jne
xchg
sahf
mov
aaa
cld
lcall
pop
es
sub
add
cli
out
inc
enter
dec
inc
mov
push
jg
inc
movsb
rcll
out
jle
incb
push
lea
sahf
insb
mov
or
rolb
aad
divb
dec
pushf
es
adc
inc
aaa
addr16
xchg
mov
ret
jb
adc
or
mov
imul
cmp
push
jo
add
pop
mov
int3
xor
jl
daa
push
js
into
loop
adc
pop
mov
ret
add
incl
jns
adc
scas
push
lret
jae
adc
insb
aas
repz
mov
bnd
jl
jae
cmpsl
test
incl
lock
add
out
insb
ljmp
sbb
jg
ja
outsb
sub
mov
arpl
icebp
jl
in
stos
lret
jmp
mov
jecxz
js
add
lods
lds
pop
or
clc
mov
jae
jl
dec
inc
decl
scas
push
jecxz
sbb
dec
and
sahf
push
fbstp
sarl
pushl
xchg
in
rcrb
ss
inc
pop
jge
or
sbb
mov
inc
mov
inc
xlat
lds
xchg
mov
mov
xchg
test
pushl
adc
inc
inc
pop
andl
adc
mov
fldt
ja
sar
jle
in
mov
xchg
pop
push
ljmp
sbb
scas
dec
inc
mov
je
jl
cmp
push
mov
push
lods
lcall
test
loopne
insb
dec
add
shl
mov
push
and
pop
xor
sbb
ljmp
lock
mov
lret
xorl
xchg
jg
push
push
sbb
adc
aaa
xchg
pop
fbstp
sti
cmp
jmp
hlt
xchg
adc
test
jmp
xor
call
mov
xchg
adc
fs
cmp
add
jl
adc
xchg
inc
add
int3
lret
sbb
movsl
ficompl
cmp
xlat
call
add
sbb
fcompl
arpl
pushl
jbe
sub
das
out
or
lret
stc
lcall
je
mov
xor
inc
dec
or
xor
sub
pop
test
ficompl
int
xor
inc
dec
andb
jmp
mov
and
pushf
int3
enter
xchg
jo
sti
mov
call
jb
add
fisubs
and
xchg
hlt
je
push
xchg
js
sub
sub
mov
stos
cmp
imul
cmp
ljmp
int
adc
popf
push
cli
jmp
into
arpl
mov
incl
fwait
sub
lds
icebp
add
and
test
xor
mov
int3
xlat
lea
stos
and
or
int3
sub
inc
inc
ljmp
xchg
icebp
fisubs
cmc
dec
push
pop
mov
xor
sar
pushl
jbe
popa
js
cmp
out
cmpsl
cmp
cmp
push
call
call
lret
mov
sti
movsl
in
std
mov
mov
inc
or
loop
pop
mov
jle
test
pop
decb
xlat
loopne
js
mov
mov
mov
pop
imul
stos
xchg
mov
clc
xchg
mov
loopne
xchg
stc
test
call
xchg
and
jb
fisttpll
nop
popf
mov
sbb
test
fildll
out
inc
push
mov
sub
adc
insl
bound
ja
pusha
into
jae
call
cmp
leave
cmpsl
jle
aad
ret
or
mov
std
cmpl
icebp
incl
adcl
out
mov
js
clc
sub
jns
mov
out
push
jo
loopne
jmp
fcomps
sbb
mov
pusha
loopne
lds
mov
scas
mov
fadds
ljmp
jmp
aad
ja
xor
leave
push
faddl
lea
fs
fabs
pop
fucompp
lock
jmp
pop
out
cmp
cwtl
sub
fisubrl
sbb
aaa
dec
pop
mov
fisubrs
jp
ss
add
mov
mov
adc
cs
cmp
aad
movsb
push
dec
out
clc
ret
cmc
jae
inc
movsl
lret
lea
hlt
dec
jmp
add
inc
lcall
mov
test
cld
sub
imul
call
mov
divl
and
mov
mov
iret
add
mov
scas
mov
jle
movsb
loopne
repz
imul
outsb
lcall
push
shrb
fldcw
ret
mov
inc
sub
fstpt
divb
popa
in
cmpsb
lcall
movsb
pop
mov
sbb
cmpsl
rcrl
cld
cli
ret
imul
lods
ficoms
nop
mov
sub
xchg
ss
es
decl
in
lret
mov
or
pop
and
push
or
adc
and
add
js
and
clc
dec
sub
pushf
or
push
pop
cld
pop
ljmp
inc
int3
dec
adc
xchg
push
jns
ss
mov
push
add
das
xchg
hlt
pusha
push
sbb
repnz
mov
ljmp
out
mov
mov
hlt
xchg
es
stc
push
cmpsb
pop
popf
xchg
es
cmp
js
dec
into
pop
loopne
fidivrl
fidivl
jne
add
test
fisubl
adc
call
jl
lods
push
test
int
and
or
cld
popa
cmp
dec
inc
jmp
mov
mov
pop
mov
xchg
or
lea
jg
cmc
inc
jmp
sbb
adc
or
mov
push
imul
mov
sub
mov
jp
jecxz
call
xchg
into
out
mov
jg
mov
decl
mov
in
pop
leave
push
push
aas
adc
dec
xor
cmpsl
pop
mov
push
das
aam
add
jae
push
addr16
les
xor
inc
push
je
mov
cmpl
js
adc
lcall
mov
sbb
out
enter
ljmp
rolb
subb
jmp
and
adc
sahf
sub
call
popf
popa
aas
add
pop
enter
loopne
shll
or
call
sbb
dec
jge
xor
call
stos
aaa
cmp
stos
push
mov
xchg
je
cmp
shrl
rolb
sti
out
pushl
cld
or
subl
enter
sarb
adc
mov
adc
ja
xchg
stos
mov
pop
cmp
repz
lds
lcall
mov
dec
cmp
push
into
test
sub
jg
mov
repnz
incl
push
and
lret
adc
cmp
imul
aas
fstl
push
pop
das
xchg
adc
inc
leave
in
mulb
out
add
aaa
loopne,pn
sahf
pushl
rclb
lret
clc
pop
xor
mov
dec
cld
into
je
mov
mov
aad
call
mov
icebp
adc
adc
mov
mov
adc
ja
ja
ret
fistps
jno
mov
jnp
xchg
cmc
fildll
insb
push
push
pop
pusha
mov
jo
mov
mov
add
cmpsb
cmpsl
das
push
lods
cli
scas
cmp
xor
dec
xchg
adc
dec
inc
or
sbb
push
popf
cmp
xchg
mov
lds
or
or
aas
loope
ljmp
rorb
lcall
jno
adc
pop
dec
iret
jl
add
decl
insl
idivb
xchg
jl
xchg
outsl
lds
jae
das
and
add
and
stos
repz
add
dec
sar
xor
mov
lret
lds
jo
dec
movsl
out
jbe
add
cld
call
leave
mov
jl
lods
push
or
insl
stc
iret
testb
mov
lcall
out
jl
sub
sub
aas
clc
insl
inc
js
clc
or
jge
adc
fdivs
jmp
sub
aas
sbb
lock
int3
aaa
pushf
push
sbb
pushf
jecxz
lret
jg
inc
notl
or
fwait
in
cmpsl
pushf
dec
pop
pop
test
les
cmp
adc
inc
inc
pop
fs
mov
stos
loope
sahf
xchg
push
es
cmp
test
inc
jnp
pop
incl
ja
dec
mov
sbb
lahf
add
xchg
lock
cmp
xor
bound
sub
push
sub
sti
mov
mov
sub
mov
inc
jae
dec
daa
adc
pop
divl
jno
sarb
cmp
and
push
mov
xchg
mov
mov
dec
sub
add
jbe
rorl
jge
lods
push
add
push
mov
arpl
jne
and
jg
and
sarb
scas
and
push
lods
push
std
hlt
fwait
std
test
add
lcall
stos
push
push
fldl2e
out
mov
clc
loope
mov
xor
loopne
adc
decl
repz
sahf
push
stos
add
test
cli
lods
pop
into
push
inc
sbb
push
repnz
fnsave
daa
outsl
int
addr16
inc
xchg
rcll
and
cmpsb
andb
lods
inc
sub
negb
add
push
inc
jnp
fbld
imul
ljmp
repz
aaa
and
aam
cmc
ljmp
dec
loope
push
or
cmpsl
sbb
into
mov
and
dec
stos
test
ljmp
xor
xchg
sbb
push
and
cmc
mov
out
add
lcall
mov
inc
test
sbb
or
imul
cltd
pushl
cmp
mov
imul
sbb
mov
dec
pop
mov
xchg
dec
cld
mov
jbe
add
rcl
arpl
aas
out
inc
or
jg
adc
int3
inc
mov
aam
js
fdivl
cmpsb
xchg
enter
push
icebp
out
pop
sbb
ja
adc
iret
ljmp
or
inc
add
mov
dec
testl
jae
arpl
cld
call
das
js
cltd
sahf
pop
inc
dec
and
xchg
test
mov
fs
test
add
inc
repz
or
lahf
nop
int
pusha
inc
xor
shrl
lcall
enter
dec
arpl
clc
or
mov
or
fisubl
jbe
popf
pop
ljmp
mov
adc
fstpl
xor
push
cld
xchg
xchg
insb
in
sub
mov
lcall
jmp
mov
cltd
xchg
and
cmp
jp
int3
fstpt
repnz
call
out
push
push
pop
pop
mov
into
jne
js
es
stc
imul
dec
mov
jle
sti
inc
shll
js
inc
or
das
das
decl
arpl
push
fdivl
aad
mov
and
in
sub
cwtl
xorb
hlt
sbb
fildll
les
mov
outsb
out
icebp
data16
mov
sbb
test
iret
push
push
mov
pop
push
fwait
rclb
jae
xor
je
pushl
xor
out
inc
or
push
jb
lret
test
sub
fsts
push
xchg
mov
fwait
pushl
cmp
mov
push
lds
or
xchg
or
incl
lahf
cmp
ljmp
jns
push
push
or
jo
dec
sbb
rolb
into
push
pop
dec
cld
jo
shll
rclb
hlt
loope
loopne
or
mov
pushl
add
divl
pusha
cwtl
dec
pop
inc
int3
stc
fwait
adcl
jne
mov
nop
addr16
imul
jl
mull
push
mov
or
push
inc
jb
es
mov
push
cmpb
into
or
orl
push
cmp
ds
xchg
outsl
lcall
sarl
cmp
fiaddl
decl
pop
popa
mov
test
std
outsb
sar
in
jb
inc
incl
cmp
mov
gs
adc
pop
push
push
pop
cli
repz
xor
dec
loope
jns
addr16
push
scas
mov
xchg
mov
insb
push
pop
out
sub
dec
sti
inc
mov
jne
mov
mov
in
mov
push
add
mov
sbb
jle
pop
add
orb
jae
fcoml
incl
das
enter
mov
cmp
push
cmp
xchg
pop
xchg
fucom
push
sti
mov
adc
mov
fidivs
jb
orb
and
das
testb
mov
fcomps
icebp
fs
mov
push
mov
test
inc
out
xor
fcmovnb
or
dec
arpl
js
mov
call
and
dec
data16
cmp
imul
loop
outsl
mov
dec
in
lods
fisttpl
dec
subb
xchg
lods
or
cmp
push
pusha
popf
divl
scas
xchg
lock
push
push
loope
mov
call
clc
repnz
push
push
mov
fistl
dec
in
in
mov
push
pop
and
pop
outsl
in
movsl
ja
jg
xchg
inc
test
loope
xor
orb
dec
mov
push
cmp
fcmove
in
mov
daa
adc
fsubrs
in
jbe
inc
lea
inc
and
jo
jl
mov
xchg
incl
jl
cmp
push
cmp
dec
adc
jmp
jle
clc
test
lahf
or
jecxz
pushf
jb
fnstsw
mov
sbb
ja
mov
ficoms
pop
cltd
loop
nop
jns
call
xchg
push
jmp
pop
pop
mov
push
ja
jno
hlt
sbb
add
je
ret
xor
call
mov
in
push
pop
push
out
and
incl
inc
je
pushf
test
push
jae
mov
sbb
rcl
adc
push
ret
clc
inc
movsl
lock
mov
jbe
or
in
sbb
out
ret
movsl
scas
fs
mov
ds
popa
pop
lcall
lcall
jne
add
mov
xchg
cmpsl
es
cwtl
mov
mov
sti
or
ds
ljmp
push
mov
and
jb
fldenv
insl
push
inc
pop
leave
add
icebp
lcall
lahf
pop
jbe
imul
inc
sbb
and
mov
sub
test
push
sub
dec
popf
out
add
incl
in
push
mov
mov
sbb
sbb
mov
pusha
xchg
cmp
lret
inc
fdivrs
popa
cmp
cmp
push
jnp
sbb
loope
lcall
popa
movsl
incl
push
in
jl
adc
lcall
jecxz
adc
xchg
ljmp
enter
mov
push
adc
jl
daa
loopne
movsl
or
loopne
sbb
popa
inc
frstor
movsb
cs
cs
lock
mov
sar
stc
loop
popa
sbb
pop
sub
ds
xor
test
and
addl
jecxz
gs
or
lcall
std
and
out
rol
adc
out
int
dec
cmp
lcall
pop
xor
xchg
push
dec
sub
or
fcoml
inc
call
jno
lea
shrl
sub
push
sahf
imul
cmp
decl
mov
or
inc
sahf
rol
jle
sbb
call
xchg
jmp
mov
fwait
das
lret
and
je
popa
mov
xchg
pcmpeqb
jl
mov
pop
test
pop
lea
push
or
lret
call
loopne
das
imul
daa
jl
icebp
mov
aam
cmc
xor
ljmp
cwtl
mov
pop
mov
push
sbb
daa
xor
je
push
enter
call
jmp
leave
fistpll
lcall
loop
testb
gs
jbe
call
clc
in
popa
sarl
push
cmp
stc
and
aaa
lea
repnz
xor
lds
insl
fldl
int
out
leave
push
xor
mov
adc
mov
xchg
jne
push
lea
mov
repnz
arpl
or
jle
and
mov
mov
cmp
jns
mov
shrb
shlb
repnz
jg
cli
loop
adc
leave
push
imul
out
into
sub
push
mov
push
sub
test
mov
vmread
shll
gs
dec
or
es
pcmpgtw
xor
jp
movl
cld
fbstp
scas
xor
out
push
mov
and
push
mov
or
lcall
jae
aas
push
inc
mov
ret
adc
adc
lcall
mov
dec
test
mov
rclb
lret
lods
sar
call
mov
enter
pop
stos
arpl
dec
sbb
pop
dec
das
cltd
std
xor
call
or
or
in
dec
mov
jnp
inc
mov
push
add
pop
dec
inc
inc
ljmp
std
lcall
sbb
call
mov
sahf
es
dec
out
jns
jnp
gs
push
into
mov
jbe
push
xchg
out
xor
ret
jo
jg
jge
stos
popa
and
sub
shr
test
frstor
movsl
jmp
hlt
push
add
and
fisubrl
mov
popf
fstpl
daa
andb
enter
dec
outsl
push
in
shlb
inc
icebp
daa
in
daa
or
xchg
xchg
cmpsb
add
jp
xor
std
mov
cld
das
clc
push
sub
sbb
ljmp
aam
sbb
fistpl
call
mov
cwtl
movsb
xchg
hlt
int
sub
iret
mov
mov
mov
aad
add
pusha
cmpsl
inc
in
add
cmp
in
mov
stc
cmp
repz
call
movsl
aad
and
repz
push
push
stos
jle
xchg
push
add
lret
lret
and
rolb
or
cli
cmpxchg
push
cmp
pop
inc
shrb
sub
add
imul
add
xchg
fisubl
pop
sbb
jp
or
add
call
xor
jge
cmpsl
dec
subb
add
mov
cltd
popf
arpl
pop
pushl
movsl
je
ljmp
roll
out
sub
das
xor
pop
and
cld
call
mulb
filds
pop
sbb
push
mov
and
mov
loopne
mov
test
in
push
sbb
sub
out
mov
ds
mov
and
bound
dec
ficoml
sbb
js
inc
dec
das
fcoms
inc
push
or
out
dec
inc
jle
hlt
ffree
aam
data16
nop
adc
cmc
push
gs
shl
xor
loop
cmpsl
mov
mov
movsl
add
mov
out
pop
mov
mov
push
cmpsb
push
dec
dec
mov
sub
mov
mov
pop
pop
jne
add
mov
push
out
xor
sub
jle
decl
add
scas
push
pop
mov
stos
adc
fists
add
xlat
sub
pop
ret
hlt
ret
pushl
testb
sub
xor
test
or
xchg
loop
loopne
into
mov
orl
pop
sub
fs
out
hlt
push
pop
push
mov
decl
pop
mov
pushf
fwait
pop
mov
push
je
lret
lcall
ds
lds
and
ss
data16
loop
fs
ljmp
dec
jmp
jle
dec
lock
stos
out
sbb
jl
cmp
add
mov
mov
jno
push
push
fmull
sub
adcl
cmp
insl
inc
push
cmc
insb
lods
jno
out
mov
data16
inc
jl
fstpl
xlat
loop
sub
jae
push
lcall
mov
sarb
in
bound
jecxz
out
imul
stos
incl
les
jo
mov
inc
lods
fwait
loop
jmp
jecxz
lret
dec
inc
lods
test
pop
pop
movsl
inc
inc
jns
add
lahf
push
les
imul
and
mov
add
pop
or
xchg
lock
gs
jnp
aam
pop
incl
rcr
jne
lret
mov
seto
sbb
sub
rcll
xlat
push
fcom
mov
mov
xor
xchg
je
pop
lahf
fistl
call
repnz
xchg
mov
add
lea
adc
roll
aas
adc
xor
cld
add
push
jp
jl
ljmp
cli
pop
push
mov
xchg
and
enter
lret
shrb
xchg
jnp
outsb
mov
pushl
andl
in
aaa
loop
mov
out
pop
out
mov
cmp
cmp
push
data16
jmp
cmpsl
imul
xor
mov
scas
dec
jmp
ljmp
mov
std
push
mov
pop
pop
lea
call
js,pt
adc
bound
idiv
sti
hlt
jae
add
xchg
in
insl
aam
mov
mov
xchg
sbb
mov
xchg
adc
clc
pushf
stc
pop
cwtl
adc
std
incl
pusha
add
pop
sbbl
js
xchg
pop
fwait
rcr
aas
insb
and
dec
in
repnz
retw
mov
adc
ljmp
les
nop
add
sbbb
scas
add
loope
mov
outsl
push
ja
pushf
xchg
dec
shl
jmp
pop
add
loop
xor
dec
mov
xor
inc
and
scas
dec
mov
sbb
cmp
cwtl
push
add
dec
jae
sub
sbb
in
or
sbb
inc
pop
outsb
mul
push
leave
sub
pushl
test
mull
mov
jl
js
adc
inc
inc
mov
mov
sub
daa
adc
adc
enter
decl
out
je
mov
aam
mov
repz
aad
xchg
lcall
sti
xchg
xchg
xchg
cmc
sti
fadd
scas
pop
lods
xchg
mov
loop
or
and
fcomip
lcall
mov
scas
test
inc
lret
inc
rclb
push
aas
sbb
or
fisttps
loopne
push
pop
stos
jmp
jnp
mov
aas
ljmp
nop
loopne
mov
push
mov
nop
orb
inc
pop
pop
push
ds
cltd
out
mov
cmp
inc
push
sub
fcoml
push
cltd
mov
sbb
jl
call
ja
push
mov
jmp
push
nop
lock
jmp
fimuls
add
popf
mov
adc
rorl
jl
ss
and
in
push
mov
or
or
mov
xor
sub
and
cmp
mov
mov
out
shll
daa
lret
xchg
push
mov
jg
pop
into
loop
test
jg
or
ret
xchg
push
je
repz
cmp
dec
js
popa
stc
outsl
sub
sbb
adcb
cmp
or
in
push
hlt
in
jne
outsl
adc
or
xor
lcall
push
or
jns
xor
xchg
data16
outsl
out
out
stos
jmp
xchg
int
adc
cmp
mov
sbb
mov
popa
inc
test
push
cmp
cs
fbstp
mov
fidivrl
leave
jmp
ljmp
aaa
push
sub
dec
rol
aad
out
pop
ret
dec
sahf
incl
lcall
cmp
lret
sbb
jp
loope
arpl
dec
jmp
ljmp
cmpsl
push
out
scas
outsb
leave
xor
pusha
enter
pop
jmp
es
mov
mov
repnz
int3
int
mov
out
lahf
push
add
xchg
fsubs
adc
scas
js
pop
lock
stos
int
dec
fisttpl
je
subb
fsubs
decl
rcl
jno
adc
ss
test
mov
rclb
mov
jmp
clc
je
push
icebp
or
sub
and
jecxz
gs
dec
mov
dec
push
sbb
push
test
cs
mov
jg
push
or
sub
xor
xchg
cmp
mov
pop
fmuls
aad
ljmp
sar
pop
loopne
jmp
hlt
stos
pop
mov
sbb
pushf
lea
jne
int
icebp
inc
add
mov
loop
stc
cmpsb
sub
leave
imul
fwait
cmc
insl
lock
cmpsb
movsb
jbe
ljmp
cltd
std
je
mov
into
scas
pop
mov
shl
xlat
jge
out
repz
push
mov
lcall
inc
cmp
add
in
dec
int3
xchg
sbb
jae
sbb
xchg
cli
idivb
or
call
shlb
int
inc
cmp
mov
leave
lock
cmc
sbb
jnp
jne
daa
gs
fwait
xor
push
mov
mov
jg
out
mov
subps
sub
mov
repnz
sub
addr16
popf
dec
mov
cltd
xor
pushl
ret
pusha
mov
mov
mov
loopne
mov
mov
shrb
pushf
cs
mov
push
adc
cmp
test
in
dec
jmp
sbb
ret
imul
mov
nop
jl
stos
test
pop
mov
mov
call
fstl
push
pop
hlt
sub
repz
push
pushf
rcrb
and
jp
out
movsl
popf
dec
filds
js
out
mov
push
pop
and
ja
push
jmp
xchg
pop
iret
pushl
test
or
stos
sbb
pop
mov
adc
mov
lock
jno
xlat
out
out
xor
push
or
dec
mov
call
orb
cmp
aam
hlt
es
js
je
adc
push
xlat
sahf
mov
call
lock
enter
pushf
iret
ds
rolb
repz
mov
call
int
sarl
repz
jge
sub
incl
pop
sbb
out
push
pushf
int
icebp
frstor
repz
pop
pop
pop
lret
outsl
inc
push
sub
dec
jmp
pushl
stos
pop
lcall
dec
jl
inc
ret
xchg
in
push
in
sti
pop
lahf
lods
mov
cli
lcall
sbb
add
ja
test
ss
loopne
cltd
sub
cmp
fmull
mov
adc
pop
fmull
fs
mov
cmp
movsb
mov
and
jl
push
sahf
jg
decl
outsb
jp
fnstsw
lret
insl
or
cmpl
add
fldcw
and
jmp
pop
xchg
lock
int3
mov
movsb
rsm
and
cmp
stos
cltd
lods
divl
mov
adc
lcall
xchg
dec
out
test
fucomp
add
in
cmp
dec
pop
inc
jl,pt
add
lahf
mov
sbb
or
mov
pop
dec
dec
push
nop
sbb
ror
imul
mov
fwait
cmpsb
out
jno
inc
pop
mov
inc
mov
xor
cs
ror
jae
jge
push
adc
and
std
call
jns
sbb
sbbb
test
or
push
pop
test
dec
xchg
sbb
pop
js
enter
or
or
and
ret
test
pop
cld
jmp
sbb
in
fisubs
and
sti
xor
pop
insb
and
cmp
mov
adc
call
dec
repnz
iret
fwait
test
pop
jmp
inc
icebp
sbb
jp
mov
sti
and
dec
in
pop
pushf
and
mov
sbb
std
int
mov
lcall
sbb
sbb
mov
ror
pop
dec
decl
and
ficomps
out
sti
aad
lock
mov
or
decl
in
movsl
mov
loop
push
inc
push
dec
scas
aam
xor
or
pop
inc
xchg
push
inc
stos
add
jg
fists
das
test
cmp
dec
std
mov
call
mov
decl
pop
jae
movsb
or
loopne
xchg
shll
adc
lcall
mul
insb
outsl
in
xor
std
pop
mov
ljmp
xacquire
pop
loop
rorb
push
sahf
data16
mov
sarl
loopne
daa
dec
ss
mov
mov
xchg
in
mov
mov
das
or
gs
or
in
inc
fbstp
lcall
shrb
mov
cltd
jb
pop
mov
push
out
add
je
mov
into
pop
bound
incl
add
cmp
stc
add
inc
decl
outsb
cmp
iret
mov
inc
mov
imul
add
iret
pushf
call
xor
popa
movsb
xor
xlat
xchg
xchg
add
add
dec
ljmp
into
push
shlb
in
ljmp
cmp
sbb
das
pop
push
ds
call
adc
icebp
xchg
xor
pusha
fnstcw
out
data16
xor
or
pop
ret
jl
call
and
jle
xor
cmpsl
nop
out
daa
pop
mov
push
iret
xor
pusha
pushl
divl
push
and
andb
in
cwtl
in
mov
iret
cmc
int
mov
and
cmp
dec
cwtl
out
ja
push
enter
push
movsl
xor
push
push
pop
inc
out
subb
fcomip
inc
pop
daa
outsb
fimuls
pushf
push
movb
fstl
in
arpl
aad
jmp
sbb
adc
cmp
into
sub
fistl
sbb
pop
lret
lret
call
imul
fdivs
push
inc
mov
inc
sbb
jns
cs
hlt
call
push
aad
pop
inc
mov
or
and
jle
insl
or
sar
test
dec
out
ret
jno
inc
ljmp
pop
mov
or
incl
ljmp
fidivrs
mov
mov
pop
inc
rclb
and
dec
and
xlat
mov
aas
leave
mov
call
sub
sub
shlb
cmpsb
cmp
fwait
lret
cmp
ror
xor
pushl
mov
pop
bound
cwtl
and
xor
loop
and
rcl
inc
fnstsw
adc
adc
cld
std
addr16
jbe
dec
mov
dec
clc
fists
mov
sahf
xchg
sub
rcl
je
and
lcall
adc
push
sbb
lcall
mov
ficompl
jae
lock
incl
inc
sub
pusha
pop
add
lcall
enter
pop
xor
stc
lcall
ss
and
jns
call
or
jmp
dec
inc
leave
xlat
push
es
sbb
leave
shll
jmp
jne
mov
cs
adc
add
dec
or
fistps
add
in
lods
cli
pushl
inc
push
pop
push
and
mov
xchg
and
out
std
das
lea
sbb
jp
add
outsb
pop
aad
xchg
cmp
jb
or
test
cmpsl
sub
data16
ljmp
mov
push
aam
popf
adc
mov
mov
xchg
loopne
jg
lahf
ja
xchg
adc
xorb
outsb
inc
insb
inc
add
lds
fucom
arpl
fcomip
or
dec
jp
call
pop
mov
xchg
sti
decl
clc
jne
scas
and
loopne
ds
sbb
mov
pop
decl
sub
cwtl
aad
mov
sbb
loopne
xchg
or
xchg
shrl
pop
jmp
mov
sub
mov
jns
iret
pop
and
in
or
add
inc
test
pop
mov
loopne
mov
xbegin
pop
loope
push
cmp
lahf
mov
dec
in
mov
scas
inc
fisttps
xchg
fs
in
inc
ljmp
or
xor
cmp
mov
mov
movsb
mov
push
adc
ja
fisubs
adc
add
add
aas
ss
popw
sbb
in
and
hlt
jo
mov
or
negl
ret
mov
out
cmp
or
cld
xor
inc
std
lea
jmp
xor
out
subb
sti
les
test
outsb
mov
jns
sub
ljmp
or
incl
cmpsb
shlb
ljmp
push
adc
push
test
mov
sub
xor
adc
inc
outsb
dec
mov
gs
pushf
or
test
lcall
loop
pop
pop
rorl
fisubrs
repnz
inc
adc
cmpb
repz
stos
mov
mov
fists
xchg
dec
bound
push
movsb
mov
dec
push
push
subl
dec
or
push
adc
fsubp
jnp
add
pushl
out
repnz
clc
jl
xor
mov
insb
icebp
jle
adc
adc
jmp
rcl
mov
cld
push
out
mov
dec
add
mov
cmp
sbb
in
stos
push
outsb
in
and
push
adc
fistpl
stc
vmovsldup
push
push
lcall
std
jg
fs
dec
mov
inc
xor
dec
movsb
cs
mov
cltd
hlt
lcall
adc
arpl
pop
adc
sbb
cmp
rcrb
sub
scas
lcall
call
jb
call
xchg
shlb
cmp
hlt
data16
lcall
shl
js
inc
fidivrs
enter
test
out
jl
jne
out
jb
cmc
xor
jmp
mov
lahf
loopne
inc
jno
cmpsl
popa
xchg
test
push
leave
or
xor
xchg
imul
and
out
lock
sahf
inc
add
sub
push
mov
adc
es
jmp
push
add
mov
jmp
cmc
sbb
in
and
cmpsl
test
stos
stos
addr16
decl
out
jo
cmp
add
out
inc
dec
inc
lods
mov
sub
enter
jmp
push
inc
je
add
repnz
pop
mov
push
pop
rclb
mov
vxorps
mov
fcoml
call
pop
sbb
call
push
mov
adcl
in
cmp
push
arpl
fisttps
inc
es
roll
xchg
ds
lret
dec
stos
test
call
or
push
repz
mov
loop
mov
mov
jo
pop
popf
mov
jmp
cld
mov
jnp
mov
xor
dec
xor
sbb
xlat
sbb
dec
mov
cmp
ljmp
inc
or
inc
sbb
add
pop
sbb
movsb
mov
ret
sbb
xchg
fimull
pop
jle
xor
sub
insb
pop
and
add
lds
jg
add
lock
fcomi
adc
aas
mov
xchg
incl
inc
sarb
mov
xor
add
icebp
decl
pop
pusha
cltd
cld
cmp
dec
jp
clc
cltd
dec
testl
mov
lcall
rep
stos
aaa
push
stos
cmp
dec
push
push
and
cld
std
xchg
mov
pusha
dec
cmp
sti
jo
jbe
jb
and
adc
jb
ljmp
mov
mov
ljmp
imul
push
das
ss
sahf
jnp
decl
test
inc
cmp
imul
mov
or
push
and
jmp
rolb
push
cmc
in
out
jmp
repnz
mov
subl
jg
or
pop
in
mov
ja
dec
xor
jno
ficomps
jne
loope
pop
cmp
inc
cmp
ds
movsl
push
jl
in
inc
out
inc
repz
bound
or
lcall
mov
popa
int3
push
cmpsb
xor
popf
cmpsb
decb
stc
mov
ja
inc
jp
stos
je
and
xchg
mov
pop
mov
cwtl
cmpsl
adc
clc
cmp
jb
or
ljmp
aaa
dec
stc
mov
mov
xchg
cli
pushf
std
mov
sbb
daa
int3
fdivp
decl
add
jl
js
push
xchg
jb
idiv
add
loop
ljmp
fimull
mov
bound
loop
lret
dec
cld
lahf
pop
sub
and
shlb
incl
cmp
mov
dec
pop
frstor
outsl
insl
mov
aam
loopne
cmp
or
icebp
jns
call
ja
mov
sti
mov
pop
add
std
jmp
xchg
xor
lods
leave
movsl
bound
mov
bnd
and
mov
pushl
mov
push
rorb
dec
femms
js
movsb
add
outsl
dec
out
dec
dec
mov
call
mov
adc
iret
inc
insl
cmpsb
adcl
enter
sbb
out
add
fucomp
jge
add
lods
cld
xor
dec
cltd
cmc
fnstsw
orl
out
inc
lock
mov
arpl
mov
sti
inc
cmpb
pop
cli
je
std
jmp
adc
adc
aam
adc
cld
cmp
mov
stc
push
or
jmp
sub
jo
mov
iret
daa
inc
idiv
xor
dec
pushf
xchg
xchg
or
pop
xor
incl
xorb
js
lahf
rol
and
mov
inc
mov
sbb
ret
pop
repz
sbbb
inc
lods
or
stos
incl
pop
and
or
std
xacquire
mov
orb
test
jo
inc
push
jno
jnp
pop
into
mov
push
mov
hlt
fdivs
xor
jbe
imul
lods
icebp
ret
addr16
test
inc
movsb
xor
mov
lcall
ljmp
xchg
call
ficomps
daa
outsb
sbb
jne
fadds
pop
test
jne
addr16
insl
pop
mov
dec
add
out
mov
mov
loop
jp
mov
lcall
xchg
ljmp
clc
dec
sbb
int
cwtl
imul
movb
popf
push
dec
cmp
inc
sbb
ljmp
mov
jmp
sub
jg
in
jns
aaa
fldenv
repnz
out
test
jae
ss
add
mov
out
jmp
call
mov
dec
pop
popa
scas
sbb
ss
cmp
inc
push
dec
or
out
mov
stc
adc
xor
or
fnsave
pop
lret
fucom
jmp
inc
sbb
enter
aam
outsb
inc
call
sbbb
loopne
sbb
fcmovnu
call
inc
les
mov
mov
hlt
in
out
gs
incl
icebp
inc
pop
shlb
and
in
jge
mov
sbb
dec
xchg
jns
pop
xchg
sbbl
cmp
inc
and
push
in
adc
add
mov
or
mov
and
inc
ljmp
incl
test
dec
mov
push
xchg
cmp
inc
popf
pushf
adc
mov
jno
lret
cmc
xchg
jmp
ret
dec
mov
dec
xchg
dec
cmp
fs
dec
sub
mov
pop
mov
inc
xlat
or
sub
cmpsb
jae
push
ret
or
orb
jmp
les
push
rcrb
dec
cmp
mov
jg
mov
mov
fisubrs
push
mov
cld
jl
ret
movsl
push
into
popa
stc
inc
xchg
mov
lahf
sub
decl
jbe
negl
in
or
jnp
inc
lcall
jns
pop
mov
sbbl
scas
mov
mov
loopne
insb
jge
mov
popf
ljmp
xor
adcl
add
out
mov
jmp
sub
sub
aas
fldl
imulb
or
hlt
pop
xor
jp
cli
xor
xchg
sbb
rcrl
jbe
cmpsl
in
test
mov
out
jns
add
cmp
and
inc
test
sub
add
movsl
jg
repnz
mov
jle
incl
push
jae
mov
mov
jo
jle
mov
pusha
add
inc
inc
shlb
dec
stos
dec
mov
pushw
dec
dec
nop
mov
scas
lods
mov
cmp
inc
ljmp
pop
ds
cmc
mov
fistl
stc
adc
push
andl
shll
mov
lods
jl
sub
addb
loop
mov
jmp
test
movsb
pop
ljmp
push
ljmp
add
pop
mov
adc
lcall
call
push
pop
cltd
fcoms
push
push
repz
ret
add
add
xchg
mov
mov
imul
jnp
jnp
cltd
or
xor
mov
sub
ret
xchg
xor
pushf
lcall
repz
cs
int3
xchg
jns
or
sub
inc
cmc
hlt
jo
adc
dec
mull
jne
or
mov
int
test
mov
dec
adc
mov
jb
xchg
adc
outsb
outsl
dec
mov
adc
and
cltd
push
adc
imul
imul
mov
es
inc
mov
add
daa
gs
push
rorb
dec
out
xchg
push
jmp
mov
dec
jp
and
push
std
adc
ljmp
xorb
dec
pop
add
dec
or
ds
aad
adc
push
gs
mov
hlt
ljmp
shlb
aaa
fsubrp
shlb
into
enter
push
xor
sub
mov
lods
pop
and
pop
fdivr
ljmp
iret
mov
stos
in
sbb
out
cld
dec
sti
in
adc
rcr
jg
push
xchg
je
imul
add
sbb
xchg
insb
mov
mov
adc
daa
sbb
paddd
mov
inc
mov
negb
cli
leave
ret
push
filds
inc
mov
mov
in
mov
pushf
std
mov
mov
sub
fldcw
call
das
in
sub
adc
ret
xor
sub
pop
mov
loopne
push
mov
adcb
dec
pop
clc
incl
cmp
jl
aas
mov
sbb
cmp
pop
aad
and
nop
lods
dec
and
clc
mov
cmp
or
cli
outsl
pusha
jle
hlt
jg
call
push
mov
ljmp
dec
mov
pushl
mov
push
es
push
and
inc
out
mov
test
push
mov
les
ljmp
les
shr
mov
data16
mov
stos
push
and
jmp
pushf
data16
inc
mov
xchg
rcr
dec
dec
clc
call
mov
jmp
sbb
ljmp
sub
fistpll
inc
in
pop
add
xorl
shl
fcmove
aad
test
adc
sub
dec
inc
adc
clc
repnz
rolb
xor
or
push
div
add
mov
popa
fdivrs
lock
cli
add
push
ljmp
mov
orl
cmpsb
adc
aam
jmp
mov
xchg
pushl
int3
sub
xchg
sub
dec
or
iret
inc
sbb
fisttps
cmp
aaa
fadd
or
int3
sbb
sar
call
std
or
add
in
cmc
cltd
lcall
ja
mov
or
jmp
outsl
and
pop
lret
push
and
sbb
mov
test
lcall
add
inc
adc
lret
adc
addr16
insb
mov
mov
fdivr
sbb
clc
cwtl
add
icebp
jp
cmc
stos
push
xchg
sbb
mov
mov
xchg
jmp
js
ja
mov
sbb
movsl
pop
cmpsb
push
repnz
int3
addr16
cltd
xor
lret
dec
loopne
mov
mov
addr16
mov
xor
ljmp
sub
adc
daa
out
cmp
out
xchg
dec
jno
fcos
push
mov
jp
push
arpl
lock
fnstsw
xchg
ds
xor
lds
jno
loop
add
jmp
sbb
mov
sub
cmpsl
enter
cltd
loope
arpl
mov
out
ljmp
jnp
xor
dec
dec
mov
pop
push
pop
inc
mov
mov
imull
inc
sbb
adc
test
lret
push
repz
mov
mov
pop
sbbb
decl
push
jb
je
das
xor
xchg
and
outsb
loop
push
call
lahf
call
lcall
cmpsl
stc
inc
lods
fcomps
ljmp
clc
mov
sbb
decl
jo
sbb
enter
jbe
pop
lret
jl
and
nop
fs
jge
mov
lods
ret
addr16
and
jg
popf
inc
cmp
outsl
or
daa
aaa
mov
prefetcht1
cli
inc
push
mov
cmpsb
fisttpll
cld
cmpsb
dec
pop
sbbb
fwait
mov
or
sbb
and
mov
fnstenv
jbe
out
mov
out
push
scas
clc
call
pusha
mov
push
xchg
lea
push
pop
mov
sbbb
xor
pop
cmp
imul
push
dec
nop
ret
aas
cmp
out
dec
loop
imull
and
xchg
jl
pushl
insb
loop
insl
add
lods
jg
ret
xor
dec
clc
pop
inc
mov
lcall
add
cmp
lret
dec
xchg
and
lcall
jle
mov
and
adc
incl
out
scas
sub
add
aad
loopne
fcomps
pop
xchg
inc
sub
incl
divb
xchg
hlt
dec
sbb
or
adc
ss
inc
inc
shrb
scas
jns
inc
fsubs
jg
inc
xor
lock
jl
push
and
fisttpll
push
push
bound
cmp
scas
popf
xor
lcall
mov
std
and
bound
lods
lea
enter
jmp
fnstcw
mov
loope
cmp
cmc
dec
push
aas
stos
sti
daa
repz
dec
inc
mov
pushl
lahf
outsb
sub
fcomp
push
mov
mov
sub
xorb
or
mov
sti
loop
jae
ficoml
pop
mov
dec
dec
je
lret
inc
mov
xor
dec
lcall
data16
jno
in
xchg
repnz
lods
mov
icebp
incl
popf
scas
jg
test
add
push
sub
inc
pop
xor
jecxz
cmpb
fmuls
xchg
daa
fcomps
pop
push
adc
repz
jmp
inc
xchg
inc
mov
jge
test
and
cmp
sti
imul
cs
and
push
lret
xchg
inc
movsb
loopne
push
cmp
push
jb
lods
mov
xor
stos
cmp
icebp
call
out
sub
fwait
addl
push
sar
inc
pop
cmp
push
sbb
addr16
stos
mov
pushl
outsl
mov
adc
fsts
lret
inc
or
add
fbstp
pop
cwtl
incl
mov
or
pop
fdivr
jp
adc
lcall
aam
sahf
sbb
add
pop
or
or
jle
fwait
lock
xlat
inc
jmp
and
sbb
lcall
xorb
test
jo
les
aaa
test
push
xor
adc
ds
lock
and
lds
testl
add
dec
cmpsb
lahf
inc
repz
cmp
sub
scas
push
mov
gs
push
incl
cmpsl
pop
inc
fldt
mov
or
xchg
pushf
add
js
test
repnz
call
mov
xor
pop
clc
sbb
aaa
cmpsb
xor
lcall
jecxz
dec
xor
cmpsb
rolb
sub
call
leave
jp
xchg
mov
subb
add
fistl
mov
popf
or
out
and
in
decl
sbbl
pop
sbb
js
cltd
cld
movsb
stos
inc
xchg
and
repnz
cmp
or
orl
jne
leave
and
inc
sbb
mov
add
fisubs
andl
bound
add
xor
inc
pop
mov
push
pop
gs
mov
jp
sub
mov
dec
das
ja
xorb
cmc
lods
rcl
mov
add
in
cmc
stos
sbb
cli
call
test
jp
aam
inc
gs
fsubl
cwtl
pop
test
mov
jae
sarb
mov
cmp
mov
pop
xor
call
rcrb
mov
mov
cli
pushf
pop
add
lods
pop
dec
pop
les
out
movsl
cmp
out
jg
rorl
mov
fsts
into
mov
inc
cmpsl
jle
mov
pop
cmpsb
adc
jl
jge
jp
mov
sbb
jecxz
add
jmp
ljmp
xor
xchg
sub
jno
ret
adc
es
sub
mov
lcall
fs
xor
shlb
shrb
outsl
inc
or
fbld
sbb
movsb
inc
cmp
mov
add
mov
xlat
sar
incl
cmp
dec
je
scas
sti
ss
push
fimull
xchg
jb
xor
xchg
sahf
int3
cmp
decl
scas
pop
insl
aam
jle
jo
ss
jnp
in
outsl
dec
dec
pop
dec
and
into
call
jp
frstor
fs
jp
mov
push
sub
mov
pop
mov
pushl
mov
rol
fcmovnu
mov
push
push
jbe
dec
mov
es
aaa
mov
pushl
sbb
dec
mov
jecxz
mov
je
cmp
pop
xchg
mov
xor
and
pushl
notl
int3
rcl
inc
stos
ret
insl
loope
fiaddl
or
xor
sarl
mov
nop
scas
and
mov
xor
out
insb
sub
push
decl
popa
and
lcall
jle
rcrb
shlb
mov
jl
into
enter
xchg
mov
mov
cmp
cwtl
xor
mov
mov
push
mov
movsl
sbbb
inc
shll
cmp
dec
pop
or
call
stc
pop
inc
cmp
adc
pop
pop
mov
cmpsl
xchg
and
lcall
and
and
call
mov
push
arpl
mov
sarl
mov
fsubl
imul
dec
inc
xchg
loopne
mov
lea
cmc
push
cld
fldt
fisubl
mov
dec
and
xchg
leave
push
jbe
rcrl
jb
push
xchg
test
fcoms
sub
scas
mov
xchg
fs
mov
shrb
inc
mov
sbb
ljmp
ficoms
mov
sbb
add
mov
adc
push
iret
pusha
mov
pushl
xchg
mov
hlt
imul
fbld
cwtl
and
rorb
mov
test
incl
inc
jmp
mov
and
pop
dec
fmull
and
xchg
test
add
xor
decl
pop
or
or
in
leave
push
xchg
aas
jbe
jg
cmpsb
lcall
pop
push
stc
in
fs
out
sbb
mov
pushl
mov
mov
ret
dec
cmpsb
icebp
popa
outsb
das
nop
pop
push
out
sbb
xchg
sbb
sahf
mov
cmp
mov
loopne
lods
push
adc
adcb
rcll
add
loope
or
xor
xchg
std
aaa
insl
pop
push
xchg
ret
clc
xchg
mov
cmc
sti
aad
cli
not
insl
inc
mov
inc
les
adc
jne
dec
out
shll
jbe
fwait
pop
out
pushf
popf
in
insb
leave
lea
xchg
fwait
cmpsb
push
repnz
addr16
out
incl
xchg
movsb
lret
cltd
subb
jne
or
fxam
jg
insb
push
cld
jmp
sbb
pop
mov
push
mov
cld
fdivr
jle
xor
xor
into
movsb
loop
pusha
add
xchg
ljmp
sar
int3
popa
fcmovu
pop
pop
ja
fucomp
divl
insb
cltd
push
data16
jmp
or
adc
push
in
and
and
and
hlt
fcomip
jmp
inc
call
daa
push
imul
pushf
mov
jnp
push
jmp
mov
add
pop
faddl
adc
scas
cmp
mov
cmc
pop
jb
fildll
fwait
lcall
loopne
icebp
es
push
push
dec
and
pop
jge
out
incl
jmp
and
inc
imul
mov
push
in
push
lods
jp
decl
add
outsl
lock
loop
repnz
dec
push
jb
dec
cmp
icebp
and
lcall
push
sbb
aas
add
pop
loope
sbb
insl
idivb
and
push
push
mov
out
cmp
pop
dec
ss
pusha
pop
mov
jg
xor
xchg
idiv
push
inc
xchg
dec
cmpsb
rolb
movsb
push
jnp
inc
aaa
out
push
cld
lcall
icebp
sub
addr16
mov
out
mov
test
add
aam
fdivrp
pushl
push
sbb
mov
mov
movsb
mov
enter
jp
dec
adc
shl
cmpsb
sbb
jmp
nop
jmp
adc
ja
scas
sub
add
push
out
or
out
push
and
cmpb
ja
scas
rcll
xlat
mov
add
sbb
in
or
xchg
jo
testb
xor
ret
xchg
mov
mov
insb
dec
fwait
pop
lcall
sub
fidivrs
inc
fcoms
push
xchg
cld
lret
ret
mov
rol
mov
dec
shl
and
cmp
daa
mov
cli
mov
fcoml
add
cmp
ljmp
jne
jl
dec
push
inc
mov
or
scas
dec
cltd
push
ljmp
shlb
bound
inc
adc
xchg
sub
sbb
cld
outsl
mov
push
test
sahf
sub
mov
push
ret
repz
test
jbe
decl
inc
in
rolb
rcl
dec
movsl
jbe
out
insb
mov
add
cmp
cmpsl
push
pop
orl
inc
xor
clc
movsb
stos
in
sarl
mov
das
cmp
fdivr
adc
xlat
push
cmp
aaa
inc
push
ljmp
cmp
out
sbb
int3
outsl
add
les
int3
sub
jno
jns
add
ljmp
cmpb
push
dec
mov
outsl
add
jne
incl
push
pop
dec
lret
addr16
ret
cld
jge
mov
incl
push
int
movl
js
push
aam
enter
push
iret
xor
int3
nop
cmc
decl
xchg
iret
lods
jecxz
lret
mov
movsl
mov
or
negb
lcall
mov
mov
incb
aam
sbb
mov
adc
ljmp
imul
and
mov
sbb
cli
adc
sbb
jg
inc
sbb
mov
mov
fld
out
pop
cmp
das
clc
jg
or
dec
and
ret
or
cmp
sbb
mov
test
insl
add
mov
in
xor
push
jnp
in
test
and
cmpsb
mov
push
scas
add
cld
clc
dec
insl
inc
icebp
sbb
fwait
or
decl
add
out
jae
inc
mov
lds
mov
cmp
adc
stc
outsl
push
popa
cmp
sbb
fldcw
mov
ret
dec
out
popf
shll
fnstenv
jnp
call
mov
aaa
scas
push
icebp
cmpl
push
adc
adc
loopne
dec
mov
adc
iret
sahf
jecxz
jp
mov
loopne
mov
addr16
lret
int3
jl
fst
jg
test
mov
mov
mov
out
xchg
jns
lds
std
incl
cmp
flds
cld
test
mov
addr16
ja
loop
mov
outsl
cmc
mov
push
out
mov
mov
decl
ljmp
outsl
fdivrl
xor
stos
cmp
adc
stos
add
decl
movsl
fadds
mov
and
adc
cmp
jle
mov
jno
pandn
adc
add
aad
lcall
adc
sbb
repnz
ljmp
rol
push
jmp
sub
mov
jne
pop
les
push
lds
mov
push
ds
dec
loopne
xchg
push
popf
loop
ret
pop
shll
push
dec
and
notb
das
or
add
lcall
xchg
and
dec
test
adc
jg
mov
mov
in
mov
mov
inc
jle
jno
stc
sahf
testl
xchg
or
dec
jecxz
clc
lcall
stos
mov
xorl
mov
adc
push
jle
mov
imul
mov
xor
cmc
pop
enter
jne
push
aam
mov
ljmp
jg
andb
icebp
loope
and
push
aam
ljmp
add
push
inc
sub
in
sbb
sbb
and
pop
loope
xchg
fdivs
or
adc
decl
or
outsb
jo,pn
negb
pusha
inc
cwtl
pop
dec
out
mov
cli
or
int
lock
xchg
into
insb
push
aas
pushf
push
lock
push
loop
xlat
cltd
and
mov
xchg
nop
lahf
arpl
pop
sub
and
ljmp
orl
or
or
pop
outsb
ds
pop
jne
negl
rorl
decl
nop
mov
popf
imul
cmc
pop
push
push
pop
enter
incl
xchg
aaa
dec
cld
sahf
call
inc
lahf
jecxz
mov
dec
pop
pop
push
inc
out
xor
cmpsb
sarb
adc
pop
mov
cwtl
aad
push
or
jg
pop
call
inc
stos
les
test
cli
ljmp
xchg
mov
sbb
xor
stos
out
shld
mov
in
imul
push
test
adc
fabs
loop
sub
mov
cmp
xchg
lret
loope
call
call
aad
ds
xchg
popf
fsubl
fdivrl
push
iret
addl
jmp
jae
push
fsubs
push
ss
cwtl
shll
sbb
mov
loopne
into
add
sti
adc
jp
pop
jns
icebp
fistps
mov
js
mov
xchg
dec
cmp
test
stc
and
add
sub
aad
jb
jge
call
xor
fwait
sub
in
cmp
mov
xor
sub
sub
mov
test
and
sub
int
movsb
pop
mov
icebp
dec
insl
dec
sbb
adc
mov
inc
adc
pop
mov
inc
fcompl
mov
xor
dec
push
jb
jg
call
xchg
mov
mov
cmp
lea
inc
cmpsl
mov
lcall
out
enter
test
mov
scas
icebp
inc
mov
hlt
testl
mov
fmuls
andl
lcall
aaa
fwait
mov
lahf
cmc
push
sti
cld
dec
dec
cli
dec
jge
fadds
repnz
adc
dec
mov
mov
jne
or
fldenv
loopne
fdivrs
hlt
dec
sub
lret
adc
pushl
mov
mov
mov
std
jl
inc
dec
bound
into
shll
movsb
sub
and
lcall
cmpsb
sbb
repnz
data16
sub
inc
int3
lcall
incl
ficomps
adc
mov
pushf
xchg
test
mov
enter
jle
je
mov
mov
rorb
lea
inc
ds
cmpsb
ljmp
rorb
inc
sarb
mov
jmp
dec
ljmp
pop
mov
push
ss
mov
or
xchg
fisubrl
mov
insb
in
das
jg
pushl
insl
inc
jl
fs
jo
jns
dec
sarb
pop
stos
push
decl
aam
pushf
out
jb
dec
mov
cmp
nop
or
cmp
jp
call
mov
sub
sti
jno
pop
xor
pop
or
lea
out
and
es
ljmp
and
fmulp
loope
push
and
mov
jmp
mov
lods
fwait
push
lahf
into
repnz
mov
sti
out
call
clc
icebp
mov
int3
mov
dec
jmp
push
aad
pop
push
movsl
ficoms
stos
jae
lea
loopne
test
in
jnp
addr16
mov
xlat
dec
shll
orl
ljmp
mov
jecxz
stos
jge
sbb
je
cmp
or
cmpsl
mov
add
cmpsb
mov
adc
ljmp
cmc
test
mov
jmp
xor
loopne
fdivr
adcl
push
cmp
and
push
mov
sub
movsl
icebp
rolb
jg
fwait
jmp
stc
inc
xchg
xchg
inc
lcall
aaa
clc
loop
or
cmp
inc
ja
mov
xor
cmpsb
aas
lcall
jmp
nop
push
xchg
jns
cmc
mov
cmp
loop
xor
subb
cld
fstp
add
sub
nop
xchg
shl
push
xchg
cmp
cld
ljmp
addr16
mov
sub
aad
dec
fs
aad
fsub
pop
ljmp
and
push
pop
rorl
and
or
jmp
cmp
cwtl
lods
sbb
xor
mov
loopne
sar
pop
push
into
cmp
lahf
sub
xor
or
arpl
mov
dec
mov
movl
jae
leave
in
jmp
push
out
pop
mul
xor
dec
lahf
mov
popa
lret
cmp
cwtl
movsb
lahf
sbb
pop
inc
clc
inc
cmc
lcall
scas
add
mov
aaa
pop
cmc
sub
inc
mov
lock
sahf
lock
fbld
test
sar
sbb
or
xchg
or
mov
mov
ffreep
jns
decl
cwtl
out
cmp
in
xor
mov
push
and
or
cvtdq2ps
orb
or
stc
je
inc
leave
out
mov
out
icebp
je
sub
sub
scas
mov
pop
loop
mov
jmp
je
gs
mul
xor
push
fs
mov
cmp
push
mov
sbb
pushl
outsl
add
mov
pop
cmp
cmp
jp
mov
adc
xchg
xchg
adc
xor
idiv
call
cmc
cmp
negb
adcb
out
or
adc
adc
ficompl
in
jne
mov
adc
lods
xchg
add
pop
pop
ja
call
jb
pusha
mov
gs
or
test
imul
insl
hlt
in
les
mov
mov
adc
scas
pop
cli
adc
push
xor
movsl
dec
mov
pushl
lret
cmp
jecxz
and
cmp
lods
lods
js
imul
ljmp
mov
jecxz
adc
cmp
es
cmp
inc
in
push
dec
popf
outsl
sub
mov
push
push
inc
xchg
add
and
data16
clc
decl
xchg
mov
shll
push
xchg
adcl
ljmp
adc
mov
leave
inc
sub
mov
xchg
pushl
cmp
sbb
and
push
jle
clc
sbb
push
xor
xor
sbb
jmp
push
andl
xlat
xor
xor
mov
xor
lock
jg
push
repnz
mov
test
lds
mov
push
mov
incl
lret
pop
fucomip
lea
push
mov
push
jle
mov
pusha
ja
sbb
bound
fadds
ljmp
inc
sbb
adc
icebp
fldcw
and
mov
xchg
push
or
jle
sarl
clc
adc
and
jecxz
sub
pop
movsl
ret
stc
inc
xor
add
into
loop
ficompl
adc
jmp
push
mov
repz
xor
test
lret
sbb
push
add
add
mov
sub
or
mov
xchg
mov
cltd
cmp
jge
mov
and
es
or
xchg
mov
mov
push
imul
movl
and
pop
icebp
xor
fldl
cwtl
fsubl
fistpl
or
jmp
inc
dec
adc
cmp
bswap
fstpl
clc
outsb
or
mov
jo
lret
ret
scas
jmp
pop
mov
insl
ljmp
cmp
popa
xchg
push
and
pop
push
gs
mov
movsl
adc
out
lret
add
xchg
xchg
out
fsubrp
aad
push
push
pop
fcomip
mov
popf
dec
xor
xor
js
xlat
or
stc
push
lea
jo
xchg
testl
mov
arpl
int
add
lods
fdivs
and
je
loopne
enter
cmc
mov
das
adc
aam
test
test
mov
ret
dec
pop
pushl
xchg
sbbb
mov
stos
xchg
pop
and
sub
mov
dec
sub
push
sbb
jmp
stos
jne
cmp
ljmp
dec
shl
lcall
ret
aam
xor
in
jae
int
mov
mov
sti
or
push
sbb
mov
sbb
ds
icebp
nop
clc
lcall
lahf
and
gs
mov
mov
inc
test
das
sub
call
mov
dec
fisttps
testl
jbe
jb
adc
ficomps
lret
dec
cltd
adc
clc
mov
pop
addr16
fadds
loopne
jmp
dec
sbb
fwait
out
negl
push
call
pop
push
dec
lods
adc
dec
mov
mov
ds
lcall
or
mov
dec
xor
int3
fldcw
jmp
mov
mov
stc
sahf
enter
pop
mov
jmp
jg
mov
mull
push
xchg
adcl
rcl
sbb
jle
fcomip
xchg
stc
fidivrs
xlat
jb
ret
imul
cs
sbb
mov
pop
sbb
ja
and
xchg
pushl
jno
dec
add
in
jae
mov
pop
dec
or
inc
push
jae
rcr
jns
mov
mov
xor
bound
mov
mov
mov
pop
mov
les
mov
add
mov
xchg
outsl
ljmp
add
mov
push
or
lock
clc
popf
mov
push
jmp
jae
push
jge
div
js
sti
incb
out
or
jbe
jbe
cmp
stos
movsb
mov
mov
les
dec
jb
mov
ficoms
xchg
fst
push
shlb
std
push
jmp
call
and
in
lods
inc
and
sub
jbe
adc
add
mov
dec
loopne
test
ret
hlt
xor
popf
mov
xchg
mov
pushl
stos
lods
js
mov
lret
push
jmp
in
lret
pushf
std
mov
pop
cld
call
fcomip
pushl
jbe
insl
jbe
mov
shll
sbb
sti
jle
aaa
call
icebp
inc
dec
push
mov
rolb
lcall
repz
jae
fidivrs
jo
ss
push
jg
dec
cld
jecxz
push
pop
call
pop
test
fimuls
pop
sar
decl
rcrb
pop
pop
scas
xor
fisttpl
xchg
jg
mov
mov
cwtl
mov
pushf
movsb
fwait
jl
jmp
cmpsb
cmpsb
out
aaa
mov
inc
iret
imul
mov
add
into
scas
mov
cld
sub
cld
sub
fcomip
xlat
inc
mov
out
in
or
lock
les
nop
int3
or
jge
cltd
mov
push
nop
gs
sahf
sub
cmp
xor
sbb
jnp
xor
cltd
nop
fdivr
jl
xchg
fs
ljmp
out
pop
jnp
xor
cmpsb
cmp
sub
sub
mov
pusha
dec
ja
cmpb
jle
push
xor
mov
push
mov
lock
jbe
mov
jns
leave
pushf
mov
jmp
int3
sbb
mov
mov
push
pop
sub
add
js
add
xor
pop
cmpsl
pop
sub
sub
or
pop
add
bound
into
jl
fbld
call
and
mov
pop
addr16
inc
stos
jle
push
sbb
iret
scas
jmp
in
and
cmp
or
aaa
lret
add
std
mov
or
jg
push
ljmp
call
lea
pop
fprem1
mov
jg
inc
dec
stc
js
in
and
clc
dec
dec
sbb
sub
xor
add
push
mov
xor
repnz
jge
int
adc
ljmp
mov
jge
push
cmc
insl
cli
xor
pop
cmp
or
arpl
lods
lods
pop
sub
cmpsl
lcall
dec
nop
and
sbb
dec
test
pusha
xchg
inc
movsb
adc
sbb
decl
jle
ljmp
enter
jg
int
xchg
mov
lcall
dec
inc
dec
addr16
ljmp
es
mov
adc
cld
ljmp
je
cltd
outsl
divb
mov
jbe
mov
sahf
adc
lret
mov
pop
call
mov
mov
sub
cmp
int3
adc
push
shl
lret
dec
insb
push
or
aad
ja
fwait
or
mov
pop
pop
inc
jne
jg
xchg
mov
test
imul
jg
pop
flds
mov
and
add
push
push
pop
mov
xchg
push
jmp
cmp
dec
mov
or
ljmp
jge
adc
cli
inc
cmp
test
sbb
sub
add
cmc
ljmp
jl
fsubl
sub
push
and
lcall
in
xchg
je
add
loop
in
scas
fists
or
stos
cld
lods
addr16
lret
xchg
sbb
test
iret
clc
ret
cmp
iret
movsl
jl
pop
cmp
cmp
mov
mov
rolb
sub
xlat
sti
mov
fmuls
clc
incl
mov
cmp
ja
nop
icebp
or
outsb
rorl
ljmp
sbb
mov
lahf
xor
nop
mov
jns
sbb
jno
sub
pop
movsl
aaa
pop
ds
fcoms
pop
xchg
jo
rolb
cmp
and
test
cmp
movsl
clc
call
or
add
dec
pop
int
sbb
add
add
push
add
push
and
add
cli
adc
push
hlt
call
cld
mov
and
cmp
cs
test
sbb
popa
add
jg
pop
push
dec
pusha
and
loope,pt
ja
fistl
shll
lcall
dec
out
aas
mov
dec
and
adc
jo
shrl
les
pushl
add
mov
jbe
cli
dec
or
cmp
dec
pusha
jb
imul
xor
test
xchg
gs
cmp
push
adc
sub
rolb
jmp
jne
or
pop
push
es
adc
pushl
mov
mov
mov
mov
push
pop
data16
pushl
stos
pusha
sub
ljmp
or
inc
into
or
cmpsb
incl
addr16
pop
or
pushf
mov
loope
add
cmp
aam
push
adc
and
mov
cmc
push
push
mov
lea
push
sbb
sub
mov
in
mov
lcall
mov
ret
gs
stos
ljmp
lds
gs
and
pop
scas
xchg
mov
nop
out
jp
shrl
fidivs
out
dec
pushf
daa
inc
ss
sbb
rorb
ljmp
cs
inc
stos
fs
in
mov
sbb
shl
ss
mov
adc
lods
sub
xlat
push
sarb
sbb
lcall
jg
gs
negb
int
sbb
sub
dec
dec
jb
lcall
lcall
push
pushf
inc
cmp
mov
and
mov
push
gs
sub
clc
mov
sbb
pop
mov
shlb
adc
mov
add
pop
inc
testb
outsb
jo
and
ljmp
mov
mov
je
cmp
cli
shl
stc
pusha
push
jecxz
test
jno
xor
sarb
sub
jmp
sub
vmread
jg
xor
pop
mov
lds
jecxz
out
sub
call
test
cltd
inc
addb
dec
pop
dec
lods
filds
push
sub
ljmp
loop
pop
andb
in
popa
push
add
imul
sbb
push
pop
movsl
adc
cmp
pop
aas
adc
int3
lods
mov
out
fwait
negb
jg
fs
roll
popf
ret
cltd
scas
mov
fs
dec
gs
scas
or
je
xor
cmp
incl
push
mov
mov
or
bound
xor
out
rorb
jmp
inc
xchg
sbbb
push
or
and
ljmp
xchg
xor
or
sar
mov
orl
pop
fdivl
sub
test
xchg
mov
inc
add
std
add
gs
cmpl
inc
fstpl
pop
pushf
sub
jae
repz
pushl
insb
or
fs
int3
push
scas
outsl
imul
adc
jg
add
add
mov
adc
mov
and
dec
mov
lds
push
inc
bound
call
jb
rorl
arpl
rclb
pop
in
fbld
out
and
shrl
out
fs
mov
jo
or
mov
test
test
lds
xor
and
cmpsl
lea
cmp
xchg
and
les
cmp
call
xor
inc
lahf
call
lds
xchg
adc
out
inc
xchg
mov
or
pop
sub
jb
adc
sbbb
incl
fstp
cmp
add
cs
push
mov
cli
incl
cmp
mov
sar
jge
mov
mov
dec
enter
inc
mov
call
fdivrl
xor
fnstcw
fldl
decl
sub
mov
pop
fistpll
mov
or
cld
pop
mov
aas
fbld
out
lock
mov
xchg
jnp
incl
adc
pushw
mov
loop
movsb
fstpt
cwtl
and
nop
dec
adc
dec
daa
sbb
call
sub
ss
subl
dec
mov
outsb
sahf
outsb
jbe
es
xor
push
addr16
stos
jecxz
out
sbb
sub
call
jl
sbb
ss
cwtl
push
jns
cmp
sub
adcl
mov
imul
incl
pop
xchg
pusha
ret
pop
push
hlt
push
sub
sahf
test
xchg
xlat
loop
dec
repz
adc
test
loopne
jae
fnsave
loopne
jg
or
inc
add
add
cmpsl
jne
movsb
sbb
jmp
xchg
jmp
aas
add
cs
fistpll
lcall
fdivrp
mov
jmp
xchg
popf
cld
movsl
cli
push
addr16
and
push
or
ja
xor
adc
and
addl
aaa
imul
cld
bound
jb
jecxz
sbb
cmp
lcall
jge
mov
and
fidivrl
xor
bound
lahf
push
sahf
daa
adc
inc
add
ljmp
std
jae
push
cs
dec
and
clc
mov
roll
aad
xchg
jg
pusha
push
and
arpl
aaa
icebp
push
hlt
dec
stc
hlt
lods
push
xchg
sub
movsl
repnz
retw
mov
mov
incl
mov
push
cmp
jbe
imul
stos
or
xchg
xor
fcom
cmp
lods
mov
loop
mov
rorb
pushf
es
ss
add
push
dec
sub
xor
fsubs
repz
ret
dec
loopne
adc
pop
mov
leave
mov
jo
push
aam
test
fwait
xchg
dec
adc
lcall
int
outsb
xchg
sarb
int
loope
mov
fdivs
test
clc
jmp
push
adc
les
adc
call
mov
pushf
xchg
dec
push
xor
adc
add
iret
dec
sbb
int3
mov
into
out
dec
and
pusha
cwtl
sbb
rorb
aad
sbb
fbld
aaa
lret
mov
es
cmp
mov
mov
out
push
imulb
ret
fimull
lret
popa
into
cmp
push
stos
dec
sub
test
ret
ret
lcall
xor
in
push
cld
cmp
or
lock
adc
push
xlat
jne
sub
mov
mov
xchg
cs
hlt
das
mov
leave
sbb
mov
xchg
je
and
add
outsl
ret
aaa
sbb
out
cld
lcall
outsl
ja
pop
cld
mov
mov
or
push
jg
ljmp
sar
out
call
xchg
mov
push
jno
test
pushf
popf
mov
pop
pushl
adc
lcall
lods
pushf
xor
addl
in
mov
rcrb
and
js
inc
rcrb
xor
jnp
mov
decl
or
cmp
test
inc
push
pop
jo
outsb
out
je
call
sub
inc
push
jae
pop
pause
gs
fcoml
testb
sbb
faddl
mov
xorb
xor
lock
dec
iret
ljmp
jo
movsl
hlt
rcll
adc
ficoml
outsb
xor
xchg
pop
mov
ljmp
shrl
jmp
es
ss
movzbl
sub
and
push
sbb
xchg
jae
lcall
mov
mov
lods
cmpb
mov
lret
adc
and
call
xchg
push
sub
pusha
arpl
int3
push
mov
aad
pop
adc
sti
call
hlt
sub
mov
orb
sbb
cmp
xor
mov
int
and
mov
ljmp
pushf
sub
outsb
outsl
call
outsb
mov
inc
cmc
and
push
or
sbb
rclb
sbb
loopne
sar
ljmp
mov
cld
call
push
cmpsl
fstps
dec
jecxz
daa
pop
fucomp
lahf
in
mov
hlt
aam
add
cmp
add
cmp
jo,pn
test
or
mov
pusha
icebp
ja
jge
xchg
mov
sbb
mov
decl
inc
add
sbb
aas
lds
or
cs
call
insb
adc
roll
leave
mov
rol
push
call
int3
cmpsb
push
aad
add
pushl
mov
cmp
or
fs
mov
repz
mov
adcb
call
pushf
imul
arpl
rep
inc
jl
or
mov
jmp
in
aaa
and
popl
lods
pop
mov
repz
sti
outsb
cmp
push
ss
sahf
fcmovnb
test
shl
inc
movb
out
cmp
ljmp
dec
adc
jle
dec
stos
test
js
xchg
jecxz
mov
js
lcall
sub
gs
movsl
test
cwtl
test
mov
mov
das
decl
jbe
lea
xchg
scas
jmp
adc
mov
jg
mov
and
ljmp
mov
fdivrs
pusha
and
mov
lods
and
xor
mov
mov
arpl
pop
jno
xor
leave
add
call
cmp
inc
xorb
sti
and
add
mov
sbb
pop
mov
wrmsr
in
push
cmpsb
lcall
cli
inc
icebp
sti
mov
mov
sub
jge
xor
dec
cltd
add
fcomip
das
into
pop
inc
clc
sbb
xor
xlat
mov
stos
sbb
push
scas
fidivrs
aas
jle
push
add
enter
jp
mov
push
xchg
cli
sbb
loop
out
shl
or
dec
out
fs
lcall
push
lcall
in
mov
idiv
fistps
mov
stc
dec
int
data16
ljmp
dec
push
test
dec
lods
xchg
cmp
outsb
pop
inc
pop
xchg
rolb
scas
sub
push
push
outsl
scas
out
xlat
subb
pop
call
pop
iret
or
mov
dec
cltd
mov
or
push
test
adc
ljmp
dec
pop
fcompl
popa
lea
mov
daa
xor
sti
ljmp
scas
mov
jmp
sahf
ret
pushl
aad
jmp
dec
and
push
pop
fwait
ret
sbb
sti
sbb
test
ficomps
movsb
inc
or
clc
or
pop
fs
push
fidivs
jmp
ja
ret
sub
cmpsb
jl
out
test
ljmp
mov
mov
sbb
int
shrb
ja
shrl
fcomip
lret
in
lock
jnp
pop
test
sub
les
xchg
inc
mov
inc
xchg
jmp
repz
jg
rcr
dec
add
jo
sub
cmpsl
int
bound
sub
scas
xchg
push
ret
inc
xchg
loope
push
bound
pop
icebp
adc
pushl
test
gs
xor
xor
fildll
add
pop
inc
jge
inc
cmp
rcrl
add
xchg
stos
stc
jne
inc
adc
insl
fdivrl
ljmp
pushl
pop
aas
jbe
and
imul
aad
mov
jae
in
xlat
popa
ljmp
test
mov
adc
iret
cmp
shll
push
lds
sbb
push
adc
pushl
popa
xchg
xchg
jne
inc
xor
jg
std
ljmp
and
mov
lds
nop
test
xchg
pop
jb
fsubrp
cmp
mov
nop
lea
aas
push
lcall
out
leave
out
hlt
jl
sub
jne
icebp
lock
popa
and
outsb
cwtl
fdivs
xor
mov
ljmp
clc
iret
int3
shrb
push
call
loopne
xchg
data16
imul
xor
pop
lcall
loop
subl
cs
inc
mov
pushl
inc
mov
repz
cmp
leave
enter
push
loope
sbb
ds
ljmp
sbb
dec
add
mov
mov
insl
and
pop
cli
popa
idivl
xchg
and
jmp
js
ds
and
add
std
ss
popf
test
inc
mov
sti
addr16
imul
fs
mov
mov
insl
test
inc
cmp
std
pushl
xor
movsl
mov
inc
sub
push
enter
test
aad
decl
sub
mov
jnp
aaa
inc
ret
cmpsl
dec
fistps
test
decl
xchg
mov
outsb
mov
and
rcr
xor
sub
xchg
jge
repnz
daa
popa
xchg
incl
sbb
and
repnz
cltd
push
lock
jmp
or
push
lock
nop
arpl
cmp
jp
pop
mov
jbe
push
fldcw
insb
popa
loop
mov
mov
incl
lods
inc
imul
lds
dec
fnstcw
jge
mov
out
call
dec
jg
pushl
in
xor
call
ss
lea
xchg
xchg
cmp
ja
pop
lcall
pop
shl
subb
daa
aad
jecxz
jl
lods
out
jecxz
sub
pop
cld
decl
mov
push
ffreep
cmpsl
xchg
adc
cmp
cmp
fdivr
fcomip
aaa
mov
mov
loop
in
sysret
xchg
mov
dec
cli
cli
loop
pushf
shll
scas
jg
cmp
call
insb
pop
jno
in
xchg
das
push
cmp
mov
lahf
push
movsb
std
pusha
out
repz
pcmpgtb
call
or
dec
bound
fsts
inc
iret
mov
inc
inc
and
dec
inc
fsubp
in
test
sub
ret
xchg
jle
xor
pushf
pop
inc
push
loope
jb
push
and
call
and
and
or
cli
mov
mov
mul
mov
and
clc
aas
out
ljmp
push
stc
sahf
or
cmp
sub
mov
push
mov
add
in
xchg
mov
pop
jp
add
add
pop
push
idivb
sbb
pop
andl
decl
nop
enter
loop
cld
repnz
jo
jne
xor
push
dec
sbb
call
mov
ljmp
enter
outsb
imul
or
sahf
xchg
lock
jecxz
xchg
lods
in
mov
fmuls
or
push
movsl
stc
jo
push
sub
cmp
jo
and
int3
lret
jbe
out
mov
insb
lock
pushf
into
add
loopne
add
mov
mov
jmp
movsb
fsts
decl
and
mov
nop
cmp
andl
sbb
or
incl
in
xchg
and
sbb
rorl
movsb
stos
rcrb
sarb
sub
pop
and
jg
fisttpl
fistl
xor
xor
fnstenv
sar
xor
pushf
ret
sarl
pop
mov
sub
sbb
jnp
jl
pusha
decb
sub
decl
sub
adc
jns
mov
pop
mov
xchg
push
jg
into
test
int
dec
and
scas
cmpsb
hlt
aam
jns
rclb
push
subl
xchg
sub
cmp
cmpsb
lcall
lcall
fs
scas
shll
jle
jb
arpl
xchg
test
sarl
pop
push
inc
sub
sub
icebp
fcmovbe
scas
je
movsl
inc
sar
dec
cmc
pop
imul
div
cmp
out
mov
mov
inc
mov
or
pop
mov
call
jno
in
repnz
mov
inc
jmp
xor
fldt
push
dec
jb
mov
lcall
into
and
xchg
sub
imul
pop
dec
nop
push
insb
add
push
outsl
data16
fincstp
lret
es
call
sbb
iret
bound
ljmp
or
frstor
jl
stc
cwtl
outsl
push
punpcklbw
decl
int
cmp
sbb
lods
mov
fsubp
jg
nop
mov
cmp
adc
movsb
test
call
mov
ljmp
scas
repnz
test
es
xorl
dec
add
xchg
in
insb
pop
ficoms
mov
pushl
push
mov
jge
outsl
adc
stos
scas
adc
and
add
jo
call
pop
incb
push
jno
sbb
cmp
loopne
pop
xor
movsb
jns
ret
sti
jmp
test
jb
or
in
rclb
addr16
dec
int3
jno
pop
or
mov
outsl
xor
mov
push
fiadds
sbb
xor
incl
out
or
fwait
mov
aaa
add
sbb
dec
icebp
mov
inc
and
inc
push
inc
ljmp
cwtl
in
and
call
decl
and
fldl
mov
je
xor
sub
mulb
push
xchg
sar
ja
addr16
push
cld
je
mov
cmpsl
das
and
push
roll
mov
clc
jmp
lds
and
or
fstl
xor
xchg
mov
mov
add
decl
in
mov
lock
xlat
lret
outsb
pop
lahf
pop
lock
cld
cmp
rclb
bound
jg
or
push
xor
mov
sub
push
adc
cmpsb
add
mov
xlat
mov
into
ljmp
setae
adc
add
sub
push
mov
stc
shl
jecxz
fdivr
pushl
cmp
stc
stos
xor
sbb
inc
int
in
add
in
mov
call
adc
ret
push
rcrb
jg
push
and
into
and
jg
cmp
cmp
and
add
cmp
and
push
aas
loope
sub
hlt
add
sti
incl
xchg
jp
cmc
adc
ja
pop
adc
pop
mov
jb
mov
push
add
ljmp
test
enter
in
mov
push
push
sbb
out
cmp
lcall
loopne
mov
ret
mov
mov
das
int
or
ss
ljmp
clc
mov
lods
leave
popa
mov
inc
jge
cmp
insl
fs
ljmp
loop
and
pop
jno
fiaddl
outsl
adc
cld
ljmp
int
mov
lods
xchg
mov
adc
les
lods
pushf
mov
inc
mov
lcall
or
out
ret
xchg
adcb
mov
pop
fs
jg
dec
into
in
fwait
into
inc
out
cld
mov
jecxz
sbb
data16
orl
stos
or
rolb
clc
icebp
popf
dec
dec
sub
fwait
xor
pushl
or
xchg
adc
push
cmp
or
inc
in
lcall
pop
xor
ret
xchg
nop
sbb
sbb
dec
pushf
popa
shrb
call
cmpsb
loope
push
or
movsl
cltd
sub
xor
testb
cmc
ja
jmp
mov
loope
mov
stc
cmp
out
pop
push
out
lds
lds
lcall
sub
fistps
roll
into
adc
out
xchg
pushl
dec
lret
mov
movsb
cmpsb
xchg
in
jmp
movsb
aaa
xchg
fs
and
sbb
jne
fmull
pushl
add
mov
mov
aas
sub
popf
fildl
ja
cmpsl
cmp
or
xchg
sub
je
pusha
pop
ljmp
ss
xor
lret
rcrl
nop
xchg
adcl
jg
adc
repnz
std
dec
mov
out
xchg
xchg
jg
gs
push
test
or
scas
mov
adc
les
lcall
cmpsb
addr16
mov
xchg
aad
dec
les
mov
adc
call
jae
stos
and
add
push
jge
cmpsb
test
xchg
push
test
push
cwtl
call
cld
cld
jmp
push
jb
dec
outsb
sti
ds
test
dec
mov
xor
jmp
data16
add
dec
lahf
adc
push
mov
inc
std
mov
nop
cmpb
mov
adc
repz
push
dec
lea
pop
dec
popa
pop
decl
pop
jne
mov
or
in
lods
xchg
shll
sub
jnp
cwtl
adc
hlt
xor
ret
clc
lcall
or
sbb
adc
mov
inc
add
or
mov
mov
lods
dec
inc
push
push
das
sub
and
pop
mov
ljmp
ss
dec
xor
jle
jne
lret
cli
sbb
mov
aad
call
in
cmp
push
dec
pusha
inc
cmp
lahf
clc
call
sahf
lret
push
xchg
cltd
jecxz
mov
cmp
jnp
push
jno
pushf
jle
lret
pop
lds
xchg
cmp
xor
mov
mov
mov
jbe
stos
pop
push
sub
das
enter
fcoml
cmp
adc
lret
test
ljmp
in
pop
cmp
cmpsl
mov
and
push
mov
sbb
jbe
and
ljmp
outsl
fdivs
jae
push
inc
ficoms
sub
fists
sbb
ja
insl
cmpsl
cltd
inc
jmp
fildll
in
mov
adc
enter
icebp
stos
add
cmp
inc
int
loopne
cmp
sub
or
call
rol
xor
pop
mov
and
into
enter
push
adc
jg
movsb
test
in
in
popl
xor
inc
jge
and
xor
fsubrl
call
cld
mov
and
cmp
push
cltd
xor
cltd
and
enter
clc
mov
jmp
add
daa
rorb
xor
repnz
mov
dec
jbe
out
jmp
ljmp
cld
pop
inc
loope
out
jecxz
sbb
out
adc
push
or
rol
test
sbb
in
pop
pop
in
mov
jge
xchg
jo
fldcw
and
jmp
xchg
fisubrl
lods
sub
mov
or
fldz
jle
inc
jmp
fmuls
aaa
xlat
imul
enter
mov
leave
xor
mov
jle
aas
cltd
mov
sbb
lret
xchg
lcall
aaa
fimull
inc
push
out
mov
addr16
dec
inc
xchg
or
lods
icebp
cmp
mov
jbe
cmp
les
fcos
add
xor
xlat
test
pop
and
in
into
push
fmuls
popa
in
pop
incl
sub
clc
jl
and
data16
incl
jmp
sbb
scas
cwtl
mov
int3
jmp
dec
sub
and
sti
ss
dec
pop
scas
ret
out
aad
repnz
jno
or
or
aas
mov
mov
int
lret
dec
iret
shrb
xor
adc
out
in
inc
mov
out
push
push
icebp
or
pop
mov
cs
movsl
xchg
lcall
loopne
aaa
repz
mov
xchg
jmp
into
aas
jnp
sub
movsl
push
inc
push
add
call
les
dec
dec
imul
negl
pop
stos
xor
pushl
jp
ja
sbb
xchg
iret
out
lods
xchg
nop
loopne
pop
testl
stc
lock
inc
jl
xor
std
aas
sub
addl
cld
decl
int3
sbb
add
cmpsb
js
leave
lock
int
push
pushf
cltd
lock
nop
incl
jbe
ss
cmp
rcll
cmp
pushl
stos
adc
inc
hlt
sbb
shlb
repnz
sbb
ljmp
push
mov
xor
or
aam
sub
inc
pop
sets
cltd
cmp
repnz
ljmp
sbb
addr16
shrl
cmpb
cmp
out
int
filds
push
mov
or
push
inc
int
xor
rcr
nop
add
xor
adc
mov
lret
mov
imul
or
fsubl
cld
jmp
stc
in
leave
ret
mov
jg
pusha
mov
sti
popa
pop
or
mov
xchg
daa
mov
and
add
pop
jmp
test
enter
inc
lcall
xchg
testb
pop
in
sub
scas
test
call
mov
jge
cwtl
sti
jne
pop
add
sbb
xadd
aad
mov
lock
sbb
je
xchg
popa
scas
lret
fcos
jg
mov
and
mov
cmp
stos
outsl
prefetch
push
fidivs
lcall
add
cli
mov
push
sub
mov
inc
stos
xor
aas
push
daa
and
push
nop
clc
jb
mov
push
xor
ljmp
inc
adc
adc
adc
push
mov
loopne
add
jnp
adc
idiv
call
shlb
jmp
aad
fdivrs
aam
mov
push
cmp
or
add
cmp
clc
call
xor
jo
jle
push
cmp
loope
hlt
filds
aas
div
xchg
mov
shl
bound
mov
daa
fwait
in
aad
data16
mov
ja
out
jmp
clc
mov
xchg
decl
out
lods
mov
test
inc
enter
mov
jns
and
add
mov
es
int
xor
bound
and
jno
sub
incl
fildll
cmp
addr16
movsb
mov
popa
push
sub
mov
das
sbb
mov
ds
inc
sbb
mov
pop
inc
or
cmp
mov
add
mov
inc
mov
mov
jmp
mov
mov
int
sbb
imull
push
adc
nop
dec
cmpsb
out
cli
push
out
cli
sbb
dec
cmpsb
ds
xchg
loope
ret
and
push
or
pushl
repnz
cwtl
dec
lea
gs
xchg
jno
out
clc
decl
sbb
ret
pop
out
int
jmp
cmpb
mov
sbb
add
fdivrp
cltd
jmp
mov
xor
mov
add
add
pop
mov
loop
or
mov
mov
adc
shrl
loope
push
pop
push
xor
mov
decl
lcall
je
cmp
sbb
sub
mov
mov
insl
push
mov
pop
xlat
dec
cmpsl
aam
sbb
sub
mov
xchg
adc
cmp
add
pop
jb
push
fists
bound
xchg
clc
push
out
jbe
imul
mov
mul
sbb
inc
lret
or
stos
icebp
add
dec
outsl
stc
mov
popa
outsb
roll
sti
rorl
gs
ljmp
fyl2xp1
cmp
scas
adc
sub
or
movsl
pushf
xchg
mov
decl
addr16
lods
dec
mov
cmpsl
xchg
fdiv
daa
test
and
out
push
and
icebp
dec
mulb
in
imul
push
xor
stc
call
incl
int3
rcrl
lock
lret
mov
insb
call
push
jnp
sti
icebp
sub
sbb
stos
ds
imul
jge
sbb
adc
out
imulb
adc
ret
mov
add
mov
jg
fistpll
incb
and
cwtl
mulb
insb
mov
popa
or
out
sti
xchg
test
lcall
insb
jge
jnp
mov
bound
int
add
or
or
dec
jae
push
sti
mov
push
fidivl
dec
je
xchg
cmp
push
addr16
repnz
sbb
and
rclb
sub
adc
dec
and
insb
cmp
mov
ljmp
xlat
sub
jecxz
sub
inc
xlat
sub
aaa
sub
sub
and
fistl
sbb
test
sar
dec
ljmp
mov
push
aam
mov
arpl
lret
push
fcmovb
imul
or
dec
mov
into
sbbb
sub
pop
cmpb
shll
and
shr
shll
jns
mov
daa
jg
lock
sub
inc
add
cs
pop
lret
push
fs
push
adc
decl
xchg
cwtl
fcoms
and
inc
pop
popf
adc
inc
scas
add
dec
std
cmp
movsb
jg
or
adc
fwait
jns
std
xchg
mov
popa
insl
dec
push
pop
or
test
push
dec
stc
je
ds
jp
mov
mov
jo
fcoms
push
inc
aad
xchg
add
ljmp
jbe
jae
test
and
testb
mov
in
adc
sub
and
outsl
in
push
cld
adc
sub
push
pop
xor
lcall
push
sbb
mov
sbb
mov
jl
mov
mulb
fiadds
mov
jg
and
js
mov
dec
daa
mov
lock
sub
fnstsw
mov
sti
leave
sahf
xchg
outsb
push
ljmp
mov
xlat
dec
lret
sub
call
dec
inc
add
roll
cmpsl
emms
inc
xor
and
xchg
mov
popf
sbb
repnz
push
ljmp
dec
mov
lds
stos
inc
mov
rcrl
inc
push
shlb
fwait
mov
sahf
aad
mov
cwtl
loope
xchg
leave
fdivr
mov
aad
mov
mov
incl
repnz
repnz
mov
xchg
sbb
add
lcall
fsubs
ljmp
cmpsb
push
jl
test
xor
rcrl
pop
leave
pop
sbb
pushf
loop
fcom
mov
fldt
in
adc
cmp
enter
hlt
mov
xor
test
xlat
ljmp
xor
cmp
mov
data16
mov
lcall
ja
jg
pop
pusha
inc
movb
jp
jle
ret
call
repz
mov
addr16
mov
pushl
push
pop
mov
mov
decl
jle
pushf
loope
bound
cmc
ret
fsubrl
incl
cmp
inc
xor
mov
add
movsb
lods
or
call
aas
shrb
or
fbld
or
orl
jl
sub
ret
xchg
aaa
test
cltd
ret
jmp
testl
data16
jg
les
bound
imul
lock
mov
xor
jg
push
mov
idivl
mov
xor
and
push
in
push
mov
mov
into
movsl
imull
incl
clc
ret
xor
mov
xchg
adc
pop
aam
adc
ljmp
subl
insl
cmp
clc
push
jb
jbe
cmpb
add
outsb
stos
out
and
int3
jg
outsb
sbb
cmp
inc
push
ret
sti
fdivrs
movsb
jle
insb
out
xchg
ljmp
adc
lcall
sbb
pop
cli
call
mov
push
cmpsl
ljmp
sarl
sbb
and
mov
daa
imul
lock
dec
inc
adc
pop
dec
adcl
mov
mov
lcall
add
daa
in
and
pop
pop
jge
push
fistpl
call
cmp
and
mov
push
mov
jo
nop
aad
repnz
mov
in
test
call
dec
in
inc
mov
sbb
outsb
fsub
jne
inc
in
push
pop
mov
sbb
rdmsr
or
cld
call
cmp
jecxz
cmc
testl
mov
mov
aaa
outsb
jns
pushf
and
loope
je
arpl
mov
push
pop
das
dec
scas
daa
arpl
xchg
inc
dec
ja
adc
int3
xchg
sub
lock
jo
mov
ljmp
sbb
rclb
les
mov
fwait
es
add
pusha
jecxz
xor
and
push
jp
ljmp
shlb
popf
jl
js
mov
jne
dec
pop
push
lods
mov
push
jae
shrb
insl
insl
cld
mov
cmp
scas
pop
mov
or
push
cmpsb
and
dec
jne
sbb
pop
sbb
mov
fistpll
aas
nop
fwait
repz
loope
cmp
adc
jb
jge
pop
push
mov
fistps
sbb
cmc
push
aad
xor
cmp
add
sub
inc
pop
sub
repnz
push
sbb
pop
adc
incl
ret
sub
andb
push
out
test
idiv
adc
out
adc
clc
fwait
cld
outsl
test
jae
push
xchg
cwtl
into
sti
scas
and
mov
inc
jns
clc
mov
cmp
and
out
shll
add
add
fcomip
jmp
pusha
sub
mov
mov
mov
jne
add
sub
data16
std
cld
addr16
add
mov
sub
inc
mov
sbb
lcall
into
sub
lret
insl
mov
adc
out
xor
mov
decl
dec
mov
in
cltd
push
dec
data16
or
pop
inc
stc
hlt
and
adc
cli
sbb
data16
fidivrs
add
pushl
data16
cmp
repnz
pop
gs
cmc
adc
test
sahf
inc
mov
xchg
fimull
add
aad
cmp
xchg
dec
inc
cs
dec
cmp
push
push
cs
sub
dec
std
mov
lcall
lods
dec
push
or
push
into
popf
test
sbb
mov
mov
mov
jne
movsb
cmp
mov
sbb
rcll
aaa
nop
jp
pop
ljmp
ror
jnp
and
xor
js
push
std
pop
movsb
mov
into
loop
int3
mov
and
inc
clc
ja
cmpsb
sahf
insb
cmp
mov
ljmp
int3
enter
push
fs
pop
pop
and
and
enter
daa
ljmp
jg
scas
inc
orl
mov
push
leave
xchg
jge
sub
inc
mov
xor
sti
popf
cltd
ds
mov
ljmp
xchg
jne
addr16
cli
mov
add
int3
out
mov
out
and
cmpsl
out
mov
arpl
test
fwait
aam
jno
cmp
adc
cwtl
shlb
push
pop
push
sarb
xor
add
xchg
xchg
pop
call
cmp
xchg
iret
ss
cmc
mov
rcll
mov
sar
incl
dec
add
and
and
lea
jp
xchg
or
jg
mov
lock
xor
aas
sbb
test
add
add
adc
sub
loopne
out
subl
arpl
mov
mov
loope
dec
cltd
mov
sub
cltd
add
fisubs
dec
add
fwait
cmp
pop
jmp
push
sub
mov
xor
adc
sbb
add
stos
sti
push
fimull
dec
test
mov
cmp
stos
imul
aam
aaa
push
cmp
incl
or
mov
popa
cmp
cwtl
cmp
sub
hlt
mov
test
sbb
xchg
nop
std
mov
decl
stos
inc
insb
imul
inc
and
xchg
outsl
mov
sbb
pop
pushf
test
psrlq
cltd
inc
std
decl
ljmp
sti
or
dec
outsb
pop
jp
addb
orb
mov
mov
fnsave
and
shll
cmp
jg
jb
sub
push
fists
lock
popa
push
cmp
mov
xchg
mov
pop
fnstenv
sbb
shrb
repz
adc
sbb
mov
ljmp
pop
ret
std
mov
dec
pop
in
or
add
or
paddsb
call
mov
aas
mov
lock
fcmovu
in
cmp
xchg
fsubrs
fdivp
lret
dec
mov
and
test
dec
mov
lock
decl
jl
cmpb
pop
sub
js
adc
mov
mov
adc
lods
xlat
mov
pop
icebp
jmp
test
stos
pushf
cmp
xchg
mov
ret
add
jle
shrl
inc
lea
incl
push
in
cmp
ret
fs
xchg
xor
mov
mov
shll
inc
jge
adc
and
in
es
cmpb
xchg
lcall
jmp
imul
add
sahf
cli
popf
pop
cld
push
iret
arpl
mov
scas
xchg
mov
fsubrl
and
push
and
aaa
mov
jle
testb
ljmp
movsb
xchg
or
popa
pop
leave
pop
push
test
out
mov
das
jns
push
sub
ljmp
sbb
sub
jno
jp
push
mov
stos
cmpsb
popa
into
xchg
pop
and
cmp
cmpsb
lret
jg
xor
outsb
inc
sbb
jle
lds
push
ret
in
int
js
xchg
or
sbbl
push
pusha
clc
insb
pushf
xor
imul
lcall
mov
pop
push
cmp
mov
cmpsl
pushf
mov
ljmp
push
lds
fidivrs
adc
inc
adcb
aad
aad
push
cmp
jae
in
adc
mov
inc
daa
dec
addl
mov
push
setnp
dec
push
or
iret
fcomip
decl
aam
add
imul
dec
ja
lret
inc
pop
push
mov
pop
lret
mov
lret
sbb
pop
sbbb
sbb
dec
popf
and
pushl
lret
sbb
dec
leave
sub
pop
push
dec
mov
sub
dec
push
mov
hlt
iret
or
stos
loop
orb
add
test
mov
mov
jbe
jne
xchg
xor
ss
aaa
pop
insl
mov
push
lret
gs
inc
gs
cld
rolb
inc
push
push
bound
adc
xor
popa
push
adc
bound
mov
movsb
jecxz
sub
add
test
or
and
mov
or
adc
pop
pop
loopne
jo
dec
mov
cld
mov
fistpll
jecxz
jbe
stc
xchg
jge
xchg
xchg
mov
and
jmp
xchg
push
or
fisubrl
or
outsb
xchg
or
fsubp
add
sbb
movsb
and
in
jmp
fsubs
dec
mov
ljmp
dec
jmp
cmp
push
shlb
cmp
outsb
xchg
popf
xor
push
clc
mov
mov
cmp
call
mov
mov
xchg
and
lods
adc
jl
lods
imul
jmp
xchg
das
xchg
add
dec
pop
adc
incl
fmul
pop
mov
jmp
add
cmp
in
sbb
sub
std
dec
jno,pt
sub
mov
adcb
mov
jge
lea
or
pushl
mov
push
aas
fcmovnu
shr
les
jg
cmp
dec
and
mov
repnz
shr
inc
jno
mov
cs
add
mov
call
das
test
mov
ret
xchg
popf
stos
sbb
dec
xor
jp
dec
out
fnstenv
decl
std
nop
popa
repnz
xchg
push
negl
stos
insb
mov
mov
clc
jmp
adcl
jne
ja
mov
inc
jge
lcall
ljmp
js
adc
xchg
imul
mov
test
stc
insl
pushf
jo
test
ljmp
push
out
mov
repz
push
jmp
or
xor
scas
lcall
cmp
lods
push
inc
mov
cmp
sub
and
dec
clc
call
mov
out
shll
lahf
cmpsb
nopl
dec
imul
sti
outsl
xchg
incl
dec
jns
inc
mov
sar
xor
roll
lret
inc
xchg
cli
pop
jg
ljmp
out
xlat
xchg
xchg
or
push
addr16
enter
push
sub
pop
fs
push
mov
inc
or
pop
fadds
lods
or
incl
cli
xchg
push
out
hlt
mov
movsb
adc
xor
xor
test
mov
push
mov
mov
ds
push
out
iret
mov
sub
scas
cwtl
jge
rcrb
xor
ljmp
xor
ror
cmpsl
pop
pop
sbb
jmp
mov
aaa
aaa
xor
mov
fnstcw
mov
adc
in
xchg
addr16
mov
lret
adc
mov
sbb
cli
les
push
cmp
jns
sub
adc
fs
lcall
into
dec
jle
jl
add
push
dec
lahf
into
movsl
dec
mov
add
sbb
sahf
add
mov
dec
ror
bound
data16
dec
pop
out
int3
lock
dec
sbb
ds
jmp
decl
xchg
scas
in
mov
stos
popf
seto
rorl
mov
in
add
call
add
loope
movsb
insb
cmp
push
xchg
push
and
jl
mov
mov
pushl
mov
dec
sub
loope
fildl
and
int3
mov
sub
mov
scas
xlat
jb
pushl
dec
cmc
push
lea
xchg
mov
mov
mov
adc
outsl
and
shll
sub
mov
lcall
mov
inc
mov
cli
mov
clc
add
int
dec
into
pop
pop
fildll
fcos
or
jmp
imul
pop
in
fs
jae
xchg
cmp
sbb
dec
pushf
mov
xchg
or
push
mov
aam
mov
jmp
lcall
inc
lcall
in
xchg
push
rcll
and
adc
dec
cs
fbstp
repz
or
mov
and
add
jnp
xor
lcall
adc
sbb
adc
add
xor
and
nop
cmp
push
xor
mov
sar
jb
push
inc
mov
cmp
jp
outsb
xor
fistl
mov
js,pn
leave
out
in
test
decb
cwtl
cwtl
scas
jle
mov
jno
xchg
push
repz
dec
push
je
cs
mov
xor
insl
fildll
cmc
call
cmpsl
push
scas
cmpsl
jge
adc
into
xor
push
popf
aas
cwtl
jne
push
xchg
lcall
pop
xchg
and
xchg
xlat
xor
mov
fisubs
jg
jle
dec
xchg
cmp
popa
mov
dec
xchg
incl
lret
aaa
lods
into
in
pop
xlat
fsubrs
mov
ds
cmp
outsb
pop
ss
xchg
mov
outsb
jne
call
mov
fisttpll
scas
imul
xlat
mov
inc
add
jp
pop
and
enter
inc
cmp
dec
fsubl
aad
xchg
push
mov
mov
imul
push
in
cmp
adc
inc
loope
je
inc
mov
mov
cmp
shll
mov
sub
push
push
mov
js
pushf
loopne
insb
push
cld
push
cmp
icebp
ss
cld
jp
adc
cmpsb
cs
xor
jle
add
dec
pop
cmpb
fs
outsl
add
xchg
jecxz
jle
js
test
bound
pushl
loopne
bound
std
lcall
cmp
int3
adc
repnz
inc
push
ja
cmpsb
mov
sub
int3
jle
sub
cmp
mov
cs
sbb
pop
jecxz
rorb
imul
sbb
mov
hlt
push
ds
incl
sahf
inc
mov
mov
rcll
leave
inc
out
ss
jge
xor
loop
stos
cmp
pushl
mov
jae
add
push
mov
pop
leave
mov
mov
jle
insb
int
push
cli
cmp
lahf
lods
cli
sti
pushl
stos
adc
add
call
cmpsb
stos
lods
mov
es
xor
lcall
call
xchg
shl
inc
sub
fdiv
jl
scas
inc
sub
mov
adc
mov
in
jns
and
in
lock
xchg
ja
lcall
xchg
adc
xor
dec
add
ja
addr16
adc
add
rcl
loop
or
out
cmp
and
outsl
pushl
movsl
pop
testl
test
jb
into
ljmp
fcmovne
movsl
jb
cmp
mov
push
in
mov
mov
call
int3
sub
cmp
aaa
lock
cmp
pop
cltd
and
push
xchg
xor
jns
inc
inc
add
fcompl
clc
lahf
aaa
aad
cmp
jle
sar
ljmp
push
stos
pop
sub
int3
cwtl
sbb
lock
mov
push
stc
pusha
mov
cltd
cmp
mov
and
mov
pop
mov
xchg
cld
ds
add
sbb
jp
rcll
add
jl
les
jo
lds
out
stc
jmp
sarl
jg
out
or
jmp
inc
leave
aaa
jmp
movsl
add
rorb
imul
push
lret
inc
incl
pushl
out
push
mov
push
adc
out
jno
sarw
or
sti
fwait
xor
in
lods
repz
fwait
sub
cmp
lods
arpl
jmp
int
clc
andb
push
and
jmp
cmp
sub
stos
or
lcall
ffreep
mov
lcall
push
push
imul
add
inc
xchg
ss
pop
icebp
jg
lock
cltd
inc
loope
call
mov
decl
mov
out
lret
push
sti
or
int3
fldt
sub
cmp
inc
mov
push
movsl
lret
mov
push
cmp
jge
icebp
repnz
insb
in
sub
or
xchg
jge
out
cmp
pop
clc
insb
xor
lock
xchg
dec
clc
orl
jle
pop
inc
xchg
add
es
gs
daa
aaa
and
sub
or
pop
out
clc
inc
js
orb
cwtl
nop
adc
mov
daa
push
mov
aam
inc
or
push
cli
lcall
pop
js
cmpsb
mov
bound
loop
clc
sub
imul
out
dec
out
rolb
add
pop
add
fsubr
cs
ljmp
jecxz
ja
clc
mov
and
push
mov
pop
imul
mov
add
repz
loope
ljmp
pop
js
and
jmp
es
inc
repz
mov
pushl
std
pop
mov
mov
mov
je
lods
mov
dec
daa
pushl
and
ljmp
out
and
xchg
shl
cmpsl
push
adc
xor
push
sti
pop
pop
pop
sar
sbb
sub
add
and
push
add
loop
cmc
xchg
out
ja
adcb
ljmp
mov
shl
sti
and
cld
xchg
or
pop
mov
xchg
fwait
add
mov
dec
adcb
stc
jo
stos
xchg
inc
call
dec
mov
in
xchg
pop
movsl
orb
inc
add
adc
jae
out
lods
mov
filds
fimull
push
aad
insb
ljmp
push
fisubs
aad
outsb
sub
lcall
lret
mov
or
jmp
fcoms
inc
jno
jg
decl
sub
leave
jno
rcl
mov
lcall
popf
cmpsb
or
out
nop
cmpsl
pushf
sbb
ljmp
hlt
cmpsb
add
aaa
fs
mov
das
repz
mov
dec
cltd
mov
mov
incl
leave
test
mov
lds
sub
dec
xorb
inc
repnz
inc
and
inc
mov
adc
jb
sbb
jge
imul
pop
popl
bound
cmpsb
stc
je,pn
sbb
stc
jmp
mov
cmp
lock
cltd
addps
fwait
ds
int
int3
subl
and
loop
in
sub
mov
movsl
jle
push
pop
fyl2x
inc
dec
cmp
add
pushl
xchg
lock
push
shll
pop
cmp
jle
lcall
es
jle
ja
dec
aas
hlt
sbbb
push
jno
fadds
mov
mov
bound
pop
pop
sbb
mov
js
shl
xchg
mov
adc
mov
mov
jge
mov
mov
lret
pop
hlt
loop
arpl
cmc
js
lods
fistl
and
adc
push
sahf
push
sbb
int
idiv
sahf
cld
ljmp
cmpsb
imul
sbb
cltd
insl
mov
sar
call
in
or
pop
xchg
lds
dec
sub
mov
rcll
mov
xchg
arpl
jne
mov
in
das
outsb
call
or
cmp
lods
xchg
jmp
fwait
rcrb
nop
dec
mov
dec
sub
icebp
and
aaa
xor
push
loope
cmpsl
dec
push
adc
jecxz
mov
sbb
pop
aaa
cs
stos
nop
js
mov
jl
or
test
hlt
lret
rcr
add
inc
mov
and
jmp
jmp
pop
xchg
jne
stos
dec
sub
nop
inc
test
fwait
out
inc
cmp
icebp
add
decl
data16
sarb
push
iret
arpl
jecxz
sub
xchg
mov
mov
xor
fistpl
pop
xchg
mov
hlt
inc
int3
pop
bound
scas
xchg
adc
pop
xchg
xchg
mov
mov
int3
subl
into
scas
cmpb
dec
pop
sbb
jmp
enter
fidivrl
dec
pusha
add
add
sub
lcall
add
imul
xor
ljmp
shll
cmp
pop
mov
pand
pop
call
test
js
add
movsl
lock
ljmp
iret
loopne
mov
hlt
and
lret
icebp
in
mov
cltd
ficomps
jmp
or
jnp
lahf
test
arpl
push
fdivrl
sbb
jmp
popf
lods
dec
pop
lea
rcll
push
ljmp
fwait
push
inc
test
call
push
pushf
or
jnp
and
mov
sub
rcll
or
push
test
fs
lahf
push
test
ljmp
inc
sub
scas
test
lret
aaa
mov
push
mov
jnp
cld
inc
ljmp
ret
jns
insl
aad
push
jnp
mov
sbb
xor
jg
mov
push
pushf
rcrb
push
ficompl
mov
imul
shll
fbstp
or
ljmpw
call
aam
mov
push
lcall
xchg
sbb
fsubrl
ljmp
mov
xchg
xor
cmpl
ret
inc
dec
scas
push
adc
out
test
mov
adc
ds
lea
pop
loop
jg
jns
loop
pop
jbe
dec
xchg
sub
inc
xchg
add
jmp
mov
cwtl
notb
sub
sub
mov
cltd
jmp
lcall
fidivl
push
ss
xchg
mov
xlat
fiadds
pushl
mov
jbe
push
xchg
xchg
pop
jle
mov
arpl
imul
sti
mov
lcall
ljmp
mov
sub
and
sub
stc
dec
mov
les
ficomps
lock
push
inc
enter
push
outsb
daa
mov
call
push
scas
xor
add
jecxz
out
pop
pop
mov
movsb
jge
lret
ret
scas
cli
dec
sbb
ss
add
movsb
out
dec
inc
stc
punpcklbw
dec
and
inc
or
sub
test
nop
and
and
jnp
jle
jae
inc
lahf
cli
movl
incl
cmp
xchg
inc
dec
test
dec
lods
cmp
push
sbb
out
lods
loope
incl
in
dec
push
daa
sbb
pop
mov
rorb
sahf
inc
xor
add
xor
aam
jge
dec
xor
jg
jnp
mov
xchg
imul
adc
rcr
dec
inc
add
jns
jg
sti
xchg
stc
cld
pushf
push
ret
mov
xchg
cltd
in
xor
hlt
aad
xchg
icebp
pushl
inc
jnp
or
mov
fwait
jbe
mov
jb
leave
sbb
ret
fists
iret
stc
mov
ja
sbb
push
hlt
orb
and
sar
jg
lcall
mov
icebp
mov
fnstsw
adc
and
pusha
mov
or
push
ljmp
xor
and
xchg
sbb
pushf
sbb
cli
lcall
lods
and
push
xor
les
sub
stc
aad
in
pop
fs
push
dec
mov
pop
mov
je
mov
aaa
roll
arpl
loope
push
add
sub
jmp
jmp
lahf
std
push
in
fisttpl
in
cmp
test
movsb
jecxz
orb
scas
ljmp
or
jns
test
or
sbb
lds
push
cmp
out
movsb
jno
sub
push
jne
lahf
js
shr
pop
scas
sbb
ds
in
pop
lcall
push
inc
xor
mov
mov
test
int3
xchg
add
inc
call
fdivr
mov
sbb
mov
push
stc
push
pop
fdivl
xchg
cmp
shrl
xchg
xchg
push
cmp
mov
inc
push
lea
testb
scas
inc
mov
inc
xor
xlat
roll
add
pushl
daa
xor
stos
addr16
mov
mov
adc
gs
std
dec
rorl
clc
cmc
or
std
push
lods
cmp
lret
sub
pop
sbbb
test
mov
mov
mov
mov
mov
outsb
pushf
rcll
xor
cltd
xchg
shll
loope
rcrb
jp
sahf
jb
aam
decl
cli
rcrb
fldt
out
scas
jecxz
pop
inc
subl
push
loop
decl
test
loopne
mov
pop
repnz
ja
jbe
insb
and
insl
sti
sar
mov
call
pusha
xchg
sub
aas
enter
mov
jbe
jmp
fs
mov
mov
andb
pop
and
pusha
dec
and
ja
cli
jno
mov
mov
lret
gs
and
jmp
xorl
add
push
leave
jmp
xchg
jnp
or
cltd
push
mov
jbe
cld
adc
sti
cli
je
sub
push
jl
sub
dec
jecxz
jmp
push
pop
cs
jnp
andl
fcomps
push
mov
pop
cmp
outsb
or
sar
xlat
push
into
push
std
scas
cwtl
jg
cmc
jmp
pop
not
pushf
adc
mov
icebp
lcall
sub
lret
push
inc
xor
and
jbe
xchg
mov
dec
insb
cwtl
jmp
add
movsb
jne
fisttps
ficomps
out
mov
cwtl
testl
dec
loope
out
int3
jl
mov
out
jecxz
pusha
shll
clc
call
fsubrl
mov
addb
out
lahf
cmp
xor
mov
pushl
ljmp
iret
and
or
jmp
lock
cs
add
lret
addb
or
in
push
sbb
xchg
cmpsb
pop
add
lock
sbb
frstor
inc
xchg
fcom
xor
out
cmp
dec
sub
pushl
xchg
popa
jns
add
add
add
mov
nop
sarb
int3
and
add
cmp
sbb
or
mov
clc
ljmp
cmpsb
xrelease
xchg
insb
xor
pushl
popa
nop
pop
sub
popf
call
sub
sub
call
sub
les
ss
mov
adc
add
mov
push
stos
mov
icebp
xchg
pushl
test
test
hlt
inc
cmp
xchg
cmpsb
inc
scas
movsl
bound
cmp
fimull
jg
pushl
popa
mov
xor
jle
fsubl
or
sub
pop
or
jmp
ret
sti
dec
jl
int
pop
cmp
sub
lcall
push
add
pop
not
lret
lret
mov
aas
addr16
shl
loopne,pn
jecxz
test
pop
inc
adc
lcall
jle
sbb
out
pop
add
lcall
lcall
xchg
mov
mov
fidivs
mov
pextrw
stos
repnz
jle
push
and
mov
or
push
ss
sbb
stc
mov
and
cmp
jg
lcall
cli
jp
int
repz
inc
into
pop
sbb
movsl
negl
sar
ljmp
push
repnz
dec
insb
jmp
or
aas
imul
pop
inc
xchg
mov
daa
ret
sahf
cmp
pushf
xchg
loopne
int
xchg
dec
xchg
pop
push
movsl
xor
jmp
scas
pop
icebp
pusha
or
test
or
push
add
xchg
or
out
cmc
pushl
jl
push
or
pop
xchg
aaa
clc
fs
push
mov
enter
pushf
sub
push
adcb
test
mov
dec
jge
int3
pop
mov
adc
fdivs
pop
stc
je
inc
rorb
and
scas
dec
sub
decl
lods
lea
sti
orb
dec
loope
sbb
test
in
into
insl
mov
out
ljmp
push
dec
pop
test
pop
cli
adc
dec
cltd
mov
rcll
cld
insl
inc
adc
xchg
mov
ljmp
adc
aad
rorl
jb
mov
bound
pop
inc
or
and
fistps
xchg
aaa
cs
rclb
xor
fisttpll
xor
dec
ljmp
cs
xor
adc
inc
int3
ljmp
ljmp
mov
bound
add
mov
dec
lret
das
cmpsl
xor
lock
nop
jnp
jb
xor
pusha
dec
pop
jecxz
mov
and
add
pushl
mov
jnp
decl
jmp
add
std
fwait
mov
xor
repz
xchg
xchg
call
pushf
cmp
sbb
xchg
jno
fsubrs
push
je
and
cmpsb
push
movsb
loope
mov
ret
call
test
xchg
xchg
xchg
jae
imul
add
xor
lret
popl
jge
sub
shlb
lcall
push
pop
pop
push
sbbl
ja
ljmp
mov
xor
lds
aad
ret
dec
xchg
in
test
mov
int3
mov
call
scas
xor
dec
inc
dec
shlb
lock
dec
jl
adc
arpl
pushl
xor
sbb
or
repnz
ja
aaa
scas
pushf
movsb
cwtl
cmc
jno
test
outsl
and
cli
and
inc
pushf
call
enter
push
inc
dec
jae
incl
add
popa
push
insb
sub
mov
push
arpl
js
mov
dec
inc
sbb
cmp
pop
push
lret
icebp
ror
pop
subl
shlb
incl
inc
call
push
test
stc
scas
das
es
aaa
cld
pop
adc
out
xchg
incb
and
negl
mov
push
fists
push
loop
jp
es
sti
xor
outsl
cli
lcall
cmp
inc
stos
in
inc
insb
push
rolb
out
or
lcall
sbb
sub
dec
dec
outsb
test
jmp
inc
pop
subl
pop
pop
icebp
dec
fs
sbb
mov
cltd
xor
add
pop
test
incl
nop
fbstp
fstl
cmpsb
mov
xor
dec
hlt
incl
jne
xor
lea
adc
lods
and
aaa
pop
add
mov
push
add
xor
mov
lret
mov
jmp
inc
test
or
fadds
in
ds
sbb
pop
iret
lock
mov
in
push
shr
xchg
mov
lret
out
ljmp
jns
dec
and
loop
jp
jp
jle
gs
sub
imul
ljmp
aaa
jnp
jne
call
std
scas
xchg
stc
or
mov
add
movsl
call
stos
test
pusha
clc
test
fcomip
add
pop
jmp
lret
addb
or
adc
add
lahf
and
lcall
mov
outsl
add
xor
adc
in
jb
pop
jno
mov
mov
ljmp
push
mov
jno
hlt
cmp
jnp
shll
sbb
mov
inc
insb
call
xor
lock
cmc
pop
pop
fsubrp
and
in
jne
es
cmc
lods
decl
pop
adc
sub
in
push
loop
sub
add
jl
xor
shlb
insb
movsl
or
lcall
dec
inc
mov
mov
sahf
or
test
sarb
shlb
ret
fs
jmp
std
and
mov
jmp
push
nop
mov
insl
jmp
aad
aaa
mov
imul
push
cmc
dec
sub
dec
clc
mov
je
mov
ret
mov
mov
icebp
out
cmp
or
push
dec
adc
out
jnp
pop
test
lcall
repnz
xchg
inc
sub
mov
ljmp
xchg
iret
sub
pop
mov
mov
jbe
in
xchg
cmp
push
pop
cs
dec
ror
push
clc
dec
xor
lret
adc
mov
movsb
sarb
in
sub
adc
outsl
xor
sbb
sete
std
decl
fisubrs
je
jnp
inc
mov
stos
gs
mov
mov
add
lock
inc
test
inc
clc
decl
ja
enter
ljmp
pushl
or
cs
push
icebp
test
cli
in
test
mov
mov
ret
push
add
inc
xchg
movsl
shrl
push
mov
idiv
jmp
and
mov
pop
pop
or
enter
mov
das
std
call
movb
jmp
ja
push
push
sbb
xchg
jbe
jge
inc
mov
push
xor
int3
hlt
aad
pusha
cltd
add
rorl
and
call
enter
add
cmc
int3
imul
mov
fucom
insb
mov
mov
mov
jmp
inc
cmpsb
aad
mov
mov
sbb
jbe
fucom
mov
pop
rcll
xor
test
es
lea
cli
ljmp
cld
mov
push
sar
popa
pop
mov
call
in
mov
add
incl
lcall
movsl
inc
or
sbb
push
dec
adc
jge
ljmp
dec
das
imul
fstps
pop
add
repz
rcrb
int3
sbb
std
mov
cmp
push
inc
lods
minps
cld
xor
adc
jno
popf
mov
out
out
lcall
inc
dec
jmp
lret
push
cmp
out
or
mov
fistpl
rorl
mov
out
mov
je
sbb
bnd
enter
ds
dec
shll
pushf
xor
je,pn
sbb
call
sbb
hlt
into
or
lods
test
lahf
mov
sub
xor
push
decl
pusha
imul
push
mov
jmp
sub
leave
test
mov
sub
push
xchg
inc
fsubl
imul
or
sti
pusha
dec
sar
data16
inc
rcr
pop
in
cli
fwait
push
xor
mov
outsb
adc
mov
xchg
shl
mov
sahf
jmp
xchg
icebp
or
mov
push
mov
repz
jmp
shl
push
push
push
pop
insb
fcmovb
sub
lods
xlat
imul
jmp
cmp
test
test
dec
pop
js
je
mov
dec
mov
inc
push
incl
out
add
das
pusha
mov
inc
popa
insb
add
test
push
shr
mov
mov
aad
in
pop
and
ljmp
loop
gs
or
or
push
sub
popa
out
enter
pushl
fwait
cli
mov
add
pop
xor
pop
int
and
incl
loopne
mov
lods
xor
push
bound
cmpb
pop
sbb
dec
jmp
add
jo
lcall
dec
insl
xchg
jp
clc
lods
outsb
stos
filds
out
fs
fsubp
rcrl
inc
rorb
inc
dec
mov
mov
mov
fwait
ljmp
scas
clc
rorb
lret
jne
push
in
or
sbb
xchg
std
jne
fiaddl
pop
outsl
inc
jmp
inc
sbb
xor
pop
out
mov
bound
push
mov
jmp
xchg
cld
decl
nop
cmp
lahf
data16
aas
pop
push
dec
iret
in
xor
xchg
and
sub
jg
imul
and
push
xchg
mov
lcall
mul
je
mov
fsubrs
sub
daa
xor
ljmp
clc
pushf
mov
inc
jp
mov
sub
fs
sbb
push
sbb
ss
mov
push
mov
pop
xor
sarb
out
push
test
push
iret
call
aas
xor
subl
js
cmp
lahf
je
pop
mov
imul
clc
sub
decl
jo
sbb
mov
mov
nop
dec
add
ffreep
xor
rolb
out
push
cmp
push
push
loope
test
and
cmp
ljmp
sub
jmp
dec
cmp
pop
insb
leave
mov
push
adc
jecxz
std
lret
push
es
cmc
lcall
hlt
pushf
imul
loope
mov
js
sbb
xchg
loop
clc
ljmp
out
jnp
scas
sarl
bound
outsb
in
dec
or
mov
inc
movsl
loopne
jl
pop
mov
inc
and
lcall
or
stos
and
jmp
dec
rcrb
and
std
jge
pop
lea
mov
jae
rcrl
mov
lcall
sbb
test
mov
repz
outsl
inc
imul
loopne
inc
sub
decl
movsb
pusha
adc
call
fisttps
pop
cmpsb
mov
xchg
jmp
cmp
lret
push
and
pop
iret
xchg
gs
pusha
insl
insb
fwait
pop
imul
jmp
nop
mov
cltd
sbb
rorb
shl
inc
inc
or
ret
pop
loope
adc
jne
cli
xchg
movsl
jno
add
or
pushl
and
xchg
aam
sbb
xchg
in
loope
mov
adc
adc
xchg
imul
and
jmp
and
cmc
xor
inc
popa
in
call
cld
das
arpl
out
lods
pusha
ret
stos
push
mov
incl
push
xlat
lods
mov
stos
aaa
mov
xchg
jo
sub
sub
xor
xor
xchg
sub
cwtl
inc
mov
mov
pop
adc
push
mov
xor
dec
outsb
xchg
xor
pop
shlb
xchg
xchg
popf
dec
sub
mov
jno
push
push
mov
push
xlat
xor
mov
aaa
icebp
dec
daa
int
push
ret
add
jno
gs
cld
lcall
jnp
dec
and
insl
xchg
cltd
jg
and
and
gs
rclb
sub
adc
cmp
lods
loope
and
jg
incl
into
aam
lods
jl
xlat
mov
cwtl
stos
and
jecxz
dec
arpl
loop
mov
jg
fdivs
push
call
pop
inc
add
call
inc
or
xorb
scas
in
rclb
pushl
mov
nop
je
dec
test
test
cmp
das
nop
or
jle
sub
mov
jle
fwait
mov
cmp
lods
xchg
inc
push
xor
nop
sbb
push
jmp
mov
out
sub
cltd
mov
cmp
in
push
push
data16
decb
repz
ja
sbb
mov
loopne
pop
jecxz
incl
cmpb
lea
pop
or
dec
xor
sbb
adcb
decl
mov
fstpl
stos
and
push
jns
test
pop
push
aad
or
loope
and
pusha
sbb
pop
xor
inc
jge
xchg
jmp
adcb
and
ss
cltd
adc
pop
ret
jo
mov
inc
xchg
nop
adcb
inc
add
in
lahf
xor
or
ret
mov
xor
outsb
or
jne
push
mov
call
mov
jae
in
xchg
int
pop
sti
pusha
cmp
test
mov
pop
pop
mov
jmp
mov
cli
or
pop
lcall
out
adc
mov
mov
divl
and
clc
cmp
pop
sub
lods
pop
xor
dec
cld
incl
add
in
mov
sbb
lret
mov
ljmp
aad
shlb
inc
test
test
mov
cmp
cmp
adc
pop
hlt
pop
mov
in
pop
stos
out
adc
fistpll
clc
notb
outsl
sub
sub
and
mov
mov
stc
sub
into
mov
lcall
cwtl
pop
and
arpl
xor
fs
sbbl
mov
or
push
xor
jg
cmpsb
sti
clc
push
cwtl
insb
jno
pop
and
mov
lret
stos
mov
add
mov
jae
cmc
jl
rcll
sub
incl
push
cmp
scas
or
repz
notb
sub
push
cwtl
pop
add
aas
and
fwait
mov
pop
push
cld
hlt
sbb
aaa
scas
mov
cwtl
add
fcompl
loop
and
lcall
push
mov
aam
cli
add
push
clc
dec
sub
aam
call
xor
dec
decl
xor
inc
clc
insb
js
mov
fwait
inc
push
mov
imul
xchg
bound
stos
jmp
push
adc
fcoml
dec
xchg
mov
cmp
lods
push
mov
add
in
mov
pushf
push
jg
incl
jns
orb
cmc
leave
fiadds
lret
sbb
dec
pop
push
imulb
pushl
xor
cmp
sub
xchg
pop
fnstenv
add
out
mov
inc
dec
push
out
aas
out
mov
dec
lahf
ljmp
insb
push
jp
lahf
int
jle
fwait
sub
das
mov
pop
jb
divl
cmp
and
dec
loope
inc
jo
mov
in
fcompl
notb
inc
cmc
jp
mov
movsb
adc
sbb
pushl
sub
into
pop
jle
pushf
adc
fsubr
stc
sub
loopne
das
jp
mov
jnp
adc
dec
inc
pop
adc
and
lcall
rclb
jno
ljmp
xchg
sub
push
daa
inc
lds
or
fsubrs
dec
cmpb
push
mov
jg
sarl
fldenv
daa
pop
push
lock
xlat
mov
pop
cmp
sbb
call
ret
movb
setle
int
jg
mov
cmpsb
inc
sub
push
cs
subb
xchg
inc
push
fdivr
pushl
jle
ja
fcoms
cmc
stos
sub
xor
pop
loop
cli
jbe
inc
jb
vcvtsi2sdl
clc
jecxz
shrl
cmp
fdivs
movq
dec
cld
mov
mov
push
xor
inc
cld
ljmp
push
xchg
ljmp
cmpsb
jg
mov
add
pushf
shlb
repz
cs
popf
fucomip
sub
call
ds
and
adc
mov
xchg
sahf
dec
aam
dec
adc
ret
shll
push
jmp
ljmp
lods
pop
repnz
xchg
add
lods
sub
loopne
sbb
incl
mov
push
pop
pop
test
mov
push
and
or
decl
xchg
cs
dec
pushf
pop
ss
arpl
jb
and
mov
int3
fcmovnbe
decl
call
sarb
in
hlt
call
jns
jo
movsb
push
movsl
rcll
loopne
fdivrl
sbb
push
fldcw
adc
jl
ror
or
add
decl
dec
hlt
mov
add
jne
add
clc
pop
inc
jb
sti
push
mov
js
mov
stc
out
shr
test
out
int3
xchg
rcl
cmp
mov
addb
sbb
ficomps
push
scas
lods
cmc
ljmp
aas
cmp
push
xor
xchg
lcall
and
push
cmp
lea
push
fisubrs
outsl
out
and
jle
sbb
lods
movsb
mov
incl
out
and
cmpsb
inc
mov
test
into
mov
imul
hlt
mov
fs
insl
xor
andw
mov
or
pop
xor
push
pop
lret
adc
pop
mov
in
pusha
orb
jg
lds
sti
test
test
mov
mov
loope
stc
lcall
out
js
out
cmp
loop
pop
cmc
ret
mov
arpl
sahf
cli
test
mov
lods
je
add
sar
add
repz
pop
rclb
repz
filds
mov
mov
dec
movq
dec
hlt
movsl
scas
mov
lcall
pop
mov
xchg
pop
test
popf
pushf
divb
test
or
add
xor
in
ljmp
js
pop
ret
ret
jnp
pop
int3
fildll
arpl
mov
xchg
xchg
mov
cmpl
fiadds
xchg
repz
add
popf
pop
xor
sub
nop
pushf
fnstsw
cmp
jmp
jge
or
fiadds
inc
pop
xlat
cmpsl
daa
cmp
imul
cs
sti
or
pop
clc
call
adc
stos
inc
inc
mov
push
jnp
scas
pop
arpl
sub
sub
add
pop
sbb
fstl
sahf
dec
test
and
shlb
daa
push
ljmp
jb
jg
fwait
xchg
xchg
adc
int3
aaa
lods
xchg
fadds
fistpll
fimull
dec
push
pusha
inc
mov
sub
sub
mov
mov
sub
lods
cmp
aad
dec
push
loopne
pop
mov
sbb
push
cmp
call
fldl
xor
lea
stos
sbb
xor
ljmp
outsb
inc
stc
cmpsb
loope
cltd
test
call
divb
call
scas
cld
fwait
lods
inc
lret
repz
xchg
test
mov
mov
jb
adc
in
scas
adc
call
sti
nop
jbe
sub
adc
mov
push
enter
jmp
sahf
lods
push
daa
call
pop
ret
mov
push
cld
adc
movsb
iret
cmpsb
hlt
lcall
pop
inc
out
outsl
cwtl
mov
popf
scas
and
or
call
mov
or
adc
push
arpl
mov
and
jmp
push
int
ret
into
xchg
jg
xchg
add
push
decl
enter
in
inc
push
ja
push
push
mov
out
mov
repz
shll
das
outsl
fdiv
je
pop
jecxz
pop
sub
fsubrs
jmp
or
decl
shlb
inc
xlat
dec
ss
cli
js
xchg
add
xor
mov
mov
stos
mov
pop
cmp
je
mov
pusha
pop
out
xchg
inc
push
rcll
fsub
or
outsl
rcl
push
sbb
lcall
sbb
pusha
jecxz
push
mov
aas
xor
inc
shlb
into
mov
out
push
icebp
jmp
movsl
pop
rcrl
pop
add
enter
xlat
xchg
dec
xchg
mov
sahf
lea
or
ret
mov
pop
addr16
incl
out
inc
push
or
pop
scas
or
or
cmp
xchg
notl
outsl
and
cmp
cmp
or
add
dec
fbstp
popf
imul
inc
xor
push
push
lock
call
stc
cmc
shl
into
sbb
add
mov
adc
test
stos
xchg
movsb
lcall
mov
lds
fsubs
inc
sarb
mov
lcall
gs
ds
ret
cmp
outsl
ljmp
adc
fistpll
loop
pushl
jg
inc
stc
addr16
cmc
and
jp
dec
xchg
mov
push
cmpsb
sbb
jbe
xchg
clc
pusha
daa
fcomip
jmp
orl
je
or
out
fistpll
sub
aad
scas
fisubrl
push
pop
clc
inc
push
shlb
mov
push
sbb
jb
mov
enter
stos
adc
sbb
push
xor
push
lahf
repz
mov
mov
stos
sub
mov
roll
sbb
sbb
les
xchg
test
mov
lcall
lock
test
push
mov
push
sub
push
add
aad
push
sarl
stc
xor
cmp
out
push
xor
pop
inc
cmp
mov
or
adc
das
dec
add
decl
push
pop
adc
cmp
rolb
filds
push
push
sarl
push
mov
or
aaa
fadd
sbb
xor
lods
add
fwait
cmp
push
adc
mov
insl
stos
fwait
lahf
mov
and
dec
sar
jo
adc
mov
incl
jge
mov
or
iret
sti
ret
jae
rcrb
in
mov
test
add
out
insl
pusha
stc
outsl
dec
lret
rclb
shll
negl
mov
decl
ljmp
push
stc
cmp
lock
movsb
je
lock
ljmp
sub
and
fistps
xchg
test
and
or
incl
add
and
adc
pop
dec
inc
loope
out
mov
test
sbb
cmpsb
es
xchg
out
popa
clc
std
in
push
push
or
jnp
int3
mov
subb
leave
dec
das
imul
test
ja
and
cld
adc
dec
mov
dec
imul
nop
xchg
mov
fstpt
test
push
lds
mov
add
xor
jo
jno
fstpt
ror
adc
call
test
pushf
xchg
and
mov
adc
inc
push
sbb
cmpb
dec
mov
es
adc
lea
mov
nop
sbb
push
neg
hlt
sbb
lcall
dec
cmp
loopne
xchg
std
mov
sub
popf
ljmp
cmp
inc
pop
lods
incl
into
cmp
cmp
das
mov
icebp
aad
mov
jbe
ljmp
and
sti
rorb
ja
push
xchg
pushw
xadd
insl
gs
incl
test
cli
fwait
or
xor
and
xchg
pop
cmc
pop
mov
ljmp
cmp
sub
xchg
xor
xor
popa
test
imul
jg
incb
jge
push
or
in
int
mov
mov
in
ljmp
adc
pop
aam
lcall
or
sbb
and
fsub
addb
shll
pushl
xchg
and
sub
and
mov
push
jg
out
fimull
fwait
xchg
cmpb
mov
lds
xchg
les
fcomip
test
cmpsl
movsl
cs
dec
cld
out
daa
arpl
jl
mov
cmpsb
or
mov
xchg
pop
jle
cmp
in
or
sbb
or
dec
cli
add
scas
es
lock
popa
mov
pushl
cli
cmp
lea
popa
sbb
std
or
sti
shll
mov
adc
or
lcall
xor
cmp
ds
or
xchg
or
movsb
shl
ljmp
fwait
insl
sub
fcmovnb
sti
adc
cmp
dec
int3
lret
jmp
push
sarl
or
pop
inc
ficomps
mov
psubq
icebp
pushl
mov
mov
movsl
fdivrl
in
fucomi
mov
lods
hlt
lret
dec
imul
pop
out
je
sub
cld
fwait
decl
test
lds
lret
push
shl
daa
scas
add
es
push
jle
rol
mov
lds
ljmp
into
movsl
fnstcw
loopne
mov
popa
shll
push
jmp
arpl
mov
push
sbb
ljmp
push
mov
pop
mov
incl
outsl
icebp
ja
mov
fs
push
call
mov
test
jmp
test
mov
pop
xorl
out
adc
pushl
xchg
enter
mov
sahf
ljmp
rcl
cmpsb
push
enter
aad
incl
ljmp
cmpb
js
lods
pop
aam
pushf
cmp
xchg
push
xchg
ds
cld
sbb
cwtl
adc
sub
cs
outsb
out
lret
xchg
imul
cmp
push
or
das
cmpb
push
daa
adc
dec
add
push
lahf
jbe
mov
test
sbb
mov
stos
cmpsl
dec
dec
lcall
xor
hlt
test
jl
popa
subl
sbb
inc
and
fmul
shlb
dec
jae
xchg
sbb
pop
pop
outsb
jno
jecxz
or
stos
shrl
jae
bound
lcall
mov
mov
cwtl
scas
xchg
or
xor
loop
pop
mov
js
push
mov
outsl
xchg
repz
nop
jb
cmp
lock
adc
adc
mov
decl
out
sbb
pop
test
imul
mov
ret
mov
mul
arpl
lret
cs
mov
lcall
orl
sbb
mov
mov
add
and
aam
dec
imul
test
in
mov
fldl
push
and
pop
mov
cmp
pop
pushl
pusha
cmp
cmc
nop
cld
in
pop
aaa
sbb
lcall
mov
push
add
jbe
mov
out
je
pushf
xlat
sbb
pop
rolb
lea
dec
jle
dec
or
sub
jmp
mov
cltd
add
and
popf
repz
in
loopne
rorl
and
xchg
aas
and
leave
push
pushl
add
roll
dec
js
xchg
dec
cld
lods
pop
aad
jmp
add
mov
jne
ljmp
mov
rcrl
xchg
dec
push
repnz
mov
dec
and
out
mov
imul
fs
mov
fstpl
xor
jns
lret
incl
mov
ret
mov
enter
fcompl
inc
mov
clc
mov
jge
cmp
incl
rol
rcll
lcall
scas
je
and
sbb
gs
push
ljmp
addr16
dec
in
jge
fildll
adcb
and
push
bound
fcmove
xchg
and
ss
cwtl
cmp
movsb
repnz
push
inc
cli
pushl
clc
dec
jge
fldcw
inc
jno
shrb
in
rcrl
pop
cwtl
sbbb
jmp
je
adcl
xlat
incl
mov
push
jmp
push
imul
push
xor
mov
cmp
rclb
and
or
fwait
inc
shlb
mov
cmp
xor
inc
out
clc
push
push
jne
jne
push
repnz
xchg
inc
scas
mov
loopne
rcrb
addr16
incl
cs
fidivl
mov
div
add
int
sarl
sub
mov
ljmp
and
ja
sub
sub
insb
dec
in
cmp
or
decl
add
pop
icebp
dec
in
mov
xchg
pop
fildll
in
clc
sahf
fnstcw
call
clc
shlb
cmp
ljmp
dec
sbb
aam
out
and
pop
iret
jno
setbe
push
sub
push
mov
mov
cld
scas
incl
pop
sub
lahf
cmpl
es
negl
mov
ja
sub
cmp
inc
add
mov
ljmp
mov
jnp
mov
lahf
sub
int
aaa
icebp
sub
test
push
mov
int
fs
adc
fwait
inc
stos
mov
loopne
sbb
sbb
lret
fmull
popa
addb
mov
ror
cs
call
jno
inc
or
es
fnstsw
push
pop
xor
mov
jnp
sub
lahf
inc
adc
mov
incl
add
lea
xchg
ss
je
imul
jmp
das
ss
daa
mov
mov
orl
xchg
aam
cltd
push
movq
sub
jg
inc
dec
cmp
int3
jge
inc
push
daa
sbb
lods
cmpb
lret
outsl
add
out
jl
dec
incl
lret
fcomip
xchg
dec
lods
sarl
ja
fsubs
hlt
and
adc
ljmp
sub
push
cltd
popa
jle
xchg
faddl
mov
jecxz
add
xchg
mov
pop
loope
cld
or
xchg
das
dec
decl
ret
push
in
mov
inc
jge
push
leave
into
xor
movsl
mov
mov
loop
push
jno
xchg
jl
xor
jecxz
lds
lds
push
xchg
call
mulb
or
lock
xor
jmp
lahf
call
mov
dec
inc
repnz
xchg
xchg
jno
xchg
stos
mov
pop
jl
or
mov
push
incl
imul
cld
fisubrl
cmpsb
out
pushf
inc
gs
xchg
fwait
popa
fldcw
pushf
dec
mov
mov
pop
or
ja
nop
push
and
cld
dec
ljmp
or
mov
xor
adcl
push
mov
or
filds
stos
xor
out
cltd
es
ss
jg
mov
lret
adc
cmc
mov
inc
aad
jns
loope
mov
movsb
mov
outsb
cmp
cmp
pop
decl
loope
push
xor
xor
sub
test
aam
clc
icebp
jbe
mov
inc
push
jmp
cmc
push
test
loop
sub
adc
imul
fcomip
xchg
mov
cmp
jae
dec
pop
test
ret
cmpb
andb
ljmp
xor
enter
cmp
sar
dec
cmc
stos
les
lea
or
loopne
mov
mov
and
inc
jl
rcll
daa
cmp
cmc
xor
outsl
addb
pop
pop
push
add
mov
xchg
dec
lods
jmp
jge
cltd
mov
jp
insb
int3
out
arpl
cli
mov
xchg
adc
mov
add
flds
fsub
std
ljmp
dec
sbb
xchg
pop
add
adc
jb
push
testb
dec
mov
jg
aaa
cmp
in
sbb
mov
push
negl
pushf
out
pop
add
sbb
loope
ljmp
je
cmp
sub
pop
dec
cmpl
lret
bound
jp
loope
pushl
adc
jp
fiadds
in
popa
add
cmc
dec
push
les
lods
dec
shrb
sub
xor
arpl
rcrl
add
cmpsl
fsts
mov
popa
sub
pushl
adc
mov
daa
cmpsb
sbb
mov
out
and
call
inc
gs
xchg
adc
dec
adc
pop
jnp
mov
sub
adc
push
sbb
insl
push
lea
loopne
xchg
push
ret
or
add
out
movsb
adc
fwait
shll
cmc
mov
push
sub
xchg
mov
add
mov
mov
or
pop
out
jbe
dec
icebp
lret
scas
sbb
add
sar
mov
or
or
aaa
push
jno
xchg
sbb
mov
xchg
cmp
mov
jmp
in
jns
xchg
scas
cs
cmpsb
leave
lret
xchg
call
lcall
push
cmpsl
mov
or
imulb
inc
jecxz
fwait
and
aam
xor
xchg
stos
lcall
jbe
aas
pop
or
movsb
push
int3
xchg
cmc
dec
outsb
ja
ja
jmp
xor
jbe
xor
in
add
xchg
and
xor
jmp
push
push
sbb
std
dec
or
xchg
popa
xor
xor
lret
fsubs
aam
jg
mov
jbe
jmp
dec
push
mov
mov
call
gs
dec
ds
adc
xchg
jl
daa
add
call
out
cmp
mov
bound
jg
in
sbb
add
pop
movsb
out
xor
stos
mov
pop
arpl
push
xchg
popa
cmc
jmp
scas
push
xchg
out
pop
out
xchg
push
ret
and
leave
xchg
or
and
loope
lds
xor
adc
xor
int
cmp
add
stos
sbb
out
loopne
icebp
iret
or
push
sub
dec
jns,pt
ljmp
xchg
sbb
xchg
or
je
cmpsb
lods
push
inc
out
int3
rcrb
push
pushl
or
loopne
enter
cmp
or
hlt
inc
pushf
pusha
jo
imul
push
xor
out
sbb
lret
outsb
ss
ljmp
outsl
js
js
dec
sarl
repnz
aam
xchg
inc
in
jmp
jae
test
repz
mov
xchg
lock
jmp
shll
repz
mov
adc
test
js
dec
cmp
ljmp
cmp
xor
mov
mov
mov
fists
adc
mov
fldenv
pop
lret
jmp
mov
lock
sahf
mov
or
mov
mov
jg
into
andb
pop
xor
in
divb
mov
lock
mov
inc
inc
jbe
rorb
and
cmp
arpl
add
hlt
add
cmp
test
js
jl
jl
add
testb
sbb
das
fs
dec
cmpsl
xchg
sbb
xchg
incl
mov
fstps
movsl
nop
push
popa
jb
mov
or
mov
daa
cli
test
movsl
inc
push
cmpsl
test
pop
jge
adc
mov
jg
add
cmp
push
in
cli
retw
push
mov
iret
jle
mov
sub
lods
push
and
test
cmp
inc
pop
loopne
out
pop
mov
sub
xor
adc
pushl
and
shlb
stos
add
adc
xor
and
xchg
ljmp
pop
imul
xor
dec
cmc
int
shlb
call
cmp
sub
pop
fwait
dec
sub
cmc
jmp
daa
out
lahf
data16
mov
outsb
jle
dec
or
inc
jge
push
ja
adc
mov
gs
mov
push
call
in
dec
popa
add
aas
sbb
push
popf
dec
fs
push
cli
scas
ds
aad
lret
aas
adc
shll
ds
stos
add
mull
cld
sbb
cltd
mov
lahf
in
sbb
adc
jle
ffreep
ljmp
lahf
fwait
push
movsb
call
jmp
push
loop
shlb
lcall
outsl
clc
jmp
sarb
orw
aam
sti
mov
sbb
pushl
dec
rcrl
hlt
stc
mov
or
jmp
cmc
movsl
sub
in
ss
sbb
push
std
or
fdivs
and
repz
push
out
test
incl
in
cmp
jnp
shrl
mov
push
mov
push
mov
call
cmp
mov
lret
mov
jge
ret
sub
or
push
mov
xorb
ret
shr
cwtl
add
and
mov
aad
sub
fisttpll
fildll
cld
nop
inc
std
inc
push
clc
loopne
lds
data16
sub
shrl
mov
pop
repnz
jo
jne
ljmp
inc
jle
pop
cli
pusha
mov
pop
lcall
pop
mov
into
dec
and
dec
pop
outsl
outsl
incl
jl
pusha
lret
push
inc
dec
mov
fmul
pop
aad
push
inc
sahf
notl
jmp
out
sar
dec
inc
loop
xchg
sub
or
mov
ror
xor
inc
add
push
les
scas
ds
call
mov
cmp
jns
test
aad
jo
scas
repnz
dec
cmp
aaa
push
mov
jecxz
mov
adc
jae
push
pop
push
sub
incl
dec
sub
push
cmc
dec
jg
push
lds
hlt
mov
jne
cld
decl
jno
jo
ss
or
int3
push
fistl
outsl
lods
jg
cmp
mov
es
jns
shlb
dec
int3
pop
sub
mov
sbb
xor
mov
jbe
jmp
ffree
lock
cmp
das
outsl
add
mov
mov
stc
nop
jmp
or
mov
jg
ja
dec
inc
pop
aad
or
push
stc
xchg
sbb
pop
add
xor
fidivrl
in
add
andb
xor
inc
jmp
jne
add
push
jecxz
idiv
decl
jb
push
mov
imul
call
lret
mov
loope
or
decl
xor
cltd
mov
popf
mov
mov
sbb
in
outsb
iret
ja
lcall
xchg
sbbl
mov
xchg
jg,pt
pop
jne
es
xlat
adc
xlat
add
and
jecxz
repnz
lea
push
pop
shlb
jnp
daa
addb
mov
nop
or
mov
ljmp
ret
faddl
adc
or
cmp
add
jge
call
jno
test
popa
jl
add
mov
sarb
lahf
mov
and
inc
jne
jecxz
fistpll
inc
jg
or
je,pn
mov
sub
shll
jp
inc
mov
arpl
lret
incl
jnp
cmpsb
lods
fisttpll
dec
mov
les
xor
adc
mov
adc
jmp
adcb
movsb
test
iret
dec
icebp
lock
jg
mov
ret
add
int3
das
jne
mov
or
aam
lcall
stos
and
mov
fbld
add
insl
je
nop
xchg
daa
in
mov
xchg
push
into
ljmp
ljmp
std
lcall
dec
ljmp
and
mov
inc
jg
shlb
hlt
inc
call
lret
loop
mov
xchg
jb
repz
lcall
adc
push
adc
ret
xor
sub
pushl
sbb
stos
mov
divl
arpl
mov
pop
insl
mov
shrb
incl
push
sub
bound
test
fldl
test
xchg
in
cmp
lret
dec
test
cwtl
pop
std
pop
sarl
mov
mov
jge
pushl
orl
lods
lea
rcr
sbb
jecxz
ret
inc
jmp
rcll
test
rorl
fwait
ljmp
pushl
adcb
inc
pop
pop
lret
lret
inc
pop
cmpsb
xchg
icebp
incl
jo
cmp
ja
aad
and
sbb
inc
jae
in
inc
and
jne
mov
mov
xor
fisubl
in
repnz
inc
loopne
mov
or
aad
add
test
dec
and
push
and
xchg
xor
dec
xorb
call
push
fdivs
icebp
pop
cwtl
es
stos
iret
loop
mov
mov
decl
in
xor
pop
scas
rcrb
out
adc
data16
inc
jo
dec
sbb
pop
imul
mov
cltd
loope
test
test
sub
mov
mov
or
fsubr
inc
xchg
dec
xor
and
out
sub
testl
out
in
inc
icebp
cli
gs
jg
inc
push
stos
popa
cmpb
in
xchg
pop
jecxz
ficoml
jmp
dec
xchg
popl
cmp
movsb
addb
hlt
pop
mov
cmpb
inc
icebp
push
jo
ljmp
iret
arpl
dec
pop
push
imul
or
dec
or
xlat
mov
es
mov
inc
es
ficoml
icebp
icebp
in
sub
sub
movups
pushl
ret
add
sub
sbb
adc
sub
dec
out
or
and
xchg
mov
and
dec
jnp
scas
int
fisubrs
int3
pop
push
incl
shlb
enter
mov
xlat
enter
jecxz
mov
sbb
decl
loopne,pt
fldenv
lret
cmpsl
or
dec
fsubrl
adcl
hlt
lea
cld
call
lret
mov
loopne
pop
mov
sub
xchg
push
fstpl
repnz
cmp
inc
mov
xor
add
xchg
mov
hlt
lods
mov
jg
add
add
fs
je
sbb
sbb
sub
xchg
mov
icebp
pop
das
cltd
incl
aam
mov
clc
pop
insl
cmp
or
pop
xchg
push
lcall
incl
sahf
in
sarb
adc
testb
test
test
and
call
leave
lods
iret
push
pop
aas
mov
and
test
jg
shll
movsb
or
jo
pop
jg
ljmp
repnz
xchg
jb
xor
loope
dec
mov
es
incl
xor
mov
inc
arpl
in
arpl
movsl
popf
push
mov
cmp
clc
dec
aad
adc
fstpl
mov
sbb
mov
dec
xor
in
clc
icebp
cmp
test
jae
lods
shrl
and
stos
stc
popa
mov
insb
adc
push
or
js
pushl
sbb
cmp
imul
add
push
hlt
cmp
imul
decl
movsl
pop
or
leave
fnstcw
insl
cmpl
popa
arpl
je
inc
or
ljmp
aad
mov
bound
push
sbb
and
sub
fcomi
fisttps
fstpl
aaa
add
divb
lret
icebp
je
sbb
jp
mov
cmp
or
pop
mov
rclb
ficomps
xchg
call
ja
mov
sub
into
fs
xchg
adc
std
lcall
mov
aam
pop
mov
push
ret
mov
sbb
pushl
les
shrl
jl
inc
xor
jo
nop
add
jp
push
mov
decl
mov
inc
and
adc
loope
les
mov
or
ljmp
loope
cmpsb
xor
aad
inc
adc
xor
mov
xor
mov
decl
cmp
enter
imul
cmp
mov
mov
bnd
dec
lret
clc
sti
fadds
xchg
cmpsb
or
pop
iret
js
add
dec
out
push
ljmp
inc
push
test
mov
dec
dec
imul
xchg
xchg
xchg
clc
nop
bound
cld
call
sub
in
mov
lods
xchg
sbb
fists
stos
fsubrl
mov
dec
loopne
pop
pushl
out
jmp
int
dec
insb
cltd
mov
movsb
or
adc
rorb
sbb
data16
loope
mov
mov
out
in
mov
into
subb
and
mov
sahf
nop
scas
adc
add
decl
pop
lods
mov
dec
aas
das
pop
dec
xchg
out
lods
mov
xchg
pushf
jge
inc
testl
sub
push
xchg
sbb
dec
jecxz
push
ja
int
imul
pop
sub
andnps
call
std
add
std
push
xor
mov
cmpsl
iret
lods
adc
or
insb
iret
decl
jmp
or
inc
and
test
pop
push
das
loop
dec
and
setnp
dec
xchg
decl
mov
mov
xchg
dec
cmpsl
fdivs
sbb
add
xlat
or
and
lock
ljmp
sub
sub
mov
and
and
dec
adc
pop
sbb
inc
adc
orb
out
clc
aas
pop
cmp
incb
pushw
scas
into
mov
push
test
jnp
outsb
sub
out
sub
cmc
hlt
xchg
xchg
and
imul
inc
incl
and
test
sub
push
ret
mov
or
into
cmp
call
testl
adc
jl
xor
cmp
in
fdivr
or
add
dec
add
inc
dec
out
lock
ljmp
aas
add
adc
outsb
jb
test
inc
adc
cmp
mov
push
jl
sbb
sbb
jmp
cli
fwait
cmpsb
cmp
cmc
sbb
dec
ret
pusha
in
lret
incl
pusha
adc
stc
xor
shlb
add
xchg
adc
decl
add
neg
mov
adcl
jns
and
xchg
lods
add
jmp
sbb
mov
testl
or
mov
mov
std
push
mov
aam
std
test
and
adc
xchg
decl
cmpb
sbb
imul
in
out
clc
ljmp
inc
dec
jle
sub
mov
xchg
add
les
push
cld
decl
inc
test
xor
or
xor
add
mov
sbb
xor
stos
into
cmp
sub
mov
cmp
in
cmpb
cld
xor
sbb
and
out
mov
cld
loope
inc
and
sbb
lea
sub
xor
sub
rorl
outsl
and
test
adc
aam
ret
ljmp
push
jg
or
push
ds
push
inc
xor
cmp
pushl
inc
shl
inc
adc
pop
addb
dec
xchg
inc
inc
outsb
mov
pop
or
incl
mov
sub
pop
adc
repz
scas
xrelease
mov
jg
sub
movsb
aad
xor
add
and
test
sbb
pushl
ss
repz
daa
xor
loope
mov
xchg
pop
sub
mov
es
enterw
subl
adc
push
lret
adc
cmpb
movl
cmpsl
pop
rcr
xor
pop
sbb
test
dec
movsb
cmp
enter
add
movsl
jg
adc
ffreep
data16
dec
mov
mov
xor
mov
sub
add
pop
icebp
mov
sub
add
sbbl
mov
mov
pop
loopne
sarl
jle
neg
imul
loopne
cmp
or
icebp
incl
ret
jae
scas
rorb
cwtl
dec
inc
inc
cmp
push
inc
mov
ljmp
add
dec
neg
or
lcall
outsl
jg
xchg
aam
out
icebp
outsb
test
mov
movsb
jns
sbb
incl
jecxz
out
ljmp
andl
xchg
lcall
add
cmpsb
dec
jns
in
out
insl
or
or
or
adc
or
test
incl
rorb
mov
repz
inc
lret
jle
in
pop
cmp
es
incl
cmp
loopne
sub
and
or
xchg
adcl
nop
pushl
les
testb
sbb
lcall
xchg
loope
popa
inc
sahf
loopne
stc
cmc
adc
out
xor
cmp
add
insb
stos
test
adc
loop
add
and
imul
mov
jmp
push
pop
pop
repnz
aas
mov
sub
mov
jl
pop
cmp
pop
cmpsl
jp
ficompl
mov
mov
mov
inc
mov
cmpsb
adc
push
out
mov
rorl
ret
mov
pop
and
lahf
out
std
ljmp
cld
push
xchg
push
sbb
ret
clc
sub
jmp
fmulp
insb
mov
sbbb
push
lock
fcoms
repz
imull
pop
jb
incl
ja
lds
addr16
or
lahf
mov
nop
test
sub
cmp
adc
lcall
lret
ja
inc
and
das
push
xchg
add
cmp
add
sahf
jl
push
clc
jmp
dec
lods
leave
or
scas
enter
lcall
xchg
jmp
rorb
cmp
push
ficoms
push
pop
call
jb
adc
js
jle
loope
and
mov
cmp
pushf
cmp
xchg
notl
inc
movsb
lock
sahf
add
test
imul
call
mov
jns
cmp
cs
and
inc
iret
mov
add
enter
pop
mov
stos
sub
sub
call
inc
sar
ljmp
mov
rclb
add
pop
fs
insl
dec
fisubs
call
std
out
fs
nop
loop
cmp
out
test
jbe
bound
sub
adc
in
jo
decl
clc
push
xor
adc
jnp
jbe
and
jp
clc
mov
jge
movsl
ss
cli
mov
addr16
lods
adc
incl
mov
cmp
inc
aaa
test
jne
pop
inc
das
decl
stc
xchg
or
xchg
dec
cmpsb
and
pop
dec
pop
add
stc
inc
or
or
mov
adc
aaa
rol
rclb
movsl
std
inc
cmp
push
lds
daa
mov
lods
arpl
mov
lret
mov
inc
push
jmp
cmpsl
aad
arpl
ja
decl
mov
push
adc
mov
mov
xor
stc
or
ljmp
push
cltd
jbe
test
bnd
mov
push
xchg
js
aad
subb
ljmp
xchg
loopne
in
mov
test
push
add
filds
jecxz
mov
pop
adc
xor
xchg
sarl
in
adc
dec
pop
or
sti
sbb
decl
adc
popa
jg
scas
fstpl
add
mov
cmp
lcall
shlb
test
push
inc
ss
mov
and
jnp
jmp
movsb
addb
mov
mov
dec
icebp
aas
push
fs
ds
pushl
pusha
mov
aas
orl
sbb
popf
test
icebp
xor
adc
jg
adc
pop
mov
mov
mov
scas
mov
mov
ss
mov
pop
int3
cmp
dec
outsb
mov
mov
lea
jae
pop
and
pop
push
stos
cmp
adc
out
ja
or
stos
cmp
cld
out
sbb
mov
mov
repz
xchg
pop
ja
mov
sub
dec
or
jno,pn
push
xorb
fimuls
pop
lret
test
push
jp
mov
xchg
mov
bound
mov
hlt
mov
cmp
sbb
std
lods
fs
loop
mov
mov
or
mov
incl
mov
and
insl
mov
lret
enter
dec
mov
sbb
jnp
inc
popw
movaps
inc
adc
fldcw
mov
rorl
js
cmp
mov
inc
or
je
test
dec
mov
in
adcl
jmp
push
pop
and
shrl
add
test
out
or
sub
inc
pop
inc
lods
movb
mov
inc
mov
insl
dec
lahf
dec
sahf
ret
cmp
dec
dec
je
pop
ds
and
inc
lahf
lock
jmp
addr16
mov
js
adc
push
rcrb
lahf
mov
cmp
pop
jge
push
je
jne
dec
inc
lcall
dec
pop
jo
mov
pop
jb
sub
sub
call
aas
lcall
push
fcomi
bound
lods
pop
xor
mov
out
or
fadds
insl
iret
out
jle
sahf
cwtl
sub
loope
and
xchg
fstpt
loop
pop
rclb
cltd
cli
mov
loop
inc
test
inc
mov
pop
mov
fisttps
mov
arpl
sbb
in
test
mov
cli
pushl
stos
out
xchg
bnd
mov
and
cmp
xlat
pushf
xchg
pop
adc
push
lock
dec
lds
jecxz
mov
out
xchg
cmp
xor
shlb
xor
sarl
dec
sub
push
sbb
dec
push
push
ficoms
and
lret
sahf
cmp
stos
in
pop
jb
sub
cmp
inc
mov
push
pushl
push
or
push
mov
add
cmc
add
jmp
xchg
sbb
imul
mov
js
adc
out
imul
add
adc
pop
fldcw
mov
incl
addr16
ss
cwtl
mov
mov
or
fisubrs
lret
jbe
cmp
scas
cli
dec
push
add
push
mov
xor
add
ret
push
xor
xchg
scas
rol
call
mov
push
mov
push
in
xchg
popf
mov
mov
out
pop
negl
cld
fldt
add
and
in
sbb
mov
nop
out
lods
or
imul
mov
jg
sar
incl
imul
inc
pop
xor
out
iret
xor
xor
dec
rdmsr
pop
decl
inc
cli
sti
mov
dec
jecxz
mov
pop
sub
incl
mov
lret
mov
push
je
pop
aad
fsts
pop
add
sbb
sub
mov
jg
inc
shrl
sbb
call
adcb
out
negl
inc
mov
mov
cmpsl
dec
pop
cmpb
sbb
inc
test
mov
clc
test
repz
pusha
cmovno
pushl
lock
push
sub
shlb
xchg
and
outsl
in
and
jmp
dec
add
jmp
push
pop
jp
stos
rcll
call
cwtl
cld
cmc
jbe
decl
mov
js
fistl
rorl
aam
dec
pop
push
gs
or
inc
popw
jmp
xor
and
adc
in
mov
out
xchg
fildll
and
mov
sar
ljmp
out
cmp
negl
decb
inc
pop
int3
out
cmpsl
and
mov
enter
dec
mov
mov
add
sbb
cltd
cmp
testb
aad
push
data16
out
mov
lcall
jb
stos
sub
mov
iret
lds
xchg
adc
mov
cmp
cmp
push
jl
pop
mov
push
push
cli
lcall
cmp
insb
mov
lahf
mov
call
mov
adc
icebp
xchg
frstor
shll
and
ljmp
fbld
cmpsb
lsl
mov
push
arpl
scas
xorb
test
loopne
call
lret
scas
dec
adc
cmp
andb
or
add
icebp
imul
cli
jecxz
nop
sar
jmp
add
jle
xchg
test
vmovshdup
call
and
jmp
add
jne
and
adc
pop
lods
cs
inc
loope
and
arpl
insb
or
incl
int
mov
inc
adc
mov
or
or
or
jmp
xchg
mov
jmp
cmp
scas
iret
push
mov
nop
and
icebp
out
lock
xchg
ljmp
add
xchg
mov
inc
dec
add
or
xlat
dec
mov
pushf
jge
mov
adc
cwtl
cmpl
mov
mov
bound
popf
sbb
cwtl
ds
jmp
sti
gs
add
jle
xor
inc
push
pop
flds
sahf
add
popf
push
push
int3
pop
mov
lcall
mov
inc
sbb
mov
lds
lods
stc
jbe
xor
aaa
enter
call
jmp
adc
push
outsl
idivb
xchg
cld
out
or
lret
pushw
lret
enter
inc
inc
movsl
cmp
mov
fdivrp
data16
mov
mov
push
data16
outsb
dec
popa
es
jge
lods
inc
mov
pop
cmpsb
jg
jmp
outsb
mov
xchg
test
pop
stos
adc
dec
pop
rcrb
xor
aas
test
pushl
push
daa
and
sub
jno
inc
inc
xchg
jmp
jle
insb
decb
cwtl
mov
data16
decl
icebp
in
rcl
pop
ret
in
notb
jecxz
and
push
mov
jmp
adc
push
scas
sub
jle
sbb
sbb
xchg
mov
icebp
lds
lock
add
aad
cwtl
lcall
jle
outsl
aad
out
enter
jecxz
sbb
mov
mov
cmp
pusha
add
jmp
aam
xor
sahf
adc
sbb
xchg
leave
sub
cli
or
into
jbe
loopne
nop
clc
jmp
xchg
mov
lods
add
pop
or
incl
and
cmp
pop
dec
mov
jmp
jl
dec
jns
dec
pop
adc
jecxz
rolb
insb
lea
mov
and
int
stos
lcall
es
mov
mov
adc
fcomp
and
mov
and
loop
sub
mov
jb
push
sahf
mov
aad
push
or
insb
stos
fcomip
jmp
cmp
mov
loope
es
xchg
subb
lcall
decl
xchg
daa
xor
test
add
mov
or
out
scas
pop
call
sub
mov
imul
std
std
xor
mov
cld
jno
cli
mov
shrb
inc
sbb
mov
pop
sbb
les
gs
cmp
cmpsb
add
adc
push
inc
ret
mov
mov
cli
nop
pop
shrb
test
mov
pushl
orl
fisubl
xor
test
inc
aad
jg
lods
cltd
fistps
ljmp
xor
test
add
push
push
mov
xchg
inc
mov
test
mov
sbb
bound
xchg
dec
adc
fsubl
xchg
sub
decl
stos
sbb
jle
xor
sbbl
mov
or
pushl
pop
pop
and
insb
mov
dec
jo
mov
add
xor
mov
incl
cmp
add
jp
and
xchg
aas
cmp
in
mov
clc
dec
cmp
sar
push
ja
cmp
rolb
addr16
lock
mov
dec
jp
dec
pop
fs
or
popf
cld
clc
fadds
clc
xor
mov
jp
icebp
mov
stos
pusha
cmp
cld
pusha
xchg
imul
jl
mov
jae
mov
inc
inc
loop
stos
test
data16
stc
das
dec
lea
das
sbb
and
sub
aad
adc
pushl
repnz
sbb
nop
popf
add
inc
jno
dec
lock
lea
roll
sbb
adc
xlat
js
lock
xor
les
out
cmp
mov
inc
cwtl
enter
xchg
mov
jmp
sbb
stos
jl
icebp
sbb
cmp
jl
pop
cmp
int
int
movsl
dec
cld
andb
dec
adc
lods
inc
movsb
ljmp
loope
ljmp
daa
sub
xchg
mov
lcall
or
xor
popa
cmp
mov
sub
fwait
or
pushl
addr16
out
inc
movsb
mov
dec
in
dec
fs
xor
cmpsb
xchg
xchg
mov
mov
mov
call
mov
scas
inc
int3
adc
addl
fwait
daa
dec
cld
jp
cmp
jmp
mov
xor
daa
xchg
lods
sarb
and
mov
inc
xor
xlat
dec
into
hlt
dec
imul
add
out
mov
movsb
cmp
xor
gs
test
and
push
mov
jns
add
adc
push
push
adcb
popf
adc
cmpl
dec
aas
rorb
out
sbb
and
sbb
in
es
outsb
push
outsb
aam
mov
or
jg
imul
fwait
jge
mov
xchg
into
mov
cmp
xchg
xchg
mov
mov
adc
jmp
pop
sbb
in
ljmp
daa
movsb
cmp
inc
jno,pt
xchg
push
lds
ja
mov
in
xor
pop
mov
ret
jp
aas
xor
pop
mov
out
ljmp
mov
out
mov
lods
or
popa
xchg
or
jbe
movsb
fildl
inc
push
lock
fnstsw
jb
into
ss
lds
sbb
cmp
mov
adc
cli
aas
scas
loop
pop
sub
ret
jle
push
popf
jl
ja
loop
lcall
jmp
xor
mov
push
jo
sbb
scas
add
sahf
lock
loope
add
incl
cmp
push
pop
daa
mov
jmp
inc
test
pop
dec
inc
mov
int3
mov
cmp
jecxz
sar
mov
pop
cmp
dec
sbb
pop
mov
cltd
loopne
lret
cltd
outsb
std
dec
adc
mov
sbb
or
ljmp
inc
flds
bound
add
inc
sar
call
test
lea
mov
jg
mov
fcmovbe
popf
fmuls
outsb
lods
jb
mov
xor
andl
xchg
mov
cmpsl
andb
or
ss
hlt
scas
xor
fs
mulb
jmp
jg
jo
lret
add
and
clc
pushl
xor
aas
sub
jo
jg
sub
cmp
in
gs
aas
xchg
inc
ljmp
daa
rcr
jl
insb
or
or
cli
mov
adc
cmpsl
jg
lcall
pushf
jl
cs
fdivr
jno
inc
out
cmpsl
insl
mov
sbb
decl
les
push
push
jl
inc
arpl
mov
sub
repz
push
leave
sbb
pop
and
call
xor
dec
push
popa
mov
jp
mov
push
xchg
leave
push
je
hlt
push
out
lcall
pop
fs
push
lret
xchg
mov
mov
fisubrs
frstor
pushl
sbb
rcl
ljmp
push
pop
inc
pop
mov
mov
decl
rclb
sbb
fs
mov
stos
jle
push
ret
cmp
pop
fisttps
decl
lods
fldt
mov
incl
loop
mov
je
inc
scas
call
xor
int
mov
push
xor
lods
loop
cmc
stos
insb
jp
sub
xchg
je
jg
ret
in
jle
lods
bound
popf
arpl
pop
cs
push
call
mov
mov
sbb
mov
outsb
dec
mov
sub
dec
mov
lcall
out
and
fdivs
in
jl
mov
ret
jns
dec
daa
aas
idiv
loop
adc
pushl
jecxz
mov
stc
add
sahf
gs
push
mov
mov
push
dec
setg
mov
sarl
lret
push
movsb
push
sbb
mov
jmp
push
inc
mov
gs
dec
jbe
arpl
das
insl
pop
mov
xor
ljmp
decl
lret
push
mov
sahf
mov
cmpsl
jo
mov
push
ss
sbbl
jg,pt
sahf
loopne
loopne
xor
data16
cwtl
xor
jbe
addr16
push
mov
es
cmp
not
push
jne,pt
repz
jbe
mov
dec
adc
pop
cmp
js
mov
add
cmpsb
sbb
pop
push
xchg
dec
test
jmp
data16
inc
sbb
mov
out
lcall
addr16
in
xchg
add
jmp
cli
lds
loop
mov
sub
scas
mov
and
ds
lcall
inc
rorl
jmp
ljmp
sub
stos
sub
arpl
aaa
mov
dec
dec
stc
and
push
fists
mov
xchg
push
mov
imull
cmpsl
xchg
xor
test
flds
and
clc
lcall
mov
aam
nop
pop
xor
sub
lock
add
cmp
ret
push
jns
jle
push
pushf
aam
and
and
fs
cmp
cmpsb
les
jl
jb
jne
dec
sbb
popa
push
aam
adc
pop
mov
ljmp
pop
idiv
insb
aaa
movb
and
sti
int
rcrb
push
shlb
pop
mov
inc
adc
xchg
inc
push
loop
pop
sub
fildll
jg
inc
fisubl
mov
or
cld
pushl
xor
push
addr16
sub
xchg
push
mov
jg
insb
cwtl
stos
jp
dec
push
lret
daa
xchg
movsl
jbe
mov
jg
stos
loop
xchg
inc
adc
cld
and
lods
jl
and
lcall
int3
pop
lods
les
dec
movsb
add
add
stc
movsl
clc
or
pop
lret
cmp
jmp
insb
pop
pusha
arpl
fildl
add
clc
cmp
push
mov
shll
mov
xchg
imul
mov
cmc
in
pop
inc
mov
mov
jbe
dec
subl
test
inc
xor
movsb
jnp
or
leave
in
mov
adc
cmp
jmp
and
sbb
add
aam
lcall
sbb
xchg
inc
dec
mov
mov
scas
sti
mov
out
mov
cmpsb
mov
hlt
lcall
cltd
mov
bnd
insb
add
cmp
pushl
xacquire
popf
cmp
mov
nop
xor
jle
hlt
jecxz
pop
mov
sbb
movsl
fcmovnb
aad
jno
dec
adc
mov
sbb
mov
xor
cmp
mov
jmp
rorl
xchg
addr16
jg
pusha
in
xlat
lcall
or
int3
cmp
dec
mov
mov
mov
fisttpll
insb
dec
fistps
xchg
jp
xor
inc
lcall
jmp
dec
dec
ljmp
dec
pop
adc
inc
inc
sub
arpl
loope
call
add
xchg
push
hlt
add
push
mov
dec
mov
insb
xor
add
push
das
lret
jl
addl
inc
mov
cli
xchg
sub
stos
mov
add
push
js
and
inc
inc
pushf
jo
pushl
roll
in
lldt
pop
push
repnz
std
dec
sti
shrl
jmp
arpl
ss
jno
filds
cmp
int
adc
mov
add
jg
push
scas
jbe
movsb
scas
jecxz
add
mov
popf
rcrb
sar
out
push
xor
fbstp
adc
pop
mov
mov
xchg
cld
incl
add
ror
pushf
lds
lods
lahf
and
add
fwait
mov
lock
movsl
call
decl
ds
mov
je
mov
pop
fisttps
pop
in
mov
lret
jecxz
or
cmc
jns
hlt
adc
inc
or
dec
pop
js
ljmp
imulb
jecxz
pop
pop
nop
mov
inc
jnp
mov
cmp
sbb
movl
in
into
inc
dec
aas
lahf
sub
jns
hlt
mov
push
sti
ja
jmp
mull
push
imul
mov
mov
xor
adc
incl
cltd
out
out
popf
cmpsb
pop
jno
pusha
call
xor
cli
popf
xchg
jp
arpl
das
clc
lcall
hlt
in
pop
call
outsb
cli
push
insb
out
sbb
sbb
mov
add
arpl
test
push
imulb
shlb
push
sub
lcall
mov
ljmp
sbb
shl
pop
xor
idiv
fistps
inc
fdiv
push
and
in
adc
faddp
aaa
mov
movsb
xor
add
push
jg
mov
sub
aas
sar
add
mov
outsl
or
nop
mov
jg
fsubs
inc
punpcklbw
adc
jbe
stos
jae
mov
jae
lea
xor
xchg
mov
lret
rcrl
aaa
ret
test
xor
cmpsb
inc
push
inc
in
filds
cmp
pop
dec
dec
nop
sub
out
sbb
outsl
add
jne
decl
inc
jo
shll
dec
xchg
call
mov
and
add
in
mov
fstps
mov
cmp
pop
ljmp
loop
lds
iret
sub
ljmp
in
shlb
sbb
xchg
lahf
xor
enter
in
inc
mov
pop
xlat
jg
in
adc
push
imul
bnd
dec
push
mov
loopne
popf
aam
shl
lret
xchg
or
add
push
ret
das
int3
add
push
push
jb
call
mov
jmp
sahf
sub
pop
cmp
push
mov
icebp
inc
adc
push
jne
push
pop
inc
pop
lcall
pop
std
shr
adc
and
cmp
mov
loop
add
fimuls
mov
call
jo
loope
es
jae
rcl
ret
mov
push
pushf
xor
out
movsb
push
arpl
or
lahf
mov
mov
add
or
fildll
leave
outsl
out
mov
mov
loop
incl
stos
or
cmpl
mov
adc
cld
sbb
ljmp
jmp
dec
pushf
adc
jno
addr16
test
cmp
xor
jnp
cltd
pop
sub
decl
cmp
dec
sub
pushf
lods
mov
bound
out
pop
rcrl
or
xchg
inc
push
pop
out
xor
lock
loopne
mov
clc
outsb
popa
pop
push
mov
add
xchg
lods
ss
rolb
lea
add
loope
popf
repz
roll
dec
fcomi
adc
test
fiadds
jmp
or
push
push
insl
ss
mov
testb
imul
mov
insb
imul
cmpsb
iret
imul
cmp
popa
daa
inc
mov
fsin
rcll
stos
or
hlt
push
cmp
cmp
fwait
pusha
fwait
ljmp
sar
stos
pop
adc
repz
adc
cmp
testb
in
dec
into
ljmp
push
sub
dec
mov
cli
test
jmp
ret
xchg
jnp
jmp
iret
lods
insl
ds
dec
dec
gs
push
fwait
jp
mov
icebp
lahf
movsb
int
and
mov
push
push
mov
mov
and
jp
idiv
scas
push
cmp
and
lcall
mov
mov
push
lcall
clc
das
shr
mov
call
std
fs
jecxz
jmp
and
sub
adc
xor
loop
mov
mov
dec
lds
mov
sub
sar
ljmp
pop
dec
dec
inc
dec
fdivl
jae
lods
scas
push
mov
sar
test
and
test
aas
popf
adc
call
pushl
loop
sbb
int3
fsubrs
xor
cmp
push
sbb
je
inc
stos
jge
stos
and
push
in
sbb
call
push
cld
push
scas
cwtl
enter
mov
fdivs
xchg
sbb
add
lcall
das
insl
cmc
pinsrw
jno
mov
pop
sub
add
mov
push
aad
icebp
inc
inc
or
xchg
pop
fstl
pushl
leave
xor
insl
lahf
sbb
fsubrl
call
rclb
loopne
je
outsb
dec
mov
add
mov
mov
sbb
shlb
inc
push
mov
mov
push
pusha
nop
loopne
sarl
cs
loop
xorl
dec
insb
fisubl
push
mov
call
leave
cli
out
push
cli
sbb
insb
push
or
inc
filds
jo
sti
pop
or
incl
dec
out
fstps
jg
and
push
sub
or
fmull
push
outsb
cld
lcall
aad
dec
scas
xchg
adc
ficompl
fsubrs
in
mov
fistpl
jg
and
or
mov
mov
call
pop
aas
xacquire
and
ljmp
ficoms
cmpsl
incl
jae
out
rclb
mov
nop
jecxz
data16
js
lock
lcall
sub
loope
aas
mov
xchg
jle
sub
inc
xchg
fadd
xchg
jbe
lock
pop
subl
testl
pop
and
add
lds
xor
cmp
pop
aad
hlt
call
xor
xchg
xchg
and
jle
pushl
cmp
into
or
pop
jbe
mov
repz
cmp
ret
ljmp
sarl
outsl
outsb
imul
push
and
testb
inc
push
pushw
and
add
lcall
call
mov
fistl
pop
mov
mov
xor
fs
cmpl
mov
pop
bound
sbb
jmp
pop
cli
add
adc
mov
pusha
movsb
mov
aaa
frstor
xchg
or
add
addl
push
sar
sub
and
push
decl
popa
cmp
push
sub
mov
add
mov
inc
adc
sub
or
xor
jae
adc
popf
push
inc
and
xchg
xchg
movsl
pusha
jne
mov
sub
mov
loopne
lret
mov
sub
ja
push
sbb
test
push
pop
or
mov
addr16
sbb
shlb
scas
and
mov
decl
lock
popf
pop
xor
stos
pop
pushf
outsb
mov
xchg
push
adc
mov
scas
jl
fists
sbb
mov
xchg
and
xchg
cmpsb
mov
iret
and
sar
adc
sub
mov
push
ja
xchg
add
call
lret
mov
jb
rcrl
mov
jp
roll
adc
cld
les
test
push
in
pop
and
aas
sub
inc
or
pop
cmc
mov
adc
inc
sub
std
cmc
inc
int3
mov
mov
inc
call
adc
fidivl
lock
ja
mov
scas
hlt
jl
lds
mov
sbb
lods
and
cld
ljmp
pop
stc
pushf
ljmp
mov
sbb
lock
cltd
dec
jecxz
pushl
xorl
mull
mov
in
jae
lcall
sub
lcall
sub
ficompl
sbb
sub
pushf
lahf
je
incl
adc
cld
dec
out
cld
and
stos
cld
adc
xchg
push
decl
inc
and
insb
jmp
xchg
xchg
mov
add
dec
mov
adc
push
fistl
addr16
lcall
out
inc
mov
jae
nop
fdivrl
mov
mov
jg
gs
push
push
aas
fisubrl
test
ss
cmp
ljmp
icebp
inc
pop
xor
jl
into
inc
imul
mov
xchg
jmp
jl
int
repz
jg
adc
xlat
cmpsb
int3
les
mov
adc
call
add
xor
lcall
popa
bound
aam
mov
push
push
idivl
dec
imul
stc
cmp
xor
cli
aam
mov
mov
mov
insb
in
inc
pop
std
xchg
mov
int
sar
nop
add
add
sub
push
xor
sarb
nop
or
arpl
dec
push
jg
ljmp
and
and
fs
xchg
inc
adc
cmp
cmp
mov
cmp
cmp
or
push
push
push
cmp
daa
cmp
push
sub
lret
sub
lahf
jg
aas
and
add
inc
pop
orb
or
or
out
imul
xor
cli
xor
rcr
or
add
add
push
pxor
adc
imul
or
adc
lods
loopne
push
push
pop
xor
shlb
sahf
out
mov
dec
loopne
jo
outsb
je
push
dec
dec
loopne
fimuls
dec
jb
sub
test
add
xor
mov
ljmp
and
data16
add
js
inc
ficompl
and
data16
out
es
pusha
push
lcall
movl
push
dec
cmp
jg
jle
mov
shll
idiv
inc
cmp
jl
pop
ret
in
sbb
andl
andl
movsb
frstor
add
lcall
sbb
jecxz
add
fdivrs
adc
or
mov
push
adc
int
gs
push
ljmp
lea
mov
aaa
insb
iret
lret
fiadds
or
sub
decl
or
mov
sbb
pop
pop
ss
imul
jge
adc
fisttpl
push
rclb
add
outsb
mov
sbb
cmpsb
lret
testb
jle
lea
cmp
neg
fildll
inc
test
pop
cli
cmpl
icebp
jl
sbb
das
mov
fists
jo
daa
push
jp
es
jmp
push
adc
jmp
sti
neg
fisttps
mov
or
mov
jnp
lcall
int3
xchg
xor
outsl
ss
out
popa
out
and
xchg
mov
sub
je
sub
fists
dec
je
sbb
aaa
ja
and
sbb
adc
call
jmp
std
pushl
jg
mov
push
insb
or
add
adc
int3
data16
jnp
cmovns
pop
jp
pop
jne
or
cmc
incl
add
cwtl
pop
mov
mov
push
mov
sub
jmp
xorw
decl
xor
mov
inc
das
add
and
pushl
adc
je
and
mov
and
loopne
mov
shlb
or
or
push
push
lods
sbb
mov
test
sub
repnz
fiaddl
mov
xchg
scas
xor
cmp
je
push
lea
jge
mov
sub
test
lods
mov
xor
pop
roll
push
mov
lods
push
jo
dec
mov
aas
insb
jmp
test
repz
filds
stos
movsl
push
hlt
stos
sub
push
mov
mov
mov
clc
push
ljmp
mov
xchg
mov
mov
or
or
popa
adc
pop
leave
jg
frstor
jmp
dec
push
xor
shll
shlb
and
jmp
ret
cmp
mov
daa
mov
jge
jbe
jae
pushw
push
xchg
push
pop
pop
xor
cmp
mov
insl
mov
idiv
ljmp
cmp
add
dec
in
mov
or
adc
je
mov
jg
call
aad
cmp
loope
int3
insb
adc
ret
jle
pop
push
push
cmp
adc
mov
call
in
jle
out
cltd
sti
push
data16
cmpsb
orb
cmp
sub
and
inc
sub
cs
inc
mov
popf
filds
ljmp
aaa
adc
test
ret
sub
add
jbe
in
xor
in
jl
mov
push
stos
push
in
push
stos
scas
dec
push
dec
out
fstpt
fcmovne
in
inc
add
jbe
imul
lea
lea
push
push
add
lcall
in
jge
inc
push
data16
jecxz
sub
adc
hlt
je
popf
sub
add
cmp
mov
in
movsl
fisttps
sti
jg
clc
lcall
cld
add
cmp
jb
sub
mov
mov
imul
cmp
and
outsb
pop
std
jg
fisttpll
incl
sbb
inc
add
cmp
jb
push
lea
fstps
out
or
jbe
sbb
pop
or
int
sub
loope
test
sbb
decl
inc
push
add
scas
popf
mov
pop
jb
pushl
test
cmc
rclb
jb
mov
or
fnstcw
call
xchg
cld
or
mov
test
fidivrl
push
adc
or
lret
sbb
mov
dec
addr16
adc
pop
les
jp
sbb
repz
xorl
ret
cmp
pop
enter
pop
aam
mov
or
mov
fnsave
mov
das
jbe
lea
pop
imul
or
or
mov
out
outsl
adc
ss
decl
jecxz
push
xchg
pop
lods
fwait
cmp
and
outsl
je
sti
je
stos
dec
sbb
push
xor
ret
push
aas
int3
pop
addr16
mov
jb
pop
aas
loopne
lcall
std
add
sbb
adc
fwait
push
sbb
jnp
mov
test
push
push
xor
sub
sbb
scas
iret
xor
clc
into
pop
incl
add
cmpsl
sahf
pop
test
out
mov
data16
push
gs
push
mov
lcall
jecxz
fdivl
lock
aam
shrb
push
aaa
mov
insl
arpl
xor
outsl
pop
jbe
out
inc
insb
adc
push
cwtl
dec
data16
or
shll
mov
push
lods
push
jnp
testl
hlt
adc
int3
ds
fwait
lods
sti
mov
and
jg
dec
sbb
adc
gs
adcl
rolb
mov
push
nop
leave
cmp
pusha
cmp
ret
adc
mov
xchg
divl
or
ljmp
lcall
std
ljmp
insb
in
push
push
push
push
xlat
lcall
fs
inc
push
push
push
ret
sbb
push
neg
sbb
and
pop
add
stos
jge
dec
leave
pop
xchg
gs
mov
loopne
or
adc
decl
sub
scas
fistl
jmp
adc
idivb
je,pt
movb
push
mov
orb
cmp
sub
ffree
not
push
add
pop
and
add
jo
mov
adc
outsl
jg
movsb
adc
sbb
sbb
lods
xchg
xchg
and
aad
cltd
push
cmp
or
sub
push
adc
or
mov
bound
jmp
push
mov
add
or
pop
cld
pushf
lock
mov
pushl
mov
sub
add
cltd
xor
add
and
sahf
movsl
dec
push
adc
mov
sub
shr
mov
mov
ss
sub
mov
mov
xchg
pushl
cmpl
push
lea
out
push
adc
add
mov
pop
fisttpll
cmp
pushl
scas
lds
std
dec
pop
and
jmp
pop
fisubrl
cmp
push
pop
cltd
mov
push
clc
sbb
and
or
lahf
cmp
push
rep
jle,pn
ljmp
jmp
mov
cmp
out
xlat
mov
pop
pop
pop
jne
inc
xor
test
sahf
push
lock
add
fisubs
push
ljmp
out
xor
mov
nop
or
xchg
mov
sbb
mov
cltd
into
adc
adc
stos
lcall
or
mov
xchg
loopne
clc
movsl
and
xor
jbe
dec
aad
fisttps
dec
call
cmp
jp
pop
dec
jp
push
movsb
cld
and
jecxz
fcomip
test
mov
add
mov
mov
imul
stos
pusha
nop
adc
rcll
pop
and
lea
aaa
mov
lcall
fimuls
inc
xchg
dec
cmp
dec
cld
outsl
push
jb
incl
and
mov
lea
sub
adc
mov
movsl
add
sub
xor
gs
cmp
loope
stos
adc
cmpl
in
push
sbb
sub
mov
sbb
jne
inc
mov
dec
inc
cltd
or
mov
and
pop
ds
adc
and
inc
es
dec
xchg
shl
lock
clc
test
je
orps
lock
add
inc
or
or
ljmp
mov
adc
out
es
enter
sahf
int3
mov
outsl
push
pushl
push
repnz
insl
imul
push
les
xor
or
int3
loopne
ds
sarb
mov
call
sbb
dec
loop
icebp
sbb
lcall
push
and
mov
sub
inc
pop
jle
push
pop
cmp
ljmp
idivl
idivb
ja
cmp
push
mov
test
sbb
popf
push
mov
insb
lock
or
add
push
push
push
jbe
daa
loope
xor
sub
or
mov
lcall
loop
adc
punpckhbw
push
fistpl
xchg
sbb
ljmp
sbb
insl
add
lods
mov
inc
push
mov
mov
xor
cmp
pop
xchg
lcall
pushl
icebp
fdivrs
cmpb
or
inc
mov
or
dec
aaa
lcall
sub
decl
ljmp
imull
fistps
push
repz
scas
xor
cs
call
push
inc
cmp
mov
jmp
push
out
inc
mov
sti
fwait
inc
repz
jl
lea
adc
lcall
sarb
aaa
out
cmp
add
xchg
pop
fbstp
cmp
jl
movsl
sbb
loop
push
push
nop
add
cmp
mov
jb
fisttpl
scas
or
push
add
pop
jle
imul
push
cs
cmp
mov
inc
pop
pop
inc
dec
lcall
add
mov
neg
stos
and
cmp
xor
decl
clc
ja
pop
jp
into
push
adc
in
mov
adc
stos
rolb
dec
cmp
dec
jge
decl
mov
lcall
adc
jns
loope
jbe
adc
test
pushl
ja
push
pop
lock
cmpb
pop
cmp
jmp
fdivrl
jmp
cmp
add
dec
std
or
inc
add
adc
jmp
jbe
push
push
push
call
and
pop
mov
lods
loope
mov
ljmp
stos
insl
jne
sub
dec
jbe
int
pop
cmp
adc
adc
incl
mov
testl
lock
fidivrs
test
mov
sub
insl
fwait
adc
add
push
int3
push
add
or
xor
dec
stc
mov
jg
in
rol
or
dec
cmpsl
mov
adc
pop
loopne
hlt
rcrb
adcb
adc
das
cld
cmp
loope
nop
aas
inc
jg
mov
cli
popf
add
mov
push
rcrb
xchg
fwait
or
lret
je
mov
cmc
cmp
mov
and
push
mov
xor
and
popf
jmp
or
and
icebp
xchg
adc
cmpsb
pop
sbbl
subl
xchg
pushl
scas
or
sbb
pop
fs
mov
sub
lock
pop
push
add
shrl
in
lea
cwtl
rorb
jle
inc
repnz
sub
loopne
push
adc
jbe
call
mov
inc
push
inc
push
fnstcw
xor
lcall
cli
fcoml
push
scas
adcl
cld
lds
xchg
or
inc
xor
cmc
sub
dec
cmp
cmc
mov
shrl
mov
pushl
cmp
ja
inc
cmp
std
fcomp
adc
dec
jmp
mov
stos
inc
les
data16
rorl
xchg
mov
adc
dec
add
ret
cmpb
inc
cmpb
jne
add
loop
jg
adc
pop
nop
xor
mov
and
cmpsb
arpl
add
mov
xlat
adc
dec
adc
or
xchg
mov
incl
jge
jge
pushl
out
inc
dec
sbb
roll
fucomi
pop
mov
adc
dec
push
mov
fidivl
adc
mov
leave
fdivr
jmp
inc
sbb
mov
xor
xor
aam
mov
imul
sub
call
fildl
adc
inc
dec
cmp
adc
lea
test
jle
cmc
jns
jae
sub
push
lea
mov
or
add
negb
lods
das
testb
in
push
cwtl
mov
nop
add
or
ret
push
rcrb
jge
adcb
ljmp
sub
sub
ds
inc
jb
push
adc
jns
or
popf
pop
cmp
jmp
jge
sbb
sub
ret
pusha
pop
sbb
add
xchg
cmpsl
addr16
xchg
ljmp
in
add
fcomip
xorl
mov
jle
mov
mov
xchg
inc
jmp
mov
fcmovbe
mov
add
sbb
clc
out
adc
push
mov
inc
push
or
lcall
cmp
lock
je
mov
jl
test
clc
dec
or
mov
ljmp
mov
nop
mov
sti
enter
sbb
push
pop
adc
fisttpl
imul
daa
dec
sbb
add
add
xor
rcrb
pusha
xorb
or
dec
xor
add
outsl
mov
inc
test
adc
ljmp
inc
add
adc
rolb
jle
adc
stc
push
mov
ljmp
test
mov
cs
pop
movsb
adc
mov
or
dec
push
sbb
fldcw
scas
es
sbb
aaa
adc
jmp
xchg
int3
pop
push
shl
push
sub
clc
push
lea
or
repz
and
fwait
or
add
mov
mov
dec
pushl
add
mov
roll
lock
loope
out
jecxz
add
fnstsw
call
mov
sub
mov
shlb
jle
push
add
subl
fdivr
das
mov
dec
cwtl
ss
mov
pop
lods
sbb
jg
sbb
dec
xchg
or
clc
add
lods
repz
clc
imul
decl
movsb
or
cmp
or
and
pop
push
fisubrl
mov
add
mov
inc
adc
push
adc
dec
add
mov
hlt
add
xlat
fcmovu
lock
sub
sub
and
pushl
pusha
dec
mov
popf
xor
adc
dec
lock
sbb
lea
dec
call
jnp
cmpsb
out
inc
xor
add
loopne
mov
xor
neg
cli
into
inc
jle
mov
jle
push
jl
std
push
stos
mov
sub
ficomps
enter
push
dec
vmwrite
adc
jle
inc
xlat
mov
cmp
xorl
add
inc
mov
subl
xchg
mov
mov
ljmp
hlt
push
pop
xor
rolb
or
lcall
nop
adcl
or
in
popa
push
pop
lods
push
cld
dec
inc
decb
or
mov
or
pop
inc
pop
sbb
ljmp
jge
insb
into
lahf
loop
mov
in
je
rclb
pop
add
sbb
xor
sub
xchg
sub
ljmp
push
idivb
mov
mov
shl
add
pop
popa
movb
pop
mov
add
aam
mov
faddl
cltd
in
movsl
fmull
push
jne
arpl
call
aam
shrl
push
mov
adc
decb
call
push
sbb
adc
mov
jbe
push
sbb
pop
mov
mov
idiv
lcall
lds
or
or
pop
push
mov
xchg
push
adc
test
or
aad
inc
cmpsb
hlt
call
movsb
bound
mov
fbld
inc
adc
push
adc
and
adc
dec
aaa
pop
sbb
mov
ljmp
pop
push
movsb
add
sbb
lret
push
add
dec
jmp
or
scas
pop
mov
xor
add
xor
incl
push
movsl
inc
jo
adc
in
mov
roll
or
int
decl
jbe
xchg
dec
lahf
ret
ja
jmp
push
mov
and
cmpsb
xor
or
in
clc
jmp
jmp
lea
cmp
inc
sbb
int3
push
sbb
orb
fisttpll
fcomip
call
inc
mov
and
sahf
add
add
rorl
xchg
bound
je
lcall
fwait
sbb
cli
push
dec
add
and
sbb
adc
add
dec
xor
ud0
lcall
sub
cmp
popa
movsl
cs
xor
rcr
dec
cmp
cmp
push
dec
inc
sbb
loope
cmp
inc
xchg
mov
aaa
push
ljmp
push
mov
ss
aam
aad
push
push
mov
cmp
pop
adc
ljmp
mov
push
push
ret
imul
push
incl
test
and
push
push
out
jae
push
leave
pop
popa
shll
call
sbb
or
rcl
push
mov
pop
jl
test
inc
xor
lea
mov
xor
sahf
je
push
pop
call
pop
ljmp
add
push
push
or
mov
mov
mov
iret
mov
jecxz
in
cmp
or
orl
mov
or
incl
rol
jle
mov
or
cmp
je
sarb
add
mov
xlat
jmp
stc
mov
pop
mov
sub
loop
nop
shl
je
mov
cwtl
fisttps
dec
into
push
lea
jne
shl
out
ja
std
pushl
push
mov
sar
add
or
or
lcall
pop
push
mov
mov
hlt
push
scas
ret
stos
sahf
mov
cltd
sbb
sub
aas
lret
call
mov
mov
inc
push
stc
xorl
test
fwait
adc
push
sub
bswap
sub
fdivs
and
ljmp
jle
xor
push
je
xchg
iret
sar
shlb
inc
cltd
jp
mov
push
or
xor
adc
adc
and
adc
ljmp
movsl
add
push
mov
push
and
cmc
inc
push
fchs
pushl
and
xor
std
ds
push
mov
lock
call
sub
sbb
jnp
dec
or
pop
hlt
hlt
inc
sahf
cltd
out
clc
sbb
mov
insl
push
push
fyl2xp1
pop
mov
imul
cmp
push
cld
ljmp
loope
mov
cld
mov
cmp
jne
pop
push
or
inc
loope
push
or
std
mov
sbb
or
pop
insl
mov
jg
dec
cmp
ljmp
jmp
clc
inc
xor
ds
addr16
cmp
pop
sbb
mov
add
inc
xchg
jo
int3
sbb
mov
push
aaa
or
push
clc
jp
and
xchg
pop
adc
test
mov
sbb
jb
movsb
mov
popa
inc
sahf
xor
or
shrl
in
sub
pop
mov
cwtl
mov
mov
push
pop
mov
jge
xchg
lret
mov
jmp
movsl
imul
cli
shrb
pushl
cld
jle
mov
mov
push
test
addb
and
cwtl
and
adc
aam
push
mov
inc
pop
loopne
mov
push
aad
sbb
in
inc
rcll
sbb
ret
call
enter
inc
add
clc
mov
add
add
mov
and
add
mov
adc
sub
mov
loop
inc
ret
inc
xchg
fcoms
and
rcr
shlb
das
mov
dec
mov
inc
jl
jmp
and
jne
in
fcompl
jnp
les
jae
push
test
xchg
push
incl
xchg
sub
xorb
dec
jo
jbe
dec
cmp
pushl
pusha
xor
or
test
push
andb
push
test
test
mov
pusha
add
and
cli
jg
and
fwait
xor
jo
stos
ljmp
mulb
stos
pop
nop
test
inc
lcall
add
jge
add
pop
loopne
sbb
jmp
int3
mov
push
xor
add
add
cmp
mov
inc
mov
and
insl
dec
stos
ljmp
and
sbb
inc
popa
nop
mov
insb
test
add
icebp
xor
dec
and
add
jge
incl
mov
dec
adc
jo
je
test
js
cmp
or
xor
outsl
mov
icebp
decl
aad
aaa
push
aaa
fidivrs
pop
jge
pop
hlt
jle
incl
mulb
jno
dec
cltd
jae
jb
imul
jae
pop
ret
or
out
sbb
outsl
jg
add
push
imul
ret
jmp
ret
or
shll
lock
mov
lods
push
pop
cmpl
jne
push
ljmp
mov
test
add
dec
fisttpl
rolb
or
mov
fbstp
std
in
add
unpcklps
add
sub
add
das
cli
inc
ret
xchg
sbb
jbe
sbb
push
jle
adc
outsb
adc
sub
repz
enter
xor
inc
enter
dec
sbb
mov
xor
add
daa
or
lcall
ljmp
ja
mov
adc
movzwl
add
lcall
inc
pop
add
mov
outsb
inc
or
pop
ljmp
lret
test
jae
shll
dec
dec
inc
and
or
sbb
in
clc
mov
mov
addb
mov
dec
pop
pusha
lea
sub
sbb
clc
dec
or
ja
inc
arpl
cmp
pop
xor
push
push
pop
sar
call
push
or
jnp
iret
sbb
insb
and
xor
mov
add
pop
jb
orb
sub
in
pop
mov
in
pop
aad
repz
sbb
pushf
sahf
and
lcall
cs
cmpb
je
or
mov
arpl
test
sub
cmp
ja
out
adcl
aam
mov
outsl
or
jl
arpl
push
and
pop
popw
rorb
test
or
mov
xor
ret
sub
sub
mov
in
pop
rclb
sub
scas
mov
std
lcall
int3
add
lea
mov
push
bound
icebp
sub
int
jge
inc
xchg
fildll
sar
jmp
or
sub
repnz
sbb
sbb
mull
push
mov
repz
fwait
icebp
outsl
clc
ja
fisttpll
inc
data16
add
xchg
jle
xor
je,pt
jle
aaa
cmp
je
push
incl
inc
movl
mov
negl
adc
jne
jmp
dec
shrl
cmp
adc
lea
lds
out
jp
xorb
int3
testb
inc
mov
add
lods
jg
addl
sbbl
fimull
stos
jg
inc
mov
sbb
inc
jl
mov
fwait
jg
incl
leave
mov
orl
push
push
test
adc
in
add
call
jecxz
pusha
lcall
mov
ljmp
test
pop
mov
rolb
mov
inc
fbld
outsb
call
mov
in
jne
add
frstor
pop
sub
call
jnp
mov
add
pop
pop
mov
and
ret
pop
and
pushl
outsb
in
jmp
in
ljmp
setno
sbb
push
sub
mov
cmp
imul
clc
push
xchg
inc
cld
decl
push
mov
jbe
mov
inc
sbb
jg
cmpb
inc
outsb
push
sbb
or
lret
enter
pop
imulb
jnp
decl
and
aad
or
sub
push
sub
mov
stos
push
testb
add
clc
dec
and
inc
or
mov
or
aam
lcall
fstp
and
push
and
fildll
push
jle
or
ja
mov
mov
sub
outsl
cld
in
cli
sbb
push
shlb
sar
rolb
movb
test
incl
popa
lret
cmp
das
stc
es
outsl
mov
push
sub
fs
or
push
mov
data16
push
aaa
add
jno
arpl
push
pop
das
and
jmp
cmp
je
add
sub
sub
cmp
mov
add
cmp
dec
add
je
es
mov
clc
jg
int3
cltd
das
mov
xchg
mov
jge
ja
fdivl
fmul
jne
lcall
ss
stos
pop
push
adc
jo
mov
cmp
gs
push
out
cli
jmp
jnp
or
dec
mov
int3
inc
add
adc
outsb
cmpsb
cwtl
aad
aam
mov
push
sub
jl
mov
in
jl
xchg
sub
sub
aam
jl
mov
lcall
mov
std
sub
ss
xchg
or
mov
sub
jg
sahf
sbb
aaa
push
push
jnp
dec
mov
sbb
repnz
dec
or
jmp
imul
sahf
mov
sti
pop
push
lods
xchg
lods
push
cld
mov
dec
movzbl
fidivs
hlt
jg
sub
or
jns
xor
add
popa
iret
movsl
adc
in
call
dec
stos
jo
or
sub
sub
stc
cmp
in
rclb
xchg
jg
sbb
xchg
cmp
pause
cmp
push
mov
jae
incl
stos
mov
mov
roll
or
jns
imul
ret
in
cs
mov
xchg
sbb
xor
test
and
leave
or
sub
es
mov
decl
xor
rorl
or
adc
mov
ret
cmp
sbb
adc
sbb
pusha
jl
mov
mov
mov
push
mov
leave
add
jno
lret
add
and
cmpsb
pop
lcall
pusha
gs
xchg
gs
mov
add
inc
pop
push
scas
pop
popa
pop
push
pop
pop
adc
ror
sarl
cmp
jmp
push
lcall
test
das
dec
mov
push
fwait
xor
dec
xor
in
and
sbb
cltd
jp
inc
or
jbe
lea
cmp
push
and
loope
add
mov
cmp
sub
ret
or
shrb
mov
dec
sbbl
mov
insl
cmp
and
and
add
jg
imul
call
pusha
icebp
nop
xor
ss
clc
incl
sbb
dec
daa
xor
fwait
push
xchg
sub
mov
mov
jg
outsl
sahf
add
inc
mov
push
adc
jg
inc
out
and
xor
add
pop
cmp
push
push
mov
and
ljmp
inc
jo
jnp
add
loope
lods
out
or
jg
fmull
inc
adc
fninit
add
push
push
icebp
inc
lcall
cmp
or
adc
dec
les
add
sbb
js
push
pop
clc
lcall
clc
cmp
jbe
mov
stos
fsubs
pop
imul
icebp
cld
pushl
fdivrs
xor
sub
mov
dec
fcomps
fldenv
mov
pusha
xchg
xchg
cs
add
adc
mov
pusha
adc
dec
xacquire
incl
adc
lock
mov
je
and
mov
outsl
add
mov
mov
pop
mov
mov
mov
jg
in
out
lods
clc
imul
pushf
add
cmp
je
pop
les
mov
call
loopne
mov
mov
jbe
pop
jmp
push
inc
daa
add
cmp
fadds
and
add
fimuls
fwait
and
sbb
cli
pop
inc
or
jae
jo
test
xchg
movsl
or
fsubrl
lods
stos
cmpsl
fildl
aas
jbe
incl
push
cmpsl
mov
cli
jne
cmp
push
lret
jbe
xor
jo
lret
jg
dec
sets
cld
outsb
std
std
jb
jmp
imul
sar
cltd
scas
sub
sub
sahf
jb
add
dec
incl
insl
ds
clc
js
addl
jns
push
bound
decl
mov
testb
or
push
adc
jle
cmp
cmpb
test
pop
push
mov
out
stc
mov
pop
sub
cmp
jl
add
inc
or
testl
or
jg
inc
or
pop
cltd
rcrb
xchg
push
jnp
jmp
jle
dec
or
int
or
je
loopne
jecxz
test
sub
jp
xor
fisubrl
lcall
clc
es
test
or
push
fwait
sub
outsb
pop
clc
mov
adc
fdivs
push
add
jl
add
je
fnstenv
cmp
adc
out
and
and
sbb
cltd
nop
imul
sbb
ljmp
cmpsb
pop
pop
test
mov
sbb
mov
xor
cmp
decl
add
push
pop
or
cmpsl
mov
inc
sbb
pusha
mov
ret
push
xorb
pushl
and
call
add
add
add
sti
loop
inc
loope
fnstcw
jl
in
mov
and
adcb
jg
sub
imul
or
mov
pop
inc
cmp
pop
xor
fcomip
out
sbb
int3
lea
sbb
jge
push
pop
pop
lea
loope
je
jmp
sbb
cmp
adc
sbb
jbe
into
icebp
pop
mov
rorb
mov
jmp
or
dec
add
ret
clc
adc
cmp
fmuls
rcll
sbb
cld
pushl
inc
add
pop
jae
pop
xchg
jl
push
sbb
mov
ljmp
outsl
sub
mov
loop
rcll
mov
or
jg
sub
or
in
rorl
addr16
icebp
ljmp
sbb
movsb
mov
push
in
or
add
mov
pushl
pushf
das
aaa
movsb
cmp
pop
jmp
lret
fiadds
addr16
xor
gs
fstps
push
fldcw
push
inc
and
mov
fsubrl
push
roll
add
pop
xor
xchg
cmp
dec
jns
loopne
ret
clc
jmp
push
mov
xor
mov
pop
fs
idivb
pop
push
bound
js
pop
pop
dec
dec
std
sti
mov
mov
nop
or
or
mov
std
test
mov
js
idiv
imulb
cld
xchg
add
jmp
push
push
jmp
push
fsubs
sub
mov
and
add
pop
jnp
fisubrl
cs
push
scas
inc
sub
aaa
addr16
dec
or
inc
push
orb
xchg
inc
addb
adc
decl
vprotb
pop
adc
icebp
add
dec
pop
mov
inc
push
add
out
incl
xchg
mull
inc
add
or
repz
scas
lcall
sub
cmp
enter
push
incl
dec
xor
inc
aaa
mov
cmp
icebp
es
jle
rcr
addr16
dec
ja
sar
in
mov
scas
sbb
std
lock
dec
cld
sbb
fiaddl
and
fmuls
fildll
adc
clc
add
out
sbb
push
enter
popf
rclb
test
add
jo
xchg
xchg
push
push
push
dec
lock
jmp
aam
pop
mov
jp
or
shrl
or
loopne
sub
add
jmp
int
ss
add
clc
es
stos
cld
add
out
or
jae
adc
mov
xor
rcrb
psubb
mov
jmp
fsts
mov
leave
inc
in
outsb
adc
fstpt
pop
push
cli
mov
mov
clc
in
xchg
jb
fcompl
inc
mov
enter
adc
test
fmuls
adc
sub
add
shl
aaa
mov
icebp
jne
push
pop
xor
or
rcll
bound
ja
cld
icebp
ret
jmp
push
mov
pop
xchg
inc
add
xor
push
inc
push
popa
nop
movsb
mov
inc
adc
jg
adc
rclb
leave
xlat
mov
xor
inc
inc
dec
add
pushl
mov
movsl
push
mov
xor
divl
push
push
fs
test
inc
clc
xor
aas
and
mov
mov
sbb
pop
mov
in
cltd
test
jno
decb
js
push
adc
cmp
jl
add
icebp
xchg
pushl
das
adc
fsubrl
cmp
add
movsb
in
fcoms
jno
int3
mov
ljmp
in
jl
mov
sbb
dec
sar
ljmp
es
cmp
xor
cmc
push
popf
in
repnz
cmp
mov
out
push
mov
sbb
je
test
mov
mov
incl
cmc
cli
hlt
cli
or
cmp
mov
jae
pop
mov
mov
mov
or
pusha
sub
mov
sbb
pushl
cld
ljmp
mov
fdivl
inc
data16
jle
lahf
sbb
jmp
sahf
fcmovu
add
ret
jg
cmpsl
sub
mov
sub
fistl
sub
movsb
pop
movsb
jbe
fdivr
incl
xchg
mov
push
sarb
xchg
ss
in
push
fists
cmp
pushl
mov
inc
in
sub
aas
or
mov
lods
cld
dec
pop
mov
push
mov
jg
mov
out
add
icebp
dec
sub
inc
call
incl
dec
and
aam
lahf
mov
fnsave
inc
in
add
jg
mov
movsl
adc
scas
push
or
sbb
push
xor
mov
inc
cld
pushl
clc
fmul
fs
frstor
pop
aam
in
mov
fsubrl
ljmp
jp
mov
jle
in
fdivl
push
les
incl
fisttpl
scas
lock
cmpl
hlt
add
sbb
push
or
call
imul
adc
inc
aam
stos
jns
pop
jae
adc
add
push
cmp
mov
mov
or
add
push
scas
sbb
pop
jge
fildl
incl
jmp
sbb
mov
sbb
push
mov
int3
mov
cmp
test
mov
mov
inc
fildll
aam
add
inc
push
add
pop
dec
lea
pushl
ret
adcl
clc
fs
in
dec
std
incl
enter
popf
sbbl
push
cmp
inc
mov
ficoml
jns
jg
pushl
cmp
int
mov
jl
dec
or
in
adc
inc
mov
outsl
inc
and
push
dec
or
jbe
and
scas
nop
mov
daa
push
or
xor
ret
mov
call
sbb
data16
dec
fmull
pop
cmp
fdiv
mov
add
inc
popa
push
mov
stc
push
adc
add
adc
mov
in
into
adc
inc
lcall
mov
clc
mov
push
pop
dec
mov
je
iret
jl
pop
inc
pop
push
jge
dec
pop
test
mov
cltd
repnz
mov
mov
fsub
stos
jl
test
cmp
or
shrb
mov
xchg
or
loopne
jne
out
clc
push
call
bound
push
dec
outsb
aam
test
or
xor
aaa
insl
mov
inc
fimuls
push
add
mov
push
ss
out
adc
ljmp
test
pusha
ljmp
into
xor
insl
or
jmp
aas
shlb
insb
cs
lock
fwait
jae
mov
call
and
mov
clc
das
in
imul
popa
push
jmp
mov
leave
test
sub
addr16
jmp
mov
xor
ljmp
inc
jns
mov
mov
sub
adc
sbb
cmp
push
push
mov
lea
or
jbe
out
lods
xchg
jmp
pop
push
dec
adc
insl
dec
outsl
mov
cmp
jge
mov
or
enter
pop
cmp
sbb
sbb
cmp
and
lcall
dec
sub
mov
pop
dec
movsb
in
sub
jg
bound
dec
shlb
dec
in
or
mov
mov
andb
ljmp
incl
push
xchg
inc
xlat
dec
push
dec
add
sub
xor
push
lds
or
das
lcall
cltd
insb
adc
int3
add
ret
mov
fidivl
js
nop
pop
sar
ljmp
imul
das
and
in
pminsw
and
in
add
pushl
add
adc
shr
dec
in
pop
sub
enter
or
fbld
cmp
mov
fwait
jg
lcall
push
mov
lock
xor
lcall
sbb
outsl
cli
das
clc
mov
push
movsl
jle
jecxz
test
fmuls
adc
decl
jb
ss
popa
ds
inc
pop
push
jne
sbb
and
push
iret
stc
clc
xchg
push
sub
inc
and
jg
subb
jne
mov
popa
fisubs
push
jg
sbb
mov
jmp
add
adc
pop
or
or
jg
pushl
repnz
and
mov
or
add
inc
icebp
loopne
std
adc
stos
jmp
inc
test
rclb
sub
mov
jbe
push
push
jo
divb
xor
fsubs
sti
cli
lret
loope
ljmp
xor
cmp
xor
pushf
lock
cld
in
decl
and
add
or
or
decb
sti
xchg
mov
cld
mov
bound
push
or
test
pop
or
and
dec
push
pop
pop
or
cmc
incl
cmp
add
jle
lea
sbb
je
shrl
aad
pop
icebp
xorb
movsl
cmc
push
enter
or
xor
sti
push
clc
pop
ja
pushl
and
or
xbegin
leave
add
ds
pushl
mov
mov
sub
cmc
sbb
in
pushf
das
repz
fwait
inc
inc
adc
and
xchg
or
enter
ja
fstpt
cmp
push
xchg
push
aaa
stos
push
negb
mov
mov
push
cmp
sbb
mov
push
xor
mov
mov
lcall
sti
addl
orb
decl
fstps
sub
xchg
pop
cld
pop
add
fs
add
push
or
xchg
mov
lcall
push
iret
cmc
pop
push
sbb
cld
aaa
inc
jne
mov
jle
mov
jae
add
mov
sqrtps
or
jp
mov
clc
daa
hlt
sti
add
lret
inc
cmp
dec
cmp
xchg
addr16
addr16
inc
pop
inc
test
xor
xor
hlt
idivl
adc
or
push
and
xchg
insl
stos
sub
add
jne
or
dec
dec
rcrl
push
pop
shrb
test
aas
fiadds
cmp
mov
cli
mov
pusha
add
jmp
in
and
cld
and
mov
movsb
call
add
fcoml
add
xor
pop
sbb
sub
push
and
pop
sbb
gs
ret
mov
icebp
lcall
popf
adc
test
out
nop
mov
test
mov
mov
mov
out
dec
or
cmp
dec
sbb
dec
testl
or
inc
cmp
add
mov
sbb
and
sarl
imul
call
addr16
xchg
mov
mov
cmc
ud2
or
ja
icebp
nop
fisttps
pop
add
jmp
pop
add
fcompl
push
or
sar
mov
cmp
cmp
mov
jl
push
adc
pushl
mov
mov
nop
ret
dec
mov
inc
mov
in
xor
in
add
fstpt
or
dec
mov
scas
inc
ss
sbb
sbb
decl
andl
inc
pusha
cltd
mov
inc
add
pcmpgtb
mov
add
in
sti
in
sti
cmp
je
mov
int
cmpsl
cwtl
adc
push
imul
cli
add
cld
sbb
push
sbb
mov
aaa
sbb
dec
popa
leave
cmp
sar
decb
push
inc
dec
jmp
fs
cmc
pushl
sbb
iret
mov
cmpsb
idivb
pop
dec
adc
jns
lahf
fnstsw
fildl
jmp
pop
fmull
mov
das
fstps
inc
xchg
cmp
jl
dec
mov
mov
jb
dec
pusha
pushf
fldenv
in
lret
jge
dec
cmp
jge
push
cld
ret
pop
ljmp
mov
jmp
add
dec
fwait
sbb
lock
outsl
lcall
add
push
fcompl
cmp
movsl
xor
add
pop
inc
in
dec
in
ljmp
clc
in
pop
pop
jl
or
add
ljmp
xor
mov
mov
push
test
fadds
pop
dec
jne
mov
std
sub
incl
setg
outsl
inc
stos
fnstsw
and
js
or
sub
and
mov
cmp
inc
rorl
ljmp
adc
cmp
push
int3
in
push
std
fidivl
push
mov
jmp
push
lea
mov
fsub
jp
mov
mov
mov
nop
and
sti
movsb
adc
mov
es
aad
movsl
mov
jne
in
inc
out
cli
push
sbb
clc
mov
and
call
insl
ret
adc
ss
out
test
movsb
decb
ja
cwtl
mov
mov
loopne
rorl
insb
push
rclb
mov
sbb
mov
inc
addb
sbbl
jg
adc
mov
inc
mov
cmp
call
call
fs
mov
jmp
mov
sbb
xchg
inc
es
and
jl
dec
dec
mov
cmp
rorb
cmp
sti
mov
push
shl
sub
jmp
adc
push
pop
mov
jl
pop
andl
push
or
lcall
mov
or
mov
jl
push
or
jo
mov
push
cli
inc
xchg
popa
pusha
arpl
pusha
sbb
imull
lods
insb
das
and
jmp
and
xchg
push
lods
and
adc
inc
sarl
xor
fbld
lret
lsl
mov
jl
adc
mov
pop
jb
xchg
cwtl
inc
cmp
decl
fists
push
push
xor
cwtl
lahf
int3
dec
fbstp
or
jl
cmp
pop
or
outsl
pop
inc
cmp
pop
cwtl
loope
fs
lcall
loope
in
lods
add
pop
and
xorl
adc
movsb
std
jnp
jl
int3
pop
or
mov
enter
int3
frstor
add
into
inc
or
and
mov
shll
orb
pop
pop
fs
xchg
cltd
pop
pop
lods
add
loop
jge
ret
ljmp
cs
data16
cmp
fwait
das
mov
lea
sub
jl
arpl
insb
stos
xor
imul
or
test
fnsave
push
mov
mov
push
adc
or
pusha
xchg
decl
jl
lock
push
bswap
aaa
test
mov
test
dec
lcall
incl
cmpsb
in
xchg
xchg
enter
aam
mov
out
jmp
repnz
push
adc
insb
fisubs
mov
js
test
scas
mov
dec
mov
adc
or
lcall
imul
xor
add
setns
mov
adc
enter
test
outsl
clc
pop
fimuls
pop
test
nop
inc
inc
movsb
fbstp
rcrb
int
jl
enter
mov
in
sbb
in
cld
lcall
cmp
jo
adc
int
pop
int3
fcomps
pop
add
cmpsb
movsb
cmp
jg
call
and
inc
pop
inc
dec
fs
sub
shlb
test
dec
sbb
fstps
call
loop
out
aas
mov
jns
xor
adc
xchg
xor
popa
lahf
sub
fists
mov
sub
mov
and
negb
xor
lcall
cmp
inc
dec
in
stc
mov
adc
mov
add
and
hlt
test
adc
stos
fcomip
jo
rcr
cs
pop
aas
pop
jg
outsl
cli
adc
out
pusha
adcl
lods
push
cltd
fstpt
mov
test
push
dec
push
fbstp
mov
aam
sarb
and
push
and
sbb
paddd
add
insl
and
pushf
cmpsb
add
aad
add
int
and
gs
pop
inc
call
pop
inc
pop
repnz
fdivrs
xor
xlat
push
test
sbb
stos
xchg
push
pop
pop
pop
call
cmp
push
dec
aaa
es
push
lods
add
or
cld
or
cwtl
dec
andl
in
pop
xor
xchg
lock
daa
add
xorb
int
arpl
mov
xchg
decl
xchg
xchg
xchg
in
loop
mov
fisubl
leave
aas
icebp
lds
pop
fidivrs
lock
call
add
mov
sub
fcomps
add
sub
test
cmp
mov
hlt
and
cmp
or
pop
ja
add
push
mov
call
mov
jle
addsubps
jge
lea
xor
jo
jbe
add
inc
fs
ljmp
divl
adc
and
push
insb
inc
sbb
push
cwtl
inc
nop
mov
aas
lea
push
push
mov
incl
sbb
or
sbb
sbbb
cmp
and
jmp
or
enter
lcall
outsb
mov
test
xor
push
lea
ljmp
dec
adc
or
movsl
push
inc
jmp
xor
call
dec
insl
dec
push
dec
adc
fimull
adc
sbb
push
je
cmpsl
mov
adc
mov
test
mov
fs
add
cmpb
or
icebp
dec
or
xor
mov
push
jnp
rclb
sbb
dec
inc
movsl
cmp
fcomip
pushl
xchg
in
adc
je
add
call
lcall
rcll
dec
fists
lock
decl
in
pop
cmp
insb
sbb
ds
mov
dec
push
shlb
test
adc
incl
cld
into
and
pop
jnp
or
je
popa
test
push
jne
xchg
test
lcall
inc
or
jl
mov
push
stos
stos
and
mov
sub
ret
add
xchg
pop
jo
pop
addb
mov
push
dec
inc
push
push
and
ret
mov
insb
jae
adc
mov
mov
mov
and
or
call
cld
pop
popa
enter
lock
data16
call
fldt
mov
orl
inc
adc
pop
mov
fsubrl
hlt
and
jg
or
xchg
mov
arpl
int
mov
lock
stos
into
inc
sbb
mov
lret
subl
add
movb
pop
add
incl
dec
jne
mov
call
jo
test
push
adc
mov
mov
add
add
aaa
jnp
call
sti
and
lcall
or
cmp
shrl
es
cmp
add
mov
insb
sbb
decl
dec
insb
push
daa
popa
lods
ficoml
xor
test
mov
xchg
inc
test
xchg
sahf
arpl
mov
dec
xorb
in
scas
es
sti
pop
push
or
add
mov
jl
jl
or
sub
or
enter
push
inc
cli
incl
cli
jp
cmpsl
out
popf
xor
loop
iret
xor
xchg
sti
mov
or
xchg
movsl
xlat
insb
insb
jl
jbe
and
pushf
int
sahf
sbb
decl
out
add
jmp
push
xor
sbb
adc
in
sub
jmp
nop
add
pop
stc
jl
ljmp
decl
mov
jo
dec
adc
sbb
inc
popf
pop
mov
xchg
incl
or
push
data16
pushf
shll
cs
mov
jmp
or
sarb
lret
cs
push
test
clc
jmp
jb
push
push
and
out
mov
dec
dec
mov
xchg
fildl
inc
add
pop
inc
mov
or
lcall
aam
pop
in
pop
and
xchg
test
sbbb
dec
mov
lods
add
stc
fidivs
ja
adc
inc
push
mov
es
jg
test
push
lret
cld
incl
cmp
sti
and
mov
inc
dec
aam
mov
jg
jp
stos
adc
adc
mov
inc
out
xlat
xor
andb
push
xchg
ljmp
xor
es
sbb
add
incl
cld
add
adc
and
fsubs
pop
subl
sbb
icebp
out
movsb
imul
idivb
xor
lcall
fiadds
pushl
push
es
cmp
adc
and
cmp
mov
cmp
ljmp
mov
pusha
into
xor
je
repz
pop
into
and
adc
dec
cmpb
mov
jo
lds
movsb
adc
push
lcall
fdivrs
push
dec
pop
add
xlat
and
jmp
bound
pop
inc
nop
into
pop
jl
or
inc
xchg
xor
sbb
sub
mov
jb
pop
push
mov
mov
and
push
and
jnp
jl
out
clc
jmp
jl
pop
or
add
insl
inc
push
shll
jb
push
call
cmc
push
scas
add
inc
pushf
shl
mov
adcb
jg
adc
push
addr16
push
jnp
xchg
in
int3
aam
inc
addr16
scas
and
push
push
mov
sbb
adc
push
cltd
pop
out
pop
jl
cmp
lds
inc
or
cmp
test
decl
push
mov
aaa
dec
mov
insb
adc
or
sbb
add
pushl
int3
les
pop
arpl
arpl
and
xchg
repz
cmpsl
popa
lcall
jg
and
adc
pop
aad
ret
into
or
or
loop
mov
lcall
mov
xchg
xchg
jle
pop
adc
adc
into
stos
xor
and
mov
ljmp
add
js
mov
call
and
ret
pop
xor
rclb
cld
aas
cmp
loope
mov
scas
mov
mov
pop
lcall
loopne
mov
dec
neg
outsb
rcll
call
inc
cmp
jbe
pop
popa
ja
mov
mov
and
inc
jne
mov
sub
lods
mov
add
decl
adc
mulb
clc
fs
adc
push
arpl
inc
repnz
jmp
add
jmp
push
or
sbb
jmp
rolb
sub
out
in
push
mov
icebp
jge
rep
push
jg
or
or
ss
inc
loopne
popa
push
call
push
dec
jne
lcall
inc
imul
incl
dec
mov
inc
cmp
ret
jg
push
sbb
pop
or
js
sub
call
shrb
imul
adc
jg
popa
push
push
mov
loop
pushl
pop
mov
and
rorl
sbb
decl
ja
sbb
and
jge
pop
fsubrs
mov
add
cld
push
std
sbb
andl
inc
ss
pop
call
daa
stos
incl
stos
cmp
or
inc
pop
cmp
incl
sub
clc
inc
or
sahf
xor
jle
inc
or
pop
push
popa
hlt
xchg
fldl
icebp
incl
inc
jmp
inc
cwtl
mov
pop
lcall
and
adc
loope
je
dec
sbb
ja
jne
addr16
outsl
repnz
incl
nop
fimull
add
dec
mulps
mov
and
lret
movsb
es
jl
aas
les
pop
adc
adc
loop
loop
cli
xchg
enter
cs
or
test
mov
ss
faddl
out
pop
xchg
hlt
sub
xor
mov
out
mov
xor
popa
int
adc
adc
push
pop
add
adc
push
mov
cmp
cmp
xchg
mov
gs
pop
mov
xchg
inc
shlb
push
insl
adc
inc
ret
cmc
fildll
inc
add
fsubs
ficompl
ret
or
daa
adc
xchg
adc
and
dec
hlt
add
jmp
xor
xchg
mov
loopne
es
dec
dec
lcall
xor
in
repnz
ljmp
addb
push
dec
xchg
sbbb
jb
dec
int3
or
loope
ljmp
dec
js
test
push
jmp
inc
flds
out
or
insb
xchg
mov
jg
mov
cmpsb
aam
rolb
outsb
adc
test
shr
fdivr
pushl
jg
popa
mov
je
push
into
push
das
sub
fsubr
icebp
dec
inc
inc
jmp
mov
mov
ret
xor
rorb
bound
loope
push
inc
insl
orb
out
arpl
cmp
ljmp
cmpsb
push
lar
cmpsl
sbb
gs
stos
add
dec
scas
jo
call
pop
loopne
mov
das
add
ret
jp
fildl
jmp
mov
adc
xor
loope
popa
in
inc
add
xor
adc
add
hlt
cmp
into
push
mov
lods
std
mov
adc
add
dec
dec
jl
jmp
fistl
in
pushl
shrl
rolb
dec
pop
adc
sbb
lcall
inc
push
mov
ljmp
adcl
enter
xchg
xor
mov
mov
rclb
movsb
or
daa
sahf
clc
sbb
xchg
add
ljmp
mov
ds
push
fs
and
add
or
dec
orb
adc
jg
sbb
and
sbbl
push
pushf
inc
cmp
mov
scas
in
ljmp
pop
adc
inc
and
call
sub
pop
shrl
xchg
push
test
inc
mov
xor
sbb
fcomps
sub
movsb
sbb
sub
jmp
subl
in
nop
xor
iret
or
cltd
in
push
jg
and
jmp
cld
or
incl
xor
loop
mov
sbb
jbe
mov
and
clc
incl
adc
lret
mov
lret
sbb
and
sub
dec
lahf
or
cmp
call
inc
xor
cmp
jno
jo
sub
push
or
cmc
cmp
leave
or
in
loopne
cmp
pop
adc
fdivr
sub
in
or
call
adc
cmp
icebp
je
movsb
sbb
sbb
push
ljmp
pop
ljmp
or
mov
jg
add
int3
and
sub
xor
into
test
push
sub
sbb
xor
lcall
jg
and
dec
cmp
pop
cmp
mov
jmp
push
xchg
test
adc
jb
shrb
imul
sub
adc
jle
push
sub
add
cmc
incl
pop
int
push
loop
jb
push
push
jns
js
std
or
in
mov
lea
adc
push
shlb
pop
inc
dec
incl
xchg
jno
jo
stos
nop
jo
dec
in
add
fs
mulb
sub
pop
sub
aaa
cld
insl
movsb
sti
add
push
or
scas
out
jns
test
in
insb
pushl
addb
or
adc
sahf
mov
rcll
bound
jmp
inc
inc
push
push
add
mov
or
bound
test
mov
ljmp
sahf
pop
adc
and
stc
add
and
jbe
or
pop
xor
mov
jmp
lock
loop
jecxz,pn
mov
dec
adc
loopne
push
or
xchg
and
xor
test
jne
mov
ds
lea
test
add
dec
lock
loop
in
ljmp
repnz
xor
mov
sbb
cmp
sbb
push
push
inc
cmp
xor
add
xchg
mov
sbb
or
mov
sub
inc
mov
mov
and
ja
loop
inc
xor
test
in
mov
in
or
leave
test
xorl
pushf
loopne
test
mov
incl
mov
inc
sub
insb
push
xor
addb
addr16
aaa
not
insb
pop
pusha
cld
ljmp
pop
jp
mov
insb
pop
test
or
sti
mov
sub
cmp
out
mov
cmp
pop
push
jnp
jo
ljmp
mov
add
pop
nop
nop
add
xchg
mov
pop
je
dec
outsb
scas
sub
orb
cmp
ss
dec
je
addb
and
pop
push
jg
jmp
rorl
pop
or
push
pop
mov
dec
movsb
and
sbb
add
or
call
push
enter
loopne
jp
or
xor
or
in
mov
add
lcall
je
sub
add
fisubrs
xchg
sub
add
pop
push
xor
inc
std
push
aam
add
pop
or
adc
jp
xchg
test
jg
push
xchg
mov
cmpsl
test
add
adc
xchg
fnstenv
push
mov
aam
repnz
add
arpl
daa
mov
push
std
addr16
outsl
add
mov
shl
cmp
push
push
call
push
shl
add
sarb
push
mov
cmpsl
mov
add
inc
sar
mov
lcall
mov
sbb
or
add
dec
inc
sbb
jp
adc
sti
incl
jo
or
dec
fildl
jge
faddl
and
nop
mov
xor
pop
dec
ss
jg
pop
sub
cwtl
outsb
neg
and
push
pop
inc
dec
jb
inc
push
call
push
ja
and
pop
dec
jbe
mov
mov
adc
or
es
ds
dec
std
xor
rolb
daa
jge
stos
mov
inc
push
das
je
ljmp
daa
out
test
mov
cmp
xchg
add
lcall
fldl
add
add
mov
sbb
push
ss
mov
add
xor
orb
and
pop
sub
push
sub
sbb
pop
pop
test
inc
scas
add
shrb
insb
ljmp
xchg
call
mov
mov
pop
fwait
and
mov
ud0
loopne
scas
cld
call
sub
leave
enter
mov
fistl
sbb
mov
sbb
test
adc
jp
mov
fdivrp
test
hlt
add
cmp
hlt
aad
jo
popa
push
push
inc
and
call
mov
filds
in
je
cmp
test
outsl
adc
jnp
push
movsb
inc
add
cmp
mov
call
dec
push
and
xchg
mov
roll
inc
aaa
jmp
xchg
out
adc
adc
pop
hlt
jmp
nop
sbb
cwtl
and
xor
jns
in
push
je
je
in
or
jg
mov
and
or
and
adc
adc
sub
loopne
das
inc
push
pop
cmp
incl
js
sbb
in
pusha
adc
xor
mov
mov
mov
inc
push
sub
mov
sbb
fisubl
dec
std
aas
cmp
ja
push
jecxz
lcall
in
push
xchg
mov
add
pop
push
pop
mov
pushf
mov
adc
adc
das
orb
das
cli
aam
pop
js
add
sbb
mov
push
scas
das
shrb
gs
push
cmpsl
test
out
filds
push
xchg
movsb
or
pop
test
sbb
insb
add
or
decl
xchg
loopne
test
ret
sbb
lods
and
jo
icebp
push
add
js
adc
dec
in
call
cmp
push
mov
mov
pop
sbb
cmp
inc
lock
ljmp
test
popa
or
adc
jno
cs
imul
adc
mov
lea
push
jmp
icebp
dec
cmc
mov
xchg
cld
push
push
popa
mov
sbb
sbb
sub
call
push
aam
and
sti
test
xor
dec
mov
in
push
movsb
and
inc
cmp
jbe
or
ljmp
bound
jbe
pop
orb
push
jnp
and
fcoms
or
adc
add
cwtl
das
movsb
test
mov
into
cmp
roll
cmp
adc
pop
pop
cltd
or
mov
test
cltd
inc
sbb
sub
xchg
ja
or
sbb
mov
push
jne
add
fcom
or
movsl
enter
inc
aam
jb
or
fdivs
or
cmc
aas
cmp
fisttps
dec
or
pop
sbb
popw
adc
out
dec
aam
push
push
push
fisttpll
hlt
cs
pop
adc
and
push
add
cmp
lods
in
or
fbld
adc
test
pusha
testb
out
push
jo
add
test
and
push
js
fwait
sub
out
mov
mov
xor
add
pop
jge
push
stos
dec
ror
pop
repnz
pop
fdivrs
push
push
ret
ret
mov
pop
adc
adc
repnz
push
inc
in
inc
cwtl
xor
loopne
popf
pop
dec
ljmp
jo
mov
add
inc
add
out
xchg
cmp
sub
pop
push
xchg
jp
push
cmp
jg
mov
sub
out
and
or
inc
lock
add
xor
pushl
daa
dec
and
int3
or
insb
repz
sbb
ds
or
pusha
xor
or
rcr
jne
decl
int3
jo
das
push
add
mov
pop
icebp
or
in
imul
pushl
jp
add
insl
sbb
stc
jb
ficoml
in
pushf
add
sti
mov
inc
incl
xchg
jge
sub
mov
jb
lcall
push
inc
inc
push
push
ljmp
or
out
call
call
lret
pop
push
jnp
xor
push
lock
lcall
in
insb
jmp
lods
push
jo
dec
inc
in
mov
push
out
jbe
push
and
and
xchg
push
out
sbb
push
inc
or
xor
inc
xchg
cmpb
xor
mov
cwtl
aad
add
lock
mov
jg
jnp
fldenv
in
cmp
mov
push
lods
push
sub
push
or
sbb
and
incl
push
jl
push
loop
cmc
ds
mov
jg
rolb
shlb
pop
xchg
sbb
sub
sti
push
das
stos
fistps
ljmp
clc
cli
sub
jg
mov
mov
push
std
movsb
shr
out
loopne
aas
or
decl
nop
or
mov
fdivrs
fdivs
loop
jb,pt
ja
jbe
stos
pop
pop
pushw
rcl
fcomps
je
fwait
or
pushl
mov
pusha
sbb
mov
test
jg
mov
sbb
or
push
add
pop
std
lcall
scas
ja
cmp
insb
and
jo
and
add
add
clc
jmp
les
or
mov
mov
cmp
lock
insb
mov
inc
xchg
nop
xchg
xor
push
push
jecxz
xor
dec
mov
pushf
test
cmp
call
int3
dec
mov
fwait
push
fcomip
pop
inc
loope
scas
dec
pop
push
pop
lea
jl
adc
pushl
mov
insl
and
sub
aaa
add
mov
and
decl
sahf
arpl
aam
ret
mov
divb
push
test
push
clc
pop
dec
jbe
push
sub
inc
sbb
and
stos
xor
push
notl
jl
fcomip
dec
dec
xchg
mov
push
add
sub
fcomip
mov
pop
jmp
and
lock
in
and
sub
adc
shlb
incl
stos
scas
enter
pusha
shrb
loopne
enter
pop
sbb
push
aad
nop
clc
incl
adc
inc
lcall
push
or
clc
mov
shlb
adc
inc
out
out
inc
out
push
mov
rcll
fisubl
inc
in
loopne
mov
call
loopne
and
test
xchg
shlb
mov
pop
lods
mov
xchg
pop
xchg
lock
sub
push
xchg
push
mov
rclb
std
lcall
pop
out
lcall
xor
cmpsb
jp
cli
add
cmpl
dec
cli
pushl
mov
sbbb
ja
pop
xor
add
cmp
aaa
adc
add
js
imul
nop
out
aas
xchg
and
lcall
push
incl
bnd
mov
js
test
pop
cmpsb
ret
xchg
int3
in
jg
dec
pop
sbb
daa
xchg
pushf
sub
xchg
inc
push
repnz
mov
sbb
xor
and
call
xchg
dec
int3
int3
push
ds
pusha
pop
sbb
nop
dec
dec
cmp
mov
cmp
adcb
and
mov
push
scas
cli
jg
rcrb
inc
jge
cmp
dec
popf
xchg
fcomip
filds
addb
outsb
push
cmp
fldl
fs
cmp
cmpb
pushf
mov
or
call
sbb
xor
ja
popf
add
pop
or
push
mov
bswap
pop
mov
add
call
and
test
mov
sahf
sbb
sahf
push
je
test
xchg
lea
mov
adc
sub
ljmp
cmp
push
push
xor
call
loopne
xchg
out
and
sub
insb
sbb
sbb
out
adc
test
add
inc
lock
push
out
clc
jns
cmp
shlb
andw
dec
jbe
cmp
dec
fwait
clc
pushl
and
mov
daa
fstp
pop
or
adc
add
loope
inc
push
ja
adc
in
jp
dec
fildl
ret
jne
adc
push
mov
pop
or
notb
nop
fsts
push
in
jg
jmp
mov
xor
js
inc
ret
sahf
mov
mov
lcall
push
popf
lea
inc
mov
out
popf
inc
mov
insl
push
int
push
and
adc
mov
jmp
leave
or
cmp
cmp
icebp
sahf
push
xor
lcall
inc
out
push
daa
rorl
test
adc
aas
mov
test
jmp
pushl
sbb
jmp
loopne
mov
sub
push
push
mov
outsl
jo
adc
sarb
mov
rcll
adcb
sbb
xchg
fimull
int3
pop
js
mov
data16
cmp
aaa
and
and
jnp
cmp
clc
ljmp
idivl
jne
cmp
mov
xor
jmp
cmp
xchg
int3
out
or
adc
arpl
addr16
jg
pop
int3
test
xchg
pusha
xchg
jo
dec
and
mov
stc
push
out
pop
mov
imul
xchg
add
push
test
inc
sti
ficoms
pop
enter
add
adc
out
add
or
pusha
mov
js
mov
sub
dec
int3
add
adc
pusha
add
mov
dec
or
or
test
mov
inc
sub
xchg
xchg
mov
les
pop
loopne
mov
ss
pusha
inc
enter
xchg
mov
shlb
repz
jbe
pop
inc
cli
push
sar
aam
or
pop
jbe
inc
xor
cld
scas
pop
cs
cmp
jmp
dec
push
pusha
nop
push
jmp
sbb
xchg
xor
in
call
push
push
push
add
add
lods
dec
add
add
push
inc
imul
or
and
lcall
fiadds
sub
pop
jmp
adc
or
lcall
pushf
sub
xor
pop
jb
jae
sbb
add
nop
stc
in
mov
push
push
jne
cmpl
add
movsb
mov
sbb
dec
mov
inc
stos
add
adc
push
and
out
cmp
mov
jmp
mov
sub
pop
adc
dec
add
les
add
push
rcll
scas
mov
or
scas
cmp
mov
ret
push
adc
stos
nop
add
cmp
dec
push
lahf
dec
dec
jb
pushf
call
mov
enter
loopne
in
call
sbb
out
test
mov
dec
cld
ds
push
mov
jge
ljmp
or
dec
mov
mov
sub
mov
sub
add
test
inc
add
rolb
dec
fisubl
std
lcall
gs
mov
mov
push
pop
xor
push
loope
or
jg
lcall
sub
ret
out
and
aam
jo
add
mov
dec
push
cmpsl
mov
jg
push
lds
mov
sbb
mov
test
sbb
dec
pop
cmp
scas
push
add
dec
test
sub
push
std
pop
pop
sub
or
and
xor
inc
sub
xlat
and
cli
dec
lea
stc
dec
mov
incl
jl
inc
sahf
pop
insb
mov
das
jl
nop
mov
sub
cld
dec
jmp
mov
xor
add
push
lcall
push
sub
add
insb
lcall
int
into
shlb
xor
adc
lcall
jp
add
cmp
sbb
int3
cltd
mov
sub
fwait
inc
jmp
or
ficompl
inc
outsl
clc
mov
sub
movsl
pop
testb
dec
inc
repnz
cld
and
add
mov
cmpsb
mov
mov
je
mov
xchg
mov
std
call
and
mov
inc
lcall
rcrl
sbb
sbb
push
inc
mov
roll
pusha
push
rcrb
or
ljmp
or
sub
jl
cmp
fidivrl
movsl
add
mov
int3
mov
sarb
daa
jecxz
xchg
inc
add
in
decl
call
sub
das
or
rclb
addr16
push
mov
mov
out
cld
movsl
jp
mov
and
push
lds
add
pop
sbb
jmp
rclb
incl
cld
pop
xor
add
inc
je
xchg
fistpll
clc
push
xchg
or
lcall
xor
mov
stos
clc
dec
push
jnp
adc
dec
decl
es
xor
cmp
or
push
shlb
sub
mov
popa
loopne
sbb
enter
aas
pop
add
sub
inc
inc
xlat
dec
pusha
mov
out
repnz
adc
sub
dec
dec
push
xor
pop
fdivs
adc
xchg
push
xor
xor
or
pop
mov
pushf
push
or
mov
or
decl
test
pop
sub
pushf
mov
call
push
lea
and
repz
cmp
adc
insl
adc
mov
je
mov
cld
mov
jle
sub
jno
add
add
add
in
sub
orl
in
dec
adc
out
les
xor
xor
pop
lods
mov
push
fs
sbb
sbb
lcall
xor
fisttpl
js
add
call
andl
add
fstp
or
or
add
lahf
fnstsw
jg
cvtdq2ps
or
leave
mov
mov
mov
lds
mov
sub
xor
add
incl
rclb
mov
mov
test
and
adc
aas
and
lahf
jp
fs
js
ss
je
jp
add
mov
lahf
mov
push
pop
rcrb
mov
sbb
push
jg
pusha
cld
mov
rolb
and
cmp
or
xor
sti
sahf
xor
daa
xchg
cmp
fdivr
decl
shlb
jb
leave
and
pushf
pop
jb
loopne
out
enter
enter
fldt
mov
or
pop
je
or
cmp
mov
xor
sub
and
jmp
add
push
fimull
icebp
or
call
or
clc
push
mov
popa
inc
test
push
mov
add
sbb
lcall
pop
cmp
jmp
push
sbb
add
movsb
xor
scas
xchg
cltd
in
jmp
push
pop
adc
jg
sbb
js
and
adc
xchg
dec
add
pop
push
fcoml
jecxz
pushl
cmp
and
fadds
push
ljmp
lock
sar
lcall
adc
pop
call
ss
lret
pop
pusha
pushl
xchg
sub
test
je
rolb
add
xor
clc
adc
pushl
popf
sbb
dec
enter
jb
push
fcoml
cmp
adc
sbb
dec
mov
mov
cmp
adc
pushl
faddl
xor
pop
inc
clc
push
jg
adc
je
sub
lret
mov
scas
sub
or
incl
and
sbb
out
repz
mov
add
jg
insb
push
shl
outsb
stos
subb
push
push
out
push
inc
incl
loopne
inc
sub
and
or
add
orl
outsl
incl
cld
stos
pop
fsubrs
sbb
or
jmp
push
push
sbb
mov
jbe
push
mov
mov
incl
fld
pusha
or
jmp
fldcw
fisttpl
lea
mov
sbb
jns
ljmp
add
je
push
shl
push
sahf
ret
icebp
inc
and
add
repnz
mov
or
cmp
dec
push
cmp
push
dec
test
inc
notb
sbb
dec
and
pop
cmp
jbe
int
pop
lds
push
call
addr16
xchg
test
call
push
pop
out
ljmp
adc
push
mov
xor
and
push
mov
pop
jl
dec
mov
add
push
push
xlat
dec
dec
jg
fisubl
pop
dec
popa
inc
test
incl
aas
xor
popa
pop
xor
push
push
or
rcll
sub
mov
pop
cmc
mov
pop
xor
inc
inc
dec
cmc
lock
cmp
push
cmp
sub
test
push
mov
xor
xor
cmpsb
or
loope
pop
cmpsb
imul
mov
cmpsb
xor
adc
or
push
sub
test
sbb
rcrb
add
push
add
cs
ja
lcall
cld
push
push
lea
add
testl
push
hlt
pushl
aas
or
or
jbe
dec
add
push
adc
sti
pusha
pop
inc
insb
cmpsb
add
lcall
lods
push
sub
jb
mov
mov
int3
ret
sti
xor
inc
sub
cwtl
mov
call
push
mov
mov
adc
fnstsw
in
add
scas
and
or
stc
inc
inc
cmp
jl
aas
cltd
sub
mov
aad
stos
inc
std
pop
or
std
call
lock
fwait
push
mov
add
mov
pusha
imulb
sahf
sbb
mov
push
inc
mov
sub
xor
dec
out
or
dec
orb
sahf
add
pop
movl
push
mov
jmp
mov
cmc
fisubrl
inc
movsb
test
call
pushf
cmpsb
mov
pop
negl
cmpsl
sub
or
ret
fwait
sbb
xchg
ret
adc
lea
or
sub
push
movsl
adc
stos
mov
insb
cld
fildll
aad
dec
test
dec
mov
adc
push
sar
jg
pop
test
mov
jne
xchg
call
loopne
mov
rep
jl
sbb
jne
decl
pop
or
xchg
xor
inc
pushl
insl
fisttpl
outsl
mov
add
cmp
pop
test
add
cmp
or
incl
addr16
mov
sbb
xchg
lock
pop
xor
scas
clc
decl
mov
adc
dec
orb
incl
push
es
mov
outsb
insb
and
cmp
add
mov
fistpll
stos
sbb
popf
fwait
xor
ss
lret
js
jmp
aas
inc
cmp
jle
dec
cmp
jl
jnp
pushf
jmp
dec
shl
add
push
or
movsl
cld
fbld
flds
fcomps
pop
add
loopne
pusha
mov
sti
test
jp
push
mov
adc
in
or
aas
push
fstps
sbb
jg
test
push
fldt
push
add
or
stos
fldl
jmp
popf
lcall
in
and
rolb
and
xchg
dec
decl
repz
or
into
and
mov
push
add
mov
mov
add
or
je
out
scas
lea
cwtl
mov
sub
addr16
decl
movsb
movsb
mov
xchg
adc
sahf
loope
or
mov
or
push
adc
lds
pushf
push
notl
lea
jg
decl
cld
sub
jbe
pop
enter
std
rclb
fists
push
push
lea
mov
adc
subb
fcoml
sbb
insl
lock
xor
inc
jmp
ret
cmpsb
dec
pop
lods
inc
inc
pop
cmc
decl
dec
cmp
or
sbb
mov
fisttps
adc
fsubs
inc
bound
sbb
pop
pop
and
mov
fcomip
push
inc
es
sbb
imul
push
stos
push
insb
ja
incl
sub
or
adc
movsb
imul
or
incl
jo
push
cmp
or
or
pusha
cmp
decl
insb
or
pop
mov
fstpt
cmpsl
sbb
mov
jge
adc
aam
pop
inc
fistps
inc
shl
bound
movsl
shrb
inc
add
jbe
dec
jbe,pt
cli
out
adc
sub
xor
sub
cld
scas
dec
mov
int3
aas
xchg
sub
add
aad
and
adc
lret
and
call
shr
and
jmp
pop
std
ljmp
cmp
dec
mov
adc
in
mov
rol
mov
jbe
push
repnz
pop
mov
lcall
rclb
shrb
fmull
sti
shl
outsb
mov
outsl
clc
jmp
and
insl
mov
or
addl
pop
test
adc
xchg
adc
sub
lods
andb
and
ss
jnp
dec
ret
inc
in
fsubl
add
aam
int3
bswap
sarb
mov
test
nop
mov
ljmp
sbb
mov
push
push
push
lods
push
pop
call
push
pop
jle
mov
add
cmpl
incl
adc
insb
sbb
sbb
push
add
stc
in
orl
out
ljmp
mov
je
loop
xchg
and
call
nop
sub
pushl
or
loopne
push
xor
push
fnstcw
and
pop
adc
ja
call
enter
and
cmp
ljmp
pop
call
leave
mov
std
scas
loop
push
aas
mov
stos
inc
add
push
add
cltd
int
shrl
jg
into
imul
and
jbe
pop
jns
sbb
das
push
add
cmpsb
decl
fisubrl
icebp
pop
xor
jge
xchg
pop
cltd
push
mov
in
mov
mov
sbb
out
enter
fmull
gs
fiadds
pop
jno
add
out
sbb
mov
sbb
arpl
adc
incl
leave
jge
add
dec
dec
dec
mov
push
clc
cmp
mov
mov
or
fmuls
mov
add
pop
pop
mov
lcall
push
xlat
push
push
mov
sbb
xor
push
jae
insl
pushf
int3
lea
inc
xchg
push
lods
jo
adc
add
dec
test
xchg
test
decl
jge
inc
test
sub
add
out
outsb
or
sub
loope
mov
adc
add
adc
decl
add
loope
pop
mov
xchg
push
add
and
add
nop
fistl
sbb
xchg
push
frstor
sub
lcall
adc
or
dec
mov
jmp
adc
aaa
sub
outsb
xchg
or
loopne
addb
sahf
fildl
push
into
add
and
fildll
inc
add
int3
xor
adc
add
mov
and
sub
mov
lock
adc
stos
add
push
clc
inc
pmaxsw
fsts
inc
add
imull
push
or
fs
int3
pop
int
std
ljmp
int
adc
adc
pop
inc
cmpsb
imul
adcb
fs
inc
insl
jae
das
or
push
cmpsl
fincstp
fcomi
call
imul
hlt
insl
cmpsl
sub
data16
add
lret
mov
fcoms
mov
out
inc
dec
outsl
fwait
dec
leave
hlt
pushl
jae
or
push
cmpsb
push
push
cmc
or
call
xlat
fiadds
icebp
push
popa
jbe
adc
cmp
adc
inc
outsb
xchg
fs
gs
sbb
jg
add
pop
mov
rclb
je
jo
push
dec
inc
dec
push
ret
data16
dec
inc
push
sbb
jg
push
imulb
data16
test
sub
inc
inc
adc
xchg
int
jo
inc
pop
push
push
and
hlt
aas
and
add
adc
cmp
idiv
fwait
sbb
sub
or
sub
and
cmp
je
xchg
jne
mov
and
jo
ret
mov
outsb
inc
repnz
nop
or
aas
sbb
or
xchg
inc
cmp
arpl
cmp
pop
jl
pop
popa
jae
add
ds
cmp
lahf
mov
and
pop
xor
call
mov
outsb
add
cmp
imul
popa
mov
arpl
push
xchg
pushl
outsb
pop
fs
cltd
mov
sbb
dec
mov
cs
or
ljmp
cmp
jne
inc
dec
popa
pusha
inc
fs
xor
outsb
out
push
mov
mov
mov
jb
insb
sar
das
cmp
aas
and
std
mov
imul
insl
rolb
and
inc
outsl
fcmovbe
jno
outsb
jae
les
push
dec
imul
ret
push
mov
jns
addr16
jmp
mov
and
ja
xor
cmp
push
outsl
sub
inc
insl
mov
mov
shlb
jg
lcall
and
outsl
andb
adc
je
mov
cmpsb
decl
push
insb
sub
into
icebp
imul
data16
pop
pop
mov
push
add
ljmp
ss
and
sti
out
imul
gs
mov
paddsw
xor
outsb
and
pushl
mov
xor
cs
fcmovnu
ds
jmp
roll
push
loopne
outsb
push
outsb
add
dec
inc
or
fisttps
add
mov
ja
je
xchg
xor
call
mov
cs
jns
dec
xchg
je
inc
insb
mov
jb
dec
mov
add
aam
jne
daa
dec
or
inc
mov
push
in
es
mov
adc
push
out
movsb
js
call
jae
jb
pop
mov
pop
jns
ficoms
arpl
sbb
mov
mov
jne
cwtl
xor
imul
jmp
pop
jae
ret
decl
mov
push
pop
insb
inc
arpl
cmp
pop
gs
xor
sub
movd
std
aaa
std
out
or
aaa
sbb
insb
jnp
jg
adc
nop
movsl
jb
and
loope
pop
fdivs
std
decl
test
insl
mov
jne
popf
pop
imul
or
pushl
cwtl
lea
pop
lret
iret
ret
ja
pop
jo
xor
outsb
ret
popa
insl
or
xchg
es
and
mov
cltd
frstor
ret
add
insl
jecxz
stos
out
in
insl
fcmovnu
addr16
std
pop
mov
jg
out
push
mov
daa
pop
jle
jnp
popa
mov
mov
outsl
out
js
push
ss
scas
jb
push
adc
call
cmp
mov
push
pop
pop
imul
arpl
incl
rclb
and
push
outsb
stc
insb
sub
aad
cmp
gs
mov
enter
sbb
sbb
lret
jg
pop
cmp
js
mov
bound
inc
arpl
cmp
test
loop
adc
outsb
daa
iret
out
lods
out
lods
imul
and
stos
push
outsl
and
mov
insb
scas
and
sbb
jmp
les
mov
xlat
js
out
clc
mov
fcompp
adc
fs
loope
insb
ret
sbb
outsb
inc
pushl
adc
repnz
arpl
shll
mov
add
pusha
or
xorb
scas
jae
es
enter
pop
outsl
sub
ret
sbb
and
jg
aad
int3
pop
or
jns
inc
rcr
fistpll
sub
ljmp
and
adc
or
fs
in
cmpsl
movsl
je
mov
push
insb
jmp
lret
pop
popa
adc
mov
frstpm(287
mov
loopne
insb
pop
push
or
mov
in
pushl
jg
ret
or
xor
iret
flds
rcrb
pop
push
or
js
xchg
pop
jg
imul
push
push
jae
add
mov
pop
stos
lahf
xor
je
xchg
fwait
jne
xor
pusha
adc
pushl
js
pop
fmul
mov
adc
mov
sbb
inc
pop
outsb
fsubrs
enter
aas
mov
ficomps
repnz
and
arpl
jg
icebp
xchg
push
xchg
int3
sbb
incl
cmp
push
pop
add
pop
push
int3
inc
dec
inc
pop
or
out
dec
push
inc
push
hlt
pop
adc
push
pop
dec
or
push
cwtl
or
outsl
inc
aaa
mov
adc
arpl
sub
and
or
popf
mov
decl
pop
out
ret
jle
jne
daa
stos
dec
xchg
out
insl
xchg
and
or
mov
sbb
add
adc
add
jecxz
call
push
inc
imul
arpl
out
cld
push
pusha
pop
psubsw
and
jg
rcr
dec
jg
or
jp
and
popa
and
ret
mov
fistps
mov
dec
jo
or
inc
mov
cmp
push
pop
push
inc
push
pop
xor
cmp
fildll
mov
jl
cld
jmp
xor
arpl
data16
cmp
push
mov
xchg
xor
sbb
lahf
mov
jp
pop
push
sbb
in
mov
xor
fldcw
clc
push
popa
pusha
inc
jp
or
mov
xchg
fisttps
ret
jp
mov
and
ret
andl
adc
faddp
mov
or
and
js
fdiv
or
icebp
ret
mov
inc
test
xchg
pop
fwait
leave
scas
inc
sbb
lahf
bound
ljmp
addr16
jle
rolw
fs
push
sub
dec
mov
xor
out
orb
mov
and
pop
jb
dec
xlat
cmp
pop
mov
pop
jnp
int3
bound
mov
jg
popa
xchg
ds
outsb
nop
sbb
xlat
stc
sbb
ret
sub
insb
pop
sub
call
mov
xor
jno
jne
iret
jb
sbb
sub
test
mov
jae
pop
xchg
dec
mov
ret
imul
fwait
or
decl
adc
mov
xor
push
addl
lret
mov
out
mov
fistpl
mov
nop
popl
mov
in
lds
or
push
rolb
imul
pop
fcmovnu
mov
loope
jo
pop
xor
je
and
mov
call
clc
push
mov
fldl
sub
sub
jo
lret
dec
xchg
inc
and
decb
pusha
loopne
fwait
imul
push
fimuls
clc
decl
or
or
fnstsw
push
shll
mov
push
out
cli
scas
mov
or
mov
scas
adc
bound
cmp
fbld
dec
cmp
dec
inc
jns
inc
inc
inc
clc
pushl
outsl
ficompl
fildl
or
sbb
jl
or
scas
cli
pop
xchg
test
lahf
mov
xlat
and
and
mov
gs
dec
iret
mul
xchg
jae
jns
xor
push
fwait
incl
popa
repz
jbe
mov
fs
insl
push
sbb
pusha
lret
lretw
or
pop
adc
jbe
push
jb
xor
je
and
mov
jbe
dec
push
addl
hlt
bound
jecxz
sti
sub
decl
or
jo
add
shrl
ljmp
xlat
push
sarb
xor
xlat
popa
in
call
fwait
add
sbb
adc
adc
fstps
cli
jae
jp
cmp
push
jg
cs
jbe
and
inc
push
push
adc
inc
jb
push
and
adcb
sbb
incl
mov
scas
arpl
insl
lcall
inc
add
sti
sub
popa
mov
mov
xor
cmpsl
cmp
xlat
dec
aaa
or
call
and
imul
icebp
jmp
cmp
and
test
je
sbb
or
adc
sar
push
mov
lods
data16
pushl
das
test
and
mov
arpl
shrl
adc
fldcw
jmp
cmp
outsb
push
ljmp
mov
sbb
and
fwait
push
jp
lcall
stos
add
mov
sub
pop
inc
inc
jecxz
rcrb
adc
ljmp
push
sbb
hlt
push
stos
and
push
dec
adc
pop
fistpl
lds
mov
push
mov
dec
lcall
or
dec
add
loop
ret
jno
mov
bound
push
std
push
dec
inc
jg
scas
mov
shll
xor
pop
inc
sbb
lock
mov
or
push
and
sbb
sbb
adc
ljmp
sahf
inc
js
pop
and
sub
and
in
lods
adc
mov
nop
clc
inc
loopne
pop
cmp
mov
jae
sub
popa
das
js
aas
sub
and
clc
gs
dec
sub
out
shll
push
andl
and
inc
ljmp
push
dec
inc
pop
into
mov
cld
adc
bound
cmpsb
jne
sub
jg
mov
ret
mov
dec
sbb
cmpsb
add
xor
lock
fisubrs
inc
mov
dec
pop
dec
inc
inc
dec
loope
dec
dec
and
out
sbb
inc
push
inc
add
xchg
pushf
cld
jg
inc
push
pushl
push
pop
push
dec
dec
push
push
imull
in
stc
das
push
push
inc
inc
dec
dec
inc
dec
inc
sub
decl
fsts
push
testl
inc
pop
pop
pop
stos
std
adc
out
dec
push
inc
dec
mulb
jb
jl
and
adc
xchg
xchg
push
jg
adc
sub
and
adc
jmp
jae
mov
sub
cli
pushl
sub
dec
scas
xor
roll
fsubs
push
dec
stos
push
mov
cwtl
lcall
push
inc
xor
push
test
inc
inc
mulb
jmp
imul
push
inc
jo
das
inc
and
push
and
xorl
leave
push
movsb
push
sub
inc
adc
inc
fdivs
mov
insb
add
ja
gs
dec
add
push
cmp
or
test
pop
inc
xchg
mov
pop
or
or
dec
inc
inc
adc
add
frndint
mov
incl
fidivrs
lcall
ljmp
adc
xor
lea
sub
pop
push
test
xchg
and
lods
decl
testl
bound
jg
shlb
push
dec
jne
test
inc
mov
sub
pop
mov
dec
ljmp
pushl
add
ds
inc
pop
sub
xor
push
push
loop
mov
mov
dec
mov
pushl
insb
and
add
pop
inc
jl
push
push
push
jae
push
push
push
sbb
pop
mov
call
ja
and
push
scas
jo
fsubs
in
incl
mov
leave
jo
or
add
push
outsl
gs
movb
xchg
jmp
inc
add
add
ss
pop
incb
fs
jns
incl
pop
incl
jns
add
cmp
cli
aaa
std
popa
mov
out
add
mov
inc
leave
lock
enter
cld
insb
dec
bound
in
filds
aas
loopne
sarl
add
mov
aaa
sub
incl
xchg
and
jg
add
ret
xchg
xor
xor
xor
out
clc
mov
and
enter
sbb
rolb
xlat
sub
call
outsb
add
test
lods
dec
add
ljmp
dec
mov
push
ud0
jb
push
ljmp
movsb
movsl
add
lret
fldt
lods
ljmp
pushl
inc
add
sbb
insb
sub
add
arpl
and
addl
push
mov
sub
pop
mov
cmp
add
fimuls
js
sub
pushl
sahf
sub
xor
or
xor
mov
pop
mov
jb
inc
mov
dec
push
and
and
add
decl
ret
fsubs
inc
sbb
arpl
jne
jne
adc
jb
insl
or
les
cmp
and
add
add
pop
add
pushl
fdivs
adc
add
xchg
ja
inc
ret
test
loopne
jmp
sbb
ja
stos
pop
sbb
out
mov
dec
fsts
mov
mov
and
push
cs
push
test
xor
shr
scas
call
popa
decl
adc
add
imul
loop
stos
aaa
mov
sbb
es
pushl
pop
sub
xor
inc
push
and
in
push
jnp
aas
inc
enter
cwtl
sbb
xchg
inc
add
pop
outsb
inc
or
xor
pop
aad
xor
pushf
mov
fimull
aad
inc
nop
pusha
add
fadds
hlt
jns
push
push
add
cmc
test
jbe
insb
ja
push
cmp
icebp
out
clc
lea
push
mov
mov
mov
shll
popf
mov
insl
jg
push
shll
push
pop
decl
fbld
add
iret
pop
lret
scas
add
pushl
add
mov
inc
mov
jge
sbb
lock
jg
and
int
add
ss
outsl
fidivl
outsb
gs
sbb
xchg
sbb
xor
push
inc
sub
ss
push
jecxz
cmp
ja
pop
shl
decl
mov
fcomps
jp
cmp
push
sbb
test
outsb
insb
or
xor
fdivrl
rolb
or
and
fs
sahf
ljmp
ljmp
jbe
mov
stc
mov
fmuls
inc
sub
test
dec
inc
xor
fmuls
and
sub
xor
add
ja
cmp
popa
bound
adc
gs
dec
popa
sub
sub
fnsave
imul
xchg
out
or
pushl
inc
inc
or
adc
aad
pop
pop
mov
cmpsb
push
sbb
cmpsb
adc
sbb
cmp
inc
adc
cmc
sbb
es
lsl
xchg
or
mov
add
mov
outsl
and
xor
call
rolb
jnp
popa
movsb
hlt
inc
bound
and
sbb
sbb
jbe
dec
xor
outsb
loopne
or
sub
inc
dec
mov
sub
ret
jo
je
xchg
fdivrp
mov
popa
negb
add
pop
data16
lock
ss
outsl
mov
jb
scas
lock
int3
gs
dec
shlb
jmp
push
sbb
pop
jmp
add
adc
pop
arpl
xchg
dec
pop
sbb
ds
cmpb
pushl
xchg
ja
jae
adc
fldt
fcmovnbe
mov
cmp
lods
je
adc
pop
add
arpl
add
pop
mov
outsb
out
adc
jb
incl
insb
ds
mov
push
fwait
and
out
outsl
add
sbb
xchg
test
mov
dec
ret
jb
popf
pop
sbb
bound
ss
cwtl
arpl
jns
dec
pop
ljmp
dec
mov
data16
jae
out
mov
pop
or
dec
ljmp
aas
aas
xor
inc
pop
push
add
adc
fwait
mov
push
dec
pop
pop
cwtl
lock
call
aaa
or
push
mov
pop
dec
jbe
jne
xchg
int
cmpsl
xchg
mov
sub
lcall
adc
pop
push
push
sbb
pop
and
push
subl
mov
faddl
int3
dec
push
sar
incl
movsl
inc
loopne
xchg
dec
add
ss
push
aad
dec
lock
outsl
pop
clc
outsb
or
shufps
popf
mov
ret
ljmp
dec
cmp
jg
adc
pushf
push
icebp
js
and
adcl
adc
mov
cmc
data16
cmp
sub
mov
lret
jb
mov
insb
arpl
jo
cmc
push
dec
das
cmp
mov
inc
ljmp
inc
das
lock
sbbb
andl
push
dec
bound
fnstenv
or
add
rorb
sub
jmp
push
imul
xchg
push
mov
in
mov
inc
sub
outsl
adc
jae
pop
jnp
add
icebp
outsl
add
pop
movsl
outsl
addr16
outsl
lods
xchg
cs
test
cmpb
inc
jae
mov
and
call
addr16
int
imul
ret
inc
inc
xchg
sub
adc
sub
ds
jo
decl
incl
mov
rcrl
and
je
leave
and
mov
incl
pop
mulb
and
mov
flds
mov
lds
aaa
cmp
mov
fcoms
call
pop
mov
in
mov
jns
aas
icebp
push
mov
inc
sbb
xchg
jb
call
sti
ja
pop
or
lds
sbb
les
aam
rcr
or
dec
mov
decl
sub
cmp
ss
rol
inc
call
pop
lcall
push
inc
fmuls
fisubl
inc
imul
fs
fmuls
lock
pushl
icebp
imul
inc
dec
out
cmp
pop
mov
es
sbb
jg
push
loopne,pn
pop
sub
or
cmp
mov
or
add
add
or
push
add
mov
stos
incb
adc
xchg
arpl
push
jp
in
mov
pop
jno
cs
push
clc
push
push
cmc
xor
adc
cmpsl
adc
push
idiv
ljmp
push
cs
je
xchg
or
cs
out
lods
mov
daa
ds
filds
or
inc
add
es
mov
movsb
cmp
rorb
ja
push
jg
pop
push
adc
out
or
and
subb
std
pop
add
add
or
ss
jmp
nop
mov
inc
jg
sarl
or
sub
adc
in
xor
mov
sbb
jne
sbb
jae
pushf
push
cmc
add
or
ljmp
pop
mov
pop
sbb
sbb
inc
cmp
add
cmp
outsl
push
lods
add
jp
inc
jge
dec
jne
xchg
nop
mov
rcl
push
ret
pop
or
sti
aas
fsubr
add
icebp
add
jmp
idivl
popa
jge
rcll
fs
cmpb
popa
push
js
cmp
mov
sub
jg
rol
xchg
sub
sub
add
ja
mov
loop
out
add
rolb
mov
inc
mov
or
push
add
push
std
fstpt
dec
call
or
fmull
scas
push
xchg
jp
sub
pop
pop
mov
ret
add
loope
aam
scas
enter
mov
push
ud0
aad
xchg
add
and
scas
std
jg
pusha
sub
sub
pop
popa
fsub
pushl
adc
jne
sub
jmp
add
adc
xor
add
sbb
and
sbbb
mov
jnp
add
or
pusha
pusha
adc
pop
mov
aam
data16
sub
nop
jo
mov
sarb
inc
dec
shl
or
pop
adc
or
pop
clc
mov
cwtl
adc
jbe
in
mov
add
cmp
push
cmp
mov
notl
lcall
cmovs
rcrb
add
add
push
fsubrs
push
sbb
or
dec
subl
push
jp
push
jb
add
outsl
inc
mov
outsl
pop
jg
add
xor
cs
cs
ja
aad
pop
jnp
push
popa
push
mov
fnsave
fisubrs
aam
and
test
xor
sub
xor
and
and
or
outsl
or
add
dec
xchg
ja
xor
outsb
aas
and
sub
scas
pcmpeqb
sbb
aad
aaa
outsl
dec
cmp
shl
add
mov
faddp
mov
adc
lcall
mov
in
or
in
inc
hlt
enter
dec
cld
pop
add
dec
fs
outsb
cs
out
jns
jl
mov
dec
dec
outsb
paddq
loop
icebp
dec
retw
cmpsl
inc
invd
dec
inc
push
dec
inc
dec
and
inc
push
sti
or
sub
inc
inc
adc
jae
arpl
adc
mov
pop
js
test
mov
push
dec
dec
dec
dec
adc
aam
mov
push
or
add
dec
mov
or
outsl
xor
insb
jle
inc
push
pusha
orl
sahf
imul
mov
inc
push
insl
imul
jb
add
or
inc
sub
xchg
sbb
daa
add
mov
add
push
popw
add
add
repz
add
mov
and
add
push
xor
add
incb
repnz
aam
cld
nop
pop
aas
push
xchg
out
stc
pop
jmp
rol
add
divl
aas
jg
leave
add
add
or
cmpb
mov
rclb
add
xchg
jg
addr16
sahf
data16
push
out
ficompl
in
xor
out
ja
add
loopne
fs
xor
lock
sbb
pop
push
aas
fcmovnu
cmp
xchg
add
pop
lock
scas
repz
push
pop
std
cmp
push
fldl
insb
jl
out
sub
push
data16
jg
push
mov
inc
dec
mov
or
jo
iret
add
pop
incb
lock
mov
jo
or
push
add
vmwrite
out
jns
aas
es
push
add
js
out
nopl
into
push
add
jne
inc
jno
lcall
mov
daa
add
add
mov
das
aas
dec
pop
outsb
daa
scas
pop
and
iret
pop
std
enter
clc
lock
aas
rcrb
sbb
pop
push
inc
shll
clc
popl
adc
xchg
mov
neg
roll
loopne
pop
sbb
jae
fwait
test
inc
nopl
sbb
outsb
in
aas
pop
jle
addr16
dec
stos
pop
in
rorl
mov
les
adc
aas
nopl
xor
add
fstps
inc
pop
cld
pop
cmp
fsubl
aaa
into
add
mov
lock
dec
subl
or
popf
int
mov
sbb
push
sub
inc
add
insb
iret
imul
inc
addl
pusha
xor
sbb
aad
mov
push
push
sbb
mov
fcomi
insb
ss
lock
push
aaa
fwait
int
sbb
push
sbb
or
test
shl
xchg
shl
xchg
and
push
lods
adc
mov
ret
rolb
add
lods
adc
add
xor
cmp
mov
cmp
xorl
mov
daa
sbb
cmp
scas
mov
aas
daa
and
sahf
inc
push
inc
lahf
and
daa
sahf
jnp
pop
and
ja
cmp
sahf
mov
push
dec
push
mov
jnp
xor
push
daa
cmp
sbb
push
andl
push
fidivrs
dec
daa
dec
addl
daa
mov
out
jne
cmp
push
daa
clc
push
or
sbb
mov
pop
push
cmp
xchg
or
jl
push
repnz
inc
cmp
cmp
rep
loope
xor
and
daa
inc
mov
xor
daa
dec
sub
xchg
daa
jg
repz
xor
mov
pop
mov
dec
sub
clc
xor
jbe
and
pop
push
fisubl
addr16
fsubp
push
int3
push
and
and
fucom
bound
mov
jmp
cmp
jnp
push
fs
xlat
push
lret
mov
and
xor
push
or
outsl
pop
daa
xor
push
xbegin
aad
andl
sub
pop
lods
add
div
xchg
adc
inc
inc
inc
or
mov
or
dec
ljmp
sub
xor
outsb
daa
inc
aad
fidivrs
sub
mov
dec
dec
pop
daa
mov
jb
dec
dec
out
in
out
dec
pop
push
incb
xchg
and
clc
add
daa
mov
xor
mov
push
repz
pushf
es
mov
sbb
mov
ss
arpl
daa
ds
push
ss
inc
shll
xor
arpl
sbb
lods
dec
add
out
cmp
inc
mov
mov
push
dec
out
fs
sahf
sahf
rcrl
jb
loopne
mov
lods
mov
dec
lret
ljmp
fnstenv
jb
daa
dec
add
xlat
ja
inc
jle
xor
in
repz
sbb
jecxz
test
xor
adc
cmp
or
nop
in
inc
xchg
sbb
push
mov
movsb
out
sub
mov
mov
xor
mov
xor
cmpsb
arpl
das
es
insb
jo
mov
daa
push
inc
sub
pshufw
and
andl
jmp
data16
inc
push
in
xor
shlb
mov
aas
lock
stos
inc
aas
call
xorb
pop
lock
cmp
fcoms
movsb
pop
xor
dec
xchg
or
jbe
daa
mov
xor
or
xchg
mov
xchg
lock
adc
cmpsl
fsubrl
or
cmp
aas
subb
cmp
sbb
jo
xchg
sbb
inc
call
adc
ja
xor
daa
jl
addr16
or
clc
or
sbb
xchg
mov
fcoms
daa
dec
xor
insl
out
daa
dec
xor
dec
daa
dec
daa
into
test
fmull
clc
dec
or
addr16
jae
sarb
dec
jl
pop
dec
and
dec
out
aas
into
test
push
aaa
mov
mov
xor
cltd
jnp
in
lock
push
mov
mov
popa
ret
imul
daa
repz
cmp
aaa
cmp
mov
xor
loopne
daa
ss
jb
sahf
pop
xor
sbb
and
push
jbe
popa
daa
cmp
shl
cmp
and
push
and
popa
mov
jb
pop
pushl
inc
sub
sbb
jae
lahf
es
xchg
cmpl
ret
sub
jnp
pushf
aaa
fstpt
repz
xchg
pop
daa
aaa
jl
sub
and
push
xchg
stos
sub
aaa
fs
cmp
pop
jbe
pushf
adc
jecxz
outsb
push
imul
sbb
fsubr
sbb
push
and
out
jmp
xchg
pop
ss
stos
mov
sub
cmp
sbbl
sbb
and
mov
add
sbb
dec
inc
lahf
pop
cltd
push
fsub
pushl
add
jae
xor
add
add
cmp
inc
aaa
add
xor
jae
cmp
aad
jg
jmp
int
inc
pop
aaa
jae
and
stos
sbb
jns
loopne
aaa
shrl
mov
insb
pop
jg
add
adc
xor
and
cs
pop
add
xor
aaa
push
andb
pushl
repz
lret
fs
mov
jo
pushl
jo
jo
pushl
jo
aas
mov
jg
mov
and
outsb
ja
out
cmp
push
aas
xor
jb
mov
add
mov
and
pop
jg
movl
nop
or
jns
ja
xchg
and
add
xor
xchg
push
lods
jp
jo
popl
jo
dec
insb
fidivrl
ja
ja
inc
cmpsb
arpl
fbstp
or
pushf
cmp
or
xorl
xor
jae
add
add
jae
int3
in
push
sbb
mov
test
out
lcall
inc
pop
notb
ret
jae
xchg
fadds
ja
xchg
popa
inc
repz
add
aas
cmp
dec
add
cltd
repnz
aas
cmp
jae
or
mull
mov
ja
jmp
pop
lret
pop
inc
es
or
ja
dec
repnz
loope
gs
testl
aas
lock
add
repz
xor
shlb
push
movsl
cs
jbe
cmp
aaa
jae
pop
sbb
bnd
aaa
jae
xchg
aas
mov
das
add
ja
and
shrb
or
aaa
pop
cmp
jge
jne
pop
aaa
add
ja
push
jae
jae
loope
and
pop
iret
fcomp
popf
xor
add
dec
pop
jae
loope
lret
xor
jo
aaa
mov
inc
jo
pop
pop
jae
mov
add
pop
jae
and
lock
outsl
adcb
movaps
nopl
lock
add
pop
mov
lock
out
xchg
xchg
into
pop
dec
add
shll
jns
xor
or
or
add
add
and
cmp
cmp
dec
and
dec
push
nop
mov
adc
mov
inc
xchg
push
push
add
fldenv
fidivs
push
push
data16
inc
jp
ljmp
fs
dec
cli
insl
add
and
mov
push
jnp
and
nop
mov
imul
daa
out
push
pop
outsl
sub
jbe
insb
ja
sub
push
push
xchg
outsb
sub
fs
xchg
je
sbb
push
arpl
les
cmpsl
je
pop
cs
repz
push
outsl
and
xor
push
div
fidivs
and
pop
lcall
shrl
push
xor
out
dec
jmp
sahf
push
aaa
pop
dec
jbe
addr16
comiss
imul
sub
je
dec
dec
inc
mov
pop
or
das
or
idivb
jbe
inc
insb
ljmp
sbb
mov
and
jne
and
lods
mov
outsl
ss
cli
push
push
push
jmp
xchg
lahf
cmpsb
push
push
dec
es
sbb
pop
repz
lret
nop
popf
mov
jb
xchg
or
xchg
push
stos
dec
fidivrs
in
fidivrs
arpl
xor
sbb
ficoml
pop
or
arpl
mov
popa
xchg
or
xor
lock
mov
dec
lahf
inc
or
ja
push
xor
outsl
sahf
das
gs
sub
inc
adc
das
add
aam
lcall
mov
outsb
int3
mov
inc
or
bound
inc
push
add
xchg
inc
sbb
mul
imul
push
fs
or
mov
rcll
add
aas
fwait
jmp
outsb
addr16
or
in
mov
pop
inc
xor
xor
xchg
and
sbb
push
out
adc
inc
dec
cmp
jle
jle
mov
mov
jb
popf
push
pop
sbb
cmp
fimull
mov
aas
sbb
rol
jmp
ljmp
setnp
int3
rol
ljmp
aaa
imul
cmpsl
outsl
shr
mov
lahf
mov
mov
aaa
out
or
arpl
adcb
lahf
jae
push
loopne
mov
mov
out
add
and
jnp
insl
jbe
fiadds
dec
mov
push
ss
insb
aas
sbb
jecxz
or
adc
push
xchg
jbe
jbe
pop
adc
sub
ret
mov
fwait
mov
fwait
pusha
fwait
fs
cmc
loop
mov
or
xor
adc
inc
inc
call
adc
dec
out
insb
mov
lds
stos
aam
adc
imul
xor
addr16
vpsrlq
je
inc
xor
or
out
push
xor
push
push
emms
pop
dec
outsl
sub
mov
mov
aas
outsl
adc
sbb
notb
mov
or
aas
cmp
jg
fisttpl
push
cs
mov
add
ds
das
jle
ds
shrl
cmpsl
pop
cmp
mov
mov
inc
add
add
jb
je
dec
cmp
dec
out
outsl
or
insl
out
ljmp
and
lock
sbb
push
ss
enter
inc
jecxz
out
arpl
xchg
arpl
xorb
add
mov
bound
out
bound
daa
dec
inc
dec
mov
jae
push
inc
sub
shrb
stos
mov
insl
xchg
je
fmuls
adc
adc
inc
jb
ret
fiaddl
adc
test
out
push
je
lds
jp
push
sub
inc
sbb
mov
and
xor
pop
xchg
mov
push
aas
xchg
or
xor
xchg
adc
xor
and
cmpsl
sub
xor
insb
push
add
jo
adc
bound
iret
ja
mov
bnd
jns
xchg
add
jg
dec
jnp
cmp
xchg
xor
in
push
pop
adcl
mov
out
inc
mov
lcall
add
add
inc
fiaddl
out
popa
push
lock
ds
out
rcrb
and
push
jnp
or
adcb
jmp
outsl
scas
dec
mov
ret
mov
jge
push
outsl
sub
pop
scas
adc
insb
sub
cs
aaa
mov
bound
xchg
lods
jae
xchg
sbb
and
stos
xorl
insl
pop
jae
ljmp
sub
pop
test
pop
pop
adc
es
mov
rol
es
adc
ss
testl
ja
outsl
bound
push
mov
pop
sbb
jnp
pop
pop
cmp
cmp
or
or
mov
mov
pop
sub
bswap
add
inc
or
pop
add
popl
and
add
fstl
pusha
add
stos
push
mov
addr16
sti
xor
jle
loop
push
ret
mov
add
sbb
inc
ret
insl
fnstsw
push
jge
pop
push
stos
inc
add
inc
or
fisubs
test
and
mov
gs
test
dec
ret
pop
push
cmp
pop
repz
std
cmp
add
mov
push
mov
ret
push
mov
sub
fists
imul
stos
rorb
mov
add
mov
dec
loope
mov
roll
mov
ja
mull
and
jg
jae
outsb
in
jbe
mov
dec
out
es
mov
jbe
rolb
sbb
sub
js
pop
testl
fistps
bound
adc
jbe
icebp
mov
push
inc
cli
inc
call
pop
mov
out
mov
sub
push
sti
mov
fbstp
shlb
jbe
pop
inc
aam
shl
lcall
popa
test
bound
stos
jae
push
push
sub
jb
inc
pop
sarl
xor
fisubs
das
xlat
xor
mov
mov
out
dec
dec
xor
addr16
ljmp
loop
stos
or
repnz
push
mov
xlat
imul
je
addw
iret
mov
and
scas
popa
fwait
dec
xor
cmp
addr16
pusha
mov
xchg
repnz
adc
out
pop
lcall
mov
loop
push
and
sbb
adc
sbb
pop
sub
fucomi
pop
adc
push
push
and
popf
js
sbb
outsl
jp
int
lock
cmpsl
sub
bound
ja
fidivl
push
scas
and
fisttps
stos
push
xabort
sbb
add
adcl
daa
jne
das
or
push
std
add
xchg
sub
sbb
mov
test
jg
push
xor
out
adc
sbb
adc
dec
stos
scas
ficompl
mov
sub
ja
and
andl
pop
aaa
ss
sti
jae
aam
mov
sub
lds
mov
add
jo
imul
cmp
imul
adc
out
in
sbb
push
mov
push
mov
push
mov
test
pop
inc
dec
int
mov
push
scas
jae
sub
push
mov
pusha
addl
xor
push
adc
adc
outsb
pop
cmp
scas
jo
div
subl
pop
sbb
outsl
add
dec
adc
jo
pop
pop
addr16
adc
jg
pop
sub
sbb
inc
inc
out
xchg
xchg
shl
push
mov
outsl
or
inc
pop
xor
out
imul
jo
inc
push
and
dec
jg
fildl
aas
arpl
jae
insl
insb
roll
ret
mov
mov
gs
inc
lcall
push
mov
sbb
sti
das
popa
dec
mov
pop
pop
aaa
frstor
mov
lret
daa
adc
jae
jecxz
dec
sbb
add
arpl
out
or
lcall
jb
xor
arpl
scas
cli
and
inc
je
sub
inc
mov
dec
add
ret
insl
mov
sahf
xchg
cwtl
loop
ja
pop
pop
mov
imul
push
outsl
mov
xor
jne
sbb
ret
push
sub
xor
push
pop
mov
mov
enter
or
adc
mov
sub
pop
or
rcll
and
or
inc
inc
fwait
imul
mov
push
test
aam
or
daa
mov
push
cmpsl
popa
push
mov
push
rcl
push
add
test
push
loop
pop
add
call
iret
je
cs
pop
addr16
or
loopne
pop
fldt
mov
stos
inc
pop
add
lods
adc
pop
imul
adc
jae
stos
sbb
incl
mov
mov
pop
test
cmp
popa
add
aaa
mov
fldt
cvttps2pi
arpl
jb
and
inc
jmp
push
arpl
sub
or
arpl
push
and
movsl
pop
jne
daa
daa
lods
mov
inc
mov
push
mov
sbb
ret
out
jp
inc
xchg
popa
pop
fiadds
or
cwtl
push
fwait
mov
sub
mov
add
subl
bound
push
mov
pop
mov
push
add
pusha
push
jmp
mov
pop
cmpsl
dec
insb
sbb
popf
fwait
pop
sbbl
sbb
jg
and
and
fdiv
mov
xchg
or
cmp
jnp
mov
sbb
popa
inc
fwait
das
mov
sbb
pusha
shll
inc
mov
lahf
cmp
lahf
xor
outsl
jae
add
jae
dec
pusha
and
sub
sbb
pop
pop
adc
aas
je
data16
cmp
scas
lahf
inc
outsl
cmp
push
pop
cmp
stos
rolb
or
notl
mov
pop
adc
or
add
sub
mov
cmp
arpl
mov
mov
pop
jg
mov
pop
mov
pop
cmp
inc
lods
scas
dec
ja
inc
movsl
subb
imul
and
out
xor
loop
pop
adc
stos
loope
sub
mov
orl
xor
iret
jbe
and
jo
xor
inc
pop
mov
sub
xorb
repnz
adc
mov
dec
loopne
sti
xor
xchg
mov
adc
fstpl
stos
bt
adc
fwait
loop
push
cmp
das
sbb
popw
and
stos
pop
mov
outsl
add
jmp
push
or
mov
pop
pop
stos
scas
push
mov
push
subb
or
jmp
imulb
jg
adc
xchg
pop
leave
xor
fwait
or
out
mov
mov
adc
or
ja
dec
jnp
iret
popa
andl
movsb
imul
cmp
stos
cwtl
mov
lret
imul
lahf
loope
jecxz
outsb
xchg
arpl
mov
jle
sub
arpl
jmp
pop
inc
xchg
dec
iret
call
jmp
es
aaa
fs
mov
pop
fwait
cmp
xor
jno
scas
addb
adc
lea
mov
xor
cmp
adc
jle
shrl
add
dec
mov
outsb
add
push
sub
sub
pop
in
popf
mov
adc
sub
fildl
sub
enter
insb
and
dec
inc
in
mov
and
mov
pusha
fstl
imul
mov
sub
adc
jnp
pusha
sbb
mov
mov
sub
pop
mov
mov
jb
jae
xor
push
jo
dec
adc
dec
xor
adc
inc
adc
xchg
gs
dec
lcall
add
sub
sbb
xor
stos
push
sub
aam
test
adc
loopne
adc
or
int3
adc
insl
and
imul
imul
movsl
mov
mov
shrb
cmc
xor
mov
mov
dec
sub
xorl
xor
and
push
adc
ss
aas
dec
sarb
xor
gs
push
dec
xorb
adc
mov
adc
cmpsl
icebp
mov
rclb
mov
js
adc
xorb
ror
sbb
xchg
enter
arpl
push
push
lock
js
pusha
and
push
insl
inc
pop
shll
inc
shlb
inc
xchg
loope
dec
mov
push
sbb
jb
jl
or
je
fs
sti
ss
adc
jmp
outsb
flds
sti
adc
imul
in
mov
inc
js
mov
push
push
inc
push
in
push
out
rorb
inc
repnz
cli
andb
and
pushf
and
add
dec
pop
add
test
lock
add
mov
pop
xor
inc
std
pop
or
pop
xchg
or
push
cs
mov
pop
pavgw
bound
or
addr16
pop
xor
ja
xor
lock
sbb
ret
jg
xor
sub
or
mov
or
lods
pop
mov
imul
add
fcmovne
or
icebp
repnz
push
leave
or
add
add
test
add
mov
roll
sbb
push
push
fisttpl
lcall
fwait
push
add
jg
pop
add
rclb
jae
iret
adc
xchg
bound
dec
pop
jne
push
lret
addb
xor
add
movl
or
sbb
sar
inc
loop
pushf
mov
and
flds
push
and
and
and
or
pushf
jg
mov
lock
daa
and
cmc
sbb
loope
and
mov
pop
xchg
nop
fsts
or
and
xor
push
and
pop
push
cs
fstpl
repz
xchg
inc
pop
jnp
add
xor
mov
adc
xor
jge
sub
inc
bnd
xor
and
jl
leave
mov
xor
push
xchg
inc
inc
xor
xor
inc
cmp
sbb
mov
scas
cmp
inc
test
inc
xor
ss
xor
and
gs
xor
in
and
sub
mov
jne
insl
popa
push
adc
rcl
std
stos
xchg
ja
jp
arpl
sub
jl
cwtl
lea
mov
sub
xor
cltd
mov
and
dec
xor
inc
xchg
pusha
fs
clc
or
or
and
mov
inc
pop
adc
and
sbb
and
dec
or
or
addr16
leave
xor
add
outsl
pop
sbb
add
mov
jne
pop
sbb
loope
push
test
test
mov
adc
push
mov
xchg
test
cmp
pop
add
add
sub
sub
les
push
inc
or
pop
xchg
sbb
test
sbb
or
imul
add
xor
push
sbb
cmc
insl
mov
mov
loopne
mov
es
imul
mov
aad
mov
xchg
mov
jbe
mov
push
or
and
add
jne
or
ds
pop
add
xor
and
mov
dec
les
fbld
cmpsb
dec
and
pop
les
add
push
or
or
xchg
pop
addl
or
add
cmp
xor
lea
mov
das
add
or
sbb
clc
insb
xchg
sbb
sbb
sbb
add
fxam
push
xor
pop
std
add
shlb
adc
push
les
mov
shlb
pop
add
pop
pop
or
or
inc
addl
and
cmp
xor
cs
mov
and
inc
jne
rorl
sub
das
xchg
repnz
nop
pop
sbb
cltd
xor
and
adc
xchg
lea
lea
roll
and
push
add
xchg
add
daa
inc
bound
movsl
movsl
push
sbb
xor
add
or
inc
dec
and
add
test
and
xchg
or
add
in
popa
mov
data16
flds
xor
inc
lret
pop
addb
sbb
test
adc
or
sub
rol
xor
movl
loop
in
adc
push
mov
aaa
pop
nop
xchg
insl
daa
scas
movsl
add
push
lds
lds
add
bound
popa
sbb
std
push
movsl
jbe
pop
test
sbb
es
add
mov
push
add
cmp
sub
mov
dec
mov
or
cmp
add
andl
add
or
adc
add
add
and
or
and
and
and
add
pusha
and
mov
mov
xor
jne
or
into
lret
or
xchg
andb
popa
aas
mov
shll
scas
nop
iret
add
xchg
and
and
mov
lods
shll
aaa
sub
pop
mov
fstpl
or
pop
mov
push
lcall
add
sbb
and
sbb
fs
xchg
test
add
adc
popf
push
outsb
insb
les
push
popa
sbb
pop
shrb
sbb
outsb
sbb
sub
pop
les
inc
and
and
and
imul
mov
dec
ret
cs
push
rclb
sbb
push
xchg
or
jo,pn
sbb
cmp
mov
add
sbb
or
sbb
sub
pop
test
lcall
and
mov
out
pop
add
sbb
jne
adc
je
add
loop
imul
and
xchg
inc
pop
shll
dec
fs
outsl
jnp
and
jo
jecxz
in
sbb
push
inc
inc
push
push
sarl
or
popa
frstor
imul
inc
aas
sbb
xor
pop
jmp
adc
dec
in
pusha
fcmovnb
sub
xor
es
repnz
hlt
inc
aam
push
ffree
add
loop
ret
push
dec
outsl
push
pop
pop
nop
in
dec
add
xchg
lret
xchg
jnp
fadd
jbe
pop
xlat
sbb
sbb
sbb
insb
fistpl
pop
pop
mov
mov
lods
or
enter
inc
arpl
orl
insl
pop
push
and
mov
inc
dec
jno
xor
mov
xor
sub
cltd
cmp
pop
je
setbe
sub
jge
adc
stos
add
loopne
inc
addr16
pop
stos
jmp
jg
pop
jo
fists
inc
mov
cmpsb
push
bt
adc
rol
add
push
push
cs
jno
push
test
inc
mov
and
push
and
add
jno
pop
shrl
popf
inc
icebp
adc
imul
mov
xor
push
add
mov
adc
repnz
insl
ds
loope
inc
enter
adcl
push
adc
inc
in
and
popa
xor
mov
sub
mov
movl
lea
xor
jbe
mov
push
mov
add
and
sbb
test
ja
and
pop
add
jp
imul
push
shll
repz
scas
mov
sbb
cmc
pop
sahf
and
and
mov
or
sub
or
orb
arpl
insb
dec
sbb
shll
pop
xchg
sub
pop
fadds
insl
push
mov
movsl
sbb
ds
dec
mov
dec
push
xor
dec
adc
push
lret
inc
dec
inc
movsl
adc
and
mov
insl
adc
cmpl
pusha
sbb
push
test
in
sbb
aad
pop
push
outsb
sbb
xorb
xor
inc
add
inc
jbe
fistl
cmp
sbb
mov
fidivrl
outsb
adc
hlt
pusha
mov
xchg
sbb
xor
aam
fstpt
nop
and
push
fiadds
sub
and
pop
enter
add
cwtl
test
add
iret
or
jnp
sub
rolb
pop
mov
inc
cmp
enter
adc
mov
xlat
push
cmp
sub
sbb
cmpsl
lahf
adc
adc
mov
inc
jbe
xor
and
push
js
test
jecxz
jne
sub
loope
sbbl
mov
or
pop
mov
pusha
fildl
pop
and
insl
lret
or
mov
push
ret
xor
mov
and
jbe
sbb
dec
or
arpl
xchg
stc
daa
and
xchg
push
shrl
push
cmp
mov
jnp
rcll
pop
sub
adc
xchg
jg
roll
orb
dec
outsb
inc
popa
je
dec
mov
xchg
cmp
jnp
inc
int3
insl
adc
dec
push
cmp
push
dec
test
mov
xchg
sub
mov
cmpsb
cmc
dec
push
in
or
and
push
xor
dec
xor
inc
rcll
fisttpl
inc
jno
inc
push
pushf
push
scas
je
add
push
popa
gs
fdivrs
xchg
push
loop
data16
leave
imul
lods
inc
pop
repnz
cld
push
sbbb
sub
add
into
cmp
dec
dec
roll
rolb
fs
sub
popw
sbb
fcoms
rcrb
adc
out
rolb
add
orl
aaa
dec
popa
icebp
sbb
xor
xor
das
sbb
mov
sub
lahf
xchg
cwtl
and
dec
and
hlt
les
icebp
rorb
aaa
cs
stc
xor
inc
dec
je
int3
and
jno
out
adc
out
inc
lcall
in
aaa
jo
jo
pop
jle
or
mov
adc
daa
mov
scas
fwait
dec
imul
xchg
pop
and
adc
add
fldt
arpl
shlb
aaa
add
sub
adc
sbb
mov
add
pop
fisubl
ret
out
enter
and
rcr
test
pusha
push
add
inc
pop
dec
sbb
pop
hlt
inc
in
dec
notl
ja,pn
xchg
mov
mov
insl
xchg
sbb
jp
out
aaa
jo
nop
mov
pop
arpl
out
sbb
inc
adc
sbb
or
arpl
fldl
nop
orb
cmp
mov
arpl
mov
push
outsl
mov
push
pop
ret
imul
xor
das
push
adc
test
pop
mov
ljmp
in
push
sub
and
add
mov
dec
leave
dec
jae
shll
data16
dec
lods
push
push
lods
adc
int
xchg
cmpsl
adc
sbbl
pop
sbb
xchg
jo
sub
mov
in
aas
sub
and
pop
sbb
lcall
and
fs
and
mov
sbbl
xchg
mov
sbb
or
add
in
add
adc
into
fdivs
ja
and
ret
rol
sbb
das
mov
and
data16
jne
inc
adc
inc
fcmovbe
xor
pop
jno
sub
pop
les
outsl
and
and
sbb
insb
and
jne
push
or
nop
mov
inc
shll
adc
pop
push
pop
loope
lret
mov
fimull
dec
pop
test
push
fsubrs
fisubl
movups
daa
or
and
mov
sub
push
and
or
jge
or
inc
adc
mov
std
aaa
cltd
push
in
xchg
mov
lds
adc
adc
mov
aam
adc
add
jnp
inc
jbe
test
jle
push
sub
add
cwtl
sub
adc
rcrl
shll
jb
and
sbb
and
cltd
inc
and
fadd
rcrl
dec
pop
adc
lea
outsl
jecxz
call
dec
test
add
pop
lds
lods
sbb
push
jmp
dec
data16
cmp
out
push
shlb
mov
and
sbb
add
lea
lret
and
push
push
push
sbb
xchg
xor
outsl
adc
and
fsub
movsl
pop
jge
jmp
pusha
aaa
inc
adc
add
enter
jo
add
inc
pop
pop
test
or
lds
and
popa
add
cmp
cmpsb
outsl
push
and
inc
add
adc
subl
mov
add
mov
rolb
repz
bound
mov
jb
insl
lods
cld
push
pop
and
cmp
adc
stos
repz
sahf
mov
andl
xor
cmp
jb
pop
hlt
in
push
out
push
add
cmp
pop
inc
push
xchg
repnz
int
add
pop
and
in
and
or
out
add
mov
lret
addr16
adc
xor
sub
xchg
pop
jo
xor
shrb
xor
xorb
jno
lret
daa
mov
outsb
lds
cmp
das
mov
and
xchg
add
add
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
push
dec
add
dec
add
