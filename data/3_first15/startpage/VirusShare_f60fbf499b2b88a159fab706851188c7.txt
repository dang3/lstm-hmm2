sti
idiv
pushl
rol
push
mov
call
mov
mov
pop
ret
sub
fbstp
xor
mov
lea
pop
fildl
insb
push
clc
mov
test
je
push
push
add
es
cmpl
jne
jge
push
or
push
lahf
mov
add
push
sbb
add
jmp
inc
inc
add
ja
pop
jg
in
cmp
adc
push
push
mov
push
cmpsl
cmp
arpl
push
and
mov
test
jne
mov
cmpb
je
dec
ret
adc
mov
and
test
add
add
or
int
push
je
cmp
and
in
sbb
call
jne
sub
add
insb
mov
xor
sarb
rcl
idivb
adc
add
jmp
push
jecxz
jns
mov
add
aam
iret
xchg
push
lret
les
sbb
jmp
aaa
sub
jge
ljmp
ret
mov
mov
add
push
push
in
imul
jle
lods
stos
add
scas
mov
dec
inc
xchg
hlt
mov
fistpl
minps
mov
cmp
or
ret
xor
push
cld
push
int
pop
jno
jmp
ret
mov
or
sub
popf
mov
push
push
lods
insl
cli
pop
push
inc
call
lock
movl
ret
or
std
jnp
mov
rep
pop
aam
jne
mov
or
jge
sub
push
push
mov
pop
push
push
mov
mov
pop
xchg
add
jnp
imul
jmp
or
clc
cmc
mov
cmp
pop
lds
cmp
ds
pop
pop
adc
sub
je
stc
dec
push
into
or
cmpl
popl
and
adc
divb
pushl
sub
pushf
sub
push
and
cmp
pop
cltd
or
clc
mov
ja
dec
aad
rclb
les
movsb
inc
mov
pop
psllw
xchg
dec
add
xor
sub
js
clc
push
dec
je
pop
movsl
push
cmp
sub
sahf
xchg
pushf
jecxz
jl
sbb
cmp
in
jns
mov
sub
push
sub
jbe
cmp
inc
inc
lret
outsl
mov
add
test
inc
test
cli
in
shlb
icebp
mov
mov
add
adcl
mov
or
xorl
fcmovnu
testb
jo
push
je
jmp
lea
sub
ret
ja
jb
or
std
cld
jecxz
inc
sarl
sub
lea
push
movsb
push
lea
mov
cmp
fucom
movb
dec
pop
add
mov
or
int3
xchg
pop
lea
push
lea
or
mov
rolb
pop
pusha
mov
movb
pop
out
cmp
and
enter
repz
adc
inc
adc
dec
add
xchg
bound
add
in
jge
pop
cmpsb
ljmp
mov
inc
jbe
jb
data16
not
loope
push
adc
or
in
fiadds
sub
add
push
add
add
andb
xchg
inc
enter
and
or
push
loope
push
aad
aad
cmp
test
pop
mov
int3
push
push
mov
lcall
nop
xchg
sub
xchg
scas
movsb
jb
ss
sbb
cwtl
xchg
mov
add
xor
jge
mov
loope
stos
pop
sbb
and
jg
lock
nop
lock
and
lock
inc
xchg
lock
lock
jl
sbb
hlt
enter
hlt
hlt
test
inc
hlt
hlt
inc
enter
hlt
hlt
xor
adc
sbb
movsb
jle
bnd
in
pop
psubb
sub
push
add
test
adcl
xchg
push
sti
sbb
popf
testl
jmp
ret
mov
jmp
stos
mov
push
and
xor
or
inc
or
pushf
add
xor
aad
outsl
cwtl
data16
jmp
add
pop
or
loopne
sub
add
adc
rclb
pslld
test
rcr
andl
push
movsl
rolb
popf
pusha
leave
sub
cld
popf
inc
dec
int
sub
or
jne
stc
push
out
movsb
push
call
jb
loopne
dec
adc
incl
xor
fxch
xor
and
inc
mov
add
arpl
and
rcrb
jns
jle
or
enter
notl
adc
xchg
andl
lods
aaa
push
push
outsl
rorb
sub
inc
add
xchg
sahf
pop
xor
pushf
call
imul
and
test
lcall
sbb
fsubp
hlt
push
mov
sub
out
int
pop
imul
cmp
aas
out
sub
in
ffree
xor
push
add
mov
pop
ret
popa
adc
add
lods
add
pop
push
cmpb
add
push
sbb
sbb
add
aam
movsb
inc
adc
pop
pop
add
jo
push
jnp
mov
ljmp
cmc
pop
repnz
cmp
add
sbb
cmp
xchg
hlt
fnstcw
data16
pop
mov
or
and
insl
cld
fistpll
insl
decb
dec
push
clc
dec
and
clc
lret
sbb
mov
std
aaa
cmp
push
lea
inc
push
push
mov
push
cmp
ud2
cmc
mov
mov
inc
push
push
push
push
dec
jns
std
and
pop
cmp
jl
add
add
sbb
fiaddl
loopne
add
imul
dec
push
adc
sbb
xchg
test
in
dec
jmp
push
shll
xor
mov
cmc
es
in
add
test
push
xor
sbb
movsl
test
push
adc
decl
enter
fistl
push
je
frstor
fldl
faddl
mov
pop
jne
mov
inc
mov
pop
pop
test
jnp
ret
xchg
and
in
mov
and
inc
pop
in
adc
sbb
cmpsb
sub
in
call
lcall
lods
or
push
push
lahf
cld
inc
mov
daa
xor
push
dec
mov
data16
dec
jge
movl
ja
fiaddl
sti
je
repz
hlt
mov
add
push
fcoms
mull
in
jge
cmpsl
ljmp
pop
pop
cmp
xchg
jae
cmpl
rolb
xor
scas
xor
hlt
rcr
push
into
or
sbb
add
popl
add
incl
fistps
jne
jbe
inc
adc
add
in
ds
mov
xchg
aas
xchg
fildl
cmp
add
inc
pop
cwtl
addb
mov
fmull
test
fcoml
or
fsubrs
sub
inc
dec
add
adc
stc
jge
cmp
add
fwait
or
lods
mov
mov
dec
push
sub
dec
adc
mov
xor
ret
es
sub
rsm
and
ds
rclb
loopne
or
xor
sti
pushf
stos
imul
cmp
lea
lret
xor
cwtl
sbb
xor
xor
push
ror
add
sbb
mov
push
dec
lcall
in
mov
push
xchg
out
movsb
or
pushf
fcmovnbe
clc
xchg
lods
xchg
adc
out
les
test
fmull
pushf
fstpl
or
je
pop
ja
pop
popf
insb
and
ftst
cmp
fnstsw
test
je
fchs
fcompl
call
andl
push
test
scas
scas
cmp
jl
push
adc
push
add
sbb
or
repnz
push
add
movsb
or
mov
push
aaa
push
sbb
jmp
push
push
push
push
sbb
pop
pop
pop
dec
pop
sub
movl
sbb
pop
in
mov
sbb
inc
enter
and
cmc
and
adc
mov
jmp
push
dec
push
jb
in
ljmp
arpl
imul
mov
das
sub
or
bndstx
adc
scas
cli
inc
dec
rcrb
or
imul
leave
add
mull
popf
ds
mov
adc
das
fistpll
adc
imul
jo
adc
cmp
dec
push
add
and
jmp
pop
mov
mov
nop
test
or
dec
xor
mov
sub
sub
mov
xor
inc
imul
sub
and
or
add
cltd
popa
adc
add
push
icebp
sahf
and
xor
inc
call
push
lcall
lock
cmp
lds
test
adc
inc
es
outsb
fsubs
imul
add
inc
scas
hlt
adcl
add
sbb
sbb
mov
mov
mov
js
push
push
sub
and
in
inc
jne
mov
ficoms
cmp
add
xchg
insb
arpl
test
pop
cmp
flds
xor
and
lods
scas
push
lea
mov
enter
inc
push
xchg
popa
repz
hlt
ss
inc
sbb
xchg
pop
mov
inc
fiaddl
add
xlat
and
fildl
sub
rolb
inc
xor
pushl
cmp
and
xor
sbb
fsubrs
add
push
and
add
out
add
sub
lock
sbb
or
hlt
mov
push
or
and
cwtl
sbbb
inc
add
loopne
call
pusha
push
hlt
add
add
cmp
or
test
je
xor
cmpl
or
pop
leave
inc
fildl
sub
fstpt
faddl
or
mov
test
out
xor
fldenv
cmpsb
add
lret
pusha
push
aam
andl
add
xchg
xor
sub
and
adc
xchg
rcrb
xchg
insb
cmp
bound
inc
rolb
inc
and
and
dec
jns
inc
inc
and
cmp
fsubrl
nop
data16
and
rorb
sub
movsb
ror
pop
enter
lea
les
pop
dec
dec
jo
ja
in
dec
shll
rol
or
adc
mov
ljmp
jae
xchg
sub
movsl
mov
jo
pop
sub
add
lea
das
cmp
fbstp
or
mov
cmc
adc
in
adc
xor
xor
sub
mov
xchg
push
jg
push
inc
or
sbb
arpl
loopne
xor
add
xchg
pop
aam
inc
ljmp
out
xor
test
pop
test
xor
xor
pop
or
push
out
iret
sbb
adc
movsb
mov
loopne
je
jb
cmpsb
loopne
add
dec
fcoml
pop
mov
push
fldt
adcb
insl
insb
lea
inc
xchg
stos
lock
shll
je
add
add
in
ss
pop
fsubr
jmp
xor
mov
add
dec
add
test
sbb
mov
adc
add
mov
or
sbb
notl
ret
add
sbbl
push
imul
dec
xor
jne
add
loop
mov
loopne
add
cmp
dec
lock
sbb
inc
aas
fsubl
mov
adc
xorl
push
mov
aam
and
inc
sbb
cwtl
or
into
aad
push
adc
inc
out
or
sbbl
adc
xor
inc
fstps
add
xor
mov
cltd
adc
or
and
push
call
mov
mov
mov
mov
push
subl
cmp
addl
cmpb
dec
into
test
and
mov
add
or
mov
sbb
sahf
or
out
scas
push
movsb
cmpl
out
xchg
mov
inc
pop
and
adc
in
inc
mov
aas
xchg
cmpsl
lock
xor
call
pop
pop
add
insb
pushf
dec
or
aaa
push
pop
sub
addr16
push
jo
xchg
add
xor
add
clc
iret
dec
and
xorb
xor
aad
jg
icebp
push
mov
cmp
mov
in
push
add
or
jl
pusha
ret
adc
ret
ret
push
push
dec
sub
mov
sub
ret
xorl
fisttpl
xchg
add
popf
scas
mov
sbb
call
pop
ds
dec
ja
add
mov
in
aas
push
mov
mov
dec
sub
lcall
mov
cmp
sub
or
cmp
pop
test
push
lds
or
test
and
rcll
push
add
pop
mov
sarl
or
or
push
incl
lcall
lock
or
add
in
xchg
push
dec
cmp
rol
xor
movsl
adc
shll
adc
insl
sbbb
jne
jmp
or
test
adc
fsubs
and
loope
int3
call
out
add
stos
sbbb
cmp
das
mov
xchg
pop
inc
cmp
cmpsb
or
xchg
dec
dec
das
mov
enter
cmp
rorl
orb
inc
int3
nop
call
jb
adc
hlt
sbb
decl
in
xor
xor
mov
mov
sbb
or
inc
cmpsl
mov
pop
jmp
mov
lea
lds
xchg
arpl
popa
push
in
arpl
jle
and
adc
sbb
cmpsl
cmp
inc
mov
cmp
and
push
imul
xlat
push
int3
test
and
inc
and
shll
add
enter
fbstp
pop
adcl
inc
test
les
inc
movsb
lcall
and
xchg
xchg
xchg
cmp
subl
inc
add
push
and
add
rolb
leave
mov
cmc
pop
cwtl
popa
sub
mov
dec
ja
jge
mov
shlb
xchg
sbb
aaa
mov
sbb
jb
mov
fstps
push
inc
loopne
les
xor
push
cmpl
cmpb
subl
pop
add
sub
or
xchg
shlb
or
inc
xor
test
pop
inc
xor
xor
push
pusha
push
mulb
test
cmp
loope
xor
push
dec
pop
or
sub
jnp
fsubl
or
sbb
adc
sbb
sti
faddl
sarl
mov
add
sub
adc
ret
cltd
pop
or
pusha
ret
insb
xor
or
push
loope
insl
xchg
cmp
leave
pop
xchg
mov
cmpb
mov
lods
cmp
ss
outsb
test
dec
and
sbb
cmc
loope
pop
mov
mov
push
or
shrl
iret
xor
icebp
add
sbb
mov
xchg
add
inc
sbb
mov
inc
or
stc
pop
or
scas
push
push
out
adc
or
pusha
mov
pusha
mov
and
loopne
fdivs
push
and
adc
lock
mov
and
rcrb
mov
add
sbb
jne
das
or
sub
mov
stos
loopne
add
and
inc
insl
int3
mov
push
popf
add
sub
add
roll
mov
out
stos
subb
inc
or
pushf
popa
aaa
sahf
and
std
leave
orl
and
add
call
xorb
and
pusha
sbbb
and
and
and
lcall
and
and
les
cld
xor
rcr
mov
outsl
pop
push
push
cmp
jg
and
add
xor
and
and
shlb
cmp
das
pop
fdivl
xor
leave
mov
shlb
repnz
aam
adc
xor
adc
lods
lods
lods
movsb
xor
inc
dec
movsb
mov
push
jo
mov
mov
and
xchg
or
mov
aas
pop
pop
pop
inc
cmp
movsb
orb
addr16
pop
and
mov
das
sbb
push
int3
mov
add
stc
movsl
sbb
push
enter
in
les
push
pop
loopne
inc
les
out
sub
inc
lea
movsb
dec
sbb
add
das
xchg
jl
lock
outsb
sbbb
push
cmpsl
adc
cmp
test
leave
das
pop
dec
jne
xchg
add
adc
and
dec
cmpsb
in
and
cmp
dec
cmpsb
fs
pop
mov
lds
cmp
decl
push
fisttpl
fsubrl
xchg
icebp
or
mov
mov
or
dec
jecxz
adc
add
add
call
rcr
cmp
nop
lds
lea
sub
enter
mov
sbb
nop
lock
decl
lea
clc
push
sbb
mov
sbb
fs
cmpsb
and
cmpsl
mov
push
test
xor
adc
and
xor
cwtl
add
inc
and
adc
enter
mov
dec
dec
leave
adc
push
add
test
nop
or
xchg
jl
pop
and
add
insb
inc
enter
push
inc
lahf
and
push
sub
cmp
mov
loopne
mov
fwait
cmpsb
hlt
insb
dec
sub
or
rorb
push
add
push
leave
shlb
daa
popa
sub
jmp
push
add
xchg
bound
sub
mov
or
sbb
dec
sbb
lahf
data16
outsl
icebp
lock
imul
adc
xchg
mov
cmp
mulb
arpl
imul
stos
mov
or
and
and
sbb
lods
je
push
ret
jnp
ljmp
inc
ret
cmp
or
pop
inc
or
pop
adc
or
cmpsl
sub
mov
push
movsb
adc
sbb
orl
cltd
fildl
fstpl
fisttpll
fsubl
pop
bound
and
in
addr16
inc
pushf
shlb
das
xchg
leave
and
cld
popa
daa
clc
pop
lock
mov
add
fisttpl
sub
add
jo
pop
xchg
dec
sbb
sti
out
iret
add
cwtl
jmp
adc
je
push
add
jnp
pop
adc
adc
adc
sbb
fnstcw
jmp
mov
in
xchg
call
bound
adc
adc
sbb
out
fiaddl
ja
pop
push
fsubrs
mov
ja
in
pop
test
xor
jg
or
xor
push
xor
add
jg
jbe
nop
pushl
jg
mov
xchg
shlb
xchg
cmp
and
lock
insl
and
data16
add
push
xor
or
cli
sub
neg
push
rcll
and
ds
nop
stos
es
xlat
aaa
fwait
sub
adc
push
shl
push
andb
rcrb
mov
push
mov
aas
mov
add
in
jg
pop
and
hlt
mov
movsb
sbb
ret
and
or
insl
pop
mov
pusha
shlb
push
push
cmp
add
insl
shlb
push
pop
xchg
adc
lock
inc
and
push
pop
sbb
pop
stos
or
or
add
and
add
inc
cmpsb
clc
or
loope
int
dec
dec
cmp
in
mov
and
sbb
daa
jno
add
sbb
push
test
xor
ljmp
mov
dec
cld
cmp
fs
cmpb
and
nop
xchg
pop
clc
push
and
lock
dec
cmpsb
dec
jl
or
inc
pushw
cmc
mov
cmp
cmp
in
add
push
adc
mov
enter
hlt
adc
adc
xchg
loopne
cld
cmp
data16
je
pop
arpl
out
cmp
inc
push
jae
fcomi
or
mov
movsl
bound
or
mov
pop
sbb
mov
and
inc
xor
imul
in
cmp
sbb
and
cmp
sbb
mov
or
dec
test
sub
stc
push
loope
jmp
xor
out
sbb
mov
lcall
popa
or
jp
xchg
lahf
or
movsl
pop
xchg
adc
or
insb
sub
xor
rolb
sarl
add
lods
jbe
imul
sbb
and
iret
mov
cmpsl
sbbl
das
or
sbb
cltd
sbb
nop
loopne
ss
in
dec
jne
or
test
clc
add
mov
test
mov
add
aas
dec
cmpsb
cwtl
sub
in
push
call
dec
sub
jbe
xor
dec
cmp
leave
adc
aam
inc
jmp
mov
aad
mov
lock
adc
mov
clc
sahf
and
faddl
in
jmp
cmp
and
aaa
mov
push
dec
mov
imul
hlt
daa
int
inc
jnp
call
daa
loopne
enter
std
loopne
in
and
add
call
rorl
rclb
adc
adc
jns
imul
ljmp
shlb
js
int
sbb
in
call
and
in
jmp
lock
jbe
sbb
stos
mov
insb
xchg
push
xchg
and
insb
adc
push
jb
outsb
cmp
xor
jno
dec
sub
enter
push
in
sub
aas
or
jno
leave
mov
rorl
and
dec
mov
mov
sub
and
leave
jno
sbb
xchg
sbb
imul
sbb
call
lock
insl
bound
mov
insl
inc
push
dec
mov
repnz
xor
xchg
dec
movsb
mov
es
leave
push
xor
lea
mov
add
icebp
test
dec
mov
push
orl
clc
pop
inc
leave
aaa
popl
fcompl
lods
lods
je
xor
je
dec
and
or
dec
jne
test
test
sbb
jae
mov
sub
shrl
mov
xor
xchg
adc
and
adc
mov
and
fs
hlt
rcrb
adc
test
and
add
inc
pop
mov
or
int
test
sub
rcll
hlt
or
xorl
add
inc
dec
pop
cmp
push
cmc
adc
js
test
mov
xor
inc
lock
fildl
in
rcll
loope
or
stos
test
push
pop
and
lea
cmpsb
pop
adc
sbb
push
ret
xchg
pop
adc
jmp
add
loopne
jns
pop
inc
fscale
leave
cld
sub
sbb
push
repnz
inc
and
sub
mov
push
lods
fs
insl
xchg
and
andb
or
and
pusha
out
movsl
and
mov
jp
loope
lds
adc
mov
popf
dec
or
cli
jp
pop
ret
push
popf
je
stc
add
adc
push
leave
sub
cmp
sub
data16
inc
mov
stos
addb
inc
pop
sbb
movsb
inc
fs
mov
add
gs
add
incl
in
fsubr
test
lea
pop
or
adc
and
lds
gs
dec
mov
ret
inc
push
dec
push
mov
inc
add
and
sbb
lcall
pop
call
sub
aad
nop
or
mov
loopne
cmpsb
push
adc
add
adc
push
add
sub
push
xchg
jno
sub
xor
fmuls
aam
xchg
pop
and
fisttps
push
mov
inc
scas
cli
fcomip
je
shrb
popf
sti
xchg
add
sub
or
outsb
mov
popa
xor
pop
fldl
pushf
cmc
mov
ret
test
xorb
xlat
nop
or
adc
or
stos
adc
ss
cmp
mov
into
mov
mov
mov
or
sub
or
sbb
add
mov
xor
cmp
leave
dec
inc
and
out
or
rolb
pop
push
ret
mov
xchg
rep
cmpl
mov
mov
leave
movsl
hlt
mov
test
movsb
hlt
sub
mov
mov
or
lahf
push
and
or
cs
aas
lods
test
int
mov
xchg
mov
fildl
jle
repz
push
or
test
into
dec
push
inc
xor
inc
sbb
xchg
addb
cld
inc
mov
sbb
mov
push
adcl
aad
lea
pop
push
mov
imul
push
aam
adc
sub
xor
jbe
push
add
pop
inc
jae
lock
cmp
gs
cmpb
icebp
mov
lds
iret
dec
sahf
or
push
jbe
test
call
jge
in
cmp
fsubrl
pop
mov
fdivl
lds
rorb
mov
jge
push
sbb
dec
lock
fcoms
sbb
loope
xchg
stos
push
or
push
pop
push
add
push
rcrl
aad
pop
push
push
lea
int3
nop
dec
repz
clc
pop
test
add
js
lret
repz
mov
hlt
mov
add
hlt
push
push
mov
lock
imul
mov
or
xchg
mov
lock
adc
movnti
movsb
dec
sbb
and
loop
pop
adc
sbb
or
add
rolb
push
or
mov
popa
xchg
add
xor
or
sbbl
and
es
leave
or
add
mov
int3
andl
add
mov
push
shrl
xchg
in
gs
lahf
and
jbe
fsubr
fcom
add
xor
aam
lea
xor
adc
dec
add
in
je
orl
ret
inc
or
sbbb
push
or
cmp
popf
push
orl
movl
mov
rolb
ljmp
shrb
xchg
out
add
sti
fmuls
leave
mov
jbe
lea
xor
lahf
cmp
fldl
iret
outsl
leave
push
lods
dec
and
nop
je
dec
inc
add
lea
sbbb
cwtl
cmp
mov
mov
adc
jne
mul
add
pop
in
popl
jns
popl
or
ret
inc
xorl
incl
push
mov
test
cmp
sbb
dec
inc
mov
xchg
adc
dec
cwtl
xchg
enter
sub
aam
loope
add
cltd
xchg
mov
adc
push
and
add
cmp
adc
lret
adc
add
add
push
outsl
dec
push
jnp
jg
lds
cmp
add
inc
cmpsb
xor
xor
jl
adc
add
xchg
push
sbb
add
pop
adc
push
bound
add
sbb
sbb
repz
dec
dec
and
adc
mov
and
jbe
add
mov
shrb
pop
sbb
add
popa
fstpl
pop
add
shrl
inc
cmp
inc
pop
and
lret
lock
ret
pusha
arpl
fwait
dec
in
push
add
sub
xor
jle
and
mov
adc
rcll
add
push
add
pop
fsubl
int3
mov
test
push
loope
rcll
enter
push
xchg
stos
add
sub
dec
push
stos
add
imul
loopne
or
dec
push
pop
pop
rolb
fcoms
aam
add
jns
imul
add
shlb
dec
loopne
sub
sbbb
push
xchg
int3
enter
cmp
fsubrl
mov
in
nop
and
sub
in
or
sbb
xchg
popa
mov
dec
adc
pusha
rolb
shll
in
inc
push
and
mov
adc
or
xor
addr16
add
or
mov
adc
lea
inc
out
inc
sub
call
pusha
mov
dec
mov
xchg
popf
fwait
xor
adc
xor
fmuls
and
xchg
test
add
mov
sahf
movsl
lea
sbb
arpl
inc
inc
pop
mov
xchg
insl
cmp
mov
xor
dec
scas
pop
or
cmpsb
xor
insb
push
sbb
adc
dec
jmp
add
xor
clc
push
mov
mov
std
lcall
aas
ret
mov
push
pop
and
inc
inc
popa
popf
xchg
jmp
stc
push
shrb
pop
test
popf
dec
lret
add
out
outsl
mov
sbb
ss
add
fdivs
lods
cltd
pop
mov
push
rclb
in
hlt
push
addb
jae
mov
mov
sub
nop
xchg
adc
popa
sub
cmp
fwait
stos
es
movsl
xchg
imul
dec
adc
xchg
or
xchg
fwait
es
add
push
add
add
xor
push
sbb
movsl
inc
fdivl
popf
aad
add
push
push
pop
leave
or
sbb
jmp
stos
cwtl
rorb
add
mov
xchg
ss
lock
fcoml
in
fsubrl
aam
pop
sbb
dec
fdivr
aam
fwait
adc
adc
xlat
push
jo
jns
xor
jae
lahf
sahf
or
push
jecxz
inc
ret
push
pop
mov
xor
inc
sub
test
and
or
dec
orl
adc
inc
lea
out
add
jo
mov
pop
faddl
movsl
cmp
shl
subb
stc
cmp
jmp
or
sbb
cmpsb
jo
xchg
hlt
loopne
sub
cmp
cwtl
fmuls
in
and
mov
in
push
or
in
push
loopne
add
clc
or
lahf
fmull
add
inc
sahf
rcrl
pop
scas
sar
add
roll
loop
sti
xchg
adc
mov
pop
ret
cmpsb
rolb
lock
jl
aam
imul
add
xchg
clc
popa
mov
in
or
inc
test
mov
or
jmp
xor
ret
aam
aam
aam
mov
movsb
add
ljmp
lds
push
sbbl
cmp
ss
xchg
sub
adc
in
popa
mov
inc
movsl
nop
push
adc
fcmovbe
sub
adc
sbb
xchg
sahf
ja
mov
movsl
addr16
or
adc
sbb
sub
cmp
adc
stos
add
lods
dec
pop
mov
push
clc
addb
addr16
fldcw
xor
jge
mov
adc
adc
js
scas
dec
mov
inc
pusha
push
pop
lea
andb
pop
lds
mov
inc
addr16
push
and
mov
and
ret
or
test
into
inc
shrl
stos
dec
mov
pop
dec
cs
ret
adc
test
xor
jg
push
add
xchg
cmpsl
or
or
aaa
push
push
pop
xor
aaa
mov
pop
mov
cmp
cltd
sbb
adc
and
mov
movsl
mov
movsl
add
inc
cmp
enter
xor
push
add
push
jecxz
inc
scas
push
iret
mov
cmp
mov
and
add
mov
mov
xchg
movsb
cmp
stc
xor
xor
dec
popa
add
lods
push
popf
or
sahf
test
mov
mov
cs
cld
popa
arpl
hlt
mov
nop
add
sub
sub
pop
dec
adc
jecxz
or
test
repnz
jge
mov
mov
aam
jg
orb
inc
xor
in
add
aad
or
sbb
pop
test
shll
addb
adc
sub
stos
lcall
aaa
or
add
dec
sub
xchg
cmp
mov
mov
popa
mov
add
sti
sbb
add
in
adc
inc
add
inc
inc
fnsave
sub
cltd
xchg
jae
arpl
lret
sbb
dec
loopne
in
lds
iret
in
shll
xchg
out
sub
sub
test
aam
gs
repz
xorb
lea
push
lcall
mov
jge
sub
fsubs
mov
dec
fimull
cmp
pop
lods
or
pop
inc
call
adc
daa
mov
add
sub
sub
in
ret
or
adc
roll
les
pop
xchg
jo
push
mov
jne
test
push
add
add
dec
adc
dec
repz
lods
dec
loop
inc
das
les
dec
push
lock
mov
add
aas
add
adc
sbb
xchg
fsubr
adc
or
inc
push
fnsave
cltd
cltd
xchg
retw
inc
adc
jmp
add
xor
pop
shlb
rorb
in
shrl
xlat
in
xor
sbb
in
mov
scas
dec
or
outsl
or
bound
add
pop
ret
cld
mov
mov
shlb
push
dec
mov
sub
fwait
adc
push
xchg
mov
sbbl
nop
cmp
mov
loopne
sbbb
cmp
popa
adcl
test
or
data16
in
leave
dec
sub
fidivrs
hlt
mov
inc
enter
pushf
inc
test
and
nop
jecxz
and
dec
scas
add
inc
notb
or
add
orb
sbb
sbbb
test
and
mov
icebp
test
and
or
test
adc
jmp
jl
loope
sub
daa
roll
push
or
jo
test
mov
pop
sub
add
jno
mov
xor
loopne
orb
fidivs
mov
mov
adc
sub
rcr
shrb
in
add
and
inc
sbb
add
lahf
sub
xchg
push
add
sbb
add
push
dec
popa
ror
rol
loopne
xchg
sbb
adcl
or
xor
loope
sbb
hlt
or
push
adc
es
inc
add
and
mov
xchg
rolb
push
jnp
in
stc
scas
mov
shlb
inc
and
imul
push
cld
mov
push
loopne
sub
shrb
mov
or
fldenv
mov
push
mov
lods
pop
jnp
xor
mov
rcr
add
xlat
mov
iret
callw
mov
rol
or
mov
jae
dec
mov
xor
push
mov
and
mov
push
mov
and
inc
dec
test
sub
inc
push
call
or
nop
add
mov
push
fcomip
or
mov
lcall
or
fs
dec
icebp
mov
add
int3
sahf
mov
xchg
enter
xchg
xchg
dec
enter
mov
xlat
sbb
repnz
enter
mov
push
or
lret
inc
push
and
leave
adc
es
xchg
xor
adc
xchg
shll
or
pop
int3
fildl
and
popf
jo
movsl
fsubl
repnz
lea
les
push
inc
mov
test
mov
inc
sarl
int
push
lods
mov
enter
mov
xchg
push
jb
enter
cmp
push
out
in
xchg
icebp
mov
or
dec
loope
add
xor
xchg
mov
mov
inc
dec
mov
cltd
mov
shl
xchg
sbb
dec
mov
adc
cltd
ret
fildl
jb
pop
rcr
xor
mov
sbbb
fmuls
xor
stos
mov
int3
aaa
int3
and
xchg
adc
push
push
shrb
cmpsl
mov
add
add
int
or
add
jno
pop
xchg
test
adc
std
adc
add
add
lock
mov
sub
and
cltd
push
dec
push
pop
add
cwtl
test
xchg
adc
add
lahf
test
movsb
testl
in
scas
sub
inc
adc
add
cld
xor
push
and
xor
dec
jle
fistpll
mov
in
int
repz
dec
mov
insl
lock
inc
test
mov
mov
pop
ret
insl
push
push
inc
outsl
test
add
loope
inc
test
sub
shrl
lods
sub
push
inc
stos
dec
jp
test
inc
sbb
cld
xor
mov
push
add
and
call
inc
rorb
rorl
xchg
rcrb
inc
mov
imul
js
xor
cmp
pop
in
lods
xor
sub
shl
hlt
fsub
sbb
call
int3
mov
adc
int
xchg
in
jns
stos
inc
orb
mov
jbe
mov
mov
rorl
jle
orb
dec
das
int3
push
jmp
add
pop
rorl
push
sub
mov
les
clc
std
cmp
jl
imul
sbb
pop
sbb
pop
arpl
mov
out
jmp
and
and
dec
cmp
sbb
cld
fildl
sbb
or
stos
fists
outsl
insb
fadd
or
sbb
lds
shlb
add
push
imull
dec
enter
jle
loopne
movsb
xlat
sub
inc
push
and
dec
outsl
or
xchg
icebp
add
cs
and
enter
enter
sub
leave
adc
pop
cmp
and
enter
lret
adc
or
mov
nop
aas
test
or
cs
lods
or
leave
inc
or
call
ret
sub
inc
mov
test
and
jns
lds
push
mov
and
or
sub
and
pop
cs
clc
mov
mov
sub
push
scas
sahf
mov
movsb
cmpsl
sub
dec
test
movsl
addb
call
movsl
mov
mov
nop
mov
xchg
dec
sub
and
sbb
xor
sub
and
adc
pushf
xor
inc
jae
xchg
popa
popa
or
xor
push
sar
shlb
inc
fcom
fstl
pop
lret
dec
sub
push
das
lock
adc
mov
inc
push
and
data16
and
fsubs
and
dec
les
rolb
ret
outsl
in
outsl
add
cmp
faddl
xor
nop
or
std
lcall
in
xchg
or
loopne
push
sbbb
aam
mov
mov
in
rorb
rcll
int3
or
mov
int3
xchg
mov
push
pop
shll
aas
mov
add
sub
dec
mov
xor
loopne
and
push
fsubs
and
or
adc
dec
pop
and
ror
in
leave
mov
cltd
pop
mov
push
and
in
inc
js
and
aam
add
adc
orb
inc
xchg
or
test
lcall
push
or
sub
in
xchg
add
mov
add
inc
test
xor
mov
shrb
iret
les
or
and
push
add
mov
movsl
adc
data16
enter
add
dec
sahf
jecxz
mov
push
inc
push
divl
addb
movsb
imul
dec
mov
mov
mov
aas
inc
fnsave
movb
or
xor
xchg
addl
stos
pop
inc
pop
loopne
pop
aam
loopne
sbb
aas
push
xlat
fsubl
mov
jl
bound
sbb
or
test
adc
cltd
test
xchg
and
clc
cld
mov
enter
push
push
ss
jo
pop
adcb
mov
mov
addb
rcrb
in
std
fcmovu
loope
push
out
or
add
ljmp
or
jge
loope
xor
loopne
aam
dec
sti
std
aam
pusha
shlb
add
lahf
xor
mov
inc
in
hlt
int3
shrb
cltd
lcall
or
test
cmpb
leave
sti
lea
cmp
je
bound
orb
xor
rorl
dec
adc
out
sub
push
xor
and
or
cmp
jl
lahf
sub
lock
pop
sbb
cmp
sub
aam
loopne
cmp
add
xchg
or
add
dec
sub
dec
pop
test
es
pop
ret
shll
subb
les
xor
pop
and
inc
arpl
pop
and
repz
push
or
push
push
and
mov
push
ret
and
icebp
out
inc
or
lret
inc
cmc
sub
add
inc
pop
xchg
test
andl
fdivp
jbe
add
jo
xor
roll
mov
push
leave
or
sbb
add
and
popa
and
movsb
xchg
roll
mov
mov
mov
add
sub
shrb
ds
mov
push
or
add
push
loopne
push
xor
orl
pop
andl
add
xchg
mov
shl
dec
nop
test
inc
movsb
xchg
mov
xchg
or
add
sub
add
daa
add
adc
fsub
adc
leave
fcomp
testb
sbb
adc
and
sbb
sar
add
pop
mov
pop
mov
adc
inc
movsb
mov
out
in
xchg
inc
scas
loopne
mov
insb
iret
leave
inc
sub
push
xor
add
clc
pop
aam
stos
jno
xor
inc
xchg
roll
cmovs
nop
orl
pop
mov
mov
and
mov
xchg
sbb
push
jo
xchg
mov
pusha
push
jg
or
mov
add
or
jne
jb
shlb
add
decl
pusha
lea
pop
push
xor
sbb
cltd
repz
adc
dec
iret
sbb
add
in
insb
fidivl
xor
sub
xor
or
mov
and
fmull
mov
addb
inc
push
mov
int
sub
dec
xchg
insl
in
pusha
mov
mov
inc
adc
mov
psrlq
les
and
or
pop
or
inc
bound
mull
enter
and
loope
push
adc
sbb
mov
faddl
rorl
lods
pop
lods
dec
inc
stos
cmpb
add
xchg
and
jo
stc
mov
xor
mov
les
fsub
dec
sub
test
sub
push
mov
aaa
aas
daa
push
xor
adc
test
sbb
xchg
lods
lods
xor
adc
test
mov
jbe
stos
sub
fwait
cwtl
cwtl
fmull
nop
outsl
nop
xor
rcll
test
sub
test
jnp
and
js
mov
push
rcrb
sub
rcrb
xlat
std
xor
ret
inc
call
lea
das
in
push
xor
sub
xchg
fst
fldl
or
jecxz
and
push
xor
sub
xor
mov
sub
mov
nop
sub
sub
adcl
mov
bound
sub
and
arpl
shll
adc
shrb
adc
inc
leave
inc
inc
adc
add
sub
aam
mov
xchg
inc
or
hlt
add
or
add
orl
scas
jne
xor
pop
frstor
dec
inc
xor
fimull
les
xchg
or
and
xchg
mov
adc
pop
dec
xchg
push
adc
pop
add
sahf
scas
dec
pop
sbb
ret
inc
xlat
or
jmp
inc
mov
adc
mov
push
add
xchg
sub
inc
addr16
mov
sub
repnz
clc
add
add
pop
test
jns
jg
mov
or
add
mov
les
push
es
gs
inc
roll
and
adc
test
push
cltd
or
lock
and
push
mov
add
jno
push
push
stc
pop
xchg
pop
adc
jnp
fsubs
popa
orl
addb
icebp
fcoml
fisttpl
ds
shlb
xchg
jae
push
dec
psraw
push
dec
loope
aad
add
rorb
jne
pop
xor
lock
aas
adc
sub
data16
rcrl
adc
or
add
and
and
inc
and
xor
inc
xchg
xor
imul
std
and
nop
sbb
enter
lock
imul
je
mov
add
nop
pop
adc
sub
push
push
negl
push
add
bound
inc
jno
inc
sbb
add
jno
add
push
or
pop
inc
and
xchg
mov
cmp
and
jo
xor
push
inc
bound
or
adc
imulb
mov
je
cmp
mov
pushf
jns
sbbl
add
lea
inc
add
jne
arpl
sub
jae
loop
addr16
dec
sub
pop
mov
xor
add
mov
or
lcall
nop
rdmsr
xlat
and
add
sbb
jp
shll
add
nop
call
add
int3
hlt
int3
add
hlt
xor
loopne
sbb
push
inc
cmp
push
adc
inc
sbb
mov
mov
or
lock
ror
and
and
add
or
push
add
xor
pop
rcrb
sarb
jns
mov
aam
rolb
dec
into
sub
call
add
fxsave
inc
add
sbbl
in
mov
xchg
imul
ret
icebp
adc
mov
repz
mov
sbb
sbb
mov
out
sbb
imul
pop
cld
mov
dec
xor
add
adc
push
leave
push
out
push
pop
int
inc
dec
dec
lret
sub
adc
pop
and
add
or
lds
test
sub
jo
push
fstps
in
cmpsl
mov
or
lcall
les
mov
imul
das
sbb
rorb
push
adc
dec
loope
xor
sub
push
push
or
pop
shlb
cld
insb
xor
xor
test
xchg
push
in
or
mov
leave
add
cmp
sub
shrl
mov
je
hlt
aaa
sbb
dec
cmp
xchg
mov
test
mov
dec
cmp
mov
jae
adc
lea
add
inc
inc
or
inc
mov
lea
add
jns
roll
xchg
call
cltd
fsub
add
and
aad
movl
imul
enter
adc
sti
les
pop
jno
mov
ljmp
or
fsubl
aaa
sub
sbb
mov
mov
or
aaa
test
movsb
mov
leave
add
pop
in
push
ljmp
dec
push
mov
aad
and
pop
mov
lock
shrb
outsl
shl
dec
sub
lods
insl
lret
nop
inc
sarb
fists
inc
arpl
push
mov
movsl
jb
push
adc
xchg
sub
add
xchg
adc
scas
mov
or
stos
ret
or
fs
jge
sub
jecxz
sub
jge
push
sub
or
in
xor
rorl
cmp
ficoms
adc
ss
adc
add
and
push
push
jo
and
mov
push
pop
pop
cs
lret
dec
cmp
pusha
pop
push
out
mov
das
jo
sbb
cmp
inc
add
adc
cmp
ja
sbb
aas
es
movl
scas
ret
push
mov
or
adc
scas
mov
pop
not
mov
mov
lock
add
add
or
mov
mov
ret
arpl
imul
je
adc
je
call
lds
jl
movl
sub
popa
add
or
clc
or
je
xchg
lret
cmp
sahf
xchg
test
adc
push
cmc
nop
and
mov
add
pop
xchg
fs
ret
jo
in
adc
out
mov
jbe
fstps
aaa
add
or
pop
cmpl
add
ret
and
out
inc
sbbl
sbb
inc
jne
pop
leave
cmp
pop
push
je
inc
xor
adc
cli
or
mov
enter
loopne
mov
mov
icebp
cmpsl
fnsave
and
or
paddd
add
pop
xor
xor
fstl
inc
mov
pop
add
xchg
mov
push
mov
pop
std
sub
cmp
jno
insb
leave
or
xchg
sbb
mov
mov
pop
out
jne
fwait
mov
les
fidivs
in
and
cmp
outsl
out
addb
adcb
pop
cmp
pop
dec
jnp
je
lods
add
or
mov
das
adc
pop
loope
in
mov
lahf
or
push
inc
fcmovnu
pop
and
sbb
add
in
sub
push
mov
out
movsl
inc
xor
in
or
dec
js
push
lea
fldl
fcompl
push
lds
or
inc
hlt
mov
mov
add
push
les
std
mov
ja
push
xchg
fstpl
ficoml
dec
fstp
jne
fstp
sbb
in
mov
sbb
dec
mov
mov
sbb
sbb
add
inc
sub
push
jns
roll
or
fstpl
push
adc
movsb
sbb
ret
nopl
addr16
mov
jle
sub
mov
push
je
loop
movb
push
dec
je
dec
jne
xor
jmp
or
add
or
outsb
add
lcall
addr16
xor
ja
or
into
das
cmp
and
fldt
add
jp
xchg
push
mov
nop
mov
jle
pop
lock
and
jo
inc
and
sarb
popl
sub
xor
jl
or
add
jmp
sbb
pop
les
fdivrp
mov
mov
jne
data16
inc
add
lods
fldl
dec
jmp
push
add
cwtl
jmp
jle
jae
sbb
adc
neg
sbb
addl
pop
sub
pusha
push
lea
jb
add
pop
clc
xchg
call
inc
cmpsl
fldl
scas
push
or
shld
push
cs
ret
nop
shr
in
push
and
out
ret
loopne
out
ss
or
push
call
push
inc
and
push
inc
pusha
mov
push
sbb
mov
mov
lods
mov
push
and
pop
cmpsb
mov
push
add
xchg
mov
pop
sahf
or
mov
sbb
xchg
movl
xor
leave
push
inc
xchg
push
and
pop
hlt
sub
push
ja
in
mov
or
aad
adc
dec
mov
sbb
jne
mov
addl
or
cmpl
das
shlb
pop
cmpsl
incl
aaa
sbbb
xchg
sub
in
int3
jns
pop
aas
aam
lret
aam
push
pop
add
jp
or
loopne
out
lea
push
dec
or
shlb
sub
cld
jecxz
addb
mov
push
and
mov
fsubl
scas
push
pop
push
pop
mov
jle
mov
movl
mov
scas
ret
or
mov
pop
jl
int
rcr
push
xor
cmp
cmp
sub
mov
lahf
inc
or
xor
jmp
add
inc
sti
mov
ret
rorb
push
fmuls
test
sbb
leave
cmc
fcos
fistpll
rorl
cmp
mov
jl
mov
cmp
jle
sbb
cmp
pop
ret
sub
push
cmp
cmp
jg
clc
fwait
sub
inc
cltd
idiv
lret
add
inc
pop
scas
pop
sbb
aas
push
movsb
rolb
mov
jg
mov
add
ret
and
pushf
loope
mov
int3
sarl
enter
test
and
outsl
dec
xor
lea
pop
add
jg
jo
idivb
iret
pop
mov
mov
cmp
cmp
xor
fiadds
mov
adc
mov
je
insl
test
add
inc
scas
push
sbb
jge
loopne
andb
and
jle
sub
es
shll
mov
ret
jg
cmpb
cmp
adc
mov
mov
mov
adc
fbstp
add
imul
in
inc
push
xchg
pop
xchg
jae
dec
mov
inc
cli
cmp
sti
testb
sbb
pop
movsbl
mov
jle
insb
adc
adc
cld
sub
mov
imul
es
inc
out
lret
sbbl
or
adc
xor
fld
mov
sub
add
mov
xor
popa
jl
sbb
fisttpl
inc
ret
dec
and
push
and
jle
ja
sbb
sbb
sub
jl
ss
jbe
sub
sbb
lock
mov
push
jg,pn
or
mov
jl
cmp
cs
stc
mov
imulb
sbb
pusha
test
jmp
mov
ret
rcrb
nop
into
pop
cmp
jl
cmpl
ds
jne
push
push
push
push
incb
jl
ja
mov
fiaddl
push
clc
add
push
jmp
mov
push
cmc
push
xchg
into
repz
dec
inc
das
paddsb
pop
clc
call
mov
test
sub
add
cmp
rcl
jge
pop
cld
sbb
enter
sbb
inc
sbb
scas
push
test
sub
inc
jle
sbb
add
std
xchg
push
push
mov
xor
sub
xor
cld
jb
pop
jg
cmp
clc
add
xchg
ds
dec
jl
adc
push
and
fnstcw
pop
in
xchg
sub
xlat
mov
cmp
jb
or
pop
sub
mov
or
mov
adc
mov
inc
je
inc
push
inc
adc
push
fimull
fsubr
jo
je
sahf
inc
pop
shll
shrl
xor
push
mov
sub
adc
pop
push
and
or
sbb
or
in
jae
loopne
imul
xor
jae
jg
sbb
scas
loope
inc
in
and
inc
push
pop
push
test
and
mov
sbb
inc
aas
add
clc
or
inc
addb
insl
fdivrl
ja
jecxz
cmp
ret
cmp
xchg
inc
test
rolb
nop
out
and
or
hlt
cmp
or
xor
mov
std
pop
in
mov
adc
imul
roll
out
pop
mov
daa
bound
push
add
into
call
mov
jnp
frstor
fldenv
out
daa
js
inc
outsl
imul
and
dec
xchg
pushw
roll
addb
stos
in
nop
fwait
outsb
rcrl
or
movzbl
arpl
jo
cmpl
mov
sbb
inc
test
push
cmp
push
adc
xor
lods
aaa
shrl
ret
xchg
je
fstl
lret
mov
stos
in
push
cmp
jnp
push
sbb
jnp
leave
fs
and
jne
cmp
xor
popa
and
adc
push
test
dec
dec
loopne
or
dec
cmova
fiaddl
mov
lock
pop
lret
ret
or
pop
push
inc
jmp
add
mov
and
mov
cs
sub
mov
and
jg
fisubl
cmp
je
cmp
jne
cmp
jne
test
icebp
jbe
push
adc
pcmpeqw
testb
stc
fnsave
cmp
sti
push
pushf
iret
push
mov
test
and
ret
adc
js
or
or
add
rclb
inc
mov
fcmovu
popf
fisubl
xor
ds
and
cmp
ss
aas
cmp
xor
jle
push
push
sti
pop
mov
mov
pop
ss
jmp
addb
inc
cmp
nop
aas
js
adc
pushf
xor
enter
push
mov
pop
mov
adc
push
movsb
push
ljmp
pop
pop
xchg
mov
cmp
mov
ficomps
mulb
lock
rcr
lea
sub
push
je
mov
mov
adc
mov
lods
adc
pushf
or
and
push
mull
shr
movsl
dec
mov
or
mov
mov
add
hlt
sub
xor
jle
jle
push
sbb
ss
test
adc
int3
jmp
icebp
lods
mov
or
ss
ret
fidivs
xor
dec
es
pop
and
std
shll
cmp
jmp
push
js
jecxz
xorl
decl
xchg
ret
sbb
jle
cwtl
xchg
sti
in
std
mov
and
cmp
jmp
push
xchg
jne
xchg
out
in
jmp
pop
jmp
decb
rcll
fiaddl
xchg
push
push
shrb
loope
inc
iret
add
sub
cmp
repnz
mov
xor
adc
sbb
cwtl
inc
aad
xchg
or
int
shlb
repz
repz
mov
sub
xor
push
sub
cmp
loop
fisubrs
and
mov
sbb
sbb
sub
dec
jmp
push
push
jo
jnp
sub
int3
jo
cmc
xor
inc
outsl
aas
add
mov
addr16
jmp
push
or
nop
jns
xor
gs
sub
lcall
ret
lahf
movsl
mov
dec
adc
aam
inc
mov
cmp
sar
in
xchg
or
mov
adc
bound
and
icebp
mov
lds
ret
jbe
mov
insb
jle
jnp
push
std
xchg
jne
push
mov
loop
mov
jl
xchg
cmc
sbb
lret
sub
push
push
cmp
and
push
pop
addr16
push
aad
push
mov
fstpl
es
dec
testb
imul
dec
mov
xor
adc
leave
std
int
insb
jge
cmpb
je
icebp
pop
mov
cmp
sub
out
add
pop
mov
cli
out
lea
add
cld
mov
adc
jmp
fstps
jne
call
jle
lea
shll
cmc
cmp
movsb
xchg
sbb
icebp
pop
xor
sbb
ret
push
jp
push
jl
jmp
call
lock
cwtl
and
call
jae
js
cmp
sbb
cmpb
sub
scas
inc
cld
mov
push
pop
xlat
lods
cmp
jne
cmp
popa
cmp
shll
shr
jno
sub
int
xchg
cmp
rcrb
jecxz
mov
lret
hlt
inc
stos
push
pop
xor
push
movsb
cmp
jge
add
negl
into
mov
mov
mov
pop
add
sbb
stos
mov
add
add
xchg
jle
test
or
pusha
js
rolb
pop
sub
add
push
or
push
mov
xor
jmp
push
add
sarb
dec
add
push
lcall
push
dec
push
push
sub
or
push
sbb
add
movl
incb
aaa
loopne
in
and
mov
adc
std
les
in
jl
mov
je
dec
aas
push
or
pop
inc
mov
add
add
fucomi
pusha
mov
cmc
sub
push
jg
pop
cs
mov
cmp
lods
mov
xor
cmp
jo
push
sbb
lret
mov
cmpb
and
pusha
test
sub
mov
inc
cli
sbb
aaa
cmpl
adc
mov
call
rorb
lcall
push
sbb
mov
mov
push
mull
lea
and
stc
es
mov
pushf
inc
add
lret
jecxz
inc
roll
push
cmp
mov
sbb
and
adc
jg
inc
lock
in
cmp
cmp
leave
jge
cs
lods
jecxz
rcll
add
xchg
dec
xchg
jg
cmp
mov
jno
inc
cld
cmp
mov
rcrb
lock
xchg
decb
sbb
xlat
lret
xor
shlb
push
add
push
mov
popa
mov
dec
sub
mov
push
stos
mov
jnp
jae,pn
repz
xor
dec
cmp
mov
fdivp
adc
adc
pop
dec
jns
sub
add
xor
jle
cmp
jo
rol
jmp
sbb
in
jns
mov
pop
fs
push
insb
insb
jle
inc
add
int3
mov
dec
dec
jp
out
jl
push
sub
mov
clc
lods
sbb
push
fistpll
insl
out
xchg
mov
fwait
xor
jl
clc
mov
jmp
outsb
movsb
out
ljmp
cmpsb
orb
std
jge
cmp
adc
aam
ja
push
mov
stos
jb
sub
xor
lret
inc
sub
pop
push
push
pop
mov
pusha
mov
int3
and
or
xor
mov
aad
push
cs
movsl
dec
adc
mov
push
clc
mov
outsb
out
inc
pop
rclb
mov
push
shlb
sbb
cli
std
mov
cmp
clc
mov
fsubrl
sbb
mov
rorl
push
push
push
cmpsb
fisttpl
das
push
pusha
dec
jmp
jle
and
orl
pushf
xor
dec
and
roll
nop
push
ljmp
xor
lahf
jle
lea
push
mov
shr
shlb
adcb
push
loop
or
movl
rorl
pop
imul
aad
add
in
je
mov
sbb
xchg
xor
sub
in
pop
inc
cmp
shlb
mov
and
mov
push
push
pusha
add
push
jnp
mov
dec
enter
or
repnz
inc
imul
outsl
in
and
in
jae
mov
pop
sahf
fs
mov
jl
lock
cmpl
test
hlt
adc
lds
mov
and
data16
test
mov
inc
je
xor
mov
push
rorl
subps
push
sarb
push
jbe
pop
or
mov
add
add
jne
ss
pop
jmp
push
add
jge
pop
mov
xor
sub
scas
out
mov
push
jne
push
push
sbb
scas
sub
add
aas
xor
add
push
pusha
lock
shl
add
jge
dec
mov
ret
pop
or
push
jbe
loopne
scas
mov
mov
inc
adc
loope
movsl
inc
inc
loopne
pop
push
push
sub
fisubrs
cmp
ljmp
sbb
ja
fwait
cmc
ret
sbb
add
out
aas
add
gs
jle
jge
shlb
adc
push
cmpb
sbbl
repnz
sbb
adc
and
int3
adc
es
add
inc
sbb
subb
repz
lods
jp
decl
mov
sarb
fstpt
test
leave
je
xor
fsubr
std
sbb
hlt
pop
sbb
or
xchg
inc
adc
or
add
les
pop
pop
cmp
mov
cmpsl
pop
mov
push
jg
jno
jl
sbb
push
sbb
push
insl
xor
mov
push
adc
adc
test
pop
jmp
cltd
mov
enter
cmpsl
in
jno
es
add
sbb
rorl
mov
push
pushf
add
es
mov
orl
and
xor
cmpl
fucom
lods
subl
mov
fcoms
dec
jl
sbb
inc
xchg
inc
push
xchg
push
ret
sub
mov
stos
inc
aad
add
push
mov
sbb
mov
test
push
ja
mov
xchg
sbb
mov
ds
xor
ficoms
pop
adc
xor
dec
sbb
loopne
adc
sbb
dec
push
push
movsb
adc
mov
mov
aas
lods
jl
sbb
xchg
or
lcall
jle
mov
dec
cmp
sahf
std
push
lcall
rcrb
inc
je
xor
cmp
je
cmpsl
fisttpll
ss
sbb
pop
or
aaa
les
mov
dec
test
sub
aam
je
adc
jo
and
addl
sub
jae
imul
and
pop
mov
cmpsl
dec
dec
cmp
insb
sbb
inc
nop
sub
cmpsb
shll
and
stc
pusha
pop
dec
dec
movl
push
loopne
ret
je
mov
mov
in
push
add
test
xor
test
in
lods
add
popa
push
psllw
stc
mov
enter
push
inc
push
mov
lret
mov
cmp
add
xchg
or
cmp
or
or
repz
push
cmp
add
je
dec
ret
jnp
lods
push
inc
and
inc
or
push
sahf
pop
sahf
cmp
adc
mov
jno
out
xor
jl
fstpl
in
add
insl
inc
add
lock
push
xor
mov
dec
je
dec
jne
insb
je
mov
out
push
add
mov
and
je
dec
jne
mov
mov
out
testb
clc
add
adc
adc
xlat
adc
insb
cmp
insl
cmpsl
mov
lea
or
incb
movzbl
js
or
add
popf
or
clc
push
xchg
fisubs
inc
stos
scas
loop
push
cmpb
and
loop
sar
cmp
testb
test
movsb
push
mov
test
sub
mov
rcll
or
gs
pop
push
repz
xchg
or
jae
sbb
dec
mov
mov
push
jmp
stos
push
push
push
sub
push
push
das
int
fiadds
cmp
mov
dec
cmp
jmp
cmp
push
cli
call
push
out
mov
jmp
cmp
fildl
dec
and
mov
in
lret
ret
xchg
xor
and
lds
or
adc
lods
nop
or
and
pop
imulb
and
aas
mov
pop
dec
fsubrl
mov
xchg
and
mov
lds
shrb
push
sbb
popa
movsl
insb
xchg
jnp
popa
movsb
rcrl
jmp
decl
test
cmp
push
and
les
iret
mov
add
mov
insl
in
mov
adc
shl
lds
cmp
pop
adc
cmp
out
imul
mov
add
adc
pop
xor
push
sub
ja
pop
and
pop
scas
je
sbb
jecxz
mov
pushf
jle
push
pop
stos
in
xchg
sub
sub
push
jmp
push
sbb
xor
jmp
into
inc
push
cmpsb
pop
lcall
cmp
cmp
sub
fdivl
mov
test
ljmp
xor
and
or
add
push
push
or
jo
mov
jbe
jne
out
push
call
sahf
ss
es
add
add
dec
add
push
add
nop
xchg
push
add
gs
dec
and
ret
lahf
inc
dec
and
inc
pop
mov
ja
repnz
mov
cmp
inc
pop
add
add
add
arpl
push
xchg
jnp
jbe
test
jo
cltd
popa
lret
jle
add
je
ret
outsl
mov
mov
pop
or
sub
xor
sbb
push
push
push
push
js
rcr
pusha
outsb
or
push
push
and
popl
incl
out
inc
es
inc
call
in
fiaddl
jmp
mov
sbb
enter
fstpt
movsl
xor
push
jo
iret
dec
adc
insb
mov
xchg
mov
xchg
jbe,pt
lea
mov
adcl
or
stos
lea
test
xchg
push
mov
xchg
lea
insb
xor
fs
push
ficoml
sbb
push
mov
push
popa
cld
sub
mov
dec
sub
mov
pop
lods
add
push
loopne
inc
test
out
ret
pop
push
sbbl
xorl
das
mov
add
xchg
or
ret
popa
stc
push
sahf
fmull
gs
jns
add
lock
push
sub
mov
pop
pop
add
add
jecxz
sub
jb
out
push
inc
mov
push
int3
imul
ficomps
push
add
movl
jle
ljmp
or
xchg
mov
bound
add
mov
adc
hlt
dec
js
fisubrl
dec
inc
dec
pop
dec
sub
lock
inc
pushl
dec
lahf
xor
cmpsl
ljmp
shrb
inc
movsb
ret
pop
mov
sub
popf
jno
loop
stc
aas
fimuls
in
pop
cmp
or
test
pop
lahf
push
clc
mov
xor
insb
push
mov
and
and
mov
cmpb
enter
lods
nop
daa
adc
rcr
sbb
shrl
movl
or
mov
int
push
mov
lahf
xor
mov
xchg
push
push
dec
int3
jne
fdivrl
mov
mov
cmp
into
add
push
cmp
cmp
mov
push
push
jge
das
lock
add
pop
add
adc
scas
add
mov
mov
or
clc
addr16
jb
out
adc
lock
cmp
sbb
mov
popa
lahf
cmp
inc
pushf
cmp
testb
jne
or
inc
lcall
add
push
and
and
test
mov
jne
inc
pop
jnp
push
push
ds
movsl
imul
dec
add
push
fs
jb
add
and
pop
mov
cmp
jl
cmpl
xchg
rorb
sub
out
mov
imul
imul
dec
orl
insl
aam
jb
cmpsb
adc
jmp
and
cmp
insb
mov
sarb
insb
add
pop
loope
js
outsl
testl
or
ret
insl
aam
xchg
mov
pop
mov
mov
add
sbb
cmpl
inc
inc
test
or
je
mov
pop
mov
jb
lea
loop,pn
lret
sub
cltd
hlt
clc
add
push
loope
sar
xor
cmp
sbb
push
das
nop
pop
out
mov
btr
jo
push
or
shr
fiadds
cli
add
sbb
or
mov
cs
cmp
cmp
jb
bound
mov
sbbl
jb
andw
push
add
jg
icebp
xor
push
mov
mov
or
mov
call
fs
inc
cmpsb
imul
or
xor
or
push
jno
lods
dec
jno
add
rorl
sub
enter
not
test
ds
subb
pop
sub
cmp
jbe
fidivrl
enter
sbb
xorl
mov
inc
dec
jle
push
push
jbe
mov
daa
iret
test
jge
dec
sub
or
inc
hlt
outsb
mov
sbb
test
mov
jle
push
popa
cmp
inc
faddl
sub
repnz
adc
mov
xor
add
xchg
fsts
sbb
jmp
dec
loopne
mov
sbb
mov
and
add
pop
das
jecxz
ret
jne
add
or
xor
dec
addr16
dec
jns
push
aaa
or
cmp
cmp
sar
je
lret
daa
leave
pushf
xor
push
xor
shll
xor
or
dec
and
addr16
sbb
cmp
cmovo
mov
dec
in
lret
push
jecxz
pop
mov
mov
and
xor
and
scas
jo
lods
stc
sahf
in
shl
cltd
xor
mov
scas
push
mov
je
aas
pushf
mov
aam
dec
adc
neg
mov
sbb
js
cwtl
xchg
lock
aam
adc
push
orl
lods
push
pop
pop
pushl
jg
call
mov
bswap
lret
testb
or
push
pushl
pop
push
mov
mov
scas
jb
adc
fsubs
pop
pop
jmp
push
add
cwtl
xor
fidivs
icebp
fwait
clc
sub
push
incl
ret
flds
mov
xor
push
or
mov
pop
lea
jge
sub
lea
stos
sub
push
sub
push
mov
das
pop
call
iret
pop
insl
adc
cmp
or
lock
jle
lea
jg
ret
add
movb
push
je
sarb
sbb
push
mov
dec
aam
adc
mov
outsb
sbb
stos
aas
pushf
test
xlat
jge
rcpps
sbb
iret
inc
pop
das
xor
sub
cmp
sub
sub
cmp
mov
mov
std
push
inc
pop
fisttpl
dec
xchg
push
push
sbb
std
pop
and
repnz
push
dec
cs
push
xor
inc
testb
ds
jge
inc
adc
push
add
push
push
sbb
xchg
inc
pop
mov
jne
and
pop
call
pop
inc
push
iret
sub
fchs
xor
pop
dec
cld
call
adc
mov
jne
add
push
jg
mov
mov
mov
mov
sbb
dec
push
pop
je
adc
insl
insb
jge
fidivrl
add
cmp
jge
sbb
test
pop
fiaddl
je
jmp
fsts
adc
mov
push
sub
test
or
and
mulb
sub
lahf
aaa
sbb
pop
mov
or
bnd
sbb
jne
mov
out
adc
add
adc
mov
or
sahf
sbbl
je
inc
dec
mov
ret
fbld
or
clc
mov
das
jb
or
ja
enter
add
mov
xchg
mov
or
repnz
pop
test
enter
inc
ficompl
or
jne
dec
push
js
js
push
out
push
inc
inc
or
jecxz
sbb
loopne
jo
push
sub
loopne
fdivrl
repnz
in
mov
pop
adc
cmp
xor
insb
sub
push
add
push
arpl
addl
xor
clc
pop
leave
ss
mov
push
call
add
adc
adcb
mov
mov
xchg
ja
and
mov
add
jns
mov
cmp
iret
cmpb
je
test
jmp
sarb
sarl
mov
jo
dec
pusha
aas
insb
push
inc
sbb
in
scas
push
dec
lods
or
popf
mov
mov
pop
test
inc
jecxz
outsl
xchg
cmp
daa
cli
push
clc
adc
imull
inc
cmpsb
loope
inc
xchg
xor
imul
loope
xor
sahf
subb
push
push
and
inc
pusha
sbb
movsb
insb
ja
pop
jnp
adc
xor
push
xor
push
dec
push
xorl
divb
adc
idivb
movsb
jmp
jne
adc
sbb
ficoms
negl
sub
lods
xchg
and
push
add
xchg
sti
fidivs
mov
xor
sahf
imull
push
daa
cwtl
cs
xor
pop
sarl
jb
out
dec
add
and
mov
inc
test
add
ret
mov
cmp
in
push
inc
or
inc
and
and
mov
mov
jle
dec
push
push
in
cmp
stos
sbb
add
add
lcall
push
popa
jg
push
loopne
mov
fwait
add
adc
adc
adc
inc
xlat
in
push
addb
pop
adc
adc
dec
cmp
or
adc
push
and
fucom
dec
jg
push
mov
push
sbb
jbe
xor
xor
mov
inc
or
mov
rcrl
repnz
sbb
jg
cmc
or
and
add
test
adc
cmc
jle
push
jne
xor
cltd
push
dec
sti
outsb
or
pop
dec
mov
push
push
aas
or
inc
adc
test
xorb
push
dec
xorb
dec
pop
sbb
mov
je
inc
jmp
cs
ret
inc
pop
insl
add
jg
add
push
push
cmp
inc
and
pop
bound
stos
cmp
add
mov
inc
jb
nop
sbb
sbb
mov
push
and
fs
fcompl
push
dec
pop
jg
add
push
sbb
push
dec
or
sub
js
stos
sbb
fiadds
movsl
dec
in
loopne
rorb
test
insb
lcall
orl
out
adc
add
lds
mov
mov
enter
add
js
mov
push
dec
cmp
addl
das
shr
mov
cltd
mov
cmp
push
test
mov
shrb
jle
mov
mov
sub
add
mov
bsf
lahf
push
loop
loope
ljmp
inc
mov
and
sub
mov
test
inc
jl
push
jle
fsubs
inc
fiaddl
cmp
ds
jl
dec
push
loope
out
mov
inc
out
xor
les
fcomps
shrb
mov
call
mov
mov
sbb
and
and
shrl
and
adc
idivl
mov
xchg
mov
adc
test
mov
and
jnp
and
xor
push
inc
push
add
inc
sub
sti
inc
cmpsb
pop
arpl
and
fisttpl
ja
jo,pn
add
pop
icebp
or
jge
inc
jno
cltd
pop
dec
jo
fs
pop
or
pop
rolb
imul
lock
and
aas
pushl
dec
cmp
push
loopne
jecxz
push
jecxz
mov
mov
mov
cmp
jne
and
adc
or
test
adc
dec
mov
shr
add
pop
jne
pusha
aaa
dec
aad
outsl
cli
sub
lds
dec
filds
mov
add
sbb
pop
push
pop
call
jmp
adc
xchg
imul
mov
push
mov
pop
push
push
out
sbb
cmp
jmp
push
iret
push
or
js
inc
dec
pusha
dec
inc
push
dec
cmpsl
repnz
loopne
sbb
or
xor
dec
push
dec
aad
xor
cmp
neg
ds
sarl
xchg
dec
push
in
mov
ljmp
lds
inc
shl
cmp
sbb
test
sahf
lock
subl
xor
call
loope
jp
inc
in
push
movb
pusha
pusha
sbb
inc
xlat
mov
lods
je
push
xchg
sbb
jne
sti
push
inc
jl
or
adc
insb
imul
js
pop
xor
sbb
icebp
pop
cmpb
push
push
lret
lods
push
test
loopne
pop
push
sbb
adc
les
lds
xchg
or
shlb
push
loopne
xor
xor
lock
mov
inc
hlt
lahf
nop
pop
push
or
lds
or
ret
outsb
loopne
add
pop
adc
mov
push
mov
add
ss
popa
cld
imul
pushf
xchg
mov
pop
and
mov
sbb
push
imul
xorl
mov
inc
cmpsb
mov
xchg
sbb
push
ret
shlb
into
pop
fwait
or
push
cld
mov
xor
cmp
sete
push
stc
jge
mov
dec
mov
and
mov
sub
and
fs
jne
fildll
jle
ret
iret
push
in
fmull
jl
adc
jecxz
mov
or
mov
into
movl
sbb
mov
cltd
ret
cmp
insl
add
mov
mov
or
cmp
jne
add
xor
lds
rolb
int
int3
push
inc
mov
jmp
push
xor
xchg
dec
cwtl
sub
lea
rolb
mov
shrb
call
shlb
xlat
shlb
push
rclb
xor
cmpsb
dec
push
push
pop
orb
inc
dec
mov
or
jge
mov
xchg
pushf
adc
mov
push
add
jl
test
and
inc
js
inc
mov
aaa
mov
ret
pop
jl
sbb
jle
add
or
fidivrs
je
jne
sub
je
jmp
cli
fnstenv
jb
jbe
sub
sbbl
sub
pop
cmp
lea
inc
or
shll
ss
das
push
or
hlt
xchg
sub
loopne
xchg
pop
cmp
fidivrl
and
jae
insl
and
jle
mov
aam
push
jg
sbb
insl
xlat
cmp
jmp
push
test
or
dec
mov
ret
decb
lcall
pop
cmp
jo
sub
push
and
xor
mov
mov
mov
mov
or
jg
sbb
push
pushf
lea
or
inc
mov
lcall
es
fcomps
jle
loope
iret
jg
ret
and
int3
dec
insb
pop
dec
pop
adc
cmp
push
dec
push
pop
xor
pop
jecxz
popf
inc
fimull
fmulp
subl
movsl
xor
push
and
sub
sbb
mov
inc
cmp
pop
jmp
pop
cmpl
mov
sbb
push
rclb
xor
das
je
push
enter
ret
dec
movsb
insb
add
stc
cmp
jo
orb
addw
sahf
cmpsl
test
dec
sbb
loop
push
sub
js
fneni(8087
mov
test
cmp
mov
stos
lods
jnp
adc
inc
scas
mov
sub
mov
out
push
incb
push
push
out
sub
mov
pop
adc
xor
mov
mov
clc
idivb
push
inc
dec
mov
mov
and
inc
dec
inc
std
pop
js
dec
inc
jg
dec
rolb
add
pop
pop
loopne
shlb
iret
stc
pusha
inc
dec
adc
aas
push
daa
sbb
cmp
shr
negb
xor
pop
push
aas
adc
dec
add
clc
pop
push
lds
fadds
in
adc
jne
pop
pop
or
cmp
sub
adc
or
roll
adc
push
push
in
sahf
cmp
scas
rorb
inc
data16
clc
andl
and
mov
and
sbbl
cmp
fcoms
mov
insw
sbb
push
xchg
clc
push
push
test
mov
enter
aaa
cmp
sub
fldcw
sub
push
adc
cmp
mov
adc
imul
sbb
cmp
je
incl
push
push
xor
xchg
clc
stos
je
sub
lahf
js
call
and
cmp
call
mov
pop
cmp
xchg
sbb
jl
xor
xchg
adc
mov
and
bound
inc
popa
mov
add
leave
dec
js
sahf
pop
mov
jo
dec
mov
mov
mov
cmpl
divb
inc
xchg
adc
adc
mov
push
shlb
mov
enter
movsb
add
adc
dec
adcb
mov
pop
shlb
cmpb
jp
fstps
cwtl
repnz
or
jns
or
add
pop
dec
cmp
pop
loopne
adc
test
mov
adc
and
sub
mov
sub
hlt
mov
aaa
pop
repnz
cmp
pop
pop
ret
cmp
mov
dec
movsl
inc
dec
fists
push
jne
lods
push
pop
mov
stos
enter
stos
jo
divl
adc
mov
or
dec
comiss
repnz
xchg
mov
insl
pushf
mov
sbb
and
and
pushf
cmp
loope
mov
pop
loop
pop
scas
mov
jae
push
pushf
inc
ljmp
mov
dec
add
std
fnstcw
xor
mov
mov
add
movl
or
adc
lods
adc
shll
and
xor
lcall
jo
mov
push
rcr
dec
shll
pop
pusha
push
sub
push
inc
push
add
mov
pop
pop
inc
jecxz
test
or
loop
sbb
cwtl
mov
addb
pop
call
adcl
jno
mov
add
inc
cmp
sub
adc
je
je
mov
add
pop
sub
inc
mov
pop
outsb
mov
xchg
or
sub
cld
jecxz
dec
adc
adc
adc
push
add
or
mov
cmp
movsl
mov
inc
sub
enter
or
xor
push
push
jmp
pop
lock
add
lock
or
add
push
mov
in
sbbb
shll
xchg
fs
insb
loope
jno
mov
bound
sahf
arpl
pop
lea
rcrl
or
shrl
fwait
cld
mov
or
cld
mov
jns
cmp
add
cltd
jno
fimuls
orb
jnp
cmp
push
ss
push
xor
dec
add
mov
xor
sbb
mov
repnz
fists
adc
pop
enter
sub
call
or
push
pop
xchg
dec
ds
fs
mov
push
push
push
and
pop
cmp
adc
mov
scas
pop
lods
movsl
push
bound
jnp
push
in
add
dec
jo
push
repnz
jo
popa
out
es
je
push
sbb
scas
sbb
dec
adc
leave
in
sub
add
in
jp
cmp
clc
mulb
orl
or
or
or
sub
sub
je
dec
push
push
inc
imul
push
push
push
data16
orl
cmp
inc
cmp
add
pop
dec
mov
lock
clc
inc
mov
daa
mulb
inc
push
inc
adc
mov
or
push
xor
xor
and
lahf
test
or
fidivrs
adc
cld
movsb
fisubrs
xchg
mov
loope
iret
lcall
dec
push
dec
push
dec
gs
ffree
mov
inc
sbbb
pop
and
lods
fistpll
xor
cmp
jne
fsubs
sbb
mov
hlt
adc
xchg
add
loopne
dec
rcr
xchg
inc
cmp
push
mov
pop
push
lret
iret
aad
mov
mov
fcompl
out
xchg
aam
call
sbb
sarb
inc
inc
dec
inc
movsl
testb
insl
jnp
add
and
push
push
inc
dec
sbb
pop
fldenv
cmc
ret
sarl
push
and
add
add
push
rorl
push
rcr
in
inc
xchg
fldz
movsl
in
push
xor
inc
lods
push
pop
sub
mov
xchg
bound
fwait
xchg
je
inc
xor
js
and
repz
test
push
mov
or
or
js
ss
push
add
sub
push
test
xlat
push
sahf
cmp
stc
sbb
xchg
pop
enter
imul
cmp
xchg
pop
add
stos
and
dec
out
xchg
or
ficoms
lods
mov
pop
jmp
loop
test
nop
and
sti
mov
mov
sub
fucomp
lea
jmp
sbb
mov
lea
mov
int
jns
mov
xor
imul
xchg
jg
lahf
out
lahf
mov
push
arpl
popf
lods
xchg
pop
sbb
dec
jl
jmp
pop
test
cmp
push
test
fimuls
inc
inc
mov
sbb
pop
fcoml
push
mov
and
lea
or
sbb
in
push
push
cmpsl
icebp
xchg
and
insb
mov
jnp
pop
push
push
xor
inc
ss
mov
jge
and
jo
je
repnz
ret
mov
andb
int
mov
out
test
add
sbb
jbe
test
pushf
mov
movsb
test
mov
out
adc
xchg
mov
int
jns
movsb
mov
xlat
or
cmp
insl
adcl
stc
or
cmpsl
and
pop
pop
popa
lea
cld
mov
lahf
mov
pusha
or
xor
or
fucomp
push
ret
mov
jl
push
ret
arpl
jmp
cmp
bnd
stc
inc
outsl
cmp
mov
cmp
pop
pop
das
push
push
mov
imul
or
xor
push
movups
or
jl
push
or
popa
push
push
xorb
dec
jmp
iret
pop
addr16
daa
add
mov
mov
or
enter
adc
inc
out
and
add
cmp
add
lods
inc
jle
or
lods
cmp
inc
xchg
fildl
lock
jo
add
cmp
or
and
int
and
mov
sar
sub
mov
add
stc
fmull
add
add
repnz
xchg
sbb
setne
cmc
clc
rorl
mov
shll
and
les
push
mov
loope
pop
movl
jecxz
add
mov
jns
js
imul
adc
test
fwait
lea
dec
sbb
lea
and
push
jle,pn
jl
movl
add
lcall
lock
std
or
nop
imul
sbb
pop
outsl
push
js
inc
aaa
or
xor
sub
je
mov
push
pop
cmp
push
lea
outsb
adc
in
scas
jecxz
add
add
and
dec
push
out
push
lcall
test
ret
sbb
pop
repnz
ds
inc
rolb
divl
and
out
imul
mov
or
mov
pop
lock
lret
sub
repnz
nop
or
lods
mov
cmp
mov
jne
dec
or
cmp
jno
rcrb
mov
scas
lock
sbb
fstp
fmull
add
jle
push
jg
aas
mov
in
sbb
jbe
addl
movsb
arpl
or
ret
push
pop
test
dec
loopne
mov
pop
jl
push
or
sarl
ret
call
xor
cwtl
loop
push
or
cmp
mov
pop
ret
add
push
in
sbb
jp
clc
push
dec
inc
xadd
call
add
icebp
and
aad
push
test
fistpl
rclb
iret
sti
fsubs
enter
cmp
mov
xchg
cmc
inc
xchg
dec
imul
fdivs
roll
icebp
fsubrs
inc
sub
out
dec
rclb
loop
cmc
je
inc
std
push
lret
inc
repz
fsubrs
into
sub
lcall
push
mov
ror
negb
dec
add
mov
js
push
test
js
xchg
icebp
or
sub
jnp
sub
add
into
cmpsl
push
cmp
jg
mov
push
and
sub
jno
mov
jp
push
cmp
mov
xor
adc
icebp
or
scas
jns
or
je
xchg
fstp
fsubrl
mov
push
push
sbb
dec
fxch
fmul
mov
sbb
adc
call
jae
cld
clc
mov
ja
mov
shl
sbb
sbb
data16
mov
pop
push
jno
or
daa
inc
mov
and
sub
inc
mov
add
out
push
jl
out
add
push
pop
push
and
and
loope
cmp
insb
test
cmc
cmp
add
nop
cmp
dec
les
adc
fwait
mov
loop
xlat
add
cmp
jge
jle
sahf
clc
lea
cmp
and
push
testb
add
mov
push
xchg
jo
cs
mov
loope
in
lea
je
lock
popa
inc
or
cmp
adcl
jecxz
adc
mov
or
mov
incl
insb
push
pop
je
repnz
add
cmp
sub
jl
xor
leave
sub
scas
sbb
push
xchg
je
or
incl
fst
push
mov
xor
sbb
stos
add
push
sti
inc
in
ret
add
pop
or
sbb
lahf
xchg
sbb
jns
jb
push
dec
add
dec
lahf
cmp
fildll
and
xor
cmp
mov
and
add
adc
cmp
ret
pop
sub
jns
sub
test
rorb
cmp
jle
cmp
add
mov
and
add
pop
mov
cs
sub
pop
add
js
int3
inc
dec
movsl
add
pop
std
mov
dec
rcl
cmp
adc
xor
pusha
jo
out
and
xorb
push
ja
mov
imull
adc
fldcw
idivb
jnp
out
sbb
xor
js
fsubrl
rcrb
sbb
pop
xor
add
jl
add
xchg
adc
call
arpl
push
jno
inc
call
pop
test
movsl
inc
push
ja
adc
push
daa
in
mov
adc
je
cmp
shrb
mov
fstpt
inc
incl
aas
pop
and
jge
pop
mov
sahf
mov
mov
pop
sub
mov
push
add
sbb
imul
adc
add
test
and
sub
nop
xchg
mov
xlat
cmpsl
cwtl
push
arpl
cmpb
adc
je
vandps
xor
or
enter
xchg
pusha
subb
mov
loope
push
cmp
sbb
ret
icebp
stc
mov
inc
mov
dec
add
addb
and
mov
push
cmp
dec
jp
adc
add
jne
jl
pop
mov
jne
mov
xor
outsb
adc
push
and
es
jns
jl
inc
inc
cmp
adc
push
ds
sbb
loop
or
popf
call
loop
cmp
sub
jg
inc
lods
mov
xchg
sbb
xchg
mov
loopne
xor
mov
shlb
lcall
neg
dec
je
add
sbb
fsubrl
push
and
or
or
stos
and
lods
loope
or
xor
inc
loop
add
pusha
cs
sub
clc
push
fwait
hlt
cmp
jecxz
pop
jne
clc
mov
mov
into
push
xchg
ret
fistpl
int
inc
xorl
lret
inc
and
mov
and
jb
jnp
sub
in
xor
fsubr
dec
bound
push
iret
repz
dec
inc
push
dec
dec
add
movsb
pop
jae
or
cwtl
dec
shlb
or
push
jns
push
pop
ret
jo
push
jmp
mov
cmp
or
and
or
sub
cmpsl
mov
push
or
hlt
scas
dec
divb
adc
or
or
cwtl
movsl
sbb
ror
cmp
pop
ret
dec
mov
imul
add
pop
cmp
hlt
pop
call
push
push
ds
pop
add
jle
test
outsl
jle
xchg
outsb
cmpsl
enter
clc
mov
cmp
repnz
inc
iret
add
in
addl
daa
jg
mov
sub
fistps
mov
cwtl
mov
mov
xor
pop
xchg
mov
lahf
mov
cmp
pop
test
rolb
push
mov
sti
inc
faddl
cmpsb
lods
lea
sahf
sbb
mov
cmp
je
mov
sbb
leave
jno
mov
lods
les
mov
adc
cli
adc
and
adc
lock
mov
out
mov
cs
outsb
inc
outsb
outsb
outsb
out
and
jb
outsb
mov
dec
scas
dec
and
push
psubsw
add
fistpl
push
stc
shl
jo
pop
mov
pop
pop
enter
aam
dec
push
push
ret
push
jno
aas
lcall
lods
or
dec
lea
pop
js
push
adc
rcrl
insb
or
add
syscall
sbb
rorl
sub
pop
pop
into
sbb
mov
sub
mov
dec
mov
pop
mov
mov
out
push
sbb
pop
xlat
inc
pop
loop
sbb
sbb
les
into
mov
mov
pop
sub
add
pop
out
xor
lock
imul
cmp
inc
dec
out
add
jmp
push
push
dec
in
sub
xor
stos
cmp
or
jb
or
cmp
js
sbb
dec
mov
jmp
hlt
mov
aaa
mov
mov
push
outsl
mov
loop
jmp
das
stos
shlb
mov
jge
cld
dec
and
mov
negl
push
or
fstps
leave
and
push
xor
xchg
sub
lds
add
inc
xlat
aas
push
jmp
aaa
sub
das
push
xor
push
je
cmp
inc
inc
fisttpll
shr
or
mov
xchg
jmp
inc
mov
push
jo
add
les
decl
sub
push
in
push
push
jns
sub
and
xor
push
pop
and
icebp
sub
fwait
call
aam
cmp
mov
dec
sub
arpl
stos
adc
jmp
jmp
ret
aad
sub
xor
lds
sbb
in
nop
js
cmp
sub
inc
add
sub
mov
lahf
sub
shlb
fadds
leave
add
sbb
inc
daa
pop
enter
and
xor
pop
jmp
ja
pop
ficoms
mov
pop
ja
sbb
mov
add
cmpsb
jne
push
movsl
sbb
push
xor
or
or
or
dec
scas
fsubs
data16
sti
idivl
out
sar
mov
shr
add
pop
mov
imul
and
sub
and
rcll
les
fadd
aad
or
mov
test
mov
sbb
fs
jmp
insb
push
out
jmp
ret
mov
shrb
jnp
addr16
push
addr16
les
cli
movsb
jle
les
arpl
loop
mov
push
lock
sub
xor
add
insl
sub
push
sbb
lods
mov
cs
cmp
or
add
push
pushf
mov
pop
and
push
mov
and
movsb
sub
add
mov
or
shufps
pop
xor
fwait
mov
push
xorb
loopne
sbb
outsb
xchg
xchg
cmp
insl
imul
or
jne
push
enter
mov
add
pop
inc
je
mov
add
lahf
lods
xchg
push
ja
mov
sub
or
add
xor
or
rorl
push
aam
test
inc
add
and
inc
pushl
and
pop
cmp
dec
sbb
pop
popa
loope
leave
pop
xchg
mov
push
jecxz
mov
mov
jge
lahf
push
cmpsb
nop
and
mov
lods
push
cs
lahf
push
lret
xchg
and
push
pusha
dec
and
ret
fisubs
jmp
out
cwtl
sbb
and
inc
inc
pushf
jb
mov
inc
lods
test
or
jo
mov
mov
les
add
pop
adc
push
push
sub
xor
repz
or
les
cmp
repz
sbb
or
sbb
pop
or
inc
or
mov
sbb
sub
imul
cmc
sub
inc
mov
popa
dec
add
sbb
mov
and
pop
pusha
mov
mov
js
mov
push
add
lret
bound
add
imul
add
add
add
add
pusha
fwait
cmpsb
jb
add
or
test
enter
popa
xchg
loopne
dec
es
adc
xchg
push
scas
or
test
push
xchg
fiaddl
pop
inc
sub
xchg
cmp
in
adc
add
fcmove
sub
mov
inc
jmp
mov
dec
sti
fisubrs
outsl
add
or
arpl
outsl
xchg
addr16
cmpl
scas
sbbl
and
out
sub
push
das
inc
adc
pusha
sbb
lret
inc
jl
je
and
or
popa
mov
sbb
rorb
or
adc
mov
je
mov
inc
pop
pop
imul
dec
mov
push
add
xorb
ss
mov
arpl
fcomps
sbb
inc
lods
push
fcmovbe
pushl
bound
pop
pop
outsb
add
enter
insb
and
ficomps
ret
jg
mov
jg
mov
mov
xchg
inc
loope
push
add
push
out
int3
and
pushf
push
mov
push
icebp
popa
sub
push
lea
insb
cwtl
dec
adc
push
pop
add
lods
fisttpll
pop
dec
fildl
add
rcrb
push
rolb
fwait
aaa
xchg
mov
add
movsb
xor
pushf
decl
push
sahf
lret
mov
pusha
add
xor
mov
or
sub
mov
push
push
or
dec
mov
aas
popa
mov
addl
sub
dec
mov
pop
aas
scas
add
dec
mov
mov
mov
jo
nop
sbb
dec
sub
std
push
pop
jne
nop
stos
arpl
je
sarb
lret
je
cmp
push
leave
nop
add
push
inc
push
or
pop
ffreep
jo
add
add
and
xchg
pop
fadd
enter
and
test
repnz
cwtl
cmp
adc
lea
sbb
sub
xchg
pushf
ret
mov
dec
or
xor
movsb
pusha
and
cmp
or
dec
popa
mov
mov
push
sub
sub
pop
pusha
lods
add
xchg
ret
adc
mov
jle
jns
mov
nop
add
imul
repnz
mov
mov
loopne
sbb
mov
jns
sarb
dec
and
add
nop
pop
sub
popa
dec
repnz
pop
or
mov
cmp
xchg
add
clc
or
mov
daa
cmpsb
mov
xor
enter
lret
jg
cmp
sbb
fcompl
lea
cmp
lock
dec
mov
mov
fpatan
filds
xchg
fwait
test
jecxz
sub
inc
sbb
scas
push
pop
lret
mov
or
stc
sbb
dec
ds
js
mov
jl
lcall
add
add
push
fisttps
sub
inc
out
dec
shlb
mov
adc
sbb
test
jo
push
and
fldl
jb
sti
fstps
jne
in
sbb
sti
or
cmpsl
or
and
adc
ja
and
pusha
or
shlb
in
push
pop
ja
jmp
scas
inc
inc
sub
ja
jmp
add
adc
sarb
dec
jmp
add
or
outsl
push
je
hlt
dec
push
pop
es
mov
imul
cmp
push
jle
mov
mov
push
inc
jecxz
imul
push
jmp
pop
lea
push
adc
test
insb
jle
xchg
cmpsb
fisubrl
xor
loopne
push
lods
mov
mov
mov
test
xchg
aas
pop
pop
mov
aas
sbb
enter
dec
jns
out
sub
push
push
pop
popaw
sbb
out
dec
sarb
test
pusha
std
das
lcall
outsb
mov
add
lods
inc
jle
mov
out
das
loopne
cli
push
and
adc
push
sub
or
sbb
je
fwait
xor
test
jns
punpckhbw
andl
in
jmp
add
xorb
jg
fbstp
jb
orb
pop
mov
or
dec
inc
popf
xor
mov
pop
rol
ffreep
adc
test
sub
inc
sub
ret
stc
pushf
sub
ret
mov
sbb
into
into
into
mov
mov
jo
movsb
daa
arpl
push
ffree
std
mov
sbb
hlt
lds
sbb
jmp
pop
ret
sbb
mov
and
xchg
dec
push
sub
and
push
add
or
daa
cmpb
call
sub
loopne
clc
fs
mov
jne
pop
fcomps
daa
mov
jo
daa
push
adc
orb
inc
adcl
pop
mov
cmpsb
stos
fbld
int
xchg
sbb
sbb
or
mov
jg
sub
movsb
adcl
and
sahf
dec
call
or
pop
jecxz
dec
pop
adcb
push
or
mov
mov
lods
add
add
pop
dec
inc
jo
push
stos
jg
clc
cs
lret
mov
stc
cli
adcl
cmp
sub
in
pop
inc
add
lahf
sarb
faddl
adc
jnp
lea
pop
dec
dec
insb
test
mov
push
inc
pop
pop
pop
pop
test
mov
jg
mov
push
adc
fdivrs
test
inc
dec
mov
push
jmp
inc
push
leave
dec
imul
pop
inc
inc
js
mov
sub
subb
fiaddl
inc
mov
push
pop
sbb
pushf
xlat
inc
rorb
inc
pop
xor
xchg
ret
pusha
icebp
incb
mov
dec
loopne
xor
lock
sbb
lds
dec
adc
xchg
mov
scas
dec
jne
mov
xchg
sbb
add
imul
and
jmp
je
mov
shr
xorl
jmp
pop
sbb
xchg
or
lret
pop
cmp
insb
cmp
add
aam
push
xchg
dec
loope
movsb
mov
pop
adc
cmc
ds
or
push
test
xchg
arpl
mov
dec
fmuls
add
push
shlb
inc
loopne
dec
lret
mov
mov
mov
push
lea
ret
adc
pop
add
call
xchg
pop
shl
cmpsl
mov
push
je
rorb
mov
or
addr16
call
add
adc
xor
dec
stos
pop
add
pop
push
das
cltd
mov
es
jmp
bound
mov
nop
dec
xlat
sub
add
nop
mov
cld
push
movsb
sbb
lock
loopne
xor
push
daa
sbb
into
sbb
inc
jg
mov
or
cmp
xchg
test
jo
and
call
sub
and
mov
add
pop
dec
dec
mov
fwait
test
pop
mov
push
arpl
adc
sbb
jae
dec
push
orl
mov
out
and
in
jns
pop
add
inc
aas
jg
jo
mov
jne
aas
fistpl
or
js
jecxz
ficomps
push
xchg
outsb
sbb
aas
push
stos
arpl
or
cs
lret
or
mov
insb
aas
sarl
mov
push
push
out
test
je
cmp
cltd
adcb
push
roll
ret
push
cmp
jb
dec
push
pop
add
jne
jmp
sbb
mov
inc
cmp
xor
add
add
into
outsb
dec
ret
fninit
aas
mov
ss
outsb
inc
mov
test
dec
adcl
mov
pushf
ja
mov
or
jno
adc
lret
inc
mov
push
fistps
pop
lahf
push
and
adc
lods
pop
jl
fs
pushf
mov
pop
test
jo
ljmp
add
ljmp
sti
mov
cmp
adc
inc
out
jle
inc
jo
xchg
jne
insb
call
loope
pop
cwtl
aaa
xchg
fisubrs
lods
or
sbb
sub
push
decb
push
jo
scas
sbb
adc
pop
cmp
push
xchg
mov
dec
pop
addl
sbb
mov
aaa
and
or
out
ret
mov
sub
movsb
xor
and
adcl
dec
push
push
xor
addl
inc
cs
push
and
incb
mov
outsb
loope
pop
add
add
insb
mov
dec
mov
or
fs
add
gs
testb
je
aas
mov
rorl
or
lods
pop
subb
adc
inc
xchg
mov
outsb
cmp
push
std
jne
or
hlt
cmp
scas
xor
scas
lahf
repz
rorb
dec
imul
push
inc
or
cmp
lcall
cmc
inc
cmpl
pop
in
and
push
rcl
lret
decl
in
add
data16
xchg
pop
popa
leave
cli
or
inc
popa
dec
lea
ret
jne
push
mov
scas
inc
xchg
ret
mov
sub
stos
push
scas
push
adc
push
loop
clc
fs
lods
push
push
push
imul
push
push
mov
sub
and
xchg
xor
push
sbb
cld
mov
out
cmp
pusha
jo
or
ss
jbe
push
addr16
push
pop
je
das
icebp
cmp
dec
push
add
movq
fcoml
divb
imul
pop
mov
xchg
sbb
je
adc
aaa
lea
fists
xchg
xchg
sbb
sub
or
inc
movb
cld
divb
push
je
and
fsubr
dec
loop
fdivs
rcr
lahf
ret
mov
test
fstl
mov
mov
pop
sub
sbb
lahf
pop
insb
push
inc
dec
xor
and
jno
pusha
jae
es
sub
inc
rcrl
bound
loopne
and
mov
and
pop
push
push
push
sbb
jo
jl
xor
ret
test
les
inc
bndldx
sub
int
ret
jl
push
inc
push
push
or
mov
in
push
xor
cmp
mov
cmp
ret
testb
lea
je
or
dec
inc
xor
aam
adc
insl
adc
mov
adc
test
imul
scas
xor
push
push
jmp
clc
sub
ret
lods
add
insb
jge
bound
sbb
xor
sbb
mov
sbb
insl
adc
and
ret
push
jno
mov
dec
xor
sub
sbbb
mov
andl
sti
xor
pop
pop
pop
add
and
mov
leave
gs
inc
and
popf
ret
test
enter
add
jmp
add
push
add
lcall
pushf
add
aam
cmp
sub
ficoml
ret
in
push
test
add
jmp
sub
mov
inc
dec
ss
jg
cmp
dec
cmp
lock
nop
jno
or
int3
adcb
ret
pop
insb
push
or
push
dec
jns
cmp
pop
test
jne
cmp
bound
mov
sahf
jge
mov
aam
dec
dec
test
mov
mov
dec
or
push
outsb
cwtl
adc
popf
xor
test
dec
xor
andb
pusha
popa
pusha
inc
jg
and
mov
clc
sbb
mov
arpl
adc
and
dec
inc
inc
cmpl
cwtl
adcb
dec
push
inc
pop
push
in
cmp
jge
cmpsb
ret
xchg
xor
push
add
mov
adc
add
push
pop
cmp
scas
xor
or
and
daa
inc
or
aas
aas
push
pushf
inc
mov
adc
pop
aam
nop
inc
lret
jmp
mov
dec
mov
dec
inc
loope
les
aas
addb
jo
popw
xor
xor
aaa
icebp
lock
sub
or
or
add
push
inc
pop
pop
lods
dec
xor
clc
xor
xor
and
fsubrp
pop
adc
push
xchg
das
jecxz
or
xchg
add
push
mov
inc
popa
loop
insb
aas
test
pop
dec
mov
jp
into
pop
xchg
cltd
adc
pop
aas
mov
popl
int3
in
enter
orb
movsb
enter
cmp
aas
movsb
xchg
xchg
enter
lret
les
cmp
adc
cmp
sbb
dec
rolb
sub
and
js
push
mov
icebp
add
dec
dec
stos
repz
sub
add
stos
jmp
jo
pushf
movsb
inc
rorb
pop
nop
push
push
pushf
mov
ffreep
xchg
out
xchg
and
add
pop
or
inc
jecxz
sub
sub
sub
lds
pusha
pop
lahf
xchg
push
orb
rcrb
in
inc
xchg
shlb
rcr
rcrl
push
jb
in
insb
sbbl
add
inc
inc
and
add
cwtl
and
sub
jno
mov
mov
fs
add
adc
push
cmp
push
scas
dec
ds
sub
dec
test
or
fmull
int3
lods
lock
add
outsl
sbb
mov
sub
push
sub
or
or
add
sbb
mov
lock
cmp
stos
add
negl
sub
cmp
sahf
addl
xchg
adc
inc
fbstp
add
xor
jg
add
xchg
pusha
mov
decl
lea
adc
add
cmpb
aad
jb
or
les
pushf
sbb
mov
mov
fadd
inc
pusha
sub
lahf
or
jb
inc
shrl
addb
push
mov
orb
es
out
push
mov
in
push
orl
push
xor
ja
inc
mov
or
add
lahf
push
or
cmp
inc
or
cmp
pop
fsubrs
movsb
je
popl
lds
mov
mov
cmpb
pop
jbe
aam
pop
movl
add
mov
dec
loopne
push
sub
mov
jle
add
pop
les
inc
cmp
jl
cwtl
add
dec
xchg
mov
adc
cmpl
int
jg
repnz
leave
ror
dec
clc
cmp
pushf
fstps
sbb
loope
outsl
repz
inc
cmp
jmp
or
cmp
sub
cmp
jl
xor
cwtl
jne
fistl
sahf
popa
je
mov
or
aas
movsb
jge
outsb
and
push
add
enter
insl
insb
dec
xchg
mov
xor
daa
inc
pop
imul
cs
lods
pop
push
cmp
subb
jl
push
xor
push
fnstenv
mov
shrb
inc
fildl
mov
ror
lods
fs
jne
mov
cmp
fistps
pushl
fidivrl
stc
mov
lods
enter
ret
inc
cmp
jl
add
es
mov
mov
dec
andl
mov
imulb
sbb
add
xorb
xor
stos
cmpsl
pop
push
pop
in
pop
js
sahf
out
push
js
adc
jo
add
xchg
mov
movsl
add
dec
jl
jg
or
lods
add
adc
pop
adc
xor
xor
aas
mov
push
mov
out
mov
sbb
idiv
je
les
test
adc
enter
fisubl
add
jbe
sti
mov
xor
mov
mov
mov
pop
movl
cmpsl
jmp
movsb
or
push
jmp
mov
daa
and
fcomp
xor
je
loopne
call
jb
hlt
clc
cld
outsb
idivl
add
mov
cmp
adc
cmc
add
push
add
mov
and
mull
or
jns
dec
xor
orl
jo
xchg
push
cmp
pushf
cwtl
lahf
sub
inc
push
test
aad
mov
dec
pop
mov
adc
lock
push
aaa
mov
bound
ret
sub
jne
xchg
dec
add
movsl
ud2
cmpsl
pop
or
dec
pop
roll
mov
push
jl
movl
ljmp
mov
push
sbb
bound
jae
or
movl
ljmp
add
lret
dec
mov
ss
dec
test
lds
sbb
xchg
mov
in
or
jmp
pop
mov
cmp
xchg
or
pop
loope
push
add
or
outsb
push
inc
push
mov
inc
ret
daa
inc
add
fsubrs
cmp
push
sbb
sub
sub
or
nop
push
or
push
aam
push
negb
fbld
rolb
test
inc
xor
and
lods
or
inc
insl
fmull
jns
add
xor
push
pop
mov
call
popa
js
sub
lea
loope
and
test
filds
lds
mov
jns
mov
push
call
xor
lret
push
inc
pop
test
repz
cmpsl
pop
push
sti
sbb
cmp
adc
popa
in
sbb
clc
shrb
add
push
inc
add
fidivs
jo
insb
add
arpl
mov
push
jl
loope
fildll
std
xchg
push
push
cmp
push
cs
sub
fsubrs
cwtl
or
cmp
gs
pop
inc
add
add
pusha
sbb
test
into
sub
sub
loopne
add
mov
lahf
add
cwtl
cmp
es
insl
pusha
andl
push
push
mov
pushf
inc
sbb
loopne
jae
cwtl
in
lcall
cld
loope
xchg
mov
dec
mov
lcall
or
sbb
ljmp
sbb
mov
ror
fimuls
jne
push
cmp
lods
test
xchg
inc
test
add
push
jo
jp
xor
fs
adc
inc
jns
sahf
xor
and
shrb
lret
push
lcall
out
sbb
push
fildl
mov
xor
imul
push
shrb
and
add
mov
jb
cmp
rcrl
add
lahf
insl
lret
push
cmc
push
fs
add
push
je
clc
das
jmp
dec
xor
roll
data16
or
cmp
inc
inc
faddl
bound
or
and
in
inc
add
cmp
cmp
push
ja
subl
jne
adc
addr16
stos
rcr
cmc
inc
loope
cs
lea
mov
sub
sbb
and
adc
dec
cmp
js
xchg
loopne
push
push
push
mov
push
test
sub
push
mov
rorl
jl
jle
inc
cld
mov
in
dec
sub
cmp
jge
mov
or
pop
mov
xchg
sbb
in
xchg
fs
push
push
push
je
les
and
mov
into
push
lea
repz
test
dec
and
push
cmp
mov
inc
pop
inc
mov
push
mov
jle
cwtl
mov
or
lea
in
mov
loopne
mov
int
adc
pop
jecxz
add
jp
lea
adcb
popf
cmp
dec
les
xor
arpl
add
int3
cltd
jp
push
pop
int
xchg
xchg
or
sbb
and
sub
cmp
loopne
mov
pop
or
fwait
inc
mov
push
sbb
add
lea
or
xchg
adc
sbb
push
mov
mov
jbe
nop
clc
andl
sub
inc
movl
adc
and
fimull
sbb
sub
leave
adc
sbb
lcall
jp
fsubrl
in
add
push
xor
adc
sbb
xchg
aad
pop
fs
icebp
sbb
dec
jns
jo
and
push
push
sbb
je
mov
sbbl
jo
sub
mov
movsb
imul
add
pop
cltd
and
pop
and
cwtl
popa
dec
jge
mov
pop
or
sub
or
pop
test
and
pop
inc
add
repz
push
push
insb
subb
cs
add
push
xor
sub
bound
int
push
js
jl
and
mov
cmp
push
push
mov
ror
pop
pop
mov
cmp
cmp
pop
sbb
push
loopne
fidivs
mov
aad
mov
xchg
dec
ja
push
pop
add
and
sub
lods
cld
jle
xor
or
stos
pop
pop
cmp
inc
cmp
dec
or
mov
aaa
pop
pop
pusha
or
je
in
push
cmp
in
jb
addb
nop
pop
ret
xchg
pop
dec
xchg
jb
push
cs
pushf
mov
xor
mov
addr16
jmp
mov
sbb
enter
lea
mov
loopne
in
mov
xor
push
in
lock
clc
fs
ss
or
addr16
jb
lcall
cld
add
add
sbb
scas
or
or
mov
xchg
xchg
dec
sbb
and
jb
test
cmp
inc
inc
dec
inc
sbb
cs
push
push
pop
sub
pusha
fs
inc
jo
js
xchg
lret
addb
sub
movsb
push
movsb
test
inc
adc
xchg
mov
mov
mov
int3
xchg
lret
enter
fcomp
mov
ljmp
hlt
clc
push
loopne
enter
add
pop
pop
enter
sarb
cmp
sub
dec
add
pop
or
pop
and
out
inc
sub
mov
dec
test
inc
gs
fisttps
sub
add
dec
push
or
jbe
xor
fisubs
sbb
add
and
jecxz
cmp
out
lea
stos
and
aam
in
mov
divb
cs
fs
inc
aaa
hlt
subl
rorl
mov
ljmp
push
jp
jnp
add
cltd
pop
stos
inc
inc
testb
mov
lret
push
jae
sub
lret
jl
mov
pop
sub
mov
push
xchg
cmp
pusha
and
daa
pop
jmp
test
jl
inc
mov
rcl
data16
pushf
testb
mov
movl
or
lock
incl
mov
les
or
push
aam
mov
or
mov
aaa
pushl
insb
pop
xor
add
sub
lea
sub
adc
and
push
and
adc
cltd
lods
or
adc
je
push
ja
xchg
movsb
xor
sbb
mov
push
add
sbb
xchg
add
fs
xchg
xchg
add
push
jo
adc
sub
push
daa
and
pusha
ja
je
das
adc
adc
idivb
push
dec
cltd
pop
orb
orb
das
xor
xchg
push
lock
sub
dec
orb
test
cmp
je
stc
and
insb
in
push
jmp
inc
addl
dec
inc
movsb
xor
sar
adcb
and
pop
sub
orb
shll
mov
jl
clc
clc
in
in
or
sti
cmp
pop
pop
pop
je
pop
push
push
loop
stos
sub
xor
sbbl
test
sub
fildl
cmp
repz
adc
into
and
lea
and
mov
cmc
mov
dec
mov
fwait
into
cmc
jne
aad
iret
cmp
xor
mov
jno
and
xchg
xlat
adc
test
jbe
hlt
pop
adc
jne
cmp
imul
int3
jne
dec
into
sub
pop
cmpl
cmp
cmp
cmpb
cld
xchg
rorb
ljmp
and
leave
inc
outsb
push
nop
sbb
in
dec
or
js
or
mov
inc
push
adc
cltd
or
arpl
adc
add
je
mov
popa
xchg
or
or
ret
adc
repz
aad
push
dec
enter
adc
push
xor
lods
add
mov
dec
scas
cld
cs
cmp
add
or
test
add
push
cmpl
sti
and
adc
jne
call
and
add
or
js
inc
bound
sbb
lcall
sub
adc
pop
push
jb
push
mov
sbb
push
mov
mov
push
push
mov
idivb
imul
dec
xchg
adcb
es
inc
ret
mov
xor
fcmovnb
pop
mov
push
pushf
stc
je
cmpsl
lods
fnstenv
jmp
push
push
push
push
or
out
movsl
stos
cmc
pop
sbb
push
daa
outsl
sub
add
aad
jmp
mov
or
mov
std
mov
pop
inc
or
loop
xchg
out
or
in
clc
sub
test
and
frstor
fistps
push
push
sbb
scas
sub
mov
icebp
pop
cltd
popa
and
pop
mov
dec
aad
andb
mov
test
adc
sahf
push
pop
outsl
int3
cmpsb
push
fisubs
adc
test
push
jno
stc
mov
addb
aad
jl
aas
and
cmc
sub
sub
mov
push
popa
inc
add
inc
mov
lods
pop
mov
aas
daa
test
add
add
call
xchg
fiaddl
pop
fistps
arpl
fs
test
cmpl
jl
out
jae
xor
and
test
cmp
inc
push
or
add
pop
rclb
out
in
pop
mov
aas
and
outsl
or
jae
xchg
insb
pop
call
or
fsubl
test
mov
and
adc
xchg
cmp
mov
ret
nop
mov
call
pop
jmp
cmp
sub
gs
shll
sbb
mov
mov
push
std
inc
xchg
sub
enter
jo
add
inc
dec
scas
daa
pop
inc
cmc
cmp
mov
cmp
jne
iret
and
sbb
sbb
notb
add
jne
xlat
pop
movsl
lret
push
dec
pop
insl
subl
xchg
mov
aas
scas
sub
xchg
data16
mov
or
enter
add
sahf
mov
adc
add
or
fldt
sysenter
dec
jo
push
ret
push
repnz
add
enter
xchg
sbb
add
and
sub
xor
sbb
leave
adc
jo
pop
push
dec
or
outsb
add
fwait
and
ljmp
add
jo
xchg
add
pop
jp
into
push
pop
xchg
jbe
mov
adc
jo
or
out
and
xor
pop
dec
ret
mov
jne
sbb
rolb
mov
dec
insl
mov
mov
xor
mov
arpl
push
mov
add
mov
xchg
dec
mov
add
rcrb
mov
nop
mov
xchg
js
pop
into
and
pushf
push
mov
cmc
pop
rcl
sub
push
ja
or
fcoml
inc
mov
or
adc
cmp
mov
pop
push
in
pop
dec
outsb
je
pop
popf
in
sbb
sbb
subb
xor
cmc
pop
push
mov
mov
xor
push
pop
xor
jle
das
add
jecxz
outsl
lret
lea
push
lret
jge
adc
push
icebp
adc
sbb
push
pop
inc
sbb
mov
fcmovnb
mov
mov
dec
mov
cmpl
jbe
or
add
data16
mov
sub
cmpsw
mov
mov
mov
and
popf
jmp
int3
gs
adc
push
fs
inc
sbb
jmp
adc
repz
clc
sub
push
inc
cmpsl
push
push
adc
test
mov
sbb
inc
jg
adc
pop
push
xor
cmp
mov
fstps
xor
add
inc
or
pop
or
mov
stos
xchg
pop
cmp
push
repnz
jle
xchg
mov
lods
push
cmp
mov
daa
add
mov
mov
and
enter
push
mov
cmp
sbb
ret
sub
and
mov
push
pop
pushf
and
popf
out
fcompl
sbb
push
fists
jo
imul
nop
push
jg
hlt
mov
cmpsb
jg
mov
add
cmp
or
add
jo
lea
or
movsb
xor
popf
mov
mov
test
iret
dec
dec
and
add
call
pop
pop
pop
and
mov
jmp
add
in
mov
and
test
dec
add
inc
shll
sbb
lods
rorl
leave
mov
or
pushw
xchg
sub
push
mov
rcrb
shr
sub
xchg
dec
push
jno
sub
shrb
xor
pop
push
popa
cld
subl
roll
push
mov
imul
adc
scas
loopne
cmpsb
sahf
shlb
push
dec
adc
push
or
lahf
dec
decb
add
inc
lahf
jnp
pusha
aaa
mov
sahf
fstpt
test
cmc
pop
sahf
push
dec
add
sbb
int3
mov
xor
ret
clc
or
sub
rcrb
fwait
lahf
and
dec
or
or
cmp
cmp
xchg
mov
adc
sar
nop
mov
adc
ds
push
push
push
mov
push
cmp
rcll
push
lods
xor
push
arpl
inc
mov
test
out
push
mov
xchg
sbb
add
xor
movsl
andps
add
push
enter
lds
push
je
mov
addr16
pop
and
mov
adc
or
inc
cs
pop
iret
push
mov
push
std
stos
ja
cmp
jne
pop
inc
mov
incb
orb
add
dec
cmp
add
fiaddl
mov
push
push
or
mov
ret
popa
mov
sbb
add
jo
mov
decb
mov
push
in
jbe
jno
adc
pop
cld
imul
cmp
jge
adc
fildl
loopne
or
out
jnp
mov
add
ret
faddl
mov
mov
add
ljmp
add
pop
or
insl
mov
faddl
push
dec
adc
push
cmc
pop
push
push
or
adc
aam
in
adc
sahf
push
or
pop
inc
js
movsl
or
adc
cmp
jp
inc
or
jmp
cmc
jne
mov
push
pop
push
fstpt
and
fildll
push
arpl
inc
in
push
ljmp
mov
lock
inc
add
loope
push
add
push
cmp
pop
or
push
and
push
ret
sub
jno
leave
or
mov
mov
cmc
adc
iret
mov
aaa
lret
and
add
test
add
ja
int3
insl
aas
pop
push
push
neg
inc
push
push
push
ss
loop
mov
idiv
int
imul
mov
pop
bound
jmp
mov
push
add
adc
add
or
outsl
add
and
iret
push
sub
add
and
sbb
or
or
and
pusha
pop
test
loopne
loopne
or
push
popf
add
mov
adc
mov
jle
jg
je
sbb
jno
mov
adc
or
pop
push
outsl
les
xor
mov
lds
xor
jo
mov
mov
add
push
test
mov
int3
outsl
ret
push
jae
push
dec
fldenv
lret
sub
push
pusha
dec
xor
hlt
sbb
adc
jae
in
pop
pop
dec
sbb
adcl
dec
cld
sbb
sbb
ret
mov
xor
sbb
jle
mov
lea
mov
imul
adc
push
push
and
sbb
push
scas
jge
or
push
push
cmp
sahf
pop
inc
jl
push
inc
mov
jo
out
sbb
insb
jnp
mov
push
adc
push
stc
negl
pop
xor
out
aaa
cmp
pop
pop
jmp
je
flds
sarb
add
jl
pop
dec
shlb
das
xor
or
or
aas
mov
mov
inc
push
sbb
mov
and
or
std
cmpsb
dec
pop
xchg
push
jno
adc
adc
push
outsb
mov
push
dec
ret
and
sub
push
push
push
mov
and
lds
sub
insb
sbb
or
std
sub
xor
ret
fmuls
ds
jecxz
mov
rol
adc
push
test
jbe
out
adc
bnd
xchg
add
push
add
mov
add
aam
pop
dec
push
testl
or
cmp
sarb
js
xchg
dec
aam
arpl
rorl
pop
mov
push
pop
jno
sbb
call
shlb
mov
pusha
adc
hlt
dec
adc
bound
lahf
xchg
pop
jo
mov
push
movsb
call
negb
dec
cwtl
ret
nop
push
test
movsb
iret
lahf
decl
jle
out
add
cmpsl
shlb
add
or
inc
pop
test
push
sbb
inc
or
rorl
or
pop
add
pop
cmp
mov
pop
ja
push
inc
jl
je
sbb
rcll
cmp
sbb
loopne
add
in
aam
pop
insb
fiadds
mov
jge
lea
cmp
push
fistl
jle
inc
rsm
adc
cmp
inc
stos
push
test
pop
sbb
loope
fsubrs
lea
add
push
pop
movsl
cmp
mov
add
stos
orl
mov
add
dec
mov
rcll
add
iret
mov
pop
add
mov
ljmp
push
push
adc
xchg
mov
push
mov
xchg
push
ds
push
lods
push
pop
mov
or
addb
pop
pop
or
les
fbld
cmp
adc
dec
mov
insb
or
lock
or
sbb
add
xor
mov
rorl
shll
gs
dec
imul
push
jb
xor
xchg
or
aas
in
call
push
dec
je
data16
push
fmulp
es
ret
or
or
mov
dec
adc
arpl
repnz
call
inc
iret
inc
or
dec
mov
or
faddl
jmp
or
adc
jnp
and
icebp
adc
dec
nop
jmp
adc
mov
subb
mov
popf
mov
lock
pop
jo
ja
mov
out
mov
je
xorl
and
adc
fistl
or
cmp
pop
movsl
mov
mov
and
outsb
cwtl
pop
dec
adc
cmpl
dec
sbb
es
loopne
and
rorl
lock
test
rorl
testl
adc
dec
pop
call
shrl
mov
xchg
cmp
test
sbb
lret
jl
out
push
inc
call
out
sub
rclb
ucomiss
aaa
cmp
int
pop
sbb
xor
mov
push
daa
in
add
jb
mov
into
xor
aas
push
vxorps
xor
jae
pop
jl
inc
insl
fsubs
mov
or
push
cmp
rclb
sbb
adc
mov
lods
adc
jns
push
cmp
or
js
pop
pop
cmc
movsl
fmuls
sub
test
shll
lcall
in
sbb
test
and
and
ja
xor
xor
or
adc
rolb
lret
add
pop
adc
or
push
xchg
incb
fistl
add
rcll
mov
sub
mov
sbb
pop
outsb
add
jae
jne
aad
push
gs
mov
in
inc
stos
adc
push
dec
ror
mov
sbb
lea
push
icebp
xor
jge
outsl
js
and
sarl
xor
addb
sbb
aas
push
cmp
push
sbb
add
jl
and
adc
xor
ret
or
push
or
mov
jns
cmp
mov
loope
and
pop
cld
push
add
popl
test
inc
out
sbb
push
push
mov
js
movsb
dec
nop
sub
cmp
mov
into
daa
std
push
or
xchg
test
sub
mov
and
push
xor
add
add
adc
dec
inc
mov
cmp
lods
mov
or
sub
pop
dec
stos
mov
add
call
scas
push
das
repnz
add
adc
xchg
or
or
jp
fdivr
and
lods
sti
mov
push
es
or
or
adc
push
shll
jo
lds
jge
bound
ja
cmp
test
add
xchg
pop
mov
insl
mov
dec
je
addb
imul
aas
sub
adc
jnp
rorb
loope
scas
mov
test
je
aam
or
dec
xchg
fisubrl
data16
aas
push
jo
push
cmp
and
vmaxps
and
mov
dec
les
sbb
test
jmp
dec
mov
test
or
mov
push
addl
adc
fldt
sub
dec
mov
mov
adc
imul
leave
jb
xor
cmp
sbb
hlt
aad
push
jecxz
int3
adc
push
pushf
adc
loope
mov
adc
lds
jge
pop
insl
add
ljmp
mov
push
or
shll
lock
aas
adc
push
jo
xor
cmc
jl
cmc
repnz
call
cld
sbb
shlb
add
inc
hlt
and
insb
pop
jmp
lea
push
push
and
and
or
shrl
je
adc
leave
push
adc
sbbl
pop
or
inc
adcl
mov
add
out
inc
cld
ret
insb
cmp
icebp
dec
adc
cmp
cmp
nop
gs
sarl
out
dec
mov
mov
orb
sub
xor
cld
or
sbb
mov
icebp
sub
imul
push
adc
sbb
push
or
lods
je
es
fidivrs
push
adc
lods
mov
rcrb
testb
xchg
push
das
xchg
add
cmp
push
push
dec
or
jne
aaa
xchg
adc
xchg
add
xchg
mov
adc
or
fldenv
mov
adc
adc
pop
mov
xchg
imul
mov
mov
cmp
inc
mov
lea
fs
call
roll
jo
outsb
sbb
pop
inc
or
adcb
lods
jmp
jle
sbb
in
mov
adc
lea
jle
lahf
cwtl
rcrl
jl
jge
mov
add
jl
xor
pop
aad
lahf
or
adc
test
dec
pop
pop
test
sub
pop
mov
addl
in
add
xor
mov
add
dec
add
or
sbb
xchg
mov
lahf
inc
fsubrs
popa
mov
ffree
adc
jns
aas
cwtl
jno
jno
loop
jmp
or
sarb
das
jl
pop
movl
pop
or
shrb
xorb
dec
arpl
cmp
clc
add
movl
sahf
and
lret
fildl
insb
xorl
xor
pop
push
xor
or
and
ss
and
adc
fadds
dec
ficoml
dec
sbbb
or
and
bound
and
cltd
movsb
adc
je
mov
shll
int3
add
sbb
aad
add
int3
mov
subb
ja
sahf
jl
test
pop
mov
mov
jge
sub
pop
push
push
addr16
outsb
les
int3
rcrb
jo
mov
addb
cwtl
add
loop
loopne
and
and
out
in
in
call
ret
in
xor
adc
lret
rorb
nop
cwtl
xchg
mov
in
jge
lods
adc
jge
dec
in
add
int3
xor
sub
push
sbb
cmp
aam
jecxz
sbb
stos
into
mov
faddp
jno
sbb
xchg
or
xor
in
dec
sbb
or
sbb
cmp
mov
inc
test
mov
loope
push
push
mov
lahf
icebp
sarl
fbld
sub
lds
jg
and
cs
or
inc
and
xor
loope
repz
pusha
dec
jae
rcl
fbstp
and
and
push
or
sarb
sub
lds
pop
fnstenv
push
dec
adc
push
mov
and
sti
cmp
push
les
add
test
cmp
fisubs
jne
xor
bound
jnp
xor
mov
subl
pop
inc
adcb
inc
sbbb
push
lods
jl
mov
jb
mov
mov
and
sub
push
in
pusha
push
dec
push
in
dec
adc
in
and
or
rolb
jle
add
and
fmuls
inc
dec
fiaddl
mov
cwtl
sub
or
leave
xorl
pushf
or
leave
sbbl
mov
dec
insl
jne
iret
inc
and
movsb
out
gs
or
lcall
daa
das
push
popa
lret
add
xchg
fisttpl
shlb
pop
pop
arpl
aas
sbb
mov
dec
jo
sub
popw
rorb
cs
je
add
dec
lea
incb
inc
inc
jge
inc
pop
out
or
push
adc
test
mov
fcompl
sarb
inc
call
dec
and
and
mov
mov
or
mov
xor
rcrl
adc
loopne
je
lea
push
cmp
jb
xor
mov
xor
ja
jbe
or
outsb
mov
in
cs
and
xor
lea
int3
adc
aas
push
or
out
push
push
cmp
sbb
push
daa
lock
add
push
sub
sub
dec
add
sub
and
mov
xchg
sub
sarl
mov
or
jmp
cmp
inc
arpl
cmpl
pusha
xor
xor
movsl
mov
mov
scas
adc
cmp
push
sub
mov
push
cmpsl
lcall
push
aam
ret
mov
xor
fwait
or
push
push
mov
mov
pop
xchg
push
pop
inc
shlb
sbb
je
xchg
push
push
jns
jmp
scas
inc
test
fadd
mov
inc
sbb
insb
dec
int
test
push
dec
add
in
or
dec
sbb
pop
ja
enter
mov
stos
cmp
pop
and
out
sbb
cli
or
or
ja
aad
cmp
clc
je
ja
xchg
loope
sbb
fs
pop
pop
rorb
pop
dec
fmuls
mov
add
xor
not
fwait
inc
push
xor
fwait
insb
add
pop
mov
cmp
cwtl
dec
push
or
pop
ss
dec
arpl
das
clc
daa
xor
and
pop
cwtl
jge
jg
jmp
lahf
outsb
or
dec
lock
jns
sub
dec
in
push
test
jne
sarb
in
fldenv
pop
lret
push
sbb
sbb
push
mov
or
add
cmp
shrl
cmp
push
xchg
pop
pusha
xlat
addl
pop
cwtl
test
lds
add
pop
xchg
push
mov
imul
and
lea
or
mov
scas
cmp
mov
add
cmp
sbb
cmc
cmp
push
push
inc
icebp
push
iret
scas
icebp
dec
adc
jl
lock
xchg
push
jl
add
lea
cwtl
stos
pop
adc
scas
ja
xor
incl
inc
and
lods
jge
dec
mov
shrl
sbb
lds
fcoml
and
enter
mov
aam
rorb
call
adc
fldt
inc
pop
adc
jb
jne
sbb
pusha
out
push
add
test
cmpsb
push
xchg
mov
sahf
sbbb
mov
push
jo
push
notl
sbb
mov
pop
ret
test
sub
dec
mov
dec
pushf
adc
insl
cmpsl
mov
mov
mov
cmp
mov
loopne
add
popl
pop
data16
adc
sbb
movsb
ret
mov
jbe
sub
push
cmp
add
outsl
push
add
mov
rcll
lock
mov
sub
jmp
pop
stc
ret
lahf
test
and
cmpsl
inc
mov
push
jmp
outsb
mov
lods
jo
mov
jb
stos
cmp
xor
dec
jl
pusha
dec
push
pop
or
test
mov
or
popf
cmp
xchg
cmp
es
pop
fadds
cmp
adc
mov
add
add
test
call
dec
mov
add
mov
pop
ret
pop
popf
pop
lea
and
notb
jo
imul
rcll
out
or
sbb
je
pushf
stos
sub
cmp
fists
in
adc
jge
cs
jae
lea
or
scas
push
adc
jne
cmp
xor
pushf
sbb
scas
dec
jne
push
pop
popf
cmp
in
push
adc
xor
cld
mov
shl
rcll
fdivr
xchg
xchg
sbbb
movsl
cmp
leave
cmpl
dec
xchg
xchg
icebp
or
cli
nop
adc
mov
adc
add
test
and
add
mov
xchg
adc
rorb
negl
mov
push
mov
pop
lock
add
addr16
add
popa
mov
pushf
push
sbb
test
adc
jp
test
pop
mov
sahf
xchg
pop
lods
or
lahf
insl
cmp
push
ja
ffreep
jmp
mov
pop
jle
cmp
and
jle
push
sahf
dec
sbb
fcomps
in
mov
mov
out
mov
push
fiaddl
outsl
cmp
js
inc
xor
ljmp
call
aaa
outsl
add
push
pop
js
out
inc
imul
xchg
movsb
test
cmp
or
or
cmp
cmp
dec
add
adc
sbb
pop
jl
adc
jo
repz
or
mov
icebp
mov
and
push
ds
adc
jbe
fdivrp
xor
cmp
sub
insb
sbb
or
push
push
mov
cmp
shrl
sbb
push
mov
call
in
and
aaa
xor
fnstsw
pusha
adc
ss
pop
loope
in
push
cmp
subl
adc
lcall
loopne
faddl
xchg
jo
rolb
lock
cmp
and
ss
inc
push
repnz
dec
mov
push
xor
lahf
inc
mov
xchg
daa
push
stos
xchg
jae
add
pop
jns
adcb
jl
and
adc
add
cmp
sbb
jnp
out
cs
int3
inc
inc
dec
push
and
lahf
out
sahf
gs
cmpsl
call
divb
es
inc
push
repz
repz
sahf
sub
cmp
mov
lcall
adc
sbb
repz
dec
push
es
cmp
sti
sahf
mov
push
imul
stc
rorb
push
or
out
push
repz
testl
jl
inc
fs
orb
inc
cs
mov
mov
mov
and
push
loopne
mov
cmp
lret
push
fcmove
push
pop
cmpsb
les
hlt
lock
xor
aad
movsl
cmp
ret
out
push
xor
in
sbb
sub
push
bswap
lods
pop
inc
lds
negl
mov
add
dec
mov
call
outsb
xchg
sbb
pop
andnps
test
sub
ret
mov
inc
adc
imul
arpl
sub
loope
and
sbb
test
mov
int
sub
ljmp
call
pop
js
es
jb
xor
adc
aaa
adc
cmp
cmpl
xor
stos
mov
adc
insb
mov
xor
mov
pop
or
adc
pop
xchg
xchg
mov
xchg
mov
ja
sub
gs
mov
add
lock
adc
pop
and
push
xchg
mov
mov
shlb
cmp
out
push
inc
into
adc
subb
dec
imul
fsubrl
mov
mov
lods
mov
jle
jns
add
je
jo
fdivl
test
int3
mov
xchg
jg
hlt
dec
ss
cmp
aaa
je
cmp
or
ret
dec
inc
and
push
aas
pop
push
and
lods
dec
mov
jl
sub
ja
add
sbb
lods
and
pop
jns
mov
push
aas
add
pushf
push
ss
loop
add
iret
lods
lea
pop
aas
adc
ja
xlat
add
xlat
fsubp
sahf
addr16
jne
pop
popa
mov
mov
or
cmp
or
xor
pop
adc
mov
cmp
jg
cmp
test
mov
cmp
jns
inc
jo
pushl
adc
mov
mov
add
or
lret
add
test
sub
and
dec
jae
insl
xchg
xor
jbe
pop
push
ss
push
lret
dec
pop
xchg
sahf
rolb
loop
rcrb
sub
adc
sub
xor
xlat
rcl
mov
in
sarb
insl
sub
in
aam
je
adc
mov
push
or
and
push
test
pop
sub
adc
outsl
cmp
mov
adc
mov
jne
mov
push
mov
pop
rcrb
xchg
mov
pop
js
into
push
cmp
xchg
push
mov
inc
push
and
mov
adc
push
sarl
or
add
loopne
int
popf
inc
inc
and
loopne
mov
fnstcw
xor
add
mov
decl
jl
and
lods
data16
pop
bound
jo
jns
mov
xchg
sub
mov
pop
push
cmpsb
mov
xchg
fs
add
popf
subl
jae
xchg
fnstsw
add
sbb
sbb
inc
sahf
push
jae
invd
and
mov
sbb
jmp
mov
inc
pop
or
xchg
cld
and
push
scas
push
xchg
mov
aas
pop
pop
mov
jae
jge,pt
pop
test
cmp
mov
adc
add
shlb
loopne
and
mov
repz
pop
jmp
rcrb
push
push
lds
js
cmp
adc
or
jle
sti
or
mov
loop
xor
xchg
adcl
test
sub
or
mov
orl
out
push
mov
dec
rorl
mov
dec
mov
push
outsl
jmp
adc
orb
sbb
mov
pushf
jmp
mov
mov
ficomps
out
sbb
test
idivb
je
or
in
dec
jle
sbb
cmp
jbe
test
sub
sbb
in
inc
fs
xor
push
push
or
mov
test
push
mul
mov
and
sub
das
lods
enter
int3
xor
testl
mov
add
add
daa
js
js
pushf
lods
push
mov
cmp
mov
jmp
and
push
dec
xchg
fsubs
dec
mov
subb
cs
sub
and
mov
enter
push
pop
xchg
loopne
cmp
pop
andb
dec
jl
add
lds
mull
xchg
lds
ret
je
cld
jno
ret
popl
lock
lock
jo
and
cwtl
clc
jle
and
pop
push
leave
mov
inc
adc
mov
and
dec
or
cmp
lret
mov
daa
and
and
dec
and
lock
xchg
or
sar
and
mov
rol
fcomps
inc
insl
jmp
mov
and
cmp
adc
les
aad
lds
mov
sbb
add
or
jns
lods
sbb
lods
push
add
repz
pop
stos
add
das
sub
orl
mov
adc
cmp
stos
xchg
jo
add
push
pop
pushf
rol
add
sbb
cmp
add
adc
insl
mov
popa
sub
pusha
adc
and
push
cmp
push
dec
cmpl
inc
lea
jbe
add
or
hlt
cwtl
cli
sbb
in
jle
lea
fistl
call
test
leave
mov
push
dec
jne
xchg
ficompl
ds
dec
out
dec
shlb
jmp
psubusb
push
subb
cmp
imul
mov
addl
lea
jl
movsl
push
stos
pop
adc
xchg
sbb
cmp
dec
cmp
jecxz
or
sbb
add
ja
jge
dec
sti
dec
inc
mov
jl
iret
cld
fisttpll
add
or
imul
mov
push
push
jmp
les
jne
xor
adc
ret
sarb
test
and
je
add
fdivrp
shll
insb
mov
cmp
and
shrb
jo
push
xchg
jmp
mov
clc
cli
rcrb
push
pop
aas
push
popa
sbb
imul
int3
les
shlb
jns
mov
cmpsl
jno
lock
push
pop
xor
xchg
aad
or
add
sahf
jmp
lret
jns
jl
add
inc
bound
fiadds
idivl
lcall
lea
mov
mov
jo
add
lret
sbb
and
pop
jno
xor
jl
lcall
add
sti
insl
movsb
xchg
dec
sub
ficompl
mov
das
push
scas
cwtl
push
loope
jns
mov
ja
jnp
and
mov
cmp
lods
and
rolb
fiadds
xchg
call
add
push
pop
in
ja
mov
movsl
ss
lahf
adc
push
mov
rclb
enter
inc
movsb
imul
or
or
shlb
jb
sahf
mov
and
leave
cmp
les
movsb
push
mov
mov
and
notl
lods
jp
imul
stos
jb
jmp
dec
push
xor
scas
xlat
xor
and
xor
test
sbb
mov
mov
mov
rcrb
movsb
adc
in
push
sbb
js
roll
inc
mov
mov
adc
cmc
les
imul
adc
push
jbe
insl
xorl
push
dec
out
jecxz
and
sub
cmpb
jae
popa
cld
and
mov
subb
test
icebp
jne
mov
mov
add
jo
cmp
push
inc
pop
and
clc
pop
push
mov
or
test
add
mov
shlb
cmp
fcompl
test
negb
cmp
jge
pop
and
mov
xchg
or
mov
ret
push
movsb
shr
sub
out
and
test
loope
insb
popf
cwtl
inc
sub
sub
and
pop
mov
je
mov
rcrb
inc
adc
xor
and
int
inc
xchg
push
mov
cmovp
je
push
pop
inc
cmp
jl
in
pop
pushfw
and
adc
mov
pop
push
jne
adc
adc
popa
and
ret
aam
cmp
adc
mov
mov
je
int
outsb
xchg
jo
ret
ret
mov
decl
dec
push
ret
in
push
aam
pop
out
sub
add
loopne
push
mov
adc
dec
xchg
xchg
adc
pop
push
or
mov
orl
adc
test
inc
dec
ret
cmp
decl
les
jns
mov
mov
push
xchg
sbb
xchg
out
pop
mov
inc
add
push
add
pop
add
movsl
cmp
insl
scas
cmp
sbb
pop
pop
out
adc
scas
jg
mov
fstps
mov
push
dec
sbb
fcomp
inc
or
lods
add
pop
mov
jg
jb
pop
outsl
xor
sub
jl
sbb
test
jnp
mov
js
push
lea
sub
andl
outsl
jp
orl
fmuls
enter
jle
xchg
adc
lock
out
add
jne
add
pop
inc
inc
popf
pop
mov
inc
add
mov
hlt
call
repnz
loopne
jle
mov
je
mov
test
or
call
xor
je
mov
sub
mov
xchg
xor
sub
lods
lea
js
fnsave
push
movsl
fs
adc
sbb
inc
stc
push
jne
call
dec
subl
test
je
fiaddl
inc
loopne
fisubrl
mov
pop
in
sub
ljmp
lret
enter
outsl
jmp
add
ficompl
idivl
popa
adc
inc
mov
pop
cwtl
cmp
rorb
fs
les
inc
sbb
jo
pop
lret
lea
add
cmp
and
pop
test
daa
fdivrl
hlt
xor
and
mov
cmp
mov
test
loopne
push
push
std
fwait
or
inc
add
push
inc
xor
je
add
fldl
push
in
add
int3
gs
adc
mov
or
sub
push
inc
push
inc
cmp
cmp
out
test
mov
pop
shl
imul
mov
push
xchg
lds
insb
addr16
aam
imul
scas
fisttpl
and
mov
mov
js
ja
jecxz
push
decb
sti
jmp
enter
shl
mov
sbb
das
inc
insb
cmp
int3
push
js
cpuid
pusha
mov
dec
adc
and
adc
loop
lcall
inc
pop
push
dec
xorb
dec
cmpsl
loope
filds
test
sbb
outsl
dec
cmp
scas
push
xor
lods
sub
adcl
jle
cwtl
lds
into
cmp
mov
fs
push
js
je
sti
orb
int3
jge
dec
mov
xchg
sahf
push
pop
mov
xorl
sub
shrb
pop
rclb
pop
lock
adc
pop
movsb
nop
and
push
dec
add
or
lods
mov
cli
pop
in
xorl
dec
loopne
jmp
cmp
adc
jmp
add
test
movl
shr
rcll
bound
mov
or
xchg
inc
daa
mov
rorl
nop
dec
loopne
pusha
pop
inc
pop
sbb
lea
dec
adc
push
into
jge
add
in
add
aam
ss
dec
cmp
xorl
push
add
xchg
xor
dec
jecxz
cmp
pop
cmp
mov
inc
aaa
movsb
cmp
lret
pop
adc
sub
adc
pusha
mov
imul
mov
or
sbb
sbb
pop
fldl
sbb
push
fstl
jo
jl
push
fsubl
push
mov
adc
mov
nop
adc
jne
lahf
jo
shll
push
xchg
pop
rcr
scas
mov
insl
jne
jmp
inc
sbb
orb
mov
and
and
in
notl
imul
push
mov
xlat
js
push
scas
push
test
leave
push
in
or
imul
or
ja
xor
dec
int3
addr16
imul
dec
adc
or
mov
vmread
add
loopne
loopne
cmp
cmovo
mov
addr16
xor
push
sbb
frstor
mov
push
jle
cmp
jo
mov
inc
ret
xchg
adc
movsl
orl
in
xor
sahf
aam
mov
hlt
pop
lock
mov
arpl
lret
push
or
and
dec
jnp
and
shrl
inc
mov
mov
xchg
push
clc
jne
or
push
and
js
mov
push
mov
fwait
inc
lds
jno
dec
inc
jl
ret
mov
sub
ljmp
mov
inc
stos
icebp
jmp
mov
push
daa
mov
xchg
jns
int
jns
pop
jns
fnstcw
xchg
mov
cmpsl
cwtl
jns
and
cmpl
adc
in
mov
mulb
jl
lret
mov
inc
cltd
add
mov
push
sbb
shlb
pop
sub
push
push
add
push
dec
xchg
add
dec
stos
and
push
fwait
inc
ljmp
lcall
add
lods
xchg
dec
adc
xchg
jae
fmuls
inc
fcompl
mov
adc
jb
sarb
addr16
test
sub
movsb
mov
sub
or
mov
mov
or
inc
adc
xor
mov
call
or
xor
dec
mov
add
mov
daa
add
dec
je
xor
push
andb
dec
or
test
cmp
add
lea
loope
fldl
cmpl
je
fstpt
rclb
push
mov
mov
pusha
xor
adc
jns
xor
out
call
ja
es
ret
orb
lahf
in
push
int3
out
insb
insb
pop
or
and
xchg
add
js
xor
dec
nop
pop
and
sub
loope
mov
adc
rorb
add
push
dec
int
ja
mov
xchg
mov
pop
test
inc
aam
and
jo
cld
pop
push
jge
mov
lea
add
add
dec
or
push
imulb
pop
fimuls
adc
adc
jmp
sbbb
in
movsb
or
stos
adcb
cmpb
xchg
or
cmp
cmp
mov
rcll
dec
ja
ljmp
jmp
rcll
mov
aam
push
and
ret
call
ret
and
sbb
and
jo
jo
psadbw
shlb
cmp
out
mul
mov
xchg
jmp
mov
push
fsubrs
and
mov
pop
cmp
inc
push
das
mov
shlb
and
pop
lret
cmp
jle
pop
adc
aam
lea
or
cmp
jne
or
xor
clc
je
push
sbb
or
inc
push
add
fs
sub
jnp
test
xchg
jecxz
add
mov
outsl
push
sbb
ret
dec
jae
sbbl
shlb
aaa
mov
mov
jle
mov
cs
add
jne
cmpb
jp
mov
sbb
ret
ret
lahf
rolb
pop
call
insb
cmp
push
test
test
sub
cld
cmp
mov
test
mov
aam
outsb
loope
fcmovnbe
dec
in
add
jmp
mov
js
stos
xchg
or
rcrb
inc
inc
sbb
fs
ja
mov
mov
or
imul
xchg
cmp
cmp
rorb
loopne
xlat
adc
ret
fs
dec
and
push
push
call
int
sbb
and
jns
inc
mov
jne
xor
mov
movsb
movsb
mov
or
es
pop
ret
inc
cmp
mov
dec
call
sbb
mov
jmp
sub
sbb
addr16
mov
fdiv
or
sub
xchg
in
clc
lock
cmp
jmp
xor
lods
stc
loope
xchg
loope
push
mov
dec
ret
push
xchg
add
pop
push
andl
fs
lahf
ror
in
pop
push
fmull
mov
adc
jne
xchg
fadds
or
add
fisttpll
fmuls
xor
scas
adc
in
lods
inc
and
lock
ds
add
int3
ret
sbbb
pusha
in
push
ss
cs
jge
popl
add
add
pop
int3
nop
dec
mov
fadds
sbb
shl
xchg
mov
in
into
push
nop
lock
jbe
enter
frstor
jmp
repnz
sbb
jmp
pop
jle
test
mov
push
jmp
pushf
js
pop
cwtl
cld
jo
push
sbb
pop
subb
and
push
inc
mov
and
scas
push
or
mov
loopne
call
loope
fisubrs
inc
loopne
cli
add
dec
pop
sub
pop
add
cmp
lea
xchg
inc
cld
daa
in
push
push
aam
aam
out
mov
or
add
movsl
pmuludq
mov
nop
ds
mov
insl
mov
cld
cld
stos
xor
sbb
imul
push
scas
xchg
nop
jl
xor
das
dec
or
inc
je
cmpl
cli
in
adc
sbb
fldl
aas
lret
mov
pop
sub
ror
jmp
xor
out
int3
std
add
or
mov
adc
test
push
loope
inc
popa
dec
jle
movl
xor
sarl
rclb
lods
test
mov
popa
mov
mov
cmp
sbb
mov
insb
pop
js
ffree
ss
scas
xlat
adc
mov
mov
or
clc
js
stos
daa
jl
mov
imul
adc
fs
pop
mov
mov
cmpsl
push
xchg
into
xor
clc
andb
imul
push
cmpsl
test
sbb
cmp
mov
mov
push
lret
loope
add
dec
jnp
sub
push
sbb
push
pinsrw
sbb
aaa
pop
pop
pop
dec
out
push
mov
mov
add
sbb
lret
nop
adc
push
or
push
jo
and
adcb
xchg
popa
fildll
cmp
hlt
jns
jp
add
arpl
call
pop
pop
inc
dec
mov
cmp
adc
lds
popa
push
add
dec
fwait
jne
jmp
popf
xorl
or
loopne
sbb
mov
xor
sbb
push
fcoms
xchg
loopne
or
mov
adc
mov
push
mov
mov
add
sbb
and
or
sahf
pop
pop
cltd
ds
cmpl
push
pop
movsb
or
jle
mov
loopne
add
sub
daa
xchg
ret
je
jp
stos
mov
cwtl
inc
sbb
jne
xchg
rolb
add
jne
push
push
sub
add
sti
ret
adc
xchg
dec
push
jo
jne
cmp
and
iret
inc
bound
mov
mov
leave
xorb
sarb
add
testb
daa
pushf
push
xor
push
rolb
insb
jl
ja
sub
out
pop
mov
jnp
mov
mov
mov
sub
add
loopne
cmp
sbb
and
aam
xor
cmc
fldt
sub
push
imul
xor
sub
ja
movsb
dec
or
rolb
out
adc
cmp
loopne
or
stos
push
jo
pusha
push
jne
cmp
iret
repz
add
xchg
add
add
mov
sti
loopne
les
lcall
mov
cld
ffree
lea
push
cmp
push
push
push
adc
push
outsb
in
rolb
xor
or
cmp
dec
push
into
pop
popa
cld
push
push
push
push
push
jnp
shr
add
lock
lods
sbbl
lods
xchg
pusha
in
add
sub
jne
mov
pop
xor
bound
xor
not
pop
add
push
mov
and
ds
sub
push
clc
sbb
lea
ljmp
adc
add
mov
jns
insb
jge
sahf
add
test
movsl
popa
push
pop
xchg
sbb
xor
sbb
into
insb
pop
xor
je
in
ret
and
addr16
andb
loop
lods
push
arpl
cmp
sbb
xchg
aad
push
add
sbb
or
sub
push
and
and
iret
adc
jne
pusha
test
sbb
and
or
dec
pusha
adc
test
dec
adc
push
cs
test
imul
mov
inc
mov
movsl
cmp
test
and
cmp
rcl
adc
cmp
inc
mov
push
dec
movsl
mov
cmpxchg
xor
add
jmp
push
adc
mov
aas
jmp
jae
jno
mov
ucomiss
sub
adc
shlb
push
outsb
ret
clc
jo
cmc
xor
into
sub
mov
and
mov
fcmovb
jb
shrl
xchg
mov
xor
sarl
testl
xlat
pop
lret
jns
dec
decl
jb
push
push
das
aas
ds
enter
jae
xlat
xor
shrb
dec
inc
jo
mov
aas
cmpsb
cli
div
push
add
xchg
sbb
lea
dec
xchg
pusha
or
cmp
mov
clc
insl
test
popa
push
push
cmc
loopne
jmp
adc
inc
ds
clc
or
dec
pop
push
mov
neg
inc
push
jb
std
cld
xor
or
or
addr16
ja
outsl
push
inc
or
stc
add
add
ret
or
xchg
jae
and
adc
mov
fwait
ret
adc
dec
xchg
fisubrl
sub
xor
and
or
mov
das
pusha
inc
mov
cmp
mov
addl
aaa
xchg
push
xor
and
sub
in
fidivs
add
std
xchg
test
dec
orb
adc
mov
cmp
adc
sbb
push
sub
movsl
jmp
and
sub
push
sbb
inc
inc
rcrb
insb
mov
inc
fnstsw
idiv
dec
push
cmp
add
into
and
mov
cmpsl
divl
and
ja
in
mov
mov
mov
sub
in
rcrb
ret
inc
pop
popa
and
mov
es
sub
adc
pop
test
mov
pop
in
stos
add
in
ljmp
xor
test
push
dec
inc
mov
ret
fwait
mov
dec
dec
push
pop
mov
and
push
mov
cmp
mov
add
and
push
jbe
pop
fimull
addb
lcall
into
sbb
sbb
mov
push
in
inc
push
sub
and
pop
loope
fwait
ss
push
add
scas
and
jo
sar
dec
mov
jmp
movswl
push
addl
scas
mov
adc
cmovae
dec
jl
pop
cmc
inc
push
lahf
aad
jo
rolb
xor
sbb
push
out
jns
ja
xor
fstps
add
add
add
sbb
sub
mov
inc
and
cmp
into
repz
jns
loope
jae
fistps
jne
xor
repnz
push
loop
dec
pusha
hlt
cwtd
fiadds
dec
outsl
add
cmp
adc
dec
cmc
jo
pop
adc
pop
or
loop
bound
jo
cmp
pop
adc
sub
insb
xchg
or
mov
dec
dec
xor
push
dec
fsubrl
test
aad
clc
insl
pop
scas
dec
sub
xlat
cmpsb
push
pop
orl
jb
lahf
mov
in
push
movsb
add
push
pop
pushl
outsb
push
push
stc
xor
outsb
push
pop
stc
pop
les
adc
jb
pusha
or
pop
xor
push
sbb
pop
sub
movsl
and
jne
jbe
add
mov
lods
jbe
xlat
rcrb
sbb
testb
push
scas
mov
mov
je
pusha
mov
mov
and
ljmp
jp
push
adc
pusha
gs
mov
lret
test
pop
mov
sbb
cltd
leave
pop
lret
loop
or
lcall
sub
cmp
fimull
aaa
pop
and
inc
or
xchg
adc
adc
js
inc
ss
inc
mov
scas
inc
pop
pop
jmp
push
notb
push
das
pop
mov
pop
sub
mov
push
sbb
aaa
or
pop
dec
fwait
sbbb
jne
loope
mov
mov
mov
pop
adc
lds
outsl
repz
je
repz
rcll
xchg
lds
cwtl
push
frndint
pop
push
lret
pop
add
xchg
adc
in
cld
fnstsw
test
xlat
pop
push
push
mov
and
push
cmp
in
push
cltd
jo
lcall
out
mov
jmp
dec
mov
add
xchg
mov
pop
ds
mov
or
cmp
jne
inc
jp
insl
sub
out
popf
imulb
loop
mov
adc
leave
and
roll
or
in
jbe
jns
sub
inc
inc
or
cmc
push
xor
call
xchg
rolb
insl
push
cmp
je
and
inc
cmp
scas
loopne
jl
xchg
jo
dec
sub
jb
mov
sahf
rorb
push
xor
pop
cmp
dec
xlat
adc
xchg
sbb
fisttps
xchg
xchg
pop
add
enter
jb
or
mov
aas
adc
cmp
repnz
mov
adc
mov
jge
push
sub
pop
hlt
inc
ljmp
jne
lea
xor
pop
add
stc
push
adcb
mov
xor
cmpl
adc
mov
xor
xor
sbb
pop
int3
insb
and
test
xor
add
push
dec
cmpsb
jmp
sbb
sub
xor
sub
push
int
and
mov
sub
sahf
inc
cmp
dec
daa
in
dec
push
out
aam
pop
cld
xor
jae
push
adc
or
adc
dec
xlat
clc
fadds
mov
xor
mov
sub
popf
cmpsl
stos
push
test
in
cmc
mov
and
repz
push
xor
int
jl
int
xchg
and
aaa
cmpl
mov
pushf
mov
push
or
cmp
mov
lahf
sub
push
rclb
in
mov
mov
sub
shr
fwait
add
mov
and
std
push
lahf
fwait
add
pusha
divl
mov
add
inc
ficomps
punpckldq
inc
and
mov
push
enter
pop
nop
sub
sub
icebp
mov
xorb
push
mov
pop
pop
aas
pop
ljmp
ret
mov
or
out
sbb
dec
xor
adc
mov
xor
push
sub
push
lea
or
fwait
sbb
out
or
lods
mov
push
test
insb
test
sub
sbb
fdivrs
push
sbb
inc
sub
cmp
popa
xchg
inc
sbb
xchg
mov
cmc
cmp
test
pop
rcrb
in
test
mov
mov
test
push
xchg
mov
adc
xor
dec
push
jp
sub
jb
xchg
inc
sub
push
loope
jecxz
push
mov
rolb
jge
scas
aad
test
aam
or
in
add
xchg
or
and
and
out
push
lcall
push
mov
push
mov
lock
cmp
or
push
mov
stos
adc
sbb
push
sub
xor
aaa
stc
add
mov
or
test
push
inc
scas
adc
sub
lahf
rolb
add
int
xchg
mov
insl
mov
aaa
leave
ljmp
and
fidivrl
popa
leave
add
xor
mov
loope
xchg
ljmp
mov
lods
ja
xor
xchg
and
dec
lret
sub
xor
mov
adc
mov
in
push
pop
dec
cmp
pop
and
test
pop
mov
xor
adc
sbb
addl
sbb
and
push
mov
mov
pop
fmuls
xchg
popa
enter
popf
cs
lret
adc
js
ret
xchg
lea
sbb
cmp
in
mov
and
jle,pn
mov
mov
lret
test
jne
pop
dec
push
icebp
xchg
or
fs
sbb
sbb
mov
adc
aad
in
fisubl
hlt
adc
addl
pop
aaa
adc
je
pop
inc
inc
mov
mov
shl
pop
mov
in
xor
test
ret
enter
je
jg
sbbb
pop
xor
push
insl
loopne
arpl
push
aam
ret
loope
pop
adc
lods
push
mov
mov
jb
cmp
inc
push
decb
xor
push
inc
neg
sbb
and
xor
jle
stos
push
rcl
out
pop
movups
adc
pop
jbe
ss
mov
push
mov
jne
and
xor
stos
add
push
pop
mov
gs
nop
push
arpl
mov
adc
pop
jo
fisubrs
mov
jecxz
adc
scas
les
ror
aaa
jmp
sbb
je
pop
les
movswl
add
test
nop
jo
sub
cmp
cmp
in
mov
push
sbb
xor
sub
or
repnz
sub
andl
sub
test
mov
cmp
sbb
add
loopne
dec
add
cmp
cmp
sbb
call
jae
push
push
inc
bound
dec
or
dec
inc
repz
cs
push
xor
sub
and
sbbb
and
aad
dec
xchg
fisubl
lods
rorl
cmp
cmc
adcl
adc
jo
mov
mov
lds
pop
lds
push
pop
jl
pop
fstpt
ja
mov
mov
bound
mov
mov
mov
test
cmp
pop
jb
push
call
cmp
jp
cld
mov
cmp
or
jb
pusha
bound
push
push
push
xchg
shl
sub
adc
cwtl
cmp
in
call
ja
inc
cld
xor
fs
pop
dec
push
cmc
lcall
loop
and
dec
lods
lds
cwtl
fs
inc
daa
and
add
pop
inc
pop
dec
dec
lods
xchg
js
adc
mov
cmp
sub
mov
push
xor
das
cmpb
inc
ss
push
test
shrl
idivl
mov
ss
out
movsb
dec
mov
repz
xchg
fwait
inc
mov
lcall
sbb
insb
add
aam
repnz
or
add
std
jno
mov
mov
or
add
jge
mov
jle
cmpsl
adc
push
jo
hlt
pop
inc
int
cmp
add
enter
fincstp
dec
add
mov
mov
jl
xor
jb
cmp
sbb
add
pop
push
pop
dec
sub
cmpsl
addr16
ret
pop
inc
inc
and
sub
leave
orl
xchg
mov
add
mov
add
test
inc
add
out
dec
jge
mov
or
push
ds
mov
sub
and
xor
dec
int
add
mov
or
add
pushl
imul
xor
cmp
sub
mov
fists
insb
ss
sti
test
jo
jl
jb
sahf
xor
or
adc
adc
aas
jne
cmp
push
add
push
pop
rolb
into
xchg
xorb
sub
push
push
sbb
dec
es
in
cmp
dec
repnz
sub
js
jb
ja
jg
pop
push
jl
in
jmp
push
xor
inc
xlat
add
xchg
xchg
jne
pop
in
mov
mov
fnstenv
push
ret
mov
addb
dec
dec
or
or
movsl
mov
push
and
and
sub
or
stc
and
cmp
push
int
mov
inc
xor
inc
push
ss
fs
insb
jo
inc
xchg
jl
cmp
inc
in
sbbl
xchg
pop
mov
mov
mov
push
inc
jno
jp
add
push
add
lods
push
cmp
fistps
std
adc
xor
xor
fcmovb
test
inc
push
lea
in
cmp
aam
outsb
mov
pop
fadd
pusha
cmc
push
sarl
mov
push
and
push
fldl
cmp
in
jl
les
cmp
mov
fs
adc
inc
mov
repnz
pop
and
jle
ljmp
jp
push
sbb
and
mov
push
push
sbb
insl
cld
aad
in
mov
mov
ljmp
sub
sub
mov
xchg
mov
xor
mov
aam
rorl
rcll
ret
fistpl
or
enter
aam
dec
sbb
testl
sub
add
push
pop
les
fcmovnu
cmp
cwtl
or
mov
fmul
fstpt
ja
jl
pop
jmp
sbb
repz
or
and
imul
jl
or
push
xchg
fimuls
add
cmp
sbb
mov
pop
mov
ss
xor
pop
jbe
rcrb
jbe
pop
int
cmp
icebp
pushl
jne
mov
push
icebp
adcl
ds
nop
ja
jne
pop
push
aam
mov
popa
es
push
xor
sbb
sbbl
xchg
andb
ficoml
pop
mov
mov
stos
mov
ficoml
jbe
xchg
je
push
test
aas
lea
push
jl
add
add
aam
dec
into
adc
xor
scas
adc
sub
popa
scas
fs
add
push
push
mov
mov
bound
and
inc
cli
in
loopne
cmp
cmp
mov
inc
lock
mov
push
xor
mov
mov
dec
adc
cmp
scas
adcl
sub
pop
inc
pushf
sti
and
or
mov
add
push
or
dec
add
adc
bswap
push
or
xchg
clc
sbb
sbb
gs
loop
sbb
insl
jmp
or
je
add
dec
movsb
aaa
jbe
xlat
cmp
xchg
je
and
jmp
jae
and
sub
add
cs
and
lcall
dec
dec
push
inc
push
addr16
mov
sti
and
out
lea
sub
xor
push
push
jle
jo
fdivr
aas
lea
mov
and
incl
lcall
out
add
adc
inc
loope
or
sub
ds
fdivl
inc
bound
inc
xchg
and
loopne
xchg
rolb
outsb
push
sub
das
dec
sub
sub
push
aad
dec
aam
mov
bound
loop
cmpsl
and
mov
inc
negb
lret
sbb
xorb
sbb
jns
jns
cwtl
xor
jne
pop
xor
mov
mov
sarl
shlb
rorb
sbb
out
lods
xor
dec
test
aaa
lock
mov
dec
mov
ljmp
je
push
and
add
xor
dec
test
sbb
imul
jne
ret
in
sub
es
pushf
ss
fcoms
lock
adc
add
aas
xor
popa
pop
adc
repz
cwtl
add
push
mov
iret
int
lahf
ret
fisubrl
bound
mov
hlt
mov
inc
pop
adc
adc
mov
sbb
or
cmp
xor
dec
jae
adc
aad
lret
adc
push
ds
cmp
or
inc
pushf
dec
sbb
push
imul
and
add
push
mov
mov
xor
and
inc
lods
pop
pop
cmp
add
push
jo
imul
adc
lret
cmp
pop
sbb
dec
xchg
mov
push
sbb
in
push
adc
jbe
push
sbb
inc
sbb
adc
in
mov
dec
cmp
insb
mov
xlat
imul
mov
lea
push
jecxz
or
or
test
loop
jnp
push
fstpt
push
sub
or
or
jo
push
repz
adc
push
pop
in
push
scas
imul
or
mov
insb
cmc
sub
cmp
repz
je
adc
aaa
cmpsl
add
mov
xor
data16
push
loopne
cmpl
push
popf
lret
mov
out
mov
mov
cld
mov
loope
xor
dec
add
mov
mov
jl
lods
mov
call
push
sub
sub
cwtl
sub
popf
aad
scas
and
sub
and
cmp
mov
test
cmpb
les
adc
mov
dec
or
push
push
cmp
sub
and
xchg
imul
scas
pop
aam
push
inc
push
fadds
push
mov
aam
sbb
test
jp
jp
xorl
sbb
scas
xor
pop
or
sbb
bound
xchg
enter
lods
and
push
mov
sub
lahf
sbb
inc
negl
mov
add
imul
or
bound
sbb
pop
push
mov
shrb
adcl
jecxz
push
jbe
sarl
scas
sub
xor
loope
mov
test
and
jne
add
and
or
arpl
and
scas
push
mov
cltd
mov
xchg
xchg
lods
fldl
inc
or
enter
or
scas
stc
lcall
push
mov
aas
popf
jle
dec
repz
setle
inc
arpl
fiaddl
cmp
repz
imul
out
mov
jg
negl
insl
je
test
mov
mov
mov
or
je
pop
mov
inc
movsl
inc
xor
inc
inc
pop
imul
sbb
push
inc
pop
sahf
mov
sbb
enter
nop
in
cli
jns
sbb
jae,pn
or
cmp
test
in
lea
sbb
cmp
adc
insb
and
and
push
std
je
xchg
daa
loope
inc
inc
inc
std
add
cmp
arpl
leave
je
lret
mov
push
mov
pop
lret
mov
roll
jl
lods
jl
add
add
mov
mov
rcrb
push
nop
enter
dec
or
mov
lahf
out
ss
push
aad
sbb
iret
repz
cwtl
stos
mov
std
shld
sahf
out
sahf
nop
movsl
mov
adc
push
movsl
and
pop
aaa
inc
cmpsl
mov
pushf
movsb
syscall
lods
mov
movl
nop
out
dec
mov
jne
imul
sahf
lods
add
sti
push
aam
mov
or
push
lea
cmp
cmp
cmp
test
pop
cmc
sbb
fimull
lea
or
and
jbe
test
jne
sub
lods
mov
in
jle
or
push
cld
xchg
and
push
xor
adc
shrl
ret
mov
rolb
mov
movnti
movsb
ret
jne
push
mov
sbb
inc
fcmove
pop
or
push
fwait
sti
and
mov
test
or
push
cmpsl
sbb
xchg
or
pop
nop
or
adc
push
adc
inc
xor
mov
xchg
pop
push
adc
add
and
outsl
sbb
loop
cmpsl
jbe
rcrb
pop
in
cmp
and
je
add
push
xchg
push
mov
dec
pop
test
adc
orl
xchg
pop
mov
or
mov
enter
movb
pop
les
aas
shrb
ret
pushf
xor
xor
das
aaa
sbb
jo,pt
push
imul
mov
push
push
pushf
leave
orb
sbb
sub
das
push
lock
add
sub
add
enter
sbb
mov
and
pop
mov
xor
mov
sahf
sub
pop
movsl
jb
xchg
xchg
or
test
cmp
mov
push
adc
stos
mov
push
pop
xchg
sbb
mov
sbb
insb
and
sub
movsb
pop
fists
mov
dec
cmp
lea
xor
jno
inc
dec
sbb
sbb
pop
lea
sbb
test
cmp
push
add
dec
je
inc
repnz
xor
mov
loope
xor
nop
mov
jne
push
push
adc
mov
fwait
cmp
sub
jb
cs
pop
or
loopne
fsubr
xchg
dec
in
fsubs
bnd
movsb
das
call
mov
pop
loopne,pn
mov
push
push
dec
and
push
enter
pushf
sbb
inc
pop
test
or
clc
push
pushf
pop
mov
je
loope
fildl
imul
xor
daa
mov
mulb
mov
push
mov
out
popf
roll
push
lret
shl
int
sbb
sbb
mov
and
loop
rclb
mov
push
and
mov
fst
dec
adc
or
or
in
and
and
xor
and
sub
lds
sbb
sbb
push
inc
mov
xor
movsl
push
vpcmpeqd
ljmp
dec
fidivrl
jle
imul
les
add
and
negb
mov
inc
cmp
sbb
call
push
xchg
or
orb
add
neg
mov
mov
rorb
ss
stos
or
test
sub
sbb
stos
mov
or
cmp
push
push
adc
push
push
push
cmp
xor
pop
and
cmp
cmp
add
add
cmp
loopne
jnp
inc
xchg
outsl
mov
shll
rcrb
inc
inc
jmp
jecxz
fwait
push
ret
rol
push
jge,pn
test
mov
mov
bound
pop
repz
les
subb
or
sub
add
add
add
jnp
push
push
ret
test
jns
pop
fnstcw
ret
add
push
orb
jge
aad
pop
mov
nop
je
jg
cmp
or
and
jg
jns
mov
nop
mov
mov
or
rcrb
xor
pause
pop
xchg
aad
inc
xor
ret
push
lea
add
dec
movsl
xor
cld
add
jb
sub
call
sbb
sbb
ds
int3
enter
out
mov
mov
lods
sar
cld
jb
mov
add
out
jle
je
sub
add
add
lods
loopne
sbb
cli
jbe
dec
dec
fbld
push
jle
andb
pop
add
mov
mov
add
ja
add
cmpsb
rcll
push
sbb
push
das
sub
lcall
ja,pt
imul
xor
insl
push
bound
and
std
repnz
dec
sbb
notl
shlb
je
imul
push
mov
icebp
dec
push
lds
fdivrp
enter
inc
data16
sar
sar
sub
sub
pusha
push
push
push
and
xchg
xor
imul
push
push
and
test
jle
push
and
push
in
les
adc
pop
addr16
pop
sbb
inc
jmp
outsl
aad
push
enter
fldenv
push
gs
jmp
pop
mov
out
cmp
sahf
das
in
cmp
scas
add
mov
ja
insb
and
xor
pop
rcr
lods
push
ds
pop
jo
es
mov
ret
orl
mov
int
jmp
fsubrl
test
pop
add
or
test
dec
inc
cmc
cmp
lods
lea
and
loope
outsl
mov
mov
stos
pop
pop
xor
mov
inc
sbb
push
push
ret
adc
fs
cwtl
add
adc
cld
in
inc
rorl
adc
lret
jecxz,pt
inc
pop
jae
lds
cmc
ret
ds
lea
iret
push
xor
push
sub
lcall
pop
adcb
loopne
outsb
sub
out
movsl
and
test
popf
ret
div
inc
sbb
xor
and
pop
in
loopne
repz
jo
add
inc
pop
mov
pop
sub
mov
and
jb
sbb
dec
push
mov
fisttps
aam
cmp
xor
inc
inc
cmp
adc
mov
leave
dec
cmp
jae
fs
push
enter
sbb
push
xor
fimuls
iret
addb
cltd
inc
adc
mov
mov
loopne
aad
push
mov
insb
aas
dec
sbb
jecxz
ret
mov
call
inc
scas
adc
inc
and
jge
dec
cmpsb
and
xchg
add
ds
mov
jle
dec
jl
or
sbb
je
ret
mov
mov
loop
pop
pop
push
sbb
mov
push
add
push
xor
insl
jl
dec
je
push
pop
dec
shll
sub
add
xor
sub
push
pop
addr16
leave
inc
dec
mov
xchg
loop
dec
push
mov
or
add
and
push
inc
mov
cmp
loope
jg
mov
cmp
lds
push
ja
mov
xchg
dec
lock
jge
pop
jb
push
push
cmp
jle
dec
push
imul
push
sub
and
add
enter
hlt
movb
inc
adc
ret
in
jmp
inc
inc
loope
add
adc
add
cmp
fiadds
out
pop
testl
aas
loope
mov
aad
lds
inc
incl
mov
test
push
mov
sbb
daa
jmp
lods
pop
in
pop
cmp
push
or
push
filds
add
add
xchg
shlb
mov
imul
xchg
ret
stos
in
pushf
mov
pop
adc
fdivs
mov
xchg
aas
lods
pop
jp
mov
in
xor
dec
jg
push
orw
mov
jb
add
sub
dec
jb
pop
lret
fstl
cmp
bound
clc
mov
lcall
sub
jns
jge
xchg
add
mov
lds
mov
ffreep
dec
addl
push
les
or
pushf
sbb
cmovp
sub
adc
lds
hlt
xlat
rorb
jg
jecxz
rorb
mov
push
jl
pop
cmpsb
ficoms
xchg
dec
sbb
add
inc
pop
add
addl
je
add
test
mov
je
cmp
das
mov
mov
pop
loopne
mov
push
adc
sub
insl
daa
adc
daa
out
pop
push
pop
push
dec
mov
add
cmpsb
out
mov
cmp
jae
jbe
jno
push
push
or
adc
sbb
inc
or
jb
lock
mov
mov
dec
add
and
or
ss
das
push
dec
aam
sub
je
push
and
imul
adc
psubb
std
xor
cmpl
into
es
cmpsb
push
mov
iret
push
es
and
mov
mov
sub
jne
push
push
jns
les
inc
or
cmp
cmp
mov
call
ljmp
and
shrl
jmp
or
push
loopne
adc
rorl
sahf
pop
push
inc
mov
sub
cli
jno
ja
cmpl
adcl
and
sub
lahf
sub
notl
xchg
insb
sub
dec
or
leave
ret
mov
dec
rcrb
dec
fs
xor
add
mov
adc
xchg
fmull
jno
lds
dec
pop
into
fimull
pop
std
adc
xchg
mov
cli
adc
or
stos
xchg
lret
sub
pop
call
push
mov
pop
xor
sbb
push
push
scas
push
mov
les
cmp
xchg
xchg
mov
cmp
or
fs
adc
out
jp
adc
loop
and
cmp
sbb
xchg
ret
mov
adcl
or
lcall
gs
ljmp
push
fisubrs
pop
cmpsb
adc
in
cmpsl
mov
inc
call
sub
inc
adc
jne
sbb
cmp
cmc
push
mov
aam
out
xor
loopne
data16
dec
xchg
and
mov
out
push
xlat
adc
testb
cmpl
add
loope
inc
dec
mov
cmp
mov
mov
cmp
mov
ret
add
push
or
push
inc
pushf
push
mov
inc
push
jae
movsl
or
push
aaa
fs
lret
sbb
sbb
cmpsl
lea
add
add
add
sbb
push
add
mov
shrb
mov
add
push
and
mov
xchg
mov
xchg
insl
mov
outsl
out
mov
jno
and
cmpb
dec
mov
push
and
xor
and
mov
clc
cmp
mov
mov
or
pop
cmc
mov
cmp
loopne
xor
in
mov
fs
movsb
ret
mov
movsl
and
lods
inc
push
pushf
ss
xchg
pusha
sahf
std
mov
cmp
loope
leave
pop
mov
add
mov
loop
pop
out
add
mov
inc
pop
roll
sub
in
pop
cmpsb
sbb
xor
push
dec
xor
movsl
sbb
or
movb
icebp
add
or
cli
xor
sbb
push
sbb
xor
lods
xor
pop
ret
mov
fwait
sub
add
xorb
loop
add
movsl
test
flds
dec
pop
or
out
pop
std
or
fadds
fdivrs
pop
subb
aam
sahf
mov
pop
inc
aas
cmp
fistl
and
mov
and
mov
sbb
popf
xor
pop
call
pop
adc
ret
add
sbb
add
into
xor
pop
les
xchg
test
mov
dec
push
cmp
cmpsb
lods
ret
int3
dec
mov
fisttps
loopne
jae
jo
scas
jo
cmp
mov
sahf
dec
js
fisttps
cmp
jle
dec
sub
addb
hlt
xchg
cmpsb
pop
and
lea
mov
xchg
mov
and
push
sub
shl
push
sub
adc
xchg
dec
adc
popl
xorl
and
pop
ret
or
mov
loopne
arpl
dec
and
inc
loopne
push
in
inc
dec
dec
push
movsl
and
or
mov
jl
shlb
loop
dec
int3
mov
dec
sbb
adc
pop
dec
loope
or
jge
dec
sub
xchg
cltd
push
rcll
push
rcrb
add
daa
xor
mov
jecxz
cmp
test
mov
lret
sub
jne
inc
loop
lcall
jns
out
lods
in
pusha
lret
negb
mov
pop
sbb
fdivrs
add
js
mov
or
inc
sbb
inc
adc
repnz
mov
insb
fidivrl
add
rcll
push
jecxz
xor
push
and
fnstenv
xor
inc
movsl
andl
adc
scas
aas
repz
std
pop
sub
pop
repnz
xor
gs
cmp
mov
xlat
roll
iret
pop
inc
les
adc
and
sbb
lea
sbb
push
jecxz
xchg
stc
cmp
push
push
jne
jno
roll
mov
xlat
std
inc
dec
pop
add
adc
dec
icebp
xor
addr16
sbb
xchg
sub
add
push
xchg
jp
sub
xor
inc
stos
xchg
adc
pop
add
movsl
dec
cli
loop
add
leave
jae
adc
sub
sti
cwtl
fs
or
icebp
push
push
push
push
cmp
data16
incb
jo
pop
dec
pop
dec
mov
mov
push
push
add
pop
add
mov
adc
xchg
std
xorb
add
inc
es
je
mov
and
lahf
add
adc
testl
dec
jne
imul
je
inc
and
inc
xor
outsl
and
cltd
addb
sub
or
clc
inc
sbb
inc
cmp
pop
dec
pop
push
xchg
mov
lcall
fisttpl
mov
add
xchg
inc
outsl
and
es
xchg
pop
sbb
loop
fldenv
pop
cmp
cs
adc
fmuls
mov
flds
mov
inc
repz
jmp
cwtl
leave
fsubrs
sub
cmp
sub
lods
hlt
xor
rol
mov
repz
mov
rolb
notl
test
xchg
jle
adc
cmpl
xchg
or
and
jno
std
push
xchg
test
sbb
and
daa
imul
aad
sub
sub
popa
insb
lods
je
push
pop
mov
dec
mov
ret
add
dec
mov
out
mov
and
or
dec
push
mov
mov
add
mov
mov
push
adcl
xchg
pop
clc
fsubp
out
andb
jl
add
out
cmpsl
mov
in
jne
jp
sbb
jno
sub
fldenv
ds
sbb
arpl
cli
mov
jnp
pusha
jns
add
xor
mov
inc
mov
jl
sar
jne
divb
fwait
aam
call
mov
cs
inc
sub
add
sbb
sub
push
andl
aad
sub
les
jnp
xorb
iret
mov
rol
je
add
call
sbb
mov
sbb
arpl
xchg
jmp
fs
mov
gs
xchg
ja
or
in
in
mov
inc
mov
pushf
lcall
mov
jp
push
outsl
sahf
imul
or
jo
sub
push
sbb
and
test
push
addr16
das
lods
mov
mov
je
outsl
imul
fsubs
movsl
lcall
in
pop
ret
pusha
gs
ret
insb
cmp
loope
mov
pop
pop
lods
xchg
jb
jmp
inc
cmp
sub
jne
mov
push
sbb
xchg
insl
fwait
stos
xorl
mov
ljmp
jle
das
inc
push
add
add
rcl
cmp
xchg
mov
and
or
cmp
jo
push
xlat
add
loope
movsl
in
js
xchg
sbb
rcrl
sbb
jbe
sbb
pop
cmp
and
ja
icebp
int
inc
mov
and
enter
aam
add
adc
je,pt
outsl
sbb
loope
addl
mov
mov
jg
sbbl
mov
jle
cmp
or
or
fists
inc
pop
icebp
in
sbb
adcb
es
add
dec
cmpsb
arpl
and
jns
sahf
es
xlat
data16
fldl
jmp
sbb
or
adc
jge
mov
ss
fiaddl
jle
jg
mov
cmp
test
jecxz
clc
add
push
mov
or
insl
rcrl
or
loope
or
cli
cwtl
fs
mov
mov
into
adc
call
inc
stos
jle
mov
and
aad
sub
pop
pop
sub
daa
mov
adc
dec
pop
shl
xor
inc
dec
imul
and
push
xlat
and
mov
pop
popa
cli
dec
in
and
cs
cmp
dec
inc
add
inc
clc
clc
jbe
cmp
mov
ljmp
shlb
sbb
stos
pop
cmp
adc
lock
add
push
out
cmp
or
es
sub
push
sbb
inc
mov
lret
cmp
imul
dec
add
adcl
inc
inc
rolb
cli
shl
add
jle
xchg
cmp
movb
aaa
mov
or
jle
inc
jl
and
loopne
mov
fdivrs
test
xor
sub
loop
or
sub
inc
cmpsl
cmp
bound
xchg
test
push
insl
nop
xor
loope
cs
dec
jg
mov
push
out
stos
and
sbb
cmp
out
and
movsb
inc
xchg
int3
and
std
inc
and
and
out
rolb
xchg
add
andb
cmp
ficomps
cmp
mov
push
adc
pushf
rorb
and
adc
pushf
clc
test
out
fbstp
pop
add
fstl
pop
imul
mov
loop
add
add
movsb
sub
sub
cmp
push
push
pop
adc
inc
jnp
outsl
sbb
call
sub
scas
adc
pop
jo
pop
shrl
add
or
addl
das
stos
add
mov
mov
dec
sti
inc
inc
push
xchg
pop
rclb
xchg
insb
push
pop
mov
or
cltd
jmp
mov
xor
and
pop
cmpsb
scas
or
push
adc
mov
jmp
xor
add
mov
popa
mov
cmp
push
enter
sti
push
add
mov
mov
mov
lea
mov
js
mov
lea
bound
cmp
or
cli
imul
cmp
mov
push
popa
fisttpl
daa
je
jne
cld
call
mov
repz
dec
mov
rclb
pop
loop
or
mov
lods
js
add
inc
xor
sub
and
inc
xor
pop
addb
jns
adc
or
cli
cmp
rcll
scas
sub
mov
inc
pop
cmp
std
jne
sub
cs
push
mov
push
and
lock
xchg
push
push
pop
mov
xchg
and
daa
and
cli
xor
adc
sub
add
fmuls
mov
sbb
sbb
and
aaa
add
sub
lret
push
je
inc
and
or
and
or
push
inc
push
mov
push
inc
sbb
js
fidivs
rclb
adc
mov
inc
cmc
mov
and
inc
gs
push
out
mov
mov
punpcklbw
inc
cs
or
test
add
and
or
sahf
push
xor
mov
adc
roll
mov
sbb
cmpl
call
xchg
inc
or
sbbb
push
and
add
mov
test
jg
sbb
mov
lcall
cmp
sub
mov
add
arpl
or
cmp
push
sar
mov
clc
sub
hlt
xchg
push
pop
es
cmp
dec
push
cs
push
inc
inc
inc
sub
sbb
cmpsl
adcb
aam
xor
push
cmp
sub
sbb
pop
add
test
loope
rorb
leave
fs
cmpsl
sbb
xlat
push
das
xor
aam
in
jge
xlat
aas
pop
iret
sub
and
sbb
shrl
pop
or
fwait
jne
pop
xor
outsb
test
sbb
and
scas
fs
clc
mov
push
xlat
add
sbb
inc
loopne
repnz
jmp
test
rorb
push
test
push
xchg
in
add
pusha
test
pop
adc
loope
cmpsl
test
add
rolb
or
or
sbb
jl
xor
xchg
out
adc
jae
movl
push
ds
jns
push
or
jo
cli
mov
cmp
mov
nop
inc
inc
xor
cmp
andl
or
icebp
lods
sub
add
inc
pop
adc
loope
mov
pop
push
inc
lcall
sbb
jo
fcmovb
adc
adc
fs
cmp
sub
or
push
push
and
push
sub
mov
mov
sub
jne
sub
push
add
dec
xor
or
loopne
add
pop
fiadds
aaa
pop
sub
addr16
add
insl
adc
fs
pop
xor
sub
push
aaa
add
xchg
sub
pop
icebp
scas
inc
iret
and
xor
push
adc
testl
push
adc
notl
xchg
repnz
mov
pop
cmp
lcall
enter
scas
cmpsb
sub
sti
rcl
pop
pop
mov
sub
add
dec
push
rcll
push
xor
mov
data16
sub
mov
and
sub
mov
and
add
pop
sub
icebp
dec
pop
sub
adc
lahf
mov
inc
hlt
or
dec
mov
add
lods
dec
add
add
push
mov
mov
xor
xor
jne
mov
sbb
and
dec
adc
pop
js
add
lret
push
fisttpl
dec
aad
mov
xchg
push
add
pop
pop
pop
adc
cli
punpckhdq
add
and
imul
pop
clc
pusha
shlb
push
push
and
mov
xlat
xchg
mov
add
or
xor
adc
jp
movsl
cmp
mov
loopne
add
leave
or
or
orl
loopne
test
sub
fmull
push
sbb
adc
fwait
js
shlb
sub
adc
push
in
push
out
push
sub
nop
mov
pushf
subb
push
fsubr
jno
mov
sbb
xchg
jg
nop
xor
cmp
sbb
mov
adc
pmuludq
dec
jge
enter
jo
bound
push
push
inc
xor
nop
jne
xchg
adc
test
inc
mov
dec
cmp
pop
push
sub
push
lret
xchg
jmp
and
mov
insb
or
int3
push
or
fimuls
mov
push
aaa
inc
pop
and
pop
inc
and
in
and
mov
test
nop
add
adcl
jns
xor
dec
sahf
xchg
add
outsb
xchg
mov
adc
sbb
cmp
aaa
or
addb
sub
mov
lret
xchg
push
and
shll
sbb
test
out
and
add
cmp
pusha
inc
stos
cwtl
in
aas
aam
push
cmp
ret
adc
jmp
inc
and
mov
shrb
or
in
inc
add
pop
dec
jnp
or
jg
push
fisubl
cmp
jb
adc
inc
fs
sbb
dec
call
call
add
add
sub
cmp
jb
les
ret
jae
and
lods
addr16
adc
dec
xchg
jmp
inc
dec
out
adc
pop
dec
fsub
adc
rcr
inc
inc
icebp
jmp
lcall
test
pop
clc
cmp
movl
pop
movl
popf
cmc
push
clc
mov
pop
leave
in
push
dec
pop
inc
int3
dec
push
pop
int3
dec
cs
and
or
in
in
fistl
push
xor
loop
xor
add
insb
adc
dec
sti
adc
xchg
rclb
fsub
add
mov
imul
mov
add
loopne
dec
cmpl
dec
imul
ds
hlt
fs
sbb
mov
and
xchg
add
or
enter
add
sub
je
test
dec
or
rcll
xor
sbb
sub
push
pop
scas
aam
add
dec
push
push
aam
ror
mov
loopne
jle
shrl
out
cmpl
test
cmp
js
test
rolb
js,pt
and
jge
mov
test
cmp
xorb
es
cmpsb
imul
ret
add
push
and
icebp
loopne
or
call
adc
push
push
aad
lock
pop
int3
cmp
cltd
lock
in
mov
inc
mov
ss
dec
sbb
jne
aas
pop
adc
inc
cmc
or
ds
push
push
aad
stc
xchg
mov
sub
lods
push
sub
in
call
adc
pop
xchg
icebp
lcall
add
pop
sbb
mov
les
gs
insb
jg
cld
cltd
pop
test
rorb
arpl
imul
or
push
imull
mov
sarl
push
jo
pop
pop
lods
jb
push
pop
lods
mov
movsb
adc
adc
cwtl
cmp
sbb
jle
or
mov
dec
xchg
or
dec
or
jmp
mov
pop
add
mov
lock
pop
push
pushf
pop
push
out
xchg
mov
push
test
mov
scas
inc
jge
inc
add
ds
push
lahf
xor
shrl
je
lret
push
jb
lock
xorl
mov
or
stos
add
inc
andb
dec
clc
dec
in
or
mov
sub
popa
pusha
add
pop
rcrl
ret
aas
lea
push
or
bound
stc
sbb
daa
and
mov
loopne
addb
xor
inc
push
or
mov
mov
inc
cmp
jl
pop
mov
je
xchg
pop
xor
pop
add
sub
pop
push
rclb
and
cs
stos
fwait
xor
and
sub
out
mov
mov
add
cmp
dec
add
insb
and
pop
add
sub
sarb
js
js
sbb
loopne
mov
insl
add
add
or
add
push
ret
push
push
mov
pop
cmp
xchg
icebp
cmp
jb
ficomps
ja
lods
sub
adc
adc
xlat
sub
or
fisubrl
adc
inc
adc
cmpsl
sbb
xor
xor
jle
stc
cmpsl
repnz
cmpsl
outsl
jne
mov
push
lcall
loop
adc
sub
pop
or
test
jbe
cltd
push
ret
or
jl
or
addb
testl
ret
or
dec
pop
inc
pop
pop
push
xchg
push
dec
jl
cmpsb
push
jg
pop
jg
jb
pop
jmp
xchg
imul
and
sbb
add
cmp
add
and
jns
dec
or
inc
sbb
push
cltd
mov
outsb
loop
sti
pop
mov
pop
idiv
xchg
mov
add
enter
xchg
push
sub
bound
cmp
lock
xor
dec
jne
mov
mov
cmp
pusha
call
jne
cmp
jne
xorb
or
adc
mov
mov
push
jle
or
repnz
filds
fisubrl
add
fldl
fyl2x
fldl
insl
pop
push
xor
fbld
pushf
or
loopne
in
jg
mov
ret
cmp
popa
add
popa
loope
pusha
push
lock
or
movsl
mov
fisubs
fstpl
flds
sti
fbstp
fdivl
jmp
fmull
fcoml
iret
xchg
adc
inc
push
adc
xorl
je
imul
mov
lcall
out
sbb
in
push
push
cltd
jge
popf
push
fcomps
mov
jle
mov
imul
pop
lcall
add
jle
fdivrp
xchg
and
sbb
daa
fimull
push
adc
out
push
or
sub
mov
fiaddl
cmp
mov
pop
or
push
cwtl
mov
and
push
imul
push
jb
sub
pop
shll
xchg
lret
add
imul
inc
dec
or
ret
mov
push
ds
repnz
mov
ret
inc
inc
xchg
inc
inc
xor
movsb
test
insb
or
cmp
xchg
lahf
int
push
pop
scas
fs
test
xor
shlb
idivl
jb
mov
adc
call
xchg
loopne
pop
mov
adc
js
add
fcoml
push
jge
push
sbb
jo
out
je
push
lds
pop
xor
adc
jb
push
sbb
cmp
xorb
xorb
bound
js
fisttpll
std
aas
lret
insb
jecxz
add
xchg
aas
cmp
orb
je
push
lock
add
add
jg
sbb
cmp
jne
ds
call
fs
in
mov
or
push
and
pop
out
jecxz
adc
add
dec
clc
adc
or
outsl
push
jmp
cmp
and
int3
out
and
jne
lret
jne
jmp
mov
cltd
sbb
mov
ret
sub
sbb
and
xor
add
popf
sub
and
outsb
push
xor
iret
sbb
mov
mov
mov
andb
xor
or
orb
or
push
dec
pop
lret
dec
push
sarb
jbe
pop
je
dec
das
je
or
movsb
push
hlt
outsb
or
je
xchg
icebp
inc
filds
bound
rolb
add
jbe
bound
push
outsb
push
iret
pop
dec
add
mov
push
test
aam
or
outsb
cmp
jmp
ret
jns
outsb
or
xor
out
dec
xchg
lret
push
jle
iret
xor
sub
fstps
aad
mov
fdiv
cmp
in
testb
adc
push
jae
adc
push
sbb
and
daa
and
dec
lods
add
sti
pop
jle
int
mov
add
movsl
and
je
sbb
pop
jmp
jne
mov
mov
and
and
sub
sub
test
mov
xchg
sbb
pusha
cmp
daa
cli
icebp
clc
jne
cmp
jne
add
pop
cmp
adc
jbe
pop
xchg
or
cmp
jne
add
dec
sub
icebp
jne
mov
mov
xlat
push
inc
es
movsb
cmp
rorb
and
lds
sahf
jae
gs
sub
pop
popa
loop
and
icebp
sub
or
mov
loope
adcb
push
push
mov
dec
adcb
or
pop
arpl
push
xchg
cmp
mov
push
ds
pop
call
adc
aaa
sub
adc
shr
out
inc
or
pop
pop
lea
fcomip
das
mov
cmp
jne
mov
ret
cmp
or
push
out
pop
out
jne
mov
ret
mov
jbe
cmp
mov
in
jg
xor
lea
adc
sbb
adc
cmp
repz
jg
and
push
push
or
push
loopne
sbbl
push
dec
dec
cmp
cmp
jge
cmp
jle
xchg
repnz
mov
adc
mov
add
jg
cwtl
xor
adc
push
or
loope
arpl
xor
cmp
dec
js
insb
mov
mov
rcr
mov
mov
je
test
into
cmpsb
in
mov
pop
out
or
ret
xchg
lock
push
test
push
mov
inc
push
push
xor
clc
jno
movsl
mov
js
insl
cmp
cmc
or
mov
and
or
jl
cmp
cmp
mov
call
jp
mov
inc
les
cmp
sarb
cmp
cmp
jle
dec
stos
push
push
push
sub
test
dec
cltd
push
idivl
pusha
das
leave
test
jmp
outsl
arpl
or
dec
and
test
mov
xor
ffreep
sbb
and
loope
jle
jp
xchg
sub
pushf
scas
xchg
dec
push
add
lods
or
sub
les
and
mov
sti
inc
movups
sub
push
sub
hlt
les
or
lock
sub
pop
xchg
xchg
sar
pop
loope
cwtl
jmp
adc
mov
cmp
push
rorl
jl
or
add
and
xchg
mov
cmpsl
movsb
adc
out
in
adc
xchg
pop
or
sbb
dec
mov
mov
cmp
sub
dec
mov
mov
and
rcll
push
push
les
lds
xchg
ret
sbb
jmp
adc
into
insl
imull
shl
call
sbb
or
sar
sets
dec
adc
rcrb
cli
int3
jle
mov
lds
cmp
and
lret
mov
sub
and
insb
push
cli
add
in
pop
out
and
cwtl
xor
dec
cmc
sbb
dec
and
pusha
aaa
push
imul
sarb
ffreep
movl
sub
call
push
pushf
push
fisttpl
sub
or
sbbl
scas
fcmovb
movsl
xchg
stc
lret
loopne
nop
cmpl
sbb
or
in
lock
mov
clc
mov
push
icebp
or
daa
adc
repz
call
loopne
std
sarb
mov
or
xchg
test
faddp
jl
jmp
mov
shlb
data16
lock
pop
je
stos
pop
lret
or
int
loop
lock
pop
aaa
inc
sub
je
or
sub
xor
xor
mov
jle
cmp
and
ret
cmp
pop
sbb
movsb
ret
lods
sub
dec
loopne
dec
jae
push
sub
mov
movsl
sub
imul
mov
add
iret
ja
or
sti
mov
cwtl
les
ret
pop
ret
sbb
add
mov
jns
es
and
syscall
or
push
xor
or
cmpsb
add
cmp
pop
push
cmp
jb
dec
push
or
xlat
push
test
or
dec
aam
adc
pop
mov
xchg
ficoml
pop
pop
andl
in
cmp
cli
iret
repz
pop
push
dec
pop
pop
push
jne
cmp
lcall
mov
cmp
mov
push
push
lock
dec
notl
and
mov
jg
adc
sbb
call
xor
enter
push
and
dec
fisubrl
adc
inc
dec
sub
push
mov
push
int3
imul
in
sub
pop
cmp
add
pop
adc
outsb
adc
push
mov
and
mov
in
das
mov
or
sub
and
rol
jge
sarb
outsb
or
mov
aad
mov
or
inc
add
push
stos
add
add
jno
scas
lock
mov
addr16
daa
push
xlat
mov
cmp
jno
cmp
dec
js
sbb
fwait
inc
shlb
das
push
call
pop
pop
js
xor
xor
lcall
stos
add
cmp
xor
pop
xchg
lea
sub
jne
cmp
aam
in
pcmpeqb
or
sbb
adc
jne
mov
xor
ret
cmp
or
sub
cmpsb
pop
int
add
adc
add
iret
in
add
lret
jae
xor
daa
pop
mov
sbb
adc
add
lret
cmp
and
nop
adc
enter
leave
clc
sub
movl
xor
add
cmp
or
mov
dec
shrl
push
push
push
and
push
lea
fadds
add
incl
rep
stos
lea
mov
lea
pushf
inc
es
fucomp
inc
add
cli
fistl
cli
cs
fldt
pusha
and
push
jp
sbb
dec
lock
cmp
adc
mov
movsb
push
sub
add
xchg
test
mov
adc
add
or
push
dec
pop
fisttpl
test
aam
rclb
sbb
adc
movsb
jo
push
popa
icebp
add
outsl
pop
imul
push
gs
mov
add
xchg
pusha
jne
stos
inc
pop
cmp
test
sub
jb
test
push
lea
xchg
and
adc
rolb
xor
lret
movsb
mov
push
pop
xchg
or
push
nop
adc
or
adcl
dec
scas
pop
ds
cs
sbbb
int
dec
dec
pop
out
repnz
jp
mov
adc
cmp
inc
or
jle
xor
push
mov
jge
mov
add
pop
cwtl
mov
les
mov
add
add
mov
xchg
test
xor
loopne
xchg
mov
fistpl
mov
mov
lea
cltd
div
inc
cmp
sarl
lahf
dec
loopne
pop
das
or
mov
clc
mov
push
inc
js
lock
mov
clc
push
decl
outsl
jg
jle
inc
sub
rolb
dec
jne
mov
ss
fwait
ds
jp
int
addl
filds
stc
mov
mov
push
mov
jge
jns
push
push
call
jnp
add
sbb
xor
inc
cli
out
movsb
shl
mov
subb
mov
out
dec
push
inc
dec
xor
cs
outsl
add
lea
jmp
lea
mov
mov
js
shrl
pop
mov
add
mov
push
or
fldcw
sub
adc
dec
xlat
push
or
dec
or
and
jge
lcall
pusha
rorl
cltd
push
add
pop
and
test
addb
popf
add
shlb
insb
es
push
sar
leave
mov
adc
cmp
mov
int3
insb
pop
push
lock
lods
mov
sbb
insb
call
andb
dec
adc
jne
shl
cmp
scas
je
call
push
mov
fwait
xchg
xchg
sub
or
ret
push
push
in
lret
push
mov
cwtl
xor
fadds
sub
in
pop
xor
mov
and
lea
xchg
jmp
ret
dec
cmp
add
cmp
imul
iret
add
sbb
add
push
subb
rcll
in
in
mov
and
fiadds
jo
cmp
ja
push
push
aaa
mov
rol
sub
cltd
adc
int
fmull
movsl
enter
adc
ss
das
push
test
cwtl
mov
lods
cltd
es
push
xor
mov
je
dec
adc
pop
call
ds
mov
mov
sbb
adc
dec
mov
out
cmp
jb
mov
push
add
cmp
jne
sbb
jecxz
or
jb
jbe
sub
pop
add
adc
clc
dec
inc
mov
sbb
rclb
cwtl
jo
cs
inc
out
cltd
cmp
ficomps
dec
push
push
push
sub
movsb
pop
push
popa
aad
jp
xor
in
mov
pop
pusha
cmc
dec
inc
pop
loop
cmc
dec
sbb
pop
add
cmpl
cwtl
add
mov
inc
dec
jmp
push
addl
mov
cmpsb
xor
js
insb
ljmp
mov
and
sbb
cltd
mov
push
or
push
add
jmp
pusha
mov
or
andb
pop
test
rclb
adcb
push
ss
adc
xlat
add
xlat
lea
inc
imul
or
jle
movsb
push
dec
jp
inc
cmp
xlat
ljmp
arpl
xor
sub
das
je
repz
dec
dec
pushf
mov
inc
mov
pop
sbb
lret
arpl
cmpl
or
test
sbb
push
ret
jg
jno
pop
lea
in
cmp
das
jns
push
push
popa
cmp
inc
addl
xor
test
adc
xor
call
enter
jbe
add
or
jecxz
cli
pop
push
jnp
jmp
popf
mov
mov
sti
lods
add
adc
jo
je
fldenv
cmpb
mov
fbld
jp
les
daa
cmpb
mov
dec
inc
je
adc
xchg
xchg
fistpll
mov
clc
ret
call
jne
mov
lahf
xor
mov
in
adc
dec
sbb
dec
out
xchg
and
inc
jnp
add
ret
jb
inc
imul
enter
inc
cmp
add
les
sub
cmp
sub
cmp
adc
lret
and
or
repnz
dec
test
dec
inc
cltd
inc
daa
je
inc
sub
test
xchg
enter
lds
or
xchg
dec
dec
and
mov
sbbl
xor
pusha
rcrl
add
jge
xor
sbb
shrb
add
adc
cwtl
cmp
fisttpll
or
add
fmull
lods
xor
adc
cmp
xor
mov
popf
jge
sbb
jge
xor
arpl
or
dec
sbb
mov
mov
pop
arpl
inc
mov
pop
xchg
out
repnz
pushl
pop
xor
dec
add
cs
orb
or
jnp
or
mov
inc
fs
cmp
adc
dec
test
cmpsl
mov
and
jmp
std
fimuls
push
push
dec
arpl
jl
into
sbb
inc
scas
int
test
mov
js
push
lods
sbb
add
push
jo
les
push
ds
mov
or
fsubr
icebp
inc
push
adc
mov
out
mov
lahf
push
insl
jo
test
cmpsl
rcrl
dec
stos
aaa
xor
add
dec
add
add
adc
repz
sub
sbb
push
jge
testb
xchg
and
xor
ds
mov
mov
rclb
jo
xor
into
or
xchg
or
test
jne
inc
aam
cmp
loope
lahf
xor
insb
sub
lret
fdivs
and
sarb
mov
dec
jle
fdivs
xor
push
je
cmp
adc
lea
pop
sbb
fldenv
lret
jp
jno
adc
xchg
inc
pop
mov
add
adc
inc
or
add
push
sbb
add
xchg
push
push
inc
push
mov
pop
fdivrs
pusha
in
jns
jg
mov
mov
sub
mov
mov
or
and
ss
cltd
mov
sbb
inc
shlb
mov
sub
pusha
lds
repz
or
inc
pusha
and
ja
push
dec
or
fisubrs
push
add
jnp
mov
sbb
imul
pop
fs
xchg
jno
imul
sbb
jne
sbb
roll
mov
sti
sub
push
add
sub
push
mov
add
dec
mov
cmpsb
add
outsl
push
ljmp
lcall
imulb
ds
sbb
mov
mov
jmp
jne
push
push
and
jno
mov
adc
clc
and
mov
add
lea
pop
stc
mov
cli
enter
sbb
aam
xor
push
jmp
in
insl
fstl
sahf
cmpl
sbb
jne
push
loopne
mov
dec
add
adc
xchg
adc
add
call
adc
addr16
aaa
mov
fisubs
bound
adcb
or
and
pop
and
loopne
in
orl
jge
mov
jne
loop
sbb
mov
mov
fdivrl
sarl
and
in
push
and
add
mov
jl
scas
jo
mov
stos
push
les
repnz
test
dec
xchg
sarb
test
xchg
jle
ret
pusha
mov
pop
push
lods
int3
and
popf
rolb
rsm
movsl
repnz
call
imul
rorb
add
add
popa
fcompl
repnz
mov
or
add
mov
add
imul
add
mov
into
insb
dec
or
pop
or
les
loopne
and
jno
sbb
mov
pop
movsl
push
jno
inc
lcall
or
cmp
xchg
mov
xchg
pusha
adc
inc
inc
fadd
in
cmpsl
lock
jnp
push
pop
lds
cmp
mov
mov
les
xchg
jns
push
add
inc
pop
adc
pusha
and
dec
adc
and
mov
test
rolb
add
xchg
mov
xchg
shrl
jae
int
mov
adc
push
dec
sahf
cmp
push
dec
shl
sub
cmpsl
jle
ss
xchg
lea
movsl
addb
mov
call
arpl
pop
sub
xor
push
adc
xor
fnsave
sbb
jp
pop
mov
mov
mov
dec
aam
push
push
shll
sub
out
push
or
loopne
push
mov
adc
pop
add
pop
mov
adc
add
xor
insl
add
mov
sbb
xor
xor
xchg
mov
and
push
mov
and
jle
aad
adc
lea
add
sub
mov
mov
add
add
inc
or
mov
dec
test
jne
mov
mov
rcr
or
adc
std
stos
xchg
mov
adc
dec
scas
popl
push
lods
push
test
cli
and
add
sbb
add
dec
mov
adc
vpavgb
sbb
mov
test
mov
les
sbb
cmpsb
clc
lret
adc
je
faddl
cmp
add
or
repnz
repz
fs
iret
xor
je
das
xor
push
or
fidivs
pop
add
xor
adc
fdivl
cs
inc
sysret
test
bound
pop
mov
mov
rcrb
aas
cwtl
xchg
mov
jl
lret
orl
orl
xlat
add
jno
decb
or
inc
xor
add
or
adc
add
dec
dec
nop
fwait
lcall
movsb
dec
cli
xor
or
loop
adc
je
inc
mov
push
pop
or
push
sbb
push
cmp
mov
data16
movsb
jg
push
push
xor
movsl
fs
pushf
clc
or
jne
pusha
sub
pop
mov
ljmp
jnp
out
mov
mov
adc
push
dec
cmp
push
inc
add
fisttps
jbe
ficoml
push
cmp
sbb
and
mov
mov
or
dec
pop
jne
cltd
pop
lcall
add
lret
das
and
addl
adc
adc
movsb
data16
pop
test
and
adc
es
pusha
pusha
mov
imul
jo
imul
pop
pop
ret
rcrl
rolb
rcr
pop
popa
ds
aas
mov
addr16
mov
adcb
fs
rorb
sbb
pop
and
dec
pop
or
push
mov
jp
imull
cs
sbbl
ret
cs
ja
adc
dec
inc
mov
sbb
loopne
inc
fs
add
test
mov
and
or
hlt
xor
push
xchg
xchg
and
push
mov
inc
pusha
xor
fsubrs
or
stos
add
jg
sub
imul
or
add
push
jmp
shrl
adc
dec
mov
add
and
lock
jnp
ds
add
ja
shll
add
inc
jge
shlb
adc
adc
add
sarl
cmpl
push
cs
mov
je
inc
dec
or
icebp
mov
add
aad
sub
ss
les
push
clc
popf
cmc
rcr
mov
cmp
outsb
fbstp
xor
mov
insl
mov
sbb
movsb
push
add
or
dec
shrb
push
es
jns
dec
jmp
pop
push
mov
sbb
pusha
add
negb
jge,pn
jmp
fistpll
ret
nop
adc
mov
sub
aas
inc
sub
sub
fiadds
sbb
testb
push
imul
cmpb
rorb
add
xchg
xor
nop
pop
pop
lret
pop
das
les
add
mov
and
xor
push
cltd
jp
cmp
hlt
lret
rcrb
xchg
add
adc
fwait
shrb
loope
mov
and
lcall
stos
adc
and
les
ljmp
push
jnp
xchg
popa
dec
js
inc
loopne
xor
mov
add
jg
mov
add
movsl
das
add
lods
cmp
pop
cmp
pop
mov
or
arpl
xor
pop
add
mov
dec
fisubrl
and
pop
movl
addr16
or
inc
dec
hlt
movl
adc
js
mov
fisubs
paddb
and
add
sub
jno
testl
movsb
mov
lock
sarl
mov
mov
hlt
pop
dec
mov
inc
test
jle
mov
push
lods
mov
fisttpl
mov
add
push
daa
push
insb
sub
lods
cmp
and
insb
xchg
sub
sbb
push
loop
test
ss
cmpsl
test
fadds
loope
lret
mov
sbb
push
divl
loope
cld
adc
outsb
test
cmp
fisubrs
das
lds
lret
fmuls
nop
dec
dec
test
pop
add
out
cmp
mov
cmp
cli
xor
sbb
clc
or
sti
lahf
je
inc
and
inc
cmp
jl
mov
mov
daa
push
fistpl
push
cs
mov
sub
and
cmp
mov
inc
jmp
add
mov
pusha
in
sbb
mov
aaa
sub
dec
insb
mov
jecxz,pn
lods
add
aam
push
sti
pop
test
lea
xor
add
pusha
pop
repz
pusha
lods
xchg
stos
pop
imul
aad
fimuls
mov
and
jne
jecxz
shll
jecxz
or
stc
push
adc
icebp
push
call
mov
adc
call
cmp
jle
or
int
cmc
xchg
inc
push
pop
push
sub
and
pop
dec
sub
push
dec
or
andnps
lods
or
jne
push
xchg
fisubs
roll
bound
and
push
and
dec
xchg
scas
test
js
cmpsl
dec
jl
lret
lods
jne
popf
pop
shrl
or
js
mov
mov
push
xorb
lock
add
test
push
je
mov
imul
fwait
push
cmpsl
xchg
jo
pop
hlt
aad
pop
pop
scas
lahf
loopne
decl
jnp
pop
xchg
jno
mov
call
pand
sbb
xchg
es
aas
dec
fsubrs
and
pop
int3
cmp
dec
jl
and
jmp
das
mov
lret
aaa
push
inc
lea
jbe
sbb
mov
push
push
dec
or
imul
int3
add
cld
inc
add
ljmp
cwtl
outsl
mov
sahf
xchg
in
sbb
dec
addb
and
cwtl
add
mov
shrb
test
sub
cli
sub
add
sub
shl
dec
and
sti
mov
clc
xor
sub
inc
je
add
add
xor
fists
rcrb
or
adc
xor
cs
push
jecxz
and
cmp
out
sub
ret
cmp
pop
sahf
and
adc
xchg
loope
cmp
xor
fstl
inc
pop
push
mov
dec
push
cmp
adc
xchg
add
push
addl
test
loopne
pop
push
add
mov
mov
xchg
pop
or
jmp
and
sbb
popf
daa
sub
add
fidivrl
and
pop
push
ret
dec
mov
adc
or
add
das
sub
pusha
mov
xorb
and
leave
pop
pop
mov
stos
ret
mov
push
in
xlat
inc
mov
repnz
pushf
push
xor
in
sarb
dec
push
push
sbb
pop
jno
loop
or
xlat
push
dec
push
cmp
jle
add
inc
lea
sub
sbb
ljmp
pop
dec
idivl
push
jp
mov
xor
dec
push
and
std
xchg
dec
icebp
sbb
add
dec
add
cmp
dec
jb
push
cmp
jle
pop
ret
push
decl
in
and
or
fstpt
pusha
mov
cmpb
and
aad
xor
subl
or
mov
lods
and
outsb
pusha
jne
sub
int
pushf
mov
inc
pop
mov
repnz
adc
lar
push
shlb
pop
cmp
adc
cmpsb
ss
pop
outsb
popl
daa
add
add
and
add
das
jmp
rorb
js
or
adc
adc
popa
movsl
mov
mov
jl
jecxz
repz
je
xorb
push
push
in
mov
mov
lcall
push
pop
loope
lea
pop
loope
push
nop
ret
jo
leave
jmp
popa
movsb
mov
pop
fstps
jbe
add
jne
or
jnp
in
loopne
jo
rol
jecxz
imul
lock
xorl
jmp
cs
push
pop
in
dec
js
pop
pop
out
flds
or
popf
sbb
inc
or
mov
and
sub
adc
cmp
or
push
dec
and
adc
push
mov
xchg
aad
push
out
btc
jae
or
dec
xor
sbb
stos
add
movsl
xlat
pop
add
les
add
adc
lock
pop
sti
dec
pop
and
push
lods
jg
push
loop
test
add
add
clc
xchg
xor
pop
cmp
xchg
cmp
or
roll
sbb
ret
sub
sub
addr16
jecxz
add
adc
cmp
lret
fisubs
test
or
and
push
je
fs
sahf
loope
jle
out
daa
in
into
or
push
push
push
push
repz
push
jg
dec
dec
lcall
out
add
jle
add
mov
jle
rclb
dec
and
dec
lea
test
dec
mov
add
clc
push
xchg
mov
or
stos
outsl
in
mov
inc
push
dec
mov
cmpw
inc
push
jecxz
add
push
flds
xchg
test
push
or
inc
loop
imul
push
jp
mov
inc
dec
jg
or
dec
cmp
sbb
in
push
push
shrb
ret
pop
lock
add
ret
mov
push
popf
push
mov
xchg
loop
and
push
and
mov
adc
test
aaa
pop
pop
mov
and
mov
mov
insb
mov
pop
and
pop
pusha
pop
outsl
negl
or
dec
mov
mov
pusha
fnstenv
or
xchg
add
cmc
lret
orl
popf
and
je
jb
aaa
dec
xchg
lcall
and
xor
sbb
addl
push
pop
incl
dec
lods
inc
lcall
and
inc
inc
and
mov
adc
jne
and
je
and
icebp
xchg
aam
or
xchg
in
xchg
out
inc
adc
imul
out
push
sbb
or
je
mov
stos
sbb
mov
push
adc
arpl
mov
push
leave
lea
xchg
jle
cli
push
fwait
rolb
add
pop
dec
mov
jle
adc
push
idivl
daa
lock
xor
sbb
ret
adc
call
mulb
cmp
je
push
lcall
in
out
ret
add
je
test
call
sbb
ret
sbb
lock
jae
test
clc
fisttpl
fcoms
out
or
fidivl
test
or
rol
jge
test
dec
es
in
test
add
pop
add
adc
test
outsl
sti
sbb
aad
into
mov
push
push
push
cmp
je
les
jbe
dec
ljmp
psubb
xor
or
inc
xchg
les
pop
std
lret
sbb
iret
dec
fadds
lcall
leave
mov
mov
sbb
push
push
push
jmp
push
xor
mov
and
add
es
lods
xchg
fldcw
mov
je
jbe
stos
push
fldenv
and
inc
push
push
fnstcw
sbb
test
add
out
pop
xchg
sbb
jecxz
call
mov
jp
push
pop
pop
insb
divb
add
sub
fimuls
mov
shrb
mov
cmp
sbb
mov
subb
adc
or
and
fwait
jp
add
push
pop
xor
imul
pop
aam
hlt
inc
sub
push
or
xchg
aad
insb
mov
pop
pusha
shlb
add
dec
je
pop
inc
add
enter
mov
add
jecxz
jge
or
push
mov
pusha
pop
xchg
push
rcll
repnz
or
or
jns
clc
push
lahf
int
imul
and
cmp
and
add
divb
or
aam
aad
mov
cmp
and
sub
dec
adc
pop
out
and
lea
je
mov
adc
mov
shr
insb
sar
or
lea
fsubrs
push
jne
mov
dec
pusha
rolb
add
sbb
push
and
push
add
sbb
pusha
or
adc
in
jne
xchg
pop
add
or
or
in
std
pop
lret
fiadds
loop
fwait
jnp
dec
addl
jnp
or
adc
xor
roll
inc
xchg
inc
popa
push
faddl
loope
jl
loope
mov
dec
push
shl
fdivl
clc
dec
jle
push
push
fadds
xor
scas
insl
aas
mov
xlat
inc
adc
mov
cs
push
adc
sbb
shlb
push
mov
dec
loop
movsb
pop
insl
and
inc
cmp
loope
pop
andb
mov
xchg
pop
xor
shlb
fcmovnb
push
mov
dec
pop
mov
jl
std
cmpsl
xor
push
inc
cmp
adc
xchg
outsl
or
sub
sbb
cmpb
outsl
sbb
sbb
jge
neg
inc
cld
add
cmp
jge
mov
fs
jle
fsubs
sbb
mov
clc
push
pop
les
int3
outsl
dec
in
nop
ss
inc
out
push
cmp
xchg
repnz
inc
inc
les
js
lock
pop
inc
xchg
push
mov
ret
mov
test
push
sub
or
mov
add
xor
push
insb
pop
jge
push
push
or
ds
cmp
and
in
cltd
add
int3
jne
outsb
inc
mov
addl
and
sbb
jmp
push
nop
pusha
andb
movsb
add
ljmp
scas
inc
mov
shrb
sub
lds
iret
sar
aad
xor
add
enter
and
add
xor
or
push
add
jo
sbb
jno
loopne
call
rcll
ljmp
fmul
aam
or
xor
push
add
cli
addr16
mov
jecxz
cmp
pop
fbld
inc
enter
push
xor
and
test
into
xor
push
add
cmp
ret
js
jg
fisttpl
loopne
sbbl
dec
xstore-rng
cmpsl
inc
sub
add
add
xor
adc
adc
stos
incb
popa
rolb
pop
push
sbb
or
inc
test
fs
mov
pop
fwait
jp
insb
cmp
push
mov
add
dec
xchg
pushf
inc
sbb
aam
mov
push
adcb
repnz
xor
adc
fdiv
mov
inc
mov
sbb
add
and
popf
loop
cmp
xchg
sub
adc
insb
addr16
je
rolb
mov
and
dec
pop
adc
sbb
mov
xor
pop
push
loop
or
push
notb
sbb
ret
xchg
adc
sbb
adc
xchg
test
xor
pop
addl
fstps
jle
push
push
dec
push
les
sbb
and
inc
jp
pop
xor
xlat
dec
loop
adc
or
mov
jne
mov
push
bound
iret
imul
fimull
es
sub
stos
sbb
jnp
pop
setp
sub
mov
xor
xchg
and
or
push
push
sbb
rorl
xchg
push
cs
push
add
mov
and
fldl
push
inc
insb
adc
adc
add
addl
rolb
mov
mov
lea
xchg
adc
lret
sub
jnp
lds
or
cmc
sbb
imul
test
imul
mov
lds
push
and
insb
dec
and
inc
push
jp
adc
fcom
mov
ds
int3
mov
pop
iret
pop
ds
cmp
cltd
in
add
xor
dec
int
or
pop
imul
dec
add
outsb
push
jg
rsqrtps
popa
jmp
pop
and
xlat
add
lds
inc
mov
push
dec
sbb
loop
ss
adc
inc
add
adc
lds
dec
jo
pop
pop
mov
rorb
daa
sbb
sub
push
je
cltd
xchg
bound
mov
push
inc
mov
push
int3
push
push
xchg
cwtl
lret
and
pushf
into
sbb
xor
popf
neg
xchg
xchg
add
test
and
loop
push
adc
sbb
popa
sbb
jmp
and
insb
ret
cmp
andb
xchg
sub
fdivs
sbb
loope
mov
ss
jo
and
repnz
pusha
bound
lods
sbb
jg
and
cmpl
mov
aas
add
mov
jno
cld
inc
add
nopl
jl
jns
clc
xorb
movsl
jg
jle
mov
lods
test
jge
inc
gs
fcmovu
jle
or
cmp
jle
mov
cmp
push
or
adc
push
push
add
jmp
lret
or
jmp
jle
jg
or
adc
outsl
out
int
cmove
xor
loope
mov
lret
adc
xchg
add
incb
jl
movsb
lret
out
inc
jecxz
xchg
mov
or
js
jne
cmp
sbb
jno
add
js
and
aad
je
pusha
mov
pop
jmp
sbb
sahf
xchg
rolb
push
push
imul
andl
popf
pop
in
jne
and
pusha
ret
mov
shl
dec
out
ja
aam
mov
mov
push
dec
lahf
dec
mov
in
mov
sbb
inc
inc
cmp
out
jle
shl
adc
imul
add
mov
lea
sub
ljmp
add
pop
push
insb
adc
incb
or
push
aad
mov
shrb
pop
addl
bound
jbe
mov
cmp
into
inc
rol
push
sub
aas
jae
lds
xchg
fcoms
jb
imul
fcmove
out
add
cli
inc
add
mov
add
jo
inc
add
jmp
out
sbb
pop
lock
ret
cld
mov
mov
sub
dec
jne
scas
inc
inc
shll
xor
mov
movsb
pop
and
fsubr
outsb
dec
pop
jl
cld
in
jmp
aam
mov
sub
inc
out
inc
enter
shr
out
sub
sarl
icebp
mov
imull
or
ja
mov
loope
lea
mov
mov
cmp
ret
imul
jb
inc
sbb
mov
outsl
mov
jle
or
sbb
or
cmp
sbb
push
add
scas
or
clc
jl
leave
push
clc
jo
sbb
fiaddl
adc
rcrl
push
xchg
cmp
inc
push
test
mov
push
cmp
xor
sub
mov
push
adc
push
mov
xor
sbb
xor
sahf
dec
inc
xor
xor
test
or
and
xor
shrb
sub
pushw
mov
pop
cmp
inc
dec
pop
fs
mov
fisttps
bswap
mov
mov
ret
clc
in
cli
scas
lret
div
jae
out
sbb
pop
std
inc
xchg
mov
and
sbb
out
xor
cmp
mov
stc
inc
mov
in
nop
jl
test
xor
xor
jl
jae
inc
jns
sub
rol
mov
aas
out
ret
lret
jle
jp
or
ret
imul
bound
stc
pop
pushl
pusha
test
jnp
loop
and
pusha
lcall
insl
repz
cmp
je
sbb
cli
pop
rorb
jg
pushf
in
cltd
lea
push
idiv
mov
push
les
iret
pop
adc
and
xor
movb
dec
cmp
rcr
daa
mov
cltd
cld
and
std
aaa
test
rcrb
add
mov
pop
mov
adc
and
push
push
adc
add
flds
lret
movsl
fimuls
dec
or
pushf
std
add
fmuls
mov
push
adcl
or
inc
subps
ret
das
sub
sbb
dec
dec
loope
sbb
xor
jg
add
jbe,pt
rolb
mov
data16
add
dec
adc
jge
repnz
push
push
jb
and
leave
and
ret
test
cld
test
jecxz
add
aam
cmpl
sbbl
adc
sbb
outsl
into
xor
mov
fwait
mov
test
pushf
jmp
push
mov
dec
bound
adc
push
icebp
pop
push
pop
and
inc
sub
adc
add
jbe
add
push
jmp
and
adcl
and
adc
sbbb
jne
jne
pop
pop
int
iret
mov
test
dec
pushf
pop
add
in
test
ja
xchg
inc
push
sub
mov
sub
or
or
add
jp
call
and
test
out
adc
sbb
push
cmp
pop
lods
mov
iret
dec
dec
push
dec
pop
cmp
xchg
inc
inc
sahf
sub
adc
adc
pusha
mov
push
jae
aad
adc
xor
ret
adc
js
cmp
lods
or
sti
mov
add
popl
adc
pop
rorb
adc
and
insb
sub
prefetch
nop
into
jle
into
dec
sub
xchg
sbb
shl
rcrb
data16
movsb
aaa
hlt
cltd
dec
or
mov
mov
mov
icebp
mov
push
push
xor
js
call
xchg
xor
es
je
ret
jg
inc
aam
test
lcall
adc
js
stc
xor
push
lea
push
push
push
inc
pop
ret
nop
sbb
sub
pop
sub
adc
mov
sub
push
push
add
xchg
cmc
jns
sub
cmpsl
add
loopne
loopne
mov
add
and
sub
loope
ret
pushf
pop
add
xor
pusha
jl,pn
es
push
repz
xchg
js
js,pt
push
je
ror
add
test
imul
fs
push
fdivrs
popa
dec
xor
xor
cmp
cmp
sbb
mov
xlat
mov
fs
test
adc
pop
hlt
jle
lods
push
fabs
popa
mov
dec
jo
push
mov
adc
inc
add
or
xor
xchg
xor
sbb
or
push
adc
cli
xor
sti
orb
inc
movsb
movl
sub
ja
daa
test
js
pop
sbb
jge
jmp
in
fisttpll
xchg
outsb
pop
addb
sub
jo
test
mov
clc
mov
pop
call
push
cmp
iret
cmp
rorb
inc
cmp
fidivrl
jb
sbb
add
outsb
push
jg
pop
mov
fwait
push
jno
bound
aaa
xchg
rorl
shr
inc
mov
loop
inc
imul
push
lods
sahf
adc
adc
rcll
jmp
xchg
jo
arpl
test
sub
mov
dec
sub
xchg
inc
cld
sbb
pop
ret
and
push
std
enter
in
cmp
pop
cwtl
push
xchg
clc
pop
add
mov
add
and
sbbl
or
mov
xor
sbb
inc
xor
pushf
sbb
mov
add
jmp
aaa
mov
push
mov
xchg
scas
lea
pop
fwait
and
mov
cld
idivb
xor
enter
adc
mov
pop
xor
fisttpl
test
sbb
mov
push
fistpl
fs
push
push
dec
xchg
mov
mov
ljmp
imul
inc
mov
imul
push
push
adcb
push
and
mov
movsl
mov
add
imul
dec
lock
popf
outsb
xchg
fmul
aam
xlat
xor
sbb
cmpsl
neg
and
jo
or
sbb
and
add
test
and
adc
pop
loope
add
push
aad
xor
cmpl
mov
dec
arpl
rcpps
push
push
cs
imul
push
mov
std
cmp
les
xor
ret
mov
jo
push
mov
mull
xor
lcall
inc
inc
jno
mov
rol
and
les
jmp
xor
jle
negl
in
mov
or
adc
add
push
push
xchg
pop
je
sub
push
cmp
and
sub
cmp
add
mov
sbb
adc
mov
inc
in
push
jo
popl
or
mov
aas
or
push
shr
stos
fwait
add
dec
add
shlb
push
pusha
add
sbb
lock
dec
lods
std
xchg
mov
sbb
cmp
or
sbb
ret
addr16
or
push
test
sbb
mov
mov
aam
adc
sbb
popf
mov
mov
loopne
fwait
ret
inc
adc
pop
mov
test
push
jne
push
or
mov
loopne
mov
or
cmp
push
xchg
int3
ret
xor
dec
lock
sub
call
sub
lret
pop
mov
mov
jnp
cs
int
mov
scas
ret
rep
mov
add
inc
lock
je
push
sub
ret
and
cmc
idivb
cs
gs
xchg
adc
jb
lods
inc
pusha
and
jne
mov
push
fistps
inc
mov
jbe
incb
sub
or
add
push
test
push
pop
and
inc
pop
xchg
pop
jbe
sub
xorl
jle
inc
or
sbb
repnz
pusha
push
ror
pop
sub
xor
fistl
shlb
add
call
push
sub
xor
add
dec
jecxz
movb
inc
mov
test
adc
sbb
sbb
jo
mov
fcoml
sbb
pop
stc
fcmovb
xor
in
dec
movsb
cli
push
pop
dec
or
in
push
and
jp
lods
mov
add
insb
xchg
or
daa
dec
cmp
movsl
sbb
pop
repnz
mov
adc
push
outsb
rcrb
cmp
in
jmp
add
push
xchg
cmp
push
fistl
cmp
jmp
dec
push
cld
push
rorb
add
flds
sar
xor
daa
or
jns
faddp
pushl
fsub
cltd
dec
pop
xor
mov
xor
push
sub
sub
push
pop
add
fstl
rcrl
push
or
add
push
mov
dec
adc
pop
mov
sub
cmpsb
sub
dec
sub
bound
pusha
push
or
test
dec
sbb
adc
add
aaa
mov
sbb
xchg
add
xor
push
adc
xchg
and
stos
add
or
mulb
xorl
add
xchg
es
mov
and
adc
out
test
push
or
in
aam
push
out
cmp
jl
adc
fnsave
jecxz
sbb
push
and
push
subl
push
pop
push
and
test
int
setne
dec
int3
mov
mov
and
js
fsub
adc
or
loopne
mov
arpl
or
push
arpl
sub
push
mov
ds
jp
dec
dec
sbb
pop
fisttpll
ficoml
mov
test
inc
sub
icebp
sub
cmp
cmp
aaa
imul
adc
xor
or
insb
sub
sub
call
dec
push
mov
mov
mov
pop
fwait
mov
ds
fwait
push
push
test
aas
push
mov
clc
add
ficompl
cli
add
push
imul
push
jl
fldt
ds
push
adcb
and
mov
cmp
sub
jb
in
adcl
adc
jnp
cmp
inc
push
jp
adc
sbb
add
cmp
sub
mov
adc
dec
imul
adc
xor
adc
inc
lcall
adcl
inc
ret
cmp
loope
or
xorb
push
push
fsubr
push
and
push
pop
inc
ret
lods
push
mov
addb
push
add
mov
sbb
mov
sbb
je
xchg
push
nop
and
xchg
sahf
add
je
out
inc
inc
add
outsb
and
bound
add
mov
imul
int3
enter
pop
jae
aad
testb
insb
jae
xchg
xor
hlt
jb
jmp
jns
imul
adc
dec
cmpsl
xor
xor
and
into
xchg
sbb
pop
and
aaa
bound
dec
js
fwait
sub
aas
push
cltd
jne,pn
adc
ja
lock
push
dec
cmc
fs
bound
testb
rorl
or
push
push
or
push
and
orl
popf
or
out
adc
insl
shlb
enter
jl
inc
cmp
inc
pusha
jge
inc
in
hlt
stos
neg
jp
dec
mov
pop
add
or
add
test
fistpl
sbb
pop
popa
and
inc
into
and
jne
mov
ret
adc
mov
mov
insl
sub
add
test
xchg
andb
cmp
aad
dec
mov
xor
mov
imul
imul
loope
fistl
iret
adc
enter
push
lea
push
xchg
pusha
push
dec
sbb
nop
call
pop
jnp
inc
jp
insl
mov
or
mov
movl
clc
push
push
call
cmp
xor
sbb
jl
cmp
inc
loope
imul
lock
leave
cld
inc
je
inc
cltd
movsl
jg
sahf
and
lret
jne
stc
cmc
jo
add
mov
xchg
lret
bound
xchg
xchg
push
inc
je
push
xor
sbb
call
jecxz
dec
es
outsb
daa
mov
push
unpckhps
fs
add
call
push
xor
adc
add
mov
or
inc
adc
push
mov
and
outsl
popf
pop
fs
adc
and
rol
lea
stos
or
cmc
test
jl
dec
sub
imul
push
jmp
pop
add
adc
dec
dec
xor
test
dec
xor
clc
jbe
add
loopne
and
cli
clc
fldz
jg
sub
sub
mov
mov
sar
idivl
sbb
int
stc
or
lret
sbb
mov
je
jnp
inc
cmp
jl
cmp
fists
jno
rcll
adc
test
fidivrl
shll
stos
sbb
mov
inc
fs
sub
sahf
mov
popa
out
sub
inc
push
test
mov
push
in
push
adc
sub
push
sbb
dec
xchg
jge
pop
movsb
cmp
or
sbb
or
outsb
sbb
outsb
xor
inc
and
cmp
jmp
test
dec
mov
pusha
xchg
adc
aam
or
dec
cli
call
call
inc
mov
add
mov
cmpl
cmp
sbb
fsubs
inc
add
ret
in
decb
add
push
shl
push
movsb
inc
push
cltd
push
push
je
adc
lret
cmp
mov
and
into
insl
sub
fadds
pop
roll
aas
ret
pop
adc
sbb
mov
dec
inc
pop
hlt
pop
shl
sti
mov
les
xor
sbb
or
xor
inc
xchg
cmpsb
cltd
add
sbb
xor
xchg
les
push
push
jecxz
and
push
cmp
fildl
lock
or
or
mov
push
dec
and
test
dec
lods
mov
leave
sbb
adc
add
jecxz
xchg
lret
xor
rorw
sub
out
push
adc
xor
adc
shrb
add
pop
push
jmp
mov
in
sbb
cmp
push
adc
mov
add
sbb
and
push
and
inc
inc
bound
cs
and
mov
add
adc
xchg
cmp
scas
jb
or
inc
inc
push
lock
push
or
in
and
cmp
cmp
movsb
sub
fadds
and
push
rclb
cmpsb
mov
lea
xor
dec
dec
sarl
jle
mov
mov
add
or
mov
push
jg
push
lea
push
sbb
mov
mov
lock
lcall
mov
inc
mov
int
mov
or
mov
cmp
mov
sbb
xchg
or
bound
scas
pop
movsb
data16
test
rclb
sbb
and
cs
stos
and
jae
loop
jle
test
push
or
sub
dec
cld
dec
pop
aam
mov
icebp
mov
stc
or
add
add
push
mov
popa
sub
adc
jmp
mov
inc
and
aas
cmp
jp
mov
add
mov
negb
mov
lcall
fcmovb
dec
les
mov
pop
mov
cmp
filds
loope
jne
rorb
or
popa
mov
fadds
inc
dec
inc
dec
lock
testb
cmp
inc
or
jbe
mov
xor
push
or
cmpsb
xor
cs
sub
add
and
cmp
mov
stc
aaa
in
fnstcw
add
cmpsl
cli
jl
jne
add
or
mov
add
push
or
lcall
xchg
cmp
ljmp
add
movsb
xchg
or
sbb
push
or
or
mov
cmp
push
jnp
push
pusha
ss
aas
dec
inc
jne
or
lock
push
jno
roll
dec
adc
pusha
cli
push
inc
test
jns
mov
cs
xchg
jg
add
mov
rclb
lock
mov
sub
inc
inc
ret
mov
aam
lret
xchg
dec
fsubl
add
test
pop
pop
mov
xor
data16
loop
mov
data16
push
cmpsl
cmp
stc
add
lods
mov
mov
insl
xchg
gs
adc
jge
ret
add
and
or
add
push
or
les
lahf
decl
jns
adc
jge
adc
cmpl
sbb
mov
pop
dec
repnz
or
xchg
shlb
mov
push
imul
test
adc
push
stos
ret
mov
push
int3
push
push
ret
cmp
je
push
int
jbe
cmp
mov
sbb
shll
or
dec
pop
int
mov
push
cli
lahf
xchg
inc
cwtl
xor
sar
xor
scas
or
mov
lret
cmp
mov
cltd
lcall
push
adc
sub
push
mov
add
xchg
pop
sti
adc
jne
shlb
or
jmp
pop
push
lock
add
add
push
mov
out
fdivrs
inc
add
adc
outsb
sti
jmp
pop
je
push
mov
bound
xchg
dec
jae
leave
test
loopne
add
adc
pop
or
lret
mov
or
xchg
clc
push
cmp
inc
and
dec
jne
aad
push
xchg
push
loopne
test
in
ljmp
sbb
add
fisubl
test
clc
jge
into
sub
xor
fistpll
pop
jg
js
cmp
je
jecxz
je
mov
lcall
or
adc
push
push
add
sub
aam
push
fdivrs
sub
xchg
mov
push
add
cmp
ja
mov
mov
stc
rol
outsb
inc
add
push
mov
xchg
pop
daa
cmc
mov
jg
fwait
cmp
xchg
push
dec
push
adc
xchg
sbbb
sbb
cmp
arpl
pop
movsb
pop
das
jne
pop
xor
cmp
mov
sbb
cmp
ret
cmp
inc
hlt
scas
mov
jge
imul
cs
cmp
add
es
push
std
loopne
xchg
bound
loope
pop
mov
sub
mov
daa
ljmp
shrl
jbe
cld
aaa
push
add
or
xchg
negb
push
test
push
fcomp
push
dec
mov
xor
jbe
outsb
test
test
xchg
mov
add
dec
mov
mov
pop
jmp
mov
out
incb
adcb
call
cmpsl
or
adc
and
adc
dec
lock
add
sbb
std
cmp
jg
mov
push
xor
aam
jae
fwait
jnp
stos
xor
jbe
add
jle
pop
imul
and
push
push
pusha
xor
sbb
push
nop
lock
inc
clc
ret
loopne
xlat
mov
rcr
mov
jmp
add
xor
mov
pushf
addb
les
or
std
pushf
pop
push
xor
push
jbe
inc
sbb
push
lods
pop
test
test
test
lods
aas
cmp
pop
jo
xor
mov
push
push
pop
or
repz
addr16
rcrb
int3
sub
add
pop
pop
inc
xor
jge
mov
sbb
xlat
cmp
sub
sbb
test
and
inc
fs
out
iret
push
ret
xchg
push
lock
mov
sub
push
sub
push
push
xor
and
lods
and
rolb
jl
inc
mov
mov
sarb
add
nopl
test
mov
jg
call
pop
or
ficoml
outsb
xor
add
dec
cmp
bound
test
das
adc
fmull
je
stos
mov
or
pop
push
xorl
xor
pop
cmpsl
movsl
mov
rorb
push
loope
jo
pop
loope
dec
cld
mov
mov
in
adc
and
pop
aas
mov
stos
add
test
add
aaa
scas
sub
cmp
cld
shll
mov
or
sbbb
adc
movl
jmp
xor
pop
xor
jmp
scas
push
in
push
sub
sbb
in
xor
lods
add
imul
mov
loopne
fwait
sbb
adcl
inc
jmp
push
cmpsb
fwait
and
pop
loope
adc
cmp
scas
push
xchg
xor
loope
push
pushf
dec
bound
das
rcrl
push
fmul
mov
ror
pop
or
push
sbbl
adc
call
push
sbb
ret
pop
inc
push
movsb
jnp
inc
cmp
lcall
ss
push
inc
lret
mov
js
loope
in
test
shrb
aas
call
xchg
xchg
xlat
mov
pop
mov
fsubl
cmp
cld
dec
repz
add
jnp
mov
lcall
lock
int3
xor
and
inc
sbb
stos
and
dec
adc
inc
cmp
fcoml
pop
and
push
jns
sbb
xchg
sbbb
stos
and
pop
mov
aas
ret
cmp
mov
inc
dec
or
in
jns
outsb
inc
push
add
cmp
push
add
jle
and
add
pop
clc
mov
pop
jne
inc
dec
pop
repz
inc
sbb
dec
cmp
jle
dec
cli
std
fimull
add
rcll
fistl
adc
jnp
data16
or
jge
ja
push
cs
das
push
andb
or
mov
fimull
scas
outsl
sbb
jle
int
and
rolb
call
adc
inc
jl
call
sub
xchg
sbb
pop
pop
xlat
xchg
adc
xor
or
out
out
sbb
addr16
mov
sub
pop
inc
push
push
shll
incl
sub
jmp
sti
mov
shl
data16
repnz
add
add
push
dec
cli
and
mov
add
mov
cwtl
jg
mov
inc
and
pop
rcr
loopne
sub
out
add
and
or
ja
inc
adc
cltd
mov
add
add
mov
and
ja
inc
mov
lsl
cmp
add
add
mov
jge
inc
mov
loop
cld
or
lods
arpl
inc
incb
dec
jne
cmp
add
jg
insb
push
fildll
loopne
cmp
add
jbe
push
push
add
sub
xor
inc
and
add
sub
sbb
adc
incl
sub
cmp
sub
lret
clc
inc
je
inc
sbb
testb
inc
sub
push
mov
lcall
ret
jae
js
cmp
dec
inc
clc
mov
inc
mov
or
jne
dec
and
shrl
das
decb
jne
add
jbe
cmc
sub
cmp
and
lret
or
jle
bnd
int
les
std
dec
and
pop
ja
and
lock
jge
mov
mov
and
fs
add
pop
mov
into
in
xor
and
add
arpl
mov
pop
adc
sbb
test
push
sbbb
adc
push
sub
cmp
loopne
data16
lret
adc
nop
ds
add
lods
push
mov
xlat
mov
js,pt
movsb
and
or
fsub
push
sbb
adc
lret
xchg
pop
imul
ja
sub
enter
sahf
mov
out
jno
jecxz
mov
out
shl
ficompl
or
std
rorl
mov
andl
imul
ss
cmp
xchg
mov
push
cmpsl
loopne
inc
or
cmp
not
or
enter
leave
mov
sbbb
dec
add
sbb
inc
jecxz
sarb
imul
or
je
test
push
stos
push
aam
imul
cli
inc
add
jmp
dec
aam
mov
or
mov
adcl
out
adc
push
xor
arpl
cmpb
dec
sbb
outsb
sub
xchg
jbe
or
aas
xor
cmp
and
lret
sbb
fcmovb
scas
or
inc
cmp
xor
aaa
dec
cmp
pop
and
pusha
adc
cwtl
lock
dec
test
sub
pop
cmp
jne
into
xchg
mov
add
lcall
sbb
lcall
xor
inc
xor
dec
sbb
outsb
push
cmp
xor
lods
rolb
dec
add
push
pop
sub
rcrb
scas
pusha
push
cmp
push
and
sbb
sbb
cmc
out
mov
inc
xor
mov
or
push
jo
bound
sub
ljmp
mov
pop
add
mov
not
insl
inc
nop
test
mov
push
cmp
adc
lret
in
mov
xchg
cwtl
xorl
mov
les
clc
pop
adc
mov
imul
xlat
mov
cmp
pushw
lods
inc
dec
insl
push
mov
enter
je
rcrb
push
sbb
test
push
xchg
and
cmp
push
inc
scas
inc
mov
or
ljmp
adc
and
mov
pop
fistl
jmp
ds
aaa
pop
je
insb
lea
iret
push
push
mov
movl
pop
xchg
retw
mov
ljmp
mov
in
mov
or
dec
test
sub
sub
push
push
inc
js
or
mov
push
push
push
scas
ret
jno
cmp
sbb
pop
fcomps
ss
pop
jne
inc
dec
push
pop
adc
jg
out
push
insb
sub
mov
imul
and
jle
jg
shll
xor
jle
loop
test
pushf
ja
sub
lcall
das
cmp
jae
adc
shlb
rorb
jns
loop
movsb
int
into
test
mov
add
jb
out
and
rcl
loop
sbb
mov
push
shl
dec
popf
outsb
cmpsl
enter
and
lods
push
or
sub
lahf
mov
pushf
jl
adc
sub
cmp
fwait
or
sub
stc
and
orl
jmp
mov
adc
sub
add
mov
or
inc
std
ret
fmuls
cmpb
inc
jp
rclb
insb
imul
xchg
mov
lret
jno
ret
mov
rcrb
sub
cmp
jns
jle
add
mov
adc
out
gs
repnz
insb
pusha
jae
mov
rclb
fnstsw
lahf
je
movb
lods
jmp
jbe
push
inc
xor
stos
rcll
jbe
sbb
neg
xchg
sbb
pop
or
int3
dec
add
pop
xor
adc
cli
ds
mov
jae
hlt
sbb
fwait
inc
imul
mov
and
add
dec
lcall
or
loopne
dec
in
sbb
jbe
push
push
or
loopne
enter
xchg
dec
jle
jne
rcrb
jmp
inc
and
mov
lods
adc
cwtl
cwtl
movsb
sub
mov
test
test
cmp
or
jge
mov
lea
call
setns
jne
jge
sbb
ret
pop
mov
mov
dec
jmp
int3
mov
or
bound
imulb
je
sahf
ret
adc
lock
jge
xchg
popa
sbb
and
or
mov
mov
movl
out
sbbb
or
ret
sub
ss
sbb
divb
lret
jg
and
loop
mov
mov
or
and
sbb
sbb
lcall
adc
xor
fbstp
adc
mov
call
sub
sub
xchg
ret
pop
or
nop
add
addb
aad
sub
adc
add
or
nop
fmuls
xchg
es
mov
xchg
ljmp
imul
cltd
into
ds
or
lcall
xor
xchg
mov
mov
cmpb
adc
je
enter
clc
dec
xorl
cmp
ret
jbe
cwtl
jne
negl
jae
movsb
rcll
mov
cmp
pop
rorb
imulb
fstps
das
sbb
mov
pop
inc
mov
xchg
sub
loopne
dec
rolb
clc
push
cli
jae
or
lods
xchg
adc
add
sbbb
mov
or
aad
inc
bnd
mov
cmp
push
repnz
xor
pop
add
mov
cmpsl
loope
dec
sbb
or
dec
cmp
ss
adc
jne
dec
enter
sub
cwtl
or
push
fwait
xor
xor
adc
jno
push
xor
dec
sti
jp
ljmp
inc
cli
jecxz
push
sub
inc
or
push
cmp
outsb
xor
jp
or
cli
dec
push
shrl
loopne
ret
and
add
lock
jo
mov
pop
mov
call
mov
pop
mov
mov
and
mov
cmp
movl
das
scas
out
jbe
rorl
or
mov
outsb
mov
mov
xor
sbbl
cmp
mov
and
ret
sti
cmp
je
scas
adc
mov
sbb
les
dec
sbb
dec
inc
add
jo
add
dec
or
adc
sbb
push
enter
pop
sub
push
jmp
enter
movsb
mov
sub
rcrl
jge
or
and
rcrl
mov
icebp
xchg
add
inc
pop
sub
fs
xchg
movsl
pop
sbb
out
rolb
mov
test
jbe
mov
pushf
ret
outsb
sub
mov
mov
adc
inc
bound
dec
mov
cmpb
jne
ret
or
ficomps
or
ss
sbb
inc
scas
and
adc
sub
xor
je
pop
fadds
sbb
lcall
cmp
std
dec
cmp
test
add
mov
dec
pop
test
testb
add
cmp
and
adc
jo
adc
cmp
push
iret
popa
aad
jp
mov
or
shr
shl
or
jle
fadds
pop
mov
xor
and
push
scas
add
push
dec
mov
adc
enter
push
jne
popa
mov
adc
dec
or
or
cmp
sub
jbe
cmp
je
xchg
sub
pop
or
movl
pop
int
outsb
mov
sub
push
mov
scas
inc
cmp
lret
shrb
inc
xorb
insl
pop
jg
cmp
je
mov
mov
xor
add
cmp
scas
divl
adc
mov
push
jle
or
dec
addb
imul
lock
test
jne
sub
lods
sahf
mov
cld
add
push
mov
ds
pusha
push
mov
mov
sub
push
mov
jbe
mov
ret
adc
xor
pop
orl
inc
out
pop
add
pop
mov
mov
std
cmc
pop
push
je
pusha
mov
test
lods
or
or
xor
xor
or
in
dec
or
dec
call
sbb
push
cmp
daa
mov
mov
sbb
add
sbb
dec
out
roll
ljmp
mov
push
test
ret
inc
add
and
sub
adc
inc
cmp
push
pusha
sub
call
loopne
mov
aaa
jne
lds
orb
push
xor
and
mov
icebp
mov
adc
sbb
test
idivl
push
ret
test
or
pusha
jnp
icebp
xchg
jl
jecxz
jecxz
cmp
inc
iret
push
push
cmpsb
ja
jle
outsl
inc
enter
hlt
mov
ret
xor
mov
dec
and
cwtl
cmpb
jns
sbb
push
push
pop
mov
add
cltd
xor
lcall
outsb
push
dec
ret
jl
shrb
or
cs
icebp
xor
test
mov
pop
dec
mov
mov
xchg
mov
push
mov
add
lds
jle
das
stos
mov
fstl
es
or
inc
lret
sub
xchg
jb
cs
in
xor
or
dec
enter
push
lea
out
fwait
divb
inc
je
subb
pop
orl
sbb
fiaddl
clc
push
xor
dec
lret
push
sarb
call
or
mov
cmp
fidivl
push
mov
rorl
aam
test
loopne
fwait
mov
push
sbb
jne
popa
and
inc
mov
mov
cmp
or
lds
das
push
xor
mov
adc
pusha
xor
fmul
and
cmpsb
or
mov
cmp
sbb
rorb
jnp
fadd
outsb
stos
fisubs
sti
arpl
push
push
inc
imul
movl
test
cmp
xor
ficompl
call
inc
mov
shrb
into
sbb
popf
xor
push
test
adc
stos
fsubs
push
push
aas
iret
jle
jnp
fstpt
inc
or
stc
inc
sbb
ret
pop
and
push
pop
add
cmpsl
cmp
sti
stos
arpl
mov
inc
out
roll
jns
call
jl
dec
inc
mov
jl
aaa
jnp
mov
jne
rolb
push
mov
jne
dec
nop
cmp
gs
iret
mov
lds
jmp
adcl
jecxz
decb
push
mov
inc
sub
jae
mov
and
add
mov
cmpsl
lods
and
xchg
decl
mov
nop
xor
out
mov
scas
incb
add
test
loope
shr
add
das
inc
pop
jbe
mov
mov
add
ret
add
inc
add
arpl
inc
addr16
dec
dec
cmp
rol
xor
loop
or
or
pop
push
push
rclb
add
sbb
imul
hlt
ljmp
add
bound
lret
adc
pop
pop
xchg
pop
dec
or
pop
inc
jmp
inc
imul
sbb
cmp
idiv
testl
xchg
xchg
xchg
test
mov
arpl
lods
lahf
insb
je
adcb
push
sqrtps
sti
outsb
xchg
sub
aas
or
call
pop
cmpsb
pop
idivb
aad
sbb
cmp
mov
sub
movsl
jne
rcrb
pop
mov
xchg
mov
mov
fwait
adc
pop
mov
fucom
or
adc
ret
push
sbb
xchg
dec
or
lret
push
outsl
dec
fcomp
nop
push
ja
jae
or
mov
iret
popf
cmp
adc
mov
inc
mov
filds
jmp
test
xchg
inc
push
mov
dec
inc
cmp
add
jo
dec
xlat
xchg
lcall
sbb
rorb
lock
sbb
add
mov
rclb
test
add
jbe
mov
les
clc
fsubrs
clc
dec
dec
jne
data16
sarb
ficoms
jmp
lea
je
or
mov
add
shll
sti
bound
rorb
jne
inc
mov
aaa
and
add
jg
xchg
sub
fnstsw
and
inc
cmpsl
add
or
cmc
pusha
cmp
outsl
pop
xor
xor
jns
jae
imul
jns
shrb
nop
cmp
roll
pop
bnd
fwait
jns
push
push
notl
fdivl
push
xor
xchg
lds
cmp
sbb
add
cmp
mov
cmpsb
dec
cmp
adcl
out
outsl
push
mov
add
cmp
add
sub
test
in
adc
and
dec
ret
ret
enter
or
xchg
ljmp
lds
stc
adc
inc
sbb
mov
repz
imul
xor
sahf
fidivs
push
pop
and
dec
int
lahf
push
pop
pop
jnp
rcl
leave
push
and
add
push
rcrl
adcl
int
sbb
xchg
jae
loopne
add
andl
mov
or
cltd
xchg
out
lahf
nop
adc
in
arpl
xor
pop
enter
dec
dec
adc
test
into
cmpb
add
jns
rorb
dec
icebp
add
incl
or
jmp
cltd
push
push
out
mov
wbinvd
test
jge
dec
adc
jge
fwait
push
or
into
sub
mov
push
inc
es
lcall
pop
sarb
cmpsb
test
orl
dec
inc
mov
xchg
jmp
mov
xlat
ss
jge
xor
inc
hlt
in
pop
das
sbbb
xchg
out
sbb
inc
push
clc
in
and
xchg
jg
mov
mov
mov
sbb
loopne
inc
or
faddl
rol
loopne
fcompl
xor
sbb
inc
sub
out
inc
mov
insl
mov
adc
pop
jl
sbb
out
lods
test
lcall
adc
cs
cmpsb
xor
addl
push
or
cmp
xor
shl
sub
pop
test
ret
shr
or
mov
sbb
pop
or
cli
push
addb
ret
or
rep
sahf
or
cmp
and
add
xchg
call
addl
and
adcb
nop
push
jge
imul
adc
ljmp
xlat
adc
jno
push
mov
add
push
in
adc
fs
push
aas
jbe
push
inc
jo
push
shll
pop
sub
pop
cmp
jge
sub
add
xor
pop
lret
adc
jne
rorb
mov
inc
and
adc
loop
cmp
ficoml
cmp
dec
mov
lods
cmp
or
or
ljmp
xchg
adc
or
decb
adc
sbb
out
call
xor
inc
or
jo
js
inc
adc
xor
shll
xchg
ss
ficompl
sub
mov
inc
shll
cmp
adc
dec
push
out
test
outsl
mov
adc
inc
lds
add
dec
sahf
and
ret
and
adc
mov
xor
ja
inc
inc
daa
mov
or
inc
enter
mov
ds
pusha
or
inc
out
dec
cmpsl
fs
or
inc
add
push
adc
leave
loop
sbb
push
std
dec
or
push
or
orb
sbb
filds
movl
movsb
lahf
cmpsb
pop
xlat
and
cmpl
orb
fsubrs
cmp
lds
jae
adc
lods
fstps
dec
or
mov
fs
mov
mov
sbb
lock
mov
dec
xchg
gs
sbb
xor
push
jo
sti
out
mov
fisubrs
jns
pop
cmpl
push
lods
push
or
rcl
fsubrs
or
add
jle
pop
lcall
sbb
push
adc
dec
les
jns
push
mov
dec
xchg
push
push
mov
ja
fwait
xchg
mov
imul
test
pop
test
add
or
nop
add
or
pop
int3
je
jb
and
add
dec
push
cmp
or
cmp
enter
sbb
cmpsb
jge
mov
push
xor
xchg
xor
push
mov
daa
cwtl
mov
inc
pop
arpl
or
jns
out
sahf
add
fcomip
mov
xchg
cmp
mov
call
int3
add
or
je
jo
fnstenv
mov
movsb
push
pop
xchg
add
movb
pop
pop
inc
jae
lea
add
lcall
cmpb
call
das
ljmp
mov
sub
inc
xor
loopne
out
mov
insl
stos
sbbb
mov
imul
bound
mov
and
dec
sar
mov
jge
jmp
or
addr16
and
scas
add
push
jl
or
add
shl
push
adc
lods
fwait
adc
xor
push
or
andb
pop
inc
xchg
mov
mov
inc
sub
sub
inc
sbb
jnp
sbb
je
push
loopne
stos
mov
mov
inc
sbbb
call
bound
fbld
stos
adc
push
ret
dec
adc
push
or
imul
push
out
push
js
inc
lods
adc
leave
mov
adc
push
sbb
push
mov
adc
add
dec
mov
nop
dec
mov
cltd
pop
adc
je
fdivl
adc
ret
sbb
or
aaa
jl
xchg
xor
or
push
inc
adc
outsl
lods
dec
lock
jg
shll
and
mov
lahf
adc
stos
and
test
xor
subl
mov
dec
xor
jbe
add
aaa
adc
and
outsb
push
dec
add
subb
add
lea
inc
lahf
test
or
mov
sarl
adc
adc
into
roll
pop
adc
imul
sbb
pop
push
scas
sub
ret
repz
jmp
enter
push
sbb
rclb
push
lods
jge
add
push
and
pop
mov
add
adc
fadds
gs
dec
lods
imul
and
dec
push
pop
out
in
cs
daa
xor
mov
inc
aaa
push
push
in
jg
shll
mov
or
and
dec
out
or
xchg
inc
dec
aas
clc
xor
pop
pushf
test
pop
test
sbb
movsl
roll
add
inc
lock
xchg
sbb
test
sbb
filds
lods
mov
or
pop
xchg
xchg
mov
sub
mov
cld
outsb
inc
cmpl
mov
push
std
js
cwtl
adc
push
and
es
pop
add
inc
mov
lahf
pushf
sub
test
inc
sub
test
mov
xor
jl
dec
mov
or
lea
lods
xor
sub
sbb
out
and
jg
push
push
inc
fisttpl
push
arpl
push
fistpll
xchg
nop
les
fmuls
add
loope
inc
mov
push
les
and
xor
add
in
add
cmp
xor
push
mov
test
nop
jmp
lea
aam
sbb
or
mov
dec
pushf
out
adc
lods
filds
orl
inc
fistps
xor
push
push
push
jo
xchg
jnp
cmpsb
adc
rcrl
pop
and
sbb
pop
push
sbb
jo
movsl
cmp
jnp
mov
aaa
pop
cmp
sti
pop
aas
andb
xchg
subl
dec
sarl
pop
loope
adc
jl
popl
mov
jl
mov
loope
pop
ret
jmp
cltd
dec
cmp
ud2
mov
data16
aam
or
sub
cmp
mov
or
cmp
lcall
jnp
xchg
push
or
andb
dec
sbb
mov
psubb
mov
or
xchg
in
mov
loop
jecxz
push
orb
inc
inc
lea
rolb
popa
cmp
lods
mov
sub
fwait
mov
cvtdq2ps
jne
jmp
int
cmp
jne
push
push
adc
xchg
and
and
cwtl
adc
xchg
mov
and
in
cwtl
and
xor
pop
in
and
pusha
sub
add
inc
add
add
call
aaa
not
and
imul
mov
mov
fbld
mov
xchg
je
inc
push
jge
lock
adc
push
lds
xchg
mov
imul
push
movsb
bound
je
push
dec
shlb
sub
movl
cmp
push
pushf
push
mov
pushf
inc
push
jo
jge
add
scas
mov
popf
xor
adc
mov
leave
mov
orl
rol
cmp
ds
sub
insl
ret
cmp
jl
xor
adc
push
jne
pop
push
and
pop
addps
jle
incl
push
incl
cmp
jle
insl
mov
aas
mov
imul
push
adc
push
mov
jmp
decl
mov
jo
stos
add
jno
imul
into
jp
fildl
dec
dec
mov
lods
mov
icebp
xor
jb
scas
insb
ljmp
push
pop
call
int3
add
add
test
pop
data16
shlb
sbb
push
sti
mov
sub
mov
out
mov
pop
cmpsl
dec
daa
push
xchg
leave
and
adc
jl
aam
adc
jl
sbb
adc
adc
repnz
in
out
push
cltd
ss
cltd
fs
dec
push
xor
hlt
add
shll
or
xchg
inc
cmpsb
or
mov
mov
or
pop
ss
xchg
stos
dec
mov
push
daa
roll
fists
add
or
daa
add
mov
push
pushf
add
ret
aaa
and
add
shrb
lret
xchg
ret
mov
jns
shlb
or
loop
adc
xor
mov
xchg
sub
mov
sub
sub
xchg
sub
push
mov
mov
mov
sbb
leave
aad
fistl
and
pop
leave
xchg
pop
push
sbb
xchg
sbb
inc
or
repz
jmp
and
xor
inc
ret
pop
mov
fcoml
divb
inc
test
dec
push
sbb
mov
pop
and
lret
mov
cwtl
mov
test
push
dec
in
pushf
pushf
adc
xor
xchg
adc
adc
ds
scas
enter
add
push
movsb
dec
dec
dec
dec
push
push
dec
dec
or
add
mov
daa
daa
daa
or
cmp
pop
mov
aas
or
pop
sub
aas
xchg
xchg
sub
les
sbbl
in
adcb
adc
shrb
or
roll
mov
lods
shlb
shlb
sub
xchg
lret
sbb
and
leave
insl
adc
arpl
add
out
ds
ds
xor
test
mov
or
popa
test
push
mov
js
jae
push
mov
inc
cmpsl
fsubrs
adc
rolb
adc
mov
xchg
ds
or
or
data16
pop
lods
inc
pop
cli
lea
std
stos
xor
sub
and
and
cmp
lods
sbb
insl
sbb
push
dec
loopne
sarb
rcll
or
sarb
mov
push
or
fildl
xchg
push
gs
cltd
or
xor
in
je
xchg
add
push
adc
in
imul
data16
test
dec
fmuls
mov
and
jl
push
imul
push
mov
sbb
dec
aas
push
icebp
mov
es
je
xchg
sbb
jle
lcall
test
test
ds
inc
xor
or
dec
cmp
jle
push
lret
xchg
xchg
cs
lret
adc
xor
push
sub
xlat
gs
jge
xchg
dec
aam
scas
pop
lock
sub
push
int
xchg
adc
xchg
out
call
loop
inc
push
inc
and
mov
add
repz
jg
push
inc
outsb
sbb
dec
pop
rclb
sbb
mov
and
inc
add
jmp
int
xchg
scas
add
push
rol
cmpsb
pusha
cmpsb
lea
loope
data16
cwtl
int3
fwait
stc
push
lock
mov
push
dec
sub
pop
xor
pop
inc
jne
std
pop
pusha
sbb
push
push
test
inc
imul
or
test
pusha
fs
mov
cmp
int
fwait
nop
adc
and
pop
rcrl
or
cmp
mov
xor
mov
or
mov
jne
add
pop
inc
mov
jmp
sbb
add
scas
xchg
push
pop
mov
mov
into
daa
stc
outsl
dec
inc
fimull
jne
loopne
push
push
loopne
inc
adc
enter
sub
outsl
lods
pop
xor
int3
dec
sub
ret
and
mov
out
pushf
imul
cmp
add
lock
adc
xor
jo
cmp
inc
sbb
imul
push
jg
mov
gs
add
rcl
and
div
repz
fwait
sub
xor
xor
test
add
call
xor
fiaddl
mov
jae
pop
rorl
xor
push
fidivs
add
adc
js
jmp
call
xchg
jge
mov
jge
ja
pop
lea
mov
aam
xlat
dec
js
je
jbe
cmp
cmp
jl
mov
jmp
pop
cmp
jge
imul
mov
lods
cs
rcr
mov
xchg
enter
inc
jg
sbb
in
xor
mov
push
dec
lock
add
aad
xor
leave
dec
push
fnsave
mov
jle
cmp
jl
cli
pop
jmp
push
call
pop
int3
ret
sub
mov
xchg
cmp
add
cli
cmp
cmp
pop
xor
mov
dec
jo
adc
ret
jmp
test
test
outsl
adc
shl
lea
test
or
sub
cmp
pop
test
add
movb
or
sbb
xchg
bound
adc
and
rol
push
or
rolb
lock
mov
lea
xor
data16
shrb
jne
dec
or
fnstcw
pop
or
adc
pop
rcr
mov
cmp
adc
fldcw
mov
dec
sub
lea
jb
adc
fsts
in
ret
adc
dec
insb
sbb
pop
cmp
imul
mov
or
or
mov
pop
xchg
jo
push
adc
ljmp
and
mov
es
test
cmp
movsb
rclb
xchg
push
inc
sub
enter
sub
fsts
imul
cmp
cmp
add
or
aad
lock
inc
cld
dec
ret
fidivrl
cmp
push
jbe
inc
mov
jae
outsl
jmp
lea
das
xchg
mov
dec
mov
add
fs
inc
imul
repz
je
or
xor
ret
and
arpl
test
lea
movsl
daa
lods
push
push
daa
push
inc
insb
fisttps
add
sbb
dec
xor
mov
sub
js
jne
or
cmp
cwtl
push
sbb
pop
adc
or
and
loop
inc
icebp
jg
and
mov
and
add
rorl
push
push
mov
out
test
xor
psubusb
dec
adc
or
xor
movsb
shll
sbb
inc
push
adcb
xchg
push
pop
mov
mov
inc
jb
push
jns
fisttpll
push
jecxz
adc
xor
adc
add
ret
sub
sarb
xchg
and
aam
or
adc
and
or
icebp
je
std
jb
xor
mov
sub
popa
jle
xchg
sbbb
test
jb
xor
dec
mov
mov
or
icebp
dec
adcl
push
addr16
stc
adc
inc
and
fsts
mov
xor
cmovle
data16
dec
add
or
push
pop
fs
xor
pop
dec
mov
jl
cmp
jnp
push
mov
adc
pushl
mov
nop
adc
jle
sub
jge
and
clc
cmpb
xor
sbb
ret
repnz
dec
jae
or
push
add
sub
adc
add
addb
inc
push
rcll
xchg
and
sbb
pusha
cs
xor
push
and
sub
xor
shrl
xor
xor
lock
cmp
cmp
inc
je
xlat
nop
stc
sbb
dec
sbb
or
dec
jmp
sub
dec
data16
xor
xor
jbe
pushfw
push
pop
int
lea
dec
dec
pop
pop
jg
lds
and
pop
pop
gs
fidivrs
sbb
sbb
xor
pop
or
movl
mov
data16
sub
fcomp
mov
or
or
xor
cmp
leave
push
xchg
sbb
cmpsb
in
push
mov
xor
in
shrb
jae
or
cmp
push
jno
jnp
filds
dec
adcb
sbb
add
call
in
push
pop
and
push
sbb
sub
jle
jg
xchg
imul
pop
adc
fs
shll
inc
push
fldt
ja
adcb
out
push
pop
testl
pop
push
add
push
mov
adc
push
or
mov
inc
jne
es
not
outsb
inc
nop
push
sahf
cmp
cmp
jne
and
cmp
test
insb
imul
jae
fnstsw
push
sarl
push
xor
cli
test
jb
add
ret
les
mov
mov
mov
push
aaa
mov
pop
test
shll
scas
xor
and
imulb
sbb
mov
notl
adc
sbb
mov
mov
fdecstp
inc
adc
or
stos
or
mov
out
and
mov
mov
add
lea
aas
pop
sahf
xchg
int3
dec
or
adc
lea
mov
dec
sbb
inc
or
or
mov
and
push
or
ret
push
sub
jle
mov
push
push
mov
addr16
test
lds
add
push
add
jb
mov
add
pop
xor
push
xchg
fdivrs
adc
mov
push
cs
push
enter
addb
insb
cmp
imul
sti
mov
push
xor
sub
xor
cmp
test
cmp
adc
addr16
push
je
outsl
fs
mov
jno
pop
xchg
add
or
dec
mov
ret
push
or
add
sub
mov
xchg
xor
mov
dec
xor
pushf
call
dec
notl
and
or
inc
and
add
outsb
cmp
mov
scas
js
jge
cltd
je
data16
cmpsl
push
push
in
or
sub
or
call
mov
or
add
ret
mov
cmc
jg
fdivrs
insl
cs
dec
lret
sub
out
mov
push
xchg
push
int3
jne
push
cmp
test
push
jl
rcrb
sbb
je
cmpsb
mov
sub
int
dec
and
jle
cli
fwait
clc
mov
push
pop
lods
sbb
pop
ret
fs
mov
adc
pop
and
pushl
cmp
or
das
push
inc
pushf
mov
divl
cli
je
test
rclb
pop
aaa
push
insl
scas
jno
sub
nop
push
and
push
adc
jl
sub
pop
inc
inc
fdivs
imul
add
mov
pop
lcall
xchg
lea
or
push
adc
mov
push
aaa
lods
or
adc
sub
aad
push
cmp
movsl
lds
sbb
leave
popa
sub
inc
leave
jle
std
sub
mov
push
cmpsb
mov
push
lret
sub
inc
sahf
and
jbe,pn
sub
nop
jl
clc
movsl
test
cmp
cmpsb
add
outsb
inc
mov
ss
cs
inc
lods
addl
inc
inc
xor
in
and
xchg
lcall
push
insb
inc
xchg
xor
idivb
out
xor
mov
out
loope
stos
xor
push
or
inc
cli
imul
pop
inc
cmp
and
pushf
add
and
mov
adc
pop
lods
xchg
mov
fnstenv
and
sub
dec
stos
aad
sub
sbb
rorb
and
mov
push
sbb
mov
test
shrl
or
punpckhbw
orl
cmpsb
aas
mov
adc
push
aaa
pop
imul
test
xlat
push
sbb
pop
fiadds
or
adc
jmp
repnz
sub
aas
ror
out
jmp
les
push
imul
subl
pop
push
aaa
sub
push
push
add
into
outsl
jecxz
or
mov
jns
adc
sub
pop
pop
push
add
fmuls
xchg
jle
cmpsb
test
xchg
mov
inc
clc
testb
xchg
xchg
add
lret
mov
add
dec
es
fldcw
pop
add
cmp
loopne
inc
rcll
mov
and
mov
xchg
push
mov
mov
addr16
inc
pop
sbb
mov
push
inc
sub
sub
and
imul
repnz
inc
pop
add
xchg
pop
jb
adc
mov
jb
xchg
and
imul
rclb
push
pushf
push
jb
pop
sbb
sahf
add
and
push
and
out
mov
insb
or
sub
js
adc
add
pop
pop
fiaddl
ret
shrl
cmp
cmpl
xor
jae
inc
sbb
inc
and
adc
pop
leave
and
inc
and
repnz
and
sbb
andb
and
shrb
cmc
sti
pop
inc
push
sbb
daa
fists
imul
pop
cmp
popa
test
aad
mov
push
push
js
mov
sbb
cld
jg
mov
cmp
rorl
dec
adc
lock
or
adc
sub
rep
cmpsl
sahf
insl
insb
sbb
add
pop
add
xchg
mov
add
and
adc
lahf
dec
push
sbb
insb
cmp
daa
pcmpgtw
mov
test
adc
push
dec
add
or
mov
aam
push
xchg
xchg
xor
push
lcall
scas
js
shrb
iret
add
pop
jb
add
dec
mov
shl
js
jl
arpl
repnz
mov
rcl
cmp
jle
cmpsb
push
push
dec
decb
jmp
es
adc
test
or
mov
add
push
sub
mov
dec
fmuls
jns
jg
fs
xchg
fisubs
mov
out
filds
mov
cmp
dec
inc
pop
and
push
mov
into
push
pop
lods
adc
push
pop
add
mov
xchg
loope
out
jl
dec
add
out
xor
mov
add
insl
push
push
push
push
sbb
jle
sbb
faddp
lcall
jns
jbe
or
xor
lahf
xchg
sbb
xchg
jge
sub
fdivr
dec
mov
outsl
mov
push
loope
sbb
std
mov
mov
rol
add
jge
xchg
mov
fildl
je
gs
lods
in
std
lcall
sbb
sbb
pop
xor
pop
int3
sbb
into
sbb
mov
leave
adc
es
or
inc
xchg
mov
sbbl
inc
or
fs
aas
push
jo
sti
inc
add
push
sub
add
test
add
clc
les
adc
pop
mov
lahf
sbb
mov
je
dec
push
test
cmpsl
or
insb
repz
and
and
xor
pop
pop
pop
push
push
lods
push
mov
ja
dec
clc
dec
leave
mov
add
mov
xchg
loope
mov
les
inc
cmp
ljmp
or
call
lahf
sub
xchg
cld
stc
cwtl
xchg
jns
sub
negl
test
mov
sarl
fmull
fcmovnu
mov
push
sbb
or
out
loopne
dec
mov
dec
xor
lods
sarl
leave
or
jo
iret
and
inc
lahf
xor
test
add
daa
pop
movlps
ss
mov
push
mov
add
xor
adc
outsb
sub
inc
cmp
rclb
dec
das
mov
std
add
fsubp
mov
dec
inc
sub
mov
xchg
je
fwait
rorb
or
lea
fwait
sub
jno
es
xor
dec
inc
cmpsb
loopne
cmp
xchg
xor
in
andl
loope
js
xchg
sti
or
and
repz
test
sbb
in
sbb
or
push
add
scas
js
dec
sarl
aas
pusha
mov
xor
out
jge
and
cmp
push
xor
push
enter
dec
dec
sub
outsl
inc
lea
push
lahf
orb
insb
std
faddp
push
dec
fbld
adc
mov
aaa
fcomps
movsb
lock
fldl
rolb
sub
push
xor
hlt
mov
mov
mov
or
fcomps
loop
push
js
lret
pushf
inc
adc
adc
sbb
mov
jecxz
fisubs
ss
mov
push
ret
imul
push
daa
xchg
xor
out
sub
adc
mov
dec
xchg
jo
inc
loope
sub
pop
gs
rcr
push
mov
push
sub
cltd
or
or
insb
push
aaa
cmp
xchg
xchg
test
mov
mov
xor
mov
adc
outsl
loope
ds
sub
int
pusha
in
mov
dec
xchg
dec
insb
inc
push
push
push
imul
nop
sub
mov
jmp
jg
jo
sti
adc
xchg
add
lea
pop
js
nop
js
ret
fcoml
cwtl
pop
xor
add
mov
jle
fwait
mov
xchg
mov
push
and
push
subb
or
push
dec
push
jge
inc
sbb
jnp
cmp
add
mov
mov
sbb
and
push
dec
xchg
push
mov
subl
pop
fbld
es
dec
shll
dec
dec
insb
push
jo
mov
jl
cmp
push
aad
icebp
and
mov
mov
in
mov
mov
sub
xchg
shl
leave
inc
push
cwtl
lfs
enter
jge
push
add
sub
scas
mov
inc
push
bound
insb
outsb
mov
bound
jge
test
clc
mov
xor
xchg
add
sbb
mov
inc
ret
cmc
cmp
lahf
aam
loopne
xor
aaa
fmul
xchg
sbb
xchg
in
in
push
jp
or
xor
and
lcall
add
xchg
xchg
test
lret
lret
mov
and
dec
stc
lea
or
leave
test
shll
inc
inc
lcall
mov
test
aas
or
xor
pop
pop
inc
jg
fwait
or
mov
cmpsl
add
and
mov
push
xchg
jecxz
lea
in
xchg
sub
xor
dec
loope
adc
sub
add
cmp
pop
sbb
push
dec
fwait
cmpl
push
movlps
test
mov
cmp
sub
push
sbb
add
bound
cmp
scas
adc
or
xchg
xchg
pop
cmp
or
cmp
repz
xorl
lret
mov
inc
lea
adc
ret
push
push
sbb
push
and
push
pop
sti
push
push
inc
filds
fdivl
lods
cld
lcall
shrb
adc
push
and
sub
adc
pop
push
mov
add
nop
pop
push
fiaddl
shrb
rorl
xor
fdivrs
mov
mov
pop
js
and
fidivrl
call
inc
pusha
sub
orb
push
or
jno
in
cwtl
ss
xchg
mov
sbb
test
xchg
scas
push
sub
pop
push
push
and
mov
xor
inc
fnstenv
pop
aam
jle
fidivrl
mov
cmp
insl
or
in
inc
arpl
push
das
adc
cmpsb
dec
shll
nop
push
pop
sbb
push
inc
push
dec
push
push
ret
mov
add
pusha
ret
push
xchg
mov
xchg
xchg
dec
mov
and
sbb
jbe
lcall
adc
push
add
ja
or
nop
mov
jns
dec
add
std
lds
push
add
mov
js
lds
lret
pop
sub
xchg
movsl
js
jb
test
and
adc
xchg
dec
sub
test
cmpsl
push
stc
faddl
lret
shrb
sbb
sti
sub
jns
add
add
dec
sahf
test
adcl
fisubrs
xor
dec
adc
xor
push
fucomp
test
loope
push
add
sub
and
ja
xchg
cmp
imul
xor
test
pop
roll
mov
xor
shrl
mov
inc
addr16
push
xor
stos
pop
or
inc
push
aad
mov
adc
ret
int3
jne
insl
loopne
jne
add
push
jecxz
xor
cmp
in
lods
aam
and
gs
fsubr
call
pop
pushf
loope
pushf
out
movsb
xchg
enter
jbe
or
hlt
cmp
lock
ret
aas
mov
lods
sub
or
jmp
je
ret
add
cs
or
mov
xor
sub
cmp
pop
push
pusha
cmp
jge
int3
movsb
push
jp
push
nop
mov
jmp
adc
sbb
and
mov
clc
lcall
inc
cwtl
sub
adc
imul
aam
testl
mov
cli
leave
xchg
popf
mov
xor
and
dec
adc
lret
dec
push
not
repnz
test
bound
in
outsb
jnp
repz
loopne
fwait
shlb
rorl
mov
mov
push
shrl
ja
fdivrs
cltd
inc
mov
inc
mov
cmp
mov
jo
or
xchg
decb
cmp
rcr
test
cltd
imul
mov
jl
jp
mov
push
inc
sahf
mov
push
insb
test
lea
mov
push
jae
and
inc
push
and
cwtl
cmp
notb
push
or
lock
xor
lret
push
test
dec
aas
and
jmp
pop
cmp
aas
push
ret
xor
sbb
dec
shl
in
push
nop
loope
push
jmp
pop
test
inc
rorb
fs
push
dec
inc
jns
mov
fmull
dec
iret
add
orb
insb
lds
adc
jp
push
inc
xchg
push
pusha
movl
push
dec
cmp
cltd
jne
fdiv
mov
arpl
add
push
push
mov
pop
fs
sbb
je
mov
mov
clc
cltd
scas
push
cltd
in
push
jns
mov
mov
pop
sub
pop
jnp
pop
mov
les
add
add
inc
mov
pop
fs
push
inc
jg
add
sub
push
jle
pushf
icebp
mov
push
nop
outsb
mov
popa
mov
test
stos
daa
fiaddl
push
ja
adcl
jns
push
or
shll
mov
movsb
movsl
sbb
and
or
and
testl
inc
or
xor
push
cltd
fs
jo
ja
xchg
dec
push
adc
xor
in
outsl
sub
fs
mov
inc
push
mov
cltd
fs
sbb
mov
dec
sub
inc
adc
je
enter
mov
push
or
push
mov
enter
jae
add
pop
test
js
sub
jg
add
data16
xchg
add
ficoms
jne
inc
clc
inc
js
test
mov
lods
add
sbb
cmc
test
push
add
imul
iret
sub
push
mov
or
pop
xor
push
push
std
inc
mov
lock
pop
sub
jb
sahf
sbb
push
and
sbb
xchg
mov
mov
dec
pop
mov
xor
gs
sub
loopne
pop
outsb
dec
sub
or
jg
mov
sub
lret
push
sub
inc
loopne
inc
fs
sub
mov
inc
xlat
mov
paddusb
mov
push
fldl
mov
and
insb
sbb
inc
orb
xchg
orb
mov
inc
out
mov
test
pop
mov
mov
mov
lods
cmp
pusha
xchg
cmp
xorb
out
xor
sub
js
pusha
or
pop
cmp
in
pop
cmp
iret
dec
call
dec
int3
add
mov
cltd
inc
lods
fwait
push
sub
dec
sub
ljmp
rcrl
cmovb
push
pop
sub
repnz
xchg
test
flds
sbb
lods
push
ljmp
add
test
aas
loope
addr16
loope
hlt
xor
ret
xor
add
mov
push
add
mov
dec
inc
adc
jno
fsubs
mov
or
leave
add
int3
dec
push
rcrb
cmp
sub
sbb
pop
pop
in
xlat
push
mov
lret
inc
cld
xor
insl
in
push
pop
sub
inc
clc
dec
xor
add
mov
in
in
or
sbb
bound
pop
popa
add
xor
and
insb
sub
push
insb
je
icebp
sub
push
movsl
adc
push
adc
popa
gs
adc
sbb
push
push
mov
xor
andb
insb
push
pop
sbb
notb
nop
cli
inc
movsb
jnp
or
jecxz
icebp
fs
ret
call
rorb
adc
xor
and
dec
cmp
push
dec
inc
mov
mov
adc
or
adc
sbb
mov
inc
sbb
imul
push
xor
dec
jo
in
pop
pop
jg
loopne
fcomp
adc
sub
cmp
imul
cltd
orb
sbb
adcb
or
or
fimuls
inc
pop
or
ret
fsts
sub
push
das
lret
inc
mov
or
jg
ret
sub
mov
xchg
or
pop
xchg
movsl
cmp
adc
xchg
dec
dec
pop
lcall
mov
sbb
insl
mov
leave
insl
push
push
dec
cmp
xor
inc
and
jg
push
mov
ret
adc
push
xchg
mov
mov
mov
add
mov
call
rclb
or
outsl
inc
aaa
and
pop
andb
mov
testb
dec
stc
xor
repz
pop
sbb
and
push
xor
cmp
xor
pop
push
mov
jl
adc
stos
test
and
jecxz
mov
sbb
lea
icebp
shlb
frstor
pop
repnz
shrb
inc
lods
std
xorl
push
dec
mov
mov
je
lods
mov
insb
cmpsb
mov
aas
pop
xchg
dec
adc
cvtps2pd
or
cwtl
add
lret
pop
xchg
mov
and
cmpl
add
test
cld
xchg
andl
pop
inc
testb
sbb
inc
push
push
inc
push
push
jp
call
mov
or
test
mov
lea
iret
roll
sub
pushf
shll
dec
aad
pop
mov
push
cltd
lods
cmp
loop
push
cs
mov
adc
cltd
fiadds
push
fwait
or
push
add
and
cmp
test
mov
jns
add
je
bound
adc
out
jno
pop
inc
and
adc
mov
or
shll
loop
mov
jbe
dec
ljmp
add
adc
and
mov
mov
push
movl
add
xor
pop
mov
xchg
dec
pop
jo
mov
dec
mov
and
sbb
mov
into
jg
loopne
sub
imul
pop
negb
xor
inc
jae
mov
push
cmp
ret
clc
jl
pop
les
inc
sbb
imul
mov
jge
pop
loop
push
fwait
mov
jg
cmpsb
or
xchg
clc
ret
jmp
push
add
pop
push
arpl
test
int3
or
push
sti
hlt
jb
add
jecxz
push
cmp
dec
push
sbb
fistps
cmc
rcr
inc
jg
fdivrs
cmp
add
or
sti
popf
push
bswap
dec
int3
out
enter
enter
mov
ror
test
das
cli
mov
mov
add
sbb
add
iret
pop
stos
adc
xchg
iret
xor
mov
sarb
or
xchg
cltd
mov
je
fldl
imul
jae
push
nop
je
push
xor
adc
or
je
and
imul
mov
addb
jno
lahf
dec
pop
xchg
inc
cwtl
pop
mov
stos
xchg
mov
stos
dec
sti
mov
dec
lods
out
cmpsl
int3
adc
imul
clc
xchg
popa
cltd
add
cld
mov
fcmove
and
add
orl
scas
jl
dec
xor
lcall
sahf
jecxz
dec
out
scas
stos
push
push
cmp
pop
mov
das
mov
aaa
inc
mov
xchg
mov
push
pop
add
xor
sbb
scas
into
idivl
cmc
loopne,pn
push
push
ret
fists
imul
shl
sub
inc
add
mov
sub
lock
dec
inc
dec
adc
aaa
sub
dec
daa
imull
clc
decl
cmp
push
js
adc
xchg
call
sub
pop
dec
arpl
add
nop
add
inc
push
push
add
mov
push
add
jl
or
nop
push
test
cli
in
and
jecxz
out
jns
mov
or
adc
and
jp
sub
mov
ret
aad
adcl
jge
test
push
sub
fs
test
xlat
rcll
lret
sbb
sub
popa
je
aas
cmp
cmpsl
rcrl
xor
loope
jae
mov
int
adc
cmp
cmpsl
mov
call
lret
clc
aad
clc
rclb
test
dec
mov
jge
xor
sbbb
cmp
inc
jl
jmp
jle
das
xor
or
and
dec
cmp
mov
mov
sbb
nop
pop
stos
cmp
mov
pop
ret
sub
and
fwait
loope
add
inc
mov
dec
jl
sarb
enter
push
or
pop
xor
aam
stos
mov
pusha
or
mov
shr
data16
jle
or
or
ljmp
and
sbbb
lock
pop
push
add
imul
movsb
adc
enter
pop
loope
sub
in
add
int
clc
cmp
dec
add
lea
test
or
adc
and
add
dec
add
pop
repnz
lcall
out
mov
ficompl
adc
mov
inc
inc
inc
add
int3
push
test
pop
xchg
data16
pop
mov
dec
push
and
stos
dec
push
sub
add
cmp
ret
add
dec
jns
pop
jecxz
sub
adc
mov
outsl
adc
ret
mov
pop
rclb
jnp
pop
pop
adc
cmp
cmp
aad
mov
xchg
cmp
or
andl
xlat
enter
push
push
enter
or
imul
mov
subb
test
cld
jmp
addps
push
test
inc
push
push
sbb
addl
sbb
loopne
pushf
ja
jmp
jle
and
push
cmp
and
push
cmp
push
and
sbbb
ss
add
and
sub
xlat
and
mov
add
sbb
jecxz
rol
repz
orb
and
pop
daa
or
adc
shll
mov
jecxz
loop
shl
ret
add
fisubrs
adc
into
xor
sti
cs
mov
mov
pop
push
adc
pushf
sub
jge
xchg
mov
push
and
lea
scas
pop
stc
js
test
mov
je
cmc
sub
test
inc
hlt
adc
and
dec
sahf
inc
addl
mov
adc
cmpsl
rcrb
imul
ret
lea
adc
add
div
mov
je
lods
pop
aad
dec
js
lea
push
sbb
loopne
test
sub
cmp
in
mov
sub
inc
arpl
cmp
mov
dec
sbb
inc
or
jp
push
out
jbe
jo
cmpl
pop
cld
and
rcll
je
je
mov
test
add
add
movsl
or
ja
adc
push
add
xchg
dec
jl
xchg
sub
jmp
sub
ret
push
sbb
sti
arpl
imul
mov
and
test
mov
sub
jmp
cmpsl
or
lods
test
mov
adc
cmp
push
jae
cmpsl
rcrl
xor
add
adcb
jl
popa
subl
insl
add
push
icebp
lock
xlat
fldl
loope
insb
repz
dec
and
pmaxub
cmpsb
loop
incl
movsb
push
add
push
or
aam
push
pop
mov
aaa
decl
jne
mov
jmp
in
or
mov
push
sbb
adc
pop
loopne
inc
sub
or
or
or
mov
lock
lea
imul
enter
inc
jl
pop
dec
sub
push
add
andb
testb
cmp
xchg
xchg
cmp
ds
jb
dec
test
loope
lret
aas
and
jbe
jl
push
into
push
and
pop
xchg
mov
mov
in
es
xor
insb
orl
xor
inc
daa
mov
adc
in
pop
jae
fwait
or
leave
enter
or
sub
mov
add
loop
push
sub
mov
call
jo
js
jmp
ret
ds
pop
mov
testb
mov
movsl
nop
push
shlb
mov
leave
push
cmp
add
pop
pop
mov
repz
repz
je
insb
es
dec
test
movsb
pop
pop
sbb
mov
sub
stc
fisttpll
decl
ret
lret
sbb
pop
addb
shlb
add
call
and
testb
adc
mov
out
pop
or
or
shll
and
pop
sub
sub
or
jmp
push
je
adc
ret
cld
xchg
dec
mov
aaa
sub
and
repz
sub
jo
inc
jecxz
push
inc
xor
fiaddl
es
rcr
fimuls
pop
dec
lea
mov
dec
addl
pusha
je
ficompl
jns
ss
jo
sub
xchg
dec
imul
pop
cli
jne
fnsave
fnstenv
je
xor
ds
inc
lsl
push
add
xchg
insl
jl
push
add
jp
and
shl
mov
xchg
push
or
test
xchg
push
mov
fdivs
fcomps
sub
out
movsb
out
pop
sbb
aaa
xchg
xlat
cmp
or
cltd
mov
push
adc
push
push
add
test
lds
ret
push
or
pop
and
fs
daa
or
cmp
mov
push
pop
into
xchg
popa
imul
mov
xor
push
push
xor
and
inc
pusha
int
sbb
test
cld
adcb
mov
mov
xor
in
stos
in
adc
daa
fiaddl
movsb
popf
loopne
sub
clc
int3
stos
les
or
push
int
mov
push
fdivr
scas
inc
orl
or
and
add
stos
sub
je
aaa
lock
insb
into
or
mov
xchg
add
sub
pop
mov
lock
sbb
dec
mov
xor
adcl
xchg
push
imul
enter
fidivrl
int3
xchg
int3
fsts
outsl
imul
pop
js
add
subl
inc
dec
mov
imul
les
mov
push
or
cmp
and
nop
outsb
push
sar
leave
inc
inc
loop
xor
push
aad
and
arpl
jl
arpl
xchg
ret
adc
std
xchg
daa
jo
lret
mov
or
add
pusha
fwait
sub
pop
push
push
stos
arpl
push
adc
pusha
popf
sbb
shl
divl
jge
out
sti
pop
cld
pop
cld
push
dec
and
shl
and
mov
je
mov
lcall
ret
adc
enter
cmp
cmp
cmpxchg
push
mov
lret
and
xor
ret
mov
sub
push
mov
daa
sub
sub
inc
adc
mov
add
sbb
jmp
cmp
adc
scas
pop
or
jb
stos
or
push
and
sub
cmpsb
je
adc
jg
push
inc
sub
lahf
pop
inc
fldl
pop
lock
sub
mov
push
dec
ret
sbb
test
xor
int
or
dec
cmc
roll
mov
test
pop
xor
mov
lret
pushf
push
sbb
add
rolb
xor
dec
movsl
dec
pop
add
cmpsl
xor
push
je
xlat
xchg
jp
inc
push
cmp
fiaddl
hlt
or
loope
adc
dec
loope
mov
sahf
dec
push
roll
fbld
test
push
push
jmp
cld
fsubr
adc
or
outsl
adc
sub
movsl
sbb
rcrb
sub
out
and
dec
push
pop
bound
and
loopne
add
or
bound
mov
lock
mov
stos
adc
cmpsl
dec
lahf
movsb
cs
or
aam
push
pop
push
cli
sub
mov
adc
aaa
outsb
add
jmp
inc
arpl
mov
sahf
out
add
or
sub
sub
mov
cmp
setbe
test
adc
dec
jne
and
add
adc
pop
decb
pop
sbb
in
es
sub
adc
add
and
add
sub
out
iret
mov
int
xchg
pop
out
xchg
shll
mov
inc
xor
xchg
mov
sbb
mov
inc
ja
adc
lods
mov
pushf
ret
lret
sub
add
cmp
xor
push
inc
pusha
sub
popf
adc
addr16
add
rcll
loope
cmpb
pushf
push
fwait
sarl
push
or
or
xchg
icebp
or
or
add
jl
cmp
jl
cmp
push
jle
cmp
jl
cmp
xchg
movsb
sarl
lsl
orb
sub
or
loopne
add
cmp
leave
xchg
lea
mov
out
call
xor
or
lahf
sbb
jmp
inc
adcb
pop
sbb
xchg
cmp
cmp
sub
shll
pop
add
or
push
xor
xor
and
and
and
in
je
adc
je
or
je
sub
je
fwait
fwait
fwait
inc
and
je
and
jne
xorl
and
sbb
mov
adc
cmp
dec
pop
inc
rcl
pop
jnp
dec
sub
cmp
pop
lret
xor
out
mov
mov
push
mov
push
mov
dec
sub
and
imul
pop
mov
lea
xor
xor
sahf
xor
mov
cmpl
xor
pusha
rolb
sub
add
cmp
inc
dec
push
lock
loop
hlt
bound
jne
roll
dec
repnz
movsl
out
data16
adc
adc
add
mov
adc
and
mov
add
repz
or
mov
push
dec
dec
push
cltd
fsubs
inc
hlt
add
mov
push
sbb
push
jmp
addr16
xchg
inc
cmp
jmp
das
je
sub
jbe
outsl
test
scas
ror
les
inc
xchg
popa
popa
pop
xor
dec
inc
fiaddl
and
or
in
adc
movsb
dec
fcoms
mov
or
dec
mov
add
dec
scas
jne
in
je
xchg
inc
inc
push
cmp
dec
insl
push
xor
popf
or
cmp
mov
adc
push
mov
push
mov
mov
or
push
pushf
cmp
repz
jnp
pop
pop
in
cld
js
repz
jns
xchg
push
lret
or
and
sbb
pop
or
or
dec
in
or
or
or
and
add
dec
mov
add
dec
cmp
cmp
js
insb
lods
fiadds
push
xchg
mov
pop
ja
xor
ret
sub
aaa
xor
inc
test
adc
scas
insl
sbb
js
iret
arpl
cltd
callw
sbb
and
dec
loopne
push
sub
call
dec
jmp
mov
and
sbb
sub
xor
pushf
test
push
mov
or
xlat
movb
jmp
aam
cmp
jp
adc
and
xchg
lea
sbb
cmpsl
jmp
jge
cmp
mov
jge
out
inc
cmpsb
xchg
js
std
add
pop
cmp
and
subps
sub
mov
add
and
adc
or
mov
je
orb
jne
pop
mov
sbb
insb
fistl
lds
adc
push
xor
mov
jo
xchg
pusha
jecxz
or
fadds
add
scas
sbb
push
push
sub
add
notb
and
jmp
out
rorb
push
mov
arpl
jle
sub
sti
arpl
mov
mov
jno
lahf
sbbb
mov
add
jge
sti
test
and
in
jo
sub
repz
pusha
adc
push
mov
push
dec
test
movsl
cli
mov
or
xchg
xchg
dec
mov
or
xor
int3
mov
dec
jp
or
adc
daa
fldl
mov
mov
popa
popa
dec
mov
popa
add
xchg
pop
jo
add
roll
sub
adc
in
add
adc
rolb
cmp
add
rolb
dec
rorl
cs
dec
xchg
sbb
and
dec
shrl
dec
pop
imul
pusha
dec
cmp
popa
adc
mov
mov
lods
aas
dec
adc
leave
orb
xchg
add
mov
push
je
push
ret
push
push
and
mov
insb
xlat
test
sub
xor
xorb
movsl
pop
popf
adc
dec
aam
push
mov
shlb
add
jp
scas
ret
or
imul
cmp
imul
and
jnp
sub
push
and
ds
push
fldcw
cs
jbe
xchg
cmpsb
imul
aaa
adc
outsb
jecxz
clc
sub
jl
pop
jmp
popa
inc
push
adc
push
add
xchg
inc
dec
scas
add
mov
ljmp
leave
jae
sbb
bound
add
adc
scas
push
xchg
xor
mov
push
push
jecxz
inc
and
mov
dec
cmp
enter
sub
add
sbb
enter
pusha
loope
push
arpl
add
push
xchg
xor
cmp
pop
movsl
sahf
xor
adcb
adc
xchg
mov
xchg
pop
jne
in
ljmp
lods
pop
addr16
andb
lods
ja
inc
mov
push
jl
fsts
mov
sbb
jge
mov
inc
pop
and
nop
add
or
nop
pusha
pop
dec
pop
xchg
push
xor
add
popa
jle
push
adc
test
mov
lahf
inc
cmpl
aad
or
mov
push
adc
mov
test
imul
ja
dec
test
sbb
mov
jle
movl
add
test
or
jp
mov
je
xchg
push
pop
fwait
adc
pop
or
jns
sbb
fwait
cs
cs
and
fnsave
addr16
xchg
push
pop
add
aaa
adc
jno
or
arpl
add
fwait
inc
pop
push
stos
test
fnstsw
cmp
test
in
cmp
inc
xchg
dec
cmp
mov
mov
mov
fstl
push
jo
roll
adc
aad
pusha
sub
fwait
shll
mov
cmp
sub
jbe
sarl
and
adc
adc
popf
repnz
popf
mov
inc
je
jmp
sbb
cmpsb
adc
jle
inc
jne
cmp
data16
sbb
xchg
inc
lcall
cltd
leave
sub
cmc
and
in
mov
mov
out
inc
sahf
push
bound
cmp
and
movl
ret
push
fcomps
fsubrs
dec
xchg
mov
xchg
push
dec
pop
push
xchg
mov
and
push
inc
xor
adc
mov
mov
ffreep
xchg
daa
push
imul
subl
or
sub
mov
mov
add
pusha
imul
add
mov
adcb
push
or
sbb
mov
mov
sub
sbb
mov
jns
ss
jne
sbbl
jmp
cmp
pop
lret
and
rolb
enter
andb
mov
bound
xchg
call
mov
jmp
aaa
das
cmp
push
sbb
xchg
clc
imul
inc
inc
pop
inc
pop
or
push
mov
pop
addl
jl
or
cwtl
pop
movsb
xor
pushf
inc
or
push
test
mov
mov
iret
xchg
outsb
cmp
sub
cmp
aas
test
fwait
adc
jmp
mov
mov
push
dec
imul
sub
ret
adc
pop
rorb
dec
imul
loop
test
mov
dec
mov
scas
push
jge
neg
push
push
cltd
mov
mov
pop
jmp
jp
mov
dec
arpl
or
ret
mov
in
addl
or
push
in
jl
cmc
push
or
dec
xor
push
pop
dec
je
push
rorl
fistl
js
inc
leave
and
inc
mov
outsb
push
mov
roll
je
sbb
lret
xchg
xor
pusha
mov
inc
pop
adc
cwtl
and
xchg
push
adc
cmp
push
je
pop
cmpl
icebp
rclb
lods
rol
adc
or
mov
sbb
std
pop
mov
shrb
jae
mov
jg
xor
sbb
addr16
push
add
jo
inc
fidivl
dec
scas
cmp
movsl
push
daa
mov
pushf
lea
sbbl
rolb
push
inc
adc
sbb
out
push
frstor
pop
cmp
jbe
add
inc
scas
dec
scas
ja
lahf
sbb
pop
out
adc
cwtl
dec
sbb
cmp
xlat
push
push
add
ret
stos
or
push
and
dec
inc
pop
jne
lcall
push
sbb
nop
mov
mov
fucomip
aaa
ret
clc
push
nop
and
cmp
fwait
sbb
jmp
fld1
push
mov
or
cmp
pop
or
inc
mov
cmp
push
xchg
or
xchg
je
out
add
dec
rcr
icebp
add
insl
test
push
ret
pop
dec
rorb
scas
je
xor
lods
xor
push
adc
mov
mov
ja
cmpsb
add
dec
pop
cwtl
pop
push
adc
test
xor
mov
lods
dec
mov
scas
xor
ds
aam
sbb
sti
cmpsb
loopne
cmp
or
pop
or
dec
dec
or
out
cmpsb
dec
js
ret
add
cmp
inc
mov
cmpl
loop
jb
ljmp
push
mov
dec
sbbb
sbb
add
xchg
xor
shl
or
movl
scas
xor
sbb
adc
sbb
mov
je
xor
inc
pop
add
es
dec
cli
jo
mov
mov
pop
push
sbb
or
xor
insb
data16
add
inc
push
adc
sbbb
and
mov
jp
jle
ret
sub
mov
addr16
pop
movsl
sbb
push
fs
sbb
adc
in
add
pop
pop
jne
push
xor
push
je
dec
imul
push
xor
sbb
repnz
jns
pushf
xchg
int
dec
inc
push
pop
dec
dec
add
push
inc
cli
outsb
int3
negl
xchg
jg
call
fidivs
sub
sbb
test
in
pop
and
pushf
mov
pop
push
sbb
fs
arpl
ret
insb
fstl
lock
shl
ficoms
mov
or
int
cmpsb
mov
pop
sbb
sub
out
mov
push
sbbb
es
loopne
ds
sbb
adc
xchg
push
and
sub
addl
std
icebp
dec
sbb
adc
mov
ret
xor
repnz
push
gs
or
popf
pop
add
sbb
sbb
ja
push
sbb
jo
ret
xchg
jg
rol
lds
and
push
jno
movsl
ss
fadd
addr16
mov
inc
gs
fiadds
add
inc
subb
add
push
sub
push
pop
es
lret
push
jno
jl
fadds
inc
add
add
and
stos
sub
xor
pop
dec
or
sub
rorl
pusha
push
push
sub
cmp
lahf
insb
xchg
imul
sub
sbb
jge
mov
jmp
out
add
mov
pop
push
rcll
andl
lods
iret
ljmp
add
mov
xchg
cmp
inc
jp
xchg
addr16
add
outsb
orb
lea
sub
daa
lock
adc
test
fisttps
nop
or
movsb
xchg
fbstp
dec
adc
mov
dec
stos
sub
xor
sbb
cli
mov
ljmp
in
push
ret
das
aam
xor
xchg
fnsave
sbb
dec
ret
add
sbb
dec
xchg
andb
cmpsl
test
add
xchg
mov
insb
mov
hlt
add
or
xor
xchg
aam
add
lods
pop
ljmp
jnp
jb
adc
jl
or
push
inc
dec
push
push
test
or
jne
adc
adc
out
adc
push
sarb
mov
jns
xchg
add
popf
nop
cmpsl
and
jae
adc
cs
and
fs
mov
adc
insl
test
xor
fiadds
sub
orb
imul
add
push
loopne
adc
add
loopne
mov
sbb
push
fwait
js
sub
mov
jecxz
sub
xor
or
shl
int
pop
and
adc
sub
adcb
jle
dec
push
push
imul
ret
movsb
je
add
or
cmp
je
add
push
fidivrl
pop
fsubrp
sub
add
jge
sub
and
or
jmp
cmp
or
js
mov
sub
aam
add
sbb
mov
test
sub
sub
pop
adc
pop
nop
xor
xor
pop
fcmovnbe
cltd
loopne
pop
loope
push
gs
or
repnz
sub
mov
pop
adc
mov
js
cld
adc
sahf
jo
xchg
mov
int
aam
xchg
mov
mov
and
ror
and
dec
and
inc
pop
inc
inc
sbb
dec
rcll
ficoml
into
inc
adc
cmp
fmuls
jle
inc
jae
mov
mov
push
mov
add
faddl
lock
ds
daa
jns
das
pop
sub
inc
dec
adc
push
pop
gs
inc
test
inc
rclb
or
bound
testl
testb
idivb
outsb
movsb
add
push
add
push
mov
arpl
lea
adcb
dec
pop
push
rolb
aas
dec
ljmp
bnd
cmc
aam
or
rorl
std
cmp
lock
push
lcall
aad
mov
into
adc
aam
adc
sub
add
lret
push
add
lds
push
cmp
add
sub
dec
or
int3
int3
mov
jge
dec
fldl
pop
pop
adc
pop
fstps
add
daa
cs
cmp
outsb
aas
push
mov
or
sbb
or
jns
add
push
popa
xor
out
mov
shrl
fwait
or
xchg
push
xchg
sbb
xchg
sbb
or
leave
repz
pop
int
inc
sbb
mov
add
int
add
movsb
xor
scas
sti
je
jnp
rorl
das
push
push
and
bound
outsb
pop
stc
mov
cmc
pop
push
cmp
push
add
mov
add
cld
jg
pop
or
in
js
cmp
jmp
loope
xor
jne
iret
sahf
stc
xchg
jl
pop
dec
pop
push
sbb
jmp
push
dec
mov
mov
cmp
or
mov
pop
call
pop
inc
fistpll
sbb
xchg
je
pop
in
lea
push
fs
xor
sbb
nop
mov
xchg
test
or
or
xchg
xor
pop
popl
xchg
push
lret
or
js
jl
or
push
in
sub
daa
or
pop
mov
or
and
setb
add
out
push
addr16
sbb
mov
ret
inc
adc
pop
sbb
jno
sub
jg
mov
pop
cmp
adc
cmp
outsl
fistps
jl
mov
mov
inc
movsb
ret
aas
xchg
mov
into
push
adc
add
add
add
cli
push
stc
pop
clc
in
jns
or
or
inc
sahf
xchg
addr16
or
or
in
jns
or
adc
add
inc
inc
or
mov
cld
pop
xchg
mov
clc
cmp
test
sbb
sub
push
inc
fildl
add
test
jno
pop
mov
mov
adc
jl
or
xor
pop
mov
sbb
les
jo
or
ss
pop
sbb
lea
inc
addl
pop
ret
mov
jmp
or
push
loopne
aam
jbe
jg
mov
xor
or
pop
mov
and
sbb
push
dec
mov
or
push
andl
mov
negb
ret
in
std
xor
pop
je
sti
mov
sub
and
imul
add
shrl
xor
sbb
lods
rorl
sbb
xchg
out
loope
inc
mov
rcrb
lea
push
adc
xchg
arpl
sbb
stc
or
pushl
cli
or
rcr
dec
mov
sbb
out
jl
adc
cmp
clc
push
pop
push
or
add
jae
inc
cmovo
jle
xor
cmp
test
inc
out
add
daa
jl
push
or
scas
add
inc
mov
sub
jp
ret
or
push
das
das
sbb
fadds
cmp
xor
or
sar
or
adc
lods
sbb
sbb
adc
sub
or
jecxz
pop
push
stc
mov
pop
ljmp
stos
sub
push
popa
pop
movsb
mov
je
jne
lds
xor
and
sub
lods
add
xor
orb
loop
clc
out
cmpb
add
push
xchg
and
adc
dec
jne
mov
adc
adc
adc
and
jae
push
ret
ficoms
sbb
mov
ja
xor
or
and
test
xorl
in
mov
xorb
sub
test
stos
dec
or
inc
das
add
sbb
into
loop
push
sub
fsubs
sbb
jp
push
cld
jne
rol
popa
dec
or
ret
xchg
insl
pop
fidivl
mov
sbb
sti
mov
and
push
scas
cmp
call
push
push
jbe
add
aam
cld
xchg
inc
jne
ret
lods
jne
add
and
push
push
push
js,pn
push
mov
mov
mov
cmp
imul
xchg
movb
aad
dec
ret
ds
in
pop
push
aam
test
jge
sbb
pop
mov
push
fsub
test
jg
pushf
and
lds
push
pop
add
adc
push
xor
test
add
cmp
jmp
sub
pop
or
pop
insb
xchg
mov
dec
sahf
in
rclb
cmpsl
add
xchg
xchg
sbbl
lret
lods
pop
or
test
xchg
xchg
dec
dec
jno
add
fstpl
pop
xor
push
sbb
jp
in
xchg
push
push
push
arpl
push
cmp
lahf
sub
dec
xchg
icebp
rcr
aas
jmp
cmp
stc
jne
movsl
cmp
mov
mov
lea
mov
adc
ds
lcall
lds
shll
mov
xor
ret
and
push
pop
dec
in
rcl
cltd
jns
dec
pop
push
pop
pop
mov
mov
ss
xor
sub
fisttps
and
shl
test
and
add
pop
dec
jmp
pushf
aas
mov
lahf
mov
bound
shrl
fsubr
loopne
pushf
add
add
mov
int
call
jp
mov
test
push
pop
lods
decb
pop
std
hlt
lea
push
rep
xor
cmp
fiaddl
mov
movsl
test
jne
adc
and
sbb
mov
sub
ljmp
dec
fiadds
lea
fwait
jge
sub
add
push
and
sub
lea
push
adc
fidivs
ficoml
xorb
jle
or
push
jo
loope
jo
or
in
popf
xor
push
ja
push
mov
sbb
repnz
xorb
mov
push
mov
jp
push
xchg
sarb
add
and
jne
push
sub
enter
shl
pusha
add
pushf
xor
dec
jo
inc
aaa
xor
call
cmp
inc
test
add
push
std
into
mov
cmp
push
or
in
sbb
test
add
push
or
and
cli
js
mov
mov
adc
adc
mov
add
mov
dec
sub
xchg
mov
xor
icebp
cmp
pop
and
mov
or
ud1
ja
xchg
add
mov
inc
xchg
push
add
clc
lea
mov
test
push
inc
cli
jo
jmp
adc
out
and
sahf
push
push
xchg
jle
dec
jp
fldcw
dec
cmp
mov
sub
test
mov
in
push
test
xor
mov
mov
aam
or
gs
aam
xor
pop
movsb
pop
test
fcmove
fiaddl
in
push
jg
dec
sarb
add
push
cmpsb
in
sbb
and
out
add
ret
sbb
xchg
in
int
sbb
jbe
mov
push
add
cmp
rcrl
jo
dec
mov
jp
push
xchg
push
mov
outsl
or
cs
add
jmp
int
insb
aaa
mov
push
push
pop
cmp
bound
mov
xchg
mov
pop
xor
insb
cmp
push
je
and
fisubrl
jge
push
jle
clc
rorb
int3
mov
fnstsw
call
popf
jmp
les
lcall
push
aad
mov
xor
fmuls
xchg
mov
jo
enter
add
mov
add
adc
outsb
xor
inc
loopne
int
cmp
push
jnp
dec
dec
xchg
js
push
adc
jnp
dec
pop
lcall
lret
jge
inc
insb
jno
sarl
and
adc
les
sbb
out
popa
loope
mov
js
xor
ret
sbb
mov
in
andb
add
and
outsb
das
push
insl
jnp
stos
cmp
cs
nop
push
into
cwtl
mov
repz
mov
mov
cmp
adc
pop
pushf
das
sub
test
stc
mov
pop
inc
mov
inc
mov
movsb
cmp
lds
dec
rcr
testl
jg
push
inc
dec
pop
out
xchg
shrb
inc
sbb
cs
jge
cmpsl
jo
cmc
xorb
dec
imul
mov
mov
sub
add
inc
fcoms
dec
test
movsb
mov
mov
sbb
or
ret
sar
stos
and
xchg
add
sub
fcoms
mov
ljmp
lahf
or
push
sub
aas
sub
mov
adc
sbb
lret
jo
cmp
dec
dec
cld
pop
add
sbb
shr
inc
sub
lock
mov
xchg
lods
loop
add
sub
imul
aas
sub
adc
and
sbb
loope
xor
aas
addl
call
test
icebp
lea
or
cmp
mov
pop
or
add
mov
addl
sarl
or
push
push
dec
mov
cmpb
loopne
cltd
mov
jnp
mov
and
pop
sub
enter
and
or
lea
push
xchg
inc
mov
jo
and
sarb
popf
mov
xchg
mov
stos
adc
or
cltd
mov
es
mov
js
sbb
jecxz
daa
fwait
mov
adc
xchg
shr
xor
aam
cmp
or
inc
or
adc
bound
lds
inc
imul
xor
leave
mov
dec
mov
push
or
xchg
inc
cmp
mov
xchg
or
cmp
and
fwait
fwait
cwtl
and
es
push
or
sbb
jg
sbbb
pop
push
inc
movb
add
fs
dec
pop
idiv
clc
add
nop
jo
adc
jp
fisttps
push
jp
addb
inc
imul
inc
sbb
rolb
push
jmp
shlb
mov
idivl
ret
adc
xchg
pusha
fcoml
xchg
ljmp
dec
cmp
sub
mov
in
inc
sbb
aam
inc
sub
fdivs
div
rcr
mov
dec
sub
pop
je
nop
mov
add
cltd
and
sbb
mov
or
mov
or
inc
adc
test
ljmp
rclb
xlat
int
jmp
gs
push
rorl
std
pusha
push
add
lret
mov
mov
popa
pop
popa
sub
pop
inc
or
sub
pushf
dec
aam
add
fmuls
jmp
xor
sub
xor
sbb
stc
push
fbstp
or
cld
lock
sub
sub
push
imul
add
fidivs
push
adc
dec
mull
push
cmpb
cmpsl
rclb
add
js
lea
ss
pop
xchg
cmp
sbb
aas
sub
dec
pushf
inc
ljmp
sarl
jl
push
xchg
aaa
and
fmuls
call
inc
mov
loopne
mov
cmpsl
or
adc
xchg
mov
cld
rclb
inc
popf
inc
push
adc
xor
pop
in
pop
adc
in
cmp
jb
repnz
or
and
dec
or
les
lods
daa
test
xchg
add
or
mov
add
call
xorl
jne
xchg
pop
sbb
aaa
lea
mov
cmp
sbb
sbb
jmp
add
add
bound
mov
js
or
pop
sub
push
lcall
lods
sbb
or
xor
popa
inc
dec
inc
pop
inc
sbb
insb
adc
dec
mov
call
ret
push
add
dec
inc
adc
dec
or
jp
xor
inc
subb
out
xchg
xor
mov
inc
fmuls
push
xor
daa
push
out
jno
in
pusha
call
and
loopne
int3
nop
jo
cmp
mov
into
out
mov
jle
dec
ficoml
add
add
jle
rcl
and
scas
orb
repnz
mov
pop
adc
jnp
jno
test
rcll
fwait
xchg
push
daa
sti
adc
js
xlat
or
sub
push
and
scas
and
jmp
lods
loopne
or
inc
dec
fcompl
and
dec
pop
add
xor
push
fmul
add
or
sbb
add
add
enter
add
pop
jmp
inc
adc
int
xor
mov
movb
in
out
test
pusha
sbbb
push
mov
fsubl
sbb
or
xor
adc
xlat
fidivl
dec
orb
and
mov
rorl
mov
dec
js
xor
and
sbbl
and
dec
shll
loopne
lret
inc
adc
xor
incl
aas
dec
loope
pop
mov
inc
shlb
mov
cmp
and
jb
and
lret
ss
mov
add
cmp
insl
mov
cltd
mov
aas
cmp
and
in
cmp
add
rcr
add
mov
inc
sub
jl
cmp
lret
mov
jg
pop
lcall
flds
fcomps
test
cs
xor
ret
fldl
fcoml
mov
or
sbb
sbb
rclb
fsubl
cli
sbb
aam
imul
add
and
push
xchg
pop
push
adc
or
add
or
inc
outsb
sahf
testl
push
vmovntps
ja
jb
cmp
sbb
lds
addr16
icebp
out
cmpb
add
add
inc
jno
in
jno
inc
xor
adc
pop
sbb
xor
mov
xor
stc
adc
inc
bound
out
rorb
inc
xor
nop
pop
sbb
mov
movsb
and
daa
add
das
sub
das
adc
inc
add
movsl
and
push
adc
pusha
dec
addb
loop
add
inc
pop
mov
and
jl
dec
pcmpgtb
leave
test
sub
lcall
adc
mov
mov
push
push
iret
add
mov
shrb
mov
dec
add
dec
imul
test
push
cs
inc
das
jg
add
imul
addr16
jmp
addl
push
adc
inc
dec
mov
jmp
sbb
gs
dec
push
test
je
cmp
xchg
fldcw
data16
cmp
adc
add
push
push
cmp
jb
cmp
ja
add
jnp
pusha
gs
or
jnp
xlat
add
pop
test
leave
dec
fcmovb
sub
inc
rorl
sbb
roll
inc
and
jo
sub
mov
jecxz
sub
and
or
pop
sbb
pop
stos
push
jmp
fcomi
lcall
inc
mov
les
stc
sbb
jg
adc
push
fsubrs
sbb
push
insl
add
pusha
sahf
jecxz
leave
cmp
pusha
pop
sub
mov
cmc
cs
ret
mov
push
push
mov
mov
sbb
int3
and
inc
cmp
push
js
pop
push
setp
inc
mov
mov
sub
mov
inc
pop
dec
cmp
dec
insl
sub
mov
pop
and
sahf
and
filds
out
movsl
in
cli
push
ss
push
cmovs
jbe
xchg
cs
and
pop
xor
es
sub
push
push
adc
stos
test
or
bound
aas
mov
cmp
mov
sub
mov
lea
movswl
les
sub
xchg
sub
pop
pushf
add
add
push
inc
pop
loope
jmp
stos
test
lea
push
sub
cs
xchg
icebp
lds
mov
push
xchg
pop
xor
pop
adc
mov
mov
xchg
mov
adc
xchg
notl
js
cmp
bound
cmp
mov
inc
and
lret
push
imulb
inc
cmp
cltd
or
and
push
mov
add
xor
adc
adc
adc
sub
xchg
ficompl
dec
cmp
xor
adc
mov
add
add
mov
mov
jne
sub
sbb
and
adc
push
ret
enter
pushf
add
pop
mov
cmp
xchg
or
or
and
sub
sahf
cmc
shr
pop
rcll
inc
mov
in
lock
ljmp
repnz
clc
pushf
pop
inc
pop
addr16
je
sti
inc
les
shlb
cld
mov
or
add
push
jae
push
xchg
jb
jle
pop
scas
dec
sub
mov
pop
jo
lahf
je
lds
pop
or
add
jmp
cmp
adc
cmp
pop
movsl
lods
xchg
popa
adc
dec
mov
push
mov
dec
fdivrl
lds
lea
stc
das
es
sbb
xchg
xchg
sbb
andl
dec
pop
pop
mov
push
push
lea
idivl
adcb
adc
repnz
cmp
lea
repnz
jbe
push
fdivrs
inc
pop
jecxz,pn
mov
js
or
jo
xor
aaa
inc
jl
pop
xchg
jge
add
lods
data16
adc
loopne
inc
add
test
stc
adc
adc
jle
mov
or
add
and
xor
cmp
dec
call
add
fcomps
xchg
dec
or
stc
xor
pop
dec
pop
add
test
inc
lahf
aam
js
push
das
int3
les
and
test
push
push
mov
fadd
pop
xor
dec
pop
loopne
pop
jl
mov
or
in
aam
sbb
imul
add
adc
lea
ret
push
cmp
in
sub
and
insb
jns
pop
push
iret
jns
insb
jns
mov
push
push
mov
jmp
nop
jp
int
jg
sbb
test
in
test
mov
adc
pop
cs
jno
inc
decl
jmp
pop
loopne
imul
push
mov
adcl
mov
cli
sub
inc
sub
add
loopne
aaa
in
mov
dec
push
cmp
ret
outsb
sbb
rol
push
push
cmp
lcall
add
cwtl
data16
loope
push
or
sbb
loope
test
sahf
lods
or
jg
test
adc
add
push
sbb
pop
fwait
mov
icebp
xchg
mov
imull
add
dec
jb
cmc
xchg
jns
dec
sub
gs
or
subb
dec
js
or
push
push
movsl
pusha
adc
jmp
push
jbe
inc
popa
and
jno
out
loopne
push
mov
jp
mov
xchg
sarl
dec
roll
xor
sub
mov
sbb
rcl
push
popf
inc
adc
push
sub
push
popf
pop
inc
sub
in
les
dec
add
xor
sub
pop
bound
hlt
sub
insb
dec
inc
sbb
lds
mov
or
loop
sbb
push
cmp
popa
mov
adc
cmpsb
je
iret
pop
add
ret
je
or
popf
mov
add
mov
test
lea
cltd
lcall
popa
lock
addr16
lock
adc
inc
fstps
sbb
dec
rcrl
dec
mov
cmp
inc
inc
lcall
add
sbb
mov
loopne
imul
dec
pop
push
xchg
jp
mov
dec
adc
xor
add
push
mov
fcmovnu
mov
add
mov
test
mov
mov
addb
or
and
inc
mov
sbb
push
mov
or
and
add
int
movl
inc
push
push
and
daa
jmp
in
mov
mov
mov
mov
popa
call
adc
inc
xor
inc
xchg
sbb
negl
sbb
dec
loopne
pop
dec
out
xor
jae
sbb
ds
mov
pop
imul
ljmp
sbb
inc
je
mov
clc
rorl
push
push
stos
movsl
or
and
dec
push
adc
and
lock
push
popa
nop
test
xchg
clc
pop
sub
adc
iret
jge
dec
xor
stc
inc
ret
mov
adc
ds
sbb
sbb
jne
mov
mov
xor
add
xor
clc
sarb
icebp
and
add
push
push
fadds
sbb
and
cmp
mov
push
rorb
adc
nop
pop
or
out
aaa
sbb
pop
add
fwait
push
je
jl
pop
mov
adc
sbbb
js
adc
xor
add
mov
in
push
xchg
arpl
inc
push
lock
mov
or
push
daa
lods
sbb
adc
mov
and
inc
inc
fdivl
ss
xor
or
mov
xor
xor
stos
dec
testl
sbb
movl
lea
push
clc
adc
push
dec
jmp
sbb
mov
dec
push
sbb
lock
aas
or
push
xchg
and
and
pop
fiadds
mov
cmp
gs
push
enter
pop
push
pop
sbb
nop
in
in
jo
cli
xor
rorb
iret
mov
lock
adc
sarb
data16
jo
mov
and
shl
stc
push
std
fisttpll
divl
rorl
inc
js
int3
bound
in
inc
adc
adc
mov
sbb
aad
shll
sbb
or
mov
aas
nop
mov
inc
ret
dec
push
icebp
cmp
arpl
sbbb
out
sbb
fmuls
add
popf
dec
or
int
lea
nop
pop
push
cmpsb
int
and
outsb
add
xchg
ret
out
adc
xchg
inc
jge
fwait
stos
push
decw
and
or
mov
xor
push
cli
push
in
loope
mov
xchg
xor
shlb
pop
jae
pop
mov
adc
mov
inc
insb
dec
and
adc
imul
push
jge
sbb
sbb
push
imul
lahf
mov
mov
xor
pop
xchg
jmp
push
pusha
add
imul
and
mov
mov
or
mov
scas
push
push
daa
jbe
addl
xchg
std
ficoms
push
mov
int3
mov
syscall
dec
adc
jl
mov
adc
dec
rorl
scas
sub
mov
push
add
inc
outsl
mov
pop
fsubl
push
dec
cmovo
pop
sbbb
cld
pop
jne
inc
add
xchg
sarb
mov
insb
mov
push
mov
mov
add
mov
mov
push
cmp
sbb
push
sub
sbb
dec
mov
rcrl
aaa
add
add
das
mov
xor
mov
rclb
mov
xchg
js
adc
out
push
xor
jnp
mov
sbb
jecxz
xor
imul
test
mov
lods
mov
out
stos
and
movsl
push
addr16
or
jmp
arpl
lret
and
dec
inc
pop
dec
rclb
aam
jbe
arpl
dec
cli
push
sub
sarb
pop
imul
add
push
push
lret
shr
jge
stos
xchg
push
rcrl
mov
xor
andb
sahf
push
cwtl
orb
sbb
sub
xchg
call
mov
movsb
dec
dec
cmp
loopne
push
jo
repz
call
inc
shr
jo
js
pop
pop
fmull
mov
fcmovb
das
es
sbb
ret
sub
data16
pushf
ds
add
push
jecxz
mov
cmp
mov
jbe
cli
or
dec
lods
dec
sub
outsl
dec
call
call
push
pusha
ds
sub
sub
sub
jmp
cs
mov
push
sbb
xchg
inc
xor
pop
and
mov
push
mov
adc
jns
cltd
outsl
fs
test
sub
movsb
push
push
stos
repnz
jo
mov
jl,pt
shl
pop
push
mov
and
xchg
adc
jg
mov
jne
std
rol
sbb
jb
lea
mov
inc
aas
inc
push
outsb
sub
stos
mov
and
dec
add
je
cmp
ret
sub
fisttpll
sbb
and
ficomps
rorb
dec
add
cwtl
inc
aaa
jl
aas
cmp
mov
cmp
ds
out
or
inc
xor
enter
add
scas
fimull
push
push
jne
xchg
rcrl
jp
mov
dec
in
gs
aas
cmp
call
dec
mov
pusha
inc
repnz
roll
dec
push
jl
imul
cmp
mov
or
popf
dec
mov
stos
lcall
and
or
sub
movsl
aas
xchg
mov
scas
movsb
cmp
inc
sub
xor
mov
adc
sub
movsl
add
inc
or
dec
sbbb
pop
jne
lret
lds
adc
push
pop
ljmp
add
cmp
pop
clc
mov
shlb
or
sbb
inc
dec
jns
test
gs
jle
or
mov
mov
outsb
sub
dec
mov
rorb
add
pop
adc
cmpsl
ret
outsl
sub
mov
push
sarl
movsb
sahf
scas
lahf
test
push
xchg
mov
push
insl
xor
test
cmp
xchg
xchg
rcll
add
cmp
dec
and
sbb
test
notl
xor
add
jle
cs
and
shlb
pop
push
add
dec
test
enter
xor
push
cmp
adcl
pop
mov
xchg
das
popa
jne
mov
xchg
inc
push
clc
std
push
cwtl
rorl
daa
ror
dec
aad
pop
or
call
mulb
dec
bound
mov
push
jnp
hlt
mov
jo
pop
add
adc
popa
bound
pushf
hlt
fisubrs
dec
add
or
pop
in
and
das
pop
jne
inc
mov
jmp
jge
jmp
jne
mov
into
sbb
je
adc
adc
orl
and
push
dec
push
das
push
jecxz
pop
or
cmp
pop
xchg
sbb
sub
pop
cmp
add
or
mov
das
inc
xchg
push
pushf
xchg
mov
push
repz
sbb
jecxz
outsl
add
push
mov
mov
js
mov
xlat
movsl
das
dec
std
mov
test
je
ds
or
repnz
clc
xrelease
pop
test
dec
lret
das
out
sbb
adc
mov
pop
imulb
imul
add
add
inc
inc
or
sbb
clc
dec
push
cmp
int
jnp
xchg
div
shll
pop
push
cmp
mov
mov
cmpsb
in
mov
or
aaa
dec
shll
push
pusha
pop
insb
movl
jl
inc
add
mov
test
js
fdivr
push
add
loopne
nop
and
rorl
cltd
nop
mov
adc
pop
push
nop
xchg
or
push
pop
dec
xchg
or
cltd
or
loopne
add
rolb
mov
or
leave
pop
shl
sbb
jecxz
mov
xchg
pop
and
mov
inc
addr16
xchg
xor
mov
mov
push
jb
and
or
aas
imul
andb
jmp
xchg
cmc
aaa
and
sbb
pop
mov
jl
pusha
mov
outsl
xor
add
mov
mov
insb
loop
loope
pop
jbe
pop
xchg
push
loop
out
pusha
rorl
mov
shll
nop
fadd
subl
out
add
or
xchg
popf
arpl
orl
scas
movsl
mov
je
sub
push
out
or
or
sbb
mov
xor
leave
push
fcmovb
das
and
adc
fiaddl
and
ds
pushf
loopne
adc
sbb
sub
mov
inc
add
sbb
xchg
xchg
xor
clc
mov
cmovl
pop
push
push
push
or
es
icebp
adcl
pop
or
add
lods
push
test
mov
cmp
adc
sbb
inc
rol
add
rcl
movsl
lcall
inc
shrl
je
push
inc
push
ljmp
mov
push
insl
mov
ror
or
inc
pop
push
popf
push
or
mov
sub
add
pusha
push
mov
xlat
nop
push
add
push
lcall
inc
inc
adc
and
shll
dec
movsb
pushf
xchg
sbb
lcall
mov
jne
adc
rorb
aam
mov
sbb
mov
jne
ss
test
mov
add
pusha
xor
insb
cs
mov
add
or
loop
mov
jp
pop
test
pop
int
mov
jg
push
and
or
into
les
pop
js
sti
xchg
test
sbb
mov
repz
pop
dec
pop
sti
lcall
lods
sbb
xchg
orl
mov
lods
sub
pop
rcll
adc
cwtl
push
adc
iret
xor
mov
fldcw
aas
imul
pop
sub
nop
and
inc
pop
jg
fdiv
pop
inc
lret
pusha
sub
push
cmp
and
inc
adc
mov
lret
shrb
add
sub
pop
repnz
fidivs
push
lds
dec
mov
cmp
call
add
and
adc
in
rcr
mov
dec
inc
push
push
pop
add
push
in
adc
xchg
sub
sbb
pop
in
adc
inc
call
rcl
adcl
sbb
pusha
cmp
aas
pop
insl
int3
inc
cs
pop
fcmovu
adc
mov
dec
xor
jns
sbb
adc
jmp
jge
fists
or
lods
push
jno
fildll
loopne
dec
push
fistps
movsl
cltd
push
or
call
xchg
enter
lret
mov
push
jbe
adc
adc
sbb
push
jo
or
and
mov
push
and
lret
mov
data16
push
push
push
inc
lahf
cmp
mov
imul
lods
es
mov
fsubrl
pop
add
dec
jae
pop
xor
inc
gs
add
mov
add
cmpsl
push
aaa
mov
inc
lahf
push
push
adc
cmpl
or
xchg
and
jo
andb
into
mov
mov
jp
sahf
outsl
pop
adc
mov
les
test
lret
add
shrl
lds
lret
pop
cmp
scas
or
xchg
negb
aas
cmp
hlt
stc
ret
jo
push
add
cld
ret
jo
or
xchg
adc
sub
sub
add
pusha
test
and
adcb
imul
mov
jnp
mov
cmp
popa
adc
push
lds
flds
sbb
fcomps
ret
and
inc
sbb
and
movsb
in
push
push
bound
xchg
lods
mov
mov
pop
or
jge
dec
jmp
pop
insb
jns
js
lahf
sbb
mov
and
push
and
cld
dec
fldenv
push
mov
stc
lods
cs
pop
paddusw
test
push
xor
xchg
push
xor
sub
push
mov
lock
pop
xchg
pop
xor
add
xchg
jo
lret
sub
adc
pusha
jl
imul
imul
pushf
in
dec
ret
jb
pop
movsl
add
inc
xchg
mov
or
or
add
add
stos
xchg
adc
fiadds
addb
push
ret
pop
ret
push
inc
pop
or
and
pop
lahf
or
enter
inc
sub
sti
adc
push
popa
inc
mov
mov
dec
aad
dec
sub
call
inc
add
or
push
sbbb
les
sbb
sti
push
xchg
adc
xor
cmpsl
xchg
out
xor
pop
jb
adc
test
cmp
or
es
xchg
pusha
leave
sbb
xchg
push
or
test
pop
xchg
or
iret
xchg
das
add
push
sub
push
push
icebp
das
xor
push
sub
push
subl
lcall
adc
mov
scas
sub
push
hlt
hlt
shrb
push
out
xchg
inc
pop
mov
fsubrl
sub
mov
in
xor
inc
sub
mov
pop
pop
adc
mov
jo
in
or
test
aas
pop
cwtl
enter
sbb
sarb
push
fcomps
xrelease
jo
xlat
adc
ret
testb
and
hlt
scas
adc
pop
and
das
push
enter
cs
hlt
dec
jecxz
adc
or
sbb
or
mov
inc
adc
ds
or
add
pop
sub
js
dec
xchg
sub
nop
add
aaa
add
pop
or
pop
test
test
nop
add
test
cmp
xor
fs
pop
add
push
test
ficompl
je
out
push
sbb
adc
or
push
inc
or
out
ds
dec
aas
xor
pop
add
add
sbb
adc
pop
out
push
xor
and
inc
cmp
cmp
popf
test
std
push
mov
jne
sbb
or
mov
das
inc
push
jnp
or
and
cmc
cwtl
lret
clc
sti
mov
je
cmc
hlt
xor
testl
dec
sbb
aad
xchg
adc
in
fisttpl
ja
jle
mov
je
adc
movsb
sbb
push
mov
sub
xchg
icebp
or
jbe
xchg
push
xchg
subl
adc
pop
cmpl
in
insb
cmc
fiaddl
xor
insb
notb
jb
loop
sarb
popf
sub
push
rolb
pop
sub
inc
jge
mov
jp
jbe
jbe
push
fistpll
pop
inc
mov
jne
mov
cltd
test
mov
sbb
shlb
pop
ficompl
push
or
lock
push
and
pop
mov
sbb
lods
cmp
cmp
lahf
jo
push
mov
cmpb
mov
jns
mov
fistpl
or
movsl
push
adc
ret
jo
sub
jne
or
add
pusha
pop
mov
in
cmp
or
xchg
aam
mov
sbb
not
repnz
mov
nop
push
mov
mov
pop
rorb
enter
mov
and
inc
add
nop
inc
loopne
pop
inc
bound
add
repnz
mov
push
add
mov
cwtl
adc
pop
adc
jmp
push
push
add
ds
jo
sbb
iret
dec
jmp
mov
mov
or
sti
and
aaa
hlt
rolb
pop
sub
out
adc
mov
rclb
aam
es
movsb
jnp
dec
mov
aam
fadds
sub
ret
sub
int3
dec
inc
xor
mov
mov
test
aad
lods
sbb
pop
lss
test
xchg
cmpsb
xor
fisubrl
add
dec
sbb
or
fildl
insb
xchg
popf
push
xor
push
sbb
sbb
sub
adc
add
mov
mov
sub
mov
pop
xor
push
add
mov
sbb
sbb
test
fldt
pushf
data16
mov
xor
jo
loop
xchg
shll
ficoml
js
mov
inc
mov
jno
pop
ljmp
ja
or
cmp
int3
ret
add
xchg
push
jl
andl
push
dec
xor
call
xchg
mov
dec
xor
lds
add
or
js
lret
push
js
mov
aaa
push
ret
fistl
push
adc
imull
fildll
jmp
cmp
mov
push
filds
xchg
xor
movsb
mulb
inc
jl
mov
mov
aam
xchg
dec
mov
adc
pop
or
insb
push
aad
dec
leave
add
and
sub
xchg
shrl
mov
gs
lods
add
mov
or
sahf
rcrb
adc
lods
or
push
cmpsb
ds
jbe
jge
dec
mov
xchg
push
push
lret
sub
movb
ljmp
jo
xchg
jmp
sub
jno
pop
scas
xor
push
inc
outsl
jns
cmovns
test
mov
push
cmpl
sub
dec
insl
dec
mov
add
shll
xor
mov
sbb
fistl
dec
inc
loope
std
push
mov
ret
and
jg
pop
jp
add
and
adc
and
dec
inc
mov
mov
and
pop
xchg
inc
rolb
scas
lods
lret
sub
push
setae
das
push
and
js
add
nop
in
fiaddl
cmp
add
inc
cmp
cmpsl
mov
inc
cmp
aaa
or
lods
and
add
push
movsb
inc
inc
ror
aas
aam
xchg
push
and
rclb
mov
iret
out
test
mov
cmpsl
jbe
mov
pusha
mov
sub
xorb
adc
sbb
lods
repnz
mov
pop
mov
jmp
xor
xorb
add
rolb
repnz
mov
add
sbb
test
sbb
dec
add
mov
cmp
add
cmp
mov
movsb
popa
adc
sub
in
nop
mov
popa
dec
or
into
imul
js
and
insb
or
pop
icebp
stc
stc
aaa
adc
push
xor
lcall
addl
hlt
pop
push
pop
popl
daa
mov
xor
ja
arpl
add
adc
mov
es
or
xchg
cmpsb
lcall
xchg
sbb
sub
into
push
sbb
cmp
mov
mov
pop
lock
pop
gs
push
add
pop
testb
bound
xor
xor
adc
push
mov
cmp
mov
mov
add
dec
cmp
xchg
test
and
mov
fsubs
jmp
ljmp
add
push
dec
sbb
js
sub
add
sbb
dec
sahf
lahf
xor
shl
push
sub
and
or
add
ret
in
xor
stos
dec
test
arpl
cmp
les
pop
ret
sub
xchg
imul
cmp
or
in
or
jmp
mov
shl
push
sub
pop
aaa
je
add
lock
mov
sbb
jne
addr16
jne
scas
loope
xchg
dec
test
outsb
mov
outsl
shr
leave
rcrb
xlat
or
lock
jno
pop
push
adc
jns
pop
dec
sub
je
subl
fadds
push
icebp
sbbl
mov
or
loope
sahf
adc
decb
cmp
bswap
adc
bound
inc
and
xchg
data16
lods
adc
dec
xchg
add
push
mov
aaa
je
adcl
push
push
adcl
mov
sbbl
or
pop
mov
fdivr
daa
fnstcw
fidivs
dec
or
dec
mov
call
inc
shl
push
fcoml
jb
jecxz
sbb
dec
fstl
mov
scas
adc
jg
mov
rolb
das
push
lea
in
mov
lea
mov
lds
lea
push
or
lock
mov
in
dec
je
xchg
or
adc
or
hlt
shlb
mov
test
js
sbb
pop
lret
jo
xchg
xchg
movsb
xchg
in
je
pop
icebp
inc
sbb
out
xor
dec
test
dec
adc
pushf
subl
imul
xchg
mov
mov
xor
xchg
mov
nop
das
lods
or
mov
mov
jmp
mov
and
push
sti
pop
mov
loopne
pop
and
cmovno
lds
cli
movsl
test
ja
sti
cld
rorb
aam
inc
push
push
inc
dec
scas
dec
mov
decb
pop
les
fstpt
jge
and
inc
pop
and
mov
divl
icebp
cmp
fwait
dec
mov
dec
daa
dec
inc
add
lss
xor
mov
mov
push
std
mov
cmp
mov
mov
xchg
fnstsw
push
add
cltd
xchg
xor
or
dec
add
xlat
out
cmp
fisubs
cmp
mov
mov
repnz
cwtl
fiaddl
cmp
add
push
rorb
add
and
jg
mov
loop
js
arpl
xchg
inc
inc
sub
dec
sti
clc
aaa
aam
jg
jmp
pop
in
xchg
jle
js
adc
stc
mov
mov
data16
test
int3
jl
sbb
decl
jae
pop
ljmp
testb
mov
jle
sbb
mov
lahf
add
test
push
adc
in
inc
mov
xchg
xchg
loop
sbb
xchg
mov
or
mov
in
ss
push
mov
and
icebp
pushf
push
pop
and
dec
add
push
lea
mov
insb
ds
adc
adc
pop
pop
enter
rcl
cwtl
ds
cli
add
mov
mov
mov
xchg
xor
and
inc
sub
xchg
lea
cs
repnz
lods
out
sbb
cs
add
mov
push
dec
jmp
pop
mov
inc
insl
lock
mov
adc
data16
pop
adc
sbb
and
xchg
add
and
dec
cmp
movsl
add
jno
or
jo
pop
mov
mov
adc
insl
add
mov
sub
repnz
xchg
jg
sti
mov
mov
xchg
mov
fnstcw
lret
push
mov
mov
enter
adc
dec
cld
scas
lahf
add
cmp
shufps
push
mov
arpl
lahf
mov
dec
rcrl
push
mov
adc
add
sub
and
adc
sbbl
add
adc
or
lods
cmp
imul
or
or
xor
sbb
popa
ret
mov
xor
jo
xchg
outsb
or
rcrb
dec
pop
jl
pop
js
lods
pop
enter
jae
dec
xor
inc
inc
push
or
fs
popf
xchg
jb
mov
mov
lods
das
sub
shl
adc
sti
aaa
stc
and
mov
shr
dec
mov
bound
jle
push
adc
add
sahf
mov
sub
filds
mov
jb
outsl
and
sahf
xchg
xchg
mov
lret
scas
rclb
lea
or
or
cmp
mov
cmp
jle
sub
dec
or
inc
scas
mov
loopne
mov
pop
dec
adc
les
in
push
adcl
xlat
movb
inc
rcrl
ja
push
mov
lret
movsl
aas
adc
shl
adc
mov
shl
mov
ja
jo
mov
bound
inc
outsb
rorb
in
pop
mov
shl
add
add
lock
jb
cmc
leave
jnp
icebp
mov
adc
sub
jmp
adc
loopne
dec
ret
lret
jmp
pop
xchg
pop
sub
adc
aas
orb
push
movsb
add
roll
push
cmpsb
sub
push
cmp
lea
test
mov
adc
test
ret
testl
jmp
fcmovne
adc
mov
and
add
xor
jecxz
jge
jns
fcmovnu
pop
or
out
sbb
aaa
test
jb
sbb
dec
scas
dec
inc
cmp
int
pop
scas
icebp
sbb
or
mov
maskmovq
mull
sub
sbb
inc
inc
mov
loope
inc
pop
mov
fdivrl
push
movsb
icebp
mov
lock
lret
sbb
repnz
sub
loop
shl
add
js
push
repz
adc
cs
adc
dec
inc
sbb
and
call
or
leave
pop
imul
and
mov
add
mov
call
cwtl
clc
inc
add
mov
or
dec
les
mov
lock
je
add
sbb
push
xor
insb
dec
into
sbb
and
das
adc
inc
push
xor
add
in
xor
out
clc
xchg
and
mov
jae
fldt
js
adc
outsb
jg
ret
add
and
cmp
shlb
jl
adc
cmp
fstpl
bound
cmp
add
push
xchg
inc
popa
loop
lret
mov
pusha
js
jno
rorb
and
cwtl
push
xor
jge
movsl
sbb
mov
dec
push
add
push
cld
inc
xchg
ret
mov
mov
data16
bound
unpcklps
pop
add
mov
inc
or
stc
stc
lcall
jle
dec
add
xlat
jl
inc
decl
subl
dec
xchg
iret
or
adc
imul
fidivrs
jo
lret
jp
testb
pop
add
dec
pusha
enter
cmp
nop
inc
or
push
xchg
enter
repnz
mov
dec
inc
and
adc
lds
and
and
lret
popl
mov
imul
sbb
xor
lea
div
push
add
inc
and
sub
andl
movl
adcb
push
push
add
jl
sub
dec
mov
outsb
xor
jno
add
xorl
inc
jbe,pn
mov
pop
int3
add
jle
and
and
fwait
scas
cmp
jl
pop
jmp
shll
icebp
ja
leave
movsb
lret
loop
lods
and
xor
cmp
aas
cmp
push
sbb
add
dec
scas
ret
cld
jne,pt
fs
setae
das
jmp
sbb
cmpsl
jl
cmpsb
push
mov
insb
cmp
adc
and
mov
sub
dec
push
je
clc
fwait
and
add
add
adc
jno
jbe
je
jbe
jge
pop
das
or
sti
xor
ret
xchg
dec
push
cmpl
dec
sub
sti
adc
jne
or
and
lea
and
nop
popf
test
inc
cmpsb
mov
add
jge
inc
inc
push
sub
leave
stc
movsb
cltd
sub
mov
xor
fstl
pop
inc
test
aam
loopne
ficomps
sbb
jl
or
mov
inc
mov
add
pop
adc
inc
mov
or
lret
mov
dec
jmp
cmp
and
mov
push
xorb
pop
mov
outsb
loop
sarl
and
or
mov
add
inc
pop
cs
clc
dec
sub
mov
loopne
sub
fsubrs
popf
ret
jecxz
xchg
dec
xchg
and
pop
adc
and
sub
bound
js
movsb
lret
and
mov
or
xchg
adc
mov
sub
mov
or
in
add
mov
dec
filds
add
dec
lea
mov
add
cmp
xlat
cmc
mov
sysret
xchg
loope
sbb
insl
rorb
movups
push
mov
add
dec
jne
pop
mov
pop
jg
pop
cmp
sbb
sub
ret
mov
or
cmp
mov
push
push
in
shrb
jecxz
inc
inc
cmpl
mov
in
xchg
adc
add
adc
fldl
mov
push
sbb
fisubl
inc
in
adc
loop
inc
setle
push
ja
sub
sub
icebp
jae
adc
cltd
sub
insl
inc
ret
outsb
rcr
scas
inc
xor
jl
loope
fdivrl
in
xor
imul
outsb
loopne
or
xlat
xchg
cltd
sub
xchg
lahf
movsb
mov
mov
dec
xor
mov
or
push
mov
rorb
incl
jl
int
dec
and
nop
sti
sub
loope
loopne
push
fsubs
inc
ja
push
add
shlb
xchg
popa
nop
fcompl
jo
rolb
rol
scas
iret
sub
in
lea
lret
es
mov
dec
jnp
scas
mov
push
push
xchg
or
rolb
test
cmp
pop
inc
sarb
loopne
or
dec
pop
add
subb
push
mov
jb
and
or
lahf
popa
lcall
jne
stos
push
push
imul
xchg
inc
lods
and
dec
pop
cmp
push
mov
mov
push
shll
shlb
addl
inc
push
mov
mov
mov
mov
sub
inc
imul
inc
sub
mov
adc
adc
adc
jo
sti
xchg
shll
push
js
sub
aam
mov
loopne
or
pop
mov
xor
jns
bound
mov
jns
mov
cmc
fisubl
and
push
mov
and
and
ljmp
clc
popf
test
lea
xchg
lret
jbe
pop
jmp
mov
push
in
pop
pop
xchg
push
sti
sub
xor
jge
and
adc
jmp
lock
mov
call
je
mov
imul
jne
cltd
cmpsl
test
sub
sahf
inc
dec
pop
xor
mov
lds
mov
push
icebp
pop
sub
rorl
aas
mov
inc
add
inc
mov
test
popa
inc
lock
cmp
into
in
or
lea
gs
xchg
xchg
or
inc
inc
sbb
iret
push
popa
push
dec
pop
jl
sub
dec
cmpsb
stc
pop
and
loop
int
test
hlt
in
jge
sub
inc
cld
push
push
fwait
xchg
or
dec
push
mov
cmpsb
lea
notl
and
mov
xchg
sbb
insb
push
cmp
mov
dec
mov
add
loop
push
and
pop
mov
and
add
mov
sub
les
adc
divl
sahf
push
push
add
mov
lea
push
rcll
and
rolb
pop
cwtl
rol
jecxz
add
testb
mov
jb
cwtl
push
push
pop
mov
mov
xchg
out
sub
cmp
push
jo
jmp
mov
ret
lock
mov
cmpsb
xorb
add
sahf
xchg
repnz
nop
push
mov
nop
nop
dec
mov
push
sbb
jge
push
dec
inc
dec
outsl
mov
or
inc
adc
lcall
mov
cmp
adc
mov
add
add
jo
sbb
and
push
mov
mov
lret
data16
cmpsl
mov
push
ja
in
sub
pushf
sbb
pop
fcoms
dec
push
adc
shl
xor
mov
inc
and
xchg
jl
jmp
add
testb
push
js
dec
push
fisttpll
xor
inc
push
cmp
and
shrb
push
and
ret
cmp
je
inc
jmp
adc
fstpt
into
lea
int3
jecxz
scas
pop
xor
shlb
mov
push
mov
cmpl
push
addl
lods
xlat
add
xor
int
sbb
mov
inc
xor
push
lods
push
les
add
cmp
test
push
cmp
xchg
adc
push
lea
push
cltd
jecxz
push
xor
xor
cld
or
call
push
mov
loop
push
popa
xor
fs
shr
test
mov
mov
push
pop
addl
add
rolb
adcl
shlb
cmp
mov
push
mov
and
and
fiadds
pop
add
adc
dec
adc
pop
push
test
daa
adc
dec
shrl
jbe
xchg
lret
lea
push
lea
das
mov
and
sbb
xor
and
lret
shrl
xor
xchg
test
adc
loope
inc
add
out
in
in
or
inc
lcall
sbb
sbb
les
mov
add
xchg
and
mov
mov
dec
sub
cmp
and
mov
pop
sbb
xchg
cs
xchg
test
xchg
lcall
mov
add
adc
test
jnp
push
lock
add
jge
lea
adc
xor
fmull
and
pop
stc
sbb
mov
dec
inc
add
pushf
sahf
and
cli
mov
sbb
adc
sbb
shlb
and
sbb
dec
sub
xor
cmpl
jb
imul
in
cmc
push
rclb
jle
or
inc
xchg
mov
mov
stos
pop
icebp
mov
mov
adc
mov
add
inc
cmp
and
daa
add
adc
cmpsl
test
ficomps
mov
filds
cmp
push
add
pop
pop
in
dec
enter
adc
mov
mov
mov
mov
cli
outsl
mov
ja
mov
mov
push
ss
cmpsl
std
or
adc
arpl
pop
or
pusha
add
mov
dec
rclb
push
sti
sub
sbb
cmp
sbb
cmp
xchg
sar
xor
jle
jl
and
in
rcl
push
enter
adc
lds
mov
cli
lret
mov
dec
dec
cmp
call
inc
hlt
popf
js
and
push
ljmp
add
clc
xchg
sub
dec
push
push
adc
sbb
cs
cwtl
popa
or
ret
pop
outsb
mov
dec
or
sub
addl
inc
add
outsl
mov
mov
jmp
lods
scas
pusha
pop
cmp
call
fsubr
mov
dec
xor
or
sub
push
adc
dec
jno
jecxz
pushf
sbbl
push
int3
xchg
shl
popf
not
sbb
or
or
lock
xchg
call
push
mov
leave
mov
insb
leave
sbb
xchg
ret
sbb
pop
jmp
ret
inc
loopne
mov
mov
sbbb
dec
stos
ficomps
xor
mov
insb
mov
movsl
cmpsb
je
xor
jo
cwtl
lea
dec
imul
adc
dec
stos
xchg
or
mov
sub
push
aaa
add
push
into
rol
and
das
cmpsb
xor
mov
add
cmp
jb
pop
add
cmp
mov
add
push
cmpsl
adc
mov
fidivs
mov
and
jno
ljmp
cmp
test
pusha
out
es
or
or
push
or
cmc
lahf
lods
add
push
cmp
sbb
pop
lock
xor
enter
shll
lret
or
xor
adc
or
adc
dec
aam
call
or
inc
mov
test
shlb
xlat
push
or
dec
das
sar
sub
lea
mov
js
shl
jle
in
or
add
and
not
and
or
sub
fnsave
inc
pop
out
into
mov
push
shr
and
cli
mov
push
lcall
cmc
cs
or
scas
cmc
aaa
add
loopne
add
mov
and
xchg
nop
or
push
xor
lds
dec
in
subb
xchg
or
pusha
out
sub
xor
push
jle
adc
test
adc
fiaddl
out
test
add
sub
sarb
rorl
fiadds
inc
mov
add
mov
imul
xlat
add
nop
or
cmpsb
jb
roll
inc
mov
push
imul
sbbl
lret
and
dec
pushf
or
cmovl
mov
ds
mov
pop
out
rcl
cmp
cmp
roll
push
cs
lahf
fucom
and
nop
imul
inc
cmp
lret
fsts
mov
pop
cmp
pop
adcb
or
inc
mov
pusha
and
ljmp
pop
mov
cmpsb
movups
pop
cmp
ss
pop
lock
lea
add
lds
in
or
ljmp
fstpl
and
push
cmpl
fs
and
jmp
adc
jle
inc
mov
rclb
jbe
adc
scas
add
je
and
out
lret
and
jl
pop
pop
adc
add
cli
je
jl
mov
nop
jmp
add
imul
push
test
mov
and
int3
mov
and
ret
pusha
mov
sti
test
repnz
in
ds
insl
push
adc
add
add
loope
push
xchg
pushf
ret
or
jmp
or
xor
out
mov
cmp
aad
out
icebp
lahf
sub
sahf
push
loop
xor
pushf
out
push
xchg
mov
je
xchg
popa
push
or
call
jl
out
loope
out
dec
sub
out
int
loopne
dec
jns
insb
cli
imul
ret
dec
loopne
xchg
mov
jbe
ret
mov
sub
aas
sbb
mov
jp
popf
xor
pop
adc
int
xor
incl
adc
inc
mov
push
loope
daa
and
mov
in
push
add
andb
mov
das
mov
imul
cld
pop
fadd
add
or
stc
xchg
sti
pop
pop
mov
mov
loope
outsl
addr16
adc
sarl
shll
fnsave
xor
xor
loopne
xor
ljmp
pushf
xor
xor
stc
xchg
adc
jmp
jmp
and
fbstp
fdivs
push
cld
shlb
xor
mov
sub
and
dec
inc
shll
shlb
rcll
rcll
cmp
pop
and
insl
orl
adc
cli
cmp
add
push
adc
in
sbb
pop
jo
cmpsb
call
pop
ds
xlat
xor
fbstp
jl
ljmp
sbb
ret
cmp
push
leave
cmc
test
je
jecxz
scas
inc
xchg
out
cmp
lret
pop
punpcklbw
jbe
mul
mov
std
xor
mov
repz
xor
mov
or
lret
xor
jle
shlb
sub
sub
data16
push
imul
mov
in
stc
xchg
cmp
xor
aam
js
inc
out
clc
fbstp
sub
call
push
bound
add
out
in
or
cltd
loope
add
push
cmp
aam
push
out
loopne
sbb
lods
rcrl
cmp
in
test
xchg
inc
cmp
pop
xchg
cmp
adc
sub
cmp
push
jns
cmc
insl
inc
push
mov
and
push
lods
loopne
dec
cmp
mov
lcall
inc
and
hlt
adc
push
mov
iret
dec
in
cmp
ljmp
inc
push
or
adc
cmp
rclb
sub
add
jb
fs
cmp
dec
xor
sub
or
cmp
push
rcr
insb
push
push
dec
cmp
addr16
push
and
fsubrl
int3
or
push
movsl
lods
xchg
ret
aam
fwait
cmc
dec
call
push
push
xlat
xor
sbb
pop
outsb
xchg
insb
dec
sbb
push
inc
jmp
fwait
sbb
ss
jle
outsl
xor
xchg
into
jmp
cld
aad
mov
incb
das
imul
rcrb
adc
add
push
in
push
fnstcw
mov
and
femms
lea
xor
cmpb
jmp
and
repz
popf
ss
sbbb
xor
into
cld
loopne
mov
mov
adc
sub
xchg
cs
stc
shll
roll
outsl
mov
out
adc
lods
dec
mov
xor
fisubl
dec
mov
mov
pusha
and
call
sbb
mov
cmp
add
rolb
cmp
adc
or
push
xor
loope
and
or
ljmp
add
aaa
add
iret
ror
pop
shl
adc
push
hlt
add
pop
inc
movsl
push
mov
dec
movsb
push
ss
jp
mov
xchg
rep
mov
add
movl
or
aaa
fistpll
stos
int
push
fdivrl
xor
pop
ret
jg
ds
lods
pop
test
out
inc
add
repnz
test
cld
mov
mov
movups
add
clc
inc
jmp
lods
sbb
xlat
jb
pop
pop
addb
jg
xor
loopne
or
and
je
mov
std
push
loopne
cmp
jb
mov
dec
dec
push
push
xchg
xor
sbb
outsl
inc
pop
push
dec
push
jno
pop
aam
dec
add
inc
xor
add
inc
or
push
jle
xchg
mov
sub
ja
les
push
cmp
lock
cmpsl
jo
mov
xchg
bound
rep
jl
icebp
cmp
leave
stos
outsl
or
mov
loop
xor
clc
ret
int
leave
xor
into
cmp
push
ja
stos
mov
xor
incl
jnp
sarl
sub
cli
cmp
mov
push
push
int
mov
xlat
lea
test
mov
cltd
insb
jne
clc
add
cmc
jae
mov
mov
rcll
lret
sbb
xor
xchg
add
inc
pusha
sbb
mov
push
push
cmpsl
xchg
or
inc
in
movsl
adc
jno
scas
loope
or
lea
push
adcb
outsl
dec
mov
pop
sbb
test
fidivl
lock
movl
jae
xor
lea
dec
push
pusha
add
mov
cmp
push
mov
pop
push
pop
add
outsl
cmp
push
jns
into
xor
test
scas
test
sbb
call
mov
add
sbb
jecxz
sti
cmp
jle
mov
mov
mov
cwtl
lods
sarl
ret
shll
inc
ret
mov
int3
nop
pop
inc
cmp
jae
xor
push
sbb
pop
ss
mov
lahf
mov
mov
add
cmpsl
mov
xor
and
in
mov
dec
add
jmp
xchg
inc
cld
and
push
add
push
negl
addb
mov
negb
xor
mov
iret
les
dec
adc
mov
inc
mov
std
add
decb
inc
lcall
and
fistpll
lahf
xor
mov
add
xchg
mov
pushf
or
inc
or
cmpsb
or
sub
mov
add
pop
outsb
add
andb
or
push
sarl
arpl
aas
loopne
mov
xor
xor
mov
data16
jl
push
pop
fidivl
sub
out
arpl
test
cmp
jne
fldl
or
dec
mov
mov
xor
push
shr
pop
jmp
sub
pop
dec
lcall
lock
repnz
repnz
push
sbb
and
out
xchg
shl
xor
jl
test
ja
lock
mov
pop
lods
in
lret
test
push
stos
test
push
dec
cmp
inc
je
sub
push
or
out
add
push
xor
mov
cmp
loopne
add
ret
mov
ds
xchg
pushf
fimull
in
sbb
lods
test
adc
sbb
jle
bound
jbe
sbb
rclb
push
sbb
cmp
mov
fstpl
mov
je
ret
sub
mov
xchg
mov
fdivrs
adc
in
and
shr
xchg
test
adc
dec
data16
fmull
pusha
cmp
roll
mov
lcall
test
lods
dec
push
adc
adc
push
jbe
xor
jo
push
cmc
rcl
jecxz
int3
mov
push
ja
mov
ss
cwtl
rorb
jne
push
mov
jp
sub
data16
stos
fs
out
imul
or
loope
or
mov
mov
mov
pop
sbbb
pop
sbb
in
inc
mov
ret
int3
adc
inc
aaa
pop
lods
pop
sbb
and
cli
orl
dec
addl
add
and
xor
or
test
cli
sub
imul
pusha
loop
add
retw
sbb
jl
ss
shl
ret
inc
push
aam
cmpb
sub
lea
orb
cmp
inc
mov
loopne
fdivs
sub
test
jne
js
vsqrtsd
mov
mov
lock
gs
push
test
push
inc
lds
push
stc
bound
inc
dec
inc
push
in
lock
and
sarb
int
sahf
insb
jle
repnz
lea
push
sub
and
int3
fwait
inc
ficomps
inc
inc
mov
mov
mov
or
add
mov
sub
inc
add
dec
jne
push
popa
das
xor
mov
inc
xor
or
into
inc
test
xor
ret
je
sbb
inc
push
jmp
es
rorb
cs
pushf
mov
dec
inc
shll
sbb
mov
popa
pop
or
xchg
jno
dec
dec
adc
mov
mov
inc
out
pop
mov
push
rolb
add
pop
mov
jo
add
or
ljmp
aas
mov
inc
xchg
cmp
nop
xchg
dec
add
push
adcl
xor
in
ficoml
test
add
jo
fmul
dec
add
mov
add
repz
push
xchg
or
jbe
pop
push
add
pop
js
dec
cs
mov
inc
pop
enter
or
or
in
inc
push
inc
dec
push
loopne
pop
enter
add
adc
in
and
pop
adc
or
or
adc
pop
inc
and
push
lea
imul
addl
or
adc
scas
pop
icebp
sub
addb
faddl
adc
inc
pop
cmp
mov
decb
les
and
push
push
in
cmp
fisubrs
and
and
push
les
mov
in
scas
push
mov
lret
and
fbld
dec
jle
ljmp
scas
jmp
jns
inc
pop
inc
push
dec
fisubs
inc
inc
xchg
negl
push
ss
fisubs
in
dec
push
push
negb
dec
adc
and
inc
jle
push
push
cmpb
or
test
icebp
insl
jg
mov
notb
test
inc
pusha
pusha
test
call
sbb
adc
mov
sbb
xor
push
xchg
outsb
insb
or
lds
push
enter
and
adc
call
pop
add
pop
pop
lahf
xchg
adc
push
mov
ret
xor
sbb
rorl
cmp
dec
adc
xchg
push
call
testb
adc
or
pop
sti
adcb
addr16
sti
mov
cld
push
mov
or
xchg
adc
push
mov
ja
in
insb
sbb
or
dec
jo
lea
sbb
add
inc
mov
sbb
jle
jae
push
jo
bound
fimull
outsb
and
imul
xchg
movsb
imul
xor
es
dec
stos
sub
adc
pushf
mov
or
xchg
xchg
mov
mov
out
mov
or
sub
xchg
ss
lret
cmp
pop
les
leave
add
push
adc
and
add
cmp
loopne
popf
inc
sbb
mov
ss
sbb
add
mov
jo
mov
jecxz
fisttps
lret
pop
pusha
insb
inc
add
inc
lods
cmp
adc
xchg
cmp
push
jno
sub
mov
fwait
leave
aad
lea
jo
add
xor
outsl
push
dec
leave
xor
inc
or
pushf
sahf
push
incb
fdivrs
xor
or
pop
push
dec
lea
push
pop
inc
jb
pop
mov
fistl
adc
xchg
adc
sbb
imul
sub
mov
loope
rcr
daa
push
push
push
dec
leave
jo
pop
add
inc
enter
lock
cmp
fisttps
cltd
mov
cmpsl
sub
movsb
mov
push
aas
dec
add
mov
cmp
lds
inc
xchg
or
pop
sahf
imull
and
mov
loopne
adc
add
push
xlat
and
nop
ja
sbb
inc
pop
and
pop
pop
or
ljmp
dec
aam
cld
pushf
cmp
inc
mov
dec
jg
test
jo
nop
jg
add
adcl
lsl
test
adc
xor
dec
mov
mov
fdivl
push
xchg
or
adc
and
push
bndstx
cld
add
or
neg
pusha
test
xchg
rcrl
and
xchg
shlb
and
adc
push
mov
jne
leave
call
int
jg
mov
pop
cmpb
loopne
shlb
fwait
mov
add
add
les
inc
enter
nop
ds
sub
rolb
lds
inc
push
add
mull
sub
xchg
dec
adcb
icebp
sbb
fxch
mov
push
push
dec
push
or
fisttpll
add
shll
cmpl
je
push
push
jle
xchg
loopne
push
mov
out
cld
arpl
mov
pop
je
roll
cmp
js
in
fistps
pop
adc
xchg
outsb
sub
scas
lods
je
xor
sub
jno
and
push
jmp
repnz
hlt
ret
push
pop
jo
ret
clc
jo
cltd
popa
test
jb
push
jb
subb
mov
aam
push
repnz
push
jmp
mov
and
push
jbe
and
test
jbe
ret
dec
cmp
std
jbe
push
lahf
adc
jb
adc
sbb
xchg
jno
ret
cltd
xchg
or
xor
inc
sbb
dec
loopne
es
pop
pop
roll
inc
inc
fdivs
dec
adc
mov
xor
fldt
sbb
and
lods
push
push
push
dec
sbb
inc
es
pusha
andb
mov
lds
inc
inc
in
or
hlt
into
call
out
push
push
inc
inc
fisubrs
outsl
pop
adc
jle
mov
inc
bound
loope
jge
jge
inc
mov
pusha
add
ffreep
addl
dec
ss
insb
imul
mov
add
or
popa
js
xchg
add
cli
push
jge
sub
dec
push
push
and
add
push
sub
iret
mov
nop
dec
divb
lahf
enter
test
fwait
dec
xor
and
jno
or
xchg
adc
flds
dec
mov
scas
mov
pop
cmp
stos
or
loopne
into
push
mov
add
cltd
enter
xchg
push
int3
pop
mov
push
call
adc
dec
adc
or
lea
add
pushf
rcrl
movsb
adc
push
or
cwtl
push
pop
or
mov
xchg
aam
ja
je
out
add
mov
inc
xlat
cltd
cmpsl
dec
sub
push
or
mov
sti
arpl
pop
pop
xchg
sbb
xor
cmp
in
sbb
mov
loopne
xlat
and
mov
sub
stc
cmp
or
add
xchg
push
inc
or
outsb
adc
sbb
shlb
jl
lcall
dec
and
pop
cmp
pusha
inc
push
add
filds
jle
enter
xchg
leave
mov
dec
add
mov
mov
inc
or
xor
lods
or
nopl
imul
pusha
push
xlat
push
push
push
decb
arpl
daa
mov
pop
push
xchg
rolb
fucomip
adc
mov
push
sbb
push
add
ret
pop
add
jb
cltd
or
inc
lea
cli
enter
pop
pop
shrb
mov
psubb
dec
add
dec
lahf
sub
adc
xchg
inc
rcl
inc
fistl
test
lods
fstpt
fcomps
or
mov
gs
xor
add
lea
pusha
leave
in
add
jae
lret
and
cld
add
add
dec
xchg
cmp
adc
push
xor
or
push
repnz
scas
lock
sbbl
dec
pop
mov
fcoms
push
lahf
jns
repz
call
adc
xor
and
dec
pop
push
inc
push
leave
repz
xchg
js,pn
lods
outsb
repnz
loopne,pn
pop
mov
inc
lahf
inc
or
pop
mov
cmp
mov
push
pusha
push
push
or
pop
jo
push
fistpl
movsl
jge
sub
mov
adc
fdivl
mov
fstpt
sbb
jo
and
sub
jno
dec
enter
push
or
or
orl
call
pushf
jge
sbb
cmp
push
xor
fsubl
adc
faddp
mov
pop
call
add
pushf
lret
xchg
data16
in
inc
adc
mov
dec
push
dec
fildl
adc
pop
jmp
jns
add
push
testl
cld
and
pop
jb
add
outsl
add
dec
and
pop
dec
sahf
lret
sub
xor
adc
or
push
mov
bound
cli
pop
sub
sub
mov
mulb
hlt
ss
pop
dec
ss
sbb
cmp
es
mov
inc
hlt
xor
or
cmp
in
or
or
dec
or
inc
and
push
cmp
cmp
jnp
mov
pop
cmp
dec
pop
mov
and
jg
sub
imul
and
xorb
and
push
or
test
push
sbb
xor
adc
adc
and
sti
test
addr16
or
and
shlb
and
rcpps
jg
fbld
popa
adc
and
or
sbb
or
and
dec
aaa
orb
adc
and
in
pop
and
cs
add
push
aad
or
pop
andl
lret
or
clc
pushf
aam
stos
cli
adc
in
mov
sbb
add
pushf
dec
add
mov
aaa
and
pop
lahf
pop
negl
leave
or
lea
ja
adcl
pop
xor
pop
jle
sub
nop
pop
mov
push
rorl
push
repnz
pop
popa
xlat
add
sbb
aas
in
adc
dec
ss
xor
icebp
xchg
mov
shll
test
fwait
xor
fdivrs
movsb
ficoml
clc
xor
push
add
dec
and
mov
pusha
pusha
inc
insl
ret
aas
cmpsl
popa
inc
aaa
and
in
ret
sbb
xchg
pop
push
xchg
mov
rcrb
jns
adc
mov
flds
test
pusha
push
mov
sahf
cmp
inc
push
scas
mov
cli
adc
sbb
mov
inc
les
push
pusha
xor
aas
inc
mov
cmp
add
lods
pop
sbb
test
fwait
add
inc
mov
add
dec
call
lea
je
add
jle
xor
movsb
in
cmp
mov
jne
pop
mov
dec
xor
jae
add
dec
lcall
sbb
addb
cmc
popf
adc
rolb
lea
mov
xor
pop
jo
jle
push
sbb
push
test
pop
rcrl
dec
scas
jl
orb
in
dec
sbb
icebp
add
pop
pop
xchg
test
push
je
movaps
add
insb
xor
sub
mov
mov
roll
mov
and
int3
cld
and
enter
andl
inc
add
fildll
sub
or
xor
xorb
or
dec
xchg
sub
shl
or
out
shll
mov
jge
repnz
or
dec
adc
lret
pop
popf
sub
test
push
or
cwtl
les
out
xchg
scas
inc
js
sbb
dec
jge
repnz
ret
jl
add
outsb
test
into
jns
or
ss
or
sbb
xor
cmp
out
lock
mov
in
adc
mov
sub
shrb
push
mov
mov
rsqrtps
or
mov
xchg
sub
pop
sub
ret
rcll
rcrb
xchg
iret
and
shrl
and
dec
imul
mov
mov
jl
movsl
lods
test
mov
inc
cli
adc
cmpsl
sub
inc
loopne
mov
push
lods
je
mov
outsl
push
push
add
add
mov
sub
insb
rolb
fsub
mov
repnz
or
jmp
dec
jmp
inc
or
movb
aaa
push
or
imul
push
push
cmp
je
push
sbb
dec
pop
jnp
sub
mov
repz
cmp
mov
xor
scas
mov
inc
push
and
add
dec
push
dec
push
or
cmp
cmp
adc
push
mov
imul
push
jno
push
icebp
inc
inc
hlt
push
mov
mov
mov
sub
mov
daa
dec
stos
add
mov
and
rolb
dec
orl
xor
inc
adc
and
outsb
xlat
pop
sbb
imul
imul
filds
pop
stos
inc
xor
daa
inc
xchg
cs
js
and
mov
clc
es
shl
sub
cmp
jp
fdivr
neg
fldenv
test
sub
and
xor
arpl
test
cmpsl
mov
imul
adc
jnp
dec
xchg
mov
lods
xor
and
xor
lea
push
xor
jae
pop
std
loopne
push
xor
int
enter
push
leave
mov
leave
dec
xor
cmp
dec
dec
jbe
mov
nop
fwait
push
push
pop
roll
sub
push
addl
push
rol
pushf
jg
sub
rorb
xor
fimuls
jecxz
les
sub
adc
popf
nop
xor
cmp
andb
mov
test
mov
and
lock
or
jg
lock
or
mov
lcall
jae
popa
dec
add
rolb
inc
sub
fcoms
cmp
pop
jo
add
pop
xor
pop
ret
sub
es
pop
jno
inc
push
mov
add
outsb
insb
push
cmp
mov
xor
fisttpll
pop
arpl
xchg
xor
lcall
ret
mov
inc
test
mov
lock
es
xchg
jmp
cmp
inc
dec
mov
push
pop
push
js
flds
xchg
push
inc
inc
sbb
adc
push
loope
test
popf
push
xorb
pop
mov
pop
push
sub
add
sbb
jge
and
dec
push
adc
inc
jae
xchg
sub
insl
add
fdivs
inc
inc
lea
cmc
mov
push
addr16
movsb
notl
adc
test
add
push
nop
mov
mov
push
push
xor
sbb
cmp
loopne
jns
xchg
xor
mov
cmp
enter
mov
cs
dec
pop
mov
or
pop
fdivrl
push
xchg
xchg
fs
pop
inc
jmp
jne
jo
ret
jl
cmp
je
or
dec
cmp
popa
inc
xor
lea
arpl
enter
mov
js
mov
sbb
mov
mov
cli
int
xchg
fs
movl
xchg
dec
es
pop
fisttps
ret
mov
into
dec
add
rcrb
or
adc
inc
dec
aas
pusha
push
insl
add
sub
mov
jo
xchg
subb
or
movsb
inc
cltd
jbe
dec
pop
or
push
add
push
push
jne
fisttpll
stos
inc
sub
xchg
mov
inc
add
mov
push
pop
cmp
cmpsl
and
orb
sub
jg
lds
loope
fcompl
xchg
adcl
loope
in
xchg
mov
or
test
sub
sahf
ret
insb
inc
subl
pop
xchg
mov
lret
adc
xchg
mov
xchg
sub
push
inc
sbb
xchg
lock
or
sbb
mov
pop
fstl
xor
pop
or
xchg
or
bound
inc
push
aam
daa
js
ss
push
sbb
pop
add
dec
lock
inc
sub
xchg
xchg
in
cltd
shll
ret
adc
xchg
pop
mov
cmp
mov
addl
push
push
hlt
hlt
sbb
add
mov
or
sub
push
dec
mov
test
push
xor
fistpl
adc
inc
mov
sbb
push
sbb
outsb
add
or
mov
adc
dec
loopne
or
dec
add
add
inc
inc
rclb
jg
add
gs
enter
and
adc
rolb
inc
inc
inc
insb
mov
pushf
or
int
testb
and
and
loop
mov
mov
je
fs
adc
lds
inc
std
xorb
sub
jmp
cmp
cmp
sahf
sub
faddl
inc
aad
or
inc
pushf
faddl
test
insl
jmp
out
andl
jp
sub
lret
add
fiaddl
mov
inc
enter
mov
sbb
scas
imul
adc
xor
fdivrs
sti
shlb
addb
lret
inc
and
fldenv
lret
mov
cmp
hlt
movsb
mov
aad
sub
dec
cmp
lock
std
pop
lret
push
push
out
fstps
ljmp
and
and
push
lea
sbb
rcrb
loop
icebp
push
xor
jne
ror
xor
rclb
adc
adcb
cmp
icebp
int3
or
adc
je
dec
sbb
and
mov
inc
jg
xchg
jmp
adc
imul
mov
cmp
lret
nop
adc
jb
decl
and
adc
shll
cmp
sub
and
aas
in
loopne
and
or
ss
fcoms
sti
inc
cmp
cmp
mov
int3
sbb
push
sbb
stos
jne
dec
sbb
or
aad
push
dec
push
dec
lods
mov
or
icebp
adc
imul
inc
or
sbb
sub
pop
inc
inc
sub
loope
push
add
adc
adc
dec
and
lea
jae
outsb
clc
add
in
add
cltd
inc
rolb
mov
es
mov
nop
or
dec
add
outsl
ds
rolb
fs
ret
movsb
mov
push
popa
sbb
sub
pop
fcomps
push
mov
lds
add
add
add
mov
xor
or
pusha
cmp
xchg
push
cli
adcl
nop
add
xchg
mov
lods
fisttpl
cmovo
xor
mov
mov
sahf
scas
push
mov
pop
cmp
pop
je
inc
dec
pop
push
mov
lock
outsl
push
lcall
jmp
and
insw
sub
jne
sub
into
jmp
movsb
jle
pop
adc
xor
and
loopne
adc
pop
push
xor
imul
xchg
lock
iret
shlb
outsl
ret
mov
and
lahf
adc
outsl
test
lods
gs
lods
mov
sti
lods
ret
test
ficoml
mov
sub
addr16
sub
xor
adc
fcoms
stc
push
je
cmp
pop
mov
add
add
sub
push
inc
dec
dec
xor
mov
hlt
cmp
daa
arpl
lods
jo
xor
and
sbb
out
mov
mov
inc
or
dec
and
scas
hlt
movsb
and
lea
lea
adc
pop
mov
mov
adc
pop
shl
jae
scas
push
cmp
fildll
les
loopne
stc
push
aam
rolb
and
nop
xor
testb
push
push
test
minps
pusha
rol
pop
sub
mov
daa
cmp
lahf
out
add
mov
jno
pop
pop
ja
or
or
fnstsw
roll
dec
and
test
rclb
push
out
fisubrs
push
movsl
cltd
mov
xchg
sub
imul
inc
in
inc
pop
and
jmp
push
lret
add
inc
fadds
outsb
sub
mov
sbb
aas
hlt
pop
cmpl
dec
inc
push
lea
push
mov
adc
lret
push
push
xor
ret
inc
dec
mov
int
or
xor
lea
imul
fcomps
xchg
cmp
nop
add
adc
enter
mov
in
inc
inc
or
or
sbb
jl
stos
outsb
mov
push
add
pushf
mov
sub
in
mov
jg
lods
ret
mov
pusha
push
sbb
test
mov
cmp
ret
push
je
imul
push
mov
loope
int
push
mov
dec
sub
cmp
pop
loopne
push
sbb
pop
or
test
cli
jne
sbbl
mov
pusha
xchg
movsl
lcall
popa
and
pop
push
mov
test
shlb
cmp
lods
orb
jbe
xor
jae
push
jae
jmp
pop
sbb
or
nop
call
mov
loope
aaa
js
push
icebp
dec
adc
je
daa
popa
mov
sub
fwait
loop
mov
sbb
xor
jno
jnp
dec
sbb
mov
add
inc
add
movsb
sbb
mov
jp
push
je
adc
mov
sub
inc
addb
add
sahf
inc
add
scas
pop
test
sbb
out
sub
mov
add
push
mov
dec
movsb
sbb
pop
or
adcb
ret
shrl
data16
and
adc
dec
mov
lahf
ret
or
ss
dec
in
andb
xchg
pop
pushw
lcall
or
in
add
dec
adc
leave
outsb
sbb
xor
add
mov
dec
ljmp
adcl
shl
or
add
cwtl
cwtl
pop
sbb
mov
cmp
mov
sbb
jge
rolb
or
dec
test
lcall
test
sti
pop
mov
dec
sti
mov
sub
subb
es
fistpl
push
push
sbb
mov
ljmp
lds
jle
xor
and
sahf
add
push
pop
inc
fcoml
mov
xchg
sbb
dec
out
in
xor
int
outsb
ror
sahf
pop
cmp
adc
pop
sub
jge
pop
add
dec
dec
xchg
inc
dec
push
jno
adc
add
test
and
in
in
mov
adc
das
xchg
jle
cbtw
sti
decw
fimuls
jle
mov
adc
adc
or
push
stc
cs
and
pop
mov
dec
jne
add
insb
dec
ja
insb
loope
inc
and
push
push
mov
push
cmp
xchg
ret
inc
xchg
sub
mov
jno
sahf
cwtl
sbb
mov
or
ret
push
adc
in
jb
fisubl
gs
sbb
sbb
xchg
add
jnp
cmp
adc
add
push
dec
sub
inc
and
xchg
ret
and
and
push
add
insl
push
mov
orb
jo
or
adc
cmp
mov
ds
dec
rolb
daa
nop
and
adc
sub
orb
add
movsl
adc
xor
sti
push
pop
cmpsl
hlt
fmull
negl
push
add
fcmovu
fsts
call
mov
js
and
aam
sub
cmp
or
int
adc
and
mov
sbb
add
pop
adc
jno
adc
js
pop
add
push
sbb
pop
or
jo
int
fmull
ds
xor
aaa
jmp
imul
push
gs
sub
dec
mov
lock
fcom
sub
cmp
jmp
or
jne
sub
aaa
push
and
mov
lock
out
repz
pushf
jns
mov
sti
mov
into
lea
mov
xor
into
addb
shlb
jbe
pop
imul
idivb
aam
ja
pusha
dec
push
insl
lock
cmp
push
cmp
fimull
dec
leave
hlt
rcrl
outsb
fisubrl
jne
push
das
add
xlat
mov
imul
adc
push
into
push
jecxz
test
movsb
or
pop
sub
inc
mov
sar
and
or
jmp
or
xor
adc
push
sbbl
lock
push
jmp
add
dec
lock
ficompl
adc
imul
das
mov
sub
inc
pushfw
cltd
lcall
stos
xlat
clc
or
adc
pusha
push
lods
push
aaa
sbb
xchg
stc
lret
push
pusha
mov
mov
mov
add
pop
in
push
add
sub
or
sub
fmulp
xchg
sbb
jo
push
cmpsl
jo
fwait
into
adc
std
stc
jle
jno
or
movsl
mov
push
push
sub
mov
repnz
add
xchg
test
js
or
bound
xor
sub
push
adc
push
adc
sub
pop
jl
call
inc
push
inc
adc
test
scas
mov
cmp
sub
jg
lds
inc
jo
push
std
add
or
test
inc
and
add
dec
ret
inc
shlb
or
dec
jl
cmp
jge
or
mov
into
pop
mov
add
inc
lahf
or
out
mov
mov
add
dec
sbb
daa
xchg
insl
push
sub
inc
dec
push
push
cmpl
ds
dec
or
cmp
clc
sub
push
js
lea
cmp
cmp
cmp
pop
std
adc
fisubrl
movsb
sbb
push
inc
jge
inc
inc
inc
or
jp
add
cmp
xor
add
jl
imulb
test
dec
mov
inc
sbb
fsubrs
dec
aad
mov
xchg
or
inc
pop
int3
jns
push
xchg
sbbl
test
or
add
aas
push
push
cmp
dec
xor
push
scas
popa
mov
xchg
cmpsb
inc
push
lea
sarl
push
into
adc
and
or
mov
int
xor
pop
sbb
test
out
cltd
mov
es
mov
cmp
into
adc
mov
push
or
pop
pop
push
jmp
test
or
imul
nop
cwtl
add
mov
adc
repz
fstpt
pop
nop
adc
popa
jne
lret
dec
add
push
test
shrl
mov
sub
ja
cmp
push
dec
ss
pop
test
adc
jae
push
mov
pop
inc
or
xchg
test
out
ror
rorl
add
and
sbb
aas
icebp
inc
xor
es
dec
stos
hlt
pop
sti
aad
xchg
and
lahf
call
jg
xor
jne
dec
and
mov
jg
shlb
nop
add
dec
out
dec
xchg
pop
loope
jl
sub
dec
push
or
out
or
xchg
ds
mov
cmc
lea
jle
inc
push
dec
arpl
lock
mov
mov
cmp
or
orw
stc
add
daa
inc
cli
adc
nop
inc
add
add
dec
cmp
xchg
and
xchg
push
movl
and
js
jle
xchg
push
push
and
sub
inc
mov
inc
movb
pop
adc
shl
test
rclb
daa
lds
xor
push
rorl
sub
dec
fidivrl
ficompl
faddl
ret
scas
pmaxub
pop
lea
jle
ficompl
ficompl
pop
movsl
flds
lret
sbb
push
add
or
inc
mov
shl
enter
ret
xor
ret
pop
imul
or
xchg
mov
outsl
add
pop
pusha
mov
inc
adc
dec
shlb
or
inc
push
and
pushf
push
in
imul
jbe
and
loopne
les
or
sbb
add
fdiv
xchg
xorl
xorl
or
call
xor
dec
sbb
ret
fcoms
adc
aaa
cmp
inc
in
sub
add
sbb
daa
call
cmc
rclb
jp
es
mov
in
mov
cmp
cmp
sar
add
adc
push
loopne
mov
rorb
jmp
sub
jnp
mov
dec
dec
adc
lret
xchg
sbb
in
aas
xchg
arpl
fs
pop
sub
and
ror
cmpsb
sub
stc
pop
jle
add
add
scas
push
pushf
cs
das
or
imul
incb
adc
shll
or
xchg
andb
repz
push
icebp
add
dec
push
cli
or
mov
mov
push
sub
mov
rolb
push
and
adc
inc
pop
xor
and
lea
mov
aas
inc
or
ss
ljmp
xchg
fsts
fsubs
pop
loope
pop
cmp
push
inc
push
cwtl
mov
test
insb
inc
or
or
jmp
lea
sub
xchg
mov
fidivs
mov
hlt
mov
sbb
jmp
xchg
gs
lahf
call
sub
jne
decb
inc
and
add
jb
and
addb
aas
dec
rolb
and
imul
mov
cltd
lret
push
and
pop
sbb
jmp
jecxz
inc
int3
addr16
xorb
out
sarl
or
arpl
mov
or
pushf
xchg
or
adc
call
push
fmuls
mov
pop
subl
push
pop
adc
insb
push
outsl
xorl
outsl
popf
inc
int3
mov
jg
es
arpl
enter
adc
xchg
add
daa
dec
jmp
xlat
mov
ja
add
push
aad
out
mov
cltd
add
adc
push
mov
jne
xchg
adc
repz
mov
jbe
pop
cmpl
clc
dec
inc
push
fwait
mov
pop
call
insl
cs
addb
and
pop
jo
insb
sub
sbb
out
add
push
les
xor
fcompl
add
mov
and
sbb
fcoml
sahf
sbbb
or
cmp
cmc
fcomps
push
aad
dec
mov
push
mov
popf
movl
loop
xchg
push
shl
aam
xor
add
movsl
inc
shrl
pop
or
adc
push
test
push
call
and
inc
cmp
xor
inc
lret
pusha
jo
lds
loope
or
xchg
lret
dec
pop
test
sub
push
adc
xlat
push
mov
or
pop
push
movsl
inc
test
or
or
outsb
inc
mov
mov
dec
fisttpll
push
xchg
addr16
or
vmptrst
push
subl
push
mov
push
xchg
je
pop
jmp
add
pusha
xor
mov
loope
sarb
test
jne
or
sub
sbb
adc
mov
add
int3
jmp
shr
dec
dec
inc
adcl
shlb
in
pop
jo
ljmp
pop
cld
or
adc
jp
mov
mov
or
or
lds
cmp
subb
subl
cwtl
sbb
add
push
cs
add
jo
test
push
out
push
fwait
inc
and
mov
scas
lea
iret
inc
bound
or
inc
xchg
add
add
and
test
hlt
jo
sub
sbb
icebp
xchg
movsl
dec
ret
or
push
cmpsl
sahf
adc
icebp
jae
jbe
cmc
and
fs
add
xor
adc
popa
mov
dec
sbb
xchg
dec
push
push
lcall
mov
lret
push
fldl
fimuls
jmp
fdiv
shlb
shlb
fdivl
jl
add
cmp
and
sbb
jmp
inc
repz
lock
push
adc
loope
mov
dec
inc
aaa
into
push
pop
mov
inc
pop
add
lods
pop
js
lahf
jmp
fistps
popa
pop
adc
out
or
gs
lock
dec
jne
push
jle
sbb
or
or
lcall
shr
pop
je
jg
xor
add
push
daa
je
cmp
outsb
dec
popa
add
jecxz
je
mov
or
push
faddl
xor
pop
dec
dec
or
pop
add
jge
lea
ffreep
add
or
ja
pop
xor
out
adc
or
mov
nop
pusha
jmp
push
hlt
adc
push
or
andb
adc
mov
fwait
dec
xchg
xor
add
dec
lret
mov
or
adc
fdivrp
outsb
shrl
sbb
inc
sub
jns
pop
xchg
add
mov
aad
mov
sti
or
rclb
adc
and
cmp
addb
add
js
mov
sbb
mov
mov
pop
pop
or
ljmp
add
stos
jle
cmp
gs
and
cmp
popa
outsl
loop
add
cltd
xor
mov
dec
lods
push
push
jle
pop
fwait
imul
inc
rorb
push
nop
rolb
movl
xchg
fisubs
cmc
push
sub
adc
push
jne
sub
adc
dec
fidivs
xchg
add
andl
mov
cmpsb
cld
add
or
xor
lock
jb
mov
aad
dec
and
adc
lcall
pusha
aaa
outsl
or
push
xor
add
ret
pushl
lea
int
fcmovne
inc
inc
js
adc
push
xorb
xchg
imul
mov
pop
mov
ds
inc
iret
jno
dec
push
pop
or
nop
rclb
das
mov
pop
xchg
and
je
into
clc
lds
xchg
push
sbb
daa
pop
pop
cmpl
in
push
xor
ds
push
cld
xor
orl
sbb
mov
pcmpeqw
pop
inc
mov
adc
add
xchg
aaa
push
addl
sub
sbb
push
lea
sarb
sbb
outsb
mov
loopne
cs
lods
push
cmp
push
js
push
inc
push
add
cmp
push
jno
adc
and
ja
mov
xchg
pop
add
or
mov
mov
push
pop
push
cmp
push
adc
mov
es
jp
frstor
insl
sti
and
mov
jb
fistpll
shl
cs
dec
outsl
dec
inc
xor
add
sbb
sub
int3
jmp
mov
les
pop
int
cmpsb
push
add
mov
push
jo
mov
das
jbe
mul
movsl
add
jg
adc
push
cmpsl
nop
test
push
mov
cmpsb
mov
add
int3
andb
and
loope
sub
fdivs
mov
jle
loopne
mov
inc
and
mov
add
pusha
push
pop
or
jo
xchg
das
das
adc
adc
pop
and
sbb
sbb
dec
sbb
out
mov
movl
sbb
loopne
inc
push
push
dec
in
ja
jl
or
push
lar
out
xor
push
inc
cmp
add
and
rol
add
or
add
dec
dec
and
movsb
mov
dec
dec
sarb
daa
mov
out
push
std
lock
push
sub
add
insb
sbb
and
fiaddl
lock
loopne
mov
adc
popf
push
mov
iret
add
ja
in
or
xorb
push
add
adc
jo
mov
je
js
stos
xor
jl
mov
mov
mov
les
adc
cltd
inc
jle
push
xchg
xchg
and
and
push
cmp
mov
push
movsb
mov
pop
push
cmpb
pushf
jmp
inc
push
add
jmp
dec
cmpsl
cmc
arpl
dec
pusha
rcrb
movsb
xchg
dec
lock
dec
jno
cltd
jecxz
and
xchg
xchg
mov
push
push
add
cmp
push
push
or
and
aam
outsb
imul
push
nop
jo
sbb
push
lret
pop
pop
sub
jno
hlt
pop
ja
cmp
and
push
in
pop
jns
sbb
adc
or
pop
nop
lods
imul
sub
inc
dec
je
or
lea
test
out
adc
push
ljmp
add
adc
mov
adc
push
js
sbb
pop
add
pop
aad
push
ss
pop
and
adc
insb
adcl
sarl
pop
xor
cmp
test
or
xlat
mov
xchg
mov
fs
xor
dec
adc
add
repz
mov
jb
mov
int3
out
xor
jnp
leave
dec
bnd
xor
and
ficoml
mov
mov
cmpb
andl
ds
in
push
and
dec
dec
adc
mov
xchg
jns
rcll
gs
push
pushf
cmc
test
xchg
adc
in
sarb
rorl
and
pusha
bswap
or
xchg
mov
ror
and
jne
rcll
aam
or
mov
call
and
aas
dec
sub
adc
loopne
jb
add
push
lea
pushf
sub
imul
jne
mov
add
imul
pop
test
mov
adc
jb
mov
push
push
mov
mov
and
mov
testl
sub
jl
jmp
or
inc
add
jne
mov
mov
pop
js
adc
in
outsl
pop
mov
dec
je
dec
jne
dec
sbb
dec
xor
mov
xor
add
pop
cli
stos
push
sub
push
test
push
mov
out
ds
inc
shll
mov
jecxz
inc
mov
or
cmp
dec
aaa
push
and
or
lods
mov
mov
sbb
add
or
jle
cmp
add
jle
sbb
ret
rclb
or
sub
cmp
push
cld
push
lea
addb
iret
jle
out
jg
sbb
ss
inc
adc
add
insl
fs
mov
daa
sbb
add
sarl
out
out
xchg
dec
push
dec
cmp
mov
fsubp
sbb
push
in
sbb
sub
push
lcall
ret
dec
test
xor
fiadds
jmp
xor
mov
cmpsb
inc
in
xor
das
dec
cmc
mov
and
inc
or
sbb
lea
sub
xchg
dec
push
or
ret
xchg
or
dec
cld
dec
rorl
cmp
cmp
pop
jl
add
pusha
mov
pop
js
xor
inc
and
or
adc
mov
jne
mov
movsl
pop
scas
sbb
mov
xchg
pop
adc
pusha
js
cmp
adc
mov
push
rol
aas
int
dec
xlat
jg
lea
and
rolb
sbb
lea
push
sti
add
ret
es
pop
add
sti
lock
pop
stos
mov
jge
mov
mov
push
cmp
or
loopne
ds
cmovp
adc
or
das
sbb
test
xorl
pop
sarl
mov
inc
ficoms
push
lahf
adc
jnp
repz
xchg
dec
pop
jp
pop
xchg
cmp
xor
pop
call
rcrb
jae
mov
insl
je
sub
jecxz
int
push
mov
xchg
orl
sar
mov
and
out
test
mov
mov
dec
pop
les
jbe
push
mov
mov
and
xorb
sbb
in
cld
inc
pop
ret
pop
mov
pusha
pop
mov
rorl
addl
mov
fiaddl
and
std
aaa
inc
or
cmp
shlb
or
pop
or
add
push
add
xor
nop
jns
fistl
adc
and
lods
or
imul
pop
and
adc
fdivrl
xchg
daa
inc
jb
mov
cmp
inc
stos
outsl
aam
sbb
cmovle
shrl
movsl
inc
bound
push
mov
push
pop
jnp
mov
les
mov
inc
inc
imul
adc
pop
or
jmp
imul
aaa
movsl
std
mov
adc
sbb
fidivrs
dec
adc
cmp
movsl
lods
push
pop
adc
push
test
inc
mov
sbb
cld
in
loopne
mov
sbb
hlt
or
jbe
or
pop
lea
inc
cmp
sbb
lods
sbb
jp
mov
mov
and
mov
test
pop
add
out
jecxz
ja
lcall
jg
and
je
cld
add
sbbb
and
pop
and
loopne
inc
xlat
add
pop
inc
scas
adc
testb
imul
mov
and
inc
popa
dec
mov
jo
push
adc
pop
add
jno
adc
jmp
jg
pop
mov
adc
add
xchg
ret
xor
adc
jne
push
inc
sahf
rclb
rclb
add
mov
std
or
dec
xchg
xchg
outsl
stos
loope
mov
and
insb
adc
mov
inc
pop
jl
mov
aad
cmp
sbb
push
adc
push
outsl
mov
inc
pop
bound
sbb
xor
push
add
push
cmp
outsb
daa
mov
and
mov
mov
add
into
push
data16
sbb
lea
mov
dec
jle
push
push
add
adcl
test
jnp
cmp
ret
push
pop
and
lock
mov
inc
xor
cmp
jno
or
mov
push
and
insl
rorb
sbb
out
decb
loopne
push
adc
dec
call
cmc
outsb
cmp
push
jl
mov
jne
shlb
test
or
or
xchg
mov
inc
les
js
stc
std
testl
xchg
andb
xchg
cmp
mulb
repz
jl
push
push
jmp
add
xor
jo
into
add
sbb
lahf
inc
push
in
aaa
push
sbb
pop
mov
std
in
mov
cmp
add
and
loopne
mov
fists
add
inc
mov
xchg
push
or
adcb
movsb
add
add
adc
mov
xor
xchg
xchg
pop
sbb
daa
mov
push
outsb
test
dec
inc
es
int
push
sar
sub
aam
jge
out
sbb
push
add
out
inc
push
push
pusha
jl
out
mov
adc
add
sbb
add
push
clc
mov
and
or
or
cwtl
or
sub
cmp
jecxz
bound
push
in
pop
push
je
arpl
xor
or
aam
outsl
and
mov
lods
mov
add
incb
dec
std
adc
andb
scas
mov
lock
ss
mov
xchg
insl
jmp
and
and
rolb
push
or
mov
test
popa
inc
adc
push
jmp
aam
xlat
mov
mov
xchg
cld
aaa
enter
add
inc
arpl
sbb
sub
jbe
dec
add
push
sbb
lcall
cmp
sub
fcomip
add
pop
mov
sbb
sbb
int3
add
inc
sbb
inc
adc
dec
addl
addb
sub
mov
sub
push
mov
inc
fcoml
pop
movsl
push
out
add
jns
dec
daa
sbb
jbe
or
pop
stos
or
nop
lcall
out
ja
sahf
add
pop
cmp
ret
ret
or
stos
dec
and
push
adc
ja
adc
xchg
lret
jmp
ret
pop
xor
loopne
dec
jne
scas
test
enter
dec
add
lock
push
xchg
iret
xchg
xchg
loop
aam
pop
and
mov
lods
push
pop
ret
mov
dec
adc
dec
popa
lock
aam
sbb
jo
jmp
bound
mov
xchg
aam
add
or
and
cmpsb
ret
xchg
and
mov
adc
inc
and
addb
int3
or
and
jecxz
loope
or
dec
mov
inc
in
dec
xchg
cmp
inc
call
les
add
dec
pushf
sbb
and
push
inc
inc
ja
sub
and
cmp
stos
inc
push
insl
jl
std
loopne
lods
ror
es
sub
mov
and
sub
inc
jns,pn
add
sbb
imul
lock
sub
fnstsw
push
and
cmp
je
inc
inc
sbb
inc
lretw
adcl
sub
loope
mov
shrb
add
sbb
sbb
sub
ror
loop
mov
outsl
addl
cltd
add
outsb
lds
sti
ret
mov
inc
je
aas
cbtw
pop
enter
inc
and
adc
stc
sub
push
ds
xor
ds
adc
inc
inc
dec
rorl
fninit
cmpsb
lods
pop
mov
sbb
pop
push
jg
pop
js
dec
jecxz
adc
xor
sbb
js
les
push
mov
mov
enter
inc
sub
inc
lret
sbb
add
arpl
mov
jmp
shrl
imul
sarl
sbb
sbb
add
ss
pop
mov
sbb
and
push
out
cmc
pop
pop
loop
mov
roll
call
xchg
das
mov
test
add
cmp
and
cmc
sbb
les
xor
xor
aam
push
lods
or
add
jne
lods
gs
jbe
pop
pop
mov
cmp
das
test
pop
out
sub
imul
orb
add
in
sbb
add
inc
in
cmp
inc
lock
cmpsb
mov
pop
jbe,pn
fcomp
mov
mov
push
push
lock
icebp
lods
mov
push
jle
sarl
lea
jl
mov
mov
popa
clc
xor
inc
add
ljmp
addl
jmp
int
or
scas
fisubl
pop
add
je
push
pop
hlt
adc
jb
insb
or
push
and
pop
pop
sub
sbb
jo
jo
sbb
imul
add
maxps
into
out
lock
test
outsl
cmp
call
ja
add
adc
dec
jl
aas
cli
or
mov
mov
xchg
lea
cmp
in
xor
pop
adc
pop
insl
mov
scas
adc
jp
imul
das
fldl
xchg
xchg
shll
sbb
shll
push
push
push
jne
cmp
mov
mov
sub
mulb
mov
inc
cmp
adc
xor
cmp
xor
or
cmp
imul
ret
das
sbbb
mov
inc
sarl
mov
outsl
xchg
push
and
push
mov
and
data16
mov
out
mov
movsb
loopnew
push
outsb
jnp
mov
das
and
jecxz
je
inc
ret
jo
pop
push
punpckhdq
scas
rclb
add
lret
xchg
scas
sbb
nop
mov
push
add
jmp
inc
mov
add
sub
xchg
mov
dec
cmp
divl
mov
jl
add
or
sbb
cmp
lods
out
mov
imul
sbb
inc
or
or
adc
inc
shll
mov
mov
mov
shl
adc
pop
inc
pop
fistps
mov
mul
dec
xchg
sbb
xor
push
out
fisttpl
and
xor
mov
cmp
pop
cmp
clc
test
inc
mov
dec
push
mov
pop
nop
dec
xchg
push
mov
or
sbb
adc
add
aad
dec
test
loopne
inc
notl
or
je
je
sbb
and
add
shrl
rclb
mov
pop
cld
push
arpl
xchg
cmp
push
lea
movsb
sub
add
jns
dec
je
mov
addr16
adc
or
xor
in
dec
adc
push
push
adc
add
inc
xchg
mov
jl
mov
cld
cltd
test
dec
push
xor
pop
ret
hlt
dec
sub
lahf
jns
cld
loopne
movsb
push
lods
jp
fsubrl
enter
imul
mov
push
push
sbb
add
or
aaa
inc
pusha
cmp
push
mov
or
cmp
inc
cmp
scas
fmull
cs
or
pusha
ds
aam
push
and
inc
sub
inc
inc
icebp
adc
rorb
add
shrb
insl
clc
call
xor
addb
testb
fs
nop
lods
mov
mov
jl
push
loop
test
mov
je
js
inc
push
cmp
add
push
fcomp
add
pop
adc
add
fcompl
push
sub
xor
mov
loopne
jmp
jbe
push
jb
dec
sub
jbe
shrl
stc
mov
dec
scas
push
mov
xchg
cwtl
imulb
lret
fisttpl
mov
cmp
js
jae
call
inc
mov
faddl
dec
add
int3
bound
mov
fbld
adc
lock
mov
lock
or
push
push
addr16
mov
dec
and
out
shlb
jae
add
scas
sub
inc
je
hlt
addb
lea
cwtl
cltd
popa
adc
insb
sub
std
and
sbb
add
jl
dec
enter
pop
add
enter
icebp
add
insb
or
mov
mov
aas
xchg
adc
inc
sub
mov
shll
sbb
js
pop
inc
push
jecxz
inc
mov
pop
fs
es
les
ljmp
dec
lea
push
andl
cmp
add
ret
outsb
adc
je
fcoml
push
sub
mov
or
jle
sahf
ss
pop
jns
add
mov
push
insb
enter
mov
addr16
push
and
and
lcall
cmp
add
jge
das
jb
into
gs
imul
insb
out
pop
mov
xchg
mov
decb
dec
jne
cmp
jb
jle
inc
sbb
and
shl
sub
and
inc
and
mov
xor
push
loopne
dec
and
mov
ljmp
add
pop
jnp
cmc
mov
arpl
pop
jno
jns
or
push
lods
in
adc
icebp
es
and
inc
sub
les
pop
dec
dec
sub
push
cltd
or
aad
js
add
cmc
mov
les
and
imul
movsl
cltd
or
cli
in
sbb
jne
dec
inc
and
sbb
push
jge
mov
pusha
adc
pop
push
incl
mov
add
lcall
push
xchg
dec
or
jne
fcmovnbe
shll
sub
jg
call
dec
divl
inc
pop
xor
add
cmp
push
jmp
cld
sahf
es
loop
inc
aam
lea
and
int3
cmp
lret
dec
push
inc
loopne
inc
out
in
in
rcl
mov
xchg
loopne
dec
imulb
mov
out
jo
loope
dec
fs
add
shl
repz
out
dec
pusha
lea
and
dec
xchg
in
inc
and
enter
and
sub
push
nop
pop
sbb
mov
fistpl
in
sbb
push
cmp
cmp
ja
inc
loop
arpl
dec
sbb
push
mov
lock
fnstenv
push
sub
mov
bnd
push
test
inc
dec
cli
sub
or
cmp
jbe
mov
push
inc
sbb
cmp
xorl
mov
push
cli
add
jo
jae
or
add
scas
add
mov
je
sbb
sub
outsb
roll
add
mov
cmp
inc
es
xchg
inc
mov
cmpsl
icebp
and
jmp
mov
jne
icebp
adcl
lea
pop
xchg
sarl
xchg
movsb
xor
pop
or
xchg
add
mov
hlt
mov
sbb
push
add
lret
hlt
std
mov
int3
mov
sub
test
adc
jle
je
add
add
add
and
and
or
mov
xor
add
stos
pusha
mov
jbe
je
loop
add
xor
call
sub
xor
sub
outsb
repnz
in
jmp
test
or
mov
push
lahf
std
jae
push
sub
fcmovnu
outsb
cmp
call
or
xchg
dec
push
in
pop
fcomps
pop
xor
cmovl
and
test
mov
mov
mov
xchg
add
sub
inc
mov
leave
mov
dec
mov
aas
in
fdivs
and
in
inc
adc
dec
in
inc
xor
pop
sub
insl
xchg
call
jle
fidivrl
jg
in
ret
inc
jl
push
rorl
xor
int3
mov
mov
mov
aam
adc
pop
adc
sub
shrb
and
dec
loopne
push
jne
outsl
xor
adc
aas
xor
jg
mov
xor
test
call
shlb
outsl
lods
pop
mov
pop
enter
ds
or
sub
loope
mov
insb
pop
jg
fadd
or
xchg
fcompl
sub
loop
jg
push
dec
push
adc
xchg
subb
inc
fidivrs
sbb
cli
aas
inc
lcall
mov
sub
or
adc
mov
ja
push
push
or
fsubrs
in
cmp
int3
inc
je
scas
inc
jmp
xor
movsb
bound
cmp
push
pop
fs
arpl
pop
dec
push
add
add
add
shl
pop
cmp
or
cmp
sbb
ret
mov
add
inc
push
clc
or
inc
mov
mov
mov
fwait
mov
cmp
jg
push
out
push
mov
and
add
pop
jl
add
xchg
lods
xor
jecxz
cmp
push
jl
dec
adc
dec
add
push
jno
data16
mov
pop
add
fsubs
adc
add
pop
dec
pop
sub
xor
mov
js
sbb
mov
adc
sbb
mov
mov
push
dec
cli
xor
cmp
inc
add
mov
mov
lcall
pop
mov
pop
in
dec
test
dec
sbb
mov
mov
cmpl
sub
jne
adc
fsubrp
shrb
mov
inc
mov
test
cpuid
sar
jne
cmp
jne
xor
jg
cmp
jne
and
pop
pop
mov
jns
lock
cs
cmp
adc
push
push
add
inc
xor
add
xchg
mov
dec
sti
xor
in
add
sub
ds
mov
mov
andl
push
cmpsl
roll
lock
sub
add
or
imul
icebp
je
sub
imul
jle
je
inc
dec
testb
popf
jmp
je
xor
or
jmp
dec
sbb
fucomi
je
sti
xchg
sub
enter
sub
outsw
insb
jne
push
pusha
mov
loopne
clc
push
push
jle
or
jnp
or
push
hlt
fidivrl
jne
pop
outsb
sub
out
in
pop
call
push
rcll
mov
jmp
mov
negl
jmp
fcoml
cmp
out
lret
sub
icebp
shrb
outsl
cmpsl
inc
in
mov
das
xchg
fisttpll
push
jecxz
cld
sbb
mov
push
bound
je
andl
cmpsl
mov
int3
imul
add
js
nop
jno
in
dec
lcall
sbb
inc
add
and
out
movsl
xor
inc
mov
xor
cld
add
push
mov
fimull
add
bound
aas
dec
or
stos
mov
inc
in
fs
dec
mov
dec
or
int3
pop
dec
cmp
sbb
mov
negb
push
add
add
sub
and
mov
lahf
pop
jbe
mov
or
cwtl
sti
shll
mov
add
jne
xchg
sbb
ljmp
or
pop
sbb
stos
sbb
mov
mov
push
xor
inc
inc
imul
xchg
adc
loopne
js
pop
iret
or
pop
mov
rcl
les
or
push
sbb
adc
xchg
dec
andb
mov
les
fs
jae
cmp
popa
and
cmp
leave
push
or
xchg
jecxz
divl
inc
lods
and
mov
mov
dec
fs
push
and
push
lret
sbb
push
jg
sub
ret
sub
sbb
cmp
or
movsl
pop
mov
mov
pop
xchg
hlt
mov
ret
jg
and
rcrl
mov
jmp
dec
js
push
or
lea
jle
cmp
test
mov
mov
jmp
jmp
sbb
rep
xor
ret
dec
mov
xchg
insl
mov
pop
push
pop
add
and
push
adc
gs
pop
stc
push
loope
dec
imul
imul
xor
loope
mov
std
call
aam
sbb
adc
sub
test
orb
mov
scas
addr16
jge
jmp
push
jnp
cmp
cmp
bound
pushf
add
and
mov
loop
in
push
adc
sbb
bnd
test
xor
mov
ror
subb
push
adc
div
test
add
pusha
loope
jmp
outsb
dec
dec
test
std
incl
sarb
dec
shlb
sub
je
cmp
int3
nop
mov
push
push
inc
lock
movsb
inc
cmp
sub
or
pop
nop
nop
mov
push
xor
or
cmp
shl
clc
scas
add
sub
mov
dec
push
mov
dec
lods
mov
inc
and
sbb
andb
mov
jl
mov
xor
sub
je
adcl
movl
sbb
rclb
nop
sarb
cmp
sub
cmp
imul
and
lret
scas
xor
adc
push
mov
adc
push
xchg
mov
js
xor
inc
sbb
int3
push
push
jp
je
or
push
imul
mov
xchg
xor
inc
pop
or
adc
add
stos
sub
add
test
sbb
dec
and
inc
add
cmp
adc
pop
dec
out
pop
sub
sub
mov
jo
fidivrs
int
jle
add
lea
popw
push
push
mov
cmp
mov
adc
sub
push
icebp
add
mov
sub
std
inc
xchg
sub
cltd
or
jno
ret
cmp
sub
cmp
sarb
mov
jne
in
sub
mov
add
test
jmp
sub
out
jl
and
inc
push
test
test
rorl
mov
and
xchg
sbb
shrb
ss
mov
xchg
cmpsb
push
mov
imul
pop
xor
push
push
insb
jmp
add
or
insb
insl
aaa
inc
sbb
lahf
add
and
imul
pop
mov
in
push
or
inc
dec
pop
jb
xchg
adc
cmp
push
pop
unpcklps
dec
je
dec
ja
mov
xchg
mov
inc
inc
adc
xchg
pop
aad
cmpl
call
js
dec
rorb
xorb
icebp
cmp
jae
sbb
rorl
nop
cmpsb
push
mov
or
push
inc
sbb
jb
xchg
add
inc
ret
jecxz
aas
data16
pop
adc
xor
mov
fcompl
jne
inc
outsb
add
adc
out
lock
aas
mov
lock
mov
sub
inc
and
and
pusha
lods
sbb
mov
or
pop
sub
and
imul
and
or
outsb
sub
push
and
dec
lret
test
jp
xorb
dec
clc
inc
mov
mov
xchg
adcl
push
jo
sarb
cmpsb
pop
out
ds
sub
jbe
shrb
sbb
xor
mov
imul
insb
inc
or
or
loope
bound
cwtl
inc
or
or
jl
into
cmp
push
in
lret
xchg
add
sahf
sbb
cmp
or
jle
push
fmuls
add
dec
out
push
aam
push
popa
mov
into
imull
jne
aam
repnz
icebp
inc
mov
inc
sub
sub
xor
dec
pop
dec
jmp
mov
clc
sub
and
test
test
add
jle
or
nop
jno
adc
mov
push
or
push
test
call
or
jl
loope
addr16
popf
dec
add
adc
and
popf
testb
je
add
inc
loope
mov
jecxz
lcall
xchg
inc
or
mov
call
clc
test
adc
call
jle
dec
mov
inc
mov
push
inc
or
inc
mov
mov
loope
or
sbbb
xor
rclb
cmpsl
xor
and
or
inc
mov
test
mov
orl
push
adc
add
les
and
push
imul
cmp
lcall
movl
pop
lahf
dec
jl
leave
dec
push
mov
pop
rorl
mov
sub
push
mov
and
jnp
dec
sub
pop
cmpsb
cmpsb
popa
call
addb
push
pop
push
dec
insl
or
loopne
stos
inc
je
and
mov
mov
fs
xchg
sub
addb
dec
sub
bound
nop
push
inc
int
and
mov
orl
verw
sub
push
fdivrl
add
sbb
mov
lea
fs
xchg
and
adc
and
sub
mov
popa
push
in
stos
add
in
adc
sbb
jecxz
sbb
adc
cmp
mov
fwait
pop
repz
ret
wrmsr
pop
or
clc
lea
push
bound
inc
pop
test
aad
push
cmpl
ds
jae
push
cmpl
pusha
das
cld
inc
or
test
add
loopne
loop
push
mov
enterw
adc
ljmp
jl
cmp
shll
shr
sbb
push
dec
jge
jmp
lods
inc
jecxz
lea
add
mov
push
push
incl
push
sub
roll
xor
popf
pop
pop
cmc
cmp
xor
sbbb
fimuls
lea
movsb
sub
cmp
adc
mov
add
inc
test
adc
in
xchg
test
and
push
pop
out
or
xchg
addr16
mov
loop
repnz
pop
lods
pop
mov
mov
jecxz
inc
mov
sub
sub
inc
ja
mov
adc
cmp
lods
mov
push
jp
test
mov
movsb
stos
xor
or
add
mov
cwtl
lahf
xchg
adc
add
ret
notl
sbb
pop
xchg
nop
cmp
xor
pop
cmp
add
mov
jl
add
fistps
inc
jp
xchg
leave
cmp
divb
mov
mov
add
and
sbb
je
mov
sub
fs
xchg
or
daa
mov
fisubl
mov
sub
lods
xchg
adc
bound
push
mov
fdivrs
fadd
rorl
pop
dec
pop
sbb
add
or
daa
sar
add
ret
cmp
cltd
or
add
mov
jbe
add
cmp
das
push
out
cmp
mov
inc
mov
sbb
pop
add
mov
aam
mov
sbb
mov
or
bound
loope
cmpsb
xchg
xchg
add
cmpsl
pop
inc
xchg
inc
mov
pop
dec
sbb
addr16
sbbb
inc
sahf
dec
rcr
clc
movsl
and
out
inc
dec
xchg
xchg
out
push
push
xor
jp
dec
daa
insl
mov
lds
inc
jl
nop
inc
fists
ss
jnp
pop
mov
cwtl
icebp
ror
movsl
std
jl
jne
and
inc
push
sub
dec
clc
sub
enter
fadd
pop
shrb
movsb
sbb
jo
cmp
js
dec
sub
xchg
xlat
inc
add
xchg
sub
sub
lds
fs
push
xor
cmp
je
push
jmp
mov
sbb
shrb
mov
add
inc
lods
or
add
mov
fwait
jle
cmp
inc
les
or
jle
sub
gs
rcrb
sbb
js
or
lds
jb
xor
in
inc
adc
lea
inc
adc
xorb
sub
mov
pop
jecxz
dec
sbb
lods
enter
or
cmp
outsb
inc
mov
adc
or
lea
or
dec
lods
mov
pop
adc
lahf
jle
pop
mov
mov
dec
loop
dec
jge
push
push
loope
jo
cmpsb
inc
or
jp
mov
dec
push
mov
daa
rcrb
lcall
seta
dec
dec
rorb
xchg
push
add
test
xchg
adc
pop
adc
inc
loop
or
push
pushf
out
js
jno
sub
push
rcrb
add
test
jnp
sbb
add
add
rclb
or
or
mov
out
sub
add
or
pusha
add
addr16
adc
addb
js
inc
mov
inc
rcrl
dec
pop
sbb
mov
xor
cmp
inc
xchg
das
lods
push
jp
bound
inc
das
mov
scas
mov
lahf
push
popl
mov
or
ja
std
lock
shrl
pop
arpl
jo
pusha
pusha
les
or
lcall
pop
cmp
inc
rorb
jo
mov
inc
ss
mov
test
mov
imul
loope
shrb
xor
testb
shr
add
js
dec
cmp
test
loope
dec
ret
mul
jb
xchg
push
dec
loop
mov
mov
loopne
cli
or
add
lea
fidivrs
jmp
dec
or
call
loope
adc
cmp
pop
aas
xchg
or
push
dec
lea
adc
sbbb
fldcw
pop
repnz
add
insb
adc
das
iret
and
jmp
sbb
es
jo
mov
dec
add
adc
xor
xchg
mov
mov
mov
cltd
add
das
push
jo
sub
cmp
jbe
lret
xchg
add
outsb
lea
sbb
jo
ret
mov
sub
mov
sub
cmp
dec
js,pn
cmp
imul
sbb
bound
inc
je
jb
push
aas
shlb
sbb
test
push
dec
ret
bound
outsl
and
pusha
dec
popa
mov
sbb
shl
into
mov
imul
mov
and
inc
cmpsb
inc
add
scas
sbb
inc
sahf
lcall
sahf
push
insb
data16
adc
mov
js
and
ret
in
idiv
add
dec
shll
test
pushf
adc
jmp
sub
add
sbb
data16
lret
les
or
adc
and
and
repz
or
rcr
xchg
mov
lea
loopne
rcl
or
movsb
bswap
pop
jb
enter
or
rcr
shlb
adc
stc
andb
out
mov
sub
cmp
lods
or
mov
and
ds
adc
or
cs
or
loopne
shlb
lds
adc
push
ficomps
xor
add
cltd
inc
rcll
mov
test
jp
sub
enter
in
sahf
jo
stos
pop
fs
push
lods
ds
pop
lods
mov
add
add
dec
dec
mov
mov
or
mov
rolb
daa
xchg
je
dec
and
sbb
lea
mov
imul
sahf
insl
inc
test
enter
sbb
mov
push
ss
nop
or
leave
sbb
sbb
xor
pushf
hlt
cmp
xor
push
and
rcll
mov
outsb
sbb
rcl
mov
push
mov
jl
xchg
xchg
add
mov
mov
sub
int
mov
mov
cli
adc
movb
jg
rcrl
cmp
mov
add
or
pop
xor
test
test
push
insb
add
lret
mov
cmp
je
mov
loope
pop
jne
xor
sbb
movb
dec
cmpb
mov
sub
mov
push
mov
dec
sbb
std
test
adc
daa
fisttpll
clc
int3
movl
xor
aam
add
movsl
pushf
mov
inc
mov
or
sbbb
xorb
sbbl
popa
mov
pop
loopne
sbb
shl
add
cld
adc
jge
lcall
sti
cmp
cmp
sub
inc
dec
jne
lods
idivl
adc
mov
xor
mov
mov
add
pop
add
pop
adc
sbb
mov
push
pop
cmp
stos
insb
jbe
jecxz
push
adc
test
lods
div
inc
add
pop
repnz
jmp
pusha
sbb
dec
mov
je
pop
je
cmp
add
pusha
shlb
push
cmp
repnz
mov
xchg
inc
rolb
insb
hlt
xor
nop
mov
mov
data16
testb
aas
mov
dec
cmp
xchg
outsb
adc
sbb
add
push
jo
jge
sbb
pop
adc
xor
sbb
ret
js
sub
mov
add
mov
shl
outsl
pop
or
adc
and
mov
lods
jnp
mov
inc
shl
jbe
dec
push
fwait
fwait
popa
iret
pop
je
mov
ljmp
cmp
mov
inc
dec
dec
cmpb
cltd
cmp
jle
sub
xor
je
or
std
xor
enter
mov
xor
cmpb
pop
pop
sub
cld
xor
inc
xor
rcll
in
dec
sbb
mov
mov
pcmpeqw
gs
sub
pop
shr
adc
adc
inc
add
les
mov
mov
jne
adc
lods
adc
sub
sahf
adc
movsb
push
cs
bound
sahf
mov
push
shrl
js
in
aam
pop
adc
mov
imul
es
scas
adc
mov
inc
mov
cli
push
lods
dec
movsl
int
loope
popf
xor
ljmp
sti
inc
dec
movsl
arpl
lods
sti
mov
or
and
mov
pop
or
add
lock
pop
mov
int
call
push
adc
repnz
pusha
add
ds
and
pop
sti
mov
rcl
pop
sub
mov
push
xchg
roll
sub
popf
outsb
sub
xchg
xor
cmp
jnp
mulb
movsl
test
or
sarb
rclb
stos
dec
cmp
dec
xor
test
sub
xchg
loop
fs
jge
stos
cmp
cmc
jl
aas
int3
jno
sti
lods
mov
xor
je
mov
jae
add
jge
xchg
daa
gs
pop
stos
dec
cmp
add
imul
pop
sbb
mov
in
inc
loop
shlb
sar
std
gs
addb
sub
mov
mov
int3
xchg
inc
icebp
jmp
or
mov
js
xchg
inc
arpl
adc
fiadds
loope
dec
inc
mov
mov
and
push
add
xadd
mov
insl
cld
adc
sti
mov
fistpll
and
cmp
pop
xor
lock
bnd
mov
inc
xor
sub
pop
divb
jae
lods
push
inc
xorl
imul
push
fxch
pop
sub
and
adc
std
ret
incl
je
add
daa
hlt
and
mov
pop
addl
push
pusha
jmp
syscall
aam
fidivs
add
add
pop
popf
and
xor
sbb
test
cld
sub
mov
jmp
test
or
mov
jecxz
rcrb
add
add
or
mov
xor
je
pop
bnd
scas
dec
pushf
ljmp
fs
xchg
xor
jb
push
shrb
sbb
and
sub
xor
sub
and
push
rol
xlat
and
or
sbb
fiaddl
dec
or
push
pop
sub
xorb
mov
inc
mov
gs
push
leave
inc
dec
mov
test
and
xchg
and
mov
mov
mov
push
js
data16
adc
imul
dec
adc
dec
jg
or
dec
sub
or
jo
gs
inc
shrb
arpl
sbb
clc
cli
xor
dec
or
insl
adc
cmp
sbbl
xor
push
sti
test
loopne
sub
mov
xor
je
cmp
fcomps
sbb
add
insb
orl
sub
sbb
call
mov
sub
adc
add
sbb
xor
add
cltd
inc
fadds
jo,pt
daa
add
push
enter
movb
mov
pop
aas
add
jo
sahf
outsb
loop
fdivrs
lea
mov
fadds
stos
xchg
out
enter
mov
mov
insl
sub
adc
fdivrs
or
sub
sbb
loope
add
jae
es
or
push
xor
addr16
insb
adc
insl
xor
adc
adc
repz
pop
adc
jae
and
fcompl
mov
fnstenv
dec
clc
test
xchg
rclb
jge
adc
shl
xor
xchg
jmp
in
sarl
je
scas
jl
adc
pop
mov
pop
es
mov
in
ret
mov
adc
data16
add
cwtl
inc
loope
sub
orl
push
mov
test
xor
mov
imull
fwait
push
js
sbb
jb
push
pop
int3
adc
rorb
add
dec
andb
cmp
xchg
ret
addr16
sub
sbb
pop
dec
mov
or
pop
pop
pop
pop
cmp
out
push
rcrb
xchg
sbb
jae
loope
or
adc
push
cmc
push
test
sub
sub
push
in
dec
scas
inc
push
pop
sarl
in
push
negb
add
push
notl
pop
adc
sti
pushl
cmp
insb
xor
adc
sub
sub
inc
shl
push
inc
movsb
adc
sarb
jmp
lret
daa
pop
cmp
and
cmp
cmpb
mov
mov
dec
sbb
jno
inc
in
mov
sub
sbb
sbb
xor
and
sbb
adc
lea
add
mov
mov
imul
popa
xor
mov
mov
aam
nop
inc
mov
push
test
cmovnp
pop
inc
inc
mov
bound
inc
cmp
sub
mov
sub
subb
cmp
imul
scas
or
push
and
pop
clc
mov
jg
faddl
mov
cltd
inc
lcall
nop
sub
into
rorb
jg
jae
mov
jne
xor
insl
pop
add
jp
sub
ficoml
xchg
outsl
mov
roll
mov
sbb
mov
sti
mov
loope
test
pop
xor
test
push
mov
jmp
or
adc
or
call
xor
inc
bound
xchg
stos
add
aas
sub
dec
and
add
dec
xchg
sbb
adc
cmp
mov
sub
les
incb
and
dec
inc
push
adcl
out
aaa
jb
lcall
pop
and
push
shll
loopne
adc
mov
sub
inc
jb
pop
rcl
pop
stc
and
sbb
jle
rclb
imul
daa
loope
mov
push
jecxz
mov
inc
mov
jge
popa
add
push
jae
xorb
fstl
es
mov
lods
jnp
or
xor
inc
mov
andb
fisubl
cmp
mov
orl
inc
sbb
lcall
sub
popf
sbb
dec
les
sbb
adc
add
mov
sbb
addl
pop
jns
mov
xchg
mov
jge
rolb
or
xchg
shr
sub
cwtl
popa
cmp
cmp
or
cmp
test
mov
frstor
sub
wbinvd
aas
jne
cmp
sbb
addl
dec
minps
rclb
aam
adc
xorl
aam
push
lea
ret
sar
and
jns
icebp
push
xchg
cmp
ljmp
xchg
fnstcw
pusha
sahf
call
int
jge
imul
movaps
add
stc
and
dec
push
inc
mov
mov
sub
jb
mov
mov
mov
xchg
fidivl
aaa
add
imul
xor
inc
cmpl
mov
pop
mov
jbe
cmp
mov
je
sub
lock
icebp
add
sub
add
xor
cwtl
jp
test
data16
ret
mov
in
or
adc
pop
dec
adc
mov
ljmp
or
dec
push
push
addl
icebp
test
lret
xor
sub
lret
sbb
call
jnp
add
cmp
mov
adc
or
cmp
jo
inc
enter
xor
xor
shl
mov
add
jnp
shl
mov
outsb
xchg
pop
push
mov
lahf
out
dec
mov
inc
je
pop
add
add
ljmp
push
sub
outsb
add
decl
nop
and
push
pushl
xchg
pop
mov
sub
int3
pushf
incb
rorb
inc
stos
xor
shll
call
xchg
or
inc
mov
mov
xchg
push
mov
inc
xor
in
sub
add
sarb
push
xor
rol
pop
dec
test
push
push
addr16
push
test
push
lea
cmp
xchg
inc
clc
sub
pusha
xchg
call
cmp
lcall
or
add
mov
and
mov
pop
aad
xlat
lret
lods
js
arpl
pusha
push
and
lcall
mov
push
icebp
inc
push
daa
cmp
int3
mov
nop
int3
mov
adcb
jmp
pop
add
insb
xchg
xchg
arpl
cli
inc
dec
mov
aad
lcall
aas
jmp
je
repz
dec
and
dec
and
mov
and
push
lock
push
fdivrs
loopne
lea
es
cld
adc
sub
mov
dec
cmp
popf
mulb
orb
or
xchg
rcl
fwait
js
mov
or
and
pushf
lea
cmpsl
ret
iret
and
sub
mov
mov
clc
fmull
fstps
jl
cwtl
subl
jl
lahf
jbe
mov
pushw
mov
fistl
mov
dec
xchg
sbb
mov
nop
fldl
fwait
iret
fmull
sbb
mov
dec
imul
ret
movsl
cmp
lods
lahf
dec
pop
lods
mov
or
push
and
sub
push
popf
push
inc
pop
push
mov
push
cmp
lea
clc
cmpb
movb
pop
popa
daa
push
mov
push
shrb
dec
je
repz
mov
push
js
adc
shrb
ret
xchg
mov
dec
xchg
pop
sbb
enter
cwtl
cmp
push
shlb
insb
rcrb
sub
mov
je
xor
xorb
lcall
or
and
sub
sarb
add
dec
dec
push
repnz
and
mov
mov
push
mov
cmp
push
xor
xchg
sarl
mov
xor
data16
jnp
testl
dec
fists
push
add
sbb
jne
js
sahf
xlat
sbb
inc
mov
dec
xorb
xchg
cmpsb
loope
push
jge
subb
adc
inc
pop
test
push
mulb
mov
or
js
push
sbb
xchg
pop
ljmp
js
loopne
dec
ret
pop
xor
cs
push
add
pusha
inc
add
mull
fldt
int
xchg
icebp
and
jbe
mov
jp
push
pop
sub
call
orb
cmp
out
dec
pusha
and
cmp
pop
jb
out
xchg
popa
clc
jae
adc
xchg
push
sbb
add
push
insb
pop
lcall
jle
hlt
ret
pop
sub
sbb
aas
mov
clc
jbe
je
sub
mov
push
xchg
enter
mov
xchg
adc
add
and
sub
out
jo
fistpll
inc
sbb
cmpsl
mov
pusha
jg
push
daa
xchg
add
hlt
push
clc
xchg
add
xchg
loop
pusha
fdivs
or
add
cmpb
or
mov
xchg
mov
sub
fdivr
cmp
je
or
or
jb
leave
sbb
or
mov
pop
std
push
xor
inc
jecxz
fiadds
sahf
imul
bswap
lcall
jns
xchg
leave
mov
cmpsl
enter
xchg
jb
test
in
and
jle
orb
push
addl
xor
sub
cmp
ljmp
pusha
outsl
sbb
pop
lock
add
jbe
jo
ret
inc
fsubl
push
mov
sub
inc
or
xchg
sbb
push
mov
loopne
sahf
xor
out
je
xor
xorl
clc
pop
sahf
inc
cmpsl
cmp
adc
push
push
cmpsl
loopne
and
xchg
repnz
lock
test
cwtl
dec
or
cmp
hlt
or
in
pop
and
cmp
dec
rolb
mov
test
ret
das
cmp
movsl
xchg
ljmp
jmp
push
hlt
ret
nop
mov
pop
sbb
insl
xor
pusha
ret
pop
test
adc
pop
jl
adc
mov
inc
or
push
aad
inc
mov
or
push
pop
mov
push
js
mov
push
cwtl
push
sub
adc
les
in
rol
push
mov
jbe
in
push
pop
ljmp
cmp
pop
sahf
inc
cmp
inc
fbstp
cmp
icebp
fwait
cmc
push
aad
dec
into
pop
je
xchg
push
ret
jae
adc
inc
dec
or
js
pusha
pushf
imul
and
mov
jb
xchg
fnstcw
cmp
pop
jl
or
insl
cmpsb
mov
leave
filds
pop
pop
ja
xor
pop
cmp
pop
cmpsb
aam
das
sbb
xorl
rcpps
add
mov
or
les
xchg
scas
push
xor
xor
xor
sbb
push
and
push
mov
aad
mov
and
out
mov
mov
xor
popf
push
scas
cmp
inc
push
mov
adc
jge
imull
and
pop
sub
ret
ljmp
mov
push
jp
cmc
cld
sub
aam
sti
daa
add
into
inc
inc
push
sbb
pop
pop
or
and
test
fstl
jg
aaa
push
xchg
mov
jnp
add
insl
shlb
fs
sbb
dec
push
shll
push
inc
mov
add
test
fcomps
jb
push
fdivl
and
ret
mov
xor
push
enter
into
push
push
ret
ljmp
int
inc
cmp
ljmp
push
lods
dec
jns
adc
test
and
rorl
in
mov
xlat
push
jl
sbb
add
inc
adcb
mov
sbb
dec
sahf
fldt
mull
add
xor
scas
xor
adc
sbb
rol
adc
or
ljmp
ljmp
push
decb
fnstenv
xor
sub
gs
dec
jne
mov
movsl
mov
pusha
push
xchg
lea
sub
push
cmpsl
mov
filds
push
cmp
jle
add
sbb
pop
pop
shl
sbb
mov
insl
inc
sbb
idivl
and
jmp
or
push
and
call
mov
int3
cmp
or
mov
mov
add
add
cmpsl
sbb
sbb
add
jbe
repnz
inc
pop
mov
inc
andb
out
push
imul
mov
push
jo
push
push
push
pop
and
or
pop
sub
jmp
je
sbb
mov
mov
jnp
popf
xor
jbe
pop
adc
xor
jle
fcomps
inc
dec
jbe
insl
jne
mov
es
sbb
inc
push
adc
nop
test
add
clc
test
cmc
clc
data16
movl
add
jnp
mov
adc
xchg
cmpb
add
mov
cmp
cltd
sbb
mov
xchg
les
shlb
add
sub
xchg
jle
sub
and
add
cld
test
and
sbb
add
adc
xchg
jmp
inc
jge
dec
sahf
add
dec
xor
std
fcmovnb
aaa
bound
cmp
clc
xchg
sahf
inc
lods
outsb
and
jbe
fcompl
or
xchg
jmp
pop
ret
loopne
ja
sbb
fwait
movb
jb
addl
jne
lock
dec
daa
jmp
jnp
and
push
jo
sub
mov
movsl
cmp
jns
xor
mov
cmp
mov
add
imul
push
xchg
adc
cmp
or
jl
iret
or
jl
and
sub
xor
in
mov
inc
roll
or
rcr
and
mov
mov
mov
aam
and
inc
pop
add
loopne
push
pop
movsb
sbb
inc
pop
jmp
xor
adc
sar
add
mov
mov
test
pop
outsb
pushf
fcmovb
sti
lods
sbb
adc
filds
fnstcw
popa
and
add
lock
in
pop
push
jmp
mov
or
or
sub
sbb
aam
imul
or
insl
aaa
push
jo
insb
push
push
pop
es
xchg
inc
aaa
repz
and
pop
dec
or
insl
jl
xor
or
dec
call
sub
sbb
adc
inc
push
sub
inc
inc
jae
push
addb
sub
add
js
push
or
mov
or
rorb
dec
cld
inc
js
jp
xchg
xor
xchg
cmc
or
add
sub
sub
sbb
cmpsl
push
adc
rolb
mov
mov
sub
or
jmp
cli
filds
jne
stos
add
mov
mov
stos
sbb
sbb
std
and
in
ss
push
cmp
push
bound
add
push
aaa
cmpsl
mulb
sub
repz
jne
sbb
add
jnp
rorb
sbb
loope
and
ss
das
jecxz
xor
js
cmpsb
cs
add
ljmp
andb
push
into
lods
sarb
sbb
gs
or
push
add
and
mov
adc
ret
sbb
testb
or
pop
inc
mov
jl
sbb
xlat
lret
jo
fs
and
ret
stc
call
loopne
inc
dec
jo
cmp
inc
sbb
pusha
add
sbb
popf
fbld
jae
adc
rorl
sbb
enter
adc
sbb
dec
dec
mov
dec
xor
mov
pop
loopne
or
jns
lock
sbb
push
or
mov
in
mov
mov
lds
push
cld
cld
inc
cmc
lret
inc
scas
jns
std
cmp
and
sub
push
cmp
jl
cmp
add
add
pop
sbb
adc
sub
mov
rorl
cld
and
ljmp
out
mov
adc
repnz
fisubrl
pop
mov
push
popa
jecxz
les
loope
mov
and
test
lods
jnp
dec
stc
sbb
sbb
popa
adcb
adc
push
jle
das
aaa
test
mov
push
mov
push
outsl
adc
add
aam
movsb
sbbl
push
clc
aam
or
inc
in
adc
xlat
push
std
xchg
ds
jnp
inc
push
and
out
repnz
mov
cmp
rclb
pop
enter
leave
and
enter
push
enter
sbb
scas
cmpsl
pusha
adc
adc
sbbl
cmpsl
dec
je
push
dec
push
lcall
pop
push
mov
push
push
xchg
ret
arpl
in
test
xchg
mov
cmc
lea
add
popa
sbb
setge
add
dec
sub
jb
jae
jg
cmpsb
sbb
push
das
and
sbb
sub
dec
add
push
adc
xor
add
sbb
or
lds
cmp
jnp
ljmp
mov
pop
or
iret
rorb
cmpsl
movsb
mov
jle
xchg
mov
push
test
shlb
fidivrl
roll
notb
push
sahf
inc
mov
adc
les
inc
sbb
hlt
lahf
adc
data16
lea
mov
push
push
mov
jb
sbb
mov
test
insb
mov
xor
pop
movsl
lods
xor
adc
and
nop
add
ljmp
pop
xor
adc
add
add
cmp
test
push
pop
mov
xchg
ds
xor
call
scas
push
push
jle
mov
xorl
ffree
adc
inc
mov
lea
add
push
adc
lods
imul
sub
push
inc
dec
add
cmp
rolb
std
push
sub
popf
adc
ljmp
mov
dec
sub
jg
aaa
insl
testb
je
xor
or
ficoms
decl
adc
sub
sbb
xor
and
push
sub
pop
movsl
mov
sub
pop
mov
xchg
js
ficomps
cwtl
jecxz
and
cmpl
pop
mov
adc
add
loopne
loopne
aas
lea
mov
lods
lea
jno
pop
stos
movsb
movsl
enter
mov
or
push
jo
sbb
and
jl
pop
popl
inc
dec
dec
test
jmp
jns
jo
dec
inc
jae
sub
add
push
lahf
sbb
cmp
sub
cmp
cmp
sub
addr16
sub
mov
sti
pop
add
push
adc
sbb
addb
push
std
fs
lret
and
cmp
pop
push
fiaddl
in
jbe
cli
pop
push
or
lock
add
dec
call
sahf
or
mov
je
sbb
xor
shr
or
add
cli
mov
sbb
popf
add
loop
pop
sbb
rclb
frstor
push
mov
fiaddl
add
sub
call
orb
adc
cmp
xor
add
sub
outsl
or
enter
pop
rcrb
or
movsl
in
and
mov
and
push
add
jns
or
inc
mov
or
xor
sar
push
sbb
mull
sbb
jno
mov
push
lea
jge
ss
sub
mov
xchg
dec
inc
add
or
sub
ja
mov
popa
or
inc
push
sub
cmp
test
xchg
sar
push
outsb
std
xchg
mov
out
push
test
and
sbbb
sarl
mov
mov
push
inc
pop
aas
adc
add
popf
sub
enter
or
int3
aad
mov
sbb
add
dec
dec
jne
insl
mov
icebp
lea
lea
mov
sub
fildl
mov
ss
and
movb
inc
add
lods
jl
dec
pop
push
or
or
and
push
lea
sub
mov
xor
call
push
adc
jg
or
and
sub
inc
or
xorl
rclb
inc
movzwl
pop
rcrb
mov
jne
loopne
lea
lret
push
aas
sahf
and
je
push
mov
xor
mov
mov
sbb
insb
shl
movsb
xor
je
test
jle
and
push
pop
or
test
movsb
daa
fadds
sbb
pop
es
ret
jle
test
data16
jne
mov
inc
or
cmc
ret
lds
push
adc
push
bound
or
cmp
rclb
push
dec
dec
mov
shr
loop
shr
and
mov
push
je
fisubl
push
push
xor
xchg
test
add
jmp
add
inc
dec
adc
fwait
sahf
mov
add
inc
or
sub
or
or
loop
push
jo
imul
cli
push
sub
push
push
int
pop
or
jne
adc
shlb
push
shrb
and
jp
sahf
lock
mov
inc
call
stc
mov
push
out
loopne
or
jnp
outsb
in
sub
push
mov
mov
std
dec
mov
inc
sti
lods
inc
push
mov
push
dec
adc
push
jne
mov
sub
add
and
adc
mov
addl
lret
nop
pop
ret
sar
std
add
add
xchg
aam
and
cmc
mov
or
sub
add
pop
pcmpeqb
mov
xchg
pop
mov
test
sub
cmpl
jl
test
pop
adc
xor
ret
sti
adc
in
je
les
jae
mov
test
adc
hlt
into
insl
shl
mov
fstpl
inc
lret
sbb
fadds
and
xlat
loope
lahf
add
test
aaa
inc
mov
cmp
push
scas
or
sbb
ret
test
dec
add
inc
aaa
pop
jecxz
rolb
das
cmpsl
sar
pop
inc
pop
das
rcr
xor
out
test
sbb
sub
fcomi
cmp
in
jp
cmp
cld
rolb
ret
fcoms
add
mov
lds
or
jo
add
mov
push
add
push
rolb
loop
scas
shlb
aas
mov
push
shl
sub
fidivl
lcall
stos
sbb
xor
ficomps
fisubs
int
pop
mov
xchg
pop
fimuls
js
jmp
cld
test
fdivrp
jg
sub
jmp
cmp
jle
cmc
iret
fmuls
sub
add
jnp
repz
ret
je
cmp
jge
bound
pop
sbb
push
pop
mov
jmp
cmp
mov
test
cli
sub
sbb
mov
or
jg
adc
sub
frstor
adc
xchg
popa
insl
shl
jo
fld
xchg
inc
dec
inc
testl
xchg
mov
lahf
sub
out
mov
or
inc
inc
imul
mov
cmc
decb
push
mov
adc
rep
cmp
js
jne
subl
imul
enter
mov
mov
ret
mov
decl
pusha
add
dec
push
fiadds
hlt
add
mov
js
and
js
xchg
insb
sbb
sbb
inc
add
sub
mov
push
cmovbe
inc
fmuls
lea
add
jbe
jmp
xor
pop
shl
dec
arpl
clc
pop
push
adc
and
pusha
lahf
movsl
das
push
mov
push
push
mov
mov
lcall
int
cld
outsb
inc
dec
jne
mov
sub
inc
xor
sbb
fsub
jne
bound
mov
and
ja
rcll
add
orl
xchg
fdivr
dec
shlb
jg
lds
aas
loope
push
sti
mov
addb
aam
cmp
cmp
xchg
les
dec
inc
iret
enter
insb
je
inc
mov
mov
insb
xor
or
xor
sub
lret
icebp
ret
or
inc
sbb
adc
push
into
pop
mov
mov
aaa
dec
jo
xor
call
mov
dec
std
dec
push
int
pop
ret
stos
adc
dec
or
mov
loop
dec
outsb
and
mov
hlt
mov
push
pusha
or
scas
mov
dec
jp
cmp
lods
inc
push
call
loope
rorb
mov
push
dec
lret
cmpsl
add
mov
inc
mov
add
cmp
imul
mov
cmp
pop
cli
cld
into
and
push
psubd
push
add
cmpsb
pop
add
mov
enter
popa
and
enter
push
xorb
dec
cwtl
ret
xchg
jl
mov
insb
and
cli
dec
jle
dec
orl
sbb
dec
lods
mov
push
cltd
adc
and
inc
fstpl
sub
jo
mov
insl
adc
sub
add
cmp
fistl
lock
push
mov
xchg
mov
inc
aas
jnp
pop
rcrl
inc
les
pop
pop
pop
push
inc
sub
daa
mov
rorl
add
sahf
push
inc
pusha
iret
enter
cmc
fidivs
or
fs
or
dec
pop
push
shlw
jl
mov
xchg
xor
mov
adcl
icebp
cmp
je
bound
sbb
add
shl
rcrb
inc
mov
std
inc
pop
dec
pop
pop
lahf
mov
dec
push
dec
popa
addr16
in
aas
sbb
sub
sbb
int
adc
pop
ljmp
push
ret
xchg
lret
inc
mov
jbe
aas
adc
shll
mov
xchg
mov
jle
push
and
pop
cmc
and
fstp
pop
pop
adc
jl
mov
rorb
xchg
lods
lea
mov
icebp
nop
ds
or
push
or
inc
test
es
pop
fs
sub
jl
jns
mov
mov
pop
sbb
mov
mov
mov
add
dec
dec
sbb
jg
data16
mov
inc
sub
pop
jno
add
add
idivl
mov
adc
add
push
sub
inc
arpl
jmp
lret
sbb
jnp
sbb
jle
sbb
pushf
and
xchg
cmpsb
mov
movsb
pusha
daa
lcall
sbb
nop
inc
cmpsb
xor
aam
xor
mov
or
pop
imul
jge
sub
rcl
push
adc
dec
divl
ljmp
jnp
add
shl
push
push
adc
movsb
or
and
or
frstor
sahf
sub
add
pop
sbb
jne
inc
cmp
and
rcr
pop
cmp
adc
adc
loopne
push
sub
or
rol
push
xchg
inc
or
outsl
loopne
inc
insb
jns
notl
add
or
adc
jo
orl
xchg
pop
rcrb
out
or
inc
dec
push
roll
or
jle
pop
lds
jo
dec
stc
jg
fstpl
sub
sbb
loop
sub
sub
movsb
pop
aam
ret
push
cld
jne
imul
repnz
movsl
loope
push
fidivl
or
out
sub
into
movsl
js
xor
aas
push
fnstsw
inc
pop
xor
repz
sbb
cli
neg
lahf
loopne
push
pushf
lods
jge
lret
in
dec
stos
xor
pop
popa
jecxz
and
icebp
xor
xlat
adc
imul
add
cli
mov
out
sub
mov
test
in
add
shll
jmp
loop
in
in
mov
pop
mov
or
jno
xchg
js
pop
xor
jg
fadds
mov
nop
jge
out
aaa
adc
inc
out
subl
and
mov
je
inc
mov
jbe
enter
fmuls
aad
cmp
out
push
dec
mov
popf
mov
pop
rol
sbb
sbb
pop
add
cmpl
test
cmp
in
sbb
iret
aas
mov
pushf
imul
lea
iret
and
cmp
push
jg
test
cld
xchg
orb
enter
stos
add
hlt
loopne
popl
sbb
adc
adc
or
mov
add
inc
cli
and
js
imul
loopne
imul
jg
and
out
add
xchg
xchg
xlat
jle
mov
cwtl
sub
xor
sbb
ds
adc
mov
adc
lds
int3
add
orb
cmp
or
inc
lcall
add
scas
insb
lods
lcall
lods
push
or
cmp
cmp
add
jl
pusha
adc
test
sti
pop
push
adc
dec
fistpll
add
sbb
rol
push
mov
cmp
lcall
mov
inc
in
repnz
dec
pop
ja
sbb
leave
fwait
cmp
sbb
out
daa
pop
inc
jp
push
mov
adc
test
pop
jb
dec
loope
std
xchg
push
or
add
lock
mov
and
mov
sbb
enter
idivl
mov
xchg
lds
enter
fwait
testb
mov
add
sub
add
sub
jbe
pop
mov
jge
dec
mov
jg
add
scas
jecxz
test
test
dec
fists
imul
cmp
lods
sarl
or
add
lods
mov
data16
xor
loope
add
pop
and
mov
cmp
dec
jne
jne
cmp
mov
sti
jne
dec
xor
xchg
inc
dec
push
test
and
cmc
push
mov
adc
notb
add
mov
xchg
cmc
adc
int3
dec
jae
daa
push
add
sbb
jne
out
loopne
xor
popa
cmp
inc
fistps
hlt
in
inc
jno
pop
adc
es
pop
add
add
xchg
xor
jge
in
cmpsl
jle
add
dec
cmp
cmpsl
jbe
add
clc
pushf
xchg
cmp
sub
jp
lahf
loop
sub
inc
jo
xchg
lea
push
loopne
and
xchg
push
inc
js
bound
pop
daa
out
or
xchg
adc
lea
push
add
and
loope
into
jbe
imul
jg
stos
mov
aaa
aas
sub
adc
bound
jle
xor
ficoms
pop
add
adc
xchg
sbb
add
inc
cmp
sub
in
and
sub
xor
iret
rcr
test
lods
add
xchg
or
pop
pop
fsts
and
stos
fimull
mov
ljmp
fcoml
xor
adc
rol
in
fists
mov
lock
scas
loopne
fisubl
loopne
dec
and
ja
add
jne
in
and
jo
mov
add
es
add
jmp
sbb
into
ret
stos
pop
jmp
lret
cmp
add
sahf
sbb
jge
cmpl
add
pusha
shll
call
repz
ss
pop
mov
aaa
and
jle
and
test
jecxz
sub
mov
or
mov
das
jl
jmp
mov
inc
mov
and
int
dec
adc
das
outsb
lock
ret
jo
sti
pop
cmp
shlb
aas
pop
and
das
inc
mov
arpl
or
pop
js
dec
inc
sbb
or
adc
or
xor
add
inc
repnz
insl
push
push
pushf
mov
rorb
adc
jmp
popa
sbb
rorl
sbb
xchg
inc
mov
mov
leave
pop
sbbl
jl
or
pop
add
inc
inc
or
fisttpl
test
ljmp
adc
push
outsl
dec
cmp
inc
cmp
sub
jmp
mov
push
cmp
jle
int
lret
mov
or
or
xchg
sti
xchg
add
sar
jo
cmp
adc
std
add
mov
push
and
movsb
xor
mov
rcl
lea
or
pop
cld
xchg
cltd
lret
lea
or
fnstcw
dec
bound
pop
nop
inc
js
repnz
test
jb
sub
adc
out
ret
and
add
xor
inc
adc
mov
mov
test
out
pop
aam
push
pop
stos
adc
inc
and
xchg
sub
add
cmc
add
outsl
push
scas
add
push
add
js
add
jno
push
mov
js
adc
xchg
lock
leave
adc
sahf
mov
fsubl
jne
sbb
movsb
ja
and
pop
or
pop
clc
push
les
dec
stos
enter
lea
push
adc
sbb
shll
out
jp
lea
adc
xchg
lcall
test
push
sub
lcall
pop
addb
jl
leave
or
pop
arpl
xor
pop
js
and
shl
sahf
jmp
mov
rorb
jl
jl
movswl
shl
movsb
sti
mov
adc
into
or
mov
iret
sti
enter
mov
daa
mov
and
outsb
xorb
dec
popf
or
cmpl
dec
test
push
pop
shrl
flds
popf
loopne
jecxz
cmp
fst
shlb
and
dec
je
pop
addb
or
rorb
sbb
mov
aas
rolb
das
pop
mov
inc
sbbb
jge
jo
ret
mov
call
les
or
mov
adc
or
jl
jns
lds
add
push
inc
add
xor
ds
test
cmp
push
mov
sub
push
inc
outsl
test
jb
adc
or
push
adc
das
xchg
lret
inc
cmpsb
and
push
push
imul
mov
mov
addr16
imul
sbb
mov
pop
or
mov
push
sub
jecxz
dec
adc
xor
pop
mov
movswl
out
lret
push
in
adc
shll
jbe
fdivrs
mov
mov
xor
xor
xchg
idivb
dec
daa
cld
out
lea
repnz
mov
mov
xor
leave
lea
or
inc
sbb
int3
mov
pop
cmpsb
jbe
xchg
pop
in
lock
xchg
sbb
lsl
mov
cli
push
cmpb
sbb
mov
dec
outsb
xor
push
push
xchg
sahf
cmp
pop
mov
jl
jmp
push
jp
subl
adc
sbb
arpl
ja
xchg
inc
push
les
pop
dec
jo
sub
cmp
ret
in
xor
pop
mov
leave
jo
jmp
mov
or
sub
push
xor
loopne
sub
dec
mov
mov
push
daa
mov
dec
inc
push
std
mov
jb
shl
add
add
jge
push
inc
loopne
inc
jbe
cmp
cld
push
popf
sbb
push
xchg
lock
mov
add
arpl
fisttpl
sub
mov
xor
jo
add
inc
xchg
dec
mov
clc
xor
pop
test
sub
push
mov
aam
out
cmp
bound
pusha
lods
pop
clc
in
jecxz
movsl
popa
mov
pusha
cwtl
jo
imul
pop
xchg
int
shl
inc
add
dec
aad
loop
mov
xor
cmp
iret
call
cmpxchg
psrlq
orl
dec
rcrb
add
sbb
das
lods
scas
mov
fs
addl
mov
or
iret
rolb
dec
mov
dec
ljmp
sahf
xor
push
sub
push
push
jo
adc
xor
inc
loope
adc
xchg
add
mov
add
pushf
hlt
loop
add
inc
shl
pop
or
push
mov
test
cmp
rorl
ret
decb
out
mov
enter
test
mov
lcall
jmp
cmovl
arpl
dec
mov
lea
out
mov
cmp
gs
ret
test
pop
call
aam
push
sub
push
setp
rol
or
xchg
mov
popf
out
incl
sahf
stos
imul
mov
push
fisubrs
jno
popa
jle
and
test
mov
jnp
cmp
inc
adc
sub
ds
pop
rolb
inc
mov
incb
and
cmp
cmp
sbb
push
faddl
mov
dec
adc
push
add
sarl
add
mov
pop
cmp
inc
jp
push
int
cltd
lock
inc
pop
mov
lea
push
mov
push
sub
sub
add
mov
lock
shrl
lea
sbb
nop
add
call
mov
sbb
push
pusha
lea
dec
clc
push
outsl
xchg
or
sub
xchg
mov
sbb
pop
lcall
outsb
cmpsb
or
xorl
cmpsl
scas
xor
sub
dec
loopne
pusha
lahf
mov
mov
or
push
sbb
or
ss
push
cmp
jl
clc
pusha
mov
pop
mov
sbb
notb
pop
add
push
loope
call
ljmp
mov
inc
or
mov
jge
mov
ret
movsl
or
inc
mov
or
pop
push
mov
or
loopne
push
sahf
mov
add
jmp
shll
imul
xchg
fistps
xchg
and
pop
imul
cmp
pusha
pusha
add
loop
pop
add
sti
push
adc
fistl
loop
jo
repnz
clc
adc
aaa
and
or
and
xchg
push
mov
adc
mov
sbb
xchg
jnp
sahf
dec
add
sbb
and
std
sbb
inc
aas
mov
lea
sar
incb
or
dec
mov
push
mov
inc
rolb
mov
inc
not
add
decl
dec
jns
cld
mov
mov
mov
scas
insl
loopne
jns
xor
mov
cmc
dec
mov
add
je
push
movsl
lock
add
rcl
push
and
rcr
loop
imull
pop
sbb
xor
sub
xlat
or
xor
push
inc
out
pop
dec
inc
sub
cmpsb
imul
add
sbb
lcall
add
ljmp
adc
adc
ss
popa
mov
mov
mov
in
clc
rcrb
inc
fwait
cs
jmp
push
sbb
adc
adc
inc
jbe
mov
shl
imul
pop
cmp
int3
call
out
cmp
fmuls
inc
sub
xor
shrl
fildl
in
mov
negl
repnz
cmp
xor
movsl
arpl
push
jp
lock
xchg
lea
xchg
xchg
inc
xchg
ret
push
adc
pop
test
out
cwtl
sbb
jecxz
movsb
shll
js
mov
stos
mov
idivl
cli
scas
push
pop
lea
push
push
ficoms
aas
and
inc
and
and
mov
cmpsl
pop
lcall
pop
out
cmp
adc
lret
cmp
lock
enter
out
mov
push
mov
adc
xor
jge
clc
sbb
adc
jmp
scas
ret
mov
jb
sub
cmp
mov
or
lock
adcb
mov
jae
inc
mov
push
xchg
mov
sub
lret
inc
and
and
std
ds
out
mov
pop
pusha
pusha
dec
lret
notl
and
sub
jmp
mov
and
cmp
imul
push
cmpsb
insl
inc
pusha
out
and
ret
pop
add
push
ljmp
mov
test
jo
shlb
and
adc
jne
imul
add
adc
cltd
jns
fwait
cs
outsb
add
sub
dec
xor
repz
mov
adc
ret
shl
mov
loopne
inc
adc
test
inc
mov
xor
xor
fldl
add
xchg
or
mov
idivb
dec
jo
clc
xor
adc
popf
test
fcmove
mov
add
add
mov
add
push
xorl
imull
popa
adcb
mov
or
addb
mov
pop
jg
dec
mov
insb
sub
add
mov
outsl
repnz
call
pop
out
mov
push
adc
inc
sub
and
into
jmp
sub
adc
aas
outsl
sub
clc
lahf
orb
mov
push
adc
push
xchg
lahf
pop
push
ret
pop
push
mov
sbb
xor
sub
sbb
dec
xor
out
adc
cmp
jno
jmp
daa
mov
out
int3
and
in
rcrb
cwtl
push
sbb
or
loop
or
dec
cmp
pusha
sbb
push
adc
fxch
xchg
xor
cmp
ljmp
or
adc
sbb
add
adc
mov
lcall
add
and
out
or
rcrl
adc
mov
or
mov
outsl
push
loope
stc
push
lret
insb
mov
dec
inc
jns
sbb
lea
sub
cltd
pop
mov
adc
push
add
cmp
and
mov
push
pop
mov
and
dec
cmp
sub
or
cli
sub
lahf
push
sub
xor
arpl
add
or
pop
xchg
mov
cmp
mov
in
shll
shrl
dec
sti
mov
jae
es
fwait
out
dec
ret
pop
pop
push
cmp
pop
sarl
dec
push
fsubrs
pushf
dec
sbb
jg
xchg
adc
sub
or
notb
xchg
sub
sub
daa
sar
sub
jno
out
and
cs
mov
and
loopne
pop
loope
inc
and
fimull
push
sub
lret
enter
sub
rorl
imul
cmp
in
orb
and
das
mov
jb
jp
sarb
divl
adc
jg
fsts
fsts
add
pusha
fsts
lods
or
push
mov
jae
sub
adc
and
sub
inc
fimuls
adc
fsts
mov
xorb
push
inc
mov
in
xor
rcr
push
xor
mulb
jge
leave
or
xchg
fadds
fsubs
sub
push
or
pop
mov
adc
daa
and
fdiv
ret
rcll
inc
inc
and
mov
clc
loopne
add
inc
pusha
adc
pusha
mov
xchg
lret
testl
sbb
xor
out
cmp
or
add
push
sub
xorb
dec
push
adc
push
movsb
jl
ja
mov
fnstcw
xchg
and
rolb
xor
cwtl
add
pop
jbe
sbb
pusha
sbb
add
loop
loopne
sbb
add
xor
dec
sbb
inc
imul
fbstp
or
inc
clc
or
fsubs
nop
xchg
mov
mov
int3
or
flds
xor
pop
jb
push
and
jno
ja
pop
push
aaa
inc
stos
or
mov
xor
inc
cld
jae
ret
idivl
push
ds
adc
sbb
shll
mov
or
loope
jmp
popa
fsub
mov
fildll
inc
lds
push
push
unpcklps
mov
ds
push
idivb
sub
pop
icebp
shrl
divl
lret
aas
or
add
xlat
and
popa
inc
jnp
adc
add
sbb
xchg
in
mov
scas
add
adc
inc
or
xor
arpl
dec
mov
fs
int
cmp
and
pop
add
mov
cmp
scas
sub
ds
dec
sbb
xchg
loope
iret
fcmovb
outsb
leave
fcomps
or
jl
sbb
xchg
add
mov
push
ljmp
mov
pop
shl
outsb
push
sarb
mov
int
clc
and
jo
fwait
int
adc
sbb
push
push
lock
mov
push
mov
push
aam
push
loopne
loop
in
xor
add
repnz
mov
scas
xor
jl
mov
cs
lock
cli
je
and
dec
inc
cmp
mov
or
shl
lea
add
pop
outsl
cmpsb
push
sub
jle
mov
jo
daa
push
mov
sti
lret
jge
idiv
push
adc
lret
ljmp
xor
int
xchg
mov
sub
imul
int
movsl
push
sbb
sub
sysret
add
add
cmc
mov
or
and
in
add
out
sahf
shl
pop
es
push
add
call
out
call
aad
add
leave
popa
mov
xor
inc
jne
test
xchg
push
clc
pop
push
add
loopne
decl
mov
sar
xchg
or
and
pop
push
andb
xchg
inc
sub
stos
insl
cmp
shrb
es
push
inc
les
bound
pop
sub
ficoms
cmp
cmp
les
add
add
sbb
or
test
push
cmpsl
xchg
push
cwtl
xor
lock
push
fs
adc
outsb
jl
and
andb
xchg
aam
dec
mov
cmp
les
dec
roll
or
sbb
sub
out
pop
sbb
mov
dec
pop
xchg
jl
jmp
cwtl
jecxz
js
adc
push
dec
nop
adc
and
push
sub
push
sub
dec
fisttpll
dec
pop
movsl
adc
frstor
cmp
pusha
stc
xor
xor
ds
push
xor
or
loopne
jge
pushw
loope
mov
ljmp
sbb
jo
mov
lock
push
add
cld
dec
push
and
push
jmp
mov
aas
push
add
loope
jmp
mov
pop
adc
or
fisttpll
pop
testl
stc
pop
lcall
lret
je,pn
outsl
into
push
testb
or
or
xchg
or
inc
dec
add
push
jle
js
sbb
fsubrs
mov
rcr
jne
lods
repnz
mov
dec
pop
add
loopne
iret
rolb
sarb
fstps
aad
rcr
aam
add
xchg
test
mov
popf
rcr
or
and
repnz
xor
push
pop
aaa
aad
mov
stos
and
push
loopne
push
or
push
adc
dec
or
movsb
lea
or
mov
test
or
mov
lret
push
sbb
sbb
xor
fiaddl
xchg
call
pop
add
and
dec
push
sub
inc
jg
mov
add
or
pusha
xchg
aad
adc
dec
mov
pop
jmp
sub
add
andl
sbb
insb
sub
cltd
xor
cmp
mov
pop
dec
lcall
mov
es
lret
push
popf
je
jge
fcmovu
popa
into
movsb
adc
adc
adc
push
es
jns
pop
fsubrs
inc
add
cwtl
adc
pop
inc
cmp
push
inc
dec
sub
pop
cwtl
push
mov
jno
adc
mov
adc
ljmp
add
in
and
loopne
add
les
cld
in
hlt
mov
push
jg
push
mov
mov
insl
bound
pop
aas
pop
nop
int3
mov
add
xor
shll
inc
sbb
mov
mov
movsl
lcall
jne,pt
push
add
add
into
arpl
lods
xchg
sbb
jbe
xor
adc
push
push
mov
cmp
mov
cltd
dec
cwtl
add
or
pop
fstl
push
insl
mov
fstl
jnp
lahf
mov
dec
nop
pop
jge
pop
lahf
add
mov
and
pop
mov
push
push
mov
test
add
push
mov
fdivrs
sub
jnp
push
sub
mov
mov
test
push
sub
pop
and
or
dec
or
add
push
sub
int
les
or
xchg
je
bound
imul
in
dec
jg
fcoml
orl
inc
add
pop
jmp
xor
jl
sbb
pop
cs
sbb
mov
daa
cs
adc
movsl
dec
jp
mov
push
jmp
add
adc
in
repz
les
sub
pop
imul
outsb
sub
adc
dec
dec
ret
ljmp
push
cvtps2pd
sbb
jmp
jecxz
shlb
pop
nop
rorb
pop
mov
jbe
movsb
dec
test
inc
imul
imul
push
ud0
push
ds
lods
pop
fildll
and
fnstcw
sar
push
push
lds
mov
push
mov
mov
mov
jae
fisubs
mov
jo
leave
daa
sbb
jecxz
sub
cld
pop
xchg
pop
fidivs
std
add
rcrb
or
scas
push
into
or
mov
jmp
add
pop
fstp
dec
ds
in
mov
filds
mov
jle
andb
add
pop
push
loope
pop
adc
lds
fisubl
mov
int
jl
jl
sbb
mov
repnz
mov
mov
mov
call
iret
dec
xor
out
sub
lea
push
push
sub
addr16
dec
shrb
cltd
jne
fadds
rorl
mov
lock
lret
add
or
fidivrl
add
adcb
cmc
mov
dec
sbb
adc
lds
and
popf
jge
rorb
sub
outsb
test
in
paddusb
out
in
sbb
pushf
inc
mov
fstps
mov
push
mov
xorl
out
jae
js
jp
jl
pop
mov
pushf
out
adc
int3
mov
nop
subb
fnsave
movl
loopne
jo
adc
xchg
xor
sbb
mov
mov
inc
test
enter
mov
insl
leave
fwait
ds
mov
aas
leave
push
push
cmp
pop
leave
xchg
add
mov
addr16
sbb
and
add
lods
add
fbld
add
lods
pop
xchg
fisttps
cmpl
test
pop
adc
or
or
lea
adc
mov
inc
mov
pop
cmp
pop
ds
loope
push
push
bound
fsts
test
inc
mov
insl
test
inc
mov
stos
pop
call
push
mov
pop
dec
and
push
sbb
js
in
mov
ds
rcrl
jns
mov
rolb
or
pop
cmp
pusha
lods
pop
roll
std
scas
add
push
mov
or
jle
or
test
ret
or
push
clc
inc
push
and
push
jbe
add
lcall
adc
insb
mov
or
arpl
mov
test
popl
dec
mov
aad
insl
shll
push
js
adc
add
adc
daa
add
int3
add
cli
pop
rorb
aam
push
inc
or
call
lret
jnp
stc
int3
push
outsb
push
shrb
push
sub
dec
mov
and
lds
lea
gs
mov
les
or
push
clc
push
stos
push
in
sbb
inc
or
in
or
data16
cmp
cmp
sbb
sti
push
iret
jne
addb
stc
sahf
xchg
cmpsl
pop
and
add
cmp
or
loopne
rolb
icebp
enter
pop
neg
mov
clc
test
push
push
cli
les
inc
and
pop
adc
pop
cmpb
fwait
jmp
jne
jne
or
jl
add
pop
into
movsb
loopne
push
jle
add
push
adc
pop
rorl
pop
or
xchg
sahf
mov
adc
push
cwtl
push
push
pushf
orb
bound
or
or
popa
push
push
mov
pop
add
insb
dec
dec
mov
inc
push
cltd
jo
loope
test
push
int3
fsubl
xchg
jle
fidivs
sub
add
mov
cmpl
jb
jbe
test
stos
fcoml
sbb
adc
pop
sbb
rol
push
rcl
xchg
sub
fnstenv
mov
xchg
jne
add
push
xchg
mov
loopne
mov
add
bound
mov
cltd
push
mov
loopne
enter
mov
push
xorb
enter
push
mov
and
enter
int3
jae
mov
inc
pop
jle
sbb
subb
sub
add
inc
inc
mov
inc
dec
and
and
mov
add
jne
call
call
incl
xchg
or
xchg
and
add
push
push
adc
jmp
jmp
xor
pop
add
mov
fidivrs
mov
pop
icebp
or
sbb
inc
xor
adc
mov
hlt
lahf
dec
xor
mov
lret
addb
shll
sbb
mov
jecxz
sub
dec
add
jmp
cmp
dec
shrb
movb
cmp
or
rol
cltd
pop
and
shlb
sar
push
jle
mov
adc
sub
push
add
jnp
add
pop
adc
in
or
rol
or
mov
dec
jne
push
mov
and
pop
push
cmp
xor
mov
jg
ret
mov
rorl
xchg
shlb
ret
pop
call
push
mov
loopne
jnp
jae
and
add
inc
mov
gs
lret
mov
ljmp
into
loope
cmp
add
xchg
push
jbe
push
movsb
mov
shlb
or
mov
repnz
mov
cmpsl
sub
fwait
push
aam
rorb
add
lock
hlt
fs
sub
addb
cmp
add
xor
adc
pusha
stos
ret
icebp
add
mov
ljmp
jle
add
sub
mov
inc
inc
loopne
sti
mov
mov
sub
inc
or
mov
fmuls
xor
clc
push
or
imul
push
lds
add
lcall
xor
pop
int3
pusha
pusha
sub
mov
lahf
sarl
mov
in
sar
jno
lret
sbb
add
push
inc
mov
clc
pusha
xor
mov
mov
add
sub
add
and
dec
inc
daa
ljmp
sbb
es
add
push
add
and
outsb
loop
xchg
sti
dec
inc
jae
push
test
jmp
jp
addr16
xchg
out
jns
std
push
in
and
push
cmp
jl
inc
jle
adc
xchg
adc
jmp
inc
cmp
leave
or
cmp
sub
pop
filds
ret
stos
ret
aas
movsl
dec
or
pushf
jg
add
sub
shll
dec
dec
incb
fistpll
inc
movl
sti
pop
mov
add
outsb
push
cwtl
pop
addb
or
scas
mov
xor
movsl
xchg
cmp
test
jg
sub
add
mov
movsl
cmp
xor
sbb
fisttps
test
subl
mov
push
adc
inc
pop
add
mov
xchg
icebp
inc
xchg
pop
pop
adc
mov
lahf
mov
jl
pop
pop
sbb
add
pop
cltd
jb
out
or
mov
and
psadbw
inc
jmp
cmp
dec
inc
sbb
leave
xor
lret
mov
aas
jb
push
jbe
rolb
xlat
or
inc
mov
ret
mov
sub
repnz
add
pop
add
pop
pushf
xor
leave
xor
test
mov
push
mov
insb
inc
lret
addl
insb
sub
loop
mov
dec
adc
adc
aam
cmp
sbb
xor
in
add
sub
jne
add
cmp
fnstsw
lcall
push
push
dec
mov
enter
hlt
sub
mov
and
adc
rclb
mov
sbb
mov
lea
sarl
sbb
push
push
aaa
and
test
inc
pop
aam
pop
push
scas
dec
loopne
stos
enter
orb
push
jbe
shrl
dec
and
sarl
xchg
rcrb
inc
enter
adc
fcoml
lea
or
iret
pop
jge
daa
popf
and
add
and
push
jmp
cmp
andl
cwtl
dec
and
ss
jp
call
push
js
xor
scas
and
lcall
mov
inc
fstl
xchg
inc
cmp
xor
adc
and
sbb
cmp
xchg
dec
popw
xor
adc
inc
sbb
bound
or
jmp
faddp
out
jle
or
cmp
call
or
xchg
and
add
sub
fisubs
lea
cs
pusha
sahf
pop
arpl
or
pusha
insb
jle
xchg
and
sub
je
dec
pop
dec
lret
jo
scas
dec
add
cmp
push
push
repnz
and
jbe
ret
nop
or
rcr
pop
inc
lret
mov
xorb
inc
inc
adc
loope
mov
fimuls
xchg
cmp
loope
jg
mov
lock
nop
or
push
jo
add
or
and
adc
push
push
cltd
nop
sbb
sub
subb
and
cmp
insb
mov
or
sub
rorl
mov
xchg
mov
stos
xor
push
rcrb
dec
imul
mov
mov
lahf
jo
inc
cmp
lcall
sub
and
loop
cmp
inc
adc
and
fbstp
inc
mov
ja
jmp
clc
push
imul
sub
sub
sub
arpl
cmp
aad
sub
or
imul
xchg
or
rcl
sbb
xor
and
xor
cld
add
sbb
xor
mov
or
inc
inc
rorb
cmovg
das
xchg
xor
roll
and
sub
pushf
jae
lods
ret
pop
sub
pop
sbb
cmp
int
xchg
push
cmpl
adc
pop
mov
mov
and
loop
or
fadds
cmp
inc
xor
pushf
pop
and
or
mov
enter
mov
push
rorl
add
imul
sub
mov
mov
cmpsl
dec
loop
icebp
mov
xchg
push
lretw
push
pop
cmp
inc
add
shrl
push
mov
push
push
add
cmp
int
dec
out
mov
imul
mov
push
aam
xchg
lret
cwtl
fistps
cmp
inc
addl
hlt
leave
aas
mov
enter
nop
lods
jecxz
adc
lods
shlb
fcmovne
xchg
mov
mov
pop
push
shrb
mov
adc
sub
push
pop
arpl
iret
sbb
push
out
dec
mov
pop
push
sysenter
nop
ficoml
or
repnz
movsl
and
or
daa
sbbl
leave
sub
adc
mov
add
jecxz
adcb
iret
leave
adc
sbb
cmpl
push
add
cwtl
icebp
icebp
cmpsb
mov
add
icebp
or
and
and
inc
dec
xor
popf
pop
aam
xor
fmulp
jo
mov
pop
mov
xor
cmp
sub
ss
test
in
or
add
add
fnstenv
fists
pusha
aad
and
cmpsb
insb
inc
nop
shll
add
mov
xchg
lret
aad
push
adc
fcmovbe
nop
and
outsb
pop
add
push
loopne
div
js
xor
add
push
pushf
adc
addl
pop
adc
adc
shrb
cmc
insb
dec
or
aad
ss
inc
mov
add
jmp
sub
push
push
add
mov
sub
add
nop
jecxz
js
mov
gs
inc
add
and
movsb
stos
add
cmp
stos
sub
or
sub
or
test
pop
or
mov
push
jmp
mov
jmp
adc
jge
inc
in
std
add
push
outsl
jl
testb
or
push
incl
popf
add
push
cmp
movb
jne
jge
push
cmp
movsb
inc
xchg
mov
sbb
sbbl
jne
cwtl
stos
rcrl
std
data16
xor
sbb
sarb
mov
or
sbb
cmc
and
xor
dec
ljmp
or
subl
subb
je
jmp
push
sbb
dec
popa
and
adc
daa
dec
imul
cmp
cs
inc
add
fadd
movb
mov
imul
pop
mov
stc
cmp
fdivs
jp
xchg
sbb
xchg
and
cld
push
ret
lret
sub
jg
jnp
sbb
jbe
cmpb
add
ret
in
ja
dec
adc
cmc
mov
jecxz
cmp
or
inc
push
fwait
js
mov
push
xchg
leave
and
or
adc
cli
fdivrs
mov
clc
jno
sub
inc
mov
ja
je
inc
and
ss
ja
testb
sbb
jbe
push
insl
jle
push
jbe
loope
mov
lea
ret
fmuls
mov
jae
jne
andb
inc
loope
nop
ja
dec
por
loop
les
push
pop
addr16
sub
mov
scas
fistl
pusha
in
ljmp
daa
push
test
mov
int
adc
sub
dec
mov
insb
subb
es
std
pop
and
ds
pop
sbb
xorps
fldpi
pop
xchg
mov
or
push
mov
pop
aaa
or
test
sbb
rclb
ffree
insl
cmc
bound
daa
and
mov
inc
adc
je
add
xor
dec
pop
leave
cmc
cmpsb
cmpsb
push
push
push
inc
test
mov
int3
aam
pop
push
sub
xchg
stos
lods
fistps
leave
addl
pop
jle
dec
inc
or
lret
push
push
adc
xchg
add
jnp
inc
nop
cwtl
dec
inc
je
sub
push
das
adc
mov
pop
or
or
frstor
subl
sub
lea
add
mov
loop
sbb
jae
repnz
jb
pop
xor
insb
xor
push
inc
lret
je
stos
xchg
jle
jne
sub
lahf
repz
hlt
insl
mov
mov
or
or
lret
cwtl
fwait
dec
insb
and
fs
enter
in
mov
imul
and
inc
fdivs
mov
or
mov
jle
in
push
mov
add
cmp
out
lcall
mov
fwait
popf
and
jb
or
jg
add
and
js
aad
pop
inc
cmp
inc
bound
xlat
mov
jp
or
xorl
rcrl
sbb
sbb
sbb
pusha
inc
scas
push
subl
cmp
pop
call
pop
icebp
inc
add
pop
inc
sbb
xor
shlb
or
cmp
add
add
sub
and
sbb
lods
add
clc
push
imul
lods
and
aas
ds
xor
enter
mov
xor
movl
and
pop
mov
hlt
xor
cmp
or
popf
push
rcrb
pusha
pop
and
cmp
sbb
sbb
jg
bound
xchg
sbb
inc
int
subb
or
pop
sbbb
adc
nop
or
rol
push
or
pop
or
add
movsb
and
adc
test
add
fisttps
pop
pop
dec
mov
push
dec
test
dec
sahf
sub
into
sub
adc
dec
and
dec
push
sahf
jg
xor
fs
insl
cmp
test
sub
push
push
cmpsl
and
js
xor
test
push
pop
lods
sbb
stos
push
fwait
pop
dec
jle
mov
add
test
cmpl
sbb
push
and
adc
pop
inc
mov
repnz
adc
push
push
arpl
dec
sub
pushf
sub
lea
add
int
fcmovbe
pop
sub
fcoml
stc
push
ja
roll
dec
movl
mov
movsl
sbb
cs
cli
call
pop
xor
or
inc
or
sbb
mov
or
or
ret
and
push
sbb
dec
jno
add
adc
or
les
dec
inc
or
sub
pop
movntq
push
aas
add
pop
adc
mov
outsb
pop
dec
test
pop
sub
and
les
xchg
adc
int3
sub
dec
sub
xor
inc
popf
out
add
leave
insb
icebp
jmp
mov
sbb
adc
jge
jecxz
push
mov
sub
or
test
push
dec
lahf
sarb
dec
sub
insb
ljmp
sub
jmp
sub
mov
mov
sub
and
push
scas
jecxz
cmp
push
data16
inc
incl
or
cltd
push
cmp
pop
mov
pop
inc
or
cmp
ret
adc
lock
pop
jge
ljmp
jge
cmpsb
ret
dec
or
mov
xchg
inc
popa
push
fwait
pusha
dec
adc
sub
les
fisubs
je
mov
popa
add
dec
test
ljmp
jne
pop
movsb
je
jmp
sbb
xor
dec
sarb
cmpsl
inc
add
movsl
outsb
dec
sbb
in
xor
pop
cs
jmp
dec
push
adc
mov
and
stos
mov
fisttps
inc
add
xor
sbb
jl
sbb
rorl
adc
mov
push
movsl
and
mov
xlat
mov
stos
add
pop
rorb
jbe
sub
shlb
pop
call
daa
adc
xchg
push
movsl
inc
or
mov
push
imull
adc
push
in
pop
jecxz
lock
decb
lea
dec
mov
xor
sbbl
sarl
mov
test
rorb
sti
nop
xchg
cmpsl
push
add
cmp
sub
sbb
cs
and
adc
or
and
cmp
or
pop
cmp
pop
andb
jo
xor
xor
stos
in
repnz
adc
adc
ret
js
cmp
mov
fbld
jo
sbb
jae
leave
pushf
clc
adc
push
mov
dec
xlat
and
shrl
sahf
test
xchg
insb
vmovhps
rcrb
jl
int
lock
stos
mov
andl
inc
push
rcr
and
mov
dec
insl
dec
adc
xchg
mov
pushf
leave
mov
hlt
mov
jns
shlb
jmp
inc
or
and
xchg
int3
jge
scas
addr16
imul
adc
add
jecxz
dec
jne
add
nop
ds
mov
call
add
sbb
add
aam
push
lds
decl
dec
sbb
nop
jg
mov
cwtl
mov
fidivrl
pop
decl
push
pusha
jle
push
mov
test
push
inc
cmp
mov
mov
sahf
in
pop
dec
pop
add
add
movsb
xor
les
cmpb
add
cmp
subl
cmp
mov
dec
rorb
and
inc
xchg
jp
pop
add
add
insb
loopne
and
out
xor
push
loope
xchg
dec
dec
jne
pop
inc
pop
jne
push
inc
test
test
push
fld
push
push
stos
pop
sub
push
xchg
mov
aas
jo
mov
xor
nop
subb
sbb
hlt
fiaddl
fsubrs
pop
adc
adc
pop
movsb
ficompl
dec
insb
shrb
sbb
sbb
shlb
daa
push
pop
movsl
packsswb
les
push
add
adc
js
xchg
jo
int
aad
pop
add
dec
mov
mov
daa
and
arpl
mov
in
xor
enter
inc
xlat
lcall
add
insl
jo
mov
mov
aam
arpl
push
test
lea
jmp
jp
dec
cmp
pop
ret
inc
add
sub
and
aam
or
ljmp
faddp
jns
in
and
or
push
lret
outsb
xor
add
mov
jmp
adc
pusha
imul
mov
cmpsl
sbb
push
inc
and
push
mov
fistpl
movsl
xor
add
push
add
adc
push
lcall
push
lcall
in
scas
adc
mov
movsb
sbb
je
push
sbb
lds
sbb
bound
lret
pushl
add
pop
adc
fidivl
push
sbb
movsl
or
test
lea
adc
lods
movsb
and
xor
ret
fs
mov
push
scas
inc
lea
jg
dec
add
sbbb
inc
adc
inc
add
insb
sub
lret
cmp
and
xor
scas
add
lahf
call
cmp
adc
inc
push
jno
fwait
hlt
push
pop
or
push
and
jo
sbb
mov
mov
push
mov
add
inc
push
gs
ret
or
dec
or
xchg
outsb
add
cs
or
add
dec
mov
aad
or
loope
enter
shrb
lds
sbb
loop
icebp
push
ds
and
sbb
mov
dec
push
test
imul
fwait
push
cmp
mov
push
xchg
out
mov
rorl
pop
cld
jae
mov
inc
cmovge
or
add
jbe
sub
jo
add
das
push
leave
enter
push
test
sarb
push
adc
outsb
outsl
movsb
mov
pop
ret
stos
cmpsl
fnop
daa
inc
or
addr16
and
inc
sbb
xchg
xchg
xor
icebp
add
jne
sbb
xchg
aas
push
lcall
mov
aad
xchg
mov
mov
in
rcrl
inc
xlat
xor
xchg
sub
adc
imul
xchg
pop
cwtl
and
sub
iret
sub
dec
js
les
pop
xchg
cmp
jecxz
mov
dec
call
jge
or
add
xchg
pop
pop
mov
inc
mov
ss
sbb
push
sbb
ret
std
or
iret
movl
pop
xchg
jg
or
xchg
pushf
adc
push
jp
and
xchg
ret
and
sub
sbb
enter
dec
stos
push
lcall
leave
or
or
mov
jne
fadds
mov
cli
cmc
sub
pop
adc
and
test
adc
mov
mov
push
and
enter
sub
xchg
push
leave
sub
inc
cwtl
lea
push
or
mov
pop
mov
aas
or
mov
or
popf
xor
mov
fnstsw
cwtl
sti
nop
push
adc
push
daa
sbb
cmpsl
add
pop
or
hlt
dec
or
lea
jb
movsb
cld
push
sub
push
pop
ret
pop
scas
pop
jecxz
push
test
cmp
fsubrs
or
in
pop
js
xor
inc
and
cmp
mov
lea
dec
add
lock
daa
lahf
fildl
push
sbb
stc
sub
adc
sub
pusha
push
test
pop
mov
jl
push
add
popa
xchg
mov
jo
inc
mov
jl
push
adc
insb
inc
stos
nop
test
enter
or
xchg
adc
mov
mov
sub
mov
mov
cmovbe
push
test
pop
push
das
lods
hlt
push
incl
enter
and
adc
data16
sbb
push
push
in
jge
dec
lods
and
mov
cs
pusha
outsl
pop
adc
pusha
sbb
dec
cmpsb
xchg
or
aaa
lods
fs
stos
push
out
inc
cwtl
insl
push
lods
aad
sub
pop
dec
loopne
inc
fcomip
lods
inc
rcr
or
or
jecxz
pop
mov
je
dec
fimuls
pusha
adc
lret
xchg
push
add
adc
mov
rolb
movsl
xor
in
xor
xchg
xor
pusha
ljmp
roll
out
stos
xor
and
dec
lcall
insb
lret
js
push
jmp
add
lret
adc
push
sahf
inc
rol
into
mov
and
push
add
mov
icebp
xchg
xchg
xchg
push
add
mov
xchg
lcall
sbb
adc
frstor
cmpsb
rcll
insb
sbb
push
jo
lock
pop
dec
xor
jne
mov
inc
dec
arpl
dec
lret
je
mov
lds
jo
xorl
or
mov
xor
subl
cmp
sbb
shll
mov
jg
pusha
stos
outsb
mov
out
mov
dec
pop
ret
sbb
mov
jg
push
sub
jg
imul
jo
nop
rcll
sahf
out
push
loop
adc
cmp
push
dec
sarb
lea
mov
daa
inc
cmp
lea
push
ja
pop
inc
inc
add
add
or
orb
test
xchg
dec
pushf
mov
pop
inc
incl
add
leave
inc
or
ret
or
and
lods
and
or
xchg
xchg
pop
subl
inc
daa
sbb
mov
pop
loope
fistl
pop
and
fcomps
push
add
push
xadd
mov
dec
xchg
pop
or
add
inc
rcrb
sahf
sub
or
pop
dec
orl
cmp
gs
inc
adc
cmp
jne
push
or
sbb
xor
add
xchg
adc
cmp
push
lock
movsl
daa
push
mov
sbb
and
xchg
sub
inc
push
sbb
sbb
jo
mov
mov
xchg
push
rcll
enter
and
cmp
pop
mov
test
push
xor
push
adc
das
sub
jno
addl
push
xor
das
xor
push
xchg
jo
mov
jae
xor
sbb
jge
push
xlat
sub
nop
enter
mov
enter
into
xor
test
mov
or
rolb
or
fnstsw
fwait
hlt
movsb
roll
cltd
lret
pop
inc
or
pop
mov
or
pusha
sub
ror
mov
inc
add
and
inc
adc
push
lds
add
andl
mov
scas
or
push
sahf
and
add
je
dec
rclb
add
out
enter
aas
int
xchg
pop
ret
push
sub
and
add
sub
adc
pop
jns
sub
sub
hlt
mov
cli
sub
jg
shll
push
or
mov
or
mov
push
dec
jg
repnz
push
pushf
dec
test
addb
push
jne
and
cmpsb
and
es
push
jecxz
adcl
sub
xor
pop
mov
movsb
push
dec
pop
mov
pop
sub
xor
loop,pn
mov
mov
das
loop
pop
adc
jno
sbbb
mov
inc
out
xor
mov
imul
ja
mov
loop
or
push
dec
mov
and
cmp
dec
jae
dec
push
clc
xor
or
push
inc
adc
push
imul
adc
pop
cmp
push
test
popf
add
sub
loope
imul
sbb
or
int3
cwtl
and
int
jmp
push
xor
mov
sub
adc
pop
sahf
or
xchg
lods
and
xchg
sub
lea
push
add
sub
fisubl
inc
jb
inc
mov
push
xchg
dec
repnz
adc
imul
movsl
dec
call
xchg
sub
outsl
xorl
xchg
test
sub
pop
add
out
sub
inc
push
sbb
sbb
sub
lock
test
push
and
mov
adc
mov
jge
push
sbb
mov
pop
leave
or
jle
add
inc
pop
add
jne
xchg
out
add
sub
push
sbb
add
sbb
xor
xor
and
or
in
shll
sub
xlat
test
cmp
pushf
adc
push
scas
pop
mov
jl
in
mov
scas
bound
loop
aas
push
push
pop
inc
and
clc
add
mov
jb
lahf
inc
cmp
jno
jmp
test
mov
insl
and
cli
pop
or
adcl
orb
in
mov
dec
adc
inc
jg
push
push
push
mov
mov
pusha
call
and
adc
movsl
mov
int
hlt
imul
jge
and
sbb
dec
push
hlt
mov
dec
adc
inc
and
mov
jo
xchg
or
or
and
dec
shlb
mov
sub
inc
inc
faddp
cmp
cmpsl
idiv
pop
jnp
jae
insb
lock
int
jmp
cmp
dec
popf
or
jnp
inc
add
insb
pop
mov
xchg
fidivrs
imul
push
das
cwtl
dec
aam
sub
rcll
jo
cmp
je
nop
pop
mov
jne
or
mov
dec
dec
shr
das
lea
sbb
movsl
jecxz
jbe
je
js
xchg
jmp
mov
popa
sub
xchg
nop
das
push
and
sub
ficoml
nop
and
add
loope
sbb
mov
dec
xorl
pop
push
cmp
add
pop
dec
jl
fbld
pop
push
and
push
adc
mov
lret
rorl
add
sub
push
fcompl
clc
lock
pusha
movsl
sub
mov
mov
adc
xor
mov
lahf
or
and
push
out
and
adc
inc
das
dec
cmpsl
lea
or
subl
add
mov
mov
ret
mov
mov
adc
pop
add
cmp
sar
xchg
jbe
inc
mov
xor
mov
xor
inc
or
orb
sub
add
popa
ja
xchg
mov
sti
dec
jge
and
dec
jl
rolb
enter
mov
lret
les
jecxz
test
testl
sbb
lea
nop
pop
es
gs
js
pushf
iret
repz
scas
shl
fildl
ljmp
add
add
add
add
add
or
scas
mov
mov
lock
sbb
push
cmc
xchg
inc
sahf
push
and
sbb
xchg
rcll
inc
mov
je
xor
sbb
sahf
shlb
dec
pop
es
sub
pop
leave
xchg
fdivrl
pop
jnp
mov
mov
xchg
fnstenv
xor
mov
xchg
out
mov
mov
add
xor
fs
add
push
das
xor
cwtl
inc
fistpl
insb
adc
mov
mov
test
mov
mov
fdivrs
jnp
dec
nop
dec
pop
shll
push
je
pop
add
enter
or
imul
jmp
scas
mov
mov
dec
adc
xchg
push
arpl
rorl
pop
leave
and
ss
push
mov
or
test
cwtl
lods
int3
cmp
mov
dec
test
lea
xchg
mov
js
pusha
cmp
xchg
mov
mov
mov
fildl
lcall
jno
mov
adc
xor
and
mov
xor
cmp
arpl
ljmp
dec
filds
shlb
ss
and
pop
adc
push
rclb
pusha
call
mov
js
jg
and
xchg
xor
in
movsl
ret
dec
sub
adc
adc
cmpb
xchg
xor
mov
pop
inc
daa
insb
shrl
das
aas
xor
cld
cmp
sarl
push
xchg
cmpsb
mov
sbb
jnp
idivl
dec
repz
sub
sahf
out
lret
cmp
orb
push
cli
lahf
call
pop
pusha
cmp
pop
rol
and
add
iret
xchg
add
sbb
andl
dec
inc
add
addb
imul
fstpt
dec
setne
add
pop
add
cs
sub
push
fs
add
adc
sbb
pop
xor
and
fldcw
cmpsl
push
and
xchg
or
inc
adcb
xchg
and
push
pop
push
nop
lods
movsb
cmp
jb
das
pop
mov
test
roll
and
mov
jb
in
dec
pop
in
push
cmp
and
mov
cmp
inc
cmp
nop
cld
cmp
sub
sahf
dec
js
sub
push
pop
repz
out
mov
fistps
sub
xor
fistpl
out
jns
cs
inc
pop
xchg
fnstcw
insb
lods
in
pop
push
outsb
sbb
sbb
inc
or
jnp
push
decb
movsb
adc
and
sti
xor
int
mov
pop
clc
cmpsb
inc
daa
cmp
ss
movb
je
fs
popa
jne
mov
xchg
fstpt
add
add
rcrb
sub
test
mov
cltd
inc
mov
or
sub
push
push
fs
pop
sti
test
adc
xlat
inc
mov
lock
or
jns
jl
and
faddl
and
pop
ds
push
pop
pop
mov
sarl
repnz
leave
fwait
or
fisttpll
xor
scas
loope
jb
or
pop
xchg
je
rorl
pop
and
leave
and
mov
dec
cs
dec
adc
int3
fmull
test
in
dec
lahf
sbbl
push
mov
movl
pop
fildll
mov
pop
rclb
push
add
sbb
add
sub
les
dec
mov
sbb
clc
xor
push
daa
cmpl
dec
nop
das
adc
or
cltd
adc
mov
or
sub
mov
fstl
pop
movsb
nop
lahf
pop
xchg
lds
jge
cmpsb
push
test
add
push
add
enter
lods
inc
jl
sbb
pop
shll
aam
mov
push
insb
mov
xchg
and
pop
cmp
adc
sbbb
push
add
nop
and
ljmp
cmc
lea
xchg
sbb
inc
cmp
xor
jecxz
cmp
pop
sbb
jecxz
jecxz
pop
dec
push
sbb
add
add
pop
and
jmp
mov
enter
dec
roll
jo
xchg
push
loop
push
dec
lea
test
adc
mov
push
cmp
add
lahf
cmp
pop
pushf
sahf
sub
cmpsb
mov
add
aam
mov
jecxz
inc
inc
fisttpl
es
jmp
stos
jne
lea
push
jg
sub
or
imul
mov
mov
pop
lret
ds
movsl
jo
lret
sahf
mov
movsb
out
dec
jl
cs
mov
cmp
inc
es
je
xchg
cmp
add
and
gs
pop
xchg
mov
or
xchg
lea
xchg
xacquire
sbb
icebp
and
lret
inc
nop
and
add
bound
and
push
or
mov
cmp
adc
movsl
test
sbb
adc
mov
jb
pushf
xor
adcb
xor
or
hlt
leave
adc
sbb
jne
and
ret
push
adc
shlb
sub
sbb
xchg
cmp
fcoml
sahf
lret
outsl
adc
and
xor
pusha
xor
or
ljmp
fadds
inc
ret
inc
js
push
adc
filds
sub
push
xchg
fidivl
insb
xchg
push
push
inc
jge
es
sub
test
mov
add
popa
add
add
aam
sub
and
add
mov
inc
jl
push
scas
dec
cmp
cmp
pop
nop
sub
jmp
jle
xlat
test
add
and
ss
inc
push
sub
jb
or
mulb
inc
or
daa
pushf
and
sub
test
sub
insb
pop
xchg
or
add
negb
scas
or
cltd
scas
ret
mov
add
mov
les
sbb
aas
rolb
xchg
lcall
fcmovbe
xchg
xchg
or
lds
sub
ficoms
les
mov
push
cmp
popl
push
fld
push
sarb
pop
ljmp
push
in
xchg
add
cmp
dec
xchg
sar
push
stc
ljmp
in
stc
jb
dec
adc
sbb
mov
or
push
or
inc
cmp
add
je
push
push
lahf
add
fbld
clc
sub
sub
xor
push
mov
push
and
add
push
or
insb
sbb
xor
into
lock
repz
je
ret
push
into
iret
sarl
adc
stos
mov
ret
adc
inc
sbb
je
divb
xchg
mov
jl
mov
or
shll
test
sub
push
inc
push
dec
es
js
xchg
xchg
inc
add
js
fs
ret
mov
pop
out
mov
inc
adc
sbb
aam
ss
sbb
pop
or
or
out
xchg
lea
push
push
pop
mov
decl
nop
ret
insb
scas
rorl
push
push
jmp
mov
dec
pop
sbb
and
sub
aas
push
adc
lret
add
adc
inc
and
je
cli
das
rolb
dec
cli
imul
mov
inc
jle
clc
pop
addl
add
sti
mov
add
adc
lcall
pop
nop
orb
shll
mov
jg
sbb
movsb
fdivr
ja
push
jge
and
addb
cmp
les
inc
pop
and
mov
jne
sarb
cmp
lds
push
lahf
xchg
out
ds
les
jo
mov
cmpb
xchg
movsb
das
adc
inc
stos
and
ret
jg
dec
sub
sbb
xor
arpl
add
and
push
and
enter
inc
mov
stc
lret
mov
fiaddl
adc
call
stc
adc
xchg
rol
out
pop
xchg
js
cmp
jle
popa
xor
jmp
imul
ret
adc
ds
dec
dec
jne
inc
adc
subl
popa
lret
xor
add
or
push
add
inc
sub
push
xchg
aaa
xor
dec
testb
iret
inc
in
jl
cmp
mov
mov
ss
sub
cmp
ret
sbb
ret
sub
fcomi
pusha
jo
xor
mov
add
xchg
add
daa
lods
sub
mov
filds
pop
sar
and
sub
sub
rcll
popf
fwait
sbb
push
and
sub
dec
loopne
lcall
stc
out
lret
add
imul
adc
jle
xor
inc
mov
cmp
and
xor
xchg
sub
mov
inc
add
pop
jg
mov
notl
xor
jae
mov
fwait
loope
movb
aas
mov
cmp
pop
cli
add
cmp
inc
and
and
add
gs
mov
push
fcoml
mov
pop
lahf
jne
push
aad
sbb
jbe
mov
dec
inc
push
push
mov
outsl
out
adc
aaa
push
push
add
ss
push
push
cmp
stc
push
and
or
pop
int3
adc
data16
xorb
ljmp
push
sbb
rcrb
cmpsb
or
pop
sbb
inc
pop
mov
cmp
add
or
push
or
or
pusha
aaa
outsl
push
add
mov
aas
icebp
push
nop
mov
jg
inc
cmpb
rorb
or
jle,pn
and
jg
pop
insb
adc
dec
jnp
sarl
movsl
adc
inc
addr16
movsl
mov
mov
or
inc
rorl
sub
add
addl
rol
or
stos
lods
xchg
or
divl
and
call
shl
jne
dec
and
or
push
mov
add
les
test
ljmp
insb
call
xchg
movsb
mov
pop
sub
mov
pop
pop
cld
sti
dec
xor
jg
aas
adc
pop
push
xor
add
fsubr
cmp
stos
jnp
sub
jno
sahf
or
mov
pop
subb
sarb
dec
add
bound
mov
dec
and
adc
stos
ror
xor
xor
in
popa
das
add
icebp
sbb
xchg
imul
and
jecxz
shlb
rcll
aad
out
jle
adc
cmp
divl
icebp
cmpsl
mov
cmp
jne
mov
popa
cmc
jmp
aad
lcall
lret
xlat
or
adc
jmp
sbb
stos
xor
out
aaa
call
cltd
popf
data16
mov
adc
rcrl
xor
dec
out
sub
jo
ret
jne
mov
ret
ficompl
pop
ficompl
cmp
dec
push
sbbl
adc
xchg
lahf
add
jge
jbe
jae
js
push
jle
push
add
lcall
fs
bts
cmp
inc
xor
repnz
jl
jge
sbb
jnp
pop
dec
or
xor
bnd
outsl
cwtl
and
cmp
mov
sub
or
loop
xchg
scas
jo
or
push
add
pop
and
movb
sub
and
xor
sub
sub
cmp
push
dec
dec
in
cmp
sti
js
loopne
add
sub
xlat
in
movsl
lea
sahf
push
adc
imul
cmp
push
xchg
imul
movsb
jo
mov
mov
fdivrp
insl
pop
mov
dec
adc
mov
push
or
inc
or
pop
test
sub
xor
mov
inc
adc
push
push
inc
sbb
mov
sub
add
sub
shl
pusha
shlb
insb
imul
or
inc
jb
jnp
inc
loop
mov
dec
cmp
and
outsl
and
or
jl
jge
stos
sbb
test
test
xor
inc
or
jae
loop
xor
mov
lret
clc
and
and
cld
or
rol
xchg
push
or
dec
test
imul
add
add
or
popf
or
mov
fisubrl
inc
pop
dec
mov
xor
sub
add
dec
call
fwait
shll
mov
sti
dec
mov
aad
add
push
addr16
mov
lock
cmc
adc
xchg
les
loop
in
cmp
push
hlt
push
push
lea
nop
int3
nop
outsb
mov
ljmp
dec
and
cld
cmpsl
jne
sahf
lea
push
jl
ja
rcl
xchg
or
sti
pushf
adc
mov
sub
out
pop
add
sbb
jl
icebp
jbe
and
adc
inc
and
mov
adcb
insl
push
add
and
or
mov
sub
in
ret
in
pop
test
stos
and
int3
shrb
push
mov
enter
rcr
pop
sub
daa
clc
out
sub
adc
add
sbb
pop
subl
dec
xlat
jb
xor
rorb
sbb
shlb
push
inc
xor
pop
shll
rcl
stos
pop
add
mov
int
add
ds
aam
inc
xor
icebp
pop
or
or
jbe
cmp
add
je
dec
add
sbb
xchg
dec
adc
adc
or
std
jo
xor
cld
and
jns
adc
cmpl
pusha
push
stos
cli
xor
dec
testl
and
fs
fadds
and
adc
mov
or
inc
or
iret
inc
aaa
add
mov
adc
mov
jb
adc
int3
ret
add
cmpsb
xlat
adc
rcl
hlt
mov
xor
hlt
push
add
jecxz
pop
ss
jne
pusha
fsubrs
lcall
movb
test
or
cmp
outsb
or
cmp
enter
shrb
clc
sahf
es
add
xor
cld
sub
dec
xor
or
in
cmp
adc
jmp
fnstcw
gs
test
or
push
stc
pop
je
push
mov
movsl
jnp
xchg
mov
test
push
inc
dec
testl
push
push
xchg
xor
ret
add
clc
lret
mov
sub
dec
add
add
cmp
lea
out
test
adc
push
lods
insb
popf
dec
dec
or
xchg
mov
push
pusha
test
aaa
mov
fwait
pop
inc
inc
push
jge
and
movsb
mov
outsl
outsl
insb
cmpb
out
ror
fwait
pusha
or
mov
xchg
mov
dec
loope
add
lds
ss
ret
inc
aas
sbb
mov
or
dec
je
push
je
cmpsl
insb
sarl
data16
and
repz
mov
xchg
pusha
pop
mov
lret
sub
and
rcrb
dec
scas
and
mov
jnp
mov
xor
pop
sbb
shl
push
push
es
lods
insb
or
mov
sub
adc
sbb
push
je
xchg
jne
pop
xor
dec
in
ss
sub
push
jb
push
xor
jb
hlt
in
sub
jne
loop
jbe
xchg
sub
scas
jo
add
aaa
xlat
dec
bound
mov
call
inc
scas
test
jl
aas
dec
ret
and
adc
sbb
pop
stc
and
bts
jb
ret
out
cmp
fstpt
xchg
jo
lea
ficomps
sbb
sbb
xchg
rcrl
push
popa
movb
mov
lahf
inc
push
pop
aaa
push
inc
or
movsl
mov
mov
clc
insl
nop
add
xor
mov
and
js
add
lods
sub
sarb
xor
mov
lret
loop
sarb
fcoms
fcomps
sbb
out
xor
jnp
or
fs
cmp
mov
rolb
push
jp
insl
dec
es
xorb
cmpsb
push
xchg
add
sahf
pop
rclb
inc
xchg
xchg
push
or
in
shrl
add
xor
pop
jge
fsubrs
sbb
rcll
aad
sbb
rolb
flds
leave
rolb
sub
mov
jle
mov
inc
inc
pop
rcll
lods
or
jne
mov
adc
sbb
fcompl
jp
jl
mov
xor
icebp
pushf
xchg
pop
push
push
fcomi
mov
xchg
shlb
inc
ds
sbb
inc
push
adc
stos
pop
inc
push
pusha
push
mov
hlt
pop
sub
fidivrs
cmp
add
xor
xchg
xor
xchg
int3
jmp
push
bound
cmp
dec
push
fsubr
iret
add
inc
xchg
bnd
jo
dec
repz
xchg
or
mov
insb
aad
pop
cmpsb
and
sub
addr16
fldenv
inc
das
add
shlb
int
sub
loopne
sub
iret
push
arpl
cmp
dec
das
je
pop
mov
sub
cmp
stos
adc
addb
push
das
jne
and
rorb
lea
lds
cmp
add
sub
test
jo,pn
gs
movsb
int3
xor
dec
add
aaa
xor
rcrl
inc
dec
sbb
cmp
rcll
sbb
push
dec
popf
movsl
sub
add
xchg
sahf
shrl
jl
dec
jge
mov
xor
dec
rclb
inc
ljmp
lret
jae
xchg
jo
add
jge
shll
push
mov
pop
push
and
sbb
cld
pop
insb
or
adc
mov
sbb
rcr
je
and
rclb
push
outsl
xor
xor
sub
push
je
sbb
jb
sub
fisttpl
in
cmp
inc
mov
mov
pop
lcall
push
adc
mov
cli
adc
loope
gs
or
int
sbb
mov
pop
fstpt
imul
fstpl
jge
push
add
std
mov
jne
test
pop
negl
xchg
push
cmpb
mov
dec
cmpsb
push
fwait
or
jp
sbb
dec
push
inc
popf
mov
aad
or
fcoms
loop
sbb
mov
push
sbb
pop
mov
or
gs
sub
mov
dec
orl
cld
mov
sub
cmp
movsb
push
or
jbe
or
jo
mov
fs
sarb
sbb
cmc
mov
xlat
xchg
dec
sub
mov
adc
stos
dec
shl
cli
pop
sbb
cmp
pop
rol
cmpsl
push
js
jp
flds
jo
lea
dec
insb
fld
fsin
pop
dec
fcos
or
mov
scas
mov
push
pop
sbb
sub
fnstsw
push
jmp
and
cmpb
cmpsl
dec
adc
pop
addr16
jnp
jae
fld
mov
mov
add
in
in
out
dec
dec
jmp
cmp
nop
les
shr
je
sbb
mov
into
fdivl
sti
jne
mulb
xor
push
xor
fsts
or
fbstp
push
cmp
arpl
and
sti
ss
fcoml
sub
or
fcoms
cmp
aaa
cltd
in
cmp
adc
lret
dec
cmp
les
inc
add
jge
push
xor
cmp
popf
adc
mov
xor
loop
lret
into
imul
xor
jae
mov
or
pop
fsubrs
pop
lcall
mov
in
mov
pop
call
pop
sub
mov
jmp
in
add
ret
fwait
stos
xor
pop
push
in
dec
push
imul
jnp
sbbl
dec
inc
or
xchg
fbstp
call
fadd
push
lret
cs
push
and
fidivrl
ljmp
rclb
jge
adc
lret
scas
dec
sub
pop
lret
dec
or
sub
xchg
loopne
sahf
inc
or
ficoml
push
cmp
fldcw
fistps
lahf
inc
cmp
in
sub
and
push
xor
xor
sbb
out
add
mov
lea
adc
jp
rorb
das
and
outsb
popa
out
es
arpl
push
pop
xor
push
mov
rolb
or
cmp
xor
xchg
ret
inc
addb
lods
mov
pop
les
pop
cmpl
adc
adc
or
push
and
faddl
insl
sub
sbb
sub
mov
push
fadds
inc
adc
jl
jbe
rclb
add
pop
push
ss
inc
add
mov
jg
enter
add
mov
prefetch
lods
jmp
adc
mov
sbb
jle
jl
push
arpl
xchg
mov
cmc
push
mov
clc
mov
outsb
adc
repnz
and
cmp
pop
jb
pop
into
aam
int3
test
xchg
jl
sidtl
ret
xor
dec
mov
dec
out
push
arpl
dec
ljmp
imul
int
and
adc
adc
xchg
lahf
movsb
xor
xchg
and
sbb
xor
mov
sub
sub
int
pop
nop
jbe
mov
add
pop
hlt
push
mov
mov
dec
adc
and
jp
sub
fprem
fisttps
pop
inc
mov
and
sub
negb
and
and
aas
add
int
fcmovbe
jmp
dec
push
push
adc
mov
adc
out
into
jl
xchg
jmp
or
xor
iret
ret
mov
repnz
push
jne
cmc
add
daa
adc
push
rorl
xchg
inc
xchg
sbbb
dec
xchg
push
adc
jge
xor
sub
das
in
sar
sar
jne
and
mov
adc
push
adc
cmc
xchg
cmc
push
push
pop
push
insl
or
push
cs
pop
test
mov
andl
mov
lock
pop
lcall
sub
inc
out
or
inc
test
jle
inc
addr16
aam
push
data16
jecxz
sahf
or
lods
cmp
je
mov
clc
xor
shll
icebp
lea
xchg
daa
loopne
adc
dec
mov
push
add
and
sbbb
insb
xchg
inc
movsb
or
cmp
test
mov
pusha
sti
dec
imul
cmp
dec
aaa
adc
and
push
popa
xor
cmp
or
sub
aaa
es
adc
insl
test
jmp
sub
inc
inc
sahf
push
subl
dec
adc
xchg
mov
push
push
nop
or
pushf
mov
mov
adc
jl
jmp
pop
mov
fcomp
loopne
mov
push
lahf
aad
mov
inc
push
mov
mov
stc
das
dec
adc
xchg
and
stos
or
or
pop
or
ja
incl
out
mov
push
test
inc
dec
mov
or
in
dec
movsb
xor
sbb
cld
and
dec
push
je
test
enter
sbb
jg
push
or
js
arpl
dec
lods
cmpb
test
fcoms
mov
adc
jns
rorl
icebp
jle
adc
stos
jne
shlb
jne
fucomp
idivb
jnp
jne
jae
mov
push
std
fildll
sbb
push
fwait
jmp
jl
adcb
jb
out
cmp
sbb
movsl
push
cmp
push
push
cmp
insb
pop
lock
jne
cmp
mov
fs
lea
add
call
in
sub
int
sub
mov
pusha
into
scas
jmp
rolb
jmp
or
pop
add
jl
inc
fisttpll
xor
pop
and
clc
sbb
add
push
adc
mov
and
push
mov
mov
enter
adc
sub
or
adc
sar
pop
adc
sbb
fistl
rcl
gs
sub
pop
pop
dec
dec
push
sbb
outsl
jae
xchg
dec
rcll
xchg
push
or
jg
mov
loope
push
push
mov
test
xchg
lahf
lret
movsl
out
adc
lods
scas
imull
pop
dec
mov
adc
je
xor
sub
ljmp
push
inc
or
mov
dec
fists
mov
test
ja
cmp
mov
xchg
push
and
jo
lds
in
mov
test
and
and
sub
dec
push
push
xor
loope
rcrl
push
xor
jmp
mov
mov
ret
push
or
xor
jbe
mov
imul
or
jo
push
adcl
dec
and
test
adc
pop
ret
sub
sbb
add
jmp
rorl
xchg
orl
push
push
pusha
ror
fisubrl
shlb
mov
sbb
xchg
sbb
jge
and
inc
nop
pusha
inc
and
fbld
daa
push
add
push
sbb
pop
and
and
nop
bound
nop
sbb
cwtl
clc
and
jl
shlb
aas
movl
xchg
dec
and
data16
out
push
aam
add
dec
or
jle
out
mov
push
pushf
sbb
sbb
je
scas
push
stos
cmp
inc
fiaddl
je
in
pop
xchg
insb
add
rorl
pusha
jmp
sbb
and
jle
cmp
mov
mov
test
jns
fwait
xor
cmp
enter
adc
aam
sub
enter
pop
push
or
inc
movsl
fwait
mov
cmpsb
and
jmp
mov
adc
je
dec
inc
or
sub
fs
imul
and
incb
push
push
pop
sub
cmp
add
out
lods
add
or
add
mov
adcb
dec
cs
dec
or
test
rorb
repz
sbb
fdivrl
out
jmp
loopne
in
lods
out
idivl
adc
mov
lock
iret
movsl
repnz
repnz
clc
xchg
cld
testl
in
push
push
adc
sahf
out
imul
cmp
adc
lahf
out
repz
mov
add
bnd
and
add
sub
sahf
scas
xor
xor
xor
repnz
push
inc
testl
lret
dec
push
in
pusha
adc
cmc
add
push
test
jne
add
xor
sarb
ds
sbb
mov
mov
cmp
adc
jns
jg
hlt
clc
sub
outsb
or
or
movsl
xchg
add
push
fs
jl
pop
sti
ret
mov
xchg
sub
push
mov
inc
cmp
call
outsb
ficoms
mov
mov
xchg
stos
inc
cmp
jno
shrb
pop
jecxz
cmpl
adc
jg
out
and
lea
inc
sbb
lods
dec
and
sbb
inc
lret
jge
add
xchg
sub
or
and
dec
push
adc
mov
loop
neg
xor
sbb
cmpsl
adc
cmp
jbe
push
mov
push
mov
lods
add
xchg
subb
js
loop
pop
fwait
inc
loop
jnp
jecxz
dec
adc
add
stos
push
inc
pop
cmpsl
cli
cmp
sbb
lods
inc
lods
pop
arpl
test
add
in
mov
jne
sub
iret
push
adcl
dec
dec
nop
push
pushf
shl
push
sub
ljmp
lret
and
cmc
dec
cltd
jae
and
data16
jae
sti
mov
adc
cs
sbb
mov
pop
addr16
and
aad
xchg
push
clc
test
sub
push
gs
pusha
ret
sub
lods
xchg
or
jecxz
pop
cmp
cmp
inc
jecxz
loope
addb
lret
sbb
stos
add
loop
inc
std
sbb
dec
dec
dec
mov
jb
jmp
xor
sub
sub
pop
and
mov
pop
adcl
and
mov
or
or
movsb
xchg
shrb
gs
sub
xor
ret
pop
xchg
mov
push
xor
xlat
mov
stos
push
jle
add
dec
int3
pushw
add
test
aas
das
stos
loop
dec
test
ret
mov
orl
push
test
adcl
rcrl
cmp
xchg
or
rolb
fists
or
inc
cmp
sub
or
push
sbb
fstpl
imul
xor
or
or
add
or
mov
sub
cmp
idivb
fdivrs
sub
cmpsl
mov
xchg
xor
sbb
jno
cmp
pop
or
addl
pusha
cmp
push
sub
adcb
cwtl
adc
push
push
mov
aaa
jmp
lock
jmp
rorb
sar
pop
dec
or
ret
ret
ss
cmc
sarl
cli
dec
xor
shll
dec
sub
popf
inc
jp
jo
jle
inc
pop
sbb
pop
xor
add
cmp
imull
adcb
roll
xchg
inc
lret
adc
cmp
rolb
lods
mov
ret
add
adc
and
js
fldcw
mov
incb
sub
xlat
and
xchg
and
xchg
push
xor
and
lcall
pop
add
mov
test
xchg
mov
je
add
jl
push
cmpsb
xor
push
fadds
add
fs
xchg
popa
jns
enter
loopne
insl
insb
pop
dec
cmp
mov
sahf
mov
lods
stos
ficomps
mov
mov
jle
cld
mov
xor
out
dec
mov
jne
fsubs
pushf
cs
pop
push
push
iret
mov
mov
dec
mov
push
and
fisubrl
add
in
add
adcl
imul
mov
imul
push
in
sbb
push
push
jo
repz
pop
je
mov
mov
cwtl
mov
dec
jo
lcall
jmp
rcr
iret
je
stos
xor
pusha
call
pop
push
dec
fldl
sbb
test
roll
pop
outsl
mov
icebp
lea
mull
inc
inc
rolb
pop
jne
dec
xchg
inc
push
stos
inc
push
sbb
xchg
pushf
or
jns
mov
mov
iret
cmp
and
inc
imul
mov
movsl
push
popf
xor
sbb
shlb
add
loope
jne
push
insl
idivl
aaa
mov
sbbl
mov
or
lahf
add
lods
xor
dec
jo
or
xor
roll
icebp
mov
popf
jg
sbb
pop
pusha
xchg
mov
sub
je,pn
stos
xor
cmp
add
dec
cld
dec
inc
testb
inc
std
push
jl
call
mov
test
cmp
or
add
sub
mov
clc
je
sbb
xor
outsl
jbe
sti
jmp
dec
adc
mov
ret
mov
sbb
pusha
jne
xor
loopne
jb
dec
dec
sbb
fcomp
mov
subb
sbb
pop
insl
push
adc
cmp
xor
sar
mov
stc
loopne
mov
repnz
jg
in
inc
add
and
sbb
into
mov
cmp
je
test
add
gs
xchg
std
bound
xor
int
je
insl
push
pop
or
pop
pop
fcom
es
push
xlat
orl
dec
xor
or
arpl
fcoms
inc
roll
repnz
outsb
dec
pop
shll
mov
jl
cmp
jge
sahf
jecxz
roll
sbb
ret
push
mov
orb
and
push
push
cmp
dec
dec
clc
xchg
fwait
push
shll
add
and
or
lods
push
push
xor
fs
rcrl
outsl
jns
xor
and
push
sub
or
fwait
dec
cmp
cmp
cmp
and
dec
add
inc
fldl
xor
outsl
dec
scas
arpl
xchg
mov
in
inc
call
inc
pop
xor
adc
jne
rcll
out
adc
inc
or
mov
sbb
mov
adc
push
pop
xchg
lock
xchg
lret
je
ljmp
mov
push
cmp
add
popa
loopne
movsl
dec
xlat
add
xor
pop
or
xor
or
adc
cmpsb
addb
inc
or
and
inc
push
sbb
xorl
lods
dec
lock
imul
add
or
inc
jns
movsb
push
sarl
xchg
jns
add
inc
js
dec
out
adc
sub
lcall
add
xchg
or
sbb
std
mov
lcall
in
and
mov
or
push
xor
adc
inc
mov
das
dec
cltd
leave
add
mov
fidivs
inc
out
sub
sar
cli
xor
or
subl
aaa
adc
sub
adc
out
in
or
mov
inc
fmull
pusha
sub
out
daa
mov
jle
aam
int
cmp
adc
add
in
sub
test
xor
xor
xchg
arpl
mov
imul
nop
lahf
jmp
sbb
mov
push
scas
jg
aas
jo
mov
push
leave
es
mov
js
stos
aaa
sbb
imul
pop
decl
jge
movl
xchg
es
inc
sbb
mov
adc
inc
xchg
push
fistl
dec
adc
adc
cltd
lret
dec
js
ds
outsl
stos
add
jo
mov
pop
dec
mov
push
jge
lahf
lock
sbb
int3
adc
push
push
fstpt
fcom
add
inc
and
inc
inc
jle
push
pop
add
cltd
fistl
sub
sbb
adc
inc
sub
nop
sub
mov
mov
aam
dec
cmc
inc
lock
mov
mov
xor
hlt
dec
sbb
pop
pop
xor
je
gs
pop
popa
insb
dec
ljmp
sbb
faddp
mov
jne
and
dec
dec
push
and
adc
mov
fs
cmp
push
fstl
xor
xor
or
mov
clc
and
pop
adc
jns
xor
mov
ret
in
inc
sbb
mov
dec
test
push
lahf
and
or
insb
rolb
sub
cmp
push
pop
add
in
xor
or
adc
pop
push
dec
adc
in
dec
repnz
push
pop
push
dec
sbb
inc
jl
inc
aas
sub
and
pop
cmpsl
adc
mov
and
jecxz
in
pushf
pop
push
mov
inc
dec
stos
mov
inc
push
insl
mov
cwtl
jge
xchg
mov
scas
sbb
cmpsl
mov
outsb
lods
scas
xor
push
push
aas
int3
mull
cmc
aas
loopne
mov
arpl
xchg
push
push
add
sub
add
xchg
and
add
cmp
mov
pop
dec
gs
sbb
dec
out
sub
mov
jmp
mov
jno
pop
es
mov
sub
jnp
cmp
xor
push
mov
mov
jno
call
inc
cld
ss
fwait
push
sub
pop
push
mov
inc
push
push
insl
dec
loope
js
inc
cmp
ret
aas
pushf
push
imul
xchg
into
js
dec
xchg
mov
or
sbb
adc
lock
adc
aaa
test
les
hlt
lcall
jge
or
sub
and
gs
add
sbb
adc
jmp
push
sbb
dec
push
cmc
sub
push
add
xchg
outsl
and
sbb
bound
and
push
ret
inc
pop
add
leave
inc
push
cld
add
add
add
sbb
lods
movsb
mov
add
sti
je
adc
and
xlat
inc
add
mov
mov
pop
dec
add
aas
add
mov
enter
sbb
sbb
mov
insb
imull
inc
dec
push
sbb
ds
jle
xor
inc
gs
sbb
repnz
iret
sub
rol
sar
push
xor
ret
or
popa
mov
and
je
sub
add
adc
nop
cmp
dec
sbb
cmp
xorb
and
sbb
jne
rclb
inc
mov
mov
or
mov
mov
arpl
sbb
and
or
mov
loopne
push
inc
xchg
and
xchg
insb
lods
ret
ret
mov
stos
mov
dec
mov
sub
in
add
mov
outsl
dec
dec
lahf
sahf
fsub
rclb
lea
call
lds
in
mov
jg
inc
cli
add
lret
fstpt
mov
out
mov
cltd
pop
and
sbb
adc
sti
and
add
lcall
cmp
inc
and
lds
lahf
pop
add
mov
lcall
arpl
sub
adc
hlt
push
push
xor
sbb
sbb
push
sub
lret
les
mov
jmp
xchg
pop
jo
sti
and
mov
loopne
divb
lds
movsl
cmpsl
sbb
js
imul
iret
push
cmp
jne
sbb
mov
xchg
test
xchg
shr
dec
adc
jae
ret
mov
es
and
mov
adc
sahf
in
inc
daa
dec
shrb
movntq
fwait
xor
scas
es
jg
sbb
jmp
pop
movd
adc
or
push
pop
lret
ret
sahf
jb
jp
ret
ja
dec
dec
xchg
xlat
pop
fdivr
push
les
mov
arpl
out
inc
std
frstor
cmp
inc
imul
push
sub
pop
lret
ss
adc
sub
or
add
push
mov
repz
fld
fcos
fmul
fsubrl
sarl
fsin
subb
fdivs
jo
or
pop
sbb
dec
icebp
push
add
pop
sub
pusha
test
jmp
test
adc
push
pop
push
out
popa
adc
cli
push
idivl
push
push
dec
or
push
test
add
leave
pusha
out
jnp
jmp
inc
insb
mov
sub
div
ret
sub
and
scas
and
and
rorb
xchg
cmpb
pop
push
push
int
je
sbb
je
sbb
std
orl
jbe
push
push
sbb
adc
adc
jb
sahf
arpl
aam
ss
push
ds
lea
xchg
pop
xor
mov
fwait
push
ret
test
insl
cmp
adc
lret
add
fisubs
jmp
pop
cmp
cmp
adc
es
cmc
or
sbb
fistps
dec
adc
mov
add
rcl
mov
daa
sbb
add
repnz
call
push
or
jne
aaa
and
mov
sub
xchg
subb
push
and
cmp
and
push
gs
xchg
pop
shlb
test
adc
dec
sub
inc
adc
inc
cwtl
shll
push
scas
lret
test
xchg
push
cltd
sbb
xchg
addl
mov
adc
ficoml
sbb
fistl
test
add
int3
adc
cmp
mov
and
nop
jns
mov
xor
push
mov
xor
mov
repnz
fs
jo
and
dec
inc
ss
xorb
pop
cmp
sub
or
mov
sbb
frndint
pop
movsl
aad
dec
sti
pop
data16
pop
adc
andl
dec
pop
add
dec
push
aam
push
jb
clc
out
add
dec
dec
mov
into
mov
faddl
scas
add
add
adc
adc
and
sub
sarl
cmp
fildl
sbb
xlat
or
or
inc
add
scas
leave
clc
stos
fld
mov
dec
inc
ffree
sti
add
push
and
inc
push
loopne
repz
xor
sbb
mov
mov
push
movb
insl
inc
stos
xor
es
push
dec
mov
sbb
or
ret
add
std
sub
lret
push
insb
into
lret
hlt
icebp
jae
out
cmp
fldenv
je
mov
femms
shlb
cmp
fbld
pop
daa
inc
pop
aas
cmp
cmp
sbb
mov
jne
mov
sbbl
rep
and
dec
test
mov
inc
cltd
lea
loopne
cmp
add
cmp
push
cmp
push
addb
test
jnp
insb
mov
jnp
movsl
addr16
pop
pop
test
dec
popf
ds
push
mov
xchg
adc
add
sub
xor
inc
push
sub
lret
sub
test
jae
sub
mov
lods
jo,pn
or
adc
fsubs
push
sbb
xchg
loopne
test
inc
dec
add
mov
or
or
dec
add
sbb
pop
dec
dec
and
dec
and
movsb
sbb
sub
inc
cltd
xchg
pop
xor
scas
add
xorl
stos
cmpsl
fnstenv
je
cmp
adc
sub
mov
pop
cs
in
inc
inc
dec
dec
xchg
lret
in
fs
pop
pop
push
cmpsb
jmp
lahf
adc
add
cmp
mov
add
andl
into
movsl
mov
sbb
jecxz
or
popf
add
pop
cli
xor
xor
add
bound
nop
jb
sbb
add
push
arpl
mov
andb
pop
mov
fiadds
test
ja
sbb
push
lret
inc
mov
and
call
mov
fsubrs
cmp
push
add
push
in
push
cmp
enter
dec
aaa
cmp
fcompl
addr16
sbb
cltd
sub
adc
aas
adc
push
cmc
sub
adc
xchg
xchg
test
xchg
sahf
jo
iret
addr16
insb
and
fnstsw
lret
or
push
sbb
pop
add
or
jle
add
inc
and
pop
inc
and
test
out
push
or
push
add
movlps
add
jbe
xchg
push
xchg
inc
dec
fidivl
jmp
repz
dec
jno
les
sbb
loopne
inc
out
repnz
xlat
and
mov
jle
js
in
out
or
andl
insb
adc
lret
mov
and
push
dec
and
xor
adcl
mov
xchg
inc
pop
add
scas
push
roll
out
rclb
mov
lds
cmp
mov
es
and
inc
mov
je
incb
jb
jge
das
cmc
xorl
pop
daa
cmp
push
std
jmp
push
popa
push
xor
aas
ljmp
fcos
aas
insl
jle
push
add
cmpl
jle
mov
push
inc
mov
or
jg
xor
pop
jl
movl
push
adc
ret
jb
inc
fcmovnb
push
jecxz
mov
add
aas
mov
inc
push
sbb
sub
ja
jb
outsb
cmp
inc
or
imul
pop
lds
add
xchg
pop
repnz
test
pop
adc
jl
dec
test
push
mov
and
xor
dec
pinsrw
push
rorl
mov
sub
sbb
addr16
js
jmp
nop
subb
dec
inc
sub
shrl
add
jmp
xlat
loope
push
pusha
ljmp
fcomps
jg
loopne
sub
dec
or
insl
adc
cmp
sub
insw
mov
inc
out
sub
or
dec
movsl
jmp
sbb
les
jae
inc
sbb
adc
clc
mulb
inc
movsb
popa
cli
outsb
push
cld
xlat
inc
sbb
adc
dec
inc
fstl
repnz
les
mov
ret
jmp
and
les
sub
mov
test
test
add
push
push
sub
dec
add
xchg
mov
mov
icebp
mov
pop
sar
nop
push
push
mov
sub
and
xchg
inc
das
sub
add
push
inc
subb
pop
and
enter
and
bound
pop
rcrl
mov
idiv
je
test
je
cs
xchg
nop
ret
push
push
xor
aas
and
cmp
push
cmp
push
movsl
or
sub
mov
jbe
xor
or
push
adcl
mov
nop
add
jb
fbstp
sub
shrb
and
adc
or
decl
aam
xor
sbb
pop
push
je
pop
cmp
inc
and
and
xor
push
add
dec
add
sub
vcvtps2pd
mov
inc
or
add
mov
repnz
sbb
bound
shl
rcl
add
lock
sarl
adc
inc
pushf
push
sub
dec
push
cmc
push
adc
dec
or
add
push
loopne
push
and
add
test
sbb
sbb
dec
adc
movsl
jecxz
xchg
add
orl
push
xor
aam
aad
and
xor
mov
xchg
cli
or
xor
loop
cwtl
sti
push
fwait
repz
adc
addr16
sub
jno
xchg
dec
jb,pt
xchg
push
pop
ret
loop
call
and
add
mov
inc
mull
je
add
mov
pop
aam
jb
js
push
cltd
push
sbb
mov
push
aad
xchg
xchg
andb
mov
ret
adc
mov
aas
push
xchg
dec
cmp
xchg
imul
push
mov
call
js
push
adc
and
adc
and
inc
cltd
push
sub
xor
mov
push
inc
cmp
outsl
add
icebp
movl
je
test
lea
push
pop
aad
js
aam
test
add
jl
inc
popl
inc
dec
push
loope
and
adc
mov
adc
mov
xchg
mov
xchg
mov
mov
jno
add
inc
dec
popf
jne
call
xor
sbb
push
shl
inc
out
aad
xor
and
and
dec
fstps
add
sub
xchg
bnd
sub
inc
aad
or
ret
mov
inc
cmp
or
lret
xchg
roll
pop
push
fiaddl
sub
pop
mov
pop
shlb
pop
push
xor
imul
pop
push
sbb
lds
and
rclb
and
data16
and
mov
shlb
push
lea
out
mov
or
add
dec
inc
mov
add
pop
add
mov
aad
pusha
push
jns
stos
xor
inc
fstpt
sbbl
insb
add
adc
idivl
leave
aaa
pop
cmp
mov
push
push
push
inc
int3
jl
adc
cmp
pop
sub
sbb
sub
xor
jne
ret
push
enter
push
mov
inc
pop
add
fs
lods
jo
sahf
andl
mov
xchg
inc
hlt
xchg
push
rolb
adc
out
jg
mov
inc
repz
push
adc
das
in
aas
push
xchg
add
repz
imul
jmp
push
ficomps
test
mov
outsl
lock
adc
fs
or
popf
imul
pop
ret
mov
scas
fs
add
roll
jmp
pop
cltd
sbb
dec
aam
lock
push
popa
cmpsl
inc
rclb
inc
in
adc
xchg
loope
daa
dec
pushf
mov
clc
sahf
fisttps
push
adc
add
loop
or
movsl
inc
push
adc
hlt
xor
xor
fwait
add
push
ljmp
add
in
sbb
or
mov
sbb
jg
dec
or
sub
int
push
cmp
in
xchg
fs
or
rcrb
adc
pop
mov
adc
icebp
mov
add
fnstcw
cmp
or
dec
jbe
popf
add
cs
pop
sbb
adc
imul
rorl
push
sub
pop
out
inc
sbb
ljmp
mov
inc
push
subb
adc
push
xchg
test
and
loop
cmp
dec
pop
cmp
fisubl
sub
pop
test
inc
lret
inc
popf
jne
and
dec
jbe
jne
aas
push
inc
xchg
xchg
mov
or
outsb
jmp
lea
hlt
and
pop
arpl
mov
mov
cmp
mov
cmpsl
sub
sarl
add
test
push
mov
testl
fcomps
pop
jb
mov
call
xchg
out
sarb
addb
loope
adc
inc
or
inc
xchg
push
insl
cwtl
xchg
inc
pusha
jmp
lret
sub
fstl
or
test
sbb
cli
aam
sub
adc
sbb
cmp
dec
mov
sahf
push
add
pop
xchg
ret
jl
mov
inc
push
call
fs
arpl
pop
ja
sarb
sbb
lcall
mov
mov
aad
xor
pushf
cld
mov
aaa
addl
loopne
mov
mov
insb
insb
sbb
cmc
iret
pop
mov
pop
ror
inc
or
pop
or
adc
or
push
rcl
inc
inc
nop
or
popa
adc
xor
loop
inc
inc
addr16
adc
sub
stos
fmull
icebp
daa
pop
push
icebp
jno
rclb
mov
pop
cmp
push
or
push
xchg
xor
and
adc
imul
pop
lret
scas
sub
jo
push
les
add
adc
clc
fsubs
xor
loope
sbb
jae
adc
sbb
mov
and
outsb
sbb
inc
pop
sub
mov
mov
push
mov
push
inc
xor
nop
xchg
mull
cmpsb
adc
fidivl
sub
cmp
push
cmp
dec
pop
cmpsl
sbb
rorb
xchg
and
cmpsb
mov
mov
ucomiss
cltd
mov
mov
in
movsb
jae
and
and
stos
inc
and
xchg
and
test
insb
or
jg
push
inc
jo
lahf
push
cmpsb
adc
xor
inc
fld
and
xor
xor
ficoms
bound
pop
add
pop
push
leave
pop
stos
add
clc
test
xchg
ret
push
les
leave
xchg
mov
xor
pusha
cltd
jmp
push
mov
cmp
dec
and
dec
sbb
add
ret
dec
push
sbb
push
cmc
xchg
imul
imul
lret
push
nop
leave
pusha
mov
stos
mov
cmp
icebp
shl
cmpb
xor
cmp
testb
lock
sbb
adc
clc
sbb
dec
imul
inc
sub
xor
or
stos
inc
cmp
sbb
bound
xor
faddp
adc
divl
jo
push
lock
or
mov
mov
addr16
sub
aas
addr16
aam
repz
fnstcw
ss
jp
addb
mov
pusha
rclb
sti
inc
push
daa
arpl
std
mov
cmp
cmp
sub
and
or
inc
pop
scas
push
xor
fimuls
dec
xchg
call
dec
sub
inc
xchg
adc
push
add
dec
sub
iret
jne
mov
xor
pushf
sbb
mov
sub
insl
mov
mov
decl
inc
xchg
jbe
in
lds
push
jmp
std
sbb
xor
in
adc
call
cwtl
imul
xacquire
fwait
imul
fsubrl
mov
ds
adc
into
cmp
adc
lods
inc
mov
and
insb
bound
hlt
ja
es
cwtl
push
xchg
shlb
insl
test
push
and
add
push
dec
repnz
loopne
cmp
add
sbb
aaa
mov
and
lea
jecxz
add
cld
inc
push
data16
cmpsl
dec
in
shr
out
cmpsb
push
xchg
cmp
into
scas
je
add
gs
lahf
mov
dec
or
popf
es
ret
int
cmp
clc
rolb
loopne
and
movlps
xchg
jecxz
pop
into
stc
push
add
outsl
das
jmp
mov
dec
mov
call
inc
push
pop
dec
rorl
xchg
dec
sarb
in
popa
pop
mov
in
push
jbe
in
dec
dec
inc
cmp
lds
sub
cmpsb
adc
sahf
mov
push
scas
cmc
dec
sbb
cli
test
adc
ror
pop
jg
enter
arpl
pop
test
cwtl
sti
push
cmp
mov
pop
sbb
dec
push
cmp
add
dec
mov
push
push
sbb
pop
xchg
fists
xor
add
inc
pop
test
inc
orl
cmpsb
dec
adc
orb
scas
mov
push
mov
adc
dec
jl
jp
pop
cmp
mov
or
mov
xor
push
loop
sub
mov
inc
pusha
notb
adc
add
loope
sarb
mov
cwtl
loope
sarb
mov
add
add
push
push
inc
and
dec
rcrl
lret
xor
push
lods
cmpl
dec
clc
push
push
cmp
outsb
popf
adc
outsl
mov
mov
imul
xorb
sub
sbb
adc
movsl
andb
cmp
push
sahf
pusha
sub
sub
stos
xchg
add
in
mov
xchg
push
jbe
xor
push
push
pop
add
cmp
mov
push
mov
xchg
fwait
gs
inc
push
adc
inc
sub
sti
mov
mov
sub
or
push
and
adc
fidivrl
sub
jno
sbb
inc
jno
cld
fiaddl
add
int
lods
sub
sbb
test
push
arpl
jb
inc
sti
or
gs
jge
or
pusha
add
movsl
out
xor
ljmp
mov
add
and
inc
mov
push
sbbb
mov
jne
stos
push
mov
jle
xor
adc
mov
jno
aad
lods
mov
push
scas
sub
push
test
movsl
inc
sbb
adc
push
mov
cmpsb
dec
xchg
arpl
insl
sub
adc
and
pop
mov
xor
roll
fwait
push
xor
pop
out
lret
mov
mov
jg
push
mov
push
inc
fists
or
add
ret
js
es
jne
cmp
xchg
fsubs
mov
adcl
fwait
inc
xor
or
cmp
popa
sub
and
dec
adc
pushf
ficoms
or
clc
sub
or
lret
or
cmp
ljmp
mov
inc
xchg
shlb
add
shlb
inc
push
push
mov
xor
nop
lds
loope
test
pop
sub
adc
repnz
push
add
pop
fcmovnb
shlb
or
add
into
outsb
rolb
out
xchg
int3
adc
sbb
inc
jecxz
addr16
cmpsl
and
fisttps
dec
test
dec
push
pop
xchg
xor
cmp
push
ds
add
sete
adc
push
or
mov
push
jmp
inc
jg
je
pop
cs
fs
test
jecxz
mov
in
mov
push
push
inc
push
xor
add
pop
xchg
jle
ljmp
xchg
cmp
stc
pushf
jmp
xchg
or
adc
ret
jl
mov
mov
out
sbb
je
add
jle
daa
add
sbb
mov
or
pop
lahf
xor
xchg
testl
cmpsb
add
and
out
push
jmp
mov
push
mov
pusha
mov
sub
jns
fwait
jg
or
add
add
xchg
push
push
mov
add
rorl
fdivr
iret
push
adc
mov
add
clc
es
lods
cs
or
pop
pop
ret
test
add
and
inc
imul
jo
jo
lahf
push
jg
enter
xchg
leave
and
xorl
lahf
test
sbb
add
inc
pop
mov
add
and
test
cmpsb
xor
or
and
lahf
xchg
mov
or
pop
shrl
cld
lahf
and
mov
ds
and
and
pop
and
mov
jg
fs
add
lods
imul
mov
aaa
les
xlat
nop
mov
in
add
inc
enter
and
mov
fistps
movsl
lea
mov
cld
cs
dec
cmp
push
push
or
pop
iret
iret
in
pusha
fs
movsl
lods
jo
add
jo
je,pt
pusha
cmp
js
jl
pop
or
shlb
dec
pop
movl
or
add
test
xor
xor
mov
movsl
sub
je
fstl
fisubs
pop
pusha
and
fs
gs
fs
xor
in
js
jne
sub
and
jl
sbb
mov
pop
cmpsb
adc
cmpb
jp
dec
dec
inc
push
ficompl
test
xor
movsl
sbb
and
mov
js,pt
roll
addl
pusha
popa
test
and
repz
inc
mov
and
sub
mov
jb
jne
dec
and
incl
inc
imul
or
cmp
ss
int
sar
dec
leave
fadd
or
xchg
int3
mov
ds
adc
pop
cwtl
ret
xchg
ss
cli
movsl
lods
push
enter
xchg
xchg
cli
jb
jl
and
jnp
cmp
or
lea
or
rorl
jo
fsts
or
and
xchg
outsl
mov
jp
lret
pop
addb
shll
mov
inc
xchg
xor
or
mov
aaa
xchg
test
pop
or
mov
out
filds
pop
aam
in
pop
sbb
daa
insl
cmp
ret
add
mov
std
sub
scas
sbb
adc
dec
add
sbb
rorb
jns,pt
out
sub
mov
mov
dec
or
xchg
sub
or
ljmp
mov
inc
mov
push
xchg
push
xor
dec
scas
fld
inc
xchg
lea
inc
mov
lcall
add
or
pop
and
or
or
mov
adc
xchg
cmpsl
xor
imul
or
lds
mov
hlt
mov
pusha
in
enter
cwtl
add
mov
shrb
addr16
jo
mov
mov
xchg
cmp
dec
ret
sbb
dec
sbb
push
sbb
xorl
pop
addb
rorb
ret
pusha
sbb
cmpsb
in
sub
outsl
push
push
fs
out
cltd
sahf
test
ret
mov
push
mov
push
ss
and
pop
pop
sahf
addr16
mov
push
pushf
shll
jns
nop
add
lar
sub
cmp
sbb
jo
push
dec
sub
inc
inc
adc
dec
and
cmp
push
cmp
push
mov
fcmovu
or
add
hlt
sbb
loop
or
jne
sub
fmuls
les
sbb
sub
or
std
mov
push
and
xchg
sarb
cmp
sub
pop
mov
mov
insl
jbe
fisubs
rorb
jl
dec
and
rcl
sbb
xchg
cmp
cs
or
sub
or
pop
fs
popf
imul
and
add
xor
push
outsb
cltd
jp
sub
aam
sti
mov
pop
imull
mov
sub
stos
in
xchg
xor
or
mov
mov
fildll
lock
scas
test
jle
and
cmpsl
loop
pop
daa
dec
add
add
cmp
push
cs
test
jge
or
and
mov
stos
fs
daa
pusha
pusha
jb
xor
cmp
cmp
mov
lcall
clc
mull
inc
inc
mov
push
jmp
loope
sub
xchg
add
std
in
je
fisubl
cmp
clc
or
jl
xchg
inc
std
adc
fistl
jno
cmp
bound
xchg
insb
jl
mov
rolb
sbb
sarl
adc
xchg
rorl
clc
mov
clc
push
mov
or
add
add
push
xor
outsb
sbb
mov
imul
add
dec
cmp
fprem
cmpsb
xchg
mov
xor
add
mov
mov
mov
push
push
sbb
sub
mov
add
adc
sbb
or
inc
sbb
or
test
out
andb
cs
dec
lret
enter
push
inc
rol
dec
pop
fstpt
jnp
lods
fimuls
mov
cmpsb
ret
add
fildll
gs
frstor
sub
ficomps
dec
fbld
icebp
jno
adc
cld
pusha
push
and
fisttps
out
sbb
dec
inc
add
xor
or
and
and
mov
mov
push
mov
jmp
cs
jg
shrl
and
loopne
insb
and
sbb
push
push
inc
popf
rorb
mov
jnp
imulb
mov
add
xchg
shlb
xchg
aad
loopne
cmpl
fldenv
add
mov
adc
push
les
cmpsl
push
push
filds
mov
fistpll
es
movsb
xchg
int3
hlt
xor
push
or
mov
ret
out
in
andb
test
and
push
jmp
fcomp
xchg
push
push
jmp
jb
sub
je
xor
push
pop
lret
sbb
push
cmc
inc
dec
ja
ret
and
lcall
inc
add
aam
aad
mov
sub
xor
mov
dec
mov
jl
mov
pushf
push
pop
cmp
dec
sub
call
inc
mov
in
test
xorb
push
data16
test
fisubrl
pop
roll
push
jo
fwait
jp
sub
mov
inc
inc
test
jle
in
aaa
add
shll
dec
jo
push
outsl
loop
pop
and
insl
pop
cmp
ljmp
aas
js
push
outsb
sub
cwtl
pusha
inc
js
jg
loope
push
fwait
jl
sbb
mov
ret
pop
sbb
imul
adcb
xor
fdivl
out
xchg
pusha
divl
sbb
mov
or
ficomps
aaa
addb
xlat
movsl
repz
nop
add
je
cmp
push
jl
xchg
mov
xchg
jle
arpl
sbb
pusha
adcl
sar
aaa
mov
add
sub
out
adc
loopne
popa
out
lea
cmp
jmp
mov
cmc
es
add
lea
pusha
jle
xchg
add
push
adc
mov
fisttpl
mov
and
mov
ja
xchg
cmp
flds
das
push
adc
or
outsl
dec
lret
lea
shl
loop
xor
jbe
sub
mov
ss
pop
adc
addb
or
inc
xchg
inc
jo
mov
xchg
rorb
mov
ret
xor
mov
add
movsl
xor
fisubrs
cmp
and
pushw
adc
push
cmp
stos
ljmp
xor
adc
inc
push
xor
or
std
add
icebp
cmp
arpl
add
xor
xor
push
lods
ss
push
pushf
shl
cmp
xor
dec
or
jg
test
jmp
and
jle
adc
aam
cmp
dec
jb
inc
js
mov
jmp
add
jbe
fsts
enter
fldt
xchg
shl
push
and
shl
test
push
jle
addb
adc
cmc
push
ljmp
jmp
push
call
push
lea
inc
mov
js
les
add
mov
sti
mov
fs
mov
add
pop
loop
cmpsl
cwtl
sub
movl
push
sub
scas
add
aas
incl
insb
test
dec
je
jnp
and
and
lods
lods
pop
fisubl
jns
and
mov
mov
mov
fistpll
js
inc
push
mov
jmp
add
jl
mov
sbb
pusha
test
pop
inc
rol
inc
rolb
mov
cltd
faddl
add
jno
fsubs
jg
mov
addl
insb
inc
push
lret
inc
filds
into
fcmovnb
or
push
xchg
fbld
pop
adc
push
lret
orb
dec
add
push
mov
mov
pusha
scas
mov
mov
scas
push
cmp
mov
mov
add
fisttps
mov
or
inc
or
popa
push
jb
lock
or
push
mov
mov
mov
mov
or
lods
cwtl
push
hlt
fsubl
or
out
cmpsb
clc
jns
cmp
pop
jle
mov
dec
mov
inc
jne
gs
cmpsb
adc
imul
dec
ljmp
adc
inc
decl
mov
mov
lods
clc
sarb
mov
into
mov
ffree
ficomps
loopne
dec
mov
rcr
cmp
repz
shll
fabs
jmp
icebp
cmp
mov
sbb
es
gs
pop
cmp
lods
movsb
aad
dec
push
cs
dec
fst
jbe
popa
or
xor
sar
sbb
mov
addb
inc
ret
inc
inc
jp
cmp
xor
inc
jbe
xchg
push
cmp
push
xor
inc
loope
xchg
ds
cmp
enter
push
nopl
rol
icebp
or
sub
lods
negb
mov
cmp
mov
adc
out
shll
or
mov
push
call
xchg
inc
xchg
mov
lcall
adc
xchg
jne
jbe
jle
flds
sub
pusha
pusha
jp
enter
push
push
imul
pop
cmp
pop
imul
push
fnstenv
xchg
rcrl
cwtl
inc
loopne
pop
dec
and
mov
add
cmp
mov
pop
mov
add
dec
pushf
lods
cmpsb
in
out
in
loop
dec
cmpsb
in
dec
and
sbbb
popf
inc
xchg
or
xor
ja
leave
xor
mov
jmp
leave
insb
gs
inc
xchg
xchg
push
jb
xchg
lods
jno
and
push
repnz
fnstcw
mov
inc
enter
leave
mov
and
inc
push
push
fwait
pop
faddl
clc
popf
and
lock
lcall
and
jbe
add
sbb
inc
mov
enter
add
add
enter
xor
inc
inc
dec
inc
enter
cmp
cmp
nop
and
add
test
pop
add
dec
leave
adc
pusha
fs
sarb
push
pop
xchg
cwtl
add
outsb
jp
jne
push
add
in
mov
xor
jne
or
repnz
fisubrl
or
rorl
mov
jo
adc
out
lcall
dec
popf
fcmove
repz
repz
es
pop
jno
cmpsl
stc
cmp
add
xor
out
lret
in
push
das
repz
repz
popa
jp
lods
cmpsl
stc
cmp
adc
sub
les
inc
fucomip
das
adc
and
pop
outsl
imulb
fisttpl
adc
adc
adc
adc
adc
adc
std
out
sbb
sbb
push
pop
and
add
pop
mov
pop
lea
test
and
inc
xor
jne
or
xor
pop
adc
outsl
cld
xchg
sub
in
push
sbb
mov
add
mov
push
loopne
push
in
sub
mov
mov
rorl
pcmpgtb
cmpsb
jmp
lret
xor
mov
or
int
clc
mov
mov
push
js
out
dec
jle
inc
je
adc
push
js
push
add
lea
push
push
lods
clc
sahf
jo
inc
lret
mov
push
clc
add
push
aas
imul
push
sub
sti
fs
dec
sub
sub
sbbl
sbb
adc
add
inc
rorb
pop
xor
add
js
shrb
adc
add
adc
clc
mov
xor
dec
lea
mov
push
add
add
xor
fcoml
movsl
sub
sub
mov
xor
xor
in
add
inc
in
mov
mov
jb
in
cwtl
in
add
paddusb
xchg
add
nop
dec
push
in
lock
xchg
ss
ficoms
sbb
push
xchg
in
ja
pop
jmp
pop
insb
sahf
mov
je
ret
jmp
push
push
enter
cmpb
dec
mov
ret
mov
fisubl
push
arpl
jle
out
pop
mov
mov
rorl
loope
insl
adc
insl
and
enter
jo
insb
add
out
adc
ret
out
loop
pminub
repz
jne
mov
out
cmp
out
sahf
mov
fdivrl
repz
dec
xchg
fsubr
cli
fmull
and
movlps
rcrb
push
push
xor
add
testl
test
xor
aas
hlt
cmp
scas
repnz
ja
ss
fiadds
add
xor
add
movsl
xchg
lret
andb
shl
iret
mov
jl
add
je
negb
jne
sahf
sub
mov
aaa
punpckldq
imul
add
jmp
mov
pop
push
clc
sub
ds
jmp
jns
pop
push
ficoms
add
mov
or
or
mov
cltd
push
add
jnp
add
pop
pop
fistpll
pop
ja
rclb
add
inc
inc
fmull
fcmovnbe
and
icebp
lcall
sub
pop
enter
push
les
mov
pop
pop
jae
xchg
xor
push
cmpsl
cmpsl
pusha
sbb
cmp
sbb
cld
ds
sub
das
xchg
in
jo
insb
xor
add
popa
fs
jp
in
dec
popf
push
pop
mov
loopne
lods
icebp
add
mov
push
or
mov
or
pop
sbb
mov
pop
cmp
cmp
sbb
andb
mov
add
mov
xor
pop
push
xor
dec
fcoml
push
shlb
adc
mov
loope
ss
iret
outsl
add
pop
repnz
xchg
add
or
andl
or
cmp
sub
or
xchg
push
xchg
or
repnz
pop
fwait
cld
es
xchg
out
dec
push
test
inc
xchg
pop
out
outsb
add
pop
or
pop
sub
jbe
outsb
lea
jl
or
or
push
addr16
int
stos
fld
les
or
movsl
imul
adc
add
sbb
fcompl
add
fwait
movsb
sbb
xchg
push
mov
leave
in
addl
push
jmp
and
push
pushf
leave
jmp
mov
dec
inc
sub
rorb
jl
rcrb
or
test
adc
xchg
mov
les
hlt
fwait
adc
and
sahf
lods
daa
push
pop
int3
xor
pusha
in
scas
popa
pop
add
fs
in
mov
mov
enter
pop
js
ret
push
cmp
out
mov
push
pusha
pop
and
pop
xchg
or
cmc
add
push
sbb
sub
loopne
adc
dec
repz
dec
adc
movlps
xor
fs
cmc
dec
pop
push
roll
pop
sbb
sub
adc
movsb
push
insb
cwtl
push
je
add
add
cmpb
mov
arpl
inc
mov
fs
and
aaa
adc
dec
dec
sbb
lea
mov
push
inc
cmpsb
cmp
ret
movsb
aas
xchg
iret
sarb
cld
imul
lock
mov
sahf
cmp
jne
lahf
adc
jne
adc
cmp
add
or
xchg
in
ret
rcrl
fcmovnb
push
or
inc
sub
add
pop
dec
mov
or
lea
mov
jo
jbe
push
fbstp
mov
mov
and
mov
mov
or
mov
jge
clc
aaa
xchg
inc
mull
jbe
cmp
xor
inc
fwait
mov
mov
cmpsl
mov
mov
mov
add
push
insl
mov
pusha
dec
sbb
dec
add
add
lods
pop
push
or
insl
outsl
fnsave
inc
and
push
test
scas
aas
mov
pushf
mov
add
sub
ret
xor
aaa
fistpl
aas
dec
jb
and
or
sbb
xor
dec
sbb
cmc
popa
loope
inc
push
inc
les
mov
xchg
lea
push
iret
loopne
xchg
shll
mov
mov
inc
sbb
enter
sbbl
sbb
lret
fwait
ja
ret
xchg
mov
pop
xor
dec
scas
imul
push
sub
scas
mov
pop
push
mov
inc
addb
mov
add
or
inc
sub
or
dec
bound
inc
sbb
or
cmp
add
or
inc
ret
lea
xor
ret
inc
dec
xchg
or
pushf
mov
fistps
loop
sbb
push
sub
pushf
adc
mov
jno
and
and
je
add
mov
push
push
jmp
pop
push
out
dec
mov
test
cmp
aas
jl
lods
adc
sub
push
xor
mov
inc
stos
dec
xor
lcall
add
ss
and
fcmovnbe
int3
test
or
push
fcomps
icebp
testb
or
xchg
rol
jle
xchg
mov
or
imul
pop
fists
test
or
loopne
add
jne
cmpb
pop
sub
popa
lea
add
pop
arpl
dec
repnz
jns
pop
bound
push
xchg
adc
dec
jmp
mov
push
sbb
or
lcall
push
ja
ret
dec
or
xchg
jb
push
pop
cmpsl
pop
popf
in
in
test
rcl
mov
pop
repz
adc
or
pop
cltd
dec
cmpsl
orb
icebp
ss
xchg
xchg
pop
add
in
add
add
cmp
mov
lock
cmp
adc
jp
inc
or
stc
fistpl
sbb
mov
mov
scas
add
iret
add
pop
xor
fcomps
dec
push
aas
sub
xor
mov
int3
lock
adc
cs
loope,pn
push
xlat
lret
push
push
cs
cmp
in
inc
xlat
jnp
das
lret
loope
jnp
adc
clc
xchg
sbb
notb
fmuls
adc
in
ja
dec
repz
jne
lock
add
adc
cmp
sub
movsb
push
and
or
mov
push
inc
xchg
adc
push
jl
outsb
xchg
xchg
js
nop
and
mov
xchg
pop
les
sub
dec
and
xor
int
sbb
adc
jecxz
xchg
and
cmp
cld
xchg
push
cmp
js
mov
push
scas
or
lds
mov
push
push
fcoms
xor
cs
and
fiadds
fisubl
mov
xor
insl
into
inc
mov
add
gs
mov
lea
nop
and
test
mov
outsb
add
dec
pop
sub
jmp
or
and
mov
or
inc
shll
leave
or
rcrl
add
outsb
lds
loopne
dec
mov
fs
les
xchg
insb
inc
mov
aad
jmp
sub
cmpsl
test
sub
jecxz
xchg
inc
push
dec
nop
testl
enter
inc
or
loopne
xor
rolb
xor
add
push
jo
inc
pop
ljmp
lock
xor
adc
lcall
shr
arpl
inc
scas
or
sarl
ret
cmp
test
ss
cmp
xchg
jb
mov
cmp
dec
flds
push
mov
mov
dec
add
cltd
xchg
cmp
popa
in
adc
xor
mov
dec
adc
xor
pop
dec
imul
push
pop
into
mov
pop
xor
cmpsb
fisubs
push
mov
mov
xchg
in
fadds
and
adc
rclb
test
mov
adc
mov
push
xchg
scas
add
cmp
mov
sbb
sahf
or
jle
push
push
xor
sub
ss
cmp
ljmp
adc
out
test
push
xor
push
pushf
add
xchg
push
pop
shr
popa
jne
aas
sbb
or
jae
add
sahf
test
or
xchg
sub
fnstcw
inc
out
or
ret
nop
lea
jbe
and
and
mov
out
xor
sub
sub
add
rorb
ret
flds
push
push
push
and
adc
or
push
inc
outsl
cld
and
int3
sbb
xchg
mov
je
add
subb
outsb
push
rorl
or
frstor
stos
add
outsl
jmp
mov
ret
dec
push
or
push
inc
jge
mov
test
inc
adc
sbb
or
sub
push
push
mov
xor
sbb
push
mov
xchg
or
nop
inc
outsb
pop
and
pop
jl
ret
call
inc
or
push
xchg
adc
adc
in
sub
sub
add
jnp
push
sbb
or
mov
dec
sub
jl
ljmp
pop
int
imul
adc
add
daa
lcall
xor
and
push
lret
or
lea
xorb
sub
mov
and
push
jo
add
push
outsl
mov
xchg
xor
das
iret
dec
pop
es
jle
sub
hlt
cmp
mov
jl
cmp
pop
out
or
xor
cwtl
xchg
cmp
inc
lods
or
inc
insb
or
or
add
fistpll
inc
jl
xchg
cmp
mov
jl
inc
mov
push
loope
iret
lods
cmpsl
cmp
dec
mov
xorb
sub
popa
add
test
dec
jo
jl
ljmp
dec
ja
or
pusha
sarb
pop
or
fcoml
sbb
and
or
sub
mov
popa
jnp
mov
popa
jle
sub
sub
add
jmp
rorl
jmp
push
sti
dec
dec
dec
adc
int3
cmp
ret
dec
int3
mov
jecxz
and
cmp
enter
xchg
sbb
and
mov
jo
xchg
adc
pop
and
mov
adc
test
popa
sub
rcr
nop
dec
and
sub
mov
jno
test
adc
add
push
das
adc
test
repz
or
test
dec
sbb
xchg
cmp
pop
adc
jne
hlt
out
outsb
sarl
sahf
inc
fwait
jmp
dec
scas
and
leave
add
enter
std
dec
xor
rcll
cmp
mov
ret
ret
add
pop
test
ljmp
rorb
lods
lds
mov
sti
es
add
and
inc
or
cmp
inc
dec
sub
pop
inc
mov
add
dec
push
test
imul
sar
push
adc
cwtl
in
les
mov
scas
mov
mov
sub
push
mov
lret
cwtl
push
cmp
inc
jp
cmp
cmp
loopne
adc
aas
jge
movsb
cmp
pop
pusha
jno
xor
mov
and
sub
and
rolb
dec
in
fisttps
fs
adc
add
cmp
inc
xor
test
add
sub
or
jmp
scas
mov
push
imul
mov
add
lcall
ds
aas
jnp
add
cmp
pushf
adc
jbe
dec
push
loope
fldcw
popf
xchg
pop
dec
pop
cmp
popa
xor
push
mov
mov
nop
push
sbb
push
pop
pop
inc
and
cmp
push
cmpsl
mov
or
dec
inc
xchg
sbb
test
stos
adcb
pop
cmpsb
jns
pop
lret
sbb
push
outsb
dec
dec
or
inc
push
movb
push
mov
jne
shrb
int3
sub
cli
mov
push
mov
add
sbb
or
and
sub
xchg
xor
and
push
adc
shrl
adc
movsl
pusha
jno
push
or
and
stos
sbb
mov
and
addb
inc
pusha
mov
inc
inc
or
sahf
call
or
int
mov
inc
fs
sbb
out
lods
fcompl
push
push
push
das
or
xor
fdivp
add
add
insb
jmp
jl
or
lea
cltd
add
inc
aaa
fimuls
and
mov
and
add
into
push
adc
fldt
mov
push
movsb
inc
iret
mov
jno
push
push
and
pusha
enter
inc
inc
mov
or
push
rcrb
std
jl
and
add
push
push
dec
and
movl
popa
pop
and
test
inc
add
lahf
ja
and
push
or
push
adc
fadds
xchg
movsb
mov
add
push
pop
arpl
mov
jle
xchg
xorb
mov
sub
xlat
xchg
xchg
dec
in
inc
mov
sub
ljmp
inc
mov
sub
mov
cmp
push
roll
inc
inc
cmpsb
fsubs
nop
inc
cs
adc
adc
sub
xor
adcb
sbb
repnz
je
addb
out
xor
sbbb
out
mov
mov
insl
inc
rorl
push
data16
dec
pop
gs
test
push
dec
inc
sbb
xorl
adc
cmp
pop
hlt
clc
xchg
push
fildll
les
pusha
pop
xor
xchg
xchg
xchg
stos
mov
push
mov
dec
adc
icebp
stc
and
and
xor
ret
nop
out
mov
xor
cmpsl
inc
test
fs
xchg
jno
sbb
enter
sbb
sbb
adc
adc
scas
jle
push
push
inc
lcall
xor
iret
imul
jecxz
inc
sbb
stc
push
push
mov
adc
xchg
leave
or
pop
adc
xor
jnp
and
popa
int3
int
pop
sarb
sub
jmp
inc
and
mov
andl
fstpl
add
outsb
and
adc
enter
jo
in
stos
xchg
push
dec
js
or
pop
fdivr
outsb
je
add
push
push
lret
js
sub
jns
push
inc
sbb
in
dec
pop
movsl
cmc
jbe
add
test
inc
xchg
inc
push
inc
and
mov
pusha
mov
xchg
jg
cmpsl
or
es
xchg
or
xchg
ljmp
inc
ljmp
or
jbe
xor
jnp
jae
jne
lret
add
mov
and
cmp
cmpsb
push
mov
adc
and
jge
add
pusha
rcl
sbb
add
adcl
imul
adc
dec
sbb
adc
pop
push
mov
sub
inc
xor
repnz
js
fs
adc
push
mov
mov
push
imul
cmp
cmp
and
test
mov
jle
push
dec
lds
movsl
mov
cs
pop
lods
fmull
pop
inc
aam
push
or
or
add
fisttpll
xchg
aam
xchg
cwtl
shl
sarb
or
pop
mov
jmp
test
test
xchg
fcom
push
dec
popf
out
lea
mulb
das
cmp
in
clc
mov
lret
push
dec
or
dec
mov
cmpb
jae
jp
loopne
push
testb
and
cmpl
jg
push
jmp
loopne
mov
ficoml
icebp
movb
inc
pop
pushf
jae
xchg
mov
add
or
xchg
push
enter
mov
pusha
and
enter
or
sbb
dec
decl
test
push
js
cmp
mov
cmp
or
xor
mov
or
mov
sub
arpl
pop
xchg
aaa
xchg
ficomps
xlat
mov
rolb
add
xor
add
cltd
and
insl
cltd
fcmovb
mov
clc
call
mov
xchg
out
adc
js
inc
dec
in
sub
push
js
cmpsl
repnz
inc
add
stc
into
ret
inc
fistpll
adc
jb
push
and
jno
cwtl
push
and
sbb
fdivrs
and
push
xchg
rclb
imul
push
and
xchg
push
andb
jbe
movb
nop
imul
sahf
dec
cwtl
jnp
jne
pop
out
test
push
mov
or
xchg
xor
jmp
inc
sbb
das
gs
insb
push
push
mov
in
gs
pop
insb
loop
pusha
lock
arpl
pushf
and
inc
cmp
xchg
mov
xlat
sub
les
push
je,pn
mov
inc
sub
int
movsl
fnstsw
jne
fldt
lds
movsb
loop
pop
adc
shl
cltd
lock
inc
or
popa
popa
lahf
pop
addr16
sub
mov
inc
lods
mov
cwtl
sbb
pop
sbb
inc
jb
push
add
enter
xchg
mov
arpl
add
add
pop
mov
les
addr16
mov
aam
push
jl
shrb
jns
sahf
inc
int3
xor
dec
popa
ret
push
mov
cmpsl
pop
cmp
fdivrp
mov
das
mov
add
aaa
outsb
pop
cmp
popa
pushf
sub
int3
les
scas
rolb
sbb
push
jle
pusha
loope
loope
dec
jae
lock
xchg
mov
pop
outsl
ja
add
inc
push
cmp
jl
into
mov
or
stos
cmp
cmp
mov
lret
pushf
pop
xchg
push
sbb
xor
ljmp
mov
test
mov
add
stos
test
sti
ret
adc
jecxz
add
push
repnz
movsl
mov
mov
adc
and
sub
pop
xor
popf
jge
mov
hlt
cli
imul
ss
xchg
push
lds
sub
lea
dec
or
sub
push
popa
push
daa
aam
inc
dec
push
in
xor
adc
nop
shlb
jnp
mov
movsb
popa
in
mov
pop
daa
gs
add
and
cmp
inc
imull
jnp
pop
mov
and
sub
push
push
pop
lock
sahf
test
or
pusha
ret
fimull
test
orl
rclb
lock
dec
xchg
inc
jl
mov
lcall
dec
pop
jb
icebp
push
sbb
inc
jl
dec
xchg
add
inc
push
sbb
mov
popa
dec
jo
and
sbb
add
test
mov
push
shrb
out
add
inc
xor
ret
mov
add
xchg
xorl
add
lahf
jo
sub
scas
jg
ret
cmp
dec
ret
mov
cmpsb
movsl
pop
cmp
rorb
sbb
cmpl
and
or
push
or
aam
lcall
inc
inc
lret
inc
iret
pop
lret
add
xorb
dec
xchg
xchg
ret
fucomip
clc
push
test
scas
push
sub
dec
xor
sub
cltd
dec
mov
push
dec
push
rorl
or
rorl
push
adcl
imul
movsb
rol
mov
push
addr16
dec
stos
test
fadds
daa
push
inc
insl
adc
adc
xlat
jmp
mov
out
xor
push
pop
in
dec
sahf
mov
pop
lcall
mov
stos
stos
lahf
adc
aad
or
xor
adc
inc
inc
sub
test
push
daa
fstl
push
push
lods
mov
push
xchg
popa
in
cs
push
adc
and
mov
inc
inc
test
push
dec
push
adc
xor
test
xor
and
mov
jmp
add
dec
loopne
ret
rorl
stos
sub
pop
outsb
daa
mov
sub
test
in
push
sahf
add
dec
or
punpcklbw
push
adc
xchg
pop
call
addl
dec
mov
orb
mov
lret
adc
inc
cli
add
pusha
mov
lds
push
lods
imul
sub
adc
jns
pop
xor
pop
pop
dec
sub
inc
ret
xor
dec
sub
push
call
cmpb
fildll
add
or
pop
inc
fldl
jo
dec
sahf
std
jne
cmp
cmp
test
jne
popa
mov
iret
insl
sbb
fisttpll
cmp
dec
xchg
cmp
insb
je
in
add
or
flds
cltd
dec
or
dec
or
mov
andl
push
push
inc
icebp
sub
xchg
push
push
cmp
mov
mov
cmpsl
fdivl
pop
xor
les
lock
cmp
dec
or
sbb
cmp
shr
in
nop
fisubrl
mov
push
sbb
loope
and
jne
mov
sbb
mov
js
push
push
mov
mov
ja
fildll
or
adcb
les
mov
shlb
push
jne
pusha
fdivl
lods
outsl
pop
test
dec
stos
sbb
cmp
dec
fadds
or
lcall
push
movb
and
inc
add
or
dec
loope
xchg
aaa
jns
and
sub
jnp
push
adc
sub
dec
dec
dec
cmp
imul
adc
jl
sub
movsl
inc
fld1
in
js
xchg
ja
push
scas
adc
pop
adc
adc
int
mov
xchg
add
mov
dec
and
sbb
pushf
xchg
pop
in
push
push
sbb
pop
dec
pop
jp
fsts
push
sbb
mov
sbb
dec
std
ret
dec
push
push
pop
jg
xchg
inc
jge
cli
insb
jle
jp
xchg
cli
add
dec
xchg
mov
push
cmp
inc
outsl
adc
enter
pop
sbb
cmpsl
test
mov
adc
xlat
es
inc
dec
or
pop
sbb
pusha
jl
xchg
or
daa
xor
pop
mov
pop
scas
adc
jnp
lods
cmp
push
mov
push
rorl
shrl
in
sahf
push
and
xchg
lret
scas
in
ds
adc
mov
adc
inc
and
sbb
push
mov
das
adc
dec
loopne
cs
lds
fdivrl
xor
push
jp
cld
sub
pop
jle
cmp
test
iret
jl
gs
cmp
rorl
push
hlt
push
dec
mov
jns
call
enter
push
mov
adc
shlb
add
sbb
insl
ss
xor
add
xchg
adc
addb
adcb
sti
and
lea
jns
xchg
and
push
push
cmp
incb
int
mov
incl
inc
imul
xchg
mov
jae
into
clc
adc
dec
rep
outsl
bound
sbb
fists
push
loop
jne
mov
bnd
stos
add
pop
lds
xor
push
add
push
push
mov
xor
aaa
or
add
sbb
dec
scas
mov
ss
testb
cmc
push
jne
mov
dec
inc
sbb
adc
jp
stos
shll
ret
mov
dec
mov
ret
sub
adc
cmp
loopne
nop
push
or
sub
mov
cs
inc
lods
and
add
pusha
arpl
add
sbb
sbb
inc
inc
add
iret
jae
sbb
add
xor
iret
inc
xor
and
fcomps
sbb
jne
xchg
mov
cmp
shll
add
adcb
adc
xchg
or
dec
push
daa
and
mov
xor
jge
frstor
scas
test
lret
sbb
adc
pusha
dec
pop
clc
bound
in
sbb
sub
add
addr16
in
aaa
shlb
push
sub
les
add
add
mov
iret
mov
sti
xor
pop
or
push
xchg
int
popa
rcll
fildl
in
or
push
adc
adcl
jl
mov
mov
and
addr16
mov
int
add
andb
xchg
mov
xchg
movd
ret
adc
loopne
xor
xchg
insb
cmp
dec
xlat
imul
bound
xor
outsb
test
cmp
call
inc
push
roll
mov
adc
sbb
mov
in
pop
pushf
clc
rorl
add
rcll
lahf
xor
or
add
in
add
sbb
add
or
push
inc
sub
mov
std
sub
inc
cmp
pusha
sahf
inc
in
dec
and
mov
inc
sub
stc
add
and
or
jmp
fildll
scas
cmpsb
pop
sub
and
mov
jb
stos
push
cmp
je
pop
cmp
inc
mov
mov
xor
pushf
lret
jbe
insl
xchg
mov
xor
mov
dec
or
js
mov
pusha
mov
cmp
pusha
inc
out
mov
adc
loope
pop
mov
mov
adc
mov
jecxz
js
cmp
pop
push
aam
test
push
fistpll
xor
and
mov
dec
adc
pop
mov
cmp
jle
shrb
or
subb
pop
jl
pop
or
cmpsl
adc
push
sbb
cltd
aas
lock
mov
add
mov
cli
xchg
inc
adc
pop
ljmp
das
xchg
je
inc
cld
push
lods
mov
adc
cmp
inc
jl
push
xor
push
inc
lods
fwait
stos
das
cmpb
je
adc
mov
dec
call
xor
ja
fadd
ljmp
mov
sbb
jne
inc
movsb
push
fsubl
stos
jnp
test
inc
and
loopne
aam
aas
mov
lods
or
les
and
mov
sub
cwtl
push
sti
mov
xchg
push
inc
cwtl
cwtl
inc
std
mov
orl
inc
mov
ret
push
mov
and
push
mov
mov
mov
inc
popa
mov
xchg
test
push
rorb
inc
mov
mov
shll
add
add
fists
pop
lahf
lods
pop
mov
orb
cmpsl
adc
sbb
pop
loope
aad
pop
dec
jl
ja
movsb
dec
daa
mov
lea
add
jne
sbb
pop
sub
stos
cmp
sbbl
repnz
xor
or
fwait
sbb
lahf
loopne
push
xchg
xor
iret
sbb
sbb
xor
mov
loope
inc
rorl
dec
sbb
mov
jecxz
sbb
aad
adc
iret
jmp
ret
fmuls
cmp
cld
in
cld
inc
sub
sbb
bound
add
aaa
or
enter
cmp
pop
or
pop
mov
je
and
lods
sub
test
scas
arpl
popf
cltd
lahf
adc
push
pop
xchg
lahf
dec
pop
ljmp
or
add
outsb
test
fadds
cmp
rclb
inc
ds
andb
add
les
pusha
sbb
imul
pushf
xor
push
push
and
jmp
sti
into
aas
sub
push
test
dec
sbb
adc
ret
mov
adc
and
out
mov
mov
addb
xchg
movsb
jl
test
lea
pop
lret
aam
xchg
rorb
push
ja
cmp
dec
gs
xchg
adc
lods
adcl
and
movsl
xor
or
dec
and
popa
iret
hlt
push
cli
iret
dec
inc
js
pop
inc
sarl
fcomps
lods
cmp
rcl
inc
push
adcb
xor
int3
xchg
call
mov
add
push
dec
sbb
and
loop
add
adc
inc
mov
xor
push
pusha
jno
push
mov
test
xor
fcmovne
and
cmpsl
and
test
xor
push
add
xor
das
cmp
std
mov
pushf
sub
cmp
add
pop
adc
cwtl
jb
cmp
bound
jl
lret
add
mov
dec
xor
sbbl
mov
adc
out
inc
mov
jecxz
mov
sub
push
xchg
es
lret
loopne
sub
mov
push
jno
or
push
xor
adc
mov
jae
rclb
leave
and
pusha
inc
inc
lods
mov
sub
fmull
sub
or
push
rorb
sub
or
push
mov
lods
push
imul
inc
pusha
ror
fs
mov
mov
sbb
sub
and
fs
pop
sbb
cmc
shlb
lds
mov
adc
pop
push
mov
xchg
adc
push
adc
test
in
cmp
sub
dec
negb
sbb
pushf
aam
xchg
pop
add
sbb
push
arpl
and
sub
imul
or
dec
adcl
je
jl
mov
ficoms
movsb
test
mov
imul
dec
jp
icebp
scas
pop
xor
pop
and
rcrb
enter
sub
stc
push
shrb
cltd
mov
ret
cwtl
ljmp
cmpsb
ret
and
dec
jnp
jno
ficomps
dec
cmpsl
add
rcrb
popl
jecxz
sbb
jns
xchg
xor
or
cli
inc
mov
stos
add
adc
add
sbb
dec
xchg
lods
and
dec
add
test
mov
loopne
xchg
jle
pushf
int3
add
push
cmp
inc
push
loopne
pop
push
push
je
cmp
add
inc
dec
jl
mov
pop
add
or
push
clc
cmpsb
mov
or
dec
xchg
cmpsl
pop
sbb
ds
push
add
dec
lcall
frstor
jno
imul
fcmovbe
movsl
test
xorb
cli
xor
pushf
push
enter
xchg
mov
lret
cwtl
aam
dec
ret
adc
shrb
sbb
pop
add
pop
pop
pusha
push
rcrl
pop
sub
mov
or
inc
or
push
call
js
sub
push
jne
pop
jl
ds
lds
pop
sbb
cmpps
ret
xchg
cmp
outsb
xor
push
insb
insl
add
cmp
push
rolb
orb
dec
xor
add
mov
mov
lock
sbb
sbb
rolb
aas
adc
inc
cmp
fistpl
lcall
bound
lea
mov
mov
push
dec
mov
mov
adc
mov
popf
les
xchg
mov
mov
or
xorl
inc
insl
fnstenv
push
inc
pop
jl
push
and
add
jbe
in
pop
sbb
xor
mov
ljmp
aad
mov
sbb
or
outsb
call
push
push
cmc
rcl
adc
or
sbb
xchg
pmulhuw
jg
jbe
rol
push
sbb
in
or
stos
test
pop
inc
add
inc
adc
and
clc
insl
movb
sbb
mov
push
lods
sub
mov
inc
stos
xchg
sbb
sub
pop
test
mov
andl
cmp
fldl
cmp
add
sub
test
dec
pop
add
les
scas
pop
cmpsl
adc
cmpsb
or
and
dec
jns
arpl
lock
pusha
mov
xor
shlb
test
movb
loopne
push
pop
sbb
jge
shlb
lock
insb
add
sub
xor
xchg
inc
arpl
xchg
inc
and
mov
rclb
and
cli
daa
inc
sbb
std
push
jmp
mov
ficompl
mov
adc
push
xchg
jns
lock
dec
dec
insb
xor
lea
lock
movsl
mov
dec
fmuls
in
xchg
mov
andb
mov
jno
add
xor
out
outsl
or
shrb
mov
stos
adc
in
adc
dec
pop
sub
jne
shrl
outsl
stc
cmp
sti
sub
push
pop
xchg
inc
fcmovne
rclb
adc
inc
or
push
cmp
aaa
push
lock
pusha
loopne
jge
adc
cltd
stos
subb
pop
inc
xchg
inc
cld
adc
push
push
mov
cmp
mov
test
or
sub
mov
push
push
js
fidivl
sbb
jmp
inc
xor
xchg
adc
inc
pop
jmp
sub
and
mov
addr16
cwtl
leave
jle
or
pop
push
jle
mov
pusha
or
xchg
xchg
xor
cmp
pop
bnd
shl
pop
push
es
vmovsd
push
out
cs
mov
dec
loop
test
mov
mov
xor
sub
and
adc
in
dec
inc
adc
rorl
loopne
sbb
mov
xor
inc
cmp
inc
cmpsb
mov
dec
es
icebp
adcb
cmp
xor
dec
push
sbb
jo
sbb
decb
rolb
dec
and
lea
imul
add
inc
xor
push
fs
sub
or
mov
aaa
cmpsb
outsl
rcl
imul
inc
mov
rclb
and
call
stc
sub
xchg
fmuls
scas
push
xchg
xor
dec
inc
xchg
sbb
inc
outsl
fisttpl
cmovno
cmp
push
lods
pop
push
dec
fwait
dec
popf
push
xor
nop
add
or
mov
mov
lea
mov
je
imul
adc
mov
sub
cwtl
and
imul
sub
adc
clc
or
adc
ret
daa
adcb
add
and
out
xchg
mov
int
cltd
xchg
scas
push
push
pop
stos
test
mov
icebp
in
icebp
mov
adc
xchg
cmp
je
mov
clc
pcmpgtb
lds
sub
push
daa
sbb
mov
sbb
scas
cmp
inc
sub
mov
mov
stc
loopne
mov
push
rclb
rolb
sarb
push
xchg
xor
je
cmp
out
and
je
xchg
mov
push
test
or
iret
ja
and
pop
adc
rorl
sub
jp
cli
test
adc
or
leave
add
cld
int3
inc
and
add
and
xor
mov
out
or
add
cmp
sub
nop
mov
mov
cmp
sub
aaa
insb
shrl
in
add
adc
jns
stos
jnp
push
xchg
scas
sbb
cmc
xchg
jmp
sub
xor
in
or
push
mov
and
ss
sbb
add
loop
push
jbe
or
mov
inc
inc
mov
xchg
or
jecxz
shrl
pop
adc
cld
movl
mov
push
mov
imul
mov
mov
dec
add
add
xor
xor
xor
sbb
or
inc
jl
scas
lods
cwtl
cmp
inc
cmc
sbb
cmp
out
dec
sbb
dec
add
orl
mov
sbb
mov
adc
and
jno
mov
sub
sbb
sbb
push
xchg
jne
pusha
add
ret
xchg
int3
sbb
sbb
or
hlt
adcb
dec
xor
xchg
movsb
ret
push
sub
dec
add
rorl
movb
jmp
push
push
jmp
loop
inc
inc
add
dec
pop
shlb
sti
jne
or
test
xor
add
adc
dec
and
jl
lret
add
int3
mov
inc
or
and
sub
iret
add
popf
push
pop
test
loopne
pop
jo
mov
jo
cmc
mov
popf
inc
push
push
mov
fldl
movsb
xor
inc
inc
mov
rorl
jne
shlb
int3
push
push
ret
or
sarb
jmp
inc
js
xor
dec
mov
inc
stc
insl
int
sub
cmp
sarb
mov
push
and
std
insl
aaa
or
test
jmp
add
jbe
push
daa
adc
dec
xchg
adc
mov
leave
pushf
add
push
call
push
add
or
fistps
push
clc
cmp
xor
sbb
push
int3
inc
sbb
aas
mov
or
sbb
jmp
add
mov
xor
xchg
pop
fstps
cmc
or
js
push
sahf
add
scas
mov
shl
mov
ret
lahf
leave
xor
cmp
and
lods
cmp
jg
nop
mov
add
push
mov
enter
sub
mov
daa
movl
sub
and
cld
or
adc
inc
pop
daa
fdivrl
adc
push
ds
fs
add
wbinvd
or
push
cmp
pop
jae
xor
in
mov
xchg
mov
and
dec
dec
xchg
test
jmp
enter
sub
pop
and
add
cli
mov
add
shrb
call
inc
or
shll
sbb
add
int
test
aas
or
fldl
adcb
leave
xchg
sub
pop
dec
mov
jl
pusha
sbb
shll
hlt
and
or
dec
pop
inc
mov
movb
sub
mov
call
jmp
or
add
adc
fdivl
adc
inc
adc
test
addl
es
pop
or
dec
inc
add
ret
rorb
cmp
dec
pop
or
loopne
gs
notl
lea
cmpl
add
push
sbb
lcall
sub
in
adc
xor
nop
test
xchg
roll
test
mov
add
std
xchg
or
sbb
inc
sbb
dec
push
push
add
aaa
sbb
lock
and
stc
adc
sbb
dec
cmp
add
add
adc
xor
fs
or
sahf
jmp
scas
movsb
popa
dec
dec
pop
incb
movsb
sbb
add
sbb
insb
add
sbb
add
sbb
dec
enter
dec
jb
pusha
and
pusha
pop
sbb
insl
push
push
sbb
sti
imul
push
ljmp
push
mov
pop
sbb
xchg
imul
pop
and
push
xchg
xor
cmp
ret
jl
inc
jmp
or
xchg
dec
or
gs
cld
bound
or
xor
xchg
hlt
or
inc
pop
and
mov
subb
adc
dec
popl
pusha
notl
push
xor
jle
outsb
nop
mov
ret
and
cmpsb
insl
pop
pop
test
jo
movsl
mov
sub
lahf
add
or
cmpsb
movsl
and
xor
inc
sub
jmp
cmp
xor
das
test
or
or
ret
out
jae
xchg
adc
adc
inc
fs
lods
dec
jp
xchg
popf
dec
push
sbb
dec
sub
and
ljmp
outsb
push
mov
push
popf
pop
popa
add
lods
divl
test
push
jo
add
int3
jge
jae
aaa
or
cli
mov
scas
clc
cmp
jge
pop
push
or
je
popf
ficoms
fadds
pusha
pop
movsb
nop
push
jle
mov
test
repz
adcb
lods
push
sbb
add
xor
sbb
fcmovu
xchg
mov
in
fsts
lods
adc
or
scas
mov
push
pop
imul
or
test
jge
and
pop
pop
inc
dec
and
sub
loope
ds
adc
imul
mov
xlat
jp
test
xor
inc
push
xor
push
ds
cmp
adcb
and
push
push
sub
insl
in
jle
jmp
inc
adc
lahf
pop
mov
test
xchg
shll
push
sub
inc
mov
or
pop
cmp
bound
loop
arpl
adc
pushf
push
pop
out
sbb
mov
bound
sbb
fildll
and
and
pavgw
xchg
pop
and
cmpsl
sub
aad
inc
or
push
mov
and
mov
mov
stc
jmp
add
push
mov
idivb
add
dec
sub
push
mov
push
cwtl
nop
mov
mov
add
nop
mov
or
lods
mov
rorb
or
mov
sbb
xchg
mov
add
mov
cwtl
cmp
mov
jbe
or
push
or
dec
dec
add
or
sbb
and
divl
enter
sub
arpl
sbb
dec
adc
add
xchg
jns
sbb
adc
pusha
or
loop
lods
xchg
mov
je
rol
rcll
dec
movsl
fwait
ja
push
sub
rolb
add
movsl
test
pop
pop
dec
push
imul
cmpsb
rclb
add
add
xchg
push
sub
push
pop
imul
or
cmp
arpl
mov
pop
pop
pop
inc
repz
ret
or
lcall
add
shll
aam
out
or
pop
movsb
inc
cmp
xor
imul
test
jg
mov
aaa
sub
push
lock
and
aas
xchg
mov
pop
aaa
lods
pop
jb
lods
sbb
call
pop
scas
jl
mov
push
dec
xor
adc
mov
push
sbb
fsubl
fadd
mov
lahf
jo
jno
fisttps
mov
add
aas
pop
or
mov
sbb
sub
fstpt
push
es
xchg
inc
add
sub
inc
push
nop
clc
push
lods
sbb
shll
cmpsl
mov
push
pushf
jae
cmp
test
test
sub
nop
sub
and
insb
movsl
mov
sub
icebp
jge
jne
jb
sbb
mov
hlt
arpl
mov
inc
sbb
jo
dec
mov
push
lods
cmp
sbb
cltd
cltd
jmp
cltd
push
loopne
and
mov
aaa
dec
outsb
sub
adc
add
and
pop
popf
shlb
rorb
cmp
ret
jmp
pop
sbb
sub
dec
loop
sbb
leave
dec
lahf
lret
movsl
xchg
xor
or
jae
lahf
mov
dec
pop
push
adc
jecxz
jl
mov
push
iret
dec
or
dec
jo
clc
jbe
xchg
xchg
dec
push
inc
jae
std
orb
dec
jae
subb
xchg
jnp
fmulp
jne
inc
push
inc
jg
push
sub
jo
xor
push
pop
lahf
jmp
rclb
popf
test
push
ror
and
cs
pop
enter
mov
cmp
add
and
adc
pushf
push
rcr
add
cmp
daa
test
push
dec
and
xor
repnz
loopne
sbb
enter
dec
popa
gs
or
fwait
or
jno
inc
adc
pop
lds
movsb
and
and
bound
adc
lods
inc
jbe
mov
jae
inc
mov
jns
rorb
cmp
nop
jl
icebp
dec
push
add
and
or
enter
cmpsl
sbb
sub
and
pusha
in
sbb
popf
movsb
xor
out
clc
add
adc
or
movl
add
lds
xor
or
mov
ret
mov
pusha
call
or
adc
ffreep
jbe
es
sbb
adc
arpl
cmp
pushf
cmp
push
inc
xchg
dec
dec
lret
ficompl
js
addr16
dec
sub
and
mov
xor
pop
cmp
add
inc
sbb
xchg
jge
push
add
repz
pushf
call
test
or
add
rolb
int
cmp
sbb
push
push
pusha
add
jl
xor
mov
xchg
adc
mov
jle
add
add
sbb
sti
dec
lret
sbb
ljmp
pop
jo
sbb
rclb
jne
out
insb
mov
sbbb
adc
push
dec
adc
out
test
jnp
sbb
adc
rorb
or
iret
inc
push
jne
sub
add
mov
nop
dec
jecxz
mov
scas
and
pop
outsb
sub
xchg
sbb
rolb
dec
mov
or
inc
xor
int
adc
xor
push
repnz
imul
test
adcl
add
add
cltd
out
xor
cmpsb
fwait
int
mov
cmp
xor
enter
xchg
outsl
xchg
addr16
adc
add
pop
and
and
test
addl
sbb
sahf
add
imul
and
push
psrld
loopne
std
inc
sbb
xor
xor
ljmp
push
imul
jns
lods
push
push
rcll
nop
jae
xchg
inc
sub
mov
xchg
negl
and
dec
xchg
mov
lcall
dec
cmp
sub
mov
nop
std
or
lods
mov
inc
jge
imul
cld
adc
sbb
mulb
xor
cwtl
push
xor
add
out
sub
adc
fmuls
aad
adc
mov
clc
sub
inc
add
mov
outsb
add
xchg
xchg
aas
in
sbb
inc
adc
mov
and
ret
mov
jns
xor
subl
sbb
pop
push
mov
pop
add
push
cmp
add
adc
xor
xor
inc
lods
jns
adc
adc
cmpsb
add
and
sub
mov
roll
stos
adc
in
or
scas
jno
add
add
xor
xchg
push
xor
dec
int3
or
enter
inc
sub
movsl
scas
push
mov
shlb
test
sbb
adc
cltd
enter
pop
mov
sub
ja
and
cmp
insb
or
arpl
pop
imul
cltd
sbb
sbb
incb
cmovs
or
xor
or
pop
mov
xor
cli
push
adc
and
ja
fisubrl
stc
push
or
push
adc
test
sub
idivl
push
test
adc
ss
sbb
push
xor
shll
pop
adc
or
movsl
adc
mov
mov
push
es
xlat
mov
and
inc
push
xor
das
jne
shlb
and
das
jmp
mov
adc
shlb
ret
sbb
mov
xchg
push
aaa
jg
cmp
lcall
lcall
lods
push
mov
jmp
repnz
mov
es
sub
dec
sbb
ja
or
pop
dec
cmp
mov
movsb
lcall
push
adc
loop
add
inc
xchg
stos
pop
mov
push
dec
mov
nop
sbb
add
dec
add
xchg
stos
les
and
ja
mov
and
sbb
cmp
adc
out
inc
or
inc
pop
es
xchg
aas
push
ja
inc
xchg
mov
je
xchg
xor
mov
lea
adc
aam
into
lods
add
inc
sbb
ret
jo
push
sarl
pop
lret
sub
inc
dec
dec
adcl
cmp
push
aas
push
sub
bswap
pop
xor
or
jns
iret
push
je
xchg
lret
loope
xchg
xor
mov
js
sub
in
icebp
fadd
push
imul
arpl
inc
sub
and
aam
cmc
cmp
je
and
adc
adc
xor
fsubrs
cmpsb
lret
sbb
inc
scas
pop
sahf
sbb
sbb
cmp
and
pushf
lret
inc
add
lods
orl
je
inc
inc
or
mov
mov
rdmsr
dec
or
subl
shrl
sbb
lea
pushf
lds
aam
sub
outsb
xor
cmc
add
faddl
sarb
sbb
cmp
pushf
mov
pusha
mov
xor
insl
pop
add
cmp
ret
add
mov
frstor
dec
pop
lea
ret
or
push
mov
adc
sub
xchg
dec
int
dec
dec
sub
mov
fstl
push
adc
jge
xchg
xchg
and
xchg
adcb
stc
enter
or
jmp
pop
jo
jo
sbb
xor
cmc
ret
and
ljmp
fld
enter
data16
pop
dec
hlt
or
mov
push
push
mov
icebp
addr16
inc
and
push
inc
pop
add
pop
push
and
xchg
or
je
lret
dec
xchg
addl
add
repnz
xor
fdivl
rclb
sub
or
sub
imul
push
ss
and
adc
or
enter
js
lds
mov
cmpb
mov
and
add
addl
push
daa
mov
inc
in
rcrl
jl
inc
cmp
imulb
or
jmp
mov
pop
push
mov
or
sbb
xorb
mov
pop
jne
add
dec
stc
dec
dec
js
fnstcw
testb
or
scas
adc
xchg
pop
push
sbb
push
sbb
adcb
push
push
mov
fs
leave
add
ja
add
and
scas
sbb
inc
fadds
fadd
dec
sub
outsb
test
sub
fsubrs
add
dec
or
pop
add
popa
pop
shlb
xchg
sub
orl
push
testl
pop
add
nop
sbb
mov
test
lds
lret
pusha
leave
sbb
xchg
inc
sahf
sbb
sbb
lock
adc
popa
and
push
mov
push
xlat
popa
loope
and
jge
inc
iret
mov
pop
shlb
sub
pop
mov
test
les
inc
ret
pop
leave
loop
add
outsl
icebp
push
push
shlb
and
sbb
pop
loope
push
mov
ret
in
xor
dec
pop
loope
jns
cmp
and
xor
push
mov
xchg
jecxz
adc
nop
or
push
add
add
jno
mov
adc
mov
fnstsw
inc
push
scas
mov
sub
in
lock
and
adc
xor
fistps
dec
pop
adc
cs
mov
hlt
push
or
fldl
push
xorl
ds
out
push
cli
outsl
add
push
push
push
shlb
add
xchg
fstl
push
dec
sbb
sub
dec
dec
or
loope
mov
cmp
add
sbb
loopew
or
pop
in
fdivrl
jbe
call
cmc
loope
sbb
scas
adc
mov
sub
inc
call
push
stos
add
xor
pop
lret
es
rorb
mov
jbe
pushf
mov
mov
pop
imul
xor
mov
mov
mov
xor
adc
push
dec
incl
cwtl
rorl
and
adc
cmpsb
mov
xchg
pusha
mov
orb
aas
mov
jmp
pusha
sub
cmpsb
adc
fmull
roll
dec
aaa
in
movsb
loope
outsb
add
outsl
shll
outsl
cmpsb
xchg
sub
fcompl
nop
sub
inc
adc
xchg
mov
shrb
inc
dec
lahf
xor
hlt
popa
add
rcll
pop
mov
inc
fcmovb
lods
or
sti
dec
or
push
mov
inc
mov
hlt
dec
sbbl
adc
test
mov
mov
loop
hlt
jmp
shl
sbb
sbb
fnstsw
testl
xor
loopne
push
and
nop
ret
hlt
fildll
push
push
scas
dec
inc
add
leave
dec
jbe
pop
add
add
test
sub
daa
pop
fs
xor
sub
sbb
sub
rorb
or
adc
mov
and
and
ror
xor
nop
rcrb
pushf
jmp
sqrtps
mov
inc
out
sbb
xchg
test
jl
cmpsb
gs
pushw
popf
sbb
repz
push
les
add
loope
pop
lods
push
stos
mov
cmpsb
fldenv
ds
lea
in
mov
js
xchg
cld
ret
or
ljmp
shlb
xchg
dec
outsl
and
mov
push
icebp
push
ss
les
cmpsl
mov
add
or
cmp
movsb
lret
xor
lock
sbb
pop
cmp
fistpl
add
incl
loope
mov
pop
add
mov
inc
sub
sub
push
mov
fs
pop
push
mov
jno
mov
nop
or
cs
mov
or
pusha
aaa
cwtl
inc
setp
add
in
xor
popf
xchg
cmp
or
add
cwtl
mov
imul
mov
and
lods
mov
push
fidivrl
xor
pop
push
lock
ja
nop
fldcw
movb
cmpsl
jo
arpl
imul
and
push
pop
std
jno
sub
ja
push
xor
push
je
mov
sbb
mov
add
gs
add
scas
cmpsb
mov
shrb
jbe
sub
cmp
lock
xlat
push
bswap
xchg
and
pop
int3
inc
sub
dec
repnz
adc
test
sbb
and
pop
mov
and
adc
sbb
testl
fdivr
xchg
scas
popf
sbb
dec
inc
je
andl
push
inc
lret
jp
pop
pop
mov
dec
test
sbb
or
dec
push
cli
mov
test
xor
pop
sbb
cmp
and
nop
xchg
jae
ds
dec
movsb
jge
mov
add
push
or
hlt
rolb
mov
sbb
mov
xor
adc
pop
push
jo
xor
add
pop
and
leave
frstor
cmp
insl
sbb
pop
jb
les
daa
sarb
jae
add
pop
out
sbb
and
xlat
mov
lret
jg
mov
pop
ss
dec
ret
scas
movsl
and
mov
aam
sarl
mov
xor
scas
pop
femms
mov
jmp
sbb
or
inc
cmpsb
pop
cmp
jmp
addl
aas
cmp
add
xor
push
xlat
test
cmp
push
mov
mov
adc
cmpsl
sbb
sbb
das
movsb
push
mov
addb
pop
std
xchg
mov
add
xlat
and
dec
outsb
jg
je
enter
add
adc
jbe
add
rclb
and
aas
or
inc
or
pop
lea
cmp
loope
sub
dec
or
pop
rcl
mov
fsubrs
rcl
and
jne
adc
cmp
inc
mov
xchg
sub
mov
inc
inc
push
mov
aad
jmp
xchg
jns
and
mov
pop
leave
cmp
rcrb
pusha
push
pusha
bound
add
arpl
and
subl
adc
ret
sub
adc
mov
std
or
push
movl
int3
sbb
insl
sbb
add
sbb
push
pop
ret
rdtsc
lods
leave
rcll
scas
or
add
add
lahf
xchg
sub
ljmp
xlat
adc
fiaddl
out
xlat
sub
dec
popa
sub
daa
test
int
das
inc
pop
enter
sub
pop
in
add
sbb
insb
adc
mov
lsl
push
js
xor
pop
cmc
jo
cmc
and
push
cmpsl
push
loop
incl
or
test
pop
popf
fldcw
mov
or
inc
cmp
xor
gs
mov
push
add
andl
lock
inc
sub
nop
clc
or
dec
adc
orb
jl
ds
mov
cld
mov
mov
cmp
sub
cwtl
adc
fsub
sbb
andb
pop
fwait
add
dec
add
push
push
jo
or
mov
add
inc
or
sub
dec
xor
adc
jb
adc
in
mov
xchg
xchg
or
mov
pop
sahf
movsb
std
push
inc
int
adc
mov
popa
lods
cs
mov
mov
or
imulb
xchg
jg
xadd
jo
xchg
xor
mov
dec
nop
pop
push
xchg
xchg
imul
cmp
sahf
pusha
das
js
lea
mov
and
sbbb
cwtl
push
dec
push
enter
push
jmp
call
jle
jne
mov
adc
es
push
pop
cwtl
gs
lock
sub
jecxz
in
jmp
jge
loop
ficoms
lods
or
mov
mov
mov
je
add
leave
pusha
ret
sti
bound
mov
xchg
loope
jne
cmp
push
ss
jo
cmp
jbe
mov
add
test
dec
int
insl
jbe
orl
popa
adc
xlat
adc
mov
or
out
add
mov
adcb
push
adc
add
fcompl
std
je
and
loop
push
mov
add
jne
gs
or
divl
jo
xor
push
push
xor
daa
jo
cmp
sub
jo
jnp
sub
insl
fwait
add
pop
or
roll
sbb
lods
insb
inc
outsb
add
dec
rorb
out
mov
rolb
push
or
dec
loope
xchg
xor
cs
mov
mov
add
inc
aad
xor
add
add
and
jmp
movsb
sbb
xchg
xchg
jo
pusha
rorl
andb
mov
push
add
dec
ret
icebp
add
sbb
or
sbb
aaa
or
sub
aas
movsl
test
xor
jecxz
lds
fisttps
scas
pop
fcompl
jmp
jmp
ret
push
sbb
push
pop
ds
inc
xor
ret
mov
insl
sub
or
cld
adc
cmc
add
sbb
insl
adc
push
lock
repz
cld
mov
sbb
div
inc
inc
or
sbb
in
jecxz
cmp
movl
or
pop
aad
push
mov
add
insl
or
negb
cwtl
and
add
iret
xor
lds
add
ret
push
jno
push
pop
push
and
pop
ret
popa
xorb
test
sub
je
dec
mov
mov
movsb
pushf
add
xor
sbb
movsb
adc
cmp
pop
jmp
out
out
sbb
test
clc
mov
and
rclb
mov
sbb
add
xchg
movsl
add
mov
lea
lahf
test
jae
and
sbb
push
aaa
movsl
sub
out
pop
fmull
or
xchg
inc
subb
mov
insl
inc
xor
sti
and
inc
cli
popa
sub
mov
jl
dec
pop
pop
jns
imul
into
insl
xchg
push
fs
shlb
sub
je
or
loopne
jno
mov
jbe
outsb
jmp
inc
inc
jo
bound
sub
pop
add
mov
xchg
adc
xchg
push
mov
mov
test
mov
cmp
les
cmp
add
or
repz
scas
insb
bound
pop
push
add
cmp
leave
jg
fmul
xorb
jb
pcmpeqb
push
sbb
sub
imul
mov
and
out
xor
mov
imul
pop
dec
inc
and
test
popf
imul
xor
das
add
inc
mov
xchg
test
mov
clc
mov
ljmp
push
push
pop
movsb
call
inc
mov
sub
loopne
mov
xchg
ss
dec
mov
andb
adc
imul
cwtl
and
dec
jg
adc
fistps
or
jle
icebp
jbe
jmp
out
outsb
jmp
sysret
mov
xchg
push
nop
mov
pop
pop
mov
dec
jg
sbb
loope
mov
fidivs
add
cmp
sbb
mov
or
mov
and
mov
in
lods
cltd
nop
push
dec
aad
cld
and
lret
pop
xor
insb
or
xorb
test
cmp
cld
punpckhwd
in
inc
xor
cwtl
xchg
add
pop
mov
sub
or
jne
add
push
adc
sub
dec
pop
inc
add
jl
call
mov
nop
shll
xchg
cs
pop
cs
test
shlb
inc
dec
sbb
add
push
dec
stos
xor
or
sub
push
icebp
iret
mov
stos
push
adc
arpl
das
gs
subb
mov
dec
inc
cmc
add
sub
inc
push
push
mov
movsb
fcmovnbe
popa
or
xchg
add
lcall
mov
movsb
pop
cmpsb
enter
inc
decb
pop
add
sbb
pop
mov
addb
cltd
lods
mov
mov
mov
sub
arpl
add
pop
sbb
inc
cltd
dec
adc
add
pop
xor
adc
loopne
cmp
nop
jno
jmp
dec
xchg
sub
sbb
xchg
mov
add
or
jbe
sbb
aam
adc
pop
popf
leave
jp
mov
cmp
add
std
hlt
das
mov
ljmp
or
jae
rorb
mov
pop
btc
xchg
jne
adc
push
lar
or
add
mov
or
and
or
push
in
xchg
inc
repnz
add
add
aaa
jb
dec
pop
mov
sbb
inc
push
in
aaa
jle
loopne
mov
fs
xchg
dec
ja
jno
fildll
adc
adc
add
xchg
mov
cmpsl
push
daa
roll
repnz
sbb
stos
fwait
int3
sub
mov
mov
or
cmpsl
push
inc
dec
jne
xchg
push
xchg
cmp
cs
mov
xor
add
push
fs
jbe
jb
push
fmuls
inc
cmp
je
ret
in
mov
push
xor
popa
sub
jo
movsb
xor
jl
and
je
adc
pop
pop
jmp
sub
jno
adc
sbb
es
cmp
lods
lcall
inc
arpl
jae
outsl
cmp
pop
pop
jne
aam
test
fstl
push
subl
pushf
push
push
movsb
jb
xchg
pushf
mov
add
xchg
sbb
lret
push
xchg
js
pop
and
jo
or
xchg
mov
adc
int3
pop
sub
cmp
inc
jno
shl
add
movsb
into
rclb
push
iret
lcall
cmp
xor
inc
imul
scas
pusha
loopne
js
nop
mov
mov
push
outsl
push
in
adc
and
adc
bound
mov
ret
pop
adc
inc
or
jmp
push
inc
dec
inc
adc
cld
sub
xor
cmp
jne
inc
fs
adc
and
mov
mov
pop
add
and
and
or
clc
push
movb
xchg
or
push
clc
nop
jns
inc
incl
jmp
insl
addl
pop
pusha
adc
push
popa
rorb
int
xchg
add
loop
add
jne
or
sbbl
sub
or
pop
addl
push
es
mov
insl
or
push
and
insb
cs
inc
sbb
pop
pop
or
leave
outsl
adc
mov
add
cmp
call
cmp
sub
pop
dec
clc
flds
pop
jl
stc
adc
cwtl
movb
pusha
add
jae
mov
lock
std
cs
sbb
inc
xor
and
adc
mov
xor
cltd
lahf
xor
and
jno
lock
lods
out
inc
mov
push
sub
nop
mov
push
add
jmp
fidivrl
sbb
idivb
sub
bnd
cmp
inc
mov
in
sub
cmp
lods
sbb
lret
es
inc
cmp
pusha
adc
xchg
cmp
clc
sub
lea
fisttpl
in
add
or
fisubrl
jg
test
rorb
add
arpl
mov
mov
jns
sbb
ljmp
jbe
jecxz
xchg
mov
adc
popf
cwtl
pop
insb
sbb
sbb
dec
stos
mov
mov
out
sub
push
inc
lahf
cld
inc
push
mov
jl
push
addb
push
xchg
mov
je
pop
mov
or
inc
aam
inc
add
or
js
in
mov
dec
inc
push
xor
mov
int3
add
mov
push
gs
mov
in
out
mov
jg
nop
push
mull
cmp
pop
lret
adc
test
in
scas
xchg
movsb
push
ret
mov
xor
add
and
inc
nop
scas
dec
enter
add
mov
inc
and
push
ret
or
hlt
jle
popa
or
je
je
sub
and
outsl
in
fldt
inc
inc
and
fcmovnb
lds
jno
jg
jmp
push
leave
and
cmp
loopne
push
lret
and
or
and
jne
or
pop
pop
out
das
and
test
insl
add
push
fidivl
fs
cwtl
cmp
movsb
test
and
lock
les
push
cmp
leave
aad
jbe
jmp
ja
sbb
xchg
pop
add
jo
cmp
ljmp
jnp
jae
aad
inc
mov
popa
icebp
or
lea
mov
mov
addr16
mov
mov
bound
xor
loope
lock
pop
push
das
adc
xchg
push
xor
jno
imul
push
cmp
in
es
dec
xchg
push
and
pushf
addr16
ss
inc
js
adc
insl
adc
mov
cli
in
insb
inc
cmp
jno
rol
dec
data16
pop
repnz
leave
rcrl
cld
push
cltd
mov
pushf
leave
dec
mov
jmp
pusha
dec
fisubrl
xchg
or
cmp
add
fs
pop
in
loopne
pop
shrb
sahf
sti
lret
fwait
cltd
shlb
pop
or
dec
clc
sbb
test
adc
mov
jle
rcll
into
jle
popa
push
dec
cmp
adc
dec
dec
xor
jl
cmp
clc
sbb
fcompl
mov
cmp
sub
ss
shlb
ja
push
or
inc
adc
ret
lea
leave
add
xchg
pop
outsl
xor
xlat
jnp
loope
pop
aas
mov
cmp
pop
xchg
rorl
cmp
shll
pusha
push
popl
and
xchg
xor
lock
sub
lods
jmp
sbb
je
or
cmp
xchg
push
sbb
cmovno
lahf
or
jbe
sahf
mov
pop
lods
pop
stos
pop
inc
push
mov
inc
mov
pop
xchg
lea
ret
sub
test
add
js
dec
xor
mov
in
mov
loop
mov
call
test
sub
cld
sbb
subl
movl
sbb
cld
sbb
aaa
mov
xchg
sbb
push
fs
les
push
cltd
loop
inc
push
jl
xchg
adc
arpl
add
xchg
scas
inc
adc
adc
test
add
dec
dec
ja
jae
call
jns
scas
mov
cmpl
rcrl
fucomi
mov
push
in
push
rcrb
mov
test
data16
sub
insl
sbb
aaa
adc
mov
mov
inc
imulb
test
repnz
inc
dec
sbb
add
imul
jne
repz
in
and
jl
idiv
adc
add
adc
adc
ret
cmp
movsb
mov
call
xchg
icebp
dec
aad
in
xchg
inc
imul
lods
or
mov
js
movl
test
push
jns
mov
jne
decl
dec
add
imul
lock
adc
clc
in
popa
test
xor
push
mov
add
ret
xchg
mov
in
mov
push
push
adc
or
movsb
movsl
outsl
imul
mov
divl
in
inc
es
lret
jl
imul
daa
fnsave
adc
and
adc
push
xchg
and
mov
fsubrp
dec
in
hlt
push
add
cmpb
test
mov
xchg
add
xchg
sbb
imul
sbb
sbb
js
mov
mov
add
es
imul
push
lcall
sub
push
mov
lahf
inc
mov
int
push
scas
push
nop
dec
add
aas
stos
push
stc
je
pop
push
or
push
pop
int
add
inc
sub
loopne
jmp
sbb
pop
pop
clc
mov
imul
movsb
jmp
push
cmp
nop
pop
pop
les
rolb
test
mov
push
or
in
sarb
ja
add
mov
push
mov
mov
jmp
mov
and
pop
jbe
loopne
mov
lock
cli
dec
mov
pop
xchg
sub
xlat
or
das
bound
shr
stc
or
ja
mov
xchg
adc
mov
or
and
cmp
out
ja
scas
inc
inc
and
loope
insb
rol
shl
nop
inc
and
mov
pop
and
pop
fwait
cmp
outsl
ror
adc
adc
mov
lods
outsb
hlt
xchg
jl
xor
jecxz
dec
and
push
adc
sbb
cld
mov
mov
cmpsb
inc
mov
push
shr
sti
fxch
jge
lret
ffree
cmp
mov
js
in
adc
push
test
or
inc
lds
mov
mov
ds
mov
mov
aas
in
mov
dec
popa
xor
push
push
inc
mov
push
mov
sub
push
cltd
fwait
lret
outsb
sqrtps
in
scas
xor
mov
sarl
dec
pop
les
mov
popf
and
insl
sub
push
rcrb
jo
addr16
or
out
adc
or
mov
or
or
nop
lods
xor
and
jg
bound
dec
rcrl
jo
popa
push
add
sbb
inc
cmp
xor
dec
adc
inc
mov
sub
or
xchg
sub
and
xchg
scas
aam
adcl
mov
xchg
adc
push
enter
dec
fdivr
sbb
push
rcrl
inc
or
nop
es
shlb
rcr
cmp
lea
add
xchg
ret
push
push
mov
dec
js
lret
adc
adc
mov
xor
lea
pop
mov
adc
push
xchg
fimull
arpl
pop
pop
fs
mov
imul
lret
dec
xor
cmpsb
and
ss
or
sar
jae
cmp
rolb
cmpsb
movsb
cmpsb
aas
sbb
pop
in
std
pop
sar
cld
jae
cmp
je
inc
jmp
mov
addr16
out
je
xchg
cltd
and
sti
jmp
dec
push
adc
push
in
rcll
cmp
add
fmull
ret
js
cmp
or
sahf
push
jae
pop
je
sti
dec
mov
inc
adc
xchg
or
xor
xchg
imul
xchg
xchg
or
jnp
mov
cwtl
inc
in
cmp
mov
fs
mov
sub
inc
sbb
mov
lods
mov
pop
lret
push
dec
jnp
out
adc
push
pop
ja
sub
and
mov
or
push
jmpw
and
mov
sbb
add
xor
data16
inc
pop
dec
insl
jnp
sbb
addl
pop
mov
into
mov
mov
sub
enter
jne
rclb
dec
test
jmp
cld
iret
inc
fwait
dec
sbb
imul
movsl
mov
mov
push
and
mov
enter
stos
sbb
mov
mov
jo
mov
testb
cmpsl
mov
cmp
xor
cmp
and
adc
inc
dec
lahf
inc
jmp
cmp
jl
mov
iret
pop
pushf
or
sahf
push
loopne
lds
add
ret
push
add
insb
movsl
inc
repnz
dec
sahf
add
in
aas
das
push
insb
test
mov
pop
push
sbb
sarl
adc
fsubrs
hlt
jl
add
or
jge
dec
xor
or
mov
cmp
repnz
loopne
out
xor
inc
loope
insl
sub
push
add
stos
push
add
and
xor
inc
xchg
idivb
push
adc
ja
fs
or
filds
sbb
orl
ret
jne
and
dec
and
dec
stos
and
in
jge
mov
mov
sbb
insl
ficoms
sbb
in
push
mov
or
push
push
jae
push
adc
mov
ret
add
jmp
mov
outsb
pop
std
pop
and
cmp
dec
enter
mov
cmp
clc
lret
lods
sub
lods
popf
clc
clc
add
push
cmpsl
dec
mov
sub
out
and
mov
mov
mov
add
mov
sbb
mov
ljmp
in
xchg
sti
leave
push
fs
stc
pop
push
test
or
and
imul
or
mov
and
xlat
pop
and
inc
dec
add
add
mov
pop
pop
dec
ret
xchg
cld
test
aas
and
int3
push
sbb
enter
inc
fsubr
mov
xchg
add
jo
pop
push
dec
adc
je
test
xorl
sub
add
cltd
push
push
nop
lea
fwait
adc
adc
or
inc
jbe
add
mov
fldcw
rep
add
js
pop
loopne
or
int3
lods
cmp
aam
push
loopne,pn
jmp
gs
imul
and
or
or
add
fwait
inc
push
shrb
je
adc
insb
js
inc
cmp
popa
xor
mov
ljmp
orl
lahf
jmp
dec
dec
lea
iret
les
push
enter
dec
sub
xor
xor
xchg
and
rcrl
das
sarb
ss
mov
xchg
lds
mov
xorl
mov
mov
mov
dec
stos
jno
cmp
jl
jns
rorb
sub
aad
jge
push
pop
mov
xchg
add
mov
dec
mov
dec
inc
jae
lock
rorl
mov
shrb
inc
pop
cmp
pop
lea
add
fisttps
movsl
cltd
clc
es
pop
cmp
or
inc
movsb
jae
xlat
dec
dec
hlt
jbe
xchg
ds
pop
pop
dec
dec
loop
movb
shll
sub
adc
lock
xor
or
or
mov
les
xor
clc
les
je
add
or
les
sbb
and
adcl
jmp
cmp
rcll
add
popa
je
loope
repz
adc
sti
and
pop
xchg
or
lea
ret
cmp
shrl
adc
or
mov
addr16
push
push
dec
push
fisttpll
jecxz
mov
push
cltd
pop
mov
imul
mov
shl
jo
or
and
lods
aas
mov
enter
adc
inc
int3
int3
shlb
sbb
or
mov
or
push
mov
popa
repz
jg
adc
adc
popf
add
or
inc
cmpl
nop
xor
jne
bound
xor
mov
movsb
add
mov
sbb
jl
mov
jg
jae
nop
and
add
mov
inc
add
pusha
add
out
inc
loop
stc
leave
sbb
mov
xchg
pop
and
and
loopne
sbb
cmp
daa
dec
sub
aad
ret
mov
shlb
push
sbb
and
mov
shlb
sbb
mov
negl
sbb
jne
fnstenv
add
pop
mov
pop
into
xor
repz
jbe
lods
and
adc
mov
mov
bound
lahf
mov
lock
popf
mov
sbb
and
test
xor
jl
jno
in
add
adc
call
cld
mov
pop
fnsave
or
push
mov
or
andb
addl
leave
gs
add
xchg
rep
test
test
sub
add
push
lods
in
push
sbb
lds
or
je,pt
shlb
xchg
jl
lret
cmpsb
xchg
mov
xor
cmp
insb
les
add
dec
fists
push
or
test
gs
cmp
jp
pop
dec
or
inc
mov
lret
pop
mov
cmp
lea
jg
sub
mov
mov
pop
stos
lcall
pop
or
xor
mov
lods
int3
ret
loopne
and
and
pop
add
pop
and
jmp
xlat
or
mov
or
enter
and
mov
pop
andl
mov
movsl
xchg
xor
mov
pop
push
mov
add
inc
cltd
mov
cltd
adc
or
inc
insl
push
xor
jno
shrb
add
mov
andl
in
pushl
push
xor
jb
mov
cli
push
push
lea
and
inc
fcmovb
and
addr16
push
daa
xchg
bound
mulb
jecxz
iret
sbb
cmp
dec
cmp
adc
and
add
sbb
add
lahf
mov
mov
test
cmp
add
sbb
ret
and
jbe
aam
cmp
push
jo
ret
mov
lods
movsl
dec
adc
sub
loop
cltd
mov
and
sbb
sarl
adc
mov
test
add
int
data16
push
push
inc
and
push
push
inc
rcrb
xchg
cwtl
xchg
push
ret
pop
cmp
push
and
iret
jl
sbb
push
fldenv
sub
cmp
mov
inc
out
loopne
cwtl
push
dec
pop
push
or
dec
adc
jne
lods
loopne
sub
inc
loopne
imul
aam
pop
sbb
pop
push
imull
arpl
outsl
sbb
inc
sbb
loopne
pushf
xchg
push
es
sub
xor
stc
xchg
test
xlat
mov
stc
inc
push
pusha
pcmpeqb
and
mov
ljmp
push
and
es
mov
std
loop
push
lea
sub
mov
push
pop
pop
lea
jecxz
pop
sub
daa
jmp
ss
mov
mov
jl
ffreep
sbb
mov
testb
push
push
out
mov
inc
adc
nop
sbb
add
hlt
xchg
lea
daa
pushf
insb
test
test
adc
cltd
leave
cmp
xchg
or
push
addb
iret
iret
sub
xchg
adc
shll
andb
mov
sub
cmp
dec
inc
call
inc
cmp
mov
xchg
sahf
mov
xor
outsl
bound
inc
push
leave
jne
push
je
push
sbb
fisubrl
mov
ret
roll
shlb
or
push
xor
stc
xchg
xchg
push
push
push
sbb
jo
push
cs
test
cmp
lds
lret
sbb
sub
ljmp
xchg
cwtl
sub
dec
mov
lds
or
mov
sub
dec
pop
nop
add
test
and
js
iret
pop
dec
and
and
mov
mov
xor
popa
sti
adc
cs
bound
mov
cmpsb
inc
or
adc
stc
decb
adc
lea
pop
ret
sbb
in
push
or
pusha
sbb
push
popl
mov
fiadds
inc
fcomps
mov
inc
lods
lcall
dec
mov
std
add
and
sbb
rorl
scas
cmpsl
jl
test
pop
movsl
stos
fadds
js
es
sub
ret
mov
push
inc
dec
xchg
xchg
adc
cld
repnz
adc
xor
lahf
push
popf
flds
adc
add
orb
xchg
mov
addb
inc
pop
je
dec
adc
lret
push
imul
pop
cwtl
pop
jge
insb
enter
mov
shrb
jmp
cwtl
and
add
arpl
push
clc
inc
or
and
mov
jp
popa
jmp
dec
inc
adc
imul
add
iret
push
push
dec
aam
xor
test
mov
cmp
xchg
and
cmpsb
xor
xchg
iret
mov
mov
pop
std
sbb
pop
cmp
mov
aad
sbb
enter
ljmp
mov
pop
mov
shll
cmp
xchg
in
cmp
add
shl
es
jle
jae
das
std
push
insb
jl
inc
mov
push
add
pop
xchg
add
push
cmp
aaa
ret
add
cmp
jne
xchg
mov
inc
jmp
cli
sub
add
xor
dec
xchg
push
fs
into
lds
lea
jno
inc
ret
sbb
mov
pop
cmp
adc
push
add
mov
lods
pop
fistpl
adc
xchg
out
js
fldl
inc
pop
dec
movsb
jne
jl
cmp
or
test
cmp
daa
and
inc
testb
sarl
and
mov
sbb
add
call
or
fucomp
push
hlt
lret
jmp
pusha
adc
sbb
dec
dec
and
outsb
orl
xlat
ds
push
cmp
cld
cltd
cmpsb
fdivr
dec
mov
add
and
sbb
fisttpll
inc
sahf
fcmovnbe
xchg
daa
xchg
xor
cli
and
lcall
movsl
dec
das
add
add
and
sub
pcmpeqb
xchg
pop
mov
fst
loope
jo
ss
xor
push
mov
xor
push
push
mov
sub
mov
add
lret
sarl
jb
out
or
jno
mov
imul
mov
add
ret
addb
or
dec
jns
ret
into
call
mov
push
push
das
cmp
scas
add
lahf
mov
add
and
test
sub
or
xor
mov
std
or
mov
add
lcall
add
and
imul
movsb
and
rorb
pop
mov
inc
les
sub
pop
hlt
pop
push
xor
mov
or
outsb
insb
mov
cmp
dec
clc
xor
jnp
loope
jl
mov
aas
imul
fcoms
push
sarl
jmp
subl
loope
jge,pn
xchg
ret
adcb
das
push
in
jb
pop
cmp
dec
jge
mov
ja
test
adc
sub
jle
adc
push
lock
jmp
mov
sbb
pop
xlat
or
push
adc
mov
inc
lods
xchg
mov
ret
push
aam
xchg
sub
inc
unpcklps
add
xchg
fcoms
xor
js
sub
sub
loopne
adc
jbe
sub
or
les
das
sub
rolb
lea
add
push
sti
pop
movsb
or
imul
or
enter
fiaddl
dec
int3
enter
loopne
xchg
movsb
adc
test
sub
shlb
mov
andb
gs
pop
test
dec
jmp
xchg
push
mov
in
subb
fstl
cmp
rolb
cmp
insb
mov
sbb
add
add
nop
jge
aas
and
movsb
inc
jnp
ret
add
push
shr
xchg
icebp
or
add
inc
rclb
inc
add
or
and
cmpsl
rcrl
adc
pop
adc
xchg
dec
test
lret
xchg
fsubl
adc
or
xchg
jge
mov
mov
xor
iret
or
push
dec
cmp
sbb
or
shrl
or
add
mov
dec
and
xor
dec
stos
ss
add
fildll
inc
dec
fidivrs
sbb
inc
fcompl
stc
lock
adc
jo
pop
sub
insb
loop
in
sub
lret
ficoml
dec
in
pop
cmp
loop
cmp
je
jno
pop
xor
data16
ljmp
mov
inc
hlt
mov
and
and
fs
cs
fwait
inc
add
sbb
jg
xchg
or
jae
cmp
rorb
fs
test
test
mov
test
push
fs
sub
in
outsb
ret
decb
xor
mov
ss
in
sbbl
push
fdivrs
aad
cmp
lods
jno
sbbb
lea
or
and
dec
lea
jle
andnps
dec
into
jbe
push
icebp
or
inc
andb
cwtl
adc
pop
imul
aam
aam
or
sub
or
add
into
push
jge
pop
lret
movl
popa
lods
scas
xlat
adc
rsqrtps
pusha
data16
stos
jl
movb
sysenter
sbb
lods
pop
ljmp
ret
out
ret
inc
or
enter
scas
sbb
mov
jp
pop
inc
orb
imul
add
lahf
push
orb
xor
push
xor
adc
adc
orl
mov
add
jge
push
cmp
sub
mov
or
pop
cmp
stc
lea
and
dec
adc
dec
push
mov
orb
cmp
das
adc
inc
loope
or
push
xor
mov
lock
shlb
shll
cmpsl
dec
clc
cltd
push
push
push
test
inc
test
or
jmp
adc
mov
js
inc
xchg
addb
outsl
push
xor
test
in
icebp
test
adc
mov
jmp
ss
mov
shlb
cmp
shlb
lahf
mov
jl
jge
lret
add
pop
pop
adc
test
je
flds
add
call
sub
mov
fcmovbe
outsb
jo
push
lods
movsl
mov
jne
sarb
rolb
and
mov
shl
xor
es
mov
add
jl
xchg
mov
leave
pop
push
adc
adc
adc
outsl
notb
mov
out
outsl
repnz
xor
aas
pop
mov
or
loopne
ret
mov
js
sbb
push
sbb
xor
jle
adc
pusha
xchg
mov
dec
push
and
cmp
pop
add
imul
dec
push
mov
dec
inc
aas
sub
inc
push
jl
jmp
push
add
sbb
dec
fs
add
mov
out
out
xor
or
pusha
jmp
mov
xchg
lods
adcl
aas
sub
add
xchg
popa
dec
mov
add
loop
jae
pop
sbb
adc
orl
js
xchg
and
les
fs
lahf
xchg
mov
std
inc
loop
mov
rcrb
adc
imul
mov
dec
pusha
push
push
and
aas
add
insb
xchg
jmp
fstpt
leave
push
jl
aaa
push
sub
mov
sub
ljmp
outsb
push
cmp
mulb
add
add
into
incl
testl
push
xor
adc
call
dec
lock
rolb
inc
rorb
cmp
adc
pusha
inc
mov
add
add
mov
test
movsb
mov
and
fsubs
ss
mov
mov
dec
xchg
adc
sbb
sahf
adc
xchg
push
inc
jl
xchg
jmp
cmp
mov
mov
pop
inc
mov
xorb
inc
iret
push
push
shll
or
pusha
sbb
fsubs
nop
or
das
lahf
push
add
arpl
aas
jne
mov
cld
sbb
ja
sti
adc
add
mov
imul
mov
dec
dec
ret
mov
test
fistps
mov
cli
sub
fdivs
cmp
sahf
jbe
stc
or
dec
sbb
lods
lods
iret
movsb
int3
adc
or
or
xchg
cmp
pushl
sbb
out
insb
adc
sub
mov
test
out
movsb
inc
cmpsb
icebp
adc
sbb
in
cmpsl
cmp
pop
insl
fadds
into
push
ret
roll
aam
sub
sbb
clc
fsubrs
pusha
faddl
xchg
roll
les
push
push
sub
movsb
cmpsb
shlb
dec
lahf
add
sbb
pop
mov
js
pop
lea
pop
test
xor
and
scas
or
mov
jmp
outsb
xchg
sub
cmp
fmuls
jbe
jle
add
xchg
cmc
inc
inc
cmp
push
lahf
je
aad
adc
sub
sub
dec
je
test
je
icebp
in
jae
cmp
je
add
or
lods
stos
add
cmp
mov
rcrb
push
enter
iret
jo
mov
insl
xor
lods
in
ret
jcxz
outsb
cmp
sub
sub
pop
rcl
push
jnp,pn
inc
aaa
popa
orl
or
shlb
add
adc
popa
and
add
mov
shrl
sub
leave
xchg
xor
ret
pop
mov
and
jmp
sub
jl
adc
unpckhps
out
adc
mov
push
sbb
xlat
test
setg
sbb
pop
cwtl
xchg
adc
and
shll
gs
andb
nop
xchg
sbb
push
sbb
or
mov
loope
xor
mov
sub
in
push
inc
je
cmp
ret
jae
pop
mov
notb
fcmovnbe
je
ffreep
test
or
fdivs
cmp
and
cmp
or
push
inc
leave
cmp
sub
rorb
movsb
add
jg
icebp
pop
addb
pop
sbb
lock
push
sti
or
lods
mov
push
shlb
sbb
ret
sbb
pop
and
jno
add
es
push
test
push
imul
imul
cltd
mov
inc
and
or
fcmovbe
sahf
inc
sub
sub
jecxz
xchg
adc
or
adc
dec
push
sbbb
or
inc
pop
cmpsb
sbb
pusha
jbe
xchg
or
movb
jg
pop
pusha
shlb
stos
sub
dec
add
test
push
es
adc
cmc
insb
sti
push
fcomps
inc
and
cmp
fadds
xchg
mov
lret
inc
call
and
pop
je
test
mov
sbb
dec
xor
insl
shll
inc
cmp
les
mov
xchg
lods
and
inc
aaa
add
and
adc
in
cmp
jae
push
sub
jmp
add
rorb
push
fdivs
mov
lea
add
lds
int3
scas
sbb
ds
int
inc
loopne
push
and
adc
pop
imul
imul
sbb
mov
xor
add
adc
movsb
mov
xchg
push
addl
inc
adc
cmp
push
xor
xorb
mov
rorl
xor
adc
jle
loopne
shrl
sti
push
pop
enter
sbb
mov
adc
movsb
cmpsb
pop
mov
ret
lods
xchg
inc
mov
add
add
loopne
lea
shr
pop
lea
push
cltd
xorb
and
js
inc
sbb
sub
and
lret
data16
sub
push
xor
call
mov
adc
push
cmpb
mov
and
dec
fldt
loopne
fadd
add
xor
add
imul
fiaddl
loopne
push
inc
cmp
lcall
pop
or
xor
ret
ja
inc
inc
xor
and
adc
or
adc
xor
xchg
rclb
leave
imul
jl
scas
inc
cmp
jae
lahf
test
and
jno
rolb
sub
inc
mov
mov
pop
or
dec
pop
xorl
dec
dec
fsub
mulb
or
cmp
push
mov
mov
or
bound
rorl
lahf
inc
adc
scas
fsubrs
mov
sbb
mov
adc
adc
jle
bound
cs
cwtl
rolb
pop
stos
jo
xchg
mov
scas
scas
add
cs
xchg
js
xor
test
xlat
pop
and
and
xchg
dec
inc
hlt
mov
or
int
mov
sbb
xor
dec
jbe
xchg
sub
fcoms
xchg
or
or
mov
add
xlat
enter
sub
nop
xchg
stos
lret
or
dec
call
jns
mov
pop
out
adc
fdiv
sub
lcall
push
bnd
iret
pop
sti
inc
dec
xor
insb
outsl
push
int3
inc
sbb
inc
add
inc
cmp
les
pop
dec
lret
pop
pusha
enter
aaa
mov
sbb
adc
jae
test
mov
sbbl
inc
sub
cwtl
mov
or
xor
je
adc
daa
push
push
inc
sbb
clc
enter
adc
or
sbb
add
or
inc
test
jmp
loopne
dec
push
orl
mov
pop
lods
adc
and
and
mov
inc
add
jle
inc
mov
sbb
call
clc
mov
jge
cli
or
ret
repz
insl
add
mov
loop
addb
mulb
push
roll
popf
addr16
jno
sub
ja
rolb
lods
pop
pusha
add
add
mov
sbb
pop
xchg
push
data16
es
cmp
pop
mov
mov
fisttpll
lahf
jmp
aas
sbb
fwait
dec
sub
push
add
sbb
push
or
lea
cmp
lea
int3
cmp
cmpl
popf
xor
pop
movb
lcall
movsb
das
add
or
pop
je
pop
mov
add
inc
push
std
dec
add
jno
inc
loop
fldl
cltd
fbld
sbb
adc
rolb
addb
push
enter
push
mov
or
mov
cmp
xchg
jnp
testl
and
dec
adc
push
jecxz
fcmovb
push
and
mov
mov
mov
jbe
inc
pop
fstpt
imul
jno
push
sub
dec
test
pusha
mov
mov
in
cs
push
lahf
fsts
jo
dec
add
lods
inc
or
jl
test
cmp
mov
push
es
call
js
in
xor
daa
or
test
je
xchg
fisttpll
pushf
xchg
scas
pop
scas
lods
ss
fistpl
xchg
add
bound
push
lea
lods
xchg
daa
fiadds
xlat
xor
ljmp
add
mov
jge
cmp
jmp
inc
xchg
jecxz
js
adc
arpl
jae
das
inc
fwait
out
int3
pop
push
inc
fbld
cmp
inc
mov
shll
inc
jge
movsb
ds
sahf
ja
push
push
data16
dec
xlat
ficompl
adc
lcall
mov
adcb
jp
dec
das
push
xor
fstpl
int
xchg
adc
xor
adc
jg
scas
rdpmc
test
push
dec
dec
icebp
pop
cmp
in
mov
mov
jno
roll
xchg
das
call
mov
mov
movsl
cmpsb
shll
imul
mov
inc
dec
sub
dec
mov
jmp
cmp
add
push
mov
test
sub
adc
stc
sbb
in
addb
and
pop
and
push
push
add
push
push
or
pop
push
cmp
xchg
loopne
aas
adc
sbbb
stos
inc
ret
add
aas
and
loope
push
sbb
mov
ret
outsb
add
jns
enter
clc
test
inc
and
lret
add
and
add
nop
fwait
and
dec
sbb
in
and
outsl
dec
sbb
lret
mov
fadds
xchg
xor
mov
jo
push
inc
movsb
push
inc
or
add
ds
movd
or
push
dec
pushf
mov
addb
and
pop
popl
sub
flds
sub
rcpps
lods
xor
mov
rolb
inc
pop
ss
das
push
adc
divb
pop
push
push
or
add
divb
in
mov
mov
jnp
pop
inc
pop
push
daa
inc
ret
or
dec
jecxz
and
loopne
add
add
adc
das
push
psubb
sahf
test
pmaxsw
push
push
xchg
sbb
lods
push
scas
cmp
lods
sub
xchg
dec
xchg
insb
jg
mov
movsb
nop
jnp
pop
into
cmp
inc
xchg
pop
sub
mov
cmp
push
pop
cli
loope
and
std
iret
pop
cltd
mov
out
or
lock
rcrb
fs
rol
add
xor
aas
loop
mov
mov
sub
jne
mov
lock
in
std
mov
test
adc
pop
gs
sub
fcomps
ret
mov
sbb
subb
mov
sbb
pop
fisubrs
lea
add
push
call
icebp
jmp
xchg
jp
mov
xchg
adc
mov
xchg
mov
push
add
movsl
inc
dec
sub
rorl
dec
push
adc
mov
test
rorb
add
add
pusha
aaa
dec
cltd
push
adc
sub
les
pushf
jnp
int
or
lds
xchg
jecxz
dec
pop
add
adc
inc
mov
pop
rcr
xor
sbb
sub
push
adc
fcoms
outsl
xchg
mov
or
xchg
mov
lock
cmpl
aaa
fdivl
mov
adc
sub
lret
sub
add
inc
pop
push
add
or
test
push
dec
push
sub
inc
lock
js
lock
cmp
ret
ficoms
push
bound
jb
and
cmp
xchg
xlat
cs
inc
and
cmp
aad
aad
sbbb
xor
mov
pop
push
pop
sbb
orb
mov
pop
xorb
jne
lcall
cltd
cmp
nop
cmpsb
cmp
pop
xor
and
jmp
pop
lret
mov
cltd
or
jl
xor
shlb
nop
mov
shll
push
mov
cmp
js
adcb
in
addl
iret
mov
fwait
das
add
dec
pop
push
push
pusha
fildll
enter
dec
cmp
sub
xchg
lea
insl
and
and
mov
sbb
xlat
and
lcall
in
int3
rorl
jnp
add
and
insb
and
dec
outsl
sbb
ds
or
fmul
jmp
add
xor
xor
dec
xor
pop
xor
jmp
and
and
lods
xchg
movsl
stos
push
xor
and
cmp
pushf
data16
jmp
pop
rcll
iret
in
push
dec
test
sub
xor
add
jg
sarb
bound
cmp
fld
movsl
push
mov
out
push
inc
push
mov
pop
cmp
imull
push
mov
rolb
or
dec
jb
add
push
sbbl
or
in
pushl
add
pop
pop
loop
sub
mov
sub
mov
pushf
jmp
in
and
add
adc
mov
push
mov
nop
aas
mov
adc
mov
push
and
roll
or
sub
adc
jno
and
dec
adc
mov
cmp
mov
pop
pop
stos
das
sub
dec
movsb
xchg
sub
lock
shrl
push
outsl
pop
rcrl
pop
clc
adc
and
sar
cmc
nop
lock
out
inc
mov
and
cld
xchg
jne
jo
push
inc
adc
ss
aas
adc
repnz
mov
popf
push
out
sub
aad
add
rorb
pop
es
add
xchg
mov
push
lds
push
into
cmc
push
ss
or
loope
push
sub
ret
fcoms
sbb
dec
xchg
or
fstpt
xlat
sbb
xor
mov
sarl
pop
pop
dec
outsb
xchg
mov
or
popf
popa
jg
push
cmp
push
add
add
sbb
rcl
mov
rclb
stos
inc
push
popf
sbb
inc
xorb
jo
icebp
add
pop
push
cmp
gs
and
leave
lock
dec
inc
movsl
je
or
or
nop
xchg
push
xor
and
add
inc
xor
add
lea
sbbl
inc
xor
popf
ret
rorl
add
lahf
add
or
je
mov
sbb
adcb
movsl
pop
mov
sbb
push
mov
sub
movsl
mov
andb
jmp
and
dec
lea
push
leave
popf
mov
mov
pusha
outsb
hlt
and
sub
mov
pop
add
push
repz
pusha
or
insl
enter
je
nop
inc
js
and
es
xchg
push
mov
mov
sub
lahf
movsl
xor
shlb
xor
dec
int
mov
and
addl
fdivl
and
cltd
mov
push
mov
call
pop
out
or
sti
sbb
or
push
or
sbb
adcb
pop
pop
cltd
les
inc
xor
xor
xchg
or
push
cltd
sbb
ljmp
push
or
imul
adc
insb
pop
fs
mov
ja
xchg
push
adc
push
pop
fcoms
arpl
and
jge
sti
sbb
mov
mov
js
push
lods
rcl
sbb
and
sbb
and
movsb
mov
call
dec
aaa
jne
or
xchg
sbb
pop
and
addr16
sti
enter
inc
dec
cmp
xor
dec
inc
cmp
sbb
xchg
arpl
push
scas
loopne
add
repz
mov
rolb
inc
and
daa
xor
fsubl
push
xor
adc
push
xchg
cmp
xor
mov
xor
ss
xchg
jo
cmp
xlat
jne
push
mov
mov
inc
or
mov
cmp
out
sub
add
add
xor
xor
pop
std
sbb
aas
or
sbb
sub
adc
scas
movsl
daa
clc
sub
push
ds
xor
scas
lcall
loope
sub
adc
cmpsb
popa
add
push
or
inc
repnz
fsubrl
adc
lret
cli
add
jo
xor
imul
loop
jbe
je
js
loopne
or
jge
inc
add
add
and
test
leave
inc
adc
sbb
sbb
mov
outsb
jl
cmpsl
xor
into
out
shrl
or
and
into
loop
stos
xor
aad
test
repz
shrl
mov
adc
dec
mov
add
pop
cltd
inc
lods
push
addl
xchg
mov
jno
add
test
jne
shr
xchg
daa
and
scas
cwtl
and
cmp
add
rolb
scas
push
jg
ret
dec
pop
mov
iret
fld
mov
nop
jne
mov
pop
mov
inc
daa
inc
add
add
out
or
add
xchg
pop
pop
dec
mov
ret
iret
xchg
mov
mov
pusha
mov
hlt
pop
test
jl
fistpll
adc
and
outsb
jo
inc
xchg
fwait
shrb
lds
lds
mov
mov
add
cmc
dec
xlat
roll
cmp
jmp
add
insl
push
aaa
add
repnz
cmp
push
sub
push
fldpi
or
loop
cmp
add
jle
xor
xor
push
bound
and
loopne
js
jae
movsl
lds
inc
jp
mov
inc
jecxz
adc
xor
scas
add
dec
or
orl
xor
mov
adc
cmpsl
repz
rclb
lret
addl
jp
jne
xor
lock
add
fstpl
loop
add
fmuls
push
jg
mov
dec
mov
add
lods
test
jp
adc
in
or
sbb
cmp
push
xchg
out
imul
cmp
test
sub
adc
cld
xor
insl
xchg
and
imul
inc
jne
xor
push
lcall
pop
sysret
shrl
cmp
push
dec
adc
adc
flds
cmp
adcb
fidivrl
sub
cmp
mov
dec
fisttpll
xchg
xchg
or
xor
and
mov
xor
movsl
mov
stc
push
clc
scas
shll
sti
nop
sar
adc
or
jge
and
inc
rclb
mov
push
or
jmp
ja
popa
jmp
adc
ljmp
inc
aad
shlb
push
or
jecxz
es
jns
push
dec
es
push
add
pop
xor
push
add
mov
push
rclb
inc
and
popf
or
push
adc
ds
sahf
ret
add
or
sub
gs
adc
sbb
enter
pop
iret
xor
sub
adc
stos
dec
xor
xor
pushf
jge
int
push
jle
inc
add
sbb
repz
adcl
sub
push
imul
add
xlat
push
add
cmp
das
pop
sub
add
lahf
sbbl
add
inc
je
fnstsw
sub
mov
scas
xlat
sbb
cmp
and
push
into
cmp
gs
lds
rcrb
mov
cld
pop
outsl
jmp
pop
dec
pop
mov
inc
add
jge
fbstp
mov
inc
mov
inc
push
push
pop
loop
aad
sbb
push
cmpsl
lcall
cmp
cmp
xor
loope
and
push
xchg
dec
push
jo
xchg
movsl
insb
popf
inc
andl
and
ljmp
aaa
jo
xchg
jne
xor
jp
rolb
add
nop
mov
jb
jp
rorb
loop
lahf
popf
cmp
cmp
push
fcompl
sbb
nop
shl
push
test
xchg
pop
inc
and
cmpsl
je
dec
lret
pusha
xchg
lock
or
fistpll
syscall
into
pop
cmp
adcl
ret
loop
movsb
push
push
dec
lahf
lock
jo
sub
shrl
add
loopne
or
in
popf
sbb
pop
inc
jne
pop
nopl
mov
ret
sub
xchg
sub
fistps
nop
sbb
xlat
or
movsb
imul
rolb
adc
inc
loopne
or
sub
out
or
push
stc
jecxz
jne
test
cmp
xor
orl
add
dec
jle
pusha
add
pusha
insb
sub
cli
inc
popf
popf
out
adc
sub
jmp
push
mov
mov
mov
sbb
or
mov
or
sub
adc
je
out
jl
sbb
lds
push
fsub
jo
ret
clc
push
pop
aas
or
mov
sub
outsb
inc
pop
outsl
jo
cli
inc
adc
adc
ret
dec
add
loopne
push
pmaddwd
inc
fmuls
stc
aaa
add
cmp
adc
inc
mov
int3
cmp
movsb
pop
mov
cmp
pushf
ret
fiaddl
sub
xchg
shll
divb
arpl
shlb
ret
dec
cmp
dec
and
dec
or
sbb
pop
mov
or
adc
lret
sub
pop
pop
jb
dec
stc
or
mov
xor
add
and
dec
xchg
sbb
adc
pop
push
jp
jno
inc
pop
and
pop
and
pop
adc
aaa
mov
in
pop
insl
sub
ja
push
pop
mov
mov
xchg
shlb
cld
imul
push
stos
cmpsb
inc
mov
push
rorb
xchg
pushf
mov
js
jle
scas
sbb
pop
inc
stos
icebp
rolb
aam
loopne
or
inc
cmp
out
shlb
push
orl
sbb
pop
inc
xor
adc
cli
ret
sbb
fsubr
or
mov
cmp
mov
das
xor
pop
dec
pop
ret
and
mov
loopne
inc
cltd
adc
sbb
or
lea
subb
in
adc
or
imul
add
pop
push
xlat
dec
rolb
adc
pop
inc
pop
push
pop
add
sarl
jmp
dec
add
xlat
cmpsl
add
jmp
ds
into
outsb
inc
pushf
dec
fsubrl
fs
ret
sti
adcb
pop
pusha
loopne
push
sahf
add
iret
ds
mov
or
adc
fisttps
inc
jecxz
mov
pop
adc
sbb
cld
push
mov
push
sbb
lcall
aad
cmpl
ja
add
dec
add
dec
bound
inc
sbb
sbb
pop
or
cmpsl
stos
xchg
add
and
mov
mov
xor
add
add
pop
iret
jae
jmp
scas
and
xchg
cmp
and
jmp
loopne
shrb
or
ret
repnz
or
xchg
add
adc
add
ret
jmp
cmp
pop
pop
mov
push
fldcw
add
cmp
jg
or
adc
rorl
shrl
jmp
lods
or
and
jl
into
js
adc
rcrb
aas
iret
push
and
pusha
add
inc
enter
mulps
dec
mov
inc
inc
out
mov
repnz
mov
add
mov
repnz
jae
jnp
sbb
pushf
adc
sar
sub
lcall
in
cmp
add
fs
xchg
xor
pusha
mov
mov
cmp
sarl
jne
lods
xchg
enter
xchg
lret
push
mov
adc
mov
cwtl
mov
xchg
inc
inc
pop
out
subb
push
cmp
push
and
outsl
cmpsb
lods
sub
mov
inc
add
xor
aam
push
add
insb
and
sti
cwtl
dec
ffree
add
out
xchg
jo
sub
mov
mov
cmp
xor
push
pop
or
cli
orb
add
pop
or
stos
dec
inc
test
sbb
jo
add
sub
adc
stc
and
hlt
add
and
xor
addr16
or
push
dec
add
xchg
jp
sahf
repz
push
push
je
addb
xchg
xchg
pop
repz
push
mov
imul
push
xchg
jge
adc
dec
std
or
dec
int
push
movsl
rcl
add
repz
aas
xor
sub
mov
add
fs
lods
jb
fdivrp
and
sahf
pushf
jbe
adc
dec
cmp
mov
movsb
popl
icebp
mov
ljmp
pop
popa
adc
jb
inc
pop
je
ljmp
movl
add
pop
push
push
mov
flds
js
sbb
insb
jo
mov
filds
xchg
xchg
mov
mov
push
jnp
test
rcrl
xchg
call
outsl
inc
add
push
sbb
push
and
xchg
mulb
xchg
dec
cwtl
xchg
imul
inc
push
movsb
lcall
or
aad
mov
ret
outsb
ljmp
roll
mov
mov
push
js
push
cmp
xor
aaa
dec
rolb
cmp
mov
je
sub
inc
add
call
mov
push
xor
jge
sub
enter
or
call
pop
inc
sub
sub
aaa
stc
ret
ja
jb
insl
sbb
loopne
test
push
lods
outsb
fstps
ss
adc
push
or
adc
popa
movsl
sbb
pop
outsb
sbb
sub
mov
cli
inc
in
clc
pcmpeqd
adc
es
mov
mov
jp
adc
sbb
cmp
dec
shlb
jo
mov
hlt
pop
push
addl
jne
and
loopne
aam
fsts
cli
rolb
and
push
pop
xchg
push
cmp
loopne
sbb
aaa
xor
je
cmp
sub
in
push
xor
add
sub
int3
adc
or
mov
add
adc
pop
cmp
and
mov
cmp
inc
cmp
jecxz
jbe
movb
jmp
pop
out
xor
sub
mov
xchg
cwtl
imul
aam
sub
xchg
rclb
cmp
in
int3
repnz
fildll
or
punpcklbw
or
inc
mov
test
rorb
movsbl
test
add
fisttpl
xor
cmp
or
es
sbb
sbb
pop
xchg
cmc
out
inc
jge
shll
cmp
pop
movb
dec
mov
mov
fdivrp
movb
es
cmp
mov
mov
mov
xchg
mov
or
lock
adc
and
inc
dec
add
ficoms
adc
or
loopne
jb
dec
nop
dec
mov
add
mov
das
pusha
pop
or
push
xor
mov
pop
inc
pop
mov
or
sbb
outsb
add
rolb
int
pop
mov
pusha
push
xchg
mov
into
cmpsb
mov
inc
mov
and
call
je
out
sbb
jne
mov
lea
iret
cmp
pusha
add
test
movsl
outsl
jp
adcb
jbe
std
and
pop
push
sub
push
push
and
imul
stos
loope
cmp
xchg
push
lock
inc
dec
push
movsb
cmp
inc
dec
push
pop
sub
mov
pop
enter
push
xor
adc
mov
loope
fs
orb
popf
xchg
mov
nop
add
pop
adc
nop
scas
sub
pop
js
jg
int
addl
push
add
mov
cmp
jb
adc
add
adc
arpl
pop
lods
je
add
nop
sub
adc
mov
sbb
hlt
rolb
jbe
int
jbe
in
or
sbb
cmp
jbe
cmp
mov
push
xor
cmpsb
xor
andb
mov
out
and
jge
and
mov
pop
mov
xor
nop
xchg
scas
lds
add
push
sub
cmpsl
lds
xor
movnti
add
sbb
shrb
cmp
imulb
lret
pusha
xor
jo
rol
mov
enter
jp
cld
ss
sub
je
les
cmovns
adc
jne
or
orl
push
mov
jae
push
sbb
callw
dec
loope
inc
movsl
jbe
repz
aas
sub
mov
sub
lods
mov
test
push
shr
nop
rolb
cwtl
and
push
imul
lds
sbb
add
mov
lods
lods
push
mov
and
xor
sub
lahf
adc
stos
test
ficomps
popa
in
ffreep
adc
mov
pop
dec
pop
jns
lock
push
dec
es
sbb
jle
shlb
xchg
mov
and
cmp
push
inc
movsb
icebp
add
es
test
lahf
stos
dec
sbb
or
test
js
aam
sub
mov
mov
pop
jp
cld
cmpsb
in
or
mov
xchg
mov
mov
pushf
push
mov
pop
std
push
mov
jecxz
add
and
push
lock
jbe
add
lods
addl
jno
jge
inc
or
pusha
addr16
xor
pop
or
push
mov
dec
sub
pusha
adcl
add
add
ja
ds
ss
push
or
dec
idivl
xor
and
cmpsl
outsb
sbb
and
sbb
shlb
daa
pop
mov
nop
push
fcomps
in
ret
or
icebp
mov
adc
xor
stos
popa
push
dec
shrb
loopne
fisubs
je
pop
sahf
mov
jbe
push
and
ja
jle
shll
jbe
or
into
cmpsl
sub
xchg
push
pop
jnp
or
inc
dec
jne
push
inc
pop
jl
add
rol
leave
cmp
inc
je
xchg
rcrb
add
xchg
lds
jo
inc
js
cmp
inc
shrl
sub
xor
shll
daa
imul
cmp
out
mov
dec
clc
sbb
and
pop
add
inc
add
or
pusha
cltd
adc
lcall
fcom
and
pusha
inc
mov
bound
cmp
adc
add
jl
jbe
and
leave
dec
or
dec
cmc
jp
ja
ds
and
dec
sbb
lock
or
jmp
imul
roll
fs
lret
or
repz
fcmovbe
mov
ds
stos
xor
out
mov
aad
lock
orl
aaa
sub
movsb
jmp
push
add
pop
push
add
push
out
push
xchg
imul
add
ret
add
pop
lods
sbb
insl
cmp
cmp
jae
leave
and
mov
sub
or
or
sub
lcall
aad
cmp
jbe
sbb
imul
cmp
ret
xor
sub
push
fwait
or
mov
pop
xchg
xlat
ds
mov
sbbl
inc
or
js
or
cwtl
cmp
mov
leave
sbb
pop
xchg
add
add
jns
pop
add
leave
push
aam
pop
xchg
push
add
sar
jo
nop
pop
and
js
inc
nop
lods
sub
nop
add
rcrl
adc
and
pop
add
rcrl
jno
mov
jo
icebp
cmc
xor
jge
leave
sub
mov
adc
add
andl
fcmovb
sarl
test
imul
sti
out
adc
adc
pop
ret
ss
add
je
int
lcall
test
mov
call
test
hlt
or
iret
push
sbb
call
cld
or
add
sub
xor
outsb
add
sbb
push
in
adc
and
adc
fbld
or
push
mov
adc
xchg
sub
and
and
and
and
add
fwait
add
and
and
insb
jle
fcoms
xchg
mov
test
mov
xor
and
and
jl
jns
lods
adc
outsl
push
xchg
int3
push
mov
lds
push
adc
popa
shrl
lock
hlt
ss
test
clc
cld
push
add
inc
or
aad
inc
mov
add
fs
push
or
dec
xor
rorl
loop
movsb
call
mov
inc
stos
cmp
push
clc
add
xlat
ds
addb
sbb
inc
sbb
or
push
sbb
or
add
arpl
add
or
push
push
fs
rorb
test
sub
xchg
add
xor
inc
push
or
enter
inc
scas
std
or
adc
daa
sub
cli
mov
push
es
daa
mov
and
and
cmpb
xchg
inc
adc
mov
pusha
scas
idivl
push
or
dec
or
xchg
jp
test
adc
scas
cmc
mov
jb
push
hlt
xchg
and
pop
and
ret
cmpsl
in
in
sbb
cld
or
add
adc
aam
stos
mul
mov
lret
inc
ss
or
orl
cmp
push
push
xor
test
dec
add
dec
pop
insl
pop
jb
mov
mov
in
mov
in
inc
dec
push
movsb
push
sub
pop
push
outsl
shll
mov
push
adc
ljmp
icebp
arpl
mov
fisttpll
xor
inc
adc
xchg
movsl
cmc
sub
pop
xorb
add
test
sbb
add
dec
pop
lock
add
inc
add
add
cmp
lods
or
aas
xor
sub
pop
push
adc
add
test
sub
inc
lods
in
pop
shr
lret
ret
add
push
je
push
sbb
jo
push
sbbl
and
xor
mov
pop
xchg
outsl
mov
mov
out
push
imull
push
mov
sbb
roll
and
dec
bound
inc
or
mov
sub
or
jo
push
loopne
pop
pop
ret
ja
sub
or
inc
loopne
push
daa
cmp
or
pop
xor
fwait
arpl
push
leave
ss
or
adc
xor
cmpsl
push
ror
sbb
lock
mov
pop
and
jnp
xchg
mov
sbb
bound
mov
sub
aaa
xorb
andl
and
push
dec
push
arpl
push
dec
repz
push
dec
sbb
mov
repnz
or
jg
test
mov
rorl
out
inc
insb
add
push
sub
xlat
mov
dec
cvtps2pd
loope
in
mov
leave
dec
adc
fs
cmp
sarl
jne
fwait
lock
mov
cmp
dec
adc
mov
int3
stos
adc
movl
push
sub
imul
sub
popa
rorl
mov
insl
jmp
sbb
mov
fmulp
xchg
pop
das
sub
dec
push
cmp
or
xor
clc
nop
cmp
mov
xchg
test
sbb
or
add
pop
and
push
mov
mov
shlb
ja,pn
aas
or
xor
mov
jo
xor
mov
cli
fdivrl
outsl
push
adc
std
sbb
inc
jl
adc
gs
test
pusha
fidivrs
inc
jl
arpl
xchg
sarb
sub
pop
xor
xchg
sbb
jecxz
push
jnp
pop
aam
xlat
push
repz
dec
jo
adc
pop
inc
loope
or
shr
fisttpll
insb
popw
adc
xor
cwtl
inc
or
dec
push
cmp
pop
jnp
inc
jnp
jl
lahf
pop
jmp
xchg
mov
mov
push
popa
mov
lahf
adc
jge
mov
sub
pushf
push
adcb
push
jo
insb
pop
lahf
cs
cmpl
clc
insl
loopne
loope
lods
add
lods
popf
pushf
jns
mov
addr16
add
enter
aad
aas
push
inc
mov
mov
test
fdivl
scas
in
add
in
clc
add
pop
lock
out
ds
mov
pop
in
dec
loop
lods
mov
imul
sti
cmpsl
dec
and
mov
jae
cmpsb
jecxz
xor
dec
rolb
sub
movsb
lea
cmp
dec
xchg
dec
cmp
in
xchg
inc
in
rcrb
dec
add
dec
and
push
mov
pusha
mov
push
push
and
test
into
mov
lret
in
xchg
lds
call
jmp
inc
cmpb
pop
xchg
add
adc
pop
jl
pop
rorb
popf
add
pop
sarl
push
xor
cli
lods
adc
dec
cmpsb
stc
or
sbb
jno
push
or
sub
jbe
test
push
scas
and
push
adc
mov
xor
outsb
push
movsl
sub
pcmpeqb
addr16
jbe
pop
fsts
add
sbb
lcall
ret
lods
mov
fcompl
add
aas
xor
add
mov
cld
pop
fwait
push
push
loop
dec
cmpb
test
fcomps
insl
adc
cmp
shll
fs
lods
jge
push
and
dec
mov
sub
mov
dec
or
cmpb
and
loope
cmp
lds
or
lods
adc
add
mov
cwtl
pop
addl
push
adc
arpl
dec
dec
daa
and
clc
andl
xor
adc
mov
pusha
jae
jg
cmp
scas
dec
test
mov
enter
pop
or
push
push
pop
add
xorb
cmp
adc
shll
mov
or
test
adc
push
repnz
or
popa
push
xor
adc
push
push
js
dec
xor
adcb
cmp
and
or
mov
add
and
sub
dec
aad
add
cmp
sti
or
inc
aam
lahf
push
dec
and
or
test
add
jg
sub
adc
and
lods
sub
adc
adc
push
dec
pusha
mov
add
xchg
push
bound
out
mov
pop
dec
faddl
mov
setg
sbb
lds
add
add
lea
fsubrs
pop
aas
dec
mov
push
sub
pusha
adc
imul
inc
xchg
mov
mov
les
addl
sub
sub
inc
fimull
icebp
sub
or
mov
aad
jecxz
add
ret
push
lea
dec
lea
lahf
movsb
out
or
and
jb
sbb
pop
les
xchg
in
sub
loope
pop
in
inc
push
mov
dec
pusha
and
loop
push
pop
mov
cmpb
fsubs
add
sbb
sahf
cld
sub
jmp
or
add
mov
jns
idivb
cmp
add
mov
dec
or
dec
add
inc
mov
call
adc
leave
inc
dec
adc
jl
loop
cs
outsb
add
cs
lahf
ljmp
test
loope
loopne
mov
into
movsb
lock
pinsrw
dec
pop
imul
insb
or
sbb
imul
aaa
push
inc
xchg
sbb
imul
push
or
sub
xchg
outsl
pusha
cwtl
dec
popf
cmp
adc
inc
and
and
lea
and
mov
or
lea
sub
repz
ret
inc
inc
ret
ljmp
jae
mov
cli
push
in
xchg
pushf
clc
jl
lahf
sub
push
js
js
js
fcmovu
pop
dec
loopne
sub
addr16
fwait
shll
call
or
jo
dec
lahf
nop
je
in
push
repnz
or
mov
pop
mov
out
out
ljmp
loopne
push
cmp
push
xor
inc
fisttps
jo
inc
mov
call
sub
aad
add
fs
lret
dec
aas
and
or
test
or
sbb
jl
enter
cmp
cwtl
and
sbb
dec
adc
int3
aas
or
pop
or
adc
and
aas
xchg
add
sub
adc
lea
pop
pop
push
mov
shrb
je
add
sbb
enter
lahf
adcb
mov
aaa
cltd
fists
aaa
pop
mov
push
jb
and
xchg
or
mov
inc
test
mov
pop
dec
add
push
daa
push
add
add
push
adc
cli
inc
out
pop
cs
lahf
inc
mov
popf
test
inc
insb
mov
push
mov
add
enter
pop
cwtl
sbb
insl
jge
sub
arpl
adc
pop
push
xor
sahf
sarb
jg
das
xchg
jbe
and
loopne
or
call
in
lock
scas
clc
or
add
lods
jb
movsb
xchg
xchg
frstor
jecxz
xchg
inc
and
inc
ljmp
in
inc
out
shlb
sbb
cmp
add
jle
push
push
cld
push
push
dec
rol
add
or
jnp
adc
push
pop
in
and
mov
and
stc
fsub
xchg
adc
adc
add
stc
push
push
pop
enter
jecxz
lds
mov
push
push
rclb
cmpsl
and
cltd
add
push
dec
xor
jge
mov
jmp
push
push
fsubs
or
sub
orb
push
jp
adc
test
push
push
pop
shl
xchg
adcb
push
test
sbb
loope
inc
xchg
sub
xor
inc
rcrb
cli
ss
ficoml
das
enter
mov
sub
add
and
inc
popf
cmpsb
add
dec
add
cwtl
gs
addl
push
sbb
mov
sbb
pusha
fs
call
imul
in
dec
dec
test
push
aas
pop
adc
or
pop
loope
adc
or
xchg
pop
in
mov
xchg
jbe
or
jae
mov
xor
add
pop
imul
pop
add
and
push
dec
sbb
inc
ret
sti
adc
lea
or
rorb
mov
or
lods
inc
insl
test
orb
iret
cs
sbb
lahf
inc
mov
push
pop
subl
pop
loope
repz
or
mov
dec
pop
lahf
adc
jle
dec
jle
cmp
sbb
cmp
clc
dec
and
mov
xorb
inc
push
push
fsubr
add
cmp
clc
or
popa
bound
sbb
cmp
xchg
dec
hlt
lock
xchg
dec
lcall
cwtl
pop
xor
rclb
pop
jecxz
push
lret
push
mov
push
movsb
pop
popf
sub
cmp
sub
cwtl
lods
mov
cmp
jns
mov
mov
mov
mov
fistpll
int
cltd
push
dec
or
jne
addl
fistpll
cld
das
dec
and
or
jl
mov
xchg
repnz
add
xchg
add
push
pusha
xlat
aad
inc
cs
pushf
cmp
lock
dec
loope
sbb
cld
gs
sbb
call
pop
mov
dec
mov
or
pusha
or
jg
gs
xchg
cli
inc
call
fcoml
sub
andb
dec
pop
cmp
dec
push
add
xor
rcrl
dec
mov
sbb
and
lea
sbb
imul
pop
scas
inc
or
xor
stos
orb
sbb
mov
push
add
sbb
sub
add
aaa
add
je
add
popa
lret
add
mov
or
sbbl
jne
xor
push
push
enter
xchg
adc
add
jecxz
andb
sub
xor
sbb
and
dec
dec
loopne
shl
sbb
xor
pop
xchg
sbb
mov
xchg
cmp
in
popf
add
sbb
push
jl
pushf
ret
inc
and
je
mov
lods
and
xor
and
insl
mov
mov
dec
dec
sarb
loopne
mov
cmp
nop
cs
lahf
aas
mov
pop
or
daa
lds
mov
scas
xchg
cmc
fildl
stos
adcl
adc
jb
out
pop
pusha
or
outsb
inc
mov
clc
enter
shll
lea
loope
add
ljmp
lea
data16
lea
pop
cld
push
bsf
push
cmp
iret
dec
jns
lea
mov
inc
daa
and
inc
push
mov
test
sub
add
pop
pop
sub
repz
mov
scas
dec
adc
add
xorb
inc
adc
add
jle
ret
push
mov
push
push
jbe
and
and
and
loopne
inc
or
mov
adc
adc
adc
add
jo
cmp
pop
pop
mov
andl
push
imul
inc
and
sbb
dec
mov
mov
inc
xor
jnp
sub
sub
dec
fistps
loopne
ficoml
or
insb
xor
add
fadd
add
xor
push
jecxz
and
sbb
xor
in
inc
and
dec
adc
push
stos
add
rorl
add
mov
roll
push
push
xor
ja
fldcw
inc
xor
inc
pop
and
mov
es
aad
test
add
xor
jmp
mov
adc
dec
push
mov
lock
inc
outsb
pushf
ds
xorb
sub
pop
dec
inc
loopne
sbb
add
jecxz
xor
loopne
and
repz
adc
nop
push
add
push
push
xor
or
adc
jo
mov
sbb
push
pop
mov
je
je
test
testb
sbb
push
sub
enter
sahf
cmpsb
jne
and
or
pop
or
xor
push
cltd
lods
push
lret
repz
lods
cltd
addr16
pop
push
sub
sahf
dec
adc
insb
popa
sbb
push
add
aam
mov
jge
push
ja
subb
aam
mov
xor
push
mov
sbb
xor
inc
mov
pop
faddl
into
in
add
jge,pt
dec
inc
imul
sbb
ja
mov
or
dec
shl
mov
xorb
mov
mov
push
out
inc
or
sub
cs
dec
orl
ret
lea
push
fadds
push
xor
lret
ljmp
inc
and
pop
sbb
in
sub
mov
adcb
sub
mov
and
aam
fcompl
pop
subb
lods
ja
pop
rorl
rcrl
and
cmp
sbb
add
or
pop
sub
sbb
or
lods
mov
mov
or
subl
jb
adc
outsl
xchg
adc
pop
mov
add
adc
sub
pushl
aaa
insb
test
pop
push
aaa
cmpb
loopne
push
je
fidivs
cmp
mov
insl
and
dec
add
mov
fwait
bound
push
imulb
mov
pop
inc
jnp
jp
pushf
fldenv
call
push
pop
out
adc
das
mov
pop
jns
pop
ret
mov
pop
popl
or
out
pop
pop
dec
mov
or
pop
addb
loope
dec
mov
push
cmp
jecxz
xor
and
sbb
cmp
sub
cmc
test
pop
push
addb
or
sbb
dec
pop
mov
scas
adc
dec
jns
mov
pop
nop
xorl
mov
sbb
dec
mov
add
fmuls
pushf
loopne
add
pop
add
das
rcll
inc
and
inc
ret
aas
add
fs
or
insb
and
leave
inc
mov
sbb
aam
rolb
jnp
adc
push
pop
adc
or
mov
lock
mov
inc
add
cmpsb
jne
flds
and
pop
imul
test
or
xchg
mov
inc
pusha
xor
montmul
cmpsb
test
push
cli
mov
movl
popf
pop
xchg
orb
adc
sub
and
movsb
jo
xchg
adc
jns
push
sbb
je
mov
xchg
mov
adc
push
ja
adc
jne
push
push
or
repnz
pop
lock
out
and
adc
jp
cmp
mov
in
mov
sbb
or
and
sbb
xchg
push
cmpsb
xor
inc
sbb
inc
mov
inc
mov
jns
insl
add
dec
dec
gs
xor
pop
rclb
mov
push
and
subb
sub
sbbl
and
or
mov
inc
pop
xchg
pop
aam
mov
mov
xorb
imull
ret
cwtl
inc
lock
lods
jg
fsubrl
pop
adc
sbb
testb
mov
sbb
out
dec
mov
in
rcrb
pop
lret
es
sbb
sbb
pop
pop
test
mov
or
outsb
pop
shl
pusha
and
push
cmpb
pop
xor
mov
xchg
and
add
cltd
push
lcall
loope
addr16
inc
mov
mov
sub
aam
pusha
out
inc
mov
setge
adc
es
pop
enter
or
popa
imul
or
clc
call
insl
jmp
mov
xchg
sbb
dec
in
inc
push
or
inc
xlat
aas
push
jp
cltd
sub
jo
movsl
push
inc
adc
push
push
mov
lahf
jae
or
sahf
les
insl
sub
xor
int3
scas
xchg
movsl
sbb
cmp
jp
sbb
sbb
dec
mov
sbb
dec
jecxz
lock
daa
xor
aas
cmp
xor
pop
test
jle
ret
rcrl
xor
adc
or
daa
lahf
inc
sbb
and
or
sub
aam
fstpt
cwtl
pusha
loopne
aaa
push
add
xor
sbb
dec
rclb
cltd
adc
es
inc
mov
ret
lds
add
ja
push
inc
inc
inc
and
add
push
push
or
hlt
mov
cmc
sub
sahf
cmp
sub
inc
xor
pop
or
es
in
inc
xchg
rcrl
cltd
push
and
xchg
or
mov
mov
test
nopl
cmp
inc
into
mov
push
cmpsb
loopne
push
xor
shlb
or
mov
loope
push
mov
loop
cmp
mov
mov
fwait
mul
sub
dec
mov
out
xchg
dec
je
and
sbb
lret
mov
or
sub
lods
push
push
sahf
je
sarb
or
push
xchg
mov
dec
loopne
or
shlb
adc
mov
push
daa
mov
pushf
adcb
lcall
xor
xlat
sbb
movb
or
sbb
and
imul
cld
xor
cmp
and
mov
dec
aaa
dec
movsb
adc
mov
adc
sbb
lcall
cmpsb
insl
jbe
pop
add
pusha
fs
shlb
dec
and
lods
adc
popw
imul
fsts
add
clc
xchg
xchg
nop
and
inc
scas
leave
pop
sbb
nop
push
add
ds
xor
dec
sbb
add
xchg
sbb
popl
mov
rolb
in
pop
dec
callw
dec
push
xor
stos
push
sbb
ja
add
add
or
xor
push
sbb
add
xchg
sub
arpl
mov
shl
inc
stos
imul
sub
cmp
add
add
pop
jo
imul
add
push
mov
not
and
mov
or
xor
add
pusha
xor
sbb
dec
sahf
and
aam
push
xor
dec
les
push
inc
test
push
call
xor
push
imul
or
cmp
push
aam
push
hlt
int
rcrb
cmp
add
pop
inc
in
pop
dec
imul
push
insb
rcrl
sub
adc
add
adc
loope
push
lcall
pushf
dec
pop
cwtl
dec
lcall
sub
test
inc
inc
jecxz
mov
aaa
push
call
movsl
subl
jne
roll
loopne
dec
push
cwtl
and
rcr
pusha
adc
inc
mov
mov
inc
mov
dec
xor
pusha
xor
push
or
xchg
jl
mov
add
pop
mov
in
rcl
ss
push
fcmovb
lds
aaa
dec
pusha
fstps
push
add
lock
mov
xchg
and
add
push
outsl
xchg
lods
fwait
cwtl
repz
adc
pop
inc
mov
adcb
dec
mov
movsb
push
sbb
mov
add
shrb
and
cmc
cmp
pop
rcll
bsr
lds
adc
popa
fmulp
inc
adc
adc
filds
sub
or
or
loopne
mov
sti
push
xor
inc
xchg
mull
sub
and
lcall
aaa
ret
sub
pushf
in
cmova
cmc
and
clc
mov
sub
jbe
push
or
js
lds
bndstx
dec
pop
sar
push
pop
adc
sbb
jle
js
call
push
and
data16
ss
cmp
or
repz
pop
nop
sub
push
push
ret
andb
or
sbb
sbb
les
inc
andl
cmpsb
mov
or
inc
pop
jnp
adc
push
push
out
xchg
cmc
repnz
jp
jmp
add
lret
pop
sbb
add
ret
enter
push
adc
stc
fimull
sbb
mov
sub
push
out
test
push
mov
sub
leave
inc
push
adc
xchg
push
add
push
push
popl
xchg
jg
adcb
pop
xchg
mov
sbb
sbb
push
dec
pop
dec
xchg
sarb
ret
ljmp
das
adc
and
add
add
andb
int
lret
or
and
inc
cmp
jae
or
add
pushf
push
ds
sbb
dec
xchg
bound
daa
pop
xchg
jne
outsl
sahf
movsb
imul
xchg
xchg
push
pushl
jle
push
and
add
mov
sbb
sbb
jmp
nop
iret
push
or
jg
lock
jne
add
adc
cs
mov
sbb
mov
iret
mov
or
lea
lods
xchg
pop
aas
js
inc
dec
arpl
loopne
dec
aas
pop
add
cltd
sub
stc
cmp
mov
push
xor
in
adc
js
sub
add
movsl
jecxz
cmp
loopne
and
add
jmp
test
cwtl
insb
xchg
inc
cltd
and
out
inc
xor
jne
or
test
push
rcll
push
and
or
inc
aam
mov
xor
mov
add
or
add
lock
fwait
mov
or
or
es
inc
adc
push
mov
cmp
inc
popf
and
push
or
and
or
jo
jl
lods
fiaddl
xor
mov
push
mov
xchg
jecxz
dec
xor
push
int
push
mov
shr
fildl
sbbb
jns
jle
add
ret
fiaddl
lret
ret
sub
and
inc
and
adc
add
cmpsl
sub
jmp
inc
sbb
or
js
pop
add
push
lods
push
rcrl
jne
shlb
inc
gs
call
xchg
add
add
dec
movsb
pop
subb
sbb
push
pusha
mov
in
cmp
cs
incl
mov
imul
sub
mov
dec
pop
dec
sti
hlt
pop
adc
rorl
push
fsub
inc
rolb
and
fimull
dec
cmpsb
adc
jns
add
push
inc
mov
dec
jle
add
lds
inc
rolb
mov
pop
rcrb
pop
add
add
or
xchg
xor
mov
ret
clc
pop
xchg
dec
and
push
push
xor
sbbb
and
cmp
adc
add
roll
push
rolb
fdivrs
sub
cmp
push
and
xchg
push
cmpl
call
and
test
add
lods
inc
clc
adcl
lea
mov
inc
inc
mov
fcom
fsts
mov
xchg
push
shll
rcr
das
jo
sarb
inc
inc
pusha
xchg
movaps
and
inc
shlb
mov
and
push
hlt
cltd
call
xor
dec
jl
lret
adc
shrb
adc
push
mov
pop
sub
mov
inc
push
xor
or
adc
xorl
mov
mov
sub
push
dec
cmp
hlt
xor
cli
outsb
push
aad
sub
ficomps
int3
enter
jle
rcl
sub
movsb
jmp
out
jnp
in
xchg
scas
push
addl
inc
adc
lcall
cmp
lock
ljmp
mov
fsubl
or
add
out
push
mov
jae
in
push
pop
imul
fdiv
push
dec
push
inc
stos
test
adc
cmpsb
loopne
adc
adc
loopne
add
int3
xor
jns
push
push
push
inc
pushf
add
aad
sbb
inc
push
fstl
mov
sub
push
mov
lock
jne
dec
or
push
push
jo
add
mov
push
sbb
mov
inc
adc
mov
pop
mov
daa
pop
fs
dec
inc
sbb
inc
rcr
push
and
pop
lea
push
nop
rcrb
fmul
fimuls
push
mov
add
mov
out
dec
rcr
sbbl
int
pop
repz
xchg
cmp
push
loopne
fsubl
shll
adc
mov
sbb
pop
mov
pop
pusha
push
lock
dec
out
fs
add
cmp
inc
jo
fs
lds
fildll
lea
subb
ret
inc
leave
or
pop
jo
rcll
or
or
jae
aad
orl
sbb
jbe
xor
dec
jns
int3
jmp
popa
insb
and
and
call
aas
and
iret
lea
fadds
or
sub
mov
dec
data16
orb
push
pop
jg
rcll
es
leave
in
or
jne
pop
pop
shll
ds
push
inc
imul
outsb
fidivl
arpl
ret
xchg
shl
push
xlat
fldl
pop
mov
push
xchg
cltd
test
push
pop
je
fcomi
fmulp
addr16
pop
pop
pop
or
fdivr
addr16
push
dec
xor
adc
and
jae
pop
mov
sbb
repnz
in
sarb
inc
add
sbb
rclb
push
mov
adc
add
add
xchg
hlt
in
push
movsl
inc
dec
sub
in
addr16
sbb
push
in
or
sub
or
daa
add
xchg
lock
mov
nop
inc
sub
or
adc
scas
pusha
test
mov
popa
pop
jo
int
or
mov
sub
cmp
es
adc
stos
pusha
aaa
sbb
les
dec
in
stos
or
sub
or
pop
jo
sbb
push
adc
pop
dec
xchg
cmc
insl
adc
or
dec
dec
rorb
loop
imul
push
lahf
adc
adc
sub
lea
sub
add
mov
inc
les
sub
inc
mov
shlb
mov
inc
mov
or
pop
push
push
inc
inc
or
xchg
push
ret
andb
repz
cmp
push
rclb
andl
add
mov
mov
out
adc
pop
in
lahf
ret
movsl
inc
and
jle
int
out
insl
cld
sub
pop
mov
movl
loop
mov
fisubrs
daa
mov
push
dec
and
jge
nop
cmpsl
add
mov
data16
imul
mov
mov
cmpl
je
jp
gs
mov
and
nop
mov
cmp
jns
scas
js
loopne
es
adc
push
mov
jl
push
pop
add
mov
ret
pop
out
inc
jb
dec
sub
or
les
negb
sub
emms
or
adc
pusha
push
and
and
lea
add
loop
inc
jbe
roll
cmpb
inc
out
xchg
jnp
pop
xlat
arpl
push
cmp
lods
test
fldenv
sbb
ret
sub
push
or
mov
add
inc
ja
or
adc
inc
push
xor
pop
ret
movsl
or
fcoms
cs
xchg
lods
xchg
ja
ss
push
xor
pop
push
outsb
or
fcmovnu
pop
or
clc
xchg
push
xchg
push
or
mov
loope
push
punpckldq
xchg
sub
ds
mov
xor
mov
in
jmp
adc
or
aad
loop
cmp
push
jmp
inc
test
add
mov
jmp
inc
test
rclb
xchg
test
rorl
sbb
xorb
sub
dec
mov
inc
in
pop
popa
or
add
xchg
sbb
subl
fistl
sbb
xor
fsubl
rcrb
sub
cmp
rol
add
fwait
sti
loop
pop
shll
test
push
and
test
in
test
xchg
addl
sbb
push
pop
adc
push
int3
orl
or
sbb
in
add
mov
and
fs
hlt
movsb
lods
dec
fs
orb
enter
mov
movsb
mov
jg
sahf
bound
xchg
out
aam
pop
add
ss
push
repnz
pop
adc
les
sub
rcrl
xor
test
mov
lds
or
dec
cmpb
test
test
jg
pop
sbb
add
push
pop
add
mov
sbb
pop
jp
in
popa
fsubs
adc
fwait
adc
fs
push
inc
sub
dec
outsb
pop
dec
sub
add
add
xchg
mov
adc
dec
scas
pusha
or
pushf
xor
mov
push
pop
cmpsb
mov
or
mov
int
adc
xor
movsl
adc
push
jb
or
push
push
in
gs
pop
add
lcall
push
int3
mov
stos
inc
movsb
push
push
mov
dec
popf
cmp
mov
dec
and
push
xchg
test
sub
adc
stos
add
push
inc
xchg
loopne
add
xchg
sahf
incl
lds
std
mov
cmp
xchg
sub
inc
or
dec
and
or
and
mov
adc
dec
and
shll
jmp
stos
xchg
and
adc
push
mov
lods
xor
xor
inc
and
and
add
sub
push
jl
dec
push
dec
outsl
cmp
or
andps
jp
addb
imul
sbb
jns
inc
cwtl
inc
inc
inc
xadd
jecxz
add
mov
pop
jo
inc
rolb
loope
jbe
imul
xchg
call
pop
xchg
inc
inc
loope
mov
adc
adc
add
add
aad
xchg
mov
adc
add
xor
xor
pop
mov
pop
adc
adc
pop
in
add
push
jp
out
jecxz
cmp
pop
mov
push
cmp
sbb
sub
dec
outsl
adc
idivl
pop
out
add
sbb
push
nop
inc
lock
sub
imul
xchg
mov
sbbb
call
addr16
add
add
sub
dec
addl
inc
scas
aas
wrmsr
rcll
xor
nop
mov
adc
push
dec
and
mov
jle
mov
lahf
into
sbb
lret
mov
add
add
test
loope
adc
push
pop
pop
test
orl
popa
xor
out
roll
add
dec
inc
mov
jmp
mov
mov
jne
mov
pop
add
ret
and
or
mov
aaa
add
pushf
xor
or
xchg
popf
mov
sub
push
insb
faddp
add
insl
out
pusha
xchg
test
int
cmp
push
adc
cmp
stc
push
and
adc
sarb
xchg
push
jnp
das
push
mov
jl
jl
cmp
loop
mov
movsb
and
rcrl
xchg
das
and
aad
add
mov
sub
and
adc
lods
add
push
jns
rolb
push
xor
out
scas
sbb
in
pop
push
jl
xor
and
cmp
pushf
add
js
sbb
lock
jge
and
jmp
sub
add
loopne
nop
or
mov
nop
or
mov
aam
insb
push
push
sub
or
in
inc
cmp
pusha
cltd
sbb
adc
cmp
mov
jg
jg
push
andl
sbbb
jnp
in
xor
dec
push
mov
cmp
sub
cmp
pop
subb
and
push
push
mov
or
xor
or
out
sbb
ss
xor
mov
dec
dec
sub
push
or
push
sbb
or
repnz
aam
xchg
test
sbb
stos
sub
sub
nop
lods
jno
enter
or
adc
mov
or
and
xchg
adc
movsb
cmp
push
rclb
jle
pop
enter
jle
leave
and
cmp
mov
and
mov
call
fidivrl
mov
and
mov
popa
ja
lcall
fildl
sbb
jns
lods
iret
add
add
add
dec
loopne
or
push
add
add
push
pop
add
in
test
arpl
call
adc
shlb
test
ss
in
lea
add
lret
jo
cmp
cld
cwtl
push
adcl
mov
add
pop
pusha
and
in
shlb
add
mov
and
cmp
lcall
add
xor
pushf
gs
xor
xor
push
icebp
ja
stc
cmp
stos
xchg
push
scas
stc
sbb
dec
addl
mov
aas
cwtl
mov
push
lahf
aas
jge
incl
cmp
pop
mov
shlb
int3
jne
ja
sub
inc
cld
fiaddl
mov
push
or
lret
push
mov
dec
sub
out
and
inc
mov
inc
or
testl
imul
and
and
test
lea
push
inc
sbb
movsl
jo
sbb
mov
mov
into
sbb
fldt
icebp
mov
and
or
cmp
sbb
je
jl
dec
loopne
icebp
test
xor
in
repnz
sub
mov
push
adc
pop
mov
loope
or
pop
or
sub
jae
adc
jbe
mov
dec
lods
and
pushf
and
add
in
sbb
subb
cld
sbb
test
and
and
rcrb
mov
sti
pusha
lret
ljmp
dec
push
sub
add
sub
test
in
fcomps
scas
pop
sbb
ret
add
ret
inc
xor
xchg
xchg
ret
jbe
ret
sub
xchg
les
fbstp
pop
adc
inc
sub
loopne
int
mov
adc
jne
sub
pop
std
sbb
andb
adc
in
mov
subl
cmp
mov
jbe
dec
loop
jo
xchg
push
or
push
dec
or
ja
rcrl
cmp
sbb
and
fdivrs
xchg
add
clc
sub
popf
mov
je
adc
xchg
sub
xor
or
mov
gs
pusha
push
and
pop
mov
sub
mov
insl
outsl
xor
fidivl
dec
pop
ret
push
pop
fldenv
fdivrs
dec
pop
xor
sub
int3
dec
sbb
inc
mov
mov
xchg
add
dec
arpl
addl
adc
mov
mov
jno
pop
jo
lahf
test
rcrb
jno
push
pop
push
add
add
xchg
bnd
dec
push
jp
popf
nop
add
sub
xor
mov
add
popl
lods
xor
shrb
arpl
lahf
lcall
and
shlb
sbb
pop
push
jns
adc
dec
jecxz
sub
pop
imul
cmp
dec
jle
adc
sub
int
test
inc
dec
xchg
loop
add
pop
inc
mov
and
cmp
lds
aam
xchg
jg
jp
arpl
fs
inc
rolb
aad
and
cltd
cli
or
dec
lods
mov
in
cli
fs
aaa
jmp
rol
mov
call
add
es
jnp
daa
imul
or
imul
sti
inc
add
pop
sbb
or
dec
fmuls
ja
add
loope
cmp
cmp
inc
shlb
rcll
pop
rorb
adc
mov
xchg
push
xchg
mov
sbb
cld
in
mov
jo
sti
js
sub
push
fstpl
adc
faddp
rcrb
push
leave
sti
lcall
int3
out
inc
jecxz
andb
dec
pop
dec
add
mov
call
push
in
fsubs
ret
lds
int
movsl
inc
sub
jo
adc
push
inc
cmp
dec
or
cld
cmpsl
xor
push
push
cmc
push
pusha
pusha
lahf
lods
jbe
daa
xor
jne
mov
test
cmp
push
ret
dec
imul
inc
mov
jo
push
push
nopl
pop
roll
roll
nop
fidivrl
sub
or
mov
ljmp
int3
jno
in
jp
and
mov
or
sub
push
cmpsb
add
dec
push
hlt
mov
mov
xor
jl
mov
pop
xchg
lock
hlt
mov
inc
clc
dec
cld
push
mov
aas
mov
mov
add
pop
add
push
or
pop
sub
or
pusha
cmpsl
sub
cmpsb
shlb
cmp
and
xchg
jo
jno
add
imul
filds
dec
test
xor
sub
sub
dec
sbb
mov
adc
xchg
xchg
xchg
xor
je
push
test
xchg
lock
jmp
les
push
psllw
arpl
scas
mov
dec
and
lea
cmp
jne
mov
aaa
xchg
push
cmp
aaa
xchg
or
sub
out
add
and
sbbl
and
push
and
adc
xor
sbb
test
stc
jge
into
std
pusha
mov
xchg
mov
dec
out
add
testb
idivb
inc
loop
cmp
adc
leave
cmp
pop
adc
xchg
sub
mov
push
mov
pop
sysenter
outsl
repz
cmp
ja
pop
pop
push
dec
mov
adc
scas
mov
push
out
rolb
in
lock
popf
adc
push
loopne
arpl
hlt
sub
je
ds
xor
jo,pn
mov
lahf
roll
enter
mov
testb
xchg
fs
sub
in
cmc
push
jae
add
xor
add
add
inc
jbe
fcoml
mov
es
adc
xchg
mov
pop
movb
fnsave
jo
daa
cmpsl
inc
daa
addb
xchg
sbb
push
dec
rcrb
push
add
mov
pop
push
lea
push
push
dec
aas
dec
xchg
mulps
add
addl
dec
rorl
xchg
adcl
pop
mov
test
sbb
cltd
sub
xor
xchg
jg
sbb
fimull
int
gs
and
clc
jno
orl
or
icebp
pushf
or
add
std
push
cmp
or
push
mov
fdivrl
je
pop
dec
arpl
aam
add
fs
and
lea
rolb
adc
nop
add
or
in
jno
add
xor
inc
cmp
aam
dec
inc
add
pop
pop
mov
js
xorb
push
mov
xor
sti
pop
test
ss
inc
pop
adc
dec
dec
pop
and
rolb
inc
aad
les
mov
xchg
incb
in
dec
add
sahf
insb
mov
add
mov
add
push
arpl
add
and
lea
push
out
sub
cmp
fs
dec
scas
mov
rcll
push
out
or
negl
stos
dec
shl
or
nop
call
pop
mov
in
pushf
mov
cmpsl
push
sar
into
sub
loop
loopne
mov
test
push
mov
iret
and
adc
add
xchg
or
std
test
lcall
ret
sub
int
or
add
jge
imul
jb
nop
pop
jb
mov
insb
out
dec
or
jbe
or
cmp
cmp
xchg
insb
jge
and
fidivs
sti
les
lret
push
adc
gs
mov
mov
and
mov
push
rcll
test
lds
and
push
je
push
ss
dec
mov
sbb
clc
xor
xchg
imulb
jmp
sub
sbb
push
add
mov
pmaxsw
sti
popf
push
mov
fldenv
mov
mov
roll
aas
daa
mov
adc
fdivs
mov
pop
mov
cmp
push
push
push
cmp
jnp
inc
and
inc
pop
cmp
push
loopne
cmp
mov
fldcw
pop
push
dec
ret
sarb
stos
mov
loope
sarb
dec
dec
xchg
ljmp
add
add
mov
and
ljmp
mov
and
adc
test
or
or
sbb
rcr
jo
cwtl
sbb
push
pop
pop
enter
xchg
mov
dec
les
xor
fucomi
jp
call
scas
mov
jae
out
sbb
sub
dec
add
ss
dec
fistl
inc
cmp
inc
mov
in
mov
xchg
xchg
sub
es
test
mov
xchg
pop
add
add
xchg
pop
pop
pop
mulb
jns
das
mov
pushw
in
lds
add
pop
xchg
pop
add
sub
add
repnz
std
push
add
or
and
test
and
fimuls
sahf
and
movsl
pop
sub
dec
fcmovnu
fdivrs
adc
fsubrs
std
int3
flds
sbb
push
add
adc
add
or
push
xchg
inc
cld
movsb
xor
or
rcrb
xor
xchg
mov
inc
lcall
mov
pop
mov
cltd
sbb
pop
mov
push
aas
or
adc
or
mov
inc
mov
bound
xchg
add
sub
dec
fmuls
repz
aas
fs
loop
int3
sub
mov
mov
mov
push
push
jmp
ret
push
adc
mov
or
ja
ret
mov
aam
mov
and
mov
bound
cmp
jle
push
push
inc
adcl
xor
sub
jne
adc
sbb
adc
pop
inc
in
ficoms
cld
adc
xor
inc
fistpl
sarb
fwait
or
inc
mov
xchg
test
pop
mov
mov
xor
push
test
pop
ja
sbb
cmp
dec
pop
addr16
fsubl
out
divb
and
arpl
pusha
mov
fsts
and
xor
insl
inc
sbb
test
aaa
mov
xor
dec
mov
cli
dec
push
das
sahf
jp
outsl
adc
pop
out
mov
in
jmp
gs
inc
call
lcall
scas
mov
sub
ret
pop
out
mov
ljmp
mov
ss
or
lea
or
pop
ret
jecxz
lds
jns
ja
sbb
sub
call
xor
xor
sub
int3
lods
and
inc
or
ja
es
cmp
xlat
xor
inc
jae
psllq
outsb
push
dec
pop
iret
fwait
mov
int
loopne
adc
jge
aaa
js
jne
lahf
bound
jl
adc
jnp
pop
add
testl
popf
sub
in
mov
rep
add
roll
loope
lods
xor
push
add
mov
nop
jnp
add
repz
mov
rolb
pop
sahf
add
in
fidivrs
nop
repnz
int3
push
sbb
add
xchg
xchg
add
push
jmp
pusha
add
and
addb
or
pop
jns
hlt
push
int
cwtl
clc
popf
sub
adc
inc
lods
push
cmp
add
rcrl
shl
sub
inc
repz
mov
movsl
sti
sbbl
sahf
ficoml
imul
inc
iretw
push
loop
jl
lea
cmp
fadds
push
lods
subl
aaa
mov
iret
cmp
jmp
test
xchg
lds
adc
and
in
mov
mov
lods
xchg
and
scas
jo
jl
inc
push
push
es
lcall
clc
xor
adc
xchg
lock
pop
push
xor
pusha
mov
aad
and
add
dec
fildl
push
push
sahf
les
pop
dec
rcrb
inc
add
xchg
aaa
pop
add
xchg
sahf
popa
jno
pushf
addr16
jns
pushf
and
aas
mov
dec
dec
push
hlt
pop
popf
mov
mov
mov
test
add
or
jecxz
xor
jnp
enter
dec
mov
pop
into
push
aad
jecxz
popa
inc
inc
lahf
fiadds
mov
adc
push
in
fs
loopne
jne
aas
pop
inc
mov
or
push
imul
adc
in
lret
mov
cld
ret
aas
fstps
adc
fistpl
add
ror
add
ret
popa
or
test
nop
test
outsb
mov
mov
adc
shlb
sub
xlat
dec
cmpsb
adc
ret
in
outsl
xchg
add
add
adc
rolb
sub
aaa
or
lea
andb
sub
sub
and
fiaddl
xorl
enter
bound
aaa
adc
imul
es
gs
and
sbb
cwtl
sbb
addr16
sbb
add
push
adc
add
mov
mov
sub
rolb
mov
mov
shlb
add
sub
inc
push
out
mov
insb
mov
push
xor
or
je
stc
andb
int
imul
and
addr16
dec
adc
mov
mov
jmp
push
addb
push
dec
or
mov
dec
mov
insl
push
push
inc
imul
out
xor
out
dec
adc
insl
fsubp
and
lock
mov
dec
jae
pop
roll
cmp
push
and
stc
fisubl
cltd
adc
add
adc
hlt
dec
inc
xchg
insb
mov
mov
add
or
dec
dec
mov
or
sbb
push
adc
inc
or
sarb
cs
or
movsb
push
inc
adc
jb
lea
or
lea
jecxz
sub
call
arpl
dec
mov
js
push
and
dec
mov
shlb
sbbl
adc
jne
adc
cmp
inc
fistps
and
ret
jns
adcb
mov
rorb
xor
insl
add
sub
pop
imul
mov
xchg
sub
lods
push
adc
cli
fbstp
fistpl
sbb
pop
mov
pushl
xchg
push
or
je
add
notrack
in
jb
jl
inc
mov
mov
enter
lcall
nop
and
xchg
lcall
xor
mov
fucomip
test
or
mov
mov
inc
enter
and
xchg
fidivrl
gs
xchg
pop
xchg
lahf
inc
ret
mov
mov
and
cmp
adc
rolb
cmp
sbb
das
or
mov
push
dec
js
adc
fcmovb
roll
or
lea
pop
fdivrs
out
test
xchg
xor
dec
add
add
pop
inc
pop
ret
and
cmp
ret
pop
sbb
inc
adc
lahf
outsb
shll
pop
ss
add
xchg
adc
dec
andl
mov
and
scas
mov
mov
fwait
cltd
push
loop
dec
push
push
addl
lret
mov
int3
aam
nop
jp
loope
add
ljmp
and
add
pop
jp
jecxz
push
mov
adc
lahf
adc
inc
pusha
mov
mov
pop
decl
and
imul
cmpl
jle
jg
or
test
push
insb
pusha
imul
cmpl
inc
aaa
rorb
add
outsb
cmp
or
or
or
or
or
sbb
shl
sub
push
ret
xor
adc
pop
test
in
mov
mov
inc
addl
sbb
adc
inc
in
jo
or
adc
or
or
sub
call
lea
push
or
push
stc
and
jecxz
and
xchg
and
cs
ja
xor
sub
inc
stc
rclb
aad
pop
pop
mov
fs
cmpsl
jmp
pusha
jo
adc
jb
sub
push
adc
mov
bound
mov
les
lds
into
or
add
sbb
xchg
xor
adc
jnp
cmp
outsb
sub
cmp
push
lea
popa
jb
lret
sub
fiaddl
jnp
pop
gs
xor
sub
stos
test
shrl
cmp
cmp
xor
pop
mov
jae
sub
push
dec
sbb
and
jb
add
bound
repz
mov
out
addr16
and
movsb
pushf
popa
shll
mov
test
sbbl
dec
xor
sub
addl
or
ds
add
movsb
jb
sbb
inc
and
xor
pop
push
fadd
mov
lcall
xor
and
add
sub
lods
mov
inc
or
icebp
movsl
mov
add
and
xchg
xchg
push
std
js
push
fnstsw
sub
dec
pusha
adc
aaa
sbb
in
das
sbb
ss
jo
fcmovnb
in
push
cmpsb
adc
inc
lods
cmovnp
cmpsb
movsl
aam
pop
cld
and
dec
std
lea
lea
movb
sahf
mov
lods
ret
aaa
push
lret
or
inc
mov
pop
inc
jb
ljmp
in
push
push
in
in
lods
pop
push
lock
enter
push
sbb
mov
xchg
push
aam
jmp
push
cwtl
add
mov
dec
dec
dec
test
je
push
out
push
in
xchg
scas
insl
pushf
out
pop
test
sbb
lret
mov
pop
add
dec
lea
mov
mov
xchg
ljmp
test
aam
adc
enter
shlb
sbb
push
shll
xchg
aam
push
adc
mov
movsl
mov
out
pop
pop
push
enter
mov
loopne
cmp
mov
popa
jp
pop
sbb
push
mov
adc
push
lahf
or
imul
into
mov
cld
pushl
pop
or
lcall
clc
aaa
adc
jne
shll
lods
int
sbb
xor
or
and
bound
enter
lods
sbb
cmpsl
lmsw
xchg
add
andl
mov
stc
jno
push
movsb
xlat
sbb
mov
or
sbb
mov
adc
mov
and
flds
test
orl
ret
xor
pop
and
push
push
push
sub
outsl
ljmp
lea
jae
sub
sbb
xor
pop
push
mov
adc
sbb
push
dec
fstpl
adc
jle
dec
or
sub
mov
adc
xchg
pop
cmc
pop
or
add
ret
sbb
push
adc
fnstenv
lods
jmp
mov
jmp
cmpsl
fistpll
ret
push
or
add
stc
cmpl
es
call
inc
jge
push
dec
sub
fidivl
sub
adc
shll
cs
jg
mov
decb
in
ficomps
xchg
cld
rcl
sbb
mov
dec
sahf
or
mov
sahf
adc
adc
push
sbb
sbb
mov
inc
sub
es
lret
xchg
xor
mov
adc
jne
cltd
mul
dec
outsl
mov
insb
test
lret
add
cmp
xchg
xchg
pop
pusha
fs
push
jo
popl
pop
push
add
push
aam
add
pop
push
nop
add
clc
shll
or
mov
xor
sbb
sbb
sbb
cmp
adc
loope
cld
xchg
ja
add
mov
dec
jns
push
add
sti
xor
add
jl
mov
test
or
out
cmp
ret
jl
cs
inc
sbb
adc
sub
jle
les
add
ljmp
adc
cmp
push
pop
add
hlt
mov
add
lds
dec
sub
push
decl
aas
push
lea
in
push
xchg
dec
and
addl
push
sub
push
dec
xchg
outsb
or
add
pusha
xor
mov
jmp
dec
shl
adc
les
jg
fadd
add
push
aam
and
repz
mul
ds
or
pushf
fistl
sub
inc
cmp
mov
dec
leave
adc
insb
inc
leave
leave
inc
lahf
fdivr
cltd
add
lods
jno
clc
or
jb
clc
cld
cld
inc
mov
push
push
aaa
les
pop
cmpsl
push
xor
push
in
mov
bound
dec
cld
pop
and
dec
pop
cmp
rolb
scas
xorb
xor
jecxz
xorl
lahf
sarb
push
mov
jne
cmp
mov
push
andb
mov
scas
sbb
pop
dec
mov
sub
jns
outsb
shl
shlb
push
or
push
cmp
nop
dec
xor
mov
sbb
sub
add
pop
push
and
mov
adc
and
sbb
loopne
jne
cmp
cmp
push
dec
and
inc
mov
pop
ret
add
xchg
pop
add
dec
sub
cld
xor
push
pop
daa
in
xor
shlb
jb
xor
jl
pop
fwait
add
stc
jp
mov
add
cli
adc
adc
in
and
and
jp
adc
push
fmuls
or
cmp
dec
rcl
nop
adc
test
push
ss
adc
inc
pop
mov
dec
mov
mov
mov
lock
cmp
in
pusha
mov
repnz
call
cld
loop
mov
adc
sbb
dec
popf
ds
and
jb
push
lock
and
lea
je
sbb
nop
mov
add
add
add
push
mov
push
pop
add
inc
cmpsb
sub
xorb
popl
add
les
jo
lcall
add
xchg
inc
or
test
cld
pusha
xchg
xor
dec
arpl
notl
cmp
adcb
jg
cwtl
je
mov
mov
fcoml
andl
ja
xor
pop
decl
dec
es
sub
push
lret
shrb
out
mov
cld
push
pop
sbb
xchg
xor
shlb
hlt
movsl
sub
in
dec
repz
call
add
add
addb
aam
outsb
dec
pop
nop
int3
lret
les
fiadds
push
mov
fiadds
test
fcomps
dec
jae
lret
pushf
xchg
fs
nop
dec
lcall
subb
out
sub
std
jo
idivb
lock
pop
gs
dec
jg
aam
out
pop
inc
test
faddl
movsb
sbb
and
jmp
dec
repz
sub
or
pop
sarb
xchg
pop
sahf
mov
xchg
dec
jg
and
imul
repz
fs
in
xchg
mov
rol
clc
fsubl
mov
int
cmp
mov
xor
mov
lcall
jl
stc
xchg
jbe
add
jo
mov
imul
dec
int
cmp
decl
repz
jmp
jns
sbb
mov
xchg
xor
repnz
push
das
dec
dec
in
add
rcr
xchg
add
shrb
movsb
stc
call
les
and
inc
mov
nop
push
dec
repz
test
cli
lock
jge
rolb
and
xor
jbe
and
add
insb
clc
dec
repz
xchg
pusha
and
movsl
and
jne
lods
dec
push
xchg
in
cmp
xchg
jbe
lret
imul
sub
andb
fiaddl
out
adc
cli
add
cmc
mov
or
cld
push
pop
int
imul
imul
insl
shlb
sub
cmp
and
pop
rclb
movsb
sbb
and
jp
insb
lcall
pop
xchg
cli
dec
stc
xchg
out
ja
cltd
cmp
fisubrs
pop
movsb
sub
loopne
and
xchg
sbb
int
or
in
inc
lock
add
int
xchg
and
and
imul
fcmovnb
in
dec
lcall
push
dec
cmp
cli
lcall
xor
rolb
sbb
pusha
cmc
xchg
and
int
jmp
loope
mov
rorb
dec
cmp
lods
fs
cmc
out
int
xor
imul
cmp
and
fidivl
or
dec
ss
out
call
sti
cwtl
mov
scas
out
out
jo
inc
lcall
rcl
dec
jae
mov
lods
int
xor
frstor
out
jl
repz
inc
imul
orb
lock
hlt
movsb
pusha
mov
pop
mov
push
dec
add
sub
dec
lcall
int
rolb
in
jo
nop
jo
jg
adc
xchg
xor
inc
xorb
fldt
and
dec
and
mov
xor
jmp
in
sarb
inc
loopne
loopne
fidivs
add
and
lcall
and
or
inc
and
sub
movsb
jb
mov
test
js
dec
sub
xchg
lret
adc
movsb
jb
in
xor
sub
sbb
or
clc
dec
adc
in
lret
aam
mov
add
pop
cs
test
dec
sub
xchg
lret
adc
push
movsb
jb
in
push
add
mov
je
and
cmp
xor
adc
xchg
rorb
mov
inc
jnp
outsb
inc
mov
sbb
subl
fldl
loopne
sub
sbb
sub
sbb
jp
aas
push
push
adc
inc
xor
xchg
xchg
inc
cmp
ret
pop
push
fiadds
cld
movb
jnp
add
or
sbb
xor
or
sbb
mov
icebp
lods
mov
xchg
add
jg
add
in
es
push
inc
cmp
mov
and
or
out
shrl
cmpsl
push
inc
mov
push
dec
jl
insl
cmp
lea
add
sbb
lock
push
add
mov
movsl
shrl
adc
subl
pop
fadd
fcmovnb
xchg
sub
cmp
cmpsb
mov
sub
inc
inc
pop
loope
popa
push
call
test
inc
inc
inc
rcll
adc
bound
sbb
mov
jge
pop
mov
push
outsl
add
jb
je
sbb
cmp
clc
mov
add
fs
pop
push
xchg
push
sbb
jnp
mov
movl
cmp
pop
sub
mov
sti
adc
adc
test
add
sti
xor
enter
rcrl
pop
clc
add
sub
adc
mov
mov
push
mov
adc
sbb
mov
inc
and
add
sub
push
iret
dec
je
dec
jne
lods
add
push
mov
pop
test
shr
xchg
push
cmpsl
add
mov
pop
shll
ret
ret
push
andb
int3
inc
jb
jg
lds
mov
jl
dec
test
or
fcoml
or
sub
or
cmc
sbb
inc
movsb
mov
pop
das
xor
lods
push
repz
and
sbb
ficoml
adc
add
pusha
and
push
and
je
arpl
add
add
nop
pop
inc
push
jmp
dec
inc
inc
mov
sub
or
hlt
or
sub
outsl
dec
xor
dec
xchg
sbb
dec
les
xor
dec
lods
xchg
or
jae
sarb
and
xchg
or
push
nop
mov
xchg
jo
rcll
inc
sub
jl
or
fisttps
adc
outsb
mov
cs
loopne
enter
imul
mov
por
movb
dec
dec
cmp
xchg
jne
cmp
push
rclb
pop
pop
fbld
sti
test
sub
pop
or
sbb
popa
out
addr16
xor
andl
or
rcl
or
mov
jns
mov
pusha
sbbb
mov
or
aas
push
adc
mov
cmp
mov
push
rcrl
add
push
popf
adc
test
mov
loopne
sub
std
xor
rclb
xor
or
mov
sbb
roll
sbb
fisubrl
mov
imul
mov
es
pusha
popf
lea
nop
and
push
cmp
ja
pop
jae
push
out
fs
scas
loop
imul
test
sub
dec
or
pop
or
or
jl
shlb
hlt
dec
orb
outsl
div
inc
mov
ret
adc
sarb
jne
popa
inc
or
push
das
inc
mov
dec
mov
xchg
mov
mov
je
insl
xchg
lret
push
lds
xchg
in
sbb
rorb
inc
cmp
mov
or
loopne
lcall
dec
ret
dec
sahf
ja
lds
xchg
push
sbb
iret
or
mov
rcrb
int3
xor
iret
and
movnti
into
lods
mov
shrl
popa
jne
imul
inc
mov
sbb
addb
sub
xchg
mov
jge
dec
and
dec
cmp
push
test
or
in
cld
sti
out
mov
test
adc
lret
jnp
pop
cmp
mov
into
iret
js
out
loope
rorb
inc
or
sbb
ss
add
dec
mov
adc
insb
sub
adc
popa
or
test
mov
or
gs
xor
das
pushf
cmpsl
or
clc
and
sbb
push
mov
jp
jae
xor
jo
stos
dec
add
cmp
rorb
xor
insl
shl
xor
je
adc
mov
lods
clc
fs
push
mov
mov
mov
sub
cld
push
mov
pushf
sbb
inc
sub
push
in
movsl
fdivs
cltd
ja
cmp
ljmp
imul
or
in
mov
jnp
aam
or
jne
inc
sbb
mov
jne
ja
jmp
in
and
pop
insb
out
push
xchg
or
out
shll
xor
adc
cmp
inc
das
int
xor
sub
popa
inc
das
mov
add
lods
jb
hlt
and
push
sbb
rorl
sub
or
jo
push
push
inc
push
int
jge
mov
add
call
xorb
dec
je
dec
daa
lock
push
add
or
push
add
call
repz
adc
insl
mull
orb
pop
inc
inc
insl
or
xor
xor
adc
jno
and
dec
pushl
dec
adc
sub
pop
mov
xchg
les
or
push
push
adc
sbb
jo
setp
js
aas
sub
xchg
dec
in
add
sbb
push
pop
pop
add
sub
rclb
mov
nop
add
sub
mov
bound
rcrl
xor
stos
cmp
push
mov
inc
jmp
cmpsl
xor
add
lret
mov
sub
cmpsb
and
sti
pop
jge
jge
adc
and
mov
sub
leave
inc
std
ss
mov
add
inc
test
sti
mov
mov
add
ret
aam
int
mov
sbb
add
xor
test
dec
cs
inc
jmp
mov
or
lods
cmpsl
mov
adc
sbb
sysenter
test
and
push
mov
xor
or
pusha
mov
fbld
jle
adc
inc
sbb
add
push
xor
rorl
pop
add
sti
dec
jne
rolb
cs
ffree
xchg
xchg
movsb
inc
push
jbe
inc
loope
xchg
jbe
outsl
dec
jne
lea
cmp
pop
cmp
ja
xchg
sbb
jne
cmp
loopne
icebp
add
pusha
push
shrl
mov
pop
cmpsb
jno
add
add
test
cmp
fwait
push
mov
add
aam
fimull
mov
iret
mov
sbb
push
mov
push
aas
pop
inc
or
push
repz
shll
out
or
shlb
sarb
xorl
ja
aad
lock
and
sub
adc
cmp
push
add
ja
lret
icebp
ja
cltd
arpl
fiaddl
push
movsb
pusha
test
push
and
fldt
loope
xchg
pop
inc
dec
fldt
mov
adc
rorl
xchg
inc
dec
movsbl
push
adc
add
mov
mov
xlat
movsb
mov
mull
pusha
sbb
inc
call
sub
je
addl
rorb
mov
jo
enter
sbb
adcb
push
xor
cmp
pop
aam
jae
dec
fildl
mov
rcr
mov
jmp
jnp
mov
add
jbe
push
push
mov
inc
cmp
and
movl
inc
push
mov
dec
mov
xchg
je
push
add
push
push
dec
cltd
lret
inc
decl
nop
xor
test
movb
jne
cmp
pusha
push
push
fs
push
mov
testb
popf
daa
push
lock
lea
dec
dec
arpl
lcall
dec
push
fsubl
inc
push
push
push
and
enter
push
push
and
sbb
sbb
hlt
sbb
mov
fcompl
aam
rclb
lea
or
or
mov
std
ja
cld
push
push
mov
movsb
push
and
inc
pushf
mull
mov
lods
lcall
pop
mov
ds
rclb
ja
out
xchg
rcll
xor
xor
in
insl
enter
outsl
xor
fcomi
pusha
dec
mov
add
les
fs
sbbl
xchg
dec
push
rolb
xchg
mov
movsl
or
out
out
ror
push
aaa
pop
add
lds
data16
andl
sbb
pushf
mov
mov
sub
cmp
dec
shr
ss
jle
xor
in
xchg
add
dec
jne
inc
mov
xor
sub
lock
push
rorl
mov
cmpsl
sub
repz
insl
stc
pop
pop
pop
inc
xchg
cli
enter
jp
sub
jmp
out
pop
mov
mov
mov
push
movsb
das
sub
xchg
enter
dec
jnp
xorl
jo
mov
sub
jo
push
xchg
adc
repz
cmp
call
les
xchg
mov
orl
movb
sub
push
pop
push
push
cmp
or
push
push
dec
push
or
push
mov
loopne
sbb
popf
mov
or
sbb
iret
cwtl
movsb
loop
test
or
iret
sbb
call
pop
addr16
popa
sub
pushf
cmpsl
pop
sub
sub
sub
adc
jo
int3
mov
stos
dec
insb
mov
push
pusha
push
and
sub
decl
lret
addl
loopne
movsb
iret
or
mov
jno
adc
push
sarl
imul
xchg
sbb
fildll
add
sub
add
addl
jno
xor
out
xchg
cld
or
fwait
fwait
je
in
cmovae
sbb
scas
sbb
push
pop
sub
inc
jg
and
lods
inc
dec
push
dec
rorb
inc
cld
add
ret
add
jmp
mov
adc
scas
add
xor
imul
ret
andl
or
xchg
dec
std
ret
mov
adc
jo
xchg
mov
add
jne
in
movsl
dec
mov
addr16
xchg
xchg
mov
or
push
mov
pop
adc
sbb
or
loope
push
cmpsl
jl
cs
or
cmp
ja
dec
mov
add
push
nop
add
dec
pop
add
fstps
leave
imul
je
dec
pop
pop
jnp
fisttpll
mov
inc
adc
imul
push
sub
dec
clc
icebp
test
xchg
adc
sbb
int3
testl
icebp
dec
enter
mov
sub
orb
fisubs
or
cmp
add
lock
int
insl
dec
push
mov
dec
add
sti
push
and
mov
jge
imul
jmp
cmp
and
pop
xchg
add
add
adc
add
hlt
popa
jecxz
dec
insb
add
push
sub
jbe
sub
and
xchg
aam
cwtl
dec
leave
lds
or
in
nop
mov
push
inc
mov
mov
outsb
hlt
movsl
sub
sub
je
mov
or
divb
jle
and
js
push
and
sbb
lock
mov
imul
loope
inc
hlt
jbe
cmp
sbb
or
outsl
adcb
shll
jbe
jne
push
mov
inc
das
movsb
and
xor
sbb
stos
in
das
insb
and
fiaddl
push
sbb
fs
xor
pushf
sbbb
push
sbb
push
and
call
bound
stc
push
jle
das
cmpsb
add
and
pop
mov
sbb
adc
push
std
jp
mov
das
sub
jne
out
xlat
imul
mov
pop
in
inc
mov
mov
cmp
loop
je
ja
insb
inc
jl
add
pop
jo
and
mov
pop
sbb
rcr
roll
sahf
pop
iret
add
push
clc
jns
inc
fwait
xlat
mov
jo
iret
sahf
cmc
push
mov
push
je
sahf
mov
jmp
loopne
mov
insb
push
jns
xchg
jmp
insb
adc
mov
shlb
or
jecxz
bound
rorl
test
dec
test
sbbb
add
or
cmp
mov
insb
rol
inc
mov
sbb
push
fsubrs
or
int
lret
xchg
cmp
inc
movl
pop
ficompl
push
int3
lds
push
xor
xchg
mov
adc
lret
pop
leave
aad
imul
dec
les
imul
ret
mov
fsubl
mov
arpl
xchg
pop
inc
jb
push
sbb
movsl
nop
dec
push
push
arpl
insl
pop
lods
cltd
xchg
pop
and
mov
sbb
xorb
popa
fists
cmp
in
xor
push
jo
outsl
and
xor
inc
xchg
mov
push
or
sbb
faddl
or
mov
push
cmp
fsub
and
sbb
in
mov
pop
call
loopne
es
dec
loop
pop
dec
sbb
or
push
lods
mov
js
sbb
add
push
inc
fdivl
pushf
imul
lret
mov
dec
dec
jne
inc
xor
div
sub
mov
nop
mov
push
repnz
das
mov
adc
inc
push
sub
dec
sarl
or
lds
adc
popf
jle
dec
shll
sub
outsw
call
sete
jnp
cmc
mov
and
pop
pop
pushl
jo
aam
or
mov
and
pusha
xor
gs
cmp
dec
jo
mov
push
cs
pushf
aam
test
test
jnp
push
lret
add
xor
jmp
add
lods
add
ret
andl
adc
dec
inc
insb
pop
xchg
and
cmp
idivl
jmp
and
xor
xchg
dec
int3
lods
loopne
push
lret
push
cmc
xor
adc
dec
test
and
or
jo
ret
adc
popf
jecxz
les
xor
adc
test
cld
stc
jecxz
subb
test
stc
sub
test
insl
je
ljmp
in
sbbb
sbb
adc
mov
hlt
add
xchg
push
xchg
loope
lcall
mov
or
outsl
scas
push
dec
add
roll
sub
in
dec
cmpsb
adcb
xchg
sub
pop
jmp
push
sahf
xchg
outsb
add
jo
inc
sbb
add
in
in
push
and
int
cs
das
jmp
aaa
push
pop
inc
sub
pushf
dec
pop
cmpsb
pop
mov
mov
and
cmp
and
cmp
mov
adc
xor
pop
arpl
push
inc
xchg
adc
arpl
mov
jl
pop
in
js
dec
add
es
aas
test
jae
jb
dec
stos
mov
nop
xchg
and
lret
ja
test
fwait
push
dec
add
lahf
mov
je
push
stos
xor
mov
or
dec
add
push
pop
loopne
push
dec
lea
call
arpl
pop
sbb
push
cli
ffree
xor
fs
jmp
or
mov
std
sub
sbb
fldcw
dec
or
scas
sub
popa
test
lea
test
dec
js
push
sbb
and
mov
pop
movb
xchg
imul
adc
add
ja
inc
test
add
cs
je
outsb
and
addr16
mov
sub
cmp
test
mov
mov
and
test
dec
test
daa
cld
scas
out
mov
lds
sub
jl
fiaddl
pop
imul
adc
mov
inc
xchg
movsl
xor
mov
push
into
dec
mov
shlb
in
pop
xchg
leave
fiaddl
mov
push
in
cs
enter
aad
xchg
add
dec
inc
lea
in
jno
test
inc
stc
test
cmp
mov
mov
cmp
fistpll
fiaddl
test
or
and
mov
test
test
fsubr
imul
sub
sub
pusha
or
dec
mov
inc
mov
jl
stos
push
pusha
sub
push
push
lods
jno
pusha
insb
or
mov
or
repz
push
enter
mov
outsl
jnp
arpl
sub
adc
xlat
push
icebp
inc
cmp
shl
jecxz
add
sbb
fdivs
jmp
push
lea
xlat
imul
and
add
addb
cwtl
addr16
adc
and
add
add
insb
shr
inc
xchg
test
insl
mov
dec
pop
cwtl
push
stos
or
and
clc
xchg
lock
xor
xchg
dec
pop
or
pop
mov
mov
loopnew
cwtl
test
and
cmpsb
test
pop
or
cmp
mov
adc
insb
fcompl
int3
xlat
push
enter
jae
inc
cs
cmp
mov
cmpsb
ja
call
fsubp
pop
push
or
add
add
out
push
jle
xor
or
adc
xor
cli
outsb
sub
dec
mov
or
ds
xor
mov
pop
les
mov
mov
pop
sub
inc
jns
or
shll
shr
cwtl
pusha
mov
add
xor
adc
aad
ja
clc
add
sub
icebp
mov
int3
rolb
into
dec
test
pusha
cmp
in
inc
mov
sub
cltd
fwait
inc
xor
push
inc
cwtl
push
and
push
int
or
and
pop
or
xor
ret
cmp
or
mov
or
jb
lcall
push
sbb
sub
sbb
mov
in
inc
rcrb
pushf
scas
xchg
add
mov
jmp
xor
inc
leave
xor
pop
lds
jbe
xor
jne
push
repnz
mov
movb
fucomip
mov
je
and
mov
or
adc
imul
fs
cmpsl
lret
pop
or
cs
push
test
cmc
mov
mov
push
out
sub
xor
pop
mov
mov
mov
loopne
mov
xlat
je
jnp
test
jge
xlat
dec
add
or
mov
or
pop
mov
adc
out
scas
sub
and
xor
mov
in
or
sub
dec
pop
push
nop
adc
xor
push
jle
push
shll
push
xor
sub
mov
and
fdivs
movsb
cmp
xor
femms
sub
pushf
out
mov
jle
push
adc
test
inc
sbb
gs
sub
popa
cmpsl
push
arpl
cld
loopnew
push
or
ucomiss
loopne
nop
inc
push
mov
test
xchg
push
mov
movl
cmpsl
loopne
in
stos
test
sarl
nop
imul
out
mov
shll
inc
and
add
pop
js
pop
pusha
mov
jbe
jns
jmp
mov
dec
bound
cwtl
pusha
mov
dec
mov
and
push
or
ds
js
pushf
or
dec
jp
cmpsl
call
sarb
test
data16
iret
dec
inc
jo
ret
add
rcll
int
push
push
cmp
repnz
test
clc
rorb
inc
ret
or
inc
cs
test
jp
or
imul
cmpsb
pop
sbb
push
mov
daa
dec
fidivs
shlb
mov
dec
cld
daa
add
pop
mov
inc
add
insb
pop
add
insl
adcb
push
mov
jmp
dec
and
dec
es
gs
mov
push
push
pop
pusha
sbb
add
enter
or
es
cmpb
or
lods
dec
aas
push
and
mov
mov
int3
outsl
imul
mov
push
add
or
int
or
into
icebp
pop
cmpsl
insb
xor
cwtl
fnstcw
ljmp
mov
jbe
inc
adc
xchg
sub
das
pop
lcall
inc
push
loope
fs
add
sahf
xor
testb
inc
rcrl
ficomps
cmpb
testb
fsubs
sbb
pop
inc
xchg
adc
and
adc
jbe
or
fs
dec
out
add
lock
scas
jae
arpl
push
or
inc
xchg
mov
or
fwait
pop
jmp
or
or
cli
lret
xchg
cmp
bound
inc
subb
movb
aas
adc
loope
loopne
xchg
fbstp
jmp
fcmovnb
pop
xor
jb
imul
mov
aam
ret
loopne
out
pop
mov
hlt
dec
pop
hlt
inc
add
fistps
inc
xchg
sub
movsb
hlt
popf
test
jp
or
pop
cmp
lea
mov
hlt
and
or
push
xchg
cmp
cmp
jo
cmp
ljmp
lds
dec
loope
adc
cs
jno
out
nop
or
push
jge
je
pop
jo
add
enter
cmpsl
call
and
test
jmp
lods
cwtl
push
scas
jo
lea
inc
sbb
xor
insb
hlt
dec
cmp
loope
adc
sub
mov
mov
cmp
dec
arpl
jmp
into
adc
or
push
stos
test
inc
or
push
test
out
ljmp
push
pop
add
mov
dec
jmp
adc
push
sbb
stos
adc
cs
ss
adc
inc
xchg
std
ret
mov
fs
js
mov
jmp
xor
pop
lea
test
test
add
lock
add
les
jb
add
lret
int
test
mov
push
add
jb
jno
push
xor
movsb
pop
adc
jbe
xchg
push
pop
dec
jno
test
lea
or
push
mov
dec
mov
inc
adc
push
xor
add
pusha
pop
or
arpl
lods
mov
mov
addb
aaa
stos
in
fstpl
cmc
push
cmpsb
or
jl
pop
sahf
push
test
sbb
out
and
popf
pusha
push
nop
inc
jmp
scas
out
xchg
or
push
daa
adc
inc
mov
lahf
cmp
lret
xchg
js
paddusw
je
add
dec
jne
cli
push
movsb
xor
cmpb
or
push
dec
adc
push
mov
outsb
pop
or
or
and
call
cmpb
jne
sub
in
imul
inc
outsl
mov
jl
jmp
cmpsl
push
adc
add
out
add
mov
insb
xor
and
jns
and
lea
sub
repnz
sbb
mov
in
jmp
fnstenv
sbb
sub
add
mov
cmp
adc
push
imul
add
jmp
mov
incl
pop
xor
test
push
sbb
cmp
stos
rcll
jbe
push
push
sub
movsb
add
les
orb
popf
sub
mov
in
push
xor
mov
insl
call
adc
adc
push
dec
bound
pushf
ret
scas
adc
and
push
jle
adc
test
inc
xchg
fcomps
or
sub
leave
and
xchg
jl
pop
xor
mov
pop
enter
cs
inc
adc
or
pop
and
push
mov
popa
inc
shlb
add
push
mov
inc
push
int
lods
xchg
int3
and
lret
test
push
sub
test
popf
dec
lret
push
cmp
scas
pop
adc
pop
sbb
add
add
ret
push
and
xor
pushf
cmp
jl
push
add
or
add
jo
cmp
push
pop
lahf
insb
pinsrw
rcrl
cmp
and
add
xchg
inc
mov
faddl
loop,pn
cmp
lret
scas
and
pusha
push
push
ret
jne
mov
or
adc
jb
adc
adc
cmpb
xor
push
ds
mov
js
xor
dec
in
cmp
or
or
imul
aad
lcall
and
mov
xor
fs
fwait
inc
test
or
and
and
add
ret
lcall
and
repz
sbb
sbb
sub
pop
xor
cmp
pop
out
mov
lahf
int
push
insb
dec
sbb
cltd
xchg
nop
xor
scas
push
repnz
cld
shr
push
sub
imul
lret
iret
test
sbb
jp
pop
icebp
dec
dec
inc
jmp
and
adc
sbbl
mov
and
dec
push
subl
sbb
cmp
ret
xor
mov
jmp
test
insb
mov
fldenv
outsl
iret
mov
jno
sbb
repz
enter
aaa
rclb
dec
and
aam
repnz
sub
fdivl
fdivs
mov
cs
in
and
daa
dec
inc
in
clc
hlt
mov
inc
test
mov
xchg
repnz
pop
add
pop
or
mov
or
adc
cs
in
insb
sbb
sub
jae
and
jl
sub
jae
pop
test
loop
sbb
nop
mov
stos
psrad
ljmp
cmp
movsl
pop
add
mov
inc
xor
push
ret
or
stc
cmp
out
add
mov
jl
adc
ret
inc
loopne
and
adc
pop
pop
daa
push
dec
dec
pop
cld
push
sub
pop
push
dec
icebp
inc
mov
mov
arpl
out
push
sub
xor
push
in
and
mov
stos
inc
test
in
mov
lock
add
sti
je
cmp
orb
xchg
dec
int3
fcmovb
aam
cmp
mov
lret
sbb
inc
push
hlt
ror
and
push
lea
xchg
inc
jo
push
js
push
push
inc
lock
fsubl
or
fimuls
fdivr
add
and
ss
sbb
lock
push
out
lea
icebp
leave
insb
add
cmp
mov
ds
fs
pusha
sbb
stos
outsb
dec
test
xchg
xor
repnz
cld
push
xor
adcb
jae
sbb
roll
mov
and
inc
and
mov
cs
out
ja
loopne
addr16
push
sbb
add
jb
mov
pop
andb
call
xchg
push
jns
add
loopne
insb
add
push
shll
scas
xorb
mov
inc
insb
stos
aam
sub
push
loopne
imul
mov
dec
and
jg
les
lds
nop
inc
add
sub
je
js
lods
and
fistpl
cmp
inc
push
ficomps
fnstsw
adc
les
jecxz
inc
enter
push
push
mov
out
add
pushf
xlat
push
sbb
pop
mov
add
adc
mov
cmpsl
mov
mov
jmp
adc
shll
inc
sbb
pop
add
sub
je
decl
mov
dec
movsb
jmp
dec
sub
jne
sub
xchg
fmul
jnp
inc
ss
push
mov
loopne
sub
sbb
addb
ret
sbb
cli
pop
xor
inc
int3
mov
sub
or
enter
xor
xlat
cmp
adc
push
pop
inc
je
fmuls
xor
sbb
dec
push
push
dec
and
outsb
fs
or
je
pusha
pop
cmp
or
inc
mov
es
movb
orl
shll
and
sub
mov
mov
out
push
and
dec
or
cmp
pop
js
inc
jg
call
push
pop
fs
adc
push
andb
jge
mov
inc
or
imul
push
push
mov
arpl
adc
scas
jno
pop
ficompl
ss
jo
push
and
int
add
xchg
rorl
push
jno
push
sub
aad
sub
das
push
mov
inc
push
pop
dec
push
in
mov
adc
sbb
or
or
sahf
add
mov
imul
addr16
ror
cmp
cmp
jmp
lods
cmpsl
mov
adc
xor
push
and
adc
inc
add
or
test
lret
in
adc
and
xchg
sub
movsb
rol
cmpsb
mov
pop
push
fwait
cs
jle
pushf
cmp
test
std
cmp
in
adc
xor
frstpm(287
or
xor
daa
scas
jnp
and
stos
mov
cmc
imul
push
into
ja
ds
mov
mov
mov
sub
int3
sub
jo
pop
andl
xor
dec
xlat
xchg
test
sub
lods
push
pushf
cs
mov
test
lock
filds
filds
sbb
mov
dec
pop
stc
xchg
push
addl
cmpl
insl
dec
je
push
dec
into
add
cmp
push
rclb
xor
rcrl
push
dec
lea
jo
mov
cmp
jecxz
and
je
mov
movsl
clc
inc
les
repnz
mov
out
or
lea
aam
or
mov
add
inc
movsb
leave
ss
call
les
inc
sahf
dec
or
mov
push
mov
lds
xchg
mov
sbb
dec
mov
mov
loope
inc
pop
pop
or
outsl
cmpsl
stos
mov
jne
add
xor
pop
lcall
push
ljmp
xchg
sbb
pop
sub
dec
int3
jbe
arpl
cltd
in
sbb
cmp
cwtl
shll
out
enter
mov
pop
in
dec
int3
push
push
push
mov
pop
mov
and
cmp
jns
gs
push
push
pop
in
sbb
add
sub
pop
gs
mov
add
xchg
inc
or
xchg
mov
test
xchg
movsl
orb
mov
sti
and
loop
push
inc
cwtl
fs
fwait
int
dec
sbb
add
lret
xor
or
or
fstl
inc
sub
pop
inc
pusha
add
into
and
push
fldl
xorl
cmp
out
xchg
lret
push
nop
add
mov
mov
push
test
push
shrd
inc
xchg
icebp
outsl
fs
dec
cwtl
test
enter
push
xchg
xchg
inc
repnz
mov
jl
jnp
enter
popa
je
leave
and
jo
or
and
insb
adc
in
stc
add
filds
cmp
pop
lds
xchg
stos
push
xchg
push
sbb
inc
jb
dec
mov
inc
fwait
jp
pop
jo
sub
mov
xchg
pop
fdivrl
xor
xchg
or
and
fadds
insl
mov
stos
dec
test
repnz
out
sbb
test
pop
enter
mov
push
or
xchg
sub
cwtl
loopne
push
fldl
inc
jb
loopne
push
dec
dec
es
orl
fs
or
daa
and
and
xchg
xchg
pop
leave
shll
cmp
pusha
push
mov
sub
ret
int
mov
jp
cmp
push
push
xor
sbb
jmp
mov
xor
jp
add
jbe
xor
sbb
sub
enter
or
and
lea
arpl
pop
mov
push
pop
mov
xor
inc
std
and
ret
sarl
movsb
adc
or
mov
pusha
adc
xchg
mov
jge
xor
push
or
push
and
or
adc
fwait
insl
mov
xchg
xchg
imul
push
push
ret
mov
nop
jge
aam
cltd
jnp
sbb
add
sub
sbb
test
mov
and
jg
sub
cmpl
push
jno
addr16
cmc
pop
push
pushf
outsb
and
shufps
sbb
or
dec
pushf
pop
lods
and
push
sbb
add
sarl
das
and
or
dec
test
dec
lret
and
xor
push
pusha
jecxz
test
adc
cltd
les
push
insb
js
fmull
adcb
push
sub
add
push
sbb
or
in
xchg
push
push
inc
pop
ret
sbb
push
pop
scas
hlt
mov
pushf
xchg
sahf
add
cld
sbb
rclb
sbb
push
inc
movsb
jne
inc
push
add
or
mov
lret
sbb
mov
xlat
sti
xchg
push
xchg
or
cltd
adc
or
mov
and
pop
xchg
or
xor
adc
push
mov
jo
inc
pop
pop
jno
push
js
ret
cmp
test
adc
xor
loope
jmp
mov
pop
mov
adc
pop
xor
xchg
pop
orb
cmc
push
push
cwtl
pop
insb
mov
xor
mov
mov
push
std
faddp
mov
sbb
mov
mov
sbb
or
aad
xchg
fbld
movsb
xchg
loop
dec
cmp
sbb
stc
jmp
push
xor
and
cmp
rorl
les
mov
add
inc
daa
adc
dec
adc
xchg
les
shlb
pop
xor
rcrb
insb
pop
dec
sub
push
cmpsb
adc
popf
scas
ljmp
testl
cmp
dec
addr16
push
push
or
and
enter
loopne
add
mov
fwait
inc
mov
pop
cld
mov
mov
addb
int3
icebp
sbb
imul
and
stc
cwtl
sbb
inc
jecxz
lock
push
dec
mov
test
pop
pop
mov
xor
icebp
add
add
mov
mov
sbb
rcrb
test
inc
pop
jnp
jo
push
jnp
inc
pusha
and
jo
rorb
js
movsb
adc
test
notb
scas
jg
inc
adc
sbb
xor
push
mov
add
scas
adc
movsl
xchg
leave
lahf
push
cmp
stc
test
dec
mov
cmp
aaa
iret
lret
jle
iret
jae
nop
leave
sbb
and
shll
cmpsl
push
fcoms
cmp
fimull
add
jb
jmp
or
sbbl
add
and
testb
cld
push
insl
shlb
sbb
sti
add
cmp
pop
pop
cmp
jo
dec
inc
loopne
sub
jb
dec
popf
lock
and
jns
or
lret
xchg
es
xchg
je
xlat
cmp
notb
push
mov
mov
test
mov
jnp
js
addb
fadds
and
and
sub
add
xor
std
pop
jns
sub
cmp
loop
mov
inc
fistps
push
sub
fldl
mov
inc
imul
and
rcll
add
sub
mov
das
pusha
mov
xchg
sub
pusha
add
sahf
xchg
sbb
and
jns
push
jb
enter
pop
enter
mov
sub
sbb
sub
and
sub
pushf
or
add
pop
pop
insl
sub
add
sbb
adc
and
bound
inc
dec
movsl
xchg
or
push
dec
jnp
iret
adc
adc
xchg
jne
cs
push
xor
xor
cmp
and
and
dec
jnp
mov
shll
xor
leave
shll
cmp
imul
int3
imul
aam
push
cmpsb
imul
imul
cmpsb
imul
pop
fwait
cmpsb
clc
je
push
inc
sub
mov
adc
adc
inc
cmp
mov
cwtl
enter
or
cltd
call
add
xorb
add
xchg
aaa
imul
pop
icebp
xchg
dec
or
sub
xchg
mov
dec
or
push
adc
psubb
or
pop
fbstp
xor
pop
pop
inc
enter
addr16
xor
rdpmc
in
dec
pop
or
sbb
lahf
xchg
inc
movsl
cmp
orb
mov
je
push
lds
pop
mov
adc
adc
mov
xchg
rclb
or
cwtl
cmpsl
jns
out
adc
and
les
adc
mov
out
xor
adc
xor
out
pop
sub
inc
imul
daa
xchg
cmpsl
inc
dec
push
inc
sarl
int3
pop
rcrb
aam
pusha
fsubs
lcall
jo
jns
cmpsl
call
mov
mov
inc
data16
cld
mov
dec
lock
lcall
or
xchg
orl
stos
sub
or
pop
ret
es
xchg
ret
lea
jns
and
jp
pop
imul
nop
and
push
xchg
mov
in
add
insl
cmp
push
xor
sub
sahf
push
int3
rcrl
push
sub
xorl
cmp
and
add
movsb
fisubrl
inc
imul
xor
pop
je
insb
push
jo
pop
push
xchg
data16
cs
jl
lea
shll
roll
mov
push
fstl
push
mov
push
rolb
adc
sub
add
lods
pushf
pop
insb
sbb
pop
xchg
xchg
add
inc
inc
adc
lret
mov
xor
or
andb
cmpsb
xchg
inc
cmpsb
int
shrb
mov
pop
pop
push
dec
dec
sub
mov
cmpl
or
dec
mov
mov
adc
adc
ret
fbstp
rorb
notl
popa
push
arpl
in
adc
gs
call
orl
push
jg
lea
add
fwait
push
int
add
fisttps
pop
push
mov
dec
push
sub
sbb
adc
ljmp
xorl
daa
add
out
push
mov
pop
push
pop
jmp
inc
jp
add
outsl
or
xchg
lcall
jmp
push
das
fcomps
or
push
and
arpl
arpl
add
add
incl
push
xor
pop
mov
lret
pop
sbb
dec
sub
pop
daa
jns
xchg
repnz
lcall
push
jmp
sarl
mov
xchg
xchg
adc
add
or
jmp
sub
sub
fs
arpl
cli
and
and
test
cmp
add
jmp
push
sub
nop
mov
rcll
push
add
push
and
adc
sbb
inc
popl
or
les
daa
testb
fs
je
ds
jnp
lea
adc
pop
cmp
sub
lret
mov
into
mov
loopne
es
data16
sub
mov
push
and
aaa
test
jb
cld
icebp
push
mov
mov
pushf
mov
mov
inc
xchg
and
inc
mov
mov
xchg
loop
test
sbb
cltd
pushf
push
movsb
xchg
fidivl
mov
sub
pop
lods
pusha
push
pop
loopne
or
adc
add
fisubrl
push
push
in
lea
mov
mov
addl
mov
rclb
push
movsl
add
aas
dec
dec
pop
add
dec
adc
pushf
lea
add
subb
or
mov
daa
push
xor
pop
loopne
pop
je
inc
inc
and
push
dec
adcb
pop
xor
cmpsl
and
cmp
lods
sti
inc
bound
dec
js
or
jp
je
dec
sub
js
test
lcall
in
add
push
xchg
in
loop
jo
or
xor
sub
inc
rcll
sbb
adc
pop
mov
push
push
inc
add
shl
insb
and
mov
xor
aad
pop
xchg
fsubl
cmp
and
pushf
sbb
and
dec
in
mov
and
or
jne
or
pop
xchg
fsubrs
mov
inc
or
xchg
call
mov
pop
xchg
or
or
mov
dec
sbb
add
inc
push
call
movsb
xchg
rol
push
lahf
sub
sbb
push
and
out
or
fiadds
fsubrp
das
dec
xor
mov
inc
xchg
inc
lahf
loopne
cmp
pop
jne
sub
adc
nop
xor
mov
sub
mov
imul
pop
pop
and
sub
ds
sbb
insl
mov
orb
sub
pop
or
or
xor
xchg
mov
jg
shrb
xchg
mov
jmp
aaa
jo
sbbl
or
jb
push
jb
adc
mov
adcb
rclb
adc
jo
add
and
or
mov
arpl
or
arpl
adc
lock
add
xor
mov
sub
call
pop
xor
sbb
push
push
and
cmp
xlat
pop
inc
mov
mov
add
add
adc
jno
punpckhwd
pop
ljmp
pop
sbb
fcoml
js
sbb
add
add
lret
fldcw
andl
xor
or
aam
xchg
or
cmp
int
xchg
jg
fnstsw
sbb
rclb
push
inc
and
cs
andl
popa
jbe
int
jb
jo
xor
sub
sbb
dec
push
xor
lea
mov
addr16
cmp
stos
xor
sbb
addl
and
pop
xor
mov
les
aas
loop
inc
adc
mov
pushf
jle
cmp
jl
inc
ljmp
lock
inc
test
add
pop
mov
inc
cmpsb
lahf
rclb
mov
xor
jo
mov
and
xor
nop
add
add
test
ficoml
cmp
hlt
orl
xchg
imul
ss
rcll
hlt
leave
nop
xchg
xor
call
adc
sbb
sub
dec
mov
jb
jns
fwait
pop
pop
xor
jno
xchg
popa
lret
xor
aas
xchg
in
and
mov
sub
dec
enter
mov
sbb
or
sbb
shll
push
add
test
jno
and
dec
adc
adc
jns
or
pop
rorb
dec
fimuls
push
and
ret
and
ret
push
xchg
or
mov
popa
popf
push
mov
sub
jns
rcl
dec
nop
xor
sbb
push
xchg
xchg
inc
leave
sbb
cmp
int3
ret
loope
mov
pop
mov
iret
jne
xor
push
test
loopne
cmp
les
and
push
sbb
dec
movl
or
push
test
mov
cli
jecxz
sub
push
aaa
cmpsb
ljmp
pop
iret
cmp
xchg
dec
adc
in
pop
cld
mov
cmp
pushf
out
add
shlb
out
into
push
cltd
mov
lods
xor
inc
add
pushf
sbb
push
jp
popf
xor
push
adc
mov
mov
nop
pop
jne
push
pushf
lea
add
push
jle
rcrl
loopne
inc
inc
sbb
inc
sub
sbb
xorl
xchg
xor
mov
sbb
clc
xchg
sub
xor
mov
and
scas
and
or
leave
push
lock
gs
cmp
mov
dec
mov
jmp
shrb
mov
add
nop
inc
or
push
sbb
xchg
or
push
or
jecxz
cli
adc
add
push
push
mov
dec
fxch
in
xor
push
jo
sub
lods
cmp
and
xor
mov
or
cwtl
jbe
imul
and
cmp
bound
mov
dec
adc
xor
cmp
jbe
pop
push
movsl
popf
push
sbbb
decl
cltd
enter
lock
adc
cmp
push
dec
notl
push
and
add
int
outsl
cmp
outsb
enter
sbb
add
in
pop
mov
fmuls
rol
dec
aaa
xor
inc
adc
mov
lret
pop
cmpl
sar
or
and
mov
or
inc
adc
xchg
shlb
cmp
adc
rorl
xor
and
ljmp
pop
cmp
jmp
push
inc
mov
sbb
adc
ret
mov
int3
mov
cmp
ja
adc
mov
pop
sbb
popa
mov
push
or
cmp
pop
mov
rcll
lds
jne
cmpsb
mov
insl
test
lcall
or
cltd
xchg
imul
lcall
xor
cmp
inc
andb
pop
xor
push
inc
push
sbb
and
ds
and
nop
dec
insb
dec
push
les
enter
stc
cmp
test
pushf
or
mov
test
sub
and
pmulhw
sarb
repnz
or
inc
lods
dec
mov
les
push
pop
out
cmpsb
cmpsb
cmp
cmp
dec
pop
cmp
xchg
out
sbb
pop
dec
enter
pusha
sub
xor
pop
in
rcll
popf
xchg
sbb
and
dec
mov
dec
xor
adc
loop
shrl
mov
in
inc
xor
hlt
pop
cltd
fs
mov
sbb
dec
xchg
push
enter
jmp
fs
mov
insb
jmp
jae
xchg
aas
test
je
es
in
push
or
js
or
icebp
ret
adc
repnz
enter
popa
sysenter
sub
call
fdivrl
push
test
pop
add
test
sub
ret
mov
aaa
pop
aam
dec
js
dec
sbbl
insl
sub
mov
mov
cmp
in
or
mov
push
rcrl
into
js
cld
push
inc
or
shlb
cmp
or
adcl
lock
push
add
xchg
jbe
bound
fbstp
int3
daa
pop
and
cmp
add
jb
xor
add
pop
sbb
add
in
push
push
xor
sahf
pop
add
pop
or
xchg
xlat
sub
lock
xor
add
sub
addl
push
mov
inc
xor
mov
sarb
add
mov
and
test
xchg
push
mov
and
fs
test
pop
push
mov
adc
sbb
xchg
add
stc
sbb
push
add
ss
xchg
add
push
inc
scas
push
add
xchg
nop
movsb
sbb
adc
or
aad
add
std
xorb
and
cmp
jnp
in
dec
arpl
jno
faddl
jns
xchg
pop
dec
add
leave
mov
enter
or
ret
lds
cmp
ret
pop
dec
cmp
sbbb
mov
or
test
jg
fs
push
push
movsb
fs
cmc
xchg
and
cmp
in
sub
test
mov
pop
add
pusha
xchg
jo
cmp
jo
mov
pop
push
fnsave
mov
add
mov
push
add
inc
mov
mov
shrl
inc
test
jno
repz
sbbl
cmp
addr16
push
call
clc
cli
lock
cmp
or
xor
imul
pop
clc
push
add
adc
jns
cmpb
or
or
in
mov
pop
xor
imul
mov
push
das
stos
out
stos
andl
xor
cmp
mov
push
sub
sbb
pop
test
and
insb
lock
fwait
adc
mov
push
xlat
add
cmp
nop
out
sub
and
xor
mov
lods
mov
xlat
aas
jo
hlt
inc
add
inc
xlat
leave
es
xchg
cmp
xor
movsl
or
insb
or
push
or
sbb
mov
jb
push
and
sub
sub
xlat
hlt
mulb
in
test
fstps
xor
or
scas
test
cmp
adc
movups
imul
xchg
inc
popl
push
cmp
add
add
xor
push
sbb
jne
rclb
push
mov
push
jno
jecxz
or
jmp
rcl
push
stc
xor
mov
and
pop
xchg
pop
les
inc
and
xchg
je
inc
cmp
dec
push
lods
test
and
jg
test
push
inc
cmp
xor
xchg
xor
icebp
cmp
inc
xchg
inc
or
flds
xor
addb
loope
xchg
mov
push
fwait
int
dec
pop
push
lcall
leave
scas
adc
push
pop
inc
es
dec
dec
test
and
push
fs
scas
and
push
cmp
mov
pop
mov
jb
xchg
mov
xchg
in
pop
jl
push
dec
loope
push
pop
dec
jg
loope
sbbl
mov
leave
sub
mov
cmp
lea
cmp
xor
pop
add
pop
inc
dec
fs
cmpsl
or
xchg
loop
sub
pusha
jecxz
push
mov
cltd
leave
jle
xor
scas
and
lret
dec
xchg
inc
cmp
stos
or
outsl
lret
fwait
xor
adc
test
mov
sarb
cld
dec
imul
push
pushf
cs
call
or
repz
int3
mov
scas
xlat
push
xor
mov
fsubrs
mov
pop
xor
inc
sbb
movsbl
out
stc
pop
ja
clc
xor
dec
and
dec
inc
dec
rclb
js
jg
mov
mov
xor
clc
dec
sbb
out
push
rorb
cmpb
mov
test
movsl
jae
push
add
jns
mov
inc
bound
cmp
ja
xor
add
nop
and
fmull
jns
shr
mov
cltd
push
jmp
mov
mov
mov
loopne
test
ficoml
mov
sbb
shrb
shl
push
dec
sbb
push
loopne
adc
or
adc
xlat
lock
nop
xchg
push
inc
push
push
pop
sbb
sub
sbb
mov
mov
mov
aas
add
nop
pop
and
cmpsl
lret
fsts
lahf
fstpt
pushf
push
push
dec
xchg
pop
and
push
or
ds
xor
lods
push
or
mov
adc
int
add
bound
adc
or
orb
adc
test
dec
pop
mov
and
push
inc
jle
add
arpl
push
dec
and
xor
sub
icebp
ret
push
in
in
test
push
arpl
jge
pop
lret
and
add
add
in
ds
adc
adc
das
sbb
sar
out
sbb
jge
adc
data16
mov
jl
pop
xorb
pop
fs
push
pushl
sbb
jp
sub
je,pn
pop
adc
je
cmp
je
cmp
fsts
cmp
and
mov
jl
in
lds
call
dec
dec
jb
jns
inc
or
ud2
mov
repz
add
or
ja
add
sub
mov
das
cwtl
cmp
je
push
negb
mov
fisubl
mov
push
xor
or
imul
or
sbb
aaa
mov
ret
jmp
aas
popf
pop
add
int3
aas
inc
xor
pop
addb
pusha
jge
clc
imul
jle
mov
or
inc
cmp
jl
loopne
es
cmpsb
push
jo
or
xor
xor
inc
fs
sbb
outsb
add
adc
or
adcb
lret
setl
mov
cmp
cmp
and
scas
or
and
or
rorb
cmp
outsb
pop
inc
adc
inc
iret
es
pop
es
aas
int3
cmpsl
sbb
fincstp
mov
sub
push
xor
lock
lea
sub
lahf
xor
imull
lret
dec
shll
xchg
cs
idivb
and
fs
add
ljmp
push
je
aaa
cltd
fstl
push
fwait
lock
push
out
cmc
sub
dec
adc
xchg
mov
ja
jmp
add
iret
imul
mov
and
lds
jmp
and
mov
adc
or
in
adc
add
jecxz
ja
pop
and
and
sbb
test
and
and
and
lock
aaa
stos
mov
les
sub
xor
mov
sub
or
or
and
das
inc
jo
add
push
bound
inc
enter
jle
int3
sbb
inc
mov
ja
inc
lcall
call
push
push
inc
lock
cs
scas
imul
addl
xchg
clc
icebp
adcl
mov
or
jg
stc
test
xor
xor
and
fdivl
fidivs
mov
and
imulb
pop
sbb
fsubrl
or
mov
xchg
imul
xchg
sbb
inc
ret
xor
mov
or
pop
dec
imul
nop
in
cmp
cmpsb
and
pop
insb
jae
xor
cwtl
mov
xchg
cmp
lock
stc
pop
sub
jb
leave
add
push
popa
pop
add
mov
dec
sub
cld
pop
pop
add
rorb
and
les
jnp
xchg
pushf
mov
xor
pop
xor
xor
xchg
dec
cs
cmp
es
pop
cmp
insl
and
pop
nop
add
enter
push
mov
shl
scas
add
xchg
cltd
fcmovbe
dec
mov
push
je
push
adcb
test
cmp
movl
adc
adc
ret
and
sub
pop
cmp
push
jmp
pop
xor
roll
int
daa
mov
cmp
push
clc
push
mov
popf
scas
mov
pop
cmp
inc
lret
lret
movsb
jmp
nop
jbe
sbb
addr16
sbb
and
jb
sub
sub
ja
adc
adc
fs
movb
sbb
pop
hlt
or
dec
aam
xor
rclb
pop
popa
pop
int3
imul
xor
or
push
or
nop
dec
xchg
pop
push
lea
inc
stc
or
sub
in
inc
movsb
dec
mov
enter
and
je
sub
in
xor
lret
nop
pop
cmpsb
cmp
xor
fs
push
sub
inc
add
nop
and
pop
lods
sub
mov
popa
es
xorl
nop
add
arpl
rcrl
and
ljmp
jae
fistpl
push
sub
pop
arpl
incb
imul
adc
push
adc
cmc
jge
adc
jbe
adc
pop
jo
cwtl
es
add
iret
dec
sbb
sub
push
and
sbb
jl
sbb
adc
dec
movsb
add
add
imul
mov
mov
push
adc
adc
xchg
lds
aaa
int
flds
aaa
mov
xchg
or
rclb
sbb
iret
jecxz
or
pop
and
pop
pop
aaa
add
sbb
adcb
nop
add
or
or
and
dec
jecxz
xor
inc
std
push
test
mov
aad
cli
dec
ja
inc
sbb
or
addr16
sub
fdivrs
aam
sub
jmp
mov
or
shr
mov
push
cs
mov
jl
fisubrs
call
test
out
ror
mov
add
add
add
mov
iret
add
pop
push
lahf
and
adc
or
pop
int
in
dec
sbb
aaa
add
mov
ja
mov
call
and
lds
jmp
or
loopne
dec
sbb
rcl
push
je
pusha
add
or
or
lret
aam
add
scas
pop
fstpt
out
xchg
sbbb
dec
bound
mov
test
xchg
sbb
sub
ret
jne
nop
adc
ja
mov
and
pop
sbb
pop
iret
push
or
jns
je
add
cmpsb
in
movsb
or
cmp
add
cltd
xchg
dec
add
clc
pop
xchg
dec
jb
add
and
xor
add
dec
leave
fadds
int3
leave
xchg
dec
xor
les
leave
and
xor
dec
or
mov
and
push
mov
or
add
mov
imul
icebp
nop
jns
xor
pop
xor
pop
cmpb
add
mov
push
and
loopne
mov
mov
das
mov
adc
lods
adc
dec
xchg
push
push
xor
loop
mov
lods
or
scas
test
sub
add
add
lods
es
bound
lahf
xchg
lea
pop
pop
loope
cmp
pop
pusha
mov
je
or
rcrl
add
adc
or
cmp
popf
mov
xchg
mov
push
and
jge
jbe
xchg
jno
mov
jmp
dec
mov
mov
je
pusha
xor
and
xor
add
sbb
arpl
adc
adc
cmp
test
rcrb
push
pusha
xor
or
sbb
clc
adc
dec
dec
ds
daa
and
js
fcompl
adc
inc
mov
je
or
das
sbb
xchg
bound
jmp
push
pop
mov
nop
push
or
popa
jbe
ficompl
mov
pop
xchg
push
arpl
pop
int3
jmp
xor
aam
jmp
xor
inc
push
cmp
push
cmp
cmp
xchg
movsb
mov
jne
test
pop
xchg
cmpsb
inc
je
sbb
sub
ja
add
testl
add
adc
sbb
shrb
xorb
lahf
outsl
aam
jg
leave
dec
add
xor
dec
js
or
fstl
and
sbbl
mov
leave
pop
les
loopne
roll
pop
data16
stos
adc
dec
or
adc
and
fwait
addl
sbb
ficompl
jo
cmp
mov
rcll
jmp
jmp
psrlq
jge
add
sbb
dec
daa
cwtl
jnp
push
and
pop
mov
mov
pop
and
xor
cmpsb
and
mov
pop
shrb
fwait
jb
andb
push
lock
mov
jae
dec
loope
xchg
and
js
push
or
sbb
or
sbb
cli
cmp
je
mov
and
mov
dec
push
mov
jmp
xor
mov
arpl
ja
ret
jae
cmp
adc
pop
adc
loopne
jmp
or
push
adc
jbe
ss
sbb
or
add
push
mov
sbb
gs
add
ret
repz
xchg
in
test
test
cmp
or
dec
jg
mov
dec
fcomps
repnz
and
cmpsb
push
dec
lods
adc
mov
cmp
dec
mov
subb
bound
fildll
adc
push
sarl
je
cmpb
mulb
data16
fmull
mov
imull
xchg
cmp
inc
pop
jmp
inc
inc
imul
jl
in
add
and
inc
mov
sub
add
fcoml
xchg
fidivl
mov
cmc
dec
adc
sub
je
es
xchg
test
or
popa
xor
mov
sbb
dec
or
pop
adc
add
pop
sub
mov
andb
push
and
ds
cmpsb
pusha
popaw
or
xchg
test
or
lods
in
push
sbb
adc
lcall
test
mov
and
sarb
movsb
xor
push
xor
mov
xor
or
inc
adc
adc
insl
push
sti
xor
nop
xchg
test
and
mov
pop
sub
ret
xor
xor
inc
adc
mov
pusha
mov
insb
inc
xchg
jo
faddl
fistpll
jbe
pop
mov
mov
fcoml
pop
mov
sbbl
inc
add
add
mov
adc
cmp
mov
notb
jmp
fs
pop
inc
jbe
add
or
test
cwtl
ss
xlat
or
sub
orb
adcb
xor
pop
nop
stos
or
xor
mov
mov
add
sub
pop
xor
and
shll
add
fmuls
rorl
and
inc
pusha
mov
or
adc
aad
adc
sahf
mov
mov
cmp
xor
fbstp
outsb
mov
push
lret
mov
or
inc
or
dec
push
pop
mov
ljmp
dec
dec
sub
mov
add
les
pushf
pushf
mov
adc
in
fbstp
xor
cmp
xor
nop
push
xchg
lods
mov
or
sub
inc
push
mov
inc
jecxz
mov
fcomps
das
imul
loope
adc
lret
pop
push
pop
xchg
push
pop
ret
movsb
iret
das
enter
aas
lea
imul
jne
pop
dec
push
push
cmpsl
sub
in
ds
cltd
int3
jmp
cmp
sbbb
jle
ja
aas
lcall
or
out
jo
pop
adc
bound
sbb
xchg
mov
dec
aas
les
or
add
mov
clc
or
dec
mov
push
mov
pop
call
or
lret
shlb
jno
xchg
fstl
dec
jae
fists
pushf
sbb
lcall
and
test
lods
int
rcrb
mov
xor
cmp
ja
movsl
pop
lcall
enter
int
int3
dec
rclb
xchg
out
sbb
push
fcomps
cs
mov
fs
dec
jae
call
rorb
pop
loop
fcmovnbe
mov
nop
out
jnp
ja
dec
je
mov
adc
add
pop
mov
dec
inc
lea
addr16
mov
or
pop
pop
pop
test
xchg
repnz
mov
xor
or
add
mov
daa
push
jbe
hlt
push
sub
push
or
lea
cmc
sbbl
add
add
cmp
dec
xor
add
bnd
xchg
sub
jge
adc
mov
push
xchg
lods
inc
push
or
or
popf
fwait
jle
andb
mov
cltd
daa
lock
hlt
sbb
ja
addr16
pop
cmp
sub
jmp
dec
je
cmpb
add
or
or
xor
aaa
mov
push
xor
cmp
mov
or
mov
cmp
sbb
cwtl
dec
xor
or
adc
cmp
jne
sub
inc
push
and
dec
push
loop
cmpsb
mov
out
and
add
imul
and
iret
xchg
insb
inc
pushf
pushf
inc
mov
fidivrl
and
imul
pop
sar
inc
int3
jmp
stos
sbb
inc
push
scas
adc
jno
jmp
xor
int
mov
es
pop
in
fisubrl
bound
mov
sahf
rclb
inc
mov
add
push
sbb
and
pusha
pushl
pusha
cmp
jne
push
push
sub
test
jb
lds
imul
push
pop
outsl
test
pop
add
or
dec
les
shll
adc
fnstcw
loop
bound
fcoms
cld
adc
jo
test
add
sarb
push
stc
add
test
decb
fmull
iret
fidivrs
bound
add
push
push
mov
rcrl
in
add
shll
mov
mov
and
and
pop
cld
sbb
inc
cld
cld
push
jb
cs
pushf
cmp
add
push
and
xor
push
leave
mov
xor
mov
in
in
xor
pop
test
fs
cltd
mov
sbb
cmp
out
xchg
mov
adc
mov
and
mov
test
push
ret
xchg
push
jmp
push
xor
add
test
add
mov
dec
pop
ljmp
lea
or
or
test
test
jo
out
pop
mov
outsb
enter
adc
push
add
xor
test
jbe
add
js
dec
sbb
push
cmp
inc
shrb
ret
lret
cmp
nop
mov
cmp
fildl
test
js
jae
xchg
cmpl
fdivrl
test
jmp
xor
and
clc
pop
cmp
sub
sbb
add
cmp
or
mov
xchg
mov
lds
jne
fldt
jge
je
jg
loop
ret
sbb
adc
mov
mov
sub
inc
jo
xchg
and
cmp
jecxz
or
in
and
xchg
mov
rcl
cmp
mov
dec
add
mov
dec
jo
push
movsb
dec
add
int3
imul
push
or
or
xchg
inc
cmpb
push
jl
inc
inc
ret
dec
and
add
or
rorb
sbb
jo
lcall
jns
xchg
push
jp
mov
insl
imul
inc
push
mov
rsqrtps
mov
or
in
into
sarb
fldl
aam
jo
stos
adc
leave
mov
adc
testb
pop
jne
ficompl
dec
push
mov
dec
jl
push
mov
inc
and
mov
cmp
rol
jo
or
cmpsl
in
and
int3
cltd
or
sbb
popa
dec
lods
dec
gs
add
push
shll
stc
aas
inc
dec
and
sbbl
xchg
and
xlat
or
push
add
push
lock
xchg
lods
and
mov
std
and
or
rorl
test
shrb
xor
inc
je
sbb
hlt
repz
cmp
adc
repz
adc
xor
jne
ljmp
iret
imul
pop
adc
mov
or
fcmovnbe
push
sarl
lods
or
or
mov
pop
lret
out
out
rclb
inc
adc
push
lcall
jb
dec
imul
sub
sub
mov
lahf
inc
push
inc
scas
cld
cld
cmp
or
xchg
adcb
orb
pop
or
or
pop
leave
xor
movsb
push
repnz
push
dec
sub
jne
xor
dec
pop
add
fs
test
jecxz
sbb
jg
std
test
inc
mov
stos
pop
push
les
push
push
cmp
inc
add
aas
cmp
leave
pop
mov
pop
pmuludq
xorl
dec
js
sti
jne
pop
inc
jb
or
mov
adc
adc
gs
dec
and
out
insl
xor
and
sub
imul
push
mov
xchg
das
pop
bound
fstpt
rcll
cmp
jae
mov
sub
inc
sahf
xor
mov
imul
inc
addb
xor
cltd
dec
popl
add
aaa
jb
dec
lahf
neg
dec
or
and
imul
lea
xor
pop
push
xchg
and
inc
xor
nop
subl
inc
vphaddwd
clc
dec
add
push
push
xchg
cmpb
inc
jle
jb,pn
and
sti
popf
inc
add
je
ret
mov
rcrb
add
and
adc
lcall
add
cmp
add
lea
js
fucomp
dec
dec
or
and
arpl
mov
adc
mov
or
push
mov
inc
popa
jp
jbe
pop
jo
dec
adc
cmpsb
rcrl
loopne
mov
movsl
mov
xchg
sbb
jnp
cmc
out
adc
test
dec
add
and
fcomps
adc
and
dec
test
push
inc
sahf
aam
andb
loop
xchg
addr16
mov
xchg
adc
sarl
push
xchg
imul
test
add
ljmp
bound
adc
dec
add
stos
and
les
jo
lcall
jns
mov
ret
fs
fsubl
xlat
jo
fwait
sbb
arpl
into
push
inc
fsub
cmpsb
dec
sbb
cli
iret
inc
fnsave
movsl
out
add
dec
add
adc
add
lods
enter
test
jl,pn
dec
rcrb
cmp
push
push
leave
int3
adc
popa
jge
lock
xlat
mov
cwtl
and
jmp
mov
push
shl
scas
push
aaa
mov
cmc
jne
loope
mov
mov
adcl
sbb
mov
push
xor
cmpl
jne
mov
insb
xor
mov
fcomps
xor
ja
in
sub
jno
add
and
loopne
lods
mov
mov
test
sbb
inc
cmpsl
mov
mov
lds
xchg
or
jnp
mov
or
addr16
call
jne
sub
lock
or
je
lea
lea
xchg
leave
xchg
clc
xor
in
sbb
aam
inc
rolb
fbld
ss
mov
xchg
adc
cld
push
and
je
popa
add
mov
mov
in
push
mul
push
dec
in
push
mov
loopne
fwait
xchg
push
xchg
sub
xchg
movsb
sbb
std
cmp
sbb
push
pop
mov
sbb
scas
and
cmc
xor
push
ds
mov
and
hlt
gs
fmull
push
sbb
or
add
les
mov
in
dec
cmp
and
inc
in
pop
aaa
fs
in
adc
clc
sbb
add
push
xchg
xchg
stos
inc
imul
sub
pop
hlt
push
cmpsl
mov
jmp
xor
xchg
xchg
cmpsl
push
inc
sub
sub
cmpl
insb
dec
repnz
shll
call
je
fcomi
push
mov
adc
xlat
adcl
mov
xor
inc
hlt
into
push
lea
dec
xor
inc
xor
hlt
jg
popf
xchg
dec
into
inc
xor
add
lea
push
cmc
mov
mov
xor
push
xchg
fs
xor
inc
add
test
cmp
js
adc
adc
push
pop
fst
mov
pop
subl
mov
loopne
xor
inc
pop
mov
in
inc
xor
push
xchg
mov
clc
dec
pushl
pop
pop
mov
cwtl
xor
pop
xor
popa
dec
add
fsubrl
push
jno
add
dec
xchg
mov
iret
movsl
xchg
or
push
inc
sub
lret
adc
test
sbb
loopne
or
lahf
pop
push
sub
test
pop
fidivs
or
cmp
hlt
xor
add
xlat
add
adc
lock
adc
jb
stos
sahf
jp
inc
push
ficomps
or
adc
sub
hlt
push
push
add
in
test
ret
xor
iret
orb
js
outsl
ret
or
mov
add
pop
and
push
fnstenv
xor
add
push
sbb
inc
add
pop
inc
mov
adc
out
add
int3
or
dec
push
inc
cld
or
int3
imul
je
imul
and
sub
pop
sbb
add
lret
push
test
shrb
mov
xor
and
dec
scas
push
scas
arpl
mov
out
cli
mov
add
and
into
movsl
repnz
sahf
call
loopne
cltd
fs
rolb
inc
or
ret
roll
xchg
in
test
hlt
pusha
movsb
bound
dec
pusha
inc
push
xor
pop
jns
adc
call
xchg
movsb
and
xchg
pop
adc
insb
mov
jbe
inc
in
adc
and
or
push
adc
add
nop
lahf
hlt
lea
inc
and
pushf
mov
mov
xchg
je
inc
and
push
addl
mov
jge
test
add
push
push
lods
sub
cmp
xor
cld
mov
inc
outsb
pop
mov
xchg
cld
cld
cld
clc
mov
and
mov
cmp
push
sbbb
cmpsb
adc
leave
mov
mov
and
adc
mov
inc
mov
and
jbe
mov
or
mov
mov
xor
cmp
shrb
or
mov
xor
ss
lock
bound
and
or
mov
rorl
imul
scas
incl
dec
xor
push
loopne
mov
or
sub
sub
or
pop
aas
cs
jl
or
roll
aas
fs
imul
xorl
mov
dec
push
sbbb
fs
subb
or
push
add
pushf
push
aas
adc
add
pusha
stos
add
pop
dec
mov
add
pop
mov
add
pop
sub
adc
jbe
adc
pop
sub
add
les
xor
sub
enter
xchg
filds
sbb
jo
or
dec
stos
dec
movsb
in
add
add
pusha
dec
fbld
xchg
or
push
sbb
mov
add
xchg
fists
push
dec
inc
fildll
mov
add
ss
cwtl
adc
fildll
sub
ja
adc
movsl
dec
push
nop
filds
push
inc
popa
sub
sbb
and
fildll
sbb
xchg
or
or
mov
add
sub
loop
mov
xchg
xchg
xor
stc
call
int
inc
dec
movsb
pop
mov
pop
loop
mov
call
mov
test
lea
stc
jnp
dec
sbb
jp
xor
ret
add
dec
movsb
dec
inc
mov
add
cmp
jbe
int3
jbe
jae
rcr
mov
inc
mov
inc
or
and
ss
in
addb
jp
movsb
sub
mov
adcb
ja
testl
enter
outsb
push
dec
hlt
pop
mov
fmull
and
xor
adc
cmp
sub
icebp
inc
cmp
rcrb
out
adc
push
inc
mov
pop
sbb
test
jle
pushf
cmp
add
ret
sub
and
adc
cmp
jecxz
add
fbld
pop
outsl
or
push
fldenv
xor
xchg
mov
movl
dec
out
pushf
sbb
jae
icebp
scas
sub
test
in
pop
or
adc
pop
fistpll
in
xor
testl
stos
adc
data16
push
mov
addl
cmp
mov
or
dec
xchg
test
push
adc
dec
iret
add
sbb
or
pop
xchg
stos
adc
inc
mov
insb
xor
adc
stos
xchg
xor
or
adc
nop
andl
cld
adc
pop
jo
xchg
pop
cld
push
mov
add
js
adc
clc
xor
bnd
lock
push
stos
nop
and
je
sbb
add
xor
sahf
cld
sbb
xor
pushf
lahf
push
ret
nop
xor
push
je
xorb
call
mov
sbb
iret
pop
and
dec
jno
rcrb
mov
pop
and
js
add
mov
es
or
lahf
cs
pusha
dec
xor
jmp
add
pop
add
decl
push
xor
pop
and
and
imul
and
sub
lcall
xor
inc
add
shll
inc
inc
dec
lcall
and
push
imul
imul
imul
cmpsb
imul
and
push
dec
jl
gs
nop
hlt
fadds
dec
push
pop
inc
cmp
insb
out
testl
cmp
inc
in
dec
add
or
push
inc
out
lea
rcll
and
and
pop
shll
sub
and
cmpsb
imul
xor
inc
cmp
sbb
mov
inc
xchg
inc
dec
and
sbb
add
push
outsl
lcall
fs
push
cmpsl
imul
adc
js
mov
aad
adc
jg
popl
adc
ja
je
xor
adc
xor
jo
arpl
pop
pusha
push
adc
fnop
inc
es
subb
jns
push
mov
mov
add
test
add
mov
sbb
add
and
shrb
mov
es
repnz
mov
lcall
dec
dec
or
push
pop
xchg
inc
enter
sub
inc
mov
jp
cwtl
insb
loope
cld
jp
mov
insl
gs
xchg
cmc
dec
sub
addl
test
adc
xchg
test
jno
ret
adc
lcall
cmpsl
and
xchg
sbb
fwait
in
lods
fwait
adc
xchg
pop
dec
adc
inc
loope
sub
decl
lods
mulb
or
and
add
xor
mov
pop
mov
repnz
push
mov
or
jl
insl
test
mov
mov
decl
mov
imul
test
lahf
adc
cmp
cltd
pop
push
xchg
test
xchg
jo
inc
jnp
push
nop
add
jecxz
mov
mov
sbb
dec
pop
cltd
lea
and
sarl
adc
push
lcall
inc
loopne
xchg
or
dec
test
xchg
push
test
ljmp
pop
mov
add
jl
mov
arpl
rcrl
dec
sbb
loopne
dec
and
andl
mov
xchg
pop
or
fnstcw
push
dec
mov
adc
jo
es
jp
addl
adc
adc
ja
push
movl
dec
fstpt
roll
push
and
adc
sbb
fdivs
and
rcl
adc
addb
adc
iret
fstpt
imul
cwtl
push
push
adc
in
imul
pusha
pop
sub
or
dec
push
inc
adc
inc
orb
add
inc
mov
loop
inc
jb
push
mov
sbb
and
imul
push
push
out
je
cmp
in
jb
add
outsl
adcb
ffreep
mov
fldl
add
or
pop
fcoml
loop
shrl
jne
dec
stos
cmp
dec
or
add
jl
mov
dec
ljmp
aam
push
mov
mov
sbb
sub
aaa
mov
push
jnp
and
mov
popa
cmpsl
loopne
loope
sub
sub
ljmp
outsb
sbb
and
jb
imul
mov
mov
push
xlat
xor
cmpl
sbb
iret
lock
je
ss
inc
or
adcb
push
ds
aaa
cmp
sti
loope
std
je
jo
xor
push
or
xor
cltd
or
jae
push
popa
push
fildll
sub
test
dec
cmp
sub
mov
lcall
out
sarb
shll
jnp
push
or
or
push
cmpsl
icebp
sub
push
inc
add
push
ret
and
push
cmp
decl
movsb
pop
aam
int3
or
and
movsb
loopne
sbb
push
fldcw
je
push
mov
enter
add
cmpsl
mov
push
push
aaa
or
cmp
mov
roll
mov
jb
out
and
dec
xorb
push
mov
push
js
inc
and
inc
inc
adc
xlat
icebp
sub
and
nop
fdivs
xchg
add
push
fistpl
sbb
add
xchg
inc
movsl
sub
mov
mov
sbb
cmp
and
lods
aaa
subb
xchg
out
faddp
fistl
cmp
enter
mov
mov
outsl
xor
or
addb
lret
mov
jmp
shl
aam
mov
xor
sub
cs
sub
popa
cmp
or
lds
or
aas
es
fcoml
dec
xchg
sub
je
dec
and
adc
fildl
dec
in
orl
call
cmp
mov
inc
add
jecxz
xchg
aam
mov
mov
inc
shl
rorl
pop
fcoml
push
pop
or
leave
scas
and
cltd
sub
test
mov
ror
popa
mov
call
jne
jo
loopne
popf
jmp
or
aad
popf
arpl
adc
es
and
fisubs
test
add
sbb
xor
in
pop
aam
ret
xor
push
xchg
loopne
jg
jp
mov
push
sbb
sbb
mov
loope
ficompl
addr16
xor
pop
repz
fistps
test
jne
sbb
imul
or
bound
adc
cmp
sbb
daa
into
negb
xchg
lock
ret
mov
popl
adc
add
inc
cmp
add
add
fisubrl
pop
jp
in
iret
pop
subl
xchg
dec
frstor
or
andnps
pushf
dec
and
pop
jmp
cmc
add
mov
adc
dec
xor
xor
imul
push
pop
out
je
push
inc
and
push
jo
ret
imul
push
jno
xor
pop
push
jmp
mov
sub
ss
repz
adc
push
fldl
push
adc
ljmp
jmp
sub
sbb
xor
adcl
xchg
sarl
lods
add
andb
sbb
sbb
addl
sbb
jae
nop
fildl
mov
ds
cmpsb
enter
negb
rorl
stc
push
pop
xchg
dec
or
je
cmpsb
jae
addb
cmp
push
push
in
sbb
jo
push
mov
popa
test
xor
xor
addb
fs
and
andl
insb
arpl
movsb
push
lock
xchg
push
addr16
pop
sub
call
add
test
adc
mov
pop
pop
cmpsl
and
in
add
rcr
orl
inc
add
or
cmp
push
jns
dec
int
adc
movsb
scas
divl
xorb
mov
jmp
jge
shll
ret
push
adc
in
fildl
cmp
xor
sbb
mov
mov
and
lock
flds
adcb
mov
jb
shr
sub
add
and
xchg
add
or
aas
and
pop
mov
daa
addb
add
push
cwtl
repz
popa
adc
rclb
inc
jnp
and
lret
sub
push
pop
jbe
dec
add
mov
and
dec
icebp
sub
imul
movb
out
pop
aad
fiaddl
shr
rorb
add
imul
loopne
ss
cmpsb
fwait
inc
pop
pop
pop
pop
in
push
xor
popf
adc
orl
sub
jg
mov
xchg
aas
sbb
fcoml
xchg
xchg
sub
dec
prefetch
or
into
or
sbb
xlat
add
daa
cmpsb
mov
xchg
sub
mov
push
ja
xor
imul
lret
cmp
sbb
aam
mov
mov
mov
inc
dec
or
push
xchg
pusha
in
dec
fs
pop
rorl
fadds
sub
adc
lds
ret
ja
add
sbb
jecxz
sub
sub
mov
pop
add
cltd
notl
and
sub
das
sub
out
or
pop
inc
inc
pusha
xor
add
dec
xor
ds
and
pusha
push
sbb
jb
mov
or
adc
inc
in
mov
pop
adc
adc
mov
push
rorl
loop
sbb
and
mov
into
leave
int3
or
xchg
mov
mov
mov
loope
pop
add
jg
adc
emms
add
and
roll
and
ja
dec
push
int
jl
ret
jno
enter
pop
mov
cltd
jl
mov
sbb
sub
xchg
je
mov
sub
jl
imul
xchg
add
mov
adc
sbb
inc
cli
or
test
shll
jg
mov
mov
pcmpeqb
sbb
sbb
mov
hlt
lds
sub
movl
ret
push
push
movl
in
popa
cmc
insb
jnp
jl
lds
cmp
push
jl
inc
or
cmp
ret
sbb
and
lock
or
leave
lahf
xor
pop
adc
jbe
lret
inc
mov
and
ja
mov
enter
pusha
or
adc
add
inc
subb
or
push
mov
enter
andl
jl
xchg
nop
cmp
test
jo
sti
add
pop
dec
pop
fisttpll
adc
ja
ret
mov
inc
pop
xor
xor
flds
pop
fisttps
and
in
sub
lcall
add
rcll
sub
inc
dec
dec
fisttpll
es
and
sbb
mov
xor
xchg
sub
mov
repnz
pusha
rorl
ljmp
adc
andl
rcrb
test
pop
jl
out
fucomi
mov
lods
rol
scas
add
push
shlb
push
add
je
add
and
mov
repz
vpsubsw
add
and
insb
into
mov
int3
inc
enter
mov
sub
cmpsb
sbb
aam
lcall
lret
leave
xchg
push
sbb
adc
out
sar
or
adcl
jmp
fstl
aam
jle
fcompl
mov
testb
cmp
mov
pop
inc
add
xchg
cmpsb
cmc
mov
aaa
adc
lds
sysenter
pop
gs
mov
sub
pop
dec
inc
dec
icebp
dec
dec
psubsb
out
cmp
jmp
jge
jl
int
cmpsl
and
and
lret
adc
dec
jmp
or
xchg
mov
xor
ret
adc
sbb
leave
pop
lcall
pop
arpl
sbb
cmp
push
jecxz
repz
jp
int3
into
les
jg
adc
es
push
pushf
jbe
push
sbb
jle
das
pop
inc
ds
das
sub
push
orl
or
mov
sbb
cwtl
dec
xchg
loope
mov
lahf
cmp
daa
jl
lcall
adc
loope
rcr
sbb
push
cmp
sub
cmpsb
mov
pop
aaa
pop
xor
push
clc
sarl
dec
loop
sbb
loop
pop
sub
add
push
daa
enter
cmpsl
push
rorb
cmc
dec
call
push
xor
add
sbb
adc
test
add
imul
dec
cmp
cltd
insb
xor
mov
inc
je
jbe
aaa
fmul
fstps
lret
push
pop
dec
cmp
adc
jbe
sti
dec
out
mov
mov
fidivl
shrb
addb
or
fwait
das
push
mov
rcll
dec
fsubs
test
lret
stos
sti
sub
addb
push
push
pop
enter
lods
cmp
decb
imul
es
fidivl
iret
add
push
shlb
push
fs
pop
lock
sub
jl
mov
jle
lock
push
icebp
pop
push
ret
sti
sub
push
add
in
ljmp
stc
dec
push
jne
test
imul
pusha
push
mov
push
enter
mov
in
mov
sbb
ficoms
push
lea
das
sub
ja
js
jmp
push
mov
inc
sbb
and
shlb
xor
inc
fwait
xlat
clc
shrl
add
mov
scas
xor
stos
cli
sub
or
test
shll
incl
sub
push
cmp
fdivrs
js
lahf
lods
shll
mov
push
lods
rcr
push
push
and
add
imul
dec
jne
or
dec
xchg
pop
mov
sahf
hlt
out
mov
xor
push
ja
lods
test
push
icebp
gs
sahf
pop
mov
test
xchg
jb
adc
lea
jo
or
lea
cmp
clc
adcb
ret
adc
dec
lds
jp
cmp
in
ret
cmc
sbb
lods
inc
add
int
push
or
mov
dec
mov
mov
mov
clc
inc
pop
adc
cmp
stos
lods
cld
shll
mov
sub
shll
push
imul
movsb
or
leave
pop
pop
repz
js
mov
lret
push
leave
xchg
dec
mov
xorb
jmp
fists
xchg
repz
fsts
cmpsb
ja
cmp
jge
into
sbb
shrw
ljmp
jge
sub
cmp
xor
pop
into
sub
std
add
fsubl
fucompp
cwtl
sub
xor
jns
push
xchg
jbe
roll
fcmovu
jl
in
jmp
js
incl
movsb
sahf
lret
push
sub
aad
add
aaa
jge
pop
jnp
sbb
sbb
or
cwtl
shlb
push
mov
push
push
icebp
or
bound
rclb
fadds
mov
mov
or
clc
sub
cmp
sbb
nop
xchg
aad
movsb
fucomip
sbb
cmp
inc
cmpsl
cwtl
or
or
jecxz
nop
hlt
and
test
add
test
cmpb
movsb
sub
aas
pusha
addr16
push
inc
push
xchg
lock
cmp
dec
add
pop
ljmp
pop
jge
add
xchg
adc
add
xor
loopne
in
dec
add
std
inc
cmp
pop
lock
push
loope
push
fldl2e
sahf
inc
xor
push
mov
sub
cli
scas
sti
scas
push
jno
pop
and
adc
ds
inc
sahf
js
lcall
sahf
sbb
sub
leave
pop
popa
addb
cmp
fidivl
add
pop
add
inc
or
cmpsb
xor
add
lea
inc
xor
jo
or
or
inc
loopne
addl
loopne
jg
imul
or
inc
in
fs
jle
loope
mov
ss
xchg
test
gs
push
or
lret
cmc
add
inc
mov
lea
or
pop
lahf
adc
std
das
rol
movsl
in
inc
cmpl
add
clc
lock
jno
cmc
aam
dec
popa
push
xchg
jmp
mov
das
jge
push
mov
gs
pop
sbb
nop
fs
loop
inc
add
lods
arpl
loopne
ret
or
inc
scas
dec
push
add
pop
and
icebp
mov
push
enter
sbb
xchg
fists
cmp
js
loope
sub
sub
push
and
and
mov
jl
xchg
cmp
jge
out
add
sub
xor
push
xchg
fisubrs
xchg
imul
and
jnp
pop
and
add
adc
jle
adc
mov
icebp
and
call
inc
ret
lcall
adc
mov
add
inc
pop
pop
data16
inc
dec
adc
or
cmpsb
imul
push
and
push
repz
dec
jmp
cmp
add
inc
in
add
jg
test
fsubp
mov
mov
adc
mov
mov
nop
cmovl
dec
test
push
mov
dec
cmp
enter
mov
push
push
call
shr
push
jo
stc
dec
adc
popa
xchg
push
subb
popa
lods
cmp
pop
imul
and
cmp
pusha
or
push
dec
push
movups
jge
inc
pusha
subl
sar
xchg
adc
push
add
gs
imul
xchg
cmp
rcl
movsl
push
add
push
jl
adc
outsl
adc
push
or
xor
jbe
sub
and
dec
repnz
inc
cmp
xchg
ljmp
or
pop
cmpsl
or
ja
sub
cmp
cmp
stos
xor
into
icebp
nop
imul
sbb
stos
loopne
add
and
addb
mov
das
rcl
sbb
shrl
leave
xchg
mov
fldcw
test
push
sub
mov
addr16
and
mov
jo
ret
pop
and
jb
pusha
rcrl
pop
test
fwait
push
add
cmp
mov
lahf
xchg
lods
add
push
inc
dec
outsb
out
aad
push
pop
lea
add
out
and
xor
sub
add
jl
test
jg
adc
fiadds
dec
dec
dec
imul
mov
and
inc
rol
rcr
sub
dec
mov
cmc
jge
sbb
pop
lods
lcall
fidivs
mov
mov
fstpl
jmp
xchg
sub
outsl
fldl
push
sbb
xchg
mov
lea
dec
jns
push
xchg
loopne
pop
push
ja
ss
icebp
shll
roll
fimuls
popf
lret
adc
and
dec
dec
xchg
push
leave
mov
mov
add
fdiv
mov
and
or
cmpsb
jno
in
or
pop
sub
pop
xlat
dec
add
adc
sub
inc
mov
sub
adc
andl
popf
ss
mov
mov
jne
fstl
std
dec
pop
or
add
sub
fldl
fsubl
inc
rcrl
and
loop
faddp
fstl
jmp
push
mov
subl
dec
and
mull
sub
shlb
xchg
add
test
out
call
sbb
clc
or
roll
push
xor
mov
movups
rorl
subb
repz
filds
and
fiaddl
xlat
mov
push
ss
insb
push
add
sub
add
test
das
push
push
sbb
sub
js
dec
cmp
add
mov
lret
push
adc
and
pop
push
or
or
and
insb
inc
ret
adc
icebp
int
sub
inc
sarl
pop
nop
push
out
add
inc
add
push
test
jmp
adc
sbb
inc
dec
movsl
push
adc
sub
mov
sbb
and
sub
adc
fadds
call
add
arpl
mov
shrb
ret
pop
jo
movsl
sub
push
mov
cmp
adc
adc
adc
push
jne
pop
lahf
imul
push
fldl
fwait
sub
hlt
pusha
mov
sub
insl
jo
cmpsl
and
xchg
dec
clc
ljmp
insl
or
dec
inc
int
mov
add
add
mov
es
inc
sahf
pusha
test
pop
sub
push
push
xchg
mov
divb
or
test
or
shlb
xor
jno
insl
sbb
add
xchg
push
mov
push
xlat
or
pop
adc
jmp
mov
or
out
pop
mov
sti
loop
and
push
and
and
rorb
out
adc
adc
ret
test
xchg
add
sbb
sbb
pusha
repz
sub
or
push
dec
and
sub
ss
loop
pop
orb
sub
sub
mov
mov
mov
xchg
xchg
adc
out
call
cmpsl
push
scas
mov
xchg
xor
nop
fbld
sbb
iret
nop
aam
jmp
arpl
sub
jg
fsubl
scas
xchg
enter
int3
sub
jmp
mov
ds
pop
scas
mov
mov
imul
add
inc
mov
add
stos
and
pop
das
aas
rcl
cmp
mov
cmp
loop
pop
ja
lods
mov
fdivr
fisttpl
adc
mov
adc
adc
xor
loop
inc
add
or
icebp
rorb
rcrb
mov
lea
xor
inc
xor
xor
out
dec
dec
insb
xchg
push
mov
dec
je
or
add
sub
cli
or
push
xchg
test
fiaddl
xchg
in
add
xchg
and
pop
inc
xor
addr16
outsl
ja
frstor
dec
and
or
int3
roll
adc
inc
pop
push
and
inc
insl
lock
add
xor
sub
push
insb
lock
sub
add
add
jle
xor
pop
ret
adcb
pop
mov
xor
sbb
gs
enter
xorl
sarl
jno
ret
ror
mov
jbe
loopne
pop
mov
mov
test
add
enter
movsl
xchg
gs
mov
decb
xchg
movsl
imul
mov
ljmp
sti
xor
insl
mov
shrl
test
inc
push
mov
jb
xor
shlb
push
fdivrs
jno
push
std
inc
clc
adc
sub
into
rcll
jno
and
fsts
cmp
adc
push
lock
je
sub
jg
cltd
jl
cmp
jae
cmp
jae
stos
adc
loopne
adc
push
sub
mov
xchg
rolb
or
sahf
dec
leave
xor
cmpb
cmp
pop
jae
fildll
xor
dec
adc
push
or
xor
movb
cmp
in
inc
cmp
xlat
and
cmp
call
sbb
fistpll
mov
push
jne
add
outsb
push
jnp
sbb
add
iret
push
lods
adc
adc
cmp
in
or
mov
sbb
push
stos
inc
loop
ret
fildl
inc
add
xchg
sub
in
inc
addl
or
cmp
loopne
jle
out
push
in
and
clc
or
sarb
pop
and
smsw
jge
cmp
xor
and
dec
sub
pop
pop
push
push
or
out
hlt
and
in
mov
or
jo
inc
mov
add
outsb
and
jmp
pop
pop
jno
addr16
pop
or
fwait
push
jl
push
clc
jge
int3
jne
test
dec
add
rclb
add
mov
sub
ret
pop
mov
push
mov
clc
loop
sbb
inc
sbb
jo
add
lea
adc
add
pop
lds
scas
pop
gs
shlb
add
add
mov
mov
pop
pop
sbb
jmp
or
or
sbb
or
int3
and
pusha
fnsave
outsb
pop
or
or
loopne
dec
lods
or
xchg
or
add
sub
ds
test
jbe
sarl
dec
adc
xor
add
xchg
je
inc
push
push
mov
outsl
push
xor
inc
loop
adc
xor
pushf
mov
xchg
add
xor
pop
mov
orb
fstpl
cmp
lods
testb
or
jne
movzwl
xor
cltd
pop
idiv
xchg
lods
and
sub
mov
xor
scas
adc
outsb
icebp
lock
ret
jmp
andl
enter
pop
dec
xor
cmp
inc
pop
pop
adc
out
lock
adc
int
loopne
add
push
mov
mov
in
nop
adc
xor
test
ja
insb
mov
in
or
or
mov
imul
pop
idiv
cmpl
ja
or
fbstp
add
inc
adc
sbb
aam
jmp
in
sbb
insb
aam
stos
lods
fildl
fmull
lret
add
hlt
sbb
aaa
sub
and
rcr
pop
adc
data16
out
leave
es
scas
and
fldl
push
push
test
mov
pushf
inc
sahf
subb
inc
xor
dec
mov
out
push
aam
inc
lahf
inc
add
add
pop
push
addr16
mov
cmp
hlt
mov
je
insl
or
adc
push
js,pt
lcall
pop
mov
pop
mov
jle
adc
adc
inc
mov
cmp
hlt
mov
mov
sbb
mov
cli
lea
adc
enter
or
loope
sbb
mov
mov
adc
dec
fidivrs
loopne
dec
fs
mov
dec
dec
stos
and
push
add
lcall
dec
rol
push
xchg
shlb
outsb
sbb
pop
sbb
push
push
cmp
repnz
cmp
xchg
clc
xchg
test
sbb
mov
in
rcrb
rcr
scas
inc
or
scas
mov
xchg
loop
mov
idivl
inc
xchg
sar
test
mov
cmp
mov
js
fildl
out
or
lods
outsb
enter
out
pop
mov
add
pop
pop
or
clc
divl
pop
addr16
lock
push
adc
lods
mov
add
daa
xor
mov
add
cmp
fisttpl
inc
inc
xchg
mov
push
sub
or
push
xchg
ret
adc
mov
movsb
mov
inc
scas
adc
xchg
fsubrp
inc
pop
sar
xchg
jne,pn
movsb
imul
ja
dec
add
js
push
add
shl
pop
jno
mov
fs
fldl
into
cltd
or
xor
lock
hlt
cmc
dec
nop
adc
clc
add
fidivrs
push
dec
sbb
push
add
call
push
js
xor
loopne
and
push
lahf
fmull
pusha
shll
jbe
adc
and
add
mov
mov
mov
sbb
sbb
dec
xor
sbbl
sbb
fdivrl
js
jp
add
pop
je
data16
adc
mov
mov
test
or
or
inc
adc
inc
adc
insb
pop
push
iret
sar
and
push
hlt
or
sbb
xchg
mov
add
jnp
int3
push
pop
clc
fldl
and
sbb
add
lahf
mov
jae
pushl
add
add
mov
je
sbb
sbb
mov
gs
pushl
lcall
adc
push
jo
adc
movsb
mov
mov
clc
ja
sti
and
jge
orb
rcl
jbe
je
cmp
xlat
mov
add
or
push
lods
popl
pop
xor
adc
gs
cmpsb
xor
mov
sahf
xor
and
pop
lret
and
push
orl
adc
iret
andb
dec
shll
jp
pushl
sbb
push
ds
sti
lret
out
enter
pop
das
sub
pop
pop
adc
or
push
dec
add
dec
out
or
and
data16
adc
add
movl
xchg
aas
je
dec
fsubr
pop
pop
dec
mov
cs
nop
or
test
cmp
sbbl
jb
sub
cltd
cmp
pop
test
dec
add
or
push
add
shrl
call
mov
outsb
adc
movsl
cmpsb
and
jg
push
or
push
sbb
and
dec
inc
pusha
mov
push
xchg
dec
mov
mov
push
in
adc
fadds
repz
and
ret
sbb
mov
mov
xchg
add
or
xorl
lock
push
je
inc
cmpb
ds
call
pop
or
fldcw
pop
dec
out
lea
std
jbe
xor
mov
ds
mov
push
sub
and
dec
push
sbb
cmp
push
xchg
in
sbb
call
sbb
mov
sbb
xchg
lret
in
in
add
rclb
ret
inc
shr
rcr
testb
sub
sbb
dec
jl
or
daa
adc
lahf
gs
dec
inc
cs
jg
lods
out
or
in
push
js
dec
mov
push
cmc
rol
adc
lahf
shll
test
or
add
cli
mov
insb
xlat
jl
jle
or
mov
push
jge
shlb
test
add
push
shlb
sti
test
push
ret
scas
fmull
negb
inc
fcmovb
sti
pop
jmp
das
jecxz
xlat
add
in
push
and
neg
dec
cmp
or
daa
push
fildl
lret
aad
sub
in
call
insl
cmp
fs
sar
pop
adc
je
cmpl
jb
mov
or
xor
add
fildll
mov
adc
jb
repz
mov
popf
xchg
ljmp
add
mov
insb
dec
and
pop
sub
dec
and
jb
sbb
and
outsb
pop
int3
jno
rcrl
and
shlb
xchg
push
or
inc
pusha
sbb
ret
xchg
test
xor
cmc
or
lcall
or
sub
or
mov
ret
add
mov
mov
inc
decl
aad
out
test
push
mov
pmuludq
pop
add
rcrl
lods
dec
ja
jge
test
push
js
inc
pop
pushf
pop
loope
mov
push
jo
mov
mov
ja
pop
push
add
mov
mov
fisttpll
lea
movsb
cmpsb
sub
add
adc
xor
xor
cmpb
jo
loop
dec
mov
test
fmuls
push
dec
mov
call
add
lock
push
mov
in
cld
nop
cmpsl
push
sub
mov
clc
xor
loop
inc
sub
std
pop
jecxz
rclb
push
hlt
push
add
data16
je
inc
jge
loope
scas
filds
ds
nop
push
lods
xor
fistpll
rolb
push
push
inc
addl
or
loop
sub
sub
sub
push
nop
movsb
ficoms
cmpl
xor
stos
mov
stos
adc
or
jmp
cmp
aam
lock
pop
adc
add
mov
cmp
add
jne
pushl
or
fadds
loope
ret
inc
je
int3
ss
mov
mov
popf
dec
icebp
mov
mov
fadd
pop
adc
adc
ss
adc
subl
and
jae
orl
push
inc
test
dec
in
mov
pop
mov
push
rolb
or
xor
cmc
cmp
loopne
xlat
js
test
xchg
clc
inc
dec
in
dec
repnz
inc
lea
push
inc
push
iret
adc
pop
pop
mov
xchg
xchg
adc
insl
mov
mov
cmp
pop
pop
je
jl
pop
test
ret
test
sub
outsl
aas
aad
mov
jmp
inc
push
cmp
imul
or
dec
pop
stc
imul
sub
and
leave
and
jo
xchg
out
sub
jbe
pop
pop
call
ret
jecxz
aad
in
fnstcw
rolb
pushf
xlat
in
repnz
xchg
adc
push
push
aam
inc
sub
test
inc
rolb
rol
fwait
push
sub
and
dec
cmpl
pusha
push
rorb
js
mov
adc
push
test
and
push
repnz
cmp
jno
jae
hlt
cld
xchg
cltd
pop
or
stc
cmp
nop
jne
je
clc
jmp
mov
add
or
mov
pop
push
js
xchg
icebp
pxor
dec
xchg
xchg
or
dec
pop
adc
sbb
pop
shl
xorb
jbe
sar
sarb
jl
cmp
adc
pop
jge
ljmp
dec
add
jle
jne
sub
stos
mov
push
adc
push
dec
stos
adc
mov
pmaxub
push
adc
insb
xor
adc
inc
mov
in
adc
add
cs
sbb
mov
in
sub
dec
add
or
mov
pusha
cmpsb
or
jb
fcomp
jae
data16
sub
sbb
add
je
cli
and
push
aaa
or
lea
cmp
and
add
dec
es
ficompl
icebp
add
outsb
sub
dec
or
in
jbe
outsl
xchg
inc
inc
pop
stos
out
cs
enter
jae
insb
fiadds
arpl
jle
daa
clc
in
jns
in
mov
shlb
pop
add
cmpsb
jecxz
sub
jl
adc
ss
shlb
flds
mov
cmp
fmuls
ret
decb
or
mov
or
pop
scas
pusha
loopne
popa
nop
out
dec
sbb
mov
push
push
jo
sbb
add
mov
dec
and
sub
mov
daa
lcall
push
jno
adc
push
add
fadds
ret
add
data16
lods
imul
or
int3
faddl
test
add
and
sub
pop
push
dec
insb
and
rcrb
push
or
rorb
sbb
clc
mov
jns
mov
clc
sub
xchg
and
push
push
dec
adc
negl
and
add
mov
arpl
pop
lea
cwtl
dec
jg
add
test
sub
cmpsl
jp
fwait
push
fs
fcompl
in
xchg
psubb
clc
dec
xlat
pusha
push
dec
sub
rolb
inc
xchg
rclb
sub
lcall
inc
inc
push
xor
je
sub
ds
cli
add
test
out
inc
cmp
add
add
jo
and
pusha
sub
inc
mov
jo
sub
shr
adc
add
pop
inc
xor
insb
xchg
push
xor
and
adc
mov
iret
dec
fs
jmp
mov
cmp
loope
add
push
cmpb
mov
xchg
push
test
adc
pop
adc
sarb
inc
and
pop
lea
in
dec
out
push
push
dec
pusha
js
clc
imul
xchg
jnp
mov
push
fdivl
xchg
insl
dec
ret
pop
dec
adc
lock
push
push
xchg
jne
mov
jl
cmovl
sub
pop
pop
outsl
inc
inc
aaa
cs
gs
or
je
mov
dec
cld
in
add
je
dec
xorb
cmp
push
mov
rorl
imulb
cmp
mov
lods
pop
xchg
mov
out
ficompl
sbb
cmp
sbb
and
into
fs
fcompl
arpl
adc
das
xchg
popf
enter
add
mov
mov
movsb
mov
movsb
shrl
dec
xor
push
jo
push
lods
push
icebp
ficompl
jbe
xor
push
push
shll
call
pop
sub
adc
fdivrp
sbb
inc
jge
fiadds
sbb
into
sub
cmp
sbb
add
shlb
push
es
mov
push
pop
ja
adc
cld
push
xor
jge
push
sti
mov
or
xor
mov
pop
and
adc
pop
push
and
xchg
sbb
rolb
roll
mov
sub
mov
daa
and
bound
mov
jne
jb
ret
aaa
cmp
pop
pop
cmp
ljmp
imul
test
xchg
imul
adc
popa
jmp
push
push
movsb
sub
fcmovnbe
add
push
add
loopne
movl
rolb
fwait
inc
adc
inc
or
andl
sbb
push
mov
lea
xor
push
add
dec
in
sti
test
or
add
push
sbb
inc
jl
inc
jmp
push
lock
sahf
fdivrs
cmp
mov
repz
sbb
push
aas
xchg
pop
fisubrs
std
add
add
jo
push
mov
subb
mov
movhps
mov
mov
mov
sbb
cwtl
push
fdiv
outsb
xchg
sti
jbe
jae
cmp
out
xchg
xor
or
adc
xchg
or
aaa
sub
test
mov
or
add
loop
idivl
dec
add
cmp
ljmp
or
push
cmp
jns
lock
in
pop
cmp
mov
add
adc
push
cwtl
pop
sarl
fisubrs
cmp
sbb
mov
mov
jmp
pop
add
jle
jne
call
or
fs
pop
aaa
and
lret
xchg
push
add
es
int3
inc
xchg
pop
std
js
in
or
or
xlat
in
pop
jne
sbb
mov
test
js
add
jmp
loopne
loope
lock
lds
dec
inc
orb
jne
push
mov
enter
sbb
adc
sub
imul
insl
dec
mov
adc
dec
xchg
insb
pusha
inc
push
push
inc
push
cmpsl
popa
jg
add
xor
or
sahf
cs
push
pop
pop
leave
pop
sahf
mov
sub
push
lea
inc
lock
push
jne
lahf
arpl
push
dec
mov
jo
aad
rcrb
xchg
sbb
mov
cltd
inc
push
push
lret
push
inc
add
lock
cmp
int
xor
sub
imul
inc
push
hlt
xchg
rclb
jb
test
sar
in
push
repnz
dec
loopne
jnp
xchg
das
inc
shl
cmp
push
dec
clc
dec
lods
jne
dec
jle
ret
dec
sbb
adcl
subl
or
roll
sbbb
inc
cwtl
push
and
add
and
adc
mov
out
push
arpl
ljmp
test
lea
inc
cmp
nop
orl
notb
mov
push
mov
pushf
lcallw
call
xchg
jne
lds
push
sub
inc
pop
mov
xor
jo
imul
push
sar
xor
mov
xor
push
push
pop
and
mov
adc
mov
rcrl
bound
push
adc
test
add
xor
push
ficoms
adc
mov
push
jne
pop
es
push
push
clc
or
push
xor
dec
push
clc
xor
jecxz
test
mov
call
inc
fmull
test
add
cmp
sub
loopne
mov
pop
mov
pop
inc
inc
in
or
imul
cmp
outsl
mov
fidivl
push
je
adc
je
or
insb
lcall
mov
xchg
sbb
addb
xor
sbb
jle
movsb
cli
mov
pop
enter
jmp
and
mov
into
ret
add
add
sub
pop
fisubl
cmpsl
cmp
push
cmp
and
stos
sub
push
adcb
push
and
and
jbe
pop
test
jl
jge
lods
pop
cld
lock
adc
push
ljmp
adc
mov
lea
or
out
and
mov
test
add
mov
push
or
xor
cld
sar
insl
sub
and
outsb
mov
rorl
inc
into
mov
push
xchg
xor
push
je
daa
cmpsb
pop
pushl
cmp
push
cmpsl
sbb
mov
push
or
add
stos
adcb
test
cmp
andb
jecxz
xor
or
add
loopne
cwtl
mov
xchg
push
js
cmp
xchg
pop
outsl
mov
mov
dec
adc
add
push
pop
xor
push
into
push
outsb
das
or
andb
push
jbe
movsb
push
jle
fwait
in
jns
cmpsb
adc
inc
stos
inc
adc
sbb
sti
fildll
pushf
testb
push
or
inc
push
dec
adc
stos
dec
mov
or
or
imul
sbb
rcr
les
pushf
push
push
cmp
and
loop
mov
subl
jae
inc
aam
jbe
push
mov
dec
jo
test
sub
dec
imul
out
sbb
pop
mov
je
daa
jnp
mov
mov
jle
jl
dec
hlt
push
insl
dec
loope
xchg
jbe
sbb
mov
inc
cmp
inc
cmp
xor
inc
out
cmc
jp
lea
jae
fadd
jge
or
push
pop
enter
or
sub
add
jbe
sub
sbb
movsb
fwait
mov
adc
cmc
adc
jne
cmp
push
inc
add
add
push
iret
loopne
inc
sub
and
mov
mov
or
adcb
ret
cmc
aas
rorb
push
push
enter
shl
inc
sbb
cli
mov
insb
jne
mov
and
inc
push
add
xchg
jp
mov
cmc
adc
in
adc
or
loopne
jb
xor
xchg
adc
and
aaa
push
das
fcmovbe
inc
stos
jb
cwtl
loope
push
arpl
mov
ret
xor
adc
scas
sub
and
cmp
jmp
xlat
mov
or
push
lea
out
call
push
loopne
xchg
ljmp
pop
inc
mov
in
add
push
sbb
bound
popa
divl
cmp
lcall
and
inc
add
and
mov
enter
fcompl
sub
aas
mov
test
mov
repz
sub
jmp
mov
bound
sub
loop
dec
inc
movsl
rclb
lods
cmp
add
adc
sarb
lea
mov
popa
cmp
xlat
shll
pop
cmp
pop
jle
xor
inc
dec
or
cmp
aad
cmp
pusha
xchg
sub
rorl
scas
push
push
out
add
and
jl
inc
scas
inc
or
adc
push
sub
ljmp
in
sbb
mov
leave
ret
xchg
mov
popa
loopne
sbb
cmp
push
es
jae
pop
lret
jle
or
test
sbb
and
mov
mov
outsb
sbb
sub
push
add
push
cmova
dec
mov
xor
repnz
sbb
adcb
add
or
and
fwait
dec
sub
mov
adc
hlt
jle
js
dec
adc
push
lret
adc
insb
adc
push
dec
dec
adc
xor
inc
inc
sub
pop
mov
pop
pop
sahf
lret
repz
xchg
out
and
or
in
sbb
repz
rcr
lea
adc
aam
push
adc
and
push
sub
shlb
push
bound
mov
cmp
es
add
clc
outsb
insb
xor
and
inc
movsl
xchg
aam
mov
nop
std
adc
shrl
je
push
pop
pop
push
jne
mov
jg
scas
xlat
out
repnz
jl
xor
add
adc
or
arpl
cmp
sbb
sub
and
orb
lea
sbb
outsl
jns
rcll
push
jmp
repz
push
push
and
mov
xchg
mov
imul
icebp
pop
inc
and
addl
aaa
dec
andps
into
pop
or
lods
mov
add
lock
adc
repnz
dec
sbb
xchg
pushf
inc
adc
sub
shll
sub
sub
rolb
inc
fcomps
pop
and
adc
insb
xorb
inc
mov
jne
push
sub
push
fs
addr16
mov
add
xor
pushf
add
ret
scas
or
cmp
addl
call
dec
in
pop
add
or
fsts
jae
xor
jecxz
push
inc
rcrb
mov
mov
pop
add
dec
sub
cld
iret
movsb
adc
outsl
inc
rol
jecxz
scas
mov
cmp
xchg
jl
test
mov
or
pop
push
dec
roll
and
in
inc
fwait
leave
addl
add
jmp
sbb
lea
adc
add
or
loopne
push
or
sbbl
test
imul
imul
mov
outsb
pusha
xchg
add
es
jo
inc
inc
mov
pop
push
add
adc
gs
out
cmp
pop
pushf
sub
and
insb
insb
je
hlt
roll
cmp
mov
jmp
pusha
sub
and
inc
jns
sub
pop
add
test
mov
lods
out
stc
lcall
sbb
adc
dec
jnp
inc
pop
adc
nop
mov
push
push
cwtl
push
push
pop
xchg
push
lock
push
leave
sub
mov
shlb
push
jo
mull
jl
and
rcrl
jge
popa
femms
jo
jno
loopne
push
mov
push
pop
jne
or
mov
lods
xchg
pop
push
mov
lods
xchg
out
test
inc
inc
lret
jae
leave
in
lret
mov
jnp
ret
lods
mov
xor
jle
and
leave
push
lcall
add
and
fistl
and
or
fmul
push
js
add
cmp
sub
subl
imul
outsb
pmaxub
mov
ret
cli
insl
jge
jne
rorb
cmp
push
mov
call
stos
jl
scas
scas
roll
insw
enter
lock
cmp
cld
sub
imul
adc
ja
xchg
mov
mov
lret
mov
push
shll
jo
lock
cmp
sarb
push
lret
or
sub
jns
mov
mov
imul
push
cmp
inc
test
mov
jo
dec
test
clc
xor
mov
js
cwtl
mov
pop
sbb
jno
jl
adc
sbb
mov
xchg
add
xchg
std
inc
mov
or
es
rcr
cmp
push
push
testl
add
in
cmp
inc
mov
xor
mov
xchg
outsb
add
sbb
sub
sbb
scas
inc
das
push
mulb
add
les
scas
inc
cmp
sbb
enter
add
inc
or
rorb
pusha
aam
push
mov
movsb
repz
jecxz
in
push
jne
push
inc
andb
push
pop
sub
dec
mov
jnp
hlt
push
dec
push
push
nop
fcomps
mov
fsqrt
test
iret
adc
sub
jne
mov
jo
fdivr
das
pusha
cmp
add
add
lds
or
sbb
jb
movsl
mov
arpl
out
inc
cmpb
mov
jo
into
push
les
or
and
mov
add
sbbb
push
push
adc
daa
nop
and
xor
dec
and
xor
sub
push
jmp
add
les
mov
or
xchg
fisubl
mov
jb
cmp
imul
adc
and
divl
rcr
sbb
xchg
dec
fistpll
not
push
arpl
nop
jo
out
xchg
dec
shll
in
dec
mov
sbb
jp
dec
add
xchg
cwtl
push
lods
jno
imul
adc
add
adc
inc
nop
cmp
in
les
lds
icebp
or
icebp
dec
loopne
ror
inc
cmpsl
faddl
cwtl
out
das
insl
add
and
int3
je
cs
and
bound
rcrb
addl
mov
or
adc
aaa
pop
inc
arpl
rclb
pop
bnd
pop
in
sbbl
sbb
in
or
int3
orb
add
push
sbb
mov
jne
shll
or
push
rcr
mov
mov
cmp
call
sbb
pop
in
or
xchg
je
cmpsl
pop
rolb
sbb
add
push
ret
rorb
mov
add
rorl
push
pop
testb
xor
sub
and
je
xlat
mov
insb
jne
ret
and
add
add
cmpsl
push
push
test
sbb
xor
aaa
mov
mov
loope
jo
add
imul
push
pop
into
adc
pop
jbe
aaa
dec
xchg
xor
rclb
aad
call
push
or
xchg
jge
inc
clc
mov
mov
data16
mov
adc
es
and
scas
cld
pop
xor
and
hlt
int
push
add
xchg
and
xchg
xchg
popa
addr16
or
mov
pop
pop
xchg
hlt
mov
es
adc
mov
push
aam
fstps
pop
and
ror
sbb
push
xor
inc
xchg
lock
in
mov
sub
idivb
dec
subb
nop
mov
rcll
inc
in
enter
jnp
xchg
out
or
mov
xchg
jle
shrl
xor
cmp
sub
add
in
push
jae
xor
pop
ljmp
add
movzwl
out
lds
cmp
jmp
push
loopne
clc
jnp
sahf
notl
and
pop
loopne
sbb
xor
clc
call
push
add
sbb
ret
sub
dec
dec
mov
lock
adc
pop
rcl
cmp
cmp
fistpl
or
imul
aam
or
in
pop
cmc
push
and
into
test
pop
or
mov
clc
dec
stos
cmp
add
mov
or
sub
sub
pop
and
mov
js
clc
in
clc
mov
leave
add
add
mov
and
loopne
pop
cmp
xor
ja
movzbl
and
cmp
pop
js
add
in
adc
mov
cmp
jl
push
push
lret
jmp
das
lret
sub
dec
jl
pop
pop
cmp
jg
mov
jno
addb
nop
sub
lods
lods
fnstenv
mov
pop
ja
jbe
sbb
mov
in
add
ja
faddp
add
jnp
push
push
cmp
and
popa
mov
dec
push
jo
ljmp
andl
cmpl
jae
stos
sbb
push
push
jnp
dec
dec
and
in
mov
pusha
mov
ljmp
pusha
cmp
loop
ret
xchg
adc
nop
xchg
jno
cmp
gs
rcll
dec
decb
jns
out
lock
jne
push
add
cmpsb
jo
sub
jp
sbb
sub
push
loop
pushw
aam
into
add
cmp
cmp
pop
ret
mov
sahf
inc
push
pop
mov
addb
insb
xchg
mov
or
sub
inc
inc
adc
hlt
push
mov
lea
rclb
push
push
mov
pop
nop
sbb
add
and
push
add
inc
push
pop
pop
ret
addb
adc
mov
adc
adc
xchg
ret
jmp
cmp
pop
ret
mov
push
out
push
mov
add
or
ret
jno
and
pop
sbb
rcll
inc
mov
in
cltd
sbb
push
andb
stc
adc
test
das
aaa
push
aam
testl
mov
cmpsl
lock
jle
cwtl
push
push
push
scas
push
into
in
faddl
add
mov
loopne
fadds
add
in
loopne
sbb
lahf
pusha
inc
jl
push
enter
push
fldl
inc
outsb
incb
jp
divps
orb
jae
dec
shl
sub
movsb
adc
and
or
iret
lret
pop
enter
add
dec
iret
in
add
mov
cmpsl
sub
arpl
shlb
inc
insb
or
lds
mov
mov
test
cmp
inc
mov
xlat
sub
imul
das
push
ret
push
sahf
test
in
mov
fsubs
clc
pusha
insb
popa
and
mov
add
jg
inc
dec
jge
push
push
and
daa
lock
push
arpl
cmp
and
fwait
and
stc
or
and
cmp
fstpt
mov
sbb
sub
push
das
mov
divl
cmc
and
clc
int
inc
rcr
cwtl
xchg
aaa
xor
call
btc
pop
test
fbld
lds
pop
sbb
sub
in
xor
in
adc
push
push
or
ljmp
sahf
sbbb
je
push
rcrb
dec
xor
xor
push
mov
add
pop
in
lock
add
mov
fisttpll
pop
adc
inc
repz
push
xor
mov
dec
adc
jle
rolb
sbb
xor
xor
mov
inc
or
inc
add
or
jle
movsb
add
hlt
outsl
outsb
and
cmp
push
push
or
and
xchg
sahf
and
cmpsb
xor
xchg
adc
xchg
and
lods
pop
enter
mov
or
adc
adc
sbb
jp
mov
loopne
mov
test
adc
mov
add
fistpl
or
inc
sub
ret
inc
push
inc
or
not
add
xchg
jno
jg
sub
test
je
lcall
les
mov
add
add
jecxz
out
pop
xor
lea
push
and
test
pop
adc
aas
test
add
push
pop
rolb
lahf
push
lods
and
in
sbbl
aam
mov
sub
and
fstp
stos
sbb
adc
jl
idivl
fwait
test
mov
jns
daa
fiaddl
sbb
xor
imul
mov
sub
add
sarl
or
push
add
ret
push
sbb
push
loope
pushf
or
inc
push
fcmovnbe
cmpl
xor
sti
adc
push
insl
repnz
sbb
push
test
pop
mov
jl
sbb
add
popa
es
add
jmp
nop
gs
daa
xchg
cmpsb
and
aad
test
les
dec
ss
lea
mov
add
adc
testl
mov
xor
mov
movsb
mov
inc
movsbl
mov
testb
sbb
push
lret
jmp
dec
sub
orl
test
imul
sub
or
add
cld
sbb
sub
pop
das
or
gs
das
sub
sarl
or
add
jge
mov
out
das
xchg
pop
lock
or
jmp
fcomp
push
dec
popf
or
cmp
inc
jle
jo
inc
dec
cmp
inc
or
ss
inc
mov
sbb
inc
fldl
adc
sub
loope
pushf
pop
dec
mov
add
mov
mov
cmp
movsl
dec
test
or
repnz
xlat
xor
adc
adcl
lods
mov
xchg
sbb
ret
add
dec
xchg
sbb
push
inc
inc
mov
jne
push
mov
jecxz
xchg
cmp
insl
xor
mov
dec
je
mov
jno
inc
movsb
pop
adc
push
inc
ret
sbb
movsl
lea
sbb
push
shrb
fdivrs
jo
push
shrb
sbb
xor
jns
loopne
mov
fsubl
push
rcll
push
bnd
mov
outsl
or
lret
leave
xor
jp
rolb
inc
xchg
add
or
mov
in
into
fcom
mov
adc
or
cmp
addl
add
rcrb
add
sbb
call
pop
sbb
nop
inc
and
clc
mov
or
pushl
inc
cmp
aaa
int
add
mov
pop
adc
sbb
or
adc
je
lock
movsb
lock
cmp
hlt
push
mov
push
mov
lods
sub
sub
in
ret
add
insl
pusha
fstps
inc
jmp
je
popa
ret
adc
popa
inc
sbb
or
and
jnp
cmc
inc
mov
adc
push
cmp
mov
in
mov
out
out
data16
into
lods
adc
xor
repnz
or
jp
add
cld
push
pushf
ret
add
mov
ja
adc
or
inc
xchg
sbb
push
cmp
in
mov
lea
je
cmp
sub
xchg
inc
enter
repz
std
add
add
cwtl
subb
in
movsl
je
rorl
push
sub
sub
add
and
mov
and
add
enter
mov
lret
lock
add
movsb
push
pop
lret
leave
xchg
xchg
iret
rcl
mov
enter
rolb
fdivrs
and
mov
pop
and
mov
xchg
push
sbb
xchg
movsl
xchg
xchg
add
and
movsl
or
inc
push
pop
jmp
sub
push
push
in
dec
mov
in
bnd
fimull
idivb
or
push
aad
prefetch
adc
in
jp
add
aad
movsl
push
clc
sbb
and
pushf
xchg
xor
rorb
or
call
and
adc
fcomps
gs
addr16
mov
ds
add
fiadds
push
es
je
jne
cmp
sbb
push
and
lods
jmp
std
adc
add
dec
shl
clc
cld
hlt
push
fcoml
sahf
fsubrs
mov
push
iret
push
aaa
xor
pop
lea
lret
ss
lods
or
xlat
inc
add
icebp
push
mov
pop
lods
adc
push
loopne
or
dec
inc
shll
call
adc
push
mov
xor
movsb
jo
and
adc
inc
xlat
xchg
mov
jp
shrb
lea
aad
aam
xor
pop
hlt
in
dec
or
movl
push
jge
cmp
mov
enter
loopne
pop
xor
push
mov
or
aaa
push
xchg
rcrb
test
mov
pusha
mov
filds
ficoml
and
movsb
jp
jg
sbb
add
loope
ja
mov
cmpsl
nop
rcrl
add
mov
jno
pop
inc
ss
cmp
add
sub
push
mov
jl
xor
mov
push
cmp
cmp
push
inc
push
add
sub
dec
rcrb
or
adc
pop
or
pop
and
mov
cli
cmp
inc
punpckhbw
dec
scas
push
stos
cltd
mov
sarl
pop
pop
cmp
mov
dec
mov
mov
insb
cmp
jl
imulb
addr16
or
xchg
pop
push
sbb
jle
js
adc
imul
sarb
jle
sti
imul
mov
nopl
pop
cltd
mov
inc
pop
dec
repz
mov
cmp
in
xor
mov
pusha
loopne
add
pop
push
push
gs
loopne
mov
mov
adc
cmp
adc
push
jp
pushl
sbb
inc
faddl
jmp
mov
sub
subb
pop
push
xchg
daa
jg
arpl
add
mov
ret
dec
test
loope
popf
movsb
xorl
data16
sbb
mov
cli
and
sbbl
lea
jno
cwtl
pusha
cmp
hlt
ds
add
cmpsb
mov
mov
add
dec
icebp
sbb
ficoml
popa
xlat
ficomps
adc
sbb
movsl
adc
filds
jmp
fstpl
aaa
mov
dec
aas
stos
cmpsl
xor
inc
clc
xor
sbb
movsb
je
and
mov
andb
adc
mov
fcoms
inc
rclb
js
push
leave
dec
lret
dec
xchg
push
sbb
mov
ljmp
xor
aam
pop
mov
mov
sarl
pop
rcrb
cmp
add
lea
adc
loopne
loopne
xor
sbb
aad
sub
sub
out
push
pop
xlat
sub
je
lods
add
sbb
out
hlt
xor
sbb
clc
mov
movsb
adc
hlt
je
fadds
es
addr16
ss
outsl
sub
adc
jl
mov
stos
outsl
mov
push
push
and
std
roll
push
mov
pop
add
add
adcb
jb
xor
inc
push
adc
dec
pop
frstor
inc
inc
push
int3
gs
clc
jp
and
das
mov
cld
add
or
enter
lcall
cmpl
dec
sti
sub
add
mov
and
dec
jne
cmpsb
arpl
out
adc
cld
andb
leave
inc
icebp
sbb
push
pop
pop
ss
add
scas
lahf
fildll
inc
jmp
fdivrs
push
dec
jbe
push
xor
cld
pop
jge
fwait
sub
dec
push
mov
jp
and
adc
testb
add
or
xchg
mov
scas
adc
push
shlb
imul
sbb
lock
add
or
gs
dec
dec
lea
testl
orl
test
loopne
aas
into
push
les
xchg
outsb
neg
push
adc
std
das
loope
xchg
push
test
sub
sub
and
orl
loop
mov
cs
pushf
test
push
js
dec
xor
mov
andb
cli
adc
lcall
popf
push
dec
fcomps
movsb
sbb
adc
mov
jecxz
scas
push
outsb
mov
adc
ret
sub
lea
mov
xor
inc
xor
les
int3
bound
sbb
loop
jmp
push
jnp
imul
and
mov
vaddps
mov
adcb
in
jle
xor
sbb
dec
mov
mov
push
push
add
sarl
sub
mov
sbbb
cmp
insb
iret
je
test
and
lods
je
scas
inc
lods
xorl
insb
adc
xchg
pusha
mov
mov
add
out
or
xchg
clc
ljmp
test
push
sub
dec
call
test
pop
es
mov
sbb
push
mov
jle
roll
sbb
mov
pop
jge
jo
pusha
and
fadds
test
jmp
iret
jb
xor
fistpl
lock
mov
nop
icebp
arpl
clc
push
or
ljmp
out
push
or
out
cmc
and
and
dec
ret
aam
push
aaa
xchg
jp
cmp
loope
and
xchg
mov
mov
cmpb
sbb
push
sbb
jne
or
push
iret
xchg
inc
adc
adc
and
mov
add
xor
push
pushl
mov
cwtl
and
adc
and
xchg
xorb
dec
dec
ret
roll
adc
nop
adcb
xor
movsl
fdivs
outsb
pusha
ret
jns
pop
push
push
push
idiv
cwtl
call
stos
or
mov
movsl
inc
shll
cmpl
or
or
gs
outsb
test
nop
push
or
sarb
in
daa
mov
mov
push
sbb
push
push
jp
in
cmp
push
fldenv
into
arpl
test
jmp
addb
add
inc
sbb
pusha
imul
add
push
shrb
enter
cmp
add
pushf
push
xchg
ljmp
fists
ret
or
cmp
punpckhwd
arpl
lret
clc
push
movb
push
ja
repnz
je
inc
in
sarb
into
aam
lahf
push
iret
push
lret
shr
or
add
pusha
push
aam
jmp
jmp
sahf
clc
and
add
pusha
xor
pushw
mov
mov
add
movsb
fsts
adc
loop
subb
fcompl
stos
int3
pop
or
in
inc
adc
inc
cmp
adc
iret
add
stos
mov
jb
dec
xor
push
push
jae
divl
dec
hlt
mov
xchg
sbb
mov
dec
insb
push
in
dec
xor
xchg
leave
sar
aad
mov
loope
push
and
addr16
or
sbb
loopne
inc
add
in
hlt
mov
push
inc
or
sar
sarl
or
jae
sbbb
fistpll
sbbl
in
add
imul
outsl
sub
mov
test
pushf
xchg
lahf
inc
cmp
nop
adc
and
pop
pop
push
push
push
mov
cmpsl
add
pop
xor
clc
jg
add
dec
movsb
sub
sub
fidivrl
adcb
cmpsb
mov
and
inc
test
jo
jle
add
icebp
daa
push
xor
pop
jne
jge
mov
pop
mov
lods
lss
mulb
pop
add
and
sub
fsubs
mov
push
xor
imul
or
sbb
mov
push
sbb
out
test
and
scas
inc
jnp
ficoml
or
sub
pop
cmp
jo
and
sahf
fisubs
mov
cmp
orl
sbb
jl
push
pop
es
cmpsl
jbe
test
js
or
adc
mov
stc
and
in
push
fld
inc
adc
xor
fdivr
fcoms
inc
fadds
out
and
js
mov
andb
push
pop
js
repz
push
test
lock
sti
push
jbe
inc
xor
fidivrs
adc
pop
push
pop
ljmp
xchg
ret
es
and
adc
add
out
add
cmp
adc
inc
xor
cmp
sti
or
neg
pop
sbb
inc
decb
add
mov
jge
jl,pt
scas
adc
mov
stc
ljmp
sbb
push
xchg
jne
sub
mov
sbb
or
jle
jmp
mov
sub
sbb
mov
add
jmp
add
pusha
dec
imul
or
jbe
subl
inc
and
fisttpl
xor
push
or
out
inc
jo
dec
xchg
xchg
jb
add
inc
pop
lcall
mov
jns
push
sub
add
sbb
mov
orl
mov
adc
cmp
jb
faddl
out
and
adc
in
xor
mov
mov
ja
fmuls
flds
ljmp
ret
cmp
adc
fcoml
sub
sbb
hlt
or
mov
xchg
add
sub
adc
push
xchg
push
mov
jne
inc
push
je
or
jle
push
imul
add
inc
dec
cwtl
add
stos
dec
sbb
ds
jle
repnz
mov
jb
push
or
push
cmp
call
jle
mov
lods
push
cltd
push
gs
push
or
outsb
hlt
paddusb
lds
push
call
shrl
mov
jno
inc
pop
nop
jno
shrb
inc
pop
xor
clc
add
pusha
and
sbb
cmp
cs
movsb
neg
pop
andl
adc
cli
decl
mov
lret
cmp
neg
daa
push
push
mov
ss
shll
cwtl
cld
inc
hlt
add
andb
sbbl
rorb
jo
xchg
les
inc
sbb
scas
cld
rolb
aas
lods
inc
cmc
and
push
mov
sbb
pop
xchg
andl
fstl
stos
pop
inc
punpckhbw
cmp
sub
xor
adc
or
ret
ds
cmp
xor
fisubrs
lock
jbe
pop
lea
mov
push
push
jbe
or
mov
push
mov
push
and
or
mov
bound
cmpsl
les
add
jmp
icebp
push
dec
push
insl
ljmp
cmpl
addr16
lods
aad
aam
dec
jecxz
movsl
lods
xchg
jecxz
sbb
popa
lret
data16
addl
ja
ss
test
add
mov
sbb
push
dec
dec
jb
pop
push
roll
inc
cmp
jb
loope
addl
into
fbstp
mov
mov
add
out
cs
xlat
rcrl
mov
lea
fwait
sbb
xor
jl
mov
add
add
popf
inc
clc
sbb
mov
or
push
gs
push
adc
loopne
insb
ret
bound
imul
or
xor
jns
insb
add
push
and
subb
inc
pushf
push
fstps
bound
pushf
jl
movsl
imul
das
sub
hlt
add
adc
rcll
or
insb
cs
icebp
nop
push
pop
adc
xor
cmp
in
icebp
pop
push
or
or
enter
add
test
push
or
les
sub
flds
mov
add
insb
adc
in
es
dec
push
outsl
dec
inc
lret
inc
andb
in
or
rorb
inc
pop
or
decl
call
add
push
sahf
mulb
stc
push
add
iret
lods
add
cmpsb
loopne
shlb
fistl
xor
sub
mov
or
add
and
lahf
mov
pop
jne
inc
xchg
pop
jge
add
mov
fisubrs
rcl
push
dec
rclb
jne
movswl
or
fisttpl
sub
mov
jb
imul
test
mov
adc
xor
mov
das
loopne
dec
push
fldl
fsub
rol
pushf
aaa
fldz
cmp
pop
int3
inc
data16
push
adc
pushf
loopne
lcall
cmp
sub
pushf
sbb
pop
fs
adc
sub
sub
clc
xchg
je
inc
popl
addb
xchg
imulb
out
pop
mov
adc
adc
fs
xlat
ja
add
xchg
inc
mov
sub
jl
mov
call
mov
mov
dec
test
jbe
xor
loopne
fld
add
fldpi
in
cmpb
cmpsb
mov
xor
fchs
sbb
mov
clc
jl
ud0
imul
jb
in
add
subl
and
rcl
insl
and
lea
lods
test
dec
sub
pop
jns
adc
push
and
shll
sbb
mov
mov
xor
dec
popa
cmpsl
stc
mov
mov
test
mov
xchg
insb
popf
dec
sar
clc
leave
cmp
inc
dec
pop
dec
dec
push
xchg
inc
or
push
inc
or
call
jle
addb
cs
mov
jmp
and
jo
addb
or
mov
add
add
lods
add
inc
pop
pop
pop
jg
xor
iret
inc
add
push
mov
test
sub
push
enter
pop
xor
push
inc
inc
inc
cmp
test
jl
test
loope
pop
mov
daa
xchg
pop
push
push
loopne
pop
imul
leave
cmpsb
clc
and
mov
inc
add
push
mov
pusha
and
inc
mov
in
lods
dec
xchg
cmpsb
mov
and
add
jb
in
sbb
nop
xchg
xchg
adc
iret
rcll
push
or
test
push
push
loopne
cmp
jbe
in
add
cmp
scas
mov
nop
into
ljmp
bound
mov
sahf
push
sbb
rcrb
mov
sar
sbb
adc
add
jae
imul
aam
fsubp
lcall
fwait
sub
sbb
pop
push
ss
bound
vpminsw
mov
pop
xchg
or
jo
mov
push
js
movsb
mov
cmp
inc
add
mov
inc
lea
shl
sbb
push
call
mov
cs
movsb
or
push
fadds
mov
push
fsubs
inc
cmp
adc
push
sbb
sub
dec
pop
mov
push
xlat
lcall
or
repz
xchg
andl
aam
in
or
rorb
in
dec
adc
xchg
jmp
push
ss
mov
push
cmp
cmpsl
inc
cmpb
mov
and
pop
mov
or
sub
dec
or
out
les
int3
add
pop
dec
xchg
addb
and
adc
lcall
mov
xlat
add
mov
ret
xchg
imul
es
add
ja
sbb
pusha
cwtl
dec
repz
fadd
int
or
fcoml
in
clc
add
insl
cmp
add
nop
mov
cltd
dec
push
inc
pop
inc
add
enter
xor
and
jns
add
cmc
add
sbb
mov
lcall
mov
jnp
lea
imul
mov
scas
jbe
or
push
mov
mov
leave
adc
test
add
fisubs
rorb
popf
push
movsl
mov
adc
scas
movsl
mov
mov
push
xlat
imul
iret
cmp
sub
test
push
lret
rorl
aad
sub
add
daa
jo
cbtw
mov
or
test
push
cmp
add
push
js
cmp
pop
jnp
inc
inc
movups
lcall
mov
mov
mov
push
iret
mov
ljmp
shlb
jl
pop
arpl
jge
add
mov
clc
or
int3
sbb
ret
xchg
inc
inc
sbb
push
push
fsubr
adc
dec
sub
js
sbb
mov
jnp
jg
inc
fsubrl
ror
shr
xor
incl
xor
pop
xorl
pop
dec
jge
mov
cmp
adcb
inc
sbb
iret
cmp
dec
or
mov
or
out
xor
add
push
or
xor
dec
and
mov
adc
add
push
ret
in
fiadds
adc
dec
pop
fdivs
adc
call
or
je
push
test
or
or
sub
in
mov
push
and
xor
push
dec
mov
adc
mov
cmp
dec
lods
pop
push
inc
mov
fs
or
push
mov
lahf
lock
or
or
test
bound
in
jb
fidivrl
repnz
sub
nop
mov
inc
sti
add
cmp
ret
add
ret
call
cmc
adc
shrb
cmp
jle
add
or
push
mov
add
pop
mov
cmp
and
sbb
xor
and
je
xor
push
push
xchg
dec
clc
push
adc
sbb
jo
inc
ret
push
sbb
dec
mov
arpl
push
pop
xor
les
test
nop
adc
mov
loop
inc
push
in
adcb
notb
push
mov
es
mov
lods
xor
cmpsb
data16
lock
mov
fstpt
jbe
push
adc
pushf
popf
pop
cmp
xchg
jb
inc
and
paddq
push
les
jo
xor
add
mov
ret
push
filds
jmp
add
adc
mov
inc
pusha
test
fcoml
or
shlb
xor
popa
icebp
cmpsb
add
cld
and
int
std
jnp
jae
pushl
push
fdivrp
pop
or
dec
dec
or
push
sbb
scas
xchg
lock
inc
sub
ret
rclb
in
orl
js
mov
fiadds
adc
xor
mov
pusha
xor
push
add
mov
pop
and
popa
popf
sub
cmp
add
xchg
cmpl
addb
lock
es
outsl
push
fcoms
clc
xor
push
adc
sub
mov
jge
aad
es
jns
push
push
push
and
pushl
or
jbe
push
jnp
retw
or
inc
mov
in
or
and
or
mov
lock
mov
sbb
pop
outsb
xlat
lods
mov
je
inc
iret
cmp
sub
inc
sbb
add
mov
shlb
push
nop
call
sbb
daa
out
sahf
push
mov
es
ret
or
lods
icebp
ds
popf
mov
pop
dec
or
or
pop
frstor
cld
mov
add
imulb
cmp
xor
xchg
inc
insl
es
sbb
pop
xchg
xor
cmpsl
sub
mov
add
mov
lods
adcl
cmp
pop
std
enter
mov
xor
jmp
mov
stos
xor
out
xchg
ja
mov
jp
adc
adc
push
ret
adc
xor
jp
arpl
or
pop
xor
iret
add
lods
mov
cmp
je
or
je
add
dec
dec
clc
mov
loopne
pop
xor
decb
adc
sbb
mov
or
sub
mov
pop
pop
fcoms
popf
and
fdivrs
testl
fsubrp
rolb
mov
addr16
roll
cmpsb
inc
or
add
aam
ja
divb
dec
es
in
ljmp
and
sub
push
imul
lods
scas
andl
pusha
roll
dec
push
in
xchg
popf
pop
imul
leave
and
sbb
and
mov
lcall
mull
add
push
or
sar
xchg
dec
dec
ja
movzbl
or
inc
jbe
or
sbb
or
jae
jmp
loopne
push
adc
adc
jmp
push
add
jmp
or
or
xchg
subb
insb
popa
jl
iret
rcr
push
pop
sbb
rcr
lret
dec
inc
iret
repz
test
push
inc
aaa
dec
xor
xchg
nop
ljmp
xchg
mov
add
adc
iret
add
add
pop
add
adc
push
inc
mov
sbb
int
add
sub
hlt
mov
add
push
inc
and
xchg
shl
pop
ss
or
push
add
jmp
xor
xlat
loope
sub
adc
loope
xor
adc
and
adc
and
sub
mov
sbb
fcmovnb
rolb
aam
movsb
push
pop
shlb
and
and
jmp
testb
adc
lds
dec
sub
pop
aam
faddl
cwtl
icebp
push
or
fldpi
lret
orb
pop
stc
mov
mov
imulb
push
fisttpl
cwtl
push
cmp
daa
mov
push
int
inc
or
jne
arpl
loopne
xchg
cmp
enter
adc
test
adc
add
loopne
fsubs
dec
inc
cmp
hlt
fsubrs
rol
stos
or
pop
loope
inc
enter
lods
insb
popf
jo
in
popa
les
cltd
jae
and
loope
xor
outsb
or
and
push
inc
divb
add
jne
lods
xchg
mov
clc
adc
xlat
ret
and
cmp
pop
sub
push
inc
mov
arpl
inc
popf
jmp
push
mov
lock
fidivrl
add
test
xor
imul
mov
in
in
ljmp
ds
xchg
adc
mov
stc
inc
fmuls
push
mov
aas
cmp
jl
je
rcrb
push
jns
adc
xor
int3
ret
xchg
add
cmpsl
gs
leave
dec
and
push
cmp
cs
push
in
mov
fldl
jbe
or
and
sbb
or
fldl
popa
daa
enter
inc
stos
fstpl
sub
push
cmp
mov
gs
inc
xchg
push
xchg
push
ja
mov
arpl
xor
shrb
scas
shrl
or
or
subb
test
lock
xorl
mov
rol
ds
pushl
pop
inc
shlb
orb
sbbl
sbb
xchg
cmpsb
jg
dec
sub
sarl
fsubrl
clc
dec
sub
and
fidivs
data16
add
leave
sub
loope
dec
or
cmp
sub
ror
or
pop
dec
fcompl
fs
xor
jge
adc
imul
scas
and
add
insb
add
bound
mov
lock
jbe
dec
mov
sub
cmp
push
adc
or
or
testb
mov
shll
cmp
aaa
mov
cmp
xor
xchg
xor
daa
in
call
cmpsl
adc
fnstenv
pop
jne
lret
mov
sahf
inc
inc
jecxz
jne
mov
or
push
fstps
and
ja
and
add
mov
add
adc
fadds
jg
add
dec
out
or
mov
adc
mov
pop
and
movsb
xchg
adc
inc
test
imul
push
push
xlat
mov
push
push
xchg
inc
inc
loopne
pushf
loop
je
sub
fidivrs
push
push
test
add
adc
or
xor
pushf
lahf
mov
push
add
mov
push
pop
movsb
jne
test
mov
pop
daa
lea
fs
rolb
push
jmp
xchg
je
dec
pop
je
subb
xor
cmp
sbb
sub
andb
push
jmp
or
cld
andl
mov
jmp
push
xorb
aaa
xchg
mov
loop
sbb
aam
rol
je
mov
jns
jge
mov
shrb
clc
fisubrl
or
movsb
in
inc
cmp
clc
inc
pop
loopne
jg
adc
inc
stos
mov
dec
lcall
cmp
pushf
cltd
lret
lahf
adc
sbb
out
mov
jmp
or
rorl
sub
inc
jno
das
and
xorb
outsl
dec
pusha
jbe
jle
test
mov
ds
jns
in
push
push
and
popa
push
cld
cmpl
mov
stos
push
je
lods
push
inc
shr
cmc
stc
les
dec
js
test
jo
out
pushl
out
sub
or
and
rorb
inc
shll
lret
sbb
fwait
push
fcoms
cs
test
je
ja
lods
jl
jnp
mov
in
call
add
pusha
pop
and
or
sub
outsb
push
cmc
jle
mov
sbb
xor
push
arpl
ret
inc
lahf
push
js
pusha
add
inc
cmp
nop
mov
outsb
cld
xor
add
es
adc
pop
cmp
or
adcl
fiadds
cmp
dec
int
push
jbe
add
add
arpl
xor
add
mov
rorb
push
subl
ret
inc
in
inc
ret
xchg
idivb
outsl
add
push
and
outsl
cmp
in
push
xchg
cmp
loopne
and
adc
shlb
mov
dec
rolb
add
adc
mov
mov
mov
pop
movhlps
or
mov
movsb
push
rolb
adc
push
inc
lea
pop
adc
mov
ss
lahf
rol
xchg
adc
loope
rcrl
adc
shll
and
or
ja
xor
hlt
setne
pop
imul
sbb
sub
adc
popf
insb
mov
cmp
test
cmp
imul
sbb
hlt
sbb
shll
mov
and
sar
jge
movsb
xor
pusha
push
aad
and
ret
pop
sub
mov
sbb
add
cmp
inc
loopne
add
insb
ss
shrd
fmull
or
pop
rolb
or
and
test
jp
add
or
movsl
sti
cmp
psrad
popa
xchg
add
xlat
inc
pop
lods
pop
sbb
sbb
inc
dec
dec
cmp
pop
daa
ljmp
mov
aaa
clc
xor
xorl
push
mov
or
pop
inc
orb
sbb
daa
out
inc
sbb
je
dec
push
pop
es
movsb
insl
fisubrs
sub
ret
jne
pop
das
add
inc
je
das
dec
nop
addl
xor
daa
or
cmp
gs
add
and
mov
sub
mov
jge
sub
mov
or
dec
jo
test
jne
fistpl
stc
or
inc
shrb
mov
movsb
insb
nop
jnp
pop
std
dec
fs
rcrb
movsl
inc
adc
sub
in
push
push
imul
inc
mov
sbb
adcl
or
mov
mov
adc
cwtl
add
pop
jb
or
movsb
jl
inc
scas
pusha
in
or
sbb
dec
fstps
dec
hlt
fdivrs
sbb
mov
ss
dec
faddl
aaa
addl
push
inc
jle
rcll
mov
leave
lcall
add
inc
call
adc
in
inc
aaa
push
decl
pop
add
fidivl
es
adc
add
jbe
popf
sub
mov
dec
out
dec
gs
or
adc
jmp
pop
rorb
stos
inc
jmp
adc
loope
loope
lods
jb
or
cmpsl
sbb
mov
call
popf
aam
xor
add
xchg
push
push
negb
inc
rorl
jno
jo
pop
and
int3
shrb
imul
xor
mov
popf
add
add
cmpsl
push
popa
movsl
sbb
sub
lock
and
push
movsl
jmp
daa
lea
jmp
mov
mov
xchg
push
out
adc
in
push
xchg
js
jmp
pop
inc
ret
ret
and
fnstenv
mov
sbb
loopne
sbb
shlb
nop
mov
lret
int3
fdivrs
push
sarb
popf
enter
sbb
push
ds
or
cli
mov
cmp
jb
test
sahf
out
imull
sbb
movsl
xchg
bnd
loopne
pop
inc
movsb
push
adc
sub
or
shlb
sub
and
enter
pushf
adc
dec
ret
lret
pop
and
dec
pop
and
imul
push
push
ja
ss
andb
cwtl
cmp
xor
mov
outsl
cli
fmull
or
shrb
fildl
pop
dec
push
sbb
mov
fnclex
ret
ret
mov
nop
movsb
dec
bound
pop
rclb
dec
cmp
rclb
sbb
ret
adc
add
inc
stos
in
int3
add
stos
mov
fxch
jp
test
and
fisubrs
push
sbb
fnstcw
int
dec
call
dec
insl
adc
adcl
lock
or
call
test
mov
loope
push
popa
inc
pop
ljmp
mov
add
xor
out
dec
add
and
mov
fcoms
jnp
push
cmp
lock
aas
or
push
or
inc
jmp
faddp
fcmovnb
adc
lock
pop
mov
and
push
and
push
xchg
or
mov
pop
mov
shlb
cmp
fsts
jne
cmp
mov
push
dec
dec
std
xchg
lea
jno
mov
popa
or
add
outsl
shrb
dec
jp
xor
mov
mov
or
loope
jns
xor
ficompl
incb
shr
imull
pushf
jge
loop
mov
sub
je
mov
xchg
mov
fnstcw
lods
or
daa
dec
insb
imul
push
test
ljmp
lods
push
js
cmp
fadds
mov
fwait
bnd
fmull
mov
fcompp
daa
add
ret
insb
inc
push
add
mov
arpl
inc
mov
jmp
and
and
test
cmp
pusha
jns
sub
inc
xor
pop
cli
lods
movb
in
ret
dec
push
mov
pop
xor
cmp
fnstcw
inc
xor
inc
subb
mov
dec
push
cmc
sub
loope
pusha
adc
sbbb
jle
imulb
jmp
inc
imul
xor
mov
imul
mov
sub
cmpsb
repz
inc
popf
sti
dec
shl
xlat
neg
sbb
push
xchg
jne
jmp
pop
push
lea
sar
aaa
fsubl
in
es
add
mov
mov
sub
dec
mov
insb
pusha
loopne
fprem
xchg
sarb
inc
xchg
add
out
fstps
push
add
lods
add
es
enter
fs
fsts
repz
mov
aam
inc
pushl
lcall
inc
rcrl
cmc
and
shl
sbb
jo
pop
shlb
push
daa
push
sub
icebp
test
push
add
stc
mov
or
jo
xor
pop
jmp
mov
int
jmp
push
fcompl
lahf
in
jae
push
jg
and
ret
and
push
jge
xchg
adc
mov
sarb
fwait
add
in
hlt
test
xor
out
scas
in
jg
adc
enter
lcall
and
adc
pop
dec
sbb
and
inc
rclb
adc
jmp
or
cmp
pop
inc
leave
add
idivl
push
or
cmpl
inc
outsl
sbb
jne
cmp
js
add
or
sub
fwait
sbb
imul
sbbl
add
jle
sbb
add
push
aam
xchg
add
fcomps
push
add
roll
pop
dec
and
testb
jl
push
je
inc
lahf
lock
xor
aad
loopne
addr16
test
xor
sub
sti
dec
jb
mov
push
sbb
jbe
and
psrld
rcrb
out
xor
mov
aam
cmp
add
test
or
pop
sbb
jp
mov
xchg
mov
adc
mov
loopne
inc
mov
xchg
sbb
sti
sub
jle
rclb
jge
mov
lcall
adc
aad
mov
xchg
add
mov
adc
rclb
or
or
or
test
dec
lret
or
xchg
dec
ret
adc
or
dec
cwtl
push
clc
cwtl
shl
xchg
in
test
enter
pop
aam
push
mov
loopne
clc
mov
out
shl
in
adc
imul
add
jo
rcr
add
in
mov
dec
cmpsb
xchg
cmpsl
sub
push
hlt
jnp
or
clc
cmpsl
cmp
mov
xor
jo
insl
clc
cmp
fsubs
rolb
aas
rorb
test
or
xchg
ret
sub
int3
add
packssdw
xor
popf
out
dec
sbb
fld
mov
and
mov
adc
jnp
cmp
scas
jbe
or
cmpsl
sbb
ret
sbb
or
adc
shlb
stos
or
mov
pop
sub
and
arpl
pushf
das
add
sahf
mov
push
adc
add
or
movsl
movsb
ss
add
xchg
mov
call
lea
cmp
or
add
add
push
push
dec
dec
push
inc
xlat
testb
dec
add
add
lock
loopne
mov
popl
xor
movsl
or
push
or
andl
inc
adc
mov
xchg
call
add
cld
out
or
sti
push
xor
movsl
or
add
or
xor
add
add
sub
xchg
mov
mov
cmpl
and
outsl
out
lock
mov
pop
stos
call
ret
popl
pop
dec
and
jge
sbb
mov
push
or
and
aaa
adc
mov
adc
mov
jecxz
add
xor
cs
xchg
mov
mov
jle
movzbl
insl
dec
cmpl
mov
mov
add
inc
jmp
adc
pop
or
or
and
lock
pop
test
dec
pop
inc
sub
inc
testl
add
sbb
fildl
or
jns
cmp
fstpt
pop
inc
shlb
iret
cmp
ret
jne
inc
ret
pusha
lods
std
dec
cs
cltd
scas
pop
sbb
push
sub
or
sub
in
xor
or
nop
or
or
and
out
add
cmp
adc
mov
imul
insl
mov
nop
test
push
jo
enter
jle
test
add
sub
or
rorl
push
pop
sbb
or
orl
or
rcl
enter
pop
iret
add
cmp
or
mov
mov
adc
add
pop
mov
cmp
add
fimuls
loop
inc
pop
jp
sbb
dec
push
orb
jmp
adc
xchg
roll
sub
div
addb
add
push
jbe
fadds
rolb
icebp
mov
ret
ss
popa
nop
push
push
ret
inc
dec
adc
lea
or
icebp
adc
mov
push
pop
outsl
ss
cmp
pop
xor
jmp
aad
cmp
pop
or
dec
mov
push
adc
cmpsl
or
je
popa
jne
mov
dec
hlt
lea
clc
jnp
pop
jae
add
push
adc
xorb
dec
aam
add
push
cmpb
imul
andb
enter
lock
push
sbb
add
outsb
clc
mov
jge
jmp
testl
scas
jge
inc
std
mov
mov
mov
lods
sbb
and
jno
dec
mov
jne
inc
mov
in
rcll
testb
push
cmpb
imul
popa
sub
das
nop
hlt
jne
dec
xor
jnp
inc
pop
or
sub
jl
jmp
or
mov
in
or
jbe
pop
data16
sub
sbb
jecxz
in
lds
shll
sub
mov
dec
push
sub
add
mov
mov
je
inc
ds
movsb
sbb
mov
ss
jae
lods
and
cs
sub
mov
mov
mov
and
shr
shl
call
ljmp
lock
std
sti
outsl
and
shll
cmp
or
cmp
int3
jo
push
jbe
dec
cwtl
mov
dec
dec
fsub
sbb
test
inc
data16
or
sbb
imul
push
xchg
shll
mov
xor
jne
sbb
push
add
ret
jns
jmp
popa
adc
sbb
imul
adc
xchg
adc
or
cmp
sbb
mov
popf
sbb
or
lcall
pop
lahf
jno
lahf
add
add
mov
jbe
addb
jle
test
popf
push
sub
movsl
jo
icebp
imul
cmp
jb
add
jbe
jb
scas
repnz
xor
add
sub
add
jns
push
and
mov
imul
lods
adc
movsl
cmp
push
dec
add
dec
cmpsb
nop
or
inc
inc
inc
jg
iret
iret
repz
or
push
mov
movsb
pushf
xchg
fimuls
inc
mov
sbb
sahf
out
call
out
sahf
out
hlt
clc
clc
cld
cmpsb
dec
add
sbbl
inc
adc
loope
push
cld
lock
dec
or
nop
pusha
pop
mov
cmp
repz
sbb
lea
or
cmp
jmp
sub
cld
out
jo
neg
adc
and
stc
sub
fidivrl
mov
nop
mov
test
rcr
add
mov
je
add
dec
lods
mov
push
adc
aas
inc
out
add
add
lods
pop
rclb
nop
dec
dec
push
cmp
sbb
pop
mov
mov
and
sub
xor
out
sahf
cmp
dec
push
addr16
out
sahf
out
sbb
sbb
out
sahf
adc
adc
or
add
sub
out
int
orb
push
cwtl
lods
jne
mov
add
pop
mov
daa
outsl
inc
dec
cmc
rolb
push
jl
mov
mov
inc
neg
add
lret
pushf
mov
mov
adc
add
inc
and
sbb
divb
andb
dec
and
mov
lods
adc
dec
inc
cmp
jb
cmp
jge
or
pusha
jl
push
cmp
and
shll
adc
out
xchg
add
ss
xor
mov
or
or
jae
cltd
add
adc
xchg
xchg
mov
sbb
mov
xchg
jge
movb
inc
neg
dec
rcrb
push
push
sub
imul
in
sbb
mov
ret
sahf
fdivrp
jbe
add
pop
add
fiaddl
mov
ja
jb
ja
andb
dec
fimuls
pop
and
mov
mov
dec
hlt
adc
in
unpcklps
mov
stc
inc
jae
or
jae
shrd
shr
ret
or
aas
sbb
loope
shr
outsb
adc
push
call
push
inc
int3
pop
pop
mov
inc
test
test
pop
ret
mov
addr16
addl
or
xorl
call
jae
in
les
pusha
mov
jmp
mov
mov
inc
pusha
or
mov
cmpsl
in
ret
sub
mov
mov
outsl
sub
mov
jne
adc
adc
mov
inc
daa
add
mov
adcb
mov
aaa
sbb
enter
out
inc
int3
inc
nop
push
add
addr16
push
aad
jl
or
jp
dec
cmpsb
cmp
fsts
push
outsb
cltd
loope
sbb
jne
mov
in
outsl
jmp
clc
inc
test
les
in
lods
or
aas
jne
pop
cmp
jg
es
je
inc
cmp
dec
jne
out
add
ret
ret
mov
adc
ja
dec
out
and
ret
insb
xor
aam
inc
mov
add
scas
inc
bound
cltd
mov
mov
sar
arpl
shlb
inc
lret
push
push
test
scas
je
add
jb
aam
mov
add
add
push
inc
cmpsl
lcall
es
cmp
jne
inc
xor
stos
xorl
andl
icebp
mov
cmp
out
pop
or
mov
mov
es
mov
out
xor
push
enter
sub
adc
ret
add
dec
dec
inc
popfw
xchg
xor
hlt
adc
dec
xchg
sbb
mov
insb
fmull
sbb
rcl
loopne
pushf
xor
or
and
insb
push
stos
ret
xor
pop
dec
push
jns
xorb
loopne
and
mul
xchg
inc
push
cmp
adc
jb
mov
je
cmp
aaa
inc
push
mov
add
sub
push
ljmp
imul
insl
insl
jmp
or
or
gs
xchg
outsl
jo
and
lock
mov
pop
add
adc
jp
gs
ds
sub
xchg
lea
push
test
push
jae
sbb
mov
push
pop
and
scas
cmc
add
insl
pop
in
xor
jecxz
push
jg
pop
mov
add
and
mov
push
pop
sbbl
mov
imul
adc
mov
pusha
inc
shlb
jae
jl
cmp
fisubrl
push
incb
test
rolb
add
call
out
jg
or
add
inc
cmp
pop
xchg
mov
inc
sbb
xchg
inc
test
jb
mov
pop
adc
inc
loop
cmp
adc
clc
rcrb
outsl
xchg
ret
clc
push
or
pop
or
cmp
cmp
cltd
shll
in
xchg
sub
add
loope
arpl
mov
push
sbb
repnz
push
cmp
xor
stos
pop
jbe
addr16
sub
sub
aaa
mov
jo
and
call
mov
sarl
or
inc
aad
sub
ret
ror
or
push
and
jne
push
jno
xor
adc
lock
pop
dec
adc
clc
jp
push
aad
nop
sbbb
dec
add
push
arpl
clc
mov
in
mov
pop
and
push
adc
adc
push
cli
test
fistpl
or
pusha
hlt
movsb
jnp
nop
iret
filds
xchg
dec
mov
nop
loopne
mov
call
jmp
lcall
sub
push
movsl
loope
rcrb
test
xchg
inc
imul
adc
fldt
out
in
inc
dec
inc
push
andb
mov
mov
rcrl
sbb
mov
sub
jne
in
aaa
test
push
cmpsl
shrl
mov
icebp
jl
clc
jle
in
mov
loopne
push
cmp
and
sbb
adc
rclb
mov
enter
pusha
xchg
sub
cmp
dec
js
je
or
adc
push
cmc
fldl
data16
or
lea
mov
test
je
cmpb
jne
mov
add
inc
shll
fucomip
adc
loope
mov
push
inc
push
jo
daa
sbb
or
xorl
push
movq
add
xchg
cmp
test
mov
ret
mov
clc
pop
cmp
je
cmp
ja
push
pop
dec
nop
mov
rorb
jbe
loopne
or
loopne
cmp
out
cmp
sbb
adc
aam
adc
or
movsb
push
ret
inc
pop
and
or
outsl
shll
fldt
lea
add
ret
fmuls
clc
lea
lods
xor
inc
cmp
je
icebp
mov
fisttpl
and
push
orl
push
adc
dec
js
cmp
stc
xor
jle
add
or
adc
inc
fscale
xorb
or
pop
and
pop
out
sbbb
sbb
ret
sub
inc
cld
cmp
je
outsb
insb
fdivl
adc
setle
add
adc
cmp
aam
xchg
pop
arpl
outsb
cmp
fists
dec
cltd
adc
mov
test
sbb
pop
je
cld
xchg
iret
ret
shlb
push
jmp
pop
xchg
xor
fs
testb
clc
mov
mov
es
xchg
incb
jno
test
jae
or
sbb
icebp
inc
jne
xchg
jae
mov
ja
pop
and
test
and
mov
inc
add
sub
int3
sub
rorb
call
dec
jl
in
xchg
ret
test
mov
lret
iret
cmp
jle
jle
shl
lea
sbb
in
push
xchg
mov
dec
push
testb
dec
mov
ret
push
shl
shr
mov
test
dec
sub
jge
loopne
fiaddl
push
inc
push
dec
pop
shl
insl
fdivrl
inc
andb
inc
xchg
cmp
xchg
cmpsl
pop
mov
insb
lods
fs
xchg
add
lea
sbb
popa
sbb
rclb
and
cs
fidivs
sub
sbb
fisttps
adc
pop
or
adc
xor
ret
shrl
nop
dec
jmp
push
mov
addr16
sub
and
jmp
sbb
adc
jno
popf
or
enter
xchg
and
xor
sub
lret
cli
mov
mov
adc
inc
and
xor
sarl
mov
sbb
pusha
push
adc
mov
jmp
dec
or
or
ret
inc
push
dec
jne
out
cmpb
jmp
adc
pop
loopne
ss
xchg
jp
mov
push
jbe
inc
or
sub
adc
sbb
imul
sbb
lea
jne
ror
insl
or
pop
sbb
and
or
shrb
shlb
mov
pop
cmp
inc
jmp
lcall
mov
fsubrs
pusha
sti
add
or
fdiv
jmp
popf
and
dec
mov
loopne
and
adc
mov
repnz
std
shlb
shlb
pop
inc
cmp
push
jp
inc
stos
out
push
inc
int
cld
clc
mov
mov
add
inc
andb
and
insl
push
sbbl
rorb
mov
xor
adc
lea
lock
aam
mov
mov
or
cli
call
dec
mov
clc
les
inc
cmp
sbb
and
add
mov
xchg
sbb
test
je
fimull
mov
sbb
cmp
jmp
sbb
inc
imul
adc
jge
lcall
pop
fcoms
xor
and
jg
lret
adc
cmp
je
fsubrl
pop
sub
popf
jmp
xor
es
inc
sub
mov
scas
repz
dec
jl
jmp
loop
ljmp
add
mov
call
sahf
cs
and
dec
ja
jns
adc
dec
pop
mov
inc
jmp
test
sub
movsb
sbb
adc
add
add
je
faddl
fdivl
adc
mov
cld
pushf
dec
movsl
rorb
cli
clc
div
lods
lods
cmovo
setnp
sbb
rorb
or
ljmp
adc
pop
les
rorb
jns
repnz
push
push
push
or
pop
les
mov
icebp
test
loopne
xchg
jecxz
mov
aaa
fdivr
aaa
xchg
lock
xor
adc
inc
mov
ret
outsb
lods
pop
jmp
cmp
pop
sbb
cmp
jb
adc
push
jo
cmp
gs
movsl
mov
push
sub
cmp
jne
ds
outsb
cmp
inc
adc
adc
sbb
pushf
scas
addl
lods
and
mov
adc
js
mov
jne
enter
add
dec
add
mov
sbb
inc
into
xlat
push
sbb
test
xchg
xchg
jo
rclb
push
mov
hlt
mov
jl
adc
jbe
shl
je
adc
or
shr
test
cmp
enter
add
imul
rdmsr
xlat
scas
stos
push
jae
inc
or
cmp
and
neg
addl
ljmp
in
movsb
inc
insb
test
pushf
inc
int3
rol
mov
popa
movsb
rcll
insb
xor
push
xchg
cmp
push
jmp
mov
and
jne
xlat
jo
lods
je
movsl
jecxz
enter
lahf
fwait
inc
pop
cmpsl
or
mov
sub
arpl
nop
or
test
dec
push
inc
xor
pop
inc
xor
cmpsl
or
add
push
cld
fmuls
sub
jmp
mov
sahf
cmc
adc
mov
or
jnp
mov
jg
and
add
inc
push
push
lea
call
pop
inc
js
loopne
stos
xor
dec
push
or
cmp
insb
invd
add
mov
stos
or
or
mov
jmp
mov
movsl
mov
lret
jg
sub
xor
sub
cld
push
stc
pop
lea
xchg
cli
outsb
or
push
movl
cld
pop
pushl
addr16
dec
fcompp
mov
sub
xlat
int3
pop
pop
movsl
fsubl
lret
pop
jns
sub
add
adc
insb
mov
ja
adc
xchg
mov
and
xchg
aam
adc
movl
les
add
jl
or
mov
les
les
mov
pop
rep
sbbb
pop
das
or
mov
clc
or
loopne
jl
cwtl
or
add
iret
push
dec
add
decl
jl
push
add
add
jmp
out
mov
inc
mov
sub
out
bt
andb
mov
daa
mov
loop
jg
sub
push
lret
xchg
pop
stos
inc
mov
mov
pop
subb
shlb
lods
inc
outsl
mov
fdivl
adc
xor
mov
pusha
push
pop
gs
add
leave
sbb
mov
push
sub
lcall
jns
sarb
sarb
xor
clc
sbb
in
mov
sarb
loopne
add
cmp
pop
jge
cmp
cltd
jle
push
and
and
jo
and
gs
xchg
push
leave
pop
and
dec
and
add
scas
adc
dec
dec
xchg
sbb
jge
jae
sbb
pop
test
orb
lcall
sub
fildl
dec
sbbb
xlat
insb
mov
add
mov
clc
sbb
pop
xor
out
popa
orl
decb
adc
pop
pop
inc
sarb
test
pop
sbb
and
push
cs
push
insb
popa
cmpl
inc
insb
shlb
inc
data16
mov
dec
clc
or
mov
mov
leave
or
shll
test
into
test
imul
add
imul
aaa
adc
add
push
or
test
inc
hlt
ret
mov
cmp
jo
push
pop
cld
push
jecxz
jecxz
jmp
ret
ss
push
jmp
xchg
gs
addb
push
mov
cmp
mov
adc
in
pusha
inc
shll
push
or
or
je
pop
and
add
cld
adc
add
nop
adc
je
addb
ss
mov
xchg
mov
xor
add
sti
ret
data16
test
sti
sub
push
inc
jmp
cmp
push
dec
adc
jo
in
add
add
and
or
mov
mov
test
in
add
and
and
xor
xor
or
out
mov
or
pop
sarb
cmp
aas
add
ret
pop
and
pop
add
cli
sub
add
push
jns
repz
pusha
fbstp
jmp
jns
push
push
and
push
dec
fsubl
pop
nop
aaa
cmp
addl
clc
fimull
cmp
jb
aad
and
hlt
pop
cmp
jbe
add
inc
loope
call
lods
cmpsb
jo
aam
mov
sbbl
dec
inc
les
loope
xor
push
pop
call
add
dec
test
mov
push
pop
mov
add
je
or
js
clc
add
hlt
push
outsb
mov
xchg
jbe
call
sub
dec
lea
dec
adc
and
mulb
test
mov
lock
push
mov
xor
adc
and
sahf
cmp
shll
add
dec
sbb
clc
xchg
ja
jns
adc
orb
nop
and
dec
push
jo
aas
pop
jne
xchg
mov
mov
or
out
push
aam
les
lods
xchg
aas
clc
mov
loope
push
sbb
xchg
and
xchg
jbe
and
inc
xchg
cwtl
xchg
pop
nop
test
pop
ret
enter
aas
fadds
rcll
ja
les
cmp
repz
fs
je
orb
xchg
aas
test
jnp
aas
mov
int3
xchg
mov
mov
add
in
sub
and
adc
lea
lods
mov
push
push
ret
gs
push
mov
scas
notb
pop
push
data16
dec
in
mov
sub
pushf
add
lret
sub
xor
and
dec
or
sbb
or
ret
cmp
je
inc
jmp
mov
inc
test
test
sbb
sub
sbb
adc
sub
dec
jo
and
dec
std
pop
mov
pop
jno
mov
dec
mov
mov
test
aaa
mov
push
add
add
dec
fimuls
push
jle
inc
mov
jmp
and
movb
mov
jnp
data16
cmpsl
push
inc
and
or
lock
add
adc
jl
sbb
or
fsubs
or
mov
pusha
add
pop
add
pop
xor
mov
inc
add
je
mov
jne
mov
cmovg
jmp
xchg
je
ret
push
rep
je
inc
dec
mov
ret
cmp
or
cmp
mov
iret
add
xchg
add
in
pop
arpl
and
ss
fmull
dec
jnp
pop
ret
push
les
int3
inc
fs
cmp
je
data16
add
lods
xor
mov
xor
mov
adc
jle
pop
test
adc
in
mov
dec
subb
iret
pusha
jne
jecxz
inc
cmp
push
or
imul
sub
fcoml
pop
and
popa
xor
dec
aas
ss
bound
and
mov
in
sbb
sbb
and
xchg
adc
std
shlb
push
xor
or
or
sub
and
pop
rorb
jmp
push
mov
cmp
jne
inc
inc
dec
mov
push
cmp
jne
mov
add
out
mov
adc
or
push
jecxz
enter
xchg
sub
pusha
shl
push
cld
dec
adc
cmc
xor
orb
add
xchg
std
sub
add
or
psrlw
idivb
lret
sbb
out
jne
or
iret
mov
sbb
push
sbb
int
mov
add
push
stos
aas
adc
arpl
insl
je
jb
cmp
icebp
adc
insb
aas
dec
jecxz
clc
imul
and
imul
mov
and
push
xchg
jge
loopne
pop
movb
pop
sbb
addr16
push
xchg
pop
sarb
xchg
cmpsl
setl
out
ud1
push
cmp
lock
jg
cld
jg
push
sub
lahf
stos
clc
push
xor
cli
test
push
mov
test
ljmp
repnz
adc
insl
mov
lret
jo
sub
test
adc
int3
mov
fnstcw
cmp
pop
cltd
inc
mov
aaa
push
add
or
jbe
sub
es
sub
inc
add
adc
cmp
add
hlt
cmp
inc
lods
fidivrl
push
mov
in
pushf
xchg
in
mov
movl
ljmp
shlb
scas
ffree
pop
push
inc
sbb
add
or
ljmp
inc
adc
js
mov
inc
inc
jg,pt
cmc
push
mov
and
dec
add
xor
sti
lea
pop
ret
insb
or
enter
add
push
rorb
xchg
mov
addb
roll
or
jecxz
add
ds
movsb
jo
cmp
jbe
shrl
or
add
je
cmp
inc
bound
adc
les
mov
cmp
push
pop
add
xor
mov
ljmp
test
mov
jne
stos
pop
inc
test
pop
pop
push
mov
ret
ja
or
cmpsl
bound
jbe
inc
inc
add
push
addr16
xchg
add
iret
add
add
sbb
and
dec
orb
mov
je
mov
movsl
push
mov
pop
stos
push
mov
inc
iret
adcb
insb
pop
adc
js
out
jle
mov
sbb
xor
pusha
cmp
push
ret
dec
inc
sub
movsb
mov
or
sbb
cltd
test
cli
pop
test
enter
fildl
jmp
pusha
push
pop
fcmovu
xor
dec
dec
push
mov
aaa
jns
add
xchg
add
push
xor
inc
pop
push
dec
rorb
sub
mov
pop
mov
mov
mulb
cmp
insl
xchg
insb
icebp
add
test
mov
mov
push
inc
out
cmp
jbe
cld
cmpsl
ss
pop
jmp
mov
and
jo
cmp
jge
shr
lret
incb
cltd
pop
mov
ret
aas
cmp
dec
dec
cmp
jl
inc
lods
mov
or
xor
nop
rcrb
insl
adc
icebp
popa
shrl
mov
lcall
fiaddl
inc
sbb
add
cmp
sarl
inc
push
pop
andb
add
pushf
and
lea
cmp
jns
xchg
nop
cli
fdivrs
fldln2
pop
cmp
pop
decl
dec
inc
cmpsb
mov
xchg
dec
cmp
and
xor
sub
or
jo
mov
xor
xchg
dec
sub
mov
add
xor
dec
pushaw
jae
repnz
jbe
mov
fdivrl
adc
sub
je
push
sub
jnp
adc
sbb
and
sub
mov
push
or
lods
sarb
cwtl
push
mov
xchg
mov
push
mov
and
dec
rolb
scas
mov
test
jmp
adc
mov
and
cmp
adc
adc
or
inc
insb
jge
xor
cmovs
loop
cmp
jno
sub
mov
js
xor
lret
xor
pop
rcrb
cmp
add
fstpl
add
sub
es
test
adc
pop
xor
add
jbe
mov
lea
inc
xchg
ret
cmovns
sbb
fwait
js
int
push
sar
dec
adc
cmpb
mov
mov
loopne
stos
xchg
bndstx
mov
nop
or
mov
inc
mov
or
cmp
je
mov
fs
xchg
je
fbld
adc
add
pop
lcall
je
clc
dec
popf
daa
test
mov
testb
push
cld
pop
jnp
sub
push
unpcklps
inc
adc
ljmp
aam
push
stos
dec
and
das
or
jne
xchg
inc
scas
xchg
xchg
in
jo
or
and
das
pop
sti
mov
cmp
call
and
scas
mov
mov
loop
jmp
push
in
push
mov
push
pop
pop
adc
push
jmp
add
xor
pop
or
outsl
add
add
push
cmp
je
sub
or
addl
sahf
jge
jmp
inc
mov
push
pop
sub
xor
test
adc
ret
andps
xor
in
movsl
mov
loop
mov
sub
xchg
nop
mov
xor
mov
pop
jns
stc
leave
jmp
sbbb
js
stos
jle
cmp
jbe
mov
push
push
pop
cmp
jecxz
scas
push
mov
inc
push
shll
cmp
pushf
adc
mov
jge
jns
jl
xlat
je
jmp
sbb
jns
fadds
push
jmp
cmp
sbb
and
jne
outsl
pop
mov
icebp
cmpsb
push
sub
mov
in
push
push
sub
in
push
or
dec
sub
outsl
pop
nop
cmc
sub
pop
jbe
add
inc
or
sbb
add
cmp
dec
mov
pop
xchg
and
or
add
jmp
movsb
push
mov
sub
add
or
arpl
push
icebp
or
sar
sub
inc
mov
les
fbld
cld
shl
cwtl
sub
add
inc
sbb
jae
pop
push
dec
mov
and
and
pop
pop
sbb
cmp
mov
sbb
and
movsl
adc
popa
cmp
add
and
aam
xor
and
push
add
loopne
mov
ffree
pop
inc
sub
in
frstor
sub
pop
xchg
pusha
ja
adc
test
jge
xchg
xchg
mov
mov
mov
ret
pop
lahf
pop
jo
push
fcoml
add
adc
or
negl
rol
or
or
jne,pn
popf
sbb
push
nop
mov
aaa
cwtl
sbb
shrl
sbb
and
or
dec
pop
and
push
add
iret
mov
pushf
or
test
inc
mov
stos
bnd
push
or
sbb
xchg
mov
shlb
push
and
mov
sbb
dec
xor
test
lods
push
ret
cltd
cmp
or
test
or
rorb
push
ja
stos
test
jp
or
inc
add
inc
or
nop
jne
jb
pop
adc
fmull
xor
add
adc
mov
loopne
sub
push
in
fcompl
ja
pop
or
push
stos
push
fcomps
jo
shlb
fldenv
and
mov
jno
lods
xor
push
add
addl
sarl
push
adc
push
test
inc
push
adc
or
adc
outsl
fsubrs
test
add
cmp
pop
imul
imul
push
inc
xchg
test
and
mov
jl
in
stc
add
imul
es
rcrb
rcrb
sub
sbb
inc
pop
cmc
inc
cltd
pop
or
xchg
cmp
xchg
rolb
mov
sbbl
cmp
cmp
pop
dec
in
add
sbb
xchg
pop
dec
jae
jp
adc
mov
sbb
jl
jmp
sbbb
pop
stos
mov
sbb
ds
mov
sbb
cmp
xchg
jle
or
aad
sub
dec
sub
popa
sbb
and
or
rolb
cmp
aam
add
dec
aad
clc
repz
sbb
inc
test
pop
inc
movsb
push
dec
mov
mov
call
push
mov
mov
insb
push
std
inc
lcall
or
mov
inc
push
xorb
add
sbb
lock
or
mov
outsb
loop
pop
add
cmpsb
xchg
mov
int3
orb
lds
push
js
loop
incl
ljmp
jmp
sbb
js
pop
add
adc
jle
scas
sub
jmp
and
push
adc
sub
cs
mov
add
loop
repnz
mov
jge
adc
add
sbb
mov
lock
pushl
rcr
xor
movsb
xchg
or
les
andl
nop
ret
push
loope
add
je
add
add
cmp
or
jmp
iret
xchg
out
mov
sbb
inc
cmp
sbb
loopne
ret
pop
and
add
lods
xchg
adc
push
mov
add
dec
rep
stos
mov
jge
add
call
rorl
shrb
rolb
push
fiadds
lahf
js
xchg
dec
jge
inc
jmp
sub
mov
sbb
sahf
mov
stos
add
mov
sub
mov
je
test
sub
cli
fwait
push
cld
mov
or
cmc
inc
inc
adc
cs
mov
orb
in
add
rcll
pop
fbld
push
and
mov
pop
mov
xchg
add
xor
dec
outsl
movb
scas
loope
push
push
push
jno
mov
jne
xor
jmp
and
push
add
cmpl
lahf
minps
sbb
sub
bswap
into
mov
jb
sbbb
iret
and
adc
and
mov
or
out
xor
ljmp
sub
push
je
pop
adc
push
in
add
sbb
adc
and
push
jecxz
lock
sarl
movsl
les
jno
lret
sahf
pop
mov
je
xchg
icebp
add
cmp
mov
inc
bound
xorb
sub
repnz
pusha
add
sub
outsb
add
test
sbb
mov
sbb
cs
and
rcrb
int3
subb
xchg
icebp
fbld
sbb
and
cmp
push
cmp
in
inc
cld
ja
ret
pop
adc
iret
jno
pop
mov
xchg
fcompl
mov
lds
add
mull
jecxz
mov
pop
sbb
add
inc
bound
jb
es
enter
or
mov
or
ja
popf
adc
test
cmp
and
loopne
xchg
mov
xchg
rorl
std
movsl
adc
pop
clc
and
ss
mov
cmp
pop
mov
ss
push
lea
outsb
adc
sahf
rorb
faddl
aaa
add
sbb
xor
add
dec
gs
add
je
dec
jne
movsb
or
sbb
nop
or
mov
inc
sub
fimuls
sub
jmp
jmp
or
movsb
pusha
testl
movsb
subb
loopne
lock
add
sbb
nop
pusha
add
ficoml
pop
add
mov
lea
loopne
sbb
cmp
shl
imull
cld
and
lods
sbb
xchg
fsubs
or
call
or
mov
dec
add
inc
sub
mov
xor
or
pop
sahf
add
stos
aas
mov
jmp
mov
aas
or
pop
pop
sbb
lods
sbbb
xor
addb
adc
test
xchg
or
adc
ds
cmp
jle
push
push
ja
push
fadds
push
pop
test
and
or
jb
or
mov
sbb
push
jnp
jp
out
or
addl
xor
pop
cmp
jl
mov
jbe
mov
lock
leave
insb
mov
xor
xor
test
xor
maskmovq
testl
std
fs
inc
jmp
sub
mov
inc
test
xor
out
add
clc
cmp
mov
insl
or
idivb
adc
rol
dec
ret
jge
daa
and
and
sub
or
adcb
push
inc
inc
jmp
pop
clc
pusha
jmp
add
mov
lcall
or
out
ljmp
mov
leave
data16
jg
ret
or
movsb
dec
sub
aam
lahf
pop
or
or
leave
cmp
enter
aas
add
lea
add
mov
xor
dec
adc
movsb
add
test
mov
lret
sbb
cmp
daa
pop
imul
scas
pop
fimull
xchg
fs
inc
cmp
cmp
pusha
or
sarl
and
push
adc
and
cmpsl
cmp
cmp
test
cmp
lea
enter
push
cmp
push
mov
mov
jbe
rol
pop
or
pop
mov
sub
ds
push
sbb
cmp
push
les
jbe
push
cmp
nop
mov
mov
cmp
enter
ret
cmp
add
push
ljmp
cmp
jne
fisubs
or
cmp
sbb
lret
add
fst
xchg
sar
mov
adc
and
jp
lds
pushf
push
cmp
fsubrs
add
inc
or
push
or
pop
fsubl
ja
outsl
add
jmp
je
mov
inc
imul
mov
mov
lret
adc
inc
sbb
and
dec
push
or
or
pop
sub
cmpsb
cmp
sarb
push
push
jmp
aas
xchg
and
jae
clc
imul
pushl
outsl
aaa
jmp
add
outsb
jne
pop
pushl
sbb
or
sbb
add
push
push
push
mov
jo
adcb
enter
xlat
fidivs
mov
add
ljmp
push
push
or
or
aas
cmpsb
mov
or
mov
test
or
or
mov
mov
mov
mov
cmp
sub
mov
and
imul
adc
cmpb
inc
adc
cli
jl
mov
rcrb
jmp
inc
pop
aad
and
sbb
inc
subl
inc
cmp
addl
jp
xor
repnz
lret
or
adc
jne
fcomps
lods
lahf
push
callw
inc
ljmp
in
fimuls
icebp
adc
pop
jp
sub
or
incl
jg
dec
enter
je
and
inc
add
cwtl
test
lock
fiaddl
cmpb
lea
into
add
and
mov
stos
sbb
add
rcl
sbb
addl
push
pop
inc
cli
ds
pop
add
dec
dec
jne
cmc
mov
or
popa
cs
scas
loopne
sbb
push
aas
aaa
mov
addl
cmpsl
movsb
clc
mov
sbb
daa
pop
xchg
mov
js
lcall
int3
push
push
stos
mov
insw
sbb
or
sbb
arpl
roll
push
sub
loop
jge
js
out
xchg
cmp
dec
or
xchg
dec
ret
push
sbb
out
pusha
jp
dec
xchg
cmp
jne
or
xchg
clc
sbb
add
inc
daa
pop
xor
add
dec
rorl
pushf
je
xlat
movsb
in
sbb
cwtl
and
adc
xchg
popa
inc
andb
add
rorl
push
push
loopne
push
or
ret
jmp
lock
xor
arpl
test
sbb
or
sti
mov
imulb
movl
push
mov
jp
xchg
ss
jp
repz
pop
lods
dec
push
sub
into
mov
sbb
test
sub
lea
push
xchg
loope
mov
push
fisubs
sub
add
movb
mov
xchg
mulb
mov
jae
mov
mov
rclb
cmp
loop
es
mov
cmp
and
daa
push
orb
or
addl
jmp
shll
pusha
or
inc
mov
pusha
pushf
or
add
or
jl
sub
adc
pop
adc
movsb
hlt
mov
cmp
push
mov
inc
or
mov
cmp
les
cmp
mov
sbb
mov
or
adc
xchg
cwtl
push
inc
mov
add
lods
sbb
cmp
js
dec
test
sbb
jbe
adc
insb
sarb
dec
fs
sbb
gs
push
loope
test
inc
ja
leave
push
orb
test
push
pcmpgtd
adc
mov
addb
xchg
incl
xor
lret
jle
ficoml
mov
aaa
and
outsl
mov
adc
mov
not
adc
jo
fiadds
mov
sbb
scas
or
mov
push
sub
mov
in
xor
out
into
bnd
lea
leave
sarb
mov
aas
fldenv
je
xchg
or
aam
mov
push
arpl
mov
hlt
jmp
push
es
pop
pop
fldcw
or
and
mov
cld
inc
sbb
add
jge
sub
pop
rol
rorb
movhps
xchg
add
mov
sbb
repz
adc
cmp
fnstenv
lods
lcall
ss
xchg
add
push
adc
lret
cmp
or
add
cmp
or
jg
sub
mov
inc
cmp
jne
subl
test
inc
or
mov
or
jmp
push
fs
out
rorb
or
xor
outsl
push
nop
idivl
ds
push
adc
je
enter
scas
jp
cmpb
into
mov
jmp
repnz
or
jo
push
xorb
adc
fimuls
hlt
mov
jge
push
pop
and
test
xchg
push
xchg
cmp
jo
lea
out
add
or
insl
ljmp
mov
adc
out
inc
pop
mov
icebp
mov
pop
add
xchg
jne
or
push
or
mov
rcr
pop
ljmp
pop
test
movsb
xor
and
dec
cmp
mov
orl
dec
enter
cmp
mov
jns
xchg
shl
or
jae
cli
jmp
and
push
add
and
adc
cwtl
es
enter
mov
comiss
jbe
shlb
das
clc
sbb
aaa
push
or
push
push
lea
fcmovnb
jno
fisubl
stos
ds
push
sbb
cmp
fdivr
mov
mov
xchg
or
adc
fistl
or
sub
add
sbb
cld
popa
lock
pop
loop
ss
or
int3
add
xchg
jnp
es
mov
inc
hlt
dec
adc
and
and
add
xor
sbb
aaa
fcomps
add
imul
lret
push
das
sub
shrb
scas
cwtl
jo
sbb
popf
jl
leave
pop
aam
gs
inc
jmp
xor
mov
lods
aam
or
enter
inc
mov
mov
mov
adc
cmp
sub
or
test
pusha
inc
fadds
xor
mull
xor
inc
fwait
gs
je
in
insb
bound
je
adc
adc
dec
inc
or
xlat
lcall
add
add
jb
sub
xchg
aas
bound
imul
test
and
cmp
pushf
pop
lcall
and
enter
ret
push
xor
jl
inc
cmovs
jp
test
into
arpl
cwtl
sub
or
pusha
or
mulb
push
dec
add
push
test
sub
sub
scas
arpl
pop
sbb
xchg
push
imul
adc
mov
jmp
push
mov
jne
movb
bound
loopne
jle
insb
xor
inc
add
mov
dec
loopne
push
test
or
insl
dec
aaa
sbb
jo
enter
inc
cmovns
mov
dec
jns
push
outsl
ljmp
push
ficomps
jl
mov
adc
nop
mov
sub
or
sbb
add
imul
push
mov
add
jecxz
pop
fisubrs
pop
lds
test
inc
in
insl
or
mov
inc
shrb
push
adc
and
mov
movb
sbb
sbb
add
sbb
push
inc
cmc
or
pop
inc
jmp
mov
popa
fsubs
in
inc
das
mov
jo
loopne
add
clc
jge
leave
add
adc
pusha
xor
push
mov
sbb
or
pop
adc
ret
xor
adc
loope
lea
nop
mov
xlat
or
inc
cli
repz
inc
neg
push
in
add
adc
dec
inc
pushf
sarl
sub
fcompl
push
add
stc
and
pop
mov
or
mov
stc
enter
daa
mov
sbb
lods
enter
es
xor
bound
data16
sub
pusha
push
inc
loopne
je
sub
mov
sbb
adc
mov
fidivrl
pusha
mov
adc
das
lcall
or
jne
mov
icebp
jmp
and
in
fldl2e
fmulp
pop
mov
flds
faddp
testb
sbb
ficomps
jp
popf
test
rorb
std
xchg
aam
add
xor
int
adc
je
out
daa
sub
not
mov
inc
or
pop
add
or
fldln2
inc
in
lods
loopne
fwait
loope
jne
es
inc
popa
cli
pushf
mov
fcoml
in
ds
fdivrl
sbb
sub
fldz
or
inc
imull
xchg
popf
insl
sahf
cs
jmp
inc
pushf
or
add
or
add
lea
cmp
insb
add
adc
js
fnstenv
xchg
cmp
fisttpl
inc
les
jbe
lock
add
push
or
sbb
add
mov
or
add
mov
dec
hlt
pop
ss
or
jbe
negb
data16
push
je
or
addl
cmc
lds
lock
jp
add
popf
cwtl
or
and
es
out
mov
mov
mov
xlat
sub
in
xchg
movsl
pusha
xchg
lea
jl
loope
stc
shr
and
xlat
add
pusha
mov
stos
in
mov
or
fdivrs
and
insl
or
push
iret
or
adc
lods
icebp
in
std
rol
mov
mov
or
sub
in
or
pop
call
mov
ret
adc
imulb
jp
or
bound
arpl
je
aad
push
pop
mov
fs
leave
pop
or
insl
add
pushf
test
and
fnstcw
mov
jg
je
jb
add
pop
or
cmpl
inc
jns
sbb
in
jmp
sub
adc
inc
adc
in
rorb
mov
sub
adcl
xchg
fadds
fldcw
add
mov
adc
push
xor
mov
push
or
flds
mov
test
hlt
pop
lret
rolb
sbb
pushf
cmpsl
shll
jb
pop
addl
scas
add
movsl
repnz
or
fldl
and
or
pop
xchg
jp
sbb
or
movsb
enter
or
or
fldt
or
jl
stos
xchg
xchg
add
outsb
cmp
pop
pop
sbb
call
loop
cmp
loopne
je
jle
pop
add
hlt
in
cmp
adc
cmpsl
jbe
inc
les
cmp
xlat
pop
mov
jne
xchg
outsb
sti
lret
sbb
mov
ret
loope
add
dec
pop
xchg
test
aad
lods
and
mov
addr16
test
jbe
movsb
xchg
scas
pop
andb
popf
push
cmp
push
adc
push
lcall
mov
mov
cmp
jne
cmp
jne
xchg
mov
fnstenv
sbb
js
jo
insl
insl
jo
add
mov
sbb
movsl
jo
push
inc
pusha
aam
jb
sbb
xor
or
xchg
adc
pop
lods
jmp
sub
shrl
loopnew
gs
xor
add
stc
sub
and
sbb
fadd
mov
jmp
lahf
pop
cmp
js
out
adc
jnp
xor
imul
rcll
pop
test
pop
jne
and
fwait
sub
xor
xchg
sub
push
inc
xor
into
insl
or
xchg
push
mov
mov
jp
add
fimull
adc
daa
push
add
inc
movsb
fdivs
movsb
bound
cmp
pop
in
sti
movsb
jae
mov
ds
inc
std
andl
push
frstor
pop
add
mov
xorb
ret
add
test
inc
pop
lcall
sub
rolb
adc
or
cmp
sbb
sbb
ret
pop
cmp
loopne
or
sahf
insb
add
dec
and
xchg
loope
or
xchg
rcrb
pop
or
xchg
add
mov
int3
add
and
mov
or
and
push
rolb
loopne
call
out
out
sub
pop
sub
sub
lods
insl
and
loope
imull
sub
repz
shrb
shr
and
std
pusha
xchg
sbb
add
insb
mov
test
adc
or
push
adc
add
xor
and
repz
sub
ljmp
xor
je
das
or
pop
or
dec
pop
dec
pop
ljmp
push
sbb
push
iret
fcoms
popf
cltd
push
inc
sbb
out
cmpl
xchg
lret
add
jp
and
or
sbb
or
jmp
sbb
sub
sub
mov
call
push
xchg
push
mov
mov
icebp
dec
and
pushf
lods
imul
dec
fsts
adc
sbb
arpl
pop
cmp
pop
test
adcl
jg
testb
sahf
es
adc
scas
cmp
cmpsl
sti
add
add
test
xchg
cs
xor
dec
mov
sbb
add
sbb
push
add
dec
lock
push
orb
push
push
and
or
aad
xlat
add
adc
add
push
or
push
push
xchg
cmpsb
adc
pop
adc
lret
lods
push
sub
and
inc
ss
adc
pop
fldl
fstpl
cmp
int3
movsb
mov
adc
bound
je
test
pop
xchg
fistpl
imul
out
fwait
jecxz
xor
adc
xor
add
sti
clc
data16
out
int
or
push
inc
mov
mov
loop
cld
insl
cmp
xchg
sub
and
mov
dec
sldt
pushf
add
push
clc
fcomi
fldl
cmp
inc
pop
sbb
fistps
sub
and
sbb
lret
into
dec
dec
imul
ficompl
push
out
test
pop
loope
adc
pop
ja
sbb
fiaddl
or
lea
imul
inc
clc
into
sti
or
dec
add
sub
push
test
add
mov
inc
cli
mov
add
or
sbb
add
jge
sub
test
js
push
je
add
insl
hlt
xor
clc
pusha
dec
add
clc
mov
pop
in
ss
xchg
lea
jmp
pop
pop
add
push
xorb
lcall
cmpsb
adc
push
sub
out
dec
pop
pop
or
test
pop
lea
mov
ret
xchg
je
bound
or
in
clc
or
jno
ror
push
sbb
adc
and
loopne
adc
cmp
jns
inc
pop
push
dec
lods
or
xchg
insl
ja
aaa
ss
xor
sarl
sbb
pop
sub
mov
and
add
mov
pop
push
adc
xchg
lods
cli
arpl
sub
mov
popa
mov
add
add
push
test
adc
pop
addb
add
add
mov
loop
pop
mov
push
mov
imul
add
jo
scas
outsb
shll
rcrl
jo
inc
jb
or
divb
sub
sub
add
data16
push
mov
pop
loope
popf
inc
push
pop
ret
xor
shl
fimull
incb
jns
insb
loopne
nop
fdivl
andb
xorb
gs
enter
push
sub
outsb
in
negb
shll
adc
and
and
js
or
sbb
dec
jmp
adc
out
das
or
add
fwait
and
sbb
inc
jnp
daa
mov
mov
ss
pop
mov
sbb
jp
mov
aas
cmpsl
push
push
mov
fstsw
sarb
sbb
fnclex
sbb
loop
outsl
adc
ror
mov
dec
cld
or
fldcw
inc
cld
fwait
mov
or
sub
or
clc
adc
and
sbb
test
and
loopne
mov
icebp
fstp
sbb
fldpi
pop
adc
or
cmp
adc
out
inc
mov
test
aam
mov
orb
mov
ss
jbe
xchg
jp
push
push
sbbb
jns
cmp
addb
std
cmpl
xchg
push
lahf
insl
popa
leave
sbb
jno
ffreep
inc
ljmp
cmpsl
xor
pop
jne
mov
push
mov
or
inc
inc
fsubl
cmp
xor
mov
pop
out
vpcmpgtd
xchg
or
in
loopne
ret
push
ss
fnstenv
xchg
into
or
jmp
push
test
xchg
addl
mov
fwait
divl
or
pop
sahf
pop
enter
jo
push
dec
popf
ret
out
popf
clc
pop
paddw
inc
mov
sbb
lea
mov
jnp
pop
adc
pop
sbbb
push
cli
push
mov
rorl
push
call
ljmp
adc
mov
pop
jmp
or
popa
lds
cmp
inc
aas
sbb
data16
push
fsubs
jne
js
lcall
ss
lock
inc
add
adc
mov
push
neg
insl
push
adc
sbb
and
test
add
iret
push
clc
add
jae
sbb
fdivrp
jo
jl
mov
mov
jle
sbb
addr16
pop
cltd
add
sbb
aas
xchg
aam
inc
push
pop
lock
push
imul
fcomp
or
ret
in
cmovb
sbb
in
sub
mov
in
into
push
pop
jmp
pusha
adcb
xor
stos
adc
jmp
sub
jb
into
sbb
cmpsb
rcl
jae
ret
mov
scas
es
out
mov
pop
mov
add
aas
jle
dec
fdiv
in
out
inc
adc
adc
sub
and
jbe
loop
ret
and
and
sub
or
insb
in
and
insl
iret
mov
cs
pop
dec
orl
lahf
pop
lret
sub
adc
fmuls
mov
jge
adc
xchg
xor
inc
inc
lret
dec
cmpsb
sbb
push
jnp
data16
jge
insb
in
shr
xor
or
lret
int3
leave
mov
orl
lds
jge
lods
pop
xor
inc
inc
int3
int3
cltd
jbe
nop
int
cmp
sub
mov
dec
pop
out
xor
or
int
push
push
jb
or
adc
and
jbe
mov
xor
add
into
fcmovb
inc
cs
xchg
bound
cs
mov
out
xor
das
push
cmp
mov
stos
or
push
sub
mov
orb
xor
loopne
cmp
xor
mov
ja
bound
outsl
sub
call
or
fsubrs
push
int
push
cltd
fs
xchg
fisttpll
fldl
fcoml
add
add
inc
scas
addr16
add
push
inc
pushl
xor
and
sbb
add
adc
add
jne
cmp
enter
dec
mov
sub
push
dec
inc
pop
sub
add
push
test
push
call
cmpb
xchg
aaa
push
or
cmp
pop
cs
mov
stos
test
pop
adc
mov
sarb
nop
rcr
movsl
call
fdivs
xor
js
sub
sub
mov
sub
lods
fbstp
and
or
sbb
push
test
dec
inc
inc
mov
je
out
clc
mov
jmp
icebp
fcompl
mov
sbb
les
jb
xor
cmp
inc
aas
mov
ret
add
add
sub
jecxz
loope
sub
shll
fadds
jo
adc
push
sub
jne
jns
xlat
std
and
sub
jb
scas
sbb
inc
xor
je
cmp
cmpsl
fisubrl
add
das
clc
lods
push
fnsave
add
fldenv
pop
jg
dec
pop
jb
fsubrl
or
mov
out
push
sbb
sbb
sbb
dec
fnstenv
andl
or
fsts
dec
shl
sbb
pop
xor
xor
xor
js
mov
jbe
test
mov
out
mov
clc
pop
ret
mov
lock
jns
out
and
ret
lret
and
sub
xor
cmp
cmp
dec
add
insl
sti
mov
sti
sbb
fsubrp
and
cwtl
pusha
leave
add
and
cmp
adc
add
pop
and
jb
cmp
push
or
add
jne
popf
xchg
repz
repnz
std
xor
inc
sbb
push
xor
daa
push
jo
add
xchg
push
cmp
sub
test
and
pcmpeqw
push
push
cmp
dec
popf
clc
pop
test
mov
iret
add
jne
iret
les
sbb
mov
jmp
test
pop
pushl
int
sbb
push
ljmp
scas
sub
add
adc
push
adc
inc
loopne
pop
or
scas
addr16
sub
inc
scas
pop
rcll
jo
pusha
and
mov
push
adc
jp
add
js
shll
je
fiadds
push
xor
inc
pushf
nop
cli
nop
and
dec
aad
icebp
cmp
push
jne
ret
xor
rolb
or
daa
adc
xchg
mov
mov
dec
divl
cmp
cmp
add
cmp
cmp
bound
insb
mov
xchg
cmp
loope
dec
sarb
fisttps
test
sbb
pop
cmp
je
mov
addr16
xor
leave
and
insl
cli
mov
je
in
cmpsl
jl
call
ds
adc
xchg
stos
push
mov
push
sbb
mov
movsb
test
xchg
jmp
sub
movsl
xorb
cwtl
cmp
xor
add
jmp
mov
xchg
int3
fimuls
sbb
inc
pop
sbb
ljmp
lock
add
inc
xor
loope
pusha
sbb
icebp
es
cs
sub
push
xchg
pop
add
dec
mov
subl
mov
mov
cmp
aad
daa
nop
movsb
pop
rcrb
sbb
push
mov
push
jns
xchg
pop
shlb
mov
pop
push
mov
mov
popa
mov
sub
ret
pop
add
and
push
jle
lock
mov
insb
mov
xchg
test
shl
neg
adcb
add
add
mov
push
imul
fwait
out
and
test
push
test
es
xor
shr
push
mov
push
adc
xor
int
call
or
std
jl
mov
jmp
fmuls
sbb
or
mov
inc
sbb
xor
out
jmp
cmpsl
cmp
pop
imul
fistps
adc
jo
jae
shr
adc
dec
sbb
mov
sub
mov
and
cmpsl
xor
cli
or
data16
jle
cmp
xor
stc
cmpl
leave
fcoml
add
aas
in
push
cmp
push
cmpl
rclb
lea
cmpsb
js
jbe
xor
das
mov
ret
push
and
cmpsb
fwait
and
push
add
mov
jmp
das
xor
lock
jo
scas
fsts
add
xor
dec
dec
sbb
movsb
into
jl
xor
jl
faddl
jl
dec
pop
mov
test
and
or
xor
bound
dec
cmp
lds
scas
es
add
das
jo
cmovo
aam
mov
mov
sub
gs
ficoml
fldenv
cmp
rol
fstpt
std
pop
mov
lock
cld
adc
pop
cmp
ret
pop
les
cmp
push
popa
cmp
cmp
jg
daa
xor
pusha
lock
push
add
ja
or
js
dec
and
jle
rorb
arpl
mov
sbb
dec
clc
inc
nop
adc
mov
cmp
loope
hlt
xorl
jg
jmp
ret
dec
lods
push
imul
push
push
fadd
dec
clc
xorl
xor
shr
loopne
ret
xchg
mov
fisttpl
clc
mov
push
mov
jecxz
and
and
or
pop
sub
dec
sbb
jb
xor
lock
jae
cmp
jl
sub
jno
jno
xor
add
add
jne
push
and
bound
lock
jbe
xchg
aad
fstpl
sbb
rol
adc
test
subb
dec
cmpb
push
sbb
aam
adc
add
das
pusha
adc
jmp
pop
and
push
clc
testb
cmp
xchg
lcall
or
inc
push
push
out
jne
add
jmp
jl
push
jae
in
cmp
adc
pop
je
or
cmp
ja
inc
add
pop
xchg
inc
xchg
lock
xor
popf
add
jmp
mov
dec
or
pop
sub
leave
jle
mov
lock
cmpsb
mov
mov
sub
jmp
xchg
imul
adc
add
push
add
popf
ret
adcb
add
ds
sub
subb
push
sub
lret
add
loop
pusha
pop
fists
fldl
movb
cmp
jmp
pop
mov
inc
inc
xchg
xchg
test
enter
stos
cwtl
mov
fdivrs
adc
sub
dec
in
loopne
sbb
push
dec
jo
and
notl
cld
js
fcmovbe
pop
mov
aam
cwtl
xorb
fsubp
or
mov
ficomps
xchg
aaa
mov
test
mov
cmp
in
clc
or
pop
loopne
aas
push
sub
cld
jmp
cmpl
cmpl
pop
add
sub
cltd
cmp
repnz
mov
loopne
outsb
adc
or
mov
and
inc
inc
jb
cltd
xchg
sub
xor
out
adc
or
jmp
adc
testb
inc
mov
jbe
outsl
loop
pop
das
pop
dec
xor
pop
sbb
sub
ret
adc
dec
movsb
xor
mov
and
adc
jb
fisubrs
cmp
jb
add
pop
adc
add
cmpl
sub
add
pop
insl
ja
fidivl
ficoms
xchg
xor
add
jne
scas
mov
jnp
fsubl
mov
mov
jae
push
imul
dec
add
mov
ja
xchg
test
lea
ljmp
xor
jmp
scas
push
mov
mov
inc
add
xchg
jl
jo
mov
adc
daa
iret
jecxz
cltd
lods
push
push
push
push
rol
cmpsb
mov
pop
cmp
inc
or
int
add
cwtl
popf
movsl
add
or
mov
int
sbb
pushf
and
inc
and
push
add
add
pop
inc
test
jecxz
pop
daa
jmp
push
les
or
rcl
mov
pop
es
jmp
push
ja
cmp
imul
and
mov
and
cmp
push
pop
cmc
jo
je
gs
icebp
stos
ss
jmp
gs
loope
frstor
cmp
int3
jg
roll
insl
mov
sarb
push
and
jmp
inc
insl
rcl
fidivl
fmull
add
mov
sbb
cmp
hlt
imul
lods
sbb
or
addr16
jmp
ds
inc
adcb
add
sarl
cmp
loope
or
nop
int3
sub
insb
es
push
enter
sbb
jmp
ja
mov
lcall
sbb
mov
pop
imul
scas
mov
add
mov
adc
std
sbb
or
aaa
jnp
add
jne
cmpsb
inc
or
adc
adc
inc
add
repz
sub
cmp
es
sbb
es
pusha
adc
roll
push
dec
out
loopne
mov
repnz
shlb
push
leave
pop
sub
and
hlt
inc
pusha
test
cmp
xchg
out
cmp
sbb
mov
sub
or
inc
sub
and
aaa
rolb
daa
inc
pop
movl
adc
adc
or
out
test
adc
cmp
in
out
fsts
mov
xor
js
bound
mov
out
movsb
adc
mov
inc
push
push
dec
sub
xchg
mov
or
pop
lea
add
out
in
les
pop
roll
imul
pop
jbe
mov
je
in
inc
push
xor
scas
jmp
adc
nop
push
adc
hlt
xorb
inc
or
dec
mov
add
cmp
cmpb
pop
pop
pop
popf
gs
rcrl
shlb
cmp
idiv
push
inc
jmp
mov
enter
or
je
push
data16
push
jmp
addl
sub
mov
xor
test
sbb
sbb
or
pop
jmp
jmp
fs
dec
movsl
repz
pop
sbb
sbb
push
frstor
repz
push
fstl
and
fstpl
sbb
in
adc
or
push
js
pop
adc
and
or
jo
push
pop
clc
push
inc
stos
or
push
outsb
dec
xor
ss
push
mov
loop
pop
add
in
push
dec
or
add
add
mov
xchg
and
push
adc
add
sahf
adc
xchg
mov
jmp
mov
popa
sbb
inc
out
into
inc
std
pop
mov
jns
shr
mov
imul
mov
inc
arpl
dec
cmp
xchg
pop
fs
xor
xor
rcrb
xchg
adc
and
inc
inc
adc
cmp
add
add
pop
or
adc
or
push
and
mov
pusha
lea
not
and
decb
jnp
das
dec
pop
or
sbb
and
xchg
ja
push
pushf
mov
push
mov
movsb
add
mov
mov
add
pop
add
xchg
adc
ret
adc
sar
int3
jecxz
add
sub
jge
jne
nop
sbb
sub
insl
jmp
int3
dec
pop
cmp
fimuls
sub
xchg
and
cmp
outsb
or
into
push
jno
jno
cmp
loopne
insb
sbb
lret
shr
not
and
add
or
loopne
cmp
aas
jae
xchg
or
dec
pop
and
les
aam
or
sub
add
mov
adc
add
mov
outsb
mov
dec
pusha
mov
mov
aas
mov
add
jae
cmpb
sbb
dec
push
mov
xor
orl
orb
dec
stos
movsl
movsbl
mov
or
inc
xchg
sub
orb
lcall
mull
sti
mov
xlat
sbb
sbb
loope
add
mov
jnp
inc
pushf
imul
mov
mov
push
or
jae
movsb
mov
scas
andb
inc
adc
push
inc
cli
push
js
and
push
or
and
push
ljmp
out
movsb
sahf
or
mov
adc
and
adc
mov
decl
cmp
jne
jbe
or
movsl
clc
cmp
jbe
and
inc
pop
iret
pusha
lret
pop
fdivrs
std
add
loope
inc
ljmp
jge
push
add
push
adc
adc
pop
jo
js
cmc
stos
je
not
call
sti
jmp
jae
inc
mov
and
mov
push
jne
movsb
xor
add
out
jne
fcomp
dec
fcomip
cmp
xor
dec
jae
repnz
sub
arpl
outsb
jmp
cmp
sbb
enter
sbb
push
testb
mov
ss
dec
ljmp
sbb
adc
or
add
sbb
cmp
pusha
adc
aaa
mov
insb
cmp
aam
inc
or
nop
mov
pushf
dec
jns
cmp
mov
je
push
jp,pn
mov
inc
nop
dec
scas
into
mov
int
and
pop
xor
jg
shl
inc
jmp
mov
stc
xchg
pop
std
push
idivb
pop
mov
add
cmp
jle
pop
shl
mov
jb
loop
inc
dec
sbb
push
jno
cmp
sub
iret
shrl
stos
sub
movsb
scas
inc
adc
cwtl
and
mov
sub
aas
jmp
dec
in
and
jmp
dec
jo
js
sub
cmp
or
push
insb
xor
shr
dec
or
add
ret
fisttpll
mov
ss
lock
jns
rcll
icebp
sti
adcb
jle
mov
push
inc
lcall
fs
mov
or
subb
mov
les
incb
popa
into
shr
or
adc
sti
mov
pop
jmp
push
or
push
jnp
add
mov
adc
lds
cs
jbe
dec
inc
add
add
imul
cmp
roll
sbb
push
xor
mov
call
sbb
outsl
jne
xchg
cmp
fildll
sbb
push
bswap
hlt
aam
add
add
pop
add
and
shrb
xchg
insl
dec
je
mov
xchg
jnp
push
rol
pushf
mov
and
add
sbb
ljmp
je
xor
xor
or
jbe
push
imul
popa
inc
loopne
mov
mov
mov
mov
orb
sahf
mov
inc
ret
outsb
imul
sbb
lock
add
push
push
movsb
cmpb
shl
push
mov
mov
aad
pop
xor
pop
pop
mov
dec
out
mov
enter
push
adc
clc
out
dec
in
mov
paddsw
ds
movl
jne
pop
sbb
add
sub
sub
lods
pop
lock
lods
and
sub
pop
add
les
inc
mov
aaa
fs
inc
test
lock
push
roll
add
js
mov
xor
not
and
add
jmp
lea
add
pusha
shr
popf
jle
test
dec
cmp
xchg
cmp
rolb
or
shll
daa
es
add
xor
push
andb
mov
pop
dec
push
jae
cmpsl
mov
add
nop
sub
test
or
inc
call
adc
movsb
mov
enter
dec
and
and
and
imul
lds
stos
sar
dec
mov
cs
xor
mov
sbb
xchg
fldcw
adc
or
dec
shll
pop
pop
in
xor
ss
add
xchg
adc
jae
ret
test
iret
ret
mov
jo
and
and
jns
dec
test
insl
and
xor
inc
xor
test
imul
icebp
mov
adc
jge
mov
mov
scas
inc
dec
insb
pop
xor
and
adc
add
and
and
push
stos
cmp
cmp
mov
cmp
inc
cmpsb
mov
sub
adc
pusha
outsb
repz
xlat
dec
pusha
add
and
movsl
jmp
or
add
or
or
loopne
add
cmpsb
enter
pop
cmp
fisttpl
ret
push
imul
cmp
xchg
into
push
lret
and
jns
push
inc
adc
sbb
or
push
jmp
cmp
or
sbb
xor
mov
and
mov
jp
bound
fnsave
inc
mov
cwtl
stc
add
aad
sbb
add
dec
add
add
dec
push
loop
fistpll
nop
sbb
por
cmp
xor
add
xor
dec
add
gs
push
pop
cli
dec
in
mov
mov
std
adc
rorl
cmp
mov
mov
mov
int3
jl
adc
adc
dec
sbb
ss
clc
jae
adcb
loop
inc
ljmp
subl
jmp
add
test
or
cmp
adc
pop
test
loope
in
mov
cmpsl
popa
pop
cs
int3
fsubl
xor
andb
test
ret
add
icebp
push
xor
rcll
and
fisttpl
push
sbbl
dec
or
popa
or
xchg
mov
aas
lods
aas
jae
adc
movsb
push
ret
cltd
add
dec
lock
mov
es
dec
ud0
or
jno
pop
sbb
pusha
and
out
ret
inc
mov
jmp
sub
scas
sub
test
and
push
loop
push
mov
into
inc
and
or
in
cs
pusha
mov
rorl
dec
je
andb
adc
das
xor
es
mov
inc
adc
dec
adc
jbe
or
push
rol
movaps
pop
inc
fdivp
mov
cmp
jb
push
mov
push
fadds
movsl
jno
rol
sub
sbb
bound
pop
push
cmc
fmull
jns
sub
add
mov
jle
mov
add
andb
idivl
movsl
lock
sub
call
lret
test
shlb
inc
repz
pop
insl
bound
push
outsw
xor
and
pop
out
adc
dec
inc
nop
cmp
mov
pop
prefetch
or
lret
jl
cmp
sbbl
and
adc
movl
or
and
cmpl
or
jge
mov
jae
js
sbb
fimull
popf
es
xorl
movsb
cmp
jb
mov
cmp
adc
adc
mov
mov
mov
shll
shrb
or
inc
flds
enter
jbe
scas
cmpsb
sub
push
je
sub
sub
out
jle
xchg
cmp
adc
adc
add
mov
ds
pusha
mov
lods
push
sbb
mov
or
push
jp
xor
xchg
mov
jle
shrl
outsb
sbb
mov
leave
push
sbb
icebp
xchg
xor
adc
inc
cmp
add
lock
out
mov
mov
enter
push
add
jb
jmp
fsts
aaa
sbb
mov
sub
cmp
adc
sub
popf
nop
push
ljmp
fildl
sbb
pop
xor
jmp
jmp
jbe
icebp
sub
cmpsb
inc
shrl
add
shr
or
push
xor
fucom
int3
adc
lea
jo
dec
add
lock
dec
jae
add
sub
popa
clc
sub
loope
movsb
mov
loop
lret
add
xor
test
movsl
mov
xchg
test
inc
mov
and
outsb
das
add
jbe
add
cmp
inc
inc
jmp
mov
add
orb
jmp
aas
mov
insb
ret
cltd
jge
adc
mov
ss
mov
ljmp
jmp
loop
jae
dec
inc
mov
inc
mov
and
push
bound
sub
sbb
mov
sbbb
mov
dec
ret
sub
jb
fsubrp
scas
movsb
mov
jmp
outsb
push
ret
pop
addb
push
js
leave
pinsrw
mov
or
or
cmpl
clc
or
dec
push
mov
sbb
scas
enter
jb
shr
jae
movsb
mov
lea
adc
or
aas
add
mov
jnp
add
push
push
inc
xorb
xor
fs
es
pop
inc
cmpb
mov
inc
imul
mov
out
fnstsw
sbb
dec
loopne
cmp
mov
ret
and
hlt
leave
push
cli
mov
dec
aam
sarb
ds
or
and
push
mov
notl
daa
cmpsl
mov
push
test
jg
add
cmpsb
ret
mov
daa
bound
test
cmp
push
pop
dec
xchg
rcrb
or
adc
xor
in
shll
add
jo
jmp
outsb
or
sub
or
je
je
adc
push
dec
je
sbb
pop
xlat
lret
pop
or
add
movsb
stc
push
add
addb
sti
sub
push
add
or
pop
lret
jge
dec
sbb
mov
lret
rcrb
inc
clc
inc
inc
shr
jmp
sub
test
pop
xorb
dec
jb
cmp
dec
jbe
int
rorb
push
adc
jmp
add
adc
ljmp
ds
cmpb
jne
inc
inc
nop
std
xorb
cmp
inc
les
int3
mov
add
jno
cwtl
dec
pop
mov
pop
pop
cmp
test
inc
pop
ret
test
xor
clc
addr16
aam
aam
cmp
iret
mull
pop
in
adc
call
mov
in
push
insb
and
mov
xor
or
decl
mov
loopne
inc
mov
or
lock
pop
hlt
mov
cmp
pop
mov
push
je
clc
and
aam
mov
or
and
mov
out
inc
add
daa
cmp
ret
and
inc
inc
imul
call
inc
inc
les
pop
rol
cld
insb
pop
icebp
push
stos
add
xchg
fsubs
ss
sub
add
add
add
push
pop
neg
mov
je
dec
cli
add
mov
push
fidivl
pop
mov
pop
loopne
inc
cli
inc
movd
mulb
je
vmread
outsb
mov
shr
ror
popa
ja
mov
sbb
cwtl
loopne
inc
adcl
into
sub
or
fs
xor
gs
inc
fmull
jle
mov
pop
mov
not
jp
push
ficoms
sbb
dec
out
pop
xlat
ljmp
add
clc
es
mov
inc
xchg
mov
pushl
and
mov
inc
inc
dec
sbb
es
shlb
mov
or
fcompl
xchg
and
and
aas
sub
fcoms
cmp
lret
test
mov
ror
xor
mov
add
movsl
cmp
popf
xchg
loopne
outsb
inc
mov
jl
rolb
aad
int3
daa
jecxz
and
cmp
popl
sbb
jmp
dec
dec
and
rol
jnp
fneni(8087
inc
gs
sub
jg
mov
dec
add
ljmp
cs
pushf
jmp
inc
inc
addr16
or
lcall
fisttpll
dec
adc
jmp
push
cmp
pop
push
jecxz
or
mov
sar
je
jne
pop
jmp
jnp
and
clc
icebp
or
or
popf
es
clc
cltd
jmp
pop
add
xchg
arpl
jmp
rdpmc
shlb
dec
clc
pop
add
sbb
adc
je
insl
xchg
loope
lock
leave
jmp
js
fcomp
sbb
divl
ficoms
inc
cmp
stos
test
cmp
push
insl
testl
in
faddl
call
sub
xor
lock
pop
mov
pop
cmpl
fildl
loope
inc
ret
xor
mov
pop
ss
mov
mov
outsb
jo
sbb
scas
lods
sub
add
jbe
pop
mov
cmpb
call
jo
inc
push
movb
xor
clc
add
pop
hlt
xor
xor
es
das
or
push
push
adc
sub
or
adc
pop
or
lock
add
lods
add
xor
jl
push
jno
xchg
and
push
push
push
sub
pop
bound
inc
and
xor
pop
imul
xchg
js
jle
add
add
mov
mov
mov
jbe
mov
dec
mov
jmp
testb
fdivs
xchg
xor
dec
and
shlb
outsb
adc
sbb
cmpsl
xor
fmuls
push
clc
mov
push
jo
xor
iret
repz
daa
or
inc
nop
rorb
ljmp
push
gs
dec
add
push
mov
mov
add
add
or
and
mov
ds
les
add
jns
and
test
pop
push
mov
pop
or
add
adc
pop
inc
jg
cmp
adc
lds
bound
push
mov
pop
sbb
mov
aas
aaa
or
dec
insb
loop
subl
test
push
sbb
dec
add
enter
lock
dec
cmp
bound
adc
add
and
add
pop
push
add
clc
jmp
mov
xchg
push
hlt
inc
or
lret
add
call
sub
xorb
outsl
pop
repnz
jne
lahf
xchg
add
adc
push
xor
jl
jne
fsubs
loop
inc
and
push
xorl
mov
xlat
test
aam
loop
jae
or
jg
push
or
add
add
push
jne
pop
outsl
ds
xor
jecxz
mov
push
jbe
call
mov
adc
in
inc
mov
or
ret
aaa
test
add
add
pop
mov
add
cmp
sub
add
cmp
xchg
mov
add
and
cmp
push
aam
mov
jbe
jle
xchg
jne
jle
mov
mov
js
lds
pop
dec
cwtl
sub
xor
and
mov
and
push
xor
push
add
mov
mov
push
mov
jmp
arpl
dec
mov
mov
jg
loope
mov
scas
es
mov
std
decl
mov
cld
jb
cmp
ja
add
cmp
sarl
cmp
lods
dec
jne
adc
cmp
fwait
mov
mov
nop
jmp
add
push
test
lea
test
mov
push
or
mov
je
push
test
pop
out
push
inc
cmpsb
sbb
ret
aad
jle
dec
test
jb
loop
fildl
pop
push
mov
pop
lret
icebp
test
movsb
xchg
sbb
sub
mov
cwtl
jbe
fcmovbe
pop
push
add
cmp
push
shrb
mov
popa
pop
mov
insb
gs
pusha
daa
mov
in
lods
cmp
mov
rolb
jmp
fs
cmp
rcl
loopne
aad
mov
pop
adc
cmovs
sub
imul
insl
nop
out
cmpb
xchg
pop
lret
push
shl
iret
call
inc
dec
fwait
dec
or
sti
add
cwtl
push
and
hlt
movb
rorb
and
fwait
rorb
loopne
inc
shrb
andl
mov
je,pt
or
je
or
push
mov
std
xor
jmp
rolb
mov
jle
jne
or
xor
xor
jp
mov
xor
lods
dec
lock
inc
repnz
imul
ja
or
mov
push
sti
jmp
decb
sti
cmpb
mov
daa
sub
adc
cmp
sarb
inc
fadds
cmp
mov
aam
jge
test
xchg
xchg
push
cwtl
cmp
clc
jbe
inc
mov
add
mov
adc
outsb
add
sub
arpl
xchg
inc
loopne
je
dec
loop
jmp
sbb
rcll
data16
fwait
or
xor
sbb
outsl
movzbl
aad
pop
push
sbb
push
mov
sub
in
out
fistl
add
mov
addr16
or
rcll
sbb
xor
and
je
insb
lcall
imul
clc
cmp
push
stos
sub
cmp
lcall
and
sahf
and
jne
test
jmp
push
dec
jb
rolb
sub
dec
jle
inc
cmp
sub
fists
mov
lret
data16
ficoms
pop
scas
in
mov
mov
push
mov
inc
adc
push
push
rcr
inc
add
gs
hlt
dec
stos
inc
pop
xchg
arpl
jbe
push
gs
pop
or
add
popa
xor
push
and
enter
mov
and
or
push
add
mov
nop
mov
dec
adc
andb
inc
or
dec
addr16
inc
lret
mov
ljmp
sbbl
add
inc
dec
loopne
jle
ljmp
daa
or
or
mov
out
xchg
imul
add
xchg
hlt
and
push
ret
lods
push
and
data16
add
adc
jmp
ret
sub
movsb
mov
ret
adc
in
movsl
addb
pop
dec
out
sbb
insb
jecxz
cmpsb
inc
xchg
fdivrs
adc
add
adc
imul
inc
xor
mov
je
push
pop
je
in
lods
mov
outsl
pop
or
push
idivl
or
lret
sub
subb
iret
pop
xor
call
cs
imul
fistps
jne
mov
inc
push
cmpsl
jl
test
mov
push
lret
xchg
pop
inc
in
pop
or
mov
cmp
ss
outsl
incl
shll
mov
jmp
ret
cmp
ja
lcall
sub
inc
add
stos
inc
sub
sbb
in
lcall
call
inc
enter
xchg
cmp
test
add
sub
xor
add
or
xchg
inc
mov
xorb
push
dec
ss
mov
aam
enter
call
mov
inc
fnclex
mov
xor
test
je
popf
jne
or
outsl
push
das
and
jnp
shl
popf
pop
sub
jnp
jo
test
push
sub
push
je
pop
ret
cltd
cmp
es
xor
mov
add
fcomi
adc
push
mov
lcall
add
push
movsl
adc
out
sbb
lret
jno
scas
setl
sbb
add
jne
mov
into
dec
xor
fisttpll
ret
push
lmsw
jecxz
jp
adc
ret
sub
fsubl
inc
add
and
sbb
out
pop
adc
mov
xor
jle
jbe
notl
pop
lods
rclb
jne
outsb
cmp
xchg
jo
outsb
lahf
add
adc
pop
sti
scas
int3
ret
and
sbb
aad
into
push
adc
push
mov
jmp
fsubl
adc
pop
cli
roll
lods
sub
mov
xor
negl
jo
cmp
push
add
shl
add
incl
jmp
lea
shl
jmp
fwait
pusha
or
add
pop
adc
pop
sarb
inc
dec
test
pusha
fldenv
adc
or
popf
sub
sbbb
mov
das
sbb
cmp
or
inc
jmp
loopne
push
jns
mov
cmp
clc
adc
and
test
dec
daa
sbb
push
enter
in
lea
pop
and
dec
adc
outsb
popa
ret
add
push
notb
lods
adc
xor
arpl
cmp
mov
dec
adc
cmp
fbstp
jmp
jle
cmpsb
rol
out
cmp
adc
mov
pop
inc
nop
rolb
pop
imul
les
js
mov
in
pop
les
ret
push
loopne
mov
pusha
fmull
pusha
jp
cmp
mov
movsl
push
insb
jl
or
clc
push
xor
lock
jo
out
or
out
sbb
pop
adc
nop
insb
add
xchg
inc
mov
dec
aas
fcmovbe
ficomps
cltd
jo
dec
sbb
inc
fisubl
or
xor
loopne
push
mov
shlb
outsb
xchg
daa
xor
filds
imul
dec
or
push
je
insl
cmpsb
or
sbb
xchg
or
cld
add
mov
mov
stos
push
jo
cwtl
sti
sbbb
ret
fisttpl
add
call
insb
in
popf
push
pop
push
push
jne
loope
aam
jl
cli
mov
jmp
test
imul
stos
xor
andb
sbb
cmp
aad
in
and
mov
xchg
pop
aas
adc
out
cmp
xchg
loope
mov
push
je
and
sbb
fs
add
inc
dec
add
repz
pop
sub
and
jbe
push
dec
push
sbb
inc
cmp
test
add
cmpsb
daa
adc
jno
mov
sbb
or
push
mov
es
lea
lret
les
cmpsb
and
or
mov
pop
subl
mov
jbe
aam
add
mov
inc
lret
xchg
push
lret
add
movsb
push
add
pop
shrb
adc
sub
dec
leave
sub
xchg
popa
adc
cmp
mov
das
xorl
cmpsl
add
andb
or
cmp
pop
add
aam
je
ret
add
sbb
sti
pusha
mov
xor
cmp
jecxz
mov
mov
jle
fcomps
add
lret
mov
adc
mov
and
push
pop
dec
andl
push
mov
xor
sbb
hlt
cmpsb
cwtl
add
gs
lret
xchg
and
jp
sub
push
sub
mov
sbb
movsb
and
loope
mov
int3
adc
or
pop
lods
add
mov
lret
mov
or
movsl
lret
sub
insb
or
test
es
addr16
lcall
insl
mov
sbb
sahf
mov
fs
cmp
or
testb
pop
stc
sbb
js
pop
iret
mov
adc
mov
pop
adc
pop
in
fs
inc
push
clc
test
add
fsubrl
inc
pop
cli
sub
ret
xchg
mov
xor
das
inc
or
idiv
inc
pop
mov
add
inc
push
xchg
inc
and
jge
and
or
add
xor
add
push
adc
sbb
int
or
out
cmp
insb
insb
loopne
movsl
mov
fdivs
clc
rorb
das
pop
inc
add
sub
into
push
add
movb
lcall
ss
pushl
movsb
and
lret
jecxz
lret
jo
add
mov
test
xchg
insb
xor
adc
push
fcmovb
and
test
test
cld
push
jg
ja
sarb
or
or
adc
and
mov
lahf
clc
mov
add
or
test
cmp
sbb
mov
fcomp
orb
inc
jmp
mov
dec
mov
les
inc
inc
cmpb
cwtl
adc
jmp
jbe
mov
mov
jae
push
adc
cmpsl
lahf
mov
mov
inc
adc
fldl
cmp
mov
mull
cmp
mov
ss
add
adc
inc
add
lcall
loope
js
jo
sub
jle
jb
cmp
mov
jl
push
test
enter
sub
sahf
in
pop
sbbl
aam
inc
cmp
or
lock
xor
lock
or
adcb
jns
push
sbb
and
or
add
mov
pop
test
repnz
mov
mov
xchg
nop
dec
mov
mov
in
ljmp
sub
fwait
lods
js
or
adc
movb
inc
mov
or
daa
pop
lock
push
mov
out
clc
int3
cs
enter
sbb
adc
daa
ret
xor
cmp
mov
xor
cmp
add
sub
mov
daa
lea
movsl
and
cmp
loop
fisubrl
push
jne
pop
inc
sarb
xchg
sti
repnz
lea
push
push
loop
movsl
movsl
das
leave
mov
mov
in
pop
cmpsl
pop
pushf
or
sub
sub
or
inc
xor
movsb
mov
stos
pop
fisttpll
jl
sbb
jmp
dec
lock
add
test
pop
dec
mov
jnp
and
adc
fcompl
sub
test
cmp
mov
mov
lcall
nop
or
ss
sub
jo
add
adc
movsl
pop
out
jmp
push
test
jl
mov
add
pop
faddp
xchg
push
xor
sbbb
daa
sbb
idivl
mov
das
popf
inc
sub
mov
arpl
or
mov
and
dec
push
jne
sbb
mov
add
sbb
dec
add
mov
mov
xor
int3
sub
push
out
lock
add
xlat
cmp
inc
add
cmp
jl
insb
sysenter
add
cwtl
or
stos
or
pusha
loope
adc
sub
xchg
or
out
popa
add
push
dec
or
push
sub
push
js
sbb
loop
jb
ficoml
add
or
sbb
out
pop
adc
sbb
dec
or
xchg
inc
rolb
aas
loopne
mov
test
int
sub
dec
dec
and
mov
pop
push
pop
jp
daa
inc
dec
sbb
sbb
sub
adc
test
lds
jne
or
call
incl
shlb
pop
sbb
xchg
push
mov
decl
mov
cwtl
nop
and
test
pop
scas
push
pop
outsb
negl
sbb
sub
cmp
inc
sbb
repnz
add
pop
mov
cmp
lahf
pop
and
int
stos
pushf
icebp
imul
cmp
daa
inc
cmp
sub
mov
push
nop
or
add
mov
stos
je
pop
or
or
xor
fisubrl
aas
mov
ret
addb
inc
cmp
cmp
sbb
cld
add
cmp
lcall
jo
clc
ljmp
imul
adc
inc
add
sbb
loope
sub
add
adc
mov
dec
sbb
inc
inc
inc
mov
mov
aaa
lods
xorb
mov
push
xchg
pop
push
inc
sbb
add
xchg
sar
ds
lea
and
pop
xor
mov
mov
imul
cmp
dec
dec
fidivl
or
and
jg
in
push
and
out
push
xchg
cmpsb
test
pop
dec
dec
add
pop
push
rep
inc
fwait
push
and
sbb
popf
clc
xor
in
pop
xor
add
jbe
jmp
adc
sbb
pop
aad
ss
or
pop
loopne
popa
jcxz
nop
push
inc
or
cmp
popf
ret
cld
xchg
add
xchg
sbb
cmp
call
addr16
inc
outsl
cmp
mov
idivl
inc
push
fcompp
icebp
rclb
cmp
jnp
lret
inc
jne
adc
xor
ds
jmp
push
mov
daa
push
sub
mov
xchg
je
push
cmp
add
in
dec
outsb
out
adc
lock
jne
cmpsl
dec
out
adc
lds
sbb
call
popf
mov
inc
cmp
push
jmp
test
cli
outsl
fstps
nop
inc
sti
and
rol
lcall
mov
cld
or
subb
mov
insb
xchg
dec
inc
add
push
xor
outsb
adc
jl
and
jle
push
push
push
and
cmpsb
out
pushf
or
push
imul
xchg
jne
xor
lock
rcll
scas
scas
rcrl
filds
add
push
cmc
sub
inc
pushf
sbb
orb
or
dec
hlt
jbe
jmp
adc
add
and
pop
stc
add
icebp
cmp
test
and
aam
cli
inc
lcall
orb
pop
add
adc
jmp
sbb
fs
xchg
jp
add
jo
xlat
testb
push
cmp
and
adc
mov
test
pop
adc
and
add
push
jne,pn
mov
mov
loope
sub
pop
sub
adc
mov
loopne
jl
cld
or
in
push
jae
push
lret
jns
ss
es
dec
sbb
mov
sub
push
inc
and
enter
push
rolb
in
pop
loope
sbb
jmp
stos
daa
test
cmp
loopne
orl
and
cmp
jge
into
call
sbb
mov
add
lea
loop
imul
lcall
call
xor
adc
mov
mov
mov
pop
sub
mov
nop
adc
out
adc
daa
orb
fistpl
push
sbb
lods
xor
ret
push
add
cmp
push
xchg
inc
add
jnp
call
jne
or
dec
add
add
sbb
inc
fdivrp
and
ret
sub
pop
pop
fstps
or
inc
push
xchg
xchg
push
es
xor
push
fstp
mov
je
push
bt
outsl
mov
pusha
or
pop
mov
rol
dec
lock
into
and
std
inc
ret
or
fwait
pop
jmp
push
add
mull
jmp
or
jmp
or
cltd
mov
and
jle
fldcw
movsl
cmpsl
push
push
cmpsl
mov
sub
mov
push
xchg
push
dec
ret
pop
adc
imul
add
sbb
or
or
push
cmp
inc
outsl
add
mov
push
adc
push
or
movl
fmul
add
or
out
mov
jmp
insb
pop
pop
test
pop
mov
jb
pusha
jbe
push
cmc
repz
and
das
add
mov
and
ret
sbb
lret
mov
bswap
mov
fwait
dec
fs
je
loop
or
inc
and
or
sbb
popf
testb
mov
in
ret
lock
add
dec
adc
cmpsl
add
pop
dec
and
lods
add
addl
loop
rolb
adc
outsb
sbb
adc
loope
lcall
sub
and
cmp
out
and
popf
cltd
adc
mov
pop
test
inc
mov
insb
aaa
imul
repz
dec
js
ss
dec
jnp
mov
adc
adc
bound
das
mov
pop
cltd
addr16
imul
and
mov
sub
pop
adc
test
rcr
js
push
mov
adc
sbb
mov
sbb
push
and
and
shl
pop
dec
test
push
cld
enter
popa
sub
ret
aam
pop
ret
ss
add
add
or
xchg
push
lahf
jnp
movsb
mov
dec
or
movnti
xchg
loop
sbbb
push
inc
cmovb
scas
pop
or
out
mov
into
mov
call
or
lret
push
pusha
add
fidivl
xchg
hlt
push
pop
sarl
loopne
fistpll
pop
test
push
xchg
adc
inc
adc
dec
xor
popf
mov
push
jne
rorb
arpl
mov
pop
and
xchg
hlt
add
or
test
cmpb
mov
adc
loop
add
add
sldt
inc
fcomps
and
std
out
cltd
xor
mov
adc
mov
inc
iret
ficoms
and
mov
and
push
add
stos
dec
pop
movsb
enter
loopne
jge
xor
clc
jg
sub
dec
das
inc
adc
test
mov
test
inc
test
fdivrs
mulb
sub
push
add
dec
les
xchg
nop
clc
mov
ja
dec
ret
cmp
andb
inc
xor
outsl
add
inc
je
jo
mov
ss
or
or
lret
pop
or
or
and
inc
xchg
xchg
lock
out
fmull
and
jne
mov
xlat
push
cwtl
sub
rclb
mov
and
dec
aad
cmp
decl
add
jle
rcrl
insb
xor
jp
dec
or
add
push
fsubs
gs
jle
xchg
xor
aaa
add
lcall
and
xor
es
lods
or
insb
les
adc
mov
cmp
incb
pop
xor
inc
mov
mov
push
cmpsl
shlb
mov
lods
cmp
xchg
daa
xlat
pop
adc
push
shll
add
je
adc
test
add
xor
add
and
mov
mov
pop
add
push
movsl
sahf
nop
fistpl
ds
cmp
inc
jp
or
mov
mov
std
rcl
iret
ss
inc
dec
push
dec
adc
cmp
mov
inc
je
mov
mov
and
jg
inc
daa
loopne
and
push
jl
das
repnz
pop
xchg
sbb
push
cmpsl
fisttpll
or
dec
dec
add
adc
inc
sub
pop
loop
mov
fwait
dec
adc
into
rclb
add
pop
adc
pop
or
lea
mov
fisubrs
jmp
adc
iret
pop
mov
add
or
loope
adcb
push
aas
lret
mov
pop
je
dec
and
add
adc
push
jmp
push
aas
add
jmp
push
outsb
xchg
pop
or
cld
out
xchg
aam
pop
bound
roll
rcr
lcall
sbb
pusha
fiadds
fnsave
aaa
inc
pushf
loope
fstpl
or
loopne
dec
push
add
dec
rolb
xor
or
loope
ret
sbb
mov
je
inc
or
sub
xorb
pop
aam
aam
ret
adc
and
enter
add
xchg
push
sub
pop
jne
push
mov
inc
mov
xor
or
inc
inc
pusha
xchg
sbb
push
mov
movl
push
sbb
je
lret
negb
xor
cmp
imul
imul
adc
dec
xor
in
mov
cwtl
pop
sbb
pop
adc
push
cmpsb
and
jne
inc
dec
roll
push
and
and
inc
sub
add
aam
inc
mov
lret
add
shll
adc
add
lret
inc
push
push
add
xchg
call
dec
mov
xchg
sbb
and
or
xchg
mov
dec
push
mov
adc
fs
pop
xchg
jle
rcrb
rolb
dec
in
add
lock
lahf
xchg
pop
add
mov
mov
xor
sbb
repz
popa
mov
roll
int3
fcom
adc
and
push
fwait
mov
xor
push
sub
sbb
mov
mov
fsubl
jne
dec
mov
or
push
icebp
dec
mov
movsl
jbe
js
pop
push
sub
ret
or
not
in
mov
int3
out
cmp
int3
aad
fiaddl
or
call
call
or
pop
push
xor
pop
cmp
xchg
iret
nop
push
call
or
push
insb
daa
aad
mov
into
repz
test
or
out
pop
xchg
xchg
dec
xor
xor
dec
pop
cmp
mov
cmp
dec
call
mov
add
lret
sub
push
fildl
hlt
pop
aam
xor
cmp
pop
jmp
push
sub
mov
out
jle
mov
mov
xchg
mov
stos
mov
sub
je
inc
imul
arpl
jnp
jl
jg
dec
push
push
rorl
push
inc
scas
xchg
lcall
ret
mov
mov
mov
sti
scas
jmp
loope
loop
add
idivl
xchg
fsubrs
xorb
add
js
sbb
push
jmp
adc
sub
add
mov
xor
in
mov
repz
enter
adc
out
mov
loope
sub
mov
adc
icebp
or
pop
sbb
jns
cwtl
pop
inc
je
mov
adc
and
mov
mov
or
mulb
jbe
cmp
inc
out
popa
push
movsl
push
or
pop
dec
adc
fisttpll
inc
jmp
jl
sub
sbb
pop
aam
negb
push
pop
enter
or
or
or
and
adc
outsl
add
mov
je
sti
add
push
adc
test
sbbb
imul
rorb
test
ljmp
mov
std
pop
dec
loop
adc
jl
incb
hlt
add
icebp
mov
adc
mov
testb
xchg
push
lahf
popa
mov
ds
sbb
sub
cmp
push
int
inc
sub
inc
adc
sub
loopne
rorl
sbb
sub
cmp
mov
inc
ret
and
pop
pop
sub
pusha
mov
stos
out
clc
fwait
ret
rorb
xorl
dec
xchg
cmpsb
mov
lea
cmp
rclb
lret
jo
or
sub
jmp
adc
test
dec
loopne
lds
or
pop
mov
mov
mov
out
or
push
cmpsl
in
fiaddl
je
cmp
jl
lahf
cli
jno
cmpsl
icebp
rorb
out
ds
aas
aas
or
add
sub
jb
sbb
pop
ret
mov
mov
arpl
adc
lcall
xchg
sub
lea
mov
sbb
sbb
sub
popa
aas
sub
inc
test
and
loop
mov
pop
xor
push
push
pop
push
push
cmp
or
sti
pop
add
pushf
xor
out
pop
aam
mov
and
outsb
outsl
sub
inc
jl
and
xchg
test
xchg
icebp
add
push
loope
dec
lods
aam
add
inc
adc
and
nop
jns
adc
mov
or
ret
popa
push
mov
mov
rorb
out
cmp
fs
add
sbb
bound
and
jbe
jo
aad
es
inc
inc
dec
ss
rclb
nop
sbb
dec
outsl
dec
mov
xchg
sub
das
fisubl
add
movsl
ret
push
outsb
jae
pop
and
sti
pop
jne
push
jb
jne,pn
daa
jp
bound
mov
mov
jg
aaa
lea
push
jmp
int3
int3
fbld
ret
ret
out
inc
cmp
fsubp
aaa
push
mov
xlat
lock
ficoml
add
mov
lock
rcl
and
cbtw
or
mov
add
decl
push
scas
mov
mov
fcomi
mov
nop
sub
inc
insb
push
and
jl
add
mov
add
sbb
insb
mov
cmp
imul
enter
ret
lea
cs
sub
mov
insb
lret
xor
xor
push
test
sub
jl
or
jo
mov
mov
push
scas
into
add
xchg
xor
and
or
xlat
cwtl
xorb
push
pop
push
inc
pop
repnz
lods
fdivrs
mov
scas
fstps
ljmp
add
mov
fidivrl
pop
cli
movsb
test
push
into
dec
dec
mov
addb
int
xchg
aam
jbe
push
call
mov
push
or
pop
cmp
data16
lret
movsbl
inc
add
mov
cs
pop
mov
pop
mov
pop
cmp
push
add
imul
or
outsb
cmpsl
add
in
movsl
xchg
mov
mov
test
adc
cmp
rcrl
call
cld
test
or
adc
lock
mov
nop
and
push
movb
push
in
repz
out
call
out
cmp
in
out
sti
out
aas
testl
jmp
or
add
push
sbb
push
push
xor
es
ss
add
and
xor
add
push
jmp
insb
add
call
jp
push
xchg
mov
out
test
mov
push
sub
nop
lock
add
jne
outsb
push
and
sbb
sbb
lea
into
add
mov
sub
mov
mov
andb
addb
pop
fbld
enter
dec
mov
lea
test
clc
mov
or
mov
add
mov
cmp
pop
sarl
aas
jb
inc
push
push
in
xor
dec
pop
pop
testb
mov
dec
rclb
add
cmc
pop
dec
imul
and
cwtl
ss
mov
clc
push
mov
sar
adc
sbb
mov
pop
jne
jge
add
pop
neg
cmc
jle
xor
popa
xchg
dec
xor
dec
add
inc
sbb
fcoms
pop
arpl
xchg
mulb
pop
ja
cmp
mov
mov
mov
testb
es
and
mov
inc
mov
dec
shlb
and
push
jl
fimull
ljmp
push
push
dec
jmp
add
incw
and
mov
add
imul
or
jne
pop
hlt
fnstcw
or
addl
xor
mov
xchg
pop
lea
xchg
lea
xchg
in
outsl
push
mov
shl
inc
or
mov
ret
adc
and
and
adc
xchg
jo
mov
jae
mov
std
mov
xor
inc
sarb
push
cmp
mov
inc
sbb
test
outsb
ljmp
mov
cmp
in
daa
testl
push
cmp
adc
add
lds
sub
scas
popa
cs
push
or
inc
shll
movsl
hlt
mov
dec
jnp
xor
or
call
dec
sub
sub
call
ret
adc
push
pusha
adc
mov
lret
subl
mov
in
cld
enter
scas
push
or
jg
cmp
jns
cwtl
or
rolb
and
stos
movsl
add
xchg
or
cmp
or
sub
and
add
jp
mov
pusha
faddl
andb
push
dec
ljmp
ss
fsubrl
aad
test
mov
and
cmp
and
fiadds
adc
insl
lcall
push
or
ret
pusha
test
push
push
jmp
cmp
movsb
loop
fisubrs
jae
push
shlb
fimuls
sbb
stos
mov
std
cs
add
in
sbb
jmp
xor
es
mov
cs
lcall
push
bound
mov
mov
pusha
fsts
clc
insl
push
arpl
mov
shll
les
or
inc
imul
mov
add
in
mov
bound
xor
cmp
pop
test
dec
hlt
or
imulb
xor
insl
or
aaa
cmc
jl
dec
int3
cs
or
sbb
loop
out
aam
jl
jnp
call
sbb
add
test
mov
sbb
or
xchg
cmp
mov
fisubs
adc
push
mov
scas
xor
mov
xchg
mov
aaa
out
and
cmp
es
pusha
sub
xor
sub
pop
adc
jle
xchg
lock
sbb
add
fimull
xor
je
imul
push
cmp
mov
push
pop
jmp
ss
sahf
imul
adc
cmpsb
adc
sub
fbstp
insl
call
or
inc
jmp
les
ss
cmp
or
pop
sbb
rol
and
les
ja
andb
mov
icebp
int3
fwait
cmpb
and
sbb
jno
movl
mov
jno
and
and
pop
outsb
aas
mov
xchg
jbe
inc
jle
mov
js
movsb
ret
xor
ja
cmp
jns
sub
cmp
jbe
stos
dec
inc
dec
loopne
into
mov
add
inc
push
insl
or
lock
sub
mov
or
push
int3
and
and
inc
push
dec
mov
roll
and
ret
loopne
jns
cli
jne
cmp
into
inc
sub
adc
jnp
mov
mov
pop
test
push
jae
gs
fisubrs
add
push
daa
mov
int3
ffree
push
aam
jmp
iret
pop
sub
jbe
add
inc
jne
movsb
jb
add
jmp
dec
dec
test
lret
pop
mov
gs
repz
adc
jl
inc
push
pop
pop
or
add
or
inc
mov
aam
addl
ja
xor
pusha
sti
inc
push
inc
and
std
and
sub
pop
or
sbb
and
mov
or
mov
rcrb
sbb
adc
test
pop
sbb
cmc
lahf
add
push
daa
jo
mov
cmp
pop
addl
dec
jp
cmp
out
faddl
addr16
cmp
mov
movsb
testl
std
push
cmpsb
gs
rol
mov
xor
or
mov
fs
jne
ret
mov
fildll
jno
add
orb
or
sub
sarl
sbb
ret
test
cmp
and
hlt
mov
gs
mov
xor
mov
loop
mov
movsbl
rcrb
xor
and
jecxz
mov
pushf
mov
scas
push
mov
enter
mov
hlt
mov
push
div
or
dec
mov
pop
test
dec
pusha
jnp
cmp
cli
mov
addr16
and
out
test
cmp
sub
mov
inc
ret
push
inc
mov
inc
and
cwtl
dec
std
sbb
mov
cli
dec
dec
or
xor
dec
mov
adc
cmp
push
test
inc
sub
push
mov
adc
xor
lods
out
sbb
lods
outsb
xor
sub
add
push
je
mov
adc
das
mov
das
inc
push
add
inc
cli
clc
push
add
and
iret
inc
les
mov
clc
sub
or
rolb
adc
inc
add
push
and
mov
add
mov
rcrl
inc
adc
ret
adc
mov
dec
cmpsb
int3
dec
sub
cmpsb
jnp
xchg
jne
es
xor
jmp
xchg
nop
mov
push
sub
in
cmpsb
push
mov
pop
leave
rcr
flds
inc
jmp
negb
xlat
mov
fucomi
inc
xchg
dec
xchg
int
and
mov
fisttps
sbb
bound
fldpi
mov
mov
add
jne
or
fdivrs
add
and
cmp
mov
sub
jl
xchg
adc
fstpt
movsbl
lea
fbld
mov
or
push
mov
int
xchg
sub
in
fnstcw
dec
stc
xchg
jbe
xorb
cltd
sub
or
jnp
jge
lea
push
sbb
xrelease
cmp
xor
push
int
rcll
sub
or
clc
int3
xlat
add
cwtl
loope
mov
mov
pop
and
xor
adc
dec
mov
adc
je
loop
xchg
dec
pop
mov
rcl
cli
hlt
add
or
inc
and
in
loop
mov
sbb
adc
mov
push
adc
ret
and
loop
push
xchg
ret
lock
push
sub
fmuls
out
adc
push
inc
dec
pop
jb
add
pop
dec
add
sbb
sbb
lret
sub
fdivl
jbe
inc
clc
mulb
int3
cmp
nop
jl
cmpl
jle
dec
sbb
mov
in
in
dec
sbb
or
scas
fidivrl
ljmp
xorl
gs
test
push
call
cmpsl
inc
mov
cmpsb
movntps
adc
lock
jne
push
sahf
xlat
push
push
dec
xchg
xchg
mov
test
leave
fadds
andb
push
add
xchg
add
ds
test
pop
add
jb
hlt
pop
mov
shlb
mov
mov
jp
and
mov
in
xor
add
movsb
xor
jbe
push
adc
dec
and
xor
jle
and
or
fs
icebp
lcall
les
stc
loop
cwtl
mov
jnp
sbb
push
sti
or
adc
sbb
dec
add
adc
or
negb
jnp
mov
jl
out
jmp
push
out
add
mov
and
push
mov
popa
mov
in
add
addb
or
and
dec
out
adc
shrb
cmp
mov
ss
out
jmp
lea
test
icebp
xlat
into
sbb
test
shl
adc
fmuls
push
mov
and
faddl
xchg
mov
adc
orb
xor
leave
and
shlb
sub
ror
mov
mov
xor
movsl
jo
aam
scas
ficoml
mov
adc
les
movl
testb
fsubrl
orb
sub
adc
xchg
outsb
or
movsb
sub
adc
mov
dec
sbb
jl
xor
cmp
adc
cmp
movsb
add
mov
and
je
xor
mov
arpl
test
es
and
jne
xchg
jbe
data16
aaa
push
jecxz
cld
push
add
je
lret
orb
pop
sub
xor
daa
inc
and
jmp
jmp
jle
jb
mov
inc
je
fiaddl
sbb
sbb
add
sbb
sahf
lock
mov
arpl
push
test
mov
test
ja
sub
test
jnp
enter
andl
push
clc
imul
movsl
mov
or
arpl
jne
insl
nop
or
add
sbb
out
mov
pusha
sbb
movsb
loop
or
xchg
xor
mov
xchg
pushf
movsb
sub
add
or
add
or
ret
into
es
fwait
mov
add
push
insb
adc
shl
repz
insb
xchg
mov
mov
outsb
data16
jle
fistpll
mov
cmp
add
ret
push
fnstsw
pop
movsb
inc
ds
mov
pop
pop
mov
mov
mov
xchg
test
pop
mov
jo
js
je
sub
add
loopne
push
sbb
jmp
dec
fadds
mov
push
or
add
out
inc
daa
subl
or
mov
call
sub
dec
xor
and
test
cmp
into
push
xor
inc
cmpsl
call
cltd
lds
ret
fldenv
aas
dec
aas
pop
cmp
xor
fcoms
and
push
push
mov
xchg
adc
lcall
inc
or
xor
sub
mov
xchg
ret
imul
sub
pusha
clc
xor
sub
addl
jmp
xchg
inc
mov
jnp
sub
add
adc
push
xor
sub
xchg
inc
mov
fnstenv
sub
add
cs
adc
xchg
das
dec
push
sbb
adc
push
xorl
mov
adc
push
loopne
jecxz
ficomps
pop
ss
mov
pusha
xor
lock
xchg
and
or
ds
mov
cmpb
negb
push
mov
pop
rorb
jns
pop
sub
cmp
mov
add
add
or
inc
pop
mov
push
lock
pop
subb
or
inc
ret
test
mov
loopne
pusha
adc
or
rcrl
addr16
mov
adc
je
subb
mov
psrad
push
push
imul
stos
mov
je
push
jae
inc
outsb
sarb
sbb
and
jl
push
ds
xchg
pop
mov
push
test
lock
jo
jb
sbb
add
in
rclb
scas
jp
mov
dec
sbb
inc
js
xchg
clc
xchg
mov
pushf
mov
mov
in
out
pusha
mov
lcall
jb
inc
mov
in
jl
call
jbe
add
dec
xchg
lods
pop
add
add
push
ja
push
cmpl
jp
xchg
add
jmp
or
push
iret
in
pop
cmc
lcall
xchg
xchg
ror
dec
sbb
sbb
mov
sbb
sarb
pop
loopne
loopne
dec
jecxz
testb
loopne
jae
and
jmp
jmp
mov
ljmp
cmp
dec
shlb
jb
inc
leave
inc
jae
mov
sbb
jge
inc
aaa
mov
jmp
pop
xor
js
xor
sbb
cwtl
ljmp
add
outsl
ja
mov
std
test
lods
js
js
jnp
imul
inc
adc
in
test
xchg
enter
ret
rorl
adc
pop
loope
dec
arpl
pop
insl
push
aad
pop
or
cmp
xorb
cmp
mov
adc
out
je
cmp
movsl
sub
cmp
cmpsl
sahf
js
flds
imul
sub
in
sbb
sbb
rorb
mov
popa
push
and
adc
pop
js
and
sub
pop
jmp
lea
pop
and
dec
pop
inc
std
mov
adc
add
add
ret
movsb
in
and
mulps
lods
jo
or
popf
mov
pusha
xor
adc
mov
and
push
clc
or
jbe
jmp
pop
lret
in
je
andb
sbb
insb
inc
xorl
jo
cmp
pop
in
insl
loope
dec
jo
push
das
mov
outsl
and
xor
stos
fdivl
dec
mov
mov
je
adcl
mov
fsubrl
stos
cmp
enter
xlat
pop
sub
pusha
ret
std
popf
add
add
sarb
dec
sbb
add
call
data16
mov
add
push
dec
leave
and
mov
lret
mov
and
sbb
dec
push
sub
add
mov
movsl
jnp
and
push
push
or
or
push
inc
xor
sarl
xor
popf
shlb
pop
gs
clc
test
dec
inc
and
imul
clc
push
and
jmp
leave
adc
xor
sahf
xor
jne
lret
push
mov
sub
scas
mov
nop
cmp
jo
sbb
xor
mov
scas
data16
dec
push
push
shlb
pop
jnp
jo
imul
cli
ss
das
fildll
repnz
lock
je
enter
and
sub
fnstenv
adc
scas
sarb
fwait
bound
or
mov
mov
mov
pop
fadd
push
sbb
mov
test
push
bound
push
cmc
xchg
push
adc
cmp
xor
mov
js
hlt
adc
add
adcb
scas
mov
imul
aad
je
rorb
icebp
jne
sahf
sub
in
ret
ss
jp
mov
push
popf
rol
xchg
xchg
andl
pop
dec
les
movb
cwtl
scas
rcrl
aam
push
sbb
push
fadd
inc
das
stos
mov
dec
mov
jge
push
lock
pop
cwtl
dec
sbb
in
and
pop
ja
out
enter
pop
scas
add
sahf
aas
add
imul
lahf
push
add
inc
jecxz
xor
lock
xor
fidivs
add
ret
adc
push
jno
add
push
inc
stos
xor
mov
mov
imul
sbb
pusha
fdivr
or
stc
or
mov
inc
outsl
inc
int3
jmp
insb
cmc
pop
cmpsb
testb
test
ss
hlt
dec
cmp
loope
push
dec
sub
dec
or
push
push
es
dec
mov
std
pop
rclb
ffreep
pop
daa
xchg
mov
mov
test
in
push
mov
add
pusha
mov
aam
repnz
mov
cmpsb
mov
sub
lods
xchg
ret
or
in
mov
rol
and
cld
repz
push
push
mov
push
in
int
adc
sub
xor
inc
inc
frstor
fcomp
sti
lret
sbb
dec
or
jge
or
jo
add
sub
dec
shrl
mov
cmpsl
loope
or
test
and
xchg
push
ja
in
subl
xchg
inc
xchg
clc
add
andl
pop
pop
push
js
xorl
mov
adc
push
lcall
enter
clc
dec
or
sbb
adc
cmp
es
mov
mov
jl
data16
add
mov
movswl
andb
call
lret
mov
clc
fcomps
mov
adc
popf
shll
lods
and
push
mov
or
push
or
das
cmp
or
jbe
insb
pop
repz
lcall
add
inc
push
and
push
push
mov
or
negl
push
sbb
imul
sbb
je
imul
pop
add
sti
add
test
jne
cmc
add
inc
and
aam
push
outsl
jo
adc
xlat
mov
adc
mov
push
or
or
pop
pop
mov
add
dec
inc
lea
out
cmp
mov
adc
adcl
xor
jo
jbe
or
xlat
xor
inc
arpl
stos
jo
std
pop
movsb
mov
test
or
flds
push
stos
push
or
add
jl
xor
fcmovnu
lods
xor
cltd
dec
cmp
gs
sub
xchg
inc
or
je
pop
pop
arpl
pusha
cmp
sahf
cli
dec
cmc
cmp
shlb
loop
xor
aam
adc
lcall
in
stos
xor
sub
in
enter
xor
mov
push
lock
fnstsw
dec
push
dec
inc
and
scas
adc
jo
add
aaa
sub
jbe
int3
pop
add
lds
scas
out
pop
inc
sahf
cwtl
lock
jmp
dec
adc
and
inc
in
rclb
orb
xor
clc
dec
int3
push
push
add
ror
fwait
sub
rorb
pop
je
ja
jae
adc
mov
push
shrb
daa
sbb
mov
roll
cld
mov
sbb
addl
scas
add
jl
add
negb
hlt
jne
mov
aas
or
or
cmp
adc
dec
ja
adc
dec
dec
ja
mov
sub
enter
lret
jbe
aam
push
push
repnz
ret
inc
popf
xor
loope
mov
push
mov
dec
push
mov
mov
in
dec
icebp
fs
stc
xor
ljmp
jp
sub
inc
cmp
dec
ljmp
pop
adc
in
jno
ljmp
outsb
lods
mov
sbbb
push
cmp
pop
loopne
push
add
lcall
popa
add
std
adc
ljmp
or
push
mov
cmp
ss
xchg
sysenter
lea
or
into
inc
adc
rcll
push
dec
adc
sbb
or
add
jmp
arpl
adc
cmp
shlb
adc
stos
jnp
cmp
sahf
mov
xchg
repnz
xor
adc
xor
push
sub
sub
fmuls
in
sahf
fdivs
or
bound
jge
jle
jne
mov
xorb
sbb
inc
divb
add
es
icebp
or
jp
push
dec
mov
stos
xor
jge
jb
mov
adc
stos
mov
insb
cmpsb
or
sbb
sbb
fdivl
jmp
lret
insl
sub
xor
nop
push
adc
shll
adc
sbb
aad
lods
push
or
lods
popa
add
sub
mov
lret
je
add
fildll
inc
stc
cmp
fisttpl
sbb
je
push
add
adc
lahf
cmpsb
rolb
inc
or
xlat
fisubrs
pop
fs
mov
je
cmp
add
cmp
mov
adc
mull
add
das
std
rclb
mov
xchg
daa
andl
sbb
gs
fs
adc
mov
pop
stos
pop
add
adc
sub
fnstsw
push
pop
divb
in
cltd
jecxz
cld
inc
pop
push
jne
push
sbb
outsb
push
in
or
sahf
movsl
nop
adc
sub
mov
lcall
add
xchg
xchg
scas
testl
inc
nop
mov
imulb
mov
ficoms
add
cli
xchg
adc
lods
out
jno
push
fcomps
fldl
jnp
or
sahf
add
sub
xchg
loopne
add
enter
lock
shll
rcrl
mov
pop
or
dec
int
out
inc
sbb
in
and
push
inc
ljmp
cwtl
testb
sbb
testl
test
adcb
jmp
aas
adc
lock
xchg
adc
test
add
call
push
in
jae
testb
outsb
pop
xchg
lods
adc
bound
adc
repnz
lods
mov
adc
mov
jbe
add
add
jl
insl
xlat
fildll
lea
mov
mov
insl
inc
je
or
push
and
cmpb
add
mov
rcll
repz
xor
dec
xchg
adc
xchg
aad
xor
inc
sbb
sbb
jmp
and
adc
decb
cmpsb
shrb
adc
add
push
sub
cwtl
ja
jge
xchg
rol
jne
jle
add
je
imul
dec
push
dec
movsl
jmp
cmp
xor
add
mov
push
lcall
test
push
push
push
aad
ret
adc
jp
adc
push
cmpsl
rolb
sub
sbb
jae
or
or
test
add
aam
or
or
mov
mov
mov
imul
mov
pop
adc
jg
or
scas
and
mov
les
mov
adc
scas
mov
mov
fs
mov
cmpsl
cmp
jnp
push
mov
mov
shl
cmp
outsb
mov
fisttpll
xchg
pop
adc
or
or
xchg
cld
jno
mov
xchg
add
fxch
inc
add
push
movups
or
jle
iret
sbb
push
lcall
ja
add
adc
adc
daa
mov
sbb
pop
push
sbb
xor
push
add
cmpsb
in
jb
or
fs
div
or
dec
pop
and
ja
add
add
mov
xchg
jbe
push
imul
mov
push
mov
and
insl
or
sti
xor
in
inc
pop
fsubr
xor
dec
cs
push
push
inc
jmp
inc
sub
jge
dec
mov
leave
jmp
dec
cld
outsb
jmp
mov
mov
sti
sarb
or
rcll
fistpl
jmp
dec
pushf
sbb
ss
xchg
mov
jne
pop
xchg
or
and
push
push
sub
xchg
negb
inc
mov
or
xlat
sbb
push
sub
in
repnz
push
nop
rcll
jle
flds
fldl
or
imul
or
mov
inc
orb
pop
adc
mov
subl
mov
cs
jne
xor
pop
gs
arpl
andb
push
sarl
or
adc
pop
dec
stos
lret
jne
popl
arpl
fsts
xchg
dec
rcr
insb
cmp
push
fsubl
cmp
sub
dec
push
push
jp
or
push
jmp
jle
test
push
frstor
stos
rcll
mov
loopne
insl
pop
push
les
adc
and
adc
scas
push
pop
rorl
or
orb
xchg
lods
adc
movb
push
push
and
rol
f2xm1
adcl
and
movsl
mov
or
jge
lea
sbb
ret
add
pop
nop
mov
pop
xchg
imul
je
mov
jl
dec
sub
and
stc
mov
mov
and
mov
es
cmp
enter
sbb
mov
loopne
movsl
jo
leave
mov
js
inc
or
movsb
add
xchg
pop
mov
or
mov
insl
xor
movsl
jmp
cwtl
pop
mov
jmp
inc
xor
popw
ss
jno
adc
cmc
mov
add
xchg
or
imul
add
mov
insl
pop
sbb
pop
sbb
xlat
and
lock
jo
add
dec
sbb
and
push
jns
and
jle
sbb
xlat
and
lea
test
pop
andb
dec
iret
and
and
mov
jmp
push
test
ljmp
push
loope
jno
loop
subl
sbb
fwait
sbb
imul
ret
jecxz
pop
mov
or
jbe
repz
nop
pop
enter
mov
add
add
or
lds
and
bound
inc
jg
loop
sub
and
push
inc
adc
shl
jmp
mov
adc
sbb
sub
inc
leave
lea
test
mov
push
jno
add
pop
in
mov
sbb
xor
cwtl
xlat
adc
pop
jb
fnsave
jne
add
mov
clc
cmp
ss
dec
sbb
mov
out
sbb
lods
lahf
loop
sub
imulb
add
aas
xchg
in
pop
adc
adc
jns
lock
outsl
sub
xchg
add
js
jno
sbb
jge
pop
push
pop
push
or
test
mov
roll
loopne
and
cmp
xchg
pop
shl
add
fistpl
jnp
icebp
adc
push
jo
aas
or
add
iret
push
push
sub
mov
out
and
adc
sti
add
dec
push
adc
dec
adc
and
popa
or
add
fadds
xchg
sbb
add
dec
dec
rclb
add
or
ret
leave
push
xchg
add
xchg
test
ss
incl
push
ficoml
dec
xor
and
pushf
es
add
rcrl
gs
lea
popl
out
mov
cwtl
mov
jo
push
add
add
pop
outsb
bound
popa
mov
fmuls
jmp
sbb
push
dec
or
adc
dec
ret
popf
fs
xor
pop
adc
es
lcall
fisttpll
mov
lock
or
jp
or
into
jne
je
je
inc
push
xlat
or
or
jb
dec
mov
aaa
mov
or
pop
shlb
add
or
add
jne
pop
lds
clc
inc
inc
or
je
or
adcb
clc
ja
cmc
or
or
roll
add
push
out
xchg
test
pop
in
add
xchg
mov
add
push
adc
xchg
add
cmp
pop
push
jae
add
mov
jle
inc
ret
cmp
add
xchg
pop
divl
mov
xchg
xlat
dec
orl
daa
popa
add
mov
mov
push
repz
cmp
or
js
xor
jae
xchg
insl
add
ds
jp
cli
pop
mov
and
leave
jno
pop
or
lods
addr16
mov
inc
mov
call
cltd
mov
cs
or
stos
popl
aas
mov
hlt
lret
sbb
adc
mov
and
adc
xor
add
xchg
test
cmp
aad
push
or
jb
cmpsb
xor
or
sahf
mov
js
outsb
jbe
mov
and
inc
dec
dec
mov
fs
into
lock
clc
push
mov
mov
inc
add
fisttpl
adc
mov
cmp
inc
rcrl
mov
bound
jbe
mov
sbb
les
cmp
jbe
addb
mov
outsl
add
add
push
call
cwtl
add
aas
out
mov
jmp
inc
cmp
pop
test
mov
or
pop
sbbb
nop
add
adc
pusha
sbb
jbe
add
stc
add
push
lock
test
or
jo
mov
cmpb
xchg
popa
test
test
shlb
add
xchg
enter
inc
jmp
idivb
cmpsb
je
add
add
bound
add
jo
mov
dec
push
cmp
ja
or
inc
shrl
jnp
push
jno
pushf
mov
dec
sbb
cmpsb
dec
cmp
iret
pushl
or
loope
jae
dec
mov
jge
lods
adc
inc
mov
jmp
push
adc
lods
xor
mov
sub
clc
jno
mov
inc
xchg
mov
xorl
pop
dec
loope
loop
outsl
lods
add
ret
test
ja
mov
add
inc
test
adc
popf
jmp
push
rol
filds
pushl
icebp
mov
xlat
jmp
push
mov
xor
cmc
cmpsb
ret
push
mov
jae
push
pop
jns
push
xor
cwtl
iret
cmpsl
xor
cmp
add
jb
and
jo
dec
repnz
sub
mov
in
adc
sub
int
jmp
push
jp
jmp
xor
test
cmpsl
testb
and
xchg
js,pt
pop
inc
jmp
imul
test
add
mov
push
or
faddl
and
lea
push
sahf
inc
add
inc
lods
ret
jge
mov
cltd
ret
cmp
pop
stc
mov
iret
fdivrl
inc
dec
jne
pop
movsl
mov
xor
sub
adc
jmp
arpl
adc
add
cli
call
adc
ret
pop
push
mov
aaa
ret
add
stos
ljmp
xchg
insl
pop
ret
mov
pop
push
lcall
add
pop
aad
and
nop
insb
xor
push
and
add
shl
mov
cmp
xor
mov
insl
iret
xchg
inc
cs
mov
adc
lcall
mov
sbb
aaa
out
push
hlt
cmp
shlb
pushf
or
popa
subb
clc
and
movsl
adc
test
mov
test
das
mov
mov
call
jo
mov
mov
addl
xor
fsts
pop
cwtl
xchg
xor
icebp
sbb
jp
mov
popa
mov
push
and
test
dec
pop
arpl
or
dec
adc
loope
rcll
in
add
data16
movsl
jmp
add
and
pop
data16
add
imul
mov
and
enter
adc
leave
popa
push
adc
fisttps
xor
add
inc
and
mov
mov
adc
sbb
or
icebp
xor
push
cmc
js
mov
cmp
or
cmp
rorb
pop
jg
aas
cmp
ljmp
push
adcb
jne
push
insb
mov
cmp
dec
mov
inc
or
notb
or
out
jbe
cs
or
fildll
iret
cs
sub
test
jg
cs
sub
cmp
jg
enter
add
popf
xor
inc
adc
pop
sbb
push
dec
lock
fdivr
cs
xchg
test
daa
cmp
js
repz
aaa
jo
rcrl
mov
push
shll
xlat
sbbb
xor
shll
pop
sub
iret
es
push
xlat
and
dec
add
xchg
push
push
test
adc
or
in
js
xchg
mov
xor
rcr
push
mov
or
insb
push
mulb
pop
or
popa
orb
sbb
popa
pop
inc
dec
jge
movzbl
push
inc
or
sbb
add
xchg
fidivs
mov
xchg
lret
push
xor
rorl
rcrl
repnz
xchg
and
pop
aas
mov
pop
xor
inc
mov
add
pushw
or
loope
rolb
fldt
sub
mov
or
popa
and
rclb
xor
xchg
cld
adc
enter
cld
add
add
cld
lea
add
sbb
inc
or
adc
inc
inc
repz
cmp
ret
dec
leave
xor
xor
adc
and
sub
mov
jo
lock
daa
dec
jno
movsb
lea
add
or
je
cmp
jmp
gs
call
repnz
xchg
imul
add
sbb
call
push
incl
xchg
mov
loop
adc
pop
add
add
add
sbb
push
lock
sbb
push
cmp
adc
subb
repz
mov
add
addr16
cmp
xor
or
mov
and
mov
push
add
out
pop
punpckhdq
lea
scas
sub
bnd
shlb
and
sbb
ficoml
ss
jge
cli
daa
pop
xor
out
add
mov
jne
mov
fucomp
or
inc
jmp
addb
inc
daa
add
jo
xchg
xor
clc
lock
mov
xor
or
jmp
or
fxsave
adc
inc
mov
ljmp
or
adc
xor
call
out
inc
inc
les
rcrb
nop
dec
cli
rcll
xor
mov
lock
aaa
aam
stos
mov
and
sbb
pop
inc
or
inc
xor
dec
adcb
or
mov
mov
push
push
dec
pop
inc
push
movsb
mov
or
outsb
test
jne
jno
add
jbe
movhps
ds
add
or
dec
inc
and
push
sarb
lret
dec
or
xor
bound
leave
push
mov
movsl
mov
sub
push
sub
or
pop
cmp
lock
lock
push
xchg
cmp
movb
out
mov
or
or
xorb
mov
mov
sbb
push
adc
push
pop
jmp
dec
fsubs
adc
push
cmpsl
xor
mov
out
pop
pop
daa
or
into
mov
jp
aad
mov
adc
cmpsl
sub
fs
xor
jne
push
outsl
nop
sbb
adc
mov
xchg
mov
push
pop
dec
cmp
adc
add
sti
imul
je
divb
add
clc
sahf
push
cmc
cmp
jne
add
roll
push
cltd
adc
pop
mov
jo
dec
cmp
aam
push
test
xor
inc
sbbl
pop
loopne
jb
sahf
jns
push
inc
ret
pop
adc
inc
push
das
jo
daa
mov
dec
and
lret
int3
pop
push
inc
xchg
das
mov
je
adc
popf
jnp
mov
mov
jmp
and
inc
adc
inc
arpl
dec
movsl
push
or
out
pop
pop
inc
std
push
jns
or
xor
mov
outsb
pop
fmuls
mov
push
jmp
or
shlb
inc
lret
adc
and
lret
cmp
dec
cmpl
mov
test
xor
fisttpll
pop
jge
dec
add
cmc
orl
jne
pusha
sbb
and
add
pop
cs
movsl
or
sbb
adc
xor
jno
pop
jns
pop
js
scas
dec
ret
jae
imul
lods
test
jnp
insl
js
add
sbb
inc
ret
or
mov
dec
xchg
aaa
or
inc
iret
cmpsb
in
stc
and
xor
jbe
add
adc
xchg
lock
test
leave
subb
pop
js
xor
orl
push
dec
push
sub
pop
push
or
dec
fmuls
pop
and
adc
loopne
jnp
bnd
add
ss
xor
pusha
mov
shll
inc
inc
mov
shl
aam
bound
sbb
rclb
mov
xor
sbb
lcall
jp
mov
adc
xor
inc
mov
xchg
push
cmpsb
mov
or
or
push
mov
adc
mov
or
push
pop
out
mov
ror
test
pop
push
je
stos
jecxz
out
loopne
movups
xchg
adc
fisttpl
xchg
cld
into
insl
mov
xchg
push
push
xor
pop
dec
fldcw
cli
inc
sub
rcrb
es
inc
push
fisubrl
and
dec
cltd
leave
inc
mov
cmpsl
std
or
fstps
dec
add
xor
push
jl
sbb
add
jne
test
sub
push
and
lods
call
push
push
lock
cmp
dec
ret
cmp
add
mov
aam
in
dec
xchg
pop
addl
add
out
sbb
adc
jne
call
inc
popa
jmp
ret
mov
or
inc
adc
inc
and
call
shl
jae
shl
or
stc
adc
call
pop
les
pop
pop
and
push
dec
in
out
xchg
sub
pop
xor
add
shlb
mov
fcomps
lods
adc
ljmp
cmp
or
sub
cmpsl
sbb
lock
mov
inc
mov
jnp
cmpsb
push
movsb
daa
sbb
outsl
fmuls
into
andl
rcrl
loope
addl
inc
jecxz
sbb
push
jle
es
hlt
push
or
pop
test
or
push
sbb
push
mov
push
test
or
pop
or
adc
and
pop
mov
inc
inc
lea
out
arpl
push
int3
popa
inc
les
ficoms
push
sbb
ja
addb
mov
pushf
call
pop
je
in
push
mov
pop
cmc
inc
or
xchg
push
ljmp
lahf
cmp
out
nop
mov
or
dec
cmp
inc
sub
test
in
add
in
cmp
sbbb
jno
jg
je
adc
cmp
jne
xor
lahf
push
sub
movl
scas
sub
push
je
jnp
jecxz
push
in
insl
and
mov
test
push
sarb
xchg
sarb
and
lods
sbb
sub
and
dec
jge
mov
adc
xor
push
dec
add
addb
inc
inc
push
movsb
add
push
dec
and
or
fs
stc
out
xor
sbb
or
and
dec
fwait
push
imul
push
cmp
add
xchg
xchg
cmp
cmp
out
add
mov
in
fcoms
int
mov
inc
cmp
popl
test
xor
dec
sub
aaa
xchg
mov
xor
shlb
adc
cmp
and
sbb
dec
jecxz
push
imul
scas
or
mov
call
push
add
scas
mov
mov
pop
je
and
aaa
cmpw
pop
sub
adc
jbe
jmp
adc
lods
or
test
push
push
jecxz
loopne
adcb
add
adc
fs
sub
mov
lret
fnstcw
cmp
mov
push
imul
pusha
loopne
adc
cmp
xchg
aam
popa
adc
add
jl
and
fwait
mov
aaa
xchg
add
orb
stc
dec
pusha
jnp
mov
mov
add
dec
mov
push
cmpsb
jnp
or
test
xchg
iret
imul
xchg
ss
mov
or
dec
jnp
sub
cmpb
inc
push
aaa
mov
dec
xor
inc
push
rcl
inc
pop
jl
sarb
fistpl
pop
inc
or
push
dec
xlat
cmp
adc
and
or
imul
movsl
or
push
leave
out
adc
adc
push
push
add
add
add
pop
push
bound
cwtl
adc
xor
sub
mov
int3
mov
sbb
add
dec
cmpb
testb
inc
loopne
adc
out
jecxz
pop
popf
push
jne
push
std
movsl
add
dec
lock
jg
pusha
sbb
push
jns
out
pop
lret
and
nop
push
pop
jno
subb
pushf
sti
mov
aas
cmpsl
jle
jnp
dec
out
jne
sbb
xor
fmuls
mov
push
ss
test
cmp
sbb
jne
sbb
movsl
enter
add
loope
or
lods
gs
sub
pop
or
jne
iret
ret
movb
aam
imul
fdivrs
inc
mov
and
xor
test
and
jl
dec
cltd
loopne
push
sarl
or
rol
or
jecxz
inc
xor
int3
outsb
nop
aaa
subl
xchg
rolb
adc
in
adc
sahf
jae
adc
push
js
dec
mov
outsl
fsubrp
xchg
mov
mov
test
inc
loopne
xchg
dec
xchg
dec
iret
shl
push
pause
ss
clc
fsub
push
inc
inc
push
push
insl
jmp
push
push
mov
frndint
in
loopne
mov
xchg
xor
loope
push
insb
pop
popa
mov
or
jl
pushf
movsb
dec
fidivs
fs
jnp
mov
sbb
push
inc
sbb
mov
cmpsb
enter
aam
inc
in
aad
or
add
insb
push
sub
fildll
inc
inc
xorb
cmp
dec
push
inc
imul
xchg
rol
clc
and
push
and
bound
sub
movsb
inc
add
clc
dec
mov
adc
mov
mov
cmpsl
cli
test
mov
pop
inc
out
rolb
xor
shlb
out
xchg
xor
iret
sbb
movsb
arpl
jle
test
or
shll
pop
xchg
imul
out
cmp
int
push
ficompl
popf
xchg
mov
icebp
inc
dec
mov
cld
cmp
in
popl
sbb
pop
xchg
call
pop
rcrb
shr
movsl
pusha
mov
rcr
out
andl
sub
jp
cmp
push
cld
rclb
or
jns
xor
movsb
andb
dec
insl
add
pop
push
push
call
sub
xchg
and
xchg
jp
xchg
and
dec
jmp
sti
inc
dec
sbb
sbb
push
push
loopne
jmp
cli
inc
push
test
dec
in
dec
rcrl
mov
jp
cmp
sub
xchg
push
mov
imul
icebp
push
shlb
xor
cld
loopne
xchg
sbb
mov
dec
cli
mov
movsb
cwtl
lock
xchg
test
je
push
sbb
pushf
xchg
aas
imul
sbb
xchg
loop
push
xchg
insl
push
aam
mov
in
cmp
nop
jmp
daa
lea
test
in
cmpsb
mov
jg
popl
mov
sub
lock
adc
lock
jo
cmp
cmc
arpl
repz
adc
sub
testb
rclb
cmp
imul
xchg
mov
adc
in
pusha
stos
xchg
add
push
and
add
mov
ljmp
insb
sub
push
pushf
aad
sbb
popa
sbb
adc
movmskps
add
xchg
orl
outsb
cmp
cmpl
imul
dec
repz
or
sahf
add
or
xor
jg
push
sbb
add
dec
pop
lock
pop
add
pop
inc
fsub
inc
push
inc
imul
push
add
adc
add
mov
jmp
xor
jne
or
sbb
mov
rcl
push
lea
test
add
mov
cmp
stos
jle
out
sub
js
and
scas
sbb
cmp
mov
pop
ljmp
add
xchg
rorl
loope
je
and
addl
push
mov
leave
nop
dec
mov
sbb
mov
dec
jle
jne
inc
pop
push
fadds
and
xchg
orl
mov
adc
xchg
enter
daa
cmpb
pusha
add
xor
pop
lods
loope
pop
push
and
rsqrtps
stos
xor
cmp
hlt
inc
shlb
ljmp
fdivs
lcall
insb
jecxz
xor
dec
repnz
repnz
push
cmp
movsl
rolb
adc
pop
mov
add
adc
clc
mov
pop
xor
adc
lret
sub
add
loopne
mov
cmc
mov
mov
add
xchg
rcll
push
jbe
and
sub
sbb
adc
cli
test
test
and
cli
ret
addb
push
or
mov
add
lcall
dec
test
hlt
xor
lea
ds
sbb
test
xchg
pop
arpl
jmp
cwtl
xchg
xchg
sub
and
jne
and
test
adc
ss
add
pusha
add
loop
xor
cmc
clc
int3
je
cmp
jne
mov
cmp
jne
adc
jbe
adc
mov
push
in
pop
sbb
and
mov
orb
lret
lret
push
shrb
call
dec
or
in
test
xor
cmp
nop
dec
cmp
and
imul
adc
stc
cld
push
push
lods
in
loopne
fsubrs
ss
and
aas
pop
cmpb
jns
xor
pusha
pop
jmp
or
arpl
mov
cltd
push
or
sbbl
shlb
add
adc
jne
int
jne
ret
sub
jne
xor
push
sub
shlb
lea
jno
sbb
push
lea
mov
and
push
scas
les
pop
lret
test
iret
lock
sub
mov
add
mov
lds
inc
sbb
fsubl
mov
sub
fcmovnu
add
push
arpl
insb
mov
adc
adc
inc
sub
and
xchg
sbbb
jb
test
add
cli
inc
loopne
je
or
jne
lcall
rcl
add
mov
loopne
in
cmp
mov
cld
fmull
mov
das
movsb
or
je
jo
xchg
push
inc
dec
sub
xor
jo
xchg
jo
orb
or
mov
test
adc
das
scas
inc
bound
xchg
push
sbb
divb
int3
or
or
outsb
popf
cmp
nop
dec
or
sub
rclb
or
movsb
pop
jecxz
xchg
adc
lret
xor
xchg
aad
mov
out
jo
inc
dec
add
test
and
push
test
rcr
pusha
mull
push
lahf
cmp
add
adc
push
subl
sbb
es
mov
adc
add
into
adc
or
push
movl
shll
lds
dec
push
cmpsb
test
or
insb
arpl
sbb
pop
mov
mov
pop
mov
aam
insl
fidivs
jno
pop
inc
adc
inc
sbb
push
pop
hlt
adc
inc
mov
adc
mov
lods
mov
inc
aaa
fldt
inc
or
add
sbb
rorl
xchg
lock
push
push
mov
push
dec
add
pop
xchg
sub
stos
or
xor
add
out
sub
pop
ljmp
enter
jge
pop
sbb
adc
adc
and
mov
xchg
cs
push
and
rolb
cmp
orb
xor
stos
or
mov
andb
adc
test
adc
and
cmp
lock
hlt
lock
sbb
dec
fisttps
push
dec
lds
scas
in
sub
sub
sbb
movsb
push
push
xchg
xor
mov
jne
adc
xchg
enter
adc
mov
push
dec
aaa
jns
pop
sub
outsb
inc
jns
pop
mov
push
js
jo
cwtl
popa
cs
push
scas
inc
add
xor
cmp
sub
jmp
add
mov
lock
push
push
push
shll
add
or
inc
inc
inc
jp
ret
mov
adc
mov
sub
or
sbb
mov
ret
sbb
push
add
negb
outsl
lds
mov
adc
ja
cs
xor
pop
cmpb
mov
inc
sbb
xor
mov
pop
movsl
nop
and
push
pop
push
sub
dec
lcall
jl
or
nop
cmp
jge
outsb
cwtl
imul
nop
dec
les
dec
loop
adc
popa
mov
enter
xchg
fistl
xor
cmp
or
xor
dec
pop
push
mov
xorb
sub
ret
sub
mov
xchg
mov
pop
jae
or
adc
test
or
ja
enter
pop
xor
cli
pop
adc
pusha
add
cmp
rclb
jo
jo
sub
inc
mov
cmp
push
push
jge
mov
stos
ds
gs
jbe
test
and
mov
je
cwtl
mov
inc
cmp
jae
imul
or
xor
adc
cmp
pop
sub
or
or
adc
or
dec
jo
mov
push
jne
lret
xchg
stos
bswap
aam
mov
test
add
mov
inc
add
ds
pop
add
jns
sbb
filds
add
fsubrl
imul
mov
shrb
and
dec
stos
out
push
jl
add
paddsw
das
or
adcl
test
push
fsubrp
dec
sub
jne
or
lock
xchg
xchg
dec
outsl
shl
or
rol
daa
sbb
fidivs
lock
mov
and
loop
daa
pop
sbb
push
data16
or
cmp
mov
in
sti
pop
loopne
cs
push
mov
sub
mov
push
jg
push
addr16
jo
fildll
in
sbb
cmpsl
mov
movsl
push
mov
jbe
mov
cmp
push
inc
push
aaa
imul
mov
sbb
test
mov
push
and
ret
popa
out
sahf
nop
int3
push
add
dec
mov
lret
sbb
jmp
rcll
xchg
xor
cmpl
into
sbb
aas
mov
xor
mov
pop
or
es
jns
dec
add
maxps
ss
sbb
dec
mov
jo
stc
in
ja
jmp
js
fbstp
or
stc
adc
cmpsl
aam
push
dec
mov
xor
adc
sub
dec
mov
jl
adc
jmp
mov
mov
loope
sbb
insl
lret
and
mov
mov
out
lods
outsl
push
ja
adc
sti
pop
mov
imul
outsb
jnp
out
push
cwtl
push
mov
cmp
fisubs
in
testb
in
sahf
out
and
inc
dec
pop
fwait
mov
mov
xchg
out
sbb
and
dec
mov
out
lcall
and
jg
leave
or
pop
and
push
sub
adcb
xchg
daa
aad
andl
sub
sub
loopne
jo
jb
jl
push
out
callw
outsl
add
or
jo
add
or
ds
or
fs
sub
imul
lret
test
inc
sbb
or
fldcw
int
cmpsb
call
pop
or
push
loope
aam
jns
cwtl
inc
or
sbb
push
iret
or
inc
add
lods
and
mov
mov
mov
cmp
sub
ret
push
or
jbe
pop
fwait
add
and
add
and
and
testl
adc
add
in
rolb
adc
insb
test
and
dec
xor
and
dec
jmp
sub
fidivrs
fistpl
add
cli
sbb
movsb
push
xor
repnz
fmuls
xchg
jns
jno
std
jecxz
dec
mov
ret
test
int
adc
test
xorb
movsb
test
js
mov
adc
and
push
addr16
dec
adc
sarl
push
jne
popf
inc
mov
add
mov
or
daa
and
or
adc
ret
popf
or
fstpl
sti
rcll
sbb
jno
jmp
outsl
or
jmp
add
mov
push
or
cli
xchg
sub
imul
icebp
or
add
sbb
push
push
gs
dec
pop
xchg
jne
push
dec
subb
mov
dec
pop
jno
arpl
push
cmp
sbb
sarl
in
or
mov
mov
push
dec
xor
fimull
or
jge
movsb
xor
cmpsb
jns
mov
cltd
mov
xchg
cli
lahf
cmp
out
mov
je
pusha
push
into
jmp
mov
test
mov
dec
pop
pusha
mov
mov
or
xor
fs
xchg
dec
icebp
adc
add
aad
shlb
adcb
sbb
mov
mov
das
movsl
pop
test
cmp
adc
ret
mov
sub
jmp
rorl
dec
push
orl
cmp
or
mov
mov
insb
mov
idivb
push
push
mov
movsb
lret
jb
mov
insb
push
and
mov
push
insl
and
js
sbb
mov
lods
xchg
mov
lods
dec
dec
popa
mov
sbb
in
sbb
pop
or
add
jbe
cmp
mov
cwtl
orl
sub
cmp
push
jb
clc
push
push
xchg
ja
std
lar
cmp
sub
rorb
pop
xchg
shrb
add
cmp
jb
jno
cmp
fmull
or
jge
mov
mov
sbb
adc
pop
jl
fmuls
rsqrtps
ja
push
push
sbb
mov
push
xor
mov
jge
enter
pop
je
xor
cmp
sbb
cmp
jp
add
loopne
adcl
andl
andl
xchg
jge
cmc
nop
mov
push
and
outsb
fdivrs
cmpl
inc
sti
je
cmp
push
add
or
or
lds
adc
leave
sbb
jb
ret
push
lahf
data16
mov
inc
sbb
frstor
fnstsw
jae
adc
inc
add
cmp
dec
iret
fimull
dec
dec
jno
adc
mov
fiaddl
xor
mov
xchg
int
or
mov
and
out
js
inc
mov
andl
jns
cltd
mov
lahf
test
or
mov
loopne
js
outsl
xor
bound
gs
out
push
add
add
ret
inc
cmc
das
or
addb
add
jl
xor
mov
adc
push
sbb
scas
cmp
and
xchg
lret
loope
loopne
jle
in
cmpsl
dec
dec
int
adc
outsb
test
pop
repnz
lcall
xor
add
pop
mov
loopne
insb
fldenv
sbb
in
sbbb
test
stos
leave
addr16
test
push
pushf
jno
push
lods
mov
arpl
or
sub
add
adc
pavgw
or
roll
jp
stos
and
pop
les
hlt
add
push
int3
push
add
jle
clc
or
push
movhps
push
and
add
dec
add
popl
adc
push
xor
sub
adc
jg
loopne
into
adc
adc
fsubl
fldenv
cmp
pop
bound
mov
scas
clc
or
loopne
cli
enter
outsl
jbe
lea
lret
dec
push
sahf
or
int
daa
mov
mov
lahf
push
inc
jb
repz
shlb
test
xor
cmp
add
lahf
add
popf
int3
jne
js
out
mov
cmp
hlt
adc
adc
scas
sbb
cmp
inc
incl
add
pop
cwtl
pop
or
xchg
cmpb
cmpsl
shlb
and
mov
popf
test
cs
push
push
fnsave
and
add
pusha
push
cmp
mov
lods
dec
jne
imul
dec
mov
jge
faddl
mov
inc
xlat
cli
adc
dec
test
and
stos
dec
push
imul
sub
jnp
and
orl
in
adc
shrl
imul
jmp
test
ljmp
aam
stc
shl
adc
inc
loope
sar
sub
cmp
or
test
mov
and
stc
stc
inc
nop
sbb
out
data16
jne
xor
jmp
push
xor
pop
hlt
jle
out
in
push
hlt
push
or
roll
lods
clc
popa
adcl
mov
dec
jecxz
ljmp
sbb
ret
inc
add
dec
adc
push
add
mov
add
inc
push
popa
bound
lock
test
mov
cmpsl
add
add
imul
push
or
jmp
xor
ljmp
adc
xorb
jg
cmpsb
sbb
add
orl
dec
add
ficoml
adc
push
adc
mov
data16
or
sbb
loope
rolb
add
xlat
pop
das
adcb
and
mov
ja
xchg
pop
je
pop
js
mov
repz
or
add
dec
mov
or
xchg
js
invd
push
sar
xor
into
xchg
pop
movsl
subl
mov
push
adc
xchg
fdivl
adc
adc
adc
adc
dec
icebp
aaa
jo
pop
dec
sbb
out
xchg
call
sbb
out
xor
and
jne
sub
adc
cs
iret
cmp
pop
out
xor
jp
sbb
call
xchg
jmp
movsb
sub
add
movsl
add
push
ds
sti
rorb
jmp
cmp
xchg
or
lret
je
and
push
out
or
cmpsb
loop
jne
pop
ret
divl
cmp
add
inc
xor
loopne
test
nop
sub
and
in
ss
bound
movsb
xorb
and
sub
sbb
adc
push
and
cmp
cwtl
loopne
lret
popf
or
and
and
inc
data16
ss
loopne
sub
push
xchg
add
dec
push
shlb
jbe
call
sbb
test
mov
push
mulb
xor
ret
cmp
pop
pop
add
add
divl
movsb
xchg
jmp
add
xor
adc
push
sbb
aaa
dec
stos
and
or
loopne
push
cltd
xor
mov
not
sub
mov
sti
pop
shrb
add
mov
sbb
pop
push
add
out
mov
xchg
ss
push
xor
or
cmp
pusha
and
rcrb
sbb
mov
mov
add
mov
push
or
mov
je
movsl
jno
test
jl
inc
xor
cmp
and
pop
mov
push
movsl
jmp
mov
push
dec
push
push
jno
push
dec
inc
push
lock
or
aas
rolb
jmp
aas
adc
je
aad
fisttps
jns
mov
lods
test
inc
fidivs
jb
dec
clc
xor
adc
fnstsw
out
dec
mov
ss
cmp
mov
mov
cmp
add
lea
inc
adc
add
and
add
clc
test
sbb
and
or
cmp
add
mov
rorl
jno
inc
sub
pop
repnz
adc
xchg
or
or
insb
je
add
mov
push
and
sub
movsb
push
lock
mov
cmp
add
sub
sub
int
cmp
xchg
jg
add
or
movsl
mov
adc
pop
mov
push
aaa
roll
mov
pop
popa
filds
dec
xor
add
push
inc
jne
dec
inc
cmp
mov
repz
dec
ret
push
xor
inc
gs
jb
xorl
sbb
sub
jns
call
xor
sub
jno
push
push
stos
xchg
sbb
test
enter
sbb
ret
test
lods
xor
pop
pop
xchg
xchg
push
and
dec
push
les
add
loope
js
leave
add
jge
xorb
pop
gs
loop
jmp
mov
or
inc
out
cmp
loopne
lret
or
lock
push
ret
sbb
jo
in
je
ret
cmp
inc
pushf
mov
push
adc
push
js
cltd
bound
popa
xor
xor
xchg
jl
jnp
cmp
jns
outsl
movsl
mov
inc
push
insb
adc
pop
test
xor
in
or
sub
sbb
imulb
xor
push
xchg
cmpl
xor
or
dec
insb
out
and
xor
cs
mov
and
add
jb
orw
xorl
or
mov
std
sbb
push
scas
lcall
add
mov
push
lea
fisubrl
fistpll
imul
mov
je
mov
jp
and
aas
mov
mov
push
ss
inc
popf
or
xchg
push
fs
inc
adc
shlb
nop
pusha
jl
jo
inc
aam
and
pop
xor
lods
mov
test
sbb
pop
or
xor
mov
inc
push
push
out
jl
ljmp
inc
or
repz
pop
nop
cmp
xchg
arpl
sub
pusha
adc
mov
xchg
insb
mov
pop
add
sub
sub
adc
bound
inc
adc
pop
adc
sub
pop
jbe
cmp
test
xchg
in
dec
sub
and
mov
js
scas
lds
push
or
gs
push
mov
jg
movsl
sbb
data16
inc
fdivl
inc
adc
andl
sbb
push
dec
dec
fiaddl
call
movsb
dec
push
push
cmpsl
xchg
stos
xchg
inc
xchg
inc
add
rcr
mov
adc
dec
jns
sbb
pop
lret
ret
sahf
mov
fs
mov
mov
and
and
cmp
lahf
add
aam
insb
mov
ds
je
sub
je
rorb
fidivl
cmp
mov
push
push
pop
lock
xor
negl
insb
push
mov
lock
fdivl
push
in
cmp
adc
push
inc
lods
movsb
xor
lods
jmp
push
adc
add
into
js
incl
mov
inc
push
int3
xchg
cmpsl
xchg
push
add
xor
in
xor
cmp
and
cmpl
push
mov
jg
jmp
mov
rorl
rorb
adc
pusha
mov
in
push
fwait
leave
jl
cmp
lea
cmp
inc
mov
jl
popa
std
xchg
cs
into
imul
pop
in
and
je
cmc
dec
popf
sbb
in
mov
test
or
or
cmp
addb
or
rcr
xchg
sbb
dec
pop
imul
leave
or
mov
dec
or
or
ret
mov
push
cmp
test
mov
sbb
push
movsb
andb
xchg
jp
xor
or
xor
pusha
ss
stos
mov
fmull
or
shlb
mov
adc
imul
ss
mov
push
adc
pop
and
cmp
adc
sbb
outsb
push
das
les
je
fisubs
stos
adcb
sbb
pop
cwtl
jbe
adc
sbb
jo
subl
pop
das
jmp
int
mov
push
mov
push
fdivs
push
add
and
sub
loopne
in
subb
push
xor
jo
inc
ret
jnp
aaa
mov
jo
dec
fisubs
mov
out
pop
rcll
and
test
std
pop
gs
sub
mov
add
cwtl
inc
inc
inc
int
and
pop
lcall
xchg
mov
inc
cwtl
push
sbb
in
mov
or
repnz
mov
or
dec
pop
push
jge
pop
push
movsb
sbb
sarb
jo
mov
inc
push
or
scas
xor
jnp
popa
movsl
mov
fwait
dec
pushf
add
inc
fmuls
jae
idiv
and
sub
mov
dec
adcb
and
movsl
into
mov
add
and
xor
jmp
sbb
or
inc
sub
cmp
push
add
pop
iret
and
roll
pusha
sbb
imul
call
movsb
push
hlt
inc
std
incb
xchg
push
mov
push
insb
jbe
adc
inc
xor
pop
push
sarb
and
inc
pop
sbb
inc
sub
pop
pop
stos
add
inc
or
inc
jae
data16
mov
inc
adc
or
dec
shlb
arpl
adc
rorl
cmp
das
dec
sbb
outsb
call
inc
stos
fcmovnbe
andb
mov
das
and
aaa
pop
out
or
mov
ret
andl
xor
cld
adc
cmp
mov
sbb
dec
add
or
cmp
in
cmp
dec
mov
sbb
test
loopne
out
and
push
cwtl
sbb
pop
mov
cmp
inc
and
psllw
mov
data16
push
xor
mov
outsl
inc
je,pt
mov
push
cmp
xchg
pop
xor
or
sub
sbb
mov
push
push
xor
and
sub
clc
leave
rolb
clc
popa
adc
andl
repz
ret
lea
mov
dec
repz
xchg
test
rcr
and
popa
cmpl
adc
sbb
sub
push
mov
sbb
xchg
add
dec
loope
das
and
add
dec
popa
cld
sbb
cmpsl
jg
lret
mov
adc
jge
mov
movsb
xlat
dec
or
xorl
sahf
pop
imul
xchg
shr
sahf
arpl
add
insb
push
mov
mov
or
dec
enter
sbb
repnz
inc
js
cmp
fwait
mov
pusha
mov
jno
je
sub
mov
mov
inc
fs
loope
xor
push
mov
mov
add
arpl
adc
cli
jle
lds
mov
push
push
jmp
jns
loopne
idivl
icebp
lods
add
add
inc
xor
pusha
loope
push
movsl
cmp
mov
lahf
adc
cmp
je
or
je
fwait
or
cltd
insl
imul
sbb
imul
fwait
andb
test
and
scas
lds
add
fisttpl
push
xchg
push
jmp
lcall
addb
outsb
cs
out
adc
nop
or
xchg
adc
xor
inc
cmp
sub
lcall
shrb
adc
out
jae
inc
pop
add
in
sbb
xor
clc
pop
icebp
mov
push
push
das
je
or
dec
add
sub
cmpsl
inc
sub
in
adc
sub
or
adc
shll
loope
popf
or
push
stos
int
adc
mov
roll
jle
or
aaa
outsl
in
shlb
mov
push
shlb
sub
mov
jne
cmpsl
add
xor
rcr
adc
into
add
ljmp
mov
std
push
mov
nop
pop
and
inc
mov
push
fs
and
inc
mov
jo
add
mov
js
jge
cmpl
xor
clc
adc
xor
mov
leave
xchg
adc
cmp
adc
push
test
mov
aad
and
mov
and
push
adc
and
je
stos
or
add
test
rorb
aas
fcompl
jge
into
inc
dec
cmc
mov
cmp
pop
push
je
lret
xchg
cmp
xor
enter
nop
add
sub
cmp
xchg
adc
jne
mov
cmp
jae
lret
pop
or
insl
into
cmc
cmp
sbb
inc
jge
jmp
push
jne
gs
inc
test
and
adc
in
test
js
pop
fadds
icebp
aad
xchg
pop
movl
inc
fidivrl
and
jecxz
jns
jbe
popa
cmpb
scas
cwtl
mov
push
inc
pop
mov
adc
jp
or
jl
nop
popf
call
jne
and
xadd
jg
cmpl
loope
mov
mov
and
loope
adc
aad
call
or
dec
xchg
sbb
shl
movsl
add
sub
inc
pop
aad
jns
or
lret
pop
lret
sub
lock
or
test
test
movsb
test
pop
aas
lods
iret
push
fwait
ret
sub
loopne
or
mov
sub
cld
iret
mov
repz
jle
and
mov
lcall
push
sub
or
into
int3
add
fsubr
loopne
adc
jnp
add
imul
roll
xor
xchg
push
xchg
add
push
adc
orb
shr
ds
daa
jmp
ret
bound
cld
mov
push
enter
pop
xor
add
add
out
adc
adc
jecxz
mov
ja
mov
popa
mov
sarl
ds
push
fstps
add
sub
lods
pop
sbb
cmc
and
dec
mov
out
pop
mov
or
daa
ja
sbb
imul
inc
cmpb
push
mov
or
jle
or
jp
push
roll
add
mov
dec
ds
push
dec
dec
sub
jmp
int3
lock
inc
lcall
push
imul
xchg
je
mov
xor
xor
testb
cmp
pop
hlt
sbb
push
xchg
push
pop
xchg
adc
xchg
lock
mov
lock
je
insb
jne
insb
je
popa
xchg
pop
jns
imul
or
jmp
cmp
outsl
or
popa
lahf
cmc
xchg
jne
and
rcrl
out
addr16
je
sub
fists
pop
bound
je
jne
loop
in
mov
sub
notl
push
dec
or
int3
jp
icebp
mov
and
aad
sub
lea
es
or
loope
cmp
mov
mov
jne
loopne
outsb
push
das
in
pop
neg
mov
pusha
in
pop
pop
in
mov
sub
test
aaa
cmp
aaa
pop
scas
mov
loopne
ds
sbb
push
dec
imul
cld
mov
inc
mov
mov
xor
sbb
or
invd
loope
pop
daa
rclb
adc
mov
add
mov
xchg
cwtl
jl
add
or
lret
fistps
adc
dec
adc
icebp
adc
sbb
dec
or
shll
nop
add
fsubs
lods
adc
add
rclb
orb
adc
jp
and
push
or
sarb
lret
mov
jb
jb
adc
push
adc
mov
mov
outsl
xor
popa
icebp
aas
jb
push
mov
pop
jae
cmpl
mov
inc
adc
or
pushl
sub
add
and
je
sub
cmpsb
cmp
mov
mov
js
inc
addb
sub
inc
jae
and
dec
or
xchg
cmpsb
dec
dec
loope
inc
or
inc
sub
add
inc
jmp
enter
push
addb
sub
xchg
pusha
es
jbe
xor
push
add
loop
lret
xchg
add
and
in
outsl
test
jle
add
jle
add
inc
and
inc
jmp
push
shl
movsl
aam
cmp
or
fdivl
movsb
test
xor
pop
nop
or
loopne
fwait
jne
sbb
lcall
sti
sub
ret
jmp
and
inc
push
xlat
or
xchg
mov
push
inc
sbb
aas
mov
sbb
xorl
test
mov
shlb
dec
daa
in
dec
pusha
dec
xor
or
inc
sbb
adc
sbb
mov
mov
jge
enter
lcall
sbb
mov
mov
xor
jl
xor
into
mull
jle
and
test
and
mov
pop
push
rolb
inc
out
mov
stos
cmp
push
das
fisubrs
pusha
inc
cmp
orb
test
adc
mov
mov
xchg
pop
push
mov
xchg
loopne
cmp
popa
adc
push
jno
inc
adc
addb
dec
or
inc
inc
mov
addr16
mov
cmc
gs
scas
or
mov
ss
push
je,pn
popf
aam
sub
and
insb
push
adc
xor
pusha
or
sub
sbb
xor
aad
ret
mov
testb
jnp
add
mov
cmp
pop
pop
dec
or
roll
mov
xchg
push
flds
inc
jecxz
pusha
loopne
dec
push
or
pop
dec
inc
push
sbb
or
lds
or
mov
mov
js
xchg
jb
call
inc
jmp
popa
fnsetpm(287
pop
xchg
dec
rorb
insb
mov
inc
mov
and
mov
enter
push
addl
inc
popa
and
leave
push
pop
sbb
xchg
gs
nop
add
xor
jno
loope
dec
int3
cmp
rcrb
push
fdivl
push
je
cmpsl
push
xor
push
inc
clc
mov
mov
dec
push
in
mov
ss
add
add
and
push
out
inc
shl
cmp
cmp
mov
or
pop
add
xor
jl
xor
add
push
fwait
push
mov
ss
push
inc
sti
loope
mov
dec
inc
mov
or
mov
mov
out
pop
push
and
or
push
or
sbb
loopne
mov
fidivrs
andl
pop
dec
push
or
sbbl
pop
and
hlt
dec
sub
mov
push
jle
dec
mov
nop
rclb
pop
xor
inc
inc
or
sbb
pop
mov
es
nop
lcall
pcmpeqb
dec
xor
es
adc
sbb
arpl
sbb
jge
es
push
push
loope
movsb
rorl
insb
js
in
hlt
mov
rcrl
push
pop
mov
xchg
xchg
or
push
push
fstpt
sub
ljmp
xor
mov
iret
ret
and
and
pop
jbe
movsb
mov
or
sbb
push
imull
cmpsb
xor
or
jno
popa
dec
push
orl
shl
pop
push
pop
push
sbb
and
cmp
clc
sub
lock
cltd
xor
sbb
or
das
cs
test
mov
rcr
push
add
xchg
adc
adc
sub
push
imul
jmp
adc
addb
push
std
setb
clc
add
mov
push
sbb
stc
leave
fildll
mov
mov
pop
xchg
sbb
fisubs
inc
and
or
test
loopne
into
call
test
push
mov
adc
dec
add
pop
fbld
xchg
jge
fsubrs
sbb
or
sub
sbb
mov
or
add
add
pop
enter
test
das
mov
mov
js
je
jmp
add
dec
pop
fsubl
sbb
movaps
push
push
mov
push
mov
insb
xor
dec
pop
xchg
adc
inc
bound
dec
shlb
arpl
ss
add
and
lea
outsl
addr16
add
jne
sub
pand
adc
fcoms
lds
pop
mov
popl
loope
ret
cmp
jnp
xor
sbb
subb
jb
or
mov
int
mov
mov
add
frstor
or
jl
xchg
or
push
daa
mov
adc
mov
adc
sub
sbb
pop
mov
cltd
adc
rcrl
adc
fildll
inc
push
enter
or
or
sub
inc
or
aad
pop
loope
jb
adc
jnp
punpcklbw
pop
add
inc
sub
ret
out
data16
aam
sbb
lods
add
mov
mov
jp
cld
jg
sub
mov
test
test
bound
cmp
xor
add
sbb
add
test
mov
mov
mov
icebp
push
aad
ss
mov
push
adc
aad
push
pop
or
ja
adc
ja
in
pop
lds
and
roll
inc
adc
adc
adc
aam
sbb
adcb
xor
xchg
jno
sub
sahf
pop
push
adc
add
dec
imul
ljmp
push
jb
hlt
adc
jbe
dec
pusha
add
shl
lock
xchg
and
sbb
mov
pop
add
mov
test
add
mov
xor
and
ss
bound
xchg
jecxz
fistpll
popf
into
push
in
or
fildll
or
dec
out
add
ljmp
shlb
mov
insl
lcall
fs
addr16
in
enter
sahf
in
aaa
ret
daa
and
adc
lock
ret
or
arpl
cli
shrb
inc
xchg
and
add
jg
incl
or
and
cltd
add
xchg
data16
ljmp
adc
mov
and
pop
and
bound
fstpl
mov
adc
mov
enter
lret
mov
clc
inc
dec
outsl
mov
push
add
inc
rcr
jge
ffree
adc
test
iret
adc
inc
int3
idiv
sbb
jge
and
lds
pop
sub
lock
mov
dec
daa
inc
inc
fidivl
xor
sahf
xor
test
push
or
and
cmpsl
and
mov
xchg
add
jae
and
xchg
add
cld
add
inc
shlb
arpl
sbb
adc
add
add
pop
and
add
inc
stos
mov
pop
data16
add
mov
jle
and
or
adc
add
cmovns
dec
push
add
test
test
dec
cmp
mov
out
mov
add
sbb
jbe
int3
and
bound
push
and
arpl
dec
add
mov
jo
jnp
adc
sub
push
mov
or
or
and
inc
rolb
call
sub
jne
sar
sar
jne
andb
inc
sbb
dec
cmp
push
stos
or
adc
test
rclb
inc
out
negb
adc
movsl
xor
dec
push
fwait
pop
test
inc
mov
or
jp
out
imul
popa
add
add
add
cs
mov
addb
mov
inc
add
ret
rolb
enter
xchg
rorl
adc
xor
add
push
daa
bound
adc
test
push
aam
movsb
dec
sub
or
adc
or
sbb
dec
loopne
sub
ss
aam
sbb
adc
aam
in
mov
sbb
push
pusha
adc
xchg
js
jbe
add
mov
xor
add
xchg
xor
push
push
subb
push
movsb
rorl
mov
mov
mov
and
loop
addr16
jbe
inc
out
sbb
push
push
adc
aas
shrl
sbb
lcall
sub
fld
cmpw
dec
cmp
push
and
loopne
inc
cmc
lock
and
mov
cltd
jne
fcomip
adc
xor
mov
or
mov
sti
dec
cmpsl
mov
je
add
xor
ret
or
inc
sub
xor
mov
pop
sbb
es
mov
adc
add
sub
mov
cmp
sbb
sub
sbb
clc
jns
movsl
mov
ret
xchg
adc
jmp
fnsave
in
add
clc
xchg
clc
mov
fcoml
jb
push
xchg
or
bnd
bound
stos
les
dec
mov
jl
push
adc
or
pop
pop
inc
xchg
pop
cwtl
jle
sub
xchg
adc
fld
leave
jp
jne
movsl
shl
jb
or
fdivs
mov
jbe
sbb
sbb
cmp
xor
add
push
and
hlt
and
mov
repnz
push
sub
add
mov
sub
fsubr
jnp
dec
cmp
push
sub
push
ss
sub
test
xchg
mov
ret
mov
xor
push
cmp
daa
pusha
daa
hlt
jns
adc
pusha
sub
orl
dec
push
push
pop
daa
mov
jecxz
jb
sbb
sub
push
jmp
and
adc
popf
dec
xchg
add
imul
push
rclb
subb
shl
jo
sub
add
push
and
popf
cmc
xchg
pop
xor
das
mov
fcoms
nop
call
xchg
mov
add
cld
jo
lcall
aad
neg
addb
push
push
cmpsb
mov
lds
add
or
jg,pn
imul
add
shl
cmp
adc
mov
lds
or
sbb
sub
pop
push
push
jmp
shlb
mov
popa
pop
cld
adc
xchg
mov
and
inc
or
aad
sbb
and
sub
mov
xchg
roll
test
push
add
xchg
adc
pop
sub
imul
jns
adc
shlb
sbb
dec
lods
or
dec
push
hlt
push
andl
mov
and
add
or
push
mov
imul
inc
push
jmp
test
dec
dec
sbb
pop
push
ja
pop
pop
movsb
sbb
mov
cmp
jmp
add
or
rclb
xor
xor
xor
sbb
or
outsb
inc
fmuls
or
add
arpl
scas
jno,pn
xchg
lea
out
in
xchg
inc
shll
andb
pop
pusha
or
lock
lret
add
adc
push
movsl
shll
xor
add
lcall
scas
fldenv
push
push
clc
cmp
clc
add
dec
mov
sarb
lea
jo
xor
pop
push
push
sub
inc
jecxz
push
add
xchg
pop
repz
cmp
mov
int
jo
lock
add
add
shlb
int3
push
sub
or
sahf
sub
adc
stos
xor
aas
jb
push
add
int
test
or
negl
mov
sbb
clc
push
aas
pop
fdivs
sbb
jae
inc
out
push
popw
inc
pop
pop
rclb
cmp
inc
jmp
xchg
dec
xor
xor
or
xchg
inc
test
jge
or
xor
and
inc
or
dec
je
or
dec
mov
sub
fs
pop
outsb
lods
mov
pop
inc
and
push
jmp
shrb
cwtl
dec
xor
inc
sub
sbb
aaa
sbb
dec
cwtl
pop
add
rolb
subl
pop
add
shrb
push
push
mov
pop
sub
ss
add
lret
inc
mov
jmp
rcrb
rclb
stos
and
jnp
or
sbb
and
loope
cmp
inc
mov
inc
ds
popl
mov
xor
add
dec
enter
jmp
iret
cmp
out
xchg
scas
shrl
iret
jns
adc
arpl
sbb
ret
xor
loopne
dec
inc
push
mov
or
xor
xchg
fwait
sbb
mov
jbe
rcll
xor
jae
sub
popa
clc
jae
or
test
insl
mov
xlat
add
das
movsb
test
xor
lds
fnsave
hlt
and
in
jo
roll
or
push
aas
mov
loopne
xor
dec
adc
and
push
dec
inc
enter
adc
jg
orb
fbld
scas
jb
lret
addb
add
adcl
jp
sub
mov
mov
add
xchg
inc
xchg
ret
in
hlt
or
dec
push
and
rcr
sub
cmp
je
test
insb
mov
pop
cmp
add
in
arpl
and
pop
adc
or
mov
mov
popf
push
xchg
fldenv
in
jmp
push
push
loope
repnz
movsl
mov
movsb
sbb
nop
xor
mov
rorl
in
or
push
pop
test
test
jmp
ret
or
js
adc
mov
push
lods
addr16
mov
test
or
push
or
or
movb
insl
add
sti
xor
loopne
dec
xchg
adc
cmp
dec
lcall
outsb
roll
mov
sbb
popf
fbld
addr16
popa
adc
popa
ret
clc
gs
inc
sbb
and
xchg
pop
sar
sbb
push
adc
push
sub
rclb
fisubrs
and
cld
sbb
sbb
push
fadds
stos
push
mov
icebp
aaa
or
or
mov
sarb
stc
and
aas
lret
cmpsl
gs
mov
movsb
mov
cmp
and
inc
add
cwtl
imul
adc
cmp
jbe
add
sti
jae
push
aaa
push
sub
es
ret
jmp
push
lret
cmp
dec
mov
dec
pop
mov
cmpsb
push
and
mov
cmp
jbe
insb
bound
jae
xchg
add
cmp
sbb
imul
imul
sbb
adc
xor
pop
and
rclb
sar
popa
fstp
and
rcll
fdivs
pop
add
mov
xorl
out
inc
fldcw
rclb
push
fisubs
test
dec
or
jge
jbe
cld
sbb
adc
enter
adc
pop
mov
loop
adc
test
rorb
loopne
push
ja
movsb
daa
and
jo
imul
or
mov
add
ss
xor
pop
test
cmpb
cmp
or
and
and
ja
push
test
pusha
dec
or
pop
fstpt
loope
push
xor
mov
mov
and
jl
pushf
add
or
ljmp
cmp
ficoml
sub
out
pop
push
push
sbb
xchg
dec
enter
adc
stos
xchg
jo
sub
mov
sub
out
mull
jo
rorl
repz
push
sbb
and
push
out
push
inc
add
rorb
and
push
cmc
push
scas
mov
push
add
jp
clc
movsl
mov
jmp
pop
test
xchg
push
and
sub
inc
inc
or
lea
lea
shl
aam
mov
and
xchg
push
mov
ret
lock
test
test
sbb
mov
dec
xchg
and
xchg
jo
mov
xor
in
hlt
mov
cwtl
mov
jmp
sbb
mov
hlt
mov
xor
sbb
mov
push
pop
jne
lret
pusha
add
lcall
cmp
adc
leave
cmpb
jns
pop
xchg
mov
imul
rolb
lock
repnz
sub
add
repz
add
xchg
mov
js
jp
fwait
ret
mov
jne
inc
add
sarb
adc
inc
les
cmp
push
subb
push
jne
ficompl
and
inc
adc
mov
push
jno
cmp
sub
cmp
add
jo
scas
cmp
lahf
pop
jmp
andl
mov
sti
jnp
push
fidivs
or
pop
iret
adc
test
popf
inc
jle
jb
popa
inc
push
or
lods
aas
in
cmpsl
andb
mov
enter
setns
or
popf
xchg
mov
mov
and
cmp
and
push
xor
cmpsb
aam
jl
pop
sub
ret
dec
sbb
addr16
iret
pushf
or
fdivs
or
xor
cmpsl
jno
xchg
mov
aam
xchg
add
push
adc
stos
cmpsb
lock
inc
push
mov
fcmovnb
xchg
push
push
movsl
jmp
dec
add
mov
jl
sub
jo
xor
jle
xchg
adc
les
pop
rcr
sbb
or
out
sub
aam
pop
sbb
sub
jo
add
faddl
and
add
xor
adc
daa
cmp
adcl
fstl
je
push
push
mov
inc
popf
pushl
cmp
xor
jle
mov
xor
sti
and
cvtpi2ps
push
jl
cmp
mov
mov
mov
cmp
mov
adc
or
adc
test
loopne
rcl
movsb
inc
jp
cmp
sbb
ret
shlb
mov
and
mov
jmp
adc
sub
aas
push
sbb
nop
jne
shlb
shrb
dec
cmp
push
ror
std
adc
mov
daa
add
fldcw
push
pop
and
and
data16
sbb
jg
push
add
sub
jmp
cmp
pushl
inc
inc
cmp
jge
pop
mov
push
gs
mov
sbbb
sub
sub
inc
push
inc
mov
cmp
mov
push
add
jo
mov
sbb
mov
cmp
insl
cmp
mov
rcr
jmp
jmp
stc
idiv
push
stc
clc
jmp
add
cmova
mov
jmp
sub
cli
push
add
imul
mov
cmp
sbb
addb
js
imul
mov
mov
add
add
xchg
jbe
adc
mov
pushf
scas
out
and
subl
mov
enter
stc
push
hlt
or
xchg
push
pusha
popf
mov
sub
pusha
jno
push
stos
scas
push
repnz
adc
dec
je
add
push
or
adc
jnp
fldt
lods
and
and
testb
jmp
sbb
rorl
adc
dec
dec
mov
scas
test
cwtl
push
mov
adc
repnz
sub
mov
add
dec
movsl
xor
add
add
cmp
or
pusha
movlps
push
xor
stos
push
adc
addr16
adc
pop
loope
shlb
mov
mov
push
and
xlat
inc
imul
jecxz
iret
dec
adc
shr
hlt
or
pop
xchg
leave
xor
sub
repnz
and
or
xor
push
or
add
jb
jg
pop
push
fbld
loop
jno
outsb
add
les
xchg
inc
cwtl
bound
pop
mov
daa
push
or
pushf
mov
inc
idivb
mov
repz
push
mov
jne
js
dec
add
imulb
mov
js
and
or
ss
sub
or
xor
mov
arpl
or
sbb
jb
mov
inc
jecxz
enter
push
jne
push
mov
dec
enter
xchg
rorb
add
jbe,pt
rcrb
dec
test
pop
nop
ret
and
add
xor
sbb
pop
lret
rolb
fwait
mov
dec
clc
jg
inc
push
stos
and
movsb
or
add
push
or
mov
and
dec
rolb
adc
repz
ret
fadds
ds
sub
mul
lcall
mov
mov
pop
mov
xlat
fmuls
cli
sbb
out
sub
mov
adcb
add
mov
mov
ds
add
jge
lret
shl
xchg
pop
es
shlb
idiv
push
jmp
fcompl
mov
mov
cmp
addb
add
popa
ret
fldenv
sub
xlat
nop
mov
inc
les
mov
push
cld
push
push
push
xor
lock
jmp
test
push
inc
and
dec
xor
and
jne
push
rcr
adc
lock
dec
js
add
mov
add
pop
std
cmp
in
cmpsb
push
mov
jno
decb
clc
add
lea
lea
lock
mov
mov
push
fldt
dec
sbb
nopl
enter
dec
push
popa
and
or
sbb
or
add
add
mov
std
xor
sbb
push
push
sub
aam
mov
xlat
pop
push
insl
or
jmp
arpl
sub
movsl
jge
and
or
cmpsb
test
out
lods
les
sarb
dec
sbb
lahf
sub
xor
or
and
lea
add
out
in
xchg
push
add
test
test
push
xor
push
insb
push
add
loope
sub
push
pop
ret
pusha
push
sbb
cmp
xor
xchg
loope
xor
jo
sahf
nop
push
andb
add
jmp
add
push
sbb
fstps
popf
mov
xchg
adc
pop
rcll
rcrb
push
rcll
sti
or
insb
or
add
out
sbb
sarl
adc
sub
out
insl
imul
jp
cmp
js
clc
xor
test
fwait
inc
or
lock
sub
or
mov
push
shll
or
add
push
mov
lock
inc
dec
jne
add
mov
cmp
call
sub
daa
or
les
dec
jmp
xchg
mov
js
inc
mov
test
xor
mov
pusha
sbb
or
pop
or
adc
mov
arpl
cltd
sub
dec
xchg
mov
orb
and
adc
sbb
inc
popl
dec
and
lods
mov
out
test
xchg
rclb
rorl
mov
and
ljmp
fimuls
sbb
cmp
mov
adc
clc
std
hlt
fdivr
or
cld
push
lcall
cmp
sub
popa
cmp
sub
or
jge
clc
sbb
leave
sub
out
jnp
jmp
cmpb
push
mov
rcl
js
xor
pop
sbb
ret
dec
fsub
or
out
and
jo
pop
popf
push
inc
es
and
dec
sbb
jns
out
sbb
sar
adc
cmp
or
mov
pop
xlat
dec
and
test
sbb
sbb
xchg
add
xor
scas
mov
or
push
push
js
add
out
ss
popa
faddl
dec
outsb
or
test
xor
add
shlb
xchg
mov
jnp
lods
mov
dec
ret
and
or
sti
pop
sbb
add
xor
sub
es
cmp
inc
arpl
pop
push
or
inc
stos
fmulp
xor
hlt
icebp
add
cmp
xchg
fcoml
jne
dec
mov
or
imul
inc
js
jno
jb
or
adc
cmp
dec
add
cmpsb
cli
lock
add
adc
call
das
mov
imul
jo
sub
cwtl
or
fcomip
push
sti
clc
adc
loopne
sub
add
cltd
or
xchg
addr16
dec
add
sub
and
sub
pop
inc
adc
adc
dec
jo
push
loopne
or
and
push
or
pop
enter
jg
or
push
repnz
mov
and
push
and
xor
push
dec
pop
mov
mov
repz
mov
or
jns
or
jo
dec
and
sub
clc
lods
pop
jne
jecxz
out
push
movsb
dec
pop
xor
jae
mov
cwtl
mov
sub
inc
mov
pop
adc
sbb
fisttpl
xchg
or
sub
or
out
mov
int3
in
loop
test
pop
jl
mov
or
push
ss
andb
sbb
add
and
je
cmc
enter
daa
or
pop
add
sbb
rcrb
lahf
push
xor
dec
addb
sub
sbb
punpckhwd
cld
imul
lock
pop
ds
mov
or
cmp
cmp
or
idivb
adc
and
nop
cld
roll
push
push
sub
in
std
push
push
jp
push
lea
loope
mov
int3
adc
add
xchg
jne
cmp
mov
insl
xchg
sbb
je
add
aam
dec
inc
cmp
sbb
mov
jne
pop
add
push
adc
pop
add
or
movsl
jb
xchg
lock
mov
xor
stos
add
pop
pop
jbe
adc
push
orl
mov
lcall
jne
es
popa
loopne
mov
lea
xor
enter
fadds
add
add
sarl
sbb
in
pop
and
cmpsb
dec
mov
sarb
jmp
mov
into
fcompl
movsb
pusha
xor
in
push
adc
push
shlb
and
xchg
cmp
shl
cmp
push
imul
pop
mov
popa
popf
push
sbb
mov
fldl
pop
and
push
cmp
decl
cmp
adc
mov
rolb
andb
scas
lods
imul
aad
pop
ret
dec
pop
je
fstpt
ss
cli
xor
test
popf
sub
fists
fcmovnb
sub
outsl
data16
xchg
mov
push
and
fcoml
cmp
les
sbbl
inc
pusha
sbb
pop
not
adc
mov
pop
cmc
out
mov
sub
cmp
flds
fbld
out
mov
jb
arpl
and
popl
jno
dec
test
aad
daa
add
insl
fidivs
mov
imul
rolb
pop
or
dec
cmpsb
popl
mov
dec
push
or
adc
repz
mov
push
mov
add
fsubp
sub
pop
inc
cwtl
arpl
enter
imul
mov
leave
sbb
mov
and
mov
adc
mov
lods
ret
movsl
aam
dec
sub
in
fsubl
xchg
jmp
inc
push
fcoms
daa
cmc
cmpsb
mov
cmp
and
adc
jg
add
sub
or
jg
sub
nop
or
add
ret
jo
scas
mov
dec
xchg
cmp
jp
pop
arpl
mov
jno,pt
lds
add
push
cmp
adc
js
jmp
cwtl
sbb
xchg
xchg
pop
daa
jp
push
adc
in
cld
xchg
cld
mov
cmp
push
or
test
sarl
adc
push
nop
adc
adc
sub
xor
bound
popf
xchg
jl
sub
or
andb
jmp
shrl
or
sub
fnstsw
ja
ret
mov
push
mov
xor
sbb
cmp
pop
push
mov
in
movsl
jo
shr
addr16
push
xchg
es
aam
and
adc
dec
jg
push
sub
in
popa
roll
or
xorb
in
nop
mov
lahf
dec
mov
sbb
sub
and
inc
xor
lods
mov
imul
and
xchg
testb
and
dec
sub
cmp
adc
mov
ret
shlb
mov
adc
jge
push
adc
fldl
fidivrs
data16
add
push
dec
push
add
test
jle
loope
lret
inc
sub
adc
shlb
pushf
push
sub
lea
push
sarb
sub
push
dec
xor
mov
add
mov
sbb
lds
jl
mov
xchg
stos
andl
cmp
push
push
dec
sbb
mov
sbb
and
sbbb
sub
sahf
jo
fnsave
push
mov
jmp
xchg
xor
jmp
sub
fcomps
cmp
mov
stos
imul
mov
mov
xor
leave
das
add
pop
in
add
xor
add
ret
adc
and
jno
inc
and
push
fcmovbe
and
shrb
dec
and
fidivrs
sbb
push
xlat
push
inc
mov
roll
mov
loop
cwtl
xor
shrl
pop
cmp
and
call
mov
ja
mov
icebp
push
les
outsl
sub
add
add
add
mov
fiaddl
inc
ret
mov
movsl
orl
in
pop
pusha
jmp
push
pop
xchg
add
add
mov
jb
push
or
xor
lahf
lods
add
xor
or
std
inc
or
hlt
loope
fiaddl
cmpsl
movl
pop
in
add
insb
xchg
sub
xor
sahf
mov
pop
sbb
sub
pop
push
out
pushf
cmp
cwtl
fisttps
arpl
mov
pop
fwait
in
inc
pop
dec
es
xchg
cmp
leave
mov
mov
jno
shrb
xlat
mov
lods
or
jle
pop
sbb
mov
xchg
testb
nop
faddp
jnp
pop
cmp
inc
icebp
cwtl
aam
testb
add
jl
sbb
xchg
inc
xor
and
lds
repz
and
shr
pop
fcoms
cmp
dec
push
mov
out
fimuls
or
shr
loope
shl
lea
fwait
xor
and
jae
pop
add
lea
pop
mov
inc
jl
inc
cmp
jl
mov
into
cmp
shlb
clc
daa
xchg
or
addr16
inc
test
cmp
cli
and
push
pop
mov
push
sub
add
mov
xchg
loope
inc
push
xor
xor
fst
addl
and
inc
fdivrs
add
pop
add
loop
stos
shl
push
mov
inc
mov
add
jmp
mov
pop
inc
pushf
loopne
andl
cmp
addr16
jge
into
ret
loop
adc
loopne
and
sbb
movb
imul
inc
lea
add
mov
sbb
xchg
dec
mov
add
dec
inc
mov
sub
loop
lock
or
mov
xchg
es
test
loopne
leave
test
xchg
and
mov
mov
adc
or
pop
xor
dec
adc
sbb
cmp
int3
cmp
enter
add
jmp
mov
cmp
lret
xor
cmp
push
lea
daa
sub
fstl
jo
popa
push
insl
add
or
xor
and
sbb
xchg
lds
sbb
hlt
inc
pop
rcll
jmp
push
jge
push
add
and
sahf
push
jmp
push
repz
add
stc
outsb
sub
mov
fucomp
sbb
adc
mov
orb
out
fimuls
xor
aas
and
mov
mov
pop
mov
pushl
add
es
ljmp
push
testl
insl
or
mov
pop
or
mov
or
adc
jbe
leave
andb
add
lret
icebp
cmp
adc
ffreep
pop
cmpsl
sub
add
inc
dec
push
mov
shlb
xor
add
rcr
push
movsl
test
call
mov
mov
fmull
inc
or
inc
dec
sub
int
out
cmpl
xor
or
or
dec
mov
and
mov
inc
push
mov
aam
inc
xchg
sub
push
sub
jbe
jp
pop
adc
push
or
fsts
push
jo
js
fsubs
lea
popfw
or
call
xor
lret
jo
jl
test
and
dec
and
mov
inc
jo
mov
movsb
push
cmpsb
xor
stos
popa
test
xchg
mov
cwtl
dec
iret
or
sbb
mov
pop
pop
addb
mov
or
rclb
adc
cwtl
xor
lods
pop
inc
or
cmp
pop
sbb
mov
jb
aaa
ds
loopne
cmp
fistl
jecxz
adc
mov
mov
test
cs
or
pop
orb
dec
and
nop
ss
mov
push
cwtl
data16
rolb
std
cmp
data16
mov
dec
pop
sbb
add
adc
dec
js
adc
push
pop
out
punpckhwd
push
push
jl
jb
sbb
push
mov
arpl
test
stos
inc
mov
inc
pop
adc
pop
adc
movsb
test
push
insl
test
jle
orb
add
sbb
mov
in
pop
adc
mov
std
dec
sub
add
add
call
je
push
sub
ret
push
fidivs
es
mov
les
pop
int3
pusha
loop
jne
cmp
fs
inc
loopne
or
jne
mov
popf
sti
pop
cmc
mov
mov
outsl
dec
repnz
fwait
push
in
cmp
fdivp
shrb
in
dec
in
shrb
out
or
push
cld
cmpsl
xor
add
fadd
movsb
add
js
je
outsl
ss
and
inc
mov
sub
or
jp
xchg
call
clc
sub
mov
or
mov
pop
inc
pop
enter
aad
cmp
insb
jo
andb
sub
dec
insb
or
rcl
add
movb
add
outsb
xchg
inc
pop
scas
iret
es
mov
sub
mov
mov
mov
add
decl
loopne
mov
adc
mov
dec
jne
jmp
fcomps
nop
sbb
pop
push
pop
es
daa
sbb
sbbb
mov
mov
pushf
aad
dec
repnz
mov
or
repz
adc
or
test
pop
xchg
jb
and
inc
and
imul
push
scas
xor
nop
push
movsl
push
popa
add
clc
or
inc
mov
inc
frstor
pop
les
sbb
jbe
sub
xchg
movsl
mov
cltd
sbb
mov
sbb
mov
xor
loope
or
sti
sub
sub
nop
std
cmp
das
enter
dec
sub
imul
push
mov
adc
pop
inc
push
in
insl
pop
call
mov
or
push
mov
add
sub
mov
xor
push
sbb
push
add
dec
in
insl
enter
jno
les
mov
mov
std
mov
mov
push
pop
pop
mov
sbb
daa
push
sub
cmp
sbb
or
std
jo
loope
sarb
mov
mov
push
push
adc
xor
inc
loopne
lcall
pop
jo
lahf
mov
xchg
jno
pop
pop
or
out
call
cmp
jo
je
ss
xor
or
les
or
fdivrs
push
xor
jg
pop
mov
mov
iret
lds
shl
andl
idivl
sti
xor
and
mov
sbb
nop
pop
ficoml
clc
cmp
nop
sub
stc
jmp
mov
adc
rol
mov
mov
outsl
cs
dec
in
aam
loopne
fs
add
addb
cmp
scas
mov
and
mov
lcall
lahf
or
mov
andb
rcll
insb
pop
push
and
push
xor
cmp
aaa
xchg
mov
and
pop
push
inc
cmpsb
rdpmc
mov
xchg
cmpl
xchg
or
adc
insb
bound
in
stos
push
test
add
call
aam
icebp
and
rcrb
repz
and
out
in
inc
mov
jg
addb
or
imul
test
fst
imulb
push
xor
inc
not
enter
sbb
in
cmpsb
dec
lcall
imul
dec
pop
inc
push
pop
mov
outsb
push
xor
mov
jo
sbbl
add
dec
mov
sbb
mov
andl
cmp
push
jo
out
cmp
or
fmul
pop
xorb
xchg
pop
cmp
and
xor
call
push
lods
pop
push
fstps
pusha
or
sbb
cltd
and
bound
imul
lea
fldcw
add
and
and
arpl
cmpsl
adc
dec
in
ds
xchg
sbbb
add
inc
pop
setne
movl
cmpsl
pop
les
divb
fs
stos
pop
mov
out
mov
or
lods
or
or
pushf
mov
push
jne
movsb
xor
adc
orb
inc
jae
sub
mov
push
jge
in
push
push
pop
pop
mov
aas
jae
je
decl
xor
fistps
mov
jo
inc
mov
mull
clc
cmp
gs
rcl
imul
push
pop
push
xchg
sbb
jne
push
mov
sbb
mov
imull
push
mov
mov
add
sub
popa
lods
std
rolb
push
gs
xor
lret
pop
adc
add
and
addr16
mov
dec
pop
outsb
in
lods
mov
pop
and
pop
cmp
lock
decl
hlt
inc
roll
clc
imul
push
pop
add
jae
and
ret
adc
sarl
hlt
in
sbb
push
sarl
xchg
sbb
push
popf
loope
push
pop
adc
inc
mov
lahf
mov
cmp
add
lds
outsl
add
and
jae
movlps
dec
inc
mov
ss
adcb
or
lcall
adc
dec
pop
xchg
lods
sub
call
or
mov
icebp
xorb
and
rorl
es
push
mov
lret
movsl
das
loop
mov
sub
cmp
outsb
xor
jg
jp
adc
lods
icebp
push
mull
cmp
mov
adc
cs
in
add
and
adc
in
jns
adc
sbb
lret
jae
cs
sbb
ljmp
nop
sub
sub
fs
sbb
pop
or
test
mov
pop
jl
test
or
adc
lods
mull
dec
xchg
or
scas
dec
dec
xor
push
int
dec
inc
shlb
adc
sbb
jbe
pop
pop
insl
dec
pop
das
jbe
xor
ds
imul
rolb
mov
fs
pusha
int3
adc
cmc
pop
xchg
mov
adc
xchg
je
or
test
rorb
push
xchg
sbb
cmp
mov
sar
push
incl
mov
sub
mov
jbe
aaa
adc
lret
xor
pop
and
enter
sub
pop
dec
lret
adc
xor
or
adc
loopne
cmp
cs
add
orl
shll
pop
xor
dec
call
ds
lea
nop
prefetch
mov
inc
cmp
adc
bnd
push
dec
push
in
add
or
or
adc
sub
fimuls
pop
das
mov
ljmp
sbb
fwait
cs
mov
sbb
inc
sti
adc
adc
adc
jle
pop
adc
xchg
or
push
clc
mov
or
xor
push
dec
sbb
or
cs
jae
unpcklps
dec
sub
pop
add
loope
or
aaa
adc
add
adc
xor
cmpsl
adc
push
mov
mov
or
fcmovu
jg
les
sbb
test
and
pop
imul
add
lea
lods
adc
cmpsb
or
add
pop
xchg
std
mov
je
and
cmp
jne
add
sahf
gs
shll
jecxz
cmp
or
sub
dec
cmp
sbbb
nop
xchg
jbe
jne
ds
js
add
addb
jp
mov
lods
xor
test
jbe
ja
xchg
jb
inc
add
dec
or
dec
fcoms
fisubrl
inc
pop
je
xor
sub
inc
aas
pusha
and
adc
dec
sbb
mov
cmpb
fcoms
inc
jp
sbb
inc
test
out
testb
sbb
cmp
adc
lret
scas
or
dec
aaa
lret
and
sahf
out
in
inc
xchg
loop
rcrb
outsb
mov
adc
cli
stos
arpl
push
nop
dec
imul
sahf
mov
pushl
fwait
pop
ret
or
jbe
add
pop
pop
mov
push
jle
sbb
dec
sbb
sub
mov
xchg
sbb
mov
push
add
or
sbb
jnp
dec
jl
push
enter
pushf
cmp
add
sub
xor
xchg
dec
es
sub
sbb
repnz
mov
cmp
movsb
xor
and
pop
cwtl
dec
add
sbb
and
adc
es
mov
and
sbb
ja
pusha
dec
jge
push
mov
fimull
xchg
sbb
mov
inc
jmp
sub
xor
pop
out
mov
push
hlt
sbb
jmp
pop
jae
push
jecxz
add
ret
jno
sbb
xlat
dec
and
fists
or
xor
js
clc
sub
dec
sub
orl
ret
loope
fs
fstpt
js
roll
popa
sub
sub
js
pop
nop
loop
loopne
cs
hlt
sub
pop
push
ja
adc
sub
sub
sbb
inc
xor
pop
add
scas
sub
mov
lea
dec
adc
mov
and
test
test
or
or
js
xlat
in
xchg
and
push
addr16
insb
push
add
mov
mov
rorb
rorb
shufps
test
push
jno
add
sub
push
dec
push
ret
pusha
lahf
in
dec
sbb
sub
xchg
add
testb
test
inc
paddusw
loop
adc
loopne
sbb
sbb
push
and
sbb
cli
fucomip
adc
mov
roll
pop
mov
int3
adc
nop
fsubl
cmp
shl
movsb
adc
jmp
push
int
fmull
sbb
movsl
mov
aas
add
sub
inc
ja
imul
xor
mov
adc
pop
loopne
lret
hlt
mov
and
pop
push
mov
or
loope
jmp
xlat
sbb
pop
test
and
insb
rorb
rcll
push
and
and
adc
fwait
and
inc
and
lea
push
leave
pop
xchg
add
xchg
fldt
push
xchg
adc
add
mov
jp
lds
adc
pop
or
inc
mov
push
jb
sbb
push
mov
cmpsb
pop
aad
xor
sbb
scas
loopne
push
adc
out
fiadds
jge
lds
inc
jbe
pop
loopne
es
mov
push
mov
xchg
frstor
mov
sub
push
push
dec
sbbb
clc
sub
mov
adc
add
icebp
jae
cmp
mov
adc
dec
add
and
dec
adc
pop
stos
cmc
xor
aad
jb
fdivs
xchg
dec
and
jb
les
lods
cwtl
icebp
sub
jne
into
push
mov
or
mov
ds
dec
push
cmpb
push
xor
jp
xchg
es
sbb
ljmp
popa
xchg
jno
jae
pop
pop
xchg
and
sbb
je
mov
pop
jns
xor
lcall
pusha
jae
or
jl
sub
test
ljmp
sbb
jno
cmp
and
pop
leave
pop
scas
addb
jno
test
fsubrl
sub
andl
cmpsl
fildll
repnz
movl
shll
add
jnp
xchg
outsb
add
inc
test
addb
sub
jmp
adc
xor
cltd
and
popa
push
sbb
or
imul
ds
inc
inc
loopne
test
and
rcll
popf
cmovb
pop
popa
xchg
inc
pop
adc
cmp
push
cmpl
and
fdivrp
les
mov
xor
fsubl
repnz
outsb
repnz
cmp
and
push
dec
lret
rolb
add
mov
popa
aas
lock
mov
test
mov
adc
jmp
sub
dec
mov
push
adc
inc
inc
pop
push
shlb
pop
pop
movsb
das
cld
pop
sbb
out
pop
aas
add
push
add
cmp
pop
and
or
inc
dec
dec
push
inc
mov
mov
pop
lods
lock
adc
push
mov
add
mov
add
mov
incb
sbb
xor
ss
xchg
or
ret
or
mov
fstps
and
pop
out
push
in
out
sbb
sub
sbb
lret
jp
enter
inc
mov
adc
outsb
xor
jmp
pop
dec
aaa
xor
mov
mov
loopne
mov
decl
push
push
dec
sbbl
mov
inc
push
mov
pop
iret
xchg
inc
or
push
je
sbb
xchg
cmc
call
add
adc
ja
pop
test
jne
mov
lock
rolb
rorb
pop
insl
lock
push
xor
movsb
mov
roll
inc
andb
or
orb
cltd
add
mov
les
add
lret
fdivrp
dec
aam
push
adc
and
add
mov
sbb
push
xor
jo
add
divl
pop
or
je
sub
xor
push
add
push
outsl
cmp
add
sbb
adc
nop
inc
mov
fistpl
shl
orb
mov
and
dec
cmpl
pop
loop
js
fdivs
pop
ds
push
lods
dec
cli
push
je
inc
adc
dec
and
sbb
insb
mov
push
ja
adc
push
cwtl
cmp
adc
shlb
pop
pushf
sub
movsl
mov
sbb
arpl
push
mov
je
mov
ljmp
loopne
adc
push
sahf
add
je
push
inc
loopne
lock
xchg
push
sbb
subl
add
ja
pushf
stos
pusha
fstl
sub
icebp
rclb
loope
xchg
push
dec
iret
and
sarb
adc
rolb
adc
je
push
jp
mov
and
xchg
and
sbb
jnp
sbb
xor
add
jnp
push
jp
push
push
push
push
sub
cmp
out
in
fistl
pop
jmp
cld
orl
in
mov
notb
pop
es
xchg
insl
mov
dec
pop
pop
call
dec
push
leave
fwait
notb
xor
inc
sub
out
ficoml
cmc
jbe
scas
or
test
cmp
loope
clc
push
push
or
sub
cld
pop
fdivrs
mov
shlb
dec
sub
nop
mov
subl
xor
push
mov
lret
es
push
adc
loopne
sbb
fwait
mov
loope
add
mov
data16
aad
dec
sub
rcrl
adc
mov
add
pop
in
mov
or
push
sub
inc
rcrl
mov
or
xorb
sbb
sbb
fadd
sbb
or
xor
mov
addl
int
sub
or
outsb
scas
ficoml
js
test
hlt
nop
ss
add
jne
js
sahf
push
inc
lret
lock
xor
out
fdivrs
push
out
or
shrb
lods
add
mov
or
jge
jne
addb
faddl
dec
mov
sbb
add
imul
and
add
cld
jo
or
mov
pop
in
and
pop
inc
xor
mov
xchg
and
push
xchg
adcl
adc
push
or
jno
add
push
sbb
imul
rcll
jle
add
and
mov
inc
fistpl
nop
or
lret
test
test
xor
push
mov
jmp
pop
ja
iret
lods
rclb
push
add
roll
imul
or
adc
repz
std
jle,pn
mov
inc
jmp
jle
out
testl
push
lods
push
or
pop
mov
push
aas
jne
dec
push
pop
and
jl
adc
fcoms
andb
push
xchg
out
push
cmp
inc
repz
leave
ret
out
push
or
test
inc
mov
xchg
cmp
incl
and
adc
inc
add
addl
xor
mov
adc
pop
addb
aaa
andb
lcall
pop
rcrb
add
shl
xchg
jne
add
sub
cmp
sahf
push
mov
lods
loope
push
repnz
mov
test
rcll
dec
jl
cwtl
push
xor
aam
js
push
das
jo
lods
sub
ljmp
pop
cld
cmpsb
xor
lods
popa
sub
in
mov
daa
or
das
adc
push
faddl
jmp
cmp
and
in
pop
fcmovnb
imul
stos
mov
jbe
inc
sar
mov
mov
adc
jb
mov
js
sbb
push
outsl
dec
adc
sbb
adc
cmpsb
lea
jp
inc
xchg
or
mov
fldcw
push
mov
incl
or
push
fisttpll
mov
dec
jle
dec
inc
lea
adc
jl
jo
fisubs
outsl
add
cmp
por
or
testb
push
jo
push
sbb
lods
push
inc
popf
sbb
fidivl
or
push
adc
sub
or
jbe
push
cmp
fistps
pusha
rol
fsubr
mov
test
mov
add
popa
adc
push
mov
dec
mov
mov
push
xchg
inc
cltd
addl
push
xchg
xor
sbb
sbb
mov
inc
enter
nop
push
mov
push
xor
sbb
test
adc
ror
xor
cmp
mov
cmp
mov
dec
daa
push
add
cmp
jp
mov
clc
cmp
dec
fmul
fiaddl
je
nop
mov
sbb
es
cmp
jne
pop
leave
in
cmp
mov
sbb
aam
add
adc
pop
jl
popa
inc
out
je
push
dec
and
outsb
mov
or
sbb
jne
or
pop
sbb
bound
scas
or
jne
repz
pop
scas
inc
or
lcall
test
mov
mov
sub
adc
xchg
dec
inc
jo
xor
fs
sbb
xchg
xchg
sub
dec
pushf
sbb
dec
and
xor
sub
sbb
jo
js
testb
jno
add
add
addb
rorb
inc
mov
xor
arpl
push
lcall
and
incl
push
adcb
adc
mov
sub
inc
ret
inc
pop
pop
pop
add
xor
push
pop
sub
mov
pop
call
xchg
add
push
inc
add
lods
dec
or
movsb
dec
pop
loop
jmp
repnz
push
inc
push
push
les
add
sbb
push
add
lods
test
mov
or
inc
mov
lods
push
test
adc
mov
int3
mov
ja
xchg
mov
push
cmp
push
push
xor
mov
lods
cmp
pop
xor
push
dec
negb
or
invlpg
or
or
outsb
push
add
data16
xor
jne
mov
or
cmp
dec
xor
mov
dec
jno
add
push
cmp
and
les
orb
xor
sbb
sub
adc
cmp
and
push
ret
push
int3
jp
mov
shlb
lret
sub
lahf
mov
adc
or
adc
inc
js
inc
add
loope
dec
inc
inc
movsb
or
pop
jl
push
fcompl
or
test
sti
cmp
or
mov
movb
cmpb
cli
add
or
cmp
mov
inc
inc
inc
dec
mov
or
mov
fdivl
insl
sahf
sbb
pop
add
xchg
scas
lds
cmc
insl
push
adc
xchg
and
push
test
mov
sub
push
aas
movsb
xor
sub
jle
ja
jmp
push
pop
xchg
dec
jo
xor
mov
or
add
xchg
inc
incl
push
adc
es
call
add
fwait
push
and
shlb
lret
lods
and
sub
bound
add
movsl
add
add
cld
mov
idivb
or
xor
fsubr
mov
dec
mov
fdivl
fadds
add
or
in
bound
mov
mov
popa
iret
fmulp
push
dec
data16
xor
xorl
test
pop
cmc
and
sbb
sub
loopne
dec
dec
fs
pop
aas
in
mov
pop
sub
jg
imul
push
arpl
xchg
cmc
jg
jns
leave
pop
fistl
push
jne
pusha
adc
mov
enter
lock
in
insb
lock
push
aas
mov
and
xor
dec
mov
sbb
dec
sub
mov
jae
xchg
mov
inc
mov
mov
sbbb
and
in
pop
mov
adc
fwait
jo
push
outsl
insl
arpl
push
push
in
lods
dec
ds
in
in
sub
and
pop
lock
movsb
enter
mov
push
in
ficomps
mov
test
imul
add
lea
in
mov
adc
insl
push
dec
mov
addr16
jge
insb
fnstenv
pushf
adc
or
xchg
insb
cs
lahf
cmp
add
push
pop
inc
imul
push
or
mov
inc
adc
pusha
cltd
out
or
pop
call
jmp
pop
fsubrl
inc
leave
stos
syscall
lret
addb
pop
lahf
fs
mov
loopne
mov
adc
inc
pop
stos
test
mov
sub
fcompl
lahf
dec
fimull
adcb
add
mov
sarb
or
sbb
sbb
dec
aas
js
jno
ja
jmp
mov
and
js
cmpsl
ss
addb
pop
mov
cmp
orl
pop
pop
aas
inc
aas
sbb
nop
pop
mov
mov
dec
pop
mov
aas
or
sub
jg
push
pop
mov
pop
paddq
push
aas
pop
jns
sub
mov
imul
scas
stc
xor
lcall
inc
dec
cmp
imul
out
fs
pop
cwtl
pop
nop
cs
pop
jg
push
icebp
popl
scas
in
mov
pop
sarb
pop
rclb
adc
clc
pop
jmp
lods
in
pop
call
mov
or
outsl
xor
and
cmpsb
mov
in
roll
add
mov
or
stc
xchg
or
lahf
or
adc
es
push
insb
mov
or
jb
outsl
sti
jno
sbb
fsubs
xchg
and
fsubrl
lock
sub
and
mov
in
aaa
sbb
sbbl
enter
cwtl
lods
adc
loopne
rolb
push
pcmpeqd
or
inc
push
fs
sbb
cmp
rorl
dec
pusha
outsl
je
lret
sbbl
in
in
add
add
sbb
add
fmul
mov
add
lahf
adc
cmp
mov
sbb
and
popa
fsubrs
enter
fistpll
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
enter
stc
xchg
sbb
in
in
sbb
cmp
jo
and
bound
decb
mov
inc
arpl
rorb
sti
or
jo
fildll
fs
lock
and
call
xchg
lahf
call
lahf
fmuls
fs
fsubs
leave
fldenv
xor
rorb
gs
inc
and
lds
loop
or
repnz
add
pop
mov
daa
jge
or
mov
inc
pop
mov
data16
jns
push
nop
adc
je
xor
lods
movsb
addr16
fs
and
sbb
aaa
xchg
mov
pop
fistpll
dec
or
shl
stos
and
pop
cs
sbb
or
aam
xchg
push
shll
cmp
sub
mov
iret
push
shlb
jg
xor
orl
sub
rcll
adc
sbb
mov
mov
jne
mov
mov
shrb
mov
push
mov
outsl
adc
ficoml
sarb
pop
inc
fwait
call
aas
jbe
inc
enter
aas
ret
and
dec
or
lret
adc
pop
adc
push
dec
mov
int3
mov
mov
dec
jmp
adc
sbb
mov
jo
pop
flds
adc
imul
aas
sub
or
in
jnp
xchg
pusha
dec
sub
add
push
iret
rclb
sbb
inc
jg
or
add
pushf
incl
adc
jbe
shrl
movsb
loopne
sub
ds
sbb
xchg
inc
add
sti
xchg
jecxz
mov
adc
call
mov
lock
add
mov
sbb
loopne
subl
pop
pop
push
nop
fidivrl
adc
mov
xchg
popa
insl
sub
add
mov
adc
aas
adc
push
rclb
fisubrs
clc
scas
stos
dec
mov
outsb
pop
pusha
outsb
insb
mov
mov
or
add
mov
pop
fsubrs
mulb
aas
jmp
cwtl
enter
je
push
pop
out
mov
imul
fadds
fdivrs
psubusb
and
pop
adc
int3
mov
and
push
pop
in
cmpb
mov
add
inc
pop
jnp
push
add
dec
mov
dec
fbstp
pop
and
fdivrl
push
jno
test
mov
mov
cmpb
js
jg
les
aam
add
jg
aas
dec
cltd
in
inc
enter
or
movsb
bound
pop
lcall
jae
mov
es
dec
test
rcl
aas
dec
lock
movsb
jge
sub
ret
adc
es
dec
inc
xorb
sbbl
mov
sarb
cmp
je
js
adc
add
and
add
fwait
movsb
mov
pop
fstps
adc
fimull
xor
adc
fmuls
xchg
xchg
push
rorb
inc
ss
cmp
dec
sti
loope
adc
dec
jae
xor
cmp
je
pushf
fisubl
mov
in
sub
cmp
and
mov
fsubs
pop
sbb
scas
push
sub
dec
int3
or
adc
stc
lock
inc
dec
sbbb
mov
jne
cmp
pop
stos
add
dec
sbb
push
loope
push
enter
add
add
les
push
and
add
jbe
pop
mov
sbb
and
xor
push
jb
sbb
dec
pop
add
sbb
aaa
rcrb
insb
pusha
pop
inc
sbb
cmpsl
test
movsb
jmp
sbb
repnz
ja
dec
mov
fsubr
fs
pop
leave
hlt
adc
push
pop
cmp
xor
in
test
nop
js
loopne
sbb
or
and
xchg
out
inc
adc
sub
mov
adc
jg
pop
mov
sarb
in
mov
mov
and
pusha
mov
inc
jb
fdivrs
jo
leave
or
sub
xor
dec
scas
enter
rcll
cs
adc
or
sar
mov
mov
mov
or
hlt
add
or
std
sub
ficoml
or
sub
sub
adc
dec
xor
jne
mov
push
aam
nop
sbbl
sub
jnp
in
xor
cwtl
mov
lahf
jl
adc
pop
push
aas
out
xchg
outsl
in
test
js
aas
int3
and
rcll
push
lahf
movsb
out
call
push
mov
cli
mov
pop
and
fistpll
mov
adc
sbb
jge
cmp
pop
in
andnps
xor
in
mov
insl
in
loope
jge
lock
mov
aas
test
jle
inc
in
mov
push
aas
mov
and
lahf
mov
or
pop
jle
mov
shlb
xchg
push
sub
sub
jg
cmp
ja
inc
mov
mov
dec
arpl
je
imul
shlb
test
in
sti
rclb
in
adc
aas
insb
std
and
popa
mov
call
or
dec
xor
pop
ret
add
shll
filds
jge
and
mov
xchg
jbe
jle
xchg
mov
mov
dec
mov
fistl
cmp
dec
or
loop
pop
das
addb
out
scas
jg
xchg
test
test
jg
xchg
pop
mov
aas
clc
and
dec
pop
inc
fidivl
sbb
adc
xchg
mov
pop
bound
clc
fiaddl
lock
pop
dec
sarb
ds
inc
sub
rclb
xlat
lcall
add
mov
sbb
push
icebp
lock
pusha
leave
mov
cmp
pusha
dec
mov
addr16
inc
pusha
dec
push
and
inc
pop
sarb
popa
add
fsubs
pop
imul
mov
enter
ds
test
sbb
rcrl
and
pop
in
aas
fmuls
inc
std
test
dec
add
or
mov
sub
xchg
dec
test
xchg
mov
add
pop
fildl
imul
fimuls
mov
call
pusha
mov
mov
scas
mov
jmp
leave
jns
sbb
mov
clc
adc
mov
xor
xor
pop
mov
add
mov
adc
pushf
adc
jg
sbb
push
pop
pop
inc
lock
aad
int3
jmp
lea
dec
mov
mov
mov
pop
mov
jo
aas
sub
lcall
ds
les
pop
bound
adc
test
cmovs
add
push
arpl
loopne
inc
fidivl
push
adc
push
cmp
push
call
dec
mov
cmp
sbb
push
mov
daa
adc
dec
mov
mov
ror
test
inc
mov
pop
mov
fs
in
in
sub
inc
call
orl
pop
pop
mov
pop
aas
lods
dec
and
sbb
or
inc
pmulhuw
adc
lods
rcrl
jg
aad
add
jecxz
or
aas
les
adc
fstps
add
std
push
roll
imul
dec
jo,pn
xchg
or
sub
ds
in
in
scas
push
in
in
dec
loope
rclb
xor
movsl
js
jg
push
test
and
mov
mov
in
add
fbld
mov
adc
mov
xor
add
das
popf
push
enter
xchg
jg
cmp
ss
pop
rorb
aas
aam
inc
mov
pop
pop
outsl
pop
enter
sarb
cmpl
sbb
sbb
shr
push
xor
orb
adc
dec
jb
sbb
test
mov
aad
addr16
xor
int3
cmp
aad
adc
push
dec
test
adc
sbb
loopne
in
inc
nop
mov
pop
mov
in
mov
or
jno
call
mov
icebp
cmp
cmp
ss
jbe
mov
mov
testl
and
fiadds
inc
fwait
push
lods
movsb
js
mov
push
incl
mov
xchg
mov
subb
mov
int3
das
sub
bndldx
in
add
cmp
aam
cwtl
call
cltd
add
jbe
aas
jo
nop
dec
ficoml
push
jnp
adc
je
lds
rorb
mov
jbe
and
mov
mov
xchg
mov
fs
iret
sub
sbb
es
icebp
and
fidivs
sbb
testb
mov
mov
lods
mov
mov
ret
inc
lret
mov
fcomps
js
push
xor
jp
dec
inc
aas
mov
fwait
popl
call
sub
xchg
mull
pop
aaa
cmp
adc
pop
pop
leave
clc
cmp
pusha
pushf
aas
and
fsubr
inc
mov
out
popa
fsubrs
in
adc
aam
jae
mov
cwtl
inc
inc
sbb
test
pop
adc
adc
cwtl
push
mov
mov
iret
push
int3
cld
lahf
fldl
sarb
cmp
das
adc
sahf
pop
push
aas
nop
mov
rcrb
pop
xchg
in
mov
mov
gs
setle
dec
dec
dec
lods
movsb
mov
out
mov
insb
test
jnp
pop
cs
pop
mov
aas
repnz
lahf
and
dec
mov
cs
test
pop
mov
lret
in
cli
rorl
fisubrl
inc
pop
adc
rclb
jp
push
inc
dec
sti
push
test
popa
cmpb
rcrb
lods
shlb
popa
cwtl
cld
mov
jo
shlb
mov
out
push
sub
jnp
sbb
fsubrl
jns
ds
mov
pop
pop
mov
add
mov
imul
cmc
cs
push
in
pop
push
repz
cmpsb
lods
in
js
mov
ja
sbb
add
shlb
mov
in
in
enter
in
in
in
inc
mov
and
pop
sarb
mov
push
mov
jl
fs
cmp
fists
mov
jg
outsl
lock
mov
pop
stos
dec
pop
mov
jg
test
insl
cmp
mov
sub
in
adc
dec
cwtl
aas
enter
and
dec
push
in
and
lds
shrb
lods
enter
data16
add
test
rclb
inc
out
mov
lds
in
inc
mov
inc
lods
adcb
lds
in
pop
xor
rorb
mov
outsl
pop
outsl
fmuls
xchg
xchg
pop
jmp
adc
das
push
leave
sbb
cmpsb
adc
movsb
pop
cmpsb
pop
jp
xor
pop
adc
mov
cwtl
cmpsb
aas
inc
inc
in
sarb
call
test
xor
pop
test
rorb
cmpsl
add
inc
mov
andb
mov
scas
xchg
or
or
roll
adc
add
push
pop
insb
jo
pop
test
pop
push
mov
jae
aas
dec
jg
lock
nop
flds
aas
inc
and
les
imul
cwtl
test
push
scas
sbb
stos
loopne
clc
pop
call
xor
adc
outsl
fs
xchg
rcr
ja
loopne
pop
and
je
aas
cmpsl
sbb
push
mov
rorb
stos
lahf
loopne
ds
aas
insb
adc
ds
insl
dec
push
outsl
lahf
jb
inc
sbb
scas
mov
in
aas
les
fists
loopne
mov
sub
push
lods
fistpll
xchg
mov
mov
sbb
lock
in
push
lods
sbbb
xchg
js
fisttps
dec
adc
aas
push
adc
icebp
xor
cmc
or
sbb
lods
sbb
inc
sub
call
inc
sbb
test
sbb
jb
pop
sub
jb
pop
in
in
in
and
in
rorb
inc
mov
jae
pop
mov
movsb
mov
call
scas
lahf
adc
jg
scas
aas
sbb
test
scas
jg
cmp
test
pop
sahf
lods
adc
cmp
lahf
enter
inc
outsb
xor
movsl
inc
loope
jg
push
lahf
pop
mov
and
mov
es
test
inc
pop
lock
call
mov
sub
ljmp
jl
pusha
sub
push
adc
xchg
push
in
vcvtss2si
mov
pop
mov
leave
and
inc
fucomip
in
mov
in
cmp
fcoms
rcr
cmp
cmp
push
mov
xor
les
sbb
addl
inc
in
cs
adc
and
jo
fldt
rorl
in
xchg
enter
mov
push
xchg
or
lods
iret
lods
pop
in
inc
xor
mov
mov
mov
mov
dec
push
call
and
nop
push
inc
fsubs
rorb
fnstsw
adc
or
xchg
movsb
pop
jb
test
add
movsb
fistl
push
addl
pop
and
rcrb
mov
sub
movsl
push
mov
xor
loope
mov
insb
pop
xor
aas
pusha
adc
rolb
nop
mov
or
ljmp
aas
sbb
add
fmull
call
sub
sbb
cld
mov
mov
aaa
icebp
push
mov
rclb
mov
bound
xchg
and
gs
orb
xor
add
js
mov
sti
dec
stc
or
adc
adc
jg
inc
leave
add
in
or
jg
in
inc
dec
dec
es
mov
scas
inc
pop
cwtl
mov
sarb
push
push
enter
pop
mov
push
jp
jae
pusha
dec
mov
add
mov
xchg
mov
jns
jae
test
inc
mov
jnp
sub
push
mov
xor
cwtl
jo
test
adc
and
mov
fists
test
push
inc
bound
fdivrs
pop
or
xor
pop
mov
filds
call
pop
pop
scas
push
add
pop
mov
inc
xchg
aam
jo
mov
in
js
test
subl
jl
iret
bsf
mov
popf
loop
jo
mov
and
inc
push
cltd
nop
call
in
mov
neg
xchg
shrb
sarb
or
pop
icebp
mov
adc
jo
outsl
push
andl
sarb
outsb
or
pop
dec
or
and
add
mov
and
scas
bswap
rcrl
roll
roll
push
les
sbb
js
mov
movsl
xchg
adc
adcl
pop
repz
lock
adc
ret
fisttps
sbb
jl
fs
sti
dec
cwtl
xor
xchg
outsl
push
add
mov
mov
fistps
or
add
adc
in
cmp
pop
cmp
lahf
and
mov
inc
adc
pop
lds
mov
push
stc
or
ljmp
rcl
pop
imul
cld
jbe
scas
push
pmulhuw
add
sbb
or
sub
or
add
push
mov
mov
imul
fdivs
mov
pop
in
es
in
in
in
push
in
push
in
in
in
inc
push
in
in
in
in
push
in
in
in
push
in
push
in
in
in
mov
icebp
xor
icebp
add
std
filds
inc
xor
ret
outsl
decb
test
sti
xchg
rorl
loopne
lahf
lea
adc
and
lahf
in
insl
add
mov
test
jbe
in
adc
enter
push
fsubs
rcrl
rcrb
enter
insl
xchg
pop
mov
inc
or
jnp
cwtl
movsb
and
arpl
cmp
decl
inc
xchg
cmp
mov
cs
pop
adc
add
push
out
pop
add
mov
movsb
add
inc
adc
leave
mov
adc
movsb
push
mov
cmpsb
jge
xchg
sub
xchg
lods
int3
sub
fidivl
sub
cltd
movsb
stc
or
mov
popf
push
sbb
mov
icebp
fwait
in
cltd
pushf
push
xchg
dec
test
xorl
sub
xchg
mov
mov
dec
ror
mov
sarl
cwtl
incb
mov
nop
xor
push
pusha
movsb
loop
mull
xor
lret
decl
sub
outsl
nop
out
sbb
mov
mov
lock
lahf
or
addb
ss
push
iret
add
aam
scas
int3
js
insl
adc
aas
js
add
int3
jg
sbb
and
mov
push
jmp
dec
out
fcompl
pushf
mov
dec
int
fisubrs
aas
rcrb
or
xor
aas
rcll
xor
call
sbb
push
pop
dec
into
sbb
into
mov
aas
dec
adc
fs
test
in
jge
je
or
int3
scas
or
mov
adc
sub
fildll
fimull
adc
inc
incl
or
adc
loopne
nop
addb
repnz
rcr
iret
adc
pop
or
jno
mov
loopne
cmp
jg
xchg
or
push
lea
push
call
adc
add
rcr
sbb
rcr
pusha
pop
add
rcll
jo
enter
add
xor
mov
pop
mov
orl
rorl
inc
xor
ds
adc
inc
daa
pop
xchg
xchg
xchg
pop
push
dec
scas
inc
mov
imul
inc
pop
rcll
dec
add
sbb
andl
pop
adc
mov
fwait
dec
lea
loopne
pop
in
add
mov
pop
popa
ja
pop
xor
sub
ja
sub
shl
xchg
mov
dec
xlat
les
insb
cmpb
sub
push
inc
mov
daa
rolb
push
mov
jmp
int3
fsubs
cmpsl
fisubl
aaa
jbe
add
das
cwtl
sub
fxch
dec
ficompl
imul
clc
fstl
xor
fdiv
rol
in
inc
pop
scas
inc
mov
ss
scas
and
das
lock
inc
mov
mov
sbb
dec
stos
dec
leave
arpl
fsubrl
daa
xchg
sub
popf
and
iret
cwtl
or
enter
push
in
pop
sub
add
leave
lds
xchg
movsl
es
sbb
data16
imul
js
dec
in
addb
faddp
sub
ljmp
in
add
test
dec
pusha
insl
fcoms
or
scas
cmpsb
cmp
addr16
pop
andb
fbld
adc
adcb
or
adc
cmc
sub
loopne
scas
or
loopne
and
loopne
cmp
ficompl
loopne
and
xor
out
test
adc
adc
inc
loope
jge
mov
daa
push
adcb
stos
dec
test
mov
xlat
clc
daa
and
insl
dec
push
xor
dec
loop
dec
pusha
push
jb
daa
cwtl
rcrb
xlat
xor
aas
mov
inc
jb
jecxz
shl
xlat
dec
insl
stos
cmp
in
xor
nop
xchg
icebp
jbe
fdivrl
push
in
addr16
add
add
aas
xor
in
adc
or
sub
nop
sub
sub
je
and
sub
inc
loopne
xchg
cmpl
inc
inc
pop
sub
inc
out
jb
ljmp
rorb
jo
test
mov
fwait
test
sbb
cmp
clc
push
mov
pop
pop
aaa
cmp
dec
call
jecxz
mov
cmp
jmp
push
mov
jne
push
xchg
sbb
and
cwtl
push
dec
loope
test
xor
jo
add
in
inc
cwtl
ljmp
jbe
adc
xor
push
popa
rcll
mov
cmp
sub
dec
dec
adc
xchg
in
mov
fcmovbe
xchg
pusha
daa
jg
rorb
or
popa
and
cwtl
pop
fcomps
rcl
jg
enter
rcrl
mov
xor
cmp
push
pop
dec
es
mov
fidivl
pop
lock
dec
add
and
pop
enter
sbb
ja
daa
sbb
sub
jno
mov
icebp
ja
and
scas
insl
lcall
rclb
imul
dec
call
lock
jg
repnz
jnp
sbb
cmp
mov
out
in
adc
lods
insb
insb
or
cltd
pushf
adc
cltd
in
add
dec
rolb
dec
jnp
sarb
data16
cmpsb
dec
xor
push
mov
icebp
and
xchg
rol
js
dec
into
mov
aaa
sub
mov
in
xchg
arpl
dec
pop
push
mov
pop
nop
addr16
call
push
popf
adc
xchg
cmc
cmc
cltd
in
and
insl
repnz
shl
sbb
out
ds
cmp
inc
and
pusha
imul
pusha
mov
clc
sbb
sbb
cmp
add
pop
push
daa
xchg
pop
leave
enter
dec
dec
sbb
call
js
push
rolb
and
add
jb
push
inc
sub
fistpl
push
push
push
je
jnp
data16
and
fimuls
sbb
jns
jnp
cs
dec
pop
push
insb
push
xchg
mov
sbb
jle
iret
repz
movsb
scas
mov
repz
add
xor
out
mov
sbb
call
ficomps
into
push
shrb
ret
aam
ljmp
and
test
xor
cmp
repz
out
dec
pop
fs
mov
out
mov
hlt
repz
repz
push
sub
cmp
repz
pusha
push
dec
inc
sbb
out
or
push
call
sahf
out
pushf
mov
jns
jns
pusha
dec
cmp
fs
pop
out
sahf
out
inc
and
clc
xor
or
sbb
andb
scas
mov
push
lret
es
mov
iret
loopne
xchg
xchg
test
out
repz
push
enter
or
repz
repz
cmp
iret
repz
jp
pushf
test
into
sahf
out
cmp
testb
adc
sahf
out
sub
inc
push
out
sahf
out
test
jns
ret
in
cld
or
cmp
repz
sub
push
repz
rep
mov
ds
out
adc
pushw
sub
repz
repz
fs
xchg
iret
repz
mov
call
xor
adc
xor
or
or
aam
sahf
out
ret
test
jns
out
dec
xor
or
repz
cld
or
loopne
mov
cmp
mov
stc
cmp
repz
xor
push
repnz
jns
cmpsl
out
rol
mov
out
sahf
movsb
xchg
test
push
jl
out
inc
cmp
or
pop
repz
shr
in
mov
iret
pushf
mov
pop
inc
lcall
cli
push
call
fadd
push
mov
pop
lods
lcall
pcmpgtd
jns
negl
adc
adc
sbb
or
jns
out
add
jns
or
mov
rcrl
push
xchg
mov
sarl
into
push
das
jbe
out
fisubrs
inc
push
push
mov
cmp
repz
mov
push
stc
cmp
repz
xor
adc
sbb
jns
cmpsl
call
sahf
out
sahf
jle
fs
sub
out
sbb
add
sbb
out
sahf
test
sbb
jl
jb
je
cmp
push
adc
out
cmp
or
cmpsb
pop
push
repz
repz
repz
jb
push
inc
sub
sahf
cmpsl
stc
cmp
out
push
fcmove
mov
scas
sahf
jle
pop
fidivrs
out
and
ficoms
adc
out
int3
mov
jns
out
bound
cs
sarl
add
adc
int3
sarb
cmp
mov
cmp
rep
pop
push
inc
xor
imul
adc
ficompl
mov
mov
jns
push
inc
xor
repz
out
or
adc
fmulp
repz
sarb
cmp
repz
pop
dec
cmp
stc
cmp
repz
add
adc
jns
cmpsl
out
ret
sahf
out
sahf
xchg
xchg
dec
jns
out
cmp
and
repz
repz
adc
enter
cmp
movsb
xchg
jle
pop
dec
int
repz
sub
sbb
sbb
enter
mov
outsb
push
cmpsb
adc
sbb
jl
loope
and
and
cli
push
call
push
add
mov
add
push
mov
jns
mov
loopne
push
jns
jnp
mov
push
inc
pop
stos
testl
push
stos
ja
mov
out
outsb
gs
stos
out
adc
add
out
stos
jae
enter
mov
cmp
ja
sub
push
and
int3
repz
repz
jb
dec
aad
cmp
cmp
sbb
negb
or
fbstp
in
mov
push
and
and
movb
out
lods
js
pop
repnz
outsb
push
movsb
call
xor
push
jmp
mov
cmp
repz
lret
int
cmp
repz
iret
jecxz
out
lcall
xor
xor
out
cmp
cmp
cmp
jns
out
ds
inc
inc
sahf
out
sahf
inc
inc
inc
inc
inc
inc
jns
out
dec
dec
dec
dec
dec
out
sahf
out
dec
dec
push
push
sahf
out
sahf
push
push
push
push
push
push
jns
out
pop
pop
pop
pop
pop
out
sahf
out
pop
pop
pusha
popa
sahf
out
sahf
bound
gs
out
push
out
sahf
out
outsb
outsl
jo
sahf
out
sahf
jb
je
jbe
jns
out
js
jp
jl
jns
out
jle
addb
fwait
stos
mov
sarl
or
adc
cmp
repz
push
bound
repz
test
sahf
out
cmp
repnz
adc
jns
out
sub
dec
pop
jo
jns
out
adcb
sahf
leave
cld
or
repz
cmp
pusha
repz
rep
jl
xchg
pushf
iret
repz
movsl
scas
mov
leave
sarb
repz
in
idiv
jns
cmpsl
stc
or
adc
jns
out
gs
mov
mov
aad
sti
or
xor
sub
cmp
repz
addr16
xchg
iret
repz
cmpsl
mov
popf
out
lcall
fcomip
scas
add
gs
xor
jbe
jo
adc
fs
insb
addb
sbb
inc
jb
popa
je
push
outsl
outsl
insb
push
push
outsb
jnp
dec
das
je
push
outsl
arpl
jae
inc
imul
jo
insb
outsl
mov
gs
mov
js
inc
gs
push
popa
insb
push
imul
outsl
ja
mov
addr16
into
sbb
in
scas
std
mov
sub
je
imul
jb
ss
filds
arpl
jns
je
repnz
pop
in
xchg
insl
cs
mov
sbb
jb
jo
arpl
mov
in
jno
imul
shl
pop
nop
pop
push
mov
pop
push
and
daa
cmp
sbb
add
mov
mov
popa
jb
insl
and
outsb
xor
dec
pop
shlb
sti
mull
dec
sub
je
dec
outsl
jbe
gs
outsl
je
insb
sbb
sub
jne
stos
sbb
pop
cmpsb
inc
jne
pop
cmpsl
out
subps
arpl
xor
mov
inc
and
fs
jne
xor
mov
dec
inc
inc
sbbb
insl
cli
sbb
gs
adc
stos
jp
addr16
gs
adc
or
shll
cmp
dec
sbb
fisttpl
mov
je
adcb
xor
mov
cmp
sbb
sub
jp
mov
push
inc
ret
retw
cmp
enter
outsl
aaa
out
cmp
push
or
xor
aam
pop
mov
mov
outsb
insl
inc
xchg
push
jnp
and
in
leave
dec
fs
call
cmp
jb
sub
sbb
shll
insb
fs
sub
data16
dec
inc
je
dec
inc
mov
xor
cmp
inc
inc
xchg
sti
cmp
rorb
adc
imul
push
adc
dec
bound
mov
popa
push
cmpsb
xor
fs
dec
roll
jbe
and
pop
xchg
add
sub
mov
shlb
call
and
sar
insb
ret
add
dec
cmp
imul
jo
test
xor
inc
mov
pop
in
lods
daa
adc
lcall
adc
add
js
repz
cwtl
sub
mov
mov
fsubrs
push
gs
in
and
push
add
sbb
add
cmp
es
shl
xor
es
pushf
stc
pop
cmpsl
jg
cmpb
inc
lea
shll
mov
push
pop
push
adc
or
or
add
arpl
pop
mov
and
or
je
in
pusha
add
adcl
sub
pop
or
leave
add
mov
sbb
xchg
mov
xchg
dec
adc
les
mov
mov
inc
or
dec
and
sbb
jbe
and
sbb
jo
addb
mov
dec
loop
pop
cs
inc
pop
leave
and
dec
stc
mov
push
lods
inc
dec
xchg
cmp
add
or
pop
decl
das
xor
xor
xor
cmp
cmp
mov
pushl
cmp
ss
popa
data16
arpl
cmp
fwait
xchg
icebp
pushl
cmpsl
mov
mov
pop
loope
shlb
push
jnp
andl
and
sarb
inc
push
out
ds
andb
mov
and
into
idivb
pop
push
jbe
push
pop
pusha
push
push
fistpll
push
lock
cmpsb
inc
dec
inc
rolb
andb
fnsave
scas
loopne
cmpsb
push
adc
jo
inc
fnstsw
cmp
pusha
and
lahf
push
repz
fidivl
cmpsb
inc
mov
out
mov
mov
popaw
push
jbe
mov
rclb
bound
inc
pop
push
push
dec
push
fidivrs
pop
push
orb
inc
push
mov
shrb
idivl
push
addb
inc
xor
xor
inc
add
xor
incl
xor
inc
inc
xor
add
js
inc
add
cmpsb
rol
mov
ret
mov
loope
rolb
xor
arpl
aaa
mov
mov
ret
xor
data16
xor
sub
fdivr
add
clc
imul
aaa
bound
fs
gs
mov
fs
and
ss
loopne
pop
sub
aad
mov
sarb
inc
cmp
sbb
stos
xor
xor
cmp
bound
repnz
inc
arpl
ss
icebp
outsl
add
sub
sub
add
xor
cmp
cmpb
std
add
inc
jmp
push
inc
inc
fdivl
adc
fisttpl
mov
add
add
mov
mov
das
cmpsl
jnp
push
xor
ss
or
int3
xor
sub
sbb
inc
inc
inc
inc
xor
into
in
push
or
xor
add
outsl
push
pusha
inc
push
stos
inc
iret
push
inc
adc
cmp
or
sahf
in
scas
and
test
or
lea
cs
xor
or
out
cltd
cmp
cmp
mov
adc
and
jo
push
adc
pop
adc
xor
jb
negb
ficompl
adc
pop
repnz
push
scas
sbb
add
jo
inc
rclb
and
mov
add
dec
adc
sub
rorb
mov
test
or
mov
xchg
adc
or
aaa
out
or
push
push
shr
mov
jge
cwtl
mov
pop
pop
push
addr16
outsl
rolb
jl
cmpl
iret
test
pop
sbb
sbb
inc
and
sbb
dec
popl
rorl
ficomps
idivb
fbstp
pop
mov
icebp
ja
add
loopne
xchg
and
in
jmp
push
mov
daa
push
jb
inc
out
stc
icebp
and
pusha
ja
dec
hlt
xor
or
push
and
andb
pop
mov
repnz
jmp
pop
add
sub
cmp
sub
pop
xchg
mov
test
push
hlt
popa
bound
adc
or
mull
enter
cmc
sub
adc
pusha
mov
push
sbb
mov
adc
pushl
je
outsl
outsb
lahf
icebp
add
push
and
pop
dec
lret
inc
or
ret
xchg
inc
cld
mov
ror
int
imul
test
pop
add
pop
icebp
orl
xchg
stc
ja
ret
mul
add
mov
jae
add
cmc
mov
jmp
sbb
jg
mov
mov
jo
sti
leave
sub
fildl
sbb
jbe
jb
add
icebp
mov
dec
stc
dec
and
add
add
addb
pop
adc
add
hlt
rcl
insb
and
adc
out
mov
icebp
mov
loop
adc
fisttps
pop
xor
mov
sbb
add
inc
test
adc
daa
jmp
add
xchg
mov
daa
add
rcl
adc
cmp
stc
dec
and
sbb
jno
setle
sbb
or
loope
add
add
inc
shlb
add
xor
pop
outsl
bound
lods
bound
insb
or
sbb
cmp
xchg
in
daa
lock
xor
mov
pop
push
imul
jno
push
mov
andb
ret
pop
in
lcall
adc
cmp
add
mov
pop
adc
fcmovb
ja
sar
int
daa
and
inc
add
inc
imul
xor
push
push
ss
jnp
nop
rolb
inc
arpl
jae
data16
cmp
gs
sbb
xor
xor
xor
sub
inc
xor
pusha
loopne
add
sbb
add
dec
testl
lcall
shll
lret
lret
cli
shll
cli
and
clc
mov
mov
test
ret
ljmp
mov
xor
test
jmp
mov
shrb
mov
cs
jle
in
cmpsb
cs
repnz
popaw
xor
aaa
cmp
xor
arpl
add
push
arpl
xor
xor
decl
loopne
add
stos
hlt
out
in
fldt
mov
test
add
sti
outsl
fwait
std
mov
mov
shl
lods
stos
mov
mov
rcr
mov
add
mov
aad
add
ret
aam
lret
push
and
arpl
inc
jp
adc
insl
and
stos
cmp
loop
roll
cs
fadds
add
jo
das
das
jae
xlat
out
mov
fadd
adc
jo
mov
in
sbb
pop
shlb
cs
xor
pop
idiv
ss
fs
shlb
out
dec
insb
cld
das
bound
das
push
xor
xor
xor
xor
cmpb
cmp
data16
add
push
sub
mov
inc
fisubl
sbb
int
imul
and
pop
push
jb
jbe
jmp
pop
mov
insb
push
outsl
jb
adc
outsl
imul
sbb
pop
xor
popa
outsl
xchg
sbb
fildl
lea
ja
push
dec
push
dec
jae
dec
sbb
dec
pop
jmp
dec
pop
nop
rolb
push
pop
jo
dec
sbb
pop
mov
call
mov
int
mov
lea
and
subl
popa
outsb
outsb
outsl
jl
iret
ss
and
outsb
and
inc
dec
push
and
outsl
fildll
cs
mov
pop
inc
ror
out
xchg
cld
push
sbb
cli
mov
clc
dec
jle
int
sbb
jp,pt
sti
push
inc
shl
ja
xchg
pop
adc
push
push
jle
jmp
lea
jo
add
lret
jp
movb
mov
stc
fidivs
outsb
addr16
mov
pop
xchg
sbb
mov
push
push
pslld
sahf
cmp
cmp
pop
and
jo
and
mov
aaa
push
sub
cs
sub
jl
call
shrb
test
jb
popa
or
pop
test
pop
and
out
inc
cs
and
xor
mov
sahf
jae
arpl
xlat
inc
dec
adc
inc
or
mov
cmp
sahf
push
push
or
jno
pop
push
jl
adc
lcall
fdivr
or
mov
repnz
dec
inc
fiadds
jno
outsb
and
and
roll
jns
aas
push
jp
sbb
push
ret
jo
add
mov
add
dec
sub
cmp
insl
mov
jmp
fidivrl
mov
add
out
call
xor
or
adc
shl
and
and
cmc
sahf
inc
cld
or
xor
mov
jp
cmpl
xchg
js
inc
fwait
cld
sub
out
cmp
cmp
mov
push
mov
adc
popf
addr16
push
dec
mov
call
into
les
dec
jb
push
daa
adc
mov
pop
fldl2t
pop
or
fdivs
add
push
test
xor
fcomi
addr16
je
in
loope
fwait
add
adc
repnz
jge
cld
fwait
cmp
add
lcall
out
xchg
push
sbb
push
pop
push
adc
mov
cmpsl
inc
jns
pop
dec
ret
inc
data16
lret
loopne
sub
mov
or
cs
loopne
insl
incl
dec
ja
aad
insb
xchg
xchg
and
shlb
insb
or
fiaddl
dec
cwtl
and
jne
dec
jno
add
xor
jbe
insb
adc
adc
push
sub
sbb
cmp
sbbl
orl
ret
adc
or
popf
xlat
lret
jg
out
or
adc
or
test
xor
lcall
sub
add
push
mov
xchg
push
pop
or
insb
adc
push
push
clc
mov
dec
mov
mov
add
and
orb
xchg
and
scas
daa
rclb
pushl
aas
adc
sbb
out
adc
outsb
imul
add
insb
cmpl
pop
popa
fs
jae
imul
push
pop
inc
jo
pop
arpl
mov
imul
gs
gs
pop
push
bound
lods
inc
push
aaa
xor
jge
daa
imul
outsb
dec
mov
dec
xlat
sar
test
inc
imul
call
add
push
dec
inc
dec
lldt
mov
inc
or
push
das
daa
gs
adc
jmp
iret
jnp
adc
add
push
cmp
add
popf
push
enter
test
rolb
mov
jmp
ja
pop
repnz
lock
dec
push
pop
nop
inc
sbb
push
push
aad
and
add
or
jb
popa
add
jnp
out
and
push
sub
and
pop
sub
cmp
and
out
test
sbb
pop
jae
imul
fists
insb
ds
adc
imul
mov
pop
daa
into
and
outsl
sbb
adc
insl
bound
jb
jae
jne
mov
and
sbb
aas
jae
mov
adc
cmpsb
je
mov
jecxz
push
dec
je
out
mov
jb
jbe
aaa
insl
cmp
imul
sub
add
inc
cmp
inc
pop
fadd
pusha
sub
inc
jbe
leave
ret
add
pop
data16
out
andb
insl
insb
dec
adc
sbb
lods
ss
jae
les
cmp
jb
gs
clc
pop
insl
add
out
sbb
dec
das
outsb
push
and
repz
imul
jno
lods
pop
daa
out
jbe
sbb
es
jle
push
sbbb
imul
sar
and
dec
fcom
mov
repz
dec
mov
inc
fimuls
clc
icebp
loopne
jmp
cmpsl
sub
xor
out
in
and
inc
outsl
sbbl
daa
mov
xor
sbb
jecxz
push
insb
sbb
mov
arpl
pop
scas
and
insb
ret
ja
mov
arpl
jnp
stos
or
add
xchg
lret
popa
scas
or
lock
push
jmp
adcb
mov
and
outsb
call
lods
mov
mov
mov
jae
xchg
xchg
xor
popa
imul
add
iret
jnp
dec
cmc
scas
and
mov
loopne
mov
stos
push
or
push
inc
sahf
fxrstor
sti
insl
insl
xor
sub
mov
push
pop
pop
sub
mov
sbb
daa
sbb
xor
add
daa
sbb
mov
sbb
adc
pop
mov
dec
pop
das
sbb
mov
sbb
sarb
ja
es
aaa
sub
mov
or
adc
xor
xor
xor
lock
xor
dec
xor
popa
xor
jno
jge
fisttps
xchg
xor
mov
shll
xor
xor
movsb
xor
xor
pushl
out
xor
xor
xor
xor
xor
ja
test
xchg
xor
xor
xor
xchg
jg
sbb
inc
xor
push
xor
mov
and
lret
add
and
pusha
or
adc
inc
xor
cmp
data16
sub
into
ror
ljmp
int
shl
and
sub
sub
pop
leave
and
inc
orb
jo
mov
test
add
pop
inc
or
rorb
add
insb
jbe
outsb
add
inc
test
inc
or
adc
xor
pop
and
dec
inc
stos
xchg
push
add
mov
sbb
mov
add
insl
or
pop
add
pop
xor
adc
in
push
or
pop
cld
sti
popa
push
push
popa
pusha
mov
rdpmc
pop
leave
sub
xor
xor
test
add
in
sub
sahf
insb
lcall
xor
ss
sub
xchg
repnz
lods
push
jne
or
mov
adc
shl
mov
aaa
daa
mov
sbb
adc
out
jo
sub
rolb
rol
testb
jno
xchg
daa
dec
push
push
loopne
das
dec
loop
in
lock
push
push
into
subb
ds
lods
mov
call
shrb
and
pop
dec
xchg
push
pop
sub
movl
mov
dec
cmp
add
mov
dec
out
loopne
dec
sub
ds
or
add
shll
xlat
inc
mov
wbinvd
dec
out
push
mov
inc
mov
pusha
dec
dec
test
sbb
pop
lea
push
test
aad
mov
insl
sbb
jmp
adcb
cmpsl
inc
testb
sar
dec
sub
test
xchg
adc
call
push
push
xchg
popa
xlat
sub
sub
cld
aas
or
inc
sti
jne
dec
loop
mov
aaa
cmp
mov
fimuls
movb
push
data16
iret
movsl
cltd
cmp
lret
xor
add
pop
add
jbe
aaa
add
shlb
lret
sbb
fcompl
rcrb
sbb
or
xchg
sbb
xchg
dec
mov
mov
xor
sub
in
or
jns
daa
cmc
movsb
jp
cmp
mov
nop
sub
jb
cmp
inc
cmpsb
in
inc
cmp
fs
data16
repnz
frstor
rol
push
xchg
out
xchg
insl
movsb
push
cltd
shll
adc
andb
movsl
jmp
mov
lea
xor
insl
sbb
stos
jnp
and
je
cmp
adc
fs
add
mov
mov
ljmp
test
iret
adc
and
push
rol
in
cli
aas
js
add
mov
scas
xchg
pop
jnp
call
shlb
pop
aam
pop
in
and
xor
jge
mov
cmp
popf
push
xor
gs
call
or
std
push
divl
dec
xchg
mov
popa
and
insl
in
leave
sbbl
jnp
add
pop
xor
add
js
call
cmp
fisubs
and
xchg
insl
cmp
gs
movsl
sbb
and
rcll
mov
cwtl
ret
and
jmp
stc
stos
inc
mov
dec
pop
ds
and
mov
in
into
clc
mov
sub
in
sbb
scas
int3
icebp
test
inc
lahf
mov
xor
mov
scas
out
adc
pop
nop
shll
pusha
sbb
andb
sbb
or
xor
bound
jecxz
jbe
shl
mov
pop
mov
pop
sbb
in
daa
sbb
pop
sti
add
xchg
sahf
out
subb
jae
jnp
addl
insb
cmp
cmp
inc
mov
test
cmp
loopne
dec
jne
pop
pop
daa
adc
call
ret
inc
and
hlt
or
pop
leave
and
popf
out
popf
insl
arpl
and
pop
pop
ss
enter
fnsave
push
rcrb
test
add
xchg
add
or
inc
test
xchg
adc
ss
lock
or
das
add
es
out
add
lgdtl
popf
call
pushf
add
cmp
movl
fldenv
ja
call
popl
loopnew
sub
add
pusha
add
or
inc
and
jge
sub
xlat
cmpsb
fwait
mov
lea
orl
add
cmpl
mov
lock
xor
sahf
xor
aaa
or
pop
dec
xchg
jmp
es
in
add
cli
lcall
pop
leave
lcall
movsl
cmp
or
dec
or
aam
pop
mov
add
xor
nop
lea
fs
cmc
call
lea
adc
push
xor
movsl
or
test
or
sbb
cltd
inc
xor
cmp
xor
pop
pop
mov
and
stos
cltd
add
pop
sbb
cmp
jmp
and
mov
xor
push
or
pop
sub
push
push
push
inc
push
adcb
jmp
inc
call
and
mov
xor
jb
dec
hlt
int
ljmp
pop
pop
or
or
inc
xchg
call
dec
clc
mov
cmp
push
xchg
imul
xchg
add
flds
decb
loope
inc
stc
cmp
and
add
xchg
cmp
loopne
int3
xchg
addr16
adc
ret
in
popf
xchg
sbb
push
jae
xchg
popf
addb
pop
jge
pop
dec
mov
outsb
test
and
xchg
aam
sub
adc
es
shrb
cltd
in
mov
xchg
lock
inc
xchg
adc
sub
rol
test
inc
fidivrl
cs
add
cmp
sub
cmp
xchg
and
mov
fadds
rcll
call
adc
and
loope
dec
sbb
rolb
mov
xchg
jp
jnp
or
jb
movsl
out
pop
xchg
lods
jmp
cmp
in
sub
and
push
movsb
mov
mov
mov
xchg
mov
loopne
or
lods
and
mov
push
imul
mov
out
out
pushf
sbb
iret
cmp
cmpsb
push
mov
or
push
leave
inc
cld
xchg
call
jns,pn
iret
xchg
sbb
jbe
and
xor
mov
mov
sub
sbb
and
and
jo
adc
adc
and
repz
sbb
fstpt
sub
pop
out
jl
insb
sub
nop
inc
mov
xchg
ret
int3
dec
je
add
nop
or
jno
sbb
nop
xchg
clc
fs
je
dec
movsl
ror
inc
or
dec
mov
clc
or
test
push
dec
or
or
push
jmp
popl
lret
lret
or
xchg
pop
jg
or
and
nop
hlt
cmp
sbb
clc
jns
in
xchg
dec
fwait
pop
xor
jnp
pop
jnp
inc
cs
mov
or
add
cmp
inc
fimuls
xchg
pop
and
mov
cltd
mov
fstps
scas
nop
mov
jmp
cwtl
mov
mov
add
ljmp
xchg
xor
cmp
shl
ss
daa
call
dec
daa
mov
dec
jl
jbe
in
push
cld
cld
mov
scas
xchg
mov
hlt
xor
or
lcall
std
gs
inc
lret
loopne
mov
and
add
add
and
addr16
jb
fwait
mov
outsl
push
jns
dec
inc
pmuludq
hlt
sub
rorl
adc
jns
dec
cmpsb
dec
pop
xor
arpl
mov
adc
adc
sbb
nop
push
cmpsl
fimuls
jbe
fwait
jns
mov
dec
push
jmp
push
xchg
cmp
adc
icebp
dec
cs
mov
xlat
and
mov
hlt
adcl
mov
hlt
mov
sbb
gs
std
xchg
mov
add
mov
dec
movsb
rcll
xor
es
inc
inc
add
loopne
add
push
not
aaa
popf
aad
rcrl
pushl
movsl
sarl
cmp
sub
lods
jecxz
int3
push
movsb
adc
imul
hlt
mov
pop
add
or
inc
or
jl
mov
movsl
mov
int
sbbb
or
add
adc
and
jo
pop
inc
mov
adc
lahf
add
xorb
xor
adc
scas
aam
rcll
pop
ja
movsb
xor
adc
sahf
decl
or
test
push
outsb
divl
push
mov
notb
pushf
add
in
sbb
push
in
xchg
sbb
mov
nop
inc
scas
clc
dec
add
adc
add
and
mov
add
enter
mov
sbb
clc
push
fucom
adc
call
pop
inc
ss
out
test
xchg
ss
rolb
or
lock
xchg
xchg
pop
add
fbld
and
xchg
aad
xchg
add
inc
sbb
add
xchg
xchg
ss
rolb
adc
insl
cmc
enter
rolb
insl
push
pushl
fstl
jle
inc
not
stos
insl
aaa
jae
insb
pop
push
xchg
jmp
mov
add
cmpsl
test
test
out
sbb
push
repnz
flds
fcmovne
mov
mov
mov
cli
rcrb
stc
jne
clc
and
enter
and
pop
cmp
add
inc
cs
andb
insb
ljmp
cmpb
mov
add
add
sub
in
adc
pop
js
and
insb
lods
jns
inc
mov
fistpl
sbb
aaa
dec
sbb
push
in
fidivs
ja
push
call
pop
incl
add
jb
divb
orb
xor
cmp
inc
push
enter
subb
add
xor
jecxz
push
sbb
xchg
mov
add
arpl
mov
sub
xchg
and
in
aas
cmc
cmp
push
xchg
inc
dec
jg
jg
inc
scas
adc
jb
aaa
cmp
jle
add
ret
jle
add
in
xor
add
inc
sub
sbb
repz
inc
dec
or
dec
call
repnz
fs
mov
ja
fdivl
add
popl
push
and
and
test
dec
clc
push
push
in
add
mov
adc
adc
push
mov
outsl
clc
insl
es
aad
lea
mov
cs
lock
and
fisubl
fdivs
pop
jbe
add
fdivr
jl
iret
stc
cmp
mov
repz
or
lret
push
icebp
push
add
push
enter
jns
pop
pop
jnp
fs
push
dec
jnp
push
cmpsb
inc
loop
and
or
cltd
ljmp
and
pushf
aam
ds
stos
sarb
xchg
pop
xor
dec
sub
mov
add
mov
out
scas
add
adc
and
jns
and
cltd
cmpl
add
nop
add
fwait
mov
sbb
jns
fs
js
dec
dec
cli
push
in
mov
loope
adc
sbbb
adc
inc
stc
adc
inc
dec
adc
js
xor
push
js
jmp
push
sbb
add
sbb
repnz
add
sub
sbb
or
xchg
sub
sbb
and
or
inc
and
fstl
in
jbe
or
or
js
out
inc
push
fwait
jbe
xchg
add
cmpsb
or
test
inc
add
add
mov
xor
dec
xor
call
inc
call
pusha
and
push
ja
repz
xchg
inc
pusha
mov
xchg
mov
inc
lods
jne
nop
subb
lods
hlt
in
je
movsb
sbb
movsl
clc
sub
and
pusha
das
fdivr
out
cli
orl
or
xchg
pop
push
pop
dec
dec
dec
cmp
fsubs
and
out
cltd
jns
xchg
fldt
loop
test
enter
movsl
jno
mov
add
pop
cmpl
test
lcall
mov
in
jae
jb
inc
enter
push
lcall
push
lcall
stc
jb
add
xchg
mov
lock
mov
xchg
dec
dec
enter
sbb
hlt
jno
jb
push
mov
lahf
jno
add
and
call
add
pushf
fsts
call
push
cmp
jno
mov
cmp
and
cmc
adc
sbbb
fisttps
push
lock
jo
or
add
mov
adc
inc
rcrb
inc
mov
inc
jecxz
xor
hlt
push
jmp
pop
add
lock
xor
inc
repz
leave
xchg
int3
and
sbb
ss
and
xor
in
lret
mov
addl
fs
enter
in
xor
shrl
push
call
insl
or
sub
icebp
mov
out
push
or
ja
outsl
call
nop
sub
cmp
inc
clc
mov
or
mov
and
inc
movsl
pusha
mov
ret
push
xlat
pop
lea
mov
outsb
fucomi
je
loope
mov
or
outsb
dec
popa
lret
cmp
pop
xchg
pushf
lcall
outsb
nop
iret
inc
xchg
clc
mov
inc
xchg
sbb
insl
imull
mov
mov
arpl
leave
adc
and
xchg
insb
hlt
inc
push
or
pusha
or
enter
jb,pn
xor
xchg
inc
ds
sub
insb
or
jb
sbb
ret
insb
imul
scas
sub
cmc
imul
in
mov
imul
sbb
push
push
jmp
loope
repnz
push
and
or
add
mov
in
add
ret
call
mov
push
and
lcall
nop
lea
and
iret
or
imul
jecxz
fcoms
mov
lds
jp
pop
mov
xchg
and
dec
loopne
lds
jecxz
stos
in
fchs
mov
lods
lds
xchg
sbb
and
pop
call
mov
in
adc
lret
call
pop
mov
mov
mov
adc
in
scas
test
push
lret
inc
jne
lret
or
xchg
inc
pop
popa
pop
push
adc
inc
push
loop
push
daa
push
fs
or
cmpsl
mov
cmp
push
pop
andl
or
add
xor
ret
cmp
mov
test
cmpsb
cmp
subl
rcrl
xchg
xchg
fstps
jne
mov
inc
insb
jno
xor
pop
adc
insl
jecxz
jmp
add
mov
mov
or
rcll
cmp
dec
jecxz
aam
sbb
mov
mov
jle
cmp
push
imul
pusha
sbb
jp
test
adc
subb
mov
test
fidivl
adc
mov
sub
inc
jo
mov
xor
add
jp
xor
mov
mov
inc
imul
cmp
inc
pop
and
es
movsl
insl
adc
inc
jb
ja
ss
inc
pop
mov
or
push
or
sub
test
sbb
mov
adc
test
mov
repz
sub
mov
movsb
lds
cltd
dec
add
xchg
and
fildl
cs
mov
cmp
jp
adc
ss
jp
data16
rorl
push
inc
pop
xchg
mov
adc
pop
ss
add
nop
iret
in
inc
add
out
arpl
adc
mov
mov
adc
je
xchg
loopne
jmp
jno
adc
and
pop
adc
sub
inc
adc
xor
je
dec
push
dec
hlt
add
loope
mov
adc
fstpl
nop
inc
imul
test
dec
fcmovnb
adc
movsb
nop
jnp
xor
mov
movsb
in
or
xor
dec
jmp
ljmp
xchg
or
inc
fbstp
adc
jmp
push
ficoml
arpl
adc
fldl
xor
fisubrs
sbb
xchg
lock
inc
adc
in
rcr
pop
xchg
adc
or
dec
les
mov
xchg
mov
push
call
and
nop
pusha
jnp
movsl
insl
jecxz
adc
and
dec
jo
inc
add
xor
pusha
dec
rolb
in
idivl
xor
pop
mov
xchg
jecxz
adc
and
cmpsl
pop
xchg
pop
sub
mov
ja
bound
mov
pop
xor
lods
ret
sbb
xchg
and
mov
mov
mov
adc
xchg
mov
inc
fstps
fsubrl
adc
sbb
dec
faddl
insl
inc
dec
adc
ret
js
add
adc
dec
pop
movsl
insl
and
cmp
xchg
imul
lods
and
out
rcrl
jno
ret
mov
lock
push
imul
mov
mov
cltd
xchg
sub
mov
adc
jb
mov
rcr
in
pushf
xchg
or
in
dec
push
jo
cmp
pop
mov
lea
repnz
push
inc
mov
es
pop
repnz
pop
inc
pop
sub
enter
xor
inc
inc
ret
test
sahf
ljmp
movsl
adc
test
adc
shlb
sbb
mov
adc
dec
insb
mov
pop
stc
dec
pop
outsl
or
xor
aas
cmc
das
pop
pushf
sbb
mov
ret
dec
add
dec
cs
pop
or
pop
dec
rolb
ficomps
and
je
imul
nop
pop
pop
in
sbb
imul
insb
and
xchg
inc
push
jl
nop
inc
outsb
cmpsl
adc
pop
and
cmp
ss
dec
popf
ljmp
popf
add
jg
jo
jmp
enter
pop
mov
out
popf
adc
jno
push
ficompl
shlb
inc
xchg
mov
popf
shlb
and
sbb
popf
xchg
pop
or
in
mov
lods
sub
popf
xor
and
or
and
in
push
shrl
or
sub
mov
shlb
pusha
stos
popf
add
nop
dec
ficoms
push
fidivl
popf
jns
adc
xchg
or
lea
push
in
push
xchg
popf
repnz
or
cltd
rorb
popf
jb
and
mov
inc
xor
adcb
popf
in
or
push
xor
mov
mov
popf
xchg
and
inc
xor
test
mov
popf
or
pusha
and
popf
adc
sbb
cmp
push
pop
rorb
sbb
popf
xor
fwait
rclb
out
adc
in
push
aad
popf
and
fidivl
popf
and
cltd
cmp
mov
or
push
add
push
mov
mov
inc
mov
adc
push
adc
ss
ja
dec
fcmovnb
or
xor
and
fabs
mov
mov
fstpt
cmpsb
and
mov
movsl
insl
popf
sub
lret
subl
sub
roll
repnz
push
movsl
insl
arpl
sub
adcl
movsl
push
imul
divl
sub
icebp
mov
xor
push
arpl
popf
adc
orb
fstpt
fidivs
rclb
mov
test
mov
sub
popf
sub
lea
sbb
push
xchg
mov
cmp
mov
pop
dec
outsb
mov
das
mov
rolb
mov
fwait
and
mov
enter
popf
sub
sahf
dec
movsl
insl
jecxz
mov
dec
in
push
das
ja
lds
mov
dec
and
sbb
mov
fidivl
popf
das
adc
add
jg
dec
enter
nop
lret
mov
adc
xor
inc
mov
lcall
or
fisttpll
and
enter
popf
lret
test
nop
pop
dec
dec
pushl
fistpl
add
test
loopne
xchg
mov
aaa
inc
enter
leave
dec
mov
push
and
cmp
data16
xor
xchg
cmpsl
adc
mov
dec
repnz
and
ss
dec
push
fidivl
push
popf
xchg
mov
jnp
cmpsb
test
xchg
jbe
xchg
dec
insl
or
fidivl
popf
cmp
inc
sbb
push
sbb
cmp
dec
push
pop
sbb
or
push
sti
dec
insl
lahf
orl
sbb
and
hlt
ret
dec
scas
sbb
adc
insl
popf
insb
jmp
lods
add
insl
faddl
outsb
pop
sub
cmp
rcrb
sti
inc
xor
push
imul
insl
fdivl
xchg
out
cmpb
and
dec
pop
nop
or
dec
clc
mov
insl
sbb
lahf
sbb
dec
sbb
pextrw
dec
mov
orl
add
ss
popf
and
testb
or
cmp
inc
cmp
xchg
mov
dec
ljmp
popa
add
scas
movsb
lea
sub
push
xchg
mov
lea
in
xchg
inc
in
pop
inc
aad
add
sub
cmpsl
xchg
xchg
sub
push
fidivl
es
mov
jnp
out
add
fists
push
outsb
stos
test
push
lea
push
ficompl
xchg
mov
xchg
pop
inc
imul
inc
ljmp
inc
aad
movsl
insl
ret
adc
or
sub
clc
and
rol
test
add
aam
inc
loop
dec
jae
aam
inc
rcrb
addr16
stc
xor
popf
cmp
mov
inc
pop
jnp
icebp
stos
mov
adc
imul
xchg
and
imul
orl
add
inc
fiaddl
cmp
sbb
scas
inc
nop
sbb
inc
inc
inc
in
shrb
popf
xlat
sbb
and
push
or
insl
sbb
rol
inc
call
outsb
xchg
xor
mov
pusha
add
pop
xchg
mov
pop
inc
pop
mov
mov
sbb
jno
pop
mov
popf
pop
inc
shlb
push
push
das
xchg
mov
fidivl
int3
jge
popf
jno
xchg
push
popf
inc
jae
sub
mov
mov
es
push
jbe
sbb
pop
ja
dec
fcmovnb
popf
push
adc
je
inc
push
lods
fstpt
push
jmp
push
imul
jb
inc
mov
push
movsl
insl
jecxz
popf
push
adc
jno
popf
imul
movsl
fistl
adc
rcrb
and
popf
inc
nop
inc
movsl
insl
jecxz
popf
pop
mov
popf
mov
insl
fsubl
insl
ret
xchg
push
popf
mov
fcoml
adc
push
popf
idivl
add
frstor
popf
movsl
insl
jecxz
lahf
push
mov
mov
lcall
mov
cmp
sbb
sub
scas
orl
fidivl
in
rorb
cmp
push
popf
mov
add
jg
insl
push
subl
push
add
cmp
cmp
repnz
push
gs
mov
popf
and
imulb
cwtl
subw
sbb
decb
loopne
cmp
cmp
jecxz
jne
sbbb
mov
in
popf
adc
add
pop
fbstp
shll
xchg
mov
sbb
popf
xor
inc
push
sub
cmp
cmp
add
cmp
outsl
inc
jns,pn
mov
push
pop
sbb
mov
xchg
xchg
inc
push
test
cmp
push
mov
cmp
scas
push
cmp
cmp
repnz
cmp
xchg
sbb
cmp
in
jno
in
je
mov
cltd
mov
movsl
insl
jecxz
popf
sbb
xor
mov
xchg
mov
popf
cmp
into
pop
aaa
in
inc
aaa
insl
jecxz
sarl
fstl
popf
ds
or
sub
lea
ficoms
xchg
fstl
ss
aas
fistps
xchg
es
mov
inc
gs
hlt
mov
jno
dec
ss
mov
mov
popf
sti
mov
mov
fcmovnb
push
lods
fwait
mov
aaa
xchg
ss
add
popf
jg
rorl
dec
call
in
pushf
inc
xor
imul
jns
into
repz
xor
sub
popf
inc
xchg
cmp
or
xor
fidivl
fimuls
ja
ds
insl
lock
pop
cmp
popf
popf
nop
push
push
inc
push
adc
xor
adc
fstpt
faddl
out
mov
lea
and
xor
cmpsb
imul
sub
leave
mov
int
xor
inc
push
pop
cltd
lds
dec
and
xchg
adc
outsb
mov
or
push
dec
das
mov
mov
outsb
xor
call
jg
jne
and
call
insl
popf
add
sti
cld
inc
add
pop
pushf
imul
mov
scas
xchg
pop
cmp
movsl
inc
shlb
stos
xor
adc
pop
jmp
adc
lea
shrl
or
xor
subl
sbbl
or
pop
clc
xor
xor
std
lahf
mov
pushf
in
adcb
aad
popa
cli
inc
add
mov
insl
movsl
mov
popf
out
enter
dec
clc
sbb
xor
inc
ljmp
adc
movsl
popf
movsl
lret
das
add
imul
sbb
add
mov
popf
inc
iret
inc
push
movsl
arpl
mov
andb
and
in
fstpt
popf
sqrtps
push
rcl
mov
adc
fldenv
popf
add
lds
push
imul
cmp
cmp
iret
jae
mov
incl
push
movsl
popf
and
out
int3
pop
mov
aaa
movsb
mov
out
mov
fmul
pop
sub
rol
adcb
and
add
sahf
mov
push
dec
decl
into
jno
maxps
adc
repnz
clc
jb
hlt
mov
mov
inc
pop
inc
in
out
outsb
add
lahf
shlb
adc
mov
jns
popf
push
add
out
pop
push
fs
subb
dec
adc
cmc
pop
dec
or
mov
adc
int
and
mov
fcom
mov
sub
fstl
xchg
fcomps
jb
xor
sub
adc
add
xchg
inc
mov
lods
mov
inc
aaa
xchg
dec
pop
sub
or
subl
sub
sub
bound
ja
or
insb
inc
jno
aad
or
lock
ss
or
and
dec
inc
lret
inc
dec
or
enter
imull
sbb
or
adc
cmp
xchg
lods
mov
ja
mov
stos
outsl
mov
fs
pop
es
cs
xchg
pop
jno
lea
jmp
and
or
xchg
dec
adc
jb
shrl
roll
inc
mov
arpl
xlat
into
or
xchg
pop
nopl
mov
orb
and
sbb
jmp
mov
add
xchg
sbb
or
add
sbb
dec
xchg
or
into
loope
adc
ret
inc
les
clc
pusha
nop
out
mov
hlt
stc
xchg
or
sbb
push
stos
popf
pop
jae
and
and
enter
roll
adc
xor
add
inc
in
pop
xorl
mov
popa
mov
setae
adc
fs
xchg
outsb
clc
adc
sahf
daa
mov
sbb
icebp
lcall
enter
sub
xor
xchg
add
repnz
add
adc
inc
sbb
add
js
push
div
dec
xchg
daa
iret
add
and
inc
push
adc
imul
inc
mov
pop
jl
pop
push
gs
xchg
jne
clc
dec
stos
push
push
xor
out
xor
mov
hlt
jnp
adc
imul
repnz
inc
or
fs
scas
or
or
or
cmp
xor
or
xchg
insb
jecxz
hlt
cmc
add
dec
push
stos
add
je
and
inc
pop
add
in
jbe
lret
jo
or
xor
mov
xchg
jle
bound
rcl
adc
mov
inc
lret
cmp
es
outsl
push
test
jmp
jl
jmp
cltd
jecxz
or
push
add
xor
cmp
add
nopl
add
out
adc
adc
add
pop
sbb
adc
fmull
push
and
mov
mov
fcoms
ja
and
adc
or
and
sub
pavgw
enter
sti
adc
mov
fwait
pop
add
scas
push
xchg
mov
adc
push
mov
sub
and
and
push
jb
jmp
popa
stos
loopne
enter
cmp
enter
mov
jns
mov
inc
bound
inc
and
xor
test
inc
movsb
cmp
adc
sbb
inc
roll
pop
pop
cmp
fsubl
jo
enter
xchg
inc
rcrb
sub
push
rcll
pop
cmpb
movsb
xchg
ret
inc
sub
sbb
xor
insl
dec
and
inc
jmp
cvtpi2ps
pop
lcall
outsb
dec
xchg
ficompl
lds
scas
inc
insl
add
and
pop
ljmp
xor
movsl
jnp
xchg
mov
jns
jbe
pop
mov
addb
push
jo
sbb
bound
lret
and
inc
fldt
xchg
sarl
inc
inc
mov
sbbb
insl
jecxz
fcomps
cmp
xlat
std
outsb
dec
cltd
stos
insl
xlat
xor
pop
dec
lret
stos
and
lret
inc
cmp
adc
mov
mov
stos
scas
xchg
pop
pop
cmp
pop
mov
jne
pop
in
cs
xchg
push
das
jle
sub
pop
pop
push
jne
imul
arpl
adc
cmpsl
jp
rcrl
or
inc
popa
subb
xchg
xor
or
pop
lock
jmp
jmp
push
xchg
lock
int
add
jns
jbe
dec
enter
dec
push
jns
sbb
inc
js
dec
orb
icebp
xor
inc
dec
or
push
sar
sbb
rolb
sub
pop
inc
stos
inc
xor
and
cmpsb
push
ret
push
xchg
pop
jns
clc
call
sbb
and
pop
pop
or
cmpsl
sbb
pop
aas
mov
fldcw
jecxz
nop
sub
xchg
js
jns
gs
arpl
gs
xor
lock
ja
cs
sbb
or
jl
xchg
adc
push
adc
adc
popa
mov
jle
pop
sub
testb
repz
dec
movsl
xor
aad
in
lcall
nop
xor
adc
dec
cmp
in
mov
add
out
mov
in
jl
push
fs
and
clc
pop
or
sbb
cmp
pop
xchg
aad
lods
or
mov
pop
add
stos
fbld
and
mov
add
mov
xor
subl
xchg
add
cmpb
in
int3
push
mov
mov
mov
adc
sbb
xchg
cmp
sbb
mov
fildl
sahf
pop
shll
inc
call
jmp
test
popa
inc
sub
push
hlt
push
daa
or
gs
jno
sbb
or
fistl
dec
mov
push
fcomp
movb
and
cmp
adc
adc
mov
jns
adc
push
dec
sbb
jno
pop
cmp
pop
and
or
jno
sbb
jo
adc
inc
loope
insb
push
ficompl
pop
and
or
inc
mov
xor
movsl
xor
add
xchg
iret
adc
push
sbb
sbb
dec
push
inc
or
mov
or
js
pop
push
adc
pop
jmp
inc
daa
pop
add
cmp
pop
stc
pop
push
fxam
fsubs
in
shrb
icebp
xchg
xchg
xor
push
stc
lock
and
imul
stc
push
in
mov
mov
enter
push
rcll
mov
xchg
mov
pop
jns
add
push
and
sbb
inc
mov
hlt
dec
push
pop
sbb
mov
movl
js
inc
pop
and
mov
mov
adc
inc
dec
push
leave
cwtl
adc
mov
sub
cmpsl
cmp
xchg
hlt
sbbb
cmp
jp
or
add
lods
in
fwait
test
dec
adc
jmp
mov
clc
jmp
inc
mov
stos
xchg
iret
mov
sbb
jbe
xor
addl
sub
push
leave
mov
or
stc
adc
xchg
xchg
ret
add
lock
adc
int3
lock
jmp
fcoms
pop
sbb
jnp
and
xchg
cmp
adc
adc
enter
gs
and
adc
je
cmp
push
lea
js
rorl
gs
adc
lods
nop
inc
and
sbb
push
and
ljmp
lock
push
and
push
cmpsl
adc
fsubs
fiaddl
inc
and
mov
sbb
xchg
in
jmp
dec
adc
mov
stc
pop
in
pop
pop
add
adc
rclb
jns
mov
cmp
push
and
in
adcb
xchg
pop
and
add
dec
push
adc
add
cmp
mov
aad
ud2
and
and
mov
sbb
in
pop
mov
mov
mov
scas
pushf
sbb
test
sti
add
rorl
adc
ss
inc
and
add
pop
fmul
insl
mov
jnp
popf
add
lcall
fsubl
adc
inc
das
push
cmpsb
push
sbb
bound
add
mov
fmuls
xchg
mov
call
inc
push
and
mov
add
sbb
or
cmp
rcll
lcall
xor
int3
mov
lcall
les
pop
insl
mov
sbb
fwait
push
push
mov
loop
fwait
mov
inc
fsubr
test
or
push
xchg
imul
repz
or
jo
jecxz
repz
adc
or
fwait
mov
shrl
ljmp
or
lcall
xchg
iret
in
int3
loope
push
shlb
rolb
movsb
repnz
mov
push
mov
xor
pop
insl
das
or
sub
mov
adc
out
mov
test
jge
test
test
or
fmull
lods
outsb
popa
dec
sahf
lahf
xchg
push
clc
inc
or
cmp
add
or
fidivs
push
mov
add
rcrl
out
hlt
sarl
sysexit
movsl
xor
sub
sub
jne
adc
das
loopne
test
fmull
mov
cmpsb
frstor
add
dec
ret
sbb
pop
repnz
in
or
data16
pop
test
xor
lret
add
mov
sbb
das
ljmp
xorl
or
mov
sbb
sub
shl
and
and
sub
dec
imul
push
lock
cmp
jno
adc
lds
leave
mov
mov
lret
shl
movl
fs
repnz
add
push
loope
xchg
jo
or
cmpsb
gs
inc
or
dec
add
sub
pop
and
and
xorl
leave
cmp
decl
add
or
cmp
stos
cmp
adc
inc
inc
stos
dec
adc
jbe
sarb
out
stos
sbb
sbb
and
stos
cmp
insb
and
add
pop
or
and
xchg
or
xor
ret
out
pop
test
ret
sub
push
add
mov
xchg
sbb
sub
pop
gs
out
dec
imul
add
jne
aam
sbb
iret
in
and
add
arpl
sbb
push
in
loopne
adc
sub
loopne
mov
shl
aaa
mov
cmpsl
add
fs
mov
seto
cwtl
jno
pop
insl
lods
outsl
xor
and
cmp
add
dec
lea
adc
nop
cmp
jae
bound
sub
roll
or
incb
imul
inc
bound
pusha
fcomp
xchg
adc
nopl
inc
pop
test
call
add
xchg
adc
into
jne
push
mov
andl
jb
in
cmp
mov
xchg
and
aaa
bound
xchg
sbb
add
or
pop
in
cmp
add
ret
pop
mov
add
push
inc
push
inc
jmp
enter
jns
jl
or
insl
inc
adc
add
inc
lods
adc
sbb
dec
add
fidivrl
dec
sub
jmp
jbe
inc
addr16
popf
frndint
cmpsb
sbb
xor
cld
pop
or
in
mov
lods
dec
sahf
mov
xlat
fwait
or
jns
adc
cld
loop
dec
jmp
push
mov
rolb
add
pop
in
adcb
and
incl
add
jle
pop
mov
out
cs
fadd
mov
cmp
jbe
cmp
xchg
fnsave
call
dec
xchg
jns
jecxz
adcb
ret
cmp
push
addr16
add
leave
push
adc
nop
lret
or
jecxz
lods
je
add
add
add
pop
cmpsb
push
cmpsl
or
mov
ret
push
fwait
sbbb
xor
push
ds
add
push
std
movsl
pop
push
pop
pop
addl
cmp
adc
add
mov
lods
loopne
adc
add
add
and
add
popl
jmp
out
aas
mov
sub
lea
sbb
adc
push
mov
fadds
movsl
enter
jmp
xor
cld
push
mov
mov
cmp
mov
sbb
adc
mov
lea
popf
repnz
rorb
movsb
cs
lret
in
nop
cwtl
test
sbb
jne
mov
jle
adc
ja
divl
sti
movsl
push
mov
pop
sarl
insl
xor
push
adc
std
les
xchg
std
sub
fwait
std
and
fnstenv
std
imul
push
mov
dec
push
ss
xchg
dec
ret
and
stos
mov
fcoml
or
cmp
cmpsl
jp
and
cmpsb
mov
imul
xchg
adc
rorb
insb
sbb
dec
call
invd
jge
ljmp
sbb
scas
stos
je
or
pop
or
cmp
ds
sbb
rcrl
call
push
push
sbb
in
add
adc
add
add
dec
arpl
lcall
cmpsl
mov
dec
push
cmp
lcall
dec
sarl
cmpsb
loope
mov
imul
ljmp
int3
jmp
cltd
cmpsb
jge
rcrl
push
dec
push
daa
ret
and
dec
jge
in
jbe
xor
and
hlt
adc
jge
pusha
cmpsb
imul
xchg
lcall
lcall
jge
pushf
push
int
or
imul
mov
inc
push
add
imul
adc
push
into
pop
imul
push
in
movsb
std
out
mov
mov
orl
lret
push
and
mov
insl
iret
lret
mov
push
xor
gs
or
or
icebp
fstpl
call
movsb
lea
cmpsb
sbb
shlb
pop
and
inc
imul
loopne
dec
aaa
jb
inc
clc
adcl
in
pop
fstpl
cmp
mov
testb
sub
ja
enter
fildll
mov
and
call
xorl
pushf
sbb
or
add
lea
inc
and
sub
jo
dec
lcall
fdivrl
or
addl
add
out
rorb
pop
cmp
imul
cmp
push
mov
push
pusha
jo
jnp
rcrb
pop
add
add
stos
popf
add
hlt
nop
popf
mov
push
popf
sahf
inc
cmpsl
addb
or
push
add
or
dec
inc
sbb
adc
sub
shlb
jecxz
cmp
sbb
test
sbb
xor
sbb
add
pop
adc
xor
jnp
add
jecxz
sub
cmp
mov
xchg
ds
lea
sbb
mov
add
imul
mov
mov
cmp
dec
stos
cmp
and
mov
test
mov
push
lret
xor
popf
pop
mov
jecxz
cmp
pop
pop
cmp
and
pusha
mov
mov
cs
cwtl
out
cmpsb
jno
fisubs
dec
cld
mov
add
out
xor
add
jae
sub
and
into
rolb
addb
js
in
popa
cmpsb
jo
jge
push
mov
cmpsb
jge
or
jbe
xchg
xor
jge
xor
pop
lods
test
jo
push
jge
leave
add
add
addb
jmp
outsb
ret
push
mov
outsb
push
push
xor
sbb
dec
fildl
sub
push
add
cld
add
arpl
out
jno
cltd
mov
and
call
add
ljmp
test
dec
jl
xor
cmc
jmp
cmp
sbb
sbb
jo
mov
sub
jmp
out
add
pop
rcrl
sarl
cmp
dec
js
sbb
jo
fistps
xor
iret
and
or
lea
pop
imul
lock
mov
pop
mov
dec
pop
stos
je
mov
call
and
mov
cmp
int3
xchg
cwtl
outsb
mov
test
sbb
sbb
add
ret
add
dec
or
pop
jl
push
loopne
jecxz
push
sbb
add
sbb
push
pushf
sbb
pop
push
in
loop
jmp
and
adc
xchg
aas
dec
sub
jns
pop
xor
jnp
leave
sub
pushf
cmp
test
cmp
add
and
sbb
inc
int
add
xchg
and
add
inc
cwtl
pop
shrl
into
and
call
xor
xor
inc
xchg
xchg
inc
es
xor
xchg
popa
sbb
add
add
mov
xlat
mov
add
dec
push
pop
inc
or
xor
cmp
push
test
adc
sub
ja
and
xor
sbb
jge
adcb
xor
shll
or
or
pop
out
or
jge
ret
ret
outsb
inc
rclb
jge
aad
and
push
repz
popa
sbb
jl
push
je
xor
ficoml
jo
out
and
mov
jnp
and
add
popa
sbb
sarl
loopne
xchg
xor
xchg
inc
mov
cld
cmp
ss
popf
mov
xor
ret
fcomps
jge
xchg
fwait
or
sbb
jge
orb
and
pop
loopne
adc
dec
ret
mov
pop
pop
ret
add
les
pop
jb
mov
les
pop
pop
enter
leave
shr
push
call
push
push
pop
cmp
addr16
sbb
pop
outsl
inc
in
popa
sbb
rolb
adc
daa
fildll
add
xor
faddl
dec
pop
dec
lods
mov
jle
push
test
lea
adc
xor
xchg
mov
cvtdq2ps
cwtl
xchg
lcall
ret
test
jecxz
xor
push
dec
int
adc
dec
pop
ljmp
pop
adc
xor
je
pop
xor
xchg
push
test
jo
es
cwtl
pop
sahf
and
inc
and
sub
stos
stc
push
and
pop
aas
xor
jnp
mov
adc
ret
mov
sub
cmpsb
xor
cmpsb
xor
lea
insb
mov
mov
test
or
inc
sub
pop
test
aad
inc
pop
adc
xor
pop
fldl
dec
pop
int
xor
test
test
mov
cs
xchg
inc
jb
adc
adc
inc
xor
mov
inc
fists
xor
adcb
cmp
cld
fsub
push
mov
loope
jae
adc
or
add
cmp
loopne
push
je
mov
dec
insl
cmp
fnsave
nop
out
out
add
stos
pop
js
rcr
sbb
dec
insb
sbb
adc
pop
xor
add
dec
and
popf
ds
testl
xor
rcll
xorb
inc
fnsave
or
jno
rcr
lods
or
movsl
mov
cwtl
jp
mov
movsb
addr16
stos
push
add
fstpl
loope
mov
adc
push
lcall
jae
sbb
leave
gs
jnp
sbb
jbe
mov
fstpl
push
xor
lret
mov
js
lret
sub
cld
push
xor
sti
lahf
xchg
and
lret
jno
js,pn
nop
jne
pop
adc
pop
enter
std
leave
cmp
shll
es
mov
sub
shll
sbb
push
mov
sbb
fstl
fwait
jge
ror
xchg
mov
fwait
pop
add
push
bound
add
jle
cmp
les
std
shlb
shll
std
dec
xor
std
xchg
or
inc
out
es
xchg
jle
and
or
push
mov
xlat
add
std
pop
ret
add
cld
mov
popa
lcall
mov
cmpsb
std
negb
add
imul
mov
cwtl
test
push
or
cmc
pusha
subb
in
aad
jb
aas
dec
push
jg
pop
mov
push
jb
repz
cmp
and
std
or
sbb
dec
xor
std
pusha
sbb
lret
lods
mov
mov
cmp
xorb
adc
std
call
sbb
aad
jg
aad
inc
cmp
adc
jle
xor
add
leave
adc
add
std
sbb
add
push
adc
dec
xor
xor
adcl
dec
xor
jae
sbb
add
std
push
into
pop
xor
test
fldl
std
sub
or
cwtl
std
xchg
shll
dec
loop
xor
mov
std
sub
adc
adc
pop
les
clc
cmp
add
mov
cwtl
dec
inc
std
pusha
sbb
add
push
mov
mov
cmpsb
pusha
subb
dec
adc
std
mov
push
push
shr
or
mov
orl
sub
shll
std
rol
dec
jmp
fwait
push
sbb
clc
dec
xor
xor
or
es
in
std
inc
in
orl
popa
std
cwtl
xchg
fsts
and
es
faddl
das
and
imulb
es
stos
adc
cwtl
pusha
std
pop
adc
mov
inc
pusha
sbb
addl
cmp
ret
xor
mov
cmp
cmpsb
loope
add
sbb
fsubrs
sub
icebp
push
mov
pop
bound
call
mov
sbb
mov
int3
les
jne
mov
pop
call
fcomps
mov
or
or
subb
xor
fwait
pusha
sbb
xor
pushf
or
shr
in
jmp
push
imul
shll
std
lcall
std
cmpsb
icebp
mov
bound
addr16
mov
std
into
push
adc
and
fwait
pusha
sbb
lret
ja
subb
jmp
or
insl
inc
inc
jnp
ljmp
and
sbb
es
xchg
std
subb
cmp
push
or
loop
std
and
call
subb
das
cmp
std
dec
adc
std
lcall
sbb
push
jge
out
scas
add
jns
pop
pop
cmp
sbb
and
dec
cwtl
pusha
sbb
mov
xchg
lods
dec
inc
lock
push
inc
ret
dec
add
lret
adc
roll
inc
std
test
add
mov
add
les
aam
std
aam
fadds
adc
xchg
xchg
lret
in
push
popa
aas
inc
or
cwtl
cltd
inc
std
add
mov
das
dec
cmp
sbb
fs
xor
sub
jb
inc
and
test
dec
jne
push
rolb
adc
adc
std
sti
xor
std
adc
pusha
push
xor
rol
sbbl
std
dec
jae
jle
shll
std
out
jns
jns
dec
xor
jb
mov
pusha
sbb
sub
cmp
mov
loop
pusha
sbb
fiadds
lret
xor
subb
repnz
lcall
std
pusha
sbb
stc
mov
mov
dec
xor
ja
mov
or
ficompl
push
sub
std
sbb
sbb
es
xchg
inc
imul
jmp
xchg
sarl
sub
pop
roll
pop
push
loopne
xor
xchg
add
add
xor
std
lock
mov
orb
xchg
cmp
jno
cmp
sbb
test
ja
jg
mov
cwtl
lods
mov
jmp
push
fistpll
add
js
sub
data16
lret
and
xchg
xchg
jl
sarb
decb
roll
dec
lcall
nop
inc
jecxz
aas
push
xchg
xchg
jo
cmpb
push
inc
add
sub
ja
sbb
nop
xor
into
inc
rclb
mov
inc
lds
mov
xor
dec
cli
push
xor
inc
cmp
inc
mov
and
adc
push
sarb
mov
dec
jecxz
push
mov
add
mov
imul
xchg
xchg
mov
je
mov
cmpsl
enter
mov
and
adc
popa
mov
cmp
jno
dec
cli
push
adc
andl
mov
mov
inc
add
jle
xor
outsb
jp
sbb
in
scas
mov
dec
mov
mov
add
stc
pusha
adc
inc
or
orb
xor
lods
dec
inc
nop
sbb
xchg
nop
aam
or
out
adc
mov
andl
push
xchg
mov
lret
sbb
js
ret
inc
sbb
cmp
dec
mov
or
or
and
xor
sub
sbb
loope
inc
les
mov
add
xchg
insl
imul
mov
jl
mov
push
add
mov
and
add
mov
or
mov
addl
inc
mov
rorb
jno
mov
inc
add
push
xchg
mov
mov
cmpb
adc
mov
ds
inc
cmp
mov
mov
insb
adc
dec
ret
mov
out
and
cmp
xor
or
sbb
push
xor
push
sub
add
dec
mov
mov
test
or
xchg
mov
lea
repz
xchg
xchg
mov
push
mov
imul
push
in
inc
mov
lods
pop
add
dec
mov
mov
jecxz
pusha
incb
pop
pushf
rol
or
pop
mov
lea
sti
mov
pop
adc
pop
add
pop
clc
dec
adc
insl
mull
pop
dec
popf
xor
and
xchg
or
cli
add
xchg
or
push
and
pop
dec
push
add
mov
push
add
and
lea
xor
pop
and
and
dec
popf
pop
adc
sub
aas
aas
add
jbe
sbb
add
mov
jg
add
repnz
ja
fidivrs
jle
xchg
nop
xor
pop
cwtl
sahf
shlb
flds
popf
pusha
nop
imul
aam
inc
fldcw
sbb
inc
shlb
mov
nop
xor
inc
popf
imul
int3
jns
test
popf
test
xor
outsb
dec
push
cmp
or
loop
fiaddl
sbb
ret
mov
pop
sbb
inc
gs
js
nop
xor
fisubl
sbb
lea
lea
push
or
or
pop
sbb
xor
sbbb
popf
xor
popf
push
xchg
adc
movsb
cmp
call
nop
xor
sub
popf
cmp
push
ror
fldpi
sbb
push
das
and
and
repz
adc
mov
pusha
push
or
pop
push
add
sub
test
popf
dec
jecxz
push
inc
aam
push
push
add
cmp
popf
jle
pop
sbb
dec
pop
push
mov
add
jl
std
cmp
fldenv
xor
pop
pop
mov
add
rcrb
stc
les
popf
sub
add
nop
xor
or
mov
aas
in
pop
loopne
movsb
jno
mov
lea
jo
push
or
les
popf
pop
and
push
push
xchg
xchg
popf
add
es
jnp
out
inc
lds
dec
pop
mov
andl
mov
add
mov
imul
sub
mull
popf
sub
adc
sbb
add
pop
xchg
ret
inc
test
mov
jns
pushf
cwtl
pop
sub
jnp
sbb
jp
xchg
inc
mov
sarb
nop
and
dec
adc
ret
ret
or
fucom
add
stos
jg
inc
sbb
in
test
or
mov
push
sub
xor
rcl
xchg
add
jge
xor
adc
adc
add
and
and
inc
sbb
imul
pop
shrl
push
xchg
pushf
sbb
out
mov
add
adc
incl
cmp
test
add
repz
imul
push
jge
lahf
aas
and
stc
or
cmp
inc
jge
ret
cmpb
add
inc
dec
ud0
inc
or
xor
lods
or
sahf
lcall
lcall
jge
rclb
movsb
jno
or
jmp
add
add
fcoms
fidivrl
loop
repnz
and
xchg
mov
pop
leave
and
adc
dec
jecxz
test
insl
adcl
jg
dec
push
sub
dec
movsl
sbb
or
and
sarb
sub
movsb
jno
pop
push
repnz
cvtps2pd
mov
sahf
stos
add
jge
loop
inc
popa
hlt
add
pop
mov
jge
in
mov
xchg
jge
rcrb
out
jecxz
pop
jge
dec
xorb
jge
adc
outsb
push
jge
jmp
mov
and
ja
imul
imul
movsl
mov
mov
jge
or
or
mov
jge
xor
cwtl
xor
rorl
insb
mov
nop
jmp
and
imul
scas
test
sbb
or
push
xorb
add
dec
cwtl
push
and
mov
mov
push
out
xchg
xchg
mov
adc
dec
nop
xchg
pop
jge
or
int3
push
mov
dec
add
xor
mov
fsubr
inc
cmpsb
arpl
cmpb
fs
lea
insl
mov
xor
sbb
jge
loop
xchg
and
push
adc
dec
and
push
or
and
hlt
adc
xor
cmpsb
sub
mov
fmuls
loope
cmp
adcb
xor
mov
mov
rcll
push
mov
dec
jge
pusha
xor
push
or
push
mov
push
cmpb
sbb
cltd
lds
inc
xor
lea
fwait
dec
nop
sub
mov
fwait
popf
aaa
sbb
push
mov
sbb
mov
jge
addl
mov
sub
xor
and
arpl
stos
adc
or
jge
adc
ret
and
loopne
cmp
out
xor
dec
jge
push
dec
ret
pop
push
jge
iret
dec
add
and
xchg
and
cmp
fidivrl
aad
and
xor
mov
mov
std
sbb
add
cmp
add
dec
xchg
movsb
jge
xchg
lahf
and
jnp
add
lahf
mov
jge
mov
push
sbb
push
push
xorb
add
inc
xchg
push
xchg
jge
imul
nop
jge
inc
or
xor
xor
adc
cs
imul
push
xor
mov
outsb
mov
movsb
jge
mov
push
xorb
dec
and
out
push
xchg
and
and
and
push
add
jge
mov
or
jge
cmpsb
ficoml
xchg
aas
pop
lahf
stc
sbb
fs
adc
das
inc
jge
add
bound
jge
adc
and
lods
cmp
movsb
mov
inc
jb
mov
adc
dec
adc
jecxz
jge
pop
jge
loopne
pushf
adc
call
or
ja
jb
or
or
add
jge
add
inc
add
jge
add
loopne
jge
loop
add
add
and
add
add
test
dec
ret
dec
inc
pop
pop
js
inc
inc
fbld
dec
mov
jo
insb
loopne
sbb
movsb
sahf
lods
mov
scas
test
clc
or
mov
jno
xor
pop
jno
test
push
inc
outsl
adcb
pop
mov
sbb
xchg
pop
out
ljmp
inc
cs
call
xchg
pop
cwtl
mov
movsb
jno
pop
cmp
orl
adc
popf
and
pop
dec
nop
dec
insb
mov
add
fsubrs
clc
fldl
aas
cmpsb
sahf
and
pop
sbbl
sbb
ja
xorb
sbb
mov
dec
pop
adc
movsb
and
addb
mov
popa
or
mov
pusha
addr16
or
inc
sub
ret
inc
mov
popf
pop
in
pushf
movsb
jno
cmp
inc
scas
loope
mov
pop
mov
dec
nop
movb
daa
dec
arpl
push
and
or
dec
nop
pop
mov
and
inc
sbb
sbb
inc
pop
inc
ds
and
imul
ret
jmp
stos
fistl
or
movsb
popa
das
dec
pop
lret
test
mov
adc
sbb
gs
or
std
xchg
cmp
or
mov
push
sub
add
std
int3
push
js
add
std
pop
mov
pop
outsl
mov
inc
inc
sbb
std
enter
cmpsl
sub
int3
mov
jecxz
mov
cmp
ret
fldenv
xor
inc
inc
push
or
dec
sbb
jmp
or
mov
test
imul
roll
lahf
mov
mov
in
lahf
enter
pushf
and
js
lods
pop
es
fwait
enter
mov
push
mov
fwait
or
or
nop
std
shll
mov
fnstsw
adc
xlat
add
ficoms
mov
test
enter
lahf
mov
or
stc
cmp
mov
movsb
popa
loopne
and
add
dec
sbb
push
je
xor
dec
dec
scas
lods
xchg
cmp
xorb
xorl
lret
cmc
in
jno
pop
je
popf
cmpsl
mov
dec
pop
inc
xchg
cmp
test
add
sbb
adc
cmp
dec
and
jb
jo
ret
mov
lods
xchg
xchg
les
pop
dec
popf
outsb
je
xor
mov
cmp
dec
sbb
addb
nop
inc
popf
imul
mov
mov
pop
xchg
xchg
lahf
add
dec
es
add
cmp
sub
sbb
push
xchg
cltd
mov
mov
inc
popf
push
pop
dec
arpl
jo
mov
sbb
popf
rcll
cmp
popf
add
inc
xor
push
popf
addb
inc
aas
add
xor
mov
popf
jmp
add
xchg
aas
pushf
mov
mov
les
add
imul
adc
sbb
mov
in
and
outsb
loopne
das
fcoml
movsb
adc
into
out
cmpsb
cmp
and
xor
xor
std
xor
jb
sbb
mov
lahf
stc
add
and
insb
sub
adc
push
dec
lret
cmpsb
adc
and
push
movsb
cmp
rclb
jg
xorb
and
xchg
nop
xchg
pushf
dec
push
xorb
fldl
imul
shlb
dec
je
fcoml
fucom
sub
xchg
add
jecxz
clc
jo
mov
inc
sbb
or
dec
call
mov
in
shlb
loope
push
mov
fnstsw
testb
addb
inc
sbb
jns
mov
fstl
lea
push
jbe
sub
push
sbb
movsb
jno
lods
ljmp
sbb
cmpl
dec
inc
mov
ret
cld
cld
jns
sbb
cmp
nop
cmp
scas
lahf
out
jb
pushf
inc
pop
lahf
cmp
and
inc
sbb
inc
push
mov
xor
jb
in
pushf
dec
insb
sti
lods
dec
repnz
add
jb
cmp
je
popf
xorb
jmp
stc
push
fstpl
and
xor
or
mov
mov
adc
mov
sbb
inc
pop
mov
and
dec
in
xchg
and
mov
in
add
mov
add
pop
ja
clc
daa
cld
or
pop
push
add
cmp
jnp
idivb
adcl
adc
xchg
xchg
scas
push
and
pop
sub
sbb
cmp
inc
enter
dec
dec
push
push
push
test
pop
pusha
fs
addr16
insb
cmc
add
outsb
mov
jo
je
js
sbb
mov
dec
idivl
dec
mov
and
add
js
add
or
cmp
imul
or
mov
add
movsb
js
xchg
adc
fldl
sbb
fcmovbe
test
ja
fldl
push
movsb
jno
sub
or
loopne
add
shrl
xorb
fstl
adc
xor
xorb
fstl
imul
mov
mov
mov
pop
lret
inc
ljmp
sub
adc
loopne
dec
sbb
shl
fldl
mov
adc
add
cs
inc
sub
fucom
dec
stos
add
add
lock
adc
dec
inc
frstor
pop
cmpsl
and
mov
pop
push
fstp
jge
and
fldl
and
fnsave
jns
or
loopne
cmp
add
mov
push
dec
jecxz
stos
fstpl
push
jmp
add
and
nop
fnstsw
mov
sub
fucomp
mov
movsb
xor
fisttpll
outsb
dec
adc
fstpl
push
xorb
fldl
mov
jno
xchg
sub
out
mov
movsb
test
nop
xchg
xor
popa
xchg
sbb
mov
fstpl
sbb
add
sub
pop
lahf
nop
or
jg
mov
xor
mov
or
mov
or
xor
fst
nop
mov
dec
ret
jo
fstpl
mov
adc
sbb
daa
adc
sub
add
add
lods
push
mov
aad
add
nop
outsl
and
and
cmc
adc
add
lea
pushf
rcr
push
outsb
push
dec
ret
pop
adc
xor
add
lea
add
adc
fsubl
xor
add
mov
jno
or
mov
add
add
movsb
fstl
or
adcl
call
xorb
and
add
or
lds
mov
stos
add
push
popf
xorb
xchg
call
arpl
fldl
add
mov
pop
jge
mov
fldl
adcb
add
mov
push
mov
mov
xor
sub
inc
fisttpll
or
add
push
dec
jecxz
je
push
sub
push
add
frstor
add
cltd
test
jns
cmp
aad
in
adc
imul
pop
push
sub
mov
push
push
mov
jnp
rcrb
fwait
mov
cmp
les
lea
sbb
mov
jmp
jns
mov
xchg
mov
xchg
pop
cwtl
cmp
mov
aaa
fwait
jge
aaa
mov
mov
sub
xchg
out
enter
aam
icebp
push
test
call
lods
ret
in
mov
inc
cs
hlt
clc
cld
mov
inc
pop
rorb
mov
addr16
mov
dec
adc
xchg
scas
bnd
push
dec
sbb
and
in
xchg
sub
pop
sub
cmp
dec
movsl
push
stc
mov
dec
dec
xchg
xchg
fxch
push
push
or
xchg
xchg
mov
or
pop
mov
pusha
fs
sbb
jl
xchg
dec
movsl
addb
sub
dec
in
sbb
mov
test
mov
movsb
enter
test
fsub
in
movsb
push
call
sub
add
adc
pop
in
inc
or
xchg
or
adc
sub
sbb
and
mov
enter
xor
cmp
push
sub
dec
push
mov
push
pop
mov
aam
xorb
frstor
lea
dec
adc
fsubl
or
icebp
arpl
stos
add
inc
mov
push
add
dec
inc
popa
sub
fucom
push
add
jo
frstor
fldl
movsb
icebp
cmp
mov
jno
ret
add
fnstsw
dec
dec
add
xor
add
fisubrs
fldl
movsb
jno
mov
sarb
sbb
mov
push
add
addb
xor
adc
or
push
add
fisttpll
xchg
push
popa
test
or
pusha
sub
addb
fstl
lea
jo
xor
ret
mov
add
xchg
and
inc
sbb
sarb
daa
rol
dec
jo
push
test
imul
or
push
and
dec
mov
sbb
mov
call
xor
mov
push
stos
mov
aam
mov
sbb
and
fadds
aad
inc
lret
movsb
mov
mov
mov
cwtl
jle
outsb
pop
js
push
rolb
test
imul
add
cltd
dec
push
gs
das
ret
scas
or
push
add
cmp
test
aas
in
leave
push
and
or
inc
mov
frstor
sbb
or
xor
aas
xchg
les
push
lea
pusha
push
xorb
add
mov
imul
hlt
sub
mov
push
mov
mov
add
shlb
push
or
cmp
inc
add
jp
or
test
imul
sub
fucom
xchg
das
inc
sbb
cmp
xor
cmp
or
add
xor
inc
movsl
daa
or
ret
inc
add
jne
xor
adc
fisttpll
nop
fstpt
xlat
rolb
and
js
inc
dec
adc
push
test
add
fnstsw
adc
jae
fldl
les
pop
push
fnstsw
outsl
add
aas
pop
test
mov
inc
fnsave
dec
fnstsw
mov
push
add
into
lods
jno
daa
popa
push
aaa
mov
movsb
frstor
outsb
frstor
sub
xchg
sbb
jg
and
dec
loop
adc
xchg
or
scas
push
lahf
rorb
enter
pop
addb
fstl
xor
and
push
add
dec
adc
inc
sbb
imul
shlb
mov
sarb
frstor
add
repz
jb
test
or
pop
lcall
sbb
popa
sbb
int
add
xchg
push
or
notl
mov
out
or
movsl
stos
push
outsb
add
nop
fisttpll
push
inc
push
mov
lds
add
adc
popf
fidivrs
pop
fnstsw
add
loope
lret
push
orb
xchg
nop
push
dec
jecxz
fldl
and
sti
mov
add
out
pushf
inc
jmp
loope
fnsave
sarb
mov
movsb
jno
add
push
pop
jne
add
aas
mov
xor
ss
popf
mov
sbb
pop
aas
outsl
jno
cmpsl
popfw
decl
cltd
mov
idiv
mov
call
mov
mov
cmp
imul
popa
out
rorb
roll
cwtl
sub
popf
mov
and
dec
sbb
mov
rorb
popf
push
punpcklbw
push
and
mov
mov
or
adc
sbb
adc
jae
lods
dec
test
icebp
inc
int3
popf
scas
cmpsl
add
int3
adc
cmp
loopne
sub
ja
in
push
xor
cwtl
popf
enter
dec
xor
xchg
cmp
mov
xor
xchg
sbb
ja
pop
popf
jo
inc
add
rcrl
mov
xchg
popf
adc
add
inc
addb
andl
xor
add
std
add
cmp
push
push
xor
into
inc
dec
shll
movsb
push
and
xchg
mov
inc
ret
mov
cltd
or
inc
pop
enter
ret
cmp
dec
mov
adc
xchg
xchg
std
mov
jo
push
push
std
mov
push
dec
sar
jo
outsb
test
push
push
push
xor
and
pop
sbb
xchg
sub
inc
std
push
push
xchg
adc
std
in
push
xor
jbe
ret
inc
sbb
loop
add
push
mov
push
std
cli
adc
push
and
mov
cmp
mov
cli
push
xor
pop
pushl
push
push
std
movsb
xchg
xor
lahf
add
sub
sbb
push
std
sub
stos
and
es
sbb
jns
sbb
ret
adc
xor
out
sub
std
inc
push
push
dec
push
push
std
dec
dec
mov
imul
mov
xor
inc
std
inc
jg
cmp
sbb
and
std
push
xor
mul
jle
fmuls
sbb
push
std
inc
sub
sub
std
int3
mov
dec
orl
sbb
dec
mov
cmp
pop
dec
popf
cmpsl
das
popa
xchg
adc
ja
paddw
mov
push
add
inc
pop
push
std
pop
pop
scas
movsb
push
imul
inc
dec
nop
ret
aas
loope
jo
xchg
adc
ja
mov
jno
mov
bound
dec
jmp
xchg
std
pushw
sub
sbb
mov
sbb
sahf
sbb
and
xchg
adc
sar
push
add
sub
ja
std
push
cmp
mov
add
push
mov
inc
dec
sar
fwait
xor
sub
sbb
sub
pop
pop
mov
std
dec
not
inc
jl
rolb
repnz
pop
push
xor
dec
mov
aad
dec
rcrl
in
add
dec
jmp
push
int3
push
sub
sbb
sahf
push
and
push
fadds
pop
and
lock
push
mov
std
jo
pop
adc
sbb
sahf
and
sbbl
loopne
sub
push
cmp
std
fidivrs
stos
movsb
push
mov
lea
dec
std
mov
xchg
adc
mov
sar
push
sub
cmpsl
loopne
mov
sub
bnd
scas
xor
pop
push
push
xor
jmp
inc
arpl
std
sub
sbb
std
cmp
adc
push
dec
sar
push
dec
dec
add
jecxz
push
mov
jg
sub
es
cmp
cs
xchg
sbb
cmp
mov
scas
js
xchg
jp
inc
cmp
sbb
fwait
loop
push
std
scas
js
cmpsl
push
inc
xchg
adc
std
mov
mov
hlt
jecxz,pn
stos
xchg
std
scas
dec
inc
and
push
in
inc
mov
cli
or
adc
std
push
push
out
mov
inc
mov
mov
xchg
mov
adc
sub
sbb
xchg
adc
xchg
imul
fs
in
movsb
dec
mov
sysret
dec
mov
loop
insl
lock
das
mov
inc
or
enter
mov
or
fcoms
dec
push
sbb
test
sar
shll
std
cmpsb
movsb
push
sbb
movsb
push
dec
sarl
sbb
sbb
cwtl
push
call
lods
movsb
std
scas
or
adc
std
pop
imul
cwtl
xor
dec
push
std
test
push
mov
push
stos
std
push
and
mov
push
lds
out
jns
gs
loop
xchg
mov
test
push
icebp
ss
rcll
add
andl
sbb
subb
mov
add
push
xor
mov
inc
test
push
xor
aam
js
imul
xchg
cmp
pop
cmpsb
je
fmull
call
mov
loop
adc
rorl
clc
stos
ds
scas
push
xchg
std
shrl
jmp
sub
sbb
pop
jecxz
pop
addb
cmpsl
inc
and
insb
outsl
mov
adc
pushf
dec
mov
push
dec
rcll
std
dec
xchg
mov
movl
aaa
dec
leave
enter
pop
adc
cmp
addr16
in
xchg
dec
cwtl
fsubrs
fs
xchg
adc
fadds
adcl
cltd
or
and
mov
in
imul
and
cmp
pushf
and
push
inc
rol
add
sub
sub
mov
f2xm1
mov
sbb
mov
pop
dec
test
jo
sub
addl
std
xchg
cmpsb
push
movb
add
mov
jl
dec
mov
pusha
cmp
inc
test
push
dec
sar
and
mov
fisttpl
call
cmovp
pop
leave
test
ret
sub
stos
mov
pop
and
inc
arpl
les
fcomip
pop
repnz
mov
push
xor
pop
push
std
out
arpl
std
inc
shlb
std
pop
mov
decl
push
shr
scas
gs
sar
nop
enter
inc
and
mov
sbb
sti
aaa
mov
or
cli
pop
jo
sub
sbb
cmc
call
dec
std
mov
std
or
lea
jl
add
sub
add
scas
pop
mulb
sub
repnz
or
adc
std
aaa
fsubl
jb
stc
sub
pusha
push
in
in
mov
adc
leave
cmp
and
daa
xchg
xchg
adc
adc
movsb
push
jecxz
sub
dec
sarl
xchg
imull
jo
std
test
cmp
xchg
pop
lods
mov
or
dec
cs
out
or
mov
or
cmp
movsb
dec
or
in
jb
xor
js
into
leave
leave
and
bound
jne
jmp
adc
div
jb
ja
adc
std
xor
sub
sbb
test
sub
lds
inc
jecxz
ja
std
dec
sarl
pop
push
push
xchg
mov
push
xor
push
out
inc
push
jp
and
inc
and
std
rcrl
add
arpl
std
test
std
dec
shll
adc
call
stos
aam
push
xor
mov
push
push
xor
inc
push
std
bound
inc
push
push
std
jl
add
and
or
cli
fimull
push
xor
call
ret
jmp
dec
dec
std
sub
xlat
sub
sbb
rclb
mov
std
cli
and
std
movsb
push
inc
jecxz
mov
dec
shlb
mov
sub
sbb
sbb
mov
push
jle
sub
sub
cmpsl
and
dec
mov
std
xchg
mov
sub
filds
jmp
insl
stos
movsb
std
das
mov
call
adc
push
mov
sbb
inc
call
mov
int
pop
cmp
or
and
inc
cmp
push
and
sub
push
insb
xchg
loope
jecxz
dec
mov
dec
sub
cmp
push
push
xor
xor
std
dec
sarl
imul
jno
inc
std
push
push
push
inc
jecxz
xchg
std
jnp
inc
ret
pop
and
push
inc
outsb
scas
jmp
pop
lea
mov
jns
push
std
movsb
push
jle
dec
mov
fsubs
sbb
scas
std
cmp
std
xchg
adc
jnp
out
std
cmp
cmp
push
add
cmp
shlb
inc
inc
std
clc
loope
push
or
xchg
frstor
mov
cmpsl
and
adc
push
mov
add
or
push
std
mov
sbb
in
jno
pop
sbb
push
out
adcb
push
push
xor
fwait
jo
out
push
dec
jmp
push
cltd
dec
dec
sar
mov
in
add
std
leave
mov
mov
push
les
push
xor
cmp
sbb
xor
ja
dec
std
add
xor
sub
std
repnz
mov
ljmp
into
cmpsb
in
inc
dec
sar
ficompl
push
push
xor
lcall
cltd
std
dec
sarl
or
bound
pop
ja
std
sbb
dec
ss
push
xor
sti
cmpsl
sub
push
sub
js
push
std
push
cmp
incb
sbb
std
jmp
fsubs
orl
movsb
push
std
push
dec
sarl
sbb
jns
or
into
sbb
mov
sub
inc
jbe
xchg
adc
std
dec
pop
and
push
sbb
inc
jecxz
adc
adc
or
add
cmpsl
xchg
mov
jg
xchg
mov
pop
xchg
adc
cmp
mov
add
or
dec
sbb
fisubs
loopne
add
fsts
pop
xchg
mov
mov
xchg
flds
shl
int3
mov
scas
xor
mov
fwait
sbb
pop
jne
jmp
pop
and
mov
and
and
movsb
push
push
inc
xchg
adc
movsb
std
and
mov
pushf
jmp
mov
dec
mov
std
in
pop
out
out
bswap
into
add
roll
and
mov
xchg
mov
or
sbb
adc
lea
sub
mov
cmp
test
inc
dec
std
and
addl
push
and
gs
mov
push
dec
sarl
sub
ja
std
test
mov
xchg
fucomp
push
arpl
cmp
std
dec
fsub
xchg
mov
add
push
and
pop
iret
sbb
inc
ret
or
hlt
pop
mov
dec
aad
call
sti
dec
mov
mov
and
push
sbb
or
fisttpl
dec
xchg
adc
pop
inc
andb
mov
push
push
and
mov
lcall
std
and
xchg
std
and
cmp
std
ds
std
add
xor
cmp
dec
in
jns
lcall
outsl
test
mov
or
or
lahf
cmpsl
cmp
fs
push
adc
dec
jno
iret
jnp
std
push
lret
pop
jae
cmp
repz
xor
jbe
sahf
out
sti
pop
jne
fsubs
in
sub
push
mov
dec
sti
cmp
sub
push
ss
inc
push
cmpsl
stc
cmp
js
pushf
inc
js
push
xor
shl
cs
std
fnstsw
sub
std
outsb
in
or
pop
xor
lock
std
aad
inc
dec
sar
push
mov
and
xchg
test
adcb
std
mov
xchg
std
sub
adcb
aam
pop
sub
sbb
push
std
sub
andl
sub
bound
sub
sbb
jg
mov
repz
push
repz
inc
xchg
adc
addb
movsb
push
shll
mov
dec
fstl
std
fisubrl
push
push
xchg
jle
jg
mov
arpl
out
xchg
adc
std
push
push
adc
dec
inc
inc
ret
push
inc
std
adc
push
fs
std
sub
mov
dec
mov
popa
adc
mov
mov
notb
xor
test
std
xchg
enter
push
std
aas
adc
adc
aaa
rcrb
lea
pop
movsb
push
pop
repnz
incl
shll
push
inc
cmp
jns
movsb
push
xor
or
xchg
std
xor
dec
std
jmp
subl
pop
push
or
adc
std
inc
inc
dec
rcrl
push
std
inc
inc
add
mov
and
add
std
gs
mov
out
push
and
push
push
xor
iret
xchg
sbb
xchg
adc
std
cwtl
mov
outsl
std
jne
mov
std
sbb
pushf
fsub
popf
mov
sbb
sub
std
adc
std
leave
inc
dec
shll
std
lods
orb
test
inc
arpl
sarb
std
int3
sahf
xor
lds
push
out
sub
aad
sub
sbb
and
xchg
adc
insb
sbb
inc
dec
sarl
mov
dec
pop
fdivr
xchg
mov
es
sub
cmpsb
std
jge
cmp
jo
sbb
jle
int
push
jo
dec
sar
test
std
sub
sbb
mov
xor
in
push
jle
mov
ret
inc
dec
std
das
ss
sub
std
and
movb
std
les
xor
hlt
std
xchg
mov
xchg
std
mov
std
or
xor
and
xchg
adc
sar
jbe
sbb
push
dec
int3
and
and
rcrl
mov
push
xor
lock
push
push
xor
dec
inc
arpl
sbb
and
sub
std
std
dec
xchg
push
lock
sbb
sbb
sti
sbb
xor
dec
mov
or
mov
mov
les
ret
mov
sarl
sbb
inc
std
sub
sub
pop
inc
dec
shll
add
std
mov
dec
std
xchg
adc
mov
std
and
lret
imul
psubusb
sbb
fcoms
push
push
and
stos
in
or
rorb
sub
out
std
mov
sbb
jbe
mov
xor
push
push
std
ror
jno
push
push
std
xor
mov
xchg
adc
std
inc
push
dec
rcrl
jb
aam
mov
int3
push
sarl
mov
std
mov
push
dec
std
call
mov
adc
jl
mov
flds
pusha
xchg
adc
std
push
push
xor
jnp
sub
sub
in
inc
ret
test
std
cmp
cmp
inc
push
mov
dec
mov
std
movsb
push
dec
rcrl
mov
dec
push
std
addr16
inc
and
dec
std
jmp
std
adc
add
xor
dec
rcrl
in
rcrb
sub
xor
xchg
sub
fwait
inc
fs
addb
std
bound
inc
and
push
testb
inc
test
std
test
int3
vxorps
sub
pop
inc
jns
imul
call
sbb
push
push
dec
pop
jecxz
loope
push
jne
stos
movsb
push
xchg
and
add
dec
mov
dec
dec
jmp
sub
sbb
lods
xchg
mov
xor
movsb
dec
and
inc
xor
pushf
jle
jo
push
std
std
jle
fwait
in
daa
jno
fs
push
sbb
xchg
adc
std
rcll
leave
sbb
jo
push
dec
std
clc
inc
adc
xor
sbb
push
les
add
add
xchg
mov
lret
cmpsl
scas
cmp
or
sub
scas
cmp
push
mov
mov
push
and
out
xchg
mov
sub
std
add
and
push
push
std
cmp
scas
xchg
mov
xor
call
or
jl
inc
lds
dec
std
arpl
push
xor
mov
inc
ret
and
xlat
add
pop
xchg
adc
mov
pop
inc
jecxz
push
decb
movd
in
jp
push
xor
shl
push
sbb
jle
adc
xchg
and
push
xor
adc
std
lds
std
int
push
rcll
mov
push
jecxz
push
dec
std
push
in
push
and
xor
cli
inc
sbb
xchg
mov
mov
cmp
inc
xchg
adc
push
xor
pop
pop
or
xor
adc
cwtl
sbb
push
std
iret
loopne
sub
std
inc
push
xchg
mov
jnp
sbb
and
std
sub
or
stc
jne
jmp
movsb
push
adc
std
lock
dec
shll
sbb
cwtl
cwtl
xor
cmc
lods
jnp
adc
std
aaa
rcrb
xchg
adc
std
xchg
xchg
adc
andl
inc
fldt
push
add
pop
mov
adc
dec
std
xchg
or
adcb
test
test
xchg
mov
notl
cli
lea
rolb
xchg
adc
or
push
xor
push
std
jmp
jl
dec
mov
mov
cmp
andb
xor
sub
sbb
std
js
div
jns
adc
fcoml
std
push
push
xor
std
xor
and
in
sub
dec
jo
push
std
xor
inc
jecxz
insl
std
and
bound
inc
repz
rcll
imul
rcll
push
std
push
dec
std
mov
movsb
push
inc
ret
or
adc
and
sbb
daa
pop
out
dec
mov
int3
pop
inc
dec
sarl
std
pop
push
adc
mov
cs
mov
push
std
outsb
test
std
mov
mov
lret
xchg
adc
std
xchg
adc
test
xchg
mov
lret
mull
pop
pop
mov
std
xchg
sbb
push
fmull
insl
and
rdmsr
mov
std
jns
mov
shrb
sub
dec
cmp
insb
enter
sub
push
jmp
pop
scas
movsb
std
pusha
bound
mov
push
cmp
pushf
test
repnz
add
cmp
push
push
xor
das
xlat
imul
ret
dec
push
std
out
aas
xor
adc
mov
push
xor
fsubrs
sub
andl
sub
sbb
pusha
push
std
mov
cmpsb
fadds
sar
xchg
mov
add
push
push
xor
sub
std
jge
dec
dec
sbb
pop
insb
push
sub
std
dec
push
sub
sbb
call
add
sub
sbb
daa
std
sub
sbb
jns
dec
sarl
inc
ret
dec
std
add
cmpsb
std
movsb
push
push
ds
ret
arpl
inc
push
push
xor
xor
or
add
xchg
adc
xor
cs
xor
xor
adc
std
cmp
or
sub
std
mov
lea
push
add
mov
call
xchg
std
movsb
lcall
xor
mov
es
push
cld
shlb
ret
pop
add
push
xchg
adc
out
xor
pop
jge
ds
xchg
dec
adc
std
cmc
test
inc
mov
xchg
cmpsl
push
outsb
mov
mov
pop
les
imul
outsb
outsl
xor
sub
or
cmpsb
sub
or
xchg
mov
dec
mov
cmpsb
xor
sub
xchg
std
test
std
pop
dec
shll
std
mov
dec
mov
xor
xchg
adc
aaa
sar
mov
xchg
push
or
repz
xchg
sub
mov
inc
inc
insl
xor
mov
add
inc
jecxz
std
movsb
push
sahf
mov
sub
mov
mov
and
sub
sbb
std
mov
or
mov
ret
push
arpl
aas
mov
jno
sub
orl
insb
jns
aaa
xchg
adc
std
add
std
in
xlat
dec
call
cmp
mov
ret
push
push
call
sbb
mov
std
call
movsb
std
push
sub
adcb
push
xor
cld
cwtl
stos
std
dec
shll
sub
pop
inc
std
push
aad
shll
push
sub
insl
add
fistps
xor
jo
out
xor
add
nop
mov
xchg
adc
sti
cmc
mov
inc
jecxz
js
std
movsb
push
sub
es
jae
sub
scas
movsb
push
inc
and
test
mov
mov
nop
dec
mov
adc
xchg
adc
cmp
xor
jb
mov
push
adc
push
imul
mov
es
mov
ror
lahf
std
jo
inc
cmp
pop
sub
sar
clc
into
stos
sbbl
jne
jne
sub
sbb
sbb
mov
loopne
push
mov
std
popa
xchg
push
and
xchg
adc
std
push
add
xchg
std
adc
adc
xchg
std
sub
cltd
dec
dec
sar
adc
fisubs
or
std
stos
sub
dec
mov
jmp
sbb
fstpl
sub
imul
push
pop
dec
xchg
jmp
sbb
jbe
jno
std
fiadds
pop
repnz
in
addb
dec
shll
mov
mov
xor
stos
movsb
std
sub
std
movsl
pop
push
call
mov
ss
adc
adc
loop
xchg
std
mov
or
mov
adc
xchg
pop
sbb
dec
shll
push
pop
push
xor
push
std
pop
sub
push
push
std
lahf
shr
inc
dec
sar
inc
inc
loop
test
adc
mov
push
rclb
jnp
push
xor
pusha
lahf
or
xchg
adc
std
je
popa
test
pop
aaa
imulb
and
stos
std
test
mov
nop
push
scas
sub
std
dec
cmpsl
add
xor
and
sub
std
mov
std
and
dec
std
shll
push
stc
movsb
minps
std
int
add
sub
std
mov
inc
in
pop
shll
addb
or
out
rcl
and
std
cmp
xchg
pop
std
sbb
add
mov
das
sub
sbb
or
jmp
das
ds
sub
testb
test
sub
movsb
enter
and
jb
out
mov
pop
fisubrl
rorb
or
push
std
mov
shlb
and
adc
mov
ss
or
and
call
or
not
pop
sbb
jp
dec
sar
dec
das
inc
cs
sub
sub
sbb
shlb
stos
mov
shlb
push
setno
sbb
movsb
std
mov
sarl
sarl
negl
dec
std
sbb
mov
sub
add
xchg
mov
daa
std
jb
popf
fildl
int
aaa
stc
scas
dec
mov
mov
pop
dec
mov
cmp
std
jl
rolb
mov
and
rcrl
fsubr
leave
xchg
filds
pop
test
jecxz
sbb
mov
inc
std
and
pop
movsb
sbb
iret
add
insl
or
popf
mov
xchg
adc
jae
std
push
xor
adc
xorl
cmp
dec
xchg
adc
ret
cmpsb
dec
mov
or
xchg
shrb
std
sub
sbb
std
xchg
add
sbb
sub
std
sub
pop
ds
dec
pop
fistpl
lcall
stos
jbe
xchg
mov
sub
sub
std
sub
addr16
into
lea
push
sub
pop
fimuls
pop
xchg
adc
cmpsl
jl
push
push
xor
cld
and
inc
ret
xor
inc
jecxz
loopne
mov
and
sarl
and
jnp
dec
std
cmc
add
adc
repz
sub
xchg
std
ret
xor
and
mov
cmp
and
jmp
xchg
push
and
mov
std
and
daa
and
mov
shrl
adc
sub
in
push
or
push
dec
sarl
std
pusha
push
push
xor
mov
dec
mov
sbb
sarl
jecxz
push
std
push
mov
inc
sub
add
inc
dec
sar
mov
or
lds
std
adc
std
cmp
jecxz
sub
std
mov
inc
std
in
and
std
rcll
add
ret
and
std
lea
and
popa
repz
std
ret
lods
adc
jecxz
out
rcll
push
pop
xchg
adc
scas
repz
imul
push
pop
outsl
test
mov
imul
sbb
or
push
rol
dec
mov
std
add
lcall
push
push
xor
pop
test
push
mov
xchg
ret
jg
add
outsl
cmpsl
popf
mov
mov
sub
outsl
std
sub
stos
dec
xlat
dec
sbb
sub
shrb
cmpsb
mov
xchg
mov
xor
cwtl
std
aad
xor
push
push
std
rcll
std
and
std
adc
xor
mov
shlb
pop
mov
push
fidivrl
stc
jnp,pn
mov
push
pop
sarb
frstor
jbe
aas
pop
xor
out
fisubl
xchg
mov
repz
out
mov
aaa
jecxz
xchg
adc
push
mov
xlat
pop
push
adc
push
xor
push
ret
jbe
ret
dec
push
std
mov
push
and
xchg
sbb
pop
jg
jecxz
sub
pop
jo
dec
inc
and
push
dec
sar
and
sub
push
xchg
adc
sti
stc
push
adc
enter
cld
and
jno
fidivl
mov
inc
pushf
les
test
pop
sub
sbb
std
movsb
push
pusha
in
add
adc
scas
adc
and
and
sarl
rcr
mov
pop
std
mov
mov
and
add
inc
dec
std
or
add
push
jle
bound
mov
pop
cmp
std
cwtl
sahf
jmp
test
ja
push
int
repz
xor
sbb
stos
std
rcrl
sub
mull
mov
stos
push
shll
dec
mov
inc
ret
in
inc
adc
add
rcrl
sub
xchg
dec
inc
dec
rcll
jb
mov
mov
push
ss
adc
or
dec
std
fbld
notl
push
std
jle
jno
mov
xchg
mov
aaa
mov
jmp
and
out
and
imul
xchg
imul
inc
dec
std
cltd
pushf
xor
gs
sub
xchg
jbe
movsb
push
xchg
adc
pop
pop
xchg
adc
dec
decl
std
dec
sarl
pop
cmpsl
adc
cmp
adc
lds
xchg
std
push
shl
xchg
adc
sbbl
adc
fwait
pop
jnp
std
and
movsl
add
inc
xchg
js
popa
add
dec
mov
pop
andb
adc
std
jmp
or
aaa
mov
or
push
push
std
cwtl
sbb
mov
shll
pop
iret
and
push
std
push
sbb
xchg
adc
std
cmp
test
cmp
sbb
inc
jecxz
repnz
std
scas
shr
add
sbb
or
adc
push
push
xor
push
xchg
adc
and
adc
jno
pusha
xor
mov
xchg
std
pop
insl
push
adc
repz
cmp
loope
xchg
std
cmpl
and
movb
movsb
push
std
sub
outsb
call
or
std
mov
std
sbbl
push
pop
xchg
adc
std
icebp
mov
push
push
xor
jmp
fmuls
dec
inc
jecxz
push
std
xchg
outsb
dec
and
imul
std
hlt
hlt
dec
push
dec
sar
sub
outsl
sarb
std
sbb
mov
pop
mov
jge
lods
daa
dec
mov
push
std
repz
adcb
std
push
sbb
sbb
adc
sbb
sbb
in
and
sbb
xchg
push
add
jns
mov
push
push
xor
je
dec
sarl
xor
loop,pt
add
push
std
jno
subl
std
push
push
xor
mov
das
sub
out
xchg
pop
insl
std
cmp
outsb
sbbb
xor
shll
xchg
pusha
push
test
pop
lea
adc
adc
std
or
mov
pusha
std
mov
adc
pop
nop
or
sub
sbb
mov
psubq
xor
mov
push
inc
in
addl
std
xchg
mov
test
mov
lcall
pop
dec
inc
cmp
inc
jo
repnz
pop
dec
sar
xor
xor
jecxz
mov
les
mov
std
xchg
adc
cmp
std
dec
mov
or
arpl
test
bound
and
mov
push
push
dec
push
and
stc
adc
push
and
pop
les
push
dec
pop
cmp
inc
push
sbb
dec
mov
add
std
push
xor
mov
in
push
std
pop
into
sbb
fistps
or
int
push
dec
sar
dec
shll
cmp
insl
or
sub
std
push
mov
mov
add
dec
xor
es
fldcw
mov
cltd
int
jns
add
fmull
mov
ja
lods
mov
push
divl
cmpsl
stc
or
and
pop
adcb
cmp
mov
mov
dec
fimuls
flds
jecxz
dec
std
test
or
push
sbb
add
adc
mov
fucomp
call
cmpsb
cmc
jle
push
sub
adcb
fstl
push
push
xor
inc
xchg
sbb
aaa
cmpsl
js
pusha
cwtl
adc
sahf
cmp
inc
inc
jae
pop
push
sub
push
ret
xor
dec
pop
imul
or
jl
sbb
jp
adc
in
repz
daa
add
cmp
push
ret
enter
movsb
das
inc
mov
push
or
xor
push
cmp
loope
cmp
adc
pop
xchg
xor
add
ja
or
sub
sub
sub
cmp
mov
cmpsl
orb
aaa
xchg
mov
mov
cmp
sub
ja
popa
sbb
cmp
push
push
adc
ret
push
inc
lcall
pop
mov
cmp
cwtl
xor
inc
cmp
cmp
gs
jg
push
jne
or
cmp
adc
and
xchg
mov
cmp
sub
cmp
int3
je
pop
scas
inc
mov
iret
pop
xchg
mov
cmp
add
jmp
ret
pop
jg
sbb
mov
jecxz
add
sbbb
pop
and
outsb
sub
and
cmp
les
push
cmp
sub
pop
cmp
imul
lret
enter
and
pop
and
pop
loopne
sub
mov
sahf
cmp
mov
cmp
sbb
popa
sbb
sub
xchg
and
movsl
arpl
sti
les
pop
or
cmp
push
push
xor
js
push
ret
mov
cmp
rcrb
adcb
cmp
aas
push
or
mov
adc
rclb
mov
xchg
cmp
push
dec
cmp
ret
mov
cmp
push
fldt
cmp
and
jmp
inc
mov
je
sbb
adc
pop
mulb
push
ret
mov
sbb
popf
cmp
jno
cmp
add
cmp
cmp
fsubrs
xchg
cmp
inc
mov
inc
ror
jo
subb
and
dec
inc
or
pop
pop
jno
clc
pop
and
inc
or
sbb
cmp
add
push
cmp
mov
xchg
mov
and
lds
sub
sbb
cmp
jno
cmp
hlt
sbb
cmp
cmp
push
mov
mov
cmp
sbb
or
jns
mov
dec
lock
inc
orb
sbb
pop
push
jecxz
leave
fwait
sub
dec
xchg
mov
pop
popa
adcl
mov
cmp
push
xor
cltd
lcall
sti
decb
lock
cmp
sbb
sbb
sbb
jb
lds
cmp
xchg
mov
pop
xchg
ret
sub
push
and
xchg
lods
inc
outsl
sbb
xchg
testl
push
or
cmp
mov
push
sub
push
add
movb
and
outsb
dec
sbb
pop
dec
adc
cmp
or
sbb
test
and
cmp
dec
pop
or
popa
sbb
inc
scas
jg
sbb
fnop
push
cmp
dec
pop
cmp
dec
pop
popa
mov
or
cmp
mov
or
pop
fiaddl
pop
xchg
sbb
jp
addl
popf
xchg
pop
xchg
jnp
bound
mov
pop
sbb
pop
out
xor
test
push
call
adc
xor
sub
or
or
adc
popa
sbb
sbb
rcrb
shl
hlt
sbbb
mov
sub
ret
pop
pop
or
ja
cmp
mov
sbb
int3
pop
out
push
nop
sbb
adc
xor
out
push
nop
xchg
mov
jo
ret
xchg
sub
and
adc
pop
xor
xchg
adc
aaa
pop
jecxz
push
call
xchg
dec
sub
pop
and
push
or
lret
pop
aad
inc
pop
xchg
arpl
jle
and
xchg
testl
movsl
in
pop
adc
lret
pop
mov
pop
xchg
pop
and
pop
adc
or
pop
jo
pop
fcmovnb
pop
adc
or
jo
pop
addr16
sub
xor
test
scas
sbb
pop
push
mov
insb
sub
or
pop
inc
or
mov
pop
dec
je
pop
popa
sbb
mov
scas
sbb
push
sub
lret
cmp
das
cmp
or
test
and
or
pop
shlb
pop
test
inc
pop
cs
jg
test
inc
pop
and
adc
xor
mov
gs
loopne
test
mov
pop
pop
or
mov
xor
xor
nop
add
pop
or
dec
adc
pop
jecxz
pop
adc
adc
push
inc
pop
and
loope
adc
pop
jp
or
bswap
scas
lahf
and
loope
bndstx
push
js
adc
inc
or
pop
les
sarb
and
ret
push
pop
and
sbb
pop
lret
sbb
add
arpl
cmpsb
push
push
and
ret
in
ret
es
test
push
add
push
popa
sbb
and
and
pop
mov
cmp
and
mov
ljmp
and
push
stc
push
in
lea
xchg
pop
aaa
mov
dec
stos
sub
adc
fs
adc
mov
mov
pop
adc
push
add
mov
ret
out
push
and
sub
pop
mov
and
ja
pop
jno
sub
scas
or
ds
pop
cltd
dec
adc
adc
pop
pop
xchg
add
daa
hlt
inc
les
adc
xor
sub
pusha
mov
sbb
adc
push
pop
loop
popa
pop
cwtl
jg
test
dec
cli
pop
mov
xchg
mov
xchg
adc
sbb
or
inc
loopne
lock
sbb
fwait
or
aas
jo
test
fcoml
lret
pop
shlb
faddl
fsubs
pop
adc
pop
dec
sub
pop
pop
add
dec
mov
push
or
mov
and
xchg
cmp
xor
test
int3
out
popa
enter
pop
mov
or
pop
mov
xchg
and
test
adc
adc
dec
imul
cli
fdivrl
fcompl
popl
iret
or
xchg
sub
mov
pop
inc
pop
xchg
or
popa
pop
sub
sub
sbb
pop
in
roll
add
xchg
aam
push
adc
dec
inc
pop
and
ret
leave
ret
push
mov
mov
adc
aad
jno
pop
test
gs
adc
lods
push
add
push
out
and
ss
outsb
or
pop
push
scas
ja
ret
inc
icebp
adc
idivl
or
fistps
xchg
jno
push
xchg
xor
mov
pop
jle
or
adc
pop
out
inc
sbb
mov
dec
or
and
sbb
ret
mov
cmp
pop
or
dec
pop
jb
mov
test
popa
push
or
pop
add
sub
add
ret
sub
int
inc
test
divl
adc
or
cmp
ret
clc
adc
test
or
xor
ret
nop
cmp
popf
xchg
jge
sarb
fwait
inc
pop
pop
lcall
dec
adc
mov
sub
mov
xor
dec
test
xor
add
gs
movsb
add
lret
xor
minps
push
push
test
mov
or
pop
mov
xor
test
test
xor
inc
arpl
or
pop
push
add
sub
cld
inc
and
negb
lret
cmp
push
xor
inc
pop
rcrb
lods
pop
adc
pop
xchg
dec
sub
or
and
or
mov
fildl
insb
dec
xchg
push
pop
xor
or
mov
mov
rclb
jl
mov
jbe
xchg
jno
sbb
sbb
pop
xchg
inc
ret
or
test
jecxz
pop
test
ret
cmp
lret
cmp
outsb
popf
jl
push
pop
add
mov
lret
js
pop
xchg
loope
xor
popf
test
pop
popa
fildl
push
fcoms
mov
push
cmpsb
push
push
or
clc
jp
or
pop
test
adc
pop
or
arpl
xchg
js
and
fcomp
mov
mov
and
adc
xor
gs
cwtl
es
sub
inc
or
cmp
pop
adc
xor
hlt
pop
inc
cli
push
aaa
jp
dec
ficomps
lret
cmp
lods
xor
push
or
push
cmp
add
inc
add
dec
adc
xor
cmpsb
pop
mov
loopne
jns
sbb
repnz
test
add
pop
and
aaa
or
pop
sub
lock
icebp
push
mov
repnz
cltd
jge
xor
inc
repnz
push
shrb
fxch
rcrb
sahf
data16
sysret
cmc
add
jbe
ucomiss
adc
push
and
inc
inc
mov
adc
and
mov
pop
je
mov
or
daa
sbb
sub
popa
sbb
and
shrb
pop
inc
sbb
fisubs
btl
and
test
cmpsb
and
test
or
jo
cs
pop
test
xor
sub
aad
inc
or
pop
lahf
std
add
sbb
or
repnz
popa
pop
sub
xor
addb
pop
and
scas
rcrb
pop
pushw
jp
dec
nop
xlat
pop
popf
jo
and
add
pop
andl
jbe
mov
jne
add
sub
es
push
push
xor
andb
add
pop
jmp
sbb
sahf
dec
pop
or
loope
mov
test
cmpsb
pop
and
imul
mov
pop
add
test
neg
xchg
push
aas
push
call
fldln2
fcomp
ja
iret
cmp
and
mov
daa
mov
xchg
ret
or
cwtl
sbb
ret
push
pop
jnp
popa
sbb
pop
popa
xor
mov
push
mov
push
or
dec
cltd
jp
mov
jge
adc
dec
jo
jnp
pop
out
push
adc
or
gs
inc
xchg
fiadds
sbb
pop
cmc
rorl
pop
mov
fildl
inc
mov
aam
pop
dec
add
mov
adc
popa
sbb
dec
int3
mov
fstpl
test
test
out
inc
xor
xchg
jno
jb
dec
arpl
add
sub
mov
push
and
pop
mov
sahf
cmp
jmp
std
sbb
cs
std
lock
popa
pop
push
adc
sbbb
ljmp
pop
and
in
jmp
cmp
adc
aas
and
xor
sub
cmp
pop
mov
pop
dec
cmp
jae
imul
cld
clc
sbb
push
pop
test
jb
lock
add
pop
les
xchg
xor
popa
sbb
mov
pop
cmp
sub
pusha
inc
pop
push
xor
pop
popa
sbb
push
pop
loope
stos
adc
adc
rcrl
pop
cld
out
sub
das
inc
sub
adc
clc
les
inc
test
add
adc
pop
test
push
jb
or
xor
and
and
pusha
push
mov
icebp
pop
shll
jmp
mov
pop
aad
mov
and
fadd
sub
and
and
pop
dec
test
mov
ret
repnz
hlt
mov
pop
pop
lret
mov
or
inc
pop
inc
lcall
mov
sbbl
jp
sbb
sub
push
or
inc
lret
and
sbb
adc
sub
stos
pop
mov
sbb
push
and
andb
mov
mov
testb
rorl
sbb
test
gs
clc
jo
or
jbe
ss
pop
inc
pop
call
sub
cs
pop
lret
cmp
push
or
or
dec
mov
test
in
push
or
pop
arpl
hlt
aad
ret
and
pop
test
repz
mov
sub
jecxz
mov
mov
sub
xchg
add
mov
adc
mov
test
or
mov
inc
pop
or
cmp
lret
sbb
pop
cld
push
dec
inc
or
dec
loopne
sbb
add
sub
push
fcompl
xchg
xor
cmp
push
push
push
or
js
pop
pop
inc
das
andl
and
lret
xor
pop
xchg
clc
mov
pop
test
and
bound
mov
and
or
push
fsubs
or
pop
and
jo
xor
testl
and
jp
dec
pusha
pop
pop
xchg
inc
scas
cmp
scas
inc
pop
adc
mov
adc
mov
add
sbb
mov
adc
in
hlt
inc
das
or
dec
mov
dec
mov
pop
add
dec
adc
ret
div
jno
cmp
xor
mov
adc
xor
ret
sbb
push
sbb
aam
and
jbe
lcall
add
shlb
ret
push
pop
scas
ror
pop
sbb
adc
pop
inc
pop
sbb
call
iret
pop
pop
gs
in
jge
and
test
lds
push
sbb
in
fsubs
inc
pop
pop
stc
into
bound
rorl
adc
test
add
jecxz
push
cmp
jl
and
cmp
int3
xchg
mov
out
test
adc
xor
dec
and
popa
sbb
jecxz
dec
cmpsb
xor
dec
pop
adc
or
push
pusha
pop
test
pop
mov
cs
inc
xor
ret
sub
sub
inc
add
and
xor
mov
xor
xchg
adc
adc
in
rcll
or
aad
in
mov
xchg
shl
or
test
sub
sbb
js
call
xor
and
mov
and
inc
sbbb
xchg
dec
pop
pop
aaa
jmp
ret
ficomps
lret
mov
out
test
push
or
sub
and
pop
out
enter
jns
arpl
in
roll
imul
sbb
mov
push
jmp
popa
inc
ret
repnz
adc
std
sub
aaa
adc
xor
sbb
or
insl
sbb
and
std
add
je
mov
cltd
xor
mov
cwtl
std
shr
inc
hlt
dec
subb
cmp
adc
dec
push
add
lods
pushf
aaa
and
xorl
cmp
xchg
cmp
fs
jno
lret
insb
data16
js
cmpsb
jno
push
push
cmp
insl
sbb
inc
std
and
fidivl
or
adc
adc
add
aam
or
out
sbb
adc
decb
ljmp
push
mov
std
pop
fbstp
test
std
xlat
inc
fwait
adc
std
fwait
sbb
mov
push
xchg
push
push
or
dec
push
nop
test
xchg
add
std
pop
and
subb
enter
stos
jo
add
and
orb
push
add
inc
std
add
test
pop
mov
enter
mov
std
mov
mov
stc
fldenv
std
mov
call
xlat
clc
lods
adc
roll
add
dec
cmp
ret
xchg
mov
adc
pop
or
sarl
std
cwtl
lock
mov
pushw
lahf
cmpsl
in
add
lock
jge
xor
and
xlat
addb
enter
insb
outsl
sub
jbe
cmp
cmp
add
shlb
add
add
out
inc
inc
test
out
sub
and
or
aaa
sbb
loope
or
add
sbb
cmpsb
popa
pop
push
mov
loopne,pn
sbb
mov
outsb
cwtl
xchg
sbb
jecxz
sbb
jecxz
aaa
fcomps
loope
inc
lahf
aaa
sbb
adc
pop
aaa
dec
ret
sbb
inc
dec
sbb
popf
je
dec
jecxz
push
aaa
sbb
or
or
jmp
pop
xor
cmpsb
icebp
add
sbb
sbb
cmpsb
sbb
cwtl
sbb
dec
push
push
cli
les
xor
inc
ret
and
stc
xor
mov
adc
sbb
fnsave
or
rcrl
inc
sbb
cmpsb
loop
and
int3
mov
and
mov
sti
sbb
mov
fnsave
or
or
xor
push
loopne
xchg
mov
jle
test
mov
push
and
subb
test
les
out
ja
ret
je
popf
or
dec
jge
sbb
sbb
mov
jnp
add
mov
dec
add
std
cltd
mov
stos
pop
test
and
loopne
imul
fimull
sbb
rolb
cmpsb
call
fdivl
or
dec
ret
sub
adc
popa
sbb
sub
and
xchg
call
std
xor
push
or
std
loop
inc
jno
std
or
or
inc
add
test
pop
aaa
dec
std
pop
xor
test
in
adc
std
cs
test
jno
std
dec
bound
pop
repz
xchg
pusha
popa
sbb
pop
lea
shl
mov
popa
sbb
movsb
or
std
fs
popa
sbb
je
push
jb
mov
push
dec
sub
or
int3
das
sbb
outsb
cwtl
sbb
xor
mov
into
or
std
xchg
jnp
dec
sbb
xor
ret
or
les
cmpsl
jo
cmp
imul
xor
or
movsl
and
adc
fdivrs
or
and
sbb
push
enter
enter
sbb
adc
es
fnstsw
shll
imul
or
cltd
sbb
adc
icebp
jo
adc
sahf
mov
movsl
push
jbe
xchg
or
cltd
xchg
sbb
test
add
or
and
xor
enter
divl
sbb
mov
sbb
inc
orl
sbb
test
and
stos
dec
arpl
clc
and
pushf
rolb
sbbl
sbb
and
add
sbb
jmp
sbb
imul
pusha
sub
sbb
xor
aad
sbb
push
xor
xchg
sbb
orl
mov
decl
not
jo
cwtl
ja
andb
and
sti
add
jno
push
adc
mov
inc
cmpsb
sbb
cmpsb
sbb
mov
pop
sbb
nop
imul
add
jnp
sbb
xor
or
loopne
mov
sbb
int
int3
jecxz
pushf
pop
loop
popa
xchg
nop
sbb
mov
sbb
sub
and
cltd
xchg
sbb
push
das
cmp
jl
sbb
push
jb
ret
or
mov
insb
pop
orl
jl
sub
jbe
mov
inc
sbb
jecxz
rcr
and
add
or
dec
inc
sbbl
mov
or
mov
lar
jns
inc
cmpsl
cmp
xor
jno
mov
jno
sbb
std
mov
icebp
sub
push
popa
scas
inc
cmpsb
sbb
mov
rcrl
mov
push
and
inc
cmpsb
sbb
orl
jno
pop
test
add
outsb
repnz
sbb
push
and
push
sbb
imul
xor
push
sahf
jg
mov
xchg
dec
add
sbb
adc
jbe
push
or
xor
fwait
jno
inc
cmpsb
jno
sbb
push
sbb
scas
nop
imul
cltd
loopne
and
fmull
pop
sbb
sub
jle
sbb
nop
imul
push
jno
add
sbb
pop
or
add
sbb
mov
fsubs
sbb
shlb
pop
adc
addb
int3
fisubs
enter
sbb
add
popa
das
add
subl
sbb
inc
cmpsb
jno
btc
pop
mov
sub
adc
sbb
xor
sub
rcrl
loopne
lods
ja
push
mov
mov
sbb
repz
jnp
xchg
inc
add
inc
cmpsb
sbb
and
pop
and
adc
orl
nop
les
pop
sbbl
sub
dec
inc
and
and
sbb
enter
int3
or
xchg
inc
adc
xlat
jp
adc
xor
lods
lods
mov
enter
push
sbb
rcrb
faddl
adc
sbb
xor
xor
mov
sbb
mov
sub
sbb
stos
inc
adc
push
and
mov
mov
mov
xor
mov
sbb
sub
add
inc
cmpsb
sbb
add
lea
imul
dec
sub
shlb
enter
and
cmp
sbb
enter
push
sub
inc
insb
lret
addr16
inc
cmp
pop
add
mov
sbb
xor
sbb
sbb
sbb
mov
sbb
ret
push
sbb
push
mov
cmp
fs
sbb
outsb
sbb
mov
cmpsb
icebp
cli
stos
in
out
cltd
popf
mov
inc
cmp
sbb
adc
sbb
and
addb
std
cmpsl
pop
cmc
out
orl
je
adc
push
cltd
xchg
and
and
xor
adc
add
dec
adc
sbb
pushf
or
insl
out
sub
sub
cmpsb
mov
orl
add
mov
aaa
mov
sbb
jmp
movsb
mov
xor
test
cmp
orb
sbb
xchg
sbb
andb
sbb
sbb
shlb
sarl
xor
movsl
in
jecxz
jb
sbb
dec
sbb
je
fisttps
nop
imul
enter
fsub
imul
lret
enter
sbb
add
sbb
add
cltd
sbb
std
sbb
jb
mov
xor
sub
imul
scas
sbb
xchg
sbb
scas
sbb
sub
sub
sbb
push
adc
sbb
aaa
push
ret
cmp
jbe
sbb
sahf
xor
movb
loopne
cmp
adc
xor
add
sarl
out
imul
cltd
cmp
nop
imul
adc
lds
xchg
cltd
sbb
and
cltd
xchg
and
push
das
add
mov
sub
sbb
push
cld
xor
test
jno
add
mov
jbe
in
inc
and
push
adc
sbb
and
mov
xor
sbb
icebp
pop
fisttpl
sbb
sbb
shr
sbb
rcl
mov
out
inc
enter
nop
xor
sbb
cmpsb
sbb
ret
jl
out
ret
dec
pop
mov
sbb
frstor
jl
push
call
sbb
add
jmp
add
inc
and
cltd
sbb
sbb
cltd
xchg
jge
xor
dec
lret
aaa
or
xchg
or
f2xm1
add
or
enter
or
es
push
cli
sbb
sbb
and
sbb
xor
dec
in
jecxz
loopne
sbb
jbe
adc
push
mov
push
pop
adc
rcrl
mov
adc
sahf
or
stos
sbb
adc
fadds
sbb
sbb
sbb
sbb
or
rcll
pop
add
sbb
enter
imul
pushf
rcrl
ficomps
cmp
or
or
dec
arpl
sbb
sbb
adc
sbb
push
mov
or
or
sbb
flds
repz
mov
cmpsb
jno
cmp
nop
imul
xchg
cmpsb
popa
and
jmp
push
or
add
imul
sbb
dec
inc
lods
ret
jns
inc
lock
stos
add
push
pop
fwait
call
sbb
push
pop
sarb
cmpsb
sbb
cltd
xchg
sub
test
push
ja
push
mov
cmp
pop
orl
call
sbb
and
mov
xor
or
mov
mov
dec
ret
lcall
negb
push
cmp
loop
call
jb
push
and
sbb
adc
adc
sbb
inc
inc
add
lret
and
imul
add
or
inc
cmpsb
jno
mov
jcxz
push
and
mov
dec
arpl
pop
lret
sbb
sbb
push
inc
sbbl
movsl
cltd
inc
adcb
mov
sbb
inc
cmpsb
sbb
lock
hlt
ds
push
jns
adc
sahf
out
ret
pop
fcmovu
push
loopne
loop
xor
idivb
pop
jg
sbb
and
or
iret
mov
sbb
xor
inc
mov
mov
pusha
jb
adc
idiv
sbb
rclb
rcrl
add
sbb
or
jo
addb
cs
fimuls
imul
xchg
dec
push
xor
and
dec
adc
sbb
dec
and
sbb
sti
pop
sarl
or
stc
push
and
rcrl
cmp
mov
sbb
mov
xchg
adc
lods
nop
add
nop
imul
and
jmp
push
or
iretw
jecxz
pop
dec
add
dec
ret
inc
pop
out
rcrb
sbbl
adc
xor
cmp
sarl
sbb
sub
and
fs
orl
out
and
xor
xor
push
sbb
adc
and
and
sbb
sbb
mov
sbb
and
sbb
mov
pushf
sbb
shll
and
sbb
inc
lret
ret
pop
add
je
sbbl
add
sbb
xchg
enter
addr16
xor
push
fwait
push
xchg
pop
or
sbb
cmp
adc
mov
orl
dec
and
fisubl
xor
mov
or
adc
insl
pop
jno
mov
cmp
imul
or
pop
inc
jecxz
add
popa
cmp
cmp
and
xchg
add
or
pop
dec
jp
fsubrl
loopne
mov
mov
rclb
pushf
sbbb
add
cmp
stos
fisubl
outsb
test
sbb
sbb
sbb
inc
pop
xchg
stos
fisubl
cmp
mov
fisubl
fmull
pushf
or
mov
stos
ss
in
lea
test
stos
ss
add
pop
push
loop
aam
sbb
roll
movsb
or
push
jne
adc
add
call
mov
je
mov
or
mov
add
push
pop
mov
fwait
xor
add
inc
icebp
sbb
out
or
fldt
or
jae
insl
shlb
pop
push
sbb
adc
sarb
sbb
les
lahf
push
or
ss
sbb
mov
cmpsb
das
push
pop
or
jno
add
dec
push
xchg
lods
ficompl
inc
mov
sbbl
push
insl
rcrb
mov
ret
add
loop
stos
mov
sbb
or
arpl
jmp
mov
pop
les
xor
pop
push
xchg
pop
pop
lea
adc
aam
pop
mov
sbbl
cmpsb
ss
add
push
sti
fisubl
loop
sbb
push
lea
scas
popa
pushf
pusha
xor
sbb
jno
pop
push
adc
ss
xor
pop
sbb
pop
adc
test
pop
pop
xchg
xchg
xchg
aam
lea
fisubl
jecxz
in
fwait
jnp
and
adc
cmp
push
sbb
sub
add
loope
insl
sarb
pop
or
in
jns
call
mov
inc
arpl
pop
jle
jmp
addr16
add
rcll
lods
ret
jg
sarb
push
rcl
js
inc
pop
sub
or
pop
fcomps
push
insl
shlb
and
sbb
pop
rolb
push
push
insl
pop
ret
jo
or
add
test
jb
out
mov
adc
test
sbb
lea
sbb
pop
call
add
movb
pop
out
filds
in
adc
xor
pop
push
xchg
fcoml
test
sbb
jle
dec
pop
xlat
push
lea
pop
jns
scas
mov
mov
or
pop
pusha
add
xor
ret
push
adc
sbb
inc
ja
sbb
or
or
cmp
pop
mov
arpl
ret
sbb
sbb
push
adc
cwtl
mov
xor
enter
je
pop
dec
push
sbb
jge
repnz
jmp
sarb
inc
pop
adc
stos
in
cmp
mov
xor
and
inc
sbb
cmpl
xor
add
adc
push
sbb
punpckhwd
js
js
cmp
aam
lea
and
push
lea
push
mov
dec
pop
pop
aad
pop
mov
or
adc
adc
jp
mov
pop
stos
or
pop
adc
lea
pop
sbb
inc
pop
inc
xchg
xor
adc
pop
lret
xor
push
sbb
pop
cwtl
fstl
pop
jo
movsb
sbbl
pop
dec
push
lea
adc
mov
test
mov
jns
test
sbb
call
push
lea
mov
adc
push
pop
inc
xchg
or
cmpsb
mov
mov
inc
insl
sarb
push
lea
xchg
hlt
pop
fisubl
push
lea
sbbb
insl
adcl
inc
scas
in
pushf
mov
pop
add
mov
pop
and
and
mov
pop
adcb
cltd
cwtl
adc
push
xchg
push
sbb
xchg
popa
dec
pop
insl
sarb
sbb
inc
pop
sub
fadds
test
call
push
xchg
dec
xor
dec
jb
lods
loopne
insl
pop
add
add
pop
or
dec
insl
rcrb
mov
and
mov
lods
fadds
mov
add
fwait
jg
aad
or
inc
arpl
add
daa
test
sbb
jl
fisubl
sbb
xorl
jnp
mov
mov
ficompl
inc
inc
insl
rcrb
les
add
pusha
add
mov
inc
push
sbb
push
pop
inc
inc
test
rcll
pop
inc
mov
pop
out
or
pop
mov
cwtl
xchg
push
push
pop
lcall
aad
or
xchg
mov
adc
jo
aad
pop
sbb
xchg
pop
mov
pushf
nop
dec
and
ficompl
add
insb
or
ficomps
lds
pop
cmp
push
push
xchg
cli
add
push
lea
add
pop
fsubrl
or
sbb
pop
cmpsl
adc
pop
test
sbb
jo
pop
insl
sarb
rolb
cmp
call
js
ss
rclb
bound
or
fadds
sbb
sbb
push
dec
outsl
sbb
jno
or
mov
sbb
insl
pop
pushf
pusha
outsb
sub
adcb
sub
cmp
addb
insl
pop
aam
lea
and
sbb
or
pop
xor
pop
aam
cmp
xor
push
sbb
fisubl
rol
stos
pop
or
inc
insl
rcrb
sarb
sbb
pop
pop
or
insl
pop
les
mov
add
lods
xchg
or
dec
add
pop
andb
mov
push
aam
lea
sbb
inc
sbb
stos
pop
insl
outsb
in
sub
or
insl
sarb
or
push
pop
hlt
sarb
sbb
push
inc
insl
pop
test
pop
bound
xorb
out
push
loop
or
or
loopne
movsl
mov
adc
ficoms
loopne
es
push
sbb
xor
adc
mov
fwait
pop
negb
sbb
clc
sbb
pop
notl
shrl
clc
in
call
popa
shr
hlt
pop
jp
mov
call
lock
popl
lcall
arpl
or
in
mov
mov
or
push
test
mov
push
sbb
insl
pop
gs
mov
jecxz
sti
push
pop
pop
push
xchg
sub
xor
and
inc
jecxz
push
xor
fisubl
push
addl
mov
mov
sub
jp
and
push
lods
mov
sbb
or
or
fs
imul
ss
adc
jbe
ss
arpl
pushf
mov
repz
mov
pop
push
mov
pop
xchg
sbb
aad
lea
or
mov
mov
arpl
adc
pop
mov
arpl
cmp
mov
push
dec
push
sbb
dec
adc
xor
mov
ss
mov
pop
add
push
lcall
movb
pop
push
pop
add
adc
or
push
addl
imul
sbbl
mov
push
mov
jecxz
pop
aam
lea
ficompl
push
push
out
add
mov
inc
aam
or
pusha
adc
inc
inc
addl
dec
loope
cmpsb
dec
jbe
sub
cmp
push
ret
ret
mov
pop
mov
in
mov
adc
ss
repz
cmp
lods
sbb
test
rcrb
sbb
xchg
pop
ss
jmp
pop
cwtl
lret
xchg
lock
push
mov
pop
mov
jecxz
pop
addr16
insl
shlb
shlb
or
pop
xchg
mov
add
push
or
mov
loop
and
inc
jecxz
inc
sub
cld
mov
call
sbb
iret
sbb
sub
inc
mov
xor
aad
nop
test
pop
jne
fisubl
fisubl
xchg
cwtl
cmp
add
push
mov
pop
fildll
pop
sbb
mov
and
rorb
test
add
push
sbb
push
sbb
sbb
lcall
sub
jbe
gs
or
jo
lea
push
fdivr
stos
cmp
stos
push
push
sbb
push
sbb
inc
sbb
gs
push
lea
jno
sbb
ret
or
push
sbb
xchg
inc
jecxz
sbb
ret
nop
and
inc
add
push
frstor
push
jge
inc
and
scas
xor
stos
lret
movsl
test
jo
xor
mov
add
adc
xchg
popa
mov
push
lea
shlb
jl
cmpl
leave
sbb
mov
inc
loope
adc
nop
js
adc
out
sbb
dec
inc
test
xor
daa
pop
mov
aas
push
sbb
mov
ja
and
jg
jnp
jno
nop
add
add
pop
or
push
xorl
adc
jg
adcl
sbb
cli
cmpl
cmpb
or
leave
mov
jns
mov
push
sbb
and
inc
out
cmp
pop
and
push
lea
dec
repnz
jecxz
sub
adc
repnz
pop
repnz
orl
sbb
adc
xor
mov
cmp
sbbb
push
inc
sbb
add
xchg
xchg
lods
bound
xchg
push
gs
leave
stos
jecxz
pop
inc
addb
sarb
push
pop
jb
sbb
mov
push
or
xor
ds
addr16
sbb
push
jbe
mov
push
sbb
cmp
sbb
mov
fstl
sub
call
dec
loopne
test
push
dec
pushf
jne
pop
cmc
sbb
sbb
xchg
leave
cmp
sbb
mov
cmp
sub
cs
jle
sbbb
pop
add
cltd
push
test
out
add
xor
push
sbb
and
cmp
dec
push
sbb
dec
sbb
xchg
shlb
fs
push
sbb
or
imull
jl
sub
ds
cmpsl
inc
sbb
in
adc
jecxz
rclb
sbb
mov
scas
jecxz
cld
loopne
sbbb
mov
sub
imul
pop
pop
js
adc
sbb
push
push
sbb
mov
sbb
mov
adc
or
nop
push
push
push
lea
or
xchg
sbb
ficoms
loop
mov
jne
imul
mov
test
arpl
push
xor
mov
sbb
sbb
add
sbb
popa
mov
mov
outsb
sbb
inc
sbb
imulb
sub
or
or
dec
sub
xor
xchg
inc
jecxz
mov
adc
cld
adc
mov
push
push
or
test
pop
outsl
push
pop
pop
push
push
lea
mov
push
popf
xchg
inc
arpl
stos
sbb
inc
test
sbb
test
and
out
stos
sbb
popa
aas
lahf
sub
dec
nop
adc
test
cld
xchg
or
jmp
dec
push
or
shl
pop
fwait
lods
mov
pop
sbb
mulb
das
sbb
test
sbb
inc
inc
cmp
ss
sbb
stos
sbb
adc
sbb
sbb
xor
aas
enter
sbb
adc
push
clc
sbb
mov
cwtl
pop
mov
insb
cmpsb
lret
clc
sbb
and
inc
fsubrl
pop
sbb
inc
mov
cmp
push
rcrb
and
test
sbbb
sbb
insl
mov
dec
push
aaa
push
xchg
inc
sbb
or
sbb
loop
push
push
stos
outsb
mov
ss
shlb
out
ja
xchg
push
out
add
xchg
inc
ret
adc
or
sub
call
push
push
add
out
enter
pop
sub
mov
aas
out
push
sarb
sbb
xor
push
sbb
xchg
sub
inc
sbb
sub
push
rcrb
xor
push
lea
sub
mov
sub
aam
push
sbb
jnp
and
out
add
or
or
bound
add
sbb
stos
or
sbb
inc
sub
into
xor
add
lods
adc
sbb
mov
sbb
stos
sbb
and
mov
xor
call
outsb
dec
es
hlt
cs
mov
or
test
sbb
xor
lret
mov
sbb
bound
mov
cmpsb
lret
clc
mov
sbb
push
lea
xchg
mov
sbb
lea
push
xchg
addl
add
sbb
sbb
mov
sbb
lret
or
dec
adc
cmpsb
stos
sbb
lret
cmp
push
sbb
add
push
gs
push
lea
cmp
sbb
inc
mov
in
pop
pop
xor
push
orb
sub
xor
test
cld
mov
arpl
scas
mov
push
xchg
inc
jecxz
sbb
cmpsl
push
push
aad
mov
inc
push
push
sbb
movsb
push
adc
stos
andb
xor
sub
sbb
loopne
inc
mov
aaa
pop
xchg
inc
sbb
inc
jecxz
adc
pop
movb
test
dec
push
sbb
rcrb
push
inc
pusha
add
loope
test
sbb
lcall
pop
sbb
adc
xor
cmpsl
stos
sbb
adc
sbb
mov
mov
jne
or
lret
xor
aas
add
push
or
or
fidivl
or
xchg
pop
inc
rcrb
lea
add
xchg
mov
inc
xor
or
cmp
xchg
pop
gs
jno
jge
push
xor
adcb
or
test
mov
pop
mov
adc
add
dec
mov
stos
fsubs
roll
push
inc
les
and
push
sub
push
into
push
bound
jo
sbb
test
add
js
and
push
pushl
sub
lcall
int
lea
pop
cmp
in
and
loopne
fnstcw
cmpw
cmp
adc
cmp
ffreep
insb
cmp
dec
outsb
insb
sarb
ss
addw
push
cmp
cmp
mov
push
pop
lds
xor
cmp
xor
push
sub
add
pop
push
shll
cmp
push
lea
test
in
mov
mov
push
push
push
ss
jmp
sarb
imul
dec
push
sarb
sarb
xor
xor
faddl
jno
into
ds
repz
inc
mov
pop
lcall
lahf
or
lds
push
sarb
mov
ret
and
in
xor
cmp
aaa
xor
cmp
lcall
loopne
mov
lcall
shlb
ss
or
cmp
or
pushf
dec
mov
lods
aaa
test
imul
push
cmp
cmp
jecxz
cmp
jo
cmp
jb
sbb
orb
or
lret
les
lcall
pop
mov
xor
stc
sub
or
pop
mov
cmp
lea
cmp
cmp
sbb
inc
int
lea
out
sbb
mov
into
push
clc
pop
mov
out
sahf
xor
jcxz
or
push
cmp
jne
push
or
adc
bound
cmp
stos
fldenv
push
push
lea
das
dec
cmp
and
sub
into
xchg
inc
push
adc
sbb
arpl
mov
add
cmp
sbb
popa
aam
cmp
bound
inc
cs
jecxz
push
ja
mov
add
scas
cwtl
or
inc
xor
insb
rclb
pusha
int3
xor
les
test
inc
call
bound
cmp
add
pop
mov
daa
cld
sbb
xor
test
xlat
dec
push
adc
xor
cmpsb
nop
xchg
dec
add
cmp
or
xor
xor
out
lcall
and
or
call
leave
xchg
dec
dec
cmp
mov
movb
int
fldenv
inc
test
lahf
mov
mov
add
jb
or
shlb
scas
cwtl
cmp
dec
xor
cmp
mov
mov
push
int
or
xchg
inc
jecxz
cmp
and
adc
cmp
fldenv
clc
fldenv
push
adc
mov
xor
xchg
dec
scas
lcall
push
mov
ret
mov
add
sarl
cmp
lds
cmp
int3
push
cmp
sub
nop
cmpsl
ds
stos
cmp
bound
cmp
js
add
cmp
or
or
popa
sbb
int3
push
cmp
jae
in
cmpl
push
lea
fbstp
in
adc
fsubs
xor
testl
or
fldenv
jo
loope
negb
sbb
jno
cmp
push
rcr
sbb
cmpsl
pusha
pop
xor
pop
int3
push
or
add
add
cmp
rorl
cmp
inc
mov
stos
mov
mov
xor
pusha
push
out
sarl
andl
ss
cmp
push
xor
lds
mov
sbb
xor
cmp
cwtl
or
jecxz
cmpw
inc
cmp
fldenv
push
sbb
orl
or
cmp
int3
es
mov
jecxz
movsb
es
nop
es
sarb
push
rol
mov
int3
cmp
cs
mov
sub
sarb
es
lds
mov
sbb
xor
cmp
cwtl
or
pop
int3
push
cmp
mov
cmp
inc
xorl
add
jmp
shl
mov
and
xor
push
in
repnz
call
and
xchg
bswap
xchg
call
mov
sub
ja
sub
btr
push
lea
call
add
lods
dec
cmp
cwtl
es
test
insb
sarb
ss
sbb
bound
jo
cmp
pop
mov
and
sub
dec
cmp
clc
mov
pop
call
and
push
call
adc
js
cmpsb
in
repnz
and
scas
int3
push
or
sbb
adc
and
push
push
adc
add
adc
cmp
xlat
insb
cmp
xor
sbb
loop
out
lcall
xor
sarb
push
mov
add
fnstcw
pop
mov
push
push
push
lea
or
ss
sbb
lcall
xor
sarb
fldenv
push
mov
jecxz
cmp
add
push
cmp
push
cmp
inc
scas
pop
adc
scas
outsb
lcall
xor
pop
push
in
ss
or
adc
cmp
lret
cmpw
and
lods
jmp
test
or
or
sbb
insl
cs
cmpw
inc
fcoml
or
shlb
sbb
sti
and
mov
pop
rcrl
icebp
and
cmp
fldenv
movsl
inc
jecxz
movsl
loop
movsl
inc
jecxz
jmp
and
jge
or
shll
je
int
lea
pop
callw
xor
mov
push
je
add
add
and
xor
xor
nopl
add
shrb
lea
sarb
jecxz
cmp
dec
cmp
ficompl
lcall
lcall
add
cmp
dec
or
fimull
int3
push
lea
inc
ret
push
cmp
adc
jecxz
lcall
mov
ret
add
call
and
sbb
jno
cmp
xchg
popf
fldenv
mov
or
dec
in
cmp
shll
pusha
sbb
jns
das
dec
sbb
sub
or
shlb
add
rolb
cmp
mov
add
inc
nop
popa
les
mov
arpl
push
cmp
jno
std
lcall
or
adc
dec
jle
int3
push
or
xor
out
cmp
xchg
inc
jecxz
mov
mov
cmp
ss
xor
inc
mov
sbb
aam
sarb
push
cmp
ret
push
hlt
add
sarb
mov
inc
cmp
cwtl
inc
or
cmpb
cmpw
cmp
call
cmp
push
inc
jecxz
sarb
in
adc
inc
faddl
sbb
ss
int3
push
lea
and
fldenv
mov
cmpsb
cmp
sub
adc
mov
and
xchg
xor
cs
scas
sbb
pop
xor
movsl
lcall
or
shlb
push
jo
pusha
ss
inc
arpl
push
adc
cmp
add
call
or
and
ss
mov
cmp
popa
fidivrl
push
xchg
sarb
jbe
fldenv
add
jns
pop
sti
loopne
aam
insb
rcr
pop
cmp
and
cs
jno
mov
cmp
fldenv
addw
inc
jecxz
cmp
outsb
jl
push
or
fimuls
shrl
cmp
lds
scas
pop
into
pop
int3
push
lea
mov
aaa
call
inc
mov
xchg
stos
lea
sbb
inc
cmp
daa
call
cmp
add
mov
aad
ror
dec
cmp
sbb
fldenv
adc
in
stos
cmp
dec
into
cmp
mov
pop
sub
push
mov
sbb
sbb
sarl
push
xor
popa
xchg
push
ds
lea
inc
push
pop
int
cmp
sbb
jno
cmp
pushf
bound
icebp
add
push
inc
sbb
lcall
test
sub
mov
pop
fidivrl
push
movsl
jo
pop
jle
pusha
push
or
aaa
leave
aas
push
lea
xor
rcll
loop
jno
int
cmp
fldenv
push
mov
hlt
xor
cmp
mov
ret
or
cmp
adc
xor
push
cmp
push
sbb
push
popa
inc
arpl
push
xor
shl
pop
cmp
cmp
or
push
cmp
inc
inc
cmp
js
js
aam
cmp
insb
sarb
insb
sarb
lock
and
ret
dec
shrb
push
faddl
inc
cmp
ss
mov
or
cmp
aas
push
pop
xor
sub
mov
outsb
sbb
cmp
sbb
cmpw
mov
mov
lcall
xor
cmp
mov
jecxz
cmp
aas
inc
jecxz
sbb
push
mov
inc
cmpb
rolb
cmp
xchg
cmp
jecxz
cmp
rcrb
push
add
cmp
test
jo
xor
xor
cmp
lods
jle
push
mov
jg
push
gs
das
in
sarb
sarb
inc
enter
aaa
shrl
xor
rcrl
cmpw
dec
dec
ss
jle
enter
xchg
jge
jge
inc
ret
pop
mov
xor
call
sbb
push
cmp
adc
frstor
xchg
cmp
cmc
jl
cmp
xor
faddl
cmp
mov
push
aam
sbb
cmp
int3
push
cmp
fldenv
xor
xor
jl
lcall
iret
add
loope
cs
addr16
jl
lds
ds
and
jb
jl
or
cmpb
jl
adc
xor
xor
push
loop
add
cmp
cmp
xchg
adc
adc
cmp
mov
sarb
or
int3
push
lea
and
cmp
lods
cmpsl
es
cmpsb
popf
cmp
pop
repz
out
fdivrs
add
or
lcall
cmp
aam
jo
or
mov
insb
sarb
ss
fwait
lcall
int
lea
jecxz
cmp
xor
add
xor
sarb
pop
roll
lea
mov
or
rcrb
push
jg
dec
sub
fcomps
sbb
push
lea
add
mov
inc
jecxz
ficoml
pop
push
jns
fcoml
and
xor
pusha
ss
xor
cmp
push
or
cwtl
or
xchg
mov
xchg
xchg
insb
shlb
jg
clc
call
popa
xlat
cmp
fwait
pusha
ss
int3
push
cmp
xchg
iret
sub
loop
test
jae
fidivs
adc
cmp
or
pop
xorb
inc
jecxz
mov
and
scas
test
adc
ss
gs
cld
push
pop
rolb
insb
js
inc
int3
push
or
shlb
lcall
mov
jno
cmp
shrb
int
or
or
cmp
or
xor
fldenv
push
add
cmpb
cmp
add
cmp
ljmp
lcall
xor
cmp
ret
fsub
es
sub
mov
ja
popa
nop
cmpb
cmp
cwtl
mov
and
sbb
cmp
popa
sbb
aas
mov
aas
pusha
mov
ret
loopne
xor
inc
xor
fldl
and
mov
add
cmp
mov
jecxz
shll
cmp
mov
push
sets
loope
leave
mov
cmp
mov
inc
call
sarb
adc
cmp
jno
cmp
mov
bound
xor
insb
push
stos
sub
sbb
xchg
js
pushf
add
xor
or
aaa
xor
insb
cmp
pusha
ss
rorb
fst
pop
sbb
cmp
xlat
insb
cmp
cmpw
cltd
int3
push
lea
scas
cmp
sub
and
cmp
mov
mov
mov
push
lea
jge
xor
add
rolb
stos
push
dec
addr16
iret
jb
cmp
mov
dec
call
ficompl
enter
ss
or
sub
test
jmp
push
cmp
in
jo
fstl
icebp
or
cmpsl
mov
push
cmp
lea
push
jo
adc
xor
xor
adc
insb
shlb
sarb
xor
inc
imul
push
xor
cmp
inc
mov
cmp
lret
fisubrs
sarb
lea
cmp
enter
cmpsb
xchg
push
xchg
sbb
orb
in
push
je
or
mov
in
push
fldenv
loope
cmpb
cmp
shrb
cmp
fdivl
cmp
bound
cmp
inc
xor
xor
cltd
cmp
xchg
ja
and
or
lcall
cmp
aad
loope
xor
loope
sbb
testl
scas
add
push
push
movsl
insl
sbb
int3
pop
jmp
insb
sarb
sbb
jns
cmp
daa
cwtl
or
fwait
xchg
add
push
push
lea
dec
sbb
sbb
cmp
and
inc
add
arpl
cmp
shlb
add
ret
dec
aam
cmp
inc
mov
cmp
repnz
cli
call
pusha
cmp
test
pop
or
push
insb
cmp
cmp
int
or
mov
ret
sub
int
lea
in
push
xor
push
push
nop
in
ss
sbb
rolb
cmp
push
cmp
lea
sbb
rcr
cmp
mov
loop
dec
xchg
insb
push
pop
mov
cmp
sbb
xchg
or
in
mov
jns
add
stos
push
leave
call
inc
sbb
in
inc
xor
sbb
in
add
sbb
lds
roll
or
mov
xor
jb
push
push
ljmp
push
outsb
mov
bound
sbb
or
xor
xor
xor
cmpsb
cmp
xor
cmp
cs
rcrb
mov
pop
jmp
mov
mov
mov
cmp
lds
sbb
xor
pop
stc
or
cmpw
jp
dec
idivb
in
sbb
es
cmp
clc
adc
jg
jno
insb
cmp
ss
xor
insb
cmp
loop
sbb
stos
cmp
ja
cmp
sbb
xchg
or
xor
stos
fnstcw
xor
loopne
cmpw
sbb
movsb
push
loopne
jno
mov
jns
ret
fnstcw
xchg
lahf
cwtl
inc
pop
int3
push
cmp
or
test
cmp
inc
jle
push
sbb
fsubrl
cmp
fsubrl
cmp
pushf
outsb
ss
pusha
ss
pushf
mull
scas
out
add
pusha
ss
popa
mov
popf
je
std
inc
loope
iret
lahf
sub
pop
stos
imul
cmp
dec
clc
cmp
lret
testb
aam
addb
pusha
add
and
xchg
cmp
imul
add
cwtl
or
sbb
cmp
xchg
insb
sarb
nop
push
mov
sbb
xor
cmp
ja
cmp
dec
mov
sbb
xchg
sbb
aas
imul
cwtl
or
loopne
xor
sub
clc
imul
mov
sbb
inc
arpl
and
xor
ss
xor
sub
or
cmp
or
addl
ja
or
movsl
adc
cmp
or
rcr
sbb
mov
pop
sbb
add
or
xlat
ljmp
dec
sbb
mov
or
and
dec
add
add
cmp
lret
fldenv
mov
sbb
cmp
sbb
neg
cmp
fldenv
imul
mull
ret
or
mov
lahf
mov
jle
lods
fbstp
shrb
sub
or
out
or
stos
andb
push
cmp
cmpb
cmp
stos
xchg
pop
inc
pusha
fsts
and
ss
sbb
cmp
adc
xor
mov
jo
cmp
mov
cmp
jae
shlb
fldl
or
mov
cmp
inc
jecxz
or
sarb
xchg
push
test
mov
xchg
pop
mov
lds
addr16
cs
call
mov
jns
push
int3
cmp
pusha
ss
push
or
xor
push
arpl
mov
cmp
adc
test
ret
mov
clc
cmp
inc
cmp
int3
push
lea
and
imulb
cmp
call
push
mov
jecxz
sbb
insb
shlb
sbb
mov
lcall
push
lods
dec
mov
ret
cmp
cmp
push
cmp
ss
lock
mov
popa
daa
mov
mov
aaa
addl
adc
lea
add
int
cmp
add
sub
in
sbb
xchg
mov
and
shrl
sbb
imul
in
mov
imul
pushl
push
pop
xor
push
int
insb
rcr
mov
ret
andb
sarb
pop
push
add
sbb
aad
inc
jmp
mov
lods
rolb
mov
cmp
pusha
cmp
xor
cmp
inc
dec
loop
push
sub
adc
insb
cmp
fldenv
lcall
inc
jecxz
cmp
ljmp
xchg
ljmp
subb
xorl
lods
aam
int
or
lods
xor
jg
mov
adc
sub
sbb
fs
mov
cmp
sbb
add
fcomps
mov
and
and
and
inc
jecxz
cmp
stos
cmp
or
out
or
inc
rcrb
bound
push
xor
jecxz
xchg
or
mov
int3
push
lea
sub
mov
adc
dec
cwtl
or
mov
subb
test
mov
nop
mov
aas
pop
mov
cmp
int
or
fcompl
jecxz
sahf
js
or
dec
lcall
out
push
cmp
into
dec
jp
lods
dec
test
cmpsb
shlb
mov
popa
ss
pop
xorl
into
cmpsb
lcall
push
mov
xchg
cmp
add
cmp
adc
popf
push
jmp
addl
ss
ds
int
mov
gs
cmp
mov
inc
inc
sbb
push
int3
cmp
cmc
sub
add
ret
pop
xor
cmp
pop
mov
cmp
inc
cmp
lea
or
dec
mov
mov
cmp
cmp
xor
cmp
int3
push
cmp
add
xor
xor
xor
xchg
mov
mov
insb
sarb
in
ja
inc
sti
bound
ret
push
cmp
cwtl
inc
jmp
or
cs
aad
xor
cmp
xor
insb
cmp
push
lea
push
rclb
mov
shrb
lock
sbb
nop
ret
sub
jecxz
int3
push
cmp
mov
cmp
daa
cmp
inc
jecxz
cmp
sbb
jmp
mov
sbb
cmp
ss
pop
imul
cmp
lds
es
inc
bound
cmp
xor
sbb
mov
ss
push
inc
sbb
punpcklbw
push
xor
push
xor
xor
mov
arpl
and
add
shrb
push
loope
fnsave
inc
push
lds
sbb
addl
sbb
pusha
int3
push
or
adc
cmc
es
shlb
sarb
adc
jne
test
mov
stos
cmpl
cmp
sbb
int3
push
or
rcl
movsl
or
or
inc
inc
sub
ss
mov
ret
jle
outsl
pushf
mov
add
jb
cmp
pop
push
xchg
test
cmp
mov
jecxz
cmp
mov
sbb
xsavec
cmp
out
sbb
or
add
inc
jecxz
push
cmp
push
inc
cmc
add
mov
and
idivb
scas
pop
inc
pop
cmp
pop
push
add
in
adc
sbb
mov
fdivl
cmp
jno
cmp
sbb
pushf
sbb
sbb
movsl
dec
mov
add
or
xor
icebp
push
mov
or
dec
shrb
add
adc
in
add
or
adc
sbb
and
ss
pop
mov
fldenv
and
push
mov
push
rcrb
cmp
mov
cmp
ss
jl
stc
inc
sahf
jne
pop
mov
mov
cmp
push
sbb
push
sub
jnp
fistpll
xchg
popf
call
xor
cmp
mov
or
daa
mov
cmp
icebp
pop
enter
sbb
les
notl
pcmpgtd
adc
ja
inc
mov
out
fisubs
pop
xor
cmp
sbb
cmpl
pusha
push
arpl
repnz
insl
jns
dec
mov
push
aas
and
or
arpl
cmp
in
out
cmp
add
add
or
pop
xchg
in
push
test
and
cs
sbb
cmp
dec
push
insb
sarb
and
fnstsw
cmpsl
and
pop
xchg
sbb
in
add
shlb
cmp
pop
xchg
cmp
push
or
mov
ret
push
test
cmp
cmp
loopne
jmp
dec
mov
fwait
bound
push
les
lea
cwtl
or
andl
int
or
addr16
xor
imul
or
cwtl
or
add
inc
call
fcomps
popa
dec
call
sub
roll
adc
pop
and
bound
push
sarb
or
jo
insb
cmp
xchg
bound
inc
ret
adc
cmc
cmp
inc
pop
cmp
and
cmp
fldenv
out
pop
arpl
inc
ret
jmp
push
xchg
mov
out
add
xor
xor
into
add
and
aam
inc
arpl
inc
pushf
adc
push
xor
push
or
js
daa
jb
jp
push
mov
cmp
imul
xchg
mov
sahf
aad
dec
cmp
xor
dec
xor
mov
pop
sub
dec
xor
cmp
inc
mov
int
xlat
jno
cmp
fisttpll
adc
insb
rclb
mov
cmp
shl
cmp
inc
sbb
push
aaa
cmpsl
xor
stos
add
add
cmp
cwtl
or
movsb
stos
inc
jmp
ss
sbb
and
sub
dec
ret
xor
ss
imul
cmp
push
push
and
fdivl
inc
cmp
enter
add
int3
push
rorl
or
mov
bound
push
sbb
and
lahf
mov
imul
or
push
or
mov
stc
cmpsb
pusha
cmp
cmpw
cmp
xchg
adc
cmp
mov
vfmsubadd213ps
cmp
xor
sbb
pusha
cmpb
or
ss
rcrb
pusha
push
push
adc
jno
insb
cmp
sarb
xchg
mov
xor
xor
lcall
or
and
xchg
mov
andl
sti
inc
popa
pop
bound
cmp
sbb
cmp
xor
pop
pop
pusha
ss
add
subl
fcoml
cmp
inc
cmp
repnz
adcb
cmp
xor
gs
inc
push
lret
mov
cmp
mov
adc
int3
push
lea
jno
cmc
xor
mov
cmp
lcall
fsub
or
adc
inc
out
dec
les
adc
sbb
data16
sub
les
lea
pop
lea
and
aas
or
pop
int
cmp
cmpw
mov
dec
shll
filds
sbb
jo
insb
shlb
cmp
sub
mov
imul
loope
insb
sarb
or
xchg
cmp
cmp
sbb
fnstcw
cmp
repnz
add
push
sbb
cmp
mov
cwtl
cmp
cmpw
ss
cmp
add
cmp
stos
hlt
mov
inc
and
or
push
lea
jecxz
leave
xchg
xor
xor
mov
push
cmpsb
lods
cmp
xor
xor
fidivrl
test
outsb
shrl
cmp
push
es
imul
fnsave
das
xor
jne
add
ss
inc
inc
test
xchg
cmp
call
daa
cmp
mov
es
sbb
push
lea
js
cmp
jo
and
jns
sbb
mov
addl
and
cmp
and
push
mov
arpl
aaa
cmp
addr16
cmp
inc
repz
lcall
int3
push
or
fmuls
add
cmp
pop
or
sbb
cmp
xor
cmp
adc
cmp
jne
loope
mov
dec
leave
and
mov
dec
ret
adc
insb
cmp
insb
sarb
or
mov
fsubl
je
js
sbb
dec
dec
dec
int
shll
cmp
imul
cmp
jecxz
cmp
add
scas
loopne
stos
and
push
mov
lea
int3
push
lea
adc
adc
fwait
pop
jns
xor
js
jmp
adc
cmp
xor
cmp
lcall
ss
xor
xor
mov
outsl
cmp
sub
mov
and
lcall
movsb
inc
fcoms
fldenv
sbb
sub
lock
repz
sbb
test
push
iret
dec
xchg
and
mov
cmp
mov
jecxz
cmpsb
dec
cmp
jmp
dec
and
and
movb
shll
sbb
mov
fcom
insb
shlb
or
test
push
add
sbb
xor
xor
out
adc
ja
ss
jne
or
add
int3
xorl
mov
xor
fidivrs
cmp
lock
call
mov
cld
into
fldenv
add
insb
shlb
cmp
or
xlat
aad
addl
mov
cmp
or
mov
xchg
sarb
mov
cmp
sub
cmp
ret
sub
xchg
pop
cwtl
or
std
lcall
pop
and
cmpsb
dec
xor
xor
insb
rcrb
adc
sbb
cmp
daa
cwtl
cmp
push
mov
sbb
jp
cmp
rcl
pushf
mov
cmpl
mov
jecxz
xor
rolb
jmp
cmp
sbb
mov
xchg
cmpsl
or
cmp
rcl
xchg
jg
add
adc
gs
push
lea
mov
sbb
push
sahf
push
mov
notb
aam
fadds
cmpl
sahf
cmp
lea
pop
jl
sub
jnp
push
bound
cmp
dec
mov
in
push
push
add
ss
mov
cmp
adc
or
sbb
and
addw
cwtl
jbe
in
dec
mov
mov
jecxz
cmp
in
es
xor
inc
push
sub
dec
xor
cmp
push
testb
push
sbb
stos
cmpw
ss
mov
cmp
rcll
push
or
mov
arpl
pop
int3
cmp
mov
cmp
call
ret
pusha
cld
lret
daa
bound
or
pop
jno
xor
mov
int3
daa
orl
xor
pop
mov
dec
call
cmpsl
xchg
adc
daa
mov
adc
sarb
dec
jo
aam
push
les
and
inc
mov
and
xor
add
add
pop
rcrb
add
jmp
adc
and
rcrb
pop
or
pop
insb
push
and
sbbw
sbb
push
mov
xor
sbb
cs
jecxz
xor
mov
mov
pushf
je
ss
adc
jecxz
pusha
pop
aaa
jbe
ja
mov
add
or
mov
sbb
cmpsl
cmp
pop
pop
push
jae
xor
mov
mov
xor
pop
aam
push
push
aam
rcrb
int3
mov
adc
sarb
sub
pop
aad
pop
cmp
pusha
add
pop
adc
xor
and
jno
subb
cwtl
or
ss
xchg
push
sbb
inc
adc
insl
sbb
cmp
mov
test
add
lods
popa
idiv
push
or
push
pop
or
or
iret
mov
imul
bound
sbb
les
adc
loope
subl
repnz
push
dec
pop
or
jl
test
loopne,pt
add
push
mov
pop
and
add
dec
and
push
cmpb
dec
add
insb
rcrb
adc
xchg
pop
mov
ljmp
cmp
push
or
sbb
icebp
mov
lds
insb
ss
sub
push
push
scas
movl
cmp
push
and
stos
add
outsl
les
sbb
and
push
sub
add
adcb
in
or
test
test
dec
jns
jge
sbb
daa
cmpsb
xchg
fistps
xor
lahf
jge
mov
jge
sbb
add
mov
xorb
pusha
fucomip
test
sbb
or
inc
lods
je
push
or
cmpw
call
push
shrb
inc
jge
push
mov
jge
xor
popa
push
lea
cmpw
pop
int3
push
jge
es
or
jge
popf
push
lea
jmp
rcrb
sbb
aaa
sarl
add
lcall
dec
xorb
data16
ds
xor
jge
add
mov
adc
jge
sbb
push
int
lea
mov
mov
out
lock
xchg
xchg
mov
imul
sub
jge
mov
xchg
adc
sbb
or
dec
js
inc
ret
sub
jge
push
mov
dec
mov
xchg
mov
shrb
sbb
jle
inc
les
imul
rorl
dec
jmp
xlat
or
jmp
pop
jo
dec
inc
lea
mov
inc
sbb
cmpb
ss
or
fbld
ss
push
mov
rolb
inc
adcb
sub
insb
rcrb
xor
xchg
test
cmpw
into
mov
inc
ret
push
xor
roll
jge
adc
push
int
jge
int3
testl
or
cmpsb
add
repz
push
xor
cwtl
aam
pop
pop
xorb
lahf
push
mov
cwtl
or
inc
inc
lock
jnp
mov
lock
push
push
push
or
push
jge
jbe
int
lea
push
lds
les
divb
cmp
mov
lcall
inc
ret
addb
mov
xor
xor
and
xor
inc
jns
xor
dec
xor
sbb
xor
jge
bound
lcall
add
jge
or
xor
push
int3
jge
stc
jno
xor
jge
cmp
mov
mov
sbb
or
data16
mov
add
xor
fldenv
push
mov
ss
icebp
push
or
jb
add
int3
jge
shlb
data16
movsl
sahf
les
push
xor
sbb
arpl
ret
pusha
test
pop
inc
mov
jge
je
mov
ret
fidivrs
push
mov
push
bound
loop
mov
adc
popa
test
movsb
adc
int3
push
mov
xor
jbe
mov
or
addl
sub
test
data16
in
adc
inc
jp
insb
sarb
out
inc
jecxz
xor
call
out
mov
int3
je
and
jg
sbb
and
sub
or
insb
sarb
mov
lds
es
bound
jge
js
ret
mov
mov
push
lea
or
pop
xchg
insb
int
and
test
mov
adc
jp
push
es
sarl
xor
xor
push
cwtl
or
jge
xor
and
sahf
inc
ret
pop
xor
outsl
jle
fcoml
mov
call
ss
incb
int
jge
rclb
mov
ret
cld
fwait
jno
jge
or
test
push
push
lea
pusha
jge
sbb
sbb
dec
shrb
jne
push
mov
jge
or
push
lea
push
mov
jecxz
jge
mov
jge
xor
pop
xor
xor
sbb
lea
push
cwtl
jge
mov
int
jge
popf
pop
dec
shrb
sarb
in
xchg
lret
mov
jmp
lcall
ja
dec
call
es
push
push
sbb
inc
push
push
add
sar
xchg
xor
insl
and
push
outsl
popa
fucom
inc
scas
popa
push
push
ss
loope
ret
insb
push
jmp
add
jge
xor
sbb
ret
mov
xor
mov
bound
imul
sbb
jno
jge
addl
shrl
cwtl
mov
dec
mov
add
and
lods
xchg
push
mov
mov
xchg
jge
rclb
mov
ret
pop
sarl
nop
jle
push
dec
add
pushaw
ss
push
lea
push
or
fldenv
sbb
mov
adc
push
add
xor
jge
fldenv
push
lea
mov
xchg
jecxz
cmpw
jo
mov
jge
int3
push
or
inc
cmp
fisubl
adc
iret
repz
imul
jg
push
push
shll
mov
jg
insl
std
incl
out
jmp
fs
lret
rorb
inc
inc
mov
testb
jo
adcl
xchg
jno
ds
jle
or
jge
insb
mov
push
cld
inc
push
or
test
or
xchg
shlb
cmpl
pop
push
mov
jge
addr16
xchg
idivl
fs
push
xchg
push
outsl
inc
pop
sbb
jbe
sysret
add
add
jge
insb
sarb
push
mov
icebp
cmpsb
pop
cmp
add
sbb
fldenv
jge
sarb
aas
inc
jecxz
sarl
movsb
inc
mov
sbb
mov
ret
test
insb
mov
dec
fs
dec
daa
mov
mov
jno
cwtl
pop
mov
adc
mov
es
shrb
adc
push
add
or
popa
mov
cs
jge
sbb
mov
fcoms
jge
int3
push
repz
arpl
sbb
or
push
cwtl
jge
xor
aaa
sub
fisttps
or
xor
xor
add
pop
test
sarb
arpl
les
pusha
push
mov
aas
or
lret
cmp
push
int3
push
jge
or
add
mov
ret
mov
jge
inc
and
or
mov
xor
mov
jb
popa
mov
pop
imul
es
pop
leave
mov
int3
pusha
adc
inc
repnz
cli
xor
xor
jge
mov
jge
sbb
cmp
in
pop
sub
push
push
push
xchg
push
adc
sub
mov
pop
xor
xor
sahf
ss
jecxz
bound
lods
jno
adc
jge
addr16
testb
inc
test
mov
inc
sbb
ret
inc
test
int
xchg
cs
add
xlat
dec
popa
les
mov
arpl
jge
xor
push
and
xor
mov
jge
pop
adc
out
in
loop
gs
sub
inc
add
lcall
add
neg
jge
mov
rcrb
cmp
jge
pop
jl
lds
inc
add
jecxz
sarb
dec
call
cmp
les
lock
ss
inc
and
mov
push
or
ljmp
xor
rol
pop
loop
out
sbb
dec
mov
jge
mov
int
lds
pop
jge
shlb
or
in
sbb
movsl
lcall
jge
sub
inc
jmp
lea
xchg
jns
in
out
ds
data16
pop
lea
xor
xor
int3
push
jge
cmp
sbb
int3
push
or
xor
in
test
xchg
sbbb
sub
cltd
test
jo
push
jge
push
lea
jno
jge
xchg
pop
and
data16
add
xchg
pop
adc
sti
sub
data16
xchg
outsb
jmp
push
lea
mov
jecxz
jge
inc
jecxz
jge
jge
loope
inc
sbb
fwait
mov
jge
stos
cs
int3
push
jge
or
cwtl
or
pop
je
in
ss
cwtl
inc
popf
addr16
jno
insb
jge
clc
test
pusha
ss
cs
cmp
push
bound
jge
addl
loop
jecxz
data16
loopne,pn
pop
mov
dec
loop
and
lea
mov
jge
xor
xor
loop
rclb
inc
insb
test
shrl
and
add
sbb
push
mov
fldenv
addl
fmull
lods
lea
jge
sub
pusha
ss
mov
mov
lock
jge
clc
jmp
jl
xor
xor
subps
xchg
add
addr16
dec
and
mov
mov
push
fs
sarb
ss
sbb
pusha
jge
and
cmp
jge
push
mov
jge
js
or
sub
add
jge
addw
orl
or
xchg
sbb
cmp
in
adc
aas
jge
or
jge,pn
sbb
jecxz
cwtl
jge
enter
mov
cmp
addw
outsb
push
cwtl
jge
push
rcl
jge
mov
sbb
mov
xchg
lcall
push
or
cwtl
or
sarb
ss
int3
push
lea
pop
inc
jge
push
adc
jge
xor
andl
jge
add
int
lea
xor
mov
add
xor
jge
mov
cmpw
mov
push
dec
js
insb
sarb
jmp
mov
jecxz
bound
jge
jl
inc
mov
jge
cmp
jge
in
addw
int3
push
lea
pop
pop
xor
ret
push
les
frstor
jge
enter
xor
lods
mov
ret
dec
xor
roll
cmp
jge
jge
push
xchg
mov
ficompl
mov
bound
test
jge
mov
xor
cwtl
cmpb
ret
xor
jge
xor
push
int3
push
jge
movsb
dec
xor
call
sub
test
cmpw
mov
inc
inc
jge
xor
mov
insb
jge
jb
sub
jge
ds
insb
sarb
loope
inc
int3
push
or
cmp
mov
add
add
pushf
or
data16
out
push
push
roll
es
int3
push
jge
insb
icebp
sbb
jge
out
roll
xchg
dec
test
js
inc
arpl
pop
jne
mov
fldenv
imul
and
ss
decb
lcall
mov
mov
jmp
aam
jge
jg
arpl
enter
inc
ret
pop
mov
lcall
jge
mov
jge
lea
or
push
jge
or
xchg
add
or
xor
lcall
sbb
mov
in
inc
xor
or
jge
hlt
pop
mov
lahf
fdivp
out
push
jecxz
mov
jge
lea
lcall
int3
push
jge
push
adc
push
lea
sub
test
ss
add
stc
push
mov
jecxz
out
jge
pop
mov
mov
nop
dec
jnp
arpl
push
push
pop
mov
jge
bound
xchg
pop
sarb
ss
add
or
pusha
adc
or
push
xor
push
dec
lds
movsl
inc
inc
inc
data16
lret
xor
enter
or
xchg
push
or
shrb
int
cmp
insl
jmp
roll
push
xchg
push
std
sbb
movsb
mov
and
jo
sar
mov
movsl
inc
std
add
or
movsl
inc
and
jl
sbb
in
std
stos
xor
fcompl
std
dec
ljmp
inc
arpl
std
xor
imul
imul
std
push
fisubrs
and
sbb
cwtl
outsl
ds
addl
test
lods
dec
std
jmp
xchg
mov
push
mov
fisubrl
imul
std
jnp
xchg
push
gs
dec
pop
xchg
push
std
lahf
rclb
movsl
inc
jecxz
std
test
sbb
je
cmp
or
mov
std
push
sub
mov
mov
push
lea
fcoms
sub
std
imul
arpl
inc
std
fbstp
std
or
sbb
insl
lds
xor
mulb
fsubs
mov
or
mov
mov
push
imul
out
nop
rclb
movl
rorb
push
jo
mov
std
and
std
sub
das
or
pusha
in
dec
addl
nop
sbb
into
push
loope
std
xor
adc
sub
andl
dec
push
sbb
inc
pop
enter
imul
sub
std
shrb
mov
push
jb
movsl
gs
shr
repnz
mov
dec
sbb
inc
stc
cltd
pusha
and
or
kmovw
jge
test
and
orl
inc
pusha
jp
fwait
sahf
sub
and
xchg
shlb
xor
jge
sbb
jl
cmp
sbb
push
xchg
sbb
inc
inc
sbb
fiaddl
push
mov
pop
fnstenv
pop
aad
rcrb
mov
mov
shrb
sbb
xor
rorl
mov
sub
or
mov
sbb
inc
jo
sbb
xchg
sbb
or
cwtl
pusha
jo
lods
mov
inc
xchg
mov
sbb
adc
xorl
xor
adc
pop
je
sbb
pop
cmpsl
inc
sbb
popa
inc
iret
pop
inc
pushf
push
sbb
push
mov
add
shlb
cli
dec
mov
aam
aad
sarb
push
sbb
adc
or
and
sbb
push
xor
dec
add
add
sbb
xchg
sub
and
sbb
inc
adcl
sbb
imul
addl
mov
mov
ud2
sbbb
sbb
sbb
xchg
sbb
push
rorb
jnp
and
add
or
mov
or
xor
push
cmp
sbb
mov
int3
and
outsl
pop
dec
fisubrl
pop
sbb
dec
sbb
pop
jae
dec
sbb
jbe
or
push
fwait
cmp
add
xchg
mov
xor
pushf
pop
xlat
xor
das
mov
or
push
sbb
push
imul
sub
pop
movsl
inc
jecxz
push
pop
and
dec
xor
push
pop
jmp
or
sbb
js
pop
pop
cmc
push
movsl
inc
ret
pusha
pop
push
lea
mov
pop
fwait
add
pop
movsl
inc
jecxz
jne
push
hlt
dec
les
rcrb
push
pop
push
sbb
sub
xor
aam
shlb
fcoml
dec
push
pop
cmp
pop
das
call
xchg
fistl
aaa
or
add
or
xchg
push
pop
dec
push
mov
jge
cmp
inc
inc
or
sbb
inc
cmc
adc
sub
ja
cmp
sbbb
mov
inc
imul
inc
arpl
push
sbb
adc
inc
sbb
or
pop
jge
imull
or
xor
sub
mov
adc
jbe
inc
ds
imul
push
xchg
add
jg
pop
clc
sbb
rol
movsb
sbb
in
in
sub
mov
rclb
cmp
or
pop
sbb
add
lods
add
data16
add
sbb
jns
enter
inc
imul
pusha
add
loope
dec
sbb
xor
push
lock
adc
shrb
pop
xor
sub
dec
ljmp
popl
mov
and
or
sub
sbb
sub
jbe
or
jge
sub
mov
lods
enter
adc
pop
int
or
jge
mov
inc
xor
sub
lcall
fs
mov
imul
adc
push
pop
mov
test
push
and
push
sub
dec
inc
imul
sbbl
mov
add
push
cmp
mov
add
hlt
movsb
loop
inc
push
dec
decl
add
pop
inc
xor
mov
add
push
sbb
xchg
xor
nopl
push
pop
pop
add
and
pop
js
or
jmp
enter
xor
pop
xchg
lds
shlb
pop
add
pop
ficompl
inc
sub
mov
imulb
or
xchg
sub
dec
sbbl
xor
and
or
push
dec
xchg
pop
hlt
cs
sbb
dec
or
or
or
pop
pop
add
pop
mov
mov
lea
cwtl
sub
add
das
pop
shlb
inc
ret
movsl
pop
pop
pop
imul
inc
out
pusha
inc
pop
gs
pop
insb
push
sbb
lea
shlb
sbb
cmp
add
push
mov
pop
and
fs
inc
ret
movsl
rcrb
push
lds
insb
stos
xor
lds
pop
xor
xorl
shll
pop
add
movsl
inc
ret
pusha
push
pop
dec
sbb
cli
imul
jo
inc
pop
dec
dec
add
and
pop
movsl
inc
jecxz
clc
mov
add
or
xchg
push
pop
inc
mov
pop
xchg
push
in
sub
ret
pusha
adc
adc
cmpsb
sub
movsl
inc
jecxz
pop
movsl
inc
ret
pop
int3
dec
scas
pop
push
inc
jecxz
xor
jnp
xor
push
movsl
pop
out
sub
push
sbb
adc
xor
xchg
push
roll
adc
movsb
add
or
test
sub
pop
or
push
les
pop
adc
mov
xor
pop
pop
mov
stos
cmpsb
push
xchg
push
popl
cmpsl
mov
cmpsl
xchg
fisubrl
enter
in
lahf
inc
jle
push
pop
xchg
dec
add
cmp
test
mov
imul
add
push
movsl
inc
arpl
pop
shlb
pop
das
lcall
xchg
push
or
rolb
sahf
inc
adc
sbb
xor
dec
pop
scas
loop
push
imul
stos
xor
pop
subb
sbb
push
mov
add
cmp
rcrb
out
incl
or
les
sbb
movsl
pop
cs
inc
imul
xor
jl
fwait
cmp
mov
xor
mov
pop
inc
jecxz
mov
and
pop
out
mov
or
jge
mov
cmp
jg
fistps
leave
mov
pop
sbb
je
test
sahf
mov
mov
pop
push
mov
mov
xor
mov
negl
mov
outsb
and
or
dec
or
pop
and
add
or
sarb
add
push
lea
pop
pushf
pop
enter
adc
pusha
bound
xor
and
sbb
mov
jl
mov
pop
push
stos
dec
jae
sbbl
call
dec
mov
dec
add
pop
popf
push
or
pop
xorb
sarl
cmp
pop
jo
nop
mov
rcrb
test
mov
test
or
daa
push
or
lock
pushf
pop
add
stc
cmpsb
dec
pop
add
mov
std
xor
test
pop
in
cmpsl
inc
inc
or
push
lock
call
inc
cmpsl
pop
push
cmp
pop
ss
mov
pop
push
pop
adc
push
lea
xor
incb
push
stos
rcrl
sbb
or
add
push
lea
scas
paddusb
push
mov
and
aam
pop
sarb
mov
mov
and
ret
imul
xor
inc
cmpsl
pop
popf
ficoml
jne
pop
out
add
push
pop
sbb
les
jne
subl
sub
insb
sub
les
pop
jae
adc
pop
mov
std
xorb
call
in
pop
aas
inc
jecxz
inc
mov
dec
addl
lea
sbbb
xor
test
xchg
mov
js
pop
in
movb
popf
inc
and
dec
sbbl
shll
mov
aaa
sbbb
jecxz
shll
pop
cmpsl
inc
pop
sbb
mov
xor
adc
sbb
rcrl
xor
add
sbb
sbb
inc
sbb
cmp
xchg
sarb
sbb
pop
mov
pop
insl
add
inc
arpl
loop
push
cmp
adc
cmpsl
jmp
and
push
hlt
sub
int3
lock
bound
sbb
cmp
xor
call
cmpsl
inc
ret
jge
sbb
pop
mov
cli
adc
xor
pop
pop
dec
add
or
and
mov
pop
pusha
jle
call
or
pop
or
xor
cmp
xchg
mov
mov
pop
pop
push
add
cmp
aam
adc
inc
scas
adc
adc
in
out
xor
jge
rcrb
inc
popa
pop
pop
fisttpll
pop
les
std
pop
jecxz
mov
sbb
add
cli
inc
xor
add
push
and
ja
jge
and
lea
mov
dec
mov
push
lea
jge
cs
push
add
jge
test
adc
jge
pop
add
jge
aad
mov
xchg
or
popf
add
xor
add
nop
sub
pop
xchg
or
jne
and
lea
sarl
pop
add
inc
inc
sbb
pusha
imul
sbb
inc
ret
push
sahf
mov
jbe
lcall
into
or
adc
mov
sub
sarl
push
dec
inc
jecxz
sbb
jge
push
inc
jecxz
add
and
sbb
jge
mov
jecxz
or
dec
sbb
add
jge
push
lea
or
jge
and
pop
add
jge
pop
adc
add
jo
jge
add
or
push
mov
inc
jge
xor
cmp
inc
add
push
movb
add
in
adc
jge
ss
cmp
inc
xor
andb
mov
sbb
jge
xor
xchg
sub
data16
add
lcall
xlat
mov
shll
add
pop
push
add
mov
sbb
add
nop
adc
and
adc
decb
std
push
or
sbb
or
jge
loop
mov
push
test
test
popa
scas
mov
jge
pop
inc
arpl
imul
cwtl
sub
test
test
mov
dec
mov
xchg
sbbl
push
sbb
inc
arpl
jge
nop
sarb
sti
mov
add
jge
rolb
movb
adc
jge
sbb
rorl
shll
ljmp
inc
add
iret
pop
adc
adc
sbb
add
sub
add
sub
subb
ret
mov
push
add
mov
add
adc
test
jge
add
mov
and
aaa
push
dec
jge
inc
jecxz
sub
jge
mov
xchg
sub
icebp
push
jge
inc
xor
mov
jge
mov
dec
nop
dec
jge
sarl
sbb
push
jge
dec
mov
sub
jge
sub
subb
rcrl
jecxz
and
inc
jge
jl
mov
sub
adc
add
jge
lea
pop
add
jo
fdivrl
and
sbb
add
sbb
inc
add
sub
or
jge
cmp
add
inc
xor
sub
shll
mov
sbb
nop
add
jge
adc
jge
mov
jno
arpl
add
xchg
faddl
add
inc
xor
jae
jge
xor
inc
lcall
sarl
sbb
jge
mov
aaa
inc
add
xor
cmpsl
or
jge
pop
jmp
cmpsl
pop
jge
add
nop
out
sub
and
leave
or
sbb
test
xchg
adc
adc
inc
push
daa
mov
dec
adc
push
pusha
or
mov
push
add
jge
sbb
sahf
or
divb
mov
mov
mov
mov
or
mov
add
sbb
sbb
sbb
inc
add
jge
sbb
push
dec
jge
testb
jecxz
jge
and
or
sbb
add
mov
adc
jge
sbb
jmp
jmp
inc
add
sbb
cmpsb
sbb
loopne
and
add
cs
pusha
jge
aaa
jno
cmc
lret
add
push
jl
dec
sbb
sti
inc
jge
inc
call
push
add
jge
aas
push
push
add
jge
or
adc
inc
add
repz
jge
or
cmpsb
cmp
push
add
notl
sbb
mov
adc
sbb
mov
enter
and
sub
fwait
sbb
popa
lods
push
pop
popf
pop
mov
add
fisubrl
xchg
push
xchg
fnstsw
add
cld
add
push
adc
xor
int3
std
sbb
repnz
pop
cmp
aam
repnz
add
mov
pop
mov
das
mov
insl
sar
repnz
fisttpl
out
rcrb
pushf
push
ret
xlat
insl
std
stos
das
xor
scas
daa
xchg
cmp
or
or
xchg
cmp
lock
or
ss
leave
mov
das
push
iret
leave
movsb
push
add
addl
pminsw
shrb
lret
ja
push
std
mov
sahf
xchg
xchg
adc
xor
cmp
add
jne
jb
mov
mov
test
push
sbb
cmp
xchg
je
jmp
adc
pop
add
adc
push
dec
flds
outsb
std
js
fs
shlb
inc
call
ljmp
mov
and
xchg
push
outsb
add
std
jg
scas
in
stc
imul
dec
lea
push
std
aaa
imul
imul
fldl
std
adc
mov
add
dec
out
xchg
scas
mov
jecxz
std
lret
sbb
jno
std
jmp
push
jmp
push
jmp
push
jmp
push
arpl
rorb
jecxz
mov
std
dec
imul
mov
std
cmp
jecxz
outsb
cmp
and
pop
mov
std
adc
lahf
shr
mov
inc
arpl
std
sbb
add
add
std
lcall
je
call
inc
ret
dec
std
out
jne
xor
pushf
std
outsb
add
dec
mov
mov
jmp
xchg
add
std
mov
xor
out
arpl
adcb
mov
xchg
add
mov
push
mov
cmpsl
outsb
add
loopne
pop
std
push
mov
pop
inc
loope
std
insb
in
cld
ss
push
sbb
fs
inc
lds
mov
std
mov
or
cmp
outsb
addl
or
adc
mov
std
or
adc
mov
cmp
cmp
mov
insl
rcrb
jno
lea
and
ds
popa
sar
faddl
lea
adc
std
sbb
add
sbb
sbb
dec
sbb
outsb
std
je
xor
sbb
loope
push
fisttpl
push
shrl
std
outsl
adcb
sbb
movb
outsb
std
push
jb
cmp
add
cmp
or
std
cmp
test
inc
push
and
cmp
outsb
add
sbb
std
pop
add
mov
std
xchg
and
out
popa
and
aad
push
fdivrs
bound
and
pushf
sbb
mov
outsb
add
std
mov
jle
ljmp
push
lea
movsl
pop
mov
inc
mov
and
ret
pusha
pusha
or
adc
inc
std
paddusb
pop
mov
ret
std
push
lds
std
dec
mov
push
pushl
mov
jecxz
std
enter
xor
adc
cmp
std
pop
xchg
sub
std
int
addl
xor
stc
aam
lea
mov
pop
jne
std
add
xchg
inc
and
loopne
xor
adcb
fs
cs
cmpsb
inc
mov
cmpsl
fwait
sub
lcall
push
mov
arpl
shrb
test
inc
mov
dec
xor
adc
fadds
outsb
add
mov
dec
std
adcb
ret
insl
rcrb
jl
call
mov
sbb
call
loope
mov
stos
sub
or
xor
xchg
fists
inc
jecxz
std
jo
xor
dec
std
sbb
pop
push
rcr
xlat
shlb
repz
enter
daa
ljmp
lea
daa
push
lea
aas
mov
and
add
std
mov
push
push
insl
sarb
and
std
and
icebp
out
ss
pop
loopne
push
and
cmp
add
das
pop
push
jns
shrb
adc
pusha
add
sbb
dec
add
mov
std
or
sub
dec
mov
fldl
lea
mov
jl
mov
jp
push
sbb
jb
xor
sbb
mov
dec
ss
sbb
sbb
call
dec
nop
add
outsb
cmp
stos
cmc
adc
and
inc
int
inc
xlat
insl
rcrb
std
xor
lahf
ja
xchg
pop
aad
sar
mov
xchg
push
sub
sbb
ss
fidivl
cmpsb
outsb
cmp
ja
shrb
cmp
jne
xor
mov
cmp
cs
data16
mov
int3
cmp
fisubs
add
sub
js
enter
xor
les
mov
movsb
mov
jecxz
jae
std
xor
rclb
cli
mov
jne
std
stos
add
add
sar
cmp
shlb
incl
pop
shrb
push
lock
std
shll
sbb
ret
arpl
adc
jo
std
call
enter
push
add
addl
arpl
mov
pop
stos
popf
push
in
cmp
pop
loopne
add
add
or
or
add
mov
cmp
ret
sbb
add
dec
rolb
fcmovnb
insl
sar
int3
lea
and
sub
faddl
fs
scas
outsl
pop
and
mov
fiadds
popa
data16
inc
push
or
sub
leave
add
clc
lock
mov
int
push
pop
aas
push
jae
sahf
out
mov
cltd
push
cmpsb
mov
pop
in
out
xchg
out
cli
loopne
push
and
jge
sbb
imulb
popw
lea
inc
ret
dec
sahf
sbbb
std
mov
mov
inc
push
or
ja
inc
movl
std
dec
inc
push
lea
outsb
jno
dec
sub
mov
sbb
enter
or
cld
xor
jne
std
mov
movsl
jne
mov
jecxz
mov
cmpsl
mov
fs
xor
fdivr
add
pop
pop
push
adc
loopne
std
lods
out
sbb
sub
popa
or
out
push
xchg
pusha
and
add
std
adc
mov
aaa
mov
or
fsubr
ss
sbb
ss
mov
push
push
pop
lret
adc
xor
imul
xchg
add
test
mov
loop
push
ljmp
mov
aaa
adc
mov
loopne,pt
lods
cmp
inc
cs
jbe
stos
lahf
shr
pop
fistpl
or
or
ss
mov
push
repz
pop
in
cmp
mov
ret
idivl
sbb
mov
outsb
add
stc
push
enter
cwtl
inc
inc
or
mov
xor
cmp
mov
insl
std
cmpsl
cmp
sbb
fldl
std
mov
insl
shlb
add
fcmovnbe
insl
shlb
repz
or
roll
dec
sahf
jp
adc
std
ss
cmpsl
and
scas
add
popa
clc
pusha
mov
add
sahf
std
jns
xor
sub
jnp
mov
pop
dec
ljmp
out
insb
push
movsb
xor
mov
mov
mov
mov
jecxz
xor
sarb
pop
mov
vpunpckhqdq
cmpsb
movsl
ss
xchg
loop
rcrl
je
std
mov
sub
cmp
push
std
jnp
sbb
pop
adc
aad
cmp
push
rolb
add
xor
mov
std
mov
shrl
lds
cmpb
jecxz
jno
std
enter
mov
std
jecxz
dec
pusha
test
fsubl
add
sbb
jo
or
cmp
and
inc
mov
std
sub
sahf
fistpl
push
or
sub
add
aaa
mov
std
dec
push
movsb
adc
or
cmp
call
pushf
push
std
outsb
addl
dec
insb
call
sub
aam
adc
rcll
sbb
and
pop
paddw
mov
jno
mov
std
xchg
sub
mov
mov
imul
cmp
jb
dec
push
sbb
jge
iret
repz
lret
sub
sbb
std
pop
adcb
es
xlat
es
jb
cmp
add
out
push
in
cmp
leave
repz
neg
fdivrp
shrb
xor
push
adc
jne
mov
ret
add
pop
faddl
std
xor
xchg
sbb
std
push
and
stos
loopne
push
pusha
sub
nop
or
std
fcmovu
push
lea
je
outsb
add
es
dec
and
mov
add
cwtl
std
push
lea
add
popa
push
stos
sbb
popa
fadds
sbb
jbe
push
mov
pop
cld
mov
leave
push
pop
shrb
std
insl
rcrb
sahf
pop
rclb
inc
cmp
and
std
outsb
add
add
loopne
or
lret
inc
call
fs
insl
shlb
lods
and
jbe
ljmp
out
mov
insl
sarb
add
cmp
push
xor
or
mov
inc
std
jle
xor
cmpl
rcr
add
cmp
lcall
jne
xor
xor
push
xor
fdivl
xor
cli
shrb
pop
sub
mov
jecxz
std
add
jo
sbb
xor
mov
mov
mov
mov
add
cld
mov
inc
fs
or
sub
test
fldl
jo
aad
int3
shlb
outsl
sub
je
insl
dec
mov
frstor
daa
nop
xor
loop
push
mov
jbe
ss
fstpl
xchg
jns
ljmp
inc
pop
arpl
jmp
push
pextrw
sub
sub
add
outsb
dec
fldl
or
sub
nop
adc
popf
add
sbb
push
imul
subb
fldcw
sbb
sarb
dec
xchg
fnstsw
mov
std
or
nop
sbb
sub
fstl
xchg
or
outsl
sbb
mov
popa
ljmp
into
xor
shlb
iret
push
add
loopne
push
sarb
cwtl
mov
leave
push
push
push
sub
fstl
clc
push
mov
jecxz
dec
add
sbb
add
fucom
push
jp
and
fstpl
ss
bound
mov
mov
xlat
mov
add
xor
pop
jg
hlt
or
jno
mov
addl
push
push
outsb
fst
in
into
cmp
insl
outsb
or
cwtl
sub
fbstp
or
cmp
aas
sub
push
pop
test
adc
sbb
jns
add
and
sbb
xor
add
inc
add
scas
pop
adc
out
jo
cmp
sbb
add
sbb
pop
js
or
sbb
pop
rcrl
test
add
xor
xchg
std
add
sub
outsl
or
in
cmc
pop
cmp
push
add
sbb
xchg
sbb
push
in
lock
xchg
adc
test
or
movsb
xor
jae
imul
aad
int
pop
add
push
xchg
add
lret
inc
xor
loopne
subb
sbb
mov
dec
rorl
rcrl
add
inc
add
mov
add
in
inc
add
push
adc
mov
sbb
xchg
push
js
mov
jecxz
dec
sub
call
lar
addl
sbb
mov
outsb
or
mov
add
sbb
rolb
xor
test
popf
dec
pop
js
mov
push
aam
out
loop
adc
test
dec
adc
lods
fsubs
sbb
sbb
sub
orl
subb
sbb
mov
cmp
jo
mov
shlb
add
fs
push
mov
add
inc
inc
ret
mov
sub
mov
jecxz
icebp
loopne
add
jmp
in
sbb
add
hlt
sbb
ret
adc
push
and
add
sbb
add
sbb
negl
xchg
sbb
or
aam
sbb
addb
mov
mov
ficomps
pop
sbb
mov
sbb
push
sub
add
mov
mov
shll
cmp
inc
sub
add
fdivs
xorl
jno
adc
and
mov
mov
or
jne
sbb
adc
orb
enter
or
jecxz
mov
icebp
add
stos
sub
and
out
inc
neg
push
fistpll
mov
sbb
adc
daa
push
push
adc
shr
cmp
or
insl
inc
adc
scas
dec
mov
pop
add
iret
add
xchg
xchg
ficomps
ret
lods
adc
jmp
enter
gs
lea
jb
adc
fucomi
dec
enter
aas
mov
js
pushf
repz
mov
xor
add
addb
adcl
arpl
xchg
mov
xlat
mov
mov
or
test
xchg
test
cmp
add
ret
adc
inc
sbb
adc
popa
inc
push
sbb
in
mov
popa
pop
inc
xor
jbe
es
add
shll
rcrb
inc
scas
cwtl
push
test
add
sbb
and
rcrl
subb
sbb
mov
jne
add
cmovle
push
call
sub
repz
call
arpl
js
add
sbb
xchg
sti
sbb
adc
fisubl
inc
add
aas
dec
daa
dec
repnz
add
xor
or
sbb
test
ljmp
and
leave
xchg
orb
fld
test
inc
fucomp
sbb
mov
cmp
pop
adc
adc
push
sbb
xor
sub
add
ja
add
or
sbb
add
add
cmp
xchg
xor
add
lea
jno
xchg
and
out
mov
xor
or
jno
sbb
mov
sbb
es
addb
sbb
inc
xor
inc
add
add
mov
or
add
mov
mov
xchg
adc
add
or
pop
mov
fmuls
test
xchg
dec
and
lcallw
scas
add
add
mov
test
insl
sarb
pop
mov
mov
test
dec
inc
mov
fnstsw
ja
sbb
or
leave
xchg
lock
movb
faddl
fstl
sbb
push
adc
or
xor
push
add
sbb
inc
arpl
out
and
ss
push
lea
xor
add
fnsave
sbb
in
mov
insl
rcr
test
mov
repz
jne
push
inc
outsb
inc
fldl
fldl
pusha
and
mov
faddl
fnstsw
or
xchg
inc
mov
mov
fstl
jbe
testb
fiadds
adc
push
fnstsw
add
xor
ss
pop
test
ret
test
fisttpll
fucom
subl
movb
inc
arpl
insb
cmpsl
je
mov
mov
push
faddl
or
rol
inc
arpl
push
add
fnsave
mov
fisttpll
sarb
popa
push
fstpl
fstpl
inc
jecxz
fisttpll
push
xor
xlat
inc
arpl
add
pop
je
fisttpll
rcr
faddl
lea
mov
testb
or
mov
inc
inc
mov
adc
lods
outsb
sbb
ds
xor
rclb
push
std
inc
jecxz
js
xor
or
add
mov
add
push
std
out
mov
std
shrb
js
std
mov
jo
jne
xor
lods
std
mov
std
sbb
mov
or
add
std
call
das
mov
sbb
cwtl
andb
xor
std
and
lds
lods
pusha
jne
xor
push
mov
ret
iret
std
mov
mov
push
outsb
ljmp
mov
enter
lret
adc
xor
jne
xor
or
mov
xchg
std
or
push
lea
mov
and
loop
push
adc
iret
movb
inc
mov
mov
and
adc
mov
mov
cld
or
fadds
mov
ljmp
outsb
cmp
adc
xchg
call
ret
pop
sbb
jo
std
dec
sbb
and
cmp
push
push
push
pop
and
bndstx
xlat
mov
outsb
add
pusha
std
sbb
and
in
mov
ja
pop
push
push
shrb
std
test
push
loopne
push
pop
xchg
xor
movsl
xor
or
push
les
outsb
cmp
adc
call
pop
jo
call
and
and
std
sub
ss
ret
test
inc
mov
lds
inc
ret
movsb
inc
movsb
aas
xor
add
jno
jo
std
cmp
jbe
stos
mov
testl
or
mov
stos
mov
iret
repz
out
decb
insl
sar
insl
rcrb
fcmove
sbb
std
mov
mov
insl
sarb
std
ss
sbb
insl
rclb
std
insl
rcrb
pop
fdivr
sub
adc
loopne
push
fldl
std
cld
pop
addb
aaa
pop
movl
shlb
push
mov
adc
push
les
sbb
add
push
or
and
loope
jmp
std
js
int3
arpl
mov
std
inc
inc
movsl
and
ds
push
mov
test
inc
nop
jl
aad
out
aad
jge
jg
push
push
inc
xor
xchg
mov
mov
add
xor
nop
cmp
fiaddl
or
shrb
std
nop
xor
ss
push
rorl
std
or
mov
ds
mov
arpl
and
inc
mov
ret
or
or
std
ja
mov
ljmp
mov
roll
inc
test
mov
adc
mov
cmp
cmp
sbb
call
mov
aad
rcrb
jp
push
lea
push
fdivr
inc
adc
xor
mov
arpl
rclb
or
jo
std
lahf
mov
std
mov
jecxz
xchg
std
insl
sarb
add
push
mov
outsb
std
and
mov
or
push
push
push
jg
outsb
addl
jecxz
std
sbb
inc
pop
mov
std
push
push
nop
mov
inc
push
sbb
outsb
cmp
push
sbb
mov
sbb
xor
fldl
std
push
inc
imul
push
cmpsb
pop
mov
ss
pop
or
rcrb
lcall
std
and
insl
imul
or
call
inc
std
cmp
and
outsb
add
out
std
xor
and
or
vmwrite
jb
cld
add
lret
and
or
and
mov
les
xor
mov
pop
jno
std
test
jbe
outsb
cmp
jmp
std
cmpsl
xchg
fistpl
xchg
je
pop
jp
inc
movsb
lret
sub
xor
inc
std
pusha
repz
sti
cli
insl
inc
push
jno
enter
cmp
jns
bound
repz
push
sbb
mov
sbb
ja
sbb
fdivrp
sbb
sbb
cmpsl
mov
pop
adc
fimull
push
lret
mov
ret
add
std
jo
inc
adc
sub
std
adcl
std
rorb
fdivrl
add
lock
or
pop
push
scas
or
pop
adc
adc
pop
sbb
sbb
pop
and
pop
and
pusha
faddl
or
std
ljmp
add
cmp
std
outsb
addl
std
addl
pop
mov
shr
mov
jecxz
pop
adc
insl
sarb
inc
and
sar
pop
sub
xor
mov
stos
inc
push
lea
je
push
push
cmpl
test
mov
or
negb
fstp
mov
or
push
stos
sbb
xchg
and
jl
and
mov
and
fisttpll
imul
ss
mov
add
or
mov
fnsave
in
mov
sbb
add
mov
push
mov
shrb
or
adc
inc
arpl
sub
sbb
add
and
or
and
xchg
fsubl
mov
mov
push
lea
fldl
or
addr16
mov
pop
nop
addl
ds
cmpsb
subb
xchg
mov
inc
mov
jecxz
fst
cmp
pop
in
shrl
xor
add
xor
fisttpll
test
pop
faddl
fldl
jl
adc
sbb
ja
insl
fldl
inc
pop
dec
jno
xor
fstp
cwtl
js
shlb
xor
adc
aad
lahf
sbb
ss
arpl
in
or
insl
and
ss
fmuls
add
mov
push
ret
inc
rorl
call
out
xor
or
icebp
xor
adc
rclb
push
fstl
pop
call
xor
insl
push
lret
and
fldl
mov
jecxz
fisttpll
rolb
jno
push
mov
sbb
add
jp
adc
or
outsb
push
je
xor
adc
shrb
arpl
sahf
xchg
fs
inc
mov
inc
adc
xorb
xchg
sbb
jae
outsb
addl
loopne
cmpsb
add
mov
jns
outsb
jo
outsb
mov
loopne
mov
mov
xor
push
or
jmp
sub
push
jp
sbb
cmpb
mov
pop
lcall
les
sbb
push
cs
add
push
mov
or
mov
dec
or
sarl
jo
mov
popf
lcall
test
pusha
xchg
xor
insl
mov
ljmp
cmp
roll
mov
pushf
es
dec
add
sbb
jo
sarb
inc
dec
shl
add
sbb
insl
sarb
dec
dec
xor
add
mov
jno
mov
sbb
daa
or
mov
mov
mov
mov
roll
sbb
push
lea
sub
mov
outsb
mov
mov
add
adc
ja
xor
loopne
mov
mov
jo
xorb
mov
and
mov
test
orl
cmpb
push
cwtl
das
xor
les
mov
sbb
mov
mov
mov
inc
fistpl
xlat
orb
jno
nop
lcall
insl
rcrb
mov
jge
je
mov
inc
mov
inc
bound
ljmp
add
rcll
jmp
outsb
add
mov
push
xor
add
inc
mov
mov
inc
ret
sarb
mov
andb
sbb
jo
sbb
adc
rcll
mov
mov
mov
imul
mov
xor
addb
dec
push
je
xor
add
and
and
cmp
push
or
pusha
jno
inc
arpl
add
or
pop
push
mov
push
cltd
add
and
and
push
popa
pop
fisubrl
outsb
scas
fstpt
loope
call
sub
add
or
mov
mov
or
mov
mov
mov
jno
xor
and
mov
pop
mov
outsb
addl
cmp
mov
lcall
pop
rcrb
lds
mov
faddl
mov
addl
mov
lea
mov
mov
fdivrl
adc
insl
mov
std
es
rorb
add
shlb
add
jecxz
pop
mov
shrb
mov
push
add
mov
fwait
outsb
cmpl
push
mov
sbb
add
mov
mov
dec
imul
mov
mov
mov
mov
push
adc
sbb
dec
cmp
mov
mov
mov
sar
xchg
lods
cmp
mov
jo
cmpb
jge
xor
mov
xor
jnp
mov
mov
sbb
inc
mov
aad
rclb
add
cmp
push
jno
xor
shrl
dec
popf
xchg
ret
fsubr
mov
or
scas
add
inc
popf
cmp
adc
out
push
or
mov
popf
mov
popf
inc
ret
je
adc
popf
jo
inc
ret
incb
mov
xchg
adc
popf
outsb
add
xchg
popf
jnp
aas
xor
or
filds
lea
xchg
mov
mov
fisubl
lcall
mov
inc
jo
xor
sarb
dec
incb
faddl
lea
adc
sub
adc
insl
popf
mov
cmp
or
push
push
and
sbb
outsl
popf
mov
das
and
push
cmp
mov
ss
lods
mov
clc
cmpsb
or
shrl
jae
push
dec
adc
rcll
popf
sub
inc
loope
or
or
or
xchg
xor
and
sbb
popf
push
inc
sbb
sbb
jno
popf
jo
xor
jb
popf
lea
push
adc
iret
es
filds
popf
xchg
popf
loopne
push
outsb
addl
rolb
sbb
jne
popf
mov
test
popf
xor
sbb
int3
and
xchg
push
ror
popf
push
lea
or
fcompl
sbb
mov
xor
xchg
push
jo
popf
add
or
popf
xor
lea
add
inc
fnsave
adc
cmp
or
ss
sub
or
loopne
fnsave
push
test
sbb
add
inc
jecxz
pop
inc
fsts
nop
xor
push
mov
test
je
fisttpll
frstor
jo
mov
pop
jb
or
mov
fstp
push
or
fstp
mov
sbb
sbb
ss
jo
sbb
push
cli
sbb
lea
loop
fstp
cmp
faddl
ffree
ss
sbb
frstor
xor
inc
jecxz
imul
adc
mov
add
aam
mov
frstor
and
dec
sahf
or
adc
pushf
roll
test
mov
mov
sbb
lea
or
int
sarl
push
mov
dec
movsb
or
loopne
and
adc
imul
or
adc
std
mov
stos
add
or
ret
jmp
add
or
lret
scas
insl
cld
adc
push
call
jle
call
nop
mov
jmp
push
mov
adc
mov
aaa
sbb
pop
andl
mov
je
mov
out
adc
lock
jno
sub
adc
call
pop
mov
mov
ret
dec
or
mov
ss
fcoms
rorb
mov
fiadds
adc
add
cld
mov
or
jbe
and
xor
push
mov
adc
add
movzwl
cli
or
mov
data16
sub
js
pop
js
test
mov
bound
sub
xorb
mov
mov
jge
pusha
xor
mov
adc
sbb
adc
or
mov
mov
push
js
scas
pop
movsl
imul
int
test
je
mov
andb
mov
add
mov
mov
test
arpl
int
pop
push
cs
add
or
sub
cwtl
mov
xorb
xorb
or
add
in
imul
sbbb
aam
data16
push
iret
push
adc
push
add
fsubs
inc
inc
or
das
insb
ret
mov
fs
orl
lock
pop
lock
enter
or
cmpsb
fstl
add
mov
adc
pop
dec
sub
or
adc
sub
dec
add
and
leave
or
mov
inc
add
in
sub
adc
push
cmpsl
mov
pop
aam
or
stc
dec
addb
repnz
jo
or
push
dec
ret
in
ljmp
jo
xchg
add
push
push
push
adc
cmp
fcmovb
and
mov
nop
sub
fs
scas
sbb
sub
mov
jl
add
push
add
or
enter
pop
lcall
sub
push
mov
and
addl
adc
sub
sub
nop
and
sbb
stos
sub
pop
dec
sub
in
cmpsb
adc
addb
xchg
pop
push
xchg
add
push
js
sub
mov
pop
jl
or
out
or
ret
loope
inc
dec
popa
push
loop
call
cmp
push
imull
dec
sbb
mov
or
rorl
jge,pn
and
pop
jge
mov
scas
add
add
cmp
negb
push
add
sbb
push
dec
adc
jo,pt
sub
das
or
xlat
or
in
sub
out
daa
dec
stc
inc
dec
add
call
jecxz
lret
add
test
imull
sub
mov
add
or
test
push
sub
or
sbb
push
sti
fs
mov
test
nop
out
ja,pn
mov
sti
sbb
adc
fs
dec
or
inc
pushf
mov
lret
sti
mov
or
push
std
es
ja
imulb
xchg
sti
mov
pop
jo
mov
aad
inc
sub
sti
cmp
adc
push
pop
call
loope
adc
insb
mov
pop
pop
xor
sub
lahf
xor
mov
add
das
in
dec
jle
popa
cmp
sbb
adc
mov
sub
test
cmp
sbb
or
popf
fstpl
std
cmp
xlat
dec
pop
int
jb
pop
pop
jne
das
mov
mov
aas
mov
inc
test
sti
jl
push
add
out
out
xchg
sbb
decl
sub
mov
add
push
adc
mov
or
shr
xor
inc
xor
test
sbb
pop
subb
and
xor
mov
sub
or
jo
mov
scas
out
mov
int3
scas
xchg
test
imul
cwtl
cs
push
push
inc
ret
cmp
xor
imul
je
mov
js
sub
add
or
push
sahf
orb
lock
inc
daa
mov
and
inc
cmp
adc
jl
in
and
in
lret
dec
jl
jno
mov
ja
adc
inc
add
je
jbe
jmp
adc
dec
inc
xor
cmpsl
sti
popl
jo
inc
je
test
rcr
adc
mov
adc
jnp
adc
adc
test
nop
sbb
adc
sbb
pop
xchg
or
lea
pop
or
or
out
call
mov
inc
ret
sbb
addb
and
das
inc
inc
sbb
inc
orb
sbb
js
test
and
jno
sbb
out
and
sti
mov
in
dec
lock
outsb
jmp
fadd
dec
dec
sbb
jo
cmp
mov
xchg
sbb
sti
mov
sbb
pop
mov
rorl
mov
adc
or
sbb
mov
jmp
push
sbb
nop
das
lahf
pop
push
or
inc
inc
sbb
sub
stos
mov
jmp
add
sbb
les
sbb
or
sbb
jl
jmp
nop
pusha
jne
sbb
inc
cmpb
mov
sub
rcrb
les
ss
cmp
xor
aaa
sbb
bound
sbb
or
sbb
test
jo
sbb
xor
and
or
sbb
and
push
ljmp
sbb
xlat
addr16
pop
ljmp
and
es
and
adc
xor
fbstp
sbb
call
rorl
cmp
out
pop
ss
loopne
sbb
shl
sbb
mov
add
cmpsl
xor
adc
sbb
ljmp
sbb
scas
sbb
sbb
mov
cmp
stc
aam
adc
mov
sbb
jecxz
rcl
xor
inc
adcb
lea
adc
add
jo
xor
icebp
mov
adc
dec
aad
sbb
nop
jo
xor
sub
sbb
xchg
nop
sbb
adc
push
inc
jmp
adc
jo
inc
and
mov
fsubs
sbb
popa
push
sbb
or
sbb
push
and
test
pop
stc
jo
pop
adcb
xor
sub
and
mov
or
sbb
nop
enter
sbb
adc
sbb
popa
xor
test
out
lea
adcb
ret
cld
enter
cs
and
call
xor
and
add
dec
dec
jo
dec
inc
ret
sbb
cs
sbb
push
and
sarl
and
and
and
and
sbb
pop
push
call
mov
sbb
lea
orb
sbb
inc
sbb
pusha
push
movsb
outsb
test
mov
mov
and
or
out
pop
sbb
xchg
sbb
sbb
or
andl
or
adc
mov
test
cmp
sbb
fdivrp
sbb
xor
pop
push
addb
xchg
sbb
test
xchg
jg
sahf
out
fsubrp
push
in
aam
and
pushf
out
mov
sbb
ret
and
sub
ret
inc
sbb
faddl
fstl
pop
pushf
and
loope
fistpl
mov
sbb
adc
fstl
or
insl
adc
and
ficoms
push
fs
je
adc
into
repz
sbb
or
out
push
enter
add
sbb
fisttpl
fcomi
fcoms
sbb
repnz
add
add
test
in
sahf
xor
mov
cmc
inc
dec
jo
fmul
repnz
push
pop
ret
outsb
iret
and
test
push
push
adc
ljmp
dec
frstor
and
mov
fmuls
jmp
cli
out
or
mov
mov
je
dec
adc
fnstsw
fldl
jo
push
sbb
rcr
cwtl
test
xchg
test
pop
mov
add
stos
aas
push
call
cmp
mov
and
ja
adc
jecxz
daa
inc
ret
add
pop
frstor
jmp
nop
loopne
fstl
and
add
or
arpl
outsb
mov
test
fstl
or
movsl
or
mov
xchg
push
mov
inc
and
add
cmpsl
mov
pusha
xor
pop
test
ret
and
aaa
cmp
fistpll
ficoms
and
nop
and
lock
pop
and
out
int3
sbb
and
sbb
mov
or
arpl
xchg
mov
mov
fldl
rolb
movsb
or
ja
push
bound
mov
loope
jae
add
mov
mov
pop
fisttpll
pop
fnsave
and
or
add
fnsave
push
andl
mov
mov
jbe
fnsave
call
jg
mov
adc
pop
fldl
mov
or
sub
loopne
and
cs
push
pop
test
test
sarb
adc
fcomip
pop
and
jne
mov
adc
add
loope
push
xlat
clc
push
out
outsl
loop
and
add
out
inc
mov
xor
adc
ss
outsl
inc
mov
out
pusha
jmp
and
sbb
negl
or
fiadds
mov
pop
and
mov
pop
popa
sub
lock
fisttpll
fstl
cs
ret
sti
adc
xchg
ret
les
int3
pop
mulb
and
pop
in
mov
shlb
mov
add
xchg
addr16
mov
add
std
lcall
lods
sbb
rol
push
das
pushf
push
fcmovu
mov
mov
loopne
mov
fistps
call
push
or
fnsave
add
pusha
mov
dec
jo
frstor
loope
or
fnsave
add
and
or
inc
mov
and
mov
or
and
sarl
loope
adc
fstpl
adc
and
mov
test
in
jmp
loop
dec
push
pop
and
lods
fstpl
and
frstor
and
inc
lahf
mov
xchg
frstor
outsl
sub
and
int3
add
inc
dec
cmp
nop
loopne
push
int3
call
mov
inc
out
fiadds
and
fldcw
jae
adc
pusha
jmp
dec
fstl
mov
fstpl
test
pop
shrb
sub
inc
sbb
sbb
adcb
push
mov
sahf
imull
jg
or
push
add
inc
jge
div
hlt
push
in
in
sbb
xor
jmp
inc
stos
aam
push
dec
pusha
sbb
jb
cmp
rcrb
sbb
sbb
cmc
mov
push
clc
push
and
aas
sub
aas
mov
aas
mov
or
out
fidivrs
mov
jge
sbb
mov
rorb
fadds
call
dec
dec
add
and
push
loope
inc
sub
cmp
mov
aaa
fs
and
add
jmp
nop
push
or
ret
loope
lods
je
dec
or
and
daa
and
mov
push
addl
sbb
add
jp
andl
rclb
push
call
nop
jo
mov
shll
popf
adc
adc
fimuls
xchg
sub
and
mov
or
adc
andl
adc
sbb
mov
nop
and
sbb
and
test
xor
leave
sbb
or
cmp
test
scas
xchg
sbb
scas
mov
pop
xchg
lock
or
test
mov
and
shll
adc
xor
or
xor
mov
adc
jo
inc
inc
mov
sub
cmp
dec
mov
xor
test
push
js
mov
icebp
or
inc
pop
and
xor
xor
and
sub
xor
nop
xchg
mov
xor
fstps
hlt
sub
in
or
out
adc
call
jno
push
cmp
call
adc
out
and
jns
iret
loop
adc
or
mov
sbb
outsb
in
test
lret
inc
test
mov
add
xchg
mov
dec
or
adc
xlat
pop
adc
rclb
pop
shrb
dec
mov
or
add
testl
add
adc
cmp
out
cwtl
pop
fcomps
pop
jge
or
pop
stos
pop
dec
push
and
in
sub
fldl
pop
insl
fnstenv
loope
and
repnz
pushl
mov
loope
sbb
cmp
mov
and
shll
xor
inc
inc
andb
jo
xor
nop
pusha
add
xor
push
xor
outsl
cltd
sbb
add
sahf
frstor
movsb
in
push
fisubs
inc
mov
add
iret
pavgb
mov
pusha
sbb
pop
and
shlb
and
aaa
sbb
xor
push
fwait
cmpsb
rcll
rcll
leave
sbb
mov
xor
test
inc
inc
ret
xor
nop
jo
shll
push
xchg
jl
mov
shll
lret
xor
push
pop
xor
xchg
xlat
cmpsb
sbb
test
sbb
xor
add
mov
xchg
movsb
sahf
fs
lea
push
xor
das
sub
dec
stos
rcll
add
xorl
add
popa
add
popf
ffree
or
adc
adc
repz
nop
int3
test
mov
movsl
xchg
push
xor
adc
adc
adc
or
and
mov
push
or
je
jg
inc
or
aam
and
or
loopne
aas
sbb
inc
mov
jo
add
push
inc
ret
add
inc
jle
mov
push
imul
fsubs
add
xchg
dec
shlb
and
fs
in
sub
pusha
add
pop
add
sub
insb
sub
add
dec
ja
adc
test
and
aad
gs
sub
ret
dec
iret
mov
jg
add
daa
or
and
xchg
or
fimuls
push
adc
xchg
push
xor
and
dec
sub
adc
andl
repz
add
pusha
jle
jne
add
or
shrd
out
mov
pop
outsb
bound
and
adc
mov
cmc
or
mov
or
mov
sbb
lcall
add
dec
mov
pop
dec
jp
add
mov
aad
or
add
add
es
mov
add
lea
nop
test
ds
cmp
inc
ret
add
mov
dec
cmp
xchg
ja
or
js
pop
xor
adc
adc
adc
xor
adc
cli
mov
testl
call
cwtl
add
push
adc
mov
aas
sbb
adc
mov
push
out
xchg
nop
mov
outsl
or
inc
add
and
bound
adc
push
addb
js
rclb
or
inc
add
or
shll
or
mov
add
add
add
out
fmuls
or
fwait
mov
jo
lcall
mov
nop
mov
cmp
mov
fistps
mov
add
mov
dec
pop
sbb
incb
daa
ljmp
adc
loope
fists
mov
or
and
xchg
dec
pop
dec
mov
add
mov
mov
inc
sbb
adc
mov
in
xlat
pop
sub
mov
in
mov
add
mov
add
outsb
mov
xorl
pop
adc
es
sub
cmpsl
or
add
dec
addb
push
dec
call
jbe
lock
sbb
push
and
mov
xor
adc
rcrb
or
lods
in
je
or
test
and
add
call
xor
dec
mov
jle
lock
adc
or
dec
clc
adc
sub
js
and
mov
add
enter
mov
dec
aam
jecxz
sbb
jl
cmpl
pusha
add
inc
es
inc
push
sub
fstpt
es
mov
fldenv
inc
sbbb
lcall
pop
cmp
inc
inc
cld
push
push
dec
fidivrs
xor
adc
mov
or
and
push
mov
add
outsl
xor
fdivrl
mov
and
or
ficoms
mov
mov
or
jge
and
dec
mov
push
das
pushf
loop
pop
clc
and
push
add
fmuls
mov
cmpl
mov
xor
mov
fcoms
jns
lahf
add
test
and
xchg
testl
inc
js
aad
rorb
addl
sbb
in
scas
shlb
sbb
push
pusha
inc
cmp
sbbb
adc
sub
adc
mov
ret
dec
or
sbb
imul
cmpsb
in
dec
jne
push
fldl
inc
subb
rolb
jp
sub
mov
mov
inc
lods
inc
lahf
inc
jmp
frstor
mov
or
bound
in
lds
or
loope
fsts
or
or
loopne
ja
adc
or
dec
pop
xchg
or
jno
adc
sbb
iret
jge
mov
outsb
or
inc
or
fsubl
sbb
arpl
jge
adc
adc
inc
xchg
or
pop
test
shll
xor
outsb
inc
or
mov
or
or
int
adc
pop
push
sbb
and
scas
icebp
cmp
jae
lea
cmpl
cmp
mov
adc
push
mov
sub
xchg
loop
ss
shl
lcall
adc
xor
add
inc
ret
cltd
add
xor
and
mov
les
cli
cltd
movsb
icebp
add
scas
shll
mov
dec
mov
add
push
rcrl
fnsave
add
push
cmp
imul
push
and
sbbb
cltd
jnp
xor
cmp
sti
mov
xchg
cltd
dec
sbb
into
inc
dec
inc
ret
cltd
dec
lcall
loopne,pt
scas
add
add
out
and
xor
mov
ret
lret
test
cltd
mov
push
je
cltd
push
pop
and
lds
xor
mov
adc
cltd
pop
sbb
and
cltd
mov
add
fiaddl
adc
sbbb
cltd
mov
lods
cltd
aaa
add
sbb
test
cmp
and
je
cltd
test
fs
inc
pop
cltd
pushf
rolb
jne
cltd
sarb
arpl
add
inc
int3
pushf
cmp
or
imul
jp
sbb
cmp
cltd
test
mov
test
movb
ss
push
fistl
pop
xchg
test
dec
test
or
pop
insl
inc
cmp
or
call
mov
test
aam
add
aam
test
xchg
jl
mov
sbb
inc
adcb
test
cld
jle
or
test
or
pop
or
xchg
bound
movsl
pusha
test
xchg
aam
xor
add
test
inc
xchg
fiaddl
jmp
pop
mov
imul
les
mov
sbb
mov
popf
movsl
test
jo
insl
inc
js
int3
ret
lock
loopne
frstor
or
adc
push
dec
nop
pop
aad
adc
cmp
rcrb
daa
and
and
in
pop
fcoms
mov
nop
rorl
add
mov
sub
or
push
sbb
mov
shrl
aad
adcb
shrb
test
adc
outsb
fdivl
aad
inc
fdivrs
lock
insl
aad
addb
aad
insl
popf
outsb
sbb
test
fildl
sub
aad
fimuls
fistl
outsb
loop
pop
and
or
aad
adc
loope
and
mov
and
es
jbe
mov
xor
loopne
repnz
cmpsb
sub
and
aad
dec
call
dec
pop
mov
adc
xchg
stos
rcr
jo
push
mov
mov
sbb
aad
jp
shrl
aad
movsb
or
adc
lods
test
aad
outsb
loop
and
in
pop
lock
xor
ja
adc
fistl
push
fs
adc
sarb
into
and
add
aaa
es
mov
stos
xor
mov
les
mov
insl
or
aad
or
mov
fcmovnbe
cmp
xor
loopne
and
dec
xor
fdivl
test
ljmp
fdivl
test
ret
push
subb
aad
mov
mov
mov
sahf
loopne
insl
or
js
insl
or
aad
push
jmp
sub
insl
aad
jb
or
js
add
insl
inc
aad
mov
pop
aad
pusha
cmpsb
add
push
and
fistl
aad
insl
inc
cmp
insl
or
rcl
push
inc
fs
cmpl
call
adcb
fistl
outsb
add
or
je
in
fwait
mov
sbb
outsb
sbb
sub
js
mov
aad
ret
inc
inc
enter
dec
sbb
insl
fst
insl
inc
js
fstp
adc
test
jle
sub
fcmovnu
mov
fildl
adc
jmp
cmpsb
sahf
int
test
mov
fisttpll
fisttpll
insl
inc
pop
fiaddl
insl
or
rcr
in
sarb
cmp
insl
jo
mov
fst
add
test
jae
adc
fildl
or
fisttpll
lock
inc
mov
ret
mov
push
jno
push
push
jno
adc
insl
inc
dec
mov
adc
inc
rcr
push
loope
fcmovnu
mov
popa
jo
mov
hlt
dec
pop
inc
mov
ret
fldl
cmpsb
lahf
and
fldl
add
adc
xor
loop
and
ret
mov
leave
fldl
cs
sbb
testb
jmp
push
or
adc
ret
fnsave
and
outsb
loope
xchg
ja
sbb
sub
fucom
mov
lods
xchg
out
sbb
xor
imul
rorb
fnsave
fldl
fstpl
xor
sub
rcr
mov
or
mov
inc
stc
adc
adc
add
mov
popa
lods
in
fldl
jo
test
inc
push
fnsave
fldl
mov
dec
fdivl
fnsave
fnsave
test
add
inc
fstp
pop
xchg
cmpsb
xchg
xlat
popa
icebp
shrb
lcall
fildl
xor
fnsave
pop
push
mov
fstl
lock
add
leave
pop
mov
outsb
sbb
push
fnsave
ljmp
cmp
mov
sti
jmp
loope
loop
and
aas
inc
fstl
add
pop
fnsave
test
dec
xchg
sbb
dec
inc
add
and
adc
xor
mov
or
fnstsw
jo
test
push
adc
fstl
insl
fucomp
mov
mov
fnsave
mov
loopne
inc
jle
stos
pop
fdivl
test
jmp
ret
adc
insb
fsubs
outsb
sbb
mov
pop
lock
mov
xchg
adc
fstl
adc
insl
inc
fstp
ss
aaa
sbb
ljmp
dec
add
mov
sub
ss
adc
or
mov
frstor
out
loopne
and
sbb
push
jne
adc
inc
fs
call
mov
ffree
add
or
addr16
call
mov
jno
fucomp
mov
jl
fstl
sbb
xchg
inc
fsubrl
fcmovnu
push
xchg
mov
fstpl
fnsave
xor
or
test
push
mov
pop
inc
cmp
xchg
add
and
inc
shrl
fisubrl
js
push
push
add
testb
or
insl
inc
pop
add
fistl
inc
pop
xor
fldl
fdivl
test
paddusw
adc
jbe
sub
je
dec
aam
loope
mov
clc
test
outsb
sbb
mov
inc
mov
fstpl
fldl
xor
mov
jnp
jne
adc
dec
es
insl
pusha
fstpt
lea
es
fxch
lahf
mov
loope
push
fnsave
test
adc
rclb
push
fstp
enter
movsb
sub
adc
das
test
insl
inc
mov
insl
or
cmp
cmpsb
mov
ss
pop
outsb
jge
out
pop
clc
cld
or
loopne
mov
xor
fdivl
frstor
xchg
orb
jge
out
fcomps
pop
push
movsl
das
cmp
test
add
jo
fdivl
fldl
cmp
stos
fildl
imul
das
out
fdivs
or
cwtl
push
or
add
xor
cmpsb
mov
fcoms
fnstsw
mov
insl
roll
out
cmp
movsl
das
hlt
cli
push
or
add
xor
cmpsb
mov
fcoms
fstl
inc
jge
out
xor
movsl
das
push
or
cmp
aaa
push
fldt
and
movsl
mov
test
ret
sub
fistl
outsb
sub
insl
or
xor
push
xchg
mov
das
pandn
fsts
push
sbb
ret
fs
sub
sbb
lret
ret
fnstenv
fnstsw
ljmp
and
pushf
inc
ljmp
in
stc
std
mov
stos
jbe
mov
imull
scas
mov
fdivl
add
or
adc
pop
adc
jo
fldl
fdivl
test
movsl
or
testl
fmull
test
ret
fildl
or
push
or
adc
mov
outsl
or
and
outsl
add
fstp
jne
loop
or
call
test
jno
frstor
inc
dec
dec
pop
xchg
cs
push
les
out
cmp
pushf
mov
orl
je
push
les
mov
inc
rcrb
or
pop
in
fs
rcl
inc
mov
xlat
aad
test
aad
pop
and
outsb
add
or
lcall
jo
mov
xchg
add
xorl
lret
addb
mov
mov
test
push
cmp
and
mov
inc
ret
scas
add
mov
and
add
sub
add
add
or
xchg
mov
and
loope
mov
test
inc
sbb
in
inc
add
mov
stos
and
adc
mov
out
or
or
mov
hlt
ficompl
aaa
inc
or
or
cmp
orb
inc
mov
outsl
sbb
mov
mov
adc
mov
shrl
jo
mov
sahf
adc
add
js
dec
adc
mov
mov
and
add
mov
add
rcll
or
inc
dec
pop
cmpsl
dec
rcll
inc
add
test
sbb
cmp
cmp
lods
and
or
or
hlt
add
fsubrl
mov
or
and
sub
mov
mov
push
and
mov
mov
mov
add
add
mov
mov
loopne
inc
add
add
and
in
add
cmpsb
or
and
add
nop
jo
add
addl
inc
shll
jb
mov
add
mov
loope
mov
pop
xchg
fdivrs
xor
add
mov
loope
test
adc
imul
bound
push
add
str
mov
sbb
cmpsl
enter
or
mov
mov
nop
mov
or
or
jle
push
pop
adc
std
test
pop
adc
mov
add
ja
add
xchg
or
add
popa
add
or
arpl
mov
or
dec
cmp
add
cmpb
and
loopne
pop
and
in
pop
inc
jo
and
mov
testl
dec
mov
adc
test
mov
add
aaa
adc
mov
or
mov
add
mov
push
add
movsl
push
add
mov
add
mov
push
dec
out
icebp
push
mov
out
add
mov
sub
sub
fistl
cmp
andl
jmp
adcb
into
insl
addb
sbb
add
scas
and
mov
dec
cmp
xorb
lds
std
xchg
fnsave
cmp
push
imul
add
mov
add
mov
pop
rolb
xchg
ret
xchg
dec
xchg
cltd
sub
call
addb
fbld
adc
and
inc
mov
or
or
int3
js
inc
ret
rolb
mov
inc
add
addb
jle
adc
adc
and
jge
int3
inc
jg
adc
and
out
dec
adc
mov
adc
adc
ret
add
movsb
dec
xchg
sbb
andl
push
mov
nop
mov
lret
push
call
mov
call
clc
or
or
ret
add
outsb
lods
pusha
mov
fs
or
mov
lea
nop
and
sarl
hlt
ja
dec
mov
push
mov
add
nop
jo
call
mov
mov
dec
mov
popa
cmp
mov
mov
sbb
inc
add
inc
mov
ret
adc
mov
nop
or
and
mov
push
push
and
cmp
or
daa
inc
xor
adc
clc
std
adc
mov
add
adc
out
insb
xor
or
cmp
adc
adc
rorb
aaa
ja
dec
js
xor
push
inc
pop
shl
les
mov
dec
call
shll
mov
xchg
mov
inc
sti
into
xorl
push
add
pop
aas
push
add
fsubl
mov
sbb
movsl
pop
sub
add
ficoms
mov
rcrb
adc
nop
jo
shr
mov
add
or
adc
adc
loopne
sub
pop
pop
cmp
nop
pop
jne
inc
xorb
mov
nop
mov
pop
movl
pusha
inc
adc
mov
test
push
fists
movaps
sub
pop
mov
pop
adc
loopne
inc
or
lock
pop
add
cmp
pop
mov
adc
jne
and
je
xorl
loopne
pop
addb
out
pop
pop
adc
cwtl
into
mov
push
add
jo
add
add
push
add
or
pop
add
pop
push
mov
pop
inc
add
shll
inc
rclb
adc
adc
add
xor
pop
mov
pop
lods
add
shll
faddl
add
rcrb
sbb
push
sbbb
add
add
mov
add
pop
ja
add
fdivl
pop
fsub
and
push
je
and
push
inc
popa
int3
mov
cmp
add
pop
adc
pop
mov
pop
sbb
inc
add
or
dec
xor
inc
adcb
cld
add
adc
or
add
pop
inc
sub
and
or
pop
jmp
subl
or
js
shrb
push
add
dec
pop
push
add
sub
add
pop
stos
add
push
pop
dec
push
outsl
xor
adc
add
pop
xchg
add
js
mov
inc
pop
add
sbb
adc
addb
pop
adc
les
xor
or
push
add
shrb
ret
pop
pop
ret
int3
int3
jo
sub
inc
jbe
js
insl
dec
fnstsw
jo
insl
dec
and
cmp
mov
fstl
dec
mov
add
and
addb
mov
sbb
stc
push
add
aad
add
outsb
lds
pushf
inc
sahf
pop
popf
adc
xchg
add
mov
andb
jmp
push
and
nop
jo
inc
and
cs
or
cmp
add
push
add
mov
add
add
and
std
mov
jmp
iret
popa
orb
and
push
les
xchg
jo
inc
andb
dec
imul
nop
insl
ret
adc
in
orb
inc
and
and
inc
sbb
and
or
adc
and
adc
inc
add
and
mov
je
mov
inc
lgdtl
test
cli
sahf
dec
sbb
ljmp
fcomps
test
cwtl
and
lcall
adc
sbb
nop
and
xchg
shlb
or
add
mov
dec
inc
les
inc
shr
push
add
cmp
pop
int
xor
mov
test
adc
dec
and
add
push
je
add
sbb
inc
and
je
test
add
inc
and
push
or
outsb
sub
aam
jmp
call
mov
and
dec
adc
add
in
inc
and
in
popa
jno
adc
sub
jo
adc
and
loop
or
inc
ret
sub
and
adc
adc
jp
and
sbb
nop
lock
test
add
push
cmpsl
and
unpcklps
or
push
testl
jp
mov
adc
and
add
and
and
adc
jne
data16
adc
add
inc
lret
ret
and
lods
subl
testb
lret
das
shll
incb
sub
cmpsb
out
inc
mov
mov
pop
ds
add
pop
ret
in
shr
add
icebp
xchg
dec
add
jbe
lret
dec
mov
or
mov
mov
and
rcrl
notb
lret
and
cs
loope
add
ret
out
or
inc
pushf
lods
mov
cld
sub
popf
push
sub
popf
or
add
jecxz
test
sub
pop
popf
mov
mov
ficomps
push
and
push
adc
pop
rolb
popa
jbe
and
pop
mov
rcll
fs
adcb
inc
movsb
ret
daa
mov
je
add
or
pop
dec
mov
mov
xor
adc
or
or
and
imul
rcll
dec
mov
and
popa
xor
push
xor
push
mov
mov
and
or
sub
or
add
js
cmp
or
add
adc
test
jo
std
and
mov
jb
cmp
cmp
inc
loope
and
sti
pop
inc
adc
adc
into
xlat
push
sbb
mov
adc
pop
adc
add
cmp
aam
inc
ret
popa
test
inc
dec
cmp
add
and
and
jnp
push
push
out
mov
push
push
and
loope
and
std
shrl
push
jae
nop
adc
or
test
std
add
mov
mov
orb
std
and
inc
inc
std
jp
ja
and
std
into
mov
push
or
sub
mov
adc
jo
and
cmpsl
mov
mov
outsl
sub
dec
inc
mov
add
fstpt
inc
ret
jl
adc
inc
std
lret
adcb
mov
test
xchg
inc
inc
inc
add
or
and
cmp
or
push
enter
jnp
std
enter
or
lods
adc
add
sub
pushf
cwtl
std
addb
inc
popa
shr
adc
adc
adc
push
out
add
pop
arpl
add
std
std
add
or
std
inc
inc
ret
push
std
add
adc
jge
dec
loope
push
adc
push
out
adc
and
sbb
sub
sbb
std
or
jmp
pusha
fs
mov
and
adc
sub
adc
test
stos
inc
fists
pushf
or
or
push
mov
mov
pop
sub
and
std
push
or
std
adc
pop
pop
mov
or
std
dec
out
jp
and
jge
fwait
or
rsm
push
xlat
stos
shlb
inc
or
incb
and
rorl
bound
cmp
add
sti
jmp
jo
std
cmp
push
les
adc
std
mov
adc
enter
bound
adc
fwait
test
add
test
std
cmp
pop
pop
adc
and
sub
or
pop
loope
dec
mov
daa
sbb
ret
mov
add
out
test
mov
or
adc
jge
std
jae
mov
add
std
cmpsl
adc
rorb
seta
mov
neg
or
add
dec
repz
sub
std
jg
or
repnz
cmp
sbb
pusha
xor
ret
or
or
sbb
jmp
shrb
add
fdivl
hlt
inc
push
mov
sbb
sbbb
pusha
adc
inc
sbbb
roll
jmp
js
and
push
or
cli
and
stos
add
jmp
sbb
sub
or
or
movsb
push
out
push
sahf
cmp
rorl
sbbb
test
and
lahf
add
cmpsl
jne
push
xor
lahf
xchg
and
insl
or
and
push
xchg
add
test
mov
lahf
xchg
pop
and
lahf
inc
add
and
call
cs
lahf
and
and
fistpl
mov
or
rolb
ret
adc
adc
dec
jo
or
ret
stc
jmp
das
dec
fmul
sub
or
imul
faddl
push
add
push
pop
inc
adc
sbb
inc
sbb
push
inc
int
jo
or
test
sbb
dec
sbb
test
sub
adc
push
idiv
add
sahf
ss
mov
stos
mov
mov
cmpsb
or
ds
scas
mov
call
or
push
push
mov
inc
xor
mov
sbb
sbb
and
dec
mov
lock
stos
sahf
sbb
ljmp
mov
push
iret
pusha
repz
iret
loopne
cmp
sbb
roll
insl
or
shll
pusha
dec
stos
outsb
popf
ss
cmp
ds
or
xchg
ficoml
xchg
mov
loope
pusha
sub
imul
fdivs
mov
mov
sub
aad
je
sti
mov
pushf
bound
orb
sahf
pushf
fdivrs
ret
dec
arpl
inc
mov
fsubl
test
xchg
mov
out
faddl
pop
xchg
js
add
pop
pop
popf
test
sbb
dec
sbb
rorl
dec
mov
mov
roll
cmpsl
or
mov
stos
mov
jle
dec
sbb
sbb
mov
call
dec
cli
sbb
pusha
hlt
mov
mov
mov
xchg
xchg
sub
repnz
call
lock
addr16
push
jne
adc
pushl
mov
fdivrs
rcr
std
mov
add
repz
and
je
lods
jne
adc
imul
xchg
insl
jmp
cmp
imul
insl
or
ds
pop
mov
or
or
mov
fwait
dec
sbb
pushf
mov
roll
mov
sbb
mov
fdivrl
mov
ljmp
roll
insl
or
insl
mov
insl
or
mov
sbb
insl
mov
jmp
push
jl
sbb
cwtl
xorb
sub
ret
xor
ja
ror
rolb
enter
jne
push
xchg
loop
and
enter
fistpl
je
push
bt
sub
xor
pop
orb
xor
jo
inc
sbb
fwait
movsb
push
push
adc
or
sub
or
mov
mov
subl
stos
and
dec
or
aaa
les
and
and
or
push
sub
lcall
outsl
rol
lods
or
or
adc
ret
push
adc
outsl
inc
xchg
test
jnp
inc
mov
sub
pop
inc
imul
sbb
mov
xchg
push
mov
movsl
call
imul
call
insl
nopl
or
inc
imul
adc
add
movsb
xchg
scas
cmp
ret
xchg
mov
dec
sbb
movsb
jl
jo
imul
rolb
dec
movsl
or
xchg
movsl
dec
inc
xor
or
and
idivb
push
mov
xchg
sahf
pop
call
add
loope
jb
pop
test
movsl
outsb
push
cmp
push
cwtl
inc
xchg
test
push
and
add
xor
ficoml
in
adc
xor
lret
ss
ss
xor
into
test
push
xchg
movsl
stc
pop
test
movsl
push
popf
push
xor
adc
and
mov
fwait
pop
sub
sub
test
aam
or
rolb
mov
inc
xchg
push
scas
aas
jmp
cmp
test
test
mov
mov
xor
mov
ficoms
jecxz
sbb
loope
or
mov
pop
movsl
or
insl
or
loope
movsl
insb
jne
xchg
ss
cld
mov
movsl
sbb
pop
shrb
cmp
mov
xchg
decl
push
imul
andb
sbb
leave
or
inc
ret
movsl
movsl
jl
mov
dec
sbb
movsb
or
or
arpl
push
call
push
daa
das
clc
shr
add
adc
sbb
sbb
cmp
sbb
jmp
test
mov
pop
dec
iret
ss
stos
rcll
shll
test
push
ret
shrl
rcrl
or
roll
pushf
adc
sarl
lods
mov
movsl
or
inc
imul
or
loope
ja
movsl
or
mov
fs
fcom
mov
and
mov
loope
rorl
pop
jno
shrl
ficoml
out
rcl
mov
cmp
test
in
movsl
or
xor
xchg
ss
xchg
jno
xchg
mov
rolb
mov
scas
fidivrl
subb
mov
or
mov
ret
lock
or
bound
lods
jo
hlt
testb
movsl
mov
or
adc
or
or
ss
push
andl
adc
out
shrl
insl
or
insl
rorl
or
inc
rcl
push
ret
inc
mov
sbb
mov
cmp
push
dec
cmp
xchg
pop
mov
push
push
push
push
push
or
add
fsubrs
sub
jo
pop
ret
mov
push
ret
sbbb
or
pop
or
and
mov
call
mov
js
jle
pop
or
sbb
and
jae
inc
ret
fcmovnu
lods
cmp
xor
cmp
sub
loope
cmp
stos
adc
dec
xchg
and
dec
adc
xor
lea
sub
or
xchg
sbb
xchg
adc
add
sub
push
xchg
cmp
xchg
or
nop
pusha
xchg
and
sub
xchg
repnz
add
inc
jle
inc
ret
adc
loope
inc
or
fnstsw
mov
jecxz
loop
dec
mov
adc
adc
jecxz
push
adc
push
sbb
subb
adcb
lods
test
testb
mov
popa
aad
jecxz
sbb
movsl
dec
lds
stos
ss
add
fbld
mov
push
dec
leave
mov
lahf
nop
pusha
out
adc
or
inc
push
or
add
enter
adc
add
xchg
dec
adc
loope
rorb
hlt
adcl
addb
cwtl
jo
push
dec
dec
jg
mov
scas
and
pop
inc
xor
add
adc
loope
jns
dec
or
jns
mov
orb
ret
dec
xchg
push
push
movsb
cmpsb
push
xchg
or
leave
mov
add
lcall
loopne
xchg
test
or
xchg
mov
xchg
nop
mov
inc
pop
sbb
jmp
sbb
push
sub
or
add
loope
call
jo
mov
jae
mov
ret
mov
lock
add
add
adc
mov
inc
push
pop
push
dec
add
and
or
and
inc
mov
or
mov
xchg
mov
mov
mov
nop
jo
mov
dec
mov
out
fcomps
sub
loope
ljmp
pushf
out
and
lock
adcb
mov
add
mov
adc
mov
mov
push
or
and
mov
test
push
inc
fwait
dec
inc
ret
outsb
rolb
adc
sub
bound
sub
mov
ret
mov
rolb
aaa
inc
or
aas
cmp
mov
loop
or
ret
es
add
mov
and
mov
dec
mov
addl
xchg
orb
inc
mov
adc
add
push
mov
push
mov
and
mov
insb
or
add
mov
ret
cmpsb
mov
mov
mov
add
sbb
and
sbb
ret
inc
sbb
adc
bound
or
into
xor
movsl
pop
dec
cmc
add
push
dec
pop
cmp
push
sub
dec
dec
jbe
dec
adc
daa
mov
test
dec
push
or
or
adc
std
ret
pop
adc
std
add
pop
adc
je
arpl
add
push
inc
add
out
adc
ret
mov
pop
xor
push
add
inc
add
std
adc
or
std
mov
add
and
into
xor
xor
subb
adc
sbb
test
scas
dec
andl
lahf
jmp
fcomi
or
je
jl
sbb
popf
insb
inc
pop
inc
jle
or
insb
pusha
sub
mov
popa
lcall
faddl
or
adc
pop
mov
mov
mov
shrl
xor
push
sbb
and
inc
mov
rcl
fsubrs
sbb
fistl
out
rcrb
cmp
imul
cmp
inc
dec
mov
mov
mov
mov
push
or
ret
shlb
mov
ret
jecxz
or
inc
mov
or
inc
js
mov
lahf
and
ficomps
pop
test
sbb
mov
dec
insl
ds
push
push
cmpsb
adc
add
ljmp
data16
pop
dec
test
dec
sbb
or
mov
dec
cmpsb
and
pop
test
dec
mov
je
or
int3
data16
push
xorl
fsub
int
pushf
data16
inc
mov
mov
push
push
add
or
and
dec
adc
ret
push
mov
inc
dec
scas
inc
sbb
je
mov
mov
xchg
dec
imul
aaa
or
ret
xchg
cmp
shlb
dec
inc
jge
pop
jmp
leave
sbb
ret
inc
inc
fcoml
test
pushl
mov
mov
test
imul
inc
mov
or
and
ljmp
gs
adc
dec
scas
adc
aas
or
sahf
daa
ret
dec
adc
call
jns
pop
nop
mov
inc
add
sbb
repnz
test
cmpsl
cmp
pop
outsb
int3
loope
mov
mov
aas
add
mov
xchg
das
adc
mov
repnz
filds
adc
shlb
adc
push
push
mov
mov
les
xor
cmp
sbb
rolb
pop
and
sbb
and
loopne
mov
pop
test
fsts
scas
notb
dec
cmp
adc
jp
mov
in
gs
cmp
mov
adc
lds
sub
dec
add
jno
adc
adc
gs
mov
les
shl
sbb
push
and
mov
jns
cmp
mov
rcl
pop
fwait
dec
lock
adc
mov
adc
xor
adc
insb
or
fcoml
jno
adc
mov
adc
test
out
adc
mov
faddl
or
xor
adc
gs
mov
mov
fsubl
xchg
mov
or
sbb
cwtl
rcr
adc
sahf
dec
test
sahf
sub
sbb
int
imul
push
adc
or
adc
dec
xor
sbb
jo
or
sti
dec
dec
inc
adc
int
xchg
js
cmp
scas
pop
nop
ret
mov
mov
sbb
push
lret
xchg
aam
call
and
or
add
rclb
fsts
inc
pop
mov
orb
push
cmc
push
xchg
adc
push
fsts
push
xlat
mov
xor
sbb
into
in
gs
mov
push
push
cmc
arpl
mov
jmp
xchg
add
add
mov
lcall
test
pop
insb
or
jmp
ja
addl
mov
sbb
cmp
in
mov
mov
xchg
xchg
lret
inc
les
inc
pop
sub
and
mov
mov
mov
inc
rolb
and
push
sbb
fwait
jb
sbb
subl
add
and
inc
orl
test
xchg
xchg
and
enter
pop
loope
xor
push
negb
jge
cli
or
and
xchg
xchg
call
dec
sbb
and
ret
xchg
sub
or
xor
mov
xchg
xchg
insl
movsl
push
aam
and
ret
ret
test
test
push
xchg
xor
shl
and
scas
sbb
in
rcrb
popa
inc
xor
test
sbb
add
add
test
and
popa
inc
test
and
sbb
and
jb
mov
call
ret
fnstenv
mov
xchg
mov
sbb
shr
adc
inc
ret
sbb
xchg
cmpb
shrb
je
adc
mov
cmp
and
popa
inc
cmp
fstl
mov
test
lea
add
cmpsl
lods
xchg
lock
sbb
pop
outsb
cmp
jle
push
ss
jbe
rcl
inc
sbb
inc
ret
xchg
dec
out
popa
inc
mov
mov
test
push
inc
cmp
jae
xchg
aad
in
and
push
jo
loop
sbb
clc
inc
movsb
xchg
ss
xchg
xor
cltd
popf
mov
fcompl
loopne
and
ret
cmpsb
mov
add
clc
test
cli
mov
or
xchg
mov
jo
insb
in
loope
daa
mov
push
pop
xchg
pop
pop
bound
mov
cmp
ljmp
in
inc
adcb
dec
clc
orl
add
xchg
xor
daa
dec
jge
in
pop
mov
inc
push
cwtl
inc
add
add
or
jl
in
adc
sbb
and
in
mov
sbb
and
xor
sbb
add
les
sbb
nop
add
xor
mov
mov
clc
iret
pop
in
adc
pop
push
pop
orl
dec
or
jge
dec
dec
sbbl
inc
orl
clc
add
mov
in
adc
xchg
add
or
rolb
pop
jns
xchg
and
or
xchg
or
mov
push
and
mov
das
and
out
push
push
das
xchg
and
xorb
ljmp
mov
repnz
sub
add
xchg
and
xor
sbb
cwtl
das
loopne
and
mov
or
fisubrl
or
mov
gs
mov
scas
aaa
or
sbb
jno
sbbb
push
das
jmp
mov
lcall
outsb
sbb
add
pop
xchg
pop
repnz
inc
mov
xchg
sbb
rcrl
das
mov
push
pop
mov
das
rcrb
xchg
inc
dec
pop
xor
cs
adc
xchg
ret
clc
jae
inc
dec
pop
ja
pop
in
xor
push
or
or
adc
aaa
popa
sbb
inc
jmp
gs
in
aam
cmp
aas
popf
movsl
xor
loope
push
fsubrl
push
or
or
or
adc
mov
fnsave
test
xchg
xor
pusha
inc
mov
mov
das
movsb
and
push
pop
mov
pusha
repz
xor
ja
sbb
iret
jmp
adc
and
mov
xor
cmp
mov
push
insl
inc
push
jp
cmp
mov
leave
aaa
pop
mov
mov
push
sbb
sbb
push
in
mov
stos
inc
cs
xchg
scas
lret
adc
test
adc
push
inc
jne
adc
js
jo
jmp
sub
jmp
sub
mov
mov
jnp
mov
mov
bnd
insl
jnp
inc
sub
pushf
dec
js
test
icebp
adc
push
pop
dec
xor
sub
mov
aaa
movl
adc
adc
xchg
inc
sbb
dec
adc
fdivrl
jo
adc
xchg
and
into
add
inc
mov
xor
or
call
imul
xchg
and
dec
adc
or
leave
add
or
jo
dec
xchg
xchg
and
jmp
xchg
cwtl
call
loope
inc
add
sbb
push
shlb
mov
push
inc
int
add
push
pop
sbb
jmp
add
push
xchg
push
loope
and
mov
cmp
xlat
sbb
xchg
sub
mov
jo
adc
adc
dec
mov
test
inc
lret
push
test
and
rorl
mov
roll
push
fwait
movsb
pop
test
test
stos
push
xchg
push
lret
push
pop
sub
sbb
sbb
mov
and
xor
add
adc
push
fsub
xchg
test
push
mov
inc
jo
push
out
ja
mov
leave
adc
pop
test
push
fcomps
dec
sub
push
movsb
adc
jmp
add
xchg
and
add
insl
addr16
sub
pop
push
inc
insl
pop
lock
push
sbbl
sub
inc
sbb
push
push
sbb
and
dec
sbb
dec
repz
adc
lock
iret
and
sbb
cs
out
enter
sbb
test
xchg
loope
lods
push
push
cmpsl
cmpsb
dec
or
mov
adc
outsb
test
add
mov
push
outsl
mov
or
push
mov
push
inc
sbb
sbb
push
test
test
iret
push
pushf
or
subl
and
mov
or
and
nop
mov
pop
or
pop
adc
int3
push
test
jo
popa
lock
push
push
xchg
test
cwtl
adc
test
push
sbb
sbb
test
push
inc
outsb
push
push
subb
jb
gs
sbb
test
inc
pop
adc
inc
test
and
adc
push
pop
pop
and
and
jo
xchg
push
pop
xchg
sub
pop
ficoms
and
inc
faddp
and
std
jo
mov
cmp
or
pop
xor
sti
mov
mov
leave
adc
aad
cmp
jno
imul
add
cmp
and
push
mov
mov
xchg
in
lock
cld
sbb
stc
dec
loope
and
xor
filds
jno
mov
push
push
mov
mov
mov
xchg
or
dec
inc
mov
leave
adc
xchg
fst
mov
bts
mov
or
inc
pop
fsqrt
push
test
xchg
mov
pop
xor
rcrl
out
loope
xchg
or
mov
inc
mov
mov
and
and
ret
clc
xchg
mov
inc
and
imul
stos
dec
xchg
and
and
shrb
sbb
xchg
cmp
scas
mov
inc
cmp
or
xor
mov
adc
xchg
and
inc
inc
mov
adc
loopne
and
xchg
or
add
and
push
adc
jne
test
loop
aas
sarb
pusha
pusha
pop
xor
pop
xchg
or
xor
xor
loope
dec
push
sbb
inc
xchg
pop
scas
enter
xchg
sbb
popa
mov
sub
cs
out
dec
jmp
sbb
fs
sub
jo
xchg
dec
fbstp
dec
push
xor
add
mov
pop
shlb
add
fs
sbb
pop
aas
test
push
dec
sar
pusha
xchg
mov
popa
dec
lea
dec
add
xchg
or
shlb
or
adc
aas
lods
pop
lret
pusha
dec
enter
adc
bound
add
hlt
mov
testl
mov
and
push
call
jecxz
aas
xor
aas
rcrl
mov
dec
movsb
push
xchg
or
jge
adc
das
aas
cs
mov
xchg
inc
dec
and
sbb
stos
aas
dec
jo
jmp
pusha
mov
dec
xchg
cmp
jo
addb
mov
and
sbb
es
fildl
leave
adc
insl
gs
push
xor
add
jle
xchg
mov
add
aas
into
mov
push
cld
fstps
sub
je
adc
sub
or
cmpsb
cwtl
loop
aas
mov
loope
stc
cmp
insb
test
xchg
aas
jp
or
leave
aas
dec
data16
mov
sbb
pop
sub
pop
ret
or
jo
sbbb
xor
enter
or
jecxz
xchg
or
cwtl
aas
test
xchg
ret
cs
and
test
xchg
aas
fstps
sbb
pusha
mov
mov
add
les
push
add
and
mov
aas
aam
sbb
in
pop
js
ljmp
cmp
addb
outsb
popa
sbb
inc
movsb
and
popa
push
mov
ds
out
addr16
aas
clc
in
xor
dec
inc
or
mov
jg
adc
mov
sub
mov
aas
jg
mov
aas
sbbb
inc
mov
sbb
movsl
loopne
and
test
pop
pop
adc
ret
and
dec
pushf
inc
shll
pop
xor
xchg
mov
mov
or
jo
and
idivl
sbb
pop
not
leave
adc
xchg
aas
in
adc
or
aas
mov
and
dec
xchg
cmc
jp
mov
into
and
or
in
aas
cmc
das
loopne
in
jo
imul
cwtl
pushf
cmp
pop
adc
dec
rcl
inc
aas
movsb
dec
xchg
mov
add
cmp
adc
pop
xor
aas
sbb
jmp
adc
addr16
add
xor
cltd
add
and
or
outsb
aas
lret
mov
aas
dec
xchg
sub
xor
adc
pop
aas
cld
ljmp
loope
cmp
pop
sub
nop
jae
xchg
and
fld1
xor
and
inc
mov
pop
aas
xorl
xlat
and
lds
leave
adc
daa
popf
and
ss
je
aas
pusha
sbb
or
dec
xchg
pop
or
pusha
movsb
aas
cld
cmp
lods
xchg
aas
jne
pop
ret
add
push
movsl
call
mov
cmp
inc
aas
das
sbb
cmpsb
dec
xchg
inc
or
shlb
sbb
jo
adc
push
aas
dec
add
inc
xor
call
dec
mov
sub
xchg
or
loopne
addr16
cmp
fistps
pusha
xor
pop
and
int
inc
aas
pop
mov
aas
mov
pop
aas
sbb
pusha
push
mov
aas
gs
clc
dec
xchg
jbe
test
mov
or
push
sbb
mov
adc
mov
pusha
ret
jo
test
mov
add
dec
dec
pop
xor
mov
or
rolb
xchg
or
xchg
loope
sbb
lea
cs
cs
jns
jbe
mov
xor
cmp
or
xchg
sbb
xor
dec
cmp
leave
adc
outsb
cmp
and
test
xor
sbb
test
xor
pop
pop
xor
inc
cmp
sub
mov
roll
xchg
xchg
and
push
adc
je
cmp
push
add
or
xlat
cmp
loop
test
inc
xchg
cmp
leave
adc
push
hlt
andb
shlb
loop
rclb
push
and
xor
or
add
inc
testb
addr16
adc
pop
or
iret
lret
fcomps
loop
or
enter
jp
xchg
xchg
dec
in
mov
add
mov
dec
jp
or
push
jns
mov
push
fimuls
jp
and
mov
jbe
fcmovnu
fdivrs
and
adc
mov
or
shl
out
dec
xor
or
pop
jge
push
or
mov
mov
mov
xchg
or
adc
cmp
lcall
call
sbb
inc
mov
and
mov
inc
int
or
ret
mov
mov
add
ljmp
inc
push
xor
push
and
cs
fisttpll
inc
push
or
cmpb
ret
sbb
sbb
dec
xchg
jbe
add
jge
and
mov
adc
stos
sub
imul
loopne
mov
inc
or
or
xor
divb
and
add
add
icebp
aaa
or
xor
push
sbb
in
xchg
and
js
rorl
rorb
fbld
icebp
lods
add
in
and
inc
inc
cltd
mov
xchg
or
add
sbb
or
lahf
add
ljmp
testb
cmp
ret
add
adc
add
data16
fs
adc
sbbl
cs
mov
jb
inc
cld
and
dec
mov
mov
nop
pusha
decl
and
out
mov
push
ss
adc
mov
dec
xchg
fmull
cs
or
fwait
mov
or
and
or
aam
inc
xor
inc
mov
insb
test
xor
cwtl
jp
xor
cmp
push
xchg
and
or
lods
and
call
sub
or
outsb
call
mov
or
leave
call
lret
dec
push
push
and
adc
dec
andb
ret
or
in
loope
cs
sahf
xchg
xchg
or
inc
sbb
dec
xchg
nop
inc
pop
add
test
add
cmp
sbb
out
add
or
sarl
mov
leave
adc
lret
jle
rolb
jo
pop
ljmp
pop
xchg
or
mov
and
mov
cwtl
loopne
or
fsubrp
and
and
cmp
xorb
and
das
sbb
xor
sub
loopne
or
insb
dec
lock
gs
xor
or
mov
mov
pop
xor
inc
and
dec
out
xchg
and
sub
push
in
xchg
and
sub
or
jmp
call
xor
loopne
popf
and
test
jno
adc
xchg
or
cs
jne
or
in
xchg
in
pop
xor
unpcklps
or
fucom
mov
push
fldenv
lds
add
adc
jecxz
or
cmpb
mov
mov
and
add
or
or
push
or
insb
sbb
les
or
xchg
or
in
inc
jno
or
leave
adc
leave
adc
jo
push
pop
jo
inc
je
loopne
and
or
inc
or
orb
mov
xchg
imul
or
jns
jmp
mov
dec
xchg
mov
lcall
dec
lds
add
pushf
into
pusha
add
sbb
inc
mov
or
adc
add
jo
or
mov
leave
adc
xchg
or
adc
test
and
sbb
orb
or
pusha
aad
lcall
xchg
imul
push
or
push
jo
jno
or
xchg
and
test
or
push
jmp
std
xchg
xchg
or
pusha
lods
nop
mov
movsb
inc
call
dec
xchg
orb
test
mov
pop
pop
or
shlb
xchg
or
mov
or
xchg
and
jecxz
jo
inc
xor
or
ret
and
cmp
sbb
mov
mov
aam
sbb
std
xchg
or
shll
pop
push
xchg
or
jne
push
sbb
pop
leave
jo
or
or
or
jmp
outsl
cmp
inc
rol
and
and
jnp
or
sbb
mov
je
inc
cmp
add
arpl
mov
push
add
push
arpl
lock
add
xor
cmp
mov
nop
outsb
or
mov
das
test
out
fnstcw
or
mov
repz
pop
and
xor
fldl
push
xchg
or
adc
dec
arpl
sub
outsb
add
test
sub
dec
xchg
add
leave
adc
sbbl
sbb
dec
push
mov
lock
cmp
arpl
fiadds
ljmp
push
loopne
dec
arpl
sahf
push
sbb
add
lret
test
xchg
arpl
aaa
ret
xor
pusha
mov
sbb
sbb
popa
mov
fisubs
mov
xor
push
and
orb
xor
xor
das
add
sub
arpl
insb
adc
leave
adc
rolb
arpl
arpl
sti
les
or
inc
or
or
and
in
push
es
fs
and
leave
adc
push
int3
mov
push
push
icebp
xor
leave
adc
mov
arpl
roll
arpl
adc
sbb
push
arpl
loope
leave
adc
lock
mov
out
adc
outsb
test
arpl
leave
arpl
cmc
sub
ret
xor
and
jbe
arpl
jl
and
test
push
push
push
xor
inc
arpl
sub
and
push
or
jo
arpl
and
adc
aam
xchg
arpl
sub
ret
dec
js
fadds
and
enter
mov
dec
dec
and
aas
push
mov
call
dec
add
push
jmp
js
test
or
jmp
sub
cmpb
inc
xchg
or
pusha
arpl
inc
and
arpl
dec
gs
arpl
push
arpl
ss
add
mov
push
xor
ret
stos
or
mov
ja
xchg
arpl
push
xor
cmp
xor
fidivl
jmp
loopne
or
mov
data16
lock
sti
inc
sbb
fldcw
add
push
arpl
daa
leave
adc
push
arpl
in
mov
stos
aas
mov
cmp
jmp
adc
jo
and
out
mov
fs
sbb
arpl
inc
pop
or
sub
ret
hlt
arpl
xor
fiaddl
jo
xchg
dec
pop
pop
push
test
cmpsb
xor
ds
repz
sbb
fldenv
sub
cmp
call
jnp
testl
test
pop
jns
repz
xchg
mov
mov
leave
repz
out
or
push
and
aaa
jns
iret
jnp
and
push
outsl
mov
repz
push
push
loop
popa
and
ja
dec
mov
push
mov
imul
mov
arpl
sub
imul
imul
loope
imul
ret
sub
stos
xor
sbb
xchg
or
pop
test
jo
popf
lods
xchg
movsl
nop
stos
imul
push
cwtl
js
and
dec
imul
xchg
and
cmp
xchg
or
push
leave
imul
imul
inc
cmp
movsb
ljmp
mov
ljmp
ljmp
mov
sbb
push
movsb
dec
mov
mov
ljmp
clc
leave
adc
orl
ret
call
fidivs
mov
pop
xor
jbe
insb
orb
sahf
arpl
push
mov
xor
shrl
pop
xchg
or
and
lcall
out
xchg
pop
sbb
dec
sbb
leave
call
sbb
and
pop
dec
test
sbb
or
adc
and
jmp
jmp
jp
pusha
pusha
dec
sbb
pushl
es
xchg
or
xor
pop
dec
adc
inc
iret
js
xor
ljmp
stos
push
and
flds
push
incl
movsl
sub
ret
pop
leave
adc
inc
sub
ljmp
jmp
pop
test
loopne
and
cmp
sub
call
dec
adc
mov
leave
lcall
out
and
adc
leave
adc
adc
adc
adc
add
adc
adc
stos
xor
xchg
es
dec
faddl
xor
pop
data16
xchg
and
mov
pop
xchg
and
and
mov
xchg
or
sbb
push
movsb
lahf
gs
mov
dec
or
mov
sbb
xor
sbb
sbb
std
out
and
adc
xchg
mov
test
dec
xchg
or
and
and
incl
inc
add
out
lds
ret
stos
inc
adc
mov
adc
sub
xchg
and
test
lahf
xchg
push
xchg
or
mov
adc
xor
or
inc
xor
or
add
mov
inc
push
pop
or
dec
das
cmp
lods
and
and
mov
add
xchg
or
in
inc
ret
push
mov
dec
lock
dec
repnz
lahf
loop
cli
inc
xor
pop
cmpsl
push
add
shrb
cmpsb
and
ret
cltd
or
insl
xchg
cwtl
mov
xchg
enter
dec
jmp
or
adc
jmp
mov
push
mov
and
loope
add
es
push
cmp
push
inc
ljmp
cmpsl
xchg
and
rorl
mov
sub
mov
xchg
mov
mov
sub
and
clc
ja
pushf
iret
add
sbb
xchg
and
adc
or
arpl
xchg
incl
scas
fiaddl
xorl
rolb
sbb
mov
fsub
cmp
push
cmp
mov
inc
inc
xor
out
xchg
or
dec
incl
ljmp
inc
and
pop
test
dec
xchg
xchg
mov
mov
rol
and
roll
orb
add
nop
out
pushf
imul
mov
lcall
lcall
adc
push
pushl
enter
xchg
and
mov
divl
hlt
cs
testl
test
sbb
testl
xchg
mull
inc
add
and
adcb
sbb
loope
das
add
outsb
add
idivl
push
shll
divl
or
or
loop
xchg
and
leave
ret
dec
test
testl
loopne
xor
adc
idivl
notl
mov
xor
inc
xor
jo
adc
imull
loopne
call
cmp
fsubs
push
movsb
mov
or
jno
and
test
imulb
push
ret
push
out
cmp
in
pop
dec
cmpb
push
imul
notl
adc
negl
sbb
inc
jo
aaa
and
ret
nop
lods
testl
nop
popa
and
inc
adc
pop
add
dec
fwait
or
es
test
xchg
testl
xor
lock
je
inc
imull
mov
divl
ds
orb
xchg
dec
loope
and
testl
call
dec
xchg
push
dec
or
mov
or
pop
notl
inc
notl
sbb
sbb
negl
or
cmpsb
and
add
mov
inc
adc
xchg
and
inc
xor
jo
lods
cmp
mov
cmp
adcb
sbb
outsb
push
pop
xor
inc
xor
jo
test
adc
adc
notl
fnstcw
stos
ss
sbb
ja
mov
lds
adc
pop
xchg
mov
add
jo
leave
adc
clc
or
mov
shrl
push
xchg
fs
add
test
and
dec
add
push
sbb
or
ret
inc
mov
jo
jb
sub
mov
sub
ret
iret
enter
jo
or
add
loop
and
push
in
xchg
dec
add
mov
lods
iret
xor
adc
sbb
iret
inc
xchg
cmp
scas
cmp
xorl
and
or
push
loope
add
scas
or
loope
mov
xchg
jbe
movsl
hlt
xchg
add
cltd
mov
push
iret
mov
push
push
add
jo
cmp
sbb
pop
xor
dec
or
in
leave
mov
loope
cmp
dec
test
std
jb
orl
loope
adcb
or
adc
loope
orb
mov
or
rcrb
add
rorl
test
xor
test
xor
xchg
and
cmpsb
sub
push
enter
loope
movsl
imul
inc
imul
movsl
jne
and
xor
stos
nop
loope
ficoms
mov
or
enter
xor
adc
xor
inc
xchg
loope
and
scas
xchg
scas
stos
loope
mov
add
loope
fwait
sub
loopne
push
adc
test
mov
mov
loope
or
dec
xchg
push
xor
loope
inc
mov
loope
xor
or
and
enter
cmp
inc
xor
ret
and
loopne
shrb
sbb
mov
jo
loope
cmp
xchg
adc
and
ja
enter
loope
inc
sbb
add
inc
loope
jb
sub
or
sub
ret
adc
loopne
inc
xchg
push
or
inc
data16
dec
outsb
inc
push
sub
mov
pop
lcall
jmp
int3
fldl
inc
loope
xchg
push
clc
xor
add
imul
loopne
add
sbb
adc
inc
xchg
jmp
js
lock
pusha
adc
inc
xchg
in
xor
jo
adc
adc
ss
dec
cmp
test
push
mov
je
push
dec
and
sbb
enter
ret
pop
rcrb
cmp
out
sub
call
xor
js
xor
adc
inc
adc
inc
mov
jne
enter
enter
fwait
inc
inc
icebp
jo
flds
pop
lcall
daa
leave
inc
sub
out
decl
jmp
inc
xor
daa
les
daa
aad
mov
or
inc
push
js
cmp
and
sbb
dec
xchg
xchg
jo
mov
inc
or
call
loopne
pop
test
and
es
out
pop
iret
je
or
filds
lea
xlat
cmc
mov
insb
sub
sbbb
sbb
loopne
and
mov
sbb
aam
or
or
pop
add
inc
shlb
enter
inc
xchg
add
fnstsw
xchg
std
dec
inc
pop
jl
pop
testb
rclb
inc
lock
lds
xlat
and
arpl
inc
add
inc
shlb
mov
cmp
push
adc
push
pop
clc
and
mov
xor
adc
inc
mov
enter
mov
mov
stos
lods
or
inc
xchg
repnz
and
leave
nop
and
xchg
add
sbb
aad
into
push
inc
shll
loop
or
adc
adc
mov
add
inc
addb
adc
clc
aaa
adc
call
lock
xchg
int3
mov
nop
and
ja
adc
inc
pop
push
sbb
cli
inc
sub
jmp
insb
ror
cmpsb
mov
cmp
fs
add
inc
sbb
lock
lods
es
test
aaa
fadd
and
xor
mov
ds
int
call
fidivl
xchg
int
repnz
sbb
test
aam
inc
stc
imul
fiaddl
loopne
and
adc
xchg
pop
jae
mov
push
and
lret
add
inc
adc
mov
lock
cmp
in
lock
or
iret
adc
inc
enter
inc
mov
out
test
or
jo
out
stos
or
pop
test
in
sub
sub
adc
mov
stos
daa
xor
or
push
out
nop
and
sbb
mov
inc
or
xchg
mov
sbb
or
out
xor
sub
sahf
dec
lods
loopne
mov
popa
call
insb
mov
out
dec
inc
xor
push
dec
mov
mov
mov
add
out
add
out
or
sub
push
mov
out
adc
adc
cmp
xchg
js
or
fs
inc
and
and
cmpl
ja
out
mov
mov
neg
mov
cmc
push
sbbl
dec
cs
in
mov
daa
jne
aaa
pop
pop
fmull
jb
fmul
mov
pop
mov
outsb
jb
aaa
pop
scas
call
dec
sbb
xor
aam
add
jb
xor
into
push
sbb
dec
dec
lret
call
or
imul
sarb
sbb
fsubrs
js
inc
mov
jo
bound
shll
inc
insl
pop
inc
lea
or
popa
nop
and
in
insl
push
mov
adc
sub
xchg
push
out
pusha
clts
sbb
lahf
mov
scas
inc
xchg
push
add
or
enter
call
je
xor
leave
add
insl
mov
add
sbb
sub
or
jo
pcmpgtw
inc
insl
fistl
or
cmpb
enter
or
fsubl
insl
jo
adc
pop
inc
mov
fsts
adc
and
rclb
push
xor
nop
imul
inc
insl
orl
clc
insl
xchg
ret
and
inc
addb
mov
and
and
cmp
mulb
insl
aaa
cmp
cwtl
sbb
std
or
or
outsb
sbb
mov
xor
push
add
xor
adc
add
dec
push
pop
inc
mov
stos
enter
cwtl
cmp
cmp
fsubrl
inc
adc
dec
xorb
mov
and
adc
lea
cmp
enter
inc
pop
adc
or
mul
lods
push
enter
dec
test
rol
mov
fistl
fistpl
ret
hlt
adc
mov
fildl
fldt
inc
push
das
rorb
or
ret
or
ret
dec
fcmovne
call
push
enter
pusha
xor
inc
cmp
jno
fcmovnu
add
inc
fldt
fildl
test
and
fildl
mov
fsubrs
or
mov
shll
or
sbb
adc
and
jo
fneni(8087
add
adc
adc
push
test
sbb
mov
fistl
xchg
adc
adc
inc
pop
and
adc
stos
inc
fistl
fisttpl
or
ret
pop
cmp
mov
mov
sbbl
fldt
adc
add
push
loop
fdivrs
enter
ss
popf
push
shlb
call
jl
xor
pushf
aam
xchg
rcrb
and
sbbl
shlb
bound
fcomps
fs
leave
cwtl
push
or
push
out
xor
sbb
sbb
std
mov
loopne
push
adc
push
xor
adc
ficoml
push
out
or
out
add
inc
pop
xor
enter
call
imul
adc
push
and
popf
jo
sbb
outsl
out
or
or
inc
sbb
out
insb
stc
pusha
add
or
sbb
cltd
or
out
or
enter
adc
add
sub
int
and
dec
daa
or
pusha
pop
mov
pop
xchg
push
sbbb
shll
cmp
jb
add
push
fisttps
pop
add
xchg
add
inc
test
enter
ret
xor
inc
test
addb
out
ja
xor
xor
push
or
mov
out
cmp
js
fsubs
out
push
je
and
inc
bound
push
enter
ja
or
adc
jns
js
add
ret
and
xor
dec
dec
mov
jmp
inc
jbe
adc
or
mov
mov
daa
inc
hlt
call
enter
add
test
sbb
mov
aam
pop
inc
jl
leave
mov
jo
adc
orb
xchg
push
or
add
jp
sub
rdmsr
add
test
inc
push
faddl
fwait
xchg
xchg
mov
fucomip
or
addl
rorb
outsb
add
aam
mov
or
inc
jecxz
sbb
and
in
divb
inc
fstl
pop
fsts
mulb
pop
mov
int3
popa
mov
xor
fs
in
cmc
and
sub
fsts
mov
fs
call
nop
mov
notb
jb
jl
test
sahf
sub
ja
or
xchg
xchg
adcb
in
in
and
inc
xchg
and
mov
sbb
add
mov
or
mov
sbb
pop
or
sbb
add
cmpb
mov
dec
pop
incl
xor
pop
mov
mov
or
cmp
inc
xchg
mov
popa
dec
add
mov
push
inc
inc
or
mov
pop
xor
out
dec
xchg
jo
orl
and
cmpsb
inc
xchg
dec
inc
pop
or
sub
aas
enter
out
je
xchg
enter
out
fsubrs
dec
inc
icebp
push
out
in
in
inc
orl
fdivrs
bound
inc
xchg
out
and
pop
ret
je
out
pop
lcall
push
ret
and
cmp
sbb
sbb
jg
push
sbb
loope
loop
jo
loop
xlat
xchg
and
dec
dec
mov
and
mov
and
sbb
shrb
jns
ret
aam
mov
inc
imul
sbb
dec
adc
adc
cmp
and
dec
xchg
and
pop
inc
imul
mov
lods
fiadds
add
sbb
dec
loop
loope
sub
pop
orl
enter
mov
jo
imul
popf
jl
arpl
imul
mov
adcb
mov
dec
jle
inc
push
or
xchg
xor
pusha
pop
or
andl
imul
push
mov
mov
cmpsb
sbb
push
dec
adc
or
seto
dec
mov
es
pop
adc
adc
and
insb
add
imul
or
push
pop
lcall
imul
or
sbb
dec
imul
js
sbb
enter
or
mov
pusha
mov
inc
xchg
inc
or
sbb
push
and
outsl
push
out
or
mov
adc
and
dec
or
test
movb
ret
fs
std
imul
imul
push
and
adc
nop
and
push
imul
imul
imul
rcll
or
dec
add
sbb
out
imul
imul
imul
and
lahf
test
adc
imul
add
imul
xchg
adc
xor
scas
sbb
aaa
push
subl
mov
inc
shl
icebp
lods
rcll
pushf
sbb
mov
xor
test
mov
cltd
add
xor
push
aaa
dec
adc
inc
push
mov
push
push
sarl
adc
sub
inc
adc
or
mov
ret
insl
push
mov
push
rclb
add
sbb
mov
data16
sub
mov
push
xor
inc
mov
dec
inc
cmp
push
and
pusha
or
add
xor
xor
add
pop
call
inc
xlat
test
cwtl
cwtl
sub
mov
adcb
sub
mov
mov
mov
pop
scas
push
call
stos
pusha
mov
nop
mov
decb
and
daa
or
pop
adc
test
mov
loopne
mov
sbbl
test
xor
dec
pushf
movsb
sbb
mov
sub
rcll
dec
mov
xchg
inc
xchg
es
pusha
or
or
sub
and
adc
push
arpl
or
cwtl
dec
inc
lret
cwtl
pusha
dec
sub
dec
or
xchg
je
loopne
add
adc
lcall
mov
adc
mov
xor
arpl
sbb
add
and
sbb
adc
dec
xchg
xchg
or
enter
pusha
dec
jo
push
and
jns
clc
jmp
adc
orb
jp
xor
dec
mov
xchg
insb
add
xchg
je
sub
xchg
in
inc
mov
add
pop
mov
jo
sbb
push
jnp
add
dec
loope
push
inc
dec
xor
dec
xor
int3
push
xchg
outsb
int
push
xor
sbbl
mov
pushf
push
test
mov
xchg
lahf
xor
addl
pusha
dec
es
lcall
or
sbb
andb
cs
mov
repnz
sub
out
cwtl
mov
rcrb
adc
repnz
add
pop
fldcw
jg
inc
xor
adc
adc
mov
adc
xchg
ret
and
ret
ret
and
lods
add
cmpsb
dec
pop
cmp
pusha
or
dec
ljmp
rorl
dec
sbb
add
add
cmp
adc
dec
cmpsb
jp
ret
or
jo
in
cmp
add
adc
adc
jp
mov
ret
sti
mov
je
aam
test
xor
mov
mov
out
aam
js
test
or
daa
clc
fisubs
adc
sbb
das
loopne
outsb
mov
ret
aaa
xchg
sub
adc
and
movsb
lret
adcb
xor
or
ret
fdivs
bound
inc
mov
xchg
add
scas
inc
jo
or
vorps
ret
lahf
xchg
mov
andb
push
ret
adc
test
ret
sbb
scas
add
and
pop
adc
sub
in
inc
orl
adc
or
xor
ret
imul
ret
dec
mov
ret
sbbb
or
push
or
and
ret
xlat
and
andb
inc
sub
mov
or
mov
xchg
lds
push
rorl
ret
push
ret
add
mov
or
ret
jne
loope
cmp
adcl
or
pop
add
ret
add
mov
shrl
inc
ret
or
sbb
or
mov
addr16
ret
andb
or
jnp
fiadds
and
out
push
outsb
sbb
cmp
lcall
mov
dec
ret
add
lds
fnstenv
out
push
jns
test
dec
pop
std
mov
adc
sub
adc
lods
and
or
or
or
pop
adc
jecxz
out
sbb
sbb
pop
sti
call
sub
push
enter
jle
insb
lods
lcall
andb
jns
ret
xchg
xchg
xorb
push
add
xchg
xchg
adc
psrld
orb
push
push
orb
ret
mov
xchg
add
inc
mov
ret
add
rcll
aam
push
icebp
movsb
mov
insl
ret
jb
repnz
or
scas
in
jb
rclb
dec
adc
ret
adc
shrl
sub
inc
ret
sub
adc
jl
dec
add
push
or
sbb
dec
ret
inc
adc
adc
test
inc
in
add
push
jmp
sbb
pop
test
mov
mov
mov
movsl
lahf
loope
push
sbb
add
xchg
andb
jnp
outsb
lcall
cmp
or
mov
sahf
ret
cmc
ret
ret
and
loopne
hlt
out
imul
ret
sub
int
push
push
outsl
and
ja
mov
add
test
sub
xchg
pop
lea
pop
xchg
add
popa
push
dec
inc
inc
sub
testl
xchg
or
and
jnp
or
pop
jmp
imul
mov
outsb
sub
pop
clc
loope
and
mov
in
mov
sbb
push
fsubrs
add
scas
xchg
cmp
push
mov
fcomps
xchg
jb
nop
cmp
inc
lods
icebp
or
add
push
xchg
lret
arpl
sbb
clc
loopne
mov
nop
jo
mov
sbb
jecxz
roll
or
pusha
sahf
jno
les
into
fisttpl
imul
ficomps
mov
out
mov
icebp
fcoms
lea
outsb
lea
enter
xchg
in
aaa
push
sbb
subb
aad
add
ja
fsub
mov
xchg
sub
sub
shl
pusha
bound
sbb
push
cld
push
cltd
fs
repz
in
mov
mov
pop
in
add
out
inc
lock
add
cmp
jp
cmp
xchg
or
test
and
mov
mov
xchg
dec
test
and
enter
cmp
xchg
insb
push
inc
mov
mov
cld
fsubp
sub
dec
jmp
movsl
les
xchg
push
repz
pop
movsb
test
or
cmp
and
adc
push
loope
sti
lret
enter
jno
icebp
lock
das
in
or
enter
into
in
sub
outsb
icebp
mov
xchg
push
filds
cmpsb
jmp
aas
das
bound
xchg
push
pop
lock
and
push
adc
and
rcll
outsb
leave
xchg
arpl
sub
dec
or
add
mov
xor
and
add
bnd
mov
inc
mov
and
jo
push
or
mov
pop
nop
xchg
inc
mov
es
fmull
inc
jmp
xor
das
js
adc
gs
das
sbb
jmp
mov
cmp
push
out
nop
adc
lock
scas
pop
es
or
stc
mov
mov
pop
stos
jb
fwait
adc
out
cs
push
das
xchg
push
adc
pushw
aad
inc
mov
pop
jl
fsubs
lea
frstor
outsl
jae
xchg
or
das
ret
pushf
cs
xor
pop
std
mov
xor
fldl
lods
pop
jns
pop
and
call
pop
pusha
aaa
or
icebp
adc
lret
test
adc
cmpsb
mov
fcoml
sbb
sub
cmpsb
cs
xor
loope
loopne
das
fcomps
das
ljmp
sbb
jo
xchg
or
shrb
mov
out
mov
aam
push
inc
sub
pop
test
pusha
adc
aad
inc
das
sbb
mov
jb
push
inc
dec
jmp
pop
fcoms
xchg
or
das
js
popa
or
sbb
xchg
das
arpl
or
cs
and
mov
dec
pop
je
adc
ljmp
gs
jo
scas
or
popa
les
and
das
mov
das
les
push
push
pop
es
mov
xchg
test
rorl
das
adc
add
jns
xchg
or
repz
jo
adc
ja
and
xor
mov
les
or
jo
das
int3
jbe
mov
dec
das
xchg
xor
cld
inc
xor
sbb
adc
cmp
jle
push
fwait
or
jne
sbb
jo
fstpt
push
add
cmp
loope
xchg
adcb
test
sub
push
out
jbe
dec
or
loopne
add
jo
mov
xor
lods
fdivs
jmp
mov
mov
xor
fs
aam
xor
adc
xchg
or
xchg
or
add
inc
repnz
mov
pop
mov
xor
push
lock
and
jnp
xchg
add
sbb
add
jns
or
lcall
lods
adc
inc
xor
xchg
and
push
push
test
sub
inc
push
inc
or
push
adc
lcall
sub
xor
rolb
pop
or
incl
sti
outsb
cmpl
cmp
jne
arpl
push
and
andl
les
loopew
icebp
in
stc
add
mov
mov
xor
test
inc
mov
nop
inc
adc
sbb
adc
mov
loopne
inc
xor
je
mov
jmp
xchg
jne
mov
fs
inc
sub
mov
adc
pop
pusha
sbb
sub
pusha
pusha
add
or
bound
xor
mov
push
cmp
inc
sub
dec
dec
xchg
dec
or
addl
lea
in
or
es
shl
xchg
out
mov
test
add
and
in
ret
fsubrs
test
test
or
sub
inc
or
add
sbb
rolb
outsb
out
test
data16
adc
adc
dec
or
fldl
dec
or
fadds
outsb
fildll
stos
aam
sbb
inc
stos
pop
je
lcall
sbb
xor
cmc
movsl
fstl
add
inc
cld
push
cmc
sbb
jge
stos
or
or
cmc
sub
push
enter
dec
mov
std
imul
mov
push
xchg
pop
add
fmull
inc
xchg
in
jp
fdivs
mov
xchg
mov
rolb
inc
xchg
cmp
test
cmp
imul
cmp
enter
mov
dec
or
movsb
rolb
add
mov
cmpsl
in
inc
xchg
dec
add
mulps
cmp
cmpl
sub
add
sub
and
test
ret
test
in
or
fdivl
pusha
and
jg
dec
mov
aaa
push
sub
loopne
fucomip
jo
adc
pop
sbb
in
mov
sbb
adc
ds
pop
push
fmul
pop
fwait
cmp
dec
stc
sub
out
sbb
pop
jle
in
fs
push
pop
pop
fwait
insb
push
mov
enter
mov
out
and
xchg
xchg
stc
cltd
pop
xchg
setp
and
xor
xchg
adc
jmp
mov
pop
aad
call
xchg
call
add
inc
call
push
enter
inc
mov
pop
mov
inc
mov
xor
imul
loope
dec
loopne
dec
push
test
or
stos
in
pop
push
es
sbb
mov
adc
gs
js
pop
xchg
push
cltd
adc
pop
dec
or
pop
xchg
adc
cmp
or
scas
sub
ret
adcl
addb
inc
gs
cmp
fsts
lcall
push
xor
mov
sbb
mov
lret
pop
lret
inc
mov
pop
loope
adc
js
sarb
or
or
adc
add
sub
cmp
pop
mov
test
mov
sub
sbb
dec
sub
gs
inc
mov
or
mov
push
sub
hlt
jo
sub
xorb
inc
xchg
mov
loopne
test
ret
jo
ret
iret
adc
roll
sub
adc
lods
fidivs
or
and
pop
mov
fcomps
and
mov
mov
lock
dec
ret
add
je
sbb
adc
sbbl
je
jmp
test
lods
mov
or
call
push
in
pop
and
sub
or
xor
out
out
jle
mov
add
fcomp
mov
pop
jb
test
dec
inc
movsl
mov
adc
adc
jo
cltd
xor
sub
cmp
xchg
adc
faddp
add
rolb
add
test
sbb
or
loop
testb
sub
adc
or
inc
inc
sub
ret
inc
adc
loopne
pop
push
divl
sub
inc
stos
jo
es
test
in
push
les
mov
or
adc
and
adc
pop
call
adc
mov
aad
jnp
hlt
mov
jecxz
and
add
jmp
sub
loop
adc
paddb
xchg
call
add
jo
sub
xchg
test
or
lds
stos
cmp
insl
call
lds
cld
jp
shll
in
test
test
push
jnp
adc
lret
xchg
jg
xchg
push
mov
mov
xor
or
into
pop
sub
rorl
sub
pop
scas
movsb
push
cmp
orb
jne
insl
dec
xlat
lds
cmp
inc
add
push
mov
inc
aas
in
aas
std
xchg
addr16
jmp
mov
pop
push
out
inc
in
mov
fisubrs
and
enter
ljmp
repz
aas
into
fstpt
mov
inc
mov
jl
mov
pushl
jecxz
lock
cli
dec
nop
xchg
outsb
ss
shrb
into
jle
movsb
jmp
mov
adc
mov
and
mov
sub
dec
inc
push
test
sbb
push
or
fwait
lods
jmp
jle
push
seta
cmp
lret
in
daa
xchg
call
jbe
mov
rcll
adc
loopne
clc
cmp
fadds
es
adc
test
or
rolb
es
mov
or
cld
jle
sbb
push
pop
nop
jmp
sub
pusha
adc
mov
push
sub
popa
es
or
es
dec
adc
movsl
sbb
jbe
xchg
pop
mov
cwtl
push
dec
jle
dec
dec
movsl
jge
push
ds
pop
pop
sbb
mov
cmp
add
arpl
shl
mov
push
rolb
test
pop
sub
sub
fiadds
popa
dec
movsl
js
lahf
xor
push
sbb
and
or
adc
inc
push
sub
cltd
adc
sub
jg
std
pop
lock
add
mov
push
lcall
ds
nop
dec
in
inc
push
cmp
jo
push
push
and
and
sub
aas
into
das
jb
push
fidivrs
cwtl
sub
dec
movsl
loopne
js
and
xchg
cmp
int3
mov
ja
das
lock
push
call
movsb
movsb
repnz
psubusb
jle
lds
xor
mov
cmp
cmp
mov
pusha
sbbl
ja
mov
rorb
cwtl
fistpll
repnz
fidivrs
pusha
and
jg
pop
imul
push
cmp
xchg
movq
mov
xchg
ss
cs
outsb
push
push
imul
jo,pt
or
fcoms
ret
mov
adcb
cwtl
push
xchg
subl
dec
shl
push
aas
jae
adc
or
cmp
adc
inc
add
shrl
lds
dec
movsl
xor
jge
adc
inc
fstl
push
test
stos
cmpsb
push
outsb
pop
jge
dec
sbb
lahf
xchg
inc
sub
out
xchg
xchg
aas
lock
in
gs
mov
xor
mov
dec
or
adc
sbb
push
push
test
adcb
imul
pop
sbb
dec
fmul
enter
clc
outsl
jl
add
outsb
push
sbb
test
inc
outsl
pusha
sub
pushf
sbb
leave
xchg
inc
mov
in
add
into
lahf
aaa
or
xchg
cld
jl
addr16
sbb
fs
dec
xor
sbb
bound
mov
mov
arpl
jns
mov
sub
and
repnz
scas
test
jb
shl
mov
aas
in
lea
or
sbb
test
lock
push
iretw
aas
xor
cli
sbb
testb
inc
sub
nop
lret
pop
int3
jo
movsb
xor
test
push
sbb
daa
mov
dec
fsubrl
clc
outsl
pop
aas
dec
lret
popa
sbb
inc
cmp
dec
gs
xor
or
sbb
cwtl
lods
cli
push
aas
jl
in
xor
and
frstor
fstl
je
xchg
xchg
xchg
mov
inc
call
xchg
aam
sub
sub
out
stc
sti
ja
adc
sub
xchg
ds
popa
add
mov
cmpl
pop
cmp
push
imul
es
repnz
push
aas
sbb
fiadds
out
or
stos
into
xor
fisubrl
call
outsl
push
lahf
leave
scas
sub
or
sbbb
dec
outsb
jmp
lahf
jecxz
fdivr
pop
push
jns
psubusb
rorl
test
xchg
je
aad
or
cmp
shll
dec
movsl
jb
cmp
sbb
push
sub
call
pop
out
sbb
mov
out
dec
lcall
repz
sti
dec
pop
mov
lret
mov
jns
mov
mov
jo
in
and
add
push
aas
push
js
mov
dec
sbb
cmp
dec
mov
in
mov
inc
test
jmp
fwait
imul
adc
outsb
pop
repnz
fimuls
inc
sbb
enter
mov
cmp
fldl
or
pop
idivl
inc
dec
mov
mov
arpl
jbe
fimuls
loop
scas
xchg
jle,pt
sbb
nop
mov
cld
ja
inc
movsb
sub
cmpb
xor
xchg
pusha
sbb
lcall
adc
xlat
lods
push
push
xor
in
xchg
les
insb
testb
enter
cmpsb
add
sbb
popa
stc
les
rcr
into
sbb
dec
mov
push
push
xorb
stos
jl
sub
mov
adc
dec
jl
sub
lret
inc
cmp
and
not
mov
sarb
dec
push
fstps
std
push
pusha
adc
out
cmpb
mov
mov
mov
or
dec
mov
add
xor
mov
shl
pop
mov
push
test
lahf
hlt
std
pop
mov
jl
enter
lret
clc
sub
inc
js
nop
sbbl
gs
ffreep
in
sarb
dec
sub
push
mov
dec
cld
ds
push
adc
ret
dec
sbb
inc
xor
mov
aas
cli
or
adc
fisttps
dec
adc
sub
iret
dec
lret
and
lock
mov
inc
lods
jle
gs
jb
mov
out
rolb
cmp
in
cld
pop
sti
addr16
mov
scas
push
lahf
fldenv
adc
orl
sbb
add
aaa
test
in
stos
adc
inc
inc
enter
cmc
pop
ljmp
jp
inc
sub
push
not
jg
aas
dec
out
shrl
mov
aam
cmp
jno
push
dec
lahf
add
mov
xor
leave
and
dec
notl
sub
push
jns
aaa
adc
fsubs
xchg
push
mov
adc
dec
pop
fcomp
or
pop
decb
mov
inc
lahf
and
test
sbb
outsb
jo
adc
sbb
mov
ds
ja
xchg
mov
cwtl
das
loopne
mov
incb
fiadds
in
das
outsb
dec
jnp
xor
dec
fistps
je
xchg
outsb
test
enter
loop
das
dec
jo
sti
js
das
imulb
mov
sbb
ucomiss
mov
dec
mov
adcb
push
das
sbb
fidivrs
dec
fcomp
jne
mov
fisttps
push
cmp
xchg
call
jmp
scas
cmp
and
ljmp
movsl
push
lods
movsb
cs
sbb
push
std
cmp
mov
fwait
cltd
mov
xchg
pop
jns
aas
adc
dec
into
inc
pop
scas
movsb
rcrb
aas
test
aam
in
cmp
aas
or
mov
in
jge
cld
push
push
arpl
stos
fbstp
dec
out
shll
clc
jle,pn
jae
and
and
ds
dec
xor
adcb
xor
jl
pop
jo
aad
pop
iret
inc
dec
jb
cli
in
out
in
mov
movsl
mov
dec
adc
movsb
mov
xor
dec
sbb
pushf
je
int
fwait
mov
push
dec
ret
test
call
in
loop
fsubr
inc
adcb
imul
cld
jle
incb
push
imul
enter
cmp
xor
push
fiaddl
xor
andb
adc
inc
pop
test
setns
push
hlt
dec
xor
cwtl
lods
ds
mov
xchg
loopne
mov
stc
xchg
adc
cltd
or
add
pop
xor
dec
gs
adc
shlb
or
inc
or
outsb
mov
test
inc
xchg
cld
mov
dec
cmp
jge
adc
sti
sub
sub
pop
sahf
std
push
or
add
test
cs
pop
push
adc
arpl
fucom
stc
push
pop
push
or
mov
or
sub
mov
cmp
and
and
sbb
nop
xchg
mov
vmwrite
inc
push
mov
xchg
and
daa
mov
nop
mov
and
jns
sti
mov
nop
xchg
adc
mov
dec
mov
pop
push
cmp
ss
inc
pop
pop
jns
jg
dec
add
cwtl
hlt
mov
inc
sub
and
mov
jnp
add
dec
ret
cmp
add
rorb
mov
out
pop
test
add
xchg
inc
sub
jae
lret
mov
in
and
pop
sbb
add
ljmp
or
sbb
sarb
out
jl
inc
push
in
movsl
sub
xchg
out
fsubr
mov
sub
inc
mov
ja
xchg
jbe
stc
cwtl
call
fs
jbe
cmp
mov
dec
sub
ret
push
iret
popa
push
loop
and
fnstcw
mov
jno
inc
pop
je
popf
in
std
cmp
dec
mov
rcrb
ds
lock
inc
in
mov
cld
sbb
jle
sub
lods
movsb
push
cmp
divl
push
dec
mov
sub
inc
push
sub
add
or
inc
sahf
cmp
lea
movsb
ja
pop
test
sub
cli
dec
in
jns
enter
repnz
cs
loopne
shlb
or
pop
adc
loop
pop
sub
fcmovne
sub
sbbl
fs
pop
rorb
push
sub
and
imul
or
cltd
pop
or
push
or
dec
or
or
or
or
sbb
push
flds
pop
adc
sub
inc
ds
pop
mov
mov
outsb
imul
inc
xadd
mov
jae
leave
push
jg
ds
cmp
mov
xor
mov
mov
fstpt
into
nop
ds
lret
sahf
popf
adc
pop
add
dec
cwtl
ds
jg
dec
jnp
movsb
sarb
inc
jbe
adc
fistpll
jbe
icebp
jo
sub
mov
cmp
cli
ja
mov
adc
xor
lcall
add
adc
cmp
push
mov
imul
push
adcb
cmp
push
cltd
add
and
cmp
aaa
jo
lahf
filds
imul
test
pusha
outsb
pop
push
test
inc
cs
push
jmp
mov
fidivrs
fdivs
outsb
push
fldl
dec
aas
loopne
push
push
pminub
xchg
mov
pop
test
aas
mov
enter
adc
lahf
shlb
dec
pop
dec
xlat
std
decl
das
cmpb
seto
mov
clc
adc
adc
cld
mov
push
imul
sbb
dec
xlat
mov
push
inc
rolb
pop
jp
int
sbb
cmp
sbb
and
adc
inc
pushl
shrb
pop
inc
fdivl
or
cmp
popf
inc
push
jmp
sbb
movsl
lock
pusha
mov
jmp
ds
add
insb
sahf
adc
cmp
stos
out
mov
add
in
in
dec
cmp
mov
andl
loopne
push
into
idivl
mov
inc
sti
mov
in
mov
push
mov
mov
jb
inc
cmp
scas
outsb
mov
pusha
inc
xchg
aad
fstpl
fcomps
pop
data16
rorb
jle
xchg
mov
add
add
mov
sbb
push
push
nop
xchg
out
cmc
push
out
cmp
in
test
sub
scas
cmp
sbb
adc
mov
addb
test
outsb
sbb
into
pop
into
push
dec
and
pop
movsl
sbb
das
push
jg,pn
push
dec
push
sbb
js
sub
flds
clc
hlt
aas
lock
test
aaa
dec
loope
or
pushf
aas
mov
sbb
fs
xchg
sub
push
add
cmpw
pusha
jmp
push
sbb
pop
lea
dec
push
push
fbstp
push
jmp
add
loopne
and
sbb
mov
test
mov
arpl
pop
add
nop
mov
sub
notb
imul
xchg
dec
aaa
adc
dec
aas
cmp
lcall
inc
ja
dec
aas
sbb
movups
dec
mov
mov
push
sub
sarb
pop
xchg
push
fiaddl
push
push
ja
or
add
nop
jmp
mov
adc
test
in
pop
je
repnz
pop
jne
pop
pusha
stc
insb
mov
dec
ret
xor
pushw
imul
in
sub
sahf
call
aas
mov
ds
nop
dec
xor
in
pop
push
scas
repnz
xchg
mov
adc
cmp
mov
scas
jae
mov
xchg
push
scas
dec
scas
cmp
sub
scas
xchg
mov
xor
xchg
lods
push
das
jns
mov
or
enter
xchg
enter
cmp
mov
xor
and
outsb
or
std
pusha
loopne
mov
clc
bound
dec
pop
jmp
lret
aas
inc
jle
cli
add
pop
repz
pushl
scas
inc
cmp
push
clc
das
push
pop
xor
adc
lds
adc
mov
iret
mov
mov
jno
lahf
fnstsw
xchg
sbb
jmp
call
or
xchg
xor
pop
or
xor
xchg
push
and
pop
push
fistps
in
daa
daa
sub
mov
ss
mov
lods
dec
orl
aad
outsb
add
push
fidivrs
lret
push
jns
shlb
call
mov
ds
pop
jmp
xor
xor
mov
iret
mov
push
pop
rcrl
out
adc
inc
sub
adc
repnz
push
fstps
inc
and
clc
push
xor
shrl
repnz
or
mov
data16
mov
movsl
adc
enter
sbb
xchg
lret
sbb
movsl
fistpl
dec
mov
jb
mov
in
inc
cs
in
xchg
fbstp
movsb
mov
je
push
arpl
movsl
sub
sub
aas
sahf
xor
adc
in
arpl
xchg
fcomps
cmp
pop
imul
ds
dec
jnp
aas
add
sbb
cmp
aad
enter
inc
or
cld
or
jbe
push
mov
orb
push
das
sub
ss
mov
inc
mov
sub
rcrb
cmp
push
sahf
daa
xlat
dec
fst
insl
or
xchg
into
xor
jae
push
xchg
and
inc
jg
pop
mov
das
outsl
js
jb
inc
inc
sub
in
fnstenv
sbb
push
sbb
mov
sbb
xchg
jl
enter
sti
stc
data16
and
sub
repnz
cmpsb
sub
outsl
mov
jp
imulb
icebp
inc
pop
push
or
sahf
les
push
dec
call
sahf
xorb
mov
lret
out
sub
xchg
lret
inc
add
xchg
lret
out
sub
dec
nop
fisubl
fcomps
rol
aas
imul
repnz
es
js
push
jbe
fs
cmp
pop
out
dec
cmp
pop
loop
xchg
bound
es
xor
push
jns
lock
jbe
push
cmp
mov
shll
or
fnstcw
sbb
adc
iret
mov
pop
jmp
pop
out
sub
jo
mov
data16
fcmovu
fucom
aaa
push
incb
push
pop
cmp
scas
inc
mov
cmp
inc
es
xchg
fldl
push
push
mov
out
lock
jecxz
push
and
insb
sbb
xor
cmpsl
je
jnp
lock
jo
inc
lahf
daa
int
dec
ja
cmp
jb
movsl
rcrb
call
or
out
mov
push
push
pop
cli
out
inc
pop
mov
mov
daa
mov
pop
loopne
je
test
dec
lods
stos
rcrl
jl
and
inc
mov
xchg
and
pushl
es
nop
sbb
pop
addr16
test
mov
mov
inc
movsb
repnz
dec
inc
addr16
jo
mov
dec
cmp
cbtw
daa
sbb
sub
je
push
movl
xor
pop
jecxz
sbb
add
xchg
push
pop
pop
js
mov
pusha
sahf
int3
dec
daa
mov
enter
and
push
test
and
dec
nop
inc
mov
pop
out
sub
popf
out
jb
and
and
mov
dec
jo
neg
stc
mov
mov
and
sub
xor
rcrb
and
dec
negl
out
or
sahf
enter
jl
loopne
loope
and
pop
sahf
dec
cmpsl
rorl
loopne
mov
movsl
jb
shlb
jns
dec
xlat
ja
daa
bound
pop
push
xchg
call
aam
xchg
les
nop
out
mov
jl
push
ret
push
sub
pop
or
sub
insb
xlat
lea
sub
daa
xchg
sbb
das
add
xchg
sti
and
aaa
scas
sub
aam
push
imul
fidivs
xchg
popa
es
dec
ja
stc
inc
call
movsl
jae
or
sub
fnstsw
mov
mov
int
fstps
sbb
jmp
xchg
iret
data16
push
or
daa
ret
in
negl
addl
xchg
daa
js
nop
shlb
outsl
enter
jmp
arpl
mov
dec
movsl
jb
push
jmp
mov
in
popf
stc
cmp
or
mov
ret
test
xor
fnsave
pop
lock
push
into
iret
repz
mov
pop
cmp
repz
inc
and
jns
out
or
ja
rol
out
sahf
out
lcall
sahf
push
inc
sbb
cmp
sarl
in
loopne
int3
repz
repz
iret
repz
push
xor
adc
jne
jl
out
mov
sahf
out
hlt
add
dec
rep
test
cmp
idivl
xor
incb
push
loopne
cmp
repz
repz
jo
inc
cmp
jns
dec
fistpl
push
push
inc
out
ds
repz
lock
push
shl
jns
cmp
xchg
push
mov
out
sahf
insb
push
cmp
push
in
jle
iret
repz
int3
mov
iret
repz
xorb
out
repz
xor
sbb
cld
jge
iret
cmp
repz
fmulp
push
out
outsb
push
lret
iret
repz
xchg
pop
repz
repz
sub
or
jns
out
insl
in
shlb
mov
pop
dec
jns
out
ds
repz
repz
les
test
jp
bound
repz
inc
mov
sahf
out
nop
cmpb
out
sahf
out
inc
xor
or
repz
cli
jl
fcmove
mov
cmp
mov
pop
out
imul
imulb
fisubrs
push
push
lret
jns
or
jnp
push
push
scas
out
fidivrs
mov
mov
add
xor
pop
sarb
jge
mov
pop
adc
add
out
ficomps
push
sbb
data16
out
sahf
adc
pushf
stos
mov
lret
repnz
cmp
rcll
push
sub
dec
iret
repz
pop
insb
js
sahf
lods
lcall
test
jns
out
fs
inc
xor
repz
out
add
je
mov
sahf
nop
jle
bound
repz
sub
add
jae
sahf
out
fmul
mov
sahf
out
jp
push
inc
lahf
out
sahf
xor
and
add
jb
iret
repz
fcmovb
mov
repz
repz
dec
cmpsl
stc
cmp
inc
ss
sbbb
mov
jns
sarl
adc
xor
dec
sarl
pop
outsb
test
jo
int
jns
lret
cld
or
cmp
cmp
out
iret
repz
out
mov
or
out
cmp
bound
idivl
out
mov
push
jb
cmp
sarl
jno
aam
mov
lods
sahf
xchg
test
repz
bound
and
jbe
imul
add
out
sahf
divb
jns
xor
push
push
js
cmpsb
mov
out
jns
dec
data16
and
jp
sbb
adcb
or
xchg
cwtl
dec
lods
je
out
repz
test
push
movsb
mov
mov
pop
add
and
and
sub
inc
sbb
rcrb
sbb
add
sub
jae
out
push
aam
xor
push
mov
cmp
repz
xchg
cwtl
cltd
lcall
popf
sahf
lahf
iret
repz
mov
mov
iret
repz
mov
mov
repz
repz
enter
int3
cmp
repz
into
iret
rcl
repz
repz
aam
iret
repz
xlat
fcomp
fcmovu
fdivrl
repz
loopne
repz
repz
in
out
repz
out
jmp
iret
repz
out
out
lock
repz
repz
cmc
test
cmp
idiv
stc
cli
sti
cld
cltd
into
repz
incl
out
sahf
cmpsl
push
add
add
sub
inc
push
pusha
insb
jl
sahf
out
mov
iret
shrl
iret
out
jmp
adc
cmp
iret
repz
push
push
iret
repz
mov
stc
cmp
fsubr
std
adc
pop
sahf
out
sahf
xor
arpl
jns
out
nop
lahf
test
sahf
out
fsub
out
test
in
or
sbb
ss
dec
push
pop
repz
rep
jge
mov
iret
mov
out
sahf
out
sahf
pop
sub
sahf
out
mov
xor
out
repz
push
ja
outsb
insl
insl
push
or
shlb
nop
ja
push
lds
gs
sbb
or
imul
add
sbb
fnstenv
sbb
sar
lret
ss
outsb
jne
or
jae
cld
and
imul
adc
sbb
adc
push
inc
cmp
lock
imul
push
outsl
jb
inc
and
adcl
shlb
jo
push
mov
addr16
jb
mov
and
xor
push
push
imul
add
outsl
inc
mov
push
out
jne
and
jbe
add
push
popa
insb
jne
inc
push
rcr
mov
inc
xor
ficompl
push
ss
cmpsb
dec
cmc
dec
outsb
outsw
aas
or
rcl
xor
jb
adc
pop
divb
mov
call
mov
fsubrl
jae
fildl
sbb
cmp
in
xlat
outsb
test
xor
sub
sbb
jae
or
add
dec
aas
add
pop
inc
mov
dec
rorb
inc
push
mov
insl
add
fs
sbb
inc
rcrb
or
daa
dec
and
add
xor
and
mov
out
sbb
jo
and
divl
int3
push
adcb
into
neg
cmpb
adc
push
mov
mov
push
inc
mov
roll
pop
mov
pusha
and
stc
adc
loopne
add
pusha
repz
cmpsl
jo
add
and
lret
out
lret
lock
addb
rol
lcall
mov
mov
mov
mov
int
insl
push
push
dec
inc
inc
and
push
inc
push
mov
insw
je
in
add
push
push
inc
fs
lea
add
sar
inc
sti
push
push
push
add
negb
icebp
sbb
mov
repz
out
outsb
icebp
push
out
mov
sub
push
ret
addr16
out
cmc
push
cli
add
add
add
outsl
mov
or
xor
pop
add
add
cmp
and
add
clc
incl
push
add
jno
faddl
jae
push
cmp
jbe
and
int3
std
xor
decl
dec
add
or
lcall
clc
and
jmp
testb
ljmp
ret
jg,pn
dec
stc
scas
add
cld
lret
divl
or
std
addr16
mov
add
mov
inc
add
and
xor
xor
dec
xor
push
std
jo
sar
jg
call
add
add
mov
call
movsl
stos
add
add
cltd
add
sbb
mov
pop
std
imul
cmp
xchg
popl
ds
add
add
add
add
add
add
pushl
call
or
or
add
dec
add
cld
dec
clc
mov
std
push
sbb
lcall
adc
jae
pop
add
sbb
std
aam
jbe
pop
add
add
add
decl
neg
cmc
scas
cmc
stc
pop
pusha
add
add
pop
sub
add
stc
adc
cmp
roll
jo
lods
pop
lock
das
push
inc
add
pop
dec
lcall
dec
add
aad
jge
popa
std
adc
sub
std
sbb
mov
call
popf
xor
in
std
imul
jecxz
mov
std
icebp
cld
mov
enter
cmp
inc
call
cli
mov
in
addl
add
bound
loope
decl
xchg
push
add
add
add
add
arpl
add
mov
push
call
stc
jmp
clc
mov
cwtl
stc
pop
cld
jae
xchg
cli
mov
mov
add
add
daa
stc
sti
ss
movsb
cld
push
mov
ljmp
ljmp
xchg
add
add
xor
mov
or
pop
iret
push
incl
dec
push
mov
add
add
decb
cld
and
shl
mov
out
fsubrp
sub
ljmp
divl
cmc
inc
cmc
jo
cltd
sti
mov
inc
add
adc
jmp
or
or
or
push
fimuls
lahf
pmaxub
mov
push
icebp
call
push
sbb
add
push
add
sar
pop
sbb
sub
icebp
push
in
aaa
call
sub
mov
out
mov
pop
cmc
mov
fcomi
jmp
lods
push
pop
notl
pop
ret
or
pcmpeqd
dec
adc
adc
xchg
adc
adc
adc
adc
mov
adc
push
jae
dec
sete
add
aaa
sti
psubq
sti
imul
jnp
sbb
mov
in
fsubrl
faddl
jge
xor
in
push
incb
sti
and
call
cld
test
or
adc
ds
and
adc
adc
call
sbb
xchg
test
or
or
test
hlt
cli
repnz
loopne
jg
lock
loop
iret
into
shl
fcomp
loopne
repnz
mov
int
jp
add
xor
test
sbb
pop
sub
jmp
outsb
push
bound
sub
pop
or
push
push
or
ret
mov
mov
repnz
out
lahf
in
jae
je
jmp
in
ljmp
lods
fisttpll
and
out
adc
jle
add
or
pop
or
lcall
or
nopl
cmp
sbb
push
dec
and
adc
or
cmpb
iret
add
add
add
add
icebp
mov
jmp
in
out
shr
mov
adc
pop
fidivrl
test
stc
jo
or
adc
call
mov
push
xor
repz
xchg
adc
sbbb
push
mov
movl
dec
cli
push
stc
jns
loope
mov
std
cmc
clc
jbe
add
inc
stc
inc
repz
ljmp
in
jno
mov
cld
in
loope
in
in
aam
daa
pop
sbb
fimuls
jecxz
into
adc
in
push
adc
ds
adc
adc
push
daa
adc
adc
or
rolb
cld
dec
stc
sbb
xchg
clc
imul
jne
es
pop
cli
pop
stc
push
clc
sbb
xchg
out
mov
pusha
call
jmp
fbstp
loop
out
push
cld
js
lds
push
test
adc
push
lahf
pushl
call
mov
and
lcall
imul
sub
fcomip
xchg
cli
in
xor
cld
idiv
loopne
add
repz
das
testl
fsubrp
xchg
push
std
push
cld
out
insb
out
mov
frstor
in
icebp
add
add
jmp
leave
adc
adc
adc
scas
adc
lret
clc
decl
jge
cmp
adc
mov
stos
std
mov
stc
or
cli
mov
imull
sbb
out
jb
inc
repnz
stos
in
sub
jecxz
fcoml
sar
mov
pop
dec
add
movlps
push
pop
pop
loop
popa
adc
xchg
adc
inc
hlt
pop
sbb
std
or
pop
femms
or
add
mov
sti
xor
inc
cmp
mov
xlat
sti
outsl
imulb
icebp
mov
shr
sbb
cmp
ljmp
in
or
movsb
fdivp
xlat
outsb
aam
fdivrl
add
ljmp
push
pop
sbb
jg
lcall
adc
mov
mov
adc
push
adc
or
or
xchg
leave
std
mov
test
aam
decl
cmpsb
sti
mov
repz
mov
xlat
loopne
fldl
aad
ror
push
sub
in
repz
or
adc
add
lock
xor
pop
sub
inc
sbb
push
xor
or
push
rclb
and
or
int3
pop
in
add
loopne
lcall
add
aam
jle
fcomip
inc
hlt
mov
jecxz
fisubl
ljmp
sub
mov
mov
and
or
stos
pop
aad
bound
call
adc
adc
jno
inc
btr
push
adc
orb
push
pusha
add
or
or
arpl
jg
aam
push
add
stc
and
out
out
loopne
fstps
push
push
ret
decl
fisubl
and
pop
ljmp
sbb
push
adc
je
jmp
sbb
scas
stc
push
inc
adc
pop
mov
ret
cmp
push
push
or
or
add
lock
mov
xor
int
mov
insl
lds
jp
or
adc
sbb
lcall
rclb
adc
xlat
or
push
mov
and
sbb
outsl
inc
scas
inc
call
add
test
xor
mov
lds
pop
or
add
stc
cmp
cmp
test
lds
jb
cmc
call
and
add
or
or
adc
sbb
sbb
adc
cmp
xchg
or
push
sub
mov
add
add
add
or
or
or
or
jmp
or
add
decb
in
loopne
fimull
lret
pop
loope
cmc
cmpsb
add
lcall
cmovge
stos
or
psrlw
adc
iret
or
packssdw
incl
sbb
add
pushf
add
add
or
pushl
or
or
add
ret
out
push
loope,pn
fscale
leave
dec
les
fimuls
adc
hlt
sbb
sbb
sbb
aaa
pop
pop
push
bound
hlt
add
decb
pop
call
add
push
add
add
pop
add
mov
pop
scas
adc
pop
pushl
adc
and
dec
or
sub
loop
xor
fwait
jecxz
fsubl
les
pop
cmp
aad
icebp
cmp
adc
push
adc
xchg
aaa
or
adc
ds
push
add
and
outsl
cli
std
pop
lcall
push
test
pop
adc
call
or
add
in
in
jge
xchg
fsts
int3
mov
jmp
jmp
sbb
inc
pop
push
and
and
add
sub
stos
dec
add
jg
loop
jl
sub
add
paddw
std
mov
or
or
add
out
and
mov
jecxz
loopne
fsts
call
div
mov
and
sub
add
sti
jmp
in
inc
repz
aaa
fadd
std
rol
fimull
xor
add
incl
push
push
add
rorb
or
or
push
or
add
imul
out
fdivr
dec
push
leave
pop
shlb
adc
stos
cs
pop
add
loopne
lcall
in
and
leave
add
pop
pop
push
inc
push
sub
sbb
add
pop
add
testb
push
mov
lret
adc
adc
mov
hlt
add
fldenv
ret
xchg
neg
test
dec
sub
pop
jmp
xchg
ss
clc
adc
sbb
inc
loop
lock
stc
loop
pop
cmc
and
out
faddl
cmpsl
add
pushf
inc
push
jmp
mov
out
dec
or
incl
cmc
addr16
inc
sar
sub
ror
add
pop
sti
xor
scas
jmp
clc
jmp
sub
xor
or
clc
aam
in
pop
loope
push
mov
clc
cli
mov
push
add
push
add
add
push
fmull
js
cmpsl
adc
push
and
pop
sub
sub
loop
mov
mov
int3
pop
ret
push
iret
repnz
jmp
daa
mov
ds
xor
loope
push
add
loope
fistl
jmp
repz
rclb
imul
adc
adc
xor
mov
mov
cmp
ss
incl
out
sbb
and
pushf
fnstcw
mov
cmc
jmp
shlb
call
lcall
incl
cmp
sub
call
fstpl
fcoms
pop
add
and
push
pushl
adc
adc
push
clc
and
les
xchg
push
inc
mov
adc
push
shrb
leave
push
mov
dec
fiaddl
clc
and
call
adc
cmp
in
inc
xor
cmp
lds
or
mov
fucom
fdivrs
in
icebp
or
ljmp
in
xchg
and
and
sbb
adc
or
jecxz
pushl
stc
leave
les
popa
jmp
add
push
icebp
daa
loope
in
test
xor
cmp
call
call
add
loop
in
fists
xlat
stc
fimull
add
cli
cld
pop
pop
sub
cmpsb
pop
inc
and
lcall
and
adc
in
jno
gs
xor
test
inc
ret
ja
inc
pop
fiadds
arpl
or
das
ret
inc
inc
inc
inc
xor
sub
push
aas
or
adc
fnsave
fldcw
fldenv
and
sbb
mov
xor
jo
lcall
pop
or
sti
stos
call
ror
ret
aaa
mov
lods
in
std
call
and
inc
mov
xor
inc
aam
xor
pop
inc
call
cmp
fistl
lret
pop
iret
mov
fiadds
icebp
adc
mov
push
xor
clc
add
or
sub
push
idivb
xchg
mov
inc
fcomps
out
out
ret
or
into
lock
ljmp
lcall
cmp
xor
sub
lods
repnz
call
xchg
mov
roll
mov
add
adc
sbb
inc
pushl
das
xor
es
ja
int3
sti
sub
and
mov
adc
mov
jne
sub
sahf
add
stos
and
pop
ds
xor
push
xor
fldl
inc
incl
out
sbb
adc
rcr
aam
iret
push
shlb
xlat
loopne
das
add
xor
xor
cmp
xor
jmp
jne
insb
in
aad
enter
mov
mov
mov
daa
push
sub
cmp
sbb
rorl
idiv
mov
ljmp
jo
dec
xlat
mov
call
mov
pop
test
xor
aaa
lret
xor
in
call
ret
lcall
icebp
addb
cs
ds
dec
push
jmp
movsb
pop
or
shl
jmp
call
mov
sbb
add
outsl
mov
jge
fcomip
incl
jg
lods
sub
xor
bnd
xor
in
jns
ror
stos
aad
adc
xorl
sbb
jb
push
and
mov
jg
cmp
xor
push
push
add
leave
out
push
call
in
shr
into
pop
iret
incl
hlt
jmp
xor
cmp
mov
add
jmp
repnz
dec
push
mov
aam
out
sarb
sbb
sbb
pushl
sarl
and
fsubrs
ja
xlat
push
mov
stc
xchg
cmc
shl
mov
xlat
cwtl
aam
rol
dec
movsb
iret
adc
aaa
clc
push
adc
cmp
xlat
push
sti
or
cmc
es
int
mov
call
sub
pop
pop
sub
stos
aas
scas
cmp
ficompl
ret
add
std
stc
cmp
repnz
addr16
fiadds
loopne
fsubl
loope
stc
push
psllw
fsubrl
pop
aaa
fildll
leave
sbb
dec
push
shl
sbb
scas
outsl
mov
shl
add
adc
aaa
std
inc
test
mov
push
ljmp
and
or
cld
loop
ljmp
cmp
fildl
neg
lcall
ja
std
push
out
dec
aaa
cld
pushl
jbe
push
cmp
adc
pop
out
fstps
int3
mov
mov
push
imul
in
movsl
cmp
inc
je
mov
js
sbb
jb
test
imul
ljmp
into
xchg
rcll
out
add
sbb
sub
fidivrl
jmp
mov
icebp
adc
outsb
loopne
iret
xor
mov
ljmp
jo
add
xor
inc
or
dec
pusha
inc
xchg
jmp
pop
adc
add
out
lcall
push
xchg
fwait
xchg
push
leave
test
fcmovne
insb
shlb
in
jp
test
cmp
inc
push
push
pop
icebp
pushl
mov
iret
pop
mov
mov
imul
addl
ljmp
xor
add
inc
mov
popf
sub
mov
mov
cmpsl
jmp
call
arpl
cmp
push
shll
adc
inc
aad
out
add
aaa
sub
xor
aaa
out
incl
ss
xor
or
int3
adc
in
mov
mov
mov
cmp
das
call
cld
incl
inc
fdivs
or
mov
daa
out
sub
repz
xlat
popf
test
call
sarl
pop
mul
push
xchg
push
idiv
jg
mov
test
hlt
sub
sti
std
or
or
lret
xchg
mov
mov
call
xor
test
ss
push
mov
push
notb
fmul
cmpsb
decl
loope
iret
add
xchg
fdivs
frstor
sub
daa
cmp
cmp
aas
dec
das
fcompl
repz
into
or
mov
test
mov
jnp
lds
cmp
dec
jns
repz
mov
cs
in
aam
int3
push
repnz
or
dec
into
aad
fnstsw
and
es
inc
dec
sahf
inc
es
pop
and
int3
call
test
mov
cmpsl
les
ja
pusha
sbb
mov
pop
sbb
mov
incl
es
fstl
jo
sbb
fs
data16
js
and
decl
sahf
inc
addr16
jo
xor
adc
aad
dec
add
sarl
dec
fdivrl
sti
sti
mov
jb
mov
dec
out
jmp
mov
repnz
jge
pop
lret
pop
shrl
mov
int3
jne
xchg
repz
or
stc
xor
cmp
inc
push
inc
mov
repnz
sbb
or
aad
into
in
mov
leave
mov
pop
lcall
dec
sub
fldl
dec
sbb
pushl
jg
rcll
mov
loop
mov
rcll
ljmp
iret
lgs
out
xor
popa
aaa
test
add
rcrb
inc
out
fidivrs
test
cs
push
sti
push
jp
les
and
ljmp
out
cmp
cmp
dec
mov
js
aas
cld
loopne
sbb
popa
sub
lock
incl
cltd
dec
push
ds
xor
mov
sub
loope
int
iret
outsb
leave
xchg
ret
test
fisubrs
mov
notb
outsb
inc
cmpsb
push
inc
pop
int3
push
add
fwait
sub
inc
or
icebp
inc
stos
sarb
mov
ss
mov
dec
ds
dec
mov
iret
dec
jl
lret
sbb
pop
lock
loop
shlb
shufps
lcall
mov
sti
fistps
dec
inc
fmull
stos
pop
aam
les
pop
scas
clc
jmp
mov
stos
leave
ret
pop
loope
push
rcl
xor
inc
ljmp
push
dec
xchg
inc
mov
scas
sub
adc
add
fldcw
scas
rcrb
test
scas
clc
lcall
in
ret
popa
sti
mov
pop
dec
sbb
sarb
call
dec
lahf
ds
insl
add
jecxz
lret
int
mov
loop
lock
mov
decl
dec
pop
bound
mov
cmp
pushf
sub
sbb
and
arpl
add
popf
aad
rclb
mov
hlt
xchg
or
and
arpl
ret
inc
cli
dec
sbb
ljmp
sub
imul
jae
pop
pop
mov
mov
lcall
inc
push
clc
jmp
ss
fidivs
mov
jp
rcrb
adc
incl
xchg
sub
aam
pop
fdivrl
rorb
mov
es
ljmp
inc
ljmp
or
out
in
fimull
cmpb
leave
icebp
mov
call
in
add
cmc
sub
cmp
mov
xor
dec
movsb
ss
repnz
sahf
jmp
xchg
ficompl
mov
add
cli
fistl
lret
and
xor
roll
inc
es
and
adc
call
cmc
clc
fsqrt
movsb
mov
mov
mov
lret
stc
leave
adc
es
sbb
ss
add
xchg
cwtl
or
adc
or
cmp
jg
mov
je
inc
ficomps
xchg
aam
iret
nop
clc
adc
je
or
or
sbb
inc
and
pop
xchg
cmc
sbb
cmp
test
iret
repz
hlt
fwait
or
mov
xor
mov
ljmp
mov
rorl
cmp
mov
jmp
jecxz
pop
loope
fnstsw
fcmovbe
aad
into
popf
into
push
jmp
add
mov
mov
in
inc
es
jp
nop
and
fcmovne
mov
pop
mov
ret
pop
std
call
rcl
out
aam
addr16
add
xor
sbb
enter
call
aam
or
clc
lock
out
je
mov
dec
adc
and
pop
popa
jmp
sub
cmp
sahf
adc
das
adc
outsl
call
loopne
xor
sbb
xchg
fcmovnu
lret
inc
cmp
lock
call
in
or
bound
mov
inc
and
sbb
pop
inc
push
mov
lret
call
add
clc
shr
fistl
mov
mov
fadds
stc
mov
incl
jne
sbb
mov
push
sbb
or
loopne
lcall
in
out
pop
cli
stos
cld
les
clc
sbb
sbb
inc
or
or
or
icebp
lcall
push
inc
push
mov
xchg
hlt
repnz
sahf
ficomps
inc
iret
loopne
lcall
aam
push
add
push
out
and
cs
add
das
jecxz
ljmp
push
mov
mov
mov
sbb
sbb
and
xor
cmp
add
add
out
xor
adc
or
xchg
cmc
push
ds
fidivs
jmp
aad
rcl
int3
in
repz
popf
push
aas
sbb
push
outsb
and
jo
jb
cmp
icebp
jg
movsl
jmp
repz
divl
adc
xor
add
jle
mov
add
add
or
or
push
out
xchg
jecxz
fbld
push
call
fldl
ror
rcrb
pop
cld
add
pushf
sbb
push
jbe
or
insl
adc
push
jmp
rorl
addr16
cmpsb
icebp
enter
xchg
loopne
mov
incl
pop
lods
add
call
adc
or
mov
jp
imul
cmp
out
loopne
loope
loop
fidivrs
lahf
jecxz
imul
push
dec
or
adc
adc
inc
sub
add
adc
minps
push
pushl
clc
repnz
out
in
ljmp
arpl
bswap
adc
push
push
mov
push
mov
add
cli
shl
jmp
mov
fimull
in
enter
mov
cmp
mov
push
insl
sub
adc
dec
test
cmp
stc
sbb
add
repnz
loopne
aad
into
and
add
cld
sbb
cmp
in
push
cli
lcall
sti
pop
gs
mov
push
sub
cmpsb
or
sbb
xlat
icebp
and
inc
aam
ljmp
mov
mov
ret
inc
in
test
xchg
push
adc
enter
test
mov
mov
cmpsb
lcall
and
add
jmp
shr
ret
sbb
jmp
cld
add
call
loopne
cmpsl
sbb
sbb
and
out
imul
push
pop
cld
shr
push
aam
leave
rol
cltd
mov
sbb
xor
popf
push
cltd
cmp
push
jno
mov
sub
cli
dec
jo
push
pop
andb
mov
imul
int3
pop
or
es
ljmp
ljmp
lret
or
gs
rorl
pop
mov
mov
cmpsl
jmp
sub
mov
dec
or
inc
pop
dec
outsl
push
jnp
jp
outsb
xor
push
or
out
into
mov
mov
xlat
test
fisubs
or
sbb
pop
xor
ss
ss
xor
mov
or
pusha
sar
ljmp
stc
mov
push
mov
mov
mov
add
pop
pushl
adc
add
pop
pushf
popa
inc
addr16
fwait
pop
rcll
cmp
movaps
out
xchg
sub
cmpsl
jo
fwait
mov
lret
adc
int
mov
xor
cmp
out
clc
pushl
xor
and
adc
add
push
fcmovbe
pop
in
and
mov
call
fcompl
in
repz
or
sub
jbe
mov
inc
add
jg
adcl
cmc
sbb
fwait
jo
les
mov
mov
icebp
cmp
imul
dec
sub
sub
cmp
fstl
call
push
incb
fnsave
int
insl
repz
sti
sub
adc
add
push
add
sbb
sbb
sbb
pop
repnz
xor
mov
pop
ss
or
dec
cmp
xor
pop
aad
in
lock
and
rcll
jne
xor
int3
pop
mov
sub
int3
push
pushl
js
decl
cli
lock
arpl
mov
idiv
out
dec
jmp
call
or
repnz
jns
jecxz
imull
pusha
aas
test
jno
sbb
insb
push
mov
sti
xchg
fnstenv
mov
mov
mov
enter
in
hlt
sti
fimull
fs
sbb
cltd
and
ljmp
aam
popf
cmp
sub
push
xor
clc
rdtsc
decl
hlt
dec
in
shll
dec
ret
sub
xchg
shll
call
ret
push
roll
xchg
ret
push
mov
dec
bound
jnp
ds
xchg
push
and
test
movsl
test
sarb
add
inc
sub
sarb
dec
jbe
push
dec
jmp
dec
dec
inc
jle
je
pop
out
mov
ffreep
pusha
mov
scas
imul
add
push
mov
std
and
in
cmp
lcall
dec
imull
mov
mov
jmp
das
sahf
jno
xor
xor
shrl
popa
aas
fists
bound
mov
dec
push
out
ret
incl
cmp
pop
ds
nop
mov
jae
mov
lret
add
std
adc
pop
insb
adc
add
ljmp
sub
call
lock
inc
leave
ljmp
lods
push
ret
add
and
lcall
mov
std
aas
loopne
aam
xlat
push
sbb
xor
and
mov
xchg
cmpxchg8b
mov
aad
inc
loopne
call
adcl
xor
fdivrp
lcall
clc
jp
jno
sub
aas
cmp
xchg
es
or
flds
rorb
flds
in
add
shrb
daa
dec
and
faddl
or
in
gs
call
cwtl
out
clc
out
jo
sub
mov
out
xor
ljmp
jl
pop
ret
add
not
repz
jl
sar
test
mov
xchg
incl
cld
fdivrl
xor
std
and
mov
xchg
rcrb
std
jmp
decl
cmp
xchg
or
adcl
pop
jl
imul
call
cld
sbb
adc
aaa
sti
testb
sub
mov
mov
stc
rep
sti
push
cli
cld
imul
jge
xchg
aam
in
hlt
mov
push
cmp
push
fildll
lret
in
int
lds
rolb
clc
mov
incl
in
and
xor
sub
xor
and
das
adc
shr
lcall
mov
inc
loopne
ljmp
cmpsb
rorl
mov
push
fmulp
sti
sarl
call
xor
pushf
imul
insb
fldl
sbb
mov
call
cld
ljmp
xor
inc
adc
es
or
cmp
aaa
adc
push
pushl
inc
das
enter
xor
loop
aad
enter
sarl
lcall
loop
jg
jmp
repz
mov
pop
xorb
insl
jg
jl
jo
inc
mov
out
push
dec
jmp
push
xchg
mov
xchg
mov
or
and
inc
fisttpll
dec
fiaddl
cmp
stc
xor
and
loop
roll
sub
lea
mov
mov
mov
fs
mov
jmp
repz
or
inc
insb
dec
decl
push
sbb
jl
shll
test
shll
jmp
incl
inc
dec
cltd
inc
inc
inc
dec
xor
jb
mov
rorb
in
push
loop
ds
leave
and
into
push
fildll
out
clc
icebp
shl
lods
testl
and
imul
adc
and
lahf
nop
inc
push
inc
nop
xor
sbb
int3
out
sub
hlt
xlat
lcall
sub
jmp
sub
push
daa
pop
es
pop
cmp
mov
jbe
push
or
sbb
scas
pop
jmp
fs
jmp
lock
xlat
cld
fcom
scas
fisubrl
fisubl
or
jg
lock
jae
or
and
sub
es
sub
add
je
xchg
int3
test
inc
lds
mov
call
sub
or
sub
sub
and
sbb
call
sti
fwait
lock
cmp
fcmovnb
rclb
mov
outsl
lcall
fstl
inc
adc
or
aas
lcall
adc
mov
cltd
and
inc
sub
arpl
inc
adc
add
dec
fcompl
int3
inc
lds
loopne
jmp
or
stos
sub
jmp
and
pop
stos
sbb
pop
repnz
add
sti
cmp
stc
sbb
roll
leave
daa
aam
call
rclb
sbb
and
adc
and
ds
out
jae
lods
repnz
cli
xor
call
das
jle
cltd
pop
xchg
add
call
ljmp
fcomip
in
dec
add
test
or
add
add
add
pop
ljmp
or
roll
mov
rcrb
hlt
mov
sbb
and
cmp
cmc
sbb
call
shl
inc
fsubr
jmp
push
adc
call
dec
je
xor
into
add
into
sub
int3
xor
cwtl
out
stc
pop
push
pop
pop
or
pop
push
fimull
or
push
sarb
sbb
mov
std
jno
out
ffree
loope
sbb
or
dec
stc
int
sbb
mov
add
test
outsl
ljmp
aaa
fisttps
sub
pop
shlb
lods
inc
aas
push
or
cli
stos
call
rol
ret
aad
sbb
xlat
lock
ljmp
int
push
pop
jg
out
adc
aad
mov
dec
cmpsl
pop
cmp
jle
fdivr
scas
adc
call
pusha
incb
icebp
push
out
sbb
out
mov
repnz
decl
je
adc
sub
imul
cld
mov
shlb
inc
mov
fs
push
cmp
jmp
push
mov
xchg
out
aam
mov
outsl
mov
xchg
ljmp
lock
mov
and
sub
lret
adc
das
andb
mov
cmp
lods
hlt
cld
divb
cmc
in
decl
loop,pn
fsubr
fisubl
fxch
push
int
in
pop
adc
lea
pop
push
mov
inc
sub
aam
shr
shrl
ret
jg
pop
int3
lret
mov
addr16
pushl
out
iret
add
and
shlb
repnz
or
add
mov
loop
jb
lcall
std
cmp
jmp
mov
fistpl
adc
rcrb
add
cmpsb
pop
fcoml
scas
and
add
pop
out
push
dec
inc
pop
sub
adc
sti
pushl
leave
divb
lcall
hlt
or
and
sbb
push
lret
ljmp
bound
sbb
sub
sub
adc
adc
push
fdivl
iret
sbb
sub
fldt
sub
decl
pop
fisubrs
sbb
fwait
inc
mov
popa
inc
sub
xor
sbb
ret
loop
lds
stos
mov
mov
lret
jbe
testl
adc
push
add
decl
jae
cmp
push
cwtl
cmp
inc
and
and
or
mov
or
lcall
into
push
repnz
jmp
xchg
iret
in
pushl
pop
and
cmp
push
inc
pop
cmovb
and
or
ljmp
idiv
incl
mov
mov
out
fcompl
cli
jb
sahf
sti
jecxz
lods
sbb
mov
clc
mov
dec
aad
scas
sub
in
int
mov
fcomip
mov
fucomp
divl
lods
mov
sti
mov
int3
add
sbb
daa
in
xor
xor
dec
mov
or
not
in
rolb
fdivs
xor
jmp
jns
sahf
ficomps
and
xor
test
iret
inc
or
sbb
xor
push
cmp
call
loop
rorl
mov
xchg
rclb
loope
lock
std
add
cmp
insl
add
or
or
cmp
shl
dec
or
adc
ds
mov
inc
in
dec
sub
dec
add
jmp
fldt
mov
mov
int
ljmp
mov
adc
clc
cmp
inc
inc
dec
in
dec
repnz
test
sbb
add
pushf
loop
in
decl
fisttpl
out
shr
push
cmc
mov
inc
add
mov
or
out
ljmp
jmp
sub
and
lcall
mov
mov
shrb
sbb
xchg
cmp
popf
inc
jge
fwait
sbb
fimull
idiv
inc
clc
in
out
add
stc
jp
dec
cld
inc
stc
mov
repz
hlt
movsb
std
stos
add
pop
incl
cld
incl
add
add
jmp
clc
jb
or
xor
dec
cmp
ja
insl
or
icebp
mov
scas
scas
mov
call
cmp
xor
adc
add
out
aam
lret
cli
xlat
cld
inc
aaa
incl
adc
sub
lcall
jmp
adc
cs
cmp
ljmp
jo
mov
pop
push
adc
dec
loop
stos
and
adc
lock
push
jne
add
mov
filds
icebp
add
xor
cmp
sbb
iret
test
push
in
js
out
dec
add
or
adc
pop
loopne
adc
sar
lahf
repz
out
or
jge
pop
add
add
add
sti
cli
mov
mov
in
push
mov
add
sbb
sub
daa
dec
into
dec
mov
stos
lcall
jecxz
aam
push
nop
loope
repz
adc
test
test
decl
cmp
stc
cmc
repnz
in
test
popa
sti
xor
iret
push
xor
and
mov
imul
adc
mov
add
sub
mov
shl
xor
sbb
outsl
in
lcall
outsb
cwtl
into
mov
lret
pop
idivl
movsl
sbb
or
mov
mov
sbb
sub
sub
push
test
sub
push
fisubl
in
push
stc
stc
call
push
fiadds
movsl
stc
pop
cli
fs
sub
fcos
clc
aas
lods
or
sbb
daa
pop
das
add
pop
stos
push
outsl
cli
add
dec
call
fmuls
out
jmp
out
das
out
pop
repz
out
and
pop
loopne
loop
hlt
pop
add
push
decl
call
enter
push
ss
xor
and
sahf
test
das
out
pop
out
fdivp
aaa
std
jmp
fidivl
jecxz
call
pop
notl
or
mov
lcall
and
sbb
sbb
clc
mov
loope
in
in
in
lcall
xor
hlt
xor
test
pop
icebp
dec
out
xlat
dec
shl
loopne
cmc
fiaddl
icebp
ljmp
dec
les
push
in
pop
dec
arpl
aaa
jns
mov
add
jmp
adc
int3
out
aam
pop
enter
out
rolb
or
mov
or
jne
sbb
sbb
adc
int
cmp
mov
mov
jge
test
sti
push
cmc
adc
aaa
ljmp
insb
out
jmp
push
fcmovne
fmul
dec
in
repnz
movlps
and
cmp
jbe
add
inc
cmp
and
pop
inc
jmp
ljmp
mov
add
push
or
adc
sbb
push
mov
and
call
orl
adc
adc
xchg
and
incl
mov
mov
test
push
fsubs
out
into
mov
fstl
jmp
in
fnstsw
iret
out
iret
mov
ss
add
pop
dec
sub
jae
arpl
cli
pushl
or
sub
lds
lret
shlb
pop
fidivrs
sbb
setge
fdivl
sahf
and
incl
daa
mov
and
or
cli
jecxz
xlat
nop
into
mov
lcall
das
and
iret
push
icebp
loopne
jmp
repnz
dec
fcomps
incb
sbb
daa
cmp
call
outsb
sub
dec
subb
push
ret
in
scas
sarb
test
ljmp
repnz
pop
nop
sbb
sbb
and
sbb
jnp
adc
and
and
adc
out
ficomps
xchg
aam
call
insl
aam
jo
jecxz
popa
jmp
out
and
pop
out
sub
lods
repz
push
repz
jp
dec
sub
call
cmp
inc
push
inc
xchg
cmp
and
or
jle
and
pushf
mov
mov
mov
decl
jno
imul
and
in
xchg
jecxz
in
adc
adc
mov
adc
ljmp
out
xor
and
xlat
iret
fldcw
adc
lock
call
icebp
out
out
icebp
add
or
pop
loopne
pop
repz
out
and
daa
cmpsb
es
sub
rol
and
flds
enter
loopne
rcrl
mov
sbb
and
hlt
jbe
jg
out
adc
or
cmp
add
test
ja
sbb
hlt
js
lcall
out
loope
and
mov
cmpsb
loopne
ficomps
in
sahf
add
or
call
scas
fimuls
inc
or
mov
or
incl
int
jns
and
mov
pop
clc
int3
ljmp
dec
in
in
icebp
ljmp
adc
imul
sbb
pop
inc
imul
testl
push
adc
adc
push
add
hlt
jecxz
push
fisttpll
shl
ljmp
clc
rolb
jecxz
negb
mov
pop
pop
js
xchg
and
push
jns
mov
in
pushl
jmp
adc
shl
cmpsb
push
and
push
es
xchg
add
out
mov
out
cli
decl
call
data16
in
roll
nop
adc
and
pop
and
lret
lock
decl
cli
sub
shl
repnz
mov
jmp
sbb
pop
ljmp
in
sti
ficoml
and
lahf
loope
out
xchg
add
adc
es
call
xchg
shlb
aad
loope
cmp
xor
dec
cmp
out
sub
push
stc
push
aas
aas
shrb
push
hlt
jp
or
mov
fmul
sbb
push
incl
xlat
and
push
jecxz
int
imul
call
ret
hlt
cwtl
add
or
incl
and
adc
sub
jmp
out
aad
mov
adc
dec
add
push
aas
sbb
adc
cmp
add
ja
mov
cmpsb
mov
add
fldln2
push
add
mov
dec
ljmp
push
cmp
xchg
repz
in
fnstsw
loope
in
xlat
clc
movb
add
add
call
lcall
add
jae
and
aam
add
push
adc
and
sbb
loop
aaa
or
pushl
mov
adc
cld
sti
stc
xchg
sti
mov
out
cli
push
icebp
adc
fsubp
jbe
dec
fsubr
iret
pop
aam
out
ljmp
and
bound
cmp
sub
sti
mov
cld
jmp
fcoml
mov
test
gs
call
jb
into
push
fiaddl
jbe
pop
lret
add
repnz
add
or
scas
sub
call
lea
rcrb
push
adc
lods
pop
and
loop
dec
cmc
push
out
xchg
out
pop
in
jnp
dec
out
dec
lcall
mov
enter
out
xor
dec
in
hlt
ftst
xchg
clc
add
idiv
decl
pop
sbb
inc
dec
inc
inc
xor
sub
cli
mov
pusha
aam
int
pusha
call
cld
stos
frndint
sub
add
or
or
data16
fildl
call
std
push
pop
sbb
nop
sub
rcrb
mov
in
fcmovnu
xor
fcomip
call
gs
add
in
jmp
shl
in
stc
arpl
pop
cmp
mov
add
lcall
add
lock
shrb
or
pop
iret
js
lahf
pushl
xor
or
sub
testl
lods
fidivrs
out
fldl
mov
jg
inc
jmp
pop
push
repnz
cmp
mov
push
flds
mov
std
loop
testb
push
push
lds
or
out
fisttpll
repnz
or
and
lcall
mov
imul
mov
cld
mov
lret
sbb
xor
loope
mov
jmp
repz
fwait
hlt
dec
jmp
sub
or
sbb
or
ds
cmp
mov
push
pop
orl
adc
stos
enter
into
inc
fldenv
dec
jp
add
adc
add
xor
repnz
jp
or
call
pop
cld
sbb
sub
daa
inc
sbb
pop
jmp
loop
rcll
call
xchg
xchg
xlat
adc
lock
push
lock
add
fcoml
fcoms
mov
mov
dec
sub
lcall
push
push
dec
or
add
ljmp
sti
mov
out
push
adc
mov
repnz
daa
cmpsl
cld
push
add
rorl
or
cld
cmp
pop
testl
in
icebp
aas
loop
loope
lock
lcall
sbb
pop
mov
add
imulb
mov
or
xchg
sbb
dec
or
sbb
mov
adc
dec
clc
sbb
push
lock
hlt
sahf
lock
inc
push
decl
push
imul
sbb
hlt
sti
aad
sti
in
out
lock
and
incl
adc
sub
in
cld
push
repnz
iret
addr16
pop
daa
fcompl
add
mov
mov
out
xor
mov
int
jbe
in
in
out
repnz
push
es
or
adc
or
std
fdivp
test
push
in
in
jmp
std
mov
push
std
or
inc
and
rclb
and
jg
xor
call
stc
lahf
add
bound
or
aam
jecxz
outsl
icebp
daa
out
inc
in
call
cld
inc
out
fcmovnu
xlat
mov
mov
xchg
pop
ja
cmp
daa
sbb
jg
and
sbb
add
sbb
cwtl
push
add
xchg
das
sar
stc
in
hlt
jl
jg
fdiv
loope
pop
out
out
stos
mov
jg
std
dec
or
sbb
sti
sbb
push
cli
or
or
mov
mov
mov
je
pop
lret
cmc
mulb
jo
test
outsl
pop
out
lods
out
mov
out
mov
mov
loop
in
scas
cmc
push
imull
inc
add
fs
cs
xor
das
in
cld
incl
sub
and
xchg
pop
icebp
out
fists
fcomi
out
repnz
cli
add
test
or
mov
and
push
sbb
or
adc
lcall
sbb
sbb
sbb
pop
fstps
insl
adc
lcall
jmp
insb
stc
add
enter
inc
incl
cli
pop
repnz
shl
inc
ror
leave
in
iret
or
add
clc
lcall
xchg
and
dec
lcall
add
lcall
mov
rolb
lcall
inc
pop
stc
push
adc
decl
sahf
pop
pop
add
std
jo
ss
pop
xchg
sbb
adc
or
cld
incl
or
xor
out
mov
div
xchg
hlt
xor
push
mov
jmp
repz
dec
out
shlb
jecxz
jmp
mulb
and
cs
mov
and
jp
loopne
push
sti
icebp
inc
ljmp
jecxz
push
in
jg
int3
pop
mov
add
std
sbb
mov
repnz
cli
adc
outsl
clc
mov
sbb
sbb
sbb
xchg
mov
mov
xchg
std
in
dec
fisttps
inc
clc
jno
jecxz
ja
add
ljmp
pop
lock
popa
out
sar
add
add
add
xchg
push
int3
or
adc
add
call
hlt
cli
imul
adc
sbb
push
adc
addr16
icebp
pop
out
fbstp
fidivrs
rep
add
orb
adc
in
jae
cltd
or
add
clc
ffreep
jg
mov
cmpsb
add
fcoms
pop
out
pop
push
mov
add
mov
in
outsb
in
loop
ficoms
in
repnz
pop
outsb
push
adc
sbb
sbb
jge
int
add
in
fstpt
in
stc
sar
jg
das
aam
cmpsb
ljmp
stos
pop
sbb
js
lock
clc
push
call
insl
stc
inc
add
add
push
cwtl
adc
ljmp
adc
out
dec
sbb
cld
xchg
add
or
and
stc
push
mov
das
sbb
pop
cmp
and
mov
lahf
out
in
in
out
sub
cmp
add
push
or
or
test
sbb
lcall
je
out
test
ja
mov
fstpt
xor
js
xchg
push
push
dec
pop
pop
and
sub
sbbl
mov
daa
lcall
mov
divb
pop
cli
mov
loope
mov
repz
jnp
push
repnz
repz
clc
addb
loop
movlps
sbb
sbb
in
or
mov
xchg
out
std
pushl
repnz
not
std
mov
fwait
or
and
or
mov
call
iret
loop
loopne
out
jmp
adc
leave
clc
daa
push
push
or
or
cld
call
add
sbb
push
pop
or
xor
out
clc
adc
out
jmp
out
or
mov
pop
add
clc
mov
movsb
in
add
lcall
jp
or
pop
out
add
jmp
sub
cmpsl
add
jg
icebp
add
mov
pop
outsl
or
cmp
ljmp
ljmp
gs
ljmp
ds
cltd
clc
ja
clc
push
call
inc
fwait
add
add
cmp
int3
jecxz
in
incl
add
xchg
adc
inc
pop
xchg
sbb
adc
add
std
decl
xchg
out
fyl2x
pop
repnz
clc
mov
push
add
les
mov
jle
imul
and
cltd
std
cmp
cld
jno
rorb
sub
icebp
call
ret
sbb
sbb
adc
inc
adc
incb
push
cld
stc
outsl
cmc
mov
sub
out
aad
mov
int
xchg
cli
scas
stc
js
mov
sti
push
inc
icebp
or
out
push
cmc
lcall
mov
and
inc
and
or
add
notb
jmp
mov
jecxz
in
jmp
repz
clc
xchg
jnp
inc
add
add
or
jle
and
mov
mov
push
shl
add
popa
add
sbb
pop
sub
and
js
push
clc
jmp
in
loopne
loop
jecxz
in
ljmp
inc
decl
sbb
test
filds
xchg
fdiv
cmp
sarb
cmc
cmc
mov
pop
dec
or
fcomip
decl
repz
adc
adc
sbb
mov
rolb
test
inc
notb
std
fdivp
jl
hlt
out
imul
mov
jmp
insl
out
mov
cld
in
pop
ret
cmc
dec
fbld
add
in
push
sbb
xor
mov
sbb
sar
icebp
adc
jle
jnp
loope
adc
ret
out
mov
mov
out
fucomi
fucomp
test
ret
std
inc
add
cli
adc
inc
or
push
addr16
adc
ljmp
in
scas
or
push
sbb
mov
cmp
pop
mov
clc
push
push
sbb
into
add
jg
lock
in
loop
fimuls
mov
sbb
clc
in
add
lock
adc
movhlps
push
fnstcw
pop
or
sub
push
aas
pop
loopne
iret
sbb
sahf
add
push
idiv
add
popf
lock
outsl
repnz
inc
testb
add
pop
inc
push
test
decl
jo
std
or
pop
lods
add
cli
push
icebp
and
jne
mov
hlt
jge
mov
jmp
adc
adc
clts
cmp
fdivr
int3
mulb
in
dec
or
inc
dec
pop
imul
in
icebp
jns
decl
inc
or
es
bound
adc
push
add
sti
jl
lods
repz
lock
jnp
outsl
clc
sbb
push
pop
aam
adc
adc
adc
orl
incl
incb
stc
stc
idivl
clc
sar
stc
stos
mov
mov
push
pop
and
dec
push
mov
sti
popa
stc
das
test
jmp
loop
out
out
pop
push
add
or
adc
fistpl
or
movsl
adc
jne
xor
sahf
jmp
gs
mov
hlt
icebp
clc
repz
xor
pop
or
fwait
push
lock
cli
mov
xor
xchg
dec
cmp
shr
inc
cmc
add
pop
or
jbe
pop
mov
call
xor
lds
nop
push
push
or
push
ljmp
jle
out
xchg
pop
incl
cmp
jb
call
imulb
xchg
scas
out
jle
repz
add
outsb
pop
addr16
icebp
sub
icebp
mov
out
mov
cmc
xchg
cli
cmpsb
sar
sbb
or
pop
xor
adc
push
xchg
jno
std
dec
pop
out
jge
pop
repz
hlt
ljmp
pop
cmp
sti
inc
sti
das
cld
icebp
cli
inc
divl
jp
insl
idiv
fstpt
or
or
sbb
pop
sbb
adc
ljmp
shl
psllw
out
test
sbb
hlt
mov
jp
test
movsb
sti
mov
jbe
sahf
cmp
int3
add
add
or
scas
repnz
lock
aaa
in
jnp
stos
in
out
xchg
testl
cmovae
lcall
and
in
adc
dec
std
pusha
hlt
sub
out
in
jmp
ljmp
test
movl
rolb
movb
lcall
pop
lods
cli
push
clc
negl
clc
jae
insl
pop
add
out
sbb
and
sbb
mov
pmulhuw
insl
icebp
lock
xchg
mov
add
cmp
inc
sar
mov
stc
addr16
sbb
movsl
cli
std
test
in
cli
outsl
sbb
mov
mov
add
xor
imul
bnd
dec
clc
incl
icebp
outsb
cld
adc
or
prefetcht1
cmp
jecxz
jle
mov
add
push
jle
out
aam
jecxz
insl
sti
sub
adc
pop
or
push
faddl
inc
cld
mov
out
sub
cli
idivb
ds
or
outsl
cli
incl
sbb
ds
pop
lcall
negl
push
repnz
in
cli
psubq
cli
xchg
stc
pop
mull
out
inc
repnz
ljmp
std
push
or
or
sub
add
test
out
test
repz
cli
add
ljmp
adc
xchg
or
cld
dec
divb
repnz
add
cld
jmp
cli
incl
dec
or
or
rclb
jnp
rorl
leave
add
add
sti
lahf
testl
xchg
add
mov
cmp
adc
adc
push
mov
cli
dec
repnz
or
sti
add
in
lods
lock
adc
negb
mov
clc
test
inc
cmc
iret
stc
push
cld
pop
es
pushl
ret
cmpsl
sbb
sbb
sbb
pop
das
stc
shr
filds
fsubrl
ficoms
xchg
out
iret
or
push
adc
into
adc
push
dec
push
mov
jle
push
clc
sub
icebp
stc
mov
mov
push
out
sub
fcomip
pop
push
testl
loopne
jecxz
jmp
hlt
push
std
or
fdiv
call
push
sbb
sbb
adc
roll
roll
push
imul
ljmp
outsl
into
divl
cmc
das
bnd
pop
imull
cli
dec
stc
push
stc
incb
sbb
repz
push
push
ja
dec
push
int
mov
push
repz
jmp
fimull
fmull
loopne
out
lock
or
mov
ljmp
pop
or
out
iret
add
lods
push
ljmp
outsl
and
jp
nop
push
in
mov
jecxz
in
jmp
add
pop
add
or
pop
sbb
loop
sub
mov
pop
add
scas
repz
mov
cli
push
jle
sbb
add
cwtl
cld
movsb
cli
cmp
mov
incl
pop
or
movhps
mov
push
cli
outsb
repnz
loopne
incl
in
out
fs
daa
push
sti
adc
push
or
pop
daa
fisubs
and
idiv
aaa
sub
out
jge
stc
lock
cli
addl
mov
sbb
insl
mov
jmp
movsb
loope
in
decl
push
push
and
mov
xchg
sbb
sbb
jno
xchg
or
decl
sahf
or
add
es
cmp
pop
add
add
add
add
add
incl
dec
std
push
clc
inc
hlt
loope
jecxz
out
in
cwtl
out
push
hlt
sar
add
adc
incl
adc
imul
in
fnstsw
jno
lods
fmull
clc
cmp
mov
setno
rcrb
jo
push
adc
or
cmp
std
push
notb
and
clc
sar
std
insb
add
and
jge
decl
shl
mov
in
or
inc
out
lcall
decl
pop
pop
nop
add
adc
xchg
sbb
sbb
push
mov
lock
inc
or
sbb
sahf
divb
in
push
jmp
in
out
jo
enter
jmp
pop
clc
mov
cli
jno
pop
or
les
xchg
pop
hlt
or
or
jo
mov
in
ljmp
ljmp
mov
or
adc
mov
cmpsb
or
or
add
pusha
cli
cmp
sar
rolb
adc
stos
or
or
or
decl
ds
and
jo
loop
movsl
aad
aad
fldt
sti
ret
add
in
loop
jmp
pop
sub
push
pop
push
decb
idivl
ljmp
sti
inc
std
jbe
loop
stc
pop
negl
and
and
mov
out
mov
repz
repnz
and
xchg
and
and
std
jmp
sbb
add
clc
jmp
cwtl
loop
fistpl
fisubrl
sbb
xchg
in
stos
mul
add
into
or
push
sbb
adc
pop
mov
jecxz
out
clc
jg
testl
fadds
pop
or
jmp
out
mov
jmp
out
ficoms
in
jmp
hlt
dec
add
sbb
sbb
push
out
int3
sbb
mov
and
add
add
add
decl
cld
leave
clc
fdivp
aas
repnz
in
dec
ljmp
out
out
add
inc
add
sbb
pop
and
mov
push
jmp
fcoms
pop
push
pop
add
mov
jecxz
loopne
fists
and
loop
lods
scas
xor
out
hlt
dec
cli
sar
out
xchg
add
cmp
addr16
push
nop
push
fistl
sbb
inc
adc
mov
or
add
or
fsubrp
dec
jmp
jmp
ljmp
filds
icebp
lock
cld
cld
ret
call
nop
push
mov
push
adc
push
test
sbb
sbb
sbb
adc
inc
or
sub
adc
call
jmp
pop
jmp
out
add
repnz
test
pusha
dec
or
or
mov
insl
adc
lock
ret
adc
fimull
ljmpw
pop
cld
jg
loope,pn
fcoml
in
in
push
add
pop
jg
incl
xchg
push
js
xchg
int
xchg
js
mov
iret
or
mov
stc
inc
divl
cmp
in
lods
std
xchg
js
add
decl
sub
pop
icebp
iret
in
inc
in
xor
aam
pushf
out
inc
ljmp
cli
mov
pusha
or
sbb
sbb
sbb
dec
push
jg
ds
push
jg
cmc
decl
imul
hlt
adc
inc
testl
add
addr16
mov
push
mov
pop
fs
or
or
orl
or
add
aad
adc
jmp
sub
sbb
mov
hlt
daa
sti
in
js
out
xchg
incl
test
and
xchg
or
add
std
jb
pop
les
enter
out
and
mov
or
cltd
pavgb
pop
pop
add
decb
into
out
add
xchg
out
jmp
cmc
cmp
popa
sti
ljmp
sti
or
or
xchg
or
or
pop
or
aaa
add
cmp
aas
addb
or
cli
sub
push
hlt
jae
sbb
icebp
sbb
mov
push
std
or
stc
punpckhbw
sub
popf
push
jns
sub
cs
sti
ds
cli
das
push
dec
notl
repz
repnz
ljmp
dec
testb
jmp
add
mov
sbb
aam
andl
and
sbb
or
aaa
push
clc
push
cmc
repnz
lods
out
imul
cwtl
jmp
in
clc
mov
cmpsl
in
pop
in
mov
out
cld
rclb
or
ljmp
pop
dec
sbb
and
sbb
rorl
lcall
mov
cmc
mov
insb
bnd
lock
mov
in
mov
cmc
aad
data16
das
mov
hlt
or
adc
sbb
push
add
adc
xor
outsb
or
jg
icebp
add
jecxz
mov
shll
push
call
iret
aad
fst
out
repz
adc
cmp
inc
and
jbe
test
mov
adc
clc
mov
xchg
mov
mov
dec
add
imulb
in
ss
stc
fisttps
loop
in
decl
dec
in
dec
repz
movsb
adc
mov
outsl
and
pushl
pop
inc
sbb
or
ds
outsl
hlt
dec
out
and
pop
out
out
cli
pop
je
out
xchg
ljmp
xlat
clc
repnz
cmc
call
add
jg
push
sbb
sbb
repz
add
mov
adc
pushl
frstor
loop
mov
out
in
jne
fdivrp
cmp
pop
or
or
push
pushl
jns
mov
pop
sbb
sbb
sbb
inc
push
out
sbb
or
add
stc
mov
fildll
fcoms
push
fcompl
sbb
icebp
mov
pop
cmp
call
fs
scas
sbb
sbb
sbb
push
sbb
adc
add
mov
cmc
jge
sub
xchg
call
sbbb
icebp
lret
testb
mov
jb
xchg
adc
unpckhps
or
mov
or
or
sti
mov
mov
jg
lods
xchg
jmp
jmp
out
jmp
push
push
icebp
and
xchg
cli
mov
or
jbe
jo
jecxz
dec
sbb
clc
decl
pop
or
xchg
xchg
std
arpl
push
test
out
sbb
rcll
add
hlt
xor
pop
jmp
aaa
inc
incl
outsb
or
outsb
pushf
push
mov
aad
scas
or
or
xorl
add
add
add
ljmp
std
sti
sti
xchg
sti
in
mov
ljmp
sti
nop
sti
mov
imul
negl
clc
ja
add
cld
std
ds
add
add
or
or
fwait
aam
xor
push
push
push
and
movl
lret
mov
cli
xchg
repz
out
add
jp
push
jmp
out
sbb
cli
mov
cld
decl
mov
adc
adc
and
cs
push
cld
fistps
add
add
lock
sti
jbe
movsb
loop
ljmp
imulb
push
out
cmp
sub
out
ja
pop
notb
je
cmp
call
fwait
adc
pop
lock
sbb
sbb
sbb
push
not
das
js
mov
out
in
repnz
in
xor
cmp
in
jecxz
loop
loop
in
ljmp
idiv
int3
add
dec
sbb
and
test
incl
lcall
aaa
push
mov
mov
imulb
ljmp
sbb
add
push
jecxz
loope
loopne
loopne
in
ljmp
stc
cmc
call
sbb
and
and
les
cmp
push
rcrl
adc
or
call
stc
out
jp
cwtl
ljmp
or
cmp
pushf
out
call
push
out
mov
clc
xor
mov
fmull
adc
sbb
mov
sub
daa
jge
dec
pop
pop
pop
stos
outsb
and
int3
in
das
pop
lock
inc
jp
loopne
loope
outsb
out
jmp
loope
jmp
mov
std
sub
insl
mov
mov
adc
pop
adc
std
dec
push
repz
adc
jmp
cwtl
clc
and
mov
xchg
jecxz
fisttps
ficoml
push
jecxz
in
jmp
jg
lock
incl
das
push
jnp
sbb
rcll
sti
push
mull
fsubs
jl
sbb
sbb
adc
mov
pop
add
mov
jecxz
loop
jecxz
loop
xchg
fsub
adc
in
call
xor
cmp
lock
into
and
xor
adc
sbb
push
pop
xchg
sbb
sbb
decb
add
jl
jnp
aad
mov
fistpll
loop
out
jmp
out
xchg
testb
cld
stos
decb
or
cmp
jecxz
push
cmp
call
adc
lcall
or
or
add
cli
xchg
bnd
push
sub
aad
lcall
fildl
in
fisttps
ja
jle
scas
out
pslld
incl
icebp
cmpb
adc
mov
and
es
cmp
scas
pop
leave
sbb
adc
iret
add
cli
pop
rep
in
movsl
jecxz
loopne
loopne
loopne
lcall
sbb
daa
ljmp
push
std
xchg
mov
add
pop
push
push
or
or
cs
or
pandn
outsl
adc
adc
adc
or
jg
call
repnz
out
cmc
jmp
jmp
fcomip
xor
ljmp
mov
push
or
jnp
add
adc
push
or
inc
or
or
scas
aaa
cld
decl
and
pop
or
add
dec
pop
icebp
inc
in
repz
add
jmp
pop
in
mov
push
repz
pop
mov
stc
mov
mov
add
pop
call
push
in
add
adc
sbb
mov
pop
adc
inc
add
cmc
jns
xor
inc
lock
mull
push
jne
dec
negl
dec
testl
xor
lret
sti
and
decl
adc
scas
adc
push
mov
xchg
sbb
sbb
sbb
call
push
pop
or
push
add
clc
js
mov
cmc
div
jbe
push
hlt
jecxz
cs
push
sub
pushf
testb
stc
cmp
sbb
or
ret
cmp
rcll
xchg
adc
or
pop
xchg
add
std
jb
imul
cmc
in
dec
cld
icebp
shl
gs
icebp
out
jmp
mov
dec
in
fucomip
mov
out
mov
es
add
xor
adc
sbb
and
decl
and
and
sbb
shll
loop
xchg
clc
adc
out
clc
jmp
pop
in
out
jmp
add
xchg
in
xchg
out
inc
repnz
and
testl
scas
cmp
pusha
pop
ret
les
add
add
cmp
es
lcall
adc
std
in
cmc
mov
mov
jnp
mov
adc
divl
add
or
jg
sub
adcl
dec
push
nop
adc
call
cmpsl
push
les
mov
cmp
xchg
testl
call
icebp
in
in
loop
loop
out
shr
mov
out
ljmp
cs
sub
push
or
adc
sub
lcall
insb
std
and
jnp
cmpsl
hlt
or
in
jae
cld
pop
lock
fsts
xor
inc
loope
in
out
in
fdiv
xor
sub
inc
push
add
lock
aas
ss
sub
into
sbb
and
es
daa
lock
sbb
adc
mull
out
push
mov
loop
fucomp
fldt
loope
out
jmp
mov
xor
cld
test
fildl
jle
or
adc
sbb
push
mov
sbb
xchg
adc
std
dec
cmc
in
mov
mov
adc
rcr
call
popf
out
jmp
insb
repz
cmpsb
mul
clc
popf
stc
pop
sti
mov
pop
inc
or
adc
fistpl
decl
jp
xchg
daa
sub
sbb
sbb
aam
lock
in
fildll
aam
jg
cmc
cld
fstps
js
stc
and
icebp
push
and
inc
adc
adc
pushl
adc
test
mov
push
adc
adc
adc
or
fs
jecxz
sti
cmc
xor
repnz
jg
jbe
loope
fnsave
insb
out
out
jmp
adc
mov
idivb
sbb
mov
sbb
mov
decl
testl
xor
cmpsl
std
sahf
sti
in
cli
scas
clc
outsb
cmc
outsl
repnz
jno
test
cmp
ljmp
mov
adc
push
add
push
popf
or
or
or
imul
add
hlt
sti
ss
inc
clc
sar
dec
div
stc
daa
add
add
add
add
lcall
hlt
push
popa
lock
mov
clc
lock
or
out
add
jg
mov
adc
adc
out
testb
add
or
in
hlt
sbb
fucomip
xor
jmp
out
push
push
cld
add
pop
inc
or
push
and
xchg
inc
adc
push
sbb
adc
inc
cld
aam
dec
add
mov
or
push
add
cld
jecxz
add
inc
lock
push
lock
cmc
inc
stc
push
sub
repz
ljmp
pop
adc
cmp
adc
punpckhwd
or
sti
rol
call
clc
xchg
negl
testl
cmc
enter
lahf
repnz
out
aam
jge
jmp
call
loop
jecxz
cwtl
in
div
sbb
sub
lock
jg
ljmp
add
and
and
and
inc
or
dec
std
test
jmp
jmp
ret
pop
sub
outsl
clc
addr16
pop
cld
adc
sahf
cli
mov
lcall
add
adc
pusha
sbb
sbb
and
and
mov
sbb
mov
and
dec
push
adc
sbb
cmc
loop
jecxz
out
ljmp
scas
cmc
cld
cmp
mov
or
or
or
pop
or
or
cmp
or
mov
mov
adc
jg
adc
or
stos
add
stc
adc
pop
ljmp
loopne
loop
in
jmp
scas
xchg
push
test
or
popa
std
inc
std
in
sti
cli
clc
push
idiv
scas
xchg
mov
test
xchg
cli
or
push
or
push
push
adc
adc
and
popa
sbb
pop
jl
cmp
aad
adc
xchg
cmc
push
out
mov
pop
dec
movsb
fcoms
jmp
push
jbe
mov
jb
insl
add
push
pop
aad
jg
sub
pop
mov
aas
mov
add
add
pop
inc
or
pushl
or
or
or
mov
pushl
dec
pusha
push
lock
lock
icebp
xchg
cmc
pop
cli
outsl
mov
loopne
add
dec
adc
adc
stos
sub
jmp
or
in
add
roll
cld
or
ret
cld
insb
jg
add
add
sbb
push
push
or
insb
data16
push
xchg
repnz
in
inc
in
fldz
sbb
adc
test
add
or
sbbb
adc
add
ljmp
jne
test
into
notl
adc
adc
call
adc
push
or
add
idiv
repnz
icebp
clc
mov
pushf
push
leave
or
push
rcr
adc
adc
or
pop
sbb
mov
jmp
jmp
gs
lock
push
cld
inc
js
pop
cltd
clc
ljmp
adcb
xor
push
jl
xchg
mov
push
in
mov
pop
push
jae
rorl
decl
or
lea
mov
enter
movsl
cmc
mov
mov
test
inc
out
pop
out
cmpsl
lock
bnd
pushl
cmc
cld
dec
add
add
mov
sti
or
test
or
or
or
or
or
or
mov
out
clc
call
outsb
aaa
cli
sti
cmp
repz
inc
in
cli
call
in
in
jg
pushl
xor
jb
ret
ljmp
std
jne
or
jg
jg
mov
sbb
scas
and
push
sbb
add
dec
jg
and
sbb
cmp
in
or
out
int
in
ja
push
scas
repnz
negl
cli
mov
jg
push
add
repnz
cmpsl
or
lds
lcall
sbb
adc
or
call
adc
inc
imulb
jmp
in
inc
out
mov
imull
cld
add
pop
add
add
add
add
add
add
mov
sar
testl
fiaddl
repnz
loopne
incl
adcl
sbb
adc
push
pushl
clc
popa
repz
out
imul
test
dec
jmp
in
mov
clc
push
stos
pusha
pop
lock
lods
add
add
mov
clc
cmp
push
lcall
repnz
lahf
negl
idiv
add
jmp
pop
or
mov
jo
mov
pushl
cli
or
or
push
mov
fdivr
movsl
std
xor
xlat
cli
and
sti
cmp
push
pop
pusha
cld
mov
std
mov
out
and
cld
inc
std
call
clc
leave
cld
adc
mov
add
pop
adc
pop
xchg
push
std
or
or
fimuls
mov
lahf
add
jg
lea
inc
std
sar
mulb
pop
stc
sbb
cmp
aas
stc
mov
and
inc
fsubl
clc
xor
sar
fs
ss
add
add
dec
stos
cmpsl
pop
dec
push
or
call
or
pop
xlat
add
ja
sub
xchg
ljmp
and
push
aam
push
cld
sbb
dec
cli
mov
out
cs
sbb
std
test
mov
fcomip
ja
mov
push
pop
jl
dec
add
ss
add
add
add
inc
decb
push
data16
cmp
and
hlt
ljmp
or
mov
push
mov
testb
lcall
lods
or
add
sar
sub
push
mov
cmp
pop
jmp
add
push
jle
roll
cmc
std
mov
cli
pop
sbb
mov
pop
cmc
imul
clc
add
dec
add
std
mov
mov
or
mov
data16
incb
sti
xor
cld
pop
add
loop
dec
icebp
jns
fwait
icebp
or
cmp
sti
stos
std
pop
orb
cmp
or
lock
cs
add
add
jmp
jmp
jbe
push
std
std
cmp
mov
fdiv
mov
add
fldl
jp
add
add
add
mov
jg
cli
jns
xor
clc
ljmp
loope
jg
or
outsb
or
or
add
call
lock
adc
push
out
cmc
out
or
out
aad
jmp
out
js
sar
incl
adc
sub
mov
or
test
or
jmp
or
or
dec
or
test
add
into
sti
dec
clc
mov
mov
xor
daa
lock
and
cmp
decl
add
mov
pop
or
loope
aaa
add
add
adc
fiaddl
cmp
pop
data16
mov
jl
push
inc
add
sbb
add
add
mov
and
mov
cmc
jg
std
dec
cld
stos
sti
pusha
sti
sar
xchg
out
out
mov
out
or
incl
bound
sub
int3
pop
adc
addb
add
pop
in
dec
dec
cli
gs
adc
pop
add
pop
cld
xor
sub
mov
add
add
add
add
add
add
roll
add
mov
decl
cmpsb
mov
lcall
inc
cli
xor
pop
clc
ss
hlt
or
jle
mov
je
mov
js
mov
mov
add
mov
mov
jp
push
stos
or
out
loop
das
adc
add
dec
std
pop
sti
clc
inc
notl
std
cmc
xchg
addr16
testl
stc
jge
jmp
cli
sti
lods
cld
hlt
std
js
dec
add
push
sub
cmc
aaa
xor
mov
pop
push
dec
or
or
add
cld
add
incl
psubw
int3
hlt
arpl
xchg
hlt
adc
cmp
enter
or
test
hlt
incb
outsl
js
xchg
rolb
inc
add
cli
std
xchg
std
cwtl
std
or
mov
mov
add
das
or
or
sub
shlb
cmpsb
std
add
push
std
xor
stc
insl
stc
add
mov
mov
std
pop
jmp
add
cli
cmp
add
cld
test
subl
ljmp
repz
xchg
test
es
push
add
add
add
incl
or
orb
or
fwait
push
sbb
mov
decl
cmc
mov
sbb
push
aad
ds
mov
fistpll
push
testb
repz
repnz
bnd
js
in
xchg
or
fcomps
mov
mov
mov
or
pusha
or
pop
dec
push
dec
add
inc
push
icebp
cmp
pop
add
mov
cmp
ud0
fdiv
shl
jo
fidivrl
hlt
mull
stc
pop
cli
push
sti
xchg
mov
push
cld
jmp
add
movb
movb
or
pop
inc
or
or
aad
mov
or
or
or
add
cmp
or
dec
std
sbb
cmp
mov
cli
or
incl
or
cld
inc
std
test
sar
fscale
scas
std
jg
inc
movsb
clc
incl
inc
std
or
push
std
dec
bound
jg
dec
loop
sbb
decb
cmp
sar
cmp
add
add
call
add
add
add
jo
and
mov
add
add
xchg
decl
cld
cli
push
cli
sbb
jmp
testl
test
pop
clc
mov
xchg
cli
scas
ljmp
decl
mov
xchg
push
rorb
iret
or
or
or
or
jbe
mov
add
dec
out
ljmp
lds
mov
sti
aaa
sti
movsl
cli
sub
mov
cli
out
mov
xor
inc
add
or
cwtl
or
or
sbb
or
or
push
std
nop
cmp
add
add
cltd
add
sti
xor
std
push
jbe
gs
cmp
lcall
add
xor
inc
push
inc
jmp
call
test
cmc
pop
sar
add
add
stos
add
decl
xlat
call
cld
pop
sti
aad
xbegin
mull
add
divl
clc
jmp
das
repnz
fdivr
lods
lcall
pushf
add
add
add
pop
or
in
aad
incl
xchg
and
ljmp
cli
mov
idivl
inc
test
stc
jno
nop
sti
js
cmp
gs
jge
inc
add
add
sti
add
push
mov
pop
inc
mov
xor
fiaddl
movsb
add
add
loope
or
dec
add
add
fists
or
push
sbb
sub
mov
std
and
outsl
cld
push
std
pop
pushl
lret
icebp
or
add
add
add
dec
add
xchg
add
add
cmpsb
sub
rol
xor
xchg
adc
pop
addb
adc
in
jle
ja
fucomip
sub
add
mov
mov
add
call
mov
add
test
xchg
add
xor
lsl
add
inc
add
out
fmul
cs
pop
imul
sti
pop
sti
mov
sti
imul
fsubs
sti
fs
jle
std
fiadds
std
jp
mov
pop
jmp
sti
xchg
daa
sti
cli
push
or
dec
cli
es
ss
idiv
data16
inc
add
add
add
loope
clc
mov
and
xchg
into
pop
mov
sarb
push
add
mov
jbe
add
cmpb
or
mov
jge
mov
and
push
incb
je
or
mov
rcrl
out
sub
sub
mov
dec
push
fistps
in
aad
in
sub
aas
mov
dec
pushl
sub
std
mov
scas
xchg
dec
and
push
and
push
dec
std
add
pop
add
fcmovb
out
cli
lcall
add
mov
add
add
daa
add
add
push
subl
add
pop
sub
add
cmp
dec
add
mov
ret
test
fstpt
mov
fcmovbe
decb
cld
cltd
sti
int
xlat
stc
idiv
push
clc
cwtl
add
add
mov
pop
mulb
test
fincstp
mov
sti
sbb
loope
mov
stc
xchg
add
mov
xor
fwait
push
es
or
pop
movl
insl
add
add
decb
xchg
call
sti
push
sti
push
sti
cmp
ds
push
lret
pusha
pop
add
mov
dec
and
push
lock
jg
add
mov
clc
add
sub
add
loop
inc
add
jg
mov
sub
xchg
add
out
jnp
fbstp
ljmp
std
pop
cld
push
sti
cli
jp
cmp
inc
cli
cmpsl
cli
pusha
sti
cmp
xchg
hlt
cmpsb
mov
cmp
add
add
add
sar
mov
add
scas
add
jno
add
add
mov
mov
add
add
sbb
inc
inc
sub
dec
mov
mov
cli
or
std
aam
jb
in
adc
pop
add
lret
pop
lock
mov
cltd
cld
mov
stos
cli
leave
stc
xor
stos
clc
jb
insl
clc
ja
incl
fbld
aam
cmp
stc
inc
cli
jo
mov
cld
std
cld
loope
inc
cli
jg
jmp
xchg
add
push
outsl
pop
mov
jge
stos
or
hlt
pushl
adc
out
push
mov
sub
out
mov
cs
mov
and
ficomps
insl
adc
lcall
sti
xchg
sti
or
std
xor
incl
add
inc
xchg
push
add
std
decl
inc
push
out
add
jbe
mov
ud0
sbb
cld
push
sti
iret
cli
pop
cli
daa
dec
jae
shl
cli
pop
inc
sti
out
sub
std
enter
ljmp
fadds
roll
add
add
push
push
add
faddl
mov
push
scas
add
lcall
add
add
es
jnp
cmp
icebp
jo
push
xor
pop
push
sub
adc
dec
data16
dec
mov
sar
decl
cmp
dec
lods
std
xor
sar
cld
in
sti
jl
sbb
sahf
mov
lock
into
cli
and
inc
sti
cmp
cld
nop
cld
sub
stc
push
jl
pop
mov
push
add
add
add
adc
test
add
push
add
sub
add
add
cld
mov
ss
jns
idiv
jno
or
cmc
sti
pop
mov
incl
outsb
fsin
and
cmp
lcall
add
dec
adc
mov
cmp
mov
add
add
xchg
add
add
add
mov
add
pop
fwait
lea
or
and
or
cltd
decb
and
arpl
mov
pusha
outsl
cmp
pushf
add
add
add
pop
add
adc
add
faddl
add
pop
mov
add
cmp
inc
add
add
add
ret
add
pop
fdiv
and
data16
fdivr
pop
sar
sbb
lret
push
mov
fimuls
add
imul
add
fwait
inc
mov
pop
incb
incb
std
mov
std
fs
xchg
testb
fs
add
push
mov
sbb
jnp
dec
jl
subb
negb
std
cmc
cmp
bound
ficomps
std
xor
sub
add
fldt
push
sbb
push
add
add
addl
into
sahf
leave
add
xchg
test
aaa
jb
push
ljmp
icebp
xor
mov
outsb
add
add
enter
iret
ljmp
hlt
pop
mov
out
cmpsb
push
jl
stos
std
stc
jmp
or
add
mov
sbb
nop
mov
add
add
add
stos
fdivp
xchg
add
movsb
add
jbe
cs
lea
mov
lcall
add
push
add
mov
jmp
in
jae
adc
mov
sahf
push
call
lock
pop
push
cmp
test
sub
add
lcall
cmp
filds
cwtl
add
and
add
pop
dec
hlt
pushl
mov
mov
std
fdivr
stos
cld
xchg
cld
mov
cld
sar
std
xor
mov
mov
xchg
inc
sub
add
jg
add
out
sti
es
sub
test
insb
std
decb
pop
hlt
sbb
sar
mov
idiv
xchg
decb
loop
lahf
and
push
add
pop
lret
add
add
push
mov
hlt
mov
mov
es
xchg
lret
clc
add
insl
add
addl
add
sarb
inc
decl
push
mov
daa
pushl
pop
mov
mov
add
add
test
push
mov
mov
cmpsb
mov
cmp
testb
ss
ss
imul
xchg
jmp
jo
pop
jle
add
jg
sbb
dec
adcb
add
cmpsb
pop
add
add
add
add
lds
roll
xlat
mov
pop
test
call
add
bound
out
mov
lahf
icebp
jg
cs
int
sahf
cld
push
cld
inc
cld
arpl
lcall
sahf
mov
sub
stos
ret
add
fiaddl
mov
lcall
stos
jp
add
std
inc
mov
ss
sbb
out
sar
add
push
xchg
stos
out
std
cmp
into
divb
add
test
lret
add
xchg
push
loop
cltd
add
and
push
jge
push
add
inc
clc
push
sbb
mov
in
std
mov
ja
push
mov
popf
and
jmp
aas
cmp
dec
or
add
sbb
mov
fisubrs
faddl
test
lods
hlt
outsb
jl
gs
ljmp
ljmp
pushl
push
sub
ret
jmp
push
outsb
mov
add
add
add
adc
or
lcall
mov
add
add
adc
dec
stos
sub
or
or
mov
aas
clc
das
ret
push
aad
idiv
sbb
pop
std
mov
aad
add
dec
pushl
add
xchg
call
add
push
ficoml
nop
ret
push
bound
inc
decb
mov
clc
dec
std
pop
std
shlb
or
mov
ds
pop
sti
popl
std
sti
xchg
cld
sbb
loope
sahf
lcall
test
incl
hlt
add
shlb
add
add
cmp
jo
add
ret
lret
xchg
fiaddl
mov
push
adc
aaa
loopne
mov
sar
mov
ret
pop
mov
sar
pop
pop
es
inc
ret
lcall
pop
add
call
add
add
add
cmc
icebp
add
add
jmp
imul
nop
mov
mov
add
pop
clc
cmp
popl
mov
cmp
outsb
lret
mov
pop
mov
and
inc
sahf
loop
add
xor
sub
adc
or
fnsave
pop
mov
lods
decb
icebp
push
sub
xchg
cwtl
popf
ret
jmp
or
or
repnz
mov
cli
roll
push
fidivrs
lcall
jecxz
out
inc
mov
das
or
mov
dec
std
jle
dec
std
push
hlt
cld
enter
pop
fidivs
bound
aas
mov
cmpsb
cmp
add
xor
sub
mov
and
lock
cli
into
xchg
add
add
add
pop
push
xor
add
add
dec
xchg
stc
orl
decb
movsl
fildl
mov
and
arpl
or
push
add
cmp
pop
mov
jle
mov
ret
add
fistpl
add
ljmp
subl
add
push
mov
nop
push
xlat
add
add
fadds
pop
push
rcll
inc
sub
call
xchg
fsin
cmpsl
decb
push
adc
pop
movb
loopne
out
scas
xchg
out
jecxz
cmp
out
js
bound
or
imul
and
add
push
cld
pop
xor
leave
sahf
cld
std
std
jp
cmp
add
not
cld
in
cld
adc
xor
jg
cmpb
push
mov
lock
std
pop
inc
jp
push
pop
add
sbb
out
add
add
sbb
lcall
fdivrl
sub
jo
incb
shlb
push
mov
stos
subl
mov
fiadds
push
inc
or
add
push
cltd
push
out
push
mov
add
fiadds
xlat
or
jbe
add
fiaddl
add
sub
fbstp
bound
mul
add
add
jno
sbb
dec
ficoml
jle
jmp
loop
mov
push
aam
adc
jnp
aad
xor
ret
mov
sub
sar
jno
lods
call
adc
cld
add
xor
mov
pop
incb
out
outsb
lahf
rorb
jge
loop
fsubrl
mov
lret
xor
push
outsl
lcall
sub
push
scas
or
sar
push
cmc
sbb
out
cmp
data16
or
pop
mov
add
js
mov
loop
xchg
inc
pop
mov
dec
xchg
cmpsb
out
sbb
add
aaa
xor
add
fldl
das
sbb
cmp
push
inc
push
loope
mov
xor
jae
rolb
cld
sbbb
jo
pop
push
add
ret
sbb
test
out
pushf
adc
cmp
js
mov
pop
mov
jl
sbb
divb
scas
cltd
add
outsb
or
pushl
js
xchg
decl
insl
lcall
incb
sub
pop
decl
push
fidivrs
scas
cltd
decb
adc
std
lea
std
cmpsl
std
cmpsb
std
sub
roll
aas
sbb
test
jl
pop
jp
sub
ret
cmp
add
and
out
xor
arpl
adc
push
mov
push
mov
mov
and
cmp
cli
loop
in
test
call
mov
add
pop
pop
jbe
add
push
out
lgdtl
mov
es
mov
mov
sahf
cmp
pop
jge
aad
mov
mov
push
mov
cmpsb
push
stos
loop
mov
or
jecxz
dec
fiadds
inc
adc
cmpsl
push
scas
fst
jbe
btr
dec
dec
fsts
js
imul
inc
xchg
sbb
gs
les
sahf
mov
call
pop
ret
mov
jg,pt
aaa
and
jle
inc
inc
bound
lcall
sbb
adc
es
mov
or
iret
inc
cli
hlt
mov
roll
out
ljmp
jo
rolb
pop
outsb
xchg
mov
push
cmp
inc
repnz
imul
lar
aam
mov
cli
scas
sub
fidivrs
inc
pop
ss
cmpsb
outsb
xor
lret
bound
in
sbb
add
pop
add
sbb
jns
mov
negl
mov
sahf
jns
insb
js
mov
cltd
lcall
sub
clc
dec
stos
icebp
add
cmp
loop
jmp
or
bound
notb
sbb
mov
incb
outsb
cmc
mov
clc
std
sbb
bound
adc
dec
cs
xor
add
mul
lret
sbb
nopl
inc
sbb
pop
jle
push
mov
js
mov
rcl
push
scas
test
fs
mov
push
pop
imul
mov
test
push
setbe
push
jb
add
cmpsb
imul
dec
push
xchg
imul
cmpsb
into
mul
cli
sbb
loope
inc
movsb
xchg
xchg
jb
sysret
jge
lahf
es
pop
push
lods
outsl
lret
xlat
test
xor
jbe
xor
ljmp
orl
mov
lock
inc
xchg
pop
fidivrl
out
fstps
ljmp
adc
cli
and
mov
xor
push
test
cld
sbb
push
push
cmp
mov
loope
fadd
adc
push
or
repnz
adcb
lahf
andl
and
addl
add
cs
es
push
jns
cmpsl
cmpsl
mov
push
daa
repnz
out
jecxz
sub
mov
xchg
mov
nopl
mov
mov
test
add
push
dec
or
dec
adc
sbb
or
sahf
cli
add
sub
jecxz
loopne
ds
push
add
jp
or
xchg
pop
out
jnp
push
test
jle
popa
pop
xor
sbb
add
mov
aam
in
addl
hlt
lret
outsb
rol
rol
out
xchg
push
repnz
push
gs
jmp
jne
shlb
push
add
outsb
push
adc
mov
or
sahf
out
ret
imul
rorb
jg
push
xor
adc
xor
fdivl
jecxz
add
jb
lret
movsl
sbb
jecxz
fidivrl
outsb
ja
push
pop
cli
dec
sub
mov
addl
ljmp
ljmp
into
xor
or
cs
push
push
out
loope
jge
mov
outsb
pop
dec
ljmp
int
mov
aad
sub
add
stos
fdivrl
inc
in
lcall
cmp
add
mov
lcall
push
sbb
inc
xchg
out
mov
div
add
je
js
imul
gs
pop
pop
lcall
push
lret
add
or
adc
ds
js
test
test
mov
sbb
pop
rcll
cs
sbb
mov
out
cmp
xchg
mov
jbe
sahf
ds
inc
and
push
and
inc
rcl
repz
or
pop
in
mov
mov
into
push
cmpb
jno
outsl
pop
addr16
shr
test
push
imul
loopne
pop
out
add
jl
addb
sub
cmp
push
dec
mov
xor
xchg
cmp
fistpll
cli
xor
adc
ljmp
loop
repz
sbb
add
add
push
mov
loop
cmp
cmp
or
fldcw
hlt
xchg
lcall
div
hlt
repnz
loop
push
aam
pop
out
into
mov
into
add
inc
scas
cmp
push
fistpl
sub
icebp
mov
scas
in
sub
dec
push
sub
jbe
cli
dec
out
loopne
jnp
lcall
ds
out
loop
jbe
mov
das
push
jp
jecxz
cs
ss
mov
loopne
jge
ret
xor
aaa
cmpb
fidivrl
or
pop
or
mov
mov
cmp
aas
inc
scas
inc
jbe,pn
dec
add
repnz
loopne
or
and
scas
adc
add
cs
push
es
dec
loopne
not
sar
jb
inc
sub
sbb
add
jnp
aad
fstpl
leave
daa
pop
pop
jbe
ds
lock
sub
out
call
mov
mov
pop
rcr
ss
and
jle
orl
or
cmpsb
jnp
xor
scas
ret
enter
mov
xor
pop
mov
xchg
fmuls
add
or
repnz
cs
add
lcall
fisubs
jp
add
div
into
iret
inc
push
faddl
fcmovb
push
mov
ljmp
cmc
scas
push
out
ret
das
jle
fsubrl
ja
add
out
mov
js
xor
mov
push
push
jb
add
mov
jmp
add
adc
out
dec
ret
cld
sbb
mov
int3
or
cmp
std
push
mov
in
paddsw
sub
xchg
push
outsb
clc
cmpsl
negl
mov
cld
and
sahf
cli
shr
mov
faddl
push
aad
hlt
pop
scas
sarl
and
cmp
in
mov
cmc
jp
lret
adc
adc
lock
mov
ss
in
out
inc
xchg
mov
push
sbb
add
mov
in
mov
lret
push
sbb
and
dec
pop
inc
xchg
out
mov
or
incb
sub
ja
fidivrs
jmp
in
sub
clc
dec
xor
jno
stos
xchg
adc
or
xchg
popa
lock
mov
pop
inc
ds
jbe
pop
fwait
outsb
addr16
popl
div
lcall
and
pop
dec
pop
and
sub
pop
hlt
cmpsl
ja
cs
cld
out
xor
out
loope
addl
mov
jecxz
mov
push
out
sub
sbb
mov
mov
push
fidivrs
inc
sbb
sbb
sbb
add
testl
inc
cmp
ss
dec
mov
pop
or
packssdw
mov
mov
cli
out
push
clc
jmp
push
pop
in
out
not
cmc
nopl
popl
pop
call
ljmp
out
xchg
push
add
mov
adc
adc
jnp
or
add
pxor
sub
dec
adc
cmp
or
cmc
push
lods
fcomi
ds
pop
mov
push
subb
cmp
arpl
adc
push
mov
dec
les
std
push
pop
addr16
out
iret
fidivrs
push
fcomi
push
idivb
sti
jge
es
sub
adc
clc
out
jmp
out
aaa
fwait
add
sti
aas
testb
inc
pop
mov
daa
imul
xlat
sbbl
push
push
mov
pop
pushf
sub
out
push
enter
adc
xchg
fcompl
jo
addb
mov
je
jl
add
jge
jns
jnp
addb
addl
add
es
mov
adc
orl
push
aaa
cmpl
jl
addl
jns
jge
cmp
sbbb
pop
jge
cmpb
jl
test
mov
jl
cmpl
test
orl
mov
mov
add
xlat
int3
scas
cwtl
jp
test
rolb
cmp
enter
or
into
jg
inc
push
addb
enter
in
add
jl
jns
xchg
xchg
mov
test
xchg
mov
das
cmpl
pusha
pop
pop
pop
push
test
lea
mov
mov
dec
aas
inc
inc
cmp
stos
cmpsb
popf
mov
pop
pop
data16
mov
mov
movsl
cmpsl
movsl
mov
cmp
sub
push
andb
push
dec
inc
dec
pop
ja
movsl
pushl
sahf
cwtl
pushf
xchg
jbe
cmp
aaa
xor
xchg
lods
mov
pusha
dec
dec
dec
pop
jno
cmpsb
clc
mov
stos
mov
imul
push
outsb
lea
jge
cmp
outsl
out
inc
push
bound
ds
stos
sahf
xchg
xchg
xchg
lea
inc
ds
ljmp
stos
mov
stos
cwtl
jns
push
push
push
imul
test
jns
dec
dec
push
inc
dec
fs
mov
fwait
lahf
lahf
xchg
test
pop
popa
mov
notb
decl
dec
dec
push
outsl
xchg
test
cmpsl
mov
pop
bound
cmpsb
mov
lods
mov
call
dec
inc
dec
popa
sbbl
pop
pop
arpl
xchg
mov
pushl
xchg
jg
inc
aas
dec
inc
dec
bound
xchg
subl
fistpl
cmp
stos
mov
ds
dec
inc
dec
data16
fistpll
subb
popa
jb
xchg
movsl
mov
mov
cltd
xchg
inc
xor
cmp
jne
cmpsl
lods
movsb
sahf
mov
divb
pushf
scas
mov
das
push
xchg
cwtl
test
cmp
inc
popa
sbbb
pop
push
pop
addr16
movsb
mov
ljmp
clc
mov
je
inc
cmp
dec
inc
push
jne
movsl
lods
cmpsl
popf
ja
clc
pop
mov
lcall
lcall
in
outsl
insb
dec
mov
imul
mov
cwtl
xchg
xchg
push
jo
inc
cmp
pop
jle
scas
ljmp
pop
pop
jae
lcall
scas
js
decl
cmp
inc
push
je
mov
imul
divb
or
mov
inc
cmp
push
pushf
test
sbb
jno
imul
cmpsb
mov
fwait
xchg
xchg
cmp
popa
sbbb
jbe
pop
pop
gs
xchg
test
outsl
shlb
dec
cmp
dec
dec
pop
jp
mov
imul
into
jno
clc
mov
dec
ds
cmp
ljmp
movsl
pushf
jge
pop
pop
in
jle
mov
mov
outsl
xchg
cmp
outsb
mov
subl
jl
mov
jg
fwait
stos
or
gs
inc
dec
dec
push
adcb
outsl
in
mov
jbe
lock
movsl
stos
movsl
mov
jae
dec
dec
push
dec
pop
jne
popf
mov
mov
lods
adcl
adc
push
pop
insl
adcl
or
insb
jp
out
mov
mov
dec
push
pop
push
pop
jne
xchg
lcall
imul
add
ficoms
pop
push
pop
pop
pop
push
mov
xchg
cwtl
xchg
xchg
xchg
push
xchg
lahf
movsl
mov
fbstp
pop
push
orb
insl
insb
insl
jb
clc
pop
fcoml
mov
jle
pop
pop
bound
jb
mov
xchg
push
xorl
lea
jg
push
ljmp
jbe
fs
popl
mov
js
dec
lcall
mov
imul
mov
je
jbe
jl
lea
mov
jg
dec
cmc
cmpsb
cmp
push
fimull
push
jns
js
xchg
test
cmpb
insl
adc
mov
cmpl
mov
test
jnp
mov
fidivl
jae
jg
lcall
orl
sbb
jne
jb
imul
loopne
lcall
lods
adc
lret
aad
mov
cmp
push
mov
sahf
addl
cs
adc
jge
jo
loopne
jge
lods
mov
es
jle
addl
jle
outsb
cld
push
imul
mov
add
andb
jle
imul
jne
rolb
loope
xchg
xchg
mov
add
popf
rcrb
or
jge
arpl
jbe
nop
cwtl
popf
xor
lea
shlb
into
ljmp
js
outsb
fidivl
jle
nop
add
jl
xchg
xchg
mov
jl
cli
and
mov
outsb
outsl
je
mov
mov
nop
mov
jnp
test
sbbb
js
inc
rorl
mov
cmpl
jl
jbe
or
push
aaa
cwtl
fnstsw
jae
and
mov
addl
jp
push
orb
fidivrl
or
add
or
into
jnp
insb
call
dec
cmpl
subl
lods
push
jnp
jge
push
mov
mov
adc
mov
subl
or
pop
pop
push
jae
ds
cmp
aas
dec
cmp
fdivrs
ds
fadd
pop
cmpb
lcall
jge
jle
mov
mov
inc
sbb
jne
repz
jle
xchg
divl
pop
sbb
mov
and
jnp
pop
repz
fnstenv
stc
and
test
or
mov
jl
mov
cmp
xchg
and
sbbl
arpl
inc
pop
adcb
fstpt
jnp
mov
fwait
cltd
pop
shll
add
sub
push
xchg
xchg
lea
scas
aas
inc
and
lods
mov
mov
mov
push
and
mov
pop
mov
sarl
lods
lea
int
cmp
mov
jnp
pop
push
lret
aas
mov
adc
jno
add
sub
push
insb
mov
push
outsl
pop
push
insl
cmpb
add
testb
addl
movsl
add
movsl
or
jle
push
sub
jg
outsb
sub
cli
cli
jp
andl
xor
lahf
add
xor
inc
fcomi
push
mov
fidivrl
mov
and
stos
cmp
subb
add
sbb
aaa
sbb
mov
jl
pop
mov
cmp
sbb
gs
sub
push
or
mov
jae
mov
imul
push
and
mov
adc
or
ret
mov
lock
lret
xor
lds
insl
sub
mov
xchg
pop
push
xchg
fwait
mov
lods
test
lods
mov
movsl
popa
das
add
jae
fdivp
movsl
loopne
push
pop
andb
iret
shll
push
or
or
aaa
or
jno
fnstenv
ds
inc
addr16
or
xor
push
jb
pop
adc
ss
mov
sub
mov
inc
cmpsl
push
out
fisubrs
or
pop
mov
add
lahf
jge
addr16
push
out
test
jno
imul
mov
mov
adcl
jns
je
jae
jne
jle
xchg
cmp
mov
sbb
mov
insb
imul
jl
mov
test
push
mov
fs
lods
pop
call
jne
jne
jnp
xchg
xchg
mov
jb
pop
gs
lea
ja
je
jae
jp
mov
lea
push
xchg
pop
inc
arpl
xchg
xchg
pop
sti
fistl
jae
jo
je
jle
mov
mov
jmp
bound
addr16
nop
and
sbb
jo
push
outsl
jbe
mov
in
lcall
xchg
pop
addb
pushaw
pusha
jb
mov
das
clc
jp
imul
xchg
pushf
sahf
pushf
cltd
xchg
mov
jnp
jl
pusha
push
nop
xchg
cltd
cltd
xchg
xchg
jns
imul
jno
test
movsl
mov
xchg
add
in
jg
pop
imul
ret
outsl
push
pusha
push
pushl
mov
mov
ja
xor
pop
imul
cmpsb
ljmp
xchg
pop
pop
push
imul
mov
clc
jmp
jl
xchg
fs
imul
pop
push
push
pop
popa
decl
jg
xchg
mov
mov
lcall
cmc
call
test
dec
dec
push
pop
pop
data16
mov
scas
movsl
lcall
cltd
mov
dec
push
ds
jge
mov
shll
inc
dec
push
pop
jg
decl
stos
stos
mov
stos
mov
xchg
inc
and
mov
mov
stos
xchg
je
dec
inc
inc
dec
pop
fs
xchg
cmpsl
mov
mov
decl
sbb
jo
ror
ret
jne
dec
ds
push
pop
mov
mov
stos
mov
dec
pop
sub
xor
mov
dec
mov
aaa
aaa
inc
inc
push
pop
je
xchg
stos
mov
mov
fwait
cltd
cwtl
pushf
jne
adc
xor
inc
jns
leave
fmul
mov
jae
inc
sub
data16
mov
mov
mov
sbb
xor
sub
ret
fst
lds
sub
pushl
dec
pop
ja
movsl
mov
rol
mov
movsl
nop
inc
or
sub
pop
push
xchg
mov
mov
decl
sub
dec
pop
jb
movsb
mov
rol
mov
test
and
sbb
loopne
mov
mov
imul
pop
js
stos
ds
mov
lods
jge
or
sbb
pop
lcall
sbbl
and
xchg
mov
mov
sbb
sbb
lods
int3
fsubp
cwtl
jae
aaa
daa
sbb
cmp
mov
leave
mov
mov
sbb
popf
mov
lods
andl
sbb
xor
popf
mov
dec
enter
scas
lods
test
or
adc
cmovns
loopne
xchg
jo
xor
push
sub
push
outsb
jg
decl
ror
ret
mov
cmp
dec
adc
sbb
pop
xor
out
into
jmp
push
and
dec
andb
mov
bound
adc
or
and
mov
mov
inc
sub
push
cs
popa
jge
mov
into
dec
lret
mov
push
mov
dec
add
pop
nop
mov
jecxz
mov
push
xor
dec
inc
pop
jns
mov
sub
lret
sarb
sbb
pop
add
pop
mov
jg
mov
sbb
xor
jp
mov
fimuls
mov
addr16
jmp
pop
sbb
mov
mov
insb
push
xor
and
inc
pop
jl
mov
into
rcl
int3
mov
mov
and
sbb
mov
loopne
lods
mov
xor
xor
ret
es
pop
jl
mov
mov
xchg
push
pop
sub
add
das
clc
in
ljmp
arpl
scas
mov
and
aaa
dec
pusha
jge
leave
into
sar
pushl
lea
sub
add
cmp
scas
lret
int
mov
xor
sub
mov
jg
scas
rol
into
lret
mov
das
sbb
cmp
stos
fcmovne
test
insb
out
jg
call
sub
inc
push
arpl
int
mov
dec
sub
int
addr16
aad
enter
push
cmp
ss
push
data16
jg
mov
push
sub
aaa
pusha
andb
sub
ss
mov
aaa
inc
push
js
cmpsl
aam
enter
pushl
and
xchg
mov
aam
mov
andb
cmp
inc
pop
outsl
test
iret
into
mov
xor
and
jno
lods
ror
mov
mov
inc
pushl
cmp
push
push
fwait
scas
mov
mov
dec
cmp
and
adc
push
scas
push
jmp
mov
mov
or
xchg
stos
mov
mov
push
leave
shll
or
ss
insl
xchg
fdivrs
dec
inc
inc
dec
fs
test
mov
int
scas
mov
fildll
sbb
push
insb
xchg
movsl
xchg
jnp
push
inc
inc
inc
dec
arpl
cmpsb
mov
shrl
sub
sbb
push
imul
mov
mov
gs
inc
inc
inc
dec
pusha
jne
movsb
dec
or
leave
mov
mov
push
or
push
sbb
cwtl
lods
mov
pop
dec
incl
sar
inc
dec
pop
outsl
xchg
or
cmp
in
pushl
cld
xor
jbe
movsb
jp
lods
mov
inc
inc
dec
pop
insb
test
fisttps
leave
shlb
and
xor
je
lahf
mov
mov
mov
dec
inc
inc
testb
cmpsb
mov
mov
sbb
inc
push
push
push
add
mov
test
test
dec
sub
sahf
push
std
jg
mov
out
iret
mov
dec
cmp
and
xchg
mov
jne
push
dec
inc
dec
pop
xchg
std
mov
adc
sarl
xor
sub
ret
or
ljmp
movsl
mov
lods
test
push
dec
dec
dec
je
lcall
arpl
in
cltd
addr16
dec
inc
and
fists
enter
xchg
jnp
pop
push
dec
dec
push
fs
mov
leave
shrb
push
add
mov
sbb
pusha
jae
cld
jg
mov
lea
pop
push
dec
dec
pop
push
xchg
mov
mov
push
dec
dec
xor
push
addr16
mov
rcrl
dec
push
pop
outsb
fdivs
insb
mov
jne
mov
imul
jg
cmpsb
xchg
test
pop
push
dec
push
popa
outsl
adcl
popf
insl
dec
push
dec
sub
dec
pop
insb
jle
movsb
xchg
test
cmpl
addr16
push
push
pop
arpl
xchg
ret
push
aam
push
call
daa
cmp
push
xchg
mov
xchg
xorl
gs
and
inc
enter
pushf
insl
push
push
dec
sub
mov
xchg
xorb
mov
lcall
pop
data16
mov
sahf
jbe
incl
xor
cmp
jp
pushf
mov
test
gs
pop
pop
dec
mov
lods
fadd
mov
pop
push
or
cmp
pop
push
rorb
jl
pop
pop
dec
lea
loope
ret
jbe
pop
adc
cmp
ja
cwtl
mov
jmp
jno
pop
pop
pop
cs
scas
mov
lods
xchg
jno
push
push
and
dec
xor
push
cltd
lahf
lahf
mov
push
incl
jb
int3
mov
test
insl
pop
pop
dec
xor
imul
xchg
popf
popf
mov
jb
pop
imul
dec
mov
ljmp
cld
test
inc
xor
mov
cltd
fwait
sahf
mov
jo
cmp
fs
pop
arpl
xchg
test
mov
push
cmp
orl
jns
arpl
outsl
pushl
pop
les
pushf
mov
nop
outsl
pop
push
dec
cmp
push
pop
push
lock
incl
fwait
xchg
mov
arpl
orl
test
fldt
fmul
inc
ss
insb
jp
xchg
loopne
lcall
imul
pop
add
ds
jle
xchg
sub
xchg
nop
sbb
aaa
outsl
addr16
mov
mov
rcll
je
pop
dec
cmp
ret
jb
xchg
js
lcall
add
gs
jg
fwait
lods
mov
in
out
mov
popa
pop
inc
cmp
push
pusha
push
lcall
decl
fdivp
imul
repnz
sarb
inc
aaa
aas
dec
push
jmp
in
push
mov
popf
pushf
xchg
mov
gs
mov
mov
clc
popf
jge
pop
push
inc
inc
jp
imul
cmp
xchg
xchg
dec
fwait
xchg
insb
mov
xchg
shl
fdivp
mov
stos
lcall
rcll
cld
filds
cltd
lcall
pushw
sub
jo
je
mov
enter
inc
js
inc
push
pop
cli
pop
insb
addr16
dec
xchg
xchg
les
outsl
push
push
ja
adc
loop
mov
std
pop
fs
js
dec
xor
xchg
popl
cmpl
xchg
cmpsl
scas
cs
je
dec
cmp
fidivs
orb
dec
outsb
insb
imul
cld
mov
or
mov
dec
addr16
dec
cmp
dec
ds
dec
dec
xchg
xchg
xchg
xchg
mov
push
jb
decl
lock
lods
mov
add
dec
aaa
cmp
jae
xchg
xchg
xchg
add
mov
cs
lea
je
xchg
je
jp
mov
mov
pop
dec
aas
dec
push
jl
test
rclb
push
jb
xchg
stos
or
bound
inc
dec
push
dec
roll
pusha
xchg
cs
inc
push
jb
mov
pusha
js
cld
mov
dec
cs
pop
fs
adc
add
xchg
js
push
xchg
xchg
jp
push
movsb
out
bound
inc
dec
push
pop
sarl
mov
xorb
out
adc
sarb
mov
adc
mov
pop
pop
outsb
or
pushl
push
mov
push
xchg
mov
sbb
std
mov
imul
ds
push
pop
push
test
lds
adc
jp
inc
push
das
jp
adc
out
mov
pop
dec
cmp
push
add
subb
pop
jno
ss
mov
mov
loopne
mov
ret
je
pusha
push
inc
inc
dec
in
outsl
jl
lds
cltd
xchg
shlb
insl
jbe
pop
hlt
jg
mov
movsl
xchg
jl
bound
inc
in
pop
pusha
imul
xchg
bound
push
call
mov
jo
pop
dec
aas
rclb
mov
in
in
lods
call
cwtl
movsb
test
mov
addr16
inc
in
mov
insb
inc
xchg
in
xorl
insl
inc
outsb
jbe
mov
cltd
mov
jg
dec
ds
push
push
pop
pop
cwtl
pushf
popf
dec
dec
or
push
js
imul
mov
sub
mov
mov
inc
push
popa
insl
jnp
popa
fidivl
mov
popf
cwtl
nop
mov
insb
jo
cmc
mov
xchg
popf
movsb
adc
outsl
sub
inc
dec
test
xchg
cwtl
rcrb
or
insl
jae
mov
cmp
shlb
pop
dec
inc
dec
push
push
pop
int3
xchg
xchg
decl
ja
xchg
mov
mov
pushf
mov
push
inc
mov
dec
push
nop
outsb
jl
cwtl
sahf
cwtl
mov
mov
xor
dec
icebp
orb
xchg
add
xchg
scas
sbb
arpl
or
loopne
outsb
jne
lea
sahf
xchg
xorb
dec
push
push
pop
lock
lcallw
imul
aas
push
ret
xchg
mov
mov
cwtl
ja
pop
pop
dec
inc
pop
add
lock
push
mov
out
xchg
leave
xchg
loopne
orb
lcall
arpl
inc
dec
into
outsw
jle
out
mov
imul
pop
xor
mov
insb
bound
inc
inc
dec
mulb
xchg
mov
outsl
je
xorl
xchg
popf
push
mov
movsb
fwait
test
subb
or
add
cltd
pusha
mov
add
jb
jl
push
mov
cwtl
insl
mov
gs
dec
inc
dec
dec
sahf
cli
xchg
or
jns
lcall
stos
out
mov
dec
inc
inc
dec
push
pop
pop
sub
lret
out
imul
mov
fcomip
scas
cmpsb
pushf
mov
arpl
inc
dec
push
mov
mov
js
xchg
push
jae
push
jp
jne
in
xchg
andb
aad
into
inc
dec
dec
outsl
scas
xchg
dec
sub
scas
sbb
outsl
jne
pushf
jmp
in
popf
jae
pop
push
inc
out
pop
gs
mov
popf
cmp
insl
jno
orl
lock
xchg
sahf
cmpsb
lods
mov
out
outsb
add
outsb
pusha
add
fbstp
dec
mov
lods
mov
xchg
jle
bound
inc
into
push
or
dec
lcall
mov
mov
aam
jmp
aam
mov
and
andl
cmpb
mov
xor
inc
inc
dec
shll
push
cltd
mov
sahf
lcall
movsb
mov
xor
cltd
subl
dec
inc
sbb
or
addb
jo
fwait
lahf
xor
jg
negl
stos
into
or
push
out
push
insb
jp
fwait
xor
fnstcw
jno
mov
js
dec
jo
in
inc
dec
dec
xor
mov
test
popf
push
mov
sbb
andl
xor
sbb
jne
pop
dec
inc
xor
mov
popf
xor
sbb
ljmp
jg
nop
cltd
mov
test
dec
inc
inc
dec
dec
arpl
cs
cmp
mov
dec
outsl
andb
insb
movsl
cmpb
gs
inc
inc
dec
push
add
mov
popl
mov
xchg
fwait
cmpsb
cmpsb
mov
rolb
dec
popa
xlat
inc
inc
les
mov
aam
mov
cwtl
jno
lock
scas
mov
xchg
cwtl
decb
addr16
inc
test
addr16
frstor
push
xchg
push
lcall
push
xchg
cltd
cmpsb
mov
mov
movsl
xchg
jge
mov
dec
push
pop
push
nop
popf
cltd
xchg
push
jne
outsb
in
clc
stos
push
jb
xchg
call
mov
lahf
loope
push
push
inc
dec
push
pop
insb
push
dec
xchg
mov
js
in
xchg
jo
jae
xchg
pushf
movsl
lods
shrb
fs
outsb
push
inc
inc
inc
dec
inc
jns
cwtl
xchg
aaa
fisttpll
ja
jo
mov
jge
ficompl
sub
call
sub
jb
jno
repnz
stos
dec
dec
mov
dec
inc
fwait
insl
jl
xchg
cwtl
mov
and
inc
lcall
add
cltd
movsb
mov
mov
mov
inc
inc
inc
ss
btr
dec
ss
jno
ljmp
xchg
pop
dec
inc
dec
dec
fisubl
jg
and
ret
xor
sub
jno
fcompl
push
fstps
cwtl
mov
pop
dec
inc
dec
inc
dec
jb
andb
subb
xchg
outsb
outsl
cli
mov
scas
mov
dec
inc
lcall
and
push
ret
mov
jnp
xchg
adcb
stos
insb
mov
nop
xorb
xchg
adc
orl
cmpsb
movsl
sarb
ja
jle
stos
mov
scas
cmpsl
sahf
lea
fs
dec
dec
repnz
fwait
push
cmp
xor
xchg
movsb
lods
mov
inc
aam
les
dec
push
sub
jae
aam
cwtl
nop
mov
clc
je
jle
lea
cmpsb
scas
scas
test
push
dec
dec
inc
adc
popa
dec
mov
sub
lock
je
js
mov
mov
jl
test
mov
dec
dec
dec
out
xor
xchg
xchg
out
dec
jne
test
pop
jno
movsl
xchg
sub
dec
cwtl
dec
dec
push
ljmp
cwtl
inc
push
jne
aam
cli
lods
mov
nop
mov
dec
lret
add
insb
shlb
xchg
xchg
into
mov
loopne
mov
in
mov
xorl
push
sahf
test
cltd
orb
lea
lahf
test
stos
cmpsb
lahf
nop
add
push
push
cwtl
mov
pop
xchg
sbbb
jge
mov
lods
test
sub
scas
scas
negl
push
dec
cwtl
pop
enter
xchg
sbb
adc
xchg
cmpsl
lods
stos
xchg
add
mov
imul
scas
mov
fldenv
add
orl
andb
dec
push
pop
imul
cmpb
jbe
cwtl
int3
xchg
mov
jmp
lds
add
dec
add
dec
and
cwtl
cwtl
jnp
mov
ljmp
fs
cmp
xchg
inc
mov
fs
test
jl
test
movsb
dec
dec
push
or
cwtl
lea
cwtl
out
pop
clc
push
shlb
jge
js
jl
pop
and
subb
pop
push
dec
inc
jl
xchg
lods
insb
js
sarb
pop
sub
jp
mov
add
xchg
mov
pop
push
dec
or
lods
arpl
mov
add
outsb
dec
orb
xchg
test
pop
jo
jp
dec
inc
cmpsb
dec
pop
gs
cltd
hlt
adc
mov
addb
mov
lcall
inc
inc
dec
test
push
js
test
aas
or
dec
insb
xor
mov
pusha
push
dec
inc
inc
stos
lea
dec
mov
call
jecxz
jae
mov
insl
popa
inc
mov
sub
sbbb
stos
push
or
xchg
popf
movsl
stos
dec
mov
bound
loopne
mov
movsb
popf
mov
pop
loope
xchg
jg
pop
je
fwait
mov
jno
add
jb
fiadds
dec
scas
sbb
dec
mov
sbb
js
adc
or
rcrl
push
inc
inc
inc
push
pop
imul
cmpsl
cmpsb
mov
fdivs
data16
mov
incl
imul
dec
pop
push
push
icebp
js
sarb
insl
jno
cwtl
scas
call
mov
cwtl
or
push
inc
aas
ds
dec
push
gs
or
xchg
orl
lcall
jb
push
dec
inc
inc
inc
dec
push
loope
aaa
in
lret
pushf
lods
scas
lods
cmpsb
cmp
outsl
mov
cmp
mov
cs
dec
inc
inc
dec
push
pop
insb
jnp
stos
push
or
jae
insl
jo
push
or
lcall
rcrl
scas
pop
addr16
xchg
push
stos
and
mov
js
outsl
jo
ja
xor
fbstp
sbb
dec
dec
push
pop
fs
or
movsl
test
movsl
mov
cmp
mov
xchg
xchg
xchg
movsl
add
pop
jb
arpl
pop
pop
arpl
or
mov
or
xchg
adc
lcall
sbb
imul
pop
pop
fs
jl
xor
mov
test
cmp
xchg
xchg
push
cli
fwait
mov
insl
push
fs
jb
inc
sbbb
jne
and
movsl
push
jle
jae
test
aas
mov
jne
xchg
xchg
jb
sbb
or
xorl
jl
jne
and
inc
cmp
fs
imulb
and
xchg
xchg
add
dec
sbb
jns
xor
add
add
or
inc
scas
mov
into
sahf
ret
jle
jns
jl
xor
mov
lcall
mov
jl
jl
out
push
pushf
inc
pop
or
jno
pop
inc
ret
adc
dec
add
mov
inc
loope
clc
add
and
sbb
cmp
addr16
mov
pop
dec
fs
addb
imul
sub
mov
push
pop
aam
xchg
adc
mov
jg
arpl
or
dec
subb
inc
or
jg
sbb
push
or
inc
mov
mov
insl
dec
pop
xchg
or
adc
and
leave
cmp
mov
inc
pavgb
cld
cmp
inc
jo
das
mov
xchg
mov
lahf
cmp
xor
add
movsl
add
mov
mov
mov
mov
lds
xor
xor
into
mov
add
cmp
and
mov
mov
xchg
xor
xor
and
xchg
xlat
xlat
lret
test
aam
aad
and
test
mov
adc
fcom
mov
mov
dec
push
incb
addr16
arpl
mov
les
ret
idivl
ret
jno
adc
pop
mov
inc
push
dec
int
mov
and
fcmove
test
rol
mov
cmpsl
loopne
mov
and
mov
add
fcoms
ja
jge
xor
or
mov
addl
stos
sub
stos
ror
mov
or
push
mov
jmp
icebp
mov
mov
mov
mov
fdivrs
ret
mov
std
mulb
ret
cld
shr
sar
int3
jge
push
cld
ljmp
jne
imul
jo
jo
imul
adcl
int3
fdivs
mov
sar
mov
jmp
enter
mov
ret
mov
cli
jl
xchg
bound
sub
and
push
sub
jbe
gs
cltd
repnz
out
test
aaa
fdivrs
mov
or
clc
pusha
add
dec
rcl
and
adc
cs
cmpsb
call
xchg
adc
divb
mov
mov
les
xchg
pop
mov
sti
lods
lret
out
pusha
add
fisttpl
push
dec
add
add
ljmp
add
add
jp
fnstsw
ss
sbb
imul
push
imul
fisubrs
push
sahf
ficomps
imul
iret
shll
hlt
inc
insb
es
insb
rcrl
outsl
enter
loope
fldcw
jne
jns
inc
jl
jg
cmpl
test
xchg
xorl
mov
mov
sbb
or
imul
xchg
mov
fwait
jl
insb
ss
in
mov
movsb
dec
cmpsb
shlb
adc
aad
shl
movzwl
mov
push
mov
jg
adc
je
mov
lds
mov
rcl
sub
sbb
push
mov
loop
cmp
push
jns
or
mov
xor
xchg
and
mov
arpl
jae
arpl
sub
popa
adc
aaa
cmp
sub
jne
dec
hlt
sub
bound
push
cmp
fcoms
scas
pop
xor
push
arpl
das
imul
jae
adc
sub
pop
fildl
ret
xchg
and
mov
push
push
das
xlat
test
popf
push
sbb
outsl
cmp
mov
push
rcll
cmpsl
rolb
mov
fadd
in
aam
leave
int3
shlb
addb
pextrw
inc
je
rcr
leave
ljmp
mov
xlat
not
fbld
rcl
sbb
inc
cmp
and
outsb
into
adc
enter
addb
jmp
mov
call
loope
leave
hlt
xor
test
xchg
in
mov
mov
pop
sbb
mov
lret
adc
loopne
jmp
repz
fisubs
mov
push
pusha
pop
cmp
xchg
mov
ror
repnz
into
mov
mov
or
ja
into
arpl
std
ror
rcr
addr16
mov
fldl
inc
mov
mov
ret
lock
pop
mov
in
push
xlat
aam
mov
mov
jne
les
add
shl
inc
fsubp
int3
rol
pop
or
enter
pop
mov
fiadds
stc
rcl
and
shrb
xchg
or
insl
push
mov
jmp
sbb
lahf
into
in
sti
jl
pop
into
pushf
add
imul
jno
insb
add
mov
or
mov
roll
add
fistpl
icebp
aam
ror
out
data16
xorb
ret
lock
mov
mov
stc
fidivrl
clc
outsl
cmp
sub
ds
ret
mov
add
loope
add
xlat
stos
cli
mov
push
into
imul
inc
hlt
ds
or
aad
sar
inc
pop
data16
iret
enter
add
or
pusha
stos
push
sahf
jb
sar
cmp
std
fmulp
in
mov
iret
ljmp
mov
scas
mov
in
iret
mov
cwtl
and
stos
call
xchg
cli
mov
shlb
rcl
leave
iret
rcrb
or
in
lods
shr
jo
mov
into
sub
inc
cmp
movl
inc
mov
and
or
aaa
jge
fnstsw
ds
sti
fldt
cmp
fs
xor
ja
loope,pn
dec
aaa
and
and
fs
push
push
out
pop
jae
mov
sarb
ds
jno
mov
lea
or
fsts
dec
mov
je
jb
pusha
or
aas
lods
and
outsb
xor
lcall
jp
xor
xor
notb
fldl
xchg
je
jle
ds
and
outsb
arpl
mov
inc
imul
fdivs
push
es
push
loopne
or
jbe
daa
and
xor
and
insl
shl
scas
cmp
mov
dec
gs
xlat
aas
lods
inc
cmp
sub
dec
outsb
out
popa
loopne
jae
loop
fmuls
jo
xor
pop
fsubl
enter
iret
inc
adc
inc
popa
jnp
jne
neg
and
aaa
add
mov
shll
or
ja
fs
xchg
or
ret
xor
dec
sbb
outsb
or
add
inc
adc
push
jb
repnz
push
inc
xor
ljmp
add
inc
inc
add
inc
cmp
inc
xor
aaa
xor
inc
xor
xor
mov
inc
inc
xor
push
inc
dec
dec
add
xor
xor
ss
ret
cmp
inc
inc
pop
or
adc
fidivl
jne
nop
fimuls
inc
push
les
sbb
xor
fwait
loop
pusha
cmp
loope
inc
mov
mov
and
subb
fisubrl
or
add
roll
adc
out
in
lods
mov
stos
adc
push
roll
and
add
inc
clc
mov
dec
dec
add
inc
bound
out
in
xor
popa
add
rorb
sbb
enter
pop
inc
mov
push
or
inc
fcoms
popa
imul
mov
mov
sub
sub
cmp
pop
sbb
or
gs
pusha
sub
xorb
pusha
sbb
lods
lea
xchg
mov
mov
sub
in
loopne
and
pusha
mov
incl
inc
sub
mov
pusha
int3
insl
sbb
add
inc
test
push
int
faddl
les
imul
cs
repz
push
xchg
roll
in
shl
iret
mov
push
outsl
push
cwtl
push
dec
das
ds
sub
js
sbb
push
out
add
jp
push
cs
outsl
xchg
std
es
rcl
sbb
add
push
inc
out
mov
pop
outsl
add
bound
xchg
inc
sbb
push
cs
jmp
inc
sahf
nop
add
mov
orl
mov
jae
or
add
call
out
enter
rolb
pop
mov
andl
test
jo
inc
fisubrl
fbld
cs
push
shll
fildll
dec
push
mov
outsl
js
jno
and
push
loopne
fnstenv
dec
enter
push
jmp
scas
movsb
loope
pop
inc
in
push
ljmp
shrb
pop
pop
sub
je
adcl
cmp
sub
bound
xchg
mov
add
jle
gs
js
mov
loopne
pop
adc
jo
loopne
add
sub
nop
out
adc
jne,pn
out
rcll
dec
jo
adc
sti
dec
push
sti
and
mov
add
cwtl
lods
pusha
std
ds
rorb
add
cmpsb
push
call
add
outsl
test
scas
pop
scas
dec
iret
xor
das
pop
mov
and
ds
repnz
inc
add
aaa
sbbl
scas
loopne
add
sub
add
ret
aas
enter
mov
loopne
adc
add
pop
jg,pn
adc
sub
outsl
sahf
nop
inc
js
mov
or
test
das
clc
inc
stc
jb
add
or
dec
pusha
or
dec
fiadds
add
jo
inc
rcll
jg
popl
mov
orb
rcll
pop
pop
mov
xor
scas
test
cs
lock
add
loop
leave
jo
dec
or
in
push
mov
cmpsb
mov
lahf
std
mov
adc
das
push
sahf
daa
sub
fbld
pop
jo
daa
sbb
rorb
shlb
iret
adc
mov
das
add
in
adc
adcl
cli
lods
xor
adcb
mov
in
sbbl
jp
into
add
scas
jbe
das
xor
mov
sbb
mov
ret
cltd
push
cmp
add
loopne
xchg
aas
nop
cs
xlat
add
mov
or
mov
and
or
pop
and
nop
pop
or
sub
and
add
andb
mov
add
add
cs
adc
mov
and
daa
nop
and
and
pop
push
pushf
inc
shlb
mov
leave
add
loopne
aad
sbb
cs
or
and
xor
andb
add
jo
add
add
nop
and
and
add
and
and
mov
in
and
xcrypt-ctr
cmpsl
fbstp
add
out
nop
mov
or
add
sub
mov
sub
add
add
cmp
andb
add
scas
pusha
and
jo
lcall
add
cltd
ljmp
call
mov
sbbl
add
and
mov
mov
or
inc
fisttps
loop
nop
inc
lcall
imul
enter
divb
mov
rcl
cmp
and
lock
jo
or
add
inc
jmp
or
subb
pop
loopne
popf
push
and
add
das
daa
nop
int
and
push
insb
orb
dec
lahf
pusha
adc
dec
iret
enter
mov
or
das
inc
mov
or
call
or
lahf
and
js
mov
scas
mov
lret
fadds
imul
dec
pop
or
or
or
je
dec
mov
iret
dec
out
lods
js
and
repz
cmp
pop
ds
xchg
lea
in
lds
lahf
imulb
push
adc
fists
mov
inc
ss
cli
jle
sbb
enter
lea
inc
incl
push
pusha
sbb
fidivs
push
adc
xlat
rcll
xcrypt-ofb
cmpsl
insl
pop
jnp
pop
pop
adc
pop
mov
mov
fnstcw
ss
in
push
push
pop
xor
es
and
sbb
mov
fnstcw
push
sub
push
adc
fstpt
testb
xlat
push
xchg
add
xor
test
inc
push
dec
pop
push
xor
out
push
inc
das
shrb
clc
cmp
jo
nop
sarb
subb
adc
inc
fldl
add
dec
dec
ds
movsl
out
dec
outsb
in
shrl
addl
dec
push
rcl
ds
jnp
in
scas
fdivl
sahf
xchg
push
mov
xor
push
adc
push
pavgb
mov
les
inc
xchg
xorb
int
mov
imul
jnp
push
push
shlb
xor
mov
in
sbb
clc
inc
mov
sbb
xor
pop
push
inc
pop
sub
adc
scas
cmp
in
mov
outsb
push
mov
lahf
rol
out
adcb
loopne
das
or
repz
add
jg
nop
or
ret
mov
add
testb
push
inc
sti
add
stos
jne
add
in
mov
cmpsb
inc
mov
decl
and
xor
outsl
js,pn
mov
ljmp
filds
in
fmuls
add
add
jmp
loopne
pop
das
lock
cmp
outsl
or
pop
cmp
fadds
aas
or
jb
sbb
shlb
and
andl
mov
or
or
mov
mov
push
stos
or
lock
sbb
mov
aam
xchg
jns
adc
dec
and
call
sbb
fisubl
and
pop
add
push
nop
jbe
and
cs
mov
and
and
add
pop
dec
repz
adc
cmp
aas
hlt
add
filds
jl
pop
shlb
add
mov
pop
out
xchg
push
and
incb
cs
mov
mov
xchg
inc
cwtl
cmpb
cmpsb
mov
inc
adc
pop
pop
cmp
mull
push
inc
or
mov
and
loop
xor
xor
lock
leave
and
sbb
xchg
push
enter
outsl
outsb
cmpb
into
call
pop
cmpb
jns
mov
fildll
push
rolb
popl
jl
xor
fidivrs
and
mov
js
push
add
sahf
mov
add
fdivrs
imulb
adc
scas
add
push
mov
mov
lea
add
nop
push
inc
mov
pshufw
ljmp
push
adcb
orb
out
inc
and
and
mov
rcll
push
andb
outsl
mov
add
inc
add
pop
add
mov
jnp
jg
cmp
sub
shrb
or
out
dec
in
mov
incl
es
cmp
shll
loopne
push
lock
cmpl
add
pop
js
jns
push
xchg
xchg
dec
xor
mov
pop
int
pop
mov
or
sub
add
les
xorb
sbb
jg
add
pop
pusha
add
ljmp
in
das
orb
insb
mov
or
loopne
rclb
nop
dec
ja
xchg
add
cmc
inc
sub
xchg
mov
outsl
and
dec
push
pop
and
orps
push
shll
push
leave
mov
push
mov
leave
sbb
pop
fs
sbb
add
out
in
out
dec
sahf
arpl
pop
pop
popa
pop
popa
in
jae
inc
inc
and
scas
in
inc
inc
inc
cs
scas
in
jb
dec
pop
dec
dec
xchg
cmp
repnz
push
push
add
iret
testb
push
inc
add
movntq
mov
inc
rorb
dec
repnz
add
dec
dec
jb
pop
jb
dec
dec
pusha
pop
jb
pop
pop
pop
nop
push
repnz
jb
push
rclb
pop
jb
pop
pop
push
jmp
pusha
pusha
and
mov
outsb
fcoms
jg
das
inc
pusha
addb
push
fldl
cltd
add
add
aas
aas
stos
push
popl
call
aas
orps
repnz
push
inc
cmpsl
cmp
jbe
cmp
loopne
rcl
mov
jl
xor
out
cmpsl
dec
aaa
fnstcw
cmpsl
push
lret
mov
incl
inc
mov
in
sahf
cmp
movsb
aas
mov
daa
sarb
sar
mov
and
jnp
scas
inc
loope
add
call
pop
das
mov
jo
pusha
cli
jg
stc
das
es
push
cli
pop
pop
push
pop
jns
cld
add
push
cmp
es
cld
jo
pop
pop
aad
and
sti
aas
lahf
out
fiaddl
mov
mov
daa
add
pop
iret
cmp
iret
mov
pop
pop
xor
jno
dec
call
pop
das
mov
sbb
std
jg
add
cmpb
loopne
add
add
and
push
aas
adc
das
mov
decl
lods
inc
jl
jo
add
sarl
lock
add
sbb
pop
xor
push
add
adc
add
mov
or
rorb
add
xlat
mov
inc
fnstsw
es
pop
inc
outsl
ds
orb
sbb
rorb
push
adc
adc
inc
add
dec
or
pusha
jo
es
push
push
ret
add
rcl
scas
ss
add
popf
and
pop
lock
push
imul
mov
outsl
shrb
adc
pop
cwtl
cs
das
cs
xor
loop
inc
xor
cmpsl
mov
ffreep
sbb
sbb
inc
add
inc
xchg
outsl
js
or
inc
xor
fadds
pushf
dec
push
adc
sarb
cmp
xchg
push
test
cmp
sub
enter
push
pop
inc
push
sbb
mov
cs
mov
or
cwtl
add
or
fs
lcall
or
or
add
iret
repz
sub
sub
iret
repz
adc
or
repnz
adc
xlat
rcrb
push
push
xor
repnz
imul
push
movntq
ja
push
and
out
sahf
cmp
sahf
out
cs
jns
out
aaa
ds
and
add
xchg
addb
dec
add
test
roll
out
clc
lock
clc
incl
pop
lahf
push
inc
dec
std
neg
das
fmuls
mov
and
jae
push
xor
data16
fwait
sbb
push
bound
mov
inc
sub
sbb
neg
jle
push
and
mov
or
sti
int
outsb
push
ss
andb
sbb
or
mov
xor
sbb
cmpsb
mov
xorb
push
ss
add
out
popa
xchg
decl
push
xor
aas
lret
xchg
scas
out
aas
stos
adc
shl
aas
aas
cmp
cmpsl
shrb
aas
mov
push
loope
pop
stos
jb
push
test
shlb
or
cmp
cld
add
xor
bswap
aas
incl
dec
mov
jae
dec
mov
shrb
sbb
fsubl
jecxz
shrl
out
pop
fbld
insb
pushf
pop
mov
outsl
lahf
pop
or
cmp
add
xor
push
or
cmp
pop
aaa
testl
dec
mov
ja
call
adc
call
sub
sbb
daa
out
xlat
test
cwtl
pop
movsb
fs
push
stos
imul
add
xor
push
into
ds
incb
shll
or
inc
mov
mov
jle
inc
mov
lea
jge
loop
shrb
out
push
loop
fisubs
loope
shrl
bound
pop
mov
insl
popf
pop
or
fbld
testb
cmp
add
dec
mov
jbe
dec
mov
jne
ljmp
sub
sbb
and
push
pop
cmpsb
xchg
push
test
cltd
pop
movsl
gs
push
add
aam
mov
jne
daa
inc
or
pop
sub
repz
ja
sub
dec
testl
mov
mov
cwtl
fadd
xor
jbe
orl
fsts
mov
pop
push
xor
cld
add
idivb
inc
add
pop
and
std
and
push
dec
ss
les
call
push
es
cmpsl
iret
push
cmovae
jmp
jo
jb
gs
ret
push
sub
sub
aam
pop
arpl
jns
mov
add
pop
or
cld
and
pop
pop
test
inc
jp
out
outsl
inc
ds
std
insl
flds
nop
fldt
out
adc
lcall
popf
xor
xchg
jbe
adc
pop
addr16
shrl
push
dec
addr16
and
das
xor
scas
sub
mov
es
mov
sub
or
push
out
sbbb
outsb
push
outsl
shlb
push
fnstenv
xor
repnz
xchg
push
dec
jno
mov
and
mov
iret
repz
fiaddl
out
xchg
into
loope
jae
dec
cli
inc
inc
imul
fadds
mov
out
popl
push
addr16
test
sub
les
push
popa
call
or
je
popa
jo
imul
jl
adc
jb
jae
xor
gs
push
aas
repnz
mov
pop
pop
dec
js
leave
adc
imul
adc
mov
sub
push
enter
fiaddl
mov
mov
adc
out
orl
pop
xchg
adc
repnz
push
fisubl
pop
repz
cmp
xchg
xchg
xchg
fwait
sarl
int3
and
or
repz
out
pop
dec
lcall
dec
and
out
cli
push
out
sahf
out
lock
sbbl
and
out
loopne
popa
mov
repz
jo
imul
out
shr
arpl
mov
sub
adc
loope
js
sbb
pop
imul
cmpl
dec
push
out
in
add
out
in
test
push
pop
jbe
repnz
out
or
mov
das
sub
daa
out
pop
dec
out
or
dec
jg
adc
dec
push
inc
xlat
out
inc
inc
aas
cmp
push
out
push
pop
popf
sbb
pop
icebp
idivb
fldt
add
mov
and
in
cltd
xchg
int
or
add
outsl
loopne
sub
add
xchg
adc
sub
push
imul
add
pop
xor
sub
push
xchg
push
add
test
pop
dec
test
outsb
ja
jg
push
and
outsb
jae
jb
popw
push
ss
and
jg
push
ret
dec
cmp
push
movntq
outsb
fs
pusha
js
js
leave
adc
inc
inc
push
jo
test
jbe
cmpsl
push
ss
sbbl
add
stos
inc
pop
and
pusha
cli
dec
fcmovb
sbb
sub
sbb
bndstx
adc
cli
cs
out
add
into
mov
pop
mov
and
sub
mov
sub
das
push
cmpsl
cs
out
orb
mov
push
fistpl
mov
pop
adc
mov
adc
movsb
stc
pop
pop
insl
sub
in
mov
cmc
stos
lahf
mov
push
jge
jnp
jle
mov
and
rclb
cs
inc
data16
insb
fs
jo
xor
daa
and
jae
mov
jb
dec
std
mull
inc
jb
and
sbb
cwtl
test
mov
scas
gs
shrb
into
outsl
jb
and
push
inc
popa
mov
shl
das
dec
adc
test
jne
jbe
shlb
rcrb
test
push
pop
mov
dec
adc
arpl
push
push
inc
push
bound
fidivrs
lods
into
insl
insb
jb
pop
inc
dec
addr16
js
adc
popf
push
push
jo
rcrb
or
fs
adc
xlat
fcmovnb
lods
rol
cmp
pop
add
mov
loope
add
cmc
pop
dec
je
pop
clc
or
push
test
jae
js
fsts
aam
shlb
mov
push
adc
jbe
or
in
iret
add
inc
jb
jns
test
in
out
pop
mov
inc
lods
cs
pop
push
ret
pop
inc
insb
pusha
aas
mov
test
dec
mov
aas
iret
shll
ss
lea
mov
pop
inc
in
xor
jbe
mov
lds
movsb
or
inc
ds
movd
adc
lods
fs
mov
mov
sbb
jo
mov
or
lock
jge
cs
push
and
movb
jle
pusha
pop
push
repnz
in
addb
xchg
call
addb
add
and
mov
imul
xor
mov
cs
and
sub
call
int
jp
xor
and
pop
sub
clc
add
into
mov
sub
sub
add
cmpsl
popa
filds
push
frstor
jno
inc
cmpsw
jnp
jo
loopne
adc
cmpsb
xor
pop
xchg
cmp
aaa
cmp
fimuls
lahf
out
mov
push
insb
mov
and
shrb
cmp
sbb
nop
cs
in
daa
cli
fimull
cmp
push
loopne
test
cmp
inc
jo
test
lea
fadds
loopne
or
insb
das
push
test
es
sub
out
je
fwait
dec
daa
pop
push
add
sub
or
sub
gs
mov
sub
or
xor
fidivrs
dec
mov
adcb
ds
ficoms
scas
fs
push
sbb
push
dec
push
sub
into
scas
or
mov
xchg
cmc
mov
dec
insl
mov
jo
pop
mov
inc
adc
das
cmc
jg
addb
addr16
fsubrl
mov
call
movsb
scas
push
push
in
call
orb
iret
vmovhps
adc
fisttps
stc
inc
ss
in
push
sbb
repz
fsubp
divb
stos
arpl
pop
pusha
push
cs
call
jle
lcall
ljmp
inc
insl
fs
popa
jb
popa
das
adc
into
push
verw
dec
add
fnsave
shlb
pusha
mov
mov
test
push
pop
outsl
ja
mov
fdivrs
adc
push
outsl
call
inc
xor
pop
sbb
repz
fiaddl
cmp
xchg
xor
push
jns
aam
push
sub
add
push
mov
inc
cwtl
lds
push
cmp
mov
sub
repz
fcmovb
dec
outsl
mov
ljmp
jl
jge
es
into
mov
mov
outsb
movsl
in
push
inc
xor
leave
sub
out
stc
sbb
stc
dec
outsb
jne
stos
xlat
ss
dec
pop
cltd
incl
cmp
out
nop
mov
and
cmpsl
push
jbe
mov
fwait
push
das
arpl
add
mov
adc
rolb
mov
sub
outsl
or
pop
xorl
lock
inc
or
cli
cs
add
push
imul
mov
xor
xchg
adc
popa
add
inc
popa
jl
out
decl
int
inc
dec
push
mov
ss
scas
in
xchg
inc
shll
sbb
fidivs
add
sub
jae
xlat
add
cmp
or
inc
add
inc
jnp
ss
out
sahf
call
aad
lahf
pop
fildll
or
fidivrs
cmp
jle
fisubs
push
inc
and
sbb
je
mov
scas
subb
mov
dec
dec
dec
fildll
dec
dec
push
pop
fadd
lds
xchg
mov
aam
or
xchg
out
lock
nop
scas
inc
cld
push
sub
insb
addr16
mov
push
inc
inc
pop
daa
fsubrs
mov
sbb
cmp
pop
fstp
xchg
aad
cwtl
and
xchg
cmpsl
gs
xchg
cmp
das
dec
inc
ret
add
scas
int
iret
jne
cmpsb
test
dec
ja
ds
mov
jge
int
test
mov
pusha
fistpl
sbb
clc
or
imull
dec
jb
bswap
sub
fdivrs
sub
adc
sbb
out
outsb
cmp
add
dec
and
jns
add
inc
icebp
mov
fs
or
push
dec
push
inc
inc
adc
or
mov
bound
mov
pop
dec
popa
add
outsl
adc
mov
addr16
dec
jne
orb
or
clc
incl
movb
std
inc
sub
jne
inc
pushf
jae
or
adc
jae
cmp
xchg
popl
ja
mov
push
jne
xor
mov
jae
push
adc
std
fidivrs
sbb
and
out
jae
jbe
inc
or
pop
pop
and
cmp
cltd
decl
sub
pop
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
and
inc
dec
inc
inc
push
inc
inc
ss
jne
mov
mov
dec
and
and
jle
push
push
sbb
es
mov
jbe
sti
imul
push
xor
cmp
sub
push
add
xchg
push
rclb
sbb
ljmp
aaa
xlat
jle
cltd
fidivrl
in
and
popa
arpl
out
mov
mov
push
ja
jno
outsl
lds
inc
enter
outsl
add
dec
push
jbe
adc
mov
inc
mov
mov
xchg
shrl
mov
or
xor
mov
out
call
jo
mov
sbb
fs
lods
adc
mov
ret
and
xor
in
insl
ss
pop
add
inc
arpl
adc
and
imul
pop
add
inc
jb
mov
pop
je
xor
pop
xor
lahf
sbb
mov
and
fnstsw
pop
pop
push
cmp
jne
jae
push
xor
sub
add
sbb
lods
cmp
and
mov
pop
hlt
sub
sub
and
popf
pop
xor
gs
pop
es
sbb
cmp
cmp
pop
fcompl
mov
outsb
ds
jle
push
dec
sbb
xchg
add
shrb
insb
inc
fucomp
and
ja
sub
cld
jmp
add
xor
fimull
leave
ds
leave
out
jg
sets
out
insl
fildl
aas
push
pop
jns
xor
sti
pop
insb
mov
insw
outsl
fs
push
iret
xor
pop
xor
insb
fs
loopne
jmp
cmp
aas
sub
addb
andb
int
mov
add
imul
push
popa
sub
sysret
insb
imul
pop
inc
cmovs
jbe
fnsave
cvttps2pi
mov
xor
add
jo
add
shrb
rcl
jl
in
inc
subb
xchg
mov
data16
jmp
dec
inc
jno
jno
pushf
fdivs
mov
mov
cmp
js
das
fmulp
into
and
mov
outsl
stos
push
jne
xor
into
test
push
push
add
pop
test
pop
pop
add
push
outsb
inc
add
xor
cmp
push
sub
enter
push
push
pop
push
and
fimuls
popf
aas
add
pusha
push
add
out
insb
and
inc
and
xor
or
loopw
cmpsb
mov
and
outsb
subb
add
pop
scas
sbb
push
faddl
dec
scas
cmpsb
push
mov
jo
add
ss
push
rolb
sbb
outsb
jl
or
mov
and
pop
and
mov
movsb
mov
mov
mov
mov
je
cs
test
inc
mulb
pop
or
clc
inc
aaa
test
add
pusha
pop
sbb
int
std
repz
and
inc
push
gs
inc
add
andb
jg
dec
sbb
scas
mov
sub
adc
pushl
pop
or
and
in
pop
jb
sbb
dec
das
js
das
nop
add
and
test
add
push
xchg
push
xor
mov
movups
outsb
mov
pop
das
xchg
sub
lock
inc
cmpsb
lcall
outsl
fstl
mov
mov
lahf
add
pushf
pusha
js
xchg
daa
xor
das
clc
pop
dec
sbb
add
or
mov
fmull
inc
lahf
pusha
or
daa
push
enter
lahf
xchg
cmp
enter
call
add
mov
cwtl
lahf
cmp
jb
push
xor
pusha
lahf
mov
push
enter
pop
or
outsb
xchg
add
mov
or
in
mov
or
xchg
daa
xor
and
or
pop
mov
mov
xchg
mov
pop
in
nop
outsl
mov
inc
dec
xor
or
lahf
inc
cs
xor
or
or
daa
cwtl
xor
push
xchg
subb
or
rol
sbb
fldl
lock
loopne
jg
or
xor
or
push
push
sbb
pusha
or
js
inc
and
jo
nop
out
mov
dec
jecxz
inc
push
dec
xor
jbe
jb
out
or
repnz
out
inc
or
pop
scas
xchg
jo
cmpb
nop
or
jne
cltd
and
xchg
mov
add
add
psraw
jb
push
xchg
daa
fcomp
push
repnz
push
push
mov
subb
dec
rclb
scas
or
add
in
jbe
jb
seta
daa
and
pop
jo
sub
mov
decl
sub
fsubs
pusha
mov
lahf
in
mov
cmpsl
or
sbb
xchg
adc
js
push
shrl
daa
nop
ficoms
add
add
add
jnp
mov
shlb
fdivrl
ror
xchg
pushf
inc
pop
sbb
xor
enter
xchg
lock
push
addb
es
aaa
mov
or
outsl
stos
shlb
or
inc
fldt
pop
outsl
and
xchg
daa
sub
add
js
scas
pop
adc
outsb
mov
lahf
xchg
cmpsb
nop
pop
test
rcrb
rcrb
in
adc
xchg
daa
sub
ret
fdivrs
aaa
pcmpeqd
test
outsb
dec
adc
js
or
sub
cmp
dec
and
scas
dec
push
mov
xor
outsl
adc
adc
cmp
pop
leave
mov
pusha
cmpsl
jne
jns
add
hlt
add
outsl
or
xchg
adc
in
sbb
sahf
cld
inc
adc
push
pop
or
and
test
daa
sarb
adc
lahf
xchg
sub
add
daa
nop
mov
xchg
lahf
xor
or
outsb
dec
dec
and
push
xchg
sub
sbb
push
lahf
pop
sahf
pop
mov
jo
sbbb
dec
test
add
rolb
in
clc
adc
and
fldt
and
mov
sub
add
cmp
adc
lahf
xchg
daa
cmpl
lock
ret
outsb
dec
push
or
cmpsl
sub
cmp
sbbb
push
addr16
sub
jo
and
xchg
inc
es
sbb
xchg
das
loopne
xchg
push
jb
add
ja
ja
mov
daa
push
inc
push
xor
add
shlb
adc
mov
adc
popf
out
lock
adc
bound
sarl
dec
mov
sub
inc
add
add
sbb
inc
scas
nop
or
and
stc
loope
ds
add
sbb
call
and
adc
sarb
and
scas
nop
dec
pop
adc
sbb
adc
scas
loopne
sbb
sbb
daa
daa
fstpl
cwtl
mov
mov
iret
dec
jg
dec
or
loopne
stc
cmp
mov
psadbw
add
movsb
fwait
cmp
daa
movsb
dec
xor
or
cmp
jg
mov
lock
js
lods
nop
cmp
or
out
fsubrl
mov
add
add
in
pop
jo
das
out
dec
cli
pop
add
nop
mov
dec
fsubs
add
pusha
lock
add
in
ljmp
sub
lcall
enter
cwtl
loopne
sarb
cmp
add
mov
cmpsl
adc
add
bound
xor
lcall
mov
dec
cmp
in
mov
mov
in
mov
xchg
push
dec
mov
dec
adc
sub
add
ds
and
jge
punpckhbw
add
push
enter
pop
or
in
jns
mov
sahf
mov
lcall
add
cmp
fmuls
loopne
bound
clc
aas
cmp
fildll
pushf
adc
pop
scas
nop
imul
nop
push
leave
adc
mov
fstpt
subb
test
and
jbe
xorl
jg
push
pop
push
mov
js
outsl
mov
lea
push
cmpsl
push
test
test
xor
pop
ja
ja
push
add
push
add
sahf
out
jo
jle
mov
jns
out
lcall
sahf
mov
les
sarb
out
decl
or
lahf
out
stos
adc
iret
repz
adc
adc
inc
cmp
repz
push
adc
iret
rep
pop
jp
mov
repz
sbb
cmp
repz
rcrb
repz
outsb
ljmp
test
stos
sbb
xchg
dec
and
inc
into
lock
lcall
stos
in
xchg
and
stos
nop
stos
mov
jb
stos
lods
stos
mov
xchg
and
stos
in
repnz
sahf
out
jo
decl
push
push
sbb
jns
out
sub
cmp
inc
out
sahf
out
push
adc
sahf
out
sahf
jo
jle
mov
jns
out
lcall
sahf
out
les
rcrb
out
sahf
loopne
out
push
cld
pop
cmp
sarl
and
add
sahf
lods
das
jo
jg
jae
outsb
dec
cvtps2pd
mov
outsl
rcrb
pop
mov
fisttpl
clc
sahf
in
mov
es
mov
inc
into
fsubrl
add
or
es
xchg
rolb
mov
mov
mov
enter
loopne
push
enter
scas
inc
outsl
push
mov
sbb
jb
dec
xor
and
and
nop
enter
test
rclb
and
call
sub
cmpsb
scas
dec
dec
cmp
pop
or
fcmovne
repz
push
das
lock
popf
mov
xchg
das
lahf
stos
scas
scas
pop
and
fadd
dec
add
and
mov
pop
add
out
inc
cmpsb
mov
or
mov
sub
jns
xchg
push
xlat
repz
mov
add
iret
push
addl
push
scas
sbb
mov
xor
dec
mov
cmp
xchg
and
lahf
mov
mov
push
aas
nop
ja
dec
int3
xlat
filds
or
add
push
mov
mov
mov
push
inc
dec
loopne
mov
or
add
mov
cmp
cmp
scas
cwtl
movsl
xor
pop
ja
fisttpl
in
loopne
add
in
sub
mov
mov
pop
leave
adc
iret
lock
faddl
xchg
sub
xor
push
mov
add
dec
sub
mov
arpl
js
scas
mov
mov
fsubrp
mov
lock
push
fsubrp
inc
mov
and
cs
cmp
dec
cmpsb
nop
iret
or
sub
dec
dec
jae
push
add
popf
out
movsl
push
mov
xchg
out
sahf
mov
mul
mov
add
or
cs
mov
jbe
mov
clc
xor
push
add
pop
imul
outsl
pop
jp
xchg
dec
dec
cmpsb
pop
cs
bound
fdivs
outsl
enter
divb
jg
jg
pop
lds
adc
das
in
cltd
jbe
dec
sub
shl
or
js
dec
leave
xchg
das
nop
das
jo
cld
mov
push
add
adc
seto
cwtl
mov
mov
mov
fsubrl
mov
jg
and
adc
aas
or
adc
sbb
rcll
rorb
mov
clc
cmpsb
nop
iret
in
jo
add
pushf
fmull
bt
jb
fildll
xorb
adcb
mov
xor
and
insb
add
push
jb
clc
jbe
sub
rorl
jg
xor
mov
leave
adc
xchg
xchg
addr16
addb
in
add
cmp
out
shlb
mov
push
movl
popa
dec
sbb
jo
leave
xchg
sbb
xor
jo
out
fmuls
mov
mov
jbe
push
pop
das
fsubrs
rclb
pop
movsl
pop
push
enter
decl
hlt
mov
mov
fnstsw
pop
mov
iret
iret
mov
jp
mov
pop
jb
pop
clc
shlb
inc
cs
inc
loopne
adc
dec
jo
cmpsl
leave
and
cwtl
xor
nop
push
inc
mov
sub
shlb
add
pop
enter
ss
push
cmp
sbb
outsb
inc
ror
iret
xor
scas
in
dec
in
jnp
mov
in
mov
int
in
in
fdivrs
stc
mov
add
sbb
in
xor
mov
pop
mov
jge
dec
popf
loopne
mov
mov
fisubs
mov
jns
push
rcrb
fucom
jns
out
call
sarl
and
mov
iret
repz
sub
xor
sub
dec
sub
repz
push
sub
insb
sub
ja
subb
jmp
cwtl
xor
cltd
dec
sbb
cmp
das
mov
mov
out
mov
sbb
jns
out
pop
daa
or
sahf
inc
or
pop
or
sahf
out
insl
or
jns
out
xchg
adc
sahf
mov
rcll
adc
sahf
out
fstl
xor
loopne
into
pop
mov
in
sub
mov
movsl
mov
inc
mov
jmp
ficoml
adcb
xchg
sub
popf
pushf
pop
mov
outsl
js
lds
in
or
add
dec
jb
adc
adc
mov
adc
subb
jb
mov
call
nop
dec
scas
loopne
add
sbb
sub
push
add
jns
out
add
dec
sahf
out
sahf
add
insl
iret
repz
jne
push
or
cmp
or
iret
repz
in
jbe
into
vaddsubpd
fldt
jns
mov
icebp
scas
cld
iret
pop
shr
push
push
loopne
or
sbb
and
rorb
sub
dec
pushl
cmp
js
adc
mov
mov
xchg
decl
scas
fdivs
test
add
cmp
jae
mov
fbstp
repnz
jg
shrl
dec
scas
nop
out
nop
inc
dec
out
divb
cvtdq2ps
fisttpll
add
jl
xchg
xchg
fisttps
inc
sub
sub
in
fs
xadd
aas
push
int3
sbb
pop
jg
push
sbb
or
ret
imul
scas
nop
dec
dec
sub
inc
scas
nop
dec
dec
dec
clc
pusha
lds
dec
dec
push
push
js
orb
leave
in
mov
cwtl
xchg
es
pop
enter
and
scas
loopne
enter
lds
lock
scas
ret
imul
aaa
pop
inc
daa
inc
jg
sub
pop
test
pop
add
cmp
aas
mov
dec
fmuls
jg
jg
leave
add
repz
mov
in
out
or
dec
ljmp
inc
xchg
xchg
les
cltd
xchg
inc
roll
mov
inc
lahf
call
repnz
dec
add
in
sbb
loopne
xchg
pushf
jmp
inc
nop
cwtl
push
adcb
add
notb
nop
inc
popa
cmp
pop
mov
pop
aas
in
push
enter
mov
jb
inc
shlb
xor
rcrb
add
cmp
sbb
fists
inc
sub
push
leave
xchg
lock
inc
xor
pop
in
push
jb
in
pop
sbb
adc
push
jb
lds
mov
pusha
cmp
adc
nop
push
jb
sub
rcr
fwait
rcrl
mov
push
mov
fists
rcrb
and
pop
xchg
rclb
dec
adc
imul
jns
jle
pop
ds
dec
arpl
fcompl
addr16
nop
mov
lds
nop
jo
xchg
pop
and
pop
rol
lock
int3
sbbb
cmp
sbb
scas
sbb
insb
xchg
push
xor
inc
dec
push
scas
nop
dec
outsb
scas
pop
jo
dec
scas
nop
dec
cwtl
nop
cwtl
pushf
pop
and
pop
enter
adc
shlb
fwait
jmp
jg
add
cmp
lds
xchg
mov
jbe
inc
dec
pop
das
pop
pop
and
scas
pusha
dec
enter
bound
mov
cmpxchg
pop
pop
xor
pop
jp
pop
jb
adcb
cmp
inc
decl
cltd
mulb
or
pusha
dec
or
xchg
popf
out
xor
jg
ret
enter
int
mov
out
jbe
pop
rcr
lret
push
jmp
add
cwtl
repnz
xchg
dec
in
enter
dec
or
adc
lock
mov
dec
leave
and
jns
outsl
iret
xchg
fsts
xor
mov
addb
mov
test
mov
jo
or
push
ficomps
mov
dec
jns
pop
das
das
pop
leave
jmp
jno
jns
jns
jg
leave
fwait
leave
test
jns
leave
vpsrlq
loope
jns
jns
out
leave
std
leave
or
sbb
pop
jns
jns
lret
inc
lret
out
sahf
adc
insl
adc
jns
mov
push
xchg
lret
and
rorb
pop
xor
cmp
dec
pop
shlb
out
or
lret
dec
pusha
inc
ss
and
mov
push
cltd
lret
outsl
shr
into
adc
mov
xchg
outsl
mov
jo
leave
adc
loopne
sbb
jbe
mov
nopl
mov
int3
pop
popl
jb
pop
jb
lock
cltd
inc
pop
jb
and
pop
mov
cmp
int3
lcall
cmp
ror
daa
push
enter
loopne
aaa
aad
or
int
or
rorb
sahf
pop
int
dec
jg
and
int
inc
add
dec
pop
push
dec
dec
dec
cmpsb
nop
dec
nop
cwtl
mov
scas
mov
push
inc
mov
mov
add
dec
shlb
pop
jb
pop
clc
inc
and
cs
inc
pusha
dec
sub
cmp
jae
popf
mov
mov
shrb
lahf
daa
and
inc
movsl
push
cmpsl
mov
add
scas
sbb
inc
dec
and
adc
dec
xchg
pushf
pop
and
js
pushf
pop
and
xchg
pushf
pop
and
pop
and
fcmovnbe
lret
pop
ja
test
test
dec
aas
push
fimull
mov
jg
rclb
add
es
call
mov
es
cmp
leave
inc
mov
or
sbb
aaa
ret
sub
dec
add
iret
or
xlat
scas
nop
popa
scas
jo
dec
cwtl
and
pop
and
dec
cmpsb
nop
xchg
adc
dec
scas
nop
cmp
scas
pushf
mov
mov
enter
fcomp
add
enter
sub
xchg
sub
push
adc
popf
sub
js
xchg
xor
and
shrl
adcb
xchg
sub
call
pop
xchg
push
adcb
addr16
and
das
pop
pusha
jae
jg
dec
push
aam
pop
pop
and
scas
pop
insb
stos
scas
mov
es
mov
fldl
clc
sbb
or
push
fiaddl
push
pusha
push
js
nop
imul
ljmp
movsb
shl
jl
nop
mov
out
jecxz
xor
rcl
mov
fdivs
in
sbb
sarl
adc
rcrb
push
and
pop
inc
cwtl
out
jmp
pop
xor
jns
push
pop
gs
add
enter
dec
inc
xor
pop
enter
sub
xchg
inc
nop
pop
in
sub
mov
xchg
sub
jb
xchg
xor
push
dec
mov
pop
les
int3
mov
dec
mov
sbb
adc
das
adc
mov
cmp
in
lds
dec
push
lcall
in
mov
mov
pop
pop
xchg
cmp
jb
pop
or
jb
push
loopne
scas
cmp
in
leave
lods
movsb
rcrl
mov
leave
fcom
mov
jb
cld
dec
rclb
aam
or
mov
inc
aam
adc
pop
fs
in
sub
push
xchg
sub
mov
xor
fcom
in
inc
enter
cmp
sbb
mov
daa
jg
leave
adc
in
lds
ror
std
ljmp
test
aad
loopne
and
cwtl
pop
or
cmp
cmp
jb
xor
pop
pop
pop
sub
filds
mov
aad
mov
rclb
xchg
sub
inc
dec
cwtl
sub
in
sub
sarb
movsb
into
adc
inc
xlat
shlb
push
add
pop
mov
sarb
in
sbb
jmp
add
bound
cmp
adc
test
dec
js
daa
push
add
decl
push
pop
dec
scas
nop
imul
nop
clc
mov
jb
out
cmp
bound
shrl
push
jo
cltd
mov
mov
xor
das
inc
fsubs
nop
and
scas
or
arpl
arpl
pushl
dec
fs
push
enter
mov
test
data16
mov
push
dec
add
daa
daa
fldcw
jne
jecxz
fs
jns
xchg
insb
ss
lods
push
jp
in
ds
xor
cmpsb
cmp
jbe
mov
es
cmp
jnp
xor
roll
test
mov
jb
aam
xchg
cmpsb
cmp
ficomps
sahf
add
mov
fdivrl
ja
orb
pusha
xchg
sbbb
into
add
stos
ret
cmpsb
shrl
or
and
inc
outsl
jne
xchg
jo
xor
add
or
or
mov
push
and
mov
xor
jle
adc
add
sub
add
es
outsl
insb
inc
cmp
jl
xchg
jb
add
sub
xor
push
mov
in
mov
pushf
jb
ss
fnstsw
sbb
fisttpl
fsubs
and
loopne
pusha
mov
jl
fildll
xor
insb
push
outsb
out
movsb
lea
jle
mov
and
xchg
xorl
sbb
insb
mov
repz
add
or
push
dec
nop
popa
in
sub
data16
jb
fs
jne
in
sbbl
xlat
mov
sbb
outsb
ss
dec
adcl
add
dec
inc
inc
loopne
bound
sbb
cltd
add
sbb
push
ret
mov
sub
mov
sbb
insb
push
loopne
mov
aaa
popf
int3
mov
icebp
xor
xor
addl
or
sahf
imul
sub
and
jle
stos
add
divb
inc
enter
sbb
fcmovnbe
lcall
pop
push
add
leave
nop
push
xorb
les
jge
cli
dec
shlb
out
bound
push
outsl
xor
aad
pop
imul
pop
xchg
mov
xchg
adc
jns
xor
int3
nop
mov
test
push
add
xchg
sahf
mov
imul
sbb
roll
in
push
push
jbe
dec
imul
lcall
ret
andb
and
imull
es
movl
dec
sbb
mov
setl
je
xor
xchg
push
pop
inc
orl
jle
mov
pop
ss
cmp
mov
and
inc
and
ret
nop
jns
inc
add
rorb
xchg
shlb
add
loopne
mov
adc
rol
int
inc
mov
push
inc
xorl
ror
out
outsb
add
testl
rol
dec
sbb
aas
jmp
mov
pop
ja
jne
push
adc
shl
cs
xchg
mov
add
mov
pop
xchg
add
mov
or
inc
cmp
das
jae
xor
xor
cmp
add
lea
lret
test
inc
addl
xchg
push
fcoml
ret
movsl
loopne
lret
std
cmp
mov
lcall
clc
sub
cmpsl
sbb
pop
xor
loop
xor
cmp
mov
push
and
add
rcl
cli
fs
mov
add
push
xchg
pop
xchg
add
rolb
loop
xchg
lods
ds
pop
mov
out
sbb
jae
jb
jae
cmp
inc
sbb
jno
data16
icebp
test
mov
insb
adc
sbb
shl
mov
sbb
call
sbb
sbb
and
cmp
dec
adcl
push
dec
pop
jo
cwtl
mov
sbb
inc
xchg
add
or
mov
sbb
dec
inc
push
rcll
pop
pop
dec
inc
sbbl
jp
mov
arpl
mov
push
fisttpll
xor
fnsave
mov
enter
mov
and
inc
in
or
fdivr
imul
mov
sti
sbb
adc
inc
add
adc
pop
iret
dec
insl
pop
lds
sub
cmp
jmp
rol
cs
mov
movsl
dec
or
inc
jne
add
sbb
adc
dec
inc
rolb
outsl
add
and
xchg
ret
lock
mov
pushf
cld
lret
loope
loopne
jne
jns
or
mov
add
cmp
pusha
pop
jnp
lock
inc
aam
nop
dec
dec
test
lret
andb
push
push
mov
push
xor
mov
test
pop
shlb
orb
sbb
dec
or
sbbl
cmp
aas
pop
sub
cmp
rorb
imul
add
or
loope
insl
incl
inc
in
fisubl
jb
push
mov
push
xor
push
sub
add
cli
cmp
mov
test
push
insl
xor
jno
popf
sahf
inc
push
push
mov
xor
xorl
add
call
test
jl
das
and
adc
or
imul
push
lock
add
xor
mov
idivb
push
add
test
and
loopne
mov
adcb
js
inc
imull
and
sbb
sub
ljmp
xor
push
fdiv
mov
inc
insb
xchg
incl
inc
mov
jbe
jb
test
pop
inc
sub
push
mov
sub
movsl
adc
ja
lcall
push
divl
adcl
push
xorb
cmpsb
sub
test
inc
xchg
inc
testl
jnp
test
adc
aam
inc
ret
in
inc
int3
fmull
mov
jbe
loop
fbld
push
sub
sbb
nop
sbb
rolb
xchg
pop
cmpsb
add
or
dec
push
xor
fstps
popf
add
sbb
mov
aaa
jl
dec
jb
scas
and
push
pop
jns
movsb
cmp
fisttpll
inc
sbb
jecxz
xor
pop
xchg
xor
inc
movsl
xchg
push
cs
sbbb
add
loopne
testl
dec
popa
mov
loopne
lods
push
jne
xchg
and
movsb
movsl
loopne
cmc
ljmp
arpl
and
adc
push
shll
cmp
cmp
addr16
push
or
mov
push
jno
dec
xor
ja
add
int
das
inc
cmp
dec
or
je
imul
lret
dec
daa
pusha
scas
filds
inc
pop
and
mov
xchg
jbe
jbe
fs
test
and
jbe
fisttpll
arpl
movsb
mov
jo
push
cmp
bound
push
xor
pop
sub
int
mov
lahf
jg
outsb
jo
sti
into
mov
mov
push
mov
mov
dec
xor
mov
jns
mov
jnp
pop
test
aas
rcll
mov
repz
xor
cld
push
dec
dec
dec
dec
lahf
sbb
pop
imul
xchg
and
add
imul
jl
jns
inc
jg
push
dec
dec
dec
fiadds
push
jmp
mov
adc
pop
sbb
or
xor
imul
or
mov
inc
inc
push
inc
push
lds
add
push
or
mov
jbe
jns
pop
sbb
outsl
push
dec
inc
dec
dec
push
push
jo
sub
rol
sbbl
mov
jmp
add
and
outsl
sbb
cmp
add
push
mull
add
les
pop
xchg
fsubrs
testl
mov
fsubs
jge
call
add
jae
lods
mov
lods
adc
rolb
mov
and
lret
scas
or
ret
stc
int3
pop
int3
mov
xchg
test
inc
pop
lret
rorb
pop
sbb
xchg
add
adc
inc
sbb
xchg
stos
pop
je
dec
popf
addb
cmp
sbbl
and
fisubrs
in
daa
inc
jne
data16
sbb
fisubrl
scas
add
mov
lcall
popa
aas
mov
xor
add
imul
test
imul
shlb
and
xor
and
js
pop
or
into
cld
xor
mov
xchg
icebp
mov
push
xor
fsubrs
mov
mov
pop
xlat
movsl
adc
iret
addl
movsb
cmp
insb
lods
mov
push
stc
adc
add
stc
test
and
loop
mov
inc
aas
adc
and
mov
mov
add
pop
inc
dec
inc
movsl
mov
je
ja
add
or
popa
pop
sub
add
push
or
add
cmp
out
mov
lds
push
push
push
lret
mov
shll
popa
clc
test
cmpsl
adc
cmp
jo
cmp
dec
jge
clc
lahf
mov
inc
imul
xor
push
mov
fadds
jbe
jae
add
xor
xor
xor
popf
mov
xchg
scas
lret
fwait
sbb
adc
sub
testb
cmp
xchg
xchg
and
lock
jg
add
push
sub
and
mov
js
jo
xchg
push
xchg
pop
mov
and
mov
push
mov
mov
and
dec
pop
push
mov
in
pop
jl
adcl
jbe
pop
and
gs
mov
push
push
xchg
popf
dec
repnz
push
fmull
sbb
mov
jle
sbb
rorl
hlt
jae
xor
xchg
xchg
in
mov
adc
jb
dec
fldenv
inc
inc
rclb
jns
add
or
in
pop
push
pop
mov
fdivl
stos
mov
into
xor
xchg
cli
add
lock
pop
pop
push
and
push
mov
xchg
dec
in
xor
adc
sub
inc
push
xor
add
movsl
imul
jbe
into
mov
push
add
dec
std
cmp
jae
xorb
xchg
mov
jae
adc
inc
dec
inc
jnp
jo
jmp
rcll
rol
imul
pop
pop
inc
ljmp
mov
push
call
repnz
aas
dec
cmpsl
add
test
pcmpgtb
push
and
xor
mov
and
push
push
add
xor
cmp
pop
jbe
adc
adc
leave
outsl
and
push
xor
imul
pop
sbb
andb
pop
push
push
cmp
and
jns
imul
inc
adc
cli
pop
in
or
lcall
add
je
rol
jo
mov
aas
stos
push
lods
and
movl
add
insb
mov
dec
dec
xchg
xor
into
sub
je
and
jmp
xchg
mov
and
adc
jo
cmp
pop
fmuls
testb
stos
or
lds
bound
gs
push
outsb
imul
jae
fmuls
pop
lock
sub
jne
rorl
dec
and
mov
int3
rclb
push
push
dec
popf
je
inc
movd
add
je
aam
mov
shll
pushf
outsl
sbb
mov
jae
sbb
add
and
and
das
xchg
inc
movsl
out
xchg
sub
or
or
loope
push
or
ret
ret
dec
add
pop
mov
mov
dec
int3
enter
jg
sub
inc
and
fs
xchg
filds
sbb
sbb
pushf
idivb
and
push
das
popa
dec
xor
add
or
mov
add
jns
xchg
ror
push
cld
cs
inc
inc
repnz
xor
aam
ss
mov
mov
xchg
ljmp
mov
test
or
scas
fwait
int
mov
adc
cmp
iret
inc
loopne
mov
sbb
imul
test
pop
test
repz
out
or
insb
into
testl
mov
mov
outsb
mov
push
and
adc
inc
aam
mov
dec
push
aaa
or
or
push
dec
pop
xchg
push
movb
mov
xor
iret
imul
sub
ljmp
or
aam
fstps
adc
jecxz
scas
mov
cmpsl
int
ud0
pop
fcom
ficompl
rol
jecxz
mov
lret
into
in
stc
fbstp
lret
mov
mov
stos
pcmpgtd
pushl
mov
into
jmp
mov
mov
pop
sub
mov
mov
mov
ja
loopne
int
mov
into
sbb
mov
mov
es
fs
ljmp
enter
lret
mov
ret
jmp
push
ret
lret
addr16
std
adc
insl
pop
cs
inc
push
push
mov
aad
inc
inc
add
push
inc
test
push
push
dec
insb
call
rol
iret
lock
and
push
jae
leave
iret
fwait
incl
sahf
jo
outsb
add
into
fcmovnbe
idiv
mov
cs
add
sub
jl
pushl
mov
mov
mov
mov
sbb
rcl
fimull
int3
sahf
out
sahf
cs
movsb
test
cmp
sarl
mov
dec
pop
jo
adc
or
daa
cs
scas
fs
jmp
into
rcrb
out
mov
mov
stc
daa
push
jmp
jb
pop
jmp
jmp
dec
pop
add
pop
test
dec
pop
mov
int3
lea
andb
es
mov
rcll
push
or
cli
and
mov
push
sbb
aas
pop
or
or
jo
jmp
stc
push
orl
iret
in
mov
jg
daa
test
xchg
inc
mov
cwtl
push
push
mov
add
rolb
adc
cmp
scas
out
dec
inc
inc
and
add
ja
pop
inc
add
lods
mov
orl
add
inc
enter
les
inc
adc
icebp
mov
adc
mov
jg
addr16
decl
stos
mov
push
mov
xlat
das
dec
xchg
add
les
add
push
cmc
outsb
push
add
cmp
xor
cmpl
jne
inc
cmpsl
pop
xchg
jne
in
dec
daa
cmc
add
rol
sbb
pop
scas
addr16
ldmxcsr
out
push
aam
in
add
daa
or
adc
adc
dec
mov
icebp
mov
xchg
jns
push
sahf
stos
test
sub
add
push
add
add
adc
push
cvtps2pd
es
or
inc
dec
inc
aaa
xchg
mov
mov
jg
pop
add
daa
testl
push
add
add
sub
push
cmpsb
pop
inc
dec
pop
mov
jg
and
pop
mov
jmp
iret
add
daa
fiadds
add
sahf
add
add
mov
and
add
ja
sub
mov
mov
jmp
test
mov
or
xlat
out
mov
mov
add
pop
xchg
lods
test
jo
jg
cwtl
jno
decl
lahf
add
push
movsb
jmp
sub
daa
daa
push
push
add
pop
push
adc
xlat
mov
or
sub
sub
jno
rolb
out
out
incl
filds
paddw
out
pop
repnz
incb
btc
push
scas
cmp
add
andnps
fdivrs
jns
push
or
inc
push
mov
adc
mov
movnti
sub
xchg
or
idivb
lods
dec
rol
bswap
add
jo
jae
cltd
jl
adc
pop
push
icebp
add
neg
jne
mov
or
jecxz
clc
xor
xchg
add
push
lsl
insl
stos
add
pop
cltd
push
mov
bound
add
addr16
mov
pop
xchg
notb
lock
clts
jg
notl
push
jb
sbb
dec
stos
adc
repz
mov
jnp
inc
jle
mov
mov
lcall
out
mov
cld
cmp
ja
mov
or
jne
mov
out
push
jge
loope
mov
notl
pop
push
mov
jbe
ja
ja
repz
ds
sbb
jbe
add
data16
mov
cmp
push
flds
outsb
mov
mov
or
mov
test
int3
ja
in
mov
fimuls
out
mov
jecxz
incl
jecxz
subb
sbb
sub
add
or
add
test
pop
inc
sbb
scas
mov
aas
add
inc
lods
adc
nop
adc
scas
hlt
sub
adc
testb
mov
mov
add
pop
dec
adc
jns
inc
push
sti
jns
cmpsl
popf
jb
push
jne
jae
adc
out
scas
aam
stos
nop
iret
and
inc
cs
and
and
inc
add
mov
mov
mov
xor
add
shlb
mov
pop
adc
sub
sbb
rclb
push
xor
jns
out
and
or
fbstp
push
push
shrl
jo
cmovno
lcall
cmp
xor
cmpsl
pop
xchg
std
dec
lret
stc
int3
loope
test
inc
mov
data16
pop
bound
iret
shrb
mov
fdivs
sub
test
inc
out
mov
sub
and
mov
lret
cld
popf
fistpl
mov
and
xchg
push
mulb
shrb
std
adc
fnop
mov
test
sbb
jp
fisttps
pop
mov
mov
mov
fcoml
cwtl
jnp
les
std
out
fwait
aas
dec
xlat
rcl
out
mov
mov
mov
fsubs
aad
pop
scas
mov
xor
stc
mov
mov
xor
adc
repnz
js
jg
repz
iret
mov
aad
mov
into
repz
pop
add
fsubl
movsl
and
mov
iret
ret
pop
jmp
ds
mov
inc
cwtl
inc
push
es
jbe
stos
xor
shlb
cmp
mov
into
lock
inc
outsb
xor
push
push
jp
ret
shr
sub
stos
sub
addr16
jg
push
or
inc
inc
dec
push
mov
push
xor
cs
push
or
sbbb
mov
and
xor
and
pop
jae
pop
pop
pop
arpl
add
andl
aaa
sub
sub
outsl
cmp
push
dec
inc
pop
push
outsb
sbbl
shrl
add
aam
bound
cltd
in
arpl
cs
add
outsb
negb
daa
xor
adc
dec
pop
push
fmul
cmpsb
adc
mov
into
fidivs
rcrb
cmpsb
mov
ss
or
mov
jnp
push
leave
rcrb
imul
popf
jnp
hlt
mov
inc
lret
fmul
mov
shrb
jg
shrb
adc
sub
push
bound
pop
push
cmc
or
push
and
and
mov
es
fbld
jne
dec
in
xchg
lcall
rcl
dec
icebp
xor
cmp
cmp
push
add
daa
push
and
lret
dec
inc
push
dec
push
pop
sub
imul
inc
dec
dec
add
sti
add
or
iret
adc
sti
mov
adc
shrl
sbb
into
int3
in
aas
movsb
imull
lret
das
dec
dec
int
cs
jle
cmp
aaa
das
fcmovbe
stos
mov
sbb
xchg
mov
ja
cmpsl
adc
mov
push
push
rcrb
and
mov
je
ds
nopl
out
fisubrl
push
add
add
mov
sahf
out
addb
jbe
cs
push
xor
adc
xchg
inc
push
pop
pop
xor
push
mov
out
xchg
xchg
cmpsb
int3
adc
push
add
sahf
out
sahf
add
add
sahf
out
pop
mov
mov
out
sahf
out
or
jns
or
or
sahf
out
sete
nop
adc
jns
out
adc
jns
adc
adc
sahf
out
pop
je
jo
out
sahf
out
sbb
fs
out
sahf
sbb
sbb
sahf
out
pop
push
and
out
sahf
out
and
inc
sahf
out
sahf
and
and
sahf
out
daa
sub
and
out
sahf
out
sub
sbb
adc
adc
or
sahf
out
das
or
add
repz
out
xor
adc
clc
iret
repz
xor
xor
jae
cmp
call
aaa
add
imul
stos
in
xor
fdivs
or
add
or
divb
add
adc
popa
pusha
fs
outsl
xchg
in
int3
fldcw
insl
outsb
jo
ljmp
and
and
sbb
sbb
sub
and
sub
xor
sub
jne
xor
sub
and
outsb
insb
imul
mov
jmp
popa
outsl
sbb
sbb
lret
inc
lcall
sbb
push
sub
add
and
orb
add
mov
sub
add
sbb
sbb
cmp
sbb
add
mov
or
or
in
or
cmpsl
sbb
addb
mov
sub
orb
sub
sub
cmp
das
xor
fiaddl
in
jo
push
aaa
add
adc
insl
in
jge
adc
es
fisubrs
add
and
and
adcb
sbb
sbb
sbb
mov
and
sbb
sbb
sbb
fidivrs
sbb
sbb
adc
pop
leave
mov
add
sbb
inc
sbb
pop
stc
mov
and
and
add
and
mov
and
sub
sbb
and
aaa
add
push
stc
sub
sub
push
sub
and
push
push
enter
add
jb
sbb
add
sbb
cs
sub
sti
xor
xor
subb
add
mov
add
sub
jmp
jbe
das
pop
sbb
sbb
pop
jae
and
push
sbb
jbe
dec
enter
rdmsr
xorb
cmp
and
sub
imul
adc
push
daa
add
ds
pop
or
aaa
cmpb
adc
add
es
add
adc
stc
fidivl
and
mov
cmp
addb
add
mov
add
pop
sbb
pop
ret
ss
jb
and
inc
orb
pop
enter
add
and
pop
and
sbb
adcb
inc
aaa
add
insb
stos
fisttpll
add
testb
sbb
or
add
cmp
frstor
dec
orb
add
dec
dec
addb
lcall
sub
xchg
sbb
sbb
adc
sbb
sub
pop
enter
push
or
add
and
push
xor
xor
push
and
sbb
or
orb
sbb
mov
and
push
push
push
push
pop
pop
daa
push
mov
push
and
pop
add
sub
pusha
insl
inc
pop
dec
sbb
fsubs
pop
adcb
pop
xor
mov
adc
pop
push
sub
pusha
sub
popa
jb
pop
in
push
add
bound
push
jb
insl
fs
xor
subb
in
or
sub
imul
xor
push
movsb
insl
fldl
push
adc
add
xor
adc
insl
add
lods
mov
add
adc
pxor
dec
jo
adc
jb
push
je
in
cmp
jbe
mov
gs
sbb
cmpb
mov
data16
add
sbb
add
les
enter
jnp
pop
push
ss
sub
xor
lcall
xor
jg
add
jnp
sbbb
and
mov
or
add
sbb
mov
add
mov
cmpl
xchg
xchg
sub
sbb
out
sub
and
fwait
xor
or
mov
add
and
sbb
lea
nop
sub
push
sbb
sbb
sti
imul
nop
adcb
in
fwait
xchg
and
add
sub
in
fadds
in
xchg
adcb
leave
add
daa
jb,pn
ss
sbb
aaa
xchg
sbbb
xorl
sub
cmp
orb
add
mov
and
sbb
add
mov
repnz
orb
and
mov
mov
movsb
sbb
movsl
push
cmpsb
andb
lret
rcll
cmpsl
test
sub
orb
jge
sub
das
xor
cs
and
mov
mov
lods
es
lahf
fistpl
or
scas
subb
or
add
push
stc
mov
sbb
add
or
and
add
or
or
mov
sub
leave
pop
imul
sub
add
or
mov
sub
add
in
sti
sub
xor
loop
add
add
enter
addb
sbb
cmpb
and
sbb
mov
sub
xchg
das
xor
mov
in
or
mov
add
sbb
add
ret
adcb
add
movb
mov
es
lret
mov
or
add
int
into
ja
in
rcrb
iret
shlb
and
lcall
sbbb
roll
pop
repz
aad
xor
daa
in
test
es
xorb
and
pusha
add
xlat
orb
fmul
xchg
xor
adc
xchg
out
enter
pop
xchg
sub
mov
sbb
and
sbb
out
adc
orb
add
in
mov
fdivl
and
addb
add
imul
jnp
add
sbb
sbb
imul
adc
loopne
loope
sbb
pop
and
ss
add
pop
cmpsl
sbb
pop
sbb
in
mov
adcb
add
orb
sub
push
pusha
ja
or
ljmp
arpl
adc
in
andb
sub
in
in
fwait
pop
xor
sub
push
sub
sub
fcmove
leave
sub
add
lods
repnz
repz
sub
cmp
pop
sbb
pop
push
nop
out
sub
sub
out
lods
testb
adcb
xchg
and
sbb
clc
sbb
stc
pop
sbb
insl
in
ja
orb
or
add
sti
cs
cs
add
adc
xchg
das
daa
sub
enter
sub
cld
orb
std
xor
xor
pop
sti
int3
ud0
and
sbb
jae
cmp
add
orl
pop
and
andl
add
add
add
insl
inc
scas
frstor
add
ss
inc
and
pusha
add
ss
mov
orl
adc
or
xor
pusha
aaa
lods
mov
sub
push
push
add
pop
and
and
sub
orl
sbbb
addl
scas
in
daa
adc
pop
mov
push
pop
shlb
pop
aaa
or
add
and
push
mov
sbb
add
cmp
sbb
add
and
rorl
sbb
addl
xor
and
sbbl
pop
ss
mov
pop
add
dec
cs
stos
faddl
xor
xor
daa
jbe
mov
and
cmp
add
and
in
aam
jbe
outsl
sub
subl
xor
xor
sub
xor
mov
sbb
out
cld
sub
sbb
orl
add
sub
and
and
pop
adc
sub
sbb
subl
xor
xor
mov
sbb
xor
add
xchg
and
sbb
xchg
pop
leave
lds
xor
add
sbb
sbb
ss
or
add
inc
repnz
cmp
add
addl
pop
lods
or
aaa
dec
ret
add
cmp
sub
cmp
add
and
add
xor
mov
push
pop
inc
cmpsb
add
sub
inc
orl
or
add
sub
jnp
inc
orl
ret
aaa
pop
aaa
or
shlb
add
orl
and
add
add
inc
mov
add
adc
or
mov
outsl
push
mov
jbe
push
adcl
adc
sbb
xor
cmpsb
ficoml
add
sub
or
xchg
push
sub
or
and
fisubrl
adc
testb
sub
jb
pop
das
fdivs
or
sbb
push
aaa
add
rcll
or
mov
pop
or
and
fcmovb
or
sbb
dec
or
mov
loopne
pop
mov
sbb
or
add
movntps
sub
addr16
or
push
mov
mov
adc
xor
dec
or
and
jo
int
rcrb
adc
push
push
stos
or
sbb
or
sarl
cs
sub
sbb
xor
or
xor
fadds
std
fidivl
push
sub
mov
jo
or
ret
inc
or
addb
push
sbb
or
inc
sbb
add
push
sub
mov
dec
push
repnz
adc
loopne
outsb
mov
add
daa
push
das
add
sbb
xorl
adc
or
orl
sbb
or
sbb
xor
aaa
push
incb
push
cwtl
xor
mov
scas
notb
xor
and
ljmp
sti
and
push
and
sbb
adc
lret
bound
inc
pop
fsub
fxch
pop
ljmp
sbb
cs
adc
into
and
insl
or
mov
sub
push
push
imul
fiadds
sbb
es
cs
mov
ret
aaa
jp
cmp
adc
push
ljmp
mov
cs
or
cvtpi2ps
mov
mov
sbb
mov
or
out
add
mov
sbb
push
sbb
adc
pusha
and
or
adc
lods
inc
cs
and
pop
mov
cmpsb
shrl
push
push
xchg
pop
cmp
js
or
sub
sub
and
pop
addl
dec
and
das
pop
orl
add
xor
ficoml
jbe
js
ss
pop
data16
sbb
cmp
sbb
sbb
or
loop
sub
ljmp
loope
jbe
sbb
cmp
sub
or
adc
and
adc
adc
ds
sbbl
cltd
ret
or
sub
xor
sbb
cmp
repnz
push
and
jp
add
ss
adc
xchg
mov
push
or
out
sub
fbld
andl
push
bound
aaa
mov
add
xor
pop
inc
pusha
or
ljmp
mov
and
push
test
outsb
mov
mov
xchg
pop
and
push
push
and
cs
ret
push
gs
sub
adc
jo
andl
or
inc
jb
adc
add
pop
or
push
aam
stos
adc
dec
push
sbb
call
push
pop
xor
enter
xor
mov
dec
xorb
mov
add
mov
pop
cli
adc
xchg
es
mov
daa
adc
add
sbb
or
fcoms
sub
repnz
ret
cs
subl
ds
sarb
in
call
add
popa
push
adc
shll
mov
cs
sub
mov
insb
addl
pop
or
ret
add
outsb
subl
jecxz
adc
pop
xor
pop
sbb
or
xor
inc
sbb
dec
das
adc
lods
cmp
jb
and
mov
pusha
and
add
sbbl
adc
add
aad
xor
ficoml
xor
sarb
add
sub
sbb
jno
xchg
push
add
rorb
or
scas
and
fadds
dec
sbb
pop
jae
pop
je
add
xor
jle
xor
inc
outsl
sub
or
or
jbe
sbb
jno
divps
scas
push
pusha
movq
sub
jbe
or
push
sbb
cmp
push
mov
sub
jp
fisubl
mov
and
imul
adc
adc
push
mov
add
sub
add
scas
add
push
hlt
fwait
inc
jno
or
xor
cmpl
leave
or
dec
out
lock
lock
out
ss
cwtl
add
sub
jl
dec
lcall
or
xor
ret
xorl
ret
or
xchg
jle
negb
pop
mov
or
add
adc
add
or
mov
or
add
add
cmp
aaa
xor
mov
add
adcl
xchg
cmp
scas
or
test
bound
push
dec
sysenter
inc
sub
cs
sub
adc
or
sbb
dec
xchg
push
push
int
push
or
sbb
lret
xchg
add
cmp
sub
xchg
mov
mov
inc
jae
sbb
sbb
loopne
addb
adc
add
xor
add
adc
add
scas
mov
aad
rorl
adcb
sbb
mov
dec
stos
bound
mov
dec
push
push
or
inc
xor
pop
and
inc
add
ss
sub
push
mov
adc
xor
cmp
adc
adc
push
loop
sbb
es
lcall
push
jbe
push
mov
cmpsb
ss
ljmp
pusha
xor
sbb
cmp
cwtl
and
mov
repnz
mov
add
cli
mov
inc
ss
mov
sub
mov
mov
inc
cs
push
sbb
inc
jbe
mov
adc
pop
sbb
fimull
or
sti
push
adc
dec
cmpsb
mov
fisubs
bound
fimuls
pop
adc
mov
rolb
xchg
ret
cmp
inc
jbe
or
add
pop
pop
lea
pop
sbb
fidivl
out
outsb
or
sub
or
jo
jmp
fidivl
adc
cltd
mov
push
push
aam
cltd
mov
mov
mov
loop
sub
xor
outsb
sub
xorl
xor
nop
adcl
out
xor
xchg
fisubrl
jb
iret
add
js
sahf
dec
das
cmp
mov
movsl
mov
or
xchg
xor
adc
sahf
mov
push
mov
int3
adc
add
sub
dec
subl
xchg
adc
popa
adc
imulb
ficoml
adcb
and
add
and
sbb
adc
push
out
stos
mov
rorb
adc
mov
pop
mov
rolb
daa
jp
add
adc
cwtl
negb
sbb
jle
mov
mov
sbb
jle
scas
add
insb
xchg
xchg
adc
inc
jbe
push
mov
sbb
sub
movsl
and
dec
cmpsb
pop
sbb
jle,pn
xchg
mov
or
roll
jbe
and
cs
ret
push
test
or
cmp
push
mov
push
mov
mov
xchg
jecxz
xor
adc
mov
es
into
sub
test
repnz
out
add
cld
je
aam
or
add
sbb
loop
ss
mov
mov
and
into
stos
int3
in
ss
mov
pop
xor
mov
mov
pop
repnz
jbe
mov
subb
daa
scas
rorb
into
bound
xchg
and
mov
rolb
dec
cmpsb
rcll
push
or
repnz
or
out
xor
adc
cs
xor
fwait
pop
push
xor
push
movsb
js
sahf
bound
ds
lcall
jle
mov
loopne
cmp
es
push
dec
mov
xor
add
xor
add
jecxz
cmpsl
jnp
pop
es
aaa
ds
es
bound
pop
mov
sbb
into
jno
data16
cli
por
jb
sub
sar
adcb
mov
out
jbe
adc
mov
jle
dec
cmp
jbe
push
sub
sbb
push
mov
jge
xor
push
push
push
mov
in
jp
cmpsb
mov
add
cmpsb
test
or
ljmp
add
xchg
push
xor
adc
pop
scas
lds
test
adc
or
mov
out
and
xorb
adc
lret
adc
je
jmp
sbb
icebp
movb
cmpb
push
addl
pop
and
call
sbb
pusha
bound
ret
push
jae
push
sbb
cmpsl
sbbl
add
push
movsl
pusha
aaa
xchg
ds
test
bound
mov
or
push
adc
inc
add
adc
stos
adc
xchg
mov
test
orb
or
adc
mov
lods
sub
mov
sbb
or
inc
dec
inc
inc
add
pop
and
sub
daa
shll
adc
xor
lods
adcl
sbb
add
push
stos
ljmp
lcall
cmp
mov
adc
dec
or
pop
xor
rolb
mov
stos
cmp
adc
sbb
ljmp
out
push
adc
int3
or
or
jp
loop
sbb
lcall
adc
and
sub
xor
cltd
shlb
jle
ficompl
icebp
pop
add
or
or
sbb
mov
and
push
rorb
movsb
xchg
inc
mov
xchg
adc
or
and
or
add
and
inc
xchg
shlb
push
pop
testb
neg
pusha
and
sbb
repnz
shlb
out
and
inc
push
or
loope
jle
aaa
cmpb
mov
adc
movsl
xor
pop
es
mov
and
mov
test
ficoms
fisubs
rorb
sub
sub
xor
jbe,pt
addb
push
mov
push
cmpsb
push
xchg
ret
and
fidivrl
push
push
sbb
add
or
sub
sub
ret
pop
adcb
or
sarb
mov
daa
sub
lret
add
push
pop
push
loopne
mov
push
mov
ds
xchg
push
sub
incb
mov
pop
mov
push
add
les
push
or
add
or
inc
mov
shlw
mov
xor
push
ja
outsb
sub
xchg
mov
push
sbb
bound
int3
add
xchg
push
sbb
push
mov
or
add
jle
cmc
ret
sbb
fiaddl
pop
mov
cltd
sub
xchg
or
lea
xchg
mov
inc
mov
and
fisubl
and
mov
fadd
ss
xor
pop
and
push
adc
sbb
loopne
sbb
shlb
sub
push
push
xchg
pop
xor
mov
shlb
bound
rorb
mov
adc
bound
sbbb
andb
outsl
int
sbb
and
pop
push
or
sbb
ret
sahf
sbb
xor
cmp
mov
or
mov
add
bound
aad
add
sbb
jo
push
adc
sbb
adc
add
inc
mov
or
or
push
or
cmp
push
cli
jmp
data16
shll
mov
or
cmp
faddp
or
xchg
push
pop
shll
and
sbb
pop
jp
push
or
or
inc
js
ljmp
cmp
or
add
int3
and
out
or
cs
push
mov
push
sbb
push
stos
push
add
or
les
or
pop
xorb
add
cmpsb
mov
add
sbb
lcall
sbb
add
mov
es
sub
les
mov
xor
stos
pusha
push
push
or
or
adc
or
or
mov
or
dec
adc
mov
jmp
sub
data16
dec
fisubl
jbe
adc
push
sub
sbb
push
mov
push
iret
xorb
rcr
lock
rolb
mov
push
xchg
xor
sub
sub
add
push
add
adc
and
dec
add
mov
stos
jge
mov
cli
adc
xchg
mov
cmpsb
jle
stos
inc
push
sub
int
push
add
scas
sub
push
mov
or
push
out
mov
inc
mov
xor
mov
mov
mov
or
xor
and
sub
push
sub
repnz
push
sub
sub
and
lcall
mov
add
jle
mov
add
cmc
cmp
lret
or
push
and
sbb
xchg
pop
add
jbe
pop
lret
pop
xchg
sbb
ljmp
add
push
rclb
xchg
push
xchg
jle
adc
push
sbb
push
and
ds
adc
add
into
jbe
pop
push
negl
mov
adc
adc
and
or
jae
pop
jp
stos
ret
mov
mov
adc
shlb
and
dec
or
cmp
sbb
mulb
outsb
add
xchg
inc
sub
jle
push
es
adc
ret
pusha
sbb
das
lcall
cmpsb
dec
dec
push
sub
add
outsb
xchg
add
adc
push
out
aad
or
fwait
push
lods
test
sub
pop
ljmp
movb
in
pop
sti
push
or
xor
and
into
pop
add
mov
bound
pop
cmpsb
stos
xor
or
and
adcb
inc
sub
mov
push
cmp
jb
sbb
test
daa
push
cs
and
cmp
insb
mov
push
push
push
fildl
and
push
cli
fstps
adc
sub
scas
rorl
fisubs
loop
pop
adc
mov
addb
jbe
sbb
insb
jp
push
fidivrl
xchg
sbb
push
pop
adc
sub
sbb
out
dec
xor
adc
das
mov
pop
add
or
sub
sub
adcl
xor
or
mov
subb
push
mov
cmp
dec
inc
push
push
pop
cmpb
push
jo
xor
inc
and
push
and
mov
sub
cs
or
jo
lret
es
ret
data16
adcb
outsb
adc
adc
mov
adc
adc
cwtl
loopne
ret
subb
jo
jb
xchg
push
leave
cmc
sub
fadds
push
lret
dec
mov
jle
jb
dec
cltd
movsl
or
mov
pusha
adc
xchg
add
adc
shlb
push
xchg
lret
loope
add
ljmp
push
cs
je
sbb
addb
and
outsl
pop
roll
add
fiaddl
dec
or
cs
lcall
or
or
xor
sbb
sub
sbb
or
add
xor
add
cmp
mov
sahf
bound
jp
push
mov
pop
nop
pusha
and
push
loop
outsb
icebp
push
add
lcall
inc
scas
mov
pop
push
mov
mov
fstl
and
inc
add
or
out
push
shrb
add
dec
push
call
xor
or
mov
fsubp
lret
sbb
out
jb
push
or
sbb
stos
gs
adc
inc
or
add
divb
or
mulb
inc
or
out
mov
andl
add
inc
mov
cwtl
ds
jle
and
xchg
mov
sub
push
and
pop
int
jb
and
jle
outsb
pop
xor
out
ret
roll
into
push
subb
loopne
xchg
mov
push
xor
fisubrl
rcll
cwtl
mov
xor
add
add
rclb
rorl
push
lret
dec
add
mov
jb
cmp
test
or
gs
cmp
pop
xchg
ss
andl
push
push
adc
pop
test
xchg
xor
add
or
daa
inc
jbe
add
negb
loop
push
ss
push
push
mov
pop
fidivrl
or
add
stos
push
je
sbb
xchg
jbe
add
cs
inc
sbb
out
popf
into
push
push
and
or
lahf
push
or
ss
sbb
mov
xor
or
pushf
andb
add
sbb
cmp
push
ljmp
add
or
out
rcrl
or
shrl
je
cmpsb
add
and
or
and
push
xor
arpl
push
or
jno
or
out
push
in
sbb
fisttpll
push
and
jbe
or
test
xor
sbb
lret
xchg
movb
cli
or
test
or
sbb
testb
push
or
loop
lods
jnp
add
or
pop
inc
or
in
cmp
push
cs
je
push
or
sbb
cmp
adc
sbb
jecxz
mov
stos
inc
fisubl
or
push
jle
add
and
or
and
or
pop
xchg
fiaddl
aam
or
add
push
loope
sbb
mov
push
cltd
cmp
or
push
ds
scas
leave
bound
or
inc
push
or
cmp
xor
pop
or
dec
popf
sbb
daa
push
cs
mov
nop
xchg
in
or
or
dec
ss
xlat
popf
push
stc
pop
aaa
or
popf
cmpl
dec
into
add
xchg
mov
into
or
xor
sub
push
mov
and
fnstenv
ffree
cmp
or
or
fsubr
or
or
or
aaa
sbb
push
pop
or
ljmp
or
repnz
push
push
outsb
loopne
sahf
or
or
or
xlat
mov
adc
ficoml
push
in
xorl
imul
shlb
or
and
jmp
mov
push
or
pop
xor
mov
call
push
or
es
xchg
push
mov
and
and
push
imul
or
xor
outsb
or
and
and
pushf
imul
and
and
pop
and
xchg
push
cmpsl
popf
testb
add
jno
xlat
push
or
or
xchg
pop
aas
push
aaa
or
add
mov
ss
das
daa
mov
inc
mov
add
aas
testb
cltd
or
push
or
mov
aaa
imul
sub
or
adc
cmp
or
xchg
mov
imul
ds
and
gs
mov
xchg
orb
mov
sub
adc
fsubrs
inc
add
mov
popf
fimuls
add
into
or
jbe
in
or
add
and
or
adc
idivl
inc
add
xchg
cs
pop
mov
or
jg
aaa
add
or
aaa
add
sub
inc
pusha
mov
sub
cmp
fwait
adc
ret
xchg
shrl
or
mov
or
push
adc
repnz
mov
or
pop
push
pop
xchg
xorl
and
or
inc
aaa
scas
adc
inc
mov
and
sbb
cs
push
pop
or
inc
and
or
or
or
push
das
xchg
inc
int3
inc
or
or
pushf
inc
or
imul
lds
cmp
pushf
pop
addr16
add
push
or
ds
mov
mov
xor
adc
fistpll
push
dec
scas
push
mov
and
and
ret
push
push
cmpsl
nop
add
es
mov
push
add
into
and
sub
mov
adc
or
inc
pushf
push
out
bound
add
add
or
add
inc
cwtl
or
push
jbe
pop
pushf
fisttpll
push
lcall
dec
mov
adc
cmpsb
push
cmp
xchg
movsb
add
push
outsb
xchg
and
ljmp
inc
push
ret
imul
pop
loope
xchg
push
out
xor
mov
rol
pop
ret
add
xor
aad
cmpsl
bound
adc
cmp
loop
sub
pop
dec
ret
or
adc
aad
pop
mov
xchg
movl
and
push
push
jo
adc
adc
jl
loop
and
sbb
inc
insl
cmp
mov
or
or
pop
cmp
adcl
mov
cmpl
and
sbbl
dec
dec
stos
mov
mov
xlat
or
mov
fidivs
repz
rcll
daa
jo
test
dec
es
mov
sub
cmp
pop
push
rcr
hlt
jb
jmp
add
adcl
aam
xchg
imul
stos
cli
or
in
mov
add
sub
jo
push
rolb
inc
ret
xchg
cmp
loopne
and
xlat
bound
dec
push
mov
lcall
sbb
cwtl
or
addr16
add
inc
jg
das
out
or
jmp
lods
jmp
dec
es
add
mov
adc
and
mov
ret
addr16
xchg
sub
sub
xlat
cltd
ficoms
incb
out
cmpsl
adc
push
push
xor
xor
xchg
sub
addb
das
sbb
divb
rcll
data16
push
jbe
sbb
pop
cmp
fs
push
pop
sbb
ret
mov
dec
test
add
loop
aam
xlat
daa
dec
push
xlat
mov
pop
or
cmp
out
fisubrs
jbe
jne
imul
mov
gs
jne
shr
lret
push
outsl
dec
outsb
push
and
dec
push
adc
aas
jae
outsb
repnz
je
push
popa
pop
jle
mov
es
mov
es
cmp
jne
pop
gs
jns
jae
repz
repz
js
push
scas
cmp
push
outsb
je
push
aam
data16
mov
arpl
jp
fidivrs
lret
push
or
jno
sahf
add
xor
mov
rolb
mov
mov
sub
push
add
das
jle
out
sbb
imul
std
and
pop
cmpxchg
mov
mov
push
ret
mov
mov
pop
adc
push
cmp
lods
aam
rol
popa
lahf
adc
shlb
lock
pop
push
add
das
leave
stc
shl
aaa
in
cmpsb
dec
inc
inc
sbb
outsl
fcmovnu
insl
aaa
jl
dec
sub
pop
jo
and
mov
adc
adc
mov
mov
in
in
push
or
add
xchg
mov
hlt
or
nop
pusha
push
xor
sub
loopne
inc
or
add
add
push
adc
adc
jmp
cmp
aas
jg
or
pushl
mov
jbe
pop
aas
and
aas
decl
iret
into
ficomps
stos
sub
push
aas
fwait
das
stos
push
aam
ss
adc
int
imulb
pusha
or
mov
mov
insl
xorl
inc
and
xor
mov
fucomp
or
sbb
arpl
push
push
pop
push
or
in
int3
ss
push
xor
add
shr
fmul
dec
xchg
push
pop
or
fadds
les
xor
or
push
or
dec
pop
and
push
test
pop
popl
pop
pminub
sub
out
decl
inc
bound
and
push
sub
pop
mov
shll
sub
or
jle
aaa
daa
fbld
hlt
push
mov
test
sbb
int3
ror
fiadds
adcb
fwait
mov
out
cmp
and
test
fldenvs
insl
adc
pop
dec
mov
push
jb
push
inc
cmp
data16
scas
pop
cmp
ljmp
jl
push
lret
cmp
lods
inc
push
cmc
dec
mov
cwtl
cltd
insl
outsl
sbbb
rcll
out
inc
popa
and
xor
or
pop
bound
scas
sub
cli
and
pop
and
cmp
or
push
repz
pop
loope
into
or
add
pop
pusha
repz
pushf
or
outsl
push
add
cmp
add
and
xlat
push
arpl
imull
mov
arpl
out
adc
das
pop
in
repz
dec
jecxz
addl
push
push
and
data16
pop
testl
mov
cmp
push
and
cmp
xchg
inc
pop
push
jnp
xchg
and
pushf
sbb
sub
mov
push
mov
push
int3
int3
rolb
es
ss
inc
subl
sub
pop
data16
stos
mov
dec
rcrl
inc
movsl
and
sbbl
lods
dec
call
ljmp
or
cmp
out
cld
and
in
in
repz
int3
les
lods
movsb
pushf
xchg
mov
cmp
repz
fs
repz
pop
push
dec
dec
inc
inc
cmp
repz
cmp
sub
cmp
repz
sbb
out
ds
or
cld
pop
hlt
in
sahf
out
sahf
in
aam
mov
jns
cwtl
mov
out
pop
push
inc
cmp
out
sahf
sub
adc
lock
loopne
iret
repz
shlb
repz
pop
iret
repz
xchg
inc
inc
inc
cmp
repz
inc
inc
dec
dec
repz
repz
dec
dec
dec
dec
iret
repz
dec
push
push
push
push
push
cmp
repz
push
push
pop
pop
sbb
icebp
pop
sbb
jae
adc
lds
jbe
ja
in
inc
lcall
or
cmp
repz
or
or
repz
or
or
add
cmp
repz
add
add
repz
repz
add
add
iret
ror
or
jno
jae
repz
repz
ja
jns
cmpsl
adc
jp
dec
sub
adc
sub
inc
cli
aas
es
push
push
inc
xor
pop
xor
in
es
add
aaa
cs
cs
inc
xor
adc
jne
sub
mov
mov
in
popa
pop
cmp
ss
dec
cs
sub
es
ficompl
das
xor
pushf
pushf
pushf
fmull
cmp
ss
xor
xor
out
mov
sbb
sbb
mov
inc
out
pop
mulps
jb
pop
push
push
push
jb
jb
push
push
push
push
jb
jb
push
dec
dec
dec
jb
jb
dec
dec
dec
dec
jb
jb
dec
inc
inc
inc
jae
jb
inc
inc
inc
inc
sbb
fisubs
imulb
push
inc
cmp
inc
dec
push
icebp
jae
out
dec
inc
xchg
or
push
out
mov
xchg
mov
mov
sub
or
cmp
lea
or
and
sarb
ljmp
and
sarb
mov
and
xchg
outsl
cmpsl
mov
adc
ja
pop
xchg
add
mov
add
sahf
rorb
adc
repz
push
in
loopne
cmc
xor
xor
shrb
inc
inc
or
pop
pop
mov
mov
pop
ficompl
sub
dec
repz
mov
sti
cmp
repz
cli
js
push
clc
push
testl
sub
adc
cld
sub
in
repnz
int3
sahf
out
jnp
fisttps
out
fisttps
out
xor
out
in
and
or
repz
repz
sub
loopne
lods
jae
repz
decl
out
out
push
jl
repz
outsl
push
in
jecxz
hlt
sub
jns
shl
push
loope
loopne
out
sahf
nop
fistpll
fucomp
sahf
out
inc
fcompl
jg
fdiv
cmp
fimull
fld
fmuls
push
xlat
pushf
jo
cmp
jae
push
aam
push
shll
sar
cmp
repz
adc
cld
daa
out
sahf
cmpsl
iret
in
int3
int
out
sahf
mov
lret
out
dec
leave
inc
enter
sahf
out
sbb
sahf
add
xor
repz
push
aam
cmp
jns
ds
rorl
shl
iret
rep
mov
repz
mov
out
lock
repz
mov
out
scas
imul
mov
mov
mov
mov
out
sahf
out
mov
mov
mov
lods
add
push
adc
jmp
or
or
pop
jmp
mov
mov
and
out
xchg
add
mov
sarl
dec
mov
repz
mov
add
jp
shlb
cmc
std
mov
mov
int3
cmc
je
popf
add
add
add
mov
rdpmc
fmul
jecxz
mov
push
dec
pop
mov
mov
mov
jle
mov
xchg
sarb
rcl
mov
loopne
mov
rol
les
mov
or
or
fcomps
add
jp
loopne
enter
fildl
pop
aas
shll
aaa
idivl
fsubrs
aas
fisubs
push
leave
call
rol
push
adc
repz
inc
add
xor
mov
daa
enter
push
hlt
push
iret
std
adc
mov
out
or
rorb
pop
aas
popa
mov
insl
pop
addr16
dec
sub
dec
loopne
mov
arpl
out
pop
or
insl
rcl
sub
test
mov
sbb
daa
orl
add
adc
add
mov
xchg
aas
cmpsb
mov
ret
cmp
push
push
add
xchg
and
pop
mov
inc
xchg
pop
mov
and
out
inc
nop
or
pop
daa
es
cmp
arpl
daa
rclb
or
sub
scas
pop
in
or
mov
xor
or
inc
add
sbb
mov
mov
inc
daa
push
into
stos
sbb
lret
mov
rorl
ja
aam
lock
cmpsl
pop
mov
clc
int3
stos
mov
das
jg
mov
in
cmp
das
fwait
pop
data16
push
push
dec
lret
lock
pusha
mov
dec
aaa
mov
pop
sub
in
aas
add
adc
inc
push
out
adc
lods
inc
xor
mov
aas
pop
cmp
dec
mov
daa
fstpt
sub
aas
jg
mov
out
pop
clc
push
pop
movsl
movsl
pop
sub
dec
mov
stos
getsec
aam
bound
push
xchg
test
xor
aas
and
mov
sub
lods
and
stos
mov
push
test
jmp
push
or
mov
mov
or
mov
lret
pop
mov
sub
addr16
sarb
icebp
push
movb
jmp
std
mov
add
pop
pop
ja
xchg
xor
sbb
add
fdivrs
mov
jbe
lahf
pop
inc
rorb
lcall
test
mov
pop
out
sub
lcall
sub
xor
loop
add
and
and
cli
shlb
out
ret
mov
mov
mov
idivb
cld
divl
cli
leave
cli
ret
pop
divb
shll
iret
cs
mov
inc
adc
repnz
std
add
loopne
loopne
mov
jbe
into
aaa
sub
cmpl
xchg
pop
outsl
imul
ret
mov
idivl
pop
subl
mov
cmpsl
jne
push
cmp
xor
ret
xchg
jg
cld
rcl
leave
stos
jle
xor
into
je
repnz
xor
movups
xor
pshufw
mov
lock
dec
cmp
or
or
pop
sahf
call
lock
mov
sarb
sti
daa
mov
xchg
xchg
mov
sti
iret
lock
leave
iret
mov
xlat
repz
add
ret
out
or
or
mov
mov
out
fdivrs
mov
adc
dec
mov
cmp
push
lock
jnp
popa
outsl
pop
das
and
add
sahf
out
push
pop
pop
pop
pop
pop
add
pusha
popa
out
dec
mov
cs
les
test
cwtl
nop
mov
lret
into
pop
enter
add
mov
pop
pop
mov
mov
ja
out
lock
fimull
adc
out
inc
fmuls
mov
gs
pop
dec
iret
aad
pop
mov
imul
das
inc
mov
adc
and
ss
and
sub
fdiv
das
les
push
aaa
cmp
push
mov
jecxz
test
mov
mov
jo
jp
loope
mov
push
leave
pop
out
or
push
xor
sbb
sahf
imul
mov
push
rolb
mov
mov
jg
add
pop
outsl
lods
xlat
pop
sbb
adc
push
pushl
mov
clc
xor
adc
xor
pop
shll
fsub
pop
loopne
fsubrs
scas
rorb
shlb
test
je
scas
rcrb
fdivrs
aam
push
nop
scas
test
mov
mov
jg
outsb
cwtl
pop
pusha
ds
outsl
imul
push
sbbb
js
cli
cltd
aam
leave
out
mov
cld
ret
and
mov
mov
mov
fbld
int3
aas
in
pop
xlat
iret
mov
sar
mov
das
fistpl
mov
jg
fcomp
cmp
jp
pop
jbe
fld
mov
or
rcr
orb
fsts
pop
rol
mov
js
andl
jg,pn
into
xorb
mov
into
jg
outsl
into
and
lret
aam
xlat
mov
mov
in
jle
lods
xchg
jns
clc
xlat
stos
add
cs
or
and
dec
push
inc
inc
dec
inc
dec
add
aam
enter
jne
cmpsl
pop
push
cmp
sahf
out
js
mov
repz
dec
repz
xor
pop
fwait
fs
test
pop
cmpsl
inc
inc
das
mov
and
sub
mov
jbe
aas
aas
scas
aas
shll
or
aas
out
mov
iret
push
mov
das
pop
push
dec
sti
pushl
mov
bound
inc
inc
pop
pop
bound
das
insl
movsl
jbe
mov
cmp
test
outsl
push
lret
das
adc
popf
popa
lods
push
int
call
popf
and
dec
sub
sbb
xor
dec
sbb
or
test
das
adc
fiaddl
xchg
sahf
push
dec
pop
jae
aaa
sub
pop
xor
cmp
aas
mov
add
pop
lods
sar
dec
xor
push
inc
push
inc
jg
mov
push
jg
lods
aam
out
addr16
or
and
shrl
dec
and
dec
xor
xor
daa
fbld
addr16
pop
dec
imul
sti
cmp
push
dec
push
inc
inc
popa
xchg
add
dec
inc
push
dec
inc
lahf
fisubl
or
mov
inc
push
push
inc
fwait
xchg
add
mov
lret
dec
insb
jg
dec
sbb
popf
sarb
ljmp
and
inc
out
or
mov
stos
js
jbe
imul
mov
test
inc
aas
stos
test
adc
cmpsb
mov
add
pop
add
clc
incl
lods
jg
aam
enter
xor
loope
cmp
mov
das
aaa
pop
imul
sub
and
imul
or
rcl
mov
sbb
sbbl
jg
mov
push
xchg
testl
test
loopne
pusha
adc
and
jnp
fwait
xor
push
jbe
jbe
mov
paddq
pop
or
in
aaa
aas
aas
pop
add
add
arpl
or
dec
shll
jbe
adc
ss
movsl
adc
lds
aas
add
aad
fwait
sbb
nop
cmp
pop
pop
lcall
push
push
dec
iret
repz
dec
inc
inc
cmp
sub
adc
cld
clc
jns
out
hlt
lock
call
out
aam
daa
iret
repz
mov
mov
push
cwtl
nop
test
jns
out
pusha
pop
push
inc
jns,pn
popf
cmp
add
add
repz
add
add
iret
repz
or
or
sub
or
fucomi
imul
daa
adc
adc
leave
leave
in
movsb
and
outsb
mov
push
addr16
das
push
xorps
mov
push
and
cs
pop
andb
cmp
addl
sub
jbe
leave
cmpsl
mov
into
aas
xlat
data16
mov
add
stc
movsb
add
cmpb
cmpsb
fisttps
mov
sarl
jle
test
shll
leave
in
add
mov
mov
mov
sbb
in
call
dec
and
adc
push
ficompl
mov
xchg
das
push
pop
fisubrl
xor
fcomp
loopne
jb
jle
jo
pop
dec
or
ja
stc
mov
push
or
add
ja
jne
push
inc
nop
push
adc
out
out
cmp
jg
sbb
add
repz
mov
js
repz
repz
sbb
js
sub
clc
push
sub
addr16
call
ljmp
addb
push
test
call
loope
mov
adc
fsubl
jno
or
int
adc
ss
or
sbb
xchg
std
aas
mov
lea
adc
roll
inc
push
push
popa
mov
loop
inc
ret
cld
movsb
in
and
incl
inc
movsb
or
pop
or
int
xchg
pop
add
hlt
add
cmp
sbb
sbb
pop
fdivrl
repz
aam
int3
push
repz
repz
repz
adc
iret
repz
pushf
and
pause
or
cmp
sbb
sbb
push
sbb
pop
pop
repz
repz
and
pop
leave
cmp
and
sub
out
popa
xchg
fsub
movups
xorb
cmp
or
aas
mov
or
add
filds
outsl
adc
sub
sbb
jg
pop
outsb
push
outsl
iret
repz
jne
addb
cmp
mov
into
ljmp
pop
push
ds
out
sahf
out
bound
jns
ret
add
es
repz
push
data16
movsl
stos
lret
out
sahf
out
pop
sub
dec
dec
sahf
out
sahf
outsb
sbbb
out
in
repnz
ds
out
sahf
push
jb
xchg
xchg
mov
adc
jns
loop
cwtl
pop
fadd
cmpsb
fadds
enter
test
cmpb
test
test
inc
inc
or
mov
xchg
inc
and
mov
inc
mov
enter
add
add
ja
push
int
and
add
push
xchg
outsb
mov
shlb
lock
stos
push
icebp
pop
add
pop
ret
ss
xchg
add
xor
xchg
push
rolb
push
inc
rolb
add
dec
pop
or
and
sub
xorb
icebp
sub
adc
push
push
push
push
inc
jg
adc
daa
fsubrl
imul
pop
add
pushf
cmp
sbb
xchg
pushf
cmp
mov
nop
xchg
xchg
xchg
or
lods
and
js
sbbb
outsl
iret
xrelease
ja
lcall
adc
das
rol
jns
insb
inc
test
out
pop
cmpsb
xor
mull
push
mov
push
inc
test
dec
lock
xchg
es
outsl
mov
ja
push
pop
popa
or
jg
mov
sbb
mov
add
cli
or
or
ret
jae
hlt
adc
ljmp
jg
mov
leave
sbb
into
sbb
rorl
and
push
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
ljmp
mov
popl
cmp
cmpsb
iret
decl
js
inc
outsl
loopne
decl
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
incl
out
jecxz
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
decl
xchg
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
jmp
mov
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
ljmp
xchg
test
pop
mov
and
stos
xchg
clc
or
push
daa
mov
subb
fwait
xchg
and
negl
int
add
aas
jno
or
mov
jg
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
pushl
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
inc
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
jecxz
cmpsb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
lcall
cmpsb
xchg
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
decl
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
lods
gs
std
orl
pop
ficomps
frstor
ja
push
or
das
lock
movsb
inc
push
nop
jmp
scas
in
mov
push
cwtl
dec
adc
xchg
imul
cltd
dec
adc
jae
fwait
dec
adc
je
popf
dec
adc
push
pop
dec
add
push
adc
push
mov
push
adc
jbe
push
adc
fbstp
adc
pusha
mov
fs
sub
cli
xlat
ljmp
add
cmp
mov
jnp
and
ljmp
add
adc
movq
add
jg
pop
popf
mov
cmp
sub
jl
push
cmpb
push
push
out
push
or
xchg
push
jno
shrl
push
incb
add
adc
push
shrb
xor
adc
lock
jns
push
adc
mov
or
das
jecxz
xchg
outsl
add
sbb
add
pop
adc
sbb
sbb
xor
sbb
mov
push
insb
push
xchg
push
andl
out
add
pop
push
data16
and
inc
repnz
outsb
and
jle
push
dec
jl
gs
outsb
and
cmp
xorb
add
daa
arpl
pusha
addr16
sbb
sub
pop
inc
jmp
jp
sub
adc
shrb
sub
fcompl
push
mov
cmpsl
cmc
enter
scas
mov
les
xor
dec
les
sub
testl
ds
daa
push
add
fimull
dec
ja
and
inc
inc
inc
push
inc
push
pop
shll
pushf
push
or
cs
pop
push
sub
sbb
insb
cmpl
and
xor
aas
jo
or
aaa
and
push
popa
test
sbbl
je
and
jae
lods
arpl
dec
ss
sbb
fwait
add
xor
cltd
push
xor
push
xor
mov
test
xchg
mov
mov
mov
fwait
adc
mov
mov
mov
pop
mov
dec
nop
stos
nop
push
adc
and
xchg
or
pusha
pop
and
movsl
decb
add
jo
jns
out
add
into
repz
pop
add
adcb
fstl
pop
or
ss
xchg
add
add
dec
or
daa
inc
jbe
or
and
add
jnp
mov
pop
ljmp
cmpb
jns
cwtl
jae
je
jns
out
jne
jbe
iret
repz
ja
add
sub
dec
repz
jns
adc
adc
add
add
dec
add
rolb
in
or
jns
aas
add
fidivrl
or
xor
and
mov
pusha
cs
sarb
jnp
push
sub
nop
push
or
shl
sahf
out
fsubrs
jle
jns
int
push
add
add
push
mov
fadds
push
push
push
add
jns
out
adc
sbb
dec
repz
sbb
sbb
pop
sbb
outsl
stos
clc
cmp
inc
pop
out
or
pop
bound
iret
jnp
or
jo
lahf
dec
jnp
jecxz
add
cwtl
mov
push
lcall
add
dec
stos
sbb
sbbl
pop
enter
add
pusha
pop
and
enter
enter
mov
pop
rcl
enter
lock
adc
nop
or
add
inc
sub
or
xorb
das
and
pop
mov
mov
cs
or
rorb
in
mov
adc
add
adc
enter
xor
pop
and
push
pusha
pop
enter
adcb
mov
pop
enter
add
lock
int3
subb
and
fadds
push
das
clc
mov
mov
or
in
push
rclb
and
add
in
mov
mov
dec
mov
xchg
dec
add
xchg
xorb
inc
or
fcoms
cltd
or
and
push
inc
dec
enter
sahf
enter
sahf
fs
lods
movsl
or
pop
inc
lock
out
cmpsb
insb
shlb
in
adc
ds
cmp
adc
lods
pop
dec
scas
pop
xor
or
lcall
fisubrs
mov
rcrb
push
jp
inc
mov
daa
fstps
push
ljmp
xchg
mov
xor
mov
push
int3
pop
jae
cmp
push
loop
out
xchg
neg
mov
jl
ds
int3
push
sub
imul
clc
js
jo
out
in
and
pusha
iret
out
xchg
notb
inc
call
loope
dec
sar
fcom
pop
rcrb
push
adc
aam
and
mov
adc
test
and
fsubs
pop
add
jle
lock
or
sub
mov
pop
or
std
mov
add
dec
cmp
cmp
sbbb
dec
inc
sahf
and
pushf
lods
cs
mov
and
popa
data16
and
data16
imul
lcall
inc
push
pop
push
inc
push
dec
push
push
inc
or
or
xor
jle
push
inc
inc
dec
adcl
fsub
push
inc
push
pop
inc
dec
imul
mov
sub
pop
add
sarb
and
push
inc
push
inc
add
sub
and
xor
sbb
inc
dec
inc
push
inc
inc
inc
and
and
jo
add
jl
popa
jns
out
fst
pop
jo
sub
xor
imul
dec
loopne
das
das
outsl
inc
mov
sbb
insb
arpl
pop
push
andb
add
dec
jo
rcrb
outsl
outsb
js
nop
sbb
pop
test
cwtl
pop
daa
inc
or
lds
sti
inc
sub
dec
nop
jnp
ljmp
orb
fdivrl
enter
addb
iret
repz
data16
jg
shr
shlb
pop
jl
js
pop
dec
repnz
inc
add
push
clc
mov
fnstcw
loopne
mov
sarb
jbe
mov
cld
ret
das
and
xor
mov
adc
sbb
jl
insb
out
cmp
jnp
lcall
add
into
rep
das
add
add
cmp
mov
insb
lds
push
mov
xor
sub
sahf
xlat
mov
pop
pop
sub
push
or
cmp
xor
add
insb
sbb
add
cmp
ret
sub
clc
outsb
add
lock
jns
mov
add
ss
pop
jg
out
es
cwtl
or
lcall
adc
sbbb
pop
repnz
cld
rolb
idivl
stos
add
cmpsl
mov
add
push
push
fs
int
push
rcrb
pop
add
cltd
dec
rolb
sarb
lock
and
outsb
icebp
pop
clc
sar
ret
xchg
movl
push
dec
scas
aaa
adc
or
add
mov
clc
cmpsb
insb
mov
push
leave
dec
test
andb
jnp
rcrb
subl
mov
xor
adcb
out
ds
js
xchg
push
add
xchg
pop
and
sub
shrl
sahf
incl
aas
das
inc
mov
cs
loopne
pop
movsb
sti
lret
orb
add
and
out
add
ja
lcall
push
fs
sti
jnp
mov
out
ds
add
mov
mov
xlat
mov
negl
mov
lcall
mov
in
leave
jo
cmpb
mov
push
pop
or
jg
cmp
in
and
fadds
lea
jg
mov
mov
vcvttps2dq
divps
into
mov
nop
lea
jle
movd
fldl
wrmsr
fs
or
jno
mov
ja
cmpl
push
push
lcall
in
cmp
adc
clc
and
mov
popf
xacquire
adc
xor
clc
ja
imul
xchg
js
xor
aas
fsubrs
mov
outsb
ja
add
dec
adc
out
jnp
daa
loopne
out
lahf
daa
out
jmp
fsubl
js
aas
daa
daa
push
imul
outsl
or
pop
or
push
adcb
cmpb
js
loopne
xchg
push
pop
sub
pop
or
pop
bound
push
inc
inc
and
xchg
call
or
pusha
das
pop
scas
setnp
push
roll
push
push
jnp
pop
sbb
sbb
sub
js
dec
xor
jge
out
pop
in
mov
pop
adc
adc
das
pop
popl
test
scas
xchg
inc
mov
sbb
sub
pop
mov
dec
rcll
ret
sub
xor
shrl
scas
fimull
or
mov
adc
pop
mov
nop
dec
addr16
inc
andb
add
xchg
or
mov
scas
pop
adc
in
clc
sbb
dec
mov
js
jp
faddp
pop
mov
loop
or
imul
mov
jmp
dec
pop
faddl
add
pop
jnp
inc
lret
sbb
shrb
or
into
pop
xchg
add
jo
adc
or
sub
pop
in
push
mov
or
lret
imul
xchg
sbb
mov
lret
popl
or
fildl
add
jmp
les
inc
ja
mov
xorl
xchg
or
jae
jg
or
cs
mov
mov
mov
cmp
or
xchg
mov
xor
or
fs
and
movsb
jae
xor
or
or
or
sti
idiv
inc
jp
jp
dec
or
sbb
out
xchg
fisubrl
mov
in
push
push
pop
xlat
pop
or
js
data16
aam
jnp
or
divb
xor
xchg
pusha
mov
push
or
sbb
xor
push
or
or
xor
or
mov
shl
add
dec
push
hlt
clc
out
mov
inc
inc
jmp
ljmp
ja
arpl
mov
fwait
dec
mov
outsb
inc
and
imul
xlat
into
mov
nop
mov
mov
or
sub
loop
scas
sbb
adc
sbb
jo
aad
dec
or
or
loopne
or
and
xor
sub
out
mov
pop
mov
sysret
pop
sidtl
add
daa
or
adcl
daa
inc
fsubrs
lock
add
in
sub
xchg
lock
dec
add
inc
xor
dec
adc
dec
shrl
add
bound
shrb
push
scas
push
jmp
mov
arpl
enter
lock
subl
loopne
mov
lods
frstor
push
daa
mulb
pusha
sbbl
sbb
xchg
adcl
xchg
adc
mov
negl
add
add
sbb
mov
add
sbb
movswl
and
ja
or
rcrb
jo
dec
jnp
mov
ja
jo
ja
insb
imul
sti
add
or
mov
outsl
in
add
or
into
ds
es
jg
popf
hlt
sub
push
nop
mov
and
jl
add
inc
jo
sub
cld
xorl
push
call
sbb
xor
xlat
rcrb
pop
add
in
push
movsb
addb
addb
rorb
xor
and
xchg
outsl
shlb
adcl
loop
or
push
sbb
popl
ud0
out
pop
or
pusha
dec
cmpsb
outsl
inc
pusha
insl
sub
or
test
jbe
bound
addb
out
in
add
nopl
inc
push
adc
dec
mov
push
add
into
xor
or
push
decl
push
and
fsubs
testb
decl
sbb
inc
add
cltd
cmp
and
negb
and
aas
out
andb
add
outsl
addr16
add
jmp
addr16
sbb
pop
mov
mov
pop
popl
xor
push
into
lock
jg
sbb
pop
in
xchg
clc
xchg
add
push
pop
add
pop
ja
cmp
lret
xchg
faddl
jno
push
test
inc
pop
fistps
push
mov
pop
ja
mov
fiadds
lds
cmp
jno
pop
ja
pop
sbb
sahf
adcl
xchg
sarl
sub
loop
push
loope
aaa
push
jg
sbbl
pushf
insl
js
xchg
inc
fisttps
sub
mov
movsl
pop
and
pop
rorl
aaa
clc
mov
sub
insl
fistpl
and
test
xchg
fimuls
in
int
pusha
add
ja
add
aas
negl
fcomp
out
pop
sbb
mov
xchg
insl
xor
sbb
jae
in
lods
mov
and
pop
das
insb
das
and
mov
mov
insl
dec
in
es
jg
add
aad
dec
outsl
mov
mov
addr16
dec
push
leave
mov
out
das
mov
jbe
popa
mov
outsl
popa
das
repz
dec
das
addr16
popa
das
out
add
fstl
add
outsl
popa
das
jg
sub
pop
das
arpl
jg
out
mov
jae
das
pushl
movups
sub
addl
das
lods
jg
add
mov
das
mov
test
add
pop
push
xchg
int
lea
popf
shll
or
sti
jo
push
sbb
ret
add
negb
icebp
dec
jb
xlat
loope
arpl
xor
xchg
negl
das
mov
mov
clc
pushf
and
xchg
fs
xchg
inc
test
das
jg
jbe
cwtl
rclb
pop
int
cmp
fisubs
dec
mov
jnp
mov
mov
mov
icebp
das
out
jmp
fstpt
push
or
repnz
insb
incl
or
xchg
mov
jg
out
mov
pop
or
cltd
daa
or
adc
dec
dec
je
mov
cs
sbb
add
xchg
aaa
aaa
inc
push
push
dec
ds
push
mov
call
aas
iret
push
push
or
dec
xchg
and
iret
roll
dec
or
or
daa
or
jns
inc
jo,pt
out
outsl
pop
arpl
xchg
aas
aaa
sub
pop
mov
push
and
rcrb
mov
ret
and
dec
inc
cli
les
orb
push
jmp
dec
push
bound
xchg
xchg
xchg
sbbb
aaa
das
lock
ret
xchg
in
daa
or
pop
cs
sub
out
sti
or
push
jae
adc
mov
cld
sti
insl
mov
add
jae
fcoms
fs
mov
add
inc
dec
fsubrl
out
dec
add
or
mov
xchg
ja
scas
and
pop
mov
xchg
pop
sub
or
stos
jnp
std
adc
repz
icebp
jp,pn
pop
push
dec
dec
push
inc
xor
insl
mov
xorb
sbb
inc
sub
addl
js
or
add
ss
aaa
mov
add
outsb
cmc
aaa
add
mov
in
and
out
and
notl
add
mov
and
out
adc
add
push
into
add
or
xor
out
push
cmpsb
jge
adc
lods
sub
sub
pushf
nop
popa
mov
bound
push
movsl
cmp
push
scas
push
push
in
cmp
inc
push
stc
in
cld
pop
gs
dec
pop
inc
cs
daa
add
dec
jle
sahf
xchg
add
pop
pop
outsb
inc
fwait
cmp
push
push
cmpsl
fcoml
lock
pop
push
mov
push
inc
inc
rol
idiv
ficomps
xor
inc
pop
add
push
xor
push
xlat
and
mov
cmp
testl
call
add
mov
sbb
add
and
sar
add
inc
add
xor
movl
cmp
adc
outsb
js
mov
dec
mov
dec
push
pop
lock
push
xlat
cmpsl
cld
es
xor
add
cmp
add
or
in
les
push
insb
and
xchg
mov
jne
iret
aas
dec
aaa
xlat
and
pusha
iret
xor
stos
mov
xlat
ss
aas
flds
xor
push
mov
pop
fisttpll
add
ss
mov
cmp
out
inc
sub
push
sbb
outsb
mov
aas
testb
loopne
adc
xchg
mov
sbb
ja
adc
pop
pop
ret
xor
testb
dec
in
fs
fisubrl
sub
cs
ret
inc
add
jae
jno
and
xor
fildl
adc
xchg
jne,pt
mov
sbb
pop
sbb
dec
dec
lret
jae
cmpsl
add
add
sbb
testl
shll
scas
daa
inc
add
mov
and
call
jmp
insb
push
pop
jo
cmp
jbe
and
xchg
pop
in
sbb
testl
dec
ljmp
xchg
dec
pop
out
sub
add
xchg
out
inc
xchg
testl
repz
imul
testl
pop
test
bnd
jg
cvtps2pi
cmpsb
daa
cltd
lcall
pop
test
inc
mov
inc
fidivrs
insl
jle
inc
pop
sbbb
sbb
push
xchg
jbe
int3
pop
push
pop
loop
popa
ljmp
pop
dec
iret
shld
das
push
pop
out
jle
push
push
aam
das
cmp
mov
xlat
repnz
cs
dec
xchg
xchg
idiv
das
pusha
cmpsb
rcl
or
or
push
aaa
add
rorl
outsl
inc
pop
jbe
mov
maxps
call
push
or
bound
jp
mov
xor
scas
mov
mov
cmp
cmp
push
sub
repz
mov
mov
jp
fcmovb
xchg
scas
cmp
ja
lret
pop
mov
mov
andb
jnp
iret
push
in
dec
pop
sarb
sarl
addr16
xchg
add
push
int3
sbb
imul
ficoms
daa
adc
or
add
cmp
jo
push
or
adc
and
inc
inc
movsb
ret
jmp
inc
ret
nop
fildl
ds
outsb
jg
lahf
jmp
sahf
push
jg
cmp
test
sbbb
mov
inc
jb
push
add
mov
jl
add
lret
xor
stos
test
int
or
pop
inc
push
sbb
inc
pusha
push
sbb
addr16
jae
filds
jg
enter
push
jle
addb
mov
or
dec
xor
or
and
push
lods
sub
fbstp
xchg
sbb
into
ficomps
mov
cmp
or
pop
dec
sbb
or
add
pop
adc
push
and
adcb
push
mov
ret
cmp
insb
cmp
dec
sbb
pop
pushf
js
shll
jle
daa
lahf
or
push
adc
adc
flds
lcall
sub
rep
packsswb
loop
loop
sub
or
testl
and
add
xor
mov
sub
pop
inc
push
push
cs
orb
enter
shll
jae
movsb
cwtl
ljmp
in
bound
xor
outsl
xchg
push
mov
js
outsl
push
arpl
aaa
and
adc
cmp
js
out
or
adc
xchg
push
jmp
cmp
icebp
jle
iret
aam
or
mov
das
mov
cli
inc
pop
xchg
adc
cmpsb
push
xchg
sub
push
insb
xor
jb
lahf
insl
xchg
or
dec
cs
jge
fs
sbbl
cmp
xchg
inc
aas
or
add
sub
loope
cs
test
cmpsl
jnp
rolb
addl
repnz
lods
push
cltd
and
mov
add
pop
dec
sbb
push
ret
adc
mov
mov
das
inc
xchg
push
leave
mov
or
jbe
jbe
inc
cmp
mov
js
pop
mov
or
pop
dec
push
xchg
mov
inc
lock
mov
xor
add
imul
add
outsb
icebp
pop
in
xor
cmp
aaa
dec
dec
orl
add
in
or
cmp
pop
xchg
or
data16
out
shrb
sub
loopne
pop
push
sub
pushf
loope
jge
ret
adc
fildl
xchg
iret
test
add
incl
dec
xor
push
sbb
add
or
stos
pusha
inc
bound
sti
jl
jle
das
mov
and
pushf
add
lock
lds
sbb
outsb
mov
xor
aad
jbe
sub
test
int3
ss
push
mov
push
sahf
xchg
mov
xchg
push
ds
dec
cmpsb
out
mov
pop
mov
rcrb
dec
gs
adcb
div
mov
push
pop
sbb
or
xchg
dec
pop
cmp
push
sub
mov
xchg
lret
jp
dec
mov
mov
xorb
push
inc
scas
cs
push
dec
into
test
cmpb
pop
aaa
clc
stos
pcmpgtd
mov
nop
xchg
pop
jne
jp
pop
xchg
insl
xor
mov
in
aas
and
fdiv
mov
pop
outsb
and
loopne
jecxz
das
push
jg
shr
push
call
cwtl
push
stos
jb
fs
jbe
adc
jbe
test
push
and
std
push
xor
incl
sbbb
or
pop
dec
pop
cmp
iret
fildl
repz
bound
pop
xchg
push
push
bound
std
nop
in
cmpb
addb
xchg
das
jle
xor
int3
mov
orl
jle
fimuls
xor
or
mov
xchg
fisubl
xchg
cmp
push
out
cmpsb
subb
pop
inc
jl
mov
sub
dec
dec
test
cs
mov
push
cmpsb
gs
mov
enter
and
imul
cmp
or
push
dec
hlt
xchg
xchg
imul
push
dec
push
pop
dec
movzwl
pop
mov
scas
mov
es
or
add
or
scas
xchg
add
shll
add
or
imul
jg
mov
repz
pop
addr16
add
mulb
cmp
jae
adc
add
fldcw
lods
test
outsb
cwtl
jp
and
sbb
dec
icebp
fwait
push
lret
xchg
mov
push
push
out
sbbb
fiaddl
es
sub
js
and
js
jbe
lcall
fsubp
outsb
xchg
pop
stc
pop
fs
add
mov
dec
mov
pop
inc
iret
jle
jbe
dec
mov
mov
push
loopne
or
insb
xor
ljmp
add
sbb
fldt
mov
inc
cmc
rcll
jne
pop
jecxz
fisubrl
arpl
andb
imul
lahf
push
data16
jns
xor
and
mov
rorl
mov
nop
mov
push
inc
daa
jnp
xchg
arpl
inc
popl
out
mov
dec
adc
jo
and
dec
or
out
mov
push
rorb
adc
or
xchg
push
pop
addr16
and
xchg
xchg
pop
das
outsl
xchg
ret
loopne
push
add
das
inc
pop
or
mov
imul
aaa
cmp
add
mov
push
xor
fnstsw
add
das
inc
fmuls
dec
push
jb
push
push
xorb
inc
lret
loopne
popf
lock
jg
xchg
xor
adc
out
push
cli
roll
cmp
mov
lahf
pop
xor
cmp
fadd
adc
pop
insb
js
push
push
xor
popa
and
add
push
pop
nopl
in
filds
fisttpll
add
cmp
sbb
out
jbe
out
jp
int3
adc
dec
xor
imul
push
push
xor
daa
outsl
mov
add
stos
sbb
pop
push
sarl
dec
inc
cmp
pushl
dec
push
ljmp
insb
mov
cwtl
jmp
and
test
add
jge
jecxz
test
mov
inc
and
fwait
sbb
push
in
add
add
cli
push
pop
sbb
xor
in
inc
and
sbb
add
iret
js
mov
sbb
mov
inc
inc
inc
add
xor
daa
xchg
inc
add
push
scas
mov
inc
pop
pop
or
adc
dec
call
inc
push
add
add
mov
add
les
mov
cmp
repz
jnp
inc
out
mov
jns
lret
jmp
outsl
inc
jl
cmp
xor
fdivs
inc
or
or
pop
push
loope
mov
and
add
incb
pop
fidivrl
je
dec
arpl
jo
outsl
pop
fimull
jg
in
mov
mov
data16
enter
fs
or
jnp
inc
fists
adc
mov
imul
dec
stos
ss
mov
sbb
sub
push
ret
add
add
or
pop
int
scas
dec
pushl
jg
sub
imul
rolb
jae
sbb
xchg
loop
mov
cs
dec
push
jg
in
test
jo
das
add
jbe
push
jne
popa
jp
arpl
push
aas
add
jb
js
pop
sub
jae
popa
rorb
pusha
xchg
add
mov
sub
shlb
adc
mov
inc
jg
push
aad
jecxz
inc
xor
mov
xor
cmp
je
lods
xor
pushl
sbb
push
xor
xor
xor
in
pop
aaa
mov
shlb
aaa
or
push
cmp
dec
xchg
cmp
popa
cmp
inc
xor
mov
cwtl
xor
pushl
xor
xor
ss
xor
jbe
test
cmp
incl
dec
cmp
lea
mov
cmp
pop
cmp
popa
cmp
cmp
cmp
cmp
cmp
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
cmp
and
decl
ds
ds
ds
ds
aas
mov
pop
add
pushl
sbb
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
sar
pushl
and
sub
ss
outsb
ss
ss
ss
loopne
clc
jmp
ret
aaa
int
jmp
cmp
cmp
orl
cmp
cmp
cmp
lret
decl
cmp
cmp
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
incl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
mov
mov
cmp
ds
ds
jae,pt
cmp
mov
xchg
ds
ds
or
adc
dec
aas
push
aas
gs
test
mov
test
aas
pushf
aas
cmpsb
aas
mov
aam
fidivrs
in
aas
idivb
sub
incl
sbb
xor
inc
xor
je
jle
mov
xchg
xor
and
repz
sub
xor
push
push
cli
mov
scas
popf
xor
xor
xor
xchg
hlt
pushl
or
dec
xor
pusha
xor
xor
jg
pop
scas
pop
cs
jbe
xor
xor
mov
xor
decl
push
xor
sahf
mov
xor
sub
imul
cmp
shl
incl
xchg
aas
lcall
das
push
mov
xor
xor
jb
xchg
xor
ljmp
xor
outsl
xor
xor
xor
xor
xor
xor
clc
jns
xchg
xor
xor
xor
xor
call
mov
xor
xor
xor
xchg
xor
xchg
ss
ss
aaa
pusha
aaa
ljmp
cmp
cmp
cmpb
cmp
cmp
push
cmp
cmp
cmp
jno
sar
ljmp
cmp
cmp
cmp
cmp
inc
cmp
stos
cmp
clc
out
pusha
bound
xor
aaa
movsb
ret
mov
call
cmp
fnstsw
call
aas
cmp
mov
aas
dec
je
das
xor
xor
test
xor
xor
xor
pushl
xorb
xor
xor
pusha
xor
mov
sub
mov
xor
xor
xor
jg
pushl
xchg
fidivs
jmp
lret
aaa
xchg
cmp
cmp
cmp
cmp
loope
pushl
jle
stos
cmp
cmp
cmp
mov
iret
aas
xchg
popa
xchg
pop
repnz
jg
xor
xor
push
adc
xor
xor
xor
xor
jae
and
pushl
sub
inc
mov
ss
sbb
int3
aaa
pop
cmp
cmp
cmp
cmp
cmp
cmp
std
sar
cmp
cmp
push
cmp
jl
mov
sahf
cmp
cmp
scas
dec
aas
insl
aas
js
sbb
fcmove
nop
add
movsb
fbld
bound
icebp
ss
cmp
cmp
jg
insl
pop
add
fidivs
mov
xor
xor
xor
cld
jmp
jno
xorl
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
pop
je
outsb
cmpsl
aas
mov
pop
std
decl
xor
xor
inc
xor
gs
xor
xor
data16
xlat
sarl
pop
and
dec
aaa
dec
aaa
push
aaa
pop
sar
ljmp
aaa
dec
mov
cmp
inc
cmp
dec
cmp
mov
mov
mov
loop
les
enter
rcrb
sub
out
dec
cmp
and
pusha
ds
aas
sub
jl
cwtl
shl
xor
cs
xor
dec
aaa
mov
jg
and
clc
cmp
cmp
cmp
cmp
cmpb
xchg
cmp
cmp
inc
cmp
fnstsw
inc
lret
idivb
sti
ds
aas
jb
icebp
aas
sti
rcrb
or
int
push
push
iret
push
cmp
incb
inc
or
sub
inc
aas
pop
push
loopne
xchg
and
imul
int
ss
icebp
xor
mov
xor
add
dec
jb
xchg
das
cli
pop
fnsave
cmpsl
jle
jns
lods
aaa
cld
aaa
add
or
or
ja
push
cmp
cmp
mov
mov
push
cmp
cmp
cmp
cmp
sarl
adc
insb
lods
xor
stos
push
pushl
in
xor
xor
xor
jnp
add
sbb
mov
jecxz
sub
xor
testb
dec
xor
mov
repnz
push
hlt
pop
pop
std
aaa
mov
jle
cmp
cmp
pop
cmp
ljmp
arpl
pop
test
mov
ds
enter
clc
xlat
fistps
test
xor
jg
scas
mov
xor
pop
mov
inc
mov
out
lcall
push
xchg
mov
out
imul
sbb
sub
imul
pop
ss
dec
mov
ss
mov
pushl
xor
dec
cmp
cmp
and
cmp
mov
aad
insb
lock
sub
push
aas
scas
aas
rcr
add
lock
mov
xchg
inc
pushl
ret
xor
xor
xor
arpl
jae
xorl
jecxz
popa
aaa
mov
cmp
insb
pop
mov
cmp
cmp
and
dec
cmp
cmp
cmp
jb
cmp
adc
out
cmp
leave
cmp
xchg
faddp
add
mov
xor
enter
dec
aaa
gs
mov
cmp
cmp
xor
inc
pop
add
xor
jl
mov
xor
scas
ret
jg
jbe
xor
and
sub
xor
pop
jno
incl
dec
xor
pop
xor
xor
push
xorb
xor
xor
xor
mov
xor
fbstp
out
icebp
xor
xor
xor
add
push
xor
push
push
mov
push
call
add
cld
xor
xor
pop
xor
bound
imul
filds
or
xor
cli
mov
data16
mov
ss
jg
jbe
aaa
ljmp
cmp
mov
sarl
cmp
jmp
cmp
cmp
sub
stos
cmp
cmp
test
sarl
in
cmp
or
adc
sbb
xor
cmp
inc
js
fldl
inc
ds
fiaddl
andb
mov
jns
jle
xchg
ud0
ds
ds
lcall
mov
mov
inc
ds
sahf
fnstcw
loopne
jmp
ds
adc
ret
aas
psrld
aas
pop
pushl
loop
aas
add
aas
push
aas
push
aas
incl
pop
aas
bound
addr16
insb
aas
fidivrs
cmpb
aas
mov
aas
xchg
aas
popf
aas
movsb
aas
stos
lcall
aas
mov
aas
into
aas
fldenv
jecxz
call
aas
cli
aas
rclb
decl
loopne
mov
lret
xor
push
mov
sbb
cmp
cmp
loopne
and
dec
xor
pop
scas
data16
pushl
jno
jbe
jnp
xorb
xor
xor
add
xor
xor
xor
repnz
xor
es
clc
sbb
call
xor
sub
push
mov
mov
sahf
and
sub
cs
fcoms
xor
xor
dec
xor
push
xor
bound
imul
ss
xor
repnz
jg
repnz
mov
scas
xor
xor
xor
xor
xorb
xchg
loopne
inc
aaa
outsl
push
stos
aaa
jecxz
sub
mov
cmp
cmp
cmp
cmp
cmp
cmp
inc
aas
pusha
adc
aas
mov
mov
mov
mov
pop
jle
jbe
out
cmp
cmp
cmp
cmp
rcrl
cmovbe
subb
bound
movsb
xchg
cltd
lock
int3
xor
sahf
xor
and
fcoml
xorl
lea
cs
cld
call
xor
cmpsl
xor
loop
out
xor
dec
test
inc
push
dec
mov
fdivp
aaa
pop
aaa
mov
sahf
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
xorb
cmp
es
fiaddl
popl
cmp
mov
lahf
jg
pop
xorb
xor
xor
aaa
mov
pop
test
xor
lock
movsb
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
push
loopne
cmp
sar
ret
or
or
adc
sbb
sbb
and
and
sub
sub
out
outsl
test
aad
cmp
cmp
push
jne
sub
cmp
cmp
pop
cmp
rcrb
lea
shl
sbb
cmc
mov
sahf
xchg
lock
dec
xor
gs
jecxz
ss
scas
cmp
cmp
cmp
outsl
sbb
push
repz
je
or
cmp
icebp
fbstp
mov
cmp
add
add
cmp
cmp
cmp
pop
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
push
jl
cmp
cmpl
dec
push
data16
jg
xor
xor
xor
xor
xor
xor
dec
xor
cmpl
xor
push
sbbb
ss
filds
aaa
pop
orb
cmp
pushl
loope
lcall
out
push
cmp
cmp
cmp
jns
test
test
dec
cmp
push
jge
lret
jne
add
cmp
jp
lods
push
inc
or
push
adc
pusha
jne
jno
mov
testb
scas
outsb
xor
push
call
ja
xorb
xor
adc
xor
xor
mov
mov
aaa
cmp
inc
insb
ss
sub
mov
cmp
cmp
inc
aaa
inc
jb
aaa
and
mov
call
cmp
cmp
cmp
cmp
cmp
mov
loopne
sbb
cmp
cmp
cmp
cmp
mov
cmp
mov
cmpsb
ret
pop
push
push
or
sbb
mov
jnp
mov
xor
xor
cmp
data16
jo
and
js
mov
mov
lock
mov
rdmsr
pop
cli
xor
insb
xor
je
lcall
jp
xor
xor
cwtl
xor
fistps
mov
mov
mov
xor
xor
xor
xor
call
xor
xor
xor
xor
xor
xor
xorl
mov
mov
pop
aaa
out
cmp
out
sub
jg
ds
sbb
dec
lcall
daa
mov
cmpsb
dec
xor
push
mov
dec
xor
inc
mov
ficomps
cmp
sbb
xor
xlat
fs
pop
inc
adc
ss
ss
add
stos
dec
mov
pop
cmp
sub
cld
mov
into
jb
jns
cmp
sbb
loop
add
cmp
cmp
cmpb
cmp
cld
lahf
shrb
cmpsb
aaa
mov
ret
add
cmp
divb
or
aaa
xor
clc
or
clc
loopne
inc
sahf
bound
jbe
jge
xchg
jmp
jle
stos
xor
cmp
xchg
cmp
inc
adc
cmp
cmp
lcall
mov
xor
cmp
out
cmp
cmp
lcall
cmp
lock
clc
cmp
mov
movsl
fcmovbe
ds
cmpb
aas
fdivrl
test
push
loopne
aas
in
in
aas
lock
add
scas
inc
or
inc
add
das
xor
jno
sub
and
xor
cli
jg
or
cs
mov
cmp
cmp
mov
mov
push
cmp
cmp
fimull
pop
test
jae
int3
ds
ds
sbb
inc
repz
sarb
out
lock
xchg
pusha
decl
lock
xor
xor
iret
aaa
aam
fdivs
fdivl
loopne
aas
push
loop
in
call
aaa
hlt
aaa
clc
mov
and
loope
repnz
cmp
jbe
jg
mov
hlt
cmp
push
cmp
inc
jg
sbb
cmp
cmp
mov
cmp
mov
lret
fs
aaa
push
je
sub
add
aam
mov
xor
inc
sbb
mov
dec
xor
repnz
xor
dec
xor
push
jecxz
divb
xor
xchg
xor
out
loopne
jl
dec
shll
aaa
std
loopne
push
cmp
xchg
cmp
mov
cmpsb
inc
xor
cmp
filds
mov
mov
dec
jne
add
aam
loopne
pop
idivb
call
add
jp
cmp
cmp
jne
stos
cmp
cmp
cmp
cmp
cmp
popf
cmp
cmp
mov
ss
jg
cmpsb
cmp
cmp
cmp
fidivs
xchg
cmp
outsb
mov
pop
loope
mov
ds
ds
scas
and
adc
rcrb
lcall
outsl
push
outsl
out
xor
xor
xor
jb
push
movsb
adc
mov
cmc
fcomip
or
aaa
lret
out
cmpl
cmp
lahf
cmp
inc
daa
decl
cmp
cmp
xor
std
mov
imul
inc
xor
sub
sub
jmp
out
xor
xor
xor
xor
mov
push
jl
lcall
and
push
aaa
mov
cmp
mov
cmpsb
mov
shll
and
xor
inc
jmp
sbb
pusha
xor
jo
je
js
jl
fdivrp
scas
test
cli
add
push
mov
push
xor
xor
dec
sarb
rolb
cwtl
cmpsb
les
lret
jecxz
dec
adc
aaa
mov
lahf
push
inc
cmp
std
ljmp
cmp
cmp
cmp
or
adc
pusha
call
call
popf
mov
cmp
cmp
cmp
cmp
cmp
es
push
jb
scas
in
rcrb
pop
sbb
sub
sbbb
aas
and
and
sahf
shrb
push
add
les
xor
out
xor
push
cld
jg
xor
xor
xor
xor
xor
xor
ljmp
xchg
adc
scas
rclb
loop
xor
ss
cmp
cmpsl
out
push
cmp
les
addl
xor
xor
xor
insl
cli
cwtl
cli
add
xor
popa
xor
loopne
push
shlb
jb
xor
push
jle
sarb
mov
cmc
mov
aad
adc
cmp
cmp
cmp
loope
pop
movsl
mov
xchg
sbb
and
jne
push
jle
push
fiaddl
jg
push
jo
mov
lcall
cld
jg
pop
pop
xor
xorl
hlt
xor
push
rcrb
push
and
xor
xor
or
pop
stos
mov
jo
scas
xor
daa
cli
scas
jb
and
jle
cmp
cmp
cmp
out
bound
cmp
cmp
jge
lods
push
pop
dec
jg
rclb
xor
data16
pushl
insl
xor
xor
xor
dec
ss
ss
xchg
clc
data16
push
xor
idivl
inc
sahf
pushf
sarb
int
scas
mov
xor
xor
in
sbb
pusha
dec
mov
ds
mov
push
lahf
xor
pop
xor
xor
pop
test
xor
xor
xor
xor
xor
dec
movsb
pop
sbb
ljmp
aam
int3
ret
xchg
jmp
jbe
movsl
aas
mov
imul
inc
pop
xor
aaa
mov
js
sbb
xor
out
dec
mov
xor
cli
jmp
out
negb
sti
dec
add
cmp
cmp
xchg
add
jle
popa
dec
xchg
cmp
and
or
pop
cmp
jbe
jnp
test
scas
cmp
jmp
inc
cmp
cmp
cmp
ljmp
jle
rolb
push
add
xor
ja
mov
ja
xchg
shll
cli
xor
hlt
ss
or
arpl
or
add
push
push
test
xorb
or
inc
dec
and
imul
dec
adc
mov
std
bound
cmp
ss
ss
testb
cmp
cmp
adc
loop
adc
cmp
sbb
cmp
cmp
icebp
dec
inc
add
adc
pop
out
mov
xor
pop
xor
mov
xor
xor
mov
in
out
xor
push
xchg
mov
aam
imul
mov
cmp
add
sub
jl
imul
mov
inc
push
insb
or
mov
lea
mov
movsl
repnz
les
dec
xor
dec
out
scas
cmp
cmp
test
sub
test
adc
hlt
sbb
xor
ss
xor
xor
lods
in
mov
test
cli
cmp
decl
cmp
cmp
cmp
jecxz
cmp
ljmp
pop
or
dec
xor
mov
mov
xor
fcmovu
mov
or
inc
xchg
test
dec
jg
or
int3
scas
aam
fcoms
loopne
in
call
push
clc
cmp
cmp
sub
push
cmp
adc
das
scas
scas
xor
xor
mov
fcmovnu
stos
js
inc
nop
mov
xor
call
and
xor
add
xchg
xor
ljmp
push
fnsave
stc
aaa
sbb
cmp
data16
cmp
bound
cmp
xor
fstpt
stos
loop
cmp
pushf
ds
mov
ljmp
add
inc
cmpsb
int
jecxz
std
xor
xor
push
outsb
stos
xor
pop
inc
outsb
xchg
cs
xor
aaa
inc
cmp
cmp
cmp
stos
ret
jae
inc
cmp
and
cmp
cmp
shll
dec
jp,pt
mov
ds
mov
imul
enter
or
pop
pop
mov
arpl
and
outsb
dec
cmp
xchg
mov
pusha
add
or
xor
outsb
mov
xor
xchg
mov
sahf
xor
jne
xor
mov
push
lods
nop
cwtl
ss
dec
movsb
ss
inc
aaa
test
mov
cmpb
sub
jl
decb
cwtl
mov
scas
pop
lock
std
cmp
pop
adc
push
or
dec
shrb
jle
daa
rol
xor
sub
or
dec
push
fs
cmp
cli
cmp
aam
loopne
cmp
mov
outsb
std
push
daa
xor
dec
add
ss
out
ss
ds
leave
outsb
mov
pop
loopne
std
ja
push
cmp
xchg
cmp
cmp
aaa
loop
xchg
sub
cmp
lock
cmp
jnp
mov
mov
cmp
mov
pushf
mov
mov
pop
and
inc
cmpl
out
or
xor
mov
xor
repz
xor
cmp
xor
mov
cmp
xor
fcmovbe
ja
jb
lret
in
icebp
push
shlb
out
mov
push
test
sbb
ds
push
loopne
cmp
cmpsb
shrb
dec
rolb
cmp
cmp
cmp
cmp
cmp
cs
das
ficomps
sub
cmpsl
je
push
sbbl
stos
cmpsb
cmp
add
enter
das
inc
aaa
push
movsb
jb
xor
xor
rcll
and
xchg
xor
aam
lcall
xor
sub
aaa
xor
xchg
push
mov
cwtl
xor
lcall
mov
add
inc
xor
xor
lahf
inc
iret
outsb
mov
sbb
sbb
ds
mov
aaa
inc
mov
aaa
xchg
lea
xchg
cmp
rorb
cmc
push
cmp
addl
cmp
xchg
scas
cmp
cmp
cmp
cmp
dec
cmp
mov
jg
mov
mov
cmp
xchg
mov
pop
mov
sarb
ljmp
pop
add
cmp
mov
stos
shlb
cmp
ljmp
loopne
mov
mov
xchg
dec
movsl
orb
push
xchg
out
sbb
cmpl
pop
inc
test
repnz
rcrb
clc
cmp
xor
outsb
push
gs
xor
les
push
lea
out
xor
lret
es
push
push
mov
xchg
call
mov
push
xor
cmp
xor
add
fwait
xor
leave
xor
mov
sbb
mov
aaa
das
aaa
xor
xchg
loop
push
add
adc
pop
pop
sarb
jmp
rolb
fistpll
xchg
lcall
aaa
ss
cmp
fdivrs
fdivrl
adc
push
cs
cltd
or
jo
or
stc
push
adc
and
mov
xor
xor
xor
xor
dec
xor
ja
or
xchg
pop
cmp
pusha
xor
fbstp
cs
aaa
outsb
xor
mov
ds
in
add
adc
push
cmp
push
jle
cmp
sub
cmp
cmp
cmp
pop
fildll
ds
add
adc
or
add
test
repnz
inc
pop
stos
icebp
out
insl
cmp
and
or
sub
bound
cmpl
test
xor
fdivl
push
mov
xchg
ss
ret
mov
stos
sahf
mov
lock
mov
scas
enter
rclb
ss
clc
mov
call
ret
mov
add
inc
pusha
test
add
cmp
adc
out
xchg
mov
insb
clc
incl
ret
cmp
aas
aas
push
aas
jbe
add
add
mov
xor
jl
ror
sub
sub
lcall
imul
sbb
dec
dec
lcall
leave
adc
adc
push
ret
pushf
out
jae
xchg
ret
stos
test
and
xchg
rol
cmpl
sub
push
loopne
sbb
xor
and
and
xchg
sarb
xor
ret
test
xor
rcll
incl
cmp
inc
aaa
jo
jle
mov
xchg
aaa
xlat
aaa
in
aaa
sub
mov
pop
sub
xchg
imul
sub
cmp
cmp
movb
push
cmp
or
lret
scas
jg
dec
icebp
cmp
insl
mov
add
data16
and
test
add
divl
arpl
cld
pushl
push
jns
lret
ss
sbb
lea
mov
aaa
push
mov
dec
add
cmp
add
mov
shrb
in
push
sub
cmp
cmp
into
pop
add
and
xor
mov
mov
sarb
out
and
inc
mov
in
loopne
add
xor
pop
jo
xor
lcall
mov
mov
mov
inc
cmp
cmp
cmp
add
test
xchg
stos
popa
pop
outsl
cmp
cmp
pop
mov
jne
add
xlat
xor
push
add
sbb
mov
push
ss
imul
pop
test
fcmove
out
ffree
jmp
jp
add
mov
stos
aaa
cmp
aas
xchg
pop
inc
subb
test
cwtl
repnz
mov
pop
cmp
cmp
cmp
add
rorl
sbb
imul
lret
and
xor
sbb
mov
mov
or
push
mov
cmp
pop
add
aam
movsl
add
pop
xor
cmp
push
sbb
adc
push
mov
xchg
adc
jge
fwait
mov
icebp
inc
mov
jge
ss
loopne
loopne
inc
fstpt
loop
jb
lods
aas
mov
ret
jp
fidivs
rcr
adc
cmp
ss
jp
aaa
sbb
dec
aaa
xchg
mov
cwtl
push
mov
shlb
sbb
inc
xchg
mov
fldl
inc
adc
int
adcb
out
xor
loopne
pop
dec
stos
cmp
adc
imul
push
lcall
ljmp
out
rcrb
push
jb
js
lcall
cmp
sarl
in
notl
adc
sbb
cmp
cmp
ljmp
xchg
aas
mov
lcall
inc
mov
fwait
jno
xor
adcb
xor
test
and
pop
xor
fisttpll
scas
ja
mov
xchg
xor
mov
xor
xor
cmp
xor
outsl
aam
inc
insb
xor
roll
pop
ja
sub
inc
push
xor
xchg
add
adc
push
loop
sub
es
dec
xor
mov
out
or
dec
inc
push
add
add
add
lea
xor
cmp
mov
stos
mov
ror
lock
mov
repnz
outsl
cmp
cmp
inc
and
inc
cmp
hlt
jg
add
push
cmp
cmp
lret
cmp
dec
inc
outsl
aas
sahf
aas
and
push
and
mov
mov
jg
jb
fwait
xor
xor
lahf
mov
or
xor
cmpsb
add
cmpl
test
mov
lock
clc
aaa
adc
pop
xchg
movsl
mov
push
cmp
xchg
out
push
push
popa
mov
add
jno
adc
cmp
pop
clc
sub
cmp
sti
cmp
xor
cmp
inc
xchg
xchg
call
push
mov
es
fidivrl
ds
sahf
push
inc
xorl
push
mov
icebp
filds
push
push
dec
xor
xor
dec
mov
jbe
xchg
xor
mov
inc
out
xor
mov
pop
aam
fisttps
or
shrb
xor
insl
cli
dec
mov
mov
pop
add
or
xor
xor
dec
xor
xor
pushl
aaa
cmp
testb
push
fwait
sbb
lock
stos
addl
and
addb
sahf
andb
cltd
mov
dec
dec
xchg
pusha
cmp
adc
cs
xor
inc
pop
cmp
cmp
cmp
mov
push
and
jmp
inc
rolb
scas
mov
xor
pop
pop
xor
add
xor
daa
push
mov
xor
jo,pt
lock
xor
xor
jbe
cs
ljmp
ss
push
mov
jns
sar
jecxz
dec
push
stos
mov
inc
ss
mov
movsl
sarb
cmpsb
jb
ja
test
out
out
jp
mov
movsb
jmp
cmp
cmp
mov
jnp
jg
push
adc
cmp
cmp
cmp
sbb
or
xchg
lds
jo
sahf
adc
andl
mov
fwait
daa
stos
rorb
push
mov
cmc
push
movsl
outsb
inc
push
push
cmp
aas
jne
scas
mov
xor
xor
push
test
cmpsb
xor
andl
test
aam
stos
inc
and
es
push
call
mov
fwait
repnz
out
repz
xor
xor
dec
inc
sahf
data16
outsb
push
sbb
xor
xor
xor
xor
shll
adc
inc
xchg
es
sub
test
xorb
xacquire
ss
sbb
mov
inc
xor
aaa
xchg
cmp
sbb
aaa
into
es
aaa
push
cmp
bound
ja
add
cmp
cmp
lock
xchg
inc
cs
xchg
push
loope
jmp
pmaxsw
scas
cmp
cmp
cmp
pop
cmp
mov
int3
cmp
cmp
mov
repnz
sub
cmp
pop
ds
inc
ds
add
cmc
add
jno
jge
mov
push
and
lods
outsb
into
in
mov
cmp
inc
sub
push
and
cmpsb
inc
add
dec
cld
lea
push
jbe
jge
cmpsb
xor
sub
xor
cmp
push
hlt
xor
adc
inc
and
ss
xlat
sbb
pusha
aaa
or
cmp
cmp
mov
cmp
jne
xchg
cmpsb
shr
xor
push
lcall
es
popf
cmp
mov
test
dec
ss
push
mov
data16
push
xor
sbb
inc
rolb
js
jle
cld
mov
ret
sbb
sub
outsb
pop
cmp
mov
lds
gs
cltd
add
imull
std
adc
mov
xor
xor
xor
xor
xor
mov
in
xor
push
jge
push
dec
stos
xor
aas
xor
sub
mov
dec
rcl
stc
fisubrs
lods
xchg
test
movsl
jle
pop
add
sbb
aaa
sub
cli
or
mov
cmp
cmp
pop
mov
jo
push
cli
xor
xchg
mov
std
jg
adc
xor
xor
pop
mov
mov
xor
cli
push
loopne
xchg
and
xor
inc
daa
jle
sahf
ss
cli
mov
dec
and
decb
ret
push
xorl
push
cs
xchg
cmp
ss
cmp
loopne,pn
jl
cmp
cmp
lret
outsb
es
jmp
test
lds
lret
mov
call
cmp
add
sar
jmp
icebp
push
aas
adcl
mov
das
pop
mov
pop
jae
mov
out
inc
push
sbb
lahf
add
inc
fisubrs
xchg
adc
push
xor
xor
xor
jle
or
loope
lret
bound
loopne
movb
xor
in
xor
push
sub
cmpsb
push
adc
aaa
push
cmp
pop
mov
outsb
cmp
rol
and
fs
jne
loope
nop
aad
fldenv
xor
xor
sub
xor
inc
mov
int3
adc
mov
mov
jg
and
or
ds
sbb
xor
pushl
sub
inc
test
xchg
mov
or
pop
or
jbe
pushf
pop
or
mov
or
adc
fwait
not
ret
pop
ds
aas
out
sub
sub
pop
cmpsb
jo
mov
push
xor
push
push
in
rclb
pop
shll
mov
and
inc
bound
stos
push
jge
in
cmp
inc
xchg
incb
pop
aaa
nop
aaa
fcmovne
pop
push
add
pop
sbb
jb
mov
mov
mov
leave
cmp
cmp
cs
negl
xchg
jle
dec
jl
push
cmp
movsl
pshufw
mov
fwait
cmp
sub
clc
cmp
xchg
push
xchg
or
pop
jge
cwtl
cli
lods
jp
sbb
jl
cmp
cmp
push
cmp
dec
cmp
shlb
jbe
cmpb
cmpsb
add
into
enter
orb
into
lock
xor
cmp
shrl
je
adc
cmp
mov
inc
rcrb
imul
push
adc
arpl
or
push
ds
call
aaa
sub
push
jp
pop
out
add
xchg
dec
xor
xor
aas
aaa
addr16
or
ret
xchg
stos
and
sbb
mov
adc
in
push
or
inc
call
ja
loopne
xchg
cmp
scas
ds
cmp
cmp
jle
lcall
cmp
adc
pop
inc
jg
aas
sbb
adc
adcb
inc
push
xchg
push
test
xor
sar
push
orb
rcrb
push
xor
cs
push
xor
xor
sub
cmpsb
iret
lret
clc
call
lds
or
xor
ljmp
fisubl
xorb
sub
or
inc
mov
aaa
xchg
push
xchg
jle
mov
cwtl
bound
loop
ret
cmp
push
push
std
loopne
cmp
push
fwait
cmp
rolb
test
cli
xchg
sub
xor
inc
call
lcall
xor
test
mov
xor
sbbb
fidivrs
xor
mov
out
out
fldenv
or
cmp
jle
shlb
push
aaa
mov
cmp
incl
pop
cmp
cmp
jmp
inc
imul
mov
cmp
cmp
pop
ret
or
fistpll
out
repnz
imul
loopne
sub
and
xor
and
xchg
add
shlb
outsb
lock
jle
inc
ja
pop
ficompl
leave
xor
push
add
push
xchg
mov
loop
xchg
add
xor
sbbl
ds
lds
pop
stos
inc
aaa
pop
inc
ret
adc
xor
cmp
cmp
ficoml
push
jl
in
add
cmp
jmp
pushf
fisubrs
ss
or
xor
xor
mov
out
dec
out
rolb
and
inc
dec
adc
jle
cmpsb
xor
pop
call
mov
xchg
inc
fbld
mov
imul
mov
stos
bound
sti
cmp
jp
jb
cmp
mov
loop
out
inc
fidivrs
xchg
cmp
sar
cmp
ret
stos
andb
out
ds
pop
je
decb
movsb
ds
loop
adc
push
adcb
mov
and
mov
and
pop
inc
push
sub
ss
xchg
jb
xor
push
call
mov
lods
je
push
mov
mov
jnp
fmull
scas
imulb
aaa
aaa
mov
scas
ss
mov
stos
sub
out
out
jb
add
test
jp
cli
rcll
roll
cmp
loop
stos
dec
into
data16
cmp
push
sbbl
addr16
cmp
cmp
jo
adcb
xor
sub
imulb
add
mov
inc
loopne
aas
call
dec
or
repnz
jmp
xor
adc
push
inc
pop
mov
pop
sub
sbb
jae
xor
xor
xor
xor
jo
lock
mov
loop
xor
sbb
jp
lods
mov
add
xor
inc
jo
cmp
sbb
mov
movsl
sub
push
mov
aam
scas
inc
adc
subb
dec
fs
xchg
stos
push
pop
je
xchg
or
outsb
cmpsb
je
mov
repz
push
mov
sbb
adcl
in
cmp
pop
lods
addl
je
lods
cmp
mov
push
ds
ds
js
ja
cwtl
aas
rclb
dec
cld
xor
xor
rolb
jo
xor
and
mov
das
xor
inc
test
pop
stos
push
push
push
jb
inc
adc
adc
ds
adc
jae
ja
jg
xchg
xor
mov
push
stos
into
mov
mov
xor
aad
push
jp
loopne
or
mov
aaa
jns
push
loop
jb
cmp
push
lahf
loop
cmp
add
add
xchg
lock
ds
cs
daa
ss
ds
push
xor
cmp
jb
xchg
push
sub
inc
mov
lods
mov
xchg
inc
mov
ljmp
push
add
or
xor
mov
notb
daa
push
ficompl
pop
cmp
inc
orl
pop
stos
push
dec
pop
call
stos
push
bound
loop
and
push
pop
test
es
and
dec
loopne
sub
test
out
jo
ljmp
cmp
cmp
inc
mov
inc
mov
mov
mov
mov
cs
call
xor
jnp
xor
xor
inc
aaa
icebp
ja
xchg
xchg
xor
add
cmpsb
mov
ret
or
dec
stos
adc
pop
pop
push
mov
add
add
xor
mov
cmp
cmp
pop
ja
ja
adc
cmp
stos
cmc
inc
mov
xchg
dec
cmp
push
or
out
add
andb
js
jo
movsl
pop
sti
bound
out
push
pop
mov
push
aas
pop
bound
imul
jno
jns
sub
mov
popf
aas
mov
push
mov
lods
lret
jp
notb
cmp
stos
lock
roll
out
and
jo
xor
jp
lcall
jmp
sti
stos
sub
aaa
mov
test
scas
mov
inc
adc
cmp
movsb
test
xor
mov
jo
mov
jb
into
adc
cmp
xor
mov
xchg
cmp
lcall
jbe
ss
lods
dec
add
mov
adc
xor
xor
stos
bound
xorb
into
sbb
push
out
inc
add
push
sub
lret
cmc
push
scas
loop
xor
mov
aad
ret
dec
fs
mov
and
push
mov
pop
cs
cmp
sbb
lcall
pop
xor
mov
jne
fists
daa
into
imul
push
sub
and
or
xor
dec
loop
cmp
pop
rolb
subl
imulb
inc
add
mov
xor
xor
cs
jo
mul
ss
bound
sahf
push
sub
sbb
xchg
cmp
mov
jg
or
push
mov
mov
sbb
sub
add
fidivrs
cli
cmp
inc
add
cmp
cmp
pop
or
sbb
mov
and
iret
loop
bound
xor
xor
sysenter
and
pop
lods
inc
and
push
orl
dec
or
dec
stos
and
jbe
mov
aad
xchg
scas
dec
fistpl
bound
add
mov
pop
mov
icebp
lds
mov
cli
in
add
xchg
clc
stos
jle
aaa
and
sub
inc
mov
inc
adc
or
mov
mov
pop
or
inc
dec
pop
test
lcall
ret
cmpsl
test
sahf
repnz
adc
cmpsl
xchg
fidivrs
mov
jmp
mov
pop
data16
dec
mov
cmp
cmp
cmp
cmp
loop
jecxz
push
cmp
cmp
xchg
imul
loop
fisubs
cmp
xchg
jl
mov
mov
int3
xor
dec
aas
push
js
or
test
cmpsl
sbb
stos
addb
push
inc
cmp
inc
and
mov
lret
data16
pop
inc
cmpsl
jo
ret
pop
jle
xchg
ffree
lds
outsb
cwtd
cli
mov
xor
xchg
mov
inc
xchg
push
cmc
scas
jp
jp
push
or
sub
pushf
popa
cmc
sub
mov
xor
xor
xchg
ljmp
push
movsb
stos
sub
jg
shrb
push
sahf
scas
push
sbb
inc
jp
xchg
push
cmp
fdivrp
cmp
clc
clc
sbb
sub
xor
aaa
or
outsb
mov
test
add
frstor
inc
bound
fs
dec
mov
testb
xor
cmpsb
ret
xadd
sbb
testb
cmp
insb
jb
cmp
cmp
loopne
mov
xor
xchg
jo
ds
nop
jne
dec
fstl
movsb
into
mov
cld
loope
scas
pop
out
pop
aas
data16
sarb
std
dec
pushf
lods
cmpsb
scas
mov
mov
jbe
mov
leave
ret
push
into
cmp
fldcw
sbb
adc
movb
sbb
cmp
push
cli
enter
stos
and
out
xor
leave
inc
ss
into
cltd
ss
stc
cmpb
cmpsl
mov
lea
xor
es
push
sbb
and
lcall
cmpl
jns
add
pop
pop
mov
add
leave
xchg
icebp
cmp
xchg
sub
mov
ljmp
dec
or
xor
xor
inc
xchg
sub
xor
xor
add
fstl
js,pn
mov
inc
rclb
cld
pop
cs
aaa
shlb
add
sbb
inc
jbe
orl
xchg
sub
cmp
mov
cmp
ss
cmp
inc
idiv
xchg
dec
decb
mov
daa
rol
and
dec
loope
adc
adc
push
adc
je
xor
test
rcrl
add
xor
mov
mov
add
adc
jp
popa
cltd
stos
add
daa
cmp
dec
outsb
jl
jmp
das
ljmp
shll
decb
mov
stc
dec
inc
cmp
dec
repnz
scas
pop
cmp
lock
int
cmp
cmp
cmp
adc
inc
jo
jmp
dec
mov
aas
pusha
mov
xchg
scas
shlb
fsubrs
movsl
or
sahf
int
divl
sbb
out
inc
insl
xor
lods
jb
and
int
adc
js
sub
stos
aad
push
cld
pop
xor
xor
xor
inc
lea
les
inc
xor
test
xchg
mov
add
ficoml
gs
adc
decb
sbb
push
xor
pop
or
lret
xor
ss
ss
mov
sbb
cmpsb
push
test
add
cmpl
cmp
aaa
sbb
and
es
mov
loop
or
ret
push
pop
aaa
pop
fs
add
jle
aaa
addb
stos
aaa
test
mov
subl
jno
scas
pop
shlb
mov
aaa
shlb
dec
or
fmull
cmp
js
cmpb
sub
data16
xchg
ss
inc
add
les
or
sbb
les
pop
xchg
add
sbb
sbb
add
push
jbe
add
sub
add
push
sub
cmp
cmp
out
insb
cmp
jno
ret
shrl
push
ret
xchg
lret
test
and
lock
inc
movb
fwait
jp
or
or
adc
inc
test
sbb
and
shl
xor
mov
xchg
sub
rorl
jno
stos
je
cmp
cmp
cmp
cmpl
sub
lcall
dec
mov
mov
fbld
leave
cmp
cmp
cmp
je
pop
popf
scas
fisttpll
in
in
hlt
inc
pop
add
add
add
shll
or
adc
test
sub
int
cmp
cmp
dec
dec
push
pop
sahf
stos
push
push
push
jbe
mov
add
push
mov
pop
jmp
or
in
or
cmp
mov
mov
ljmp
push
outsb
movsb
fdivrs
outsb
add
mov
ds
push
cmp
call
int3
cmp
add
mov
lret
sbb
dec
add
sub
jl
cmp
or
mov
cmp
push
pop
cmp
cmp
cmp
fsubl
mov
ds
cmp
aam
data16
out
cmp
aam
add
cmp
outsb
lcall
inc
movsl
push
jp
movb
stos
mov
and
push
shlb
pop
sub
or
mov
xor
or
pop
les
inc
xchg
hlt
push
and
lods
mov
pop
sti
xchg
rclb
sbb
les
fmul
cld
xor
sub
jne
out
inc
pop
xor
mov
jmp
or
sub
sub
pop
jg
sbb
adc
mov
add
xor
cmovb
xor
mov
insb
je
add
xor
das
push
test
xor
int3
xor
aaa
call
xor
dec
outsb
jl
je
sub
lods
out
or
scas
cs
lcall
pushf
mov
dec
mov
sub
outsb
mov
xchg
xor
pop
gs
dec
je,pn
daa
mov
fistl
mov
cmp
lods
aam
add
sbb
cmp
lods
cmpsb
and
aam
jp
xor
adc
mov
mov
aam
and
xor
or
pushf
ds
in
mov
aas
xor
pop
pushf
sbb
cs
mov
and
pop
inc
enter
aam
faddl
incl
push
sub
adc
xorb
adc
out
cwtl
mov
add
jmp
fimull
ds
ljmp
in
adc
hlt
ret
mov
adc
ds
xchg
mov
xor
data16
xor
xor
cmp
push
bound
xor
xchg
cwtl
xor
mov
call
enter
rorl
loopne
push
pop
pop
jno
xor
sub
into
or
scas
add
sbb
pushf
xor
push
dec
inc
add
and
adc
push
ficompl
mov
rorb
add
adc
xor
sub
inc
pop
push
jb
adc
fsubl
test
pop
idiv
xor
xor
cs
push
push
daa
out
dec
cmp
inc
pop
dec
push
push
loop
add
pop
push
pusha
pushw
dec
adc
jo
js
cmpb
inc
mov
mov
cmp
aad
mov
xchg
dec
inc
inc
enter
ret
call
lcall
sbb
pop
mov
sbb
dec
es
orb
lods
fmull
xchg
or
xchg
loopne
or
cmp
addr16
mov
mov
mov
in
adc
fildl
bound
mov
hlt
lock
and
push
mov
cs
xchg
clc
mov
pushf
cmp
cmp
stos
pusha
cmp
add
stos
js
jl
xorb
fimuls
cmp
out
mov
push
add
mov
sbb
loopne
push
fdivrs
js
cld
sbb
adc
sbb
sub
mov
js
jl
adcb
bound
add
xchg
or
rorb
pop
or
pop
mov
scas
fwait
aad
push
push
mov
clc
dec
fsubl
or
mov
sub
pop
aas
je
movsb
cli
push
mov
lcall
ret
data16
fs
addl
xchg
xor
push
mov
mov
push
adc
or
fsubrl
dec
and
inc
pop
out
mov
sub
mov
dec
dec
rclb
ljmp
scas
or
cs
dec
ret
xchg
push
cmp
je
ss
outsb
dec
ss
sbb
andb
lods
push
cmp
jo,pt
js
subb
adc
ret
in
adc
pcmpeqb
sahf
adc
mov
mov
nop
inc
sbb
sbb
cs
aam
sub
cmp
sbb
mov
dec
cmp
pusha
nop
inc
sub
pop
push
cs
cmpb
mov
stos
or
out
add
dec
sub
inc
pop
push
mov
jo
nop
repnz
rcr
mov
or
pusha
rolb
ss
fadds
xor
sub
add
fisubl
dec
xor
loop
push
push
or
mov
push
and
out
dec
rorb
aaa
lret
jbe
push
call
jb
mov
sub
xor
mov
shll
or
jb
sbb
sbb
sbb
add
push
xchg
sarb
add
test
loop
dec
lock
jle
negb
xor
out
shrb
xor
push
sbb
and
cmc
and
aaa
dec
inc
push
xor
ret
adc
jo
js
push
inc
pop
jge
xor
xor
jb
mov
sbb
lcall
enter
fadds
loopne
mov
lock
sbb
cmp
adc
dec
cmp
sub
inc
roll
mov
pop
and
mov
and
arpl
je
test
mov
in
adc
loop
ds
sbb
mov
lret
inc
test
out
lock
or
repnz
push
jecxz
push
inc
je
js
xorb
shlb
xchg
mov
vprotd
or
sub
inc
addr16
dec
je
inc
fimull
push
jp
sub
pop
out
pusha
ljmp
jo
js
cmpb
loope
sahf
cmpsl
mov
data16
daa
mov
mov
into
sarb
sahf
shlb
or
subb
cmpsl
call
cmp
sub
rolb
cmp
lds
adc
and
mov
push
inc
or
ds
and
add
pop
das
lds
sbb
dec
lock
jg
mov
jp
push
add
push
lcall
or
xor
idivb
add
pop
lahf
pusha
popf
rorb
and
jno
xorb
adc
cs
add
sub
push
mov
push
and
ret
hlt
sbb
pushf
ljmp
dec
cwtl
pop
ljmp
sarb
sub
push
push
adc
lahf
add
aam
imul
sarb
sarb
jno
xchg
adc
adc
mov
jno
imull
nop
push
pusha
inc
lods
xlat
lahf
push
adc
loopne
call
cmp
jmp
or
adc
sbb
inc
dec
rcr
xchg
add
adc
xor
sub
out
jbe
cbtw
test
add
push
jecxz
add
cmp
fiadds
cmp
jb
sbbb
adc
dec
inc
ds
sbb
sub
movsb
pushf
cmp
sub
mov
mov
mov
mov
pop
xchg
jp
fsubl
lcall
lods
push
cwtl
scas
int3
pop
dec
ja
repz
insb
test
mov
inc
ret
shl
and
or
and
and
fwait
pusha
test
fildll
das
lahf
mov
sbb
int3
and
mov
movsb
xchg
imul
sbb
adc
cmp
mov
sbb
push
or
data16
inc
outsl
jl
and
or
pcmpgtb
test
add
sahf
aam
ret
mov
test
sbb
stos
in
add
cmp
sbb
cmp
pop
sti
test
cmp
inc
mov
in
xchg
les
add
add
or
mov
stos
sbb
bound
aam
push
inc
aas
dec
push
cmp
pushf
out
iret
in
xor
mov
ret
and
mov
mov
loop
sahf
call
pop
fstl
lahf
jo
inc
sub
dec
xor
dec
inc
and
pushf
fstpt
jecxz
les
ljmp
push
mov
aaa
mov
in
pop
lcall
jp
sti
dec
punpckhbw
pushf
mov
mov
mov
cmp
pop
dec
mov
jmp
rcr
dec
rolb
addr16
push
pusha
mov
mov
mov
push
pshufw
push
aam
inc
inc
arpl
cmp
adc
je
pusha
push
push
movsb
int3
lea
inc
sub
add
adc
dec
insb
ss
out
pop
ljmp
aam
cs
jo
mov
mov
inc
and
dec
push
push
mov
inc
inc
lea
mov
les
fsubrs
cld
or
xor
hlt
or
jl,pt
mov
push
xchg
mov
mov
fcoml
add
inc
pop
push
repnz
cmp
dec
ds
push
xchg
testb
inc
xorl
repnz
adc
jmp
cmpl
pop
mov
adc
push
fsub
rolb
push
sub
push
cmpl
je
pushf
or
int
push
mov
aam
in
xor
mov
push
shlb
adc
push
jbe
sub
stos
out
mov
xchg
adc
mov
stos
sub
inc
add
jl
mov
mov
les
aam
mov
scas
hlt
push
add
adc
movl
mov
lds
push
fs
push
lods
je
test
aaa
stos
lock
rcrb
cmp
push
ja
push
mov
add
pop
rcrb
adc
fimuls
xor
out
stos
inc
lods
cmp
ljmp
bound
test
cltd
hlt
or
cmp
fs
ret
aam
sbb
jl
in
ss
jecxz
sbbb
xchg
mov
mov
es
dec
inc
pusha
mov
push
jecxz
cmp
jle
mov
mov
test
push
mov
push
mov
push
jl
cld
add
cmp
push
or
je
mov
add
add
mov
out
sbb
sub
push
shll
sbb
inc
fdivrs
add
sbb
jne
mov
shrl
rcl
mov
data16
ds
roll
mov
push
int3
loopne
add
adc
and
add
cmc
jmp
shlb
clc
roll
stos
pushf
daa
mov
test
cmp
inc
pop
shlb
jmp
sub
pusha
mov
lcall
and
dec
idivl
add
pop
popf
jp
mul
ljmp
sub
jmp
out
mov
mov
add
sbb
push
jle
push
rcrb
xchg
js
jmp
push
xchg
ds
shrb
mov
scas
in
ja
adc
push
mov
pop
xchg
mov
add
jb
addr16
mov
add
add
es
add
push
inc
inc
push
jo
cmp
dec
xchg
dec
movsb
jecxz
push
movsl
xor
rorb
pop
push
shlb
sbb
sub
cmp
je
or
dec
add
lock
jbe
dec
call
sbb
pop
faddl
dec
clc
shl
xor
inc
inc
movl
cmp
cmp
sahf
aam
in
mov
sbb
add
inc
jo
mov
enter
inc
mov
and
dec
ljmp
cwtl
cmp
xor
or
shll
test
xchg
rclb
fcomp
fdivrl
loopne
cld
stos
lret
sub
push
xor
add
add
xlat
mov
lock
add
js
or
push
lods
testl
imull
clc
cmp
jecxz
push
ljmp
pop
xlat
loopne
jmp
test
loop
fimull
push
dec
push
scas
fdivs
sbb
inc
inc
mov
je
stos
out
js
pushf
out
jg
dec
cmp
lcall
pop
loopne
or
fcmovnbe
push
mov
repnz
add
dec
out
sub
push
xchg
movsb
fistpl
add
ret
mov
mov
inc
sbb
test
and
rolb
push
jle
mov
push
cmpsb
test
adc
push
xchg
push
test
shlb
je
imul
dec
orb
outsl
loopne
jno
jno
and
pop
lret
mov
cld
clc
clc
mov
add
mov
inc
lcall
mov
jbe
inc
push
mov
bound
je
cwtl
shlb
jp
sub
les
cmp
inc
xchg
sub
cmpsb
add
and
ljmp
insb
icebp
arpl
adc
mov
cmpsl
call
fwait
and
mov
jb
xchg
sub
add
cmpb
pusha
outsl
xchg
aas
jp
test
fmuls
sub
push
cmp
shlb
push
nop
push
mov
scas
mov
or
xor
cmp
push
inc
call
xorb
jnp
add
jp
shl
adcl
push
outsl
adc
or
add
pop
loopne
xor
test
mov
dec
mov
push
hlt
jbe
sub
sbb
xor
push
jl
push
xchg
or
test
sub
insb
popl
push
arpl
pop
push
loope
lock
test
rcrb
mov
jo
ljmp
call
test
pusha
mov
lret
clc
mov
adcb
cwtl
dec
mov
sahf
lock
adc
cmp
and
mov
ja
cmc
xor
adc
cmp
jo
push
add
cwtl
out
mov
test
push
mov
js
mov
mov
pop
scas
sbb
push
cmp
mov
mov
or
insb
mov
inc
and
ja
ss
sub
addr16
push
cli
pop
enter
lea
iret
pop
test
xchg
ret
aad
or
enter
rorl
push
pop
daa
imul
aam
cmp
mov
inc
test
mov
and
leave
inc
mov
and
xorb
mov
push
pop
xor
shlb
in
jmp
adc
jl
fidivs
cwtl
push
add
outsl
mov
and
sarb
sub
lahf
call
nop
loop
push
jp
punpcklbw
cmp
xchg
aam
mov
ljmp
outsl
pushf
test
jo
pop
add
mov
mov
add
mov
arpl
mov
jg
rolb
and
jae
popa
and
dec
jp
sub
add
iret
adc
inc
sbb
or
push
orl
add
rclb
mov
mov
js
push
or
cmp
or
ret
mov
mov
or
pop
jecxz
cli
movsb
mov
inc
jns
bound
nop
pop
js
insb
div
mov
push
add
shlb
xor
mov
scas
cmp
test
arpl
push
or
mov
mov
pop
hlt
add
dec
dec
push
outsb
cld
inc
cs
sub
inc
fcmovne
pusha
lods
lods
repz
je
scas
lods
sub
xor
jne
lods
mov
sbb
push
mov
ds
cli
add
sar
pop
xor
xchg
idivb
inc
or
push
rolb
push
sub
add
orb
add
lret
cmp
ljmp
adc
and
movsb
dec
mov
cmp
push
lret
add
test
push
movsb
repnz
ret
fisttpl
add
adc
ret
fimuls
xorl
cmp
scas
divb
sahf
sarb
jle
clc
add
ljmp
cmp
dec
loopne
sbb
or
adc
push
sbb
loopne
mov
ss
mov
and
andb
jmp
mov
push
xor
sbb
shld
popa
dec
add
dec
enter
mov
dec
mov
pop
lahf
adc
add
sub
pop
jmp
and
xchg
mov
pop
add
xchg
rclb
mov
movsl
pop
cmc
ss
enter
sub
mov
jle
mov
xchg
rorb
sub
and
adc
sbb
rclb
add
test
cmpsl
mov
sahf
aam
clc
adc
in
mov
loope
mov
dec
clc
adc
das
loope
xchg
loope
push
cmovno
or
inc
cmp
cmpps
push
adc
ret
incb
ret
bnd
test
xor
rcrb
jb
or
adc
sahf
adc
inc
mov
adc
out
rclb
es
popa
or
sbb
add
mov
imul
add
les
push
adc
adc
ret
aas
cmp
pop
aam
xor
lahf
rolb
adc
xchg
in
scas
scas
mov
cmp
data16
pop
es
cmp
push
cmp
xor
dec
arpl
fsubrp
fnstcw
pop
jb
jns
stos
addr16
pop
xor
pop
pusha
jns
out
test
add
push
adc
add
dec
loopne
ja
subb
pop
pop
jp
push
stos
push
push
dec
push
push
pop
pop
sub
js
push
mov
andb
and
adc
repz
ret
popl
pop
pop
mov
adc
cmpl
or
jae
lret
test
outsl
loope
mov
test
mov
movsb
add
loop
mov
outsl
loope
sub
dec
js
inc
pop
loope
lods
lock
adc
pop
and
cmp
cmpl
loope
outsb
mov
lret
mov
aad
xchg
inc
loope
sbb
sbb
inc
pop
or
mov
les
adc
addr16
out
and
test
scas
movsl
or
sub
loop
pop
or
testb
mov
and
cmpsb
lcall
je
loope
cmp
pop
push
loope
sbb
dec
imul
xor
push
ffreep
push
dec
and
dec
adc
inc
loopne
ror
jp
insl
jl
sbbb
test
mov
push
js
or
push
inc
rorb
lcall
xorb
nop
and
out
push
add
adc
movsl
mov
xchg
mov
lahf
xchg
je
fidivrs
or
add
cmp
nopl
sbb
test
xchg
adc
jg
pop
ret
jae
addr16
sub
or
imul
mov
ret
inc
outsb
pusha
dec
ret
pop
sub
adc
inc
mov
adc
sub
psrad
mov
out
loop
cmp
loop
rcrb
pop
bswap
retw
les
sbbb
sbbb
loope,pn
loopne
hlt
or
rcrl
adc
jecxz
sub
das
ja
test
jle
pop
ret
mov
loope,pn
mov
ret
sbb
add
scas
inc
lret
push
lret
add
add
loopne
pop
movl
loope
mov
adc
out
out
clc
js
cli
div
adc
sub
mov
mov
dec
pop
mov
mov
scas
dec
scas
mov
push
mov
lret
sbb
mov
sbb
sub
lret
imul
push
rolb
xor
and
into
mov
movb
fwait
xchg
jno
sbb
mov
adc
sti
and
je
xchg
pop
bound
adc
adc
or
mov
and
orl
hlt
inc
fstpt
scas
sbb
dec
sbb
adc
lret
mov
rcrb
jne
cmp
jecxz
pop
adc
mov
dec
js
movsb
das
lock
xchg
es
pop
pop
pop
and
sbb
pop
pop
xor
and
mov
cmpl
or
xchg
jp
fcomi
sbb
inc
out
jnp
mov
cmp
push
rcrl
dec
jecxz
js
inc
aas
loopne
shlb
stos
adc
adc
mov
adc
push
dec
add
or
loope
cs
fiadds
insb
sub
xchg
movsb
xor
push
sub
clc
ljmp
sbb
push
add
sub
push
clc
sub
js
sbb
push
in
xor
pop
mov
inc
adc
mov
loop
fiadds
iret
outsl
xor
sbb
or
sbb
adc
inc
jnp
loop
jl
dec
push
mov
mov
test
sbb
push
repnz
inc
adc
mov
call
mov
cwtl
rolb
lcall
dec
sbb
mov
shr
sbb
cli
sbb
rcr
adc
mov
push
xor
jo
dec
js
inc
shlb
push
mov
xchg
jle
daa
cmp
shlb
push
push
jo
xchg
sub
add
cmp
cmp
pusha
pop
or
and
xchg
or
xchg
cmc
xlat
cmpsl
lret
xor
mov
sub
nop
dec
inc
and
inc
sbb
test
push
cmpsb
xor
cmp
test
push
ret
xor
xor
or
fsubl
mov
out
sub
jb
xor
push
cli
xor
and
xor
stos
sub
push
mov
test
lcall
mov
jb
es
cmp
test
pop
jbe
inc
aam
aam
outsb
xor
xor
xor
xor
mov
push
sub
mov
ja
pop
push
rolb
cmp
push
lock
call
ret
stos
pop
mov
add
and
adc
dec
incl
clc
xlat
mov
iret
ror
iret
mov
mov
aad
enter
jp
push
inc
into
mov
cld
cltd
push
mov
xchg
or
rcll
in
jl
pop
sarb
cmp
push
mov
jl
int
leave
data16
sub
sub
int
shll
push
imul
repz
sti
out
imul
push
scas
out
cs
repz
insl
jo
add
push
mov
outsb
outsl
jl
fdivs
icebp
ss
in
jge
ja
jnp
push
jle
adcl
test
fnstenv
loope
mov
cmp
mov
jns
mov
bound
dec
loopne
int3
data16
push
das
in
call
or
adc
sbb
les
inc
dec
jnp
mov
mov
xor
or
xor
xor
xor
outsb
jnp
sysenter
ss
push
inc
inc
cmpsl
pop
cs
imul
xlat
jge
adc
mov
and
pop
popa
sbb
popf
and
nop
xorl
cmp
enter
pop
aas
pop
pop
add
xchg
xchg
mov
and
arpl
fs
pop
and
mov
inc
je
inc
js
lods
cltd
lret
push
ss
negb
lahf
pop
dec
arpl
pop
push
push
lea
lods
cltd
and
ss
fisubs
mov
dec
clc
bound
and
push
mov
or
mov
dec
add
inc
push
sub
add
incl
xor
xor
push
inc
push
push
dec
dec
dec
jo
std
aad
dec
or
inc
and
insb
add
or
jno
addb
cmp
inc
addb
fldl
sub
lcall
pop
push
inc
and
sbb
jnp
add
dec
dec
inc
dec
sub
es
inc
adc
out
cltd
mulb
xor
cmp
cltd
fisttpl
add
das
xor
push
inc
dec
push
nop
inc
adc
inc
and
jnp
and
mov
aas
mov
fidivl
mov
fiadds
call
loopne
lahf
aas
pop
cwtl
and
pusha
inc
pop
into
shll
fidivl
inc
test
gs
push
out
inc
ss
push
test
xor
int3
fcompl
mov
outsb
xchg
aam
in
push
stc
mov
sbb
or
je
mov
mov
sub
inc
ja
cwtl
xchg
push
leave
push
and
xchg
push
mov
jecxz
pop
jbe
or
mov
add
add
xchg
sbb
jno
negl
inc
jl
add
xor
les
push
add
push
inc
loope
loopne
add
add
push
cltd
xlat
add
stos
jp
sbb
cmp
je
push
mov
int
add
rclb
jmp
xor
int
mov
jne
mov
and
cmp
push
mov
loop
xor
xor
ss
adc
addr16
inc
dec
dec
dec
dec
dec
dec
dec
dec
sub
push
ss
push
aaa
xchg
pop
nop
bound
lods
sbb
mov
xchg
sub
add
add
iret
inc
adc
das
and
add
pop
add
add
pusha
add
and
add
add
mov
and
in
mov
add
and
jo
sbbl
std
stos
mov
add
inc
insl
fwait
cwtl
inc
add
mov
add
xor
es
push
jns
jno
inc
call
cmpsl
flds
scas
sub
xor
cmp
cmp
mov
cld
pop
out
aas
shlb
es
push
pop
sub
push
push
push
mov
sub
lcall
sub
adc
xchg
jnp
add
xchg
cmp
fwait
int
mov
pop
dec
or
outsb
or
or
fldcw
adc
or
fadds
ss
repz
sbb
xchg
cs
cmpsb
xor
dec
dec
movl
mov
fsts
xor
roll
inc
imul
sbb
jmp
fcoms
add
push
lods
and
roll
clc
pop
dec
pop
lret
or
adc
jno
fcmovne
in
xor
xorb
mov
add
add
mov
shr
or
insl
xchg
imul
push
inc
add
add
adc
inc
cmpsb
add
pop
imul
or
jae
push
jecxz
and
ja
push
fistpll
outsl
fs
jnp
mov
sub
inc
cmp
cmp
cmp
cmp
pop
mov
hlt
imul
popaw
insl
imul
and
inc
mov
popa
ss
jnp
rcrl
push
add
adc
xor
out
bound
mov
data16
xor
movsl
xor
inc
roll
adc
jmp
xor
xchg
out
mov
ss
mov
sbb
icebp
push
sub
in
push
jb
dec
mov
jbe
and
lds
mov
mov
mov
cmp
lcall
pushf
sub
mov
popa
cmp
bound
daa
add
sub
add
xor
cmp
popf
jne
push
push
add
in
insb
push
sub
popa
jae
bound
pop
xorb
sub
mov
imulb
roll
push
subb
push
jo
sbb
fldenv
push
in
stos
jge
outsl
pusha
setbe
sub
and
movsb
mov
xor
push
adc
mov
add
add
and
sbb
fwait
lea
dec
jo
cmpsl
add
or
in
pushl
rorb
prefetchnta
int
loopne
int
hlt
sub
nop
push
add
adc
push
add
adc
shlb
mov
push
add
fwait
xor
fsub
jge
mov
adc
pushl
sub
jecxz
not
and
mov
arpl
fmuls
lcall
dec
lds
pop
xchg
or
dec
ret
pop
push
rcll
add
xor
sub
adc
sbb
daa
cld
aaa
cwtl
aad
mov
and
loopne
pusha
lcall
stos
xchg
ss
mov
add
or
fdivs
nop
pop
pop
add
push
vcvtsd2si
add
add
cwtl
cld
inc
or
mov
orb
cli
test
xor
mov
jbe
inc
or
and
idivl
out
adc
add
sarb
cld
push
xlat
aam
leave
inc
lahf
jg
mov
int3
in
and
mov
mov
mov
test
in
imul
mov
movsb
adc
jmp
fmulp
fidivs
mov
lret
and
xchg
add
mov
int3
lods
ss
xlat
not
shrb
add
ret
mov
lret
fcom
mov
clc
dec
mov
sti
mov
mov
sub
mov
lret
in
push
fsubrl
sti
sub
hlt
mov
and
jmp
outsb
arpl
pop
cmp
cmp
add
push
outsb
jbe
imul
dec
add
outsb
jb
insb
ja
gs
jp
arpl
pop
movsl
daa
dec
xor
pop
push
xor
mov
insb
js
arpl
push
sub
test
mov
fistpll
pusha
push
imul
insb
pop
dec
outsb
bound
lcall
imul
das
add
add
push
adc
inc
add
pop
xor
lcall
xchg
or
fidivl
scas
xor
test
mov
jmp
fildl
mov
and
dec
sbb
or
icebp
ss
popa
add
add
and
sbb
cmp
shll
add
sbb
pop
dec
shll
adc
xor
shll
sbb
sbb
push
mov
shll
cltd
arpl
outsl
jno
xorb
rorl
add
or
or
adc
add
adc
dec
lcall
decl
sbb
stos
xor
xchg
popa
mov
and
cmc
dec
adc
jmp
les
fildl
jnp
test
ret
call
push
rol
lret
push
cmp
and
xor
adc
add
call
adc
adc
inc
push
pop
xchg
lods
add
inc
push
fcompl
sbb
lcall
lahf
mov
addr16
pop
sub
mov
imul
je
jbe
jp
mov
popa
ljmp
sub
jbe
add
negl
aad
into
aam
andl
daa
es
and
xor
sub
and
sub
fisttps
into
and
and
sbb
sbb
sbb
sti
mov
sbb
sbb
pop
and
push
sub
mov
mov
and
das
sbb
and
xor
sub
daa
lods
sub
ss
push
xor
sub
sbb
lcall
mov
dec
dec
push
cmpsb
and
rolb
sub
jb
cli
xor
xor
cmpsb
jg
add
dec
dec
push
dec
dec
push
in
push
push
lock
cmpsb
stos
adc
cli
sub
aaa
pop
sub
sub
inc
dec
dec
push
pop
dec
push
pop
push
push
pop
adc
lods
or
dec
and
push
sub
adc
pop
dec
shll
and
sbb
sbb
data16
shlb
and
and
pusha
xor
mov
dec
and
or
pop
and
and
sub
push
lock
daa
cmpsb
jl
sub
sub
imul
xor
add
xchg
cmp
mov
cmp
inc
dec
inc
inc
dec
dec
dec
push
dec
dec
push
inc
dec
push
dec
xor
idiv
jg
push
pop
pop
pop
arpl
jne
mov
sub
pop
fisttpl
hlt
sbb
push
aam
pop
shll
xor
pop
pop
mov
jne
sbb
sub
cs
fucomip
decl
push
rcl
rcl
aad
mov
dec
mov
or
xlat
aam
cs
cmp
or
ljmp
cmp
in
mov
sub
pop
xchg
jmp
dec
test
and
dec
pop
xor
test
jae
sbb
mov
dec
xchg
aaa
push
stos
pop
mov
incl
int3
xchg
and
jae
fsubrl
xor
shll
mov
test
inc
mov
aad
cmpl
xor
pushl
shrb
adc
jo
xor
mov
sbb
add
lcall
dec
mov
ret
xchg
pop
or
adcb
aas
jle
cltd
dec
mov
xor
cmp
inc
adc
xor
sbb
dec
adc
pop
int
rolb
dec
stos
push
mov
jecxz
lcall
jmp
cltd
or
sub
movl
mov
xchg
adc
inc
and
jp
sub
incl
sbb
or
bound
shll
dec
popf
cmp
das
sar
rcl
dec
nop
fidivrl
dec
rolb
call
mov
jp
adc
lds
jg
test
incl
adc
or
and
and
ljmp
mov
push
pop
shlb
mov
dec
adc
xchg
inc
call
movsb
sub
add
mov
ret
mov
jo
or
mov
in
hlt
enter
add
call
xchg
dec
es
or
in
dec
push
and
and
test
inc
clc
incl
xchg
pusha
jle
enter
imul
or
dec
fwait
jo
sub
pushf
ret
sbb
cmp
sub
xor
and
lahf
add
or
xchg
pop
xchg
add
xor
shll
fs
xor
rorl
shll
loop
xor
shll
inc
mov
dec
rcrl
in
ljmp
mov
sub
pop
sti
out
xor
shll
shll
cmp
xor
shll
or
push
shll
sub
dec
shll
jecxz
xor
shll
and
adc
stos
xor
hlt
addb
lock
addb
or
xchg
xchg
xchg
push
or
xchg
or
jno
mov
push
or
mov
adc
pop
js
sbb
adc
sbb
addb
and
ret
jg
and
mov
daa
sub
sub
add
sub
fildll
sbb
pop
das
xor
into
roll
lret
xor
scas
mov
push
add
call
push
or
and
ret
jno
and
stc
push
call
push
push
mov
pop
add
inc
inc
add
rcrb
mov
test
jmp
or
scas
mov
pop
sbb
push
add
fists
leave
mov
add
decl
dec
xchg
sub
ret
leave
jo
mov
push
shlb
arpl
xor
jbe
loopne
push
inc
sbb
inc
test
cmpsb
imul
cmpsb
imul
cmpsb
imul
cmpsb
imul
lods
adc
add
les
shll
ljmp
cmp
dec
sar
jmp
pusha
and
fbld
add
outsl
inc
xorb
sbb
insb
cmp
mov
pop
lea
andl
daa
loope
push
addb
push
cld
mov
dec
add
mov
outsb
push
sbb
gs
sbb
mov
mov
test
and
or
popa
inc
adc
mov
sbb
cmpsb
sbb
cmpsb
sub
xorb
mov
inc
or
or
mov
movsb
xchg
or
inc
movsb
push
flds
popf
int
mov
cmp
dec
pusha
cmp
pop
add
add
adc
pop
arpl
add
les
sub
sarl
adc
out
mov
cmp
and
mov
jp
adc
add
mov
lock
repz
test
out
push
rol
xchg
packuswb
adc
adc
inc
rclb
ljmp
aas
xchg
fs
insl
icebp
push
xor
jmp
sbb
or
sbb
jmp
adc
pop
xor
mov
or
mov
sbb
outsb
icebp
adc
mov
mov
or
aas
mov
je
adc
push
data16
xchg
mov
ret
adc
sbb
mov
xchg
out
or
pop
or
call
insb
repnz
ds
xchg
mov
jno
adc
adc
maxps
mov
sbb
cwtd
mov
push
out
xor
sub
sub
xchg
icebp
adc
xchg
and
call
mov
incb
icebp
gs
aad
and
jl
mov
and
mov
xchg
clc
xchg
in
xchg
mov
loope
std
add
xchg
jmp
adc
das
cli
add
pop
cwtl
repz
xor
lods
bound
jg
mov
sti
push
xchg
cmc
ss
push
je
testl
mull
test
xor
push
mov
lods
sti
jg
sub
adc
cmp
mov
hlt
dec
idivb
and
les
push
insl
out
das
jo
addr16
stc
sbb
cmc
loope
dec
pop
sarb
rolb
mov
add
std
shl
std
xchg
mull
negb
outsl
jmp
jg
out
and
mov
stc
mov
jge
sub
cmc
icebp
mov
cmp
push
jp
mov
and
rcrb
popf
clc
and
sbbl
adc
cli
jg
pop
hlt
pop
out
test
shl
std
add
mov
lret
sti
and
not
negl
nop
not
aas
cwtl
inc
mov
and
sbb
push
xor
sahf
stc
pop
test
ljmp
cmc
cmp
shl
std
and
lock
sbbl
test
clc
sub
in
out
lds
xor
mov
sbb
or
push
jae
andb
xchg
clc
push
fmul
jo
imul
adc
les
xor
lahf
stc
aas
cwtl
stc
loope
mov
mov
cld
adc
xchg
jbe
sub
pop
and
xchg
ret
sti
mov
sti
les
jle
and
psadbw
xor
movsl
cli
es
clc
dec
sarb
icebp
idiv
push
fists
data16
vphaddbd
pop
mov
out
sbb
xor
and
outsl
clc
xor
scas
sti
sub
cwtl
leave
cld
xor
les
xchg
movsb
lret
dec
cmp
mov
in
aaa
movsb
sub
test
mov
daa
xchg
bound
mov
mov
call
mov
stc
movsb
lret
cld
ret
sbb
and
jg
sti
sub
and
cs
sub
adcb
xchg
ret
cld
and
sub
add
dec
movsb
cli
and
cld
in
fldt
mov
and
shrl
and
sbb
mov
cmpsb
or
cli
and
scas
add
and
mov
mov
mov
incb
push
xchg
xor
and
dec
sub
es
lds
push
xor
std
sub
cld
mov
mov
std
xor
xor
std
xor
xor
inc
add
inc
ja
add
mov
add
pop
iret
lods
fadd
shrb
add
out
inc
adc
add
insb
jns
push
pop
call
pop
adc
andb
lods
sbb
loopne
fnstenv
leave
jo
sbb
or
mov
loope
mov
shrb
add
push
add
mov
sbb
out
push
or
movsb
sub
mov
fiaddl
push
loop
insb
loope
roll
outsl
shrl
call
dec
add
inc
pushf
dec
sub
bound
or
dec
inc
adc
inc
adc
popa
or
aaa
add
sbb
push
adc
jns
xor
add
inc
or
or
test
out
bound
adc
cwtl
sub
xlat
sub
add
jg
aaa
add
inc
inc
lock
mov
mov
lret
and
mov
or
dec
or
nop
dec
sub
fdivrp
in
inc
ret
add
mov
sub
mov
repz
sti
fisubrs
test
mov
mov
sbb
mov
aam
mov
or
sub
fadds
or
sbb
and
push
sbb
push
and
call
add
and
add
mov
test
mov
and
and
pop
fcomip
ficoml
imul
add
xor
insb
stos
pop
cwtl
and
pop
and
mov
mov
mov
dec
das
in
call
add
pop
add
add
mov
test
sub
pop
test
push
das
mov
adc
inc
mov
cmp
pop
xor
movsl
jo
js
and
rcr
out
ss
jbe
xor
push
inc
dec
cmp
jle
jbe
lods
cmp
xor
xor
sbb
mov
jge
or
mov
iret
sub
push
mov
loope
ds
int
push
xor
mov
xor
lea
add
movsb
mov
adc
and
or
sbb
add
stos
push
sub
and
scas
outsl
je
stos
xor
int3
loope
mov
mov
add
jo
xchg
push
dec
pusha
add
xchg
add
jae
mov
into
popa
arpl
adc
les
lods
ss
enter
sbb
jns
dec
cmp
sbb
push
and
push
loop
mov
adc
daa
in
cli
sub
ror
cli
mov
sub
imul
sub
dec
out
fiaddl
and
in
dec
xor
mov
sarl
leave
jl
jmp
and
mov
pop
or
cmp
sarl
mov
iret
rol
mov
dec
jecxz
xor
xor
test
jb
mov
and
adc
inc
lds
pop
inc
add
push
push
inc
pop
nop
shl
loope
xor
adc
and
outsl
adcb
add
xor
addr16
cmpsb
add
adc
cmp
cmp
fstps
xchg
sbbb
sub
push
loopne
inc
out
pop
xchg
xor
das
cmpb
add
xor
xlat
cmp
inc
lock
or
stos
and
aad
xchg
sbb
ret
out
popa
or
pop
or
lahf
nop
lock
add
jmp
popf
mov
pop
sbb
scas
fwait
lcall
popa
mov
add
mov
stos
cmp
test
stc
pop
cwtl
dec
and
push
sub
repnz
xor
xchg
adc
mov
imul
test
mov
push
add
lds
push
inc
add
aad
mov
pop
push
lcall
enter
pminsw
sbb
je
aaa
mov
cmc
xor
adc
imul
nop
or
pushf
xchg
or
sub
cmp
xchg
out
lea
or
enter
add
add
mov
idivb
shlb
pop
push
dec
mov
pop
sar
pop
sub
jmp
mov
add
and
push
int
ret
xchg
enter
mov
or
mov
shl
xchg
mov
outsl
cli
mov
stos
iret
mov
ret
ror
iret
in
pop
int3
in
or
inc
jno
gs
mov
sti
dec
adc
and
pushl
mov
mov
jecxz
out
iret
mov
leave
rclb
int
hlt
aam
in
pop
sub
and
push
adc
ss
nop
sub
mov
add
sub
push
sub
xorl
call
add
bound
cmp
cs
push
sbb
push
and
lock
idivl
insl
sub
outsb
bound
insb
cmp
adc
daa
or
sub
cmp
sub
das
mov
pusha
xor
add
add
pusha
push
xor
cmp
arpl
sti
adcl
and
mov
sti
inc
add
sub
push
inc
std
inc
add
shrb
repz
cs
push
cmp
fists
xchg
push
lods
add
inc
outsb
push
fdivrl
mov
push
das
ds
fnstcw
in
test
add
lock
and
push
and
mov
roll
mov
xlat
jnp
int
inc
sbbb
add
punpcklbw
scas
mov
nop
mov
ja
adc
seta
add
adc
adc
mov
in
fsubrl
add
repnz
out
or
xor
inc
cmpsb
jb
and
inc
jno
jge
xor
jl
scas
inc
or
pusha
cs
mov
jo,pn
push
adc
xor
mov
pop
add
xor
inc
out
fnop
mov
pushl
xchg
adc
fcomps
cs
sub
xchg
and
xchg
dec
pop
popa
fidivs
rol
sub
sub
stos
roll
hlt
and
jecxz
roll
test
pusha
mov
pshufw
lock
mov
pushf
jne,pn
jbe
mov
add
adc
add
test
adc
loopne
pop
mov
adc
pushf
inc
lock
cmp
outsl
lock
mov
push
and
mov
pop
mov
dec
push
mov
xor
push
ficoml
cs
adc
or
mov
iret
pusha
mov
mov
push
aas
testb
mov
add
imul
loopne
dec
adc
add
inc
outsl
shrl
xor
cs
and
stos
pop
pusha
mov
ret
xor
outsl
cwtl
adc
sti
ljmp
jmp
push
jl
daa
stc
inc
lds
jns
enter
and
jo
adc
jmp
mov
adc
decl
or
mov
adc
cs
loope
fcoml
add
and
sbb
aas
call
clc
ljmp
sub
loope
jb
loop
pop
nop
push
jb
loope
das
mov
jbe
and
das
adc
mov
add
into
lds
add
sub
sbb
lea
add
outsl
adc
shrl
incl
mov
scas
jbe
and
outsb
das
push
jno
cmp
call
rcrl
mov
inc
outsl
push
and
shlb
inc
inc
cmpsb
push
fcmovb
mov
aas
jo
outsl
pusha
addr16
rcrb
shrb
scas
mov
fidivl
ficomps
pop
leave
add
call
nop
jmp
mov
and
nop
shlb
xor
loop
call
mov
test
jno
loop
pop
pusha
rorb
adc
mov
das
daa
pop
jb
add
jecxz
bound
jo
fisttps
in
jb
push
loopne
pop
seto
jo
sahf
cmpsl
and
or
out
test
sbbl
jb
out
and
mov
adc
add
pop
aad
or
add
aad
mov
in
add
out
shlb
sbb
sub
nop
jmp
inc
test
repz
mov
ljmp
dec
dec
lds
pop
js
push
add
bound
incl
iret
andb
mov
xchg
in
inc
es
xor
nop
or
dec
cmpsl
mov
xchg
arpl
add
add
xor
outsl
mov
or
jb
int
addb
cmp
pusha
daa
jo
incl
lahf
adcb
jae
cmpsl
test
or
pop
inc
mov
nop
and
ret
loopne
addl
xor
sbb
lahf
adc
mov
nop
xchg
jg
outsl
adc
out
sbb
orb
add
cwtl
outsl
inc
jae
leave
stos
loope
mov
je
pusha
pop
outsb
sbb
sbb
mov
dec
push
jl
push
cltd
pshufw
adcl
aam
loopne
movsb
aas
insb
jl
push
inc
xchg
inc
push
jnp
stos
jle
jbe
dec
out
lcall
int
dec
add
lods
push
jnp
add
mov
fnstsw
loopne
or
mov
out
idivl
dec
push
pop
or
fcmove
stos
mov
scas
push
lods
mov
sti
xor
sbb
and
cmp
mov
outsl
push
xor
cmp
and
push
test
sub
or
xchg
nop
lcall
mov
mov
inc
cmc
mov
and
imul
clc
stos
push
rolb
sub
and
mov
dec
and
jne
dec
jg
fcmove
sub
mov
insb
dec
mov
rcl
adc
pop
and
inc
jo
imul
or
insb
lahf
data16
xor
adc
sbb
loopne
cmp
imulb
das
mov
push
jo
nop
xchg
sub
mov
lret
fdivrs
and
xor
inc
dec
cmp
mov
fsubp
push
outsl
test
fsubrl
shlb
mov
mov
xchg
inc
filds
mov
test
fistl
test
xor
testb
aaa
push
mov
push
push
movups
push
daa
xor
rorb
into
cmp
nop
push
loopne
xor
jnp
movsl
push
and
push
mov
pop
add
push
or
mov
outsb
adc
adc
lahf
pop
push
adc
xor
and
and
pop
add
mov
enter
xchg
xor
add
fcoms
push
mov
xor
or
scas
fiaddl
loopne
adc
rcr
lahf
and
adc
mov
loope
cs
ljmp
mov
scas
outsl
scas
cmp
add
lock
adc
repnz
lods
pop
js
cmp
stc
inc
and
sbb
outsl
ror
inc
cmpsb
mov
in
xor
stc
xchg
aas
pop
mov
jno
testb
outsb
inc
addr16
aas
mov
push
mov
lock
jmp
mov
sub
iret
pusha
add
outsb
pushf
push
mov
loope
xorps
push
lcall
push
lahf
nop
push
iret
loopne
aad
lock
sbb
lods
dec
adc
outsl
shll
movsb
out
subb
sbb
outsb
add
add
aaa
xchg
adc
add
jmp
dec
mov
mov
es
pop
pop
rclb
ds
adc
mov
cwtl
jo
inc
repnz
xor
insb
das
dec
jb
movsb
fwait
outsb
pushfw
add
xorb
xor
push
dec
imulb
sahf
test
add
and
aas
jo
push
enter
cmpsb
shlb
dec
repz
and
adc
push
push
xor
push
ds
scas
pusha
mov
test
in
jle
push
mov
rcrb
ret
lea
mov
add
imulb
outsl
popl
xlat
push
enter
adc
jp
push
cmpsl
add
xchg
inc
sub
cmpsl
scas
outsb
adcb
lret
mov
pop
clc
push
das
xor
inc
push
rorb
call
pop
pop
cmp
inc
add
sbb
push
stos
pop
cwtl
add
push
or
pop
mov
out
add
adc
int
mov
call
subl
pop
cli
jmp
les
sub
xorb
filds
test
pop
and
movaps
cmp
les
or
subb
imul
insb
jg
sub
inc
nop
addr16
jo
adc
push
xlat
push
pop
sub
xchg
int
push
out
or
ret
int
test
pop
fists
add
pop
inc
jo
mov
aad
aad
pop
scas
in
das
cmpb
shrb
mov
shrb
adc
cmpsl
mov
adc
dec
addr16
xorl
jne
lock
out
jnp
xchg
push
leave
mov
jns
jnp
and
mov
push
pop
push
cmp
outsb
mov
dec
sbb
les
sahf
arpl
pop
pop
popa
pop
popa
in
jae
inc
inc
loopne
repnz
in
inc
inc
inc
cs
scas
in
jb
dec
pop
dec
dec
xchg
cmp
repnz
push
push
movsb
mov
iret
xor
ljmp
iret
and
pusha
and
dec
nop
iret
and
rcrb
iret
and
and
push
push
push
out
xchg
out
pop
mov
sub
xchg
pusha
cmpb
roll
push
test
dec
and
mov
or
mov
adc
fnstsw
mov
outsl
rcr
adc
pusha
pop
lock
jg
add
fisubl
in
aad
nop
fildl
iret
mov
shrb
pop
pop
repnz
mov
aas
lahf
add
xchg
out
add
das
bound
sub
pusha
add
scas
loopne
stos
xchg
andb
out
inc
test
xchg
pushl
pusha
cmp
jg
loop
jno
enter
add
mov
inc
aas
jo
add
inc
pop
jno
cmp
loopne
scas
loopne
sahf
xchg
stos
mov
add
shl
mov
inc
call
dec
inc
aaa
and
mov
push
out
popl
test
jg
pop
inc
sbb
push
jg
add
jle
and
mov
cwtl
clc
iret
and
in
and
jl
jb
xor
loopne
push
push
sbb
iret
scas
shlb
add
xor
push
cwtl
lahf
nop
into
bndldx
mov
std
mov
add
pop
loope
dec
or
push
cs
add
pop
cs
les
and
xchg
mov
js
call
dec
rcrb
adc
mov
js
pop
dec
sbb
inc
xchg
dec
inc
mov
mov
xorb
push
pop
adc
pushf
adc
inc
enter
cwtl
mov
or
lret
push
test
dec
push
repz
pop
test
add
lahf
call
fimuls
mov
out
add
testb
inc
divl
jb
mov
adc
gs
daa
pop
mov
mov
in
xor
inc
scas
adc
das
std
mov
push
mov
lahf
ja
enter
inc
dec
nop
cld
mov
stos
sbb
clc
inc
scas
inc
movsl
jno
and
jmp
xor
mov
outsl
loopne
pop
pushf
pop
or
outsl
jo
inc
fmull
cltd
push
sar
pushf
stos
mov
das
nop
xor
mov
mov
inc
das
cmp
jl
or
and
inc
lahf
inc
adc
sbb
push
push
cmp
rcrb
and
das
arpl
or
mov
mov
xchg
out
das
rcrb
fsts
std
add
nop
sti
adc
bnd
xchg
pop
inc
add
or
xor
fdiv
cs
mov
adc
js
fadds
rclb
out
fmuls
pop
inc
aaa
ljmp
pop
cmpsl
fcoms
mov
jbe
dec
sbb
xchg
or
sahf
orb
xchg
cmp
fucomp
inc
adc
repnz
roll
inc
iret
jecxz
adc
and
or
xor
in
add
outsl
call
pop
adc
aas
add
shll
sbb
sahf
sub
cmp
cmp
dec
je
pop
ret
dec
dec
or
sbb
sbb
das
incl
jns
das
add
and
fisttpll
das
add
mov
mov
add
push
inc
out
out
cmp
in
ret
mov
sbb
push
cmp
adc
orb
nop
inc
pop
inc
scas
mov
pop
iret
or
jg
add
pop
imul
adc
loopne
das
mov
inc
or
outsl
out
and
pop
add
jo
add
movsb
jns
bound
add
add
filds
add
outsb
sbb
daa
xor
out
push
loopne
daa
inc
dec
adc
cwtl
and
aam
inc
xchg
inc
das
dec
pusha
xor
pushf
js
outsb
pop
xchg
out
cmpsb
inc
inc
adc
add
fists
xchg
jl
nop
call
fsubl
es
lea
cmpsb
adc
outsl
pop
rolb
sbb
xchg
inc
iret
pusha
mov
and
sbb
scas
adc
add
push
xor
dec
inc
dec
lcall
fwait
inc
outsl
ja
or
mov
rolb
pop
adc
add
bound
mov
or
cs
add
lock
loope
nop
mov
mov
add
inc
leave
rcrb
inc
xlat
xchg
and
xchg
adc
mov
mov
stos
xor
aad
jg
jl
sarl
adc
mov
addb
cmpsb
or
loopne
ret
jg
lcall
inc
shlb
pusha
loopne
nop
push
shlb
mov
lock
push
fdivr
cmp
inc
les
fs
xchg
push
aam
mov
hlt
or
dec
int3
sub
insb
in
sbb
pop
fdivr
cmp
jl
add
adc
jb
or
push
sbb
cmp
inc
cmpsb
data16
xchg
push
ss
testb
dec
into
cs
outsb
out
push
sahf
pop
fdivp
ds
inc
shll
popa
loope
xchg
push
shll
mov
icebp
or
imul
add
cmp
inc
lds
xchg
push
aad
pushl
lea
sub
popf
pop
fnstsw
addl
mov
push
sar
pushl
mov
repz
imul
fwait
pop
fstpt
mov
inc
daa
cmpsl
addr16
xchg
push
xlat
fcomip
pushl
mov
testl
scas
outsl
out
pop
lahf
pop
fistpll
mov
rclb
nop
call
and
loopne
jo
lock
test
adc
xchg
aam
movsb
in
je
hlt
or
enter
fsubrs
push
mov
int3
sbb
pushf
fsubrl
lods
in
cmp
mov
rcll
xchg
call
and
loope
jno
icebp
add
push
xchg
aad
movsl
in
jne
cmc
or
leave
sbb
fldcw
imul
int
pop
popf
jge
std
add
ret
xchg
call
and
loop
jb
repnz
inc
xchg
push
push
xchg
data16
out
jbe
testb
mov
sbb
fisubrl
push
ljmp
mov
push
pop
sahf
fisubrs
outsb
scas
out
jle,pt
incb
inc
add
push
xchg
call
and
jecxz
jae
repz
inc
xchg
pop
push
xchg
xlat
daa
cmpsl
out
ja
testl
pop
fwait
add
sub
jmp
jnp
sti
cmovg
fildll
outsl
scas
out
aas
jg
adc
push
cli
and
inc
push
pusha
cmp
lock
xchg
jmp
xor
popa
jno
xchg
mov
icebp
add
and
inc
push
bound
mov
loop
add
and
inc
push
arpl
xchg
mov
repz
insb
add
jmp
inc
push
fs
xchg
movsb
mov
aam
hlt
add
push
mov
xchg
movsl
mov
aad
cmc
push
push
nop
hlt
jmp
ss
push
data16
xchg
cmpsb
mov
out
pop
pop
daa
aaa
inc
push
incl
xlat
out
or
sub
dec
pop
push
mov
or
fbld
add
cltd
test
stc
or
filds
dec
inc
pop
push
mov
ljmp
cli
sub
dec
pop
imul
mov
or
and
ljmp
dec
pop
insb
jl
pushf
lods
mov
or
pop
insl
jge
jg
xor
push
push
cs
pop
outsb
jle
sahf
scas
mov
nopl
and
das
aas
dec
pop
outsl
jg
mov
dec
addl
mov
mov
add
xchg
sbb
mov
xor
pop
lock
xor
mov
inc
or
inc
push
lret
ja
dec
inc
inc
push
cmovne
pop
push
dec
push
inc
out
pop
stc
in
dec
inc
arpl
dec
addr16
dec
inc
pop
push
mov
push
andps
outsl
inc
inc
jae
jge
jns
inc
inc
dec
jae
dec
pop
das
jae
dec
add
jp
outsl
jae
shld
inc
jbe
je
je
dec
out
je
dec
push
scas
jp
test
es
add
insl
xchg
sub
or
add
or
leave
add
xor
les
das
rorl
push
es
cmovo
ss
imul
cmpb
jb
ficoms
hlt
clc
push
insb
sbb
sbb
jp
dec
push
popa
loope
pop
scas
or
aas
and
mov
lret
addb
or
incl
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
jmp
xor
fdivrl
jmp
rclb
mov
sub
jmp
xchg
sbb
mov
repnz
repz
test
ficompl
jmp
mov
push
movl
imul
std
in
leave
mov
add
insb
push
arpl
ud0
pop
cmp
or
pop
adc
in
pusha
aad
jno
mov
cmp
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivr
pushl
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
jmp
and
mov
cltd
xchg
mov
mov
or
or
and
or
ljmp
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
pushl
mov
push
movsl
in
lahf
xor
mov
js
stc
aaa
std
mov
sbb
push
stos
insl
or
insb
fs
add
hlt
push
imul
fdivr
lcall
xor
dec
ret
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
call
mov
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
sti
decl
adc
mov
inc
movsl
fisttps
xchg
fadd
jg
jg
shll
jmp
xor
mov
sarb
add
incl
add
pop
dec
or
cmp
add
daa
adc
or
and
call
test
or
mov
popa
into
push
stc
ficomps
js
and
decl
clc
xlat
pop
cmp
cmp
lods
insb
decl
sarb
lcall
mov
lcall
ljmp
fildl
push
fdivl
or
test
fs
ds
push
push
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
sar
jmp
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
ljmp
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
call
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
lcall
or
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
add
mov
outsl
and
xchg
add
clc
incl
mov
das
es
decl
mov
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
push
arpl
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
jp
loop
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
jmp
aam
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
hlt
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
lcall
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
incl
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
fstl
push
cmpsb
mov
xchg
push
xlat
int
push
fdivrp
jg
call
fldenv
jp,pn
mov
nop
les
sbb
xchg
sub
aaa
mov
repnz
decl
sbb
add
sub
inc
lcall
add
push
or
xchg
cmp
or
imul
outsl
loope
lock
and
push
cmp
xor
jl
cmp
and
fsts
or
popl
push
je
or
or
or
inc
or
sbb
and
jns
out
xor
inc
push
sahf
out
sahf
arpl
mov
sbb
enter
add
add
pop
enter
add
outsl
pop
lahf
dec
mov
xlat
sbb
xor
iret
repz
popa
add
addb
iret
repz
push
or
sbb
adc
repz
inc
pusha
or
mov
xchg
jb
push
pop
pop
or
jb
jb
or
or
call
adc
fbld
xor
mov
xor
inc
test
aad
add
pop
xchg
jp
aas
adc
lahf
mov
push
movsb
in
decl
add
lcall
cmova
push
jmp
out
nop
sub
push
adcb
cmp
mov
mov
mov
das
incl
das
sub
in
cmp
push
adc
leave
outsl
dec
das
pop
xor
mov
push
das
pop
leave
xor
pop
push
push
pop
imul
das
pop
add
loopne
jg
pusha
inc
lahf
jbe
stos
rolb
inc
dec
mov
pop
inc
aam
cld
sbb
mov
and
out
dec
inc
mov
jb
outsl
das
push
test
inc
movb
jl
and
add
scas
loopne
inc
filds
add
sbb
lock
push
or
ds
xor
mov
xchg
push
dec
or
sahf
out
pop
test
rclb
jns
fstps
enter
inc
imul
push
test
or
loopne
inc
xor
add
xchg
sub
test
icebp
enter
sub
sub
pop
dec
sahf
out
scas
xchg
inc
das
add
jmp
pusha
xchg
cmp
cld
fiadds
add
das
add
sbbb
push
jnp
das
icebp
pop
das
repz
das
jnp
jnp
testb
std
pop
das
insl
push
jnp
repnz
das
incl
cld
fisubrs
das
iret
add
das
rorb
push
lock
repnz
repnz
out
out
in
pop
jb
and
pop
das
pusha
dec
repnz
and
xor
repnz
and
in
jb
and
mov
fcomip
pop
das
jo
push
jo
fadds
comiss
mov
xchg
inc
fstpl
push
pop
cwtl
dec
shlb
sbb
test
and
loopne
and
inc
lahf
test
dec
cmp
adc
iret
rol
aad
iret
nop
push
add
push
pop
dec
pop
dec
andl
iret
jo
and
adc
cs
push
jb
add
xchg
and
xlat
lahf
xchg
mov
fisttpll
addl
add
enter
incl
sbb
loopne
sub
push
dec
sbb
mov
push
jno
dec
incl
mov
mov
and
je
addl
lahf
mov
clc
and
mov
dec
xchg
enter
nop
loope
or
add
rolb
cs
ucomiss
inc
orb
pushl
shl
jo
mov
cmp
xor
dec
inc
pop
or
adc
das
lods
aas
xor
pop
das
out
xchg
or
dec
das
push
xchg
out
xchg
push
nop
or
leave
xchg
out
loopne
mov
imul
cs
push
sbb
movsb
or
jle
adc
jns
aas
dec
and
jg
stos
jo
xor
aas
inc
cmpsb
loopne
test
push
aas
jg
in
and
adc
sahf
sub
adc
adc
mov
adc
in
or
out
sbb
add
pop
jg
outsl
andl
dec
mov
shlb
dec
xorb
and
xor
push
sbb
add
cmp
xlat
pushf
loopne
inc
cmpsl
in
out
push
clc
std
ds
sarl
xor
iret
shrl
xchg
dec
repz
cmp
dec
sarl
sahf
nop
push
mov
adc
jo
cmp
nop
ror
in
lea
pusha
jnp
notb
push
adc
pop
add
add
dec
scas
faddl
adc
pop
shrb
or
inc
dec
pop
loopne
xchg
inc
rorb
add
xchg
mov
inc
loopne
inc
ss
fisubs
push
push
lea
mov
daa
add
scas
xor
cs
aam
xor
cmp
inc
lods
add
imul
les
arpl
out
das
and
enter
std
adc
rorb
scas
cmp
scas
insl
add
pop
inc
push
or
jle
mov
dec
insb
pop
daa
iret
adc
mov
push
dec
add
and
sahf
sub
nop
dec
cld
push
in
inc
dec
push
cli
dec
shll
xor
nop
daa
iret
adc
adc
add
leave
std
lock
outsl
fwait
pop
and
lahf
adc
push
daa
aaa
pushf
sub
ljmp
nop
push
mov
lea
jmp
cmp
je
push
jne
jo
push
adc
mov
das
push
loopne
shlb
fldl
clc
dec
pop
and
push
int3
clc
data16
jne
daa
nop
pop
imul
inc
ja
pop
fbstp
lea
lahf
add
dec
outsb
ljmp
mov
and
das
mov
sub
movsl
dec
aas
fs
and
les
pop
rorb
mov
mov
xlat
pop
inc
out
jmp
push
stc
outsl
scas
ljmp
scas
das
inc
lods
and
mov
repnz
nop
scas
inc
scas
loopne
popf
inc
mov
jg
out
adc
lahf
nop
mov
loop
mov
das
and
mov
add
mov
mov
push
rcrb
inc
mov
dec
jl
test
mov
inc
lahf
jbe
dec
push
push
mov
pop
add
mov
repz
fs
aas
xorb
rcll
mov
in
and
aas
leave
jbe
lahf
sbb
mov
aas
bound
pop
cmp
mov
adc
mov
dec
shlb
imul
mov
xchg
or
call
les
rcrb
imul
pop
or
adc
push
test
outsl
sub
push
push
inc
pop
out
out
nop
xchg
jns
stc
mov
cmpsl
and
scas
pop
xchg
or
in
mov
inc
add
jbe
mov
jne
iret
xchg
jle
dec
jns
inc
push
cmp
add
pop
loop
push
sub
mov
and
sahf
mov
push
adc
sub
xor
rol
jo
pop
mov
lahf
xchg
aaa
mov
cmc
pop
stos
push
lea
xchg
mov
cwtl
fs
aas
mov
movb
adc
push
das
sub
push
dec
jg
inc
in
orl
aas
mov
in
pop
mov
xchg
sub
mov
mov
dec
adc
bound
dec
les
or
sub
adc
popl
push
out
mov
jo
dec
jp
xchg
mov
xor
mov
out
dec
loopne
hlt
push
out
sahf
out
ljmp
repz
leave
nop
out
lods
push
clc
and
shlb
xchg
dec
repz
xchg
ljmp
push
sbb
xor
adc
xlat
dec
push
sub
pop
leave
repz
nop
shr
outsl
inc
andl
sbb
push
mov
or
out
pop
pop
push
mov
xchg
insl
loopne
jg
pop
dec
xor
stc
fldcw
add
lods
push
xchg
or
add
das
inc
mov
push
xchg
mov
pop
xor
out
xor
jmp
shll
dec
mov
sub
sbb
cwtl
iret
push
scas
loopne
ja
sahf
xchg
arpl
dec
push
cmpsl
je
orb
cli
push
cmp
in
cmp
inc
xchg
mov
dec
inc
dec
or
xchg
add
inc
js
test
lods
push
vmovdqu
mov
das
sbbl
add
adc
dec
pop
dec
jnp
scas
cs
mov
jo
ret
dec
out
stos
dec
xchg
mov
pop
pop
outsb
cs
sub
aad
inc
mov
cs
xor
pop
mov
cs
scas
movsb
mov
jl
nop
mov
ret
ja
xchg
mov
aad
mov
mov
xchg
lods
mov
pop
inc
sahf
push
aad
add
add
push
xchg
shll
out
mov
pop
scas
andl
cmpsl
sbb
pop
scas
rolb
adc
push
pop
mov
iret
ret
add
push
mov
pop
cmp
sub
lods
or
adc
out
xchg
or
test
mov
cmp
arpl
outsl
js
pop
inc
insb
lods
push
cwtl
aas
mov
dec
xchg
sbb
mov
aas
pushf
dec
xchg
add
sub
push
push
mov
push
inc
mov
addr16
cmp
xor
aaa
xchg
inc
add
add
pop
jo
or
xchg
aaa
jl
mov
scas
clc
add
pop
sbb
wrmsr
or
sbb
sbb
sbb
out
push
pop
pop
addb
xchg
push
repnz
leave
cld
mov
lcall
sarb
jns
iret
xchg
mov
inc
and
jbe
movsb
mov
add
push
sbb
xor
shlb
push
xchg
dec
xor
push
aaa
fnsave
inc
mov
pop
cmpsl
out
or
jg
sub
cwtl
inc
and
pop
sbb
out
std
inc
xor
cmpsb
or
or
adc
rcr
sub
push
cmp
cmp
pusha
out
or
iret
mov
xor
add
dec
jnp
bound
or
dec
xor
pop
pop
inc
ss
push
sti
fldenv
into
adc
push
mov
out
aad
inc
mov
adc
test
adc
bound
jl
mov
ss
add
sub
lds
iret
lret
cmp
cmp
fimuls
or
or
dec
test
jl
mov
pop
mov
push
imul
cmp
inc
testl
jg
push
jecxz
sarb
iret
insb
push
inc
jge
push
ljmp
daa
xchg
pop
movsb
imul
in
jge
pusha
cwtl
bound
outsl
push
mul
lock
mov
mov
movl
or
push
push
shr
mov
or
sub
pop
or
repz
pop
jle
loope
iret
push
nop
dec
rorb
mov
fiadds
pop
mov
mov
inc
add
and
mov
and
jle
sbb
aas
mov
inc
mov
test
push
pop
xor
push
push
mov
fstps
dec
fcomps
push
pop
fdivrs
cmp
add
or
sub
cs
outsl
and
pop
xor
push
mov
les
fidivrl
push
setg
add
pop
cmp
adc
cmpsl
xchg
cmp
and
cltd
faddl
cmp
sbb
cmp
jl
lahf
call
xor
sbb
sub
jae
and
inc
dec
dec
push
out
mov
sahf
imul
iret
or
rorb
sbb
inc
ret
xor
pop
pop
das
cmp
jbe
jge
idivl
pop
jp
push
shl
loopne
jle
das
fcoms
mov
mov
mov
mov
aad
popf
adc
js
addl
sbbl
mov
push
test
or
sbb
jns
push
mov
das
dec
add
add
jecxz
insl
dec
jg
outsb
ljmp
aad
orl
pop
xchg
insb
fs
je
das
mov
add
mov
xchg
adcb
rol
lock
lahf
xchg
xor
inc
jle
aam
inc
push
adc
mov
icebp
and
bound
scas
clc
into
add
loopne
subl
repz
dec
push
inc
cmp
sub
cmp
dec
dec
dec
dec
test
and
jle
inc
jnp
push
push
inc
jno
dec
pop
dec
int
push
dec
outsl
or
out
ljmp
inc
insl
out
out
cmp
push
addr16
mov
push
ret
push
les
mov
inc
ud1
inc
mov
aaa
mov
mov
loopne
ds
jg
xchg
push
adc
mov
aas
in
cwtl
or
call
push
dec
mov
je
adc
fmul
dec
fiadds
xor
sahf
push
nop
inc
xchg
mov
dec
addr16
push
jbe
push
insl
jnp
adc
clc
repnz
repz
add
iret
jnp
negl
push
mov
or
imul
cmp
out
xchg
clc
shll
idivl
sbb
push
dec
imul
mov
pop
push
push
and
inc
sahf
inc
pop
and
leave
mov
into
dec
daa
cltd
xorb
lock
cli
cli
lock
jp
inc
call
push
loopne
push
push
mov
repz
std
inc
inc
popl
xor
cmpsl
push
push
divl
jnp
lcall
fdivrp
out
pop
dec
adc
movb
out
dec
pop
shrl
sbb
in
adc
mov
sub
pusha
push
pop
ja
push
pop
mov
pop
xchg
clc
sub
inc
fidivs
pop
dec
incl
inc
cmp
clc
inc
mov
movb
lock
or
mov
ret
das
dec
dec
movsb
leave
push
dec
cmpsl
lock
jne
stc
out
repz
mov
push
jbe
push
cmp
lods
fistpl
pop
pop
cmp
shlb
mov
push
rorb
stos
adc
push
scas
push
das
xor
mov
nop
or
jg,pn
pop
ss
scas
mov
dec
es
xchg
adc
push
adc
push
sets
insb
or
das
push
mov
shlb
lahf
pop
mov
pop
dec
test
orb
pop
adc
or
jmp
fwait
inc
pop
xchg
int
adc
adc
mov
lcall
sbb
into
and
adc
insb
bound
out
push
cmp
adc
add
out
sahf
out
aaa
or
sahf
ds
cmpb
sub
pop
scas
sub
ljmp
repz
jns
enter
aam
daa
shrb
aas
push
or
and
nop
dec
dec
jbe
cmp
aas
jecxz
cs
adc
iretw
sarl
mov
push
cmpsl
stc
cmp
jae
fldt
mov
pop
sbb
out
mov
jns
iret
rorl
mov
ds
repz
insb
shlb
or
adc
mov
and
push
and
imulb
scas
push
ss
cmp
aaa
dec
push
xchg
mov
sbb
in
repz
cmpsb
mov
push
mov
iret
or
es
repnz
push
js
sarb
and
jae
dec
mov
dec
dec
dec
in
jmp
fiaddl
in
and
ja
mov
and
nop
mov
paddusb
push
xchg
cmpsb
out
sti
fsubp
push
xchg
add
sub
sti
fiadds
pop
push
outsl
push
out
cmp
testb
sbb
sub
push
scas
popf
jbe
add
js
mov
sahf
dec
and
dec
lahf
inc
ss
shll
pusha
dec
and
cmp
dec
not
ja
mov
popa
dec
sarl
ds
push
js
dec
pop
lcall
push
dec
inc
out
push
dec
pop
push
inc
sbb
or
nop
xor
push
inc
mov
and
ss
scas
and
jae
das
sub
out
rcr
pop
mov
lods
frstor
pop
das
dec
push
aam
mov
mov
cltd
in
mov
push
or
fucom
ss
push
sbb
fcoml
ja
gs
and
jbe
sbb
push
imul
jno
dec
sbb
cmpsb
xor
fistps
iret
sbb
mov
pop
mov
push
movsb
cmpsl
push
push
imul
sahf
or
cmpsl
pop
inc
or
sahf
xlat
cmp
fs
push
in
sarl
lea
dec
sub
repz
push
inc
cmpsb
jmp
nopl
nop
out
js
fiadds
jne
jns
nop
cs
outsl
in
push
subl
cmpsb
out
push
stos
inc
push
scas
mov
ja
daa
inc
and
shll
mov
push
pop
lret
adc
pop
movsb
and
mov
outsb
jl
push
sbb
push
ficoml
sub
fists
ror
and
bound
es
inc
jae
dec
lcall
or
sarb
std
xor
rclb
arpl
and
cwtl
fwait
xor
xchg
mov
mov
shlb
cmp
inc
jae
stos
aaa
xor
inc
pop
add
aaa
sti
jno
mov
js
adc
mov
pop
xor
mov
ss
stos
xlat
ds
inc
sub
aaa
aaa
dec
imul
es
sbb
mov
and
lahf
or
sub
std
mov
mov
cmpsl
testb
sub
lea
sahf
clc
push
pop
jae
and
sub
and
iret
movsb
sbb
inc
push
out
sahf
cmpsl
pusha
jl
mov
fmuls
ss
push
dec
cmpsl
imulb
sbb
push
xor
pop
mov
mov
sub
int3
push
aaa
insl
pop
xor
add
das
jo
inc
ja
dec
rclb
add
push
or
repz
cmp
dec
pusha
daa
fnstsw
insb
rclb
pop
jb
and
test
add
push
popa
dec
into
bound
sub
xchg
addr16
mov
pop
jo
jnp
cmpsl
popf
in
pop
mov
cmpsb
jo
or
mov
push
mov
and
dec
push
pop
push
and
insb
call
mov
das
jo
popa
insl
or
xchg
pop
sbb
ret
ds
xor
inc
stos
sbb
lret
inc
pop
orb
jbe
into
push
or
pop
jmp
dec
inc
lock
insb
inc
lock
xor
fmulp
mov
je
js
das
popa
into
pop
outsl
je
push
insb
call
sub
sub
loopne
mov
add
aas
mov
push
lock
and
push
sub
fnop
mov
xchg
push
or
adc
imul
push
cltd
mov
in
mov
sub
jo
mov
cs
inc
jo
push
or
scas
outsb
mov
inc
inc
aas
dec
leave
loop
popa
stc
push
mov
xor
test
test
shll
or
movsb
pop
adc
dec
es
push
test
pushl
adc
dec
push
and
fldcw
mov
pusha
mov
in
dec
int
pop
loop
and
incl
xor
inc
ja
int
cmp
sbb
test
xchg
jl
repz
enter
push
fisttpl
lahf
nop
hlt
lcall
icebp
out
sbb
test
jno
loop
movsb
mov
mov
sbb
jg
loopne
in
bound
lahf
adc
push
iret
bound
jnp
mov
mov
or
push
add
in
mov
push
inc
dec
adc
cs
lahf
test
inc
cmp
jecxz
dec
mov
push
push
ljmp
out
lahf
pop
inc
sub
aas
xchg
lods
mov
push
das
add
add
cs
or
add
push
pop
inc
cs
or
or
in
mov
cs
or
push
nop
or
add
adc
mov
cs
or
adc
push
pop
inc
cs
or
sbb
out
mov
xor
sbbl
add
jb
pop
and
add
add
xor
iret
mov
adc
push
scas
push
add
sub
push
xor
mov
popa
xchg
pop
fdivs
lock
xchg
scas
push
ret
push
add
es
and
movsb
push
adc
lods
movsb
sbb
aas
iret
push
inc
dec
jecxz
pusha
pop
stos
push
push
adc
pusha
shll
outsl
jo
jae
push
sbb
sbb
add
add
add
or
push
cmp
out
jne
pop
subb
cwtl
daa
js
and
add
mov
xchg
lock
mov
lods
xorb
fbstp
xor
das
sbb
xchg
mov
jns
add
add
jne
nop
lahf
fdivrs
inc
lahf
shl
and
xchg
daa
lock
xor
mov
adc
xor
and
popa
cmpsl
mov
and
sahf
jo
sbbb
test
add
rcrb
enter
xchg
daa
push
popa
jg
iret
nop
or
pop
pusha
outsb
dec
xor
js
mov
mov
mov
mov
test
xchg
daa
and
mov
in
add
daa
mov
in
xor
pop
add
pusha
daa
mov
mov
xchg
and
xor
mov
dec
pop
jb
jns
ss
ss
cmp
icebp
jbe
daa
push
out
pusha
add
or
inc
mov
xchg
call
notb
mov
aaa
outsb
and
mov
cmp
scas
pusha
push
fwait
loopne
outsb
dec
aaa
out
js
jns
jo
xchg
aaa
mov
scas
xchg
loopne
cmp
sub
or
cmp
cmp
das
mov
dec
daa
dec
lahf
jo
jne
dec
push
js
dec
xor
cmp
push
fsubrs
leave
test
xor
pop
mov
insl
xchg
dec
daa
nop
scas
jo
push
jb
mov
add
adc
outsb
and
xchg
pop
and
cmp
add
arpl
frstor
enter
lahf
xchg
daa
fs
shlb
jb
xchg
daa
sbb
xor
cs
or
push
out
mov
out
inc
cmp
pusha
js
fs
mov
in
sub
mov
js
scas
nop
or
lock
and
lahf
cwtl
sub
cmp
push
cmpb
js
inc
mov
sahf
nop
xchg
daa
gs
enter
lds
lahf
and
fbstp
cmp
xchg
inc
lahf
outsb
and
push
xchg
jg
gs
dec
rolb
ss
das
call
mov
sub
pop
fldt
xchg
pop
daa
push
enter
outsl
cmpb
sbb
bound
das
jns
in
sarb
cmpsl
add
or
outsl
xchg
inc
enter
cmp
inc
xorl
lds
jo
mov
mov
inc
sub
sbb
adc
mov
daa
pop
jg
sbb
je
pusha
mov
inc
pusha
data16
cmp
lahf
loop
add
bound
in
incl
pop
adc
fldl
incl
insb
cmpl
mov
and
mov
adc
inc
xchg
scas
nop
or
addr16
jo
inc
outsb
fldl
cwtl
lahf
and
add
lock
stos
outsb
and
jb
pop
and
shl
pop
xchg
pop
daa
test
lahf
pop
insb
or
addb
xchg
push
loope
test
enter
inc
mov
mov
sub
inc
call
leave
adc
rcll
rolb
mov
add
lahf
xchg
nop
sub
fsub
sub
daa
push
pop
cmpsl
mov
pop
fistpll
daa
ja
daa
mov
inc
dec
adc
push
jb
push
xchg
add
push
jno
imul
jmp
call
test
frstor
test
sbb
xchg
xor
push
outsl
daa
inc
imul
xor
jo
xchg
daa
push
xchg
insb
orb
inc
imul
lock
fadds
rolb
dec
fiadds
and
clc
fisttps
pmaxub
xchg
adc
and
mov
inc
jl
cwtl
inc
mov
mov
xchg
loopne
push
push
fistl
and
cs
jo
mov
bound
add
mov
mov
cwtl
iret
enter
mov
scas
fcomps
and
dec
js
sub
cmp
or
adc
fsubrl
mov
nop
imul
aas
call
seta
push
inc
cs
dec
pushl
xchg
daa
shlb
pop
adc
scas
inc
dec
daa
js
jo
jmp
xor
lahf
mov
shll
mov
dec
dec
add
lock
outsb
and
add
sbbb
inc
outsb
sub
adc
add
pop
mov
loopne
pusha
xchg
jo
cmp
add
jo
insb
ljmp
dec
mov
enter
add
mov
sbb
dec
iret
xor
add
daa
fmul
clc
jb
cmp
subb
jnp
push
xchg
inc
es
iret
rcrb
call
xchg
lahf
pop
and
and
cmp
and
fisttpl
js
pop
iret
adc
or
sbb
iret
xchg
dec
and
fmuls
add
add
outsb
add
push
enter
dec
iret
loope
pusha
fistpl
xchg
pop
outsb
mov
nop
add
or
mov
mov
fcomp
insl
leave
or
dec
xchg
daa
and
orb
outsl
inc
and
daa
lock
js
lahf
nop
es
xchg
outsl
and
ror
enter
fsubrs
dec
pop
or
push
add
sbb
sub
outsb
xor
mov
insl
out
pop
mov
cmpsl
andb
or
mov
test
xchg
xchg
jo
and
dec
adc
or
daa
jae
outsb
and
inc
push
pop
ja
sub
mov
fisttpll
outsb
mov
into
jg
frstor
mov
mov
das
andb
daa
add
movzbl
adc
sub
push
xchg
mov
fiadds
ret
bound
shlb
jae
cs
dec
loopne
pushf
out
inc
pop
add
ja
inc
icebp
inc
inc
ja
dec
das
je
rcr
or
inc
outsb
sub
xor
pushf
pop
inc
or
in
or
pop
aas
iret
and
or
pop
inc
mov
outsb
daa
dec
movmskps
jg
mov
jo
lock
js
pop
xor
in
imul
lock
clc
mov
dec
call
shl
nop
adc
dec
adc
data16
and
outsl
leave
rcl
cmpsb
mov
mov
push
pop
push
cmp
pop
and
dec
rclb
mov
push
sub
xchg
sub
cmp
sub
xchg
lock
adc
sbb
mov
dec
xor
int
pop
xchg
pop
mov
in
pop
push
sub
arpl
and
lcall
push
into
adc
dec
inc
nop
pop
ja
jmp
push
ljmp
and
rcrb
dec
outsb
pop
lahf
fisttpl
test
adc
jb
cmp
push
inc
dec
lock
cmovae
dec
push
repz
add
add
push
lods
dec
mov
in
cmp
mov
fistl
or
fisubrs
mov
clts
imul
add
and
fsubrp
in
aaa
dec
inc
push
pop
dec
inc
xorl
pop
cwtl
fcoml
pop
pop
mov
bound
das
pop
mov
push
enter
cmpsl
mov
out
sarl
fsubrp
pmuludq
int
outsb
das
decl
push
adc
jno
pop
aas
dec
push
xor
xchg
es
jb
jo
or
in
femms
xchg
mov
mov
jo
dec
nop
bndldx
cmpsl
cwtl
cmpsl
outsl
outsl
pop
outsb
pop
lods
sbb
in
in
jns
loopne
iret
and
xchg
repz
sti
mov
xlat
scas
fdivrs
and
sub
inc
imul
scas
mov
pop
push
cmpsl
jo
pop
xor
push
pop
das
adcb
inc
scas
lods
mov
dec
cmp
in
mov
out
in
loopne
call
jb
into
sahf
or
insb
fbstp
cmp
pop
xor
or
inc
lcall
leave
sub
dec
jo
push
enter
enter
mov
push
rcr
lock
sub
and
jb
adc
and
leave
adc
cmp
outsl
andb
nop
insl
dec
in
in
mov
pop
or
out
pop
and
fmuls
add
push
xlat
popf
loopne
call
leave
enter
add
adc
cmp
pusha
pop
outsl
fucom
mov
cmp
nop
pop
jbe
pop
mov
decl
nop
out
loopne
cwtl
in
scas
fisttpll
mov
xor
dec
and
pop
lds
inc
lcall
inc
enter
add
mov
pop
outsl
or
insb
xchg
bswap
iret
push
add
push
outsl
loopne
enter
inc
dec
pop
adc
pop
cmp
push
pop
pop
orb
jbe
rcll
dec
scas
nop
out
mov
adc
outsl
dec
hlt
outsl
add
jns
ja
push
add
out
sahf
pop
cmp
dec
or
sahf
out
or
or
jns
out
or
out
sahf
rsm
adc
out
adc
adc
adc
jns
out
adc
iret
repz
pop
sbb
sub
ss
repz
inc
sbb
repz
repz
sbb
xchg
sub
pop
decb
mov
push
int3
pop
rorb
mov
jno
jno
xchg
and
jb
jb
jb
cmp
xor
jb
jb
jb
and
push
jb
jb
enter
jb
jb
jb
inc
mov
jb
jb
jb
jns
enter
jae
push
adc
out
sub
cmp
sahf
out
sahf
dec
sbb
sbb
out
jb
sbbb
push
pushf
pop
stos
and
cmp
sahf
mov
pushl
bound
cli
aad
out
pop
push
nop
scas
arpl
movsl
in
out
adc
test
and
and
inc
inc
aaa
call
add
clc
aas
fmul
inc
inc
cmpsl
add
inc
pop
sub
dec
and
je
dec
xchg
xchg
out
pop
push
addps
or
mov
jg
nop
or
or
enter
addr16
iret
clc
push
enter
dec
and
xchg
push
enter
jne
shrb
fs
jne
xchg
dec
leave
lret
cwtl
gs
jne
loopne
jns
adcl
and
xchg
sub
fsubs
fwait
push
inc
cmpsl
jp
scas
cmpsb
push
das
scas
movntps
ss
enter
jbe
jbe
jbe
or
fwait
outsl
mov
repz
jne
fimull
or
iret
push
in
movd
pop
cmp
jns
std
adc
adc
cmp
repz
adc
in
adc
data16
inc
xchg
inc
push
and
cmp
fnsave
jnp
xchg
xchg
xchg
sahf
pushf
jbe
push
in
lret
das
fimuls
outsb
mov
incl
ja
fwait
mov
emms
mov
adc
xor
scas
ss
enter
ja
ja
das
repnz
pop
test
leave
leave
adc
test
js
jns
rorl
iret
fisttpll
ja
lret
lret
pop
dec
lock
ja
js
inc
sahf
fsts
js
add
cmp
cmp
lds
fisttpl
sahf
ja
jo
push
add
dec
cltd
movsb
scas
pop
mov
and
mov
leave
fsub
js
outsl
and
jns
and
adc
jns
jns
mov
mov
xor
pop
ljmp
jae
test
scas
nop
dec
xchg
nop
or
lahf
fiaddl
fcomps
sub
loopne
jp
imul
inc
or
push
sahf
out
jmp
xor
ds
dec
add
dec
dec
pop
push
daa
push
push
orb
adc
sarb
add
dec
clc
mov
or
adc
test
mov
fistpll
cmp
dec
fisttps
cmp
inc
mov
jo
jl
push
pop
sar
jo
rcll
inc
pop
mov
add
repz
outsl
mov
mov
into
packssdw
cmp
aas
mov
cmpsl
jmp
jnp
add
daa
daa
mov
fistpll
jnp
push
test
popl
jl
sub
dec
jo
jl
xchg
and
dec
jl
je
enter
jl
jl
xchg
sub
pusha
insl
aas
jl
cmp
mov
sahf
fisttpl
inc
loopne
fimuls
dec
jmp
pop
add
addb
and
dec
test
inc
cs
mov
jge
in
mov
outsl
mov
mov
xor
sbb
dec
lahf
xlat
iret
jno
ja
mov
mov
push
mov
call
jbe
psubb
loopne
loop
test
or
outsb
movhps
dec
push
int3
rcr
xchg
jg
xor
daa
imul
mov
dec
mov
push
add
inc
icebp
in
jbe
psrlq
jmp
push
fists
jno
jno
jg
and
cmp
testb
repnz
scas
xchg
and
pushf
dec
shr
inc
repnz
nop
push
add
pop
fs
and
mov
in
pusha
jg
jg
inc
sbbl
inc
aas
popa
mov
push
cwtl
jb
dec
cmp
shlb
xchg
and
jae
dec
xchg
push
repnz
insl
mov
xchg
jg
pop
mov
mov
subb
push
test
inc
sbb
push
js
outsl
inc
cmp
mov
push
or
jbe
scas
pop
pop
nop
iret
dec
outsl
mov
jbe
scas
loopne
jg
pop
rorb
in
mov
dec
repnz
xor
xor
jne
dec
mov
xor
inc
jne
jne
nop
adc
cmpl
cmp
iret
test
inc
cs
nop
cwtl
testb
loopne
or
bound
mov
jbe
seta
ffreep
adc
xchg
xchg
and
orl
adcb
push
subb
xor
xchg
xchg
xchg
cmpb
dec
adcb
xchg
xchg
xchg
xchg
subb
addb
xchg
adcb
mov
add
lret
sbb
xchg
xchg
xchg
xchg
and
in
xor
add
or
and
out
and
and
and
jns
out
and
out
sahf
daa
sub
jnp
sahf
out
sub
jns
out
sub
out
sahf
das
mov
aam
je
orl
daa
ja
jb
mov
outsl
add
test
test
enter
test
test
test
test
xchg
and
test
cmp
aad
jecxz
icebp
test
test
repz
mov
sub
rcll
aaa
js
cmp
adc
test
test
inc
mov
test
test
jg
jns
sub
jb
rclb
loopne
jmp
jno
stos
test
adc
dec
xchg
imul
loopne
and
jp
enter
xor
push
mov
shlb
lock
push
enter
clc
data16
xchg
sub
sbb
popf
sub
test
enter
xchg
jl
inc
mov
xchg
test
loopne
xchg
and
xchg
in
add
aam
filds
xor
adc
mov
mov
mov
mov
mov
aaa
sahf
out
mov
out
inc
push
push
dec
add
js
mov
outsb
mov
mov
or
ljmp
adc
in
mov
mov
dec
xchg
jl
xchg
sub
out
mov
bswap
pop
and
nop
cmp
pop
xor
mov
pop
pop
jae
ja
jo
cmp
mov
jnp
jbe
mov
ret
mov
int
fnstsw
push
iret
lock
jg
pop
xor
das
mov
push
jle
mov
inc
push
xchg
sub
xchg
pop
jo
xchg
sub
xchg
js
nop
mov
add
les
mov
mov
lock
pop
sub
clc
mov
pop
adc
dec
jo
mov
sbb
pushf
mov
les
testl
ficomps
jb
decl
nop
aas
cwtl
adc
jg
add
popf
pop
jo
shrb
lea
jg
xchg
xchg
outsb
into
mov
or
pushf
jp
adc
in
and
sub
dec
cmpsb
mov
outsl
sarb
test
sbb
cmp
dec
xor
popf
gs
dec
dec
dec
ja
ror
filds
push
xchg
loopne
nop
out
out
add
fsubl
mov
loop
sub
outsl
les
jns
dec
andb
dec
jo
test
cmpsl
js
rol
outsb
inc
ficomps
mov
mov
shlb
rclb
pop
enter
sar
in
push
cmp
sahf
dec
leave
dec
addl
fdivrl
cmpsl
pusha
sub
inc
inc
aas
leave
insl
or
filds
mov
adc
fists
inc
iret
jno
dec
and
adc
or
pop
mov
ret
mov
push
pushf
cmpsb
pop
sbb
xor
stos
je
in
out
aas
fdivr
pop
inc
leave
and
nop
inc
test
sub
rcrb
sub
xchg
sub
inc
leave
adc
push
iret
add
enter
shlb
push
enter
in
xchg
sub
sbb
xlat
outsb
push
shrb
pushf
pop
loopne
or
enter
xchg
enter
sub
mov
aas
inc
pop
dec
jg
xor
push
aad
adc
in
js
orl
pop
jg
mov
fisubrl
outsl
loopne
bound
call
adc
loopne
nop
mov
mov
nop
imul
add
iret
inc
scas
pop
mov
jg
dec
jo
inc
cs
sub
cmp
rcl
mov
loopne
clc
xor
dec
and
jae
dec
pop
cwtl
jg
jmp
inc
xchg
push
mov
push
aaa
das
daa
daa
fucomp
pop
jae
jnp
imul
inc
cmp
mov
or
inc
jg
inc
or
xchg
cmp
xchg
mov
mov
jbe
outsl
scas
mov
pop
int
ja
ds
mov
and
scas
fcoms
rorb
enter
fstpt
enter
outsl
add
enter
xchg
enter
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
ror
enter
xchg
xor
lea
adc
sub
cmp
into
leave
jo
incb
xchg
outsl
mov
loopne
rorb
mov
call
add
lock
xchg
outsl
sbb
xchg
decl
sub
lds
dec
push
cmp
nop
mov
test
mov
mov
enter
loopne
call
or
xor
or
lods
loopne
xchg
lcall
scas
fcmovne
adc
pop
push
inc
sahf
push
rolb
xchg
pop
xchg
jg
or
repz
add
adc
rcr
jecxz
out
cmp
dec
dec
cld
or
jns
xor
mov
and
xchg
pop
xchg
push
js
movsl
adc
adcb
in
mov
or
nop
loopne
test
add
jb
push
mov
hlt
movsb
cmp
dec
push
xchg
jmp
fldt
xchg
fisttps
nop
xchg
xchg
in
or
or
xchg
sub
cmpsl
xchg
xchg
sub
out
xchg
xchg
and
adc
xchg
cwtl
and
leave
inc
dec
push
or
xchg
xor
xchg
cwtl
xchg
mov
push
sbb
cmp
decl
add
arpl
push
push
mov
pop
fildll
rcrl
loope
sub
inc
xchg
add
scas
enter
loopne
pop
lock
call
add
nop
addr16
pop
push
xor
pop
adc
cltd
das
push
cltd
popa
cltd
cmp
repz
add
add
repz
lea
cmc
loopne
outsb
outsl
mov
mov
or
pop
loopne
iret
in
in
adc
scas
or
iret
or
xchg
pop
aaa
imul
daa
daa
daa
daa
cmp
xor
outsl
iret
adc
dec
fwait
nop
fwait
push
add
add
repz
pushf
rcr
or
repz
leave
repz
mov
daa
daa
iret
or
xor
repnz
gs
call
outsl
orb
sbb
fwait
in
pop
ja
fwait
push
mov
lods
cmp
por
xchg
adc
adc
pushf
in
mov
xchg
cmovg
int3
add
mov
scas
push
or
jb
mov
in
adc
add
inc
scas
sbb
aad
lea
inc
mov
fwait
pop
popf
movups
sub
xor
scas
nop
dec
scas
push
call
xor
fists
cwtl
scas
nop
imul
in
or
pshufw
pop
mov
xor
or
pop
add
adc
add
inc
dec
sahf
pop
xor
leave
xchg
cltd
dec
cltd
pusha
sahf
jecxz
pop
fwait
pusha
outsl
mov
and
inc
xor
lcall
sbbb
subps
push
pop
filds
pop
cmpsb
sahf
stos
sahf
mov
fnstsw
out
add
add
pop
fnstcw
dec
outsl
pmulhuw
sahf
js
jns
add
lahf
sbb
es
pop
pop
iret
jns
jns
lahf
cmp
in
sahf
pop
scas
add
add
mov
in
in
scas
mov
in
or
lock
pop
pop
dec
clc
mov
mov
mov
jns
push
cmp
inc
or
push
mov
outsl
mov
js
andl
outsl
mov
cs
mov
cmp
sbb
mov
scas
pop
sub
jg
dec
orb
and
pushl
mov
pop
pop
movsb
cmp
fdivs
jne
rol
push
add
bound
mov
aas
jecxz
xor
mov
sub
mov
rcll
scas
nop
out
pusha
scas
push
loopne
out
jne
mov
sets
pop
mov
fs
xor
fs
lock
jbe
lahf
mov
xchg
sub
out
imul
cmp
adc
dec
or
dec
mov
cwtl
mov
add
aaa
arpl
shrb
dec
shrb
fmuls
loopne
add
outsl
xchg
sub
scas
fsubrs
decl
xlat
dec
sbb
nop
inc
andb
mov
mov
mov
jmp
mov
iret
movsl
movsl
in
into
repz
push
add
aas
cmp
in
in
out
inc
movsl
push
movsl
pop
movsl
fwait
or
in
movsl
jae
jmp
adc
cwtl
mov
mov
das
mov
enter
lahf
lock
or
in
xchg
push
adc
and
cmp
cmpsb
inc
cmpsb
iret
push
cmpsb
pop
movsb
loope
xchg
cmpsb
insb
cmpsb
jp
lahf
cmp
nop
cwtl
cmp
cmp
cmpsb
mov
shl
jbe
cmp
in
das
cli
dec
add
fbld
dec
push
xchg
sub
call
outsb
xchg
xchg
cmpsl
cmpsl
punpckhwd
je
adc
mov
nop
leave
insl
rcr
cwtl
push
cmpsl
lahf
cmpxchg
ror
lahf
rorb
leave
leave
in
jbe
das
loopne
call
sar
add
jb
test
call
xor
test
movsb
sub
pop
mov
inc
xchg
sub
xchg
jo
nop
dec
and
movsb
test
mov
das
sahf
cmp
in
in
out
push
cli
add
int
adc
sbb
or
mov
xor
inc
rsqrtps
rcr
in
push
test
jmp
test
rorb
outsb
adc
test
or
subb
frstor
inc
leave
and
sub
cmpsb
add
dec
and
push
mov
stos
decl
dec
mov
mov
orb
lods
sub
stos
js
pop
or
dec
loopne
call
stos
psubb
jbe
dec
pop
and
js
dec
mov
or
mov
xchg
jg
es
push
decl
stos
dec
mov
pop
ja
xchg
setle
out
jg
rcrb
push
enter
ficoml
lods
scas
in
sub
lods
dec
lods
imul
cltd
call
cmpsb
cwtl
ss
cmpb
nop
dec
scas
mov
in
or
lock
lods
pop
and
dec
decl
lods
pop
call
sahf
sub
loopne
dec
inc
dec
out
pop
mov
outsl
pop
outsl
jo
js
cmp
and
push
das
mov
dec
lods
xchg
xchg
sub
fsubrs
xchg
xchg
lods
lods
scas
push
jb
sub
pop
scas
dec
stos
iret
mov
adc
cmp
mov
push
jno
inc
fsubr
jp
jo
scas
pop
add
nop
cwtl
add
and
jbe
daa
enter
xchg
push
enter
cwtl
add
shlb
stos
mov
jmp
lods
pusha
scas
and
rolb
push
pop
sbbb
mov
pop
mov
decl
pop
xchg
sub
xchg
enter
inc
jecxz
call
mov
mov
iret
repz
and
add
add
add
dec
push
ficomps
addr16
or
iret
or
in
xchg
mov
in
lret
aas
adc
jbe
cmc
fbld
scas
aas
je
mov
mov
nop
imul
xor
dec
scas
pusha
out
bound
dec
fisttpll
mov
btc
call
inc
push
pushl
and
pop
xor
mov
insl
mov
sub
adc
jbe
push
mov
sbb
or
jbe
repnz
lock
fidivrl
repnz
mov
pop
test
pop
mov
xchg
pushf
dec
jb
into
mov
ror
mov
iret
rclb
sub
bound
out
loopne
in
push
push
dec
add
or
lcall
cwtl
test
inc
pop
pop
pop
push
mov
mov
mov
mov
nop
or
mov
mov
xchg
xchg
ret
into
pmaddwd
rorl
aas
std
scas
jbe
xchg
and
adc
outsw
mov
wrmsr
aas
cmp
in
push
pop
arpl
mov
pop
pushf
cmp
jbe
seta
pop
mov
loop
mov
mov
outsb
and
ds
fmuls
loopne
inc
and
mov
sub
xor
mov
ljmp
lgs
mov
loop
xor
mov
jg
test
pushl
call
xor
sahf
lds
dec
jmp
pop
push
in
or
pop
dec
mov
mov
out
repnz
mov
repnz
mov
mov
mov
mov
cmp
or
mov
inc
mov
mov
mov
mov
pop
lds
mov
mov
mov
push
fadds
sbb
cwtl
test
scas
in
sarb
fs
lock
loopne
mov
pop
add
nop
dec
push
and
dec
scas
nop
dec
addb
scas
nop
dec
mov
push
loopne
mov
aam
mov
mov
dec
mov
sub
dec
pop
cltd
inc
ss
jo
mov
sbb
sbb
xor
sbb
leave
enter
mov
loope
leave
orl
das
dec
ja
dec
mov
fistl
mov
js
mov
bound
xchg
xchg
mov
dec
dec
scas
jo
orl
mov
daa
daa
ret
into
pop
pusha
jns
jb
lock
add
push
nopl
sub
ljmp
scas
nop
loopne
or
xorb
stos
push
enter
mov
mov
loopne
call
xchg
xor
mov
call
nop
iret
lods
cmp
pop
jg
sub
js
cmpsb
dec
sahf
ja
scas
seto
add
mov
adc
push
pop
mov
int3
add
mov
scas
nop
imul
pop
enter
scas
fucomp
clc
pop
clc
adc
mov
mov
cmovg
or
mov
decl
jb
pop
jmp
fwait
pop
shlb
mov
sbb
mov
mov
stc
push
dec
sbb
repnz
mov
jns
inc
mov
mov
inc
mov
lahf
push
adc
daa
push
enter
clc
ror
daa
daa
daa
rcr
loopne
imul
mov
ret
das
mov
divb
mov
mov
inc
pusha
mov
in
mov
call
shlb
inc
lock
lea
paddsb
mov
outsl
push
push
rorb
adc
test
adc
or
rcll
leave
lret
outsb
cmp
jo
mov
pop
aas
nop
xorb
mov
js
pop
and
mov
sub
dec
rorb
xchg
sub
mov
pop
adc
lock
movsb
xchg
clc
add
ret
enter
sar
daa
push
sub
inc
dec
push
mov
jg
lds
add
iret
mov
test
adc
dec
dec
je
test
add
jle
ret
rorl
das
sub
iret
xchg
xchg
sub
test
inc
dec
daa
push
insb
ficoml
jmp
outsl
jo
mov
fsubrl
cmp
out
popl
fiaddl
dec
mov
imul
ret
sbb
cs
lret
pop
mov
mov
addr16
in
in
incl
dec
inc
imul
scas
pop
dec
scas
fs
mov
xchg
mov
pop
cmp
push
sub
xor
pop
xchg
xchg
jp
push
ret
jns
out
cmpsl
imul
out
sahf
out
xchg
add
jns
scas
pop
mov
sahf
out
out
cmc
mov
rcl
inc
call
inc
in
leave
jnp
add
adc
xchg
sub
ret
ret
xchg
xchg
xchg
xchg
ret
ret
ret
ret
xchg
xchg
xchg
xchg
ret
ret
ret
ret
and
jp
ret
push
or
repz
push
mov
push
or
pop
les
addr16
xor
outsl
sub
mov
aas
bound
jg
test
dec
push
pop
nop
lock
adc
inc
mov
adc
jg
cmovo
jb
daa
dec
lds
lds
sahf
dec
mov
dec
lahf
jo
push
stc
sbb
push
add
lds
push
dec
test
add
clts
pop
push
cmp
aaa
fnstcw
cwtl
push
outsb
or
gs
fwait
lds
in
lds
xchg
out
xlat
pop
loop
pop
stos
test
add
incl
mov
out
out
xchg
or
sub
push
mov
rorb
and
leave
pusha
sub
imul
int3
outsl
dec
outsb
xchg
out
inc
push
add
xchg
int
jecxz
leave
leave
enter
nop
dec
data16
cvtps2pi
cmp
dec
and
cmp
jns
push
cs
push
pop
addr16
out
cmp
sbb
leave
leave
leave
ja
iret
loopne
idivb
and
das
test
jb
mov
jnp
add
inc
sub
dec
sub
xchg
enter
and
push
enter
test
jae
dec
dec
enter
xor
push
iret
lret
adc
mov
adc
or
cmp
leave
push
iret
jae
out
cmpsl
push
cmpsl
push
add
leave
int
cmp
push
cmp
mov
push
pop
jmp
leave
lcall
test
sbb
popf
mov
int
push
enter
push
lock
lret
leave
insl
movaps
aas
cmp
ud1
dec
enter
test
in
jo
test
das
lret
fildl
mov
mov
test
lahf
rcr
loopne
dec
outsb
pavgb
jg
into
adcl
sub
into
bound
lret
dec
pop
dec
or
cltd
push
inc
lret
fisttps
mov
jg
loopne
in
orb
lds
enter
xlat
scas
fcomps
dec
fcoms
int3
call
fcoms
vpmacsdqh
adc
push
mov
je
pop
int3
ljmp
mov
lahf
jg
xor
test
pop
jg
cmp
psubusb
sub
cmp
call
and
and
adc
mov
ljmp
in
in
push
pop
pusha
jg
leave
leave
adc
bound
aam
nop
pop
cwtl
int
jg
inc
or
call
adcl
dec
mov
cmpsb
add
rorb
bound
push
popf
sub
pop
mov
pop
push
ficompl
cmp
je
lods
mov
cs
mov
mov
mov
dec
nop
imul
hlt
outsl
in
pop
test
xchg
and
fdiv
xchg
xchg
sub
aam
leave
leave
adc
xchg
jb
leave
adc
call
iret
jmp
incl
sub
pop
and
insl
into
jg
loopne
lock
ja
fadds
jp
cmp
mov
aad
fcmovu
jp
scas
popl
dec
xor
call
mov
pop
jno
iret
rorb
je
pop
or
sar
in
mov
decl
sub
xchg
sub
xchg
sub
xchg
push
js
in
sub
mov
xchg
sub
mov
leave
adc
adc
nop
in
jb
lock
or
dec
add
es
adc
fsubs
fdivs
loope
xor
fistpll
ror
aam
and
fsubr
fsubrs
fldl
push
xlat
fiaddl
aas
in
aaa
mov
dec
or
mulb
in
fnstenv
fldcw
jl
popf
pusha
jo
jo
pop
mov
jle
movsb
dec
dec
cmpsb
nop
xchg
jb
jmp
lock
nop
sarl
cmpsl
cmp
in
dec
cmpsb
test
fidivl
jl
and
pop
and
int3
sbb
faddl
ret
pop
out
outsl
in
rcrl
xor
lcall
orl
add
sbb
dec
out
inc
pop
and
push
pop
test
ror
adc
xor
leave
adc
fmull
mov
in
mov
mov
cwtl
rorb
lods
sar
fsubrl
sub
rorb
shrb
sbb
fucom
dec
pop
adc
jo
jbe
mov
sar
adc
scas
mov
sub
enter
xor
inc
shl
push
ficoml
ficompl
fidivs
mov
in
mov
jo
mov
test
dec
xchg
lock
pushl
rcll
in
cltd
clc
rcl
scas
nop
rcrl
sub
aam
push
and
bound
decl
imul
inc
add
shl
or
jo
verr
sub
ficoml
dec
sub
push
mov
js
mov
call
jl
xchg
sub
aad
clc
gs
outsb
test
fsub
xchg
xchg
xor
cmp
out
sbb
pop
mov
cmp
aad
outsl
inc
cs
pop
enter
inc
insb
lock
and
mov
xchg
pop
and
xchg
pop
and
sarb
xchg
loopne
pop
inc
dec
and
xchg
addr16
cmp
mov
jecxz
shlb
xchg
dec
and
call
lahf
mov
inc
repnz
jecxz
jecxz
leave
adc
inc
sub
push
call
in
scas
nop
imul
in
subb
dec
mov
xchg
pushl
adc
inc
js
adc
or
inc
enter
in
xor
rcr
sbb
dec
jmp
mov
dec
add
std
push
xlat
pop
mov
sbb
fsubs
xlat
jmp
xlat
mov
add
xor
test
jg
out
out
and
dec
jnp
dec
js
jo
mov
add
lock
js
or
iret
push
lock
ljmp
cltd
inc
push
cmp
mov
adc
les
jb
nop
out
out
jb
pop
pop
in
jb
dec
call
lock
clc
xlat
lea
fcoms
aas
pop
and
dec
dec
test
pop
call
mov
dec
call
inc
fdivr
lock
pop
pop
fmuls
push
pop
jp
jmp
ret
into
adc
cmp
insb
dec
pusha
fcoms
mov
mov
scas
xchg
iret
pushf
xsha1
cmpsb
iret
dec
test
shr
jmp
adc
or
lcall
popf
shl
fcmovnu
jmp
push
push
ljmp
and
fcos
xchg
push
cmc
mov
fldcw
inc
enter
ljmp
dec
vmread
ljmp
pop
dec
pop
jmp
cmp
jmp
jmp
dec
dec
test
scas
pop
test
pop
xor
inc
in
popa
and
and
dec
call
mov
lds
mov
jo
pop
jb
fsubs
add
dec
mov
xchg
shll
aam
nop
dec
scas
nop
pop
call
scas
cld
fcos
in
and
push
dec
mov
scas
nop
imul
out
push
xor
pop
js
adc
inc
out
out
and
push
jb
stos
sbb
mov
xchg
mov
xor
and
out
pop
pop
add
xor
das
sbb
dec
mov
gs
pusha
out
dec
push
test
mov
xchg
test
dec
mov
scas
pop
in
es
test
daa
adc
outsl
sarb
sbb
sub
test
pop
inc
lock
push
jns
repnz
lock
jb
and
shrl
adc
icebp
push
push
incl
xor
es
dec
adc
nop
mov
mov
xchg
decl
sub
xor
repnz
jp
inc
jo
fucomi
nop
mov
xchg
mov
pop
mov
and
shlb
and
mov
inc
rcrl
stc
daa
adc
lcall
enter
dec
pushl
repz
or
xor
xor
mov
daa
fmull
cmp
leave
repz
jns
sbbl
adc
decb
pushf
pushf
fsubrl
loopne
outsb
push
dec
cmp
fdivr
hlt
jp
push
add
mov
inc
lcall
mov
pop
iret
mov
ffreep
hlt
clc
push
and
filds
dec
pop
or
push
pop
or
lcall
je
xor
pop
xor
test
cmc
mov
cmc
cmp
dec
scas
fsubr
in
mov
dec
es
mov
cmp
cwtl
or
mov
and
cmp
dec
pop
loopne
inc
dec
leave
mov
divl
dec
xchg
cmp
mov
mull
dec
je
pop
mov
sub
das
mov
cmp
pop
jg
mov
dec
add
mov
sbb
sti
push
lcall
xchg
xabort
mov
lret
das
ljmp
nop
xchg
clc
clc
jmp
fxch
clc
decl
lahf
jo
xchg
sub
fisubrs
push
aaa
aas
nop
cld
jmp
jnp
ja
enter
xchg
sub
jno
or
pop
pop
dec
stc
cmp
xchg
fdivs
in
xor
pop
jae
xlat
fucomip
push
js
js
pop
mov
and
or
dec
cmp
inc
dec
repnz
outsb
aaa
mov
cs
jo
in
pop
mov
pop
cwtl
dec
push
add
adc
dec
mov
and
and
push
jnp
and
js
scas
fs
inc
and
dec
insb
and
lahf
inc
ljmp
xchg
sbb
xchg
sub
mov
mov
aaa
movsb
push
push
add
xor
insb
push
fs
jo
rcl
pop
push
dec
dec
push
sbbb
add
push
sbb
pusha
push
add
xchg
push
or
push
sbb
dec
adc
adcb
nop
or
adc
dec
inc
inc
addl
rorl
mov
mov
sub
data16
mov
push
mov
pop
cmp
cmp
out
imul
sarb
roll
and
pop
inc
push
sub
push
insl
adc
xor
cs
push
mov
inc
sbb
ljmp
inc
push
sub
loopne
cmp
stos
push
enter
inc
lret
jo
nop
into
push
mov
jae
ss
cmpsb
lods
push
and
scas
jge
mov
in
mov
sti
and
mov
in
and
sub
mov
xchg
push
dec
inc
mov
mov
push
mov
and
sahf
fnstcw
pop
dec
jbe
push
ret
and
movsl
popa
cmpsl
inc
add
scas
fldt
insl
sarl
mov
and
jns
push
rcll
fisubl
aaa
xchg
cmpsb
xchg
adc
repz
mov
mov
test
adc
dec
mov
mov
lret
insb
xor
repz
lret
or
pop
sbbl
mov
xchg
into
xor
cmpb
imul
push
dec
addl
sub
insl
xchg
int
jns
test
dec
sub
clc
insb
mov
xchg
pop
adc
imul
lds
pop
leave
adc
stos
pop
xor
xorb
mov
imulb
daa
cmc
pop
shrb
dec
inc
sbb
jae
in
push
mov
dec
ja
mov
add
daa
xor
and
mov
or
cmp
push
jb
cld
addr16
add
pop
add
dec
jmp
inc
stos
test
add
or
cmp
jg
or
imul
daa
xchg
adc
xor
inc
jne
cmpsl
icebp
xor
adcb
mov
mov
sbb
dec
jb
add
loope
sub
adc
decl
sub
test
or
mov
scas
mov
sub
les
mov
mov
or
rcll
and
dec
pop
add
mov
add
inc
das
push
or
fs
jp
outsb
push
add
add
add
inc
add
addb
clc
mov
inc
out
mov
pop
mov
cmp
sub
jg
cmp
es
orb
daa
out
lods
jbe
xlat
push
in
daa
pushf
or
dec
mov
mov
add
mov
adc
mov
and
mov
inc
add
loopne
jg
sub
push
out
mov
out
es
push
sbb
ja
mov
jo
pusha
dec
out
inc
or
add
jg
mov
inc
daa
testl
add
mov
and
sbb
push
mov
jg
or
and
jmp
incl
addl
or
daa
fiadds
add
sahf
add
add
mov
and
add
ja
or
add
or
inc
mov
add
addb
or
inc
subb
or
sbb
add
or
es
mov
pmaddwd
dec
mov
mov
add
xor
adc
push
adc
xlat
adc
and
lahf
ja
cmpsl
xor
sub
jno
rolb
adc
sub
jbe
out
sub
push
inc
filds
add
add
scas
popf
inc
sbb
add
dec
aas
addb
mov
mov
imul
adc
inc
jo
rolb
outsb
inc
adc
jno
test
push
and
dec
bound
mov
or
add
push
xchg
or
inc
lahf
mov
test
inc
mov
add
push
or
shlb
pop
inc
adc
rolb
sbb
push
pushl
sbb
rorb
or
adc
pop
inc
andl
std
dec
xor
xor
aaa
out
inc
inc
cmpsl
push
fadds
int3
fcom
jns
mov
adc
xchg
sub
add
push
push
mov
test
hlt
jle
add
sub
pop
or
adc
stos
test
add
and
adc
repnz
inc
clc
mov
sbbb
pop
pushf
adcl
mov
mov
pop
das
mov
jmp
push
add
mov
out
insb
add
pusha
loopne
push
shrl
and
cmp
cmp
push
add
add
iret
repz
add
in
iret
repz
loopne
fmull
repz
repz
aam
ror
repz
or
les
repz
rclb
adc
cmp
repz
iret
repz
adc
movsb
cmp
repz
mov
cmp
repz
sbb
iret
sbb
test
repz
andb
and
cmp
repz
je
insb
iret
repz
and
pop
cmp
repz
push
sub
repz
repz
sub
inc
iret
repz
sub
cmp
repz
xor
xor
repz
repz
sub
iret
repz
xor
sbb
cmp
adc
xchg
lods
and
mov
or
jns
incb
fcom
enter
sahf
out
mov
mov
sahf
out
cmpb
sahf
out
sahf
pusha
pop
push
dec
inc
cmp
out
xor
and
adc
jns
out
or
add
iret
repz
cld
sar
lock
call
loopne
ror
shl
iret
repz
iret
repz
mov
pop
dec
cmp
repz
xor
sbb
sahf
out
testl
int3
mov
lods
pushf
mov
jns
out
dec
cmp
sub
sub
sbb
or
ret
idivb
into
xorb
push
add
push
adc
adc
fstps
gs
out
int
jns
xlat
outsb
decb
mov
js
sahf
out
sahf
insb
sti
pop
cli
dec
stc
jns
out
cmp
and
adc
cmp
out
cld
int3
cmc
in
iret
repz
int3
repz
cmp
fisttps
out
fisttps
out
sahf
out
cmp
in
lock
in
fdivrl
out
jmp
ljmp
jl
decl
out
out
cmp
jmp
in
cmp
cmp
decl
loope
idivl
repz
fisttps
int
jns
sub
adc
in
leave
jns
sub
fidivrl
fsts
push
xlat
insb
inc
sahf
out
out
and
push
roll
cmp
repz
lock
repz
repz
iret
mov
pushf
iret
repz
int
int3
je
dec
cmp
repz
sbb
adc
jns
cmpsl
stc
cld
mov
out
out
lds
push
xor
repz
cwtl
rorl
shl
sahf
out
mov
out
sahf
mov
out
imul
push
mov
int3
mov
push
mov
mov
jnp
jns
mov
push
mov
push
mov
iret
sarl
mov
mov
test
insb
jmp
lods
out
inc
sbb
xchg
mov
js
push
mov
loope
mov
pop
inc
rcrb
cmp
push
or
sub
adc
push
mov
add
lar
mov
push
mov
daa
inc
test
pop
sti
out
sub
push
or
call
ficoml
loopne
jmp
lar
mov
movups
roll
pop
cmp
jg
mov
mov
test
scas
mov
mov
nop
push
fcomp
mov
cmp
push
scas
nop
js
mov
loopne
xlat
mov
push
outsl
popf
negb
pop
pop
adc
cs
add
or
mov
pop
fs
je
dec
in
imul
sbb
and
and
int
add
xor
or
clc
xchg
jnp
out
subl
mov
sub
in
xchg
sub
outsl
jp
jg
fs
popa
das
xor
xor
sub
jmp
mov
push
dec
inc
and
sub
fcmove
and
and
and
test
mov
insw
adc
sbb
sub
pop
notl
dec
push
push
adc
call
xchg
pop
and
bound
sub
insb
mov
popa
jae
imul
xor
inc
aas
add
insb
adc
add
or
add
mov
popa
add
adc
mov
data16
cmp
ret
push
frstor
pop
ss
dec
add
roll
sub
mov
js
call
cmp
stos
pop
popa
outsb
bound
popa
push
jp
and
mov
adc
jl
pop
js
imul
xchg
test
jns
and
push
dec
inc
inc
push
pop
and
sub
andl
xchg
in
push
dec
outsl
fdivs
push
push
lret
push
jp
daa
push
jne
popa
sbb
push
popa
test
pop
push
inc
arpl
mov
popa
sub
fs
pop
dec
cmp
fistl
sub
xor
inc
push
push
dec
push
leave
push
rcl
mov
ror
mov
icebp
notl
dec
xchg
cmp
sub
mov
inc
pop
and
xor
jl
aas
iret
in
shll
push
or
jbe
add
rclb
jae
push
fildll
fiaddl
movsb
jge
push
and
mov
add
sub
adc
es
out
jo
insb
pop
enter
pop
push
pushf
cmp
repnz
inc
inc
in
jae
repnz
cmp
jmp
jb
pop
enter
repz
mov
clc
pop
in
pop
out
into
repz
rclb
les
mov
in
mov
add
repz
push
fadds
int3
idivb
in
lods
push
daa
cwtl
mov
sbbb
pop
cs
fwait
dec
es
or
cld
adc
hlt
push
int3
icebp
dec
mov
out
sahf
inc
stc
out
cmp
loopne
jnp
mov
push
pop
adc
dec
push
inc
push
out
aaa
in
cld
adc
push
fadds
jo
dec
sub
leave
jnp
push
dec
cmc
xor
inc
sbb
jns
or
fwait
rcll
lock
mov
push
push
push
push
and
dec
outsl
or
sbb
aam
ficomps
mov
test
je
cmp
clc
cmp
dec
xor
lock
push
lock
test
pop
js
insb
push
repz
iret
and
out
es
movd
jnp
ja
push
mov
jl
outsl
insb
push
movsb
push
outsl
push
and
sbb
addb
imul
adc
or
or
out
mov
movsb
push
pushf
hlt
or
ljmp
faddl
mov
sahf
dec
sahf
movsb
and
adc
or
fistps
push
add
push
or
push
mov
cmp
stc
fs
data16
push
or
inc
push
xchg
or
mov
stc
jmp
push
pusha
pop
add
cs
xchg
add
es
pop
or
xchg
cmpsl
jnp
aaa
xor
add
stc
es
repz
sbb
mov
ds
int
jo
push
iret
rcrl
daa
in
push
in
jns
xorb
int3
push
movsb
jmp
cmp
cmp
cwtl
mov
in
pop
repnz
loopne
jae
ficomps
je
jmp
iret
pop
lock
push
aam
test
xlat
loopne
pop
js
xor
in
ds
sub
add
daa
adc
dec
clc
push
cwtl
add
inc
add
ds
nop
outsb
je
dec
pop
insb
push
pusha
push
inc
add
ja
add
pop
cmp
xor
adc
add
iret
fiadds
fidivs
pushf
repz
xchg
testl
fs
and
iret
lea
daa
adc
add
mov
jns
in
jmp
push
xchg
es
mov
add
add
daa
out
push
push
es
pop
ret
repnz
push
mov
mov
jl
adc
ja
jbe
outsl
or
add
decb
push
movsb
in
pop
jnp
sbb
adc
call
fwait
loopne
fadds
andb
jo
repz
repnz
cld
pop
jnp
jnp
mov
out
dec
jo
mull
pop
clc
sti
ja
push
loopne
lret
repz
mov
pushf
je
sti
cmp
add
or
dec
add
lock
push
mov
ja
xor
jnp
movsb
push
cmp
and
xor
mov
inc
fmuls
add
das
in
mov
pushf
pop
xchg
push
and
or
idivb
push
je
pusha
inc
mulb
movsb
add
cmc
mov
cmpsb
adcb
dec
mov
xchg
out
mulb
fs
pop
push
inc
repz
adc
pop
sbb
push
fcoml
int3
push
pusha
daa
add
fadd
sahf
push
sub
and
ja
dec
enter
pop
icebp
dec
es
mov
in
lock
push
fcompl
mov
cmp
mov
dec
daa
pop
cmp
iret
xor
cmp
mov
add
xor
out
jge
in
out
lahf
daa
aam
push
push
mov
pop
push
xor
lahf
and
es
lock
test
cwtl
movsl
rcll
in
mov
mov
push
mov
xchg
ljmp
add
jg
ja
sub
push
jmp
fcompl
sbb
out
out
cmpsl
out
rorb
push
test
push
out
js
insb
push
pusha
ret
int3
adc
or
inc
test
cli
mov
push
outsl
jo
dec
mov
jg
xor
pop
mov
mov
fildll
scas
outsl
stc
or
adc
fiaddl
int
lock
jns
gs
pop
jbe
out
idivb
or
repz
iret
outsb
cmc
mov
sbb
daa
rclb
mov
daa
cmpsb
leave
call
mov
mov
mov
lret
aam
cmc
andb
and
or
aas
push
orb
jne
gs
ljmp
pop
or
movsl
addr16
fidivl
xor
scas
jbe
add
ljmp
xlat
roll
aas
sbb
lods
inc
adc
rcl
scas
cli
mov
adc
adc
mov
mov
loope
lret
xor
xor
adc
insb
nop
popa
inc
xor
orl
ss
jnp
enter
cmp
mov
dec
jbe
add
sbb
ret
mov
jbe
xor
xor
cmp
sub
adc
aad
pop
or
test
adc
mov
and
adc
jnp
push
or
sarb
xlat
ja
sti
adc
test
lret
ss
test
idivb
scas
into
out
or
mov
ffree
movsb
xor
clc
mov
push
leave
nop
shl
int
or
pop
lock
fmull
int3
in
int
inc
mov
mov
in
int3
or
adc
mov
add
sarb
scas
lahf
and
mov
sbb
stos
mov
inc
std
mov
mov
iret
in
stos
aad
sbb
mov
fwait
xor
or
loopne
mov
xor
jmp
fidivrs
xor
mov
sti
int
inc
mov
aad
mov
xlat
jmp
mov
mov
mov
seta
fnstsw
les
or
xor
sub
push
xor
ss
mov
pushf
jb
cmp
or
in
mov
out
push
add
cmp
mov
xchg
int3
jnp
jae
dec
ror
int3
xor
lods
and
mov
mov
mov
mov
out
cmp
and
loopne
push
jle
scas
or
adcl
aaa
adc
outsl
cmp
xchg
test
or
mov
test
push
xchg
xor
xchg
push
xchg
xor
in
mov
xor
or
lret
adc
xchg
cmpsb
pop
mov
push
in
add
test
lret
cld
leave
cli
ficomps
mov
aad
test
rcr
mov
les
enter
ret
and
fdivs
inc
xchg
lods
xor
mov
fldcw
mov
inc
jbe
mov
mov
mov
enter
push
stos
cmpsl
testb
xlat
mov
push
mov
add
fnstenv
lret
push
int3
add
int
sub
sub
push
inc
xor
js
dec
cmpb
sub
and
xlat
sub
mov
pop
ror
mov
repnz
push
mov
out
insb
xor
push
int
mov
push
gs
rcrb
sbb
mulb
jbe
xlat
aam
sar
add
int
mov
bound
aaa
addr16
or
mov
clc
cmp
or
push
jg
pop
in
pusha
fistpl
outsl
mov
push
int
ja
cwtl
xchg
add
sahf
xor
lret
lods
addb
mov
sub
ret
jo
in
adc
cld
dec
push
sbb
sub
push
push
arpl
out
xlat
lret
inc
sarl
mov
mov
add
ret
or
cld
jmp
sarb
cmp
shrl
dec
nop
cmovae
mov
not
mov
shr
mov
mov
ljmp
or
adc
addl
mov
adc
outsb
add
sub
loope
das
pop
into
mov
ss
or
cmp
cmp
out
xor
sbb
shr
and
and
cwtl
xor
jle
adc
pop
rol
adc
aas
scas
mov
mov
outsl
inc
cmp
or
push
rep
xor
pop
shll
enter
fidivl
mov
mov
mov
mov
push
ds
xor
shll
adc
ret
mov
inc
hlt
aam
jb
std
push
cmp
pusha
lods
mov
mov
cld
rcrl
test
cli
cmp
imul
xlat
repz
pop
mov
divl
and
addb
pop
pop
addr16
shlb
aad
cmpsb
inc
addr16
addr16
lock
add
sarl
sub
cwtl
cmp
and
inc
adc
xor
mov
mov
jae
addr16
add
adc
cmp
rol
push
cmp
pop
sahf
cld
mov
jbe
inc
les
les
fcomps
push
jmp
add
mov
aas
and
pop
inc
test
push
and
fs
mov
out
xchg
cmp
pop
mov
shrb
xor
add
xchg
push
arpl
shr
iret
jmp
mov
push
les
push
icebp
or
mov
fisubrs
loop
push
pop
xchg
data16
popf
inc
lret
stc
jbe
mov
mov
ds
mov
lret
pop
xchg
cmp
mov
mov
adc
fs
into
les
inc
pop
jne
mov
and
xchg
adc
mov
sbb
mov
test
mov
mov
lods
shrb
sti
rcr
dec
stos
mov
inc
adc
mov
arpl
rcl
push
inc
mov
cwtl
fst
clc
out
inc
and
sub
inc
test
lret
sub
mov
inc
lea
arpl
sahf
xor
dec
push
cmp
into
jnp
cltd
jle
xor
or
cmp
adc
mov
xor
and
pop
gs
das
push
faddl
repnz
mov
sub
roll
adc
shlb
pop
mov
ud1
pop
or
aas
cmp
mov
daa
sbb
inc
adc
inc
mov
lea
daa
add
adc
pop
or
addr16
add
add
fisubl
push
cmpsl
inc
mov
nop
adcb
mov
fdivs
mov
dec
pop
add
lds
jbe
xchg
push
stos
xchg
into
xchg
mov
adc
xchg
lods
mov
rcr
movsl
ljmp
sub
mov
ret
fs
ss
sbb
mov
pushf
sub
divb
push
add
mov
ljmp
push
bound
mov
xor
popl
push
jo
xchg
jae
xorb
dec
mov
popa
sbb
or
xor
into
fiadds
add
add
dec
dec
scas
sbb
push
loop
mov
lods
and
insb
xchg
loopne
sahf
out
aad
cli
es
gs
add
pop
outsl
mov
xchg
and
dec
out
faddl
inc
sbb
xchg
movb
negb
repnz
daa
jb
ljmp
mov
jbe
loopne
add
mov
les
xchg
jg
ds
xor
xchg
mov
adc
pop
movsb
sbb
pusha
mov
mov
add
hlt
and
fs
mov
dec
jo
xor
cmp
push
pop
dec
lock
mov
mov
mov
in
inc
pop
daa
sub
push
shlb
mov
mov
lret
sar
mov
loope
push
scas
push
add
cs
sahf
dec
pop
dec
loopne
popa
pop
mov
push
mov
insb
push
scas
cli
mov
cs
xchg
enter
pop
xchg
dec
ja
rclb
xchg
and
decb
xchg
dec
inc
pop
xor
mov
mov
sbb
xchg
test
jg
aam
lcall
jb
mov
je
mov
sbb
adc
roll
hlt
sbb
into
xor
sbb
mov
popa
lret
shrb
ret
gs
lahf
out
push
outsl
mov
or
lods
xlat
stos
rcl
rclb
adc
mov
fildl
cli
pop
add
outsb
push
pop
push
sbb
push
outsl
mov
cmp
xor
ljmp
arpl
adcb
stos
mov
pop
loope
scas
pop
xchg
out
mov
scas
cmp
or
cli
lret
out
fstpt
fcmovbe
fst
loope
mov
aad
inc
neg
fisttpl
push
sub
ss
mov
popf
aad
mov
in
flds
jecxz
testb
mov
out
into
mov
mov
sbb
sub
push
mov
xchg
in
add
lcall
xchg
add
mov
add
pusha
rol
and
mov
sar
jp
ret
out
popa
das
and
rcr
das
lcall
ds
cwtl
mov
mov
repnz
popa
negl
mov
inc
mov
or
jne
call
js
cmp
fidivrl
popa
js
xchg
push
pop
pop
pop
sbb
pushf
aas
data16
jo
popa
add
sbb
sbb
rol
dec
push
mov
data16
adc
push
clc
lret
mov
mov
lret
jno
jns
mov
sub
mov
mov
testl
xor
mov
xlat
jbe
mov
ljmp
push
mov
outsl
shlb
mov
imul
push
add
push
push
cli
sub
fcmovu
push
daa
jg
mov
ret
mov
jnp
inc
inc
mov
icebp
xchg
lds
dec
js
movsl
popa
pop
fwait
and
mov
push
sub
scas
sar
aad
push
mov
mov
insb
mulb
outsl
cmp
add
sbb
fs
enter
in
cmpsl
jno
enter
jo
std
mov
fldenv
scas
fsubrl
in
out
out
inc
push
or
and
dec
out
jmp
mov
mov
sahf
scas
add
and
lret
xchg
in
lock
mov
dec
add
sahf
repnz
inc
cmp
add
addb
lret
sub
rcrb
les
xchg
in
in
add
jo
into
fidivrs
or
jo
mov
data16
aaa
mov
sub
stos
xlat
out
mov
mov
ja
inc
lcall
cwtl
jnp
mov
rcl
insl
push
mov
pop
and
cmc
or
jae
fxch
mov
ret
adc
shlb
push
test
or
push
mov
pop
mov
pop
in
xor
inc
mov
inc
sub
das
jg
add
mov
das
mov
shrl
push
lds
cwtl
clc
divb
pushf
xor
mov
cmp
xor
and
xchg
mov
mov
cmpsb
push
pop
xlat
dec
push
testb
cmp
add
sbb
mov
mov
sub
lcall
outsl
int
push
fcoms
inc
adc
jnp
jae
mov
stos
inc
mov
or
popl
shll
ss
pop
idivb
jp
enter
lahf
xorb
mov
mov
push
fcomps
xor
mov
cmp
push
mov
mov
mov
idivl
dec
push
addr16
push
into
and
rcl
out
nop
or
push
xor
mov
or
popf
rclb
mov
idivb
mov
lods
cs
jae
into
imul
xchg
int3
movsl
xor
sbb
roll
xor
sub
sbb
lret
mov
add
mov
lret
iret
jg
xlat
add
inc
xor
inc
mov
mov
popa
ds
and
xor
xor
rcrl
loope
shl
and
xchg
jno
loopne
push
pop
jp
mov
cmp
pop
cmp
mov
xlat
xor
scas
out
mov
xor
in
add
je
pop
les
int3
mov
fmuls
push
and
les
popa
js
loope
inc
push
popa
mov
or
cmpsl
enter
mov
sbb
lahf
mov
in
inc
push
dec
push
clc
rcl
cmp
inc
mov
jle
ljmp
dec
jg
push
cmpps
mov
mov
cmpl
insb
push
and
inc
cmp
or
lods
mov
jae
lcall
xchg
pop
jg
xor
lock
jg
adc
data16
jge
loop
inc
ret
sub
xchg
mov
insb
fdivrs
int
mov
or
mov
adc
or
fisttps
mov
cli
fs
jae
adc
adc
imul
inc
cmpsl
sub
cld
pcmpeqd
mov
mov
mov
cmp
outsl
inc
jnp
into
mov
adc
adcl
scas
inc
add
ja
xchg
loopne
sti
out
arpl
or
adc
pusha
or
inc
add
dec
pop
sarb
and
jl
int3
cmc
sahf
iret
outsb
or
leave
push
jp
ret
scas
inc
int3
sub
jnp
sub
dec
sub
clc
pop
cmp
or
dec
and
push
cli
push
pop
push
xchg
scas
aam
push
cmp
adc
stos
es
jle
pop
sub
test
dec
xchg
pop
sahf
xchg
push
xor
pop
sub
mov
shrl
daa
mov
sub
clc
mov
aam
jae
inc
add
daa
incl
xchg
cmp
cmp
mov
mov
mov
into
aam
mov
xor
xchg
add
and
sbbl
imul
mov
jbe
ss
aas
push
xorb
xchg
int
lods
into
pushf
loop
insb
jns
xchg
add
and
insl
push
adc
icebp
add
sarb
pop
mov
push
mov
lods
mov
xor
mov
pop
add
arpl
xchg
fsts
mov
or
pop
push
lock
adc
xchg
xlat
test
dec
pushf
sti
vmread
mov
leave
push
mov
es
adc
push
mov
das
cmp
jnp
daa
cmpsl
mov
stos
xchg
mov
rorb
lcall
add
jno
jbe
pop
jae
stos
sarb
mov
test
mov
jg
adc
cltd
adc
xor
divl
xchg
sbb
and
inc
add
or
mov
sbb
or
xchg
sti
adc
aam
bound
outsb
pop
pop
and
mov
ret
data16
aas
add
lods
sbb
outsl
das
pop
test
loope
mov
inc
push
or
cmp
aas
push
mov
jl
mov
rorb
push
movsl
fnstenv
inc
fnstenv
sub
shrb
push
nop
jb
sub
insl
jo
sbb
add
mov
sbb
and
addr16
pop
and
cmpl
pop
adc
push
jo
stc
mov
mov
mov
or
pusha
data16
or
jbe
sub
fdivrs
add
xor
xchg
lahf
and
xorl
shrl
cltd
xor
inc
push
test
stos
push
fwait
xorb
inc
xchg
and
mov
jnp
jp
stos
ret
or
inc
xchg
notl
ret
loopne
push
fucomip
lret
test
loop
out
fwait
mov
andl
cmp
sahf
subb
sar
cld
cwtl
mov
mov
div
fldl
enter
flds
cmp
pop
hlt
bound
ss
dec
test
shll
inc
pop
cmpsb
repnz
jl
cmp
xor
shll
sub
mov
xor
popa
push
clc
dec
sub
bound
sub
sub
bound
inc
shll
mov
fcoml
and
inc
cs
les
imul
daa
outsl
std
or
cmp
imulb
pop
sub
xorb
fsubrl
or
fdivl
or
jno
cmpsl
add
mov
js
ret
pop
add
dec
dec
jbe
cltd
mov
add
mov
add
loope
shlb
mov
insb
add
lahf
cmp
stos
rcl
inc
icebp
mov
sub
movl
jnp
aam
mov
ficompl
mov
inc
cmpsl
dec
dec
int
sub
adc
cmp
or
or
adcb
xchg
das
in
rcr
daa
int
ljmp
test
xchg
xchg
and
sub
xchg
rcll
adc
mov
les
pop
aad
mov
jnp
daa
jae
aam
add
scas
jae
add
xchg
cwtl
cmpsl
addr16
xor
or
ja
addr16
enter
push
sbb
mov
push
cmpsl
mov
inc
scas
lahf
popw
test
mov
les
cwtl
xor
in
xchg
mov
adc
dec
inc
loope
inc
jg
mov
push
movsl
shll
jle
ja
mov
leave
cli
mov
inc
xor
iret
adc
add
jo
insl
outsl
lahf
mov
iret
mov
out
dec
fistpll
push
loopne
rcl
xlat
or
xlat
pop
cs
add
xchg
test
shll
arpl
mov
sbb
fadds
cmp
mov
rolb
das
dec
adc
mov
mov
rcl
adc
adc
mov
sarl
jmp
nop
push
into
xchg
xchg
mov
inc
cmpsw
mov
cmp
jecxz
data16
adc
adc
in
lds
lods
inc
sbb
mov
mov
mov
inc
adc
mov
ss
das
rorl
aam
mov
adc
jl
lock
mov
into
pop
add
ficompl
xchg
insb
jge
jl
int
adc
sarl
xorps
test
shlb
add
jo
mov
jmp
ljmp
inc
je
das
push
mov
push
into
jl
push
push
sub
mov
or
add
popa
addr16
mov
jle
xchg
mov
fs
pop
pop
mov
cmp
push
cmpsb
pop
test
push
enter
ja
jne
push
test
dec
aaa
add
xchg
add
pop
xchg
dec
adc
imull
lock
dec
inc
inc
pop
dec
dec
push
pop
int
cmc
push
push
dec
dec
push
inc
outsb
push
test
dec
aas
sub
aas
arpl
sbb
push
xchg
test
adc
popa
inc
arpl
in
mov
in
cmp
movsb
daa
or
ret
and
mov
fwait
xchg
cmp
daa
fdivl
das
out
adc
out
sub
or
mov
xchg
xchg
adc
iret
mov
aaa
ss
adc
rcll
cmp
lret
in
cmpsl
mov
fisttpl
dec
mull
enter
push
imul
add
push
int
xchg
add
icebp
adc
mov
add
lret
arpl
aas
add
xchg
out
leave
sub
push
sub
icebp
into
insl
scas
lods
bnd
xor
dec
mov
push
pop
pop
lcall
repz
cmpsl
nop
mov
fs
iret
leave
push
dec
cmp
sbb
repz
add
lock
fmull
shl
jns
out
lods
mov
repz
jl
insb
pusha
push
sbb
mov
and
push
js
out
and
push
push
inc
push
xor
inc
aam
add
pop
jb
or
js
ss
push
arpl
ja
es
pop
mov
sbb
cmpsl
push
js
in
js
jae
push
ja
pop
pusha
cwtl
out
pop
jbe
inc
push
add
outsb
fucomi
push
scas
aaa
add
or
add
addb
out
lcall
pop
or
xor
or
xor
into
cmp
cmp
das
dec
pop
in
mov
das
cmp
mov
ljmp
jmp
dec
dec
and
xchg
ds
pusha
cmpsl
and
jo
sbb
fiadds
mov
add
push
sub
sbb
xchg
mov
idiv
sbb
loopne
mov
jno
jbe
add
mov
scas
jecxz
out
scas
push
and
movb
rolb
cmp
pop
jae
pop
jmp
sahf
aaa
fsubrs
sbb
push
and
nop
sahf
and
cs
push
add
mov
jae
push
pop
das
out
xchg
jo
leave
add
push
mov
xchg
xchg
or
mov
dec
outsb
jg
inc
loopne
out
pushf
fdivrl
pop
sbb
xchg
xchg
cmp
rclb
cmp
jns
push
cmp
or
cmp
add
unpcklps
dec
dec
dec
outsb
ljmp
je
enter
dec
or
in
ss
pop
mov
iret
leave
leave
in
or
pop
sbb
push
pushf
pushf
pushf
cmp
jl
fmul
leave
add
insb
sub
leave
leave
leave
mov
leave
leave
leave
clc
add
leave
leave
leave
leave
mov
leave
leave
leave
les
bound
leave
leave
leave
leave
movsb
add
leave
in
pop
sbb
leave
leave
leave
xchg
inc
jp
leave
leave
leave
leave
aam
push
leave
leave
leave
leave
mov
mov
leave
leave
leave
hlt
add
pushf
pushf
cmp
xor
pushf
pushf
pushf
pushf
int3
pcmpgtd
pushf
pushf
pushf
pushf
lods
push
xchg
pushf
pushf
pushf
in
or
pushf
pushf
pushf
pushf
pushf
arpl
cmp
aas
outsb
cs
jbe
mov
dec
in
mov
cld
call
adc
pushl
cmp
mov
mov
add
xchg
or
xchg
or
cmp
xchg
xchg
xchg
imul
xchg
xchg
mov
push
es
cmp
jne
inc
dec
dec
xor
in
and
cs
inc
ljmp
lcall
fisubrl
mov
or
push
inc
iret
adc
ret
nop
xchg
xchg
or
mov
jb
arpl
and
jb
cmp
out
jb
daa
daa
sbb
jb
imul
daa
daa
daa
mov
mov
jb
daa
notb
enter
ja
into
pushf
pushf
pushf
pop
addr16
scas
pop
test
pop
enter
pop
sahf
jg
test
dec
outsb
mov
das
mov
dec
xor
dec
inc
and
leave
inc
mov
dec
xchg
rcll
and
leave
xor
and
leave
inc
cltd
fsts
xchg
dec
mov
xor
movsl
in
xchg
dec
and
aad
adc
inc
mov
xchg
dec
and
int
adc
inc
xor
popf
fnsave
xchg
dec
and
std
leave
inc
xor
mov
jecxz
adc
inc
xor
mov
dec
and
and
xor
and
fstpt
sti
dec
and
leave
cmpsl
out
leave
inc
xor
and
xor
and
leave
lahf
fistpll
incl
cmp
or
push
adc
rcll
push
add
int
iret
inc
pop
inc
jg
push
pop
cmpsb
repnz
add
and
dec
jns
push
or
push
pushf
int3
sub
add
and
sbbl
enter
add
xor
enter
xor
or
cmp
mov
clts
pop
aas
out
lret
incl
call
pushl
push
ror
roll
icebp
out
sub
clc
mov
in
push
call
lret
mov
into
popf
fucomp
out
out
pop
dec
out
pop
imul
loop
jmp
jecxz
ja,pt
fldt
add
push
cld
cld
pop
pop
in
jmp
mov
out
jecxz
add
rolb
add
out
mov
loope
pop
fbstp
mov
lds
pop
iret
fisttps
cmp
mov
cld
ret
sti
aad
inc
loope
loopne
data16
inc
popa
jb
adc
das
stos
dec
inc
pop
push
xor
dec
dec
inc
push
inc
inc
sub
dec
dec
movsl
das
sub
mov
inc
dec
or
lahf
cwtl
insb
outsl
outsl
imul
pop
dec
jl
stos
cld
pop
xchg
icebp
nop
mov
sub
dec
sub
rorb
xor
cltd
aam
adc
sbb
mov
push
adc
add
add
sbb
cmp
aam
adc
push
cli
popa
mov
mov
pop
iret
repnz
ret
jl
push
lret
leave
iret
xchg
jo
call
pop
loop
insb
adc
sbb
mulb
mov
insb
je
sbb
addr16
pop
imul
sbb
or
inc
cwtl
out
and
sbb
jo
mov
ljmp
ret
jle
mov
xor
and
fisttpll
or
push
cmp
push
mov
dec
cld
or
mov
rcl
sbb
loope
mov
xor
adc
mov
mov
outsb
jne
mov
in
scas
xor
stos
mov
lea
xor
sbb
mov
or
imul
loopne
nop
pop
xor
cmp
loope
jne
loopne
jno
mov
ret
inc
scas
inc
adc
push
or
lods
bound
inc
xor
call
jae
bound
in
popf
xor
rorl
xchg
xor
xchg
xor
add
push
mov
test
movsl
cmp
push
or
arpl
cltd
or
mov
pop
push
ljmp
daa
inc
call
repnz
push
daa
xor
push
in
sub
loop
jo
aam
gs
test
jp
sub
xor
cmp
xchg
sub
mov
dec
mov
push
inc
sub
mov
jnp
mov
or
xchg
or
pop
mov
and
sar
inc
addb
sahf
xor
fsubs
dec
rorb
push
aad
cmpsl
test
mov
mov
or
call
shr
push
ret
push
movb
rcl
js
mov
mov
pusha
mov
add
lods
rclb
popf
movsl
clc
xor
out
mov
ficompl
mov
xor
cmpsl
mov
xbegin
fidivrl
add
cmpsl
pushf
pop
movsb
ss
mov
movsb
push
ret
mov
mov
push
push
sbb
divl
pop
rep
test
or
sbb
adc
xchg
dec
into
mov
frstor
mov
inc
stos
push
lods
or
int3
lock
and
insb
adc
shlb
dec
in
cli
int3
out
call
mov
bound
adc
jno
inc
aas
or
ds
lock
out
mov
shl
arpl
jl
and
pop
or
and
cmp
insb
imul
xchg
or
sub
ljmp
imulb
fistps
pop
cmp
cmpl
sti
add
pushf
daa
add
adc
add
push
sbb
dec
mov
inc
sub
dec
fists
ja
lods
push
loopne
push
cmpsl
push
mov
sahf
sub
inc
adc
sub
jle
push
test
inc
cmp
sahf
jecxz
faddl
inc
stos
xor
gs
and
fiadds
dec
mov
into
lret
mov
ss
mov
xchg
mov
fninit
mov
mov
mov
enter
xchg
and
jae
pop
ss
adc
add
enter
and
idiv
fnstsw
jmp
push
testb
in
ficompl
mov
inc
inc
pop
cmp
data16
inc
jg
ret
out
rcl
xlat
sarl
int
pop
xlat
repz
adc
and
pop
xchg
push
inc
lock
dec
ss
push
dec
push
outsl
into
stos
sub
lock
mov
inc
xlat
xchg
cmp
aas
mov
add
loopne
or
sub
sub
rorb
rcrl
inc
lods
push
mov
aam
jno
icebp
push
in
mov
pop
loopnew
jl
enter
add
or
inc
cmp
adc
push
aaa
push
cmp
sahf
dec
ds
es
in
inc
sbbb
daa
adc
fiadds
cmp
add
pop
sub
mov
addl
ds
and
test
repnz
enter
js
leave
leave
jae
in
insb
fs
jae
iret
pop
push
dec
cmp
iret
leave
repz
ds
repz
cmp
movsb
pop
repnz
es
pop
push
out
ds
repz
and
fdivrl
push
les
jns
dec
sahf
ja
mov
pop
es
inc
scas
gs
mov
dec
sbb
cmp
mov
outsl
push
enter
int3
cmc
jae
mov
add
or
xor
push
int
add
and
adcb
sub
outsl
pusha
sbb
or
decl
cmp
dec
imul
idivb
fdivs
fwait
inc
push
scas
jne
pop
ret
mov
xor
jnp
dec
and
ret
inc
cld
and
push
aam
mov
bswap
js
push
fcoms
in
mov
lods
lcall
mov
or
mov
shr
or
jle
push
fisttpll
jo
push
fbld
xor
add
scas
lret
or
enter
xchg
xorl
and
add
xor
push
adc
sbb
xchg
sub
push
movntps
push
adc
loopne
inc
daa
shr
push
inc
sub
xchg
pushf
bound
or
sarl
lods
xchg
dec
dec
arpl
mov
subl
adc
mov
out
push
inc
iret
ffreep
jle
sbb
int
adc
pop
mov
es
in
push
or
and
lret
pushf
loop
push
stc
push
shr
icebp
gs
or
jno
cmp
iret
out
cwtl
pop
lcall
and
add
push
mov
sbb
loope
add
dec
out
loop
js
outsl
mov
sbb
in
push
rcl
mov
mov
sub
imul
lds
sub
xor
fidivrl
out
adc
xchg
andb
mov
adc
cmpsb
int
notl
push
dec
daa
out
fcmovbe
stos
xlat
or
inc
cmp
mov
dec
push
lock
scas
mov
dec
add
sbb
shlb
mov
mov
ficoml
push
mov
push
cwtd
call
cmpsl
out
stos
xchg
mov
push
mov
mov
aaa
dec
sbb
aas
dec
dec
loopne
mov
sub
mov
lahf
loop
mov
add
pop
mov
push
aas
bound
pop
mull
mov
push
lret
inc
or
xor
clc
and
inc
xchg
sarl
ret
sbb
subl
lds
aam
into
jae
xlat
sub
sbb
inc
inc
orl
ret
sbb
scas
rorl
mov
imul
fwait
out
insl
stos
lret
or
inc
divl
adc
jae
mov
xchg
mov
insb
int
mov
pop
push
cmp
pop
roll
jae
lret
push
das
lods
mov
cmp
add
xor
scas
push
xchg
sub
adc
cmp
dec
sbb
loopne
push
shl
or
push
mov
sub
dec
jbe
je
mov
sar
lret
sub
adc
inc
sub
scas
sub
ss
adc
dec
inc
sub
mov
push
mov
out
push
push
and
adc
xor
out
add
dec
clc
lock
out
iret
in
in
loopne
aam
add
in
enter
bound
push
jns
outsb
xor
insl
and
outsb
mov
jb
fs
cmpsl
test
cs
jo
cltd
xchg
nop
adc
and
outsl
xlat
mov
pop
popa
insl
je
mov
add
cmp
xchg
jp
dec
or
enter
data16
mov
push
mov
jae
popa
sbb
int3
cmp
lret
sub
push
das
pop
data16
adc
subb
into
sbb
mov
sbb
fcmovnbe
outsb
jne
pop
jg
outsl
cwtl
and
pop
lea
fcompl
sbb
mov
dec
or
dec
daa
pop
lea
xor
push
mov
push
daa
xlat
insl
mov
or
pop
pop
pop
xchg
cmpb
pop
mov
push
pushf
jo
outsl
outsl
adc
cmp
jo
push
dec
pop
into
sub
add
fstpl
mov
imul
les
push
lods
mov
cltd
loopne
outsl
mov
rcrb
mov
inc
add
and
insb
leave
clc
mov
cmpsl
mov
or
xor
out
imul
pusha
je
jnp
shll
pusha
and
mov
sub
outsb
pop
insb
cmp
mov
cld
sub
nop
xorb
fwait
or
in
mov
and
jne
or
pop
out
int3
cmp
popa
add
push
je
pop
mov
outsl
add
push
cmpsb
add
sbb
push
mov
movsb
imul
jg
aam
and
push
pop
pusha
and
jbe
push
roll
outsl
arpl
cmp
rol
movsb
jns
gs
or
loop
ss
outsb
loope
and
lds
imul
add
xchg
xchg
imul
sbb
mov
jne
popa
fisubrl
pop
popa
or
pop
insb
push
outsb
cmp
push
movsl
pop
aaa
js
jne
jne
pop
push
pop
inc
cmp
ds
xor
lods
jge
ficomps
or
jo
imul
jae
das
dec
jns
popa
pop
dec
sub
arpl
imul
insb
stc
into
jno
ret
adc
add
sub
loope
inc
outsb
jbe
push
mov
push
push
scas
push
bound
xchg
jae
in
push
xor
push
outsl
jae
outsb
jns
daa
sbb
push
mov
dec
add
push
bound
popa
add
je
data16
jae
inc
data16
data16
sub
sahf
sbb
inc
popa
push
dec
push
push
xchg
addr16
ss
syscall
or
shlb
sbb
fdiv
pop
xchg
add
sub
mov
stos
js
ficompl
mov
pop
fsubp
lods
js
pop
pop
cli
lfs
insl
cmp
gs
pop
jnp
insl
xchg
push
fcomi
ss
pop
js
js
adc
test
lods
lds
cmpsl
scas
mov
xor
jae
in
imul
jbe
inc
addr16
push
fistpl
pop
or
mov
loopne
aas
pop
add
xchg
dec
bound
ja
xor
ja
mulb
xchg
loopne
cmp
jno
hlt
insb
cmpsl
xchg
outsl
popa
jp
paddusb
je
dec
fistpl
adc
jnp
call
jae
cmpsl
inc
in
je
jbe
xchg
jnp
inc
sub
out
popa
addb
out
outsl
aaa
test
or
scas
cmpsl
add
loopne
jg
popa
xchg
push
fidivl
mov
mov
aad
dec
outsl
mov
cmp
push
or
adc
pop
bound
or
mulb
in
loopne
inc
pop
pop
outsl
pop
jmp
or
dec
and
sub
lods
push
je
cmp
and
xor
add
inc
add
or
adc
jb
sub
scas
pop
xchg
pop
dec
ja
insb
xor
outsb
add
push
xchg
cmp
pop
in
mov
mov
sbb
call
addr16
xchg
xchg
shlb
dec
aas
jbe
push
nop
rcrl
jo
cmpsb
sbb
sahf
xchg
fldt
push
mov
pushw
fildll
push
xor
xor
xor
into
ja
or
fs
and
jg,pn
push
fldenv
jbe
leave
das
insb
jae
test
push
xchg
out
insl
dec
scas
xchg
fs
faddl
movsb
fisttps
adc
fbstp
dec
dec
les
and
push
outsl
inc
outsl
lea
rorb
ss
xchg
je
xchg
ss
adc
iret
lcall
imul
idiv
inc
xchg
lock
insl
idivl
xchg
pop
das
mov
pop
push
xor
xchg
ret
out
xor
sbb
add
mov
or
adc
xlat
pop
cmpsl
pusha
insb
xorb
adc
mov
mov
mov
pop
jne
jne
jne
add
sub
push
adc
gs
jns
sbb
pop
pop
sub
addr16
leave
mov
test
insl
pop
jg
imul
das
test
pop
icebp
cmp
dec
bound
xor
adc
mov
and
pop
insb
add
loop
xor
insl
mov
sbb
add
jo
pop
maskmovq
es
js
arpl
push
insl
xchg
ja
mov
js
gs
outsb
cmp
push
pop
insb
xchg
outsb
in
insb
push
sahf
push
sub
loop
icebp
shr
lahf
push
lgs
fs
mov
dec
out
or
jno
add
mov
xchg
cmp
lods
js
mov
push
mov
addr16
sbb
in
and
rcll
pop
adc
adc
lahf
aam
adc
pusha
stos
in
pop
sbb
mov
adc
pop
out
js
pop
cltd
aaa
push
push
iret
jae
cmpsb
add
push
fidivrs
add
in
sub
mov
xchg
fcoml
jbe
push
jmp
psubb
mov
out
jbe
sbb
pushf
sbb
xchg
xor
pop
pop
xor
jbe
push
mov
cmp
push
push
push
push
add
push
pusha
push
das
dec
dec
pop
mov
aas
pop
pop
lods
mov
or
add
aas
jb
xor
mov
pop
pop
and
aas
pusha
sub
push
aad
add
fldt
insb
dec
sub
das
mov
rorb
pop
sub
sub
xchg
fiaddl
xor
xchg
adcb
mov
add
gs
stos
or
add
push
mov
ss
das
xlat
aas
roll
push
dec
pop
push
lods
sarl
push
or
dec
adc
dec
or
push
iret
outsb
fs
dec
add
mov
push
sub
imul
xchg
xorb
outsl
xlat
das
mov
adc
mov
push
aas
sub
sbb
rorb
sbb
add
xchg
dec
push
das
add
sub
and
leave
mov
push
pop
push
lods
dec
rcrb
pusha
insl
xor
push
or
aas
pop
mov
mov
aas
sub
dec
sbb
mov
mov
xor
add
jg
xchg
xorb
fiaddl
push
and
push
stos
cmp
sub
aas
mov
add
lods
insl
mov
iret
inc
aas
xchg
push
mov
or
stos
out
pusha
pop
sti
mov
mov
lret
sbb
lds
loopne
jg
test
dec
sbb
loope
outsl
inc
or
xor
pop
push
lcall
push
lahf
adc
or
aas
adc
add
sub
mov
aas
adc
mov
jg
cmp
pusha
fistpll
adc
lea
lds
push
sbb
or
in
ds
push
or
dec
into
sub
dec
aas
lcall
push
cmp
lods
fmuls
mov
push
xor
sbb
mov
inc
out
push
lret
inc
or
jg
jo
shrl
push
xor
cmp
pop
mov
adc
mov
aas
mov
addl
jo
cmpsb
mov
pop
aas
inc
dec
adc
arpl
pop
or
mulps
mov
mov
push
ja
and
add
outsl
and
pop
xor
das
mov
jl
add
adc
add
imul
dec
cmp
das
mov
push
push
bound
icebp
fists
or
mov
mov
inc
add
pop
out
xchg
mov
push
inc
out
xor
cltd
lahf
repz
inc
inc
bound
lahf
aas
lea
test
add
aas
js
bound
push
inc
lahf
aas
sbb
pop
loopne
push
xchg
xor
aas
push
cs
test
adc
mov
roll
insb
mov
dec
mov
add
lock
insl
bound
jae
mov
mov
sahf
out
or
lahf
imulb
insl
adc
adc
mov
mov
mov
pop
das
sub
and
sbbl
inc
add
jbe
push
jne
add
iret
bound
aas
mov
mov
popf
out
insl
popa
mov
dec
aas
lcall
mov
push
cmpsb
dec
mov
dec
bound
jge
inc
insb
fisttpl
and
dec
out
push
jg
pcmpeqd
pop
jge
cmpsl
aas
inc
movsl
pusha
sub
cmpb
pop
arpl
andb
inc
inc
dec
sub
sbbb
cs
orb
pop
adc
fucomp
jg
sub
aas
scas
mov
das
loopne
out
faddl
fdivrs
repz
ror
enter
iret
repz
pop
sahf
out
sahf
test
jns
out
insb
push
jns
out
push
dec
inc
cmp
repz
and
or
sahf
out
ds
and
call
loope
enter
inc
adc
inc
pop
pop
adc
adc
or
jns
and
or
jl
ja
or
adc
and
iret
repz
mov
mov
push
sbb
sbb
and
mov
sbb
js
jns
jp
out
jp
cld
or
dec
xor
xchg
cmp
dec
push
mov
and
push
mov
push
add
add
mov
fs
outsb
cmp
repz
pop
sbb
iret
repz
dec
adc
repz
cmp
xor
sub
cmp
repz
adc
repz
adc
or
iret
mov
into
or
or
sahf
out
lcall
iret
repz
outsb
loopne
push
sbb
push
cmp
repz
pop
shlb
jmp
iret
repz
mov
jno
xlat
outsb
fiaddl
ljmp
cld
add
push
iret
repz
and
ds
push
cmp
repz
scas
mov
ror
repz
repz
fldcw
xor
cmp
repz
jbe
stos
ret
iret
repz
idiv
adc
sahf
out
dec
data16
lahf
out
sahf
lahf
mov
jns
ja
push
ds
pop
bound
xchg
scas
ret
cmp
sarl
push
cmp
cmp
jecxz
fcomps
add
pop
aas
and
lock
adc
pop
cli
ds
jbe
add
inc
jnp
pop
add
add
and
mov
pop
or
mov
inc
and
push
push
push
enter
adc
xor
pop
push
bound
sub
movb
cmp
and
push
lods
push
ds
inc
call
popf
xorb
xor
mov
add
sub
jb
and
pop
mov
mov
mov
popa
pop
cmpsl
push
pushf
xorb
inc
adc
mov
sub
xchg
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
adcl
cmp
add
idivl
pop
push
adc
xor
fstpl
nop
and
leave
mov
cmp
add
xor
imul
jbe
dec
dec
sahf
dec
push
push
mov
push
jns
jnp
dec
sbb
inc
dec
adc
iret
rcr
es
inc
dec
sahf
cmpsb
jbe
sbb
pop
ss
adc
mov
jae
jb
outsb
adc
and
jae
jnp
push
fisubrl
inc
jae
adc
outsb
in
push
dec
inc
cmp
inc
add
insl
ds
fwait
or
and
pop
push
push
les
inc
adc
dec
ss
push
mov
lock
pop
xchg
sbb
imul
outsb
cli
push
xchg
fwait
mov
xchg
pop
mov
mov
loope
push
flds
aam
repz
mov
call
mov
pop
and
decl
aas
add
pushl
lret
sub
pushl
sar
add
xchg
add
enter
std
add
call
decl
jmp
inc
or
stc
das
push
fmull
daa
pushl
cli
das
lcall
cmp
add
jmp
lods
decb
mov
stc
fwait
incl
idiv
sub
ds
stc
fldl
lret
xor
movsl
jmp
sbb
add
addl
add
std
add
inc
add
cmc
push
mov
decl
or
mov
xchg
push
mov
adc
jb
xor
paddsb
pushl
hlt
push
std
adc
decb
pop
dec
es
pop
mov
incl
add
in
sub
xor
lds
sbb
mov
add
das
fdivr
add
adc
cmp
into
mov
sahf
mov
adc
cmp
or
testb
repnz
sbb
xchg
ficoms
stos
or
lock
mov
insb
hlt
add
pop
or
add
cld
data16
aad
sub
icebp
fs
out
repnz
add
icebp
scas
jne
ljmp
xlat
xchg
mov
push
shlb
bnd
mov
pushl
add
aam
mov
das
cltd
stos
or
cs
pop
hlt
add
sub
out
add
hlt
cmp
sbb
jbe
in
sub
or
xchg
sbb
lahf
jo
scas
incb
mov
ret
or
fs
insb
into
lcall
stos
ljmp
repnz
inc
out
add
sbb
add
adc
mov
pop
xchg
mov
add
ljmp
pusha
loope
add
das
add
jecxz
mov
and
adc
pop
jo
mov
or
loop
fisttpll
out
aaa
out
pop
lock
add
xchg
push
stc
js
cmp
xor
pop
or
call
sti
adc
js
ja
inc
pop
add
or
in
pop
in
pop
loopne
push
push
and
mov
add
mov
std
or
lcall
adc
out
pop
hlt
cmp
mov
jle
pause
add
sbb
mov
in
movsl
adc
or
pushf
add
mov
sub
xchg
call
cld
adc
lcall
dec
mov
sbb
jp
mov
call
xor
add
xor
jmp
push
fs
mov
xor
and
pop
repnz
call
mov
jbe
mov
cmp
add
add
lods
clc
icebp
out
call
push
hlt
mov
push
repz
lds
cmovle
xchg
add
ds
lret
call
cli
lcall
in
cs
add
push
pop
jo
fists
ss
outsl
mov
xchg
dec
adc
ljmp
jmp
lahf
xor
es
push
jmp
cmc
lcall
jle
popa
push
aam
in
hlt
decl
pop
decb
inc
add
negb
call
addb
fldcw
or
es
mov
add
dec
scas
mov
add
mov
adc
adc
clc
mov
mov
std
leave
jmp
cli
int3
push
in
data16
je
jge
pop
popa
mov
add
sahf
cmpsb
mov
popf
decl
int
loop
or
or
or
add
mov
into
adc
mov
cld
or
adc
push
add
mov
sti
push
push
lods
push
lods
jmp
cmc
push
inc
icebp
mov
das
pop
mov
std
fmulp
or
out
lock
std
push
mov
or
cmc
mov
jle
add
xor
pop
push
or
add
movl
call
cmp
sub
jg
insb
incl
into
int3
clc
or
push
loopne
ja
daa
repnz
xchg
add
add
addr16
inc
push
insb
nop
clts
and
cmp
cld
jle
sub
mov
jnp
sbb
lret
add
add
jns
xchg
adc
notb
imul
inc
stc
sub
pop
loope
es
add
jmp
hlt
add
push
push
out
data16
inc
adc
imull
repnz
addl
out
hlt
cld
ds
add
push
push
push
repnz
dec
or
insl
fwait
dec
icebp
sar
movsl
or
into
or
push
jno
mov
negl
and
dec
fdivrp
sub
add
ljmp
xor
push
push
mov
decb
pop
aas
sti
xchg
and
ss
push
shrl
in
cld
icebp
jp
loopne
mov
pop
das
shrb
jp
jmp
or
pop
aad
out
or
cmpsb
dec
sahf
fs
push
mov
fldt
not
out
add
outsb
add
lea
inc
sti
mov
add
and
mov
iret
and
xchg
or
sub
fdivrs
pop
dec
insb
std
push
xchg
push
test
adc
cmp
pusha
add
add
out
stos
dec
outsb
add
add
add
sti
or
mov
cmpsl
std
movsl
add
cs
add
jle
mov
xchg
scas
pop
jo
cmp
test
xchg
std
aaa
pop
cld
stc
inc
jo
stos
or
int
imul
or
push
shrb
pop
push
cmp
mov
loop
cmp
xchg
push
cmc
add
stos
add
dec
add
sbb
jo
in
mov
sar
ds
enter
lret
pop
pop
movsl
mov
cld
lcall
ljmp
xchg
cmpsb
xchg
scas
clc
add
test
cli
in
mov
aam
mulb
inc
pusha
addb
ficoms
rcll
add
mov
mov
xor
push
mov
or
filds
mov
movsb
add
mov
fs
add
add
add
repz
pop
lock
nop
add
roll
sahf
js
adc
out
sahf
mov
stc
movsl
add
add
pushl
add
ret
sahf
std
inc
add
mov
std
mov
add
xchg
pop
icebp
movsb
fdivr
pop
mov
push
pop
jno
mov
scas
add
scas
add
add
data16
jg
std
shlb
fidivl
inc
sbb
add
jbe
decb
std
adc
out
or
inc
ret
pop
addb
std
mov
hlt
outsb
add
add
cld
jbe
das
pop
cmc
add
lcall
sysret
inc
xchg
ficoml
pop
sti
sahf
icebp
cld
jbe
les
fstp
jbe
push
stc
push
dec
inc
pop
inc
es
or
or
int
push
xor
adc
xchg
push
dec
std
jp
je
gs
pop
add
sub
adc
ret
call
test
ja
negb
ds
cwtl
push
ss
cmpsb
xlat
cli
fwait
fiaddl
xchg
loop
inc
add
in
mov
inc
xor
xchg
nop
inc
testb
enter
out
adcb
lret
sub
mov
jp
mov
scas
std
pushf
testb
fdivl
in
push
pop
mov
pop
push
arpl
mov
aam
adc
adc
inc
xchg
sbb
leave
push
and
jmp
adc
cli
xchg
mov
mov
xchg
inc
add
lcall
xchg
mov
dec
add
outsb
shr
push
ficomps
add
cmp
sub
ja
add
add
add
mov
sahf
out
add
push
js
fcomip
or
dec
sti
xchg
add
xor
incb
mov
fidivs
mov
xchg
dec
xchg
add
ljmp
fmulp
jp
jmp
lock
je
push
fisttps
mov
jae
push
clc
mov
clc
call
cli
cmp
jae
jns
sub
fldl
jae
cmp
jl
dec
cli
aas
add
loope
add
jecxz
cli
inc
adc
ljmp
cld
xor
in
std
push
cmc
jns
mov
push
sub
xor
cli
xor
lock
mov
push
cli
imul
push
adc
imul
clc
lcall
or
pushl
adc
add
add
ljmp
scas
loop,pn
mov
outsb
push
insl
js
add
out
mov
xchg
sar
fbstp
xchg
push
idivl
cmp
and
fcoms
adc
xchg
negl
mov
or
dec
ljmp
and
pop
add
stos
std
jp
add
dec
pop
push
add
or
std
lcall
nop
call
hlt
cmp
lret
xchg
out
std
cmp
pushl
repz
add
hlt
fs
ljmp
push
pop
fsub
add
sbb
lcall
in
jl
ljmp
cmp
add
add
stc
add
daa
jo
xchg
adc
cmpsb
fwait
push
lods
add
hlt
pop
add
icebp
inc
popf
fsubrl
shl
ja
outsl
fsubs
adcl
push
or
fwait
cli
fucomip
test
cli
add
sbb
jbe
dec
sub
call
sahf
cmp
and
scas
hlt
inc
jmp
out
jo
das
rclb
push
add
adc
pop
adc
inc
cld
fldz
mov
iret
pop
addb
out
cli
ljmp
push
loope
imul
push
add
add
std
aas
jmp
std
add
insb
clc
or
add
push
push
idiv
push
jbe
push
add
mov
add
iret
push
or
icebp
lcall
mov
xor
add
adc
add
or
cwtl
or
push
add
incl
in
push
test
or
xchg
out
sbb
out
mov
add
imull
insb
adc
sti
sar
bswap
push
or
jle
cli
fildl
outsl
stc
in
out
cs
mov
add
sub
mov
lds
mov
std
stc
xchg
add
sub
or
xchg
cmp
sti
std
mov
ret
mov
bnd
mov
mov
lods
lock
lcall
dec
push
es
out
incb
ljmp
addl
sbb
daa
cmc
je
adc
or
mov
insl
xchg
add
pop
pop
and
filds
out
jbe
fbstp
hlt
jp
out
inc
testb
and
aaa
lods
cli
add
ljmp
call
repz
xchg
sub
add
push
jbe
out
scas
fidivl
cmpsb
jbe
jae
push
and
adc
adc
pusha
xlat
cmp
or
push
pushf
adc
cmp
pop
push
popl
mov
enter
imul
fidivrl
or
inc
imull
in
or
repnz
push
push
push
or
add
or
es
xor
das
out
xchg
repnz
cmpsl
nop
lock
je
out
subl
ljmp
add
out
loopne
pop
inc
idiv
add
repnz
xchg
insl
lahf
gs
xor
decb
add
in
stos
es
mov
mov
add
decl
subb
jbe
or
jg
js
pop
outsb
call
add
ret
mov
ret
sub
xor
cmp
movb
add
or
adc
mov
xor
inc
add
or
fwait
inc
scas
inc
or
xor
adc
or
inc
clc
dec
push
incb
or
popa
add
or
push
imulb
clc
pushaw
sarl
pop
adc
xchg
mov
pop
ljmp
cli
mov
jle
cmp
mov
fbld
sbb
cmpsb
or
jge
inc
popf
add
push
mov
add
in
or
scas
scas
jb
std
shrb
fisubl
push
pusha
sti
iret
add
xchg
loop
xor
incb
jp
fmull
add
mov
xlat
call
sti
mov
adc
rcr
adc
or
sub
push
adc
xor
push
cld
js
stc
cmp
mov
mov
add
add
jle
aad
sbb
add
aaa
push
pop
pop
push
call
mov
mov
mov
jle
repnz
cli
adc
cld
out
push
fwait
xchg
mov
daa
add
and
roll
out
jp
shlb
dec
std
dec
add
add
push
jo
mov
lcall
push
mov
mov
aad
pop
push
mov
sti
vcvtsd2ss
add
xchg
xchg
push
pop
lds
jg
adc
inc
rolb
cs
andl
es
ret
add
mov
mov
or
add
ljmp
add
xchg
fdivl
fidivs
ss
in
sbb
adc
ds
mov
ja
arpl
ljmp
mov
mov
jb
cli
inc
cld
cli
xchg
push
mov
into
sbb
add
clc
fstpt
add
aaa
add
xchg
cmp
aad
aam
faddp
xchg
dec
ljmp
mov
adc
stc
xor
je
adc
jbe
add
pushl
mov
add
into
je
sbb
xchg
cmp
pop
cld
mov
addb
lcall
jmp
loop
mov
mov
push
add
sbb
sub
adc
jb,pt
clc
loopne
adc
xchg
mov
push
jne
outsb
mov
out
outsb
popl
mov
pusha
add
push
stc
xchg
adcb
bound
incb
jle
stc
popa
fsts
jle
sub
pushl
push
sbb
call
xchg
sub
add
cli
or
add
and
push
jns
call
sub
stos
mov
fiadds
mov
sar
cmp
push
add
loope
or
and
xchg
neg
pusha
xchg
mov
add
ss
cmpsb
in
nop
std
scas
xchg
or
mov
push
add
and
loopne
sbb
add
push
out
push
sub
test
inc
mov
sub
cmc
add
mov
cmpsb
dec
ret
mov
jge
sarb
sahf
add
mov
decl
pop
jmp
cmp
fidivrs
ret
data16
push
aad
mov
jmp
ds
inc
xchg
cmp
pop
jbe
sub
mov
add
sbb
decl
call
cs
push
cs
xchg
jae
call
std
jle
push
mov
testb
mov
mov
pop
pop
add
sbb
ds
cmc
incl
mov
lcall
stos
bound
imul
cmp
and
sub
lcall
or
lcall
not
ss
push
out
pushl
cld
mov
inc
or
xchg
pusha
xchg
push
pushl
in
push
fisubrs
jmp
jmp
fisubrs
repz
cmp
sub
mov
xor
add
add
les
scas
sbb
mov
jle
xor
inc
dec
xchg
mov
fisubs
or
add
pushl
out
lahf
add
mov
test
es
pop
adc
dec
movsb
sarb
jne
or
mov
push
into
outsb
sbb
add
xchg
loop
xlat
push
mov
rol
mov
jmp
xchg
es
ds
into
mov
push
xchg
cmpsb
inc
cmp
mov
jle
into
imul
es
ljmp
add
push
xchg
movhps
jbe
loop
or
outsb
or
sbb
xor
adc
push
push
push
cs
out
or
ret
repnz
xorw
sub
insb
rorb
pop
into
mov
xor
mov
test
aad
sub
mov
iret
cmp
cmp
xchg
add
stc
xchg
ss
mov
pop
pop
add
fnstsw
mov
cs
in
out
jns
jns
in
loop
sbb
sbb
inc
cld
sahf
jne
jnp
jmp
push
out
pop
xor
divl
add
adc
or
pop
rcrw
mov
repz
pop
icebp
lret
jo
add
scas
movsl
jmp
sti
push
decb
add
clc
xchg
add
push
push
hlt
adc
mov
sbb
or
add
pop
add
outsl
ja
aaa
jbe
inc
add
push
xchg
inc
xlat
add
add
lahf
data16
xchg
sub
inc
mov
fwait
int
and
add
jg
inc
add
mov
jnp
pop
pop
jg
inc
push
leave
inc
jnp
pushw
xchg
pushl
push
aas
cld
pop
clc
pmullw
int3
ficomps
movsb
pop
push
or
addr16
fs
pop
pop
loopne
mov
mov
push
stos
popf
mov
push
pop
push
adc
aad
inc
xchg
or
push
pop
pop
fcomps
mov
push
cmp
adc
imul
adc
mov
mov
or
gs
cs
add
pop
decb
iret
repz
lcall
pop
aaa
ja
iret
repz
sti
push
fcmovnu
fadd
add
andb
pop
xchg
xchg
xchg
pushf
clc
add
add
jae
fcompl
rolb
add
inc
sahf
xlat
mov
aas
mov
or
or
xchg
and
out
jns
sbb
cwtl
pusha
xor
sbb
push
pusha
pop
loopne
clc
sbb
cmp
lock
and
cmp
insl
cmp
addr16
push
sysret
jg
jae
pop
shll
push
xrelease
dec
fidivs
sbb
es
push
sarl
js
pop
push
repz
and
push
adc
push
add
pushw
push
or
push
pusha
ret
adc
sub
or
adc
dec
and
rorl
dec
and
and
addb
out
frstor
push
inc
dec
pop
outsl
jle
and
fcoms
loopne
int
faddl
xchg
pop
xchg
xchg
test
imul
fnsave
sarb
aas
dec
pop
outsl
jle
mov
push
out
push
out
call
out
ret
fbld
loopne
xchg
add
stos
add
loope
xchg
add
nop
loope
out
mov
clc
jecxz
icebp
mov
leave
mov
push
add
enter
sti
push
enter
mov
jecxz
jmp
rcrl
aad
rcl
pop
sub
dec
out
jecxz
mov
dec
out
dec
mov
rol
cld
sarl
std
fxch
sti
shll
ljmp
mov
dec
std
loop
cld
in
jmp
add
out
stc
ljmp
cld
in
sti
loope
dec
fiaddl
out
movsb
nop
incl
fwait
out
scas
fwait
out
mov
out
mov
add
ret
iret
shlb
mov
add
xor
out
lret
into
shll
je
std
sarl
adc
std
jmp
add
ljmp
add
mov
cmp
pusha
xor
aaa
cmp
add
pop
inc
outsl
test
or
and
outsl
dec
outsl
pop
adc
add
aaa
mov
pop
add
and
dec
outsl
push
dec
leave
popa
and
in
mov
mov
ret
cld
aad
add
into
mov
add
pop
mov
scas
loope
lea
mov
cwtl
mov
aam
dec
fcomps
mov
jl
mov
cmpsl
mov
mov
add
jne
out
mov
enter
jb
movsb
add
push
rol
aaa
mov
and
jg
cld
aam
aaa
dec
and
lcall
add
ret
ss
jne
aaa
inc
nop
popa
pop
imul
cmovle
lds
cmpsl
adc
sahf
jge
cld
in
fadds
adc
iret
lock
add
repnz
add
mov
jmp
repz
repnz
repnz
sbb
xor
add
add
int
aaa
inc
add
pusha
xor
pusha
inc
adc
jne
or
xorl
inc
adc
in
xchg
sti
enter
and
ljmp
mov
push
add
pop
idiv
jecxz
add
sub
dec
icebp
mov
add
mov
add
in
enter
int3
ret
pop
push
xorb
lds
adc
in
nop
clc
fadds
jne
ss
xchg
rcr
and
dec
sub
adc
outsl
inc
adc
jecxz
cld
fmul
std
fmul
add
xor
mov
cwtl
in
mov
lock
imul
outsl
xor
fimull
hlt
mov
sbb
hlt
stos
xchg
add
mov
dec
hlt
lret
mov
roll
mov
shll
lret
enter
xchg
add
jo
insb
adc
add
add
aaa
add
push
xor
mov
addl
add
popa
sbb
cmp
mov
cld
fcmovne
cld
fcmove
inc
in
std
push
ss
or
scas
fwait
dec
std
repz
repnz
push
sbb
inc
jne
loope
add
cs
fnsave
or
xchg
jge
lahf
jne
addr16
sahf
add
add
int3
mov
xor
pop
mov
sahf
ret
aaa
add
shll
cmp
imul
or
aaa
imul
aaa
out
popf
cld
fst
std
pop
rcl
lock
aaa
mov
jne
call
add
cmp
or
loop
jne
aaa
xchg
sub
cld
decb
movsb
jl
hlt
cmpsb
adcl
imul
ss
mov
add
pushf
int3
mov
nop
sbb
dec
adc
aaa
xor
andb
xor
mov
sbb
mov
std
loopne
mov
imul
cld
jne
icebp
out
sti
ljmp
pop
xor
add
ficompl
icebp
sahf
jne
movsl
les
out
lock
mov
out
scas
xchg
pop
stos
lcall
mov
mov
mov
test
cmpsb
mov
shrl
pop
es
enter
inc
pusha
pop
imul
xor
dec
cmp
or
insb
add
adc
jmp
fiaddl
sbb
fdivr
std
fucomi
jne
rol
lds
inc
pushf
dec
cmp
mov
dec
stc
call
jne
decl
ret
pushf
dec
dec
frstor
icebp
pushf
jne
cld
ret
pop
cmpsb
icebp
cmpsb
xorb
out
cmpsl
js
ja
jle
out
test
sub
int3
mov
mov
cmpsb
and
aaa
cmp
inc
or
aaa
imul
aaa
roll
mov
dec
lock
mov
aaa
and
xorb
mov
ljmp
aad
inc
mov
rorl
cmp
dec
pushf
cs
ss
cmp
lcall
inc
stos
icebp
fildl
cmpsb
jmp
fsubrl
cwtl
popf
fsts
outsl
fwait
popf
mov
lahf
mov
or
xor
ss
adc
jno
pop
or
cmp
in
fisttpl
cmp
out
movsl
in
mov
pop
fidivs
in
xchg
jecxz
dec
jmp
lock
mov
lcall
mov
test
cmpsb
imul
mov
movsl
imul
mov
add
push
inc
push
xchg
push
shrb
std
lock
and
xor
xlat
pop
jae
sbb
xor
or
nop
lret
mov
daa
vmread
pop
repnz
add
pop
pusha
es
daa
push
xchg
in
int3
shlb
dec
push
es
mov
enter
or
daa
call
and
js
popl
dec
add
filds
inc
add
adc
and
xor
jg
and
mov
mov
inc
in
insl
inc
sub
es
push
or
xchg
and
push
push
andb
and
and
cmc
insb
inc
and
jb
rorl
add
add
pop
pop
xchg
mov
add
adc
dec
xchg
leave
add
xchg
mov
add
add
add
sbb
mov
inc
add
je
cmp
cmp
inc
gs
mov
dec
inc
rol
xchg
and
dec
push
push
je
xor
push
xchg
and
dec
insb
jne
xor
je
xor
adc
push
cs
movb
mov
outsb
rorl
xchg
sbb
jmp
inc
dec
xor
jo
inc
xchg
and
push
repz
test
sbb
add
test
arpl
add
leave
sbb
shlb
add
decl
mov
push
sbb
fwait
dec
xor
insb
dec
inc
mov
pushf
adcb
jns
adc
or
dec
jns
or
das
sub
pop
mov
dec
dec
xchg
fs
stos
sub
mov
leave
mov
push
in
mov
push
lahf
sbb
inc
sbbl
mov
inc
and
push
dec
xor
outsl
repz
dec
xchg
xor
mov
xchg
mov
xchg
fs
xchg
out
add
inc
loopne
fildll
xchg
mov
sarl
mov
add
dec
add
je
xor
jl
lods
repz
dec
xor
mov
add
adc
or
add
xchg
jno
and
add
add
fcoms
orb
lods
popa
add
movq
in
inc
xchg
mov
icebp
loop
adc
push
xor
lcall
pop
xor
sbb
mov
xlat
mov
add
mov
sbb
adc
pop
movsb
ja
call
xchg
addl
cs
insb
rorl
in
add
adc
cmp
cmp
push
rorl
inc
imul
dec
or
mov
jns
insb
cmp
push
sbb
lods
lcall
jo
addl
xor
insb
cmp
jo
sub
add
pop
mov
inc
shrl
add
sub
adc
cmpsl
arpl
std
xor
and
inc
inc
adc
cmpb
xchg
mov
fmull
sub
gs
add
lods
or
test
iret
jecxz
mov
mulb
int3
inc
pop
lea
cs
push
xor
pop
lods
add
gs
aas
xchg
xchg
icebp
adc
aas
cmp
sbb
mov
mov
adc
bound
nop
ret
and
sub
pop
jb
sub
lret
inc
xor
pusha
fnstcw
inc
cltd
and
inc
pusha
out
repz
sub
pop
and
lea
xchg
mov
int3
ja
mov
iret
cmp
adc
sub
and
sbb
sub
xor
and
lds
pop
xchg
cmpsl
dec
rolb
shll
push
adc
or
jl
and
je
and
push
sbb
mov
cmp
andl
inc
pusha
jnp
inc
gs
dec
int
and
sub
lret
inc
test
fs
movsb
sub
mov
lods
mov
adc
pop
arpl
loopne
aas
push
push
sbb
and
stos
sub
adc
inc
inc
sub
sub
push
push
outsb
mov
shlb
out
pop
gs
sbb
insb
frstor
add
aaa
fs
and
test
das
mov
sub
push
movb
xchg
ds
dec
inc
add
sub
add
sub
inc
rcll
dec
inc
pop
arpl
mov
imul
dec
mov
lcall
xchg
jecxz
push
test
mov
lds
inc
add
push
xor
push
add
fcomps
sbb
mov
mov
pop
add
jg
mov
pop
in
mov
mov
lds
test
add
imul
mov
addr16
xchg
xchg
sub
mov
stos
lods
cmc
stos
fistl
pushf
xchg
inc
push
sub
or
add
dec
movb
adc
movsl
mov
pop
adc
lret
dec
popa
dec
xor
enter
adc
fistps
add
in
ja
push
mov
add
scas
fnstcw
inc
sbb
dec
sbb
cmp
or
dec
push
mov
jnp
add
sub
add
mov
jne
popf
in
pop
iret
xor
push
xor
xor
subb
flds
jns
push
inc
lret
inc
sub
and
adc
inc
rcrb
and
andl
mov
xor
dec
lods
pop
leave
fildll
mov
outsl
imul
popa
test
sub
sbb
or
xor
push
outsb
pop
and
dec
and
mov
lea
and
divl
cli
rorb
dec
cmp
idiv
lret
sub
xor
and
mov
dec
and
mov
or
pop
cmp
and
lea
xor
sarl
call
add
adc
or
xor
rorl
pop
add
dec
cmovbe
mov
mov
adc
mov
cmp
or
add
xchg
popa
popa
ds
push
dec
adc
dec
or
inc
sub
mov
sub
add
push
lcall
xor
popf
mov
dec
and
jp
mov
mov
push
aas
pop
xor
and
inc
mov
ret
push
outsb
lods
shr
outsl
jae
test
sbb
xor
dec
leave
cwtl
add
repz
cmpsb
fs
fs
dec
mov
cmpsb
leave
cltd
iret
adc
cs
lods
rcll
mov
dec
daa
leave
sbb
and
fld
add
xor
fcoms
mov
ret
pop
test
icebp
mov
and
shlb
loop
xor
psubd
pop
out
jo
sub
xchg
mov
mov
andl
push
push
rclb
fsubrs
aas
add
lret
adc
mov
dec
mov
xor
in
sub
pop
pop
loope
ret
int
es
xchg
jae
mov
ja
in
adc
sub
xchg
xor
sub
cs
inc
pop
je
mov
mov
scas
push
fsubs
outsl
lods
es
or
scas
push
mov
roll
mov
add
add
das
adc
xor
and
mov
faddl
dec
pop
push
lods
imul
std
add
xchg
push
push
adc
add
pusha
and
movntps
xor
xchg
xor
das
pop
and
gs
and
gs
out
dec
xchg
mov
jecxz
inc
sbb
sub
add
cwtl
mov
xchg
and
dec
xchg
mov
in
arpl
mov
xchg
sub
push
mov
mov
inc
and
and
and
mov
pop
jge
push
and
sub
cwtl
mov
push
mov
vmread
outsb
inc
sub
inc
adcb
adc
jge
pop
xchg
popa
subl
push
popl
mov
adc
mov
lds
bound
gs
pop
push
pop
mov
int3
mov
pop
push
sub
aam
mov
xor
insb
dec
add
sub
add
sub
pop
movsl
mov
fs
bound
popa
xor
lods
push
pop
push
jno
ret
xor
arpl
inc
lret
sub
inc
mov
push
test
mov
das
fsts
pop
pop
mov
in
pop
jmp
xchg
nop
xor
push
jno
add
adc
push
adc
and
push
sbb
gs
inc
insl
adc
xor
rorb
and
popa
arpl
fcmovnb
sbb
subl
or
sbb
shll
dec
pop
movsb
mov
cmpsl
add
loop
gs
adc
inc
inc
xchg
xor
sahf
mov
adc
sbb
xchg
inc
and
cli
sub
mov
outsl
add
push
add
add
bound
sbb
add
add
inc
add
jecxz
mov
arpl
dec
add
lock
xlat
or
outsb
in
add
push
or
daa
sub
sbb
andl
cmp
mov
sti
and
ret
jo
lret
and
and
lods
add
push
or
lods
mov
mov
xchg
sub
cmp
ljmp
xor
call
fimull
mov
xchg
xchg
pop
mov
mov
sbb
adc
dec
test
aaa
fcmovu
sub
and
xchg
jno
jnp
fs
imul
pop
cltd
mov
insl
inc
jns
inc
jp
int3
sbb
xchg
sub
inc
xor
in
inc
jb
fdivrl
lods
sbbl
add
pop
sbb
jmp
xchg
pop
ds
sub
mov
fcomi
sidtl
adc
rcrb
sbb
rorl
and
std
mov
sbb
mov
inc
test
bound
or
mov
or
js
adc
rcr
notl
mov
dec
shrb
xor
jno
mov
add
sub
test
push
nop
mov
outsl
insl
mov
lahf
push
and
neg
and
dec
xchg
and
add
add
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
