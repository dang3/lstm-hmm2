lea
add
add
add
add
add
notl
mov
rorb
ret
xorl
mov
lahf
enter
dec
idivb
out
xchg
jne
mov
sbb
jp
pop
cmpsl
ds
repnz
test
adc
sbb
xor
mov
rorl
loopne
enter
cmpsl
sbb
cmpb
xchg
loop
jmp
mov
jmp
vpsraw
dec
sub
jecxz
mov
andl
sbb
outsb
xchg
sbb
sahf
xchg
outsb
push
sub
mov
dec
mov
push
xchg
roll
lds
push
or
shll
scas
sbb
loopew
mov
insl
stos
movsb
push
dec
cmp
test
ret
xchg
push
outsb
rcrb
ficompl
xor
xor
push
mov
ret
bound
int3
or
dec
push
into
xlat
sbb
push
lret
jo
jge
sbb
lods
das
push
sub
sbb
sahf
gs
mov
lods
pop
add
dec
gs
jnp
cs
loope
pop
push
aad
xchg
adc
or
jl,pn
aad
add
xlat
jecxz
adc
inc
in
mov
jecxz
cmp
or
mov
mov
sbb
push
mov
push
jne
cmp
sub
pop
fdivrs
test
jno
mov
icebp
sub
jp
or
jle
leave
jbe
dec
cmp
push
mulb
sbbb
popa
loopne
adc
sti
cmp
adc
jb
repnz
jmp
in
sub
lcall
stc
sub
add
bound
aad
ss
lcall
pusha
mov
aad
cmp
int3
or
cltd
pop
cmp
adc
outsb
lods
or
fdivrl
mov
and
popa
aam
mov
shrl
dec
xchg
dec
jg
or
in
mov
pop
adc
pop
and
and
cmpsl
xor
push
iret
cmp
int3
push
stos
sbb
fwait
xor
jo
push
int
push
add
fwait
std
add
icebp
filds
sbb
aad
lret
pop
dec
pushf
mov
iret
xor
push
cmp
or
fdivrs
js
jmp
push
push
pusha
add
ret
jb
sub
jmp
push
test
add
push
push
outsb
add
scas
lea
cmpxchg
cs
ss
mov
das
pop
in
lret
loop
sub
mov
and
push
imul
iret
dec
mov
inc
push
mov
stos
xlat
cmp
mov
iret
addb
lcall
xchg
sub
cwtl
out
int3
gs
in
sbb
es
pop
sub
fcmovnu
orl
pop
lret
aaa
cmp
xor
mov
push
jnp
cmp
imul
or
sub
cmpsb
std
inc
adc
xchg
pop
inc
fistpl
and
int
mov
inc
adc
jecxz
jp
lahf
out
icebp
sbb
addr16
bound
or
bound
fidivrs
sti
es
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
ss
push
push
ficompl
jnp
loop
arpl
mov
mov
into
mov
inc
pop
ja
sahf
push
aaa
sub
sub
add
icebp
jp
rorb
xrstor
xor
mov
add
inc
ret
xchg
push
icebp
sub
mov
movb
outsb
mov
push
xchg
mov
mov
mov
inc
outsl
inc
sahf
movsb
mov
hlt
add
popa
sbb
fiadds
clc
jecxz
ret
lret
stc
rorw
cmc
ljmp
sbb
ret
ret
pop
ret
dec
inc
pusha
int
jns
push
sbb
aad
adc
sub
mov
pop
inc
mov
sub
pop
xor
xor
mov
test
in
cmp
add
jmp
sti
sbbb
ds
sti
dec
dec
xor
or
addr16
cmp
xchg
es
in
cltd
pop
and
add
pop
pop
popa
or
int3
popa
cmc
les
fs
add
scas
cmp
icebp
inc
les
imul
jle
data16
leave
push
xor
mov
pop
jns
push
jle
and
xor
mov
mov
es
test
repnz
sbb
jecxz
addr16
and
push
jno
pusha
xchg
mov
jmp
push
lock
les
lea
out
sbb
xor
cmp
push
sub
test
adc
adc
lds
out
pusha
in
pmullw
repz
fdivl
inc
mov
inc
mov
pop
int3
loopne
and
adc
sbb
loopne
hlt
push
shrl
mov
lea
pushf
rcr
lret
fdivl
adc
mull
or
or
aad
mov
and
fwait
mov
insb
aam
inc
decb
adc
cmp
dec
mov
sarb
cli
pusha
test
movsb
int3
jno
aaa
push
xlat
aas
imul
xorl
repnz
inc
dec
divb
mov
fstl
mov
dec
nop
dec
adc
bound
inc
jns
mov
jecxz
sbb
xchg
fucomi
xor
cmp
fsubrs
insl
pusha
cltd
xchg
hlt
pop
xor
cmp
sub
cmpsl
rcl
int3
mov
mov
lret
pop
mov
pushf
nop
sub
adc
hlt
xchg
xor
sub
jbe
lret
sub
fbstp
rorb
pop
loope
aas
scas
inc
inc
mov
sbb
roll
cwtl
inc
sub
jl
xor
or
into
aaa
push
mov
sub
push
filds
in
cmp
into
movsl
xchg
xor
inc
xchg
mov
pushf
arpl
dec
dec
inc
data16
push
mov
test
and
sbb
nop
jg
imul
dec
out
add
cmp
or
aas
cmp
pop
add
out
cmp
popf
xchg
loope
push
add
loopne
jno
hlt
pushf
roll
nop
push
adc
aad
fidivl
adc
sbb
cmpb
insb
adc
push
adc
mov
sbb
pop
xor
imul
jb
push
cmp
add
mov
lcall
mov
jo
sbb
imul
cmp
push
das
mov
insb
cmpsl
scas
lds
shlb
andl
xlat
repnz
jp
pop
adc
in
repz
sti
rorb
fists
xchg
jno
repz
popf
mov
inc
mov
xchg
jp
sbb
adc
test
mov
add
repnz
jmp
push
inc
mov
push
iret
insl
mov
popf
ret
sbb
imul
add
out
mov
mov
xchg
push
mov
sub
jns
iret
sbb
outsl
inc
aaa
arpl
push
mov
inc
push
mov
xchg
adc
into
cmc
and
hlt
dec
ja
pop
imull
cs
push
adc
xchg
shll
cmpb
stc
loope
aas
cltd
mov
fldt
mov
and
sbb
mov
mov
adc
mov
clc
iret
loopne
pop
pushf
imul
push
loope
inc
lret
lret
insb
mov
sub
mov
hlt
pop
dec
insb
cltd
mov
push
mov
sbb
mov
out
mov
out
cmp
in
ss
push
xchg
add
inc
jne
loopne
fwait
sbb
in
in
jge
and
insl
jp
jbe
rorl
aaa
add
jmp
and
push
mov
lret
shll
adc
in
adc
lcall
inc
dec
sub
xchg
mov
sbb
enter
cmp
xor
js
popf
loope
int3
or
pop
sahf
dec
clc
xor
mov
push
sub
cwtl
mov
sub
add
push
imul
mov
jmp
or
xchg
leave
repz
adc
icebp
lret
mov
or
pop
ss
inc
xor
pop
or
push
mov
sbb
orl
mov
mov
stos
movsl
shll
jmp
xor
mov
push
xchg
out
shll
in
data16
imul
inc
adc
lcall
sbb
in
pop
sbb
lret
push
push
xchg
fcomp
std
repz
pop
xor
push
xchg
sbb
xchg
mov
mov
fistpll
fidivs
add
imul
push
cmp
cmc
add
in
jbe
xor
lods
das
imul
sub
cld
jnp
mov
stc
push
addr16
popa
cwtl
and
push
pop
fcmovnbe
mov
add
mov
lret
mov
mov
mov
outsb
mov
adc
mov
xchg
cmpsb
testb
push
clc
mov
jecxz
and
and
ds
dec
mov
adc
adc
pushf
inc
insb
lods
dec
mov
negl
mov
icebp
clc
subb
xchg
or
out
jmp
test
push
cmpb
inc
sub
rcrl
jp
jae
mov
sti
addr16
cmp
test
inc
cmp
dec
pop
push
pop
push
sti
inc
push
xchg
hlt
je
sub
pop
lret
mov
xlat
cmp
fwait
push
dec
pop
xor
mov
ds
mov
push
mov
mov
push
mov
adc
fcoms
mov
fldcw
jmp
sub
call
sub
inc
add
dec
pop
push
ja
and
or
lret
cmpb
and
and
movsl
lods
inc
ljmp
shlb
cmp
in
adc
inc
decb
iret
dec
fcomps
fidivs
inc
rsqrtps
or
push
loopne
aas
sbb
mov
outsb
fmull
pop
arpl
push
mov
inc
gs
dec
push
divb
push
xlat
shlb
or
gs
out
call
adc
lock
jl
or
test
fwait
sbb
lea
xchg
push
jnp
push
pop
adc
ret
fisttpll
notl
mov
dec
and
dec
movsb
and
mov
cmc
inc
jecxz
fs
pop
adc
xlat
adc
xchg
ljmp
bound
pop
loope
cmpsb
ja
fidivrl
fstps
aam
pusha
push
loop
and
adc
lcall
es
fiadds
xchg
sbb
xor
fimull
adc
xor
neg
test
fisubrl
mov
push
sub
mov
clc
adc
push
add
lahf
mov
mov
inc
scas
dec
push
sbb
out
in
pop
int
mov
push
add
movsb
add
cltd
xlat
push
cmp
mov
testb
sbb
mov
pop
pop
mov
js
js
push
sahf
xchg
and
lcall
daa
in
sub
jns
std
test
ds
sub
stc
fs
inc
jg
inc
or
loop
pop
mov
mov
inc
sbb
cmp
js
je
push
pop
sbb
inc
xchg
out
inc
popf
dec
pushw
mov
ds
xchg
stc
cmp
xchg
fidivrl
in
lcall
xor
movsb
mov
sbb
mov
mov
mov
xor
sub
inc
mov
stos
cmp
outsb
aam
ficompl
mov
lcall
out
out
insb
lcall
xchg
mov
add
out
xchg
pop
cmp
orb
push
dec
push
xor
dec
sub
in
add
pop
pop
aad
loopne
add
sarb
lea
mov
or
int3
push
cmp
and
sbb
adc
fisubrl
mov
gs
mov
mov
mov
nop
daa
inc
add
xor
mov
andl
and
fsts
xchg
ljmp
scas
pop
mov
adc
xor
and
pop
pop
mov
cmc
add
scas
sub
mov
cmpsb
repnz
jns
pop
jno
ret
pop
mov
leave
je
fldl
mul
imul
sub
sbb
ds
xor
mov
aam
add
frstpm(287
xchg
mov
inc
imul
outsl
inc
or
inc
push
push
cli
int
ret
pop
pop
sub
outsb
arpl
pusha
sbbl
out
mov
jne
cltd
mov
mov
rcl
ret
cli
push
mov
shlb
popl
hlt
push
fmuls
cs
jecxz
fs
push
loop
js
cmp
ja
in
and
mov
jmp
fcmove
aam
ds
daa
out
mov
xor
in
or
xchg
dec
pop
lods
nop
lock
into
mov
aam
ret
push
daa
and
pushl
push
and
pop
and
addl
adc
push
enter
rorl
mov
add
insl
xchg
cltd
jns
push
inc
insb
cs
cs
das
cmp
and
ret
into
pop
fmulp
mov
inc
cwtl
mov
add
mov
push
jo
mov
jnp
out
cltd
mov
bound
pop
mov
xchg
xchg
movsb
cmpsb
or
nop
addl
mov
nop
sub
iret
adc
gs
arpl
pop
pop
cmp
hlt
or
push
ror
ds
pushf
popa
fistpl
cmp
dec
outsb
out
stos
adc
inc
sti
imul
insl
dec
mov
jp
insb
jl
fdiv
sbb
sub
or
jmp
pop
repnz
icebp
fldenv
fidivs
xor
outsl
add
push
jmp
aaa
jmp
jnp
adc
scas
ss
loope
xchg
xlat
pop
or
sub
push
xchg
test
movsb
pop
scas
insb
xor
mov
dec
sub
ds
fwait
sbb
sbb
inc
mov
ror
pushf
jl
xorl
push
icebp
dec
stos
test
xchg
test
mov
jp
dec
pop
mov
lods
xchg
push
imul
mov
pop
fs
nop
push
lock
outsl
sub
mov
xlat
sbb
lds
fnstcw
scas
adc
push
push
fisubl
repnz
mov
xchg
mov
xor
int
jge
pop
dec
mov
push
hlt
aas
into
jbe
add
in
jno
inc
adc
dec
es
cmp
fstpt
mov
out
les
bound
in
mov
add
cmp
and
in
popa
movsl
sub
icebp
xchg
popa
in
mov
subl
xchg
fldenv
lcall
outsl
xchg
or
fdivr
jp
mov
bound
js
xchg
sbb
adc
push
mov
dec
jl
lock
adc
subl
shr
or
pusha
rcr
movsl
stos
ljmp
push
push
int
push
cmp
mov
add
inc
rorb
push
int3
pop
mov
ss
clc
adc
xor
jns
cmp
js
xchg
loopne
aam
pop
icebp
inc
cltd
cmp
push
jmp
test
lret
aam
fidivs
mov
lret
rcrl
out
mov
push
and
shll
jo
or
and
dec
in
mov
or
inc
xchg
pop
lret
sub
out
adc
push
dec
loopne
sbb
lcall
mov
sub
leave
add
mov
cvtpi2ps
fstps
xor
lcall
imul
outsb
push
pop
xchg
jg
adc
inc
test
and
addr16
mov
out
sub
lret
mov
aam
lret
cs
xchg
pop
sub
cmpsb
inc
jmp
lcall
jb
cmpb
and
pop
out
sub
adc
push
je
enter
sbb
negb
cmp
popf
iret
push
pop
adc
loop
and
outsl
stc
pop
jo
and
fsubrs
jo
sub
push
hlt
sub
jmp
daa
lea
mov
fidivrl
push
jg
cli
rep
out
inc
xor
das
loop
gs
dec
aad
mov
in
mov
push
inc
mov
in
sbb
and
hlt
xorb
jno
sbb
cmp
adc
insb
cmp
dec
sub
rorb
or
mov
test
insl
lea
loopne
cmp
test
fdivrs
adc
mov
fisubl
cmp
and
jnp
mov
jecxz
and
movsb
pop
negl
loope
sahf
lcall
inc
adc
jmp
insb
cld
push
mov
mov
cmp
mov
pop
fcmovnbe
push
mov
in
adcl
shrb
sub
xchg
cs
incl
daa
repnz
adc
into
insl
fs
je
dec
fcoms
lret
pushf
push
adc
pause
jl
sbb
js
push
dec
std
jmp
mov
push
aas
or
stos
inc
jl
push
dec
rcrl
std
mov
int3
xchg
mov
addl
sub
cmc
or
aad
cltd
orb
sbb
stos
mov
mov
popf
push
or
jp
lcall
sub
inc
fcmovb
mov
dec
rcrb
sbb
iret
pop
lahf
dec
mov
mov
divl
ljmp
adc
pop
das
std
sbb
fdivrs
subb
outsl
xchg
cli
lahf
adc
dec
test
dec
inc
inc
mov
cmpsb
cwtl
aaa
adc
pop
pop
xchg
popa
fwait
dec
daa
pop
pop
mov
in
loop
push
mov
jae
repz
mov
pop
sti
lods
divb
push
lahf
add
and
cmp
out
mov
cld
mov
adc
fldt
pop
call
adcl
test
faddl
test
jmp
cmp
sbb
enter
test
lock
mov
jmp
les
cmp
ret
daa
add
push
xor
dec
cmc
mov
lahf
out
push
rcl
add
mov
js
out
and
fwait
mov
pop
pushl
mov
add
arpl
sbb
into
jo
filds
xor
mov
aaa
sbb
or
xchg
sub
out
inc
cmc
pop
xchg
repz
fwait
pop
pop
popf
inc
xchg
and
mov
pop
dec
jb
sbb
in
mov
lret
push
adc
shlb
inc
sub
stos
add
dec
cmp
in
shlb
add
outsl
negl
xor
lcall
sar
cmp
pop
out
jmp
dec
push
movsl
xchg
xchg
cmc
push
mov
xor
push
add
les
int
sub
add
sbb
test
cmp
nop
push
cltd
aas
loopne
into
sbb
stc
shrl
leave
bound
and
psubsb
fsts
jbe
loope
fidivs
aas
test
fldl
push
mov
lcall
pusha
and
mov
cltd
dec
stc
pop
fs
xor
fdivl
movsb
jnp
mov
mov
insb
clc
cmp
pop
adc
push
and
lret
jmp
daa
push
imull
int
sub
rcr
jbe
notb
fstpl
movsb
mov
sbb
bound
fstp
inc
mov
and
or
xchg
lret
mov
mov
fisttps
mov
adc
aaa
xchg
jns
daa
or
mov
cmp
out
pop
and
sub
mov
in
and
push
add
inc
or
daa
ds
addr16
and
mov
jne
loope,pt
xor
xchg
push
pop
enter
sbb
neg
jb
add
and
popf
sar
sbb
xor
mov
add
es
sbb
jmp
push
adc
movsb
or
inc
and
lret
xchg
mov
out
data16
das
fimull
shrb
pushf
dec
mov
push
xlat
cmc
loop
inc
inc
cld
pop
test
cwtl
out
fbstp
into
jne
pop
inc
add
js
mov
cmp
sub
jbe
std
ret
clc
imul
mov
mov
adc
jno
jbe
hlt
sub
dec
adc
out
mov
unpckhps
xchg
cmp
push
arpl
cmpsl
enter
fcomps
mov
popa
cmp
scas
inc
sub
sub
icebp
add
sbb
push
jmp
xor
and
lock
jecxz
pushw
stc
ret
adc
add
cmp
push
leave
cli
mov
dec
je
mov
cmp
sti
adc
mov
jo
xlat
or
push
and
cmp
lods
cmp
not
ret
ret
jmp
insl
imul
jne
das
inc
mov
dec
shlb
fidivs
enter
sbb
icebp
out
out
push
xlat
pop
es
push
mov
adc
sub
into
push
mov
or
pusha
push
ret
bound
sti
pop
and
xorl
cmpsb
xchg
mov
xchg
imul
mov
mov
pop
shl
in
xor
fists
aam
call
loop
mov
push
push
mov
lret
arpl
sub
jp
mov
inc
stos
bound
xor
loope
and
sbbb
inc
push
jl
sahf
out
mov
fimuls
cltd
pop
daa
gs
scas
lret
pop
xchg
test
mov
imul
mov
jg
cld
and
notb
sbb
ljmp
mov
ds
jmp
fiaddl
mov
mov
lea
enter
adc
lods
negb
in
daa
repz
jns
jge
mov
cmp
jo
jne
mov
or
push
int
xchg
loop
ss
iret
clc
int
mov
cltd
mov
lods
and
adc
in
sbb
ds
testl
and
lret
adc
inc
adc
shr
std
shl
xchg
icebp
push
cmp
vpmacsdql
xchg
loope
fstps
push
jle
fidivrs
inc
push
inc
repz
jmp
sbb
in
push
mov
orl
je
outsb
dec
adc
mov
aas
inc
sbb
or
pop
idivl
subl
test
mov
fisubs
enter
arpl
scas
in
jmp
lods
stos
jmp
xchg
es
pop
adc
inc
jecxz
pop
aas
nop
mov
and
clc
mov
movsb
sub
cli
mov
fnstcw
pusha
push
cmp
cmp
add
sbb
or
iret
clc
mov
loopne
pop
add
pusha
icebp
and
or
jae
fs
mov
scas
mov
pop
stos
and
popa
sub
rolb
wrmsr
cmp
mov
imul
iret
test
cmp
inc
mov
xchg
test
insb
xor
fsubl
dec
or
mov
cmpsl
add
fcom
clc
insb
sarb
fs
repz
pop
xchg
ja
fidivrs
mov
inc
mov
jns
call
lock
add
dec
inc
or
mov
je
cltd
jno
lret
and
mov
jb
mov
cmpsb
pushf
test
add
ds
sbb
pop
jno
fcoms
in
bound
mov
imul
jle
sbb
cltd
dec
mov
in
xor
pop
in
dec
lcall
ds
jae
sahf
mov
jle
imul
inc
cltd
inc
repz
popa
mov
cmp
aam
out
das
adc
pop
arpl
adc
imul
sbb
mov
sbb
lock
sti
lret
outsb
lahf
xchg
popf
pusha
lcall
push
cld
xor
sub
cmp
ds
xchg
mov
dec
sbb
fs
add
fs
xlat
lds
push
inc
pop
sbb
jmp
out
outsl
das
cmp
inc
push
lea
aaa
jno
xchg
jl
mov
xor
shlb
mov
jae
or
scas
mov
mov
fmull
or
dec
dec
test
pop
popf
or
popa
mov
cmc
xor
cli
inc
das
adc
imul
push
daa
andb
adc
movsb
shll
xor
mov
push
sahf
add
mov
and
roll
adc
insl
jae
mov
fists
xchg
outsb
push
fiaddl
fwait
xchg
loopne
ret
stos
sub
cmp
hlt
and
into
test
jnp
dec
rcrl
sbbl
or
ficompl
adc
cmp
pop
cld
jns
mov
sub
icebp
inc
or
sbb
mov
in
pop
lret
add
jmp
adc
dec
jle
lods
stos
cmp
sub
mov
rcll
call
xlat
jns
pop
sti
jge
lea
or
push
and
dec
icebp
loopne
and
cli
ret
and
mov
cld
pop
int
sub
loopne
js
jecxz
aaa
andb
jns
inc
mov
into
pop
adc
and
cltd
pusha
xchg
mov
gs
cmp
adc
adc
xchg
mov
inc
addr16
push
rol
dec
add
adc
fistps
jbe
and
scas
sub
or
fldl
jmp
mov
int
pusha
rcrl
mov
outsl
incb
dec
sbb
lahf
adc
incl
push
or
add
rolb
bound
sbb
push
in
xchg
xor
cld
es
mov
pop
dec
ret
xlat
xor
mov
jge
dec
or
in
sbb
out
jl
pop
cs
and
clc
movsb
aas
dec
sbb
and
mov
xchg
fsubl
xchg
dec
jg
or
bound
mov
mov
jg
stos
jecxz
mov
sbb
outsb
loopne
push
pop
ljmp
mov
jno
negb
test
outsb
aas
pfsub
add
push
scas
pop
div
out
dec
or
adc
or
stc
mov
push
sub
dec
cld
inc
imul
je
mov
call
mov
or
cmc
sbb
adc
sub
inc
pop
movsb
push
and
cwtl
fisttps
loope
push
push
pavgb
ret
fdivl
clc
stos
xchg
lcall
cli
out
jae
and
cmc
mov
jp
dec
js
dec
popf
and
adc
cmp
pushf
or
xlat
pusha
dec
xchg
adc
mov
ret
enter
jbe
jne
dec
adc
adc
lret
adc
mov
sub
ja
jp
push
test
jo
punpckldq
sarl
jb
mov
movsb
fisubrs
fiaddl
mov
mov
cmp
ss
lret
insl
mov
aam
mov
arpl
fistps
subl
fs
mov
push
mov
loopne
in
loop
inc
imull
repz
add
into
mov
loope
das
jno
or
xchg
lods
mov
pop
rcrb
add
out
sbb
push
cmc
sbb
out
xor
les
sbb
inc
icebp
lods
cmpsb
inc
addb
sbb
push
pop
xor
sti
outsl
sbb
and
ficompl
hlt
sub
pop
sub
mov
std
cwtl
xchg
rolb
movsb
and
scas
jb
adcb
decb
and
out
aaa
fs
ja
push
add
mov
push
pop
xor
arpl
dec
lock
sub
vpunpckhbw
sub
arpl
mov
pop
pop
data16
es
pushf
ficomps
bound
xor
mov
sarb
fs
in
lcall
mov
push
into
xor
fldl
dec
or
inc
jp
dec
jne
out
pop
or
lods
add
add
jmp
ds
out
rcll
int
pop
ljmp
adc
cmp
shrb
int3
mov
mov
xchg
stos
mov
je
push
xlat
fs
adc
push
xchg
cmp
pusha
movsl
fbld
cmpsb
cltd
roll
ret
fs
jg
push
xor
stos
jecxz
hlt
mov
sbb
dec
cs
test
push
mov
xchg
ret
dec
jnp
bound
sub
and
mov
inc
xchg
or
cmp
lret
xor
out
and
cld
addr16
bound
mov
jl
int
sub
out
mov
scas
aaa
and
loope
roll
cltd
dec
orb
inc
ret
cltd
pusha
into
lret
outsb
jle
lods
into
fcmovnb
ret
cld
jno
aaa
fildl
mov
xchg
in
mov
rcrb
add
inc
push
and
call
jno
mov
jp
xchg
or
into
mov
adc
pop
lock
lds
xor
es
adc
mov
jbe
xchg
and
mov
lret
mov
pop
inc
cs
push
pop
xchg
fistl
xlat
hlt
and
mov
push
pop
pop
xor
cmp
dec
bnd
pop
pop
je
xchg
dec
cmp
push
sbb
xchg
inc
bound
mov
enter
aam
xchg
sbb
imul
xchg
or
or
push
sbb
shll
insl
popa
aam
mov
adc
add
shll
in
bound
out
enter
jae
roll
out
inc
dec
scas
inc
pushw
jo
add
shll
jp
pop
push
in
shlb
xchg
pop
out
mov
out
adc
test
cmp
test
push
xchg
jnp
out
xchg
in
nop
into
add
sbb
std
cmp
push
or
mov
cmp
push
dec
stc
out
jmp
pop
push
daa
jle
cmp
out
bound
jl
dec
jge
cli
sub
test
inc
sub
dec
xlat
sub
xor
std
sub
add
out
loopne
lds
sbb
sarl
aas
mov
jbe
push
shll
jle
repz
jo
push
xor
inc
cmp
dec
faddl
rol
int3
stc
fisubs
imul
xchg
movsl
lcall
lahf
mov
cmp
mov
outsl
and
lods
pop
mov
loopne
bound
lcall
mov
jg
inc
dec
and
je
aad
lods
mov
sti
movsl
dec
push
add
pop
cmpsl
aam
push
lahf
in
pop
nop
adc
push
sub
fidivrs
mov
and
and
into
push
ss
pop
int
xor
push
or
aam
cld
loopne
dec
push
jmp
shr
dec
sbb
rcrl
hlt
mov
push
push
push
mov
sbb
stc
pop
mov
outsl
push
xchg
test
repz
icebp
lcall
fcomp
sbb
inc
sbb
mov
les
in
loopne
ljmp
lahf
rcll
push
sub
aaa
mov
movsb
es
push
mov
mov
das
mov
cmc
and
inc
lods
inc
pop
mov
mov
or
dec
sbb
adc
lock
ret
and
jecxz
shrl
fidivrl
adc
push
adc
sbb
mov
in
or
add
mov
push
jnp
loope
or
icebp
add
ds
lahf
subb
pop
fsts
mul
xchg
xorl
jge
test
call
shrl
ss
xchg
or
jne
lock
in
arpl
inc
push
shrb
add
filds
pop
pushl
mov
das
push
xlat
pop
mov
int3
sarb
nop
bound
jae
shll
enter
xor
mov
mov
stos
mov
sbb
sub
mov
popa
mov
aam
mov
dec
out
fnstsw
or
jge
stos
push
and
sub
or
jge
popl
testl
repnz
mov
arpl
mov
nop
adc
pop
in
mov
pop
movsb
inc
cltd
push
adc
movsb
jl
dec
pushf
adc
mov
dec
sbb
in
stos
lods
xchg
in
dec
push
into
and
insl
pop
insl
arpl
scas
mov
ja
xchg
movsb
ret
adc
je
add
sub
orl
shll
ret
cmpsb
ljmp
andb
push
pop
mov
cwtl
mov
repnz
adcb
std
rcll
movsl
fistl
stos
ljmp
cmp
cmc
mull
inc
xchg
fmull
push
cli
ffreep
push
fcmovb
cmp
mov
stos
inc
push
pop
xor
mov
mov
mov
sbb
pop
mov
or
cwtl
scas
add
jp
fnsave
sbb
adc
fistl
xchg
leave
sub
out
js
jmp
test
aad
ja
sbb
sbb
cmp
scas
mov
outsb
push
adc
pop
sbb
xchg
je
jb
mov
mov
cmp
pop
leave
cmpsb
mov
fidivrs
rolb
inc
xorl
sub
je
and
sub
je
dec
popf
lret
cmp
dec
cltd
jnp
jns
add
cmp
ja
test
aaa
outsl
jno
mov
jmp
cli
bound
xor
shll
mov
iret
xorb
inc
adc
inc
inc
sub
sbb
xor
jns
ficomps
pop
movb
fnsave
movsl
gs
sbb
outsl
pop
mov
mov
rcll
jno
push
rclb
repnz
pop
addr16
add
pusha
in
aas
dec
push
push
jno
mov
lock
imul
cmp
sub
stos
jae
rcrl
sbb
lea
arpl
loop
aad
jne
xchg
out
sub
add
push
loop
pop
add
cmc
jg
test
jl
mov
push
cmp
out
std
aaa
push
imul
into
jb
mov
xor
cmpsl
xor
jns
shlb
test
cmp
sub
lds
and
es
xor
dec
aas
rclb
xor
jecxz
push
jno
adc
mov
mov
out
popf
jnp
out
test
jl
mov
adc
ds
and
sbb
out
sbbb
jmp
adc
jns
cltd
rclb
daa
push
filds
daa
or
or
ljmp
mov
mov
push
push
ret
mov
in
jg
add
cwtl
adc
jns
sbbb
xor
dec
mov
in
mov
lods
xor
in
jp
loop
lods
fstps
fistpl
jo
adc
lods
popf
stos
pop
mov
xchg
pop
das
xor
fstpt
dec
jo
adc
mov
sub
cmp
aam
icebp
outsl
js
pop
mov
hlt
xorb
mov
adc
pusha
jmp
mov
xchg
jno
icebp
dec
arpl
and
xlat
and
jae
push
dec
ret
lahf
cmpsb
pop
mov
and
inc
call
fmul
ret
and
popf
cmpl
sar
mov
test
jb
mov
xchg
pusha
sub
push
adc
inc
ret
lret
scas
xlat
movsl
adc
xchg
mov
or
repz
addr16
js
addr16
pop
divb
or
pop
dec
arpl
ds
xor
push
aas
sbb
push
popf
stc
lcall
xlat
lds
daa
push
les
inc
dec
mov
mov
imul
insl
lret
jle
cmp
jbe
fstpl
mov
aas
in
jle
outsb
clc
jmp
mov
sbb
pop
mov
in
push
and
fimuls
mov
and
out
roll
dec
mov
sbb
out
subb
mov
adc
jle
mov
xor
gs
out
add
pop
mov
push
mov
xorb
pushf
or
cmp
sbb
adcl
dec
xchg
bound
lret
jb
insb
pop
xchg
push
insb
jbe
xchg
shlb
aas
pop
incb
lcall
dec
cmpsb
cli
sub
ja
mov
pop
cmpsb
xor
push
loope
cwtl
popf
adc
mov
loop
dec
orl
mov
push
and
push
dec
add
mov
sbb
or
lahf
cmc
repnz
outsb
inc
xor
adc
sbb
es
pop
frstor
aas
and
orb
ljmp
mov
xor
adc
dec
pop
mov
xor
jo
sub
push
cli
pushl
into
aas
inc
and
fldl
outsb
gs
sbb
daa
cmp
fistps
std
lea
pop
cld
pop
jmp
and
int
or
or
inc
popf
xlat
push
inc
sbb
xchg
arpl
loop
jl
ljmp
push
shrb
fisubs
jl
fstpt
add
mov
fld
int
add
popf
fs
je
push
fcomps
lahf
push
and
add
cmpsl
jae
in
xlat
repz
imul
jl
pop
push
add
divb
sub
push
sbb
loope
sbb
jb
fdiv
pop
in
in
fildll
das
out
movsl
pop
or
andl
mov
adc
pop
jno
and
test
ss
in
cli
lret
mov
mov
adc
cmpsl
jo
aad
cmpb
push
or
imul
lock
aam
sbb
int3
lcall
scas
push
int
ss
clc
push
mov
repnz
xchg
cld
pop
and
mov
es
cmp
push
inc
mov
aam
mov
fldt
and
fadds
and
cmp
loope
sbb
pop
cmp
pop
rclb
stos
loope
in
arpl
je
sbb
mulb
fwait
or
fcmovnu
xchg
js
rcll
sahf
mov
xchg
adc
rorb
in
movsb
xchg
or
push
mov
xor
mov
dec
ret
inc
sbb
out
out
in
jno
ret
rclw
and
push
mov
arpl
mov
xor
mov
adc
fs
enter
sbb
loop
fwait
mov
jns
enter
out
movsb
dec
fwait
stos
daa
jp
stos
xor
xor
imul
repnz
mov
or
ret
into
mov
sbb
cmp
test
imul
push
inc
cmpsb
dec
lcall
mov
fstps
je
scas
or
sarb
popf
mov
inc
cmc
out
out
jp
idivb
int
xchg
pop
xchg
aam
sbb
loopne
dec
in
push
jp
das
loope
pusha
pop
pushl
scas
out
addb
jg
pop
or
push
dec
jecxz
movsl
and
jl
insb
rclb
xchg
fldenv
push
sbbl
stos
fcomp
pop
push
inc
pop
mov
fs
dec
out
xchg
or
cmp
ret
fadds
test
xorl
xchg
clc
push
stos
pop
sbb
xor
stc
jge
lret
out
mov
ja
std
rcl
cmp
nop
fimuls
jg
stc
push
mov
imul
adc
jg
popf
test
shl
rcrl
pop
mov
movl
cli
ss
or
fistpll
shll
pop
clc
cld
xor
jle
push
lret
mov
mov
iret
into
xchg
lcall
push
jnp
stos
icebp
in
cmpsb
pop
icebp
test
cwtl
shl
and
cs
mov
inc
add
insl
call
adc
fcomps
xor
cltd
dec
imul
add
push
push
and
push
fsts
add
in
std
lea
xor
xor
jne
push
inc
mov
mov
bound
cmp
add
and
add
jge
loope
lods
or
nop
test
imul
rcll
mov
loop
mov
add
cltd
in
adc
xchg
mov
push
sti
std
int3
cmp
std
mov
and
das
call
adc
cmp
in
ds
inc
mov
pushf
adc
lds
xor
jno
add
xchg
and
fsubs
mov
xchg
jae
cmp
clc
xor
pop
out
adc
push
int
fnsave
lahf
pop
jae
push
xchg
inc
inc
or
flds
or
icebp
inc
fwait
hlt
mov
dec
dec
push
out
xchg
sbbl
or
and
mov
loopne
rorl
mov
rcl
sbb
dec
and
cmp
xchg
pop
adc
mov
mov
test
pushf
shl
dec
shlb
sub
js
test
add
push
dec
dec
repnz
outsl
mov
ret
fsub
mov
pop
xchg
scas
mov
mov
inc
ss
jb
pop
add
push
jnp
jnp
or
xchg
push
movsb
push
add
mov
and
sub
pop
xchg
push
sbb
outsl
out
xchg
pop
sbb
ss
cmp
fcos
rcrl
adc
fldt
mov
mov
paddusb
and
js
inc
push
inc
gs
outsl
clc
fldenv
sub
leave
cld
pusha
xchg
push
adc
xor
pop
movsb
call
shlb
sbb
mov
add
lods
cmpsb
cld
shlb
xor
xor
adc
lock
icebp
fistl
std
mov
lret
shrl
push
and
sub
mov
scas
mov
ret
lret
pop
fs
outsl
inc
in
movsl
or
xor
sub
mov
repz
iret
lcall
xchg
pop
inc
subb
and
bound
in
xchg
sub
and
mov
imul
sub
in
fscale
shr
stc
xor
daa
add
push
push
sub
ja
push
jl
push
xor
cmp
das
push
push
jp
movsl
das
cmp
sub
popa
enter
movsl
push
nop
in
xchg
cli
mov
addr16
pushf
mov
fs
adc
mulb
ficompl
outsl
rolb
pusha
aam
arpl
mov
or
lret
jg
in
push
loopne
xchg
pop
sti
daa
mov
lea
cmp
nop
jo
cmp
je
mov
out
cmp
sub
xchg
aas
mov
in
mov
sarl
and
mov
std
and
fldl
adc
sub
repz
test
int3
incb
outsb
or
push
rcl
cmp
or
push
rcrb
xor
sbb
jp
inc
and
mov
data16
dec
inc
dec
mov
sbb
jl
int
cmp
dec
mov
cld
pop
fldt
insb
cmp
add
std
ds
movsl
ds
xor
fmull
sub
push
mov
adc
cmc
and
sbb
int3
icebp
xor
in
xchg
pop
sbb
pop
sub
mov
dec
jb
movsb
std
push
das
dec
std
in
stos
inc
lock
fwait
mov
rcrl
sbb
inc
or
jmp
and
and
roll
jle
sbb
divb
setns
js
adc
push
mov
je
inc
mov
orl
mov
inc
fadds
pop
popa
ljmp
jnp
and
in
sar
in
test
gs
mov
popa
repz
pop
mov
dec
pop
mov
shl
negl
jne
pop
push
jmp
mov
pop
pop
fistpl
and
add
jns
xor
xchg
or
lods
jmp
in
cmpb
jge
sub
mov
mov
rcrl
push
jns
and
fists
sub
push
mov
movsb
jnp
dec
mov
jno
jno
mov
mov
fidivrs
jb
dec
and
imul
ljmp
push
pop
adc
xchg
add
aaa
je
sarb
cld
out
scas
inc
jle
data16
movhps
jp
cmpsl
lods
push
mov
mov
adc
sahf
out
pop
das
dec
decl
iret
cmp
adc
outsb
int
pop
je
jns
dec
sbb
xchg
fs
push
loop
lea
xlat
mov
push
sub
and
and
ret
data16
insl
rcl
inc
stc
lret
jl
mov
pop
loop
jbe
mov
cli
mov
test
cmpsb
fs
inc
ds
sub
cmp
ljmp
sbb
sub
insl
jno
push
leave
fwait
les
std
xchg
out
add
xor
mov
lea
addr16
mov
dec
mov
fdiv
arpl
stc
fadds
sub
lahf
insl
iret
push
cmp
pop
sub
rcr
mov
ja
jo
aas
cmp
in
jns
mov
push
adc
push
out
add
pushf
imul
stos
enter
addr16
jns
dec
mov
mov
rcrl
xor
xorl
test
mov
mov
repnz
rcll
mov
lods
ret
inc
pop
repz
xchg
dec
daa
xor
or
mov
rcrb
jb
jbe,pn
fs
stos
popf
popa
cwtl
nop
shrb
mov
jg
mov
filds
mov
dec
ret
lahf
js
out
sub
out
jno
inc
cmpsb
pusha
jns
adc
aas
mov
cmp
gs
mov
sbb
sub
fnstenv
cmp
mov
cmc
fs
fsubl
and
cmp
movsb
shll
shrl
push
daa
fwait
push
aad
sbb
xchg
loope
filds
dec
stos
add
and
dec
out
addb
add
push
xchg
mov
push
mov
xor
xor
or
ss
loope
aas
xlat
fwait
ret
xor
sub
cld
push
push
mov
andl
fcmovnb
call
pop
mov
dec
pop
sti
pop
dec
dec
sbb
mov
jbe
insb
je
int3
sbb
lods
clc
lock
repnz
call
add
inc
sub
push
or
jnp
js
nop
fbld
stos
inc
test
sbb
pushf
out
imul
mov
xor
push
sub
aad
dec
mov
lahf
out
push
inc
mov
das
dec
add
dec
sub
sbb
jge
jg
ret
out
add
fimuls
jmp
js
fildl
das
pusha
dec
jno
cli
jecxz
pop
mulb
sar
es
push
ret
insl
popl
mov
scas
mov
scas
aas
mov
aad
mov
rorl
fwait
rcr
cwtl
xor
ds
call
push
outsb
sub
adc
push
add
loop
adcl
dec
cmp
jne
pop
lods
loope
or
xchg
sbb
lods
adc
jnp
adc
inc
mov
mov
imul
paddw
xchg
inc
jae
ret
out
or
xchg
or
cmc
fstpt
inc
sahf
fstl
popa
out
mov
imul
cmp
js
inc
xor
xchg
shr
in
aas
shrb
bound
sbb
mov
addb
aam
push
adc
repz
pop
into
cmp
jg
or
addr16
popf
jle
adc
sbb
fisttpll
mov
inc
ficoml
jae
cs
addr16
testb
out
mov
orb
mov
sarb
jle
jb
das
fwait
adc
mov
push
push
adcb
and
movsl
fs
inc
xchg
push
sbb
cmp
mov
scas
jnp
add
mov
jo
sar
loope
mov
mov
push
push
mov
mov
jno
push
push
sbb
popa
push
sub
lods
fdivl
mov
pop
std
mov
and
sbb
leave
rclb
pop
or
out
dec
scas
lds
out
xchg
ret
mov
out
mov
mov
cmp
sarl
mov
dec
or
lcall
cmp
popa
ret
popa
xor
sub
insb
adc
mov
movsb
js
fiadds
jmp
mov
inc
jno
pop
adc
je
leave
jns
xor
adc
imul
jb
in
xor
test
mov
push
pop
or
aad
xor
add
es
push
add
xor
push
mov
jl
test
pushf
dec
sti
int3
push
pusha
mov
dec
and
mov
into
gs
das
mov
mov
jmp
and
insb
push
cmpsb
and
and
xor
jns
mov
lcall
es
lock
pushf
imul
and
inc
add
inc
gs
inc
or
dec
add
inc
mov
inc
sub
adc
push
add
xchg
mov
mov
add
adc
pop
add
adc
nop
lods
iret
pop
adc
jb
mov
xchg
jae
cmpl
aad
and
unpcklps
repnz
ds
and
ret
ficompl
pop
jne
adc
dec
pop
pushf
jb
test
es
popf
scas
andl
rolb
neg
push
push
add
mov
jnp,pt
lods
mov
sti
scas
jle
mov
cmp
push
dec
in
xlat
mov
rcrb
mov
gs
dec
mov
daa
cmpsb
pop
adc
jl
ret
lcall
scas
cmp
repz
and
or
xchg
push
jae
mov
xchg
imul
mov
mul
lcall
test
sbb
pushl
push
movsl
jecxz
or
lods
push
jmp
movsb
lods
aad
mov
push
cld
push
pop
mov
ljmp
xor
out
adc
jns
add
out
int
daa
or
mov
ret
inc
jnp
repz
dec
xor
loop
out
cmpsl
jp
or
inc
in
mov
cmp
mov
fst
pop
cli
dec
mov
idiv
imul
mov
xor
popf
mov
les
sbb
push
jmp
lods
push
out
imul
lock
xchg
lahf
sub
mov
sbbl
ret
pop
je
out
test
cmc
xor
jl
xchg
or
mov
daa
mov
stos
lea
cli
adc
sbb
mov
rolb
sbb
lcall
out
cmp
xor
pop
cmp
test
psubw
mov
fidivs
xor
mov
pop
push
sbb
lods
or
xchg
dec
xchg
orl
pop
sub
inc
addr16
add
cmp
pop
ja
lcall
loop
xor
sarb
add
xchg
imul
jg
dec
imul
mov
daa
lock
push
fmull
push
testb
mov
inc
add
loop
test
ljmp
insl
lret
lret
mov
adc
mov
add
cmpsl
shl
int
test
ja
xor
push
jp
icebp
aad
aad
shll
popa
cmp
scas
mov
sti
int
daa
jg
and
test
sub
fs
mov
out
vpshld
adc
movsb
lods
scas
cmpl
js
mov
jae
xchg
aam
gs
vphsubbw
in
test
inc
dec
lahf
pop
roll
add
cltd
mov
lret
mov
sbb
ss
les
xor
xchg
push
pop
xor
pop
mov
add
push
pop
cmp
inc
mov
out
les
ficoml
pop
sub
repnz
clc
sub
call
xchg
cltd
and
mov
mov
dec
xorl
cld
mov
out
push
cvtdq2ps
cmpl
or
aaa
inc
mov
int
push
enter
clc
xchg
or
xorb
mov
jle
cltd
xchg
inc
dec
cmpsb
setle
adc
jb
cmp
das
fimuls
mov
jle
adc
mov
sub
aas
xor
dec
daa
fs
and
sub
inc
mov
popf
mov
xchg
scas
cld
jno,pt
rcrl
mov
lea
sub
test
mov
scas
out
sub
rorl
out
cs
in
pop
imull
xchg
lods
pop
jnp
call
lcall
dec
xor
fsubs
mov
fldenv
repz
fsts
mov
cmp
sbb
dec
adc
push
lds
and
push
mov
imul
xchg
add
ret
dec
mov
jp
xchg
jo
lds
xor
mov
pop
inc
xor
cltd
jg
xchg
add
jge
mov
xchg
test
dec
rcrl
dec
xchg
inc
lods
mov
cmpsb
mov
mov
mov
and
shll
adc
adc
mov
cmpb
ret
push
imul
inc
pop
sub
test
and
add
dec
out
addr16
ret
adc
cmp
mov
mov
or
adc
repnz
push
adc
push
push
mov
mov
mov
imul
sar
scas
movsb
mov
in
loopne
jb
lahf
repz
ja
xchg
dec
stc
rcl
cmpsl
ret
out
popa
in
sbb
imul
cld
dec
xchg
fwait
push
jmp
xchg
sub
orb
xchg
stos
mov
lret
icebp
clc
insb
ficomps
mov
addr16
ljmp
pop
imul
lods
stos
and
jge
or
push
scas
xchg
inc
pop
mov
adc
pop
popf
cmp
jg
fildll
lahf
pop
sarb
out
fmuls
xchg
sbb
pushf
cld
xchg
js
movsb
js
mov
outsl
mov
movsb
movsl
xchg
or
mov
mov
fisubrs
lock
or
or
cmpsb
test
or
add
loope
pop
sbb
das
mov
sub
adc
dec
aas
and
sub
mov
jno
push
mov
mov
in
sbb
mov
nop
push
insl
add
fcmovnbe
mov
pop
test
push
dec
pop
gs
out
dec
je
push
out
shll
enter
jl
push
pop
push
mov
fmul
test
insl
sbb
mov
ss
sbb
sbb
dec
xchg
cwtl
pusha
movsb
inc
jmp
rcl
mov
sub
in
mov
inc
or
mov
sub
pop
jg
push
push
fimull
mov
adc
cs
cmpl
mov
inc
das
in
jecxz
push
sub
cmp
je
and
ss
push
lods
cmpsb
sub
adc
out
sub
cmp
in
or
push
mov
cmc
inc
xchg
iret
test
mov
push
xchg
mov
add
push
pop
rcrb
mov
lret
cmpsb
xor
cmp
mov
adc
idivl
repnz
xor
xor
push
in
mov
in
pop
xlat
lahf
push
mov
sub
aas
jb
pop
adc
push
jmp
shlb
push
pushl
inc
fwait
mov
mov
insb
dec
push
rcrl
es
fisubs
and
stos
popf
imul
push
fwait
cmp
adc
xchg
pop
adc
pop
mov
lahf
sbb
arpl
sub
hlt
mov
push
mov
cmp
xchg
inc
xchg
mov
repz
jo
aas
repz
bts
sbb
pcmpeqb
pop
mov
scas
ds
xor
cmp
push
mov
enter
and
inc
push
push
nop
out
testb
enter
adc
cmc
jnp
icebp
lcall
lahf
jle
mov
jecxz
jl
jb
fldt
into
aam
and
outsb
sbb
inc
lds
and
jbe
mov
lock
or
mov
mov
call
daa
les
push
lods
ja
lret
loopne
push
lock
mov
ljmp
mov
mov
mov
repz
mov
fiaddl
sbb
clc
dec
xchg
mov
add
outsb
dec
mov
test
clc
stos
jae
movl
dec
mov
lods
mov
cmpsl
shll
cmp
mov
cmp
mov
jecxz
xor
push
mov
ljmp
mov
xor
lahf
mov
leave
inc
icebp
mov
or
mov
pop
mov
out
fistpl
out
xor
inc
mov
push
aad
inc
xor
mov
sarl
jno
fiadds
xchg
popa
mov
sub
xchg
stos
sub
aaa
std
or
pop
dec
push
clc
cmp
mov
dec
inc
movsl
and
ja
je
fsub
ficoml
add
add
xor
subl
ret
pusha
xchg
fstps
jmp
popa
sub
adc
loope
push
and
scas
jg
mov
xchg
jno
dec
push
push
decb
movsl
inc
movsb
daa
cmp
jmp
test
sub
nop
mov
mov
inc
outsl
int
mov
daa
jl
pushf
mov
cmp
les
inc
std
push
xchg
add
repnz
enter
jle
popa
inc
dec
inc
xor
cld
mov
adc
int
ret
test
fidivl
stos
rolb
mov
std
cmpsl
scas
pop
xchg
pop
adc
decl
dec
mov
push
lret
or
inc
cld
scas
daa
jb
sub
inc
sbb
out
movsl
ret
mov
daa
mov
aam
dec
mov
mov
sub
cs
out
jnp
cld
lods
je
or
enter
pop
dec
fidivs
pop
pop
push
xlat
inc
mov
inc
repz
stos
and
jecxz
mov
idiv
cmp
ficomps
in
dec
mov
lret
stos
mov
cmp
push
mov
icebp
pop
cmpl
mov
test
push
push
scas
sub
imulb
xchg
sahf
mov
pop
sti
cmp
cmp
inc
mov
sub
inc
cwtl
and
jae
pusha
sar
cmp
pop
xchg
ja
pop
divb
pop
imul
cmp
inc
daa
pop
nop
movzwl
fst
faddl
push
jae
dec
lock
jno
aad
aas
aaa
adc
stos
outsb
push
push
sub
or
jno
dec
or
popf
lret
and
inc
xchg
and
mov
push
cli
pop
add
push
cld
cmc
xchg
cs
loop
sbb
das
jae
mov
xor
mov
xchg
insl
add
cmp
pop
jp
add
mov
or
cmp
mov
fs
add
mov
dec
scas
js
sub
shrl
mov
movsb
mov
sbb
call
repnz
add
inc
movsl
movsl
outsb
sub
fs
jmp
cld
js
in
arpl
cmc
mov
cmp
sub
fcompl
nop
push
add
clc
mov
fstpl
push
and
repnz
ja
mov
xchg
mov
sarl
movsb
cmp
mov
aas
andb
bound
jmp
and
or
pop
or
inc
nop
div
xchg
mov
jns
stos
mov
push
arpl
popf
xchg
add
stos
cmp
sbb
in
dec
int3
push
scas
dec
jns
adc
jae
pop
int
jle
jne
push
mov
inc
add
add
push
mov
push
jge
aaa
pop
daa
mov
cmc
daa
push
fcmove
scas
cwtl
gs
mov
out
setae
add
lret
mov
cli
xchg
dec
popf
push
mov
imul
sub
cld
jo
mov
mov
xchg
subl
xor
imul
pop
in
cmp
stos
insb
ss
iret
xor
mov
dec
mov
div
repz
sub
repnz
mov
je
jle
and
jecxz
dec
jmp
jbe
xor
in
sub
inc
mov
cmp
stos
push
mov
xchg
pop
leave
push
aaa
jecxz
mov
xor
inc
push
inc
mov
mov
jns
pop
rorl
mov
int3
enter
mov
lods
and
lret
fucomi
fwait
ret
or
sbb
mov
push
test
dec
pusha
aam
sub
test
sub
out
in
jp
add
lds
push
xchg
pop
push
test
pop
in
test
out
mov
rclb
jae
sahf
arpl
sbb
cmc
xor
sahf
sbb
mul
mov
stos
push
outsl
lahf
or
in
call
jg
sub
xor
pop
out
cmp
or
arpl
stos
je
test
fs
aad
push
imul
add
and
adc
imul
pop
jno
push
and
out
mov
mov
fildll
iret
dec
bound
mov
add
jo
cli
mov
out
inc
leave
mov
sti
rcr
into
mov
jl
jae
lret
adc
or
sub
icebp
sti
lds
sub
bound
dec
fucom
pop
mov
mov
jne
enter
xor
or
je
and
imul
mov
push
mov
inc
fwait
mov
nop
int
incl
mov
sub
add
and
movsl
dec
repz
cmpsl
fldt
cmp
jl
cwtl
jnp
sti
mov
test
add
mov
lret
shlb
mov
cwtl
out
mov
adc
incl
sbb
fists
std
jbe
jns
pop
and
cli
mov
popw
xchg
test
cmpsl
fcomps
adc
push
arpl
nop
test
lret
xchg
mov
pop
int
add
sbb
jge
jb
dec
cmpb
dec
aas
test
and
mov
inc
test
pushf
pop
sarb
cmp
and
jno
popa
jns
les
jg
rclb
lcall
hlt
jbe
je
jne
cmp
adc
adc
sub
mov
mov
lcall
hlt
lret
testl
push
mov
jecxz
jl
shll
sahf
inc
jo
cmp
xchg
rcl
mov
cwtl
pusha
pop
push
mov
xor
shll
mov
imulb
out
pop
faddl
push
imul
pop
iret
inc
fldt
scas
xchg
xor
mov
popa
aaa
popa
les
pop
add
dec
adcl
dec
cmp
mov
mov
add
jecxz
lods
xor
call
repnz
roll
dec
imul
sub
into
mov
gs
mov
jecxz
jne
sbb
imul
leave
movups
lret
cmpsl
filds
xchg
or
mov
jecxz
jne
stc
arpl
cmp
inc
jbe
jae
cmp
shrb
je
outsb
ljmp
xorb
les
jp
inc
jnp
xorl
out
sahf
jmp
insl
jb
mov
xchg
icebp
mov
jb
inc
mov
test
inc
hlt
inc
sar
enter
in
fisubrs
aas
pop
mov
sub
pop
movsb
push
stc
push
and
lock
mov
mov
pop
ret
xlat
arpl
mov
jge
cmp
mov
adc
sub
bound
cmp
and
loope
inc
mov
mov
in
and
xchg
pop
mov
pusha
nop
ljmp
fadd
jge
mov
fdivs
int3
imul
stos
and
std
or
inc
movsl
fistps
lahf
mov
pushf
xor
loope
jb
daa
aas
dec
loop
jecxz
sub
clc
sarb
jo
fsubs
shll
inc
inc
cmp
and
cld
and
xchg
adc
jo
jg
sti
dec
mov
mov
in
mov
je
shrl
xchg
cmp
xor
pop
fistpll
je
xchg
jecxz
movsb
cmpsb
psubusb
sub
out
mov
xor
inc
lods
rclb
xlat
fistl
pop
shrl
adc
mov
enter
and
lret
mov
nop
adc
enter
lret
outsl
push
aas
mov
jb
enter
test
in
mov
ljmp
out
and
mov
ljmp
stc
arpl
push
pop
lds
push
jmp
inc
cmp
dec
mov
pop
push
add
fstps
xchg
cmp
mov
lods
sbb
lret
mov
pushf
xchg
sahf
cmp
mov
arpl
fnsave
jb
std
jle
add
fildl
icebp
or
xchg
push
bound
fwait
dec
sbb
packssdw
cltd
jge
xlat
sbb
mov
push
cmpsl
push
test
lea
push
inc
in
or
cwtl
aas
pop
mov
mov
jmp
sahf
mov
mov
mov
int
aam
aas
jmp
sbb
pop
lods
stos
xor
pushf
aaa
lds
adc
push
aas
sbbl
jb
mov
mov
in
or
push
test
inc
push
push
lods
dec
xchg
adc
mov
sub
lahf
subb
push
movsl
jmp
je
adc
inc
lret
adcb
dec
jge
imul
jno
jp
mov
pop
sub
repz
js
mov
xchg
dec
lahf
es
out
mov
push
sarb
icebp
xchg
cmp
and
mov
lret
addr16
movsl
aad
mov
inc
mov
cwtl
aad
mov
popl
out
mov
jne
clc
xchg
xchg
pop
shl
pop
idivb
pop
adc
dec
add
je
cltd
adc
out
jge
js
push
dec
sub
push
mov
das
adc
outsb
movsl
pause
inc
scas
adc
outsl
push
and
movsb
out
fldcw
testl
ret
push
jg
mov
jno
xor
imul
bound
icebp
aad
inc
adc
push
and
addb
jns
mov
jmp
sub
adc
mov
jp,pn
xor
dec
out
xchg
xchg
inc
mov
xchg
xor
clc
push
cld
mov
jecxz
scas
push
out
imul
loope
mov
shl
cmp
mov
dec
test
push
ljmp
mov
in
mov
xor
xor
mov
ficoms
mov
loopne
out
inc
out
adc
mov
and
outsl
shrb
fisubrs
inc
call
test
pop
test
mov
test
mov
aas
and
sbb
xor
and
cmp
and
add
add
pop
mov
ja
in
jne
pop
xchg
mov
inc
int
jl
mov
insl
mov
xlat
mov
push
andl
mov
mov
sbb
and
pop
mov
pop
or
insb
cmpsb
add
cmp
jle
inc
adc
sahf
dec
mov
call
jg
fcomip
dec
pop
sub
add
cmp
sti
aam
sub
fwait
sub
sbb
out
aad
pushf
roll
mov
dec
out
frstor
push
dec
push
movsl
cltd
fisubrl
pop
and
rcrl
sbb
mull
mov
test
jns
sti
xor
push
enter
cmpsb
mov
dec
jns
dec
in
dec
cmp
adc
inc
mov
cmp
lret
xor
mov
sbb
rcr
fisubl
mov
push
es
into
sbb
and
sbb
xchg
jmp
jp
mov
ss
iret
shl
sar
sbb
andb
js
dec
fcoml
nop
cli
adc
subl
cmpsl
mov
pop
icebp
mov
mov
push
pop
mov
scas
fdivrl
enter
test
xchg
cmc
and
lods
jbe
dec
js
inc
sahf
adc
jbe
jmp
pop
xchg
insb
dec
jo
mov
les
push
adc
cmpsl
xor
test
aad
ss
push
fisttpll
mov
int3
push
add
mov
push
out
add
mov
shlb
sub
cmp
iret
push
daa
cwtl
and
les
pushf
repnz
loope
jae
les
mov
pop
add
xchg
adc
mov
lock
or
test
adc
fwait
jno
or
jno
rcrl
stos
shrl
int
or
inc
sub
jb
sbb
pop
cld
add
enter
sarl
es
push
out
mov
int
lahf
jo
mov
in
mov
pop
add
or
gs
push
xor
inc
rcrb
xor
mov
inc
push
jne
addr16
mov
nop
rcll
add
jne
mov
cmp
add
test
and
inc
mov
pushf
adc
js
xchg
sub
cmpb
xchg
lock
mov
pop
cli
mov
arpl
cmp
inc
je
dec
xchg
into
mov
ds
adc
push
repz
inc
xchg
mov
movsl
loop
mov
add
xchg
fnsave
sti
out
in
scas
dec
mov
push
dec
xchg
cli
lea
push
in
push
pop
inc
xor
xchg
sbb
lods
push
mov
in
xchg
lock
andb
aam
inc
aas
ds
rorl
clc
fucom
test
cmpsl
jp
dec
add
stos
push
iret
pop
pop
add
mov
xor
lock
mov
insb
lahf
pop
jne
jmp
jnp
lods
xor
sub
mov
sub
aam
cwtl
pop
loopne
mov
bound
flds
shlb
jl
cs
cmpb
dec
cmp
adc
cltd
mov
mov
xchg
das
sbb
ss
out
arpl
out
jb
loope
jg
mov
pushf
lret
mov
clc
stc
xor
cmp
jns
xor
pop
cli
xchg
imul
push
inc
sahf
les
stos
and
pop
inc
dec
movsb
mov
out
and
movsb
test
cmp
adc
lds
gs
pop
test
test
fstpl
xchg
adcb
sub
pop
call
adc
mov
cwtl
jle
adc
xor
decb
adc
sub
loope
add
fcmovnu
mov
push
jno
jle
data16
lods
cmp
adc
inc
loope
mov
aas
movsb
mov
loope
fcmovb
aad
sub
jge
fsubl
sbb
ror
shll
incl
mov
mov
dec
cmc
lret
sub
cltd
xorb
sar
xchg
inc
std
push
stos
jne
jmp
fdiv
cmp
arpl
fsub
sub
repz
aad
insl
popf
mov
and
repnz
cmp
pop
loopne
mov
ror
in
pop
scas
mov
cltd
mov
jno
out
bound
xchg
scas
in
out
aaa
stos
xchg
loop
outsb
mov
jle
sti
cmp
xchg
jae
mov
je
ror
sbb
int
jnp
into
cmp
add
lcall
cltd
lods
mov
lahf
iret
mov
pop
fwait
ljmp
pop
es
clc
push
pop
sbb
push
xchg
aaa
repnz
jl
push
mov
push
adc
lret
xor
or
test
divb
add
cmp
les
sbb
push
fwait
jno
jle
lds
ret
out
sarb
into
jg
inc
inc
out
mov
lea
outsl
or
xor
repz
xchg
scas
scas
stos
das
ss
adc
mov
jb
dec
mov
xchg
jge
test
sbbb
les
pusha
dec
inc
xchg
ret
sbb
xor
add
jmp
ret
lret
test
out
shrl
mov
nop
dec
or
lahf
es
out
mov
icebp
outsb
xchg
pop
xchg
ficomps
das
popf
mov
mov
aas
xchg
adc
cmp
inc
xchg
add
lret
fcompl
lods
dec
frstor
out
pop
inc
inc
push
aas
dec
adcl
call
idivb
fidivrs
repz
test
push
add
mov
adc
testl
fiadds
adc
mov
jns
sbb
rolb
or
sti
sub
mov
ds
push
push
movsb
addl
jg
jecxz
repz
pushl
mov
jecxz
addb
push
and
jno
inc
mov
fadds
sar
push
outsl
scas
xlat
scas
in
sub
movsl
lret
or
dec
std
repnz
push
loopne
dec
addr16
test
ljmp
sar
pop
jg
das
fidivrs
dec
pop
xchg
fldenv
arpl
add
sbb
jle
mov
sub
loopne
cmp
dec
jne
xchg
adc
out
pushf
mov
mov
and
int3
int3
shrb
aas
mov
xchg
add
test
sbb
sub
idivb
sbb
and
mov
lcall
dec
inc
insl
mov
mov
mov
sub
lods
loop
imul
push
sar
add
movsl
repnz
fiaddl
or
popf
jb
insb
stos
shrb
jmp
add
fwait
stos
mov
out
jbe
lret
scas
mov
mov
sbb
addb
mov
aaa
lock
insl
cs
inc
sbb
loop
pushf
inc
int
scas
xchg
out
xor
adc
adc
xchg
imul
outsl
xchg
mov
add
pop
mov
shlb
aas
mov
cmpsb
clc
pop
shr
inc
adc
cmpsl
imul
mov
mov
adc
push
sbb
or
push
xorb
movsb
lret
adc
shl
cmpl
lea
sbb
int3
xabort
movsb
lods
and
mov
fwait
mov
lods
push
xchg
adc
jae
js
fdivs
and
add
jmp
orl
mov
les
mov
mov
clc
sub
jo
push
inc
jle
push
aam
outsl
jb
adc
xchg
add
jle
fsubrs
ret
mov
addr16
xchg
mov
clc
icebp
xchg
aaa
daa
outsl
sub
push
sarb
sbb
aaa
inc
pop
mov
inc
pop
mov
inc
mov
outsl
ror
int
mov
or
movsl
popf
push
movl
cli
xchg
fistpll
cmp
sbb
cld
inc
es
repnz
push
jmp
sbb
dec
pushf
dec
loop
pushf
addb
cld
lcall
dec
and
pop
cld
xor
lcall
cmc
movsl
xor
cmpsl
mov
adc
icebp
out
dec
mov
lcall
cmc
sarl
sbb
fiadds
jnp
mov
xchg
cmpsl
xchg
or
into
lret
leave
sub
mov
cmpsl
jge
jne
or
sub
dec
jmp
test
jbe
inc
xchg
repz
rcrl
test
sbb
push
push
stos
test
repz
push
cmp
orb
fs
add
mov
mov
mov
cld
push
pop
and
out
cwtl
es
and
cltd
orb
adc
inc
jg
pop
in
ds
jno
jl
adc
mov
pop
pop
iret
icebp
pop
jbe
lcall
fisubl
push
pop
push
jno
movsl
push
test
out
lock
or
ds
leave
dec
xchg
das
and
movb
sbb
push
and
add
outsb
aaa
lret
push
jmp
and
lods
push
and
or
jmp
and
jecxz
mov
mov
dec
ror
pop
dec
nop
cwtl
aas
data16
jnp
push
pop
push
jne
cmpsl
ret
in
out
cmp
dec
sub
cmp
lret
stc
dec
jae
mov
mov
scas
cmp
jb
inc
mov
in
mov
mov
xor
jnp
push
rorb
inc
aad
xchg
pushf
pop
pop
xchg
xor
ret
pop
mov
push
mov
stos
mov
ja
loop
or
jno
xchg
cmp
pop
fwait
notb
test
mov
mov
inc
movsb
fiadds
shr
dec
outsb
mov
jnp
inc
mov
pop
cmc
mov
adc
dec
pop
xchg
decl
fdivs
cs
xchg
xchg
in
cmp
cmp
ljmp
arpl
aas
imul
xor
fadds
movsb
or
lds
mov
adc
stos
mov
dec
push
fnsave
sbb
xchg
mov
loope
dec
jae
jge
xor
mull
aas
sarb
xchg
test
xchg
mov
inc
std
iret
sbb
inc
bound
and
adc
dec
or
loope
adc
add
push
cmp
jl
in
sarl
mov
aas
dec
xchg
adc
out
and
cmc
hlt
dec
mov
inc
scas
dec
dec
fdivs
out
rorl
or
and
sub
xchg
lret
iret
add
sub
stos
inc
pusha
push
sbb
push
loope
push
popa
lret
je
cmp
std
pop
cltd
insl
or
dec
mov
mov
mov
in
jb
rcrb
repz
bound
scas
js
js
dec
inc
call
iret
inc
in
hlt
xor
movsb
mov
pcmpgtw
dec
or
push
mov
pop
inc
cwtl
xchg
scas
lret
fwait
xor
cmpsb
mov
push
jb
mov
jns
enter
nop
push
xchg
and
es
add
fisubrs
push
jmp
rsqrtps
imul
mov
cmp
shlb
add
xor
fstpt
lods
clc
int3
js
addl
add
lahf
adc
jns
mov
call
rclb
aad
int3
outsb
stc
aam
jle
das
jge
xchg
fwait
jo
mov
and
xchg
out
mov
xchg
or
mov
adc
pop
jg
mov
xchg
and
loop
mov
je
test
xchg
mov
scas
mov
jecxz
xchg
das
xor
ja
push
mov
fwait
adc
dec
std
mov
mov
leave
push
dec
push
out
xor
ja
xchg
loop
roll
add
jmp
andb
ljmp
sbb
jp
adc
andb
stc
inc
inc
or
cmp
sbb
dec
nop
cmpsb
jecxz
cmp
movsb
into
cld
adc
push
sub
je
xchg
mov
mov
jo
sar
gs
das
mov
xor
sbb
xchg
jmp
lods
ljmp
repz
rcrl
push
dec
push
hlt
fnsave
inc
sbb
aaa
mov
pop
test
push
cmp
mov
and
mov
lcall
jmp
sub
lahf
add
sub
inc
push
jl
stos
data16
adc
hlt
cwtl
ljmp
out
orl
pusha
sbbb
push
mov
mov
or
jg
ret
cmp
inc
dec
jecxz
stc
adc
xchg
imul
or
cwtl
lcall
lret
xchg
cmpsl
insb
lock
dec
fsubrs
fistl
fisubl
lcall
insl
test
js
arpl
lret
mov
inc
and
fstps
arpl
cmp
repz
lret
test
insb
rorl
scas
push
sahf
movsb
push
loope
rorl
push
int
push
je
add
mov
adc
mov
mov
cmp
aam
movsl
aas
or
test
push
mov
add
cltd
mov
jge
xchg
jge
cmpsb
mov
popl
fisubrs
mov
clc
testl
pop
in
mov
and
movl
push
xor
in
movsl
lahf
sub
adc
mov
int
lods
bound
add
scas
cmp
sbb
test
push
jo
pop
mov
aaa
inc
cmp
aad
mov
push
lds
sbb
jo
dec
inc
ja
jl
call
jno
fldcw
cs
roll
cs
js
mov
bound
mov
dec
mov
dec
sahf
pusha
andl
pop
pop
mov
push
int3
push
ljmp
cmp
cmpb
movq
insl
mov
cmp
inc
and
lock
cmpsb
push
mov
add
test
call
or
inc
mov
cmp
or
mov
jmp
jmp
shll
cmc
gs
mov
sbb
lcall
jmp
loop
pop
popf
imul
push
jmp
xchg
and
mov
mov
mov
push
dec
mov
add
and
xchg
jecxz
cmp
mov
and
xchg
inc
xor
loopne
pop
xchg
ret
xlat
xor
gs
and
aad
jl
sub
call
pushf
test
mov
testb
lds
fldenv
mov
std
push
add
mov
mov
int3
fldcw
insl
sub
aaa
roll
jnp
daa
mov
push
xchg
jb
jbe
sub
xlat
mov
mov
sbb
shll
out
sbb
fdivs
sarb
in
add
repz
cmp
and
stc
repz
lcall
mov
stos
fucomi
sbb
flds
inc
jge
dec
push
or
aas
lock
and
pop
imul
stc
inc
adc
and
jle
add
xlat
push
leave
or
push
jo
and
outsl
fcmovb
jl
leave
mov
fsubrs
fwait
inc
mov
jl
mov
lcall
dec
xchg
and
sub
and
aaa
inc
dec
xor
sbb
inc
add
jns
out
arpl
pop
inc
in
cmpsl
ffree
fldt
mov
and
inc
or
test
ss
cmp
and
push
push
and
or
pop
gs
out
test
outsl
data16
fcompl
or
add
cmp
test
repnz
je
faddp
mov
lcall
insl
sub
lods
lcall
fsts
cld
sub
xorl
mov
fadds
pop
push
xor
xor
mov
xchg
lret
les
loope,pt
sub
sub
cmpsb
adc
testl
daa
rcrl
jbe
xchg
pop
sbb
std
cmp
call
sub
sub
pop
inc
mov
in
daa
cmp
loope
adc
sahf
mov
lods
push
jge
gs
push
in
iret
and
inc
jmp
fs
aad
mov
fcompl
xchg
mov
call
aaa
shl
adc
int3
sbb
insl
test
das
fdivl
jl
or
and
sub
jle
sub
mov
cld
jecxz
push
cmp
sbb
cmpsl
inc
xchg
sbb
jbe
call
lds
fildll
dec
mov
jb
mov
jns
jp
jl
outsl
lods
adc
inc
xchg
test
lcall
inc
jns
mov
lret
filds
adc
pop
add
mov
jecxz
mov
loope
cmpsb
cmp
imul
dec
dec
xchg
cmpxchg
in
test
sub
adc
mov
popf
xor
push
or
jl
pop
pop
pop
sub
in
sub
stos
push
or
or
or
or
leave
test
in
loope
aam
call
cltd
adc
movsb
rcrb
movsb
or
into
mov
sub
inc
ror
cmpl
gs
jmp
clc
jp
xor
les
pop
inc
mov
dec
aad
stos
xchg
addl
cmp
out
add
pop
push
mov
repz
iret
push
jnp
das
cmc
mov
jl
push
scas
cld
movsl
cmpsb
fdivl
jp
ljmp
xor
cmp
or
mov
nop
out
outsl
sub
clc
lds
rolb
cmp
cwtl
add
cwtl
lcall
sbb
lods
or
mov
mulb
xchg
pop
shrl
sbb
out
mov
rcrl
movsb
pop
adc
mov
out
inc
add
int3
sbb
movl
sbbl
pop
inc
mov
jmp
adc
sbb
iret
loope
jnp
sub
mov
add
adc
into
in
mov
lcall
xlat
fstl
fimuls
cmp
jne
test
push
xchg
imul
sti
push
mov
pop
movsb
cmp
aas
pop
mov
das
pusha
inc
fisubrs
inc
ljmp
test
cmpsl
inc
aas
inc
mov
inc
push
push
cli
mov
sub
xor
jp
out
xchg
push
mov
aaa
xchg
mov
aam
cmp
and
rolb
and
daa
daa
jnp
mov
xchg
fcoml
shl
adc
xchg
movsb
mov
not
push
lods
jmp
int3
pop
out
mov
mov
jns
mov
fsts
icebp
add
mov
and
mov
enter
and
gs
and
and
jns
scas
jbe
ficompl
test
mov
cmp
fmulp
mov
int3
insl
xchg
pushf
iret
push
popa
mov
xchg
xor
lcall
aad
mov
mov
add
ds
out
out
jp
mov
in
lcall
mov
push
in
outsb
or
outsb
and
push
push
add
or
inc
push
leave
push
mov
test
jl
mov
lock
push
popf
movsb
cmp
jae
lods
inc
push
imul
jno
and
push
test
pop
loope
mov
sub
movsl
call
jecxz
or
cmp
or
xchg
add
push
cmp
xorl
cmc
pushf
cli
out
insb
outsb
xchg
mov
push
jp
repz
or
js
ja
roll
or
xchg
shlb
dec
mov
jge
xor
rcrb
mov
xor
test
pop
cwtl
fld
shl
mov
dec
dec
shll
pop
push
adc
mov
pop
dec
and
or
addr16
xchg
insl
sub
push
cld
xchg
gs
out
inc
mov
fwait
push
popa
fwait
lea
or
add
bound
jp
movsl
cmpsb
push
lds
addr16
dec
inc
pop
das
adc
addr16
addr16
aas
bound
add
mov
dec
inc
and
sub
push
fisubrs
sub
scas
mov
ret
insb
outsl
in
call
lret
out
mov
clc
xchg
xlat
cld
mov
scas
xchg
repz
pop
int3
in
sub
dec
in
lcall
shll
or
scas
cmpsl
mov
insb
stos
das
popa
cmpsb
incl
fucomi
sti
xor
jmp
or
jns
ret
push
es
shr
xor
jl
mov
mov
or
sub
adc
xchg
mov
shlb
ljmp
jl
out
jb
pop
add
cld
cmc
repz
aaa
xchg
popf
enter
mov
mov
mov
subb
lcall
inc
jg
adc
pop
aam
pop
cld
out
ss
out
xchg
xlat
call
movsl
jge
mov
or
push
xor
int
jno
xchg
cmp
bound
pop
ja
pop
loope
mov
pop
cmpsb
xchg
dec
adc
push
xchg
pop
fsubr
clc
xchg
mov
mov
jecxz
call
dec
mov
dec
or
std
pop
scas
sub
mov
push
mov
add
ss
ss
sbb
push
cwtl
jne
adc
push
repnz
in
out
insl
call
sbb
movsl
fdivrs
fdivp
gs
rcl
mov
test
sbbl
mov
mov
cli
mov
push
jnp
mov
sbb
test
add
jl
nop
jge
or
test
or
xor
mov
sub
aam
cmp
xchg
pop
inc
ds
into
mov
mov
stc
pop
iret
adc
scas
ljmp
pushf
mov
call
insl
das
rorl
in
dec
adc
imul
lcall
xor
mov
adc
jmp
sub
jns
mov
push
pop
sbb
hlt
xlat
pushf
and
lea
mov
inc
cs
ljmp
cmp
js
lret
notb
enter
mov
inc
push
ja
std
xor
jg
or
mov
push
imul
test
push
fildll
xor
aad
mov
mov
sbb
xlat
enter
add
push
shlb
jmp
xor
aam
jmp
mov
jae
fxch
arpl
sahf
repnz
push
adc
lcall
pushf
ret
imul
adc
movsb
inc
loope
repnz
fcmovb
ror
cli
add
push
sub
lahf
test
xor
clc
sub
daa
inc
lock
out
out
out
mov
imul
push
into
adc
push
xchg
xchg
bound
fimuls
mov
pushl
dec
lea
pop
test
dec
cli
jge
dec
je
jp
xor
lock
jae
outsl
sub
cmpsb
xor
adc
push
addr16
loop
stos
sti
shrb
push
jmp
jecxz
and
adc
das
in
push
psubsb
fcoml
mov
adc
sub
inc
dec
into
and
or
fsubl
xlat
leave
fs
sbb
pusha
imul
push
jg
test
xor
xlat
and
jnp
mov
cmp
in
mov
push
sub
into
sbb
and
xor
loope
xor
xchg
fidivs
movsb
fs
ret
sub
in
adcl
pop
fs
scas
enter
dec
or
repz
inc
test
test
and
adc
arpl
out
movsb
sbb
xchg
cwtl
int3
jns
pop
or
in
popa
pop
mov
lea
addr16
push
cmp
fstpt
pop
pop
pop
push
lahf
mov
icebp
fstps
jge
dec
push
push
push
mov
inc
int3
push
push
test
xor
mov
imul
jle
push
push
sbb
and
into
outsb
jge
movsb
ret
xlat
or
or
and
fimull
xor
lahf
mov
mov
lret
push
mov
xchg
jo
or
sub
call
or
inc
popf
cltd
outsb
insb
jg
loopne
gs
int
test
or
aas
lds
out
and
notl
out
leave
sub
arpl
loope
pop
clc
jmp
jo
js
repnz
push
jecxz
into
fidivl
dec
mov
mov
lock
mov
and
hlt
addr16
sub
dec
pop
cmp
push
sbb
lcall
jecxz
gs
jns
ror
pop
mov
mov
pop
xchg
mov
sub
rcrl
dec
int3
pop
int
xor
pop
mov
pop
inc
in
out
xchg
dec
or
pop
testb
mov
adc
js
dec
jecxz
aam
out
mov
jae
sub
dec
notb
fwait
jno
and
fmul
xor
mov
dec
sub
sbb
mov
sbb
scas
dec
sub
dec
lock
cmp
add
adc
int3
das
add
push
in
shll
stos
aaa
xchg
inc
ljmp
out
cli
push
and
cmc
imul
push
out
add
push
pop
xchg
pop
pop
test
subb
mov
pusha
mov
cmc
mov
test
in
mov
loopne
push
adc
mov
sbb
cli
mov
mov
leave
in
push
loop
dec
pop
push
mov
jle
dec
push
movb
adc
jbe
dec
cmp
jno
and
mov
mov
push
dec
lcall
ror
jl
cmp
pop
jle
dec
add
shll
test
rcrb
mov
jg
and
jbe
std
jmp
ret
mov
mov
stos
ds
pop
jne
or
mov
dec
cld
add
mov
sbb
add
inc
int
add
pop
leave
sub
xchg
imul
sub
mov
test
jge
cmp
lods
hlt
push
int3
popa
out
sbb
add
jno
test
inc
inc
andl
sbb
out
pop
test
xor
dec
repnz
movsl
mov
mov
jnp
decb
cmp
fcompl
push
jp
aaa
in
mov
cmp
pop
test
fwait
jge
stos
scas
and
dec
out
add
cli
xor
jnp
push
pop
subl
leave
xchg
jno
mov
dec
andl
push
dec
ds
adc
mov
push
stos
fs
stos
fbstp
pop
cli
out
mov
repz
loop
cmp
movsb
or
in
sarl
daa
out
dec
hlt
inc
xchg
fiaddl
shrb
adc
sbb
jns
mov
cltd
int3
loope
sahf
aad
xchg
imul
sbb
add
add
stos
xchg
xchg
icebp
pop
inc
or
mov
lea
cs
mov
addl
pop
sbb
ds
xacquire
cmp
or
shlb
mov
sub
je
pusha
xchg
sbb
repz
lds
adc
sbb
xchg
jg
cwtl
fstps
lret
mov
dec
icebp
add
sbb
cs
sub
dec
mov
dec
sub
inc
sti
push
jns
mov
jnp
push
adc
fcmovnu
push
mov
mov
xchg
jbe
in
int3
mov
and
cmpl
clc
notl
cwtl
dec
xchg
push
pop
or
or
dec
sbb
cs
mov
adc
out
and
in
mov
loop
es
sub
mov
add
push
dec
or
xlat
loope
xchg
sbb
xor
push
mov
mov
dec
mov
add
in
mov
xchg
inc
aad
dec
xor
notb
mov
mov
xchg
sbb
mov
inc
ds
ficoml
adc
ss
mov
push
mov
iret
sbb
add
cmp
xchg
push
jmp
cmp
jae
scas
xchg
jns
inc
cli
dec
add
dec
jbe
lds
pushf
inc
fwait
lret
xor
arpl
or
jne
cmp
test
or
ds
pop
sub
ss
adcl
int
nop
jg
mov
and
add
sbb
in
in
daa
jnp
xor
jno
clc
cwtl
pop
pop
jmp
cs
push
jecxz
inc
in
inc
std
dec
mov
test
cmp
mov
iret
es
test
rolb
mul
lods
inc
dec
push
and
push
arpl
loop
aas
mov
insb
inc
loopne
rcrb
lea
and
push
addr16
insl
push
out
mov
repz
movsb
repnz
sbb
dec
dec
fimuls
add
je
and
push
in
add
fdivl
adc
adc
xlat
popf
call
out
adc
rcrb
test
mov
int3
lret
scas
jl
push
or
scas
pop
lods
in
fwait
jns
out
iret
push
in
pmaxub
push
xchg
mov
fldenv
add
aam
sbb
sbb
sbb
lea
lret
and
cli
inc
dec
sbb
push
jmp
pop
icebp
jge
pop
jno
lcall
pop
pop
mov
add
rol
push
push
jne
addr16
lahf
push
rol
movsb
dec
mov
push
or
repz
lea
sbbl
in
andl
sbb
clc
call
xchg
cmp
outsb
push
sub
hlt
mov
push
daa
and
mov
mov
push
push
test
xchg
lret
cmp
lods
fisttpl
pop
aam
add
mov
sahf
push
jae
scas
and
shl
mov
int3
data16
jg
pop
in
cltd
inc
rcrb
jns
cwtl
pop
and
jae
cld
dec
jnp
pushf
rcll
jnp
adc
mov
dec
or
xlat
out
cmp
sahf
subb
push
lret
mov
and
pop
aad
and
push
stos
pusha
jle
stc
movsl
pushf
pop
ljmp
jle
cmp
imul
inc
sbb
leave
mov
xor
mov
xor
add
adc
add
dec
mov
xor
or
jp
adc
adc
aam
stos
pop
xor
lods
es
dec
out
xor
add
pushf
fwait
inc
jp
ret
pop
cmp
frndint
shl
hlt
inc
out
xchg
cmp
xchg
imul
adc
mov
pop
mov
fs
in
inc
outsb
dec
xor
test
mov
cmp
or
and
dec
sarb
lcall
lea
imul
jmp
push
fistps
cmp
dec
fdiv
imul
data16
test
push
cmp
inc
pop
sbb
and
push
pop
mov
lahf
bnd
ds
inc
sbb
movsb
xchg
add
xchg
add
mov
in
mov
repnz
insb
fst
icebp
mov
decb
cmc
inc
fnstenv
pusha
addb
ja
pop
rol
add
xchg
stos
stos
enter
cmp
mov
cmpsl
push
xchg
pop
pop
lahf
mov
aas
scas
gs
adc
xchg
pop
xchg
inc
hlt
cltd
cmp
daa
loope
xlat
imul
nop
jne
jle
dec
movsb
test
jmp
aam
jnp
xor
mov
jno
popa
aaa
daa
lea
mov
push
mov
fsubrs
adc
xlat
ljmp
sbb
cmp
inc
mov
lods
and
loop
mov
imul
inc
adc
lcall
mov
rclb
jo
mov
adc
gs
icebp
jno
mov
xor
testl
inc
daa
fidivs
or
mov
push
out
and
pop
daa
out
add
int3
out
and
add
mov
mov
das
iret
mov
jl
outsl
bound
sub
es
and
cmp
test
in
in
das
dec
mov
mov
mov
cmp
clc
sub
sti
cli
jb
fwait
lea
add
push
mov
adc
or
mov
pop
lcall
cli
lret
cwtl
and
mov
fstpt
pop
sbb
sub
mov
xor
cmp
adc
push
adc
push
or
push
fs
dec
scas
ret
icebp
xchg
mov
and
push
mov
xchg
dec
or
add
int
dec
sti
fwait
adcb
cmpsl
out
xor
xchg
or
sbb
cmpsb
sbb
xor
cmp
hlt
jg
mov
out
rorl
push
inc
insl
push
int
xor
gs
test
in
stos
stos
lods
movsb
fbstp
jae
ds
loopne
push
rcrl
addl
call
mov
jne
xchg
cmp
add
enter
dec
push
add
sar
dec
lods
jmp
int
sbb
into
xchg
dec
or
add
sub
out
dec
xchg
add
xchg
shl
ja
es
fidivrs
jp
rorb
and
dec
fcmovnb
sahf
hlt
sub
das
out
nop
movaps
sub
lods
test
or
and
es
sti
jns
mov
insb
sub
dec
popa
pop
sbb
dec
xchg
pop
push
movsl
mov
sub
xchg
stc
xchg
out
jmp
outsl
mov
in
data16
add
enter
subb
stc
add
or
xchg
outsl
dec
call
mov
es
xor
inc
hlt
xor
jl
dec
into
xor
scas
testb
mov
dec
sti
call
sti
jae
negl
jbe
aas
pop
mov
out
or
sahf
and
push
lret
cmpsl
inc
pop
push
sbb
rolb
scas
dec
adc
xor
push
scas
pop
push
jl
inc
int
insl
xchg
or
mov
sub
and
and
pop
lea
mov
lahf
stc
sub
xor
push
rorl
lds
jg
jl
sbbl
rcl
cmpsl
mov
and
mov
adc
xchg
shll
fcmovne
je
int3
mov
sti
mov
ljmp
add
cld
jge
or
sub
stc
fldenv
sub
adc
insl
aas
movsb
pop
stc
repnz
test
push
test
test
pop
cmp
lea
loope
jge
sti
clc
lea
jecxz
cltd
leave
int3
pop
mov
loope
cmp
inc
mov
jae
into
fmul
and
adc
pushf
and
or
sub
iret
xor
scas
cs
repnz
std
mov
pop
loop
jnp
pop
ss
mov
gs
xchg
pop
mov
or
decl
inc
lods
dec
add
test
sub
in
test
out
es
popf
in
xor
mov
popf
mov
cmp
xor
jbe
popf
xor
inc
out
das
mov
pop
jmp
mov
xlat
aas
subb
inc
lret
lock
push
cmp
push
pop
add
cli
add
sbb
repz
and
decb
fcomps
sbb
sbb
jnp
pop
jns
in
movsl
popw
push
xchg
push
jp
adc
movb
sbb
stos
mov
movsb
shlb
iret
xchg
cld
outsl
test
hlt
push
fmul
stos
icebp
sub
test
int3
pop
mov
in
ss
test
push
jecxz
gs
inc
sbbl
lret
push
addr16
dec
addr16
fsubl
push
lcall
xchg
or
fistpll
inc
push
int3
inc
rcrw
jmp
jns
xorb
or
sub
xor
in
sbb
and
sub
mov
mov
js
mov
dec
aad
mov
sbb
enter
imul
xor
das
shll
mov
aas
pmovmskb
fistps
enter
sub
ja
dec
test
insb
jae
or
ds
hlt
scas
jne
dec
in
aam
pop
pop
adc
sbb
pop
inc
mov
test
xchg
xor
inc
xorl
pop
ds
and
int
xchg
pop
fchs
fneni(8087
adc
cli
jmp
js
or
cmc
add
inc
cld
mov
lds
inc
icebp
cmp
imul
dec
and
out
or
xorl
sarb
push
mov
je
xlat
fnstcw
stc
sub
loop
dec
int3
adc
test
inc
push
add
ja
in
out
imul
cmp
insl
inc
cli
in
or
pop
fnstcw
adc
test
dec
dec
jb
cmp
ljmp
addr16
push
push
into
pop
sbb
gs
add
and
dec
dec
and
movsb
pop
sub
inc
and
hlt
push
dec
leave
xor
mov
js
jmp
pop
push
sbb
in
loope
jmp
cli
sbb
cmpsl
cmp
jl
xor
or
jns
imul
popa
repnz
rolb
movsl
loopne
dec
ret
or
jb
call
movsb
mov
scas
stc
stc
xchg
enter
lret
mov
js
mov
mov
mov
pop
mov
testb
sbb
loope
push
cmp
mov
jge
inc
xlat
addr16
and
jb
jge
or
push
pushl
xchg
lods
and
cld
jo
xor
and
sbbb
jno
fdivrs
addr16
stos
pop
add
mov
mov
lahf
pop
call
cmp
cmpsl
push
clc
inc
mov
and
ret
pop
mov
inc
data16
or
lods
mov
cmc
pusha
xchg
pop
pop
jle
mov
push
sbb
pop
imull
repz
dec
mov
or
inc
pop
subl
jno
jno
scas
rcrb
mov
adc
mov
mov
aam
mov
sbb
push
jnp
pop
push
xchg
mov
push
ljmp
push
ficompl
fnsave
cmc
fidivrs
pop
jge
insb
addl
inc
pcmpeqw
mov
sub
fwait
push
lahf
mov
lods
xchg
subb
and
xor
adc
fcompl
daa
ret
imul
scas
nop
cmpsb
in
push
push
imul
sahf
sub
fistpl
iret
pop
add
push
sbb
das
dec
and
cs
and
or
repz
shlb
mov
ds
jp
scas
nop
xor
mov
ja
icebp
jno
sbb
fimuls
adc
mov
orl
into
or
ret
lret
mov
inc
jl
dec
lea
jno
or
icebp
push
jae
xor
popa
cmp
lods
cmpsb
add
fistpl
outsl
cmp
test
cmp
out
shll
push
ja
lret
hlt
push
adc
movsl
fcmovnu
xchg
mov
mov
sub
sti
shll
fstsw
xchg
and
xchg
push
pop
dec
aas
sbb
scas
mov
jnp
xchg
push
out
iret
cmp
add
lret
dec
cmp
mov
popf
mov
std
addr16
loope
xchg
ljmp
inc
rol
hlt
jle
pop
jnp
aad
xchg
in
xorl
dec
ret
test
fdivl
mov
loop
push
subb
dec
add
int
shll
inc
and
push
mov
jg
cmc
sbb
aaa
jne
rcll
call
lea
sti
jns
jg
sub
loope
xor
add
adc
mov
lret
mov
movsb
and
fdiv
fs
mov
test
aam
stos
mov
mov
das
ds
sbb
popf
pop
and
mov
icebp
cmc
mov
lret
dec
in
jg
leave
sub
fcompl
int
fistpll
inc
add
cmpsl
out
pop
push
inc
mov
fstpt
aaa
imul
sub
jg
lcall
data16
mov
cli
ss
ja
popf
cmc
in
lcall
popf
mov
fistl
lret
addr16
pusha
lahf
enter
or
das
imul
call
call
add
dec
dec
cli
adc
push
push
push
add
mov
cmp
loopne
cmc
aaa
or
mov
mov
les
pop
ret
or
cmp
pop
pop
adc
inc
cld
repnz
dec
jne
movsb
cmp
pop
loopne
mov
sbb
or
xchg
dec
iret
mov
ljmp
add
inc
dec
clc
js
sbb
mov
dec
movsb
call
dec
outsl
iret
lcall
push
sti
push
cmp
mov
clc
outsb
stc
inc
push
mov
push
mov
gs
add
inc
xor
enter
cltd
push
fsubrl
std
clc
icebp
ljmp
fwait
rorb
add
jno
or
jns
push
mov
inc
idiv
mov
loop
xchg
or
lcall
and
test
push
cmp
dec
gs
mov
mov
cld
mov
sbb
fidivrs
mov
add
jecxz
fimull
in
aaa
stos
xchg
cwtl
push
lret
sahf
mov
xchg
arpl
test
push
iret
sbb
fmull
pop
pop
imul
and
popf
jbe
sub
adc
mov
mov
aad
xchg
mov
ja
add
or
add
or
mov
lahf
cltd
or
rclb
mov
cmp
sub
sub
jns
and
jecxz
or
loop
test
add
out
test
mov
mov
fisubl
hlt
pop
mov
push
xchg
call
lret
xor
sub
sub
inc
jnp
xor
mov
test
jmp
add
xor
pop
cli
inc
or
scas
aam
movsb
mov
mov
push
pop
xchg
and
out
and
cwtl
mov
or
sbb
mov
mov
outsl
xor
sub
cltd
into
int
jbe
jl
js
xor
sti
or
push
mov
jnp
adc
test
std
stc
mov
cmp
gs
pusha
add
jno
call
mov
movb
sbb
sub
mov
das
out
sbb
pop
dec
add
push
xchg
shrb
sub
sub
repz
dec
adc
jo
es
std
iret
mov
adc
add
fwait
nop
mov
fs
sbb
adcb
das
xchg
mov
dec
cs
pop
push
or
fsubs
mov
int3
jae
jb
incb
or
fstpl
lods
inc
and
stc
lea
or
push
mov
or
ret
mov
cmpsb
fs
bswap
lea
jecxz
push
pop
les
sbb
lods
shlb
fistl
imul
fs
pop
xchg
ficoms
lahf
add
add
mov
xor
jno
mov
add
sti
shlb
jmp
cwtl
jl
js
es
enter
rcll
push
fstpl
fincstp
xor
sub
nop
js
daa
or
loope
push
fwait
adc
outsl
inc
in
repz
xchg
mov
insb
add
test
push
inc
mov
into
jge
test
stos
icebp
cli
ljmp
jne
stc
cltd
test
jp
jmp
jecxz
inc
push
jbe,pt
mov
xchg
repnz
cld
es
mov
add
rol
jnp
outsl
mov
push
out
out
and
or
pop
mov
fidivs
push
cwtl
sbb
lods
or
neg
pop
add
andb
cmpsb
in
mulb
xchg
fst
cwtl
ds
in
mov
push
loop
inc
pop
adc
sbb
xchg
mov
lret
sub
inc
jbe
cmp
jne
sub
pop
dec
mov
scas
sbb
pusha
lahf
bound
xor
movsl
ret
push
jnp,pn
ljmp
test
xor
and
jl
dec
stos
or
adc
ja
jbe
push
push
xor
mov
lods
lods
ss
lret
xorb
repz
fadds
mov
lret
xor
imul
sbb
inc
and
sbb
out
sub
push
decb
mov
jnp
jmp
and
push
ljmp
movsb
inc
adc
jns
jmp
push
popa
jne
cmp
insl
mov
xor
push
mov
push
add
popf
ja
cmp
rcrb
into
jbe
inc
mov
jg
inc
bound
aaa
xor
sub
mov
mov
outsl
test
in
pushfw
mov
adcb
jae
pop
mov
addr16
sahf
mov
cli
cltd
cmpsl
scas
jl
in
and
out
jp
movsb
call
jl
ds
xor
addr16
cli
add
inc
pop
and
icebp
sahf
add
push
or
out
arpl
xchg
adc
and
push
and
adc
push
mov
aas
scas
call
xchg
fidivrs
dec
cmpsl
out
xchg
sbb
in
adc
adc
or
dec
cmp
lcall
xchg
mov
ss
repz
dec
pop
xchg
out
bound
cltd
clc
icebp
fdivl
inc
out
les
js
lret
xchg
mov
push
insl
jp
jns
and
dec
js
mov
stc
movsl
in
pop
lea
aaa
testl
fldenv
mov
jmp
stos
mov
iret
and
test
lcall
mov
loopne
or
sti
and
iret
xchg
notl
push
adc
test
jnp
dec
sub
pop
repz
and
dec
xchg
icebp
inc
pusha
ss
data16
jns
addr16
leave
js
in
cli
testl
insb
adc
jge
daa
mov
das
push
xor
sbb
pop
imul
mov
call
xchg
push
or
mov
lahf
frstor
jp
ret
test
xchg
xchg
inc
sub
daa
int
enter
stc
test
adc
mov
sbb
in
jb
ljmp
int3
and
or
push
repnz
lahf
mov
insb
jns
sbb
adc
cld
xchg
or
bound
xor
push
mov
jbe
test
dec
push
mov
mov
lea
or
aad
mov
or
loope
pushf
jle
mov
mov
js
in
adc
jecxz
push
fdivrp
and
xchg
and
ja
cmpsb
mov
testl
stos
push
push
mov
jb
imul
sahf
inc
lret
adcb
call
push
mov
and
jno
sub
mov
xor
xchg
ljmp
sub
sub
into
mov
push
sti
inc
mov
sub
shll
lods
sbb
mov
pop
pop
leave
ss
and
leave
mov
jecxz
cmpsb
xchg
push
aad
pop
pushf
or
cmp
jecxz
mov
mov
daa
and
or
gs
cmc
test
mov
sbb
ret
pop
mov
inc
mov
out
mov
jge
mov
mov
lods
pop
jae
jo
cmpsl
mov
xchg
rcr
sub
movaps
or
or
iret
xor
je
jmp
cmpl
add
and
icebp
adc
cwtl
aas
ret
fs
push
je
adcb
cmp
shl
inc
mov
pop
sub
in
addr16
out
dec
enter
xor
xchg
fstl
add
adc
daa
les
xlat
cmc
push
notl
pop
js
sub
mov
insb
jmp
cmp
mov
leave
lret
rol
sti
fsubs
imul
mov
and
jp
movsb
sbb
cmp
jmp
mov
and
add
outsl
in
roll
cltd
flds
in
gs
or
roll
jae
int
or
inc
lods
icebp
mov
jg
jmp
xchg
xor
loop
cmp
mov
pop
sub
inc
pop
cmp
push
sub
inc
inc
pop
fcmovnbe
push
in
cmp
jns
pop
rcr
cld
call
jne
inc
ret
dec
and
dec
add
ja
mov
aas
push
shr
cli
cmc
mov
cmc
and
aas
cmpsb
mov
mov
pop
ljmp
pop
jo
test
stc
jb
call
and
push
rcr
mov
dec
dec
push
ljmp
jb
mov
ret
ljmp
jbe
fs
push
push
jno
arpl
sbb
into
out
xchg
pop
lahf
lahf
inc
sbb
dec
loop
addr16
cmc
pop
seto
mov
jne
sahf
rol
mov
cmp
les
test
fs
pop
cmp
insl
fdivl
xchg
std
cmp
mov
cmp
cmp
adc
lods
icebp
fcomip
add
dec
pusha
cmp
ljmp
je
dec
adc
push
lahf
ret
pop
imul
shl
mov
fsubrs
subb
push
jno
inc
or
adc
or
inc
dec
lahf
pushf
aas
push
mov
lret
imul
scas
xchg
add
in
xor
int
inc
inc
sbb
mov
bound
in
adc
or
adc
in
pusha
sbb
insb
lea
xlat
je
clc
in
idivl
movsl
push
jmp
xchg
cli
orb
pusha
mov
xchg
lret
cmp
ret
int
cld
pop
add
add
fisttps
fs
ret
in
mov
adc
mov
cmp
stc
sbb
jns
test
xor
xchg
jne
movsl
xor
jne
iret
mov
and
push
dec
sbb
push
mov
mov
shr
pop
sbb
lods
fidivs
roll
xlat
xchg
dec
cmp
adc
dec
outsl
fs
adc
push
mov
jnp
lods
sbb
and
enter
and
mov
adc
int
dec
push
jecxz
sub
dec
push
fiaddl
mov
jae
std
pop
sub
adc
arpl
inc
pop
call
cmp
jmp
daa
dec
inc
bound
mov
mov
int3
and
nop
xor
cmp
cmp
mov
stc
and
and
xchg
repz
push
dec
jb
aaa
lahf
add
mov
push
mov
push
jl
into
insb
mov
mov
add
pop
mov
inc
inc
movsb
jb
sub
xchg
xor
mov
shrb
cmpsl
xchg
in
xchg
adc
movsb
clc
dec
xor
cmp
adc
dec
loopne
xchg
jns
xor
sbb
stos
add
push
popa
lcall
ss
dec
xor
mov
mov
movl
xchg
xchg
jae
imul
scas
movsl
ljmp
sbb
sbb
incb
pop
pop
sti
xor
stc
mov
ss
mov
mov
mov
sub
sub
dec
aad
jnp
xchg
outsl
scas
fidivl
fsubs
loope
pop
jmp
push
xchg
movsl
pop
leave
jne
pop
and
repz
subb
jno
xchg
mov
out
mov
pop
sbb
xor
add
cmp
daa
pop
adc
xlat
xchg
fnstenv
pop
mov
push
add
mov
add
adc
das
add
sbb
or
add
adc
add
cmp
mov
or
cmp
stos
sub
aaa
mov
jp
in
cmp
push
sub
push
repnz
fwait
or
mov
inc
jmp
lret
mov
adc
pop
mov
pushf
cmp
and
lds
or
sub
mov
xchg
push
sti
insb
and
adc
inc
add
aad
sbb
xchg
cmp
test
xor
xchg
and
ret
adc
mov
inc
pushf
add
cmovno
mov
push
xor
cs
inc
jo
jp
js
fimull
jae
out
push
cmp
lds
mov
lock
pop
imul
icebp
imull
loopne
in
mov
scas
lcall
mov
popf
cmp
add
cmp
sub
daa
mov
push
jo
sub
add
mov
inc
imul
mov
pop
icebp
repnz
in
dec
cmp
xchg
inc
pushf
or
dec
xchg
dec
sti
filds
add
sub
test
or
add
mov
fistps
push
bts
pusha
and
and
jo
je
orb
add
fs
mov
daa
out
push
in
pop
fiaddl
in
pop
pop
into
xor
xor
fnsave
mov
jns
add
inc
push
fistps
insb
fistps
pop
lea
mov
cltd
jmp
cmpsl
xor
dec
sbbl
mov
lret
mov
push
push
inc
cmpsb
dec
shrl
adcl
js
xchg
dec
inc
mov
nop
adc
push
ret
mov
and
dec
xlat
lods
ljmp
inc
mov
dec
iret
test
inc
lods
loope
cmpsb
idivb
and
pusha
push
fldt
xchg
je
pushf
push
mov
push
lcall
fidivs
dec
ljmp
cmc
dec
and
rorb
inc
jle
call
arpl
xor
jl
outsl
test
faddl
adc
adc
xor
jb
test
call
shl
ficoml
mov
and
mov
or
fs
lret
xor
cmpsl
movsl
fsub
loop
cld
js
or
adc
sub
test
fucomip
in
sub
les
outsl
loope
mov
lea
repz
lods
es
jp
ss
xchg
cmp
sbb
pop
inc
fistpll
lds
mov
out
fsts
push
cmpsb
push
daa
mov
leave
data16
les
out
imul
movsl
out
mov
mov
cmp
lock
dec
aam
fld
sbb
stc
xchg
pushf
stc
and
jb
jae
lcall
mulb
sbb
mov
jne
mov
or
repz
mov
mov
add
sub
mov
pop
dec
add
ss
add
sbb
les
ret
addr16
adc
mov
inc
or
test
push
lock
fisubl
and
push
xchg
lea
mov
pop
mov
jp
lret
mov
sar
mov
in
test
clc
xchg
pop
pop
test
adc
mov
mov
adc
lret
lods
je
adc
hlt
das
bound
pop
mov
xchg
adc
fldcw
insl
and
inc
push
mov
jle
inc
mov
dec
jge
sbb
lahf
imulb
mov
cs
into
sbb
in
or
jmp
jg
inc
push
ret
push
in
pop
xchg
pop
dec
add
imull
adc
into
int3
stos
jl
xchg
cmpsl
and
mov
mov
imul
int
sbb
loope
jp
mov
mov
popa
mov
insb
repz
fbld
test
sub
adcb
jae
sbb
jmp
inc
push
pop
testb
test
push
xor
es
mov
into
inc
fsubs
pop
cwtl
inc
xor
repnz
xchg
cmp
filds
xlat
das
sub
push
sbb
sub
mov
cmp
leave
daa
pop
xchg
imul
scas
in
test
insb
mov
xchg
lock
mov
stos
inc
fstps
sbbl
jns
add
in
lret
cmpb
in
xor
jo
shlb
std
inc
mov
loop
sbb
dec
and
sub
mov
cmpsb
push
mov
pop
ljmp
add
stc
xor
xchg
mov
mov
push
jl
icebp
xor
call
loope
push
xor
and
jecxz
sbb
je
sbb
pop
loop
mov
xchg
mov
lea
ret
outsb
push
jo
aam
movsl
adc
pop
pop
pop
mov
xor
cmp
xchg
pop
mov
in
divl
cmp
jb
int3
cmc
movsl
xlat
out
test
mulb
xchg
dec
in
nop
outsb
lods
outsb
mov
call
xchg
imul
xor
jecxz
adc
xchg
iret
cmovg
mov
repnz
dec
mov
mov
cli
push
shll
cmpl
xor
ret
jae
lret
enter
fs
pop
stos
in
movsl
mov
jne
lods
imul
mov
enter
cli
pop
jb
xor
jg
ljmp
sub
mov
xor
mov
scas
add
aam
add
inc
jno
xchg
push
dec
ds
invd
adc
in
mov
pop
fstpt
dec
adc
in
pop
jno
fdiv
aaa
push
cld
xor
xor
cltd
xor
dec
rorb
cli
fisubrl
xchg
xor
nop
test
push
lock
mov
mov
add
aad
add
jo
mov
mov
push
mov
sub
jle
lcall
cwtl
fisubs
in
add
xchg
inc
jecxz
xor
dec
pop
gs
cmp
pop
jb
adc
mov
sub
dec
cld
scas
pop
push
loope
xchg
fwait
in
insb
dec
aad
mov
mov
cmc
in
mov
mov
xchg
ds
xchg
das
push
sahf
arpl
popf
inc
cmpsb
jecxz
ret
push
jp
daa
inc
scas
mov
insb
and
in
stc
add
aam
push
sbb
in
xchg
stos
loop
and
jg
out
mov
pop
out
sahf
push
sar
cmp
dec
sti
sbb
ficoml
in
cld
outsb
lret
push
inc
or
repz
xor
lahf
insl
mov
and
or
imul
sbbb
xlat
adc
add
jno
mov
or
pusha
cmc
loop
sbb
lea
cli
pop
dec
rclb
jg
shll
mov
xchg
sbb
gs
cwtl
mov
pop
js
adc
sub
inc
negl
push
rcrl
jbe
push
xchg
mov
mov
insl
std
dec
fdivrp
mov
inc
scas
mov
pop
shld
rorl
and
adc
pop
sub
mov
push
in
xor
push
xor
or
movsl
add
negb
mov
ret
mov
repz
adc
pop
jg
mov
jbe
pop
loop
jb
mov
orb
sub
out
aas
sbb
cmp
jl
stos
xchg
jnp
imul
loope
xor
loopne
pop
jecxz
adc
jmp
scas
and
cmp
add
adc
icebp
inc
sub
andl
faddl
aaa
popa
and
add
rcr
mov
fcmovbe
mov
insl
dec
fcomps
add
push
jecxz
and
ret
int3
ja
das
lcall
xchg
xchg
and
into
mov
negl
cli
push
push
sub
sbb
mov
pushf
outsl
dec
out
outsl
js
jl
mov
push
adc
pop
fistl
cmp
or
push
lods
leave
xchg
and
xor
daa
mov
loop
decb
sbb
out
jns
fs
add
jmp
dec
stos
mov
mov
add
xchg
xor
rcll
push
or
pop
orl
fmull
cld
ja
jbe
iret
pop
les
sub
cli
ds
xor
and
cli
cli
adc
jbe
out
test
lahf
addr16
and
mov
add
jnp
out
leave
dec
aam
out
or
inc
pop
dec
xchg
mov
mov
mov
cmp
icebp
push
pop
stos
inc
ds
dec
jo
cmc
ja
mov
xchg
movsb
jno
fwait
dec
sahf
or
lcall
or
fcom
popa
xor
and
inc
or
jae
xchg
fistps
adc
pop
push
repz
pop
lret
mov
sahf
pop
fcoml
cmp
out
push
adc
stc
inc
adc
cltd
push
ficomps
stc
mov
stc
pushf
add
inc
popf
cmp
lret
fcmovnu
repnz
out
js
testl
dec
sahf
nop
dec
xor
fsubs
in
xchg
test
into
add
enter
fwait
psadbw
sarl
add
push
ja
push
loope
test
movsl
loopne
pop
pop
ljmp
cs
pop
ljmp
xor
pop
ret
loop
iret
push
push
insl
cmpsl
mov
and
mov
test
dec
movsl
jle
fs
cmp
bound
dec
push
lock
mov
js
push
push
mov
bound
pushf
stc
mov
xchg
lods
mov
das
mov
movsl
sub
ret
movl
imul
inc
insb
jl
and
and
inc
inc
sbb
in
add
jle
in
lcall
inc
clc
hlt
sbbl
jns
pop
or
lret
addr16
in
or
fisubrs
stc
adc
adc
add
jge
mov
scas
sub
shll
push
push
lds
sbb
cs
hlt
test
fistpl
mov
cmp
mov
mov
mov
into
fdivs
or
js
lret
cmp
jecxz
sbb
lock
ret
sahf
popf
dec
ja
push
lds
outsl
xchg
dec
push
sub
loope
jge
pop
inc
or
push
idivl
add
push
dec
ljmp
mov
xchg
enter
stos
cwtl
lret
shr
jne
xchg
sub
xchg
mov
or
data16
xlat
push
xchg
lock
out
sti
loop
int
jge
ljmp
and
sub
adcl
es
pop
lret
dec
push
pop
je
les
pop
fcoml
jmp
or
mov
rorb
ja
addr16
jbe
sti
jg
out
pop
fistps
sub
and
fiadds
mov
aaa
into
jg
inc
js
mov
std
jnp
popa
outsb
mov
sbb
inc
in
in
fwait
sbb
push
inc
mov
or
test
xchg
add
mov
inc
adc
bound
insl
fucomip
adc
mov
inc
inc
lea
ret
jae
cmpsl
aaa
rcrl
mov
insb
int
cwtl
loopew
jbe
in
gs
into
cmp
arpl
sub
or
cmovg
mov
pop
mov
pop
test
cmp
jl
jmp
cmp
arpl
out
xor
ror
adc
jmp
shll
jge
or
dec
add
lds
test
roll
std
xchg
jl
or
cwtl
add
jb
jno
ret
repz
addb
enter
iret
xor
pop
jb
mov
dec
imull
scas
test
popa
and
sub
jge
jg
push
inc
push
and
or
pop
cltd
testl
shlb
jp
mov
aas
jno
scas
cwtl
test
mov
push
or
and
repnz
fs
mov
enter
ret
pop
out
inc
mov
jb
lea
lret
popa
mov
inc
sbb
inc
and
outsl
cmp
ret
lds
cmp
adc
fsqrt
movsb
adc
shlb
ja
shll
xchg
stos
lods
out
push
sub
xor
repnz
mov
push
mov
mov
andl
fmull
lods
push
imul
popf
es
mov
ss
rcrb
dec
dec
cmp
cmp
mov
xor
mov
inc
lods
xor
jg
fldl
add
adc
push
gs
sarb
adc
inc
pop
adc
sbb
pop
lods
adc
dec
in
or
ljmp
stos
mov
fiadds
lcall
sub
lods
dec
sub
pop
add
aam
lret
jns
inc
lds
repz
mov
arpl
sub
inc
ret
popa
out
mov
movsl
mov
add
popf
dec
pop
aas
dec
mov
addr16
sub
fidivrl
mov
cmp
mov
push
xchg
stos
movups
push
ret
andl
lahf
mov
addl
in
mov
xor
add
loopne
push
xor
mov
test
sbbb
mov
popf
pop
in
adc
add
cmp
adcl
int
cmp
sbb
add
inc
ss
xlat
mov
stos
faddp
jb
test
decl
insb
leave
jo
scas
xchg
lret
mov
sub
es
orb
orl
pop
pusha
movl
adcb
xor
idiv
inc
clc
jl
add
sub
aad
jne
pop
jno
push
mov
inc
pop
les
pop
mov
rorb
imul
cmp
ljmp
outsb
mov
xlat
pop
lods
cs
mov
mov
xchg
add
pusha
sub
rcrb
xor
sub
aad
pop
scas
mov
xor
stos
ret
fstl
xor
stos
aad
mov
in
pusha
inc
fbld
test
xchg
xchg
pop
dec
cmp
inc
dec
add
add
popl
cwtl
mov
pop
ljmp
into
arpl
ljmp
loop
or
sub
add
mov
add
imul
cmp
push
in
addr16
aad
gs
or
or
sub
xchg
jo
dec
cmpsl
scas
shrb
jns
push
leave
not
push
dec
lcall
sbb
mov
and
push
loope
idivl
fwait
add
cmp
add
inc
fstl
aam
sti
mov
inc
adc
mov
adc
sub
stc
ja
into
pop
jmp
fists
xchg
notl
or
add
xlat
push
loope
out
cmp
je
mov
xchg
mov
loope
xor
and
sarl
sbb
addr16
fdivrs
call
in
out
xchg
xchg
jno
and
mov
lds
shrl
xchg
and
or
jbe
fwait
or
inc
sti
cmp
dec
pop
jmp
and
insb
push
cmp
aad
fwait
or
cmpsb
enter
gs
adc
mov
pop
push
ret
mov
ds
sbb
test
stc
sbb
js
lret
jo
lret
add
jb
mov
sub
cwtl
jecxz
fldcw
adcl
xchg
subl
orb
push
mov
jecxz
fwait
xchg
inc
lock
ret
fwait
jno
push
aaa
int3
aad
bound
jg
test
adc
dec
xchg
cmp
fwait
lock
js
xchg
ret
pop
xchg
lods
fldenv
outsl
andl
ficompl
in
cltd
mov
jb
aam
mov
adc
cmpsb
jb
ret
push
mov
cwtl
adc
xor
andb
rorb
rorb
mov
xchg
xchg
jbe
xor
mov
mov
push
testl
in
jnp
mov
xchg
or
jno
outsb
add
and
outsb
test
push
data16
fld1
dec
int3
adc
jl
aam
add
cmc
sub
test
stc
mov
push
fucom
mov
mov
int
test
cvtpi2ps
adc
jb
outsb
loopne
cmc
jae
adc
adc
jo
push
pop
xchg
cmpsl
push
rorb
rorb
xlat
jmp
inc
inc
sbb
mov
jb
sub
add
scas
ret
int3
out
inc
lahf
push
aas
fnstsw
pop
idivb
aaa
mov
mov
jo
cmpsl
fwait
dec
mov
push
and
jnp
pusha
mov
lods
xor
arpl
lcall
repz
mov
sahf
dec
push
icebp
lods
out
sbb
inc
popa
cmp
mov
fidivs
aam
or
iret
arpl
mov
adc
xchg
cld
lret
dec
push
mov
adc
test
dec
push
ljmp
mov
sbb
dec
insb
imulb
lods
mov
pop
mov
aas
aad
jbe
aam
sub
xorl
add
repnz
xchg
jmp
jbe
scas
cltd
inc
scas
push
idivb
add
in
add
call
dec
out
cmpsl
and
xor
cmp
inc
push
ret
aam
fsubrs
scas
rorl
xchg
xorb
xor
ret
test
dec
incl
jp
mov
adc
test
loopne
mov
aad
adc
pop
jae
cwtl
push
rol
shll
jns
sti
repnz
popa
fs
pop
fisttpl
ljmp
rclb
pop
ja
sub
push
ja
sti
mov
dec
adc
ljmp
mov
or
into
pop
int3
jmp
test
pop
es
leave
sbb
cli
xor
push
cmc
xor
add
xor
inc
in
test
jnp
mov
ret
adcl
fwait
scas
dec
jge
loop
mov
mov
or
cmp
lds
aad
movb
mov
add
scas
dec
aaa
scas
gs
aad
jb
and
pop
adc
xchg
seto
cltd
imul
scas
les
xchg
adc
stc
call
es
pop
sub
jge
cmp
adc
mov
shll
jg
push
xchg
adc
dec
jnp
mov
insl
mov
push
push
imul
data16
outsl
jne
mov
pushf
jnp
sub
jmp
xor
pop
aas
xchg
popf
movsb
mov
add
test
mov
out
sub
sub
sub
pushl
ja
jb
mov
ljmp
pushf
dec
dec
xchg
inc
leave
jp
cmp
ja
pop
sahf
loopne
dec
enter
lret
dec
dec
ud0
test
xchg
addb
mov
roll
mov
or
dec
push
adc
inc
aaa
cltd
int
push
pop
sbb
movl
sub
adc
pop
mov
in
gs
jnp
xlat
adc
int
cmp
jns
jge
xchg
fnstenv
out
les
aaa
aam
nop
mov
hlt
outsl
lds
je
aam
cld
pop
mov
repz
mov
fs
fsubs
mov
je
iret
xchg
push
xor
aas
inc
std
and
lods
imul
jmp
pop
std
mov
int
clc
mov
dec
popf
mov
or
in
movsl
hlt
mov
pop
outsb
sbb
ror
jg
sbb
shll
in
das
add
push
cmp
fs
adc
mov
ss
hlt
mov
pop
xchg
adc
lods
push
push
imul
adc
sbbl
call
outsl
outsb
jge
push
stc
daa
data16
out
sti
aam
fcomi
push
xchg
andb
mov
mov
mov
out
mov
pop
adc
sti
xchg
or
aaa
and
or
fs
popl
pop
push
push
xchg
and
fmuls
jg
mov
push
and
mov
pop
es
mov
jmp
mov
into
fidivs
out
in
sbb
hlt
mov
mov
mov
or
xchg
cmpsl
data16
xchg
int
shll
mov
arpl
mov
jne
scas
fnsave
sbb
jae
fmuls
push
add
jno
sbb
je
sub
mov
std
test
ss
in
loopne
cli
sub
insl
mov
daa
stc
btc
push
fdivr
test
sbb
ljmp
adc
fdivrs
pop
lods
xor
pop
dec
mov
push
daa
pusha
inc
fisttpll
js
pop
test
pop
dec
inc
in
je
shlb
sbb
out
push
inc
nop
in
rcrb
pop
icebp
in
js
sbb
mov
lea
ljmp
dec
add
and
daa
add
fs
dec
add
xor
aaa
mov
in
pop
or
lea
shlb
jae
dec
lods
dec
sarb
faddl
push
xor
cmpsl
fildll
cmp
and
mov
jno
jge
and
lcall
cmp
jb
inc
scas
lahf
inc
rolb
inc
and
negb
into
jnp
sub
push
ds
push
and
loope
loopne
jne
aad
test
add
add
lock
sub
mov
lods
test
imul
sbb
push
inc
mov
imul
lock
ror
mov
cmp
or
adc
sub
mov
repnz
gs
xorl
push
add
xchg
movsl
push
int
cld
mov
mov
leave
push
ret
push
dec
call
popa
mov
lahf
jb
ds
mov
fcompl
fildll
add
shlb
out
roll
add
mov
and
inc
int
push
add
mov
clc
and
add
adc
adc
push
cmp
fbld
ror
adc
andl
pushf
jne
inc
lret
lahf
jle
jns
test
xchg
push
pop
bound
in
mov
sub
pop
jno
sbb
adc
ret
pop
lret
or
jnp
es
sub
clc
scas
adc
adc
or
ret
push
ror
or
cwtl
pop
jmp
pop
dec
xchg
cmp
into
out
pop
daa
out
dec
or
cs
push
sub
test
add
icebp
xchg
or
in
insl
add
jo
leave
fxch
xchg
inc
lret
sbb
mov
add
lods
or
aam
in
repnz
ret
ror
into
jecxz
mov
and
gs
sar
loope
mov
dec
aad
xchg
repnz
repnz
push
movsl
adc
mov
or
mov
ret
test
or
out
inc
sub
lret
jnp
dec
jne
xchg
mov
aas
pop
xor
iret
jb
xor
lds
cs
sbb
jl
add
les
fwait
push
les
sub
jbe
pushf
mov
mov
mov
sbb
and
pop
subb
push
nop
fistps
popa
pop
or
lds
adc
int
out
add
xchg
xchg
shll
mov
es
imul
sbb
pop
daa
cltd
out
in
mov
fadds
icebp
fmuls
jb
xor
xor
ss
xorl
ljmp
add
sti
push
push
inc
cmp
add
jb
pop
sbb
mov
stos
dec
adc
push
lods
fldl2e
jmp
sub
mov
loop
inc
mov
mov
call
jl
imul
xor
mov
repz
and
adc
mov
lock
div
or
adc
xchg
in
pop
pusha
and
test
adc
cmpsl
add
adc
aam
addr16
andl
pop
cmpsb
inc
sbb
jo
outsl
stos
mov
mov
push
cs
lahf
cmpsl
in
sub
cmp
pop
sbb
sarl
adc
inc
shrl
pusha
jp
mov
pusha
popa
lret
adc
lea
repnz
or
mov
pop
sub
cmp
dec
loop
cld
adc
jbe
iret
jl
pop
in
adc
loope
and
cmpsl
jmp
sbb
dec
cmpsb
sub
sub
das
imul
loop
adc
mov
int3
push
push
sti
lret
sub
cmpl
das
xchg
and
aam
cmp
mov
add
mov
outsl
sarl
jbe
and
push
adc
add
push
ljmp
dec
pop
scas
mov
out
jmp
sub
in
enter
add
cmp
inc
rclb
aam
mov
pop
push
add
out
sub
add
das
mov
shll
test
xor
inc
test
cmp
or
and
add
ja
jae
and
sub
mov
xlat
adcl
inc
fiadds
stc
mov
inc
cltd
xor
mov
inc
mov
repz
scas
fmulp
cltd
inc
fildl
mov
addr16
or
push
sti
mov
xlat
xor
testl
jge
adc
pop
jmp
loope
ljmp
xor
es
iret
sub
pop
push
pushl
mov
lds
movsb
scas
inc
shrb
mov
xor
lea
repnz
out
jg
dec
mov
pop
stos
daa
mov
clc
nop
mov
xorl
xor
mov
scas
jmp
push
idivl
xor
lods
lret
es
les
pop
xchg
aam
adcl
mov
adc
adc
add
mov
sbb
gs
mov
mov
pop
dec
jle
xlat
and
or
mov
je
loop
int
cwtl
mov
push
cld
stos
sti
ret
loope
icebp
jg
dec
addr16
add
add
push
in
pusha
jb
dec
add
hlt
mov
test
addr16
mov
bound
rorl
ja
jg
fidivs
cmpsb
push
lahf
ss
push
sbb
xor
ds
cmp
pop
mov
ret
outsl
psubd
pop
mov
call
fdiv
scas
stos
mov
jp
pop
lods
shl
jmp
push
je
movsl
pop
in
inc
pop
ret
push
jo
sbb
bound
jge
pop
neg
mov
or
pushf
cli
cwtl
pop
ljmp
pushf
dec
loop
fiaddl
lods
shr
enter
shll
aaa
aas
sub
dec
stos
xchg
push
push
fsubs
mov
repnz
cmpl
inc
sub
ljmp
push
sbb
push
rcrb
imul
xor
xchg
push
adc
jl
jns
lcall
in
mov
sub
scas
cmpsb
push
mov
aas
cmp
out
jge
mov
xorb
pop
mov
mov
test
lds
popa
push
jl
aam
mov
fwait
pop
sbb
inc
jns
insb
ja
cwtl
mov
mov
inc
ret
add
mov
cld
adc
cmp
test
lds
pmulhw
into
adc
scas
ds
xor
pop
fdivrp
cmp
pop
test
stos
repnz
jbe
mov
addr16
cmp
in
push
push
mulb
mov
lods
and
add
loop
aas
pushf
or
xor
inc
repnz
movsb
fmuls
pusha
sti
jne
in
dec
std
lret
rcrl
scas
push
xor
adc
push
outsb
andl
and
out
sbb
fstl
adc
movsl
jl
int
push
cmp
mov
daa
jns
popf
mov
or
add
stc
loop
sbb
jl
out
in
pop
sub
sub
dec
decl
mov
jno
lds
shlb
push
and
loope
push
popl
inc
pop
xchg
add
icebp
mov
or
repz
inc
imul
and
cld
sarl
xor
gs
jae
push
movl
jns
push
hlt
bound
pop
xor
sub
test
mov
scas
xor
aad
lea
adc
mov
inc
loop
scas
inc
cmp
sub
jp
mov
js
sub
lret
dec
sbb
mov
aam
cmp
xor
inc
lahf
aam
mov
and
push
rcr
sub
push
fldl
out
jo
push
or
and
addb
lds
hlt
jns
enter
push
xchg
or
dec
nop
sbb
push
lret
push
rorl
dec
aad
and
pop
jl
mov
xchg
in
sbb
mov
push
movsl
sub
jmp
add
add
leave
and
imul
addr16
mov
sbb
xchg
loopne
insl
ss
sti
jge
ss
std
mov
lock
repnz
mov
insb
mov
or
push
sub
pop
jns
sub
out
fsubrs
jo
push
roll
stos
stc
sub
inc
es
sbb
cmp
packssdw
fimuls
loopne
popa
mov
push
pop
sahf
scas
not
ss
pop
imul
jmp
leave
stos
mov
add
sbbb
add
mov
out
push
cwtl
shll
inc
pop
std
outsl
cmp
pop
lcall
and
or
sbb
mov
pop
pop
jns
stos
iret
imul
jl
shll
dec
xor
sbb
xchg
mov
mov
mov
int3
or
iret
add
in
inc
cmp
fsub
out
scas
jecxz
out
icebp
xchg
inc
mov
in
popf
push
nop
icebp
addr16
xor
fwait
jb
lds
popa
adc
jge
push
outsl
push
mov
mov
in
push
ss
shrb
xchg
cmc
outsb
mov
je
call
xor
push
jecxz
push
mov
mov
sub
and
movsl
xchg
mov
out
icebp
cmp
cltd
jg
fldt
fs
xor
push
pop
stc
rcrb
outsl
dec
cmpsl
xchg
push
out
daa
imul
movsl
or
arpl
out
or
xchg
rorb
push
sbb
pop
mov
xchg
mov
xor
inc
scas
inc
cwtl
mov
dec
jl
sbb
inc
jb
cwtl
jg
test
loopne
xor
fldl
fs
push
mov
mov
or
fs
and
stc
cmpsl
adc
add
xchg
adc
jp
jb
pop
enter
lock
fldcw
dec
xchg
xchg
lods
fdivp
mov
dec
ja
movsl
iret
js
jl
add
lret
lcall
mov
dec
cmp
xor
fmull
test
sub
xor
out
mov
je
fldl
sbb
fnstsw
js
int3
stos
xor
pop
and
outsb
mov
cld
fidivrl
sub
out
insl
or
pop
stos
xchg
jbe
dec
push
xchg
daa
mov
mov
icebp
sub
cmp
mov
mov
and
lcall
sbb
outsb
mov
fcmovnu
adc
inc
jns
mov
iret
pop
or
ss
or
arpl
fwait
daa
sarl
cmpsl
push
outsl
push
pusha
call
dec
mov
inc
pop
imul
in
cmp
popl
in
push
push
cwtl
xlat
test
dec
scas
negb
maxps
cltd
hlt
test
out
out
lcall
xchg
fiaddl
xchg
and
jmp
loop
popa
test
pop
divb
dec
cmp
insl
xchg
mul
dec
lret
int
cld
sub
jbe
rorl
push
cmpsb
inc
mov
cwtl
sub
add
add
sahf
dec
pushf
dec
mov
xor
mov
fsts
shlb
lods
ficoml
cmp
fistps
jmp
in
jbe
pop
mov
lcall
pop
sti
out
push
jbe
mov
xchg
fnstenv
int3
loope
jbe
sbb
jmp
xchg
sbb
dec
xchg
mov
sti
inc
jne
sub
mov
stos
xor
push
add
repnz
jg
cs
bound
mov
cmpsl
dec
jbe
mov
mov
dec
ret
jp
pop
in
mov
push
jp
lret
push
xchg
jge
int
pop
jge
sbb
sub
jns
jae
flds
jo
lods
insb
movsl
or
stos
xchg
fwait
push
cmp
lods
aas
and
xor
add
adc
nop
imulw
mov
out
sub
cltd
fs
xchg
inc
adc
or
mov
and
imul
ds
mov
adc
movsb
cmpsl
int3
aas
xor
mov
xchg
or
rolb
add
push
stos
fs
jne
andnps
cmc
or
stos
cld
orb
in
imul
add
mov
xchg
pop
leave
dec
rcrl
in
mov
inc
adc
leave
in
or
popa
test
lahf
rol
fiaddl
sub
inc
test
and
jecxz
inc
orl
mov
inc
inc
pop
shl
add
sbb
jmp
jp
mov
pop
xchg
popf
insl
daa
jmp
adc
push
adc
mov
mov
in
ret
es
push
jno
fsub
bound
pop
mov
dec
jge
movlps
testl
xlat
movsl
push
jg
dec
or
imul
testb
jecxz
add
les
aad
jle
sub
mov
inc
mov
jge
and
and
cmc
insl
pop
push
call
push
leave
cli
testb
add
inc
dec
out
enter
in
and
or
aad
pop
inc
mov
outsb
ljmp
lock
dec
cmpsb
push
xor
mov
in
sbb
jo
cwtl
daa
rcll
imul
ljmp
daa
in
ds
lods
mov
adc
cld
jecxz
into
mov
repnz
jb
out
add
mov
inc
ljmp
mov
sarb
or
cmpsl
mov
dec
mov
adc
or
shl
lds
push
aam
clc
and
fs
data16
roll
push
es
xchg
bound
mov
sti
int
popf
or
jae
cmp
test
fisttpll
fstpt
mov
xlat
adc
pop
add
insb
xchg
and
pusha
call
fwait
js
or
ss
adc
dec
stos
loop
in
push
insl
imull
mov
incb
ds
or
dec
ds
mov
pop
jge
mov
add
mov
std
cld
aad
popf
mov
mov
or
movsb
enter
inc
xchg
sarb
lret
lods
inc
lea
mov
movsb
and
xor
int3
and
xchg
cwtl
int3
mov
test
aam
in
insb
sti
xchg
lret
cmp
imul
test
push
mov
cmp
inc
add
mov
jecxz
in
push
lock
pop
cmpsl
je
cmp
sahf
repz
push
aas
mov
and
pop
aas
jl
adc
pop
int
add
cmp
jns
add
je
leave
xchg
or
test
sbb
lahf
insb
insb
jno
insl
adc
fcoms
or
and
jp
mov
push
jne
insb
invd
mov
cmpsl
lds
fimuls
dec
movsb
inc
fsubr
in
push
fdivrs
je
jne
sub
xchg
mov
ret
adc
in
pop
arpl
scas
pushw
sahf
adc
stc
push
add
xchg
cmp
jns
pop
jbe
push
imul
sub
push
lahf
push
dec
jno
andb
pusha
imul
mov
push
mov
arpl
in
in
std
and
gs
cmc
xchg
lds
pop
jbe
push
xorb
xchg
jns
call
or
inc
int
and
or
and
sub
fs
xchg
pop
mov
push
cmpsb
mov
xor
outsl
cmpsl
cwtl
ds
jecxz
mov
and
popl
inc
fnstcw
push
add
mov
rclb
rcr
sub
cmp
dec
or
js
stos
mov
and
arpl
adc
test
xchg
dec
cld
jge
pop
lcall
inc
in
sahf
outsb
or
popf
jae
push
mov
xchg
hlt
sub
jp
xchg
stos
jbe
int
adc
or
push
mov
inc
pushf
into
enter
mov
sbb
aas
adc
dec
adc
mov
scas
aam
out
mov
jbe
jp
jg
lret
xor
jmp
jo
imull
jno
pusha
dec
xor
sbb
movb
jnp
and
mov
pop
jecxz
ja
daa
push
xchg
pusha
mov
fwait
cmpsb
xchg
sbb
lahf
fstpl
leave
xchg
and
into
into
jecxz
xchg
mov
cmpsb
mov
lds
shlb
xchg
push
cmc
push
lds
imul
jnp
out
lds
dec
cwtl
in
mov
push
sbb
lods
popf
fldl
subl
in
inc
lret
mov
cmp
fnsave
in
insb
adc
fidivrs
add
gs
xor
icebp
sti
movsb
aaa
jne
bound
lcall
sub
sbb
shrb
fwait
ss
insb
ljmp
dec
xchg
xchg
imul
jae
cmp
or
cld
mov
push
insb
jae
mov
cmpsb
pop
std
data16
std
loopne
lea
mov
es
cmpsl
jbe
rorl
fs
in
push
and
xchg
fisubs
dec
fmuls
xchg
test
cmp
jecxz
add
rcrb
cld
cld
pop
lods
loopne
mov
nop
or
pop
mov
test
cmpsl
icebp
fisttpl
test
pop
scas
and
fwait
aam
xchg
mov
pop
bound
adc
jbe
and
shr
lods
outsl
xchg
rorl
lods
push
pusha
aas
xchg
aad
xchg
push
inc
fs
stc
jp
pop
xor
mov
cmp
je
add
cmp
inc
ret
dec
sub
sub
cs
jp
ret
adc
lahf
mov
sbb
lcall
sahf
add
icebp
cmpsb
stc
es
sub
out
scas
xchg
inc
pop
mov
ror
xchg
xor
daa
rclb
icebp
xor
andl
in
mov
pop
insb
mov
fdivrs
out
fucomp
rcrl
rcrl
adc
pusha
insb
pushf
fimull
mov
adc
dec
pushf
sub
sub
les
xchg
pop
mov
cwtl
js
sahf
adc
sub
xchg
testb
or
repnz
insl
sbb
or
cmp
push
or
mov
cmpsl
jmp
cmpsb
add
repz
frstor
dec
jae
xchg
gs
lcall
popf
pop
mov
mov
jg
mov
mov
fsubl
stos
xor
fldcw
jle
push
mov
int3
ja
in
jp
lahf
ds
adc
arpl
out
or
out
fildll
les
xchg
mov
mov
aad
insl
sub
or
test
jecxz
add
sbb
mov
jg,pt
xor
pop
das
fsubs
mov
jmp
aam
cltd
mov
jl
hlt
pop
xor
push
daa
cmpsb
jmp
jmp
mov
fldcw
xor
shrl
and
and
and
inc
sarb
sahf
fnstenv
mov
fldl
mov
lret
xchg
mov
mov
mov
dec
lret
cmp
mov
subb
or
orps
fs
push
dec
xchg
push
cmp
and
aad
loopne
test
push
imul
xor
pop
insb
es
stos
lock
sbb
jge
into
adc
mov
sbb
stos
pop
test
inc
cmpsb
mov
ret
mov
sbb
lret
dec
mov
sbb
dec
dec
loope
out
push
bound
mov
push
aam
mov
jg
dec
pop
jne
mov
stos
sbb
rol
sbb
push
inc
mov
or
jmp
inc
jp
adc
add
in
aad
addl
mov
jmp
inc
cmp
cs
mov
cli
lret
sti
orl
push
dec
inc
push
daa
jg
add
cvttps2pi
fstpl
xor
fs
xchg
jbe
adc
cmpsl
pop
sub
daa
fcompl
int
testl
mov
add
and
xlat
enter
test
into
sbb
clc
in
das
fcmovnu
out
xchg
pop
js
sti
data16
push
daa
cld
pop
and
push
and
lods
mov
lret
inc
in
jns
mov
pop
dec
xchg
push
imul
cmp
xchg
test
add
add
int3
test
push
add
insl
mov
or
xchg
jmp
loop
shrl
pushf
lahf
mov
inc
mov
mov
mov
int3
adc
sbb
push
pop
fdivs
ljmp
jnp
xchg
push
xchg
repz
xchg
lods
adc
adc
fwait
lods
mov
inc
ds
sbb
or
adc
in
or
sbb
dec
push
sahf
bound
shrl
cmpsl
add
add
outsl
push
push
cld
sahf
push
mov
pop
push
mov
movsl
mov
push
or
cs
sar
stos
mov
mov
outsb
pop
js
rcll
xor
mov
fbld
and
mov
movl
fs
add
lahf
jb
fisubrs
sub
int
ds
call
into
fsubl
fdivl
push
xor
enter
push
inc
dec
inc
xchg
fisttps
and
mov
xchg
and
and
inc
cmp
sub
lcall
iret
pop
repnz
cld
lock
push
and
ret
sarb
lods
mov
inc
adcl
add
jmp
jmp
jo
loope
mov
dec
pop
test
add
leave
dec
adc
lods
mov
or
shll
sti
push
bound
sbb
subb
ja
dec
dec
and
adc
ds
push
out
imul
cmp
loope
scas
ja
xor
cmpsl
dec
adc
or
push
pop
mov
ret
ja
or
rcr
repnz
in
sbb
add
xor
ret
dec
stos
repnz
or
push
daa
push
xor
test
aaa
jle
test
mov
lahf
iret
mov
sbb
push
jl
pop
ds
hlt
xchg
nop
mov
hlt
pushl
cmpsl
adc
mov
cs
je
pop
out
bound
add
imul
leave
sub
and
out
sub
rcr
addb
aaa
or
out
filds
push
pop
mov
mov
mov
cmp
stos
fisubrs
pop
mov
insl
jbe
mov
std
sahf
inc
jbe
xchg
jno
jmp
insl
lock
push
inc
sbb
ret
xchg
ret
dec
sub
dec
xor
xor
into
cmpsb
sbb
shrl
mov
sub
adc
popf
pop
or
jmp
inc
sub
cwtl
ffree
pop
xchg
cmpsl
jg
push
dec
out
out
fwait
pop
pop
arpl
bound
popf
and
jmp
push
jns
insb
push
fldt
dec
sbb
loopne
loope
adc
xchg
push
mov
fmull
xchg
insl
inc
test
gs
cmp
loopne
test
cmc
xchg
movsl
and
call
xlat
in
cld
inc
jge
or
and
xor
test
ret
adc
adc
pop
imul
pop
stc
sub
ja
pop
lds
push
pop
cmpsl
pop
data16
push
mov
add
cmpsb
jo
sub
add
mov
cmp
mov
test
xor
jle
pop
stos
test
cli
or
jns
xchg
lahf
ja
ja
jmp
mov
add
sub
fmull
fwait
and
add
cmpb
dec
test
cld
enter
in
push
std
repnz
test
mov
mov
repnz
mov
dec
inc
mov
add
mov
aam
sbb
in
push
popf
outsl
xchg
in
adc
mov
or
cmpsl
pop
jbe
pop
sbb
jp
pop
or
adc
sbb
dec
dec
flds
sbb
les
std
fstpt
decl
into
mov
mov
sbb
adc
mov
push
popa
cld
sbb
int
outsb
sbb
lahf
gs
jo
inc
lahf
jo
movsb
pop
inc
xchg
cmpsb
pop
nop
add
push
sbbb
jae
or
popf
push
xor
mov
movb
test
dec
pushf
loop
sbb
xor
stc
adc
jae
in
lea
call
push
add
ljmp
push
xorb
push
out
andl
lcall
jecxz
mov
into
loope
xchg
test
lret
incb
stos
mov
in
lahf
mov
mov
push
subb
sub
mov
or
mov
fs
xor
loope
jmp
call
fs
mov
imul
sub
cmp
jnp
mov
mov
and
pop
jnp
pop
pop
or
mov
ret
xchg
xchg
repnz
push
in
inc
xchg
and
jb
loopne
cld
test
inc
ss
xor
dec
js
repz
adc
sbb
ret
or
fidivrl
dec
cmpsb
aaa
cmp
pop
inc
mov
xchg
mov
movsl
lea
imul
mov
inc
pop
jbe
ret
xchg
lahf
ds
jg
pusha
push
jno
sti
mov
or
das
test
bound
inc
shlb
ljmp
adc
add
push
lock
rorb
sbb
shlb
cmp
mov
jle
test
in
push
cmp
in
jl
sub
xlat
dec
inc
daa
gs
mov
mov
rcrb
orl
mul
and
loop
jecxz
mov
mov
stos
loope
mov
sarl
roll
xor
out
int
lret
xchg
or
and
adc
and
ss
xchg
push
arpl
shr
out
xchg
xor
stc
mov
cltd
mov
xor
das
push
dec
sub
mov
decl
push
fiaddl
ret
jge
fwait
xchg
bound
negl
sahf
adc
xchg
pushf
xlat
xor
lret
lret
mov
lds
xchg
movsb
out
add
or
sbb
push
roll
pop
add
mov
fcomip
fdivl
shll
sub
gs
repz
dec
add
mov
jo
in
cmp
movsl
push
icebp
xchg
lret
cmp
pusha
clc
inc
jb,pn
repnz
mov
sahf
es
loopne
aas
sbb
pop
inc
sub
sbb
and
or
xor
vdivps
clc
mov
push
mov
leave
adc
pop
cld
pop
push
mov
mov
xchg
icebp
inc
out
inc
mov
cmp
sahf
mov
dec
sub
sub
outsb
jno
ja
fildl
cmp
insl
push
fdivrl
pop
scas
lock
pushf
ret
loop
insl
or
popf
cwtl
jns
cmp
movsb
aas
into
jp
sbb
and
cli
sbb
arpl
or
repnz
jne
cmp
popa
jle
in
cltd
mov
sbb
lahf
jmp
movsb
inc
jbe
out
sub
push
adc
sub
stos
jbe
pop
mov
mov
idivb
and
mov
adc
inc
mov
jne
xchg
sub
icebp
pusha
cmpsl
sub
flds
in
push
popa
mov
es
popa
cmc
incl
stc
dec
push
stos
lds
ret
dec
push
jge
cmp
mov
fs
and
dec
out
add
mov
sub
daa
and
sbbb
mov
push
loope
fisubrl
xor
sub
stos
xchg
inc
pop
lret
mov
inc
outsl
out
aas
mov
dec
add
ljmp
nop
dec
out
dec
ss
mov
dec
lret
jmp
cli
enter
aad
out
aas
pushf
mov
cld
dec
add
aas
addl
ds
and
aas
fldlg2
shlb
addr16
sbb
adc
pop
inc
sbb
ljmp
mov
icebp
inc
dec
int
and
loope
stc
hlt
cld
dec
fwait
cmp
gs
xor
fldl2e
jne
fldcw
in
cld
int3
xor
orl
in
push
dec
dec
inc
mov
adc
jg
add
pop
sbbl
sahf
insl
negl
icebp
popa
mov
out
mov
and
out
mov
test
std
inc
jl
xchg
out
cmp
jmp
push
xchg
inc
xchg
mov
inc
and
jns
sbb
and
je
jp
mov
dec
cmp
sahf
add
rclb
or
sub
xchg
xchg
push
xchg
test
push
adc
fcompl
add
popl
adc
shlb
or
test
xchg
xchg
sub
outsl
sub
test
cmpsl
cmpsb
inc
sbb
icebp
mov
xor
mov
gs
lahf
test
and
loopne
outsl
mov
jecxz
pushf
out
inc
int
xchg
xchg
xor
sub
ljmp
insb
mov
add
es
mov
xor
push
aaa
hlt
mov
xor
mov
xor
dec
inc
shlb
jae
adc
or
jp
movsb
enter
mov
shll
mov
xor
aad
out
and
repz
mov
xor
pop
pxor
addl
jle
movsb
ret
movsb
mov
jmp
and
sub
push
ljmp
mov
shrl
cld
into
test
xor
rclb
idivb
sub
jg
adc
cmc
jp
mov
add
xchg
pop
fistpll
gs
jle
cltd
pop
je
cwtl
fidivl
mov
ljmp
cmpsl
jge
inc
adcb
clc
movb
push
lret
push
enter
adc
push
mov
jnp
scas
iret
lock
movsl
cmp
scas
outsl
leave
rol
je
or
lret
mov
ret
fwait
leave
call
ljmp
das
or
mov
push
fstpl
mov
jmp
inc
adc
mov
inc
sarb
mov
jo
xchg
shl
cmp
lock
mov
stos
mov
or
cld
iret
ss
lods
nop
cmp
jl
xchg
jns
dec
fstps
adc
push
add
add
jmp
and
andl
arpl
dec
orl
and
sub
sahf
pop
dec
or
xchg
test
orb
or
push
adc
pushf
mov
stc
dec
xor
shlb
std
loop
into
pop
adc
sub
xchg
je
enter
scas
push
mov
test
ror
arpl
mov
lahf
dec
mov
mov
jne
pop
test
inc
xchg
scas
inc
pop
andb
test
mov
pop
pop
inc
in
push
clc
xchg
jp
push
adc
sarb
addr16
sub
push
ja
sti
je
in
pop
lods
cmpsb
jecxz
jb
pop
lods
or
add
adc
push
int3
xor
aas
or
stc
inc
in
in
and
push
xchg
jb
aaa
xchg
jg
in
in
adc
mov
and
sub
loopne
mov
jne
cmp
ds
out
jbe
call
mov
test
lcall
jle
mov
dec
push
sbb
and
mov
and
jecxz,pn
pop
push
add
jnp
fsubs
mov
lcall
sbb
lret
stos
clc
cmp
sbb
add
cli
cmp
inc
jmp
pop
shlb
call
outsb
or
repnz
xchg
or
loop
in
cmpsb
arpl
xor
dec
inc
add
sbb
test
sbb
pop
push
mov
clc
in
addb
enter
test
and
add
mov
cmpsl
nop
sub
mov
imul
push
mov
clc
sbb
push
mov
dec
and
dec
xchg
xor
xchg
scas
movsl
out
inc
fnstcw
sub
xor
mov
mov
xor
out
push
mov
inc
stc
pop
lods
xchg
idivl
ljmp
pop
add
mov
adc
mov
inc
jb
push
or
cli
enter
out
fldcw
mov
loope
inc
orb
ret
xchg
mov
push
fadd
push
cmp
inc
sbb
jl
xchg
mov
aam
rcrb
adc
subl
sub
popf
into
addb
in
popa
cmp
shrb
pop
popf
inc
pop
insl
lds
mov
mov
scas
push
test
fcmovnb
ljmp
cmpsb
mov
and
outsl
sbb
pop
negl
loope
enter
inc
jns
xchg
xchg
mov
xor
int3
into
inc
stc
loope
jle
mov
inc
inc
add
rorb
pop
or
mov
sub
add
jo
xchg
adc
mov
dec
les
sub
loopne
pop
std
jns
lods
movsl
sbb
jnp
andl
sub
cmp
scas
aam
sti
inc
add
insb
nop
lahf
xchg
adc
scas
sbb
sbb
addr16
js
ret
adc
push
cltd
push
mov
ret
lds
fcoml
mov
fwait
icebp
mov
movsb
cltd
cld
xchg
sub
pushf
scas
pop
es
dec
mov
sbb
nop
stos
jnp
sarl
aaa
xor
stc
xor
pop
sbb
jle
push
fcmovb
pop
jbe
je
add
mov
shrb
mov
pop
sub
xlat
lds
xchg
and
popf
or
adc
adc
in
sub
in
fldl
xchg
jbe
shll
ljmp
mov
add
mov
sbb
orb
test
jg
jns
add
inc
lea
mov
sbb
sti
movl
or
cmpsb
cwtl
pop
push
add
ljmp
repnz
and
out
aam
jbe
sbb
call
jge
dec
mov
int
pop
mov
fistpl
mov
pop
xchg
repnz
das
cwtl
std
imul
add
in
les
inc
mov
fwait
popf
or
xchg
inc
mov
cmp
xor
dec
push
outsb
or
jle
mov
aaa
mov
sub
inc
mov
int
rcrl
ljmp
pop
mov
fcmove
mov
adc
mov
lret
or
pushf
sub
aad
sahf
add
icebp
jge
mov
ds
pop
add
and
jecxz
and
dec
xchg
not
push
push
xchg
sub
or
out
call
jl
stos
mov
mov
xor
loop
cs
lahf
sub
clc
stc
xor
mov
call
lret
fnstcw
sbbl
ss
mov
inc
pushf
and
dec
mov
test
jno
mov
inc
jne
daa
mov
inc
rclb
inc
fs
fstpl
movsb
out
pop
mov
cmp
lock
sub
popf
or
inc
cmp
aas
and
mov
adc
stos
push
jmp
sbb
push
lods
fdivrl
mov
sub
push
imul
sub
insb
mov
sub
jbe
push
fs
cmp
mov
xor
sahf
cmpsl
push
fldl
xor
mov
fldt
sub
and
mov
or
cmp
mov
pop
clc
imul
fstl
bound
push
sub
mov
fldenv
xor
cmp
ds
jle
xor
xchg
xor
fnstsw
clc
out
pop
jecxz
push
clc
ja
or
sub
inc
push
incb
fnstenv
pop
or
xor
lret
jecxz
dec
shlb
cmp
mov
xor
mov
push
or
inc
iret
fcmovb
js
or
arpl
inc
jno
jb,pt
mov
mov
ss
imull
jne
xor
inc
enter
mov
add
xor
popf
sti
pop
mov
sub
push
enter
push
sub
dec
mov
sbb
out
dec
or
ds
lods
ret
or
fsubl
cmpsl
sbb
pop
sbb
jle
ds
jmp
fidivrl
bound
pushf
mov
inc
dec
ss
leave
loopne
loop
pop
inc
pop
aam
xor
fs
push
aam
mov
js
mov
dec
pop
iretw
sub
pop
mov
push
sti
jge
xchg
icebp
sub
mov
scas
imull
insb
inc
or
js
pop
test
cs
adc
data16
cli
fisttps
inc
inc
pop
mov
inc
leave
dec
and
test
dec
sub
xchg
or
shrl
xor
fldt
and
iret
xchg
repnz
fs
add
inc
inc
or
out
movsl
adc
cmp
mov
add
dec
jo
ss
cld
push
fldenv
ja
xchg
sub
mov
cltd
jae
and
xor
pop
inc
lds
pop
scas
sbb
and
stc
insb
pop
cmp
data16
movups
in
adc
out
movb
pop
fdivrp
repz
xor
arpl
movsl
add
rcr
lret
rcr
sar
dec
mov
xorl
lahf
cmp
cli
jmp
test
fwait
daa
xor
pop
pusha
sub
or
dec
mov
pop
aas
pop
mull
mov
cmp
jp
imul
faddp
inc
or
cs
test
mov
sbb
xor
loope
cmpsl
cmc
cmp
fcoms
inc
push
pushf
fstpt
outsl
jne
fstpl
in
adc
cmpl
mov
ja
push
or
ficomps
xchg
dec
ret
pop
xorb
jb
cmovl
pop
cmc
dec
aas
in
mov
out
sbb
sub
dec
jl
not
jne
dec
cmc
jmp
sbb
cmp
je
inc
aas
das
repz
leave
test
nop
inc
jbe
sub
or
pushf
cld
cmp
cmc
xor
in
idivb
push
mov
leave
lea
dec
lds
movsl
sbb
shl
and
push
outsb
sub
cmpsb
adc
adc
push
mov
xor
rcr
or
in
dec
inc
inc
mov
int3
mov
adc
pushf
enter
adc
jl
adc
jl
in
andb
mov
scas
xor
testl
aaa
aas
xchg
mov
adc
cmp
push
out
enterw
ret
adc
loop
push
dec
jne
call
inc
lret
cmp
add
jg
sahf
pop
cmpb
cmp
pusha
add
cmc
scas
nop
cwtl
xchg
ret
jmp
sbb
mov
inc
xchg
out
or
pusha
lret
adc
insl
cs
in
push
data16
popa
sub
lret
cmp
sahf
sbb
jns
shl
imul
jb
pusha
loope
int
leave
jge
push
and
push
cmp
scas
aam
add
ficoml
popa
int3
pop
mov
push
xchg
icebp
xor
inc
insb
outsb
int
push
push
aaa
mov
xchg
aam
mov
mov
cmp
sub
das
xor
out
andl
xchg
lods
inc
jp
sbb
pop
cltd
inc
inc
int3
lcall
sub
push
adcb
cmp
and
stos
cmp
inc
cmpsb
pop
icebp
cmp
cltd
insl
inc
aaa
or
mov
loope
inc
lret
movsl
popl
mov
mov
pop
flds
xor
iret
scas
mov
mov
cmp
nop
aaa
cmpsl
dec
pop
inc
push
scas
imul
icebp
paddsb
fwait
cmpsb
push
dec
loop
jbe
ret
stos
das
xchg
cmc
and
push
fxch
add
or
aad
insl
push
push
and
ljmp
es
fidivs
lds
es
mov
jle
sub
in
sbb
pop
cmp
test
jp
and
pop
xor
lock
enterw
cmp
icebp
dec
cmpsb
mov
adc
js
nop
test
stc
and
xor
ja
fistps
pop
mov
mov
js
aaa
mov
adc
cmpsl
rclb
scas
pop
movsb
mov
and
push
xlat
adc
adc
fs
aaa
xchg
repz
add
or
add
adc
dec
out
ficoms
movsb
inc
popf
inc
cvtdq2ps
and
sbb
mov
insl
lret
pop
mov
pop
or
pop
test
in
in
test
scas
fwait
fs
enter
adc
test
push
lods
jecxz
cmp
dec
sub
push
add
adc
or
pop
in
cmpsb
pop
xchg
mov
test
nop
sbb
sub
test
adc
xor
movsb
mov
aad
iret
jmp
inc
pusha
mov
lods
cltd
mov
cmpsl
paddd
out
and
scas
inc
fcoml
or
pop
cmp
sarb
fstpt
xchg
jmp
xchg
negb
push
mov
fbstp
arpl
cld
mov
cld
inc
dec
addl
hlt
mov
lahf
ss
test
cmovg
dec
cmp
adc
add
scas
div
xchg
sarb
cmp
lcall
int
jno
shrd
add
rorl
and
or
sbb
sub
insl
lahf
xor
xor
shl
jmp
test
push
outsl
jl
lea
sub
or
push
and
adcl
pusha
sbb
sbb
repnz
lea
fbld
or
mov
pop
popa
out
loopne
jb
mov
mov
out
and
xchg
out
and
jp
mov
dec
pop
inc
adc
mov
cmp
inc
mov
jb
out
push
aaa
mov
mov
inc
rclb
mov
mov
test
gs
xor
sbb
jbe
test
pop
mov
popa
add
daa
mov
shl
ficomps
out
push
xchg
int3
lods
sbb
cs
sbb
dec
adc
jmp
notb
mov
sub
xchg
roll
shrl
push
sti
push
sub
or
add
cltd
pusha
adc
add
xor
pop
or
out
dec
std
pop
push
stc
sbb
xchg
push
pop
loope
mov
mov
jbe
movsl
and
sbb
fisttpl
out
add
mov
insb
mov
sbb
xchg
frstor
sbb
sub
lret
xchg
imul
pop
in
cmpsl
loope
dec
stc
loopne
inc
notl
sahf
mov
arpl
push
cmpsb
dec
dec
into
inc
arpl
pop
mov
dec
push
adc
std
dec
mov
mov
ljmp
mov
or
xor
rorl
xchg
pop
sub
push
test
pop
enter
stos
vshufps
in
test
push
cltd
dec
insl
dec
inc
jmp
mov
xorl
xor
xchg
jge
push
jl
lcall
mov
xchg
imul
push
fisttps
xchg
dec
sti
sub
pop
and
push
and
insb
hlt
jmp
and
ljmp
mov
adc
loop
test
push
fs
and
rcl
xor
cmp
test
lcall
dec
leave
push
mov
adc
xchg
xor
repnz
shrl
push
cmc
pand
lcall
dec
pop
mov
adc
xchg
das
out
push
push
jmp
popf
hlt
fldt
int3
and
cmp
and
movsb
dec
pusha
mov
pushf
dec
jbe
xor
push
lret
das
push
dec
ret
and
mov
daa
lds
jbe
sbb
push
add
adc
enter
dec
jne
shll
mov
adc
in
pushf
push
add
jns
sbb
jl
test
pop
inc
out
sub
pop
scas
pop
inc
sub
pop
xchg
out
and
xchg
cmp
hlt
loope
push
push
sub
dec
push
xchg
lcall
lret
cwtl
call
clc
fcompl
sahf
into
test
sub
dec
inc
addr16
push
in
shl
or
je
dec
call
repnz
push
outsl
aas
or
enter
add
mov
mov
in
and
ds
test
mov
ret
push
inc
xchg
push
push
shl
out
push
ljmp
and
out
or
add
sub
push
scas
mov
dec
int
dec
mov
lahf
add
sub
push
mov
test
not
mov
cmp
cmp
sbb
dec
fdivs
cmc
sbb
jge
imul
cs
cmp
sbb
in
out
adc
out
sub
fs
fwait
shll
and
loope
mov
add
and
jp
xchg
dec
jne
aaa
sbb
mov
xchg
jns
mov
out
mov
out
xchg
mov
mov
imull
pop
jecxz
cmp
aam
xor
stc
fldenv
or
daa
movb
sbb
cmc
jb
mov
jnp
sbbb
inc
sub
js
ljmp
push
inc
rsqrtps
jl
push
and
adc
clc
pop
mov
stos
or
insb
insl
cmc
lahf
inc
sub
dec
sbb
cltd
icebp
jno
push
sahf
sbb
or
sbb
loopne
int3
fsts
fists
bswap
sbb
aaa
xchg
mov
rcrb
dec
sub
stc
xor
mov
cmp
push
aaa
in
push
push
mov
xorb
xlat
enter
sbb
enter
leave
add
ret
addr16
aaa
fildll
mov
pop
dec
dec
insl
adc
subl
lret
xor
out
into
vpmacsww
sarb
xorl
xchg
movsl
add
sbb
dec
dec
addr16
mov
mov
mov
sbb
outsb
cmp
adc
popf
dec
push
and
pop
mov
cmp
push
fdivl
mov
mov
mov
les
xlat
clc
sbb
imul
dec
lds
jae
mov
dec
jecxz
add
cltd
in
lahf
or
dec
cmpsl
mov
or
aas
cs
or
dec
insl
cmp
mov
les
repnz
into
pop
jge
scas
pop
adc
jmp
and
nop
jno
or
jnp
jno
stc
test
ds
xchg
xchg
pusha
jnp
fstps
lds
popa
ja
mov
jge
mov
les
aam
test
mov
subl
into
in
pop
and
mov
clc
rep
out
bswap
dec
jle
fisttpl
ror
je
out
sub
outsb
jge
and
jb
xor
cmp
sbb
cmp
and
push
movsb
inc
test
push
or
mov
cmp
sbbl
out
cs
xor
int
bound
xor
pop
shll
jp
jle
cmp
mov
mov
xor
imul
or
push
pmovmskb
pop
push
call
inc
xchg
int3
cltd
jg
xchg
or
dec
and
stos
xchg
test
dec
dec
or
and
xchg
xor
aas
insb
test
sub
stos
mov
call
ja
imul
aam
push
adc
fwait
repnz
jecxz
jb
inc
lods
fxch
dec
fistpl
adc
repnz
pop
filds
push
pop
fwait
xchg
data16
lret
jg
or
test
mov
shll
cmp
dec
xor
cltd
add
adc
jecxz
push
mov
test
pop
add
outsl
dec
inc
add
lods
and
or
lods
mov
leave
inc
adc
notb
cmpsl
xchg
jle
adc
push
or
rclb
adc
cli
mov
mov
inc
adc
dec
fsts
dec
and
jno
in
inc
test
insb
lods
ror
cmpsb
ds
in
mov
mov
dec
mov
sub
or
xor
popa
and
pop
inc
xor
xchg
andl
cmp
pop
ret
ffreep
into
mov
cmpsb
xchg
cmp
rol
ret
and
test
shlb
out
xchg
adc
dec
addb
jmp
pop
dec
jb
insl
push
clc
outsl
dec
repnz
ljmp
aas
jne
popa
lcall
sub
in
fnstsw
enter
sbb
mov
adc
sti
or
add
repz
jb
push
ret
js
mov
cs
inc
adc
das
adc
mov
movsl
rcrb
push
daa
cmp
call
aam
pop
inc
jg
inc
pop
cmp
jecxz
xor
shll
mov
lods
xor
pop
loope
imul
mov
push
xchg
popa
adc
stos
sub
insl
inc
cmp
sbb
loopne
mov
push
mov
cmp
aas
fcmove
mov
and
mov
les
push
inc
rclb
int3
push
mov
test
mov
popa
lods
lcall
scas
jp
leave
mov
out
or
mov
adc
loop
out
push
adcb
and
arpl
daa
jbe
rclb
in
movsb
stos
mov
push
cwtl
sbb
xchg
aaa
xchg
sti
jge
jnp
fcomip
pop
fimull
push
jle
lcall
inc
loope
imul
adc
jge
jbe
ficompl
cmp
mov
std
dec
sbb
incl
loopne
and
push
adc
jo
jg
mov
loop
mov
jmp
out
andl
fsubp
daa
repz
icebp
push
pop
repnz
ret
lret
mov
inc
les
add
push
mov
mov
sub
es
dec
in
jecxz
test
mov
inc
sbb
xchg
ret
mov
xchg
fstl
mov
inc
mov
stc
sarb
inc
out
shll
in
loop
mov
adc
mov
adc
andb
ret
ljmp
mov
push
repnz
sbb
scas
pop
push
add
stos
and
or
ret
popf
pop
push
loop
and
cmpsb
adc
data16
xor
push
pop
mov
int
mov
mov
loope
popf
mov
lcall
mov
and
inc
mov
sbb
enter
movsl
sbb
inc
jg
in
xor
xchg
and
in
mov
pop
sub
inc
imul
imul
sarl
inc
jb
and
dec
adc
add
adc
fstpl
and
icebp
pop
test
movsb
push
int
inc
stos
loope
cmp
and
dec
call
mov
inc
sbb
mov
mov
pop
mov
cltd
shl
cs
mov
inc
push
push
imul
pop
daa
jbe
dec
out
inc
jae
pop
or
or
and
call
addl
pusha
fcomps
sarb
jns
stos
sub
cmpsl
scas
rclb
cmp
lahf
push
jo
mov
hlt
push
lcall
jae
xchg
push
adc
xchg
push
adc
movlhps
cmc
jle
add
mov
xor
js
add
out
shlb
mov
cmp
adc
jne
xchg
stc
cmp
mov
aad
dec
pop
mov
or
in
pop
mov
loopne
add
sbb
ffree
xchg
mov
loope
xchg
and
inc
fldt
mov
scas
movb
mov
dec
adc
cmpsl
pop
xchg
mov
ss
outsb
cli
mov
cmp
lahf
lahf
or
jns
jae
pop
xchg
lret
inc
dec
push
enter
loopne
add
jmp
push
loope
jle
mov
nop
push
or
aaa
xor
sarb
aam
mov
dec
shlb
jo
cmpsl
fwait
pop
inc
lret
push
and
cmp
decb
dec
pop
adc
jmp
in
pop
ret
cmp
enter
mov
jmp
push
jb
dec
sub
cmpsl
mov
adc
add
push
out
rorl
fldcw
push
push
hlt
and
test
les
xchg
sub
imul
cmp
mov
mov
rcr
dec
in
fadds
xor
dec
mov
xchg
int
in
lods
push
cltd
test
into
stc
hlt
in
cmp
pushf
xor
inc
idivl
popf
sbb
stos
js
dec
ds
push
xor
stos
xchg
pop
and
in
xlat
or
mov
dec
dec
mov
lahf
lods
fisubl
daa
and
scas
inc
inc
inc
ret
aad
xchg
in
subb
rcrb
in
inc
mov
mov
or
xor
lfs
cmpsl
frstor
outsl
fcoms
loope
nop
aas
addr16
cli
scas
xchg
lock
push
mov
jmp
pop
loope
rol
add
leave
icebp
pop
xorl
inc
fidivl
in
mov
divb
and
mov
push
insb
mov
xor
pop
dec
adc
push
mov
scas
xchg
pop
out
xchg
pop
in
in
shll
sub
xor
and
stc
pop
adc
xor
add
leave
xchg
jle
movsb
adc
push
or
stos
pop
dec
popf
jbe
sbb
dec
test
fidivrs
or
xchg
xor
mov
add
xor
pop
movsb
lcall
inc
mov
xor
out
sbb
mov
xchg
imul
in
or
and
stos
adcb
lcall
and
xor
lock
sahf
jno
jmp
mov
lea
stc
mov
mov
mov
jb
outsl
inc
or
out
clc
add
fnsetpm(287
adc
mov
dec
mov
ljmp
pop
adc
adc
cmp
jns
cmpsb
loope
inc
outsl
push
cmp
inc
ljmp
xchg
lods
or
nop
aam
mov
cmpsb
and
lret
pop
mov
subl
jle
jb
mov
sbb
pushf
cmpsl
lock
dec
test
icebp
arpl
lock
dec
pop
dec
aam
pop
jbe,pt
inc
mov
jecxz
xor
push
adc
add
das
test
ljmp
and
and
cs
pslld
jo
sbb
jle
mov
jbe
scas
cmp
arpl
lds
pop
ficomps
sbb
xlat
leave
mov
cs
and
sti
mov
stos
sub
nop
xchg
and
mov
repz
addr16
testl
jno
pop
push
dec
mov
sub
iret
sbb
dec
and
stc
loope
sahf
push
ret
rolb
dec
imul
inc
xlat
gs
pop
sbb
icebp
sub
cli
stc
into
mov
nop
cmp
aam
and
dec
add
mov
scas
into
js
out
xchg
pop
inc
mov
sbb
xchg
xchg
add
in
mov
scas
sbb
xchg
decb
psubusw
out
or
repnz
in
pop
cli
iret
test
xchg
cmpsl
inc
in
jmp
dec
jnp
mov
cld
cmc
mov
xchg
imul
jb
psubd
into
fistps
pop
mov
lds
xchg
and
xchg
jecxz
test
daa
jb
sub
outsb
lahf
or
andb
into
andl
and
movsb
and
jnp
and
xchg
xor
jmp
cld
or
or
divb
mov
rorl
psrlw
inc
sub
push
cmpb
add
out
jecxz
arpl
movsl
and
sbb
lahf
lods
lods
adc
test
pusha
icebp
mov
lret
xor
lahf
dec
jb
dec
xchg
js
into
adc
mov
mov
xor
mov
das
sbbb
xchg
xlat
fistl
stos
jo
sbb
cmp
pop
jmp
cmp
or
nop
cli
test
sbb
adc
dec
leave
fnstcw
adc
jg
lahf
imul
push
je
inc
jecxz
mov
mov
mov
ljmp
mov
insl
mov
jae
pushf
mov
arpl
push
aad
ret
inc
lods
jae
jp
or
mov
dec
cmpsb
cwtl
mov
lods
popa
in
adc
stos
addr16
cmp
and
pop
inc
dec
inc
dec
push
and
leave
arpl
je
imul
add
enter
enter
hlt
ljmp
pop
xchg
loope
repz
outsb
lret
ds
sub
pop
imul
dec
andl
les
fimuls
andb
fidivl
push
loope
popw
xchg
aaa
pop
cwtl
sub
repz
push
push
fs
pusha
sub
roll
daa
add
and
pop
cmp
push
xor
push
mov
inc
cmp
and
mov
clc
sub
inc
lock
stos
adc
inc
sbbl
int
mov
push
loopne
inc
mov
nop
popa
mov
and
shrb
ret
pop
sbbb
jno
pop
and
and
int
adc
stc
stos
mov
jns
sti
and
icebp
mov
and
scas
stos
and
sbb
inc
jne
mov
cld
fisubs
je,pt
sahf
push
push
fnstcw
sub
insl
pop
or
div
sahf
dec
cs
add
inc
sub
aad
pop
test
lea
cwtl
mov
bnd
inc
mov
pop
or
sti
je
mov
call
adc
cs
push
mov
push
dec
fcmovnbe
mov
fldl
fstl
push
mov
or
jecxz
ficoml
dec
jg
mov
cmp
fisttps
inc
in
daa
out
mov
cwtl
rclb
mov
pop
mov
push
jp
ret
push
lahf
push
push
push
jno
mov
mov
lds
lret
dec
inc
fs
ret
outsl
je
push
adc
xlat
out
mov
inc
sbb
sahf
adc
les
add
inc
xchg
in
mov
sahf
mov
out
push
cmp
lret
cmpsb
out
arpl
jns
loopne
cmpsb
ja
in
mov
insb
popa
adc
push
movsl
and
xor
or
lret
aas
sbb
push
lds
ds
shlb
cmpsl
clc
sub
mov
inc
iret
adc
lods
add
cmp
mov
mov
sbb
mov
sub
cmp
push
mov
xor
mov
addr16
into
and
or
cmpsl
add
roll
fsts
sub
outsb
cwtl
cmp
mov
cld
pop
sub
nop
inc
or
loop
jmp
push
jmp
pop
and
xor
sub
add
pop
fisttpll
sub
dec
mov
jae
test
mov
decl
mov
ret
add
in
push
mov
fst
adc
cltd
jge
cltd
adc
sub
cmp
sub
mov
loopne
pushf
rorl
jbe
adc
push
mov
inc
jno
jnp
test
dec
loope
neg
mov
pop
fs
mov
xchg
in
shrb
pusha
and
fistpl
jge
jge
fbstp
sbb
sbbb
mov
sbb
jmp
add
cmp
ljmp
je
into
mov
add
out
or
adc
adc
nop
xor
mov
lock
push
arpl
xor
mov
shl
and
and
xor
sbb
sub
push
jg
incl
adc
inc
adc
sbb
xchg
push
aas
aaa
inc
mov
scas
xchg
xlat
sbb
cli
xor
ror
jecxz
sbbl
add
lret
jbe
and
data16
push
int3
inc
mov
adc
cs
ss
std
fsubs
fistpll
push
ljmp
ret
push
dec
loope
popf
xor
ret
push
mov
jae
call
sbb
jmp
and
xchg
xchg
pop
sbb
loopne
icebp
hlt
xchg
outsl
jl
dec
and
cli
shll
adc
mov
movsb
dec
cmp
in
adc
sbb
xchg
icebp
sub
nop
outsb
fistpl
mov
adc
aam
cmp
cmpsb
sub
mov
xor
jg
insb
addps
xchg
xchg
mov
lds
fld
out
cltd
or
stos
cmc
insb
lods
mov
pop
pop
cmpsb
xor
fsts
mov
cmp
pop
mov
shlb
and
outsl
and
push
insl
sbb
xor
dec
das
inc
xlat
fwait
shll
jmp
punpcklbw
insl
or
fwait
mov
or
adc
mov
rorl
inc
push
out
shll
stc
imul
xchg
test
dec
xchg
pusha
adc
xchg
imul
loop
mov
mov
push
test
sbb
arpl
testb
test
sbb
mov
cmpsb
push
into
mov
hlt
sub
push
shlb
cwtl
aad
fimull
int3
mov
pushw
das
nop
push
hlt
push
sbb
lret
or
pusha
or
mov
xchg
jnp
sbb
aaa
cs
sbb
mov
adc
rolb
mov
mov
mov
ds
cltd
jnp
mov
jns
push
repz
jb
mov
add
add
fmul
add
int
or
sbb
arpl
lcall
or
push
pop
cli
inc
rclb
push
out
adc
ja
leave
cmpb
mov
imulb
repnz
subb
lods
out
test
faddl
mov
mov
test
in
or
test
adc
mov
loop
sub
fstpl
flds
subl
jbe
aaa
mov
cmpsb
out
jnp
xchg
or
sahf
in
pop
sub
and
repz
out
es
pop
scas
sbb
xchg
sub
xor
inc
push
mov
mov
movsb
das
rcl
mov
mov
in
aad
adc
cs
out
sbb
jb
int
jmp
out
les
xchg
leave
jae
das
pop
call
dec
and
adc
les
or
push
push
pop
sti
push
jg
and
add
jnp
adc
call
fstpl
lock
inc
push
push
adc
jno
pop
lods
movsb
inc
cmp
imul
int
nop
pop
jg
sbb
mov
jb
add
push
aas
mov
scas
rcl
in
int
or
fwait
idivb
xor
mov
mov
sbb
arpl
xchg
mov
sub
mov
shl
push
mov
jo
jns
pushf
cmpb
fmulp
sti
jmp
mov
testl
jge
mov
out
sbb
mov
insl
mov
mov
dec
aam
adc
adc
popa
sub
fistpl
loopne
jne
ds
and
and
and
lret
xlat
jmp
sub
mov
xor
addb
dec
cld
rol
mov
mov
pop
or
pop
jmp
insl
push
push
push
sahf
fs
or
push
aad
lret
stos
into
cmpsl
mov
adc
dec
in
mov
sbb
sub
fdivs
xchg
das
mov
mov
pop
test
outsl
push
inc
dec
lea
pop
push
sbb
call
imul
fsubl
mov
xlat
push
imul
adc
inc
jno
add
in
popa
jnp
ret
ret
inc
and
std
mov
stc
adc
addr16
inc
push
inc
and
cli
mov
mov
mov
push
push
arpl
stos
inc
inc
aad
xchg
or
or
jnp
xchg
es
out
test
xlat
mov
test
jle
cmp
shlb
xor
dec
test
or
add
dec
pop
movsb
xor
test
and
inc
and
sbb
or
xchg
aaa
push
rcll
mov
rcrl
mov
enter
loop
mov
push
clc
aas
mov
aad
test
call
loop
jle
das
ret
and
or
mov
mov
pop
sbb
sbb
enter
cs
or
jne
pop
aad
xor
push
roll
cli
mov
mov
mov
cmp
repz
loope
ficoml
adc
xchg
xor
addb
cmp
sar
outsl
inc
mov
sub
imul
fwait
xchg
test
jns
push
outsl
xchg
ret
pop
pushf
cmp
lock
jg
cmp
data16
fsub
mov
xchg
je
sbb
fldt
adc
call
mov
jle
cli
insb
adc
lea
inc
or
jbe
icebp
std
inc
cmp
cli
add
popf
adc
in
loopne
in
aad
daa
sub
jb
ljmp
xor
adc
jb
aaa
jecxz
aam
stos
in
mov
mov
sbb
mov
dec
arpl
xchg
add
cmpsl
lret
leave
loope
or
loopne
test
test
jp
xchg
add
pop
ljmp
lret
sbb
cmp
inc
mov
out
dec
test
ss
sbb
pop
mov
add
fwait
mov
repnz
add
jecxz
pop
ds
sbb
jae
pop
testl
lock
and
fiadds
popf
add
cmp
push
repnz
dec
repz
fisttps
test
sbb
les
pop
movsb
or
fistl
test
movsb
leave
jnp
dec
dec
fistps
out
popf
push
adc
stc
addr16
or
jns
sub
xor
add
bound
jg
or
inc
iret
test
loop
nop
mov
shrd
xor
ret
clc
inc
fprem1
pop
cmp
add
leave
mov
cmp
lods
dec
lret
sti
inc
xor
ja
sub
sti
add
jne
lods
pop
aas
rcll
stos
iret
movsb
jge
pop
xchg
shl
fisubrl
xor
and
popf
shll
out
clc
dec
pop
jmp
mov
mov
mov
push
out
inc
repnz
ja
or
cmp
adc
in
pop
lods
in
cli
pop
xlat
cmpsb
mov
fstp
adc
xor
mov
add
inc
es
lods
bound
dec
fistpll
cmp
and
pusha
xchg
mov
mov
addr16
xchg
cmp
xor
insb
push
data16
nop
ror
jbe
ficoml
shrb
sbb
mov
push
imul
in
pop
test
inc
int
jnp
or
aas
call
bound
bound
lock
cmc
inc
cmp
dec
ret
cmp
jae
dec
pusha
ret
cld
aam
adc
jnp
jae
sbb
push
leave
popf
jmp
fdivr
add
lret
fisubrl
adc
cmp
into
jae
cmp
es
ret
sar
or
mov
push
cwtl
sbb
mov
mov
xchg
iret
cmp
idivb
pop
adc
stos
add
rorl
add
pop
push
flds
mov
and
xchg
cmp
or
loope
fldl
dec
jo
lea
pop
je
adc
mov
mov
pop
fs
mov
into
rcr
mov
aas
mov
jae
add
out
mov
in
mov
jns
push
out
push
adc
xchg
loop
lret
sbb
fucom
sbb
arpl
inc
fimull
lods
inc
loope
repnz
lods
dec
pop
dec
bound
aam
clc
aad
xor
dec
roll
loopne
pop
cmc
add
sbbl
mov
pop
call
push
ljmp
clc
push
mov
cmp
push
sbb
insb
std
or
add
pop
sub
or
sub
push
outsl
stos
sbb
aam
das
add
sub
in
data16
xchg
and
or
imul
or
fisubrl
push
cmp
std
lcall
in
js
stc
cmpsb
cs
iret
push
and
dec
inc
cmp
enter
je
xlat
mov
xchg
inc
daa
ljmp
insb
lods
push
stos
mov
mov
lds
scas
sbb
pop
push
repnz
sbb
hlt
shll
scas
add
or
leave
cmp
rorl
imul
cmp
aam
inc
mov
and
sub
adc
push
loope
cmp
ljmp
dec
mov
push
xchg
mov
pushf
or
pushf
adc
insb
mov
aam
xor
mov
out
mov
mov
xchg
jbe
adc
mov
in
mov
cmc
adc
pop
xchg
dec
add
mov
mov
ja
fadd
dec
xchg
hlt
or
loope
lret
aaa
in
pop
mov
sub
push
clc
xor
jle
in
inc
out
mov
idivb
daa
and
mov
pop
push
xchg
mov
cmpsb
stos
stos
notl
dec
pop
lds
or
dec
add
cmpsb
xchg
sub
jge
cmp
lods
lcall
cltd
jmp
pop
jne
mov
cmpsb
loope
mov
fstl
out
adc
lods
roll
popf
push
pop
ds
or
arpl
add
fs
xchg
sub
in
xor
push
dec
std
pop
mov
mov
in
es
loop
adc
or
and
and
jne
or
xchg
ljmp
and
xchg
leave
bound
arpl
fcomip
mov
dec
sbb
xchg
and
fdivrl
xchg
push
mov
repz
pop
cwtl
cs
dec
sbb
jnp
sbb
jnp
and
icebp
stos
xchg
inc
insb
mov
cltd
mov
fxch
hlt
in
sub
cmp
cmp
popf
add
and
add
repz
jge
add
or
jge
fwait
cmpsl
add
mov
es
js
das
dec
les
xor
xchg
adc
xor
int3
xor
push
push
xchg
pop
popf
jno
idiv
push
xchg
leave
and
push
jns
and
mov
mov
aas
movsl
mov
fistpl
std
and
push
jl
or
hlt
bound
jl
scas
xor
mov
mov
mov
adc
pop
adc
sbb
cmpsl
loope
cmp
cli
cmp
jmp
ret
xor
push
cmp
mov
rorl
push
testl
js
movsl
out
shr
aaa
adc
mov
movsl
pop
mov
sarb
mov
insl
jl
outsb
and
cs
rcr
pop
insb
mov
mov
mov
shll
or
cmp
aas
mov
js
insl
and
dec
cmp
cmp
pop
enter
nop
ret
push
mov
cmpsb
mov
add
jg
sub
cmc
test
pop
mov
sub
and
fcmovnb
mov
xor
adc
ljmp
iret
mov
or
call
xchg
dec
lds
or
and
hlt
mov
int3
fsubrs
mov
xchg
mov
mov
int
imul
bound
nop
fucomip
jmp
xchg
fdivrs
aad
push
and
push
les
shll
es
add
pop
sub
or
out
cvtps2pi
push
lds
sub
aad
sti
sarl
fsts
jp
int
in
push
push
cmp
gs
mov
in
jp
hlt
push
adc
jo
pusha
dec
arpl
add
jb
add
add
jae
adc
fcomps
jno
jp
fldl
fdivrs
mov
fidivs
lahf
mov
divb
mov
pop
dec
sub
lret
and
xchg
jl
outsl
in
repz
cmp
inc
pop
scas
loope
adc
lods
dec
add
ss
dec
add
loope
inc
movsb
push
sbb
mov
mov
push
xlat
sub
fnstcw
mov
std
into
dec
roll
movsl
mov
imul
jno
xchg
adc
mov
scas
loopne
lods
out
push
bound
popf
add
jmp
mov
xchg
push
or
and
jl
into
clc
ds
inc
movsb
scas
data16
stos
jo
push
cmp
add
xchg
je
lret
out
cmp
lods
fldl
sbb
imul
add
ds
dec
dec
xchg
mov
push
into
xor
jbe
mov
imul
lock
add
ret
hlt
cmpsl
xor
xor
jae
sub
in
ss
mov
das
push
adc
dec
cmp
cld
aas
lcall
push
cwtl
iret
adc
adc
jnp
out
xchg
insb
and
subb
mov
cmpsb
cli
inc
push
in
aaa
mov
ret
xchg
sbbl
dec
inc
adc
fists
pop
je
cwtl
xchg
or
dec
fidivrl
dec
push
test
shll
call
and
adc
nop
xchg
shrb
inc
lret
lahf
out
mov
pop
lods
add
das
insb
insb
loope
xchg
jp
dec
mov
shll
movsb
and
stc
aam
push
test
inc
leave
xchg
lea
shll
enter
or
rcl
adc
inc
mov
gs
xlat
enter
outsl
mov
push
lahf
add
insb
xchg
jbe
das
int3
pop
push
fsubs
dec
loope
popa
xchg
mul
fsubrs
ret
add
mov
and
dec
inc
mov
or
pop
cmp
dec
jns
inc
add
mov
pop
out
pop
icebp
das
cmp
dec
jo
rcr
insb
or
sub
pusha
or
outsl
xchg
repnz
xor
std
js
subl
inc
pop
push
and
rorb
sbb
fstpl
sbb
mov
adc
lret
aam
imul
xlat
insb
adc
clc
pushf
jns
incl
mov
test
fcompl
pop
bound
insb
outsb
mov
dec
mov
xchg
mov
push
adc
adc
cmp
outsb
push
pop
mov
jp
inc
leave
aas
push
xor
xlat
bt
loope
mov
mov
or
mov
or
xor
shlb
xlat
mov
cmc
xchg
sub
les
insl
sub
lcall
rorl
cltd
pop
mov
cwtl
xor
bound
clc
sbb
or
pop
inc
popf
inc
ljmp
mov
mov
xor
stos
pop
test
xchg
mov
pop
call
xor
dec
xor
loop
lods
js
test
out
lret
xchg
jne
jle
cmpsb
imul
xor
outsb
out
pop
cmc
adc
push
testl
mov
arpl
inc
push
arpl
mov
fadd
fisubl
pop
in
xchg
mov
mov
sub
and
data16
das
dec
dec
test
mov
cli
add
dec
loopne
int
outsl
inc
leave
adc
inc
mov
cltd
inc
mov
ss
mov
dec
adc
jno
add
lods
adc
jmp
arpl
xchg
in
dec
inc
pop
and
pop
sub
cmpsl
movq
out
push
push
test
es
mov
int
jge
dec
push
mov
rcrl
mov
mov
loopne
mov
ljmp
mov
das
jecxz
cmp
gs
push
mov
jcxz
cli
lds
mov
insl
lret
adc
jl,pt
scas
scas
adc
or
xchg
and
aam
mov
xor
xlat
push
mov
decl
inc
lcall
mov
mov
xor
and
mov
add
stos
in
stc
clc
and
repnz
adc
or
or
dec
inc
push
movsb
je
std
lret
mov
mov
icebp
stos
into
xor
xorl
xor
cltd
jge
vpcmpgtd
adc
jle
mov
and
add
mov
sub
jl
fcmovnb
sbb
mov
push
movl
pusha
mov
sub
add
mov
loop
imul
imul
push
jnp
jl
fnstsw
leave
xchg
fildll
push
jnp
notl
movsb
or
ds
cld
or
mov
jne
mov
popf
repz
aad
inc
es
or
mov
fwait
ljmp
je
out
mov
push
push
adc
lods
lret
divl
mov
lret
hlt
pop
movsl
jae
es
sbb
mov
adc
jbe
push
idivb
mov
out
xchg
cmp
scas
std
jle
cmp
fdivs
or
xor
lret
gs
adc
lds
rclb
ffree
movsl
shrl
dec
jns
aad
test
scas
out
movsb
into
test
stos
push
sbb
jp
rclb
xor
ss
mov
lock
xchg
sub
or
icebp
jo
insl
stos
sub
adc
maskmovq
or
cs
inc
jge
in
ds
mov
jno
jno
and
mov
in
repz
xlat
and
push
repz
enter
fists
pop
popa
jno
scas
ja
push
xchg
jae
mov
in
pop
cmpsl
jecxz
sbb
sahf
loope
shld
ds
add
clc
das
mov
cmp
pop
and
notb
arpl
cli
popa
nop
nop
xor
adc
push
pop
mov
and
push
and
and
mov
imul
or
inc
push
or
xchg
push
les
mov
shll
std
nop
pop
pop
lds
adc
insb
and
sbb
inc
or
xchg
out
mov
dec
dec
cmpb
mov
faddl
and
cs
fadds
loope
cmpsl
je
dec
xor
mov
stos
add
into
adc
and
jbe
xor
sbb
stc
push
push
sub
jmp
aad
insl
and
sbb
pop
lcall
pop
test
pop
repz
jno
dec
cmp
pop
pusha
cmc
push
rol
fcomps
xlat
xor
and
cli
sbb
adc
mov
sbb
jl
jns
sbb
inc
mov
xchg
icebp
jne
mov
mov
pop
jbe
jp
sti
sub
mov
shrb
ret
xchg
mov
test
pop
fisttps
or
sahf
sbb
imul
das
push
lds
insb
iret
jno
mov
repz
mov
adc
fdivrp
and
icebp
mov
sbbl
adc
or
lea
movb
jno
dec
adc
lahf
ret
sbb
pop
bound
ret
in
pop
frstor
jp
scas
mov
or
cltd
addr16
jne
add
cmp
sub
movsb
sub
pop
and
cmp
xchg
lret
sbb
sbb
adc
push
mov
loop
jbe
mov
sbb
pop
cmp
outsb
mov
jae
dec
arpl
mov
xchg
xorl
pop
push
addr16
mov
fcompl
inc
xchg
rcll
sbb
or
and
pushf
pop
pusha
and
or
aaa
pop
cli
scas
dec
jne
xor
insl
mov
lret
adc
loope
imul
stos
xor
fstpt
cmp
jmp
inc
inc
std
mov
addr16
jle
int
mov
mov
scas
and
jb
nop
push
fisubrl
jge
bound
adc
enter
jecxz
movsb
and
out
ficompl
divl
or
rorl
sbb
push
mov
cmpsb
mov
xor
mov
cmp
lods
js
scas
ljmp
mov
mov
das
fidivrs
pusha
movsl
jbe
mov
cmp
ljmp
mov
sub
test
mov
dec
xor
orb
lahf
pop
cmpsb
fdivp
aaa
mov
ss
xchg
ss
add
call
in
dec
sbb
movsb
add
gs
xchg
shll
adc
or
or
andb
inc
out
xchg
xor
dec
mov
mov
xchg
loope
cld
cltd
in
mov
sub
stc
rolb
or
mov
and
jle
mov
jno
xchg
test
or
les
or
test
rcrb
outsb
mov
jbe
aad
test
jo
jno
and
cmp
pop
rolb
adc
and
addb
or
testb
inc
cli
dec
cli
or
sub
or
in
lds
ljmp
inc
out
mov
js
cld
movsl
inc
adc
mov
jp
inc
icebp
lcall
outsl
cmp
nop
xchg
adc
and
push
mov
mov
inc
sbb
aad
xchg
inc
jmp
cltd
pop
xchg
xchg
bound
fwait
or
rolb
mov
dec
je
dec
push
fisttps
mov
in
js
outsl
inc
cmp
lods
popa
cli
xor
aaa
cmpsl
popa
xchg
popa
lea
cmp
mov
test
inc
stos
lahf
fimuls
stos
ret
or
jb
xor
mov
jmp
bound
mov
ret
sti
outsb
cmpsb
or
inc
clc
and
sbb
lahf
shlb
arpl
cmc
outsl
aaa
negb
jns
fisubrs
pushf
push
and
add
or
pusha
into
adc
inc
test
or
test
adc
pop
mov
dec
es
fildl
inc
jne
sti
add
xorb
push
std
rcll
xor
push
sub
hlt
lock
mov
or
ljmp
in
cwtl
popa
cs
stos
test
std
jmp
dec
jno
mov
or
adcl
add
jae
pop
mov
mov
addb
pop
ss
push
cmp
jnp
inc
shll
inc
adc
ljmp
mov
out
in
aas
dec
jecxz
push
icebp
mov
loopne
sbb
bnd
pushf
roll
loop
aas
mov
insl
add
in
daa
mov
flds
outsl
jmp
mov
das
xchg
xor
lea
fstps
in
mov
stos
sub
push
dec
jmp
or
mov
jmp
mov
dec
mov
loope
or
jae
sbb
mov
xchg
call
data16
ficomps
ds
scas
jge
pop
mov
xor
std
sub
xchg
hlt
pop
mov
inc
dec
ret
jmp
jecxz,pt
fdivl
pop
lea
in
fstl
flds
pop
jo
rcrb
test
jae
movsb
addb
mov
ret
leave
cld
xchg
mov
arpl
xlat
push
das
mov
jge
int3
stc
call
inc
cli
cmp
jmp
cmp
xlat
push
jecxz
xlat
gs
lods
pop
xchg
repnz
mov
stc
in
enter
mov
mov
add
xchg
dec
fisubrs
ds
mov
inc
inc
hlt
sbb
pop
rcrl
pop
push
mov
test
pop
xchg
push
cmp
idivb
sub
das
or
xor
popl
xor
mov
xchg
rcr
pop
or
mov
sbb
enter
pop
xchg
jns
es
in
fimull
test
ja
cmp
xor
test
repz
cmc
sbb
xor
cmp
inc
inc
xor
xlat
cmp
cwtl
sbbl
jecxz
ljmp
imul
xlat
arpl
or
jb
subb
and
mov
mov
das
mov
adc
ds
fwait
inc
xchg
nop
insb
arpl
shrl
push
xor
nop
jnp
add
repz
in
push
dec
add
out
ss
push
sbb
pop
push
and
jns
mov
add
clc
or
lcall
adc
jmp
call
mov
push
pop
jno
push
push
das
xor
test
mov
sub
das
dec
scas
sub
mov
cmpsb
leave
xlat
lods
pop
jno
stos
dec
call
sti
lods
addps
subb
int
xchg
cmp
jge
push
addb
or
xor
sbb
repz
fwait
sbb
xorb
add
shll
sub
test
xchg
adc
jmp
sub
xor
int
push
shr
fmull
shlb
and
clc
shll
jnp
adc
stos
lret
int
mov
mov
imul
pop
leave
xchg
adc
les
js
cmpb
dec
andl
test
push
mov
jbe
shll
jbe
push
mov
xor
loope
out
out
mov
das
xchg
les
sbb
in
push
dec
pop
andl
arpl
sub
out
adc
shrl
movsb
divb
in
cmpsb
nop
mov
call
inc
adc
aas
push
popa
sbb
jbe
pushf
push
inc
jae
mov
xchg
int3
dec
aas
leave
mov
or
lods
or
mov
loop
out
sbb
fimuls
mov
std
pop
cmpsl
mov
pusha
sub
and
je
fnstcw
or
jbe
cmp
mov
test
cmp
pop
adcl
push
and
clc
fwait
inc
lock
sub
sti
mov
or
in
mov
mov
imul
ret
adc
inc
std
mov
stos
inc
jmp
test
test
sbb
bound
mov
xlat
fsubs
fisubrl
or
jmp
stos
ja
mov
xchg
dec
xchg
sbb
push
rorl
mov
les
xlat
jl
push
iret
pop
test
push
mov
in
fdiv
and
sarl
pop
movsl
sbb
mov
xlat
push
mov
sub
or
pop
cmpsb
mov
cwtl
mov
outsl
scas
pop
jns
dec
sub
jns
hlt
rclb
mov
xor
insl
mov
cmp
inc
in
pop
dec
sbb
dec
push
ret
pusha
jae
fmul
test
adc
add
adc
aad
loop
push
mov
and
and
adc
lods
dec
mov
repz
in
jg
push
addr16
mov
jnp
dec
mov
sbb
nop
xchg
lcall
dec
jg
in
xor
lea
inc
test
xchg
jl
jmp
iret
decb
pop
dec
inc
sti
in
adc
dec
je
mov
flds
popf
jne
scas
dec
inc
imul
sbbb
aaa
cmp
cli
outsb
dec
adc
sarb
pop
push
add
and
lods
add
mov
mov
sbb
jecxz
imul
ret
xlat
cmp
mov
mov
aad
push
fadds
push
fs
loopne
jg
in
int3
cmc
add
push
shrb
ja
fnstsw
push
insb
mov
xor
imull
div
mov
pop
jns
mov
inc
scas
sub
andb
add
aas
sub
xor
out
ret
bound
push
mov
or
xorb
inc
flds
fwait
inc
or
repz
adc
cmp
jae
lcall
and
shrl
sub
jge
xor
cltd
mov
fisubs
pushf
or
shl
or
cltd
stc
mov
mov
cwtl
adc
sub
popf
out
cmpsb
fistl
lcall
xchg
push
test
push
push
iret
out
fistl
pop
adc
sub
adc
lock
bound
out
jle
mov
adc
push
mov
pushf
enter
out
popf
adc
in
cmp
dec
cltd
cmp
cmpsl
dec
shlb
testb
aad
xor
repz
sbb
ja
shll
and
xchg
inc
ljmp
arpl
and
lods
xchg
add
xchg
int3
push
sbb
xor
dec
ds
lcall
popa
push
fmull
xchg
cltd
fcompl
and
push
repnz
xor
dec
lds
mov
es
lcall
pop
mov
and
dec
cltd
mov
pushf
sahf
add
lret
jo
fimuls
lds
andb
push
adc
jns
pusha
dec
mov
jns
cmpsl
cld
or
adc
cwtl
int
fdivs
mov
inc
inc
imul
enter
cs
cmpsb
fstpl
mov
sbb
ljmp
sub
add
stos
lahf
fbld
addl
pusha
pop
dec
and
jo
das
dec
jle
mov
adc
test
jge
iret
in
pop
scas
sbb
mov
push
mov
and
sub
data16
ljmp
xchg
sbb
outsb
cmp
add
mov
jp
cmpsl
jge
push
sarb
arpl
mov
push
movsl
mov
dec
mov
imul
push
jl
pop
lods
cmp
lods
cli
jl
cmp
pop
ret
add
mov
hlt
cmp
pop
fldln2
cmp
jp
xchg
bound
sbb
lahf
mov
xchg
mov
mov
pop
or
dec
lret
add
enter
add
movsb
les
cltd
xor
jle
sbb
jl
mov
call
leave
sub
pusha
mov
xor
push
loope
cmp
daa
mov
cmpsl
push
je
mov
and
js
faddl
mov
xor
inc
xchg
out
mov
jne
push
sub
cmp
mov
mov
je
into
or
in
fsubrl
push
fnstenv
in
dec
add
bound
cltd
push
ret
mov
pop
mov
ficompl
movsb
sbb
xor
idiv
jno
repz
inc
push
inc
pop
in
popa
imul
clc
inc
cltd
outsb
fimuls
add
mov
stos
sub
mov
jb
mov
ffree
push
clc
mov
in
js
adc
sub
std
push
inc
xchg
cld
cmp
into
data16
repnz
push
lods
sub
rolb
sbb
and
jae
sahf
mov
add
dec
jp,pt
imul
xor
mov
inc
iret
jne
lahf
push
in
popa
lock
cltd
int3
insl
aaa
outsl
mov
cmp
sub
jbe
in
push
add
mov
ret
pop
adc
push
stos
fs
movsb
outsl
and
inc
mov
push
negb
mov
or
nop
ret
int3
dec
fildll
and
xchg
andb
pop
imul
scas
mov
push
adc
xlat
rclb
xlat
int
pop
jle
or
inc
xchg
pop
andb
pushf
dec
or
pop
lret
je
dec
xor
pop
jl
aad
cmpsl
mov
jne
scas
cmpl
das
mov
insb
xchg
data16
or
std
xchg
mov
dec
pop
push
adc
and
mov
xchg
lea
xchg
sbb
jns
push
nop
lret
pop
pop
add
repnz
mov
pusha
or
mov
jecxz
mov
mov
fmuls
and
stc
daa
jmpw
xchg
or
push
insl
fistps
xchg
xchg
xrelease
stos
inc
lahf
pop
clc
xor
test
pop
rclb
movsl
mov
mov
test
in
dec
cmp
mov
add
dec
xchg
adc
gs
pop
out
aas
lea
mov
shlb
cmp
mov
int3
es
push
push
xchg
gs
inc
les
test
fs
or
popf
add
sarl
xchg
ja
dec
sub
stos
loope
movsb
lock
scas
fdivrl
in
mov
sub
popf
sbb
sub
test
dec
shll
mov
mov
add
orl
in
mov
xlat
lret
leave
push
pop
adc
cmp
pop
shrl
mov
test
sub
xchg
push
std
icebp
xchg
jb
inc
cmc
das
mov
test
test
mov
lods
out
decb
outsb
sub
cltd
call
jns
inc
or
fsubl
adc
mov
es
out
icebp
jb
repnz
jno
xchg
sub
push
jae
sub
mov
jb
test
sbb
add
lret
cmpsl
mov
movsb
xor
fnstcw
push
testl
and
add
sbb
int3
in
mov
or
add
ss
adc
stos
pop
or
push
xor
movsl
into
push
jle
jbe
and
loope
fcmovu
pop
add
mov
mov
imul
and
lret
adc
popa
pop
test
negl
imul
mov
adc
xor
aaa
fwait
outsb
into
push
jle
ss
insl
cltd
mov
data16
into
jns
adc
daa
push
cmpb
mov
cwtl
mov
and
mov
fwait
xchg
jno
dec
cli
ljmp
lahf
ljmp
inc
mov
mov
cs
cltd
cmp
je
jmp
jae
cmp
add
test
jo
mov
insb
add
mov
outsl
fs
or
dec
jb
imul
add
test
sub
adc
xor
popf
scas
mov
or
adc
xchg
scas
sbbb
lods
cmpsl
divb
stc
pop
es
lea
addb
mov
fisttps
xchg
test
jmp
arpl
ficompl
cmp
sub
fwait
sbb
mov
lods
sbb
inc
xchg
pop
cmpsl
ret
lret
test
sbb
dec
sub
pop
xchg
std
in
jno
jp
cmp
adc
jbe
repz
add
jmp
pop
addr16
shr
xchg
jle
repnz
jae
int3
adc
xlat
andb
fs
mov
pop
mov
sbbl
dec
add
xchg
and
sub
rolb
pop
hlt
ja
out
adc
fs
pop
sub
sarb
sbb
push
out
xchg
mov
push
jl
jmp
fldl
jmp
pop
xchg
mov
push
sbb
cld
xor
mov
popl
jge
movsb
les
pusha
xchg
sarl
or
inc
and
pop
andl
jmp
xor
cmp
fwait
fdivrs
lock
std
push
pop
cmp
push
idiv
xchg
cld
jb
mov
hlt
call
push
mov
aas
fildll
xchg
inc
mov
cmc
sbb
mov
flds
push
movsb
lods
mov
cmpsl
adc
push
into
and
mov
arpl
adc
mov
xchg
push
mov
mul
mov
and
pop
int3
enter
or
out
or
shrl
mov
repnz
mov
mov
push
out
lret
xor
test
aad
aaa
insb
dec
adc
dec
pop
imul
and
or
icebp
sbb
jmp
in
dec
insb
xchg
ret
xor
mov
jne
jbe
cmp
cwtl
aad
sbb
mov
adc
daa
add
mov
addr16
lods
inc
iret
cmc
mov
or
xor
sti
mov
cmp
ret
mov
inc
das
inc
push
data16
mov
int
adc
das
bound
adc
xor
push
dec
sti
xchg
cwtl
push
inc
imul
add
shlb
xor
mov
push
sbb
stos
sbb
xchg
std
dec
jecxz
js
shrl
sub
outsb
fs
ret
ret
xor
xchg
cli
sub
xor
xchg
xor
stos
add
incl
sbb
sbb
mov
dec
in
hlt
cwtl
shrl
add
cmp
cmc
clc
xchg
addr16
add
inc
cmp
iret
in
pop
repz
jl
sarl
jbe
pop
inc
lcall
addl
and
enter
inc
add
add
stos
dec
pusha
or
js
in
insb
mov
fldcw
inc
xor
jge
pop
je
sub
push
mov
stos
pop
pop
adc
dec
les
sub
xchg
inc
mov
call
add
pop
mov
xor
xchg
gs
add
mov
loopne
sbb
cmpsl
ja
aad
mov
or
and
leave
add
sub
jg
pop
into
mov
or
jmp
pushf
testl
in
imull
mov
pusha
mov
in
out
imul
mov
jns
pop
fsubr
mov
arpl
cmp
dec
adc
in
loope
sub
mov
notb
jns
mov
nop
cmp
and
inc
mov
mov
stos
mov
mov
inc
cmc
add
gs
aad
loopne
loop
jne
jo
shll
or
movsb
xchg
adc
mov
pop
push
cld
das
push
cmp
cmc
and
push
sbb
sbb
push
xchg
mov
mov
xchg
rcrl
mov
sar
shlb
movsl
mov
or
xchg
out
or
arpl
jg
jns
jecxz
cmc
imul
in
xchg
push
fsub
add
push
jns
sahf
gs
imul
xor
ja
mov
mov
xor
imul
lcall
testl
adc
or
cmpb
jp
sbb
mov
jp
mov
ja
lcall
mov
dec
pop
sbb
les
cmp
or
adc
xchg
out
pop
lahf
mov
push
mov
xor
mov
cmpsl
and
iret
mov
loopne
or
adc
sub
cs
dec
dec
mov
jg
mov
inc
fsts
outsb
subl
inc
xor
mov
sbb
repz
sbb
movsl
fsubrl
xor
nop
aad
and
mov
push
nop
xor
enter
jl
add
or
imul
dec
imul
repnz
stc
aas
rcrb
cmp
mov
fsubrl
xor
lahf
xor
xorb
xchg
or
fisubrs
aam
out
pop
xchg
pop
bound
push
or
mov
lods
xchg
xlat
cwtl
or
add
lahf
dec
pushw
cmpsl
jmp
addr16
sti
popa
je
mov
jle
lret
fdivrs
insb
and
iret
add
xor
fsts
jp
xorl
mov
push
scas
xchg
cmpsl
fwait
jo
xchg
pop
aaa
push
loope
sbb
xor
stc
mov
mov
pop
and
mov
pop
xor
inc
test
pop
push
lahf
jp
push
hlt
push
and
lea
sbb
sbb
mov
push
jmp
subl
push
push
fadds
mov
mov
inc
jnp
xor
imul
ljmp
inc
mov
movsb
push
aas
push
cs
addr16
mov
loopne
jb
add
mov
shrl
repnz
int
xchg
dec
cli
adc
inc
push
mov
cld
stos
mov
stos
or
insl
sub
negl
fld
adc
clc
call
cltd
push
push
xchg
pop
cmp
pop
fldt
add
cld
mov
mov
sar
xchg
xchg
inc
scas
inc
and
aaa
mov
ljmp
mov
in
out
test
inc
mov
add
and
inc
pop
mov
sbb
inc
sub
imul
xchg
shrb
push
mov
gs
frstor
lret
fsubl
mov
inc
mov
xchg
and
mov
or
xchg
sbb
add
xchg
adc
mov
sub
inc
mov
adc
es
imul
xchg
and
mov
stc
push
lods
hlt
loopne
jle
fmulp
out
push
add
add
push
fcompl
lret
shlb
js
xchg
mov
xor
sbb
cmp
call
jecxz
test
or
and
enter
mov
mov
ficoms
fwait
aam
mov
jge
xchg
fldcw
stos
insl
push
mov
adc
xchg
rcrb
push
dec
push
imul
aas
daa
loop
lret
loope
dec
loop
cmp
xchg
enter
out
and
and
cld
push
inc
outsb
pop
jmp
lcall
int
sub
gs
filds
test
push
ljmp
sub
fwait
push
pop
in
cmpsl
pop
repnz
stc
jmp
push
and
mov
mov
aaa
cmp
pop
sbb
sbb
mov
lcall
pushf
test
in
inc
roll
in
sub
movsb
stc
andb
imulb
cmp
insb
add
hlt
adc
xchg
ds
pop
sti
mov
mov
sub
stos
stc
sbb
in
je
or
aas
jecxz
mov
lea
outsb
lds
inc
push
insb
xor
jb
lahf
pop
repz
lods
mov
xchg
pop
aas
lret
std
jg
stos
or
loopne
cmp
dec
out
popa
clc
sub
adc
add
das
imul
mov
aam
pop
mov
dec
cmp
lret
push
fldz
and
je
out
push
testb
push
in
cmp
ret
jb
mov
jbe
loope
xchg
and
jmp
dec
push
jg
inc
test
cmc
xchg
and
stos
mov
inc
adc
jg
call
fnstcw
sbb
adc
call
ljmp
bound
adc
lret
sbb
call
cmp
lret
cmc
add
push
fidivl
cmpl
or
hlt
sub
cmp
mov
inc
jp
xor
mov
mov
movsl
fistps
mov
pop
sbb
rcll
pop
imul
pop
stos
addb
mov
dec
into
mov
cltd
ljmp
push
mov
scas
xorl
jecxz
pop
xchg
adc
adc
adc
sub
sbb
and
rorb
push
fnstenv
les
push
movsb
push
int
add
out
sub
xor
mov
mov
cmc
mov
in
aad
lods
mov
add
mov
ja
xchg
push
test
lods
iret
lahf
jns
data16
insl
inc
xor
loop
lock
fs
add
out
xchg
or
nop
jne
out
scas
add
mov
das
and
xchg
cld
or
das
sub
mov
add
andb
jns
imul
shlb
shl
push
jo
mov
pop
cmp
pop
insl
data16
xchg
mov
dec
xor
lahf
sbb
dec
push
inc
pop
nop
add
mov
inc
dec
xchg
cmp
xchg
dec
jg
cmc
cmp
jecxz
inc
loope
xchg
mov
das
test
insl
jle
sbb
cmpsl
inc
fwait
rcr
fwait
push
push
sbb
xchg
or
cli
ror
mov
and
dec
in
push
int
cmp
movl
dec
push
jge
jl
jge
inc
cli
popf
xchg
ret
mov
scas
pusha
fisttps
gs
movsl
test
or
xchg
xchg
mov
leave
xchg
inc
lcall
inc
cmpsl
pop
dec
shlb
xor
mov
mov
push
jbe
icebp
je
scas
dec
lcall
xor
lea
xor
ficompl
mov
mov
xor
pop
cltd
jp
rcrl
out
pop
mov
ss
mov
cmp
fsub
cli
cmp
hlt
cltd
movsl
fildll
sub
out
jp
pushw
cmp
xchg
das
jne
inc
add
xor
imul
and
movsb
test
leave
mov
arpl
cld
gs
or
cld
xchg
repnz
sbb
xor
xchg
outsb
pop
push
bound
test
in
icebp
add
xor
dec
mov
cmp
jmp
cmp
jnp
push
loope
mov
cli
mov
aaa
sub
mov
leave
sub
outsl
mov
in
cmp
nop
jl
lds
mov
imul
les
pop
in
pop
scas
push
leave
sub
std
subb
ret
jbe
cwtl
insb
out
sub
pop
fcomps
mov
gs
cld
divl
jge
push
cwtl
or
clc
xor
xor
mov
push
jg
repnz
lea
push
sbb
jo
scas
cmpsb
and
mov
data16
and
sbb
int
or
sub
loopne
cmp
outsb
insb
push
repz
das
bound
test
fmuls
jg
push
pop
lods
pop
scas
xor
sbb
ljmp
pushf
mov
jp
les
mov
add
fstps
push
push
in
sbb
dec
push
pop
sbb
dec
pop
ds
dec
adc
mov
lahf
or
xor
aas
mov
pop
leave
fcoms
cmpsl
push
mov
adc
dec
stos
sahf
les
fldt
xor
into
and
idiv
sub
test
and
cmpl
bound
lds
mov
cmp
xchg
xor
lcall
or
call
or
fwait
mov
shlb
roll
sub
mov
pop
add
sti
mov
push
leave
or
adc
mov
xchg
gs
sub
cs
inc
mov
adc
mov
mov
lods
inc
and
imul
lret
arpl
dec
adc
ret
in
mov
add
cmp
ds
jg
jecxz
loope
xchg
xor
call
dec
ret
in
sub
sbb
into
lods
int3
and
sahf
inc
iret
inc
es
push
mov
inc
fwait
aad
xor
adc
movsl
fmul
mov
xchg
mov
rcl
inc
test
cmp
test
push
in
repz
xchg
dec
cmp
bound
xor
cmp
xor
lods
ret
cltd
enter
and
cltd
mov
shlb
popf
out
lcall
adc
push
mov
sti
addb
fistpl
pop
adcb
pushf
insl
dec
adc
sti
add
aad
repz
ja
push
dec
push
jecxz
inc
inc
push
repz
add
shrl
cmp
loopne
aad
ss
xor
mov
xor
cmp
dec
insl
outsl
imul
shll
mov
divb
decl
fs
or
push
inc
test
shll
push
push
pop
sarb
xor
lock
mov
cmp
and
mov
push
lahf
push
xchg
mov
xor
fsubs
lods
pushf
jg
insl
sub
out
cltd
push
dec
adc
mov
aam
cmpl
jnp
adc
or
pop
jae
stos
dec
in
adc
jbe
shrl
clc
cmpb
mov
push
fs
orb
push
out
add
repz
mov
movsb
inc
adcb
adc
cmp
jmp
adc
pop
dec
fs
pop
je
arpl
stos
aam
popf
push
jl
mov
rcr
pop
lods
pop
lcall
movsl
test
mov
nop
aaa
pop
js
test
sbb
xchg
lcall
push
iret
lock
add
sub
jle
adc
pop
je
divb
pop
or
push
gs
arpl
rclb
jns
xor
jnp
mov
or
inc
addb
inc
and
dec
xor
in
mov
aas
and
pop
jae
lea
add
sbb
outsb
push
cld
cltd
sub
mov
cli
fadds
nop
xchg
and
lret
fcoml
push
outsl
std
pop
scas
and
dec
lds
repz
mul
sbbl
mov
mov
jle
dec
xor
and
sub
out
stos
jnp
lods
stos
aam
in
rorb
push
jg
jle
jecxz
dec
jle
aas
hlt
in
xor
movsl
jo
cmpsl
outsl
int
sub
sub
push
jge
mov
lds
mov
int
call
sbb
jmp
dec
sbb
rcll
cs
das
push
jg
lds
cmp
lret
fs
cmpsl
pop
push
adc
arpl
inc
or
mov
and
push
mov
push
outsl
lods
dec
mov
cmpsb
mov
and
in
popa
add
jle
jo
cli
daa
and
xor
sub
enter
call
mov
and
pop
mov
outsb
push
cmc
into
adc
sbb
cmp
movsl
mov
adc
dec
inc
stc
stc
cmpsl
je
pushf
adc
aas
cli
xlat
test
xchg
fbstp
ljmp
pushf
pop
cmpsb
xchg
add
inc
xor
inc
dec
xchg
push
outsl
jp
mov
and
and
ss
adc
rclb
andl
xor
and
and
dec
sub
mov
js
cmpsb
mov
pop
orl
xor
arpl
pop
xchg
add
fisubrs
mov
add
add
fisubrs
repnz
inc
cmc
mov
sarl
loope
mov
out
add
stos
test
add
and
mov
arpl
frstor
cmpsl
imul
scas
add
sub
sbb
mov
cwtl
lock
xor
pushf
sub
test
inc
mov
ja
or
xor
push
arpl
sub
mov
ljmp
hlt
fwait
adc
cmpsl
fs
inc
xor
or
push
pusha
lret
xor
enter
inc
mov
addr16
iret
inc
xor
hlt
gs
fdivrp
aam
fstps
dec
mov
aaa
gs
and
sbb
rol
or
adc
cmp
and
ret
xchg
adc
cmp
xchg
dec
jne
stos
int3
jmp
les
lods
inc
ss
mov
xor
push
test
addr16
sub
inc
lret
xor
mov
dec
int3
pop
mov
dec
sub
push
cmpl
icebp
mov
ret
or
mov
js
dec
fdivl
and
cmp
in
ss
push
lret
fnstsw
movsl
in
int
jl
shrb
scas
fisttpll
inc
jns
into
inc
inc
add
jle
les
sahf
hlt
dec
mov
xchg
insl
ds
rorl
add
pop
inc
aas
push
sbb
rcrl
add
pushf
adc
push
scas
pop
jmp
popa
sbb
dec
outsl
push
and
ficoms
mov
sub
pop
mov
out
jge
jns
movsb
add
mov
mov
sbb
jecxz
hlt
ficoml
pushf
jno
mov
ror
dec
lcall
ret
sbbb
adc
cltd
xchg
pusha
pop
pop
push
pxor
jle
loopne
and
cmpsl
inc
push
push
cmp
push
in
jl
fcomps
das
out
jecxz
mov
push
mov
cmp
mov
jecxz
into
test
jb
loopne
sbb
clc
add
mov
mov
jl
in
repnz
clc
mov
jno
xchg
stc
mov
pop
adc
cwtl
ficomps
sub
adc
ret
int
xchg
dec
sub
and
fdivs
jo,pn
inc
into
push
mov
push
jnp
and
shr
push
ret
add
aad
scas
push
test
stc
mov
pop
dec
je
mov
ljmp
sets
adc
test
cltd
push
sbb
repz
cmp
scas
xchg
mov
jecxz
and
les
pop
adc
je
cltd
xchg
cmp
push
cmp
push
sahf
hlt
mov
or
outsb
xchg
into
cmp
jg
mov
pop
adc
cmpsb
jnp
xchg
enter
aaa
repnz
ficompl
jne
jl
and
adc
cwtl
mov
sbb
repz
jae
out
lahf
xchg
dec
lahf
mov
ja
lcall
dec
imul
enter
adc
mov
data16
fnsave
xor
jo
fldcw
pop
push
cs
jno
clc
inc
jnp
test
test
gs
pop
aaa
fcomps
movsl
dec
xor
imul
or
out
dec
mov
bound
mov
pop
imul
jge
outsl
fdivl
shll
rcrb
dec
pop
dec
pop
jge
data16
pop
xor
add
int3
into
jle
pop
loope
ss
mov
jge
cltd
push
or
int
lahf
addb
dec
mov
push
js
hlt
jns
jp
pop
popa
mov
xchg
push
mov
repnz
and
sbb
rcll
leave
dec
sbb
nop
cmc
ret
test
or
xor
dec
test
push
mov
xchg
sub
pop
std
cwtl
rcrl
lds
mov
ja
fnclex
mov
jp
pushf
pop
pop
sub
sub
fldenv
repz
adc
insl
mov
lock
xor
leave
int
inc
out
and
xor
xchg
push
adc
cmpsb
sbb
xor
test
push
or
mov
jns
les
aam
js
xlat
add
adc
inc
adc
dec
pop
sbb
adc
fs
out
ds
push
or
into
sbb
or
lods
mov
stos
and
or
adc
jo
inc
xchg
add
lret
shl
cmpsl
add
or
dec
sti
mov
pop
mov
outsl
xchg
or
lock
stos
repz
test
sbb
jnp
js
arpl
xor
out
pop
aad
stos
test
push
cmp
cmp
push
lret
mov
xchg
push
xchg
int3
mov
imul
sbb
and
inc
mov
adc
fsubr
adc
cmp
filds
mov
stc
adc
dec
mov
fistpll
daa
cli
in
and
jl
push
fidivl
mov
xchg
sbb
jge
push
test
push
mov
dec
cmc
test
jns
leave
data16
movsb
sub
jnp
xchg
popf
mov
aaa
and
sahf
and
pop
mov
out
aad
dec
aas
or
mov
xor
or
push
pop
fldpi
pop
jg
inc
mov
jmp
out
push
add
imul
js
push
lods
mov
outsb
push
mov
push
dec
icebp
js
stc
popa
xchg
pushf
cmpsb
ja
inc
jae
or
movsl
aaa
fisttpll
out
dec
adc
fnstenv
adc
cwtl
es
cmp
and
pop
adc
leave
hlt
xlat
in
sub
fisubs
call
xor
sti
scas
push
adc
ffreep
out
add
pusha
xchg
fs
loop
fimull
mov
sbbl
xlat
and
xchg
dec
outsb
in
hlt
dec
roll
mov
mov
inc
mov
iret
insl
push
lcall
sub
mov
inc
jb
ds
dec
daa
dec
sbb
adcl
jne
mov
pop
lds
xchg
mov
and
cmc
fimull
jb
scas
or
xchg
iret
push
sbb
sub
jmp
push
scas
jno
std
cs
push
sub
mov
popa
lods
pop
sbbl
dec
imul
and
dec
leave
sub
aaa
mov
out
push
jns
cmp
movsl
mov
pop
sbb
mov
xor
push
xor
lds
aam
popf
sub
ficomps
aaa
aas
xor
jne
mov
test
cltd
out
mov
push
pop
cwtl
add
xchg
leave
or
pusha
cld
pop
or
dec
mov
out
aad
or
xor
sbb
add
adc
push
jb
lret
cmp
and
xchg
add
and
xchg
movzbl
leave
aas
jle
sub
fsts
cmp
in
xchg
sub
cmc
cmp
lds
test
jp
dec
add
mov
scas
adc
jmp
mov
fisttpll
icebp
xchg
movsb
stc
aad
mov
add
xor
jae
adc
ret
xor
mov
imul
push
in
mov
lock
fists
xchg
adcl
push
sbb
xchg
mov
fwait
pushf
mov
shl
ss
movsl
outsb
outsl
test
cwtl
push
scas
xorl
mov
mov
sbb
push
in
test
xchg
mov
pminsw
addr16
aaa
std
mov
xchg
jo
or
int
or
sbb
push
je
mov
mov
cmp
jbe
sub
pop
clc
and
jo
iret
xchg
cmpsl
lret
dec
inc
push
mov
inc
stos
js
sarb
mov
xchg
nop
loopne
mov
mov
xchg
cs
mov
and
stos
mov
int
pop
stos
bound
or
mov
lods
mov
sahf
mov
mov
cs
pop
popf
fisubrl
scas
mov
lods
pop
ret
xorl
das
scas
xchg
sar
das
fs
mov
xor
sub
hlt
jo
xor
fwait
stos
push
out
sahf
out
aam
cs
dec
icebp
rclb
adc
sub
inc
pushf
test
clc
in
jb
sub
insl
andl
or
pop
mov
imul
sub
rcll
dec
mov
dec
call
out
gs
aas
negl
ss
popf
lret
or
add
mov
leave
es
xchg
xor
cmc
rcll
mov
icebp
mov
mov
mov
push
test
call
addr16
mov
push
sahf
mov
and
xor
or
and
lods
shrb
sub
call
inc
movsb
in
add
inc
les
into
std
xchg
pop
push
or
and
jae
cmp
lods
test
push
lods
sbb
cmp
and
jb
das
pop
es
cmc
inc
mov
fnsave
mov
dec
push
int3
aam
idivb
jb
sahf
push
and
into
cmpsb
jecxz
mov
cmp
mov
mov
mov
mov
popf
aam
int3
jl
inc
sub
pop
xchg
mov
cmp
inc
outsl
jg
or
insl
jp
jmp
lahf
jg
dec
pop
adcb
and
xchg
lahf
dec
inc
js
sahf
js
jae
add
xor
and
xor
jl
fwait
jns
xchg
outsb
insb
mov
cmp
in
adc
mov
xchg
shll
xor
cmp
pop
cs
bound
leave
dec
lods
jnp
or
insl
dec
adc
jge
pop
add
mov
sbb
push
sbb
jbe
push
pop
sbb
movsb
mov
sbb
add
xlat
pop
lods
jbe
pop
inc
arpl
xchg
cmc
inc
adc
movsl
sbb
jbe
and
cltd
into
orl
xlat
movsb
aam
shl
out
jns
jecxz
mov
cmc
les
enter
dec
pop
pop
push
das
popl
fiaddl
push
ret
in
data16
mulb
iret
in
out
dec
adc
mov
psllq
jb
movsl
and
in
mov
pop
lods
push
insb
push
in
pop
data16
sbb
push
cmpsl
xchg
std
out
jg
xchg
rorb
mov
xchg
push
sarl
mul
sahf
dec
xor
jno
fdivrp
sbb
movsl
mov
pop
or
lea
jecxz
inc
sub
adc
ja
add
jl
fcmovb
xor
leave
cwtl
addr16
pusha
cmp
add
movl
push
or
es
lret
pushf
cmp
push
leave
andb
dec
pop
pop
jecxz
or
jmp
or
icebp
popf
mov
int3
pushf
mov
loopne
lock
mov
push
scas
leave
mov
jnp
jae
dec
incl
dec
dec
icebp
cmp
popa
cs
dec
mov
int
cwtl
xor
test
and
pop
jae
popa
push
cmp
not
std
xor
ds
in
dec
sub
pushl
pop
sub
or
jne
mov
mov
ss
jb
xlat
push
int3
jo
mov
shrb
mov
shl
shrb
scas
scas
loopne
add
stos
add
xor
xor
jmp
sub
dec
in
dec
sbb
mov
ss
push
dec
das
loopne
cwtl
pop
ss
mov
add
out
bound
sbb
xchg
xchg
std
fdivrs
jmp
or
push
pop
fwait
movhps
jno
lds
inc
push
clc
sahf
add
subl
xchg
aaa
mov
cmp
dec
jge
sbb
adc
jne
dec
out
call
adc
add
loop
inc
fstpl
scas
xchg
fldcw
mov
push
shrb
cmpl
and
stc
pushf
repnz
fdivrl
jle
adcb
ss
inc
sub
clc
mov
adc
inc
pop
mov
leave
mov
add
scas
insb
aas
leave
into
sub
cmp
stos
iret
and
mov
push
into
les
mov
incl
and
pushf
cmpsl
xor
and
push
movsl
push
pop
pushf
inc
int3
dec
jne
mov
xor
rolb
lds
inc
mov
or
push
mov
add
xor
jns
xor
or
ds
int3
add
aaa
sahf
add
iret
mov
dec
insl
mov
ljmp
test
sti
mov
inc
push
pop
ljmp
and
imul
or
outsl
setge
cmp
push
push
out
shll
mov
fstpt
insl
sahf
cmp
int
ljmp
fcompl
ds
negb
adc
sbb
nop
fidivl
and
pushf
sarl
icebp
sbb
arpl
adc
push
shll
mov
stos
int
pop
rcr
repz
clc
and
scas
cld
xorl
xchg
xlat
mov
cmp
fldt
add
add
icebp
sti
jg
in
or
xchg
lods
addr16
pop
mov
addr16
enter
dec
mov
sub
jns
cltd
sub
push
cmpsb
mov
cld
lahf
sbb
outsl
adc
rcll
outsb
push
shll
repz
sub
mov
xor
push
and
push
lods
jmp
scas
test
xor
mov
lret
inc
std
xchg
repnz
jae
push
cs
sti
push
pop
fadd
int3
xor
test
cmc
int
rorb
and
scas
pcmpgtw
imul
adc
bound
xor
gs
ror
fnstsw
jp
xchg
rcrl
cld
or
push
cmp
xor
mov
iret
sbb
repnz
jp
lods
xorb
inc
movsb
or
aad
xchg
jnp
jbe
xlat
inc
push
fimull
out
mov
js
xor
cmp
jne
xor
add
mov
loop
lock
aas
sbb
add
dec
inc
mov
cli
sbb
jp
inc
cmp
jp
shll
mov
sbbl
cmp
mov
or
rcrl
inc
scas
in
push
imul
ja
xor
repz
mov
jmp
xor
cmpsl
inc
dec
popa
lods
addl
xchg
out
and
lahf
xchg
xchg
pop
and
sub
and
push
add
pop
jne
cmp
clc
xor
addr16
mov
loopne
mov
lods
cmc
in
cmc
leave
les
jb
in
xchg
int
js
aam
mov
jnp
jecxz
mov
fnstsw
ljmp
clc
mov
aaa
sbbb
xchg
xchg
testl
cmp
daa
ljmp
mov
mov
jge
and
inc
mov
popf
imul
mov
jp
adc
sahf
icebp
out
sbb
fs
popa
imul
pop
std
mov
iret
cwtl
iret
cltd
cmp
add
lret
aaa
or
out
sti
push
inc
sub
inc
outsb
mov
shrl
mov
insl
or
sub
shlb
inc
inc
mov
adc
ja
sbb
cmp
inc
jecxz
dec
jo
add
sarl
scas
and
in
pop
sub
cmp
test
push
sahf
rclb
add
movb
adc
pop
movsl
adc
sub
int3
jne
and
fs
pop
push
sahf
push
and
or
jo
dec
jl
add
loop
je
push
jae
push
jmp
adcl
fldl
sub
pushf
pop
cld
dec
dec
jbe
inc
movsb
lods
mov
mov
mov
jl
cmp
lcall
or
adc
cld
inc
sub
test
push
inc
jbe
push
sarl
or
push
and
pop
mov
rolb
sub
cmp
push
les
and
cli
or
sti
fmull
mov
and
icebp
fldenv
mov
dec
bound
xor
testl
add
adc
inc
dec
dec
ret
push
shll
stos
aas
jmp
sbb
mov
mov
dec
jle
fistpl
cmp
add
or
fsubs
xchg
stos
fdivs
adc
inc
push
xchg
fadds
in
mov
push
xchg
cmp
inc
sbb
mov
or
fwait
arpl
enter
mov
and
test
xchg
lcall
mov
insl
dec
inc
into
or
outsl
mov
orb
pop
mov
xchg
mov
sub
mov
nop
cmp
mov
mov
je
lahf
pop
sti
pop
and
daa
arpl
sub
jle
dec
jb
push
out
push
xchg
push
orl
xchg
dec
movsb
repnz
rcrb
cld
mov
decb
xor
ret
stc
mov
insl
or
mov
pop
aas
xchg
and
and
shl
mov
xchg
add
inc
jae
enter
lahf
pushf
imul
daa
jb
and
rcrb
or
inc
dec
sbb
enter
and
mov
clc
mov
int
jecxz,pn
inc
xor
fisubrl
pop
lret
cmpsl
and
das
fwait
mov
in
pop
inc
cmp
notb
jae
int
inc
jbe
clc
xchg
xor
add
imul
add
ret
ds
ret
cmp
sbb
mov
mov
inc
jle
sbb
bnd
bound
push
lcall
adc
mov
or
mov
or
lret
aad
outsl
xor
xchg
cmc
and
sbb
add
push
ret
arpl
pushf
inc
xlat
jp
push
jae
test
jl
xlat
addr16
mov
insl
pop
popa
mov
push
daa
adc
xor
mov
add
test
cmp
int
jecxz
jae
push
lcall
xchg
sbb
and
sbb
mov
nop
pop
add
aaa
add
mov
sub
adc
push
or
xor
in
dec
test
sub
cmp
test
or
imul
and
pop
sbb
mov
push
pop
mov
lret
insb
mov
push
arpl
ret
out
cmpsb
rcll
andl
daa
add
or
pop
pop
iret
iret
push
rcrl
mov
cmp
adc
sbb
sbb
repnz
jmp
pushf
pop
inc
adc
xchg
js
fidivs
sbb
jge
dec
dec
xor
push
sub
ret
jle
stos
jb
dec
sub
lods
jl
pushw
pop
into
push
movsl
loopne
lahf
cwtl
lods
lcall
push
cmp
les
mov
nop
jnp
lcall
cmpsl
orb
add
and
jbe
mov
mov
pop
mov
hlt
loopne
pop
notb
dec
sbb
cmp
sub
repz
add
dec
ret
adc
ss
mov
popa
and
pop
sub
into
jl
xor
outsl
push
repz
dec
inc
pop
mov
cmpsl
rol
add
xor
mov
rcrb
popf
inc
push
cwtl
cmp
and
fstpt
cmp
mov
jnp
popa
test
jno
inc
cmp
xor
stos
jb
loope
or
or
xor
aad
mov
push
xor
lea
and
cmpsb
dec
xchg
push
jb
mov
arpl
jge
andl
cmpsb
imul
aas
movsl
mov
lods
mov
sub
icebp
xchg
ret
xchg
or
xchg
push
das
lods
push
test
push
cltd
sbb
adc
jmp
sbb
popf
rcrb
jo
sub
adc
js
pop
shlb
loop
popf
lahf
daa
repz
aas
jnp
jp
pop
fistpll
sub
mov
cmp
jb
xor
fildl
and
xchg
mov
popf
shl
lds
cmp
cmpsl
ja
stos
dec
bound
mov
int
std
aad
jge
rclb
xchg
cli
scas
cwtl
stc
and
sbb
xlat
test
dec
ret
mov
mov
test
insl
std
mov
add
stos
fsts
adc
adc
jle
shrl
loop
push
sarb
mov
push
int3
sub
mov
mov
mov
xchg
int
int
mov
lea
cmpsb
lahf
outsb
or
imul
aaa
cmp
lret
cmp
mov
cmp
mov
popl
push
sub
in
cs
hlt
mov
push
jae
jmp
push
jns
scas
aam
lds
mov
or
mov
jns
enter
or
js
data16
add
aam
push
sbb
test
adc
sub
xchg
or
in
dec
fisubl
inc
fistpl
or
push
xchg
sub
push
sarl
les
adc
std
fwait
sahf
inc
jae
inc
shlb
sbb
lods
in
cmp
and
sbb
aaa
outsb
movb
push
je
cld
push
movsb
adc
cmpsl
cmp
sub
add
xor
lods
and
lock
cmp
aam
inc
jmp
and
inc
lock
push
sub
and
rcll
in
shld
notl
mov
xorl
pop
inc
ds
xchg
popa
mov
pop
jmp
iret
pop
push
mov
push
mov
jae
stos
mov
cmpsb
cmp
je
cmp
mov
jle
icebp
in
cmpsl
cmp
inc
iret
fsubl
cmpsl
or
jns
ja
pop
jg
pop
adc
scas
stc
inc
in
inc
mov
push
cmp
cwtl
and
and
ljmp
fbstp
jmp
xchg
xchg
or
jecxz
push
fisttps
test
sub
inc
js
pop
lret
dec
push
or
loop
leave
xor
cwtl
test
fisttpll
ds
dec
lods
sub
inc
stc
sbb
ficoms
dec
inc
outsl
fmull
adc
sti
mov
cmp
sub
aam
push
or
gs
cli
popa
rcll
jbe
adc
xor
ljmp
jb
stos
jg
enter
mov
or
loope
mov
jp
sub
out
ret
test
mov
dec
mov
dec
aad
mov
js
rcrb
out
popw
sbb
pop
loope
fisubrs
cmp
sub
sub
call
inc
mov
aad
add
jge
mov
or
imul
xchg
pop
add
adc
fcompl
mov
dec
out
jb
mov
out
stos
jmp
push
mov
icebp
sbb
cmpsl
and
call
clc
push
stc
xchg
adc
adc
mov
dec
stos
push
cmp
mov
clc
clc
cmp
out
xor
dec
in
mov
inc
je
divl
loopne
cmp
xor
test
mov
js
and
call
fildll
jb
sbb
fsubrp
adc
jle
imul
data16
cwtl
cmp
or
loope
sti
pop
xchg
insb
stos
out
mov
addr16
dec
adc
add
cmp
cmp
and
xchg
pop
mov
imul
add
inc
cli
pop
insb
and
jo
xchg
sub
imul
push
scas
stc
pop
test
jg
add
ret
mov
je
push
lcall
gs
out
fsubs
sub
repz
ficoml
add
fst
adc
outsb
bound
push
push
sub
jg
inc
dec
imul
pop
mov
xchg
push
push
lea
jnp
or
sub
dec
push
aam
mov
int3
jb
sahf
xchg
inc
mov
cmpsb
sahf
aas
and
std
mov
mov
cltd
sarl
mov
imul
lods
push
int3
push
mov
or
mov
cmp
push
mov
inc
dec
jmp
sub
pop
push
xor
mov
lea
xchg
adcl
pop
mov
xor
jmp
int
xchg
and
out
scas
push
outsl
in
sub
dec
push
shrl
movsb
dec
out
and
mov
adc
sub
mov
insb
push
and
cmp
lcall
sub
js
test
mov
add
ds
adc
cwtl
cs
in
repz
xchg
cmc
dec
cld
imul
jmp
push
xchg
xchg
add
data16
in
addb
gs
imul
pop
push
jge
hlt
iret
jo
inc
lcall
jnp
frstor
cld
insb
stc
call
cmpsb
cmp
pusha
ret
xchg
mov
jo
add
push
insb
pop
out
add
cli
es
idivl
pop
cmp
mov
rcrb
repz
and
add
mov
jo
jns
xchg
shll
fistpll
ficomps
dec
leave
call
jmp
cmp
mov
add
inc
in
xchg
fidivl
adc
cwtl
out
test
mov
mov
fstpl
or
or
xor
cmp
add
push
or
lea
xchg
das
push
inc
pop
rolb
dec
xchg
jmp
and
scas
or
xor
jmp
mov
jo
sub
popf
sub
and
rcll
pusha
das
mov
mov
mov
mov
or
ja
popa
xchg
add
mov
lods
mov
sbb
sub
scas
scas
xchg
dec
insl
push
mov
add
test
ret
jae
repnz
rorl
ror
lahf
pop
ja
lcall
lea
andl
jbe
add
popa
jecxz
adc
fstpl
jecxz
test
mov
mov
add
ja
lahf
std
sbb
push
inc
mov
into
mov
xchg
dec
cld
test
sub
mov
pop
mov
cmpsb
xchg
jae
push
dec
push
sbb
dec
cmpsb
push
inc
push
mov
mov
dec
ret
loope
mov
addr16
inc
adc
dec
xchg
fwait
jns
test
cltd
xchg
and
fistl
ret
aas
insl
jno
repnz
clc
sub
lahf
or
xchg
or
fists
dec
jecxz
jg
pop
pop
loope
cmpsb
jl
lahf
mov
sub
dec
insb
scas
xor
sub
cltd
xlat
sarb
pop
adc
aaa
sub
cmp
cwtl
xchg
mov
enter
push
sub
and
pop
add
mov
jno
push
mov
xchg
xchg
loope
fisubs
pop
push
sarl
fbld
add
xchg
aad
dec
jl
pop
adc
mov
fidivs
rcrb
jbe
std
xor
cmp
popf
jns
sbb
mov
dec
insl
sbb
jnp
push
add
push
xchg
leave
cmp
pop
sub
mov
ret
imul
add
push
adc
fwait
out
test
push
shl
call
lcall
into
inc
sahf
push
jp
adc
shrb
adc
add
repz
loopne
pop
dec
adc
push
gs
es
lds
fisttpll
nop
push
movb
insl
sbb
add
data16
sub
out
sub
and
or
loopne
fndisi(8087
repnz
lahf
adc
out
or
shl
xchg
fstps
push
into
jne
pop
inc
jae
and
pop
ds
in
xlat
xor
sbb
in
or
or
sub
push
pop
adcl
jmp
dec
cs
sub
por
adc
popf
scas
mov
push
rclb
inc
or
test
div
mov
mov
jecxz
sub
cwtl
test
sbb
out
xchg
test
inc
aas
push
cs
mov
cmpl
push
cli
stos
add
pushf
dec
call
mov
cmp
je
outsl
sbb
jb
mov
out
outsl
adc
fwait
xor
vmwrite
and
inc
jmp
popa
dec
add
pop
cmpsb
fsub
test
rcrb
cli
jb
into
dec
mov
insl
rcrl
enter
add
push
fldcw
pop
jl
jp
sub
xchg
push
cs
sub
adc
inc
popa
js
dec
xchg
hlt
fs
lods
mov
mov
jns
push
or
test
aam
add
scas
stos
xlat
push
xchg
push
cmp
sbb
sbb
push
aad
cli
jnp
fstl
cmp
cmpsl
jp
add
mov
addb
popa
ds
dec
mov
pop
aam
adc
dec
negb
mov
mov
mov
jl
in
cmp
clc
insl
and
push
jns
pop
jae
mov
mov
push
icebp
mov
ljmp
cld
cmp
sbb
and
xor
scas
jno
outsl
hlt
add
push
mov
fdivs
repz
dec
jp
sbb
and
call
in
fstpt
fwait
aad
test
pop
or
push
fdivrp
dec
imul
stc
repz
jp
adc
iret
mul
in
pop
int
rcll
stc
in
in
mov
aam
faddl
or
or
or
cwtl
bnd
inc
xchg
xor
fstl
cs
inc
nop
and
sub
xchg
out
jne
and
rclb
cmpsb
movsb
dec
aas
inc
sbb
rcll
decl
pop
shll
pop
mov
fwait
push
leave
inc
roll
jmp
imul
xor
mov
pop
dec
outsb
pop
je
pusha
pop
ds
xchg
repz
dec
leave
rcrb
js,pt
popa
dec
iret
cmpb
flds
sub
sub
shr
mov
dec
test
imull
in
ja
add
pusha
jp
lods
jp
mov
bound
jge
sbb
test
mov
jp
mov
xor
sbb
dec
mov
or
enter
cli
adc
sti
xchg
pushf
mov
lret
ss
pop
sbb
inc
lods
out
pop
stos
xchg
inc
or
push
mov
scas
int3
cmpsb
fwait
jnp
outsl
mov
shrb
push
dec
jns
test
insl
ja
in
sub
inc
lea
xor
push
dec
adc
xor
adc
xor
icebp
out
jecxz,pn
lock
les
dec
dec
inc
mov
or
mov
fsincos
add
rorl
mov
sbbl
lods
in
jnp
sbb
xlat
xchg
inc
pop
bound
or
andb
or
mov
ljmp
dec
aam
xor
mov
dec
dec
in
inc
push
dec
enter
ja
jne
push
lea
das
shl
test
in
jmp
stos
insb
pop
mov
call
jmp
popf
xlat
add
dec
and
add
mov
popf
test
loopne
insb
loope
jge
or
out
mov
jb
xchg
rcrl
cli
adc
mov
lds
arpl
xor
inc
pop
cmp
push
pop
in
push
leave
xor
or
test
fidivs
pop
mov
dec
and
adc
cmp
add
test
dec
fsts
out
xchg
inc
pop
cmc
sub
inc
pushf
pop
push
repnz
insb
ja
xor
xchg
call
xor
call
push
mov
push
and
push
mov
jmp
add
xchg
sub
int
jb
jecxz
push
push
out
das
int
imul
mov
movsb
xor
adc
fwait
stos
subl
add
icebp
andb
cltd
push
xchg
out
out
push
lds
push
push
dec
mov
sbb
out
mov
mov
fwait
xchg
jmp
frstor
outsl
pop
xor
insl
pop
cwtl
pop
sbb
lret
xchg
int
fisttpl
cltd
sbb
stos
cmpsl
add
sbb
cli
cli
data16
mov
jmp
lds
pusha
popf
cmp
xchg
push
sahf
xor
push
and
sbb
shlb
sub
sbb
jne
cmp
adc
lcall
or
inc
test
mov
nop
fcomps
jnp
pop
push
mov
and
dec
mov
mov
into
out
jge
clc
call
or
mov
dec
cwtl
into
lahf
mov
push
jecxz
mov
and
mov
mov
jb
pop
popf
cmc
cmp
xor
lret
or
leave
jmp
cmp
ss
dec
fnstcw
lret
rcl
shl
popf
jmp
roll
push
xorb
lds
push
sbb
ds
jae
loope
in
test
mov
icebp
add
popa
or
pop
cmp
sahf
lret
mov
jbe
incl
fsubs
cmc
jae
scas
mov
jge
iret
mov
xchg
jns
xor
out
flds
in
call
lcall
xchg
sahf
adc
bound
rolb
or
mov
gs
jl
pop
aam
mov
push
out
js
repnz
jecxz
data16
push
dec
push
nop
pop
bound
and
movsl
cmp
push
out
testb
jg
inc
scas
push
scas
pusha
push
cmp
or
mov
pop
push
test
pop
xor
xchg
in
cmpsb
xchg
mov
xchg
test
mov
push
jns
jle
push
xor
jecxz
jno
xchg
cld
stos
lock
push
ja,pt
test
push
sub
mov
in
and
stos
cmp
ja
je
inc
outsb
inc
cmpsb
mov
mov
mov
xor
call
xchg
or
mov
aad
inc
push
ds
out
sbb
adc
sub
mov
inc
fwait
mov
pusha
inc
fwait
ja
sti
add
lods
add
insb
jmp
push
cmp
loop
in
es
mov
test
xchg
insl
or
aam
push
cli
push
cmp
adc
clc
adc
les
daa
adc
into
mov
pop
or
iret
cmp
in
out
push
add
in
lds
inc
jno
push
xor
insl
les
nop
adc
cmp
adc
mov
xchg
leave
lret
sti
adc
lock
adc
call
fs
fldenv
push
mov
cmpl
aam
scas
cmc
js
js
sub
or
subl
stos
out
sbb
pop
mov
movsl
sahf
fisubrs
adc
test
ret
push
sahf
xchg
cmp
mov
out
push
ljmp
clc
and
push
push
xchg
lds
mov
inc
jno
xchg
pavgw
shrl
dec
xor
jle
outsl
or
jl
daa
std
xchg
push
clc
inc
test
cld
lea
shlb
movb
aas
cmpl
ljmp
addr16
daa
mov
sbb
movsb
jnp
daa
xchg
fsubrl
addr16
cmc
filds
scas
mov
adc
mov
sub
push
inc
es
lock
jbe
xchg
std
iret
in
les
outsb
xorl
dec
cs
sbb
rol
stos
daa
jecxz
mov
rcrb
add
lods
adc
xlat
pusha
adc
popa
leave
jmp
pop
into
loop,pn
or
pop
or
repnz
shlb
popa
and
inc
mov
shlb
xchg
fcmovb
inc
addr16
mov
push
cmpsb
push
adc
pushf
push
or
sahf
shll
into
jp
in
push
sub
sarb
cwtl
cwtl
rcl
xchg
or
cld
testl
ffreep
fwait
outsl
inc
mov
outsl
or
dec
xor
dec
mov
inc
out
shl
xchg
or
sbb
sub
mov
icebp
lret
mov
dec
repnz
xor
fistpl
imul
push
call
pushl
adc
jecxz
les
daa
hlt
push
clc
mov
mov
outsb
ds
lods
imul
icebp
shll
inc
sbb
nop
add
pop
sbb
mov
sbb
cmp
push
stos
jp
cld
mov
loopne
push
outsb
jne
fldl
push
jo
std
sbb
inc
jecxz
insl
xor
adc
mov
test
sarl
imul
mov
insb
lods
push
mov
jecxz
add
adc
ljmp
gs
inc
push
mov
cmc
cmp
pop
pop
fmuls
or
dec
pop
cmpsl
in
dec
xchg
not
insb
fildll
ret
aas
sbb
inc
push
push
addb
xchg
popa
sti
cmpsb
test
test
stc
mov
push
xor
addw
pop
outsb
hlt
sbb
mov
rcll
repnz
inc
mov
xlat
mov
leave
push
jg
nop
inc
stc
mov
pop
push
out
add
int3
or
dec
mov
xchg
pop
dec
outsb
lcall
in
ljmp
repz
pop
xor
int
adc
mov
sub
mov
sub
add
sahf
or
pop
xor
mov
fidivl
dec
rolb
lods
dec
ret
movsl
fsts
lods
call
pop
imul
rorb
mov
fwait
push
add
clc
jecxz
mov
pushf
loope
popf
mov
mov
clc
xchg
push
or
sub
loope
pop
cmpl
or
push
xor
dec
xorb
xor
jmp
stos
mov
insl
inc
daa
xor
fisubrs
lret
rorb
xchg
into
pusha
fdivrp
sbb
daa
scas
pusha
push
sub
cmp
dec
push
inc
push
stos
outsb
btr
stos
iret
mov
test
imulb
cmpsl
adc
pop
stos
jne
outsb
xor
jnp
in
cli
addr16
sub
mov
jge
push
dec
adc
popf
push
push
movsl
out
mov
add
daa
out
and
mov
mov
lcall
mov
dec
loopne
dec
mov
mov
ficomps
ret
adc
aad
adc
mov
mov
or
inc
in
mov
shll
mov
jecxz
push
mov
jmp
inc
cmpl
xchg
subl
jne
jo
repz
xchg
popf
pop
call
jg
lds
enter
out
daa
mov
nop
scas
jg
mov
mov
sub
nop
adc
ljmp
aam
or
lahf
and
test
push
pop
sti
stos
jge
ret
jl
pop
jno
jb
push
cmp
popa
xchg
sbb
js
mov
rol
or
lret
sub
push
gs
iret
mov
lea
mov
les
dec
les
add
mov
scas
lods
ret
bound
into
sbb
mov
dec
repz
cmp
jns
loop
lret
mov
mov
ficompl
out
in
cmpsb
and
jl
nop
mov
in
push
mov
outsb
pop
xor
add
mov
mov
cmp
repnz
inc
shl
mov
mov
cmc
cmp
xchg
mov
jne
arpl
cs
loope
pop
mov
rorl
les
lea
mov
mov
cmc
ret
fs
in
or
xchg
outsb
adc
jnp
ljmp
or
cltd
xor
push
jmp
pop
or
stc
xchg
and
fisttpll
xor
mov
faddl
shl
jecxz
ret
daa
dec
rorl
out
xchg
iret
push
faddl
push
lock
dec
sahf
daa
mov
inc
es
push
cmc
adc
mov
data16
pop
ficomps
into
je
xchg
xchg
movb
push
xor
xor
fidivl
jle
negb
adc
inc
jne
sub
stos
push
mov
test
ret
pop
adc
clc
and
outsl
adc
dec
xor
rorb
repz
xchg
sub
sub
ret
test
ja
xchg
adcb
mov
fst
xor
movsb
sbb
mov
pop
pop
dec
adc
xchg
fwait
loope
in
jns
and
mov
dec
cwtl
mov
xor
out
jge
adc
and
mov
ficompl
hlt
mov
ljmp
repnz
scas
add
out
sbb
cmp
ljmp
fstl
movsb
adc
sub
sub
dec
ljmp
rcll
aaa
loope
hlt
mov
sub
inc
mov
jle
fsubrl
jo
mov
pop
out
in
cltd
jns
sub
roll
xchg
lahf
call
mov
jp
ljmp
test
push
sbbb
ret
dec
inc
pop
pusha
lea
xchg
cmp
mov
or
jns
fistl
or
mov
dec
add
mov
pop
mov
shlb
jge
fwait
ljmp
jbe
dec
sbb
sbb
bound
add
sub
or
jecxz
repnz
jle
dec
aam
xlat
scas
mov
adc
lahf
in
filds
pop
cwtl
std
popf
pop
mov
cmp
aaa
lret
movsb
clc
inc
cli
sub
xchg
nop
or
jle
mov
cmpsb
cmc
xchg
insl
xor
scas
je
sbb
xlat
out
and
mov
in
scas
fsubrs
sahf
push
sbb
neg
in
add
and
insl
clc
clc
inc
push
lods
mov
shll
dec
pushf
add
stos
lods
rcrb
mov
sub
fildl
je
dec
adc
push
fidivl
into
imul
test
out
mov
es
dec
cmp
movsl
xchg
ja
and
mov
lahf
call
add
jne
fsubrl
inc
push
lods
add
lret
sub
sbb
jg
mov
xchg
es
mov
xchg
sub
push
cmc
cmp
mov
or
ja
xchg
std
mov
cwtl
xchg
ja
enter
or
sahf
addr16
popf
arpl
xor
xchg
add
sti
add
fidivl
scas
mov
mov
xor
les
xchg
aas
repnz
mov
into
inc
add
dec
mov
lret
pop
xchg
aas
lret
fisubs
push
add
icebp
in
adc
inc
out
outsl
xchg
subl
jbe
mov
mov
cmp
sbb
iret
xchg
xchg
ds
pop
jno
cld
imul
sub
mov
jge
cltd
movsl
test
arpl
push
fs
stc
pop
jo
stc
inc
adc
addb
add
pusha
jns
jg
leave
add
ficomps
jg
fs
cli
mov
lods
sti
imul
out
jbe
mov
enter
or
sub
rorl
mov
inc
mov
ljmp
cli
and
xchg
adc
mov
out
xor
aas
les
cwtl
push
jle
push
cli
frstor
pusha
sbb
outsl
in
in
out
je
mov
mov
push
xor
inc
jb
mov
jmp
ja
mov
fstpt
lea
adc
sub
push
outsb
out
scas
cmp
dec
sti
jnp
enter
jge
sahf
pop
pop
dec
inc
in
mov
hlt
sbb
lock
xchg
pop
mov
ret
les
add
std
sarb
fildll
and
mov
jnp
mov
jbe
sarb
xchg
outsl
repz
pushf
shlb
lret
xor
ficomps
and
jnp
xor
arpl
push
das
rcll
sar
or
aad
lahf
jne
mov
shrl
mov
movsb
or
cmp
movsl
jnp
stos
pushf
cmpsb
stc
into
xor
cmpsl
add
aam
xchg
mov
aad
pop
push
aaa
jge
sub
add
push
dec
lods
rcrb
mov
ret
data16
icebp
pusha
xchg
in
enter
inc
fistl
cmp
rcl
out
push
jg
pop
mov
fs
pop
bound
mov
add
mov
rcl
sbb
addr16
lock
push
clc
gs
sahf
fists
inc
movl
jbe
adc
or
sub
xchg
cmp
mov
dec
jg
adc
or
lds
das
dec
insb
fwait
push
sbbl
cmc
faddp
pop
mov
sbb
in
out
ret
das
loopne
cmp
push
xor
cwtd
aad
test
cmovbe
shll
movsb
or
fbstp
ret
pop
mov
bound
mov
test
dec
testb
adc
mov
mov
mov
lcall
inc
movsb
gs
push
mov
or
popf
icebp
and
lea
cmpsb
popf
incb
mov
inc
xor
movsl
sub
jg
cld
push
inc
and
mov
mov
divl
jns
fs
dec
jge
or
mov
sub
rorl
jge
xor
add
dec
stos
dec
pop
dec
add
arpl
out
std
stos
pop
push
aas
xchg
or
fbstp
or
adc
imul
cmc
inc
hlt
add
sub
mov
mov
orb
dec
xlat
cmpsl
fld
mov
scas
sahf
xor
push
hlt
push
pop
jne
cld
sub
push
inc
ffreep
cld
sub
enter
inc
xorb
cmp
cmpsl
and
fmul
cmpsb
add
adcl
es
sahf
push
xorl
sbb
mov
daa
cmpsl
scas
call
js
in
push
jl
imul
push
inc
adc
mov
mov
outsb
cmpsl
in
adc
jns
pushf
xchg
push
outsl
sbb
xchg
or
pop
out
pop
and
stos
ja
fadds
out
stos
inc
xchg
push
test
add
ja
pop
out
sub
inc
pop
into
cli
roll
popa
lea
leave
sbbb
ror
mov
push
lcall
push
les
sbb
loop
outsb
jns
mov
xor
out
loope
orl
js
or
xchg
adc
cmp
dec
sbb
dec
pop
pop
mov
mov
cmp
mov
ret
mov
in
lret
jmp
mov
sahf
cmp
jns
addl
out
cwtl
movsb
das
cmpsb
inc
movsb
in
stos
jle
popa
or
cwtl
or
pop
cwtl
aad
inc
pop
lea
pop
pusha
sti
nop
dec
nop
out
or
call
push
enter
insb
jnp
xor
mov
clc
or
and
jno
mov
aam
push
lds
out
mov
lods
push
jge
push
cmc
int
push
fsubrl
jne
xlat
jge
cmp
test
cmp
stc
outsl
jg
out
scas
loopne
sbb
add
test
in
pusha
mov
dec
mov
out
fwait
xchg
js
cwtl
stos
jo
xor
jae
xor
lcall
dec
data16
outsl
jnp
push
xor
test
mov
fwait
out
push
scas
lods
mov
xchg
fnsave
popa
and
inc
adc
in
jo
int3
insb
lahf
jb
sti
test
and
inc
xchg
pop
jo
mov
loopne
lahf
hlt
or
xor
cmp
aaa
xor
aas
add
push
ja
add
adc
mov
dec
cmp
insl
sub
sub
sub
xchg
popa
xorl
scas
or
xchg
xor
adc
leave
xchg
inc
pushf
mov
fs
rorl
fldt
jg
xchg
fldl
fcmovbe
or
in
loope
mov
test
inc
mov
add
cmp
pop
add
ja
into
cmp
pop
in
movsl
test
mov
clc
mov
std
inc
inc
and
in
lret
arpl
repnz
pop
jle
mov
xor
js
cli
inc
jne
push
cmp
test
call
xchg
cmp
mov
rcl
mov
ret
sahf
jmp
loope
and
sarb
pop
cltd
adc
aam
jne
mov
aad
shll
shlb
add
xchg
mov
cmp
repz
mov
out
sbb
insb
and
mov
ljmp
push
int
std
mov
mov
clc
fs
test
inc
shl
shr
dec
stos
and
shll
call
cmp
push
xchg
pop
mov
aam
aaa
sarb
xor
lods
push
and
repz
into
ja
cmp
test
movsl
addl
push
loop
lock
dec
inc
lcall
inc
mov
inc
mov
aam
int
jmp
inc
cld
xchg
xchg
cmp
cmpsb
shr
data16
mov
xchg
xor
xchg
inc
xor
dec
jo
sub
cmp
cmp
xlat
mov
add
gs
mov
xor
mov
test
xor
repnz
cmpsb
and
jo
push
js
iret
sbbb
sarb
xchg
jl
adc
arpl
ret
mov
and
mov
loop
dec
arpl
sbb
jp
das
iret
fincstp
movsb
cld
inc
xlat
stc
inc
ret
add
push
cld
movsb
or
mov
loope
add
sub
loop
xchg
in
xadd
sub
dec
or
pushf
jo
add
clc
sub
push
fidivs
mov
jle
sbbb
insb
out
push
mov
add
les
in
dec
xor
cld
cmp
mov
lcall
lcall
ds
andb
sub
mul
mov
jae
test
and
mov
sbb
pop
popf
lds
cmp
xor
mov
xlat
out
cmpsb
and
pop
sahf
cmc
xchg
ret
xor
stos
jmp
out
js
ds
and
push
add
cmp
loope
jo
xchg
xor
mov
add
cmp
orl
lret
and
shl
or
insl
cmp
add
repz
loopne
enter
fwait
pop
inc
int3
in
mov
icebp
push
and
inc
xchg
mov
mov
scas
pop
or
fdivr
mov
xchg
pop
sub
inc
call
or
sbb
int
jno
or
dec
inc
sbb
pop
push
shl
xchg
sahf
aaa
pop
add
add
nop
cld
iret
or
push
push
pop
sbb
adc
pop
ret
mov
jg
ljmp
lea
mov
fisubrl
adc
dec
and
xor
and
icebp
jp
movsb
dec
sbb
or
shl
dec
lcall
in
test
pop
icebp
int3
stos
cmp
lahf
sbb
dec
jl
stos
adc
adc
xor
lret
lods
dec
dec
aaa
lds
shll
dec
movsl
pop
cmpsl
push
mov
fwait
shr
gs
xchg
hlt
push
mov
movsl
int
loope
push
cmp
rclb
sarl
lret
ret
or
xlat
or
sahf
mov
jno
sbb
nop
cltd
enter
movsb
mov
and
pusha
pop
xchg
xchg
dec
imul
jne
cmpsl
push
cmp
test
add
sub
std
pop
cmp
xchg
sar
inc
jne
xor
lds
outsl
clc
ss
test
daa
jae
andb
sar
int3
fldl
popa
icebp
push
int
data16
jbe
lret
adc
cmp
test
movsb
pusha
cs
hlt
or
aam
lahf
mov
test
outsl
sub
js
add
or
nop
clc
xchg
xor
cmpsb
or
inc
test
in
inc
out
jmp
xlat
and
pop
jbe
sbb
lret
mov
mov
jb
in
fildl
xor
cmp
dec
sub
roll
mov
jp
jae
jbe
sbb
mov
test
out
dec
test
mov
aaa
cmpsb
and
jle
sub
add
mov
orl
xchg
repnz
roll
inc
stc
shll
push
loopne
jns
or
mov
pop
push
lods
jbe
jnp
enter
andb
push
ljmp
cmpsl
data16
in
pop
jge
lds
lea
adc
push
xlat
bnd
int
sub
inc
adc
lods
dec
enter
inc
pop
pop
fisubs
push
dec
lds
out
cmpl
and
lahf
adc
int
sub
xchg
sub
mov
or
mov
fnstenv
data16
cmc
aam
xchg
cmp
hlt
inc
data16
test
sti
imul
scas
daa
andb
xchg
push
xor
or
rcrb
adc
xor
mov
stos
inc
arpl
fdivl
mov
mov
loop
stc
or
lcall
ficomps
mov
stos
mov
gs
adc
outsb
outsb
jecxz
ror
xchg
rorb
popl
xchg
mov
and
xchg
xchg
imul
pop
loope
sbb
popf
dec
aaa
or
ja
lods
add
adc
repz
dec
cmp
sub
xchg
mov
int3
inc
movl
div
fcmovnbe
fwait
std
add
pushf
fs
fldl
scas
mov
mov
dec
into
push
push
xchg
movsl
scas
std
xlat
pop
push
out
jmp
xor
jg
cwtl
bound
jbe
fs
sub
ljmp
cmp
pusha
inc
xchg
scas
jo
sub
pop
scas
icebp
jecxz
jo
or
or
mov
roll
test
sub
mov
in
cmp
in
sbb
sarl
xchg
sbb
out
xchg
aam
jecxz
jno
ret
cmp
pop
dec
rolb
aad
pop
sub
sub
xor
and
popa
pop
xor
fistpll
sarl
mov
inc
sarl
inc
fcmove
imul
roll
push
out
mov
inc
or
nop
adc
jae
clc
pop
mov
mov
pop
cmp
popf
aas
jne
jg
push
pop
and
or
gs
mov
mov
xlat
xchg
adc
popa
js
movsl
sbb
cli
mov
mov
or
push
add
call
xchg
test
xor
les
or
or
inc
std
mov
xor
or
scas
call
xlat
pop
outsb
fcmove
sbb
mov
mov
push
cmp
adcb
or
lods
mov
jbe
and
mov
mov
pop
cld
rcr
inc
call
das
sub
mov
movsb
icebp
fistl
loopne
cltd
outsb
insb
sbb
imul
xor
aaa
mov
fists
pop
nop
out
mov
xchg
jb
mov
or
fbstp
adc
shll
leave
xchg
popa
mov
loope
ret
dec
jnp
dec
cmpsb
xorb
adc
cmpsl
mov
sub
shl
sub
bnd
or
cmpsl
out
xchg
ds
sub
dec
mov
xor
decl
adc
jge
rorb
mov
pushf
pusha
adc
decl
mov
inc
or
mov
dec
or
shlb
pop
test
jbe
xor
popf
outsl
adc
out
setne
out
lahf
xor
notl
in
movsl
insl
dec
mov
test
lret
or
fcmovnbe
mov
stc
ss
mov
adc
push
cmp
fmull
stos
mov
and
push
sbbl
mov
pop
aas
adc
mov
fmulp
imul
lea
sarb
add
sub
fcmovbe
mov
dec
addl
and
mov
dec
sub
in
cmc
push
sbb
popf
push
mov
or
pushf
lods
roll
push
jg
inc
repz
rclb
mov
outsl
jle
out
gs
ret
jb
cmpsl
sti
push
loop
mov
mov
or
jmp
push
imul
dec
jnp
fcoms
sub
or
push
mov
mov
mov
sub
ret
mov
loopne
adc
jo
mov
mov
dec
xor
fwait
xor
cmpsl
lock
test
ret
push
add
repz
xor
movsl
dec
cmpsl
adc
cli
sub
sub
jmp
inc
movsl
js
loopne
adc
stc
out
mov
icebp
dec
shrb
dec
fsubrl
jnp
dec
mov
shl
or
xchg
cmp
jl
das
pop
daa
jns
xchg
push
stos
cmp
pop
aad
xlat
testl
jns
mov
xchg
movsb
jmp
arpl
lods
dec
pop
and
inc
fcoms
mov
pop
jnp
mov
mov
mov
inc
lahf
dec
in
jns
je
lock
dec
xor
xchg
xchg
pusha
rolb
adc
nop
xchg
jge
nop
xor
aaa
and
mov
jo
or
push
test
inc
fnstsw
aaa
cmp
movsb
scas
dec
mov
push
inc
movb
jecxz
inc
mov
push
lahf
mov
mov
stos
js
stos
cs
xchg
sbb
mov
sti
je,pn
dec
dec
addr16
xchg
adc
add
push
sub
jge
mov
sbb
dec
dec
jecxz,pn
test
mov
in
imul
mov
push
sbb
idivb
lock
add
sti
jno
int
mov
ljmp
mov
or
sub
mov
dec
pop
fucom
xor
test
loope
xchg
lods
imul
cmp
jge
cmp
scas
mov
adc
or
jae
popf
into
push
push
push
push
repnz
mov
cmpsb
inc
aaa
icebp
in
push
mov
xorl
push
out
or
je
xlat
push
mov
cmpsb
push
ss
popa
fwait
imul
mov
dec
pop
movsb
int
jo
adc
cltd
sbbb
jl
lret
jge
cmp
rorl
inc
shll
dec
mov
frstor
les
jl
mov
in
in
lcall
stc
pop
mov
mov
xchg
mov
mov
sbb
and
btc
cmpsl
dec
cmp
arpl
mov
cmpsl
xor
sbb
xchg
mov
add
sub
add
cmp
inc
lods
dec
or
and
insb
inc
xor
pop
sub
xchg
adc
cmp
jo
jmp
mull
jl
daa
inc
adc
cld
rorl
enter
jnp
rcrl
stos
jge
jecxz
dec
inc
cmp
stos
rcrl
jno
pop
xchg
inc
lret
push
mov
es
in
inc
rcr
jne
ja
jbe
fstps
inc
enter
push
and
xchg
mov
fidivs
pop
push
jno
aam
es
pop
pop
insb
jo
ds
jmp
mov
or
dec
into
sub
mov
imul
sbb
dec
movsl
pop
fnstenv
addr16
xchg
jae
andb
scas
push
pop
mov
jno
data16
dec
mov
rcrb
pop
pusha
push
jo
push
adc
shll
ljmp
imul
cmp
aas
cli
jns
hlt
lahf
fstps
ljmp
hlt
xor
pushf
or
sub
adc
sbb
inc
and
push
mov
addr16
mov
inc
ljmp
and
cmp
xchg
scas
pushf
aas
sub
cmp
add
adc
cltd
dec
push
xor
mov
ficompl
adc
cmpsb
icebp
jge
dec
xchg
cmp
inc
bound
mov
push
jge
ret
xor
xchg
cmc
pop
pop
pusha
cmp
repz
pop
flds
out
sub
sub
test
orl
add
aad
mov
sub
out
sub
cmp
sub
cld
or
int3
das
adc
xor
add
add
aad
push
push
movsb
lret
push
and
xchg
xor
sahf
sub
mov
fldl
fldenv
das
add
sub
cmp
push
js
ljmp
stc
xor
dec
mov
out
xor
mov
mov
loop
add
sti
cmpsb
fisttps
cmp
jl
and
arpl
jae
in
xchg
int
inc
in
sub
jne
sub
xchg
mov
ficompl
icebp
lods
pop
mov
push
push
int3
jae
jbe
and
outsl
mov
push
pusha
and
shll
rorb
fs
ficoml
stos
pop
mul
or
xor
push
inc
iret
push
xor
fisubrl
cmp
inc
mov
sub
rcll
pushf
mov
int
out
inc
push
jle
xlat
adc
mov
sti
mov
sbb
out
andb
xor
movsl
ror
jno
ret
sub
lock
cli
pop
inc
and
lret
rorl
andb
xor
sub
aas
fsubl
aaa
mov
mov
pop
outsl
mov
dec
sub
push
or
addr16
das
sti
xchg
jb
pusha
movsb
cmp
pop
int3
xchg
pop
stos
mov
mov
addb
arpl
cmp
ret
ss
jo
ljmp
push
data16
and
leave
sub
mov
outsl
xchg
xchg
aas
mov
push
xor
cwtl
sub
les
jae
mov
sahf
inc
outsb
cmpsl
lahf
in
outsl
pop
mov
mov
adc
int
or
push
add
sub
sar
arpl
jmp
loope
inc
pop
push
shl
inc
jle
jle
xor
inc
pop
in
fimull
adc
dec
std
sub
push
in
adc
adc
inc
pop
mov
test
aam
push
fdivl
jnp
jbe
and
cmpsb
dec
push
fs
movsl
sbb
and
inc
int
ret
mov
sub
sarb
jmp
push
fcmovb
xchg
inc
test
jbe
dec
orl
mov
fimuls
jne
cmp
or
push
xchg
aaa
pop
dec
adc
in
imul
push
fcompl
lds
sbb
in
mov
shll
mov
adc
test
jecxz
subb
xchg
out
mov
test
jo
sub
dec
imul
std
fstp
jmp
push
shll
cmp
mov
test
adc
dec
jle
clc
fdivrl
adc
cwtl
xchg
cld
mov
or
rsm
pop
jl
aam
incb
sti
and
stos
add
cmc
mov
adc
and
push
push
ret
jle
jnp
aam
and
in
dec
cmc
mov
sub
dec
lods
sub
sub
mov
bound
dec
xlat
ja
inc
pmaddwd
jp
call
sbb
add
add
ret
sbb
and
sub
fsts
mov
pusha
add
pop
and
in
dec
cltd
xchg
in
rclb
and
lds
and
adc
mov
in
icebp
aam
jle
mov
mov
sti
stc
sub
pop
mov
cmp
int
pushf
xor
xchg
add
fcoml
xor
mov
imul
int3
sub
cmp
outsl
pop
or
mov
sbb
dec
les
cmpsb
mov
xchg
test
and
dec
xchg
jl
fscale
out
movsb
dec
jae
mov
test
push
stc
dec
xor
xchg
cwtl
xchg
mov
inc
mov
add
cmp
mov
icebp
cld
pop
and
repnz
cltd
sub
cmpsl
cld
or
daa
mov
std
push
lret
pop
addr16
cmpl
push
ljmp
sbb
loop
cwtl
nop
add
mov
cltd
cmpl
add
lahf
jl
xlat
inc
mov
adc
in
push
jae
xor
push
into
fcoms
sbb
cwtl
pop
xchg
int3
xor
test
xlat
repnz
jecxz
lahf
mov
sub
out
add
fldt
or
ret
xchg
adc
inc
push
inc
mov
lret
mov
mov
cmp
cltd
hlt
push
push
inc
dec
xchg
push
pop
add
sub
cmp
rcll
mov
push
imul
mov
shlb
push
jg
shl
mov
pop
and
mov
aaa
cmp
push
push
sbb
sbb
sbb
addr16
cltd
jns
pop
push
mov
cmc
int3
popa
pop
dec
sahf
add
pusha
pop
insl
cmp
xchg
jecxz
pop
out
mov
adc
imul
mov
push
aaa
mov
add
cld
bound
jb
xor
xchg
lea
jl
push
jg
xor
push
rolb
push
leave
dec
in
cmpsb
popa
daa
in
jnp
fisubl
pop
call
pop
fnstsw
lret
jge
aad
inc
xchg
movl
fs
push
mov
add
dec
mov
pop
mov
mov
in
mov
jnp
adc
stos
push
lret
and
out
cmc
xlat
arpl
in
and
test
or
mov
inc
ja
imul
roll
bnd
outsl
cmp
call
aam
pop
adc
hlt
test
push
mov
shll
fidivs
inc
sbb
adc
fnstsw
mov
imull
in
sub
or
dec
fsubrs
xor
sahf
arpl
inc
xlat
mov
and
les
or
lock
pop
jg
cmpsl
pop
lds
xor
jno
mov
xlat
icebp
and
pop
cs
ret
es
add
aas
test
cltd
cli
mov
hlt
and
xor
std
std
xchg
insl
jae
inc
insl
and
adc
int3
imul
lret
pop
iret
adc
adc
xor
mov
rcrb
pop
shrb
fwait
rcr
int3
into
mov
add
xchg
aad
iret
in
jno
ret
shll
xchg
mov
adc
les
imul
xchg
cmp
popa
xor
mov
mov
in
or
mov
push
fsubl
push
xchg
loop
pushf
push
popf
push
int3
cmp
cmp
test
negb
inc
fmuls
je
bound
cmp
cmpsl
jmp
jl
cmp
cmpsb
xchg
add
sub
repnz
xchg
push
fldcw
xchg
pop
cmp
add
xchg
lcall
dec
or
and
fwait
in
pop
or
in
sbb
mov
inc
mov
mov
int3
dec
mov
lds
or
pop
lret
and
popa
fdivs
push
aad
mov
clc
add
gs
frstor
lock
loop
inc
shlb
inc
and
pushf
xchg
testb
mov
jo
push
mov
ds
and
call
inc
enter
stc
sahf
ficoml
push
in
out
mov
clc
mov
sbb
scas
adc
repz
clc
sub
cmc
inc
popa
mov
cmpsl
xchg
lret
movsb
mov
lret
adc
mov
inc
sbb
fadd
mov
ficoml
ret
push
push
push
lcall
pusha
mov
les
and
pop
mov
lds
mov
out
cmp
test
cld
dec
data16
dec
imul
loope
rep
pop
sbb
rcll
mov
push
xchg
jg
lea
mov
rorb
jge
mov
je
sbb
xor
in
xlat
dec
sub
add
jne
inc
sbb
rclb
adc
int
mov
fistpll
add
call
mov
lods
or
movsb
fwait
inc
xchg
xor
daa
xchg
xor
mov
in
ret
jbe
cmp
movsl
mov
out
xor
push
out
sub
fldt
sahf
adcl
xor
mov
stos
push
jmp
jmp
imul
xchg
mov
push
xor
in
movsl
mov
sarb
and
mov
jnp
sahf
mov
and
pop
sti
jae
lods
scas
in
push
adc
leave
dec
data16
subl
jno
xchg
lea
scas
out
adc
ret
sub
add
add
outsl
lcall
test
mov
sahf
daa
inc
stos
lock
orb
xor
fld
jbe
scas
movsl
cmp
sub
daa
rclb
jle
or
adc
mov
hlt
out
dec
mov
aam
inc
out
mov
stos
sub
pop
loopne
jmp
xor
bound
pop
adc
mov
sahf
pop
js
pushf
jmp
imul
rol
xor
fsubs
popa
sub
add
fwait
mov
and
roll
movsb
lea
incl
push
mov
mov
loope
sbb
das
dec
fadd
xor
repz
mov
ljmp
xlat
fdivs
cmp
cmpl
mov
mov
jp
std
sbb
loopne
cmp
std
push
mov
mov
enter
jae
test
mov
out
or
and
stc
dec
jl
pop
arpl
addl
enter
icebp
jbe
mov
test
xchg
pop
dec
pop
cmp
xor
sub
inc
jecxz
jno
cli
out
rcrl
test
mov
lret
pop
pop
xor
movsl
pop
out
pop
pop
je
pop
mov
js
dec
jp
or
dec
in
adc
pop
stos
repnz
xlat
fsqrt
jmp
testl
push
testl
les
xchg
mov
jle
dec
xchg
mov
add
lods
mov
xor
push
test
push
fldcw
cltd
dec
lcall
inc
mov
sub
out
jo
pop
cmp
sbbb
cwtl
dec
mov
push
ficoms
sub
pop
shrb
sbb
movsb
or
push
adc
xor
jns
arpl
fs
mov
pop
ja
sub
je
dec
stc
mov
clc
jecxz
fs
aaa
sub
pop
es
add
cmc
pop
insb
inc
out
into
inc
mov
mov
pusha
fwait
push
dec
cmp
xchg
or
jnp
cmpsb
push
jae
mov
jl
scas
add
js
sub
sbb
test
lret
mov
mov
cld
loope
outsb
popa
jg
sar
imul
push
das
fcomp
push
sbb
pop
add
test
sbb
mov
xor
rolb
test
push
lods
cmp
adc
push
cmp
sarb
in
mov
mov
mov
adc
jno
or
add
test
andl
out
xchg
or
xchg
pop
inc
cmpl
push
dec
nop
cmp
iret
mov
sub
inc
xchg
ds
test
insl
out
inc
sbb
mov
jl
pop
icebp
gs
cmp
and
dec
mov
cmp
sbb
add
push
mov
sub
lahf
arpl
mov
insb
cmp
testb
clc
mov
in
pop
push
mov
push
push
out
bound
adc
sahf
pushf
in
clc
push
and
scas
mov
out
test
sbb
rclb
mov
sbb
sbb
fscale
outsb
cmpsl
data16
idivl
push
testl
rcl
mov
out
push
fcmove
enter
pop
pop
fnstsw
ret
iret
ss
fdivrs
adc
insl
imul
out
fstpl
adc
add
push
stc
sbb
pop
jecxz
in
jne
dec
orb
adc
mov
faddl
xchg
scas
mov
jne
call
test
andl
xor
push
mov
jns
fisttps
in
mov
xchg
sub
jmp
je
dec
cs
aam
sbb
push
leave
xchg
jle
cmp
push
mov
repz
es
jae
aad
jne
adc
test
push
into
mov
lret
rorl
out
lods
shll
and
mov
mov
xor
nop
das
inc
mov
add
inc
out
jge
mov
bound
jecxz
cld
stos
adc
in
sti
loop
push
mov
stos
jae
xacquire
pusha
pop
dec
aad
mov
out
xchg
pop
inc
loope
push
hlt
movsb
and
and
push
push
daa
push
nop
outsl
mov
jae
lret
pop
add
cltd
dec
pop
shlb
pxor
dec
pop
popf
or
fiaddl
sbb
jne
loope
push
sarb
sbb
xchg
adc
jmp
mov
inc
jge
cmp
cwtl
push
jae
negl
ja
aad
push
leave
or
shll
sbb
mov
mov
cld
and
pusha
mov
cmc
mov
std
sub
jg
xchg
insl
mov
mov
xchg
and
cmp
add
es
mov
mov
pop
xchg
imul
lods
cmp
xor
vpmovsxwd
pop
insb
or
dec
insb
test
push
test
fnstsw
mov
xor
xor
dec
shll
mov
mov
icebp
jns
lods
ljmp
mov
cmpsl
iret
sbb
dec
scas
or
aad
shr
test
mov
sahf
inc
addr16
les
xor
push
xchg
xlat
mov
loop
push
adc
arpl
dec
inc
push
and
cmp
ds
add
xchg
sahf
aad
or
sub
pop
adc
ret
push
jecxz
int3
jg
arpl
xchg
mov
fists
ror
into
xchg
cmp
or
adc
jmp
in
leave
pop
ljmp
aaa
push
mov
pop
adc
push
and
add
cwtl
xchg
xchg
and
outsb
out
rclb
dec
and
std
shll
loope
daa
pop
sub
push
nop
inc
push
adc
and
xor
pop
pop
in
jg
and
and
and
cmp
jno
inc
adc
bound
aaa
outsb
enter
push
cmpsl
test
sbb
dec
xchg
mov
lret
out
cmp
adc
aam
jmp
xchg
incb
inc
stos
gs
lods
test
divl
in
xchg
inc
cmpsl
jno
jl
out
inc
cmp
ficoms
and
js
cmp
pop
rolb
mov
dec
add
popa
int3
inc
sub
inc
imul
cmp
mov
subl
jb
pop
lret
inc
cmp
js
pop
push
frstor
push
cld
mov
fisttpll
aas
rcl
dec
xor
mov
mov
mov
pusha
xor
mov
sbb
pushl
adc
adc
imul
mov
pop
add
cmp
lahf
stos
add
sub
scas
repz
xor
pop
negl
dec
xchg
xor
xchg
xor
std
pop
push
push
lods
rolb
sub
pop
mov
arpl
mov
movl
pop
jecxz
ss
fstp
add
loopne
push
dec
daa
push
dec
les
cli
push
adc
aaa
lea
enterw
test
iret
adc
mov
xchg
and
hlt
adc
je
inc
push
sbb
and
test
push
aaa
jno
ljmp
cmp
or
loope
push
jmp
mov
jp
les
or
xchg
jno
pop
or
aaa
repnz
pop
mov
test
mov
mov
cmpsb
mov
mov
clc
cmp
and
push
aad
mov
roll
test
sbb
aad
sbb
lods
addr16
push
or
bound
cmp
add
mov
scas
push
out
scas
jno
test
ljmp
or
pop
rcrl
ret
fsubr
jo
mov
sbb
xor
lcall
rcrl
hlt
cwtl
pushl
mov
ret
insb
sbb
mov
xchg
xchg
das
ret
dec
sub
dec
fidivl
xor
movb
rcl
ret
cmp
sbbl
loopne
adc
movsl
push
scas
enter
fwait
in
push
insl
je
inc
mov
cmpsb
adc
inc
xchg
imul
packuswb
leave
add
and
rorl
cmpsb
jmp
insl
je
lods
and
mov
mov
jmp
xlat
jp
push
pop
mov
loop
sub
je
mov
push
dec
mov
add
jbe
ret
loopne
ret
mov
mov
js
lods
and
dec
stos
stc
bound
cmc
pusha
mov
leave
mov
sub
cld
stc
push
dec
push
jle
fucomip
loopne
sbb
pop
testl
mov
loope
add
mov
test
roll
cmp
push
adc
cwtl
es
mov
fs
push
sarb
mov
inc
and
xchg
shlb
mov
mov
adc
add
dec
pop
stc
jo
add
pop
fstl
icebp
lcall
push
cs
mov
jbe
or
rolb
mov
and
ret
lret
movb
and
xchg
jmp
lods
adc
mov
jo
cmpsl
or
inc
int
mov
mov
lds
sbb
cmp
dec
add
addb
mov
mov
ja
movsb
ror
sub
fdivrp
dec
mov
push
in
mov
cmp
mov
push
sbb
cmp
jmp
cmp
leave
jge
testl
xor
ret
cwtl
xchg
mov
data16
popf
pop
cmpsb
mov
mov
stc
xchg
hlt
shlb
mov
cmp
repnz
and
out
pop
and
movsb
stos
jb
mov
mov
lea
mov
test
xchg
mov
xchg
adc
outsb
gs
cld
nop
mov
dec
sbb
and
mov
dec
xor
dec
mov
or
cld
or
loope
mov
dec
int3
jnp
mov
mov
jecxz
dec
inc
in
sbb
xchg
popf
adc
xlat
jle
push
mov
je
and
add
inc
test
and
inc
push
push
repnz
pop
sub
imul
cltd
mov
fidivl
test
mov
arpl
cwtl
xor
les
fwait
loop
sub
or
sub
out
std
testl
jbe
pop
out
lock
sub
scas
flds
sahf
ret
jo
dec
xchg
out
sbb
mov
push
ret
add
mov
dec
and
xchg
sbb
mov
jp
pop
add
lcall
mov
aaa
jns
sbb
scas
mov
lcall
es
cld
insl
and
imul
or
sbb
push
test
js
out
jae
xor
bound
mov
pop
repnz
inc
lods
ja
xchg
out
inc
imul
stos
jmp
push
movsl
xchg
gs
and
aas
in
push
pop
les
xchg
ficompl
sub
paddb
inc
xchg
les
push
daa
pop
stos
cli
pushf
inc
leave
xor
sub
ljmp
xor
and
add
dec
leave
and
lods
lock
or
in
sbb
sub
lahf
addr16
pop
cmp
push
out
loopne
out
xchg
incl
dec
mov
out
out
xchg
jbe
or
pusha
pshufw
movsl
cmp
lea
dec
push
push
dec
inc
sub
sbbb
sub
or
call
mov
rcrb
xor
sar
stc
pop
iret
lret
setp
sub
sbb
sbb
add
mov
dec
ja
in
or
add
adc
hlt
cmp
loopne
jp
popa
pop
mov
aas
les
in
xor
in
les
leave
fmul
hlt
or
mul
arpl
pop
lahf
xor
stc
rorb
jg
mov
dec
minps
andb
xor
aas
sbb
into
jl
pop
mov
scas
jo
fldl2t
hlt
inc
jp
xchg
movl
insl
das
rorb
xlat
and
pop
imull
pop
rclb
push
jge
stos
lods
daa
mov
sbb
popa
in
cli
int
mov
movsl
mov
sbb
popf
icebp
push
out
mov
iret
pushf
ret
xor
push
jl
insl
or
sbb
sbb
xchg
sahf
cltd
sbb
push
stc
push
lock
mov
mov
push
rol
xor
jmp
jo
pminsw
xor
fcos
adc
xchg
push
lea
xchg
adc
ds
cmpl
pop
or
js
push
cld
fcmove
ds
inc
cmc
or
hlt
loopne
cmpsb
imul
popf
mov
xor
sti
inc
push
push
jo
jmp
xor
shrb
inc
mov
fs
scas
sub
insl
mov
inc
xchg
cmp
mov
fdivrs
fwait
int3
add
add
pop
mov
adc
push
or
cmp
mov
flds
pop
les
pop
in
pop
and
cmp
rcrl
inc
add
lcall
scas
ds
cmpsb
inc
je
mov
mov
sub
sub
leave
mov
adc
loop
aas
je
and
push
inc
inc
pop
addr16
inc
push
xchg
in
pop
fcoml
enter
inc
shrb
shl
subl
adc
or
repnz
or
pushf
xor
aaa
sub
fisttps
push
add
jp
or
movsl
movsl
mov
sbb
xchg
and
repnz
call
jmp
jmp
pop
in
xchg
push
push
hlt
inc
daa
stos
ljmp
sarb
iret
loope
aam
jnp
add
mov
jmp
pop
or
ret
dec
jne
xchg
pushf
stos
cmp
hlt
add
das
jae
dec
pop
and
and
pop
jb
cwtl
jle
repnz
cmpsl
and
leave
call
std
mov
subps
cmpsl
stc
jae
sbbb
imul
bsf
xchg
inc
into
gs
mov
and
mov
add
shrl
pop
lret
test
cmp
enter
cmp
cmp
or
stc
sub
jp
aad
dec
mov
popf
cmp
call
bound
das
jg
into
stos
shll
bnd
fwait
jb
mov
push
imul
sarb
addr16
add
lea
rolb
out
test
cld
mov
pusha
mov
cld
mov
mov
and
sti
aam
out
sbb
scas
or
mov
testl
pop
mov
rcrl
scas
jge
loop
cmpl
das
push
add
mov
test
inc
push
test
pop
jp
stc
dec
xor
inc
add
push
cmp
lds
data16
push
sub
les
pop
dec
sahf
pusha
dec
push
test
jge
mov
repz
gs
sarb
lock
test
jnp
lcall
sbb
mov
rclb
sbb
push
test
outsb
les
or
lods
xor
std
imul
fisttpll
cs
inc
add
loopne
xchg
test
das
jne
adc
fidivl
enter
pop
jecxz
gs
cmp
push
sub
int
add
mov
xlat
fxch
shlb
jnp
lea
dec
sbb
lret
mov
fisttpl
jb
lds
pop
popf
add
fs
hlt
xchg
inc
popa
add
imul
lds
jo
pop
jae
neg
dec
fistps
jge
mov
mov
mov
idivl
push
mov
xchg
ja
xor
xor
mov
pop
sbb
imul
pushl
repz
adc
sbb
adc
scas
mov
or
out
pop
mov
fucomp
xor
xchg
es
or
lods
mov
cmp
mov
mov
xchg
aaa
add
iret
pushf
popa
imul
mov
fsubr
cli
orb
aaa
adc
mov
lahf
add
into
popl
mov
cmp
xorl
push
sbb
rcll
pop
dec
repz
cmpsb
inc
push
ljmp
movsl
aaa
or
ret
sbb
adc
loopne
movsl
iret
jg
daa
div
fidivrs
gs
imul
inc
adcl
ss
notl
es
pop
xor
jg
push
and
jns
cmova
mov
and
sahf
repz
mov
cltd
out
push
lods
outsb
leave
push
andl
iret
xor
into
iret
test
lods
mov
insl
jbe
outsb
arpl
mov
xor
sbb
inc
cld
roll
dec
insb
dec
add
lcall
std
xchg
mov
xor
sbb
dec
jmp
push
or
fidivrl
xor
pop
push
cwtl
sub
mov
mov
mov
dec
or
movntq
push
lcall
popf
aad
mov
int
and
cld
in
movsb
sub
test
data16
pusha
jp
add
and
imul
stos
in
movsb
pusha
adc
add
std
es
mov
rol
stos
jle
xchg
xchg
clc
inc
iret
and
sahf
outsl
mov
and
scas
das
repnz
sub
push
mov
scas
fisttps
aam
imul
in
xchg
cmp
sbbb
push
jae
inc
dec
in
jno
mov
arpl
out
sti
mov
mov
fnstsw
mov
aaa
inc
scas
cmp
cmp
push
pop
mov
shrl
loope
cmp
jae
add
dec
hlt
xchg
sti
pushf
pusha
mov
pop
data16
lds
scas
jne
shll
sbb
fisubrl
jmp
ja
out
popa
sub
repnz
inc
jb
jle
jecxz
je
ret
dec
cmc
jns
test
sahf
fidivs
hlt
push
dec
xchg
xor
push
jno
cmp
xchg
icebp
dec
and
xor
mov
cld
xchg
in
ljmp
shlb
insl
push
pop
shlb
loop
cld
push
push
hlt
test
lods
xor
pop
mov
bound
sub
movsl
dec
imul
sbb
inc
inc
pushf
sub
imul
stos
inc
add
out
pop
cmp
mov
shll
cwtl
cmpl
adc
int3
add
jo
inc
fists
pop
dec
jno
mul
movsl
add
cs
hlt
jle
mov
dec
test
xchg
lds
adc
jmp
andl
cltd
cmp
push
movsb
pop
push
xchg
or
rorb
jne
dec
fisttpl
xchg
inc
cwtl
data16
mov
fcmovnbe
and
mov
dec
out
shl
in
or
pop
mov
loope
sbb
push
lock
movsb
rcr
inc
aas
and
mov
cmpsb
adc
cmp
sub
daa
dec
sarl
inc
dec
sub
cs
push
or
mov
std
pusha
jae
lea
mov
xor
fistpl
gs
and
ficoms
dec
sbb
pop
push
mov
ret
mov
ret
cmpsb
cmp
or
push
repnz
rcl
jo
add
mov
lret
rcll
inc
test
mov
ja
les
loop
jno
mov
fidivrl
cmp
fistpl
repz
inc
mov
iret
mov
dec
lods
dec
frstor
push
pop
arpl
jns
push
loop
cld
push
adc
mov
lcall
cmpsl
and
push
fstl
mov
inc
fadds
inc
mov
lock
lods
fwait
push
push
push
dec
loopne
pop
or
mov
in
sti
les
aam
mov
test
push
movsl
test
mull
adc
arpl
loopne
xlat
and
mov
sub
stos
xchg
inc
out
push
xor
repz
push
cmp
xorb
mov
dec
mov
dec
subl
sbb
cmpsb
xor
dec
xor
aad
push
adc
inc
icebp
mov
xor
insl
push
pop
loope
in
push
pusha
mov
loopne
cmc
xchg
xor
lret
mov
or
loopne
lea
sbb
or
push
jmp
xor
popa
cmp
xchg
cmc
xor
xchg
sbb
icebp
ja
ds
nop
add
loope
and
fwait
cli
clc
inc
lcall
inc
lret
sub
fdiv
mov
fsubrs
xchg
inc
mov
cmp
jns
jp
rorl
xor
or
xchg
sub
into
sub
xor
outsb
add
pusha
dec
call
cmp
sub
mov
int3
les
loopne
dec
es
fwait
adc
lock
cmp
ret
jle
pop
sbbl
add
mov
cld
cmpsl
popf
shr
out
xor
jne
les
add
dec
jb
and
test
jle
outsl
icebp
out
or
pop
jmp
xor
ret
movsb
mov
dec
iret
hlt
push
shll
shll
adc
xchg
les
orb
cmpps
pop
jle
das
sub
inc
add
iret
cmp
cmp
and
jne
mov
xchg
push
jb
data16
addr16
sub
xchg
stos
popa
cmpsl
jb
loop
lea
mov
mov
out
mov
into
dec
jne
cmc
std
sbb
push
iret
daa
out
adc
mov
cmp
sahf
shll
negl
jecxz
out
dec
mov
and
outsb
sub
lahf
scas
lock
shll
jno
xchg
fld1
mov
stc
push
dec
lea
into
mov
movsb
popa
xchg
jge
movsl
in
push
mov
inc
sbb
cmp
cltd
adc
mov
imul
dec
data16
loope
xchg
inc
int3
lock
loop
inc
push
lds
in
test
mov
add
mov
mov
inc
out
inc
sub
rcl
test
imull
or
push
adc
call
jns
int3
jno
sbb
jmp
adc
push
mov
jo
pop
rep
xor
and
jg
insb
aam
dec
stos
xor
xchg
pop
faddl
dec
inc
mov
aam
mov
imul
add
rolb
xchg
inc
daa
adc
adc
jle
inc
sbbl
push
enter
sub
outsl
xchg
jno
push
imul
incb
ljmp
outsl
sub
jo
imul
cmc
push
inc
sub
in
jp
and
subb
lods
cmp
cmp
movsl
ss
dec
shll
call
push
ss
out
arpl
and
sub
adc
mov
scas
fidivs
test
rorl
adc
push
add
push
imul
dec
shlb
out
frstor
movsb
xor
sbb
jns
push
pop
cmp
push
je
push
mov
jb
loope
dec
push
add
sbb
and
inc
inc
jnp
es
xchg
sub
scas
int
mov
xor
je
and
test
pop
jbe
addl
dec
icebp
cmp
jnp
add
cmpl
mov
push
out
and
push
jns
stos
and
aaa
cmp
mov
in
sahf
dec
xchg
aam
push
ja
icebp
and
sbb
push
imul
xor
loop
out
jnp
jl
inc
lcall
subb
sarl
jo
pop
lods
lock
jne
mov
push
or
je
repnz
aam
mov
repnz
adc
outsl
div
ret
pop
pop
xchg
mov
in
xor
mov
aaa
sbb
pop
xchg
mov
pushf
jo
test
push
sub
add
jmp
dec
jno
hlt
int3
add
and
stos
cs
cmpsl
pop
fwait
in
addl
cmp
bound
bound
stc
and
mov
xchg
cld
sub
pop
cli
pop
insb
pushf
xchg
out
inc
mov
jno
cmp
scas
push
fprem
in
int
jg
inc
out
in
jmp
aaa
int
scas
mov
and
sub
jno
and
xor
mov
aad
je
popa
mov
add
cmp
lods
mov
jne
mov
xor
push
insl
pushf
xchg
xlat
mov
push
mov
push
xor
in
in
mov
ss
or
or
push
cltd
dec
aam
xlat
mov
push
jp
xor
nop
or
pop
int3
pop
arpl
call
iret
pusha
or
or
aam
inc
cld
push
roll
adc
hlt
push
adc
mov
movsl
inc
pop
out
cwtl
inc
xor
cmp
jl
popf
mov
jle
es
mov
js
xchg
jnp
lods
jno
imul
rol
movsl
ds
inc
call
inc
push
lret
negl
dec
push
in
lahf
jge
add
sti
test
xor
hlt
lahf
stc
imul
fnstenv
out
in
rclb
mov
push
jmp
push
sbb
je
dec
adcl
lock
popf
dec
xor
inc
in
mov
dec
mov
adc
lods
insb
scas
mov
dec
jmp
outsl
ror
lahf
pop
sub
xchg
icebp
sbbb
push
mov
sub
xchg
pop
sub
lret
cltd
push
mov
lret
jl
add
or
out
mov
imul
nop
pop
shrb
test
sti
fstps
xchg
xchg
pop
cmp
ret
ss
sub
add
mov
push
shr
adc
lods
in
xchg
mov
sub
sbb
dec
push
into
pop
movsb
int3
into
imul
or
mov
pop
push
mov
aad
clc
je
add
loop
mov
push
adc
mov
adc
xchg
xchg
push
gs
cmp
xchg
dec
lcall
pop
sub
mov
fstps
and
pop
loope
add
dec
enter
movsl
fdivr
or
mov
inc
or
inc
fnstenv
cmpxchg
pop
mov
cltd
divl
xchg
push
pop
outsl
into
adcl
movsl
push
jnp
stos
popa
jecxz
ret
loope
cwtl
js
mov
sbb
test
in
push
adc
iret
daa
ficoms
dec
mov
shrl
sbb
jmp
pusha
rcl
mov
mov
inc
xchg
add
and
sub
xchg
cmp
repnz
adc
in
ja
lret
or
mov
sbb
jge
in
out
or
or
xlat
dec
jnp
lret
fildll
xor
fidivs
jne
imul
mov
ret
mov
into
mov
rcrb
stos
pop
xchg
aad
outsl
fistpll
imul
mov
inc
test
jecxz
and
int3
mov
test
aad
test
dec
mov
push
push
inc
in
sar
lock
outsb
inc
ja
cmp
andl
scas
mov
lret
and
dec
xchg
call
lods
pop
add
mov
or
mov
cmp
or
out
or
pop
popf
and
pushf
sbb
cmpsl
rol
and
movsl
push
out
mov
ss
cli
mov
cmp
cmp
pop
out
mov
mov
in
cmpsb
adc
xlat
jmp
shlb
lock
je
popa
mov
ss
mov
cwtl
and
sbb
xor
imul
push
inc
call
jns
jecxz
pop
mov
xlat
add
outsb
mov
scas
out
shufps
stc
inc
push
and
fsubrl
push
pop
outsb
scas
scas
outsb
ret
adc
adc
pop
xchg
cmp
xchg
xchg
push
leave
sub
sub
and
hlt
or
cmp
test
aad
cmp
repz
jb
mov
fs
aaa
xchg
dec
sub
sbb
nop
int3
jae
loop
shrl
xchg
or
mov
imul
xchg
negl
popa
ficoms
sbb
out
popf
sbb
mov
cmp
fcmovnbe
mov
aas
cmove
mov
sbb
adc
fs
xor
jae
cld
outsl
jecxz
jl
sub
mov
mov
into
dec
lcall
push
xor
pop
cmp
js
mov
mov
pop
cwtl
cs
hlt
lods
xchg
or
inc
ds
inc
lea
mov
fisubs
in
popa
push
adc
and
xlat
xchg
mov
sbb
adc
push
xor
jo
jle
adc
push
icebp
stos
mov
je
xor
jp
push
inc
jno
sub
stos
jnp
sbb
mov
dec
pusha
movsl
je
push
and
push
out
outsl
aas
fistpl
mov
daa
movsb
or
test
cs
lds
sbb
dec
or
je
dec
mov
or
xor
aad
add
fiadds
lock
jnp
lds
xor
das
popa
cmp
dec
pop
and
or
mov
xor
call
jmp
je
addr16
mov
test
add
push
cmp
xorb
push
xchg
dec
insl
jns
sahf
push
cli
in
push
cltd
fs
mov
imull
sti
or
xor
rcl
add
mov
imul
or
pop
adc
jo
add
insb
cmc
out
lret
dec
aad
jl
iret
jne
push
outsl
ja
stos
fdivl
inc
sbb
inc
jp
jecxz
ds
lds
jmp
sti
lahf
and
ja
and
jo
pop
das
mov
rorl
js
stos
sub
sbb
adc
pop
xchg
mov
xchg
fistl
or
hlt
fs
mov
cmp
or
inc
sbb
dec
loop
notl
fwait
mov
jecxz
or
lods
nop
xchg
jo
jmp
sbb
jp
data16
adc
outsb
jle
and
sub
inc
int3
fdiv
adc
nop
fcompl
jmp
scas
adc
jle
popf
test
add
test
cmp
inc
shlb
lock
xor
mov
xor
fwait
cmp
push
pop
clc
cmc
add
js
fwait
cmp
and
jmp
mov
mov
jae
pushf
and
mov
sub
outsb
jmp
repnz
mov
mov
dec
xlat
sti
lock
jne
inc
sbb
sub
mov
push
rorb
cmp
aad
in
data16
jns
xchg
int3
outsb
mov
xchg
cmp
jnp
cmp
addr16
lret
mov
cld
jg
addr16
inc
test
inc
xchg
cwtl
jg
movsl
sub
sub
push
add
mov
xchg
dec
push
ljmp
xchg
andl
add
push
mov
jle
int3
cmpsb
rorb
test
pop
sbb
inc
daa
add
daa
cltd
push
push
lea
lret
inc
mov
pop
aaa
xor
mov
mov
sub
lahf
es
pop
out
sbb
mov
xchg
adc
enter
imul
bound
test
subb
mov
or
inc
pop
push
inc
inc
mov
jmp
insb
roll
repz
out
iret
aaa
stc
jle
mov
out
imull
lods
push
lea
pop
loopne
stc
push
mov
sub
push
fcomps
filds
leave
sbb
dec
mov
loope
xchg
push
jmp
mov
pop
dec
ret
adc
popa
mov
pop
cmp
pop
jnp
add
sarl
jp
incb
and
adc
lods
jmp
popf
mov
add
ljmp
xorb
push
je
dec
sar
mov
aad
sub
dec
or
jecxz
sub
mov
mov
std
ja
inc
pop
ftst
out
std
aad
lret
pop
lea
mov
daa
push
add
scas
mov
es
add
ret
lods
es
loop
pop
mov
cwtl
icebp
hlt
fs
jnp
push
les
loopne
les
mov
repnz
fwait
cwtl
stos
popa
icebp
das
push
cmp
aad
sbb
fisubrl
lea
dec
xor
dec
add
or
movsb
sbb
cmpsl
cmpsb
fisttpl
push
xor
mov
in
sbb
stos
jb
std
jge
aad
mov
sub
daa
xlat
xor
adc
jecxz
andl
pop
xchg
nop
movsl
je
clc
jecxz
lahf
lea
leave
in
inc
jecxz
inc
mov
inc
add
ljmp
sti
sbb
jae
add
movsb
mov
push
mov
ljmp
sub
mov
xor
gs
cs
jmp
mov
push
fcomp
or
mov
jecxz
jg
adc
call
bound
xor
inc
ds
pop
cmc
loop
dec
shl
test
out
test
push
and
push
imul
loope
out
cmc
outsl
ljmp
push
addr16
cli
sar
lock
adc
inc
mov
mov
orl
push
pop
mov
enter
jecxz
jb
sbb
sarl
push
outsl
pusha
mov
movsb
les
push
push
jb
jmp
mov
jno
into
mov
cld
stc
outsb
inc
lods
sarb
push
arpl
pop
xor
out
mov
jecxz
jno
scas
lcall
dec
ja
jne
fstl
mov
inc
mov
xlat
loope
cmp
sbb
jb
dec
inc
jns
push
enter
out
xchg
jb
adc
jecxz
lcall
cmp
int
cmpl
in
clc
jbe
mov
pop
ret
pop
cli
sub
dec
fstps
movsb
push
dec
aaa
les
call
lret
xchg
in
mov
mov
xchg
flds
addr16
mov
sub
add
repnz
adc
jno
push
dec
pop
out
mov
inc
jnp
or
add
jle
mov
divl
or
and
cmp
adc
xchg
pop
cld
adc
pop
mov
inc
xchg
mov
dec
push
test
aad
std
mov
cmp
sub
mov
dec
cmp
jns
xchg
and
lock
lcall
xchg
lcall
jecxz
lret
stc
pushf
das
nop
cmpsl
rclb
shrl
fimuls
mov
xchg
cmpsb
je
mov
les
xor
test
loop
pop
xor
jns
push
stos
mov
mov
mov
out
aas
add
cmpsb
sti
mov
pop
mov
jae
out
or
adc
fwait
mov
lds
mov
fsubp
ret
movsl
inc
notb
in
jge
mov
scas
jmp
int
movsb
into
xor
fmul
mov
lea
movsl
pop
js
dec
sbb
cmc
or
imul
fwait
out
shll
scas
cwtl
xor
add
ficompl
mov
xlat
repnz
adc
pop
mov
dec
inc
stos
cmpsl
jle
std
addr16
lock
push
ds
addr16
sbbb
and
or
cmpb
xor
adc
xor
in
xor
scas
mov
cld
and
cmp
mov
test
out
lret
sub
mov
jmp
icebp
and
pop
lahf
sbb
mov
insb
push
push
mov
js
pop
mov
adc
movsb
lret
cmpsb
pop
adcb
or
lcall
or
enter
outsl
jg
jnp
rcll
push
std
sbb
repz
imul
pushf
rorl
xchg
push
inc
pop
or
lds
push
dec
add
es
lods
pop
dec
fcmovb
mov
sub
out
push
lahf
mov
xchg
cmp
xor
pop
inc
movsb
iret
xor
aaa
adc
imul
movsb
sub
push
sbb
ja
aam
jg
dec
movb
mov
shr
shrl
mov
cmpxchg
cltd
cmp
outsl
aaa
loope
jnp
pop
sub
loope
cmp
out
push
popf
sub
push
lret
mov
xorl
sbbb
pop
insl
int3
das
mov
js
xchg
cmp
inc
pop
mov
or
loope
push
dec
jle
mov
jne
mov
or
inc
fists
in
mov
pusha
xchg
pusha
cmc
dec
mov
and
bound
jno
mov
mov
pop
and
cmp
jne
xchg
je
mov
gs
lods
je
mov
mov
inc
ss
stos
mov
jbe
mov
inc
jae
dec
jge
adc
jecxz
popf
mov
hlt
test
add
jae
stc
sbb
or
cmp
push
arpl
fwait
cs
xor
dec
aad
iret
jg
push
mov
leave
ficompl
pop
loope
or
shr
xlat
push
rorl
push
mov
mov
scas
sahf
sub
add
pop
and
pop
aaa
inc
lret
cs
mov
dec
adc
loope
lea
loop
mov
and
xchg
in
outsb
add
lahf
xor
pushf
sahf
mov
lret
idivb
ja
enter
cmp
jmp
push
lahf
cs
scas
in
les
rcrl
mov
icebp
pop
cmp
cmpsb
push
outsb
jbe
push
pusha
loopne
js
jb
mov
les
fsubs
data16
pop
rcrl
stc
xchg
fcmovnb
mov
jmp
xorb
or
inc
stos
fcomps
dec
xchg
insb
std
into
mov
mov
jmp
nop
cltd
and
outsb
adc
jno
sbb
in
or
xor
sbb
pop
dec
out
scas
mov
and
push
adc
add
mov
shrb
mov
xchg
or
pushf
pop
add
pushf
push
in
mov
xchg
fcomi
ljmp
pop
push
jle
adc
inc
or
mov
in
int
add
pop
data16
mulb
add
xlat
bound
lods
in
jno
push
test
cmp
dec
lcall
gs
mov
sti
lahf
push
jbe
lret
inc
xlat
jmp
cs
int
xor
push
jne
mov
cmpl
mov
pop
nop
mov
call
xchg
mov
rorl
idivl
insl
cwtl
jle
aaa
or
mov
dec
mov
xchg
dec
pop
mov
mov
add
repz
xlat
pop
ret
cld
pop
aas
les
push
mov
gs
fsubrs
pop
push
mov
imul
jmp
lock
xchg
fucom
lock
les
adcb
add
fdivs
mov
testl
mov
jecxz
inc
movsb
pop
ds
xchg
and
sbb
cmpsb
inc
mov
in
pop
stos
mov
add
sti
leave
xchg
sub
lds
jb
lock
dec
inc
sub
aaa
or
outsl
test
cmc
adc
fidivl
xchg
sbb
xchg
es
popa
insb
and
push
inc
and
inc
enter
pusha
mov
hlt
fwait
xchg
mov
adc
xchg
mov
mov
cmpsb
sahf
add
int
orb
xchg
sbb
movsb
mov
mov
and
xor
outsb
mov
and
mov
ljmp
xor
lahf
fstl
or
xchg
dec
jl
inc
fsubr
adc
push
cmp
rorl
imul
inc
lock
out
jl
cmpsl
cmpsb
ljmp
sti
out
xchg
jp
sub
jb
pusha
imul
fcmovnb
add
pop
out
or
jp
cmp
out
add
sub
sbb
popf
scas
pop
add
outsl
lock
jo
add
add
mov
sbbl
clc
aam
pop
push
ss
icebp
out
xchg
stc
mov
dec
inc
in
addr16
hlt
int
mov
mov
mov
jb
inc
call
inc
dec
sbb
sbbw
loop
inc
testl
fstpt
add
fisubl
rcpps
adc
xchg
inc
xchg
push
pop
mov
push
scas
aad
push
jno
and
pop
lcall
xchg
imul
cmp
repz
sbbl
pop
pop
sbb
movsb
cmpsl
ljmp
lret
jmp
sahf
outsb
or
and
shl
jne
andw
xchg
data16
or
jl
cmpsl
or
inc
js
iret
xor
jnp
cltd
or
gs
fbld
fsts
in
push
ret
loopne
test
jnp
nop
sub
jnp
cmp
in
es
lret
push
adc
data16
jne
sub
lcall
mov
fnstcw
xchg
lods
inc
sbb
insl
adc
mov
cltd
daa
push
pop
bound
js
mov
xchg
xchg
sub
xor
mov
dec
push
xor
inc
pop
out
data16
mov
and
or
adc
pop
mov
fwait
xchg
push
fistpl
cmp
out
insb
jbe
xchg
xor
pop
jne
sbb
std
inc
xorl
stos
push
pop
adc
cmp
aaa
mov
aas
cwtl
insb
push
mov
repnz
sub
adc
rolb
stos
shll
or
fwait
repz
and
jns
push
jp
jge
mov
dec
cmp
call
jnp
xor
cli
lods
shrl
fs
test
cs
insb
hlt
addl
inc
lods
mov
inc
rcrb
xchg
mov
aaa
xchg
shlb
ss
sti
dec
xchg
leave
xor
mov
mov
mov
adcl
cmp
shll
loopne
lcall
cmpsb
push
outsl
clc
aaa
xor
xor
add
sub
inc
sarb
es
pop
inc
push
lods
mov
cltd
test
data16
data16
mov
jg
loopne
sub
inc
push
lods
push
mov
popf
les
jo
dec
iret
rcll
sub
mov
pop
cmpl
mov
leave
mov
and
popa
jns
mov
pop
sbb
mov
fists
mov
fnstenv
inc
pusha
push
xchg
cmpsl
insl
adc
mov
shll
nop
mov
jbe
outsl
mov
ss
mov
insl
pop
data16
movsl
adcl
inc
mov
std
pop
xor
xor
or
aad
inc
push
xor
sub
dec
xor
mov
xchg
jge
inc
mov
push
push
or
add
pop
pop
add
iret
jno
mov
popa
inc
clc
ret
cmpsb
cmc
jno
push
daa
loopne
inc
lret
pop
enter
out
shl
push
sbb
mov
inc
jnp
test
fldcw
cmpsb
pop
mov
add
and
push
stc
and
inc
add
sahf
jnp
insl
and
mov
and
lock
cld
enter
stos
inc
iret
add
aam
movsb
in
imul
aas
cmpsl
cmpsl
sbb
sbb
sbb
int
jo
inc
push
je
stos
push
mov
bnd
fiaddl
mov
sbb
dec
jne
adc
add
lock
outsl
mov
int
sub
test
in
inc
dec
sbb
sub
xchg
jg
cmc
or
dec
movsl
cmpsl
lret
dec
in
ret
jnp
fists
push
ret
inc
scas
push
test
movsb
or
adcb
cmp
jnp
sti
cmpsb
lea
aam
ljmp
lret
mov
jb
dec
jge
movl
mov
pop
add
push
dec
jl
push
adc
push
cld
insb
daa
xor
dec
sub
and
mov
mov
roll
mov
push
mov
mov
add
bound
cmpsl
js
insb
sarl
lret
mull
ljmp
mov
testl
jge
out
and
adcl
movsl
lret
sbb
mov
mov
insl
jmp
leave
jecxz
jmp
aad
shll
xor
inc
and
xlat
hlt
dec
leave
pop
cli
in
jle
ret
xor
or
rolb
sbb
loopne
iret
dec
add
mov
and
xchg
repnz
into
xchg
pop
push
scas
push
pop
enter
adc
cmp
ret
popf
repnz
lahf
je
sub
js
sub
insl
loop
xor
andl
pop
ljmp
adc
loope
fstl
test
pop
insl
jbe
cmp
stos
adc
fnstenv
xchg
jle
lcall
inc
and
gs
stos
push
mov
into
dec
cmpsl
or
inc
fcoms
pushf
inc
mov
add
mul
arpl
rcll
and
mov
mov
inc
dec
insl
aaa
stos
jbe
push
push
rcrl
mov
sbb
jle
mov
sbb
sarb
adc
inc
outsb
sub
sahf
outsb
inc
jns
mov
sub
shll
mov
xchg
jge
dec
push
lea
push
mov
xchg
jae
aas
adc
movl
addb
ret
arpl
aad
stos
push
lea
jl
repz
and
and
into
sub
in
mov
xor
inc
ret
jnp
lahf
jg
and
sbb
movsb
test
ret
dec
dec
in
imul
pop
push
sbb
popa
jo
push
mov
shll
pop
dec
xchg
sahf
mov
loopne
mov
jmp
sub
jg
push
mov
outsb
cmp
push
xchg
pop
in
pop
sub
push
loopne
lahf
scas
adc
ja
inc
mov
gs
mov
je
dec
mov
xchg
mov
mov
call
push
scas
cs
fs
dec
aas
and
xchg
mov
dec
test
jl
add
ljmp
jns
pushf
sbb
addl
cld
insl
popa
inc
dec
aad
imul
paddsw
dec
dec
sub
mov
add
hlt
scas
push
add
cli
adc
jbe
aam
faddl
jp
xchg
movsb
outsb
aas
dec
jg
push
mov
inc
out
lcall
jmp
ds
add
repz
jnp
cli
fwait
dec
test
test
adc
ljmp
or
xor
inc
xchg
rolb
mov
xlat
ljmp
imul
jno
or
mov
out
mov
jmp
arpl
aas
in
mov
mov
mov
cli
adc
and
pop
or
loopne
mov
rolb
cmpsb
cmpl
push
xor
bnd
ret
mov
and
outsb
jb
lods
xor
out
mul
loopne
pushf
ss
je
dec
ljmp
xchg
cld
jle
sbb
imul
dec
stos
vcvtpd2psy
loope
push
dec
push
jo
cmp
lods
mov
inc
arpl
test
jns
xor
mov
fimuls
mov
push
test
push
pop
xchg
mov
dec
shl
xor
pop
push
shlb
mov
sbb
jae
iret
inc
mov
repnz
sbb
push
mov
addl
xchg
stos
lods
roll
popf
sbb
cmp
jge
push
xchg
adc
loopne
mov
push
push
push
fs
xchg
loop
mov
mov
push
out
sahf
dec
test
pop
push
push
mov
dec
ret
adc
in
mov
inc
mov
xor
adc
and
scas
js
push
enter
sbb
pop
sbb
mov
sti
xor
mov
jp
fstps
fwait
sbb
aaa
cli
fstpt
xlat
fisttps
or
and
iret
filds
aad
jnp
mov
cmp
enter
sub
dec
jg
ret
rorl
adc
pop
adc
mov
loop
add
mov
stos
xchg
cmp
aad
push
adc
jg
inc
inc
sbb
pop
add
mov
cli
cmpsb
sbb
in
adc
pushf
sub
sarb
xchg
stos
pop
leave
lahf
inc
repz
pop
ret
in
jns
cmp
shll
hlt
cmpb
stc
outsb
cld
or
loop
sbb
push
fwait
jns
nop
clc
std
jb
mov
xchg
adc
mov
push
je
pop
sbb
cmpsb
xchg
lea
enter
xlat
movsl
sti
lret
xchg
cmp
call
mov
incl
leave
lret
gs
nop
inc
lods
xchg
jl
dec
mov
test
jnp
test
test
and
inc
outsl
push
hlt
shll
inc
and
mov
jno
mov
xor
jns
pushf
addl
out
cmp
mov
pop
ret
dec
jns
push
pop
jp
imul
test
mov
jb
jl
mov
and
icebp
rolb
and
inc
jg
shlb
inc
pop
inc
push
dec
add
xor
cmpsb
sub
scas
stos
fcmove
call
je
pop
rcl
js
sub
imul
jg
lcall
add
pop
push
add
inc
jl
mov
pop
cmp
ret
add
jg
loope
pushf
das
hlt
inc
das
lret
outsb
repnz
add
adc
test
pop
pop
aad
mov
add
push
and
lea
pop
and
xchg
cld
mov
ret
cmpsb
lret
in
dec
xchg
and
es
xlat
shlb
mov
mov
adc
jmp
push
adc
mov
fimuls
cmp
mov
lock
push
jg
imul
insb
dec
test
mov
mov
lahf
std
imul
or
imul
repnz
pop
adc
xor
int3
xor
sahf
mov
movsb
call
cld
mov
pop
push
bound
popf
stc
adc
nop
mov
shlb
loope
push
bound
rcll
dec
xchg
lcall
aaa
push
xchg
sub
ljmp
in
ret
sub
arpl
fcompl
pushf
cs
mov
andb
shll
in
fs
in
xchg
loopne
mov
sub
orl
adc
cli
cli
adc
repz
loope,pt
mov
idivl
mov
and
hlt
out
or
inc
dec
mov
cwtl
push
lcall
notl
cmpsl
xchg
lods
sbb
add
jl
inc
test
sub
pop
or
ljmp
jae
mov
jp
movsb
sbb
jae
lea
mov
lods
das
dec
pop
add
movsl
cmp
iret
outsl
imul
and
push
jecxz
decl
add
xor
jns
rcrb
or
neg
aam
jge
shll
add
fiaddl
sub
fadd
dec
push
shll
cmpb
add
repz
shrl
shlb
add
filds
and
in
jle
pop
xchg
std
es
outsl
notl
sbb
paddd
in
addb
dec
mov
insb
pop
or
bound
out
in
outsb
adcb
push
cmp
hlt
mov
sub
mov
iret
lret
mov
fwait
mov
jno
lcall
adc
jle
pop
push
out
in
aam
jnp
fwait
add
ds
test
sbb
mov
xor
js
insl
mov
lock
icebp
lea
movsb
or
push
jbe
xor
ficompl
hlt
xchg
mov
aam
loop
fidivl
mov
ret
fs
shll
sub
adc
inc
neg
jg
rcrb
sbb
shrl
out
mov
xchg
fsts
add
fidivrl
popa
mov
leave
sbb
xchg
int
insb
daa
lods
dec
pop
arpl
mov
dec
nop
mov
and
sub
jno
div
inc
pop
fisubs
fs
cmc
call
dec
jno
je
das
in
or
nop
jb
and
lahf
das
sub
adc
jp
subb
lcall
mov
cs
xorb
insl
mov
movsb
push
std
inc
push
jge
mov
mov
dec
mov
stos
insb
mov
scas
pop
xchg
enter
sub
repz
int
aas
out
sub
add
mov
fs
adc
add
lods
aad
lcall
inc
ljmp
lea
sbb
cmp
fcmovbe
push
scas
in
out
mov
push
jge
aad
rorb
mov
push
arpl
xchg
mov
and
loopne
xor
std
movsl
mov
or
xor
pop
xor
mov
fistpll
lahf
inc
xchg
aad
sbbb
fucomi
int3
or
mov
xchg
ds
hlt
inc
loopne
inc
in
je
cmpsb
jae
xchg
xor
inc
dec
mov
imul
repz
shl
cmp
inc
cmpsl
lret
inc
icebp
insb
pop
push
mov
notl
inc
mov
push
sub
xor
adc
sbb
sar
dec
push
leave
ret
insl
ss
xor
mov
or
movl
loope
fstl
mov
je
sbb
or
jg
inc
aam
inc
and
dec
inc
or
cmpsb
icebp
ja
les
hlt
ret
sbb
imul
sbb
imul
lock
adc
sub
mov
xchg
xor
stc
mov
divl
in
int
xchg
into
push
mov
dec
sub
mov
mov
cmpsl
push
loop
shll
inc
cmp
xor
mov
rcl
inc
and
fdivl
out
dec
stos
mov
popf
mov
and
fidivl
push
call
pop
adc
and
mov
cmp
movsb
fwait
ret
js
mov
movsl
ret
xor
xchg
incl
inc
mov
mov
mov
sarb
pop
imul
inc
sub
into
fcoml
mov
add
sbb
in
dec
adc
mov
divl
out
andl
popa
iret
jno
addl
and
scas
rorl
jg
jmp
and
orl
mov
lea
mov
add
insl
aam
cld
cmp
lret
cmp
pop
clc
xor
dec
sbb
mov
imul
movsb
sub
popa
adc
xchg
cwtl
clc
lcall
jno
mov
loope
rorb
push
pop
xchg
adc
mov
jge
sub
jns
mov
fwait
inc
fcompl
jbe
cmp
fdivs
lcall
xchg
add
xchg
sub
lcall
in
inc
fldl
xlat
cmp
adc
or
xchg
xchg
mov
in
pop
jl
sahf
jle
add
xor
jl
hlt
cs
loop
repnz
movl
mov
sub
add
push
add
jge
cltd
notb
sbb
sub
call
push
inc
jmp
gs
mov
dec
lcall
jnp
sbb
mov
mov
mov
std
out
mov
push
rol
cmp
int3
add
imul
xor
fldt
test
pop
xorb
push
jnp
mov
out
in
mov
popa
cmp
mov
pop
dec
sub
sub
and
div
rorb
andps
popa
lcall
or
and
stos
add
cmp
scas
mov
into
xor
fimuls
int3
mov
fidivl
lds
ss
in
int
dec
mov
xchg
jl
adc
jge
repnz
dec
aas
out
mov
imul
jle
fadd
fnstcw
testb
lods
addl
scas
aaa
sbb
push
or
scas
add
aam
pop
xor
mov
test
dec
repnz
jbe
leave
test
jnp
sub
lret
cmp
and
add
push
push
mov
aam
push
sbb
lcall
pop
in
fld
or
js
es
mov
ret
add
insl
adc
cmpsl
jne
sbb
push
add
mov
ljmp
rol
gs
icebp
test
xchg
daa
pop
popf
dec
into
aad
ret
xchg
fsubl
inc
xchg
inc
outsl
jno
repz
cld
push
cltd
sub
mov
fcmovne
cld
adc
daa
lret
mov
push
xchg
popa
mov
mov
or
loopne
sub
xchg
in
bound
push
aaa
in
stos
cwtl
data16
xchg
rcll
and
sbb
mov
fimull
imul
stc
in
cmp
lods
sbb
icebp
adc
dec
xlat
xchg
pop
movsb
leave
push
dec
add
jmp
xchg
stos
sub
js
pop
nop
punpckhbw
into
std
out
insl
and
fcompl
sbb
cltd
xchg
mov
cmova
push
jno
and
adc
daa
jns
lcall
iret
sahf
pushf
pop
loopne
out
mov
dec
xchg
out
jle
pop
and
or
inc
js
nop/reserved
or
or
movsl
xchg
mov
sbb
add
sub
loop
pop
xchg
add
cmpsl
pop
loopne
adc
fidivrl
fwait
jecxz
repz
pop
in
das
ds
rclb
pop
cmp
pop
mov
mov
mov
lods
in
iret
push
dec
mov
daa
hlt
mov
pop
clc
push
int3
and
stos
test
jo
adc
cmp
movl
mov
imul
pop
std
sbb
sbb
daa
mov
ja
mov
inc
sbb
lds
ror
push
dec
in
fcoms
mov
or
sub
outsl
test
inc
or
inc
pop
sahf
sahf
push
jle
lds
scas
std
aad
mov
dec
adc
btr
and
test
iret
pop
dec
mov
enter
lods
mov
fistl
cld
fs
fdivrp
push
inc
mov
mov
in
test
xchg
mov
xchg
pusha
push
pop
cmp
jle
adc
mov
jo
jbe
cmp
mov
fstp
data16
adc
sbb
cmpsb
adcb
push
shlb
test
scas
cmp
pushl
add
mov
fidivs
push
xchg
sbb
test
cltd
lods
mov
mov
sbb
jno
mov
sahf
sarb
inc
pop
push
mov
stos
shlb
push
dec
clc
add
jmp
scas
shlb
les
pop
sub
orl
mov
scas
lea
js
dec
scas
push
dec
rol
jge
inc
subb
mov
sbb
lods
xor
icebp
fsts
mov
out
outsb
jle
sahf
push
repnz
sbb
gs
or
sahf
test
add
xor
and
sar
mov
inc
xchg
stos
add
popa
mov
repz
add
loop
push
aas
insl
xor
test
fsubs
fs
sbb
fildll
in
lods
cmpsb
and
sub
mov
mov
push
nop
stc
out
mov
and
sub
dec
adc
inc
cmc
ret
js
and
jecxz
aam
xchg
das
or
mov
mov
int
fs
cld
mov
mov
dec
pop
lahf
jo
fimuls
ret
test
arpl
rolb
pop
mov
sbb
aad
sub
cmc
push
daa
pop
pushf
and
dec
iret
fstpl
rorb
lahf
adc
cmp
mov
xor
and
inc
push
iret
sub
jbe
rorl
sub
and
fists
mov
xor
repz
aas
jg
fidivs
inc
xchg
xlat
mov
xchg
scas
and
push
and
mov
add
cmp
mov
popa
and
loopne
mov
xor
arpl
daa
pop
test
jge
je
ss
jns
jbe
cltd
pop
or
in
imul
in
sub
sbb
add
rcrl
mov
push
mov
xor
repnz
pop
cs
push
aam
aam
pop
call
dec
jnp
mov
push
push
inc
lea
mov
test
jns
xchg
cmp
fistl
add
cmpb
shlb
mov
add
mov
pop
add
leave
jno
fstps
mov
sub
shll
cmp
lret
rolb
push
stos
das
lea
andb
xlat
xchg
ret
jecxz
fldz
out
test
dec
scas
inc
aas
ss
negb
lds
jl
sbbl
add
jmp
pop
or
lds
cmp
pop
dec
loopne
test
dec
add
mov
add
lds
push
ja
out
xor
aad
insl
mov
push
sub
aad
inc
je
xor
cltd
inc
rol
push
mov
cmp
icebp
adc
shlb
sarl
je
jno
or
sbb
mov
cmp
mov
movsl
dec
add
and
mov
push
fwait
inc
leave
rolb
pusha
into
outsl
je
mov
jne
jnp
xorb
mov
enter
sub
arpl
dec
aam
aam
bnd
movsl
jp
xor
push
sub
jmp
cmpsl
push
sub
test
das
aaa
mov
add
in
sbb
xchg
jp
fstpl
fistpl
shlb
fisubl
fadds
sti
int
arpl
cltd
out
jle
aaa
ljmp
lea
hlt
mov
fsubp
scas
aam
cwtl
test
dec
daa
loopne
and
mov
dec
dec
ja
test
aad
call
mov
stos
cmp
xchg
cltd
jb
xor
push
ss
out
cmp
cmp
mov
fs
inc
dec
shll
pop
pop
and
insl
cmc
mov
and
loopne
in
inc
inc
xchg
xor
cmc
add
jl
mov
movsl
pusha
sub
cmc
scas
leave
mov
fwait
xchg
rcr
js
lds
enter
cs
ret
sub
sbb
scas
mov
cmp
adc
add
or
push
mov
or
roll
cmpsl
lahf
cli
add
leave
ds
loope
jns
gs
std
out
and
push
sbb
adc
push
pop
loop
scas
repnz
shr
inc
movsb
mov
push
xlat
jg
push
int
ja
mov
mov
and
inc
cld
sbb
jb
xor
mov
mov
mov
dec
in
xchg
dec
and
pop
mov
inc
push
inc
stos
push
and
pop
ja
cmp
leave
inc
xchg
xor
push
aam
dec
pop
xchg
ss
xorl
xchg
pop
cmp
out
cld
aam
cmpsb
jmp
js
mov
fldt
aas
lods
and
xchg
push
adc
and
push
loop
daa
lds
mov
in
push
jg
lcall
cmp
fadds
pop
test
mov
push
adc
push
gs
imul
push
dec
ja
fldl
popf
imul
xor
mov
jne
jne
cmp
sub
js
out
out
sbb
inc
lret
dec
pop
js
lods
out
iret
push
pusha
xchg
fldl
jnp
cli
outsb
jb
clc
jbe
sub
fsubrp
adc
xchg
int
fwait
push
lret
push
cmp
xor
mov
das
sub
test
lcall
xchg
jo
aad
push
fdivrl
add
sbb
cmpsb
sbb
cmp
jge
jae
jno
mov
mov
mov
movsb
sti
inc
pop
xor
pop
inc
mov
jg
cmp
push
xchg
push
pop
imul
dec
xchg
push
or
lret
enter
lahf
push
pop
jmp
jb
mov
lds
movsb
mov
adc
mov
adc
mov
ror
and
fwait
js
fldenv
xor
pushf
xlat
dec
lcall
jbe
lock
aad
stos
jae
jecxz
cli
lds
cmp
or
ret
xor
add
test
clc
in
inc
loop
mov
sahf
mov
push
popf
mov
test
ja
fs
shl
std
fnstenv
inc
or
inc
into
push
in
rol
xor
scas
sbb
or
inc
mov
jl
and
xchg
adc
rcr
lea
out
pop
xlat
inc
stos
cmp
inc
dec
xchg
push
sub
and
dec
movsb
pop
arpl
inc
dec
psrld
xchg
adc
xor
loop
sti
mov
pop
xchg
mov
leave
scas
push
repz
xchg
lret
sarb
imul
test
aad
and
int3
xchg
push
test
pop
xor
xor
pop
clc
mov
cli
add
outsb
jmp
test
jmp
adc
add
jmp
mov
sbb
add
lea
mov
cltd
push
adc
sarl
mov
je
sti
push
xor
jns
out
sti
out
or
mov
sub
jge
mov
fdivs
popa
sub
mov
push
xlat
sbb
mov
aad
hlt
pop
repz
jl
mov
push
push
sbb
mov
xchg
arpl
retw
and
dec
or
inc
loopne
dec
aad
in
iret
in
mov
cli
sub
adc
cld
cmp
popa
and
mov
je
cmp
clc
mov
lcall
repnz
out
jecxz
and
cmpsb
mov
sbb
ret
mov
outsl
aaa
mov
loop
std
stos
addr16
test
cs
xor
daa
shrl
lods
ljmp
cmp
and
js
lods
lock
lret
and
add
rorb
push
inc
loopne
sbb
jne
push
sbbb
add
jo
jmp
adc
lods
pusha
jo
cmp
imul
xor
rorb
in
movsb
loope
gs
adc
and
into
into
dec
mov
add
daa
lret
loop
test
mov
inc
and
stc
mov
test
out
imul
test
cmp
mov
push
sbb
js
add
dec
inc
js
push
std
jge
repnz
lret
cs
mov
sub
sub
movsb
stos
sbb
sub
or
sahf
mov
addr16
sti
sub
xchg
addr16
mov
divl
in
inc
adc
dec
leave
jne
fwait
dec
rcrb
sub
fbstp
push
divb
pop
rolb
das
mov
sub
popa
mov
jle
imul
out
sub
jne
mov
rcrl
sahf
pop
ja
push
icebp
jnp
aad
add
fildl
popa
mov
cmp
mov
mov
ss
jl
pop
xchg
int3
sub
outsl
jge
std
xor
and
insl
stos
das
and
sbb
inc
push
mov
inc
jge
cmpsb
mov
mov
movsb
jae
and
insl
sub
js
es
dec
mov
fstpt
mov
lret
rcrb
adc
and
mov
xchg
jno
repz
sahf
fbstp
jl
pop
push
dec
aas
jno
and
mov
adc
ret
xlat
xchg
mov
leave
ja
lods
imul
push
dec
add
jle
dec
sub
and
imul
iret
mov
jecxz
shl
push
imul
cmp
flds
jo
addl
lret
mov
insl
add
jb
sti
insb
std
xchg
xlat
mov
ds
pusha
and
xor
xlat
ret
popf
fistps
pusha
mov
aad
mov
xchg
insl
decl
or
outsl
lock
add
or
in
xchg
xor
popf
and
sub
fwait
std
shll
xor
inc
cmp
orb
lods
adc
je
scas
xchg
stos
xchg
lcall
mov
iret
aas
push
xchg
and
icebp
stos
jl
xchg
xchg
decl
push
dec
mov
inc
fwait
pcmpeqb
sub
packssdw
jne
flds
std
insl
mov
loopne
pop
mov
sub
in
xor
addr16
pop
outsl
iret
adc
push
lock
lea
fbstp
fwait
ds
xor
loope
loop
push
stos
xchg
mov
mov
push
or
mov
jecxz
addr16
scas
and
mul
add
in
push
or
xor
push
test
outsb
lcall
shrd
cltd
dec
stos
cmp
and
push
and
add
int
or
hlt
push
sbb
into
fdiv
add
adc
pop
mov
mov
outsb
es
and
mov
jmp
es
sub
gs
inc
jnp
out
lds
repz
mov
jo
mov
push
jne
jle
xchg
or
gs
lock
sbb
xchg
fidivrl
jns
mov
jge
rcr
mov
sahf
and
pop
cmpsl
dec
je
in
enter
cmc
push
mov
test
das
aas
loopne
adc
sahf
data16
roll
inc
add
dec
fldl
int3
jbe
sbb
jno
dec
in
xor
jno
cmp
scas
or
xchg
loope
lret
mov
or
inc
or
mov
aaa
stos
insl
push
cs
stos
xchg
sub
mov
mov
pop
or
mov
pusha
jp
and
or
lods
mov
rclb
pop
push
lock
mov
dec
sub
jb
sti
inc
scas
addr16
lret
or
xorl
jb
add
daa
int
aas
and
cmpsb
xor
push
fs
orl
xor
xor
inc
jo
insb
ret
cmp
in
jecxz
inc
inc
lock
ret
outsl
jecxz
ss
inc
movl
dec
sbb
push
mov
or
je
test
aam
inc
call
sarl
lds
pop
jmp
vcvtps2pd
pop
test
sbb
dec
add
notb
mov
jne
push
xchg
jne
fwait
pop
or
out
xor
or
dec
and
mov
adc
inc
add
pop
mov
xor
pop
xor
inc
mov
xchg
xor
cmp
xor
adc
ljmp
mov
push
cltd
in
movsb
sahf
fcmovnb
arpl
or
fisubrs
iret
pusha
push
dec
push
mov
jecxz
inc
pop
jp
in
xor
xchg
fs
mov
push
testl
sub
add
loop
mov
mov
loope
jne
inc
lcall
cmp
xor
lahf
jo
adc
add
cmp
jne
and
add
shrl
sbb
lods
inc
or
jb
mov
or
fisubs
dec
imul
inc
movsl
add
cli
sarb
lods
lret
xor
ds
sarb
xchg
mov
adc
flds
push
jmp
ljmp
inc
je
mov
sahf
loopne
mov
mov
pop
scas
push
lds
pop
out
sbb
or
and
add
pop
jmp
lahf
add
xor
test
add
rorb
mov
test
mov
sbb
ja
ret
jbe
lea
pop
dec
cmpsb
mov
mov
ljmp
repz
cmp
mov
sbb
inc
comiss
repz
or
and
mov
out
push
in
movsb
jg
xchg
dec
shl
movsl
icebp
outsl
sub
pop
pusha
inc
or
nop
arpl
test
adc
and
dec
pop
sbb
out
lds
sahf
ret
jge
cmp
pop
cwtl
and
bound
jbe
hlt
sub
mov
add
xchg
cmpsl
ss
cmp
leave
divb
and
jl
xor
cmp
mov
dec
ds
mov
pop
fcompl
push
mov
ret
dec
lahf
andb
sub
xor
xchg
mov
out
jmp
lods
mov
clc
add
mov
test
pop
xchg
scas
mov
movsl
lahf
mov
push
push
push
adc
inc
pop
dec
mov
or
dec
jge
xorb
push
mov
pop
push
sbb
add
or
adc
nopl
or
mov
ret
dec
ja
out
cmpsl
push
mov
inc
lahf
rol
pop
fists
pusha
test
popa
sub
and
jno
in
mov
cvtps2pi
stos
xchg
sbb
aam
mov
insb
int
negb
cmp
and
fucom
rcrb
jae
xor
insb
sub
jo
nop
mov
outsb
push
jae
push
dec
iret
mov
shrb
push
pop
loopne
adc
mov
je
test
out
lahf
sub
mov
cmpsl
insb
pop
shlb
mov
and
cs
mov
inc
cmpsl
es
mov
mov
add
and
lcall
adc
in
pop
mov
stc
idivb
gs
out
cmp
inc
mov
sbb
add
dec
xor
cmp
popf
mov
scas
fwait
and
push
jnp
subb
imul
movsb
xchg
icebp
push
pop
mov
push
js
mov
xlat
faddp
loop
pop
push
das
sub
outsl
sti
mov
inc
xchg
pop
enter
es
dec
push
cli
xchg
jbe
test
mov
je
jns
mov
xchg
iret
push
mov
sub
lahf
xchg
mov
lds
outsl
lods
pop
xor
mov
or
xchg
inc
in
lcall
dec
hlt
xlat
pop
add
sti
cmp
dec
es
push
test
and
or
lcall
jmp
clc
xchg
jecxz
cmp
repz
das
mov
mov
andb
mov
xchg
xchg
push
jo
cmp
mov
in
adc
lock
lahf
mov
popa
push
incl
call
nop
sub
xchg
and
cs
shlb
dec
js
inc
scas
sbb
add
cmp
mov
fistps
and
imul
out
test
cmp
mov
push
jb
ret
aad
js
adc
pusha
push
dec
push
xchg
adc
mov
inc
test
add
bnd
popw
pop
mov
mov
inc
adc
out
xor
ret
aam
rolb
test
dec
mov
xchg
cmpsl
xor
mov
jns
xor
faddl
lret
js
test
aaa
outsb
jns
ret
inc
jae
movsl
mov
int
sub
add
lret
insl
shlb
lods
in
mov
inc
sub
fadd
out
adc
test
adc
gs
popf
dec
push
fildll
jle
jno
adc
das
enter
icebp
or
dec
jmp
adc
cltd
sub
fstpt
aad
lcall
sbbl
cwtl
inc
mov
mov
sti
mov
sub
rorl
or
mov
and
lods
xlat
adc
inc
pop
rcl
imul
subl
dec
jb
pop
movb
cltd
fwait
pop
cmpsl
sti
sub
cwtl
mov
ds
lods
movl
sbb
cmc
dec
lods
adc
dec
xchg
mov
jno
add
xlat
lds
hlt
add
sbb
mov
ja
mov
and
push
js
inc
xchg
scas
stos
mov
clc
cmp
call
pop
jecxz
imul
lcall
repz
add
adc
sbb
daa
jno
nop
imul
mov
filds
leave
fs
sub
rclb
mov
mov
xor
push
dec
filds
pop
sub
insl
ss
or
mov
out
dec
mov
inc
stos
mov
xor
and
lcall
push
adc
push
cmp
sub
mov
and
xorl
mov
lods
outsb
cld
add
scas
jg
jp
sub
cmp
xchg
das
push
fwait
sbb
mov
push
or
mov
and
jns
pop
mov
out
xlat
ljmp
and
and
mov
lods
divb
mov
imul
mov
push
xchg
jle
add
and
jae
sub
out
fiadds
sbb
int
mov
ja
int3
sub
fstl
push
leave
fcompl
inc
fmull
xor
or
sub
lods
sub
pop
cmp
inc
outsb
mov
mov
push
push
clc
data16
in
aad
scas
std
push
cltd
mov
out
iret
adc
mov
push
fldt
loopne
into
dec
aam
lock
lds
jnp
popa
fstps
dec
dec
inc
push
mov
nop
rclb
jmp
lret
cmpb
in
dec
pop
mov
out
cli
jmp
aas
aaa
pop
inc
test
adc
sqrtps
imul
shlb
mov
sbb
fisttpll
jb
scas
add
enter
stos
dec
fisubrs
dec
fcompl
cmpsl
xchg
imul
popa
sbb
jmp
mov
dec
add
cld
dec
stos
push
mov
pop
mov
into
mov
scas
lcall
push
incb
adc
sbb
mov
hlt
stos
ret
sbb
add
mov
inc
push
imulb
out
and
mov
sahf
jg
fadds
popf
arpl
loope
xor
lods
cmp
shll
pop
add
mov
mov
out
out
mov
fsubrl
sub
push
mov
movsb
push
mov
in
cmpsb
and
and
mov
mov
xor
mov
jo
fcoms
imul
roll
add
stos
xor
jecxz
push
adc
shl
lods
mov
xor
cld
or
rol
not
cli
inc
in
fidivrs
push
or
negb
insb
pop
mov
mov
dec
decb
out
jbe
mov
add
jo
push
cmp
out
repnz
icebp
pop
mov
jge
in
fstpt
sar
jns
jbe
repnz
sub
and
or
test
jns
into
push
nop
aad
pop
fsubp
inc
mov
gs
xor
insl
cmp
je
clc
dec
insl
mov
sbb
mov
jg
and
jmp
add
sub
pop
pop
lret
mov
jg
call
mov
cmp
push
cmp
jp
cmp
sbb
sub
jae
pop
push
daa
mov
mov
jmp
jo
insl
test
xchg
repnz
jae
cmp
sahf
pushf
nop
xchg
mov
xor
xor
inc
pop
aaa
pop
ds
or
or
mov
mov
mov
imul
add
loope
xorb
scas
jg
or
cmp
enterw
fs
data16
mov
sbb
aaa
mull
jne
scas
shl
lret
sub
add
iret
ljmp
jno
insb
inc
jecxz
ljmp
ss
dec
enter
xchg
repnz
pusha
lahf
mov
push
je
adc
movsb
pop
fst
outsl
mov
aad
ret
orb
sbb
ffree
pop
add
mov
in
fnsave
adc
jl
mov
shl
arpl
cmc
jns
sbb
cld
mov
mov
outsb
mov
ret
fsts
xor
scas
shlb
or
pushf
push
sub
hlt
int
fwait
sbb
push
push
sbb
jge
xor
and
mov
cmp
sahf
scas
mov
push
jge
out
stc
adc
xor
jb
jae
ss
or
or
inc
dec
adc
aas
jne
pop
aas
adc
into
or
jle
mov
ret
xor
or
les
dec
shlb
sub
push
xlat
xchg
andw
repz
cmp
hlt
imul
test
mov
nop
or
movsb
inc
cwtl
jge
andb
sub
dec
pop
mov
jnp
or
inc
cmp
aaa
scas
nop
sbb
and
loope
or
notb
out
mov
les
aad
pop
je
inc
popaw
and
mov
add
inc
negl
testl
scas
lds
sbb
add
jbe
jnp
dec
insl
popa
iret
movsb
lods
rcr
mov
ljmp
rorb
dec
mov
lret
sbb
cmp
pop
test
xchg
sbb
cmp
in
addr16
jmp
xor
lods
andl
inc
xchg
add
shll
ja
lcall
cs
cmp
pop
popf
xor
int
add
cld
movsb
ds
cld
push
or
psllw
cmp
pop
jecxz
cmp
push
jbe
bound
jb
arpl
and
negl
cld
std
test
sbb
dec
es
sbb
test
addl
add
loop
push
rcrb
out
es
push
lea
sub
cmp
test
cwtl
ret
gs
int3
ds
sbb
das
fdivp
test
test
lds
lock
jmp
je
sub
aaa
popa
pop
outsb
rcrl
aas
adc
mov
pop
push
sbb
stc
jns
lods
jae
xlat
add
mov
in
inc
cmpsb
adc
imul
ds
and
or
pop
pop
or
cmpsb
dec
xchg
sub
sub
cmpsl
jns
jge
call
ss
dec
fistpl
push
inc
pop
jmp
jmp
sub
cmp
push
dec
push
mov
pop
sub
inc
push
adc
sbb
lds
cmp
and
pop
fisubl
mov
ret
mov
popf
loop
or
pop
dec
mov
fbld
push
repz
int
push
jno
mov
add
in
mov
icebp
loopne
in
mov
sar
repnz
jnp
push
push
sub
adc
jb
jb
lods
sub
decb
cmp
aaa
push
testb
mov
stc
shrb
dec
jbe
in
add
mov
mov
fs
pop
mov
insb
call
pop
xchg
sbb
in
mov
ret
pop
arpl
mov
cmp
push
in
insl
dec
sti
iret
mov
xor
sar
push
out
sbb
mov
and
adc
imul
mov
ja
movsb
push
mov
bound
call
mov
xchg
sub
xor
es
into
mov
push
xor
sbbl
dec
push
pop
inc
lock
into
rcll
mov
dec
cld
in
mov
add
xchg
inc
das
mov
inc
mov
js
sub
add
cli
out
cld
cmpsb
sub
mov
in
or
pop
arpl
out
jmp
mov
pop
sbb
pop
js
cmp
clc
inc
jl
test
imul
lahf
testl
daa
dec
das
dec
jns
out
dec
mov
sub
jp
xchg
cld
mov
adc
and
adc
std
addr16
popf
les
cmc
enter
sbb
jmp
and
jne
xchg
nop
mov
jno
sti
idivb
loop
cmc
cmp
iret
jmp
or
popa
cmc
push
shlb
add
cwtl
sub
push
aad
in
xchg
jp
push
cltd
jnp
rol
pop
xlat
addr16
add
xchg
jmp
lea
mov
leave
xor
mov
cmp
mov
cmp
pop
mov
mov
daa
ljmp
stos
aam
pop
jne
pop
addr16
push
mov
and
pop
imul
or
add
mov
call
sub
sub
dec
cmp
cmp
jmp
inc
fwait
mov
jg
inc
xchg
sarl
add
sub
mov
movsl
push
add
jnp
pop
sbb
adc
sub
stos
sbbb
lahf
inc
stos
in
sub
and
arpl
jno
push
sbb
aad
xchg
test
xchg
xor
into
in
lret
lcall
mov
cmp
mov
xor
and
les
aaa
enter
inc
push
aam
stos
cmpsb
insl
sahf
and
jne
push
cld
mov
mov
push
aaa
xor
daa
fstl
mov
xor
ss
aas
jbe
dec
mov
clc
mov
pop
inc
ss
inc
xor
lds
or
push
pop
sub
inc
leave
scas
jo
out
insb
sbb
out
jb
iret
and
mov
sbb
test
daa
lods
mov
aad
pop
std
push
push
jmp
jno
sub
cmp
faddl
mov
mov
mov
js
and
mov
mull
cmpsl
icebp
pop
sub
xlat
mov
push
lret
addr16
sbb
push
ss
popf
fwait
aad
sahf
cmp
jmp
xchg
pop
sbb
fidivl
push
rcrl
xor
mov
dec
jle
loopne
inc
xchg
cmp
push
testb
inc
out
xor
daa
mov
and
sbb
fisttpl
imul
add
test
outsb
leave
int
gs
and
mov
in
imul
push
xchg
pushf
fsubrs
std
adc
xchg
xor
sub
lahf
or
xor
cmpsl
arpl
adc
mov
bnd
push
iret
and
ret
jp
fucomp
out
addb
gs
adc
sbb
test
sbb
cmp
mov
xor
jge
fwait
notl
add
in
sub
call
lea
dec
mov
adc
lahf
das
inc
jg
jmp
daa
rcll
jl
mov
or
push
jecxz
mov
dec
in
clc
cmc
cmp
add
mov
and
pop
mov
push
and
mov
shll
addr16
movsl
dec
std
es
ljmp
test
test
sarl
scas
xchg
stos
imul
jmp
pop
mov
subb
dec
jne
leave
xchg
ja
adc
sbb
scas
cli
les
cmp
inc
ret
popl
cmp
in
mov
in
fldcw
imul
out
ja
jle
ret
xchg
sbbb
loopne
inc
xchg
xchg
ret
cmp
sub
mov
movsl
ret
fbstp
loope
es
dec
mov
jmp
dec
sub
call
insl
sbb
adc
sarb
daa
adc
adc
pop
xchg
adc
out
enter
xor
test
fwait
shll
jle
and
mov
sub
jb
sahf
jl
stos
dec
or
lods
jl
pusha
or
jecxz
or
out
movsb
lret
jl
sub
inc
lahf
pop
iret
cli
inc
ss
pop
inc
pop
outsb
pop
xchg
out
shll
rcrl
js
cmp
ja
mov
sub
or
insb
adc
lods
mov
mov
test
jl
or
mov
bound
sbb
xor
movsb
imulb
loopne
lods
pop
nop
inc
insb
out
sbb
in
popf
mov
shl
insl
aaa
insb
jns
xlat
and
mov
add
cmp
mov
scas
mov
lret
xchg
mov
aad
sub
stc
mov
sub
pop
fsubrl
insl
in
cmpsb
or
push
inc
fdivrl
cmp
push
jecxz
aad
inc
lea
mov
xchg
sbbl
movsb
xlat
cmp
cmp
shr
cmp
call
jne
cmp
mov
and
in
push
mov
mov
and
mov
std
inc
cmc
mov
mov
adc
and
cmpsb
lea
dec
jecxz
in
sub
mov
pop
cli
xchg
pop
sub
jno
outsb
adc
inc
sbb
loopne
inc
imul
sbb
lret
shrb
in
jmp
inc
or
and
mov
inc
repnz
js
cmc
dec
frstor
out
dec
clc
insb
sbb
adc
pop
mov
mov
xchg
pushf
cmpsl
insl
insb
jl
pop
mov
pop
xor
mov
jno
push
scas
push
pop
outsl
mov
out
in
outsb
add
in
xor
test
jp
lock
mov
xchg
mov
xchg
cmpsl
sub
sbb
cmp
cs
shlb
dec
outsb
mov
rolb
insl
cmp
nop
push
push
scas
sbb
pop
movsb
xor
add
xchg
rcrb
mov
cmpl
fxch
adc
cmp
and
mov
xor
sti
mov
mov
cmc
and
hlt
xchg
fs
push
dec
push
sbb
aas
ja
push
jno
jae
push
daa
mov
xchg
loopne
out
dec
frstor
push
leave
in
ss
mov
mov
pop
fisubs
bound
repz
pop
test
popa
repnz
sub
inc
stos
sbb
jecxz
xchg
ret
push
icebp
jo
nop
sbb
call
loope
mov
test
pusha
and
and
mov
mov
js
xchg
mov
stos
adc
cmpb
xchg
in
popf
mov
push
or
push
rcll
mov
mov
jbe
scas
test
jbe
insl
or
popa
mov
inc
fsubrs
sub
in
test
test
jecxz
xor
imul
xor
aam
push
and
jae
and
fiadds
xchg
pop
int
fiadds
or
jns
test
jmp
xchg
sbb
addr16
xchg
mov
dec
mov
orl
adc
xchg
pushf
mov
add
jl
or
rcrb
mov
push
and
and
movsl
fldenv
ss
fildll
imul
imul
ja
rcrl
cmp
addr16
and
inc
xor
sbb
adc
in
jns
or
fldcw
pop
in
sub
xor
jmp
jns
lret
inc
or
xchg
or
and
test
out
mov
lods
mov
xchg
pop
sub
divps
lds
out
jle
jnp
fwait
in
les
mov
in
idiv
mov
pusha
pop
out
sbb
aaa
jno
int
fwait
mov
mov
mov
rcrl
xchg
orl
mov
adc
ficoml
xor
into
add
sbb
int3
jbe
leave
xchg
loope
movsl
cmp
xor
lods
jge
outsb
jp
gs
cwtl
cmc
sub
decb
add
fwait
iret
andl
mov
mov
cmp
out
std
daa
jmp
js
loopne
sub
pop
cmp
sbb
dec
jl
sbb
add
sub
jl
stc
stos
sbbl
in
mulb
xchg
roll
out
aaa
sub
sti
shrb
pop
dec
jle
sbb
movsl
jnp
insb
fs
xor
dec
push
mov
cmp
adc
sti
and
fimuls
jno
inc
cmpsl
movsl
ret
cmp
adc
inc
jns
sti
shr
inc
add
cmp
rcr
test
rcrl
popf
inc
roll
mov
jno
add
aad
das
cmp
shrl
mov
xchg
pushf
rcrl
mov
loopne
jne
or
inc
pop
mov
lcall
sti
push
dec
into
out
or
jmp
int
push
fbld
lret
cs
add
sarb
adc
out
or
pop
and
pop
ja
inc
negb
push
and
insb
pop
xchg
and
movsl
xor
ret
pop
mov
adc
test
add
xor
pop
xchg
xchg
mov
ficomps
fdivs
test
inc
xchg
and
cmpsb
loop
xchg
aaa
aad
loop
sti
mov
std
insl
int3
rorl
scas
push
pop
and
data16
insb
imul
mov
push
dec
scas
rcrb
pop
int
inc
in
pushf
mov
scas
dec
and
scas
inc
mov
fstpl
test
sar
sub
sbb
adc
jge
ja
and
aam
add
push
cmp
mov
inc
adc
gs
outsl
pop
in
or
aas
in
fldlg2
and
int
idivl
nop
inc
shlb
sbb
inc
dec
pop
ret
jns
push
jnp
mov
out
pop
movsb
mov
and
or
sub
jl
mov
jl
lahf
shlb
mov
test
clc
in
lcall
jecxz
js,pn
push
ret
leave
adc
xor
add
mov
scas
inc
loope
mov
and
jbe
ret
clc
dec
sbb
or
xchg
cmp
stc
xor
xchg
inc
cmc
and
shrl
mov
mov
inc
sub
or
or
push
pop
pop
adc
sbb
test
in
ret
lds
cmp
pop
gs
xor
fldenv
xchg
cmpsb
sbb
cwtl
adc
mov
lret
mov
ljmp
mov
out
jmp
push
loope
pushf
testb
sbb
mov
xchg
jecxz
fwait
push
adc
lds
xor
cli
pop
repz
mov
pop
sbb
cld
mov
je
xchg
outsb
pop
pop
insb
stos
push
and
inc
pop
and
sbb
jbe,pn
sub
ljmp
cmc
clc
jb
adc
int
lock
adc
lds
dec
mov
sbb
add
movsl
pop
in
pop
mov
mov
out
add
mov
pop
push
push
xchg
aam
add
out
xor
mov
xor
xor
lret
ja
outsb
mov
dec
mov
sub
pop
sbb
insl
loopne
and
cmp
test
sub
int
scas
add
out
dec
insb
cmpl
jp
fs
mov
test
jo
mov
sub
mov
int
mov
inc
inc
lock
je
andl
sub
pop
fidivrs
je
sub
fsubr
inc
fstpl
es
clc
xchg
pusha
push
sub
loope
pop
shlb
xchg
dec
mov
adc
pop
cs
out
mov
pop
and
into
dec
adc
and
sub
jecxz
sub
sbb
rclb
pushf
das
mov
mov
cwtl
mov
or
xchg
pushf
jb
dec
int3
lcall
call
je
and
test
aas
fstp
mov
mov
fimuls
xchg
push
and
mov
xchg
adcl
addl
leave
inc
xchg
mov
outsb
xor
lcall
inc
aaa
push
fdivrl
dec
cmp
punpckldq
test
push
adc
aas
icebp
mov
mov
inc
call
jne
cmp
in
jns
sbb
lods
and
inc
outsl
adc
sti
cwtl
ret
add
jp
ja
cmpps
repz
int3
add
mov
cli
ja
loop
xor
pop
ds
push
pop
rorl
xor
xchg
sub
movsb
mov
jbe
push
cmp
mov
add
xchg
xchg
cmp
sbb
or
mov
call
cmpb
cmp
sbb
lea
xchg
cmpsb
fs
test
movsl
lds
outsb
push
xor
push
popf
add
cltd
cwtl
ljmp
push
mov
imul
adc
mov
lcall
out
mov
fisubrs
cmc
movsl
add
jmp
stos
ret
fimull
arpl
dec
pop
hlt
push
pop
push
scas
adc
loopne
sub
aam
test
sbb
pop
inc
in
mov
xchg
int
vprotb
jl
add
js
pop
adc
ds
popa
and
rolb
daa
rcl
shlb
repnz
jle
add
sarl
or
xchg
cmp
das
lods
aad
push
xor
aam
out
mov
mov
pop
sti
sbb
repz
dec
push
das
inc
lea
je
imul
adc
adc
shr
and
mov
mov
lods
in
shll
adc
cmp
fstpl
je
loope
push
lcall
dec
frstor
dec
sbb
imul
sbb
bnd
cmp
inc
push
pop
mov
aad
andb
or
outsb
scas
leave
fcoms
push
scas
inc
mov
sbb
fs
pop
enter
jbe
push
fildl
push
xor
pushf
mov
lock
xchg
cmp
jno
aad
shrl
cmpsb
adcl
mov
mov
dec
xchg
lret
mov
test
push
sahf
mov
cwtl
pop
repnz
sbb
mov
xor
cmc
ficoms
fdivs
insl
fwait
pushf
jl
popf
jp
rcll
ja
mov
inc
cmp
sub
mov
into
cltd
hlt
aad
xor
in
sbb
push
lret
shrb
mov
xchg
in
ss
stc
divb
mov
push
repnz
add
out
pop
and
or
push
sbb
inc
xchg
loopne
leave
loopne
sarl
dec
je
loopne
ret
test
pop
inc
push
stc
pop
fwait
or
mov
rcr
lret
sub
cmp
or
in
push
add
pop
lcall
mov
cmp
jmp
enter
das
int
push
mov
jb
cli
outsb
sbb
cltd
ja
jmp
subl
sbbl
or
mov
pop
or
rcrb
pusha
and
add
pop
lcall
imul
cli
push
pusha
imul
cmp
clc
in
adc
sbb
fmull
mov
movsl
add
inc
pop
jmp
scas
sub
and
or
jns
mov
dec
inc
and
lcall
je
dec
dec
stos
movsl
cmp
scas
pop
inc
and
cmp
sub
mov
cmpsl
fsubs
jp
arpl
sti
adc
sti
sub
lcall
push
sbb
pop
mov
clc
adc
mov
movsl
jne
imul
sub
pop
notb
sub
shrb
iret
lret
ja
add
in
mov
lahf
xor
push
cmp
scas
xchg
aam
adc
aam
loope
sub
mov
and
or
stos
popa
or
dec
sbb
add
es
sti
adc
mov
aam
add
pop
inc
repnz
leave
jbe
mov
sbbb
xlat
test
inc
sarb
jbe
inc
xor
stos
orl
mov
ds
jb
pop
xor
std
dec
je
adc
shlb
lea
loopne
xor
daa
add
cmp
jbe
dec
retw
mov
dec
daa
lods
aad
mov
repnz
adc
fs
mov
pop
dec
test
ja
bound
mov
and
arpl
jg
xchg
sti
sub
sti
test
mov
inc
sahf
cmp
cmc
mov
pop
xor
push
xchg
bound
popf
fdivl
fsubrs
pop
in
cmp
push
repnz
sub
cmpsb
vpunpcklwd
mov
mov
push
mov
mov
pop
ror
mov
shl
mov
loope
das
jmp
mov
inc
cli
call
xchg
test
pop
add
jecxz
fistps
jg
lret
dec
adc
neg
testb
dec
mov
sbb
push
xor
les
outsl
adc
xchg
xor
adc
push
mov
pop
push
pop
call
sarb
push
movsb
xor
inc
xchg
rclb
pop
mov
fstps
push
nop
test
push
cmp
sahf
sbb
mov
cltd
push
cmp
pop
and
xchg
sbb
dec
and
sub
cmp
in
mov
stc
pop
sti
push
negb
push
cmp
cmc
movsl
popa
aam
in
sar
in
mov
leave
or
sub
inc
mov
fldt
sar
and
orl
cmp
cmp
das
mov
icebp
and
push
mov
gs
xchg
popf
sbb
sub
pop
in
dec
test
cmpsl
or
mov
pop
stos
jb
cmp
fnsave
and
stc
decb
and
movsl
ds
inc
cld
push
mov
sbbl
mov
lock
adcl
mov
call
inc
bound
into
orb
cmp
loop
lock
mov
clc
fistpl
and
push
hlt
enter
aad
iret
ret
sbb
mov
mov
fildl
jbe
bound
jne
cmp
mov
inc
dec
inc
mov
adc
jmp
jge
xor
jl
popa
push
mov
loope
push
adc
iret
inc
mov
push
cs
sbb
adcl
mov
pop
push
and
xchg
call
pop
jno
cld
bound
adc
loop
inc
shrb
fiaddl
mov
sub
or
inc
cmp
cs
addb
lods
leave
mov
sbb
or
lods
ss
xchg
cmpsb
std
pop
subl
pop
popa
lods
pop
jne
add
pop
fwait
out
push
dec
push
mov
sbb
pusha
push
adc
mov
mov
add
adc
cli
movsl
aaa
lahf
clc
movsb
mov
dec
pop
mov
push
push
fistpl
stos
out
xchg
dec
aam
in
mov
sub
mov
sbb
fldcw
nop
clc
outsb
sarb
test
or
sub
xor
and
js
dec
cmp
sbb
and
enter
jg
shl
add
cvtps2pd
jns
jae
aam
xchg
xor
lods
fstpt
xor
mov
jae
aad
jbe
or
shrl
inc
cmpxchg
sub
and
out
sbb
pusha
jge
repnz
dec
xor
flds
es
push
inc
push
jae
das
add
je
in
push
divb
push
in
inc
es
xor
jmp
out
ret
cmp
and
add
and
iret
dec
mov
cmp
pop
flds
push
ret
add
fsubs
mov
mov
or
jo
push
pop
or
inc
cmp
out
sub
cmp
aaa
stos
gs
scas
mov
ljmp
push
scas
jl
lock
pushf
mov
sti
jo
mov
icebp
pop
adc
sub
lock
jae
push
mov
push
sub
add
bound
fbstp
repnz
add
xor
jns
inc
xor
sti
mov
pop
mov
or
fsubr
fs
jo
sub
in
xchg
pop
dec
mov
cmpsb
pop
push
repnz
sub
inc
jg
test
or
ret
loope
pop
mov
je
mov
orb
dec
dec
cmp
loop
test
add
push
add
stos
inc
imul
pop
arpl
imul
cmp
pop
jb
bound
cld
je
cmp
outsb
in
lods
pushf
inc
push
cmp
sbb
and
cmp
xor
movsb
sbb
imul
dec
in
hlt
cli
push
adc
orb
rcrb
push
popa
daa
jmp
mov
mov
loopne
pop
sbb
mov
xchg
or
mov
outsb
aad
and
push
mov
cmp
rclb
fisubrs
ss
adc
push
dec
inc
pop
fidivl
mov
mov
push
hlt
dec
push
push
sbb
fidivrl
pop
xchg
fcmovu
sub
sub
cmpl
movsb
lahf
insb
test
daa
and
insb
aad
mov
mov
cmp
out
daa
pop
test
in
xlat
mov
jo
sbb
inc
sbbl
cltd
adc
lahf
out
movsb
stc
sub
push
imul
movsl
test
sbb
aad
ret
outsb
and
shll
dec
or
movsb
dec
loopne
test
shl
mul
pop
pop
mov
jb
or
mov
lcall
mov
cs
or
or
mov
stos
sbb
inc
and
test
addr16
mov
add
data16
mov
pop
lret
jo
sub
out
aaa
or
mov
adcb
movsl
div
dec
mov
xor
shrl
and
pop
stos
cmp
xor
push
test
push
ret
mov
ret
jmp
loop
jo
jmp
hlt
mov
cmovb
jo
fstpt
or
sub
sbbb
jnp
in
fnstcw
int
jno
adc
lds
call
test
jo
outsb
xor
and
add
push
aam
adc
ror
leavew
call
xor
push
adc
bound
outsl
pop
and
ds
aam
movsl
cmpxchg
ljmp
fidivs
cmpsl
push
into
xchg
mov
xor
nop
out
jmp
lods
mov
pop
fdivr
jno
or
sub
add
sahf
ret
adc
lea
aad
dec
mov
in
inc
xchg
rclb
lods
pop
push
int
ret
or
not
cmpsb
add
aas
popf
es
mov
div
test
repnz
inc
mov
or
sub
mov
repnz
insl
insl
enter
repnz
call
sbb
mov
cmp
and
jmp
xchg
shr
aas
loope
jns
loopne
bound
push
sbb
mov
aas
push
call
push
sub
dec
dec
loop
push
add
call
js
mov
sbb
mov
gs
jbe
jmp
sbb
ss
movsb
movsl
cs
xor
imul
fadds
jbe
push
or
popa
lods
jmp
inc
rclb
aad
and
jmp
add
add
outsb
scas
xchg
xchg
es
or
or
fiaddl
fldenv
outsl
mov
and
loop
lret
imul
jg
mov
incl
dec
cli
pushf
aas
je
sti
loope
sbb
sbb
rcrl
into
mov
jae
jl
jecxz
lods
xor
aad
and
aaa
jmp
inc
and
jbe
repnz
pop
or
cmp
xlat
xchg
mov
sub
jns
rcr
sahf
mov
sub
xor
lret
lea
or
outsb
bound
sub
mov
mov
xchg
dec
and
jns
out
xchg
mov
dec
adc
sbb
rolb
in
cmp
je
jge
mov
data16
push
mov
xor
mov
pop
dec
test
xor
sub
cmp
fidivrl
lret
lea
push
sbb
repnz
outsl
sbb
adc
pop
adc
orb
and
jb
or
mov
in
and
sti
and
cmp
sbb
sub
mov
mov
adc
mov
lret
ds
pop
mov
xor
jecxz
lahf
push
cwtl
push
cld
lds
inc
jg
cld
outsb
pop
pop
dec
sbb
mov
scas
nop
in
daa
loope
aad
shll
aad
inc
sub
icebp
dec
inc
push
data16
inc
lods
jmp
pop
out
leave
repz
lcall
imul
rcr
inc
fbstp
adc
pop
loope
aaa
insl
addr16
jmp
jl
sbb
or
lret
mov
adc
imul
stos
in
lock
sti
ret
loope
clc
sar
outsb
mov
sub
test
imul
adc
jns
sbbb
loopne
leave
inc
in
fsts
test
mov
cmp
imul
fwait
lods
pop
xchg
cmovno
stos
push
ds
or
mov
dec
dec
mov
jae
and
push
adc
rorl
stos
stc
lahf
inc
ret
int3
sub
cmp
add
sahf
bound
or
xchg
sub
pushf
mov
cmp
cmc
xor
jg
xchg
out
and
test
popa
lock
dec
cmc
fidivrl
lods
out
adc
jle
sbb
cmp
xchg
filds
loope
mov
lods
cwtl
xor
outsb
sub
xor
addr16
mov
push
repz
xorb
add
adc
inc
pop
push
mov
ret
jl
imul
push
das
stos
int3
jnp
jmp
jno
aad
iret
push
enter
lods
adc
xor
repz
xchg
and
outsl
cmp
fdivl
je
data16
xor
dec
inc
mov
mov
fnstenv
out
mov
out
adc
fwait
nop
pop
outsl
xor
out
out
mov
imul
in
xor
repnz
mov
dec
int3
cmpb
mov
lcall
add
int3
mov
enter
jecxz
fnsave
dec
das
push
dec
inc
frstor
sti
push
mov
mov
gs
in
int
popa
sub
test
pushl
stos
inc
add
xchg
flds
add
or
add
push
xchg
sub
or
sbb
mov
xchg
in
fmull
fnsave
or
outsl
xchg
inc
movsb
and
into
and
sub
mov
add
shrb
es
mov
test
cltd
jecxz
jg
decl
inc
xchg
jbe
push
das
ss
dec
cmp
cld
sub
popa
dec
adc
jb
sub
cmc
push
aaa
mov
and
mov
and
push
adc
outsb
sahf
jo
leave
xchg
mov
mov
sub
or
into
push
cs
repz
mov
pop
arpl
fisubrl
xor
adcl
dec
cmp
xor
or
xchg
dec
adc
lea
xor
cli
bound
push
iret
ret
and
xchg
addl
sub
xchg
fidivs
lret
push
imul
xchg
mov
xchg
jns
mov
dec
jne
and
mov
sbb
xchg
xor
adc
push
lret
out
fiadds
repnz
cmp
test
mov
sub
js
imul
xchg
int3
ljmp
dec
add
mov
pop
fcomps
mov
add
cmp
xor
fldenv
xor
ljmp
in
cmc
xlat
cmp
sub
pop
sbb
lods
dec
cmp
cmpsl
outsl
add
leave
dec
and
in
push
mov
sub
pop
jg
imul
inc
cmp
lock
push
mov
in
add
pop
rcl
ljmp
in
lock
push
xor
enter
inc
testb
sti
pop
or
sbb
mov
xor
push
mov
ja
cli
cmove
gs
arpl
test
std
sub
pop
pop
and
fmulp
push
in
xchg
pop
and
sub
fdivrp
sub
cs
daa
xor
aad
or
cwtl
sub
js
push
xchg
das
sarl
xchg
in
daa
adc
repnz
scas
imul
icebp
jb
push
xor
jg
int
je
xchg
inc
pop
daa
lahf
mov
xor
cmp
jmp
push
int3
mov
pop
adc
mov
pop
fsubr
movsb
and
cmp
adc
push
push
lods
sub
xchg
lret
cmpsb
adc
dec
jl
mov
lea
sub
or
orb
in
mov
fldcw
xchg
inc
push
jnp
push
push
jns
or
inc
sub
mov
fisubrs
lds
xchg
ror
pop
sbb
add
cli
and
dec
loopne
pop
and
into
xlat
cmpsb
add
add
pop
imul
pop
sbb
xchg
fisttps
mov
push
iret
pop
movsb
xor
movsb
mov
popw
or
cmp
pop
bound
xor
lods
shrb
jbe
movl
mov
mov
push
xchg
call
inc
pop
test
clc
mov
mov
lods
xchg
data16
stos
jmp
adc
push
or
int
push
sub
sub
jo
sub
popf
stc
push
ds
fs
sbb
dec
mov
bound
cmc
mov
pushl
dec
push
cli
pushf
add
push
pusha
lcall
sbb
mov
in
lahf
test
stos
xor
in
iret
push
mov
push
imul
sbb
push
popa
cmp
fisubrs
adc
in
test
fidivrl
mov
push
sahf
pop
mov
test
dec
inc
rcr
mov
mov
mov
push
jp
pop
fsubrl
fnstsw
add
aad
rclb
mov
or
mov
mov
mov
cs
sub
push
dec
cmp
jne
in
sub
test
or
clc
fisubl
mov
mov
push
ds
inc
sub
bound
addr16
lret
pop
dec
jp
fisttps
rcrl
pop
lods
sbb
mov
mov
fsubs
jb
fldenv
or
and
shl
mov
jno
arpl
fcoms
jb
fiadds
xor
adc
xlat
dec
imul
addr16
inc
xorl
mov
mov
das
test
cltd
xor
ja
xor
push
jo
mov
xor
pop
cli
dec
mov
int3
adc
lret
jns
jl
mov
fdiv
test
fsubl
xor
lret
aaa
ljmp
je
scas
or
cmpb
xchg
cltd
scas
movsb
out
adc
das
imul
jl
push
sbb
mov
fldl
jns
pop
jge
inc
mov
adc
sbb
enter
xchg
jne
or
mov
gs
das
cmp
pop
or
in
mov
mov
cli
or
add
pop
lea
orl
sarb
insb
dec
insb
cwtl
lods
repz
cmpsl
mov
lods
bound
xchg
mov
cmc
jle
lahf
jecxz
test
push
lock
adc
mov
xchg
adc
das
filds
lods
aad
imul
mov
adc
cltd
js
jle
xchg
dec
lahf
popf
dec
sub
es
cli
out
cmpsb
mov
add
orb
lods
stos
cmp
adc
cld
and
sti
repnz
lods
mov
shrl
jmp
and
pop
test
adc
xchg
nop
dec
xor
dec
mov
int
testl
inc
pop
cmpsl
xor
jae
xor
into
out
jbe
sub
pop
or
popa
push
mov
lret
ds
pop
mov
cmp
xor
cmpl
dec
sub
cmp
sbb
std
outsl
xchg
push
lea
addb
cltd
je
pop
sub
icebp
andl
push
or
lock
sbb
out
mov
jne
adc
add
fs
xor
adc
dec
testb
lock
mov
fs
mov
inc
mov
push
pusha
pop
rcrl
rclb
and
mov
into
mov
mov
fimull
push
int
lods
int
xor
sub
jle
push
and
inc
je
pop
stos
push
std
loope
outsb
popf
stos
xchg
mov
nop
add
orl
cwtl
rorb
in
inc
mov
dec
push
or
int3
add
push
imul
add
cld
cmp
sbbb
iret
int3
mov
push
les
sbb
sub
lods
pop
imul
imul
std
lcall
in
push
fs
popa
fwait
mov
cmpsb
aaa
xor
fisttps
ja
andb
push
xchg
xor
adc
imul
ja
ss
fadds
jnp
test
nop
add
lods
or
dec
dec
dec
pop
jo
pop
jecxz
cli
pop
push
xchg
insb
fcoms
rcr
in
test
test
shll
into
cmp
add
mov
gs
in
push
or
jo
mov
stc
cli
xchg
mov
frstor
xchg
jmp
cli
cmp
fdiv
xor
mov
xor
cmpsb
jae
adc
xor
jnp
mov
or
jg
sub
testb
xor
xchg
jbe
mov
xchg
mov
pusha
stc
decl
test
je
push
test
jae
pop
call
pop
scas
mov
sub
je
nop
push
push
cmp
push
xor
inc
sbb
cmove
pop
adc
in
dec
jne
iret
in
mov
fistpl
call
fdivp
mov
repnz
stc
mov
sbb
pop
sbb
cmc
push
adc
jecxz
pop
scas
adcl
mov
cmp
iret
dec
mov
xchg
aam
out
gs
or
sbb
pop
xlat
dec
pop
popa
pop
mov
dec
stc
imul
lock
xor
fistpl
pop
cltd
sbb
lcall
xchg
mov
leave
repnz
lods
jae
xor
dec
add
pop
mov
test
scas
pop
jmp
jb
mov
pop
dec
xchg
xchg
jns
cwtl
clc
add
outsb
pushf
cmp
idivb
lahf
push
out
adc
addl
push
xor
js
fsubrl
adc
push
dec
add
leave
xor
add
xor
xor
mov
in
or
lea
cmpsl
dec
push
pop
add
or
rol
dec
fidivrs
sub
jnp
test
fidivrs
adc
push
aad
ret
mov
push
xchg
sbb
push
dec
mov
mov
mov
xchg
ficompl
fcmovu
nop
inc
stos
and
rol
aaa
cmpsb
dec
bound
in
call
add
jno
movsb
cld
cmp
jecxz
xchg
popf
js
xor
jo
mov
je
sbb
in
jecxz
dec
sbbl
mov
fs
cli
push
ljmp
mov
rcr
and
mov
mov
ret
call
dec
push
out
mov
push
ss
repz
fld
out
arpl
or
xlat
imul
cmc
sti
fildll
inc
jne
dec
stc
mov
or
shll
adc
mov
iret
sbb
dec
mov
mov
xor
es
daa
mov
int
lds
xchg
leave
xorb
out
cmp
std
sbb
xchg
or
clc
cmp
push
sbb
sahf
push
mov
scas
into
xor
fwait
lods
and
fbld
push
mov
cmc
aad
call
popa
dec
xor
pop
mov
mov
insb
sub
out
jne
fisubs
cli
icebp
sub
or
dec
loope
mov
inc
cmpsb
fisubrs
add
fists
cmp
rclb
or
cmp
and
pop
shlb
out
mov
lret
pushf
inc
sub
jno
les
push
mov
adc
xchg
pop
push
lods
scas
jb
leave
or
lea
cmc
cmp
pop
iret
sub
inc
jnp
or
mov
adc
cmp
adc
loope
lcall
and
pop
xchg
pop
adc
fwait
push
mov
loop
in
inc
xlat
sahf
xchg
push
xchg
repz
or
jecxz
and
imul
lret
jno
inc
cltd
shll
xor
js
xor
in
cwtl
add
cltd
lcall
fdivrs
aaa
out
xchg
and
ret
ljmp
lret
pop
enter
popa
push
jo
pop
mov
loopne
mov
push
and
xchg
scas
pop
sarl
jg
sbb
mov
subb
jnp
das
xor
mov
xor
insb
aas
test
fs
fdivs
dec
ds
lret
fidivs
mov
ds
loope
movsb
enter
mov
popf
insb
test
int
leave
test
nop
clc
inc
adc
inc
xor
adc
xchg
sub
ffree
sub
sbb
xchg
sub
imulb
lret
add
push
sarb
dec
loope
aas
in
iret
mov
rcll
mov
in
jecxz
clc
popa
jge
dec
shr
xor
ret
enter
bound
ret
insl
and
add
adc
xor
add
shlb
push
call
shll
repnz
push
sbb
mov
fists
out
mov
sub
sbb
mov
jb
pop
cmp
push
push
cmpsb
out
and
mov
leave
es
loop
lock
pop
sbb
mov
cmp
sub
pop
lret
subl
cmp
inc
pushf
add
and
loope
in
imul
cmp
xor
inc
or
xor
aas
mov
add
inc
nop
fdivrl
aad
popa
call
test
dec
jge
rclb
mov
push
jmp
into
fdiv
or
inc
fisubl
ret
shll
jle
ffreep
sub
push
sbb
testl
flds
xor
sub
jp
aaa
nop
adc
js
test
mov
mov
jg
ja
sbb
pusha
ret
inc
cltd
push
pusha
loopne
fstps
pop
mov
scas
je
cmp
nop
scas
sub
lahf
adc
dec
pop
jmp
cltd
insl
dec
leave
icebp
shrl
in
mov
roll
js
loopne
and
pop
add
cld
ret
scas
hlt
add
out
pop
lcall
mov
xor
cld
cmc
xchg
add
cs
out
outsl
fsubl
outsb
push
mov
std
pop
xlat
add
pop
mov
xor
daa
sti
adc
mov
out
pop
aaa
xchg
int3
jne
arpl
dec
subl
sbb
inc
ljmp
inc
ret
insl
aaa
cmp
push
fisttpl
leave
sub
pop
xor
sub
jno
cmpsl
ljmp
popa
sbb
aas
mov
outsb
sub
sub
dec
mov
xlat
add
js
mov
xlat
jge
jae
sbb
iret
les
mov
mov
xor
mov
push
and
nop
clc
out
fistl
push
add
sub
je
lahf
loop
in
add
xor
jbe
push
dec
cmp
xchg
in
insb
fstpl
mov
push
pop
mov
sbb
sbb
inc
sbb
xchg
aad
lods
stos
pop
adc
idivb
insl
subl
dec
add
loope
or
out
and
jno
jns
jae
sbb
ja
arpl
sub
adc
sbb
pop
stos
xchg
fists
lods
sub
pusha
adc
cmp
shl
loope
jl
xchg
imul
or
sbb
dec
cmpb
mov
aas
xchg
mov
mov
adc
adc
pushf
arpl
stos
pop
inc
hlt
and
inc
cld
fbstp
movsb
aad
mov
jge
add
cmpsb
rcl
mov
icebp
add
xchg
and
and
cmpsb
xlat
ljmp
mov
dec
pop
jnp
ret
xchg
sbb
jnp
or
xor
mov
jl
push
aam
or
lret
in
ljmp
mov
cltd
adc
mov
js
mov
pop
adc
andb
stos
loop
push
xchg
or
cmpsl
or
rcl
stc
push
or
icebp
jns
insb
xor
push
lods
mov
lds
sahf
scas
cltd
movsb
dec
push
pop
sbbl
clc
jb
or
push
adc
jne
cmp
xchg
mov
xor
iret
hlt
sbb
mov
dec
adc
and
decb
into
or
jns
ffree
add
jmp
mov
fs
je
sti
and
shlb
jle
or
push
fbstp
mov
sbb
and
fcmovnu
in
popa
or
daa
inc
js
fidivs
out
lods
iret
js
hlt
pop
sbb
stc
pop
bound
into
dec
push
das
push
out
xor
and
enter
jns
sbb
cwtl
dec
inc
bound
aas
test
int3
dec
mov
arpl
sbb
aas
dec
arpl
fsts
push
lcall
mov
dec
jnp
loop
fadd
cmpsb
cwtl
mov
pop
sub
push
rcrl
rcl
lock
rcrl
sbb
imul
push
xor
push
pop
dec
fsts
cmp
jle
insl
cmp
ret
mov
sub
mov
test
movsb
cmp
call
xchg
loop
mov
sbb
ja
and
pop
idivl
mov
inc
sbb
mov
mov
jmp
xor
cmp
cmp
xchg
inc
call
or
mov
cmp
lahf
imul
pop
pop
mov
movsb
mov
pop
mov
cmp
into
dec
loop
test
mov
leave
je
push
lret
adc
test
jmp
inc
fsub
xor
add
push
cmp
icebp
jle
sbb
cmp
rcl
mov
data16
mov
jmp
test
sub
pushl
pop
enter
icebp
jne
stos
push
repnz
pop
sti
lea
pushf
test
xchg
jge
pop
xor
add
pushf
pop
ds
testb
jp
or
test
clc
hlt
lahf
loopne
push
sbb
xchg
insb
add
jns
mov
ljmp
push
out
movsb
push
sub
movsl
in
pop
mov
xchg
or
icebp
gs
push
push
arpl
pop
or
mov
dec
adc
out
out
orb
outsl
scas
shr
cmp
ja
in
call
clc
push
adc
jne
jns
repnz
ljmp
push
and
fs
xchg
mov
jb
in
lret
imul
pushf
mov
pop
ss
mov
sub
fmull
cmp
stos
push
repnz
xchg
shrl
add
or
enter
repz
insb
cwtl
inc
pop
jne
pop
xchg
repnz
push
cmpsb
aad
stc
shll
data16
ficoms
sar
sub
or
fisubrl
xor
hlt
fdivl
imul
jge
sub
cmpsl
mov
popf
inc
sti
mov
push
jne
dec
inc
and
cltd
push
adc
and
push
outsb
mov
notl
scas
sub
or
dec
aas
stc
enter
loopne
sbb
cmp
icebp
cmp
dec
js
and
pop
scas
cmc
jmp
push
es
or
das
data16
jge
push
mov
lock
inc
ja
shlb
mov
xchg
jecxz
fmull
sbb
hlt
aas
push
or
add
mov
mov
inc
push
cmp
addr16
outsl
dec
xchg
jecxz
fnstenv
and
out
out
dec
stos
out
lret
push
cltd
xor
shrb
test
scas
aam
mov
xchg
aas
test
sti
and
mov
sub
pop
mov
popa
mov
aaa
mulb
lret
xchg
sbb
inc
test
xor
mov
stos
add
bound
and
and
xchg
or
cmp
pop
lcall
lock
cli
out
test
adc
or
cmp
and
inc
xchg
sbb
lret
sbb
gs
push
cwtl
shlb
addr16
lret
ret
sbb
add
arpl
jl
mov
pop
aad
pop
sub
mov
imul
pop
adc
mov
cmp
sbb
ljmp
dec
rcr
cmpsl
cli
sub
aad
add
movsl
sbb
sbb
lcall
movsl
out
dec
pop
xor
sub
dec
mov
adc
and
sahf
test
mov
fwait
hlt
cmp
push
insb
adc
push
and
inc
mov
cmp
rorb
xor
stc
sbb
xor
cmc
push
pop
mov
xchg
push
fistpll
out
sbb
sbb
fildl
fildl
popl
and
test
loopne
test
mov
and
mov
fwait
add
jmp
adc
repz
inc
movsb
scas
out
js
xchg
popa
mov
roll
outsb
mov
xchg
popa
jbe
fstpl
and
call
add
xor
lea
xor
mov
das
inc
das
pcmpgtw
mov
imul
jnp
dec
enter
insl
lcall
jae
imul
icebp
movsb
bound
bound
divb
fisttpl
or
mov
xchg
movsb
imul
jg
out
std
movsl
push
out
pop
aad
push
fcoml
lcall
lock
xchg
outsl
xlat
adc
xor
sbb
fisttps
repz
xchg
test
stos
adc
push
jg
dec
or
mov
pop
sub
mov
xchg
outsl
test
repnz
mov
or
pusha
cli
xchg
mull
cmpsb
mov
xchg
pop
lock
sbb
mov
sub
pop
jmp
adc
mov
js
mov
cmp
push
push
and
lea
sub
xchg
and
push
fldl
rcll
ss
pop
adc
iret
popa
enter
int3
add
leave
xchg
push
add
cld
mov
insl
int3
pop
clc
push
sub
clc
fcom
pop
adc
pop
mov
jl
fdivrs
mov
mov
mov
sub
stos
int3
add
or
and
mov
dec
out
arpl
mov
fcompl
xchg
or
pop
lcall
rclb
cmp
or
popa
sbb
lret
xchg
add
fwait
sarl
js
sub
iret
imul
sub
xchg
ds
inc
mov
mov
mov
add
jns
int
or
addb
add
pop
or
les
sbb
sbb
rorl
loope
or
pushf
fs
sub
inc
lret
dec
sbb
xchg
adc
or
mulb
inc
adc
mov
shrb
inc
pushf
and
aaa
xchg
movsl
xlat
xor
mov
mov
cld
js
adc
mov
sbb
fsubl
push
jge
jmp
ss
cmc
sbb
in
mov
xchg
icebp
dec
mov
pop
jl
cmp
push
cwtl
mov
aad
mov
push
inc
data16
imul
mov
in
hlt
mov
lds
ficoml
enter
adc
in
xor
fimuls
xor
addr16
popa
and
in
aas
mov
sbb
xchg
add
push
into
repz
mov
xchg
cwtl
fwait
sbb
pop
testl
inc
aas
out
ds
dec
adc
xchg
fbstp
out
xchg
icebp
pushl
int
jns
sarl
movups
das
mov
pop
lret
outsl
pop
push
int3
xor
xor
roll
imul
or
dec
jno
bound
loopne
dec
dec
sbb
jle
dec
std
mov
lea
xor
cmp
add
add
nop
push
sub
scas
dec
out
mov
into
xor
and
int
inc
pop
notl
lret
mov
fnsave
js
sti
fsubp
aad
mov
dec
xor
push
js
mov
push
inc
sbb
or
mov
inc
neg
cmp
cmp
jecxz
insb
push
sub
pushf
dec
mov
test
test
xor
test
push
rcll
dec
out
incb
test
push
jns
jle
mov
add
daa
fdivrs
dec
add
outsl
and
mov
cmp
and
dec
adcb
push
hlt
mov
rep
dec
cmp
scas
ret
cld
sbb
pop
into
rclb
hlt
jno
lret
push
mov
mov
outsl
mov
and
jns
cmpsb
aad
mov
sahf
test
cmp
inc
out
sbb
dec
add
cmp
xor
pop
sbb
dec
testl
push
pop
inc
adc
cs
aaa
stc
pushf
xchg
pusha
jbe
push
mov
mov
or
xchg
xor
imul
out
or
lock
jge
adc
jno
jns
jae
popf
mov
sub
jbe
jbe
mov
loopne
inc
and
sbb
pushf
ret
mov
mov
mov
inc
xor
arpl
dec
insl
fidivl
push
mov
ljmp
sahf
es
roll
imul
mov
rcll
or
sbb
mov
or
fsubrs
sbb
pushf
push
mov
faddl
pop
sub
push
fstl
push
adc
add
sbb
mov
neg
hlt
sub
pop
mov
add
lock
and
das
sub
dec
jle
sbb
insb
out
pop
jnp
div
pop
mov
sarl
mov
aaa
lods
sub
pop
mov
mov
pop
adc
icebp
int3
cmp
leave
push
mov
add
mov
rcrb
imul
cmpsb
adc
jno
xor
mov
enter
jecxz
sub
cmpsl
mov
dec
int3
xchg
jg
or
jg
add
pop
cmp
dec
std
outsb
adc
gs
pusha
push
shll
jmp
daa
cmp
jl
cmc
clc
mov
pop
push
jb
inc
sub
lods
ret
sub
les
aad
xor
jecxz
cli
and
stos
stos
pop
dec
mov
lds
pop
test
out
xor
and
xchg
sbb
mov
movsl
inc
fbstp
mov
enter
dec
xor
mov
test
shll
fisttpll
pop
xor
aam
pop
sub
movsl
mov
and
cmp
mov
push
mov
sbb
dec
add
subl
popf
add
add
out
lods
jns
mov
xchg
lea
adc
stc
lret
shl
shll
insb
xor
dec
out
jp
mov
sub
jns
rcrl
jne
in
ja
adc
or
enter
inc
mov
ss
xor
pop
fcmovbe
dec
add
nop
clc
sbb
in
fs
repz
jge
cltd
lods
jg
notl
stc
test
mov
sbb
sub
lcall
xor
icebp
mov
fidivrl
xlat
xchg
push
out
mov
jmp
ljmp
or
fchs
in
enter
in
lods
in
push
xlat
cmc
push
sub
mov
int
rcl
leave
bnd
inc
pop
nop
pop
aad
mov
inc
mov
ret
cli
sbb
into
fs
and
mov
push
dec
add
fldt
inc
scas
dec
cmp
mov
xchg
inc
and
in
xchg
outsl
aas
sbb
hlt
mov
xchg
xchg
dec
add
test
xchg
imull
and
xchg
jne
jb
dec
pop
stos
stos
out
lds
xchg
fs
je
pushf
adc
subl
ret
xchg
movsb
jge
ja
testb
sbb
fisubl
add
push
jg
inc
test
lcall
sbb
add
xor
xor
arpl
cmpsl
mov
push
in
sub
xlat
adc
sbb
mov
mov
mov
jne
add
mov
cmp
pop
and
push
cmpsl
push
add
stos
xor
or
loope
cs
jl
das
push
sub
scas
xorl
add
fists
in
inc
jge
cmpb
push
lea
aam
mov
data16
adc
icebp
jno
stos
push
push
mov
mov
ds
mov
in
arpl
pop
daa
lds
addl
add
test
adc
lret
dec
ja,pn
loope
fstpl
xor
cli
pop
push
out
xor
bound
mov
jae
inc
cmpsb
or
mov
aam
pop
dec
jno
stos
xchg
lock
pop
in
shr
enter
repz
stos
pop
sub
dec
es
and
and
std
add
sarb
imul
iret
lods
mov
inc
inc
dec
inc
push
cld
cmp
sbb
push
in
pop
or
test
xor
fisttps
cld
popa
cmp
sarb
nop
imul
jle
ficoml
add
add
bound
xchg
cmp
cli
cltd
add
and
imul
enter
xchg
cmp
fsubrs
mov
pop
mov
cmp
sub
leave
out
sarl
je
cwtl
add
insl
shll
push
popa
nop
out
clc
add
addl
mov
fildll
pop
push
leave
inc
ret
stc
dec
mov
inc
xchg
mov
pushf
cmpl
ja
xchg
imul
fildl
fwait
popf
inc
mov
ret
cld
lea
pusha
fadds
push
test
loope
pop
sahf
lcall
imul
scas
in
shll
pop
xlat
lret
test
mov
orb
or
jl
into
jno
or
mov
ret
sub
int
or
cmc
gs
or
mov
lods
xor
mov
xor
cmp
push
insb
std
jns
jne
not
movsb
inc
shl
ret
cs
out
cs
pop
jmp
push
push
pop
pushf
aam
or
push
and
jnp
test
jle
jb
lahf
dec
test
sbbb
addl
fs
jge
lret
dec
mov
imul
fsubrs
outsl
mov
nop
sub
outsb
sub
xchg
repnz
in
into
mov
dec
pop
pushf
movsl
jbe
es
fwait
dec
jno
in
adc
call
in
pop
push
stos
call
test
in
mov
inc
mov
adc
jge
jnp
leave
xor
bound
std
jmp
mov
fcompl
dec
and
stos
xor
lock
lahf
adc
mov
and
shlb
adc
loop
xchg
je
cmpl
cmpsb
out
invd
inc
jne
les
fidivrs
loop
or
push
out
scas
inc
jl
sahf
in
int3
lds
push
push
icebp
push
sahf
sub
push
xor
in
jmp
loop
cltd
stc
fxch
push
rolb
rorl
stos
inc
cmpb
ffree
cli
jne
imul
push
gs
jg
fldl
outsl
aad
lcall
dec
jno
and
lods
fstpt
mov
cmp
cmp
mov
sbb
xor
cmp
add
xor
push
xor
hlt
inc
pusha
das
ljmp
jg
addr16
pop
scas
xor
repnz
insl
or
inc
sbb
movsb
popa
ss
mov
dec
outsl
jbe
inc
dec
push
jge
addr16
out
lret
mov
mov
loopne
sbb
lods
jnp
aaa
adc
mov
mov
jecxz
or
inc
fstps
mov
mov
mov
jmp
sarl
loopne
mov
jp
push
jno
mov
jno
xor
loop
test
push
add
je
jecxz
adc
xchg
out
push
jns
xchg
inc
imul
pop
sub
shlb
fdivrs
push
jne
and
ret
lahf
push
xor
icebp
shlb
inc
adc
cmp
call
and
jp
push
arpl
push
scas
pop
fwait
cltd
jp
lea
imul
popa
pop
xor
lahf
not
aas
sub
pop
pop
sub
cmp
and
fsts
xor
push
loop
mov
mov
imul
fsubrl
cmp
outsl
push
add
pop
insl
inc
sub
roll
mov
loope
movsl
or
push
dec
hlt
ret
mov
fwait
mov
rclb
push
xchg
pop
dec
or
mov
pmulhuw
inc
daa
inc
or
hlt
test
fadds
gs
adc
dec
mov
push
xor
mov
js
adc
mov
dec
mov
sub
stos
scas
fsubrs
mov
jp
aaa
repnz
mov
inc
pop
push
pop
sub
sub
popf
movsb
insl
cmp
aad
sbb
negl
push
bnd
es
jne
xchg
sti
push
js
mov
mov
adc
test
loope
and
call
mov
jmp
fldenv
test
lcall
add
add
pop
sbb
inc
stc
jns
popf
ljmp
jb
enter
dec
jg
sar
divb
sahf
cmp
inc
stos
stc
xlat
mov
pop
jl
fldcw
popa
push
mov
xlat
cmp
in
icebp
xchg
sub
cld
aam
and
jo
mov
xchg
push
pop
add
js
sbb
call
jns
mov
lret
jle
and
mov
inc
enter
flds
mov
sbb
add
cmp
jns
jns
jae
mov
sbb
fisttpll
outsb
into
das
xchg
mov
addl
sti
dec
push
push
sbb
mov
cmp
inc
roll
dec
in
andl
mov
xor
pop
mov
ret
jb
fwait
stos
adc
push
adc
xor
ds
daa
xlat
mov
shr
sbb
xor
cmpsl
and
popa
inc
call
mov
push
push
mov
fisubl
pop
jae
xorb
jne
sbb
lods
mov
push
or
lcall
xchg
lods
popa
aad
xor
mov
push
call
jl
jb
jge
mov
push
jne
mov
xchg
mov
lods
aam
sbb
pop
sti
inc
std
inc
cltd
add
mov
mov
and
ljmp
sub
mov
push
and
push
dec
rolb
add
aaa
daa
pushf
jecxz
fsubrs
fwait
pop
dec
xor
adc
adc
adc
lcall
out
inc
mov
es
xchg
lods
jne
rolb
dec
dec
popf
jecxz
in
inc
test
shl
mov
bound
push
lahf
cmp
fs
lahf
mov
cmc
mov
or
cmp
jo
repz
xchg
or
push
push
and
lahf
xchg
roll
out
ror
push
xor
jmp
aad
push
add
cmp
xchg
mov
test
mov
mov
ret
xchg
repnz
fisttpl
fcomi
push
js
pmaddwd
ljmp
scas
xchg
ud0
cmp
cmpb
sub
adc
lcall
mov
cmp
adc
call
lcall
or
daa
ljmp
xlat
in
popf
fwait
push
lcall
and
push
call
fcompl
std
jbe
xchg
xchg
adc
cmp
fistps
clc
es
pop
xor
jmp
mov
cmp
aad
mov
add
aaa
testl
push
dec
pop
dec
xor
adc
mov
mov
outsl
loopne
jb
mov
lret
xchg
js
xor
xor
ret
pop
cli
test
js
xchg
adc
mov
inc
pop
sbb
mov
fcoms
push
xchg
pop
push
fcos
insl
pop
inc
adc
adc
stos
cmp
fnsave
push
fsubrl
xchg
pop
xor
xchg
sub
mov
loop
add
push
popf
dec
out
sbb
jno
aam
outsl
or
fcompl
inc
hlt
les
sub
lods
ret
mov
push
cmp
pop
xor
xchg
cltd
jbe
jle
movb
sbb
mov
push
je
dec
mov
jnp
je
sbb
dec
mov
inc
mov
arpl
jns
popa
popf
jnp
jns
cltd
jae
pop
insb
ret
nop
cli
inc
in
inc
stos
fwait
xchg
sub
mov
out
mov
call
std
rolb
push
in
push
ret
movsb
cmpsb
fimuls
adc
inc
jmp
jmp
adc
or
inc
enter
and
loope
or
call
mov
movsl
insb
orb
or
cmp
add
and
in
fwait
cltd
repnz
ds
stc
inc
shrl
sub
out
mull
jnp
xchg
sbb
sbb
push
gs
and
sbb
pop
dec
imul
scas
loopne
mov
shlb
in
inc
in
jbe
loop
js
jge
mov
xchg
sbb
call
shlb
pop
mov
rcrb
in
sub
ss
mov
outsl
cld
jbe
rolb
xchg
jge
lret
jo
sbbl
and
push
cli
in
lds
inc
jmp
sub
xchg
ror
test
ficoms
repz
je
jne
insl
lret
cld
xchg
rcll
out
test
sub
pop
dec
cmp
rcr
fcomi
test
adc
mov
sbb
cld
jmp
xchg
xchg
xchg
and
push
mov
or
push
ret
scas
popl
pop
sub
sbbb
and
fildl
push
xchg
cmp
inc
vmwrite
mov
shlb
mov
xchg
popa
into
xchg
cmp
loopne
into
test
cwtl
add
test
js
or
push
pop
adc
xor
sti
xchg
mov
in
into
in
pop
push
inc
fwait
test
gs
aas
iret
push
out
imul
xchg
xchg
push
sbb
addr16
pushf
mov
dec
pop
nop
notb
lret
and
and
subb
push
inc
call
ret
jl
inc
test
xchg
xchg
jne
dec
mov
mov
mov
jecxz
or
pop
enter
ss
fdivrl
rolb
cmp
stc
add
sub
mov
test
sub
shrb
lret
shl
jg
mov
push
icebp
mov
test
push
icebp
filds
xchg
xchg
pop
sbb
pushf
sbb
xor
testl
jb
sub
scas
xor
insl
inc
call
jo
fistl
add
cli
pand
movsl
mov
daa
lock
push
add
and
lock
fadds
testl
mov
out
pop
icebp
outsb
xor
cmpsb
out
das
and
mov
leave
pop
cmpsl
sbbb
xor
push
jnp
icebp
fldcw
lret
pop
popf
rcrl
pushf
xor
inc
push
sbb
xchg
sti
std
inc
fmuls
int
jg
mov
or
xchg
adc
pop
daa
mov
mov
pushf
test
out
push
cmp
mov
ljmp
sub
je
cmp
aad
shl
mov
orb
sbb
pop
loopne
rclb
mov
mov
aad
int3
fldenv
cmc
sti
cs
xchg
into
and
repz
lock
push
xchg
mov
cmp
mov
sub
rorb
cmp
inc
imul
aaa
pop
test
push
in
hlt
xchg
dec
mov
xchg
cmpsb
dec
lock
fwait
push
sahf
cmp
cmp
sub
pop
insl
pop
sbb
inc
or
testl
sbb
xor
jl
adc
cmp
jle
pusha
dec
add
fs
xor
lods
stos
divb
or
adc
xor
je
fnsave
push
sbb
dec
add
sub
icebp
add
daa
jg
sbb
out
jg
mov
cltd
cmp
fucomip
clc
addb
clc
imul
adc
sub
movsl
js
ret
jg
push
add
inc
cmp
pop
mov
xor
shlb
out
pushf
enter
sbb
cld
jg
cmp
and
jmp
std
sti
push
mov
and
pop
mov
into
outsl
mov
mov
push
test
aaa
xchg
fists
adc
cmp
lahf
xor
xchg
inc
jb
push
adc
jbe
es
jb
addr16
mov
sbb
inc
mov
icebp
fnsave
mov
aad
les
inc
jecxz
or
in
lcall
jge
rcr
imul
mov
cmpsb
pop
pushf
mov
adc
test
mov
call
imul
xor
movsl
gs
pop
lahf
mov
iret
add
dec
jmp
test
popl
insl
lock
test
outsl
jmp
push
xor
in
faddl
fsubrp
dec
xchg
mov
or
es
insb
sbb
test
adc
jnp
push
dec
rorl
js
out
sbb
movsl
ds
xchg
fadd
push
movsl
adc
inc
dec
test
jmp
or
pop
jp
xchg
adcl
xlat
sarl
or
movsb
mov
popl
jo
popf
test
xchg
and
jb
movl
inc
mov
sub
add
fldl
insb
sbb
jp
mov
jecxz
shrb
mov
jnp
clc
mov
stos
jmp
mov
addr16
adc
inc
cmc
pavgw
pop
test
mov
inc
lret
scas
mov
or
pushf
inc
adc
sahf
push
sbb
add
ror
sbb
and
xchg
scas
test
es
and
xchg
je
sahf
or
xor
scas
xchg
mov
shr
jno
mov
or
popf
push
stos
dec
les
inc
mov
mov
cmc
adc
mov
push
push
mov
sub
fidivl
clc
push
loope
cmpsl
int3
push
mov
aas
mov
cltd
xor
mov
into
sub
int3
jge
dec
adc
mov
sub
iret
jne
push
movsb
cmc
cmp
mov
mov
and
add
lcall
cmpl
test
add
and
xchg
cwtl
dec
push
pop
je
mov
push
shrl
pop
gs
add
mov
aaa
call
pop
push
lods
mov
data16
ja
xor
and
sarl
out
test
repz
mov
cmp
es
cmp
sahf
adc
push
dec
xor
xor
cmpsl
dec
scas
jg
jbe
jno
or
aaa
inc
fwait
ret
sbb
xchg
add
test
in
adcb
pop
lods
jle
loop
mov
outsb
leave
or
ss
jmp
mov
mov
inc
jne
clc
lods
push
ds
leave
iret
inc
mov
lods
call
notb
inc
sub
sbb
in
inc
fcoms
aaa
aad
repnz
sub
inc
dec
sub
cmp
lods
or
sbb
pop
lods
dec
xor
and
fcmovnb
and
dec
test
sbb
mov
hlt
xlat
lret
mov
fpatan
ljmp
shlb
sbb
push
mov
cld
je
fcomp
je
pop
jp
cld
jle
sti
adc
stos
fdiv
inc
hlt
popf
fists
pop
inc
stos
sahf
stc
popl
test
lahf
into
add
sub
loop
daa
cmp
in
gs
shl
and
pop
pop
pop
push
jbe
adc
sub
xorl
mov
fs
pop
cmp
cmp
push
imul
xchg
sub
push
es
cmp
stos
jmp
xchg
cmp
jbe
xchg
push
push
mov
xor
faddl
xlat
pusha
ss
jns
sbb
inc
jns
sub
inc
xchg
fwait
cmp
dec
test
mov
call
ljmp
or
das
ds
nop
lahf
loop
aaa
lret
mov
sub
dec
into
fidivs
movsl
lock
pusha
aad
push
push
icebp
aaa
daa
lret
sti
fnsave
cmpsb
out
fldcw
fsubl
mov
daa
cmp
sar
jae
add
lods
mov
push
sbb
and
mov
adcb
push
pop
inc
mov
mov
int3
aam
outsl
xor
movsb
add
imull
mov
test
test
es
aad
lods
or
aaa
out
inc
jp
push
xchg
ficoml
clc
sbb
fldcw
add
in
xor
push
pusha
cmpsl
sbb
cmpsb
imul
adc
fldl2e
das
pop
pop
in
mov
fadds
clc
shr
and
fnsave
aaa
push
sub
xchg
negb
aam
test
cs
add
repnz
mov
pusha
xchg
data16
hlt
push
mov
cmp
jl
mov
lret
add
and
dec
mov
lds
mov
mov
and
shll
mov
mov
inc
es
jb
sbb
inc
fimull
mov
leave
adc
inc
call
cmpsl
or
movl
aaa
fwait
inc
aad
enter
lock
push
mov
pop
jbe
or
cmp
mov
cmpsb
sbb
jbe
iret
test
pop
jbe
fnstcw
daa
arpl
inc
sub
popf
lahf
xchg
or
and
int3
mov
enter
mov
pop
mov
xchg
push
push
popf
inc
js
scas
out
or
add
lock
loop
test
sahf
jp
inc
lret
addl
ljmp
jl
fistps
mov
xor
repnz
lds
lcall
movsl
inc
sub
push
dec
nop
je
xor
cmp
pop
test
cmp
popa
aam
imul
daa
jne
jmp
pop
cmpsl
jmp
push
out
adc
and
enter
adc
in
and
adc
test
shrl
aam
lret
mov
mov
in
xchg
pop
jbe
cmp
pop
shlb
push
inc
cld
mov
pop
imul
pusha
cmp
clc
lods
mov
lods
clc
sub
popf
or
lahf
push
in
inc
cltd
inc
mov
pop
jo
sub
enter
leave
cwtl
jecxz
ja
test
xor
fstpt
sti
push
cltd
pop
push
xor
out
test
imul
sub
xchg
bound
in
and
adc
hlt
fimull
addr16
sbb
test
xor
cltd
lods
xchg
push
mov
cmc
xor
imul
std
or
mov
xchg
dec
fwait
xchg
pusha
pusha
adc
adc
cmc
cmp
xchg
sbb
insb
cmc
fistl
adc
jno
in
push
push
push
push
andb
fisubrl
dec
xchg
xchg
in
scas
mov
stc
inc
xor
test
push
adc
mov
jbe
insb
jne
mov
sbb
sbb
ds
mov
out
adc
not
das
sti
call
mov
sub
push
rclb
xchg
adc
cmp
cwtl
loopne
and
sti
fnstcw
mov
ret
mov
rcrb
stos
and
mov
xchg
test
mov
jg
hlt
xchg
je
int3
repz
mov
pushf
push
cmpsl
lret
out
into
sub
testl
sub
mov
sarl
iret
addl
rcrl
in
insb
cwtl
daa
jg
fnstenv
lret
adc
adc
aas
push
and
xor
add
iret
xor
sbb
ret
enter
sub
popf
or
jecxz
and
push
push
lahf
loope
out
icebp
ljmp
adc
jge
fcomi
or
mov
out
loope
mov
and
push
cmpsb
repz
notb
xchg
xchg
and
cmp
fdiv
dec
fdivs
jle
out
cmp
cs
mov
adc
lds
add
dec
jge,pt
mov
and
test
inc
jo
mov
pop
xor
and
imul
loope
jecxz
movsb
jmp
testb
or
leave
scas
ljmp
sub
mov
lods
imull
pop
aas
pop
das
loopne
lret
adc
sarl
movsb
xor
adc
in
xchg
xor
jmp
mov
loopne
inc
adc
sbb
sub
hlt
inc
dec
cmpsb
mov
into
int3
addr16
pop
out
cmpsl
sub
sbb
cmp
test
cmp
jbe
cs
adc
scas
loopne
cmpsb
jo
jle
xchg
icebp
add
aam
mov
jp
sbb
push
lret
cwtl
in
fwait
int
pop
in
cld
jne
or
rcr
inc
in
jl
jmp
das
xor
xchg
aas
pop
and
push
sub
bound
cmp
out
ds
adc
add
out
pop
aam
lock
xor
fcoml
pop
mov
jnp
lahf
xchg
push
and
mov
mov
push
fnsave
cmpsb
inc
sub
pop
lods
jmp
movsb
test
mov
js
push
mov
inc
push
jge
add
mov
int
inc
sbb
in
imul
inc
fdiv
or
jl
in
mov
or
js
cld
arpl
adc
jle
out
cmp
mov
test
mov
sub
in
in
inc
shrl
cmp
scas
sbb
imull
jle
xchg
les
sbb
pop
cmpsl
aad
pop
or
and
ss
jnp
lds
mov
inc
adc
jmp
push
ja
in
xor
pop
in
mov
cltd
xorb
or
xchg
insl
vmovupd
dec
lea
cld
inc
push
scas
pop
xchg
or
dec
mov
xchg
push
mov
pop
xor
cld
cmp
mov
imul
xchg
out
bnd
xchg
sbb
js
adc
push
mov
mov
out
shll
xor
inc
or
xchg
int
in
bound
mov
imul
loop
lret
nop
in
shl
mov
arpl
cmp
mov
push
or
and
mov
sbb
scas
insl
mov
xchg
popw
out
sub
jae
pop
jp
sub
faddl
mov
mov
and
jnp
lret
outsl
movsl
sub
mov
jl
jge
inc
sti
arpl
test
jb
psrad
test
rorl
dec
mov
daa
push
jmp
mov
outsl
jle
shll
scas
sbb
mov
stos
arpl
iret
stos
and
cmp
push
daa
test
sub
xchg
dec
inc
out
into
jns
cmp
sbb
faddl
daa
xchg
jmp
cmp
mov
int3
mov
xchg
cmp
cmpsb
dec
test
ret
cmc
pop
in
dec
faddl
adc
adc
adc
xchg
xchg
mov
aaa
and
xor
cmc
rcrb
dec
and
jns
lcall
push
into
pop
inc
imul
lcall
mov
rolb
adc
cmpsb
insl
mov
inc
pop
sbbb
jge
lock
xorl
popf
xor
add
cmc
mov
dec
test
sti
std
in
sub
dec
cmp
imul
inc
stos
jg
test
shl
jb
pop
fimull
enter
mov
inc
rcrb
andb
sub
std
mov
pop
dec
add
sub
push
ja
shlb
xchg
xor
in
mov
xor
jecxz
adc
scas
data16
pusha
rolb
test
std
cmp
addr16
rorb
xorl
mov
sub
dec
push
out
les
dec
int3
and
gs
mov
lock
aas
rcr
ss
cmp
cmp
xchg
mov
ret
adc
stc
in
clc
mov
daa
pop
add
arpl
add
sbb
cwtl
mov
in
cld
out
mov
into
lods
xlat
inc
dec
dec
jne
xor
into
movl
std
cltd
mov
xchg
jbe
repz
and
shll
inc
movb
ja
aad
sbb
dec
push
cmp
imul
mov
sbb
lock
lret
rcrl
pop
sub
dec
pop
jle
out
fstp
outsl
add
les
adc
cld
test
xor
andb
outsl
bound
hlt
push
orl
xchg
xchg
cmp
inc
rcl
stos
push
dec
pushf
scas
mov
decl
test
xchg
jecxz
stc
addr16
into
leave
rclb
aad
cmp
shrl
dec
loopne
mov
aas
xor
sti
int
adc
dec
push
movsl
inc
sbb
movsl
iret
adc
mov
lcall
aaa
jns
mov
dec
outsl
shr
inc
scas
outsb
push
sti
xchg
mov
or
cmpsl
jo
mov
outsb
out
add
sub
mov
ljmp
test
sub
ja
je
cltd
adc
mov
xor
jb
loopne
cwtl
fsts
scas
clc
lcall
and
popf
cli
xchg
jo
sub
sbb
push
adc
outsb
pop
push
ret
push
and
cmp
fimull
repz
push
xchg
pop
pop
cmpsb
push
push
push
fdivrs
push
xchg
cli
sbb
jmp
sbb
jge
insl
adc
fsubp
or
imul
fwait
lods
jne
xchg
scas
jle
dec
aam
mov
fistps
cmpsb
mov
mov
mov
add
push
pushf
inc
sub
lcall
jge
push
ret
pop
test
mov
mov
in
mov
dec
cmp
mov
in
lds
andb
jp
mov
push
insl
imul
cmp
lds
or
repz
scas
pushf
scas
xchg
mov
aad
dec
and
xchg
push
mov
in
fnstsw
and
aad
dec
jne
bswap
or
mov
cmp
inc
mov
jmp
adc
call
and
int
and
fldt
jne
int3
pushf
leave
enter
faddp
mov
mov
mov
adc
push
push
cmpsb
loope
sbb
bswap
je
test
popa
fwait
or
addb
notb
fcomip
dec
cli
dec
lock
das
jnp
fwait
cwtl
and
jmp
shrl
dec
clc
push
ret
test
adc
mov
test
fnstsw
adc
or
mov
nop
lret
jmp
pop
mov
inc
flds
sarl
adc
sbb
stos
orb
jl
xchg
adc
push
ds
sbb
add
or
jg
xchg
pop
mov
push
mov
loope
lahf
popf
out
scas
sbb
push
and
cmp
addr16
mov
mov
pop
jb
mov
pushf
mov
pushf
sbb
jne
mov
lea
test
imul
stos
sbb
or
popa
adc
lret
aaa
cmp
icebp
mov
dec
or
jmp
mov
ljmp
and
xor
or
cmp
subb
sub
or
push
js
sbb
movsl
in
add
mov
imul
xchg
dec
dec
pop
mov
mov
out
jmp
cwtl
mov
lods
outsl
mov
and
mov
ljmp
pushf
cltd
in
mov
aas
cmp
pop
pop
mov
cmp
jno
jmp
mov
test
mov
sbb
jnp
add
fwait
lock
jb
into
push
data16
iret
mov
out
stc
stos
or
dec
mov
rcrl
push
xchg
jmp
cmc
test
mov
dec
sub
outsl
in
dec
in
je
outsl
imull
dec
fwait
cwtl
jg
mov
cmp
dec
dec
loope
cmc
ja
or
add
stc
xor
add
std
xchg
scas
push
cli
popf
testl
out
lods
inc
hlt
sub
sub
je
es
dec
sub
jecxz
dec
add
ja
loop
icebp
test
in
mov
aas
pusha
jo
cmp
lret
jbe
mov
notb
pop
and
pop
mov
and
push
or
xchg
cmp
mov
cmp
lahf
add
sbbb
addr16
xor
xchg
xchg
cs
popf
xchg
push
dec
call
ret
inc
sub
in
dec
fs
xchg
or
rcl
enter
dec
fs
mov
pushl
pop
leave
xor
in
repnz
rorl
ficompl
dec
sbbb
sahf
jae
fadd
pop
cmp
push
mov
data16
data16
mov
stos
mov
dec
repnz
std
insb
stc
adc
pop
mov
scas
rcrl
xchg
adc
push
int3
fistl
int3
in
mov
dec
pop
pop
and
cmp
sub
and
into
rcrb
xor
push
pop
xchg
mov
xchg
pushf
xchg
aad
adc
je
xchg
fsubrp
in
mov
shrl
xchg
repz
fs
jg
cli
ss
sti
ffree
dec
int
jbe
jae
imul
mulb
cmp
aaa
jnp
scas
pop
xor
sbb
rorb
dec
mov
out
adcl
pop
out
inc
iret
push
fldt
imul
lcall
cld
dec
inc
dec
movsl
aad
xchg
sub
jl
dec
jae
imul
ret
mov
les
leave
neg
and
in
idiv
xorb
call
test
jbe
out
inc
pop
inc
sub
outsb
fisttpl
cltd
hlt
mov
mov
mov
lods
mov
in
enter
stos
dec
adc
push
push
xor
xchg
nop
xchg
adc
popf
push
mov
or
pushf
aam
sub
push
jge
adcb
insb
leave
xor
dec
inc
sub
inc
pop
xchg
push
jge
jne
lds
shr
pop
jg
add
pop
daa
lds
adc
scas
stos
lahf
das
stos
test
mov
outsl
fbld
mov
sbb
inc
inc
cmp
xchg
adc
cmpsl
loopne
bswap
push
fwait
mov
lcall
mov
lcall
push
lea
cli
popf
fnstcw
inc
mov
sahf
and
test
in
les
jae
and
sbb
xchg
fwait
push
pop
push
or
mov
into
mov
mov
or
loop
sub
add
iret
loopne
or
test
orl
rcrl
out
jg
stos
pop
mov
xchg
stos
insb
and
test
test
repnz
mov
dec
stc
pop
push
mov
stos
xor
mov
call
pusha
fs
mov
add
outsl
fsubrl
and
bound
repnz
sti
lods
mov
mov
dec
dec
outsl
enter
mov
inc
movups
cmc
cmpl
cmp
loopne
or
pop
icebp
pop
or
adc
stos
push
ds
inc
inc
idivl
sub
loope
rcl
ret
mov
inc
jmp
mov
xchg
jae
js
popf
sub
and
inc
loope
jnp
sbb
push
mov
imul
pop
rcrb
data16
in
adc
data16
xchg
sbb
rcll
idivl
lods
imul
sub
cmp
jl
loope
sub
xor
pop
and
jae
shlb
lods
dec
adc
sub
mov
stc
test
in
sbb
sub
inc
outsl
dec
les
das
inc
sahf
leave
ss
or
dec
cs
ficoms
and
cmc
mov
je
std
and
fs
cmp
sub
xor
fwait
mov
inc
fidivrl
jmp
ja
cmpb
adc
or
aam
test
out
in
test
pop
sbb
pop
in
xchg
enter
loopne
mov
inc
jns
add
pop
and
cmc
ljmp
daa
sbb
mov
adc
inc
repnz
add
jp
dec
push
jnp
iret
adc
cmc
pop
leave
popf
cmp
add
loop
mov
enter
xchg
push
add
fisubrs
xchg
jo
nop
fstpl
mov
stos
sbb
xlat
mov
jo
das
arpl
sbb
test
push
xor
addr16
arpl
xchg
sbb
clc
aam
push
adc
sbb
mov
insl
loope
sbb
loope
movsb
mov
mov
pop
lock
mov
leave
gs
daa
cltd
or
fadds
stos
fwait
test
adc
push
xor
sub
pop
mov
pushl
icebp
stos
mov
cmp
inc
add
xorl
sub
lcall
jo
xor
jp
cwtl
push
aaa
icebp
or
mov
lret
push
cltd
mov
sbb
inc
movsb
push
sbb
pop
cmp
cmp
pop
incb
push
popf
clc
push
and
sub
dec
push
mov
mov
and
xchg
jnp
in
pop
xchg
xor
inc
xor
jge
flds
push
in
cmp
andl
pop
push
in
sbb
add
or
adc
add
cmp
adc
jo
sarb
sbb
fsubl
mov
pop
adc
mov
inc
push
loopne
das
leave
dec
lcall
xchg
and
aaa
test
popa
pusha
mov
cmp
jp
test
jne
les
nop
pusha
cmp
mov
and
dec
inc
add
flds
push
out
inc
xor
push
aas
ret
stos
push
pop
xchg
ljmp
sub
test
arpl
cli
and
das
bound
rclb
ss
mov
ljmp
mov
pop
movsb
jge
aas
loop
popf
je
icebp
add
aaa
test
dec
jg
mov
pop
lods
das
pop
jge
cmpsb
ror
inc
mov
jle
outsl
pusha
sbb
lahf
add
pop
scas
gs
xor
lcall
loop
xchg
inc
dec
pop
imul
andl
lea
mov
stc
xlat
fwait
fs
sbb
cs
mov
inc
gs
cmpsb
pop
push
push
loope
pop
and
jne
inc
jns
adcl
subl
into
jp
adc
stos
arpl
mov
push
out
mov
mov
jnp
daa
mov
push
pop
xor
jne
jmp
sar
int3
inc
push
sbb
mov
ljmp
add
jbe
mov
xor
lds
jbe
nop
loop
push
adc
xor
pusha
enter
lods
adc
in
xchg
cli
xor
imul
cmpl
test
sub
test
and
pop
add
mov
in
push
jne
mov
test
add
jbe
dec
inc
cmp
mov
ljmp
xchg
mov
stc
lahf
pop
call
movsb
xorb
xor
popf
ret
adc
sbb
push
test
lods
cmp
sbb
mov
hlt
mov
pop
ljmp
fstl
dec
pop
sbb
icebp
or
add
pop
out
sub
jle
repnz
ds
out
pop
sub
mov
icebp
dec
mov
push
nop
add
push
mov
jle
jno
or
or
pop
push
leave
test
sahf
cs
and
fldenv
sti
sbb
dec
ds
cmp
in
scas
pop
out
fldl
add
mov
mov
imul
dec
xchg
shr
mov
lds
lds
push
iret
sbb
adc
mov
jmp
out
mov
dec
and
push
inc
das
add
loopne
inc
jmp
mov
inc
pop
dec
mov
and
xchg
pop
lea
packssdw
hlt
inc
mov
mov
jb
adc
inc
or
jge
adc
jp
js
pop
push
dec
jnp
lea
xchg
mov
mov
adc
out
icebp
mov
or
std
sbb
out
or
add
jo
cmp
imul
xchg
xor
sub
cs
hlt
cmp
nop
xchg
jne
dec
sub
adc
loop
sar
or
hlt
rol
out
xchg
scas
jb
cmp
outsb
dec
mov
insl
mov
test
lahf
push
dec
pop
mov
push
push
mov
push
mov
insl
mov
mov
and
mov
xor
cmp
call
cmp
mov
popf
push
sarb
outsl
lret
stos
nop
push
cs
in
popa
int
insb
xchg
pop
inc
jo
pop
into
cmp
imul
loop
pop
sub
testl
sbb
aad
sahf
xchg
sbb
outsb
cmp
hlt
ja
lahf
jbe
dec
mulb
stos
adc
sti
stos
dec
dec
dec
inc
sub
jbe
ja
add
jle
cwtl
aam
stos
ds
mov
test
push
lahf
in
push
imul
hlt
in
sti
inc
test
jo
mov
cmpsl
push
sbb
aad
mov
jns
dec
jp
loop
lds
cltd
mov
neg
add
jnp
push
dec
call
dec
in
sbb
movsb
scas
adc
mov
xor
loopne
sbb
outsb
adc
jnp
sub
jmp
fildll
iret
call
jmp
nop
lret
or
jecxz
dec
or
jecxz
jp
pop
cli
fbstp
outsl
in
ja
jecxz
sub
fidivrs
in
inc
in
ljmp
xor
add
mov
mov
pop
mov
jns
lahf
jp
pop
in
cltd
shrl
in
mov
test
hlt
es
sahf
pop
mov
sarl
jo
adc
dec
inc
dec
loop
jno
jns
loop
jl
add
ljmp
repz
lods
jp
adc
lods
aas
jp
mov
in
aaa
dec
push
test
cmc
mov
dec
js
pop
mov
xchg
repz
out
ljmp
sbb
lds
mov
incb
div
dec
fs
nop
shrb
mov
pop
xchg
and
mov
mov
inc
mov
dec
out
pop
mov
dec
enter
pop
cmpsl
stos
push
loopne
jo
test
insl
adcl
sbb
pushf
orb
sub
adc
cmp
cmc
iret
in
sahf
dec
xor
jnp
cmp
pop
mov
and
adc
jle
testl
or
mov
fwait
pop
xadd
sti
mov
mov
int
bound
xor
mov
jns
popa
and
sub
push
call
adc
scas
imul
sbb
std
shlb
cmpsl
cmp
pop
xchg
ret
and
mov
outsb
and
fstpl
dec
sahf
xchg
xchg
mov
inc
mov
mov
stos
stos
in
lea
mov
mov
mov
pop
mov
jge
nop
pop
mov
in
sub
sbb
data16
pop
es
cmp
addb
enter
sbbb
jb,pn
mov
or
ss
and
xchg
mov
xchg
fldl
cmpsb
adc
sbb
mov
mov
xchg
add
ret
aam
xlat
gs
call
mov
scas
mov
adc
mov
nop
outsl
dec
cmp
lea
dec
cmp
test
jns
push
repnz
negl
cmpsb
movsb
push
popf
mov
call
jo
jno
or
fiaddl
xchg
adc
sub
mov
fs
mov
mov
es
pop
dec
addr16
fptan
sbb
xchg
push
in
les
mov
shll
sub
into
cmp
adc
fsubrs
inc
xor
dec
adcb
sahf
cmp
or
movl
pop
into
adc
jae
imul
inc
xchg
es
dec
jg
orl
loop
dec
jbe
jp
iret
movsl
mov
stc
xor
sbb
push
shrb
mov
push
xchg
mov
stc
mov
sub
sub
out
icebp
or
out
xchg
test
fcmovb
adc
repz
push
das
adc
bound
jmp
and
rclb
xchg
xorb
rdseed
xchg
xchg
cmp
stos
mov
jl
cld
mov
stos
sub
inc
pop
jbe
int
or
cmpsl
xchg
shrl
roll
loop
xchg
sub
jne
dec
xor
lcall
and
in
push
jns
push
mov
imul
and
jbe
lcall
fs
xchg
sbb
xchg
fsubrs
and
icebp
jbe
push
or
pop
sub
ljmp
cmp
in
lcall
pop
jbe
or
and
enter
movsb
and
pop
int3
js
pop
sbb
cmpb
out
stos
push
lds
push
adc
mov
or
movsb
enter
sti
out
fidivrl
int
jg
mov
rorb
cmpsb
dec
outsb
mov
push
es
jl
jge
lret
push
sub
out
dec
enter
xchg
mov
inc
xchg
lods
inc
inc
mov
xchg
movsl
test
adc
jp
jle
lcall
js
lahf
arpl
mov
imul
sti
xor
aaa
sbb
xor
jecxz
pop
push
jno
xlat
stc
inc
movlps
xor
mov
loope
mov
mov
sbb
xor
decb
fucomp
dec
add
clc
popa
pop
fcmovne
inc
adc
sahf
jb
fisubrs
mov
pusha
imul
fnsave
or
test
repnz
cmp
shrl
push
arpl
aaa
pop
jge
mov
push
jno
pop
ss
stos
jbe
ficoms
inc
mov
jo
cltd
jbe
fwait
pop
and
movsl
lret
adc
mov
mov
lret
push
inc
jmp
call
into
inc
addr16
mov
sub
jne
sbb
jo
mov
gs
pusha
bound
jbe
mov
imul
hlt
roll
data16
sti
sbb
mov
mov
insb
jbe
fs
test
in
push
cmp
fs
cltd
pop
push
ss
stos
cwtl
push
mov
add
std
daa
mov
das
and
je
pop
mov
xchg
es
and
mov
test
and
sbb
data16
sbb
or
test
repnz
sub
dec
cmpsb
or
xor
inc
and
cmp
mov
stos
lods
mov
mov
fcmovnu
in
test
mov
pop
inc
pop
cmc
ja
lods
mov
js
cmp
rcr
mov
loop
mov
adc
mov
mov
or
mov
fsubrs
adc
adc
mov
bnd
imul
xchg
mov
out
shrb
inc
fnstcw
jle
or
outsb
stos
push
adc
lea
aam
dec
test
mov
cmpl
aas
and
ds
sub
fwait
mov
jle
add
sbb
add
dec
cli
fcmovnbe
repnz
in
cmp
pop
mov
jo
int
dec
repnz
mov
cld
adc
sbb
pop
mov
ja
push
mov
mov
fdivrl
jg
adc
lea
inc
adcl
sub
incb
ret
jmp
scas
mov
add
div
inc
shrl
addr16
scas
xchg
mov
addr16
fiaddl
inc
int
ja
test
in
fistps
loop
push
sub
sbb
incb
push
loop
imul
add
fstl
addb
sbb
sbb
pop
repnz
push
push
loope
push
sbb
or
ja
std
cmp
rclb
dec
mov
pop
cmp
sub
int
push
clc
mov
adc
addl
jo
jl
cmp
jp
cld
int
fldenv
or
imul
mov
idivl
jp
call
cmp
shr
add
test
mov
ljmp
xor
pop
mov
dec
adc
dec
stos
dec
jmp
fidivs
mov
jecxz
push
arpl
xchg
push
sbb
add
cmc
in
pushf
test
sbb
adc
mov
xor
dec
adc
push
test
sbb
sbb
movsl
push
dec
pop
pop
insl
pop
mov
das
loop
fidivl
add
dec
xor
sub
mov
out
aad
insb
xchg
fildll
pusha
sarl
push
cmpsb
xchg
push
and
stos
icebp
lea
inc
sbb
adc
push
mov
jmp
insl
and
dec
imul
jns
in
out
mov
in
inc
xlat
mov
cmp
jl
dec
out
mov
cmp
les
xchg
cwtl
in
dec
scas
inc
jnp
outsl
jmp
aaa
adc
call
mov
nop
fld
sbb
popa
xchg
clc
int3
stos
es
add
push
fwait
cmc
pop
and
xor
fcmovnb
cmp
xor
mov
and
dec
int
mov
fbld
and
cmp
cld
hlt
add
sub
test
sub
mov
sub
roll
ret
outsb
xchg
sbb
sahf
dec
add
addl
mov
fidivrl
sti
push
aam
ret
popl
and
shll
test
ret
popa
andb
stos
pusha
mov
lock
loop
pop
ficoms
insl
mov
xchg
jmp
push
lea
lret
or
add
xchg
push
addr16
jmp
xor
jle
mov
mov
jg
je
xchg
jg
inc
pop
fdivp
xchg
jo
push
fisttps
add
xchg
mov
adc
push
sarb
in
adc
mov
xchg
nop
nop
sbb
in
movsl
push
stc
dec
cld
les
repz
movsl
mov
and
dec
rcl
mov
loop
cltd
and
ror
or
ret
sbb
adc
out
mov
lods
pop
mov
loopne
mov
dec
out
movsl
cmp
mov
mov
jmp
out
sbb
or
test
imul
xlat
xor
cmp
mov
xor
test
sbb
push
adc
xchg
fs
out
push
leavew
bound
ret
pop
iret
cmp
pop
test
mov
jl
xchg
hlt
mov
fcoml
sub
idivb
cmp
test
popa
xchg
sbbl
out
fiadds
idivb
inc
dec
lds
xchg
out
cmc
jne
je
xor
movsl
xchg
stos
pop
cld
in
into
imul
repz
or
je
xchg
jle
push
dec
cld
cmp
or
mov
into
pop
cmp
and
push
or
outsl
push
sub
adc
pop
clc
pop
mov
movsl
sahf
inc
das
pop
addr16
xlat
imul
and
ffree
insb
dec
xor
xor
mov
push
and
aas
cmp
aad
xlat
out
nop
mov
fs
xchg
fld1
xchg
jp
in
pushf
dec
leave
inc
int
sbb
inc
adc
dec
ljmp
jae
insb
imul
cmp
xchg
jne
sar
imul
divb
cli
lcall
and
push
mov
popf
aad
sbb
scas
in
jbe
jmp
push
cmc
and
adc
xchg
out
sbb
mov
scas
pop
mov
push
jecxz
call
cwtl
icebp
loopew
in
push
int
dec
je
dec
push
dec
icebp
push
test
sbb
mov
pop
lds
jno
jge
mov
mov
jmp
inc
lods
rcrb
cmp
sti
cmpsl
sub
mov
std
cmpb
lahf
or
inc
or
and
sbb
xchg
in
sahf
dec
sarb
fsub
mov
mov
jmp
aas
ss
js
cld
lahf
push
rorb
inc
sub
mov
pop
fwait
mov
pop
ja
lret
cli
insb
adc
into
xor
pop
roll
xchg
or
xchg
push
lock
push
or
xchg
jl
cs
adc
negl
or
popf
mov
mov
loopew
add
cmp
imul
cs
jnp
iret
in
mov
hlt
xor
push
call
stc
aaa
stos
jmp
jnp
jbe
mov
popf
mov
dec
sub
xor
imul
push
ret
push
push
jae
and
cmpsl
cli
mov
sub
mov
fistl
call
popf
js
roll
xchg
in
xor
sti
in
push
dec
pop
pop
push
or
ret
lcall
or
pop
scas
add
ds
mov
and
and
inc
adc
clc
sbb
xchg
out
push
push
cmp
sbb
pop
call
shrb
testl
jg
pop
mov
and
movsl
sahf
rorb
fwait
xor
lock
pop
cli
mov
shll
rolb
push
xorb
jecxz
fstpl
mov
pop
jp
test
mov
xchg
xchg
cwtl
xchg
xor
adcb
mov
jno
int
inc
ret
nop
test
sti
inc
and
fstpt
dec
and
lahf
mov
push
sbb
sub
fisttpll
sbb
lcall
fxch
shll
sub
xor
mov
and
test
imul
cmpb
sbb
xchg
loope
fisubrs
mov
cmp
sub
insb
in
cmp
pop
insl
mov
dec
rcl
frstpm(287
jp
sub
dec
std
push
sbb
jl
movsb
movl
inc
add
mov
cmc
incl
mov
mov
adc
dec
push
push
pop
loopne
icebp
cmp
push
xchg
or
jmp
cmp
fists
pop
xchg
dec
rcrb
push
adc
movsl
loopne
inc
xlat
outsb
loopne
mov
mul
adcb
add
adc
push
je
pop
pop
add
icebp
dec
jnp
mov
xor
fs
icebp
mov
out
popf
push
nop
xchg
xchg
cmp
cmp
mov
xchg
les
jp
cmp
addb
lahf
jnp
and
mov
mov
rcrl
in
cmp
mov
sbb
sub
lahf
bound
pop
or
xor
pop
inc
sbb
test
rclb
xchg
ror
test
dec
push
dec
push
cmp
jns
ret
stos
inc
ret
mov
mov
mov
data16
std
fld
das
inc
fnsave
add
stc
xor
movsl
xorps
sub
pop
add
pop
int3
inc
sbb
xor
mov
xchg
int3
add
or
xchg
sbb
out
pop
mov
imul
pop
loope
add
aad
subl
push
xchg
repnz
std
je
mov
int3
dec
les
arpl
popa
mov
cmc
inc
insl
mov
add
cmc
je
xor
lahf
enter
in
mov
data16
fsubrp
test
add
pop
lods
push
cmp
mov
or
xchg
rcrb
pop
push
mov
push
das
mov
stos
mov
cld
jbe
loopne
repz
jmp
andb
xchg
xor
pop
fwait
sub
cmp
cmc
push
jnp
mov
adc
stos
dec
orl
aam
out
shll
sub
adc
das
dec
cltd
cmpsb
lods
xchg
mov
aas
jnp
mov
dec
cmp
or
jp
mov
dec
gs
icebp
jl
push
enter
int3
pop
lock
cltd
pop
pop
fldenv
xor
scas
cwtl
cmp
out
int3
sbb
dec
ret
orl
push
mov
mov
or
or
loope
test
popa
pushf
xchg
xchg
sub
jno
or
aas
push
rorl
notl
repz
les
lcall
push
adc
mov
push
jo
jo,pn
mov
cli
cld
adc
test
jge
mov
loope
sub
push
test
cmp
jecxz
iret
jmp
enter
lcall
sti
jecxz
xchg
add
push
xor
lea
scas
jg
std
push
das
ret
and
pop
in
xor
jecxz
addb
mov
imul
xor
out
mov
xchg
test
rcll
cmpsl
sub
fwait
push
sub
rol
xchg
into
adc
aas
aam
adc
ljmp
pop
inc
in
out
xchg
imull
and
movsl
inc
push
dec
sub
mov
pushf
jle
pop
jnp
fdivs
add
and
cmc
push
out
mov
jmp
sarl
into
fsubl
imul
dec
lock
fcoml
xchg
outsl
mov
stc
rcl
iret
xor
or
inc
mov
sub
push
xor
incl
jns
pop
push
xchg
inc
inc
sub
xchg
mov
movsl
repnz
subb
insb
add
testl
mov
jo
add
rcll
mov
roll
lret
test
xsaveopt
cmp
and
rcrl
xlat
mov
add
mov
shr
pop
inc
imul
out
push
fidivl
imul
dec
sub
mov
xchg
fcmovu
jecxz
lret
popf
aaa
jge
sahf
add
daa
aam
and
or
ror
test
js
pop
mov
cwtl
sahf
pop
fs
sti
test
mov
ja
pusha
xchg
outsw
out
push
int3
push
mov
test
sbb
mov
inc
int
jae
cmp
out
adc
popa
ret
out
aaa
jp
rcr
lea
or
cmpsb
sub
adc
cmp
push
int
pop
div
jne
jl
ror
pop
sub
js
daa
mov
mov
sbb
pop
sub
push
filds
mov
mov
mov
inc
icebp
jns
cmp
fcomps
and
sbb
mov
mov
dec
iret
in
test
mov
adc
mov
xor
xlat
jle
sahf
inc
inc
or
addr16
and
sub
mov
xchg
daa
gs
sti
pusha
pusha
xor
cmp
push
scas
xor
jl
in
subl
adc
cmpsb
xchg
cmpb
pop
inc
push
and
mov
test
int
cld
repnz
jae
addr16
sbb
call
jns
add
add
movsb
pusha
fwait
outsb
push
mov
shlb
cltd
xchg
stc
rcl
sub
mov
scas
cmp
push
movsb
xor
sarb
push
aam
xor
arpl
or
mov
mov
movsl
xor
movsl
out
adcl
cltd
imul
pushl
xchg
rcrl
sbbb
and
sub
iret
pusha
xor
sub
cmp
add
into
in
cs
cs
ret
int
add
adc
pusha
ret
jecxz
int3
std
lods
fistpl
push
dec
rorb
xor
sub
addb
loope
xchg
lods
cld
pop
shlb
out
sbb
sub
shlb
repnz
fldenv
mov
repnz
pop
mov
sub
out
jp
cmp
jo
and
mov
cld
mov
mov
sub
xchg
or
mov
insb
push
int3
pop
or
pop
cli
lds
test
xor
push
and
leave
pop
jle
push
mov
ljmp
lods
fadd
jbe
xchg
mov
push
movsl
xchg
fdivrs
call
ret
lods
sub
cmp
sub
data16
xor
mov
pop
incb
nop
and
jmp
or
inc
popa
lea
dec
inc
inc
xchg
push
into
fwait
mov
fstps
mov
sbb
das
mov
into
jae
outsl
insl
add
fs
xorb
jne
xchg
nop
call
scas
mov
inc
xchg
shl
cmp
shr
test
bnd
push
ja
pusha
mov
out
cmpsl
lcall
mul
test
mov
cmp
xor
dec
push
jne
xchg
test
jge
mov
dec
xchg
or
loop
cwtl
xchg
inc
out
xor
lret
sub
xchg
mov
sahf
stc
scas
jecxz
fstpt
adc
jl
inc
test
in
add
stos
jns
sbb
loope
enter
cmpsl
adc
xchg
sub
jg
mov
mov
into
inc
xchg
dec
mov
sub
inc
roll
adc
cmpsl
test
jecxz
outsl
out
or
shr
lcall
xchg
test
dec
sahf
xlat
lods
dec
sahf
aaa
fstps
call
xor
cmp
mov
xchg
icebp
jnp
jb
inc
xlat
movsl
mov
dec
test
lds
jo
rcrl
inc
xlat
sbb
add
ljmp
adc
mov
adc
push
popa
xchg
push
popf
jmp
inc
push
xchg
pop
push
js
std
adc
cmp
js
cli
daa
xchg
inc
jne
popa
leave
sarl
inc
int
inc
test
ret
and
les
movswl
pop
xor
lods
pop
mov
push
stos
push
add
imul
jmp
sti
hlt
push
pusha
mov
sub
push
paddq
sub
pop
or
rorb
in
push
fsubs
out
popf
lret
or
aas
mov
in
and
xchg
mov
rcrb
filds
cli
pop
push
mov
jnp
fwait
aaa
and
out
fs
fists
push
push
adc
jmp
pop
jmp
stos
mull
jnp
sar
and
xor
addr16
and
pop
data16
mov
jle
mov
inc
inc
imul
adc
aad
negl
adc
imul
push
pop
movsl
insl
hlt
cmp
jecxz
fldenv
call
mov
jnp
aaa
dec
push
in
enter
jmp
mov
cmc
sbb
jmp
imull
in
outsl
jmp
subb
lret
cwtl
ficoml
cmp
fcomps
push
dec
test
dec
dec
push
mov
xor
fmuls
cmpsl
pop
push
pop
movsl
mov
jnp
jle
jp
xlat
hlt
aaa
and
sub
out
arpl
fnstenv
fiaddl
jmp
xchg
mov
cmp
in
mov
sbb
pop
inc
outsl
jae
inc
lret
xchg
mov
jae
add
push
mov
cli
lock
xor
dec
xor
int
roll
pop
inc
daa
js
jae
lds
in
cmp
in
loope
je
sub
std
xchg
pop
mov
loop
jnp
cld
bound
add
loop
mov
or
ret
mov
fwait
ret
or
adc
mov
pop
inc
lds
fwait
and
inc
faddl
mov
pop
adc
mov
push
or
add
test
push
sahf
rcl
imul
sub
jbe
loop
xor
stos
and
xlat
scas
lret
in
mov
lds
inc
or
fmull
or
mov
ja
inc
push
vpcmpeqw
cltd
sbb
mov
xor
ret
adc
push
leave
fsubrs
cmc
or
fs
xchg
icebp
bswap
xchg
iret
pop
inc
enter
sub
sbb
xchg
shll
sbb
add
iret
xchg
inc
repnz
cmp
inc
jg
adc
loop
adc
sub
jmp
call
adc
pop
push
jbe
hlt
xchg
inc
lret
or
les
push
repnz
pop
mov
cmp
xor
mov
and
aaa
imul
orb
movsl
jno
adc
ljmp
adc
dec
sub
mov
das
xchg
sub
sbb
inc
test
push
icebp
fcoms
dec
in
call
jmp
lds
sbb
sbb
mov
pop
lock
jae
testb
jmp
push
aas
xor
mov
in
jl
pop
and
mov
flds
jmp
jns
loopne
mov
mov
jg,pn
add
mov
int
loope
jg
mov
pushf
jae
xchg
cmp
xchg
mov
push
jge
sub
pop
icebp
jmp
clc
cmpsb
fdivrs
mov
fimull
mov
and
sub
dec
gs
jns
mov
jl
mov
fdivl
into
sub
ja
popa
scas
je
fwait
adc
ret
push
mov
add
dec
fs
out
cmp
fldenv
pop
xor
xchg
adc
pop
inc
dec
in
jg
addr16
or
lods
push
hlt
jge
fdivrl
dec
dec
addr16
daa
adc
lea
dec
mov
xchg
mov
xchg
jae
fmuls
cmp
dec
jg
mov
cli
xchg
shlb
bound
mov
lret
add
push
mull
pop
adcb
pop
mov
pop
repnz
inc
jno
fidivrl
imul
mov
push
jae
in
or
mov
repnz
mov
xlat
pop
push
dec
add
fnsave
sub
rorb
fistps
sub
cmpsl
add
jle
adc
lock
cmp
jle
pop
pop
cli
outsb
cmp
add
bound
loopne
jns
out
lock
arpl
and
cmpsb
in
jge
sub
addr16
xor
fisttpl
cmp
lods
cmp
in
push
mov
mov
mov
jl
les
clc
rcrl
inc
scas
out
cwtl
push
jae
loope
and
bound
adc
cmpsb
sub
mov
pop
push
xor
sti
in
mov
iret
fdivl
push
and
movsl
jmp
cmp
ret
stc
leave
test
popf
sbb
jbe
popf
mov
in
and
scas
and
adc
push
and
jno
imul
fistl
jecxz
es
js
ror
xchg
mov
roll
sahf
sub
sub
scas
pushf
or
out
popf
out
outsl
or
movsl
push
mov
ret
pop
xchg
mov
dec
sub
jecxz
push
sub
adc
mov
jecxz
int3
shrl
fsubl
aaa
flds
cmp
push
sbb
iret
or
adcl
sbbl
mov
jns
lret
pushf
mov
nop
add
arpl
push
jmp
jp
mov
mulb
mov
add
mov
lods
insb
mov
stc
outsb
ljmp
xchg
daa
push
jns
mov
adc
xchg
imul
sub
jb
movsl
sbb
push
add
fadd
mov
mov
stos
cwtl
push
sarl
pop
sub
repz
cld
pop
xchg
lahf
and
std
or
xchg
ljmp
test
sbb
push
fimuls
push
outsb
mov
incb
lock
mov
sbb
lods
cmpb
in
test
dec
addl
js
setl
insl
dec
push
pop
daa
inc
mov
cld
xchg
add
jne
and
dec
out
add
cltd
cs
xchg
out
jb
shl
std
push
popf
and
pop
xor
orb
ds
sub
int
push
xlat
xchg
fldt
dec
int3
pop
loope
imul
flds
sub
pop
cmp
dec
iret
mov
mov
xchg
dec
popa
shlb
movsl
imul
mov
dec
adc
sub
sbb
mov
insb
and
pop
push
mov
std
sub
and
sub
mov
int
imul
cwtl
sub
lods
mov
cmpsb
cld
das
dec
cmpsb
aas
mov
imul
ficomps
and
mov
sahf
movsl
aas
push
dec
lds
inc
idivb
ds
in
or
ret
in
leave
dec
es
ljmp
imul
mov
ret
push
in
sub
lret
add
or
testl
dec
les
push
into
aaa
hlt
fs
add
adc
outsl
fs
imul
push
sbb
xor
das
add
mov
and
add
mov
mov
cltd
pop
bound
jbe
push
or
and
adc
push
xchg
cmp
jmp
mov
push
test
mov
sbb
push
mov
push
int
pop
dec
sub
jb
roll
pop
mov
or
pop
adc
push
inc
push
adc
mov
pop
push
ja
ds
in
out
jae
jbe
sbbb
push
adc
jmp
sbb
pop
jae
sti
cli
mov
ror
fadds
cld
cmp
aad
pusha
jle
mov
lock
xor
jge
loop
icebp
pusha
gs
inc
test
jae
stos
or
inc
lock
pop
xchg
shrb
xor
ja
dec
icebp
mov
xchg
lret
inc
cmp
or
mov
ljmp
ror
aaa
cmpsb
cmpsb
icebp
cmpsl
jp
inc
and
or
outsl
mov
inc
movsl
vmovaps
iret
in
xor
xor
roll
mov
sub
loop
dec
fnop
pop
test
and
jecxz
dec
iret
jo
pop
xchg
shrb
dec
or
das
imul
mov
das
and
dec
mov
sbb
push
in
testl
outsb
popf
aam
out
stos
mov
push
fnstsw
in
push
add
mov
data16
mov
push
sub
jle
jo
xchg
push
data16
pusha
sub
xor
mov
push
lock
in
sbb
sub
popa
fcomp
mov
shlb
movb
pop
and
mov
mov
test
addr16
or
dec
aad
mov
mov
scas
sbb
adc
fcmovnu
mov
xor
sub
aad
pop
mov
popf
mov
bound
insb
push
das
sbb
mov
fldl
pushf
and
jbe
inc
or
mov
pushf
loop
mov
ret
pop
xchg
xchg
stos
and
mov
decl
jnp
or
das
outsl
or
imul
jo
sbb
lods
cmp
je
pop
in
adc
xchg
sub
outsl
fdiv
add
repz
mul
or
stos
and
fs
lcall
jge
out
sbbb
fmulp
and
dec
sahf
push
leave
jp
lret
add
gs
sbb
imul
or
push
out
adc
add
and
outsb
jno
pop
inc
pusha
mov
data16
cld
in
xchg
jle
jnp
into
mov
jnp
add
sahf
push
inc
push
or
dec
inc
in
js
xor
add
xor
mov
pop
or
and
and
dec
mov
lock
aad
mov
jg
test
cli
push
shrb
add
mov
shr
test
mov
sti
ljmp
fbstp
fldl
in
pop
shlb
mov
or
dec
xchg
movsl
and
jns
adc
cmpl
xor
push
xchg
movsl
aam
mov
inc
sti
enter
pop
sbbl
fs
and
mov
sub
mov
test
js
fs
lds
shlb
shr
jns
test
ret
mov
scas
xchg
mov
out
stc
clc
mov
dec
insb
mov
jl
adc
icebp
popf
mov
push
mov
sbb
jo
lods
sub
xlat
jl
mov
lcall
add
mov
xchg
xor
std
sahf
mov
mov
movsb
fcoms
and
imul
mov
sbb
and
loopne
mov
out
xor
andl
pop
insl
frstor
adc
outsl
pop
roll
repz
adc
jb
mov
loope
mov
xchg
and
outsw
cmc
pushfw
adc
jmp
push
xchg
sub
dec
enter
rol
js
xor
ficompl
ret
mov
int3
fisttpl
stos
sbb
in
or
jmp
add
mov
xor
push
insb
jmp
inc
inc
cwtl
and
mov
mov
jo
rolb
jae
inc
cs
cwtl
test
jbe
add
fmul
or
adc
jg
leave
cmc
loopne
inc
jmp
dec
shll
xchg
jp
lods
xchg
mov
mov
out
mov
pop
lods
sbb
mov
test
add
push
daa
test
push
sbb
andb
inc
lcall
xor
push
ret
adcl
cmovl
dec
push
jns
push
mov
push
add
sub
scas
aad
lods
sbb
fwait
add
testb
fcomps
adc
jg
inc
iret
lds
push
pop
jns
xchg
pusha
hlt
lods
negb
dec
call
cwtl
sarl
cld
movsl
pop
jle
xchg
stos
lcall
and
mov
jbe
mov
sub
push
jg
push
iret
add
test
movsl
push
movsl
fs
xchg
ret
cmc
pop
fcompl
inc
fbld
pop
mov
mov
aad
outsb
mov
mov
rolb
pop
push
in
adc
add
xor
movsb
push
mov
imul
shrl
testl
filds
insl
das
nop
xchg
mov
or
lret
jb
xor
out
std
hlt
cmp
jecxz
or
jbe
cmc
mov
and
pop
inc
pop
popa
mov
sub
add
loopne
mov
insl
inc
pushf
pop
xlat
sbb
std
push
popf
xchg
es
imul
ret
dec
jbe
add
out
mov
inc
fs
jge
xchg
lret
in
loopne
jnp
add
dec
data16
add
mov
pop
jecxz
cmp
call
mov
sub
dec
outsl
xor
pop
sub
xchg
jo
xchg
dec
inc
repnz
xor
mov
mov
mov
jmp
xchg
pop
adc
push
adc
call
sbb
dec
ds
sub
les
test
jnp
hlt
mov
add
les
inc
jmp
mov
cmp
mov
pop
test
sbbb
call
daa
fisubrl
ds
mov
inc
idivl
or
lock
mov
push
adc
cmp
cmp
push
adc
adc
dec
mov
ficompl
out
loopne
out
inc
and
jge
cmc
ja
mov
data16
lret
into
adc
inc
daa
cli
mov
sbb
pop
paddsw
in
xor
cmp
in
sub
ljmp
nop
lret
dec
into
loopne
pop
negl
std
sub
add
jle
inc
pop
das
sub
mov
mov
es
popf
lret
xchg
into
xchg
mov
mov
mov
push
jns
add
adc
jle
fadd
mov
xor
lea
mov
push
or
test
jg
sub
js
in
std
mov
mov
rolb
aad
imul
push
movsl
insl
call
jae
ja
xlat
out
lods
rcrb
xchg
cli
xor
xchg
mov
andl
mov
mov
mov
inc
push
dec
test
add
aad
std
dec
xor
fistpl
in
mov
push
inc
das
jno
mov
jl
mov
xchg
scas
mov
ljmp
sbb
int3
int
sbb
call
jo
pop
in
cmp
push
inc
fwait
jne
adc
cmp
sbb
lods
pop
add
out
loopne
das
sbb
pop
cmpsl
or
lea
leave
mov
sbb
dec
or
sbb
pushf
bound
adc
shrl
popf
sbb
fmuls
int3
aad
sub
xchg
notb
push
inc
push
push
daa
dec
and
bound
shl
neg
xchg
repz
mov
in
scas
xchg
sbb
sbb
idivb
dec
les
or
lahf
mov
inc
add
cmp
popf
mov
call
pusha
sub
mov
pop
mov
iret
pop
fs
adc
lods
add
mov
mov
mov
sbb
sub
adc
dec
lock
xchg
cmp
in
into
repz
and
fisttps
jl
jno
xchg
cmp
clc
lds
pop
imul
cmp
mov
mov
addr16
out
sub
lahf
out
xchg
ficoml
repz
dec
or
pop
xchg
cmp
daa
inc
jle
stos
rcrl
cmp
ljmp
stos
les
test
jge
bound
push
std
push
fdiv
dec
sub
sub
div
push
pop
sbb
push
jle
leave
push
sti
or
cs
ja
rolb
jle
jne
sub
loopne
test
push
mov
sti
clc
imul
xor
into
adc
sub
les
pop
das
in
or
push
out
cmpsb
ja
test
je
fsubl
cltd
mul
pslld
fisttpl
add
push
inc
addr16
sbb
outsb
jnp
popa
scas
adc
xor
jecxz
add
push
daa
dec
js
and
mov
push
mov
imul
lods
sub
cmpsb
and
daa
mov
pop
mov
sub
and
out
sub
sahf
test
xchg
fwait
mov
jae
mov
enter
inc
cmp
enter
mov
loopne
notb
cli
mov
pop
loop
adc
ja
icebp
pop
mov
roll
lahf
pop
xchg
mov
out
cmp
cmp
in
xchg
ja
push
inc
popa
fwait
xor
es
and
jg
cmp
out
cmp
sarl
cld
add
ret
out
xchg
add
int3
and
test
stc
push
addr16
sub
sub
pop
add
jp
adc
nop
inc
cmp
mov
or
js
hlt
movsb
stos
mov
sbb
mov
mov
clc
lds
cmovg
push
repnz
mov
push
popf
pop
mov
cmc
js
test
cmpsb
decb
imul
adcb
sub
movsb
sub
push
xor
movsb
adc
and
hlt
aam
xchg
jne
out
fsts
mov
mov
cli
and
decl
daa
or
int
and
mov
push
or
jg
cltd
cmpl
inc
sbb
dec
jbe
adc
mov
mov
xchg
xor
inc
adc
out
lods
jecxz
cmp
add
cld
fnstenv
or
cwtl
xlat
push
ret
jae
dec
in
cmc
push
sub
std
and
cmp
adc
or
sahf
or
add
dec
and
ret
int
out
push
add
sbb
or
mov
rolb
mov
gs
mov
jl
cmp
insb
loope
dec
or
aad
jmp
out
test
jmp
inc
scas
mov
and
push
fsubrs
fldcw
test
cmc
fisubrl
movsl
lahf
outsb
jle
iret
push
lea
sbb
xchg
push
adc
aam
dec
dec
adc
out
repnz
mov
pop
iret
pop
mov
cmp
and
or
cmc
mov
insl
push
add
xchg
or
sub
mov
cmp
push
icebp
jecxz
push
mov
jb
sbb
mov
imul
into
les
push
sbb
mov
nop
punpckhdq
jbe
inc
mov
leave
sub
test
mov
xor
adc
fwait
jbe
insb
xchg
sarl
mov
std
cmpsl
into
sbb
jecxz
jbe
mov
mov
cld
mov
cmpsl
ss
jecxz
or
sbb
push
sbb
clc
ret
or
add
mov
movsb
inc
xor
xchg
mov
xchg
movsb
sar
sahf
dec
ljmp
ds
mov
lea
imul
cmpl
jge
vaddsubps
mov
mov
sub
out
and
cltd
sahf
scas
push
or
jmp
inc
loop
mov
push
mov
dec
cmp
sbb
fs
scas
mov
sbb
sbb
imul
push
aas
xchg
sbb
out
leave
push
cmpl
ja
inc
in
xchg
add
cmpsl
mov
addr16
jg
xor
xlat
mov
mov
or
imul
cld
leave
cmp
cmpsb
hlt
andl
adc
lock
sbb
dec
push
jne
mov
xchg
jmp
jne
mov
mov
pop
fcomps
outsb
inc
out
ret
fisttpll
sub
inc
adc
cwtl
shl
xchg
adc
cltd
into
and
bound
jmp
popf
daa
and
cmpsb
xor
in
or
or
lret
mov
cmp
loopne
jne
mov
cmp
jae
and
mov
xchg
inc
inc
jb
das
or
xchg
cli
mov
add
cmpsl
cmp
cli
cmpb
ret
xor
shrb
xlat
push
int
lret
insl
dec
inc
in
dec
mov
cmp
daa
scas
push
outsl
mov
push
iret
les
mov
mov
mov
aad
loope
mov
dec
or
or
lock
inc
adc
aaa
imul
adc
movsl
sbbl
mov
sbb
xlat
into
iret
xchg
insl
cmp
aaa
inc
outsb
ljmp
test
iret
jnp
lret
mov
jbe
imul
xor
ja
dec
or
jnp
mov
test
int3
fiadds
fsts
xchg
outsl
inc
mov
mov
inc
pusha
xlat
push
shll
sub
add
cmpsb
adc
andl
or
jle
or
out
push
sbb
out
adc
std
mov
dec
adc
add
js
subb
aad
jl
rcr
mov
mov
jge
pop
cltd
mov
jno
mov
stos
inc
nop
jno
inc
test
pop
leave
push
mov
clc
push
cmp
ljmp
icebp
fnsave
js
pusha
jmp
lea
mov
and
cmpb
hlt
in
cmp
ja
out
xchg
mov
out
jg
imul
xor
xchg
dec
ljmp
cmp
nop
lcall
rol
sti
ja
fidivrl
xlat
hlt
jbe
int3
in
ret
icebp
push
cmp
sbb
iret
jns
cs
pop
adc
push
out
stc
jae
mov
lahf
repnz
test
sbb
outsl
movsl
or
mov
push
rorl
mov
subb
mov
pop
push
mov
mov
repnz
jmp
mov
mov
das
jge
mov
add
cmpsl
dec
and
push
out
gs
jns
js
aaa
sbb
loopne
add
cmpsl
cli
scas
xchg
and
or
jns
xor
imul
stos
or
ss
addl
jno
in
cli
and
mov
insb
jecxz
mov
sbb
dec
stos
push
jle
stc
scas
xchg
pop
xor
xchg
adc
mov
adc
cld
stc
cs
int
sub
jmp
loope
lods
scas
sahf
sahf
mov
push
cmp
in
and
adc
xor
add
xchg
das
sbb
cltd
mov
and
adc
adc
sub
popf
ss
das
xlat
jecxz
movups
popa
and
and
fsubrl
cmp
inc
out
cwtl
pop
jmp
fistpll
sub
push
push
cmpsl
xchg
push
xchg
cmp
jl
jl
ss
xchg
ret
pop
cmp
mov
pop
cmp
sti
mov
arpl
sarl
pop
cmpsb
jnp
in
repz
jge
pop
inc
xchg
pop
push
mov
imulb
mov
lds
movsl
jecxz
jae
clc
mov
popf
insl
push
xchg
push
lock
sbb
stos
xchg
xchg
jb
call
and
movsl
xlat
pop
sub
sub
mov
cld
cltd
cmpsl
xchg
push
push
and
add
cmpsl
mov
xor
jmp
movsb
test
jbe
pop
dec
pop
ja
add
inc
lcall
and
mov
sbb
insl
shll
add
pop
clc
movsl
sarl
push
dec
add
daa
ret
dec
xchg
les
sahf
clc
xchg
ret
dec
dec
pop
test
test
pop
xchg
mov
das
in
mov
mov
adc
mov
lret
sbb
sahf
mov
jp
inc
mov
imul
inc
pushf
jecxz
sarl
mov
sbb
push
xchg
cwtl
cld
daa
push
test
sbb
mov
repnz
and
scas
data16
lods
add
int
pop
sub
mov
xchg
ret
push
vpcomuw
dec
or
jne
lock
mov
rep
repnz
lods
test
les
lds
idiv
fucomip
sbb
mov
mov
cmp
add
xor
inc
lods
add
ss
aad
or
std
xchg
inc
sub
sti
repnz
inc
daa
dec
sbb
es
cmp
xor
repnz
fsub
cmp
out
mov
sti
mov
aaa
jg
repnz
les
movsl
pop
movsl
fnsave
imul
int
push
xorb
lahf
pop
ja
test
scas
lret
xchg
shll
adc
dec
or
clc
mov
cmpsb
sub
je
loope
clc
clc
pusha
mov
cmp
imul
mov
push
cmpsb
in
mov
jns
fsubrl
add
imul
insb
cmp
scas
outsl
fsubr
and
xchg
jge
or
lret
in
push
push
mov
mov
pop
or
xchg
add
sti
pushf
xor
push
ljmp
pop
jmp
pop
push
addr16
pop
add
sti
inc
dec
xor
xchg
adc
cmp
or
incl
dec
ss
ret
int3
mov
lods
xorb
in
push
jo
jg
push
fxam
xorl
xor
xchg
sti
or
bound
sbb
cmc
pop
mov
aas
mov
gs
lahf
cltd
mov
clc
add
fdivs
mov
jmp
and
mov
bound
jo
popf
jnp
or
mov
cwtl
popf
mov
pop
call
mov
push
inc
sbbb
or
xchg
pop
mov
push
push
popa
cmp
jns
fdivrl
xor
dec
xchg
inc
lret
xor
push
jg
add
add
lcall
cld
sub
inc
push
push
mov
sbb
jb
mov
iret
push
test
sbb
pop
and
fisubrl
out
mov
add
sti
mov
mov
xor
stos
int3
and
xor
mov
or
scas
push
arpl
inc
jae
xchg
or
aas
pop
mov
pop
bound
clc
xor
jo
popw
shrl
inc
ds
gs
xor
in
xor
pop
mov
dec
mov
add
sub
ss
xchg
fsts
and
ffreep
les
fimull
in
adc
outsb
sbb
jge
jge
inc
mov
and
add
imul
add
fs
jecxz
sub
xchg
sahf
adc
mov
xchg
sahf
push
pop
pop
inc
mov
mov
iret
push
flds
sti
adc
jmp
lahf
sbb
cmp
data16
lods
xchg
cmpl
rol
test
pop
out
jg
push
mov
fwait
paddusw
ljmp
cmc
cmp
inc
fsubrl
mov
dec
jle
lahf
pop
xor
sub
xchg
imul
scas
pop
in
test
int3
lock
shll
dec
data16
add
pop
add
sub
dec
pusha
imul
lds
xchg
dec
bound
dec
push
mov
scas
and
xchg
xor
out
testl
mov
aas
or
aam
sbb
xchg
sub
xchg
sbb
imul
mov
movsb
inc
pop
jge
mov
popf
aam
ljmp
ds
leave
xchg
lods
pop
and
and
push
jne
inc
mov
jge
push
lret
cmp
pop
test
lret
pop
test
stos
pushf
fdivp
sub
out
inc
lods
or
nop
lea
cwtl
push
or
lock
pop
aas
dec
push
or
push
or
lret
shlb
pop
bound
xor
loop
xchg
mov
cmp
out
sti
out
sub
stc
stos
fldl2e
pminub
cli
or
pop
test
hlt
xlat
fdiv
addb
or
shlb
xor
xchg
xchg
sbb
stos
xor
dec
lds
xchg
loop
mov
mov
xor
push
bound
shrl
sbb
xchg
cli
inc
cmp
sub
insb
scas
fstpt
pop
pop
popf
push
lret
cmp
add
mov
into
and
mov
add
in
ljmp
lcall
bound
repnz
repz
loopne
stc
jge
mov
mov
or
fwait
loop
mov
pop
roll
and
ret
xor
jmp
enter
mov
mov
cmc
das
repnz
mov
dec
pop
jno
cmp
clc
in
stos
lahf
mov
outsl
fwait
inc
push
pop
push
shlb
fnstenv
jbe
jp
fstps
fmul
dec
dec
pop
dec
mov
xchg
outsl
mov
aaa
add
fbstp
fildll
in
xchg
sbb
sub
lds
and
mov
mov
ja
xchg
mov
dec
fstps
daa
or
orl
cli
mov
add
mov
cltd
push
add
jge
aaa
ret
mov
push
and
in
fisttps
mov
insl
dec
xchg
stos
cmc
mov
je
testb
or
mov
push
leave
movsl
shl
xor
xchg
mov
mov
loope
jne
lods
xchg
ljmp
lods
lahf
in
push
in
dec
aaa
sbbl
mov
add
or
and
clc
dec
cmc
dec
loope
movsl
aad
cmpl
cltd
mov
movsl
insl
js
jb
out
fistpl
jecxz
in
or
sbb
cmp
lods
add
and
xchg
sbb
call
stos
mov
cmp
insl
test
aad
cvtdq2ps
stc
roll
cmp
cld
and
ror
xchg
push
fildll
cmpsl
and
pop
add
xor
lea
dec
or
cmp
adc
aas
mov
jne
aad
sbb
sti
dec
movsl
mov
mov
sub
scas
pop
fists
mov
cltd
loop
jae
pop
jmp
ds
mov
inc
aas
fisubs
dec
lds
xor
and
sub
mov
pop
push
cmpsl
mov
xorb
insl
mov
arpl
pop
add
test
jmp
mov
xchg
push
sub
stos
adc
daa
mov
xchg
mov
das
cmc
movsl
mov
dec
inc
mov
adc
inc
mov
shrl
mov
fsubs
adc
mov
pop
xchg
mov
or
mov
das
cmp
into
orl
daa
inc
inc
scas
xor
sbb
repnz
jae
out
cs
lds
ljmp
xor
jmp
faddp
and
aas
hlt
jae
daa
mov
inc
ljmp
decb
pop
push
fs
pop
imulb
lods
or
xchg
jecxz
mov
out
pop
push
sub
adc
mov
fnstcw
mov
aaa
out
cmpsl
cli
ret
ja
imull
add
mov
and
pop
adc
inc
push
fs
and
flds
sarb
lock
sbb
call
or
inc
test
hlt
sub
shrb
out
enter
pop
inc
jmp
dec
jp
xchg
pop
cmp
or
adc
xchg
fmul
fisttpll
call
adc
sahf
inc
shrb
movsl
mov
lods
lock
xor
nop
divb
outsb
sub
aam
dec
pop
push
lods
xor
shl
mov
aam
inc
inc
jb
inc
mov
fcoms
xor
nop
adc
insb
pop
or
push
sahf
aam
aad
pop
or
jo
dec
das
sahf
ljmp
and
stos
xchg
pop
shrb
in
out
or
dec
stos
mov
icebp
shll
pop
inc
sub
out
pop
push
mov
addr16
lea
or
mov
push
std
push
push
test
mov
test
jl
add
push
fmulp
push
stc
les
or
cmp
xchg
je
pusha
outsl
jae
dec
adc
pop
jo
sbb
xchg
outsl
push
or
cmp
push
add
push
dec
sahf
cmp
jle
pop
push
xchg
dec
filds
cs
cmc
jecxz
adc
mov
dec
and
idivb
pop
push
fcmovne
cmp
mov
out
loopne
fnstsw
pop
xor
jl
lea
adc
in
and
cmpsl
out
in
mov
and
sbb
xchg
fmuls
test
outsl
push
popf
shll
mov
adc
inc
enter
arpl
adc
stos
dec
and
mov
jbe
mov
in
lods
ljmp
mov
mov
stos
fsubrs
aaa
loopne
xchg
lods
push
ret
movl
dec
rorl
or
enter
enter
shl
mov
push
shll
int3
or
add
jb
out
cs
test
cmc
inc
jmp
daa
jae
sub
movsb
mov
mov
pop
add
inc
mov
inc
in
mov
push
lret
mov
lret
push
cmp
fdivrp
xchg
out
sub
cmp
xor
pop
jnp
loope
orb
movsl
mov
mov
ret
push
mov
push
push
push
sbb
test
ret
mov
in
push
xor
jbe
das
jge
andl
mov
add
ficompl
fidivrl
xlat
sbb
adcb
jecxz
jge
std
cmp
test
cmc
and
cmp
pop
out
pop
add
and
das
jp
popa
ss
pusha
xor
mov
mov
push
fs
lock
mov
jns
pop
test
jnp
or
mov
push
jge
add
jno
imul
cmp
ljmp
aam
repz
mov
jle
adc
mov
xchg
and
jge
enter
fwait
movb
mov
in
ljmp
mov
inc
out
aam
pushl
fs
addr16
das
imul
sbb
call
out
inc
sbb
inc
mov
jle
cmp
pushf
out
psllq
in
cmp
push
jnp
jmp
test
and
cvtps2pi
push
jge
dec
jmp
loope
int
das
cmpsl
fmulp
or
hlt
mov
test
ret
mov
cmp
imulb
lods
sbb
dec
movsb
in
fcoms
push
aad
call
xchg
pop
lret
or
clc
movsl
stos
sub
jecxz
push
jle
mov
ss
int3
mov
or
pop
call
cli
cmpsl
mov
insl
lret
inc
pop
pop
mov
dec
or
jmp
and
das
testb
jl
dec
add
cld
push
cmp
mov
loopne
cmp
arpl
aas
xor
in
icebp
mov
xchg
inc
shll
mov
xor
cmpl
ss
add
and
ret
js
or
and
call
stc
out
jno
lahf
push
push
xchg
pop
pop
mov
mov
jg
push
lds
mov
cmpsl
scas
jg
push
mov
int
mov
cmp
fimuls
je
add
push
aam
inc
xchg
xchg
sti
aad
inc
out
pop
jmpw
lock
in
scas
push
jg
mov
dec
push
ds
push
dec
stos
sbb
int3
sahf
addr16
sbb
jg
rcl
cmp
push
mov
xchg
mov
lods
inc
dec
or
and
nop
cmp
inc
mov
lcall
xchg
repz
sahf
pop
fdivrl
or
in
mov
add
xchg
push
lret
add
stos
into
dec
and
cmp
push
push
add
sub
xchg
or
rep
mov
push
dec
in
push
lds
cli
rcr
inc
push
add
dec
jbe
or
in
iret
sbb
cld
gs
pop
pop
sysenter
add
incl
mov
mov
nop
inc
imul
andb
sub
mov
pop
mov
xchg
cltd
jg
and
jo
fsubs
cmpsb
jns
je
cmc
add
cmp
sub
aam
js
stos
fwait
push
imull
fs
pushf
ret
loope
shrl
xchg
jmp
sbb
xor
or
push
mov
fcomps
pop
outsb
push
xchg
cmp
jge
inc
stc
dec
cwtl
loope
shr
xchg
add
arpl
cmp
jnp
xchg
ret
xchg
sbb
adc
push
jp
push
pop
lret
je
mov
mov
mov
sbb
pop
repz
outsl
jno
psrlq
jnp
cs
lret
addl
in
mov
jmp
jb
dec
loope
lods
mov
lea
push
sub
loop
sbb
add
and
push
pop
inc
pushf
aam
pop
int3
dec
arpl
popf
lea
movsl
inc
aaa
pop
ljmp
add
aas
repnz
inc
lods
loop
push
insb
test
push
and
stos
xchg
lcall
mov
push
scas
lods
add
lods
cmp
ja
and
jl
or
sbb
aam
sbb
iret
aaa
jl
movsl
std
aad
nop
add
rclb
and
xor
xchg
mov
mov
pop
jne
jp
ss
negb
and
sub
ja
getsec
dec
loopne
fnclex
sbb
jae
xchg
iret
xor
imul
enter
xor
mov
arpl
insl
dec
add
outsb
pop
or
mov
push
mov
mov
push
pop
shr
jmp
jmp
insl
mov
clc
test
add
clc
or
sarl
rcrl
enter
jne
mov
daa
xor
jge
jle
scas
sub
xor
mov
cld
iret
add
mov
aas
xor
scas
or
pop
aad
rcll
sbb
decb
dec
iret
mov
sbb
mov
or
push
pop
pushf
inc
add
cmp
jge
sbb
bound
ror
pop
push
icebp
sbb
jmp
std
mov
cwtl
push
inc
mov
leave
into
inc
je
push
mov
add
icebp
pop
pop
mov
gs
xor
out
cmpsl
hlt
inc
mov
shr
inc
pushf
and
test
jo
mov
push
xlat
mov
pop
scas
sarl
inc
mov
xor
inc
scas
inc
mov
scas
or
or
adc
dec
sbb
sti
and
pop
push
pop
sub
cmp
mov
and
mov
lret
out
insl
in
sub
dec
rcrl
inc
pop
fldenv
rcll
leave
in
aam
mov
push
fnsave
data16
cmc
dec
cltd
fs
sbb
movsl
ret
in
push
jp
xchg
adc
scas
stos
push
xor
inc
outsl
ja
std
pop
sar
repnz
mov
inc
cmp
out
cs
repz
mov
jmp
xor
push
sbb
dec
dec
jbe
orl
or
dec
xchg
xchg
xchg
call
iret
mov
mov
in
ljmp
jnp
adc
icebp
mov
push
arpl
iret
mov
xor
mov
sub
xchg
js
jnp
cwtl
shlb
add
cmc
add
sbb
xchg
xchg
jecxz
cmc
out
cmpsl
dec
outsl
stc
icebp
pop
je
add
cld
xchg
xchg
mov
and
mov
inc
lods
repnz
mov
cwtl
push
push
mov
mov
push
mov
xchg
stc
dec
movsl
fcomps
out
xor
ret
loopne
ljmp
pop
dec
and
mov
ljmp
jmp
rclb
lods
fidivs
or
jge
aas
aaa
and
daa
movsl
scas
mov
pop
loop
dec
sbb
xchg
xor
sub
je
inc
sti
lods
ljmp
ja
mov
inc
popf
pop
and
sub
cmc
xchg
push
and
pop
cmp
mov
mov
mov
idiv
pop
in
dec
xor
pop
rcr
imull
mov
rcrl
lret
mov
cmp
add
add
push
sbb
mov
pop
inc
sub
in
aaa
xchg
fiaddl
and
stos
inc
xor
push
je
pop
xchg
mov
cli
adc
cmp
iret
scas
xchg
jmp
cmp
jmp
scas
add
cmp
jbe
rep
int
or
cld
cmc
push
inc
test
jo
mov
rcr
lds
xchg
fcoms
xor
inc
or
push
mov
jne
adc
addb
mov
adc
mov
mov
addr16
addb
mov
wrmsr
pushf
jae
ljmp
loop
arpl
in
mov
xchg
sub
sbb
sti
xchg
lods
xorl
xor
in
mov
add
lods
test
xchg
pop
lret
cmp
ljmp
push
sbb
and
ja
push
inc
sbb
dec
jbe
mov
outsl
insl
pop
or
arpl
xor
int3
out
rclb
rcl
lss
xchg
into
ret
mov
jbe
inc
mov
ja
cmpsb
mov
ds
ljmp
sub
inc
addr16
jae
jge
mov
test
mov
pop
fmuls
ret
xchg
pop
pop
or
ficomps
lret
lret
stos
hlt
xchg
sbb
mov
add
fmuls
ficomps
xor
popf
mov
inc
xor
lret
int
fcoml
les
scas
inc
adc
xchg
mov
xor
mov
inc
imul
int3
adc
or
cmpsl
xor
xor
btc
mov
lret
mov
into
dec
xor
aam
and
push
lods
subl
cmp
or
dec
add
inc
outsl
daa
mov
and
in
push
decl
add
jecxz
sahf
sub
mov
xor
sub
scas
push
adc
mov
stos
cwtl
or
mov
jo
sahf
sub
in
adc
int
call
push
nop
into
nop
hlt
shll
pop
cwtl
lods
popf
out
stos
lcall
mov
cltd
push
mov
xor
or
sahf
loop
mov
pop
repz
dec
cmp
je
dec
in
lret
fbstp
repnz
xchg
jge
test
les
sub
and
or
pop
sti
mov
xchg
inc
add
gs
jb
xor
jae
ret
pop
test
test
in
ret
sub
push
lock
sbb
mov
jne
dec
repnz
and
adc
jno
imul
hlt
test
dec
inc
out
out
int
repz
lret
loopne
or
dec
aad
jnp
mov
xchg
pop
lods
push
xlat
push
push
lret
fnsave
lods
loopne
adc
lea
fidivrs
je
sbb
lods
push
xchg
in
inc
mov
test
pop
sbb
sahf
cmc
adc
sub
jmp
ret
dec
mov
ret
daa
dec
and
out
cmp
adc
mov
es
pop
cmpsl
mov
out
push
sti
fsubrs
mov
mov
imul
dec
call
pop
insl
rclb
pop
ret
pop
mov
fimull
cli
mov
rorl
cmpsl
imul
dec
jae
loop
push
sbb
ds
add
fcomi
sub
dec
addr16
lds
repnz
popf
loope
add
lods
dec
jo
out
adc
insb
movsl
in
add
andl
xchg
ljmp
adc
mov
mov
pop
sbb
scas
push
lds
popl
in
mov
pop
inc
mov
aaa
sarl
adc
ss
xor
lock
test
pop
nop
inc
mov
out
fmul
movb
sbb
ret
jbe
add
dec
sub
adc
jnp
fidivrs
out
pop
pusha
les
mov
cmpsl
mov
sub
xor
aaa
out
push
jbe
movsl
xlat
xchg
pop
sbb
inc
xchg
notb
sbb
and
inc
lods
out
fidivl
jl
cmp
add
dec
and
xlat
loopne
pop
das
sbb
xorb
das
xor
inc
sbb
popf
or
pop
mov
sub
push
fst
in
lret
cwtl
cmp
or
daa
mov
cmp
pop
jnp
sbb
lret
push
js
mov
mov
jne
pop
adc
test
dec
mov
jmp
les
inc
xor
pop
sbb
push
jo
insl
movsl
outsl
lods
sub
int
ja
pop
aas
mov
xorb
scas
sarb
add
add
ja
pop
xchg
inc
addb
cltd
cmp
xchg
out
sbb
xorl
popa
hlt
arpl
rcrb
pop
lock
orb
dec
cmp
lds
dec
in
mov
insb
adc
mov
lret
xchg
xchg
push
movsl
cmpsb
mov
xchg
xchg
add
jb
sbb
ljmp
jb
mov
inc
jo
cmpsl
sbb
jmp
dec
jge
mov
inc
lahf
push
mov
fwait
and
aam
sti
xor
dec
jp
cmpsb
aam
or
aaa
cmc
inc
or
bound
leave
shrl
lret
xor
inc
fwait
pop
inc
mov
xchg
fwait
adc
fsubl
xchg
dec
pop
hlt
cmp
push
sub
mov
movsl
jae
cmp
lret
jle
pop
aad
or
fstps
jge
sub
in
bound
dec
fidivl
cmpsl
mov
add
add
sub
and
daa
push
cmp
mov
lods
lods
es
dec
mov
icebp
dec
adc
jo
mov
sub
lods
fdivrl
movb
lods
lods
dec
pop
repnz
sbb
fisubs
jmp
arpl
xchg
bound
dec
sub
or
pop
nop
scas
popa
mov
mov
mov
icebp
daa
iret
aaa
data16
xchg
sbb
fcomp
xchg
push
add
jge
dec
push
mov
jbe
test
fidivs
outsl
es
push
lea
push
fisttpl
int
or
inc
jg
loopne
mov
stos
mov
sbb
es
loop
cmp
add
sti
pop
mov
fldenv
and
dec
scas
push
lcall
jno
mulb
push
push
pop
pop
or
mov
inc
subl
loopne
rcrb
jp
cltd
out
mov
mov
pop
mov
outsb
test
mov
pop
inc
aam
enter
mov
and
push
cmp
sbb
iret
daa
sub
sub
stos
mov
rolb
popf
sbb
push
add
addr16
arpl
inc
mov
mov
xor
xchg
sbb
sbbb
popl
int
jno
pop
lret
jmp
adc
fdivp
sub
idivl
mov
mov
popf
sub
pop
add
fs
pop
rcrl
out
imul
loopne
xchg
adc
xchg
hlt
mov
lret
cld
adcl
fstpl
sbb
add
push
flds
push
dec
int
push
cmp
lds
xor
sbb
cld
les
inc
ds
aam
cmc
sub
mov
pop
xor
jecxz
fildl
pop
iret
jl
push
repz
ds
sbb
lods
fcomps
ret
aam
lret
sbb
mov
adc
nop
mov
add
cld
insb
pop
sbb
mov
popf
mov
pop
cmp
out
test
xor
mov
outsb
cmpsb
push
aaa
out
and
mov
lds
mov
sub
sarb
in
or
jb
jb
stos
mov
push
or
xor
cwtl
mov
cmp
xor
fcomps
fisubrs
or
push
adc
xchg
out
jecxz
pop
mov
pop
jo
cwtl
push
shl
cmp
out
sahf
lahf
cli
adcb
xor
adc
lds
fwait
or
fldenv
sbbl
sbb
js
rcrb
cmp
test
dec
stos
movsl
push
cld
insb
lahf
lock
jnp
lret
mov
cmpsb
xor
mov
gs
push
adc
inc
hlt
add
xchg
pusha
sahf
xchg
jle
je
xor
divl
xor
add
push
ja
and
mov
mov
xorb
add
adc
cmp
mov
scas
jae
xchg
jae
rorl
fbld
mov
stos
cmp
mov
push
addr16
mov
stos
pop
push
jb
cltd
pusha
dec
inc
je
xor
addr16
or
mov
push
pop
xchg
popf
cmp
test
stos
jno
and
dec
add
aad
or
push
xchg
and
mov
xor
add
mov
push
imul
adc
push
lret
or
cld
sbb
in
inc
aam
imul
out
jno
pop
pop
push
into
mov
xor
cmc
mov
loopne
jo
outsb
mov
xor
cs
andl
lahf
int
xchg
shl
jne
lahf
xchg
and
dec
or
or
cmpsl
dec
xor
add
pop
sahf
in
iret
push
mov
push
push
imul
fst
fsubs
sub
mov
popa
jno
cwtl
mov
xorl
cs
cmp
xchg
fiadds
imul
shlb
hlt
jnp
mov
add
mov
mov
imul
jne
mov
push
dec
sbb
jb
sbb
mov
cs
sahf
add
pop
mov
and
ret
mov
xchg
mov
out
inc
jo
cwtl
scas
aam
test
jno
lock
ficoml
jbe
dec
test
dec
call
adc
fimull
and
lock
es
sbb
xchg
lock
jecxz
jp
test
adc
push
in
jmp
repz
or
mov
je
fistps
and
data16
stos
push
inc
mov
jbe
dec
shlb
fisubl
and
xor
mov
in
arpl
adc
ret
pushf
ret
dec
jle
push
and
mov
leave
lret
mov
or
mov
xchg
mov
jg
xor
inc
xchg
icebp
jg
test
pop
push
xor
pop
movsb
dec
mov
insb
push
xorb
dec
inc
mov
xchg
jmp
push
ja
mov
inc
dec
aad
fwait
mov
dec
aas
jecxz
int
pop
jnp
test
ret
daa
std
fisttpll
shl
or
outsb
mov
cmp
mov
lret
jp
cmp
add
jo
aaa
stc
pushf
pop
jmp
sbb
sub
dec
aas
out
rolb
aaa
and
sbb
ljmp
xchg
lahf
cmp
into
pop
shlb
pop
call
test
js
lds
icebp
sub
xchg
mov
insl
and
jae
ljmp
pop
in
pushf
repz
lds
cld
sahf
hlt
cmp
jnp
and
hlt
addr16
scas
std
cmp
les
adc
mov
push
pop
aam
pop
sahf
int
int3
imul
icebp
inc
lret
lods
mov
bound
or
dec
sub
loopne
aad
jnp
or
cmp
das
insb
movsl
xor
and
mov
pandn
dec
repnz
in
fwait
sbb
inc
mov
push
add
sub
loop
jo
and
add
jp
inc
mov
push
mov
icebp
js
ret
sbb
scas
ret
sub
int3
xor
add
cmp
aas
cmp
mov
mov
mov
pop
inc
mov
movsb
pop
add
dec
xor
ds
add
cmp
mov
int3
out
iret
sbb
xchg
scas
push
call
and
subl
xchg
xchg
ja
pop
in
test
add
sub
push
cmp
shll
aam
or
out
mov
and
sbb
cmp
inc
cmpb
xchg
mov
pop
loopne
xchg
add
pop
xchg
adc
lods
xor
cwtl
data16
sbb
mov
jle
mov
mov
xchg
fstpt
adc
add
hlt
pop
decb
xor
lea
push
sub
jb
mov
sub
pusha
cli
push
lret
movsl
jmp
mov
xor
cmp
mov
lods
sbb
mov
lret
adc
in
ss
mov
xor
adc
loopne
inc
imul
sbb
scas
test
push
pusha
stos
mov
mov
xor
test
cs
pop
cmpsb
add
xchg
imul
orl
mov
in
pop
imul
int
lock
sub
xor
mov
sahf
dec
repnz
push
inc
xchg
js
and
xor
sbb
push
push
ljmp
int
cli
adc
imul
cmpsb
jns
test
push
push
jge
cli
sub
mov
outsl
jne
dec
or
mov
test
icebp
xchg
test
outsb
or
ret
push
int
push
xchg
sub
xor
out
xchg
ss
clc
mov
or
movsl
and
push
in
shll
inc
repz
mov
xor
ljmp
popf
sbb
ficoml
xchg
add
jmp
sbb
popf
mov
leave
mov
cli
jb
std
xchg
lcall
dec
jbe
or
jp
test
mov
cwtl
popa
inc
or
pop
sub
jp
sbb
idivl
fsubrl
mov
pusha
icebp
lcall
cmpsl
fwait
loop
push
andl
cmp
push
cmc
add
push
sahf
sub
in
adc
adc
aas
push
jns
or
mov
repnz
repz
loope
les
jns
fistpll
movsl
xchg
insb
sub
pushf
mov
mov
popa
cli
ljmp
mov
mov
repz
xchg
adc
add
adc
bound
pop
inc
test
in
fildl
xchg
xor
sub
jo
add
cltd
das
xchg
push
adc
sahf
push
sub
lahf
cmc
mov
and
lds
xchg
fsubrs
call
mov
int
js
pop
jmp
loop
cmpsb
mov
jle
inc
insl
sbb
cs
mov
mov
xor
cltd
lods
adc
sub
aad
or
je
sbb
jno
mov
stos
inc
fsubrl
ret
rclb
int
xlat
push
dec
and
mov
sbb
repz
sahf
pop
lods
pushf
cmp
xchg
imul
inc
fiadds
jl
mov
mov
mov
test
xor
test
rorl
sub
xor
mov
loope
jge
jne
out
or
popa
jnp
roll
push
mov
inc
jb
xorl
mov
int
xacquire
sub
fs
adc
in
idiv
in
je
push
mov
dec
adc
subb
pushf
or
xor
add
stos
or
repz
xchg
mov
sbb
cmp
loop
mov
jb
aad
xor
xchg
jecxz
pop
or
das
arpl
movsb
aad
ja
and
xor
add
lret
pop
lcall
mov
and
jge
jl
movsl
nop
pop
dec
scas
push
mov
mov
pandn
and
movsb
popf
pop
or
in
out
inc
dec
clc
ljmp
movsb
push
mov
mov
pop
pop
cmpsl
sbb
add
subb
pop
scas
cs
lcall
push
out
jae
xlat
cmp
cmp
in
lcall
negb
push
or
cmp
jns
das
mov
xor
mov
fsubrp
and
lcall
js
lds
jecxz
jbe
sub
clc
jle
mov
shrb
and
in
gs
setns
in
and
movsl
cwtl
cmpsl
xlat
inc
call
outsb
sbb
xorb
shrl
shlb
clc
jge
es
ljmp
jle
jb
dec
bound
dec
into
xor
lock
cmp
jnp
xchg
sbb
add
dec
pop
pop
jo
lahf
sbb
es
popa
push
push
sub
pop
xlat
shl
mov
ret
movsl
ja
cmp
dec
sbb
mov
jecxz
push
outsl
js
mov
andb
notl
out
mov
mov
es
mov
rcr
or
jns
xor
push
ret
xchg
aas
popf
fwait
lods
inc
pop
movsl
pop
lret
xchg
ss
inc
pop
lods
imul
lock
push
lock
inc
mov
lock
push
clc
into
xchg
dec
mov
pop
cmpsl
repz
mov
test
orl
stos
fldl
mov
inc
sbb
xchg
fnstcw
pop
mull
cmc
test
push
outsb
adc
and
out
jne
cmp
rcrb
data16
sub
xchg
das
push
jmp
dec
int3
out
cmp
into
pop
in
lret
xchg
fists
lods
pushf
repz
xor
jge
add
ds
out
jecxz
pusha
fsts
add
cmp
jb
shl
fs
push
lds
in
cld
inc
loopne
or
fldcw
and
sbb
pop
inc
stos
dec
sbb
jnp
scas
push
fsubl
loop
imul
outsl
mov
mov
mov
push
dec
mov
out
mov
test
jg
cmp
pusha
push
testl
mov
arpl
je
stc
sub
pushf
lods
dec
adc
mov
sarl
lea
cwtl
lods
sbb
outsb
inc
movsl
repnz
out
inc
push
pop
push
int3
sbb
nop
pop
jo
in
push
xchg
inc
mov
pop
mov
pushf
loopne
movsb
mov
test
stos
and
jl
cmp
mov
fistpl
loop
sub
cmp
sbb
mov
mov
jnp
mov
stos
adc
pop
movsb
cmpsb
inc
clc
andl
push
mov
pusha
mov
mov
dec
les
xlat
dec
pop
jo
leave
adc
fs
xlat
negl
dec
ja
punpcklbw
inc
xor
pop
push
mov
ret
ficomps
cmp
int
xchg
aas
xor
xchg
hlt
or
stc
xor
hlt
arpl
pusha
jnp
or
outsl
in
loopne
mov
adcl
sub
div
pop
fmull
xchg
xor
push
push
shrl
icebp
inc
mov
xor
dec
cwtl
push
aam
fwait
mov
mov
pop
popl
xor
or
cmp
sub
cmpsb
fdivrl
cmc
inc
sbb
sbb
jno
xor
add
mov
sub
pop
enter
repnz
sti
cmp
cmp
out
bound
cmp
nop
repnz
jp
adc
mov
xor
xlat
fistpll
out
leave
rcrb
sub
jae
mov
data16
inc
aam
and
mov
dec
in
popa
xchg
dec
xlat
test
mov
repz
dec
dec
aaa
xchg
push
jae
es
inc
jle
xchg
fs
push
icebp
mov
jbe
lcall
cltd
dec
out
push
lahf
cli
int
in
push
test
dec
jmp
test
add
js
int
jp
es
mov
mov
jo
pop
mov
cmpsb
and
xchg
les
pop
sub
add
jb
hlt
fimuls
xchg
aas
int
mov
test
xor
fucomp
mov
push
lds
loopne
das
mov
cltd
scas
in
push
aaa
dec
out
out
ret
xchg
call
ds
imul
iret
in
fcompl
push
outsb
stc
adc
xlat
aad
dec
lcall
or
pop
loopne
test
adc
fxch
add
mov
dec
mov
stos
lods
lods
cmpl
mov
push
xor
add
pop
lods
aad
or
call
sbb
sbb
es
mull
mov
scas
ss
jl
push
imul
fs
lcall
xchg
mov
sbb
aaa
mov
fs
jl
mov
push
dec
in
mov
divl
pop
sub
rcl
cli
loopne
mov
and
rcrb
push
fs
std
loop
mull
mov
mov
sub
jae
int3
mov
xchg
and
gs
mull
or
jno
je
xor
mov
push
lahf
addr16
enter
sti
and
pop
clc
pop
pop
and
mov
ret
pop
add
adc
xchg
ret
daa
xor
pop
cmp
mov
dec
shl
jnp
mov
jo
fs
dec
push
mov
pop
pushf
nop
push
arpl
arpl
std
pop
pop
jo
cwtl
loope
pop
cmc
push
xor
js
or
mov
jae
xor
aad
xchg
mov
mov
popa
or
pop
xor
imulb
hlt
push
jg
cmc
dec
push
cs
cmpl
cmp
in
test
out
ret
push
enter
jecxz
dec
jne
mov
or
stos
fs
jae
adc
popa
arpl
push
inc
shrb
push
inc
push
out
dec
cmp
nop
mov
mov
mov
jl
shlb
xchg
pop
adcl
push
out
add
add
xor
pop
stos
jecxz
repz
mov
enter
pop
add
jne
lcall
out
ror
xlat
call
cmp
mov
sbb
sub
adc
popa
rorl
xor
lcall
mov
sub
cli
or
ss
inc
push
or
jg
insl
pop
fcomps
es
sarb
movsb
add
or
add
mov
nop
in
mov
inc
lret
mov
ja
out
jnp
sub
hlt
xchg
lcall
sub
cltd
pop
insl
or
in
dec
subl
jmp
aaa
inc
aam
imul
ret
out
fwait
lods
cmc
adc
add
shlb
mov
clc
lods
out
sbb
jp
jo
aas
mov
nop
insl
icebp
sbb
add
out
outsb
xchg
push
dec
subb
out
iret
xor
imul
rcr
xchg
shl
jo
jno,pn
lret
fidivrs
mov
dec
ret
shll
mov
jne
jo
mov
hlt
pop
inc
data16
dec
sub
pusha
int
or
sarl
cmp
hlt
mov
dec
aaa
mov
jg
icebp
mov
push
lahf
jge
inc
dec
ljmp
insb
loop
and
in
pop
mov
hlt
dec
cmp
jno
xchg
cld
sahf
repnz
push
xchg
push
dec
mov
cmp
mov
jl
mov
sahf
and
inc
mov
xchg
icebp
inc
iret
sbb
std
inc
test
jl
ljmp
jo
adc
pop
mov
fs
shr
jmp
sbb
ja
cmpsl
dec
sbb
cmp
pop
jnp
push
scas
xor
stos
mov
jecxz
sub
movsb
pop
int
pop
sbb
movsb
pop
fwait
or
movsl
cwtl
inc
xchg
test
jnp
cmp
inc
je
fldl
xchg
fbld
enter
cli
xchg
xor
repnz
cld
repz
inc
and
scas
jp
mov
push
jp
adc
sbb
jno
sti
xor
cmp
test
mov
popf
dec
loopne
lret
mov
in
pop
pop
cli
outsl
and
and
xor
push
mov
jge
jae
xchg
push
push
jbe
or
pop
enter
in
out
or
mov
sub
enter
dec
pop
pop
jne
in
dec
xor
jg
loopne
outsb
xchg
xor
xchg
cmpsb
cmp
js
insl
pop
aad
ds
push
jnp
sbb
xchg
jnp
or
jns
call
pop
jb
push
stos
cli
and
outsb
add
sarl
jns
lret
xchg
push
fadds
sbb
inc
xor
jb
push
dec
xor
adc
in
movsl
lods
popf
inc
fs
push
clc
lds
pslld
sbb
add
inc
jno
cld
test
scas
push
ljmp
jne
adc
sbb
mov
lret
push
add
addl
pop
imul
or
pop
mov
mov
cmp
mov
mov
mov
notl
jg
mov
dec
clc
push
cli
int3
xchg
add
xchg
fldcw
mov
ret
jae
pop
push
nop
loop
orl
dec
add
cmp
jmp
cmp
cmc
jge
and
add
add
sub
cld
sahf
mov
fnstsw
stos
rorl
lock
mov
pop
mov
cs
push
shlb
in
adc
idiv
jp
xor
imul
jl
pusha
daa
outsb
mov
xor
repz
clc
aas
and
sub
scas
into
dec
jne
lret
inc
test
clc
jge
cli
test
cwtl
add
icebp
add
scas
ret
or
xor
cwtl
or
and
fcoms
pop
repz
pop
ret
mov
push
cmp
dec
call
test
cmp
imul
cmp
fcomip
pop
daa
repnz
movsb
xchg
cmpsb
push
xor
sbb
inc
cmp
cli
or
stc
sub
shl
mov
dec
fbstp
pushf
jae,pn
in
pop
leave
cmp
imul
mov
mov
les
loop
xchg
cmpsb
rcr
and
shl
push
jnp
xchg
dec
jns
jp
loope
or
push
cmp
inc
aam
cmp
lahf
ss
cld
mov
aad
jae
hlt
rol
push
fwait
out
roll
mov
push
insl
imul
movl
sub
pop
stos
mov
int3
and
mov
sti
jmp
sbb
js
mov
mov
nop
icebp
dec
add
cmp
mov
sub
divl
mov
push
inc
add
insb
repnz
fs
test
cwtl
mov
lods
jns
jb
mov
xor
xchg
pop
sbb
cli
or
lods
add
and
pop
insl
mov
xor
mov
add
xorl
xor
inc
rcll
adc
xchg
stos
lock
cld
inc
pusha
adc
imul
xchg
jbe
and
fmuls
xchg
cmp
fs
sub
xor
imul
add
jo
rorl
and
cmp
or
adc
xor
loopne
sbb
pushf
push
fsubrs
and
jo
icebp
xchg
decl
shll
jecxz
and
cmp
lods
xor
sbb
clc
ret
and
pop
in
sbb
push
or
pop
fldt
add
imul
movsl
sub
xor
push
adc
dec
aas
mov
mov
and
or
xchg
pushf
mov
stc
std
inc
inc
insl
push
test
sbb
clc
int
cmp
add
mov
gs
fldl
div
xlat
cs
sub
jnp
mov
or
xor
popa
lcall
bound
cmpsl
sahf
jp
js
sub
insb
incl
sti
xchg
div
int3
and
aaa
jge
mov
add
aas
je
push
xchg
pop
xchg
mov
sbb
leave
shrl
dec
insb
in
stc
sti
mov
sub
ds
call
xor
push
sub
xor
push
dec
rorb
push
dec
fildl
jle
ffree
jbe
xlat
inc
push
popf
mov
jo
pusha
jb
push
fs
insb
and
icebp
hlt
sbb
fcomip
xorps
mov
negl
sbb
aad
add
sbb
mov
je
sbb
ret
and
pop
repnz
fimull
mov
sub
aad
bound
and
inc
ja
jg
adc
mov
xchg
mov
and
push
pop
sahf
pushf
push
loope
call
outsl
push
sub
xor
dec
add
int3
stc
xor
call
in
cs
test
xchg
cmpsb
repz
nop
sub
adc
add
sbb
push
adc
dec
xchg
jo
mov
push
aas
xchg
xor
fnstsw
lds
mov
pop
lcall
sbb
sqrtps
clc
sahf
push
add
shll
jns
js
add
mov
cmp
mov
dec
ljmp
sub
cmp
jg
sbb
rorl
mov
roll
in
aad
ss
xor
xchg
push
pop
add
adc
mov
icebp
outsb
cmpsb
jmp
mov
xchg
add
mov
pmulhw
sahf
jnp
adc
push
roll
fldcw
std
cmp
cwtl
test
and
rol
dec
pop
jg
popf
hlt
mov
dec
loope
mov
loop
xor
push
out
bound
mov
sbb
shlb
xor
push
pusha
push
repnz
in
leave
imul
cmp
pop
adc
adc
je
push
xor
jp
pop
int3
orb
jecxz
jmp
mov
mov
out
add
push
rcrl
push
inc
aaa
jo
fmuls
mov
repz
add
ret
stos
jge
pushf
adc
or
lds
dec
int3
mov
movsl
push
inc
pop
andb
pop
push
arpl
inc
testb
scas
scas
pop
and
stos
push
adc
push
aad
add
movsl
adc
or
loope,pn
push
cli
sub
test
jmp
xor
sub
xor
repnz
push
or
sub
mov
inc
push
mov
ret
push
outsb
stc
scas
inc
and
js
mov
rclb
leave
dec
jmp
mov
jmp
mov
push
adc
test
xchg
push
inc
inc
or
or
aam
jnp
int
in
push
cmp
rorb
inc
jge
addr16
xor
out
jg
xor
xchg
loop
mov
pushf
push
shlb
xlat
cltd
xchg
sub
jg
push
fcmovnbe
fwait
sub
and
and
mov
dec
shrl
addr16
mov
mov
mov
pusha
lods
cmpsl
adc
iret
pop
lock
mov
add
dec
icebp
clc
rorl
xor
add
aas
adc
enter
ret
ds
bound
cmp
mov
or
adc
pop
dec
addr16
push
cmp
cmp
jle
adc
sub
imul
cmp
or
mov
leave
jb
insb
cs
orl
mov
les
push
jg
mov
dec
orb
les
mov
mov
dec
mov
sbb
xor
sbb
outsl
dec
popa
iret
imul
pop
test
mov
pop
insl
xlat
inc
or
shlb
fisttpll
loopne
inc
cmp
xchg
push
mov
scas
or
lcall
inc
out
pop
cltd
lods
movsl
lret
push
lds
add
or
jb
or
cld
ret
insl
mov
lea
pop
sbb
js
jmp
repz
dec
dec
pushf
pop
add
out
outsb
jno
mov
aaa
int
cmc
mov
jbe
mov
push
ja
adc
mov
adc
mov
adc
notb
cmp
mov
pushl
or
xchg
add
and
jne
nop
mov
pop
jg
loop
sti
test
sbb
mov
mov
sub
aad
rcr
mov
add
mov
add
repnz
mov
lret
popa
in
pop
mov
bnd
push
mov
mov
ljmp
jl
sarl
push
push
pop
mov
add
pop
push
mov
js
sub
fistps
mov
dec
add
insb
adc
fucom
out
fdivr
imul
std
xchg
popf
push
cmp
mov
xor
addr16
xchg
stos
stos
fwait
and
stos
sub
mov
sbb
fsub
xor
fdivrl
xlat
je
sbb
adc
loop
je
ret
sahf
xchg
xor
sub
fidivl
outsl
es
jecxz
inc
iret
dec
mov
sbb
dec
and
sbb
ret
add
mov
sub
fld
push
cmpsb
lret
fwait
cmp
mov
mov
mov
dec
fs
pop
fnsave
jl
mov
call
push
inc
lcall
xor
mov
in
jle
xor
lock
push
mov
mov
testl
loopne
dec
aaa
mov
pusha
adcl
jbe
adc
popf
mov
std
sbb
adc
nop
xor
inc
pop
stc
mov
or
out
out
dec
pop
aad
je
sti
fs
fs
addr16
pop
pop
adc
fcmovnu
mov
inc
jmp
adc
shll
leave
or
repnz
mov
dec
add
jns
push
lods
jnp
out
jno
test
movsb
jmp
push
cmp
shl
adc
out
fwait
in
jae
jnp
and
adc
or
xor
aaa
mov
std
or
jp
inc
inc
popf
inc
gs
pop
mov
bound
dec
cmp
fldlg2
cwtl
pop
fmuls
subl
nop
dec
inc
pushf
jge
test
nop
sahf
cli
jmp
clc
lcall
push
fs
leave
push
shll
mov
cmp
popa
sbb
addr16
mov
xor
sbb
fwait
add
shl
inc
adc
ficoml
pop
xchg
jo
mov
xchg
jbe
mov
inc
jecxz
pop
push
mov
adc
xchg
jo
inc
jl
stc
jbe
clc
popa
movsb
add
stos
lcall
aad
push
push
push
pop
cmp
push
mov
inc
cmpsb
hlt
mov
sar
add
jno,pt
shl
cmc
sub
nop
lret
icebp
scas
std
inc
popf
xchg
data16
jle
test
mov
sbb
cmpl
stc
add
outsb
rclb
or
and
mov
mov
and
jne
sub
xchg
fildl
icebp
inc
cld
add
adc
lcall
cmp
push
daa
adc
das
cmpsb
push
mov
imul
movsb
dec
jp
and
cwtl
sahf
xlat
inc
and
leave
fstpt
mov
mov
inc
sub
mov
les
subl
or
data16
fucom
cs
adc
pop
xchg
call
incb
mov
daa
orl
sbb
insb
aaa
in
mov
push
mov
subl
dec
or
adc
pop
pop
pop
xor
mov
push
mov
inc
sub
iret
mov
mov
jl
mov
fcmovbe
test
jmp
test
cmp
daa
mov
js
enter
sub
fisubs
jmp
cli
pop
mov
sub
cmp
sub
test
xor
inc
adc
ds
insb
ja
fwait
movsb
inc
js
shrl
mov
repnz
orb
mov
xor
hlt
push
sub
mov
jae
cmp
test
call
sbb
dec
or
and
cmp
push
sub
xchg
push
rolb
lds
push
mov
pusha
cmpb
cmp
inc
stos
ss
sar
sub
mov
add
mov
adc
mov
scas
sbb
fbld
ljmp
pop
repz
mov
frstor
popl
in
out
cli
pop
xchg
mov
push
sbb
popa
ss
negb
adc
hlt
and
jmp
ret
aas
and
adc
int3
push
mov
mov
js
adc
mov
inc
adc
insl
sub
mov
dec
jecxz
jecxz
lahf
std
lcall
inc
loopne
andb
jp
fsubrp
mov
jmp
adc
cmp
ljmp
popa
jge
push
pop
inc
es
fs
loope
and
cld
aaa
push
pop
xchg
ss
cld
lret
repnz
insl
sbb
shrb
adc
lds
mov
mov
mov
out
hlt
mov
dec
mov
inc
or
or
or
fisttps
stc
ss
add
sti
lahf
repnz
mov
insl
faddp
dec
mov
mov
sub
sarl
stc
dec
dec
sbb
and
jno
lret
mov
or
push
xlat
sbb
test
xchg
mov
or
xlat
sub
and
subb
mov
mov
shll
mov
les
mov
mov
fwait
sbb
imul
sti
push
xchg
int3
xor
inc
fldenv
or
xor
scas
add
push
stos
add
mov
lods
divl
xor
mov
je
fldt
aad
mov
xchg
push
add
push
clc
cmp
pusha
mov
sti
hlt
popf
sti
lock
std
icebp
lds
xchg
dec
xor
mov
insl
sub
lods
stc
ja
hlt
cmc
shll
lea
adc
sbb
shlb
push
and
jns
pop
test
adc
xor
pop
cmpsl
inc
cli
adc
jge
outsl
scas
test
mov
dec
or
push
mov
stos
mov
xchg
sub
adc
adc
jb
outsl
sub
aas
sti
cwtl
outsl
bnd
adc
cmp
vcvtsi2sd
icebp
repz
sbb
jae
jecxz
imull
mov
mov
xchg
loop
inc
jno
in
iret
mov
and
xabort
iret
inc
inc
ja
pushf
jns
sbb
jno
out
clc
mov
in
pusha
adc
or
ja
adc
inc
jecxz
cwtl
lret
or
pop
xchg
and
push
jo
xchg
add
push
aad
and
push
inc
mov
stos
negb
adc
jo
push
push
and
jmp
bound
push
push
les
mov
dec
xchg
and
or
je
add
stos
mov
rclb
xor
stc
arpl
mov
mov
mov
lods
sbb
push
sbb
jle
daa
mov
inc
xchg
pop
repz
inc
jne
stos
imul
jmp
pop
repz
xchg
push
dec
and
or
lds
nop
insb
dec
ja
test
xchg
roll
sbb
loop
dec
mov
pop
lock
fcmovnu
ds
cmpsb
test
adc
scas
out
cmp
pause
pop
insb
imul
mov
sbb
mov
mov
sbb
or
xchg
lret
sub
and
lods
pop
jg
jbe
jns
inc
or
divl
adc
clc
psubsb
and
adc
jmp
jbe
inc
mov
idivb
cmp
jb
add
inc
ret
into
cli
cmp
dec
pop
fwait
out
in
aas
leave
out
pop
insb
xchg
dec
sarl
leave
rclb
out
or
jecxz
dec
sbb
loope
or
push
xor
mov
inc
xchg
add
or
mov
cltd
fdivrl
ret
add
jno
icebp
dec
mov
hlt
popa
imul
add
push
cwtl
scas
outsl
sub
out
loope
ficompl
push
inc
sub
fdivrs
push
stc
adc
outsl
je
in
jne
out
jmp
daa
in
jge
jnp
scas
inc
dec
fidivrs
mov
mov
and
arpl
lods
fdivs
aas
imul
jnp
mov
ljmp
cld
xchg
fisubrs
call
popa
push
or
xchg
jmp
add
xchg
rorb
push
fstpt
push
push
daa
pop
pop
aaa
ja
ret
mov
std
push
mov
jp
test
xchg
ljmp
xchg
dec
movsb
adc
add
cmc
or
rcl
mov
pushl
mov
fidivl
dec
dec
jno
call
inc
sub
jae
push
pop
mov
mov
adc
wbinvd
andnps
dec
sbb
add
inc
sub
divb
jne
push
sub
inc
insl
mov
dec
push
insl
fs
repnz
shll
negl
sub
shrb
xor
repz
add
lods
jns
fiaddl
jno
adc
repz
mov
insb
jge
ret
adcb
js
xor
mov
cmp
sub
dec
mov
scas
std
stc
mov
cmp
in
fisubl
adc
pushf
int3
jnp
stc
mov
pop
sub
outsb
mov
cmc
xchg
pop
pop
test
mov
into
dec
in
cmc
loope
mov
sub
lock
push
and
mov
adc
jne
cmc
repnz
lock
loope
pushf
lcall
add
cmp
adc
push
sbb
scas
in
lret
pusha
out
call
fnstenv
fwait
mov
pop
shl
push
mov
lods
mov
mov
loop
pop
popf
mov
xchg
dec
pop
jb
lods
jns
pop
and
sbb
pop
xchg
mov
mov
jecxz
lcall
popa
aas
add
jge
sub
xor
pusha
jge
stos
in
push
dec
push
rcr
call
ja
mov
lahf
dec
scas
test
stc
mov
jno
mov
dec
scas
aam
fcmovbe
push
push
movsb
dec
int
push
lret
push
les
lahf
xor
das
je
pop
loop
out
imull
enter
scas
mov
jl
icebp
pusha
cmp
pop
cmp
xchg
aad
add
mov
jne
jo
lods
popf
scas
push
mov
adcb
mov
and
out
mov
out
sbb
mov
movsl
xor
test
in
jo
movsl
and
sub
jmp
pop
int3
rolb
gs
in
push
jl
inc
aam
mov
push
cld
in
push
xor
mov
and
jle
lock
lods
mov
leave
inc
iret
push
inc
push
sbb
mov
subb
jne
and
imul
lods
inc
aam
adc
lret
arpl
cmp
mov
out
xor
movsb
and
xchg
lods
push
repz
stos
out
popl
lods
add
adc
testb
fcoms
fnstsw
push
and
incl
out
dec
stos
xchg
xchg
mov
jl
sahf
jmp
dec
aaa
jnp
subb
adc
or
dec
inc
mov
and
mov
pusha
jo
test
jp
xchg
fs
mov
movl
in
sbb
adc
add
add
mov
push
inc
xor
xchg
push
daa
jno
addr16
mov
sbb
jmp
lods
clc
ss
cltd
jns
mov
adc
imul
leave
and
loopne
sub
jmp
push
enter
dec
mov
jo
push
add
mov
loopne
fldt
lcall
sub
dec
rolb
sbb
arpl
push
xchg
xchg
xor
jns
addl
sbb
call
jns
mov
cmp
call
add
fcmovnb
xchg
or
cmp
in
insb
arpl
pop
divl
jnp
int
mov
sbb
call
daa
mov
cmp
ds
scas
adc
or
mov
cmc
pusha
sbb
out
xchg
vpaddd
testl
ja
jp
mov
mov
imul
dec
mov
cwtd
mov
and
lahf
xchg
add
scas
and
int
int3
dec
rcl
add
sub
cmp
jo
adc
sub
popf
out
mov
mov
xor
dec
int3
icebp
rcr
cld
aas
jmp
sbb
push
jge
pop
add
xchg
imul
cld
mov
push
mov
lods
mov
adc
inc
and
into
xor
jp
rcll
test
jl
shrb
xlat
pop
xor
or
sub
dec
mov
loop
int
fnsave
push
adc
cmp
jb
push
in
push
stos
pop
inc
push
cwtl
xchg
sub
cld
inc
fwait
mov
ja
out
sub
cmp
insb
or
add
jle
fwait
out
outsb
pop
cvtps2pi
push
jmp
or
ss
xor
xor
xor
mov
xor
xchg
inc
repz
sbb
insb
push
push
dec
dec
pop
xchg
popa
nop
jnp
out
sub
sbb
jb
adc
incb
repz
pop
outsl
movsb
sub
pop
icebp
rcrb
je
fcomp
fwait
popa
or
mov
dec
xlat
outsb
out
mov
test
or
test
pop
lds
call
dec
mov
js
xchg
lcall
or
lahf
jnp
inc
add
xchg
xchg
repnz
fistps
mov
mov
stos
ds
dec
imull
mulb
fnsave
out
pop
adc
into
mov
pushf
out
mov
jns
pop
enter
outsb
push
icebp
dec
mov
stos
jo
dec
xchg
inc
push
cmp
aaa
mov
cld
jnp
mov
loope
xchg
jmp
and
mov
enter
xchg
test
cmpsl
and
iret
lret
imul
sbb
test
out
lds
xchg
je
inc
movsl
jns
insb
xor
push
and
lcall
orl
add
push
sub
call
mov
sub
repz
cmp
insb
cmp
call
ret
xchg
xchg
in
lahf
or
or
mov
push
push
adc
rorb
scas
in
or
outsb
or
mov
or
pop
xor
shl
jne
in
inc
dec
pushf
cmpb
inc
lock
test
add
push
jecxz
nop
stos
les
push
std
insb
xchg
xchg
and
and
outsb
add
daa
clc
int3
out
imul
loope
movsb
push
clc
stos
popa
mov
sub
adc
scas
fistps
add
mov
test
aas
add
jbe
jno
mov
fisubl
xchg
adc
xchg
test
aaa
iret
or
test
push
sbb
or
jp
mov
shl
shl
std
sub
inc
lods
jle
int
ror
dec
outsb
addr16
notl
push
dec
loopne
popf
mov
data16
mov
fwait
test
xor
aaa
iret
cmp
out
test
adc
stc
xchg
jmp
pop
movsl
mov
and
mov
inc
push
movsb
je
sub
mov
sub
cli
xchg
add
out
pop
or
sbb
in
mov
inc
cmp
mov
inc
push
sbb
mov
xlat
movsb
push
outsl
jmp
xchg
cmp
xor
mov
pop
xchg
mov
pop
push
push
add
inc
add
mov
mov
cmp
xlat
xchg
cs
fdivrl
xor
sbb
shll
push
mov
mov
aam
aam
les
in
push
xlat
out
cmpsl
lahf
sti
jecxz
inc
aam
sbb
cmpb
movsb
ret
lahf
lret
call
cmp
pmaxub
cmp
fs
jb
pop
adc
out
add
sbb
mov
mov
rclb
lret
xchg
stos
jne
mov
aam
mov
mov
xchg
das
cld
int3
xchg
aad
adc
mov
out
mov
mov
repnz
in
arpl
pop
cmp
sbb
sti
cmpsb
movsb
pop
inc
dec
cmp
fcoml
scas
mov
and
push
push
mov
pop
sbb
inc
or
xor
and
jg
mov
movsl
pop
jge
push
in
stos
fimuls
stos
sti
or
jmp
inc
cmp
xchg
out
add
sbb
mov
ljmp
int
and
and
sti
lea
subb
dec
call
jp
and
call
add
push
jecxz
cmp
jo
push
mov
mov
cmp
ja
arpl
adc
dec
ljmp
xchg
xchg
adc
dec
pop
xor
mov
js
scas
xor
sysexit
out
imull
aaa
xor
or
push
push
mov
push
pop
shll
scas
stc
es
xchg
cld
sbb
cmp
pop
mov
sub
cmp
stos
icebp
and
jno
es
icebp
sahf
aas
icebp
mov
mov
fnsave
rclb
test
insb
mov
cmp
lea
sbb
push
push
pop
fcoms
imull
gs
mov
in
dec
test
inc
testl
lahf
mov
pop
mov
xor
adc
adcb
jns
add
dec
les
mov
mov
addl
xchg
inc
aaa
pusha
repnz
inc
dec
scas
mov
mov
btr
inc
sbb
jmp
xchg
insb
pop
sti
cwtl
lock
test
xchg
mov
fldl
lcall
pop
xor
sub
and
dec
jmp
mov
pop
jbe
cmp
movsl
sub
jnp
xor
insl
jecxz
xor
jae
in
jnp
sbb
in
xchg
jmp
mov
adc
into
rcll
add
lret
lcall
fdivp
pushf
rclb
or
sub
push
cmp
cmp
in
andb
push
test
pop
sbbb
xlat
stos
xor
movsb
mov
aad
lods
inc
adc
inc
add
repnz
mov
movsb
xchg
lret
psubb
int3
sarb
outsb
mov
mov
in
pusha
adc
arpl
fimull
int
clc
push
test
sub
es
fistpll
add
jbe
subb
sub
cli
loop
jne
pop
fnstcw
sbb
insl
mov
ds
mov
sub
dec
mov
jl
jns
or
jo
enter
int
cmp
lret
clc
sti
sub
mov
adc
mov
out
fisubrs
jo
jnp
and
xchg
cmc
loopne
xchg
sbb
sbb
rcrl
and
lods
pop
mov
cs
pop
push
iret
mov
mov
add
and
cmp
pop
sbb
xor
loop
cmp
movsl
cmc
in
sahf
loop
jnp
das
inc
add
fistl
push
aas
iret
mov
outsl
sbb
cmp
push
pop
stos
push
jecxz
dec
adc
xor
inc
fstps
mov
popf
popf
pop
pop
shlb
pop
fstl
lods
sbb
idivl
popf
mov
pop
push
sbb
pop
mov
aad
fistps
jnp
inc
lahf
div
scas
ror
fistps
int
jle
xor
mov
fstps
lcall
not
xorb
jb
xchg
jle
add
or
mov
rcrb
push
movsb
aaa
js
push
xor
add
mov
jecxz
lahf
cmp
pop
out
pop
push
addr16
sbb
lea
cs
inc
call
fildl
fcmovnbe
in
ror
leave
cmc
dec
dec
mov
pop
jbe,pt
mov
insb
in
lock
outsb
ror
push
and
and
inc
and
and
xlat
std
es
xor
jnp
frstor
fadds
aad
jnp
cli
mov
inc
add
adc
incb
cmpsb
or
daa
gs
scas
xchg
in
inc
pop
sbb
std
ret
cmp
sbb
adc
mov
mov
cmp
pushf
xchg
loop
aas
cld
je
xor
test
adc
mov
movsb
loop
adc
out
and
inc
arpl
jl
inc
aam
adc
sbb
adc
imull
test
push
sbb
push
mov
adc
test
jbe
push
mov
scas
push
scas
movsb
mov
jl
mov
cmpsb
into
xchg
sub
js
pop
and
and
sbbl
or
mov
into
shrb
fsubs
mov
mov
movl
gs
cmp
push
sbb
push
xchg
imul
lss
xor
jnp
into
or
pop
inc
subl
ja
push
aas
jns
cmpsb
push
pop
adc
pusha
int
jl
xlat
dec
ret
ret
pushl
imul
push
cmp
insl
sbb
test
jp
repnz
fs
addr16
sbb
inc
pop
mov
cmp
jne
xchg
lods
mov
dec
enter
cmp
cmp
mov
push
mov
pop
mov
add
movsl
orb
dec
adc
loope
fidivrl
stos
sub
sub
pop
mov
cmpsb
fldenv
fcompl
jl
jbe
mov
imul
test
lds
movsb
fstps
es
je
pop
push
fcomp
testb
jmp
imul
cwtl
ss
sub
jne
ret
mov
inc
clc
cmp
jle
in
mov
dec
mov
jle
lahf
jo
repnz
fst
in
push
pop
xchg
push
cmp
test
sbb
sbb
test
xchg
push
popf
and
and
test
xchg
in
in
add
mov
insl
cs
mov
fmuls
mov
cld
int3
test
xlat
mov
cmpb
cmp
aaa
push
iret
cmpsl
test
shlb
mov
mov
mov
push
dec
lock
fisttpl
insb
cmp
movsl
push
jb
sti
gs
or
ss
mov
aas
jl
sbb
int3
or
loopne
in
icebp
mov
push
mov
ds
imul
sub
xchg
test
ficompl
or
scas
mov
and
fistl
arpl
xor
xor
movb
outsb
divps
push
push
jo
mov
jmp
ret
or
loope
loopne
pop
xchg
jnp
cli
shlb
sbb
xorl
and
in
mull
and
add
mov
mov
sub
hlt
pop
sub
ret
gs
xchg
daa
xchg
jb,pn
ds
mov
mov
jmp
fs
cmc
in
in
jmp
mov
jge
mov
add
xchg
inc
pusha
push
negl
and
xor
cwtl
jmp
imul
pop
into
or
jae
jg
dec
sahf
fdivs
adc
loopne
outsl
orb
sbb
cmpsl
mov
add
jns
xor
out
lods
fmul
loop
and
andl
sbb
repnz
pmulhuw
push
pop
fcoms
cmp
sub
pop
push
xchg
sub
xor
ficoms
sbb
pop
and
sub
into
dec
call
call
add
mov
sbb
std
fwait
loopne
fldt
dec
std
pop
fidivs
adc
out
shrl
in
cmpsl
jb
xor
sub
jne
mov
imul
xor
sahf
test
sbb
mov
xor
cmp
xchg
cmc
inc
cmpl
sub
inc
push
sbb
in
pop
and
inc
jne
mov
jle
mov
cs
cld
dec
pop
in
pavgw
mov
in
inc
fildll
xor
pop
enter
iret
push
out
mov
pop
les
inc
rorb
jmp
lds
shll
dec
lcall
in
pop
and
sti
cmp
push
and
sub
pop
fs
push
pop
push
xchg
cmpsb
mov
jo
jmp
mov
pop
xor
cmpsb
imull
and
fwait
negb
lea
mov
and
outsl
nop
push
mov
mov
xlat
add
and
repz
mov
xchg
pusha
sub
in
jne
sbb
out
roll
cmpsl
xor
inc
jae
push
push
fsubrl
pusha
out
je
push
or
inc
xchg
push
das
jge
jns
fildl
adc
mov
cltd
aaa
pop
or
lcall
stos
or
loop
lods
inc
inc
sti
pop
std
gs
call
sbb
dec
repnz
lea
push
dec
sub
pop
pop
xor
iret
sarb
mov
xchg
lock
in
outsb
neg
and
negl
je
fimull
push
fists
adc
cmp
xor
pop
mov
mov
nop
imul
scas
fstpl
or
xor
mov
ds
addb
test
adc
add
js
xor
mov
mov
pop
lcall
xchg
jns
stos
mov
jmp
outsb
fcoms
dec
adc
lahf
cmp
mov
jecxz
mov
mov
fildll
imul
sub
jp
jns
aam
mov
in
data16
mov
mov
stc
push
adc
out
pop
mov
jns
testb
sbb
sub
imul
cmpsl
and
inc
push
lret
xlat
mov
and
or
in
add
lret
xchg
nop
push
stos
cmp
pop
dec
jg
jbe
push
and
cltd
loopne
popa
xchg
mov
fstps
sar
fists
cmc
fldt
adc
stos
mov
into
mov
out
xor
pop
outsb
mov
call
jae
xchg
sbb
gs
pop
lgs
ret
inc
pop
jne
pop
out
sub
add
push
or
sub
pop
ja
outsb
nop
or
scas
mov
xlat
sarb
or
jecxz
lret
mov
xor
lea
and
pop
out
js
mov
pop
mov
orl
adc
stc
stos
pop
pop
in
jno,pt
fcomp
mov
xor
ss
xor
adc
dec
inc
cmpsb
sbb
xchg
out
add
ficompl
rclb
outsl
jg
imul
sahf
mov
movsl
ja
leave
push
add
xchg
mov
dec
cmp
addr16
imul
rcll
pop
filds
das
lahf
sbb
push
into
mov
pop
outsl
insl
out
hlt
sbb
sub
lret
test
inc
std
or
mov
pop
jge
cwtl
jmp
push
push
ret
out
movsl
andl
fcoml
mov
push
mov
mov
andb
pop
pop
pop
cmp
out
in
cltd
push
push
negl
add
and
or
cwtl
sete
add
or
push
dec
pop
icebp
jmp
xchg
cmpsl
popa
mov
mov
cmp
or
xchg
mov
sub
in
push
mov
push
xor
push
pop
stc
int
xlat
jns
xchg
movsb
jne
sarb
xor
push
pop
sbbl
outsl
pop
cld
dec
push
xor
aas
mov
push
push
movsl
repnz
adc
stos
call
in
push
sub
cmp
ljmp
jle
jno
movaps
mov
mov
pop
stos
adc
sub
mov
xchg
test
dec
arpl
aad
out
or
stc
sarl
incl
adc
stc
and
mov
dec
pop
xor
mov
sub
loope
jl
lods
enter
and
inc
cmp
shll
inc
clc
decl
and
jecxz
scas
mov
fs
pop
xchg
push
jmp
data16
jl
aaa
or
std
sub
in
leave
pop
push
xchg
out
fistps
push
jmp
adc
xor
out
rcr
pusha
xchg
insl
decl
nop
mov
push
xor
arpl
push
loope
into
gs
or
xchg
pop
inc
mov
lret
out
dec
imull
insl
loope
mov
inc
dec
xchg
fwait
shl
add
lds
cld
add
ret
rorl
dec
mov
and
test
mov
add
neg
sub
call
movsb
movsb
sbb
jno
jmp
push
arpl
fs
inc
jne
cli
mov
add
mov
adc
insb
mov
shll
outsb
mov
gs
push
push
jns
data16
sbb
lods
dec
gs
fs
adc
inc
ret
dec
movsbl
inc
cld
enter
jecxz
test
push
sbb
mov
mov
pop
test
pop
das
rorl
das
fwait
sbbl
xchg
fistpl
fistps
jmp
push
cs
push
test
fstl
mov
stos
scas
out
call
mov
or
test
aas
in
and
popf
jge
outsb
mov
or
fwait
sub
aaa
mov
pop
mov
xor
mov
fsub
add
in
mov
outsl
imul
dec
sbb
out
ja
sub
stc
mov
mov
aaa
jg
mov
mov
nop
scas
push
sub
adcl
xor
out
mov
pop
cmp
ret
fsubr
divb
arpl
or
push
test
mov
in
jle
sti
fnstcw
popa
cmp
nop
pop
in
cmp
aad
xchg
mov
sub
inc
pop
popa
les
sbb
jb
or
xchg
mov
sbb
leave
imul
popf
pushf
hlt
fwait
loope
cmp
xor
xor
les
jg
stos
bound
dec
xlat
ficoms
lret
inc
mov
movl
imul
fildl
mov
jbe
imul
cmpsl
add
push
pop
imul
push
push
adc
jge
push
jnp,pt
repnz
jno
call
adc
pop
sti
mov
and
pop
arpl
in
lods
out
mov
sbbl
sub
mov
push
pop
fdivr
push
dec
xchg
and
pop
cmc
mov
add
out
and
mov
ss
mov
inc
cld
adc
xchg
loope
shlb
add
xchg
scas
mov
dec
push
sar
rcrb
push
jno
xor
jbe
lcall
fldt
inc
mov
dec
call
pop
into
xor
imul
std
xor
iret
std
add
push
test
inc
xor
addl
or
mov
add
lods
mov
cld
jge
int
cmp
das
xor
sbb
inc
movsb
sti
push
icebp
push
jecxz
stc
mov
lods
jno
add
mov
incl
data16
mov
mov
xor
out
xor
mov
jle
and
mov
dec
push
or
out
and
mov
xchg
or
data16
dec
xor
jnp
pushf
push
fidivrl
sub
rcll
pop
ljmp
movb
rclb
cmc
sbb
outsl
add
movsb
in
in
or
stos
pop
jo
add
pushf
mov
mov
push
in
mov
mov
imul
movsl
aam
es
jmp
lea
pop
hlt
xorl
notb
outsb
das
push
jmp
fidivs
lods
outsl
dec
sub
stos
mov
repnz
sarl
pop
shll
push
cltd
dec
insl
bound
cs
cli
add
lret
add
mov
pop
mov
adc
sysenter
popa
pop
xchg
inc
cmp
push
mov
lahf
pop
enter
scas
mov
hlt
or
xor
pop
push
xchg
sbb
andb
in
das
mov
or
scas
nop
clc
push
std
or
cltd
jecxz
mov
dec
sub
out
iret
ds
popf
push
scas
fcoms
mov
sbb
mov
cld
lahf
jnp
mov
test
jg
sarb
int
push
and
inc
mov
pop
out
pop
add
inc
insb
mov
or
mov
add
repz
imul
and
sbb
pop
push
mov
sbb
movsw
adc
inc
clc
inc
xor
lahf
sub
ret
sbb
inc
jge
lods
loopne
push
faddl
jmp
popf
aad
sub
xor
sbbl
push
push
lods
divl
lahf
xchg
sahf
jecxz
adc
adc
xor
lcall
xor
lret
fistl
aaa
aas
xchg
or
shl
ja
push
or
jns
jl
mov
mov
cmp
mov
repnz
fsubrs
inc
arpl
mov
out
fldl
sub
pop
inc
sahf
inc
xchg
mov
das
enter
inc
xor
dec
push
mov
inc
iret
bound
daa
jle
mov
jae
inc
push
dec
jle
ljmp
or
test
ror
jecxz,pn
icebp
iret
inc
xchg
inc
xorb
push
mov
fcmovne
and
outsb
in
fsts
pop
xchg
jo
dec
int3
repnz
in
push
hlt
sub
ja
jb,pn
flds
mov
test
cmpsb
cmp
cmpl
test
mov
or
pushf
adc
inc
fimuls
fstpt
pop
test
out
jge
das
or
cmp
shlb
data16
cli
sub
loop
in
mov
push
mov
out
gs
ljmp
ret
fsubrl
push
add
stos
mov
movl
mov
sub
aam
cmp
and
or
mov
jge
push
inc
fistl
notl
ja
mov
jnp
inc
cwtl
int3
loopne
cmc
test
pop
mov
jbe
add
mov
inc
fld1
imulb
fidivrl
mov
push
cwtl
fnstenv
fucomip
mov
mov
fisubl
mov
gs
cmp
repz
xchg
pop
fstps
xor
jle
mov
pop
call
cmp
pop
test
mov
inc
repz
jae
jno
test
icebp
repnz
fsub
aaa
pop
and
xor
jle
cmp
pop
xchg
loope
sti
movsl
jecxz
sahf
and
bound
jae
adc
outsb
shlb
ficompl
fisubs
mov
fnsave
add
repz
mov
out
jnp
loope
xor
push
mov
stos
mov
sub
jnp
xor
gs
push
push
mov
test
repnz
daa
int3
xor
jnp
mov
insb
icebp
xchg
mov
insl
jmp
xor
pop
mov
inc
dec
int
rorb
inc
cs
bound
adc
jnp
mov
sub
fldl
dec
jl
sbb
xor
jg
xchg
les
adc
push
pop
daa
push
dec
jl
popf
ret
loope
shlb
xchg
jge
mov
or
adcl
and
mov
jmp
jne
loope
fidivs
fucomi
test
inc
subb
scas
pop
loope
or
and
and
sub
into
aaa
fs
jnp
insb
jle
xor
cmp
inc
push
pop
lods
pop
and
mov
out
add
in
xchg
je
int
jnp
or
cmp
sbb
inc
pusha
mov
push
dec
sbb
in
xor
jne
adc
mov
hlt
adc
sti
inc
arpl
aaa
cmp
mov
ja
stos
aas
pop
mov
mov
sbbb
lret
out
hlt
push
dec
pop
pop
movsl
pop
jge
sbb
mov
mov
clc
in
addr16
cmpsb
sub
lahf
repnz
lea
jns
addr16
jg
add
gs
js
sbb
cmc
sbb
dec
stos
shll
xor
sub
push
xor
push
jl
sbb
push
jbe
jmp
bnd
rclb
adc
add
cmpsl
arpl
aam
pop
enter
fiaddl
es
mov
pop
add
pop
shrl
jmp
dec
gs
addb
out
mov
xchg
jmp
arpl
fwait
enter
adc
xchg
dec
mov
test
cmc
push
push
add
dec
scas
js
jg
push
cmp
pop
push
jecxz
orl
loop
scas
test
leave
daa
mov
mov
std
jmp
pusha
mov
cmp
inc
adc
add
xor
test
add
mov
jne
sbb
jl
gs
sbb
mov
pusha
icebp
test
mov
imul
aam
sbb
xor
add
ds
and
fstpl
data16
mov
add
iretw
cmpl
test
xor
outsb
sbb
outsb
jne
pop
and
and
sbb
rcr
movsl
mov
scas
mov
xchg
orl
xor
cmp
mov
cmp
divb
js
cmp
mov
fidivrs
test
pop
rcll
repnz
mov
mov
das
cmpsl
out
lock
xchg
mov
jnp
or
iret
mov
jno
mov
ljmpw
push
cli
mov
outsb
xchg
sahf
jle
cmp
add
insl
sub
dec
mov
inc
mov
jge
jmp
in
mov
jecxz
lahf
dec
ljmp
jge
cmp
push
hlt
jae
repz
cmp
adc
fdivrl
aam
mov
cmp
inc
nop
lcall
jne
jl
pushl
insl
out
imul
pop
sub
mov
add
mov
in
pop
sub
adc
lock
dec
push
xor
sbb
in
jp
fidivrl
pop
addb
add
xchg
pop
mov
push
push
mov
push
add
jg
cld
jae
scas
push
mov
rcrl
mov
daa
daa
hlt
mov
fs
rorl
jae
mov
mov
cmp
fmuls
nop
jae
cmp
and
mov
insb
loop
scas
ds
call
inc
cld
movsb
jno
xchg
arpl
nop
pusha
loope
into
sbb
add
cmc
or
and
test
dec
sbb
mov
out
dec
cmp
es
pop
shlb
adc
push
push
aad
mov
mov
and
mov
add
dec
bound
or
inc
cli
jle
fistl
ja
mov
mov
loop
into
cld
adc
adc
xchg
sub
lcall
ds
shlb
cmp
xlat
pop
insl
or
push
shll
fbld
mov
push
sbb
test
fsubs
add
mov
repnz
push
mov
jae
xchg
pop
and
xor
push
add
push
xor
xor
fldenv
fdivr
push
push
fstl
push
add
jns
adc
lahf
es
dec
add
dec
das
insb
clc
and
arpl
aas
jmp
adc
ja
jp
pop
dec
jp
in
int3
lods
insb
into
ret
stos
in
sahf
sbb
mov
add
pop
xchg
xchg
sub
and
repnz
xor
mov
mov
in
adc
pop
xchg
sahf
fwait
sbb
mov
cmp
in
mov
enter
out
addr16
inc
dec
mov
add
jmp
movzbl
mov
leave
es
repz
fisubrl
jno
std
adc
mov
xor
cmovg
mov
mov
int3
scas
sbb
jl
mov
xchg
loop
jp
xchg
push
aaa
outsb
lods
and
jp
add
pusha
mov
cmp
insb
cld
in
sbb
ja
scas
ljmp
bound
add
ljmp
and
xchg
fbstp
pop
mov
xor
cmc
mov
lds
movl
push
xor
daa
cmp
jb
movsb
push
xor
shll
test
das
push
in
push
lcall
lea
popf
jae
mov
stc
scas
push
pop
ret
fs
jo
push
inc
mov
add
pop
adc
and
jle
push
addb
test
cltd
sbbb
sub
adc
iret
mov
stc
lea
loope
shll
roll
jg
xchg
mov
dec
sbb
pop
xor
clc
mov
cmpsl
mov
mov
test
ficompl
xchg
rcrl
pusha
inc
mov
dec
jge
xor
xchg
les
xchg
fprem1
xchg
and
sbb
jecxz
fwait
adc
sub
cmpb
fwait
test
or
sbb
sbb
push
lods
in
cmc
popl
int
hlt
pop
es
dec
pop
sar
decb
lds
into
push
or
insb
fldenv
mov
xchg
xlat
ret
rorl
lods
mov
repnz
sbb
sub
ja
dec
ret
ret
sub
lods
popf
vshufpd
lret
xchg
push
mov
lahf
jb
jo
insl
and
mov
xchg
fsubrl
add
sbb
leave
and
iret
mov
fsts
cld
or
ja
pop
test
popa
test
sbb
hlt
fs
ss
mov
mov
bound
xor
pushf
inc
jo
cmp
outsb
mov
push
cli
jg
fnstcw
ret
push
sub
lahf
adc
insl
fstps
xchg
stos
sub
or
sbb
dec
push
outsl
sub
loope
das
leave
push
call
loop
ds
outsl
pusha
ljmp
mov
scas
jmp
or
mov
je
sbb
xor
sbb
int3
sbb
es
mov
out
or
flds
divb
and
fstpt
fadds
inc
push
pop
pop
mov
dec
adc
scas
ret
pop
jae
testl
dec
icebp
mov
ds
clc
out
jecxz,pt
mov
insl
xlat
ficompl
jg
stos
xchg
movd
add
pop
inc
mov
sarb
imul
out
xlat
mov
ret
stc
jne
xchg
orb
inc
hlt
or
adc
into
adc
lock
paddd
jbe
insb
lret
loope
mov
dec
fnstcw
shll
movsb
cli
cmp
mov
mov
jge
add
data16
cmp
loope
mov
inc
aam
jecxz
cmpl
mov
mov
inc
xchg
rorb
mov
mov
filds
xor
xchg
out
push
rcll
and
or
and
out
and
adc
inc
cltd
cwtl
loope
das
or
or
insl
mov
cmp
adc
jb
inc
insl
enter
or
mov
ret
and
popf
jecxz
shr
fwait
in
add
call
xchg
andl
pop
add
iret
cmp
sbb
jl
push
sbb
js
stos
insb
rorl
and
mov
and
mov
mov
outsb
rolb
loop
int
pop
xchg
leave
add
cmp
iret
pop
repnz
cmp
sahf
mov
adc
pop
jg
mov
popa
xor
repnz
cmp
mov
jae
jmp
loope
jp
jo
push
xor
cmp
dec
iret
dec
and
imulb
test
jmp
out
cmpsl
iret
add
xchg
and
shlb
lods
cmp
cmc
mov
pop
fistpl
loope
add
mov
inc
mov
pop
sbb
lods
push
dec
loope
hlt
cmp
int
push
jecxz
dec
nop
dec
xchg
mov
dec
inc
mov
popa
popf
aam
inc
lds
xchg
ret
add
stos
leave
repz
lods
test
sub
cmp
xchg
mov
mov
lods
mov
test
xchg
gs
mov
arpl
cmp
add
popa
mov
or
or
gs
sbb
cmpl
orb
sub
jbe
jae
and
fdivl
adc
inc
pop
pop
push
dec
push
and
ja
dec
clc
pop
lods
or
inc
xchg
xor
xchg
dec
clc
stos
aam
mov
cli
in
xchg
adc
rol
jecxz
int3
cli
test
xchg
rol
decb
lahf
pop
imul
lea
stc
or
and
cmp
and
mov
fs
adc
hlt
or
lds
js
xchg
inc
andb
mov
mov
aam
aas
xchg
dec
popa
orb
in
addl
sub
jno
outsl
or
add
int
push
dec
popf
pop
popa
jecxz
lcall
push
lahf
imul
jmp
mov
cmp
lock
in
ljmp
sbb
push
stc
out
cmpl
cmp
xchg
movsl
sti
add
xchg
jbe
iret
pop
mov
xorb
jnp,pn
mov
rcl
xchg
add
outsb
sbb
pop
ret
push
ljmp
scas
mov
adc
data16
cmpsb
adc
pop
orb
out
rclb
fldcw
and
in
dec
mulb
dec
insl
insl
mov
add
lods
imul
mov
in
enter
out
lds
pop
cs
mov
push
pushf
add
xchg
cltd
iret
imul
jnp
in
insl
mov
push
fbld
add
shll
add
dec
and
and
cmp
and
mov
push
sbb
pop
mov
inc
jecxz
int
xchg
sub
ja
and
mov
imul
jmp
shl
xchg
call
fisubs
jns
cmp
cwtl
dec
or
sahf
cli
pop
xchg
cwtl
cmp
inc
xchg
inc
stc
lock
aad
sbb
cmp
sub
pop
iret
fnsave
dec
or
mov
pushf
and
cmp
xchg
stos
xrelease
lret
in
mov
and
lret
sub
push
or
dec
cli
sbb
addr16
repnz
shlb
jl
mov
jns
cld
mov
or
in
mov
cmp
cld
sbb
xchg
jge
add
aaa
mov
push
add
stc
icebp
mov
xor
pop
stos
sub
ds
mov
lret
push
repnz
addl
je
cs
inc
jle
jge
jl
mov
sarb
push
stos
push
test
push
fidivl
icebp
pop
jbe
fwait
sbb
arpl
shl
cmp
xor
in
addb
mov
xor
adc
fistpll
je
out
push
fistpl
sbb
mul
push
imulb
jne
push
subb
fdivrl
in
stos
pushf
fbld
xchg
sub
in
lea
add
jmp
or
lret
lret
lods
in
fldt
sub
jno
fsubr
add
jp
sbb
jl
fwait
pop
in
pop
fs
xchg
push
push
lcall
push
in
jnp
and
ljmp
jmp
or
les
jnp
aam
mov
xor
ja
pop
jmp
pop
or
lcall
mov
movsl
movd
sub
daa
add
loop
mov
lret
xor
pusha
lods
pop
pop
xchg
cmp
fsqrt
push
push
inc
sub
mov
dec
jb
xchg
fsubl
je
int3
call
sub
xor
out
aas
test
and
cmp
mov
test
mov
in
leave
fisttpl
xorl
outsl
dec
xchg
cs
or
mov
jbe
rcrl
fisubl
mov
add
mov
scas
ja
inc
add
sbb
xlat
cwtl
popf
cmpsl
ret
bound
dec
arpl
lea
cs
stos
add
jno
sbb
imul
fldl
int
dec
push
enter
cmpsl
mov
movsl
pop
sub
or
lock
lea
push
and
or
fdivrl
xor
adcl
bound
push
out
jb
or
cwtl
repnz
stos
sbb
xchg
mov
repnz
aas
xchg
outsb
adc
add
cmp
lock
jbe
dec
das
sbb
rolb
stos
dec
pop
xor
enter
out
mov
loop
aam
bound
pop
xlat
and
lds
xchg
fdivrl
sahf
aad
ret
fs
xchg
push
push
xor
leave
dec
push
xchg
stos
dec
xor
mov
push
aaa
cmp
pop
mov
fcoml
pop
mov
inc
mov
mov
fwait
push
sahf
push
jo
insb
mov
rorl
ss
and
sbb
rorl
das
xchg
fs
xor
xchg
testb
jns
cmpsb
mov
add
push
popa
out
rcl
divl
xor
sarl
fiaddl
adc
mov
jmp
dec
xchg
jnp
inc
xor
xor
dec
sti
xor
mov
out
push
lock
push
jmp
jmp
cwtl
sbb
cmc
ljmp
add
testb
xor
push
adc
push
sbb
gs
dec
test
jae
jp
jmp
xor
out
push
or
lret
cmpsl
dec
dec
dec
add
outsl
je
push
cmc
test
push
out
mov
fdivrs
mov
cmp
mov
sbb
xor
pop
into
ret
loopne
adc
and
aas
and
cld
outsb
jg
and
lods
inc
mov
or
sbb
jnp
or
xor
jl
stos
inc
jne
mov
xchg
insb
inc
and
scas
ja
lahf
adc
out
sbb
pop
sbb
sbb
dec
mov
xor
cmpsl
jmp
and
addb
ret
xor
mov
xor
sub
fcompl
adc
in
hlt
add
add
stos
addb
outsb
add
add
pop
inc
cmp
pop
inc
dec
and
mov
adcb
fcoms
data16
aad
mov
inc
imul
inc
jp
inc
addb
cmp
or
dec
js
push
data16
push
scas
ficomps
ret
dec
jb
sbbb
sbb
sbb
mov
fisubs
cli
jle
mov
dec
adc
inc
stos
imul
hlt
std
loope
aad
fs
and
arpl
add
mov
cwtl
rorl
jno
ljmp
push
dec
movnti
addr16
in
xchg
js
adc
or
and
sub
pop
loope
cmc
orb
cmpsb
adc
cltd
testb
andl
test
or
mov
jecxz
mov
je
mov
push
imull
xor
cwtl
stc
movb
and
and
and
dec
jno
cmc
add
rcrb
inc
add
xchg
xchg
rcll
rcll
dec
pop
sbb
mov
dec
add
dec
loopne
outsl
xchg
test
or
mov
pusha
sahf
jns
mov
lahf
lods
sub
push
xchg
and
in
sub
inc
fldt
cli
or
iret
sbb
incb
int
inc
cmpsb
ss
insb
push
cmpsw
in
jb
xchg
les
rcrb
or
out
cmp
add
fcomps
xor
mov
sahf
ret
jae
inc
aam
push
mov
push
sub
jecxz
ss
insb
cmpsl
shl
nop
xor
stos
inc
xchg
jge
cmp
in
js
xchg
lret
ss
mov
std
sbb
mov
repz
jecxz
mov
push
mov
sbb
push
cltd
hlt
jmp
mov
inc
dec
rcrb
leave
adc
cltd
mov
lcall
adc
loope
outsl
cs
pop
pop
mov
sub
out
xchg
pop
xchg
stos
dec
les
aas
mov
inc
lods
shlb
jecxz
aas
test
inc
insb
scas
into
punpckhdq
ret
sysenter
fisttps
cwtl
inc
pop
int3
mov
lea
add
cmp
mov
add
add
lds
xlat
jl
popa
jge
mov
push
jmp
cmp
or
icebp
add
gs
pop
mov
pop
pop
adc
stc
xchg
addr16
in
dec
jno
repz
int3
sahf
shrb
test
mov
add
mov
push
push
sub
mov
int
icebp
inc
rol
mov
std
sub
fwait
sub
loope
jne
add
in
push
xchg
add
les
insl
mov
cmpsb
sub
push
ja
adc
push
add
lds
push
sbb
mov
xlat
ret
dec
test
cmp
scas
gs
in
xor
stc
shlb
repz
aaa
aam
call
and
add
mov
inc
movsb
daa
scas
push
dec
pushf
dec
cmc
mov
mov
sub
mov
bound
sbbb
jecxz
stos
mov
add
ret
push
push
cld
shll
leave
mov
mov
lds
xor
mov
mov
push
xchg
subb
cmc
pop
xchg
jmp
jmp
xchg
insl
sbb
rorb
cmpsl
cld
rorb
jl
pop
stos
adc
iret
jne
sub
scas
test
dec
pop
sar
mov
imul
mov
cmpsb
lds
pop
inc
movsb
xor
adc
les
mulb
pmulhw
insl
inc
xor
cmp
pop
add
add
push
stos
pop
mulb
jnp
inc
sub
sub
jae
cli
mov
mov
cwtl
pop
repz
into
shll
dec
sub
lods
xchg
or
arpl
ljmp
push
test
and
cmp
xor
adc
outsb
mov
orb
xlat
fucomi
shr
mov
out
jnp
and
enter
pop
add
fs
into
dec
shlb
arpl
inc
inc
mov
popf
cmp
or
enter
fcompl
arpl
xor
pop
dec
ljmp
enter
enter
pushf
scas
sub
adc
int
sbb
cli
int
in
outsb
lock
cmc
stc
je
ds
sahf
call
fnstcw
cmpsb
icebp
scas
push
out
inc
fadd
fldenv
mov
stos
lcall
jno
mov
mov
jae
lcall
xchg
and
repnz
push
cli
cli
jo
add
aad
arpl
mov
push
xor
cli
nop
mov
out
mov
sbb
jns
call
xor
dec
inc
aas
pop
jo
in
std
in
arpl
sahf
sub
repz
mov
jmp
ds
fsubp
push
mov
test
aas
cmpsb
movsb
sbb
cmp
ret
adcb
js
jnp
pop
pop
push
cmp
jg
sub
stos
arpl
fwait
push
insb
push
pop
pushf
mov
sarb
sbb
ljmp
add
cmc
popa
in
leave
dec
pop
mov
or
cmp
jnp
outsb
mov
cmp
stos
mov
mov
movsb
stc
or
sub
xor
fwait
xor
pop
insb
mov
fmull
sub
out
push
je
ret
addr16
call
and
pusha
repnz
sub
loope
xor
std
rorb
hlt
push
mov
call
sub
shll
aam
fldenv
push
jns
into
mov
pop
test
out
insb
test
in
sub
mov
add
xor
cmc
mov
ja
sarb
in
adcb
scas
mov
pop
mov
lock
xchg
and
and
jne
stos
xor
repnz
pop
gs
popa
stos
sub
and
push
out
or
jno
adc
inc
add
xor
cmp
jbe
cmp
cmp
repnz
sub
add
xchg
jp
out
cmp
jo
test
and
cld
cmp
jge
sub
dec
xchg
dec
pusha
sbb
mov
cmp
add
iret
add
lret
add
les
repnz
push
lea
fdivp
std
dec
push
push
jno
out
outsb
mov
mov
or
mov
stc
fs
or
or
push
mov
andb
cltd
shrl
in
pop
adc
ja
or
cld
jl
and
clc
mov
mov
and
mov
loop
mov
cltd
jmp
and
test
add
cmp
sbb
mov
add
push
xchg
cwtl
sbb
shlb
jbe
xchg
fildl
sub
xor
in
add
in
ljmp
mov
sbb
pop
or
cmp
push
push
fcomi
addb
add
sbb
pop
add
fxch
and
dec
into
test
fcoml
mov
aad
gs
icebp
push
fcomi
jp
pushf
popf
jle
test
and
mov
jno
lea
adc
es
fidivl
lahf
mov
xchg
out
and
inc
xchg
push
mov
es
xor
inc
push
sub
dec
sti
mov
add
xchg
data16
lods
aad
add
dec
repz
hlt
adc
or
cwtl
and
inc
jne
or
mov
mov
cmpsb
push
and
rol
lcall
jmp
arpl
daa
sti
in
sub
ret
out
push
pop
dec
pop
add
xor
mov
orb
cmp
or
jge
icebp
popf
mov
xchg
mov
loopne
incb
jno
fisubs
outsb
lods
mov
push
sub
dec
sarb
ja
aad
jge
inc
roll
std
push
jg
sub
daa
adc
daa
xchg
addl
or
pushf
and
xchg
loope
mov
stos
xlat
int
push
dec
push
xchg
inc
jg
cmp
mov
jge
gs
nop
mov
add
xor
mov
and
pop
push
push
std
imulb
enter
sub
xchg
dec
inc
jb
mov
jmp
push
lahf
aad
jmp
or
lcall
push
mov
jns
ja
xorl
pop
dec
addr16
push
sub
mov
inc
mov
movsl
imul
adc
mov
lock
mov
test
outsb
sbb
mov
sub
jle
and
int
fstpt
sbb
and
inc
orl
in
mov
mov
xchg
jbe
jae
rclb
inc
popl
nop
mov
aas
hlt
aad
cmpsl
jns
xchg
jg
mov
adc
mov
push
add
mov
jp
sbb
jne
mov
jg
stos
cwtl
mov
mov
mov
addr16
sti
cwtl
imul
or
loop
mov
sbb
lock
mov
mov
movsl
ffreep
sub
loope
jno
mov
cs
push
cmp
sub
xchg
lahf
out
adc
icebp
sub
imul
sti
addr16
cld
inc
and
or
xchg
dec
scas
xor
data16
mov
sub
add
cmp
leave
adc
add
loop
pop
movsl
repnz
aam
adc
js
dec
daa
mov
movsb
inc
and
or
sub
scas
aad
push
sub
sub
mov
or
in
mov
adc
aas
ljmp
inc
mov
dec
mov
or
fisubrs
xchg
int
scas
arpl
pop
out
or
push
mov
stc
bound
mov
cmp
mov
pop
sub
adc
jmp
mov
ret
adc
mov
outsl
adc
jb
lock
je
sub
dec
pop
inc
sbb
dec
leave
lcall
gs
push
ds
or
out
repz
push
test
negl
xlat
inc
mov
lds
jle
or
or
andb
fmul
or
imul
scas
ss
ret
shll
mov
mov
mov
xchg
xorl
mov
in
dec
lods
fbld
dec
mov
cli
rcll
mov
sbb
outsb
lret
out
adc
mov
les
cmp
cli
scas
out
mull
stc
aam
repz
xor
js
outsb
adcb
xor
push
les
lock
aam
shll
mov
ret
mov
mov
cmp
mov
movsl
lods
pop
jo
cs
or
insb
lret
add
imul
jge
mov
sub
sarb
aas
pop
add
add
je
sahf
jge
adc
je
cld
das
imul
pop
aaa
dec
ds
and
rorl
inc
stos
jbe
mov
mov
and
push
movsl
mov
lea
ret
xchg
sub
leave
dec
pop
fwait
imul
stos
fmuls
shrb
leave
test
push
mov
es
icebp
fisttpll
pusha
sub
push
mov
aaa
loope
lret
pop
out
out
ljmp
pop
pop
in
inc
outsl
dec
enter
pushf
test
js
fsubr
sarb
mov
and
scas
and
mov
xchg
mov
sbb
sti
jbe
call
mov
or
leave
outsl
fcoml
repz
push
mov
hlt
xchg
roll
xchg
rol
sbb
int3
clc
mov
dec
adc
mov
xchg
sbb
sub
and
je
inc
jge
in
cld
and
mov
aam
inc
mov
push
adc
push
rclb
xor
mov
in
mov
mov
mov
insb
out
add
xchg
adc
pushf
xchg
xchg
in
sbb
imul
sbb
lods
mov
push
or
dec
dec
mov
add
in
inc
repnz
rcl
repnz
dec
cltd
jmp
repnz
cmp
loopne
out
jne
rorl
in
lods
lea
pop
negb
imul
jg
aad
inc
xchg
fs
int3
mov
mov
inc
or
lcall
jecxz
jnp
or
cli
repnz
mov
inc
jo
les
xchg
in
cmp
ret
dec
sbbl
stc
dec
aad
jle
stos
adc
pop
stos
hlt
leave
pop
mov
pop
es
roll
dec
add
add
adc
pop
sbb
fs
sarl
mov
mov
shlb
int3
mov
mov
push
popf
scas
shll
xchg
fwait
push
in
lods
cmpsb
test
or
cltd
jecxz
ja
sbb
adc
lods
sbb
xor
aaa
stos
dec
adc
xchg
jp
mov
lods
jns
xchg
ficomps
and
lret
roll
sub
stc
xor
mov
std
xchg
jge
aas
jmp
std
mov
sub
jecxz
loop
add
aad
cmpl
jnp
dec
daa
lods
dec
push
lahf
insl
mov
int3
inc
inc
xchg
ljmp
in
data16
ss
xchg
dec
sub
cmc
mov
mov
pop
mov
int
push
rclb
popa
mov
roll
sbb
fsubrl
insb
xor
mov
cs
inc
cmp
xchg
mov
add
mov
aam
subl
or
jecxz
mov
cwtl
jns
mov
out
les
bound
div
mull
xchg
ss
mov
stc
mov
ficompl
rol
push
mov
aad
mov
ret
mov
fists
dec
and
ja
int
ljmp
js
mov
orl
dec
mov
test
lret
dec
pusha
jl
xor
push
jmp
dec
pop
loop
adc
sub
lds
lret
lret
sahf
shll
sbb
and
xchg
jg
sub
out
std
popa
push
test
add
dec
jle
xchg
je
nop
jne
popf
dec
mov
xchg
dec
dec
scas
jmp
and
cmp
sbb
mov
add
les
xchg
repz
call
roll
repnz
or
fldenv
fwait
sbb
inc
in
iretw
in
xor
xchg
popa
mov
and
xor
inc
pop
ret
ficomps
ret
imul
jne
stc
push
pop
mov
lret
or
mov
xor
inc
rorb
fs
adc
cmp
icebp
push
pop
mov
cmp
add
pusha
fstps
push
lods
ret
inc
add
test
adc
dec
sub
nop
pusha
ret
js
out
mov
fs
sbb
add
out
push
sub
mov
out
pop
or
nop
sbb
mov
adc
gs
cmp
lea
or
add
adc
mov
pusha
movsb
loopne
dec
cmp
popa
push
dec
fcomps
mov
fadds
arpl
test
sub
stos
test
mov
and
sti
push
or
dec
sub
js
push
jecxz
imul
outsl
lcall
cmp
inc
fwait
add
fisubrs
idivl
cmpsl
cmp
dec
addb
cld
hlt
test
pop
cltd
rorl
sbb
xor
bound
xchg
out
dec
inc
mov
out
push
adcb
clc
or
push
and
pop
adc
and
pop
fwait
sub
sbb
mov
push
subl
pop
mov
sbb
leave
and
popa
idivb
jbe
jmp
sti
shr
arpl
mov
aad
xchg
mov
pop
outsl
fldcw
cmpsl
push
pop
aas
mov
aam
cmp
mov
or
in
mov
mov
xchg
je
aas
aaa
and
push
pop
mov
jno
sub
cmp
int
shrl
dec
sub
movsl
xchg
inc
test
or
push
cs
lcall
sub
pop
dec
bound
test
inc
movl
dec
push
insb
test
mov
ret
aad
js
lods
jnp
bound
or
clc
jl,pt
movl
mov
pop
lahf
xor
or
imull
xchg
xchg
outsl
inc
jns
inc
je
pop
jge
fwait
cld
push
push
cmp
xchg
sub
jns
dec
inc
shll
dec
add
das
in
jp
cs
inc
lds
sbb
and
in
and
pop
repnz
clc
and
sti
mov
aad
inc
add
xchg
bound
jb
into
dec
sbb
xchg
or
cmp
lret
or
sbb
dec
in
mov
add
enterw
add
mov
mov
pop
es
out
out
xchg
xor
loop
ds
fsubrl
inc
stos
pop
ljmp
mov
cmp
nop
iret
cltd
jle
imul
or
imul
xchg
fiaddl
pop
or
lods
mov
scas
in
out
aam
ljmp
push
pop
inc
inc
repnz
inc
pop
mov
call
push
mov
int
arpl
xchg
jecxz
test
imul
mov
xor
jno
subl
movsl
repz
mov
sarb
sbbb
test
jae
popf
sub
mov
pop
test
cmp
xchg
addl
imul
jecxz
xor
rolb
mov
mov
call
mov
mov
or
cmpsl
decl
jge
data16
add
xchg
pop
stos
loopne
xor
push
push
mov
jne
sbb
pop
nop
repz
jge
cmp
jmp
sub
sub
test
and
cmc
cmpsb
mov
mov
pmaxub
xchg
mov
fidivs
adc
and
ret
jg
xlat
inc
xor
subl
push
mov
repnz
xchg
mov
mov
loopne
pop
pop
fcomps
mov
cld
data16
jmp
or
push
mov
push
pop
inc
ficoml
arpl
jmp
add
fcmovnbe
ja
repnz
adc
pop
in
fstl
jecxz
aaa
push
sub
mov
sbb
inc
sub
pop
add
test
lret
divl
mov
ret
mov
sub
mov
fcoml
inc
sub
jo
xor
mov
sub
mov
pop
jb
adc
out
xchg
enter
ja
mov
scas
cmp
and
add
dec
arpl
loopne
push
movsl
pushf
mov
push
movsl
sar
scas
test
mov
rol
pop
sub
mov
mov
sarb
lret
orb
xchg
test
popf
repnz
in
iret
addr16
cmp
sarb
imul
push
xor
jns
insb
pop
out
pushl
or
pop
aad
sbb
jmp
sub
rcrb
loope
icebp
add
fnstcw
dec
ffreep
sbb
pusha
add
mov
jecxz
xchg
sub
xor
inc
cmpsb
add
andb
lea
mov
stc
sub
or
shll
sub
lcall
ljmp
sahf
cmp
lret
jmp
jb
adc
loopne
sbb
je
jl
out
sahf
jae
sbb
jp
xchg
dec
jns
test
and
and
and
sub
fwait
sbb
dec
inc
dec
ljmp
sti
imulb
push
pop
movsl
jg
pop
call
and
ljmp
popa
sub
fcoms
repz
dec
inc
orb
jp
push
xchg
loopne
mov
repz
sub
add
inc
into
push
dec
stc
in
call
sahf
sbb
mov
out
nop
sbb
notb
fsubrs
in
loope
pop
push
xchg
xchg
out
cmp
push
xor
and
xchg
rcrb
inc
ds
fsub
adc
lds
mov
mov
mov
test
xchg
sub
cmovs
rolb
jnp
pusha
and
xchg
out
pop
shlb
mov
cmp
adc
xchg
mov
je
lods
ficoms
stos
out
je
int3
add
call
popa
pop
push
div
jb
loop
inc
repnz
ljmp
push
ljmp
adc
mov
xchg
sub
loope
push
or
mov
fidivs
addb
inc
sub
sti
adc
sbb
jge
stos
out
test
mov
rorl
aaa
andl
jmp
push
adc
mov
shlb
adc
in
cwtl
jmp
or
cli
mov
test
xchg
out
push
add
es
cmp
gs
pop
stos
pushf
cld
aaa
movsl
daa
pop
ret
inc
shrb
add
mov
movsl
dec
dec
nop
push
cmp
int3
dec
ds
test
mov
loopne
cltd
lret
mov
movsl
or
dec
push
mov
aam
loopne
jae
movsl
pop
test
lods
outsb
mov
inc
pop
iret
and
std
gs
sbb
jl
adc
mov
xor
andl
xchg
cmpsb
sub
jp
imul
adc
inc
leave
sbb
in
mov
mov
adc
bound
sbb
and
mov
push
mov
es
mov
mov
and
adc
pop
dec
xor
xchg
add
push
fiadds
out
cmpxchg8b
iret
mov
stos
jb
mov
sahf
cli
and
cmp
outsl
hlt
or
mov
fimuls
cs
cmp
outsb
mov
jo
inc
fdivrl
push
dec
dec
xchg
add
lds
xchg
mov
jns
push
jo
pop
dec
out
push
push
xor
popa
add
arpl
ficompl
or
mov
js
sub
xor
lahf
fistpl
rep
jnp
push
sbb
adc
inc
add
jo
mov
out
ljmp
loopne
addl
cmp
cmc
add
push
popf
shll
xchg
push
fldcw
shrb
and
insb
xor
rcrb
mov
rcll
jecxz
iret
fcomip
mov
mov
fnstenv
iret
sub
mov
shr
rorl
sbb
lods
std
int3
fimuls
shll
mov
mov
movsl
and
mov
js
aas
in
mov
xchg
and
jp
mov
sahf
int
push
nop
mov
mul
in
lret
inc
inc
jbe
icebp
mov
daa
insl
popa
sbb
gs
pop
xor
lds
sbb
cmp
sbb
mov
fldt
sbb
mov
jg
inc
xchg
insb
int3
test
mov
ss
xor
or
lret
popf
mov
aaa
push
andl
jb
je
inc
or
aad
and
test
out
xchg
xchg
imul
aam
or
aaa
dec
clc
xchg
out
stc
mov
jg
mov
pop
scas
std
pop
les
pushf
mov
xor
add
stc
pushf
fdivrs
mov
inc
xchg
pop
push
test
pop
mov
jmp
adc
lods
pop
pop
nop
sub
punpckhwd
or
pop
hlt
inc
cmp
call
push
sahf
add
jmp
add
insl
xlat
fisubs
rorb
jecxz
out
call
aaa
test
loope
cmpl
jns
ret
rdtsc
jb
push
xchg
mov
ss
mov
js
sub
dec
pushf
cltd
pandn
or
lds
and
lret
push
dec
push
in
int
in
fimull
push
xchg
stc
push
repz
scas
sub
jbe
lds
jecxz
aam
adc
xchg
pusha
mov
lea
rcrl
test
lods
lret
cmp
xor
xor
jo
lahf
test
enter
xchg
jp
adc
cmpsl
stc
fstps
jno
xchg
jns
mov
imul
nop
mull
inc
fldt
lcall
mov
scas
push
ret
leave
sub
lea
or
and
xchg
pop
push
dec
aas
or
out
cmpsl
enter
mov
inc
mov
sub
hlt
sbb
jns
jne
mov
add
dec
xor
aam
sbb
mov
jmp
mov
xor
mov
xchg
push
mov
sbb
loope
mov
cmp
push
adc
cld
icebp
clc
rorb
sub
jmp
pop
loopne
fwait
in
mov
jbe
lea
sbb
mov
insl
and
aad
int3
cmpsb
stos
xchg
or
pop
cmp
cmp
pop
das
xchg
inc
out
icebp
cli
inc
nop
cmp
push
jae
loopne
outsb
and
sbb
in
ljmp
cli
gs
cmpsb
pop
dec
add
jmp
cmp
sub
ret
cmc
fdivl
je
adc
dec
xchg
push
sahf
je
arpl
cmp
movsl
pop
lea
sbb
fsubl
in
mov
or
repnz
lea
jne
out
sub
int
fstp
mov
nop
in
push
push
cmp
inc
gs
test
cmp
cmp
pop
fxch
add
dec
inc
cli
out
mov
fldenv
sbb
enter
daa
movb
mov
pop
in
aad
rolb
lods
xor
inc
cmp
cmpsl
lock
xor
sub
bound
mov
lods
fimuls
repz
sub
jp
sub
jmp
sub
adc
jo
xchg
and
aaa
test
fnsave
test
pop
push
insl
shlb
inc
rcl
add
cmpsl
pop
or
mov
mov
je
cli
out
pusha
xchg
adc
mov
inc
inc
add
sti
rclb
cmp
jge
pop
rcrl
xchg
mov
andb
xchg
mov
sub
in
out
pushf
js
mov
aaa
mov
call
rorb
or
jns
jae
loope
xor
lods
mov
inc
lret
push
loop
arpl
lods
jo
outsb
adc
pop
mov
and
pop
push
and
nop
pop
fadds
lods
fs
push
icebp
retw
cmp
sub
loopne
cmpsl
and
test
into
ja
int3
xchg
pop
in
cmp
dec
outsl
jb
int
jmp
into
lds
jnp
mov
xor
xor
ljmp
cmc
out
cmc
mov
and
cs
jb
xchg
iret
je
ret
sub
stos
ret
mov
lcall
jle
push
mov
rcrl
sub
jge
insb
filds
sub
cvtps2pi
sbb
mov
loop
mov
xor
fsubr
jnp
mov
dec
stos
and
cli
xor
cmp
push
push
sub
sbb
pop
and
negl
xor
cld
pop
movsb
imul
shll
push
sbb
enter
xlat
jge
fcmovu
repnz
pop
sbb
dec
add
xchg
fnstcw
jmp
movsb
not
fcomi
pop
imul
adc
adc
inc
sbb
lock
outsb
or
mov
outsb
mov
sbb
sub
aad
sti
rorb
test
lcall
scas
and
jmp
dec
and
ds
jns
bound
add
std
sub
cmp
pusha
jns
cmp
ljmp
mov
push
les
fs
cmp
add
mov
push
fsubs
or
in
nop
stc
xchg
jg
xchg
mov
xchg
pop
movsb
subl
sbb
mov
dec
mov
sbb
mov
adc
sub
js
loope
loope
in
aam
mov
lret
bound
hlt
pop
jl
xchg
std
int3
or
add
jo
adc
push
je
jae
mov
outsl
and
push
sti
pop
leave
rolb
scas
pop
orl
pop
xor
or
inc
push
repz
cmp
xor
push
fsubs
ja
pop
adc
cmp
daa
jne
inc
shrl
add
rorl
fcoml
cmc
jle
ds
dec
test
pop
sti
jp
pop
lret
mov
loop
dec
sarl
cmp
mov
xchg
insb
test
outsl
jns
sub
add
in
cli
jle
mov
ljmp
sbb
pusha
fiadds
adc
roll
out
jge
lock
jge
mov
mov
cmp
xor
je
aam
fmull
xchg
push
mov
xor
ret
mov
es
adc
stos
out
and
xor
push
jbe
xchg
daa
adc
sbb
adc
dec
stos
mov
mov
sbb
adc
fsubrs
mov
sub
loop
mov
jnp,pn
mov
int3
pop
xchg
xor
insl
bound
mov
sbb
sbb
jmp
jb
lcall
mov
add
out
pop
lods
add
scas
jp
push
push
orl
and
push
xor
std
pop
les
ret
insb
xor
iret
int3
outsb
jge
push
push
mov
and
daa
cld
cmp
push
pop
stos
fimull
lret
and
jno
iret
mov
adc
adc
cmp
cltd
and
push
rorb
or
mov
push
or
mov
ret
mov
cmp
repnz
loope
jo
push
fists
adc
push
pop
out
mov
pop
inc
jnp
and
icebp
data16
test
sar
pop
fcmove
adc
sub
jecxz
rclb
cltd
cmp
mov
lcall
inc
sti
leave
rol
insb
bound
and
xor
jno
insb
xchg
jne
sub
int3
lahf
pop
leave
xor
dec
out
jle
aad
cmp
mov
pop
jb
call
test
push
imul
inc
mov
or
pop
lods
jns
jecxz
push
lods
ret
cli
push
push
push
clc
jbe
test
ja
cmp
push
aaa
push
in
mov
imul
inc
ljmp
pop
std
push
fdiv
in
ja
mov
stos
cmpsl
cmp
leave
outsl
test
xchg
dec
test
mov
movsb
jb
inc
daa
or
stc
sbb
cmp
fiadds
shlb
and
jp
pop
adcb
sbb
add
test
movsl
cmc
stos
mov
testl
lahf
popf
xor
hlt
inc
fs
sbb
test
js
pop
jp
inc
stos
and
scas
daa
or
movsb
movsb
inc
adc
push
push
js
loop
fs
gs
popf
adc
jno
xlat
sarb
and
mulb
pushf
dec
fsubs
stos
jo
jae
out
mov
jl
jno
or
cld
js
adc
sbb
xor
mov
cwtl
ja
cmp
cmpsb
lret
push
and
push
cmp
mov
mov
mov
sarb
inc
mov
xor
xchg
mov
scas
sbb
lret
lock
mov
cmpsl
xchg
and
call
sbb
test
insl
xor
call
push
xchg
cmp
and
ret
int
imul
test
test
mov
xor
mov
xor
movsb
lahf
adc
or
pop
mov
rcr
test
push
adc
inc
loope
mov
fisubl
jecxz
pop
stos
mov
test
dec
dec
jecxz,pn
or
pop
sub
decl
aam
push
or
out
daa
xchg
sbb
dec
insl
ret
mov
push
jle
fwait
dec
adc
and
lret
gs
adcl
aas
mov
das
sub
movsb
cmc
add
push
outsb
push
stos
cmp
mov
push
int
sbbb
in
mov
test
je
fs
xchg
sub
fwait
iret
ljmp
popa
sbb
lret
and
call
popf
ret
inc
push
push
xor
aas
addr16
sub
dec
es
or
push
pop
cmpsl
dec
mov
imul
inc
movsb
sbb
mov
into
inc
dec
lret
mov
cmc
cmp
sub
fs
pop
jl
icebp
rorb
cmpsb
shll
and
das
sar
movl
testl
clc
xor
test
jb
pop
lret
gs
sbb
out
push
testb
inc
sbb
fcoml
or
inc
icebp
xor
xchg
cmc
aad
add
je
xchg
push
inc
jns
jg
out
inc
nop
outsb
sub
jne
pop
jne
sbb
test
shll
xchg
inc
xchg
pop
dec
stos
repnz
add
sbb
adc
sbb
in
sbb
shlb
and
pop
insl
pop
add
mov
data16
cmpsb
and
cmp
push
dec
cmovb
xchg
int
xchg
or
cmp
xorl
xor
gs
cmc
sbb
frstpm(287
adc
or
mov
mov
push
cltd
test
fsubr
jnp
fisubs
dec
pop
repnz
sbb
push
mov
loopne
mov
stos
leave
aaa
lcall
push
dec
pop
aam
pop
push
in
repnz
or
cmp
and
dec
rep
jb
mov
dec
mov
cmp
push
std
mov
scas
xchg
xor
loopne
insl
mov
xor
mov
cmp
adc
insl
enter
push
aad
mov
lahf
push
les
mov
data16
stc
fistl
mov
js
mov
xchg
outsb
pop
pop
ljmp
mov
xchg
cmp
inc
cltd
addl
in
pop
lahf
in
and
inc
ror
movsb
xchg
fmull
es
lret
inc
sub
enter
mov
cmc
adc
loopne
sbb
add
ljmp
in
mov
testl
jo
sub
adc
xchg
out
movsl
nop
dec
outsb
pop
cmc
jne
popf
mov
cmp
movsl
jmp
mov
inc
xchg
and
call
jl
dec
sbb
and
add
pop
mov
cmp
pop
inc
fistps
les
cmc
shrl
imulb
add
pop
dec
daa
jge
cmpsb
sbb
pushf
int3
hlt
imul
push
and
les
mov
shll
push
sub
cmc
and
loop
sub
pop
push
sbb
sti
cli
outsl
cmp
lods
rclb
roll
repz
mov
test
rolb
je
dec
leave
cmpsl
inc
or
daa
daa
in
sahf
movsl
pusha
mov
insl
mov
push
cmp
adc
fcoms
bound
jo
mov
push
xor
psubsw
es
rolb
sbb
push
jle
sub
xorl
add
xor
insl
insl
mov
sub
and
imul
inc
mul
fstl
hlt
mov
sbb
pop
mov
push
cs
ret
push
fwait
lea
pop
test
xorl
faddl
stos
aam
lret
scas
jge
dec
push
loope
and
cmp
mov
data16
xor
push
subb
mov
ficoml
mov
shlb
mov
sub
lret
fsubs
ds
push
ja
fwait
xchg
sbb
xchg
pop
sbb
shr
fldcw
adc
adc
pop
out
dec
push
jo
lds
dec
repnz
adc
xchg
push
stc
add
push
push
sub
sti
aad
and
pop
pop
add
div
outsb
sbb
xchg
xchg
enter
outsb
xchg
les
lds
sub
mov
cmpsb
adc
scas
ja
leave
mov
mov
cmp
xchg
shl
ljmp
xlat
pop
mov
xchg
or
test
ret
mov
in
sti
lea
lods
pop
jno
mov
cs
dec
sbb
mov
mov
out
icebp
test
mov
outsl
fwait
xchg
xor
ret
jo
mov
imulb
jae
sbb
lods
or
sbb
add
jp
push
stos
data16
cmp
mov
adc
push
inc
orl
fdiv
sarb
shlb
adc
bound
test
push
addr16
orb
lret
out
enter
mov
dec
adc
clc
cltd
sbb
in
std
dec
ficoml
dec
lcall
into
ret
test
adc
mov
in
andl
inc
pop
adc
mov
mov
out
dec
lahf
neg
xor
push
sarb
xchg
mov
sbb
clc
movsl
inc
mov
fisubrl
sub
xchg
insl
insb
sub
mov
mov
cld
repnz
popf
outsb
clc
in
dec
or
adc
jmp
lock
loopne
in
test
mov
enter
fwait
aad
push
loope
sahf
das
sub
jg
aaa
sti
imul
inc
mov
ja
sub
mov
push
mov
sti
fxch
das
movsb
inc
dec
pop
sub
xchg
sbb
adc
xchg
sbb
sbb
aad
flds
add
pusha
call
or
or
push
cld
out
sbbb
in
jnp
outsb
scas
ss
mov
pop
sub
and
pop
cltd
cmp
jb
xchg
fistpll
testl
loopne
mov
lahf
imull
lock
cltd
add
call
in
jle
inc
jo
push
mov
jne
int3
or
fimull
shlb
pop
xchg
cmp
mov
aaa
push
arpl
movsl
mov
loopne
adc
cmc
pushf
inc
loope
out
add
and
popf
pop
scas
push
mov
mov
or
shrl
push
or
sub
cmp
or
cltd
cmc
inc
inc
aam
int3
jecxz
roll
mov
icebp
repnz
lret
enter
cmc
fildl
adcb
xchg
xor
jp
mov
and
aas
iret
push
pop
adc
dec
mov
jnp
lods
add
xchg
mov
imul
jns
fnstenv
dec
repz
call
or
mov
lcall
test
sahf
call
ds
pop
add
add
or
add
bound
fs
dec
and
fists
inc
out
dec
pop
add
push
mov
stc
sti
arpl
mov
imul
push
sub
inc
nop
dec
pop
sub
and
adc
jge
cmp
in
mov
xchg
cwtl
rorl
lods
add
jmp
add
or
lret
call
or
ja
ds
loop
xchg
dec
ljmp
bound
inc
adc
flds
cmp
movsb
mov
pop
push
aam
stos
add
fsub
das
divb
aam
dec
mov
xchg
das
sbb
adc
mov
es
mov
addr16
pop
lock
cmc
or
cmp
repnz
jnp
gs
inc
xor
mov
dec
fcompl
mov
jg
dec
fsub
rorl
inc
add
xchg
and
jne
jae
mov
shlb
jo
jle
push
int3
imul
imul
sub
push
sti
and
pop
push
push
mov
fdivrl
rcrl
fmull
jno
sub
popa
stos
pushl
shlb
in
push
jae
test
sub
cmpl
adc
lcall
lods
push
jno
mov
sbb
pusha
xchg
lret
outsl
out
adc
mov
rclb
or
test
adc
xor
xchg
push
in
and
adc
cmpsb
xlat
int3
push
ret
fiadds
xorb
es
aad
mov
in
inc
mov
sahf
and
mov
push
dec
outsb
pop
scas
adc
rclb
and
mov
or
xor
in
cs
mov
shrb
int3
cltd
stc
push
and
xor
insb
lea
in
int
scas
cltd
mov
cmp
cmpl
aad
mov
push
pop
sbb
es
cmp
jecxz
sbb
mov
and
xor
dec
jp
xor
or
push
movsl
pusha
mov
lds
flds
lods
inc
stos
loopne
mov
aam
or
test
movsb
add
dec
adc
bound
ret
sbb
imul
mov
loope
flds
rcrl
dec
stos
adc
jmp
push
movl
jecxz
cmp
inc
stos
out
pop
mov
pop
enter
mov
xchg
cmp
mov
pop
clc
and
mov
int3
jno
ds
sub
cs
fdivs
fisubs
mov
mov
dec
sti
ds
cmp
pop
shll
adc
rol
daa
mov
or
dec
dec
ja
daa
not
xor
fcomps
jbe
cmp
pop
xchg
push
divl
sbb
out
idivb
mov
fisubs
out
sub
sub
imul
roll
xlat
ljmp
addr16
stos
xlat
xor
pop
sbb
insl
push
jecxz
aaa
cmc
jb
rorb
or
ror
cltd
mov
dec
lcall
movsl
loope
mov
aam
jae
push
xor
out
test
ja
aam
xlat
xchg
cmc
dec
push
jmp
out
mov
mov
lret
pop
xor
sbb
jo
xchg
jnp
xchg
add
insb
out
in
cmp
or
cmp
daa
div
into
sub
aas
xchg
xchg
inc
mov
xchg
add
dec
mov
adc
in
push
push
lcall
ljmp
ret
cmpsb
cmp
jbe
jb
filds
loope
mov
and
lods
outsl
mov
push
repz
es
sub
inc
cli
shl
idiv
bound
jb
xchg
mov
icebp
push
outsb
adc
lret
rcrb
push
shl
xchg
repz
adcb
sahf
inc
in
jge
lea
hlt
loope
ds
add
dec
lahf
jmp
lds
mov
mov
out
dec
cmc
in
mov
iret
es
inc
xor
jo
jae
popa
test
ret
and
scas
jo
std
pushf
je
les
repz
out
jb
or
daa
test
popf
inc
sbb
push
ret
lret
js
or
adc
addr16
push
cmpsb
or
leave
mov
inc
cltd
adcb
xor
push
inc
scas
xor
pop
rcrl
hlt
lcall
push
jo
push
push
call
push
and
cs
xor
pop
inc
shr
clc
xchg
or
jbe
push
mov
or
arpl
dec
flds
test
sub
popa
cmp
cld
inc
sbb
lods
sbb
movsl
nop
jg
loopne
sbbl
jb
subb
lcall
aad
mov
jae
inc
pop
fwait
popf
fnstcw
daa
data16
lods
sti
or
sbb
sarl
sbb
ja
pop
jmp
std
loopne
xor
cmp
push
dec
add
fstpt
mov
mull
arpl
add
xor
test
pop
mov
imul
lcall
or
andl
movsb
repz
cmp
std
dec
mov
cmp
arpl
fcoml
leave
inc
mov
and
loope
stos
int
cmp
mov
test
mov
push
mov
and
shlb
adc
adc
popf
push
fidivl
nop
subb
jno
lods
xchg
int
xor
pop
movsl
inc
pop
inc
and
scas
stos
xchg
dec
fcmovu
sub
pop
loop
cmp
out
pop
sub
inc
lret
jb
inc
setae
ret
inc
mov
test
adc
inc
push
repnz
lds
push
adc
mov
or
mov
jecxz
add
negb
fstps
bound
pop
mov
ja
xor
push
stos
mov
and
mov
or
aas
popf
sahf
mov
and
dec
and
mov
hlt
es
xor
aam
mov
or
int
cmc
xchg
add
mov
pop
add
imul
xchg
and
stos
cmp
jo
add
pop
or
ljmp
push
mov
sbb
or
inc
jno
ffreep
jge
cmpsl
mov
xor
fs
leave
inc
sahf
mov
out
or
adc
prefetcht2
push
push
leave
dec
inc
out
xchg
push
and
mov
adc
push
xor
push
ret
popa
lret
lock
xchg
xchg
and
pop
test
pop
sbb
in
mov
jecxz
data16
cli
pop
mov
nop
cmc
movsl
cltd
or
cmc
inc
adc
es
push
or
movsb
pop
xchg
or
pusha
or
push
mov
xchg
mov
clc
push
add
movsl
repnz
or
add
cmp
fistl
push
leave
notl
call
in
jb
fwait
add
jg
popf
fsubl
addb
jp
lds
mov
mov
cmpsl
rcrb
jecxz
sub
jg
sub
xor
movsb
lock
sbb
or
cmp
je
xchg
sub
jns
lods
adc
fimuls
inc
mov
sbb
std
int
ss
push
je
inc
mov
and
mov
leave
aad
sar
loop
mov
jle
test
dec
cmc
fcoml
or
fsubp
cmp
cmpsl
sahf
out
push
cs
push
add
add
sub
mov
cmc
adc
sahf
push
xchg
into
sub
loope
push
iret
push
push
mov
ret
outsb
inc
mov
insl
bound
sub
daa
jb
and
sub
pop
mov
mov
fisubl
stos
and
mov
stc
xor
adc
push
jl
cmp
add
dec
mov
and
cmp
fnstenv
das
fistl
frstor
dec
mov
and
mov
and
outsb
pusha
push
iret
mov
sub
cmpsl
fimull
or
into
mov
mov
xchg
push
sub
insl
or
xchg
push
rcrb
pop
add
nop
pop
mov
cmpsb
mov
lea
cmp
sub
sahf
add
mov
mov
enter
scas
loopne
dec
ja
in
fldcw
int
xchg
mov
pop
mov
aam
or
pop
ret
repnz
aas
lahf
dec
testb
mov
push
int3
xchg
adc
nop
push
cmp
js
lahf
into
inc
sbb
ja
inc
cmpsb
push
ds
mov
xchg
mov
pop
out
fidivs
aad
mov
pop
out
or
fwait
lea
push
stc
enter
lock
loopne
or
in
sub
hlt
sti
clc
jle
mov
jnp
xchg
cmpsl
hlt
repnz
xlat
jl
or
xchg
cltd
lods
repnz
pop
mov
adc
dec
in
and
jnp
push
or
or
and
cltd
or
int3
ds
movsl
and
imul
xor
dec
repz
mov
sbb
shrl
notb
push
mov
into
and
orb
adc
lret
push
stc
jo
dec
pop
negl
adc
inc
or
dec
call
push
jecxz
movsb
ficoml
and
ss
or
sub
push
call
shrb
push
push
aaa
cmp
out
adc
push
jnp
add
jmp
or
lods
inc
lods
jge
and
gs
lret
dec
mov
aad
cmpsb
dec
shll
pop
stc
add
lods
push
sahf
addl
les
lods
cltd
dec
jne
cmpsl
jmp
mov
pop
rcrl
mov
push
push
xor
adc
je
mov
mov
jnp
mov
and
jle
cmp
dec
insl
addb
push
fbstp
add
mov
fnstcw
adc
sbb
popf
mov
inc
jne
outsl
insb
mov
push
lret
dec
aas
or
pop
js
in
push
leave
mov
enter
clc
jge
mov
sahf
lret
or
aaa
and
mov
push
push
pop
fs
mov
outsl
jb
out
repz
xor
daa
mov
mov
sbb
mov
or
insl
imul
dec
and
or
and
aad
lcall
ja
fnstsw
cmp
sarl
dec
sbb
xor
sub
push
in
into
add
and
push
xorb
or
leave
mov
dec
cmp
vmovupd
mov
int
rcrl
mov
lret
popf
jg
cli
jecxz
dec
jle
mov
sbb
and
mov
push
cmp
imul
or
jg
sub
cltd
adc
cltd
movsb
enter
or
adc
jb
and
fs
mov
pop
pushf
cmp
lret
arpl
mov
aas
iret
out
cmc
js
or
dec
add
shll
cli
jns
ljmp
arpl
push
pop
and
call
mov
xchg
leave
popf
ds
mov
xor
bound
add
cmpsb
jno
push
inc
jg
stos
outsb
mov
sbb
mov
iret
pop
cli
popf
cmp
cltd
xorl
sbbl
sahf
dec
loopne
mov
nop
jmp
loop
cmpsb
jge
push
outsl
negb
popa
cmpb
inc
xor
movswl
pop
aam
xlat
pop
sbb
aas
jb
pop
repnz
mov
in
pusha
test
imul
sub
mov
sbb
loop
jno
adc
shll
or
mov
or
mov
fstps
mov
loopne
iret
push
sub
fstpt
pop
int3
insb
cmp
ljmp
or
or
cltd
negl
pop
fldt
inc
add
or
push
aas
jecxz
mov
adc
inc
aaa
in
sub
mov
jbe
xlat
rcrl
out
jne
push
sub
sbb
inc
in
popa
xor
mov
adc
imul
jmp
dec
dec
push
jne
cmc
mov
vmovss
adc
fldl
mov
inc
cli
fdivrl
sbb
cmp
jae
bound
sbb
or
jne
ja
adc
xor
inc
push
daa
inc
lock
repnz
mov
pop
cmp
mov
add
std
adc
mov
sbb
stc
repz
negl
leave
scas
ja
call
push
push
cmp
xchg
lock
lahf
fs
add
cmpsb
in
jne
mov
xor
and
pop
imull
jno
hlt
out
aam
push
lahf
mov
push
out
inc
lods
lcall
sub
sub
and
xor
es
vpsubq
push
xlat
insb
cmp
addr16
dec
jle
adc
dec
pop
adc
sub
sub
out
cli
xchg
mov
js
jp
adc
movsb
xchg
lods
mov
xchg
lock
mov
xor
loopne
movsl
repnz
cmp
push
xchg
icebp
js
cmp
xchg
mov
xchg
or
mov
mov
sbb
jge
adc
test
lods
mov
jnp
sbb
mov
jl
testb
int3
pop
aam
movsl
mov
mov
push
sarb
dec
out
cli
je
adc
rcrb
aas
xor
push
push
mov
aaa
xor
dec
sub
and
cltd
pop
xorl
jge
fcomps
push
movsb
push
pop
push
adc
inc
adc
scas
adc
js
cmp
fidivl
xor
sbb
mov
dec
sbb
or
popa
dec
jb
lods
sti
mov
or
pop
jbe
adc
mov
sbbb
xor
push
jge
out
std
iret
jmp
push
mov
daa
decb
cmc
jecxz
xchg
out
fsub
jl
lock
dec
cltd
and
add
aam
pushf
xchg
pushf
cmpsl
repnz
dec
bound
in
sub
sub
and
mov
lock
mov
push
mov
movsl
xchg
cmp
or
jae
xor
shll
pop
bound
add
mov
push
jne
gs
shl
mov
add
fwait
push
xchg
mov
push
adc
cs
in
jne
dec
sub
sti
dec
aad
sarb
punpcklwd
jne
mov
mov
fiadds
lock
adc
lock
adc
pop
mov
ret
dec
stc
mov
orl
pusha
lods
repnz
stos
je
popl
ds
call
jg
mov
dec
xchg
jb
std
out
aaa
scas
mov
fdivs
dec
mov
pusha
sub
jecxz
mov
icebp
push
fstl
push
inc
ss
dec
addl
jne
cmp
add
cmp
dec
sar
pop
inc
and
ret
imul
push
fwait
fs
negb
popa
xchg
jo
fdivl
movsl
loope
mov
mov
add
mov
xor
out
lods
stos
mov
xchg
mov
fcom
push
xchg
xchg
ljmp
xor
cli
fs
jp
loopne
xor
in
add
cmpsl
mov
xor
shrb
rclb
inc
imul
mov
cwtl
push
xchg
frstor
cmp
cmc
insl
jmp
pop
jno
popa
test
jmp
mov
pop
jmp
pop
shll
and
cmpsl
lds
imul
and
sti
je
inc
push
lret
lret
fwait
sbb
jge
out
iret
ret
movl
push
and
lds
dec
xchg
push
jl
push
jle
jnp
sub
aaa
mov
imul
or
icebp
mov
mull
out
sub
fnsave
mov
xor
lahf
jmp
ss
subb
outsb
push
and
in
loop
xchg
jne
je
scas
stos
xchg
inc
jmp
mov
out
and
xchg
out
repnz
add
bound
mov
fldenv
fs
mov
out
jecxz
or
fstpt
mov
cmpsl
push
xor
bound
das
jmp
mov
adcb
xor
sarl
add
cmpsl
pop
out
dec
jge
fisubrs
cmpsb
mov
dec
mov
cmp
adc
arpl
data16
sbb
das
xchg
adc
popa
jno
xlat
jns
mov
dec
pop
in
subl
sbb
xlat
jg
mov
mov
and
push
xchg
mov
pop
jae
lahf
sub
es
lods
imul
imulb
xor
xor
push
mov
repz
dec
pop
mov
imulb
xor
and
push
subl
mov
xor
pop
incb
fiadds
insb
xor
outsb
mov
in
pop
cmpl
mov
sbb
jg
or
lods
pop
cmp
pop
push
fbld
fstps
pushf
repz
dec
in
dec
int
xchg
cld
xchg
push
imul
sub
sbb
enter
mov
lcall
lret
data16
jle
out
ljmp
jno
add
pop
ret
mov
std
cmovnp
mov
test
clc
divl
push
or
adc
std
into
push
xchg
or
mov
inc
dec
add
data16
faddl
inc
cmp
add
xchg
mov
rorb
out
mov
mov
outsb
out
hlt
dec
mov
dec
dec
adc
pusha
popa
std
shr
cs
mov
push
es
fnstcw
sbb
jecxz
cmp
in
int
out
dec
int3
sahf
stos
and
pop
add
scas
and
mov
add
pop
clc
push
mov
int
out
adcl
adcl
lock
imull
lcall
fs
cmc
fstpl
jp
push
and
add
ja
je
dec
test
push
aad
mov
leave
js
add
and
scas
or
sbb
adc
shl
out
stos
adc
cwtl
int3
dec
dec
push
and
adc
ja
mov
jmp
enter
xor
jbe
roll
lds
dec
into
lahf
jne
inc
enter
push
lret
dec
add
jbe
add
cld
sbb
sbb
pop
push
pop
sbb
mov
cmc
in
test
jl
mov
sub
je
or
mov
xchg
inc
les
jbe
jp
jp
mov
push
fcmovb
loop
in
mov
roll
out
adc
pop
mov
cs
mov
and
clc
pop
dec
xchg
fwait
and
sarl
nop
sbb
cmp
jbe
lods
dec
xor
inc
jp
push
cmpsb
xor
mov
arpl
arpl
adc
mov
notb
push
or
xor
xor
aad
loop
pop
cmp
js
imul
stos
xchg
mov
push
or
sti
enter
insl
aaa
push
push
ja
pop
mov
pop
xor
std
es
jp
mov
mov
in
pop
mov
cmp
sbb
lcall
dec
push
addr16
lods
add
xor
les
das
or
pop
loope
push
add
pop
mov
rolb
insl
enter
fisttpll
or
mov
push
sbb
xchg
mov
pavgb
adc
popf
push
stc
in
fsubrs
dec
dec
fsubrs
into
subl
aad
xor
mulb
aas
test
addb
cmpsl
sub
xchg
jle
stos
shll
mov
out
loop
roll
mov
add
sbb
ja
add
cmp
test
hlt
sti
sub
out
loopne
add
adc
mov
sahf
mov
add
cld
arpl
sarb
fmuls
jg
fs
fdivr
inc
or
or
repnz
jge
bts
jo
pop
icebp
jb
cmp
outsl
cld
rorb
jp
cmp
out
call
int
dec
out
xchg
pop
xor
daa
mov
dec
sti
pop
inc
pop
out
in
fldlg2
jl
dec
jmp
jecxz
imul
outsl
cmp
xchg
sub
cmp
cli
sub
out
subl
add
fwait
add
cmp
jo
adc
cmp
sub
jo
pop
sbb
jns
xlat
cwtl
dec
stos
sub
out
push
dec
hlt
jb
pop
scas
jo
mov
push
mov
push
adc
test
es
fsubl
jle
out
fst
iret
inc
cmp
mov
adc
gs
push
lods
mov
adc
or
loopne
mov
sub
int3
daa
cs
mov
ds
add
aad
arpl
jnp
adc
adc
test
mov
ds
ret
imul
sub
loope
push
int
js
in
jo
lret
jg
pushf
dec
push
sbb
imul
and
stc
adc
leave
xchg
pop
je
sbbl
inc
cmpl
outsb
ret
rcrl
or
cs
cli
ret
sbb
clc
or
pushf
cmpsl
icebp
std
pop
and
pop
popa
add
jne
pop
ficoms
iret
push
mov
push
mov
das
call
or
aaa
std
pusha
fsts
add
dec
pop
add
xor
divb
jne
ret
push
sbb
cmp
cmp
stos
xchg
cmp
inc
adc
jae
cld
inc
adc
cmpsb
cmp
xchg
push
in
adc
call
movsl
add
aam
cs
push
push
jne
xchg
xchg
rorl
ja
cmp
fwait
dec
cmc
into
cli
and
stc
lahf
xchg
push
nop
jbe
and
int3
imul
or
jl
mov
out
loope
in
mov
sbb
repnz
push
imul
push
inc
andb
mul
or
pop
ret
cmp
in
push
xchg
sbb
pavgb
pop
xchg
inc
and
push
jecxz
inc
pop
and
es
es
out
fnsave
mov
jecxz
sub
ds
sub
mov
sti
dec
pushf
mov
pop
add
mov
enter
inc
xor
mov
repz
and
mov
stos
xchg
shll
jno
xchg
jne
imul
xor
dec
xor
cmpsb
inc
jnp
xchg
pop
imul
mov
fnsave
ds
data16
pop
mov
push
rcr
mov
cmp
lock
gs
mov
das
push
push
xor
les
call
lret
pop
lea
xchg
std
xchg
inc
mov
es
mull
mov
out
mov
adc
and
out
rcrb
sbb
cmp
outsb
clc
lcall
sub
stos
out
stos
sbb
fidivs
pop
xchg
inc
jmp
sub
aam
inc
lahf
pusha
or
adc
xchg
bound
inc
es
jns
xor
mov
test
xor
mov
jmp
jmp
mov
in
mov
cmp
jns
arpl
push
dec
stos
outsl
or
stos
iret
inc
and
loope
or
push
dec
sti
aam
pushf
outsb
stos
insb
xor
mov
inc
lods
mov
push
aas
or
push
jns
and
push
sub
movsb
inc
pop
jnp
xchg
mov
dec
addl
pop
insl
xlat
cmp
add
dec
push
insb
cltd
orb
add
pop
movsl
mulb
cmc
shl
xor
icebp
fisubrs
ljmp
inc
das
dec
push
mov
ret
pop
and
mov
inc
in
test
mov
aaa
push
daa
fsubs
mov
jae
push
mov
sbb
and
jns
data16
xchg
sbb
and
out
push
jb
inc
inc
dec
daa
fsubrl
and
mov
push
jg
pop
adc
addr16
add
sub
mov
je
pushl
les
inc
mov
mov
lcall
pop
imul
ret
leave
push
fnsave
clc
jmp
out
xor
push
loop
iret
mov
dec
mov
ss
pop
inc
ss
lea
cmp
ficompl
insl
out
push
xor
cmp
push
xchg
sbb
out
jle
in
inc
std
sub
ret
out
arpl
push
aaa
or
scas
xorb
add
xchg
scas
lock
and
or
cmp
into
scas
ret
and
sarl
or
pcmpgtw
fldenv
push
xchg
in
adc
mov
dec
dec
fldl
jle
daa
push
jo
popw
data16
and
int
loope
addr16
stc
jl
ljmp
xor
ret
imul
push
ss
push
in
stc
and
push
and
fidivl
or
mov
xchg
popl
je
les
mov
mov
or
push
shll
cli
pop
leave
nop
sub
int
lea
and
mov
xchg
stc
mov
mov
stc
into
push
dec
mov
sbb
sbb
popf
int3
sbb
popf
mov
les
shr
push
int3
sub
fisttps
repnz
daa
adc
mov
and
add
xchg
lds
mov
xchg
in
test
movsl
repnz
arpl
jne
mov
cli
sub
pop
push
jb
sbb
mov
mov
pop
pop
xor
add
stos
stos
or
mov
shr
pop
sti
jg
rorl
inc
out
fstps
es
icebp
mov
incb
bsf
divb
loop
jle
rorb
scas
shr
rclb
je
sub
leave
xor
dec
ds
pop
lret
add
pop
adc
push
divb
mov
add
pop
jmp
and
mov
stc
dec
cmpsl
sarl
pop
sub
lods
sti
js
les
mov
or
mov
clc
and
call
sbb
sub
cs
loop
and
and
and
nop/reserved
pop
jmp
fwait
js
mov
ss
mov
add
pop
dec
sbb
ret
ds
pop
or
and
pushf
mov
jl
xor
dec
cmp
lcall
loopne
call
fnstenv
fcmovnb
nop
jae
mov
test
and
mov
ficoms
mov
inc
add
xor
dec
insb
mov
popf
and
pop
inc
ss
mov
or
stos
lret
mov
jecxz
xor
jne
sub
mov
sti
adc
clc
sbb
jo
scas
lret
xor
xchg
clc
and
mov
dec
lcall
jge
sub
bound
leave
mov
mov
mov
xchg
sti
mov
loopne
dec
shlb
push
xchg
sbbb
scas
stos
and
cmp
dec
inc
shrl
sahf
jl
xor
and
je
sar
in
push
cmp
push
lods
and
xor
out
movsl
orb
xor
inc
out
test
push
sbb
cmp
jnp
in
cmpsl
icebp
pusha
imul
cmpsb
and
push
ds
inc
fcomp
pop
or
stc
adc
movb
addr16
daa
and
adc
testl
mov
xchg
mov
dec
je
sbb
adc
ret
adc
jae
in
mov
out
fldcw
stc
push
dec
or
jnp
pop
out
in
int
cmp
xchg
scas
add
out
mov
inc
pop
mov
and
fdivr
pop
cmp
inc
jbe
js
movsl
dec
mov
cmc
cwtl
fsubl
add
out
cmp
push
inc
ret
sahf
shlb
repnz
inc
lahf
or
push
cmp
pushf
sub
adc
push
flds
sbb
orl
in
imul
sub
xchg
cmp
pop
fwait
lods
push
push
and
jle
repz
pop
sub
ljmp
subl
and
jl
dec
jb
push
int
mov
or
push
mov
icebp
ret
lret
jp
xor
adc
ficoms
xor
lods
mov
lret
sbb
aam
dec
mov
fistl
jmp
sahf
pushl
fildll
xchg
mov
cmp
ficompl
into
xchg
xchg
cmp
push
sbb
stc
adc
add
mov
enter
mov
clc
and
fiaddl
dec
lea
dec
loop
and
imul
js
and
addr16
adc
test
sub
loopne
xchg
push
xor
stc
fldcw
push
lods
in
cli
mov
gs
outsl
lret
sbb
ljmp
dec
pop
and
jns
imul
push
mov
testl
nop
mov
shlb
adcl
mov
ljmp
inc
sbb
mov
nop
pop
push
ret
jne
mov
or
jp
mov
cwtl
cld
loope
jle
mov
or
xor
ret
loopne
cmp
inc
shll
mov
fcomps
dec
sbb
dec
pop
cwtl
enter
stc
adc
je
cmpsl
scas
jle
out
in
pop
call
shl
rcrb
shlb
fdivrs
mov
push
xchg
subl
mov
xor
xchg
jnp
or
cwtl
shrb
lods
pop
imul
inc
pop
adc
fiadds
lret
fstpl
nop
les
mov
data16
xchg
add
fistps
mov
mov
popf
out
into
in
insb
mov
mov
jns
out
fiadds
popa
loop
fldl2t
ret
lcall
in
xchg
leave
or
jns
pop
xchg
xor
repnz
lods
jnp
xchg
sub
lahf
data16
and
outsb
jp
add
clc
in
aas
stos
test
repz
pop
add
icebp
movsl
sbbb
fildl
jl
jle
rorb
jl
repnz
scas
enter
in
mov
or
xchg
and
xchg
arpl
loopne
pop
movsl
das
adc
out
aas
negl
jecxz
inc
insb
lret
mov
nop
es
pop
sub
xor
fists
dec
neg
scas
mov
mov
xor
into
aam
aaa
push
xchg
aaa
inc
or
inc
xchg
enter
es
sub
aam
ret
jnp
gs
shl
or
mov
inc
xchg
jmp
inc
arpl
push
call
mov
stos
cmp
jmp
mov
lret
jmp
inc
adc
xor
stos
xlat
push
add
mov
adc
cmovle
add
rcrb
pop
aam
insb
adcl
push
or
lret
mov
push
xchg
add
push
orb
or
push
push
fs
xor
mov
or
push
add
bswap
mov
sarl
std
xor
push
and
ret
sub
scas
pop
ljmp
pop
push
cmp
mov
stos
and
mov
and
test
push
adc
pop
xchg
sbb
lea
dec
push
sub
scas
add
cmp
rorb
loop
jb
stos
clc
loopne
mov
lods
js
out
fstpt
and
mov
pop
insl
mov
clc
insl
jg
mov
xor
ja
and
mov
outsl
mov
out
mov
stos
or
adc
in
mov
lret
adcl
xchg
stc
inc
fnstcw
lret
cmp
outsl
pop
dec
mov
mov
fcoms
or
and
jbe
mov
xchg
add
jle
in
inc
mov
inc
sbb
cmp
or
loop
sub
inc
insb
cwtl
cli
inc
mov
jl
add
jne
into
push
leave
enter
mov
aad
out
in
jnp
mov
fsubrl
mov
xor
add
call
push
or
lock
call
adc
scas
fcomi
fildll
cmp
mov
inc
scas
push
mov
pop
enter
mov
cld
add
push
gs
xor
mov
or
lods
out
stos
subb
add
cltd
popf
push
rolb
mov
push
ret
mov
jb
mov
jmp
push
pusha
adc
or
push
sahf
jb
ds
mov
mov
les
pop
ljmp
xor
lret
movsl
pop
jmp
inc
mov
and
enter
xor
fs
sbb
xchg
ss
imul
arpl
pop
inc
inc
icebp
mov
cmp
xlat
add
sbb
rcll
mov
in
cld
or
sbb
mov
xor
pop
xchg
or
push
and
or
mov
mov
divb
jo
xor
xchg
cmp
dec
xchg
cmpsb
repz
scas
or
jns
jno
xchg
pop
lcall
and
mov
jnp
xchg
sub
dec
jmp
push
lods
mov
pop
jge
dec
or
inc
pop
iret
push
jp
popl
sub
and
es
mov
test
inc
int3
insl
xchg
or
sbb
rolb
inc
jne
mov
ss
in
movsb
fsubrl
add
cli
loop
fsubrs
lock
test
mov
xchg
clc
imul
sub
push
scas
mov
adc
push
jae
daa
ret
mov
cmp
mov
mov
sub
int
add
push
idivl
mov
xchg
xorl
neg
pop
fs
test
dec
mov
movsl
xlat
ret
mov
xchg
inc
mov
out
cmp
mov
mov
in
test
addr16
jl
push
xchg
ljmp
or
mov
push
add
xchg
addr16
js
mov
cmpsl
add
pop
lea
mov
mov
pop
or
lcall
sub
mov
dec
imull
mov
test
inc
add
stc
jae
loope
andl
imul
mov
aam
inc
xor
sub
cmc
cmp
adc
dec
lret
pop
js
fistpll
sub
add
or
lods
jge
xchg
cmp
sbb
mov
push
sub
hlt
pop
xchg
sub
nop
je
adc
stos
adc
dec
es
and
mov
scas
aam
jo
dec
xor
sbb
ja
mov
cmp
jo
mov
mov
mov
inc
into
mov
add
sub
push
push
es
jmp
push
in
xchg
sub
sbb
int
leave
add
mov
sysenter
or
xor
lock
mov
push
popf
lahf
pop
xchg
int
push
mov
lods
cs
xchg
mov
adc
push
pop
push
loop
sbb
and
push
bound
fiaddl
mov
gs
out
imul
and
sub
or
sbb
xor
clc
and
movsb
jns
addr16
pop
cmp
mov
lea
push
and
push
adc
or
cli
sub
hlt
jecxz
push
mov
decl
cmp
cmpsl
lods
pushf
and
push
cmp
jns
xchg
outsb
jbe
lea
fwait
mov
sbb
out
enter
aam
xchg
mov
sbb
test
in
and
inc
sbb
mov
xor
jne
pushf
into
sahf
mov
pop
cs
mov
mov
xor
mov
nop
inc
outsl
out
cmp
gs
sbb
jle
shll
or
les
repnz
lock
sbb
test
jns
cmp
and
pop
mov
jne
rcr
gs
jmp
jb
mov
and
inc
or
or
jns
out
and
test
in
xchg
pop
pushf
insl
sub
lock
data16
mov
pushf
jno
adc
mov
xchg
push
xchg
jecxz
popa
shll
xchg
add
add
xchg
mov
mov
add
mov
int
fmuls
ljmp
dec
mov
pop
xor
repz
daa
adc
push
fimull
push
adc
dec
xchg
loopne
push
mov
movsl
shll
in
shll
scas
mov
mov
xlat
cltd
sub
sbb
cmc
mov
jp
mov
es
mov
das
pop
dec
lods
adc
test
or
int
xlat
mov
lods
mov
into
sahf
scas
jecxz
shll
sub
jnp
popf
int
add
cmp
jns
out
inc
mov
fwait
scas
insb
dec
add
or
setg
rcrl
fsts
and
imul
addr16
imul
jle
call
xchg
cmpsl
imul
xchg
je
dec
dec
mov
mov
dec
sbb
cltd
pop
imul
mov
cli
jp
mov
pop
test
sub
test
stos
rolb
adc
and
dec
cmp
mov
rcrb
iret
pop
sti
mov
cwtl
ret
addr16
cmp
mov
or
insl
pop
adc
mov
pop
je
dec
push
cmpsl
test
shl
push
push
sar
add
stos
sub
std
and
sbb
ret
mov
xor
icebp
inc
adc
js
pop
jae
fsubrl
sbb
jmp
fnstenv
sub
lock
imul
mov
pmulhuw
movsl
insl
mov
fcoms
xchg
push
inc
mov
jmp
adc
scas
sbb
add
fldl
add
scas
ret
mov
imul
in
in
push
call
mov
lcall
psubq
mov
xlat
std
int
clc
mov
mulb
dec
and
sarl
test
jns
adc
pushf
ljmp
loope
mov
out
push
pop
mov
mov
mov
aas
pop
mov
xchg
loop
loope
xor
xchg
adc
sbb
add
daa
outsl
das
sarl
dec
mov
out
fcmovne
call
aad
test
ljmp
mov
les
mov
xor
cwtl
sub
xchg
push
xor
sarl
xchg
and
pop
mov
mov
mov
mov
shrb
nop
or
mov
jmp
fcmovnu
out
mov
mov
je
lds
mov
fisttpl
test
xor
xor
es
cmpsb
daa
lods
clc
jl
xchg
jnp
xchg
xor
push
outsb
loope
daa
cltd
mov
pop
imul
loope
xor
rcrl
push
jne
xor
test
cli
inc
mov
mov
sbb
lcall
xor
xchg
clc
stc
rorl
add
dec
imul
jmp
push
movsb
add
pop
mov
xlat
inc
mov
xor
inc
into
sbb
dec
insb
jge
stos
sbb
ret
jg
iret
mov
xchg
cmpsb
and
lods
shrl
add
jmp
fldcw
inc
mov
xchg
adc
into
scas
or
cmp
mov
subl
imul
sti
cmc
adc
push
mov
dec
xor
test
mov
inc
sahf
push
sarl
cs
repz
test
bound
mov
or
cld
stos
into
repz
inc
inc
jno
and
dec
sbbb
jb
jb
sbb
xchg
fisttps
pop
shll
in
pop
orb
arpl
push
xchg
xchg
loop
push
lret
and
pop
pop
lret
scas
mov
sahf
les
out
push
or
inc
mov
ret
fdivr
mov
loopne
and
and
pop
sbb
sub
imul
ficompl
pushf
or
scas
jnp
xor
sub
cmp
jnp
push
sbb
ret
add
push
fldt
sub
arpl
movzbl
dec
clc
inc
lcall
jno
imul
mov
pop
lahf
cld
push
ficoms
dec
fucomip
mov
shll
icebp
scas
cmp
pop
mov
gs
jge
push
xchg
inc
pop
mov
call
or
pop
xor
das
lahf
push
sub
or
and
mov
fstps
push
ja
cmc
mov
mov
mov
scas
sub
hlt
std
xchg
mov
push
mov
sbb
icebp
mov
loope
and
orb
addr16
inc
xchg
mov
loop
lods
aam
mov
js
dec
rorb
je
add
sub
rcrl
in
shlb
stos
ficomps
push
jb
stos
out
fstp
stos
cli
lcall
or
dec
pop
jnp
mov
lods
adc
scas
mov
adc
xlat
js
push
xchg
insb
gs
stos
xlat
mov
jb
mov
pop
fildll
adc
cli
ja
dec
imul
fldl
scas
add
rolb
arpl
enter
fiaddl
hlt
cli
adc
scas
in
dec
ret
xchg
mov
xor
fsubs
add
ss
jo
dec
push
inc
jb
je
push
lea
sbb
lock
jae
ss
leave
and
daa
cmp
insb
addr16
dec
fistpl
jns
xchg
xor
or
lock
int3
aad
pop
dec
push
cld
insl
mov
out
mov
cwtl
mov
mulb
lret
cltd
pop
mov
sbb
ja
out
pop
lock
stc
rsqrtps
fmuls
xchg
xchg
aas
jmp
pop
imul
insl
gs
iret
dec
cmpsb
and
mov
pop
rorl
test
sbb
push
adc
and
jmp
xlat
adc
cli
test
rorb
out
cmpsl
lret
pushf
scas
mull
stos
push
hlt
ss
push
pop
add
xor
xchg
dec
xor
aad
jb,pt
js
fchs
push
mov
push
mov
out
nop
inc
push
dec
cmp
push
sbb
mov
int
ret
sub
dec
mov
nop
and
out
mov
inc
push
xchg
sub
and
mov
mov
cli
mov
pop
adc
lret
iret
fwait
push
shrl
rcr
stos
lods
sub
jno
mov
jnp
or
jbe
sbb
ljmp
inc
rclb
or
push
sub
icebp
push
sbb
lret
lea
jo
inc
dec
aas
les
mov
xor
rorl
xchg
adc
imul
aaa
dec
nop
adc
stos
mov
jae
outsb
mov
jle
adc
sahf
mov
call
std
mov
lock
pop
sahf
jns
clc
sbb
or
inc
cmpl
stc
aad
jb
adc
jg
push
pop
or
push
hlt
mov
outsb
into
pop
aad
jl
in
cmc
jns
stc
mov
jb
dec
cli
inc
push
push
rcl
dec
movsb
pop
ret
push
sub
or
lea
push
scas
loope
add
lds
pop
js
loop
ljmp
mov
mov
fidivl
into
and
xchg
out
cwtl
mov
out
out
lret
jg
cmp
dec
imul
xchg
orb
in
cmp
mov
shll
stos
xor
push
iret
sub
jno
in
pop
pop
and
jb
sub
lds
arpl
mov
cwtl
or
gs
mov
test
repnz
sub
sub
scas
jecxz
jl
jle
mov
shll
adc
xor
lahf
mov
push
push
xchg
rorl
aam
fadd
inc
fstl
xlat
fdivr
in
add
and
mov
xchg
pop
xlat
adc
push
loopne
repnz
push
ficompl
push
xor
lock
int3
mov
fs
dec
cmp
cmpsb
xchg
add
adc
adc
shll
fildl
mov
lahf
push
ljmp
cmp
add
jl
jbe
repz
dec
mov
push
aad
xor
scas
and
int
inc
xchg
dec
loopne
xor
sbb
addr16
jno
jo
in
cmp
jae
pop
test
pop
ds
mov
mov
hlt
push
add
gs
imul
cltd
pop
dec
test
rcll
iret
and
test
inc
lds
dec
popa
sarb
pop
popl
jb
pop
loop
push
popa
shl
adc
lret
adc
mov
int
pusha
divb
in
fs
pop
sbb
xchg
jecxz
sbb
imulb
out
addb
in
out
movsl
clc
aaa
decb
adc
push
push
push
mov
or
pop
sub
cmp
pop
mov
out
outsb
daa
jmp
sub
pop
in
cwtl
rcrl
shll
mov
aaa
mov
orb
jmp
inc
mov
ret
in
faddp
sbb
test
dec
inc
stc
out
pop
sbb
sbb
std
or
cmp
stos
jnp
pop
xlat
dec
cmpsl
addb
leave
aad
dec
add
test
das
jmp
cld
pop
add
jle
mov
push
adc
jmp
sarb
sarl
mov
mov
stos
xchg
mov
loop
xchg
or
cmpsb
shlb
ror
sti
hlt
in
jbe
cmc
dec
sbb
insb
ret
mov
mov
lds
enter
das
jmp
test
ficomps
jge
mov
out
rclb
fnstsw
mov
mov
dec
dec
std
or
adc
call
push
xchg
jnp
enter
xchg
cmp
fdivl
mov
inc
or
les
stos
pusha
adc
hlt
pop
push
scas
out
push
xor
mov
fisubs
out
cwtl
adc
jb
jl
fbld
std
stos
jl
mov
insb
inc
clc
cld
loopnew
add
gs
ret
fdivrs
xlat
mov
xor
cmp
arpl
push
pop
push
mov
shll
data16
mov
cltd
adc
jg
popf
sti
add
sbb
mov
mov
jno
cmpsb
scas
jo
xchg
or
cmp
sbb
adcl
stos
dec
cmp
adc
mov
imul
dec
pop
loop
pop
lahf
aas
cld
lahf
ss
rcrl
sbb
sub
inc
daa
cwtl
inc
mov
dec
jecxz
mov
aad
sub
xor
jp
pop
inc
inc
lcall
xchg
es
fnop
hlt
adc
or
mov
lea
sbb
imul
push
mov
cmpsb
sarb
inc
sahf
and
mov
pop
mov
pop
lea
mov
sub
pop
test
add
scas
sub
ja
cmp
jmp
mov
in
or
sahf
pusha
mov
xchg
pop
call
movsl
fldcw
idivl
push
xor
mov
adc
jmp
insl
mov
xchg
fisubl
lahf
ja
dec
cmp
ss
jb
paddsb
std
mov
neg
xchg
gs
rol
lret
add
xor
adc
in
fisttps
jge
dec
sarb
fsts
sub
xor
adc
jnp
xlat
fstps
pop
imul
jbe
mov
mov
stc
jo
xor
scas
ljmp
es
add
repz
jecxz
push
movsb
push
scas
sub
jnp
popf
jmp
cwtl
fcomp
gs
jns
jmp
cmp
sub
jg
jmp
inc
insl
lahf
in
xchg
cmpsb
dec
addr16
mov
mov
push
stos
ret
orb
shll
in
xchg
mov
shlb
aas
cwtl
or
arpl
push
stos
daa
stc
loopne
out
xor
or
xor
call
mov
mov
jnp
int3
cmp
repz
xorl
sarl
or
jecxz
dec
pop
int3
pop
push
dec
jo
shrl
fcmovbe
cmp
loope
sbb
lret
mov
mov
sbb
in
add
lea
dec
lahf
mov
jo
hlt
ret
inc
push
mov
iret
and
adc
dec
push
fstpl
inc
in
lock
insl
mov
add
lock
mov
leave
xchg
cli
hlt
cmp
pop
pop
mov
arpl
dec
das
in
in
aas
testb
push
notb
jl
lods
mov
jl
xor
adcb
inc
repnz
dec
pop
adc
jmp
shrl
inc
test
int3
addr16
in
test
push
sub
ret
insb
jae
cmp
ficoml
cwtl
push
insl
in
adc
and
out
jp
int3
int3
and
adc
jge
xor
or
push
cs
out
test
call
push
les
pushf
cmp
mov
jnp
iret
hlt
sub
jo
popf
int
dec
data16
imul
mov
xor
cli
lret
fimuls
and
shrb
outsb
dec
test
pop
add
xorb
jns
pop
add
push
jns
movsb
jnp
sbb
and
xchg
arpl
out
popf
and
cmp
xor
xchg
inc
pop
imul
adc
pop
xlat
int
pop
shll
hlt
stos
inc
cmovl
xchg
sbb
mov
popf
xor
adc
dec
gs
loope
jno
or
lcall
adc
push
movsb
in
xor
lret
pop
ja
inc
add
into
inc
and
inc
sbb
lea
lahf
outsb
jg
gs
pop
mov
fimuls
jns
mov
cmp
out
mov
mov
shrl
popa
pop
mov
jl
xchg
daa
add
adc
adc
or
push
inc
add
pusha
xor
sub
jecxz
cmp
cwtl
dec
fwait
pop
xchg
jb
scas
pop
pop
popf
sbb
mov
js
inc
orl
jle
fs
outsl
push
inc
nop
cmp
sbb
xchg
movsb
pusha
add
out
movsl
xor
adc
push
add
dec
jnp
push
dec
and
stc
mov
add
pop
cwtl
rep
fstps
mov
ret
enter
mov
fucomi
or
mov
dec
orl
inc
push
repz
pop
mov
jbe
adc
punpckhbw
ljmp
inc
subl
ss
lahf
or
mov
pop
dec
mov
push
mov
pop
movsb
cmpsb
sbb
lock
popf
push
mov
mov
push
pop
lahf
clc
lods
es
mov
push
loope
rcll
shll
add
bound
or
mov
and
inc
cltd
in
xor
push
addl
sub
jmp
push
mov
pop
cmp
cwtl
pop
sarb
mov
cmp
test
or
dec
mov
add
xchg
jg
pop
cmpsl
rcrb
xor
mov
sti
iret
lea
push
dec
mov
addr16
loopne
hlt
mov
and
mov
mov
and
cmpsb
xor
xor
lret
xor
loopw
dec
cmp
cltd
mov
cmp
lock
adc
push
out
sub
push
xor
and
jl
or
sbb
sbb
pop
in
aam
xor
in
imul
dec
leave
leave
sub
fmuls
push
adcl
mov
pop
cmc
xorb
bound
clc
in
leave
dec
jp
inc
add
sbb
mov
xor
stos
lds
sbb
cld
ja
test
and
push
jl
adc
sub
lcall
int
movsb
inc
xchg
dec
add
incl
push
mov
jl
jae
je
iret
js
cld
outsb
add
arpl
ret
popf
mov
sarl
into
inc
outsl
outsl
sbb
movsb
pop
in
inc
outsl
icebp
xorb
sub
popa
push
fbld
or
jb
shll
cwtl
sbb
adc
push
adc
mov
mov
ret
fcmovu
pop
pop
in
inc
ljmp
lods
call
hlt
test
jne
push
sub
je
jbe
rcll
add
out
cmpb
in
dec
in
sub
call
js
mov
js
divb
testl
mov
sbb
dec
sbb
adc
dec
sbb
sti
push
inc
scas
rcrb
pop
xchg
pop
cmpsb
cli
sbb
pop
sub
pop
int
scas
pop
cli
or
xchg
test
frstor
incl
mov
mov
shrb
sub
dec
mov
stos
mov
cwtl
push
add
repz
sbb
mov
inc
and
lret
sub
sub
and
and
sti
lods
pop
aad
cmpsl
add
out
sub
dec
or
iret
xchg
pop
adc
das
lret
and
cmpsl
pop
sub
and
lods
or
pop
jecxz
aaa
add
shlb
or
mov
dec
mov
fsubs
mov
inc
lea
jnp
daa
dec
imul
push
cmp
push
stos
push
sbb
jo
sub
add
aam
sti
jo
push
sbb
fucomp
mov
les
jns
fnsave
nop
rcr
mov
push
mov
fnstsw
call
aaa
dec
dec
sbb
les
test
jae
adc
shrl
xchg
add
ja
les
ret
repz
lock
or
das
jmp
loop
mov
sub
aaa
scas
and
or
jecxz
mov
ljmp
push
xor
cmp
lret
mov
or
mov
push
lret
dec
mov
dec
pop
adc
cmp
ja
daa
lret
and
mov
and
mov
insl
scas
inc
or
outsl
repz
xchg
xchg
or
mov
rorl
sub
incb
push
inc
cmp
sbb
xchg
mov
xor
pop
divl
ror
sub
mov
jecxz
pop
loopne
sub
mov
lds
lcall
fs
in
movl
or
jecxz
test
ss
test
or
or
loope
iret
push
ficoml
js
mov
sbb
or
mov
out
cmp
jle
mov
jbe
jns
xor
repz
ud0
testl
pop
dec
sbb
daa
pop
push
sub
cltd
push
dec
in
pop
sarl
adc
inc
lahf
sbb
inc
arpl
popf
stos
or
mov
xorb
sub
inc
lods
loop
cmp
outsb
lods
aam
jno
test
adc
sub
xchg
push
cmp
dec
pop
or
ljmp
xor
sbb
dec
aam
jecxz
or
push
cmp
sub
daa
xchg
jp
cmpsl
jg
add
push
cmpsl
sbb
ljmp
push
push
mov
mov
push
jp
out
scas
push
dec
dec
icebp
pushl
mov
cmpb
fistl
jb
inc
inc
mov
mov
inc
std
cli
jb
add
and
in
cwtl
jge,pt
cltd
or
stos
jns
mov
push
push
mov
mov
mov
add
push
imul
jns
imul
fcmovb
lods
jae
xor
stos
xor
mov
cmpb
movsb
xor
dec
pop
adc
out
adc
mov
jno,pt
loope
outsb
mov
std
aad
jno
aaa
loope
or
std
dec
js
jne
inc
mov
inc
mov
lahf
clc
adc
sbb
xchg
mov
lds
cmpsb
daa
or
xchg
ja
push
or
add
push
dec
test
xor
jno
pop
xor
lahf
into
test
jge
rol
xchg
sub
int3
gs
imul
mov
jae
and
xchg
mov
jns
cli
mov
outsb
cld
test
adc
lea
pop
or
push
cmc
mov
dec
cltd
add
mov
adc
or
mov
imul
or
fcomps
rolb
and
push
imul
nop
stos
sub
rol
add
cld
pop
jle
cwtl
ja
lret
into
mov
inc
xchg
lods
pop
adc
fcmovnb
hlt
addr16
xchg
xchg
dec
out
lods
faddp
cltd
pop
arpl
jmp
mov
sarb
ja
sub
xchg
ds
xor
loopne
negb
in
inc
pop
mov
and
ss
gs
rorb
ret
cwtl
push
sbb
sub
mov
fadds
jle
xchg
mov
fidivl
ljmp
xor
das
adc
xor
xor
xchg
cmp
clc
shlb
mulb
mov
cmp
add
adc
mov
xchg
lret
cmc
gs
arpl
aaa
lods
mov
pop
daa
cs
cmp
ret
cmpsl
sub
jecxz
sbb
mov
xchg
loope
xor
subl
push
subb
xor
cmp
adc
xor
mov
dec
push
cmp
inc
in
dec
dec
aad
and
dec
test
jp
xchg
inc
jbe
jg
roll
xor
dec
mov
and
or
sbb
test
pop
mov
les
mov
in
loope
icebp
dec
dec
jae
outsl
aaa
ljmp
mov
cld
add
clc
add
add
mov
push
ds
flds
out
mov
shl
mov
cli
repz
xchg
das
ljmp
mov
dec
test
push
imul
sub
xlat
and
cli
inc
xchg
daa
dec
push
fstps
pop
fidivrl
repz
sub
jno
mov
xchg
stos
pop
cmp
orb
into
xlat
subl
mov
test
xchg
cmp
or
xor
aas
cmpsb
inc
dec
ljmp
sub
jle
lock
xor
insl
out
push
cli
mov
and
cs
mov
inc
or
lea
inc
cmc
add
xor
sub
mov
loope
ja
fcomps
dec
cmp
push
jb
mov
push
xchg
inc
fwait
mov
pop
mov
xchg
stos
pop
add
repnz
les
and
or
nop
gs
shrb
pop
lret
stos
push
sub
fs
cmp
out
popa
fidivs
scas
lcall
imul
pop
ljmp
xchg
dec
jl
jp
stos
jbe
mov
stos
sbb
pop
xor
xchg
sbb
sub
xchg
scas
fistl
or
add
ds
xor
cwtl
mov
inc
popa
dec
stc
ret
rcr
push
or
pop
bound
jle
or
sbb
scas
fldcw
mov
or
lret
out
repz
aam
ficompl
inc
cwtl
cmpsb
fwait
add
jo
in
sub
std
ds
add
nop
push
mov
sbb
mov
call
add
pop
xchg
mov
pop
or
adc
jb
adc
ljmp
aad
add
dec
shll
sub
call
adc
xor
aam
mov
xchg
rcll
xor
fwait
push
dec
jge
movsl
mov
stos
sub
rcll
lods
bound
push
inc
pop
sahf
js
sahf
jle
lahf
sub
js
jmp
test
pop
sbb
mov
inc
sbb
xor
dec
adc
jg
pop
inc
idivl
mov
mov
cmp
push
jle
or
xchg
divps
sub
xchg
sahf
push
jl
repz
lods
jae
daa
ljmp
clc
out
push
xor
lcall
imul
mov
and
inc
xchg
sarb
or
scas
hlt
fsubrl
aam
push
xchg
out
push
push
xchg
out
sarb
subl
mov
xchg
repnz
sbb
ss
sub
mov
popf
or
into
mov
pop
loopne
subb
fmuls
stos
jecxz
sbb
inc
push
push
adc
pop
mov
push
jns
and
dec
push
jbe
out
mov
aaa
stos
and
lea
or
mov
ljmp
loopne
xchg
repnz
xor
push
mov
xor
xchg
pop
cmp
rcrb
fistpll
mov
mov
pop
mov
mov
cmpsl
les
imul
into
dec
popa
mov
imulb
repz
mov
ret
ficomps
sub
lods
pop
inc
inc
mov
cli
dec
cmpsl
into
xchg
jae
orl
xchg
adc
dec
aas
enter
inc
add
mov
inc
sbb
roll
repz
push
jne
fistl
mov
int3
xchg
cmc
std
nop
subl
add
ror
pushf
xchg
and
sub
fwait
in
xor
lret
test
sbb
test
cld
ret
cmp
in
or
sub
fcmovnb
push
and
and
out
sbb
or
push
sub
pop
xor
or
mov
mov
pop
mov
shll
fcompl
nop
loopne
loop
lret
cmp
add
pusha
jmp
ja
nop
and
or
js
sub
test
xor
xchg
push
or
lcall
repnz
loop
imul
pop
add
push
cwtl
ds
dec
out
pusha
xchg
inc
pushf
adc
mov
pop
push
cwtl
xlat
inc
mov
dec
fs
int
xor
out
and
pushf
mov
lcall
jo
int3
add
sub
mov
shll
add
movsb
jbe
ja
push
enter
sub
into
aad
and
jne
mov
mov
lods
lds
mov
cli
imul
mov
pusha
out
aas
jg
in
cli
ret
and
dec
dec
repz
xchg
iret
lods
add
sbb
sub
pushf
xchg
mov
adc
inc
sahf
and
daa
cli
ret
mov
xchg
push
xchg
cli
mov
call
fdivrs
jmp
dec
popl
into
mov
cmp
pusha
fwait
insb
mov
sbb
mov
push
int3
push
cmp
pop
cmp
sub
ljmp
mov
enter
xlat
stos
addr16
int
pop
daa
sub
je
cwtl
add
es
xchg
addl
cmp
insl
or
mov
or
push
jmp
xor
andb
sbb
clc
mov
xchg
sub
sub
sbb
sub
in
sahf
jbe
adc
push
sarb
jae
movsb
and
sbb
or
fld
lea
in
dec
push
mov
out
push
sti
loopne
int3
jo
cmp
repnz
xchg
pop
lock
inc
nop
aas
mov
dec
xor
jmp
cltd
jno
push
jmp
inc
pop
stos
clc
mov
jo
jb
cmpsb
mov
add
pop
popf
adc
adc
xor
lahf
fdivp
pop
cli
and
push
xor
in
cltd
scas
sbb
sub
test
cld
mov
push
lds
test
les
shl
xor
mov
xchg
rclb
cmp
push
add
mov
xor
pop
xlat
push
inc
ret
cli
mov
fistps
jnp
jp
ss
rep
fadds
dec
leave
adc
inc
mov
rcrb
push
jp
ss
xlat
mov
push
fdivrl
frstor
bound
popa
imul
push
dec
fsts
arpl
mov
stos
pop
fisttpll
sbb
inc
loopne
leave
jo
sub
int3
aad
mov
ss
das
insb
mov
dec
inc
cmpsb
js
fcompl
jl
mov
mov
mov
stos
scas
xchg
ret
adc
mov
pop
push
inc
push
sti
push
fistl
test
push
jne
sub
lock
test
repz
mov
in
imul
mov
pop
repnz
lretw
or
add
mov
xchg
pop
es
dec
nop
jbe
or
mov
lock
enter
bound
mov
and
hlt
xlat
rcrb
adc
popa
mov
leave
mov
pop
out
insb
and
pop
xchg
jae
cmpsl
test
inc
jecxz
push
add
mov
lret
call
mov
cmp
cwtl
movsb
sti
mov
mov
push
add
push
sub
mov
xchg
adc
nop
gs
jno
ret
mov
jle
data16
stos
fdivl
clc
addr16
decl
pop
sbb
jge
psrad
xor
inc
sub
in
addr16
and
pop
jns
xchg
sbb
in
les
mov
push
test
cmp
in
dec
fisttpl
bsf
ss
fidivl
je
call
adc
icebp
or
and
adc
mov
jmp
mov
jnp
rol
pop
mov
pop
xor
nop
lods
sti
mov
mov
inc
mov
scas
xchg
xchg
out
pop
jl
mov
arpl
add
adc
hlt
sbb
ja
mov
sub
hlt
mov
cwtl
inc
lock
inc
dec
xchg
adc
out
xor
cltd
pop
add
pop
sbb
ja
pop
add
mov
inc
jecxz
push
sbb
mov
mov
mov
popf
or
rclb
aas
subb
inc
jae
inc
insb
aam
jle
pop
push
inc
and
mov
sbb
insl
pop
imul
sbb
cmp
gs
add
adc
push
inc
repz
xchg
scas
es
push
inc
cld
fmul
mov
push
adc
outsb
mov
sbb
fdivl
cmc
bound
pop
shrl
xor
adcb
mov
cmp
pusha
pop
mov
jnp
and
shrl
pop
mov
inc
scas
pop
sub
inc
cmp
stos
bound
dec
pop
jo
push
add
cmp
sub
mov
fsubl
stos
fsubr
mov
xchg
aas
popf
adc
add
add
movsl
loope
pop
ret
xchg
fs
jp
jae
mov
jnp
jg
mov
int
inc
sub
xor
push
imul
mov
scas
in
sub
mov
or
pop
mov
enter
pushf
adc
imul
inc
adc
call
sbb
or
fstl
inc
addr16
add
or
jmp
dec
enter
cli
out
push
mov
xchg
aam
das
mov
stc
sub
adc
out
xor
mov
jp
mov
pop
xlat
ss
lods
dec
lea
stos
or
or
jg
stos
jmp
data16
jle
fs
adc
stc
movsl
pop
and
test
cwtl
fidivrs
inc
imul
mov
mov
iret
movsb
mov
cli
in
add
dec
xlat
inc
int
lret
mov
or
cmp
out
xchg
inc
xchg
rolb
loopne
mov
pop
mov
fldcw
in
xlat
fdivl
ljmp
lret
fdivrl
inc
imul
and
xchg
adc
ret
inc
test
jae
pop
fiaddl
mov
icebp
jbe
or
xchg
ficompl
cmp
cs
bndstx
xchg
stos
sbb
sahf
pop
dec
mov
and
jecxz
ret
xchg
lahf
sti
ljmp
adc
adc
in
mov
filds
fimull
add
js
pop
xor
add
adc
insb
pop
popf
aam
sub
jne
inc
roll
fildll
in
mov
sub
repnz
inc
dec
rolb
dec
add
popa
and
mov
inc
ds
xor
pop
out
push
lods
pop
icebp
dec
mov
gs
nop
mov
xchg
decb
sub
out
fwait
test
cs
pop
or
fmulp
test
out
cmp
cmp
aam
loope
mov
dec
pop
pushf
movsl
or
pop
scas
mov
and
fsubl
mov
jo
push
aad
subl
jmp
mov
pop
lahf
fwait
adc
sahf
enter
fadd
shll
xchg
and
das
or
and
sub
push
pop
les
loop
data16
jno
sub
in
inc
inc
xlat
bnd
inc
lods
nop
popa
push
mov
mov
jp
sbb
mov
imul
in
fldenv
int3
dec
es
pop
pop
mov
mov
adc
jmp
dec
jo
push
xchg
cld
inc
push
sub
lahf
shrb
fsubrs
mov
pop
add
pop
outsl
xchg
pop
sub
repz
les
xor
push
sahf
pop
push
add
ja
lds
sbb
loop
push
jb
mov
inc
in
jns
lahf
xchg
in
out
pushf
fcompl
jno
enter
cmp
xchg
xchg
outsb
xchg
adc
fwait
shrb
mov
mov
adc
rorl
inc
lea
fldl
inc
in
xchg
mov
xor
sub
scas
loope
aam
add
adc
and
pop
mov
push
scas
sbb
adc
in
insb
inc
xchg
sbb
and
pushf
push
jb
inc
cmp
adc
sub
pushf
int
fcmovnu
cld
push
fisubrl
jg
and
prefetch
add
sub
fdivrl
mov
xlat
out
inc
iret
lret
adcb
pop
add
mov
jg
push
mov
pop
movsb
cmp
mov
pop
jae
test
cmp
sub
aam
xor
mov
pop
cmp
mov
pop
shll
loope
imul
mov
hlt
enter
pop
xchg
cs
mov
divb
notl
cmpsb
mov
cmp
jmp
test
ret
ss
sub
or
loopne
xchg
mov
lds
in
mov
mov
andl
adc
xchg
mov
or
daa
fists
mov
mov
aam
jnp
cld
popa
xlat
push
rcrl
into
push
cmpsb
jnp
add
push
aas
repnz
mov
cmp
andb
mov
add
jl
xchg
sahf
es
sbb
mov
outsb
or
push
mov
jo
scas
ret
in
daa
clc
aam
pop
in
iret
ror
push
daa
mov
xor
cmp
sbb
pusha
fdivrl
or
out
fsubl
cmp
ss
lock
inc
add
sbb
jmp
xchg
lcall
sub
pop
stos
and
arpl
add
test
addr16
sub
push
xor
sub
xchg
rcrl
ljmp
jo
cmpsl
jnp
pop
push
add
lds
xor
stos
arpl
sti
pop
cmp
mov
sarl
call
inc
outsb
mul
dec
xchg
ret
mov
stos
adc
xor
xchg
rclb
push
and
sbb
push
mov
sti
outsb
dec
dec
mov
cmp
or
cmp
cmpsl
andb
in
xchg
into
je
dec
inc
push
test
shrb
pop
in
mov
adc
pop
daa
lcall
fnstsw
test
shr
js
xor
inc
clc
jno
jnp
adcl
add
pop
jecxz
int3
mov
in
pusha
cmp
lret
es
test
inc
cmp
out
lcall
ret
sahf
cltd
out
jnp
in
mov
out
inc
out
add
inc
mov
jp
pop
inc
mov
mov
mov
push
cwtl
or
dec
lret
mov
popf
cwtl
insl
repnz
andb
pop
mov
and
movsb
or
fdivrl
mov
push
sbb
gs
ret
subb
inc
jns
sub
push
xor
andb
dec
mov
and
fcomps
out
inc
xor
mov
sarl
dec
cvtpi2ps
in
adc
int
xchg
adc
ja
addr16
mov
call
test
pop
or
lods
cmpsl
les
fwait
and
sub
adc
or
movsb
inc
fildll
cmp
repnz
or
push
pop
mov
push
xchg
mov
mov
xor
adc
jmp
or
add
push
in
mov
inc
jbe
mov
push
mov
jns
and
sarb
aaa
adc
push
test
push
out
jg
stos
popa
enter
adc
mov
xor
push
idivb
sub
mov
jnp
aam
xor
int3
adc
iret
cmpl
pushf
push
int
dec
sbb
gs
mov
add
icebp
iret
pop
mov
scas
or
xchg
addr16
inc
jmp
ret
sub
pusha
xchg
dec
mov
ds
movsl
in
sbb
imul
mov
dec
xor
push
mov
aad
inc
in
mov
inc
lock
adc
into
sbb
inc
mov
out
mov
fistpl
repz
imul
cmpsl
in
int3
cs
add
les
sbb
dec
cli
mov
insl
lcall
pop
ja
and
xchg
fxch
int
stc
inc
jl
push
rcrl
inc
ss
push
lods
mov
int3
and
incb
jns
pop
scas
mov
mov
xchg
lcall
outsl
and
mov
sbb
lcall
mov
adc
sub
mov
negl
adc
sub
insl
sbb
sbb
fildl
imul
orb
and
push
cwtl
sub
fs
adc
inc
xor
fstp
dec
leave
inc
jne
push
pop
xor
out
test
push
in
out
mov
add
pop
gs
mov
fnstsw
fucomi
mov
clc
addb
push
popa
adc
ror
bndstx
xor
inc
jmp
sub
jl
arpl
nop
push
adc
and
add
icebp
cmp
stos
ds
dec
jb
cmp
ds
mov
enter
mov
cmpb
inc
mov
rclb
lea
pop
les
xor
test
and
xchg
mov
pop
dec
jb
jecxz
loop
xlat
daa
sbb
jae
adc
es
inc
inc
shll
mov
sub
add
xchg
cmp
imul
xchg
jo
adc
scas
dec
jg
ljmp
pusha
xchg
aaa
scas
mov
add
sub
lret
dec
mov
sub
push
mov
cmp
lock
lea
sub
aaa
sbb
dec
sub
fisubl
push
int3
mov
mov
pop
cmp
xor
xchg
mov
stos
insl
aas
and
addr16
jecxz
inc
fwait
cwtl
inc
in
in
mov
sub
sarl
mov
pop
xchg
movsl
and
pop
mov
mov
ffreep
adc
fcompl
adc
lds
cld
scas
call
xor
xchg
push
xchg
mov
mov
gs
add
mov
or
pop
je
jmp
test
sbb
and
inc
cs
xor
repnz
cmc
lea
fs
subl
cwtl
xor
push
pop
fs
and
fsubrs
or
mov
fisttpll
pop
cmp
cli
orb
cmpsb
push
inc
adc
imul
aaa
sbb
xor
sub
dec
adc
mov
in
sub
mov
outsb
outsl
mov
inc
fsubl
fcompl
xchg
xor
sub
scas
les
jns
or
xchg
pop
jbe
mov
push
push
mov
loope
pusha
push
xor
xchg
lock
add
pop
xchg
daa
mov
mov
sbb
stc
roll
inc
cmc
ficoml
addb
nop
jmp
mov
leave
jle
cmp
and
inc
clc
adc
jg
das
popf
shll
dec
dec
sub
stos
nop
cmpsl
push
mov
dec
es
xor
cmp
cld
fxch
xchg
jge
fs
popa
sub
push
xorb
call
push
dec
pushf
mov
insl
sbb
sub
js
repnz
mov
aam
push
sbb
jmp
dec
dec
xchg
jmp
mov
mov
inc
jbe
test
movsb
mov
jl
xchg
and
stos
add
sub
test
arpl
insl
into
sbb
and
mov
jmp
leave
push
ficoms
jo
dec
cmpsb
icebp
add
sbb
push
mov
insl
test
jne
xchg
pop
sub
inc
gs
push
mov
ret
dec
and
stos
ljmp
or
test
push
test
and
sub
dec
sbb
pop
add
fs
fs
add
ds
fisubrs
out
dec
ficompl
cmpsb
mov
scas
enter
fdivl
mov
std
aam
rcrb
and
dec
lock
lods
inc
mov
imul
jns
sub
push
mov
sysret
sub
cmp
fiaddl
jge
in
ds
add
out
insl
push
out
adc
imul
dec
cltd
sub
adc
dec
mov
cmp
mov
nop
aam
sti
pop
adc
aam
cmc
pop
mov
or
ficomps
or
xchg
pop
dec
jp
sub
insb
and
mov
gs
test
cmpsb
cmc
dec
cmp
or
out
dec
push
add
or
jmp
dec
int
lods
data16
xchg
dec
imul
clc
out
mov
setno
nop
xrelease
std
int3
loopne
inc
daa
dec
xchg
fstps
js
sbb
mov
or
int3
push
mov
sahf
mov
and
pop
nop
cs
mov
pop
cmp
mov
mov
lret
sub
daa
jns
loope
add
sub
lahf
and
push
pop
jns
mov
xchg
dec
sub
js
add
sbb
popf
scas
xchg
enter
lahf
dec
mov
scas
push
stc
rorl
imul
shlb
adc
aad
in
jg
mov
in
mov
jp
jbe
adc
pusha
fs
jmp
adc
inc
cmp
sbbb
pop
xor
inc
mov
dec
inc
lds
dec
fistpl
movsl
sbb
mov
movsb
dec
in
arpl
pop
jb
cmpsl
js
or
inc
mov
jbe
inc
dec
pop
es
arpl
xor
pop
or
jmp
sub
in
sub
es
or
shrb
fwait
je
jp
rcrl
pusha
das
xor
push
push
lea
sbb
div
lds
add
cmc
repz
adc
mov
jle
adc
test
push
mov
sbb
cmpl
pop
outsl
sbbb
arpl
pop
fbstp
daa
xor
push
mov
sbb
pop
push
xchg
xchg
jno
adc
aad
dec
adc
mov
dec
xchg
xor
and
int3
sbb
lods
shlb
and
imul
sbb
test
dec
pop
push
mov
mov
rcrl
cli
dec
inc
sbb
movsb
fsubp
xor
xor
mov
sbb
sbb
shll
mov
negb
insl
lcall
dec
xchg
enter
cmp
mov
mov
jno
sbb
ja
lcall
std
and
dec
repz
test
jge
cmpsl
je
loope
sbb
push
pusha
xor
loopne
or
jbe
adcl
stos
lcall
mov
out
stc
shll
jg
push
push
mov
jne
stos
adc
xorl
lret
xchg
and
push
mov
mov
cmp
cmp
dec
inc
and
inc
fiaddl
lds
inc
rep
repz
jp
mov
push
jecxz
cmp
iret
addr16
sbbl
pop
mov
mov
ds
sbb
push
in
daa
push
adc
mov
or
ds
es
mov
push
inc
add
lea
fwait
cmp
push
or
sbbb
adc
inc
dec
xor
inc
or
push
and
imul
cmp
lods
dec
ja
push
setne
loopne
test
adc
sbb
fwait
enter
repnz
popa
hlt
push
cmp
jo
lret
adc
inc
insl
out
sub
cmp
cmp
insb
dec
inc
sub
mov
in
dec
pop
lahf
inc
ret
adc
imull
xor
cld
adc
ja
mov
roll
push
or
mov
add
cmp
shl
jno
mov
push
sub
popf
adc
das
cmp
jbe
xchg
mov
into
mov
sbb
pop
fcoml
hlt
pushf
sarb
outsb
test
loope
sub
aad
lds
sub
mov
add
aas
adc
or
inc
or
test
cli
mov
mov
int
mov
xchg
shll
out
jp
sbb
cmp
hlt
stos
sbb
in
mov
jne
iret
xchg
cmp
push
mov
cmpsl
sar
sub
out
cld
nop
add
ret
sub
test
xchg
add
lahf
cmc
adc
inc
cmp
imul
add
inc
cmp
sti
incb
insl
mov
jg
pop
shr
test
cmpb
xchg
xor
push
push
test
divl
push
inc
jnp
icebp
lods
fwait
jp
les
insl
jae
adc
fisttpll
shrl
xor
jg
add
mov
sahf
into
dec
out
outsb
xchg
adc
cmp
sub
lahf
jno
xchg
sbb
jnp
mov
pop
loopne
ficoms
add
loop
jbe
aam
xchg
les
adc
scas
mov
lret
sbbl
mov
push
and
inc
in
jecxz
or
or
jmp
out
lahf
arpl
lret
into
imul
cmpb
push
popa
xor
lods
cs
or
test
and
aas
xor
mov
push
mov
sarl
aaa
icebp
gs
js
inc
ljmp
clc
pop
mov
xchg
push
mov
mov
dec
xor
dec
or
xchg
aad
add
and
enter
jmp
repnz
stos
add
clc
mov
cmpsb
ror
outsb
sar
pop
or
ds
loope
or
sarl
loop,pt
stos
cmc
jle
and
fisttps
inc
xlat
adcl
shr
loopne
add
push
add
clc
mov
xlat
xor
mov
nop
rcrl
dec
outsl
cmpsl
sub
nop
pop
xchg
mov
iret
cmpsb
xor
cmp
push
or
ds
inc
mov
add
fsubrs
push
inc
into
lods
dec
imulb
out
xchg
jecxz
pop
push
and
pop
dec
pusha
xor
adc
outsb
mov
and
iret
fimuls
loopne
aas
mov
jo
lock
pop
dec
push
push
insl
fidivs
jmp
mov
lods
xor
sbb
add
or
push
repz
sub
sub
std
cltd
push
outsb
adc
xor
xchg
jb
cmp
and
push
fs
xchg
jge
nop
jle
mov
in
dec
test
mov
add
int3
ss
dec
sti
jecxz
roll
or
and
mov
shlb
sbb
add
jg
mov
cs
ficoms
rcll
mov
push
in
aam
push
repnz
xchg
lret
cld
jne
mov
incl
fcoml
popl
stos
lods
mov
arpl
jae
cmp
mov
inc
inc
out
aaa
icebp
ljmp
mov
in
jg
cmp
insb
in
ja
rcl
add
addl
ret
push
dec
mov
aaa
aam
cmp
push
mov
mov
test
sub
rcr
cmp
scas
mov
jnp
mov
sub
dec
cli
leave
lret
jmp
lret
cltd
cmp
or
add
call
mov
pusha
lret
mov
mov
add
stos
xlat
push
jge
and
jae
ret
loopne
insb
jmp
aad
xor
cli
insb
in
mov
lds
push
outsl
push
outsl
pop
push
hlt
mov
pop
ret
leave
repnz
pop
outsl
mov
push
repz
inc
out
cmpsb
sub
mov
push
pop
xor
xor
xor
repnz
aad
mov
sbb
push
cmc
orl
out
sbb
lret
and
jl
fiadds
cld
lock
pop
std
adc
add
cmp
out
loope
push
out
inc
fmull
push
push
outsl
outsb
enter
into
insl
adc
xchg
mov
fisubl
stos
decb
dec
xchg
xor
or
sub
lock
or
int3
xor
add
mov
gs
lahf
fcoms
jge
push
je
mov
jb
sbb
mov
pop
sti
pushf
imul
sub
sarb
scas
jbe
xlat
sub
dec
into
pop
jne
movsl
pop
loope,pn
cli
fdivr
inc
pushf
cmp
ja
fdivs
inc
xor
jns
fwait
cmp
and
xchg
mov
js
lock
mov
in
jns
pop
les
or
lods
sub
dec
cmc
push
mov
mov
jns
imul
pushl
fisttpll
mov
in
sub
notl
adc
jno
xchg
lahf
sub
inc
lock
ss
pop
iret
pop
in
das
faddl
mov
xchg
fistl
movsb
ja
pop
jns
ret
inc
icebp
xchg
cmp
and
nop
or
pusha
pop
mov
sbb
push
sub
jo
jne
xchg
out
test
inc
stc
dec
mov
insb
shl
pop
mov
mov
dec
jle
popa
xor
mov
xchg
xor
shrb
jg
dec
sbb
imul
cmpsl
je
and
add
pop
dec
loopne
lods
jno
loope
and
sub
mov
xchg
js
fwait
add
xchg
pop
ret
pop
in
je
sbb
dec
aam
in
test
or
add
inc
dec
jg
testl
das
bound
sbb
nop
lret
mov
push
lds
ljmp
nop
sub
sbb
test
cli
mov
and
push
cmp
fisttps
ret
and
gs
gs
cmp
lret
inc
fists
dec
bound
push
push
jecxz
and
bound
xchg
scas
cwtl
out
xchg
data16
sbb
xor
aad
fdivrs
sahf
aad
mov
imul
lahf
jo
sub
pop
aaa
sbb
outsl
lds
add
daa
push
repz
stc
jno
ret
adc
addl
or
adc
roll
les
outsb
or
adc
arpl
lods
push
std
mov
mov
gs
sbb
popa
and
mov
jmp
scas
push
xchg
dec
movsl
aam
sbb
pop
lea
rolb
sbb
xchg
fistps
dec
dec
sbb
jecxz
aad
je
xor
jns
dec
pushf
jbe
aas
rol
notl
add
or
lret
das
rolb
mov
fwait
insl
mov
data16
adc
cmc
mov
mov
repz
mov
or
and
cmp
or
mov
popf
nop
sti
aas
pop
test
loope
addr16
shlb
jbe
out
pushf
adc
enter
or
push
jo
sub
negb
add
insl
rcrl
aaa
fdivrl
das
mov
shr
outsl
push
not
stos
adc
cmp
pop
dec
arpl
nop
jae
inc
pop
add
repnz
into
int3
xchg
pop
push
or
cltd
mov
aas
cwtl
jo,pt
insl
mov
mov
outsb
mov
jmp
pop
jns
and
out
push
lds
dec
pop
frstor
mov
das
sbb
cmpsl
in
outsb
out
test
xor
gs
sbb
int
mov
cltd
cwtl
stc
popa
push
mov
adc
lahf
dec
out
int
xchg
addr16
mov
jae
jp
sub
fnstenvs
call
pop
push
push
sbb
xchg
push
and
push
mov
adc
jg
pop
outsb
das
inc
loopne
pop
cld
jb
add
stc
sahf
mov
pop
mov
pop
xor
add
add
fstl
aam
clc
scas
pop
inc
and
dec
mov
das
jecxz
lds
push
das
add
loopne
inc
shlb
outsb
bound
aam
cmp
fstps
mov
cmp
nop
in
jecxz
mov
outsb
mov
or
aam
mov
xchg
pop
cmp
shll
push
add
push
sti
dec
fidivl
and
pop
bound
mov
pop
and
xor
mov
mov
and
icebp
xor
sbb
filds
bound
push
les
daa
cmp
sbb
or
add
sbb
shl
nop
gs
jne
cmp
adc
nop
sbb
fprem
fsub
push
cwtl
scas
sbb
test
add
push
sbb
mov
adc
cltd
aaa
sub
add
xor
popf
mov
in
popf
and
cmc
inc
xchg
mov
jp
mov
insl
sbb
mov
mov
push
nop
jecxz
or
in
sbb
push
sub
pushf
imulb
stc
sub
dec
lea
mov
mov
test
inc
test
lds
pop
lods
pop
pop
xchg
or
pop
sub
outsb
dec
insl
adc
sbb
daa
shlb
divl
mov
xchg
lcall
imulb
jg
nop
pop
lahf
scas
mov
cmc
mov
sub
lods
lret
mov
and
pusha
mov
jp
dec
or
jmp
ret
jbe
mov
jl
lea
into
test
aas
jnp
cmp
mov
scas
dec
push
out
jecxz
rorl
jb
rorb
pop
push
xchg
mov
mov
mov
add
lcall
mov
mov
out
sub
lcall
mov
ja
jecxz
xchg
nop
mov
imul
mov
fcomip
or
iret
test
xor
fs
mov
mov
xor
or
jno
xchg
ret
sub
pop
mov
cltd
pop
mov
and
xor
cmp
dec
mov
mov
sub
mov
mov
insb
fildll
shrb
xchg
dec
sbb
lods
xchg
scas
mov
fdivl
lea
fsubrs
leave
repz
sbb
popf
push
adc
mov
mov
icebp
shll
dec
lds
jle
mov
inc
std
lret
data16
les
sbb
sub
push
dec
ljmp
cld
xchg
jb
arpl
das
jmp
addr16
hlt
fidivs
out
icebp
add
lcall
loopne
in
xchg
iret
sub
cmp
jo
push
push
test
out
adc
adc
int3
sbb
std
mov
imul
sub
ds
xlat
or
xor
jnp
mov
outsb
mov
jnp
pop
je
push
xor
dec
fcoml
adc
adc
mov
movsl
imul
push
jmp
test
ss
cmp
popa
cs
sti
xor
sub
aad
test
lret
dec
mov
mov
popf
jo
rcrl
mov
ficomps
and
pop
loop
xor
js
inc
xchg
jmp
sub
add
mov
mulb
inc
adcl
das
adc
int
push
in
rcrl
stos
cwtl
adc
int3
sbb
lods
dec
xlat
and
mov
divl
hlt
add
rclb
jg
data16
nop
xor
sub
push
cmp
add
dec
dec
push
and
jae
lahf
mov
clc
push
fmull
test
jmp
je
inc
int
fisttpll
xor
into
jecxz
and
cmpsl
pop
int
lcall
add
dec
rol
xacquire
sbb
ds
xchg
repz
sbb
lock
frndint
cs
dec
pop
loopne
mov
jp
inc
jno
fisubrs
loop
jne
push
jp
mov
idivl
cmp
rclb
outsb
xorl
jnp
shll
or
test
mov
mov
pop
mov
sbb
cltd
add
xchg
xchg
fmuls
mov
movsl
pop
pushf
and
adc
or
cmp
mov
or
xor
sbb
sbb
mov
inc
mov
cmp
lret
dec
inc
gs
inc
and
jbe
push
pop
mov
sub
stos
sbb
adc
stos
out
mov
pop
jl
pop
push
iret
cs
add
js
mov
push
jne
rcl
adcl
fwait
or
mov
decb
test
push
stos
and
jb
jle
outsl
in
cwtl
pop
jae
xchg
fs
pop
xlat
dec
sub
in
pushf
test
loopne
jge
rolb
out
dec
adc
adc
mov
mov
add
adc
movsb
pop
jbe
lods
sbb
rcr
lods
sub
enter
lcall
push
sbb
adc
and
testl
pop
pop
xor
xchg
sti
aam
pop
dec
sbb
sub
push
mov
jg
scas
push
dec
jmp
js
mov
cmp
rcr
aaa
lret
jb
add
std
inc
insb
jae
and
cmpsl
ljmp
push
xor
mov
or
mov
add
ljmp
cmp
aad
mov
loopne
cmp
cli
movsl
negb
sar
mov
loope
xchg
out
je
cmpsl
dec
dec
jno
fcoms
pop
les
clc
insl
enter
push
xchg
stos
inc
sbb
pushf
cltd
push
cs
push
inc
stos
push
loopne
stos
jne
pop
sbb
pop
jmp
xor
cmc
mov
push
pop
std
add
notl
pop
ds
cwtl
fildll
and
inc
dec
lret
ret
xor
fxch
stc
lods
jbe
mov
xor
or
shlb
mov
mov
daa
in
fwait
add
dec
pop
sub
pop
dec
negb
xor
fs
shlb
adc
fwait
jle
mov
push
cs
cwtl
cltd
sub
push
adc
cmp
sbb
push
lret
cld
push
jno
bound
push
enter
mov
pop
lods
loop
repnz
jmp
scas
inc
fcoms
xchg
repnz
adc
mov
out
jecxz
xchg
loopne
shll
xchg
dec
nop
xor
dec
outsb
das
test
and
mov
sbb
addb
ljmp
mov
fcoms
ljmp
jns
jo
cs
inc
mov
adc
ds
and
add
sub
movsl
movsb
and
xchg
shrd
into
and
push
loope
aaa
mov
or
loop
xchg
clc
data16
fs
les
sbb
mov
ret
aaa
inc
pop
pop
mov
mov
jge
cmp
mov
adc
sub
cmp
cmpxchg
mov
push
and
stos
es
aaa
movsb
cltd
mov
test
repz
stos
ljmp
push
mov
jg
hlt
xor
xchg
nop
cli
fistpll
inc
or
sbb
subb
adc
mov
mov
movsb
xchg
sbb
fs
add
pop
outsl
mov
dec
add
mov
test
mov
pop
jge
aaa
push
sbb
sbb
xchg
mov
jae
jae
cmpsl
loopne
divl
pop
shll
push
int3
es
cmpsb
adc
loopne
imul
push
les
scas
iret
test
mov
out
sbb
cmp
cmp
outsl
or
sub
ja
ja
stos
test
sub
test
les
sbb
adc
ljmp
and
sahf
pop
and
xchg
jnp
jecxz
sti
pop
push
in
test
mov
cltd
and
inc
dec
and
xor
dec
mov
cs
in
out
lock
mov
repnz
mov
jl
cmp
jg
aam
lcall
pushf
mov
fldcw
mov
sub
arpl
fwait
lahf
cmp
lds
push
pop
repz
pop
xchg
in
sub
cmp
int3
jl
hlt
xchg
or
fs
adc
xor
push
mov
mov
rcrb
pusha
aas
icebp
adc
sbb
push
jne
add
add
in
lret
lods
mov
and
lret
in
pop
out
insl
icebp
aaa
sti
sub
sbb
ljmp
sbb
inc
in
hlt
mov
rcr
add
push
dec
imul
jns
int3
mov
jno
cmc
ljmp
jle
push
lods
fdivrl
ds
mov
sbb
mov
fwait
jbe
test
adc
movsb
and
cld
lods
push
inc
das
cmp
jno
inc
sub
fldcw
add
call
insb
movaps
cmp
pop
rorb
in
dec
add
xor
sarl
bound
call
leave
add
xor
imul
and
outsb
bound
mov
dec
in
ss
push
in
out
imul
and
pop
imul
sbb
faddl
jg,pn
push
push
cwtl
mov
leave
mov
mov
popw
outsb
test
test
add
lods
pop
and
imul
es
ds
pushf
cmp
pop
push
fistps
or
pop
push
in
add
addr16
call
test
push
inc
mov
das
jp
test
scas
jl
lret
cwtl
sub
idiv
jge
stos
je
push
and
ja
or
inc
push
sbb
outsb
addr16
push
hlt
dec
add
lods
aad
repnz
nop
pop
es
leave
repz
cs
adc
sbb
mov
jp
mov
mov
pop
subb
daa
pop
mov
fs
and
cmp
nop
cmpsb
out
sahf
clc
pop
mov
pop
imul
mov
xlat
sbb
data16
xchg
ljmp
sbb
pusha
fisubrs
pop
mov
pushf
test
fildl
lods
loop
or
adc
add
fildll
mov
jae
push
jns
pop
sbb
jae
jmp
sahf
popf
test
mov
bound
ret
gs
test
xchg
fisubl
lods
ja
cmp
shlb
mov
outsl
xchg
inc
jae
jmp
pop
mov
dec
cld
bnd
es
dec
pop
js
arpl
inc
mulb
adc
addr16
pop
mov
dec
stos
call
pop
push
stos
xchg
mov
sbb
mov
mov
inc
movsl
jl
loopne
push
rorl
fisttpll
and
adc
in
mov
pop
popa
push
ret
pop
hlt
icebp
pop
jns
imul
or
push
aas
adc
mov
and
mov
aam
lds
push
data16
pop
mov
cwtl
adc
mov
sbb
fdivrs
aam
ja
or
xchg
outsl
int3
pushf
sahf
lods
and
mov
sbb
sbb
xchg
or
insb
stos
leave
add
fildll
addb
dec
and
cmp
mov
or
xor
cmpsl
xorb
cmpsl
leave
inc
pop
add
dec
gs
push
test
mov
mov
and
jns
and
dec
cwtl
pop
into
cmc
out
in
push
xor
adc
dec
fwait
jg
popa
xchg
test
pop
insb
mov
lds
mov
dec
mov
fimuls
enter
cli
mov
popf
int3
iret
addb
jb
mov
mov
inc
imulb
mov
enter
out
push
add
addr16
xchg
call
mov
adc
jb
in
pop
je
dec
shll
out
ret
adcb
inc
and
jg
bound
test
mov
fcompp
lea
test
js
jnp
lret
mov
sbb
and
mov
mov
xchg
push
push
push
push
es
xchg
daa
fidivrl
mov
lcall
xchg
insl
cli
cmpsl
xor
test
into
xchg
clc
into
mov
adc
dec
add
sub
iret
pop
sub
jae
and
push
or
popf
cli
jle
pop
cmp
daa
pop
push
xchg
mov
shrl
xor
test
fs
sbb
pop
clc
xchg
sti
and
xor
aas
mov
mov
mov
hlt
jg
or
fs
scas
push
das
and
mov
adc
repnz
jae
stos
mov
sub
scas
mov
jae
ss
js
cmp
fisttps
sbb
cmp
or
mov
icebp
ficoml
mov
or
dec
orl
sub
stc
pop
dec
mov
and
pushl
fs
cmpsl
call
adc
push
fs
daa
bound
hlt
dec
push
loopne
pusha
cli
mov
scas
jnp
fdivrs
pop
fstpl
and
xor
insb
inc
inc
mov
mov
lcall
stos
jmp
pushf
ja
aaa
loope
ficoms
cli
push
data16
mov
cld
inc
xor
sbb
inc
test
push
ret
dec
push
lahf
into
inc
out
lahf
inc
push
pushf
mov
fucompp
push
rcr
push
fistl
movsl
and
rclb
adc
mov
out
sahf
mov
nop
lock
ja
jo
jge
xchg
dec
dec
and
pop
testl
ret
mov
movsb
xor
sahf
stc
xchg
mov
cwtl
jl
iret
ret
pop
pop
pop
mov
outsl
arpl
shlb
cmc
fsubrl
aas
outsb
push
xchg
outsb
fldl2t
cmpsb
fsubl
fwait
lcall
aaa
adc
mov
ljmp
add
inc
and
inc
cwtl
lret
std
jmp
xchg
xchg
test
cmp
adc
and
shll
push
pop
ficomps
jmp
jp
mov
add
cmp
inc
in
push
inc
movsl
and
push
inc
mov
mov
or
push
mov
push
movl
push
lods
mov
push
in
lods
mov
mov
xchg
mov
xlat
ret
adc
and
dec
xchg
cli
and
negl
cmp
repz
lret
mov
cs
mov
pop
sub
mov
lret
push
push
sub
lock
aam
cs
insb
cmp
add
add
xchg
jae
stc
sub
cmp
out
or
push
imul
mov
ret
xchg
and
popw
ret
push
jbe
lcall
mov
idiv
mov
push
shll
push
lods
sbbl
push
ja
insl
push
ret
push
jae
mov
mov
push
js
cmp
pop
inc
xchg
les
pop
mov
or
pop
lcall
lods
jo
out
repnz
push
add
dec
aam
scas
sti
cmp
testb
push
push
dec
ljmp
jg
push
xor
pop
or
paddusw
sti
mov
pop
and
pop
fldcw
mov
in
mov
lahf
fisubrs
loopne
pop
fistps
ja
rorb
js
movsl
or
jmp
jb
nop
jmp
ror
jb
in
ljmp
enter
int3
mov
or
mov
inc
adc
lret
cmpb
or
mov
sub
push
or
push
mov
aas
pop
mov
sti
cmpsb
scas
gs
mov
bound
pop
mov
mov
lcall
lahf
lea
fildll
ds
mov
sbbb
push
scas
fisttpl
jmp
mov
inc
xchg
mov
or
push
sub
add
or
imul
jbe
xor
adc
icebp
xchg
sub
or
pop
stos
cmp
clc
sar
pop
sub
mov
jae
fcompl
mov
fstp
rorb
push
push
pop
js
mov
or
cmp
jnp
std
push
ljmp
add
inc
mov
ret
sbb
mov
leave
inc
ljmp
es
pushf
repnz
jl
mov
jle
or
hlt
fbstp
jmp
pop
add
push
sbb
ja
cmpsl
icebp
hlt
jecxz
or
push
mov
lock
cmc
mov
and
imul
push
popa
mov
sahf
jbe
out
loopne
xchg
enter
mov
sbb
cld
rclb
mov
mov
or
repz
in
pop
push
pop
push
test
scas
loope
cmp
dec
xchg
pop
je
xor
push
push
mov
inc
mov
or
xor
or
jns
in
sub
imul
das
lods
push
inc
js
fpatan
in
pop
and
sub
rolb
xchg
pop
mov
daa
scas
ds
xchg
push
je
enter
lret
fildl
stos
jp
cmp
push
push
push
xchg
jle
arpl
out
inc
sarl
int3
adc
adc
mov
mov
pop
xchg
jmp
stc
popf
mov
cmp
jmp
out
pop
adc
fs
jbe
mov
pop
sbb
or
mov
mov
jno
and
divb
fdiv
jp
frstor
and
js
fisubrs
lret
ret
or
push
inc
and
repnz
cmp
or
mov
mov
xchg
scas
mov
mov
movsb
or
adc
invd
inc
shl
or
stos
adc
cmc
std
sbb
vpcmpgtd
outsl
pushf
jecxz
push
xchg
xor
pop
push
fwait
adc
mov
sarb
jne
xor
sahf
mov
dec
mov
sub
adc
cmp
arpl
aam
or
inc
ljmp
das
push
out
fisubrl
movsl
push
add
sbb
pop
jmp
loop
int3
fst
test
pusha
lods
xchg
int
xchg
imul
mov
lea
and
sub
add
repz
test
adc
imul
xor
dec
xchg
dec
jb
lock
int
jo
pop
dec
add
clc
push
pop
jb
inc
std
ja
lret
mov
sbb
sbbl
cmpsb
ret
cltd
push
aad
fstpl
gs
sub
int3
pop
dec
test
pop
leave
xchg
mov
pop
dec
inc
and
repnz
mov
mov
ss
les
xchg
pop
push
test
sub
ljmp
mov
pop
jbe
xchg
jae
bnd
inc
jnp
or
sbb
cltd
mov
mov
fsubrl
inc
shlb
pop
enter
movsl
push
xlat
push
out
add
and
mov
movsb
sahf
out
jmp
push
jl
mov
inc
inc
jb
mov
inc
outsl
xchg
daa
add
aas
mov
mov
scas
daa
cmp
mov
lock
sub
sbb
dec
imul
cmpsl
sbb
mov
xor
inc
inc
scas
xlat
jae
push
or
loopne
push
rcll
je
or
mov
mov
dec
enter
lods
jp
dec
outsl
cmp
mov
ss
fsubrp
push
nop
pop
movsb
movsb
loop
pushf
push
xor
mul
jns
out
cmp
and
xchg
jae
mov
add
xor
sbb
int
divl
push
lcall
adc
stos
and
dec
and
mov
in
mov
mov
rcll
cmpsb
imul
scas
sub
lock
xchg
mov
sbb
shl
mov
cmp
popf
pop
inc
and
mov
andl
decl
cmp
pop
ret
shrl
dec
test
pop
pop
ret
xorb
pusha
sbb
mov
dec
adc
nop
lods
sub
inc
jg
aam
nop
adc
xchg
inc
roll
dec
ds
push
outsb
or
nop
and
push
sbb
fwait
adc
stc
mov
ljmp
or
jle
and
out
aaa
int
aas
and
in
inc
je
or
push
sbb
dec
sbb
adc
ror
stc
mov
fdivrp
scas
push
dec
sarb
pop
pop
xor
cwtl
mov
nop
dec
rcrl
inc
mov
xchg
jo
xor
jb
test
repnz
mov
add
mov
sub
mov
push
mov
inc
pop
in
pop
testl
jmp
jb
jb
xor
adc
and
cmp
mov
xchg
sbb
loope
scas
mov
out
add
dec
pop
or
mov
popa
cli
in
add
jb
adc
addr16
jne
aad
out
ja
ret
pop
outsl
in
rorb
xchg
arpl
cmp
pusha
out
and
mov
adc
scas
cmp
jnp
inc
xchg
inc
xor
roll
push
dec
mov
std
out
adc
xchg
jae
xor
push
repz
rcrl
lods
cli
mov
js
mov
in
and
jle
sti
cld
insl
adc
cmpb
ja
icebp
or
lods
out
jg
in
cmc
add
add
mov
xchg
dec
xor
jle
rcl
mov
xlat
popa
mov
es
mov
ret
xchg
xor
rcr
push
jl
ljmp
divl
or
xchg
stos
or
gs
adc
adc
or
push
fisttpl
sub
sbb
and
mov
sbb
cmp
dec
jp
mov
bound
insb
out
pop
and
jmp
and
enter
fnstsw
out
adc
sub
js
sti
je
mov
test
mov
mov
xor
or
and
jo
fadds
testl
inc
movsl
dec
inc
flds
je
jnp
insl
push
lods
mov
je
pop
clc
push
adc
xchg
fstl
aas
bound
push
mov
lods
ficoms
sub
bnd
imul
cs
push
mov
inc
mov
cs
pushf
adc
jl
es
movsb
js
rcrl
mov
cmc
ja
and
and
in
mov
cmp
popf
out
sbb
add
mov
add
lahf
jge
mov
insl
pop
xor
insl
outsb
js
pop
push
push
test
push
es
addl
and
rol
clc
lds
mov
mov
arpl
sbb
mov
jbe
push
dec
iret
inc
pop
cmpsl
or
jo
push
sbb
jbe
mov
xor
fwait
xchg
xor
stc
mov
pop
push
lock
loopne
jo
jmp
lods
lret
and
insl
push
jno
lods
enter
add
cmc
mov
push
arpl
jl
hlt
jmp
pop
xor
clc
adc
push
xchg
test
push
fdivp
sub
add
shrb
inc
fstps
imul
xlat
jg
test
xchg
sbb
aas
mov
mov
xchg
test
pop
sbbb
cmp
gs
mov
ljmp
andl
ret
mov
cmpsl
or
int
push
pop
xor
mov
jnp
or
mov
mov
and
mov
ficoml
xchg
mov
lea
stos
data16
xor
sti
jecxz
push
insb
insl
mov
sbb
push
inc
rorb
add
xchg
aam
mov
jnp
xorb
lds
cmp
and
loop
xchg
hlt
or
sti
arpl
data16
mov
cs
hlt
or
mov
push
inc
jmp
sub
ret
push
or
lock
mov
and
rcl
das
xchg
sahf
stc
shlb
cmp
ss
addr16
addb
popf
and
and
rcrb
dec
jmp
push
lock
arpl
pop
mulb
jo
mov
jnp
pop
dec
and
add
fsub
je
in
lods
data16
xor
jbe
mov
outsl
pushf
leave
mov
cmpsl
and
das
cmp
xchg
stos
lock
lahf
cmp
pop
push
adc
xor
adcl
inc
mov
aas
xor
mov
ljmp
sub
or
bound
popa
sbb
leave
cltd
shll
and
shl
mov
xlat
pop
ret
push
pop
adc
addr16
push
mov
ja
out
int3
cmp
outsb
jo
and
dec
pop
jne
add
test
scas
mov
xchg
pop
push
lret
ljmp
cli
mov
sbb
cld
decb
fidivs
cld
mov
roll
or
cmpsl
xorl
ds
ret
or
adc
lods
cs
add
inc
mov
adc
iret
testb
arpl
mov
sahf
lret
adc
jle
loopne
cmpsl
mov
push
cmc
enter
sar
cli
mov
add
andb
es
lret
add
fmuls
cmpsb
pop
call
dec
adc
out
sub
jg
mov
mov
repnz
cli
and
inc
push
mov
icebp
inc
mov
aam
dec
mov
in
jl
pop
cltd
hlt
adc
jge
cmp
in
rcll
dec
lret
movsl
and
mov
pop
lcall
iret
leave
sti
dec
adc
mov
leave
adc
add
aad
push
enter
in
in
repz
cld
jns
inc
pop
and
in
mov
je
mov
insl
sbb
add
hlt
mov
gs
mov
test
dec
inc
dec
xchg
pop
mov
hlt
dec
mov
call
xchg
sub
lret
mov
rolb
aas
scas
aas
jae
jl
and
sub
icebp
out
mov
pop
sub
fiaddl
mov
shlb
int3
arpl
or
popf
sahf
mov
int
insl
stc
push
jbe
sbb
sub
icebp
aaa
les
adcb
mov
xor
mov
stos
das
pushf
dec
adc
push
dec
inc
dec
into
aam
jmp
in
cmp
movsb
jb
cld
xor
sbb
sub
ret
mov
sbbb
scas
notb
adc
pop
loop
adc
lods
xchg
pop
mov
sub
bound
movsb
lahf
aam
aad
sub
sub
mov
outsb
pop
xor
or
lret
ror
push
mov
push
stos
imull
sbb
fildl
sub
adc
cmc
loope
pop
xor
jns
lcall
mov
ljmp
call
adc
sub
pop
sub
and
inc
int
mov
cmp
push
fs
sbb
sub
xor
sahf
sub
jnp
or
adc
jno
or
xchg
shl
mov
pop
es
fs
adc
js
aam
and
divb
imul
call
xchg
int3
pop
ljmp
push
sub
push
int
adc
sar
je
shrb
popf
rsm
push
adc
xor
mov
mov
icebp
pop
sti
jo
mov
xorl
jnp
cld
fisttps
pop
xchg
mov
lock
push
in
gs
jmp
jp
inc
add
add
xchg
inc
xchg
adc
jns
cmpsb
pop
or
mov
mov
mov
xchg
fbstp
cmp
fisttps
cmc
test
inc
xor
negb
fs
mov
sub
pusha
xchg
pop
setnp
repz
mov
movsl
push
lods
scas
xchg
cs
pop
adc
cmp
daa
xor
push
ja
jp
jge
dec
daa
outsl
jns
enter
mov
lods
mov
xor
push
rorl
dec
sbb
mov
decb
xor
sub
in
inc
aam
iret
jb
repnz
jecxz
int
jmp
lcall
nop
movsl
jecxz
outsl
icebp
jne
pusha
mov
jp
cwtl
mov
sbb
xchg
mov
fdivr
vcvtdq2pd
sbb
jbe
fs
pop
insb
pop
mov
mov
add
loopne
push
nop
mov
std
mov
out
in
pushw
xor
push
cmpsb
lret
sahf
test
or
push
in
imul
cwtl
fmul
pop
mov
xor
mov
xor
inc
and
cmp
mov
std
sbb
push
out
subb
pop
nop
push
mov
push
mov
popa
in
jl
adc
pop
mov
adc
pushf
repz
mov
in
add
gs
adc
jnp
shll
and
bnd
test
movsb
inc
and
sbb
ret
addr16
outsl
xor
sub
in
adc
push
jne
int3
mov
xchg
jecxz
clc
fnsave
int
sbb
push
fdivs
arpl
das
or
pop
xchg
ja
repnz
mov
dec
out
sub
bndldx
mov
jbe
test
mov
cmpsb
add
xor
cwtl
dec
into
stc
nop
sti
cld
ret
jmp
in
sub
mov
movsl
dec
dec
and
das
cwtl
lret
negb
push
mov
aad
mov
insl
dec
call
push
fcoml
popf
and
fwait
dec
and
icebp
outsl
sbbl
stos
rolb
out
out
add
out
int3
push
fimull
sub
sub
pushf
inc
add
icebp
cmpb
popl
pop
test
js
jp
adc
cs
mov
nop
mov
pushf
fsubrl
arpl
shlb
scas
pop
jecxz
loope
adc
int
les
xchg
mov
scas
fisubrs
pop
sub
fistpll
ljmp
leave
mov
xchg
pop
data16
adc
stos
pop
sub
test
fisttps
hlt
into
pop
inc
jns
movsl
sarl
dec
sub
jmp
pop
imul
fstpt
sbb
mov
lahf
pop
test
hlt
pop
push
mov
xchg
jle
fidivs
jge
pop
sahf
cmp
lea
jle
or
stos
popf
inc
mov
mov
in
jecxz
enter
and
xchg
xlat
popa
stc
and
xchg
mov
pop
loopne
je
cmp
or
ret
sbb
xchg
dec
xor
sbb
std
inc
pop
xor
in
rcrl
js
dec
and
stc
out
call
xor
jns
sub
xchg
or
mov
scas
or
push
sub
es
hlt
sbb
jnp
inc
mov
inc
mov
pop
lds
xchg
sub
outsb
mov
lahf
das
push
mov
int3
cld
bound
aad
fstp
mov
mov
negb
pusha
cld
mov
pop
hlt
ret
ja
inc
in
pop
push
mov
ja
push
out
jle
mov
jbe
mov
mov
mov
in
jns
dec
xor
add
popa
in
push
into
fdivrs
mov
pop
pop
mov
mov
lahf
or
sbb
adc
fs
clc
adc
negb
hlt
xlat
cmp
gs
test
xor
rcrb
xchg
jg
xorb
add
or
adc
push
sbbl
sbb
gs
ret
out
aad
packuswb
out
adc
jo
std
insl
cwtl
mov
clc
fimuls
and
fstpt
push
sub
and
js
nop
cmp
andl
pop
xor
cmp
adcl
test
and
ds
mov
or
fcoml
enter
shrb
repz
lret
mulb
mov
add
adc
int
loopne
jl
imul
popa
push
cmp
ss
xor
loope
movsb
mov
ljmp
es
bound
pushw
push
aas
sbb
dec
cmpsb
sbb
fildl
stos
cmpsb
lock
pop
xor
das
orl
cmp
xor
pop
xor
mov
mov
ja
inc
cltd
stc
in
mov
in
jo
push
cld
std
inc
dec
or
addl
fiaddl
dec
dec
out
sbb
imul
pop
pop
xor
and
push
movsl
enter
fstps
out
jmp
mov
xlat
xor
sub
and
insl
mov
in
es
lahf
mov
aam
in
dec
addr16
jae
mov
jo
push
lods
popf
mov
in
push
mov
or
inc
aam
xchg
fldlg2
mov
cs
loop
xor
shll
jecxz
cmp
pop
sti
inc
sub
test
sub
sbb
movl
sbbb
fsubrp
ja
ret
ret
and
xorb
pop
adc
sarl
xchg
leave
bound
int3
push
inc
popf
inc
or
push
je
fadds
push
cwtl
jb
and
pop
mov
push
push
mov
mov
cs
scas
arpl
jecxz
int
lods
mov
pop
adc
pop
popa
rclb
or
cmp
test
xchg
pop
cmp
aad
add
jl
mov
sub
subl
dec
jae
addr16
jns
push
mov
lods
popf
mov
ret
inc
adc
test
jne
push
jo
cmp
dec
repz
add
mov
test
and
push
sbb
mov
pusha
jae
icebp
stos
jbe
popf
into
add
lods
loope
push
inc
sbb
pop
mov
push
mov
ret
or
and
mov
mov
outsl
mov
sub
pushl
xor
xor
insb
adc
flds
mov
push
fs
jg
shl
int3
push
stos
cmp
and
jb
mov
pop
jle
dec
pop
cwtl
adc
jle
in
fstl
sub
push
icebp
adc
jecxz
lock
inc
js
addb
std
insl
pop
cmp
icebp
and
add
jg
rcrb
push
lahf
mov
mov
pop
jnp
outsl
aas
mov
aas
jnp
fldt
lds
xadd
lock
and
mov
mov
mov
int3
fdivr
and
fisttps
lods
and
add
and
lds
pop
sub
push
or
nop
into
xor
mov
in
test
pop
test
sbb
xchg
sub
xor
loop
push
mov
sub
mov
mov
xchg
insb
sub
mov
pop
sti
xchg
xchg
test
or
push
in
movsl
cs
rcr
push
das
xchg
mov
fsubrl
jo
inc
ds
mov
adc
loope
dec
testl
cmpsl
test
sar
adc
imul
mov
push
mov
sbb
or
mov
invd
lods
fnstcw
jne
adc
lret
scas
adc
and
mov
inc
push
out
inc
imul
pop
xchg
cmp
cltd
mov
jb
dec
jg
dec
push
iret
adc
dec
fistps
pop
push
or
loopne
push
mov
stc
aas
xor
fbld
cmp
in
dec
loopne
push
imul
jle
push
stos
push
inc
mov
sub
fidivl
pusha
push
test
nop
adc
fdivrl
arpl
mov
imul
movsl
xor
push
mov
aam
dec
leave
lea
pop
negb
ret
pop
push
popa
push
aam
shrl
ja
repz
push
outsb
fisttpl
scas
inc
jp
popa
clc
inc
dec
adc
push
mov
andb
imul
inc
daa
shll
fcmovbe
dec
and
sub
mov
in
das
hlt
popf
dec
cwtl
pop
mov
xchg
insb
mov
sbb
jno
dec
addl
sti
xor
add
imul
je
nop
pushl
sub
cmp
inc
and
jl
test
cwtl
inc
pop
idivl
jns
into
add
add
out
cs
push
jae
adc
jmp
push
sub
cs
or
dec
sbb
test
rcl
add
adc
push
hlt
rorb
rorl
jle
aas
dec
or
jle
sbb
jo
test
xchg
test
aaa
movsl
cmp
cmp
shl
ficomps
pusha
inc
or
notl
lret
xchg
pusha
dec
push
adc
inc
out
dec
sahf
ss
cmp
dec
push
mov
xlat
xor
adc
rcll
adc
fs
adc
or
in
in
insl
fdivl
xor
push
dec
popa
test
in
icebp
loop,pn
mov
incl
cmp
jg
or
inc
aad
movsb
pop
push
scas
cwtl
mov
cs
rcrl
mov
xlat
shll
aas
dec
cmp
adc
sub
dec
push
inc
or
shl
ja
mov
adc
int
add
xchg
sbb
idivl
jmp
aas
inc
pop
push
push
xor
cmp
pop
mov
or
test
lods
dec
inc
fld
jge
test
inc
scas
sub
fcoms
loope
test
shrb
imul
test
inc
sub
push
xchg
jecxz
lea
xchg
test
shr
enter
mov
negl
xor
hlt
js
jbe
out
pop
loope
ret
lods
jnp
jge
fstp
mov
mov
aas
scas
jecxz
mov
or
and
adc
icebp
in
add
je
lods
repnz
and
std
add
push
mov
cmc
add
xor
jae
hlt
jp
repnz
sub
aas
jnp
rol
mov
inc
jae
rol
adc
cmp
mov
push
add
addr16
add
jo
push
fs
cli
sahf
push
mov
in
add
mov
xor
or
jnp
adc
jge
inc
addr16
dec
fdivrl
and
ljmp
mov
fwait
mov
leave
xchg
repnz
sbbb
or
push
pop
jmp
pop
fwait
inc
cmp
lods
add
sub
in
adcl
cwtl
and
or
and
int3
sbb
xchg
insl
add
jb
sbb
cwtl
ret
sub
pop
ror
aaa
sub
aad
movsb
out
in
sbb
movsb
sahf
pop
sub
jno
xchg
pop
sbb
push
add
mov
sti
jne
sub
jbe
pop
sahf
cmp
pop
js
inc
out
inc
dec
mov
pop
into
pop
lods
fcoms
pop
ljmp
aaa
lods
mov
cmp
dec
gs
dec
fildll
arpl
test
and
xchg
mov
xchg
and
sub
lock
adc
imul
or
in
cmp
sti
mov
dec
insl
sbb
cli
rcrb
mov
mov
mov
jb
xchg
hlt
add
and
mov
jmp
mov
daa
xchg
iret
fcomps
loope
mov
fstl
aas
cmp
inc
and
xchg
shrl
sbb
inc
or
enter
into
imul
jb
inc
jmp
cmp
push
sahf
add
les
popf
loope
mov
push
jns
mov
cmc
test
inc
shrb
or
fldenv
pop
xorb
out
fnstsw
mov
shld
jp
es
mov
mov
xor
call
pop
push
outsl
xchg
jno
jbe
std
rolb
adc
mov
movsb
into
and
cmp
out
jne
pop
fwait
int
in
mov
lods
clc
mov
xchg
sbb
and
add
sbb
outsl
xor
dec
orb
or
mov
inc
push
ret
shrl
adc
push
out
addr16
call
adc
xchg
xchg
nop
dec
mov
push
dec
or
jp
mov
js
pop
in
aas
mov
stc
inc
inc
imul
js
jnp
leave
pop
mov
jo
inc
mov
inc
dec
add
mov
and
mov
jp
add
pop
or
pop
sbb
pop
sub
imul
movb
xor
xchg
sbbb
fmull
push
push
test
hlt
xchg
cmp
loope
jns
lds
mov
leave
gs
push
push
pushf
lea
cld
lret
fsubs
jne
adc
rol
mov
or
xor
test
xor
ret
or
fnstsw
test
jmp
insl
in
fs
inc
sbb
sub
add
jg
and
movsl
enter
ja
push
inc
push
mov
inc
or
out
popa
arpl
lret
push
lock
stos
insl
and
push
cmpsb
push
in
gs
lods
xor
and
push
js
test
ret
push
mov
inc
push
stos
add
popa
xchg
mov
push
sbb
xor
adc
push
fbstp
jmp
test
imul
inc
jb
pop
ljmp
mov
inc
push
test
add
andl
aad
mov
gs
arpl
inc
fsubrs
sub
test
or
mov
mov
fisubrl
or
jne
pop
fcmovnbe
mov
push
inc
pop
cli
int
aas
fisttpll
fidivs
adc
push
lret
iret
les
cmp
push
xchg
xor
call
cmp
push
mov
lahf
pop
add
outsb
inc
testb
adc
xchg
xor
gs
xchg
jne
lods
lcall
add
pop
scas
sbb
jg
xor
xor
add
push
inc
inc
int
push
cmp
or
lahf
adc
xchg
insb
loopne
cs
cmc
stos
andps
in
jnp
das
mov
xor
cmc
and
cmp
mov
inc
call
rcll
dec
shr
inc
push
push
sub
add
adc
in
mov
repz
xchg
jle
mov
sub
jae
mov
adc
into
cmc
mov
leave
mov
inc
sti
inc
cli
and
or
fldcw
ja
cmp
sub
lock
inc
xchg
into
jno
sub
adc
movsl
orb
mov
ror
lcall
cwtl
lret
mov
dec
add
and
sbb
xchg
sub
cmp
addr16
fiadds
jne
mov
or
dec
jbe
fmull
in
fbld
jmp
xchg
dec
cmpl
mov
test
xorb
push
cmc
mov
or
xor
in
or
or
jl
cltd
loop
and
push
movsl
sub
or
fs
and
mov
out
int3
dec
jbe
notb
xchg
pop
cmpsb
ja
aas
aas
lret
movsl
test
scas
or
in
push
andnps
mov
inc
sub
stos
lea
push
sbb
cmp
ret
sahf
adc
ret
loop
sar
pusha
mov
mov
mov
sbb
in
mov
test
mov
pop
inc
addl
shr
pop
inc
andb
aad
mov
cmc
or
iret
fwait
sub
cld
jle
icebp
fs
xor
cltd
xlat
mov
push
aad
or
lret
add
loope
loopne
xchg
sarl
jmp
add
in
mov
insl
lods
orl
bound
sbb
push
push
in
pop
sbb
aas
push
lret
or
add
mov
mov
aas
sub
pop
jb
pop
jl
jne
jle
mov
mov
add
pop
shrl
and
or
fldenv
fwait
inc
push
add
adc
shl
lods
loope
mov
add
add
fs
pop
imul
mov
sbb
outsl
dec
sarl
xchg
mov
cltd
enter
cmp
push
lret
xchg
std
fdivrl
mov
xchg
aas
mov
aaa
addr16
shr
push
cmp
jecxz
dec
xchg
rorb
stos
fiadds
xor
pop
ficoms
cmp
repz
jmp
in
sbb
inc
lcall
pop
and
push
test
sub
in
xor
in
js
mov
mov
jge
or
inc
jl
mov
push
sbb
pop
ret
sub
xchg
subl
pusha
pop
inc
mov
fldpi
addr16
dec
jmp
out
test
das
and
out
mov
fwait
inc
xorl
and
stos
outsb
or
and
insl
sub
jae
pop
in
add
jne
jecxz
imul
pop
lahf
inc
loopne
mov
insl
push
out
jbe
icebp
sub
xchg
in
cmpsb
cmp
cmpl
jno
xor
mov
adc
cmp
jmp
loop
pop
into
mov
push
shlb
inc
int
sbb
add
hlt
shll
mov
lock
test
mov
mov
xor
jnp
xor
mov
aam
lods
add
cltd
negb
test
sbb
sbb
dec
xchg
add
std
out
in
imul
fsts
pop
mov
addr16
outsl
mov
sbb
sub
scas
xchg
js
cmp
aam
cmpsl
fstps
cmpsl
shrb
mov
pop
push
scas
lahf
add
push
std
pop
in
or
inc
inc
mov
andps
lret
sub
inc
jne
data16
imul
loope
sti
push
xor
add
mov
sbb
xor
sbb
adc
inc
jb
and
adc
imul
insl
lret
jae
lcall
int3
fldt
push
repnz
cmp
pop
loope
sbb
out
popa
or
stc
push
out
xchg
aaa
mov
push
dec
clc
jle
or
filds
sbb
dec
mov
pop
pop
xchg
aaa
rcll
pushf
sbb
aaa
sbb
hlt
inc
jmp
imul
dec
push
mov
jg
inc
arpl
sub
aaa
mov
or
adc
jecxz
inc
push
xchg
adc
mov
or
cld
or
mov
cmp
imul
inc
sbb
in
dec
xchg
push
or
jmp
imul
jecxz
loope
in
mov
scas
jg
jecxz
mov
push
in
jge
fdivr
push
jmp
mov
jmp
pushl
inc
cmpsl
leave
pop
inc
inc
lcall
mov
cmp
xchg
sbbl
push
sub
inc
pushf
test
or
jno
jns
sbb
pop
inc
movsl
out
repz
movsb
fnstenv
aam
fxch
cmp
loopne
lcall
out
ljmp
mov
jecxz
push
daa
cmpb
and
movl
push
out
das
int3
jge
in
or
sub
jp
nop
cmpsb
test
cwtl
loop
inc
lds
aam
popf
lretw
mov
push
sbb
arpl
arpl
sbb
mull
nop
pop
cld
popa
push
or
out
movl
lret
vrsqrtss
jmp
pop
and
repz
mov
sbb
popa
insb
cmp
aam
stc
jb
lcall
mov
xchg
clc
call
stos
mov
int3
jmp
jmp
enter
jbe
data16
dec
dec
imul
ljmp
add
outsb
insl
xchg
int3
mov
out
test
test
xchg
pop
out
jg
stos
sti
xor
ret
stos
jne
dec
inc
and
aas
push
inc
popf
ret
mov
pop
mov
lods
fadd
ret
xor
mov
in
lds
gs
push
test
push
cmp
es
lock
pushf
out
dec
testb
xchg
push
and
pop
int
mov
pop
cmp
jmp
and
cmp
mov
cltd
mov
push
out
xchg
pop
pmullw
pop
data16
mov
adc
add
mov
mov
std
adc
fisubrl
loopne
scas
int
ds
and
adc
cmp
mov
jp
imul
mov
push
test
pop
jmp
jo
lods
in
stos
push
sub
mov
cmc
jg
inc
movsl
or
jge
loope
jae
jp
mov
sti
jge
js
inc
shlb
xchg
sbb
movsb
int3
sar
mov
pop
lret
scas
sbb
ljmp
sub
pushf
fbstp
cmp
scas
mov
dec
fcomp
xchg
push
test
jno
loope
add
mov
mov
jecxz
test
scas
xchg
cmp
add
mov
data16
jo
jle
mov
sbb
std
cwtl
les
fs
jne
stos
loope
dec
lds
jb
add
dec
xor
les
insl
loopne
xor
push
repnz
add
pushf
mov
push
jns
jbe
dec
push
or
push
push
lods
sahf
and
andb
mov
daa
ret
xchg
fldt
lods
movsl
insb
lret
sbb
jno
sarl
cld
fdivrl
sar
outsb
lret
pop
mov
fcomps
sbb
inc
sub
es
fs
rclb
mov
inc
push
or
adc
stos
ret
popf
jge,pn
pop
cs
mov
int
dec
push
iret
data16
xlat
fdivs
sti
in
ss
mov
iret
sub
pushf
cmp
push
mov
push
jo
push
clc
rcll
loope
pop
dec
pop
pop
bound
out
popf
jg
cmp
adc
fs
lds
subps
mov
and
outsb
mov
mov
and
addl
xor
adc
mov
push
dec
mov
stos
fcompl
pop
pop
jo
xor
pop
dec
inc
adc
sti
xchg
test
jae
xchg
jp
std
push
and
adcb
out
xor
sbb
fcoml
dec
ja
xchg
iret
loopne
or
cltd
mov
or
orps
jo
push
adc
xor
jo
dec
xor
xchg
iret
loopne
inc
cmpsl
dec
aaa
cmp
aad
jnp
xor
xor
lret
adc
data16
dec
aas
and
aam
mov
leave
push
mov
in
aaa
fmull
sbb
fimull
xor
sub
mov
sub
lds
nop
popa
stos
jg
iret
xchg
cmp
cmp
dec
jne
or
and
inc
mov
out
insb
jnp
push
ds
sub
test
and
mov
cs
dec
fldcw
arpl
push
inc
mov
pop
xor
aas
mov
clc
add
dec
cwtl
mov
std
or
push
push
mov
and
mov
push
je
jle
sbb
movsb
out
xor
xor
pop
mov
push
mov
dec
stc
pop
test
pop
inc
stos
popa
add
xor
and
jno
icebp
xorl
daa
inc
xor
jns
jae
cmp
sbb
lret
aam
push
into
enter
mov
push
lahf
out
jne
stos
sbb
pop
out
stos
mov
xchg
adc
push
lret
dec
push
inc
adc
sbb
stos
mov
jecxz
jbe
pop
dec
cs
sub
ficoms
mov
cmp
push
push
xchg
aaa
andl
std
and
mov
or
iret
or
pop
pop
mov
xchg
outsb
fisttpll
shlb
add
cli
xchg
outsb
add
mov
and
mov
or
mov
mov
lea
or
mov
xchg
fistpl
cmc
int3
or
and
inc
adc
call
test
xlat
loopne
popf
into
lahf
mov
arpl
inc
mov
aam
jg,pt
cltd
lea
rolb
pop
cmpsb
mov
sbb
mov
adc
fisubs
cmp
mov
les
sbb
ds
das
xchg
insl
ret
out
cmp
pushf
push
adc
or
xor
bound
fistl
in
stos
push
ficomps
shrb
sti
and
dec
sbb
xchg
inc
testb
adcb
fwait
jae
flds
xor
fwait
pop
daa
shld
xchg
cmp
dec
negl
adc
cmpsb
pop
lret
out
and
inc
xchg
nop
test
dec
cmp
ficoms
sbb
push
xchg
and
call
movsb
push
daa
mov
aaa
into
add
jne
stc
out
cmp
cmp
mov
pushf
push
test
inc
shlb
flds
in
push
arpl
sub
xor
lods
mov
rclb
inc
stos
bound
sub
fnstenv
sub
into
stos
mov
sbb
icebp
push
mov
pop
and
xchg
rorl
sbb
mov
cltd
cmp
int
push
xor
cmpsb
lea
data16
pop
push
movsl
push
push
fs
push
sbb
xor
xchg
rcrl
xchg
pusha
mov
dec
fcoml
xchg
out
aam
cmpsl
xchg
sbb
jne
gs
lods
test
sbb
jmp
fsubl
stos
inc
dec
mov
movsl
inc
lds
fndisi(8087
add
mov
or
mov
add
movsb
xchg
adc
sbbl
in
push
jo
mov
sar
mov
push
mov
sub
add
das
pop
adc
cli
cmp
ljmp
jnp
adc
ja
loop
xchg
in
or
bound
mov
cmp
outsb
xchg
add
cmpsb
loopne
mov
sbb
push
ds
cld
fs
pop
imul
scas
ret
ss
sub
push
inc
inc
cmpsl
rdtsc
pop
push
pop
lcall
in
out
addr16
add
or
or
jno
mov
mov
mov
ljmp
in
ja
stos
push
sbb
mov
mov
ret
push
sbb
lds
push
shrd
mov
imulb
dec
pushf
fnstsw
data16
pop
mov
and
jb
jae
std
adc
xchg
add
mov
dec
dec
out
faddl
fisttpl
lret
lock
xlat
fs
sbb
std
push
out
sahf
lods
add
cli
sub
int
pushf
inc
dec
mov
outsb
gs
push
aaa
fimull
lods
dec
jbe
aad
add
loop
shlb
and
std
rolb
adc
dec
shll
dec
loopne
and
inc
add
jb
scas
pop
divl
and
out
mov
mov
sbb
enter
dec
inc
cmpsl
dec
fs
mov
ljmp
mov
pop
push
xchg
leave
mov
jle
mov
aas
js
sar
fimull
cmpsb
add
pop
or
mov
mov
ret
mov
xor
hlt
out
enter
pop
and
adc
imul
std
push
and
pop
inc
adc
push
pop
out
and
clc
sub
movsl
in
sti
cmp
dec
fs
dec
out
xor
mov
pop
sub
insl
sbb
std
cmp
imul
decl
xchg
addr16
inc
fsubr
sbb
xchg
lods
mov
adc
sbb
popa
std
cwtl
cltd
xor
jle
faddp
and
bound
adc
pop
xlat
repnz
mov
pop
dec
pop
ljmp
inc
push
cltd
stos
mov
test
lret
mov
or
test
adc
xchg
call
push
or
push
rolb
mov
cmp
pop
xchg
negb
xor
std
cmc
push
push
sub
fiadds
sahf
int
cmp
int3
jl
push
lret
cld
pop
mov
sbb
fmull
mov
push
outsb
cmp
sbb
pop
hlt
lods
lret
imul
mov
stos
nop
test
mov
movsb
inc
and
mov
outsl
mov
jmp
test
int3
aad
jmp
inc
adc
mov
jne
pop
int
pop
test
mov
sbb
fimull
fnstcw
imul
push
je
cmp
outsl
jns
push
das
sub
dec
call
push
fnsave
sbb
jp
fisubs
xchg
loope
loop
in
rcrl
cmp
pop
mov
cld
pop
pop
xor
cmp
icebp
dec
add
pop
sub
and
push
lcall
sahf
mov
xchg
test
aas
jbe
jno
jae
mov
ret
cmpl
mov
ja
test
pop
inc
inc
adc
jne
inc
inc
xlat
push
cmpsl
test
add
cmpsl
pop
jl
sahf
inc
out
jl
int3
mul
stos
out
daa
or
mov
add
mov
in
mov
scas
mov
aam
mov
fwait
push
or
push
call
mov
jae
ds
push
mov
gs
jno
cmpl
cmp
out
insb
xchg
sub
lahf
add
add
insl
xchg
inc
xor
mov
push
lock
and
mov
sub
in
add
out
lret
sub
mov
in
inc
vmovsd
hlt
add
adc
push
inc
popa
lret
js
in
scas
pop
scas
test
lcall
adc
aaa
xchg
cli
flds
mov
mov
les
xor
bound
pop
out
cs
adc
jecxz
in
jmp
sbb
mov
rorl
mov
mov
imul
gs
mov
and
xor
cmp
ljmp
xchg
fistpl
cmpsb
arpl
popa
adc
lods
loopne
jo
mov
xchg
pop
lret
jne
mov
loop
xor
int3
dec
lcall
sbb
and
xlat
loop
imul
push
pop
mov
sbb
xor
jp
dec
sub
cmp
jbe
cmp
loop
mov
fwait
movsb
rorb
addl
xrelease
jp
mov
mov
jo
je
pop
pop
clc
fstps
xchg
dec
daa
lahf
testl
and
push
add
movsb
pusha
inc
ss
icebp
loop
sbb
lcall
sbb
pop
scas
lahf
mov
ljmp
and
inc
mov
imul
scas
mov
add
or
loop
inc
lret
pcmpgtd
sub
mov
jo
in
pop
loopne
add
push
pop
cmc
jle
or
dec
xchg
mov
aas
jl
imul
repnz
push
jns
cmpsb
pop
push
mov
xor
push
dec
fyl2x
insl
xor
jne
jns
int
in
add
jns
ret
int
xor
lea
sbb
int3
cmpsb
movsl
or
test
mov
shrl
xor
test
cmc
or
or
cmpsl
subb
jge
and
aas
rcl
or
mov
sub
push
xor
adc
pop
lcall
push
imul
mov
or
jmp
pusha
dec
lea
lahf
jbe
mov
push
jmp
adc
sub
test
lods
and
push
lcall
xchg
cmp
sti
lcall
icebp
aaa
test
push
movsl
sahf
mov
or
insl
leave
sbb
mov
ja
jno
add
pop
movsb
dec
mulb
sub
or
add
jo
mov
lret
into
xlat
in
mov
imul
and
cmp
adc
push
cmp
outsb
dec
adcl
cmp
push
cltd
push
xchg
pop
adc
mov
pop
addr16
adc
or
roll
arpl
out
and
or
hlt
mov
rol
setae
out
hlt
stos
leave
cmp
ljmp
fistpl
cmpsb
inc
popf
mov
sbb
mov
inc
push
sub
xor
stos
flds
mov
jne
fcoms
sub
mov
and
inc
mov
inc
int3
iret
add
sbb
mov
mov
mov
dec
lods
add
adc
jecxz
jne
push
test
stos
mov
sbb
sbb
stc
insl
notb
mov
leave
push
xchg
xchg
xchg
aaa
or
call
hlt
shlb
xor
mov
bound
fbld
sti
ret
das
xlat
mov
imul
icebp
mov
repnz
inc
lret
pop
sub
aam
sub
add
mov
aam
out
lds
aam
and
sbb
dec
lea
fwait
xchg
jmp
add
mov
sbb
jns
test
jge
mov
test
test
jecxz
movsl
sub
notb
cmp
adc
arpl
adc
mov
adc
notl
stos
clc
out
mov
push
out
jnp
popf
call
jo
dec
mov
lret
add
mov
inc
imul
mov
jns
mov
mov
inc
mov
jbe
mov
and
imul
pop
xor
into
popa
movsl
mov
push
and
pop
dec
jmp
or
lret
data16
negl
lea
push
fidivs
addl
fsubs
mov
frstor
cmp
dec
add
bound
push
add
adc
sbb
gs
xlat
mov
insb
inc
outsb
sub
ror
mov
mov
addr16
pop
mov
mov
repnz
xchg
pusha
pop
add
fidivrl
call
adc
xchg
stos
cmc
sub
ret
adc
mov
cld
inc
mov
ds
in
aam
push
cld
dec
lods
insb
or
mov
mov
mov
nop
outsb
int
cmp
inc
movl
pusha
push
clc
mov
scas
cltd
dec
mov
jo
cld
je
and
jns
outsb
dec
xchg
add
xchg
fdivrl
xorb
lods
arpl
mov
xlat
out
jle
sbb
cmp
hlt
or
ds
enter
inc
xchg
push
xor
fldt
xor
outsl
jo
js
es
scas
data16
push
loop
insl
xchg
jne
push
imul
inc
addr16
xor
jae
sbb
push
popf
lock
push
fs
inc
jecxz
pop
xchg
data16
fwait
sti
push
mov
xor
or
cld
jnp
andb
pusha
mov
xor
outsb
mov
xor
and
das
mov
ja
cmp
repnz
adc
push
or
pop
int
js
and
shrb
jl
sbb
lcall
lret
push
or
xchg
push
in
pop
subl
and
cli
ds
fisubs
and
cmp
dec
scas
insb
sbb
cld
push
leave
arpl
lods
mov
jne
mov
xor
sbbl
push
mov
hlt
mov
xor
mov
mov
mov
inc
add
fdecstp
movsb
cmp
push
push
sbb
mov
faddl
dec
pusha
mov
sbbb
adc
hlt
sub
bound
bound
repz
mov
notl
cmp
sbb
mov
popa
or
xor
adc
dec
js
add
jle
shll
iret
hlt
mov
xchg
hlt
cs
ss
inc
xchg
fdivs
ss
ss
iret
xlat
ret
insb
loope
gs
rclb
xchg
fiadds
ret
fcmove
add
lret
stos
mov
mov
lret
repnz
xchg
jo
mov
jae
xchg
lods
shr
mov
scas
rol
mov
xor
mov
sbb
or
mov
das
sub
rorb
or
or
je
push
xor
pop
mov
jnp
push
xor
jne
xchg
imul
dec
sub
lock
icebp
popf
mov
sbb
sub
out
jb
pusha
pop
pop
push
mov
pop
dec
inc
leave
in
mov
fucom
mov
pop
push
inc
std
mov
inc
andl
in
aaa
insb
pushf
cmp
lods
and
mov
or
mov
mov
rclb
jne
dec
xor
loopne
dec
cmp
test
daa
pop
inc
push
sub
mov
arpl
cld
pushf
shll
mov
jl
nop
shr
cli
mov
rorl
popa
push
mov
push
adc
lret
aad
push
inc
mov
arpl
mov
test
or
aas
adc
and
fsts
aas
or
add
sbb
lea
lahf
pop
fwait
je
and
adc
sbb
sahf
movsb
int
dec
js
mov
insl
or
fistpl
push
outsb
mov
cmpsl
int
inc
mov
pop
jecxz
push
push
fnstcw
add
xchg
cmpsl
cmp
out
jl
pushf
and
out
lret
int3
pushf
ljmp
aas
outsl
stos
mov
out
fucomip
out
rcll
scas
mov
push
movsl
pop
mov
mov
imul
jae
mov
mov
ss
out
or
mov
dec
cmp
mov
jmp
addb
ss
xor
push
jg
add
fidivrl
and
jne
jbe
test
roll
jae
scas
iret
mov
xor
xor
pop
inc
ficoms
out
icebp
sub
idivb
add
imul
stos
lahf
xchg
cmpsl
cmpb
jge
push
mov
and
shll
popa
mov
sub
jge
dec
rcll
fiadds
test
sarb
sub
pop
push
aaa
inc
loopne
cmp
mov
ja
push
in
loope
push
jo
pusha
lea
ljmp
sbb
cmp
push
xor
push
enter
outsl
movsb
or
test
jge
mov
sbb
xchg
test
decb
ffreep
out
shll
roll
int
fldt
mov
xchg
pop
cmp
insb
out
mov
stos
lea
enter
mov
mov
push
jge
sarl
movsb
mov
mov
aas
icebp
hlt
or
jmp
mov
enter
sub
int
cmp
sub
sub
inc
outsb
sbb
push
sbb
pop
pop
pop
jnp
xor
lret
sub
imul
testb
loop
and
call
push
movsb
in
pop
xchg
in
xor
ja
into
jbe
jmp
lock
out
adc
sbb
or
push
imul
mov
dec
out
or
shll
data16
inc
int3
sub
and
mov
cmpsl
mov
inc
dec
sbb
int3
dec
cmp
fistl
adc
jle
sti
adc
sbb
xchg
sub
imul
xchg
je
ljmp
xor
add
into
lds
inc
jb
je
js
jp
cwtl
enter
mov
fadd
xor
mov
add
rorl
cmpl
les
dec
inc
mov
push
add
mov
aas
adc
push
ljmp
inc
repnz
cli
inc
jge
push
fnstsw
jo
out
sub
mov
es
dec
aam
pop
ja
fistl
jnp
xchg
fisubrs
insb
fistl
mov
pop
rol
jecxz
fildll
jmp
je
jbe
mov
dec
xor
sbb
mov
frstor
popa
pushf
popf
pop
add
fildll
push
xchg
inc
scas
xchg
jle
mov
sbb
test
out
sbb
adc
xor
rorb
jno
or
ret
push
and
pusha
sub
pop
dec
in
into
scas
sahf
ret
or
shll
in
and
rcr
incb
out
outsb
sub
sub
icebp
add
mov
scas
stc
push
das
lock
repz
mov
dec
stos
arpl
test
stos
cmp
je
nop
jnp
das
cmpsl
pop
movsb
in
push
add
push
imul
adc
mov
jbe
jmp
mov
stos
mov
adc
repz
sub
das
cwtl
add
dec
test
cmp
addl
sub
inc
pop
cli
scas
in
test
outsl
add
ljmp
ud0
and
mov
bound
in
xchg
jge
push
outsl
test
inc
mov
enter
stc
xchg
pop
ds
push
cmc
add
push
pop
xchg
pop
sub
adc
rol
mov
hlt
sti
add
mov
mov
xor
jmp
jl
and
mov
jo
or
dec
mov
xor
mov
add
xchg
cmpsb
les
aaa
mov
ja
mov
adc
loop
dec
mull
xor
inc
sbb
sub
mov
les
inc
mov
pop
int
push
sbb
fwait
pop
stos
xor
cmp
cwtl
decb
mov
imul
xor
mov
adc
aad
bound
lods
sub
mov
sbb
dec
push
push
popf
enter
push
xor
pop
dec
and
push
insb
sbbl
jae
jae
mov
into
les
jae
repz
arpl
add
imul
xor
nop
cmpb
jbe
jmp
add
mov
test
push
ljmp
xchg
shll
ds
loopne
push
xchg
inc
je
popa
fnstsw
es
add
pop
sbb
and
in
sbb
pop
jb
in
int3
jns
xchg
cmp
sub
xor
lea
imul
int3
push
jo
cld
xor
out
inc
sbb
repz
xor
xchg
inc
jge
movsl
mov
int3
cmp
sbb
ret
aad
xchg
loope
cs
or
faddl
jns
cli
fiaddl
inc
aad
fdivs
and
int3
fnstsw
ror
ffree
mov
into
cmp
call
xchg
pop
mov
or
xchg
shl
popf
pop
repz
xlat
dec
jecxz
loop
mov
and
pop
int3
insl
fnstsw
push
popa
mov
hlt
mov
mov
aas
mov
push
daa
shr
push
ret
cmp
push
push
out
out
sbb
lret
cmp
xchg
or
out
mov
mov
test
xchg
loopne
and
das
in
into
sub
into
or
imull
xlat
cmp
stc
enter
cld
cmpsl
push
loop
into
mov
mov
lods
outsb
jle
roll
mov
mov
pop
pop
ja
cmc
mov
fucomip
aad
jl
sbb
cltd
notl
or
mov
cld
and
jno
cld
sbb
mov
xor
mov
cmp
imul
repz
adcb
dec
aad
dec
inc
push
push
out
dec
mov
mov
jne
cmpsb
pop
lcall
das
cmpsb
repnz
inc
jbe
rcrb
icebp
mov
bound
inc
imul
xchg
dec
cld
pop
stos
les
sub
fnstsw
inc
xor
or
and
push
imul
das
fnstcw
ja
jp
outsb
mov
push
pop
lds
movsb
cmp
xchg
shr
lahf
lcall
mov
movsl
es
mov
aad
lret
xor
je
clc
jne
aam
and
lret
sbb
cld
inc
xorb
pop
cmpsl
jnp
lods
push
shrl
sbb
push
jne
xchg
push
shrl
sbb
xchg
jno
xlat
jno
mov
push
mov
jno
ss
ds
fnstcw
je
dec
insl
sbb
jo
negl
stos
jne
orl
iret
or
jo
mov
sub
incl
sub
popa
je
and
out
xchg
dec
add
mov
add
push
pop
dec
out
pop
add
loope
sub
sub
sub
mov
mov
adc
in
push
cmpsl
adc
inc
pop
mov
add
pop
inc
or
jnp
and
xchg
mov
add
popf
out
sbb
adc
shlb
movsb
mov
nop
movsb
pushf
dec
into
scas
pop
push
imul
aad
mov
sbb
fsubr
sbb
iret
sbb
stos
in
jno
rcrl
add
jb
pop
adc
shrb
sub
mov
push
sub
xor
add
arpl
mov
and
and
inc
aam
add
outsb
pop
push
dec
incl
test
add
popa
nop
cmp
into
cmpsl
xor
pushf
mov
popf
inc
fidivl
ljmp
movsb
aad
fs
fistpll
mov
clc
mov
call
dec
mov
jne
jmp
dec
lock
push
add
pop
loopne
loope
bound
mov
push
push
jl,pt
mov
enter
push
aam
sti
aaa
xor
sub
lods
dec
lock
sbb
aaa
pop
dec
mov
pop
cs
mov
dec
xor
rol
xor
lock
bnd
scas
pop
cmp
test
sbb
pop
xor
jl
sbb
and
push
xchg
xchg
jae
xchg
dec
add
jge
cmp
inc
fisubl
call
icebp
or
sub
inc
sub
and
inc
testl
and
xor
adcl
mov
pop
ret
fdivrl
cmpl
inc
imul
pop
jecxz
daa
push
pushf
pop
cmc
int
mov
ds
and
adcb
fstps
fs
lret
jmp
fucomi
inc
inc
adc
inc
xchg
dec
add
inc
xor
cmp
mov
push
lret
gs
fadds
inc
pop
jge
dec
inc
push
inc
notb
inc
mov
scas
out
cltd
sti
shrl
and
add
mov
jne
repz
mov
pushf
add
add
das
sti
scas
int3
mov
enter
adc
dec
loopne
dec
pop
repnz
cs
fldl
int
scas
std
dec
push
cs
leave
mov
push
xorb
sarl
sbb
in
sbb
jmp
mov
fdivs
push
mov
push
or
mov
cli
out
cmp
nop
xor
ss
push
cltd
push
or
int
aaa
push
adc
sbb
xchg
fwait
not
lcall
test
icebp
in
mov
lods
sbb
scas
into
jno
pop
xchg
push
and
mov
lcall
fld1
out
xchg
dec
out
dec
push
cmp
dec
mov
testl
and
mov
adc
roll
fldenv
sbb
and
popf
inc
scas
mov
nop
ret
lret
push
js
mov
cmpsb
scas
or
insb
jle
push
shlb
pusha
mov
test
sub
xor
cmp
cs
outsb
sbb
add
loop
das
ret
lcall
mov
xchg
jl
iret
stc
fisubl
pop
and
out
cli
inc
pop
fisubs
xchg
adc
daa
cmpsb
xchg
adc
mov
mov
mov
cmc
xchg
push
andl
rcr
dec
jge
push
jg
mov
dec
inc
adc
iret
cmp
pop
pop
or
push
and
xchg
cmp
std
test
dec
ficompl
jnp
jge
add
imul
out
sub
jp
jp
push
sub
and
aaa
out
xlat
fs
push
jecxz
leave
or
js
jmp
xchg
call
std
clc
jne
add
movsb
push
inc
inc
pop
inc
xchg
dec
pop
add
jnp
push
sar
div
pushf
pop
adc
push
push
inc
scas
test
adc
jg
inc
inc
pop
pop
xorb
pop
enter
insb
add
xor
inc
stos
dec
xchg
gs
mov
cmp
outsb
aam
jge
stos
into
mov
ja
cld
sti
mov
mov
daa
daa
ljmp
add
filds
frstor
xor
arpl
ret
mov
sbb
comiss
out
pop
les
mov
test
or
mov
loopne
xlat
mov
ret
lods
inc
call
sbb
xchg
xlat
adc
call
scas
xchg
xchg
inc
popa
rol
roll
das
stos
xor
and
fdivl
add
mov
dec
lea
inc
in
lret
rcll
or
jg
loopne
stos
and
sub
mov
mov
icebp
cli
adc
cld
xchg
pop
ficoml
xchg
inc
sub
cmp
pop
xor
or
enter
adc
mov
xchg
ja
fcmove
bound
mov
icebp
movsb
orl
push
jb
into
filds
mov
dec
bound
add
sti
out
push
xchg
mov
ret
xor
mov
call
push
add
hlt
loop
dec
fisttpl
lcall
and
pop
lods
jp
popa
xor
sub
pop
lds
cs
bound
pop
std
ss
outsl
jmp
mov
clc
hlt
add
sahf
pusha
les
mov
sub
and
stos
sti
xchg
dec
dec
ret
or
jnp
ficoml
je
adc
fwait
mov
mov
pop
push
sub
xor
outsl
push
scas
in
sub
les
sub
das
mov
in
lods
mov
scas
pop
pop
scas
jae
and
dec
int3
mov
jne
lock
pop
leave
or
adc
aad
aas
out
popf
cli
sub
mov
lods
add
popf
pop
xor
int
in
lods
aaa
inc
xorb
gs
and
call
lock
imul
fwait
sub
dec
daa
xor
mov
jecxz
jb
mov
inc
adc
add
cld
pop
jns
push
pop
or
and
mov
out
outsl
aaa
fisubl
movsl
cmpsl
stos
xchg
adc
insl
pop
test
cmp
jle
jg
mov
mov
mov
sbb
test
adc
pop
jmp
sbb
sahf
jo
arpl
xorb
hlt
inc
jmp
jl
cld
or
inc
inc
je
sub
inc
add
mov
jmp
jae
ret
xor
pushf
fistl
add
mov
scas
or
in
fdivrl
mov
push
cmp
in
or
and
bound
ja
das
mov
push
or
in
cli
xchg
push
mov
das
out
fisttpll
mov
movsl
dec
inc
cld
movsb
pop
and
inc
out
xchg
sti
enter
sub
jp
jl
inc
stc
les
jge
lds
pop
dec
aas
dec
xchg
mov
cmp
lock
push
out
enter
mov
ds
add
ds
or
cltd
aaa
add
mov
jnp
sbb
outsl
sarl
jo
test
or
mov
movsl
adc
pushw
and
test
lea
mov
mov
mov
mov
xchg
iret
fst
aaa
arpl
aas
adc
sub
adc
push
adcl
fldt
in
mov
ficoml
adc
xchg
lcall
addb
fldt
xlat
sub
xchg
xor
add
inc
inc
fidivl
shr
sub
in
in
add
add
popf
add
jne
and
or
cmp
mov
push
xchg
pop
outsb
sbb
int
pusha
fnsave
mov
movsl
xor
mov
push
test
loop
mov
push
daa
adc
lret
iret
shlb
cwtl
aad
pusha
mov
push
sahf
ret
iret
or
mov
mov
cmc
loopne
pop
rclb
scas
cmp
jae
cmp
dec
xchg
dec
pop
add
mov
jno
mov
fdivp
fisubs
or
and
jnp
ret
mov
aam
test
add
or
test
stc
bound
pop
fwait
lret
adc
mov
cmpsl
or
pushf
push
out
int3
inc
cwtl
jb
jg
xchg
xchg
idivb
xchg
daa
dec
mov
lds
imul
pop
mov
cmp
and
loop
pop
xor
push
jne
out
lret
sub
jge
lds
adc
inc
xchg
cwtl
xchg
xlat
jmp
in
mov
test
mov
insb
aaa
pusha
and
js
fldenv
xchg
push
repnz
jl
and
cmpb
into
popa
push
popa
in
cmp
ljmp
sarl
sbb
xlat
xor
and
les
call
adc
mov
addb
imul
inc
sti
cli
insb
out
movsb
sub
adc
push
xchg
inc
pop
mov
dec
ds
movsl
arpl
lret
dec
lret
jne
jmp
imul
sbb
pop
sub
xor
cmp
pop
xchg
decl
cmp
js
mov
add
js
push
inc
ds
in
test
rcrb
add
insl
mov
dec
lds
jge
dec
push
hlt
movsl
jns
and
mov
push
push
out
test
inc
xchg
add
xor
and
inc
jae
daa
popa
push
mov
pop
fwait
ret
push
push
xchg
or
sub
add
scas
jmp
dec
cmp
lahf
ljmp
cld
dec
mov
icebp
mov
sbb
sub
and
lods
push
out
frstor
xorb
mov
fcomp
lret
push
arpl
pop
sub
cmpsl
push
das
popf
xchg
mov
test
push
test
mov
dec
sub
pop
xor
xchg
fldcw
fldt
xchg
adc
pop
cltd
out
xor
shrl
and
idivb
mov
push
xor
inc
jle
add
cmp
mov
adc
sahf
dec
lds
loope
inc
lock
dec
sub
test
inc
daa
fadd
xchg
xor
pop
push
roll
aas
sub
imul
and
lahf
fsubrs
repnz
sahf
xorl
cmp
out
pop
pop
scas
popf
xchg
sbb
mov
int
in
loope
lods
mov
inc
sub
out
movsl
test
xor
mov
movsl
cmp
xor
int3
popf
pushf
jnp
adc
xchg
fwait
jle
dec
es
movsb
lea
mov
pop
add
mov
std
aaa
xchg
push
int
cli
out
inc
jmp
fldenv
sbb
sub
fsub
inc
je
dec
inc
jp
mov
insl
cmp
es
inc
mov
lods
dec
cmp
or
lcall
hlt
call
mov
mov
inc
jns
jno
xlat
daa
push
push
jp,pt
loopne
shrb
mov
xlat
inc
sub
inc
shll
push
adc
outsb
in
and
inc
out
stos
mov
jbe
or
jb
adc
add
jmp
out
pushf
stos
mov
aad
jo
mov
dec
mov
pushf
mov
or
jnp
adc
ljmp
loop
test
pop
xor
push
shrl
pop
popa
mov
lcall
sub
adcb
repnz
jg
in
popf
stos
imul
adc
fisubl
jmp
xor
and
add
jne
sbb
popa
ss
jne
mul
pusha
aad
mov
cmp
mov
push
cmp
mov
int
cmp
xchg
xlat
hlt
xchg
addr16
sahf
outsl
jo
xchg
add
cmp
jl
psubusw
dec
addr16
adc
sti
cmp
dec
cmp
leave
ret
js
fmull
out
add
sbb
int3
and
pop
cmp
idivl
push
mov
mov
lret
dec
outsb
ficomps
sti
dec
andl
mulb
add
jp
pusha
scas
fnstenv
mov
pop
pop
mov
or
mov
cmp
lcall
out
in
fdivr
repnz
mov
inc
test
xchg
lcall
shlb
push
jbe
mov
sahf
data16
ss
pushf
jae
outsb
into
enter
jb
xchg
lcall
pop
dec
test
jecxz
xchg
les
mov
pushf
fadds
or
repnz
cli
xchg
pop
fdivr
testb
xchg
rcr
shll
mov
aas
jbe
int
ja
xor
mov
add
jno
push
data16
fwait
sub
xchg
adc
es
lret
sti
xor
or
jno
sbb
mov
jg
xor
add
lret
mov
adc
adc
scas
js
push
sti
push
aaa
add
and
inc
mov
push
imul
or
push
daa
or
lea
mov
movsl
fisubrs
cld
cli
cmpsl
dec
ja
loopne
and
dec
lret
sbb
cli
popf
fisubs
dec
imulb
notb
ss
push
int
cld
jbe
pop
and
rorl
cmp
ja
repz
mov
jae
mov
inc
test
aad
push
cld
cli
int
loopne
cmpsl
add
rclb
call
inc
mov
das
mov
jnp
bound
hlt
movsl
aas
lods
sbb
nop
hlt
push
inc
stc
dec
mov
adc
fdivrl
sbb
mov
dec
aas
jg
aas
jb
pusha
int3
mov
lret
das
cwtl
outsb
pop
mov
movsl
pop
cmp
cmpsb
sub
lods
mov
and
push
xchg
insb
pop
mov
push
movb
jl
add
sub
rcrl
adc
std
sub
jecxz
adc
cwtl
mov
aad
notb
das
sbb
sbb
xor
add
aam
dec
jle
sti
out
shll
in
mov
loop
andl
dec
in
cmpsb
gs
jge
orb
dec
add
and
mov
sbb
mov
adc
rdtsc
call
insl
inc
push
sti
jne
int
pop
daa
pop
inc
push
xor
jno
sub
call
mov
cmp
mov
pop
dec
mov
pop
ret
dec
inc
imul
push
or
dec
fs
sbbl
subb
inc
lods
outsb
sarb
sbbb
pop
mov
int
lea
lods
mov
mov
ret
repnz
mov
out
pop
lahf
xor
ficomps
aad
add
pop
stos
and
dec
jne
xchg
or
add
subl
or
push
std
xor
mov
adc
std
cmp
cmp
xchg
addr16
movsl
and
mov
push
jl
adc
dec
jl
push
pop
sub
lahf
fwait
jbe
mov
ja
jp
icebp
sahf
pop
and
in
movsb
out
js
mov
lock
out
or
xor
lds
int3
cwtl
fildl
rcrb
or
stos
movsl
push
mov
jne
add
inc
int3
out
jmp
sbb
aas
scas
repz
adc
frndint
inc
cmp
mov
clc
cwtl
cmpsb
ret
aam
jecxz
pop
icebp
sahf
inc
loopne
sahf
out
nop
cmpsl
mov
push
xor
xor
out
pop
ret
fwait
or
lret
int3
mov
js
xchg
add
sub
pop
add
jbe
pushf
push
adc
shll
adc
jmp
ret
jnp
mov
sub
jne
fcomp
or
dec
sbb
mov
cs
push
rorl
aas
xor
mov
stos
stc
mov
pop
rorb
mov
sti
pop
fisubl
cwtl
xchg
cmp
sbb
ficoml
cs
jnp
mov
mov
mov
in
into
leave
mov
push
add
push
cmp
adc
movlps
outsb
inc
andl
addr16
jp
cmp
dec
into
sbb
xor
sub
xor
aaa
movsb
pop
cmp
addr16
outsl
mov
int
mov
cltd
and
roll
inc
or
fmuls
push
inc
xchg
mov
cmp
es
pop
js
mov
xchg
aam
cmp
aaa
inc
mov
xor
jo
ficompl
fs
xor
add
push
sub
sbb
or
dec
outsb
out
xchg
out
push
xlat
ja
fcomi
imul
push
int
enter
add
sub
cli
sbb
adc
xchg
dec
adc
cmpsb
dec
cmp
sbb
xchg
xor
mov
cmpb
jge
loope
arpl
jbe
mov
fwait
rcll
add
cmp
hlt
add
out
cmp
imul
add
and
stc
stos
dec
and
cmpl
jmp
mov
movsb
mov
push
dec
out
mov
call
push
aas
repz
adc
cmp
popa
aad
jns
das
mov
push
lock
shlb
and
lock
pushf
into
push
pop
test
pop
enter
jmp
hlt
lds
and
cmpsl
sahf
xor
lock
subl
lds
mov
lret
adc
add
bound
inc
in
pop
or
test
sarb
addl
xor
jg
pop
push
lret
faddp
adc
mov
in
push
cmp
cmc
adc
outsl
jbe
jl
push
mov
rcll
pop
sbb
fstl
cmp
cmpsl
in
shlb
lods
insb
popa
sub
jge
ljmp
jmp
mov
ja
sbb
adc
sub
mov
popl
lret
fistpll
inc
je
repz
rcll
dec
mov
push
stc
fiaddl
dec
ljmp
in
je
mov
cmp
mov
mov
jecxz
loope
mov
sub
push
mov
push
dec
shlb
repz
mov
xor
jl
in
cmp
cmp
cltd
aad
ljmp
out
imul
test
pop
ss
mov
add
out
outsb
push
aam
hlt
stc
popf
dec
icebp
sbb
je
add
inc
push
bound
int
jecxz
imul
cmp
jbe
adc
loop
push
leave
scas
aaa
jge
outsb
repnz
movsb
mov
push
pop
push
movsb
push
or
xchg
sti
cmp
sbb
jp
or
out
lret
cmp
push
inc
movsl
pushl
or
scas
mov
dec
fdivrs
add
xor
dec
xchg
sbb
cmp
mov
scas
push
je
in
inc
popf
add
aaa
out
mov
adc
cld
mov
sub
jo
jo
aam
divb
scas
inc
lar
data16
js
clc
jnp
jno
ja
in
xchg
xchg
xor
test
pushf
mov
aas
cmpsl
sbb
pusha
outsb
mov
in
les
ss
pop
push
pop
pop
outsb
pop
jg
lret
test
int3
sbb
pop
jp
adc
lds
lods
dec
and
xchg
outsl
cltd
xor
xchg
sbb
inc
fwait
xor
push
data16
mov
ljmp
xor
mov
pop
mov
cs
sbb
into
enter
fdivrs
xchg
ret
xor
lds
sbbb
outsb
movsb
imul
test
mov
decb
cmpsl
stos
adcb
mov
dec
jae
out
pop
jmp
inc
subb
mov
cmp
pop
cmp
jge
sti
xchg
inc
pop
stos
sub
cmp
cmpsl
dec
mov
cmp
pushf
lea
lret
int3
les
ret
cmp
lcall
xor
das
mov
push
lret
xchg
test
das
es
popa
mov
mov
out
cld
ss
xchg
dec
repz
out
and
mov
sbb
iret
dec
sbb
inc
fdivl
pop
lock
fcmovu
ret
adc
lret
lods
mov
test
cmp
and
loop
daa
ret
adc
or
lock
sbb
cmp
jno
mov
jecxz
js
mov
jecxz
add
lods
sbb
mov
xchg
rcrl
cmpsb
adc
pop
pop
jmp
sarl
inc
inc
push
jb
xchg
movsl
ficomps
inc
lods
in
pop
dec
xor
cmp
mov
icebp
aad
sub
fiaddl
jmp
jno
into
and
fwait
lock
jle
mov
cmc
push
sbb
push
mov
add
xor
jae
push
sub
inc
fwait
inc
mull
pushf
mov
test
test
orl
mov
sub
dec
into
inc
push
sbb
dec
jge
inc
dec
jns
subb
aam
sti
rclb
fs
nop
std
aad
cmpsb
sub
mov
std
dec
shl
mov
je
or
cmp
daa
jle
dec
es
adc
mov
sbb
fdivs
or
jns
nop
clc
sbbb
aaa
fidivs
sarl
and
loop
dec
sub
inc
out
and
mov
adc
jl
xorb
mov
loope
mov
jp
xchg
popl
cmp
adc
leave
xchg
lods
in
jnp
mov
mov
sbb
cltd
insb
andb
lods
cltd
xchg
int3
inc
sbb
int
jmp
fistpll
pushf
add
pusha
xlat
leave
clc
lret
adc
cmpl
push
mov
mov
out
push
enter
inc
arpl
sub
or
sbb
ror
enter
setge
fadd
clc
pop
lock
ss
or
leave
mov
outsb
pop
or
sub
jl
ror
cmp
rclb
je
xchg
test
aas
and
in
mov
mov
leave
hsubps
adc
idivl
and
adc
sbb
lods
and
pop
inc
inc
ds
loopne
pop
mov
mov
sub
mov
mov
mov
movsl
das
xchg
repnz
adc
je
je
xchg
cmc
mov
rcrl
jno
mov
push
leave
ds
cwtl
out
mov
rcrl
cmpsl
lods
sbb
jl
xchg
mov
movups
sub
pushf
sbb
popf
shrl
pop
bnd
pop
iret
dec
lcall
cmpb
ljmp
sub
dec
mov
ret
sbb
in
test
mov
ja
loope
cmp
sbb
dec
sub
pop
xor
inc
cwtl
xor
cmpl
xor
sub
fstpl
push
sbb
test
pop
sub
call
test
push
or
fnstenv
jmp
fldl
xor
stc
jecxz
out
sub
fistps
and
jg
imul
and
and
or
daa
and
adc
lods
add
and
ret
pop
inc
mov
loop
cmp
lcall
sbb
jne
js
lods
subb
and
int
int3
lcall
pop
xchg
jns
xor
hlt
add
lret
lcall
adc
pop
je
cmp
sub
jg
pop
lcall
push
jmp
out
lret
mov
jne
aam
mov
aaa
push
test
cmpxchg
mov
xor
sbb
std
push
dec
sbb
push
call
jo
inc
incb
rolb
sbb
and
add
jo
add
daa
inc
addb
push
andl
fwait
jle
inc
mov
imul
mov
sbb
jb
clc
popf
cmp
pcmpeqb
add
xchg
shlb
in
add
pop
push
ret
je
bound
aas
outsl
cld
mov
aaa
ffree
rclb
sti
sub
inc
dec
cli
sbb
lock
sbb
push
xchg
in
out
lods
jecxz
insl
rclb
fwait
mov
pop
cmpb
ret
iret
js
jle
out
xorb
xchg
xor
aad
mov
sbb
inc
pop
fmuls
leave
pop
dec
and
mov
push
jecxz
push
divb
jns
mov
or
adc
mov
int
push
mov
nop
fimull
mov
clc
shlb
cmp
loopne
fstpt
popf
mov
call
xchg
out
pop
mov
sub
push
or
or
dec
test
pop
pop
out
sahf
stos
loopne
or
sub
in
mov
mov
mov
push
je
jmp
nop
testl
hlt
mov
add
pop
test
jecxz
lea
jb
cwtl
and
adc
stos
icebp
fnstsw
adc
sarl
or
pop
jl
mov
fcomip
pop
jle
in
adc
gs
mov
sahf
pop
js
inc
scas
roll
xchg
les
fistps
or
jl
jo
shr
test
sub
sub
push
sahf
sbb
ds
pop
fs
fstpl
push
int3
or
xchg
nop
sti
push
and
add
nop
nop
add
jp
push
cltd
add
lds
jmp
mov
bound
xchg
daa
xor
fistpl
jmp
adc
cmp
rclb
lret
shlb
cmp
repnz
or
add
pop
insl
mov
mov
lds
dec
and
inc
test
adc
inc
mov
popf
jmp
jnp
ret
lods
mov
jp
test
mov
inc
add
leave
or
cmp
cmpsb
dec
addr16
sbbb
scas
dec
push
testb
test
cmc
lds
cli
sub
dec
cmpsl
xchg
test
push
push
xchg
sahf
dec
sub
fcmove
movsb
xchg
mov
call
or
mov
loop
jns
nop
aaa
dec
stos
call
inc
jb
add
stc
xchg
and
add
xchg
hlt
push
mov
subb
jae
fisubrs
xchg
in
jo
sar
sub
out
loope,pn
and
xor
push
sbb
cmp
outsb
or
mov
lahf
mov
mov
adc
mov
push
xrstor
les
movsb
enter
sub
mov
enter
repnz
mov
ja
mov
ljmp
inc
aas
pusha
xchg
jae
pusha
scas
jmp
out
int3
mov
dec
addr16
mov
push
adcl
test
scas
ss
jnp
xchg
cmp
add
sub
push
stos
jne
push
jnp
mov
mov
sub
les
jl
in
test
not
sbb
push
jae,pn
sbbb
or
push
xor
add
xchg
cmp
cmp
mov
hlt
fwait
push
movsb
aad
ficoml
pop
mov
lret
cmp
sahf
nop
les
and
arpl
test
daa
xchg
stos
loopne
push
xorl
and
jae
lods
das
lret
aad
adc
or
pop
sbb
dec
inc
cs
lcall
daa
faddl
push
sub
sti
jge
in
xlat
repnz
mov
into
loope
addr16
adc
out
or
rcrl
dec
cmc
push
insl
push
sub
je
aas
mov
cld
jne
dec
arpl
adc
sub
xchg
mov
cmp
cs
add
xor
adc
inc
cmp
aad
dec
mov
lahf
cmp
sbb
fimuls
clc
pop
sub
movsb
fldt
and
shlb
fcoms
repz
pop
mov
std
or
xor
cmp
in
mov
xor
mov
shl
cltd
jae
enter
pop
pop
fwait
and
or
push
in
clc
add
dec
aaa
pop
jmp
aaa
sarl
dec
pusha
pusha
das
xor
popa
aas
jno
loope
fstps
aaa
call
inc
dec
filds
call
test
pop
aam
push
clc
or
mov
mov
shrb
mov
mov
adc
cmc
outsb
dec
aaa
loopne
push
not
inc
cmp
clc
dec
add
and
add
push
jge
or
push
dec
mov
out
cmp
push
mov
mov
jno
mov
push
fwait
xor
out
dec
fimull
ret
sub
mov
pop
push
hlt
bound
std
out
popa
sub
imul
jo
mov
cmp
jae
push
add
out
mov
adc
fistps
sahf
lret
pushf
sbb
leave
mov
les
dec
repz
sbb
xor
pop
idivl
inc
cs
faddl
mov
cmp
mov
push
addr16
pop
or
push
mov
icebp
popa
cltd
xor
push
mov
xchg
clc
jne
and
call
imull
dec
sbb
ss
pop
mov
repz
lds
pop
mov
lods
addr16
xchg
fcoml
jne
add
and
mov
cmpsb
test
pushf
mov
push
into
cmp
dec
dec
outsb
cs
mov
push
mov
mov
add
sbb
ljmp
icebp
scas
stos
cmpsl
test
xchg
lret
xchg
divl
push
or
data16
add
fistps
push
or
push
xchg
popl
pop
inc
or
pop
sub
mov
adc
hlt
lock
pop
xor
out
mov
mov
pop
add
cmp
xchg
inc
mov
push
dec
cmp
dec
into
lret
pushf
xor
lret
sbb
addr16
ss
out
movsb
data16
mov
cmp
loope
je
cli
or
fbld
pop
add
sbb
pop
pop
dec
pop
fs
push
stc
cmp
lods
or
sbb
jnp
subb
pop
fsubrs
dec
mov
daa
sub
sbb
out
imul
or
test
out
pop
add
xchg
add
mov
xlat
movb
sti
sub
cmp
dec
insb
mov
test
inc
ljmp
xchg
mov
jp
mov
pop
cs
lock
call
clc
icebp
arpl
lcall
test
and
mov
sbbb
mov
scas
xor
roll
jge
ljmp
cltd
mov
imul
mov
aam
es
mov
ret
or
dec
dec
pusha
mov
test
cmp
je
cltd
add
push
es
movl
je
xchg
mov
nop
in
test
int3
loopne
into
mov
bound
mov
movsb
add
fisubrl
sbb
adc
jb
sti
ss
outsb
iret
sbb
fwait
andb
push
out
and
push
lods
mov
sbb
jb
fldenv
add
iret
sbb
xchg
addr16
push
mov
icebp
pop
cmp
xor
inc
xchg
pop
mov
inc
ss
hlt
es
mov
pushf
and
loope
test
loope
and
pop
sbb
loopne
sub
adc
mov
xchg
stc
test
fstps
add
jo
sub
sub
cmp
jne
out
pop
jl
pop
sbb
in
jns
pop
mov
xor
cmc
stc
xchg
push
ret
inc
jb
sbb
cs
cmp
mov
mulb
outsb
add
inc
push
and
loopne
inc
inc
insl
mov
cld
stos
stc
lahf
jp
cltd
in
xchg
dec
clc
lds
push
ja
pusha
pop
fwait
lcall
aad
xlat
lea
lret
jp
clc
gs
inc
js
shrl
add
pop
push
mov
sahf
push
pop
mov
out
dec
fiaddl
les
cmp
repz
lods
xchg
scas
in
mov
or
ret
ss
rol
mov
mov
add
imul
mov
repz
sbb
mov
sub
in
mov
jns
sarb
dec
xor
push
xchg
or
cmpsb
divb
pop
in
dec
pop
mov
fs
mov
pop
push
idivl
xchg
test
mov
aam
test
and
inc
andl
mov
stc
jecxz
adc
pop
int3
mov
pop
enter
fwait
push
rorl
ss
notl
imul
lret
sbb
es
cwtl
mov
pop
jo
js
pop
sbb
je
les
mov
and
iret
mov
std
loopne
mov
outsl
inc
out
insl
lret
enter
jne
stos
xor
xchg
inc
push
imul
ds
lahf
test
stc
xor
sbb
dec
or
iret
inc
testl
ja
mov
sbb
insb
sbb
push
xor
xchg
sub
negb
dec
nop
popf
xchg
sti
mov
rcrb
in
mov
add
incb
mov
dec
pinsrw
leave
stc
clc
sti
int
xchg
addb
ret
fcmovu
and
aad
inc
popa
pop
and
int
adc
jns
sbb
ljmp
jbe
mov
xlat
adcl
popf
sbb
fsubr
arpl
shll
adc
cwtl
mov
cmc
sahf
push
or
cmp
stos
scas
repz
scas
test
nop
mov
dec
stos
jae
xchg
dec
mov
xchg
mov
push
or
pop
sub
or
les
repz
imul
push
cli
add
les
test
lret
inc
mov
cmp
sub
inc
sti
push
sbb
cmp
push
popa
cs
pop
and
out
int3
xlat
dec
sub
arpl
mov
popa
js
test
out
jecxz
mov
fcomps
in
into
sub
fildll
into
add
lds
movsb
jae
push
jp
jno
stos
mov
pop
lods
aam
adc
jbe
adc
fwait
pop
shlb
repnz
mov
and
pop
or
jge
cmp
outsb
sub
jb
adc
ds
aad
cs
out
adc
jmp
movsl
cmp
jae
fldl
sub
jg
fs
imul
or
popa
fsubr
std
fdiv
call
and
mov
ds
iret
pop
fwait
rcll
sbb
adc
aas
ljmp
shll
dec
ds
pop
js
shlb
lods
and
hlt
sub
outsb
push
loopne
cltd
inc
movsb
test
add
push
and
cmc
lods
lea
push
or
sbb
mov
pop
jl
mov
incb
js
fimull
jl
mov
test
data16
in
push
pop
jnp
adc
roll
add
push
repnz
mov
adc
xchg
movsb
push
outsb
jmp
popf
dec
stc
shrl
addr16
push
and
cmpsl
pushf
push
add
outsl
iret
xchg
mov
or
lock
inc
mov
test
inc
mov
movsb
ret
sub
shll
negl
add
movsb
jae
mov
jb
insb
xlat
sti
push
push
add
sarb
icebp
into
mov
mov
sbb
std
pop
xor
hlt
testb
fidivrs
imul
in
mov
jle
or
lea
mov
inc
jnp
jp
movb
adc
xchg
movsb
xchg
aaa
rclb
pushf
jno
jle
iret
in
jns
or
add
xlat
movl
negl
pop
or
xor
add
lret
je
into
mov
xchg
sti
push
lret
xor
cli
lcall
into
mov
lret
cmp
icebp
jecxz
pop
push
pop
xor
cmpsb
xchg
lret
inc
sbb
in
cmp
insl
dec
xchg
inc
scas
sub
test
repnz
inc
ja
repz
and
shll
mov
lods
popf
adc
lahf
dec
dec
lds
into
mov
cmp
aam
test
push
fstps
outsb
ds
push
movsl
push
daa
add
xor
add
dec
fs
mov
jmp
mov
or
dec
mov
scas
mov
sbb
xor
test
sub
pushf
push
pop
xchg
testb
mov
jb
rcll
aaa
mov
paddw
rolb
subb
push
sub
pushf
mov
mov
inc
push
into
lret
pushf
iret
icebp
xchg
xchg
or
out
nop
fwait
xchg
sbb
movsl
push
or
cmp
pop
nop
inc
xchg
mov
push
ss
cmp
cmp
gs
or
adc
aad
xchg
pop
jmp
jmp
mov
das
inc
sub
jbe
lahf
int
fsubs
xor
fucomi
ja
inc
pop
mov
inc
dec
xchg
cmp
mov
pop
int
test
jne
sbb
and
cmp
sbb
in
add
mov
repnz
pop
sbb
mov
and
imulb
jnp
ret
push
sub
jge
dec
out
test
inc
mov
push
mov
dec
cwtl
xor
lock
inc
lea
fistpll
cmp
and
arpl
ja
pop
mov
fucom
rcr
xchg
cmpsl
mov
xchg
movsb
clc
popf
or
lahf
mov
mov
fnsave
add
mov
ds
mov
xchg
sub
popa
ret
js
pop
gs
push
rorl
xlat
mov
leave
cmpsl
lods
mov
sbb
imul
gs
cli
mov
into
pop
ds
mov
fimuls
movsb
pop
sti
imul
xchg
leave
xchg
mov
lods
cwtl
hlt
out
fcmovnu
mov
mov
fnstsw
push
pop
fwait
std
xlat
je
out
xchg
mov
fdivrs
into
negl
or
stos
sub
sbb
xchg
xchg
out
push
ret
adc
enter
aas
loope
jle
call
hlt
lea
mov
mov
dec
add
aad
pop
mov
mov
jns
test
arpl
test
mov
push
or
jp
int3
sub
jb
cld
mov
sub
push
inc
sbb
scas
add
and
test
push
mov
ret
push
fldl
pusha
push
in
push
or
insl
mov
fwait
push
call
ljmp
sbbb
sub
clc
aas
xor
sbb
fstpt
test
es
pushf
add
das
shll
repnz
test
xor
lods
cmp
arpl
call
loop
cmp
and
fsts
xchg
das
clc
stos
iret
push
add
movsb
xor
loopne
pop
jno
jle
mov
aaa
pop
pop
scas
or
pushf
test
push
xor
fisubrs
pusha
movsb
mov
xchg
xor
xchg
rol
lods
das
data16
mov
mov
sti
ds
sbb
fadds
pusha
scas
js
mov
dec
lcall
dec
pop
imul
rcrl
and
add
pushl
addb
push
xchg
test
fimuls
cltd
and
inc
mov
roll
dec
bswap
inc
sarl
aaa
scas
fcomps
push
jae
cmp
pop
cld
outsl
arpl
sbb
out
jo
clc
inc
dec
inc
mov
in
xchg
adc
mov
xor
int3
mov
test
lods
dec
mov
sbb
cmp
in
andl
scas
jg
jne
adc
adc
je
lahf
push
pop
inc
in
pop
dec
and
sub
flds
outsb
sbb
cmp
or
fs
xor
movsb
pusha
sub
xchg
lret
cltd
pushf
aam
pushl
sbb
fldt
and
or
cwtl
outsb
aas
or
dec
push
addr16
xor
lods
mul
aam
cmp
fsub
clc
inc
mov
stc
fnstcw
lds
out
dec
push
faddl
icebp
mov
adc
out
pop
mov
out
ret
mov
fistps
xor
push
adc
cli
cmp
jb
adc
ljmp
insb
clc
cld
scas
imul
sub
add
sub
aam
jp
loope
aad
lret
test
inc
pop
ret
out
sbb
nopl
fildll
mulb
ror
das
outsl
rol
pop
push
adc
cmp
movsl
mov
jne
loopne
push
adc
sub
out
jmp
das
jae
fstpl
cli
add
xchg
jecxz
shrl
xchg
dec
and
mov
fcomps
les
xor
push
jmp
sahf
out
sti
xor
inc
and
int3
sahf
add
sbb
je
cmp
inc
jle
shrl
dec
cs
xchg
icebp
jnp
ds
filds
inc
addr16
out
pushf
stc
mov
stos
sub
imul
mov
pop
fsubrs
jecxz
es
fstl
repnz
pusha
divb
lods
pusha
mov
adc
pop
pop
ror
push
xor
dec
add
push
sahf
push
int
mov
cmp
ds
xor
stos
xchg
push
adc
jmp
mov
and
cld
or
cmpsb
loop
fidivl
pop
push
scas
fstl
mov
pop
cmp
push
cmp
pop
cmpsb
push
mov
stc
out
into
inc
fbstp
dec
add
es
push
mov
ret
push
or
repnz
sbb
mov
xchg
xor
and
mov
test
rol
push
pop
pop
loope
push
lods
push
dec
clc
insb
lahf
pusha
and
push
test
xchg
icebp
das
loop
pop
mov
in
es
sbb
lds
loop
xchg
imul
pusha
cltd
test
das
in
xor
dec
jecxz
std
xchg
sub
cmpsb
mov
push
ljmp
mov
lcall
bound
int
dec
dec
fdivl
push
dec
leave
cmp
adc
fwait
inc
cli
mov
jecxz
insb
dec
dec
mov
jmp
xchg
jnp
or
push
mov
push
pop
hlt
push
rclb
sbb
nop
scas
xchg
mov
fistl
dec
sbb
mov
and
inc
enter
in
add
and
inc
mov
push
add
fisttps
add
int
adc
aad
imul
scas
in
imul
push
aad
arpl
outsl
test
in
les
lret
fcoml
adc
sub
sti
in
js
clc
sub
and
imul
stos
xchg
pop
outsl
pop
adc
jne
loopne
jecxz
pop
jecxz
hlt
ret
test
dec
mov
pop
jo
add
test
pop
pop
cwtl
in
or
or
adc
scas
mov
xchg
dec
les
movsb
leave
push
dec
push
jp
mov
cmp
stos
xchg
pop
push
test
jb
lea
popf
sbb
mov
lods
xchg
mov
lea
jb
ret
nop
add
cltd
cmp
jbe
lock
or
push
stos
aaa
lcall
mov
nop
xor
popf
xor
bound
fists
dec
mov
xchg
xchg
sbb
sub
orl
push
call
ds
hlt
and
mov
dec
and
out
mov
or
inc
mov
dec
and
cld
jl
and
stc
andl
xor
and
add
test
fsts
adc
loopne
movsl
mov
mov
sbb
fwait
repnz
bound
out
jns
sbb
inc
xchg
mov
std
sub
loopne
aas
mov
dec
jmp
gs
leave
loop
fs
push
cmp
loope
inc
shll
pushf
cmc
pushf
cmp
out
pop
mov
pop
pop
mov
in
jp
adc
cmp
mov
sbb
xor
mov
cmp
jecxz
loopne
and
add
outsl
imul
mov
jnp
stos
jmp
inc
and
pop
mov
pop
shrl
mov
fwait
lcall
cwtl
sub
repnz
out
fwait
out
jl
and
fcmovne
out
inc
test
mov
push
and
jmp
shr
outsb
std
sub
mov
xor
cmp
test
push
add
icebp
ficompl
gs
sub
into
mov
and
inc
sar
cwtl
sub
icebp
sub
inc
dec
push
ficomps
pop
cmpsl
test
inc
mov
in
add
jb
pop
rcll
stc
cmp
or
adc
movsb
inc
enter
addl
push
add
call
stos
mov
xor
jns
outsl
jae
jl
sub
test
stos
fstps
xchg
loop
inc
inc
pop
loop
inc
and
es
add
rorb
ficomps
inc
sti
nop
ljmp
mov
sub
aad
mov
cmp
mov
imul
inc
pop
cmp
or
movsb
sahf
js
cmc
ljmp
pop
js
shll
test
jg
sub
sti
adcb
cmp
jne
scas
push
subps
xchg
jg
sarb
add
pusha
movsb
xchg
mov
mov
push
sbb
lcall
aam
pop
fs
adc
cmp
jno
je
ds
shll
sbb
pop
loopne
inc
xchg
sub
xor
jmp
xchg
pop
sarl
leave
xor
pop
in
mov
inc
lcall
push
inc
lcall
pop
add
aad
xorl
adc
xchg
pop
mov
mov
push
call
or
fnsave
das
decl
lods
jno
dec
sbb
fsubrs
ret
mov
ds
icebp
jbe
ja
loopne
outsl
fs
call
lahf
dec
scas
int3
movsl
sbb
mov
test
icebp
mov
out
rorb
shll
jp
adc
pop
daa
mov
popf
int3
and
out
cmp
popa
lods
cmc
cmp
mov
or
dec
pushf
dec
aam
push
push
pop
push
js
aam
ja
mov
jno
pop
orb
and
mov
cmpsb
or
dec
int
mov
mov
insb
in
movsl
pop
out
pop
jno
pop
cmp
mov
mov
pop
dec
mov
mov
add
and
mov
adc
push
xchg
fwait
xchg
sbb
stos
daa
push
loope
je
mov
adc
int
jae
repnz
cmc
leave
add
adc
lcall
out
out
pop
ficoms
fwait
out
pop
stos
mov
jle
inc
and
push
fwait
lret
or
push
inc
cmp
pop
inc
jmp
and
xlat
incb
add
aad
adc
mov
dec
shlb
aas
je
and
push
stc
adc
pop
mov
pop
cmp
clc
dec
test
pop
pop
inc
push
sarl
cmp
addb
pop
xor
bound
lret
push
jae
mov
aam
mov
mov
cwtl
dec
adcl
dec
add
rcrl
mov
lret
out
xor
shlb
or
fstp
add
ret
test
jge
inc
lret
jge
sub
daa
sbbb
loopne
rcll
out
sahf
jb
fstpt
inc
insl
cmp
adc
dec
mov
test
std
pusha
jmp
pop
aam
push
stc
mov
add
mov
imulb
test
pop
fwait
repz
fdivl
nop
pop
adc
add
out
repz
xor
add
loopne
movsb
xor
pop
cwtl
shr
sbb
in
or
sub
inc
mov
stc
add
and
les
lods
repnz
cli
xor
call
xor
jns
inc
loope
adc
pop
lret
int
jecxz
push
jo
gs
adc
push
aam
mov
clc
xor
daa
lds
dec
add
mov
push
and
mov
out
or
jae
fsub
xor
adc
jl
and
shlb
sbb
ljmp
cli
mov
test
aad
sbb
push
add
out
loope
sub
mov
insl
mov
jno
cmp
shrl
pop
rorl
mov
sub
jnp
jae
cmc
push
and
cmp
je
pop
popf
jae
lret
sub
or
iret
arpl
ja
mov
jnp
inc
add
arpl
fiaddl
ficoml
in
jmp
xor
cmpsb
mov
cld
addl
test
rorb
fnstsw
xorb
movsl
sub
pop
arpl
push
and
mov
out
add
roll
jno
mov
leave
lcall
inc
push
in
mov
mov
shlb
cli
es
je
lods
mov
lods
jl
rclb
adc
repz
lods
lods
roll
les
imul
pop
fimuls
jb
in
stos
loopne
outsl
pop
push
inc
call
mov
stc
jnp
pusha
mull
jmp
fnstcw
pop
or
adc
sbb
sbb
adc
cmpsb
into
icebp
xchg
clc
lods
xchg
jb
add
or
das
mov
sti
into
mov
mov
pop
pop
bts
push
jmp
testl
and
out
jo
and
mov
inc
mov
shlb
adc
ljmp
or
aam
lock
fs
adc
mov
xchg
adc
xchg
pop
push
mov
mov
pop
pop
mov
popa
pop
or
add
out
rclb
and
ds
sub
xor
dec
sub
jne
icebp
in
es
pop
mov
sbbb
scas
push
push
mov
shlb
mov
mov
call
inc
aaa
aaa
xchg
dec
pop
ficoms
ljmp
lahf
push
mov
ret
scas
mov
cmp
jne
stos
sub
adc
es
adc
nop
sub
push
insb
xor
test
inc
aad
add
mov
dec
xor
pop
popa
xchg
je
orl
xchg
insb
add
jl
sbb
int
or
push
loope
mov
aam
out
leave
xchg
cmp
cs
icebp
outsl
push
cmp
outsl
imul
mov
mov
icebp
hlt
lods
fadds
ss
cmpsb
rcl
imul
imul
movsl
mov
stos
xor
movsb
pop
clc
push
sbb
dec
div
stos
jle
xor
jle
orb
ds
lds
cmpsb
jl
pop
dec
sub
dec
inc
rcll
add
mov
mov
mov
push
lods
stos
inc
loop
push
adc
pop
mov
std
and
ja
sbb
push
jecxz
jo
push
addr16
dec
fistpll
lds
fists
lea
or
les
mov
dec
pop
loop
test
cmp
mov
jle
dec
cmp
cmpsl
leave
push
fdivrs
bnd
mov
jo
mov
cmpsl
enter
dec
fwait
shll
inc
push
push
jp
add
mov
xor
mov
pusha
pop
inc
ret
icebp
inc
ret
fidivrs
adc
sub
xchg
popf
stos
cmpsb
negb
adc
and
or
xor
lea
xor
movsb
addr16
and
frstor
jp
mov
stc
lods
loopne
clc
mov
sub
lcall
mov
rorb
sbb
enter
incb
sbb
fdivp
xchg
stos
jbe
cmpsb
cltd
lods
push
mov
je
cltd
and
adc
mov
mov
lahf
inc
ds
and
loopne
sbb
or
ret
jae
popf
ja
insb
xor
das
mov
lods
mov
ljmp
and
adc
xchg
jg
out
xchg
js
or
xchg
mov
out
xchg
sub
jbe
push
mov
pop
aam
pop
pop
sbb
xchg
ja
outsl
add
add
pop
or
imul
out
or
push
lea
gs
add
jo
sbb
out
popf
testb
test
sub
aaa
fldenv
inc
ror
out
mov
aad
std
mov
pusha
and
and
cli
jle
aam
out
add
fiaddl
mov
and
push
lret
push
lea
enter
test
sti
mov
std
cmp
cmp
adcb
orl
jmp
mul
sbb
mov
mov
xchg
sub
dec
icebp
xorl
or
shrb
cld
push
jp
lds
inc
ljmp
les
lret
fldt
mov
jle
sbb
pop
adc
mov
or
mov
cld
mov
lods
jb
adc
lea
nop
mov
push
dec
mov
js
dec
lret
test
mov
xor
xchg
js
adc
jbe
add
push
xchg
mov
xchg
cmpsb
fs
int3
cmp
pop
xchg
pop
fwait
mov
or
stc
sbb
cmpsb
jno
xchg
xchg
loope
js
movsl
mov
sub
fisubs
cmp
in
fisttpl
jecxz
mov
push
inc
xor
mov
lods
adc
ret
repnz
inc
filds
loope
xchg
and
xchg
jno
cmp
mov
inc
outsl
nop
adc
dec
inc
xchg
ret
shl
sahf
fwait
mov
sub
cmpsb
bsr
sbb
mov
je
loope
mov
push
xchg
dec
sub
outsl
jae
push
xlat
cmp
or
rorb
int
sar
mov
aas
fisttpl
xchg
push
ljmp
inc
ds
hlt
and
pop
mov
jl
jg
jp
and
adc
or
xor
ret
fdivl
imul
cmc
aas
pop
jecxz
loope
je
mov
es
std
adc
xor
mov
cmp
imul
test
inc
mov
lds
sbb
and
mov
sahf
std
pop
cltd
pop
mov
fnstcw
les
xchg
stos
mov
arpl
cmovle
sub
stos
inc
test
fstpl
adc
inc
mov
dec
mov
sbb
shll
or
int3
lea
push
or
popa
mov
lret
repz
push
dec
push
in
dec
dec
mov
and
dec
inc
dec
lahf
movsl
or
inc
dec
imul
cltd
jb
mov
add
xor
pop
jbe
push
push
je
neg
ret
sbb
cmp
jge
out
ret
mov
stos
lods
and
add
fwait
leave
in
les
rcll
mov
ja
cwtl
arpl
mov
inc
shll
out
mov
push
xor
sub
rcpps
shlb
flds
cmp
xor
movsl
std
jle
cmp
add
cmp
add
or
inc
fistpll
fdivrp
and
pop
mov
mov
and
icebp
dec
xchg
xlat
cmpsb
cltd
mov
mov
add
mov
xor
lock
and
lods
push
movsl
in
and
test
aaa
jmp
xchg
sub
imul
jg
mov
repnz
bound
mull
in
mov
jecxz
movsl
out
cltd
pop
dec
dec
mov
xor
sub
xlat
mov
mov
sub
mov
cmp
les
and
mov
out
sbb
xchg
shrb
add
outsb
xchg
imul
aam
cli
add
dec
inc
clc
inc
cltd
mov
push
mov
xchg
loope
mov
add
add
stos
popa
sarl
iret
bound
pop
jmp
ficoml
jne
lcall
repz
mov
out
xor
or
inc
cmpsl
push
rcrl
or
cmp
in
insl
or
cmp
pushf
jg
outsb
test
jo
xor
lahf
mov
jbe
ret
sub
push
mov
sbb
int
xchg
inc
es
shll
popa
subb
sub
test
mov
xchg
hlt
xor
ja
test
jl
hlt
sti
cli
outsl
out
sbb
cwtl
cmc
dec
mov
dec
jp
xchg
or
jmp
xchg
cmp
ja
fidivs
lds
cmp
cmovae
int
inc
inc
jecxz
ja
int
ret
aas
cli
or
movsl
xchg
add
or
sarl
xor
or
push
pop
cmpb
ds
mov
shlb
orb
xchg
fimuls
jbe
push
ret
push
adc
cli
mov
adc
mov
fsubs
insb
loope
cmpsl
cmp
fcmovne
pop
mov
roll
jg
test
xchg
inc
faddl
gs
sub
bound
retw
add
lret
or
out
mov
out
mov
sarb
push
movsl
mov
ficoml
pop
jle
pop
pop
cmp
bound
or
push
jo
add
ljmp
push
loopne
movsw
lahf
dec
cmp
mov
mov
js
dec
sbb
pop
and
repz
push
mov
mov
aad
sbb
xorb
inc
cmp
repz
push
xchg
adc
adc
aam
pop
fsubl
pusha
xchg
sahf
aas
repz
loop
inc
sahf
ret
sahf
mov
fsubl
pop
dec
sti
fnstcw
jecxz
or
lods
scas
and
lcall
push
adc
std
sub
mov
sbb
or
lds
stc
cwtl
mov
mov
aas
mov
mov
pop
xchg
lods
or
dec
or
xchg
xchg
inc
mov
in
dec
mov
nop
popa
jne
xchg
pop
add
or
push
xorb
pop
fldl
nop
scas
add
mov
sbb
popa
outsl
adc
cmp
and
and
or
inc
mov
sub
mov
sbb
cmc
cmp
xchg
sub
sbb
sahf
iret
mov
dec
add
fstp
jb
cmp
push
inc
sub
leave
js
mov
mov
fcmovbe
adc
das
sbbb
cmpsl
int3
cwtl
test
cmpsb
xor
sub
inc
push
mov
and
cmp
sub
sbb
inc
mov
mov
add
jns
js
jnp
adc
shlb
pop
xchg
pop
out
mov
aam
pop
repz
mov
push
add
in
inc
shrl
add
mov
imul
insl
sbb
pop
ret
stos
dec
push
icebp
jne
mov
addr16
sub
rcrl
jno
jnp
ss
fdivr
sbb
cltd
mov
leave
inc
leave
loope
inc
imul
addr16
mov
mov
scas
mulb
icebp
shll
inc
addr16
and
and
in
pushf
add
add
je
xchg
in
in
fwait
pop
adc
movsl
lret
add
sbb
jne
int3
add
stos
pop
lcall
dec
movl
mov
mov
xchg
dec
mov
cmpsl
inc
inc
pop
dec
in
jo
lret
xchg
cmp
in
hlt
cmc
clc
sbb
fcmovu
sub
out
cmc
leave
cmpsb
mov
in
push
cmpsb
push
fildl
add
sub
cmp
mov
shl
push
and
in
leave
adc
int3
movb
in
mov
inc
push
decb
xchg
push
jle
lahf
jl
sub
into
cltd
jo
push
faddl
sub
dec
rcrl
test
call
cmp
and
or
mov
and
lock
inc
adc
lldt
fildl
sahf
insl
dec
lods
cmp
imul
insb
dec
rcl
inc
in
clc
mov
sahf
adc
ret
adc
cmp
test
out
adc
sti
adc
outsl
pushf
adc
cmpsl
enter
outsb
add
jg
xchg
leave
xchg
iret
imul
stc
mov
xorl
mov
mov
aad
jmp
push
insl
insl
push
mov
sti
xchg
inc
fucom
out
jp
mov
add
dec
out
sub
mov
xor
push
repnz
push
and
icebp
adc
ja
mov
scas
ficoms
flds
mov
xchg
xchg
ficoml
sub
insl
adc
rcll
into
mov
xchg
jnp
pop
loope
lret
sub
outsl
push
sub
mov
pop
repnz
ret
sub
mov
mov
xchg
or
mov
popa
xchg
push
repnz
fiadds
mov
fdivrs
push
dec
mov
mulb
addr16
cmpsl
pop
mov
cmp
pop
mov
in
mov
in
aad
cmp
inc
xchg
aaa
dec
jge
cmpl
cltd
cmp
aad
mov
inc
jns
sbb
mov
cs
xchg
sub
in
inc
mov
je
enter
bound
pop
push
outsl
call
or
add
adc
sub
popf
and
ds
jo
dec
add
jmp
test
rorl
ror
sbb
mov
cmp
sub
lret
mov
ss
mov
aad
mov
dec
pusha
dec
push
imul
push
sbb
mov
xchg
xor
test
imul
ret
mov
xor
inc
testl
jmp
loopne
cmp
jno
inc
mov
mov
cmp
stos
pop
add
xchg
cmp
fldenv
lahf
xorl
push
dec
filds
pop
in
les
sbb
or
pushf
test
faddp
dec
mov
xor
jb
or
mov
mov
lds
ss
mov
scas
jmp
imulb
sbb
xchg
mov
scas
push
sub
push
or
mov
decl
xlat
jle
test
dec
add
enter
mov
fsts
sub
rolb
loope
inc
jmp
mov
cltd
and
xchg
insb
and
sbb
sub
cs
xchg
lds
xor
adc
out
inc
aad
es
push
cmc
sbb
test
cmc
add
xor
sbb
test
test
xchg
pop
lods
call
mov
and
mov
xchg
mov
jmp
inc
imul
xchg
add
pushf
enter
mov
jmp
pushf
into
lods
mov
out
mov
inc
push
mov
aaa
push
jmp
jbe
add
arpl
mov
mov
and
inc
jae
add
mov
insb
jmp
jnp
je
adcb
and
aad
das
xor
lea
jl
dec
int3
dec
sbb
cmp
xchg
push
pop
and
shrl
into
mov
push
aad
mov
movsb
push
cmpsl
cmpsb
mov
in
mov
sbb
aad
jg
xchg
and
mov
addr16
jmp
into
fildll
xchg
lock
mov
pushf
pop
and
push
lcall
add
mov
xchg
jnp
mov
ss
test
inc
and
push
mov
daa
out
icebp
pushf
pop
mov
rolb
xchg
movsb
inc
xor
sti
ljmp
shl
sar
sbb
mov
les
lahf
jno
sbb
pusha
mov
shr
xchg
or
lahf
or
or
pushf
in
jb
in
sbb
add
pop
loop
dec
pop
popf
sahf
dec
adc
push
jmp
jecxz
add
in
dec
cmp
pop
out
in
cwtl
loopne
cmp
mov
repnz
fidivrs
std
pop
mov
jae
movsb
mov
jnp
subb
out
push
jne
sub
xor
leave
dec
rol
mov
inc
ljmp
add
test
test
enter
sbb
pop
loop
ret
or
xchg
gs
popf
sub
or
mov
sub
inc
mov
inc
aaa
cli
jb
js
sub
xchg
pop
add
pop
push
test
mov
out
incl
das
repz
cli
pop
mov
lahf
lcall
in
sbb
dec
outsl
push
sub
and
outsb
adc
xor
sahf
sub
xchg
jp
push
das
inc
cltd
adc
xor
adc
cltd
jge
pop
sub
mov
das
iret
mov
push
xchg
cwtl
xlat
jo
shl
fucomi
push
out
lcall
lods
test
pop
dec
or
cltd
or
loopne
clc
fs
sub
adc
pop
mov
mov
mov
add
pop
andl
sahf
adcl
loopne
and
cli
jns
jno
xchg
sbb
out
inc
pop
adc
pop
in
out
lock
pop
nopl
cmc
push
rcrl
in
and
mov
addr16
jge
inc
dec
in
jnp
push
jno
or
cmp
inc
lds
in
mov
mov
mov
sub
push
repnz
mov
lods
scas
fadds
sub
jge
xchg
jle
imul
iret
shlb
repnz
sub
je
xchg
dec
mov
sbb
out
or
dec
sbb
fwait
push
aas
jbe
call
cmp
xchg
fnsave
and
push
roll
or
mov
inc
jecxz
lock
loop
dec
fs
data16
pop
insb
xor
cmp
lret
popa
das
fisubs
inc
fyl2x
mov
and
fistps
out
in
int
cld
cmc
aam
jg
cmc
stc
fcomi
iret
sti
addr16
aaa
nop
push
sti
mov
iret
in
push
and
xchg
je
outsb
sbb
pop
lret
mov
lret
fs
dec
push
sbb
dec
stc
outsb
pushf
shr
pushf
std
imul
adc
out
icebp
mov
pusha
cmp
lds
mov
pop
or
fldt
scas
arpl
test
inc
repz
mov
fistl
and
sub
adc
pop
ret
mov
cmpsb
popf
out
pop
fimull
xchg
adc
push
stos
fwait
cld
sub
fldenv
dec
adc
jmp
imul
rorb
jns
and
insb
and
mov
icebp
sub
add
test
cli
push
std
cmpsb
adc
jns
push
mov
jl
xchg
dec
cmc
jno
insl
xchg
insl
sbb
lret
das
inc
cli
cmp
enter
mov
or
mov
icebp
or
jnp
popf
sbb
rcrb
mov
xor
push
mov
mov
jle
fdivrs
sub
scas
fxch
std
je
add
lods
cmp
mov
mov
cmp
fistps
and
jmp
jmp
add
popa
xchg
lret
cmp
dec
int3
das
cltd
clc
mov
gs
sub
push
push
and
xchg
mov
and
shll
nop
and
adc
xchg
inc
xchg
lret
xchg
movsb
fsubl
or
imul
fs
das
enter
pop
in
xchg
fld
jmp
dec
mov
push
lret
mov
sbb
sbb
int3
pop
pop
bound
leave
jmp
xchg
ja
pop
js
aas
jo
bound
xor
jmp
loopne
lock
fxch
rcrl
ljmp
dec
jb
sub
add
cmp
xchg
fsts
adc
test
in
hlt
adc
test
or
pop
aaa
imul
insb
repnz
push
stos
cli
sub
xchg
aad
push
jne
dec
jle
sub
fisubs
or
fidivrs
in
fbld
mov
js
popa
test
dec
sbbb
jl
iret
das
jg
bound
gs
movsl
adc
addr16
test
add
jbe
pop
mov
mov
fisubrs
fcomi
push
shl
mov
icebp
daa
dec
les
adc
sbb
ret
push
dec
js
sbb
inc
lds
scas
pop
mov
adc
adc
sbb
inc
push
or
mov
stc
mov
jae
xor
flds
xor
aaa
lock
shll
or
pop
mov
in
aas
negb
mov
inc
inc
push
ficomps
mov
loop
lret
mov
and
mov
xor
cli
in
pop
dec
sbb
sub
aam
jmp
cs
xchg
fisubrl
jmp
xor
fstl
iret
add
xchg
popa
mov
clc
arpl
sub
sysexit
xchg
popf
popf
pop
and
jecxz
mov
movsb
cmp
xchg
xchg
arpl
cmp
nop
mov
lcall
jns
sub
fnstenv
dec
out
mov
subl
dec
xchg
jns
adcb
adc
mov
imul
and
lods
test
stos
inc
test
test
jae
loopne
nop
shrl
out
sarl
adc
xchg
jmp
push
or
push
jbe
cmp
sbb
out
xor
dec
jmp
shrb
es
in
cli
aas
pushf
enter
shrl
into
sahf
adc
cmp
int
add
mov
jbe
or
adc
jmp
leave
xchg
cmp
out
dec
nop
aaa
fs
dec
icebp
or
push
mov
out
clc
add
cld
in
pop
daa
hlt
popa
cmpsl
cmp
push
iret
das
inc
roll
mov
jecxz
inc
inc
enter
and
nop
test
xchg
dec
xchg
pushf
sub
lods
cmp
pushf
push
add
jo
push
dec
jb
adc
push
xor
push
call
lods
xlat
mov
xchg
jnp
push
fcoml
jle
mov
jae
cmp
or
sbb
xchg
add
mov
sub
divl
ror
outsb
dec
mov
cmpsb
dec
iret
scas
rcll
dec
mov
cltd
ss
pop
aam
mov
jno
jp
aas
out
sub
xchg
imul
inc
inc
sbb
and
outsl
out
push
movsb
fildl
cmp
cmp
sbb
or
pop
notb
jp
clc
sbb
jno
stc
fidivl
jne
mov
lret
sbb
rol
mov
imul
mov
test
xchg
mov
mov
filds
mov
out
cmpsl
aam
pop
and
jecxz
insl
adc
fimuls
xor
scas
and
cmpl
test
fbstp
or
popf
push
icebp
add
cwtl
popa
adc
test
mov
cmpsl
enter
and
mov
xchg
sahf
push
repz
int3
fadds
dec
sbb
nop
cmpsb
sbb
mov
add
xchg
and
clc
les
dec
xchg
mov
das
sahf
in
popf
jmp
aad
rcl
les
fcoms
shl
enter
int
sahf
fcomps
cmpsl
inc
dec
mov
imul
or
dec
cli
pushl
adc
mov
inc
mov
inc
pop
xchg
cld
lods
push
inc
push
aas
mov
imul
mov
inc
lock
pop
scas
jno
mov
loope
xlat
jne
and
ds
jge
add
jg
cmp
pop
sti
arpl
mov
jge
clc
jp
add
jne
cmp
scas
cwtl
leave
mov
xchg
add
and
jmp
xlat
dec
mov
mov
jg
add
and
mov
cmp
inc
lods
cld
sbb
dec
push
pop
daa
jecxz
out
mov
push
sarb
fimull
outsl
lret
insb
in
nop
sub
dec
push
jge
cltd
les
adc
push
cmp
enter
inc
xor
jb
fbstp
cs
dec
mov
pop
hlt
icebp
lods
mov
pop
fwait
xchg
xchg
repz
test
sub
sub
sbb
pop
jmp
cmpsb
insl
lea
lds
pushf
dec
push
jno
rcrb
in
adc
lock
ss
xor
sbb
mov
mov
test
push
and
or
pop
into
ljmp
mov
addl
ret
addb
les
pop
std
cmp
je
pop
sahf
and
in
ljmp
rolb
sbb
cmp
mov
jecxz
enter
xchg
cld
aam
std
xchg
push
insl
fcomi
push
std
jno
dec
test
cmp
sbb
push
outsb
mov
sub
pop
mov
cltd
adc
pop
addb
and
mov
mov
mov
jbe
stos
add
push
and
cmp
fsubl
lcall
int
fs
or
pop
mov
dec
inc
cmp
add
jb
inc
in
xor
popf
pop
mov
arpl
mov
lret
jmp
add
push
or
lcall
sbb
shrb
addl
test
test
insb
daa
fistpl
loope
cs
inc
shl
nop
icebp
fdivl
fcmovb
add
roll
scas
pop
pop
push
ficomps
cmpsb
iret
push
je
stos
fmuls
mov
mov
or
dec
push
js
push
lods
ljmp
hlt
fs
subb
and
pop
fwait
mov
test
ljmp
pop
sub
mov
lock
sub
daa
aam
inc
cmp
xchg
or
push
push
sbb
shlb
hlt
mov
insl
ds
jge
and
mov
loop
push
loop
mov
and
hlt
pop
push
dec
sar
pop
add
push
xor
pop
xchg
js
enter
andl
mov
es
arpl
out
cmp
sub
ud0
mov
xor
xlat
fcmovbe
push
dec
lea
push
push
push
fistpl
in
scas
cltd
jns
pop
cmpsb
out
mov
adc
insl
or
cmc
pop
pop
stc
into
lock
mov
out
clc
ja
sti
or
lock
and
jae
or
add
xchg
lret
cs
xchg
dec
in
mov
xor
xlat
add
aad
mov
adc
mov
adc
or
arpl
aad
mov
xor
stos
test
js
jg
or
out
mov
inc
mov
stc
pop
dec
icebp
ds
or
push
call
in
outsl
push
jb
pop
add
sbb
mov
jmp
mov
dec
jne
jnp
and
lods
sub
test
daa
or
push
jmp
or
rcll
mov
jp
test
jae
jmp
push
fistps
jmp
mov
or
xchg
jmp
dec
inc
stos
sub
sub
mov
sbb
in
roll
pop
pop
cmc
xor
cmpsb
cmpsl
xlat
adc
loop
lds
or
dec
pop
imul
jo
sahf
jo
pop
mov
sahf
fdivl
pushf
out
adc
sbb
dec
sbb
sub
lret
lock
pop
add
sbb
ret
pop
adc
jmp
mov
sbb
and
sub
xchg
push
stos
imul
mov
mov
jecxz
cmp
inc
ljmp
in
mov
test
pop
and
hlt
dec
and
mov
pop
mov
out
in
xor
pusha
inc
or
push
push
sbb
and
cmpl
in
cmp
xchg
mov
cmp
adc
imulb
leave
outsl
jae
push
shlb
jns
cmp
movsl
hlt
mov
sub
inc
mov
cmp
std
arpl
pop
ret
adcb
js
insl
or
or
mov
and
ljmp
sub
cmpsl
jbe
js
ret
mov
inc
mov
xor
imul
inc
popa
push
dec
mov
je
dec
mov
or
js
pop
inc
push
shrl
push
xchg
ljmp
xor
cmp
loope
idivb
cltd
inc
and
fldenv
cmp
inc
push
mov
int
leave
psllq
dec
sbb
jp
jno
cmp
cmp
jo
fiaddl
test
addb
dec
adc
sbb
and
cli
cwtl
addl
leave
or
inc
mov
mov
mov
sub
mov
xor
xchg
sub
repz
pop
jbe
popa
xchg
ficoml
and
inc
mov
push
stos
into
repz
out
push
jb
adc
icebp
push
icebp
pop
js
orl
or
dec
adc
push
inc
clc
dec
cmp
mov
movsb
scas
das
jno
mov
xchg
shr
outsl
add
pop
mov
inc
mov
divl
adc
ss
fists
jmp
pop
sti
repz
andb
cmpsl
xchg
push
imulb
xor
out
cld
clc
dec
pushf
dec
dec
jae
inc
jg
mov
mov
pusha
xchg
mov
inc
cmp
rorl
or
idivl
sub
add
scas
push
std
in
out
add
lds
xor
mov
xchg
mov
pop
iret
stc
rcrb
xchg
fs
mov
test
mov
cltd
subl
push
push
dec
fisubl
jl
mov
cmp
in
leave
jmp
stos
addb
out
imul
cmp
rcr
cltd
mov
lret
fstpl
push
jmp
int3
fwait
data16
jge
jg
mov
adc
incl
mov
aam
pop
scas
lods
ss
out
mov
orb
sti
dec
lea
mov
bound
imul
ficoml
sahf
rcl
notb
jmp
pop
push
sbb
icebp
add
sbb
fbstp
cmp
aad
xchg
sahf
adc
insb
push
imul
jge
and
and
cmp
mov
mov
test
or
icebp
sarb
xlat
ja
add
mov
gs
shrb
push
movsb
movaps
jg
pop
jge
jo
imul
dec
inc
stc
xchg
imul
fcomi
pusha
cs
jo
pop
filds
xchg
int3
and
addr16
stos
inc
inc
sbb
std
movsl
pop
call
push
stc
jecxz
push
repz
pop
ds
aas
sbb
xor
mov
sub
dec
or
push
fisttps
pop
mov
adc
xor
cltd
loopne
popf
loope
mov
cmpsl
mov
jb
add
mov
mov
xlat
cmc
or
cmpsb
lahf
sub
and
sbb
outsb
mov
jo
pop
jae
pop
cmp
add
fldenv
pop
jmp
push
jno
cmp
inc
popa
lock
mov
mov
push
iret
shrl
or
cmp
cmc
outsb
jl
jg
stc
mov
mov
add
mov
add
repnz
leave
xor
mov
or
loope
cld
sbb
std
gs
xchg
dec
fsubrl
imul
mov
das
lea
movsb
enter
cmp
icebp
push
or
inc
add
jo
clc
mov
inc
adcl
jle
and
fsubrl
push
mov
in
xchg
jmp
and
data16
lods
out
cs
loope
adc
fnstcw
push
or
jnp
dec
je
add
sti
dec
and
sub
ja
add
stos
mov
divl
dec
jge
addr16
lahf
push
push
mov
xchg
shlb
aad
mov
xchg
inc
fiaddl
mov
inc
and
dec
xlat
and
cmp
sbb
or
or
aas
add
mov
jecxz
push
xor
cmpsl
xlat
push
data16
mov
fidivrl
addr16
int
lahf
clc
mov
hlt
mov
mov
sbb
add
enter
shrb
or
test
jbe
mov
jmp
dec
movsl
sbb
or
sahf
push
xchg
jge
mov
or
lds
mov
pop
negb
push
push
mov
movsl
xchg
and
mov
lahf
xchg
rol
jl,pt
jmp
jp
sbb
ss
shl
lods
pop
ss
pusha
xchg
in
mov
shl
movsl
lahf
mov
fdivrp
xchg
xor
mov
sub
sub
sbb
dec
cmp
sbb
shlb
sub
enter
das
fnsave
pop
lods
sub
xchg
mov
fs
cli
aaa
lds
outsb
jl
into
cmp
arpl
aad
int
inc
fdivrs
jne
aad
mov
jl
xor
mov
jmp
data16
packsswb
mov
les
jp
gs
loopne
arpl
aam
outsb
aam
sub
jns
mov
push
xchg
sahf
pop
lret
jb
repnz
leave
repz
in
mov
out
dec
mov
loopne
adcb
in
popl
dec
scas
adcl
addr16
lds
jbe
cwtl
ret
add
shrb
mov
push
sub
and
mov
inc
sbbl
leave
mov
lcall
add
cli
inc
dec
test
popa
jl
pop
push
sub
in
push
mov
in
lods
cld
push
jge
fbstp
adc
dec
add
xor
rolb
and
popa
xchg
pop
xchg
lcall
mov
pusha
jg
mov
cmp
test
imulb
call
and
lods
jmp
mov
rcrb
stos
mov
sub
sarl
std
inc
stos
scas
pop
push
jne
mov
dec
cmpsb
popa
xor
repz
sbb
cs
mov
repnz
push
ss
daa
sub
mov
cmc
and
cmp
xchg
fnstcw
loop
mov
cli
and
adc
es
in
inc
mov
mov
mov
cli
roll
ja
lods
push
inc
or
mov
sbb
leave
jmp
pop
sub
ljmp
xor
dec
call
mov
outsb
loope
jmp
lret
fildl
sub
mov
inc
call
rorb
push
add
gs
push
daa
ficomps
or
scas
fwait
xor
xor
std
faddl
jp
mov
xorl
xchg
mov
xorl
lds
shlb
or
adc
stos
mov
in
call
push
inc
xor
pop
add
xlat
sbb
mov
in
outsb
mov
aas
fsts
jb
adc
addl
test
movsl
add
mov
adc
xchg
xchg
int3
bound
pop
cmp
jl
add
jbe
inc
enter
push
push
mov
adc
imull
push
push
xchg
dec
enter
cltd
fwait
iret
mov
dec
jg
rcll
es
dec
repz
mov
cmp
inc
lock
push
ds
icebp
push
inc
xchg
adc
xor
or
mov
jae
in
lds
mov
repz
iret
mov
push
add
aam
sub
pusha
cmpl
mov
movsl
jl
jge
stos
mov
xchg
pop
sub
or
and
rorb
es
jmp
insl
fadd
mov
into
scas
fidivs
sarb
ret
or
or
xor
jl
inc
jecxz
cmp
sar
jg
sbb
jno
in
shl
push
mov
test
push
lcall
dec
xchg
dec
pusha
jecxz
icebp
fsubr
adc
iret
int3
scas
subb
nop
je
pushf
add
aaa
fists
push
imull
xor
out
lahf
jae
std
mov
leave
mov
stos
dec
in
fiadds
loop
insl
pop
fsubrp
add
jne
repnz
and
in
adc
cmp
inc
imul
xlat
xor
int3
repnz
sbb
and
cmp
stc
jge
xchg
inc
xchg
cmp
jbe
aas
ljmp
dec
add
mov
xchg
call
test
add
push
jns
repnz
aaa
notb
pop
push
into
adc
ja
mov
pop
roll
xor
sub
daa
das
in
cmp
je
std
cli
and
data16
lcall
scas
cltd
mull
xchg
mov
mov
popa
into
cmp
inc
mov
and
dec
insb
jmp
cld
add
xchg
push
fisttpll
ss
mov
inc
jg
pop
mov
inc
shrl
pushf
add
pop
je
test
sub
lret
popf
xor
jns
lret
fdivl
mov
cmp
icebp
cmp
test
xor
cmp
jae
mov
xor
cmpsl
cwtl
cmp
negb
xlat
int3
mov
xor
int
out
inc
sbb
loope
rorb
cmpsl
es
fstpt
cld
cmp
dec
arpl
mov
xor
int
adc
inc
rcrl
mov
add
fbstp
sbb
sbb
jmp
sbb
adc
rcrb
fildll
repz
subb
test
cmpsl
add
repz
sub
bound
sbb
add
and
les
iret
jnp
and
inc
sub
cmovno
cs
popf
push
std
xchg
shrl
add
add
mov
mov
sbb
or
pop
xlat
mov
pop
fcomp
mov
rcll
or
sub
pop
push
push
les
and
push
add
test
mov
int
imul
pop
mov
popf
jmp
ret
lcall
ljmp
and
cltd
pop
out
xor
jg
mov
mov
outsb
jae
sbb
jae
inc
int3
insl
sar
mov
scas
xor
jo
clc
ja
xor
pop
out
add
cmpsb
dec
incb
mov
lcall
jb
les
bound
movsl
dec
adc
ret
and
inc
out
ds
jns
in
jns
ret
jb
sub
popl
cli
sub
mov
pop
lahf
lahf
add
add
mov
adc
or
push
dec
sub
mov
das
lds
repnz
push
sbb
cmp
and
into
mov
and
repz
mov
ja
mov
stc
sub
sub
ds
push
fs
fnstenv
stc
lahf
popf
jbe
lcall
imul
jns
imul
mov
mov
xchg
pop
add
sub
ss
cs
xchg
jno
and
cmp
call
ss
cmp
test
jmp
scas
pop
hlt
sub
sub
test
stos
xor
xchg
jle
out
adc
cmp
pop
cmp
xchg
dec
pop
add
jecxz
lcall
push
dec
mov
xchg
out
mov
xor
call
cmp
mov
lahf
mov
sarb
and
and
pusha
inc
inc
sub
das
mov
mov
faddl
popa
aad
sub
xchg
cmpsb
or
mov
lea
aad
and
test
popf
and
ja
mov
sbb
pop
dec
push
or
mov
shlb
push
ljmp
aam
cmpsl
jb
xchg
loopne
dec
lock
xchg
addb
ss
mov
in
enter
clc
fcoml
cmp
les
ja
push
fists
insl
dec
vcvtpd2dq
and
fistpl
xchg
enter
fmull
ret
lcall
test
sub
dec
test
cmc
nop
mov
push
add
ja
and
mov
xchg
xor
push
jns
pop
mov
jbe
mov
add
test
xorb
addr16
mov
mov
pop
pop
loop
rorl
outsb
dec
mov
lds
lods
aaa
loopne
cmp
fisubrs
push
push
cld
bound
and
test
popa
clc
jae
jp
xchg
and
pop
mov
sbb
inc
pop
cmc
jmp
outsl
scas
out
rclb
jl
sub
test
xlat
sbb
pop
mov
stos
adc
xchg
or
mov
dec
incb
jg
int3
lcall
xor
stc
or
rolb
cmp
aad
mov
cs
lds
into
xchg
jbe
jg
push
flds
shll
shll
stos
push
imul
in
cmpsb
jo
mov
lods
loope
decb
shlb
adc
aas
xchg
sbb
dec
pop
mov
adc
fnstcw
mov
xor
inc
mov
inc
adcl
icebp
mov
add
outsl
push
sbb
fwait
das
pop
jg
fsubrs
std
cwtl
es
inc
out
xor
dec
repnz
push
cmp
sub
cmp
sbb
ja
lock
sbb
adc
pusha
fstps
xchg
push
xor
jmp
pop
inc
mov
push
lock
mov
roll
xlat
movsb
lret
and
leave
mov
sub
and
pusha
mov
in
jl
mov
sub
int
enter
cs
sbb
sahf
fnstcw
mov
sub
iret
mov
stos
js
cmp
and
ja
mov
jae
mov
sarb
ja
stc
cli
pop
and
das
jp
test
bswap
cmpsb
fnstcw
fcompl
jb
rolb
in
or
fwait
inc
xor
cwtl
and
lods
shrb
cmp
push
test
mov
loopne
add
stc
and
sub
inc
daa
xchg
inc
push
rorl
cmp
jae
pusha
inc
sbb
push
shr
scas
rcl
aaa
jecxz
xchg
int3
mov
and
dec
insl
mov
divb
loopne
sbb
pop
adc
mov
fists
xor
es
cmp
mov
xor
and
ret
dec
adc
mov
xchg
adc
jg
inc
push
cltd
push
aaa
xor
fsubrs
push
les
notl
inc
cmc
sti
add
sti
cmp
xor
cmp
xor
pop
or
insl
add
mov
xchg
aas
lret
sti
js
push
test
add
xchg
mov
sub
pop
subl
mov
cmp
aaa
adc
sahf
insl
lret
cli
fwait
rolb
in
imul
inc
sub
jecxz
sub
push
jecxz
add
cmp
cwtl
adc
fmull
out
xor
pusha
inc
int3
call
lods
das
out
imul
pop
les
mov
xchg
aad
popa
jnp
lock
repnz
push
inc
jbe
push
int3
out
pop
fcmove
xchg
dec
cmp
test
push
or
adc
int3
cmp
rcl
mov
les
sub
dec
or
bound
jbe
add
pop
push
int3
sub
xlat
ret
push
ror
insl
mov
outsl
adc
mov
int3
notl
mov
push
push
pop
outsb
sub
sub
lds
aad
outsl
jne
popf
adc
jae
in
ror
pusha
mov
sub
mov
push
jb
jns
mov
or
push
ds
es
or
adc
dec
mov
xchg
jae
fsubl
dec
adc
ret
in
cmpsl
push
xchg
cld
cmp
jle
out
outsl
or
sub
cmp
sub
sbb
sbb
add
les
sti
aam
pop
scas
xchg
nopl
cmp
jge
outsb
mov
jo
lea
push
adc
loopne
push
jnp
xor
lret
ret
sbb
pop
xchg
cltd
add
mov
xor
leave
hlt
ljmp
fldl
test
add
cmp
arpl
roll
push
repnz
iret
xchg
and
cmp
cld
ficompl
lret
push
addr16
fucom
xchg
rorl
pop
pop
jb
jae
mov
inc
mov
push
repnz
sub
out
lret
ja
mov
idivl
loopne
loope
dec
push
sub
dec
and
xchg
mov
pop
dec
out
adc
push
mov
xor
lods
xor
jge
js
xlat
push
iret
pop
mov
inc
and
outsb
push
ficomps
pop
pop
int3
inc
std
flds
imul
inc
in
push
nop
jo
mov
mov
jl
xor
cmc
sbb
fisubrs
test
push
loope
cli
cmp
mov
mov
mov
xchg
popl
jbe
jmp
cld
fst
jg
add
hlt
cmpl
sbb
xor
mov
lcall
add
movsl
or
shlb
in
shll
int
jle
jns
push
xchg
mov
call
cmc
jl
setp
xor
push
add
pop
inc
jne
sub
adc
cmp
in
incb
xchg
jp
xchg
sahf
push
xor
out
aam
lret
stos
jg
sbb
sub
lahf
xchg
adc
repz
addl
insb
ja
bound
mov
xor
pusha
jmp
in
imul
jnp
daa
mov
ds
jmp
incb
sti
movlps
cmp
push
pop
addr16
loopne
jb
out
ficomps
push
mov
icebp
inc
andl
sub
vshufps
mov
sbb
fnsave
dec
cmp
or
rcll
jmp
mov
jo
mov
push
js
xor
ja,pn
das
in
pop
mov
pop
adc
inc
pop
jmp
cmc
in
dec
fsts
jl
mov
in
xchg
into
orl
add
das
jle
aam
stc
dec
in
movsb
jbe
pop
push
pop
jne
sub
repz
mov
or
stc
leave
mov
mov
add
outsl
mov
fs
sub
mov
pop
bound
jb
inc
dec
jbe
pop
sarl
xlat
mov
or
xchg
insl
and
xchg
out
pop
dec
sbb
mov
sti
sub
cwtl
loope
fisubl
pop
push
sbb
js
inc
jmp
cmp
out
jns
xchg
or
hlt
mov
xor
out
xor
add
into
fisubs
sub
rcll
cmp
jge
sbb
or
js
pushf
cs
or
sub
pop
fsubrl
int3
or
out
in
pusha
xchg
cmp
mov
push
cpuid
testl
fidivrl
mov
or
xchg
pop
loope
xor
pop
mov
enter
das
jnp
mov
cmp
pop
clc
cltd
push
daa
test
fnstsw
notb
repz
sbb
in
cmpsb
call
clc
and
push
lret
push
or
or
incl
mov
jecxz
cmp
repnz
leave
jae
dec
fcmovu
xlat
dec
in
cmp
out
lock
inc
add
call
sub
popa
in
dec
cwtl
lods
repz
repz
mov
nop
notb
ja
push
pop
xchg
mov
loope
arpl
xor
push
fmull
in
dec
scas
in
xor
jnp
jge
xor
pop
xchg
sub
bound
cmpsl
add
dec
ljmp
and
mov
int
mov
or
xlat
mov
mov
mov
outsb
scas
add
fcmovbe
pop
adc
jo
in
push
fwait
add
in
not
je
adc
jno
and
pushf
popl
dec
sbb
or
inc
lods
push
icebp
cmp
rcrb
in
xchg
mov
jg
fimull
movsb
movsb
push
xchg
pop
pop
pop
jmp
gs
imul
pop
fidivs
pop
mov
jecxz
ficompl
imull
lcall
mov
jecxz
mov
leave
cmp
inc
loope
cmp
xor
sub
hlt
mov
popa
push
shrl
insl
cli
sub
cmpsl
mov
iret
pushf
cmp
mov
inc
in
sub
mov
inc
out
bound
popf
xor
sbb
movsl
add
lods
jns
sbb
push
imul
pop
inc
push
gs
shlb
pop
test
mov
inc
sahf
fucomip
clc
lods
add
call
fadd
dec
aaa
cli
mov
push
call
xchg
retw
outsl
inc
sub
xor
je
loop
mov
xchg
cli
fstp
inc
aad
inc
sahf
push
loopne
xchg
mov
lea
mov
mov
in
leave
mov
cwtl
arpl
inc
adc
lds
push
push
int
imul
cltd
push
push
push
in
mov
aas
aad
sbb
rol
adc
xor
add
adcl
jge
push
inc
clc
imul
mov
push
loope
add
dec
jno
cmp
icebp
cmp
out
fdiv
mov
scas
jecxz
rorl
into
sbb
sahf
lods
inc
std
xchg
cltd
mov
push
sbb
arpl
inc
pushf
and
and
rorl
xchg
xchg
std
cmp
adc
and
xchg
out
cmpsl
insl
mov
out
stc
sub
cwtl
js
xor
shrb
add
in
outsb
add
sbb
es
sbbb
mov
sbb
sbb
jne
scas
cltd
push
fisubrs
xor
in
gs
pop
bt
sub
adc
mov
test
mov
lret
mov
fdivp
cwtl
sbb
sub
mov
or
dec
jbe
xchg
xor
in
fistl
lea
push
fstpl
divb
fcomps
dec
xor
mov
xchg
sbb
inc
mov
xchg
imulb
push
call
dec
je
movsl
jp
or
test
pushl
shrl
aas
ret
pop
sub
mov
pop
cmp
mov
cmp
test
ds
pop
or
add
out
inc
icebp
sbb
inc
loope
sub
mov
stc
inc
add
cmp
sar
push
pop
rcl
imulb
sbb
hlt
pop
movl
mov
mov
adc
shrl
push
sub
add
jb
andl
push
rorl
sbb
rclb
pop
call
lods
mov
fidivrs
jp
lock
pop
shrb
inc
mov
popa
les
pop
jl
cltd
mov
in
cli
int
lods
cmp
cmp
sub
jae
enter
mov
pop
out
sub
cs
stos
aas
xor
fwait
add
jl
inc
push
sbbb
dec
fcompl
pop
adc
pop
mov
dec
add
dec
fnstsw
fcmovnbe
adc
popf
scas
insl
enter
push
aas
and
cmp
scas
xchg
jne
mov
dec
adc
cmp
jmp
pushl
in
jne
std
sub
sbb
push
pop
mov
and
push
sub
addr16
sbb
lds
jmp
pop
add
insb
insb
divl
sbb
aaa
push
inc
xor
fsubrs
adc
jo
jae
jns
add
xlat
fwait
shll
mov
and
jbe
outsl
mov
aam
lds
test
mov
imul
sub
dec
xchg
or
imul
pusha
testb
jno
push
push
out
nop
mov
out
cmpsl
or
and
rclb
add
dec
mov
jle
cld
pushf
fcoml
xor
mov
insb
adcb
outsb
cmc
push
imul
ja
xor
notb
stos
cli
mov
mov
clc
mov
stos
lcall
xchg
cmp
mov
cmc
shl
push
divb
insb
mov
hlt
mov
cmpb
dec
sbb
xchg
es
sbb
mov
ds
jno
and
dec
add
jne
mov
xor
outsb
test
sub
mov
cmp
daa
in
or
push
mov
out
call
sub
enter
bound
or
adc
push
jmp
in
cwtl
sub
repnz
mov
lsl
lret
ja
enter
dec
stos
jl
push
loop
cmp
cmp
cwtl
xchg
fmuls
fs
std
or
xchg
pop
andps
cmp
xor
dec
fs
jge
add
leave
outsb
je
mov
in
cwtl
xchg
sub
push
cmpsb
mov
mov
xlat
in
lods
test
dec
add
cmp
jecxz
pop
sbb
xlat
js
jle
mov
fxch
into
jno
sub
cmp
aad
je
pushf
xchg
jmp
cmpsb
test
jmp
and
fildl
test
xor
repnz
xor
jbe
andb
dec
iret
xor
push
ds
test
fadd
inc
lahf
loope
fcomps
adc
adc
scas
push
das
outsl
mov
pop
mov
pop
dec
icebp
adc
lds
loopne
pushf
in
into
sbb
int
scas
pushf
lahf
shlb
push
xchg
xchg
pushf
outsl
addr16
movsb
jp
stc
adc
mov
adc
mov
lock
dec
sarb
rcrl
sub
int3
xchg
cmp
jo
push
in
popf
mov
cmpl
jmp
xchg
fists
dec
dec
xchg
mov
scas
add
bound
xor
shlb
fdiv
mov
adc
mov
ja
out
into
lods
pop
clc
xor
jno
xchg
push
xchg
pop
leave
sar
xlat
and
roll
rorb
rclb
test
xchg
pop
out
or
lcall
mov
scas
pop
pop
add
movsl
fcmovnu
sbb
lret
mov
cwtl
movsl
and
cmp
into
or
adc
sbb
test
mov
into
jo
arpl
xchg
inc
fistl
iret
fsub
insl
pop
icebp
sbb
inc
fs
and
lret
inc
aaa
push
je
pop
lock
xor
pushf
cmpsb
sub
add
jmp
cmp
mov
push
mov
xchg
xor
pop
imul
clc
sbb
adc
mov
jo
in
movsb
or
add
jnp
adc
btc
xchg
test
loop
js
clc
and
in
push
add
cli
dec
adc
gs
pop
rcrb
pop
add
cwtl
xor
loop
popf
push
push
dec
add
bound
lret
mov
decb
push
lods
addl
sbb
nop
das
cmc
or
rorb
cld
or
add
scas
push
xchg
stc
out
daa
popf
sbbl
push
je
andl
push
mov
dec
xor
mov
push
xlat
pop
orb
hlt
jno
loopne
add
adc
scas
add
jns
sbb
mov
pop
mov
xor
packuswb
insb
xchg
shrl
lahf
add
xchg
adcb
add
aaa
cmp
push
push
lods
pop
push
cli
mov
inc
adc
in
cli
gs
nop
aad
sub
bound
sub
jae
movl
int3
add
adc
pextrw
arpl
sub
jmp
or
dec
mov
dec
sti
bound
and
xchg
fidivrs
ljmp
or
xor
std
gs
cmp
xor
insl
icebp
push
jno
pop
pop
lcall
popf
lds
subl
icebp
scas
imul
pop
daa
movsl
movsb
sub
adc
dec
pcmpeqb
and
sbb
push
out
jl
repz
xor
movsl
into
cld
adc
push
push
fsubrp
lods
stos
in
incl
jmp
call
cmp
jo
cmp
out
cmp
cld
xor
mov
mov
call
pop
xchg
jo
cmp
nop
adc
xlat
pop
shr
push
enter
jl
pop
mov
ficompl
call
xchg
sbb
inc
or
sbb
sub
inc
jne
adc
in
xchg
cltd
jp
adc
mov
push
jmp
iret
lods
fwait
ss
inc
add
arpl
mov
xor
or
addb
jae
out
rcl
mov
push
xchg
orb
mov
push
mov
hlt
call
in
pop
stos
jp
bound
leave
xlat
pop
push
push
sbb
icebp
or
in
fwait
jae
cmp
pusha
fs
dec
fstp
lret
sbb
fisubl
inc
out
imul
mov
pop
cwtl
xor
fnstsw
and
lods
mov
dec
xchg
clc
stos
clc
pop
and
stc
push
outsl
out
push
mov
ljmp
je
js
dec
mov
movsb
pop
loopne
inc
enter
ja
or
xchg
cld
and
sahf
ret
out
push
mov
cmp
andb
mov
psrad
xchg
jb
jno
mov
pop
adcl
cwtl
inc
popf
push
xchg
and
push
push
repnz
sub
mov
out
test
xchg
pusha
aaa
cmpsl
xchg
outsb
and
and
cli
inc
dec
jl
and
sbb
in
jl
shlb
cmp
mov
xbegin
sub
mov
and
push
jbe
mov
fimuls
and
mul
jns
fisubrl
popf
jmp
lea
les
mov
and
mov
xchg
dec
push
mov
movsl
sahf
lret
push
mov
test
lea
jp
cmp
xor
jns
add
insb
add
loope
sbbb
mov
mov
fdivrs
add
jnp
dec
cmp
push
cltd
rcrl
popa
push
cwtl
andb
and
mov
push
and
jl
mov
cmpsl
inc
push
nop
nop
push
call
leave
cmp
add
mov
xchg
dec
lcall
inc
xchg
dec
dec
pop
lcall
mov
and
and
xchg
jb
sbb
jecxz
imul
inc
fwait
dec
xchg
sub
pop
or
out
std
sbb
pop
pop
and
mov
repz
and
arpl
xor
push
scas
das
mov
sub
mov
push
jecxz
adc
cmp
xchg
fiaddl
adc
ret
jl
pop
or
or
loope
dec
sbb
rep
cwtl
jb
mov
mov
mov
data16
sbb
mov
add
test
mov
test
les
bound
adcb
mov
xlat
sbb
push
push
sbb
hlt
push
push
xchg
cmp
adc
pop
hlt
daa
lret
mov
pusha
add
fdivrl
cmp
add
or
sub
xchg
or
repz
add
xchg
loop
inc
adc
outsl
mov
mov
arpl
cmpsl
scas
insl
push
dec
or
cmp
xchg
dec
xor
in
jnp
cld
pop
jle
jecxz
dec
xor
and
rcrl
lahf
fwait
les
gs
mov
loop
xor
jno
jg
into
rclb
xor
ja
popf
imul
fs
jns
mov
out
mov
pushf
adc
in
pop
out
lahf
scas
jle
sub
sbb
icebp
jmp
jb
nop
jl
xchg
and
cmp
push
movsb
sbb
and
add
sub
or
mov
jle
cs
mov
dec
int3
lcall
add
daa
jp
shrb
cltd
xor
dec
inc
add
gs
sbb
sbb
pop
pop
sbb
mov
add
test
leave
andb
xor
ja
sub
dec
pop
or
scas
mov
mov
pop
in
jmp
push
inc
sar
jae
in
sbb
or
pop
das
out
hlt
inc
inc
stos
adc
sti
inc
cmpsb
mov
cltd
nop
stos
pusha
pop
push
mov
insb
fidivrl
lret
or
lcall
mov
fimuls
testl
dec
mov
inc
adc
lods
pop
jne
test
je
loope
cmp
mov
mov
clc
dec
scas
inc
bound
jo
and
cli
stc
hlt
xchg
jl
test
mov
cmp
pop
pusha
sbb
out
leave
sarl
pusha
loopne
add
and
dec
jge
repz
sub
nop
call
jmp
outsb
mov
cwtl
arpl
cmp
outsb
xor
jbe
xchg
sbb
ret
mov
cmpsl
xor
pop
icebp
dec
out
arpl
sbb
in
jae
in
push
insl
lret
movsl
popf
outsl
in
mov
mov
push
xchg
and
imull
andb
cld
pop
adc
mov
and
mov
fsts
jns
cmp
pop
mov
cmp
mov
sub
xlat
push
aad
inc
jb
jae
jb
mov
repnz
or
insb
jmp
aas
xchg
jecxz
inc
or
addr16
mov
fdivs
jg
ss
adc
mov
xor
fisubrs
xchg
mov
fisubrs
xchg
repz
mov
repz
lea
in
ljmp
shlb
mov
pusha
scas
jg
shl
out
adc
rcl
or
mov
mov
in
and
cmp
jns
ljmp
mov
aaa
and
sub
sbb
sti
jno
jle
xchg
sbb
std
add
add
loope
or
push
sti
mov
xorl
aas
adc
sub
cmpl
fiaddl
repz
xor
mov
cmp
repz
sar
jmp
cmpsl
es
sub
inc
dec
xchg
and
mov
sub
ss
mov
dec
mov
rcl
test
daa
hlt
inc
js
lret
test
dec
and
scas
dec
inc
incb
xor
sbb
ljmp
push
fstl
in
xor
out
mov
notl
pop
ljmp
data16
pop
mov
lret
jge
adc
or
sti
es
aam
push
jbe
int
jne
xchg
push
or
lahf
push
cltd
sub
out
xor
xorl
mov
ljmp
cmc
in
jno
mov
aas
adc
pop
jo
ds
in
pop
xchg
rclb
mov
mov
sub
fldenv
addr16
insb
jae
popa
sub
sub
scas
push
adc
push
fdiv
mov
cmp
daa
call
pop
mov
and
jl
mov
sub
push
jnp
push
push
pop
mov
xchg
jb
cmp
cli
in
jnp
add
sbb
inc
jge
xor
mov
das
fsubrs
xor
sbb
inc
jo
dec
push
int
idivl
fmuls
xchg
ret
pop
dec
sub
insb
in
jne
es
and
imul
cmp
mov
or
push
adc
mov
daa
fiaddl
or
ret
sbb
xchg
in
inc
sub
lds
cs
or
sub
inc
pop
sub
fldt
mov
incl
push
insl
rcll
lret
das
pop
jns
cwtl
mov
or
xchg
in
sahf
mov
nop
push
ds
mov
pop
out
jae
pusha
lcall
pop
cmpsb
add
fists
and
adc
and
sub
mov
lahf
xor
cltd
inc
mov
adc
jmp
in
shr
lahf
fisttps
ljmp
sahf
sbb
mov
and
lret
outsb
xchg
out
call
not
test
popa
jae
mov
pop
push
loopne
aam
fcmovbe
xchg
inc
mov
scas
xchg
test
mov
cmpsl
sub
outsb
push
jg
out
push
into
push
sbb
flds
sahf
sbb
push
mov
int3
fst
frstor
fs
mov
call
icebp
inc
test
dec
jne
push
pop
or
into
js
lds
dec
int3
xor
in
out
stos
cmp
add
scas
inc
jb
jmp
xchg
ss
loop
int
adc
jno
in
aad
fwait
jae
push
mov
sub
jno
or
adc
int
dec
mov
mov
inc
xchg
outsb
jg
addr16
pop
aad
les
sub
adc
cmc
fldt
or
mov
or
push
push
ret
shl
sbb
mov
xor
add
pop
movsb
push
cld
cmpb
movsl
xchg
outsb
push
ds
mov
inc
push
cmc
push
push
lea
inc
and
cmp
mov
dec
ret
notb
sub
mov
int
jo
mov
mov
movsb
mov
xchg
dec
test
jge
add
les
rcrl
sub
stos
push
push
cli
scas
sub
int3
or
mov
sub
jge
cmp
repnz
mov
add
cmp
pop
jl
mov
bound
into
push
cmp
fildl
and
ret
shl
xchg
adc
add
pusha
add
cmpsb
in
adc
sahf
in
sbb
hlt
fnstcw
das
js
repnz
jo
in
ss
xchg
sbb
int3
sub
cli
add
push
and
mov
in
mov
nop
inc
ds
sub
adc
adc
outsb
dec
insb
sbb
sub
shlb
lret
lods
push
inc
lock
testl
int
or
sbb
dec
or
cwtl
js
sub
fldenv
stc
jae
scas
sbb
cmp
jmp
inc
std
dec
pop
mov
ss
cmp
xorl
push
shl
xor
sub
push
jb
jne
scas
push
inc
mov
mov
xor
fidivl
and
sti
test
xlat
add
stos
cmovle
xchg
es
pop
ljmp
pop
sbb
sub
or
dec
leave
mov
mov
xor
pushf
mov
leave
test
in
loopne
lds
dec
or
ficompl
int3
lahf
mov
pop
rcrl
xor
and
sbb
adc
adc
mov
incb
jne
aaa
sub
mov
mov
loope
fs
cld
popf
nop
mov
adcb
mov
aam
daa
mov
insb
shr
ret
outsb
pop
push
jb
mov
daa
aaa
pop
ljmp
mov
outsl
fs
add
pop
repz
imul
pop
add
pop
push
mov
adc
test
out
mulb
dec
push
jg
sub
jno
je
loop
shll
xor
cmp
jmp
pop
mov
adc
sub
popf
sahf
mov
test
push
leave
add
cmp
inc
pusha
sbb
clc
ds
fadd
popf
lcall
cmp
dec
mov
icebp
jp
jmp
dec
fwait
push
rcr
mov
jnp
pcmpgtb
cmp
enter
xor
scas
insl
or
pop
out
adc
jl
jo
or
add
scas
mov
pop
sub
and
fnstenv
mov
popf
pop
cli
adc
jno
out
arpl
fists
lahf
int3
pushf
enter
or
nop
inc
mov
pop
int3
stos
push
jno
pop
fnstenv
jb
ljmp
ror
push
inc
shl
arpl
stos
mov
mov
push
scas
jl
lods
arpl
out
xchg
sub
fimuls
push
jecxz
lret
jecxz
loop
popl
inc
jg
cmpsb
lcall
xchg
stos
jnp
popf
addr16
pop
arpl
push
add
jns
cmpsl
mov
fistpll
dec
leave
addr16
cmp
pop
and
pop
xor
out
dec
ss
mov
loopne
in
in
xchg
jge
aam
lcall
or
cmpsl
je
test
rcrb
mov
dec
mov
or
data16
lods
lock
shl
pop
fidivs
adc
mov
mov
dec
iret
push
adc
mov
test
add
movsb
mov
jmp
mov
jae
inc
mov
imul
shrl
sbb
inc
ret
ret
xorl
cmpsl
imul
insb
pop
jmp
cwtl
fisttps
aad
shll
or
sti
mov
mov
dec
cmpsb
xor
dec
daa
popa
mov
mov
sti
inc
aam
int3
mov
fdivrl
dec
int3
das
clc
int3
imul
adc
sbb
cmp
pop
nop
lret
adc
xor
daa
bound
xor
or
pop
ss
fisubl
fisubrs
aam
push
cwtl
sbb
mov
or
mov
dec
movsb
inc
push
and
inc
mov
fisttpll
and
aaa
pop
enter
movsb
cmp
push
imul
jle
aad
into
push
jae
adc
je
sub
paddq
divb
or
out
mov
xchg
push
outsl
push
mov
xchg
lret
in
push
outsb
fstps
stos
xchg
push
nop
test
sub
addl
adc
mov
test
lds
call
idivb
or
push
into
xchg
int
and
je
jecxz
cmpsl
loopnew
jo
cmp
out
xor
arpl
ret
inc
jl
cli
xchg
stos
and
jecxz
lahf
cmp
stos
xchg
xlat
mov
push
ja
or
xchg
dec
inc
and
mov
jne
push
ret
inc
aas
xchg
movsl
test
imulb
sbb
xor
pop
xor
dec
mov
adc
ds
cmp
or
sbb
loope
xchg
mov
js
fwait
and
pop
fs
test
jp
add
lcall
cmp
out
lahf
jl
adc
inc
or
faddp
sub
jne
cltd
dec
mov
pop
pop
and
inc
cmp
ret
push
ret
into
xchg
sbb
lds
add
insl
arpl
xor
fwait
or
sbb
mov
mov
jo
mov
in
movsl
nop
das
rol
inc
je
sub
or
push
mov
and
sbb
pop
ss
xchg
std
xor
data16
dec
push
add
nop
or
loope
push
cs
lret
mov
les
mov
repz
lds
mov
cmpb
bnd
aaa
push
fsubrp
shll
into
cmp
inc
dec
cmc
push
xchg
inc
std
aas
cmpsl
cs
lret
sub
jle
xor
idivl
fldenv
addr16
insl
imul
mov
dec
add
add
in
in
jecxz
fdivrs
mov
pop
aam
movsb
mov
xor
push
aas
pop
nop
ss
sbbl
xchg
movsl
jbe
enter
xor
mov
mov
mov
loope
test
fs
pushf
loop
jae
sbb
jae
scas
adc
clc
jg
lret
inc
dec
adc
test
ret
in
into
lods
imul
jg
add
mov
xchg
jne
bswap
add
mov
mov
aas
mov
push
jge
xchg
es
xor
nop
ficompl
dec
loope
or
into
sahf
inc
ja
popa
aam
das
cmp
inc
jb
push
mov
xor
inc
jecxz
dec
std
or
add
rolb
xor
in
jecxz
push
mov
mov
or
push
jl
push
outsb
scas
icebp
push
outsl
clc
out
mov
mov
dec
xor
pop
xor
je
xor
sahf
cmp
add
mov
cli
xchg
jge
das
push
cmp
jne
movsl
inc
pushf
inc
mov
pushf
cmp
jl
aas
jge
insl
ljmp
mov
and
popa
push
inc
test
sub
or
pop
fistps
add
test
les
aaa
testb
sbb
in
outsl
or
or
sbb
pop
test
mov
fucom
add
mov
push
mov
mov
cld
inc
mov
iret
mov
push
lret
mov
pop
mov
movsb
bound
sbb
mov
dec
mov
lea
aaa
and
mov
mov
jmp
xchg
in
mov
push
rorl
out
adc
std
inc
negb
je
jno
in
jle
and
clc
ret
stos
pop
cmpsb
cli
aas
xchg
out
dec
movsl
mov
mov
mov
add
sbb
insl
jmp
mov
fdivrl
xchg
xchg
stos
jecxz
icebp
leave
adc
pop
jne
test
dec
mov
insb
xor
push
jo
fwait
xlat
popf
loope
xor
pop
daa
push
xchg
fldcw
inc
sbb
stc
shl
int
shrl
cmp
mov
inc
fisubrl
hlt
out
loopne
jp
fwait
mov
mov
loope
xor
mov
lcall
push
daa
jecxz
jne
mov
add
mov
cmp
pop
sbb
sub
loopne
sbb
inc
or
movsl
jns
clc
pop
xchg
cwtl
and
cld
subb
movsl
jae
jle
pusha
mov
mov
cmp
stos
es
jne
mov
sahf
add
rolb
mov
cmp
es
bound
lret
std
inc
cmp
outsb
ss
dec
mov
add
pusha
fnstsw
xchg
mov
shl
aad
out
cmp
xchg
movsl
nop
jg
insl
fmuls
cltd
jnp
dec
xchg
add
mov
daa
and
push
int
xchg
outsl
push
pop
lcall
sarl
fistpll
aas
push
shlb
xchg
xchg
mov
test
adc
cmp
add
scas
rcrb
loopne
sub
xchg
sbb
push
add
push
push
mov
mov
inc
xchg
pop
cmp
popa
jle
repnz
adc
imul
stc
xor
xlat
fimull
ret
lret
ficompl
add
mov
cmp
mov
dec
imulb
aam
rclb
and
fsts
mov
inc
pushf
and
jl
in
jae
inc
je
dec
hlt
add
or
sbb
pop
lret
loop
dec
mov
sbb
insb
fisubrl
sbb
cmc
and
imul
xchg
das
push
inc
cmp
daa
fdivrl
or
test
mov
int
dec
push
popa
or
inc
sahf
aad
stc
es
mov
int3
incb
adc
inc
fwait
dec
sbb
jno
fadds
push
fbld
pop
leave
adc
or
jbe
lds
dec
sahf
cmpsl
push
cld
mov
icebp
lods
adc
pop
bnd
jae
int3
repz
scas
into
mov
add
inc
adc
push
outsl
mov
xor
mov
loope
outsb
push
pop
or
pop
adc
mov
sti
test
or
mov
jbe
outsl
dec
xor
sub
pop
icebp
or
pop
jmp
mov
sbb
push
repnz
sub
push
jge
pop
xchg
add
mov
cmp
sub
lcall
je
inc
imul
inc
xchg
or
push
pop
mov
fsubrs
ret
mov
dec
and
fdivs
pop
call
jl
jae
or
jne
mov
mov
dec
insb
adc
xor
shll
xor
jle
cmp
ja
dec
ret
stos
insb
sbb
sbb
push
test
pop
std
jnp
test
push
testl
pop
out
add
lahf
pop
int3
mov
sbb
inc
xchg
sub
test
f2xm1
mov
in
jne
dec
in
movhps
test
das
push
lock
mov
js
in
test
out
xchg
lcall
mov
add
pop
call
test
into
test
sbb
mov
ja
clc
popa
xor
mov
ljmp
xor
adc
sub
xchg
xchg
cmpsl
jle
push
jo
pop
imul
in
pop
lods
pop
sbb
jns
cmp
dec
mov
cs
jecxz
adc
test
xor
nop
lods
lods
cmp
push
push
not
jp
adcl
inc
dec
das
adc
sbb
sbb
fildl
adc
cli
leave
jmp
aas
sub
or
pop
push
mov
testl
aas
sub
popf
popa
lret
and
dec
cmp
inc
sbb
or
cwtl
mov
jbe
scas
loopne,pn
arpl
lods
add
mov
xor
ret
adc
andl
popa
mov
cmp
insl
aas
fdecstp
or
icebp
xor
ljmp
mov
cld
inc
fildl
lods
insb
cmp
out
sbb
test
mov
lret
pop
movsl
scas
push
pop
shll
andb
sti
and
mov
rcrl
lods
or
clc
inc
ss
gs
std
enter
dec
xor
out
outsl
sbb
pop
dec
dec
xchg
pop
inc
push
jne
scas
mov
lock
pop
xchg
dec
pop
and
mov
inc
add
mov
jecxz
pop
mov
outsb
jo
mov
imul
add
loop
xchg
jbe
xor
sub
add
fisubrs
inc
xchg
sub
sub
dec
pop
adc
xor
frstor
add
or
imul
xor
mov
scas
jno
sub
test
bound
clc
xor
inc
icebp
xchg
push
xchg
lea
clc
lea
inc
sarb
dec
mov
add
aas
adc
push
mov
mov
into
notb
dec
fmuls
leave
jl
and
mov
lods
in
push
les
xchg
pop
push
dec
stos
xchg
pop
cmp
add
shl
inc
inc
mov
jb
int
mov
loopne
adc
repnz
pop
adc
adc
push
and
adc
mov
stos
ret
es
or
adc
mov
out
dec
stos
sub
nop
mov
xchg
jno
add
out
mov
mov
or
inc
ljmp
arpl
jle
or
jecxz
lds
jle
inc
adc
sbb
ja
inc
push
pop
inc
jno
mov
lcall
cmp
or
lret
mov
add
pop
inc
sub
jbe
stc
stos
inc
sub
ds
je
xorl
mov
dec
sbb
push
inc
daa
mov
decl
lret
scas
in
or
xchg
repz
ljmp
wrmsr
pop
es
fwait
dec
or
std
into
sarl
xchg
fadds
xchg
add
dec
movsb
pop
mov
and
mov
push
cmpsb
dec
or
inc
jbe
mov
xchg
fs
pop
xor
ret
std
clc
ss
dec
mov
pop
xor
loop
lahf
stos
imulb
adc
xor
mov
ss
ret
push
jnp
mov
xor
adc
inc
inc
pop
lock
push
test
adc
cmpsl
setae
out
test
jo
and
push
mov
mov
mov
cs
cmpsl
mov
imul
repnz
test
lds
sarl
out
push
sti
mov
push
test
dec
and
xor
and
loop
cwtl
movsb
loop
sbb
adc
sub
int
sbb
je
jae
inc
jns
adc
adc
mov
es
mov
setl
out
mov
jle
mov
jo
sti
ret
iret
push
pop
jb
push
int3
push
mov
inc
out
lds
ret
or
scas
lahf
test
push
xor
push
sbb
or
scas
lcall
jp
push
std
movsb
adc
sbb
jl
mov
add
mov
and
in
lahf
xchg
fidivrl
outsl
sahf
mov
add
in
adc
das
cmp
jl
mov
mov
jg
fmuls
pop
cwtl
es
jo
dec
jne
loopne
jmp
stos
hlt
push
fwait
jg
push
das
test
adc
mov
pop
jmp
mov
jne
jne
ret
pop
jb
andb
scas
ja
adc
mov
pop
xchg
popf
int3
mov
pop
lods
cmp
pop
cmp
pop
jge
mov
pop
scas
sbb
push
inc
mov
setne
inc
out
xchg
xor
pop
mov
loop
dec
lds
leave
leave
push
push
push
sub
xchg
les
pop
incb
insb
mov
sub
int
add
aaa
cli
add
scas
jo
mov
movl
push
jg
roll
aad
push
mov
rol
fidivl
sbbb
and
pusha
popf
sbb
xchg
sti
cmp
mov
mov
in
xor
mov
insb
mov
je
inc
push
adc
or
mov
fwait
popf
add
or
inc
dec
lahf
pop
pop
mov
xchg
insb
out
mov
sub
adc
int3
clc
xor
cld
orl
mov
enter
xlat
fnstsw
enter
stos
leave
inc
mov
out
push
add
xchg
test
lods
sub
dec
fs
push
stc
sub
pop
divb
cmp
ret
ret
fstp
pop
int
xor
popf
pop
xchg
mov
add
in
sbb
mov
je
pop
adc
cmp
push
addr16
loope
dec
sbbl
mov
je
mov
push
add
into
xchg
mov
mov
cmpsl
xchg
adc
inc
call
cmp
clc
xor
subb
mov
add
xor
aam
nop
clc
pop
jns
xchg
mov
xor
out
cld
outsl
dec
fdivs
stc
out
ja
lds
cmp
dec
icebp
icebp
mov
jp
cmp
xchg
insl
in
dec
xchg
arpl
hlt
jb
lcall
push
xchg
pop
cmp
cmove
outsl
sub
loopne
stos
lods
pop
mov
out
pop
ja
inc
inc
push
mov
leave
mov
in
cmp
lahf
or
jge
sbbb
mov
lods
lahf
push
push
in
in
jno
jle
inc
rcrb
xor
cmpsl
daa
iret
out
adc
cld
xchg
jecxz
pop
ljmp
mov
gs
pusha
fstpt
popf
lcall
cli
mov
addr16
pop
mov
addr16
and
jb
push
inc
mov
cltd
lcall
mov
push
pop
outsb
fistpl
jg
mov
mov
mov
fidivs
push
pop
push
push
cwtl
add
add
push
or
fcoml
nop
in
sub
xchg
aam
xchg
cmp
lods
xchg
cmpsb
sub
lods
or
xchg
das
push
cmp
mov
mov
xor
rorl
gs
cmpsb
jbe
xlat
mov
pusha
ror
push
and
and
andl
pop
jge
sahf
or
and
or
pop
cld
jge
cmp
mulb
int
and
imul
out
popa
xor
loope
mov
in
xchg
push
cltd
mov
scas
mov
into
and
sbb
test
gs
lods
ja
sub
out
lock
or
testb
add
jno
in
ror
dec
pop
sti
daa
jp
add
push
cli
imul
mov
push
int3
push
cmp
push
cmpsl
adc
loopne
lea
in
insb
mov
xchg
shlb
dec
hlt
fldl2e
xchg
xchg
notb
fwait
aad
sti
ficoml
mov
int
push
stc
jo
push
subl
cltd
or
rcl
test
fdivl
pop
stos
fwait
in
leave
pop
and
outsl
rolb
es
or
dec
pop
mov
stc
rcl
jns
add
jb
pop
je
out
sbb
pop
in
jb
pop
ret
out
inc
leave
subl
fstps
fwait
in
push
fdivrl
sahf
xchg
aaa
negl
push
xchg
mov
movsl
sub
test
cmp
movsl
adc
data16
jo
mov
dec
leave
lods
inc
mov
sbbb
dec
jl
mov
and
test
xor
faddl
dec
test
cltd
cmp
addr16
nopl
sbb
sub
bound
fisubs
xchg
push
lret
nop
mov
mov
jmp
push
mov
and
shl
pop
scas
xchg
cmp
inc
push
pop
lahf
das
out
inc
aad
out
cmc
add
pushf
xchg
adc
jp
cmp
push
mov
ljmp
iret
inc
dec
jnp
xor
pop
mov
and
pusha
cmp
pop
lods
cmp
mov
mov
dec
out
sbb
jne
push
push
dec
push
pop
in
sarb
lahf
mul
je
int
mov
cmp
adc
or
adc
int
dec
jne
mov
sbb
in
out
sub
push
adc
arpl
jb
jne
mov
out
inc
and
jnp
mov
cmpsl
test
pop
cs
dec
lahf
enter
sbb
sub
push
adc
xor
dec
push
jbe
out
jmp
push
push
jge
sbb
mov
cmp
daa
inc
push
stos
addr16
pop
cmp
sub
cmp
xor
mov
jmp
jge
ds
cwtl
pop
and
mov
orl
das
aam
pop
cmpl
lods
pop
xchg
inc
jae
add
jb
push
sbb
repz
push
iret
pop
repnz
and
or
sub
fimuls
repz
daa
cmc
hlt
xchg
sbb
leave
xchg
out
xor
pop
out
je
mov
int3
outsb
sbb
aam
popf
insb
fmull
pop
mov
fs
and
in
sbb
addr16
inc
xor
push
js
lds
jg
test
sahf
jno
pop
ja
jns
fcmovnbe
dec
or
pop
je
sub
xor
inc
add
mov
mov
inc
cli
test
dec
loopnew
inc
push
and
icebp
push
js
cmp
fstpt
notb
xchg
out
adc
movsb
fildll
jne
cld
insl
sbb
cmp
in
fwait
mov
daa
ljmp
out
je
or
cltd
lods
cmp
lds
fsubs
push
rolb
scas
push
pop
lea
imul
fisttpll
pusha
mov
fwait
inc
in
jmp
push
push
sub
mov
dec
fs
outsb
into
call
adc
rorb
or
xor
mov
push
mov
xchg
push
cmp
jne
cmpsb
or
mov
cmpsb
push
inc
cmp
lods
mov
call
xchg
aas
cld
push
fdivs
mov
sbb
add
jbe
jnp
xchg
repnz
and
xlat
inc
in
fldt
out
idivb
cmc
mov
stos
and
cmp
les
mov
or
daa
add
push
pop
test
vcomisd
cmp
push
jns
lret
pop
popf
pop
in
push
lret
leave
lock
jo
cwtl
mov
xor
push
mov
mov
daa
sub
ljmp
das
mov
imul
sarb
xchg
add
notl
push
outsb
jg
imul
mov
popf
pop
out
pop
rcrb
jne
cmp
cmp
dec
xor
sbb
cmc
ds
mov
daa
adc
xor
xchg
add
shl
xor
jg
xchg
and
fdiv
js
push
repnz
jno
and
stos
add
loopne
cmp
xchg
test
jo
dec
pop
sbb
cld
xchg
jo
popa
mov
jae
and
in
mov
cltd
pop
mov
mov
pushf
push
add
js
lea
cmp
push
scas
mov
sti
mov
jg
and
pop
gs
stos
mov
arpl
or
lods
fldt
aas
cmovp
add
es
pop
and
lahf
inc
xor
outsb
pop
rcrb
sbb
clc
and
mov
outsb
loope
push
scas
mov
dec
pop
lret
and
repz
push
jo
roll
jo
movsb
sub
push
iret
inc
cmpsb
cmpsb
cmp
cs
into
inc
adc
ljmp
ss
fidivl
inc
test
lods
fiadds
cmp
iret
push
or
pop
popf
sbb
aad
cltd
test
and
inc
mov
rcr
das
and
mov
pop
mov
xor
aad
aaa
sub
add
out
xor
insb
test
addr16
pushf
fcoml
pop
xchg
pushf
xchg
adc
movb
mov
es
add
cwtl
push
sub
sub
sbb
xchg
xor
mov
jmp
and
and
cmpsl
lea
pop
adc
lcall
mov
mov
pop
daa
and
inc
mov
adc
or
push
jno
jno
out
mov
or
dec
test
inc
xor
sbb
mov
pusha
aam
out
mov
xlat
xchg
xchg
loope
fwait
test
and
push
mov
push
iret
push
jg
sarl
and
jl
xlat
push
test
pusha
js
sbb
in
jno
jecxz
xor
sub
test
jbe
imul
pop
rolb
sub
gs
xchg
push
into
sarl
cs
sbb
outsb
dec
movsl
in
loop
xor
cmp
push
outsl
shlb
push
push
scas
aas
cmpl
xchg
inc
pop
aaa
cs
xchg
addr16
out
inc
add
out
mov
notb
jb
pop
adc
jge
out
clc
pop
shr
jp
pop
test
push
das
or
mov
clc
gs
jg
aaa
pop
pop
sub
and
ss
xor
sub
inc
lods
sub
add
out
fistl
lcall
xor
mov
dec
sahf
shrl
add
or
leave
jne
test
sbb
in
xor
popa
push
dec
xor
in
loop
test
mov
dec
add
xor
xchg
fiadds
mov
sub
adc
out
add
push
xorb
leave
xor
test
sub
cmpsb
inc
fiadds
sbb
in
inc
insb
out
dec
mov
jecxz
imul
xchg
xchg
inc
cld
lret
cmpsl
faddl
into
cmp
shlb
aad
scas
xlat
mov
mov
sub
and
cmc
cmp
dec
xchg
addl
mov
fcmovnu
jno
cmpsl
sbb
imull
repnz
lcall
insb
lret
ret
jp
lea
sbb
mov
sarl
lock
mov
hlt
xchg
add
addr16
push
orl
fstps
mov
pusha
scas
xor
shr
rcrl
mov
ds
in
push
lds
jge
bound
and
mov
aas
hlt
jecxz
xchg
push
lea
int3
mov
cmp
mov
aaa
jge
mov
dec
clc
dec
and
mov
lods
jmp
sbb
fwait
scas
mov
inc
stc
jl
lea
or
push
xchg
or
sub
add
pcmpeqb
sti
fidivl
mov
xchg
adc
loope
gs
out
inc
cwtl
pusha
and
mov
add
mov
sbb
adc
pop
jle
fwait
nop
mov
sti
adc
pop
cld
cmovno
xor
and
scas
imul
sub
pop
inc
gs
fstpl
fsub
sahf
out
clc
out
add
cmp
mov
xor
sahf
jmp
pop
fbstp
push
mov
insl
push
mov
lret
inc
mov
sub
es
popf
lcall
adc
lods
sub
mov
xor
inc
pop
add
div
popa
je
xor
cs
in
xchg
popa
sub
push
sbb
repnz
dec
mov
icebp
cmpsb
hlt
mov
or
ret
mov
push
mov
adc
sub
lea
movsl
imul
xchg
add
adc
dec
pop
in
dec
lock
dec
out
outsb
mov
inc
add
adc
adc
jge
rol
xchg
mov
and
mov
xor
addr16
lcall
lcall
mov
jg
cltd
adc
jmp
pop
adc
and
ss
dec
imul
mov
mov
xchg
lcall
outsl
cli
stos
stc
add
dec
nop
pop
jnp
repnz
jp
inc
mov
mov
jns
sahf
fnstenv
leave
jnp
xlat
push
cmc
aaa
or
daa
test
insl
hlt
mov
lods
mov
pop
cmp
sub
adc
push
fcmovne
xchg
ja
xchg
cld
fcompl
xchg
pop
popf
jp
lock
cmp
or
jb
mov
popf
sub
out
inc
lods
push
cmp
roll
xchg
gs
shrl
into
pop
test
pop
mov
loopne
sub
sub
jl
cmc
mov
pop
and
mov
push
loop
insl
jmp
xchg
js
mov
and
mov
pop
mov
push
cltd
sar
xchg
in
sub
push
dec
popf
push
push
in
add
jg
xchg
mov
xchg
mov
mov
ret
mov
xor
or
mov
ja
mov
lret
xchg
bound
sbb
pop
mov
sbb
lret
mov
cs
lds
jno
out
sub
push
or
xor
jl
push
add
push
popa
inc
push
mov
jle
sti
xchg
push
dec
dec
inc
test
pop
movsl
push
sti
fstpt
pop
iret
cmp
mov
push
lcall
fdivrs
outsb
rclb
push
loop
cmpsb
cltd
jne
xor
cld
sbb
and
pop
aas
cmc
movsl
jo
mov
add
sbb
xchg
mov
leave
jmp
xchg
mov
out
fimull
add
cld
icebp
out
in
jns
add
xlat
xor
push
scas
es
and
add
push
rcll
sub
mov
cmc
test
push
pop
mov
leave
aam
sub
push
fsubs
xor
and
xor
out
out
and
mov
cltd
push
pop
aam
movsb
inc
add
and
xchg
cli
in
int
push
js
lahf
fstpt
add
pop
mov
addr16
insb
testb
fnstsw
jns
fwait
repnz
mov
scas
xchg
cli
pop
mov
push
add
push
sbb
out
fwait
sbb
or
xlat
enter
test
call
inc
fprem
adc
mov
sbb
xchg
je
test
mov
xchg
fs
inc
mov
or
or
rorb
sub
mov
fidivrl
iret
popa
mov
inc
sbb
jg
pusha
dec
push
stos
jbe
push
data16
jg
or
arpl
mov
daa
movsb
mov
jns
xchg
pop
pusha
les
mov
xor
cmp
outsb
das
xor
push
cmp
xchg
push
push
cmp
push
cmp
into
hlt
movsl
cwtl
dec
out
leave
fsub
ss
outsl
ret
rorl
add
sub
shll
push
loope
repnz
jo
xchg
sbb
rorl
push
mov
pop
in
push
jle
mulb
rclb
push
es
add
sub
or
lds
movsb
xor
fwait
int3
jb
std
mov
xchg
cmpsb
mov
test
stos
adc
inc
mov
mov
test
jecxz
pop
sub
and
insl
adc
cwtl
add
xchg
push
in
jp
hlt
dec
loop
sti
sbb
sub
rclb
dec
fistl
push
pop
loop
bswap
jge
mov
xor
call
push
xor
fcomi
xchg
pop
sti
xlat
inc
lock
rolb
mov
mov
shlb
lret
outsl
cmp
test
fwait
xor
mov
leave
push
aaa
outsb
ret
and
mov
xor
data16
sub
es
insl
cmpsl
jae
mov
mul
cld
outsl
cmove
xchg
add
cmpl
stos
cmp
mov
stc
sbb
xor
mov
shr
jmp
fcomps
ficoml
xchg
test
scas
shlb
jb
mov
pop
jmp
mov
pop
and
incb
xorl
adc
push
nop
jge
mov
lock
outsl
xor
pop
hlt
aad
jae
xchg
xor
sub
jg
scas
imul
and
ficoms
push
in
inc
lret
push
in
lcall
int
jns
xchg
dec
imul
add
mov
pop
aaa
std
loop
xchg
sub
test
out
and
mov
outsb
pop
add
sub
push
inc
pop
add
xchg
pop
mov
test
inc
cmp
jno
push
xor
mov
fcmovnbe
jmp
ss
pop
or
cmc
adcb
popa
sub
and
adc
lock
into
in
sarl
pop
xor
movsl
cltd
mov
cmpsb
mov
mov
loope
sub
jb
in
push
fisttps
push
loopne
loopne
pop
addl
and
repz
cmp
leave
pop
mov
nop
sub
and
adc
mov
gs
movsb
mov
and
xor
push
xor
mov
xchg
scas
push
and
adc
test
mov
mov
or
jl
test
jge
add
xchg
dec
jl
out
dec
mov
dec
sub
pusha
int3
in
xor
jge
pusha
push
stos
jb
movsb
lock
fildl
insb
mov
or
ja
mov
fstps
jmp
sub
js
fdivrs
pop
rcrb
jl
stos
adc
mov
sarb
mov
test
clc
cli
pop
xor
decb
mov
cwtl
cmp
enter
xorl
repz
and
sbb
shrl
ret
movsl
scas
stc
mov
arpl
and
adc
divb
adc
push
mov
call
xchg
push
cmpsb
fildl
mov
and
pop
movl
push
js
loope
push
test
sarl
fs
cmp
clc
mov
int
shlb
inc
fisttpl
jg
aam
inc
lcall
sahf
jecxz
push
mov
scas
jg
fcompl
and
cmpsl
adc
xchg
nop
iret
lret
icebp
add
aam
mov
aas
jge
pop
jp
cmc
xorb
mov
test
or
imulb
bound
mov
jbe
cmpsl
adc
mov
pop
mov
adc
pop
push
xchg
adc
mov
and
add
add
xor
jnp
add
icebp
or
cmp
popf
stc
jne
jmp
inc
stos
pop
test
xor
adc
lods
inc
and
in
cld
push
pop
lahf
or
pop
sahf
das
popa
mov
cs
movsb
outsl
mov
sub
mov
push
cwtl
insl
pop
insb
xor
out
adcb
push
or
stos
xchg
push
sbb
sti
add
inc
scas
cmp
or
sub
jb
push
jmp
sub
cli
pusha
icebp
push
in
pop
fwait
sbb
dec
cltd
aaa
mov
sub
xlat
push
es
mov
push
pop
stos
sbb
or
and
dec
fwait
test
mov
and
sbb
gs
test
pop
xor
jns
sti
imul
mov
xchg
scas
and
subb
adc
stos
ss
loope
pusha
xchg
dec
and
lods
pop
lahf
fnstenv
out
mov
out
xchg
jg
add
outsb
dec
lea
sub
ljmp
ljmp
or
mov
jp
push
sti
fmul
xor
mov
lret
je
lods
inc
mov
jns
mov
das
pusha
xchg
xor
sbb
push
mov
inc
sti
or
jmp
push
push
xor
push
ss
call
xchg
fbld
int3
out
mov
movsl
mov
cmp
jle
or
add
je
mov
pop
jno
mov
shl
xchg
pop
pop
scas
mov
jg
adc
and
xchg
out
punpcklwd
sub
sub
and
mov
pop
xor
mov
push
adc
sub
xor
inc
jae
shr
loopne
pop
inc
dec
scas
pop
sub
or
pop
insb
test
iret
inc
pop
rorl
mov
lcall
idiv
mov
shll
sbb
and
or
push
cmp
inc
lods
push
mov
xchg
cmp
ja
adc
ret
pushf
lods
jg
ljmp
pop
xor
push
jp
aaa
test
decl
mov
dec
and
ss
add
stc
mov
xor
xchg
fldt
and
into
and
xchg
jle
pop
outsb
insb
mov
cwtl
leave
xchg
loopne
mov
stos
sub
cmpsl
mov
xchg
cmp
push
jo
shlb
mov
push
fs
pop
lahf
loop
dec
sub
lods
shl
aas
inc
and
and
mov
sub
sub
dec
sub
and
jg
jge
push
cmp
ficompl
aaa
push
mov
push
pop
orl
xbegin
scas
dec
call
stc
xchg
sub
mov
movsl
xor
loop
or
int3
jb
pop
xchg
loope
sub
adc
xchg
jne
sub
push
orl
push
push
lods
xorb
popf
je
jne
dec
jmp
fistps
mov
gs
mov
mov
add
jo
pop
mov
push
and
std
fisttps
jle
dec
jg
mov
lcall
xchg
xor
in
add
mov
int3
xor
xor
xchg
mov
aad
aaa
cmpsb
and
sub
popf
gs
jb
shll
jne
cmc
cmp
loopne
sbb
and
stc
cmp
jge
dec
iret
xor
xchg
es
push
adc
cmpsl
jl
sti
stos
jge
pop
mov
cmp
gs
add
orl
push
lret
clc
loop
lods
cs
gs
cli
mulw
aad
xchg
call
mov
xchg
jmp
out
push
pop
popa
shll
mov
push
jecxz,pt
xchg
enter
sbb
sub
scas
out
int
js
jmp
xor
test
xchg
or
mov
xchg
adc
dec
pop
pushf
icebp
loopne,pt
xorl
sbb
and
or
and
lea
nop
push
mov
push
scas
scas
xchg
pop
test
cs
fcompl
insl
sbb
dec
lcall
sbb
xor
mov
xchg
test
in
mov
cmp
or
cmpsl
out
scas
jns
dec
sbb
inc
push
xor
in
cmpl
pop
mov
mov
mov
sahf
mov
js
mov
sub
xchg
mov
scas
push
mov
xchg
push
enter
mov
and
cmp
cmp
testl
sti
scas
in
in
xor
push
hlt
fidivrl
cmpsl
cs
fldl
push
in
dec
xor
fwait
xor
jl
inc
xor
push
push
inc
jne
decb
scas
adc
sbb
mov
mov
mov
pushf
js
int3
icebp
sarb
dec
inc
mov
into
xchg
adc
ljmp
mov
push
out
or
out
cwtl
enter
dec
mov
sbb
or
inc
add
notb
jbe
ljmp
push
push
mov
mov
cmp
and
pop
add
stos
jg
movsl
push
and
jl
aam
jo
outsl
enter
dec
xchg
sbb
jo
fwait
pop
testb
ffree
add
lcall
out
dec
std
mov
push
nop
jle
fs
pop
out
popf
or
add
mov
adc
movsb
mov
cmp
movsb
popf
addr16
adc
push
xor
cmp
aas
push
clc
jmp
dec
xor
xchg
hlt
add
xchg
lahf
add
or
outsb
jne
mov
adc
add
xchg
jb
add
push
dec
hlt
push
jno
xor
cmp
inc
pop
int3
ret
xchg
in
rorb
lret
xchg
cmpb
sbb
test
test
xchg
cwtl
out
cmpsb
mov
pop
cmp
push
cmp
aam
inc
dec
jnp
repnz
adc
jl
add
lret
pop
stc
je
mov
pop
loope
roll
es
adc
call
xor
push
std
cmp
jmp
in
stc
out
mov
mov
fwait
dec
js
mov
imul
pop
or
mov
and
test
fwait
xchg
push
mov
scas
pusha
dec
fcmovbe
aam
cli
push
es
add
jno
nop
xchg
movsl
inc
pop
fisubrl
sahf
nop
sub
fcmovnu
std
rorb
insb
mov
or
call
out
or
sub
test
sbb
push
pop
inc
and
jb
push
aad
stos
imul
inc
pop
dec
or
pop
xor
js
jle
and
pop
add
xor
hlt
pop
pushf
jb
cli
shrb
loop
and
mov
pop
xchg
jns
iret
mov
pushf
inc
push
add
xlat
into
cmpsl
js
daa
xchg
andl
enter
fisubrs
scas
push
ja
sub
inc
leave
inc
xchg
out
fcomps
jo
mov
and
adc
dec
jg
or
xchg
jmp
cli
or
divb
sub
pop
xor
test
jno
mov
shll
fistpl
pshufw
jbe
sub
dec
cmp
sbb
shlb
pop
in
xor
and
mov
pop
mov
icebp
lret
ljmp
inc
cs
pop
outsl
jne
mov
cmc
jno
fstpl
out
mov
mov
pop
fldz
fsubl
into
adc
xchg
mov
jmp
cmp
out
repnz
ja
ret
mov
orl
jb
push
xchg
jnp
ja
in
adc
das
rcr
sahf
cmp
shlb
dec
lds
xadd
idiv
mov
divb
jge
cmp
out
jecxz
sbb
lahf
andl
pop
subb
cmpsb
rorl
mov
xchg
jnp
cli
mov
dec
mov
pop
push
std
push
and
sbb
adc
ret
jle
pushf
ror
test
loope
xor
adc
cmp
push
xor
dec
mov
push
enter
pop
and
andl
pop
loopne
push
stos
jno
cmp
jle
loop
mov
sbb
cmp
loopne
loope
or
add
and
cmp
push
jbe
ret
jbe
clc
push
xchg
add
push
xchg
lock
dec
insl
inc
mov
das
sbb
mov
mov
inc
sarl
pop
push
sub
out
add
out
fiaddl
or
xchg
adc
test
mov
add
leave
shll
hlt
xor
lret
out
inc
pop
aam
popa
aas
outsl
fnstcw
dec
xchg
faddp
sbb
jg
pop
push
sub
sbb
and
ljmp
js
mov
imul
iret
arpl
arpl
mov
cmp
inc
sub
pop
cmp
lret
mov
rep
mov
fwait
sub
or
addb
neg
dec
push
xchg
mov
push
scas
sub
lret
adcb
sbb
int3
sbb
movsl
jge
xlat
hlt
xlat
mov
lods
aaa
mov
ret
jns
mov
ficompl
mov
push
mov
jno
push
cmp
xor
push
pushf
hlt
mov
rclb
ljmp
sub
xchg
shll
lahf
ljmp
cltd
rcrl
lods
dec
jne
jae
pop
xlat
out
fwait
lret
mov
xor
cmp
dec
pop
daa
fs
jl
pop
popf
pop
jo
fsts
ljmp
cmp
in
repnz
inc
std
pop
mov
push
in
pop
lods
ss
mov
mov
pop
xlat
scas
pop
pop
out
lret
inc
aas
add
enter
out
scas
shl
xchg
jmp
jmp
inc
mov
cmp
dec
stc
lods
rcr
in
and
mov
les
cmpsl
icebp
inc
fadd
cli
push
mov
xor
lcall
pushf
les
or
xor
orb
pusha
data16
std
sub
mov
test
mov
push
in
and
xchg
add
xlat
addr16
mov
ss
dec
test
sbb
push
inc
dec
aas
dec
push
aaa
or
sub
pop
scas
popf
mov
sub
adc
aam
cld
mov
push
sbb
push
lea
pushf
cmp
loope
dec
pop
pop
cli
mov
and
cmpsl
cmp
add
insl
scas
xchg
out
adc
lea
jmp
mov
fdiv
mov
and
jb
mov
hlt
push
out
subl
lock
jecxz
hlt
cs
fnstsw
inc
mov
cmp
sbb
or
cld
cmp
lret
mov
fwait
jmp
xchg
lret
sbb
repnz
stos
sbb
mov
dec
das
dec
mov
mov
lret
mov
jo
call
inc
push
shrb
das
pop
pop
pop
mov
push
add
mov
in
inc
pop
xor
ljmp
scas
lahf
xchg
clc
dec
sbb
xchg
mov
popa
iret
sub
pop
inc
dec
mov
outsb
or
push
sub
sub
cmc
pop
loop
int3
and
nop
push
je
rclb
in
std
mov
cmp
push
add
push
pop
hlt
ljmp
push
fstl
jb
sbb
cmpsl
test
jl
insl
pop
and
adc
mull
outsb
inc
add
mov
push
ss
in
out
sahf
xor
int3
test
jns
xor
addr16
pop
rcrl
gs
sbb
mov
lods
pop
test
xchg
inc
mov
push
mov
rorl
scas
aam
sarl
shll
data16
and
pop
pop
push
fiadds
leave
stc
insl
dec
xchg
fstpl
leave
inc
sub
add
test
decl
inc
pop
test
setp
outsl
call
mov
ljmp
outsb
lret
mov
orb
loope
jo
rcrl
mov
inc
cmp
xchg
shl
adc
push
hlt
jns
xchg
add
xchg
imul
xor
pushf
cmp
push
cs
outsl
xchg
push
ss
ficomps
adc
pop
call
jle
outsl
adc
test
xchg
xchg
push
xchg
xchg
fadd
jb
rcrl
push
mov
outsl
sbb
int
sbb
sub
sub
fisttpl
std
and
test
mov
add
aad
and
loopne
mov
loope
hlt
loop
jo
mov
aaa
adcb
cltd
sbb
cmp
jmp
cwtl
sbb
xchg
out
dec
or
test
leave
adc
test
notl
jle
mov
loop
adcb
xor
xlat
ds
das
dec
push
shrl
movsb
cli
popf
lods
fidivs
lods
jnp
xchg
stos
fmull
pop
in
push
dec
mov
call
mov
mov
ja
inc
insb
mov
jae
add
lds
fs
pop
cs
mov
pushf
or
mov
cmp
js
movsb
lods
dec
int3
stc
sahf
lock
sub
clc
ja
test
jle
add
and
mov
push
shlb
add
push
bound
pop
push
cmpsl
les
add
xchg
and
pop
aaa
daa
movsl
pop
xchg
or
out
inc
pop
xchg
xchg
repnz
in
negb
jae
scas
and
test
roll
pop
or
mov
ret
lahf
adc
mov
pop
sbbb
mov
inc
rorb
dec
aad
mov
sub
sub
pop
inc
pusha
pop
ds
cmp
sub
xchg
iret
faddl
inc
sub
dec
in
sbb
nop
sbb
jle
jne
sub
fldt
and
popf
ret
pop
lock
iret
int
push
and
lock
adc
add
js
inc
inc
xchg
inc
fnsave
dec
inc
testb
mov
mov
add
pop
scas
mov
add
inc
enter
push
xchg
adc
adc
cld
add
hlt
out
xlat
mov
jnp
fistpll
push
mov
mov
jne
pop
lods
cmpsl
ds
adcb
push
mov
xor
xchg
jle
mov
dec
sub
lods
xchg
mov
sahf
shll
add
aas
mov
ja
frstor
xchg
mov
mov
push
mov
mov
nop
adc
pusha
jae
sub
mov
push
inc
mov
sbb
and
lds
dec
inc
into
into
lret
cltd
jbe
jg
das
sub
adc
adc
mov
xchg
ss
push
in
scas
ret
mov
repnz
mov
xor
les
inc
popa
nop
sub
stc
pop
pushf
pop
mov
lret
std
jo
repnz
add
mov
andl
cmp
iret
jge
sbb
jbe
jb
pop
lods
xchg
pop
and
and
ret
mov
xchg
aaa
aas
pop
fwait
in
xchg
and
dec
shll
inc
out
ljmp
pusha
cld
setge
inc
mov
cmp
fdivl
sbb
leave
aas
mov
fists
push
mov
add
xchg
pop
cmc
push
adc
jg
dec
dec
ljmp
inc
cmpsl
cmc
or
lcall
lret
divl
repnz
andl
jmp
shlb
or
test
adc
ljmp
mov
test
sahf
out
sub
sub
dec
xor
xchg
mov
stc
sbbl
and
pop
jne
push
jmp
xor
dec
inc
leave
jp
jno
xchg
xchg
cmp
or
mov
mov
repnz
sbbb
inc
pop
cmpsb
js
arpl
imulb
sbb
cwtl
lock
inc
aam
cwtl
pop
mov
jns
test
cmp
jp
push
rcrb
xor
pop
inc
pop
xchg
xchg
icebp
scas
movsl
out
into
dec
push
pop
je
pusha
cmp
push
je
shll
ret
xchg
cmpsl
rclb
jb
ja
xor
cmp
xor
inc
shll
pop
sub
ret
xchg
pop
xor
jo
jmp
dec
or
faddl
sub
lret
jecxz
and
xorb
jg
and
xor
pop
and
cwtl
push
xorb
or
xchg
out
cmp
pop
or
jmp
je
xor
call
dec
add
xor
cwtl
ja
jae
repnz
adc
cltd
pop
push
adc
call
xchg
in
test
and
mov
push
insl
cmc
xor
stos
jae
cmc
daa
stc
jl
xchg
xchg
and
mov
mov
cmp
sbb
mov
dec
data16
fcoml
mov
mov
imul
adc
add
pop
mov
negb
or
popl
pop
mov
cli
sbb
shlb
xchg
rol
movsb
fnsave
icebp
outsb
into
jl
mov
xor
pop
dec
loop
or
addr16
jmp
mov
xor
sti
or
xor
mov
scas
sarb
into
xchg
loopne
in
xlat
call
addr16
cld
jb
xchg
cmp
subb
das
fbld
sti
push
jne
popf
addl
pushf
fisubrs
loop
jle
test
pop
daa
mov
aas
pop
xor
ja
cwtl
test
lods
inc
or
pop
pop
jecxz
push
shrl
out
adc
inc
outsb
shl
xchg
add
xchg
push
xchg
pushf
int3
push
bound
xor
mov
and
outsl
dec
popa
push
aas
and
pop
je
sbb
push
push
sub
mov
mov
adc
mov
jmp
mov
aad
call
sbb
jge
test
popf
jp
ja
jnp
mov
add
pop
sub
cmpsb
es
cs
arpl
in
in
fwait
js
add
mov
xor
outsl
aam
xchg
mov
loopne
inc
push
jns
pop
adc
pop
fcmovne
mov
xchg
push
test
push
mov
cmpsb
mull
jge
sub
xor
mov
sbb
fidivl
ss
inc
push
and
fnsave
pusha
sub
adc
sbbb
or
inc
xor
adc
sub
and
push
dec
inc
mov
int
aam
lret
xor
fs
xchg
push
out
mov
insl
adc
mov
out
dec
rcrl
repnz
popa
sti
lret
push
inc
out
std
or
inc
pop
mov
loopne
adc
out
scas
push
mov
sbb
lock
xchg
mov
xor
hlt
sub
and
cmp
popa
xor
test
or
xor
jae
repz
mov
test
bnd
inc
inc
notb
pop
dec
push
adc
sbb
jge
idivl
rorb
push
jecxz
hlt
push
sarl
addr16
cli
in
cmp
jg
and
mov
jmp
repz
gs
loopne
int3
test
imulb
sub
call
fs
jne
ds
add
into
jbe
mov
adc
outsb
xor
pushf
cmp
push
repz
sub
data16
hlt
in
mov
ds
mov
xchg
pop
cmp
out
pop
xchg
in
shlb
cmp
adc
add
cwtl
ljmp
xchg
out
ficomps
call
push
inc
pop
pop
mov
xor
pop
mov
rolb
pop
sahf
push
sbb
dec
rcrl
dec
xor
xor
imul
pusha
xor
mov
adc
adc
xchg
add
xlat
fnstcw
jo
or
insl
movsl
mov
data16
dec
pop
jns
mov
mov
outsb
mov
push
fimuls
add
cmc
adcl
test
fisttpll
jno
repz
pop
cwtl
and
shlb
pop
jno
xor
add
inc
imul
xor
je
inc
ficompl
insb
cmp
sub
ljmp
shrb
movsb
mov
inc
sti
adc
ja
rclb
popa
mov
movsl
fsubr
bnd
mov
sbb
or
xchg
xchg
inc
out
sbb
popa
call
insl
mov
mov
pop
jge
stc
xlat
ret
cmp
or
sub
inc
xor
test
in
jb
loope
out
mov
mov
jl
xchg
stos
leave
rorb
sbb
arpl
ror
mov
xor
loop
or
in
xor
fidivl
icebp
in
cltd
in
inc
mov
mov
add
xchg
cmp
mov
jle
jbe
lcall
outsl
xor
je
scas
adc
repz
fistps
sub
ds
movsl
icebp
jmp
lahf
into
rcrb
mov
sub
cs
xchg
call
or
shl
add
cmc
lods
icebp
enter
xor
add
nop
mov
loope
mov
sbb
add
jle
scas
push
pop
mov
xchg
out
clc
inc
mov
add
aad
jecxz
add
imul
dec
adc
fisubl
dec
movsb
popf
fdivrp
xchg
inc
test
ret
test
outsl
int3
mov
mov
jge
hlt
aas
push
jb
loop
xchg
clc
in
jge
nop
fwait
mov
and
dec
lds
imul
mov
hlt
in
iret
sbb
jg
int
push
jbe
into
into
pop
push
lahf
inc
pop
cmp
push
mov
sbb
xchg
mov
mov
dec
xchg
ret
ss
xlat
sbb
xor
adcl
rcll
inc
gs
inc
mov
arpl
mov
lret
fldl
add
adc
sahf
dec
mov
cli
js
push
lret
xor
fwait
bswap
cmp
cmp
mov
mov
xorb
in
insb
mov
jg
sbb
test
dec
mov
out
in
sub
mov
into
pop
repz
bound
test
scas
rorl
xchg
xor
cmp
push
icebp
and
sahf
stos
lcall
es
inc
rcl
push
test
jne
stc
cmpsb
sbb
mov
push
mov
fbstp
movb
adc
push
xor
add
fidivrl
inc
aam
loope
or
test
or
mov
xchg
cmpsl
ficoml
pop
push
push
push
movsl
xchg
push
mov
push
nop
pop
mov
jne
mov
sub
dec
das
hlt
sbb
mov
jno
ss
jl
movb
sbb
pusha
mov
inc
jge
ret
ljmp
stos
fadds
ds
cmp
fdivl
clc
jbe
add
mov
add
push
cld
push
aaa
mov
push
push
inc
lahf
mov
and
and
ret
mov
test
cmpsb
lock
mov
mov
xor
ret
sbb
and
ja
out
jns
inc
and
jp
stc
repz
repz
aas
mov
pop
sbb
jae
push
xor
subb
mov
mov
mov
aam
out
out
insl
cmp
sbbb
lea
cmc
pushf
xchg
testb
jb
das
cmp
xchg
sbb
dec
mov
adc
jmp
pop
mov
andb
xchg
inc
or
fwait
or
jno
inc
pop
dec
and
or
xchg
cmp
xor
mov
lods
dec
shll
jno
and
xchg
push
adc
mov
push
xchg
aam
ja
inc
int
fs
jecxz
mov
add
jle
or
les
inc
inc
out
mov
pop
into
pop
pop
cmpsb
add
cltd
push
in
bound
inc
dec
dec
loopne
sbb
scas
adc
mov
in
scas
push
push
xrelease
sti
aas
cmp
ja
insb
inc
nop
rolb
mov
fwait
inc
cltd
pusha
shll
jg
xor
mov
clc
movsl
jb
loop
cmpsb
mov
idivl
cmp
inc
inc
sbb
xchg
insb
push
jne
aam
mov
movsl
cmp
js
dec
fs
cwtl
jae
mov
outsb
fnsave
jnp
jbe
mov
mov
mov
add
jmp
lret
loopne
mov
jle
lret
lock
mov
repnz
mov
ja
fldl
mov
subl
daa
jl
mov
pop
mov
dec
dec
dec
ja
cs
rolb
imul
arpl
int
pusha
or
adc
and
xchg
mov
aas
ds
out
ja
sbb
movsb
loop
pop
ss
inc
push
cmp
inc
insb
icebp
xchg
inc
or
ret
std
dec
mov
mov
lea
cld
loop
movsb
arpl
lods
or
mov
in
je
sub
pop
pop
outsb
jo
push
js
jg
push
sti
sub
aaa
sbbb
int3
pop
adc
lods
xorb
xchg
rcr
movsb
jmp
rclb
pop
fwait
dec
cltd
lods
adc
fdivl
scas
mov
mov
push
arpl
sbb
lahf
sub
imul
mov
rcll
add
jg
out
dec
jae
push
xchg
jo
mov
sbb
std
jp
push
inc
aam
add
cmp
mov
mov
mov
popf
fistpl
fldenv
push
in
fcompl
adc
gs
out
outsb
xchg
mov
pusha
sahf
popa
cmpsl
cmp
test
and
or
push
scas
lods
push
xor
shll
jmp
xor
frstor
fdiv
sbb
fcoms
sub
pop
xchg
in
adc
cmp
sbb
es
inc
inc
inc
mov
sarl
push
inc
andl
shrb
adc
pop
adc
jo
mov
and
cmp
xlat
loope
adc
inc
ret
xchg
adc
aad
test
in
mov
stos
pushl
shlb
cmp
js
inc
jb
fnstenv
pop
cmc
rcll
std
mov
push
cmpsb
lahf
fs
or
ret
or
adc
sub
in
ljmp
std
loopne
jle
push
jg
in
iret
ss
fidivrs
dec
jo
and
jnp
add
push
add
mov
mov
les
sub
out
jnp
push
jns
mov
movsl
cld
cmp
out
test
dec
jg
sbbl
and
cmc
sti
adc
lods
push
loopne
or
ret
adc
xor
ret
data16
add
sbb
out
rcr
clc
mov
pop
scas
jg
mov
mov
pop
addr16
add
shll
hlt
mov
xor
ja
add
mov
sub
push
jno
xor
add
hlt
adc
sbb
std
sub
repnz
leave
jge
jmp
nop
insl
inc
pop
ljmp
loopne
or
pushf
cmp
scas
push
fmull
push
adc
inc
imul
pop
or
lods
push
mov
cli
les
push
adc
mov
add
xchg
cmp
sahf
add
jle
jns
dec
dec
pavgw
cmp
sbb
jg
push
adcb
fisubs
dec
jecxz
out
stc
jmp
inc
repnz
mov
aaa
std
int
pushf
and
aas
mov
ljmp
fsubr
mov
add
xor
repz
mov
push
push
add
jo
rcpps
out
movsl
pushf
loopne
push
push
pop
imul
mov
push
out
shll
add
arpl
mov
pop
push
iret
mov
repnz
push
lahf
xor
std
pop
or
out
push
inc
mov
imul
ret
jl
sub
hlt
pop
adc
push
mov
cmp
fsubrl
lret
mov
push
aaa
idiv
inc
leave
int
cltd
lods
pop
inc
cwtl
xchg
rcll
push
cmp
fucom
pushf
pop
inc
mov
sbb
cs
call
mov
nop
xor
lods
mov
jge
pop
xchg
pop
mov
test
cli
dec
stc
jmp
fimuls
sub
std
push
push
test
jne
adc
lret
cs
out
mov
push
test
mov
and
pop
arpl
jne
and
sbb
insb
inc
hlt
nop
inc
loop
jecxz
call
ret
out
out
in
out
pop
jne
popf
or
sub
xor
dec
stos
inc
cmp
add
pop
arpl
mov
pop
xchg
fs
jle
pop
ror
cmp
push
pop
fisubl
rorb
in
xchg
mov
fistpl
lcall
cltd
mov
push
pop
popa
mov
add
jmp
mov
xor
push
repz
ror
push
mov
jo
jle
mov
cmp
xorl
es
sub
dec
pop
dec
popa
push
and
cld
mov
stos
sbb
xchg
jbe
fxtract
mov
push
rclb
mov
insl
adc
cmp
mov
outsb
dec
adc
subb
add
jnp
add
pop
and
fcoms
lret
stc
mov
jo
push
push
dec
jl
dec
stos
xor
call
ljmp
dec
dec
adc
fisttpll
scas
xor
mov
cmp
loope
cmp
test
dec
stos
cltd
pop
adc
jno
add
enter
ret
pop
mov
mov
mov
or
add
cld
loopne
jnp
add
xchg
das
or
push
dec
mov
pop
adcb
popa
jecxz
xor
xchg
ffreep
push
ret
push
sub
test
push
enter
push
inc
mov
xchg
into
sub
mov
fwait
lcall
fdiv
adc
inc
inc
mov
test
push
mov
or
jbe
loop
jnp
gs
mov
loopne
xchg
stos
push
jge
out
add
addb
dec
mov
xchg
sti
sub
add
inc
into
fisubl
scas
pop
mov
stos
fistps
jp
call
dec
sahf
aas
addr16
nop
mov
mov
sub
psubq
mov
frstor
loopne
sub
add
mov
outsl
ss
into
mov
ret
pop
inc
and
or
xchg
out
jl
jl
and
insb
fiadds
pushf
arpl
gs
dec
mov
jg
cmpsl
xchg
jno
out
xor
das
jb
sahf
test
scas
sbb
leave
adc
sub
jne
dec
xor
mov
adc
xchg
mov
sarl
xchg
mov
and
sub
cld
test
push
pop
test
mov
pop
aas
jo
cmp
pushf
xchg
jbe
cmp
rcll
inc
jo
fprem1
iret
pop
jmp
mov
inc
mov
in
mov
int3
xchg
repz
push
jo
push
cmp
sbb
fiadds
ljmp
xchg
loopne
imul
and
int
popf
adc
popf
push
sub
or
jl
adc
sbb
pop
inc
adc
pop
popa
repnz
stos
pop
xchg
inc
into
cmp
jle
mov
push
ja
sahf
loop
sbb
repz
repz
xchg
mov
mov
jge
cmpsb
push
daa
test
test
iret
jne
mov
test
push
nop
shlb
mov
and
iret
rclb
ret
mov
iret
mov
loopne
push
cmp
pusha
mov
cmc
add
test
in
xor
mov
sub
sti
sub
addb
push
cmpsl
sbb
into
insb
sbb
mov
or
mov
sahf
inc
incl
sub
fstpl
cwtl
imul
or
and
xchg
negb
jne
cmp
pop
mov
mov
loope
hlt
adc
jle
out
lret
jnp
hlt
mov
ds
popl
es
jp
adc
mov
add
lcall
notl
xchg
mov
shl
jg
jge
loope
and
mov
leave
scas
dec
aam
lock
inc
mov
repz
mov
rclb
mov
scas
push
fs
mov
ja
insl
xlat
inc
or
movsb
lcall
adc
push
es
fs
shlb
mov
std
mov
arpl
and
cmp
lcall
xchg
stc
sbb
sahf
adc
imul
aas
sub
outsl
out
push
and
cmpsb
int3
pop
pop
sbb
daa
push
aas
and
sub
leave
int3
push
xorb
push
push
loop
icebp
adc
lret
cmc
add
je
sti
adc
and
or
sub
shrl
das
or
jl
incl
shl
dec
mov
sbb
add
les
out
cmp
fsubs
cs
jnp
or
sub
mov
int3
cli
jo
lock
jo
idiv
in
notl
push
lock
lea
in
cmp
or
frstor
sahf
stc
arpl
imul
dec
pop
xor
loopne
int
jne
push
lea
enter
in
jmp
and
and
sbb
data16
aam
mov
sti
ss
push
rcr
sbb
jae
pusha
xor
scas
jbe
jle
out
or
pop
fnstsw
xlat
popf
xchg
pusha
stos
jmp
inc
jp
lret
loop
test
and
nop
outsl
dec
sbb
or
sti
jbe
sarl
inc
fldenv
jo
lods
push
test
mov
imul
lods
pop
pop
mov
jne
arpl
mov
cmpsl
pop
pop
jo
int
push
mov
idivb
fwait
cli
mov
add
outsl
in
movsl
mov
xchg
in
xorl
mov
cmp
repz
cld
mov
lods
ret
data16
add
loope
out
push
cmp
js
adc
jns
sub
cltd
sub
push
push
andb
clc
aam
fsubrl
jmp
in
in
jbe
jno
and
xchg
xor
pop
jo
sub
inc
scas
push
rclb
push
and
in
xchg
jge
aam
mov
xor
inc
icebp
xchg
mov
fwait
push
mov
cmp
aas
push
and
icebp
mov
jmp
pusha
mov
pop
lea
movb
icebp
mov
jno
push
or
adc
jns
mov
jnp
mov
out
jg
jo
dec
jle
test
push
les
cs
add
movsl
and
pop
mov
mov
lahf
cmp
mov
rolb
or
std
les
fisubs
imul
sahf
jge
mov
fucomip
or
scas
inc
inc
lret
lods
push
cwtl
jmp
cmp
mov
and
sub
adc
jle
jp
shrl
mov
xchg
adc
ror
xchg
stos
movsl
pop
adc
mov
fxch
and
movsb
mov
jo
insl
dec
movsl
repz
gs
leave
stc
or
mov
inc
hlt
pop
xchg
mull
mov
dec
data16
mov
xor
cli
dec
lret
push
inc
pop
dec
lea
jg
hlt
fdivrl
data16
rolb
inc
xchg
lods
adc
mov
loope
mov
out
ret
ret
xchg
loope
sarb
adc
or
xchg
adc
nop
push
or
jne
test
out
sbb
outsl
or
ja
out
mov
cmpsl
xor
in
loope
or
mov
or
fldcw
jge
aam
push
daa
mov
cmpsl
cld
add
jns
cwtl
dec
aaa
fucomip
daa
jl
add
fcmovnb
or
ja
loop
mov
mov
loope
inc
jae
cld
mov
push
pushf
jbe
faddl
push
lret
inc
test
gs
imulb
lds
scas
in
inc
lods
mov
jmp
xor
jnp
and
lcall
cwtl
enter
jae
cltd
mov
mov
jnp
addb
push
xlat
xor
mov
lds
lods
add
cmpsl
push
and
jns
in
dec
cmp
test
loop
xor
clc
xchg
popf
inc
out
xor
imul
and
cmpsb
mov
out
and
add
sub
mov
pop
push
mov
cmpsb
mov
ret
int3
xor
cmc
mov
ljmp
loop
out
cmc
arpl
test
popa
stos
movsb
hlt
lahf
mov
loope
test
add
shrb
repnz
lods
sub
fsub
ljmp
and
fwait
sti
movsl
mov
jmp
mov
xorl
movsl
sbb
arpl
dec
aas
pop
add
fisubrl
loop
stos
loop
jno
repz
jnp
lret
cmpsb
jae
inc
inc
fwait
lods
or
in
cltd
sub
push
sub
cmc
xchg
mov
fcoms
out
xor
dec
cmp
ljmp
pop
xor
mov
fisubl
imul
fwait
inc
add
lret
out
mov
in
in
repz
xor
fwait
jge
int3
mov
xor
dec
inc
xor
flds
jmp
push
dec
jecxz
inc
or
adc
sbb
repz
xchg
sub
sub
inc
enter
jns
mov
mov
out
xchg
mov
cmp
sub
out
dec
push
imul
pop
jo
sub
loop
iret
int
pop
sbb
mov
dec
sarb
sub
xchg
sti
jne
jae
mov
insl
daa
std
mov
out
cmp
xchg
jo
js
das
push
xchg
ret
jno
mov
adc
or
int
cltd
lea
int
mov
test
fstps
dec
xchg
outsl
out
push
cld
dec
add
mov
fldenv
mov
ss
jmp
cwtl
cs
sub
jmp
stc
aam
mov
jne
adc
adc
test
pop
dec
mov
adc
xor
dec
stos
dec
jbe
pop
icebp
test
stos
xor
xor
pop
test
xchg
divb
mov
cmp
jnp
jmp
pop
loop
mov
js
movsl
mov
sbb
int
ja
stos
ja
lds
cmp
test
sub
add
cmpsl
mov
mov
dec
mov
leave
nop
int3
les
imul
cmp
inc
cmp
sti
test
imul
fildl
repnz
es
xor
cmpsl
mov
out
stc
dec
fcmovbe
outsb
test
dec
or
clc
xor
xchg
ret
sbb
cmpsl
and
outsl
mov
dec
add
loopne
xlat
in
bound
adc
je
push
sbb
inc
cmp
mov
adc
fadds
fwait
lret
cmp
fistpll
pop
lahf
cmp
jbe
jmp
cmp
add
mov
popa
cli
jb
xor
decb
sbb
jbe
xor
sahf
ljmp
mov
aad
and
leave
ret
push
xor
jp
sbb
jne
push
in
pmaxub
pop
sti
push
repnz
mov
push
sub
pop
rorl
shll
mov
pop
ret
call
adc
pop
or
jo
xor
pop
ret
pop
cld
jae
jge
popf
sbb
xor
push
add
ret
insb
icebp
gs
sti
out
jecxz
pop
xor
xor
or
rorb
adc
jnp
aaa
cmp
rcrb
dec
mov
inc
push
call
xchg
or
lods
sbb
mov
je
add
out
jbe
subb
mov
add
in
cmp
pusha
gs
lds
dec
mov
test
dec
jbe
xchg
push
xchg
xor
push
dec
adc
loopne
outsl
jbe
stos
sub
inc
ja
mov
ret
xor
jp
mov
ja
ja
fisttps
sahf
push
idivl
test
lods
mov
cmp
sub
subl
pop
sbb
and
xchg
jp
jno
xor
cmp
ret
call
mov
movb
es
xchg
and
mov
ja
pop
ss
jl
andnps
cmp
dec
mov
push
adc
call
mov
xchg
sub
inc
push
mov
sbb
test
add
push
imulb
dec
jl
jno
cmp
xchg
fsubrp
cltd
push
cmp
in
inc
add
mov
xchg
jge
aas
pop
rorb
adc
xchg
sbb
in
sbb
in
fldenv
ret
jo
and
sbb
cs
cmc
and
cmp
fists
add
ja
rcrl
add
pop
push
add
loop
shlb
test
sbb
inc
call
movsb
mov
cmp
dec
repz
aad
dec
pop
mov
and
lock
inc
mov
push
push
call
add
mov
gs
xor
mov
mov
enter
add
cmp
sbb
in
mov
adcl
scas
out
sub
int
mov
push
inc
cmp
pusha
inc
out
sahf
push
jp
outsl
push
mov
xchg
mov
ss
sbb
ja
mov
or
push
dec
adc
popf
xchg
cmp
dec
dec
push
stc
xor
or
test
add
aas
mov
dec
mov
pop
mov
inc
mov
push
xlat
lahf
stc
fisubl
dec
xchg
andb
lds
ss
push
sub
or
pop
and
jmp
fdecstp
call
xchg
mov
push
pop
lret
pusha
inc
imul
ror
lcall
and
repz
mov
out
je
fdivs
xchg
pushf
inc
imul
pop
ror
mov
mov
or
xchg
lds
sahf
push
mov
popa
sub
iret
aad
ja
stos
jne
mov
or
sbb
pushf
mul
es
xor
iret
mov
cmpsl
fs
cmpl
mov
lods
ss
lock
lea
mov
sbb
push
jne
es
enter
iret
in
or
jo
cmpsl
loopne
imul
mov
rcll
mov
mov
sti
icebp
je
push
push
mov
lret
xchg
ljmp
movsl
jg
lahf
jnp
orl
cmp
pop
rolb
mov
push
dec
jp
sbb
adc
mov
nop
enter
ret
sub
xchg
repnz
movsb
divb
push
stos
sbbl
mov
cltd
in
cmpsl
jno
inc
cli
incb
mov
in
add
cmp
cmpsl
mov
or
adc
loop
cld
dec
stos
pop
clc
sub
add
cmpsl
in
adc
imul
sub
lods
sub
repz
xor
inc
lret
push
ret
jbe
sbb
mov
adc
bound
push
cwtl
lock
xchg
sbb
jne
dec
and
testl
inc
add
hlt
push
dec
mov
loop
iret
clc
ss
jle
or
les
aad
jl
call
jp
dec
mov
xor
lods
mov
push
push
sub
outsl
pop
mov
mov
sbb
mov
sub
insb
and
xchg
xor
fwait
pop
and
iret
aas
xor
das
inc
call
jl
das
mov
adc
repz
mov
push
shll
je
nop
jno
mov
js
ret
test
int
ja
adc
mov
adc
dec
inc
inc
outsb
rcl
jmp
pusha
movsb
loop
add
xchg
in
mov
push
adc
mov
xor
jae
call
sti
mov
scas
mov
mov
imul
dec
decb
loope
lcall
addr16
subl
sub
out
lods
enter
push
or
pop
stos
mov
mov
push
and
sub
inc
mov
out
pusha
stos
cmp
daa
pusha
scas
leave
sbb
pop
add
mov
loope
test
dec
js
dec
and
sub
jbe
rol
jb
or
adc
mov
mov
iret
dec
dec
cmc
ret
push
out
inc
pop
jmp
and
iret
aaa
mov
mov
inc
jno
mov
xchg
jle
sub
sub
in
cli
repz
gs
pusha
cmpb
fists
xchg
and
loopne
arpl
xor
in
ljmp
sbb
in
imul
jo
jbe
lahf
mov
fmuls
into
add
rcrb
into
jmp
dec
loop
rclb
ret
pop
loop
push
loope
mov
into
arpl
push
push
add
inc
cs
jae
pop
popf
popf
dec
test
fsubp
add
jno
xor
lea
inc
or
ljmp
popf
lret
adc
xor
ja
enter
shll
add
cli
sti
pop
cmp
out
stos
clc
sbb
pop
and
xchg
mov
data16
rolb
inc
cmp
pushf
adc
mov
pop
lea
fiadds
lret
cs
scas
cld
enter
shrb
sbb
arpl
ljmp
inc
adc
mov
jl
subb
and
movsl
push
lcall
lcall
mov
addb
push
push
movsl
push
lds
data16
out
pop
jo
xor
and
idiv
sbb
cmc
jg
add
aad
push
mov
enter
and
xor
notb
dec
adc
push
push
cld
jecxz
xor
add
cmpsl
cmc
frstor
sbb
pop
adc
mov
sbb
push
movsb
xorb
add
jp
icebp
stos
lock
arpl
outsb
jle
movsb
jns
jg
pop
mov
jno
xchg
ficoml
jge
ds
mov
lods
pop
jg
in
stc
sar
cmp
inc
pop
jnp
mov
mov
jmp
mov
loopne
jp
push
xchg
je
pop
adc
mov
cwtl
subb
xchg
inc
jne
mov
dec
pop
add
aas
mov
int
gs
inc
mov
push
mov
lret
ret
xchg
mov
and
lods
xor
cmp
push
or
in
mov
push
cmp
jge
jmp
ja
xchg
ficoml
lret
xor
or
jbe
push
pop
mov
xchg
pop
rorb
sti
inc
out
dec
mov
fsin
or
add
add
leave
pop
xor
inc
pop
or
cld
cmp
daa
pop
sub
movsb
pop
pop
test
pop
roll
cltd
enter
xchg
mov
mov
push
imul
fists
ljmp
je
push
mov
call
out
lcall
add
dec
adc
mov
movsb
jg
movsl
push
loopne
shlb
test
mov
hlt
scas
lds
scas
test
test
out
dec
test
sub
add
rcrb
xchg
cwtl
mov
mov
add
or
addr16
push
pop
nop
mov
pop
xchg
or
lds
inc
nopl
xor
fidivl
je
fs
xchg
popa
jb
cwtl
jmp
xchg
xor
fs
mov
inc
pushl
lods
ss
test
pop
xchg
out
scas
push
loop
int
adc
jns
jo
mov
out
xchg
mull
xor
scas
push
dec
adc
sahf
cmpsb
cld
push
or
sub
imul
fucomp
popa
jne
xchg
pop
imul
fcoms
in
js
fcmovu
push
push
fisubs
popf
or
jb
dec
xor
out
sbb
mov
add
ss
mov
test
sbb
add
cmp
fistpll
inc
push
jne
jecxz
outsl
mov
or
loope
dec
add
jle
adc
jns
dec
iret
cwtl
xlat
les
xor
movsb
outsb
adc
inc
rcll
cmpsb
js
add
cmpsl
xchg
arpl
shlb
lea
and
adc
sarb
pop
mov
test
jecxz
cmpsb
mov
xchg
or
xchg
or
and
push
xor
push
xor
push
stc
cld
enterw
dec
imull
mov
lock
or
pop
sbb
xor
dec
mov
arpl
out
arpl
cli
mov
lea
add
shrb
add
daa
in
inc
mov
sti
cwtl
sub
sub
or
and
fisubl
cmc
popf
add
cmp
push
jmp
pop
pop
insb
cmpxchg
push
sbb
dec
fisttpll
dec
pushf
andb
push
call
scas
lahf
mov
call
adc
js
int3
mov
cmp
add
ds
int3
sub
lods
dec
xor
test
js
push
js
xchg
xchg
inc
dec
inc
push
dec
test
int
mov
push
sub
sbb
xchg
jecxz
sub
xchg
outsb
hlt
nop
lret
movsb
xor
je
xlat
xchg
aam
enter
filds
pushf
hlt
push
inc
sbb
shl
outsl
imul
ss
jnp
inc
ja
in
pop
out
mov
repnz
orb
mov
push
pop
push
mov
imulb
and
and
pop
xchg
aaa
sahf
dec
and
xor
or
andl
aas
dec
sti
ret
mov
adc
or
or
out
jns
mulb
dec
lcall
stos
push
mov
movsb
maskmovq
divl
nop
cmp
jb
subl
dec
rolb
inc
or
sub
dec
cmp
push
out
adc
movsl
xchg
dec
lret
cwtl
mov
push
cli
dec
adc
push
inc
jl
sub
test
xorb
rcll
and
jmp
mov
nop
sub
sub
cmpsl
pop
push
jmp
xorl
dec
loop
sti
sub
std
out
in
xchg
sbb
fimuls
adc
sti
movb
jge
lock
adc
jmp
aas
inc
mov
mov
cmpsl
add
cmpsl
lods
leave
fdivr
add
add
sub
and
sbb
and
inc
fcomip
inc
cmp
mov
out
cltd
cmp
shrb
xor
cmp
pop
sub
aam
and
mov
ss
iret
popf
mov
mov
jne
xchg
pop
cmp
push
jnp
andb
sarl
mov
cmp
lock
and
pop
leave
add
pop
jp
hlt
stos
and
fs
cmpsb
test
or
aas
out
sub
xor
pop
or
jmp
xchg
repnz
push
push
sub
push
push
mov
mov
xchg
out
lret
pop
lock
aam
sub
inc
pop
jl
push
mov
lods
je
test
pop
divb
and
ds
in
lret
vpcmpgtb
pop
clc
loop
inc
or
pop
shll
daa
into
jl
fidivs
scas
aam
pushf
jnp
roll
and
add
inc
mov
cmp
mov
or
cmpsb
lock
fcomps
mov
movsb
dec
imull
lock
loopne
cld
xchg
fs
xor
lcall
xor
mov
pop
scas
or
fwait
jno
test
jbe
and
mov
dec
lock
jge
dec
pop
shlb
push
testw
notl
mov
mov
pop
scas
push
jne
rolb
push
dec
ret
daa
roll
aam
ret
cmp
inc
jl
arpl
and
or
test
mov
jp
sbb
sbb
or
addr16
sbbl
and
xor
and
ret
jle
dec
dec
test
shrl
cmpl
fdivl
cmpsb
mov
pop
mov
jno
sbb
pop
mov
cmp
lock
sbb
xadd
cmpsb
fisttpl
rolb
aam
lret
or
lcall
popa
cli
or
xor
imul
into
out
push
stc
xor
or
out
subl
jno
xor
movsb
js
pop
push
or
popa
js
pop
pop
sbb
adc
aam
mov
pop
or
cli
shlb
mov
pop
test
sbb
adc
or
daa
loopne
push
inc
mov
es
or
xchg
sbb
ret
jmp
faddp
mov
mov
dec
imul
sti
jne
rorl
sbb
arpl
adc
stc
add
and
lcall
mov
fnsave
pop
pop
psraw
out
adc
lods
ret
adc
push
out
adc
cmp
xor
pop
mov
out
insb
jecxz
lods
aad
push
fstl
cmpsl
stos
loop
pop
mov
ja
shrl
imul
adcb
mov
pop
adc
loop
shl
daa
mov
push
mov
xchg
mov
fldcw
mov
inc
or
cmp
cmpb
mov
cmp
scas
ret
stc
xchg
sti
cmpsb
push
cmp
jp
addl
push
cmp
adc
out
cmpsb
lcall
insb
lds
orb
push
rol
xlat
fs
adc
aad
ja
out
lret
xchg
push
stos
pop
add
imul
cmpsb
rorb
rorb
jp
in
rorl
js
int
fcompl
imul
adc
lds
popa
std
insb
mov
jne
cwtl
sahf
mov
stos
cmp
pushf
adc
jle
cmp
sarb
cmp
mov
das
aas
pop
push
xchg
or
mov
xor
or
and
or
dec
scas
imul
int
mov
gs
mov
xchg
popf
out
aam
aaa
fdivl
mov
xor
ljmp
ss
sahf
fimull
shrl
xchg
xor
imul
xchg
add
gs
inc
rorb
mov
cmp
imul
push
insb
out
push
adc
dec
imul
imul
mov
sub
jge
push
inc
fdivs
scas
jae
lock
faddl
int3
pop
xor
cld
repnz
mov
and
enter
sub
lahf
and
cs
add
insb
add
cmp
mov
inc
cmp
xchg
mov
xor
pop
call
mov
mov
pop
lea
pop
sub
lahf
pop
fistpll
fidivrl
xor
mov
rorb
or
outsb
mov
and
mov
add
sbb
jae
enter
in
mov
aam
mov
or
andb
and
push
mov
rclb
pop
in
jno
xchg
add
in
loop
mov
push
je
enter
ljmp
imulb
dec
ljmp
movsb
pop
or
add
inc
inc
nop
cmpsl
inc
inc
repnz
movsb
cmp
mov
xchg
pop
je
shl
leave
sub
sbb
scas
fdivrp
and
mov
cmc
mov
jecxz
cmp
jo
test
mov
arpl
daa
loope
jecxz
xchg
jo
jmp
popa
dec
mov
mov
dec
xchg
jnp
or
movsl
out
loopne
hlt
xchg
mov
xor
sbb
and
inc
out
mov
jne
push
out
scas
addr16
in
shlb
lret
sub
mov
sbbb
mov
add
jno
or
stc
test
cld
or
leave
sbb
mov
scas
in
cmpl
pop
aaa
es
out
jmp
xchg
or
mov
pop
ror
rorl
mov
xor
loope
push
push
loope
xor
cmc
xchg
inc
pop
cld
sub
lock
dec
cmp
ja
addr16
add
xor
mov
sub
adc
jge
adc
jp
cmp
popa
aas
pop
rcrl
push
loope
test
inc
out
in
xor
pop
aam
push
fwait
mov
mov
xor
adc
lret
inc
sbb
lea
mov
cmp
add
loopne
xor
inc
imul
test
push
xchg
aam
iret
mov
mov
sub
leave
out
pop
mov
mov
jo
mov
bound
dec
mov
ret
mov
filds
sbb
push
fsubs
imul
bound
sub
cmp
les
into
mov
bound
jecxz
sbb
inc
lods
jb
fisubl
fisttps
or
xor
mov
andb
mov
insb
scas
push
cmc
fmuls
xor
xchg
sbb
mov
pop
jae
mov
lahf
shl
pop
xor
push
repnz
cmp
xchg
in
xchg
jg
mov
hlt
push
and
xchg
outsl
cmpsl
js
sbb
mov
ficompl
int
pop
mov
fbstp
xchg
ljmp
jl
lahf
jp
in
sub
mov
and
aad
mov
pop
mov
or
inc
dec
pushf
cmp
sub
inc
je
in
inc
ja
dec
js
cmpsb
push
popa
fbld
lods
xchg
pop
mov
mov
sbb
cmp
imul
xchg
add
cmpsl
add
lds
sbb
pop
push
jae
mov
mov
mov
mov
inc
cmc
mov
xchg
mov
push
cmp
stos
insl
cld
or
sub
sti
add
dec
adc
adc
lcall
test
mov
sti
hlt
sahf
ficompl
enter
cmpsl
dec
iret
push
fidivrl
rcr
imul
or
sbb
das
imul
mov
leave
xorl
xchg
dec
ror
mov
imul
push
pop
push
into
lret
ret
dec
adc
jns
xorl
inc
mov
mov
and
jmp
sub
leave
or
mov
xchg
mov
sti
and
test
cmpsl
je
xor
lods
leave
mov
dec
adc
test
scas
in
push
mov
push
jo
sar
out
arpl
mov
sbb
xchg
fs
xor
inc
jae
sbb
push
dec
gs
sub
pop
adcb
push
push
xor
add
xchg
mov
and
lods
mov
stos
jmp
mov
mov
sub
pushf
hlt
mov
jbe
in
push
jecxz
jbe
mov
out
sbb
xchg
lahf
push
add
arpl
lcall
fwait
xor
inc
enter
test
pop
popf
aad
jle
mov
push
jg
pop
aaa
mov
inc
dec
mov
out
dec
fs
xchg
mov
jl
sub
sub
and
nop
mov
cmpsb
cmpsb
jp
xor
inc
cwtl
and
stc
inc
xchg
fsubrl
push
xor
mov
out
cmpsb
cld
inc
adc
loopne
loope
int
fs
push
je
pop
pop
repz
pusha
stc
int
test
sub
fcoms
mov
xchg
pop
xor
pop
lret
outsb
sbb
xor
jmp
popf
ljmp
imul
rcrl
lret
jb
aas
lods
movsb
mov
or
pop
pushf
lods
push
in
xor
pop
add
jno
sbb
add
testl
and
sub
out
mov
inc
cmp
mov
sub
mov
jg
ret
xchg
or
sub
add
cmp
jle
sbb
rcr
mov
out
pop
adc
repz
push
dec
cmp
loope
popa
dec
or
repnz
mov
pop
xorl
outsb
inc
sub
cwtl
ljmp
cmp
iret
pusha
push
scas
stc
daa
repz
xor
dec
jge
outsb
and
cmp
cmpsl
fldpi
dec
ljmp
lret
cli
jo
repz
lret
xchg
mov
or
adc
repnz
enter
mov
xchg
cli
dec
repz
adc
sbb
mov
js
xor
sub
int
pop
idivb
pop
lock
mov
test
shr
bound
adc
cwtl
roll
adc
cmp
mov
xor
je
aam
arpl
xor
xor
mov
xor
adc
fwait
out
scas
adc
dec
cmp
xchg
inc
add
sub
js
ficomps
mov
lock
rcr
test
mov
aas
js
pop
cmp
push
xchg
mov
gs
out
mov
int3
cs
mov
sbb
adc
lahf
popa
loopne
insb
xlat
sub
mov
arpl
pop
dec
mov
aas
repz
mov
cli
push
in
mov
mov
push
jle
scas
shll
stc
cmp
mov
inc
and
hlt
xor
fistpll
lret
pop
out
mov
push
jge
push
ficoml
sub
adc
mov
iret
js
out
lods
stos
data16
add
lcall
lods
fs
push
adc
roll
xchg
shl
push
ret
outsl
mov
push
jbe
std
add
stos
incb
or
mov
lea
xchg
dec
fcmovb
mov
inc
int3
push
loopne
lret
divl
dec
xorb
repz
aaa
xor
aam
pop
ljmp
lahf
fmuls
mov
sub
jp
out
sub
add
xor
add
loope
or
sub
inc
aam
shrl
sbb
cs
jno
cmp
xor
mov
popa
pmullw
pop
test
pop
aam
cmpsl
shll
adcb
jl
in
jbe
xlat
nop
mov
or
js,pt
mov
jg
push
jnp,pn
lock
ds
or
adc
jb
lds
mul
pop
rclb
int3
out
push
insb
ja
pusha
test
stc
in
jne
rorb
mov
lahf
outsl
inc
nop
cmp
mov
repz
movsl
dec
cmpsl
sbb
ret
sbb
push
sub
lods
mov
sub
repnz
jg
or
mov
push
mov
xchg
nop
js
pop
dec
inc
faddl
xchg
cmp
ja
daa
push
jl
gs
xlat
mov
xchg
std
test
xor
lock
dec
inc
arpl
je
mov
cmpsb
lret
push
cmp
xor
xchg
popf
cld
sbb
mov
dec
pusha
addl
fnstcw
add
rcll
test
mov
sub
adc
rclb
cmp
jg
imul
out
sbb
adc
mov
ret
decl
push
mov
data16
fidivs
push
cs
imul
mov
pop
pusha
aam
int3
lods
aam
ffreep
repz
mov
xchg
mov
inc
fcmovnbe
fiadds
hlt
in
bound
and
fisttps
aaa
and
lahf
pop
test
pop
cmp
fcmovu
loope
scas
mov
out
lds
push
lods
push
push
repnz
cld
lods
jne
in
xchg
repnz
or
push
push
cli
cmp
fidivs
fdivs
add
mov
into
and
aas
mov
mov
test
pop
int3
mov
cmp
lcall
outsb
cmpsb
mov
pop
jmpw
mov
or
test
jge
push
jno
sub
jo
xchg
lock
in
lods
outsl
cmovle
sbb
pop
lcall
push
and
mov
repnz
int
mov
arpl
jmp
sub
pop
push
xchg
stc
das
cmp
push
shll
mov
mov
out
xchg
out
push
shll
xor
or
mov
jmp
and
push
pushw
jl
call
add
inc
push
fists
sub
rolb
pop
lret
mov
inc
push
mov
or
sar
xchg
andb
or
rcll
fimuls
adc
lretw
adc
fcmovbe
mov
call
xchg
mov
out
mov
fldt
jno
in
imul
mov
sub
mov
push
lods
or
and
mov
fcmovnbe
dec
in
jbe
xor
lret
aas
sbb
icebp
jae
shrb
lds
in
andb
cwtl
scas
icebp
cmp
xchg
pushf
imul
inc
mov
push
scas
mov
lods
jle
lret
jo
cmp
or
pushf
sbbl
xlat
ret
inc
cmp
adc
gs
dec
lret
push
iret
mov
pop
add
and
mov
scas
clc
and
or
mov
pop
mov
dec
pusha
mov
cmp
jb
mov
dec
jmp
mov
jg
cmp
repz
dec
out
mov
out
xor
mov
xor
je
mov
psrad
stos
pop
push
iret
addr16
out
outsb
or
adc
jno
int3
repnz
addr16
sub
sbb
push
scas
js
or
dec
or
cmp
push
imul
enter
pop
leave
sub
ret
pop
mov
iret
cmp
push
mov
daa
das
sbb
cmp
ja
cwtl
push
jp
flds
es
push
lods
push
sub
sbb
gs
jnp
ret
shlb
mov
and
jo
pop
xor
mov
ljmpw
push
popf
and
andb
mov
cmp
pop
leave
adc
hlt
daa
jns
xchg
xchg
aaa
sub
xor
bound
dec
cmpl
xchg
push
xor
lods
lret
ss
cmp
mov
dec
ja
imul
jge
mov
jg
stos
cmp
inc
fcompl
dec
add
sti
lahf
cmp
es
out
xor
and
sub
push
mov
arpl
and
dec
rcrl
inc
push
cmp
cmp
push
jle
clc
adc
lahf
sub
stos
mov
cmp
in
ds
xor
inc
mov
lret
mov
cmpsl
xor
xor
jecxz
xor
stos
out
pop
mov
mov
mov
popf
push
sub
cmp
mov
and
push
xor
push
sub
xchg
adc
js
or
add
add
sub
push
lcall
mov
sbb
dec
mov
xlat
fidivl
push
xchg
lcall
cmp
decb
jbe
ja
mov
dec
push
adc
mov
jne
cmp
add
mov
jle
push
xor
jnp
sub
jmp
xchg
repz
ficoms
jb
stos
cmp
jg
jmp
pop
enter
pop
and
and
or
repz
mov
js
ret
mov
dec
add
pop
dec
inc
jge
xchg
roll
mov
and
xor
test
int3
push
ljmp
jb
or
test
and
inc
pop
push
lahf
cwtl
dec
repz
and
push
enter
pop
ss
cmp
cmp
lods
xor
sbb
fsubs
push
orb
jmp
cmp
mov
sub
enter
bound
lods
cltd
cmp
int3
adc
add
cmc
push
movsl
js
aas
mov
and
jge
pusha
ja
jl
out
lahf
mov
jge
or
push
in
jp
shrl
jae
ja
clc
ret
pop
jae
jbe
sahf
shrd
sarb
jne
nop
pop
inc
add
adc
push
mov
enter
xor
call
xchg
push
popf
fisubrl
or
sub
cmp
cld
arpl
pop
or
jbe
dec
cwtl
jbe
orb
inc
adc
aaa
gs
stc
imul
fnstsw
in
push
fiaddl
pusha
mov
xchg
mov
jecxz
ficomps
inc
cmp
fwait
int3
test
lds
push
in
adc
cmp
mov
adcl
hlt
ds
rorl
sbb
adc
add
inc
int
mov
jecxz
inc
cltd
xchg
inc
movsb
xchg
jge
test
pop
and
mov
push
dec
adcl
mov
clc
imul
pusha
xchg
mov
sub
cmpsb
notl
pop
add
inc
push
sub
dec
dec
imul
cmp
notb
cld
pop
xchg
stos
adc
jnp
sub
mov
sbb
clc
lock
fnsave
cs
push
dec
push
cmp
stos
adc
jae
js
test
loop
sub
push
adc
cltd
ja
lds
xor
xchg
cs
pop
xchg
out
pop
dec
sub
inc
or
jo
push
lods
out
mov
mov
lret
int
stc
adc
inc
inc
xlat
mov
jl
aas
ret
push
ret
dec
test
in
outsb
xlat
add
pop
jb
and
dec
push
jb
or
cwtl
pushf
and
sbb
mov
jg
push
inc
sarb
scas
mov
popf
push
pop
fdiv
fistpll
add
insl
mov
daa
sti
mov
cmp
push
and
xchg
add
inc
pushf
dec
fstpt
xchg
or
xor
cmp
std
or
inc
cmpsb
add
or
filds
and
fmul
into
or
repnz
test
aas
scas
cmc
mov
stos
add
push
ss
sub
out
in
sbb
inc
aaa
sbb
rol
lods
add
or
push
lea
int3
shll
adc
add
dec
clc
call
in
and
mov
test
dec
testb
inc
imul
fcomps
repnz
adc
movsl
mov
jb
mov
imul
cmp
or
jo
insl
int3
mov
or
das
ljmp
xadd
jl
add
stos
arpl
adc
or
fadds
and
jmp
xor
lods
push
or
enter
inc
add
sub
add
mov
xchg
pop
je
into
pop
test
add
mov
push
idiv
rcll
repnz
das
sbb
mov
fnop
or
out
pop
insl
dec
aaa
fcmovnb
or
enter
out
loope
push
jo
fimull
pop
push
mov
imul
xor
out
sbb
cwtl
sarb
out
pop
mov
mov
push
scas
call
loopne
push
lcall
push
lds
push
sbb
mov
dec
movsb
mov
push
mov
and
add
pop
inc
fldl
popf
or
inc
xor
jecxz
sar
mov
in
sub
ljmp
xchg
pop
dec
clc
jno
xlat
or
push
sub
imul
fwait
cmp
lret
dec
mov
sub
pop
xchg
ret
outsb
fists
lods
jns
mov
mov
cmpsb
jg
dec
add
je
pop
mov
jmp
mov
xchg
lock
pop
lods
rcrb
xor
jne
pop
or
pop
cmp
cmp
xor
pop
inc
jae
and
sbb
sub
sub
js
sti
pushf
cmp
mov
lock
in
scas
jl
push
jge
pusha
inc
lods
gs
push
push
xchg
push
jne
andb
int
ds
nop
xor
loop
imul
clc
hlt
sbb
mov
mov
push
adc
pop
lods
mov
ja
sub
aaa
in
shrl
fisttpll
mov
xor
xchg
dec
lret
add
lods
bound
and
cmp
loop
aas
add
xchg
pop
add
fwait
das
xchg
pop
out
testl
xlat
aam
xchg
mov
mov
inc
cli
dec
mov
ret
nop
jecxz
sbb
pop
add
push
mov
aas
aam
jno
insb
aaa
icebp
jecxz
xchg
dec
ret
dec
mov
scas
mov
mov
sbb
dec
icebp
adc
mov
or
dec
mov
add
mov
pop
jno
out
pushf
mov
ds
sti
push
pop
push
jnp
inc
add
cli
movsb
stos
daa
and
sub
clc
stos
je
mov
aad
fisubl
dec
jbe
rolb
xchg
jg
clc
hlt
jns
repnz
ror
sbb
xchg
inc
push
dec
roll
xor
cld
outsl
inc
jl
cmp
addr16
mov
mov
leave
pop
pop
push
movsl
jno
lock
in
dec
icebp
ds
xor
jbe
cmc
lcall
in
ja
outsl
push
or
mov
inc
repz
sub
xchg
mov
jnp
movsb
cli
inc
xor
mov
or
cwtl
inc
ret
mov
pop
daa
cmp
lea
add
mov
orb
pop
stc
arpl
mov
cmp
xor
or
cs
cmc
lahf
sbb
add
int
dec
loopne
xor
or
test
idiv
in
out
xlat
cmpsb
xor
repnz
xor
pusha
or
mov
mov
cs
jae
stc
adc
mov
leave
inc
es
scas
sub
subb
jo
adc
sub
cltd
sbb
adc
add
ja
xchg
adc
inc
fists
mov
sbb
push
loope
add
xor
cmpsl
rorb
mov
fldl
arpl
push
popf
dec
pop
lret
dec
pusha
or
and
jp
pop
into
push
popf
aam
int
sbb
inc
cmp
scas
addr16
mov
movsl
jp
cltd
sub
push
cmp
xor
mov
jl
xor
mov
je
ljmp
lods
mov
jp
and
shl
aam
daa
mov
lock
call
movsl
inc
add
jns
mov
add
lock
dec
ja
and
xor
xor
out
cwtl
push
cltd
fcmovnu
xchg
sub
outsb
out
test
jp
sub
inc
pushf
pop
pop
add
clc
in
add
xchg
iret
pop
dec
les
mov
and
out
xchg
push
and
jmp
test
mov
lahf
xor
lds
pusha
dec
jnp
dec
fcoml
neg
and
sub
in
add
push
xchg
in
cmc
pop
jle
adc
and
jle
push
xchg
or
inc
gs
in
and
cltd
pusha
data16
frstor
inc
mov
xchg
jp
in
gs
faddl
push
or
shrl
stos
out
xchg
lods
pop
fs
stos
jns
jns
mov
stc
scas
mov
pusha
or
mov
popf
jg
cli
in
insl
cmc
inc
sub
std
gs
push
adc
ljmp
adc
mov
xor
pop
sub
lahf
pop
inc
fldenv
lret
mov
andl
and
mov
jmp
adc
rorl
xchg
loopne
lcall
pop
mov
outsl
fnsave
push
jae
pop
xchg
loope
xchg
mov
add
aam
jmp
cs
loope
mov
test
xor
xchg
icebp
mov
sub
sahf
sbb
mov
sbb
jne
inc
lret
cld
xor
mov
cwtl
cmp
lods
lods
lret
mov
pop
test
pop
jg
jns
push
mov
fldcw
lahf
jae
orb
pusha
test
imul
sbb
mov
mov
mov
xchg
divl
cmp
repnz
std
cmpl
push
xor
daa
sti
jmp
repnz
cmp
jnp
out
imul
sub
xchg
cld
mov
pop
les
pop
fisttpll
dec
xchg
or
imul
cmp
xchg
jp
aad
mov
shrb
xor
roll
repnz
nop
add
int
mov
icebp
call
aad
mov
mov
pop
rcll
jb
jnp
es
adc
insl
pusha
jp
cmp
rcr
xchg
or
and
mov
aaa
inc
movsl
jo
inc
shll
sbb
and
push
jecxz
fsubrl
and
ja
push
mov
xor
mov
hlt
call
hlt
pop
mov
mov
scas
cmp
pop
mov
inc
xlat
push
push
movd
dec
add
sbb
add
out
lcall
mov
jnp
xor
pop
lahf
jo
jmp
lahf
add
jno
ret
popa
mul
lcall
jl
cmp
mov
jnp
sub
jg
fistpll
aas
jp
xchg
aaa
orb
nop
jne
mov
xor
loopne
ss
jno
movsb
imul
stc
out
mov
sub
lods
jns
mov
int3
out
sbb
sbb
add
out
pop
sbb
adc
and
or
fsub
pop
cli
pop
mov
pusha
xchg
pusha
mov
adc
jne
test
push
and
jge
mov
inc
lods
cmp
int3
outsb
sbb
push
pop
and
adc
mov
xchg
sbb
or
add
inc
repnz
cmpsl
xor
cmpsl
push
loop
cltd
mov
das
mov
test
jne
cwtl
dec
pop
sub
imull
mov
push
aad
adc
loope
push
mov
daa
add
pop
mov
dec
sbb
sub
fistpll
push
in
jp
and
push
in
dec
sub
push
inc
mov
movsb
leave
fildll
mov
mov
repnz
mov
adc
repnz
cmp
dec
popf
in
xor
sub
loope
or
insl
pop
push
inc
pushf
iret
ljmp
add
sbb
cmp
ljmp
xabort
dec
jb
jo
mov
pop
ds
aad
xchg
fists
jbe
pop
mov
je
adc
cmp
testl
mov
mov
fdivp
or
lods
dec
xor
fsubp
lcall
jge
pop
mov
sub
cmpsl
pop
fwait
es
sbb
test
inc
push
es
inc
fldcw
js
xor
repnz
push
jbe
pop
xchg
popf
pop
or
push
add
add
dec
xor
or
cmp
push
jecxz
cmp
add
icebp
imul
mov
fdivs
add
enter
mov
mov
push
add
push
inc
xor
xchg
add
mov
clc
jecxz
shrb
popf
jge
lret
xchg
lahf
mov
or
or
imul
dec
xchg
ror
and
imul
mov
popa
add
and
push
dec
inc
push
sub
pop
clc
movsb
loop
mov
test
jae
roll
mov
xor
fsts
cmp
jo
sbb
shl
add
repnz
mov
xor
mov
fsubr
int3
or
stos
xor
jg
pop
movsb
out
jge
push
imul
sub
and
lcall
lea
cli
inc
js
cmp
mov
test
jge
jbe
xchg
xchg
inc
les
mov
cwtl
mov
cmpb
dec
or
push
xchg
cmp
in
mov
jge
les
or
mov
push
repz
jbe
and
cmc
jmp
xchg
add
lods
xchg
mov
js
divl
lock
call
jp
jg
mov
pop
pushf
out
lea
js
jns
es
cli
and
jo
or
jb
add
sub
cmp
int3
cmpl
jb
in
call
addb
sbb
test
mull
dec
dec
push
insl
iret
jg
cld
out
add
fs
xor
ret
insb
outsl
mov
pop
inc
mov
dec
cmpsl
les
loopne
aam
shll
and
aad
pop
jne
dec
lahf
mov
mov
out
aam
pop
pop
or
rcr
repnz
push
sub
int3
ljmp
and
add
cmc
pop
or
data16
dec
out
sbb
xor
mov
in
mov
mov
cmp
sbb
insb
inc
lock
adc
xchg
jbe
iret
mov
data16
or
pusha
enter
inc
out
loope
jb
or
hlt
jl
test
outsb
test
add
mov
push
pop
sub
pusha
and
repnz
mov
add
movsb
inc
test
aaa
xor
pop
xchg
je
add
pop
mov
push
adc
fimuls
out
jo
mov
aaa
jne
cmc
inc
jge
enter
xor
pop
hlt
scas
popf
push
push
xchg
sub
mov
mov
xor
push
xorl
into
popa
mov
pop
cmp
xchg
mov
mov
enter
mov
push
aaa
rol
jb
dec
pop
push
lret
in
pop
dec
mov
out
pop
cmp
inc
and
push
push
mov
sbb
mov
mov
loope
pop
inc
ficoms
lea
jp
data16
out
test
mov
cmp
mov
jecxz
rorb
fnstcw
rolb
mov
fisubl
bound
testl
xor
ljmp
mov
addb
jle
imul
ror
and
shl
mov
jnp
or
out
cmp
jnp
jns
pushl
clc
add
mov
repnz
push
push
fwait
push
jb
mov
cltd
pop
mov
mov
lods
pop
lods
adcl
ret
ret
sahf
cmp
and
dec
xor
adc
mov
sbb
test
das
add
fbld
add
lret
jbe
leave
push
mov
cmp
mov
lock
hlt
mov
movsb
cmp
shlb
outsb
lret
test
ds
xchg
rcrb
push
and
jmp
xor
mov
ret
sbb
testl
std
mov
add
cmp
inc
sbb
xchg
bound
ljmp
mov
lock
fs
or
pusha
out
pop
dec
or
pushf
iret
sti
xor
cmp
xchg
mov
call
bts
jge
or
pop
cwtl
std
mov
xchg
imul
pop
jno
adc
inc
loopne
dec
out
test
sbb
mov
bound
mov
jl
jecxz
mov
xlat
aam
scas
mov
outsb
lods
jle
out
mov
rcrb
mov
push
mov
cmpsb
popf
mov
ret
mov
ss
mov
pusha
roll
lea
aaa
hlt
repz
sahf
jp
mov
outsb
pop
leave
repz
xor
icebp
cmp
int
push
shlb
call
sbb
xchg
push
xchg
cmp
adc
popa
mov
imul
add
add
mov
and
fstp
cmp
test
rcrl
dec
pop
mov
adc
arpl
jns
sahf
xor
jl
dec
cmp
sbbw
shll
xchg
add
adc
dec
sub
aad
jnp
mov
cwtl
in
pop
jle
xchg
in
sarl
cmp
add
loop
cmpsl
inc
aad
cmpsl
or
div
mov
inc
pop
mov
xor
push
xor
hlt
sbb
dec
inc
movsl
mov
insl
adc
mov
adc
rcrl
sbb
mov
xchg
cmpsb
arpl
ja
push
sahf
loop
add
shll
push
push
mov
jne
push
xchg
adc
jg
add
adc
test
or
cli
mov
popf
mov
sub
cmp
inc
push
xchg
popa
push
les
not
arpl
mov
push
push
cmpsl
stos
imul
inc
lcall
shrl
mov
fs
in
jbe
push
in
push
pop
call
xlat
mov
rcrl
xor
insb
lret
mov
fstpt
dec
mov
jo
xlat
or
jle
xor
lea
cmp
out
ret
jne
push
jp
xchg
out
push
cmpsb
jg
rcll
mov
xor
xor
adc
test
daa
lret
lods
adcl
adc
or
adc
mov
xchg
lea
imul
leave
gs
sub
xchg
fistps
pop
imul
mov
push
arpl
push
pop
cmp
mov
popa
pop
or
sub
or
test
cmc
movsl
lods
inc
outsb
stc
dec
jnp
daa
mov
fisubrl
mov
stos
in
cmp
mov
ud1
cmpb
insl
pusha
repz
imul
mov
pushl
jl
mov
out
pop
scas
int
mov
push
gs
mov
orb
icebp
mov
xchg
dec
lods
movsl
fnstcw
adc
mov
xchg
xchg
data16
sbb
aas
push
and
mov
fidivrs
in
stos
add
jg
push
xchg
sub
and
mov
cmpsl
xchg
scas
adc
fbstp
loop
jne
sub
sub
mov
and
mov
xor
ljmp
out
dec
rclb
rolb
fs
jno
and
add
test
popa
pop
cmp
sbb
add
loope
stos
test
repnz
int
lcall
sub
ret
or
jmp
lcall
mov
cwtl
dec
and
loope
sbb
scas
sub
xor
repz
and
push
xor
cltd
sbb
out
clc
fnstcw
leave
mov
ljmp
cmp
xchg
hlt
adc
jmp
leave
jp
xchg
rorl
add
push
mov
je
xor
sub
push
inc
stos
fsubs
inc
jg
push
xchg
mov
and
dec
daa
lock
push
cmp
push
pop
pop
mov
xor
mov
jecxz
into
and
in
out
lret
fsubl
mov
push
mov
xlat
pop
mov
movsl
jo
idivl
xchg
cltd
push
je
test
imul
mov
fdivrp
sub
adc
push
xor
sub
and
gs
mov
jle
iret
enter
sbb
mov
pop
out
cmp
cmp
dec
and
mov
imul
cmp
and
push
pusha
mov
pop
cmp
pop
adc
out
jge
movsl
testl
jle
dec
mov
jg
ds
xchg
mov
arpl
stc
jae
push
add
xchg
rorl
add
sbb
or
iret
inc
dec
mov
ja
mov
push
push
test
push
mov
cmp
insl
xor
inc
xchg
pop
outsb
mov
int3
je
cmpsl
enter
les
repz
ret
pop
cmp
and
mov
jle
xchg
and
call
fdivrp
ret
and
push
xlat
adc
cwtl
mov
xor
sub
xchg
xchg
pop
xor
call
jecxz
sbb
popa
in
dec
fwait
sbb
not
imul
dec
das
mov
sub
mov
add
adc
ds
out
sub
test
inc
push
mov
push
lret
jae
inc
jns
pop
adc
jo
xchg
xor
or
or
add
sub
movsb
int3
inc
test
insb
sarb
sti
adc
stos
bound
cmp
adcl
xor
or
pushf
mov
mov
repnz
jle
sbb
pop
and
subb
dec
lods
mov
pop
bound
mov
mov
ret
pop
cmpsl
xchg
pushl
adc
int3
shrl
cltd
jp
dec
pop
cmc
sub
mov
stc
mov
loopne
shll
bound
test
push
mov
or
loope
ret
jge
cwtl
mov
sub
pushl
xor
lds
addl
push
loop
fs
cmp
add
sub
mov
in
stc
test
xchg
decb
sbb
push
insb
sub
cmp
add
inc
jnp
sub
mov
pushf
adcl
dec
testb
or
inc
jl
inc
mov
adc
and
add
pop
xchg
lea
mov
jns
push
xor
xor
dec
xchg
xlat
pop
sub
in
lcall
lds
inc
in
stos
ss
rorl
fwait
popa
sub
jne
lahf
dec
cmc
adc
xor
or
lcall
and
loope
sbb
and
push
cmp
and
into
inc
lret
xor
div
cmpsl
enter
xor
leave
ja
push
or
int
dec
dec
xchg
add
add
inc
cmp
jl
cld
scas
push
push
mov
shr
cmpsb
fcoms
fadds
or
aad
cmpsb
shrb
into
pop
adc
sub
push
push
je
scas
fwait
xchg
or
xor
cmp
pop
fsubp
aaa
out
pop
ss
loopne
lcall
mov
push
in
daa
push
mov
in
pop
add
lret
add
push
mov
scas
mov
cs
jp
jge
inc
adc
in
daa
jge
adc
cwtl
in
xchg
aam
scas
ja
mov
push
ss
popf
mov
fisubl
shlb
push
repnz
das
lods
in
jmp
rorb
fmuls
adcl
add
repnz
dec
and
push
push
jle
push
ror
movsl
pop
jae
clc
mov
fildll
mov
push
jo
sbb
icebp
xor
add
daa
sub
cmp
jge
inc
mov
shl
xchg
imul
inc
mov
mov
shlb
icebp
cmp
mov
sbb
sahf
push
in
mov
out
movsb
inc
rcrl
das
out
push
mov
add
daa
nop
sub
test
popf
insb
iret
out
imul
mov
sbb
out
inc
ja
mov
lods
mov
push
addl
outsb
rorl
adc
ret
fsubl
push
or
hlt
jecxz
fcomi
std
lods
jb
xchg
test
jp
sbb
stc
or
mov
mov
xor
and
ret
clc
mull
cmp
fnstcw
cmpsb
sbb
dec
add
xlat
cmp
daa
push
pop
mov
push
test
mov
std
movsl
and
push
push
fcoml
cwtl
lea
push
stos
loop
out
sbbl
pop
insb
add
in
fidivrl
push
xchg
bound
sbb
push
mov
ss
lea
test
sahf
loopne
sub
stos
and
push
cmp
fisttpl
sbb
mov
dec
mov
mov
sub
popl
mov
jg
mov
dec
xchg
icebp
and
cmpsb
pop
test
sbb
cmc
add
push
xor
xchg
outsb
mov
mov
je
flds
in
mov
sub
and
push
mov
ss
dec
mov
or
cmpsl
mov
bsr
jl
clc
xor
xorb
inc
mov
cmpsb
das
cmpsl
sbb
test
out
pop
mov
jo
arpl
cltd
lods
jns
mov
push
clc
fimull
pop
push
add
insb
mov
add
sub
in
pushf
adc
mov
loop
jmp
das
push
data16
outsl
pop
fnsave
movsl
push
pop
loopne
jle
mov
or
mov
jl
rcll
bound
dec
in
push
push
movsb
int3
pop
cmp
jmp
xchg
xchg
dec
outsl
push
out
inc
cld
arpl
es
sub
sbb
inc
add
inc
imull
and
je
addl
push
xor
iret
adc
call
add
mov
cwtl
daa
mov
jo
clc
pop
repz
aaa
push
xchg
das
add
lret
jecxz
xchg
mov
sub
icebp
push
jbe
and
scas
test
cmp
jno
pop
aaa
mov
iret
push
add
les
mov
add
test
cmpsb
cwtl
mov
and
cmp
mov
pop
inc
mov
add
cmpsl
js
mov
mov
fnsave
mov
jne
jecxz
loope
mov
cmp
dec
scas
jl
xor
jo
test
xchg
es
arpl
add
sbb
ret
stc
loop
daa
xor
ja
sbb
test
sub
adc
cmp
fmuls
push
sbb
std
or
in
test
jnp
mov
pop
pop
lock
bound
aam
rcl
pop
xchg
mov
xchg
aas
dec
ss
and
cmpb
lock
and
fsub
into
loopne
and
ficompl
divl
pushf
add
test
sub
popf
in
shrb
into
pop
iret
in
dec
inc
adc
cmp
cmp
xchg
stc
cltd
mov
fnstsw
dec
fwait
xor
inc
std
xchg
leave
dec
inc
push
cltd
xchg
jmp
addr16
mov
fcoms
call
jno
cmp
bndldx
int3
stos
and
xchg
in
cmp
fistpl
in
scas
movsb
cmc
jb
movsb
sbb
mov
jbe
sbbl
inc
jne
arpl
ja
mov
push
cld
or
pop
jbe
aas
add
sbb
xchg
mov
mov
insb
pop
aaa
shr
jno
jle
jno
add
popa
adcb
mov
mov
push
imul
rorb
and
sbb
and
add
jbe
clc
push
in
pop
sti
dec
cmc
and
lock
out
jmp
arpl
cmp
mov
jge
mov
adcb
in
addb
mov
adc
out
inc
xchg
mov
adc
mov
cld
es
repz
xchg
frstor
sbb
inc
call
push
arpl
js
stc
pop
push
mov
cmpl
es
mov
rcl
imul
mov
mov
repz
jp
movsl
leave
mov
lahf
jns
jbe
jg
mov
mov
xchg
dec
jge
insb
pop
jge
pushf
jmp
inc
pop
lock
or
inc
mov
int3
jp
xchg
scas
dec
jmp
jecxz
call
cli
and
fsubr
dec
pop
mov
pop
jl
lea
cmpsl
push
inc
pusha
outsb
push
and
imul
push
and
inc
or
mov
dec
mov
inc
fisubs
les
xchg
sub
sbb
pop
and
test
pop
jne
leave
and
lds
adc
rorb
flds
sbb
fstpt
and
mov
ds
rolb
xchg
cmp
dec
rolb
mov
aam
loop
cmpsb
decl
add
rorl
dec
or
jmp
xor
xchg
add
in
xor
cwtl
mov
mov
ja
inc
sar
cmpsb
sub
xor
sbb
cmpsl
jno
cmp
add
xlat
das
and
daa
jl
les
in
pop
daa
in
sub
inc
cmp
in
outsb
daa
push
pusha
int
sbb
in
mov
adc
mov
jl
test
jno
and
es
arpl
sbb
push
ffreep
cltd
pop
dec
call
mov
add
imul
xor
or
mov
dec
push
ficoml
call
jmp
imul
ja
imul
sbb
into
mov
push
imulb
push
or
movsl
jge
loopne
out
mov
iret
rcrb
out
sub
xor
push
movsl
cmpsl
pop
dec
jle
shlb
shl
nop
out
lea
add
inc
dec
out
ret
jo
imul
add
pop
dec
rorl
cmp
dec
les
push
push
insb
iret
mov
pusha
inc
mov
push
mov
add
pop
das
mov
add
jo
push
mov
inc
add
xchg
bound
cltd
not
add
push
xor
repz
mov
push
pandn
or
mov
xor
mov
cmpsb
push
fildll
and
push
mov
leave
xchg
dec
mov
call
jno
mov
fimuls
aas
lcall
out
shl
cmp
lods
int
jl
jl
and
ret
xchg
int3
je
outsl
nop
cmp
xor
sub
mov
adc
sub
out
or
adc
add
mov
push
jg
int
daa
fs
inc
ret
or
or
jg
int3
jae
mov
cs
mov
mov
inc
mov
test
sub
fstp
sub
aam
pop
jmp
addb
pop
adc
pop
dec
fidivl
adc
mov
jb
sbb
pop
xor
nop
fldt
cmpsb
hlt
lcall
add
cld
pushf
add
outsl
cmp
push
mov
add
xchg
pushf
jg
icebp
pop
clc
icebp
mov
xchg
or
adc
jmp
cld
stc
enter
cmc
xor
mov
sbb
out
fsub
scas
push
fcoml
cs
xor
sub
push
lahf
pop
mov
mov
jnp
leave
mov
cmp
jp
cltd
pop
pop
xchg
push
fcmovbe
inc
out
out
hlt
push
fsts
jno
adc
js
mov
mov
shll
pop
mov
mov
or
jb
xchg
in
inc
orb
loopnew
sbb
lcall
pop
cmp
add
and
sahf
cmp
mov
ret
rcr
in
arpl
jno
ss
dec
mulb
aaa
mov
sub
dec
cmp
add
xchg
dec
ret
cltd
mov
and
aaa
xchg
pop
mov
sbb
jmp
jno
add
flds
adc
sbb
cmp
sbb
dec
mov
pop
pop
adc
leave
adc
iret
sbb
test
or
aam
pop
insl
pop
mov
jl
mov
xchg
xchg
add
xchg
lods
push
loopne
test
repz
jp
or
xchg
mov
and
pop
cmp
in
pop
mov
cmp
push
imul
lgs
outsl
outsb
add
rol
adc
dec
push
xchg
int3
jo
icebp
sbb
imul
gs
and
jb
shll
cltd
xchg
sarl
jl
adc
xchg
nop
jp
dec
or
lret
jae
xchg
sti
loopne
test
pop
and
pop
js
sub
push
ficomps
aad
insl
icebp
out
xchg
outsb
imul
adc
xor
xor
loop
xorl
rcl
call
sahf
aaa
in
mov
sub
pop
fnstsw
shr
lret
jp
push
in
shlb
adc
pop
add
cmp
xchg
out
je
xor
xor
and
in
xchg
aad
xchg
cmp
sub
jae
cmp
cmpsb
ljmp
cs
out
sti
jo
add
pop
loope
sarb
cmp
adc
es
mov
adc
jmp
lods
test
jge
pop
mov
push
cmpsb
test
lret
mov
jecxz
je
xchg
jge
into
lret
lret
lret
and
aad
movsb
in
mov
and
mov
mov
addr16
movsl
or
and
lcall
js
pop
inc
inc
cmp
dec
pop
jg
imul
ficomps
pop
pop
frstpm(287
dec
mov
lcall
inc
add
in
insl
in
call
aas
cmpsb
test
movsb
mov
orb
add
sarb
lds
mov
pop
out
inc
daa
shlb
inc
mov
sbb
push
xor
outsb
aad
test
loope
adc
cld
ljmp
rcl
push
add
fmul
enterw
xchg
clc
mov
mov
mov
inc
arpl
or
in
test
scas
push
outsb
and
add
mov
push
and
xchg
enter
fisttps
pop
mov
xchg
lods
mov
cmp
and
mov
sbb
sub
adc
testb
js
xchg
ret
xorb
xchg
sub
adc
cmp
repz
mov
xor
daa
in
mov
test
add
lods
bound
adc
js
inc
out
lcall
sbb
in
ja
std
lds
mov
lahf
leave
mull
xchg
and
cmp
push
jo
dec
lods
fisubl
movsl
pop
repnz
loopne
dec
aaa
add
inc
dec
lods
cmpsb
aas
and
pop
loope
push
dec
adc
cmp
mov
int3
mov
or
push
fimuls
movsl
test
jg
enter
add
jle
std
movsl
jge
mulb
mov
lahf
push
pusha
push
jmp
es
scas
add
bound
test
sub
add
pop
push
enter
sti
dec
mov
out
cmp
ret
std
jnp
inc
jl
mov
push
nop
mov
fs
lock
mov
mov
jle
add
cmp
sbbl
inc
pop
mov
lret
jmp
sub
jae
lods
pusha
sbb
sbb
jb
mov
clc
sti
mull
xlat
pop
das
xchg
sahf
xchg
into
mov
mov
mov
js
js
sub
testb
inc
jb
jmp
mov
mov
mov
bound
je
cmp
and
push
loope
shlb
fs
cmp
mov
adc
inc
cmpsb
ja
js
add
cmp
mov
jecxz
ret
push
call
pushf
jo
inc
bound
pop
pop
rorl
or
repnz
dec
aam
mov
mov
jb
push
inc
cmp
les
mov
inc
ljmp
jnp
stos
add
jmp
jne
rcrl
es
xorb
mov
mov
fildll
punpcklwd
mov
lahf
xor
mov
xlat
and
lds
jno
inc
cmp
loop
in
mov
sub
scas
adc
pop
pop
bound
and
ljmp
xchg
cmpsb
xchg
dec
jle
dec
sbb
xchg
inc
xchg
movsb
xchg
jns
es
cmp
and
ja
popa
mov
out
sub
cmp
cli
movsb
shlb
push
push
in
add
and
cmpsb
or
dec
xchg
lock
dec
inc
fs
mov
and
rcll
xchg
xchg
pusha
mov
or
cli
or
jns
mov
outsl
cmpsb
seta
mov
xchg
push
sahf
mov
int
mov
xchg
sub
and
call
dec
cmp
popf
cltd
jmp
and
cli
test
or
arpl
dec
and
inc
xchg
dec
or
push
sub
call
fcomps
cwtl
adc
or
out
out
insl
inc
loope
mov
dec
adc
xchg
lea
or
pop
mov
outsb
mov
aam
fstpl
dec
mov
mov
es
jno
cmpsl
call
adc
popa
jns
xchg
push
movsl
or
push
fimull
bound
cmp
pop
jle
mov
mov
sbb
roll
pop
testl
cmp
and
ds
jno
orb
jnp
add
add
pop
repz
mov
pop
fwait
push
push
stos
repnz
lahf
loope
fldenv
push
repz
xor
test
popa
mov
mov
mov
shll
xor
cmp
cmp
dec
dec
jge
add
xor
dec
clc
lahf
jnp
cwtl
push
push
in
cmp
sahf
xchg
faddp
mov
cwtl
loope
lock
push
int
int3
mov
xchg
push
mov
shll
mov
dec
push
inc
xor
fisubrs
incb
or
fmul
int3
jecxz
lret
or
pop
pop
jb
jecxz
sub
push
jp
jmp
jne
cmpsb
stc
pop
xor
add
loopne
pop
cld
add
js
mov
jmp
push
aam
mov
cmpsb
mov
sub
js
lods
popa
pop
push
mov
lods
scas
jmp
mov
fnstcw
mov
jno
fisttpll
add
imul
iret
xor
shlb
jb
and
mov
sbb
xchg
das
sbb
loope
sar
lock
fdivr
leave
test
add
lret
fisttps
ja
fiadds
mov
inc
jne
sti
test
ret
adc
adc
pop
sub
pop
js
stos
dec
jp
shlb
inc
pop
out
rdpmc
ss
sbb
xchg
dec
popa
jl
inc
or
xchg
dec
aad
or
adc
dec
iret
rorl
pop
ficompl
add
lods
popa
mov
aas
leave
add
add
rorb
push
movb
addr16
lock
rcrl
xor
sbb
xchg
scas
push
add
push
inc
xchg
pop
mov
lahf
adc
popa
mov
push
push
popa
rcl
or
or
aaa
jno
ret
push
in
daa
test
sahf
lods
fwait
or
scas
cli
or
sahf
jge
enter
out
sub
sub
pushf
dec
xchg
pop
fsub
push
jb
sahf
push
sbb
jecxz
cltd
xlat
out
and
jmp
xchg
pop
mov
movsl
sbb
negl
add
or
sub
fcmovu
incl
jb
xor
sbb
lods
or
lret
gs
or
sub
fisubs
repnz
push
sbb
jmp
mov
pop
mov
cmp
insb
int3
push
push
daa
mov
sub
adc
lea
jo
test
fdecstp
jo
sti
popa
or
das
mov
and
sbb
subl
jmp
aad
inc
push
xchg
adc
repnz
fucomp
pop
iret
push
imul
mov
addr16
loop
pop
pop
mov
aas
xlat
test
inc
nopl
sarl
jnp
filds
fwait
pushf
adc
pop
fcoms
shrb
inc
cmp
pop
pushw
xchg
stc
outsb
je
xchg
pop
das
rorl
mov
int3
xor
loopne
sbb
insb
cmpsb
imul
jb
cmp
mov
filds
hlt
mov
jbe
xor
addr16
and
mov
add
inc
rorb
popf
sub
insl
inc
xchg
mov
cmp
jmp
ja
out
sub
push
dec
jmp
push
std
or
dec
aaa
mov
fistps
cli
sbb
imul
adc
js
or
loopne
pushf
test
mov
pop
push
into
xor
inc
adc
xchg
jmp
push
fs
scas
jp
mov
add
fwait
cmp
push
shll
push
mov
add
das
stc
popa
in
mov
or
roll
mov
mov
xor
and
test
mov
push
adc
dec
dec
push
mov
movsl
daa
shlb
mov
lods
enter
call
push
push
sbb
int3
pop
sbb
es
and
xchg
pusha
xlat
aad
inc
push
xbegin
dec
sbb
add
sbb
int
add
stc
aaa
push
fsubl
fsubrs
cmp
in
jnp
adc
cmp
lahf
add
xchg
inc
outsl
jns
ret
and
icebp
loop
dec
push
xor
mov
mov
jl
or
pop
xor
jnp
mov
shr
lcall
sbb
shr
inc
xor
movsl
jle
add
xor
movsl
mov
mov
imul
js
xchg
in
inc
pop
cmpsl
sub
test
fldcw
popf
sbb
out
push
lret
scas
pop
and
pop
jbe
bound
xor
shrb
sub
mov
jae
jp
or
hlt
cmpb
cmp
out
xchg
sub
adc
xor
lock
xor
jnp
or
stc
fs
mov
cmp
push
cli
pop
mov
mov
fs
popa
in
sbb
mov
sti
mov
je
bound
push
mov
lock
test
mov
movsl
mov
aas
jb
mov
push
hlt
xlat
push
lods
aas
pop
jp
std
cmp
imul
stos
dec
dec
push
lods
or
out
sub
mov
std
inc
xchg
mov
icebp
test
xor
xchg
add
xor
adc
adc
jp
mov
mov
in
inc
or
and
pop
adc
xor
mov
lods
dec
mov
dec
negl
clc
pushf
dec
cmp
and
adc
test
stos
data16
xorl
pop
outsl
adc
out
fdivrs
jp
sub
les
rcr
jge
jle
dec
rcrl
add
pusha
pop
ss
cli
outsl
clc
lods
out
stos
sbb
int3
mov
and
sub
std
movsb
sub
adc
ja
xchg
mov
jecxz
loope
lods
lods
jp
mov
js
aam
sub
test
scas
clc
test
ss
ljmp
sub
ja
or
and
pop
jae
and
cmp
mov
adc
mov
push
push
pop
or
addr16
adc
test
nop
out
jo
imul
xchg
adc
data16
push
push
js
fbstp
in
nop
les
arpl
mov
shrd
les
into
orl
push
test
push
stos
xchg
jle
scas
sub
push
inc
sbb
mov
aad
mov
js
sub
pop
arpl
fwait
icebp
fadds
loop
pop
jae
jecxz
icebp
mov
sub
bound
mov
pop
xor
xchg
sub
mov
ds
adc
and
dec
mov
lea
frstor
testb
jae
out
arpl
inc
icebp
inc
xchg
pop
xchg
out
push
loope
insl
mov
mov
sub
aam
sbb
in
ds
cmpsl
mov
dec
out
jl
and
add
cmp
test
out
jecxz
adc
adc
in
stc
pop
add
push
stc
adc
jns
pop
or
adc
rol
push
int3
mov
das
test
mov
mov
insb
fwait
mov
mov
je
outsl
js
repz
push
push
xchg
add
lahf
and
xlat
push
sub
scas
mov
cmp
loop
sbb
data16
fadd
insb
mov
loopne
lret
lret
dec
into
jno
dec
shrl
xchg
mov
xchg
fmull
xor
filds
in
repz
js
mov
imul
inc
mov
mov
dec
js
aad
lret
fdivr
cmp
and
add
xorps
stos
adc
fcoms
dec
mov
jle
pop
inc
fsts
adc
neg
mov
xchg
into
aaa
sub
xchg
loope
bound
stos
push
jl
jns
mov
jg
sahf
pop
aaa
les
sub
shll
outsb
pop
scas
test
xlat
push
fmull
mov
mov
hlt
adc
and
xor
xrelease
cmp
add
sbb
sbb
out
mov
rorl
mov
shrl
fmuls
int3
mov
mov
and
inc
mov
insb
xor
or
loopne
or
icebp
mov
sbb
les
pop
adc
mov
mov
lods
push
mov
jns
fsubs
dec
inc
scas
bound
js
neg
jo
jg
in
cmp
mov
push
pop
sub
add
cli
add
movsb
movsb
dec
xchg
lods
fisubl
cmpsb
mov
mov
icebp
ret
dec
and
jae
xor
das
and
sub
aad
xor
mov
or
push
cli
and
test
dec
mov
fstpl
inc
enter
xlat
gs
dec
enter
aas
faddl
push
div
xchg
sbb
mov
inc
aas
dec
lods
or
icebp
insl
mov
out
lahf
xlat
push
xor
or
xchg
adc
test
cmp
scas
and
call
ss
cmpb
aad
xchg
movsb
xor
in
lret
xchg
push
mov
hlt
fcoms
cmp
hlt
cmp
cs
xor
dec
jle
xor
inc
mov
andl
pop
lods
clc
loopne
inc
repz
aaa
push
inc
xor
sbb
mov
aaa
sub
stc
dec
arpl
jmp
inc
mov
test
popa
mov
adc
sub
push
dec
scas
data16
xor
imul
scas
pop
stc
jno
pop
lret
xchg
test
sarl
lods
test
push
fdivs
push
nop
or
popa
add
add
jle
es
xor
fdivs
filds
mov
and
pop
xchg
or
iret
mov
in
mov
fwait
push
jle
jae
cmc
negl
cli
mov
lods
aad
dec
fnstcw
jo
enter
enter
leave
cmp
cmc
sarb
sahf
jbe
xchg
rorb
out
out
and
mov
repnz
and
dec
xor
or
adc
mov
ds
and
push
out
addr16
clc
data16
mov
xor
stos
mov
in
clc
gs
pop
test
jo
jb
aam
subb
bound
adc
cmp
add
adc
xchg
std
pop
shlb
add
stos
aam
lds
mov
idiv
sarl
jne
mov
dec
leave
outsb
xchg
sub
xor
or
and
jno
push
sub
loope
fnsave
xchg
test
inc
mov
les
push
dec
cli
rolb
sbb
mov
sub
popf
xchg
mov
sbb
mov
xor
cmp
dec
nop
sti
inc
ljmp
mov
push
pop
scas
cmp
cmc
sbb
and
movsl
int3
adc
xchg
imul
dec
jb
repz
cld
fdivrs
insb
inc
pop
je
stc
sbb
lret
pop
sbb
and
mov
std
call
stos
add
ja
int
cmp
xor
mov
mov
jle
ror
sub
jge
rcrb
dec
adc
ds
cltd
pop
or
or
mov
inc
sbb
pushf
mov
loope
xor
fists
in
fadd
or
mov
dec
dec
adc
pusha
or
xor
push
nop
jnp
lods
inc
inc
dec
mov
jnp
sub
out
pushf
and
stos
mov
push
mov
xor
xchg
fs
xlat
lcall
push
xrelease
cltd
dec
popa
push
xchg
icebp
js
inc
sub
jg
aaa
sahf
sub
popa
xchg
shrb
in
stos
ds
mov
fisubs
xor
adc
cli
call
data16
in
sarb
shlb
lods
push
or
push
sub
push
pop
out
enter
popa
xor
es
in
icebp
jge
push
push
or
or
pop
orb
mov
jge
ror
outsb
inc
ds
or
inc
xlat
out
add
jnp
iret
jbe
mov
and
push
sub
push
push
andl
jnp
and
nop
das
and
ds
repz
addr16
in
je
clc
or
xchg
scas
in
add
stos
jo
or
sbb
xor
mov
adc
loopne
or
das
lods
scas
popf
ret
add
adc
jle
mov
dec
idiv
push
sarl
inc
inc
lret
movsb
enter
popf
sbb
loop
out
mov
adc
imul
inc
iret
cwtl
mov
inc
push
mov
int
in
jmp
xchg
loopne
dec
and
inc
cld
mov
jge
sub
jg
mov
psllq
cli
sbb
repz
or
outsb
jmp
mov
add
les
xchg
and
adc
and
dec
adc
aad
pop
push
das
mov
jge
jbe
lcall
fstpl
in
test
push
jns
xor
mov
xlat
icebp
dec
fidivl
xor
and
pushf
pop
lret
inc
test
into
nop
je
nop
imul
insb
pusha
or
lret
mov
ret
add
and
sti
pushf
ja
inc
xchg
icebp
leave
in
xor
aaa
push
ret
and
scas
neg
sub
dec
hlt
xlat
aaa
push
cmp
mov
outsb
or
shrl
adc
and
insl
xlat
add
xor
aad
xchg
and
xor
dec
leave
mov
jnp
adc
incb
loop
scas
out
xchg
pop
mov
sahf
xchg
jb
scas
mov
xchg
cmc
sarb
jo
enter
pop
mov
xchg
xchg
in
fldenv
inc
fsubr
pop
in
daa
adc
test
popa
icebp
ja
jbe
jns
rcr
into
sub
push
sub
push
les
ja
pop
add
and
cmp
call
insl
jmp
movl
in
push
cld
imul
pop
xlat
dec
iret
and
in
mov
pop
fstpl
sub
and
aaa
cmp
dec
leave
cmpsl
xlat
stos
add
pop
and
xchg
jnp
mov
jo
pop
mov
rorl
cld
push
lret
or
push
in
dec
mov
push
lods
test
mov
std
test
scas
inc
mov
arpl
inc
xchg
ret
stc
subb
aam
clc
call
mov
das
pop
ret
out
cmpsb
in
push
cmp
andl
js
lock
insb
clc
add
and
fdivs
and
enter
hlt
sbb
fwait
movsb
arpl
lcall
add
dec
dec
icebp
aaa
imul
cld
ds
fdivs
outsb
test
in
icebp
mov
jecxz
pop
pop
stos
outsl
xor
ss
jae
jmp
test
lock
and
cmp
cwtl
inc
pop
push
pop
loop
repz
push
xchg
push
ret
scas
sub
xchg
aas
cmpb
xchg
lods
mov
hlt
aad
test
push
rorb
pop
loopne
daa
push
sbb
mov
rol
mov
jae
out
out
sub
ja
call
mov
mov
jge
test
inc
lods
clc
adc
dec
data16
xchg
popa
out
js
xchg
mov
cmp
adc
into
sub
lock
add
test
ret
rcll
outsb
movsl
mov
stos
das
inc
shlb
push
lods
jo
jmp
and
inc
aad
or
lock
push
fbld
insb
out
fwait
jecxz
sbb
ja
dec
xchg
xchg
inc
outsl
xchg
dec
movsb
movsl
out
in
pushf
aaa
mov
jb
or
aaa
lds
cli
add
jns
inc
mov
popa
mov
mov
mov
outsl
jg
mov
mov
ljmp
cmpsl
int3
std
mov
or
mov
adc
mov
lods
int
addr16
xchg
mov
inc
shrb
mov
pusha
test
orb
jg
loop
outsl
inc
push
scas
mov
dec
ja
jmp
stos
sub
jmp
xor
sub
or
push
nop
add
mov
mov
hlt
xchg
loopne
add
clc
dec
bound
push
iret
and
add
dec
mov
mov
ja
rcrb
mov
out
mov
popf
fcomi
sub
sti
add
dec
mov
inc
pop
sbb
cmp
xlat
aaa
sub
addb
push
and
push
fpatan
int3
add
cmpsl
jnp
jns
push
decl
inc
es
mov
xlat
mov
xor
dec
sahf
aad
sub
push
shr
js
rclb
pop
shrb
out
rorl
sbb
shll
fnstcw
js
ds
xchg
lods
xchg
lods
in
fdiv
arpl
push
arpl
mov
pop
xchg
inc
in
ja
popa
pop
pop
rcrb
sub
daa
out
xor
gs
cmp
inc
nop
or
int
popf
xor
loopne
push
sbb
test
mov
pop
cwtl
inc
cmp
das
xchg
inc
pop
test
jp
insb
int3
or
and
lcall
insb
movsl
pop
or
mov
clc
nop
xchg
and
jge
xchg
push
xor
inc
add
mov
lret
fwait
push
test
stos
movsb
ret
mov
push
cmp
in
lea
mov
test
xor
repz
data16
push
mov
fldt
cmpsl
push
testl
popf
mov
test
insb
inc
aam
lds
cmc
inc
dec
mov
mov
mov
mov
popf
push
or
imul
pop
jne
mov
aad
mov
xchg
xchg
sbb
scas
pop
movsb
cmpsb
repz
or
mov
mov
in
dec
sub
sub
mov
sbb
insb
sbb
add
cmpsl
jns
xchg
and
lahf
rcrl
popf
mov
and
dec
mov
clc
jge
sti
add
dec
inc
inc
sub
cld
cmpsl
ja
inc
in
fiaddl
adc
stos
push
dec
stos
leave
gs
adc
cltd
rcll
loopne
mov
arpl
popa
inc
xlat
fsubr
push
jb
or
out
stos
outsb
pop
pop
dec
ss
inc
jge
add
pop
mov
cmp
mov
inc
add
je
hlt
pop
mov
sub
xchg
pop
ss
mov
and
jp
mov
push
test
lret
xor
or
icebp
cld
cmp
cmc
or
sbb
mov
xchg
or
sub
rcl
and
out
push
mov
movsb
movb
nop
xor
les
rcll
sub
mov
cmp
fldl
cld
cltd
jb
pop
jl
outsb
and
jge
lret
mov
idivl
jmp
in
fdivl
pop
mull
mov
or
inc
rcll
lea
mov
and
mov
rcrl
bound
inc
xchg
pop
std
mov
lahf
gs
hlt
popf
out
rclb
enter
jge
enter
mov
imul
movsb
mov
testb
inc
das
cwtl
fs
test
cmp
aaa
mov
dec
mov
and
lock
inc
int3
movsl
jnp
mov
sar
orb
mov
pushl
jge
cmpsl
mov
push
xchg
aaa
filds
iret
xchg
imul
ds
outsl
in
mov
icebp
out
out
cld
cwtl
push
insl
outsl
xor
int
pop
inc
cld
ja
shll
scas
test
push
scas
shlb
push
inc
mov
addb
push
fisttpl
notl
pop
dec
push
arpl
inc
push
mov
dec
imul
mov
roll
mov
ja
fmull
mov
xchg
in
fiaddl
adc
pop
scas
jmp
sti
stos
lret
call
add
js
xor
xchg
sub
xor
add
mov
and
movsb
rcrl
pop
movsl
loope
jb
push
mov
cmp
lock
dec
sbb
xchg
out
xchg
xor
fs
addr16
jae
andb
xlat
xor
and
and
xor
mov
add
mov
sbb
ror
sub
cmp
adc
or
inc
push
into
xor
sub
xchg
mov
int3
and
xlat
cld
sahf
cltd
mov
jns
inc
repz
jne
jmp
push
enter
dec
push
mov
cmpb
mov
in
shll
dec
insl
cmpsb
dec
push
adc
pop
dec
repz
xchg
xchg
xchg
or
mov
aaa
xchg
inc
sub
lret
ret
mov
jne
scas
idivb
jb
jge
leave
xchg
or
pcmpgtd
dec
xchg
cmp
aaa
sbb
and
daa
and
std
and
loope
outsl
leave
adc
fstps
mov
mov
decl
fbstp
fsubrs
and
fldt
inc
lds
push
rcll
ret
iret
pusha
mov
mov
pusha
scas
js
push
xchg
add
sti
push
faddp
dec
adc
ja
xlat
out
push
pop
vrangesd
in
jp
xor
lods
dec
sti
mov
int3
or
test
adc
lds
and
movsb
sbb
out
add
push
dec
popa
sbb
mov
dec
jno
cmpsl
add
rcrb
pop
inc
daa
adc
jns
xor
fsubrl
test
sub
dec
mov
aad
cmp
xor
pop
or
push
aas
pop
add
aaa
mov
cld
nop
mov
ss
out
pop
inc
cmp
int
fs
mov
adc
in
jns
aam
inc
iret
jg
xchg
ret
fwait
pop
and
rol
sbbl
sub
data16
stc
mov
push
xor
shl
out
addr16
sub
jno
pop
adc
sbb
scas
sub
nop
pop
mov
into
xlat
fildll
jmpw
add
nop
stos
test
xchg
cs
mov
shll
ret
shrl
cmp
xor
mov
ret
divb
shll
adc
outsb
lahf
jae
jmp
lret
and
xor
stos
pop
inc
aaa
or
xchg
add
mov
jp
stos
push
iret
bound
pop
ds
leave
out
xchg
cmp
in
jno
adc
jge
adc
mov
xchg
fneni(8087
mov
xchg
jbe
fcompl
cmpsb
sbbb
mov
mov
dec
cmp
adc
pop
jl
fcoml
cmp
jge
out
inc
xorl
cli
pop
mov
dec
lock
adcb
sub
mov
jle
fisubl
cmpsl
icebp
jg
sbbl
mov
bnd
in
into
mov
mov
cmp
into
mov
ja
fsubrp
les
mov
sti
push
hlt
test
or
add
aas
pop
jne
movsl
scas
xor
pop
adc
cmp
jae
iret
xchg
inc
jne
and
lcall
negl
insb
inc
dec
mov
fldenv
and
pop
insl
push
xor
dec
mov
mov
jae
cmp
jle
mov
into
not
cwtl
stc
fsts
dec
int3
add
incb
repnz
jno
out
jl
mov
xchg
inc
js
mov
fidivrl
call
cmp
andb
xor
sub
lock
xchg
cld
xadd
int3
cs
jns
out
push
or
hlt
insl
or
fcomps
test
pop
daa
xchg
sbb
out
adc
cmp
movsl
lock
enter
inc
cli
xchg
mov
test
dec
jg
pop
sti
xchg
add
in
xor
cmp
or
scas
mov
pop
lcall
xor
out
jle
cmp
jp
mov
xlat
cwtl
mov
mov
jns
fbstp
int3
inc
cmovbe
mov
negb
jbe
sub
pop
add
inc
inc
mov
test
out
loop
outsl
cmp
jp
mov
addr16
xor
icebp
jg
sub
mov
das
movsl
scas
adc
ja
mov
adc
ds
loop
jp
cwtl
cltd
fiadds
push
lock
cld
pop
mov
xchg
int3
push
outsb
add
stos
mov
mov
ficomps
add
seta
push
scas
jle
mov
out
or
test
cmp
aam
cld
and
fiaddl
fmul
pop
not
imul
bound
pop
xchg
jne
jns
jns
adc
add
pop
test
mov
pop
int
inc
popf
inc
push
ret
arpl
ljmp
push
mov
cld
nop
cmp
jl
cmc
add
movsb
in
leave
jl
fidivl
push
xlat
jnp
mov
imul
mov
out
stos
push
in
das
push
cmp
sahf
or
into
rorl
and
dec
stos
imul
jae
inc
sti
imul
loop
or
pop
mov
mov
mov
mov
pop
outsb
jg
or
lea
rorl
lods
adc
aad
jno
cmp
fbld
push
xchg
sub
pushf
decl
jb
loop
inc
pop
jnp
jg
push
jecxz
scas
inc
scas
cwtl
inc
dec
xchg
push
dec
in
sub
rcrl
stos
imul
and
add
test
cmpsb
pusha
jnp
pop
daa
imul
cs
inc
aas
aas
and
jecxz
movsb
inc
mov
sub
lret
mov
and
sbb
mov
jl
fcoml
and
xor
jmp
iret
je
sbb
es
loope
clc
and
fidivs
ret
icebp
pusha
mov
mov
out
call
arpl
aas
jle
cmp
repz
jo
add
mov
ljmp
repz
cmp
shlb
jnp
mov
mov
sub
sbb
and
cmpsl
jns
cld
adc
gs
scas
setno
es
stos
aam
and
divb
das
mov
sub
or
mov
sub
lods
loopne
xor
int
pop
xor
cmpsl
in
mov
or
scas
mov
fdivrl
cmp
sbbl
add
jecxz
lock
sbb
outsb
orl
fdivp
jge
mov
xchg
adc
mov
loopne
mov
sbb
sub
test
jae,pn
adc
les
cltd
or
jnp
das
xor
dec
shrl
call
or
imul
or
lahf
std
insl
stos
cwtl
test
mov
xor
call
dec
mov
cltd
cli
hlt
jns
test
cli
xor
xchg
lret
mov
mov
inc
mov
lcall
out
adc
add
add
sub
in
loope
mov
inc
out
jb
lcall
mov
popf
adc
xchg
adc
ds
aad
pop
icebp
addr16
inc
inc
inc
mov
fs
into
enter
int3
push
ja
pop
inc
je
sub
push
imul
lret
pop
xchg
jp
out
sbb
stc
mov
popf
sub
and
in
jg
scas
xchg
sub
cmp
adc
sbb
push
sbb
hlt
in
les
data16
mov
mov
ljmp
adc
cmp
sub
add
imull
and
add
mov
push
and
xor
out
push
fimull
imul
lret
sar
pop
jns
xchg
repnz
pop
pop
testb
inc
jg
test
add
scas
pushf
mov
xchg
stos
imul
das
test
fnstenv
pop
sbb
adc
mov
shlb
into
xor
fsub
dec
add
pop
mov
and
mov
popa
shl
push
bound
aam
lods
iret
adc
out
cmp
insl
test
stos
cltd
stos
inc
xor
cmp
mov
sub
pop
ja
mov
fs
and
mov
ffree
leave
or
or
pop
loope
mov
mov
dec
stos
xlat
mov
inc
outsb
repz
mov
adc
mov
sbb
jbe
dec
xor
push
jb
clc
adc
out
sti
ds
or
xchg
rolb
xchg
sub
and
xor
pop
bswap
inc
sarb
pop
mov
scas
xchg
test
adc
push
dec
or
inc
sub
out
push
xchg
pop
cmpxchg
call
cmp
mov
sub
push
push
sahf
xchg
scas
subl
inc
xor
rcr
push
mov
and
and
mov
xor
inc
pop
push
iret
cmpl
dec
or
imul
xchg
xor
cmp
cmc
xlat
rolb
cmp
nop
jae
sbb
jb
mov
clc
dec
clc
dec
fwait
pop
std
jnp
push
add
test
xchg
stc
jecxz
sub
inc
daa
adc
movsl
push
repnz
stos
jbe
add
lret
pop
pop
xor
push
jl
lea
lcall
ror
sbb
mov
xchg
out
dec
fwait
aam
fistpll
sbb
xor
cld
mov
ljmp
insb
push
test
cmp
ds
aad
sub
or
pop
fstps
cmp
pop
jb
mov
bound
push
xor
std
jmp
dec
dec
and
out
push
or
rorl
mov
in
dec
orl
lahf
mov
lahf
sti
daa
ljmp
sub
and
cld
andb
adc
inc
lock
add
jne
mov
push
dec
xchg
inc
pop
test
jo
lock
shlb
adc
fisttpl
fisubrs
lea
push
loope
mov
stc
ss
in
cli
inc
fsubs
jns
and
sbb
adc
fsubl
pop
push
and
mov
or
mov
nop
in
cmpsb
jno
lahf
and
add
sbb
pop
repnz
lcall
pop
or
test
inc
sbb
loope
and
mov
shlb
cli
mov
outsb
inc
jo
jmp
popf
cld
insl
and
push
daa
push
and
out
mov
test
mov
std
inc
sarb
pusha
in
and
fsubrs
dec
imul
cmpsb
cltd
inc
xchg
dec
shr
inc
jg
pop
int3
sbb
dec
mov
dec
mov
xor
lret
mov
je
xchg
popf
gs
div
inc
movsb
adc
das
jbe
dec
sub
jae
push
in
add
jmp
test
pop
jle
nop
cltd
jne
sbb
cmc
sub
test
lds
cli
scas
sub
xlat
scas
push
out
scas
sbbl
dec
loope
xlat
fsubl
insl
mov
pop
jl
repnz
jns
lahf
inc
pop
lcall
adc
inc
lret
dec
ljmp
idivl
mov
mov
dec
int
inc
aam
dec
scas
add
push
push
scas
mov
inc
insb
xor
jg
add
add
sub
lods
imul
mov
push
mov
aam
adc
mov
mov
in
imul
push
fcompl
xor
jae
or
dec
sbb
xchg
push
add
cmpb
es
mov
lock
inc
movsl
or
push
pop
mov
mov
xlat
fcmovnbe
lock
jne
imulb
clc
js
xchg
inc
sub
outsl
and
xor
xor
lea
cmpsb
test
add
push
imul
cwtl
dec
inc
jo
in
insl
mov
sub
jae
out
rcrb
and
das
pop
add
mov
nop
mov
test
mov
cmp
shlb
cwtl
cltd
lret
lods
sti
or
mov
jae
cmpsl
fwait
pop
aad
aam
jecxz
cmp
jns
mov
rcr
sub
lods
cmpsl
and
loopne
je
aas
arpl
lahf
in
lcall
les
jns
out
xchg
incl
xchg
cli
pop
jae
adc
ss
inc
mov
pop
dec
lods
pop
popf
es
jecxz
push
icebp
mov
je
mov
xchg
pop
xchg
cltd
inc
mov
cld
ret
inc
push
insl
icebp
mov
addb
sar
fiaddl
in
clc
mov
sbb
gs
xlat
inc
xchg
mov
jl
jae
insb
or
leave
or
xor
fcoms
fstl
inc
cmp
test
les
lds
jg
xor
loop
mov
out
add
sub
ret
cs
pop
out
inc
out
xor
pop
pop
idivl
xor
and
leave
int3
jge
and
bound
push
pop
ljmp
movsl
and
ss
cwtl
ja
das
out
cmp
adc
sbb
loope
addr16
dec
daa
cbtw
and
mov
aam
jne
hlt
cmp
repz
push
or
xchg
out
xchg
loopne
mov
arpl
mov
ja
add
rcl
sbb
inc
jg
cmp
add
into
lds
and
jns
adc
pop
mov
push
mov
js
jno
ret
movsb
leave
mov
in
inc
add
add
add
pop
dec
xchg
test
je
mov
inc
push
cmp
add
sahf
iret
push
stos
into
adc
jbe
scas
mov
inc
and
lea
pop
dec
adc
xor
inc
lods
and
cltd
cmp
jl
mov
or
mov
sarl
in
daa
push
int
jne
push
je
test
ljmp
or
enter
sub
cld
shr
cmpb
dec
add
and
data16
adc
movb
insb
lret
push
mov
cmp
insb
xchg
popa
lahf
adc
test
icebp
imul
pusha
sub
int
inc
daa
test
negb
lods
cmp
cld
aas
pop
xchg
xor
mov
jo,pn
sbb
mov
lret
shrl
or
lcall
gs
and
mov
mov
pop
cmp
les
push
add
ja
call
or
mov
push
ja
cmp
es
clc
loope
add
or
xor
adc
mov
sub
movsl
push
mov
mov
lahf
mov
test
cmp
mov
in
cmp
push
data16
push
mov
testl
xchg
add
lret
testl
stc
push
lret
cwtl
loopne
fisubrs
fnstsw
push
aam
out
push
mov
js
pop
mov
and
xlat
pop
ljmp
push
pop
aad
mov
loop
test
lret
push
popl
fptan
fcmovb
dec
decl
cltd
dec
testb
inc
xlat
cmpsb
sbb
cmc
sbb
pop
jo
ljmp
jb
stos
pop
inc
decl
cmp
ds
push
mov
lret
adc
and
cmpsl
xchg
iret
mov
dec
push
adc
adcb
insb
stc
mov
adc
test
nop
push
test
push
mov
adc
imul
popa
cmp
mov
in
jno
rcrl
stos
or
xchg
inc
inc
or
popa
fst
popf
fstl
jae
shlb
xchg
pop
pop
adc
dec
sahf
arpl
dec
mov
push
out
sbb
mov
cli
and
push
test
in
mov
mov
arpl
xor
and
inc
stos
ljmp
icebp
fucomi
js
dec
jno
adc
jnp
jb
adc
mov
mov
enter
cs
pop
loopne
pop
cld
pop
adc
inc
jno
dec
test
sub
stc
dec
aad
push
mov
repnz
mov
pusha
sbb
sbb
sbb
cwtl
lds
inc
dec
sbb
mov
jp
repnz
sbb
sub
inc
ja
pop
adc
pop
push
cld
daa
mov
pop
sbb
lret
insl
jmp
jge
lret
jb
rcll
inc
xchg
push
xchg
js
jmp
out
add
add
cmp
sub
movsl
adc
mov
shll
pushf
movsl
xchg
and
stc
cmp
dec
fisubl
pop
ficoml
hlt
in
lcall
sbbb
jge
das
lret
mov
add
lock
lcall
jo
fwait
pop
lea
mov
sahf
inc
sub
and
int3
addr16
sbb
adc
push
rcrb
mov
mov
mov
jp
adc
iret
sub
xchg
in
dec
sbb
adc
sahf
add
insb
adc
das
and
mov
lret
ficompl
pop
pop
enter
xchg
jno
nop
sar
mov
dec
add
loop
push
inc
ljmp
sbb
sbb
inc
icebp
daa
in
cmp
push
ljmp
inc
jmp
mov
or
and
push
outsl
dec
ja
pop
push
nop
push
sub
xchg
out
mov
ror
mov
pusha
pop
insb
xor
ja
aam
pop
shrl
sbb
mov
addr16
mov
inc
adc
mov
xchg
call
mov
push
xchg
mov
aad
loop
lret
add
inc
stc
mov
jl
cmpsb
mov
addb
push
dec
fnstcw
inc
aam
cmpsb
add
repz
jae
cmp
mov
adc
or
fwait
push
into
es
or
xchg
pop
mov
lds
nop
cmp
aaa
notb
inc
inc
push
adc
sbb
dec
fldl
xor
lret
popf
push
push
cmc
insl
shll
addr16
fwait
subb
jae
pop
shll
pop
lds
mov
hlt
adc
ss
int
shl
sub
mov
filds
popf
out
jno
push
fcoml
mov
das
pop
sub
hlt
dec
and
cs
adc
lret
xlat
push
add
movsl
add
jg
mov
and
mov
pop
addl
lret
add
mov
loope
lret
repz
inc
in
fidivs
movsl
mov
in
sbb
pop
mov
arpl
adc
sbb
cld
add
push
mov
cmp
mov
lret
aaa
ror
pop
jge
push
pushf
xchg
cltd
push
fidivrs
mov
or
push
push
outsb
shr
lret
push
sbb
and
xor
in
lock
je
int3
out
stos
jmp
jg
pop
xchg
shlb
xchg
mov
adc
mov
jne
aas
loop
jle
adc
sbb
hlt
movsb
jae
xor
push
test
pop
fisubl
adc
jae
inc
imull
sbb
cmpsb
mov
xor
cmp
addr16
xlat
fs
repnz
test
clc
cmp
fdivrp
xchg
add
int3
arpl
pop
ljmp
outsb
lods
cmpl
mov
repnz
cmp
stos
mov
mov
jmp
movsl
push
push
jp
out
int
xor
vpmacssdqh
pushf
incl
mov
or
dec
test
int3
xchg
push
adc
inc
in
jp
or
arpl
pop
ss
and
imul
filds
pop
cmc
push
inc
cltd
and
dec
hlt
inc
test
cmp
push
and
sbb
loope
gs
or
mov
clc
ret
hlt
pop
lods
mov
adc
xchg
int
scas
in
mov
fisttpl
push
mov
repz
mov
mov
adc
rcl
mov
popa
adc
mov
cmpsb
nop
out
addl
aaa
bound
scas
push
and
sub
lcall
sbb
in
lahf
leave
ss
mov
add
jbe
ret
scas
cmpxchg
in
or
sahf
xchg
ficoms
out
pop
arpl
jnp
arpl
mov
jmp
out
mov
add
mov
movsb
or
fnstcw
jno
std
es
insl
lcall
sbb
jl
cwtl
loop
pop
fidivs
sub
sti
sbb
and
sub
fincstp
mov
push
out
sbb
loop
and
jg
lahf
sarl
dec
out
jl
cmc
cmp
xchg
test
pop
mov
lock
lds
mov
dec
gs
iret
xor
jmp
mov
aad
js
cld
pop
push
pop
push
ljmp
fcmove
or
dec
movsb
inc
xchg
loop
pop
push
shlb
loope
push
dec
aam
daa
jmp
sub
push
aas
xor
xchg
ljmp
cs
out
mov
adc
mov
leave
or
adc
in
loop
adc
pop
xchg
xchg
in
mulb
or
dec
inc
int
and
lret
and
adc
fimuls
xor
mov
push
pushl
dec
mov
idivb
mov
mov
hlt
inc
lods
push
push
movsl
pop
sub
out
icebp
daa
out
mov
mov
jb
sub
loop
pop
int3
jmp
add
jmp
and
sar
inc
incb
fdivrs
imul
repz
sarl
jb,pn
ljmp
pop
jno
shrb
inc
gs
inc
sub
insb
ss
jge
cmpsl
and
mov
adc
mov
andl
adc
mov
or
sbb
mov
out
cs
sbb
mov
outsl
cmp
mov
mov
cmc
nop
js
stc
xor
sub
stos
test
pop
jl
iret
les
add
inc
jne
xchg
inc
cmp
jl
inc
mov
nop
stc
push
xor
bound
lods
int
enter
aam
push
xchg
data16
mov
and
jbe
rclb
push
dec
xor
adc
lock
ds
outsl
test
jne
imul
das
cmp
insb
push
jb
xor
jno
push
and
add
adc
ljmp
notl
das
and
mov
pop
mull
imul
mov
adc
mov
rclb
push
mov
jge
cli
jge
and
adc
lock
rcrb
push
sbb
lahf
dec
mov
mov
je
int3
ds
loope
fs
mov
inc
clc
andb
mov
cmp
test
mov
xlat
cwtl
insl
loopne
cli
add
outsl
std
xchg
rclb
inc
clc
pusha
sti
sbb
xor
xor
push
clc
test
sub
out
mov
adc
les
vcmpps
mov
cs
cmp
sbb
gs
pushf
stc
mov
pop
cmp
cmp
icebp
push
ret
pop
sbb
cwtl
dec
mov
jge
daa
jmp
and
cmpsb
ficomps
ret
jns
test
fidivl
or
inc
pop
and
or
popa
xor
mov
adc
bound
in
in
lock
fcmovne
dec
ja
fdivp
loop
bound
xchg
and
mov
sbb
inc
js
aas
xlat
mov
push
fsubs
mov
jno
adc
rolb
pop
mov
mov
adc
xor
std
aam
xchg
sbb
rorb
jne
adc
push
lds
pop
in
pop
dec
xchg
stos
mov
xchg
sub
loopne
jg
cli
sub
cld
test
xchg
xor
jns
int3
addr16
jp
stc
pop
subb
jge
mov
lcall
pop
or
sahf
inc
add
out
stc
je
cmc
jge
or
ret
dec
push
sub
insl
popa
cmp
xchg
mov
int3
push
sub
dec
sbb
push
dec
popa
stc
roll
in
sti
sti
push
xor
or
iret
into
or
inc
repz
outsb
mov
sbb
cli
xlat
xchg
jl
pushf
xor
jmp
jnp
in
cmc
jl
adc
inc
insb
xor
cld
add
in
add
mov
rcrl
cmp
ret
sbb
in
shrl
add
sub
shl
and
mov
jmp
push
jle
fstps
addr16
push
addr16
movsl
lret
jge
repz
ja
cmpsb
testl
pop
jae
cltd
sarl
inc
test
lock
fisubl
call
mov
in
add
xchg
loopw
mov
pusha
ljmp
divb
mov
xorl
pop
aaa
mov
push
fwait
mov
addb
sti
rcl
pushf
dec
repz
scas
les
add
in
cltd
sbb
or
aam
pop
cmp
in
imul
add
and
loop
addl
lcall
sub
imul
ret
jl
pushf
inc
call
adc
xchg
mov
dec
test
scas
mov
xchg
jge
or
pop
jl
lea
std
sub
in
pop
mov
int
ds
imul
mov
adc
test
aad
jne
mov
cwtl
popf
mov
js
sti
dec
pop
push
std
add
jo
out
push
xchg
fistpl
je
dec
mov
fistpll
aam
ljmp
movsl
jecxz
pop
rorl
aaa
fiadds
test
sbb
xor
cmpsl
sub
mov
negb
push
xor
mov
in
xchg
fbstp
jge
cmp
mov
pop
into
lock
mov
loopne
addr16
inc
ret
fdivrl
mov
insb
cs
pop
fisubrl
xchg
xchg
repnz
jne
ds
jecxz
lahf
add
mov
in
aaa
lcall
xlat
and
dec
sahf
push
xchg
or
xor
je
inc
lds
in
rclb
rolb
mov
repnz
pop
sti
out
push
andl
je
inc
icebp
push
bound
out
push
and
les
dec
fcmovnu
jg
add
test
pop
adc
clc
add
pop
lods
imull
jo
mov
jle
sub
js
pushl
mov
jg
data16
cld
and
daa
sbb
push
sbb
jp
cmp
add
jns
subb
add
aas
pop
jle
fistpl
xchg
in
pop
sahf
adcl
aam
and
sti
push
mov
sti
loopne
pop
into
cmp
pop
xor
pushf
push
iret
ret
jge
adc
xchg
push
aaa
ficoml
mov
mov
pop
and
sbb
stos
pop
lahf
rorb
mov
push
xlat
in
sbb
dec
popa
xor
mov
ds
shrl
imul
pop
stc
sub
sahf
pusha
push
push
add
test
xchg
out
adcb
cmpsl
test
xor
test
xor
cmp
jle
aam
nop
aaa
std
push
cmpsb
repz
mov
lret
xor
push
or
adc
ja
jae
aam
push
cmp
cld
out
icebp
add
sti
into
jae
xchg
or
sub
clc
jp
outsl
les
cld
std
rolb
dec
daa
jbe
popf
cs
add
ret
imul
sub
loope
test
in
adc
xor
repz
mov
pop
lret
inc
inc
mov
lfs
push
xchg
scas
xlat
xchg
ljmp
jmp
outsl
adc
lahf
pop
fstpt
in
dec
dec
mov
cmp
jo
arpl
outsb
cmp
jmp
dec
lret
mov
push
fmul
aaa
lret
arpl
adc
inc
mov
out
test
icebp
adc
pop
or
adc
dec
pop
jae
aad
sbb
inc
inc
rol
popf
pop
stos
test
mov
xchg
lods
cmp
dec
add
je
push
into
in
ret
repnz
nop
xor
cmp
mov
in
fildll
mov
lods
add
inc
or
jae
enter
rorb
jns
sbb
insl
add
loope
mov
scas
mov
add
mull
xchg
add
add
loope
cmp
dec
jmp
push
add
cmp
je
mov
nop
jb
pop
je
adc
fs
push
push
mov
ss
lret
mov
inc
mov
dec
lret
sbb
leave
jp
sub
mov
insb
sti
cmp
insl
addb
jge
arpl
sub
dec
jb
push
imul
sbb
sbbl
mov
mov
xchg
jne
mov
stos
rcl
shl
jo
and
testb
mov
sub
inc
cs
outsl
test
push
cmpsb
shll
scas
push
jne
imul
fsts
rclb
fldl
jp
inc
push
jp
mov
sbb
es
sbb
add
negb
sti
filds
les
shlb
fs
mov
js
cld
add
push
inc
fmuls
faddl
xor
mov
dec
push
sbb
movsl
jne
or
aad
xchg
xor
scas
pop
sub
mov
jp
scas
mov
out
cmc
pop
out
inc
jno
jno
repnz
ret
jnp
sub
dec
scas
mov
inc
and
clc
mov
xchg
shl
sub
jae
mov
xor
mov
popf
pextrw
pop
cltd
aad
psubusw
rcrl
mov
cs
jns
js
rcll
push
jno
push
mov
push
push
lods
jp
pop
inc
jnp
sub
jns
jo
repnz
jmp
inc
dec
into
in
adc
test
push
adc
decb
aaa
dec
fistpl
or
push
xchg
push
rol
aam
xchg
mov
and
cltd
cmp
inc
repz
pop
mov
lods
imul
js
mov
stos
mov
inc
in
pop
roll
scas
mov
gs
fsubs
lods
ljmp
or
mov
xchg
pop
mov
repz
dec
xor
push
inc
sbb
dec
out
cmpsb
jb
jo
inc
cmp
insl
sub
or
and
xchg
in
xchg
sub
or
push
fbstp
pop
adc
sarb
cmc
jecxz
cwtl
and
fwait
fwait
and
ds
mov
ljmp
mov
push
xchg
stc
mov
fadds
or
adcl
cmpsl
pop
xor
pop
lock
pop
cltd
add
sahf
xchg
mov
dec
adc
xchg
or
inc
add
scas
stos
aam
stc
aam
mov
pop
div
test
mov
xchg
scas
push
iret
xchg
mov
pop
adc
push
sub
mov
icebp
sahf
stos
sbbb
push
sub
mov
dec
pop
or
pop
cld
mov
push
loope
lds
jo
leave
pop
std
lea
adc
inc
cmpsb
in
clc
mov
jg
lods
mov
cmpsl
mov
or
int3
push
nop
cmp
sbbb
scas
push
pusha
mov
daa
cmpsl
push
call
sub
sbb
adc
sbb
add
popf
cltd
cmp
test
xor
xlat
xor
int3
jne
jbe
ss
ja
sbb
mov
out
cmp
mov
bound
or
xchg
test
neg
fists
in
inc
cmp
mov
popf
lods
lods
scas
out
inc
aas
fcomi
in
mov
jge
xchg
pop
incl
cmpsl
inc
loop
mov
mov
aam
lds
aas
adc
cs
push
cmpsl
outsb
mov
cmp
mov
out
or
sub
xchg
and
outsb
decb
xchg
rcl
fistps
xchg
rcll
adc
test
js
adc
int3
push
fucomi
mov
outsb
pop
idivl
pop
in
outsb
ret
xlat
lea
mov
leave
fistpll
insl
bnd
cwtl
stos
icebp
jmp
and
fimull
or
lock
int3
push
lcall
xlat
pop
aaa
pcmpeqw
adc
aad
fucomp
sbb
cmp
inc
popf
and
imul
imul
jae
xorb
push
in
mov
pop
pop
aas
dec
fists
nop
outsb
mov
inc
and
out
pusha
dec
ss
push
add
int3
je
sbb
imul
sub
push
insl
daa
in
outsl
add
loope
mov
mov
xlat
sbb
cmpsb
mov
or
xchg
inc
fucomip
mov
cmp
ret
jp
inc
call
sbb
mov
xor
add
fnstcw
jo
or
push
dec
jmp
test
dec
pop
jno
mov
cmp
ja
mov
add
movsb
fisubs
subb
pusha
mov
sub
psubsw
mul
ss
out
xchg
jle
sbb
sbb
cmp
push
push
mul
sbb
loopne
lock
xor
mov
push
inc
mov
xlat
push
pop
pop
inc
loopne
add
push
std
sub
xor
pop
les
test
dec
andb
lods
sub
ja
out
sbb
decl
fs
test
sahf
mov
stos
inc
mov
lcall
repz
aad
sub
adc
sbb
mov
test
push
push
out
adc
ret
sbb
dec
pushf
testl
add
sub
test
mov
sbb
jno
inc
leave
push
js
pop
add
sbb
adc
xchg
xor
sbb
cli
loopne
cmp
xchg
mov
rorb
xchg
enter
cmpsl
loop
xlat
in
in
out
fwait
mov
lods
mov
inc
mov
mov
movl
pusha
xchg
sbb
dec
xor
sub
mov
test
xor
movsl
mov
test
dec
sahf
or
aad
xor
dec
rclb
add
movsl
dec
push
jg
rol
out
add
push
ret
movsb
jnp
les
dec
pop
ret
jbe
mov
lcall
mov
cld
mov
ret
mov
iret
push
dec
test
imull
popa
sbb
outsb
sub
rcrb
addr16
sahf
clc
clc
xchg
pop
jg
and
and
push
and
repz
mov
jmp
push
adc
adc
addr16
test
aam
subl
mov
shrl
cltd
cwtl
pushl
xchg
hlt
fcmovnbe
inc
notl
ds
add
dec
xchg
adc
scas
ficompl
repnz
pop
add
jmp
test
mov
cwtl
cmp
xor
xchg
push
sub
push
vmwrite
popa
mov
add
adc
inc
ljmp
int3
cwtl
fs
xor
jl
inc
xchg
pushf
enter
lods
ljmp
inc
js
sbb
mov
pop
pop
fmull
cmp
mov
mov
call
and
or
sub
test
dec
imul
pop
imul
lahf
fimull
push
in
pop
and
flds
lds
fcmovb
mov
push
xchg
subl
push
xor
fidivl
mov
jp
sub
iret
jno
mov
out
int
addr16
fldcw
xor
sbb
push
sub
pop
add
rclb
xchg
flds
mov
push
or
fdiv
and
mov
out
int
cwtl
sub
inc
xchg
outsl
jp
mov
jg
mov
data16
mov
in
sub
push
dec
daa
andl
dec
testb
adc
lret
jmp
outsl
test
ret
in
push
in
xor
pop
je
add
adc
jns
lahf
cmc
lahf
xor
pop
inc
add
insb
in
adc
inc
test
cmpsl
lock
jo
fsubl
mov
popf
add
aaa
ja
gs
jae
fbld
jp
daa
mov
and
int
ds
push
dec
aaa
pop
clc
lahf
xlat
dec
jno
sti
mov
cmpsb
data16
mov
loop
ljmp
inc
sbb
lds
cs
sbb
inc
jne
in
fisttpll
ja
dec
mov
pop
and
jmp
adc
lret
les
and
jne
push
in
xor
mov
add
sbb
scas
test
lea
sbb
mov
jb
mov
cmp
clc
into
dec
mov
je,pn
mov
add
lret
inc
clc
or
cltd
hlt
lea
pop
es
mov
ret
cmp
jbe
jl
aam
movsl
sub
and
call
rcrb
xchg
mov
inc
push
or
mov
mov
or
cmp
bound
cld
movb
sbb
mov
pop
test
xchg
les
fistpl
inc
jmp
add
stos
and
outsl
pop
dec
cli
in
loope
xchg
xchg
adc
out
mov
dec
insb
fistpl
cmp
jecxz
add
bound
xchg
hlt
jb
adcb
cli
add
jno
mov
pop
or
dec
pop
adc
ret
fdivs
cmp
and
mov
jge
or
loope
adc
pop
sbb
cwtl
mov
xchg
dec
mov
sbb
sbb
push
dec
loop
xchg
push
scas
nop
cmp
xor
dec
jno
ret
ds
jmp
iret
testl
bound
add
xchg
xchg
stc
arpl
mov
inc
jmp
or
rcrl
aad
mov
out
iret
cmp
and
lahf
and
inc
repz
lcall
rclb
inc
popf
outsb
rcl
or
push
popa
les
sub
push
ds
or
xchg
clc
xor
ds
xlat
or
cs
stc
xchg
xchg
stos
mov
loope
movsb
scas
aas
mov
lcall
in
and
and
out
popa
adc
sub
push
arpl
iret
adc
rol
adc
mov
or
pop
or
dec
neg
inc
div
inc
mov
add
cmpsb
jno
in
sub
ss
fiaddl
mov
out
rcll
rol
mov
loopne
lcall
pusha
ficoms
scas
adc
lret
mov
sbb
gs
scas
cmp
pop
shr
clc
orb
sahf
orb
das
pop
push
adc
jmp
push
insl
iret
stc
fisubs
test
mov
dec
cli
data16
inc
adc
cld
fprem
cmpsb
mov
mov
mov
push
xchg
cmp
fistl
mov
sbb
xor
rcl
hlt
jns
jae
rclb
stos
dec
jbe
in
or
mov
or
pop
cmc
add
xchg
push
outsl
pop
popf
dec
jle
std
pop
mov
mov
xorl
es
add
andl
stc
in
jmp
fsts
pop
mov
xlat
pop
push
lahf
notb
xchg
xchg
mov
lock
jbe
add
jne
pop
sub
xchg
sub
mov
dec
cltd
mov
mov
aam
inc
xor
test
jne
inc
pusha
xor
jmp
inc
jecxz
lret
dec
or
cmp
in
cmp
das
pop
mov
pop
jo
sbb
lar
lods
cs
shl
bound
das
xchg
and
and
dec
stos
ss
ds
dec
mov
cmp
sub
cmpsl
shlb
inc
and
test
cmpsl
sti
jl
and
cmp
cli
jne
mov
xchg
adc
ljmp
inc
adc
jmp
repnz
push
and
or
pop
sbb
scas
cmp
mov
cmp
repz
adc
cld
push
sbb
dec
stc
mov
mov
repnz
lahf
xchg
das
std
js
mov
or
mov
and
cmp
adc
dec
or
out
mov
jle
mov
and
mov
add
out
out
repnz
dec
out
sbb
shl
jle
cwtl
lcall
sbb
andb
mov
loop
scas
push
rcr
js
jno
add
mov
jmp
push
push
testb
adc
push
clc
mov
sub
add
add
push
adc
jge
add
imul
ss
mov
xor
hlt
shrl
and
sbb
pop
mov
xor
jmp
add
push
imull
out
popf
sub
and
xchg
xchg
shll
push
sub
push
pop
cltd
adc
arpl
pusha
mov
dec
and
rorl
dec
pusha
lds
dec
adc
and
pop
mov
inc
sub
mov
fld
adc
jnp
aad
lret
das
ss
and
pop
repz
push
or
xchg
adc
xlat
call
js
cmp
xor
mull
out
add
ja
dec
lret
pop
adcb
sbbl
std
cmpsb
in
aad
adc
fs
add
xchg
sbbl
pop
js
dec
ficoml
aas
arpl
xchg
lret
fs
adc
aaa
push
pushf
jb
pop
push
sub
aad
jnp
dec
sub
rcll
xchg
sbb
out
dec
cli
out
stos
add
stc
and
out
xor
out
test
sbbb
in
mov
jge
insl
nop
movl
in
popf
xor
push
inc
int3
or
add
or
imul
pop
scas
dec
orb
sub
cwtl
pop
push
or
dec
adcl
sub
faddl
xor
dec
fbstp
dec
or
ja
lcall
call
jo
in
pop
mov
cltd
xchg
test
push
shl
cmp
mov
add
repz
cmc
add
sub
loop
jecxz
cmp
sbb
inc
or
test
ljmp
repz
dec
mov
push
pop
mov
xlat
stc
xchg
pushf
popa
loop
or
es
data16
repnz
fimuls
repnz
cmp
push
add
jge
push
adc
sbb
scas
sub
push
test
xor
popf
cmp
adc
mov
mov
cmp
sbb
xlat
pop
or
adc
aaa
hlt
cmpb
leave
jae
fcmovnbe
lret
adc
andb
aas
out
mull
imul
out
test
shr
gs
cmpsb
sarl
imul
jns
pusha
inc
mov
rorl
shl
push
cmp
sub
xchg
sbb
xchg
xor
mov
fldl
cmp
dec
nop
orl
mov
ficomps
jns,pn
cmc
jmp
data16
daa
das
push
fildll
xlat
mov
push
imul
push
in
xchg
pop
push
aaa
enter
sbb
jp
out
jno
lahf
mov
fstpl
mov
pop
jae
jae
push
pop
mov
mov
mov
dec
mov
mov
mov
out
dec
sub
fldcw
xchg
jnp
lcall
sbb
xchg
cmpsl
adc
xchg
or
cmpsb
cmp
in
cmpsb
mov
xlat
rol
cmpsb
jl
pop
and
sub
or
enter
sbb
loop
out
push
sbb
mov
jnp
or
xor
incb
addr16
mov
daa
cmp
stos
clc
hlt
ljmp
pop
insb
jne
and
push
inc
call
pop
ficompl
cmp
pusha
shl
jg
xor
pushf
nop
nop
push
push
pop
dec
or
or
fmuls
incl
shlb
push
es
in
scas
push
jge
pop
andb
fld
movsl
mov
daa
in
addr16
out
in
sub
adc
add
mov
add
out
pop
dec
cli
jp
ja
pusha
lds
xchg
add
xor
jg
sub
dec
push
js
xlat
dec
mov
icebp
xchg
das
sub
sub
lods
inc
add
lea
mov
ret
sbb
lahf
jne
inc
jl
xor
cli
jmp
cmp
out
das
std
cmp
xchg
lcall
out
and
add
out
fsub
pop
mov
and
cmp
pusha
jb
jmp
pusha
dec
scas
into
xchg
mov
push
jle
int3
hlt
insb
popa
dec
inc
cmp
aad
add
scas
xchg
xchg
dec
dec
fs
jno
sbb
insl
rcrl
rcrb
inc
je
xor
cs
hlt
jo
push
cmp
xchg
jnp
mov
xchg
negb
and
mov
and
push
xor
dec
les
aas
lret
std
mov
mov
push
mov
sbb
mov
mov
cmpsl
rcrl
fwait
pop
in
repz
loopne
loope
les
push
ret
push
test
and
pop
pop
hlt
loope
ss
sbb
ss
int
cmpsl
lock
lahf
mov
test
insb
adc
jecxz
into
mov
ss
lods
pop
cmpsl
out
popf
fstl
sbb
inc
js
inc
fbld
xor
adc
lds
lcall
jo
insb
pop
bound
popa
shl
inc
aas
out
dec
mov
lret
mov
lods
gs
mov
push
in
pushf
lret
jbe
and
test
fstps
mov
in
bound
xchg
aad
cmp
das
mov
jmp
xor
mov
push
pusha
jle
rorb
adc
inc
int
shll
ficomps
pop
mov
mov
movsb
bound
fsubp
or
mov
ljmp
ffree
fdiv
aam
push
xor
sub
pop
jae
or
pop
faddp
into
mov
fsin
mov
fwait
loopne
pusha
jl
xchg
stos
inc
or
xchg
aaa
inc
lods
cmp
jae
testb
sub
sbb
push
add
add
push
xor
negb
mov
outsb
shlb
jl
cmpsl
xchg
imul
sahf
add
dec
jp
test
push
dec
shrl
scas
ds
pop
outsl
loope
fisttpl
subb
popa
stc
xor
cmp
jp
loopne
fbld
xor
repnz
out
sbb
hlt
pushf
into
jno
mov
mov
outsb
fcom
xchg
ret
ret
int3
outsb
and
xlat
insb
adc
or
lods
pop
pop
pushf
aaa
sub
jecxz
jp
pop
cmp
pusha
inc
adc
pop
shrb
int3
loopne
sbb
xor
xchg
pop
imul
sarb
add
scas
push
xchg
mov
adc
xchg
pop
jl
or
pop
xor
mov
cmp
andl
mov
xor
jl
xchg
jno
imul
lods
pop
das
cltd
mov
jle
pop
pop
pop
data16
dec
out
add
clc
push
jae
mov
repnz
pop
fadds
outsl
push
push
inc
mov
push
jne
imul
fstpt
inc
addr16
jae
stc
fisubrl
daa
jl
fisttpl
stc
shlb
fs
jb
sbb
pop
pop
shrb
pop
les
scas
dec
mov
shlb
sahf
dec
inc
jb
mov
mov
sbb
mov
mov
inc
out
adcl
jmp
hlt
bsr
std
cmp
xchg
stos
xchg
xchg
jno
mov
in
fadd
push
or
push
pop
push
insl
es
jae
ficoms
pop
pop
jae
pop
cmpb
std
xchg
test
dec
imul
add
sete
jne
and
pusha
shll
sbb
arpl
btc
or
mov
arpl
testl
pushf
jnp
out
inc
js
addr16
mov
addr16
sti
mov
cmp
fdivl
popl
popf
lds
xchg
repz
adc
sbb
sub
leave
mov
aas
stc
je
xchg
sub
sbb
in
push
cmp
mov
inc
sub
xor
notb
int3
cli
mov
sahf
movsl
out
fisubs
fsin
cltd
mov
movsb
or
movsb
xchg
rolb
add
idivb
fmuls
flds
pop
lret
out
aaa
orb
push
stos
imul
loope
push
addr16
or
cmpsb
mov
test
adc
faddl
mov
xchg
aam
pop
cld
sub
inc
sbb
sub
mov
push
fbld
push
test
sahf
loope
adc
adc
mov
mov
or
pop
incl
sub
fld
push
xor
addl
icebp
movsb
pop
lock
stos
cmp
jecxz
fstpl
movsl
ficompl
cmc
into
and
negl
adcl
push
xor
lret
mov
mov
aas
pop
test
or
lods
add
mov
push
mov
xlat
pop
push
jae
nop
or
inc
repnz
dec
ss
jb
inc
cmp
sub
sahf
add
pop
fmuls
jmp
cld
sbb
and
out
cmpsb
and
inc
mov
jns
xchg
out
adc
in
and
push
pop
in
stos
push
mov
dec
push
xor
mov
sahf
pop
enter
cltd
int3
mov
inc
rorb
jp
or
ret
inc
jb
add
fisttpl
pop
dec
leave
insl
mov
mov
xor
sub
mov
test
add
test
bound
sub
add
in
inc
jae
fldenv
cmp
jle
rep
sub
test
punpckldq
stos
sbb
and
mov
aam
xor
dec
adc
mov
adc
push
nop
aas
cs
mov
mov
sub
sbb
cmpl
inc
lods
not
mov
lcall
popa
lret
mov
jmp
xor
imul
cwtl
outsb
sub
lret
insb
ljmp
ss
push
mov
out
cmp
jno
arpl
sub
lea
pop
testl
ljmp
fnsave
mov
mov
std
rolb
cmp
inc
sbb
sub
xor
or
jp
jl
cmpb
cmp
inc
cli
jmp
fmull
pop
sbb
call
mov
lret
cmp
pop
outsl
mov
in
stc
fbld
clc
ret
divl
push
dec
das
arpl
sub
iret
fptan
cmpsl
and
lock
jle
lret
lods
inc
xchg
xchg
and
and
rclb
ja
insl
insl
fisubl
in
push
out
pop
push
pushf
icebp
stos
cmc
roll
out
mov
xchg
cld
cs
cmp
adc
into
sbb
std
xchg
loope
scas
sub
or
push
mov
pop
mov
sub
fsubl
imul
inc
and
mov
repnz
mov
xchg
mov
dec
cmp
push
and
inc
pop
call
sbbb
idivb
stos
loopne
fldt
add
mov
fisttpl
pop
cmpsb
daa
dec
insl
mov
in
xchg
sbb
jo
pop
mov
stos
not
arpl
jl
or
sub
pop
pop
fildll
enter
fldl
les
or
out
mov
add
push
enter
push
rol
jae
sbb
mov
scas
mov
testb
movsb
cmpsb
daa
mov
outsb
dec
les
mov
mov
dec
xchg
mov
mov
popa
jns
push
adc
mov
dec
lret
clc
adc
jnp
pop
pushf
aam
dec
mov
sbb
cmp
push
push
cmc
loopne
iret
jmp
aas
mov
add
mov
pop
into
lea
xchg
movsb
inc
pop
pop
jecxz
inc
jo
insl
sahf
aaa
adc
insl
push
inc
mov
mov
dec
outsl
xchg
mov
sub
cmpsl
lock
adcb
pop
enter
pusha
push
sbb
adc
movsl
mov
mov
inc
leave
nop
out
cmp
pop
and
mov
test
js
negl
push
inc
inc
int3
jecxz
je
jae
fbld
scas
ss
sub
or
aam
std
pushf
jl
push
mov
sub
or
int3
cmp
sarl
mov
mov
popa
enter
add
popa
dec
push
cmp
daa
lods
sbb
mov
bts
popa
outsl
fwait
loopne
stos
push
lock
movsb
loope
clc
push
jb
stos
mov
xor
jbe
into
xor
mov
or
das
out
stc
mov
mov
sub
xor
pop
cli
jecxz
sbbl
push
jb
rcrl
adcb
cmp
lret
pop
cmp
and
jecxz
mov
pop
lock
xlat
jo
mov
movsl
repnz
das
shll
scas
bound
jl
or
cmp
push
fmuls
xchg
icebp
jns
dec
mov
or
push
insb
mov
repnz
xor
mov
fisubs
xor
cmpsl
mov
out
mov
mov
xor
add
cmp
arpl
cmc
jne
popa
jb
cmp
push
in
push
adc
outsb
jmp
jns
in
lds
push
sub
cmp
xchg
pop
stos
adc
fcom
push
sbb
fcoms
fisttpll
xor
call
vmaxps
addr16
int3
aas
iret
mov
mov
in
int
jbe
or
dec
aaa
inc
in
rolb
sub
lods
decl
fiadds
push
ret
dec
pop
mov
scas
call
rclb
cmp
mov
sub
jae
mov
in
sbb
popa
std
push
cmpsb
mov
sbb
push
jge
xlat
sub
pop
negl
mov
cwtl
dec
imul
push
test
lret
ja
inc
fstps
sub
mov
and
sti
or
or
mov
xor
ljmp
lods
lcall
mov
popa
leave
mov
aam
test
sbb
xor
mov
test
add
dec
js
mov
ret
sbb
out
rorl
iret
sbb
sti
mov
xlat
fmul
mov
cli
mov
int
mov
xchg
dec
loopne
in
inc
jae
sarl
loope
repnz
mov
in
xchg
dec
push
popf
sub
jbe
bound
icebp
addb
std
inc
shlb
pushf
in
cmp
aam
es
xchg
pop
push
movsb
insb
roll
add
mov
mov
roll
push
ljmp
cmpsl
ficompl
lret
adc
ljmp
out
jo
add
pop
mov
push
cmpsl
sub
inc
mov
xlat
sbb
aas
popa
pop
les
xor
mov
mov
arpl
mov
adc
ret
faddp
inc
dec
test
pop
pushf
inc
jo
inc
rcll
aaa
xor
sbb
mov
push
jnp
shrl
addr16
dec
imul
std
xchg
push
xchg
sbb
hlt
data16
addr16
loope
xchg
mov
xor
sub
orb
pushf
mov
cmpsb
out
mov
xchg
push
repz
mov
movsl
xor
mov
cmp
push
xlat
js
jmp
mov
std
or
ja
jne
dec
cmp
adc
sti
sub
jecxz
xchg
pop
in
and
aas
jge
or
cld
push
pop
ss
hlt
jbe
push
pop
orb
push
add
adc
leave
inc
mov
or
jns
cltd
xchg
or
and
xchg
pop
cmpsb
into
or
stos
notb
test
pusha
add
jae
jmp
add
loop
shrl
scas
nop
xor
rsm
jbe
scas
inc
insb
xchg
mov
xchg
push
fisubrs
fdivrs
mov
and
inc
lahf
cmpsb
add
xchg
test
mov
icebp
loopne
mov
add
mov
and
mov
aad
pop
fdiv
or
and
leave
lret
sbb
push
fsubrs
aaa
adc
int3
out
daa
adc
je
jns
clc
cmp
pop
repnz
movsl
dec
lcall
mov
or
scas
xchg
and
int
jle
mov
cmc
adc
jae
cmp
jg
inc
inc
test
cs
fucomip
icebp
and
stos
mov
pushf
sbb
sub
orl
aad
add
mov
xor
mov
cmp
xor
loope,pt
xchg
cmpsl
sar
push
setae
popf
dec
jmp
outsl
or
push
setg
andb
stos
std
shl
test
lcall
push
sub
in
adc
fwait
insb
push
mov
xchg
adc
test
fwait
sahf
jne
cltd
push
pusha
aad
sbb
adc
fstps
push
mov
mov
adc
mov
inc
inc
lret
stos
fwait
out
loop
mov
adc
mov
icebp
mov
inc
xchg
sahf
aaa
jne
mov
and
in
sub
xchg
scas
mov
jo
xchg
or
mov
sbb
lahf
loope
push
xor
imul
das
sahf
incl
lret
sbb
inc
pusha
mov
cmp
mov
outsb
scas
pop
cs
notl
inc
mov
enter
cmpsb
insb
divb
xor
mov
out
add
stc
jl
cmovg
xchg
out
inc
push
arpl
cs
xor
xchg
add
dec
dec
clts
cmp
mov
mov
fisubl
enter
movsl
add
test
pop
push
cltd
mov
add
outsb
lahf
xchg
loop
pushl
or
pop
push
dec
sbb
pop
movsl
xchg
and
sub
mov
jae
push
jg
stos
adc
mov
jecxz
clc
fnstsw
or
outsl
sub
mov
loopne
cmp
test
sarl
or
loope
test
scas
adc
mov
sarl
mov
xor
cmp
mov
fisttpl
mov
subb
test
sbb
sub
in
daa
lock
sub
rorl
pop
mov
push
mov
xor
mov
out
sbb
mov
adcl
sub
lret
movsb
jl
inc
in
test
mov
mov
pusha
out
adc
inc
int
in
cmpsl
mov
add
iret
cmp
jbe
cltd
fmuls
sbb
xor
fisttps
scas
push
inc
sbb
xchg
cmp
rcr
arpl
out
or
in
mov
jo
lret
mov
ljmp
cmp
mov
int
mov
inc
rcr
scas
add
or
fidivs
arpl
cmc
mov
loopnew
adc
adc
hlt
xchg
fnstenv
popf
cmp
out
xchg
sbb
xchg
mov
iret
inc
loopne
orl
jno
scas
mov
leave
mov
adc
dec
js
dec
adc
iret
test
mov
jecxz
bound
xchg
loop
lock
mov
inc
sbb
lea
push
icebp
lret
mov
in
scas
insl
cmpsl
data16
push
xor
jle
dec
rol
inc
jp
add
or
inc
mov
test
mov
js
lret
xchg
jle
push
inc
loop
in
vmovaps
xor
dec
push
in
test
pop
add
fiaddl
cmp
popa
lret
sarl
cmpsl
ljmp
rclb
add
ja
xor
jbe
jle
xor
xor
leave
pop
shr
xor
add
es
push
addl
in
push
lock
ja
cwtl
inc
xchg
or
aas
jno
cs
js
fstl
jle
mov
mov
loop
or
xchg
jg
cwtl
ret
sbb
enter
inc
clc
leave
and
jnp
lcall
in
mov
mov
mov
cs
push
push
arpl
mov
call
add
xor
pusha
fildll
sbb
lahf
gs
cmpsb
sti
adc
popa
xor
out
xor
scas
jo
sub
dec
scas
jge
orl
test
divb
jecxz
mov
jg
inc
std
xor
and
xchg
cmp
addr16
jecxz
cmp
xchg
adc
fdivrs
fwait
cltd
and
aam
push
cwtl
out
icebp
dec
imul
cmc
inc
mov
std
aam
inc
gs
clc
leave
sub
xchg
mov
pop
movsl
inc
rorl
cmp
pop
popa
sbb
push
cmp
icebp
ja
mov
cmpsl
jecxz
fs
sbb
je
inc
adc
gs
enter
jle
icebp
sbb
inc
add
movsbl
inc
mov
sub
repnz
pop
push
cmp
sub
dec
imul
xchg
xor
fwait
dec
out
inc
loopne
mov
pop
push
push
sub
cmpb
sti
pusha
pop
daa
cmc
lock
xchg
jmp
in
push
scas
insb
insb
adc
sti
inc
push
jecxz
int3
test
xor
mov
imul
in
out
dec
movsl
and
push
pop
or
cmpsl
daa
push
fiadds
in
adc
sub
aam
adc
cwtl
inc
lds
repz
rolb
xor
push
or
sbb
orl
or
mov
jns
out
xchg
fs
test
jmp
sbb
or
enter
or
call
out
push
bound
and
faddl
sub
sti
mov
pop
fs
push
or
imul
cli
lds
js
lcall
fwait
insl
rcrl
popf
data16
sbb
fwait
jge
and
xor
jnp
xchg
push
jae
dec
dec
pop
leave
mov
adc
xor
xchg
imul
mov
ret
xchg
dec
mov
adc
repz
cltd
pushl
add
aad
jno
mov
ret
je
jbe
and
loopne
sahf
pop
mov
adc
cwtl
inc
mov
ss
fnsetpm(287
pop
sbb
aas
stc
cmp
mov
test
cmp
adc
xor
pusha
mov
icebp
push
out
mov
loope
mov
inc
mov
inc
cmp
add
flds
and
cmpsl
pop
rorl
cmp
cwtl
out
cmpsb
shlb
and
push
mov
js
lock
and
repz
out
mov
dec
out
mov
shll
mov
repz
push
mov
mov
mov
fsubrl
adc
bound
xor
cld
sub
pusha
jp
or
es
jmp
nop
rclb
mov
lret
xor
out
mov
pop
inc
sub
lods
lea
insb
add
fwait
into
inc
and
add
adc
dec
push
cli
push
mov
push
adc
fistpll
std
push
lret
fnstcw
xor
enter
and
mov
cmpsl
jg
outsb
test
dec
test
or
mov
or
cld
dec
jg
sbb
mov
ja
cld
mov
inc
sub
lds
pusha
jno
ret
sbb
xchg
iret
mov
push
fs
pop
mov
mov
jns
jbe
sbbb
int3
or
pop
les
or
mov
movsb
push
push
in
add
aad
inc
movsb
aad
xor
je
lods
and
clc
or
cmp
ret
xchg
adc
ret
sbb
xor
xor
mov
jo
incl
mov
testb
pop
adc
mov
mov
cmp
rol
pop
rorb
xor
sbb
push
mov
mov
adc
arpl
cli
scas
jl
inc
ljmp
in
xor
insb
and
jecxz
pop
sub
aas
cltd
xchg
sbb
sbb
in
pushf
and
icebp
int
dec
jns
pushf
fmul
notb
xlat
ljmp
jmp
sbb
jle
roll
and
jno
loope
sub
divl
js
xlat
bound
inc
repnz
mov
es
jbe
cmpb
inc
xchg
test
je
dec
insl
jl
mov
xor
test
stc
or
xor
mov
repnz
pop
cmp
or
xlat
mov
mov
call
jmp
mov
xor
ror
add
mov
mov
inc
xchg
xchg
adc
jecxz
or
pop
jne
xchg
xlat
mov
cmpb
nop
xor
adc
xor
add
gs
out
das
out
leave
js
rol
adc
jle
add
dec
out
subl
xchg
lds
cmc
mov
mov
add
cmp
or
lret
mov
sahf
test
adc
testb
jge
out
xchg
jne
lods
lock
adc
rol
mov
cmp
orl
jne
iret
cld
dec
decb
repz
testb
push
xlat
xchg
jbe
dec
sbb
enter
add
jnp,pn
into
push
andb
xor
dec
add
dec
nop
bts
xchg
mov
xor
add
inc
adc
xor
xor
imul
pop
inc
into
mov
dec
ret
sbb
or
insl
inc
jo
jl
gs
sahf
jl
ret
xchg
dec
je
dec
xor
outsl
push
cli
shll
mov
out
mov
xor
imul
xor
mov
push
aam
fstpl
and
frndint
mov
scas
mov
mov
dec
scas
pop
xor
inc
js
xor
xlat
cmp
or
cmp
mov
adc
imul
push
xor
jg
loope
cli
sub
sbb
pop
jne
fldl
dec
push
ds
iret
sub
xchg
xor
jne
cmp
mov
cmp
mov
shrb
push
cwtl
aam
sbb
or
xchg
sub
mov
lahf
add
jecxz
push
pop
cmp
pop
mov
fwait
sbb
les
push
pop
mull
xor
insb
mov
mov
mov
mov
mov
cwtl
adc
mov
cld
sbb
or
pop
inc
adc
cld
sahf
dec
mov
in
mov
sub
or
sub
das
fisubl
mov
js
rcr
and
pop
arpl
cmp
andb
inc
les
loop
les
arpl
sbb
inc
push
mov
test
push
popa
arpl
xchg
fs
test
pop
or
sbb
out
stc
jbe
ret
mov
and
in
data16
add
jo
mov
in
pop
stos
divb
inc
add
data16
cs
test
fmulp
adc
in
ja
iret
jg
inc
push
gs
push
adc
jo
pusha
xlat
mov
hlt
add
dec
neg
test
add
inc
ror
scas
or
adc
cld
jno
cmpsl
cs
pop
sbb
mov
push
fcomi
stc
fldl
fidivrs
loop
pop
gs
inc
movsb
mov
ror
bound
push
cli
fisttpll
or
jp
aad
add
hlt
icebp
cmp
lret
inc
mov
xor
xor
or
clc
ss
or
pop
mov
add
lods
pop
enter
daa
inc
cli
and
and
ds
addl
imul
jle
jle
sbb
out
fstl
stc
loop
sub
sub
pop
pop
push
xchg
lahf
mov
and
inc
add
sbb
push
jge
lahf
xor
lds
cmp
aas
xchg
sbb
test
inc
leave
pop
gs
lahf
and
clc
repz
fiadds
pop
dec
jl
out
jp
ja
mov
sub
pop
cmpl
pop
jb
ret
dec
inc
rcll
loop
scas
je
shrl
addb
arpl
sbb
xchg
add
mov
adcl
inc
lret
push
shrb
sahf
movsb
add
mov
push
mov
jge
sub
jge
adc
imul
pop
in
outsl
cmp
mov
xor
push
xchg
fistpl
xchg
lods
xor
fwait
lahf
xor
fs
lea
hlt
popa
int
cmp
xchg
test
and
and
pop
imul
mov
mov
sarl
shll
lea
fisubrl
lock
ss
dec
lds
ret
push
rep
sbb
cmpsl
mov
sub
shl
lods
sub
jnp
jns
fsubrs
pop
xchg
test
insl
dec
jl
inc
jnp
cli
push
rclb
cmpsb
cmp
xor
int3
insl
adc
dec
dec
mov
jle
or
loopne
push
mov
mov
jp
fstl
sbb
popf
xchg
pop
hlt
fsubs
push
mov
adc
pusha
cli
repz
pusha
mov
rorl
notl
dec
sub
jbe
idivb
out
xchg
loop
jae
cmp
push
jmp
xchg
jg
push
sbb
scas
xchg
inc
mov
sub
fabs
dec
std
dec
fwait
jecxz
popf
shrb
cmpsb
pop
les
jl
sbb
inc
add
mov
ljmp
adc
arpl
xchg
pushf
xchg
lret
test
dec
push
sub
mov
scas
jg
xchg
inc
leave
xchg
add
fdivrl
rcll
fmull
outsb
mov
pop
jns
cmpsl
idivl
mov
test
out
or
je
pop
cmpsl
imul
lods
cli
jl
sub
and
jns
inc
je
pop
pop
mov
je
fsqrt
xchg
or
flds
push
aaa
cmp
and
loope
movsl
mov
sbb
xor
dec
jns
adc
sub
je
cltd
jp
lock
negl
mov
sbb
jg
icebp
notb
mov
push
aam
js
xor
mov
mov
divb
cli
test
pop
mov
sub
test
xchg
fs
lea
shlb
fiaddl
xor
mov
loopne
pop
fdivs
std
mov
sub
pop
cmpsl
enter
jecxz
pop
mov
cmpsb
into
pop
sbb
dec
pop
in
jne
pop
das
ja
xor
and
aam
mov
aam
xchg
imul
xchg
aad
lods
aad
cli
mov
jl
faddp
aas
stos
lods
or
ss
jecxz
sti
push
pusha
imul
push
shlb
jnp
cmp
dec
stc
addb
int3
pop
subb
sarb
std
addr16
rcr
pop
mov
jg
sbb
sub
jmp
imul
aas
and
push
adc
xchg
xchg
rcrl
xchg
jmp
adc
inc
or
repz
xchg
adc
stc
sbb
inc
lods
mov
pop
ret
ss
sub
xchg
xchg
push
cmp
or
and
ljmp
sti
stos
mov
sarl
mov
jmp
mov
jecxz
adc
ja
sbb
xor
sub
popf
mov
mov
jae
pop
xor
inc
and
cwtl
call
in
xchg
cmp
test
in
inc
mov
stos
in
out
jp
pop
lods
sub
pop
sub
pushf
imul
je
rcr
pop
cmp
popa
mov
cmp
mov
and
lret
movsl
fimuls
adcb
xor
mov
les
jg
mov
mov
lret
jg
and
jb
xchg
and
in
adc
sub
or
and
xor
pop
cmp
mov
push
or
sub
sbb
imul
push
adc
aam
ficoml
inc
repnz
mov
xchg
xor
lea
gs
xchg
fstpl
lods
and
lds
dec
xor
popa
add
sbb
lea
push
rcrb
mov
fs
fadds
pop
ret
out
ret
bound
fs
jnp
cli
clc
and
xlat
lcall
out
cmpb
pop
fcomi
stos
lea
lret
cmp
and
push
and
inc
inc
lds
adc
mov
movsb
add
dec
or
stc
iret
add
lock
xlat
ret
mov
jnp
scas
jle
movsb
mov
inc
cmc
cltd
sbb
jae
mov
rorb
xchg
in
jmp
adc
pop
jb
cli
push
sub
mov
cli
push
sbb
outsb
lahf
push
or
in
mov
les
sbb
push
jg
mov
out
ret
lret
jo
jl
mov
sub
imul
shll
sbb
xor
es
lret
shlb
push
push
in
cmp
cld
cmp
popa
incb
cmp
pop
mov
fmulp
jge
add
pop
xor
fcmovb
stos
scas
cmp
cmpl
sti
xor
dec
mov
fwait
lcall
bound
cs
imul
in
sbb
ret
push
stos
dec
dec
cmc
push
sub
imul
inc
sarb
cs
in
out
imul
rcrl
dec
sub
pop
dec
inc
mov
cmpsl
inc
dec
ret
push
push
cld
cli
ss
dec
arpl
mov
icebp
xchg
cmp
lret
sbb
adc
sahf
outsl
call
mov
sarl
mov
jg
adc
pop
pop
add
aad
jg
les
test
inc
inc
jne
inc
mov
fdivrs
outsl
scas
adc
cmpsb
gs
lahf
mov
imul
cmp
fnstcw
or
mov
cs
arpl
decb
cmp
mov
fwait
mov
cmp
jl
push
ss
push
pop
push
loopne
jecxz
mov
adc
mov
int3
push
jo
add
cmp
rcr
jmp
leave
or
pop
jo
dec
jb
ljmp
lcall
loop
sub
jae
xchg
sti
mov
insb
sbb
int3
ja
rorl
ja
or
jge
xchg
test
or
xor
mov
fimuls
xor
rolb
mov
in
fld
mov
cmp
out
jno
or
jg
adc
clc
inc
jp
test
xor
fbstp
das
mov
jnp,pn
pusha
jmp
sub
cmpsl
pop
mov
jl
mov
fidivrl
push
jnp
push
lods
sahf
ret
in
mov
or
iret
xor
pop
bound
push
sahf
add
jmp
js
jns
inc
cmpsb
inc
inc
inc
dec
hlt
aad
mov
xchg
inc
add
push
ds
mov
add
icebp
mov
sbb
jnp
inc
jnp
xor
mov
jnp
les
pusha
inc
out
jl
sub
mov
call
imul
mov
icebp
push
js
lods
les
mov
loopne
cli
sahf
pop
xor
or
mov
in
mov
cltd
frstpm(287
adc
ja
sbb
repz
je
in
jbe
insb
pop
xor
popf
test
xchg
and
popf
out
jb
mov
jecxz
add
sahf
sti
mov
and
xchg
out
xchg
sbb
ffreep
into
popf
ror
sbb
js
mov
out
and
adc
inc
fcoml
cmp
lahf
hlt
rcpps
aas
repz
and
cmp
cmp
jmp
addb
sbb
popa
lods
or
and
iret
out
jg
cmpl
push
push
int
cs
mov
add
mov
sahf
repnz
jmp
call
dec
pop
add
xor
call
jl
sti
ss
xchg
jnp
in
xchg
in
out
mov
fisttpll
inc
xchg
stos
xor
into
jo
scas
enter
shlb
scas
stos
je
jmp
xchg
inc
bound
test
daa
dec
imul
cmp
lods
xchg
bound
and
dec
stos
and
scas
movsl
inc
xchg
aaa
mov
cmp
add
jle
sub
nop
addr16
movsb
loope
das
or
popf
pop
adc
repnz
mov
xchg
test
mov
pop
and
test
roll
inc
dec
jo
movb
or
aaa
movsl
and
sub
stc
into
or
push
sbb
add
mov
mov
jne
movsl
dec
xchg
loopne
push
out
cmc
lret
xchg
pop
sub
test
in
scas
add
or
cmpsl
ret
sub
aad
je
mov
mov
fwait
arpl
or
lret
add
lret
int3
and
mov
test
lahf
in
lret
sub
inc
inc
or
sbb
jns
xchg
mov
mov
punpcklbw
push
mov
sbb
cmpsb
and
mov
cld
jno
jno
and
sub
icebp
das
das
jmp
sarl
mov
in
mov
and
sub
scas
sbb
jnp
sub
test
or
lea
pop
or
jne
cmp
xchg
xchg
mov
jle
mov
mov
or
lcall
jge
inc
jge
pop
xor
lock
mov
aas
mov
adc
movsl
out
inc
test
cmpsb
jmp
cmpsl
in
mov
or
sahf
mov
outsl
add
cmp
in
loopne
mov
outsl
push
stc
pop
or
in
in
mov
mov
inc
pusha
sbb
jecxz
data16
mov
mov
xchg
adc
mov
mov
adc
aaa
enter
fildll
sub
stc
lcall
push
loope
push
mov
or
stos
insl
mov
sarl
insl
gs
ds
rcll
fldt
mov
ret
cmp
xor
mov
popa
lds
mov
adc
push
in
nop
and
or
cmp
mov
scas
add
loopne
mov
mov
cwtl
shll
fsub
scas
insl
decb
jb
adc
mov
push
push
cmc
lret
int
das
xchg
pop
int3
cli
mov
cmc
lds
ds
ss
ljmp
adc
xchg
mov
and
adc
mov
xor
dec
mov
mov
shll
or
push
scas
mov
add
mov
insb
in
in
dec
pop
fldenv
sbb
and
sub
adc
sub
mov
push
adc
nop
push
pop
mov
mov
in
js
adc
fildl
push
fidivrl
gs
shrb
icebp
pop
jnp
orb
sarb
push
mov
pop
jge
xchg
lds
out
mov
mov
cmpsl
sti
imul
jno
jp
jae
xorl
lea
cmc
lret
rorb
pop
fst
out
lock
lea
addr16
in
aam
jb
cmp
inc
fcoml
call
fidivrs
add
addr16
scas
movsl
sarl
in
jno
out
data16
data16
mov
dec
arpl
inc
loop
xor
xor
in
arpl
fstp
dec
sbb
in
dec
xor
out
xor
sbb
and
lret
scas
pop
push
mov
jbe
adcl
push
ss
je
enter
xchg
shll
pop
sub
mov
insl
lea
fnstcw
adc
insl
or
in
cld
dec
ror
sbb
or
jne
cmc
or
out
fbstp
inc
dec
test
je
icebp
stos
mov
inc
add
inc
mov
sub
push
xchg
ret
mov
subl
es
or
cmc
addr16
mov
lock
jp
push
test
cmp
pushf
sarb
xor
roll
jl
les
mov
or
xchg
xchg
push
lds
mov
pop
jno
repz
stos
rclb
xchg
rcr
ljmp
popa
iret
mov
cmpsb
xor
outsl
dec
pop
lock
adc
into
jae
inc
les
fidivl
adc
test
test
pop
push
loopne
in
add
xchg
fs
loope
mov
push
pop
sbb
lods
xor
sbb
cmp
mov
jb
div
cmp
sahf
std
andb
mov
gs
insb
cld
rol
mov
inc
jo
stc
lret
or
or
jle
mov
cmp
mov
push
scas
notl
mov
xor
int3
jge
out
xor
dec
mov
nop
gs
mov
roll
outsb
test
sub
pop
add
in
jno
dec
subl
mov
cwtl
sbb
push
jbe
adc
pusha
mov
fisttpll
xchg
stc
mov
fldt
mov
dec
pop
pop
mov
cld
in
cwtl
lahf
mov
inc
hlt
dec
cmp
nop
and
xchg
test
ret
xor
push
jge
arpl
pusha
xchg
push
cli
mov
push
std
mov
rclb
cld
push
mov
mov
icebp
push
aad
popf
cmpsb
rcr
mov
jg
pop
mov
dec
adc
addb
push
idivb
ret
or
icebp
pushf
arpl
pushf
int3
dec
cmc
pop
imul
ss
iret
test
pop
aam
inc
xchg
cltd
stc
mov
test
in
adc
shll
push
xor
scas
rcll
mov
out
pop
add
add
in
pop
mov
jo
dec
push
scas
push
jp
outsb
and
cmp
and
push
or
cmc
shrb
ret
lods
test
jp
xlat
pop
jno
aam
data16
in
stos
mov
mov
push
xchg
xor
lods
imul
shll
jmp
test
dec
ffree
push
repz
xchg
aas
leave
mov
movsl
outsl
push
xchg
ja
xchg
or
hlt
cmp
pop
mov
loop
push
cli
fdivrl
sbb
dec
sbb
cmp
jne
push
in
hlt
stc
cmpsb
jns
enter
in
push
dec
fdivl
cmc
push
mov
adc
push
and
xchg
insb
movsl
loope
xor
cmp
lret
fistps
push
lea
mov
push
or
xchg
adc
mov
lds
adc
mov
add
stos
jge
rcll
and
or
push
push
enter
dec
mov
into
in
ss
shll
out
sbb
es
fs
test
movsb
jg
xlat
jne
and
push
mov
cwtl
test
xchg
fsubrl
stos
cmp
sahf
pop
or
jb
sub
cmp
jle
cld
int
mov
outsl
int3
mov
pop
fstp
pop
insl
fidivrs
inc
sbb
push
mov
leave
lahf
loopne
mov
xor
push
inc
lods
xor
clc
test
sub
xor
stos
and
and
xlat
cmpsb
jl
dec
xor
hlt
test
xchg
mov
daa
les
jge
inc
arpl
dec
pop
jbe
pushf
cmpsl
int3
int3
fadd
pop
sbb
cmp
cmp
in
mov
pop
adc
sbb
inc
inc
push
scas
add
adc
push
cli
add
mov
repnz
outsb
mov
jae
mov
movsb
sub
or
aam
stos
daa
add
mov
repnz
sub
jo
pusha
mov
xchg
mov
mov
scas
sbb
out
test
rcll
inc
or
xor
into
fimuls
rorb
out
cli
push
jne
or
lods
pop
jb
mov
push
pop
xlat
or
lret
mov
nop
cmp
bound
fists
out
dec
adc
mov
nop
aaa
int
jnp
sub
pushf
mov
mov
nop
xlat
adc
int3
outsb
sub
sub
leave
push
pushl
inc
fisubl
stos
je
sbb
and
mov
push
es
push
cld
les
mov
inc
ret
sbb
sub
scas
pusha
scas
sub
into
jmp
mov
sub
les
dec
sbb
cli
je
test
inc
inc
repz
cmp
xchg
decl
push
cmpsl
divl
push
or
fiadds
pop
sbb
icebp
xorb
test
and
movsl
mov
sahf
sub
in
test
mov
jns
or
jle
cltd
sub
xchg
mov
push
scas
xor
and
and
add
negl
int
ret
mov
mov
out
jno
xor
inc
lds
mov
mov
test
or
jae
lods
ds
mov
sbb
xchg
cmp
adc
and
dec
jg
cwtl
inc
sarb
xorb
divl
adcb
daa
mov
mov
test
test
jecxz
sbb
ja
lods
pop
repnz
adc
jno
int
xor
cmp
and
adc
insb
mov
mov
ja
adc
mov
and
into
jge
cmp
gs
fidivl
adc
lret
sbb
clc
inc
or
xchg
repz
push
xor
dec
clc
in
call
jb
frstor
and
cmp
xchg
mov
int
and
enter
jns
push
jns
sbbl
loope
jp
movsb
xchg
cmpsb
cmp
push
push
ficoms
mov
jo
push
stc
imul
xor
mov
mov
insb
xchg
push
movb
sub
sub
add
rcrb
inc
adc
cmc
mov
lock
sbb
leave
test
mov
dec
out
addr16
dec
scas
enter
out
or
sub
mov
add
mov
mov
sahf
add
in
xlat
sti
lods
and
movsl
add
cmpsl
cltd
xchg
js
dec
outsl
int3
movb
sub
int3
rcrb
sbb
pop
ljmp
or
pushl
xchg
push
cltd
mov
rcrl
pop
pop
mov
or
sub
aaa
enter
lods
out
cli
and
mov
or
sbb
dec
cmp
mov
cmpsb
mov
xchg
cmp
jl
ljmp
call
roll
lahf
pop
push
in
out
pushf
inc
neg
andl
popa
setb
cmp
adc
into
dec
jle
cs
out
addr16
mov
stos
out
sahf
stc
push
nop
lahf
jp
pop
mov
fsubrs
loop
xor
mov
rcll
into
imul
dec
mov
loop
push
addl
pop
int3
call
loop
lret
add
mov
cmp
test
or
pop
xchg
faddl
jecxz
fisttpl
ja
outsb
mov
inc
cwtl
lea
push
addr16
repz
and
push
sarl
or
lret
jne
sbb
push
js
or
push
push
pop
or
xor
cmp
xchg
in
imul
in
mov
stos
xchg
ljmp
push
push
out
dec
out
push
push
lea
shlb
icebp
cmp
or
scas
lret
pop
shrl
fadd
data16
pop
mov
pushf
jle
cld
lds
cmpsb
das
test
cmp
mov
ljmp
loop
add
mov
ficoml
sub
inc
cli
cmp
push
push
repz
insb
mov
add
cmp
xchg
dec
adc
dec
mov
popf
xchg
lret
sbb
gs
mov
sub
mov
push
pusha
leave
cmpsb
popf
add
mull
xchg
push
icebp
xchg
aas
int
dec
scas
or
sahf
inc
add
inc
in
js
jb
or
or
pop
dec
sbb
cmp
ret
and
push
dec
jnp
fstpl
lcall
sub
mov
mov
inc
push
xor
roll
ret
inc
jne
and
fistps
mov
mov
and
enter
add
mov
scas
adcb
hlt
adc
movsl
or
pop
push
mov
xchg
test
add
pop
lret
stos
mov
mov
push
push
add
mov
outsl
aaa
mov
popa
jge
pop
jle
in
mov
test
xlat
sub
iret
jg
inc
repnz
push
cmpsb
lock
xlat
dec
outsb
jge
cmc
imul
pop
jmp
push
es
cmpsl
sahf
ss
repz
das
sub
out
pop
inc
imul
popf
add
sub
add
sub
imul
jecxz
sahf
pop
sbb
cmp
fsin
jl
sub
loope
dec
jae
int
add
inc
cmp
je
jne
in
into
jge
push
mov
or
dec
push
pop
fs
in
into
and
data16
scas
pop
xor
push
sbb
add
int
outsl
jmp
inc
cmc
inc
outsb
mov
xor
push
ja
vmaskmovdqu
shl
and
mov
adc
fmul
jo
loope
mov
jmp
pop
outsl
push
or
fisttpll
pop
fsubr
and
scas
xchg
or
cmp
ret
ja
scas
sbb
and
and
es
decb
mov
sbb
in
sub
mov
cmp
xor
jp
xchg
jge
mov
roll
pop
sbb
ljmp
cs
imul
mov
push
or
xchg
in
or
xor
movsb
mov
cmp
repnz
mov
roll
ds
outsl
call
jmp
sbb
push
or
push
dec
jne
aad
jbe,pt
inc
pushf
test
mov
mov
mov
movsb
aaa
in
fwait
mov
flds
jbe
adc
sbbl
test
test
in
adc
ja
push
das
lret
push
je
push
clc
insb
ror
aad
in
popf
mull
movl
xlat
mov
jnp
mov
xor
out
gs
push
add
fadds
mov
inc
es
jle
or
loope
dec
pushw
or
adc
cmpb
jmp
lret
popa
cwtl
aas
mov
lds
jp
push
pushf
nop
pcmpeqw
inc
ret
into
jl
fsubr
sub
shll
ss
mov
inc
jp
imul
clc
push
sub
xchg
add
icebp
into
push
sbbb
mov
pop
mov
scas
les
push
or
lret
sbb
jno
xlat
movsl
jl
push
mov
cli
jne
scas
push
adc
mov
mov
inc
fsubl
lcall
sub
push
mov
jo
dec
inc
movsl
push
jmp
lock
das
in
lcall
dec
push
pushf
daa
call
mov
or
push
sbb
outsb
xchg
cwtl
add
sti
push
std
orb
add
sbb
sbb
push
test
stos
jne
cmpsl
out
mov
cltd
inc
and
or
imul
int3
gs
imul
fcmovu
jae
bound
call
sbb
divb
xchg
push
push
pop
and
sbb
int
cmpsl
xchg
inc
mov
mov
outsb
xchg
mov
scas
cli
and
rcrb
or
mov
xorb
xor
in
cwtl
mov
out
sbb
adc
test
inc
mov
leavew
les
mov
insb
stos
push
loope,pt
fs
and
xor
pusha
sti
mov
adc
neg
inc
cs
in
imul
add
lahf
andl
push
xor
insb
pop
jb
mov
int
pop
mov
imul
insb
jp
lds
inc
outsb
fs
adc
sbb
int3
stc
push
mov
jmp
int
jp
loopne
push
and
pop
iret
das
cwtl
sbb
xor
popa
data16
sbb
sbb
mov
xchg
and
push
inc
dec
adc
bound
push
insb
aad
lods
and
xor
imul
mov
push
lret
jecxz
cmp
sar
or
dec
and
in
push
xor
data16
out
sub
jg
push
insb
jne
loopne
mov
dec
lret
sub
gs
stos
scas
cld
mov
push
ss
xchg
xchg
subl
and
inc
rcrl
mov
in
aam
int3
cmp
xor
sub
xlat
sub
ja
js
add
test
jns
in
xor
pop
sub
xor
dec
mov
pop
jo
xor
iret
aaa
pusha
or
out
sbb
add
rclb
mov
das
xor
push
push
and
jnp
cltd
lods
lods
mov
mov
cwtl
mov
cmp
jns
js
xchg
sar
sub
mov
lds
mov
mov
fdivrs
scas
lahf
mov
test
and
pop
into
sbb
clc
stos
inc
push
mov
mov
xchg
xchg
add
cwtl
in
out
imul
subl
and
loop
call
inc
addr16
add
mov
clc
repz
fbstp
mov
pop
xor
es
sbb
sti
arpl
jl
push
xor
adc
or
dec
jge
mov
decl
shlb
out
cmpsb
aaa
mov
xor
lea
les
fcoml
jge
push
xchg
stos
jmp
addr16
xorl
test
adc
lret
aas
loopne
cmc
divb
aad
jg
xchg
jg
mov
ret
scas
es
pop
fwait
or
inc
mov
sarl
pusha
mov
or
adc
insl
ret
cmp
repz
jl
shrb
pop
inc
out
cmp
pop
ds
jns
int3
insl
test
cs
xchg
xor
jbe
mov
xor
sbb
sarl
inc
cwtl
or
add
cmp
adc
sub
stc
outsb
xchg
cld
pop
aas
or
jnp
xor
xlat
clc
inc
push
rclb
inc
push
xor
in
movsb
cmp
arpl
aad
mov
xorb
jno
dec
push
dec
jmp
scas
icebp
xchg
jg
lcall
pop
incb
cmpsl
gs
int
xchg
daa
dec
in
rcll
jo
out
das
out
xchg
repnz
loop
xlat
repnz
sbb
fdivl
mulb
cld
inc
rolb
sbb
sbb
cmp
call
push
sbb
mov
push
xor
lds
xchg
outsb
scas
inc
mov
xchg
adc
adc
rcll
aam
sbb
and
test
add
mov
inc
jecxz
cld
jmpw
jle
mov
lods
insl
xchg
add
bound
cmp
xor
leave
xchg
xchg
jns
fucomp
js
or
dec
xchg
je
enter
jo
and
xor
scas
cmp
lods
dec
ret
push
add
pop
in
ja
pop
sub
xchg
aam
in
jo
lods
loop
lahf
fldl
mov
rcrl
jns
adc
ret
pushf
movsb
and
pusha
mov
imul
push
cmp
in
push
arpl
movsb
jle
lahf
adc
add
lret
xchg
mov
mov
xor
pop
jl
popl
pop
inc
mov
and
xchg
es
pop
xchg
push
in
push
push
aad
jb
aad
stos
xchg
ljmp
cmp
insl
nop
or
mov
mov
arpl
push
cmp
xor
xchg
sbb
push
add
xchg
mov
mov
insb
ds
push
pop
test
leave
lea
or
pop
aas
mov
inc
push
loopne
or
mov
mov
inc
mov
mov
cltd
dec
or
push
aas
popa
mov
cmpsl
cmp
mov
cwtl
cli
fdivp
out
and
dec
mov
mov
add
adc
js
sub
adc
xchg
lock
mov
xchg
inc
cltd
enter
stc
jge
in
xchg
aam
inc
repz
ss
mov
sar
jg
cmc
popf
inc
rclb
sbb
out
dec
enter
fs
and
inc
jg
add
mov
scas
sub
clc
jb
lods
scas
mov
adc
mov
ljmp
in
fwait
out
cmp
repnz
adc
cld
les
cmp
xor
lds
out
jno
mov
icebp
mov
push
outsb
inc
aaa
and
fucomi
divb
sbb
add
lock
out
jl
pop
lret
add
int3
push
inc
mov
cmp
cmc
sbb
pop
jbe
mov
pop
inc
xor
enter
mov
bound
jbe
push
jns
xor
mov
imulb
jge
cmp
cmc
cwtl
jl
cmc
xchg
pop
xor
xchg
cmpsl
test
jle
xchg
push
inc
scas
pop
mov
nop
cmp
push
mov
cmp
test
and
out
mov
xchg
jge
sub
pushl
add
repnz
inc
jbe
lea
mov
jle
fidivrl
cmp
int3
cli
in
data16
mov
cmp
std
or
sub
xorb
loope
lods
adc
outsb
cmpsb
aad
fwait
iret
clc
out
js
stos
adc
out
cmp
icebp
push
aaa
cmp
mov
pop
clc
movsl
cs
hlt
jo
sti
insb
push
cs
mov
mov
jp
fidivrs
push
jmp
fldt
test
mov
jmp
push
jno
mov
ror
dec
mov
icebp
sbb
loopne
dec
and
jnp
aas
movsb
mov
je
sbb
mov
adc
xchg
mov
cmpb
insl
vpsrld
jle
or
sbb
sbb
sub
add
and
fcos
les
mov
rcr
mov
jle
call
mov
hlt
mov
outsl
push
lret
sbb
xchg
pop
mov
sbbb
add
xor
aam
push
and
imul
mov
jnp
lods
mov
mov
inc
inc
adc
adc
add
add
or
inc
jle
push
fstp
xor
stos
lock
mov
add
cwtl
push
imul
mov
hlt
mov
mov
mov
jnp
loopne
dec
lods
cmc
inc
lahf
out
inc
std
dec
mov
and
xor
stos
add
add
lock
xor
les
out
int
sbb
or
inc
jp
ja
cwtl
mov
inc
int
loop
dec
mov
jno
pop
push
jnp
cmp
ds
push
out
inc
test
jmp
fwait
mov
or
insl
mov
dec
cwtl
dec
mov
aas
add
lcall
aas
cli
lea
ja
add
or
loop
or
inc
imul
fwait
lods
dec
inc
aas
loopne
js
xorb
jp
rclb
in
rcl
fwait
adc
sbb
mov
jmp
in
mov
stos
or
int
mov
imul
sbb
testb
aad
xchg
addb
scas
inc
aas
pop
imul
mov
jge
into
mov
pop
push
repnz
lds
movsl
jl
scas
cmp
jg
ljmp
shl
pop
mov
rclb
push
icebp
orb
or
inc
fwait
pop
cli
mov
cli
ret
adcb
decw
adc
int3
mov
sub
pop
sub
out
xchg
xchg
xchg
cmpsl
pop
pop
sbb
or
sub
in
mov
dec
pop
pushf
pop
pop
out
int3
jge
das
dec
cwtl
adc
aam
jbe
pop
outsb
xchg
xchg
cld
outsl
sbb
out
fistpll
in
int3
pop
mov
jg
push
sbb
out
aam
lea
jp
aam
adc
jmp
dec
cld
lods
jge
nop
add
push
sub
mov
cltd
inc
mov
loop
jmp
addb
inc
push
jnp
arpl
fsubp
or
add
sti
mov
jle
pushw
jecxz
or
dec
jmp
rolb
or
sbb
es
arpl
push
sbb
push
cmpsl
sbb
mov
movsl
cmc
es
fldlg2
dec
jecxz
inc
push
subb
pop
or
add
cwtl
or
mov
fdivr
and
sarl
xchg
sub
sub
or
mov
cmp
loop
and
inc
test
insb
testb
mov
pop
inc
arpl
lods
loop
push
jnp
inc
jl
mov
ds
das
or
or
aas
push
push
xchg
fmull
shl
bound
add
outsb
loopne
jb
test
sub
mov
xor
jb
mov
in
int3
fwait
pop
pushl
dec
pop
rolb
repz
or
pop
imul
pop
nop
mov
sti
pop
fidivs
adc
shrb
dec
push
inc
pop
stc
add
xlat
je
arpl
orl
lahf
scas
lods
sub
cmpsb
sub
push
mov
xchg
stos
mov
adc
push
lods
xlat
cmp
inc
leave
imul
rcrb
insb
pushf
or
aam
fsts
push
adc
mov
fstps
sahf
mov
imul
push
sbb
je
dec
daa
aaa
mov
cmc
jle
ljmp
pop
push
mov
or
cmp
jmp
fcomi
fs
rclb
popf
adc
xchg
pop
sahf
sahf
push
lods
in
arpl
into
xor
iret
lock
dec
into
dec
cltd
cmp
leave
mov
ds
push
sub
pop
rol
sub
lret
mov
mov
push
jmp
cmp
add
or
in
les
jno
fxam
push
in
xor
jmp
jne
loopne
jge
enter
sti
imul
pop
aaa
sub
mov
jno
out
adc
mov
aaa
pop
insb
jle
adc
in
vmovaps
sbb
push
leave
mov
leave
sbb
rolb
repz
mov
out
xchg
xchg
mov
andb
in
xchg
pop
jne
sbb
sbb
or
cmp
inc
stos
inc
into
mov
sbb
pop
mov
pop
dec
or
js
jmp
dec
aad
lea
mov
mov
adc
aaa
aaa
adc
mov
jns
push
and
rclb
xchg
cli
mov
movnti
fnsave
pop
enter
adc
mov
jo
push
outsl
icebp
or
fisubrs
xor
cmp
aam
lret
cs
int
or
fistps
subb
repnz
lret
adc
pop
out
cmp
xor
outsl
loopne
out
mov
mov
ja
lock
les
mov
sbb
adc
push
pop
jae
fs
popa
add
movsb
lock
repnz
dec
in
adc
jge
je
or
in
ficoml
cltd
dec
dec
mov
pop
cltd
pop
cmc
imul
roll
xchg
xlat
sbb
addl
mov
and
dec
out
ret
js
add
pop
mov
jb
mov
push
in
insb
or
int
sbb
pop
cli
lahf
enter
xor
pop
icebp
or
dec
dec
add
cltd
mov
fptan
test
sahf
xchg
clc
loop
or
shr
out
daa
dec
jp
pop
xor
ss
push
mov
inc
loop
cmc
mov
dec
adc
cmpsb
loop
fnstcw
push
clc
addb
movsl
add
jb
fwait
rol
mov
mov
out
imul
xor
or
cmpsl
jno
mov
pop
mov
es
add
fsubs
dec
jbe
into
int3
int3
jns
popa
sbb
inc
xchg
clc
sbb
add
jmp
mov
outsb
stos
test
into
movb
xor
pop
cli
xchg
inc
in
push
orl
sbb
pop
iret
popf
inc
sti
push
jmp
xorl
out
mov
add
cld
aad
pusha
xor
nop
dec
dec
add
or
lret
inc
mov
xor
xchg
pusha
icebp
cmc
enter
fnsave
mov
mov
dec
out
gs
xchg
ss
mov
mov
pop
dec
movsb
add
loopne
pop
xchg
push
int
imul
nop
divl
in
jno
dec
mov
sub
daa
or
sub
jl
ja
dec
stos
jne
enter
icebp
xchg
xor
sbb
mov
sbb
movsb
xlat
sub
mov
add
gs
push
aad
scas
dec
ret
in
lods
sub
sub
inc
popa
jmp
add
and
arpl
push
and
push
sar
shrl
mov
aam
ror
jp
mov
ds
mov
in
jne
and
cltd
dec
adc
mov
stos
das
orb
popf
pusha
add
out
inc
les
sbb
pop
mov
inc
bound
rcrl
lock
test
mov
sbb
add
sbb
shlb
int3
xchg
stc
cmpsb
xor
jns
pop
mov
in
sbbb
adc
cmp
imul
xor
shrb
adc
lret
ret
cmpsb
xor
sub
fs
scas
xchg
stc
mov
cmpb
loop
mov
cmpsl
pop
or
and
dec
adc
dec
les
push
test
push
test
add
inc
std
xor
in
jg
and
jae
fwait
pop
push
lret
ss
sar
pop
push
mov
lea
dec
inc
or
insl
xor
jg
dec
mov
push
lock
or
xchg
lods
in
pop
or
mov
aam
sub
cmp
out
cmp
or
bound
cmp
cmpb
inc
ss
call
iret
mov
adc
xor
shrb
dec
mov
daa
xor
fdivs
jle
in
mov
jns
lret
xor
in
shll
test
packuswb
test
inc
fidivrl
dec
sub
or
add
out
das
pop
jbe
repz
and
fidivrs
inc
dec
gs
push
hlt
inc
int3
jmp
pop
iret
mov
js
push
loop
mov
sbb
stos
mov
mov
sub
mov
jp
pop
lret
jmp
jae
mov
dec
push
fstps
rorb
push
test
or
rcrl
lea
leave
and
xor
orb
nop
shlb
fsubs
fstp
daa
pop
xchg
enter
xchg
xchg
pop
cmp
imul
adc
enter
dec
addr16
clc
cmp
mov
inc
lret
mov
jmp
decb
and
inc
out
add
adc
fst
int3
aas
jp
fisubl
stos
jle
mov
data16
adc
rcrb
in
out
packsswb
adc
lds
dec
push
in
mov
fisubs
jmp
in
xor
lahf
jecxz
cmpsl
inc
mov
test
and
push
cmp
loopne
lods
fst
fnstsw
sbb
pop
enter
outsl
and
out
or
enter
jge
lahf
rorb
cs
mov
adc
pop
sub
ret
xchg
sbb
stc
xchg
push
jne
stos
sbb
push
in
jb
fstpl
adcl
sbb
mov
call
iret
mov
mov
imul
sub
inc
or
nop
lcall
lret
cmp
push
sbb
imul
mov
adc
push
sbb
sbb
jae
outsb
add
push
addr16
jo
and
lods
xchg
mov
mov
imul
mov
shl
mov
inc
mov
test
jecxz
mov
add
popa
iret
xor
popa
dec
sahf
add
adc
sbb
sub
test
gs
std
push
imull
xchg
test
pop
jmp
add
pop
sub
test
inc
jbe
push
popa
mov
add
decb
lods
nop
and
pop
pop
lods
push
insl
arpl
rorl
cltd
dec
xor
aam
xchg
mov
cmpsb
arpl
dec
mov
sahf
lcall
mulb
in
cmpsb
addr16
repz
ret
sbb
mov
pop
xchg
pop
movsl
dec
adc
adc
lahf
sbb
sub
dec
iret
sbbl
shll
xor
test
or
popa
pop
adc
lret
mov
and
sbbb
cmp
add
inc
add
mov
or
gs
imul
jg
jge
push
mov
xchg
lea
xchg
adcb
xor
int3
push
cmc
adc
push
and
stos
xor
lea
jle
add
cmp
in
fucomi
jmp
adc
les
lock
mov
test
or
add
or
loopne
ds
loop
jge
mov
push
rdpmc
js
cltd
roll
add
pop
clc
inc
outsb
repz
in
pop
loope
call
xor
repz
out
adc
mov
jle
pop
ja
repnz
jp
imul
pop
out
aas
push
sub
push
inc
dec
sub
push
xchg
stos
pop
adc
dec
lock
push
adc
sub
test
sarl
orb
mov
inc
outsl
sub
xchg
and
loopne
out
add
ja
inc
xor
test
fistpll
jmp
pop
lea
les
clc
ret
repnz
loope
movsb
enter
out
ret
dec
pop
pop
bnd
cmp
outsl
incl
xor
pushf
pop
mov
hlt
cmpsl
movsb
push
push
popf
dec
loopne
leave
cmp
bound
mov
and
movsb
pop
push
sub
je
or
addr16
and
sbb
pusha
je
xor
sbb
mov
hlt
loope
insb
subb
inc
xor
fnsave
sub
add
adc
data16
mov
fsubr
int
push
jp
inc
ja
ljmp
lcall
mov
aas
and
jmp
jmp
or
out
and
cmp
movswl
cmpsl
insb
jge
xchg
gs
cmp
decb
push
xor
aaa
lret
int3
push
daa
decl
lds
test
pop
data16
pop
mov
add
sahf
jns
lock
dec
test
push
mov
xlat
insl
enter
cld
mov
lcall
iret
jae
pop
cmpsl
shr
out
xchg
clc
repnz
jo
test
mov
ret
sahf
inc
jo
pop
cmc
xchg
sahf
and
jns
out
popa
lods
movsl
aad
insl
mov
mov
andb
rcl
test
test
adc
sbb
cwtl
mov
mov
pop
mov
cmpsl
jmp
gs
mov
xchg
xchg
lock
fwait
sysenter
mov
push
sbb
add
cmp
xchg
inc
ret
push
and
jecxz
dec
test
daa
lret
pop
xor
mov
stos
lds
xchg
and
dec
jp
jo
or
cmp
xchg
arpl
insl
js
movsl
mov
add
in
js
in
pop
lret
sub
dec
inc
mov
add
rol
adc
mov
inc
cwtl
ret
insb
ss
inc
xor
add
mov
sti
insb
push
repz
aad
push
xor
jo
and
adc
push
fwait
aam
fwait
adc
inc
xchg
pop
fistpl
pop
loop
pushf
xchg
mov
pop
es
mov
lahf
push
call
por
pop
roll
mov
das
fisttpl
mov
or
xor
mov
xor
ds
lret
jno
sahf
xor
mov
xchg
lods
xchg
cmp
das
das
mov
xchg
scas
test
shrb
arpl
mov
jb
mov
xchg
inc
fnstenv
stc
and
mov
jne
dec
xchg
push
inc
push
lods
insl
jl
in
lea
jae
push
xchg
lret
imul
leave
outsb
and
jae
adc
icebp
jne
shl
stc
or
test
jmp
push
test
add
pop
dec
les
shll
inc
ds
adc
lods
and
inc
mov
xor
cmp
pop
pop
aaa
mov
adc
or
xor
mov
xor
mov
mulb
fisubrs
rcll
adc
das
mov
sahf
mov
mov
inc
and
in
mov
aaa
lcall
imul
xlat
or
sahf
xchg
adc
sahf
es
inc
lret
and
push
push
mov
daa
dec
mov
jns
pop
xor
lods
iret
jle
bound
cmp
mov
negb
mov
sbb
add
adc
icebp
xor
pop
mov
xor
unpckhps
push
sub
mov
add
orb
adc
out
rcrl
inc
adc
cmpb
insl
test
mov
ja
sub
inc
xor
sahf
inc
push
scas
inc
loopne
pop
je
lret
stos
jns
test
test
mov
fstpt
and
icebp
jecxz
fnstenv
mov
jbe
stos
xor
xor
pusha
xchg
fwait
add
or
insl
mov
jns
add
sarl
sbb
sub
xor
add
push
popa
inc
inc
das
push
cmp
dec
mov
xor
push
ret
fbld
jbe
lds
adc
sarl
jge
mov
pushf
movsb
fcmovb
or
in
int3
imul
push
mov
rorb
enter
stc
push
std
clc
push
cmpsl
mov
movups
arpl
mov
sub
in
and
and
imul
out
adc
xlat
mov
cmp
aad
pop
int
loope
ljmp
leave
lods
pop
cmp
stc
pop
sbb
pcmpeqd
ss
addr16
push
fwait
ljmp
andl
xchg
es
push
repz
arpl
or
pop
ja
cmpsl
cwtl
subb
scas
leave
sbb
imul
sub
inc
enter
fucomip
roll
pop
xchg
fsubr
pop
je
adc
lods
pop
aas
je
mov
jge
xor
dec
out
inc
inc
enter
jg
jo
stos
shr
add
xor
int3
fsub
adc
addr16
dec
jne
jnp
filds
fnsave
xor
in
inc
gs
cld
scas
in
inc
scas
inc
stc
pop
adc
insl
add
in
mov
cmp
fs
enter
stos
mov
fistpl
call
repz
xchg
push
sbb
lcall
pop
pop
mov
mov
push
stos
cld
sub
fsubl
mov
call
dec
cmpsb
test
mov
and
or
xor
or
sub
jle
cmp
dec
imul
ds
cbtw
mov
lock
mov
push
pop
stos
test
pop
jne
stc
leave
out
adc
out
adc
cmp
lret
ret
jge
xlat
cwtl
scas
xchg
ljmp
gs
out
xor
mov
mov
push
ficomps
adc
out
sub
mov
call
or
jne
dec
and
mov
add
iret
jb
xchg
dec
add
bound
mov
xchg
insl
xchg
push
mov
mov
xchg
xchg
push
push
les
add
rcl
jno
in
mov
push
jmp
test
lods
and
push
push
dec
push
jno
mov
mov
mov
add
out
cmc
xchg
js
adc
mov
add
mov
cmp
add
sarl
adc
aam
cld
cli
inc
dec
fisubrl
mov
xlat
xorl
lahf
inc
and
outsl
shll
cwtl
cwtl
add
rcrb
ficomps
pop
jb
inc
pop
loope
cmpsl
and
enter
sub
mov
loopne
and
shrl
in
or
stos
mov
sbb
cmpsl
or
test
xor
sbb
movsb
pop
rclb
stos
adc
adc
repz
adc
or
out
xor
jo
icebp
mov
std
pop
sbb
lods
pop
hlt
lods
cmp
fnstenv
into
loope
ljmp
add
push
fwait
jg
pop
xchg
adc
cmp
xchg
stos
pop
xorb
push
mov
push
mov
and
sar
loope
lcall
aam
inc
dec
movsl
addr16
data16
cmp
or
add
pop
sbb
fcompl
xor
and
xor
mov
fadds
mov
sbb
movsb
insl
jle
repnz
push
mov
xchg
imul
repz
jge
xor
rcr
das
mov
or
push
nop
inc
push
xlat
fdivs
rdtsc
dec
movsl
fstpt
loop
and
lcall
test
es
sbb
cld
into
dec
sbb
dec
add
pop
in
jae
int3
inc
jns
inc
addl
repnz
cmp
cld
fs
dec
inc
insl
cld
mov
int3
pop
shl
sahf
push
lcall
roll
bound
dec
pop
dec
push
jns
in
push
dec
outsb
inc
xor
add
in
insl
cmp
cwtl
cmpl
pop
testl
pop
daa
pushf
mov
fs
cmpsb
rcll
jno
fstpl
addr16
mov
jge
test
or
xor
jle
mov
aam
imul
sbb
mov
lcall
call
shll
mov
xchg
lods
or
loopne
adc
inc
mov
sti
adc
addl
scas
mov
jl
test
sbb
push
or
cmp
push
push
cmpsl
js
sub
adc
adc
sub
sbb
adcb
inc
mov
fsubrl
add
add
or
ret
jge
out
sub
ds
out
push
and
push
xor
add
xchg
enter
int
cmpsb
dec
adc
sub
idiv
arpl
out
mov
jge
adc
add
pushf
iret
push
lret
mov
dec
mov
pop
cmp
sti
sub
iret
shrl
pop
mov
dec
jno
divb
mov
lret
inc
loop
iret
das
mov
pop
jo
mov
jbe
or
xchg
inc
jbe
popa
and
mov
dec
or
mov
popa
inc
enter
xchg
and
movb
cwtl
push
aad
xor
mov
es
fistps
lods
pop
bound
int
cmp
inc
shl
xor
jge
lods
in
mov
inc
dec
repnz
dec
pop
push
imul
imul
mov
cmp
shll
sub
jmp
adc
jp
cli
sbb
cmp
adc
ja
push
sbb
sbb
mov
clc
push
pop
sub
mov
aad
adc
rclb
pop
and
or
lock
ja
loopne
lea
data16
or
jg
stc
sbb
mov
push
xor
loope
or
inc
jmp
cmpsb
dec
add
loopne
inc
jmp
jae
xchg
ficomps
sarl
rcrb
out
shll
mov
mov
leave
inc
dec
test
cld
dec
stos
dec
xchg
pop
xchg
shr
push
shll
mov
sub
mov
ljmp
push
lcall
js
push
xchg
jae
in
inc
loop
nop
test
push
dec
mov
insb
push
cmp
sub
cmpl
int
sti
cmp
lods
repz
insl
jnp
sbb
cmp
js
and
xorb
lcall
sub
sbb
testl
testb
aas
sub
pop
adc
outsb
fsubl
mov
repz
or
add
ljmp
mov
xor
cmp
mov
adc
imul
add
loope
push
push
lock
add
clc
lock
and
les
ds
pop
xchg
xchg
xchg
ss
lods
in
xchg
test
fwait
sub
push
lock
dec
push
xor
aas
xchg
pushf
in
push
push
aad
fmuls
mov
jno
mov
or
mov
rdpmc
pop
inc
dec
lods
adc
xor
sub
push
outsl
lret
int
in
mov
push
js
or
adc
dec
push
in
outsb
inc
sub
xchg
push
mov
mov
or
sub
jecxz
adc
jl
loop
or
inc
enter
mov
push
ret
pop
jbe
mov
pop
pop
in
ret
hlt
nop
addl
push
push
hlt
or
xchg
jno
ljmp
fs
aaa
cltd
popf
scas
xchg
pushl
inc
scas
pop
mov
jnp
xchg
cmp
mov
or
or
sarb
int
cli
sahf
inc
mov
cs
jl
mov
rolb
sbb
leave
inc
imul
pop
cld
mov
adc
call
aad
sbb
dec
sahf
push
push
outsb
das
loop
inc
mov
cltd
sbb
xor
insl
lahf
rolb
pop
xchg
mov
scas
jnp
mov
cmp
dec
xchg
shlb
lock
sub
xor
pop
mov
pushf
test
pop
and
ret
mov
lret
cltd
cmp
dec
popa
or
ret
jge
les
inc
jle
or
insb
mov
inc
loop
dec
sub
mov
mov
pop
push
and
dec
aas
hlt
movsl
or
in
cmc
js
and
pop
call
mov
mov
mov
fdivs
inc
mov
lahf
lcall
jno
mov
rorl
fwait
je
sti
test
sarl
and
push
xchg
mov
push
stos
inc
or
xor
mov
cmp
pop
stos
add
mov
xchg
lods
lret
insb
je
cmpsl
pop
mov
fildll
ja
and
std
or
je
pop
je
mov
hlt
xchg
jb
push
mov
into
sbb
mov
adc
aaa
clc
jecxz
sbb
mov
ljmp
lods
cmpsl
movsb
inc
mov
fs
or
stos
sbbb
icebp
cld
xchg
jo
sahf
inc
lret
xchg
and
mov
xchg
xlat
sbbl
fisttpl
sbb
push
call
outsb
push
out
shrl
cld
jo
inc
popf
xor
mov
push
jg
cmc
mov
das
xchg
cmp
into
dec
in
sub
shr
fsubrs
out
clc
mov
push
mov
xchg
mov
sub
testb
add
mov
cmp
mov
mov
add
sub
and
aad
scas
mov
dec
cmp
popa
cli
cmp
inc
sbb
push
test
dec
mov
add
repz
pop
lds
mov
cmpsl
push
adc
ljmp
cltd
imul
enter
mov
insb
xchg
sbb
test
jecxz
jl
bnd
stc
dec
repnz
in
out
cmpb
cs
and
mov
daa
adc
push
mov
add
andb
sbb
xchg
into
cmp
int
cmp
cld
xchg
insb
scas
lret
and
iret
push
sbb
lea
nop
test
xchg
out
inc
shrl
mov
notl
loope
jmp
xchg
int
shlb
xchg
fnsave
test
push
enter
add
jl
push
lock
aad
pushl
jle
inc
fnstsw
and
scas
and
sub
ljmp
pop
aad
test
xchg
frstor
out
and
jno
shlb
sbb
pop
orb
lock
sti
lds
mov
sbb
jae
test
das
cmp
out
pop
and
pop
mov
loope
in
pop
imul
mov
icebp
mov
sar
mov
mov
and
ds
dec
subl
sbb
cmp
pop
push
ret
into
push
stos
add
in
mov
fnstenv
dec
sarb
leave
mov
dec
imul
cmpsb
adc
cmp
sub
pushf
sub
js
mov
sbb
fimuls
jecxz
jae
mov
fs
adc
xchg
sub
dec
pop
adc
xchg
lcall
dec
dec
shlb
mov
sub
cmc
mov
and
cs
notb
inc
loope
xor
pop
jno
xchg
push
arpl
xchg
fsubrl
sbb
sub
hlt
lock
js
jo
ja
test
les
xor
xchg
xchg
mov
sbb
lret
mov
mov
cld
pop
sbb
xorb
inc
in
mov
js
dec
repz
mov
cmpsb
jns
stos
fwait
mov
xlat
adc
cltd
add
jnp
xor
bound
popa
fisubl
sbb
xchg
xor
jecxz
rorl
popa
popl
popa
lock
push
cltd
in
sub
loopne
sbb
xchg
pop
inc
pop
jl
mov
sarb
arpl
int
fldt
push
lock
mov
pop
loopne
xchg
std
movsl
lock
ljmp
lock
xor
inc
mov
pop
push
fs
into
pop
sbb
in
push
add
xchg
push
add
movzwl
stc
or
mov
adc
mov
cld
mov
or
inc
xchg
lret
mov
push
in
mov
pop
xchg
push
adcl
clc
scas
xchg
adc
jno
inc
inc
stos
fsts
push
ret
and
jne
mov
mov
sbb
pushf
push
inc
push
mov
pop
or
out
cmpsb
pop
adc
shrl
or
int3
dec
inc
testl
das
notb
cmc
lds
lods
or
push
jnp
insl
push
lods
sbb
cwtl
jmp
dec
sub
sbb
adc
or
dec
mov
fmul
sahf
or
es
das
sti
mov
inc
xchg
int
jb
cmp
cmp
xchg
int
xor
cmpsb
cwtl
es
pop
mov
mov
pop
push
jge
out
shll
clc
push
outsl
addr16
pop
lret
push
movsb
std
mov
scas
fprem1
ss
insl
scas
aad
clc
adc
insb
adc
orl
push
insl
adc
pop
jo
sbb
cmp
jg
rclb
adc
out
adc
xchg
xor
jmp
add
jo
mov
mov
adc
dec
sbbb
jmp
dec
cmp
push
mov
adc
pop
fdivrs
pop
mov
fdivl
xor
push
fisttpl
movsl
xchg
jno
push
cmp
pop
pop
sub
jp
add
enter
sahf
jmp
xchg
scas
xchg
rolb
testb
lods
cld
pop
ja
mov
clc
popl
fcmove
pop
sbb
lods
mov
neg
push
pop
ret
fwait
mov
jnp
mov
arpl
adc
repz
cmp
pop
dec
sub
push
cli
xor
leave
inc
push
cmp
sarb
inc
pop
mov
ljmp
aas
sbb
icebp
lds
ja
int3
inc
fs
imul
push
jbe
int
sbb
jecxz
xorb
mov
data16
arpl
out
push
call
dec
push
add
repnz
ds
icebp
hlt
or
xor
xor
adc
jmp
xchg
add
inc
cmp
nop
ljmp
jle
daa
out
jb
ret
addl
pop
jecxz
aad
dec
inc
int
call
les
in
adc
push
mov
lods
push
mov
gs
outsl
ljmp
mov
push
cmpl
xor
lret
pop
mov
in
mov
fdecstp
mov
int
push
add
sbb
aas
bound
iret
rcrb
adc
mov
addb
inc
insb
call
daa
je
push
leave
ret
xchg
ret
fcom
es
mov
loopne
cmpsl
movaps
mov
mov
push
pop
and
add
pop
test
jae
sbb
and
sub
sbb
flds
div
bswap
js
les
push
jo
dec
daa
insb
jae
cltd
sarl
test
mov
sbbb
xchg
lea
and
in
dec
jmp
jmp
out
andb
outsb
es
insl
sub
xor
pop
mov
or
mov
sub
negb
dec
push
pop
dec
and
stc
iret
mov
cmp
sub
xor
out
lods
jl
jbe
loope
xor
out
mov
cmp
iret
xchg
bound
jns
shlb
push
or
add
orb
dec
pop
in
ds
jecxz
addr16
sub
clc
push
sub
add
fbld
js
popf
movsl
movsb
outsl
dec
pop
push
sub
mov
lods
int3
and
sarl
add
lock
lahf
enter
xlat
mov
sub
pop
out
mov
ds
cltd
sub
push
adc
cld
fiaddl
outsb
fcmovnu
mov
out
lock
mov
imul
xlat
ds
or
and
or
rolb
add
mov
pop
cmp
fwait
and
ds
or
mov
xchg
test
ljmp
push
test
push
enter
and
pop
push
lds
mov
fisubrl
dec
mov
loope
push
fisttpll
pop
imul
rcl
jecxz
js
shlb
into
rclb
repz
jecxz
mov
sahf
repz
push
cld
fnstenv
cmp
add
pop
out
aam
addr16
mov
and
call
inc
xor
pop
insb
cwtl
add
jne
movsb
adc
outsb
xchg
mov
jae
pop
xor
jp
mov
cmp
lods
or
adc
outsb
push
push
inc
cmc
mov
lret
pop
cmp
and
xchg
cltd
mov
pop
sbb
mov
or
mov
lock
adc
add
or
std
insl
jmp
iret
cmp
xchg
and
jo
imull
lock
sbb
mov
rcrl
fdivl
xor
aaa
mov
xor
clc
popf
mov
movsl
pushf
mov
mov
dec
orb
xchg
inc
dec
cmp
xlat
jl
out
xchg
xorb
cli
test
test
lret
cmp
test
push
fdivrs
lea
lahf
or
call
dec
outsl
mov
mov
fs
aam
sbb
pop
mov
push
in
mov
add
jmp
aad
insl
hlt
push
mov
notl
dec
ljmp
dec
pop
pop
mov
push
andb
aaa
mov
xchg
ffreep
pop
rep
fisubrl
xchg
add
int
jge
addl
lcall
ds
xlat
sbbb
imul
add
cwtl
ds
ja
xor
pop
inc
inc
push
xchg
adc
jecxz
rcll
ja
xchg
insb
fwait
xchg
jo
in
cmp
jmp
divb
pop
loope
xchg
cld
pop
mov
dec
in
mov
les
pop
data16
xor
bound
inc
leave
fwait
add
push
cli
cwtl
scas
sub
testb
xorl
daa
sbb
fdivrl
dec
repnz
les
decl
lret
out
lock
aaa
scas
mov
repnz
xor
dec
jle
jne
outsb
mov
pop
pusha
sbb
decl
insb
jae
sub
imulb
mov
jmp
inc
ja
test
pop
and
shlb
popa
cmp
adc
xor
aad
aad
adc
cld
jnp
push
jl
push
jecxz
and
notb
inc
pop
mov
push
out
int
sub
cmp
lods
sbbl
orl
xor
lods
std
in
lock
movsb
into
push
loope
test
lods
push
mov
jp
les
ja
movsl
call
sbb
mov
jbe
inc
fldcw
lea
jge
xor
ret
xor
insb
imul
push
push
call
ldmxcsr
loop
mov
or
push
sub
mov
mov
loope
sbb
clc
ljmp
mov
cmp
mov
dec
cmpsl
cs
test
insb
int
inc
pop
dec
insl
fnstenv
out
pop
iret
pop
add
lds
inc
hlt
scas
iret
adc
stc
popl
xor
jp
std
add
mov
into
mov
mov
or
mov
dec
mov
pop
pop
push
dec
xchg
ds
xchg
and
xchg
rclb
hlt
and
andl
sub
inc
test
fsubrl
jg
gs
xlat
sbb
adc
push
iretw
out
mov
pop
mov
mov
clc
jle
fisubrl
cmp
cli
hlt
cld
loope
out
rcll
shrl
adc
xchg
jl
out
sub
mov
pop
jbe
hlt
mov
pop
fldt
pusha
cmp
xlat
pop
cmp
sub
push
sub
mov
sbb
sbb
jbe
enter
adc
push
lods
sti
jne
mov
mov
ficoml
add
inc
nop
push
mov
mov
push
dec
sti
push
dec
add
cmp
outsb
mov
sub
xchg
std
fld
push
mov
movsl
insb
sbb
scas
cmp
insl
insb
push
std
push
testb
ret
hlt
iret
push
divps
mov
mov
inc
adc
mov
sub
pop
sub
andb
pop
ret
mov
cmpsb
jnp
dec
dec
cmp
jns
cmp
pop
clc
and
cmpsl
stc
sahf
out
mov
push
mov
mov
push
mov
pop
push
mov
lea
push
pop
stos
pusha
repz
sub
out
repz
push
add
popa
into
mov
jl
xchg
loope
push
decl
out
mov
lret
mov
mov
loopne
pop
mov
jb
or
movsb
push
jecxz
sarl
mov
aas
enter
cmp
stos
test
adc
lods
add
cmp
xchg
cmp
adc
lods
push
sbb
mov
add
fs
mov
fwait
or
lds
ss
hlt
pop
dec
dec
lock
xchg
loope
inc
mov
orb
inc
addr16
movsl
js
cmp
or
imul
jmp
es
sbbb
mov
popl
mov
push
dec
int3
test
faddl
jmp
rolb
mov
roll
jle
xchg
das
sub
in
inc
push
cmp
std
ljmp
jb
sub
fisubrs
cwtl
mov
sbb
outsb
scas
adc
dec
jl
out
dec
xchg
sub
xchg
jo
stos
cld
mov
and
mov
int3
mov
aam
repnz
rcl
inc
in
mov
sbb
mov
sub
xchg
inc
adc
aad
test
imul
lea
and
inc
mov
jb
testb
cmpsl
xor
add
fcompl
mov
jge
add
pushf
imul
sub
xchg
jge
mov
mov
inc
ret
add
jno
and
sar
mov
adc
movb
xlat
xchg
add
or
fs
fcompl
xchg
cmp
add
pusha
cmp
imul
pop
jg,pt
les
adc
jne
bound
lods
mov
xor
in
scas
cld
push
dec
mov
sub
es
lock
mov
cmp
filds
xchg
mov
rcrb
enter
sbb
cld
in
testl
and
cmp
push
or
lods
sbbl
push
shll
mov
loopne
inc
xchg
inc
hlt
sahf
push
adc
adc
inc
dec
shl
clc
jge
loope
xchg
mov
cs
xor
mov
adc
xor
sbb
arpl
push
or
mov
adc
and
out
jo,pn
mov
cltd
lret
shl
xor
mov
push
cmp
rcr
or
pop
push
jns
lret
outsb
add
push
int3
nop
ds
iret
cmc
les
mov
and
push
push
pop
shll
dec
or
or
pop
repnz
loope
add
sub
scas
jne
jae
fs
test
into
leave
xchg
push
fcmovb
into
cmovne
sbb
repnz
hlt
icebp
pop
outsb
xor
sub
mov
arpl
jns
pop
mov
push
loop
and
push
and
add
orl
push
nop
lods
mov
xlat
mov
mov
xchg
inc
jo
pushf
push
das
test
add
and
ss
mov
test
clc
leave
xchg
jae
mov
sub
ja
push
jno
and
xchg
test
sub
movsb
inc
jo
outsb
rcr
sbb
add
xchg
test
inc
and
out
hlt
aaa
sub
xchg
fsubrs
push
aaa
cmp
fnstenv
mov
aad
bound
int
pop
mov
push
hlt
pop
nop
mov
in
mov
ficomps
xorl
inc
push
sub
push
jnp
movsl
sub
or
sbb
cwtl
xor
stc
or
mul
mov
arpl
jge
lods
mov
push
push
and
inc
cwtl
pusha
gs
push
cmc
adc
sbb
das
das
js
test
repz
lcall
or
shrl
popf
and
data16
xchg
in
inc
jnp
mul
imul
dec
cmp
outsl
shll
enter
xor
lcall
jnp
lret
aam
aad
scas
shrb
jne
orb
mov
xor
sub
imul
into
mov
xor
adc
inc
xor
dec
xchg
shr
stc
pop
int3
jl
icebp
xor
push
and
inc
xchg
push
in
in
movsb
into
xchg
aaa
sbb
cld
sbb
test
xor
push
repz
ss
pop
fsubs
mov
mov
push
adc
jp
cmc
xor
mov
mov
movsl
cli
pop
adc
in
test
mov
add
sub
mov
mov
or
and
mov
rclb
mov
dec
and
cld
and
inc
fcmovnb
lods
jo
sbb
jl
mov
mov
popf
aad
dec
enter
and
sub
adc
jae
imulb
stc
and
mov
jno
out
add
pop
or
movsl
mov
mov
push
cmp
xchg
or
test
fistpll
inc
xchg
cmp
add
and
mov
cld
dec
mov
imul
sub
stos
xlat
jno
into
imul
ja
inc
dec
mov
mov
aad
xor
mov
adc
je
lcall
lods
or
lahf
imul
lods
fldl
shlb
ss
subl
das
push
inc
test
xchg
sarb
lock
shlb
add
cwtl
push
rcrb
insb
pop
mov
push
mov
jne
test
dec
push
stc
jp
outsl
call
test
jmp
out
stc
mov
and
rorl
push
dec
hlt
imul
mov
cmp
stc
xchg
stc
enter
jl
xchg
and
lock
loopne
push
addr16
cmpsb
jnp
or
sahf
cmp
inc
mov
adc
sti
cmp
lock
sti
mov
mov
iret
sbbl
outsl
and
lahf
mov
push
jae
fs
or
repz
sbb
rcrl
sub
mov
and
negb
mov
jmp
stos
mov
gs
push
add
repz
lds
add
mov
std
idiv
cmp
out
lret
mov
out
std
mov
les
mov
aas
scas
daa
fsubrl
push
cmpsl
inc
cli
sbb
cmpsl
xor
fwait
es
sbb
nop
or
outsb
mov
cmpsb
dec
cli
outsb
xchg
inc
ret
insl
inc
shlb
sub
cmp
pop
clc
lods
lea
and
push
lcall
iret
adc
iret
xor
call
addr16
ss
imul
inc
hlt
imul
imull
jns
inc
setno
loop
or
cld
cmp
add
icebp
in
adc
jae
ljmp
icebp
imul
hlt
mov
loop
add
mull
je
idivl
lock
loop
test
or
fwait
stos
fsubs
push
outsb
roll
jb
or
movsl
jne
inc
lret
scas
dec
test
jmp
loope
inc
xor
aaa
mov
imulb
pop
stos
inc
mov
add
hlt
in
popf
pushf
pop
stos
out
sahf
stos
pusha
jb
cmp
lea
aas
das
xchg
imul
fidivs
push
mov
arpl
push
adc
inc
adc
xchg
pop
scas
fdivrs
jp
sbb
mov
push
add
js
loop
std
mov
test
fwait
mov
stc
popf
xor
int3
adc
scas
inc
inc
nop
push
xor
push
cvttps2pi
mov
adc
imul
cmp
ljmp
adc
cmp
inc
push
push
add
dec
push
push
sub
xchg
xor
popf
sub
mov
aam
jno
shrb
stos
jns
xor
rclb
xor
scas
sbb
push
sbb
ja
push
inc
std
mov
fmul
out
push
sub
dec
aaa
inc
std
xchg
sbb
into
stos
and
imul
mov
add
in
mov
int3
mov
jmp
inc
xor
mov
mov
push
xchg
mov
cs
enter
adc
mov
test
adc
push
cld
jns
pop
adc
xchg
cmp
jbe
pop
mov
mov
mov
xchg
adc
mov
jo
out
sub
cli
lock
loopne
jl
or
mov
rcrl
cli
clc
call
not
ret
sbb
ret
ret
pop
cmc
sbbl
in
add
aaa
loope
xchg
mov
pop
rol
cmpsb
test
dec
xor
add
inc
mov
jno
fsubp
push
cmp
xchg
in
push
nop
pop
int
and
cltd
pop
xor
div
outsb
push
aad
adc
xor
ja
fistpl
or
jae
cmp
dec
add
xchg
mov
adc
lods
inc
in
mov
test
inc
xor
and
pushf
je
loope
lock
repnz
cmpb
scas
push
les
shll
aas
outsb
jp
dec
rclb
mov
cmpsl
arpl
imul
push
pop
in
imul
test
pinsrw
stc
push
call
je
and
push
outsb
jg
arpl
movsb
loop
xchg
cmp
insb
icebp
mov
xchg
sub
sbb
test
inc
test
xchg
cmp
insb
mov
ret
jo
mov
sbbl
insl
mov
scas
shrb
ss
aas
lret
mov
jl
sbb
lods
cmc
push
std
mov
stc
xchg
iret
movsb
in
mov
dec
std
sbb
sbb
cld
or
mov
rorl
mov
add
stc
call
gs
or
mov
push
and
sbb
ret
ficoms
test
sti
sbb
add
and
mov
shr
pusha
scas
adc
fimull
pop
popa
insl
jmp
loope
call
xlat
or
xchg
cltd
push
js
xor
xchg
lods
jne
jne
push
repz
scas
push
xchg
push
and
lds
aam
mov
pop
rcrl
sahf
fistpll
sub
out
ret
cmp
inc
inc
xchg
sarb
ds
das
inc
repz
nop
out
add
xor
mov
cmp
mov
pop
dec
pop
xchg
inc
lea
push
pop
aas
mov
mov
jecxz
push
call
out
movsb
test
lods
dec
icebp
pop
outsl
sbb
inc
push
mov
and
lcall
insb
lds
inc
rclb
push
pop
push
daa
in
test
lods
add
lods
sbb
loop
pop
push
xchg
jge
fdivrs
loopne
outsb
push
cmpsl
mov
xchg
cmp
xchg
xor
push
jnp
sbb
xlat
aam
jno
inc
xchg
arpl
test
lret
scas
jne
filds
sbb
in
dec
mov
sbb
inc
push
jle
imul
stc
mov
xchg
sub
fcmovnbe
aam
sbb
mov
xchg
mov
insb
push
or
div
lahf
ret
test
scas
jg
jmp
pop
stos
mov
imul
ljmp
jo
hlt
inc
andb
cmpsb
insl
es
xlat
aad
repz
cmpsl
pop
ja
push
testb
pop
or
cmp
mov
dec
mov
or
aam
mov
leave
outsl
and
addr16
test
xchg
push
pop
out
mov
aas
push
fstps
adc
inc
jmp
lods
adcl
jno
out
mov
mov
dec
fcoml
nop
or
sbb
cltd
sbb
pandn
jmp
push
jl
mov
in
cmp
test
iret
add
cmp
pop
ficomps
fistpll
into
jp
lret
push
xchg
pop
inc
imul
movl
fadds
lods
mov
pop
mov
aam
pushf
and
push
fistps
pop
out
ja
roll
ljmp
cmc
aad
js
mov
stos
pop
cmp
sarl
daa
std
pshufw
cmp
jae
aad
adc
dec
mov
jmp
mov
xchg
enter
push
jmp
pop
jb
lret
jo
sbbl
or
nop
ljmp
data16
in
xor
adc
scas
addr16
push
arpl
adc
fwait
push
xchg
cmp
sbb
sarb
andl
or
cmp
in
outsb
lods
jle
push
pop
sarb
movsb
roll
push
push
cs
mov
xchg
dec
hlt
mov
div
gs
mov
jo
inc
cmpsl
fcoml
add
stos
jns
xchg
adc
lret
inc
scas
xor
fidivrl
jmp
cltd
dec
test
inc
sbb
call
aaa
je
dec
mov
mov
jmp
dec
inc
jae
xor
mov
cld
xchg
fstl
adc
fs
daa
jae
pop
push
cmp
sbb
repnz
repz
pop
add
cld
add
div
in
movsl
hlt
mov
dec
iret
xor
mov
sbb
and
mov
or
rorb
addr16
loope
call
popl
adc
push
jb
xchg
xor
xor
add
or
xor
ss
pop
lahf
mov
push
adc
or
ja
or
inc
fdivrp
les
and
stos
andl
sbb
push
cmp
fmuls
lahf
cmp
dec
xor
mov
mov
sbb
mov
cwtl
mov
fsubl
mov
sbb
ds
dec
or
test
arpl
jnp
pop
test
fidivrl
xor
aaa
in
pop
sub
clc
push
mov
stos
fs
dec
sbb
jge
cmp
clc
adc
push
cmc
push
dec
push
add
adc
jns
push
lret
push
sub
popf
andl
shl
push
dec
cmpsl
mov
mov
sti
inc
xchg
mov
pop
fcomp
ljmp
xchg
pop
out
and
int
adc
mov
pop
pop
into
sub
arpl
mov
loop
aad
add
and
pop
mov
enter
xchg
xchg
fnstenv
or
xor
jnp
in
cmp
push
rcll
add
dec
xchg
pop
clc
cli
push
pop
inc
push
xchg
scas
or
insb
dec
xchg
sub
sti
xchg
fstpl
add
add
cmp
cwtl
subl
sti
push
in
pop
dec
xchg
push
les
xchg
cmp
test
andl
mov
faddp
inc
pop
and
dec
call
jo
in
pop
insb
pushf
sub
enter
jmp
dec
lea
data16
mov
cmp
mov
cli
adc
inc
jg
stc
adc
mov
mov
cmc
mov
mov
ret
inc
and
inc
insb
dec
xchg
aad
mov
mov
push
jb
scas
cli
mov
xchg
mov
inc
jmp
and
jo
cmc
jno
hlt
loopne
inc
shll
insl
sub
lods
cltd
cmp
mov
xchg
mov
or
addb
inc
neg
into
dec
xchg
cltd
xchg
xor
inc
xchg
lret
in
inc
adc
lret
rorl
insl
into
outsb
mov
pop
mov
repnz
jmp
sbb
adc
popf
adc
popa
mov
xchg
push
loopne
xchg
mov
popa
adc
xchg
sub
mov
imul
js
mov
clc
sub
into
pop
scas
stos
stc
or
push
xchg
mov
js
or
sub
xlat
jecxz
shl
ljmp
and
xor
call
data16
sub
push
fisubrl
sub
hlt
repz
inc
push
xchg
xchg
call
adc
cmp
or
pushf
mov
scas
and
pop
out
mov
aas
cld
mov
cld
xor
inc
in
out
decb
mov
push
lods
dec
icebp
pop
jns
js
shrl
or
int3
xchg
ds
rcrl
jge
movaps
xor
jp
push
imul
push
dec
jne
cltd
cmp
dec
inc
inc
xor
std
push
test
jge
test
iret
push
loop
pop
test
js
mov
xchg
pop
leave
inc
adc
nop
jae
jae
pop
in
or
es
aaa
cmp
pop
mov
arpl
sub
outsb
add
or
xchg
pop
loope
daa
or
cmp
dec
dec
inc
bound
dec
adc
add
lods
cmp
jo
mov
adc
dec
into
je
mov
jns
aam
push
dec
xchg
pop
pop
jmp
adc
rcpps
mov
xor
aaa
and
scas
cmp
push
scas
jne
cmp
xchg
ficompl
lods
mov
inc
mov
inc
jbe
and
inc
pop
test
cs
mov
add
or
subl
push
imul
xor
insb
mov
mov
bound
mov
mov
dec
ljmp
sbb
xor
xor
and
cmp
jecxz
gs
aam
ret
out
push
aaa
jmp
push
les
fsubrl
daa
in
cli
sub
and
dec
inc
fistps
xchg
pop
std
data16
dec
inc
and
xor
dec
xchg
sti
pop
xorb
dec
andb
cmpsl
sub
cmp
mov
xchg
popf
mov
mov
shl
imul
mov
sub
mov
iret
sbb
push
data16
imul
imul
repz
xchg
test
jmp
les
mov
ret
xchg
into
filds
mov
outsb
leave
fwait
shlb
lea
mov
insb
fldt
test
clc
fsubrl
ds
icebp
dec
jno
mov
xor
stos
xchg
loope
push
inc
stos
inc
iret
jmp
xor
add
repnz
popa
mov
push
cwtl
incb
pop
mov
mov
enter
xchg
mov
ja
addr16
mov
mov
in
pop
imul
sti
or
inc
in
test
jg
mov
adc
mov
mov
push
pop
sbb
mov
mov
sbb
shlb
dec
xchg
ds
push
xor
test
pop
sbb
shlb
pop
std
pop
insl
leave
in
jle
dec
mov
mov
repnz
adc
dec
mov
mov
sbb
and
testb
loop
sbb
mov
clc
data16
std
or
push
sti
cmc
mov
and
add
and
popf
loopne
pop
mov
addr16
fsub
jg
xchg
push
jecxz
pop
xor
or
enter
xchg
jae
arpl
jge
jge
pop
mov
in
xchg
sbb
mov
in
loop
mov
inc
cmp
mov
xchg
sub
adc
cld
xor
fs
fildll
loop
mov
aaa
hlt
xor
adc
push
dec
scas
pop
xlat
inc
mov
ret
repz
fdivl
sbbl
test
test
rol
data16
fld
popa
mov
imul
sbb
jne
xchg
adc
lock
cmpsb
mov
jmp
inc
xor
rolb
mov
dec
clc
rol
push
mov
nop
sub
lea
std
push
pop
mov
push
cmpsl
pop
and
stos
dec
pop
faddp
mov
fistpll
inc
sbb
pop
cmpps
ja
in
shlb
stc
fwait
icebp
rolb
lea
daa
inc
loop
cmp
xchg
or
mov
pop
or
xor
sub
popl
data16
push
and
jle
bnd
fs
xchg
movsb
or
lret
sbb
popa
in
jb
sbb
jo
add
or
cmc
test
dec
rcrb
leave
into
cmp
insl
mov
adc
sar
xor
rorb
repnz
mov
fdivl
and
push
push
aaa
int3
mov
test
insb
add
jb
outsl
leave
cmp
cmp
xor
imul
xchg
decb
sub
jnp
ss
loope
es
pop
lahf
movsb
ficompl
xchg
nop
pop
and
imul
push
dec
cmpsl
pushf
xor
xor
shlb
sub
fwait
in
inc
and
add
mov
mov
xchg
lock
xlat
shrb
loop
enter
jge
push
push
shll
xor
popf
xor
cmp
testl
loop
ja
nop
dec
shlb
inc
and
or
jb
nop
pop
mov
jns
dec
inc
scas
or
sbbl
fsubr
data16
fisubrs
in
pop
ja
mov
sub
lea
sbb
test
inc
mov
mov
xchg
es
and
mov
xor
hlt
pop
ja
xor
dec
test
dec
inc
movsb
pop
clc
push
add
pop
lcall
add
insb
dec
stc
ja
push
movsl
dec
inc
repz
jmp
xchg
ffree
fcomps
cmp
mov
mov
repz
add
mov
cli
shr
mov
pop
xor
jb
mov
insl
push
aam
test
cbtw
aaa
and
aas
lods
repnz
dec
xchg
push
aam
push
or
popa
xor
and
arpl
pop
adc
lret
test
out
inc
ljmp
daa
adc
and
leave
loope
xchg
sahf
nop
jne
dec
cmp
cmp
push
sahf
inc
jmp
pop
fldl
push
into
and
mov
xor
xor
jno
xchg
adcl
add
movsl
nopl
dec
mov
cmpl
mov
jle
call
mov
je
mov
inc
push
xchg
in
xchg
loop
mov
lds
sub
clc
loope
repz
adc
repz
push
cmp
leave
movsb
sub
stos
dec
test
xchg
and
in
add
sub
jge
cmpl
sbb
mov
sub
jecxz
daa
outsb
sub
aad
fs
insb
fisttps
jl
movsl
cltd
adc
aam
insb
xor
imul
movsl
sub
rclb
jnp
orl
test
push
loopne
aad
adc
iret
int3
orb
xor
aaa
test
inc
and
jne
jp
jno
movsl
add
mov
sbb
icebp
jmp
scas
jae
lea
fcmovnbe
inc
out
sbb
push
pushf
ljmp
in
insl
mov
fnsave
nop
aas
dec
push
and
nop
cmpsl
loop
inc
xchg
sub
pop
mov
insb
pop
fnstenv
aaa
jnp
xsha256
cmpsb
nop
fidivs
imul
rol
jbe
add
sub
testb
notb
repnz
inc
cmpsl
xchg
lret
aam
jbe
dec
push
insb
jg
das
nop
mov
jo
outsb
popa
inc
xchg
mov
push
mov
sbb
cmp
lds
leave
mov
xchg
out
lret
ljmp
pop
or
loope
add
stc
out
add
ljmp
bound
fs
push
aad
scas
mov
and
mov
cmc
fimuls
inc
mov
or
mov
jmp
dec
iret
jecxz
enter
and
sub
test
lods
jle
jns
in
add
bound
sub
imul
cmp
jl
aas
add
popa
std
jns
cmp
lcall
mov
fistpll
cmpsl
mov
pushf
adc
cmp
sub
iret
push
dec
movsl
lret
loope
push
jg
jnp
insl
add
lcall
xchg
sti
ret
jo
pop
mov
push
push
mov
lcall
int3
cmc
add
repz
xor
shrb
movsl
cwtl
mov
push
jmp
loopne
jo
movsb
pop
je
sahf
lret
nop
aas
fisubrs
xchg
imul
dec
xchg
pushf
fstp
add
push
mov
stc
hlt
fistpl
hlt
push
mov
xor
and
mov
clc
loope
mov
mov
push
push
gs
xor
ficoms
or
fcomps
or
sahf
hlt
pop
cmp
in
repnz
inc
cs
xchg
xor
aas
and
mulb
mov
nop
pusha
imul
inc
mov
pusha
jbe
adc
mov
sbb
push
jo
mov
adc
or
adc
push
inc
jl
out
fcmovbe
decb
cmp
jno
fsubs
adc
cmp
xor
repz
sbb
push
xchg
inc
pop
push
mov
ljmp
mov
adc
and
dec
pop
je
sbb
mov
std
xchg
dec
push
dec
shl
dec
cmp
dec
inc
fimuls
cwtl
pop
xor
sub
xchg
push
dec
popa
xchg
or
cmpsb
in
movsl
xchg
lret
sahf
jle
mov
outsb
pushf
mov
int3
sbb
test
xor
sub
test
lea
sub
adc
cmp
jo
lea
jno
cwtl
lea
lahf
out
es
or
popf
pop
in
cmc
push
js
jno
adc
cmpsl
cmp
pop
and
add
sub
mov
push
nopl
push
xor
jp
or
push
or
adc
daa
je
out
jne
jo
and
hlt
shll
mov
sub
mov
fimull
jge
or
into
call
dec
out
pop
adc
add
push
and
adc
test
mov
shl
and
add
daa
movsb
outsl
aam
lock
shll
std
icebp
mov
or
push
leave
sti
adc
out
lods
pop
mov
ret
mov
sbb
pusha
mov
ja
out
jl
push
imul
leave
out
cmp
inc
xchg
aas
dec
dec
and
dec
stc
int
imul
sbb
adc
cltd
sarb
push
jg
pushf
shlb
popf
dec
outsl
cli
cmc
and
lock
repz
inc
cmc
adc
sti
jl
and
xchg
and
rcrl
in
add
jge
insl
add
test
xchg
sarl
adc
inc
cs
movsl
fldcw
imul
test
movsl
inc
or
xchg
lods
fucomip
xlat
mov
imul
ljmp
xchg
lods
xor
sahf
adcb
sub
nop
iret
ficoml
and
pop
xchg
je
xor
cmp
mov
sub
mov
push
jae
mov
aad
mov
adc
push
nop
arpl
imul
test
xchg
movsl
jnp
mov
mov
mov
aaa
pop
imul
sar
and
jae
mov
lcall
mov
xchg
adc
add
fidivl
loop
insb
pop
inc
cmp
imul
mov
mov
fadd
mov
cs
dec
inc
popa
sub
mov
stos
or
loop
xor
push
arpl
int3
mov
jg
mov
push
out
xchg
inc
cmp
ds
insb
daa
in
loop
mov
cs
pop
mov
testl
addr16
int
rorl
dec
mov
mov
cmpl
ficoms
pop
add
sub
cwtl
or
jns
fmuls
test
mov
iret
out
dec
pop
sti
and
dec
ret
pop
loopne
fbld
decb
xor
dec
xchg
aam
cwtl
xchg
cmp
pop
xor
inc
pop
test
in
fcoml
rcll
or
or
shll
push
pop
mov
jmp
rcrb
fidivrs
xlat
popa
fldenv
out
mov
xor
push
add
inc
out
orl
aad
push
cmp
mov
mov
call
pop
pop
add
insb
pop
addr16
sub
mov
ret
add
arpl
out
out
aad
loopne
push
dec
inc
lret
insb
add
mov
mov
pop
lods
fistpl
js
xchg
mov
movsl
add
push
sub
incl
add
into
pop
ss
and
mov
iret
fs
jg
pop
push
addb
pop
cmp
cmp
mov
mov
roll
adc
fcompl
push
xchg
lds
into
adc
push
and
ret
pop
dec
fs
cmp
sbb
sub
xlat
cs
jmp
mov
lcall
jmp
fsts
ljmp
movsl
pushf
out
sub
bound
or
jle
cltd
xor
sbb
sub
fidivrl
arpl
popa
cmp
jp
imul
inc
jmp
jns
out
jae
mov
imul
sbb
jae
loopne
in
dec
mov
mov
es
repnz
cmp
in
xchg
mov
stos
jge
les
pop
or
adc
flds
inc
addr16
xchg
mov
jmp
add
push
inc
insl
ret
incl
push
lret
push
stc
jnp
rolb
pop
and
movsl
mov
xchg
lret
ljmp
cmp
dec
sti
sbb
xor
aaa
mov
lods
xor
xchg
cmp
xor
mov
sahf
dec
mov
add
out
clc
mov
in
jmp
scas
mov
add
insb
push
movsb
cmp
lods
sub
fcompl
add
pop
mov
xchg
nop
mov
stos
adc
pop
bound
repnz
mov
xchg
cwtl
jmp
mov
or
sbb
clc
push
and
lret
je
movsl
negl
ds
cld
jl
mov
mov
dec
push
ss
mov
in
cs
adc
imul
push
pop
fisubrs
pushf
dec
sub
add
jmp
pop
mov
clc
enter
outsl
stos
mov
out
sbb
cmpl
insl
dec
jns
aas
ss
jge
and
jnp
jl
pushf
ret
or
add
jge
inc
test
std
xchg
ja
mov
insb
in
movsb
popa
cs
sbb
fisttps
out
mov
mov
fsubrp
rcl
nop
ds
outsb
adc
insb
mov
xchg
jno
outsl
cmp
lock
clc
sub
push
mov
fs
push
ror
jns
outsb
call
mov
std
enter
adc
inc
add
pop
cmc
aam
movsb
mov
in
cmpb
cs
mov
mov
sbb
inc
lret
xchg
loop
mov
mov
icebp
test
mov
and
xor
lahf
sbb
dec
mov
sub
xchg
push
sbb
aam
dec
test
cmp
xor
mov
jnp
cmp
pop
nop
push
popf
sub
data16
and
add
in
or
loopne
aad
sub
enter
push
test
fsubs
inc
outsb
shll
movsb
nop
cltd
push
xchg
adc
sub
loope
sub
cmp
ljmp
xor
cmpsl
pusha
popf
popa
sbb
das
xchg
pop
ss
std
xor
test
jp
mov
cmp
dec
dec
fcmovnu
mov
subl
mov
jno
gs
xchg
adc
dec
xchg
ds
xchg
movsl
jp
cli
mov
mov
mov
lahf
fisttpl
gs
pop
pop
mov
int3
push
or
in
push
jp
rcll
push
hlt
fwait
jbe
arpl
mov
mov
pop
popa
xor
cmpsb
inc
xor
loopne
mov
outsb
out
incl
insl
addr16
pushf
jecxz
mov
adcl
mov
cld
mov
inc
div
ss
jo
jge
cli
in
pop
mov
icebp
in
jl
cs
lret
inc
xchg
ss
addr16
jl
pop
mov
fsubrs
and
xchg
adc
cwtl
icebp
ror
add
and
or
out
or
mov
cmpb
jbe
sbb
out
and
int3
lcall
je
rcr
mov
or
xchg
inc
pop
dec
shrl
sub
fiaddl
sbb
and
scas
sub
pop
insb
mov
shl
imulb
scas
sbb
add
sub
xor
inc
aaa
jp
xchg
xor
and
mov
mov
push
mov
pop
lock
loop
adc
sahf
hlt
shll
mov
xchg
cs
push
sub
testl
cmpsl
mov
insb
rolb
inc
insl
dec
lods
dec
sub
xchg
outsb
int3
ret
cmp
xchg
add
shrl
xchg
xchg
jbe
xor
xchg
lods
xor
or
leave
fidivrl
inc
add
out
cmc
cmpsb
icebp
lods
dec
mov
adc
lcall
in
adcb
inc
test
mov
jns
ds
repnz
mov
or
push
adc
pop
lret
mov
push
pop
push
mov
testb
in
xor
hlt
mov
push
ds
ret
int
fcmovu
adc
or
xchg
push
mov
mov
subl
lret
pusha
movb
pop
jo
sub
cmp
adc
aad
out
movsb
lock
push
or
rol
jle
cmovge
cmp
inc
repnz
daa
adc
push
ret
lock
push
enter
cmp
inc
in
inc
push
inc
rcll
adc
add
clc
loopne
jge
dec
mov
jo
nop
cmp
lods
push
dec
xchg
jbe
dec
xchg
nop
imull
push
test
or
test
ljmp
sti
cmpsl
fs
dec
fldt
and
dec
xor
jge
add
sbbb
repnz
jg
mov
jns
lahf
out
inc
inc
rol
jmp
leave
cmp
sahf
mov
cli
xchg
movsl
and
adc
test
call
movsb
mov
insl
mov
inc
jge
iret
jl
arpl
jno
shlb
mov
mov
out
inc
rclb
movntq
and
nop
in
ja
jnp
push
mov
loope
mov
adc
andb
out
mov
add
js
push
outsl
pop
add
in
lea
addr16
shll
xor
sbb
push
pop
push
test
fld
cli
mov
mov
mov
or
sarl
movsl
fwait
sub
xor
out
push
das
jns
dec
jp
jl
stc
lea
and
in
ss
jae
rolb
and
int
pop
es
fwait
xor
pop
xchg
cmpb
repz
jmp
jne
and
add
cltd
push
aam
pop
push
sbb
jns
enter
loop
insb
inc
dec
mov
push
add
dec
cmc
inc
decl
insl
sub
sbb
xchg
pop
divb
das
inc
pusha
mov
lcall
cmp
pop
fwait
cmc
mov
je
or
movsl
pusha
jne
sub
dec
jmp
int3
pop
mov
ss
clc
ss
adc
inc
fldenv
jmp
jno
sbb
and
shll
ds
or
testb
push
or
inc
in
pminsw
ror
mov
rolb
cmpsb
outsl
inc
add
xchg
cld
notl
sub
and
inc
push
js
xorl
ds
inc
pop
cmpsl
jbe
or
lret
je
pop
xor
mov
cwtl
fdivr
fildl
cli
sbb
sti
push
xchg
outsl
mov
movsb
mov
pop
inc
out
cltd
cmp
push
sub
scas
sbb
jnp
xor
dec
test
and
push
fmull
jns
mov
lock
push
sub
aad
mov
lock
out
mov
push
push
sub
lods
mov
insl
insl
push
je
xlat
pop
out
xorl
jl
scas
xchg
in
jecxz
jl
mov
insb
ret
sbb
xor
cltd
sub
pop
dec
loope
pop
sarl
xchg
sarb
sub
xor
pop
sub
or
mov
and
inc
fldenv
in
dec
jg
adc
mov
in
sub
shrl
xchg
sub
inc
push
sub
rorb
dec
and
mov
ret
das
test
push
inc
add
push
scas
cld
mov
mov
cmp
mov
fcomps
mov
sbb
mov
outsl
sub
inc
inc
andb
jmp
push
inc
movsb
jae
imul
int3
mov
add
pushf
pop
cmp
cmp
shll
inc
xor
mov
les
test
cmp
xor
fldcw
jns
mov
xchg
loop
notl
jmp
mov
dec
sub
pop
mov
repnz
test
and
inc
aad
movsb
add
out
je
sbb
cli
dec
xor
sub
scas
and
dec
lods
pop
es
xor
push
fistps
hlt
loop
xchg
jnp
mov
or
iret
inc
xchg
ss
mov
adc
ds
stc
and
insb
jmp
mov
mov
nop
test
data16
idivb
push
mov
xchg
inc
arpl
aad
xchg
sbb
ja
mov
andl
addr16
outsb
testl
rep
cld
popf
pop
mov
and
xchg
sub
xchg
inc
out
lods
nop
sbbb
das
push
out
lods
lods
push
mov
repnz
and
mov
adc
js
divl
dec
int3
mov
lods
jae
push
jle
push
dec
hlt
push
and
mov
push
jge
cmp
xchg
mov
pop
pop
xchg
addr16
inc
lret
leave
inc
fildll
cs
lods
push
pop
mov
ja
inc
dec
cli
xchg
push
add
mov
jmp
inc
sbb
push
popa
popa
pop
ret
inc
jg
fsubrs
cld
push
jmp
xchg
test
pop
lds
ljmp
enter
rcrb
inc
mov
or
mov
mov
and
adc
rcrl
and
cmpsb
or
out
lret
movsl
cltd
imul
pop
sbb
dec
out
cmp
pop
pop
or
loop
ret
cmp
adcl
mov
and
test
out
daa
sub
pop
xor
xor
scas
loopne
loopne
cld
movsl
dec
test
sub
les
mov
ds
mov
call
imul
jnp
jl
mov
lods
lods
loopne
enter
pop
mov
lea
add
inc
add
lret
int3
stos
adc
cltd
or
data16
jns
cli
dec
or
insb
xchg
mov
sbb
popa
int3
in
push
mov
inc
or
bound
mov
addb
int3
mov
or
rorb
loopne
and
add
add
mov
arpl
jb
add
pusha
add
pop
addb
aaa
cmp
ret
push
fsts
or
add
mov
xor
or
aaa
push
pop
xchg
sbb
pop
sbb
xor
out
cltd
dec
mov
push
fistl
in
xor
inc
je
cmp
inc
loope
mov
jle
lahf
out
outsl
movl
inc
add
fsts
push
stos
mov
aaa
xor
pop
push
lret
jae
lret
in
subl
add
cmpsb
xchg
popf
cwtl
cmpsl
aas
lds
aam
jns
jg
rcl
and
ficoml
pusha
sbb
dec
aaa
cmp
mov
dec
popf
and
mov
mov
ljmp
mov
cmp
xchg
lock
pop
mov
cs
jb
push
mov
cmpb
lds
mov
movsb
xchg
ljmp
clc
std
mov
mov
lea
add
mov
loopne
lock
fcoms
repz
mov
adc
imul
js
mov
stos
gs
cmpsl
sbb
divl
lahf
mov
lock
fildl
cmpsl
xor
sub
dec
imul
into
cli
sub
adc
sbb
pop
cmp
aam
std
xchg
xchg
lret
stc
das
xchg
and
push
aaa
aad
ljmp
ss
adc
and
mov
lret
mov
bound
mov
cmp
arpl
fisttpll
fidivl
es
jnp
pop
test
pop
dec
ss
data16
cmc
pop
sbb
mov
jl
push
lds
pusha
pop
test
aad
arpl
inc
mov
xorl
jg
imul
sti
sub
xchg
test
shrl
adc
mov
enter
push
jp
std
fsubs
stos
jmp
pop
ss
mov
cmp
add
and
lret
sub
scas
in
mov
inc
aas
cmp
jle
jne
push
mov
orl
mov
xchg
xchg
xchg
or
int
xchg
xchg
aaa
aas
adc
in
cmp
sbb
dec
inc
lods
adc
mov
sbb
inc
sbb
add
and
call
adc
and
mov
dec
jne
sarb
insb
mov
adc
jns
mov
shll
roll
scas
xor
pop
sub
push
imul
pop
ret
xlat
xorl
inc
adc
lea
jmp
mov
or
mov
popa
mov
pop
sub
sbb
stos
mov
int
mov
faddl
arpl
sbb
or
sbbl
hlt
jbe
xor
jl
js
inc
inc
cmp
test
call
push
stos
and
or
ja
xchg
mov
xchg
inc
xchg
dec
mov
inc
mov
push
stos
or
in
pop
mov
movsl
jle
test
dec
and
push
and
js
in
sub
jb
xor
shl
or
es
scas
mov
inc
jbe
jnp
sub
leave
mov
cld
cmc
sub
in
aad
push
cmpsb
mov
xchg
add
popf
and
jo
lahf
icebp
call
cmpsb
push
lods
or
adc
or
push
xchg
jl
inc
cmp
jns
dec
and
lods
ljmp
ljmp
aaa
loopne
and
jge
enter
test
dec
mov
adc
or
cltd
lahf
leave
pusha
test
and
push
repz
ja
xor
mov
sub
fdivrl
or
add
push
push
xchg
xchg
std
nop
dec
inc
xor
and
outsb
cltd
mov
cli
shlb
adc
xor
or
push
cmp
xchg
sub
ret
jle
lahf
and
in
repz
iret
into
imul
add
mov
ret
ljmp
lret
fsubrl
mov
out
inc
repz
shl
xchg
adc
sahf
and
sti
sbb
test
push
push
outsb
in
in
std
push
jae
subl
pop
pop
adc
sub
mov
cmp
mov
ja
pop
scas
orl
aad
insl
int
pop
pop
xchg
popf
fs
pusha
xor
fwait
inc
xorl
es
inc
dec
push
sub
adc
pop
xchg
je
scas
add
add
repnz
inc
mov
jns
movsb
sub
loop
in
jnp
jae
push
aam
enter
fsubrl
into
push
out
inc
mov
das
push
ja
hlt
push
mov
add
ret
cltd
xchg
es
pop
sbb
mov
cmpsl
sbb
shlb
mov
je
inc
jecxz
xchg
in
sub
xor
mov
test
or
adc
clc
push
mov
aad
push
fisubrs
stc
dec
fistl
cmp
fcompl
mov
lcall
fstl
loop
sahf
icebp
push
mov
cmp
jp
sbb
pop
adc
ss
lods
sahf
mov
loopne
pop
pop
nop
xchg
mov
jb
and
scas
ficoms
xor
mov
inc
bound
add
mov
add
cmpsb
jl
adc
xor
push
cmp
loope
cmp
jg
lcall
dec
out
pop
pop
popf
aam
fcoms
inc
xchg
out
push
mov
pushf
stos
xor
push
roll
mov
mov
bound
pop
daa
add
shl
into
or
inc
hlt
jb
add
shrb
inc
jne
pop
cwtl
lea
cmp
stos
mov
jo
pop
shlw
subl
mov
gs
dec
pop
push
inc
xor
mov
test
mov
jo
and
shll
cmp
sbb
jne
pusha
ja
jae
inc
pop
inc
adc
push
andl
stos
imul
and
test
popa
aas
pop
hlt
dec
adc
sub
lock
out
cmpsb
fs
mov
das
inc
adc
cmp
jmp
leave
cmp
test
jecxz
dec
sub
ror
or
out
push
jns
cmp
mov
cmp
outsl
fildl
jecxz
cmp
rorl
sti
jbe
and
or
popa
xchg
fsubrl
iret
repz
popf
sub
jns
sahf
ljmp
mov
stos
or
enter
jae
dec
adcb
inc
or
xor
leave
out
or
jnp
setbe
scas
mov
xor
add
mov
scas
jb
pusha
shll
iret
repnz
and
inc
mov
sbb
fdiv
popf
sub
in
or
pop
cmp
arpl
mov
adc
daa
mov
shll
dec
dec
inc
jbe
cmp
data16
push
push
adc
inc
push
aam
aaa
or
dec
xlat
aam
dec
ret
xor
arpl
add
mov
pxor
inc
jo
sbb
push
pop
in
jmp
cwtl
leave
rorb
not
xchg
cld
mov
xlat
imul
xor
inc
or
gs
scas
push
xchg
pop
lcall
repz
jle
mov
mov
sub
jne
mov
pop
icebp
mov
aad
pop
push
movsl
outsl
ja
movsb
push
add
fwait
cwtl
aas
push
stc
and
jb
sbb
jg
subb
xchg
sahf
lock
std
mov
int3
push
push
jmp
pop
test
mov
test
out
out
cwtl
push
mov
mov
dec
pop
mov
sbb
lret
sub
xor
cli
cmp
pop
adc
test
jle
dec
repnz
mov
enter
or
lods
add
mov
cs
inc
add
push
int3
lds
jne
mov
scas
xchg
mov
adc
aas
or
pop
jae
jle
add
cltd
js
jo
stos
xorl
ret
push
int
jo
aam
loope
inc
jo
stos
or
mov
push
pop
add
test
in
std
jo
shlb
mov
and
repz
pop
sub
lret
push
jp
sub
loopne
nop
inc
sub
mov
pusha
std
mov
jle
mov
xchg
cmp
pop
in
jnp
add
sbb
or
ror
mov
insb
mov
jl
xchg
sub
inc
cmp
aad
pushf
gs
cmp
loope
xchg
push
pop
rorb
addl
adc
rorb
lea
mov
and
mov
ror
sbb
pushf
xchg
jne
or
scas
sbb
or
ret
mov
jg
pop
dec
loop
xorb
fwait
inc
nop
jae
mov
cmc
xchg
inc
iret
sub
scas
mov
sub
xchg
mov
jbe
int
pop
faddl
test
stc
and
cmp
hlt
fmuls
dec
out
sub
mov
sbb
popf
jae
call
inc
arpl
in
dec
fstps
add
leave
push
pop
popf
rcll
mov
dec
xor
sub
out
notl
stos
lock
jp
mov
pop
in
and
shrl
test
inc
cmp
movsl
pop
call
std
xor
mov
add
xchg
mov
movsb
add
out
in
mov
sub
popa
imul
fs
cmp
into
std
cmc
lea
sub
and
xor
cs
loopne
int3
clc
pop
xor
out
mov
mov
loopne
cmpsl
push
fdivrs
pop
sbb
mov
inc
jnp
mov
dec
adc
add
pop
sbb
inc
or
add
mov
cmp
and
fldcw
push
add
mov
adc
inc
nop
and
lock
std
mov
push
and
jo
cmp
std
cmp
je
inc
cmpsl
xchg
xor
jecxz
mov
leave
std
lea
and
lods
stos
mov
popf
lea
jno
mov
dec
add
xchg
rorb
outsl
push
mov
xor
hlt
test
test
mov
add
hlt
push
push
idivl
pop
xchg
xor
int
sbb
insb
cmpl
pop
and
mov
out
mov
testl
adc
arpl
inc
orb
lock
sub
subb
pop
int
pop
inc
inc
addl
inc
xchg
imul
imul
inc
dec
push
aas
pop
cltd
movsl
cmp
jne
test
fldt
xchg
loop
dec
cltd
scas
and
push
pop
mov
aam
jo
rolb
imul
xchg
or
imul
les
sarl
push
push
rol
pop
add
jmp
jecxz
mov
xor
stc
xor
ret
test
push
sbb
adcb
xor
lahf
daa
es
ss
pop
inc
sub
xorb
cs
lret
rolb
sub
dec
testb
inc
pcmpeqd
in
adc
xchg
inc
adc
jmp
xchg
pop
dec
pop
iret
pop
scas
pop
rcrl
gs
mov
bound
mov
dec
mov
das
mov
addr16
and
imull
mov
mov
lds
inc
cmp
sub
inc
outsl
push
add
add
dec
push
loope
or
rol
ljmp
sub
aaa
cmp
lds
push
sbb
cld
fxtract
pop
push
mov
out
mov
addps
add
add
dec
ds
lea
testl
cld
enter
subl
cmp
xor
cmc
nop
inc
mov
loope
cwtl
mov
mov
jecxz
mov
add
je
imul
decl
stos
ret
rcrb
in
and
jns
nopl
jnp
pop
lcall
jl
mov
sbb
imul
xchg
sahf
adc
cmp
std
daa
cs
pop
push
mov
jge
add
das
adc
add
in
sub
sub
shll
jns
mov
xchg
or
xchg
adc
jne
cmp
or
aam
outsl
pop
repz
dec
inc
cmpb
mov
lock
movsb
test
pusha
lods
inc
roll
add
stc
mov
mov
xor
out
mov
adc
mov
ss
cmp
cmp
xlat
in
fs
xor
pop
and
nop
jnp
jecxz
nop
mov
jmp
repnz
cli
xchg
das
jle
push
pop
lods
push
pop
mov
scas
xlat
jle
ss
outsb
push
enter
insb
jmp
cmp
addl
xchg
dec
pop
push
or
push
cmp
test
sbb
jle
sbb
push
ret
add
jl
cltd
ja
mov
sbb
sbb
jg
cmpl
les
adc
mov
imul
dec
aam
cmpsl
mov
cltd
xchg
push
jle
pop
xchg
push
das
ret
sub
ret
sub
mov
iret
xorb
jns
addr16
mov
hlt
lods
mov
fsubr
and
loop
pop
mov
adc
cmp
out
aas
cwtl
sbb
xchg
cmp
insl
push
mov
push
shlb
or
mov
sbb
fwait
mov
gs
negl
inc
mov
dec
jb
push
fidivl
push
pop
pushf
scas
insb
xchg
pop
loopne
insl
jge
loop
les
daa
or
xchg
jle
popa
jl
mov
and
or
jo
mov
cmpsb
jp
fimuls
roll
adc
shll
adc
rorl
daa
or
outsl
loopne
pusha
jmp
jno
data16
and
in
sub
mov
lock
pop
sbb
mov
dec
lock
negb
pop
xchg
jne
mov
leave
pushf
out
mov
or
add
imul
out
push
ss
daa
subl
jns
add
aam
inc
xchg
inc
xor
push
pop
imul
notb
outsb
insb
adc
jecxz
movsb
data16
aad
jmp
call
push
inc
inc
and
cs
cmpsl
in
imul
ret
orb
push
cli
push
dec
ret
cltd
aam
xor
jle
jb
nopl
pop
mov
sub
sbb
mov
push
cmp
repnz
lahf
inc
inc
adc
ja
adc
pop
data16
sub
mov
jno
push
loope
test
or
push
mov
shl
andb
imulb
rorl
hlt
sub
xchg
in
pop
pop
add
outsl
ljmp
and
andl
push
xor
je
push
out
nop
rorb
sbb
adc
shl
sbb
in
in
in
out
dec
enter
mov
lcall
jnp
cmpsb
jae
xor
fmuls
cmp
popa
jb
mov
mov
dec
and
mov
cld
das
pop
cwtl
stc
ljmp
out
mov
dec
stos
sbb
pop
jbe
mov
test
ljmp
and
leave
add
push
inc
cwtl
jno
or
pusha
rcrl
leave
mov
push
sbb
mov
pushf
and
dec
mov
cmp
lahf
mov
jno
mov
mov
pop
lds
and
roll
jp
sbb
idiv
mov
sbb
cmpsb
imul
stos
jbe
mov
fnsave
cs
pushl
inc
mov
call
sub
jnp
xor
sbb
hlt
sti
adcb
sbb
flds
xor
repz
push
pop
xor
outsl
sarb
lret
xchg
cs
sti
addl
xor
mov
pusha
mov
lock
mov
mov
add
adc
popa
sub
inc
cli
push
xchg
mov
inc
addl
decl
cwtl
mov
pop
fiaddl
popa
lea
inc
mov
xchg
insb
xlat
sub
or
daa
fdivrl
fs
and
faddl
pop
dec
sahf
punpcklwd
ret
dec
int3
jae
mov
inc
adc
dec
inc
mov
es
xor
cmp
cmc
sbb
insl
sbb
stos
jge
mov
aad
sub
add
lcall
movsb
inc
fwait
cwtl
push
insl
xchg
scas
push
pop
xor
jl
sub
test
jmp
shlb
aad
rcll
add
int
fmull
cmp
popa
call
hlt
in
push
rcl
loope
sub
ret
jle
mov
enter
mov
outsl
out
or
popl
lret
xchg
or
mov
dec
testl
cmpsb
imul
sbb
out
pop
sub
arpl
dec
cmpsb
arpl
clc
inc
mov
cmp
or
lods
cmp
push
dec
inc
jae
push
shll
cld
jg
popa
mov
xchg
lahf
sbb
stos
xor
pop
ss
daa
xchg
icebp
rcrb
inc
xchg
mov
xchg
into
call
sti
out
scas
dec
cmp
adc
and
and
fs
icebp
mov
imul
addr16
cmp
xchg
orl
repz
cltd
mov
je
sahf
xchg
mov
hlt
xchg
or
and
dec
fnstsw
rorb
into
movsb
insb
negl
push
cmp
sbb
push
pop
fcompl
stc
fisttps
fldl
fwait
inc
scas
insb
pop
mov
das
loop
sbb
jns
movq
jl
adc
push
pop
mov
cmpsl
push
aad
cmp
mov
loope
in
sub
inc
cltd
mov
pop
fldt
push
adc
mov
adc
push
add
lods
imul
xchg
sti
jecxz
jl
add
ja
pushw
and
iret
xchg
pusha
ljmp
jo
push
pop
push
sbb
aam
push
dec
es
je
aam
push
push
call
dec
and
mov
adc
je
inc
xchg
sub
out
sub
mov
sbbl
dec
fs
dec
xor
cltd
lcall
mov
fwait
pop
fdivs
loopne
lcall
ja
loope
sbb
pop
mov
add
out
shrb
inc
mov
dec
imul
test
dec
fiaddl
fs
mov
test
xchg
les
jnp
aaa
in
add
and
les
mov
and
lea
and
or
pop
pop
out
mov
mov
push
scas
push
jno
dec
xchg
std
aad
in
jae
insb
pcmpeqb
or
rorl
addr16
int3
fadds
xchg
loopne
mov
pop
hlt
lea
jnp
mov
scas
mov
dec
aam
inc
sub
popa
mov
test
fdivs
xchg
jecxz
pop
das
lock
pop
or
mov
into
mov
dec
test
sti
cmp
cmp
inc
mov
xchg
dec
out
aas
rol
xor
jb
lods
mov
jp
ljmp
fstpl
pop
repz
divl
mov
ja
adc
jbe
add
popf
pushf
ds
inc
es
mov
sbb
shlb
pop
mov
cli
arpl
jl
les
je
jo
cli
pushf
pop
hlt
std
xchg
cmc
dec
mov
fsubrs
or
and
mov
roll
jne
mov
dec
push
in
adc
mov
push
mov
iret
cmp
clc
push
stc
js
sub
push
and
adc
push
ljmp
or
cmp
jmp
pop
cltd
stc
test
mov
cmp
mov
fnstsw
xor
lret
out
icebp
lds
das
push
rol
inc
inc
outsl
mov
movsl
fcmovnu
out
aam
rep
test
mov
inc
popa
fidivrs
fimuls
xor
std
pop
sub
add
xor
dec
loop
cmp
push
xlat
xchg
lds
fwait
jg
arpl
add
cmp
add
xor
mov
pop
push
or
xchg
call
fsubr
add
adc
adc
outsb
dec
cmp
sub
dec
dec
cmp
out
cmpsl
aad
test
sub
xor
sbb
xchg
push
in
jo
jns
fists
push
add
testl
dec
sbb
xchg
imul
jmp
pop
sub
cmp
int
dec
add
lock
jae
aad
cwtl
and
test
push
pop
insl
fcmovu
adc
inc
and
add
dec
cmp
xor
out
mov
lret
ja
adc
pushf
lret
clc
stos
aaa
pop
mov
push
pushf
icebp
adc
xchg
test
cmpl
fnsave
cmp
jecxz
jno
out
repnz
dec
mov
sub
cmp
cmp
jb
ss
int
adc
ret
out
mov
pop
inc
test
jmp
sub
pop
insb
in
jb
daa
xchg
imul
shll
xchg
aam
mov
pop
cmp
minps
ja
mov
mov
jl
xor
add
push
loopne
sub
sbbb
xlat
fdivl
mov
les
add
pop
mov
nop
insl
imulb
lods
sub
and
bound
xchg
mov
add
stc
dec
cltd
inc
outsb
pop
pop
addr16
enter
xchg
shll
add
and
scas
pop
dec
fdivl
hlt
jg
cmp
outsb
xlat
dec
mov
cltd
ret
sbb
daa
pusha
push
pop
aaa
xor
popa
int3
dec
subb
cltd
push
push
lods
dec
push
stos
dec
jo
and
and
mov
push
shll
adc
mov
add
inc
cmpl
xor
mov
insb
ds
bound
inc
aaa
sub
jbe
faddl
movsb
insb
pop
jo
push
ja
mov
inc
arpl
xchg
repnz
ud0
cmp
rdtsc
or
ds
sbb
cmpsb
pop
and
std
mov
or
int
lods
xchg
adc
js
mov
cmp
ds
or
movsb
pop
xor
add
rcrl
iret
pushf
sub
aad
cwtl
aad
stos
mov
add
jmp
fwait
inc
mov
push
faddl
inc
add
pop
cld
xchg
xor
in
pop
test
aam
inc
add
fsub
push
mov
imul
les
ret
dec
addr16
hlt
xchg
and
arpl
bound
pop
ja
lret
rorb
fcmove
scas
cmpsb
shl
jbe
xor
inc
mov
into
mov
jns
fisttps
psraw
fcmovb
jnp
pop
dec
and
xor
jge
out
pop
add
cmp
or
push
xor
lods
mov
dec
icebp
das
jne
xor
jno,pt
lods
mov
pop
lcall
imull
pop
inc
das
mov
pop
mov
lods
int3
ljmp
in
mov
mov
mov
mov
fstpt
arpl
ficomps
or
sbb
sub
xchg
mov
mov
mov
iret
stos
push
and
and
mov
insl
fisubrs
mov
loope
icebp
bnd
mov
insl
stc
jl
call
mov
adc
ljmp
int3
js
pushf
in
push
jmp
jecxz
fistps
sub
adc
push
lret
sub
and
mull
out
stc
inc
xchg
lret
adc
jo
xchg
outsb
sbb
jb
enter
in
cmp
loope
mov
pop
lret
fcoms
out
sub
xchg
loopne
inc
repnz
test
popl
cvtps2pi
cltd
icebp
inc
push
mov
hlt
cmp
repnz
jmp
loop
and
xchg
cltd
dec
jp
dec
jge
and
mov
inc
shlb
insb
scas
sarb
fadd
sbb
icebp
dec
dec
addb
insb
lock
jl
fstl
out
add
pop
push
dec
aad
clc
pop
scas
scas
push
shrb
fs
out
mov
push
or
xchg
mov
rcrb
into
sub
adc
stos
adc
mov
mov
adc
aas
fstl
mov
adc
jp
or
cmc
cmp
dec
sbb
dec
subl
in
in
push
ficomps
mov
sub
leave
scas
inc
cli
ret
push
test
inc
les
lock
aam
xchg
pop
sbb
inc
out
daa
sub
mov
jge
popa
jl
cli
out
data16
cmp
sti
loop
outsb
mov
xchg
jl
dec
jge
xchg
mov
pop
mov
in
inc
sbb
or
clc
inc
push
pop
ret
mov
sti
inc
sbb
sub
add
push
lds
mov
xor
jl
jns
xor
vmwrite
jno
sub
int
test
pop
add
mov
xchg
mov
out
mov
add
add
test
dec
mov
cwtl
add
hlt
movsb
mov
jle
xor
out
sub
inc
bound
xchg
imul
movsb
popf
subb
das
adcl
sub
movsb
adcl
mov
xor
add
addr16
cmp
icebp
subl
push
daa
xchg
sbb
mov
test
inc
mov
lahf
jae
push
cmpsl
push
aas
iret
dec
mov
cld
xchg
sub
mov
std
fstpl
sar
lods
xor
jne
shll
pop
cmp
and
add
fucomp
fwait
unpckhps
mov
or
das
sarl
mov
add
stos
fildll
inc
lret
push
jae
adc
xor
lret
or
data16
arpl
insl
adc
popa
lea
jbe
jmp
leave
mov
andl
fs
nop
lret
mov
push
iret
divl
push
mov
and
xor
push
andl
gs
push
push
jae
gs
scas
stos
add
xor
mov
add
sub
jbe
mov
jle
daa
mov
icebp
adcl
mul
or
pop
jl
ljmp
jnp
inc
dec
push
and
inc
adc
mov
fnstsw
jmp
dec
mov
mov
outsl
movsb
xchg
jmp
enter
push
cmp
test
sbb
pop
adc
xchg
lahf
or
sbb
test
mov
push
lods
xor
lahf
inc
dec
ror
and
cmpsl
dec
inc
cld
mov
movsb
mov
push
inc
lret
cltd
push
jl
fsts
lock
dec
jno
lock
int
sub
pop
lret
pop
inc
cmp
test
pusha
pusha
mov
cld
jae
xor
inc
out
pop
jbe
aad
dec
xchg
xchg
pop
cmp
call
movsl
mov
xchg
fs
xor
stc
cmp
out
shl
xchg
scas
push
pop
inc
fidivrs
cld
nop
add
xchg
popf
dec
push
fnstenv
hlt
xchg
jno
or
pop
mov
xchg
inc
loope
ret
fsubs
mov
mov
jno
or
call
addr16
imul
mov
int
gs
inc
lock
js
dec
fcomps
mov
sub
sbb
in
ljmp
test
sbb
in
fistl
mov
push
cmpsl
addr16
fiadds
in
out
mov
fsts
jecxz
mov
ljmp
aam
ss
fnstcw
xchg
push
incl
in
or
or
repz
das
hlt
xor
imul
shlb
mov
dec
mov
lahf
rcrl
mov
xchg
fsubrs
inc
jp
jno
xchg
fmuls
in
push
data16
shlb
cmp
mov
fdivr
test
inc
jnp
pop
xor
test
lods
mov
pop
jl
pop
pop
out
iret
adc
mov
fidivrs
cmp
popf
popf
lods
mov
jne
xchg
push
push
les
gs
jp
cwtl
aad
mov
jl
les
scas
fildl
in
fnsave
xor
stos
sbb
inc
mov
sub
in
push
lock
clc
test
fimull
mov
movsb
andl
leave
mov
pop
push
les
sti
dec
pop
notb
imul
mov
sbb
mov
xchg
pushf
sbb
out
mov
mov
mov
and
jg
adc
inc
stos
mov
fsts
xchg
dec
inc
in
cld
enter
cli
stos
or
loopne
push
dec
outsl
mov
mov
mov
out
cmp
and
enter
movsl
stos
fmuls
jle
sbb
ret
xchg
loop
sub
or
aad
int
jnp
pop
testl
jmp
out
sub
sub
data16
xchg
xchg
pop
aaa
les
pop
xor
ja
inc
fidivrs
enter
cmp
out
mov
pop
mov
xchg
adc
mov
inc
mov
out
cwtl
hlt
sub
jnp
and
pop
xchg
lret
iret
dec
repnz
mov
pop
cwtl
ret
pop
dec
insb
push
movsb
lahf
sarl
std
es
enter
dec
jecxz
add
mov
and
fistl
push
mov
icebp
repnz
test
add
gs
mov
push
stos
test
fwait
ret
mov
or
mov
pop
cmp
dec
jne
scas
mov
addr16
sub
idivl
inc
ds
inc
inc
loope
jmp
mov
fwait
add
insb
push
pop
fdivrs
repnz
inc
das
adc
cltd
xor
popa
lahf
jmp
testb
sub
pop
cmp
adc
popf
pop
mov
outsb
cmp
sub
loope
xor
jo
and
loope
fwait
sbb
inc
imul
cmc
push
icebp
js
xchg
shlb
pushf
mov
and
arpl
leave
mov
sub
scas
pop
add
or
fwait
xchg
adc
outsl
mov
push
sbb
pop
cltd
sbb
dec
insb
fs
test
add
inc
ret
dec
jnp
inc
mov
ret
lret
outsl
lret
inc
push
add
insb
fbstp
pushf
sbb
add
imul
inc
or
push
jle
lods
loope
fsubp
and
dec
sub
call
lods
xor
and
pop
pop
icebp
inc
push
push
loope
int
mov
mov
out
lods
pop
int
push
clc
sub
xlat
mov
insb
ficompl
xchg
outsl
outsb
push
cmp
movsb
fdivrl
clc
push
inc
int
mov
inc
lahf
cmpsb
test
sbb
pop
pop
cmp
and
xchg
daa
sbb
lea
cmpsl
mov
push
or
jge
push
out
mov
lahf
sarl
add
insl
in
je
clc
mov
xor
cmp
jecxz
mov
imul
outsl
bnd
sub
ljmp
lahf
repz
ss
cmp
ror
mov
mov
xlat
jbe
xor
inc
out
insb
out
movb
mov
cmp
and
rol
hlt
lahf
mov
lret
test
das
dec
inc
xor
pushf
call
inc
test
xchg
mov
daa
pop
or
mov
mov
ss
cli
ljmp
cwtl
out
addr16
rcl
dec
xchg
pop
pop
icebp
iret
and
pop
and
push
jge
sub
fisubl
cltd
push
pop
push
adc
and
out
cli
addr16
out
and
push
lret
shll
fmull
adc
sub
dec
mov
aam
dec
fcmovu
inc
jno
inc
inc
xchg
das
pop
cmpsl
cmp
sub
push
cmp
adc
sti
loop
cmp
sbb
sbb
adc
push
std
out
fistl
mov
pusha
add
xor
out
mov
fld
mov
pop
mov
daa
jge
mov
xchg
jmp
int3
not
mov
and
adc
ds
lahf
das
dec
mov
mov
repnz
leave
jp
sbb
mov
ljmp
sub
out
mov
pop
or
test
or
jae
sub
out
imul
pop
shrl
addr16
jmp
fstpt
fisubrl
movsb
dec
js
scas
adc
inc
cmp
jg
fbstp
adc
and
pushf
loope
pushf
out
sub
pop
lahf
sbb
mov
xor
je
jbe
jo
adc
stc
out
outsb
sub
push
lahf
cs
popa
mov
jl
fadds
pop
daa
jge
test
in
scas
inc
jp
jle
mov
add
pop
jbe
std
daa
xchg
sbb
popa
rorl
mov
inc
iret
clc
sahf
sbb
adc
imul
pushf
adc
mov
sahf
dec
jo
mov
test
rorl
loop
jne
add
cmp
int3
xor
testl
sahf
add
inc
repz
jle
out
rorl
or
fistpll
mov
xor
cltd
and
in
ja
das
ret
lea
dec
arpl
jp
mov
outsl
dec
pop
dec
arpl
mov
xorb
popf
jbe
push
and
ret
into
in
dec
scas
xchg
stos
mov
test
into
fwait
mov
mov
outsb
push
or
aam
dec
mov
jp
cmpsl
xor
jg
divb
gs
fdivrs
loopne
cmpsl
lds
xchg
in
addl
pusha
ret
dec
jle
dec
stc
loope
ds
dec
mov
dec
add
adc
push
mov
xor
jge
push
test
mov
xor
dec
mov
ret
xor
push
out
fmulp
pop
xchg
xchg
jg
cld
sti
jge
jb
ja
shll
sub
mov
mov
dec
xor
sbbl
xchg
xor
test
out
ds
or
add
ljmp
aam
xlat
imul
xor
int3
inc
or
pop
loop
or
sti
movsb
and
cli
in
cltd
test
cmpsb
xchg
add
mov
sbb
rolb
stos
push
fbstp
lock
mov
insl
in
sub
mov
ret
mov
mov
outsb
xchg
push
sbb
test
mov
aaa
push
mov
test
fildl
or
mov
pop
ljmp
lds
push
inc
paddd
xor
imul
fcmovnbe
fs
lds
xchg
push
lret
jecxz
cmp
fcomp
test
cmp
out
cmp
frstor
icebp
fisubl
dec
mov
in
insl
in
ret
idivl
mov
out
jl
cld
push
sub
pop
fstpl
or
sbb
aam
fsts
fmuls
or
xchg
pop
or
pop
lea
cwtl
sub
sub
mov
scas
bound
cs
fld
cmpb
orb
in
push
sub
dec
mov
dec
jl
push
cmp
and
add
les
mov
dec
cmp
jo
add
jl
fiaddl
or
cmp
mov
into
mov
call
test
ret
repnz
daa
enter
or
xchg
repz
js
mov
loopne
movsl
int
or
dec
mov
jns
lret
mov
mull
cwtl
xchg
xor
repz
sbb
sbb
push
andl
ret
mov
aad
xchg
int
addl
test
xchg
cmp
xor
cli
das
into
pop
imul
aam
cmp
lock
mov
sub
jp,pt
aad
push
push
mov
xor
adc
dec
mov
xchg
sahf
lods
inc
jne
popa
push
outsb
xchg
xchg
mov
jns
mov
mov
pop
ss
ljmp
cltd
rcll
fwait
data16
mov
or
loope
clc
bound
les
push
xor
lret
adc
pop
js
jle
jo
and
popf
xor
dec
fcom
ss
sbb
mov
loopne
mov
inc
out
pop
lcall
sbb
mov
mov
lds
popf
jmp
aam
xchg
sbb
pop
jge
mov
and
lds
jb
push
lods
mov
sub
and
cmp
or
stos
nop
adc
sbb
sub
out
jmp
adc
ror
int
mov
mov
cmp
scas
mov
and
sbb
es
xor
push
mov
dec
insl
or
adcb
clc
mov
pop
xchg
jb
xchg
out
jle
fistpll
adc
dec
mov
repnz
or
sbb
fimull
loopne
pop
xchg
push
and
and
loop
pusha
cwtl
dec
add
filds
les
push
mov
add
cltd
je
jecxz
inc
push
mov
arpl
call
cmp
imul
inc
stc
adc
fs
and
ljmp
js
and
add
dec
fs
pusha
mov
in
jecxz
mov
out
dec
push
jns
test
bound
stos
push
sbbl
rcll
nop
dec
xchg
popf
xor
mov
cmp
add
bound
subb
push
rorb
mov
pop
sarb
dec
les
shll
enter
mov
cld
loope
fiaddl
add
mov
popf
insb
std
insl
mov
mov
rcrb
fldl
lods
loopne
ja
mov
inc
or
in
mov
pop
mov
sbb
mov
xor
test
out
pop
and
outsb
xchg
lret
je
dec
jle
arpl
mov
xchg
test
and
jns
xchg
inc
fsts
lret
paddw
lods
loope
std
or
push
lock
xor
popa
sub
mov
add
arpl
shl
cmp
sbb
sub
inc
jge
lods
or
pop
mov
sti
adc
orl
mov
adc
fcmovb
daa
cli
push
lret
shl
bound
int
test
push
inc
loope
jnp
inc
mov
mov
adc
add
mov
or
sub
adc
push
addps
push
call
fcomip
repnz
pop
cmp
or
insl
sbb
pop
dec
gs
nop
pop
push
insb
daa
imul
mov
adc
loopne
loop
lea
jb
lock
jmp
bound
pushf
outsl
test
jmp
mov
xlat
mov
pop
sbb
push
aaa
stc
repnz
sbb
mov
leave
outsb
pop
nop
inc
xchg
jb
dec
jp
fistps
rep
das
lret
stc
nop
cld
mov
or
in
lea
ror
jge
jmp
cmp
add
push
pop
add
leave
sub
addl
jecxz
jp
movsb
jl
mov
mov
into
xchg
push
jmp
stos
adc
daa
mov
mov
std
add
ror
sbb
cs
jle
mov
sbb
mov
sbb
cmp
lret
adc
ds
pop
leave
push
jo
fidivrs
sub
out
gs
mov
out
mov
pop
sti
cwtl
pop
sub
and
fisttpl
aam
push
pusha
inc
into
fidivrs
adc
insl
mov
lods
lcall
cmp
pop
int3
sub
jg
in
movsl
jg
push
adcb
mov
mov
lods
mov
jecxz
push
push
inc
jns
xchg
inc
push
pusha
push
xor
aas
fcoml
addl
jno
mov
icebp
jbe
loop
xchg
mov
jmp
das
add
into
sub
shll
push
shll
ret
addr16
jecxz
iret
bound
cmp
ja
lret
fildll
push
sbb
in
sahf
cmp
aas
or
push
les
scas
lock
dec
sbb
popa
ljmp
or
jge
ds
or
scas
xor
insl
aad
loope
sub
sub
lcall
mov
arpl
out
loope
outsl
test
push
std
cmp
xchg
or
int
push
or
int3
push
add
push
mov
mov
pop
sub
stos
sub
push
mov
leave
stos
and
and
loop
sbb
push
push
dec
pop
xchg
or
sbb
adc
popa
outsl
dec
rcr
or
je
push
ficoms
push
je
in
imul
push
cmp
arpl
or
je
mov
call
mov
xor
xor
scas
movsl
fildll
lahf
repnz
xchg
fmul
mov
roll
xchg
rcll
js
jecxz
xchg
and
pop
jns
mov
int3
out
pop
mov
xor
cmpsb
dec
jb
and
or
sbb
pop
movsl
pop
inc
rol
dec
and
inc
outsl
push
mov
mov
lret
pop
arpl
mov
cs
subb
xor
in
inc
aam
pop
sub
outsl
fiaddl
incl
or
pmaddwd
push
add
pop
jbe
sbb
jecxz
mov
inc
push
adc
dec
rcll
jno
push
lahf
mov
sbb
lods
scas
pop
mov
push
outsl
movsb
stc
dec
push
mov
gs
fisubl
and
aam
stc
mov
sbb
jle
push
shl
call
repz
and
mov
out
aam
jmp
cld
out
and
xchg
pop
ret
cmpsl
inc
mov
jle
mull
lcall
sbb
push
sub
mov
mov
insl
or
sub
mov
lahf
sbb
imulb
and
push
out
ds
mov
add
fwait
test
jge
ficompl
aas
fadds
lds
add
loopne
mov
xor
je
les
pop
iret
or
mov
jnp
cmc
dec
xor
sbb
fsin
std
pop
rcll
push
mov
pop
add
xor
das
stos
lods
mov
rcrb
add
xchg
pop
std
test
jl
imul
cs
pop
out
pop
movsl
push
inc
fiaddl
push
jp
push
push
or
or
cmp
das
jae
xchg
int3
sti
imul
ja
sbb
push
pop
xor
mov
or
adc
jae
or
cltd
xchg
inc
push
pop
lahf
push
mov
cld
loopne
sub
adc
cs
xchg
lahf
sahf
jne
and
sub
mov
cmpsl
or
repnz
or
and
addr16
iret
imul
subl
rol
out
xchg
add
xchg
add
cmp
mov
xor
lret
push
rcll
push
add
imul
bound
xor
sub
xchg
xchg
xor
cmpsb
mov
mov
shrb
popf
fdivrp
test
push
mov
popa
mov
or
jns
popf
notl
lock
fidivrs
cmp
test
xchg
mov
subl
pop
sbb
mov
shlb
in
or
or
sbb
ror
jle
lea
mov
int3
aas
fs
cmp
mov
int3
shrb
mov
out
sarl
mov
jno
es
dec
insl
jb
push
sub
sti
movsb
and
aam
scas
cmp
sti
push
adc
inc
fldl
xor
popf
sarl
into
loope
aas
inc
cmp
push
adc
orb
push
outsl
lret
mov
stos
adcb
xor
ds
sub
add
jbe
xchg
add
jp
jb
jno
mov
fs
std
iret
fstpt
jecxz
rcrb
pusha
pop
jb
gs
sub
lods
xchg
stc
push
idivb
push
push
pop
add
jnp
adc
popf
push
cmp
adc
loopne
add
inc
sub
jge
int
cmpsl
xchg
inc
dec
xchg
test
mov
nop
xor
xlat
mov
xor
xlat
stc
mov
gs
lret
mov
cs
mov
icebp
jo
push
or
adc
mov
ja
mov
pop
xor
xlat
mov
mov
jl
adc
adc
jb
fdivrl
dec
mov
test
sub
stc
jns
leave
jge
ds
mov
pop
cmova
cmpsb
popa
js
pop
jl
bound
inc
or
fisubrs
lods
sarl
sub
pop
pop
sub
dec
mov
data16
sbb
repnz
stc
daa
mov
xchg
gs
pop
sub
sti
adc
pop
adc
pushf
sub
inc
xor
sbb
call
nop
or
push
test
mov
pop
xchg
xchg
ss
test
inc
mov
push
fisubrs
fsubrp
jns
fstps
call
das
ja
shrl
fistl
gs
mov
or
out
inc
dec
int3
stc
and
loopne
pop
mov
add
loop
pushf
arpl
push
inc
call
std
xlat
cmp
loopne
dec
jo
cmp
in
xor
inc
subb
and
xor
in
ret
pop
subb
cmpsb
outsl
jg
lcall
adc
mov
jae
test
push
mov
movsb
aas
pop
in
mov
sbb
shlb
out
mov
ja
cwtl
in
xchg
stos
mov
aam
pop
mov
xchg
aam
push
or
mov
popa
jo
out
lods
cwtl
pop
and
ror
adcb
add
stos
dec
dec
outsl
mov
jno
rorl
rcll
mov
jae
pop
sbb
mov
mov
aaa
cwtl
add
inc
flds
int3
and
mov
jg
or
out
dec
lret
mov
sbb
hlt
fs
add
dec
add
push
or
lods
adc
loope
jbe
xchg
outsb
pop
inc
and
cmp
lds
in
cmovp
js
mov
cmpsl
and
sub
loop
and
mov
mov
ljmp
andl
pop
test
adc
cmp
pop
push
sahf
rol
dec
push
lret
movd
mov
jl
and
pop
out
jecxz
lcall
mov
out
leave
out
outsl
xor
mov
add
data16
or
or
imul
inc
addr16
jnp
push
out
cmp
mov
adc
in
or
inc
inc
leave
insl
cmpsl
push
fsubrs
dec
stc
scas
cmp
sarb
xchg
mov
mov
pop
dec
mov
pop
shr
ja
push
push
pusha
sub
pop
xor
das
imul
mov
enter
xchg
loop
jne
pop
mov
les
ljmp
mov
mov
mov
lds
movsl
cld
inc
pop
hlt
xchg
lret
dec
sub
mov
stc
mov
adc
dec
icebp
adc
das
cmpsl
lods
push
xchg
movsl
xchg
push
jmp
inc
stos
test
mov
push
cld
inc
ret
lods
pop
ret
jl
repz
inc
popf
subl
lods
xor
jns
and
into
add
mov
movsb
shll
cld
pop
mov
push
testb
xor
int3
shl
xor
mov
jns
or
pop
pop
jne
inc
aam
incl
xchg
loope
nop
cwtl
pop
out
xchg
ljmp
scas
sub
popa
ja
int3
add
mov
dec
sub
dec
adc
dec
mov
cli
lds
mov
popf
xchg
int3
insl
mov
test
lds
mov
jae
jmp
bound
pop
or
shlb
dec
mov
mov
mov
ret
je
adc
outsl
loope
push
sub
pop
mov
push
xchg
lds
aam
cltd
inc
mov
sbb
sti
push
aaa
cmp
xor
push
outsb
imul
out
mov
test
xchg
mov
das
push
out
enter
cmp
gs
jmp
xor
pushf
xchg
push
cmp
cmp
jno
and
push
lret
add
aad
fs
xor
fdivl
loopne
rorb
jne
xor
inc
dec
les
loop
inc
iret
aad
mov
lret
cmp
dec
xchg
jl
negb
mov
xor
sbb
rorb
jo
jnp
pushf
rorb
jns
xor
xchg
push
add
sbb
out
outsb
xor
sbb
push
in
hlt
mov
dec
jb
jge
insb
int3
xor
mov
sub
imul
pop
or
mov
fisubl
lods
das
mov
nop
add
in
out
and
xor
in
sbb
lods
stos
aad
fsubrp
sbb
xor
and
pop
outsl
arpl
sbb
dec
adc
dec
xor
imul
lret
mov
stc
imul
cld
fucomp
xor
mov
mov
or
pop
push
test
popf
scas
push
out
adc
adc
adc
and
pop
jns
into
or
sbb
mov
lret
xchg
sarl
sub
lret
in
mov
leave
inc
jecxz
pop
adc
and
sbb
jb
addl
mov
clc
xor
mov
mov
imul
std
setge
out
sbb
jp
arpl
lods
fdivp
sbb
xchg
mov
push
add
and
push
sarb
inc
ror
add
js
mov
push
xchg
sub
jo
or
adc
popa
call
adc
mov
adc
mov
ret
dec
xor
and
sti
mov
ret
pop
adc
jnp
fists
lea
imul
ljmp
cltd
adcb
or
cmp
pop
mov
and
aas
sbb
ret
shll
dec
aaa
je
leave
popa
leave
ja
jge
repnz
pusha
fs
xlat
arpl
and
add
cmp
lret
mov
aaa
je
cmp
daa
pop
stos
pop
aas
mov
dec
gs
hlt
jecxz
xor
insl
xchg
iret
or
pop
jo
call
orb
inc
mov
dec
daa
mov
add
lds
enter
in
lods
fisttpl
xor
lods
adc
jo
push
ss
sbb
mov
loopne
or
test
xchg
mov
jge
xchg
push
xchg
icebp
popf
data16
sarl
pop
popf
dec
xor
mov
inc
enter
shl
ja
ret
sub
mov
movsl
leave
arpl
into
xchg
lock
imul
imul
ljmp
subb
fwait
pop
insb
push
jmp
popf
aad
cmc
adc
ja
mov
adc
js
mov
add
pop
rolb
xor
jg
push
in
inc
mov
stos
pop
push
jno
jbe
mov
mov
test
xchg
addr16
leave
clc
shl
ret
inc
pop
inc
jg
pushw
mov
push
mov
pop
test
sbb
and
pop
inc
ds
or
scas
inc
aas
insl
mov
ret
mov
out
push
cmp
or
imul
out
std
cld
faddl
rol
mov
xlat
lret
sub
aas
out
and
xchg
stc
nop
sbb
js
popf
jg
push
nop
test
lret
push
pop
jnp
leave
adc
lds
jge
sbb
ret
push
jne
and
lods
lsl
pushf
ret
scas
mov
sub
mov
movl
adcb
sbb
push
add
iret
sbb
mov
cmp
out
arpl
dec
jno
mov
fucomi
push
dec
aam
lods
jl
push
hlt
sub
jnp
jne
lds
mov
roll
negl
or
insl
stos
iret
mov
es
lret
mov
adc
jp
pop
repz
xchg
push
pop
dec
adc
lret
jb
fisttpl
sar
stos
mov
adc
and
aad
xlat
hlt
xor
push
mov
shrl
ja
mov
hlt
add
scas
xchg
mov
es
cli
xlat
sub
stos
movsl
das
add
add
sbb
fcoms
fnstsw
nop
or
ret
ja
push
out
mov
xor
push
dec
mov
daa
and
rol
dec
push
mov
imul
xor
addr16
sub
lret
mov
movsl
loopne
adc
fistpl
lret
fs
mov
divb
rolb
jno
aaa
push
addr16
fnstcw
pushf
jne
push
sub
and
cwtl
push
push
lds
scas
stos
cli
dec
xchg
movsl
mov
mov
xlat
fcoml
add
dec
lods
push
mov
test
out
movaps
daa
dec
mov
push
inc
add
push
cld
les
ss
cli
cmpsb
mov
loop
scas
enter
int3
inc
gs
inc
xchg
nop
ret
or
xchg
sbb
lods
fdivr
scas
sub
dec
sub
or
fsubr
xchg
scas
mov
inc
mov
push
popa
push
fs
int
gs
and
or
or
test
cld
adc
sub
stc
or
leave
fistps
sbb
and
inc
mov
xor
dec
ret
dec
add
test
pop
into
sbb
into
xor
dec
pop
outsl
xor
jmp
test
ss
pushf
pop
fwait
jb
mov
sbb
aam
cli
mov
orb
jecxz
xchg
das
xchg
fdivr
add
push
dec
shr
dec
jmp
adcl
daa
inc
sbb
pushl
adc
dec
cwtl
call
inc
inc
sbb
mov
dec
mov
ds
add
mov
and
add
call
incl
bound
nop
pop
push
lods
mov
outsl
cmp
mov
sub
mov
stos
sti
jo
sub
fstps
loop
sbb
cmp
dec
mov
ljmp
dec
cmp
loop
sbb
add
addr16
arpl
stos
mov
sbb
pop
xlat
movsl
inc
sbb
xchg
or
leave
dec
je
outsl
loope
int
addr16
cltd
inc
fstpl
ror
jbe
mov
push
lods
loope
mov
scas
in
and
test
and
pop
fwait
lcall
jl
sbb
jno
push
jno
rorl
pop
ljmp
xchg
rolb
pop
ret
jnp
sbb
xchg
movsb
push
or
and
ret
cld
in
imul
xchg
call
dec
jge
loopne
jo
xchg
jl
repnz
jns
cmp
clc
sarb
aam
push
cmp
sub
adc
jg
xchg
or
sahf
mov
xor
shlb
ffree
test
insl
loop
mov
mov
cmp
orb
add
jl
mov
pop
mov
jb
xlat
add
push
pop
xor
addr16
ss
or
lret
mov
sub
xor
dec
pop
nop
shl
mov
push
pop
sub
or
lcall
pop
mov
xchg
hlt
sbb
pop
push
xor
xchg
cli
add
pop
sub
dec
adc
inc
ja
ds
inc
test
jb
out
mov
test
xor
popa
shll
mov
pop
push
xchg
shll
xor
rcl
adc
fsubs
lock
insl
push
or
outsl
xchg
xchg
popa
sbb
mov
nop
enter
rol
sahf
repz
rcl
inc
ljmp
xorl
aaa
mov
dec
movsb
jp
push
test
pop
push
xchg
imul
test
xchg
sahf
int3
and
data16
sar
push
std
daa
pop
test
sub
leave
inc
add
fwait
lds
idiv
sbb
mov
pop
sub
pop
adc
out
sahf
sahf
int
push
loope
adc
insl
jle
fidivl
sbb
dec
loope
fsubl
out
push
cmpsl
push
shlb
test
das
shll
xchg
loop
xchg
repz
stos
sbb
xor
jbe
out
cld
jne
xchg
lret
orl
daa
divb
inc
or
push
dec
mov
sub
or
adc
stos
dec
add
addr16
jecxz
push
inc
jbe
sbb
out
call
sbb
test
cmpps
inc
xchg
ret
inc
outsb
les
mov
cli
add
or
js
rcll
mov
add
push
ret
aad
filds
and
test
xchg
mov
scas
push
add
jnp
clc
jecxz
aaa
push
popa
mov
inc
mov
movsb
jl
xchg
fs
dec
mov
out
push
int3
fwait
mov
xor
jbe
pop
ret
cltd
enter
iret
cmc
xchg
outsl
cmp
testb
cmp
dec
pop
sbb
pop
pop
in
mov
cmp
loopne
cltd
xor
sub
sub
and
imul
add
test
cmp
jle
mov
xchg
adc
xor
cmp
push
std
repnz
ret
xlat
xchg
sbb
adc
mov
and
push
aas
mov
cmp
mov
inc
dec
jmp
icebp
or
push
mov
dec
xchg
cmp
leave
push
in
jns
sbb
sbb
adc
cmp
xchg
mov
jle
out
xchg
int
sbb
pop
inc
cmp
pop
mov
mov
leave
inc
fwait
mov
cwtl
pop
sub
jns
push
iret
stc
mov
out
sbb
test
mov
cmpsl
or
cmp
mov
cmpb
add
data16
lret
in
inc
lret
mov
and
xchg
mov
imul
sbb
mov
dec
repnz
es
aaa
ss
psubw
mov
mov
imul
xchg
and
test
xlat
in
adc
push
std
and
pop
sti
es
jmp
pop
pop
loopne
int
test
testl
lds
loop
mov
mov
dec
rcrl
inc
ja
ss
inc
jbe
jl
pop
push
mov
into
inc
jae
enter
xor
repnz
icebp
adc
xor
mov
insl
clc
loopne
outsb
mov
pop
jp
or
int3
cs
ret
fildl
jb
lcall
or
stos
cltd
jne
jns
mov
sub
mov
nop
aad
inc
in
sbb
sbb
dec
sbb
inc
pop
mov
outsl
dec
or
mov
cld
clc
xor
icebp
or
jecxz
xor
push
cmpl
cmp
fldl
fdiv
movsl
or
cli
out
sti
sub
push
lret
loop
sbb
fsubp
jae
out
lret
addr16
mov
push
loope
add
mov
movsl
xlat
mov
xchg
or
out
pop
arpl
xchg
and
ds
insl
pop
mov
cwtl
jl
rcrb
test
xchg
aas
dec
stc
stos
fidivrs
fucomp
in
addr16
stos
sbb
test
cmpsb
jo
aaa
and
mov
mov
and
push
and
or
cmpsb
inc
or
cmp
xchg
jns
xchg
lcall
leave
lods
push
pop
pop
sbb
pusha
int
jle
mov
xchg
imul
in
or
lahf
mov
scas
pop
les
mov
pop
mov
lret
sbb
pop
push
push
mov
and
out
lods
and
adc
xor
lret
or
call
adc
out
dec
andl
pushf
push
mov
mov
shlb
xor
out
rcl
fwait
mov
mov
mov
push
push
xchg
loope
cmp
jle
pop
lea
xchg
test
sub
orb
jne
pop
je
inc
jg
and
aam
test
and
cmp
sbb
mov
aas
inc
jl
loope
gs
mov
aaa
mov
dec
scas
fs
xchg
roll
mov
sbb
add
jnp
scas
mov
cs
repz
outsl
jo
sub
xor
fwait
adc
or
mov
jns
or
out
mov
mov
cwtl
sbb
stos
cwtl
mov
lock
aaa
sub
and
cs
pop
pop
pop
aam
scas
stc
mov
jae
push
daa
mov
dec
cmp
jg
xor
popf
xor
aam
pop
lock
push
sbb
or
repz
xor
fbld
push
lahf
sbb
or
nop
rorb
pop
cmp
dec
push
imul
mov
inc
mov
xchg
bound
mov
jecxz
cmc
sub
in
cltd
mov
imul
out
inc
lcall
sbb
addb
lods
fldcw
lock
sub
mov
cmp
in
sti
adc
aaa
mov
cmpsb
lea
add
mov
out
mov
lock
movsl
out
daa
xchg
sub
adc
mov
lahf
cli
mov
fcmovb
dec
cli
adc
mov
xor
mov
sbb
xchg
lcall
or
imul
adc
iret
adc
fs
mov
pop
icebp
bound
mov
gs
int
icebp
cmp
xlat
lret
mov
dec
enter
mov
cmp
jmp
push
push
popf
fs
or
dec
call
jae
adc
fs
es
sbb
les
mov
pushf
shll
cmp
or
ds
cmpl
repz
movsl
inc
cmp
aam
add
or
xor
pop
arpl
andb
ss
and
je
jge
jecxz
daa
fsubrs
inc
mov
pushf
xor
mov
enter
shrl
shlb
mov
xlat
cmp
inc
stos
imul
sub
jmp
xor
jp
adc
lret
repnz
notl
lock
ficomps
aam
movsl
in
or
les
fs
outsb
jle
fdivrl
add
ret
jecxz
or
subl
fadd
adc
cmp
in
mov
pop
test
scas
mov
mov
sub
nop
out
out
rolb
lods
es
neg
cwtl
push
sub
jmp
es
jp
cmp
xchg
cmpb
out
addr16
xchg
int3
repz
aaa
arpl
test
int3
mov
xor
lea
mov
sarb
loopne
imul
mov
pop
test
jnp
xlat
dec
or
jle
test
xlat
je
jge
mov
adc
test
outsb
test
cli
hlt
fsubs
cwtl
or
mov
inc
insb
xlat
popa
test
jnp
jg
mov
lea
xor
adc
add
add
mov
mov
jmp
or
fs
decl
mov
loop
bndldx
and
insb
lods
jns
or
and
aaa
adc
jo
mov
xor
sti
mov
dec
adc
repz
or
js
pcmpgtd
pop
sub
pop
and
loope
jle
dec
stc
hlt
add
repz
push
push
dec
fistpl
test
mov
push
setae
cwtl
mov
addr16
jns
dec
mov
push
fyl2xp1
lods
sarb
inc
lods
sbbb
subb
jecxz
sbb
cltd
sbbb
pop
sub
xchg
lods
adc
incl
fs
inc
push
out
or
push
lret
mov
dec
rclb
dec
xchg
dec
daa
std
add
cli
pop
cmc
sbb
arpl
push
pop
pop
sahf
out
icebp
pop
aaa
insb
xchg
or
add
fiadds
arpl
sub
int
clc
pusha
cmpsl
lret
push
fs
insl
lds
andb
jne
add
test
cmp
out
aam
mov
outsl
scas
stc
mov
sbb
xchg
xor
add
ljmp
jb
bound
xor
imul
pop
mov
mov
inc
gs
dec
sarl
inc
ss
test
inc
add
or
and
mov
or
pop
std
mov
shrl
sub
mov
test
insb
lret
mov
pop
pop
je
xor
pop
adc
xlat
pop
push
shlb
mov
gs
test
iret
cmp
push
mov
out
imul
imul
test
cwtl
sub
push
sarl
jae
leave
xchg
add
mov
push
das
js
sub
mov
push
and
in
adc
sar
inc
and
mov
xor
add
mov
xor
daa
mov
dec
cmpsl
cmp
or
xchg
jmp
in
pop
int
jne
aaa
sub
clc
jno
dec
xor
mov
sbb
sub
xor
jecxz
jb
cmp
scas
cli
in
loope
fildl
imul
sbb
iret
rcrl
test
mov
and
lods
fld1
rolb
xor
or
cli
icebp
mov
pop
loopne
pop
sub
sub
pop
xor
jg
dec
scas
stc
aas
sti
cmpsb
pop
out
decb
pushf
mov
scas
pop
out
repnz
lds
cmc
dec
aas
aam
gs
cs
in
xchg
push
adc
mov
out
mov
xchg
xor
jns
popl
repnz
test
fisttps
mov
gs
sbb
rorb
mov
hlt
pop
xchg
inc
add
leave
lahf
xor
mov
cmp
push
jecxz
cmp
inc
cmpsb
outsb
dec
add
mov
pop
dec
imul
popf
dec
pop
and
ret
iret
mov
nop
leave
popf
xorb
mov
or
popa
dec
jns
sub
aam
lds
push
mov
shlb
adc
jo
xchg
outsb
clc
out
mov
sub
repz
inc
lahf
xorl
test
mov
sbb
imul
dec
push
pop
add
xchg
clc
mov
jne
pop
dec
out
xchg
js
xchg
mov
sbb
sbb
in
mov
mov
push
jg
pop
sarb
enter
jge
xor
mov
pop
mov
sub
data16
lret
sbb
inc
orl
xor
cltd
sbb
mov
lods
mov
stos
js
push
add
out
test
push
pop
push
dec
xor
jae
mov
lods
and
adc
movsb
pop
test
std
negb
mov
xor
sub
outsl
and
iret
dec
loope
jge
xchg
imul
add
or
xor
loope
pop
adc
push
cld
or
xchg
push
and
xor
mov
jg
push
lret
into
xor
mov
push
mov
cmp
xchg
mov
jae
repnz
iret
das
outsb
push
andl
inc
dec
notb
insb
aad
fcos
ret
shlb
adc
adc
clc
adc
fistpl
int
push
fs
imul
addb
imul
jmp
out
sbb
nop
xchg
add
dec
test
leave
dec
xor
add
fimuls
mov
or
sub
iret
inc
fcoml
data16
push
out
das
mov
xor
sbb
push
sub
gs
xchg
jecxz
xchg
gs
popl
jo
or
addr16
pushf
shrl
xor
or
jno
insl
dec
jge
fs
jmp
push
pop
pop
lret
bound
stc
cmp
add
xchg
ret
clc
leave
std
and
inc
fisubl
inc
shrl
jle
or
inc
pop
jae
inc
push
sub
into
subl
fildll
mov
sub
xchg
movsb
pop
aas
sub
dec
out
je
testl
cmp
subl
push
repz
jns
xor
jmp
push
and
pop
dec
scas
xchg
ds
cli
fwait
or
loope
jnp
dec
dec
outsb
inc
inc
mov
pop
mov
inc
and
addps
aaa
cmpsb
push
fs
jb
imul
push
push
push
mov
aad
xor
cld
repz
stc
testl
aas
rolb
cld
in
push
pusha
lods
xor
or
mov
cmc
lods
gs
cmpsl
dec
mov
xchg
call
inc
cmp
addl
sub
sub
mov
aaa
lret
dec
adc
stos
cwtl
dec
ficomps
fwait
ret
icebp
adc
mov
add
je
sub
loopne
inc
scas
cmpsl
rcrb
inc
lods
cli
pushf
sbb
cwtl
pop
pop
popa
jl
or
add
add
data16
cmp
cmp
mov
sbb
cmp
xor
and
xor
fstps
xor
pushf
bnd
cmpsl
inc
and
pop
cmpsb
add
xor
or
push
test
xchg
pusha
sub
inc
arpl
bound
pop
mov
mov
popa
dec
or
jg
fcompl
and
gs
jno
lcall
arpl
les
int3
pop
jmp
shll
and
mov
or
pop
dec
and
das
pop
cmp
in
push
mov
sub
xchg
stc
popa
iret
sub
out
dec
jo
adc
call
popa
cmp
mov
dec
sarl
repz
jae
nop
das
pop
inc
in
fwait
test
shll
das
dec
or
add
push
sub
jb
mov
sti
jle
out
outsb
mov
stc
or
outsl
loop
mov
mov
sub
dec
pusha
sub
inc
lock
lret
insl
xor
stc
inc
scas
xchg
mov
outsl
jo
inc
fistl
cmp
push
xchg
and
subl
dec
fwait
or
outsb
add
xor
dec
int3
mov
ret
push
gs
ss
fwait
inc
repnz
and
sub
xor
add
pop
into
and
pop
ds
cmp
scas
mov
ss
pusha
mov
xchg
mov
dec
lret
jb
or
lods
lcall
fs
data16
push
push
out
faddp
mov
mov
outsb
mov
sbb
movsl
inc
das
cmpsl
hlt
in
out
cld
mov
mov
movsl
pop
das
mov
loop
sti
mov
adc
movsl
dec
push
mov
jl
add
inc
add
or
aam
lods
add
xchg
dec
gs
icebp
mov
repz
sub
or
fistps
mov
and
add
dec
or
jecxz
loopne
xor
loope
hlt
sahf
mov
cmp
icebp
jle
or
mov
mov
sti
imul
mov
popa
xor
nop
mov
dec
xchg
mov
out
iret
jnp
jg
adc
stc
rorb
pop
ss
ret
xchg
into
cmp
test
sbb
pop
int
out
pop
inc
fwait
dec
gs
jl
sbb
sub
fisttpl
ss
out
clc
mov
mulb
mov
fdivrl
push
adc
mov
or
push
loopne,pn
add
out
jl
mov
orb
imul
and
and
lea
push
pop
shrb
xchg
insb
xorl
sbb
repz
mov
loopne
imulb
sbb
pop
xor
aaa
inc
ja
mov
nop
cmp
add
aam
imulb
sar
jbe
iret
imul
bnd
bound
mov
imul
addb
fsubl
outsl
or
xchg
iretw
mov
out
imul
or
or
arpl
mov
clc
arpl
mov
mov
stos
sbb
popa
loopne
push
sub
andb
aam
outsl
add
and
loop
jg
test
jno
cmp
dec
in
aam
imul
cmp
outsl
xchg
scas
arpl
xchg
lods
jmp
add
or
or
cmpsl
lret
push
push
repnz
lret
and
push
test
mov
pop
and
shll
mov
or
cmp
push
mov
aaa
push
xchg
aam
test
jb
jl
sub
je
mov
dec
shlb
xchg
pop
sub
loop
jl
or
imul
push
mov
testb
adc
stos
cvtps2pd
push
int
push
mov
outsb
out
mov
imul
jg
xchg
in
icebp
sub
jg
int3
push
push
mov
jl
sti
and
mov
push
cmpl
cmp
in
add
test
xchg
sbb
dec
es
cwtl
pop
adc
ror
sarb
cld
in
xor
mov
and
in
fsubs
imul
xor
lahf
aam
mov
es
push
leave
cmp
out
decb
sub
xchg
int3
jp
outsl
push
in
jbe
xor
mov
cli
shr
cmpsl
sub
ret
mov
push
aam
neg
lods
dec
xor
push
sarl
fbld
push
xchg
in
sbb
lds
push
into
inc
iret
leave
dec
je
pop
pop
addr16
push
popf
imul
cmpsb
or
cmp
xchg
jg
xor
pmaddwd
out
mov
push
and
js
jge
lods
in
and
jl
fists
jg
pop
ds
ss
ss
mov
cli
mov
mov
lcall
movsl
js
and
repz
fnstenv
lahf
std
mov
and
mov
outsl
adc
sub
out
dec
iret
lods
sub
mov
rcrl
cmp
dec
xchg
inc
adc
test
out
sub
push
mov
jp
int
shr
xchg
pushl
insl
mov
mov
sub
or
in
in
movsl
pop
inc
cmc
or
sahf
push
jbe
dec
jge
cltd
xor
push
and
xchg
adc
jge
addr16
mov
mov
lods
data16
lea
iret
loopne
pop
dec
cmpsl
add
dec
ljmp
add
pop
sahf
mov
popa
test
inc
jns
or
mov
jmp
pop
loopne
pop
out
lret
incb
push
mov
repnz
dec
add
lods
cmpl
subl
pop
push
cli
test
mov
push
dec
push
mov
push
push
mov
push
loop
out
ja
pop
cs
enter
pop
lds
push
lds
inc
cmp
pop
int
jns
imul
and
mov
adc
jge
mov
inc
rcl
dec
add
pop
push
daa
xor
cltd
cmp
test
out
cltd
mov
push
cmp
mov
in
add
xor
cs
cmp
mov
jbe
lods
and
mov
adc
dec
clc
push
testl
mov
lea
out
dec
xor
pushf
dec
adc
push
jne
push
aas
mov
cmpsb
loop
push
loope
jb
jl
jnp
xor
out
out
or
xchg
add
test
inc
out
icebp
fnstcw
mov
inc
int3
std
push
mov
dec
lcall
icebp
lret
xchg
stos
and
add
data16
js
loopne
jbe
std
mov
test
sub
rorb
negb
clc
dec
xchg
aam
mov
psrlq
insb
dec
leave
scas
cmpsb
int
lds
out
sub
test
cld
cs
and
ljmp
push
or
push
into
outsl
psubusb
xchg
icebp
jle
fs
fistpl
xchg
addb
test
sti
mov
into
push
add
jl
fwait
or
add
lahf
pop
xchg
sbb
lret
scas
paddq
sub
and
stc
movsb
adc
test
sub
in
mov
imul
bound
dec
in
mov
push
pop
rorb
cmp
xchg
repz
loop
adc
jae
popf
popa
pushf
adc
push
sbb
cmc
sahf
push
das
push
sbb
mov
xchg
clc
lret
pop
ss
movb
je
mov
stos
out
jp
sbb
pop
or
ja
push
loope
stos
cmpsl
mov
xchg
inc
adc
dec
xor
xchg
ficomps
je
cltd
test
imul
arpl
xlat
nop
mov
pop
or
sbb
loopne
aad
and
data16
ds
pop
add
notl
lahf
test
pop
cli
pop
pop
xchg
jp
pop
sbb
adc
mov
adc
call
sub
jbe
adc
sti
jecxz
jnp
fnstenv
ss
faddl
fwait
sarl
aam
pop
cwtl
push
roll
jge
mov
lret
sti
dec
in
call
mov
lock
push
pop
int3
test
rol
xchg
mov
sub
inc
mov
dec
pusha
mov
shll
push
push
addr16
mov
xchg
or
lds
fcoml
jl
pushl
mov
inc
adc
push
xchg
xchg
dec
dec
std
aam
fsubp
adc
cmc
jb
test
rcrb
movsb
xchg
imul
push
call
adc
lcall
lret
mov
das
add
and
int
or
mov
mov
cltd
arpl
scas
lods
adc
mov
mov
add
jg
rclb
ja
mov
lods
pop
mov
fldl
mov
rol
mov
outsl
jbe
ret
out
bound
mov
cmovle
xchg
mov
notb
addr16
hlt
add
mov
pushf
or
stos
into
je
enter
push
push
int
inc
mov
lret
xor
push
mov
scas
leave
mov
pop
movsb
fldl
jg
jl
xchg
or
lahf
inc
or
lock
pop
adc
lcall
fldl
fwait
outsl
lods
push
popa
dec
hlt
mov
sbb
push
sarb
xor
mov
adc
xlat
inc
pushf
les
sub
fstps
jg
test
sbb
fwait
jno
or
lahf
scas
int
inc
out
add
push
or
dec
pop
hlt
sbb
fiadds
pop
xchg
mov
dec
pop
add
loopne
jns
in
fs
or
jle
in
dec
push
arpl
pop
push
mov
pop
test
je
adc
dec
cmpsl
call
and
sub
pop
rcl
lret
jmp
or
mov
jecxz
fwait
dec
push
push
fnstcw
xchg
arpl
inc
gs
data16
mov
shlb
push
pop
sbbb
inc
lods
fcmovnu
push
xchg
mov
aad
fdiv
cmp
mov
pop
imul
cmpl
sahf
jb
sub
leave
cmp
mov
out
cli
mov
push
test
dec
ja
dec
scas
mov
pop
in
repnz
inc
jae
xchg
cmp
nop
inc
mov
cmovp
lds
sbb
icebp
push
cmpsl
call
outsb
jnp
jp
mov
aad
xlat
mov
push
je
outsb
es
sbb
dec
popl
stos
push
mov
int3
enter
lods
add
les
das
sbb
mov
cs
pop
adc
add
push
psubw
shll
sub
les
shrb
xor
loop,pt
aad
enter
push
out
pop
sub
mov
add
xorb
add
mov
ret
fs
out
pop
aam
or
lods
bound
sbb
sbb
mov
mov
cli
xlat
mov
fmul
xchg
js
adc
add
stos
outsl
sub
xchg
or
push
lds
pop
cld
enter
test
push
lahf
inc
leave
add
dec
inc
leave
sub
test
clc
cmp
sub
mov
adc
xchg
push
push
fdiv
push
inc
xchg
dec
subl
xchg
dec
arpl
ficoms
inc
shl
loop
popf
test
cmp
mov
pusha
in
shll
scas
dec
cmpsl
out
subb
or
aas
popf
ja
bound
mov
bound
in
adc
inc
bound
sbb
adc
add
jp
push
sub
ret
add
add
sub
test
cmp
sbbw
cwtl
xchg
aam
inc
jnp
mov
dec
cltd
jecxz
sarb
add
inc
jb
test
and
sbb
or
mov
pop
xorb
bound
pop
insl
adc
push
fcom
xchg
xor
imul
shrb
pusha
and
add
lahf
jmp
les
fwait
imul
jecxz
bound
movsb
addr16
out
adc
cmc
jo
cmpsb
stos
and
in
xor
jnp
inc
leave
mull
cwtl
int
cmp
sub
std
push
mulb
outsl
mov
and
or
xchg
mov
jne
sbb
movsb
pop
xchg
shrb
add
mov
mov
aas
and
cld
mov
shrl
or
jge
cmpsl
popf
and
testl
sub
sub
imulb
popa
cwtl
sub
dec
int3
rorl
or
lret
loopne
sub
pop
int
xchg
and
lds
outsb
pop
lret
or
pop
adc
scas
cmp
sti
mov
scas
pop
mov
mov
iret
add
pusha
jne
inc
cs
sbb
ret
inc
mov
aas
lods
jl
push
in
js
shlb
jge
mov
push
jbe
loop
test
xor
nop
jno
mov
movsl
sub
or
push
cmp
jno
sbb
lock
stos
outsb
rcr
mov
mov
icebp
push
arpl
sbb
sub
xchg
jle
and
test
int
imul
push
imul
or
mov
xchg
adc
cli
fisubl
sahf
cmp
lea
ja
jmp
les
gs
mov
scas
jo
mov
cmp
data16
stc
repnz
adc
inc
mov
inc
mov
mov
jo
adc
inc
sub
push
lcall
adc
and
pop
or
out
out
jmp
sti
lea
daa
pop
and
push
or
xor
xor
fidivl
cmp
inc
imul
mov
lahf
pop
mov
cs
stos
pushf
outsb
mov
fucomi
stos
pop
adc
sbb
dec
xchg
push
iret
lods
inc
sar
cli
mov
sahf
les
shlb
xlat
iret
mov
leave
insb
aaa
test
movsb
dec
je
cs
or
fwait
sti
xchg
or
pop
ljmp
daa
adc
and
inc
fs
mov
dec
sbb
cmpb
ljmp
jecxz
mov
movsb
xchg
mulb
ja
or
sbb
inc
jp
js
fwait
sbb
jp
push
mov
mov
daa
pop
mull
ja
int
faddl
sbb
jle
cltd
stc
xlat
or
notl
pop
sbb
cwtl
popa
xor
lock
mov
xchg
minps
inc
clc
data16
xor
mov
cld
add
popf
cmp
mov
sti
ffreep
aad
push
inc
mov
mov
mov
dec
dec
insb
movsl
loopne
pushf
cmp
jnp
jnp
mov
xor
addr16
arpl
jmp
imul
ret
icebp
stc
hlt
push
cmp
clc
pusha
add
sbb
sub
jg
out
arpl
cmc
mov
sbb
mov
pop
lahf
ret
or
sub
mov
movsb
push
fisttpll
xchg
xchg
dec
add
nop
ds
cli
rorb
mov
rorb
jns
xchg
lcall
mov
or
push
cmp
jp
daa
mov
push
arpl
pop
dec
cmp
gs
push
arpl
mov
lea
pushf
jmp
push
lods
sti
jmp
divl
das
jbe
mov
mov
rep
lods
fcoms
mov
jge
and
movsl
cltd
xchg
in
rcll
test
or
pop
xor
pop
icebp
cwtl
ret
adc
inc
cmc
add
popa
xorb
sbb
inc
mov
imul
leave
dec
cmpl
dec
rol
adc
add
mov
xchg
fsubs
test
in
popf
outsb
or
and
add
mov
jecxz
mov
fistl
adc
popf
add
mov
imul
mov
ret
movsl
sbb
repz
call
dec
or
push
stc
inc
pusha
mov
adc
rcll
or
and
push
das
jae
dec
mov
adc
mov
jl
mov
insl
mov
cmpb
icebp
out
les
fs
sbb
je
cmpsb
lds
mov
jo
aad
fwait
mov
sahf
xor
fwait
cmp
push
decl
push
pop
cs
sbb
pop
loope
xor
xchg
mov
test
enter
sarw
iret
mov
fiadds
lret
int3
dec
jne
add
loope
push
repnz
imul
sbb
les
sbb
sahf
cmp
pusha
stc
pusha
and
and
sbb
pusha
xor
aam
adc
mov
sbb
sar
cmpsb
push
mov
hlt
adc
add
bnd
jp
into
push
aad
mov
lret
das
sbb
push
movsb
sub
fildl
repz
aas
out
ret
pop
scas
pop
cli
inc
flds
sub
js
or
hlt
mov
adc
pop
popf
jg
push
push
add
push
loopne
xorb
sbb
fidivl
or
dec
xor
cmp
mov
sub
fidivs
loope
incb
adc
mov
rorl
out
out
movsl
shl
jecxz
add
xor
jbe
jecxz
bnd
daa
mov
cmp
mov
dec
pop
jns
cld
cmp
fnclex
mov
or
fwait
add
rol
xchg
andl
mov
popf
sub
xchg
xor
cmp
sub
and
or
push
cmp
sub
stos
iret
out
mov
shll
inc
decb
xchg
inc
mov
out
mov
pop
jl
jbe
inc
jmp
test
daa
dec
cmp
xlat
add
and
fcoms
xchg
imul
jmp
jmp
dec
add
test
sub
inc
push
cmc
pop
in
cmc
in
add
cmp
jg
mov
mov
out
mov
cmc
sahf
and
hlt
jbe
sbb
loope
mov
jbe
xor
add
lret
shrl
shll
mov
inc
xchg
stc
fucomip
ds
mov
icebp
insl
xchg
mov
inc
movsl
cltd
and
push
mov
mov
add
inc
scas
mov
pop
jp
mov
fwait
mov
cmp
xor
mulb
movsl
insb
mov
in
sub
pop
outsl
hlt
and
divb
sub
xorb
xor
mov
les
sub
pop
sbb
push
shl
mov
sarb
in
pop
mov
sub
fldcw
nop
xchg
ret
jge
or
xchg
sub
or
aam
jp
pop
jno
mov
pop
or
cmp
notb
sub
cmp
fldcw
add
xor
lods
adc
lret
lcall
push
scas
jnp
sbbl
sub
mov
push
jo
ficoml
dec
fmull
mov
aas
enter
adc
mov
test
imul
mov
mov
and
mov
or
inc
xchg
xchg
mov
pop
ret
pop
jnp
adc
push
lock
xchg
pop
aaa
scas
movsl
inc
es
inc
shll
adc
fbstp
or
enter
lods
aaa
repz
mov
and
lods
cltd
jb
or
mov
pop
das
pop
inc
das
mulb
sub
mov
dec
test
lods
ja
cmp
xor
mov
in
pop
in
das
xchg
faddl
sub
mov
jl
or
divb
xchg
inc
ljmp
pop
movsb
les
fwait
js
hlt
and
dec
and
pop
xchg
js
stc
stos
push
sub
or
ljmp
insb
push
out
and
xor
jmp
push
js
dec
addb
xor
stos
add
imul
push
or
xchg
es
jns
dec
xor
repz
push
xor
flds
xchg
xor
bound
scas
es
add
pop
idivb
lahf
mov
test
xchg
dec
leave
and
mov
jg
add
cmpsb
xlat
fisttpl
hlt
inc
orb
outsb
mov
arpl
bound
movsl
sbb
lea
push
jp
into
push
std
mov
xchg
call
sbb
add
pop
imul
jmp
mull
inc
inc
icebp
mov
jle
inc
xor
cmc
out
inc
std
and
cmpsb
add
das
mov
push
xor
pop
aaa
push
cwtl
leave
mov
mov
je
scas
lret
pop
div
jo
out
fcom
xchg
sub
cmc
loope
mov
or
addr16
into
sarb
dec
cs
lcall
jp
loopne
push
in
adc
fsubrs
and
daa
cmp
mov
pop
xchg
insb
adcl
add
pop
outsl
iret
imul
mov
mov
shl
arpl
sbbl
or
jbe
js
sahf
inc
jbe
insl
stos
and
dec
scas
jne
pop
cmpsb
test
or
xchg
push
jnp
jno
les
test
mov
jl
pop
cltd
pop
movsbl
ja
addr16
ljmp
pop
jno
pop
xor
xchg
cmp
push
cmp
call
ljmp
pop
pop
inc
xchg
push
js
and
insl
pushf
lea
mov
mov
outsl
lea
out
push
fisttpl
add
shl
lcall
jecxz
data16
mov
ret
sub
mov
fsts
ja
xor
or
ds
sbb
pop
and
adc
ret
pop
adc
mov
xor
sarl
outsl
inc
xlat
es
jo
xchg
and
aad
pushf
dec
or
push
aam
pop
and
insl
pop
rol
and
xor
sub
dec
adcl
jne
lret
nop
or
or
adcb
push
adc
dec
stos
inc
pop
adc
xchg
andb
jg
dec
push
inc
pop
out
cmp
jbe
dec
cwtl
icebp
mov
jne
jge
and
pop
and
dec
rorl
jmp
fcmovnb
stos
adc
add
clc
bound
bound
lds
xchg
sbb
clc
push
pop
test
stos
dec
insl
aaa
sub
enter
out
out
ljmp
xchg
inc
testl
pop
push
scas
iret
outsb
loope
mov
je
rorl
inc
pop
ja
test
cmpsb
sarb
out
mov
jge
pop
std
int
lock
jge
arpl
add
mov
adc
popa
and
mov
outsb
xor
jmp
mov
sbb
loope
enter
cmc
outsl
cmpsl
lret
adc
es
mov
xchg
stos
jo
test
adc
dec
cmp
popw
pop
sbb
mov
pop
push
imull
add
int
je
xor
dec
sbb
xchg
mov
xchg
mov
xchg
sarb
int3
push
rcl
scas
inc
imul
cwtl
xchg
mov
addb
dec
cs
cld
pop
aas
scas
je
xchg
dec
lea
aam
sti
mov
pop
fisubl
xchg
ret
es
adc
sub
lods
es
iret
push
or
fs
jmp
mov
imul
test
ljmp
push
or
xor
jg
or
sub
cltd
inc
jg
in
loop
cmc
ds
je
mov
push
outsb
jp
in
test
or
add
or
push
or
and
insb
cmp
stos
lds
push
out
sub
movsb
dec
cwtl
pop
sbbb
repnz
aad
stos
ss
sub
mov
addr16
inc
mov
dec
cmpsl
inc
and
push
jle
mov
enter
lret
ds
setp
sbb
data16
ljmp
hlt
mov
mov
mov
pop
inc
xor
stos
pop
sbb
xor
mov
dec
outsb
sbb
jnp
and
cmp
popf
in
lea
xchg
dec
nop
pop
sub
push
lods
cmp
or
adc
jnp
xchg
mov
xor
das
rcrl
sub
mov
int3
inc
xor
repz
outsb
insb
push
jne
sbb
fs
adcl
movsl
cltd
je
repnz
das
sub
shlb
xchg
mov
mov
xlat
fnsave
test
xor
fbld
dec
mov
or
jno
lods
jne
pop
xor
sub
fcomps
cwtl
shlb
out
sbb
cwtl
xlat
cmp
scas
les
lods
fiadds
and
mov
xor
pop
and
sbb
mov
daa
clc
sbb
repz
sub
cli
inc
jb
jl
outsl
popf
adc
dec
mov
or
jge
outsl
push
push
shlb
xor
dec
xor
dec
ds
mov
stos
xchg
jno
dec
push
enter
sub
xlat
inc
imul
lret
scas
bound
cmp
pop
cmp
mov
and
sub
sub
mov
mov
in
jle
and
mov
add
pop
dec
lea
inc
iret
add
repnz
jge
adc
daa
js
sbb
sub
int
ds
jo
push
mov
sahf
sbb
in
jb
outsb
push
push
sti
jne
cmp
mov
subb
int3
lret
jmp
std
ret
mov
mov
repz
in
test
shrl
stc
pusha
scas
lods
cmp
xchg
xchg
cli
int3
mov
jno
fbld
cmpsb
repnz
sbb
enter
shll
lods
xchg
cmpsl
dec
add
divb
ds
movsl
or
repnz
daa
mov
andl
mov
jge
mov
test
add
inc
in
addr16
pusha
mov
push
dec
test
jb
mov
ja
xorl
jns
or
popa
dec
sub
sub
rcrl
mov
pusha
dec
jecxz
fwait
push
ret
fs
aaa
iret
lret
sbb
mov
pusha
mov
pop
add
push
pusha
insl
into
jns
test
push
jnp
and
jno
xchg
add
call
inc
push
dec
adc
rcl
pop
das
pop
adc
mov
cmc
jle
popf
arpl
aas
cltd
pusha
aam
pop
and
xchg
insb
stc
sbb
xor
test
adc
test
imul
sbb
je
fcoms
out
add
jge
xlat
sbb
mov
fisubrs
xor
insb
cwtl
xchg
mov
divb
nop
dec
test
cmp
fildl
leave
mov
sbb
das
cs
cmp
adc
push
and
les
pop
mov
inc
ds
jle
roll
popf
jae
lcall
push
repz
js
mov
adc
sbb
fdivrs
sub
ficoml
mov
mov
std
or
in
adc
out
pop
bound
xchg
mov
pop
insl
push
and
popa
idiv
jecxz
mov
icebp
lods
cmp
mov
int
lcall
notl
fisttpl
out
and
cmp
push
es
push
jnp
pop
lods
rcll
cmc
aaa
pop
jae
push
jae
push
hlt
jl
faddl
dec
xchg
movsb
sbb
push
sub
sti
test
ja
rorb
loopne
jno
jg
cld
in
cltd
int
fmull
xchg
xor
enter
fwait
cmp
rol
jo
add
jecxz
push
add
int3
lcall
jne
jg
mov
sti
cmp
orl
cld
xor
inc
pop
pop
aas
lea
in
lret
sarl
jbe
jns
or
sti
addl
mov
call
and
stos
pop
lock
hlt
or
fcomp
inc
pusha
in
cs
fnstcw
ja
push
ret
mov
fildl
push
inc
cmpb
and
out
mov
out
sbb
pusha
push
stos
scas
test
imul
and
ud0
push
xor
inc
and
mov
outsb
lret
add
xchg
mov
scas
leave
imul
test
lret
push
repz
ds
mov
addr16
xchg
cmp
stos
pop
push
out
cmp
xlat
sbb
ret
fadd
das
clc
out
mov
aas
fs
xchg
outsb
mov
pop
add
pop
sub
xchg
sbb
sub
mov
loope
stos
or
sbb
ror
lea
rol
dec
push
stc
sub
lahf
jp
mov
dec
pop
sti
sbb
daa
or
addr16
sarb
cmp
push
sbbl
inc
pusha
jns
ret
sub
pop
cltd
aaa
ret
mov
push
dec
sbb
cmp
loope
dec
adcb
inc
mov
fsubl
dec
push
icebp
leave
push
inc
sub
mov
and
ret
rorl
xor
lods
sbb
sub
gs
dec
adc
stc
cld
jmp
push
cmp
lret
pop
js
push
stc
mov
xchg
push
mov
or
pop
sbb
lods
xor
stos
xchg
test
dec
mov
das
pushf
cmp
mov
and
sub
add
insb
addl
ret
aam
inc
push
push
ss
iret
xchg
scas
je
pushf
lea
cmpl
in
aad
mov
hlt
jb
cmp
pop
sarl
test
aaa
mov
dec
or
mov
xor
jb
or
cmp
mov
fsubl
negl
xchg
cmpsl
dec
cmp
sbb
in
mov
lods
mov
inc
imul
test
adc
stos
xor
bound
sub
push
mov
cmp
xorb
add
push
sahf
outsl
mov
lahf
xchg
xlat
test
subb
icebp
mov
ds
sub
lret
xor
and
lock
es
daa
pop
mov
mov
test
mov
mov
and
shll
pop
inc
cli
xchg
sahf
mov
and
imul
in
cmp
sti
and
xchg
loope
js
scas
aam
mov
repnz
jae
pmulhuw
pushf
stos
subb
cmp
pop
rol
lock
xchg
ss
aas
ljmp
pop
push
inc
inc
inc
stc
sub
cld
xchg
sbb
je
inc
dec
les
ljmp
and
pop
fdivl
pusha
pushf
std
mov
clc
cld
rcr
mov
inc
add
rorl
mov
inc
lahf
movsb
add
dec
and
js
mov
nop
push
loopne
sub
insl
stos
cmp
mov
scas
xchg
add
cld
jns
inc
aad
in
enter
mov
jbe
stos
in
enter
pop
add
mov
mov
shlb
mov
fs
and
imul
fs
rorb
aaa
mov
pop
rcll
cltd
ds
aas
push
adc
mov
not
push
pop
add
inc
sub
and
inc
xlat
ret
adcb
loope
pushf
mull
mov
push
pcmpeqw
js
scas
adc
cwtl
mov
dec
jne
jo
subl
nop
mov
xchg
xchg
sub
lret
jg
bound
mov
mov
dec
jp
iret
sarb
scas
adc
sub
hlt
fwait
das
push
push
pop
movsl
adc
gs
push
iret
mov
stc
adc
in
inc
mov
andl
clc
jo
xchg
pop
cltd
xor
push
sbb
bound
sub
mov
pop
adc
stos
std
sub
inc
add
lock
dec
or
pop
test
or
mov
add
mov
xchg
xchg
les
xor
dec
rclb
ljmp
jno
sbb
movb
inc
bsf
dec
dec
insl
or
aam
inc
or
push
jmp
cmpsb
add
dec
xor
loopne
add
in
stos
push
jmp
pop
data16
mov
repz
xor
dec
aad
inc
ret
mov
pop
das
ss
pop
shlb
pop
iret
sub
sub
sbb
xor
push
lods
fistps
dec
push
ds
or
jmp
orl
mov
mov
movb
sbb
push
mov
js
fdivp
int
xor
call
out
adc
mov
jnp
xor
rorl
fisttps
xor
push
cmpsb
pop
jbe
mov
imul
popf
push
insb
push
mov
add
fistps
jo
xchg
js
dec
mov
sub
add
jne
dec
mov
sbbb
sbb
pop
mov
incb
dec
cld
xchg
add
mov
push
pop
in
sbb
jge
sbb
dec
repnz
js
push
ss
and
sbb
inc
xchg
jno
test
scas
hlt
push
add
mov
js
add
or
jno
mov
push
inc
js
jb
dec
fnstsw
sub
add
push
mov
and
cmpl
into
or
pop
lods
int
mov
outsb
stos
icebp
aam
loopne
adc
rcrl
inc
pop
and
mov
fadd
inc
int3
pusha
out
jbe
jecxz
mov
fistl
xor
orl
jg
mov
or
push
xor
stos
out
and
add
sub
stos
adc
mov
mov
add
mov
or
fcmovb
ljmp
ret
cmpsb
jo
jl
lock
in
psllw
add
cwtl
dec
pop
or
stos
push
lock
aam
adc
adc
mov
int
add
sbb
int
shlb
popa
inc
scas
es
int
pop
clc
inc
clc
sbb
inc
push
subb
dec
push
leave
xor
mov
adcb
mov
pop
jbe
repz
cltd
jl
jmp
lods
mov
movsb
sub
pop
pop
dec
or
or
pop
test
pop
sub
test
dec
mov
jae
retw
cmp
lret
pop
je
insb
cmp
imul
pop
je
lods
mov
push
jo
ds
cmp
push
iret
jle
mov
movsb
mov
movsl
out
dec
push
int
jae
std
out
sub
testl
jl
sub
cmp
call
jmp
sub
in
sbb
push
repnz
int
loopne
mov
jecxz
pusha
enter
mov
or
add
fisubrl
jmp
lret
in
inc
mov
shl
add
outsl
fstp
aam
dec
mov
xor
test
xor
xor
or
pop
ret
xchg
add
sub
pop
inc
sub
out
push
sbb
sbb
jbe
dec
pop
fiadds
adc
lret
or
mov
jle
sbb
push
andb
adc
cs
inc
imul
mov
mov
fistl
pcmpgtw
push
push
pusha
gs
add
jbe
arpl
jnp
mov
mov
ficoml
out
sbb
test
out
add
sub
cmp
adc
jecxz
dec
jge
mov
jb
out
dec
push
mov
outsl
loope
lahf
lret
xor
pop
out
mov
js
push
dec
scas
leave
orl
sbb
not
fsubs
cmp
pop
and
enter
nop
inc
inc
pop
sub
lds
ror
xchg
shlb
cmpsl
aaa
push
push
add
or
jge
cli
fisttpl
mov
dec
jle
inc
jno
push
inc
iret
sbb
in
movsl
cs
movsl
stc
sub
lret
push
xor
sbb
mov
out
pusha
int3
cmc
lahf
pop
stc
imul
inc
lea
in
add
mov
fsubrl
or
mov
cld
xchg
pop
push
inc
addb
cltd
cmp
mov
push
js
xchg
or
lods
cmpl
fdivr
stos
js
xchg
iret
lea
fadds
ret
je
je
inc
push
daa
jae
cmp
movsb
or
and
mov
jmp
sub
fidivrs
adc
mov
mov
roll
sub
icebp
xor
cmc
jnp
insl
and
dec
ds
fsubs
mov
or
pop
sti
sub
test
push
adc
cli
inc
outsl
pop
adcl
pop
roll
pop
stos
inc
movsb
adc
push
dec
push
mov
outsl
sub
stos
add
fwait
dec
mov
or
arpl
push
loop
xchg
dec
dec
xlat
sub
sub
lcall
jnp
add
pop
mov
nop
enter
add
in
icebp
lds
scas
mov
shlb
xor
mov
pop
in
xchg
stos
mov
outsb
repnz
jns
inc
lret
xchg
ficoml
xorb
sbb
mov
in
pop
lea
repz
shlb
js
sbb
ret
and
inc
and
orb
shrl
scas
xchg
in
es
mov
pop
mov
rcr
cmpsl
repnz
inc
aas
stc
out
push
sbb
push
imull
lds
cli
inc
insl
jp
mov
mov
cmpsb
xchg
push
jnp
std
add
xor
jns
aad
or
jno
xchg
jl
test
in
js
iret
sbb
dec
xorb
inc
mov
mov
and
repnz
mov
sbb
xchg
cmpsb
movsb
cmp
fnop
lods
test
cld
dec
cltd
lret
inc
fwait
ja
loopne
rorb
outsb
outsl
jae
xor
inc
icebp
iret
push
into
mov
call
xor
push
xchg
pop
push
inc
int
shl
sbb
cmp
pop
sahf
iret
je
mov
das
in
lock
inc
mov
mov
aam
aad
mov
jmp
jo
push
mov
push
dec
ret
mov
add
xchg
xchg
fcompl
leave
popf
data16
cmp
xor
mov
cltd
inc
out
divl
stos
xchg
lods
jo
pop
mov
pop
call
pushf
stos
ret
sarl
adc
mov
in
add
loope
loopne
dec
xor
scas
or
punpckhbw
push
add
aad
test
out
push
or
call
add
mov
in
add
aam
out
jo
loope
adc
test
xor
sub
push
adc
inc
movsl
ret
and
mov
jb
cmpsl
lcall
mov
test
mov
xchg
mov
mov
fwait
dec
pop
sbb
push
shl
scas
std
orl
mov
add
xchg
stos
cmpsb
loopne
sub
das
and
jmp
cmpl
aaa
sbb
inc
jnp
pop
popa
jmp
outsb
fldcw
aad
fsubrs
adc
and
imul
sub
mov
jg
mov
mov
ror
lods
or
inc
xor
adc
movsl
jnp
mov
push
sbb
sbb
or
add
fimuls
in
scas
call
push
pop
adc
inc
cmp
test
sub
push
add
or
inc
and
sbbw
inc
or
or
hlt
test
mov
pop
test
push
loope
mov
movd
mov
icebp
sbb
in
dec
mov
movl
cmp
lahf
dec
inc
test
jbe
imul
ss
shr
cmp
inc
mov
shr
icebp
sub
aas
loop
ljmp
testl
lock
mov
mov
jmp
push
mov
ja
or
jo
mov
das
es
test
jno
push
add
jg
fsubs
mov
fists
ror
fadd
jg
pusha
cmp
loope
cld
repnz
mov
sbb
lods
je
imul
add
cmp
sbb
xchg
mov
push
push
ja
dec
jbe
test
mov
mov
fnsave
test
iret
sbb
push
neg
aam
sbbl
push
enter
hlt
dec
aam
push
sub
inc
lea
jae
sbb
add
mov
int3
and
cwtl
mov
xor
mov
xchg
sbb
icebp
pusha
inc
loop
push
addb
adc
mov
test
mulb
cld
gs
push
cmp
pop
popa
cmp
mov
in
xor
sbb
roll
pop
jg
movsb
jge
cmp
popa
in
aas
cmp
push
xor
dec
sub
das
mov
ret
jle
cmp
outsl
bound
stos
adc
leave
ss
cmp
dec
mov
cwtl
clc
lods
adc
aam
xor
add
sti
sar
inc
adc
es
sarl
mov
mov
push
std
loope
in
aam
dec
mov
nop
loop
mov
sbb
test
sbb
rorl
int
xchg
sbb
push
lahf
setb
insl
cmp
mov
pop
sub
in
mov
incb
push
rorb
pop
dec
or
test
gs
decl
pushf
shrl
fdivl
sti
cmpb
mov
pop
sbb
xchg
sub
test
outsl
je
pop
jb
shrb
aam
outsl
pop
iret
xor
sub
movaps
cmpsl
sbb
dec
pushf
cmc
outsl
dec
xchg
movsb
push
repnz
fnstenv
add
inc
and
out
adc
fsubr
adcw
add
leave
push
push
pusha
jb
mov
xchg
sbb
mov
cwtl
das
inc
pop
mov
in
test
je
mov
movsl
mov
sbb
aam
dec
push
les
mov
cmp
outsb
cmc
clc
sahf
mov
call
push
sub
pushf
addl
int
icebp
shll
nop
cwtl
xor
enter
push
cmpsl
sahf
aaa
push
push
addb
cltd
push
cmp
aad
arpl
push
mov
jnp
and
mov
jnp
adc
inc
adc
push
push
xchg
adc
stos
mov
loopne
mov
mov
aad
mov
jo
insl
adcb
insl
and
cld
lahf
mov
add
adc
dec
mov
insb
xchg
xchg
popa
dec
stc
bound
pop
stc
stos
xlat
mov
pop
mov
scas
jle
push
xchg
lods
dec
jb
aad
lahf
stos
dec
mov
adc
popa
xchg
cli
pop
mov
add
out
cwtl
js
push
inc
pusha
dec
fs
sub
push
in
ja
ljmp
scas
sub
in
adc
andl
lret
sbb
pop
data16
and
jg
mov
sbb
pop
subl
push
pop
in
dec
fs
cli
sub
flds
or
cli
jo
pop
mov
arpl
push
cld
jb
sbb
xchg
lock
and
pop
ljmp
inc
jp
push
and
push
pop
fimuls
iret
sbb
push
jle
cs
pop
mov
jge
sbb
int
pop
xchg
push
dec
lret
aaa
push
jae
jg
sub
outsl
hlt
push
adc
xor
jp
insl
lods
push
add
int
clc
and
mov
jno
sub
jg
add
mov
hlt
rcll
into
mov
ficoms
gs
dec
pop
data16
mov
xor
outsl
arpl
push
jo
jle
mov
lods
call
jmp
or
xchg
jle
mov
pop
inc
xor
lcall
rorb
sti
cld
icebp
mov
mov
lods
mov
adc
push
repz
je
daa
lcall
bound
test
mov
add
dec
fidivrs
lods
mov
out
or
cmpsb
push
inc
mov
sti
imul
into
test
jg
inc
or
xor
pop
cli
jne
add
shll
lcall
dec
xchg
je
mov
iret
clc
sbbb
or
xor
mov
icebp
sbb
gs
inc
mov
shll
movsb
outsb
xor
je
push
xchg
inc
dec
cmc
dec
sbb
ljmp
mov
add
iret
push
xor
cwtl
shl
adc
int
ds
inc
int
loop
lock
js
adc
sub
jp
mov
or
insb
fwait
ja
cs
test
iret
push
stos
dec
and
push
add
insb
popf
jmp
pushf
out
lret
dec
negb
lods
sbb
pop
dec
aad
mov
cltd
jle
mov
jmp
je
push
inc
andl
ficoml
sub
fadds
out
or
sahf
outsl
pop
add
into
movsl
sub
push
in
mov
lret
sbb
cltd
test
mov
cmovs
repz
and
xchg
dec
subl
subl
lods
xor
xor
addl
ret
sub
insl
pop
push
push
pop
push
push
push
js
sbb
jnp
les
xor
jmp
stos
lea
xchg
jge
out
push
jmp
ljmp
faddl
sti
and
pop
dec
mov
addr16
mov
mov
or
out
push
test
or
xor
popf
rcrl
jne
loop
sahf
lahf
out
mov
fstl
or
inc
push
je
mov
shlb
push
inc
mov
aaa
sub
mov
sub
add
pop
out
arpl
dec
xcrypt-ofb
cmpsl
push
loopne
ret
aaa
xor
out
in
ss
push
and
cwtl
push
or
mov
in
mov
lret
es
lret
insl
push
add
and
or
mov
add
sarl
lods
and
sbb
insl
imulb
lock
or
mov
mov
cmc
loop
test
push
jecxz
jno
cmp
xchg
adc
jge
icebp
ljmp
xor
inc
adc
xchg
sbb
xchg
dec
adc
cmpsl
cmpsb
mov
daa
sub
sbb
pusha
gs
sti
stos
pop
in
addr16
inc
pop
fcmovbe
xchg
push
mov
fnsave
add
cmpsl
push
pop
jle
sub
pop
leave
sub
add
pop
cmp
out
loopne
add
sub
or
lret
mov
out
aas
cmp
call
clc
jp
mov
leave
mov
hlt
inc
xor
sbb
outsb
pop
stos
mov
inc
in
test
loope
bound
fisttps
fnstsw
inc
lock
jmp
cmc
add
mov
jo,pn
test
inc
push
push
push
cmpsb
insb
flds
dec
out
sahf
adc
test
sahf
cmc
jo
cld
cmc
inc
popf
aad
enter
mov
lods
leave
dec
pop
movsb
dec
add
pop
arpl
xor
lods
loope
shrl
pop
lea
mov
es
ja
test
mov
pop
or
ja
ss
and
mov
mov
sub
fs
push
pop
les
xor
adc
or
insb
repnz
adc
fsubs
sbb
xchg
idiv
aaa
lock
xchg
or
mov
adc
cmp
roll
pop
add
xchg
lds
dec
je
add
xchg
dec
xor
loop
cs
mov
pop
mov
mov
xchg
and
popa
xchg
repz
fdivl
dec
fildl
pop
jge
xor
int3
pop
pop
pop
out
mov
fidivrs
insl
add
mov
lea
gs
cmp
shll
popa
arpl
xchg
test
jns
movsl
clc
push
arpl
mov
lds
outsb
pop
in
add
call
pop
mov
fisttpl
mov
inc
cwtl
adc
sbb
mov
or
pushl
testl
sahf
scas
dec
adc
mov
dec
dec
and
sub
mov
sbb
ss
iret
cmc
mov
inc
mov
cmc
sbb
mov
lcall
xchg
addr16
in
and
inc
pusha
insb
std
movsb
push
std
sarl
pop
sub
or
adcb
inc
mov
push
add
sbb
xchg
inc
imul
sbbb
iret
mov
xor
mov
fdivl
xor
addb
ret
sub
enter
inc
popa
pop
xor
xchg
sahf
loope
test
dec
aaa
test
mov
stos
xchg
cmp
dec
pop
fnstcw
mov
das
xchg
jmp
out
nop
andl
mov
cmpl
mov
aas
add
cmp
sbb
sub
push
adc
ss
enter
mov
and
push
loop
arpl
fimuls
inc
daa
sbb
mov
out
mov
lahf
inc
pop
mov
cmp
mov
sub
std
sub
movsl
daa
mov
xorb
push
dec
mov
or
jne
xlat
popf
fs
adcl
test
dec
imul
stc
les
les
add
mov
movl
aad
add
mov
mov
inc
mov
sub
xchg
pop
imul
iret
pusha
data16
or
jmp
jne
mov
cs
fdivs
aas
lods
jnp
fwait
inc
cmp
fsub
popa
int
rorl
xor
enter
loopne
adc
cs
xchg
xchg
mov
mov
ret
mov
dec
dec
cltd
std
fdivrp
xchg
inc
mov
inc
aas
popf
dec
in
jb
mov
fldenv
inc
aam
pop
add
ds
sbb
mov
cmp
and
jge
inc
inc
arpl
push
roll
inc
cmp
jne
popa
cmp
shlb
cmpsl
cwtl
lret
xchg
xchg
ds
jns
ret
in
dec
push
mov
cltd
cmp
jno
and
jmp
out
and
jo
hlt
mov
fisubrs
fcomps
push
aas
sti
or
sbb
xchg
addl
mov
adc
js,pt
mov
rorl
cmp
inc
push
jo
imul
sub
mov
adcl
push
cmp
xor
lcall
sarb
mov
rorb
data16
xor
mov
lods
outsl
jg
mov
test
aaa
or
test
jo
int3
jno
pop
call
mov
push
js
sar
sub
fidivrl
popf
xchg
fnstcw
mov
out
xor
std
in
add
mov
into
test
sub
pushf
sarl
jmp
in
sub
sub
pop
sub
add
cmpsl
jmp
xchg
call
loop
fwait
int3
lcall
test
mul
aaa
stos
sbbl
iret
int3
sbbl
cmp
or
shl
dec
loopne
cmp
dec
cmp
add
cwtl
or
dec
push
fcmovnu
out
mov
imul
cmpl
gs
adc
push
mov
pop
ja
or
int
xor
and
xchg
xor
sbb
jne
scas
arpl
aaa
cmp
jae
pop
adc
sbb
pop
xchg
xor
xchg
sbb
push
add
sbb
aaa
in
add
inc
jbe
dec
sbb
loopne
sti
sbb
das
sbb
and
sbb
loope
inc
daa
sub
and
cmp
sbb
cmp
pop
pop
mov
and
add
dec
ficomps
test
loop
pop
sbb
push
push
lcall
cmpsl
icebp
push
push
sub
push
push
mov
push
mov
inc
jmp
daa
loop
lock
data16
scas
cmc
cld
cmp
testl
or
mov
unpckhps
movsb
pop
sub
jg
sbb
mov
in
jnp
addr16
in
mov
dec
insb
inc
dec
popf
sbb
test
sbb
and
dec
add
ds
cmp
dec
push
jne
push
jo
sti
xor
mov
addr16
xchg
mov
push
cwtl
mov
pop
xchg
sub
sbb
nop
iret
imul
and
dec
dec
xor
add
jnp
addr16
push
sub
mov
imull
pop
xor
sbb
pop
or
and
outsb
lret
ret
lock
sti
push
cmp
pop
adc
enter
mov
add
test
cwtl
gs
sub
sub
jae
sti
add
mov
jno
mov
ret
push
sbb
pushf
rorb
outsb
xor
jbe
and
push
push
cmp
or
incl
mov
subb
pushf
cmp
mov
into
cltd
fwait
enter
adc
mov
in
mov
loope
outsb
cltd
pop
in
push
xor
and
and
mov
cmc
cs
repnz
cmp
pushf
icebp
xlat
decl
mov
cli
popa
out
daa
stos
in
cmp
or
pop
repnz
push
add
jle
int
gs
arpl
leave
bound
mov
std
pop
jg
xchg
das
cltd
jle
das
enter
mov
das
sbb
xchg
and
lret
or
pop
call
rolb
dec
pop
sbb
push
adcb
loope
cli
jmp
sbb
inc
or
push
pop
adcl
push
cmpsb
xchg
sbb
add
leave
jp
lock
xorl
pop
xchg
sbb
jge
push
pop
test
aas
xor
pop
mov
pop
sahf
jns
mov
dec
xchg
hlt
jo
sub
push
cmp
dec
jmp
outsl
mov
and
leave
xchg
popf
cs
push
in
dec
pop
mov
jecxz
stos
mov
insl
jns
fistpl
cld
lods
js
movsb
in
mov
add
and
push
xchg
movsl
jp
sub
cmp
jl
lds
adc
in
leave
mov
jns
adc
inc
in
loope
insl
lahf
push
js
in
sbb
lret
or
out
sub
inc
inc
in
inc
je
pop
repz
mov
fs
add
dec
jno
je
jge
jno
add
cld
jae
jl
cld
cld
add
push
xor
jmp
inc
jmp
sbb
lea
add
and
mov
jp
into
xchg
fstps
popf
inc
push
fists
mov
xchg
subb
push
add
inc
fidivl
pcmpgtd
mov
dec
pop
adc
sahf
fsin
xchg
xor
push
pop
xor
mov
aam
inc
out
add
mov
test
dec
bound
xchg
fisubs
ret
adc
mov
xor
lahf
jmp
and
push
lcall
into
adc
push
cmpsl
out
cli
pop
xor
xchg
outsl
popf
loope
aad
test
out
push
jbe
adc
add
loop
push
and
stos
dec
and
mov
ret
adc
les
mov
sbb
sar
icebp
rcrb
std
iret
fnsave
fisttps
pusha
push
out
adc
imul
lret
fisubs
xchg
mov
pop
inc
push
mov
lods
mov
jne
xchg
out
jbe
test
shlb
push
dec
or
dec
mov
aad
mov
incb
rcll
and
aas
push
jbe
ss
mov
rorb
and
add
jg
mov
mov
jmp
add
cmp
test
in
and
dec
push
adc
adc
mov
popa
outsl
dec
repz
mov
test
insl
pop
nop
mov
cltd
test
repnz
pushf
xchg
pop
bt
mov
inc
subb
adc
jecxz
imul
xchg
mov
je
push
pop
mov
sub
arpl
sbb
add
aas
scas
ss
sbb
mov
pop
pop
inc
outsb
lods
cmp
jne
int3
sahf
jne
mov
inc
loope
dec
ljmp
mov
dec
loope
in
inc
imull
in
hlt
pop
ljmp
stc
xor
pusha
testb
pop
pop
rol
xchg
adc
shrb
pusha
mov
decb
ucomiss
jl
push
add
jnp
imul
mov
and
pop
addb
lods
and
cmp
cmp
jno
int3
insb
insl
scas
pop
out
fisttpll
push
cmp
dec
lret
sbb
pop
adc
inc
xchg
dec
pushf
xor
cmp
jmp
les
rol
mov
outsl
lods
ds
sub
inc
sub
dec
sub
mov
add
sti
xchg
mov
add
dec
or
xchg
mov
in
dec
clc
mov
neg
cmp
cmp
jle
aam
sbb
push
mov
bound
hlt
and
mov
add
imul
mov
sub
call
pop
jo
mov
jge
stos
add
mov
bnd
fwait
cmp
adc
cmp
mov
int
cmp
std
sub
ljmp
test
inc
or
cmc
xchg
pop
lods
jbe
js
push
mov
mov
xor
dec
adc
pusha
push
push
movsl
jb
sub
push
xor
jmp
outsb
jns
and
pop
pop
jg
or
test
sub
mov
adc
cld
xor
fs
dec
sbb
jns
push
test
int3
dec
sbb
push
mov
xchg
sbb
clc
and
jge,pt
inc
xchg
fdiv
dec
in
xchg
pushf
mov
add
addb
testb
sbb
adc
jae
mov
inc
iret
or
out
inc
push
orb
loope
ret
mov
daa
icebp
icebp
jg
ja
jne
mov
jne
sbb
test
outsb
mov
sub
dec
xor
push
out
mov
dec
iret
mov
xor
cld
jp
jb
ja
mov
push
iret
in
jns
mov
in
xor
in
sbb
nop
xor
jne
jle
sarl
cmp
mov
and
into
jg
cmp
cmc
sbb
aad
mov
mov
xor
rcrl
cmp
add
aam
ja
ja
mov
add
jo
sub
adc
push
dec
fsubs
sub
ss
dec
stos
insl
lret
cmpps
mov
dec
jbe
inc
inc
xchg
add
jno
sbb
sti
add
subb
push
mov
ret
rcrb
addr16
dec
push
pop
daa
xor
in
xor
stc
add
and
or
jmp
sti
adc
ss
aam
test
orb
jbe
pusha
bound
mov
hlt
aas
repnz
cli
stc
inc
arpl
mov
pop
xor
fiaddl
outsl
pop
out
loope
mov
sbb
sbb
repz
push
jns
rclb
mov
cmp
inc
nop
lea
jg
aaa
mov
pushl
insl
mov
inc
stos
call
nop
shr
inc
and
xchg
mov
imul
loope
out
icebp
idivl
bound
lods
and
fimuls
sub
add
inc
and
xlat
mov
mov
inc
mov
cmp
jle
and
adc
xchg
filds
inc
add
sub
imul
xchg
push
dec
pop
adc
pop
push
sarl
mov
ret
add
je
push
sub
icebp
and
fistpll
inc
inc
inc
jp
pushf
xor
lret
lods
fmuls
push
adc
int3
mov
cmp
xchg
add
mov
mov
out
mov
and
cmpsl
sbb
imul
mov
ret
xchg
mov
push
cmp
mov
pop
or
xor
mov
sub
and
mov
jmp
ljmp
or
bnd
stc
cmp
ret
inc
mov
jae
fimuls
idivl
fdivr
and
fstl
pop
sti
mov
ja
rorl
sbb
lds
jge
jb
xor
std
fidivs
jge
das
sti
jmp
xor
icebp
repz
push
mov
adc
cltd
mov
iret
fwait
inc
insb
sti
cld
inc
push
jnp
vcvtsi2ssl
inc
in
lods
pop
fwait
pop
out
and
call
mov
negl
push
mov
jae
sub
xchg
mov
add
add
mov
fwait
loopne
mov
popa
andl
xor
mov
lds
ds
sub
adc
repz
jbe
push
rcl
pusha
shr
mov
sub
jecxz
jmp
addb
lds
push
outsb
call
ret
cmp
in
cmc
icebp
and
cmp
xchg
out
mov
insl
pop
bound
push
inc
scas
add
lret
adc
or
dec
enter
push
adc
les
cwtl
bound
cmp
jne
xchg
jg
push
jmp
mov
xchg
mulb
jl
push
je
pop
aas
les
sub
repnz
or
xchg
xlat
imul
je
in
int3
sub
and
mov
insl
ret
mov
push
inc
cwtl
scas
loopne
dec
pop
or
daa
cmp
jle
fisubrl
pusha
cmp
fdivl
jmp
adc
fdivl
mov
and
popa
inc
adc
push
jl
cmpsl
subb
jnp
ja
jmp
loopne
sbb
scas
shll
ljmp
fmull
inc
ljmp
cld
jmp
jecxz
or
cli
or
popf
fistpll
jg
adc
dec
pop
iret
mov
ret
rcr
notl
fmull
xchg
push
sbb
data16
aad
fisttpll
cmc
cmp
lea
test
inc
call
mov
leave
push
je
enter
push
out
repnz
iret
and
add
mov
mov
pop
pop
push
xor
add
xor
fcompl
xlat
inc
dec
lret
das
lret
jae
stos
xor
data16
mov
jl
sbb
sub
outsb
hlt
pop
or
xchg
movsb
lods
lds
push
xchg
adc
ljmp
jmp
fs
insb
mov
and
sub
pop
cmp
mov
std
insl
xorb
xchg
inc
push
mov
subl
push
mov
es
sub
mov
fdivrs
inc
rolb
add
std
popa
pop
insl
dec
add
adc
sub
xlat
das
adc
cmp
jnp
jns
clc
adc
cmp
fnstenv
rolb
inc
pop
add
sub
enter
jge
sahf
cli
xchg
pop
xor
adc
jae
fisttps
out
add
int3
hlt
adc
mov
adc
push
das
mov
or
fnstenv
pop
fldl
cmp
push
fisubrl
test
cmpsl
sub
sbb
inc
cmp
in
pop
lods
add
cs
pop
push
mov
inc
cltd
repnz
frstor
mov
dec
je
xchg
jnp
in
add
mov
clc
mov
sarl
lods
ret
and
lahf
push
dec
popf
iret
mov
lods
sub
xchg
loopne
push
or
add
cli
movsb
cmpsl
xor
mov
mov
ja
mov
jb
pop
repnz
xchg
ret
push
insl
jns
xchg
add
jge
fnsave
inc
stos
xchg
jge
push
sbb
mov
sub
pop
push
ffree
mov
jmp
movsb
inc
mov
movsl
pop
inc
jnp
cmp
addr16
sub
mov
test
ss
sub
xchg
add
jae
in
add
bound
xchg
xchg
cs
sub
test
idiv
mov
xchg
pop
test
sbb
mov
sbb
in
or
xchg
push
into
iret
cmpsl
pop
xor
and
comiss
repnz
push
pop
out
out
je
cld
ltr
test
subb
xor
mov
test
add
mov
daa
and
cwtl
out
jle
dec
insb
adc
rcll
in
mov
inc
cs
sbb
jl
ror
mov
pop
les
sub
mov
movsb
in
mov
inc
xchg
lds
pop
addl
cwtl
sbb
cmp
lds
std
ret
push
popf
out
andl
les
inc
push
xchg
mov
push
cld
jnp
out
xor
dec
call
pop
mov
lcall
fnsave
push
jg
les
lds
or
mov
cmp
fwait
xchg
sbb
adc
xor
imulb
add
mov
sub
test
sbb
iret
aad
insl
mov
mov
adc
cmp
clc
push
xchg
push
shll
int
xchg
arpl
pop
scas
sub
popf
filds
and
mov
adcb
in
push
pusha
adc
lahf
roll
mov
repnz
and
pop
mov
sbbb
dec
clc
mov
mov
popa
fsubs
pop
mov
sub
aad
jns
into
out
rclb
jge
mov
sarl
ret
cmp
mov
adc
ljmp
and
cmp
mov
out
aam
bound
adc
mov
dec
sti
stc
adc
dec
and
or
ja
cmp
jbe
rcll
xchg
add
inc
mov
push
aas
jb
repz
int3
mov
jae
mov
movsb
jno
add
call
aas
pop
mov
ret
mov
aas
mov
stos
add
bound
aam
fwait
js
jns
hlt
push
aam
testl
inc
sbb
out
lahf
enter
sbb
cmp
xor
or
pop
jo
daa
loope
test
popa
lahf
xor
lcall
and
mov
push
in
jecxz
cltd
scas
loope
xor
mov
ror
mov
mov
dec
dec
js
lock
jbe
xchg
lods
shl
test
cmpsb
mov
mov
xchg
out
pop
inc
out
sbbl
mov
mov
dec
fdivrl
push
xchg
aad
std
std
test
aad
mov
shlb
pop
das
loop
cwtl
sahf
mov
xchg
and
inc
pop
aas
imul
gs
je
mov
movsb
dec
in
fisttpl
xor
mov
pop
scas
and
sbb
aam
xchg
sub
and
xchg
add
and
push
jecxz
mov
mov
into
fdivs
lcall
jbe
or
fistl
pop
or
scas
mov
jge,pt
or
inc
lcall
scas
pop
sub
out
mov
addr16
pop
jmp
in
and
jp
cmc
test
in
test
xchg
out
adc
loope
adc
test
jmp
movsb
mov
or
sub
adc
test
jno
xor
cmp
fs
ljmp
hlt
mov
add
mov
mov
jmp
inc
xchg
xor
notl
fsubr
stos
inc
add
out
bound
add
inc
stc
gs
jp
jle
ret
push
push
lcall
and
xchg
test
cmp
jo
ljmp
or
mov
mov
adc
aas
lods
xchg
lea
movsl
std
das
xchg
jecxz
cmp
fistps
stc
mov
test
mov
pop
and
popa
jae
and
mov
and
in
imul
cli
loope
sub
mov
mov
les
xor
xchg
lods
xchg
pop
jmp
mov
dec
repnz
stc
shr
scas
cld
xlat
pop
popf
jne
sub
cmpsl
sarl
les
shlb
mov
jmp
test
incb
hlt
dec
out
leave
movsb
dec
push
imul
mov
mov
push
mov
rcll
lock
push
or
stos
popa
mov
pop
lds
cmp
sub
and
test
sub
lods
test
fsts
and
movsb
mov
cmp
lock
adc
adc
loopne
mov
rcrl
jo
out
adc
add
dec
sbb
mov
inc
lcall
or
sbb
frstor
insl
outsl
xchg
sub
pop
push
notb
adc
mov
sub
lock
das
inc
in
or
sbbl
mov
outsl
xor
shr
inc
scas
xor
testb
mov
dec
lock
std
fwait
add
or
std
cmp
scas
xorl
sub
cltd
or
xchg
fs
gs
insl
cmp
or
sub
jae
mov
pushf
push
jle
stos
sub
fldenv
mov
outsb
ret
mov
rclb
je
repz
mov
jo
xchg
mov
arpl
scas
jb
sub
in
mov
test
jmp
mov
sbb
repnz
xor
adc
and
loop
les
dec
sbb
mov
loope
ljmp
pop
xchg
ds
inc
mov
pop
add
xlat
out
sub
inc
add
fsubrs
test
jo
push
sub
insb
jbe
ficoms
jge
xor
ss
das
push
jno
jl
loopne
xchg
dec
mov
dec
xor
test
inc
rclb
and
sti
mov
fs
xorb
out
call
jo
cld
dec
insl
int3
loope
sbb
xchg
mov
push
in
push
push
nop
loopne
jns
sub
stos
mov
in
cmp
xor
sub
nop
mov
cs
mov
pusha
les
jecxz
add
test
lret
jae
pushf
inc
sbb
xor
out
xchg
push
ss
loop
jbe
cltd
pop
add
fstpl
outsb
clc
mov
test
je
call
push
daa
jg
mov
jns
or
mov
or
cld
pop
xchg
insb
data16
inc
pop
test
add
pop
dec
and
movsb
push
add
jmp
inc
movsl
push
jne
lea
lret
xor
jae
jge
das
sbb
cmp
sbb
in
out
or
mov
xchg
inc
test
lods
jle
addb
or
popa
leave
out
xor
ljmp
je
inc
lock
std
test
inc
jp
enter
mov
mov
aaa
xchg
lahf
mov
mov
loop
mov
cmp
jb
sbb
pusha
movl
std
mov
adc
je
xchg
testb
mov
cmpsb
mov
pop
mov
mov
sbb
gs
and
stc
push
fnstsw
incl
push
pop
sub
sbb
sarl
ror
inc
rcrl
adc
mov
cmp
add
adc
rcrl
aad
xchg
xchg
push
inc
out
fcoml
push
js
sarl
jb
icebp
outsl
ds
cmpsl
popa
insl
cld
mov
scas
push
push
cmp
sbb
sub
jg
in
and
mov
pop
sbbl
test
enter
sub
jne
clc
jl
mov
mov
lock
ja
pop
call
adc
mov
pop
sbb
test
push
int3
mov
push
cmp
mov
lods
cwtl
or
fld
xor
loope
test
gs
sub
inc
aaa
xchg
xchg
mov
call
jns
mov
mov
cmc
cmp
cmp
cmp
lods
sahf
cvtps2pi
lds
inc
nop
add
sub
je
lahf
adc
ficomps
ret
or
ret
movsb
fnstcw
cmp
xlat
jl
movsb
outsb
push
roll
clc
pop
in
jno
dec
in
out
in
js
jbe
jecxz
iret
inc
into
push
add
mov
addr16
in
cmpl
cmp
jae
push
sub
in
dec
lods
leave
inc
shrl
scas
sub
cli
nop
fst
jno
sti
dec
push
shl
or
fnstsw
leave
cmpsb
push
cmp
inc
push
mov
movsb
and
lock
add
inc
pop
daa
in
mov
mov
or
sub
aad
sbb
pop
xchg
adc
sub
inc
mov
sub
dec
repnz
add
xor
neg
dec
in
inc
leave
mov
shrb
mov
sub
movsl
lods
lret
addr16
jnp
jecxz
out
sub
sbb
sub
cmp
adc
out
repnz
cmc
fisttpll
inc
and
jle
insb
outsl
loop
ljmp
xchg
cmp
lahf
sbb
sub
cmc
popa
ja
insl
shlb
cli
ret
aam
inc
ret
in
jp
mov
sbb
aas
loope
mov
call
std
testl
cli
aad
lock
ja
lods
fs
shlb
sub
jge
ss
inc
cli
lods
insl
xor
in
push
or
inc
cmpsl
adc
jmp
xor
test
jmp
ret
sar
iret
pcmpeqd
xchg
popa
inc
jecxz
push
div
addl
sbb
cs
std
adc
dec
inc
daa
inc
lcall
mov
in
cmp
repnz
imul
xor
aad
mov
mov
test
iret
mov
xchg
inc
ja
push
sbb
pop
fs
sub
outsb
inc
mov
insb
xchg
mov
repnz
out
pop
push
mov
bound
pop
jbe
add
lahf
inc
jle
je
xor
rcll
daa
or
sub
inc
or
inc
outsb
fisubl
mov
jg
insl
jb
das
mov
adc
aaa
xchg
cmp
shl
aam
leave
inc
cltd
arpl
scas
rorl
les
mov
xor
popf
js
fiadds
and
pop
lea
fistps
xor
loop
lcall
dec
push
xchg
push
cmp
xor
shlb
mov
clc
inc
push
inc
mov
or
inc
jmp
mov
mov
push
dec
out
cmp
sbb
xor
enter
or
lods
into
shl
dec
cmpsb
test
dec
mov
lret
pop
mov
cmpsl
xor
xor
push
sbb
enter
jae
add
rorb
repz
je
gs
xor
xor
cmpsl
inc
cli
dec
lret
fwait
icebp
push
popa
adc
bound
stos
enter
push
mov
xchg
jl
add
cwtl
shl
arpl
fstpl
inc
mov
mov
lock
pop
mov
cli
cmp
add
push
aaa
in
scas
mov
ds
or
mov
stos
ss
xor
mov
mov
daa
xchg
aaa
lods
mov
jbe
stos
dec
and
mov
jge
mov
dec
jle
sbb
and
mov
scas
gs
cld
xor
mov
or
or
dec
sbb
dec
mov
into
xor
daa
lret
pop
inc
iret
int
pop
das
sub
ret
std
inc
mov
mov
or
call
loop
lods
fcmove
cwtl
sti
mov
lret
mov
mov
mov
mov
sub
int3
cmc
out
inc
dec
psubsw
leave
aam
xor
mov
pop
out
pop
jns
xlat
sub
and
pop
add
jge
filds
fisttps
add
out
sar
jb
push
xchg
shrb
xor
adc
hlt
loope
lret
sbb
push
cli
or
mov
xchg
cltd
push
sbb
pop
cmpsb
jp
or
pop
add
pop
inc
push
rclb
aaa
xchg
stos
sarl
mov
adc
enter
lret
and
xchg
sbb
push
fnsave
or
cmpsb
loope
push
xchg
mov
cmp
divb
sub
mov
out
and
xchg
sahf
js
dec
lods
packuswb
add
inc
outsl
adc
adc
ficoml
push
out
dec
and
push
inc
pushf
pop
sbb
test
sub
jbe
shl
xor
add
add
xor
test
mov
sahf
jns
addr16
je
xchg
loop
xlat
cmp
push
dec
sbb
sbb
stos
jecxz
aaa
test
jmp
sub
push
mov
jecxz
push
cmp
add
jno
and
inc
cwtl
repnz
add
lahf
stos
add
into
mov
rorb
mov
jecxz
xchg
cmc
lods
xchg
xchg
and
xchg
movsl
xchg
ret
sub
leave
or
jnp
cmp
add
in
adc
push
out
mov
dec
add
leave
pusha
jne
push
test
mov
pushf
push
lahf
push
jnp
es
push
xchg
sub
cmp
mov
sbb
movsl
mov
pop
imull
xor
ret
push
dec
push
imul
xlat
out
cmp
and
add
xchg
jae
cli
sti
jecxz
dec
fistps
xchg
sbb
fisubrs
add
icebp
ret
cmc
call
push
cs
test
xlat
out
das
fwait
adc
jl
xor
xorl
sar
dec
ss
xchg
push
pop
cmp
add
std
push
inc
jno
sahf
jns
repnz
mov
push
add
xor
je
push
dec
mov
jnp
sbb
xchg
xor
jge
dec
insl
pop
cwtl
dec
push
dec
in
mov
scas
mov
addr16
repnz
add
jge
sbb
and
add
cmpsl
orl
in
out
xchg
fisttpl
loope
in
out
mov
fiadds
mov
leave
mull
xchg
in
inc
xchg
in
sub
lret
mov
adc
cmpsb
fcompl
jle
lock
inc
pop
cmpsb
xor
fs
mov
rorb
pop
or
sub
jp
dec
lods
cmp
add
push
iret
jbe
mov
sbb
repz
fildl
xchg
test
andb
cmp
mov
popf
jg
nop
or
aaa
and
inc
jmp
inc
xor
repnz
xor
jo,pn
xchg
pop
outsb
xor
or
leave
adc
pop
scas
imul
push
pop
outsl
mov
adc
sub
mov
test
mov
sti
fdivp
mov
mov
lcall
fisubl
cs
push
pop
mov
scas
push
jnp
leave
aam
cltd
in
sbb
mov
xor
inc
adc
cmpsb
imul
daa
xor
inc
add
clc
test
mov
cmp
pop
in
mov
and
out
xchg
pop
pop
cmp
pop
sub
jle
data16
xchg
xchg
sbb
clc
sub
push
push
mov
xchg
cmp
scas
jbe
and
fiadds
mov
or
mov
xorb
jno
cmpsl
push
dec
fwait
adc
lea
lcall
push
push
scas
mov
iret
loopne
out
dec
xchg
jge
insb
mov
sub
xlat
xor
outsl
pop
lret
or
mov
test
xchg
lcall
mov
dec
or
mov
hlt
fisubrs
xchg
stos
pop
and
mov
movsl
aaa
movsb
mov
mov
nop
fadd
lret
push
addr16
lods
int
push
stos
and
js
cmpsl
dec
or
imul
sbb
sahf
arpl
icebp
je
adc
push
int3
add
dec
dec
lret
pop
int
mov
mov
pop
sarl
fdivrl
or
and
fstps
movsb
xlat
leave
jb
idiv
and
lret
mov
jg
or
or
insb
xchg
mov
test
imul
adc
xor
adc
pop
fildl
fldcw
xor
push
in
jno
xor
enter
call
jmp
inc
les
arpl
dec
and
mov
fldt
dec
inc
push
mov
mov
mov
push
jg
int
add
popf
insl
push
mov
stc
dec
lods
inc
nop
or
aas
xchg
dec
fcoml
mov
daa
ficomps
add
fwait
push
andl
or
cmpsb
jno
loope
jp
cmp
fidivs
arpl
shlb
in
jle
jg
psubd
dec
pop
adc
pop
xchg
adc
dec
mov
in
push
out
push
adc
inc
sti
pop
pop
cld
out
cmp
aas
mov
flds
iret
add
mov
push
mov
push
pop
movsl
push
sarb
cmp
mov
or
gs
inc
cs
int
scas
sbb
stos
adc
jge
fcos
movsb
xor
pushf
and
adc
inc
cmp
mov
cmp
sub
jg
push
mov
mov
mov
insb
dec
cwtl
dec
xlat
insb
cmc
xchg
push
cmc
cltd
movsl
add
or
loopne
int
into
shl
and
ret
loopne
mov
insl
nop
xchg
mov
andl
mov
lret
ficoml
pop
mull
ret
mov
xor
mov
adc
dec
sub
fidivrl
sub
orl
dec
push
mov
and
fistps
popa
imul
mov
nop
rcl
daa
sub
jmp
pushf
cmp
mov
aam
dec
ficoml
cmp
push
cmpsb
cs
xchg
shrl
add
dec
jne
mov
gs
repnz
stos
lret
fisubl
jae
push
jns
and
xchg
jp
scas
je
mov
jne
loopne
mov
adc
repnz
cvtpi2ps
loope
mov
mov
xlat
aam
outsb
out
add
add
mov
mov
dec
subb
cmpsl
lods
ja
pop
rdrand
imul
int3
adc
btc
lcall
fldenv
scas
hlt
or
shrb
inc
xor
inc
pop
and
jp
xor
iret
aaa
lock
jno
roll
add
pusha
or
faddl
or
in
cmpsb
xor
test
mov
push
push
pop
push
inc
or
dec
out
adc
xor
fs
movsb
mov
jmp
mov
subb
mov
shll
testb
inc
sub
mov
mov
scas
pop
nop
stos
push
rclb
mov
test
jmp
jmp
mov
inc
mov
mov
jg
xchg
xor
lods
pop
cmpsl
jmp
repnz
pop
in
inc
dec
xor
sahf
es
xchg
rcll
mov
es
fistps
pop
fisubl
shll
into
mov
rolb
and
dec
scas
jmp
mov
or
cmp
push
cwtl
cmpsl
dec
xchg
xor
mov
dec
and
cmpsl
popa
dec
cmp
stc
fdivl
aad
sbb
mov
out
subl
pop
rol
arpl
xlat
mov
and
push
or
or
xchg
pusha
dec
xor
sbb
out
stos
adc
out
xchg
push
sbb
ljmp
shr
xor
xor
stos
push
mov
push
push
dec
insl
sbb
sub
mov
push
lods
cwtl
cld
push
push
mov
jb
dec
push
xor
loopne
mov
cmpsl
dec
out
fistpll
rcll
inc
lahf
mov
or
jle
es
sub
ja
int3
adc
icebp
dec
ret
lret
pop
test
movsb
fstl
iret
pushl
pop
jbe
xchg
jmp
sti
insb
mov
inc
not
testb
jnp
xchg
hlt
mov
lahf
inc
sbb
nop
imul
lods
mov
rcrl
out
xor
outsb
sub
ds
ffreep
int3
mov
jae
adc
mov
sub
cli
push
js
xor
cmp
mov
mov
sti
mov
sub
in
xor
fsubl
jp
leave
scas
shlb
xor
insb
fs
pop
ljmp
or
shrb
jmp
lock
adc
mov
pop
mov
push
imul
sub
fmuls
sbb
pop
cmp
ror
shlb
iret
outsl
nop
sub
xor
xchg
mov
sub
mov
mov
out
jno
xor
movsb
dec
cmp
shlb
js
or
cmp
or
cmpsl
rorl
cmc
pop
inc
sahf
out
cmp
push
xchg
and
dec
cmp
cld
mov
gs
aas
arpl
mov
adc
mov
or
jns
repnz
push
mov
test
out
add
in
inc
mov
fwait
inc
mov
notb
mov
repz
dec
sti
xchg
pop
les
xchg
push
call
iret
dec
adc
mov
cmp
or
out
xchg
cmp
fs
mov
neg
sbb
sub
jge
les
sbb
int
xor
out
iret
push
fidivrl
fwait
ljmp
daa
lret
ss
push
int3
mov
lret
jle
sub
movsl
cmc
sti
mov
ret
mov
pop
mov
mov
mov
mov
add
int3
test
sbb
pusha
dec
sub
sti
jmp
dec
in
lods
sarl
add
sub
jne
jne
std
sub
dec
gs
pop
pop
mulb
loopne
and
out
enter
mov
out
and
mov
xchg
jo
and
or
adc
loopne
mov
xor
adc
lahf
inc
inc
repnz
jns
sub
jmp
push
cltd
xchg
dec
movsl
mov
sub
test
mov
inc
xchg
cltd
or
mov
ja
dec
cli
aad
push
stc
cmpsb
pop
lahf
and
loop
add
push
popa
leave
sub
jb
stc
inc
sub
mov
add
cmp
dec
loopne
sti
addr16
out
sub
and
mov
loopne
lods
add
gs
push
or
inc
push
fstpl
lahf
xor
fisubl
mov
and
jns
repz
add
jecxz
add
and
inc
pop
jecxz
popa
or
popa
lret
and
mov
gs
dec
dec
sub
fsts
aas
jb
sbbl
xchg
in
lea
xorw
jle
push
add
dec
roll
xchg
push
in
cli
aad
dec
iret
push
push
jmp
test
mov
stos
outsl
jns
lds
shrl
cmp
pop
test
dec
mov
mov
insb
and
in
jg
add
inc
jnp
xor
out
stc
addr16
mov
jecxz
lock
dec
pusha
jmp
cli
imul
dec
push
xchg
je
jp
add
sahf
mov
adc
in
mov
adc
aaa
outsl
insl
imul
fwait
ja
pop
aas
mov
cltd
popa
nop
pushf
loopne
sbb
lods
rcr
mov
enter
std
rorl
imul
hlt
xchg
sbb
jo
movsb
dec
jmp
in
shll
fldenv
fidivl
fildll
lcall
js
xchg
lods
aas
outsb
lods
roll
adc
filds
xchg
data16
jle
popa
les
pop
ds
lea
xor
mov
mov
mov
adc
pushf
mov
bound
test
jge
pop
pushf
sbb
sub
jp
jno
pop
pop
movsl
fstps
push
stos
int3
jmp
adc
mov
push
pop
jmp
or
scas
test
pusha
int
popa
jmp
dec
aad
enter
movsl
and
in
mov
stc
aam
push
add
int3
sub
mov
in
aaa
ja
xor
test
ret
sarl
mov
lds
insl
jb
xor
lahf
or
cmpsb
dec
push
add
fs
test
jle
dec
icebp
sub
les
mov
daa
jns
jl
nop
pusha
sbb
mov
jno
cmp
push
repnz
mov
int
bound
lahf
push
insl
icebp
jae
mov
sub
rcll
jmp
js
sub
cmp
jp,pn
mov
xchg
fsubp
mov
mov
dec
mov
inc
pop
in
test
jb
adc
mov
jle
push
inc
nop
xor
inc
movsb
leave
jle
lcall
scas
fistpll
in
popa
out
xchg
or
cmp
test
inc
out
add
iret
shll
xor
mov
dec
dec
in
ds
in
lcall
sub
dec
inc
rol
sub
xor
and
test
jno
adc
sub
push
xor
loopne
lret
inc
dec
aaa
pop
adc
adc
sti
scas
mov
les
ret
and
imul
add
sub
test
repz
daa
sub
je
aam
sbb
sbb
ficomps
ljmp
cltd
xor
or
and
cmc
xchg
inc
lods
push
mov
dec
jae
in
push
sub
jle
imul
mov
fs
jl
insl
iret
ret
hlt
or
pop
std
popa
adc
sarw
loop
xor
mov
insb
sbb
and
fs
subb
mov
sbb
cmp
inc
adc
sbb
movsl
test
orb
jge
subl
imul
sub
xchg
push
pusha
sub
xchg
xor
push
cwtl
mov
popf
push
adc
in
inc
les
aam
jecxz
cld
pushl
adc
or
loopne
scas
rorl
test
fisubrs
scas
adc
sbb
or
in
adc
dec
lods
dec
dec
int
stc
aad
pusha
movsl
xchg
lods
push
not
pop
adc
mov
xor
add
mov
icebp
out
pop
clc
pusha
pop
jecxz
mov
cld
out
daa
jae
mov
mov
adc
push
xor
jns
mov
or
inc
stos
gs
loope
pop
pop
test
sbb
cmpsl
inc
cwtl
clc
sbbb
in
pop
pop
fbstp
adc
ret
lods
cmp
addr16
gs
cmc
or
cmpsb
xor
lods
push
in
jmp
dec
xchg
js
fisttps
pushf
jmp
lds
adc
gs
aas
mov
ja
cmp
int
push
and
fisttps
fisttpll
int3
jl
xchg
sbb
and
xchg
imul
in
cmp
pop
jnp
dec
mov
push
mov
imul
xchg
lret
andl
pusha
pop
xor
push
jb
into
jmp
in
rolb
and
test
xor
ljmp
testb
adc
orl
xchg
popf
mov
je
bound
mov
mov
jl
data16
jp
das
lahf
mov
inc
xchg
sbb
repnz
lcall
sub
pop
jno
sarb
fwait
xor
mov
js
lcall
cmc
mov
xlat
xor
scas
mov
cmp
sbb
test
inc
movb
push
aam
dec
ja
insl
add
stc
push
fcoms
in
push
xor
xor
ja
into
add
pop
fisubs
lret
inc
mov
popf
pusha
cmpsl
push
pusha
xor
insl
aas
fisubl
adc
clc
add
xor
out
arpl
ss
mov
pop
dec
xor
mov
call
test
mov
cwtl
add
ffree
adc
mov
leave
and
stos
pushf
or
loope
pop
add
cmp
aam
pop
fsts
mov
fnstcw
mov
mov
sub
push
mov
mov
sbb
push
mov
mov
push
and
or
mov
cld
cmc
cmc
push
fadds
addb
dec
loopne
jmp
in
pop
outsl
lods
inc
stos
mov
push
jecxz
lret
mov
jecxz
add
push
lcall
insl
and
mov
pop
negb
adc
scas
mov
push
cld
sbb
adc
and
ja
cmpsb
stos
aaa
loopne
push
lock
sub
sub
out
mov
jmp
sbb
stc
daa
xor
stc
push
sbb
push
adc
xlat
insb
xchg
pop
push
in
add
ret
xchg
xor
dec
and
in
pop
scas
mov
push
add
arpl
dec
cmpsb
cmp
mov
dec
test
and
xlat
xor
popa
mov
and
sub
call
xorb
adc
fsts
sbb
mov
sub
je
xchg
repnz
ficompl
adc
fs
sbb
imul
dec
pop
lret
mov
and
inc
adc
cmp
out
cmp
in
pop
pop
movsb
xchg
movsb
gs
rep
dec
jmp
push
adc
adc
cmc
mov
outsb
sub
ret
mov
sbb
xlat
dec
cmp
addb
dec
push
out
les
ret
adc
negb
outsb
sub
mov
or
inc
fisttpl
leave
sub
cmc
or
xchg
cmp
adc
adc
pop
fucomi
jb
xchg
lahf
mov
pop
dec
aad
push
out
cmc
xor
mov
sahf
xor
pop
pushf
pushf
lea
dec
outsw
dec
inc
mov
xchg
jbe
std
jo
xor
pop
icebp
sub
fdivr
je
inc
jp
stos
ds
jae
out
shlb
inc
pop
pop
jo
xchg
push
xor
nop
ficoml
test
test
ficoml
in
movsb
inc
pop
lret
mov
or
lock
pop
jb
aaa
jl
call
out
test
sub
loop
lea
cmp
adc
push
xchg
movsl
xor
adc
mov
bound
bnd
sub
aad
dec
and
jns
add
cmp
insl
adc
xor
out
adc
adc
icebp
mov
imul
les
xor
repnz
test
aas
jp
adc
sub
outsl
lock
int3
cmp
xlat
xchg
push
push
xor
xorl
push
cmp
jb
popa
push
fwait
push
movsl
shr
add
jmp
cli
in
push
outsb
xor
sub
repz
dec
sbb
ret
hlt
orb
cwtl
dec
leave
mov
data16
xchg
pop
ficomps
stc
pop
push
add
mov
scas
fwait
dec
pop
test
mov
pop
loop
stos
sbb
stc
pushf
xlat
ja
in
insb
shlb
xor
xor
jecxz
push
push
jmp
xor
mov
mov
jge
int
movb
push
fidivs
stc
test
push
or
ljmp
call
xor
add
or
mov
lcall
and
fstps
pushf
inc
cli
push
lods
popa
fsubl
roll
jb
push
cmpsb
push
jns
xor
cmc
cmp
les
push
xchg
lock
stos
pop
push
jne
cmpsl
scas
fdivrl
adc
movsl
or
scas
jne
in
loop
cmp
fidivrl
ljmp
push
push
xchg
inc
and
mov
and
jo
inc
pop
xor
cmpsl
jge
outsl
mov
adc
sub
jp
dec
and
rorb
add
inc
mov
gs
jmp
mov
pop
sbb
pop
aas
sbb
mov
mov
sbb
sbb
sbb
xor
cmp
cmpsl
popa
inc
lds
dec
or
sbb
lods
sub
pop
cmp
test
cmpsl
ret
outsl
push
mov
test
test
dec
fistpl
ja
cmpsl
cmp
outsl
test
xor
jmp
scas
outsl
jo
inc
iret
sub
sub
aas
and
daa
ds
ret
in
mov
xchg
in
mov
sbb
aas
lret
adc
push
xchg
sub
lods
in
hlt
sub
cli
inc
or
sbb
mov
dec
or
jb
cmpsl
sub
sbb
test
or
or
pop
inc
jge
push
or
jle
es
and
xchg
dec
pop
nop
and
add
pop
xor
pop
or
popa
mov
jne
push
mov
lods
inc
xor
mov
jns
adc
sbb
arpl
pop
push
sbb
inc
in
das
shr
std
push
pop
dec
ja
popa
or
insb
mov
mov
adc
adc
sti
jnp
and
mov
loop
repz
stos
cmp
push
js
dec
or
inc
cld
cmp
adc
jp
data16
mov
dec
ja
push
popf
push
pop
cmp
loope
cs
mov
sbb
xrelease
mov
fimull
pop
test
shrl
and
neg
jnp
or
sti
mov
dec
pop
pop
pop
lret
int
rorl
aad
xor
dec
andb
stos
adc
and
icebp
ret
xchg
or
cmp
mov
and
mov
or
out
icebp
lock
les
xchg
adc
movl
in
jge
les
and
push
xor
jns
vdivss
mov
cmpsb
xchg
shll
das
rclb
adc
mov
adc
repz
mov
mov
test
jmp
aam
push
xchg
stos
xchg
sbb
xchg
lods
sub
xchg
pop
arpl
xchg
jmp
mov
loop
lock
mov
scas
push
xor
ja
test
cmp
mov
xchg
fdivs
les
jne
pop
xor
and
mov
js
mov
xchg
mov
sbb
test
xor
sbb
ret
dec
std
xor
mov
lods
mov
sub
test
push
aam
iret
fsubrl
sbb
pop
adc
adc
add
clc
bound
les
mov
data16
and
cmc
sub
or
push
jne
push
insl
and
xchg
push
fldl
scas
aam
stos
aam
cmp
and
fsubr
dec
jbe
sub
pop
cltd
fsubl
pop
fs
test
scas
arpl
cmp
repnz
push
inc
mov
outsl
iret
sarl
sub
in
xchg
xor
ret
shrb
decl
imul
bound
mov
cmp
jae
push
aaa
push
jge
in
fldt
inc
aas
test
imul
std
subb
imul
sti
push
or
out
fldenv
push
cmpsb
cli
xchg
inc
incl
sbb
outsb
xor
pop
fldcw
pop
or
add
aad
outsb
pop
xchg
jl
mov
out
icebp
fistpll
cli
mov
in
mov
fsts
fcmove
mov
out
cmpsb
push
in
push
icebp
lret
cwtl
imul
xchg
arpl
in
test
sub
sub
out
push
clc
mov
insl
dec
dec
and
inc
mov
jo
out
inc
jno
faddp
adc
movsb
inc
mov
scas
cmp
or
dec
and
mov
pop
sbb
jb
cmp
scas
mov
sub
daa
mov
shlb
xor
fimull
out
lret
lahf
in
popf
cmp
cmpsl
pop
pop
inc
js
sbb
iret
aad
shlb
lret
inc
subb
cs
ljmp
orl
imul
push
outsb
test
pop
inc
pop
outsl
ljmp
sub
cmp
fsubs
pop
mov
ficomps
addr16
cld
data16
arpl
push
push
arpl
push
jne
push
and
or
adc
in
rcll
mul
mov
orb
in
mov
movd
mov
scas
push
adc
sbb
push
or
inc
mov
and
and
pusha
push
fbld
fildl
jne
jp
push
push
push
jns
xchg
jbe
ljmp
dec
cmpsb
testl
add
paddusw
or
std
rcrb
xlat
add
out
aam
packuswb
call
jbe
enter
inc
pushf
les
jecxz
and
fisubrs
notb
ljmp
sahf
addb
jne
js
mov
sbb
insl
cmp
adc
pop
sub
xor
fistpll
push
scas
lods
shrb
pop
data16
xor
xor
fdivrl
pop
out
mov
cmp
inc
inc
xor
mov
push
push
fidivrs
movsb
test
cs
push
cmc
lret
push
and
pop
rcrl
and
pusha
xchg
aam
andb
insb
ljmp
repnz
cltd
xor
push
mov
mov
mov
dec
pop
test
mov
dec
add
inc
mov
loopne
xchg
dec
push
int3
sti
out
xchg
sub
cmp
fistl
mov
pop
and
jl
mov
rorb
or
ret
jecxz
pusha
out
loope
les
jle
jnp
cli
cmp
and
std
aas
and
lcall
push
pop
mov
adc
loopne
cwtl
sti
test
das
mov
aas
jo
add
xor
dec
into
add
int3
xlat
popf
clc
pop
mov
mov
punpckldq
jp
and
movsb
imul
call
dec
lret
and
dec
xorb
sti
lds
push
mov
imul
fsts
adc
outsb
aad
jmp
pop
insb
mov
mov
pop
je
xor
scas
or
add
popf
out
and
and
pop
xlat
ror
xchg
and
push
mov
add
imul
adc
mov
insl
aad
inc
shlb
add
loopne
insb
test
repnz
cld
pop
insb
lcall
jl
jmp
aas
jb
daa
and
lea
fwait
xorb
and
ds
mov
addl
notl
mov
push
aaa
jle
mov
out
lret
inc
ds
pop
sub
clc
dec
das
fadds
outsl
outsb
sub
lcall
sbbl
and
je
cld
lcall
add
pop
lods
xchg
imul
jnp
lds
adc
ret
add
or
mov
aas
adc
inc
jge
cmpsl
cmp
push
mov
mov
js
out
fiaddl
shlb
int3
pushf
iret
loop
in
das
popa
shlb
dec
dec
test
cmp
mov
enter
mov
loopne
add
sbb
inc
or
push
adc
and
lahf
xor
rsqrtps
scas
shrb
pop
inc
dec
cwtl
jge
arpl
into
cwtl
xchg
iret
mov
addr16
sub
sarl
adcb
fidivrl
xchg
pop
lea
out
xchg
jle
rcrb
ljmp
or
cmc
test
pop
dec
imul
nop
mov
xor
lods
nop
jg
imull
inc
xor
add
gs
mov
testb
insl
and
mov
mov
dec
jno
sub
push
rcrb
aam
js
xchg
rcll
sbb
add
inc
std
rcll
bound
movsb
add
scas
scas
mov
cwtl
fcmove
cltd
test
or
and
adc
es
test
pop
ret
cli
aam
push
cmpsb
fisttps
mov
pop
ja
jbe
test
stc
mov
mov
xchg
pop
mov
jae
xchg
shll
test
fstps
test
xchg
sub
and
add
lock
push
in
inc
or
cltd
dec
ja
stos
xchg
pop
or
ficomps
stc
fisttpll
sbb
xchg
sbb
add
dec
jmp
pushf
stc
cmp
scas
xor
xorb
enter
sti
xor
outsl
das
mov
sub
cmpsb
daa
jp
push
jne
das
outsb
sbb
push
aam
jb
aad
xchg
test
jnp
push
mov
mov
mov
adc
adc
out
rcl
xor
dec
lods
sub
pusha
push
mov
scas
mov
orb
xor
fldlg2
pusha
jbe
scas
addl
push
test
jo
popa
xor
pop
setnp
lock
int
dec
inc
jge
lahf
inc
adc
out
xor
inc
push
in
mov
test
stos
les
cmp
xlat
xchg
push
shlb
inc
in
imul
xor
int
push
js
jl
test
xor
js
sbb
sbb
pop
pop
loope
pop
or
jo
mov
repz
sub
repz
mov
dec
adc
cli
sbb
push
cmpsb
in
mov
aas
das
cmp
loopne
push
and
das
or
leave
push
push
dec
xchg
sti
xlat
data16
jne
mov
out
sahf
xor
sbb
sbb
sar
push
cli
add
adc
cmp
mov
or
sbb
out
stos
xor
lcall
sbb
out
aas
shlb
adc
inc
imul
pop
inc
call
repz
fmull
ds
stos
inc
cmc
test
sub
xor
mov
lods
rorl
adc
in
insl
xor
bound
ror
jp
pop
lods
dec
scas
cmp
lods
dec
pop
bound
sub
call
mov
das
cmp
mov
or
lods
fsubrl
pusha
or
jge
in
dec
sbb
aam
lahf
adc
outsl
dec
xchg
sar
je
sbb
ret
jo
das
sbb
shlb
fmull
in
cmp
je
sarl
inc
pop
sbbb
jbe
inc
faddl
and
insl
pop
cld
inc
lcall
fwait
inc
cs
sbb
and
jle
dec
aad
push
jno
xor
popa
mov
sahf
push
rcrb
in
fistl
cmc
adc
add
orl
push
mov
sbb
jecxz
mov
call
and
fwait
stos
push
fdivs
cmpsb
sub
xchg
sub
dec
push
push
cmp
loop
sbb
dec
mov
dec
and
and
jbe
sbb
mov
pop
xor
outsb
outsl
loope
test
lahf
cmp
sub
pcmpeqw
sbb
mov
mov
lods
test
aaa
pop
rclb
ret
hlt
jle
or
in
adc
xchg
xlat
add
mov
mov
aam
push
loopne
mov
inc
clc
mov
mov
xor
out
xchg
movsb
jmp
jg
or
out
or
int3
dec
jae
adc
sub
mov
inc
in
jp
fisubrs
and
sbb
nop
pop
rcr
lret
xor
sub
dec
mov
adc
mov
scas
enter
or
into
pop
xchg
fsubrl
and
lahf
cmp
add
arpl
jmp
sti
arpl
push
sbb
hlt
mov
fs
and
pmaddwd
xchg
pop
addr16
aad
xchg
std
ss
push
data16
mov
jmp
lea
push
in
mov
jle
and
jno
mov
jle
imul
dec
mov
inc
dec
std
sub
cmpl
and
loopne
push
adc
outsb
xchg
iret
pop
aaa
incb
push
enter
cltd
xchg
ret
mov
or
mov
imul
rcll
mov
inc
shrb
rolb
es
add
sahf
in
mov
lret
int3
adc
or
subb
popf
jns
imulb
push
into
inc
imul
pop
jo
std
push
orl
cli
or
pop
xchg
adc
push
insb
in
test
adc
dec
push
dec
mov
icebp
in
sbb
cs
push
pushf
push
ja
bound
or
xchg
xor
xchg
fsubrl
fprem1
out
adc
push
xchg
jge
lahf
push
sub
sbb
mov
out
lret
popa
icebp
adc
xchg
pop
xrelease
sub
inc
mov
dec
push
lahf
into
dec
cmp
sub
mov
mov
call
aad
sub
adc
xor
js
pop
and
or
lods
jl
push
ds
arpl
mov
lods
dec
inc
outsl
lea
xor
pushf
sbb
push
sti
dec
mov
into
int3
mov
imul
mov
cmp
aad
pop
popf
and
dec
les
mov
dec
scas
cmp
adc
mov
int3
bound
jne
lret
flds
inc
xor
dec
and
out
cmp
mov
in
push
out
loop
dec
pop
push
orl
xor
mov
sub
test
pop
outsl
out
rcll
jp
jnp
push
inc
inc
pop
cmp
and
sub
mov
lds
push
cmp
mov
daa
push
mov
test
pop
scas
jl
rcrb
call
push
adc
mov
push
scas
sbb
nop
pop
sub
andl
rcll
cmc
dec
aad
lods
mov
xor
imul
mov
gs
mov
popa
push
push
sub
jecxz
clc
arpl
mov
or
xor
ss
mov
test
movsl
sub
xchg
lds
outsb
pop
jno
xchg
jl
mov
out
ret
into
ret
in
jno
int3
inc
outsl
push
bnd
xor
mov
xorl
loop
dec
mov
cmp
and
stos
jge
pop
xor
pop
insb
bound
cwtl
cmpsb
or
test
mov
add
and
mov
push
cmp
stos
pusha
push
mov
cli
sbb
pop
push
jbe
loope
lods
adc
adc
push
pop
test
xchg
fucom
jle
push
sarb
push
pop
scas
jle
subb
add
or
sub
jmp
adc
jg
and
iret
cmp
loope
test
push
into
divb
ja
xorl
cmp
repz
jno
push
test
pop
mov
xor
xlat
sub
ss
ja
dec
fwait
aas
push
mov
pusha
repnz
addb
mov
lea
fadds
into
push
divl
fcmove
shll
fstpl
cltd
js
mov
sbb
push
add
mov
nop
sub
mov
jae
add
mov
mov
ret
loop,pn
mov
pushw
aaa
cmc
sbb
inc
inc
push
dec
and
pop
add
lods
xlat
xchg
xchg
ljmp
and
lret
inc
cltd
ficoms
pusha
push
xchg
movsb
mov
scas
cmpsl
lahf
repz
daa
or
add
xchg
or
enter
bound
fcompl
sub
jg
inc
fidivl
lea
push
insb
push
dec
inc
and
adc
xchg
dec
jne
pop
testl
sub
xchg
cltd
and
dec
fwait
pop
nop
daa
add
pop
sbb
pop
inc
pop
cwtl
js
mov
lret
push
pop
sbb
ret
lods
cmc
add
inc
cmc
cmp
fistpll
mov
lds
ret
enter
in
pop
mov
jmp
test
aad
icebp
call
aam
jae
jns
and
lock
imulb
inc
popf
popf
test
int
dec
mov
mov
adc
mov
iret
sub
jle
xor
sbb
jbe
leave
pop
sub
adcl
push
ss
mov
inc
dec
lret
in
pop
xor
js
aaa
inc
jno
push
inc
pop
scas
cmp
cmp
push
inc
mov
fcompl
and
jl
ret
push
push
xchg
test
jecxz
inc
fisubl
xlat
int
adc
mov
push
mov
sub
sub
out
shll
test
rcrl
cmp
rorb
sub
mov
xchg
dec
push
push
movsl
cmpsb
pop
dec
popf
or
or
cld
push
sub
sub
dec
bound
cltd
das
ret
mov
movsl
add
push
ficomps
xlat
cmpsb
mov
ret
or
dec
pop
popa
push
mov
push
xor
jns
lret
loop
sahf
out
or
jno
inc
enterw
xlat
icebp
ljmp
mov
add
mov
call
test
jbe
adc
mov
es
rcrb
ret
sysenter
out
xor
fnsave
cmpsl
inc
repz
inc
mov
pop
adc
ss
loop
lods
cmpsl
pop
push
daa
inc
and
mov
mov
cmc
frstor
pop
jmp
aaa
sbb
out
cmp
xor
sbb
sbb
xchg
push
addb
add
and
adc
lret
hlt
scas
sub
push
push
mulb
enter
call
jmp
adc
ljmp
cmpsb
xorb
cmp
test
pusha
shl
pop
xor
mov
dec
jno
cmc
add
inc
rclb
jae
mov
je
insb
daa
sbb
lds
mov
add
leave
js
or
imul
xor
out
cs
or
pop
fldcw
cmp
sti
jbe
std
add
data16
pop
sub
add
mov
xchg
mov
mov
or
dec
and
iret
mov
xor
loopne
repnz
sub
adc
or
adc
adc
lds
imul
ljmp
bound
cmp
into
pop
fcoml
iret
push
mov
and
push
sbb
sbb
jne
mov
mov
sti
push
adc
jno
icebp
pop
cmp
out
and
jle
repz
imulb
cmp
popa
shl
aam
mov
lcall
mov
sarb
jg
inc
dec
xlat
jmp
jne
jo
pop
enter
cwtl
cld
inc
jp
cmc
imul
mov
imul
nop
jae
add
mov
mov
fstps
std
inc
or
iret
sub
pop
enter
divl
xchg
int
lret
ja
arpl
jmp
push
clc
loope
das
imul
ljmp
addr16
pop
mov
push
cmp
out
scas
lret
dec
out
inc
inc
incl
insl
daa
nop
cmp
pop
aas
inc
mov
push
daa
call
stos
add
adc
xor
inc
mov
cwtl
movsb
jge
imul
mov
test
adc
jnp
push
cwtl
sbb
mov
pop
out
fcmove
cmc
mov
jb
pop
pop
inc
push
nop
cmp
mov
cmc
and
add
cmp
out
scas
stos
xor
inc
movsb
sbb
das
dec
cmc
push
push
pop
xor
lods
shrl
mov
xchg
mov
lret
push
cmc
jl
ss
cmpsb
pop
lcall
insl
or
add
xchg
xor
push
movsl
and
lds
in
adc
add
aad
lds
xor
xor
rcrb
into
cmp
ja
loopne
dec
hlt
pop
push
xor
jns,pt
xor
jmp
outsb
cld
outsl
pushl
lret
cld
das
jmp
out
daa
dec
or
add
push
jmp
test
es
push
fcmovnb
insb
and
les
fsub
jae
out
addr16
sarl
jns
cmp
ljmp
ljmp
adcb
lock
loop
iret
testb
in
mov
stc
lds
sahf
adc
mov
xchg
push
or
fldl
or
inc
mov
dec
sbb
es
inc
out
test
add
push
mov
ret
stc
push
decb
test
shlb
icebp
dec
iret
fdivl
xchg
in
int3
filds
sbb
push
dec
mov
jo
cwtl
pop
lds
xlat
sbb
jo
jmp
jbe
fs
mov
and
nop
and
mov
cld
jnp
mov
pop
out
int
outsb
pop
push
hlt
xor
jmp
fstps
pop
stc
cmp
outsl
imul
ds
jbe
lds
push
fwait
push
ret
xor
aas
dec
mov
inc
aas
push
add
je
rol
cmpsb
or
pop
shll
sbb
lds
pop
pextrw
sbb
and
sub
imul
ss
arpl
add
imul
cmpsl
bound
mov
pop
out
pushl
pop
add
in
jle
fwait
cld
fdivs
mov
cli
mov
pop
fwait
testl
ficoms
int
mov
divb
pop
lcall
mov
cltd
cwtl
xchg
dec
sbb
aad
imul
loope
xor
add
mov
jnp
mov
sbb
push
mov
push
shrl
aam
cmp
ds
filds
fdivrp
mov
or
mov
lods
jge
mov
dec
xchg
lret
xor
jo
addr16
xor
push
sbb
in
pop
lea
xor
push
lcall
lds
lret
push
outsb
cli
shr
les
fisttpll
cmpsb
lea
dec
inc
aas
mov
aam
ja
out
push
ja,pn
sti
mov
adc
sub
sbb
jnp
sbb
jnp
fistpll
mov
call
test
je
jbe
sbb
and
or
cmp
jne
and
mov
into
mov
int
std
idiv
pushf
pop
pop
loopne
subb
outsb
add
adcb
adc
adc
in
dec
mov
sbb
push
xchg
and
stc
shll
push
les
bound
imul
adc
fists
cmp
test
sti
arpl
add
mov
bound
xchg
adc
dec
xchg
and
insb
cs
fwait
pop
mov
mov
and
mov
inc
cwtl
aam
data16
dec
lret
sbb
mov
push
dec
ret
scas
ret
repz
enter
movsl
pop
pop
or
movsl
in
inc
push
mov
pop
sar
outsl
push
push
sbb
cltd
xchg
lret
pop
cmpsl
and
dec
lods
jecxz
mov
push
fdivrl
mov
pusha
lock
mov
cs
int
adc
loope
push
jge
outsl
es
pop
loope
xorl
fs
stc
adc
rcrb
mov
pop
dec
fs
into
pop
jns
dec
inc
cmp
pop
mov
mov
cmpsb
shrb
sbbb
mov
out
or
test
sub
push
jp
push
pusha
pop
adc
lret
stc
cmpb
adc
cmp
test
xchg
hlt
call
je
out
sub
jb
repz
push
mov
push
add
xor
mov
out
int3
lods
xor
leave
aad
outsb
loopne
cld
adc
loope
repz
cwtl
xchg
fcomps
outsl
and
insb
sti
sub
mov
dec
xor
pushf
push
in
fdivp
punpckhdq
xor
repz
je
shll
in
fwait
call
movsb
clc
je
and
sbb
rclb
jo
xor
aaa
int3
testb
cmp
pushl
aad
or
lahf
scas
sub
add
push
mov
sbb
std
stc
lcall
in
xor
and
mov
pop
adc
xchg
and
pop
int
lods
mov
scas
dec
daa
sbb
jbe
mov
push
xchg
push
pop
pop
pop
popf
jbe
sub
das
adc
ljmp
xor
mov
or
cmpsb
std
aas
mov
pop
jb
mov
xchg
bound
mov
scas
mov
adc
pop
sbb
or
xchg
mov
insb
and
fistpll
lahf
add
fwait
aam
sub
xor
js
loopne
fcomps
ret
shrl
xor
xchg
mov
shrl
leave
insl
shr
aas
dec
push
test
sarb
daa
jge,pt
mov
cmpsb
lods
jge
popf
and
imul
aaa
xor
pop
push
cmp
test
push
pop
push
dec
push
cmpsb
add
enter
push
outsb
push
adc
add
sahf
into
jae
xchg
mov
pusha
mov
pop
mov
xorl
mov
rep
xor
jnp
mov
add
pop
cli
mov
adc
adc
fstps
mov
ds
fwait
adc
je
or
das
mov
fisubrs
or
sbb
add
loopne
sahf
xchg
mov
ja
inc
mov
mov
push
adc
mov
jns
lods
ja
test
aaa
lods
pop
sub
mov
imul
pop
cmp
push
dec
ss
rdmsr
inc
xchg
sbb
insb
cmpsl
sbb
mov
jnp
lret
xor
fbld
mov
jg
jmp
jb
popf
cmp
jno
mov
inc
mov
inc
mov
hlt
push
subb
dec
push
ret
cmp
loop
sub
and
cmp
out
xchg
and
sub
mov
adcl
push
cmp
idivl
push
push
jmp
stc
mov
jmp
lods
arpl
jbe
movl
dec
jae
inc
enter
cmp
ror
cmp
xchg
and
clc
pusha
sahf
push
cmp
aam
mov
out
mov
xchg
mov
fwait
in
les
inc
leave
cmp
xlat
push
fwait
xchg
out
sub
sub
std
in
cmp
jmp
jns
sbb
fistpll
cltd
push
inc
out
or
xchg
test
add
shl
adc
cs
push
into
testl
add
xor
mov
and
jnp
rclb
xor
cmc
loope
imul
lods
aas
je
pop
push
mov
sub
mov
jmp
gs
jecxz
arpl
popa
xor
fwait
pop
inc
cltd
mov
das
pop
fcmovu
xor
insl
std
add
scas
fwait
jne
and
loopne
insl
aaa
mov
mov
out
pusha
scas
push
sahf
insl
xchg
fsubs
add
adc
jmp
imul
aaa
add
outsl
sub
in
push
xor
or
call
mov
leave
jp
or
jae
xor
icebp
mov
xlat
xor
mov
xchg
cmp
xor
inc
or
ljmp
adc
out
mov
xor
mov
adc
and
test
mov
das
popa
push
xor
mov
jge
std
mov
loop
ljmp
aad
setne
lcall
popa
int3
pop
or
xlat
jb
outsb
jmp
mov
jo
faddl
mov
dec
inc
mov
ja
lret
mov
inc
add
fs
push
push
fsubr
popf
pushf
inc
sub
inc
int3
xor
lret
aam
rcll
in
jb
cmp
test
and
jnp
lret
cmpsb
stos
push
push
or
loop
ret
cmpsl
imul
pop
add
out
adc
iret
cmp
leave
aaa
fisubl
faddl
das
or
leave
mov
xlat
scas
ss
adc
push
and
imul
xchg
aaa
inc
jne
cmpsl
nop
out
sbb
nop
ljmp
mov
add
dec
je
lahf
lahf
pop
push
aas
outsb
pop
jne,pn
mov
adc
pushf
jle
push
repz
xor
push
cmp
cli
mov
pop
xchg
fnstcw
les
mov
mov
cld
sub
rep
mov
leave
inc
sbbb
push
fldenv
clc
xchg
js
push
rorl
sbb
jmp
sahf
xor
in
rcrl
addl
addb
std
std
xchg
adc
out
cmpsb
mov
hlt
std
push
xor
mov
xchg
push
mov
aam
in
hlt
dec
cld
sbb
mov
cmp
xchg
mov
insb
cli
push
test
inc
sbb
aas
inc
push
mov
jle
mov
inc
out
cmpsl
movsl
loop
push
pop
clc
xchg
lea
lea
lods
xorl
jge
repz
mov
sbb
cmpsb
sahf
in
lods
and
ret
popf
jg
jmp
mov
push
push
rorl
jg
ja
xchg
ds
rcrb
hlt
lcall
inc
pop
sub
cltd
push
cld
sub
divl
into
cmp
test
push
ficoms
lods
jp
mov
inc
hlt
pusha
and
fldl
loopne
mov
mov
pop
mov
jno
pop
cmp
popa
dec
inc
mov
dec
pop
nop
xor
shr
adc
jl
push
outsl
sahf
xor
sbb
mov
lea
jb
test
lret
mov
sub
mov
or
mov
hlt
dec
insb
pushf
xchg
adc
js
divb
pusha
incl
fsubrl
aad
push
fcomp
popf
adc
xchg
xchg
insb
cmp
dec
cld
or
inc
jae
jge
in
ror
stc
scas
scas
imul
xchg
out
xor
push
je
scas
jmp
in
lods
out
mov
clc
add
shll
hlt
adc
imul
mov
sbbb
pop
xchg
sbb
xchg
or
icebp
push
xor
stos
add
popf
and
xchg
into
or
and
xchg
push
lcall
push
cmp
ds
das
jb
xor
jne
push
test
jle
add
cmpsl
xchg
pusha
dec
sbb
les
aas
test
push
loope
imul
jne
shrl
popf
adc
aam
fcmovu
add
or
push
aaa
mov
aam
cmp
iret
aaa
adc
mov
aas
jnp
std
mov
test
xor
mov
inc
mov
testb
mull
fimull
sbb
enter
out
pop
lea
test
push
adcl
xor
iret
leave
pop
xor
sbb
aas
popa
pop
ja
js
aam
inc
mov
repnz
and
fsubr
dec
jecxz
pop
in
test
test
ret
jo
fs
out
movsl
mov
jns
cmpsl
lds
mov
data16
push
dec
popf
mov
stc
and
lds
mov
rcrl
lcall
inc
inc
or
mov
dec
les
push
or
ds
push
scas
cmp
cmp
test
jb
mov
pop
pushf
aas
add
mov
pusha
and
int
mov
lea
dec
daa
pop
push
or
in
imulb
call
dec
dec
sbb
loop
mov
mov
mov
jl
mov
pop
ss
sarb
aam
cmp
cmp
mov
popf
stos
neg
or
pop
scas
mov
mov
lock
sbb
dec
js
rcll
push
adc
and
jns
shlb
xor
test
icebp
int
es
inc
sub
sahf
or
aam
and
xor
jmp
mov
negb
sti
frstor
xchg
mov
mov
inc
xor
les
inc
pop
fdivrl
int
push
sub
mov
jnp
out
js
ficoml
mov
scas
ja
jge
out
mov
pop
pop
aaa
in
adc
lods
push
subb
push
sbb
in
cmp
test
inc
inc
sarb
adc
test
ds
pop
scas
sbb
add
dec
int
jg
mov
bound
mov
gs
dec
mov
xor
and
jg
and
jb
and
pop
cmp
jns
leave
test
fstl
mov
data16
int
test
inc
loope
enter
xchg
sub
pop
xchg
mov
out
mov
xchg
aaa
repnz
push
sbb
nop
xor
pop
pslld
mov
xchg
dec
mov
fisubrl
pop
dec
roll
xor
jge
subb
or
enter
addr16
and
add
les
rcrl
movsb
add
jge
push
int
sub
sub
imul
pop
mov
pop
pop
or
cwtl
in
jbe
into
mov
rcrl
jecxz
cmpb
mov
xlat
dec
fnstenv
aas
call
lea
add
xchg
pusha
repz
stc
pop
hlt
dec
dec
bound
pop
stc
test
jbe
fstpl
in
daa
jge
dec
sub
mov
clc
stc
sub
sbb
cli
jg
stos
xchg
sbb
out
mov
mov
cmp
popa
push
ds
cmpsl
mov
sysexit
mov
scas
dec
mov
pop
pop
pop
and
and
incb
jbe
cmp
pusha
add
movsl
outsl
dec
sbb
adc
xchg
mov
das
mov
mov
or
mov
imul
into
cmpsb
xor
ds
into
cs
xlat
push
daa
jb
cld
sub
arpl
ss
adc
xchg
add
scas
sub
inc
push
and
gs
js
or
jno
fadd
push
push
mull
xchg
jbe
cmp
das
add
cld
fwait
pusha
outsb
xlat
jge
adc
daa
or
and
inc
sub
stos
dec
sub
sbb
popf
dec
out
int
out
loope
into
iret
xor
sub
pop
push
aad
insl
sub
push
mov
jae
inc
hlt
adc
or
sub
mov
jge
leave
hlt
sub
sub
shll
pop
ljmp
dec
pop
aaa
push
xor
cld
sbb
lcall
or
popa
adc
xor
inc
loop
or
cmp
mov
mov
dec
jmp
das
xchg
push
push
mov
or
incb
repnz
cmp
ja
repz
cmc
andb
jb
testb
cmp
jecxz
cmp
std
sbb
mov
push
pop
xchg
nop
stos
arpl
pop
rcll
imul
push
jo
out
aaa
dec
cmp
mov
cmc
xchg
adc
jp
mov
cld
enter
pop
xchg
lods
scas
sub
lds
mov
sbb
push
mov
or
xchg
sub
in
outsl
pop
arpl
fdivrl
leave
inc
cmp
push
scas
enter
xchg
bound
out
lcall
xchg
dec
popf
or
inc
hlt
jo
add
and
ljmp
nop
ljmp
mov
push
push
leave
ss
sub
xchg
mov
fsub
ud2
dec
repz
pop
cli
mov
push
outsb
mov
sti
adc
bound
mov
mov
fdivrs
lret
pop
in
in
fwait
adc
lea
lret
cmpsl
fdivr
and
mov
dec
xchg
js
lock
stc
sbb
ret
out
int
addr16
inc
xchg
popa
int3
mov
push
jp
add
mov
inc
stc
xchg
imul
inc
push
sbb
std
mov
or
xor
dec
dec
stc
sub
mov
xchg
mov
pop
mov
inc
das
add
inc
outsl
jb
js
add
jmp
ja
cmp
jnp
int3
xor
xlat
jmp
mov
sbb
sub
les
cs
lea
sub
cmpsl
xor
in
xorb
movsl
cmpsb
ret
dec
push
add
ja
cld
shl
xchg
movsl
mov
jmp
adcb
jbe
sar
test
je
push
ret
faddl
xchg
or
sbb
stos
mov
out
test
fsubs
inc
jge
and
mov
or
mov
outsb
into
out
xor
mov
mov
xchg
repnz
and
and
cmp
dec
jge
jae
push
lods
pop
sbb
movsb
mov
pusha
mov
pop
fwait
or
cli
dec
outsb
or
or
push
mov
sahf
sarb
xchg
inc
push
clc
push
jl
or
dec
pop
and
fsubrs
pop
ret
loop
mov
sub
sti
push
mov
test
push
xchg
inc
lods
fs
shrl
pop
jle
mov
ljmp
and
inc
sub
pop
ret
addb
adc
test
subl
add
mov
mov
movsl
outsb
xchg
pushf
xchg
js
popa
jp
in
mov
xchg
inc
xchg
xor
dec
in
icebp
inc
inc
mov
dec
fiaddl
cmpsb
jae
je
xchg
mov
mov
mov
inc
and
in
cmc
hlt
mov
lods
jmp
adc
xor
and
jmp
inc
sti
sti
xchg
and
push
into
add
popa
fcomp
fsub
shlb
cwtl
lret
in
mov
icebp
push
fistpll
aad
lret
aam
movsl
xor
sbb
loope
or
xchg
xchg
pop
and
and
adc
and
mov
pop
in
pushf
ds
cmp
mov
push
cld
jecxz
test
cld
pop
sbb
adc
and
into
push
popa
mov
jbe,pn
jl
mov
inc
out
mov
push
fucomip
pop
in
fldt
push
rcrl
mov
and
xchg
mov
test
in
push
mov
out
test
xchg
pop
loopne
mov
std
push
sahf
push
scas
add
lret
jl
sub
or
movsl
imul
imul
jb
aad
push
sub
movsb
out
lods
mov
pusha
sbb
out
and
cmp
flds
and
and
mov
fstpt
push
stc
pop
cwtl
in
jbe
ds
adcb
test
push
mov
lcall
movsl
outsl
pop
lods
xchg
in
dec
test
pop
pushf
jle
scas
lret
mov
jmp
jne
xor
sub
mov
pop
push
mov
push
cmc
aad
push
hlt
mov
call
ret
dec
jne
xchg
mov
insl
sub
rolb
sub
push
xchg
mov
repz
call
mov
jno
mov
add
inc
ljmp
pop
sahf
shll
lret
ficoml
push
push
arpl
je
inc
adc
sub
enter
cwtl
cltd
lock
inc
inc
push
jmp
mov
je
mov
std
cltd
fdivrp
outsb
push
dec
push
popf
lods
mov
inc
or
push
icebp
shrl
cli
or
mov
insb
xchg
int
and
pushf
movsl
jg
adc
int3
stc
dec
and
iret
mov
mov
mov
ficoms
or
subb
dec
adc
mov
cmp
inc
sub
insb
stc
adc
or
sbb
rorl
or
test
fwait
lock
in
sbb
sbb
and
aam
mov
roll
pop
sbb
bswap
mov
loope
and
insl
imul
pop
in
inc
lahf
inc
jb
add
ds
sarl
rcrb
loopne
push
adc
aas
sti
sti
lock
cmpsl
mov
lret
mov
or
rclb
mov
bound
jnp
push
add
or
dec
jl
mov
mov
push
fcoml
add
xchg
cli
push
dec
mov
mov
push
stc
xchg
inc
fldt
sbb
int
movsl
out
fmull
ss
sbb
fwait
cltd
jnp
test
enter
js
push
test
fildll
gs
cwtl
insb
movsb
adcl
daa
test
ret
jae
repnz
xchg
lods
dec
ljmp
lds
inc
sub
xchg
push
outsb
and
adc
sub
mov
adc
data16
neg
fsubp
mov
xchg
rcrb
xchg
pop
push
add
push
ljmp
popa
cli
xchg
jl
push
insb
mov
repnz
adc
test
cli
mov
jbe
xchg
pop
dec
inc
loopne
mov
dec
aas
inc
imul
or
dec
inc
repz
push
sti
das
dec
sbb
std
dec
mov
add
sbb
mov
lock
insb
in
sti
pop
push
xchg
mov
xchg
mov
unpcklps
and
pop
call
out
addr16
and
dec
and
inc
xchg
push
ret
add
leave
dec
lds
mov
pop
pop
aaa
in
addr16
jnp
or
out
and
xchg
mov
pop
popa
lock
and
int3
out
movsb
or
jmp
loopne
aam
je
mov
sub
cld
cmp
push
and
dec
push
fwait
out
movsl
ds
cli
push
sub
sbb
cltd
xchg
inc
xchg
and
ja
popa
jbe
aad
out
stos
fs
push
gs
jle
xchg
fiaddl
popf
es
icebp
jns
mov
xchg
pushf
mov
std
pop
push
xchg
dec
scas
mov
jne
jecxz
mov
xlat
in
inc
sbb
push
push
shlb
cmpsl
leave
fmuls
push
fs
sub
pop
adc
repz
inc
and
fbstp
xorb
dec
sub
lret
mov
cmp
or
push
ss
movsb
loop
inc
mov
sbb
add
cmpsl
data16
mov
fwait
mov
add
and
loopne
inc
add
insl
adc
stc
movsl
das
ficomps
jecxz
add
jno
jecxz
mov
inc
into
sbb
imulb
cmp
push
or
jmp
or
or
int3
jno
sti
add
xlat
adc
shlb
jg
jne
xchg
or
gs
fdiv
adc
fildll
shr
sub
cmc
mov
or
movsl
sub
sarl
cmp
ds
lock
out
bound
sti
jmp
xchg
adc
dec
leave
inc
ljmpw
add
push
rcll
adc
jno
insl
or
push
aam
mov
and
sbb
xchg
pop
mov
pop
add
scas
sbb
pop
sub
stc
lret
push
int3
test
mov
pop
scas
ljmp
std
ljmp
cld
mov
enter
cmp
dec
lret
adc
lods
ss
xor
xor
enter
inc
or
or
push
insl
addr16
mov
mov
or
jge
arpl
fmuls
add
aas
cmpb
add
repnz
popa
fstps
pop
das
sbb
mov
push
xor
aas
rcll
mov
inc
or
xchg
outsb
inc
out
fs
xchg
cmc
sub
mov
sub
int
cltd
adc
dec
mov
mov
jmp
test
mov
and
xchg
push
push
push
in
popf
mov
sti
les
arpl
and
shrb
cmp
add
xor
pop
lds
test
add
lret
fisubrl
aad
pop
pusha
daa
loop
fs
cmc
bound
or
enter
sbb
add
dec
xchg
pop
repz
out
notl
or
push
movsl
mov
icebp
dec
sbb
jns
pop
repz
push
cmpsb
push
mov
sub
pop
subb
mov
insb
sub
mov
xchg
pop
mov
std
sub
and
orb
ficoms
jecxz
push
jle
jp
pusha
and
mov
or
pop
jns
push
sub
les
ret
mov
insl
mov
dec
imul
sbb
and
adc
mov
adc
adc
push
notl
inc
pop
push
fcoms
xchg
in
das
mov
xchg
pop
repz
sbbl
fimull
push
repnz
loope
test
icebp
add
pop
inc
stc
mov
lret
fildl
add
push
mov
add
xor
adc
jne
dec
dec
xlat
ja
adc
out
std
and
sub
sbb
ljmp
sti
cwtl
push
das
jbe
inc
jl
in
fdivrl
es
sarb
rep
jge
xlat
cmp
ljmp
out
aaa
aad
xchg
inc
in
push
outsl
jle
clc
clc
sub
xor
out
rol
lods
adc
inc
test
jp
test
sbb
mov
jmp
ret
pusha
push
fists
sub
fwait
inc
xchg
stc
rorl
mov
mov
jle
mov
pop
xor
cmc
fsubl
mov
lods
cs
pop
popf
sub
adc
enter
sbb
lods
xor
cmpl
xchg
add
cmp
or
sbb
std
lea
fistpll
aaa
mov
inc
in
xlat
add
cld
cwtl
loop
inc
adc
xchg
inc
dec
or
lret
jle
rclb
xor
sarb
test
add
ss
cmpsb
jb
xchg
inc
and
sbb
mov
inc
stc
clc
push
mov
inc
xor
jle
mov
xor
in
insb
mov
out
subb
jns
ljmp
push
sbb
fldln2
ret
pop
adcb
mov
or
test
shl
rolb
punpckhwd
cmp
pop
es
pop
es
movsl
add
mov
pop
sbb
mov
mov
je
dec
popa
mov
repz
jns
sbb
int3
out
sbb
scas
sbb
fwait
je
cmp
push
mov
or
js
in
lods
outsl
in
iret
or
pop
mov
xchg
inc
lods
lods
mov
in
or
repz
pop
js
movsb
stos
mov
cs
add
or
sbb
pop
adc
repnz
imul
lret
icebp
ja
popa
shlb
subl
or
adc
lds
std
aam
push
jns
push
adc
and
int
in
sub
push
out
mov
call
push
repnz
push
movsb
outsb
in
outsl
cmp
inc
lret
cs
sbb
int
push
movsl
cmp
sbb
add
out
lds
xor
cld
push
in
sbb
jno
iret
ljmp
pop
mov
loope
jmp
xchg
ror
mov
pop
aam
mov
mov
fisubs
in
cmp
pop
jmp
ds
aaa
push
dec
xchg
out
jmp
test
mov
jmp
mov
push
imul
xchg
sbb
inc
or
inc
sbb
mov
and
ffreep
mov
jl
push
arpl
mov
xor
outsb
xchg
icebp
and
je
test
jecxz
aas
pop
xchg
shrl
scas
jno
cmpsl
mov
push
sbb
adc
fnstcw
pop
inc
sbb
test
shrb
fsubl
rclb
cmp
jns
loopne
outsl
imul
test
mov
push
test
sub
xlat
das
lahf
push
test
fdivr
mov
jns
sbb
add
test
aaa
jae
xor
imul
stos
sbb
pop
lcall
xchg
and
sub
dec
sub
mov
faddp
push
inc
fnstcw
xchg
jl
push
pop
popf
push
push
lods
mov
mov
and
push
xor
dec
push
sbb
imul
fldpi
les
cltd
aad
pop
repz
push
pop
push
or
movl
pop
xchg
add
pop
cmp
push
xchg
in
xor
je
mov
std
mov
adc
bound
sub
ljmp
idivb
inc
add
sub
sbb
mov
pop
fwait
push
insl
imul
dec
pusha
dec
mov
int
pusha
sbbl
pop
out
mov
int
xchg
pop
lods
sbb
test
imul
cwtl
scas
bsf
bound
jp
push
push
mov
int
xor
cmp
xor
iret
mov
notl
sbb
and
mov
sub
sbb
sub
inc
bound
jne
daa
xor
xor
movsl
add
push
xlat
inc
mov
int
sbbl
jp
fldcw
adc
dec
jbe
mov
pop
repz
cmc
adc
mov
and
shr
xchg
roll
vprotb
or
sbb
jmp
pop
jns
push
adc
data16
enter
xchg
mov
inc
adc
scas
cs
test
outsl
pmaxub
jne
pusha
pusha
out
fisubl
adc
mov
xor
sbb
mov
add
mov
lods
or
in
xor
push
xor
sbb
push
insl
adc
aad
js
or
mov
call
push
or
inc
loopne
sti
and
sbb
in
add
call
dec
jl
cmp
les
scas
repnz
pop
and
cli
jg
xchg
ja
in
jno
mov
mov
sbb
push
daa
fstpt
fcmovne
in
push
stos
outsb
mov
fwait
and
stos
push
adc
jmp
push
test
ficoml
lcall
mov
or
out
dec
push
xor
pop
adc
push
jmp
pushf
mov
adc
push
and
sbb
fs
jne
imul
fsubr
mov
sub
filds
add
loop
mov
push
sub
mov
pop
int3
out
add
mov
add
sbb
pop
divb
adc
js
xchg
aad
add
outsl
movswl
xorl
xor
sbb
rorb
push
mov
push
icebp
inc
jnp
das
repnz
xchg
cmpsb
cmpsb
add
arpl
out
ljmp
xor
das
push
rcll
jns
pop
jmp
jecxz
lahf
mov
pop
sar
movsb
loop
sub
cmp
fs
lock
mov
xor
jns
dec
cmp
in
jle
mov
or
adc
xchg
cmovno
add
xchg
stc
mov
lahf
xor
or
cli
loopne
test
pop
or
and
push
aaa
mov
sub
xchg
in
daa
dec
xchg
mov
jo
push
imull
data16
sbb
rcrl
aaa
push
out
into
leave
sub
mov
sub
sbb
test
mov
sbb
add
movl
jmp
ja
inc
sub
cli
push
flds
cmc
cmc
mov
pusha
xchg
nop
pop
mov
mov
shlb
cmp
call
jne
fcomp
jl
sahf
shl
es
sbb
scas
sahf
xchg
mov
sbb
sub
push
je
push
or
out
sub
mov
xchg
mov
lods
stos
aad
or
mov
nop
lea
or
cld
in
jmp
out
push
mov
cli
je
scas
jg
adc
lret
out
pop
cwtl
pop
fwait
xchg
clc
movsl
div
dec
push
adc
xchg
insb
cwtl
andl
scas
dec
fdivrp
pop
iret
divl
int3
sub
enter
fsts
in
mov
pop
rol
or
push
aad
lahf
ret
lea
leave
and
push
pop
lods
jns
jbe
scas
jmp
bound
int
mov
call
test
rclb
xor
mov
xor
fwait
jnp
add
scas
xor
mov
mov
inc
pusha
ret
push
mov
inc
xor
pop
sbb
aas
test
add
aaa
sub
xor
mov
fmul
sub
mov
dec
fidivl
adc
arpl
mulb
adc
sbb
pop
fldt
arpl
pop
inc
test
ljmp
jnp
cmpsl
aad
stos
cli
pusha
sub
nop
jns
in
mov
mov
push
inc
aad
frstor
pusha
mov
lea
lret
int3
test
push
jo
cmp
in
xlat
add
stc
fisttps
adc
out
shlb
push
out
mov
add
arpl
lahf
xchg
ret
repnz
vshufps
inc
push
jecxz
leave
cmp
mov
out
add
fldl
das
fldenv
sub
clc
push
sub
jno
push
xchg
mov
ljmp
loopne
ret
dec
ret
stos
out
dec
xchg
adc
jbe
adc
gs
mov
aaa
mov
stc
dec
mov
sub
or
mov
ds
aad
sub
leave
inc
icebp
insb
je
and
repnz
lods
ror
lret
fcompl
imul
add
and
decl
gs
ds
stc
xchg
dec
fdivrs
or
cltd
mul
mov
mov
lods
scas
adc
clc
int3
fwait
jno
push
shrl
mov
out
or
shlb
sub
sbb
outsb
inc
lock
jae
sti
or
and
pushf
mov
pop
idivl
mov
mov
mov
sbb
and
cltd
clc
and
sub
add
in
and
add
adc
and
cmp
icebp
mov
lretw
rcrb
insb
pop
mov
fisubs
pop
out
xor
movb
dec
fadds
fldt
aaa
clc
mov
add
and
loop
mov
scas
sahf
mov
xlat
repnz
cmpsl
adc
sub
ss
int
lahf
add
jle
dec
sub
mov
call
jle
imul
and
mov
pop
mov
add
push
test
or
ret
stos
bound
jo
sub
divl
sub
sahf
cmc
inc
sti
pop
mov
xor
xor
int
in
daa
sub
xchg
sbb
scas
and
sbb
mov
push
or
sbb
add
shlb
fidivrl
mov
js
xchg
xor
xlat
lret
mov
leave
xlat
xchg
add
jg
push
xchg
dec
mov
dec
ss
in
lcall
dec
shrb
mov
mov
nop
xchg
test
roll
or
test
add
outsl
mov
mov
xor
dec
dec
pop
call
mov
adc
fldl
mov
cmp
iret
add
jle
xor
inc
inc
mov
daa
fisubs
addr16
out
es
adc
xchg
sbb
gs
test
jmp
jmp
xor
inc
repz
in
imul
jne
push
mov
fimull
cli
mov
scas
std
addb
out
mov
push
sahf
adc
addl
rcl
popf
and
push
mov
mov
jbe
pop
jb
aas
push
mov
js
push
fbld
mov
mov
cmpl
dec
push
lea
idivl
daa
movsl
jmp
cli
mov
int3
out
push
arpl
mov
out
sbb
pop
div
xorb
popa
push
ds
mov
or
mov
push
ja
xchg
mov
jle
inc
cmp
stos
lret
cld
sbb
clc
cmc
mov
idivl
in
pop
dec
sbb
pop
sarb
inc
or
pop
push
iret
mov
roll
sbb
push
psubw
shl
xchg
icebp
cwtl
mov
mov
insl
adc
inc
cwtl
ds
imul
jl
mov
in
jp
jge
mov
pusha
mov
and
or
ljmp
stos
bound
adc
faddp
adcl
lahf
gs
lock
xor
jnp
in
mov
push
adc
rolb
nop
shrl
stos
jb
mov
cmpsl
mov
inc
cmpsl
adc
inc
shrb
sub
test
jmp
push
stc
and
inc
lahf
mov
lods
in
rcrl
nop
pushf
mov
mov
pop
mov
adc
xor
inc
popf
xlat
call
pop
push
jmp
push
rorb
lar
push
push
mov
xchg
pop
aas
xor
js
int3
or
sahf
lock
sbb
cld
cwtl
jle
aam
loop
lret
out
add
xchg
mov
fisttpll
xor
stos
aas
add
push
cmp
jge
mov
out
cs
fcompl
out
movsl
or
jg
adc
cmc
sub
test
fisubrl
nop
sub
je
mov
repz
ljmp
ja
sar
lds
add
inc
xchg
aam
fsubl
cmp
scas
or
lret
mov
neg
jecxz
popf
repz
dec
xchg
push
ret
idiv
sub
mov
mov
sub
push
fwait
or
ret
std
loope
cmp
data16
push
or
cltd
inc
sub
arpl
push
adc
test
cmp
test
jp
out
das
rolb
adc
divb
or
mov
and
das
out
cmp
cld
xchg
out
xchg
fsts
mov
dec
jbe
pop
cltd
or
sbb
int
and
add
and
xchg
cmp
or
adc
sbb
into
out
adc
loope
imul
dec
bound
mov
and
cmp
ljmp
and
nop
or
pop
xchg
push
mov
lret
div
pop
cld
xchg
call
or
popa
pop
in
jmp
xor
leave
inc
jo
xchg
popf
jge
in
ret
jle
orl
clc
out
xor
and
repz
xchg
stc
popa
js
shlb
pop
aas
sbb
cmp
jp
pop
es
push
jbe
aam
shrb
jne
pop
rcl
xor
inc
icebp
in
repz
fwait
rorl
and
out
les
bound
lods
cld
and
jo
fiaddl
jp
movsb
movsl
std
leave
leave
push
xchg
dec
xor
repz
sbb
in
out
fstps
in
cs
icebp
in
repnz
xchg
cltd
mov
mov
mov
popa
xor
mov
lock
xor
aad
adc
sbb
xlat
dec
pop
mov
inc
cltd
call
fcoms
outsb
out
das
pop
sub
xchg
ja
lds
es
dec
rorl
adc
repnz
daa
scas
ljmp
pop
test
xor
push
cld
mov
push
mov
sub
nop
jmp
mov
out
cmc
test
cmp
add
mov
les
lahf
cmpsl
mov
fldt
xchg
mov
psrad
xchg
pop
pop
pop
or
mov
call
clc
iret
into
xchg
mov
imul
mov
leave
inc
push
jle
mov
imul
xor
sbb
or
inc
fsubrl
pop
dec
cmp
xchg
inc
gs
lret
inc
cmp
pop
aaa
ret
ret
insb
lock
movb
push
outsl
dec
push
pop
cs
outsl
in
fs
ret
inc
sub
add
jae
mov
leave
arpl
ds
fistl
and
popf
xchg
push
aam
lcall
and
lret
in
stos
scas
pop
sbb
mov
fsubrl
or
mov
and
packssdw
addr16
fsubrs
mov
hlt
cmp
xor
or
aam
cld
fsubrs
adcl
adc
inc
aaa
les
mov
jg
mov
cmp
push
jg
jb
loope
xchg
xor
mov
lods
jb
std
push
arpl
stos
call
js
cmp
icebp
mov
icebp
aaa
xor
sub
xchg
pop
stos
cmp
dec
sub
outsb
decl
stc
push
out
xchg
jle
test
fistl
ds
push
pop
scas
xchg
xchg
fimull
shl
loopne
adc
mov
inc
mov
inc
icebp
lea
xchg
insb
dec
mov
sub
sbb
rcr
or
xor
jmp
int
add
push
popf
pop
xchg
std
lods
dec
imul
imul
sbbl
mov
mov
popl
jno
aas
xor
lock
fstpt
sbb
xor
and
xchg
cmp
cld
fldenv
imul
loop
out
jle
dec
adc
mov
out
mov
les
imul
mov
sub
adc
jg
gs
mov
out
pop
mov
pop
shrb
sub
jnp
mov
movsl
into
or
in
daa
fs
jo
int3
out
xchg
adc
xor
test
sbb
mov
pusha
lcall
leave
repz
fldt
int
adc
mov
pop
mov
divl
inc
in
jl
pop
pusha
or
fidivl
jle
fisttpl
pop
sti
pop
aam
mov
dec
push
shlb
jns
insl
inc
std
and
pop
fadd
insl
lret
or
loopne
das
xchg
inc
adc
dec
stos
pop
or
mov
cmpsb
xchg
mov
call
sub
add
andb
adc
and
fs
cmp
fmul
mov
into
sub
or
addr16
xlat
mov
mov
pop
add
popf
int3
jle
dec
aad
pushf
xchg
or
arpl
sub
loope
mov
inc
or
jae
fcomi
lahf
adc
data16
shr
daa
lret
mov
jo,pt
mov
push
stos
cmp
enter
in
ret
sarb
cmp
cmc
ds
mov
and
mov
enter
push
inc
mov
cmp
pop
cltd
lret
fcoms
sahf
ds
scas
ss
pushf
jecxz
sub
fldt
movsl
push
aad
fists
loopne
mov
adc
sub
les
jmp
jge
push
inc
mov
cmp
cmc
pop
es
xchg
test
push
scas
out
lods
xor
push
or
pop
ret
mov
xor
pushf
sub
int
imul
cmp
dec
jns
mov
adc
jmp
mov
stos
incb
lea
scas
dec
xchg
mov
xchg
int
xchg
iret
or
test
fsubs
push
push
dec
push
add
mov
fadds
bound
dec
icebp
fisubs
js
mov
mov
adc
or
daa
shrl
into
in
sub
fucomi
cli
mov
mov
or
pusha
pop
dec
jmp
stos
push
xchg
add
ficomps
sub
pop
icebp
mov
or
or
fadds
bound
lds
sbb
cmpsl
adc
addr16
les
rclb
cld
mov
movsb
les
in
jecxz
test
lahf
inc
xchg
xor
pop
sub
mov
cmp
cmc
shrl
jae
popa
pop
cmp
ret
mov
popf
subb
cmp
dec
sub
cmp
mov
bound
xchg
loopne
pop
push
adc
jp
nop
sbb
jae
xor
fcompl
out
add
cmp
add
int
inc
cmp
lods
mov
sbb
pop
in
out
mov
adc
pop
inc
sahf
mov
pop
sbb
sti
mov
repnz
fiadds
popf
push
hlt
push
or
cmp
lcall
or
mov
dec
push
popa
int3
mov
dec
adc
and
pop
mov
cli
jno,pt
lods
xor
jae
hlt
gs
sbb
pop
jecxz
sbbl
ss
xchg
jmp
cld
or
lods
repz
xlat
ss
je
int
int3
and
cmp
mov
push
push
loop
cwtl
adc
pop
mov
gs
inc
subl
data16
push
mov
xlat
inc
xchg
push
bsf
jle
xchg
ljmp
in
pop
add
ret
cmpsl
leave
sbb
lahf
ret
sub
inc
fists
ja
push
lds
popa
daa
shrb
xorb
xchg
pop
adc
addr16
push
jmp
mov
mull
push
icebp
mov
orl
jnp
push
or
inc
repz
push
je
das
mov
mov
jle
add
xchg
xlat
jle
inc
aam
or
daa
imul
or
es
mov
adc
pop
adc
data16
in
pop
arpl
mov
loopne
fstl
aam
adc
add
out
pusha
mov
loope
aad
daa
jmp
adc
out
xor
sub
or
inc
mov
or
cmp
push
rcll
mov
outsl
cmp
lds
dec
das
repnz
aam
add
xor
sbb
inc
repz
fsubrs
int3
mov
call
jg
xor
inc
add
mov
outsl
mulb
xchg
jnp
push
stos
xor
loope
sbb
xlat
sbb
sbb
pop
popa
cld
les
es
into
adcb
pop
fiadds
aad
data16
lock
rcr
jnp
add
fldt
in
mov
adc
mov
pop
inc
imul
mov
stos
daa
and
orl
push
icebp
mov
jo
int
mov
movsb
mov
inc
mov
cmpsb
add
xchg
mulb
mov
mov
mov
push
jo
dec
fbstp
pop
jb
pop
pusha
inc
inc
lcall
fs
mov
mov
int3
mov
shlb
adcb
mov
mov
mov
xor
cmpsb
sarb
outsb
and
mov
cmpsl
scas
mov
jns
push
cld
mov
jb
lahf
jmp
add
jbe
stc
mov
nop
pushf
lea
push
and
pop
mov
aas
and
pop
rolb
loopne
jp
mov
insb
cmp
nop
jns
jmp
inc
addb
test
les
dec
call
push
std
jg
xchg
xchg
sarb
push
js
test
sub
jae
xchg
int
aas
xchg
inc
pop
js
orb
ja
mov
popa
mov
xchg
cmp
dec
cmpsb
stos
add
or
mov
mov
dec
mov
jmp
andb
mov
inc
jns
lcall
fisubrl
pop
mov
and
xor
mov
push
xchg
mov
jae
or
pushf
add
cmpsb
mov
mov
jge
sbb
jl
add
mov
imul
fucomip
mov
test
out
imul
hlt
cmc
dec
imul
loope
mov
psllq
fs
or
popf
sti
outsb
mov
xchg
arpl
add
jp
insl
and
lcall
scas
adc
push
roll
adc
ja
cmpb
outsl
shlb
sbb
add
pop
in
jbe
in
mov
dec
sti
jge
dec
fistpl
jp
mov
add
xchg
cmp
sub
je
ret
jno
xor
jg
jb
sbb
push
notl
or
dec
push
aas
popa
add
pop
and
aam
sbb
mov
mov
dec
and
and
push
mov
imul
mov
dec
rcl
inc
push
popf
xlat
aas
fiadds
rcr
fst
push
push
push
mov
xchg
enter
movsb
imul
movsb
fisttps
sbb
cmp
insl
mov
pop
or
or
mov
es
dec
pop
test
sub
and
mov
xor
xchg
clc
pop
scas
ds
mov
mov
jb
mov
into
ret
iret
mov
mov
mov
and
pop
dec
rclb
mov
sbb
sub
es
pushf
push
mov
enter
rcll
mov
cmpsl
xchg
mov
stc
dec
orb
add
fldln2
and
movsl
push
mov
test
enter
mov
and
sub
lcall
bnd
or
push
iret
sbb
mov
xor
mov
aas
in
sahf
jbe
dec
cli
in
jle
rolb
mov
insb
cs
dec
test
sbb
dec
pop
and
push
mov
loope
cld
xor
and
dec
testb
out
and
neg
enter
mov
xor
dec
and
add
pop
stos
xor
sbbl
or
insl
fdivl
xlat
div
inc
mov
fsts
pop
dec
std
fs
scas
mov
in
xchg
adc
movsb
cmpsb
lret
loop
adc
sbb
xchg
dec
test
xor
jecxz
out
ljmp
test
cmp
icebp
bound
shl
xchg
lret
xchg
mov
xchg
rolb
xor
adc
pushf
pop
es
ficoml
cmp
dec
xor
cmpl
cmp
adc
xor
adc
leave
dec
fidivrs
sub
dec
sahf
adc
cmp
jne
inc
cli
mov
jl
push
push
lcall
in
ret
inc
shll
cmp
mov
mov
pop
leave
in
aam
leave
test
mov
repnz
hlt
fimuls
mov
fadd
ds
and
pop
cmp
mov
xor
jno
jmp
into
jle
mov
inc
sbb
out
dec
iret
cmpsl
cmp
mov
stc
mov
shrb
scas
xor
rorl
jb
les
mov
push
xor
ficompl
sub
jnp
lea
dec
imul
sbb
or
or
decl
nop
push
call
fstl
sub
stc
cmp
mov
jb
xchg
mov
dec
mov
xchg
inc
add
lret
mov
sahf
rorb
repnz
jecxz
mov
imul
fwait
inc
fstp
stos
imul
scas
and
cwtl
or
ss
lea
stos
mov
aam
rcrl
aam
and
out
xchg
pop
mov
sbb
mov
lods
mov
jmp
shrl
pop
test
cld
imul
pop
lcall
jns
insb
jl
cmc
out
clc
adc
add
jecxz
shrb
xchg
imul
sbb
ljmp
jns
mov
shlb
dec
movsb
imul
push
addb
aaa
test
ss
loop
inc
test
cmp
and
pop
sub
pop
loopne
mov
leave
cltd
test
mov
push
pop
std
addb
shrl
xchg
enter
loopne
ss
mov
js
push
lar
inc
mov
jp,pn
jl
xorb
insb
sub
pop
pusha
or
xchg
xchg
xor
add
mov
lahf
in
push
cli
inc
stos
and
andb
adc
xor
testl
xchg
call
lret
adc
inc
ds
sub
jbe
dec
scas
cmc
adc
mov
loopne
inc
fmulp
or
pop
lret
xsha1
cmpsb
lea
inc
jno
xchg
sbb
sub
push
mov
out
inc
insl
iret
js
sub
xchg
mov
loop
vrcpss
lods
inc
mov
xchg
xchg
in
or
std
imulb
or
data16
shlb
ljmp
jbe
jl
mov
or
scas
push
shl
jle
out
jnp
nop
imul
insl
push
divb
add
out
sub
xchg
addr16
sub
adc
ficoml
mov
cmpsl
ljmp
jp
imul
shll
add
nop
mov
mov
mov
jmp
push
and
je
jno
fwait
iret
sub
test
mov
sub
popf
mov
mov
or
aad
cmp
roll
pop
pushf
jno
fwait
in
mov
out
cmp
adc
adc
negb
lahf
ja
inc
out
or
pop
adc
jnp
push
leave
daa
sti
nop
mov
imul
repz
scas
cli
pop
or
jbe
push
or
sbb
out
pop
in
sub
add
mov
ret
les
lea
lea
lods
std
lahf
dec
xor
cli
out
mov
jmp
in
je
repnz
icebp
jmp
arpl
pop
sub
and
insl
les
push
out
inc
xchg
lds
dec
std
testb
je
jbe
jl
cmpsb
out
jp,pn
adcl
sbb
push
add
lahf
rolb
add
mov
sti
mov
push
das
cmp
jl
mov
mov
call
xor
movb
cltd
xchg
cmp
pop
mov
shl
mov
push
or
lds
lahf
cmp
repz
aaa
mov
leave
push
dec
fistps
int
mov
push
dec
inc
add
cmp
and
pop
xchg
cli
cmpsl
cld
mov
inc
and
mov
sub
call
mov
xchg
mov
out
outsb
dec
push
je
mov
cwtl
mov
mov
mov
mov
lret
out
pop
test
in
pop
jmp
addl
sub
mov
xchg
jle
lret
sub
leave
or
insb
cmpsb
mov
dec
jp
cmp
cmp
je
out
jbe
roll
out
insl
push
jae
shl
gs
push
addr16
arpl
pop
das
ss
icebp
repz
fmull
adc
mov
scas
in
in
cmp
jp
adc
xchg
lret
jae
or
mov
scas
or
sbb
nop
mov
subl
xor
cmpsb
inc
andl
inc
mov
dec
jp
add
aaa
mov
cmovs
repnz
inc
pop
jno
and
fisttpll
xchg
adc
dec
ret
adc
fs
lahf
in
or
sbb
cmp
popf
fisttpl
in
lcall
ljmp
data16
mov
fstpt
cltd
dec
cmp
out
outsb
aam
sub
jle
cmpsl
xchg
mov
sbb
ja
adc
je
xor
bound
sub
mov
xchg
sbb
arpl
int
mov
les
stos
or
adc
cmpsl
add
popa
mov
jo
cld
push
cltd
pop
stc
faddl
push
dec
lds
xchg
movsl
arpl
cmp
lods
pop
ret
pop
inc
icebp
push
push
mov
nop
in
pop
fisubl
xor
xor
or
jp
sub
mov
mov
inc
xchg
insb
jle
dec
xlat
sbb
cmpsb
inc
in
lock
dec
add
sbb
mov
test
add
mov
or
push
fstpl
xor
mov
adc
jge
sub
mov
aaa
arpl
ret
cwtl
gs
cmp
and
or
outsb
push
push
mov
rolb
in
fcomps
out
sti
mov
outsl
in
pushf
out
pop
mov
test
mov
int
dec
dec
je
std
in
and
adc
addr16
adc
mov
xor
lds
out
daa
mov
in
sbb
push
ret
push
mov
test
or
sub
ja
pop
dec
and
ret
jb
lds
aaa
fcoms
rcrl
ficompl
mov
jmp
dec
and
lods
cmc
ret
lods
cld
ret
mov
fs
push
sub
and
fdivl
add
bswap
or
mov
je
push
fimuls
dec
mulb
inc
dec
lods
adc
mov
jae
mov
jne
loop
fildl
xor
insl
sub
and
fwait
push
jae
sub
inc
je
jo
xchg
out
xchg
bound
add
test
jb
xchg
cmpsb
out
push
jne
jo
enter
xor
pop
shrb
iret
push
lret
adc
aas
push
mov
imul
das
imull
imul
mov
in
imul
xchg
js
xchg
das
push
rorl
sbb
insl
sbb
test
mov
push
mov
mov
pop
and
lcall
lret
insl
popa
out
jmp
packsswb
add
fimull
add
test
mov
lods
mov
dec
fdivrs
adc
push
mov
repnz
or
out
ret
stos
sub
pop
rcll
into
xchg
push
inc
roll
push
and
and
repz
sbb
je
ror
xchg
test
xor
data16
aad
daa
shlb
pop
repz
dec
jns
add
aas
ja
mov
psubb
gs
in
fwait
mov
pop
into
mov
fdivrl
loope
inc
jp
jg
push
xchg
loope
pop
scas
push
xchg
cmc
jmp
into
sub
mov
adc
jl
insl
push
insb
dec
movl
mov
inc
xchg
scas
cwtl
lods
sub
lock
mov
inc
xchg
dec
push
mov
daa
clc
test
sbb
lret
xchg
xor
jno
jmp
push
jge
push
pop
in
mov
mov
and
cs
insb
hlt
mov
jg
sub
clc
xchg
dec
hlt
lret
mov
enter
xchg
scas
or
jne
loopne
lods
adc
pop
add
adc
xchg
jmp
into
mov
aas
push
loope
push
jp
xchg
iret
lods
movq
stos
adc
sahf
lcall
jne
lea
adc
cmp
cmp
and
jmp
cs
gs
jp
stos
jne
add
push
lds
sbb
outsb
inc
mov
insb
mov
jns
pop
sub
mov
mov
fmull
call
cld
dec
cmp
adc
outsb
pop
mov
push
sub
loopne
add
cmpsl
hlt
icebp
movb
imul
lret
shlb
sbb
mov
dec
aad
cmpsb
xlat
out
push
fistps
sub
dec
inc
cmp
lret
mov
out
fisttpll
popf
add
leave
sar
movsl
and
jmp
sbb
aam
aad
mov
out
in
imul
shlb
jmp
fdivr
mov
daa
cwtl
push
push
cmpsl
nop
and
data16
scas
rcl
and
gs
rol
jae
xor
xchg
lds
dec
sti
notb
les
ret
and
mov
add
mov
imul
subb
inc
mov
sbb
shrl
ss
popf
scas
test
and
sbb
xchg
inc
mov
cld
mov
push
in
jge
or
das
add
and
mulb
xchg
shrb
pushw
pop
jl
insl
sub
leave
xor
dec
bound
loop
push
cmpsl
push
push
js
mov
mov
popl
and
das
jns
cmp
ja
add
add
fsub
mov
int
xchg
jb
xor
sbb
push
rcrl
xchg
popf
push
sbb
xchg
adc
fnstcw
loop
out
scas
push
xor
sbb
aad
mov
fwait
or
imul
mov
mov
sbb
shlb
mov
hlt
in
inc
cmpb
lahf
or
test
test
jmp
pop
lea
sub
enter
adc
jg
loope
or
sub
pop
enter
xchg
mov
or
stc
push
sahf
scas
jno
divb
sub
loopne
dec
cmpsl
aad
mov
jns
pop
mov
mov
and
mov
push
push
adcl
stos
adc
add
push
mov
jno
add
aam
sbb
fwait
sbb
xlat
or
push
stos
mov
inc
mov
inc
sub
sub
xchg
mov
imul
insl
iret
sahf
daa
out
int
cltd
ljmp
out
sub
clc
adc
push
xor
mov
lret
fwait
test
insl
xchg
pop
sub
pop
into
push
std
popf
bound
dec
cmp
roll
aaa
insb
inc
jl
andb
mov
mov
xor
imul
adc
jns
popa
dec
dec
lods
push
repnz
insl
push
xchg
popf
aaa
pop
cmpl
fucomi
jecxz
xchg
xchg
xchg
insl
mov
sbb
sbb
mov
sub
push
adc
push
popa
hlt
into
dec
rorl
in
adcb
sti
sahf
scas
out
lods
movsl
adc
jno
sahf
cmpb
cmp
or
jno
add
inc
cs
repnz
rep
sbb
aam
inc
inc
pop
lds
insb
xchg
cmp
in
jg
mov
adc
jno
and
jecxz
daa
int3
xor
mov
push
push
mov
pushf
pop
into
stos
pop
xorb
or
popa
sub
jl
clc
dec
add
xchg
insb
insb
jmp
les
cltd
dec
push
mov
push
loope
sub
inc
lcall
incb
pop
or
js
inc
out
and
jle
cmp
repnz
neg
daa
popf
mov
sbb
sbb
bound
incb
cmp
inc
or
outsl
or
add
sbb
xchg
jecxz
pusha
mov
xchg
rol
stc
cmp
fisubs
dec
sub
popf
mov
xchg
in
add
aam
cmc
leave
in
pop
cmp
test
cmpl
repnz
jnp
and
jmp
out
outsb
mov
arpl
xchg
sbb
mov
sbb
insb
shlb
mov
cld
jns
pop
and
pop
jb
push
test
pop
lret
push
lcall
push
and
sub
jb
jbe
mov
inc
jg
sub
mov
xchg
pop
je
loop
ss
jnp
dec
xchg
lock
imul
sub
addr16
les
ss
pop
aam
push
sbb
sbb
cltd
movsb
loop
xor
stc
sbb
sub
add
orl
call
mov
jno
test
pushf
out
lds
xorb
or
pop
aam
push
adcl
adc
push
out
sub
lret
les
daa
insl
inc
dec
mov
leave
dec
icebp
scas
aas
leave
inc
arpl
pop
stos
test
mov
out
and
clc
jge
shll
pop
push
xchg
mov
sbb
shl
push
sub
out
mov
jecxz
adc
mov
jmp
cmc
sbb
test
pop
mov
sti
shlb
les
xchg
xchg
fdivs
std
lock
fs
test
adc
jb
mov
inc
sahf
sbb
cmp
add
mov
out
and
ret
push
int3
dec
pop
sub
dec
sub
jmp
add
and
test
idivb
add
cs
shrb
pop
out
mov
xlat
sti
push
cltd
dec
in
mov
mov
mov
test
int3
dec
xchg
enter
xor
adc
imul
in
cmp
xchg
mov
out
in
add
pop
mov
pop
xor
jmp
or
push
repnz
mov
sbb
mov
ljmp
cli
mov
lret
mov
inc
sub
ss
xchg
clc
cwtl
stos
lret
ret
mov
stc
or
ljmp
lock
cmp
xchg
push
adc
rcll
leave
dec
mov
cmc
mov
mov
jp
push
and
test
xchg
addr16
pop
push
mov
push
rcll
cltd
sub
js
out
clc
test
xor
mov
addr16
dec
mov
add
pop
ss
sbb
popa
out
inc
or
stos
push
mov
xchg
sub
lahf
in
pop
pop
add
outsl
xor
cmpsl
xchg
mov
imul
mov
xor
cld
fcmovb
fildl
mov
movsl
sbb
add
pop
inc
mov
shll
adc
jae
sub
pushf
fcoml
xchg
in
hlt
inc
faddl
cmc
sbb
mov
fcmovb
jmp
sbb
and
nopl
mov
cmp
arpl
call
popf
insl
shl
adcb
mov
sub
or
or
in
or
and
push
jge
inc
jbe
adc
sub
mov
mov
jbe
pop
mov
inc
jae
cli
cmc
mov
mov
aad
adcl
cmp
stos
out
int3
push
mulb
jae
sahf
xor
incl
xor
mov
push
jb
repz
dec
loop
nop
test
scas
jg
ja
clc
xor
iret
call
aas
fldcw
adc
inc
xchg
dec
cwtl
push
dec
pop
fimull
sarb
cmc
lods
cmp
mov
fsts
std
stos
cmp
fcompl
mov
add
push
jecxz
jecxz
mov
xor
dec
subb
imul
mov
js
clc
cmp
test
xchg
insb
and
sub
sar
js
scas
loop
pop
divl
mov
sbb
sbb
ja
aad
loopne
mov
and
mov
mov
and
je
aam
sub
xor
daa
in
push
lods
movsb
and
xlat
and
adc
pop
inc
cltd
mov
sahf
sub
dec
inc
cli
icebp
nop
lea
aaa
push
pop
ss
test
jp
mov
push
xchg
lret
dec
or
add
imul
cld
adc
sti
lea
jmp
add
jmp
push
imulb
orl
jg
ret
xchg
xor
clc
enter
pop
add
loopne
mov
mov
popa
jp
imul
lret
and
clc
jp
jbe
out
jge
ret
imul
mov
ret
arpl
or
xor
cld
push
nop
jnp
push
jb
fistpll
rorl
xor
jo
cwtl
ljmp
movsl
jns
leave
inc
jecxz
stos
in
outsl
leave
and
push
jne
mov
mov
push
pop
cmp
fildl
dec
jge
dec
gs
dec
rdpmc
push
cmp
pop
jecxz
sbb
js
mov
dec
loope
or
int3
jno
push
std
out
mov
loopne
inc
jmp
cltd
shrl
dec
fstl
iret
lock
lods
cld
mov
and
adc
add
mov
xchg
loopne
fcoms
in
mov
pop
pop
test
adc
dec
cld
mov
popf
push
push
push
cmpsl
xor
pop
shlw
adc
stos
adc
lret
push
pop
lds
in
lods
push
int
inc
movsb
lds
or
cmp
pusha
out
sahf
sbb
and
cmp
jnp
popl
sti
mov
push
jl
cld
dec
mov
xor
push
jecxz
mov
sub
shlb
pop
lret
in
addl
aad
cmp
outsl
add
jo
ret
mov
add
les
lods
adc
setge
dec
xchg
mov
pop
popl
pop
fsubr
pop
cmp
adcb
cld
inc
dec
dec
imul
add
scas
and
mov
pop
adc
retw
fadd
popa
imul
outsl
jne
decb
pop
lret
addb
add
imul
and
cltd
mov
iret
sub
fld
nop
data16
aas
push
imul
mov
pop
jns
popa
outsb
scas
sbb
leave
into
mov
lcall
push
xor
lock
pop
out
lret
mov
jp
cmc
inc
pop
out
inc
mov
inc
mov
outsl
inc
lods
jg
or
aam
in
fisttps
iret
jmp
jmp
cli
ja
mov
repz
sbb
inc
mov
dec
xchg
lret
jmp
pop
or
icebp
ja
add
and
sub
jge
push
lods
fmulp
dec
aam
in
shlb
call
cmp
inc
scas
ja
xor
xchg
lret
out
jecxz
mov
pop
jo
mov
sub
inc
push
je
scas
insl
subl
repnz
jb
adc
mov
sub
into
and
adc
mov
xor
mov
ret
fs
or
sbb
mov
lcall
in
adc
mov
outsl
into
cwtl
in
adc
jge
mov
jle
push
adc
shlb
push
push
nop
lret
in
pop
xchg
int
inc
mov
sbb
das
jmp
jmp
shl
sbb
es
and
pop
pop
inc
xor
in
jp
stos
fcmovnb
test
xchg
push
nop
js
rcl
call
mov
mov
les
xchg
sahf
lds
mov
cli
xor
hlt
loope
push
int
inc
call
cmp
test
add
jne
mov
mov
ljmp
mov
push
movsl
add
xchg
jle
sahf
cli
sbb
movsb
loope
stos
mov
icebp
xchg
sbb
ljmp
xor
and
add
push
fstl
xchg
fbstp
int3
or
xchg
mov
aam
xchg
adc
repnz
mov
std
sub
ss
jns
xlat
ret
call
idivb
test
mov
push
lods
jecxz
pushf
pop
ret
push
outsb
aad
mulb
or
int3
xchg
push
pop
cmp
push
fiadds
xchg
sub
aas
sarb
xchg
aad
cli
sub
scas
loop
xchg
xchg
sti
lods
xorb
xchg
add
loope
xchg
jecxz
std
in
or
mov
loopne
mov
cmp
andb
inc
and
xor
mov
xchg
fisubs
dec
mov
call
dec
lock
aas
movsb
lea
mov
jmp
testl
cmp
xchg
jns
cmc
lahf
mov
xchg
in
xchg
test
test
aam
mov
bound
scas
xchg
jae
and
push
adc
nopl
jns
insb
clc
xlat
jmp
mov
lahf
popf
sbb
mov
and
out
pop
imul
xchg
and
xor
adc
mov
and
lods
stos
pop
out
shl
cltd
adcl
pop
cmpsb
adc
inc
or
arpl
pop
jbe
jno
inc
loope
xchg
cmp
in
jae
pusha
pop
adc
jb
inc
subl
xor
fldenv
xor
test
mov
lock
pop
cmp
nop
dec
test
data16
inc
stos
lock
adcb
push
mov
jnp
std
pop
sub
dec
stos
andl
hlt
cwtl
mov
push
mov
jmp
mov
aad
sub
sub
movsl
jle
push
cltd
fisubrl
out
inc
ljmp
inc
movups
and
and
xchg
sahf
popa
es
in
add
xlat
mov
add
xor
push
decb
xchg
fbstp
jae
cwtl
xchg
pop
inc
inc
dec
cmc
and
lahf
push
pop
dec
shll
add
xor
fisttpll
and
cli
sbb
xor
sub
shl
inc
rcrb
test
xor
divb
das
out
inc
and
push
fildll
mov
outsl
sub
nop
jae
xor
mov
stos
xor
test
dec
outsl
aaa
fadds
sahf
push
gs
add
repnz
sub
ljmp
outsb
cs
add
mov
dec
les
and
shl
std
jno
xor
fwait
mov
cmc
inc
fldenvs
andl
xchg
xchg
popf
mov
push
fdivl
test
dec
fdivrl
call
jb
jb
mov
inc
and
xor
pop
sbbl
cltd
push
cmp
je
movsb
push
lock
out
andl
ja
icebp
test
test
fwait
ds
push
xlat
outsb
add
jb
adc
cmp
and
xchg
mov
cmp
repnz
out
or
pop
fistps
shl
adc
jmp
inc
or
jno
inc
dec
mov
mov
mov
adc
rol
rclb
xchg
out
stos
inc
repnz
sub
enter
arpl
aaa
and
movsb
xchg
mov
lea
std
shll
pop
and
popf
xchg
push
dec
and
push
pop
sbb
jnp
aas
sub
mul
push
negl
mov
xchg
fwait
xchg
add
cwtl
sub
xlat
inc
dec
orb
and
sti
sub
xchg
arpl
or
mov
inc
sub
ds
and
cmp
notl
pop
lret
xor
insl
mov
fiaddl
imul
mov
lock
test
or
or
mov
push
sub
inc
or
ret
enter
inc
sbb
ja,pn
or
mov
dec
lock
scas
mov
and
pop
fcmovne
insb
ficompl
ja
inc
pop
lret
fwait
imull
sub
pop
nop
sbb
sbb
insb
out
repz
mov
lahf
add
push
pop
ret
dec
jns
inc
xor
mov
inc
orl
hlt
push
cmc
loop
into
lahf
or
sbb
jno
test
xchg
adc
aam
xchg
xchg
push
add
repz
das
and
mov
add
mov
mov
in
flds
push
bound
loopne
dec
and
ss
add
rorl
scas
jmp
xchg
xchg
pop
cltd
popw
xor
and
mov
sub
mov
shrl
lods
fdivs
pop
xchg
sbb
adc
dec
mov
fs
aad
sub
sbb
cli
les
int
cmp
mov
add
and
mov
mov
adc
mov
scas
mov
std
adc
fmull
adc
ret
pop
pop
mov
add
cmp
packssdw
repnz
pop
cmpsb
ret
push
scas
lock
les
movsl
in
jne
adc
imul
inc
divb
xor
push
testl
sub
sbb
mov
inc
imul
adc
and
push
mov
dec
sbb
mov
dec
dec
sub
xlat
inc
fdivrs
dec
loop
jmp
mov
sbb
cltd
out
mov
sbb
fisttpll
xchg
mul
pop
es
xor
mov
push
dec
addr16
int
inc
mov
lds
repnz
inc
das
testb
add
dec
add
jmp
sarl
adc
inc
jge
mov
or
dec
scas
jmp
add
dec
loopne
andb
setne
mov
popf
jae
jo
sarb
test
push
repnz
cmp
add
cmp
in
cwtl
cli
imul
push
daa
xchg
in
jl
cli
xchg
mov
nop
mov
out
xlat
andl
in
imul
jns
orl
adc
xor
sbb
mov
fcomps
dec
inc
rcr
insl
push
fmuls
mov
dec
mov
adc
xor
lock
lock
dec
cmpsl
sbb
sbb
xchg
jmp
sbb
fsts
xchg
andb
mov
cmpl
push
iret
das
sti
cmp
pusha
pop
xchg
popa
mov
mov
lcall
imul
inc
xor
inc
sbb
cmp
js
pop
pushf
cmp
mov
pop
add
mov
fwait
aas
push
xchg
lahf
pop
jae
dec
repnz
xchg
push
pop
int
sahf
xchg
adc
sbb
pop
push
inc
jmp
push
cmp
out
movsb
dec
pop
and
push
mov
fisubs
mov
fsubrp
or
enter
pop
push
jg
nop
cwtl
fs
insb
push
cmp
js
mov
sbbb
jae
add
cs
lds
pushf
into
sub
roll
dec
andl
and
cmpsb
ror
movsl
ljmp
push
mov
add
mov
inc
jo
lret
mov
inc
shrb
bound
xchg
mov
in
push
inc
ds
pop
in
jge
loope
or
out
push
pop
stc
cwtl
mov
popf
push
jb
xchg
les
cmc
and
enter
enter
and
xchg
or
cmpsl
stos
sbb
sbb
xlat
xchg
push
jae
dec
pop
push
imul
in
sub
aam
lret
jecxz
xor
xchg
les
mov
push
push
mov
jmp
je
mov
pop
xor
jecxz
call
sti
int3
fbstp
jo
dec
dec
lret
xor
addl
add
arpl
dec
cmp
mov
or
adc
push
aaa
mov
adc
icebp
cwtl
cwtl
cmp
sbb
loopne
js
sub
jp
in
jecxz
fsubrp
mov
pop
xor
mov
jo
imul
cld
and
pop
add
stc
jg
sub
mov
mov
loopne
xchg
std
ljmp
negb
testb
push
rolb
lds
in
mov
push
push
int3
pusha
cs
sbb
add
cmp
fs
xor
push
cltd
mov
xor
push
dec
pop
sahf
lea
xchg
dec
sub
insb
mov
mov
jle
pushf
sahf
mov
sub
pop
int3
cmp
push
enter
mov
push
loop
mov
sbb
ljmp
enter
push
or
mov
mov
and
cmp
jle
cmp
leave
movsb
hlt
mov
js
test
scas
push
cmpsl
or
in
popl
sub
sar
mov
lds
std
xor
mov
push
cmp
cmp
jmp
xor
leave
cmp
das
fistl
and
imul
cwtl
adc
bnd
mov
push
jl
popl
das
inc
repz
lock
dec
jmp
sti
mov
mov
dec
fsubr
jae
and
outsl
test
call
inc
sbb
adc
loop
jae
loope
in
sbb
and
sub
and
scas
fs
jo
dec
cmp
mov
push
outsl
ss
push
xchg
mov
and
repz
mov
lahf
dec
push
pop
mov
adc
fsubs
dec
cltd
mov
pop
xchg
and
jb
mov
dec
or
adc
test
cwtl
add
cli
push
push
ljmp
dec
pusha
pop
insl
or
pushf
mov
dec
ja
push
sub
or
inc
adc
loop
xchg
inc
jne
loop
mov
mov
mov
movsl
or
mov
dec
je
inc
push
xchg
dec
mov
mov
dec
or
hlt
push
and
pop
shlb
sbb
stc
mov
push
mov
daa
mov
pop
push
out
cmp
add
int3
add
testb
daa
adc
mov
icebp
dec
stos
arpl
faddl
mov
jl
inc
dec
fistps
das
out
insb
mov
sbb
sub
add
pop
scas
iret
or
leave
arpl
add
in
sbb
push
xchg
mov
jp
imulb
dec
xlat
ret
mov
sub
push
les
cmp
cld
out
inc
cmp
xchg
test
adc
mov
rclb
sar
repnz
xor
xor
call
xlat
inc
clc
mov
xchg
in
cmp
push
xchg
pusha
sbb
gs
dec
sbb
push
xor
and
xor
jnp
jbe
push
xor
or
mov
push
test
fmul
or
or
cmp
outsb
mov
mov
and
std
andb
pop
or
aad
test
das
stc
pop
into
pop
push
jecxz
pop
sbb
and
clc
imul
inc
add
mov
pusha
xchg
fcmovne
inc
lahf
push
dec
ret
add
mov
fadd
movsl
mov
ror
scas
shlb
sbb
int
sbb
je
loop
mov
dec
inc
sbb
out
push
dec
ret
cwtl
mov
or
shl
testl
dec
push
dec
lds
jecxz
lcall
les
pop
dec
movsb
repnz
imul
mov
jmp
mov
add
xor
ror
pop
shrl
les
add
iret
dec
insl
pop
cld
or
push
int3
cmp
mov
push
xor
rclb
pop
add
sbb
jmp
fisttpll
xor
sti
outsl
inc
xchg
lret
sbb
cld
ret
mov
clc
cs
ss
loope
push
or
cs
mov
iret
rcll
mov
pop
loopne
shrl
inc
push
xchg
mov
xchg
imul
test
mov
pusha
pop
fsubr
sbb
fsts
cmp
in
cmpsb
imul
movsl
icebp
mov
fldl
cli
int3
arpl
dec
jp
loop
sub
inc
aad
inc
outsb
mov
jg
jb
push
mov
out
sbb
mov
les
leave
ret
call
in
mov
aas
sbb
scas
jnp
sbb
push
std
paddq
in
mov
sub
push
push
and
xor
xchg
daa
sarb
inc
and
pop
pop
in
addl
aam
push
fcmovnb
dec
push
push
mov
clc
mov
jle
mov
ret
int3
clc
ror
jne
and
sbb
cld
cwtl
jo
fmuls
fcmovnbe
lahf
into
jne
negb
in
adc
lock
aam
adc
push
dec
cli
adcb
repnz
cmp
sbb
xchg
lret
or
inc
and
push
sbb
aas
mov
fimull
ljmp
inc
mov
sub
shrb
rcrl
lret
xor
push
and
add
stos
repz
inc
inc
dec
lcall
jnp
test
mov
and
out
cwtl
inc
cmp
cmp
pop
push
or
or
dec
inc
bound
xchg
jl
mov
in
mov
cmp
rclb
dec
pop
aad
push
inc
sub
cmp
jb
insb
xchg
add
xor
mov
leave
mov
fnsave
mov
popf
movsl
sarl
test
stos
xor
in
push
push
orl
ds
enter
xor
jns
push
pop
push
sub
sub
vmovaps
cltd
xchg
js
xchg
xchg
xor
hlt
rorl
shlb
jl
inc
sub
mov
pushf
push
fcomps
push
icebp
out
out
dec
inc
xor
sarb
outsl
add
xchg
fcoms
popf
add
std
mov
testl
pop
push
roll
xlat
inc
add
imul
fdivr
xchg
mov
out
shrl
mov
lods
and
sub
leave
filds
xor
nop
popf
lret
addr16
xchg
shl
fnstcw
loop
mov
lret
pop
subl
lret
jmp
lret
out
insl
das
rcrl
pushl
test
popa
icebp
outsl
adc
aad
push
inc
jecxz
pushf
mov
lcall
cmp
popa
sbb
push
mov
cwtl
sbb
in
in
cmp
sub
mul
pop
jg
in
mov
mov
sbb
scas
push
fmulp
xchg
pop
mov
and
cmp
in
add
jg
push
adc
mov
rcr
xlat
jnp
xor
jo
adc
sbb
xchg
mov
scas
adcl
int
call
add
cmp
out
add
shl
sub
jae
sti
popa
inc
mov
jb
push
sarb
or
sbbl
fs
inc
int
sub
in
std
test
push
pushf
push
adc
data16
xor
es
aad
dec
loopne
js
fists
in
ja
outsl
adc
imul
cli
mov
pop
jo
cltd
decb
xchg
orl
mulb
pusha
fbstp
jo
mov
in
cmpsb
or
add
mov
les
or
jne
add
js
cmp
and
push
mov
and
pop
cld
ja
inc
aad
or
cmp
xorl
icebp
ljmp
adc
sahf
shll
pop
fnstcw
jb
out
enter
in
and
pop
xchg
cmp
pop
sbb
ret
jg
adc
cwtl
pop
lcall
sahf
test
jp
bound
pop
test
jmp
or
ficoms
sbb
jecxz
repnz
insl
icebp
mov
aaa
repz
mov
out
xchg
push
add
cltd
insl
pop
push
ljmp
sub
std
pop
mov
or
jl
mov
in
cmp
mov
mov
adc
jae
mov
insb
cld
fisubs
jle
xor
gs
add
mov
test
push
sti
mov
inc
into
int
sbb
fwait
js
cmp
ret
pop
mov
sbb
xchg
out
cli
push
loope
and
adc
lds
pushf
mov
pop
adc
push
shlb
jl
dec
in
adc
push
nop
xor
push
inc
ljmp
rcll
sbb
ja
insl
mov
push
idivb
mov
aam
daa
jno
js
mov
insb
lods
mov
test
push
pushf
hlt
ljmp
aas
jo
pop
ret
mov
lret
xchg
sub
loopne
fs
arpl
dec
xchg
xor
sbb
mov
adc
xchg
mov
inc
or
sbb
sbb
mov
mov
pop
loopne
pop
popf
fidivl
pop
fnstcw
mov
cmp
shr
push
inc
rcr
leave
pop
mov
jl
je
push
ret
xchg
pop
push
daa
jnp
inc
and
mov
inc
add
adc
in
inc
or
jae
dec
ss
pusha
mov
pop
inc
sbb
addr16
push
mov
push
push
scas
fisubs
inc
cld
xchg
pop
sbb
test
pop
mov
mov
or
jge
mov
or
movsb
dec
stos
or
mov
xchg
testl
cmp
mov
jbe
inc
rolb
mov
xchg
add
ljmp
pushw
jl
test
or
add
xchg
iret
mov
xor
mov
inc
sub
in
dec
inc
je
pop
gs
pop
ror
pop
fwait
push
sbb
jg
stos
pusha
xor
lcall
mov
movsl
mov
mov
xor
loop
push
xchg
xchg
ss
sub
push
push
adc
sbb
les
jl
or
ret
dec
lea
pushf
je
stos
or
loopne
and
les
xor
pop
cltd
mov
shrb
adc
rcrl
sub
cmp
shll
cmp
sub
add
add
punpckldq
add
add
add
add
cmp
add
add
add
sub
add
clc
add
addb
add
punpckldq
add
add
add
add
add
add
mov
add
mov
add
fadds
add
add
add
punpckldq
add
add
add
add
add
add
js
add
add
add
js
add
add
add
add
add
bound
add
add
add
add
add
add
mov
fadds
add
add
mov
add
punpckldq
add
add
add
add
add
add
enter
sub
push
add
xor
add
add
add
add
add
bound
add
add
add
add
add
add
lock
add
sysret
add
add
add
add
add
add
bound
add
add
add
add
add
add
sbb
add
js
pop
add
lds
add
add
add
add
add
bound
inc
outsl
insl
add
add
add
add
pop
add
xorb
add
addb
xorb
add
test
add
rolb
add
sbb
dec
inc
outsl
insl
add
add
add
add
jo
add
dec
repnz
add
add
add
bound
inc
outsl
insl
add
add
add
add
cwtl
add
add
cli
pop
add
add
add
add
add
add
add
bound
inc
outsl
insl
add
add
add
add
rolb
add
cld
pop
add
add
mov
add
punpckldq
inc
outsl
insl
add
add
add
add
call
add
add
add
add
add
add
add
add
bound
add
add
add
add
add
add
adc
add
punpckldq
inc
outsl
insl
add
add
add
add
sub
add
push
add
add
add
add
add
push
add
push
add
dec
add
add
add
add
add
add
add
add
or
add
add
addb
addb
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
add
ljmp
add
ljmp
xor
add
add
mov
add
add
ljmp
pop
xor
lahf
inc
add
in
mov
add
ljmp
pop
xor
lahf
lahf
lahf
inc
add
mov
imul
add
out
out
pop
pop
mov
lahf
repnz
add
mov
imul
out
out
out
out
pop
mov
repnz
in
mov
imul
ljmp
add
repnz
out
out
inc
in
mov
imul
mov
add
add
in
in
in
out
out
inc
in
mov
imul
ljmp
add
add
lock
in
in
inc
in
mov
imul
repnz
lahf
pop
pop
add
out
idiv
lock
out
inc
in
incl
imul
ljmp
jae
out
testl
in
incl
in
imul
ljmp
mov
incl
in
incl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
add
add
in
incl
div
div
ljmp
mov
add
add
pop
out
in
add
add
incl
div
div
add
jmp
loope
mov
in
in
in
in
in
pop
pop
in
add
add
incl
div
div
add
in
in
in
in
jmp
in
add
add
in
in
in
in
add
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
add
add
ljmp
div
add
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
in
in
in
ljmp
incl
in
add
add
add
add
ljmp
in
incl
add
add
add
add
add
add
pop
in
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
add
incl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
add
in
in
in
in
in
add
add
pop
jp
xor
xor
dec
add
pop
in
add
add
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
add
add
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
add
add
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
add
add
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
add
add
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
add
add
incl
add
add
add
add
add
add
pop
in
add
add
incl
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
adc
add
and
add
add
add
add
add
rolb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
jo
add
pop
addb
lea
ja
mov
js
or
js
add
jnp
fisttps
xchg
pop
lock
pop
ja
pop
jo
ja
ja
cmpb
js
mov
jb
and
jo
pop
pushl
and
jo
add
and
das
jo
add
jb
and
jo
add
jb
stos
scas
jo
add
jg
pushl
pop
add
orb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
incl
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
add
add
in
in
outsl
in
jp
xor
in
add
add
add
add
outsl
jp
in
push
in
add
add
add
add
outsl
dec
dec
dec
dec
dec
in
add
add
add
add
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
add
add
ja
pop
js
fstl
add
js
lock
jg
mov
cltd
nop
add
add
add
xorb
clc
std
fstps
add
js
lock
js
mov
cwtl
mov
add
add
jg
cmpb
xchg
add
js
lock
js
or
add
jg
cmpb
xchg
add
add
js
lock
mov
jo
add
add
cmpb
mov
add
add
jg
lock
fwait
mov
add
add
jg
lock
mov
add
add
add
lock
js
mov
lock
clc
lock
mov
jg
lock
addb
ja
jo
jg
lock
jg
pushl
ja
jo
mov
ja
ja
ja
ja
jo
ja
jo
mov
addb
push
or
mov
ja
ja
jo
pop
incl
ja
or
repnz
and
and
xchg
add
add
jo
repnz
das
xchg
add
add
incl
repnz
mov
xor
add
add
jo
mov
das
xchg
add
add
add
pop
repnz
sti
mov
xor
xchg
add
add
add
pop
repnz
das
xchg
add
add
add
pop
repnz
sti
mov
das
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
and
and
xchg
add
add
add
pop
incl
add
add
ja
ja
ja
ja
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
add
add
add
adc
or
add
add
sub
add
xor
adc
add
add
add
add
xor
and
add
add
call
jne
and
add
add
add
add
add
add
add
or
xor
add
mov
or
add
add
in
add
add
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
xchg
cwtl
add
fidivrs
sbb
xor
push
out
mov
jb
in
jns
cmc
mov
or
dec
add
pusha
mov
mov
dec
add
mov
shl
sbb
push
lock
or
sub
mov
cmp
cmp
dec
sub
enter
jge
sbb
xor
xor
sbb
inc
xor
je
adc
and
sbb
mov
fs
adcl
je
mov
jae
cmp
stos
mov
mov
add
shlb
push
add
decl
std
push
loop
or
aaa
push
decl
repnz
roll
mov
sbb
clc
aad
cmp
add
cmp
jno
xor
push
adc
adc
out
insl
loopne
mov
mov
clc
jg
pop
imul
cmp
push
subl
ret
sub
sbb
mov
push
pop
fdivrs
xor
mov
out
stos
mov
add
imul
std
pop
push
lea
jle
mov
push
test
test
mov
push
push
xor
inc
mov
adc
mov
mov
cmp
cmp
pushf
mov
test
cmp
mov
into
sub
fwait
sbb
lea
mov
nop
pop
xor
lds
mov
xchg
push
enter
cmp
xchg
mov
ss
xchg
testl
push
adc
je
xchg
push
mov
incl
jmp
push
and
mov
jl
xchg
xchg
adc
addr16
in
and
add
imul
and
jl
add
jge
sti
add
gs
or
mov
mov
shr
loope
stos
in
adc
imul
std
sbb
mov
sahf
fcmovbe
push
in
cmp
jae
dec
and
mov
shlb
sahf
xchg
and
or
xor
ret
sub
adc
adc
adc
call
loop
inc
dec
mov
cmc
adc
mov
repnz
lret
or
push
adc
xor
into
xor
enter
mov
es
jl
test
or
lea
bswap
cwtl
ret
push
stc
dec
mov
lea
or
in
and
lds
cmp
inc
int
popf
ret
inc
xorb
or
fs
sub
adc
xchg
cmp
inc
mov
dec
push
mov
lock
jmp
out
mov
mov
sbb
sarb
jmp
and
jmp
push
and
ja
push
or
bound
mov
dec
ss
lods
pop
adc
cmp
inc
and
push
loopne
xor
movsb
mov
adc
sbb
jne
in
loope
sahf
sbb
sub
lret
ficoms
inc
push
pop
adcl
push
adc
into
dec
inc
cli
sub
sub
fxch
mov
and
fildl
add
mov
enter
sti
adc
arpl
jne
enter
mov
jmp
and
mov
xchg
inc
adc
fiadds
jb
sub
cmpsl
mov
test
cmpsl
jo
pop
lea
dec
jmp
cmpsb
xchg
in
int3
dec
loop
sub
add
xorl
mov
pop
or
add
jl
mov
sbb
jecxz
lea
pushf
or
push
test
mov
sub
adc
enter
dec
in
hlt
cli
mov
inc
out
add
sar
sti
out
enter
add
push
mov
shl
and
xchg
xchg
adc
and
mov
inc
sub
arpl
iret
jb
and
lea
mov
inc
lods
sbb
repz
roll
call
jb
sbbl
xchg
repnz
mov
pop
scas
jo
je
jmp
pop
and
adc
mov
aam
jmp
sbb
cltd
lahf
inc
pop
or
or
sbb
xchg
fwait
je
je
sub
and
lds
add
lret
lea
lock
add
stos
test
dec
or
mov
push
pop
jb
loope
push
jb
add
addb
pop
orl
sub
sbb
sub
push
add
and
gs
push
adc
mov
push
add
inc
add
sub
stc
push
mov
add
adc
es
idiv
mov
xor
fdivs
loopne
add
dec
mov
sbb
mov
add
push
jo
cs
push
dec
mov
lds
rolb
push
push
in
dec
xor
int3
adc
sbb
out
test
data16
or
push
cli
sar
mov
mov
push
add
adc
sub
push
mov
mov
fs
inc
adc
adc
add
pusha
push
inc
sbb
inc
sub
punpcklbw
or
or
inc
icebp
inc
add
xor
push
cwtl
stos
pmuludq
sbb
ss
setne
add
push
push
push
call
xor
dec
call
inc
or
rolb
jns
fidivrs
push
or
jbe
add
lea
lods
stos
nop
add
adc
add
test
mov
mov
repnz
jnp
push
cli
rep
cld
repnz
sbb
add
xchg
outsl
add
push
ret
lcall
sbb
call
nop
add
lea
les
inc
mov
xchg
aaa
and
push
call
jb
sbb
insl
xchg
rcll
dec
sti
nop
add
lcall
dec
test
or
inc
inc
push
sbb
jnp
mov
lea
mov
cmp
sub
jl
adc
loope
ret
lea
test
xor
push
aas
pop
inc
mov
sbb
add
inc
pop
push
aas
shl
adc
push
test
sbb
rorb
or
jmp
or
aaa
fimuls
or
dec
jle
add
add
movb
fsub
jae
dec
mov
push
and
repnz
pop
push
lea
sbb
data16
mov
jbe
mov
add
pop
pop
pop
pop
ret
push
imul
cwtl
jne
cld
mov
or
aas
pop
loopne
push
adcb
or
ret
xchg
shll
add
std
xlat
ljmp
inc
xor
stos
pop
cs
adc
sbb
lods
push
jne
lds
cmp
int
sarl
dec
enter
xchg
mov
scas
sub
jmp
cltd
fs
movsl
xor
push
and
ds
cwtl
pop
push
cmp
or
or
inc
xor
dec
pop
rorb
inc
adc
faddp
scas
xchg
xchg
sub
insb
int3
dec
cld
inc
pop
jl
add
add
cmp
jge
mov
add
add
sub
in
shll
push
enter
sbb
cmp
ret
shr
cwtl
rclb
dec
les
adc
add
mov
xor
enter
mov
xor
xor
int3
pop
jmp
test
push
push
mov
clc
nop
xor
sub
in
adc
shr
dec
xor
sbb
dec
aas
es
out
mov
in
inc
pop
out
fists
jb
fiadds
and
dec
xchg
loopne
or
jge
dec
pop
or
cmp
test
add
movsl
subl
push
cli
sahf
movsb
push
aam
sbb
stos
and
or
pusha
cmp
inc
cmp
ret
sub
mov
push
pushf
lcall
and
push
xchg
outsb
push
xor
mov
outsb
mov
movsl
mov
pop
lret
and
jl
add
push
mov
push
hlt
push
dec
dec
or
das
int
push
push
sti
and
enter
dec
mov
inc
push
adc
push
adc
mov
pop
lods
sbb
xor
stc
jmp
mov
push
movl
loopne
sub
pushf
dec
mov
fiaddl
stos
inc
or
lret
testb
or
pop
xor
cmp
push
je
outsb
add
jge
inc
pop
push
dec
or
mov
dec
and
push
push
push
push
call
or
dec
sbb
adc
lds
mov
insl
jae
lret
lods
lret
in
sbb
or
subl
test
testb
xchg
out
bound
inc
or
shlb
jle
pop
mov
ss
test
adc
out
inc
leave
xchg
into
jge
pop
push
adc
shlb
testb
mov
sti
or
inc
test
and
jmp
mov
cs
sahf
data16
push
inc
gs
dec
pop
adc
push
xchg
fs
sbb
stos
outsl
loopne
xor
ss
mov
call
cmp
inc
inc
jmp
repz
imul
insl
pop
sbb
sbb
inc
inc
mov
add
daa
hlt
iret
sub
jmp
push
lea
mov
leave
pusha
cmp
push
orb
je
js
push
pop
sbb
arpl
sub
or
in
xor
and
scas
adc
lcall
mov
fiadds
pop
outsl
cmpsb
dec
dec
scas
icebp
inc
jo
insb
imul
jb
mov
adc
out
and
jne
fldt
adcb
jecxz
cmp
aas
fs
and
stc
in
fnstenv
pop
scas
mov
imul
inc
xor
sub
insb
and
or
daa
arpl
sub
jne
fwait
push
xor
push
dec
fidivrs
popa
addr16
inc
outsl
js
xorl
js
data16
imul
fwait
insb
add
inc
js
je
xchg
movsb
jo
insb
inc
shrb
popa
outsb
fs
jo
dec
jo
lods
sbb
cmp
insb
cmpsb
sbb
jl
imul
add
mov
cltd
lcall
jge
push
add
insl
cmp
and
jmp
push
cmp
dec
dec
xor
dec
arpl
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
fs
add
clc
or
add
add
add
inc
add
add
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
jo
arpl
jne
sub
mov
test
