mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
frstor
dec
jmp
les
or
cmp
std
push
out
push
cmpsb
test
sub
mov
mov
loop
insl
fwait
push
je
call
cmp
sub
les
decb
mov
xor
add
fmuls
adc
lea
in
scas
sub
cmp
mov
sbb
pop
dec
incl
js
sti
jecxz
aad
or
pop
rcrl
icebp
push
pop
fdivs
dec
xchg
fsubl
cld
mov
or
in
xor
sbb
insb
xchg
sbb
lds
das
lret
sub
mov
call
jl
fadds
xchg
cmp
add
lds
fs
fsubl
andl
sahf
dec
or
dec
cmp
dec
adc
lods
adc
dec
pusha
fdivl
sbb
mov
jne
movsb
jp
fdivl
je
mov
das
movntq
and
xchg
adc
lret
andl
test
cld
xor
pavgb
rcll
mov
cmp
or
inc
xor
pop
arpl
pop
inc
mov
xchg
cmc
arpl
xchg
inc
mov
fnstsw
and
hlt
out
and
jnp
pop
add
sbb
xchg
jb
cmpsb
je
cmpsb
mov
frstor
ja
ret
stos
and
push
inc
adc
outsb
mov
shll
mov
addr16
add
or
cmp
or
enter
dec
pop
test
sub
pop
test
dec
stos
outsb
test
aam
ljmp
and
outsb
mov
pop
out
mov
pop
lods
fsubp
adc
addb
stos
sbb
imul
lret
cmpsb
mov
popf
lahf
clc
jnp
pushf
sub
sbb
pop
adc
or
mov
in
or
xadd
leave
or
test
daa
lods
adc
jp
scas
push
xlat
mov
ljmp
mov
rorl
daa
jl
into
ret
adc
push
mov
mov
adc
jns
stos
lret
jns
stos
aam
aaa
xchg
test
test
ret
sahf
sahf
faddl
mov
fdivrl
push
sbb
insb
sub
iret
jecxz
add
push
xor
mov
mov
sarb
pop
je
mov
mov
and
out
or
dec
out
addr16
aas
adc
ss
jle
pop
dec
sub
push
mov
notl
out
push
mov
jecxz
dec
jmp
add
push
dec
sbb
lcall
inc
sbb
into
test
mov
jmp
xor
mov
lods
sbb
mov
loopne
ljmp
adc
imul
lea
aad
mov
push
ja
push
cwtl
jmp
subl
xchg
dec
call
iret
std
out
add
lret
lods
sub
sub
xchg
pop
xor
inc
dec
insb
loop
jnp
or
or
pop
loope
fidivs
dec
shrl
loop
cld
insl
mov
movsl
ret
addr16
mov
clc
loop
sub
bound
test
out
sbb
roll
xchg
cs
loop
out
fisttpll
jne
lret
push
sti
rolb
leave
push
dec
call
xlat
cld
inc
daa
test
or
or
ljmp
xor
mov
push
jmp
arpl
mov
mov
xchg
popf
mov
inc
cld
insl
bound
xchg
repnz
push
jp
imul
jns
jbe
notb
jl
popa
cmp
xor
stos
das
fstpl
jns
jg
inc
cmp
sbb
movsl
repz
in
jnp
dec
xchg
pminub
jp
jbe
mov
imul
sub
and
and
cmp
divb
dec
push
sbb
push
and
leave
imul
or
sub
movb
mov
loope
cmp
inc
aad
sbb
or
loope
pop
pop
jl
aaa
pop
jmp
leave
pop
ror
jp
cltd
outsl
fnsave
jo
rclb
sbb
out
cmp
call
pop
jg
fistpll
cld
pop
loop
add
pop
push
mov
lds
mov
xchg
sbb
shrl
mov
or
sbb
sbb
push
push
jl
fcmovu
lahf
sub
sbb
sbb
xchg
mov
inc
into
sub
or
pop
push
jne
data16
cmp
ss
adc
xor
mov
xchg
jne
and
ret
icebp
inc
xor
ljmp
jmp
mov
pop
mov
push
movsb
ljmp
data16
and
xor
xorb
mov
inc
and
insl
orl
out
xor
cs
push
fcom
mov
fmull
testl
or
das
es
and
push
test
adc
fisubrl
cmp
lea
arpl
fcmovb
fcomp
cmc
push
push
je
push
loopne
mov
test
jmp
int3
testl
mov
sbb
rclb
adc
test
pop
repnz
imul
je
int
mov
call
stc
jb
inc
mov
movsb
fnstenv
xchg
or
xchg
mov
sub
sbb
xor
mov
subl
jno
xchg
xor
rep
jno
int
push
lods
aaa
mov
sahf
stos
aaa
outsl
imul
out
movsl
icebp
adc
pop
stos
push
cmpsl
xor
fistl
pop
paddsb
mov
cmp
xor
in
or
lods
cmp
add
jmp
rcrl
xchg
jp
add
call
and
or
cli
fwait
mov
ficompl
and
mov
mov
outsb
mov
xchg
test
pop
aas
cmc
sbb
pop
das
dec
and
lods
out
subb
lods
outsl
push
push
dec
or
iret
cwtl
loopne
push
clc
mov
fnsave
call
imull
in
jg
or
mov
fs
jb
pushf
subl
lea
jne
popa
sbb
add
movsb
orl
aas
lods
cltd
cmp
test
popa
in
int
mov
js
data16
dec
adc
nop
mov
in
push
cli
int3
addl
inc
in
mov
add
push
mov
in
xchg
xchg
and
push
aad
xchg
add
xor
cld
iret
cs
pop
ljmp
add
mov
cmp
sub
inc
push
lcall
stos
rclb
aaa
ss
stos
xchg
dec
iret
push
lds
xchg
mov
mov
sarb
jnp
jae
popf
aad
icebp
arpl
push
xchg
xor
fmuls
sbb
pop
mov
pop
pusha
fwait
push
out
add
idiv
cmp
pop
pushf
lcall
pop
and
push
pop
aaa
xchg
pushf
add
cltd
mov
int3
in
aaa
shll
fcompl
pop
add
repnz
idivl
push
jo
pop
mov
aam
lock
jns
fisttpl
movsb
lea
sti
mov
jg
push
ss
push
popf
pop
dec
sarl
and
sub
add
or
pop
decb
cwtl
sahf
insl
sub
out
cmpsb
clc
bound
fbstp
scas
mov
test
insl
stos
test
add
adc
adc
pushf
fidivs
lret
cmp
int
add
movsl
insb
mov
jbe
shll
mov
dec
mov
xorb
push
or
fisubl
jmp
stos
pop
imul
ss
push
mov
mov
mov
push
repz
add
sub
lcall
mov
push
mov
gs
pop
std
pop
pop
xchg
out
shlb
bound
xchg
lcall
hlt
inc
fdivp
ja
push
cltd
dec
mov
sbb
sub
lret
pop
mov
loop
scas
fistpll
pop
lods
repnz
add
cmp
mov
aas
cs
loop
inc
cmp
movsb
inc
push
cmp
mov
pop
pop
sub
jns
mov
repnz
jns
shlb
xor
mov
xchg
cmp
cwtl
xchg
aam
rclb
and
lock
dec
add
cld
add
sub
imul
sti
loope
repz
mov
cmpsl
xlat
in
adc
js
int3
xchg
cmpsl
adc
or
xlat
test
mov
cs
and
adc
dec
cmp
xlat
outsl
inc
jmp
std
shlb
nop
inc
push
fsubp
ss
das
stc
push
ja
xor
enter
adc
repnz
mov
insb
scas
cmc
jg
lods
cmc
movsl
out
sahf
mov
mov
jp
int3
hlt
add
xchg
bswap
push
pop
add
fiaddl
jl
mov
dec
or
cmp
add
adc
or
sbb
arpl
ret
xor
stos
ret
jne
pop
int
cltd
and
mov
lock
mov
jp
add
sbb
aas
stos
mov
adc
ja
iret
loope
mov
adc
mov
jbe
imul
outsb
dec
sbb
and
popf
dec
cmpsb
add
mov
int
lods
mov
xor
fisubs
dec
pop
test
jne
imul
or
jae
push
cmpsb
dec
push
push
push
stos
xchg
dec
jo
repz
mov
mul
ss
std
xchg
jle
mov
inc
mov
lret
mov
lret
push
push
xchg
pushf
fbstp
je
ret
cld
fldenv
jle
adc
out
mov
fsubs
sti
dec
leave
out
data16
mov
mov
mov
jns
inc
sbb
outsb
mov
mov
sub
jmp
dec
pop
pop
mov
test
inc
jae
iret
mov
adc
lret
fisttpll
mov
inc
xor
cmp
xor
cmpsb
std
xchg
mov
mov
fisttps
sub
cmpl
rclb
adc
cmp
xchg
add
sbbb
mov
inc
leave
in
jp
cmp
add
adc
scas
les
lahf
push
inc
mov
cltd
pop
jns
test
jmp
ret
divl
in
pop
push
stc
imul
pop
jge
ret
movsb
mov
test
fadds
aaa
or
jae
adc
mov
addr16
ret
jbe
out
xchg
pop
lahf
aaa
fstpl
cmp
lds
pop
adc
jbe
std
adc
rcll
ret
out
fildll
add
mov
jecxz
and
push
xchg
mov
lds
xlat
fistpll
flds
lock
mov
push
insl
scas
pop
xchg
and
adc
addr16
lea
fnstcw
in
push
call
test
stos
mov
cmp
inc
out
ret
in
or
push
mov
in
rorb
sbb
pop
push
mov
adc
call
rcr
mov
jo
fistl
std
and
aam
not
mov
add
sarb
dec
sbb
fsubr
pop
or
xlat
cmp
sbb
push
pop
rcrb
inc
aaa
mov
mov
or
mov
cltd
push
xchg
pop
lcall
or
mov
stos
jne
and
push
fmull
shlb
and
sub
imul
xor
ret
xchg
pusha
jle
pop
lret
jnp
icebp
jg
xor
and
and
mov
push
icebp
jae
je
bound
aad
scas
pop
xchg
mov
xchg
jmp
dec
mov
add
sub
mov
xchg
cmp
divl
aaa
mov
or
rorl
jle
mov
outsb
xchg
xchg
xchg
cmpsb
adc
xchg
mov
push
scas
sub
dec
frstor
fistpl
add
mov
jle
sub
js
fnsave
subl
mov
adc
in
out
sub
lods
bound
push
mov
sbb
into
mov
jp
sti
sahf
and
xor
arpl
faddp
pop
sbb
int3
mov
push
and
add
add
dec
vmovss
jle
mov
mov
mov
lcall
scas
cmp
cmp
adcb
pushf
imul
stos
sbb
jo
lcall
and
loop
outsl
cmp
add
cmp
xor
out
mov
push
dec
int3
pop
ds
mov
xchg
pop
and
jp
out
mov
mov
movsb
mov
jo
shll
enter
pop
dec
repnz
movsl
lds
loop
push
add
push
inc
xchg
xor
fisttpll
pop
das
les
test
sub
mov
xchg
add
cltd
iret
jo
cld
push
push
xor
dec
inc
pop
or
stos
int
jb
les
push
loope
cmp
dec
mov
iret
pop
jo
daa
imul
ret
rcr
insl
or
jecxz
sub
xchg
push
xchg
rcl
andb
shlb
mov
int
jl
aam
call
lods
mov
cli
daa
sub
push
scas
out
pop
sbb
fldcw
clc
push
lods
fs
jo
cmpb
xchg
rcr
aad
dec
nop
stos
dec
xlat
rdpmc
xchg
jl
mov
repz
dec
push
jae
lods
sub
xor
push
mov
das
ljmp
ficoms
call
stc
inc
imul
in
push
push
add
fimuls
lcall
idivl
xor
dec
sbb
shlb
dec
mov
jle
inc
and
popf
sbb
jp
push
repz
aas
cmc
int3
notb
adc
aam
popa
popf
shlb
aas
or
push
mov
mov
sar
out
mov
mov
fsincos
loop
nop
mov
xchg
push
pop
lahf
fstpl
add
cmp
sbbl
aas
loop
lret
clc
sub
test
mov
xchg
rcll
mov
adcb
and
lds
sub
ja
push
mov
cmpsb
xchg
push
or
pop
inc
psllw
in
fwait
xchg
sbb
insl
lock
lahf
out
inc
or
out
jg
imull
or
fistl
test
xor
stc
dec
mov
xchg
icebp
mov
or
adc
scas
lret
lock
xor
in
insl
fstpl
rcrl
xlat
repnz
test
je
cmp
enter
xchg
stc
xchg
pop
test
lcall
popa
xchg
stos
xchg
popa
stc
xor
push
mov
stc
popf
adc
xchg
fildll
sbb
insl
and
out
adc
nop
sbb
cmc
pop
or
fists
push
jecxz
ds
lahf
sbbb
or
inc
mov
fldcw
xchg
sub
ficoml
negb
leave
jl
stos
in
sub
outsl
jge
movsl
stos
cmp
scas
gs
arpl
out
or
das
cmpsl
into
jp
sbb
jns
sahf
pop
inc
cmpsl
shrl
mov
cld
mov
and
arpl
js
mov
sbb
dec
sbb
dec
mov
mov
add
dec
jmp
dec
repnz
ja
aaa
das
loope
mov
jge
mov
pop
or
cld
test
cwtl
dec
das
xchg
jne
out
icebp
dec
mov
in
cmpsl
pop
or
les
cld
aas
sti
cs
cmp
and
repz
lret
clc
js
daa
andl
push
jecxz
out
fwait
or
dec
test
adc
sahf
cld
cltd
xor
lea
pushf
sub
jg
in
lahf
popa
and
into
mov
push
aas
jle
outsl
and
dec
pop
fwait
and
fists
test
pop
push
cmp
mov
aad
and
xchg
ret
fildl
or
icebp
jb
loope
or
sub
sub
sub
or
mov
rorb
repnz
xchg
imul
popa
sti
popf
rclb
xor
aaa
fwait
mov
jge
rcr
pop
cld
xchg
scas
mov
sbb
jge
mov
cmp
mov
inc
adc
mov
ret
mov
hlt
jns
ds
cli
xor
sbb
loop
ja
and
shll
mov
cmp
dec
push
lock
inc
fistl
xor
mov
push
popa
mov
mov
addr16
popf
fwait
out
in
pop
xchg
pop
push
add
out
cmp
pop
xor
add
jo
xchg
adc
or
mov
cmp
mov
xchg
ljmp
bnd
xor
mov
pushf
lods
xchg
clc
jle
cmpsb
and
adcl
stos
jo
adc
fcomps
push
mull
je
jae
aaa
fwait
adc
push
jnp
inc
ljmp
inc
mov
xchg
ret
xchg
dec
insb
pop
shlb
pop
std
das
dec
jle
lods
repnz
stos
fldt
movsb
mov
adc
xchg
test
addr16
or
shrb
jno
je
and
xlat
xor
call
out
xchg
dec
stos
mov
stos
adc
fists
push
mov
inc
adc
mov
cmpsl
pop
pop
addl
mov
enter
push
and
jg
stos
jo
fists
les
faddp
aam
xchg
insl
cmp
xor
sti
mov
and
dec
sub
icebp
aad
das
xchg
jb
flds
add
add
cld
mov
cmp
xchg
test
inc
jns
xor
rorb
jle
rcll
movsl
jno
test
jge
mov
es
jno
pop
arpl
lods
mov
xor
cmp
mov
mov
and
push
pushf
imul
mov
bound
js
sub
fiadds
les
mov
leave
inc
push
lds
mov
test
and
andb
dec
sbb
cs
and
outsl
cmpsb
test
ret
pop
adc
cmp
and
lock
push
inc
mov
fcompl
fiaddl
ret
xlat
push
leave
mov
pusha
inc
sbb
mov
lds
test
cmp
cmp
adc
sub
inc
xor
leave
xchg
or
mov
mov
dec
in
das
test
adc
rorb
push
enter
nop
sub
pop
pop
ja
ret
pop
mov
push
mov
fists
cwtl
ds
jle
movsl
test
push
or
cmp
cmc
sbb
sarb
xchg
cld
mov
jns
pop
mov
lds
out
inc
dec
mov
stos
fistpl
fwait
push
int
out
inc
sarl
adc
inc
dec
dec
repnz
xor
adc
and
movsb
jns
cmc
daa
dec
adc
cmp
hlt
or
xchg
or
cmp
pop
mov
xchg
sub
pop
sbb
test
inc
inc
pop
iret
div
into
jmp
mov
imul
pop
xor
repnz
jne
mov
push
movsb
inc
popf
and
jecxz
jno
or
and
add
pushf
push
andl
repz
mov
mov
push
int
movl
jne
out
pop
imul
mov
out
mov
and
sbb
hlt
sub
test
fs
push
add
orb
in
in
mov
push
insl
mov
mov
cmp
adc
mov
add
sub
mov
fiaddl
stos
leave
xor
pop
nop
ja
into
adcl
push
lret
lcall
pushf
dec
fs
je
leave
in
pushfw
cltd
aas
cmpsl
lret
rorb
mov
sbb
jecxz
aas
xlat
ljmp
inc
std
cmp
and
jp
orl
sbb
mov
or
js
pop
pop
stos
cmp
orl
pop
es
add
push
shlb
shrb
jp
pop
sub
pushf
fwait
pop
aad
mov
rcrl
call
scas
adc
push
push
mov
ljmp
pop
rorb
not
in
clc
inc
xchg
cmp
jns
mov
or
fistl
pop
add
out
or
mov
xchg
enter
push
jae
adc
shll
ja
std
inc
and
sub
push
xchg
leave
mov
and
iret
rcrl
xchg
adc
add
call
xor
mov
dec
lock
mov
push
xchg
in
mov
jl
arpl
jecxz
mov
mov
mov
popa
mov
leave
adc
rdpmc
ret
cs
cmp
cmp
inc
fldl
jecxz
std
movsb
push
inc
in
xor
mov
sub
mov
pop
xchg
inc
and
xor
sbb
jno
orl
ja
imul
test
mov
adc
or
jmp
push
xlat
daa
setne
dec
mov
pusha
adc
das
in
roll
fsubrl
jle
cs
adc
and
rcll
jmp
jg
cmp
mov
or
cltd
je
aam
gs
add
rcrl
xchg
cmp
xchg
pop
jg
pusha
cmpsl
mov
decb
jmp
sub
lcall
push
outsl
jp
xchg
mov
pop
or
repz
scas
xchg
or
lret
lods
in
imulb
les
pop
mov
leave
pop
ret
cmp
call
scas
int3
nop
dec
iret
movsb
movzwl
mov
mov
pop
mov
push
jp
dec
add
js
lods
outsl
mov
pop
adc
negb
fists
xor
ja
dec
sub
sbb
cmpsl
sbb
push
call
mov
out
xor
jns
jmp
test
dec
insl
dec
inc
push
mov
scas
inc
testb
adc
mov
outsb
fisubs
iret
adc
jo
ret
aad
push
pop
push
movsl
xlat
in
sar
je
outsl
ss
jno
nop
sub
jns
cmp
out
dec
andb
add
arpl
mov
cwtl
movsl
movsl
mov
aas
lds
and
adcb
xor
pop
mov
cmpsl
aad
pop
pop
shrb
xor
xor
add
rorb
cmp
inc
dec
fucomip
ss
das
lcall
and
adc
out
rclb
aaa
jl
test
adc
mov
nop
sub
mov
pop
mov
dec
jnp
fmulp
rcr
inc
dec
sti
scas
mov
sub
mov
jb
fmuls
js
gs
push
cmpb
dec
fs
adc
dec
popa
inc
movsb
icebp
out
outsl
in
pop
je
mov
negl
shlb
inc
cmp
and
ret
lret
add
push
mov
sbb
mov
and
sub
sbbl
dec
rorb
aam
popa
mov
lcall
jae
inc
js
sbb
lods
hlt
int
mulb
enter
adc
inc
jmp
cmp
mull
mov
call
fldlg2
adc
sbb
pop
cmpsb
outsl
test
mov
xor
imul
es
les
push
adc
jg
mov
mov
mov
mov
stos
rcll
imul
sub
int3
iret
jmp
cwtl
hlt
stos
pushl
adc
sti
jne
js
rorb
test
repnz
mov
jbe
lds
addr16
mov
rcrb
sub
mov
mov
ss
dec
imul
les
adc
popf
or
testb
sbb
dec
jns
popf
in
daa
xchg
cmp
lahf
popa
and
fdivp
stos
lock
lods
mov
adc
pop
cmc
or
jmp
je
cld
xor
sbb
shr
jnp
fstl
es
stos
leave
es
adc
scas
popf
pop
scas
mov
js
sub
sbb
loope
mov
lcall
jo
in
cmp
sub
dec
xor
mov
add
adc
lret
mov
xchg
pop
imul
pop
mov
fcoms
insl
push
inc
and
movsl
daa
mov
xchg
cmpsb
imul
ljmp
fdivr
jge
push
dec
clc
aad
inc
adc
and
loope
push
mov
push
je
cmpsl
arpl
mov
sbb
sbb
inc
test
shll
pop
mov
fisubs
or
aaa
call
pop
or
cmpsb
lahf
and
mov
not
sbb
fwait
sahf
fmuls
js
inc
dec
pop
jle
jp
jbe
jg
div
idivb
lods
or
pop
push
xchg
push
adc
jbe
es
cs
lahf
ror
xchg
adc
xor
push
mov
push
xchg
push
pop
je
in
mov
push
shr
mov
int
fcmove
cmp
mov
jo
xor
mov
ljmp
dec
dec
sti
adc
dec
popf
push
adc
add
test
jl
xlat
jp
lock
push
xchg
pop
add
add
xor
mov
std
mul
mov
inc
aam
push
shlb
loop
js
mov
xor
jo
jle
dec
cli
shl
jle
xorl
push
lret
fistps
adc
repz
hlt
ror
jle
push
jmp
and
cmp
and
in
jns
xor
movsl
sub
push
mov
scas
dec
add
lret
xor
ss
jle
fmull
idiv
inc
inc
mov
adc
shr
scas
cmp
jnp
popf
xchg
gs
xchg
jno
add
nop
cmp
lret
adc
add
mov
push
daa
and
scas
stos
adc
pop
into
and
push
jo
push
aaa
sbb
fsubr
call
inc
adc
decb
jle
cmp
pusha
adc
cmpb
hlt
cltd
sbb
mov
das
xchg
xor
ss
movsb
push
mov
test
fsubr
les
push
rcl
cmpl
mov
ss
and
adc
int3
js
sub
lods
sbb
dec
test
rolb
push
mov
xor
scas
jge
xchg
cs
cmp
mov
loop
cmp
cld
or
xor
jnp
sub
xchg
jp
jns
addr16
xor
mov
fcmovu
inc
pop
rcll
adc
mov
stos
fs
test
add
cmp
inc
fcmovnbe
sub
mov
adc
insl
test
sub
pop
aad
push
js
fildl
rorb
fs
lahf
jmp
cmp
notl
jl
sub
push
cwtl
lret
mov
aas
out
push
xor
jle
pop
inc
or
lods
xchg
sub
push
cmp
or
mov
lds
and
imul
mov
addr16
jno
call
bound
or
cmp
sarl
aas
out
hlt
outsb
xchg
adc
lods
cltd
inc
jne
cmp
mov
inc
pop
push
xchg
vpmulhuw
iret
faddl
jmp
inc
and
lock
in
loopne
add
or
imul
mov
xlat
idivl
aas
jle
test
jo
jns
gs
loope
shrb
push
mov
sbb
adc
jp
pop
sbb
xor
xor
sub
mov
xchg
in
adc
jle
sub
es
data16
xor
jb
in
stc
pop
mov
or
and
push
adc
mov
sbb
mov
aad
sbb
hlt
mov
lods
sbb
and
mov
mov
test
lea
add
and
xlat
mov
mov
sub
subl
in
xchg
ret
lret
dec
les
les
sahf
rcll
nop
add
fst
roll
or
js
sbb
leave
sub
push
inc
fs
or
daa
cli
ja
sub
dec
dec
aas
into
jmp
aam
pop
mov
and
dec
movsl
out
push
ds
adc
aad
jns
inc
repnz
dec
subl
jno
imul
es
fs
xchg
scas
jno
lret
cmpsl
negl
push
sbb
mov
pop
stos
bswap
push
mov
inc
push
sti
outsl
dec
dec
ret
je
jg
loop
adc
call
mov
cmpsl
shrb
call
test
mov
mov
mov
mov
pop
outsl
xor
into
in
imul
sbb
push
xchg
add
out
lods
add
adc
clc
test
das
xor
mov
insb
popa
mov
loopne
xor
sti
cmp
push
sbb
xchg
or
sarb
test
adc
jnp
mov
insl
add
ja
enter
push
pop
stos
lahf
adc
push
sub
push
cmp
imul
mov
jp
mov
mov
rcll
jle
cwtl
fwait
stos
jne
jle
adc
inc
xchg
add
jmp
lcall
pop
mov
xchg
lret
inc
dec
movsb
dec
out
jb
jmp
lock
test
das
push
in
pop
rcrb
inc
sbb
out
pop
pop
cmp
and
sub
sbb
adc
ror
test
inc
mov
xor
dec
and
int
out
test
jns
inc
js
sub
dec
repnz
or
std
inc
call
jno
jae
and
inc
aad
inc
and
int
xchg
sub
sbb
movsb
jno
mov
add
mov
mov
and
test
add
lret
out
mov
test
xchg
sbb
mov
push
sub
mov
or
jg
into
shl
je
outsb
sub
cmp
addr16
sbb
fcmovnu
sbb
sub
mov
enter
sub
cmp
jp
add
lret
outsb
int3
and
mov
cwtl
fabs
sbb
rcrb
movsl
jae
xlat
lods
ret
fildl
mov
xor
dec
flds
and
daa
push
xchg
add
inc
ljmp
std
jne
movsl
mov
xchg
movsl
test
xor
cwtl
push
stos
insl
data16
out
in
jp
xchg
inc
rorl
push
movsl
test
arpl
pop
hlt
add
shr
jno
mov
xlat
and
lret
test
data16
dec
jno
mov
mov
int
mov
push
push
mov
mov
sub
inc
movsl
push
push
sahf
es
adc
inc
shll
mov
pop
sub
mov
adcl
pop
cs
and
dec
sahf
js
or
adcb
and
xor
fwait
mov
add
xchg
inc
mov
test
aam
fimull
jp
inc
enter
imul
mov
dec
pop
or
inc
jmp
in
dec
into
mov
dec
fiaddl
adc
cltd
sub
jns
adc
mov
negl
repnz
imul
daa
pusha
mov
and
and
idivb
loopne
jle
enter
cmpb
adc
repz
inc
pop
xor
inc
push
and
bt
push
fstps
add
sub
hlt
in
pop
mov
ret
and
push
push
and
sub
aas
repnz
xchg
mov
jbe
sub
into
jmp
jg
xor
scas
add
jbe
scas
rorb
loope
aas
ja
xchg
mov
mov
negl
repz
xor
in
fwait
add
xchg
dec
fistpl
jg
out
fisubl
cmc
sti
inc
sbb
je
add
rcrb
push
ja
inc
cmp
es
sub
call
cmpsb
test
fadds
int
push
mov
stos
pushl
js
mov
fnstsw
mov
mov
rorb
push
sbbb
ss
ficompl
roll
aaa
fistl
pop
push
ds
xchg
lods
lahf
jmp
aam
test
mov
daa
aad
leave
call
mov
cmc
cmp
ljmp
pop
adc
jno
adc
jo
clc
xor
push
repnz
mov
cmp
or
cmp
loop
and
fsubs
cwtl
jnp
cmpl
pop
add
shll
jnp
mov
aam
cmp
hlt
xor
push
xchg
stc
leave
outsl
mov
mov
adc
push
cltd
dec
cmp
inc
pop
lret
ficoml
mov
sarl
idiv
pop
jl
cltd
imul
jg
movsl
test
pop
jb
xchg
out
imull
fidivrs
mov
inc
mov
repz
call
adc
push
sbb
and
pop
jmp
data16
mov
jns
out
xlat
mov
cmpsl
xchg
lret
jmp
sbbb
jno
mov
mov
inc
sub
fsubr
mov
out
rcrl
sub
negl
mov
cmc
cs
lsl
mov
aam
adc
jecxz
int3
xor
jmp
pop
shrl
rcrl
push
dec
mov
loopne
dec
lret
rcrb
pop
pushf
mov
aad
pop
or
ljmp
cmp
cli
insb
rclb
dec
xchg
or
adc
xchg
pop
push
inc
pop
adc
stos
lock
aad
sahf
xchg
cmpsb
imul
push
inc
mov
bsr
lahf
xchg
xor
sub
push
cmp
or
scas
or
pop
popa
fwait
cmp
adc
andl
cli
pop
mov
stc
pop
cmp
push
push
dec
push
jle
xchg
push
lret
cmc
fsubp
cld
and
mov
daa
dec
repnz
xlat
inc
loop
popa
add
xor
sbbb
lret
out
xor
hlt
outsb
lcall
cmp
mov
not
sub
sub
pop
js
jp
and
std
std
jl
cltd
aaa
mov
fmuls
jecxz
xchg
imul
mov
mov
push
das
adc
cwtl
jno
inc
sub
test
push
sbb
cmp
sbb
xor
pop
adc
rcr
aaa
jae
lret
mov
push
idivb
js
aad
xor
shlb
pop
mov
lods
loope
popf
sub
or
test
mov
sbb
leave
mov
fucomip
push
enter
or
in
inc
pop
and
push
aas
loopne
dec
aad
xchg
push
dec
lret
scas
pop
push
xchg
mov
ljmp
and
in
out
cmc
jmp
xor
popa
jmp
scas
adc
std
out
fdivrl
ds
jno
sarb
or
int
aas
add
imul
orb
arpl
add
lahf
ficomps
push
jne
pop
or
sbb
xchg
jmp
loop
repnz
fmuls
je
sub
push
xchg
stc
push
mov
inc
in
pop
push
inc
mov
sbbl
loop
xchg
divl
xor
cmpsb
jp
push
cmp
lea
pop
out
fbstp
adc
inc
arpl
xchg
sbbb
cltd
movaps
push
outsl
mov
dec
push
ds
loope
fwait
mov
xor
adc
hlt
addb
xchg
es
imulb
sbb
mov
jbe
add
es
aad
pop
cmp
data16
ret
adc
jnp
add
sub
mulb
cmovns
jne
loope
jmp
movsl
negw
aas
inc
jno
xchg
jmp
pop
dec
aam
int3
test
dec
icebp
cmp
ja
cwtl
pop
mov
clc
repnz
mov
xor
jge
ds
pop
xchg
inc
mov
adc
cmpsl
and
xor
mov
aas
xor
les
jne
mov
jb
fbstp
faddl
push
mov
in
add
jmp
rol
jno
out
cwtl
cwtd
test
icebp
aad
mov
and
cmp
pop
btr
xchg
mov
adc
push
ficomps
cld
test
icebp
repz
jg
orb
mov
xor
lods
lods
cld
jnp
mov
mov
dec
orb
mov
int
daa
pop
lods
in
les
out
rclb
inc
or
pop
dec
movsl
mov
cmp
mov
sbb
lods
mov
not
sbb
ret
hlt
adc
clc
in
inc
push
lcall
pop
and
jne
jb
push
or
mov
push
sarb
lahf
fstps
lock
jg
data16
and
pushf
jnp
pop
lods
ret
ss
inc
rcl
pop
adc
sahf
aad
pop
test
push
les
inc
push
inc
movsb
xor
jg
clc
sub
inc
mov
sti
cltd
xchg
bound
xor
sbb
mov
dec
lret
ja
or
mull
xchg
add
imul
out
xchg
add
out
cltd
dec
add
dec
ds
mov
out
lds
sahf
cmp
je
pushf
pushf
inc
pop
xor
or
push
jnp
rcl
ret
mov
push
mov
ja
sbb
jno
xchg
and
mov
push
int
push
jge
in
ret
lret
pop
ficoms
gs
lds
mov
add
inc
sub
sub
ja
xchg
jno
lahf
xlat
sahf
mov
int3
arpl
lret
and
ja
fildll
sbb
pop
jbe
fistpll
icebp
repnz
loop
pop
lods
xchg
xor
inc
adc
dec
pop
fsubp
lea
sub
mov
mov
insb
movsb
scas
pusha
xor
push
cmp
lret
pop
jns
pop
xchg
popf
cmpsb
sbb
ss
sbb
clc
pop
sbb
mov
clc
mov
test
lahf
lahf
lds
in
pusha
pop
adc
add
lods
xor
push
stc
das
or
rcr
repnz
out
cltd
push
pop
and
sub
jge
cmc
aas
push
lahf
or
fdivrs
unpcklps
aad
stc
iret
inc
pop
clc
cmp
cmc
mov
sub
push
das
test
das
or
lds
inc
xchg
ret
mov
scas
popa
subl
adc
pop
in
shll
add
in
lcall
shr
aas
loop
jo
fdivr
xchg
cmp
sub
pushf
out
mov
imul
stos
jo
mov
lret
cld
outsb
mov
jle
rolb
rclb
push
push
jge
sbb
icebp
fwait
enter
adc
mov
dec
mov
xlat
push
je
sub
mov
lea
shlb
and
pop
fcoml
cs
push
pop
pop
pusha
or
pop
es
cmp
out
pusha
fiaddl
mov
push
add
adc
xor
aam
sbb
sbb
add
aad
and
mov
loope
push
xchg
xor
and
inc
stc
fsub
add
push
cmpsl
jns
pusha
rcrl
inc
sub
sbb
mov
jmp
jne
mov
fistpl
test
mov
ret
cmp
mov
aam
add
loope
cmpsl
dec
stc
push
lds
jmp
push
jmp
test
pop
rcll
mov
ja
or
arpl
aaa
into
repz
inc
insb
jo
sub
aam
push
push
fidivrl
in
stos
jle
sarl
pop
and
stc
push
fidivs
cmp
lret
popf
jae
cmp
mov
adc
dec
pop
xchg
xor
mov
ljmp
pop
pushf
or
mov
lods
cltd
les
jmp
or
movsb
icebp
pop
cld
shll
and
ds
and
push
pop
rcll
pop
cmp
stos
cmc
mov
xchg
dec
lds
xchg
xchg
mov
cli
fildl
dec
fdivr
push
and
mov
or
lods
pop
inc
out
and
dec
push
mov
jg
jbe
int
inc
cmp
xor
push
stc
sub
rclb
add
pusha
push
pushf
mov
cltd
call
sub
fistpl
jb
add
or
sub
push
test
cmc
jecxz
xorl
xor
sbb
scas
xor
fs
and
in
sub
xchg
out
dec
data16
pusha
jb
jle
jne
test
sbb
ja
stc
mov
stos
mov
jg
inc
addr16
scas
jo
iret
pop
rcr
dec
push
rolb
out
inc
jns
dec
shrb
sbb
pop
jo
dec
pushf
popl
test
test
iret
dec
push
fbld
es
divb
adc
mov
scas
mov
popf
movsb
adc
fbld
out
subl
jge
sub
pop
nop
and
shrl
ds
inc
ds
das
pop
jecxz
xchg
or
jo
push
cwtl
sbb
adc
aam
cmpsb
cmc
insb
dec
aaa
je
std
stos
in
mov
in
ffreep
mov
dec
repnz
pop
enter
rcll
loop
stos
stos
xor
shrb
mov
xchg
push
ds
and
add
jae
scas
adc
mov
inc
or
xchg
and
dec
inc
icebp
fcoml
cmp
insl
push
mov
loope
or
enter
mov
cwtl
sub
leave
aaa
jle
and
push
mov
add
inc
dec
daa
repnz
xor
fs
pop
xchg
test
jp
aaa
cld
inc
loope
test
jns
cwtl
mov
sbb
push
or
xor
ds
and
or
outsb
loope
jg
pop
out
sti
inc
lock
lret
jmp
ret
fldl
lods
rcrl
scas
lahf
mov
daa
lods
ficompl
in
adcl
sbb
xchg
mov
jge
push
fdivrl
pop
xchg
jg
dec
sti
shll
pop
push
adc
punpckldq
jns
xor
rolb
or
ret
imul
sub
cmpsl
sbb
adc
cmp
xchg
rorb
lea
repz
divb
cltd
xor
jo
js
ljmp
inc
sbb
push
aaa
aas
lock
or
imul
pop
mov
outsl
js
push
mov
stos
jge
and
or
add
dec
into
mov
loope
lods
mov
pop
pop
frstor
push
mov
std
lret
sbb
xchg
or
jb
es
daa
xchg
adc
inc
call
lods
mov
int3
daa
mov
mov
shll
loope
xor
or
je
dec
xchg
shlb
fidivs
js
mov
fwait
adc
dec
fmuls
and
stos
dec
nop
aad
sbb
cld
test
shlb
cmp
mov
sub
shr
sub
xchg
add
pop
arpl
push
add
jo
das
and
add
jmp
mov
lea
xchg
mov
imul
movsl
pusha
notb
outsb
lcall
ss
clc
inc
jge
int3
inc
iret
xor
outsl
mov
sbb
cmpsb
xor
push
loope
std
dec
aaa
insl
ror
aad
ret
movsb
sub
lahf
push
cmp
mov
fwait
mov
daa
data16
adc
ja
push
add
or
add
push
adc
mov
pop
push
out
or
add
push
jnp
sbbb
dec
and
adc
sbb
cmpsl
xor
mov
out
into
sub
xor
fsts
pop
frstor
mov
test
ss
jecxz
into
stos
jb
sub
ret
jno
hlt
das
mov
popa
cmp
jecxz
inc
movq
faddl
popa
add
shrb
shlb
sbb
mov
dec
cmpsb
sti
hlt
adc
scas
or
loope
jmp
inc
adc
sahf
dec
iret
adcl
adc
mov
out
pop
aad
out
das
or
outsb
pushl
xchg
or
pop
in
lods
lret
cld
ljmp
call
sub
xchg
roll
and
pop
rcrl
scas
and
dec
sbb
pop
and
stc
and
xchg
jle
add
mov
jp
sbb
cmp
mov
icebp
add
cmp
or
mov
mov
aam
xor
and
push
enter
pop
mov
sub
xchg
daa
add
test
enter
pop
cmpsl
out
out
and
test
sub
out
inc
xchg
outsl
fimull
leave
rclb
std
jge
add
nop
mov
pop
bswap
add
mov
int
nop/reserved
loop
and
sub
inc
js
push
xlat
xor
imul
enter
pop
mov
or
cli
ds
shrb
std
mov
cmp
aaa
hlt
imul
jnp
cmpsl
data16
das
mov
mov
push
out
sbb
xchg
sbbb
std
or
xchg
enter
aaa
imul
mov
ret
imul
mov
xor
push
cmpsb
pop
add
cs
loope
jp
mov
stc
out
push
imul
mov
mov
ret
das
xchg
mov
fcmovb
and
iret
fsubp
lea
jno
in
shl
dec
mov
imul
gs
mov
push
adc
mov
pop
mov
adc
mov
push
xchg
jmp
inc
sbb
inc
mov
fsubrl
je
pop
pop
jo
xor
in
and
data16
xchg
mov
mov
int
xor
inc
xchg
cmc
jecxz
pop
adc
aad
gs
mov
jmp
jle
int
in
adc
xchg
in
daa
cmp
iret
repz
lods
sub
sub
pop
dec
xor
mov
mov
lret
mov
rorl
jp
in
xor
inc
push
mov
popa
sti
cmp
sbb
xchg
xchg
and
mov
aaa
nop
roll
mov
push
and
fs
popa
pop
cwtl
fadds
adc
jl
jae
out
and
push
jl
rorl
je
xchg
cmpsl
dec
dec
sbb
test
sbb
and
lods
cld
jmp
outsb
mov
mov
xchg
psrlq
mov
js
andl
adc
mov
out
cmpsl
clc
lods
int3
pusha
mov
je
inc
jae
push
shrl
les
pop
adc
or
jo
push
rcl
or
in
pop
out
adc
mov
movsb
push
mov
imul
test
loopne
ja
xchg
sbb
shlb
lret
cmpsl
xchg
movlps
cltd
mov
outsl
add
add
jo
filds
sbb
movsl
in
or
pop
sub
pop
and
mov
cmp
jne
popf
ljmp
push
cmpsb
mov
cmp
xor
hlt
addr16
inc
inc
mov
imul
lods
inc
sbb
sbb
xor
fsts
mov
mov
shr
mov
push
repnz
or
sub
test
pop
hlt
loope
lret
sbb
nop
pop
sub
inc
arpl
aam
pop
in
call
sub
inc
dec
daa
xor
pop
and
jb
pop
fists
inc
inc
iret
stos
xor
mov
pushf
xchg
inc
mov
leave
enter
and
pushf
or
lcall
push
inc
aaa
mov
mov
inc
xor
inc
or
push
push
mov
adc
jo
test
mov
xchg
pop
pop
int
je
inc
xchg
pop
sub
push
jb
std
pusha
pop
test
daa
andb
lcall
mov
or
pop
push
into
movsl
dec
stos
push
add
rclb
or
or
pop
pop
loope
icebp
outsl
dec
mov
stos
aam
pop
xchg
bound
and
mov
dec
push
mov
mov
and
cmp
icebp
mov
in
ds
push
xor
les
scas
push
divl
and
iret
test
mov
out
es
mov
add
adc
sub
pop
out
unpcklps
clc
pop
dec
xor
es
mov
dec
or
test
jl
jo
sbb
mov
rol
insl
pop
or
loop
xorl
xchg
aas
push
mov
aam
in
jae
mov
outsb
cmpsl
test
mov
ret
push
daa
or
cli
adc
iret
lods
fbstp
movsb
add
aam
repz
and
ja
adc
jl
scas
je
addr16
cmp
jb
out
sbb
call
mov
shrl
movsl
mov
xor
les
lahf
popf
cwtl
push
sti
jecxz
loope
inc
xor
sbb
lret
stos
jmp
imul
out
stc
push
push
push
xor
or
arpl
inc
adc
sub
mov
notb
or
jle
lahf
mov
lcall
js
mov
jecxz
dec
pop
jle
lret
sti
out
out
lret
push
cwtl
xchg
jmp
ss
lret
push
mov
push
push
or
pop
add
je
mov
sbb
xor
arpl
popf
xchg
mov
dec
loope
stos
add
jmp
xchg
xlat
mov
mov
pop
popw
lods
push
add
aam
mov
mov
mov
xchg
add
dec
xor
xor
cmp
or
jbe
mov
jns
fidivs
fs
xchg
sti
sub
loopne
in
inc
cmpsl
mul
add
stc
arpl
call
cmp
mov
ret
jle
int
mov
pop
stos
mov
jne
push
jecxz
or
andl
aas
movsb
pop
sub
pop
andl
mov
sub
sbb
and
loopne
dec
mov
dec
loopne
sbb
push
sbb
cltd
cmpsl
scas
rcrb
jecxz
jmp
pop
fwait
ret
imul
xchg
push
push
add
and
ror
mov
ds
or
test
push
xchg
call
inc
or
mov
or
pop
negl
cmp
scas
nop
sahf
cld
and
cmpsl
and
mov
dec
mov
cli
push
add
shll
jbe
in
cli
dec
mov
mov
mov
stos
cmp
popa
mov
data16
bnd
hlt
push
mov
jae
or
jecxz
jns
into
pop
push
sbb
loop
gs
xlat
or
jb
bound
fldenv
mov
insl
mov
jecxz
fnstcw
sub
or
sbb
iret
ja
or
and
popf
and
cmp
mov
xchg
das
fstpt
xlat
xor
sub
pop
fdivrs
inc
fstpl
fmull
jp
movsl
push
leave
xchg
push
push
pop
sbb
dec
loop
cmp
out
inc
inc
sub
jb
cld
imul
and
push
insl
or
cmp
adc
mov
cmp
push
pop
push
sbb
inc
ret
sub
shr
fwait
adc
fists
or
stos
sbb
mov
insl
jle
lds
jns
push
xchg
xchg
fnstsw
inc
stos
cwtl
cvtps2pd
jns
adc
push
lret
push
mov
push
shll
daa
sbb
loope
dec
das
aas
imul
mov
push
ljmp
adc
mov
repz
test
lods
fbstp
mov
lss
ror
mov
adc
lahf
mov
pop
mov
add
ds
das
sti
out
adc
push
lret
jo
or
jl
decl
inc
jne
lea
and
jae
in
or
aam
add
mov
mov
fnstcw
loop
into
jbe
mov
iret
add
das
mov
into
sahf
cs
out
js
add
adc
or
loop
and
xchg
pusha
or
fidivrs
mov
push
mull
jge
sbb
outsl
push
cmpsl
mov
stc
andl
sub
lret
adc
push
jl
and
loopne
ja
aaa
jnp
sarl
jp
lds
adc
jns
push
andl
and
std
push
xchg
loop
jge
test
xlat
fcoml
imul
xor
out
cmp
shrl
sub
negl
inc
add
test
xchg
xor
push
jae
test
mov
or
test
rorl
or
or
xor
mov
fidivrs
cmp
mov
mov
clc
leave
lahf
xlat
ljmp
aas
cmpsb
in
pop
scas
or
cmpsl
andb
pop
lock
pop
jne
js
mov
ret
ret
sub
mov
movsl
mov
out
imul
rcll
push
mov
mov
mov
lcall
adc
cmp
dec
xchg
bound
cmp
sub
push
rclb
stc
repz
push
test
mov
add
lea
mov
dec
popf
addr16
sub
mov
and
int
fwait
inc
lods
loopne
pop
inc
enter
ds
xchg
mov
adc
test
xor
pop
mov
jo
fdivs
sub
stos
test
into
popf
lods
iret
mov
add
dec
mov
dec
cli
or
cli
mov
cmp
mov
jle
push
and
decl
shrb
dec
sbb
xchg
iret
pop
stc
icebp
adc
lods
mov
mov
jmp
adc
cmc
es
stos
stos
sub
sub
scas
add
repz
dec
push
decl
sbb
and
addr16
mov
fdivrs
push
ja
pop
inc
mov
and
jg
xchg
loopne
sbb
lods
jge
cwtl
loope
stos
pop
sub
ret
mov
mov
pop
mov
cmpsb
int3
cmp
test
dec
cli
dec
inc
mov
loopne
push
sub
pop
pop
mov
loop
inc
lock
imul
fcoml
out
mov
inc
dec
fcomps
int3
daa
mov
std
pop
jp
push
dec
sbbl
les
bswap
pop
sbb
iret
paddq
add
adcb
arpl
enter
sub
pop
shl
sub
jl
adc
cld
inc
icebp
imul
scas
sub
pop
add
aas
loop
mov
add
adc
enter
fiadds
cmpsl
scas
ret
and
test
icebp
cmp
test
xlat
push
jecxz
and
dec
dec
lcall
ss
mov
push
test
mov
or
xor
dec
cmp
inc
jns
or
pop
out
sbb
or
dec
in
inc
sub
loope
lret
ja
jno
or
fsubp
or
out
sahf
pop
pop
int
pop
adc
mov
cmp
add
mov
dec
mov
push
inc
lahf
iret
movsb
ss
or
mov
xchg
mov
push
loope,pn
jne
test
mov
enter
leave
cltd
dec
lods
xchg
push
cmpsl
add
cmpsl
stc
sub
mov
push
mov
adc
xchg
and
in
ljmp
lret
xchg
data16
mov
mov
mov
push
add
xchg
mov
adc
jae
dec
add
pop
scas
xchg
mov
out
add
lds
xchg
or
mov
or
in
out
push
cmp
cmp
test
lds
out
cmp
xor
and
or
test
lock
push
sar
or
inc
sbb
mov
or
aaa
push
arpl
rcrl
sbb
adc
mov
test
scas
jno
ret
adc
fnsave
jbe
cmp
add
rcrl
insb
mov
mov
fistpll
xchg
add
cmp
pop
stos
pop
pop
ret
loopne
jg
fsts
hlt
cld
sub
adc
in
cmpsb
and
adcb
outsb
out
or
xlat
xor
insl
fstpl
cs
jmp
add
iret
lret
mov
xor
jb
sbb
ds
pop
movsl
jge
js
push
lods
xchg
iret
dec
fwait
pop
rorb
stos
imul
ret
or
pushl
adc
push
fwait
xchg
mov
push
lcall
sub
mov
addr16
xorl
ret
pop
in
pop
std
pop
mov
dec
jo
and
fstps
lcall
aad
das
sbb
pop
jne
adc
outsb
movsl
xchg
mov
fwait
dec
fdivrl
or
dec
movsl
mov
push
sti
popf
fstpl
fwait
scas
sub
xor
jge
lods
pop
adc
adc
push
push
pmaxsw
das
xor
sub
test
icebp
lahf
fnsave
aad
arpl
cmp
sti
test
pop
mov
or
mov
into
dec
mov
jnp
shrl
pop
pop
outsb
sar
pop
xchg
shrd
and
addb
dec
dec
jmp
cmp
jne
je
pop
lcall
pop
sbb
arpl
orl
testb
xchg
loop
adc
jge
add
cmp
mov
aad
bound
sub
dec
aam
int
pop
bound
scas
inc
jns
std
push
jns
or
test
mov
icebp
into
xchg
repnz
inc
cmp
pop
lods
out
push
xor
mov
in
add
and
pop
lds
int3
mulb
inc
xor
cmp
insl
adc
push
imul
pop
mov
mov
loopne
add
add
sbbl
fistpll
les
test
nop
jp
cld
das
mov
stos
adc
mov
test
repnz
lods
cmp
in
jmp
or
and
sahf
movsl
fisttpl
jecxz
loopne
mov
and
mov
out
cmpsb
sub
fldenv
push
mov
ja
dec
sbb
jbe
add
jle
scas
fmulp
test
dec
sar
loopne
cld
lock
and
xor
mov
jg
and
pop
cmp
add
add
hlt
inc
stc
repz
lods
dec
sbb
addr16
outsl
aas
sub
push
mov
outsl
ror
mov
int3
sub
mov
xor
sarb
stos
pop
or
xor
adc
add
dec
fisubrl
mov
insb
or
test
mov
int
cmp
mov
adc
xchg
fwait
leave
sbb
xor
test
mov
cmp
mov
stos
xchg
fwait
push
jg
in
jge
imul
pop
sub
adc
dec
mov
mov
test
push
rolb
or
dec
cwtl
out
add
sbb
dec
popl
and
xchg
add
ljmp
cmp
pop
in
push
inc
xor
jmp
andl
push
sbb
xchg
fnstsw
incl
jl
lcall
out
mov
nop
negl
jp
jge,pt
out
pushf
jmp
mov
icebp
push
and
in
or
jo
dec
shll
popf
jae
add
cmp
jge
jg
cmp
ja
lods
push
fwait
mov
scas
cs
inc
xchg
sbb
xor
repnz
fs
xor
rcl
lock
jne
xor
sti
dec
cwtl
and
sub
or
cvtps2pd
inc
aam
outsb
pop
adc
sub
in
decl
xchg
jmp
adc
negl
int
pop
loop
xchg
push
mov
daa
adc
nop
or
pop
jnp
or
sub
dec
add
int3
lcall
inc
leave
outsl
dec
adc
pop
xchg
fmull
arpl
cmp
lahf
adc
int3
mov
ljmp
adc
pop
dec
imul
xchg
sar
inc
outsb
mov
dec
rclb
ror
add
push
dec
adc
insb
push
mov
mov
and
stos
sahf
fadds
cmpsb
hlt
jo
jmp
testl
js
lock
mov
mov
push
sbbb
call
in
decl
shrb
test
xchg
sahf
lods
mov
gs
xchg
mov
roll
sub
mov
aaa
jl
adc
add
std
sub
mov
lods
mov
ret
loopne
push
pop
inc
cli
dec
xlat
xchg
popf
push
xchg
shl
cmpsb
pop
icebp
sbb
cmp
mov
add
inc
push
add
shll
sbb
xor
rcl
iret
jg
lret
mov
outsl
jecxz
add
fildll
jecxz
xchg
fmull
out
jae
adc
adc
aas
add
push
shl
insb
lods
popf
es
in
inc
add
jge
jae
mov
push
xchg
dec
jge
pushf
lret
xor
sbb
sahf
stos
or
ror
cld
cwtl
jno
mov
shlb
push
mov
lea
movsb
lods
das
pop
and
out
sub
cltd
cmp
push
add
adc
or
cs
xchg
test
and
dec
bound
jnp
aaa
mov
dec
xor
pop
je
sub
ret
inc
in
cmpsb
pusha
jne
ja
adc
popf
xor
sarb
jno
test
orb
int
pop
or
push
sbb
lods
out
in
insl
add
shrl
xchg
cmpsl
nop
or
pop
dec
inc
clc
push
inc
movsb
add
cmp
pop
test
mov
push
sub
push
sub
push
or
fcom
and
dec
add
jbe
xchg
push
dec
or
xlat
mov
les
and
adc
mov
dec
minps
push
xchg
mov
xchg
mov
xchg
and
xchg
fsubl
lret
push
pop
dec
jae
and
add
or
lcall
mov
inc
scas
ds
pusha
test
push
jo
int
int
out
sub
sub
and
and
bound
pusha
xchg
fisubs
and
test
jb
out
stos
out
shll
lret
fnsave
push
xor
mov
sbb
cmp
mov
mov
out
xlat
and
push
jno
rcll
mov
xchg
lds
sub
push
dec
insb
push
xchg
data16
jp
je
fistl
scas
or
sub
mov
push
int3
insb
shll
dec
testl
dec
cmp
scas
shll
and
fisubl
ret
fisttpl
aam
fcoms
lahf
icebp
or
pop
sbb
xchg
dec
xlat
iret
jae
dec
dec
jae
push
mov
pop
cld
cmpsb
inc
add
jae
ja
out
mov
pop
sbbb
clc
pop
icebp
aam
int3
lods
push
xor
enter
mov
adc
xor
lahf
mov
negb
sahf
test
out
mov
test
and
lret
cmp
stos
inc
data16
lret
mov
mov
or
xchg
rorl
pop
call
push
inc
mov
cmp
mov
popf
lea
ficompl
scas
hlt
frstor
fbstp
sbbb
int
shrl
jmp
in
sub
icebp
dec
xchg
loop
add
xor
les
adc
mov
add
xorb
sti
mov
push
daa
jg
jl
sbb
faddl
xor
and
stos
orb
jle
clc
mov
pop
fcoms
or
stc
cmp
cmc
pop
mov
mov
xchg
jno
test
push
mov
aaa
jecxz
in
test
and
xor
lret
movsl
cmp
in
insl
aas
test
ss
cli
mov
lods
xchg
inc
pop
dec
push
cli
into
dec
lea
arpl
dec
cmp
jno
neg
mov
and
dec
int
mov
dec
int3
jmp
or
add
or
dec
pusha
xchg
lods
push
cltd
mov
in
in
mov
out
xor
mov
in
pop
sbb
mov
xchg
test
les
cs
cmp
fiaddl
scas
test
jnp
out
orb
xchg
xor
pusha
dec
push
int
mov
out
add
xor
mov
xor
in
sahf
and
lods
mov
push
daa
push
jns
cmpsb
dec
testl
mov
adc
clc
fnstenv
dec
inc
shrl
mov
in
sub
mov
mov
negb
push
mov
push
mov
faddp
je
pop
add
sbb
js
or
or
and
inc
adc
notb
and
add
xchg
sub
adc
dec
popa
xor
mov
or
cltd
pop
mov
mov
xchg
into
fsts
inc
or
ja
leave
aaa
stos
cmpsl
mov
rcrb
bound
scas
icebp
data16
xchg
pop
dec
arpl
pop
push
mov
xchg
daa
insl
addr16
push
pop
cmc
mov
loopne
xor
pop
mov
jae
adc
xorb
and
leave
adc
jno
popa
sbb
sbb
scas
jmp
jb
xorb
fs
xchg
inc
nop
cmp
adc
movb
push
in
cld
aaa
or
stos
jg
pushl
and
cmp
jb
add
push
mov
lcall
je
and
jne
shll
mov
mov
jge
and
or
das
nop
scas
push
xchg
lret
xor
out
cmp
data16
mov
jns
push
out
jno
sbb
mov
mov
mov
int
mov
xchg
and
aad
cmp
out
fs
jns
inc
cmpsb
decb
dec
ffree
mov
push
fstl
inc
mov
push
call
insb
mov
out
arpl
jne
or
mov
subl
xchg
or
pop
cmp
xor
sub
xor
pop
pop
jmp
dec
fdivrp
mov
add
out
movsb
scas
and
push
popa
mov
fidivrs
push
pop
mov
dec
push
xchg
jnp
push
push
ljmp
cs
lret
dec
sub
out
mov
push
movsl
outsl
mov
ljmp
flds
or
inc
cmpb
outsb
push
add
push
icebp
ss
aad
lret
mov
mov
enter
jo
fsts
aad
sub
fnstsw
pop
add
cld
push
pusha
jmp
dec
movsb
mov
into
adc
nop
cltd
mov
sbb
cld
sbb
jg
pop
inc
and
xlat
scas
std
flds
ret
out
cmpsb
ds
sub
xor
push
icebp
jns,pn
inc
fsubr
scas
repz
adc
rcr
rorl
in
leave
out
repnz
push
gs
push
add
jns
mov
mov
add
and
inc
lea
aad
pop
dec
mov
hlt
pop
push
mov
push
idiv
fists
arpl
or
cmp
mov
aas
jo
out
fs
int3
mov
mov
push
and
sti
pop
adc
or
jg
lods
inc
stc
ret
sbb
inc
or
sbb
fiadds
loope
lods
inc
and
jle
movsl
cmpsl
jle,pn
in
aad
addr16
xchg
nop
inc
push
fisttpl
add
fndisi(8087
xor
les
nop
jmp
data16
cld
jmp
loope
and
xchg
jge
sahf
fdivr
pop
push
xor
sbb
fsts
daa
and
push
add
xchg
test
cli
arpl
int
das
iret
sahf
mov
or
mov
outsl
mov
mov
dec
mov
mov
fdivl
in
test
mov
add
and
cmp
mov
aaa
push
push
and
jnp
xchg
out
aas
inc
pusha
dec
lret
mov
iret
fstps
cld
mov
loope,pt
and
cs
rcl
mov
lea
xchg
sbb
js
mov
lods
inc
in
xchg
mov
fwait
jmp
test
xchg
mov
sarl
es
daa
sti
inc
rorb
add
pop
adc
and
lock
pop
andb
stos
fs
psubb
scas
test
mov
insl
push
xchg
mov
dec
testl
nop
ret
and
pushl
lret
fildl
push
jne
clc
jnp
or
jns
addr16
inc
clc
mov
pop
lcall
daa
filds
cs
arpl
jge
test
scas
dec
mov
mov
dec
enter
lds
mov
sbb
sub
push
inc
stos
adc
fisubl
inc
jl
hlt
push
call
lret
inc
lea
sbb
jmp
adc
cld
jb
mov
in
add
push
pop
dec
imul
cli
push
bound
lds
out
push
adc
xor
sti
and
push
hlt
and
dec
iret
xor
scas
lods
addr16
xor
cmp
push
ss
jl
imul
sbbl
xchg
jnp
add
lea
mov
fisttpll
sub
mov
enter
and
mov
inc
adc
sbb
arpl
imulb
in
fidivs
test
jge
ja
push
xor
cmp
inc
iret
push
jecxz
stos
sub
ret
jns
stc
sub
aad
rcrl
bound
shll
push
pop
test
push
push
sbb
lods
sub
or
mov
mov
fidivrs
dec
out
or
out
cli
fcompp
xchg
popa
es
scas
jne
das
test
aas
fdivs
cmp
inc
pop
cltd
jmp
mov
push
cmpsl
xlat
dec
dec
lret
push
inc
push
and
dec
xor
jmp
jle
shl
dec
jmp
pusha
xchg
sbbl
add
lea
test
jp
sub
call
inc
jnp
or
out
or
shlb
adc
std
lea
and
lea
dec
test
in
push
arpl
in
adc
sub
popf
gs
cmp
aad
jg
lahf
ds
xor
inc
mov
jbe
mov
xor
dec
imul
shll
cmpsb
jl
dec
dec
sub
add
lock
stos
mov
add
addb
jns
nop
add
cmp
mov
xor
pop
add
cmpsl
jle
push
stos
rol
pop
aad
imul
inc
push
dec
mov
sti
subl
fiadds
and
sbb
mov
jge
add
outsl
push
pop
push
adc
sbb
inc
sub
iret
out
inc
push
adc
pop
sbb
mov
push
xorb
rcl
icebp
cmp
add
jg
insl
pop
scas
add
sbb
enter
lock
dec
push
lods
mov
fldl
mov
dec
loopne
lock
push
mov
push
mov
out
push
inc
and
lret
loope
sti
xor
out
ror
mov
sub
add
sbb
xlat
and
test
jns
imul
pop
push
xchg
pushl
xchg
fcomip
popf
shll
aaa
jno
out
inc
mov
bound
inc
aaa
mov
sbb
outsb
lock
xchg
scas
nop
je
lcall
adc
test
mov
add
and
sub
insl
imul
loop
dec
mov
dec
cmp
add
pusha
imulb
fwait
int3
repnz
enter
dec
arpl
mov
clc
cmp
stc
push
lods
pop
enter
mov
ja
inc
sub
scas
add
jl
pop
mov
add
repz
mov
inc
addb
push
cmp
jp
pushf
aam
adc
mov
fimull
aam
icebp
or
cltd
aaa
mov
flds
enter
xchg
push
jbe
or
stc
mov
xchg
ljmp
inc
jno
repnz
fwait
mov
cmc
imul
je
xchg
in
jns
pop
jmp
stc
push
jbe
fistpll
xchg
bound
or
std
ret
and
inc
mov
mov
arpl
fisubrl
std
sbb
mov
add
test
cmp
repz
lret
mov
rcrb
mov
test
dec
cltd
mov
push
and
js
mov
lock
clc
and
aam
aas
iret
xchg
sub
or
mov
int3
jge
lahf
mov
les
lock
stc
jle
or
or
bound
into
push
xchg
add
and
dec
aas
aad
xor
es
push
xchg
outsl
inc
sbb
dec
lods
mov
lock
ss
test
mov
fwait
outsl
adc
mov
movsb
dec
aaa
mov
sbb
cli
pop
pop
call
in
dec
and
sbb
testl
mov
xchg
mov
xor
dec
or
inc
mov
pop
mov
adc
jl
xchg
jg
jl
pop
adc
cmp
and
mov
sbb
in
sbb
add
pop
lods
mov
sub
lret
test
add
ret
adc
fisttpl
pop
leave
icebp
add
leave
jae
data16
jbe
xor
push
orl
test
mov
int3
push
inc
sti
sar
push
jl
adc
xor
mov
mov
fcoms
mov
xchg
sub
xor
xchg
cmp
lahf
mov
jge
or
mov
ja
mov
pop
push
lahf
pop
jne
xchg
sahf
pop
push
or
outsb
push
iret
push
inc
test
sbb
decb
inc
mov
pop
fimuls
pop
xchg
push
insb
fcoml
test
or
imul
addr16
sub
push
jle
into
mov
xchg
test
fildl
and
mov
mul
xchg
mov
and
mov
add
das
sahf
nop
jecxz
jecxz
or
or
or
xor
loop
dec
xchg
cmp
lret
dec
dec
ffree
inc
mov
sti
bound
push
adc
cld
mov
inc
xchg
mov
push
loope
jl
pop
scas
push
xor
inc
jecxz
inc
or
fsub
push
fmull
sbb
pop
lods
mov
into
stc
jl
les
sbb
rorb
cld
outsb
xor
test
add
pop
je
and
mov
jmp
lds
sub
test
mov
jno
stos
int
out
xchg
out
lcall
lods
in
mov
je
mov
mov
dec
out
xchg
clc
xor
push
mov
fsubrl
loope
jp
dec
and
enter
dec
stos
jecxz
sub
mov
jns
pusha
pop
test
xor
dec
mov
sti
or
jle
xchg
rcll
push
xchg
push
jmp
stos
addr16
fnstcw
push
mov
add
xchg
mov
popf
jl
shlb
add
rcrb
jp
sub
rorb
sub
incb
sarl
femms
stos
dec
lea
loop
cmovbe
aaa
xchg
inc
jge
push
push
loop
stos
ds
adc
aad
push
jae
xchg
dec
outsb
loopne
adc
std
dec
jp
in
loopne
jl
xor
je
pushf
fisttpl
inc
mov
outsl
sbb
jle
mov
xor
jae
cmp
cmpsb
dec
ret
dec
stos
scas
mov
cmp
inc
sbb
and
fcomi
cmp
jne
push
movsb
pushf
pop
adc
and
int3
daa
clc
push
addr16
and
inc
cmc
in
cld
movsb
into
mov
or
out
xor
xor
and
movsl
push
dec
bnd
inc
test
jo
adc
sbb
ret
jb
ja
lahf
cli
xchg
shlb
cmc
gs
cwtl
mov
insl
sub
cwtl
icebp
and
pusha
sub
push
loop
aam
xchg
mov
fmul
sarb
out
cs
andl
stos
es
cmp
test
jp
outsb
aas
inc
imul
sub
mov
dec
out
addr16
scas
sub
aam
arpl
rorb
dec
add
inc
and
lea
call
leave
inc
sbb
fdivl
inc
dec
adcb
pushf
mov
lahf
pop
adc
mov
push
aaa
rorb
mov
adc
inc
dec
insb
mov
dec
andb
mov
xor
sbb
add
push
test
or
mov
popf
imul
inc
ret
adc
orl
jecxz
outsb
add
or
cwtl
mov
call
xor
and
sbb
shrl
mov
xor
aaa
mov
sti
div
in
and
jbe
cltd
ret
loope
jg
inc
xchg
adc
mov
cmp
ss
or
clc
jmp
pop
mov
adc
and
pop
imulb
jl
cmpsb
mov
imul
out
ja
dec
out
adc
add
jae
mov
lcall
arpl
cmp
pop
dec
xlat
icebp
repz
mov
cmp
mov
shl
sbb
mull
push
dec
xchg
pop
stos
mov
loop
nop
adc
repz
cmp
fwait
add
in
and
jne
aad
push
mov
aam
adc
adc
push
dec
sbb
inc
sbb
xor
test
inc
push
add
dec
and
xchg
xchg
test
mov
mov
adc
add
or
xchg
and
jbe
inc
das
shr
fwait
cmpsl
xchg
xor
cmpsb
xchg
test
sbb
lods
xchg
push
push
sbbl
inc
clc
push
cmp
outsl
jo
xlat
xchg
ss
sbb
jbe
and
or
clc
aaa
fucomp
dec
dec
call
sub
pop
jmp
xor
and
cs
sahf
inc
sub
sbb
gs
cmp
inc
jnp
ss
push
add
jmp
push
loop
push
and
int
icebp
sub
stos
jno
sbb
ljmp
push
xor
pop
dec
popa
jp
push
lret
inc
adc
lret
cmp
jle
pop
daa
mov
dec
out
bnd
call
int
loopne
dec
inc
addr16
jbe
xchg
pop
clc
into
sahf
and
mov
pop
int
fs
lret
pop
incb
lahf
dec
sub
mov
xor
in
shrl
aam
push
pop
jl
xchg
call
and
add
inc
xchg
notb
fnstenv
dec
push
xchg
sahf
ret
pop
data16
in
into
loopne
or
call
sub
mov
cmpsb
and
xor
pop
out
mov
jl
or
inc
gs
pop
das
adcl
add
mov
imul
mov
dec
mov
adc
inc
mov
mov
sahf
jecxz
push
ret
lret
sarb
xchg
jl
or
jb
sub
cmpsl
jne
or
stc
or
fneni(8087
ret
mov
test
mov
add
push
mov
cmpsl
jo
xor
xor
pusha
mov
mov
push
scas
stos
nop
out
and
or
push
movsb
push
stc
add
cmpsl
mov
jmp
ds
and
push
and
cmpsl
xchg
mov
movsl
cli
pop
pop
jae
dec
mov
insl
pop
mov
jecxz
push
push
jl
test
jb
push
test
cmp
das
repz
xchg
cmp
lret
stc
jge
jmp
mov
aam
lods
fildll
cwtl
lcall
xchg
sbb
fstps
mov
mov
mov
pop
rolb
sub
inc
xor
lret
clc
dec
sbb
dec
pop
add
arpl
mov
mov
int3
out
in
je
pop
stos
dec
fucomi
ja
jmp
in
test
mov
xor
push
jge
xchg
dec
mov
mov
add
inc
sub
push
lods
add
ficoml
adc
cmp
cmpb
mov
cwtl
sbb
mov
xorb
mov
jae
lods
adc
les
movsb
xlat
add
cwtl
inc
jmp
jnp
into
adc
imul
and
pop
addr16
sub
mov
xchg
pushw
mov
dec
andl
shll
subb
cltd
lcall
imul
sbb
mov
mov
push
pop
std
mov
mov
stos
sub
pop
std
or
xchg
stc
pusha
ja
push
cmp
jns
pusha
lods
fnstsw
scas
lret
or
and
jp
insl
jl
jb
fldenv
jo
mov
push
aaa
testb
jnp
lods
outsl
push
fdivs
mov
movsl
cmp
push
xchg
add
movsb
andl
lret
sub
jg
mov
fwait
sahf
out
xchg
fiadds
movsb
in
xor
xchg
or
ret
loopne
cmp
out
sbb
stos
jg
sar
jnp
in
fiaddl
and
xorl
or
cmp
sahf
imull
cs
jno
iret
shrl
inc
push
bound
gs
add
lock
mov
dec
sbb
mov
cmpsb
repnz
lods
cmp
xchg
icebp
pslld
dec
adc
mov
mov
out
and
addr16
outsl
dec
or
insb
enter
mov
addr16
lcall
adc
mov
and
sarb
mov
sub
out
jb
in
xor
mov
fistpl
push
rorl
jne
sbb
inc
out
inc
cwtl
push
cmp
mov
add
pop
add
inc
push
fwait
int
stos
ljmp
stc
mov
push
fdivp
out
dec
fwait
lods
push
mov
and
lods
inc
test
fbld
pop
xor
arpl
fimull
pop
sbb
jno
loop
or
roll
int3
jno
out
and
test
jnp
push
cmp
mov
push
movhps
mov
sbb
movsl
mov
xor
addr16
cli
mov
inc
push
into
roll
and
pop
gs
xor
icebp
cmp
inc
ret
lahf
aam
add
stc
fisubl
push
inc
and
mov
cmpsb
add
sub
jp
xchg
pop
push
in
jns
lahf
mov
mov
and
cmpsl
jns
rorl
mov
jmp
addr16
std
lods
pushf
xor
push
test
aad
dec
fisubrl
xchg
adc
adc
cmpsb
aam
cmp
add
adc
or
sarl
mov
lock
mov
lea
fwait
xor
sbb
fwait
xchg
adc
loop
int
gs
outsb
adc
mov
fisttps
pop
aam
sub
ss
pop
sbb
dec
lahf
push
push
sub
lock
jno
popa
jmp
jp
xlat
fwait
enter
sti
into
scas
and
pop
shrl
xchg
and
sbb
daa
fstpl
mov
pushf
cld
ret
ret
imulb
mov
out
jns
stos
pop
jns
fists
aaa
or
cwtl
mov
xchg
roll
add
adc
xlat
movsl
les
jmp
xchg
loope
dec
jns
fstpl
mov
jae
mov
loopne
cmpsl
pop
fisttpll
rcr
push
aaa
adcl
and
cmp
push
or
fcom
mov
sub
mov
out
mov
pop
fisubrl
and
pop
jge
cmpsb
mov
xchg
ficoms
mov
and
jo
adc
mov
jmp
sahf
pop
lahf
pop
cmp
cmp
jnp
repnz
xor
fsubrs
xor
mov
jmp
inc
cmp
movl
jp
cmp
adc
and
or
lea
or
jmp
loop
mov
bound
fimuls
cltd
xchg
push
mov
sahf
test
add
int
int3
hlt
push
movsl
jmp
out
fcompp
cmpb
stos
bound
lcall
mov
lret
out
rcrb
sub
icebp
or
push
add
stos
mov
movsl
jno
call
cmpsl
and
pushf
cli
aas
mov
xchg
test
jecxz
mov
bound
lock
adcl
iret
stc
jb
test
mov
loope
fcmovne
ret
mov
addr16
push
mov
pop
xchg
push
push
dec
scas
dec
mov
inc
cmpsl
cmpsl
jl
jge
cmp
adc
dec
int
lret
sbb
jge
push
imul
mov
push
ss
pop
push
add
sub
and
arpl
fsubs
jmp
fsubl
pusha
sbb
popa
test
jmp
xor
xorb
add
das
stos
jle
aas
loop
shrb
repnz
jae
pushf
pop
or
dec
sar
pop
xor
rcll
aas
aam
mov
mov
push
gs
jg
iret
lret
dec
inc
fdivp
or
loopne
inc
pop
pusha
jo
inc
dec
add
fwait
scas
inc
push
cwtl
lret
rorb
insb
rclb
jae
dec
push
or
add
call
xchg
inc
lea
das
sar
mov
sbb
and
int
xor
jne
jb
dec
in
xor
lcall
lods
rclb
out
add
fcmovne
stc
mov
cmp
mov
fldenv
les
mov
nop
ror
clc
xchg
bound
adc
push
jle
inc
xor
loope
rcr
test
popf
push
and
cmp
nop
jl
nop
ret
pop
lea
jecxz
rcrl
int
bound
insb
fidivs
pop
adc
jle
dec
loop
cmp
mov
sbb
mov
scas
aas
pop
push
xor
stc
stos
int
mov
cmp
pop
lock
inc
mov
or
or
push
sbb
stos
out
pop
shr
mov
andb
or
test
and
and
add
jle
jmp
push
inc
xchg
sub
pop
leave
inc
arpl
mov
stos
add
cmp
xor
repnz
cltd
mov
mov
mov
pop
mov
fwait
push
push
cmpsb
adc
int3
cltd
or
cmpsl
xchg
push
push
or
fidivrs
mov
pop
lock
fildll
out
add
rcrl
pop
cld
iret
inc
ss
divl
cld
icebp
xchg
mov
cmp
jo
jmp
std
or
das
flds
inc
jl
sbb
cmc
inc
lds
and
lods
cli
jne
leave
imul
ret
jl
adc
pop
jl
xchg
mov
push
and
adc
cs
lods
push
lds
mov
lods
call
shlb
push
into
sub
sbb
enter
or
sub
push
xor
bound
dec
sub
mov
in
cmp
dec
fwait
popa
sub
bound
xchg
jl
add
dec
fsub
popf
xor
dec
jbe
fwait
inc
mov
mov
int
fnop
push
mov
dec
mov
mov
mov
xor
mov
cmp
cmpsb
xchg
lds
out
mov
jno
adc
pop
sti
adcb
js
dec
xlat
mov
add
sbb
mov
mov
imul
sbb
stos
sbb
fs
cmp
cltd
add
inc
xchg
aad
clc
jle
icebp
xor
dec
sbb
xor
cmp
fcmove
pop
in
insl
out
add
cs
xchg
xlat
mov
push
push
jmp
dec
or
xchg
ret
rclb
jle
fsubs
cmp
dec
mov
dec
repnz
lds
sbb
fisubrl
add
add
pop
rdpmc
stc
flds
jmp
pop
outsl
push
or
and
cmp
pop
jns
xchg
jne
fcmovnbe
hlt
movsl
dec
fldcw
enter
fildl
mov
inc
xchg
fwait
movsb
push
daa
push
mov
popa
jl
xor
imul
xchg
xchg
or
push
or
scas
cmc
mov
sub
pop
dec
mov
inc
add
lret
push
movsb
ss
cwtl
sub
pop
push
imul
jb
scas
repnz
or
mov
xchg
push
jbe
loopne
test
shlb
mov
repnz
mov
xchg
xchg
call
clc
jecxz
notl
push
leave
cld
mov
sbb
xchg
loope
cmp
xchg
jne
mov
aam
cs
fsubrl
imul
xchg
out
and
xorl
or
inc
lcall
test
cmc
in
xchg
fldenv
cltd
cli
outsl
push
lcall
nop
shlb
test
out
jle
hlt
sbb
mov
jno
mov
test
push
pop
jg
cmp
jp
je
sahf
es
push
xor
lea
inc
xchg
scas
cs
into
adcb
mov
clc
sti
lret
ret
xchg
scas
clc
mov
jno
cld
ss
pushf
pop
std
pop
xchg
stos
xchg
lret
jmp
xchg
insb
inc
xchg
push
dec
addb
mov
cmp
push
xor
push
sub
pop
push
sub
jns
sti
sbb
in
mov
jns
add
loopne
mov
fdivs
aad
pop
inc
out
js
std
lcall
test
outsb
decl
int
dec
insl
dec
add
push
je
push
inc
mov
or
loopne
dec
fucomp
push
mov
dec
pop
sahf
or
mov
lock
ds
lret
cmp
dec
jle
mov
cmp
lahf
test
test
xor
push
dec
fs
cli
or
or
out
in
xchg
sbb
imul
stos
jmp
mov
and
sub
rcrb
cwtl
mov
xchg
neg
fsubl
popa
xor
sbbb
lcall
mov
and
adc
jae
xor
sub
jle
mov
push
in
aam
stos
inc
cmp
lds
and
std
pop
push
mov
outsl
add
dec
jp
lods
mov
divb
mov
xor
xor
and
sbb
mov
insl
mov
pop
or
sahf
in
cli
fmul
jg
or
push
aaa
jl
adc
fcom
adc
repnz
std
les
adc
lods
jg
arpl
mov
decb
mov
les
sub
and
sbb
cmp
cmpl
xor
xchg
ja
pop
filds
add
imul
push
add
adc
mov
andl
mov
imul
in
sbb
or
or
mov
inc
pop
mov
outsl
pop
cwtl
ds
inc
gs
jnp
xchg
mov
addr16
mov
daa
jl
shrl
mov
fisttps
sub
ret
push
adc
popa
loop
icebp
leave
cmp
pop
dec
notl
ret
in
lods
mov
adc
jecxz
out
xor
sahf
scas
mov
and
jmp
cwtl
or
dec
mov
mov
sub
sbb
push
cmp
movsb
mov
mov
push
neg
and
outsl
out
or
push
repz
fdivl
outsb
adcb
pop
test
xor
pop
test
pusha
fldenv
lea
adc
pop
and
xchg
add
dec
and
out
and
insb
roll
dec
int
orl
mov
stos
mov
popa
je
add
push
xchg
add
cwtl
dec
pop
loope
mov
bound
inc
push
and
sub
into
adc
sub
sbb
push
push
sar
movsb
xor
fidivrl
movsbl
bound
into
xor
mov
jb
mov
stos
push
mov
scas
or
pop
adc
sbb
das
mov
js
add
jns
lret
loope
push
fcompl
sti
mov
ja
sahf
xchg
sti
std
cwtl
lahf
mov
lret
and
mov
sbb
and
fidivl
xor
popa
jge
cwtl
fists
jbe
dec
or
push
sub
pop
push
and
test
or
mov
sbb
mov
imul
call
push
test
popa
imul
push
ss
iret
dec
add
stos
push
xchg
jl
fnsave
mov
shrl
movsb
mov
sbb
fwait
cli
jae
mov
loope
push
add
push
jecxz
mov
pop
std
fstps
jecxz
insl
test
popa
ficompl
shlb
cmpsb
xchg
push
mov
ret
loop
inc
sub
jns
xor
sub
punpckhbw
out
mov
xlat
cwtl
jne
and
cli
adc
sbbl
fs
int
clc
cli
repz
mov
pop
movsb
insb
ja
test
mov
mov
adc
pop
sets
test
popf
stos
sarb
or
jb
dec
inc
jmp
mov
xor
fcompl
rcl
sub
mov
add
dec
lods
jp
xchg
mov
pop
leave
adc
repnz
or
xor
mov
and
sarb
mov
jno
subl
lret
mov
daa
imul
test
xchg
sub
adc
jle
cmpsl
pop
jo
mov
xchg
mov
xor
cltd
xchg
sti
mov
das
dec
inc
fwait
mov
xchg
inc
add
sub
aad
and
add
out
inc
incb
out
stos
mov
js
incl
popa
or
das
nop
mov
lahf
push
clc
daa
xchg
mov
aas
dec
inc
sbb
popa
lea
fidivrs
test
add
nop
pop
add
push
imul
lret
add
jne
das
add
std
mov
mov
rolb
loopne
iret
das
pop
add
xchg
push
pop
repz
shl
sbb
int
push
leave
fisubs
mov
sarb
dec
aaa
fldl
aaa
cmpsb
sarl
js
into
out
fimull
cli
clc
inc
fsubp
cmp
call
cmp
stos
out
out
inc
lea
xor
arpl
or
mov
push
jg
xchg
aad
dec
inc
mov
jmp
fdiv
fcomps
jo
out
mov
mov
add
lods
idiv
jnp
xchg
jge
inc
stc
decb
sub
pop
test
jg
xchg
dec
imul
clc
lods
sub
stos
rorl
dec
nop
xor
insl
xchg
xchg
insl
je
data16
push
add
pop
dec
cltd
sbb
pop
into
fsub
orb
mov
imul
je
dec
xchg
insb
out
std
xchg
cmpsb
mov
inc
push
xor
ss
mov
mov
push
sub
add
lods
pop
jne
add
out
push
jge
imul
iret
add
mov
cwtl
sar
inc
ret
sbb
pop
sti
out
aam
stos
cmp
cmp
push
mov
adc
pushf
pusha
push
aam
cwtl
xchg
xchg
out
push
cmpsb
and
jne
dec
add
aas
pusha
and
xchg
push
dec
xchg
and
dec
outsb
cmpsb
test
mov
xor
jl
and
pop
rcll
fnsave
movsb
mov
pop
xchg
xor
mov
gs
orb
pop
mov
enter
cmp
mull
jmp
ret
push
jne
lock
jno
loope
pusha
jl
cmp
pop
cmp
or
in
and
jle
imul
xchg
bound
or
mov
div
xchg
icebp
pop
cmp
pop
sub
decl
mov
aam
and
push
roll
push
out
mov
adc
mov
mov
ficomps
sahf
outsb
or
test
mov
mov
into
test
xchg
mov
dec
popa
jecxz
popa
jg
xlat
shr
sbb
imul
pop
mov
adc
nop
jns
xor
stos
dec
cmp
lret
dec
js
hlt
and
fs
jle
xchg
cltd
movsb
pop
pop
andb
ljmp
mov
incl
sbb
stc
sub
mov
mov
mov
aad
inc
std
clc
ret
push
mov
das
add
mov
mov
mov
adc
sub
orb
and
push
lea
cmc
lcall
loop
cmp
jae
call
pop
mov
outsb
xor
stos
mov
sbb
pop
jbe
add
in
in
or
scas
push
fcomps
mov
mov
sub
jns
mov
insl
mov
nop
mov
sti
test
lock
mov
cld
hlt
stos
insl
lret
add
inc
pop
jb
inc
jmp
or
mov
mov
movsb
push
xor
lret
cs
push
mov
popa
cmpsb
or
std
aad
and
lods
sti
sbb
lds
in
mov
xchg
arpl
sbb
test
fsts
in
dec
cmp
cmp
movb
dec
adc
aam
shll
xchg
enter
cli
cmpsl
or
lret
jno
movl
test
push
mov
push
repz
add
scas
adc
pop
jb
jno
push
repz
mov
insl
mov
pop
je
dec
fistl
into
mov
rcrl
mov
jne
mov
ds
add
cltd
dec
sbb
fwait
mov
mov
ljmp
icebp
sbb
je
fiaddl
inc
mov
push
insb
dec
filds
lret
xchg
cltd
and
mul
pusha
and
mov
rorl
pop
shlb
orl
popf
pop
out
cmpsb
jns
mov
mov
mov
fwait
jl
ja
sbb
divb
ja
cmp
jmp
loopne
xchg
or
loope
leave
or
int3
fcoml
in
xchg
add
xchg
shrb
cmp
fistps
and
jno
and
loopne
lods
imul
push
fiadds
cmpsb
push
or
sub
cmp
cmpsb
mov
std
ss
int3
mov
dec
pop
or
xor
or
push
dec
mov
cmpsb
xchg
pop
mov
or
fistpll
push
call
in
mov
out
mov
mov
addb
xor
pushf
int
adcb
call
insl
fidivrs
add
hlt
iret
and
mov
or
stc
push
mov
mov
outsb
and
jno
mov
inc
dec
cmc
cmp
xor
loop
popf
jb
adc
sub
in
inc
pop
jae
jns
scas
lds
les
stc
or
cli
mov
mov
cmpl
ret
or
pushf
stc
nop
stc
mov
adc
flds
sbbl
jne
lret
or
add
sbb
cmc
test
ret
dec
pop
cmc
gs
sbb
mov
scas
icebp
cmp
into
xor
outsl
mov
test
cwtl
rclb
mov
push
dec
sub
mov
rcr
inc
xor
mov
sbb
int3
xchg
enter
sub
out
jp
inc
ja
mov
fstp
data16
aas
and
ret
inc
cmp
sub
xchg
in
shrb
mov
jp
mov
xchg
addr16
ja
xor
jl
pop
or
inc
inc
push
cltd
xor
adc
ja
lods
jae
out
fnstcw
les
fnstsw
jle
lret
out
lock
sti
out
imul
daa
out
mov
mov
pop
test
shrb
dec
add
es
daa
xchg
jne
lock
int3
dec
iret
fnstsw
out
dec
push
jne
jae
loopne
bound
adc
push
cld
pop
stos
pop
cwtl
cli
jle
daa
pop
mov
inc
lret
push
sbb
sub
and
jne
test
inc
jg
addr16
fldt
add
lea
push
das
scas
or
and
lods
ficoms
outsb
or
xor
mov
and
dec
xchg
pop
repnz
push
movups
push
insb
pop
dec
in
stos
inc
je
repnz
xor
xchg
xchg
sub
add
inc
or
cmp
dec
filds
mov
jb
loope
mov
shlb
inc
imul
ja
fcoml
pop
ljmp
jl
mov
fldl
dec
int3
js
xchg
jbe
fldln2
addr16
push
pop
add
sbb
call
test
cmp
push
popl
xor
cltd
jge
int
in
or
cmp
cwtl
xor
adc
xchg
cld
icebp
cmp
lret
sbb
scas
fwait
enter
jno
dec
xor
sbb
rorl
rcl
imul
sub
lds
outsl
sbb
xchg
lock
sbb
negl
mov
cmp
rorb
sub
lret
mov
data16
adc
test
adc
xlat
dec
loope
loopne
lods
xor
jle
out
xchg
inc
rol
and
sbb
sbb
dec
jecxz
mov
mov
push
pushf
bnd
dec
cmp
hlt
popf
test
jb
mov
xor
push
in
xor
mov
mov
outsb
cli
mulb
or
mov
push
sbb
jle
bnd
xorl
test
and
lret
add
or
loope
sub
sub
aam
scas
adc
das
es
mov
jno
jecxz
sbb
loop
xor
in
mov
daa
ror
aas
sbb
pop
xor
adc
adc
sar
xor
and
icebp
je
xorb
ss
in
push
adc
push
mov
outsl
jb
pop
add
cmp
pusha
mov
stos
push
cmp
xchg
xchg
imul
pop
add
inc
outsl
fidivs
mov
pop
xor
jno
push
cmc
push
cwtl
inc
mov
sti
and
push
into
jge
aaa
and
mov
mov
aad
mov
imul
add
push
insb
xor
cmc
gs
aaa
aas
sbb
int
mov
jecxz
leave
inc
jne
rorb
icebp
jp
clc
loope
push
xor
xchg
movsl
add
xlat
stos
int3
outsl
xchg
mov
rorb
fs
cmp
rcrb
jne
cmpsb
xor
cmp
or
sub
mov
xchg
andl
cld
mov
mov
fildl
outsl
rcll
xchg
imul
adc
push
data16
adc
sub
pop
cmp
mov
rclb
xor
pop
mov
into
mov
sbb
loop
pop
into
adc
sbb
push
ss
cli
cmpsl
arpl
lds
roll
jns
xor
mov
test
push
les
push
xor
cli
decb
outsb
daa
rcll
imul
ljmp
pop
leave
outsl
std
or
add
decb
aad
es
mov
sub
aad
push
dec
iret
mov
out
std
iret
lret
push
ficompl
pop
int
xchg
aaa
cld
lret
mov
aad
in
fsts
xchg
mov
pop
dec
int3
lahf
aas
inc
mov
fsubs
hlt
out
cmp
xchg
mov
push
jnp
dec
fisttps
popf
out
mov
scas
les
mov
scas
popa
adc
pop
adcb
or
mov
into
mov
push
scas
int3
jo
dec
jge
mov
sub
fisubs
xchg
and
es
iret
stos
pop
and
adc
loopne
dec
test
andl
inc
pop
mov
and
push
sbb
pop
mov
sbb
xor
pop
add
mov
lea
ds
es
adc
xchg
test
add
push
mov
sbb
add
cli
pop
clc
cli
push
jno
mov
cmc
mov
add
repnz
fstp
xchg
cmp
shll
out
pushf
xchg
mov
jp
push
add
inc
incb
rcll
lods
out
cmp
popf
cmc
dec
shlb
inc
push
jb
pop
icebp
popf
xor
ret
xchg
cmp
inc
lret
fldenv
orb
arpl
and
pop
lds
sbb
std
xor
pusha
add
pop
push
jno
repnz
mov
push
cmp
xchg
roll
mov
adc
cmpsl
xchg
lods
popa
add
sub
jecxz
sub
inc
mov
jg
cmp
test
jnp
sti
mov
in
jmp
ds
iret
sbb
push
mov
mov
repz
repnz
jg
jnp
ds
bound
scas
adc
cmp
cmp
js
jb
adc
jb
shrl
in
out
xchg
pop
or
int3
mov
out
rorb
std
and
ljmp
insl
mov
addr16
lea
jg
inc
mov
and
mov
xchg
sub
push
sub
mov
cltd
fdivp
cli
jp
mov
sbb
xchg
or
xchg
adc
mov
inc
xor
add
fdivp
movsl
jne
lock
popa
mov
mov
cmp
sbb
sbb
jg
sub
sub
add
pop
mov
popf
dec
insl
push
sub
test
push
dec
ret
jo
or
popa
ret
jle
mov
sub
pushf
mov
inc
lods
aas
inc
pop
xchg
inc
test
mov
xlat
mov
cmp
dec
pushf
xchg
imul
push
dec
xchg
or
dec
push
icebp
pop
push
adc
std
mov
push
in
inc
inc
in
mov
repz
call
and
xlat
inc
add
fnsave
addr16
movzbl
pop
dec
cwtl
mov
test
in
xor
leave
pushf
cltd
pop
cmpsl
xchg
mov
cmc
push
mov
addl
cld
bound
mov
dec
add
sub
adc
mov
inc
or
test
add
add
fs
cmp
mov
push
aas
daa
fnstsw
loope
dec
sar
or
data16
xchg
ret
push
sbb
adc
out
dec
test
mov
mov
jno
popa
lds
mov
sbb
stc
fdivrs
dec
negb
dec
shl
sbbb
push
sbb
data16
lods
insb
mov
sarl
lret
movsl
inc
mov
repz
cmp
mov
push
pop
insb
sub
shlb
nop
and
add
add
cmp
fyl2xp1
movsl
sub
add
jg
mov
xor
cli
jle
sbb
mov
cli
bound
nop
mov
sti
shrb
shll
leave
push
and
jge
sahf
imul
sub
mov
jle
pusha
stc
fwait
sarb
cmp
xchg
je
mov
cmpsl
inc
add
push
sti
xor
ds
enter
aad
loopne
lahf
or
push
xor
dec
lcall
xchg
push
repnz
jno
insb
dec
mov
fiaddl
mov
nop
ret
dec
push
xchg
mov
ds
mov
pop
out
add
clc
stos
mov
add
mov
inc
ficoms
sbb
daa
iret
nop
bound
imul
fwait
es
push
mov
lods
test
add
pop
dec
repz
add
imul
mov
push
popf
push
es
add
push
mov
pop
dec
mov
sbb
movb
ds
stc
sbb
outsl
hlt
js
pusha
lods
icebp
xor
dec
movsl
fistpl
dec
push
mov
jmp
adc
add
test
inc
add
cs
jno
or
scas
xchg
sub
enter
lcall
and
push
mov
cmpsl
adc
das
lea
call
dec
xor
pop
out
test
jle
mov
and
jge
fistps
add
iret
or
pop
and
test
add
outsb
cs
or
mov
dec
out
adc
pushf
cli
xor
movsl
test
mov
push
fcoml
enter
popf
in
xchg
test
in
loop
stos
jle
inc
mov
call
mov
xor
loop
pop
pop
loopne
sub
fistps
mov
lcall
add
fnstcw
in
clc
add
adc
rcll
shl
pop
stc
lret
sbb
popf
out
ja
push
or
data16
aas
test
std
jge
inc
cltd
arpl
pop
mov
hlt
dec
sbb
stc
daa
js
outsb
mov
lea
imul
mov
cmp
data16
xlat
das
fimull
pushf
pop
ficompl
xor
pusha
addr16
fistps
das
pop
sti
mov
inc
lds
inc
jmp
mov
sub
inc
and
xlat
add
mov
mov
xchg
cmp
push
and
adc
pop
inc
lcall
aaa
xchg
iret
icebp
fmul
sbb
aaa
sub
stc
hlt
pop
dec
mov
or
and
cli
fisubl
js
rorl
mov
inc
mov
jp
xchg
adc
clc
outsb
push
cmpb
adc
and
jne
adc
dec
shrb
jno
bound
addr16
stos
mov
jne
xchg
flds
mov
je
mov
cmpsb
adc
enter
je
testl
and
mov
adc
aam
outsb
adc
call
pop
sbb
aas
hlt
sub
lds
xchg
push
or
sbb
dec
and
negb
scas
pop
mov
in
inc
mov
sub
lahf
dec
add
movsb
into
cmp
dec
scas
in
jle
and
orb
sub
popf
pushf
in
stos
add
fmul
sti
out
jg
cli
inc
mov
mov
imul
pop
lds
mov
mov
adc
push
lret
add
push
movsl
push
mov
adc
xchg
movsb
fisttps
mov
hlt
orl
aad
into
inc
add
fdivl
je
xor
loop
sti
pop
fucom
inc
clc
pop
xchg
mov
and
test
repnz
jecxz
mov
mov
into
cmp
add
cmp
mov
lahf
xchg
cmpsb
dec
ror
or
test
adc
daa
test
mov
in
dec
mov
fwait
or
lret
mov
mov
xor
jnp
in
cmp
fsubrl
cltd
jo,pt
ret
mov
shlb
jge
lds
push
xor
mov
leave
lret
sbb
xor
sbb
inc
repz
dec
jg
mov
inc
jo
sub
andl
sub
or
clc
arpl
mov
jae
cmp
or
and
mov
xchg
orb
push
aaa
outsb
or
test
push
xlat
mov
dec
adc
mov
or
and
mov
addl
aam
jecxz
scas
xchg
push
xchg
addr16
mov
dec
and
pop
in
movsl
jb
cmc
and
and
fwait
stc
ja
inc
in
pop
inc
mov
mov
mov
test
sahf
mov
ljmp
add
xchg
idiv
pushf
mov
mov
xor
mov
sub
jge
adc
gs
shrl
inc
adc
into
and
inc
xor
popa
mov
int
sbb
bnd
push
inc
scas
add
jmp
stos
mov
movsl
push
aad
mov
cmp
jnp
cmp
mov
addr16
adc
fs
inc
cmpl
movl
icebp
outsl
insl
ja
adc
xor
test
mov
jmp
xchg
insl
sahf
push
ds
xchg
xchg
mov
push
hlt
push
mov
aaa
paddq
lcall
in
test
mov
and
xchg
dec
stos
js
fsubrl
push
stos
or
iret
mov
ljmp
ret
mov
es
jmp
lcall
and
xchg
mov
pop
gs
push
cmp
jmp
shlb
je
jl
cmpsl
mov
jl
pop
idivl
test
test
mov
mov
test
test
pop
add
inc
shlb
sub
cmpsl
xorl
pop
xchg
xchg
vmovaps
dec
out
or
bound
sub
call
stos
ret
mov
addl
jp
adc
in
push
sahf
fs
popa
popf
push
stos
mov
sub
pop
aad
test
mov
push
je
popa
test
pop
push
pop
jbe
test
lods
cmpsb
and
fs
out
sub
and
mov
nop
aas
cli
inc
cwtl
jbe
xchg
subb
lock
inc
out
div
lea
ljmp
pop
je
mov
sub
aad
and
mov
add
xchg
dec
fldcw
and
jle
pop
mov
fs
and
inc
sub
pop
data16
loopne
movsb
mov
or
cmp
xchg
inc
call
sub
out
sub
scas
adc
or
push
mov
popf
mov
out
mov
in
push
popa
dec
mov
mov
loop
lea
cld
fstpl
cmp
inc
into
das
xchg
fnstsw
ret
xchg
cli
orl
ucomiss
sub
cmp
repnz
test
and
aad
jl
cmp
mov
mov
fwait
in
lock
adc
out
push
sbb
adc
call
sti
jp
xchg
jp
adc
push
dec
sub
call
lods
arpl
cwtl
inc
bound
adc
adc
sbb
imul
push
push
lods
repnz
loope
jne
pop
fwait
adc
std
imul
pop
cmpsl
jmp
or
sbbl
xchg
or
mov
or
in
jo
insb
imul
xor
lret
adc
pop
lods
and
mov
jo
mov
mov
out
xchg
scas
es
sbb
jo
test
and
dec
push
pop
stc
loop
dec
andl
jo
push
aas
pushf
xchg
aad
sub
push
dec
test
std
stos
cs
sbb
sbb
inc
dec
fcom
push
lock
fimuls
mov
cmp
add
insb
je
or
push
adc
jns
dec
xlat
sub
fmuls
pop
jae
push
cmp
cmp
aad
sub
jnp
push
shlb
sbb
jo
cmp
incl
sub
push
pusha
mov
pop
stos
sbb
testl
sarl
pop
jb
mov
mov
or
sub
push
sbb
rclb
test
cmp
stos
cmp
arpl
inc
mov
aas
mov
xor
out
sahf
outsb
jg
fadd
loop
enter
cmp
js
jb
not
cmp
shlb
mov
xchg
xchg
xor
mov
imul
pop
jnp
xor
mov
mov
jecxz
mov
xchg
xchg
nop
outsb
imul
add
lds
cmpsb
in
aam
cmp
jbe
stc
dec
xchg
add
mov
fwait
inc
mov
int
dec
ja
or
cltd
inc
cmp
stc
shrb
imul
push
xchg
repnz
lretw
inc
jae
arpl
popf
xchg
lds
sahf
not
mov
jb
stc
clc
pop
fs
mov
sub
inc
jnp
or
pop
lods
jno
fidivrs
stos
fs
mov
adc
xchg
and
jle
lcall
ss
add
xor
cmc
inc
jo
jg
cmpsb
xchg
cmp
rcrb
pop
lar
mov
jge
in
mov
mov
mov
clc
fsubl
push
ja
repz
mov
sub
dec
cmp
and
add
adc
pop
jecxz
ret
fiaddl
inc
mov
sub
scas
xchg
dec
popf
jmp
dec
adc
xchg
out
adc
push
fidivs
iret
jb
pop
or
pop
not
mov
push
jge
mov
je
mov
mov
arpl
lods
cmp
inc
stc
divl
repnz
mov
ss
not
mov
mov
repz
adc
cmp
les
dec
xchg
dec
and
mov
xor
mov
daa
ljmp
icebp
aas
pop
insb
mov
push
lret
fsubs
dec
lret
inc
or
and
mov
pop
outsb
iret
movsl
mov
xchg
adc
mov
rcrl
sub
outsb
pop
mov
leave
scas
or
cli
js
loope
mov
gs
inc
data16
adc
in
daa
out
xor
int3
push
adc
jno
fstps
xchg
std
mov
lods
adc
aad
push
inc
mov
call
pop
adc
lds
push
and
and
popf
shrb
fs
loopne
jns
mov
pop
mov
jg
jle
mov
dec
add
std
mov
push
sub
adc
add
mov
maxps
jmp
mov
jb
cmpsb
and
jle
add
mov
es
rcrl
pusha
mov
ja
test
dec
sub
dec
leave
and
cli
mov
mov
push
inc
and
cltd
sub
dec
ret
xor
movsl
mov
rcr
enter
pop
loop
mov
inc
push
popf
test
and
repz
xor
mov
cmp
popa
or
lock
sbb
push
xchg
push
cld
mov
mov
xchg
sarl
jbe
push
dec
pavgw
arpl
cmp
fisubrl
enter
mov
orb
inc
pop
xchg
gs
jge
jmp
or
jecxz
outsb
or
mov
cmp
jno
popf
fs
test
xor
daa
mov
xchg
inc
pop
aaa
sub
or
push
dec
mov
cmp
outsb
adc
sub
cli
fstps
xchg
mov
lret
negl
negl
clc
xor
cwtl
mov
jbe
cmp
fsub
cld
adc
jecxz
ficoml
data16
test
movsl
lods
mov
nop
fildll
fyl2xp1
sub
mov
sub
icebp
lret
xor
sbb
inc
cli
fwait
std
jl
inc
mov
pushf
in
sbb
sub
jb
negl
insl
out
push
fisubl
pop
dec
add
sub
stos
mov
cmp
fstps
mov
jns
sbb
pop
mov
dec
sbb
jle
xchg
mov
in
test
pop
popa
daa
jbe
xchg
std
sbb
mov
mov
pop
repz
sbb
jecxz
jp
mov
mov
pop
xor
adc
sub
sar
jo
jb
pop
fisttpl
sbb
mov
lahf
lods
inc
fisubs
pop
jae
test
dec
jns
insb
in
fdiv
out
aaa
in
cmc
pop
mov
dec
in
test
inc
or
mov
fisubrl
xlat
decl
adc
mov
pushf
popa
and
clc
ret
xlat
xor
sub
lea
fsubrs
fsts
push
out
fstps
std
cmp
pop
cmpsb
stos
xor
movsb
xchg
loop
mov
mov
pop
adc
xchg
insl
pextrw
sub
jns
fdivl
xchg
inc
add
fisubrl
sub
nop
dec
sub
mov
push
jnp
push
xchg
jle
test
cmp
add
testb
call
mov
stos
out
cmpsl
popa
xchg
inc
ret
sahf
aam
jno
mov
push
and
lcall
xor
out
push
mov
cmp
leave
loopne
xlat
jg
daa
and
xchg
test
adc
test
dec
push
lock
or
adc
inc
sbb
loopew
jns
imul
add
test
jl
adc
xorl
push
dec
sahf
push
test
mov
jne
hlt
imul
fcomps
jp
inc
mov
test
inc
mov
mov
int
jno
popa
push
push
int3
orb
mov
mov
lods
mov
jmp
out
mov
bound
ja
fnsave
lds
adc
test
push
fstps
or
scas
pop
aam
push
adc
jmp
sub
sbb
stos
pop
icebp
aas
mov
and
fs
sbb
xchg
mov
idivl
add
scas
lcall
scas
pushf
pop
cs
imul
and
repnz
aas
es
push
popa
ljmp
mov
shlb
movsl
sub
xchg
cli
xor
sbb
add
sub
sbb
dec
xor
xchg
inc
jno
testl
and
pop
jl
scas
call
mov
popf
popl
jecxz
or
jecxz
cmp
jbe
jno
dec
cwtl
sub
inc
mov
mov
rcl
dec
hlt
les
call
mov
add
enter
sbb
pop
stc
or
xchg
out
aam
call
iret
fisubrl
test
mov
xchg
push
pusha
jmp
pop
int
ficompl
dec
pushf
cmp
aad
mov
shlb
and
push
mov
pop
and
into
lock
cltd
adc
jno
fildll
cmp
or
and
pop
adc
fnstenv
pop
mov
mov
push
xchg
sub
inc
xor
mov
mov
jno
and
xor
pop
xchg
dec
inc
mov
dec
int3
sar
ficoml
movsb
sub
daa
mov
int
bound
pop
xor
inc
push
leave
cmp
into
pop
or
jno
aas
test
adc
xor
inc
mull
mov
xor
inc
inc
xchg
idiv
pop
sbb
out
or
mov
repz
inc
dec
fidivs
push
jmp
sub
cmpsb
cli
mov
adc
or
mov
es
fnstsw
sbb
dec
push
loop
mov
pop
jl
loop
sub
cwtl
xchg
cmp
inc
shll
scas
or
xor
divl
es
dec
gs
leave
sub
mov
ljmp
nop
xchg
fdivp
leave
adc
and
loop
mov
ljmp
arpl
xor
mov
outsb
test
dec
aam
cmp
inc
jnp
lea
adc
pop
roll
pop
jg
pop
sbb
cmp
lahf
and
xchg
lods
inc
dec
jge
hlt
sbb
lods
mov
pop
inc
fucomp
jb
jg
dec
mov
cmc
ficoml
mov
aam
dec
mov
cli
loopne
cld
out
loopne
gs
loope
mov
push
jnp
jmp
jle
adc
sbb
adc
jge
inc
xlat
xchg
pop
cmp
xchg
cmc
in
jle
pop
fisubs
inc
jnp
mov
pop
sbbl
cltd
imull
mov
fdivl
mov
and
je
add
or
push
sbb
or
xchg
jne
dec
or
jnp
int
xchg
dec
dec
adc
fst
xchg
daa
cmp
pop
outsb
jns
dec
push
xchg
stc
push
and
cwtl
xchg
ret
addl
mov
dec
in
inc
aam
jns
pop
mov
pop
scas
enter
out
sbb
fsubrs
leave
adc
addr16
popf
sub
or
rcll
ror
jbe
outsl
cld
loope
jnp
adc
cmp
test
dec
and
addr16
movsl
jge
outsl
inc
fiadds
fucomp
lcallw
jp
add
rolb
out
mov
xchg
jns
lea
jne
jnp
pop
call
inc
pop
push
call
dec
in
dec
mov
xor
lods
and
jb
push
movq
adc
adc
mov
cli
mov
test
cmp
es
xchg
adc
ljmp
sti
cmpl
add
jnp
scas
std
adc
dec
into
shrl
out
adc
adc
cwtl
popa
adc
fcmovu
inc
inc
xorb
fistpl
xor
icebp
leave
dec
xor
cltd
fistl
mov
or
sbb
fistps
push
push
lcall
jle
negl
gs
sbb
xor
sbb
loopne
scas
sbb
inc
ja
sbb
push
mov
jg
in
pop
jae
mov
loop
mov
fwait
dec
out
xlat
fisttpl
mov
enter
mov
cli
imul
enter
xor
enter
pop
mov
pop
and
js
and
mov
lret
inc
cmp
xchg
jns
lea
push
mov
aad
mov
sub
xchg
or
jo
jae
jae
bound
jg
pop
shlb
jne
cltd
sahf
adc
dec
lods
cmp
movsl
call
lahf
mov
inc
flds
js
adc
xchg
and
rcrl
add
outsl
xchg
push
ljmp
cmpsb
adc
jo
rclb
pop
rcr
sbb
out
sbb
push
cli
out
incb
repnz
adc
das
decb
xor
sub
sbb
ss
lods
mov
and
sub
ss
mov
loop
inc
scas
add
lods
call
stc
fmuls
pop
add
sbb
and
pushf
ds
fcomps
ror
popa
push
js
pop
push
test
add
sti
stc
test
fidivs
rolb
sbb
rolb
in
inc
test
cmp
insl
out
mov
add
in
sti
mov
iret
push
test
pop
adc
sub
sarb
dec
cmp
iret
test
imul
sub
imul
ret
jbe
hlt
out
sub
cwtl
cmp
and
mov
das
fisttpl
sub
and
out
mov
pop
lods
daa
jp
insb
ss
xor
cmp
mov
mov
push
out
rorl
jmp
inc
adc
fwait
int3
jge
movb
stos
pop
jno
and
xchg
dec
lea
test
mov
push
enter
xor
fcoms
arpl
sub
ljmp
cmpl
fistl
mov
and
or
outsl
jns
dec
in
push
nop
pop
in
stc
or
xchg
fcompl
roll
mov
xor
lds
pushl
adc
cli
pop
js
inc
mov
mov
adcb
es
pop
dec
enter
mov
lea
loop
insb
sbb
xchg
jp
pop
loope
lock
dec
pusha
cmc
push
xchg
aaa
movsb
std
mov
aaa
mov
sub
pop
sbb
and
loop
sti
inc
or
add
outsl
cwtl
test
or
sbb
popa
or
cmpb
mov
mov
jl
jns
fiaddl
push
mov
sub
inc
aad
pop
ret
aas
popf
cli
inc
popf
dec
stc
stos
cltd
jmp
mov
int3
jg
frstor
not
cwtl
fcmovnu
push
mov
adc
sub
xchg
pop
push
loope
and
sbb
add
out
xadd
inc
popa
movsl
mov
sbb
pop
pusha
test
hlt
imul
adc
cli
xchg
and
ds
jo
dec
mov
daa
or
xlat
aaa
sbb
ret
or
jae
popa
inc
call
dec
mov
and
mov
into
sub
aad
cmpsb
pop
out
xchg
bound
test
shll
xchg
std
cmp
adc
mov
pop
movsl
sbb
repz
push
add
sub
bswap
xor
mov
push
repnz
faddl
add
xor
mov
mov
repz
xchg
sub
shll
mov
call
mov
inc
mov
subl
xor
cbtw
push
mov
aad
mov
lea
pop
test
inc
jmp
sbb
test
add
imul
inc
adc
push
fwait
mov
aad
inc
adc
xorl
icebp
mov
mov
ret
add
cmpsl
out
orl
pop
mov
cwtl
jmp
jo
jnp
cmc
sbb
cmpsl
xchg
cmpl
jne
xchg
sub
cwtl
fcmovbe
inc
dec
sub
mov
lcall
cmp
adc
dec
shrb
add
lea
int3
adc
fsubrl
int3
daa
dec
dec
ljmp
xor
dec
imul
mov
jle
xor
dec
pop
and
scas
rcrl
rclb
xchg
insl
arpl
fnstsw
and
mov
jle
dec
jle
hlt
xchg
and
xchg
or
mov
jbe
mov
into
daa
and
mov
in
xorl
mov
mov
lret
sub
cmp
lds
mov
pop
out
dec
jns
lret
pop
das
cmp
idivl
and
push
cmp
fbld
xchg
inc
mov
scas
dec
popa
push
mov
dec
pop
leave
lret
pushf
ja
insb
mov
imul
fmull
pop
push
hlt
ja
jo
pushf
out
xlat
outsb
ljmp
xor
jg
movsl
test
mov
lcall
add
add
dec
scas
cmp
add
add
add
add
add
add
orb
add
push
add
addb
add
dec
scas
cmp
add
add
add
sldt
pusha
add
cmp
add
mov
add
mov
add
fadds
add
add
add
sub
add
dec
scas
cmp
add
add
add
add
add
add
add
add
nop
add
add
cmp
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
xor
add
dec
scas
cmp
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
dec
scas
cmp
add
add
add
add
add
add
mov
add
xchg
add
add
cmp
add
add
add
add
xorb
adc
add
add
add
dec
scas
cmp
add
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
or
add
add
add
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
je
add
and
add
mov
adc
add
adc
add
adc
add
add
add
adc
add
add
add
add
add
add
push
adc
add
add
add
add
add
add
adc
add
add
add
ljmp
add
adc
add
add
add
incl
adc
add
add
sbb
add
add
add
jmp
add
sbb
add
and
add
add
add
decl
add
and
add
sub
add
add
add
ljmp
add
sub
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
jne
xor
cs
insb
add
add
add
push
jns
inc
jb
gs
je
imul
add
jbe
jo
xor
cs
insb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
jne
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
gs
insb
xor
cs
insb
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
push
push
add
add
add
add
push
add
add
add
add
add
int3
fnsave
sub
rorb
mov
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
xchg
rolb
icebp
pop
or
clc
repnz
push
add
xorps
cli
inc
out
inc
aam
cmp
mov
loopne
dec
jecxz
call
add
sbb
ss
pop
in
hlt
jne
in
jge
int3
es
mov
je
mov
pop
jno
rep
in
dec
or
push
sub
enter
jge
mov
shl
or
inc
outsl
dec
mov
sbb
orb
xchg
or
xchg
int3
pop
hlt
iret
data16
and
and
roll
inc
stos
add
pop
sub
fwait
int
adc
popf
or
loopne
incl
js
or
setg
dec
out
or
scas
icebp
cmp
cmp
jg
icebp
cmp
mov
icebp
xor
xchg
push
hlt
and
dec
aam
mov
call
inc
add
imul
add
pop
lea
dec
cmp
repz
ds
sub
call
or
push
sub
shll
nop
pop
push
jne
and
or
pop
outsb
mov
and
movsb
cmpsb
pop
or
sbb
out
repz
or
js
pop
scas
mov
rolb
addps
sub
mov
jbe
xor
mov
push
add
add
cli
mov
or
incl
jmp
popa
andb
pop
xchg
and
bound
adc
je
cwtl
lock
cmpsl
outsb
or
or
lahf
test
adcl
add
mov
or
cmp
cltd
or
insl
std
add
je
sahf
adc
push
imul
rol
ljmp
or
adc
outsb
lods
and
inc
inc
jns
fldl
push
cltd
dec
fmull
pop
cwtl
and
sbb
adc
jge
dec
xchg
jmp
pop
movl
add
lea
or
pop
daa
push
mov
test
cmp
push
mov
clc
adcl
es
cmpsb
sub
cmpsb
mov
mov
jae
mov
sbb
bound
inc
pop
sub
mov
add
xor
in
mov
lea
push
clc
test
adc
push
jmp
mov
pop
jmp
sbb
dec
js
pusha
fmull
test
jp
dec
jae
mov
pop
lea
mov
dec
fstp
jne
out
imul
je
add
pop
push
sbb
loope
out
mov
inc
sbb
mov
mov
loop
enter
enter
sub
adc
or
mov
or
xor
xor
jmp
mov
inc
bound
mov
or
popa
jno
or
les
sub
andb
push
pushf
bound
test
sbb
das
xor
pop
rorb
fsubs
lock
cwtl
adc
sbb
inc
inc
mov
sbb
repz
jl
movsb
cs
sar
inc
jecxz
pop
decl
push
push
nop
or
incb
mov
sbb
gs
sbb
out
insl
add
jb
js
cld
in
xchg
lock
lea
mov
adc
shlb
push
imul
or
sub
inc
dec
cli
jo
fimull
mov
shl
lret
stc
xchg
jecxz
push
adc
add
push
mov
decb
jo
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
push
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
xchg
test
lock
lret
add
mov
pop
inc
dec
addb
dec
cmp
sbb
jb
xchg
pop
adc
mov
mov
sbb
mov
stos
add
push
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
mov
xchg
fstpt
enter
fs
loop
xchg
leave
fldl
fildl
push
call
cld
add
mov
lea
sbb
sbb
jo
adc
lea
test
orb
or
dec
test
push
inc
add
mov
roll
or
lcall
adc
xor
or
push
mov
or
or
test
cmpsl
adc
dec
xor
adc
cwtl
add
or
test
jb
dec
in
push
or
mov
add
add
xor
in
test
push
mov
divb
add
dec
adc
cmp
movsl
std
sbb
jae
or
adc
add
call
cmpsl
add
push
jno
add
dec
pushf
adc
mov
add
add
lock
sbb
jbe
adcb
das
pop
lds
lods
stos
and
nop
cmpl
add
jae
test
fmull
mov
hlt
jnp
test
rep
out
iret
and
cmp
das
sbb
push
arpl
sbb
call
add
mov
mov
inc
cltd
push
push
and
xchg
popa
aaa
and
push
call
and
pand
or
rcll
xor
leave
je
xor
and
shrb
mov
lea
inc
jne
mov
adc
sub
xorb
loope
fiaddl
jg
lea
push
aas
pop
mov
sbb
lahf
inc
mov
aas
rol
cmpsb
xchg
orl
lcall
or
aaa
ficoms
inc
movsl
or
sbbb
movb
jmp
rorb
ret
adc
pop
mov
sbb
mov
cmpsb
cmp
add
add
pop
pop
pop
sub
ret
imul
dec
mov
sub
loopne
orl
xchg
and
test
dec
sti
push
mov
push
sti
scas
rol
push
les
xor
orl
add
in
pop
lods
push
xor
scas
leave
inc
push
sbbl
mov
shrl
push
pop
adc
lods
and
loopne
jmp
cmpsb
cltd
inc
or
push
push
and
loop
push
sbb
pop
cmp
or
and
xor
jmp
popf
js,pn
add
mov
adc
jge
leave
inc
xchg
push
jp
insb
and
adc
add
jne
cmp
jge
loopne
inc
lmsw
sub
in
shll
push
enter
sbb
cmp
ret
shr
cwtl
rclb
dec
les
adc
add
mov
xor
enter
mov
xor
xor
int3
pop
jmp
popf
pop
push
push
mov
clc
nop
xor
sub
data16
adc
call
pop
push
mov
or
push
test
mov
in
and
sti
not
daa
fcoml
mov
mov
fs
loopne
ret
pop
jge
sub
dec
clc
shll
add
movsl
pusha
sub
ljmp
jnp
push
addr16
movsb
push
mov
nopl
pop
pop
enter
cmp
ret
xorb
mov
pushf
inc
lcall
push
push
xchg
xchg
mov
test
push
mov
sbb
outsb
orl
ret
mov
pop
das
and
mov
mov
hlt
pop
push
dec
or
das
aaa
push
push
in
push
in
in
sar
enter
leave
mov
inc
ljmp
std
mov
popa
jmp
pop
xor
cmp
jne
adc
jmp
fidivrl
inc
loopne
add
push
adc
loopne
sub
pop
jns
fcmove
or
xchg
sub
roll
scas
in
fwait
pop
adc
dec
cmpb
pop
mov
xchg
je
add
out
inc
xor
jp
lcall
and
push
add
push
push
call
sbb
mov
adc
lds
bound
inc
sbb
or
adc
ror
adc
mov
mov
imul
xor
pop
test
cmp
jmp
and
inc
jmp
or
into
jge
mov
adc
test
add
repnz
push
outsb
daa
mov
fdivrs
jg
test
pushf
and
inc
add
jns
lock
jno
xchg
dec
fs
dec
pop
push
dec
sbb
xchg
add
push
xchg
mov
push
xlat
sub
repz
sub
mov
shr
push
adc
sbb
dec
or
inc
jmp
pop
ss
imul
jmp
sbb
loopne
inc
cmp
mov
jl
sbb
iret
shr
pusha
loope
push
lea
push
mov
push
mov
pop
test
cmp
cmp
sub
mov
sbb
mov
enter
adc
inc
and
cmpsl
sbb
and
scas
mov
dec
dec
cmp
mov
xor
subb
xor
pop
mov
cmpsb
dec
push
js
jo
insb
push
imul
and
jecxz
lahf
or
jae
and
jne
in
rclb
icebp
popf
cmp
lahf
fs
arpl
insb
repnz
in
je
bound
ss
fs
inc
jno
rolb
cltd
andb
insb
and
xchg
xor
sub
xchg
daa
arpl
jae
fwait
xor
pop
dec
outsl
push
dec
popa
addr16
inc
outsl
js
shll
js
data16
cmp
int
cmpl
push
dec
movsb
mov
push
fs
mov
push
sbb
inc
sahf
je
test
push
insb
sbb
jl
imul
orl
lcall
mov
insl
cmp
xchg
or
and
cmp
cmpsb
xor
dec
xor
add
add
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
mov
add
pushf
push
add
mov
push
add
or
add
or
add
add
inc
add
adc
add
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
and
insb
and
pop
and
pusha
and
or
add
add
add
jmp
push
mov
sub
mov
mov
xor
inc
push
mov
push
mov
shl
mov
mov
push
mov
shl
mov
add
mov
shl
dec
dec
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
rep
mov
push
mov
or
pop
mov
movzbl
shl
or
inc
dec
mov
jne
cmpl
mov
jbe
jmp
mov
mov
mov
mov
and
shl
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
movzbl
mov
and
push
pop
sub
xor
shr
mov
shl
mov
inc
add
imul
cmpl
lea
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
cmp
lea
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
test
mov
jne
jmp
sub
sub
mov
shr
sub
test
mov
mov
lea
je
cmp
jl
jmp
cmp
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
mov
add
shl
mov
mov
add
cmp
mov
lea
jae
mov
shl
mov
mov
movzbl
shl
or
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
xor
cmpl
mov
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
xor
movl
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
push
movl
jmp
sub
sub
mov
shr
sub
mov
add
push
movl
pop
mov
mov
mov
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
shll
mov
jmp
sub
mov
sub
mov
shr
sub
mov
mov
lea
mov
decl
jne
mov
xor
inc
mov
shl
sub
add
cmpl
jge
addl
cmpl
jge
mov
jmp
push
pop
mov
shl
lea
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
mov
lea
decl
jne
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
lea
shl
movl
xor
inc
mov
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
shr
sub
mov
sub
or
mov
lea
shll
decl
jne
inc
mov
je
mov
mov
addl
sub
add
decl
mov
mov
incl
inc
cmpl
mov
mov
jne
mov
cmp
jb
mov
mov
pop
pop
mov
xor
pop
leave
ret
push
mov
sub
push
mov
movzbl
push
cltd
push
pop
idiv
push
pop
push
push
movzbl
mov
cltd
idiv
mov
mov
mov
mov
mov
add
mov
shl
add
shl
push
push
call
mov
mov
lea
push
push
pushl
mov
push
add
push
lea
push
call
push
push
pushl
call
mov
pop
pop
leave
ret
add
push
add
add
add
add
inc
add
adc
add
or
add
adc
add
add
push
add
insb
or
add
mov
add
loopne
add
add
add
adc
add
add
add
pop
add
sub
add
add
add
xchg
push
xor
add
incl
mov
add
dec
add
in
or
add
add
add
add
add
add
incl
xor
add
add
stos
add
add
add
add
add
xchg
push
xor
add
incl
adc
add
adc
add
add
add
add
add
add
incl
adc
add
adc
add
add
push
push
add
adc
add
add
add
add
add
movsl
adc
add
add
add
add
add
add
incl
adc
add
adc
add
add
add
add
dec
xor
adc
add
push
adc
add
add
jae
add
add
add
add
add
add
push
push
call
pop
sub
lea
mov
add
sub
cld
mov
mov
mov
add
lea
lods
stos
lods
stos
lods
stos
lods
stos
nop
cmpl
je
mov
test
je
mov
add
mov
add
rep
mov
lea
add
add
add
lea
push
call
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
push
call
mov
push
call
lea
test
jne
push
call
push
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
add
push
push
call
test
je
mov
mov
test
jne
lea
jmp
test
je
push
and
push
lea
push
lea
push
call
jmp
mov
add
inc
inc
push
push
lea
push
lea
push
call
lea
push
lea
push
push
push
call
push
call
mov
mov
cmpl
jne
mov
mov
mov
add
movb
add
sub
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
nop
nop
nop
nop
nop
nop
push
call
push
push
pushl
call
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
push
push
call
pop
sub
mov
mov
add
push
call
mov
mov
mov
add
add
xor
add
je
push
mov
add
push
pushl
call
stos
pop
add
jmp
add
add
jne
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
lods
test
je
add
mov
jmp
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
movzwl
test
jne
test
je
push
push
mov
xor
mov
movzwl
mov
add
cmp
jge
mov
inc
movzbl
add
sub
mov
je
dec
mov
jne
mov
cmp
jne
shr
rol
xchg
sub
mov
add
add
add
inc
jmp
pop
pop
xor
add
je
cmp
je
call
pop
sub
lea
jmp
jmp
push
mov
mov
add
sub
pushw
push
push
call
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
mov
mov
movzwl
test
je
push
mov
mov
mov
add
mov
sar
rep
add
and
rep
mov
mov
add
xor
push
mov
sar
rep
add
and
rep
pop
mov
mov
add
mov
mov
sar
rep
add
and
rep
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
movzwl
mov
push
push
push
movzwl
test
je
push
mov
mov
mov
mov
sub
mov
add
mov
sar
rep
add
and
rep
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
mov
mov
dec
mov
push
push
pushl
call
lea
push
pushl
pushl
call
mov
inc
je
xor
add
je
dec
mov
pushl
pushl
popl
popl
jmp
pop
push
mov
add
cmp
jne
add
jmp
mov
mov
sar
rep
add
and
rep
mov
add
shr
shl
sub
mov
xor
push
mov
sar
rep
add
and
rep
pop
pop
pop
pop
pop
add
dec
jne
xor
pop
pop
pop
leave
ret
pop
pop
pop
pop
xor
inc
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
xor
cmp
jne
cmp
je
add
je
add
mov
add
mov
test
je
add
push
push
push
push
call
inc
jne
dec
pop
pop
pop
leave
ret
add
jmp
insl
jae
bound
add
in
add
push
push
push
call
pop
sub
mov
mov
xor
mov
xor
inc
inc
mov
pushl
call
mov
mov
test
jne
dec
jne
xor
dec
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
jne
mov
test
jne
mov
movl
mov
test
je
push
mov
test
je
and
push
jmp
mov
add
xor
mov
push
inc
inc
push
pushl
call
pop
test
je
mov
mov
add
add
jmp
xor
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
mov
mov
mov
sub
mov
xor
lods
test
je
cmp
je
inc
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
add
xor
mov
lea
add
mov
shr
shl
push
lea
push
push
push
push
call
mov
test
je
sub
mov
pop
lea
push
pushl
push
push
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
mov
add
lea
mov
shr
shl
push
lea
push
push
push
push
call
mov
mov
pop
lea
push
pushl
push
push
call
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
jo
insb
imul
and
jb
jb
inc
jo
insb
imul
and
jb
jne
je
add
and
outsl
arpl
jne
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
add
add
arpl
add
jne
gs
xor
dec
gs
popa
addr16
outsl
js
add
jo
imul
gs
gs
xor
add
imul
jae
inc
insb
outsl
jae
dec
popa
outsb
fs
add
outsb
push
jb
arpl
jae
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jb
jne
insb
push
jb
je
arpl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jbe
add
lcall
adc
push
add
insl
push
add
rcrl
add
jmp
add
push
push
add
cmp
add
dec
push
add
add
add
jp
add
pushf
sbb
adc
