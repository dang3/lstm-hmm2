sti
idiv
pushl
rol
push
mov
call
mov
mov
pop
ret
sub
fnsave
xor
push
push
push
bound
enter
sub
add
inc
sub
out
cmp
adcb
adc
jno
out
add
adc
add
mov
jae
sub
mov
pop
pop
inc
cmpsb
sub
mov
mov
out
lret
test
add
shlb
icebp
mov
mov
mov
rolb
add
test
call
es
std
outsl
ja
je
and
pushl
push
je
jmp
lea
sub
ret
sbb
cld
sub
inc
clc
outsl
lock
loopne
sub
lea
push
movl
mov
add
push
or
loopne
add
mov
add
dec
jne
pushl
push
inc
mov
mov
pop
lea
push
lea
or
ret
movsb
aas
pop
lock
pop
add
sub
pop
sti
decl
jb
je
arpl
imul
add
jmp
add
push
clc
mov
lock
push
mov
incl
test
jle
add
imul
int
jbe
mov
mov
fsub
jg
xor
mov
std
jbe
mov
mov
test
jne
mov
notb
push
popf
ja
mov
and
mov
push
enter
stos
and
cmpsb
add
cmp
add
dec
das
cmp
mov
js
cld
movsb
fsubrl
lret
jge
fs
fs
outsb
add
cmp
int3
dec
and
test
jne
test
aaa
sub
cmpb
add
leave
jne
cmpb
lahf
sbb
test
cmp
jne
or
and
repz
fwait
mov
adc
or
sbb
call
jne
sub
cmp
mov
xor
sarb
idivl
in
shl
push
je
mov
inc
jle
inc
push
rcrl
add
aam
leave
sahf
lret
les
cmpsl
repz
or
cmpsb
push
mov
testb
or
rep
pop
and
push
mov
sub
mov
stos
add
push
loope
movsl
xchg
hlt
mov
gs
bswap
in
in
lods
add
or
pop
into
cmpsb
cld
insb
cld
insb
int
xor
jmp
clc
mov
or
xor
lods
mov
clc
mov
mov
mov
cli
pop
push
inc
call
rcrl
jbe
adc
sbb
mov
repnz
pop
pop
aam
lods
loopne
pusha
movsl
push
insb
in
jo
mov
and
add
jno
aas
pop
pop
push
push
mov
mov
add
jnp
divl
scas
pop
jmp
mov
cmp
add
and
scas
xor
hlt
jbe
test
cmp
loope
cld
into
or
cmpl
fisttpl
popl
and
jo
push
xchg
pushf
dec
sbbl
add
cmp
inc
add
sbb
push
jl
clc
mov
xchg
sarb
enter
outsl
call
and
xchg
test
add
push
cmpsb
sub
jae
clc
push
dec
inc
fcoms
je
pop
adc
mov
sahf
movsl
add
jbe
sbb
cmp
pop
clc
dec
jne
jmp
dec
adc
adc
or
cmpsl
mov
call
clc
lea
dec
push
push
hlt
clc
dec
hlt
xor
pop
cmp
lock
addl
and
rclb
add
xor
test
popa
pop
inc
mov
dec
inc
pop
push
addr16
dec
ljmp
pop
or
loope
add
testb
xchg
add
and
sub
aam
or
mov
add
addl
or
adc
mov
or
cmp
inc
xchg
or
fisttps
xor
pop
adc
dec
div
or
push
mov
fiaddl
in
call
loopne
call
pushf
or
jne
pop
cmp
mov
mov
xor
inc
sbb
add
and
int3
fists
call
push
and
call
fisubrl
arpl
add
lret
mov
push
push
rolb
xchg
inc
or
and
sub
hlt
jno
dec
aaa
inc
stos
and
adc
ficompl
inc
push
or
and
xchg
and
clts
bound
and
jmp
xchg
sbb
pushf
mov
jo
dec
jecxz
arpl
mov
or
push
aam
xchg
push
push
mov
sub
movsl
xorb
adc
aad
ljmp
leave
and
pop
inc
xlat
xor
rclb
std
adc
std
frstor
imul
repz
mov
mov
push
pusha
or
inc
data16
fnstenv
adc
mov
adc
pop
leave
and
mov
xchg
mov
sub
mov
xchg
pop
ljmp
fstpt
and
inc
lcall
and
cmp
or
xchg
sbb
clc
or
sahf
sbb
sub
sbb
mov
cmp
aad
leave
inc
add
popf
push
clc
clc
push
dec
push
push
scas
pusha
call
pushf
rol
popa
mov
mov
adc
hlt
push
mov
fsubrl
jne
rorb
out
pop
dec
jb
rcll
inc
insb
push
enter
xor
push
add
out
ret
popa
sub
or
add
sbb
cmpb
add
cmp
clc
add
adc
push
and
sbb
add
add
fsubrp
lahf
or
cmc
dec
fdivrp
adc
leave
ret
aas
cmp
lcall
xchg
hlt
fnstcw
mov
or
mov
ret
or
and
insl
cld
fistpll
insl
inc
mov
add
mov
dec
and
sbb
sbb
mov
mov
std
dec
hlt
push
cmp
incl
push
mov
push
cmp
jg
push
push
xchg
addb
pop
pop
cmp
jl
adc
and
mov
test
inc
push
hlt
fs
cmp
cmpsb
cltd
test
mov
pop
xchg
push
lcall
dec
shl
sbb
pop
ret
add
add
pushf
mov
cmc
adcb
dec
shl
lcall
rolb
mov
push
andl
sbbl
and
inc
in
faddl
int
push
in
pop
mov
mov
dec
lahf
test
inc
pop
pop
pop
test
pop
mov
mov
fstpt
out
lds
aad
or
pop
nop
lret
and
sbb
cmpsb
inc
movsb
adc
dec
jae
lcall
sub
push
cld
lahf
fcompl
push
dec
mov
loopne
mov
movl
inc
loopne
inc
mov
adc
push
incb
cmpsl
imul
push
subl
scas
cmp
sahf
push
push
jne
sarb
pop
xchg
jae
sahf
add
clc
cmpl
xor
shll
cmp
or
sbb
mov
add
popl
insb
jo
mov
mov
add
leave
mov
lock
xor
and
xchg
aas
xchg
fildl
dec
test
rolb
adcb
ret
das
cltd
push
xchg
inc
fmull
loope
inc
fdivr
fcoml
or
fdivr
adc
dec
jo
push
sbb
adc
jle
mov
scas
or
mov
sbb
dec
or
adc
and
or
test
adc
mov
dec
add
dec
xchg
stos
ss
and
call
popf
scas
or
and
xor
inc
jb
fstpl
cltd
aam
in
xchg
xor
add
sub
in
shrb
cmp
add
xchg
or
pop
lods
dec
cmpsb
movsb
cmp
add
pushf
fcmovnbe
clc
xchg
lods
xchg
lcall
faddl
mov
test
adc
fstpl
or
je
xlat
popf
jmp
popf
insb
and
jne
cld
ftst
fnstsw
test
je
fchs
fcompl
add
jne
call
push
and
jmp
mov
inc
pushf
pushl
inc
jl
test
addl
push
roll
ret
mov
test
xor
mov
xor
fdivrs
rcrl
std
ror
cmp
push
push
push
push
push
stc
pop
pop
pop
xorl
xchg
aam
leave
test
lods
subl
shlb
inc
add
and
es
aaa
jmp
in
push
and
je
cmp
mov
popa
xorl
test
scas
xchg
sbb
and
lahf
inc
add
shl
push
inc
jo
push
movsb
push
and
dec
mov
and
mov
maxps
ljmp
lahf
mov
xchg
stos
cmpsb
sub
xchg
or
inc
cli
or
test
cld
mov
imul
xor
stc
add
cld
imull
adc
shl
gs
aam
add
sub
test
and
push
xor
jno
fwait
sarb
sar
mov
cmpb
xor
mov
notb
add
cmp
mov
mov
xchg
mov
out
sbb
sub
jns
lods
cmp
int
insl
or
ret
push
or
lock
mov
pushl
lret
and
jnp
imul
push
cmp
add
cmp
lock
mov
sbb
lock
or
xor
sub
cld
push
add
test
aas
nop
lock
inc
mov
mov
fs
sub
and
mov
fldt
mov
in
pusha
rcl
or
sbb
and
sbb
adc
push
icebp
fildl
jnp
fstpt
faddl
or
add
jge
xor
scas
or
nop
push
aam
andl
sarb
aam
sub
movsb
imul
or
stos
add
rorb
add
fmull
xchg
movsb
jl
jns
add
jge
fmul
adc
dec
fcomp
and
shlb
inc
xorl
pop
enter
sub
pop
ffreep
les
or
jo
push
mov
add
out
mov
rol
test
inc
rclb
and
push
sub
sub
pop
rorb
lods
lock
ds
inc
cli
movl
xor
sbb
sbb
ds
mov
push
in
gs
in
cmp
or
or
sbbb
mov
push
xchg
addb
test
fucom
adc
arpl
and
xor
aam
inc
mulb
add
dec
pop
adc
inc
test
loope
fs
or
aaa
xor
mov
push
enter
in
mov
loopne
fcompl
add
loopne
je
push
inc
xor
fsubl
adc
fiaddl
xchg
popa
adc
lods
pop
adc
dec
addl
or
pop
mov
or
addb
in
jmp
insl
cmp
add
inc
and
dec
sbb
fcompl
sub
adc
push
roll
or
sbb
mov
cmp
fldl
daa
add
fwait
call
dec
xor
sbb
add
mov
inc
mov
clc
loopne
add
and
aas
fcoml
inc
fldenv
dec
fsubrs
push
mov
add
aam
fdivr
and
cmp
rcl
push
xor
inc
iret
sbb
sub
pop
les
cmp
mov
in
rclb
and
inc
inc
xor
stos
adc
jns
sub
xor
push
or
xor
adc
dec
or
push
adc
sub
and
pop
cmp
mov
push
lods
add
fwait
mov
icebp
scas
stos
push
pop
fstpl
lret
stos
dec
sub
mov
xor
inc
dec
adc
lods
aam
and
inc
lods
mov
adc
add
ret
inc
pop
nop
inc
dec
pop
mov
adc
sbb
cmpsl
mov
lods
aas
clc
movl
add
hlt
rorl
in
jge
adc
subb
call
xorb
cmp
mov
xchg
sahf
add
insb
add
in
xor
hlt
xchg
add
ds
or
sub
movb
enter
lds
xor
add
xor
sbb
hlt
in
sarl
cmp
fistpll
sbb
sbb
mov
sub
js
test
rcll
and
test
push
push
mov
or
and
jne
inc
mov
fnsetpm(287
bound
mov
cld
fs
orb
arpl
add
stos
cld
pop
mov
pop
sub
jno
mov
xchg
scas
adc
jb
adc
out
and
fiaddl
int
call
or
and
inc
adc
and
mov
or
in
dec
mov
push
pop
roll
mov
ret
cmpb
and
outsl
loopne
and
loopne
pusha
and
rcll
mov
push
mov
jp
lods
push
ss
sub
pop
sub
add
push
mov
stos
pop
dec
add
pop
ret
stos
push
nop
es
cmpl
sub
xchg
mov
les
es
lea
leave
sbb
gs
sbb
imul
hlt
add
orb
insl
fsub
push
addl
into
adc
mov
movsl
sub
xor
mov
adc
dec
loopne
loopne
jb
and
loopne
fsubrl
outsb
pop
inc
or
add
push
popa
popf
rorb
mov
movsl
add
add
or
cltd
dec
sub
adc
lea
adcl
inc
add
add
pop
mov
ds
les
popa
clc
nop
insl
leave
adcb
dec
cltd
pop
add
cmpsl
inc
fwait
add
inc
or
js
and
sbb
out
mov
adcb
xchg
cmpl
xchg
clc
nop
cmp
je
ret
cmp
xor
jge
mov
and
add
inc
push
push
aaa
fsts
push
test
add
push
rcrb
repnz
hlt
cmp
sub
add
xor
repz
inc
push
xchg
push
outsb
and
push
xchg
and
xor
sbb
mov
das
nop
in
fildl
cmpsb
or
loopne
sti
hlt
fcompl
mov
mov
cwtl
sub
cld
cmpsb
pushf
and
outsb
pop
cltd
mov
xchg
xchg
movsb
addr16
fsubr
adc
popa
jge
xlat
cmp
repz
mov
dec
xor
push
dec
repnz
xor
jge
in
push
cmpsb
sbb
cmp
mov
fcomps
jo
rorl
sbb
and
fs
jmp
adc
in
sub
insb
in
mov
push
popa
cmc
sbb
and
add
add
sbb
push
inc
shll
aaa
shlb
sub
jne
add
push
xor
mov
fimuls
cltd
inc
inc
and
or
sub
scas
xlat
and
test
jge
adc
shlb
mov
inc
pop
or
aam
sarb
mov
mov
lods
fwait
ror
in
nop
test
enter
jnp
inc
mov
dec
push
or
add
dec
mov
xor
test
and
scas
or
dec
mov
lea
lds
shl
adc
or
loopne
mov
test
ljmp
mov
nop
inc
or
aaa
sahf
es
aad
push
std
popl
pop
add
pushf
jnp
leave
call
inc
ror
add
in
daa
inc
sbb
add
mov
add
shl
inc
repnz
loopne
and
pop
push
leave
fistpl
mov
call
mov
es
dec
fdivrs
sahf
icebp
lahf
insb
cmp
jg
add
fadds
lods
outsb
shlb
mov
xchg
mov
or
repnz
push
add
xor
xchg
jl
adc
mov
lods
adc
or
lods
movsb
movsb
adc
mov
mov
inc
sbbb
inc
leave
or
inc
jo
aad
pop
pop
pop
inc
cs
inc
or
sarb
sub
inc
push
enter
mov
dec
push
loopne
add
stc
movsl
sbb
dec
enter
lds
test
pop
pusha
les
out
mov
cmc
scas
xor
sbb
add
cmp
ljmp
jne
movsb
push
insl
es
push
adc
push
xchg
je
jl
and
adc
leave
aam
xchg
and
mov
mov
and
insl
adc
das
mov
pop
mov
sub
js
and
push
leave
in
adc
bound
jo
inc
push
aaa
adc
cli
test
push
xor
xchg
sbb
lock
push
cltd
and
lock
dec
or
clc
push
sbb
enter
add
xor
test
add
and
add
xor
xchg
pushf
xchg
sub
add
adc
inc
enter
inc
dec
leave
dec
mov
dec
fs
cmpsb
or
mov
pop
and
cmp
sub
and
nop
outsb
push
xchg
mov
dec
mov
ret
push
cmp
push
dec
sub
loopne
cmpsb
inc
or
mov
insb
rol
or
sub
mov
loop
daa
daa
popa
xor
jnp
stc
pop
pop
mov
jnp
sbb
add
loop
cld
pop
hlt
inc
add
cwtl
adc
into
test
cmp
xchg
in
test
xchg
sub
fldt
adc
xor
mov
lock
mov
add
and
loope
in
ret
mov
inc
or
test
pop
and
or
test
sbbb
inc
fcomps
cmc
mov
xchg
test
imul
jge
les
or
lahf
inc
push
std
add
inc
or
pop
hlt
fisttpll
sbb
cltd
jmp
pop
jp
xchg
andl
pushf
and
mov
fnstcw
dec
cmp
cld
lock
pop
or
rorl
cmp
inc
fidivl
pop
lods
jmp
sbb
add
fidivs
mov
adc
push
jp
repz
adc
adc
in
or
fnstcw
jmp
mov
push
mov
pop
int
adc
adc
xor
movsb
out
mov
and
push
pop
pop
ja
mov
ret
pop
xchg
bound
pop
mov
scas
nop
dec
cltd
or
sub
inc
leave
pop
sbb
addb
aaa
jg
xor
jg
call
mov
sbb
or
leave
cmp
mov
insl
cmp
fwait
mov
movsb
and
sbb
pop
das
cmp
and
push
fisubrl
mov
xor
lret
add
push
xlat
aaa
ret
test
push
push
shl
push
sbb
aas
mov
das
frstor
clc
aas
popf
add
jg
loopne
xor
mov
push
inc
cs
and
pusha
sbb
cs
and
mov
cmp
inc
fsqrt
sub
add
mov
xor
sub
js
in
ret
in
pop
sbb
stos
or
dec
push
or
clc
add
and
movsl
inc
cmpsb
inc
clc
jle
out
insb
mov
leave
adc
fs
add
add
inc
addb
lcall
cmp
dec
inc
dec
and
test
add
xor
fcmovnbe
or
xor
cld
lea
push
repnz
pop
clc
ret
jne
lea
add
clc
in
push
leave
sbbb
jne
lock
dec
jl
or
add
push
test
mov
test
movl
pop
adc
or
and
lock
icebp
popa
test
mov
mov
test
add
cmp
inc
mov
hlt
out
cmp
fcomi
or
fmuls
sub
or
enter
jecxz
sbb
add
or
mov
and
pop
imul
sbb
cmp
aad
or
cmp
or
and
push
sar
or
inc
sub
sub
stc
push
pop
pusha
or
sbb
sbb
jne
stos
pop
ret
or
xchg
inc
cli
popa
cmp
or
scas
add
add
ja
mov
rcr
add
test
push
shll
roll
or
lods
shll
ret
cmpsl
or
rorl
in
stos
nop
mov
adc
mov
dec
pop
movsb
test
add
fists
lock
js
aas
dec
in
push
call
sbb
xor
adc
inc
cmp
fsub
and
mov
adc
xchg
dec
dec
pop
and
dec
jl
in
jge
jae
xchg
enter
in
in
bound
in
push
aaa
inc
cmp
test
imul
and
xorl
jecxz
jnp
addl
adc
cmp
xor
xorb
ljmp
or
repz
and
mov
aam
cmc
mov
lock
in
call
scas
call
ret
dec
lock
jbe
push
or
cmp
and
dec
adc
mov
sub
outsl
insl
mov
sub
in
dec
xchg
sub
or
sbb
pusha
jb
das
and
test
jp
mov
push
and
and
mov
pop
test
xchg
sbb
sbb
sub
or
movsl
rolb
shlb
movsl
add
test
into
mov
and
jmp
outsl
push
inc
lods
inc
bnd
lock
daa
dec
insl
je
outsl
clc
dec
push
or
movsl
clc
mov
and
adc
xchg
pop
sbb
leave
push
xor
ja
jo
lea
push
add
icebp
test
test
sbb
xor
aam
push
sarb
imul
insl
movsl
stos
fcompl
xor
je
dec
and
or
mov
dec
jne
or
loopne
lods
fstl
outsb
mov
mov
mov
mov
add
cltd
mov
fwait
incl
mov
mov
or
hlt
dec
arpl
inc
pop
mov
dec
movsb
mov
inc
push
lea
push
or
sbb
mov
mov
int
mov
pop
leave
xor
hlt
and
cmpps
add
push
dec
pop
loopne
mov
aad
hlt
jns
test
mov
sar
lock
aam
jo
fildl
in
pop
inc
test
mov
xor
fildll
xorl
xchg
rcrl
ds
or
inc
xor
lock
jmp
add
xchg
sub
std
jo
popa
popf
imul
push
repnz
test
add
mov
daa
mov
mov
stos
fstps
clc
xchg
push
popa
adc
inc
lods
inc
mov
sarl
shr
inc
lcall
mov
adc
mov
shrl
pop
ss
ret
jnp
or
ret
sbb
cwtl
pop
repz
or
cmp
push
add
stos
add
int
or
mov
shll
jmp
xor
movsb
jo
cld
jno
enter
mov
sbb
gs
add
fsubl
mov
stos
test
lea
cs
sub
add
lahf
test
fs
mov
pop
mov
mov
imull
push
lods
hlt
xor
add
xchg
and
test
shlb
mov
call
mov
jmp
sbb
test
loopne
adc
push
enter
fsubrl
mov
jmp
push
sbb
aam
fdivs
adc
xor
cmp
fisttps
adc
or
add
cli
fcomip
push
fistps
adc
sti
nop
pop
xor
add
add
push
xchg
imul
jo
jae
sti
push
pop
insb
jp
test
imul
and
lods
sbb
adc
or
test
add
pop
adc
sub
mov
adc
pop
stc
cmp
push
adc
adc
sbb
lds
incb
cmp
push
sbb
adcl
pop
sub
mov
inc
rclb
pop
add
dec
not
rep
cmpl
fs
call
test
hlt
or
add
movsb
or
add
cmpl
sub
mov
in
or
jmp
or
test
or
int
dec
roll
in
mov
inc
imul
pop
sbb
sbb
and
into
dec
push
lea
sahf
adc
or
add
dec
cld
and
push
push
test
adc
outsb
sub
cld
jns
sbb
rorl
add
mov
jns
jbe
lds
xchg
xor
mov
outsl
xor
mov
push
dec
ds
pop
push
jmp
rcrb
mov
inc
sbb
shlb
sbb
enter
jge
and
jo
pop
xchg
fcoml
arpl
fs
sbb
aas
dec
jecxz
add
int3
pop
add
lock
xchg
stos
cs
push
or
add
loope
pop
push
add
push
cmp
aad
rcr
push
push
lea
int3
lods
sbb
popa
int
test
add
clc
lret
rep
out
clc
or
and
push
hlt
mov
or
test
fnsave
xor
shrb
jo
mov
add
or
test
enter
and
cwtl
adc
mov
xchg
scas
jns
clc
add
roll
pop
adc
je
dec
and
push
mov
push
pop
sub
popa
jmp
lds
adc
adc
pop
or
aam
lods
adc
or
push
lds
or
arpl
gs
push
mov
leave
gs
lahf
inc
jb
add
in
fcom
mov
rcll
push
mov
imul
mov
add
in
jmp
test
add
cs
sub
insb
dec
sub
orb
cwtl
mov
cmpsl
xchg
orl
dec
movl
mov
pop
and
add
add
push
dec
aam
and
pop
and
cltd
in
sub
and
mov
inc
jmp
imul
dec
add
sbb
je
adc
iret
dec
jnp
mov
addr16
dec
test
dec
inc
add
fwait
hlt
and
cmp
add
xor
dec
ret
xor
lock
in
sub
add
aam
lea
in
add
adc
or
movsb
jo
out
test
and
dec
xchg
addb
int
sub
ret
jmp
sub
and
fwait
sub
xor
add
movsb
inc
fcoml
mov
adc
and
sbb
sbb
jmp
pop
rclb
lods
adc
pop
xchg
clc
sub
ss
or
repnz
test
loop
adc
adc
je
push
cltd
push
add
inc
or
sbb
cmp
sbb
add
sbb
or
lea
leave
adc
ds
mov
dec
mov
stos
loopne
add
jb
lods
sbb
inc
mov
int
pop
inc
or
lahf
xor
xchg
pop
and
dec
xchg
scas
inc
lret
lock
mov
cmpsb
mov
pop
in
push
adc
andb
sub
ljmp
shlb
or
add
fcompl
add
or
pop
faddl
mov
jl
jno
cmp
enter
add
xor
inc
add
sub
cmp
rorb
lock
movsb
push
loopne
dec
push
es
sbb
fcomp
push
aam
mov
and
add
faddl
ror
dec
aad
daa
lret
enter
add
enter
lock
repz
and
out
lcall
shlb
in
pusha
xor
add
xchg
push
and
xor
and
mov
add
or
subb
sbb
in
xchg
outsb
and
and
inc
lock
icebp
sub
lcall
add
add
mov
mov
pushf
xchg
dec
in
mov
andb
mov
dec
dec
sbb
sbb
popf
pushf
push
sub
sbb
cmpl
test
adc
xchg
add
dec
and
in
mov
sbb
pop
ret
xor
adc
push
fsubrl
sbb
inc
roll
mov
les
sbb
adc
jge
hlt
in
mov
add
xor
clc
jle
mov
or
rolb
std
arpl
mov
test
mov
mov
ret
cmp
mov
fcomps
outsl
ss
sub
clc
fsubs
fwait
pop
movsl
and
in
mov
sbb
add
pushl
mov
adc
sub
stos
add
lock
push
mov
fldt
andb
or
les
movsb
xchg
dec
adc
add
push
add
loop
test
shll
insb
cmp
lahf
or
inc
or
fs
and
fcmovb
jmp
insl
lods
dec
add
push
imul
dec
fiaddl
mov
fsubr
dec
push
nop
dec
in
fsub
xor
loopne
shrl
rcrb
loop
pop
cmp
sub
iret
xchg
dec
mov
rorb
jecxz
sbb
out
inc
push
repnz
dec
mov
or
xor
fmuls
add
push
mov
xchg
add
adc
add
add
lea
rolb
sbb
movsl
cmp
sarb
adc
stc
or
jns
cmpsl
sub
cmp
mov
loopne
xor
testb
les
cmp
xchg
cmpl
loopne
scas
add
fdivs
inc
scas
add
sar
into
xor
addl
ret
sti
aam
add
fcmovnbe
lock
cmp
clc
add
add
adc
inc
xchg
clc
jmp
aas
in
jmp
std
fcompl
scas
xchg
sub
or
or
aam
sarb
movsb
add
leave
push
inc
daa
add
and
mov
push
lods
or
sbb
loopne
xchg
stc
popa
mov
add
fimull
push
sbb
sub
sub
add
sub
lock
and
addr16
popl
mov
addr16
sbb
lods
cmp
addr16
faddl
pop
push
xchg
xchg
movsb
pop
arpl
add
adc
js
scas
nop
push
and
mov
test
sbb
nop
inc
addr16
aam
push
or
push
adc
add
or
loop
add
shrl
dec
adcl
daa
cli
adc
or
cmpl
in
or
adc
pusha
and
mov
nop
sub
mov
add
sub
or
bound
xchg
ret
push
xor
nop
and
and
xor
jecxz
fcmove
and
nop
fcomi
xor
test
pop
sti
lock
adc
add
idivl
add
adc
push
xor
or
popf
loope
pop
xchg
or
xor
inc
jmp
cwtl
mov
popa
mov
inc
and
out
inc
enter
or
cmp
lret
cld
test
stos
ret
pop
test
push
jge
mov
and
push
push
sbb
add
lds
aam
mov
jg
or
and
adc
mov
jns
test
add
sbb
dec
xor
daa
sbb
lods
iret
push
popf
rolb
sub
xchg
sub
or
xchg
in
mov
test
add
out
daa
xor
pop
adc
sti
inc
mov
inc
add
addl
adc
frstor
sub
push
test
add
psubq
dec
loopne
mov
iret
add
xchg
push
adc
push
push
hlt
lds
cwtl
xor
and
repz
sbb
mov
orb
in
pop
adc
pop
and
jmp
mov
popaw
and
pop
adc
pop
test
add
adc
movsl
mov
add
mov
adc
aaa
mov
mov
leave
adc
or
add
mov
mov
pop
mov
mov
test
sub
and
push
or
push
test
data16
repz
stos
adc
inc
das
or
mov
sub
enter
inc
dec
fmull
or
sub
jmp
sbb
jb
ljmp
push
cmp
div
and
stos
pusha
cltd
adc
in
in
jmp
imul
shlb
jno
lods
call
in
adc
jnp
movsb
add
xlat
in
xor
mov
scas
dec
sub
inc
or
mov
xchg
mov
stc
adc
mov
shlb
cwtl
mov
push
adc
inc
sub
fwait
sub
add
xlat
sbbl
and
mov
rorb
pop
mov
ret
aam
sub
icebp
or
push
pop
add
dec
mov
in
xchg
xchg
push
out
xor
or
pop
adc
lea
and
inc
jb
enter
pop
add
or
push
sbbb
adc
jb
enter
or
jb
fs
mov
xor
icebp
push
inc
xchg
xor
test
inc
aam
jmp
lock
add
lock
and
dec
rolb
adc
mov
pop
mov
or
jno
rclb
loopne
jge
adc
ja
xor
ret
jae
repz
rorb
sub
mov
add
xor
mov
outsb
and
loopne
inc
movb
test
xor
sub
xchg
ret
jb
mov
movb
add
xor
jno
jno
sbb
or
cmp
mov
inc
ja
and
ret
stc
insl
inc
fsubrl
scas
mov
or
push
and
aas
addl
cld
lock
cmp
sub
xor
fldenv
push
mov
mov
cmp
add
movsb
adc
or
lock
sub
add
xor
call
rorb
add
lock
add
mov
mov
and
mov
mov
movsb
call
push
lds
xchg
mov
sbb
lock
nop
add
mov
aam
cld
or
outsb
sub
ret
and
aam
dec
icebp
xchg
mov
sub
and
in
adc
lock
inc
rolb
stos
testl
add
int3
jl
jl
inc
inc
enter
adc
inc
and
add
repz
and
pop
sub
pop
int3
fildl
dec
js
sbb
movsl
fsubl
jl
es
inc
movsl
mov
rolb
inc
and
add
mov
mov
shll
lods
mov
jb
add
pop
adc
push
add
in
fs
push
in
int3
orl
sbbl
dec
scas
ficoms
adc
imul
pop
lahf
mov
and
add
or
xor
fsubl
bound
and
fcoms
xor
ljmp
leave
int3
xchg
inc
lods
adcb
add
mov
shlb
lock
into
dec
or
inc
gs
hlt
pop
and
inc
adc
inc
and
add
lock
stc
or
or
sbb
or
ljmp
out
adc
push
adcl
fucom
mov
in
and
inc
add
enter
adc
std
xchg
push
or
push
mov
sbb
dec
mov
insl
lock
inc
test
add
add
mov
jo
aas
iret
mov
test
leave
jge
xchg
inc
test
sbb
popf
mov
shll
sbb
or
stos
stc
adc
xor
sbb
cld
xor
ret
lret
rorb
add
dec
mov
dec
or
adc
dec
sub
dec
sbb
dec
pop
mov
popa
les
loopne
loopne
int3
pop
mov
lods
xor
mov
mov
lret
enter
jo
int3
mov
push
xor
rol
add
mov
or
mov
test
or
aam
push
add
shrl
jmp
aam
inc
or
mov
push
cmp
jl
mov
xorl
push
lea
rcl
add
aad
xchg
mov
testl
iret
lods
and
sbb
rorl
or
pop
cld
cld
int
push
sub
int
outsb
test
fsts
or
sti
movups
pop
syscall
and
testl
and
rcl
add
aaa
add
clc
xchg
inc
sub
nop
adcb
hlt
jo
or
add
cmpb
in
mov
xchg
xchg
and
sub
xchg
xchg
dec
loope
test
lods
or
add
and
movsl
add
inc
and
lret
mov
mov
daa
push
test
les
cwtl
mov
push
adc
subl
hlt
adc
daa
sbb
mov
pop
out
orb
mov
or
mov
push
bnd
decl
inc
jp
jl
out
call
mov
ljmp
mov
jecxz
sub
ljmp
movsb
mov
xchg
mov
adc
mov
fcoml
xchg
hlt
movb
ret
push
das
inc
jae
pusha
xor
int
xor
rcl
frstor
inc
addb
pop
call
das
lock
ret
lahf
jecxz
inc
xor
push
or
pusha
cmp
aaa
mov
or
aas
les
mov
insl
cmp
push
add
xor
and
or
rcr
xor
jl
test
sbb
ljmp
mov
in
push
add
cmp
adc
int3
or
enter
pop
cwtl
mov
cmp
mov
xor
aas
mov
adc
mov
mov
lret
loopne
sbbb
xor
test
push
mov
inc
xor
push
push
xor
inc
cltd
insb
pop
dec
inc
mov
cltd
lock
bound
adc
mull
fcmovne
inc
popf
or
or
or
inc
mov
jae
push
push
lcall
push
call
add
and
push
mov
push
adc
xor
mov
sub
imul
inc
inc
dec
sub
andb
les
jmp
jecxz
int3
fs
add
rclb
mov
jae
add
or
sbb
icebp
add
lods
add
pop
or
add
sbb
dec
push
or
stos
and
adc
adcl
pop
sub
mov
inc
sarb
sub
rcll
inc
mov
mov
fwait
mov
inc
test
rolb
cltd
shlb
push
test
or
push
clc
cld
inc
inc
xchg
dec
pop
enter
aam
mov
add
sub
sbb
incl
inc
xor
push
loopne
adc
adc
out
xor
adc
sbbl
mov
inc
cmp
cmp
mov
test
nop
dec
mov
push
mov
mov
sahf
sbb
lahf
and
cmp
inc
out
negl
lcall
add
test
mov
sub
push
xchg
cmpb
je
es
xor
aaa
rorl
dec
jae
loope
xor
pop
mov
test
dec
pop
and
mov
jl
repz
xlat
lea
add
push
pusha
inc
lds
push
or
adc
mov
call
mov
add
inc
popa
loop
ret
out
dec
in
inc
push
sti
mov
mov
sub
sub
aaa
cmp
sbb
sbb
popf
or
cmp
pand
mov
or
lds
popa
es
test
inc
inc
add
stos
mov
inc
test
leave
and
and
jnp
cwtl
hlt
stos
mov
dec
cs
imul
and
push
add
sub
sub
or
pusha
mov
cmp
sbb
hlt
int3
rcll
sbb
inc
adc
inc
cmc
xor
cwtl
add
mov
add
adc
cmp
jae
sub
mov
nop
mov
add
idivb
or
lahf
adcb
xor
add
jb
repnz
test
jb
xor
loopne
ret
cwtl
mov
dec
push
push
stc
pop
fs
andb
orb
mov
sbb
fsubrl
cmp
and
or
mov
ret
or
in
or
and
xchg
dec
xor
pop
pop
pop
loopne
mov
lret
xchg
xor
adc
ja
add
inc
jmp
out
enter
in
push
orb
or
add
rcll
pop
xor
xchg
xchg
mov
leave
pop
icebp
outsl
inc
inc
mov
or
pop
ret
xchg
cli
in
sbb
in
aam
jmp
jo
adc
sbb
jo
cmp
inc
push
inc
add
shlb
es
shlb
jp
decl
lahf
push
lods
aam
sti
sti
dec
add
add
addb
into
in
insb
fldl
push
shrb
outsb
fcoml
out
pusha
or
call
or
push
mov
push
or
mov
lcall
mov
xor
dec
mov
inc
push
adc
popa
lcall
inc
add
push
mov
cmp
stos
fsubrs
add
mov
and
dec
push
andb
cmp
adc
movsb
pop
les
lods
adc
cltd
cmp
pusha
jmp
les
xchg
stc
and
add
xchg
data16
les
pop
add
loopw
aam
insl
mov
inc
rclb
cmp
or
mov
sbbl
sbb
mov
cmp
mov
stos
sub
test
cwtl
fmull
nop
outsl
nop
movsb
imul
test
fldl
add
or
xchg
pop
jg
lret
jl
add
popw
pop
pop
push
xchg
ret
dec
sbb
fdivp
into
jb
lods
or
push
xchg
xor
mov
push
xchg
fst
fldl
or
or
or
push
inc
push
push
pusha
popa
xor
mov
sub
bound
das
nop
sub
push
bound
nop
mov
sbb
adc
adc
inc
and
sub
dec
or
mov
mov
pop
shrb
adc
inc
leave
inc
inc
adc
push
std
popa
movsb
subb
aam
mov
xchg
inc
or
hlt
add
or
add
orl
scas
jne
xor
pop
fldl
xchg
bound
pop
test
sbb
and
adc
add
add
mov
pop
or
xchg
push
inc
adc
add
add
dec
xlat
push
mov
push
mov
add
sbb
pop
add
mov
test
sbb
dec
jno
cmp
pop
push
movsb
outsb
and
dec
in
nop
pushf
cmp
clts
add
jns
adc
add
or
adc
inc
in
es
leave
in
or
inc
jb
and
shll
sbb
add
into
or
inc
push
or
pop
or
stc
and
cs
xor
push
sbb
icebp
fmull
dec
sub
outsb
out
push
ss
sub
jo
aad
nop
or
jmp
popa
inc
jne
je
js
dec
pop
ret
stc
add
adc
dec
adc
rcl
jb
adcb
pop
or
add
and
stos
inc
and
popa
jne
add
or
xchg
add
xor
nop
sbb
imul
test
lock
imul
push
inc
sbb
add
movsb
test
jb
pop
add
push
adcb
sub
push
add
sub
bound
repnz
sub
add
push
or
sbb
in
dec
or
stos
jl
and
cmp
and
int
cld
test
xchg
sbb
add
int
mov
pushf
fsubrl
mov
mov
stos
sbb
or
xor
lock
shlb
mov
dec
and
into
pop
pop
addr16
dec
inc
add
jno
daa
inc
pop
and
add
jno
and
sahf
addl
adc
inc
fcompl
jp
add
sbb
and
jns
iret
enter
int3
hlt
int3
add
imul
cmp
nop
loopne
fmull
loop
aad
imul
pop
les
dec
outsl
lock
adc
out
ror
add
add
add
inc
dec
and
rcrb
imul
mov
shll
dec
sbb
rolb
in
inc
xor
push
or
fs
lar
and
in
push
test
adc
stos
add
imul
sbb
add
sbb
loope
mov
repz
dec
xor
ret
sbb
cwtl
test
lahf
add
sbb
imul
add
dec
xchg
cld
add
and
ret
and
mov
xchg
jp
rolb
bound
jge
lcall
dec
mov
add
mov
fstps
in
xchg
aam
sub
dec
xor
push
lods
xchg
aas
xor
les
inc
lock
adc
xchg
adc
loope
push
int
jge
push
or
cmc
rcl
andl
pusha
adc
daa
add
movsb
aas
xchg
push
push
sbb
add
sti
mov
add
mov
push
inc
hlt
scas
test
aaa
ret
insl
mov
insb
test
xchg
mov
aam
pusha
inc
sbb
mov
jae
mov
xchg
sbbb
inc
test
xor
dec
add
add
pushl
sbb
ret
call
cltd
fsubl
add
mov
mov
imul
bound
sti
les
mov
pop
sbb
lcall
out
rcll
fsubr
fdivl
pop
and
adc
add
add
adcb
mov
lds
cmp
pop
in
sbb
loopne
dec
adc
and
sub
mov
push
push
and
or
lods
mov
shl
and
lret
dec
lcall
sbb
xchg
int3
int3
push
fwait
roll
lcall
push
jb
add
xchg
adcb
xchg
loope
idivl
icebp
loopne
or
xcrypt-cfb
cmpsl
movsl
xchg
fs
ret
fwait
inc
cld
fstpt
push
sub
push
sub
into
push
push
ss
iret
lahf
and
inc
push
pop
inc
stos
push
xor
jmp
jb
or
cmp
mov
and
dec
inc
arpl
in
cmp
int3
add
jo
push
daa
inc
or
jge
hlt
je
add
push
ja
leave
and
dec
cmp
cld
push
movsb
ret
push
mov
leave
lcall
repnz
mov
pop
not
mov
add
add
or
negb
mov
mov
ret
arpl
mov
aas
aaa
je
adc
push
cli
insl
mov
movl
inc
lretw
or
and
cmp
shlb
sub
cmp
ret
xlat
popf
fcomps
inc
push
and
adc
mov
inc
ret
stos
out
cmp
jbe
fcmovbe
add
mov
aam
adc
jne
or
adc
ret
and
std
js
push
add
sbb
sbb
jo
fildl
inc
jne
pop
pop
fstpl
pop
push
std
in
xchg
ja
ss
adc
sbb
xlat
sub
insb
es
push
push
mov
cld
pop
inc
adc
je
and
ficompl
insb
and
sub
je
inc
mov
pop
adc
lock
push
inc
lods
outsl
mov
sub
or
mov
pop
std
sub
andl
mov
mov
mov
pop
out
insb
loope
jnp
sbb
push
add
add
ficompl
and
out
clc
xor
mov
push
ds
mov
pop
mov
daa
js
add
das
je
lods
add
sbb
or
repnz
iret
pop
lock
xor
je
out
or
fldl
xchg
or
int3
mov
mov
in
sub
ret
test
or
jne
out
push
push
scas
push
pop
jp
xchg
aam
mov
cld
fistpll
push
lea
fldl
fcompl
or
test
sar
xchg
pop
add
out
ljmp
push
xchg
fstpl
ficoml
mov
mov
dec
fstp
jne
frstor
fstpt
sbb
sbb
sbb
or
inc
cmovle
or
xchg
fldl
or
dec
repz
fstpl
push
sbb
movsb
jb
sbb
cmpsl
xchg
cmp
mov
jle
sub
ljmp
loop
movb
push
dec
je
dec
jne
xor
jmp
or
add
das
fisubl
or
ret
cmpsl
mov
lahf
xchg
or
out
push
lock
ja
push
sbb
sub
push
adc
aas
add
icebp
push
or
fs
mov
xor
lea
cld
sub
jo
in
test
mov
imul
sbb
pop
cld
jg
cmp
jge
jmp
sbb
adc
les
mov
jne
data16
pop
mov
js
scas
dec
jmp
push
add
xchg
movsb
insl
cwtl
jmp
sbb
adc
sahf
gs
add
cmpl
sub
jmp
jb
mov
punpckhwd
or
adc
mov
push
or
shld
push
xor
adc
xlat
filds
test
ss
les
push
incl
lds
inc
pusha
mov
push
sbb
pop
mov
adc
lds
pop
pop
insl
loope
pop
push
sbb
dec
adc
loop
or
inc
sbb
add
sahf
or
dec
sbb
cmp
jb
dec
sbb
dec
aas
clc
jno
inc
xchg
push
int3
insb
sub
push
mov
or
rcll
or
aad
and
push
sahf
mov
sbb
jne
pusha
mov
movsl
push
or
add
lock
push
pop
xchg
mov
pop
movsb
arpl
push
dec
pop
cmpsl
incl
outsl
add
or
push
sbb
or
and
xchg
inc
outsb
into
aam
aas
aam
pop
mov
pop
pop
add
imul
out
push
fstpt
mov
pop
dec
pop
push
xor
push
mov
mov
sub
rclb
loop
ficoms
mov
jo
sarl
sub
jle
clc
loop
mov
movl
mov
cmc
or
jmp
pop
notb
repnz
cmp
inc
inc
or
xor
jmp
push
xor
cld
pushf
ret
rorb
sti
and
mov
mov
sti
mov
and
cmp
mov
jl
mov
cmp
jle
sbb
mov
xor
sub
push
cmp
sub
outsl
sarb
clc
jnp
cltd
xor
sub
inc
cltd
idiv
stos
call
cld
add
jbe
test
jg
imul
add
and
cld
pop
mov
jl
lods
mov
push
push
adc
and
adc
lods
cmp
jg
jo
idivb
scas
mull
adc
sbb
adc
icebp
sub
add
pop
ja
lahf
push
sahf
mov
or
add
inc
scas
push
sbb
jge
pusha
sar
push
jle
lea
cmp
jle
sub
es
mov
mov
sti
cmpsb
lea
adc
mov
mov
inc
call
mov
push
ret
push
test
inc
cmovae
dec
mov
inc
cli
cmp
jge
pop
fistpl
repnz
movsbl
mov
aas
jnp
adc
adc
cld
sub
mov
mov
addb
and
es
and
in
fisubl
jbe
push
in
or
mov
push
mov
fld
mov
sub
add
in
xor
mov
jl
sbb
fisttpl
inc
ret
dec
and
push
and
mov
mov
sbb
sub
jl
pop
fstpt
push
push
sbb
lock
mov
push
jg,pn
jge
xlat
mov
mov
sub
mov
jle
loopne
stc
mov
sbb
sbb
jle
pop
mov
nop
into
pop
cmpsb
cmp
jl
orl
jne
xor
push
fiadds
lods
outsl
lock
mov
and
pop
mov
sub
or
clc
scas
inc
cli
push
jmp
mov
dec
loop
push
xchg
into
repz
dec
inc
das
paddsb
pop
clc
call
mov
test
sub
add
cmp
rcl
jge
pop
cld
sbb
enter
sbb
inc
sbb
scas
push
test
sub
and
cmp
add
std
xchg
push
push
mov
xor
mov
fdivl
pop
mov
scas
add
ja
or
arpl
push
pop
mov
in
pop
xchg
aaa
pop
test
cmp
sbb
or
pop
sub
mov
or
rcll
mov
add
jnp
push
inc
adc
jmp
cmpsl
and
movsl
popf
je
sahf
inc
pop
rcrl
xor
popa
push
or
adc
lock
loope
pop
jae
add
imul
add
ss
adc
sbb
inc
sbb
int
inc
and
inc
and
js
enter
jns
movl
adc
aaa
fdivrl
lahf
mov
leave
add
mov
int
lea
add
push
icebp
rolb
cmp
mov
inc
test
mov
vmwrite
push
xor
sbb
sbb
fdivrl
gs
fwait
lock
jne
cmpsb
or
push
pop
mov
daa
bound
push
popf
rcrl
mov
inc
add
lcall
inc
inc
push
adc
fmull
fnstcw
push
outsl
imul
adc
scas
xchg
and
inc
rorb
lods
dec
or
addl
addl
fs
outsb
sar
loope
mov
outsb
movzbw
loope
push
cmp
pcmpgtd
xchg
scas
adc
sub
cmp
push
push
fcom
loopne
xor
sub
push
dec
dec
fstl
add
leave
leave
and
loopne
mov
cmp
clc
mov
push
addr16
leave
fs
rcll
movswl
jne
cmp
movsb
ret
dec
and
adc
ret
and
dec
popa
sbb
push
dec
lgs
dec
add
lock
push
push
lret
jecxz
das
out
xchg
xchg
repz
sub
inc
cmp
in
mov
stc
test
push
push
adc
mov
cwtl
and
and
je
cmp
jne
cmp
jne
test
in
lcall
jne
or
fnsave
cmp
mov
sbb
mov
adc
ret
adc
in
and
cmpb
push
or
mov
inc
out
push
mov
cmp
cli
addr16
jmp
cli
and
cmp
sub
aas
cmp
xor
aaa
hlt
jle
pop
mov
mov
pop
ss
incl
and
inc
cmp
lock
nop
or
mov
xor
add
enter
out
lods
cmp
cld
pop
mov
adc
mov
xchg
mov
jmp
ficomps
mulb
lock
mov
fdivrl
sub
push
je
mov
movb
mov
adc
lods
adc
adc
or
sub
inc
es
xorl
and
dec
enter
loopne
lock
cmp
mov
add
hlt
sub
sahf
dec
jle
push
sbb
pop
pop
ret
sbb
push
adc
mov
lods
pop
pop
xor
out
sub
das
in
dec
pop
sbb
rorb
movsb
adc
xchg
adc
lahf
into
loopne
xchg
jne
inc
mov
and
outsl
outsb
decl
xchg
ret
sbb
dec
cld
mov
sti
add
inc
pop
mov
cmp
jmp
mov
out
in
mov
adc
decb
rcll
fimull
out
xor
mov
push
shrb
jmp
add
sub
cmp
adc
jl
xchg
push
xor
dec
push
push
push
aaa
bound
test
inc
xchg
sub
int
loopne
out
xor
repz
mov
sub
popa
in
push
sub
cmp
stos
les
mov
and
mov
sbb
js
sub
dec
jmp
push
cmpsb
loopne
negl
sbb
jo
cmc
pusha
mov
add
fldenv
dec
ror
int3
jmp
push
jns
rclb
xor
inc
stos
xor
nop
cwtl
and
inc
cmp
and
mov
ret
adc
inc
push
adc
aam
test
lods
loopne
adc
fidivrl
or
mov
adc
mov
iret
jno
adc
sub
mov
dec
je
ret
jbe
cmpsb
clc
jns
sbb
pushf
outsl
fadds
push
xchg
inc
adc
mov
jl
mov
add
push
push
cmpsl
push
outsb
mov
mov
ljmp
push
mov
mov
sbb
es
dec
testb
sti
pop
pop
adc
mov
sbb
inc
xor
adc
mov
jge
cmpb
je
lock
pop
sarb
add
sub
out
add
movl
lea
and
cld
mov
or
dec
add
cwtl
stos
lret
mov
fadd
or
mov
and
cmp
rep
dec
push
mov
sbb
adc
adc
push
jl
hlt
lock
and
mov
call
sbb
lea
outsb
sbb
subb
out
jge
sub
scas
inc
cld
mov
push
pop
fisubrl
jne
cmp
negl
cmpsb
pop
push
inc
shll
or
mov
sbb
int
push
push
pushf
cmpsb
test
sbb
mov
pop
lret
pop
push
roll
mov
xor
lret
push
fs
adc
je
mov
mov
mov
mov
arpl
je
stos
cwtl
sbb
or
movb
mov
push
imul
rolb
add
jl
push
or
push
aad
cmp
imul
pop
add
int
add
inc
test
add
jbe
out
pop
addr16
sbb
cmp
movl
test
and
dec
jno
mov
adc
jl
test
rorl
mov
je
mov
arpl
add
pop
adc
push
dec
jns
in
paddsb
fucomi
pusha
mov
cmc
sub
push
cmp
fdivrp
pop
andb
fdivrs
xor
cmp
jo
cmp
sub
push
sbb
lret
mov
jo
lea
dec
sub
ja
mov
sub
cmpl
fwait
adc
inc
mov
adc
pop
or
pop
mov
int3
mov
out
out
add
lea
and
clc
mov
mov
sub
cmp
rolw
xchg
xor
push
sbb
and
movsl
xor
push
test
lock
cmp
ficoms
or
enter
loop
je
xor
mov
fidivl
jmp
lea
loopne
mov
cld
cmp
mov
mov
addb
jns
lock
pop
hlt
jae
call
lret
xor
rol
push
add
push
jbe
and
mov
arpl
sbb
test
jae
mov
xchg
add
jg
xor
sbb
adc
sbb
sub
add
pop
dec
jns
sub
xchg
jle
sbb
push
addr16
sbb
addl
fs
push
ret
mov
mov
testl
cmp
mov
jl
push
shrb
push
push
push
arpl
push
pop
mov
orb
mov
pop
jl
int
aaa
imul
ljmp
jle
inc
dec
cmpsb
std
jge
cmp
xchg
mov
jle
add
push
mov
xchg
xchg
out
push
stos
jb
sub
add
and
in
rcrb
cmpl
pop
pop
cmp
xor
mov
mov
jle
aad
push
dec
adc
pop
adc
inc
mov
push
clc
mov
shr
fstp
test
mov
push
shlb
sbb
cli
sbb
cmp
cli
jae
rol
mov
scas
sbb
mov
jno
rorl
push
push
push
cmpsb
push
popa
mov
jmp
jle
and
bound
rcll
or
and
or
enter
and
cld
and
jle
lea
push
addl
aas
pusha
shr
shlb
push
faddl
scas
push
loop
or
movl
push
xchg
add
rcrl
mov
nopl
cld
adc
in
je
xor
sbb
xchg
roll
or
xchg
push
and
subb
jb
adc
cmp
add
push
jno
data16
dec
enter
or
or
fsub
daa
pusha
inc
imul
inc
add
in
jae
ficomps
mov
cmpb
cmp
add
out
mov
sti
inc
dec
cmp
call
and
aas
repnz
mov
jno
xor
inc
je
xor
mov
push
push
rorl
push
push
fwait
xor
shrb
jbe
clc
leave
dec
jbe
pop
or
fidivrs
dec
push
jmp
imul
jne
jmp
push
add
pusha
mov
sub
lea
out
dec
scas
jne
lods
sbb
add
inc
push
jne
cmp
out
push
sub
icebp
loopne
push
add
fwait
xor
add
push
outsb
les
mov
mov
or
sbbl
pop
cmpsl
dec
imul
inc
lahf
addl
add
pop
shrl
adc
adc
pop
in
adc
cmp
fwait
xor
adc
ret
addl
xchg
push
adc
add
in
aaa
dec
cmpb
cli
ds
call
shlb
adc
and
cmp
adc
push
add
or
incl
jno
aaa
mov
cmp
jge
lea
mov
mov
mov
and
lods
push
xor
decl
popa
inc
jmp
adc
call
ss
fsubl
cli
fimull
pop
dec
loope
aam
inc
mov
shrl
jo,pn
push
mov
jne
mov
mov
stos
mov
orl
sbb
pop
push
push
mov
push
adc
and
rorl
test
mov
pop
out
roll
xchg
push
sub
jno
es
add
xor
mov
push
icebp
cmp
loopne
loop
dec
orl
mov
adc
decl
bnd
inc
sbb
push
out
jae
rorb
add
dec
xor
cmpsl
push
test
or
sub
mov
stos
inc
aad
add
push
mov
sbb
mov
test
push
ja
mov
xchg
sbb
mov
ds
xor
ficoms
pop
or
js
xor
dec
sbb
loopne
adc
sbb
dec
push
push
movsb
or
in
jge
lods
jb
sbb
xchg
or
lcall
jle
mov
dec
cmp
sahf
std
push
lcall
ror
popa
icebp
bound
inc
je
xor
xor
jbe
loop
pop
ss
sbb
push
call
std
rcl
std
aaa
hlt
pusha
inc
or
jne
or
mov
aam
je
inc
andb
add
cwtl
jecxz
and
sub
stos
push
imul
and
pop
mov
jb
xor
jl
data16
pusha
or
leave
sub
dec
sub
sbb
test
pop
inc
xor
mov
orb
cmp
push
push
add
or
test
inc
sbb
icebp
sub
insl
dec
stc
mov
jae
sti
lods
xor
mov
sub
cltd
mov
cmp
add
sbb
outsb
jo
fdivs
jne
js
repz
pop
jnp
adc
push
mov
or
and
inc
xor
js
sahf
cmp
add
mov
push
popa
mov
jno
lcall
fstpl
in
add
insl
inc
add
shll
push
xor
hlt
sub
dec
jne
insb
je
jmp
outsb
jns
out
push
add
jmp
and
je
dec
jne
mov
cmp
add
sti
pop
xor
adc
xlat
adc
insb
cmp
insl
mov
ret
lea
cmp
cs
inc
push
jb
dec
fcompl
js
or
mov
je
mov
xchg
adc
and
inc
push
push
jge
jo
add
jle
clc
loop
add
movb
xor
movsb
jne
inc
popf
push
mov
test
stos
addr16
mov
shll
pop
push
repz
jae
loope
dec
fisubrl
push
je
mov
adc
adc
jmp
stos
push
push
push
or
cld
push
push
inc
jg
inc
imulb
jne
jmp
cmp
xor
call
rcl
push
push
push
out
enter
xor
sub
xor
push
mov
push
es
pop
push
jne
xor
or
adc
arpl
shll
cmp
aas
repnz
push
or
dec
pop
pop
or
and
ret
clc
mov
cs
adc
push
test
jle
push
sbb
fmuls
sub
jle
mov
cld
leave
leave
and
and
push
push
jns
mov
sbb
test
and
movsb
rcrl
or
push
pop
sub
pop
adc
jno
pop
imul
mov
pop
push
jg
and
add
xor
push
popa
sub
add
lods
sti
cmp
adc
ja
add
or
jo
xchg
aas
fs
fdivl
je
jle
push
pop
stos
dec
xor
sub
push
jmp
xor
push
jmp
push
mov
sbb
cmp
ja
test
pop
push
loope
push
insl
xor
sub
xchg
and
faddl
outsl
test
test
mov
arpl
add
adc
orl
jbe
jne
out
jo
adc
push
shlb
push
add
jb
leave
insl
add
mov
add
sub
daa
jl
ret
loop
ret
push
or
and
mov
mov
ja
out
push
fimuls
int3
gs
cmp
inc
pop
and
or
neg
push
insb
adc
push
stos
mov
sub
xchg
jo
or
testb
push
sbb
jbe
jg
push
mov
mov
adc
bound
sub
xor
sbb
push
push
push
or
js
mov
outsb
or
pusha
out
bound
pop
mov
push
lods
adc
lret
inc
cwtl
cld
dec
sti
call
test
pusha
sbb
jmp
xchg
sub
push
mov
sbb
sub
jns
daa
jl
repnz
xor
dec
adc
or
or
mov
dec
adc
dec
adc
insl
pop
or
adc
xor
xor
mov
push
xor
add
pushf
bound
xchg
mov
aas
dec
cld
dec
sub
mov
pop
lods
add
push
jo,pt
test
ret
sub
roll
pop
jl
adcl
adc
cwtl
lock
dec
pcmpgtw
push
out
cmp
inc
das
jo
add
int3
sbbb
jle
push
mov
push
rolb
popf
mov
sti
lods
jle
xchg
mov
jne
push
add
rclb
gs
ss
jecxz
pop
jmp
das
pop
adcl
and
inc
fsubrs
inc
loopne
ret
ljmp
mov
loopne
adc
loop
cltd
aas
out
and
cli
cld
cmp
or
push
fs
aas
push
ficoms
sub
xor
les
insb
adc
rcrb
or
cmp
nop
clc
xorb
adc
xor
and
loopne
push
fcmovb
mov
cmp
sbb
in
mov
add
test
sbb
jecxz
lcall
mov
data16
xchg
stos
insb
jne
jl
mov
dec
jecxz
add
cmp
mov
std
or
addb
mov
lea
adc
add
add
adc
adc
or
mov
mov
jg
adc
lock
or
fstl
xor
sbb
lods
iret
cmp
inc
xor
jne
or
inc
fs
pop
or
ret
pop
mov
in
mov
jne
or
sbbb
pop
jnp
jg
mov
ret
lret
inc
sub
dec
add
ret
call
cmp
jb
add
pop
mov
aas
idivb
or
int
sbb
int
addb
jg
imul
xor
pop
adc
jne
lea
xchg
or
push
cmpsb
adc
jmp
int3
pop
push
add
dec
fsts
sub
pop
pop
adc
adc
or
mov
gs
test
lea
cmp
push
push
jae
pop
push
pop
push
pop
xchg
mov
js
lret
adc
sbb
and
push
mov
inc
clc
jb
clc
adc
jae
push
movb
orl
or
pop
decl
or
add
adcl
pop
push
add
cmp
push
or
rolb
adc
add
mov
add
jl
sbb
push
into
or
add
sahf
add
sbb
sbb
push
andw
mov
pushf
add
add
imul
js
mov
mov
mov
jno
call
sbbl
mov
push
jbe
rcrl
push
or
or
cwtl
push
loop
lcallw
jno
xor
pop
xchg
add
rorl
or
not
test
and
sub
cmp
jbe
addr16
ja
mov
sbb
xorl
mov
mov
imul
inc
push
daa
iret
test
lea
fstpl
sti
shll
sub
inc
js
mov
call
fisttpl
popa
fsubl
jb
dec
es
push
fwait
mov
cmp
movsl
push
pop
sbb
add
and
fsts
dec
loopne
in
and
push
mov
shrb
stos
and
add
jae
fwait
jne
jne
xor
mov
pusha
fwait
into
push
or
jns
push
aaa
cmp
cmp
lods
ja
cmpsl
je
lret
daa
leave
sub
ror
insb
cmpsb
arpl
mov
stos
cltd
inc
adc
ss
cli
jbe
cmovo
mov
dec
in
pushf
xchg
or
mov
outsb
mov
mov
and
js
or
in
cmp
xor
mov
pop
push
mov
je
dec
lock
into
rclb
dec
adc
neg
mov
xchg
ret
sbb
js
cwtl
adc
mov
push
mov
dec
push
mov
pop
iret
ss
jg
call
cltd
xchg
and
cmp
push
push
ret
mov
push
mov
mov
sub
aas
adc
scas
xor
pop
pop
mov
insb
aam
aas
es
jne
icebp
push
scas
es
incl
ret
out
add
insl
test
xor
das
push
pop
jecxz
cmp
sbb
sub
lea
stos
push
out
hlt
popa
sub
pop
nop
push
jo
xchg
sub
insl
sub
fcmovbe
hlt
sub
arpl
jl
jmp
cmp
jmp
pop
mov
add
movb
in
sub
push
mov
pop
push
test
lcall
incb
stos
xlat
jge
loope
dec
inc
rcpps
lods
push
xchg
outsl
inc
pop
jb
mov
ret
in
fsubrs
ret
cmp
rol
scas
jb
mov
std
push
inc
xchg
call
mov
push
push
mov
xchg
add
dec
cs
inc
mov
addb
mov
xor
adc
push
add
push
push
inc
xchg
je
push
ret
inc
sbb
or
push
iret
sub
push
xor
ss
mov
dec
dec
add
cli
lea
repnz
jne
inc
add
bound
sarb
ret
jae
int
mov
jne
clc
or
dec
or
insb
jge
loope
test
cmp
mov
push
sbb
fiaddl
xlat
xor
pushf
fsts
adc
rclb
nop
jge
insb
xor
push
or
mov
push
pop
add
dec
jmp
or
fmull
out
sub
inc
dec
enter
movsb
adc
fisttpll
jbe
dec
jmp
xchg
mov
push
pop
jle
push
sbb
clc
sub
std
enter
sbb
cmp
dec
mov
jge
cld
repnz
pop
mov
mov
xchg
test
pop
pop
or
dec
push
nop
lahf
pop
inc
js
ljmp
add
pop
or
dec
add
inc
push
cltd
sbb
sub
pusha
movsl
jae
sub
test
push
xor
mov
call
push
test
adc
mov
jmp
clc
adc
cmp
push
call
aaa
adc
push
adc
data16
pop
dec
nop
cwtl
add
jp
mov
mov
sub
mov
pop
jmp
insb
mov
cmpsl
repnz
repz
test
xchg
outsb
sbb
outsb
mov
and
cmp
into
cmp
insb
push
pinsrw
dec
lods
or
popf
add
lahf
cmp
mov
mov
leave
repz
push
push
addl
dec
inc
fisubs
xchg
xor
cmp
cmpb
adc
or
push
inc
out
test
push
insb
insb
add
push
js
js
dec
pusha
and
movsb
or
negb
dec
push
and
loope
push
adc
jbe
push
iret
jle
test
sbb
adc
sbb
inc
sbb
sub
outsb
mov
push
aaa
xchg
add
or
loopne
sbb
push
repz
pop
cwtl
push
push
and
sub
mov
outsb
jbe
xchg
pop
push
outsb
pusha
pop
cmp
jne
adc
ljmp
pop
addr16
push
push
mov
inc
repz
andb
add
pop
in
aam
sub
sub
fs
jne
stos
loope
xor
cmp
pop
call
adc
or
int3
aas
dec
xor
adcl
sbb
dec
or
gs
add
into
rep
and
cmp
inc
mov
data16
inc
add
xor
push
shrb
xor
int
jbe
jmp
lret
xor
xor
dec
shrl
pusha
sub
out
jo
dec
sbb
pop
orl
inc
mov
push
out
or
xor
xchg
jno
cmp
push
or
cmpsl
fbld
mov
cmc
les
dec
push
test
popa
xor
add
push
cltd
xchg
dec
or
ret
lahf
dec
mov
push
push
testl
pop
je
cld
push
mov
lea
test
int
push
add
jmp
lea
xchg
ret
sbb
rorl
ret
pop
push
inc
sbb
lods
cmp
inc
add
sub
cmp
jb
in
sahf
add
jnp
add
sbb
ljmp
inc
js
adc
mov
jne
loop
popl
sub
insb
nop
inc
push
movsb
scas
push
xor
popf
shlb
and
sbb
jae
loopne
dec
add
mov
mov
lcall
xchg
adc
inc
enter
adc
xor
and
insl
adc
xor
push
imul
dec
cmp
add
addl
aam
or
mov
jne
sub
add
inc
mov
lods
sahf
orb
mov
mov
lock
movsl
add
mov
and
pop
gs
ficoms
adc
inc
mov
mov
adc
and
notl
je
sbb
cmp
enter
lock
push
mov
rolb
jle
lods
shrl
dec
sbb
mov
xlat
cli
xchg
mov
rorl
or
lods
pop
sbb
lret
or
adc
das
adc
sub
mov
mov
or
outsb
xchg
mov
fwait
and
mov
popa
mov
cmp
cmp
jnp
rorb
and
push
inc
push
inc
cmpsb
daa
mov
adc
and
mov
and
jo,pn
stos
or
mov
in
jb
dec
fs
rolb
pop
decl
push
enter
in
adc
push
decl
mov
movsl
test
mov
inc
adc
outsl
mov
inc
inc
jecxz
mov
mov
mov
cmp
jne
mov
push
jb
pop
add
lret
ljmp
popa
test
fcompl
fcmovnu
jmp
jne
mov
lods
repnz
inc
cmpsb
rcrl
mov
mov
cs
shll
pop
call
xchg
fisubs
push
je
jecxz
or
sbb
push
in
dec
dec
pop
jb
insl
sbb
mov
fs
call
fwait
cmp
cmp
dec
fdivs
sbb
or
aad
testl
sarl
cli
neg
int3
xlat
xchg
fs
cmp
lea
cmp
stos
push
inc
lds
aas
sbb
leave
xchg
add
addl
cld
xor
lock
inc
xchg
xchg
add
pusha
sbb
push
es
fbld
xlat
push
sbb
scas
jns
je
jbe
push
das
imul
pop
cmp
pusha
js
aam
data16
jmp
dec
sbb
fdivs
sti
cmp
icebp
pop
jmp
ret
cmc
mov
add
inc
call
jge
cmp
mov
adc
xchg
test
movhps
adc
xor
mov
rcrb
mov
andb
sbb
hlt
fisttps
push
mov
push
fisubrs
ret
clc
add
mov
adc
mov
adc
dec
cmp
pop
push
or
pop
push
out
insb
mov
add
pop
ja
pop
mov
xorl
stc
cmp
lods
lods
dec
lahf
ret
pop
jge
fs
aam
push
mov
shl
ret
shlb
jno
filds
xchg
mov
add
scas
push
js
leave
cmp
sete
xchg
stc
jmp
enter
add
popl
push
adc
fwait
lahf
clc
or
sub
icebp
fisubs
jnp
fnsave
das
sub
ret
iret
push
es
loop
xor
adc
js
lods
fmull
xchg
in
movsb
into
movl
sbb
add
pusha
sbbb
sub
inc
cltd
pop
xchg
mov
jbe
insl
add
pop
or
fucomip
mov
pop
or
cmp
jne
sbb
cli
rcrb
in
lock
inc
push
inc
mov
cmp
cmp
push
xor
cwtl
out
and
sub
lea
add
in
sub
and
adc
pop
sub
push
arpl
and
into
and
lahf
push
dec
dec
js
lds
mov
or
push
cmc
cmc
ret
ret
mov
dec
icebp
jp
lea
fcoms
lock
test
and
inc
js
add
inc
or
je
push
or
jle
add
or
repz
je
jne
sub
je
scas
jae
xor
jbe
sahf
sub
push
jle
cmp
shrl
rolb
push
shll
into
sar
das
push
mov
adc
lods
test
pop
dec
pop
xlat
pop
cmp
xchg
or
and
lcall
dec
jle
mov
cmpsb
push
push
jg
sbb
push
ljmp
sub
in
insb
jle
or
aaa
bound
dec
cli
faddp
mov
pop
cmp
shlb
das
push
and
xor
jae
repz
push
lcall
jg
and
xor
cmc
dec
xor
test
adc
fidivl
adc
jmp
jg
or
sbb
fstps
int3
dec
lods
int
cmc
lcall
push
fiadds
xor
inc
cmc
sbb
in
fimull
loope
subl
movsl
add
jbe
jne
das
mov
loop
popf
jmp
cltd
cmpl
je
std
jge
in
aaa
push
loopne
jne
mov
mov
roll
das
je
mov
add
sub
repz
ja
jo
push
sub
and
iret
hlt
push
jg
mov
sbb
cmp
sub
fneni(8087
mov
ret
jo
mov
scas
xchg
or
xlat
push
ffreep
jmp
repnz
add
cmc
mov
pop
xchg
pop
lret
data16
adc
cltd
lods
mov
mov
clc
pop
and
push
inc
dec
icebp
or
nop
add
xchg
dec
pusha
add
daa
pop
pop
jo
pusha
adc
iret
stc
mov
and
xor
stos
adc
mov
jmp
sbb
aas
adc
dec
je
push
lea
clc
push
and
jle
ja
dec
mov
lods
pop
or
cmp
cmpsl
mov
jmp
sbb
push
pop
lea
rorb
cld
ret
add
sbb
in
loop
das
inc
dec
jecxz
mov
inc
sub
sbb
cmp
fdivs
cmp
dec
insl
sbb
shl
sbb
push
test
and
test
ret
or
enter
repnz
add
rcll
push
adc
insb
in
shll
mov
jg
insb
xchg
jmp
and
adc
sbb
stos
je
test
add
andb
adc
icebp
sbb
iret
xchg
mov
mov
fs
push
cmp
sub
xchg
adc
and
bound
inc
popa
cli
push
mov
add
leave
dec
js
arpl
mov
jo
dec
mov
mov
mov
cmpl
ss
inc
adc
jmp
imul
xchg
mov
fisttps
push
movsb
add
push
adcb
adc
pop
test
repz
sbb
fisubs
jl
sarb
jmp
cwtl
repnz
or
or
test
jne
dec
cmp
xor
pop
or
push
adc
test
cmp
loopne
sub
mov
daa
out
and
push
mov
sub
dec
mov
mov
pop
jp
dec
repnz
xlat
pop
ret
sub
dec
xchg
cmp
dec
dec
push
inc
dec
lahf
sub
nop
xchg
lods
adc
push
loope
enter
stos
jo
mov
push
push
pop
push
adc
adc
mov
xchg
lret
addr16
ret
and
mov
sbb
cmp
insl
adc
sbb
and
push
cmp
cmp
loope
dec
pop
inc
adc
pop
loop
pop
or
outsl
and
cmp
mov
sti
mov
rorb
xor
mov
mov
add
fildl
adc
adc
sbb
sbb
cmp
xor
bsf
sub
and
jo
mov
mov
cmpsb
xor
pusha
push
xlat
pushf
mov
inc
je
scas
add
cmp
movb
pop
in
push
jne
push
mov
adc
inc
mov
call
insb
andl
sub
cmp
or
xchg
xor
mov
sub
je
je
adc
daa
loope
add
add
cmp
rolb
add
std
cmp
add
inc
or
lock
or
push
adc
pop
xchg
mov
push
in
sub
mov
inc
sub
pop
and
shrb
push
jmp
pop
push
jbe
mov
jge
add
adc
push
leave
add
inc
cmpsb
loope
insb
loope
mov
jg
sahf
lea
roll
sub
jb
inc
rcr
lret
sub
sub
jns
loop
jo
jns
cmp
mov
cltd
fcompl
and
ret
cmp
ss
xchg
imul
xchg
sbb
push
insb
stc
fists
js,pn
clc
adc
inc
enter
sbb
or
cltd
in
sti
push
pop
push
xor
enter
adc
inc
test
push
and
cmp
adc
fs
cmp
xor
adc
inc
jo
or
mov
jne
dec
jo
push
repnz
inc
fdivrs
je
push
sbb
loope
pop
pop
scas
mov
cld
jmp
mov
jns
inc
mov
in
and
push
adc
hlt
jl
adc
pop
fnstsw
xor
cmp
dec
jle
jp
push
xlat
push
ret
loope
pop
adc
je
sub
test
sub
mov
push
jbe
gs
sbb
into
rorl
dec
ss
add
jge
cmpl
mov
sbb
inc
mov
lock
and
inc
pop
add
div
inc
adc
mov
repz
push
test
xchg
inc
add
inc
jae
rcrb
cld
jo
cmp
dec
inc
lds
dec
push
scas
nop
and
cs
inc
addb
sbbl
fstpt
sti
jne
adc
pushf
js
sbb
add
fisttps
add
pusha
xchg
inc
cmp
scas
jmp
push
lret
iret
cmpsl
or
xor
insl
aas
test
jg
lods
jge
jne
inc
xor
inc
inc
dec
inc
in
sbb
mov
mov
jg
nop
and
push
ficoml
inc
dec
fldenv
cmc
push
sbb
add
push
add
orb
cs
push
inc
xchg
dec
leave
adcl
mov
push
pop
les
ror
clc
add
inc
add
fwait
add
add
and
psubsb
repz
xor
cli
push
mov
or
pop
test
in
inc
rorb
or
in
mov
pop
loop
lahf
xchg
mov
add
cli
test
loop
sbb
cwtl
pop
push
dec
shlb
jle
add
or
sub
popf
nop
xor
fwait
pop
or
mov
pop
ljmp
pushf
idiv
jb
scas
xchg
mov
push
xor
fldl
lea
jmp
sbb
xor
cmp
cmc
push
sub
xchg
bound
iret
repz
lods
or
lcall
popa
xchg
mov
dec
repz
pop
xchg
aas
pop
scas
loope,pn
repz
sbb
jmp
outsl
mov
and
stc
pop
fmull
ret
ss
push
mov
inc
mov
das
cmc
xorl
fcoml
jle
adc
mov
dec
jecxz
cmpb
gs
push
pop
xor
push
pop
dec
insb
outsl
mov
ss
push
push
xor
inc
ss
mov
push
fs
mov
mov
mov
and
in
xchg
test
roll
nop
sub
out
cwtl
pushf
scas
in
mov
or
inc
lods
mov
into
xor
icebp
push
add
adc
iret
repz
jns
cmpsl
adc
push
sarb
jns
mov
cmp
movsb
jo
std
testl
adc
or
cmp
mov
jb
mov
movsl
cmpsl
pop
sbb
lock
mov
and
or
push
push
mov
cmp
jne
jo
jne
cmp
push
das
jl
testl
inc
push
and
cmp
aaa
arpl
sbb
and
scas
lods
jmp
in
jae
or
add
mov
iret
dec
sub
fsubr
test
add
adc
ret
pop
mov
add
ds
adc
inc
cmp
clc
add
jo
in
add
ret
or
lea
jo
add
xchg
push
loop
pop
push
or
xor
bound
add
xchg
stc
pushf
jl
add
xchg
pop
subb
setne
dec
and
loopne
mov
es
and
and
push
mov
inc
cmp
pop
clc
lock
aaa
pop
lock
icebp
popf
adc
js
ret
mov
pop
or
jl
lea
scas
jns
add
cld
mov
movl
call
pop
mov
int3
or
daa
and
jg
insl
xor
inc
jmp
in
fisttps
pop
outsl
adc
das
sbb
push
inc
aaa
lret
pop
sbb
dec
xchg
je
scas
adc
pop
iret
movl
ja
outsb
adc
jns
jmp
lods
add
add
enter
cmpsl
sbb
iret
inc
push
jb
or
pop
cmp
daa
ljmp
cmp
popa
lods
xchg
sbb
mov
fsubp
add
sbb
push
or
lods
inc
add
adc
pop
stos
pop
mov
mov
sub
xchg
ret
sub
loopne
adc
sub
xor
adc
lods
jb
inc
leave
mov
lock
iret
mov
inc
cmpl
push
shrl
data16
push
je
push
sbb
add
jle
add
cmp
push
jg
or
sbb
or
pop
xchg
sub
movsb
loopew
cmpsb
and
and
jp
pop
loope
in
dec
mov
pop
xchg
add
cmp
jge
into
in
imul
adc
sahf
push
sbb
add
add
or
mov
mov
push
enter
pop
mov
sbbl
ret
lea
pop
sti
inc
pusha
mov
inc
mov
test
out
je
scas
push
fcmovnu
rclb
xchg
repnz
pusha
cmp
cmp
dec
inc
adc
sub
inc
jp
fsubrs
inc
pop
adc
pusha
push
je
push
sbbb
ljmp
sub
sub
aam
je
mov
or
mov
pop
dec
or
add
xchg
mov
mov
inc
or
test
js
jg
inc
sub
lds
idivb
movsl
inc
xchg
mov
sarl
mov
push
pop
sbb
lock
lret
push
sbb
jle
fcmovnbe
int
jecxz
push
adc
icebp
or
or
je
lahf
add
fcomp
insb
repz
iret
imul
dec
fxch
fmul
int
sbb
cltd
jecxz
adc
call
mov
cltd
dec
std
mov
shl
rclb
jmp
jl
int3
mov
fsub
and
push
push
pop
mov
bound
adc
xchg
loopne
out
add
push
mov
into
pop
pop
xor
dec
inc
xchg
xor
les
adc
fs
cmpsl
xor
push
dec
pop
jo
nop
adc
not
jg
push
mov
push
add
cmp
jge
cmp
clc
lea
cmp
and
push
add
add
mov
push
xchg
enter
loope
pushf
mov
xchg
repnz
push
cs
adc
jo
data16
cmpb
xor
sbb
push
inc
int3
icebp
xor
inc
cmp
or
add
mov
mov
push
pop
je
repnz
add
cmp
sub
mov
push
mov
mov
or
sub
dec
fdivs
mov
rcll
adc
cmp
lea
lea
xchg
stos
popf
ds
rcrl
sti
dec
in
adc
xchg
pop
ret
lahf
xchg
pushf
jns
jb
fcoms
adc
rorb
sbb
push
popl
std
dec
xor
push
pop
mov
cmp
jge
scas
pop
test
mov
test
dec
mov
lock
dec
jle
cmp
inc
mov
sbb
sub
imul
mov
mov
test
push
outsb
mov
sub
inc
dec
movsl
add
mov
popf
mov
xchg
mov
adc
data16
mov
aam
inc
sub
bound
cmp
push
mov
neg
push
fs
sub
dec
mov
iret
data16
add
pushf
sbb
inc
xor
add
jl
add
xchg
adc
call
arpl
push
jno
inc
call
pop
test
movsl
inc
push
ja
adc
push
daa
xchg
mov
loopne
mov
je
cmp
shrb
mov
fisttpl
inc
pop
add
and
jge
pop
mov
sahf
mov
mov
pop
cmp
nop
inc
sti
aam
cmp
push
push
xor
adc
int3
push
test
mov
ja
jge
xor
push
mov
nop
xchg
mov
xlat
mov
push
arpl
cmpb
adc
je
vandps
aaa
pop
or
enter
xchg
pusha
subb
mov
loope
push
cmp
sbb
and
stc
mov
inc
mov
dec
add
addb
and
mov
push
cmp
dec
jp
adc
add
cmc
sub
loop
push
push
xor
outsb
adc
pop
ret
and
cltd
cmpsb
stos
jns
jl
inc
inc
cmp
mov
ds
loop
sbb
or
cwtl
inc
mov
icebp
rorb
jne
jl
adc
cld
and
lods
mov
prefetcht1
test
or
dec
icebp
mov
xchg
dec
xor
mov
jb
into
aam
sub
adc
or
add
lods
fs
or
jmp
pop
push
push
push
and
or
or
inc
push
mov
aas
lods
xchg
popa
or
xor
dec
jae
xchg
sbb
pop
xchg
clc
push
fwait
insb
ss
inc
cli
sbb
lock
test
and
cs
inc
hlt
insl
lea
sbb
or
dec
push
cmp
sbb
sub
jmp
out
negb
push
dec
mov
push
dec
dec
add
add
scas
or
cwtl
dec
push
jns
call
sahf
popa
mov
cmp
sbb
pop
dec
or
or
dec
pop
movl
mov
push
cld
lea
dec
out
dec
and
pop
dec
outsb
mov
push
push
mov
push
xchg
insl
idivb
mov
push
and
dec
mov
clc
pop
adcb
push
push
cmp
hlt
cmp
adc
mov
xchg
add
adc
xchg
jle
or
xchg
push
cmpsb
outsl
jle
jle
pop
mov
mov
or
je
xor
lret
jg
outsl
cmp
lcall
add
cmp
mov
push
xor
mov
bound
repz
xchg
jne
fwait
mov
cmp
loope
mov
or
add
push
and
lods
lcall
mov
adc
cmp
je
out
je
repz
xchg
leave
fld
sbb
or
sbb
inc
les
leave
inc
inc
jl
scas
mov
roll
adc
js
imul
ds
cs
cmpsb
mov
outsb
outsb
xchg
or
in
lds
mov
sub
and
movsb
lahf
add
push
lret
xchg
stc
add
leave
pop
pop
dec
rorl
pop
fs
pop
and
xor
pop
push
push
and
inc
cmp
pusha
scas
les
sbb
xchg
xchg
pop
inc
pop
add
inc
jne
sbb
xchg
jl
add
lods
adc
icebp
adc
mov
je
mov
pop
pop
loopne
adcl
push
loopne
loopne
dec
repnz
xor
jmp
push
push
rcll
and
add
lods
lret
inc
add
shlb
sahf
sub
imul
mov
mov
jnp
jmp
mov
mov
repnz
xor
out
and
ljmp
cld
dec
and
dec
push
neg
sbb
and
push
push
dec
pop
sub
add
pop
jmp
lds
sub
dec
push
inc
xlat
aas
push
jmp
aaa
push
fdivs
les
push
xor
rolb
pop
push
je
fadds
ljmp
in
shrl
jmp
or
mov
adc
mov
pop
jl
jo
add
les
ret
push
and
lock
push
push
push
xchg
xor
mov
sar
cmp
sbbb
sub
lods
outsl
loop
or
jge
ret
dec
sub
arpl
stos
adc
cmp
sbb
sub
loop
mov
xor
lds
sbb
in
nop
rcl
aas
daa
pop
lock
xor
mov
lahf
lret
xlat
and
xchg
or
sbb
loop
je
xor
push
ss
daa
pop
pop
aad
dec
inc
cmp
pop
jmp
push
out
xor
mov
mov
sbb
pop
pop
jno
mov
add
hlt
call
push
push
xor
aam
push
aad
mov
dec
scas
mov
out
sar
mov
sarl
add
pop
mov
imul
and
jmp
jne
and
fcoml
inc
ret
xchg
popa
cmp
testb
jbe
out
mov
in
sbb
fs
xor
jnp
insb
push
mov
inc
vucomiss
sbb
adc
cli
pop
dec
orb
xchg
and
fisubl
scas
dec
adc
sbb
jg
push
test
mov
enter
sahf
insl
sub
push
sbb
mulb
sub
and
push
loope
and
mov
xchg
dec
mov
xchg
popf
loop
mov
and
push
mov
add
mov
mov
jb
mov
push
sub
mov
add
fisttps
je
xor
mov
hlt
xlat
push
or
add
mov
push
add
icebp
inc
dec
test
call
iret
lahf
dec
cmp
pop
adc
adc
pusha
and
push
clc
dec
test
sub
pop
xchg
cmpsb
pop
ret
fbld
or
cmp
mov
xchg
inc
mov
mov
dec
adc
xchg
jge
pusha
pop
and
add
mov
and
movsb
mov
test
repz
adc
push
aad
pop
sbb
sbb
mov
and
sub
fimuls
jno
jl
and
add
pminsw
and
dec
or
or
mov
xor
jp
lcall
push
or
or
in
cld
xchg
jae
scas
insb
or
lods
sub
inc
lcall
mov
inc
add
or
sub
pop
test
aaa
ds
mov
sub
mov
add
mov
or
push
add
add
rcr
jmp
or
xor
or
cmpsb
test
pop
enter
inc
fstl
dec
dec
es
imul
add
xor
mov
test
std
inc
xchg
cmp
stos
js,pn
mov
sub
ds
jmp
mov
mov
or
das
shrb
rorl
roll
inc
outsl
and
pushf
cmp
outsl
adc
adc
pop
das
jge
xchg
or
push
das
inc
pop
mov
in
sbb
lret
enter
shlb
xchg
push
shrb
xchg
cmp
addr16
mov
call
jmp
pop
xor
pushf
push
push
arpl
test
clc
imul
add
fnstcw
repz
pop
mov
push
addr16
pop
fcomps
or
mov
mov
jg
das
add
sbb
or
loope
push
push
inc
ret
jecxz
or
clc
push
push
out
add
pushf
push
cltd
ficomps
clc
mov
or
pop
push
lea
xor
movsl
adcl
pop
add
out
dec
pop
dec
fildl
add
push
or
and
pop
inc
jecxz
outsl
inc
loop
fstpt
das
loopne
add
push
cltd
cltd
pushf
decl
push
dec
in
jns
add
setp
mov
dec
or
push
pop
mov
or
ret
fwait
add
repz
cmp
popa
mov
leave
pop
scas
add
jmp
adc
sbb
or
pop
dec
sbb
inc
pusha
out
je
cmp
mov
insb
cmp
cmp
test
push
mov
je
out
xlat
call
dec
add
add
xorl
dec
idivb
shrb
cmp
cmpsb
add
xor
test
inc
popa
cmp
adc
js
sbb
loope
jo
cmp
imul
lea
inc
xor
les
in
mov
pop
mov
addb
push
out
sub
sub
sub
lods
ja
inc
adc
test
or
push
dec
dec
insb
sbb
push
sub
push
repnz
sub
sub
add
inc
mov
mov
fwait
xchg
inc
fdivrs
and
lret
or
mov
adc
push
lock
xchg
inc
sbb
push
mov
jecxz
jb
pop
dec
cmp
xchg
andb
test
xchg
sahf
mov
xchg
testl
mov
xchg
or
insb
jle
ret
leave
sub
adc
pop
out
in
push
mov
cmp
loop
dec
rorl
mov
sbb
aas
imul
or
or
xlat
cmp
out
jmp
adc
adc
add
mov
hlt
mov
js
dec
jl
aam
adc
loop
fildll
dec
js
or
in
nop
push
push
movsl
out
dec
add
add
xchg
cs
inc
pop
nop
aad
shrl
jge
pop
fstps
add
cmp
cmp
and
test
ja
pop
pusha
add
pop
push
mov
push
xchg
push
xor
and
les
decl
ja
jmp
add
adc
dec
jmp
add
or
outsl
push
je
or
push
jb
add
mov
mov
or
push
jle
aam
data16
push
xchg
gs
shr
pop
aad
fsub
aas
push
mov
sub
insb
js
daa
sub
cmp
cmp
push
inc
dec
push
push
push
insb
cmp
xor
xchg
aas
sub
pop
lahf
repnz
sub
aas
fs
pop
add
shl
out
repz
in
div
rcr
rol
mov
inc
xchg
test
push
xor
push
push
push
aaa
aas
adc
and
or
xor
and
sbb
repz
push
imul
add
ret
jns
punpckhbw
shll
in
jmp
test
push
mov
pushf
add
in
pop
orb
aas
mov
pushf
or
daa
inc
pushf
xor
rolb
dec
xorb
hlt
insl
cwtl
rcrb
popa
lds
sub
lret
sbb
stc
pushf
xchg
pushf
aam
sub
and
sub
xchg
shrb
push
sub
jg
push
sub
sbb
les
jo
ret
jmp
pop
xchg
outsb
sub
ret
cmp
pop
fwait
mul
xchg
inc
ss
xchg
mov
sbb
cmpsb
sar
shrl
add
add
jbe
mov
movsl
cs
jne
lods
xor
testl
dec
xchg
orb
lret
repz
mov
add
push
stos
mov
lea
or
nop
dec
addr16
xor
daa
movsb
cmp
dec
call
sub
push
rolb
mov
push
inc
call
iret
hlt
or
adc
scas
imul
pushl
test
lret
mov
sar
push
sub
mov
xlat
in
fistl
jne
jmp
fiadds
aad
inc
sbbb
outsb
sub
pop
or
push
inc
and
and
es
add
push
mov
xor
pop
pop
pop
cld
jp
movsb
inc
aas
jg
mov
sub
mov
push
pop
nop
mov
mov
push
jmp
sbb
push
or
add
mov
ljmp
inc
loopne
imul
add
add
mov
pusha
mov
xor
add
xchg
inc
xchg
ret
mov
sti
roll
sbb
dec
clc
add
dec
jne
add
jns
xchg
push
test
pushf
and
mov
je
mov
jl
int3
je
mov
movsl
sub
inc
cwtl
lock
pusha
or
mov
add
sbb
xor
add
pop
dec
inc
add
nop
shll
inc
aam
jp
ja
pop
pop
add
lock
hlt
cld
dec
sub
add
push
adc
cwtl
or
jo
shr
and
push
inc
aad
mov
decb
sbb
mov
add
xchg
pop
loope
dec
nop
add
repnz
mov
or
clc
fs
sbb
push
cmp
leave
pusha
push
rclb
sarb
fldenv
pop
add
push
pop
adcl
shlb
xor
jmp
dec
in
sbb
push
add
push
push
push
movsb
pusha
loopne
nop
sbb
xor
adc
das
push
daa
iret
lods
or
notb
dec
inc
jg
add
inc
inc
mov
push
cltd
xchg
mov
and
sbb
stc
push
mov
jl
jp
dec
hlt
mov
add
fwait
arpl
out
test
adc
add
push
or
pop
adc
push
rorl
sbb
xor
aas
out
and
mov
bound
mov
cmp
jne
aas
mov
adcl
jecxz
add
cs
jnp
push
aas
push
enter
stos
arpl
add
ja
or
fisttps
cmc
mov
cltd
orl
rcll
daa
clc
mov
push
push
out
test
je
push
decl
pop
xchg
rcll
out
sub
adc
sbb
loope
push
pop
add
jne
push
lock
fisubs
or
inc
stos
add
xor
add
or
fucomi
enter
aas
lods
btcl
flds
cltd
test
lahf
mov
test
mov
sub
sub
inc
xor
ret
jno
xchg
add
xor
sub
lahf
test
test
lahf
push
inc
cmp
outsb
fistpll
sub
mov
test
arpl
lahf
mov
lds
sub
mov
sti
add
loop
rclb
lds
pop
shll
fucomi
dec
fs
or
dec
jle
popa
xchg
push
pop
out
push
fisubrs
lods
push
sbb
test
mov
push
decb
dec
or
sub
sbb
adc
pop
cltd
out
sub
lea
add
sbb
aaa
and
sbb
push
or
xchg
push
jecxz
mov
dec
xor
and
hlt
push
rolb
outsb
push
xor
push
roll
test
add
or
mov
popa
add
in
mov
cli
fisttpll
cs
jne
and
and
ret
cs
testb
je
aas
aam
mov
lahf
aas
lock
cld
lods
sbb
jne
cmpsb
adc
cmp
cmp
push
sub
sahf
daa
outsb
push
sarb
jne
mov
sbb
dec
outsb
xor
add
jae
rcr
and
mov
cmpsb
jbe
sub
mov
lcall
jne
inc
xorl
push
push
mov
xlat
sbbb
cmp
mov
or
sbb
gs
or
inc
cli
shrl
in
push
push
push
push
push
add
inc
sbb
or
out
or
or
dec
insb
shlb
adcl
xchg
push
rorb
mov
inc
shl
rol
sub
popa
dec
lea
shlb
jg
addr16
mov
push
cmp
les
push
mov
fucom
cltd
xor
push
dec
push
push
jmp
push
fiaddl
and
xchg
xchg
fs
add
shrb
jecxz
or
pusha
add
lcall
sbb
mov
pop
insb
push
in
mov
and
repnz
lret
mov
push
loopne
cmp
ja
outsb
inc
xchg
jle
leave
je
adc
aaa
lea
inc
and
std
jl
popa
sarb
inc
movb
push
adc
roll
push
fists
mov
xor
add
insl
fstpl
test
jb
adc
outsb
lds
add
pop
sbb
adc
shrl
inc
rcl
fwait
sbb
dec
and
mov
cmp
inc
pop
push
push
adc
dec
scas
push
sbb
xor
movsb
add
mov
cmp
outsl
cmp
pushl
sub
int
ret
push
push
test
addr16
mov
aaa
mov
data16
adc
inc
dec
je
or
ret
push
popf
dec
pop
mov
push
adc
mov
jbe
adc
adc
test
fldl
dec
cmp
push
push
jmp
sub
dec
or
and
rcrb
jno
mov
xor
or
jmp
sbb
or
and
push
movsb
shll
idivb
jno
pop
inc
sub
shlb
or
test
leave
cmp
sub
add
sti
xor
pop
pop
pop
fstpt
inc
shrb
xor
adc
popa
std
movsb
rcrb
ret
and
push
dec
mov
dec
lcall
jb
bound
std
pop
cmp
popf
add
add
repz
cmp
push
add
add
mov
dec
add
ffreep
xlat
inc
jmp
ss
jle
shrl
jno
jg
insl
jg
cmp
pushf
add
lock
adc
int
push
or
cmc
dec
push
or
sbb
push
leave
inc
pop
jns
jne
pop
aam
mov
mov
imul
and
lock
pop
adc
dec
dec
pop
mov
push
cs
out
jne
adc
adc
inc
pop
xchg
les
xor
data16
mov
jg
add
mov
or
or
jne
sbb
sbb
lods
mov
loopne
and
jle
or
fdivs
jle
data16
push
test
inc
je
adcb
into
pop
addl
mov
push
push
or
pushf
in
and
adc
inc
ficompl
test
or
cmp
pop
aas
push
push
inc
mov
xor
mov
mov
jno
and
addb
sbbl
popa
dec
inc
pop
adcb
push
incw
pop
xchg
pop
add
push
or
subb
add
mov
inc
lds
imul
lock
sti
xchg
ljmp
push
xchg
das
dec
cmp
lods
jecxz
cmpl
movsb
add
cmp
xor
lret
stc
mov
popf
rolb
into
popf
xchg
shl
popf
pop
or
enter
in
add
movsb
sbb
in
mov
into
sub
insb
pop
xor
cwtl
lcall
and
enter
enter
inc
mov
int
push
add
push
icebp
add
inc
fildll
sub
movsb
inc
rcrb
push
mov
fadd
xchg
js
daa
xchg
mov
jecxz
jns
aas
call
test
jns
push
jmp
leave
inc
mov
stc
xor
cmpsb
pusha
lahf
xchg
or
int3
fbld
jmp
movsb
mov
movsb
shlb
add
rcl
adcb
in
sbb
enter
in
ret
and
and
add
je
addr16
xchg
adc
add
inc
add
jmp
add
add
add
sahf
push
push
cltd
push
rcrb
cmp
or
rolb
pop
les
pop
addb
push
add
or
add
or
cmp
test
pop
push
and
sub
orl
repz
xor
dec
jmp
pop
pusha
mov
and
fsubr
mov
xor
lea
pop
add
pushf
add
add
or
pushf
mov
inc
aas
mov
adc
les
loopne
in
aas
mov
pop
xchg
push
mov
add
push
pusha
in
cmpsl
push
shlb
cmpsb
push
adc
xchg
inc
cmpsb
pop
push
push
mov
or
add
mov
push
add
pop
xchg
stos
mov
stos
pop
pushf
inc
jle
lahf
mov
dec
xchg
lahf
movsb
or
pushf
clc
imul
and
dec
cli
add
push
pop
pop
movl
and
mov
std
test
mov
cmp
and
ret
jge
loopne
jle
movsl
mov
pop
dec
jo
add
inc
cmp
jl
je
mov
cld
sub
mov
jle
insb
in
jb
mov
cmc
sahf
fiaddl
or
cmp
pushf
mov
mov
fsubp
mov
inc
cmp
jmp
or
pop
or
test
dec
jmp
dec
cld
and
cmp
jl
pop
enter
sub
jne
pop
push
push
mov
nop
sahf
popa
je
mov
xchg
int
movsb
jge
add
cmp
inc
fistps
sbb
cmp
pop
subb
fstpl
xchg
mov
lods
pop
push
cmp
jle
inc
int
cmp
jl
push
jno
sbb
je
cmp
push
cmp
data16
xor
dec
jl
jo
xchg
jne
mov
cmpsb
hlt
es
add
xor
and
or
mov
loop
jne
arpl
jmp
ljmp
mov
jl
rorb
xor
sub
fisubrl
jnp
push
jmp
jne
dec
add
sub
push
sub
pop
jle
push
test
push
js
jae
and
pushf
subl
push
push
js
push
cmp
repnz
orb
add
inc
or
jg
adc
mov
push
mov
je
mov
jge
pop
and
mov
xor
xor
and
cmpsb
les
xor
mov
push
xchg
xor
mov
mov
rorb
jo
js
movl
andb
or
repz
cmp
or
pop
lods
mov
pop
sub
leave
mov
enter
mov
rcl
fcoms
in
loopne
in
out
xor
in
lock
cmc
add
negb
sarb
add
add
add
or
movsb
jmp
or
adc
adc
sbb
xorl
sbb
push
into
sbb
or
mov
imul
pop
shlb
add
pusha
adc
and
and
add
in
jmp
push
cmp
loopne
add
sub
xchg
pop
xchg
je
jmp
xchg
xchg
jne
xor
jns
aas
pusha
sub
in
push
sub
mov
cmp
pushf
scas
stos
cwtl
fildll
push
inc
push
test
sub
test
ljmp
adc
xchg
pop
loopne
pop
dec
adc
inc
sub
inc
ss
insl
lret
inc
gs
mov
cmp
cmp
dec
enter
sbb
mov
in
cmpsb
push
test
cmc
mov
mov
push
sbb
and
push
xor
xchg
mov
inc
inc
mov
push
cwtl
push
sub
popa
jne
jl
fadds
xor
push
adc
je
test
or
add
adc
inc
add
jmp
pop
xor
test
jmp
push
or
add
jno
mov
mov
mov
push
dec
jbe
jo
incb
jle
lods
sub
mov
sbb
sub
sub
adc
adc
cmp
ljmp
in
cmp
xchg
filds
jmp
xchg
cs
xor
and
mov
jo
pop
out
daa
adc
fistl
sub
dec
lds
loope
lea
xor
loope
lahf
push
add
mov
mov
and
mov
push
mov
lods
sahf
repnz
cmp
repz
or
adc
xadd
imul
push
cmp
sub
jmp
pusha
inc
daa
xor
movsl
xchg
cmp
dec
and
pop
inc
insb
dec
je
dec
cmp
int3
jl
or
popf
and
icebp
scas
stc
or
and
inc
xor
iret
movsl
adc
fsubr
roll
cmp
dec
mov
pop
add
sub
push
jp
push
sbb
out
pop
jg
ret
sub
mov
test
sub
loopne
sub
mov
jl
int
lock
es
insl
push
push
push
cmp
jl
hlt
and
cltd
mov
jmp
mov
inc
xchg
cmp
int3
sub
dec
mov
in
and
adc
jae
pop
sahf
cmp
xor
xor
sbb
jo
dec
nop
movsb
or
mov
push
lea
push
sbb
or
icebp
inc
sub
sbb
cmp
xchg
or
push
jo
push
mov
je
pop
dec
fs
mov
repnz
shrb
xor
insb
lock
mov
pop
out
mov
xchg
xchg
call
enter
lods
sub
or
adc
and
dec
cwtl
add
pcmpeqd
push
mov
inc
jle
mov
add
insl
cltd
cmp
jge
push
adc
je
add
mov
jb
ljmp
dec
roll
xchg
sub
dec
rclb
add
dec
arpl
pop
jne
decl
inc
nop
loop
and
xor
add
loop
mov
adc
add
mov
adc
sbb
fmuls
jmp
scas
dec
push
and
jo
dec
inc
bound
repnz
add
pusha
push
adc
mov
and
push
jle
ret
lock
add
in
cld
imull
std
add
mov
mov
pop
pop
mov
and
pop
xchg
cmp
ljmp
ljmp
dec
xchg
add
in
push
lea
and
sub
rorl
dec
icebp
and
movsb
jp
adc
roll
mov
add
inc
sub
and
or
push
cmp
add
out
in
inc
nop
add
mov
shll
dec
add
pushf
jb
pop
cmp
cmc
and
lock
enter
xchg
cmp
ss
push
mov
aam
pop
lea
xchg
dec
and
push
adc
insl
mov
and
and
jge
js
inc
mov
push
push
ja
add
and
fwait
mov
ffreep
pop
mov
mov
jne
bound
outsb
outsb
adc
adc
mov
nop
loop
daa
fldcw
mov
adcl
jge
call
clc
ret
dec
out
or
es
jbe
rcll
sbb
fildl
lcall
xchg
mov
in
mov
fdiv
adc
sbb
sahf
movsl
mov
or
jo
dec
push
xchg
and
je
addl
test
cmp
bound
sub
lock
sub
pop
jnp
int
and
pop
and
jnp
data16
xor
xchg
aam
addr16
mov
test
xchg
or
sahf
ljmp
cmp
jbe
push
push
xor
fwait
or
in
xor
movsl
push
dec
sbb
inc
jae
js
jl
add
in
fs
cmp
mov
cmp
mov
cmp
sbb
je
sub
inc
loope
cs
mov
push
jns
in
sbb
add
or
xlat
jne
fbstp
scas
or
sbb
jmp
cmp
sub
xor
mov
cmp
inc
or
sub
dec
sbb
push
pop
pop
movsl
push
mov
insb
lret
cmp
call
mov
sub
mov
sbb
xchg
dec
in
push
cwtl
xchg
pushf
in
sahf
and
movsb
test
mov
test
mov
mov
sarb
lea
ficompl
mov
add
push
rcrb
sbb
push
data16
sub
loopne
call
in
jmp
cld
cmp
add
movsl
or
shlb
sbb
mov
sub
sub
push
test
cmp
inc
sub
dec
push
movsb
push
test
pusha
sub
insb
jo
push
test
addb
inc
adc
mov
pushf
mov
mov
sub
mov
mov
lret
dec
movsl
push
rcl
fdivrs
lret
fsubp
lahf
test
sbb
movsb
pop
insb
fisttpl
sarl
and
mov
imul
gs
and
add
jno
mov
lea
out
repnz
jns
cltd
dec
cwtl
mov
cmpsb
push
push
fisubs
icebp
outsl
cmpsb
je
push
push
popa
and
sbb
push
push
orl
inc
jl
xchg
jp,pt
je
stos
and
int
hlt
sub
fs
sub
icebp
inc
subl
mov
add
bound
test
cltd
pop
stos
inc
inc
testb
pop
dec
mov
mov
gs
in
inc
pop
sub
fstpt
fisttps
test
imul
pop
dec
push
fimull
inc
mov
or
je
loope
mov
sbb
pushf
testb
or
jae
not
add
or
push
add
add
add
mov
add
outsb
aaa
ljmp
xor
sub
cwtl
xchg
sub
sub
and
es
dec
popa
pop
push
xchg
fxch
lock
je
push
ja
xchg
push
dec
cmp
and
jbe
ret
das
mov
sub
imul
xchg
xchg
inc
inc
sahf
das
add
push
jo
sub
shll
push
daa
and
inc
rolb
push
je
das
adc
in
andb
mov
push
mov
pop
adcb
das
mov
test
cmpl
mov
push
and
dec
jo
or
dec
cmp
xchg
and
cmp
je
iret
insb
in
cmp
addl
inc
movsb
xor
xchg
push
sbb
dec
sbb
adc
push
addl
mov
push
xchg
mov
sti
das
clc
out
in
cmp
pop
pop
pop
je
pop
push
push
jmp
add
adc
jecxz
leave
mov
inc
pop
push
mov
mov
add
xchg
adc
push
push
into
sbb
mov
imul
popf
jmp
cmc
jne
aad
mov
push
iret
fstps
jo
xchg
pop
xlat
adc
pop
mov
dec
mov
mov
adc
xor
lods
or
mov
into
lods
je
sub
pop
cmpl
cmp
xor
aas
cmp
cmpb
sbb
dec
cld
cmp
inc
sbb
xchg
cmp
dec
sbb
sbb
rcrl
inc
stos
and
push
and
dec
out
xor
xchg
add
je
push
push
sbb
roll
nop
pop
pop
cmpl
push
adc
lcall
loop
add
rorb
push
in
push
lods
add
test
inc
jge
mov
sub
mov
inc
or
aas
sbb
inc
sti
jle
mov
sbb
jo
in
mov
ret
cmp
mov
ret
dec
mov
push
mov
testb
mov
and
test
int
push
pop
adc
lea
mov
mov
mov
rolb
dec
clc
out
adc
mov
xor
clc
and
or
enter
test
fnstenv
xor
and
dec
push
lahf
adc
lret
ret
cmp
mov
sbb
push
daa
lods
movsl
aas
inc
and
outsl
or
add
jmp
jmp
push
mov
pop
out
fcoml
js
and
push
pop
shl
je
popa
in
add
mov
mov
sub
add
mov
nop
pop
mov
nop
sbb
lods
inc
jmp
or
movsb
cmc
out
pop
lcall
mov
xor
mov
xor
add
rcrl
out
and
insb
aas
inc
dec
movsl
xchg
pop
push
jno
iret
stos
add
add
add
lods
fiaddl
lahf
movsb
shrb
jg
push
xor
mov
cmp
ss
bound
gs
sti
mov
push
mov
pop
fists
mov
xchg
mov
push
inc
push
push
sbb
insb
rcrb
test
jae
pop
test
push
loope
sub
les
push
inc
pusha
push
pusha
and
adc
xor
jl
xchg
dec
arpl
and
das
sbb
xchg
mov
shll
js
push
add
adc
add
sub
add
cmp
sbb
loopne
pop
or
mov
fnstsw
sub
repnz
leave
enter
fnsave
jb
std
inc
xchg
sub
enter
sbb
inc
jb
inc
pop
incb
scas
mov
adc
sbb
sbb
xor
jl
push
add
loopne
sub
movsl
subb
mov
pop
add
adc
sbb
je
cmp
lods
sub
fimull
push
xor
sbbl
int
int3
outsb
sahf
mov
cmpsb
add
sbb
or
sysenter
mov
clc
mov
sbb
xchg
pop
add
and
arpl
and
ljmp
add
es
and
lret
and
adc
enter
jmp
xchg
test
ljmp
add
pop
xchg
orb
jo
ret
ret
rclb
mov
adc
add
xlat
xchg
fmuls
fidivrl
sbb
dec
rcrl
sbb
add
mov
add
mov
or
mov
test
push
mov
arpl
push
mov
rorb
inc
outsl
dec
mov
and
pop
jb
and
or
and
nop
mov
xchg
js
pop
xor
mov
lret
add
push
in
cmp
or
xchg
pop
lds
push
sarb
mov
cmc
jecxz
adc
jl
in
sahf
sbb
dec
jl
adc
jbe
loopne
cmp
pop
dec
outsb
je
pusha
ret
push
push
pop
popf
call
mov
mov
mov
inc
js
pop
xor
addb
jle
add
xor
jge
mov
cmp
cmp
adc
pop
inc
sbb
sbb
fcmovnb
mov
add
dec
sub
andl
fs
add
lods
movsb
or
add
push
mov
adc
in
roll
pop
xor
into
or
data16
jne
fnsave
adc
add
sbb
repnz
mov
mov
fs
inc
sbb
jl
loop
incl
clc
push
movsl
pop
adc
push
iret
rcrl
pop
sub
sbbb
lock
lea
push
aas
fcoms
nop
movl
xor
add
inc
sbb
and
pop
mov
jle
and
mov
enter
or
inc
sar
mov
lods
sbb
nop
pushf
mov
enter
cmpb
pop
int3
cs
and
fsubr
addb
jns
iret
repz
mov
mov
fstpl
push
popa
xchg
xor
repnz
adc
aas
add
inc
dec
xor
loop
add
pushf
cmp
mov
inc
jo
in
dec
popa
lea
add
push
add
push
enter
push
sub
or
in
pop
push
push
or
lea
int
and
xor
nop
out
inc
xor
add
add
pop
push
add
or
xchg
push
sbb
mov
mov
pop
pop
fs
clc
dec
push
imul
popa
pusha
adc
dec
sub
out
lock
icebp
sub
pop
cmpsb
xor
xor
mov
push
inc
rorl
imul
or
inc
cmc
adc
inc
xchg
lock
cmc
xchg
jb
push
dec
adc
inc
sub
xchg
stc
jl
mov
dec
adc
bound
add
fstpt
popf
test
jo
bound
stos
ret
pop
add
sbb
int3
mov
inc
loop
or
lods
pop
insb
pop
loopne
nop
mov
fwait
aas
dec
or
testl
cmp
xor
je
inc
sbb
xchg
dec
push
nop
lea
push
shrl
push
cmp
push
push
mov
add
cmpsb
es
push
xchg
add
add
pop
int3
mov
add
movsb
mov
outsb
pop
lds
pop
push
push
pusha
stc
incb
push
or
imul
pop
jne
cmpsl
inc
mov
pop
mov
xchg
push
push
ret
push
adcl
push
pop
movsb
int
rcrb
push
or
loop
push
pop
dec
leave
xor
in
sub
outsl
out
mov
jo
ret
fbld
ret
push
pop
nop
mov
jle
movsl
mov
xchg
or
sbb
cld
pop
and
or
es
push
testl
jo
fldl
pop
inc
push
aas
push
orb
rcll
or
cmp
inc
push
mov
push
pop
sbb
insb
push
pop
fiaddl
inc
mov
sbb
fimull
jl
xlat
mov
pop
jle
jno
adc
push
or
adc
add
push
aad
cld
mov
xor
loopne
test
bnd
nop
mov
loopne
or
out
or
add
add
cmpsl
ret
adc
jo
jmp
push
or
or
or
ss
sub
adc
add
cmc
pop
adc
sbb
fwait
adcb
or
pop
inc
js
ss
push
adc
sbb
push
lea
lea
mov
push
add
push
pop
push
inc
xchg
and
decl
scas
arpl
inc
add
dec
lds
cs
add
mov
inc
add
jl
jmp
add
iret
inc
sti
xchg
push
lea
push
pusha
push
and
push
incb
orl
mov
ret
decb
sub
mov
push
lret
adc
push
push
testl
xor
filds
push
adc
push
push
pop
in
int
dec
mov
imul
iret
push
pop
cli
dec
mov
ss
adc
icebp
ret
add
or
cmp
push
and
iret
push
sub
add
and
and
shll
jl
fadds
mov
add
mov
or
pop
adc
mov
sbb
adc
mov
add
je
sbb
ret
add
shll
inc
adc
push
cmp
and
mov
fs
add
mov
movsb
mov
xchg
pop
push
mov
cmp
mov
ss
fcoml
inc
push
dec
cmpsl
fsubr
ret
sub
orl
add
int3
scas
popa
add
lds
adc
test
pop
inc
pop
pop
or
ret
mov
in
sbb
jecxz
pop
push
sbb
ret
sbb
insl
imul
lea
pop
sub
loopne
sub
push
int3
adc
rcr
mov
push
push
and
mov
or
gs
in
sahf
pop
inc
fcmovb
pop
pop
mov
aaa
cmp
adc
cmpsb
push
adc
enter
push
stc
notl
or
jmp
fildll
jge
xchg
xor
test
jge
and
rclb
call
popa
cwtl
gs
and
insb
add
or
imul
dec
xchg
loopne
push
pop
lods
jae
loopne
add
jnp
adc
std
adc
jno
adc
loopne
test
out
push
mov
rcrl
jecxz
divb
xchg
sub
push
push
mov
sbb
jb
add
push
sub
jge
or
int
xor
ds
ret
imul
or
ret
decl
xchg
push
scas
xlat
push
lock
js
mov
repnz
pop
enter
xor
jb
dec
test
ds
xchg
ficoml
sub
movsl
sahf
inc
xlat
lea
cmp
gs
jnp
jb
roll
push
xor
push
xchg
test
stos
imul
mov
sbb
loopne
cli
shr
jne
cltd
push
cmp
in
cmp
mov
imul
cmp
xchg
lahf
xchg
pop
jo
push
mov
jge
push
movsb
call
negb
dec
cwtl
ret
nop
push
test
movsb
out
lahf
decl
jle
out
add
cmpsl
shlb
add
or
mov
pop
gs
jecxz
sbb
rorb
dec
icebp
repz
pop
add
pop
cmp
mov
pop
ja
push
inc
cld
add
cmp
push
adc
sbb
add
or
add
mov
sbb
decl
cmpsb
jg
jge
lea
cmp
decb
mov
sbb
shlb
insb
inc
popl
adc
clc
or
aam
cld
pop
pushf
adc
pop
sbb
pop
cmpb
lea
add
push
mov
jno
jno
sbb
dec
fs
add
int
mov
rcll
add
cmp
rolb
nop
bound
frstor
nop
loop
jb
int3
xchg
pop
sbb
sub
mov
xchg
push
ds
sub
sbb
mov
mov
in
into
lods
adc
jne
filds
sub
adc
dec
mov
mov
jle
lock
lods
sub
mov
xor
loop
dec
cld
sahf
rorl
rcl
mov
mov
loop
imul
add
or
and
xor
or
sbb
and
and
adc
insb
je
dec
add
es
dec
fsubs
fimuls
push
ljmp
ja
repnz
sub
inc
xchg
pusha
sub
push
adc
or
sub
adc
daa
mov
jnp
addl
dec
jmp
and
mov
test
rolb
xchg
and
fistps
pusha
adc
cmp
jb
mov
je
xorl
and
adc
mov
out
adc
push
pop
push
dec
dec
sub
sbb
ds
jp
clc
outsb
cwtl
icebp
loopne
je
dec
pusha
dec
sbb
adc
sub
gs
rolb
mov
push
jo
add
sbb
inc
dec
pop
sbb
add
fadds
in
shl
test
into
push
fdivr
aas
out
push
inc
cltd
in
cmp
push
sub
insb
lock
mov
je
or
push
int
pop
int3
sahf
sub
jge
fsubrs
dec
test
dec
repnz
pushf
vxorps
pop
jl
insb
jecxz
xor
int3
adc
or
movsl
add
sbb
dec
rclb
sbb
bound
shr
mov
test
je
aad
ret
mov
out
and
rol
cmp
movsl
fcoms
and
dec
cmp
push
mov
or
test
xchg
jne
and
adc
xor
loop
iret
decl
lret
and
flds
mov
adc
cmpl
jmp
or
adc
push
rcll
add
sbb
data16
cmpsb
cmp
adc
xor
stos
enter
push
int3
xchg
mov
lods
push
sbb
dec
adc
nop
push
adc
xor
jg
mov
inc
jmp
lea
push
inc
mov
add
sbb
add
lds
pop
xor
cmp
jmp
mov
scas
and
repz
or
jbe
sbb
adc
mov
pop
cld
inc
xchg
hlt
add
push
inc
add
fcomps
sbb
loope
push
les
outsb
cs
mov
fs
into
daa
sub
pop
jmp
adc
sbb
aam
ss
mov
push
or
add
mov
pop
inc
inc
add
add
mov
enter
adc
push
loopne
pushf
lods
ret
xchg
test
sbb
je
sub
push
sahf
pop
jns
addl
fdivrl
adc
mov
inc
or
or
rorb
sbb
cmp
mov
sbb
xor
mov
mov
xchg
push
adc
out
pop
mov
sahf
bound
sub
jle
xchg
push
cmp
je
les
cmpsb
mov
in
or
mov
inc
inc
mov
je
sbb
push
shrb
aas
dec
or
incb
adc
mov
dec
or
cwtl
pop
xor
jo
pop
fisubrl
lcall
and
movb
mov
adc
pushf
js
popa
test
fstps
data16
jmp
and
out
pop
leave
inc
leave
or
sbb
push
or
lea
push
push
adc
dec
sub
dec
mov
xchg
bound
cmp
jo
xchg
enter
insb
lret
jge
shrb
sbb
inc
or
sub
inc
repnz
lds
push
pop
inc
push
jge
ljmp
pop
icebp
push
or
shll
pop
les
nop
dec
jge
xor
repnz
call
in
test
inc
cmp
adc
push
loop
sbb
lea
inc
mov
add
movsl
cmp
dec
add
adc
loopne
insb
mov
adc
xlat
imul
sbb
push
subb
dec
mov
dec
adc
push
add
xchg
stc
xchg
pusha
dec
add
dec
fstpt
add
dec
out
sub
or
inc
sbb
mov
jae
data16
adc
movsl
addl
cmp
xor
ds
icebp
adc
push
sub
adc
pushf
xor
dec
rorl
out
jne
xchg
add
outsb
mov
mov
push
dec
clc
dec
jne
sbb
fidivl
inc
add
xlat
jecxz
xchg
lock
dec
lods
inc
lods
loop
pop
push
loope
adc
lcall
mov
sbb
add
push
bnd
push
lret
sbb
inc
add
call
pusha
lret
data16
sbb
jo
bound
or
add
shrb
jle
orl
mov
mov
ret
lret
push
jle
mov
in
ret
movsb
jge
or
test
cmp
cmpl
dec
mov
in
xchg
sbb
decl
xor
test
push
inc
add
or
imul
add
ss
ret
pop
pusha
fsub
and
popa
mov
sbb
arpl
sbb
mov
adc
or
lahf
mov
and
pop
in
adc
push
aam
inc
pusha
nop
pop
add
xchg
negb
xchg
insb
push
xchg
push
lock
or
xchg
add
cmp
mov
or
push
incl
mov
sahf
and
lret
sti
add
and
dec
leave
xchg
jo
adcb
or
add
adc
fcoms
sbbb
or
and
adc
jmp
xor
and
pushf
mov
cwtl
cmp
pusha
add
add
sbb
mov
mov
sub
pop
push
or
and
xchg
or
loope
fistps
pop
push
push
sbb
cs
enter
aam
and
pushf
and
add
add
loop
loopne
and
and
in
mov
hlt
lock
inc
mov
outsb
pop
adc
or
xchg
nop
cwtl
xchg
mov
lods
das
xchg
out
mov
sbb
add
mov
xor
sub
inc
movsb
inc
mov
stos
rorb
mov
mov
inc
fmuls
or
and
pushf
pop
mov
add
adc
mov
loope
adc
jno
lahf
icebp
mov
movb
test
push
and
cs
or
xor
loope
lcall
inc
rolb
fbld
and
xchg
dec
pop
pop
insb
aas
sbbb
fstps
mov
mov
and
icebp
jno
pushf
sti
cmp
les
fsts
xchg
mov
test
ror
and
xor
lds
rol
lea
insb
push
xchg
pop
enter
enter
fsubrl
daa
insl
inc
sbbb
ret
mov
cmp
in
enter
jno
sbb
nop
xchg
xchg
sub
nop
xchg
add
push
dec
adc
cmp
add
cmp
and
add
adc
xchg
testb
adc
fsubrs
add
mov
cwtl
sub
pop
jb
test
jo
pop
jb
and
jb
and
or
xor
daa
pop
and
mov
cld
sub
mov
jae
or
nop
push
inc
add
orl
aaa
pushf
mov
aam
add
loope
repnz
or
push
cmp
or
pop
out
ja
aad
pop
pop
push
leave
add
test
xchg
or
dec
aad
add
cmpsl
add
mov
push
test
out
or
or
add
mov
jecxz
arpl
sbb
sarb
aam
inc
jecxz
mov
mov
stc
popa
mov
pop
shll
adc
sub
std
xchg
xchg
xor
dec
jo
mov
insb
inc
cld
xchg
cs
ja
inc
inc
test
add
fsubrl
add
or
xor
lea
cltd
and
lea
sub
lea
aas
mov
aaa
mov
cmp
gs
add
jae
icebp
daa
cmp
adc
sub
dec
push
xchg
cmpl
cld
mov
shrl
sub
sub
push
cmp
adc
adc
pop
xor
mov
cmp
mov
int3
lret
mov
loop
adc
pop
or
test
xor
push
sub
lock
dec
orl
test
mov
add
pop
ja
cltd
push
mov
mov
pop
imul
xlat
cmp
push
or
cmpl
ja
inc
movsl
insb
jb
popa
dec
sub
xchg
test
add
adc
dec
cmp
push
and
adc
xor
jae
push
dec
dec
testb
mov
je
ret
std
sbb
rcl
or
cmp
je
mov
out
xchg
sub
push
lea
push
mov
arpl
fmuls
shll
movsl
xchg
sti
test
add
xor
out
push
xor
sbb
push
xor
cmp
or
or
pop
outsl
mov
das
clc
daa
xor
mov
pop
ret
add
jg
mov
rol
stos
lahf
outsb
or
mov
int3
jne
loopne
xchg
jno
enter
fdivs
push
sbb
popa
cmp
sbb
or
mov
sbb
sub
cmp
sub
cli
push
adc
push
mov
adc
pop
lds
add
cwtl
adcb
dec
rclb
and
cmpsb
mov
addl
push
or
rcrb
sub
sub
adc
cmp
loop
xor
cmp
ja
sbb
test
scas
icebp
mov
pusha
push
jl
xchg
fs
iret
push
jl
add
lea
loopne
cmp
adc
aaa
sub
lods
icebp
out
adcl
pushf
incl
mov
outsb
dec
mov
shll
mov
xchg
mov
sbb
dec
out
idivb
mov
shr
clc
jmp
pop
mov
jne
popf
adc
sbb
add
mov
cmp
mov
and
mov
push
xor
pop
mov
pop
jo
push
lea
push
stos
sbb
xor
in
inc
jo
jge
mov
adc
insl
aas
dec
je
clc
mov
cmp
add
sub
xor
adc
sbb
jecxz
addr16
dec
leave
sbb
cmp
add
outsl
push
adc
sbb
orb
mov
cmp
cmp
sbb
mov
push
and
cltd
push
add
jne
ljmp
inc
rolb
ds
push
jmp
jae
cmc
xchg
out
dec
lods
jo
stos
pop
fcoml
adc
outsb
add
push
loopne
sub
bound
es
sub
fisubrl
ret
mov
cmp
adc
mov
add
add
test
cwtl
ret
call
sub
add
mov
pop
ret
pop
ljmp
mov
inc
iret
notb
jo
push
pop
ret
cmp
or
movsl
imul
inc
sbb
mov
xchg
fists
lret
outsb
loope
cs
jae
lea
cmovl
adc
jne
cmp
push
xchg
mov
xchg
insb
mov
out
push
pop
popf
cmp
fists
sub
or
xlat
cld
fstl
and
cld
jbe
jo
xchg
movsl
cmp
push
fsubrs
add
fmuls
test
insl
inc
cli
lods
xchg
icebp
or
add
mov
adc
test
and
xchg
add
mov
adc
call
negl
xchg
inc
xor
mov
hlt
add
addr16
add
jl
iret
mov
add
in
stos
cmp
sbb
cmp
in
adc
call
mov
lahf
insl
cmp
ja
ffreep
jmp
pop
popa
or
add
adcb
xorb
jecxz
test
mov
fimull
mov
out
mov
outsl
cmp
push
fiaddl
js
inc
xor
push
push
push
js
mov
aaa
outsl
add
push
adcl
inc
imul
xchg
and
jmp
xor
or
sub
cmp
dec
add
lea
repz
jl
adc
jmp
dec
cmp
scas
or
cld
and
imul
xor
jbe
fisubs
adcb
xor
loop
fisttps
or
popf
insb
push
push
mov
inc
lods
not
mov
mov
push
rcr
add
pop
filds
sbb
xor
adc
adc
xchg
or
adc
ss
pop
ret
jo
repnz
pop
ficoml
lahf
rolb
int
sbb
sbb
jo
out
or
xor
inc
adc
sub
and
jae
cmpsb
mov
sub
push
mov
jns
adc
push
je
cmp
inc
jmp
pop
pop
pusha
ret
push
jmp
dec
int3
mov
mov
and
dec
imul
jmp
inc
push
cmp
or
xor
sarl
inc
xor
adc
push
repz
rep
adcl
fstp
outsb
loopne
xor
push
jecxz
jns
daa
iret
out
sbb
ds
dec
aas
fwait
add
repz
out
inc
lret
xlat
push
inc
sahf
idivb
test
push
cld
pop
inc
push
xchg
jmp
sti
ficomps
mov
push
adc
pop
insb
adc
lock
ffreep
pop
aaa
fstpt
shrb
or
daa
cs
or
dec
cmp
mov
sbb
pop
xor
inc
popf
adc
cmp
out
push
daa
jmp
mov
add
and
or
xchg
jnp
js
mov
aaa
nop
bound
add
dec
xchg
push
push
repnz
leave
adc
pop
jecxz
mov
ret
mov
inc
lea
daa
aaa
arpl
adc
lods
cwtl
lret
jns
jo
aas
sbb
stos
cmpl
add
int
add
aaa
mov
int3
pop
add
ss
es
xchg
jno
xchg
out
sbb
xchg
faddl
inc
imul
and
dec
stos
mov
mov
xor
mov
sbb
shlb
in
repz
rclb
cwtl
or
xchg
fbld
inc
sub
and
scas
mov
pop
dec
inc
mov
sbb
in
push
pop
or
cmp
pop
or
mov
sbbl
jne
push
push
and
mov
test
or
fsubrl
mov
mov
mov
push
test
add
test
pop
cmp
outsb
adc
and
cmp
popa
sub
cmp
or
or
mov
lcall
and
push
dec
inc
and
mov
sbb
aam
int3
jae
push
les
ja
add
and
jns
lahf
nop
inc
push
rcll
add
das
add
mov
xor
loop
lea
dec
adc
xlat
adc
add
adc
addr16
int3
stos
pop
jne
movsl
and
pop
popa
cmpsb
pop
jp
js
lahf
gs
adc
cmp
or
and
dec
cmp
adc
pop
cmp
jae
mov
insb
inc
jo
mov
dec
dec
call
mov
add
add
push
jmp
sbb
test
jns
repnz
insl
insl
sub
ss
lret
pop
mov
rolb
imul
loop
imul
sbb
sub
sub
sub
insl
rcl
sarb
addb
mov
push
push
push
fildll
or
call
sub
es
lea
sub
inc
xchg
outsl
cmp
sub
loope
cmp
mov
jne
mov
xchg
mov
pop
mov
adc
and
push
int3
hlt
inc
push
mov
sub
and
push
push
xchg
sarl
mov
pop
adc
xchg
hlt
out
push
test
mov
inc
pcmpeqw
lret
aaa
js
xchg
or
add
pushf
data16
inc
pop
mov
mov
xchg
loope
sbb
pop
add
loopne
cmpsl
sub
mov
aas
push
sarl
pop
add
sbb
push
jae
cmp
mov
jl
sbb
mov
push
ficomps
xlat
pop
push
inc
cs
jle
xchg
sub
xchg
pop
and
push
scas
call
mov
mov
inc
insl
or
sbb
sbb
jnp
adc
add
shlb
loopne
and
mov
xor
mov
rcrb
push
push
test
mov
adc
test
ds
sti
or
mov
loop
xor
xchg
test
stc
rclb
sbb
sub
stos
sahf
aad
xor
fldt
mov
mov
fisttpl
dec
mov
dec
mov
push
or
fwait
adc
andb
popa
pop
sbb
lea
mov
test
add
mov
xchg
and
test
idivb
ret
shlb
or
popl
dec
and
test
or
push
in
adc
add
xchg
pop
xlat
std
nop
shlb
xor
mov
push
and
adc
jmp
enter
xor
push
aam
out
test
and
add
inc
or
mov
dec
xor
js
pushf
pop
rorl
lock
hlt
mov
cmp
xorb
bswap
loope
dec
xchg
fsubs
push
push
cs
push
pop
inc
fimuls
lret
or
add
inc
jp
dec
mov
sub
mov
mov
push
in
enter
ret
je
ret
ret
popl
add
data16
jo
jle
and
test
sbb
pop
mov
js
movsb
and
dec
jle
mov
mov
xchg
out
and
and
dec
and
lock
mov
and
addl
clc
inc
mov
jmp
mov
and
cmp
adc
sbb
pop
frstor
adc
mov
or
rorb
cmp
jns
fildll
sbb
push
rclb
cmp
sbb
push
outsl
nop
ret
adc
imul
leave
push
addb
in
jo
add
push
pop
sbbb
sbb
sbb
pop
or
repz
push
insl
pop
loope
aam
add
jmp
pusha
es
fcoml
jge
jmp
icebp
mov
cmp
cmp
inc
dec
fiaddl
add
cmp
jg
sub
and
add
sub
pop
push
leave
pop
mov
dec
jne
xchg
lds
push
ficompl
push
les
dec
popf
popf
les
and
sbb
xchg
mov
cmp
mov
mov
lea
jl
movsl
mov
stos
sbb
addb
cmp
dec
loope
jne
mov
arpl
jno
jnp
fildll
xor
ja
jge
cmpsl
pop
jl
adc
pop
imul
xlat
fdivrl
or
clc
daa
in
mov
push
push
push
jmp
xor
adc
movb
lea
sbb
push
jmp
push
or
pop
fdivrp
jmp
lea
mov
cmp
inc
pop
dec
adc
push
xchg
in
pop
pop
cli
add
mov
jmp
int3
incl
pop
push
call
js
lea
pop
lock
and
ret
push
dec
push
dec
sbb
jns
mov
orb
cmp
cs
xor
popa
dec
cmp
outsl
jno
jp
add
sahf
jmp
lret
add
adc
mov
cmp
rcl
fwait
mov
sub
loopne
mov
add
adc
mov
dec
neg
sbb
and
inc
pop
mov
pop
and
or
loope
mov
add
dec
sub
fcmove
mov
cmp
adc
clc
or
mov
mov
mov
movsl
mov
xor
and
shr
xorl
mov
andb
mov
mov
movsl
scas
scas
inc
push
sub
lahf
add
test
xor
mov
inc
sub
out
add
lock
lret
cltd
mov
sbb
pop
sbb
fcoml
cwtl
pop
les
outsl
sub
mov
imul
xchg
mov
cmp
push
inc
stos
jb
xchg
fcmovnbe
mov
or
adc
into
xlat
xor
clc
rorb
jno
scas
push
loop
sub
mov
test
loop
mov
pop
int
aas
imul
pop
gs
pusha
xor
jne
cmc
xor
les
add
dec
adc
dec
gs
pusha
fmull
dec
xor
cmp
pushf
pop
sub
push
inc
jle
les
mov
sbb
dec
jg
sbb
imul
das
test
test
icebp
jne
mov
mov
add
outsl
or
push
lock
bound
and
add
ror
or
pop
daa
pop
sbb
xor
std
aaa
mov
and
dec
dec
pop
sub
pop
and
push
mov
mov
xchg
mov
movsb
sarl
lock
add
add
insb
push
sub
dec
popf
cwtl
push
adc
loopne
push
jns
mov
or
nop
or
rcrb
inc
adc
dec
dec
ja
dec
sarb
adcl
roll
mov
jmp
sbb
test
sbb
jl
in
pop
add
les
mov
out
push
jne
xchg
ret
sbb
mov
dec
adc
mov
dec
lock
push
je
int
outsb
mov
and
mov
pop
ret
inc
lcall
push
fdivrl
add
xchg
mov
jge
lods
pop
pop
mov
adc
into
inc
add
cmc
xchg
pop
mov
repnz
xor
adc
sub
xor
jbe
jmp
decl
add
mov
xchg
test
lahf
scas
xchg
loop
push
xchg
sbb
cmp
pushf
jl
mov
lock
lea
fstl
js
nop
cmp
cmp
insl
jae
in
sbb
pop
pop
cmp
fsubrs
lods
pop
xchg
fnop
or
arpl
fcomp
inc
add
inc
push
mov
pop
outsl
xor
push
cwtl
jo
popa
lea
ficoml
jl
dec
js
push
lea
sub
scas
xor
mov
or
outsl
jp
cmp
push
pop
imul
xchg
adc
adc
add
add
jne
inc
mov
pop
mov
inc
add
push
pusha
or
cmp
hlt
aas
aam
lahf
cmc
or
lahf
xchg
je
jnp
inc
pop
or
es
addl
ss
jg
adc
pop
sub
call
sub
lods
lea
push
movsl
fs
adc
push
mov
scas
call
ret
lret
sar
jle
mov
xor
dec
rcr
es
ljmp
jle
push
es
aas
add
ficompl
addb
adc
push
inc
mov
movsb
cwtl
cmp
inc
add
js
jo
or
add
jo
jno
mov
and
adcb
inc
dec
push
xor
test
xor
ret
lahf
and
cmp
mov
test
xlat
add
or
inc
sarb
mov
add
or
rcrb
mov
dec
add
mov
inc
js
and
jb
out
aam
add
xchg
sbb
mov
pusha
repnz
decb
adc
cld
lds
enter
cmpsl
into
mov
das
or
shl
jne
mov
nop
js,pt
ja
insb
sbb
push
mov
mov
orb
push
sub
pop
push
sub
lock
daa
cmp
cmp
nop
verw
sbb
mov
fists
ds
inc
adc
pop
les
mov
mov
adc
dec
ret
pop
push
xchg
jae
dec
or
sbb
outsl
push
sbb
pop
ljmp
xchg
rcrl
jo
js
adcl
jle
cwtl
lds
into
cmp
mov
fs
push
js
je
sti
andb
int3
jge
push
jl
xor
mov
movl
mov
gs
mov
sub
inc
inc
scas
sbb
rclb
jp
decb
popf
adcb
and
add
roll
mov
mov
adc
ret
jecxz
movsl
and
fisubrl
sbb
adc
jne
subl
sbb
fwait
test
xor
dec
inc
inc
mov
or
adc
inc
daa
mov
cs
or
int3
les
or
daa
bound
lea
and
js
cmpsl
push
into
jge
ljmp
jbe
jp
ss
push
sub
adc
inc
fisttpl
rcll
xchg
xor
pusha
and
push
sbb
cmp
xchg
or
xchg
sub
adc
mov
xor
pop
out
scas
pop
sbb
sbb
pop
fadds
sbb
pop
push
xchg
push
fstl
jo
add
aas
pop
les
fiadds
add
ss
adc
jne
jo
rcl
push
xchg
mov
rcr
mov
dec
jne
xor
pop
jmp
mov
jbe
sub
and
push
test
imul
fdivl
push
pop
push
stos
scas
and
pop
arpl
pop
push
or
dec
xchg
or
xor
lock
mov
mov
inc
popf
ja
mov
test
clc
xchg
nop
insb
mov
mov
add
add
inc
cmpb
bswap
rolb
inc
push
cmp
xchg
mov
push
sbb
cmpl
cmp
cs
mov
adc
insb
adc
movsl
add
mov
push
mov
jge
inc
mov
mov
pushf
pop
lock
add
xor
adc
cmp
or
sti
or
fcoms
cld
push
mov
adc
or
clc
push
aam
push
lahf
and
sbb
inc
xorl
adc
push
adc
dec
mov
dec
xchg
mov
jae
xchg
loopne
sbb
sti
add
fidivrl
enter
cltd
jmp
mov
mov
mov
daa
jns
in
lret
pop
jns
jl
jmp
jns
and
jnp
jbe
cmpl
adc
sub
push
jge
mov
jl
lret
pop
inc
cltd
add
mov
push
mov
mov
cmp
push
fstpt
sub
jb
nop
push
or
rcll
fwait
test
pop
jb
xor
xor
jle
and
xor
lock
push
fmuls
xchg
pop
mov
inc
and
adc
in
cmpl
addr16
or
mov
push
adc
mov
sub
sbb
xchg
decl
xor
pop
or
mov
mov
es
test
mov
mov
sub
movl
shlb
pop
cltd
call
push
pop
lea
pop
test
adc
jp
push
xchg
rclb
or
mov
mov
out
xchg
dec
rclb
push
pusha
pop
inc
push
shll
inc
xor
sub
sub
or
out
jmp
and
ret
add
int3
fdivs
movl
xchg
mov
and
fistpll
pusha
push
pop
cmp
mov
mov
movsl
mov
and
push
aam
dec
int
out
sub
sarl
xchg
mov
aas
push
scas
mov
pop
and
jo
jge
mov
adc
or
xchg
loopne
add
sub
popf
repnz
sub
fdivs
sbb
dec
fdivp
int
jmp
add
mov
pop
fwait
in
nop
xor
stos
adcb
cmpb
pop
xor
sbb
mov
cwtl
jbe
fucomp
stos
leave
inc
mov
inc
mov
loope
lds
ficoms
test
dec
testb
ret
insb
sbb
mov
and
psubsb
das
js
or
xchg
cmp
out
neg
bound
add
jmp
mov
rorb
lods
xor
pop
mov
pop
cmp
push
push
add
and
adc
mov
repz
and
insb
push
lea
sbb
adc
mov
mov
jne
mov
sbb
movb
inc
cvtps2pi
or
and
cmp
or
dec
pop
addr16
shrb
fisttps
sbb
in
cmc
cmp
mov
pop
mov
ret
push
push
aam
movsl
imulb
sbb
fs
inc
jge
cmp
lret
inc
push
jne
sbbb
cmp
jp
mov
test
inc
enter
rolb
pop
call
xchg
cmp
xor
mov
test
lahf
mov
cld
test
pushf
mov
mov
fistpl
dec
in
push
ret
pop
pop
and
jle
sbb
cmp
inc
mov
sbb
dec
push
or
cmp
jne
mov
pop
inc
sbb
jae
test
inc
xlat
cwtl
test
mov
inc
es
dec
push
call
xchg
fcompl
loopne
leave
xorb
push
call
mov
add
mov
adc
jnp
jb
add
mov
notrack
sbb
outsl
arpl
orl
daa
mov
and
leave
movsl
imul
cmpb
repnz
and
scas
and
in
mov
fdivrl
into
xchg
andl
xchg
mov
jecxz
jae
xor
loop
dec
jmp
ljmp
ret
fadds
xchg
pushf
sbb
fmuls
xor
add
and
dec
inc
and
inc
cmp
jmp
add
int3
pusha
adc
pop
pusha
in
push
subb
jge
mov
testb
jl
inc
push
mov
mov
xchg
adc
mov
repz
sbb
sub
jge
mov
push
or
and
bound
repnz
loope
clc
lds
call
push
push
icebp
pop
aam
bound
jo
push
mov
dec
nop
test
mov
inc
pusha
push
adc
push
add
ja
and
sbb
fisubrs
cmpsl
mov
mov
sub
or
test
lea
icebp
lahf
rorb
push
sbb
out
mov
les
add
xchg
fiadds
sub
rolb
insl
fnstsw
xchg
push
mov
add
fs
sub
add
into
adc
sub
das
call
out
popf
xchg
out
sbb
in
adc
ss
pop
into
aas
lods
es
loop
xchg
pop
xchg
loope
jge
pop
sub
cmp
mov
test
jne
or
call
adc
pusha
test
popa
lock
jle
movl
xor
sarl
and
cmp
adc
mov
cmp
mov
lcall
sbb
adc
pop
or
clc
js
dec
ja
test
jo
insl
fisubl
adc
sub
dec
mov
int
sub
sub
push
nop
lods
push
inc
xchg
pop
and
mov
int
and
xor
cwtl
cmp
icebp
xor
je
xchg
ret
frstor
sahf
and
ret
jnp
sub
pop
push
cli
jno
xor
cmp
pop
pop
mov
xor
add
fwait
int3
incl
sbb
mov
nop
adc
loopne
inc
pop
push
or
in
mov
inc
cmp
sub
xor
cmp
movsl
jns
jp
add
ret
jle
dec
xor
xor
sbb
sbb
jo
sub
cmp
or
icebp
push
rolb
aam
mov
xchg
or
jo
sbb
js
sarb
and
mov
loopne
or
push
lret
pop
jl
fisubs
or
imul
adc
in
push
add
pop
cltd
addr16
ret
or
push
push
jle
jo
lcall
add
daa
je
sub
push
mov
cwtl
inc
sbb
jne
or
push
inc
lahf
jne
jne
push
push
int3
xor
cmp
sub
push
mov
add
or
sbb
sub
mov
lds
jle
sbb
lds
fbld
das
inc
shrl
push
pop
pop
pop
jb
push
inc
or
xchg
lock
add
mov
jae
jne
cmpb
mov
adc
in
bound
ss
jo
sbb
sbb
adc
push
test
loopne
cwtl
cli
insl
xchg
outsl
mov
pop
push
push
push
sbb
notb
mov
loop
dec
jmp
add
ret
mov
mull
inc
adc
cmp
pusha
jbe
into
ljmp
gs
jmp
iret
repz
int
fiadds
add
add
mov
sub
push
fildl
pop
push
push
data16
mov
mov
lock
aaa
ss
cmp
push
push
cmp
out
outsb
sbb
mov
js
push
cmp
xor
or
dec
push
push
push
push
push
push
sub
pop
popa
jnp
lock
push
stos
dec
mov
aad
sub
pop
pusha
sub
add
gs
pushf
jb
xorb
xor
addr16
test
dec
in
shr
pop
not
push
push
lods
pop
add
decl
sub
sub
push
sub
lea
roll
ljmp
adc
ret
jge
xor
pop
bound
repnz
ljmp
enter
mov
push
pusha
jno
fs
sbbb
mov
xor
mov
pop
add
add
dec
test
add
cmp
add
call
sub
out
arpl
sub
int
or
mov
or
sub
orl
andb
xor
pop
sub
or
test
mov
dec
adc
mov
adc
mulb
test
jge
jns
rcll
pop
add
mov
and
jnp
push
cli
and
mov
mov
mov
adc
pop
rorb
testl
push
xor
or
or
adc
fadds
sub
inc
xchg
or
add
movsl
push
into
sub
and
pop
mov
or
pop
sbb
insb
dec
add
dec
sub
sahf
add
rorb
lret
stc
dec
sahf
cmpsl
insl
xchg
push
je
pop
das
stos
sub
cmpsl
stc
cmp
xchg
and
xorl
ljmp
div
push
outsl
adc
cwtl
add
xchg
mov
add
add
xorl
push
aaa
adc
ljmp
or
push
jmp
xchg
or
sub
push
ds
clc
jnp
jl
pop
push
cmc
or
add
adc
mov
xor
and
jp
mov
or
popa
sbb
shrd
hlt
jnp
rcll
test
dec
shrb
stos
dec
cmp
sub
xor
pop
lcall
out
fadds
xor
jle
or
sub
das
pusha
insl
pusha
inc
outsb
inc
mov
mov
and
cmpw
jne
push
add
xchg
push
xor
inc
inc
and
and
cmpb
je
bound
xchg
std
sbb
lcall
lods
push
push
loopne
in
lea
or
adc
sub
movsl
jmp
mov
lea
outsl
push
mov
or
xor
fisubrl
je
addb
fnstsw
idiv
mov
xchg
mov
cmpl
ja
neg
repnz
xchg
cmp
xor
rorb
stos
push
mov
jl
arpl
and
push
xchg
sub
inc
pusha
outsl
test
aam
pusha
mov
add
mov
dec
dec
add
fsubl
sbb
xor
mov
test
push
dec
xor
sub
or
push
mov
mov
lock
xchg
sti
add
and
push
fcmovb
push
dec
add
inc
and
imul
into
sbb
jo
lret
ret
inc
js
mov
add
fwait
ss
push
lcall
nop
notb
and
dec
roll
or
mov
or
inc
js
pop
cmp
cmp
repnz
aad
push
lahf
aad
jo
add
jb
push
cmp
js
push
mov
jns
and
out
push
add
add
add
add
add
sbb
out
inc
adc
sub
or
ret
rcr
and
cmpsl
repnz
push
les
cltd
fimuls
lods
xchg
fiadds
sub
and
or
pusha
add
adc
les
les
jo
cmp
sti
and
pop
add
dec
sub
push
inc
mov
or
jb
dec
mov
adc
outsl
pop
scas
popf
push
mov
or
loope
in
ds
push
movsb
or
mov
jb
mov
mov
les
lods
outsb
push
push
stc
xor
add
les
sub
in
pusha
or
sub
in
mov
xor
sbb
sub
movsl
inc
mov
js
cmp
lea
rcrb
cmp
add
cmp
nop
push
sub
js
sbb
rorb
push
adc
pushf
add
push
ljmp
jp
push
adc
ror
and
push
ja
cmpsl
inc
lret
test
pop
mov
sbb
scas
mov
pop
lret
in
adc
xor
rcrb
push
pop
inc
push
add
cmpsl
rolb
inc
aaa
push
inc
pusha
orb
or
aam
pmovmskb
adc
adc
lock
ss
jl
pusha
xor
cs
in
mov
pop
mov
pop
jo
cmp
push
xchg
add
shrl
pop
pop
push
sbb
in
push
rorl
stos
mulb
testb
popf
fcmovne
nop
jge
shld
repz
insl
bound
outsl
jecxz
fs
repz
adcb
inc
adc
cld
push
inc
sub
nop
pop
add
loop
sbb
push
stos
ja
adc
xlat
pop
push
adc
iret
les
pusha
pop
loope
push
adc
pop
xchg
ret
mov
mov
sarb
cmp
mov
movsb
push
adc
out
idivb
cmp
sub
out
imul
testb
adc
or
sbb
ficomps
sbb
mov
mov
mov
jmp
adc
and
popa
inc
mov
xchg
rolb
insl
sarb
xor
inc
push
push
jno
inc
cmp
jo
dec
cmp
dec
sysenter
xchg
pusha
ss
jl
mov
push
xor
xchg
and
insb
ret
inc
sub
sub
shrb
clc
in
push
push
test
repnz
adc
fadds
mov
lahf
pop
adc
push
repnz
into
shlb
mov
add
jo
fwait
test
push
lcall
in
mov
inc
rolb
push
addr16
xor
addl
add
adc
stos
adc
scas
adc
mov
xor
insb
shrb
jecxz
pop
cmp
fildl
adc
repnz
cs
adc
lea
sub
push
int
mov
out
aad
dec
ret
jo
push
mov
dec
push
out
jecxz
inc
cld
xor
jae
mov
jne
or
flds
or
vprotb
mov
sub
mov
xlat
insl
pop
cmpsl
stos
push
test
in
cmc
pushf
inc
cli
mov
repz
push
sti
or
pop
pop
int
xchg
jg
add
jle
mov
mov
cmpsb
pushf
sub
imul
mov
imul
add
or
mov
cmp
sub
sbbb
add
pop
data16
push
lahf
fwait
divl
sbb
or
nop
add
or
shrb
inc
and
mov
fdivp
adcb
enter
adc
or
test
jne
adc
imul
adc
movsb
scas
movsb
adc
mov
sub
test
test
lds
cmc
cmp
adc
xchg
and
sub
dec
lods
cmp
out
out
mov
mov
sub
mov
mov
rcl
loopne
test
mov
cs
push
fcoml
js
cmpsl
mov
sub
ret
clc
popa
lret
aam
pusha
iret
gs
jp
and
pop
scas
jecxz
pushf
pop
shrb
adc
mov
mov
addr16
test
hlt
xor
sub
jp
sub
dec
lahf
add
jb
and
pop
sbb
mov
push
and
shrl
xchg
sti
insb
jge
dec
lea
cmp
aad
bndstx
dec
ret
sbb
inc
sbb
iret
and
pop
arpl
lret
mov
or
push
pinsrw
sbb
int
mov
test
sub
xor
and
mov
sbb
mov
xchg
in
mov
adc
sub
push
shrl
jae
mov
pusha
je
mov
push
add
mov
xor
aaa
leave
std
mov
and
add
xor
insl
or
push
xchg
push
addl
sub
mov
adc
pop
cmpb
and
dec
lock
movsb
dec
popa
add
push
mov
adc
das
loop
and
in
push
pop
scas
mov
pop
fldcw
push
mov
iret
sub
xor
adc
mov
cmp
mov
mov
inc
lods
lcall
daa
aam
insb
fmuls
xchg
lret
cmp
popf
cs
push
push
or
pop
fcoms
jle
mov
cmp
je
push
add
shlb
icebp
xchg
rorb
fs
lret
adc
call
notb
dec
add
pop
adc
mov
jnp
addl
xchg
adc
je
dec
mov
add
cwtl
cmp
mov
daa
into
mov
sbb
fadd
add
ljmp
nop
mov
and
orb
loopne
jne
xchg
ret
loope
push
imul
jns
in
xor
ljmp
jb
xchg
push
fisttps
xchg
mov
sbb
and
sarb
xor
jle
out
push
outsb
aad
pop
movnti
and
pop
ret
data16
mov
sub
adc
scas
add
jl
adc
jbe
shrb
xlat
adc
pusha
push
into
sbb
xchg
and
fs
add
faddp
xchg
repnz
clc
jecxz
lock
fldl
mov
ss
add
data16
adc
in
shll
pop
movswl
add
inc
aaa
mov
mov
cmp
in
mov
scas
aad
sub
mov
pop
sub
pop
jl
dec
subl
push
jp
sub
test
sbb
add
clc
orl
cmp
cmp
xchg
jp
ss
pop
lods
add
and
loopne
add
inc
repz
cmc
aad
xor
sub
aas
mov
sub
sub
aam
push
sbb
jo
cmp
cmp
cmp
adc
pop
scas
bound
mov
push
mov
push
pop
jle
imulb
movsb
test
xor
lods
shrb
cmp
cmp
lods
mov
test
popa
sub
stc
add
push
int3
sub
pop
cs
dec
jp
and
adc
cld
mov
cmp
sbbl
mov
push
test
dec
arpl
mov
sub
adc
popl
mov
mov
inc
cld
mov
and
loope
mov
push
mov
or
js
dec
pop
dec
dec
pushf
lds
cwtl
lods
mov
nop
daa
and
pusha
mov
cwtl
dec
cld
pop
inc
pop
dec
sub
stc
andb
daa
cmp
sub
lods
add
and
int
xchg
int
test
cmpsl
stc
xor
xchg
out
mov
out
sahf
push
xchg
cmp
shrb
push
je
iret
repz
push
lea
adc
add
mov
sbb
addb
and
push
shll
mov
iret
mov
adc
xor
or
xchg
adc
inc
cmp
add
repnz
fscale
adc
xor
mov
adc
sbb
mov
jb
mov
out
test
dec
enter
ret
adc
dec
adc
ret
mov
pusha
add
xchg
and
loopne
jmp
jmp
mov
inc
push
xor
sub
nop
push
pop
inc
xor
add
inc
mov
pop
dec
cmp
add
test
stos
mov
xorl
or
adc
cmpsb
out
jne
orb
in
inc
gs
add
add
cmpb
push
ds
pop
inc
ret
imul
xor
inc
xor
jmp
insb
cmp
and
cltd
and
jbe
shld
movsb
insl
jmp
mov
pop
or
cmp
add
fwait
ret
rcrb
push
xlat
insb
loopne
rolb
je
pop
leave
nop
pusha
cmpsl
pop
or
cmp
push
arpl
test
adc
xchg
mov
jg
dec
jne
or
mov
add
push
pop
movsl
out
pop
and
cmp
ljmp
sub
xor
add
cmovp
xor
cmp
inc
pop
fidivrl
and
sbb
jl
scas
dec
pusha
mov
adc
lods
push
dec
test
nop
cmp
sub
inc
dec
sbb
lahf
inc
fiadds
push
jg
add
rolb
mov
push
sub
pop
dec
pop
or
dec
repnz
es
xchg
fs
dec
jo
scas
and
adc
mov
add
xor
jb
lea
adc
pop
in
lcall
mov
fwait
add
fdivrl
es
addb
cwtl
xchg
jl
fisubs
aam
dec
imul
loopne
push
jle
dec
mov
and
test
je
cmp
push
or
inc
xor
push
orl
or
or
js
pop
orb
in
add
adcb
les
mov
sub
je
mov
push
add
jbe
js
mov
push
mov
fidivrl
out
jge
lods
xchg
daa
or
in
fwait
and
aam
lcall
fadd
sbb
divb
push
pop
or
ja
sub
in
xor
or
and
pop
and
loopne
repnz
cmpsb
dec
iret
xchg
pop
jmp
pop
or
mov
lahf
xchg
js
push
sahf
mov
scas
add
ret
in
dec
and
add
or
or
sub
cmc
fldl
or
xchg
mov
sub
mov
and
hlt
or
sub
fistpl
lea
test
out
enter
xor
dec
sbb
test
sbb
jle
jne
add
cmp
mov
dec
jne
xor
pop
adc
jbe
mov
cmp
and
pop
into
nop
jae
fisubs
dec
push
imulb
ja
xor
mov
push
mov
hlt
js
inc
mov
push
sbb
sub
jo
mov
mov
pushf
pop
xchg
faddl
adc
mov
adc
or
dec
sub
push
jg
je
cmp
jne
mov
icebp
test
pop
push
fstl
repnz
push
lcall
clc
mov
ret
push
xor
xor
sbb
add
sarb
or
xchg
push
jnp
lods
pop
ficoml
sahf
inc
lods
movsb
or
or
insb
ss
in
sbb
add
dec
inc
dec
mov
addb
rol
scas
fs
or
movsb
shlb
inc
inc
scas
cltd
inc
andl
in
loopne
cmp
cmp
jno
mov
dec
inc
lock
mov
insb
movsb
in
inc
loop
xlat
jne
mov
inc
insb
cmp
scas
adcl
sub
lcall
cmp
push
adc
jmp
das
mov
pusha
push
add
push
insl
adc
int3
dec
add
adc
sbb
push
or
cmp
addb
iret
nop
sbb
sbb
and
shl
daa
mov
dec
je
add
dec
xlat
inc
cmp
cmp
xchg
je
and
push
and
sub
inc
push
xchg
lods
test
xchg
fs
sar
sbb
addr16
out
iret
xchg
fcom
sti
and
out
lea
lods
addr16
inc
mov
es
cld
aas
mov
mov
sti
incl
mov
fcoml
push
mov
mov
loopne
imul
or
rolb
bound
inc
inc
test
loopne
lea
pop
inc
cli
fisubrs
push
mov
mov
push
jnp
pop
adc
and
cmp
inc
negb
pop
data16
andb
rcl
jns
nop
js
cmp
cmp
adc
cs
lret
adc
idivl
pop
fwait
sbbb
cmp
je
adc
or
adc
out
lods
xchg
fcompl
das
dec
mov
aaa
lock
add
mov
ljmp
rolb
repz
sbb
push
test
add
daa
ret
scas
popf
mov
xor
lock
rcll
divb
adc
and
mov
or
and
mov
lods
mov
adcl
jns
mov
pop
mov
inc
cmpsb
daa
sbb
adc
pushf
mov
mov
iret
int
call
cmp
mov
adc
dec
jae
and
push
pop
mov
mov
into
lahf
push
sbb
lahf
inc
sbb
addl
sub
pop
pop
push
pusha
sub
movsb
decb
or
punpckhbw
and
out
inc
mov
push
lds
outsl
dec
xchg
push
inc
scas
xchg
fiadds
sbb
cmp
push
daa
pop
movsl
iret
cmp
sbb
lods
movsl
dec
or
dec
jo
lods
push
mov
stos
inc
sbb
jno
xchg
push
mov
dec
cmp
insb
nop
ret
inc
dec
jb
sbb
mov
in
popf
fcoml
pusha
fldl
push
in
enter
std
mov
mov
jge
xchg
nop
adc
and
data16
pop
push
repz
es
sbb
in
outsl
imul
or
mov
mov
cmp
xor
in
aaa
cmpsl
add
aam
pop
insb
data16
inc
push
loopne
jns
sub
cmp
xlat
jmp
xor
repz
mov
adcb
je
push
dec
adc
enter
aas
adc
adc
std
mov
clc
call
push
adcl
stc
cwtl
sub
std
sub
outsb
popf
aad
ret
and
cmp
inc
lea
xor
cmp
les
add
xor
sub
sub
sub
jae
xor
jo
jmp
imul
push
add
cmovne
xor
imul
mov
rcrb
bound
jp
adc
mov
inc
cs
xor
pushf
scas
xor
sbb
mov
sbb
and
mov
sub
cmp
loop
js
and
mov
out
imul
into
sbb
jle
sbb
push
add
dec
cmp
push
out
xchg
test
cmp
sbb
sub
lock
andl
popf
push
add
cwtl
add
and
push
mov
inc
sbb
scas
cmp
adc
push
mov
cltd
and
scas
sarl
test
es
xor
mov
rclb
mov
sub
scas
jmp
insl
adc
das
mov
sahf
movsl
lcall
mov
repz
mov
and
cmp
jae
mov
stc
mov
outsl
push
push
jnp
jns
pop
fs
sahf
lods
push
inc
xchg
add
and
push
push
mov
or
push
dec
pop
mov
test
xor
cli
mov
inc
inc
pop
dec
xor
push
inc
pop
fnclex
cmp
sub
enter
das
pop
outsb
cli
jns
sbb
out
and
cmp
enter
mov
rcr
fcomps
xchg
and
jno
cmpsl
xor
lcall
jb
inc
fs
std
je
xchg
clc
adc
or
mov
and
mov
leave
je
and
mov
movsl
fmuls
xchg
cmp
roll
dec
leave
lods
jl
mov
orb
mov
rol
xor
ret
pop
mov
imul
cmpsb
pop
popa
sahf
out
sahf
jbe
lcall
jl
cmpsl
push
imul
stos
mov
aas
adc
fcompl
pop
and
pushf
xor
lock
popa
in
out
lea
outsl
imul
lods
add
iret
fstps
jge
push
inc
rorb
push
or
push
lea
push
cmp
fucompp
jp
test
pop
dec
push
xor
add
lods
shrl
sub
cmc
test
mov
and
or
pushf
xor
test
xchg
das
adc
add
or
pusha
and
dec
inc
add
pop
pusha
jecxz
adc
push
xchg
push
mov
push
out
mov
sbb
or
out
and
or
mov
inc
jb
iret
cld
insb
push
xor
inc
push
stos
or
mov
fs
es
adc
adc
adc
inc
xchg
test
test
push
sub
leave
add
call
lea
and
inc
add
xchg
pop
repz
add
push
adc
imul
adc
adc
xchg
dec
dec
pop
pop
and
xchg
das
push
xchg
cmp
add
das
es
dec
xchg
popa
and
and
adc
lea
test
dec
mov
xchg
pushf
je
or
add
mov
mov
or
push
sbb
lds
leave
pop
sbb
arpl
pop
add
rol
fcmovnu
add
cmp
sbb
mov
xchg
test
cwtl
inc
mov
nop
or
mov
filds
mov
jae
mov
cmp
push
cmc
xchg
pop
int3
adc
or
mov
or
mov
mov
fstl
fists
mov
sbb
adcl
ret
xor
jno
add
pop
dec
lret
shrl
dec
mov
bound
xchg
add
je
xchg
mov
pop
xchg
movl
cmp
and
inc
movsb
add
fwait
mov
jnp
imul
or
das
xchg
lret
ja
pop
fsubr
fsubs
sub
mov
jb
cs
call
loopne
sbb
mov
dec
and
pop
xchg
xchg
sub
and
xor
lcall
cmp
shll
les
sub
push
xor
mov
inc
xor
movsb
mov
push
mov
fdivrs
add
sbb
cmp
bound
xor
sbb
mov
pop
sbb
and
adc
pushf
in
mov
and
dec
xchg
nop
and
and
xchg
inc
xchg
and
push
stos
sbb
sbb
mov
push
mov
in
adc
and
aas
fisubrs
outsb
pushf
xchg
les
cmp
ss
and
cltd
mov
dec
jecxz
imul
xor
dec
mov
mov
add
fimull
mov
scas
lock
rcrb
sub
dec
insl
add
sub
xchg
ss
or
add
mov
push
add
cmp
faddl
push
pop
jp
mov
cmp
push
les
pop
cmp
jae
add
cmp
mov
js
inc
xchg
popa
jecxz
jo
mov
mov
and
mov
outsl
or
jnp
dec
add
push
jge,pn
mov
mov
push
jnp
outsb
and
or
sbb
adc
subb
int3
dec
popf
fs
adc
and
mov
fimuls
mov
dec
in
or
push
outsl
dec
pop
push
jmp
jns
js
or
pop
fnstenv
les
add
pop
scas
xor
clc
ja
aad
pop
arpl
push
pop
nop
je
jg
iret
push
add
and
dec
pop
pop
in
jg
nop
mov
call
test
sarb
mov
fs
inc
jmp
repz
inc
pop
inc
cmp
lea
add
or
incb
mov
call
sbb
pop
mov
in
enter
ja
or
in
lods
sar
add
rcrb
jle
hlt
xchg
test
pop
cli
data16
or
flds
ss
dec
repz
rolb
dec
pop
aad
add
push
sbb
push
add
sub
xor
shlb
insb
push
sbb
icebp
movaps
dec
imul
imul
xchg
ja
insl
push
bound
push
adc
jne
std
in
jo
mov
popa
cmp
adc
je
inc
loopne
lods
aad
outsl
call
js
out
outsl
dec
xor
push
dec
push
add
jae
lds
jmp
pop
cli
enter
sar
sar
sub
sub
ret
sbb
push
and
pusha
pop
or
pop
xor
and
push
and
push
sbb
sbb
pusha
mov
inc
add
and
sub
jmp
dec
in
mov
inc
dec
push
and
or
data16
jmp
pop
adc
push
jb
xor
lods
mov
sub
ffree
mov
pop
clc
ret
or
mov
adc
inc
ds
pop
mov
lcall
push
add
lods
mov
test
xor
enter
cmpsl
pop
ret
adc
pop
push
mov
inc
leave
insb
inc
sbb
and
pushl
dec
cmp
adc
jne
sbb
and
xor
adc
mov
test
jnp
dec
dec
insb
xchg
adc
mov
js
lret
ds
adcb
mov
pop
popa
and
icebp
xchg
inc
and
hlt
ret
pop
push
shl
adc
pop
iret
push
xor
push
sub
mov
in
push
inc
sbb
nop
dec
loopne
ret
out
std
popf
ret
mov
aam
push
jg
adc
outsl
pusha
mov
imul
je
jb
stos
aaa
pop
pop
adc
inc
pop
test
cmp
add
cmp
dec
cmp
push
mov
inc
ret
xor
inc
inc
jmp
cmp
adc
or
pop
jmp
push
mov
orb
cltd
dec
lcall
pusha
inc
mov
pusha
sub
rorb
addb
mov
xchg
add
inc
add
rclb
inc
mov
sub
notb
stc
jns
mov
and
push
push
call
inc
es
data16
push
jb
and
fstpl
add
sbb
test
pop
jle
stos
dec
jl
or
adc
sub
pusha
fs
jl
lret
and
icebp
popa
repz
mov
push
jg
cmpsb
imul
lcall
xorl
inc
inc
push
and
test
sbbb
push
mov
int3
add
mov
fwait
dec
xor
fs
add
or
dec
pop
loope
jg
mov
cld
sub
mov
loope
flds
cmp
jg
jl
mov
xchg
sar
or
pop
dec
enter
jle
imul
cs
and
mov
inc
xor
and
sub
in
orb
mov
cmpsl
add
fiadds
out
inc
jb
sbb
add
mov
and
or
ljmp
mov
sbb
mov
fs
cs
push
lret
and
or
out
jle
xlat
mov
ret
stos
push
dec
dec
push
pop
pushf
push
daa
xor
add
mov
pop
and
call
daa
movsl
jo
stos
in
daa
daa
das
xor
adc
and
xor
cld
in
mov
xchg
jle
es
data16
xor
inc
mov
push
cmp
popa
cld
add
mov
jb
inc
adc
loopne
test
and
xor
test
push
fstl
cmp
bound
push
add
cld
in
sub
lahf
cltd
lock
mov
shlb
out
mov
in
inc
scas
add
shll
inc
inc
push
push
in
sbbl
fadd
bound
xor
or
mov
cmpsb
fnstenv
cmpl
in
jno
xchg
push
mov
mov
sbb
enter
and
and
lea
mov
mov
pop
je
add
test
push
je
cmp
dec
shrb
pop
bound
js
loop
pop
push
adc
rcll
cmp
push
insl
mov
mov
lea
mov
and
jno
dec
popa
adc
push
sbb
ret
mov
test
jb
dec
mov
jns
pop
rcrl
sbb
add
jo
or
sub
das
and
dec
je
push
and
jne
mov
fmuls
sub
add
adc
push
rolb
fldl
push
orl
push
faddl
dec
aad
xchg
mov
push
push
jns
push
out
imul
inc
and
mov
cmp
dec
dec
adc
jmp
mov
cmp
leave
enter
adc
lods
fucomi
xchg
sub
loopne
adc
mov
push
inc
shlb
and
sbb
sbb
mov
adc
mov
pusha
push
xor
mov
or
pop
push
leave
xchg
mov
add
mov
pop
mov
push
add
pusha
jbe
adc
mov
push
scas
cmpsl
fstl
add
adc
xchg
dec
out
loop
or
inc
sbb
adc
pop
jbe
xchg
cli
pop
js
push
scas
cmp
adc
adc
cmpsl
popa
loope
enter
pop
xchg
dec
sub
je
sahf
loopne
lods
or
fldenv
les
cmpsl
pop
jb
mov
pop
mov
popa
test
das
push
adc
loop
and
cmp
push
je
xor
inc
cmc
adc
ds
mov
xchg
xor
lcall
mov
jns
jnp
pop
mov
lock
cmpsb
xchg
jne
iret
adc
in
inc
call
sub
sarl
inc
pop
mov
adcl
shlb
loopne
and
mov
and
push
dec
dec
jne
and
jo,pt
jno
push
fs
add
loope
or
sub
cmpsb
sbb
das
cli
and
cmp
cli
fldt
mov
add
push
or
pushf
push
xchg
nop
inc
xor
inc
or
sbb
nop
jno
in
or
push
adc
in
inc
xor
adc
push
icebp
add
mov
and
mov
jno
sbb
push
fdivs
insl
hlt
outsl
sbb
or
push
adc
xchg
mov
or
and
or
and
or
cmpsl
lods
das
dec
mov
cmc
xchg
mov
or
and
mov
iret
popf
insl
adc
movsl
and
cmpsl
or
xchg
sbb
inc
ret
std
mov
mov
mov
push
leave
mov
inc
add
pop
out
add
mov
mov
aam
mov
dec
lcall
cmp
mov
dec
xor
les
and
jne
nop
jbe
add
adc
into
xor
out
xor
lods
les
xchg
test
es
mov
sub
loop
mov
and
nop
and
cmp
insb
push
pop
fstps
dec
pop
clc
mov
nop
subb
aas
std
mov
ss
fwait
xorl
mov
mov
mov
gs
cmp
fcmovnb
and
add
sbb
and
and
addr16
call
pop
stc
push
pop
xchg
call
add
sbb
sbbb
push
adc
js
push
adc
aas
rolb
icebp
pop
mov
es
test
sbb
mov
jmp
and
fisttps
push
aas
jae
pop
cmp
cmp
sub
fcomps
jg
or
or
cmp
jle
dec
sub
or
pop
add
cmpsb
inc
lret
adc
cmp
add
or
xchg
enter
mov
int3
daa
dec
cmpsb
sub
js
add
and
in
popl
lods
or
mov
add
or
sbb
arpl
and
orb
sar
add
inc
inc
add
dec
dec
sub
lea
inc
cli
lds
idivl
mov
inc
adc
in
mov
dec
repnz
fiadds
ds
pop
dec
sub
or
in
loopne
out
dec
sub
loope
jl
or
sub
add
add
ret
scas
inc
out
and
stos
mov
sbb
and
cmovbe
rorb
mov
in
pusha
mov
mov
mov
cmp
jle
add
cmp
ja
sbb
inc
sbb
imul
inc
imul
cmp
add
pop
cmp
pop
lea
insb
push
push
and
inc
data16
push
test
or
pop
xchg
mov
jae
sbb
sbb
movsl
mov
sub
pop
dec
sbb
or
pop
pop
mov
xchg
push
inc
out
call
movsb
jne
pop
inc
push
xlat
pop
sbbl
xor
mov
xor
jns
lds
cmp
push
push
xchg
push
push
jne
mov
xlat
std
pop
add
cmp
fldcw
shll
and
jo
sub
sub
cmp
js
sbb
lcall
stos
xchg
adc
das
movsl
sbb
dec
cli
cld
jae
js
mov
mov
dec
cmp
icebp
adc
sub
adc
or
push
push
push
pop
push
adcb
dec
add
add
push
push
push
pop
add
pop
outsb
mov
int
push
roll
or
mov
sbb
je
add
add
and
lock
addb
pop
pop
jne
testl
dec
jne
testb
aas
mov
inc
mov
in
es
and
and
dec
sbb
movsl
lret
jo
clc
inc
sbb
dec
mov
xor
xchg
mov
add
sarb
filds
jl
jno
jmp
dec
adc
lds
imul
pop
cmp
xorb
pop
mov
repz
loopne
insl
xorl
cmpsb
scas
lods
daa
mov
aad
mov
sub
mov
fld
adc
add
push
test
adc
ljmp
jle
movsb
sbb
and
inc
add
sbb
jno
std
sbb
test
pop
xchg
sbb
sbb
or
push
sbb
enter
sub
insb
lods
je
jle
or
mov
xchg
xchg
dec
popf
or
xchg
mov
dec
sub
mov
out
xor
xor
dec
push
push
mov
add
rcrb
in
push
add
mov
pop
sbb
out
js
movl
out
mov
cmp
jne
jno
sub
jp
sbb
and
mov
push
push
xchg
add
cli
push
mov
jns
lahf
xor
call
lea
push
and
negb
rclb
mov
aam
movsl
jge
cmp
sahf
inc
je
mov
push
and
or
sub
popa
lds
push
push
or
push
cmpsb
push
lock
loopne
add
sub
movsb
roll
je
sub
or
shll
leave
pop
jecxz
add
xor
js
sti
xchg
jmp
cmpsl
cmp
jb
cmp
fstl
pop
or
inc
in
push
pop
stos
adc
mov
push
or
andb
arpl
jo
ret
cltd
sub
test
subl
inc
adc
jmp
sbb
mov
and
imul
fmuls
push
movsb
push
cmpps
lds
pusha
insb
mov
push
pop
and
dec
xor
xchg
inc
dec
ss
cmp
or
jne
stos
pop
xchg
lds
push
inc
mov
stos
subl
pop
lods
push
icebp
add
inc
fistps
inc
dec
jbe
rcll
mov
cmp
rcr
ja
sub
je
push
mov
mov
das
movsl
in
adc
xlat
lock
cli
jle
lret
pop
jbe
sbb
pop
cmp
xchg
mov
icebp
int
inc
jmp
and
sub
jmp
xchg
fcoms
sbb
loope
pop
jo
daa
inc
sbb
mov
or
add
or
in
inc
sarl
sahf
adc
sbb
ret
leave
test
fisttpll
push
arpl
mov
dec
add
rcr
push
cmc
add
dec
cmpsb
and
pop
cmpsb
fstl
push
dec
ljmp
pop
hlt
xchg
sahf
test
sub
add
xlat
sub
adc
or
or
xor
sbb
add
add
xor
jecxz
clc
add
orl
mov
jb
xchg
ds
mov
xor
sub
jp
pop
sub
movsl
mov
push
jne
dec
and
adc
pop
mov
mov
xchg
iret
adc
cmp
in
rcrb
inc
cli
cmp
jle
lret
push
xlat
or
sub
cwtl
push
enter
scas
fmull
cmp
cltd
test
push
inc
add
adc
jle
or
mov
dec
adc
mov
cmp
push
dec
stos
pop
jno
add
and
jmp
in
and
clc
push
out
cmp
or
orb
or
pop
call
inc
push
cmp
jmp
testl
cwtl
mov
push
adcl
sbb
loop
loopne
cli
add
or
dec
loop
mov
jl
xor
or
jle
inc
jl
adc
jne
loopne
mov
cwtl
sti
adc
and
xor
repz
test
cmp
bound
cmp
imul
sahf
adc
es
nop
add
shl
test
xor
cwtl
je
dec
sbb
add
pop
xor
inc
out
lea
add
add
xchg
adc
add
lods
cmp
ficomps
jmp
or
ds
cmp
adc
jne
stos
adc
adc
xor
dec
fstpl
push
cs
and
fadd
shrb
fstl
clc
mov
jg
mov
adc
cmp
xchg
inc
add
pop
dec
xchg
ss
push
movsb
lock
push
push
xchg
inc
repz
icebp
pop
jmp
repz
iret
inc
iret
sbb
push
cmp
addl
sbb
or
mov
pop
adcl
push
sub
sti
nop
sbb
in
mov
call
insb
push
outsb
les
pushf
fimuls
cltd
jmp
das
or
test
jmp
mov
adc
mov
jmp
or
xor
add
xchg
sub
xchg
lcall
sti
push
add
fsubrs
mov
mov
lea
mov
sub
mov
int
addl
cs
cmp
popf
ret
mov
or
sbb
sub
dec
xor
test
and
push
daa
fstps
test
mov
cs
lods
cmpsl
add
add
or
mov
push
add
push
jl
inc
sbb
mov
mov
or
pop
pop
push
xor
dec
pop
push
pusha
mov
cli
cmp
add
into
gs
push
dec
mov
test
dec
inc
std
mov
mov
jne
jmp
lret
out
jbe
test
add
mov
add
xchg
xchg
in
inc
aaa
test
nop
fildl
cli
sub
add
cmp
out
and
cmp
stc
sbb
sub
out
aaa
mov
flds
call
stos
repnz
dec
subb
dec
xor
inc
sub
test
nop
sbb
pushf
ss
sbb
xor
mov
lahf
mov
push
jge
mov
inc
and
nop
arpl
mov
pop
xchg
add
std
lret
or
test
mov
mov
popa
mov
add
and
adcl
sbb
fstl
cmpl
call
xchg
inc
or
sbbb
push
and
add
mov
test
push
or
add
add
mov
sub
mov
add
outsl
ljmp
cli
push
mov
sbb
fs
pop
es
cmp
dec
push
cs
push
inc
inc
inc
sub
sbb
cmpsl
adcb
aam
xor
push
cmp
sub
add
xor
loop
or
test
jo
dec
push
leave
fs
fiaddl
das
xor
xor
or
jnp
pop
iret
es
dec
or
and
jp
ret
je
or
fwait
jne
adc
mov
mov
add
clc
mov
mov
mov
or
mov
test
mov
or
pop
dec
jmp
loopne
fadd
push
test
fucomp
add
loope
add
dec
clc
or
jbe
and
dec
xor
aaa
jo
or
xor
loope
xor
jae
icebp
cs
jl
mov
movsl
int
and
inc
and
jo
insb
popf
addb
scas
cld
adc
xchg
cmp
dec
icebp
lods
or
inc
pop
or
push
add
inc
inc
roll
insl
pop
in
adc
sbb
push
xlat
das
rolb
mov
addr16
mov
pop
dec
cmp
dec
add
sub
and
stos
dec
xchg
test
inc
inc
mov
dec
sub
or
sub
push
orb
dec
js
aaa
pop
mov
jle
sub
addr16
into
les
add
xchg
fs
mov
cmp
sub
aaa
cmovno
sub
out
and
int
rclb
add
mov
add
dec
jns
sbb
mov
fwait
scas
mov
jp
negb
sbb
mull
adc
sahf
push
add
scas
mov
xchg
xor
sti
pop
mov
sub
shll
sbbl
loop
mov
mov
add
lock
and
inc
jmp
sub
pop
dec
jmp
or
mov
push
js
adcb
add
sbb
cmp
nop
sub
js
xor
ret
pop
sbb
dec
push
sti
dec
add
movsl
adcl
xor
or
cmp
sub
mov
pop
adc
orl
add
dec
push
inc
add
movb
movb
mov
rclb
cmp
xlat
add
or
jne
push
or
pop
add
loopne
xor
mov
outsl
xchg
mov
dec
or
pop
pop
sub
ljmp
dec
xchg
jo
movsb
sub
xor
cmp
pusha
jl
dec
add
pop
push
shl
mov
sbb
test
push
add
test
jmp
mov
push
adc
out
sub
xchg
jg
sbb
bound
sbb
mov
adc
sub
cmp
push
push
inc
inc
dec
lcall
inc
ret
or
add
jle
dec
js
push
xorb
jmp
lret
inc
and
adc
pop
ret
int3
push
pushf
adc
and
push
mov
outsb
and
pop
and
js
mov
mov
insl
scas
mov
mov
adcl
xchg
xor
dec
cwtl
sbb
mov
call
xchg
sbb
mov
fidivrl
sbb
push
pop
mov
mov
loopne
scas
mov
int3
aam
push
and
shll
cmpl
push
and
inc
add
pop
cwtl
les
mov
mov
aas
aam
sub
mov
popf
test
ret
sarl
loopne
xlat
test
dec
std
lret
mov
lcall
test
fwait
gs
jp
lret
push
rorl
or
in
and
loopne
call
ds
outsb
in
xchg
pop
data16
sub
cmp
lods
pop
sub
xchg
addr16
push
int3
add
sbb
jmp
notb
out
nop
loop
xchg
mov
and
jmp
pushl
push
cmp
movl
xor
rcrb
inc
and
cmc
push
clc
fcmovb
nop
les
adc
aam
push
int3
outsl
pop
sub
rcl
gs
in
mov
sub
mov
inc
in
loop
fs
shlb
adc
xchg
imulb
outsb
fsub
add
insb
sbb
imul
push
jle
mov
add
add
jp
or
jae
xchg
outsb
nop
ds
hlt
fs
sbb
jns
xor
mov
aam
add
add
or
enter
and
into
adc
adc
jmp
cmpsl
stos
aas
xor
sbb
inc
pop
sahf
lret
pop
scas
aam
or
push
push
aam
sbbl
jle
sub
mov
jne
cmp
jmp
push
mov
push
js,pt
and
sti
outsb
ja
scas
repnz
lcall
les
into
dec
shll
hlt
add
ret
adc
and
loop
popf
or
call
and
sbb
cmp
pop
int3
cmp
xor
enter
ret
push
int3
adc
ss
les
movsb
and
testb
jns
pop
adc
xchg
inc
add
push
push
push
lods
stos
repz
adc
scas
sub
ja
push
xchg
arpl
sbb
arpl
cmp
adc
pop
xchg
xlat
xorb
movl
jne
and
push
dec
xchg
pop
pop
repnz
aas
add
clc
bound
and
inc
arpl
inc
shlb
push
add
mov
shrl
cmp
xor
test
pushf
jb
mov
dec
lods
mov
int3
popf
push
adc
fstps
pop
ja
xchg
cmp
dec
in
pop
cmp
pop
mov
inc
sub
or
sub
out
inc
fwait
lods
lods
xchg
mov
push
scas
inc
jge
and
clc
pusha
pop
mov
je
sbb
lods
lret
push
add
cmp
jbe
adc
pop
in
dec
stos
inc
pop
mov
addb
add
in
sub
mov
ret
cmp
sbb
mov
and
stc
loopne
cli
or
sbb
mov
loope
cmp
or
outsl
arpl
mov
inc
cmp
push
pop
mov
xchg
jg
sub
pop
jo
sbbb
add
and
add
or
and
xor
add
push
cmpsl
and
xchg
test
andb
add
mov
cltd
pop
dec
xor
fcmovnu
loopne
add
ret
xor
cmp
popa
push
test
adc
inc
add
nop
insl
incl
or
add
push
ret
xor
mov
inc
pop
cmp
adc
icebp
cmp
jb
or
dec
pop
mov
int3
sub
adc
adc
xlat
iret
jnp
das
sub
or
dec
sahf
lret
and
adc
cmc
cmp
pushf
orb
insl
cmp
test
sbb
imul
mov
cmp
adc
ja
sub
dec
enter
daa
add
inc
flds
push
sarl
or
inc
inc
add
test
andb
adc
pop
inc
pop
pop
rcrl
pushf
pop
repnz
jg
jb
lcall
dec
mov
sbb
cmp
and
dec
sbb
cmp
or
fcompl
rcl
and
and
or
inc
jb
mov
cltd
mov
pop
mov
push
mov
mov
push
fcoml
pop
cmp
pop
mov
xchg
ret
adc
push
aas
subl
cmp
xor
ljmp
outsb
dec
jne
mov
mov
cmp
jne
cmp
jne
es
int
push
xorb
or
adc
push
jle
mov
or
inc
lea
jg
pop
cs
add
sub
in
fldl
stos
call
fyl2x
fstpl
fbstp
xor
mov
xor
jmp
sub
movsbl
mov
fmull
popa
add
jo
lock
push
es
cmp
mov
cli
fstpl
flds
fabs
dec
fdivl
jmp
in
iret
xchg
fmull
fcoml
inc
push
or
inc
push
adc
mov
dec
js
ret
imul
mov
mov
out
popa
xchg
sbb
loopne
not
pop
add
push
push
pop
xor
mov
pop
inc
dec
sub
jle
pop
cmp
fdivrp
faddl
adc
mov
nop
mov
hlt
sbb
out
sbb
insl
dec
sub
or
mov
cmp
bound
and
or
add
cmp
cwtl
push
jo
add
rorl
push
gs
mov
lret
or
aas
cmp
enter
jo
sbb
ret
insb
fdivs
mov
jmp
sti
or
bnd
inc
inc
xchg
inc
and
imul
lahf
rcl
mov
bound
out
add
jp
pop
repnz
fs
jb
sbb
xor
pop
sub
in
sahf
adc
xchg
notb
mov
movsl
and
mov
dec
lock
in
adc
out
sub
cmp
push
adc
push
jecxz
pop
shlb
sahf
lea
push
push
pop
cmp
pusha
sub
xor
sbb
pushf
pusha
xor
and
fs
xor
fcomip
xchg
add
lret
lods
inc
ret
pop
and
add
orb
roll
mov
inc
mov
in
call
aam
and
cmp
jne
ds
cmp
je
push
push
in
dec
pop
mov
lock
out
out
subb
and
add
test
lcall
clc
std
mov
outsl
push
jmp
cmp
iret
pop
or
cmp
and
daa
push
jne
lret
jmp
insl
lods
fstps
mov
rcrb
cmp
push
dec
sub
movsl
sahf
dec
lcall
push
xor
adc
adc
add
pushf
sub
and
imul
jo
add
add
sbb
sub
mov
jb
or
sbb
push
push
orb
pop
ljmp
aam
sarb
jle
pop
je
dec
das
je
or
outsb
mov
scas
or
je
xchg
icebp
add
fs
les
fbld
inc
mov
push
iret
xchg
jecxz
dec
add
mov
push
and
sbb
ret
or
jmp
ret
xorb
iret
mov
into
out
imull
dec
dec
push
jle
iret
xor
das
sub
mov
enter
imul
in
testb
jae
repnz
adc
add
lret
dec
in
push
and
and
mov
and
int
mov
add
or
and
sbb
pop
adc
in
mov
test
mov
xor
repnz
sub
and
sub
pop
xor
sub
xchg
add
mov
jne
cmp
jne
add
mov
xchg
push
push
sbb
jns
mov
jg
jl
cmp
jne
and
icebp
jne
hlt
pop
rcrb
push
out
xchg
mov
inc
sbb
movsb
xchg
cmp
adc
sbb
mov
add
ret
gs
loop
mov
mov
fildll
cmpb
ret
fs
lahf
rclb
fdivrl
loope
mov
dec
sub
inc
leave
add
pop
stos
ret
movsb
shlb
call
sbb
pop
push
mov
lods
xor
cli
or
push
pop
and
jo
push
rcrb
cmp
mov
adc
adc
out
pop
pop
pop
pop
pop
aam
inc
lea
int
lcall
jne
cmp
jne
mov
ret
cmp
or
out
cld
outsl
incl
pop
out
jne
mov
ret
mov
jbe
cmp
jae
mov
sub
jg
xor
and
dec
in
and
jmp
or
repz
jg
or
or
push
add
adc
push
call
pop
test
lret
cmp
jle
xchg
repnz
mov
push
loopne
and
jg
js
and
cmp
mov
push
add
sub
sbb
inc
mov
add
test
mov
std
imul
rcr
mov
lea
test
push
test
into
xchg
bound
add
out
or
aam
cmp
xchg
cli
add
xchg
mov
in
push
sbb
pop
popf
daa
mov
mov
jno
sub
insl
cmp
jbe
cmc
or
cmp
or
cmp
inc
add
call
les
pusha
pop
cwtl
js
cmc
dec
inc
cmp
inc
dec
sarb
cmp
jle
adc
push
push
push
sub
les
lock
and
test
testl
adc
inc
xchg
cwtl
and
fcoml
pop
sub
dec
dec
jmp
dec
jle
stos
sbb
jne
lods
pushf
mov
ljmp
dec
sub
les
scas
add
sub
push
sub
and
jne
out
sub
jge
stos
or
xor
push
lock
cmp
iret
xchg
cltd
rclb
push
loope
cwtl
subl
or
xchg
pop
mov
movsb
addr16
or
jne
and
add
jg
xchg
mov
cmpsl
jne
cli
dec
cmpsb
pushf
jne
outsb
push
aad
xchg
pop
or
dec
mov
aam
push
cmp
les
or
push
inc
jmp
push
push
mov
add
lds
mov
clc
nop
xchg
leave
sub
loope
mov
rcrl
ljmp
sar
sets
dec
jle
or
pop
pop
cli
mov
int3
push
cmp
ds
sub
jp
or
pop
fs
inc
and
mov
pop
imul
sbb
or
add
xchg
outsl
aaa
push
dec
mov
enter
xor
sarb
ffreep
movl
sarl
push
jl
jnp
sub
inc
jg
cmp
xchg
cmp
je
ja
je
nop
push
push
cld
pop
or
or
sbb
jmp
leave
inc
and
dec
dec
in
lock
icebp
xchg
mov
into
push
icebp
or
daa
decl
push
outsl
shlb
jmp
adc
or
or
faddp
jl
jmp
fisttps
aam
or
and
scas
xor
lock
pop
mov
push
or
insb
dec
adc
lock
fstpt
out
je
or
repnz
lret
xor
ficoml
push
dec
adc
jg
push
dec
hlt
ss
or
cmp
rcl
push
push
out
lods
sbb
push
rcrb
sub
test
jb
int
pusha
jmp
mov
aas
add
add
xchg
push
add
push
adc
out
xor
ret
mov
add
push
clc
es
test
add
syscall
or
lahf
push
xor
or
cmpsb
add
cmpsb
mov
add
jbe,pn
push
pop
push
cmc
jb
dec
push
or
imul
or
movsb
mov
sub
ficomps
xchg
push
rcrb
push
pop
add
xor
pop
je
mov
cmp
out
sahf
addr16
push
dec
pop
pop
push
movsb
push
inc
aas
test
pop
decl
dec
jo
push
cmp
mov
rclb
stos
xchg
test
and
daa
jmp
pop
cmp
jae
or
mov
call
xor
push
mov
mov
sub
int
add
dec
pop
push
iret
push
mov
mov
rcll
pusha
adc
adc
or
add
or
or
push
mov
and
add
sub
mov
or
sub
adc
lock
lds
add
sbb
add
in
mov
or
xor
pop
lods
es
pop
pop
mov
scas
adc
xchg
outsb
inc
add
ja
lds
cmp
cmp
aas
cmp
adc
adc
cmp
adc
loope
iret
adc
aas
dec
push
fidivs
prefetch
sub
push
add
push
lret
cmp
mov
xchg
jecxz
sub
ja
jne
cmp
push
sti
cmp
je
or
sbb
adc
out
popf
clc
push
jne
cmp
jbe
ret
cmp
or
sub
imul
adc
sahf
lret
jae
adc
adc
repnz
das
xor
daa
pop
cmpsb
cmp
mov
adc
mov
sahf
push
sbb
sub
fs
xor
push
adc
movl
lea
or
push
dec
shl
pushl
push
stos
push
jne
and
push
lea
and
dec
fcomp
dec
adc
jle
stos
stos
lea
mov
lea
mov
ja
inc
add
jbe
xchg
cs
fldt
cwtl
lret
add
fidivrs
push
sahf
push
bound
rorl
dec
mov
dec
psadbw
xor
call
movsl
movsb
push
sub
xorb
movsl
push
rcll
pop
mov
mov
xchg
jmp
cmp
sbb
fisttpl
sbb
fisttpl
pop
or
mov
movsb
dec
jecxz
bound
jbe
lahf
adc
clc
push
xor
mov
add
lods
shrl
test
mov
add
mov
jne
stos
dec
imul
stc
cmp
mov
or
push
push
push
jb
adc
adc
jbe
xchg
and
fs
sbb
mov
leave
push
lret
movsb
movb
pop
sub
out
or
fisubs
inc
inc
adc
or
xor
inc
mov
imul
subb
mov
jns
test
aaa
cltd
pop
add
daa
fsubl
push
mov
insb
mov
ret
or
push
push
test
scas
fs
mov
les
and
and
int
adc
add
and
pop
xor
aam
fistpl
mov
mov
lea
cltd
div
inc
cmp
sarl
cmovns
or
or
mov
clc
mov
push
inc
js
lock
mov
clc
push
decl
outsl
jg
jle
inc
sub
rolb
dec
jne
mov
ss
fwait
ds
jp
int
addl
filds
stc
mov
mov
push
mov
jge
jns
push
push
call
jnp
add
sbb
xor
inc
cli
out
movsb
shl
mov
subb
mov
out
push
push
inc
loope
xor
jo
add
dec
out
add
lea
jmp
lea
xor
mov
cwtl
pop
shrl
pop
mov
add
mov
push
sub
fldcw
sub
adc
or
insb
or
and
jge
lcall
pusha
rorl
cltd
push
add
pop
and
test
addb
xchg
shlb
insb
es
push
sar
leave
mov
adc
cmp
mov
int3
mov
add
jp
stos
stos
lods
xchg
lret
mov
xchg
pusha
rdpmc
dec
push
mov
inc
lock
scas
je
mov
push
mov
outsl
bound
or
ret
push
push
mov
mov
mov
out
xor
pusha
jnp
shll
pop
jle
and
lea
sbb
jmp
or
jl
cmp
add
cmp
scas
adc
xchg
jb
add
les
es
lods
mov
in
rcll
in
idivl
jmp
jle
cmpl
in
ja
push
shll
mov
out
or
vpmacswd
and
adc
sbb
mov
iret
push
dec
or
lods
pop
mov
pusha
int
aaa
mov
push
xor
mov
je
dec
adc
call
jle
mov
mov
sbb
adc
dec
jl
jge
adc
jg
jb
mov
in
mov
add
jne
sbb
outsb
inc
sbb
sub
jne
fstl
rclb
insb
clc
pop
test
push
and
pop
or
rcl
push
xor
add
test
popa
mov
add
pop
shlb
scas
enter
dec
inc
pop
loop
test
add
push
cmpl
inc
sub
cmpsl
mov
dec
dec
inc
add
and
and
xchg
mov
mov
xor
js
aaa
mov
pop
mov
push
fisubs
cltd
mov
or
push
add
jmp
popa
pop
sbb
and
xchg
mov
adc
sub
inc
data16
fsubs
sub
lret
push
inc
insb
pop
popf
xlat
add
mov
mov
inc
addl
and
sbb
mov
movsb
fs
hlt
inc
cmp
xlat
mov
cmp
loopne
jns
cs
das
adc
add
sbb
push
dec
pop
jbe
cmp
xor
adc
mov
sbb
lret
or
out
ds
xor
shlb
push
shrb
fsts
jno
add
jno
pop
lods
and
jns
push
add
les
in
jg
es
test
daa
and
lods
cld
std
push
cmpb
pop
xchg
jg
shlb
push
pop
test
repz
push
add
push
outsl
sti
pusha
sbb
ret
add
sub
test
mov
xor
gs
fists
shlb
in
dec
dec
loop
mov
dec
inc
je
incl
or
mov
sub
xchg
push
in
loop
cld
popa
sub
mov
or
jecxz
mov
sbb
mov
jb
dec
xchg
and
gs
sub
xor
jno
sbbl
cli
xchg
ret
pushf
les
clc
sub
lods
mov
cmp
es
or
and
sbb
mov
dec
test
dec
cmp
cltd
inc
adc
mov
test
dec
mov
xchg
lahf
push
push
push
dec
dec
push
pushf
sub
add
xor
enter
add
jge
xor
rcl
add
aas
rclb
arpl
shlb
add
sti
sub
sub
mov
fmull
adcb
pop
adc
xor
mul
push
subl
mov
cmp
jl
xor
inc
pop
mov
xchg
test
out
pop
cs
push
xor
xor
push
es
dec
stc
nop
mov
add
in
xor
sahf
add
sbb
adc
push
push
mov
jae
dec
jmp
xchg
and
and
or
scas
arpl
std
cmp
jge
push
push
pop
cwtl
dec
xor
and
js
mov
scas
int
fs
push
add
mov
lods
sbb
sbb
push
add
add
lret
sbb
icebp
sub
inc
push
adc
pop
xchg
add
popf
jecxz
scas
insl
push
out
movsb
lock
icebp
pop
add
iret
push
rcl
sbb
dec
mov
add
in
add
add
dec
daa
inc
pop
dec
movsl
inc
imul
adc
xchg
inc
wbinvd
mov
sbbl
push
and
inc
adc
or
xchg
jne
and
aam
cmp
and
je
imul
sbb
and
sarb
sbb
inc
xor
call
xor
pop
or
push
je
cmp
je
mov
lea
pop
sbb
fldenv
ljmp
adc
xchg
inc
add
mov
xor
add
push
adc
std
or
lds
clc
mov
sub
inc
dec
add
or
lods
insl
imul
and
out
jg
mov
or
gs
lea
ds
aam
mov
sbb
cmpsb
lcall
lds
dec
adc
daa
mov
cmpsb
cmpsb
andb
push
or
pop
adcl
jnp
add
jnp
add
cmc
cs
sti
and
imul
pop
fs
inc
loope
inc
jmp
in
out
ficoms
push
or
or
inc
or
push
sub
mov
lods
or
mov
nop
mov
test
add
mov
or
mov
push
ljmp
lcall
imul
mov
pushf
sub
sbb
pop
arpl
sub
adc
ret
decb
mov
inc
loop
sbb
sti
mov
add
inc
loopne
add
fisubrl
jb
add
cli
enter
push
dec
daa
adc
mov
jmp
outsb
sub
lcall
add
ss
sbb
jne
pop
dec
add
adc
mov
cld
lock
pop
or
incl
mov
loopne
and
and
inc
arpl
and
mov
clc
or
roll
jle
or
jne
loop
and
pop
fdivrl
xchg
inc
jno
add
cwtl
dec
inc
mov
mov
clc
dec
jo
jl
scas
jo
mov
stos
push
les
repnz
test
xor
pop
test
and
adc
pusha
mov
fiaddl
dec
inc
push
lods
int3
daa
stos
ja
inc
xchg
cmp
out
test
lret
inc
xchg
rolb
xchg
push
rorb
lea
jnp
adc
mov
stc
or
add
jno
jne
add
or
je
nop
mov
sub
add
cmp
push
jne
fs
jo
mov
push
xchg
xor
ret
pusha
xchg
pop
push
cmp
sbb
or
enter
sbb
xchg
pushf
aam
inc
inc
or
jle
fadd
in
mov
ret
jne
push
pop
sub
mov
sbb
mov
pushf
les
cmp
pop
into
and
or
mov
ljmp
mov
push
testb
adcb
mov
and
es
add
fs
dec
aas
shlb
sahf
cmp
adc
std
mov
add
sbb
pushf
xchg
lea
dec
lds
mov
call
xchg
pop
sub
pop
in
and
inc
mov
shlb
shrl
push
shll
sbb
jp
inc
inc
sahf
add
mov
idivb
jo
dec
aam
push
push
ja
mov
cmpsl
rcl
push
push
push
mov
into
mov
or
mov
adc
loopne
or
sahf
adc
adc
mov
or
xchg
push
sbb
daa
push
js
mov
and
dec
in
ret
pop
inc
arpl
aam
pop
lods
rorl
in
dec
rolb
addb
mov
out
add
dec
out
enter
and
pop
in
adc
pushf
fdiv
loopne
mov
insb
ljmp
sub
mov
jae
and
mov
lods
and
pop
cmp
test
jle
dec
movsl
cli
and
dec
xor
dec
jae
daa
ljmp
xor
test
insl
push
les
out
les
add
sbb
mov
lds
mov
mov
je
faddl
jl
jbe
push
or
push
mov
int3
ds
fs
adc
xor
xchg
xor
testl
pop
cmp
push
or
adc
inc
mov
mov
pop
inc
sysret
test
mov
mov
and
mov
clc
pop
es
adc
mov
jl
xchg
inc
mov
add
shl
inc
mov
decb
or
into
mov
xor
dec
dec
nop
out
push
add
pop
test
xchg
cmpsb
xor
or
inc
les
insb
je
outsb
add
or
sahf
mov
xchg
lock
pop
popa
mov
inc
roll
xor
loopne
sub
xlat
add
ljmp
or
out
mov
mov
sub
sbb
xchg
push
sarb
test
jno
xchg
adc
sbb
and
mov
mov
xchg
push
dec
sub
cmpsb
mov
or
lock
das
and
add
xchg
add
int
lock
int3
repnz
inc
add
leave
sbb
sub
cs
xchg
add
and
das
sbb
cmpsb
push
pop
adc
shll
rcrl
ror
fdivr
test
rolb
dec
pop
ljmp
pop
rcrl
push
add
daa
sub
fs
cmp
pop
pop
pop
test
jo
jle
xchg
push
push
enter
jp
sub
push
out
cli
lods
push
cs
ret
jg
sub
mov
xchg
inc
push
ja
xchg
pop
test
adc
dec
mov
inc
inc
push
inc
ret
loope
adc
cltd
sbb
jecxz
or
adc
jecxz
mov
fsts
mov
xchg
lods
cmp
push
mov
int
mov
movups
test
cltd
loopne
cld
xor
sub
leave
adc
mov
mov
xchg
or
jmp
rcrl
hlt
add
adc
je
subb
mov
insb
outsl
addb
ret
xlat
mov
rcl
call
mov
fcomi
imul
test
fists
add
clc
addr16
fistps
sbb
dec
movups
sbb
jp
cmp
push
icebp
and
adc
add
rcl
adc
iret
dec
lods
xlat
push
mov
pop
das
fldl
jg
mov
fnstsw
lcall
sbb
adc
cmp
sub
orl
stc
mov
out
sbb
mov
sbb
jo
insb
lahf
pusha
pop
sbb
jge
jmp
fistpll
ret
sub
jmp
push
dec
cmp
sub
test
add
inc
pop
inc
xchg
or
cmp
andb
push
push
push
xor
test
pop
pop
adc
leave
adc
xor
xlat
nop
mov
cmc
xor
les
add
mov
push
pop
lods
push
es
or
lret
test
stos
rolb
mov
or
mov
add
lcall
stos
push
les
jle
mov
add
clc
push
mov
sbb
mov
sub
mov
pop
xchg
sub
and
jp
add
cmp
lret
shr
les
inc
mov
mov
lret
rolb
dec
pop
sti
adc
mov
pushf
jns
and
int
xor
xchg
sub
mov
add
das
aas
ljmp
pop
pushf
jno
sbbb
and
mov
xor
inc
jl
push
loopne
adc
js
mov
dec
and
std
push
dec
scas
pop
sbb
sub
push
pop
dec
mov
pop
mov
pop
xor
mov
sbb
mov
stos
or
outsb
sub
sub
testb
pop
push
loopne
sbb
daa
push
insb
sub
xor
fldt
inc
call
ret
dec
rolb
jne
xchg
mov
xor
cld
xchg
lret
mov
sbb
push
dec
faddl
sub
std
outsb
push
cmp
insb
sub
lds
into
cltd
or
andl
outsl
cmp
icebp
sub
adc
out
imul
xor
push
fprem
sub
or
out
jg
gs
adc
fdivrs
call
or
daa
sbb
imul
fistpl
cs
adc
int3
push
mov
adc
adc
imul
je
push
xchg
dec
pusha
in
sbb
push
sub
ret
hlt
popa
mov
test
aaa
pop
add
fs
adc
test
lea
xor
adc
cmp
mov
daa
loopne
rcrl
adc
stos
lods
add
mov
jg
cmp
icebp
adc
mov
add
in
ret
dec
inc
jecxz
xchg
xchg
mov
lret
sub
je
stc
cmc
push
adc
icebp
inc
inc
pop
pushl
sti
call
cmp
jle
lds
int
pop
push
xchg
adc
push
inc
or
sub
pop
dec
sub
xor
andnps
pop
or
jnp
or
jne
push
mov
mov
je
and
and
sub
je
push
mov
loop
lods
jne
popf
pop
divps
xchg
adc
push
and
add
in
xchg
lods
test
shrb
clc
add
test
outsb
repz
outsl
jnp
sub
xchg
fwait
xchg
push
in
aam
push
pop
hlt
aad
loopne
push
testl
cmp
jno
adc
and
push
pand
sbb
and
pop
pop
scas
es
std
add
les
mov
scas
insb
nop
orb
jbe
and
push
push
call
arpl
fildl
or
cmpl
dec
inc
andl
adc
sbb
fsubrs
adc
dec
mov
adc
and
and
sub
mov
insl
and
push
sub
aaa
cltd
mov
xor
jo
push
sub
sarl
hlt
mov
pop
push
mov
sub
clc
lea
bndldx
push
mov
jno
loope
jmp
inc
push
xor
pop
push
inc
adc
dec
mov
pusha
push
sbb
sub
cmp
adc
xor
jne
inc
loope,pt
std
cs
adc
es
fldl
jbe
or
scas
xor
lods
push
cltd
test
xchg
inc
inc
sbb
adc
pop
sbb
call
pop
or
imul
jne
outsb
and
daa
add
jl
or
xor
push
dec
push
fcmovnu
arpl
sub
insl
mov
pusha
mov
pushf
lods
popa
fstpl
mov
mov
cmp
jle
push
out
es
pop
pushf
push
xor
pusha
mov
adc
mov
jo
call
rclb
ret
jmp
pop
cmpb
dec
push
sub
jle
add
adc
dec
push
mov
push
add
adc
in
je
fs
or
xor
sbb
or
and
sbb
xchg
jne
rorl
mov
ljmp
sbb
sub
pop
in
fstpt
dec
js
je
or
cmp
adc
add
and
clc
mov
mov
jmp
inc
jg
jmp
sti
nop
and
outsb
pusha
jne
cmp
pushf
mov
rcll
mov
rorb
call
dec
push
mov
inc
adc
test
jmp
sbb
add
add
and
stos
inc
icebp
or
cli
cwtl
je
das
push
lea
xor
jo
movsb
adc
inc
jg
ret
jmp
subl
jl
cmp
and
dec
out
xchg
add
mov
sbb
aaa
gs
add
pop
add
lea
pop
add
push
aaa
in
pushf
jmp
sbb
ss
pop
jnp
arpl
push
cmpb
cmp
mov
cwtl
mov
push
sbb
sbb
or
push
dec
sub
add
js
pop
pop
out
je
loopne
test
call
mov
inc
pop
icebp
mov
pusha
adc
pop
push
push
push
or
dec
mov
int3
cmc
pop
leave
and
jne
cwtl
mov
jg
test
mov
lock
ret
xchg
add
movsl
inc
sbb
inc
pop
pop
or
add
or
pop
or
test
subl
icebp
mov
cmp
add
cld
inc
mov
loopne
pop
pushf
push
cmpsb
push
addr16
xchg
popf
pop
add
call
sbb
ret
popa
shl
sub
jno
cld
cmpsb
icebp
ja
adc
mov
ficoms
ds
mov
pop
je
adc
inc
ss
dec
push
jle
add
jle
out
inc
push
movsl
dec
push
push
push
push
rep
mov
jg
dec
dec
lcall
out
add
loopne
stos
jle
add
mov
mov
out
adc
xor
inc
dec
lea
inc
push
push
add
xlat
sub
mov
or
push
push
mov
dec
mov
cmpw
inc
push
cs
dec
jne
fimull
push
mov
push
leave
outsb
dec
sbb
push
pop
push
aam
adc
and
cli
xchg
or
imul
or
mov
in
sbb
fisubrs
lock
push
add
mov
pop
push
fildl
add
ret
mov
sbb
enter
sub
and
mov
inc
es
cli
sbb
aaa
pop
pop
mov
cmovb
cmpsl
add
int3
pop
loopne,pt
out
lcall
and
pop
negb
and
adc
adc
or
jne
xchg
cmc
lret
loopne
push
ret
loop
mov
je
or
pop
mov
dec
lahf
mov
and
sbb
xor
sbb
cmp
mov
aad
push
pop
incl
dec
lods
add
in
loop
xchg
pop
pop
mov
ret
inc
rcr
pusha
stos
adc
jne
and
je
and
mov
pushf
mov
fs
test
fs
sbb
cmp
or
aaa
mov
push
and
inc
movlhps
push
les
mov
jp
jno
in
out
in
dec
push
adc
out
push
leave
lea
xor
jne
mov
add
rolb
add
and
sbb
mov
adcb
cmpl
add
jmp
lea
and
and
je
push
lcall
sub
push
push
mov
je
test
or
inc
cmovle
addr16
inc
push
shlb
pop
aad
jae
aam
push
loop
rcll
and
fcoms
mov
mov
mov
jmp
je
push
sbb
mov
in
test
push
rolb
adc
pop
mov
push
push
outsl
out
ja
jo
mov
or
out
push
push
push
cmp
adc
push
or
jbe
dec
stos
testl
vmwrite
mov
dec
mov
aas
inc
pop
adc
std
lret
sbb
outsl
dec
fadds
pop
imul
daa
xor
popa
dec
adc
sub
cmp
push
jmp
push
ror
lea
sbb
sbb
rolb
xchg
fldcw
lret
mov
stos
push
flds
rorl
sbb
push
in
xor
ss
add
jo
jecxz
mov
mov
rcrl
pop
insb
fcmovb
adc
fimuls
mov
testl
jl
std
add
ljmp
sub
add
aad
jne
push
inc
clc
add
xchg
add
and
push
push
xor
sbb
inc
sub
jge
add
ja
push
sbb
cmp
adcb
push
pop
pusha
add
or
scas
dec
lock
or
cld
enter
mov
and
push
in
jae
je
js
test
sbb
fdivrl
pusha
and
arpl
dec
repnz
loopne
aaa
mov
cltd
loop
push
xchg
push
mov
xor
mov
int3
add
lods
clc
cmp
cmp
js
and
push
dec
add
imul
or
adc
and
fnstsw
add
ficomps
xor
adc
loopne
inc
lock
shr
insb
mov
or
lea
jne
pusha
rolb
decb
push
dec
cmp
mov
sbb
sbb
addb
int3
and
jecxz
mov
or
imul
arpl
std
pop
outsl
inc
mov
fwait
mov
inc
mov
push
test
mov
gs
inc
rcrl
xor
mov
mov
mov
add
xor
mov
shl
outsb
mov
mov
push
fadds
sbb
push
imul
aaa
push
inc
fimull
fiadds
or
push
rclb
push
mov
dec
loop
add
aad
sbb
and
sub
sbb
loopne
xor
ret
dec
adc
sub
pop
or
std
cli
shlb
test
cmp
adc
xor
xchg
sub
mov
jnp
dec
mov
jb
cmp
out
mov
sbb
les
loopne
jge
neg
cmp
jge
mov
fs
cmpsl
mov
push
fsubs
mov
jmp
jge
neg
cmp
outsl
dec
sub
nop
add
jbe
bound
cmp
andl
les
pop
loope
clc
sub
push
push
cmp
or
call
add
clc
addb
cmpsl
xor
push
lods
cmc
adc
xor
jb
pop
jge
in
adc
or
jo
lock
jne
cmp
jo
jne
outsb
inc
xor
bound
scas
cmp
inc
push
es
sbb
test
push
nop
mov
movsb
add
ljmp
scas
inc
mov
inc
jg
dec
add
lds
addr16
push
add
hlt
and
pop
and
adc
or
push
add
jno
pop
pushw
mov
rcll
test
push
xchg
jno
push
rcl
aaa
push
mov
jns
imul
pusha
mov
jecxz
imul
cs
out
xchg
xor
mov
pop
into
push
sbb
push
js
addr16
fildl
sbb
add
inc
sub
repz
sarb
cmp
pop
cmp
incb
mov
bnd
pop
cmp
add
push
cltd
mov
dec
and
pop
xchg
insb
lods
sub
add
push
filds
daa
cmp
push
mov
sbb
jg
xchg
stos
cmpsl
xchg
mov
jne
repnz
in
adc
cmpsl
and
out
roll
mov
push
push
sbb
popa
inc
add
and
cmp
ljmp
sub
sub
cmpsl
addr16
je
ja
xchg
dec
mov
push
sbb
push
cmpsl
xor
pop
pop
inc
sub
push
xchg
fsts
mov
mov
sbb
ret
xchg
pop
rolb
nop
push
mov
pop
jbe
add
dec
test
ss
jle
push
rcrb
mov
push
inc
jg
lea
pop
pop
sub
movl
imul
mov
jne
dec
xchg
ss
roll
loopne
pushf
mov
aam
cltd
sub
push
orl
lahf
mov
xchg
or
pop
setp
pusha
and
gs
outsb
sbb
inc
rorl
sbb
fwait
push
inc
fimuls
adc
inc
dec
stc
inc
mov
inc
insb
les
xchg
ret
testb
pop
mov
fldl
push
mov
movsl
rol
test
das
push
or
jnp
into
dec
dec
dec
lds
mov
insb
cmc
lds
mov
dec
lds
mov
xor
popa
pop
push
jp
mov
mov
fimuls
iret
pop
and
ds
pop
add
pushf
mov
int
or
pop
js
inc
loop
or
push
jg
dec
jne
bound
sub
sbbl
add
daa
or
xchg
loopne
inc
popa
add
inc
je
dec
adc
cmc
dec
pop
or
rolb
sub
push
in
dec
jo
jno
push
xchg
repnz
lea
mov
daa
repnz
je
mov
bound
sub
fs
inc
mov
mov
mov
or
pushf
into
lock
cmp
popf
neg
xchg
movsb
adc
xchg
and
loop
push
adc
pop
icebp
test
push
sbb
jmp
and
scas
js
test
and
xchg
or
out
loope
jo
and
lds
push
inc
je
pop
mov
sbb
insb
pop
xor
mov
sub
cld
or
in
outsb
ret
jl
mov
and
xchg
mov
add
clc
xor
jl
jns
clc
inc
dec
stos
hlt
cmpb
push
shll
cmpl
jge
inc
gs
or
cmp
jle
mov
cmp
push
or
dec
or
adc
push
push
add
jmp
lret
add
jmp
jle
jg
addl
icebp
add
sahf
xor
push
mov
adc
je
incb
xorb
jl
mov
xchg
in
mov
lea
jge
mov
cmp
add
nop
sbb
ds
inc
test
push
mov
lock
ret
stos
dec
ds
pop
mov
or
cwtl
cmp
mov
cmpb
push
imul
pop
insb
sbb
mov
push
mov
inc
test
ja
aam
add
sbb
popa
adc
fmull
dec
pop
aam
jle
add
jne
jl
aam
sbb
mov
adc
mov
imul
lea
popf
dec
flds
fmuls
adc
sub
xchg
ja
pop
push
add
push
xchg
push
ret
xor
add
or
test
stos
addl
clc
lds
adc
mov
cmp
insb
leave
ficoms
jae
or
pop
aas
nop
fwait
imul
fcoms
dec
mov
imul
pop
jo
cs
add
mov
add
aas
or
jo
inc
add
subb
sahf
ret
dec
iret
shlb
push
lcall
sub
dec
jne
and
or
and
inc
cld
mov
add
in
push
pop
xor
jbe
jl
cld
in
jmp
scas
or
pop
bnd
imulb
jmp
jmp
adc
out
sbb
sarl
stos
fistl
fadd
cmp
ja
insl
adc
ret
mov
mov
jb
ret
outsl
xor
ret
inc
mov
dec
add
mov
outsl
pusha
test
mov
jle
add
pop
pushf
sub
dec
push
push
and
inc
loopne
mov
inc
pop
jl
enter
jl
leave
ret
and
inc
add
inc
dec
nop
bswap
subb
jb
add
mov
loopne
adc
test
lret
rcll
jb
sub
push
adc
push
mov
rolb
movsl
out
sbb
lods
or
push
popa
dec
in
hlt
jo
inc
mov
and
add
inc
ret
into
frstor
mov
pop
loope
enter
cmp
adc
incl
fbstp
xor
inc
out
mov
mov
clc
in
cli
scas
lret
adc
in
div
fnstcw
inc
xchg
sub
loopne
mov
out
xor
cmp
mov
stc
inc
mov
in
nop
jl
test
xor
xor
jl
push
nop
inc
jns
sub
rol
mov
aas
out
ret
lret
jle
jp
cmp
ret
imul
bound
stc
pop
pushl
pusha
test
jnp
loop
and
pusha
lcall
insl
repz
inc
push
push
mov
mov
cli
pop
rorb
jg
pushf
in
cltd
lea
push
idiv
mov
push
les
iret
pop
adc
and
xor
movb
dec
cmp
rcr
inc
mov
cltd
cld
and
std
aaa
test
rcrb
add
mov
pop
mov
adc
and
push
push
adc
add
flds
lret
movsl
fimuls
dec
or
pushf
std
add
fmuls
mov
push
adcl
or
inc
subps
ret
das
sub
cmp
loope
sbb
xor
jg
add
ds
dec
rclb
mov
data16
add
push
adc
push
push
jb
and
leave
and
ret
test
cld
xchg
xchg
inc
push
and
fsubrs
aam
cmpl
sbbl
xor
sbb
outsl
into
xor
mov
fwait
mov
test
pushf
jmp
push
mov
dec
bound
adc
push
icebp
addb
and
inc
sub
adc
add
jbe
lret
rclb
add
test
and
and
scas
and
clc
xchg
push
add
or
sub
mov
pcmpeqw
stos
test
dec
in
test
push
cmp
mov
fcoml
call
xchg
fimuls
xchg
outsl
mov
sbb
add
cmp
add
lret
jp
pop
and
cmc
xchg
push
cmp
fcmovnb
out
inc
dec
dec
push
sbb
rcl
outsb
xchg
adc
sub
pop
push
and
or
pushf
or
sbb
js
fstpl
or
add
popl
adc
sub
mov
out
jg
inc
nop
adc
pop
or
jl
xchg
pop
nop
into
jle
dec
inc
repz
sbb
rolb
cli
or
dec
mov
add
dec
or
mov
add
sbb
push
sbb
js
orb
js
ret
je
pop
ret
lock
jg
ror
mov
lcall
jbe
xchg
mov
dec
push
lea
push
shrb
cmp
sbb
testl
mov
mov
movsb
push
aaa
push
push
jns
andl
insb
ret
cmp
rolb
add
and
sbb
mov
adc
jge
jl
pushf
pop
pusha
cs
dec
loopne
jl
es
push
xlat
add
pusha
js,pt
push
fs
shlb
pusha
lea
mov
jp
pop
add
jne
scas
push
lret
jbe
or
mull
ss
xor
pop
push
scas
daa
inc
cmp
ss
lds
sbb
sub
cmp
add
ret
in
enter
pop
cmp
pop
enter
lods
mov
xchg
std
add
mov
stc
sub
pop
popa
movsl
pop
lods
inc
add
mov
inc
xor
push
adc
push
push
notl
add
sbb
cmp
inc
pop
xchg
clc
mov
ret
sbb
mov
les
js
mov
pop
fs
mov
outsb
inc
adc
mov
or
lock
push
into
sub
clc
aam
push
scas
and
lds
sbb
clc
mov
pop
and
pop
popf
jne
cmp
iret
cmp
mov
ficompl
pop
sbb
pop
in
sarb
inc
ljmp
and
bound
pusha
mov
cmovs
sbb
or
mov
pop
subb
leave
je
mov
aad
fwait
adc
add
mov
test
push
xchg
icebp
sbb
aam
xchg
jo
push
dec
sub
mov
cld
sbb
inc
ljmp
in
or
aas
cmc
jne
inc
inc
adc
pop
clc
inc
dec
int3
sub
add
ret
and
cmc
and
or
movsb
pop
sbb
lea
lock
mov
lea
inc
add
pushf
sbb
fdivrs
jmp
aaa
xchg
push
sbb
mov
dec
dec
dec
outsl
lea
mov
cld
mul
xor
ret
adc
ja
dec
les
mov
mov
push
sbb
cmp
enter
xchg
loope
fistpl
rcr
adc
push
dec
push
sbb
cmpsl
inc
pop
nop
xchg
mov
inc
add
dec
mov
rcll
inc
jne
push
loop
imul
pop
pop
pop
inc
out
mov
adc
imul
mov
and
fmulp
dec
imul
in
je
aam
aam
xlat
xor
enter
test
fisubs
nop
sub
jo
or
sbb
add
mov
andl
and
pop
test
xchg
lods
aam
sti
push
cmp
xor
aad
add
cmp
ret
add
or
xor
ret
bound
push
jae
rol
adcl
xor
jne
mov
mov
or
rolb
cmp
mov
mov
sub
xor
sti
inc
jno
add
or
clc
adc
leave
fsubr
or
inc
insl
jmp
mov
popa
or
or
add
sub
push
push
pop
cmp
push
cmp
out
in
addl
cmpsb
inc
mov
push
and
add
adc
push
ljmp
sub
lods
sub
shrb
jl
mov
push
pusha
add
int3
or
les
fildl
xor
push
add
scas
inc
add
ds
mov
sbb
ret
xchg
jbe
push
pop
jg
jmp
aaa
push
shrb
mov
mov
mov
mov
mov
test
lock
adc
cli
mov
ret
jg
popf
cli
pop
test
push
jne
push
or
cmpsl
jo
sbb
push
or
shlb
out
gs
clc
lcall
push
cwtl
orb
rolb
call
loopne
jg
inc
lret
js
int
cwtl
jmp
push
data16
mov
scas
ret
rep
cld
xchg
fdivp
mov
bswap
shlb
mov
aad
inc
ss
xor
cmc
jnp
sub
gs
in
and
cmp
jmp
push
popa
inc
xor
xchg
jmp
sub
pushf
mov
jne
imul
fldl
cmp
or
add
cmpsb
push
sub
inc
js
into
fwait
mov
push
sub
and
jbe
pop
add
and
adcb
inc
repnz
ret
aam
ror
inc
push
pop
push
orb
sbb
push
add
push
call
push
sub
xor
add
dec
xchg
lods
inc
push
push
mov
mov
or
daa
shl
xor
push
cmp
aaa
jo
mov
pushf
push
sbb
add
pop
in
push
movsb
cli
push
pop
push
pop
mov
xor
and
mov
push
mov
lcall
dec
pop
imul
test
jo
shll
orl
cmp
in
jmp
sbb
outsb
pusha
and
jecxz
cmp
dec
push
cld
arpl
jl
add
pusha
dec
je
call
popf
repnz
clc
mulb
adc
leave
cmp
push
lret
xor
or
dec
cmp
xor
push
sub
movsl
jne
lds
push
pop
add
fstl
imul
add
adc
push
cmpsb
or
pop
insb
add
sub
push
and
or
sub
or
test
movsl
imul
add
push
mov
xchg
add
dec
arpl
dec
pop
push
cwtl
adc
xchg
sarb
test
push
mov
xchg
push
or
ret
jo
mov
add
push
push
push
or
pop
imul
daa
mov
add
mov
add
or
ljmp
insb
loopne
in
sbb
js
scas
push
add
push
adc
adc
fildl
pop
push
and
dec
int3
mov
int
setne
fildll
sub
js
push
add
jne
out
cmpsb
cmp
popa
pop
arpl
arpl
push
popa
das
pop
mov
mov
push
mov
imul
testl
sbb
push
cmp
aam
lds
or
mov
pusha
sub
push
xor
dec
add
repnz
mov
dec
adc
inc
or
shrl
repz
stos
bound
or
mov
or
fwait
xchg
lock
mov
fwait
cld
xor
in
push
int3
mov
clc
add
aas
inc
popf
out
fnstcw
ret
lcall
neg
insb
and
add
jg
lea
inc
push
pop
mov
sub
mov
cmp
xchg
pop
push
adc
inc
sbb
adc
ret
cmpsb
sbb
dec
and
cmp
pop
pushf
add
lea
push
adcb
outsb
sub
loopne
dec
mov
or
mov
xor
cmp
or
and
andl
pop
jo
sub
xchg
mov
loope
and
out
push
mov
rcll
pop
lods
data16
and
mov
adc
sub
pop
stos
add
mov
je
fistpl
sbb
je
xchg
cltd
daa
and
push
mov
cmp
je
addb
clc
out
adc
mov
xchg
movb
xchg
inc
lahf
fstl
imul
or
pop
push
pop
jae
xchg
insb
jae
inc
lods
mov
xchg
jae
rclb
add
jb
jae
shlb
xchg
dec
popa
repnz
cmp
inc
and
jae
pushf
sub
push
pop
and
adc
dec
cmp
sub
aas
push
pop
push
or
xor
dec
cmc
rcl
fs
add
cmova
push
or
scas
aad
push
inc
mov
jbe
orl
popf
or
out
fildl
push
jbe
pop
jl
inc
pop
fadds
jge
lret
push
stos
idiv
pushf
js
cmpb
pop
cmp
xorl
sbb
roll
fildl
ret
and
test
jno
mov
push
dec
or
fistpl
sbb
adc
out
addr16
add
sbb
push
inc
cmp
mov
adc
jmp
imul
loope
fistl
and
enter
push
lea
push
xchg
pusha
push
rorb
dec
call
mov
js
inc
insl
mov
or
mov
mov
cmp
push
push
add
inc
call
jo
xor
sbb
jl
cmp
ret
imul
ret
leave
cld
inc
je
inc
dec
in
inc
sahf
and
lret
jne
loope
add
inc
lds
xchg
fldenv
lods
mov
add
or
add
or
loopne
les
xor
insl
or
mov
and
push
sbb
adc
dec
inc
pop
mov
mov
lea
psubsb
popf
add
jo
push
test
or
add
rol
insl
adc
mov
add
pop
cmc
test
pop
pop
cli
sub
imul
pop
add
xchg
test
test
jg
push
jp
xor
push
lea
jbe
mov
and
cli
jle
lea
jge
mov
mov
sar
mov
jb
mov
or
lret
sbb
mov
je
jnp
mov
push
mov
cmp
jl
cmp
imul
xor
mov
nop
dec
xor
inc
add
jge
push
push
out
sub
mov
push
test
mov
lea
push
push
adc
push
mov
mov
int
dec
sub
pop
sbb
dec
fsubs
or
sbb
cmp
xchg
icebp
mov
or
or
add
outsb
push
mov
fmulp
xchg
adc
push
push
and
aam
pop
push
packuswb
push
outsl
jmp
nopl
sub
inc
mov
or
add
stc
sbb
pop
sub
cmp
pushl
ret
js
lds
push
shl
push
fs
dec
mov
lock
push
xor
cmp
js
jp
mov
shrb
add
xor
adc
orl
pop
inc
or
inc
pop
or
nop
xor
lock
inc
fadds
inc
pop
cld
xor
sub
mov
push
dec
ret
push
fidivs
sub
jae
and
add
insl
xor
cmp
je
or
or
bound
dec
and
jo
arpl
ret
leave
shl
ljmp
rorb
mov
sbb
adc
push
addb
rorl
movsl
das
daa
fsubrs
jp
fiaddl
mov
jp
adc
lea
mov
or
dec
push
pop
push
shrb
pop
jmp
inc
jle
sbb
adc
mov
mov
popa
and
sub
cmp
or
lock
mov
add
adc
cmp
shr
ret
shlb
sbb
inc
ss
xchg
dec
jl
and
cmp
cmp
pop
cmp
push
sub
movsb
fwait
daa
push
imul
test
lods
or
jp
push
jo
mov
inc
xor
dec
jle
dec
sarl
mov
mov
add
or
adc
mov
push
sbb
pop
add
loopne
inc
mov
push
int3
add
in
aad
mov
lock
shlb
push
fwait
shlb
mov
int
inc
mov
dec
sahf
mov
or
mov
mov
sbb
call
add
or
scas
pop
dec
mov
data16
lea
rclb
mov
cld
movsl
hlt
mov
jo
dec
pop
inc
mov
xchg
push
push
adc
cld
inc
repnz
push
add
insl
dec
sub
sub
inc
or
outsb
adc
jnp
adc
inc
mov
xor
inc
and
aas
cmp
sub
xchg
mov
mulb
sbb
jp
mov
aad
push
sbb
or
aam
jle
jl
cmp
jne
inc
clc
push
or
dec
jne
mov
cs
fadds
sbb
lock
jbe
outsl
and
inc
or
jbe
in
add
push
push
xor
add
inc
jne
fwait
shr
mov
or
inc
jne
add
jne
mov
stc
aaa
arpl
out
pop
cmp
add
cmp
cmp
bound
cmp
mov
add
push
or
cmp
add
dec
lcall
sub
addb
inc
or
andb
or
push
or
orl
xor
sti
push
pusha
lock
aas
inc
jne
or
push
mov
test
push
dec
cld
pusha
push
mov
loopne
movsl
fs
xchg
mov
cs
or
add
sarb
lahf
sub
lods
sub
xor
inc
ret
aam
arpl
xchg
and
inc
mov
nop
out
ficomps
xor
and
cmp
or
loop
fcompl
movsl
add
jle
push
cmpsl
cmp
stc
lcall
dec
xor
jge
jge
or
xchg
gs
add
hlt
and
nop
push
daa
sub
jns
add
out
les
lahf
loop
mov
dec
xchg
jb
jge
adc
cmpl
insl
pop
sbb
pop
dec
repnz
or
xor
mov
xchg
inc
lds
jge
adc
push
stos
sub
int3
in
ret
push
push
ret
cmp
je
push
cmp
in
int
jbe
mov
sbb
lret
xor
adc
adc
sbb
lahf
xchg
cwtl
xor
sar
lret
xor
scas
jbe
mov
add
lcall
or
cli
jg
adc
fdivrl
push
les
xchg
ror
sti
adc
jne
sbb
cmc
jmp
mov
shrl
out
sub
loopne
sbbb
add
pop
sub
fdivrs
mov
stos
cmp
arpl
outsl
dec
push
adcl
mov
mov
inc
mov
in
jnp
imul
adcb
fistpll
popa
std
cli
clc
push
pop
dec
jne
fdivr
or
adc
test
dec
jp
loopne
test
lea
lret
int3
cmc
pop
sbb
add
pop
sti
mov
jnp,pn
mov
jge
aas
cmp
jge
cmp
jmp
jecxz
je
jecxz
je
mov
inc
shll
adc
rol
daa
addl
add
fadds
ja
imul
xchg
mov
push
add
dec
push
add
fidivrl
imull
pop
jmp
test
cmp
outsb
imul
push
mov
mov
inc
pop
call
sbbb
sub
dec
fidivl
cmpsb
icebp
sub
addl
mov
jne
jge
mov
mov
dec
cmp
test
cmp
test
popa
sub
or
aas
and
add
or
ljmp
cmp
add
rol
subb
inc
mov
sbb
or
loope
pmaddwd
lret
sub
adc
push
jp
lea
xor
xor
addl
andl
mov
fdivrs
sbb
fists
mov
fwait
inc
and
cmp
push
adc
mov
add
pushf
pop
dec
mov
sub
fcomps
or
sub
mov
jg
push
xor
dec
cmp
call
lret
jg
mov
sub
mov
xor
insl
out
xor
jbe
add
jle
les
imul
sbb
sbb
mov
dec
nop
lock
inc
clc
ret
loopne
adc
xchg
pop
negl
fisttpll
push
jmp
jmp
fcompl
add
sbb
pushf
pop
push
mov
sbb
rclb
dec
push
lods
movsb
js
adc
add
pop
movsl
je
fidivs
pop
jne
xchg
arpl
cmp
sub
loope
out
insb
fmuls
mov
int3
sbb
xchg
xchg
xorl
stos
test
and
mov
cmp
jp
test
fsts
sbb
inc
xchg
pop
paddq
test
xchg
cmpsb
iret
push
mov
jnp
popa
push
lock
cs
adc
or
push
sub
push
push
int
adc
int3
lds
loopne
push
and
mov
xor
add
push
andl
in
pop
test
add
pop
out
add
add
dec
sub
mov
push
test
xchg
adc
out
stos
js
outsb
push
mov
or
push
xorl
jo
dec
or
or
cltd
pop
rorb
in
rcll
push
pop
loope
push
cld
add
jo
mov
push
push
cmp
jmp
add
mov
cmpl
xchg
nop
adc
scas
test
add
mov
cmp
cld
jae
shll
mov
pop
rcrl
adc
mov
jmp
xor
pop
xor
push
in
push
shr
push
sub
sbb
add
imul
pop
push
lods
out
mov
fildl
mulb
dec
pop
xchg
adc
jmp
push
fwait
and
les
mov
cmp
cmp
scas
loope
outsb
push
add
and
pushf
xchg
dec
rcrl
pop
mov
push
fadds
pop
or
push
cmp
push
mov
call
push
pop
sub
sub
rcrb
in
inc
sbb
xchg
lock
adc
andl
inc
in
push
inc
lret
daa
push
js
mov
das
aas
jo
in
test
cli
adcb
scas
dec
cmpsl
xchg
popa
or
mov
pop
addr16
movsl
orb
jne
add
cld
dec
xchg
add
mov
rorl
or
lock
in
and
inc
and
dec
lahf
inc
push
adc
and
add
fmull
jns
sbb
stos
mov
xchg
dec
dec
mov
ret
cmp
push
sarl
in
jns
or
shrb
add
movsl
cmp
mov
jle
and
sbb
pop
clc
mov
dec
gs
jne
pop
repz
inc
sbb
mov
mov
sbb
std
add
lea
cmpsb
xor
addb
pop
push
inc
adc
xor
push
jnp
data16
jge
cmp
dec
loopne
fiadds
xor
gs
push
mov
or
xor
push
shrl
call
pop
rolb
daa
rorl
ret
inc
add
xchg
inc
jl
call
inc
jnp
xchg
lock
maskmovq
notl
out
popf
cmova
inc
lods
out
out
addr16
mov
sub
mov
pop
push
shll
ds
cmp
mov
mov
mov
shl
in
cmp
cli
repnz
and
pop
add
adc
scas
mov
add
jmp
cmp
push
mov
mov
inc
and
mov
sub
loop
xor
mov
add
aam
cltd
pop
pop
cmpb
add
jge
dec
mov
test
leave
inc
mov
xor
push
pop
cmp
add
add
mov
mov
inc
mov
loop
cld
or
inc
sar
movb
dec
jne
cmp
jo
sti
aam
sbb
cmpsb
inc
das
fildll
loopne
cmp
push
inc
insl
daa
stos
push
push
lock
insb
ljmp
cmp
adc
cmp
fwait
push
ficompl
push
sbb
adc
pop
sbb
incl
and
jb
mov
clc
inc
je
inc
sbb
outsl
add
incb
insl
push
lds
adc
test
scas
pop
jae
mov
cmpsb
imul
clc
vpshad
jnp
fwait
inc
mov
lea
push
subl
rolb
idivb
mov
cmp
jbe
jp
call
inc
or
and
jle
adc
sarl
les
std
dec
and
adc
out
frstor
call
jmp
push
mov
push
out
fs
jo
push
sbb
in
fildl
adc
xchg
dec
and
add
arpl
jp
outsl
jae
ret
pop
adc
sbb
test
xchg
adc
push
sub
mov
loopne
cmpsb
dec
jae
lret
adc
nop
push
icebp
push
push
stos
add
lods
push
in
push
js
movsb
and
mov
dec
adc
lret
xchg
xchg
outsl
outsl
ret
ljmp
push
loope
mov
out
xchg
push
sarl
sbb
jnp
mov
and
mov
and
or
inc
push
push
cmpsl
mov
test
imul
mov
test
jl
nop
incl
sub
roll
mov
dec
shlb
mov
add
mov
sub
or
cmp
js
or
dec
xlat
mov
xchg
lahf
add
mov
sub
faddl
dec
mov
push
add
jno
leave
and
pop
out
cmp
xchg
push
adc
data16
sub
xchg
xor
pop
out
outsb
sub
sub
adc
cmp
xor
shlb
or
or
inc
push
push
rol
mov
cmp
xor
test
pusha
push
dec
arpl
or
rcll
or
les
sub
xor
push
jne
push
xlat
add
sbb
xor
shll
and
sub
movl
outsb
push
cmp
imul
dec
add
push
mov
cmp
pusha
push
cmp
push
inc
mov
aaa
inc
je
mov
ljmp
mov
mov
adc
push
jo
pop
pop
aad
into
push
je
int
cmp
lcall
dec
adc
out
mov
xchg
mov
jb
adc
xchg
lret
out
mov
xchg
cwtl
add
jb
aaa
out
add
lret
mov
clc
pop
adc
sub
adc
scas
mov
cmp
data16
mov
mov
add
jne
cmp
xor
add
and
mov
rcl
inc
pop
mov
or
ljmp
adc
and
add
mov
adc
or
or
jle
mov
mov
jae
lea
iret
push
push
inc
imul
out
mov
xchg
test
mov
imul
or
xor
enter
xor
push
xchg
pop
push
mov
cwtl
dec
ljmp
push
scas
test
movsl
sbb
or
mov
xor
jle
cwtl
cld
inc
dec
push
pop
adc
push
bound
push
insb
sub
mov
imul
add
popa
jg
shll
xor
and
push
push
adc
pop
ss
nop
lcall
jl
jmp
das
cmp
jae
cmc
sti
inc
shlb
push
inc
jg
mov
push
xchg
loop
test
mov
rorb
jb
test
mov
sbb
stos
shl
mov
rorl
loope
enter
xor
sub
sub
adc
sub
adc
cmp
adc
xchg
jle
orl
jmp
sub
add
sti
sarb
mov
js
orl
fmuls
cmpb
sbb
cmp
leave
loopne
daa
mov
mov
sbb
jns
ret
mov
imul
rcrb
sub
mov
jns,pt
pop
add
fisttpll
je
gs
or
jae
mov
or
fnstsw
add
es
aad
std
dec
mov
and
push
inc
rcll
aas
sbb
fiadds
xchg
add
in
sbb
pop
or
pop
sbb
out
xor
insl
or
jp
xchg
or
sbb
sarb
fcmovb
xor
sbb
cmp
or
pop
ja
add
dec
mov
testb
loopne
fnstenv
jo
arpl
stos
sub
jne
mov
pop
dec
and
mov
jne
cmp
cwtl
dec
xchg
adc
sub
sbb
mov
test
push
push
adc
sub
or
mov
xchg
in
lea
loop
jne
push
fadd
add
jnp
js
jge
sbb
cmpsb
je
loope
je
push
into
pop
test
adc
push
or
and
adc
dec
je
sahf
add
inc
int3
ret
addr16
xor
jge
and
popa
xor
mov
and
dec
push
push
adc
mov
out
fstpt
pop
or
pusha
xor
mov
sbb
divb
jo
shlb
inc
pusha
add
mov
mov
and
lods
push
or
push
sbb
add
push
push
cltd
mov
in
iret
mov
je
xchg
inc
or
call
add
mov
aam
sbb
mov
dec
sub
and
aaa
sub
adc
mov
adc
or
cmp
push
sbb
xchg
xchg
es
ljmp
outsb
fsubr
cltd
into
je
adc
pop
or
lcall
xor
xor
add
xchg
mov
aad
cmpb
call
sbb
addr16
inc
cmp
or
fs
je
cmp
jmp
add
outsl
xlat
and
sbb
icebp
test
sti
mov
movl
loopne
scas
push
insb
mov
jae
sarb
or
loope
cmpb
outsb
or
mov
xchg
mov
xchg
mov
sbb
loopne
and
add
repnz
add
sbb
dec
sbb
or
jo
sub
dec
or
ret
sub
test
or
fwait
xor
sbb
jno
pushf
lds
dec
imul
xor
dec
dec
inc
or
push
loop
xor
cmp
pop
jl
lahf
les
pop
or
sub
aaa
add
add
cmpsl
sub
dec
adc
int
add
mov
mov
fdivp
loop
and
mov
cmp
movl
jbe
xor
mov
push
cli
xchg
shl
xchg
cwtl
mov
xor
push
push
inc
mov
aas
cmp
mov
and
cmp
je
scas
inc
mov
mov
cli
sbb
xchg
fisttps
fistl
lods
rorb
int
rorb
jle
rcrb
lods
enter
pop
mov
sti
push
ljmp
in
test
mov
je
or
lret
push
jge
lea
xchg
lea
and
mov
test
cs
mov
push
mov
mov
mov
test
jbe
mov
je
sub
mov
lret
inc
dec
adc
cmp
cmpsb
push
inc
cmp
or
aam
nop
test
mov
ds
add
cld
cwtl
push
jmp
and
sbb
adc
sub
and
je
pop
fmuls
pop
mov
adc
push
std
dec
pop
ret
cmp
lea
inc
aas
testb
popf
adcl
jp
push
mov
cmp
movl
jp
mov
mov
mov
out
push
shl
or
in
test
inc
xchg
push
mov
mov
les
pop
jle
dec
mov
sub
inc
mov
add
add
ret
sub
dec
or
or
add
push
pop
dec
jbe
cmp
je
daa
push
cmpsb
jl
add
movl
jnp
fwait
jne
insb
sub
push
mov
scas
inc
sub
mov
div
mov
xor
adc
add
cmp
inc
call
orl
fstpt
or
dec
addb
jae
add
push
dec
sub
lods
sahf
cmp
pop
cld
cmp
add
add
xor
mov
jbe
mov
adc
cli
orl
inc
out
pop
add
pop
mov
xlat
cli
cmp
inc
std
cmc
pop
push
je
cmp
ss
subl
or
xchg
outsl
dec
or
test
jnp
adc
daa
mov
mov
sbb
popa
xor
loop
sub
inc
sub
ss
or
bound
inc
pusha
test
add
or
mov
insl
lea
push
add
dec
es
add
pusha
adc
xchg
lret
adc
dec
cmp
jne
lds
addb
clc
mov
cwtl
cmp
sbb
iret
jnp
pusha
ret
mov
pop
push
shlb
push
pop
cmpsb
popa
aam
icebp
xchg
jle
lcall
icebp
cmp
inc
iret
push
push
inc
outsl
add
cmp
inc
enter
sbb
add
or
xor
rolb
lcall
dec
in
jg
int3
xchg
push
push
push
pop
mov
xor
outsb
addl
test
outsb
push
addb
ss
and
or
push
int3
inc
outsl
add
inc
mov
mov
loopne
mov
je
add
pop
fists
lds
ljmp
xor
aad
adc
clc
inc
lret
mov
cli
xchg
fcmovu
jb
cs
in
mov
test
enter
xorl
sti
push
dec
or
mov
pop
orl
nop
push
xchg
inc
mov
and
cmp
sbb
enter
sub
or
pusha
iret
sahf
rorb
jo
orl
push
or
mov
push
lcall
jae
pop
dec
jne
ljmp
inc
pop
icebp
jle
rorb
mov
push
cmp
das
push
rcll
xor
test
imul
xor
mov
jo
dec
loop
jnp
fadd
negl
arpl
push
repnz
push
inc
inc
fadd
add
push
imul
sbb
xchg
or
mov
or
inc
mov
jne
into
sbb
or
popf
push
movsb
movsb
jl
inc
dec
xchg
jne
push
bound
jnp
ret
aas
iret
jle
testb
sub
mov
add
inc
add
push
int3
sbb
icebp
sub
and
push
pop
xchg
mov
pop
mov
inc
sti
xor
inc
out
sahf
and
ljmp
mov
adc
aaa
das
inc
cmp
jne
cmp
shrl
sbb
cmp
bound
dec
and
push
inc
hlt
mov
decb
sub
push
ss
mov
pushl
and
rorb
mov
or
sahf
cmpsl
decl
add
pop
lcall
sahf
scas
incb
cmpb
mul
push
pop
subb
shr
add
mov
mov
rolb
pop
cmpsb
inc
movb
push
inc
xchg
mov
mov
jp
aam
or
pop
push
movsb
fs
push
or
aas
mov
pop
push
or
cmp
jmp
data16
sub
xor
sbb
jne
fxch
or
adc
dec
or
outsb
and
ja
xor
jo
mov
sub
notl
adc
mov
push
mov
sbb
je
mov
xchg
push
pop
addb
adc
rcrl
shlb
lret
jns
jae
daa
ja
sbb
lret
arpl
into
inc
mov
hlt
outsb
sub
sbb
inc
cmp
dec
stos
pop
mov
pop
mov
mov
faddl
icebp
cmpsl
add
adc
mov
push
inc
jne
sbb
or
cli
lock
ljmp
mov
in
jecxz
in
movsb
jbe
mov
hlt
rol
sub
push
clc
dec
dec
jne
push
mov
xchg
add
jg
sti
cmp
lea
je
movb
add
popf
mov
pop
adc
sti
popf
rol
xor
inc
aaa
jne
fsubl
inc
ja
jmp
js
xor
mov
adc
or
lea
movsb
fisubrl
jns
sbb
sti
decb
ss
pusha
pop
xchg
lret
or
data16
or
rol
pusha
mov
mov
je
lock
xchg
orb
jo
jp
dec
jno
rcl
movsl
mov
mov
outsb
lds
loop
cmc
test
pop
notl
lea
add
cmp
or
dec
cmp
jne
movsl
xor
or
push
mov
andb
andb
mov
test
add
aam
mov
insb
dec
aad
ret
xor
mov
ljmp
mov
out
icebp
xor
xor
mov
add
add
rcl
pop
je
inc
mov
js
xchg
xchg
aad
movsl
in
mov
jp
pop
mov
pop
mov
mov
xchg
pop
mov
lods
cmpsb
fbld
jnp
sbb
pop
pop
aam
push
outsl
jb
imul
outsb
jmp
jmp
iret
dec
adcb
jmp
and
nop
mov
sbb
out
add
adc
push
push
push
push
clc
dec
jmp
jbe
out
jle
in
jne
fimuls
out
ljmp
sub
add
cmc
jns
add
ret
mov
inc
inc
pop
sahf
add
add
dec
insl
push
xchg
jb
popa
dec
adc
xor
frstor
inc
or
outsl
cltd
cmpsb
adc
mov
jl
test
jae
mov
cmp
nop
xchg
sti
add
loope
jns
push
shll
sahf
jnp
cmpl
insl
dec
es
adc
push
add
cmp
push
dec
sarl
push
je
cmpsl
push
or
cli
push
cmpsb
aad
js
inc
pop
add
lret
add
mov
ljmp
push
sbb
das
inc
adc
xchg
stos
adc
nop
cmp
adc
pop
jo
cmpsl
repnz
clc
sub
jnp
mov
mov
sarl
mov
cmp
or
rol
test
adc
sbb
mov
jae
xor
inc
push
add
stos
jae
enter
or
lahf
xor
sub
xchg
fisubrs
adc
test
and
xchg
aas
add
stc
fadds
or
dec
aaa
pop
inc
mov
out
inc
add
addl
and
data16
popf
xlat
push
ja
test
outsl
or
lock
sbb
push
or
push
rorb
pop
dec
gs
mov
call
sbbb
sbb
ret
pop
push
push
pop
pop
cmp
or
cmp
sbb
mov
sub
je
inc
nop
mov
jl
dec
jge
insl
rorl
or
and
xor
aad
inc
sar
in
sub
adc
inc
mov
and
add
sub
push
inc
or
faddl
adc
adc
pusha
inc
fcompl
xor
sbb
inc
jmp
mov
in
movsb
lock
sub
fstpl
add
sub
enter
cld
mov
xor
cmpsb
push
push
add
xchg
ret
lods
shlb
adc
pusha
or
push
add
sub
pop
sbb
or
or
aas
fdivl
pop
or
out
add
dec
loop
ljmp
xchg
insl
or
dec
ret
sbb
dec
fs
xchg
or
adc
and
add
mov
dec
pop
xchg
and
dec
inc
fstpl
sub
mov
stos
push
mov
inc
ljmp
adc
inc
push
or
mov
sub
fimull
jo
jle
add
jo
push
cmp
test
jae
sub
cwtl
xor
sarl
jmp
pop
inc
jne
fisubs
sbb
inc
and
mov
pop
lock
sbb
sub
mov
test
and
or
out
adc
rorb
hlt
add
shlb
mov
sub
pushf
dec
or
je
test
rcrl
mov
sbb
movsb
outsb
inc
rcll
xchg
mov
dec
push
fcomip
push
dec
mov
and
mov
and
inc
add
shlb
daa
sbb
int3
enter
ret
and
sub
sub
pop
ret
iret
xor
out
ret
xor
inc
inc
daa
mov
je
inc
pop
add
inc
mov
mov
mov
inc
fs
enter
or
inc
add
jmp
xchg
xor
mov
push
add
notb
mov
sbb
mov
and
xor
daa
push
mov
dec
cmpsb
pop
push
and
push
and
dec
add
push
fsubrs
jp
in
sbbl
in
pop
pop
insl
dec
mov
mov
fs
add
mov
sbb
daa
mov
es
and
imul
sbb
xlat
push
jo
lock
pop
ret
dec
ret
stc
cmpsb
xor
mov
pushf
push
pop
mov
test
rcl
mov
jmp
loopne
jecxz
add
inc
aam
lea
imul
xchg
dec
les
stc
mov
xor
cli
mov
jge
movsb
or
xchg
mov
call
loop
adc
push
fcomps
test
add
or
inc
add
repnz
jb
and
add
dec
push
cmp
or
test
add
fidivl
mov
mov
jl
xor
xor
imul
xor
movsb
xchg
xchg
mov
sarl
lcall
push
clc
pop
fwait
xor
mov
jecxz
or
fmul
add
push
ljmp
inc
outsl
or
pop
pushf
sbb
aas
movb
xor
inc
jae
or
outsb
add
sub
cmp
sarl
dec
fwait
xor
add
adc
xchg
push
jecxz
cmpsb
lods
add
sub
les
nop
mov
enter
imul
push
loop
mov
testl
inc
adc
add
push
mov
xor
or
xbegin
leave
inc
les
cmp
push
adc
sub
or
sbb
jnp
pop
add
mov
mov
sub
dec
je
push
in
shlb
subb
div
inc
and
and
and
imul
aam
adc
mov
test
inc
shrb
jg
adc
mov
into
add
daa
int3
xchg
cltd
push
aam
imul
lea
mov
mov
push
imul
add
pop
adc
inc
or
popa
lods
and
idiv
out
add
out
sub
mov
outsl
cmp
push
xlat
mov
loop
inc
xlat
jl
xchg
xor
rorb
dec
pop
test
dec
shll
lea
jg
shll
bound
adc
cmp
lcall
sarl
mov
push
inc
add
outsl
pop
jbe
sbb
push
dec
pop
test
push
dec
add
lcall
lea
les
xchg
pop
push
mov
or
pop
inc
cmp
adc
jae
add
pop
adc
lahf
xchg
mov
sub
imul
xchg
imul
pop
sub
pop
sbb
leave
sbb
pop
sbb
rclb
adc
scas
add
push
and
adc
adc
and
fsubrs
add
add
leave
aam
xchg
lock
and
pop
fisubrs
addb
mov
and
test
push
jae
pusha
enter
outsb
dec
aaa
out
dec
aas
inc
enter
add
mov
call
ret
and
sub
inc
push
adc
js
cmpl
push
addl
push
testl
jmp
mov
cmp
je
push
std
js
push
push
push
and
or
xor
lahf
daa
add
inc
fsubrl
or
orl
push
push
or
sarb
push
addr16
xchg
push
lahf
mov
aaa
pop
jl
lret
enter
mov
pop
push
decl
adc
lret
in
push
lods
xor
push
dec
inc
push
push
push
inc
sub
jecxz
inc
jno
pop
push
mov
bound
xor
push
or
jo
mov
sub
daa
jb
pop
adc
add
add
or
or
cmp
adc
push
lods
pop
add
mov
add
jle
jp
cmpsb
sbb
mov
xor
inc
shrb
mov
sub
imul
or
out
test
ror
jns
xchg
cwtl
leave
inc
xor
ret
sbb
push
mov
and
xchg
insb
sbb
js
xor
pop
sti
flds
aad
les
and
dec
fisttpl
or
push
jge
decl
call
xchg
xor
jg
sarb
sub
jb
push
and
test
xchg
lret
mov
mov
call
jo
int3
push
jo
and
adc
sarl
outsl
pushf
aaa
cmp
sbb
sbb
insl
sbb
mov
or
test
ret
xor
popa
psubb
adc
shrb
in
push
ffree
push
lea
out
push
xchg
adc
cmp
mov
call
sub
or
sbb
mov
subl
and
fdivs
push
push
adc
sbb
xchg
add
mov
call
in
cwtl
and
out
test
in
and
add
inc
nop
adc
mov
aaa
test
and
cmpsb
pop
dec
dec
add
mov
in
xchg
push
in
xor
pop
or
dec
adc
push
lds
out
imul
nop
push
mov
add
inc
jmp
je
or
or
cmp
enter
adc
mov
leave
dec
jl
mov
in
mov
cs
inc
push
add
mov
cltd
push
addl
mov
ret
jb
fldl2e
push
pop
adc
lcall
and
cmp
or
call
mov
cmp
negb
pop
inc
pop
jle
and
decl
incl
int
cld
or
jle
jle
push
mov
mov
pusha
push
push
mov
and
pop
jae
push
adc
push
mov
jmp
decl
shll
je
or
test
test
pop
mov
fldt
xor
inc
mov
lods
mov
movsl
scas
add
push
adc
mov
inc
add
mov
pop
dec
loope
dec
repz
xchg
int3
add
fbstp
pop
add
lods
mov
sbb
dec
fs
cmp
enter
sub
fisubrs
pop
dec
push
cltd
jbe
daa
push
adc
mov
aam
adc
or
fs
adc
adc
jns
mov
and
dec
sbb
fsub
add
adc
and
insb
push
xor
nop
orl
or
inc
sbb
xchg
aas
inc
dec
or
or
pop
ss
push
jnp
or
add
leave
mov
daa
push
add
xchg
imul
and
fsubl
add
add
push
insb
loope
cmc
loop
pop
cmp
popf
repnz
fldenv
xor
jae
scas
addr16
leave
add
xor
xor
cs
xchg
pop
leave
sub
xchg
pop
sub
sub
es
xchg
pop
leave
and
mov
and
mov
and
dec
scas
in
push
sbb
sbb
sbb
mov
xor
inc
ret
pop
add
adc
pop
push
lahf
mov
and
push
jecxz
sbb
mov
pop
and
dec
orb
push
test
push
scas
leave
leave
dec
dec
adc
and
rolb
xchg
adc
daa
daa
pop
adc
ds
mov
adc
add
in
in
push
movsb
push
push
in
or
add
jbe
jb
mov
js
jmp
aas
or
pop
sub
imul
cmp
cmp
sub
imul
imul
add
add
sbb
es
es
mov
mov
xchg
lret
sbb
dec
bound
xor
pop
addr16
mov
aas
pop
add
lock
es
xor
and
mov
loope
jl
mov
push
mov
or
xchg
push
push
or
or
shlb
dec
add
add
or
cmp
ret
fimull
lods
adc
in
nop
loopne
sub
xchg
and
cmp
in
cmp
sbb
rolb
push
pusha
pusha
xor
inc
jle
sarb
js
add
push
mov
and
lret
das
xor
in
je
push
lret
je
cld
imul
fadds
lock
jmp
inc
aam
and
fcoml
sbb
and
ja
xor
adc
mov
sub
mov
mov
test
mov
and
je
dec
data16
pop
mov
sti
ljmp
inc
mov
xor
or
fnstcw
push
enter
shlb
enter
imul
pop
sti
js
mov
ret
mov
sub
test
lcall
mov
dec
push
mov
int
sbb
inc
xor
pop
xor
inc
xor
xchg
pop
fs
cltd
or
push
dec
sub
pop
xchg
rclb
mov
lock
jmp
int
je
fld
jnp
lds
jo
adc
or
int3
pop
adc
nop
lcall
int
dec
sub
pop
insl
jl
test
inc
sbb
push
loopne
add
jo
jno
push
dec
or
inc
les
movsb
inc
rorl
cwtl
sub
and
sbb
test
mov
xorl
inc
insb
test
clc
mov
add
xchg
and
pop
sbb
divb
adc
loopne
push
not
imul
xor
add
pop
daa
in
mov
jl
mov
inc
inc
or
fimuls
jne
loopne
push
push
rcr
xor
sub
mov
lea
cltd
popf
mov
movsb
ror
ret
lods
dec
cmpsb
add
fmuls
cmp
sub
idivl
add
out
sub
test
cmp
cmp
mov
mov
mov
push
jbe
or
mov
aad
sbb
loopne
sub
xchg
inc
or
div
repz
xor
xor
push
push
push
in
xchg
mov
inc
xchg
bound
int
stos
pop
and
rcll
shll
push
or
dec
or
dec
push
sub
imul
rcrb
jae
xor
es
adc
jmp
cmp
mov
dec
jo
mov
pop
lea
mov
jle
aaa
dec
js
imull
sbb
jl
mov
jmp
pop
dec
shr
inc
cmp
or
aas
sub
data16
lods
sbb
repnz
inc
pop
fs
jg
std
mov
push
add
inc
dec
fsubrp
adc
sub
xor
leave
dec
pop
aaa
mov
pop
mov
jle
cmp
xchg
fistpll
pop
jmp
dec
call
jbe
and
clc
dec
pop
ss
daa
mov
js
scas
cmp
sub
cli
cmp
lock
hlt
mov
dec
add
cld
ss
or
push
fs
inc
adc
jmp
and
je
cmp
push
popf
cmp
inc
and
jb
add
push
mov
or
dec
jge
pop
xchg
adc
test
xor
push
rol
sbb
inc
push
cmpsl
test
push
adc
push
ret
mov
xor
inc
movsb
jge
or
fnstcw
pop
and
dec
shrb
add
test
shr
xchg
lea
lea
pushf
cmp
and
jo
fmull
insb
jns
dec
push
pop
push
and
lods
sarl
cmp
or
mov
lcall
jp
pushf
nop
mov
push
mov
inc
lcall
imul
xor
xor
or
xor
xchg
adc
imul
push
push
enter
lret
leave
rorb
adc
dec
cmpb
xchg
lock
add
lock
cmp
mov
jl
cmp
jg
push
jae
outsl
jmp
shrb
outsl
xchg
das
dec
pop
or
push
mov
fs
mov
xor
push
push
je
push
imul
and
les
pop
inc
aad
dec
lea
jne
pop
int3
nop
pop
push
cmpsb
mov
das
jmp
cmp
jnp
add
or
cmp
pop
adc
xchg
insl
negl
icebp
jg
and
mov
push
mov
iret
add
test
dec
shlb
je
fcmovu
shll
movb
dec
mov
pop
mov
pop
and
and
push
outsl
outsl
pop
sub
lock
push
and
ret
lea
scas
lcall
or
dec
mov
inc
or
cmp
xor
mov
mov
into
std
sbbb
lea
sti
fldenv
mov
mov
in
inc
cmp
xchg
imul
dec
sub
push
or
imul
mov
ret
adc
push
sbb
ficompl
xchg
shlb
adc
push
adc
pop
push
add
or
push
clc
and
pop
adc
push
sub
jl
cmp
cli
jle
mov
adc
fistpl
jae
jle
sub
jge
shlb
add
adc
sahf
test
popa
sub
lcall
or
mov
jb
dec
rcll
addb
xchg
and
sbb
or
push
stos
pusha
into
imul
and
imul
imul
xchg
test
loop
inc
mov
mov
fldenv
dec
inc
data16
cmpsb
imul
push
pop
push
out
or
pop
sub
imul
jl,pt
or
xor
pop
pop
or
testb
icebp
pop
movl
adc
cmpsb
mov
or
or
xor
cmp
mov
fmul
filds
lods
sbb
test
xlat
or
loopne
pop
push
pop
xor
jae
or
cmp
cmp
add
je
add
xchg
notb
cs
shr
inc
iret
push
pop
pop
add
add
mov
pop
inc
lea
and
fmul
sub
push
fiaddl
orb
movswl
ret
or
enter
push
data16
cltd
dec
ja
and
adcl
pop
cmp
test
mov
push
daa
orb
je
cwtl
ljmp
cmp
fstl
push
mov
cmp
cmp
jne
xchg
push
cmp
adc
add
shlb
pop
jns
mov
hlt
xor
jae
pop
add
dec
pushf
adc
frstor
int
cmpb
sbbl
xor
aaa
add
or
mov
pop
testl
dec
sbb
ljmp
aaa
jno
xchg
xchg
pusha
int3
adc
xchg
mov
mov
adc
outsb
xor
and
jg
testb
sub
lahf
lahf
sbb
aaa
movsb
jb
pop
mov
push
mov
adc
fs
or
sub
pop
jns
mov
iret
add
es
adc
lods
test
test
push
int
adcb
mov
adc
xor
mov
test
enter
dec
xchg
fisubrs
rclb
mov
xchg
mov
dec
lds
test
inc
add
imul
popa
mov
insb
xorb
aad
inc
sub
rol
sbb
dec
mov
fildll
adc
fistps
sbb
int
mov
addl
rorb
popa
pop
jle
push
push
add
les
push
cmp
mov
ror
inc
je
fldenv
pop
xor
mov
and
dec
js
notb
pushf
ret
and
or
mov
inc
dec
pop
dec
dec
adc
adc
and
lea
sub
push
add
into
addr16
and
xorb
pop
cmp
dec
inc
stos
and
adc
js
pop
es
sbb
cmpsb
jge
fstpt
push
lods
add
or
call
push
or
sbb
add
push
mov
jl
push
cmp
jg
fdivrs
or
test
sbb
sub
push
push
xchg
push
int3
jne
push
cmp
mov
push
jl
mov
int
sbb
inc
sarl
or
je
cmpsb
insb
add
std
or
jle
es
sub
insb
pop
mov
push
push
or
xchg
lods
les
jg
cmp
or
das
push
inc
in
pop
push
js
or
test
or
pop
xlat
push
insl
lock
inc
ds
push
push
subb
jl
sub
rolb
xor
imul
add
inc
ljmp
cmp
push
movsb
pop
sub
push
xor
add
sbb
sbb
push
pop
lds
imul
xor
call
loope
mov
test
jle
cmp
dec
pusha
fs
adc
push
push
lret
bound
inc
sahf
and
into
jbe
sub
sarb
add
pop
jl
mov
dec
dec
cmp
push
inc
ret
inc
mov
push
or
add
les
pop
ret
xadd
jg
pop
push
icebp
or
call
fxch
add
cmp
and
popa
mov
mov
or
xchg
sbb
shll
les
mov
pop
clc
test
test
ss
push
adc
sbb
xor
aad
cltd
mov
lret
and
cs
push
adc
mov
das
add
pop
push
jno
js
aaa
cmc
mov
and
sub
add
mov
mov
pop
jo
clc
sub
add
pop
push
mov
fsubr
xchg
fsubs
xor
mov
mov
cld
dec
testb
xchg
xor
push
mov
xchg
xchg
push
fs
pop
pop
jns
pop
add
lret
movsl
subb
mov
pop
xor
das
jmp
sub
test
sbb
jecxz
inc
pop
inc
std
jl
sub
push
mov
repz
mov
and
dec
or
add
push
and
xchg
pop
mov
mov
sub
push
mov
imul
adc
pop
sbb
rcrb
nop
sbb
or
nop
out
and
and
fdivrl
or
aas
adc
xor
iret
rcr
sub
cmp
sub
pop
nop
addr16
cmp
es
jl
sbb
test
nop
and
or
sub
in
adc
inc
fs
sahf
dec
and
sbb
insb
push
mov
cmp
inc
push
pop
cmp
fistpll
or
push
in
cmp
addb
int3
xor
sti
dec
imul
daa
cmpsl
icebp
movsb
xor
add
mov
mov
fcomps
mov
stos
and
and
dec
xlat
les
or
mov
and
mov
rep
fldl
lods
aam
dec
cmp
add
and
mov
enter
mov
mov
or
adc
add
inc
mov
or
rcll
das
push
es
rclb
pop
cli
data16
imul
movsb
or
jl
cmp
dec
mov
aaa
add
faddp
jl
ret
popa
arpl
jecxz
enter
mov
rcl
cmp
fcompl
sbb
lcall
add
fsubrl
or
jmp
sbb
addl
sub
ret
push
pusha
lods
mov
sbb
pushf
dec
or
lret
jg
inc
es
fsubrl
add
dec
pop
pop
cmc
mov
sahf
les
pop
and
jnp
dec
into
push
pop
cld
adc
dec
and
dec
pop
add
xor
sbb
xor
adc
and
sbbl
xchg
fwait
push
pop
and
sbb
imul
loopne
rcll
mov
dec
jns
xor
cmpsb
cmpsb
sbb
sub
sbb
ss
or
icebp
outsl
hlt
mov
loope
sbb
std
mov
jl
mov
mov
add
jge
push
je
mov
popa
inc
std
lcall
inc
push
pushf
pop
xor
rorl
add
jb
adc
or
insl
or
lahf
ljmp
xor
pusha
pusha
add
jge
enter
or
sahf
fwait
loopne
add
mov
lods
sub
add
xor
add
fs
es
loopne
jbe
pop
cmp
jmp
mov
jge
scas
das
je
dec
cmp
pop
jae
lods
out
nop
sbb
mov
adc
push
lea
fldcw
mov
add
or
or
cmp
dec
mov
sti
je
jns
or
jge
ljmp
dec
mov
in
cltd
cwtl
xchg
jns
sub
mov
dec
test
mov
pop
inc
mov
cmpsl
pop
sub
fmull
push
test
je
cmp
loopne
dec
adc
cmp
test
xor
add
and
mov
fdivs
push
mov
sbb
mov
les
push
cmp
movsb
cmpsb
mov
or
pushf
test
nop
std
test
js
dec
xchg
dec
arpl
test
xchg
xchg
mov
adcl
xchg
je
and
cmpsb
mov
sbb
inc
adc
push
outsl
jno
pop
mov
adc
sbb
xchg
xchg
sub
push
push
in
cs
mov
imul
cmp
shll
repz
jnp
test
fisubs
or
js
inc
and
or
xor
cmp
jo
aas
pusha
mov
inc
push
pop
out
jge
push
jne
enter
clc
insb
sarl
dec
dec
lea
nop
ret
pop
push
in
insb
shll
cwtl
push
sbb
roll
lods
sti
sbb
mov
into
xor
pushf
xor
shrb
inc
fisttpll
or
call
adcb
add
inc
pop
mov
and
fcomps
subb
das
add
sbb
dec
in
cmp
inc
mov
pop
adc
sub
mov
icebp
dec
out
ss
mov
hlt
popf
cmp
xchg
das
inc
fs
jae
or
test
adc
in
pushf
je
or
or
adc
inc
push
and
xor
xor
xor
dec
or
rorb
xchg
out
add
mov
or
stos
push
aaa
test
js
in
cmpps
xchg
xchg
add
mov
push
pop
loope
adc
ds
xchg
dec
aam
dec
inc
cmpsb
pusha
mov
insb
test
and
push
xchg
push
or
jbe
nop
cmc
cs
adc
push
fiadds
shrb
js
sahf
rcrb
pop
xor
jo
loop
decl
lds
fwait
mov
push
and
mov
in
div
add
dec
push
jge
fists
pop
inc
jl
add
mov
loop
mov
xor
or
cltd
sub
xchg
or
test
adc
test
mov
insl
dec
inc
dec
nop
cmpsb
imul
loope
and
push
push
sbb
mov
jae
nop
inc
sub
stos
and
dec
and
pop
pusha
iret
pop
or
pop
fldenv
aad
stc
dec
lret
dec
cmp
pop
xor
inc
push
cwtl
gs
adcl
and
lea
mov
dec
adc
xor
jl
inc
push
scas
mov
inc
cltd
mov
mov
clc
test
clc
mov
mov
fs
push
ffree
rol
jo
mov
divl
cmpsl
inc
cmp
inc
clc
cmpb
sarb
fmul
xchg
sbb
xchg
test
in
testl
movsb
adcb
js
pusha
or
lahf
jo
push
adc
mov
sub
mov
es
decl
sbb
sbb
xchg
sbb
cltd
int
jo
fidivl
loopne
push
adc
mov
pushl
js
pop
pop
test
mov
mov
jmp
inc
rol
push
int3
or
pop
inc
mov
or
repz
cmpsl
jp
popf
or
pop
push
push
jnp
jbe
data16
cwtl
jbe
mov
rorb
lods
xor
shrb
bnd
andb
push
or
lcall
loop
push
push
cmp
cwtl
xlat
aaa
adc
cmp
xchg
mov
cmc
adc
xor
inc
sbb
add
mov
add
in
loope
mov
or
outsb
xor
xchg
sbb
popa
inc
js
jns
movsb
fnstenv
repz
lret
jns
push
lea
rcrl
push
sbb
xchg
push
lret
xchg
sbb
push
and
sub
sbb
push
push
inc
filds
jno
rcl
inc
stos
mov
mov
rolb
sub
cmp
sub
dec
rcrb
sti
push
mov
add
adc
mull
jae
imul
add
inc
pop
lcall
sahf
pushf
mov
push
js
call
loop
pop
cmp
andb
xorb
push
popa
mov
rorb
aad
cwtl
lds
test
push
pusha
mov
xchg
scas
sbb
push
push
push
push
mov
mov
into
bsr
pusha
adc
jg
jns
stc
icebp
imul
mov
jbe
jns
xchg
adc
cmp
cmp
lcall
push
xlat
push
inc
inc
pop
sbb
and
dec
push
fsubs
ret
fisubl
xlat
notl
loopne
add
xchg
xchg
sub
mov
cltd
xchg
and
imull
dec
pcmpeqd
push
sbb
shll
sub
xor
push
mov
lds
cmp
js
push
std
ja
lret
pop
push
iret
cmpsb
mov
inc
lds
jb
adc
ret
pop
dec
adc
xor
inc
mov
jl
sbb
add
jge
dec
sti
ljmp
dec
push
loopne
and
pusha
mov
aam
cmp
pop
inc
xchg
je
jp
rcll
mov
aam
fwait
insl
std
and
push
pop
sub
leave
rcrl
push
lcall
or
test
pop
mov
adc
dec
sub
in
fisttps
push
in
gs
xchg
mov
jp
xor
push
subb
push
or
pop
test
imul
int3
jne
inc
mov
mov
sbb
add
lea
cmpl
sbb
and
out
inc
fsubr
call
xchg
cmp
push
out
jmp
dec
jbe
or
xchg
cmp
or
xchg
jo
mov
or
ljmp
dec
fstpl
inc
dec
cs
inc
sub
or
aas
imul
data16
push
pusha
cmp
test
cs
nop
pusha
aas
test
and
jmp
and
dec
jl
inc
adc
movsb
lea
and
rcrl
and
jnp
dec
cmp
and
repnz
sbb
mov
adc
cmp
data16
xchg
jle
xchg
mov
inc
push
lods
cmp
shlb
xchg
push
push
sub
mov
xor
dec
push
test
jno
jns
pop
push
repz
hlt
loopne
fwait
jne
push
mov
ds
jl
gs
mov
cmpsb
mov
fdivrs
cmp
dec
lahf
inc
push
icebp
shrb
leave
adc
jo
inc
add
inc
cmp
mov
imul
dec
pop
fmull
inc
iret
adc
dec
mov
mov
push
insb
test
mov
mov
jae
and
inc
push
and
js
xor
add
or
lock
xor
sbbb
add
add
push
test
dec
jg
shr
pop
cmp
aas
push
ret
xor
sbb
dec
shl
mov
nop
loope
push
jmp
pop
test
push
rorb
fs
push
dec
sub
pop
pop
jmp
fdivrs
dec
iret
add
orb
insb
lds
inc
xchg
lret
xchg
push
in
pop
add
mov
adc
inc
mov
jne
arpl
add
push
cmp
pop
pop
fs
xchg
cltd
mov
lahf
push
cltd
clc
push
cltd
in
cltd
mov
jns
mov
pop
in
cmpsl
jnp
pop
jne
adc
mov
add
pop
nop
enter
inc
mov
jl
mov
push
inc
outsl
add
cmp
push
push
jle
nop
outsb
mov
push
popa
mov
mov
mov
stos
daa
or
adcl
and
add
push
outsl
add
es
add
sbb
lock
and
pusha
aas
xor
mov
mov
mov
adc
ja
xor
or
inc
sbb
xor
adc
jo
push
adc
enter
or
stc
push
leave
movaps
fs
sti
xor
mov
outsb
outsl
or
sbb
sbb
add
sbb
movsb
popf
rorl
pushf
mov
and
sbb
fldl
sub
or
jae
pop
cltd
jae
add
xchg
aaa
mov
adc
mov
movsb
das
pop
aas
cmpsb
icebp
lea
add
or
test
or
push
push
dec
pop
add
sti
lods
xlat
xor
je
push
sub
dec
sub
lods
mov
inc
call
mov
add
insb
sbb
xor
in
xor
push
call
pushf
mov
adc
add
leave
enter
mov
movsb
pop
outsb
gs
test
dec
sub
or
sub
lcall
lret
inc
test
shrb
mov
xchg
movsb
xlat
mov
dec
push
cmp
push
fisttpll
push
cwtl
cmpsb
into
push
push
in
aaa
pop
sahf
or
or
loope
sbb
or
dec
sbb
push
pop
mov
add
jl
push
cltd
jp
cmp
sub
inc
jne
cld
xor
cwtl
mov
push
js
popa
xor
sub
ficompl
iret
sbb
scas
dec
call
and
dec
cmp
jne
js
cmp
icebp
sub
lods
gs
in
jno
push
or
mov
lea
sbb
pop
add
mov
int
leave
dec
push
int
scas
cmp
sahf
inc
lods
push
ljmp
add
dec
push
ret
sbb
xchg
mov
into
lret
jmp
mov
xchg
mov
adc
rclb
and
push
add
shrb
adc
jb
sarb
sbb
mov
push
push
mov
add
mov
movsb
call
push
leave
out
push
pop
dec
inc
add
push
pop
sub
inc
adc
sbb
dec
xor
fidivrl
push
orl
dec
add
sahf
inc
lods
insl
rcll
sub
aas
call
push
and
lods
call
adc
xchg
adc
or
push
outsl
lock
and
inc
nop
mov
sbb
int
mov
and
aas
mov
insb
push
repnz
jge
or
notb
js
inc
dec
fs
shr
adc
ret
or
mov
cmp
push
sbb
push
jmp
cmp
push
dec
dec
inc
sbb
mov
and
or
sub
stos
lea
pop
ss
mov
cmp
cmp
jne
jb
rcrb
pop
pop
dec
insb
cmp
adc
cmp
dec
rolb
adc
shlb
mov
or
push
add
mov
out
xchg
inc
jle
pop
push
mov
pop
or
adc
fwait
mov
add
lds
andl
pop
jg
cmp
insb
jns
aam
push
movsl
cmp
mov
dec
xlat
xchg
dec
dec
dec
cmp
rcl
fs
push
movb
mov
or
xor
mov
and
sub
es
jg
test
sbb
jns
ret
xchg
sbb
pushf
mov
mov
mov
and
inc
das
rclb
sbb
pop
rcrb
nop
sbb
xlat
and
pop
adcb
ss
adc
rorl
repz
mov
lret
sbb
and
jne
cmp
mov
aam
push
outsb
push
rclb
push
jge
push
xorb
bound
aas
call
pop
sbb
fcmovnb
cmp
int3
cmp
out
insl
loop
pop
frstor
shrb
inc
add
lcall
clc
mov
je
pop
xchg
push
pop
mov
push
jg
sub
movsl
pop
scas
fs
or
insb
and
inc
cmpl
cwtl
lret
add
mov
cmp
push
lods
test
icebp
mov
or
insl
mov
testb
sbb
inc
push
push
push
fisttpll
mov
push
lea
push
mov
mov
loopne
mov
lea
iret
rorl
sbb
mov
aad
xor
dec
and
sbb
in
mov
xchg
arpl
adc
pop
or
loope
xchg
les
cmp
mov
push
mov
imul
sbb
iret
je
dec
inc
adc
mov
jle
rolb
push
mov
or
test
aaa
loop
shrl
imul
dec
adc
push
add
and
mov
adc
mov
and
or
rorb
mov
xor
enter
pop
das
dec
scas
fidivs
pop
cmc
lret
xlat
pop
test
sbb
add
sbb
or
push
mov
add
sub
or
mov
enter
xchg
les
pop
rclb
adc
dec
shll
jo
arpl
popa
jno
out
jl
sub
mov
jg
iret
sti
adc
clc
ret
jmp
push
add
sub
xor
pusha
int3
out
xor
pusha
or
test
or
js
aad
sti
movsb
xor
call
push
call
ljmp
rolb
push
cmp
fdivrs
std
test
cmp
or
bswap
dec
int3
out
enter
push
adc
xor
std
pusha
adc
lret
mov
loop
mov
adc
cmp
iret
sub
imul
xlat
test
mov
daa
jns
or
mov
je
or
adc
push
dec
adc
jmp
fwait
or
faddl
pop
and
nop
lahf
rclb
insb
loope
shrl
dec
hlt
cmp
or
and
inc
inc
pop
sbb
ret
ret
dec
pop
lea
push
push
sbb
dec
sti
mov
dec
lods
gs
add
out
imul
inc
cmp
popa
cltd
add
addr16
mov
jns
ret
loopne
dec
ljmp
sbbl
scas
jl
jne
sbb
inc
sbb
popa
stos
push
push
adcl
inc
xchg
push
cmp
mov
mov
mov
xchg
adc
sbb
and
shrb
fstps
ja
ljmp
push
ret
fcomip
mov
test
or
adc
outsl
and
repnz
cmp
dec
inc
dec
xchg
imul
ja
aaa
sub
clc
dec
imull
clc
incl
subl
insl
clc
rol
jge
adc
mov
sub
pop
lcall
add
push
push
dec
sub
push
xchg
add
jl
nop
mov
xchg
dec
sub
loope
inc
call
inc
xchg
xor
cmp
jae
enter
jmp
inc
lahf
pop
xchg
mov
fldpi
jge
xchg
adc
dec
movsl
sub
test
je
adc
es
sbb
imul
jecxz
fwait
aas
cmp
cmpsl
push
clc
and
jae
lcall
cmp
adc
in
jge
call
mov
cmp
aad
clc
test
stc
jb
jge
jl
mov
int
in
add
add
out
inc
jl
jmp
jle
push
and
jge
sbb
test
adc
mov
mov
push
lds
mov
xchg
mov
sub
and
daa
cmp
adc
push
or
mov
mov
pop
outsl
nop
cmp
add
xor
fisttps
add
push
xchg
pushf
or
add
andb
mov
ret
ljmp
pop
jg
insl
lods
mov
push
test
pop
call
and
adc
cwtl
ret
lcall
mov
in
add
inc
dec
js
int
js
shrb
dec
mov
adc
lock
js
and
add
dec
repnz
pop
rclb
push
xchg
cmp
in
mov
xchg
ficompl
adc
cs
sti
adc
inc
inc
out
jo
js
add
jne
jns
pop
jne
scas
sbb
pop
mov
dec
ljmp
and
mov
test
adc
inc
jo
jae
mov
sub
adc
es
cmp
imul
rclb
xor
andl
xor
and
push
jl
sub
mov
roll
imul
sbb
mov
mov
mov
test
xchg
sbb
rcll
test
jmp
loop
mov
test
push
push
out
sbb
jne
sbb
mov
ja
adc
js
push
cmp
cmc
lods
sub
dec
push
and
or
mov
test
pop
adc
and
pop
sub
sbb
into
push
xlat
mov
fldl
mov
mov
xchg
addl
push
loop
push
out
and
imul
or
sub
rolb
les
jle
sub
push
adc
xor
or
push
sbb
pushf
fnstcw
insb
mov
or
and
lea
mov
enter
aam
pusha
rol
scas
cmc
sub
push
push
xchg
mov
mov
push
mov
sbb
pop
sbb
xor
lea
clc
push
or
testb
xchg
repz
jmp
jp
inc
inc
pop
jno
mov
or
cmpb
sbbb
in
sub
or
sbb
mov
mov
dec
mov
test
push
dec
addb
or
mov
roll
sub
or
rcll
je
je
jle
lods
xor
add
add
movsl
or
pop
or
push
add
xchg
popf
hlt
cmp
jl
push
jmp
mov
inc
ret
push
sbb
fcmovnu
imulb
arpl
pop
dec
xchg
test
pop
loope
outsb
gs
sub
arpl
iret
sub
cmpsl
or
sbb
sbb
sbb
cmpsl
and
sbb
aaa
inc
sub
add
js
xor
mov
jne
xlat
fldl
mov
xchg
cmp
jp
push
subb
mov
je
or
push
or
fwait
inc
push
add
incl
decl
jne
mov
arpl
or
mov
and
aas
adc
pop
or
cmp
jo
or
jmp
or
or
pop
adc
sub
push
sub
push
adc
sub
sub
push
add
cmp
inc
mov
dec
rol
enter
cmpsl
ret
iret
int3
mov
test
lret
mov
push
add
push
jb
icebp
push
es
push
pop
jno
sub
insb
sahf
adcb
add
call
outsl
rolb
cmp
jae
loopne
enter
push
dec
or
pop
adc
subb
fsubrl
rcll
sbb
xor
xchg
cmp
sbb
call
int3
imul
pop
jo
jne
js
fwait
ret
xor
mov
xchg
pop
pop
testb
mov
shlb
movsl
and
nop
sub
lock
js
loop
xchg
sbb
push
insb
test
movsb
repz
sti
cmp
mov
or
les
sbb
or
lret
xchg
ja
push
sarb
and
in
mov
mov
or
rcrb
mov
stos
or
rcll
adc
sbb
xchg
sub
add
leave
rolb
hlt
jmp
or
mov
lcall
repz
xchg
and
into
jo
rclb
int3
xor
fiaddl
and
int3
sarl
inc
sub
xchg
movsl
xchg
mov
pusha
je
fnstsw
mov
jo
sub
jl
sbb
loopne
jne
fstl
fcomp
inc
mov
or
ds
add
push
xchg
in
add
je
jl
push
inc
jns
mov
sbb
add
sbb
push
pop
xchg
or
les
cwtl
add
rclb
add
fcomps
movsb
fdivs
sub
movsb
out
and
sbb
aaa
xchg
xlat
or
pop
inc
or
and
cmp
push
push
add
test
push
cmp
mov
xchg
push
cmpsb
fs
or
cmp
mov
push
std
jae
test
into
push
dec
push
test
aas
and
mov
xor
add
test
or
cld
mov
test
xor
adc
gs
mov
and
data16
stos
inc
jo
and
mov
jo
and
test
sbb
stc
push
or
mov
mov
mov
pop
es
shll
jne
xor
xor
mov
cs
jne
xchg
jne
lahf
xor
ret
cld
mov
pop
xor
hlt
test
jb
cmp
mov
fwait
pop
jl
sbb
aad
pop
enter
add
int3
push
bound
je
push
mov
xor
and
clc
clc
adc
pop
jecxz
iret
mov
add
pop
lcall
or
mov
sub
es
mov
rclb
xor
mov
lock
ret
stos
cmpsl
mov
loopne
sbb
ds
jb
shrb
imul
dec
pop
js
jno
add
xorl
dec
lods
ret
push
xorb
adc
sti
aas
divl
sub
pop
test
idiv
push
cmc
and
rolb
sbb
mov
loope
push
ret
adc
pop
push
imul
sbb
mov
je
and
or
jnp
mov
push
adcl
mov
sbb
in
fistl
scas
adc
xor
add
mov
cmp
dec
mov
jl,pn
xor
insb
popa
mov
das
add
push
data16
add
jg
lahf
jne
add
pop
sbb
in
test
sbb
dec
ret
dec
xchg
dec
mov
xor
dec
cmc
pop
jo
stos
mov
addb
xor
outsb
push
cmp
lret
je
push
iret
pop
push
add
jb
loope
and
les
aam
or
jb
jo
lahf
and
loop
nop
rcr
pop
out
ljmp
push
pusha
adc
loope
or
cmc
and
popf
fdivs
dec
dec
push
roll
fcomip
push
sahf
andl
xor
push
or
fsubr
or
adc
in
rorb
inc
rcrb
xchg
cmp
ja
pusha
inc
dec
push
sub
and
shl
popl
xor
mov
mov
xor
movsb
or
hlt
push
les
jmp
xchg
adc
cmpsl
movsl
add
stos
or
push
mov
and
mov
pop
add
pop
rcrl
jmp
inc
xchg
aad
out
add
or
xchg
adc
sub
or
test
add
push
adc
add
push
sbb
mov
sahf
not
jo
jae
jge
jns
inc
aas
add
or
push
or
adc
aas
cmp
jnp
or
sbb
pop
out
or
cmpsl
inc
mov
add
movsb
movsl
mov
fsubrl
scas
icebp
adc
mov
add
push
movsl
add
aam
sub
add
mov
xor
push
inc
pusha
sub
test
add
addr16
add
gs
cmp
jae
cmp
scas
in
lods
push
fwait
int3
xor
ljmp
outsl
test
and
shrl
jl
cmp
jl
cmp
lock
mov
cmp
and
scas
addb
add
aam
push
sub
rcr
inc
and
xor
cmp
leave
fsubrl
fisttpll
mov
adc
jge
cld
clc
loope
lahf
sbb
jmp
adc
icebp
es
adc
roll
jle
cmp
sbb
fstl
adc
adc
jb
mov
fisttps
push
xor
and
and
and
push
je
adc
je
or
je
sub
fsubl
inc
and
je
and
sbb
faddl
push
int3
nop
dec
sbb
jae
mov
inc
or
cmp
dec
pop
inc
xchg
scas
in
jnp
dec
sub
clc
add
xor
outsl
sub
orb
xchg
repz
je
inc
les
dec
adc
adc
xor
push
or
lea
sbb
hlt
add
or
and
fmull
pop
mov
and
movnti
xor
and
fildl
or
push
sub
popf
sub
loop
jp
shrl
cmp
jne
bound
dec
movsl
xor
or
adc
dec
inc
pop
enter
arpl
and
add
addb
into
test
push
dec
jb
rcll
inc
pop
jo
pusha
test
fildll
push
sbb
sti
mov
cmp
jmp
das
cmp
outsl
test
sahf
es
push
scas
push
mov
dec
inc
aam
mov
add
xchg
xor
insl
decb
push
xchg
mov
mov
jne
jg
sbb
cmp
dec
adc
pushf
push
push
push
cmp
pop
nop
pusha
inc
imul
mov
cmpsb
aam
mov
jb
jns
cmpsl
stc
push
in
or
idivl
leave
in
dec
pusha
pop
add
add
push
pop
or
or
aam
or
or
or
push
pusha
cmp
aas
dec
rorb
xchg
inc
adc
or
jbe
data16
pop
insb
pusha
mov
mov
ljmp
add
jne
inc
pop
pop
inc
test
rcrb
call
dec
iret
mov
scas
inc
cmp
sbb
and
loope
xchg
mov
fdivrs
orb
add
cmpsl
adc
and
imul
pushf
xor
movsl
nop
es
sub
pop
jmp
aam
adc
insl
pop
cmp
aam
inc
add
ret
stos
pop
rorb
int
add
mov
and
cmp
push
adc
hlt
mov
jge
out
sub
add
pop
and
ret
pushf
movsl
mov
cltd
jl
test
dec
les
adc
shll
mov
inc
orb
push
lds
addb
adc
mov
or
scas
xor
mov
adcl
push
cmp
aad
dec
xor
add
push
addb
sub
push
pop
and
jmp
out
adc
int3
btrl
arpl
push
popa
or
jno
imul
outsl
jge
mov
rolb
jmp
and
in
or
jmp
repz
push
out
dec
pusha
pop
push
dec
test
and
dec
test
sub
stos
cwtl
or
xchg
or
dec
addl
or
inc
lfs
mov
mov
xor
mov
xor
xchg
ret
xchg
lock
pop
dec
in
clc
test
pushf
fwait
or
sub
add
dec
repz
inc
rolb
xchg
add
jb
push
dec
xchg
dec
shll
push
xor
inc
or
cmp
or
adc
mov
jns
in
add
xorb
push
int
sub
ret
cmc
sub
roll
notl
les
loope
xlat
jge
cmpsb
adc
insb
xlat
inc
sub
add
push
test
pop
sub
imul
xchg
xor
or
xor
mov
fimull
adc
ret
jge
cmp
sbb
rol
jo
int
cmp
lea
sbb
dec
push
shll
jbe
push
adc
xor
enter
jl
adc
push
or
jge
pop
jmp
pop
imulb
imul
insb
scas
add
iret
adc
or
jmp
fs
or
inc
or
or
sarl
inc
cs
movsb
scas
xchg
xor
sub
or
pop
jp
in
and
and
push
andb
enter
mov
sub
push
int3
dec
sub
add
ret
mov
sahf
xor
add
aaa
lods
add
pop
mov
pop
add
push
enter
int3
add
aas
imul
addr16
outsl
sbb
push
push
rolb
pop
addb
push
insb
in
pop
sbb
jge
mov
inc
pusha
mov
jge
or
pop
sbb
les
iret
inc
pusha
pop
mov
ret
push
xor
test
mov
sub
out
mov
nop
add
adc
inc
or
scas
mov
inc
test
push
adc
push
sbb
push
xlat
xor
cltd
cmp
test
fbld
jle
sub
dec
pusha
push
movl
pop
push
or
mov
xchg
cmc
dec
pop
mov
aaa
mov
pop
jne
mov
roll
sbb
fwait
loope
in
and
fnsave
addr16
xchg
push
pop
dec
nop
jo
sbb
arpl
xchg
and
fwait
push
or
lret
mov
fwait
insb
xchg
jmp
mov
mov
jns
mov
mov
lahf
xchg
mov
xchg
test
insb
jge
cltd
cmp
enter
push
jg
outsl
loop
xchg
and
xor
mov
adc
aad
jo
mov
push
sub
mov
cmp
sub
sahf
mov
and
adc
adc
popf
repnz
in
js
mov
daa
adc
jbe
inc
cmp
inc
jb
inc
jne
cmp
data16
dec
push
imul
leave
sub
cmc
and
xchg
shl
movswl
mov
mov
out
cmp
cmp
and
inc
add
in
push
fcoms
push
xor
lahf
fsubrs
sbb
xchg
jno
pop
sbb
sub
dec
dec
and
mov
add
pushf
jb
xor
or
lds
adc
in
dec
push
sub
movsl
jno
mov
insb
lea
and
or
or
add
mov
mov
mov
popa
orb
xchg
test
mov
pop
push
ss
push
mov
dec
sbb
xor
imul
adc
add
lcall
les
cmpsl
cmp
addb
or
call
and
ret
aaa
das
sbb
aas
or
add
jmp
pop
or
push
mov
add
loopne
mov
cmpl
cwtl
pop
movsb
adc
dec
xor
push
test
xchg
lock
push
inc
xchg
add
fmul
popf
mov
test
jecxz
xchg
ja
loop
std
fucomip
nop
mov
dec
jmp
xchg
jbe
or
sahf
sub
cs
xor
add
nop
test
sbb
call
push
fbld
mov
neg
push
push
cltd
mov
push
rclb
or
sbb
jmp
arpl
xchg
shrb
or
loop
test
cwtl
in
mov
xchg
mov
mov
mov
ljmp
pop
dec
je
push
xor
and
pop
rcrl
and
or
and
and
or
push
in
push
lds
test
ret
add
adc
cwtl
loopne
push
xchg
enter
lds
mov
inc
out
push
outsb
xor
outsl
inc
decb
and
pop
mov
push
sub
or
and
dec
rcll
xor
push
add
jno
and
test
mov
int
cmp
hlt
adc
jmp
pop
fxch
pop
xchg
push
or
adc
xchg
or
mov
pop
mov
lahf
fstl
jmp
push
cmp
jbe
cli
sub
push
add
pop
push
lahf
sub
adc
xor
cwtl
dec
sbb
mov
or
push
add
bound
dec
ret
push
pusha
movsl
xchg
sub
cmp
loop
les
mov
jge
int
test
jl
mov
dec
fucomip
mov
and
cmp
fwait
sbb
popa
divb
call
jl
fs
mov
or
adc
shlb
fistpll
js
mov
je
daa
leave
out
add
pop
fsts
xor
push
ret
rorb
daa
or
je
mov
dec
dec
test
rcrb
pushf
lods
and
xor
pop
push
jmp
cwtl
pop
inc
push
scas
mov
pop
adc
push
mov
sub
push
xchg
jl
cmp
fnstcw
testb
mov
dec
in
sbb
mov
pop
test
adc
in
fbstp
or
lahf
test
divb
addl
lahf
add
xor
dec
xor
mov
outsb
pop
sbbb
sbb
adc
dec
xchg
mov
or
jecxz
or
movl
mov
add
scas
xor
mov
dec
mov
push
shll
es
movsl
seta
mov
push
push
fidivl
rolb
push
push
rcl
andb
hlt
es
notb
and
sbb
and
jnp
daa
aaa
jle
ret
xor
mov
jns
cltd
movsl
movsl
sbb
push
push
xor
mov
jo
pop
jne
test
pandn
dec
inc
fisttpl
imul
xor
sbb
repnz
sub
dec
data16
pushf
inc
mulb
dec
inc
push
pop
dec
dec
mov
mov
push
push
push
mov
sbb
inc
loope
xchg
pop
nop
sub
cmp
mov
jb
call
inc
mov
aam
mov
popa
in
rcll
mov
mov
adc
int3
xlat
push
shrb
je
mov
inc
adc
insb
add
ficoms
or
shrl
addb
sbb
pop
or
je
pop
jne
adc
mov
sub
es
mov
adc
xchg
pop
jo
jl
sub
jo
inc
call
and
jo
inc
popf
adc
dec
sahf
push
push
cmp
or
repnz
push
lock
xor
ret
movsl
adc
fisubl
push
sbb
inc
pop
pop
ja
addr16
xchg
jo
test
pop
inc
gs
jne
dec
lods
mov
jno
fmull
mov
dec
loope
rorb
mov
popl
add
add
xchg
sub
mov
add
xchg
lods
mov
test
movsb
sub
pop
dec
fisubl
ljmp
sub
sub
xchg
adc
shrl
sub
lahf
jp
lahf
insb
mov
daa
aaa
add
mov
jle
mov
clc
jge
jbe
push
cld
shrb
sbb
rcll
sub
in
jo
insl
push
cld
iret
ljmp
add
test
les
mov
or
outsb
pop
dec
sbb
subb
mov
cmp
addl
dec
inc
push
fisttps
subl
insl
lahf
mov
dec
xchg
mov
dec
pop
push
mov
cmpsl
imul
cli
mov
ljmp
in
push
adc
movsb
jns
cmp
frstor
mov
lods
stc
outsb
ret
add
inc
andb
cmpsl
dec
xchg
jno
inc
xchg
mov
je
nop
add
hlt
add
dec
add
xchg
cmp
test
xor
add
pop
ljmp
jnp
fimuls
or
fistl
adc
push
ret
adc
ret
fstpt
sbbl
call
jns
enter
test
pop
or
or
inc
test
fcmovb
xchg
outsb
loopne
sub
fmull
out
lds
and
or
pop
out
inc
dec
cmpsb
jmp
popa
jecxz
and
fcmovnbe
and
and
sbb
sub
and
cmpsl
xor
sub
ret
or
add
xchg
outsl
add
addb
rep
push
sub
add
xchg
pop
shlb
movsl
rorl
idivb
cmpsl
mov
icebp
mov
pushf
dec
push
push
mov
mov
out
pushf
out
mov
les
add
cmp
je
cli
rorb
call
or
adc
sub
and
pusha
add
es
aaa
in
ret
iret
add
jmp
cmp
or
cmp
mov
add
hlt
insb
or
imul
adc
dec
cmc
pusha
or
cwtl
popa
xor
xor
popf
or
or
fiaddl
loope
push
gs
imul
add
inc
cmpsb
add
add
mov
push
mov
test
fnstcw
lea
or
lds
mov
enter
add
jno
sbb
mov
icebp
adc
mov
xchg
push
adc
cmp
ficompl
fmull
jle
inc
jae
mov
test
sti
into
int
sbb
add
dec
pop
fucom
daa
jns
das
pop
sub
inc
push
pop
gs
inc
movsb
push
addr16
rclb
or
adcb
arpl
test
push
lea
add
outsb
movsb
add
push
add
jbe
call
adcb
dec
sbb
or
decl
inc
or
bnd
cmc
adc
or
rorl
std
cmp
xor
rorb
ja
aas
mov
out
inc
add
aam
xor
sub
add
lret
push
lds
pop
push
aam
sub
sbb
add
mov
insb
or
int3
int3
mov
jge
dec
inc
xchg
imul
add
fstps
add
daa
dec
repnz
cmp
outsb
pop
push
sbb
adc
or
test
mov
push
jns
pop
ret
shll
out
mov
shrl
flds
add
mov
fsubr
das
stos
sub
lds
pop
jp
sahf
out
mov
jle
int
inc
add
xor
aaa
mov
cmp
cmpsl
ret
push
rorl
das
push
push
sbb
mov
and
jo
stc
aaa
pop
cli
or
sbb
mov
jp
adc
sub
insl
add
mov
sahf
add
cld
lahf
arpl
mov
lds
jecxz
loope
jnp
xorb
sarl
pop
dec
pop
fs
loope
or
adc
jnp
mov
mov
pop
cmpsl
xchg
adc
xchg
js
in
push
cltd
push
and
xchg
test
jl
push
xlat
xchg
and
sbb
in
lcall
mov
jle
cmp
xor
adc
sub
jb
mov
adc
push
int3
jmp
rolb
adc
and
test
or
and
repnz
dec
and
int
cmpsl
pop
sbb
xchg
pusha
lret
ret
inc
adc
or
lods
or
inc
and
and
cmp
je
jp
jp
in
mov
mov
mov
inc
xor
ficoml
lods
xchg
test
enter
cld
add
add
cli
push
stc
pop
cmp
iret
enter
or
enter
or
or
mov
repz
ret
stos
lcall
jle
and
push
fwait
pop
pop
inc
xor
adc
pop
push
sbb
or
mov
loope
fisttps
ret
pop
mov
inc
inc
xchg
dec
fdivrl
or
mov
push
xchg
pop
sbb
fwait
test
push
std
ret
stos
cmpsb
repz
lea
inc
andl
rcrb
pop
jmp
push
es
xchg
shll
or
cmp
jg
daa
nop
push
enter
cmp
dec
cmp
adcb
or
pop
xchg
xor
gs
sahf
push
mov
popa
jb
ror
xor
xor
jge
shl
adc
push
ja
imul
add
out
sub
xor
jo
fcmovnbe
or
sbb
dec
dec
divl
or
and
inc
and
iret
add
dec
dec
inc
lea
xor
and
xor
and
or
xorb
cmp
shlb
es
mulb
jle
addl
repnz
enter
add
nop
rolb
and
lret
test
inc
out
and
add
jne
xor
sub
or
mov
sbb
das
lea
gs
sbb
aas
and
or
adc
or
sar
pushf
inc
sbb
push
push
xor
mov
xorb
lcall
lds
stc
mov
pop
lcall
imul
movlps
je
jne
lds
xor
push
popf
xchg
push
insl
ret
mov
sbb
subb
mov
add
ret
push
push
sbb
fisubrs
in
add
ffreep
dec
jne
mov
or
push
push
adc
test
or
sub
out
les
adc
mov
ret
xor
push
add
pop
adc
pop
sub
les
mov
mov
jle
push
into
or
and
int
inc
mov
jp
push
cld
jne
or
cmp
ss
add
xor
adc
pop
jle
sbb
std
sbb
push
inc
bound
push
cmp
push
scas
or
lods
jge
jne
call
add
aam
cld
mov
ret
lods
jne
xchg
aad
incb
in
push
push
sbbb
popf
mov
add
fadd
cmc
push
test
imul
adc
cmp
jnp
inc
cmp
push
dec
in
mov
movsb
xchg
fcoml
add
mov
aad
fsub
test
fbld
loope
movsl
shrb
cmp
pushf
jp
add
movsl
sbb
sbb
jecxz
loopne
std
mov
push
or
push
and
cs
mov
mov
nop
xor
push
mov
pop
and
and
inc
ret
lea
adc
or
lods
popa
and
cmpsl
mov
inc
sbb
data16
add
je
pop
push
xor
in
or
lea
lea
mov
mov
ficoms
jge
addr16
sbb
movsl
out
adc
ret
mov
lea
fmuls
adc
stc
lock
xchg
rclb
push
fld
or
pop
push
pop
cmp
jns
dec
pop
push
pop
pop
mov
mov
in
cmp
sub
fbstp
lods
fs
jle
lock
add
add
imul
lahf
cmp
cmc
sub
push
popf
fsubr
loopne
pushf
inc
add
cmpsl
xor
call
jp
lea
sbb
insb
dec
add
lea
jge
aad
push
rep
xor
cmp
and
or
je
insb
jge
pop
cmp
adc
add
rorb
imulb
test
sar
mov
sub
add
out
dec
inc
add
sub
lea
mov
cli
roll
cltd
push
jno,pn
insl
or
jle
or
push
adc
or
inc
push
push
fs
push
ja
push
jae
sbb
xorb
imul
inc
jp
jmp
and
adc
add
shrl
loope
addb
shl
xchg
pop
inc
push
or
cld
adc
andb
sub
add
adc
out
add
or
jmp
in
adc
std
loopne
lret
repz
jo
xchg
add
push
test
sbb
mov
es
jbe
cmp
in
add
cmp
mov
jl
ja
add
fnstcw
shll
xor
cmp
rorl
in
or
ud1
dec
movsb
adc
ja
xchg
into
fsubrs
push
sub
or
sub
dec
clc
lea
movl
cli
mov
cwtl
mov
push
sbb
adc
out
mov
jp
or
sbb
das
dec
popa
test
add
push
sub
push
mov
ror
sub
mov
test
or
test
cmc
xchg
adc
es
movsb
pop
leave
fiaddl
les
mull
arpl
lock
push
push
cmp
dec
sbb
add
push
arpl
in
jbe
mov
pusha
popf
adc
adc
add
pop
sbb
mov
shrl
jp
or
cs
xchg
fdivp
insb
add
inc
addr16
jmp
cmpsl
xchg
or
sub
pop
mov
aaa
cmp
mov
mov
add
loope
dec
xchg
insb
or
and
sub
jge
push
pcmpeqd
mov
add
lock
mov
fldl
mov
call
xlat
xchg
or
call
lcall
and
jbe
icebp
mov
fadds
jne
sarl
lock
mov
inc
sbb
ja
test
xchg
push
gs
pop
jne
jne
mov
push
adc
jb
sahf
fstps
out
xchg
pusha
jo
mov
fadds
test
pop
sbb
dec
lock
clc
pusha
add
enter
jno
mov
sbb
imul
add
lods
push
fcomps
das
push
cmp
jl,pn
inc
fistl
push
into
cwtl
mov
fldt
cs
cmp
xor
sbb
push
arpl
mov
fs
mov
or
mov
mov
mov
das
jg
push
push
clc
mov
out
cmp
add
pop
and
xchg
pusha
or
xchg
pusha
pop
dec
or
sub
xor
addl
inc
fmuls
mov
std
aaa
adc
mov
pop
and
or
inc
test
ljmp
dec
push
xor
add
mov
add
and
dec
adc
lahf
or
push
mov
ja
mov
pop
mov
gs
insb
ljmp
add
call
pop
fisttpll
lock
mov
testl
inc
mov
mov
sub
cmpsl
add
pop
fwait
nop
ljmp
or
mov
and
fisttps
adcb
flds
jmp
jo
add
lea
mov
lea
out
or
mov
orb
sbb
lods
dec
cmp
mov
std
test
test
je
or
dec
loopne
imul
fsubl
pop
sub
enter
addl
pushf
xchg
xlat
xchg
inc
scas
and
sarb
pusha
mov
dec
or
dec
lock
mov
jo
mov
in
fwait
sbb
loope
cmpsl
test
add
sbb
xlat
rol
fucomip
or
aam
inc
or
xor
xchg
int3
adc
rclb
outsl
orb
mov
push
jl
pushf
push
and
bound
fiadds
adc
inc
sub
bsr
xchg
inc
xchg
sub
in
sbb
pop
mov
pop
or
adc
or
orb
cmp
inc
movb
sbb
fs
adc
cli
sbb
push
and
adc
pushf
xchg
hlt
aad
les
loopne
je
add
inc
addl
out
lahf
push
and
xlat
xchg
cltd
fimuls
push
sbbb
cmc
ljmp
dec
cmp
dec
ds
mov
sub
mov
dec
add
in
sub
mov
pop
sbb
daa
pop
add
lcall
data16
movsb
loopne
clc
lret
rorb
or
insl
popa
mov
pop
rclb
arpl
xlat
in
test
test
inc
mov
mov
pop
stos
lock
into
pop
popa
push
add
testb
mov
xlat
xchg
stos
and
aam
add
pop
adc
sbb
cmp
cmp
jmp
arpl
es
in
sub
cwtl
test
sub
inc
xor
cmp
and
or
jbe
push
adc
dec
addb
sbb
inc
cmpsl
jno
das
fcomps
js
lea
ss
pop
jl
mov
test
mov
popf
lea
push
xchg
aaa
and
clc
lea
add
dec
mov
push
orb
add
js
adc
pushf
push
icebp
adc
je
push
popf
inc
push
adc
inc
xor
dec
push
lds
jecxz
sbb
test
or
and
push
in
and
mov
leave
les
lods
popa
and
add
dec
dec
adc
sub
insl
icebp
xchg
scas
push
cmp
jne
jg
sub
mov
lret
lea
push
jl
pop
jmp
add
fadds
push
ret
fildll
sub
sbb
or
stos
push
mov
push
or
add
aam
ja
aaa
fucomip
inc
xchg
stos
aam
inc
lahf
scas
add
mov
dec
push
mov
xchg
mov
dec
lea
in
shll
in
imul
outsl
push
cmpsl
je
inc
fcomps
enter
push
adc
in
in
icebp
xchg
out
call
inc
loopne
mov
and
and
lods
lds
inc
loope
adc
adc
cmp
subl
outsl
fdivrl
leave
movsl
rcll
repnz
mov
loop
mov
jge
mov
outsl
inc
push
hlt
imul
or
push
dec
dec
rcll
inc
xchg
jmp
lods
loopne
add
dec
dec
fsubl
and
add
cwtl
push
sbb
mov
test
fsubs
scas
add
decl
add
or
push
dec
cmp
sub
inc
adc
inc
pop
jle
int
push
add
push
push
or
test
scas
jp
shr
out
pop
or
jo
pop
ret
into
pushf
mov
mov
xchg
xor
or
inc
inc
and
adc
inc
fwait
inc
fists
cmp
pusha
aad
or
add
mov
xor
and
dec
jo
push
int3
add
sbb
xchg
int3
mov
inc
mov
jne
mov
movsb
pusha
mov
sbb
cmp
mov
sbb
jle
mov
pop
mov
cmp
and
jb
std
roll
and
mov
add
cmp
insl
ret
jae
test
out
jmp
push
push
add
orb
add
pop
pop
mov
jl
std
jmp
cmp
lret
mov
das
int
bnd
sbb
pop
push
xor
imull
pop
insb
xchg
ret
hlt
add
fldl
faddl
xchg
add
mov
rcr
rclb
shll
and
loopne
add
jmp
jb
add
push
mov
fldl
cmpsl
or
add
xor
jle,pt
and
outsb
iret
sti
xorb
daa
clc
or
vmovntps
ja
jb
cmp
sbb
fcoms
shlb
sub
mov
dec
inc
xor
adc
lods
xor
mov
cwtl
lcall
xor
mov
adc
dec
cmp
repz
imul
jg
int3
xchg
mov
push
xor
in
fs
cmpsl
das
sub
add
adc
inc
add
add
enter
sbb
mov
mov
mov
stos
popa
bound
jl
xchg
mov
sarl
xchg
loope
adc
dec
or
in
xchg
adc
xchg
insl
outsb
dec
xor
ror
push
push
iret
add
and
add
or
sub
lcall
jae
and
ret
clc
inc
das
cmpsl
sbb
inc
cld
imul
das
add
cmp
dec
sub
add
cs
dec
mov
mov
sbb
test
je
cmp
or
dec
loope
nop
push
andl
cmp
jb
cmp
ja
add
jnp
push
push
mov
add
enter
sbb
leave
outsl
fcmovb
sub
cmp
mov
sbb
addl
adc
and
jb
ljmp
jecxz
sub
and
or
push
adc
pop
sbb
in
pop
xchg
hlt
push
cs
sbbl
les
jl
xchg
sub
adc
outsl
jge
push
mov
sub
test
pop
pop
sub
sub
icebp
mov
mov
xchg
xchg
adc
push
pushf
leave
jp
mov
clc
mov
ret
mov
fcomip
lret
pop
push
push
mov
jmp
mov
roll
push
setp
inc
xor
daa
push
mov
pop
sub
cmpsl
xor
mov
aad
adc
pop
xchg
push
and
sub
movsl
inc
dec
fs
push
xchg
mov
mov
pop
test
pop
mov
movsl
add
xchg
add
add
xchg
sub
aad
lods
push
aaa
aas
mov
pop
add
add
iret
sub
sbb
insl
cld
pop
lods
pop
or
mov
loope
ret
mov
or
loopne
and
add
ljmp
in
mov
push
inc
icebp
insl
add
inc
lds
js
iret
xchg
pop
xor
pop
adc
sbb
inc
sub
pop
cmp
movsb
add
xchg
inc
mov
mov
inc
mov
leave
lcall
push
push
addb
imulb
adc
ds
jo
rcll
or
inc
aas
in
ffreep
adc
mov
add
stos
out
add
aad
or
ss
cmp
xor
dec
ja
aam
mov
push
arpl
cmp
daa
loop
xor
mov
dec
int
in
dec
cmp
or
inc
push
inc
cmp
xchg
jo
es
ss
daa
fisubrl
rcrb
add
pop
shlb
out
or
or
push
ss
push
inc
sub
cmc
arpl
adc
push
in
pop
xchg
jp
bound
in
clc
pushf
xchg
rol
add
fs
adc
test
inc
cmp
pop
jmp
push
mov
orb
and
fdivs
push
xchg
jb
ffreep
test
dec
sub
mov
pop
pinsrw
test
adcb
in
or
and
jmp
cmp
push
sbb
mov
loopne
outsb
mov
mov
dec
fmull
test
scas
push
in
inc
push
pop
sbb
dec
mov
loopne
jne
and
dec
shlb
push
push
lea
mull
sub
sub
and
or
leave
adc
jbe
push
outsb
pop
or
mov
clc
mulb
and
or
jo
and
adcl
jl
movsl
popa
je
mov
pusha
mov
incl
imul
and
imul
cmp
dec
xor
les
xchg
or
push
add
dec
or
popa
mov
add
roll
push
sbb
sbb
pop
jmp
mov
push
mov
fsubl
hlt
or
dec
dec
pop
loopne
cli
jl
push
cmp
inc
xor
xor
pop
ror
dec
or
or
jmp
mov
lea
push
mov
ud0
lea
ret
push
lret
dec
cmp
and
fptan
dec
or
cmp
insb
jns
mov
aam
inc
adc
cli
mov
cmpsb
push
jp
lea
enter
jg
mov
insl
or
mov
sbb
xor
or
mov
mov
and
push
mov
fimull
data16
cli
sub
inc
sub
add
subl
in
mov
dec
push
cmp
test
xor
or
sub
decl
xor
sub
les
loope
jo
adc
push
inc
mov
or
jg
test
clc
push
add
push
out
repnz
pop
inc
movswl
imull
add
sub
xor
push
aad
dec
xchg
lock
js
or
push
push
shll
adc
jmp
jo
sahf
dec
push
jbe
inc
popa
mov
add
sbb
iret
out
dec
push
mov
or
mov
pop
xchg
sub
push
xor
sub
je
push
cmpsb
bound
add
js
adc
sub
insb
fmuls
dec
add
mov
xchg
sub
mov
dec
dec
push
mov
inc
lcall
adc
mov
dec
xor
xchg
mov
lret
adcb
jo
or
add
pusha
jmp
pusha
test
push
sub
arpl
loope
add
mov
test
lea
xor
push
out
dec
jno
adc
popa
int3
cltd
in
or
pop
insb
pop
adc
jno
je
inc
pushf
sub
stos
xchg
sub
fadds
pop
arpl
inc
inc
pop
lahf
cli
fistps
jl
add
nop
dec
xor
jp
sbb
adc
jno
jmp
mov
xchg
mov
mov
inc
or
pop
add
mov
add
test
mov
pop
rolb
fldcw
mov
jmp
mov
arpl
ret
movl
inc
push
xchg
in
adc
mov
ror
mov
pop
test
xor
insb
mov
xor
dec
leave
or
insl
lahf
sbb
es
pop
dec
inc
jo
aam
test
xchg
data16
lahf
mov
lods
imul
ljmp
dec
inc
je
in
loop
aaa
mov
push
push
stos
movsl
shrb
scas
jno
push
xchg
rol
sar
test
imul
push
push
sub
popa
mov
jmp
jg
mov
push
xchg
jp
and
lods
loop
iret
jge
xchg
dec
mov
xchg
xchg
adc
inc
dec
inc
lock
enter
ljmp
add
xor
out
mov
adc
insb
cmc
cmp
fadds
jl
test
add
je
cltd
adc
and
push
lods
xor
nop
sub
mov
loope
or
ret
push
sbb
sbb
inc
fadd
loopne
push
cmc
inc
push
cwtl
lea
scas
inc
lods
or
outsl
adc
xor
lret
in
jl
inc
inc
rol
sbb
test
or
es
lods
ss
inc
push
ret
in
pushf
fiadds
cmp
lds
cmp
shrl
and
int
jmp
xor
stos
dec
mull
cmpsb
dec
push
inc
push
sbb
cs
mov
movl
inc
test
movsb
xor
aaa
movsl
daa
cmp
push
and
adc
push
mov
sbb
aas
ret
ss
push
sub
inc
dec
mov
jl
cmpsl
fisubrs
cmpsb
or
sub
cmp
clc
mov
xorb
or
push
push
mov
push
in
pop
xchg
es
lock
icebp
add
mov
or
lock
xchg
adc
and
and
pushw
sub
mov
int
jge
inc
and
loope
sub
std
push
and
mov
push
inc
or
pop
out
or
test
and
movsb
jo
in
adc
icebp
insl
mov
rol
push
xor
je
les
push
mov
aas
pop
pusha
imul
add
pop
and
icebp
cmp
xchg
xor
pusha
cmpsl
dec
jecxz
je
mov
outsl
adc
add
add
pop
jo
add
push
ret
mov
insb
sti
xchg
stos
push
cmc
or
decw
and
or
mov
les
push
push
push
stos
fldl
hlt
cmp
rcrl
sub
push
pop
insb
or
es
push
lcall
or
pop
xor
add
push
popf
adc
xor
add
cmp
sbb
cmp
mov
inc
xchg
mov
lods
push
xor
and
mov
and
cmpb
pop
js
stos
addl
scas
xor
daa
jbe
dec
lds
dec
xchg
inc
cld
test
xchg
inc
int3
dec
cmovno
bound
add
sub
mov
cmp
dec
cmp
add
aaa
adc
push
aas
lret
push
fisubrl
movsl
mov
mov
sub
jb
mov
pusha
xlat
sbb
cmp
fdivl
mov
int3
mov
push
mov
jb
imul
jl
xchg
movsb
std
fldcw
dec
push
xorb
or
and
call
outsl
add
add
das
xor
rclb
js
cmp
and
xchg
cmc
out
push
mov
or
xchg
push
imul
inc
insb
imul
or
xchg
pop
jnp
dec
xor
dec
daa
pop
sbb
arpl
xchg
inc
sub
pop
dec
andb
insl
xor
push
data16
jno
in
mov
sub
add
adc
cli
fldt
cmp
xor
add
orl
cs
daa
call
inc
inc
enter
dec
push
mov
adc
dec
movsb
bound
popa
adc
fsubrp
inc
rol
insl
jbe
push
pop
pop
fmull
das
push
inc
pusha
es
ret
pop
or
ds
push
xor
add
push
jecxz
jl
sub
cmp
cli
or
adc
mov
cmpsb
push
lret
mov
adc
movsb
jg
xor
sub
sub
cltd
hlt
or
ucomiss
mov
sub
xchg
inc
add
push
or
or
mov
add
xchg
or
or
push
or
mov
jl,pt
dec
pop
mov
push
add
sbb
mov
adc
jg
addl
dec
jne
test
inc
add
jmp
adc
jns
push
movsb
push
cli
incl
and
dec
push
outsb
xor
add
add
sbb
ret
dec
xchg
mov
ret
clc
pop
hlt
mov
and
lods
inc
push
adc
dec
add
addr16
aas
mov
fidivrl
dec
pop
push
xchg
push
cmp
push
add
lock
xor
enter
dec
mov
mov
jne
cmova
dec
in
adc
add
call
dec
mov
pusha
inc
add
sahf
inc
daa
iret
dec
push
inc
rol
xchg
mov
cmp
mov
shrl
arpl
mov
test
ds
dec
stos
add
add
xchg
push
out
sarb
adcl
jo
push
mov
lds
jne
push
add
inc
or
test
mov
lret
mov
mov
movsl
push
push
cmp
push
pop
xchg
test
push
add
sub
adc
shlb
xor
sub
lea
cmpsl
inc
test
nop
inc
push
gs
adc
xchg
sub
mov
mov
jne
cmpsb
ljmp
lods
adc
jae
jbe
loopne
or
jns
pop
inc
push
and
mov
loope
scas
adc
cmp
inc
in
and
or
cmpb
dec
sbb
and
add
or
imul
or
sbb
or
dec
mov
dec
mov
or
aaa
in
je
inc
cmp
push
enter
fisttps
jg
xchg
test
dec
mov
push
test
pop
lock
test
fs
enter
xor
xor
sbb
push
roll
mov
into
dec
aad
push
adc
mov
insl
pop
bound
iret
hlt
mov
fildl
jo
adc
fstl
insb
pop
pop
mov
add
xor
das
pop
add
pop
inc
in
cwtl
nop
js
cld
jge
jmp
jne
mov
pop
out
sbb
je
adc
rcl
dec
lods
fidivrl
add
jecxz
mov
inc
jb
adc
cmp
inc
fstps
mov
cmp
or
aas
lock
inc
popa
xchg
push
stos
xchg
mov
sbb
icebp
push
repz
iret
add
jle
xchg
rorb
test
adcl
nop
adc
and
mov
lods
push
leave
clc
mov
je
mov
sub
mov
dec
lret
das
mov
mov
push
imul
mov
pop
fcoms
sub
sahf
sbb
jle
pop
cld
push
lock
div
push
xor
shll
pop
mov
mov
lcall
dec
pop
push
sarl
insb
movl
cmp
je
inc
fs
mov
pop
pop
or
and
add
xchg
and
repz
pop
test
pop
pushf
dec
enter
pop
dec
dec
enter
inc
or
iret
adc
and
or
sub
pop
mov
es
dec
sbb
sub
in
sbb
sub
mov
mov
leave
push
add
sbb
or
incl
roll
mov
bound
xor
jo
add
sbb
shll
data16
test
fidivl
mov
mov
mov
xor
jg
dec
pop
fdivl
pop
add
dec
mov
icebp
inc
bound
mov
mov
movsb
or
jno
add
sub
jnp
fstl
cmp
pop
dec
popa
je
sub
push
out
sbb
lods
and
popa
js
pop
ja
jle
push
mov
pop
inc
outsl
je
sbb
mov
add
adc
cmp
fwait
icebp
sub
pop
in
mov
dec
popl
mov
insl
aaa
xor
cmp
sub
loopne
mov
pop
sub
adc
sub
loop
jmp
rcl
mov
or
add
inc
mov
xchg
shll
sbb
inc
rolb
arpl
icebp
fucomi
int
popa
mov
inc
push
aam
popa
xorb
mov
inc
popf
xchg
push
call
lret
adc
push
popf
bound
jne
dec
dec
add
xor
test
shll
lods
adc
and
adc
jb
movsb
lea
cmp
adc
push
dec
dec
movsb
pushf
sub
test
inc
mov
push
hlt
dec
rorb
test
mov
sbb
jo
fnstenv
insl
rorb
pop
add
shrl
jle
mov
inc
je
movsl
hlt
cmp
js
or
ffreep
adc
pop
je
test
mov
add
pop
bound
mov
into
mov
adc
cmpb
jle
aaa
es
imul
and
int
push
sahf
lock
pusha
jo
push
push
cwtl
popa
pop
shrl
push
pop
adc
xor
aam
sbb
mov
xorl
mov
push
sub
nop
and
inc
pop
jg
cmp
cmp
dec
lret
pusha
sub
push
pushf
loopne
lahf
mov
xor
dec
mov
push
stc
sbb
addb
sahf
test
push
rclb
mov
pop
cmp
add
clc
add
addb
insl
add
cs
dec
inc
push
push
pop
sub
jns
add
xchg
mov
sbb
push
and
dec
inc
jmp
rcl
fsubs
push
jo
sbb
addb
aas
pop
dec
sbb
fsts
mov
lcall
sbb
jno
jmp
insl
mov
pushf
das
push
xor
sub
cmp
dec
loopne
push
lahf
les
and
mov
pop
ret
insb
test
xor
mov
inc
add
push
dec
or
jbe
adc
mov
insb
lret
sbb
in
lods
and
loop
or
ljmp
stos
and
pop
lahf
adc
and
inc
push
push
stos
jg
dec
gs
inc
cmp
jno
movsb
add
es
and
mov
les
lods
leave
lcall
cmp
jne
inc
mov
movb
sub
rolb
mov
jo
mov
addr16
andb
xor
pop
mov
push
add
in
cmp
sbb
or
ljmp
add
pop
push
or
add
or
xchg
negb
cli
jl
or
cmp
add
push
add
add
or
xchg
adc
inc
enter
dec
fildl
xchg
sub
adcb
jp
or
adc
push
pusha
mov
sub
xor
es
xor
mov
xchg
inc
add
push
mov
mov
sbb
mov
movb
push
dec
sbb
push
and
xor
test
push
loope
stos
jmp
pop
sti
adc
pop
mov
loope
jno
inc
fs
ss
and
cld
dec
cltd
and
cmp
shrb
test
push
xor
or
push
inc
adc
add
out
dec
pop
xchg
pop
ds
xor
push
pop
cmpsb
insb
jg
pop
pusha
sub
add
pusha
xchg
leave
leave
jl
testb
push
popf
mov
cmp
ljmp
jb
pop
add
dec
mov
and
add
xchg
aaa
loope
stos
cmpsl
or
jecxz
push
and
aas
add
ret
pop
add
mov
and
lcall
inc
test
add
adc
mov
xor
jne
fs
test
xchg
rcrl
xor
sahf
call
inc
call
lods
addb
std
sub
adc
test
push
fdivl
shlb
xor
pop
sub
push
adc
sarl
mov
orb
dec
xor
sbb
sbb
push
pop
xor
in
sub
add
push
pop
sbb
xchg
jne
lret
add
scas
lods
clc
push
sub
push
xor
push
push
push
mov
movsl
std
adc
aas
mov
fwait
or
dec
movl
adc
jo
imul
jmp
outsl
jmp
add
adc
pop
in
je
out
pop
clc
mov
lea
add
add
mov
cmp
cwtl
dec
stos
push
xchg
adc
mov
repz
push
adc
dec
es
dec
ret
dec
or
imul
xor
lahf
mov
das
push
test
ja
push
ret
rcrb
mov
cmp
shlb
and
push
pop
add
add
fcmovb
xchg
sub
sbb
xor
dec
or
xorb
addr16
dec
cmp
mov
cmp
inc
jbe
repz
xchg
movsb
les
out
push
fs
cmp
sti
sub
stos
inc
add
push
fiadds
fidivrl
push
push
mov
mov
ret
sbb
sbb
inc
or
leave
push
lcall
data16
pop
scas
stos
add
or
movsb
inc
and
pop
js
push
add
mov
adc
jge
ret
jne
and
push
or
inc
out
rorl
add
xchg
push
or
fistpll
push
cmp
je
aad
mov
jge
out
sub
sub
retw
adc
mov
lods
adc
cmp
in
mov
sbb
and
and
out
push
xchg
mov
xor
andl
push
ret
cmpl
inc
adc
mov
popa
notb
jb
pop
pop
push
fnsave
add
sub
jmp
adc
or
mov
loope
dec
outsb
insl
hlt
and
pop
or
push
enter
js
test
test
pop
mov
push
sub
repnz
pusha
add
push
xchg
dec
jnp
mov
in
lock
xchg
icebp
sbb
mov
and
pusha
inc
aas
add
xchg
or
push
mov
rcl
add
mov
leave
movsl
inc
in
adc
and
iret
and
imul
andl
nop
mov
mov
in
movsb
fcom
test
cs
or
orb
push
pop
and
ffreep
or
enter
push
add
cmp
repnz
and
add
fs
sub
and
cmpl
in
cwtl
and
or
add
adc
inc
push
add
inc
inc
mov
ljmp
fidivl
mov
inc
pop
push
push
cld
push
or
inc
aaa
add
cvtdq2ps
outsb
sbb
xlat
ds
cmp
mov
mov
es
jge
ret
dec
inc
xor
push
enter
shll
cmp
imul
dec
pop
adc
rclb
mov
sbb
fcompl
fildl
fsubs
inc
shll
add
pop
or
push
xor
repnz
mov
push
cmp
xor
js
pop
push
sbb
dec
out
fcompl
mov
inc
mov
sbb
sub
mov
into
inc
cmpsb
mov
call
sbb
inc
in
push
cmp
pusha
inc
pusha
add
xor
mov
push
dec
xor
xchg
sbb
or
popa
das
xor
cmp
insl
scas
mov
mov
nop
aaa
hlt
imul
aaa
pusha
lahf
push
je
and
loope
les
mov
jecxz
cmp
rcr
jnp
sbb
push
push
fists
xchg
xor
jl
adcl
rol
add
test
lock
jne
adc
nop
addl
add
sub
xchg
shl
push
add
xor
mov
sub
lock
mov
std
dec
cmp
push
movsl
jge
and
push
dec
jmp
inc
inc
cmpsb
icebp
lret
dec
push
sub
movb
ljmp
sahf
enter
sub
add
sysret
scas
xor
dec
test
inc
gs
xor
push
or
mov
add
in
lock
dec
mov
add
movsl
add
call
dec
sbb
mov
sub
in
loopne
test
adc
sub
pop
mov
addr16
and
adc
mov
lcall
adc
pop
cmpsb
pop
ud0
add
movsl
popl
jp
push
cmovns
aad
mov
nop
in
mov
add
mov
pop
les
sbb
cmc
push
xchg
aaa
stos
pushf
scas
xchg
add
enter
test
aas
push
sbb
xchg
mov
dec
mov
xlat
scas
out
adc
and
mov
mov
jo
sub
pop
adc
sub
xchg
xchg
pop
mov
add
sahf
xorb
scas
test
add
out
mov
add
sbb
and
jns
test
sbb
dec
mov
push
cmp
push
clc
add
mov
push
add
pusha
sub
sub
and
out
popa
dec
lds
or
jge
jl
or
pop
icebp
stc
test
loopne
push
xor
push
lods
jb
and
dec
mov
adc
cwtl
cs
push
daa
je
push
push
arpl
adc
pop
or
mov
stos
mov
pop
sub
and
mov
push
dec
xor
imul
lret
sub
loope
push
pusha
pop
xchg
or
je
jle
pop
pop
dec
mov
add
push
pop
gs
pop
andb
pop
pusha
daa
push
dec
pop
stos
js
push
enter
arpl
shll
cmp
mov
add
ret
sub
mov
pop
mov
ss
sbb
xchg
test
adc
push
sub
popf
push
jmp
ljmp
pop
jecxz
rol
add
sub
jle
add
mov
xchg
xchg
xchg
inc
inc
lar
mov
mov
jo
ret
in
xor
movsl
fiaddl
add
inc
pop
inc
les
in
dec
dec
sub
sbb
aad
sub
fs
jl
sbb
stos
and
cld
in
or
loope
mov
dec
dec
jmp
adc
aaa
je
dec
add
filds
or
ljmp
cmp
popa
jne
scas
sbb
jmp
icebp
rorl
outsl
mov
pushf
and
or
or
jno
pop
push
push
xchg
pusha
insb
in
mov
fldenv
aad
inc
addr16
sbb
out
movsb
fcom
cmp
mov
adc
pop
cmp
adc
or
adc
sbb
movsl
jns
mov
add
add
in
lea
imul
or
dec
fnstenv
sub
in
inc
push
adc
sub
xorl
fnstcw
jo
dec
or
and
and
test
sbb
int
sub
mov
sub
push
or
push
or
mov
sahf
sub
out
jne
mov
xor
mov
lea
and
or
sub
repnz
push
mov
lods
pusha
bswap
in
dec
je
xchg
or
insl
pop
mov
adc
fimull
test
jne
push
push
pop
lret
jo
jg
sub
outsl
push
xchg
movsb
xchg
in
inc
sbb
inc
pop
mov
jecxz
dec
cmp
inc
xchg
jno
and
xchg
push
das
xchg
mov
mov
mov
ret
movsl
mov
nop
cld
ret
mov
mov
inc
push
dec
or
addr16
mov
imul
add
pop
mov
xchg
pop
dec
mov
xchg
push
rorb
iret
xor
xchg
and
inc
push
push
inc
dec
pop
mov
or
test
in
mov
and
mov
xchg
mov
jnp
cmp
lcall
inc
add
mov
pop
mov
mov
cmp
mov
dec
subl
dec
xchg
mov
inc
lock
popa
sbb
pop
movsl
orb
sbb
adc
imul
rcl
mov
shll
push
pop
or
in
sbbb
jmp
rorb
andl
adc
jg
mov
loop
mov
inc
inc
or
aam
cmp
jge
jg
jmp
pop
in
std
sbb
jbe
or
stc
inc
aas
mov
push
inc
imul
orl
push
pop
nop
fiaddl
xor
add
add
xor
and
pop
mov
dec
push
in
in
popl
add
mov
mov
adc
lret
gs
mov
or
mov
in
jbe
jne
push
mov
and
and
sub
lret
mov
shrl
push
lea
mov
insb
ds
pop
pop
imul
jge
dec
insl
fisubs
sti
inc
pusha
push
mov
mov
jae
jecxz
dec
shlb
and
inc
sub
sbb
adc
pop
shlb
ds
outsb
ljmp
or
out
push
jae
movsl
hlt
mov
ficoml
push
mov
inc
mov
or
adc
sbb
and
mov
or
cmpl
out
sahf
jno
call
pop
mov
pop
sub
pop
mov
inc
mov
stc
push
mov
mov
xchg
je
cmp
mov
jbe
mov
mov
mov
sbb
in
aas
xor
mov
enter
pop
and
and
dec
cld
sbb
dec
addb
movb
mov
insl
test
test
je
dec
mov
adc
add
sub
adc
inc
ficompl
inc
fadds
adc
std
or
adc
inc
inc
repnz
pop
mov
scas
pop
pop
lcall
dec
push
xorl
adc
and
dec
mov
dec
or
fs
pop
pop
jl
pop
js
dec
fwait
inc
dec
inc
adc
push
mov
cmpsb
cltd
or
fs
test
cmp
add
jecxz
sete
cmc
dec
mov
mov
shr
dec
mov
mov
inc
xor
out
mov
push
gs
pop
into
cmp
je
ljmp
mov
mov
push
addr16
cli
push
lea
lods
lret
add
pushf
loope
mov
cmp
jle
sub
dec
or
inc
and
mov
pop
dec
dec
pop
sbbb
in
push
xlat
pusha
nop
ret
inc
sub
cmp
rcl
dec
or
push
insb
sbb
lret
movsl
xchg
out
xchg
enter
ss
push
or
fsubs
inc
push
rorb
mov
xchg
loop
xchg
and
stos
jb
cmc
leave
jb
and
lret
jns
ret
clc
push
jo
fsubr
adc
lret
pushf
loopne
stos
dec
xchg
jmp
ror
mov
dec
dec
imul
roll
sub
push
movsb
dec
movsb
pusha
icebp
dec
roll
push
cmpsb
sub
faddl
test
mov
push
mov
sub
mov
or
cmp
insb
pop
ljmp
adc
jo
hlt
and
or
mov
jb
xor
jge
mov
sbb
loope
movsb
pop
xchg
xor
pop
cmp
pusha
add
dec
ret
dec
xlat
jmp
aas
in
ret
xor
mov
sub
loope
sub
xor
inc
ds
mov
fmull
xchg
xor
adc
xchg
xchg
lretw
sbb
loop
push
sahf
pop
adc
loop
fidivl
pop
popa
adc
lds
fsubs
insb
and
inc
fimull
jb
mov
add
inc
dec
inc
adc
loopne
cmp
and
mov
fmuls
jle
add
mov
cmp
les
or
mov
and
test
add
insb
ret
inc
xchg
push
dec
dec
jp
popa
bound
push
imul
add
in
rcrb
add
stc
jo
xchg
in
xchg
and
mov
stos
adc
xchg
in
enter
cwtl
rcrl
adc
pop
xchg
out
ja
jmp
sub
shlb
jl
out
into
sbb
adc
bound
cmp
adc
js
dec
mov
and
xchg
test
ret
push
shl
add
js
cmp
xor
jmp
mov
dec
push
lea
data16
mov
adc
subl
popa
dec
bound
add
pusha
pop
sub
or
enter
stc
or
xor
push
jle
jl
inc
lcall
cltd
dec
jle
xchg
iret
shll
xlat
or
decb
lret
and
dec
fidivrs
in
or
fdivs
lret
sub
hlt
mov
cmpl
enter
or
loop
inc
roll
xchg
enter
sub
mov
pop
xchg
xchg
lret
clc
inc
and
sub
call
pop
mov
or
or
popl
xchg
xchg
pop
or
adcl
inc
dec
sbb
sbb
jo
pop
and
and
rorb
mov
je
xchg
sub
mov
mov
mov
ficoms
loope
sub
dec
fimull
cmp
xlat
mov
outsb
xor
push
xorl
sbb
jg
add
jle
and
jmp
cmp
jl
pop
push
out
les
jmp
ja
leave
sub
adc
movsb
lret
loopne
or
cmp
mov
xchg
mov
cmp
aas
pop
push
data16
cmp
adc
repnz
mov
dec
subb
shlb
outsb
sbb
dec
ss
sbb
and
loop
pop
rorl
je
or
pop
sar
fwait
adc
add
push
pop
inc
rorl
push
jno
lea
jge
xchg
test
mov
adc
mov
fwait
xor
xchg
xor
mov
sub
jp
cmpl
js
aam
fsub
xchg
movsb
mov
and
lea
add
nop
popf
test
inc
jno
push
add
or
lods
pop
inc
inc
mov
ret
sub
dec
test
and
inc
xchg
sub
mov
clc
jnp
add
loopne
mov
add
adc
orl
jl
pop
je
inc
or
mov
rcl
test
jg
sbb
xchg
xchg
xchg
adc
jmp
cmp
add
lret
mov
pop
xchg
addr16
fadd
mov
nop
inc
mov
lods
adc
or
dec
sub
mov
ja
sub
fsubrs
adc
sarb
cmp
add
xor
mov
ret
push
mov
or
es
lret
or
popf
cmpsb
ret
dec
std
or
pop
inc
push
jb
add
mov
inc
lods
fs
inc
add
inc
pop
inc
cmp
mov
mov
push
or
inc
cld
repz
ret
cmp
dec
dec
imul
sahf
int
and
iret
mov
mov
sbb
data16
movsb
adc
jg
cmp
mov
mov
jl
lock
jle
mov
push
mov
rcll
mov
pop
js
shrb
lea
xchg
dec
int
insb
ja
iret
subb
fsub
add
inc
mov
and
stos
and
and
repz
mov
inc
pop
pusha
xor
xchg
repnz
test
cmpsl
stos
ja
iret
rol
xchg
pop
or
sub
sub
push
and
mov
adcb
insl
sti
and
mov
mov
or
sbb
and
sbbb
adc
fwait
ror
sbb
cli
xor
sbb
mov
lods
adc
add
call
jl
add
sub
movsl
dec
pop
push
cmp
jae
adc
and
aaa
add
pop
sub
inc
jmp
test
cmp
enter
nop
cmp
cmp
popf
lea
or
outsb
loopne
ret
ret
push
aad
push
xor
sub
dec
addb
adc
push
mov
pop
pop
dec
lahf
jecxz
mov
or
mov
or
jb
add
daa
sub
sbb
movsb
adc
jmp
fists
mov
rcrb
popa
push
pop
xor
xchg
mov
iret
mov
sbb
lea
fwait
xchg
and
out
add
push
add
test
push
push
pop
shrb
or
dec
jns
nop
cmp
pop
inc
mov
jne
loop
ja
loopne
sbb
subb
sbb
adc
sbb
jb
xchg
sub
add
pop
test
jbe
push
aad
andb
adc
aaa
and
or
mov
sbb
test
aam
and
mov
sbb
push
push
fs
mov
dec
inc
sub
inc
insb
push
xchg
adc
pop
scas
inc
push
jo
dec
movsb
sub
and
add
cmp
js
xor
sub
xchg
aas
fdivl
adc
adc
daa
shll
push
int3
test
xchg
push
test
push
rolb
dec
aas
nop
and
sbb
shld
and
push
jno
mov
mov
and
movsb
pop
jnp
mov
sbb
push
mov
pop
lock
ret
jb
xchg
sub
jbe
pop
jmp
inc
or
cmp
aam
dec
dec
hlt
in
dec
inc
imul
test
inc
jo
mov
decb
movsb
or
outsb
popa
das
pop
cmp
data16
das
pop
sub
enter
negl
testl
jo
jp
adc
xchg
pop
ja
std
pusha
mov
mov
dec
popa
inc
add
fadds
jb
add
xchg
or
into
jae
lea
jo
cmpl
outsl
cvtps2pi
iret
push
popa
push
sub
cmpsb
or
insb
dec
cmp
push
ret
les
adc
fcmovnu
ja
hlt
jmp
push
inc
cld
push
push
fwait
xchg
sbb
test
or
mov
mov
iret
cmp
push
lea
and
push
and
sbb
xchg
pop
aad
mov
push
fiaddl
sbb
push
sub
adcb
daa
jno
or
add
ficompl
shlb
sub
mov
jle
pushf
sbb
push
push
jbe
cmpsl
adc
jmp
lea
push
rorl
xchg
mov
add
sbb
ss
loope
push
add
adc
dec
and
js
and
imul
ss
sbb
cmp
shr
cmp
loopne
stos
jmp
push
dec
aaa
flds
mov
cmp
xchg
dec
or
inc
shlb
data16
enter
adc
fcomps
cmpsl
sbb
lea
push
pop
jge
push
dec
mov
test
movsl
aaa
and
mov
inc
dec
inc
insb
ds
mov
cltd
push
cmp
jp
xor
fwait
dec
push
adc
cli
mov
and
in
insb
xchg
push
adcb
cmpsl
pushf
push
or
hlt
and
pusha
cmpsl
sbb
adc
xchg
out
lea
mov
imul
icebp
push
push
push
add
lret
and
jmp
push
std
push
js
dec
mov
fisttpll
sub
cmp
cmp
jae
cmp
je
inc
jmp
jecxz
mov
add
pop
xor
xor
jge
cld
mov
mov
rolb
jmp
sarb
clc
and
fbld
push
or
push
jo
cmp
mov
add
sbb
adc
xor
mov
pop
push
rolb
xor
jbe
pop
xor
push
pushf
adc
mov
and
jnp
addl
adc
or
jnp
adc
sub
add
repnz
add
mov
lcall
cwtl
ret
insb
sub
bound
lahf
fadds
push
shl
xor
imul
orl
push
jl
sub
push
mov
stos
and
adc
cmp
add
stos
adc
xchg
testb
lock
movl
dec
ljmp
or
daa
push
sub
imull
ja
lea
orb
jmp
fs
es
popf
mov
mov
clc
add
ss
call
adc
inc
enter
pop
pop
xor
les
mov
movsl
push
dec
adc
sub
lock
adc
push
jmp
push
xchg
push
test
loope
cmp
adc
sub
add
pop
push
push
xlat
pop
or
xor
add
into
call
fldt
jl
jae
in
lea
mov
lea
test
dec
add
imul
add
or
cmpsl
ficompl
sub
pop
mov
sbb
adc
ljmp
add
and
adc
dec
sub
dec
cmpl
mov
pusha
out
movb
push
and
jle
outsb
or
mov
and
test
xor
jb
dec
loop
test
imul
adc
hlt
mov
cltd
mov
inc
test
xor
loope
and
cmp
push
mov
enter
js
inc
rolb
sub
or
out
mov
cmpsl
cmpsl
fsubs
cmpsl
cld
sbb
mov
push
ss
adc
lods
or
push
nop
mov
mov
jbe
loopne
fwait
xor
out
lahf
mov
mov
mov
and
sbb
adc
test
add
pop
pop
or
inc
rcl
add
stos
mov
lea
mov
movd
xchg
pushf
aam
je
movsb
push
call
mov
loopne
push
ljmp
arpl
push
push
inc
jo
cmp
in
fsubs
and
pop
outsb
add
mov
push
dec
and
sbb
scas
cmpsb
stos
loop
test
mov
add
cmp
shr
mov
jo
push
popa
mov
out
movsl
loopne
and
es
out
inc
adc
loope
jnp
icebp
or
or
inc
and
jne
scas
jno
add
rolb
or
xchg
add
xor
in
dec
leave
rcll
add
push
xor
sbb
sub
movsb
nop
jle
lcall
lods
inc
add
ljmp
mov
stos
out
je
pop
add
andb
cmp
mov
sahf
arpl
jmp
test
ret
xor
mov
xor
out
loope
mov
inc
add
stc
sbb
add
mov
push
push
xchg
cltd
jecxz
cli
or
mov
movb
int
add
or
mov
or
and
mov
lods
test
cmp
cmpsl
cltd
clc
inc
icebp
pop
jbe
mov
adc
jp,pn
inc
test
pusha
out
or
ss
mov
or
test
dec
add
push
mov
xor
jg
and
shll
lret
or
xchg
or
call
cmpsb
adc
loop
inc
sbb
mov
not
and
push
or
dec
jg
jg
jmp
jo
and
sarl
shl
or
add
adc
and
not
and
or
sub
fldl
push
pop
out
into
mov
push
shr
or
add
mov
push
cmc
mov
lcall
clc
ja
dec
jmp
test
scas
cmc
add
cmp
clc
add
nop
and
mov
nop
or
push
xor
lds
in
xchg
or
jle
out
push
test
push
mov
inc
xor
movups
test
fiaddl
out
addb
inc
repnz
xorl
add
sarb
inc
mov
cmp
add
fcomps
loop
out
add
repz
shlb
nop
or
inc
mov
testl
push
imul
push
mov
adc
lahf
lret
and
mov
les
dec
xchg
cmp
mov
mov
out
rclb
push
iret
cmp
push
inc
stc
roll
fucom
and
nop
imul
lret
fsts
mov
pop
adcb
cwtl
std
adc
fs
lods
inc
pusha
and
ljmp
das
mov
cmpsb
movups
mov
pushf
ljmp
cmp
xchg
pop
lock
lea
mov
push
clc
adc
ljmp
cld
popf
fstp
sbb
push
idivb
sbb
or
adc
popa
js
mov
sarb
pop
or
add
sbb
adc
shl
and
pusha
lcall
adc
mov
cmp
stc
xchg
sahf
pop
jl
jns
nop
jmp
jmp
imul
jg
push
mov
mov
xchg
push
pusha
ds
jnp
push
ret
mov
in
xor
push
adc
add
loop
add
ret
mov
into
jmp
movups
xchg
and
adc
aad
fisubrl
mov
icebp
enter
sahf
push
loop
popa
cmp
adc
mov
push
fbstp
test
call
loope
loopne
sbb
flds
dec
jns
insb
cli
imul
stc
pop
aaa
ret
dec
loopne
bnd
xchg
mov
testl
mov
jp
adc
int
into
pushf
loopne
pop
lcall
in
adc
inc
mov
push
loope
or
daa
sbbl
jmp
add
aaa
push
andb
insb
add
das
mov
clc
mov
pop
fadd
out
cli
stc
xchg
sti
pop
loope
pop
mov
dec
mov
rcll
adc
and
cmc
rol
fcmove
fnsave
loopne
xor
xor
xor
ljmp
pushf
xor
xor
and
stc
xchg
cwtl
inc
cmp
jmp
in
cwtl
fbstp
fdivs
into
sub
shlb
lock
adc
and
dec
inc
shll
shlb
shl
sub
sarl
pop
and
insl
push
adc
orl
lods
xor
fs
and
xchg
add
in
pop
ds
ret
pop
cmpsb
call
xor
dec
in
pop
fbstp
jl
ljmp
subl
xor
cmp
test
fs
hlt
xchg
cmp
mov
cmp
dec
mov
jbe
mul
fbld
xor
aaa
mov
das
sub
repz
mov
cs
xor
cli
xor
jle
sub
ret
shlb
ret
data16
sub
cli
daa
mov
jecxz
imul
xlat
cmp
aad
adc
fcmovu
push
scas
js
fbstp
sub
call
add
ds
add
out
in
or
inc
out
ret
idiv
cltd
sbb
fldl2e
out
loopne
sbb
outsb
push
sbb
cltd
xchg
inc
lcall
pop
cmp
add
xchg
loopne
into
sub
insl
cmp
cmp
adc
jns
and
push
lods
loopne
or
jg
orb
sub
sub
push
mov
xchg
or
inc
adcl
iret
cmp
sarb
dec
in
sub
or
push
inc
pop
push
push
mov
sub
stos
adc
push
fs
dec
sbbb
and
or
pop
filds
add
xchg
push
pop
rcrb
lcall
and
sub
imul
or
push
ja
les
add
aam
xchg
dec
xchg
push
sbb
lds
push
push
jae
insb
fbstp
dec
addr16
outsb
mov
pop
test
nop
dec
and
inc
xchg
into
cld
loopne
ss
jle
outsl
jmp
xor
pop
sbb
movsl
adc
push
inc
jmp
inc
imul
add
in
cltd
mov
out
pop
cmpb
adc
dec
lea
mov
xor
int3
ucomiss
cmpb
jmp
jb
dec
cmp
ss
sbb
loopne
movb
cld
ss
sub
rcll
inc
xor
xchg
roll
popf
jmp
out
mov
add
fiaddl
dec
inc
es
mov
inc
addr16
test
push
mov
and
aad
shlb
push
rol
push
shrb
adc
pop
fucomp
or
push
xor
xacquire
lahf
sub
les
leave
xchg
push
rcrl
iret
shll
pop
shl
add
pop
in
loopne
inc
lret
mov
mov
std
xor
add
add
rep
mov
add
movl
out
inc
addr16
mov
fdivrl
xor
pop
ret
ffreep
sbb
jbe
and
mov
inc
add
repnz
stos
xchg
jne
sub
mov
adc
adc
adc
add
mov
sbb
jb
pop
pop
or
jecxz
pop
and
sub
bound
lea
lret
rol
pcmpeqb
mov
jecxz
fwait
cli
mov
aas
cmp
jb
mov
gs
sbb
sub
mov
push
push
sbb
push
jno
pop
clc
js
pop
aam
mov
movb
fisttpl
or
loop
mov
sub
xchg
mov
cmp
ja
lret
es
lods
adc
or
sbb
out
sbbb
test
lret
adc
xlat
lret
lods
aas
enter
jl
jno
pop
cld
daa
dec
dec
or
mov
loop
lea
add
xor
into
cmp
push
mov
jae
incl
jnp
sarl
sub
add
int
and
push
ror
cmc
inc
insl
sub
lea
lods
movsb
icebp
mov
lahf
mov
cmc
jae
pop
mov
xor
push
cmp
sbb
fdivs
jb
xor
jo
pop
cld
inc
pusha
sbb
lods
mov
push
insb
or
scas
lods
pusha
pusha
and
inc
ret
pushf
aas
push
pop
or
or
cmpsb
lea
and
push
rcll
mov
or
add
outsl
mov
movl
xor
cmc
jne
mov
lea
mov
cmpsl
push
push
push
cmp
jnp
rolb
fxch
insl
or
cmp
push
pushf
into
xor
sti
repz
mov
mov
incb
adc
and
sbb
shll
push
jecxz
add
orl
cwtl
lods
sarl
ret
shl
daa
and
in
push
mov
mulps
pop
inc
cmp
jae
xor
push
movsl
jo
sbb
or
or
sbb
cld
fsts
mov
mov
adcb
aas
mov
fsubr
sbb
xor
mov
mov
jg
sbb
xchg
or
imul
add
dec
mull
or
mov
loope
outsb
negb
xor
xor
adc
mov
sbb
inc
mov
decb
popa
add
mov
insl
inc
xor
pop
fildll
in
xor
mov
fsubl
scas
or
xlat
int3
test
cmpsb
or
imul
xor
fwait
sbb
adc
test
or
xor
cmp
mov
insb
arpl
pop
loopne
mov
movsl
adc
stos
sbb
jl
movsl
sub
mov
in
in
or
insb
cmp
fstpl
mov
ss
mov
adc
sub
mov
mov
push
cwtl
sub
pop
push
aaa
in
decb
mov
stos
xor
insb
pushf
imulb
shrb
test
push
xchg
mov
xor
addr16
and
lock
aam
jl
sbb
out
ja
push
outsb
xor
xchg
in
dec
xchg
imul
adc
push
int
test
push
sub
pop
inc
je
mov
cmpsl
rolb
add
push
xor
mov
jle
js
insl
jo
fsub
add
xor
jge
cmp
inc
xchg
in
int
dec
cld
sbb
lods
test
loopne
sbb
cmp
jno
bound
mov
rclb
enter
sub
fwait
pop
sub
xchg
mov
je
rcll
lods
cmp
mov
ss
sbb
outsb
mov
in
icebp
lcall
dec
and
jnp
clc
aad
adc
dec
data16
aam
dec
dec
js
mov
push
insl
push
pop
dec
icebp
data16
data16
pop
sub
test
es
adc
icebp
xor
loope
add
or
mov
mov
test
loopne
pop
push
hlt
ss
push
movsl
or
cmp
push
or
jl
je
fs
ss
fs
push
test
or
dec
insl
adc
mov
bound
pop
sbb
in
inc
mov
ret
enter
cli
daa
push
or
inc
mov
jnp
aad
call
mov
adc
dec
addl
dec
std
inc
addl
rorb
or
test
dec
js
les
sub
scas
sarl
nop
mov
mov
data16
jl
sub
add
ss
shl
ret
inc
or
es
lea
push
jle
out
adc
add
ret
bound
pop
mov
ret
jne
js
jle
sahf
mov
fmuls
orb
test
push
mov
push
push
sbb
cs
mov
push
stc
adc
inc
adcl
subl
movsb
rcrb
or
xor
dec
add
scas
sub
ror
fbld
inc
mov
mov
mov
or
adc
sbb
in
push
mov
sub
inc
add
dec
jne
push
or
mov
mov
push
mov
inc
ret
sub
mov
pop
jge
mov
push
jmp
es
rclb
fcmovnu
mov
pop
or
dec
pusha
pop
popa
jp
or
pop
das
adc
fidivl
repz
aam
add
testb
in
pop
add
mov
push
sbb
inc
enter
jb
stc
cmpl
cmp
xchg
xor
dec
add
pop
or
in
xor
cwtl
das
pop
push
cmp
add
in
inc
add
and
mov
xor
das
push
jbe
lret
das
pop
mov
cmp
jb
mov
pop
js
mov
jbe
daa
or
das
or
and
sub
or
and
pop
jb
movsb
push
xchg
jb
loopne
sbb
aas
adc
cs
adc
cs
xchg
pop
adc
das
adc
fs
or
adc
jb
or
pop
test
push
lret
adc
push
mov
and
sbb
add
inc
add
gs
inc
add
xchg
cld
pop
sahf
or
pop
cmp
or
or
sbb
jg
push
push
push
push
ds
xchg
push
negl
push
and
in
push
les
push
dec
fidivrs
push
in
negl
push
mov
in
leave
dec
lock
addl
jle
ljmp
xchg
jmp
mov
cmp
inc
sub
and
jb
jnp
push
rorb
and
push
adc
vmwrite
add
xchg
or
add
cmp
push
and
aas
mov
add
xor
push
or
clc
nop
push
hlt
xor
pop
or
hlt
push
test
or
and
or
loopne
adcb
push
push
ds
or
and
dec
lods
jg
les
in
mov
pop
dec
mov
add
and
or
mov
add
sbb
push
out
sbb
movsb
cltd
adc
fsubrs
xor
mov
adc
out
adc
mov
divb
add
cwtl
add
add
jp
push
subl
or
mov
mov
sbb
fidivl
mov
testb
cmp
mov
xor
mov
es
lea
push
ret
or
xchg
jge
xchg
hlt
add
les
les
nop
cmpsb
mov
adc
lds
dec
dec
sub
addl
mov
aas
mov
pop
je
clc
shll
es
fidivrl
aad
push
sbb
ror
and
or
fwait
add
cmp
das
and
addb
push
push
and
mov
mov
sbb
add
and
mov
xchg
mov
and
dec
push
lret
pop
pusha
insb
inc
push
movsl
adc
lods
cmp
adc
jno
jg
push
jno
mov
push
lea
imul
add
xor
push
dec
leave
xor
inc
mov
insb
loop
mov
inc
add
cmp
xor
loop
pop
push
dec
lea
or
pop
inc
jb
pop
mov
fistl
adc
xchg
adc
sbb
imul
inc
sarl
loope
sbb
ljmp
mov
add
add
adc
and
add
add
les
sub
bound
jl
or
movsb
add
and
add
mov
mov
xchg
bound
out
or
aad
mov
sbb
popl
inc
sbb
push
push
add
push
add
sub
push
and
push
xlat
add
mov
sbb
pop
outsl
pop
and
or
icebp
or
jl
sbb
push
adc
imul
inc
and
je
arpl
xor
inc
outsb
push
jl
mov
mov
jne
push
jae
push
dec
pop
xchg
inc
ffree
xchg
add
inc
adc
xchg
cld
rcrl
ret
shlb
xor
sub
add
sbb
pop
add
hlt
or
or
or
test
or
js
xchg
clc
movsb
and
fiadds
fwait
lds
mov
dec
push
jecxz
inc
fmul
push
addl
cs
sub
or
inc
xchg
rolb
add
aam
sbb
lahf
push
shrb
jge
add
sub
push
mov
roll
dec
fisttpll
pop
pop
test
ret
pop
sahf
lods
add
out
dec
cmp
sahf
jne
loopne
fbld
mov
arpl
mov
jmp
cmpl
js
jno
enter
sbb
lock
aaa
push
sub
jne
repnz
jns
and
and
pop
push
sbb
pop
sbb
ret
or
into
clc
adc
jb
jne
sbb
es
push
arpl
fsubp
push
mov
pop
mov
pushf
mov
or
xlat
add
arpl
call
std
cmp
push
lahf
test
jno
push
jb
sbb
pop
adc
ret
rol
inc
mov
pop
lret
rcl
sbb
mov
xchg
mov
inc
pop
je
les
push
push
inc
xor
mov
xor
sbb
and
aaa
xchg
pop
lods
push
ds
mov
addl
add
and
mov
or
inc
push
pop
push
ds
aam
enter
xchg
xor
ja
fs
mov
push
jno
push
jge
cs
add
add
xchg
add
mov
inc
es
sbb
bound
xor
sub
sarl
movb
inc
es
pop
push
sbb
loopne
sub
stos
and
adc
and
sbb
aas
or
dec
sbb
mov
and
push
lea
fdivrs
add
rcrb
mov
scas
mov
cwtl
add
add
into
push
mov
orb
xor
mov
jbe
mov
mov
sbb
add
xor
bound
sbb
bound
push
int3
inc
mov
push
pop
and
nop
ja
pop
inc
fcomi
outsl
push
out
xlat
add
dec
xor
imul
stc
inc
out
shlb
pusha
test
ds
lods
lret
dec
cmp
sub
nop
sbb
xorb
dec
mov
lock
xlat
and
jl
sub
cmp
or
add
mov
inc
or
aaa
or
rcr
rorl
loopne
push
mov
bound
fisttps
pop
adc
pop
js
fdivs
add
xchg
mov
in
and
mov
dec
add
mov
ret
or
sub
or
pop
ja
or
xor
mov
mov
pop
push
push
push
add
sub
xor
out
adc
pop
arpl
pop
xor
add
stos
les
cmpb
fadds
add
insb
and
jo
add
lea
mov
es
lcall
test
jb
xor
mov
je
ret
or
cmovs
dec
cld
xchg
pop
sub
inc
mov
adc
test
lods
ret
sbb
orb
pusha
sub
cld
scas
add
int
dec
sbb
pop
push
sbb
cld
add
xchg
pop
test
push
fs
dec
inc
ss
fidivs
data16
dec
xor
sahf
inc
push
sub
nop
and
sbb
nop
dec
repz
out
fistl
push
mov
out
cmp
xor
push
jp
out
xchg
pusha
es
movsl
cs
jae
jns
out
or
inc
push
mov
mov
add
push
pusha
push
aam
aam
push
lods
adc
cmp
push
fsubrl
les
and
outsl
sub
push
fdivl
cmp
scas
repnz
and
sub
jb
es
jno
dec
push
or
and
add
or
jno
and
sub
mov
fistpll
mov
xchg
jo
rcrl
xor
fsubl
fmulp
mov
adc
pop
jl
jo
andb
inc
inc
push
mov
rcrb
adc
pushf
dec
or
dec
or
inc
insl
bound
push
inc
xor
mov
mov
cs
inc
adc
push
and
and
pop
adc
sbb
xor
je
jns
add
inc
int3
inc
cmp
xchg
push
mov
bound
call
rorl
add
pop
pop
ljmp
pop
mov
jno
test
or
rcl
test
push
das
lea
dec
or
sbb
add
push
mov
cli
xchg
in
and
imul
adc
pop
hlt
fs
arpl
pop
int
adc
lahf
jg
and
insb
mov
cmp
and
and
and
ret
add
rorl
adcb
add
inc
sub
sti
adc
adc
and
push
or
lahf
sbbb
jo
push
sub
and
ds
and
fbld
test
popf
lds
stc
mov
adc
push
fwait
xor
add
int
adc
mov
xchg
add
and
add
sbb
aad
sbb
lods
ret
sbb
mov
dec
pushw
adc
sbb
pop
push
divb
mov
mov
sbb
dec
mov
xor
pop
or
out
mov
jge
lea
xchg
mov
sub
sbb
cld
jbe
push
int
pop
xor
lahf
rorl
mov
push
mov
lcall
xchg
cmp
popa
fnstsw
dec
inc
dec
pop
fimuls
xor
dec
icebp
in
and
xchg
mov
push
xor
in
xchg
lret
loope
es
in
inc
int
xor
adc
add
es
add
add
lahf
mov
jmp
pusha
mov
dec
jo
jo
loope
rorl
push
inc
enter
inc
loop
xor
fldt
adc
mov
add
stos
iret
out
push
push
call
inc
push
scas
nop
das
popf
or
std
mov
dec
cmp
dec
stos
adc
fistpll
pop
and
xor
aas
and
lret
or
sbb
add
int3
jmp
loopne
adcb
pop
push
rorb
hlt
int
xchg
lea
je
shrl
data16
adc
loope
add
mov
and
movl
lcall
sbb
pop
add
fisttps
xor
pop
rolb
lea
sti
pop
rcrl
pop
pop
jo
jle
push
sbb
jg
insl
dec
push
push
dec
scas
int3
pushf
add
jo
sub
lahf
mov
test
mov
push
or
dec
loop
insb
jo
xchg
rolb
add
pop
pop
leave
andb
loopne
les
push
nop
daa
or
dec
lods
addb
cs
mov
aas
push
outsb
inc
dec
jecxz
add
ret
lcall
inc
xor
and
adc
hlt
sub
fs
cmpl
push
add
jge
mov
test
cmpsb
push
add
add
mov
loope
mov
push
and
cwtl
fs
cmp
aaa
popa
fwait
js
sbb
cli
pop
in
xor
ret
jl
add
jns
pop
or
or
shlb
fcomps
repnz
inc
cmp
pop
xor
push
aaa
pop
add
sarl
jl
cmp
jmp
sub
pop
rcrb
push
mov
cwtl
loop
pop
push
rsqrtps
enter
decb
loope
sub
andl
sub
fsubrp
mov
in
and
xchg
iret
or
cwtl
cld
xor
or
movsl
add
mov
dec
add
or
adc
add
imul
dec
pop
inc
add
cmpsb
sbb
aas
filds
xchg
dec
xorb
daa
mov
sahf
or
adc
mov
sub
add
roll
dec
repnz
and
cmpsb
push
dec
jmp
inc
out
loope
jo
movb
mov
popf
repnz
fidivs
cltd
movsb
sbb
mov
add
pop
out
outsl
or
cmpsb
lret
lods
mov
jne
xchg
mov
sahf
mov
jg
add
add
mov
repz
imul
push
sub
cmp
mov
mov
fbstp
or
or
je
in
aam
push
inc
cmp
imul
arpl
inc
and
lock
in
mov
jl
jmp
jmp
add
sub
ret
and
cs
sbb
sbb
addb
push
dec
xchg
js
mov
inc
push
imul
je
or
dec
push
les
js
mov
dec
and
xchg
add
clc
es
shll
mov
or
jl
pusha
inc
daa
jns
repz
movsb
xor
push
dec
dec
adc
aam
add
lods
xchg
jp
xchg
nop
add
aam
xor
or
lods
xor
or
int
mov
imul
push
adc
std
fstps
popf
xchg
dec
push
sbb
movsb
enter
adc
inc
inc
dec
jnp
dec
imul
adc
rclb
and
dec
adc
dec
lret
rcrb
mov
ret
add
lret
ss
add
in
sahf
ficoms
popf
xchg
xor
cmp
jnp
fadd
subl
mov
popf
nop
iret
mov
xor
push
outsb
lea
pushf
add
sbb
adc
and
jp
mov
lock
mov
add
push
jno
mov
adc
lcall
shll
add
ss
fs
pop
mov
adc
outsb
pusha
fiaddl
mov
ret
sub
es
push
push
xor
jno
test
outsb
mov
mulb
push
cmp
aad
cltd
ret
sub
or
push
call
in
inc
stos
fnstsw
insl
xor
mov
sub
test
xchg
ja
lock
mov
xchg
mov
daa
mov
dec
xchg
adc
pop
xchg
pop
sbb
add
mov
jge
adcb
adc
adc
push
add
add
fs
and
xchg
leave
icebp
arpl
cmpl
add
jg
fs
or
leave
insl
dec
nop
rclb
inc
lea
mov
push
movsb
negl
insb
adc
inc
loopne
mov
lock
push
push
push
pop
out
jnp
lods
mov
push
push
cmp
es
ret
loopne
daa
das
aam
xor
add
pop
sub
aas
or
and
inc
jb
mov
fwait
sbb
aas
push
ret
pop
cmp
pop
xor
adc
dec
push
sub
shll
mov
mov
mov
pop
cmp
and
ucomiss
jle
movsl
adc
fadd
sarl
push
and
fs
add
les
imul
es
fmuls
mov
pop
fadds
cmc
mov
cs
add
mov
rorl
or
rcll
inc
jnp
sbb
sub
pop
and
xchg
push
jmp
nop
mov
aam
pusha
push
leave
call
mov
and
mov
pop
pop
or
cmp
movsb
adc
or
mov
xorl
xor
rcrl
les
push
fucomip
mov
nop
inc
arpl
and
mov
rcll
or
sbb
xchg
pusha
rorb
cmp
ret
push
mov
lds
or
fs
pop
push
hlt
sub
sbb
push
xchg
pop
jl
add
or
sbb
jge
lods
insl
sbb
fstl
js
mov
xor
mov
xor
fistps
push
cmp
pop
rcll
xor
and
push
flds
dec
stos
cmp
xor
test
sbb
js
shr
dec
inc
imul
mov
call
cmpsl
iret
call
mov
xor
test
or
dec
pop
pusha
mov
orb
or
lds
sbb
aam
jno
and
jl
adc
insl
fbstp
cmp
mov
adcb
cli
or
sbb
je
add
in
inc
push
movsb
mov
notl
jg
push
gs
test
adc
sub
add
add
pop
nop
bound
inc
jl
dec
cmp
sub
pop
aas
add
or
push
jl
mov
pusha
mov
je
fs
and
arpl
sub
cmp
sti
mov
adc
pop
lret
push
add
inc
aad
or
inc
add
sub
sbb
mov
imul
pushf
add
int3
inc
pop
cld
mov
das
pop
sbb
test
addb
mov
enter
mov
or
pop
push
clc
pusha
jecxz
xor
addb
lret
pop
adcl
xchg
test
dec
jne
sub
cli
sets
dec
sub
lock
fstpl
sbb
notb
imul
dec
dec
test
je
loope
add
pushf
xor
imul
movsl
das
and
dec
movsb
imul
xor
int3
or
adc
je
xchg
xor
xor
sbb
push
sbb
mov
dec
or
and
sbb
inc
pop
fucomip
pushf
stos
mov
nop
pop
dec
inc
aam
test
jno
xor
or
or
fs
pop
cmp
dec
js
push
rclb
cli
inc
xchg
cmp
or
into
add
out
xchg
sbb
jmp
or
adc
or
mov
or
popf
pusha
dec
mov
adc
or
mov
stos
aas
pusha
popf
sub
push
popl
push
push
push
xor
dec
test
cli
addl
mov
and
enter
xor
dec
cmp
fcompl
pop
or
inc
and
call
dec
test
add
test
dec
add
adc
call
cwtl
cltd
mov
sbb
mov
push
pop
mov
fxch
stos
jnp
jl
push
stos
and
insb
jl
add
add
pop
sarl
in
iret
addr16
push
mov
inc
sub
push
jg
lret
mov
iret
scas
inc
test
inc
test
fadds
jmp
cmp
fsubp
iret
cmp
mov
pusha
pop
sbb
pop
daa
xor
mov
xor
mov
push
fists
outsl
insb
and
hlt
or
jmp
clc
fs
dec
sub
test
and
jmp
adc
xor
pop
xchg
mov
lock
mov
nop
fs
cmpsl
mov
adc
push
aam
xchg
inc
jl
inc
push
jb
testb
insb
push
push
cmp
fs
pop
pop
subb
cmp
test
jmp
out
inc
out
lods
je
int3
sub
xor
adcb
shl
test
pop
adc
and
rcrl
shrb
sub
or
lods
and
mov
daa
cmpb
pop
and
dec
sub
aas
jl
push
pop
xor
jle
les
or
and
adc
adc
push
lea
push
cli
cmp
lea
push
out
into
and
leave
and
jmp
xor
lods
out
or
out
push
add
icebp
pusha
inc
cmp
dec
push
xor
jp
mov
pop
cld
add
push
enter
pop
xchg
arpl
mov
inc
pop
loopne
pop
and
inc
adc
orb
mov
daa
or
adc
data16
pop
out
outsb
cmp
lds
insb
mov
mov
mov
rorb
push
imull
roll
or
rcr
test
int
imul
xor
push
lret
aaa
or
outsl
inc
gs
or
inc
add
jbe
xor
or
mov
push
mov
or
mov
sbb
lahf
push
mov
mov
push
lea
push
lret
push
push
jo
cmp
push
inc
outsb
icebp
int
les
ja
int
xor
movsb
rclb
xchg
repnz
pop
test
xor
add
inc
pusha
add
add
inc
mov
nop
icebp
sub
fists
push
lods
fsubr
in
push
and
int
jmp
insb
call
pop
push
xchg
xchg
divl
cvtps2pi
mov
mov
rorl
push
je
nop
pop
sbb
sub
cmp
xchg
push
int
push
mov
imul
test
inc
inc
stos
incl
lcall
sbbl
jl
loopne
xor
jecxz
ret
sub
rcll
inc
cmp
hlt
dec
punpckhbw
pusha
add
loope
pop
lea
mov
jns
imul
dec
cltd
xchg
dec
and
xchg
push
subb
cmp
push
js
push
sti
pop
fbstp
pop
or
add
je
pop
add
lods
sbb
xchg
cmp
mov
jno
jnp
mov
scas
xor
cmp
xchg
test
shrl
popf
xor
adc
sub
sub
sub
popa
loopne
ljmp
setle
stc
ljmp
xor
pushf
xchg
scas
lcall
ja
adc
mov
insl
ret
cltd
mov
push
ret
sbb
addb
jmp
and
loope
lock
mov
lahf
ret
mov
pop
sti
xor
add
jno
pushf
inc
rcrl
lds
add
mov
add
xchg
lea
sub
pop
int3
adc
dec
out
pop
cwtl
aam
add
movl
mov
pop
mov
or
push
add
test
pop
push
pop
jo
push
add
jl
mov
fldl
lods
ret
sbb
xchg
xor
add
lcall
test
sbbl
sub
movswl
sbb
aas
repnz
popa
and
sbb
les
test
fldt
mov
xor
add
shr
and
adc
xchg
movsl
cmp
sub
dec
inc
fwait
dec
mov
pop
aam
dec
mov
adc
or
adc
add
stos
or
push
fistpl
pop
dec
dec
push
test
movsb
adcb
push
cmp
mov
in
mov
pop
add
mov
lock
cmp
cmc
jle
data16
sti
data16
push
pminsw
fimuls
jle
mov
mov
xor
or
push
stc
dec
aam
adc
mov
dec
xchg
int
les
aaa
scas
call
andl
dec
xchg
jnp
push
enter
inc
xchg
mov
sbb
mov
fldt
cwtl
sbb
mov
daa
mov
sbb
bound
jb
test
sbb
mov
pop
add
and
shlb
lahf
inc
push
push
in
shrl
sub
inc
and
test
or
sub
xorl
inc
test
mov
sbb
add
stos
jo
sahf
inc
push
mov
andb
shlb
adc
sub
mov
je
es
das
and
jle
pop
cmpsl
cli
cld
or
stc
mov
fstp
fnstcw
jecxz
lock
insl
add
mov
sbb
xchg
sub
cmp
and
lods
jno
inc
or
aam
push
and
repnz
xchg
mov
cmp
pop
mov
push
and
inc
jo
or
fwait
sbb
pop
int
fmull
mov
inc
xchg
lock
sar
push
push
mov
iret
fimull
lock
imul
sbb
adc
or
sub
cmp
push
or
gs
dec
mov
sub
push
jecxz
and
std
pusha
repz
divl
inc
pushf
jns
lods
cmp
shll
dec
into
mov
mov
add
es
ss
cmp
pop
sbb
imul
or
cmp
dec
push
inc
inc
ja
insl
lock
cmp
push
cmp
fcmovu
or
leave
hlt
shrl
cmc
daa
jne
push
xchg
push
aas
add
adc
mov
imul
adc
push
jecxz
lcall
fsubrl
js
mov
cs
fdivr
and
js
or
pop
jmp
sbb
int3
fimull
push
lock
push
jmp
cmpl
add
dec
lock
pop
sbb
or
inc
dec
adc
imul
sbbb
dec
xlat
sbb
mov
rep
sub
sub
ret
inc
mov
adcb
xchg
mov
sbb
sbb
sbb
jae
in
push
cmpsl
xchg
adc
pop
pop
enter
jb
sbb
pushf
inc
jg
test
arpl
std
xor
icebp
mov
xchg
jo
and
sub
pop
jmp
pop
outsl
repnz
add
xchg
test
js
or
bound
xor
sub
push
push
pop
jg
shl
add
add
push
or
fcoms
and
or
test
inc
cmp
outsl
test
xor
push
adcl
ja
arpl
add
dec
ret
and
lcall
inc
pop
lock
jge
or
pop
pop
adc
cltd
into
pop
push
add
jno
mov
dec
insl
aas
cmpl
mov
and
inc
insl
push
les
jle
mov
add
mov
xor
dec
mov
andb
mov
mov
inc
cli
pop
mov
add
ljmp
jcxz
or
mov
jb
movsl
std
pop
std
sub
cmp
lods
notb
jge
inc
inc
es
mov
shrl
movsb
ss
jl
imulb
adc
loop
sbb
cwtl
sub
dec
stc
loope
or
movsb
or
inc
cltd
jne
mov
push
xchg
inc
dec
and
lahf
xor
lds
xchg
push
or
xor
clc
les
lcall
push
loope
gs
sbb
inc
push
lea
adc
push
mov
test
or
js
xchg
adc
sbb
mov
bound
in
push
sti
dec
push
insb
mov
fs
xchg
adc
test
lods
mov
jns
sub
adc
xor
inc
or
scas
fstpt
pop
jne
and
scas
xor
shrl
mov
xor
push
adc
pop
shrl
aad
mov
mov
dec
stos
pop
inc
push
sub
or
pop
adc
shll
aas
icebp
inc
add
sbb
sti
adc
dec
xor
leave
call
dec
ret
xor
jne
movsl
dec
pusha
movsb
cwtl
outsb
mov
and
movsb
pop
push
xchg
nop
sub
add
shrb
call
lret
jmp
sbb
test
mov
mov
addr16
inc
pop
fildl
push
dec
in
aam
or
fdivs
sub
cmp
mov
cmpsl
lea
fwait
rol
stc
add
daa
nop
inc
add
mov
aaa
cmovle
xchg
and
xchg
movl
push
fwait
jle
and
and
add
and
or
push
movsl
and
mov
push
pushf
and
or
out
xor
pop
shl
test
jecxz
lods
imul
add
dec
jl
mov
add
jle
mov
ret
iret
cmc
loopne
mov
pop
cs
lea
jle
fidivl
flds
lret
sbb
push
mov
xchg
rclb
fisttps
cli
cs
mov
cmp
imul
or
xchg
mov
testl
sbb
int3
push
data16
sahf
pusha
sub
jnp
cmpsl
pushf
push
in
imul
pusha
aaa
sbb
ret
loopne
inc
cmp
hlt
sbb
test
mov
inc
fcmovu
cmp
pop
sbb
stos
popf
aaa
or
enter
xchg
push
dec
add
mov
xor
sbb
ret
fcoms
and
in
sub
flds
mov
es
or
and
rcrb
loope
aad
lret
cmp
jl
xor
adc
andl
mov
add
adc
jnp
leave
jo
les
adc
pop
mov
imulb
leave
xchg
xor
xor
sub
xorb
cli
cmpsb
sub
stc
mov
lcall
xchg
lods
mov
add
add
inc
out
cmp
sahf
mov
add
or
repz
dec
rclb
mov
mov
pop
test
and
aaa
pop
push
adc
shrl
sbb
or
adc
pop
xor
and
cltd
std
and
rolb
pop
pop
loop
jno
mov
sub
sbb
fxtract
jl
add
rcll
incl
loopne
pop
je
subl
mov
clc
cmp
push
aaa
sbb
icebp
out
sub
mov
data16
or
setge
dec
or
mov
addr16
gs
cmpsl
sbbl
insb
xchg
ja
sbb
std
pop
mov
out
xor
enter
and
dec
mov
pop
mov
xor
jo
fadds
cmp
sub
xor
mov
pop
fs
inc
es
xor
cmp
loope
xchg
or
cmp
addl
add
sti
cmp
sub
outsb
jo
inc
dec
fs
aam
push
sbb
lret
jmp
insb
rclb
mov
fidivs
rorb
push
loope
imul
dec
inc
arpl
adc
and
push
xchg
dec
jmp
movsb
loopne
rcl
je
push
iret
into
ficoms
xchg
cltd
aam
mov
es
pusha
inc
cmpsb
add
inc
daa
mov
dec
jmp
push
lds
mov
fs
inc
loop
adc
inc
jbe
ss
and
rcl
inc
push
pop
sbb
mov
mov
loope
lock
pop
jo
adc
rep
inc
mov
outsb
inc
or
cmpb
mov
mov
adcl
clc
sbb
mull
inc
adc
add
pop
icebp
add
jmp
aad
mov
add
fisttpll
push
shl
aam
les
dec
addr16
or
mov
mov
shrl
adc
pop
pop
rolb
add
loope
jno
adc
lds
push
or
loope
or
mov
push
sub
or
loope
shl
or
fmuls
loopne
push
or
dec
test
adc
iret
pop
mov
or
push
dec
cmp
and
cmp
push
sub
pop
pushf
int3
and
je
test
or
data16
and
push
lea
push
jg
fmuls
push
lahf
test
xchg
push
push
push
sbb
adc
lds
leave
int3
jmp
in
fwait
dec
inc
adcl
and
pop
dec
loope
aam
push
and
clc
or
and
cmc
enter
lret
dec
jmp
adc
into
add
add
mov
insb
roll
adc
jge
xor
inc
add
mov
mov
xchg
add
push
xchg
inc
or
dec
push
addr16
push
js
add
enter
inc
add
jl
sub
dec
inc
xor
nop
lret
push
or
or
adc
add
repz
loop
movsb
cs
push
icebp
pop
lcall
inc
jb
inc
adc
xchg
arpl
sbb
fs
andb
sub
imul
test
mov
stc
sbb
mov
mov
enter
lea
fisubrl
lahf
push
mov
or
ja
nop
fcmovnb
dec
cmpsl
sbbl
adc
clc
cmp
pop
jbe
push
jmp
lock
push
adc
push
push
mov
add
add
push
sbb
add
cli
orl
std
insb
adc
fiadds
lods
or
sti
jbe
lock
lock
xchg
push
jle
dec
or
or
dec
xchg
filds
cmpsl
lock
aaa
mov
sub
outsl
gs
je
cmp
adc
test
cld
orl
mov
pop
lock
cmpsl
addl
mov
or
and
add
mov
add
pop
inc
ja
imul
insb
mov
pop
aaa
lcall
or
adc
adcl
fst
xor
sbb
and
xchg
adc
ja
out
ds
push
sbb
cmp
repz
outsl
jle
add
sbb
add
pop
orb
outsb
dec
mov
test
subl
mov
jecxz
insb
pop
and
push
or
sbb
add
xchg
insb
mov
pop
jnp
mov
push
pop
pop
or
mov
mov
lret
sbb
jae
and
cmp
cmc
sub
inc
add
cltd
mov
mov
dec
lods
push
sub
data16
mov
cmp
pop
and
pop
adc
daa
cmc
push
outsb
pop
pop
les
jmp
push
jne
sub
adc
sub
adc
add
dec
imul
outsb
sbb
inc
cmp
sub
or
xor
aas
es
or
xor
pop
sbb
adc
mov
testl
push
and
ret
jp
ret
int
sbb
xchg
cmpsb
gs
loope
pop
sub
stos
jae
pop
mov
sbb
shlb
iret
jno
pop
nop
rorb
push
ss
das
xor
sub
pop
and
jmp
psubb
movsl
or
dec
mov
in
cmpl
sbb
cmp
lahf
out
push
aaa
push
cld
sbb
cmp
jbe
mov
adc
roll
cwtl
iret
xchg
aaa
mov
movsl
xlat
push
mov
int
lahf
xorb
push
jb
adc
lcall
or
lods
push
cli
mov
loope
or
push
or
mov
out
aam
push
mov
icebp
loopne
mov
pop
add
adcl
xor
or
mov
jae
roll
push
push
mov
es
add
pop
cmpsb
testb
jmp
cmp
cmc
dec
fbld
testl
bswap
movsb
or
adc
popa
dec
rolb
pop
xor
std
mov
sub
or
sbb
mov
loop
dec
cltd
jg
rorl
jbe
fidivrs
rolb
adc
rcrb
push
mov
cmpsb
mov
cmp
pusha
int3
andb
ret
imul
or
rcrb
mov
jno
insl
loopne
adc
sbb
cwtl
add
or
pop
mov
sbb
lret
ss
nop
push
sbb
push
adc
into
sbb
sbb
dec
adcb
pop
mov
ficoms
ja
movl
dec
xor
or
pop
push
syscall
fsubrl
push
inc
cmp
add
and
xor
and
add
pop
nop
stos
dec
lahf
movsb
mov
xchg
lcall
fstpl
push
sub
or
sbb
dec
loopne
mov
jg
fimull
cmp
mov
dec
es
dec
stc
dec
pop
and
sbb
or
sbb
or
mov
dec
push
out
adc
jo
insb
push
je
js
mov
mov
pop
imulb
dec
insb
mov
decl
flds
push
xchg
inc
pop
leave
mov
xchg
loope
rorb
inc
xor
pop
leave
dec
xchg
nop
jg
rolb
jmp
leave
push
sub
or
test
xchg
sub
sub
inc
xor
aaa
in
mov
ret
imul
sbb
test
cmp
sub
xor
in
clc
addl
add
adc
imul
sbb
jnp
push
stos
push
xor
jg
pop
cmp
or
lret
lret
xchg
add
and
and
subb
aam
adc
jnp
insb
dec
push
lahf
sbb
pop
or
inc
mov
pop
jo
or
test
ja
pop
xchg
push
ljmp
pop
pusha
push
jmp
mov
in
push
inc
fcmovbe
scas
mov
dec
cmp
pop
adc
fisubrs
and
fldl
inc
adc
add
div
mov
add
cmp
mov
or
mov
cmp
push
loope
sarb
add
adc
mov
jbe
nop
pop
fidivl
in
dec
dec
mov
adc
fidivrl
xchg
stc
xor
mov
xchg
mov
ds
mov
arpl
inc
inc
sub
or
and
or
push
add
dec
bound
pusha
xchg
sbbb
push
imul
inc
in
in
cmp
pushf
cmc
test
sarb
xchg
adc
or
dec
inc
and
or
shlb
xchg
mov
xchg
and
std
push
add
pcmpeqw
mov
add
loope
popa
xchg
add
add
fwait
test
mov
in
nop
lds
and
jb
dec
mov
pop
and
xchg
pushf
lret
loopne
lea
xor
xor
sub
mov
adc
add
jb
add
test
fistl
push
push
push
mov
fstl
push
cld
mov
mov
dec
sub
mov
pop
movsb
mov
ds
jl
stos
push
or
inc
add
jne
jg
orl
push
push
mov
outsl
jge
fmuls
dec
dec
jne
dec
sbb
dec
xor
mov
xor
add
pop
cli
stos
push
jmp
push
or
ret
pop
pop
cwtl
inc
shll
mov
jecxz
inc
mov
adc
sarl
dec
sbbl
lods
mov
mov
sbb
add
or
jle
sbbl
jmp
dec
or
sub
adcb
xchg
sbb
xchg
and
js
addb
iret
jle
out
jg
sbb
ss
push
adc
add
insl
fs
mov
daa
sbb
es
movsb
sarl
out
out
xchg
addr16
dec
cmp
jp
mov
push
in
sbb
sub
cs
push
lcall
ret
dec
adc
mov
jp
jo
into
push
push
xor
in
xchg
mov
add
and
inc
or
sbb
add
push
aaa
lea
sub
xchg
subb
or
or
flds
rol
aas
push
xor
cmp
cmp
pop
jl
cwtl
test
dec
fmull
rcrb
out
inc
add
or
lods
addr16
je
mov
scas
mov
les
pop
stos
nop
xchg
enter
xchg
push
cli
xchg
clc
push
bnd
mov
mov
sbb
push
jl
xlat
jg
lea
xchg
xor
mov
xlat
inc
loop
or
lea
lock
cmp
push
ret
es
mov
sbb
stos
les
sarb
hlt
xchg
add
add
xorps
or
test
cmp
loopne
js
or
dec
loopne
or
test
add
push
xor
adcb
sub
adc
push
or
add
das
xchg
dec
repnz
test
dec
pop
call
mov
mov
je
gs
add
ror
dec
cmp
test
inc
inc
jecxz
cmp
sbb
inc
roll
adc
sarb
dec
jnp
inc
nop
dec
pop
and
mov
mov
and
mov
inc
xchg
xorb
inc
pop
stos
loope
jl
mov
dec
mov
jmp
add
push
jg
add
cmp
pop
dec
sti
jnp
push
fiaddl
sub
sub
adc
xor
and
sub
pop
rcrb
push
cs
xor
push
push
loopne
mov
out
dec
shrb
sub
nop
mov
lods
mov
and
pop
jl
jge
inc
adc
in
jo
hlt
sub
xchg
daa
inc
cmp
enter
inc
stos
xchg
mov
cmovle
roll
mov
add
push
daa
in
or
shlb
pop
cmp
insl
adc
add
inc
inc
sub
imul
xchg
inc
shrb
jmp
mov
mov
mov
inc
cmp
sbb
mov
and
jl
push
dec
adc
cmp
adc
std
sahf
adc
test
inc
mov
sub
lock
xor
inc
shrl
xor
add
or
inc
nop
sbb
bound
in
or
or
sbb
mov
xor
mov
add
and
pop
mov
push
add
push
movl
repnz
in
ss
mov
or
je
cld
add
loopne
addb
add
call
sarb
andb
mov
push
pop
rcr
inc
imul
inc
push
ret
ret
dec
pushf
jo
out
push
pop
mov
adc
pop
adc
sbb
or
jmp
cmp
aaa
pop
push
dec
shrb
add
cs
mov
enter
inc
sahf
rclb
push
jno
add
mov
std
sbb
pop
js
lcall
loope
test
insb
adc
dec
sub
inc
cs
mov
aas
jg
clc
sbb
push
adc
push
outsl
jne
pop
bound
adc
cmp
gs
dec
push
inc
xlat
cmp
sbb
fisubl
mov
mov
adc
inc
cmpb
in
add
pop
or
insb
movaps
ret
push
xor
das
push
push
rcrb
fsubs
nop
jg
xlat
aad
mov
ret
push
xor
in
in
pop
and
lock
mov
inc
xor
pop
push
mul
cmp
xchg
int
subb
mov
push
mov
js
scas
flds
inc
add
pop
out
decb
mov
fs
add
adc
test
aad
cs
push
cmp
jne
add
sub
arpl
inc
test
xchg
mov
imul
stc
std
das
cmp
mov
lcall
repz
push
push
push
jmp
add
jo
jnp
or
xor
dec
jg
inc
repz
pushf
add
lds
std
cmp
shll
in
daa
cld
loopne
in
shlb
and
xchg
adcl
add
mov
and
mov
add
sbb
mov
je
das
xor
and
repnz
mov
push
mov
push
ret
sub
push
sub
jns
stos
inc
std
mov
push
sub
pop
add
sti
mov
repnz
sub
jnp
jnp
push
push
nop
lods
push
rcrb
push
add
jne
mov
add
mov
jno
add
sarl
or
or
or
mov
inc
mov
push
add
ud1
and
add
sbb
inc
push
in
pop
push
je
cmp
xchg
or
cmpsb
xchg
jmp
mov
in
mov
cmpsb
push
or
inc
lea
adc
sti
add
jno
sahf
mov
cmpl
sahf
sbb
xchg
dec
testl
and
test
pushf
cmp
jo
add
xchg
push
adc
add
mov
mov
xchg
cld
aaa
add
cmpsb
adc
inc
arpl
pop
ret
mov
enter
jae
sbb
mov
pavgb
adc
push
sbb
repz
cmpb
fstpl
fcmovne
add
inc
sbb
jnp
add
lret
add
sbb
mov
sub
mov
cld
dec
push
mov
inc
fcoml
lds
push
shll
inc
daa
adc
or
dec
test
int3
pop
lcall
push
ja
mov
sahf
ret
ret
fadds
lret
dec
and
addb
scas
mov
sbb
jp
lods
cwtl
push
testb
mov
sbb
roll
scas
dec
jne
scas
aaa
inc
inc
pop
stos
add
push
jb
add
mov
sub
cli
and
cli
xchg
loop
in
sbb
sub
push
insl
and
push
ds
adc
adc
push
dec
negl
orl
push
ss
bound
xor
pop
or
cmp
rcl
shlb
sbb
mov
xchg
ss
add
test
pop
pop
and
mov
inc
pop
cmpsl
or
push
lret
or
dec
pcmpeqd
cmp
inc
call
es
nop
or
dec
dec
rclb
loope
push
add
cmp
and
jl
daa
bound
popa
test
pop
and
lret
icebp
fnstenv
jb
mov
add
sbb
jmp
dec
push
das
repnz
push
push
add
sti
mov
sbbl
inc
nop
adc
rolb
lret
adcl
fdivs
loope
and
pop
movsb
mov
roll
sbb
xor
lea
mov
and
mov
sbb
fcoms
push
outsb
xchg
aas
ret
in
cs
pop
nop
shrl
enter
inc
insb
and
orps
and
cwtl
mov
movsb
lock
pop
cmovbe
push
testl
mov
adc
xchg
mov
test
rcrb
outsl
sbb
xor
mov
aas
push
mov
gs
enter
inc
sub
sahf
xlat
cmp
push
add
fidivs
add
inc
xchg
rorb
jbe
sbb
mov
mov
push
adc
pop
lock
pop
pop
lea
repnz
and
ret
ficomps
shlb
mov
scas
js
mov
sub
sti
add
xchg
das
lods
mov
clc
fisubrs
cmp
aaa
sub
aam
and
xor
push
lods
or
push
enter
stos
dec
insl
xor
jbe
pop
ffree
jno
pop
mov
out
dec
lret
mov
dec
mov
inc
cmp
push
adc
pop
sbb
inc
or
dec
dec
inc
sbb
cmpsb
mov
mov
fidivrs
mov
fs
push
or
and
pop
insl
js
test
testb
inc
loopne
add
ret
mov
xor
inc
add
ljmp
sbb
add
cwtl
dec
dec
fisubl
mov
add
hlt
adc
jb
insb
or
or
cmp
ret
lods
jle
nop
sbb
arpl
jo
sbb
push
sub
xchg
cmp
mov
jl
out
lock
or
sub
test
je
call
mov
adc
dec
jl
aas
or
lahf
push
and
mov
lea
loop
ret
inc
in
xor
pop
jne
sub
push
fidivrl
scas
adc
test
pop
movsl
xchg
jmp
adc
cmp
je
pop
dec
sbb
adc
pop
test
adc
mov
and
outsl
inc
mov
das
mov
fimull
ds
cmp
rcll
nop
in
inc
lcall
add
sbb
xchg
cltd
jbe
icebp
mov
cld
and
push
dec
mov
inc
sarl
std
outsb
inc
repz
and
push
data16
jmp
aaa
ds
or
movsb
jge
mov
jne
inc
fdiv
addb
xchg
xchg
inc
ret
test
push
pop
shrb
rclb
sbb
mov
js
lret
adc
jg
sbb
add
jmp
inc
mov
xor
mov
flds
popf
dec
cmp
mov
mov
jl
push
jns
add
or
pop
iret
xor
addb
out
mov
sub
sbb
xchg
xor
push
jmp
nop
imul
fistps
xchg
imul
inc
lods
sbb
pop
jne
pop
and
fisttpl
and
shll
test
sub
and
cwtl
xchg
add
or
rcrl
push
movsl
dec
test
jb
pop
dec
adc
add
push
adc
inc
aad
lock
orb
inc
notl
or
std
je
sbb
xorb
push
pop
repz
pop
movsl
pavgb
and
jne
xchg
cmp
jle
je
adc
movsb
sub
add
jns
mov
push
mov
adc
into
divb
adc
push
push
adc
mov
cwtl
in
ds
mov
ret
jae
push
xor
sbb
adc
ret
lahf
jle
sub
sbb
push
inc
test
mov
push
ss
push
pop
inc
lock
pushw
mov
cmp
or
lods
jl
or
adc
adc
sbb
inc
lret
push
sbb
inc
and
mov
inc
inc
icebp
mov
and
add
shr
aas
push
lods
adc
and
pop
inc
ror
insl
lods
jl
js
jg
pop
cmp
js
xor
push
jmp
popa
filds
cmp
sbbb
rorb
add
and
push
sbb
mov
adc
add
sub
popa
xor
inc
sub
xchg
mov
test
jecxz
jmp
xchg
jbe
push
add
cmpsl
or
cmp
outsb
jbe
sub
outsl
je
call
cmpb
stos
inc
and
es
mov
mov
shlb
cmpsl
or
inc
loop
jecxz
sub
adc
xor
cwtl
rcrb
cli
imull
mov
cmp
jbe
jno
or
push
push
addr16
and
out
or
jae
add
ret
je
aam
mov
push
popf
and
sbb
sub
adc
jge
push
sbb
ret
inc
and
xor
jl
insb
add
repz
sbb
adc
test
stos
outsb
inc
insb
or
mov
pop
xchg
or
lahf
pop
pop
push
or
push
or
ret
dec
leave
imul
or
push
and
pop
adc
push
jns
lea
lea
test
cmp
scas
and
add
mov
push
mov
mov
push
mov
push
pop
repz
cmp
inc
xchg
cmpsb
add
jne
das
aaa
insb
mov
xchg
pusha
popa
sarb
sbb
dec
add
push
int
sub
mov
jae
out
ds
gs
imul
jecxz
xor
fst
xchg
mov
sti
pop
inc
out
add
dec
jne
cmp
jb
push
adc
and
pop
inc
or
repnz
and
sbb
push
dec
je
add
and
aas
sub
push
mov
ds
add
jnp
push
push
push
sub
stos
pop
sbb
pop
pop
jp
imul
or
and
sub
sub
subb
push
xchg
inc
cmpsb
inc
inc
add
add
test
stos
sub
inc
mov
rorl
adc
imul
push
jns
jne
dec
inc
and
pop
cs
adc
inc
xchg
loopne
jns
push
push
xchg
and
mov
mov
jmp
nop
pop
xchg
sbb
cmp
jne
sbb
xor
movsb
popa
inc
in
pop
push
dec
divl
inc
pop
cmp
cmpsl
mov
push
loop
or
dec
test
or
dec
mov
mov
push
iret
sahf
stos
lea
dec
push
into
inc
loopne
and
das
bound
mov
adc
push
dec
rcrb
jbe
nop
lret
xchg
xchg
out
jo
imul
mov
dec
out
cwtl
ret
dec
pusha
lea
xchg
in
inc
and
sub
aaa
in
lods
push
push
mov
add
call
or
fsubr
jp
sub
insb
ja
cmp
ja
inc
push
adc
sbb
lds
sbb
pop
or
in
inc
test
loop
fnstenv
push
sub
lock
sub
jbe
push
test
and
cli
xor
in
iret
inc
cmp
jbe
mov
push
sbb
push
jbe
or
dec
push
push
inc
inc
hlt
adc
jae
cli
xchg
sbb
and
dec
inc
sbb
popa
std
add
sbb
add
sub
sub
outsb
inc
cwtl
add
xchg
inc
cmpsl
mov
insb
mov
in
xchg
icebp
and
jmp
mov
mov
mov
call
inc
lea
inc
popa
rorl
dec
mov
mov
or
add
push
mov
ja
xchg
or
push
xor
add
loop
pop
mov
add
sub
xchg
or
je
or
jecxz
movsl
push
mov
or
and
xchg
add
mov
xor
pop
push
push
test
mov
lcall
add
cmpsb
jo
add
bound
push
lahf
sub
outsb
inc
xor
push
fsubr
jb
mov
pop
lds
outsb
icebp
inc
push
lahf
std
jae
push
iret
xchg
mov
sub
push
sub
xor
sub
adc
je
push
std
pop
xchg
or
sbb
push
sub
sub
xor
mov
pop
xor
jmp
push
fsubs
jns
pushw
mov
iret
add
int3
leave
mov
sahf
inc
sbb
pop
mov
incl
cwtl
leave
push
inc
xor
and
je
cmp
call
insb
jnp
int
push
cmp
sub
jne
inc
push
mov
push
push
insb
jo
push
enter
cmp
or
add
loop
in
and
pop
adc
mov
int3
mov
lea
dec
shrb
movl
mov
xor
and
aas
aas
or
cwtl
jg
cmpsl
sbb
call
jns
push
or
jl
adc
push
imul
rcrb
add
dec
aam
pop
je
cmpsl
insb
sbb
mov
xor
faddl
push
insb
pop
pop
or
lret
dec
outsb
js
jle
scas
xchg
cmp
push
sub
or
cmp
outsl
aas
sbb
fidivrl
and
xorl
shlb
jp
sub
ret
fisttpll
lea
push
push
lea
in
aam
dec
sbb
add
push
jmp
js
int3
inc
je
scas
and
jle
movsb
jb
bound
jl
or
xor
xor
cmp
arpl
add
mov
shl
sub
jo
or
fdiv
mov
pop
mov
in
cmpsb
clc
or
je
adc
mov
mov
or
shl
cmp
fnstsw
dec
sahf
xor
call
icebp
ja
or
add
pop
jl
mov
stos
add
fiadds
push
cmp
add
scas
out
lods
dec
rorl
dec
add
push
in
cmpl
mov
call
insb
mov
test
inc
or
clc
add
mov
mov
push
and
scas
outsb
js
sbb
xor
dec
sbb
lret
adc
push
sub
mov
je
mov
lds
shll
push
add
or
xlat
dec
fwait
mov
push
adc
rorb
aad
mov
inc
dec
decl
add
sub
imul
cmp
inc
and
cmpl
jne
out
push
sub
adc
pop
mov
jns
push
clc
jne
cmp
fbstp
xchg
jne
xor
jg
cmp
jne
and
cmp
mov
xor
pop
out
or
cmp
pop
jl
pop
mov
mov
icebp
push
inc
movl
dec
jmp
clc
cmp
mov
dec
insb
xor
cmp
cmp
fs
mov
es
jnp
add
loopne
cli
mov
test
or
jle
cmpsl
test
je
sub
imul
inc
dec
fsts
loopne
fucomp
sahf
je
xor
or
jmp
dec
sbb
sti
insl
stos
shll
mov
adc
insb
xor
cwtl
mov
xchg
cltd
and
push
sbb
test
sub
cmp
popl
adc
pop
je
subb
pop
cwtl
fcomps
mov
xchg
adc
mov
je
imul
fcompl
and
mov
jp
out
sti
sbb
cmpsl
inc
cld
mov
inc
lods
nop
or
cli
inc
sbb
out
outsb
push
dec
iret
je
orl
jmp
int3
movsl
jmp
add
loopne
dec
enter
or
adc
clc
dec
and
out
in
movsb
add
ret
pop
inc
mov
xor
and
pop
aas
push
das
ficoml
mov
ret
mov
jmp
mov
mov
add
inc
mov
cmp
or
xor
loope
mov
fldz
fldcw
add
add
pop
mov
pop
mov
jg
jbe
xor
sub
js
inc
ret
loop
imul
sbb
adc
aad
jmp
inc
sub
cmp
pop
sbb
jmp
mov
mov
xchg
dec
inc
js
rorb
jmp
xchg
adc
andb
pop
scas
or
xor
pop
rcl
adc
push
pusha
lock
sub
mov
adc
xchg
mov
mov
sub
insl
push
rclb
sub
push
mov
fnsave
inc
lods
and
mov
mov
dec
fs
cmp
jp
test
pop
lahf
pop
mov
push
sbb
shl
mov
jl
pop
ss
andl
mov
pop
dec
shrb
enter
xor
adcl
rcrl
pop
jecxz
pop
dec
sub
add
dec
cwtl
lock
push
fimuls
cmp
loop
xchg
xor
lods
mov
or
or
adc
rep
jne
dec
push
leave
les
push
pop
push
pop
xor
ret
or
out
xor
pusha
out
fldcw
mov
ret
pop
daa
mov
ret
pop
and
lret
in
imul
mov
insb
sbb
es
dec
call
add
roll
xchg
cmp
mov
popa
jge
inc
enter
push
aam
sbb
inc
mov
mov
jecxz
cmpsb
push
jo
pushf
sarb
hlt
fsubs
rcrb
and
ficompl
bound
clc
push
sarb
add
pusha
mov
mov
mov
or
sar
and
mov
lret
xor
jmp
jb
inc
cmp
xor
or
rol
inc
cmp
sub
mov
mov
and
push
push
or
or
cmp
xor
ljmp
sbb
cmp
fwait
xor
push
mov
imul
fimull
cld
and
pusha
cltd
cld
jbe
test
fildll
incb
pop
scas
mov
xor
sub
je
xor
icebp
mov
inc
js
fadds
mov
push
sbb
push
jno
je
push
sub
lcall
inc
dec
cmp
mov
adc
in
xchg
lahf
and
pop
pop
dec
cmpsl
xchg
fcmovnb
lret
jo
inc
sti
cmp
popa
or
pop
insb
test
test
mov
jmp
mov
inc
xor
xor
rorb
loop
mov
sbb
pop
or
lret
cld
cmc
mov
lea
adc
out
mov
mov
ss
jmp
in
pop
sub
or
mov
dec
das
mov
or
mov
mov
push
pop
repnz
push
sbb
and
cmp
sub
lds
in
sub
sub
notb
inc
mov
in
andl
leave
mov
stos
sbb
sub
inc
push
cmp
jne
adc
movsl
lock
movsl
or
scas
cmpsb
and
sub
xchg
jle
test
movsl
and
mov
xchg
mov
jne
movsb
addr16
pushf
inc
popf
pusha
add
jbe
ss
cmp
sbbb
scas
imul
pop
xor
push
push
insb
sti
sub
cmp
pop
jb
jb
mov
mov
xchg
idivl
adc
shrb
mov
or
sub
pop
filds
pop
push
dec
js
orl
inc
push
dec
je
dec
xchg
ljmp
push
orl
cmpsb
xchg
inc
inc
push
orl
dec
xchg
cmp
adc
dec
rorb
xorb
icebp
cmp
jae
push
aam
add
insl
sub
jne
cmp
testb
inc
scas
inc
add
sbb
arpl
inc
xchg
and
pusha
inc
jl
inc
dec
dec
arpl
aad
jge
aad
push
fdiv
inc
outsb
loopne
jae
add
ret
stos
rclb
aas
mov
xor
mov
sub
inc
and
and
jl
cmp
mov
mov
mov
or
out
cltd
out
mov
and
pop
mov
dec
and
jbe
andb
mov
xor
mov
sub
lea
rorl
lea
clc
inc
mov
mov
push
or
call
mov
push
jo
mov
cmp
sub
sub
mov
pop
cld
jbe
sbb
xor
inc
add
fnsave
call
dec
lds
mov
test
es
test
repnz
mov
test
cmp
cs
cs
out
test
setle
push
jo
fmuls
sbb
push
test
clc
xchg
push
push
add
mov
outsb
lea
lret
cmp
mov
imul
mov
in
push
pop
push
insl
ret
nop
cmp
test
test
loopne
mov
push
es
jo
cld
or
dec
popa
call
sbb
dec
imul
shll
push
adc
push
xor
pusha
lds
add
loope
mov
xchg
push
jl
adc
inc
or
or
push
mov
and
mov
xor
orl
les
fs
enter
mov
push
adc
movsb
and
adc
dec
ret
iret
or
add
inc
or
xchg
and
daa
sbb
add
arpl
popl
test
push
dec
dec
push
add
pop
sbb
dec
jo
dec
adc
loop
sub
or
and
ss
add
js
push
and
loopne
lcall
sbbb
clc
jno
add
es
mov
dec
mov
inc
stos
imul
xchg
mov
in
push
dec
sub
mov
cmpsb
push
sbb
add
add
sahf
push
dec
xchg
fildll
pop
mull
dec
fadds
fs
jle
pusha
ret
adc
cmp
xchg
adc
mov
nop
mov
data16
push
roll
adc
push
sbb
cwtl
icebp
flds
sub
adc
lea
mov
adc
loop
inc
scas
movsb
xchg
ja
dec
and
inc
dec
inc
xchg
les
or
push
in
stos
or
push
cmp
add
xor
jecxz
mov
cmp
or
mov
mov
pop
or
dec
cmp
push
push
insb
test
mov
test
jae
add
fs
das
add
add
dec
in
mov
loopne
mov
and
ss
ljmp
jl
cmp
mov
jb
dec
inc
adc
dec
jmp
xor
mov
inc
dec
popa
mov
xchg
incl
sahf
movsb
lock
sbb
sbb
cli
xor
scas
mov
std
cmpl
mov
push
push
mov
mov
jl
cmp
and
mov
ss
sub
push
inc
test
bnd
jno
push
in
sub
xor
sbb
in
addr16
repnz
or
jno
inc
mov
lds
repz
lods
pop
mov
inc
inc
mov
arpl
or
push
das
popa
sub
mov
push
pop
adc
sbb
mov
xor
sbb
or
add
addb
mov
and
sahf
popf
cltd
and
pop
fwait
and
pop
mov
push
mov
rolb
test
add
fisttps
jecxz
or
mov
xchg
xchg
lods
mov
adc
and
mov
xlat
test
jl
fmuls
shll
inc
inc
test
mov
xchg
or
jge
dec
sbb
pop
popl
and
xchg
cmp
lods
bound
cmp
jno
or
lds
xor
cmp
pop
and
ret
sub
ret
adc
daa
lret
je
or
jbe
sbb
add
add
sbb
xor
in
xor
inc
mov
sbb
mov
repz
and
xchg
shll
mov
add
pop
call
xchg
imul
push
roll
mov
mov
sbbb
jp
jno
fcoms
iret
inc
dec
xchg
push
aaa
sbb
xor
pop
sbb
test
dec
xor
call
lret
adc
stos
fidivrl
nop
pop
cwtl
icebp
jl
jne
and
ja
or
jmp
inc
adc
test
sbb
js
rorb
sub
int3
xchg
jge
or
mov
lds
mov
pop
push
jmp
clc
call
nop
sbb
add
js
fisubl
push
roll
ret
mov
sub
loop
push
push
cmp
inc
sub
adc
push
or
loopne
sub
sbb
push
mov
pushf
xlat
rcll
sbb
dec
shl
cli
mov
add
aad
cmp
inc
adc
cmp
shll
mov
movsb
mov
in
xor
lods
xlat
orl
icebp
jl
pop
loope
mov
or
aaa
or
arpl
pop
push
mov
mov
mov
sbb
cmpsb
add
dec
mov
fdivr
cltd
and
cmp
sub
loope
jo
adc
bound
pop
or
pushf
les
pop
lods
cltd
or
jo
jbe,pn
xchg
or
cmovns
add
mov
test
push
test
in
xchg
adc
out
pop
pop
bound
and
je
push
pushf
jno
fmuls
add
adc
jl
pop
inc
or
mov
mov
sub
or
or
xor
jmp
dec
add
cs
inc
or
jp
jno
fnstenv
addr16
dec
mov
adc
add
test
mov
adc
sbb
dec
fldl
xor
pop
sbb
cmp
iret
pop
stos
push
xchg
subb
jne
cs
scas
mov
and
imul
push
insb
mov
or
arpl
mov
xchg
pusha
cmp
push
or
jo
les
mov
adc
sbb
dec
shlb
inc
clc
or
mov
imul
lock
cmp
sub
jbe
pusha
and
add
jmp
jp
js
dec
cmp
test
loope
dec
ret
divb
dec
int3
mov
add
jecxz
in
push
adc
call
mov
testb
or
adc
popf
inc
call
cmc
aad
mov
jo
enter
mov
or
jnp
call
adc
pop
sahf
adc
adc
leave
sbb
xchg
ds
inc
add
inc
ret
cmp
push
packsswb
sbb
xor
add
lock
lods
sub
adc
cmp
mov
je
xchg
or
sbb
dec
push
sub
lock
xor
xchg
fildl
pop
cmp
dec
gs
out
aaa
pop
dec
inc
je
outsl
xchg
test
cmp
add
test
xchg
andb
mov
adc
inc
cld
adc
sub
sti
push
test
imul
mov
xor
push
out
and
inc
imul
cmp
scas
sahf
lcall
pop
push
insb
data16
daa
pop
js
sbb
dec
clc
aaa
loope
js
and
ret
in
idiv
add
orl
jl
dec
xor
inc
jmp
sub
add
enter
dec
push
sahf
in
fsubrl
jb
adc
addr16
push
lahf
lret
jl
test
dec
or
jno
cmp
mov
or
add
fwait
or
inc
or
ret
pop
add
or
je
imul
ret
or
jle
pop
add
loop
out
jmp
or
adc
pushf
outsb
mov
and
or
nop
pop
loopne
or
or
roll
sub
mov
call
dec
mov
inc
cmp
add
in
lea
jle
js
jne
fs
push
cmpsl
movsb
loopne
xchg
enter
xlat
inc
in
call
sahf
pop
fs
pop
adc
push
lods
push
loope,pt
nop
add
sub
add
lea
dec
clc
mov
inc
xor
jp
xor
jae
les
dec
stos
and
sbb
mov
lret
loope
push
mov
cli
mov
loop
pop
xor
add
lods
or
rcrb
add
xchg
mov
sbb
adc
rorl
adc
mov
pushf
dec
outsb
sbb
sub
sbb
rolb
inc
test
icebp
add
incl
add
mov
ficoml
mov
int
add
mov
adc
mov
cli
adc
movb
scas
sahf
shlb
bnd
or
lea
test
push
insb
sti
add
lret
inc
cmp
je
mov
cmp
not
loope
pop
jne
xor
negb
cmpb
xchg
mov
mov
addb
sbb
or
es
dec
pop
incl
inc
aas
sbb
int
clc
int3
movl
add
push
imul
inc
mov
xchg
sub
lret
sbb
dec
shlb
adc
cmp
sbb
shl
pop
xchg
jo
mov
shl
or
cmp
clc
push
test
sub
inc
dec
jne
cmp
push
lods
or
adc
or
test
xor
testl
mov
ds
mov
mov
push
faddp
fistpll
loop
notl
aam
sbb
mov
arpl
sbb
shlw
out
mov
xor
div
inc
nop
dec
test
mov
add
and
pusha
sbb
jg
push
push
dec
jmp
add
ret
ficoms
xor
rclb
and
and
mov
das
push
ret
cs
sub
jle
sbb
mov
arpl
dec
mov
insb
or
mov
mov
movsb
in
rcrb
aas
and
jge
push
jo
inc
dec
xor
xchg
cmp
xor
dec
ret
pop
inc
pop
mov
pop
cs
or
enter
mov
shl
outsl
push
adc
sub
mov
sub
je
loope
shl
push
pop
dec
push
fwait
ss
sahf
mov
mov
jl
sar
jne
ja
jge
add
cmc
inc
dec
cltd
add
pop
jp
jg
cltd
sbb
adc
cmp
push
jo
xor
pop
or
jp
push
popa
mov
inc
out
addl
sub
cld
xor
inc
xor
andb
sbb
xchg
jg
lret
push
ret
xor
or
sub
push
sysexit
jl
test
adc
xor
and
add
outsb
and
mov
adc
xchg
pusha
push
lcall
push
bound
lea
cs
iret
adc
lods
or
lea
and
mov
pop
sti
scas
adc
mov
lea
popa
loope
out
push
mov
popa
movsl
int
and
jno
mov
imul
push
or
or
pushf
repnz
pusha
lcall
jl
test
mov
mov
sbb
int
lahf
push
adc
jne
repnz
sahf
pushf
ds
pusha
inc
and
pop
sti
pusha
xor
je
xchg
inc
sbb
lea
cmp
push
popf
outsb
mov
xor
mov
gs
rclb
jb
dec
sub
aas
and
wrmsr
test
ljmp
dec
mov
mov
inc
mov
jno
dec
pop
int
sahf
or
jno
and
cli
sti
lods
jg
sbb
shlb
xchg
arpl
fwait
in
jge
enter
sub
xchg
decb
arpl
push
les
inc
pop
mov
jo
callw
and
xchg
frstor
inc
sbb
inc
outsb
sub
outsb
sbbb
mov
jmp
or
fs
adc
mov
add
mov
mov
inc
adc
cli
es
fimuls
mov
dec
push
add
push
add
dec
jg
mov
fists
enter
or
call
cmp
pop
js
jne
xor
sub
add
jmp
pop
cwtl
imul
inc
xor
xor
imul
mov
xchg
movsl
mov
mov
sub
sbb
sbb
and
adc
mov
jo
pcmpeqb
jmp
or
movsl
or
sti
cmp
jp
inc
andl
xchg
prefetchnta
clc
shll
pop
lods
and
std
sar
ficoml
sub
lock
jmp
test
or
ret
inc
adc
aas
sub
sbb
enter
mov
imul
jb
scas
cmc
pop
shrb
adcb
push
and
cmp
push
into
jns
repz
xlat
adcl
push
inc
xor
sbb
stos
mov
pop
hlt
pop
pop
inc
test
sub
and
and
dec
sbb
mov
rcr
or
fisubl
sarl
pop
call
fdivl
inc
xchg
lea
popf
or
pop
adc
sbb
cmpsb
int
mov
stos
sub
xchg
clc
add
pop
push
jp
sbb
xor
je
adcb
lods
dec
xchg
sub
aam
push
adc
shrb
aaa
add
or
sbb
movsl
outsl
loope
js
inc
xor
mov
mov
adc
or
aas
mov
orb
ret
push
sti
stos
xchg
pop
adc
add
fstl
pusha
jnp
sub
scas
loop
jmp
mov
or
cmp
jl
mov
ds
je
xchg
xchg
mov
sub
in
ret
xchg
dec
pop
or
xor
int
jns
shlb
jo
addl
add
mov
test
movb
mov
sub
lods
push
lret
outsb
pop
ret
loop
fdivrs
lea
mov
shlb
lods
adc
sub
pop
insl
out
fdivrs
sub
adc
or
loope
sbb
jae
xchg
add
rcr
push
xor
mov
inc
xor
adc
adc
loopne
nop
or
testl
adcl
testb
adc
push
or
test
push
push
sbb
jmp
or
je
push
cwtl
mov
les
push
sarb
or
push
lock
or
in
dec
xchg
jb
daa
inc
pusha
lcall
mov
mov
push
shl
stc
and
lods
cld
jb
xchg
add
rcll
push
frstor
xchg
insb
push
loope
inc
sub
push
fcompl
jno
or
loopne
test
cmp
enter
mov
or
sbb
lods
lock
mov
adc
pop
pop
dec
imul
pop
mov
test
pushf
xchg
or
adc
lea
cs
aam
or
lods
add
push
push
inc
push
adcl
in
nop
push
negb
add
notl
dec
mov
pop
push
inc
sti
ljmp
add
enter
arpl
cltd
pop
sub
rorl
inc
shl
push
bound
add
inc
push
outsb
jmp
roll
test
or
sbb
dec
sbb
lea
mov
push
jno
xchg
test
pop
dec
sbb
pop
mov
mov
add
and
sbb
xor
xchg
sbb
xchg
cltd
lea
add
jecxz
pop
xor
mov
es
inc
inc
ret
sbb
xorb
lock
mov
sbb
xchg
push
or
dec
adc
mov
rclb
push
bound
jg
stos
xor
sub
or
inc
push
cmp
loope
repz
imul
and
test
push
jg
enter
sub
nop
sub
inc
sahf
add
sub
mov
jae
mov
jne
add
push
pop
add
jp
orb
add
push
shll
dec
mov
clc
ss
push
sbb
sti
add
fisubrs
xor
mov
push
loop
jmp
and
push
cmc
jp
mov
je
push
xor
adc
xchg
adc
adc
cli
dec
and
add
dec
mov
ret
outsl
pop
daa
xchg
sub
pop
pop
mov
mov
push
dec
inc
testb
inc
call
ja
sbb
fbld
xor
adc
shll
loopne
rol
loopne
inc
inc
inc
mov
stc
and
nop
or
sub
in
adc
adc
sub
inc
sub
xchg
cmpsb
mov
push
sub
jno
push
test
mov
push
inc
mov
jge
sbb
loopne
repz
or
fstl
rcl
or
sub
or
ret
mov
xor
inc
inc
arpl
js
fisubl
scas
xor
js
andb
xor
lcall
sub
popf
pop
dec
aad
mov
dec
and
lret
mov
adc
sub
mov
pop
jns
mov
push
add
dec
or
prefetch
adc
je
xor
nop
xor
js
inc
std
repnz
loop
call
mov
pop
out
mov
popf
push
xchg
cmpsb
rcll
std
nop
lock
data16
sbb
cli
ds
cmp
sub
shlb
aam
lods
push
jno
xlat
dec
das
cmc
stos
das
dec
add
jp
sar
and
jns
icebp
push
xchg
cmp
stos
jp
ljmp
sbb
call
in
and
daa
mov
je
push
cmp
pop
mov
pop
popa
inc
adc
mov
xchg
xchg
imul
dec
inc
dec
addr16
xchg
imul
xor
inc
sbb
xor
xlat
lods
xchg
mov
je
sub
icebp
add
sub
and
jp
test
jne
popa
mov
sub
movsb
xchg
adc
pop
dec
adc
lock
ljmp
mov
dec
push
push
pushf
adc
and
dec
xor
pop
fdivrs
inc
out
pushf
and
mov
push
mov
jnp
add
cmp
add
insl
out
xchg
nop
les
icebp
lahf
js
cmp
pusha
add
test
shl
mov
adc
imul
or
fsubrl
mov
pop
push
movsb
adc
jp
jmp
push
scas
mov
inc
je
lods
loope
xor
xchg
add
ljmp
arpl
push
sub
ret
decl
roll
push
pushl
sub
jns
sub
enter
xchg
mov
popa
or
adc
dec
cld
mov
outsl
test
pop
adc
nop
test
inc
mov
mov
add
xchg
adc
mov
in
push
push
mov
aas
push
mov
and
adc
sbb
pusha
jmp
sub
push
adc
push
xchg
fstl
pop
cmp
addb
dec
repz
lds
loopne
testb
lods
inc
add
sbb
and
or
push
push
xchg
cmp
shll
pop
jo
loopne
cmp
push
and
not
and
mov
pop
mov
inc
xorb
and
arpl
jle
mov
leave
leave
fldpi
jae
nop
lret
push
es
inc
dec
lcall
pop
add
ret
jmp
loope
cmp
ret
xchg
cmpb
and
sbb
cmp
je
outsl
push
cmpl
lret
lret
cld
lock
cmpsl
mov
sbb
mulb
or
jl
jo
js
mov
mov
rclb
ret
je
insl
or
mov
loope
cmpsb
or
jl
test
fmull
fmull
fstps
jl
sbb
cmpb
and
gs
lahf
ljmp
pushw
mov
or
pop
dec
fdivs
mov
out
js
add
sti
ljmp
pop
fdivrl
mov
mov
mov
imul
punpckldq
pop
adc
pop
in
sbb
popa
mov
xor
inc
push
lods
push
push
jl
xor
bound
sbb
inc
ret
insl
sbb
cmpb
sub
addb
popa
imull
xchg
jle
inc
inc
xchg
adc
je
movsb
push
pop
add
js
jo
sbb
les
ss
adc
pop
les
cwtl
xor
push
shlb
test
filds
push
test
arpl
inc
insl
and
mov
loopne
rcll
adc
xorb
pop
mov
mov
dec
jo
test
push
fimull
cmp
mov
or
cmp
push
xchg
cmpsb
xor
data16
nop
inc
cmpl
mov
js
adc
push
clc
dec
out
dec
xorb
fadds
xor
cmp
pop
test
adc
mov
cmp
jno
xchg
mov
or
mov
xor
push
movsb
sbb
xchg
loopne
daa
push
dec
ret
js,pn
inc
leave
push
andb
pop
and
sub
sub
push
fldt
dec
xchg
icebp
lcall
rolb
mov
sub
call
dec
in
dec
out
into
dec
mov
or
rclb
jae
push
sbb
pushf
adc
rcrb
dec
fbstp
inc
lcall
movsb
lcall
push
aas
hlt
sbb
jbe
jnp
insb
pop
je
sub
sbb
stos
mov
or
mov
xchg
cmp
add
sbb
ficoml
sub
xchg
jo
pop
fistps
pusha
add
add
pusha
pop
cmpsl
mov
push
arpl
add
add
jecxz
jp
push
xchg
adc
mov
add
xchg
sub
or
clc
mov
dec
je
or
ret
or
sub
push
cld
lret
jecxz
mov
inc
in
packsswb
lret
filds
cmp
mov
adc
cmpsl
enter
xor
adcb
sub
xchg
je
jl
jne
sbb
into
cmp
lret
add
sub
lock
das
sbb
add
jbe
fs
inc
orb
sub
sbb
inc
or
xchg
pop
xchg
test
sbb
sahf
xor
pop
out
xor
mov
je
push
pop
jns
xor
sahf
and
adc
push
and
lock
push
xchg
repnz
cwtl
dec
les
nopl
inc
and
or
mov
pop
rcll
in
push
push
inc
push
inc
add
mov
mov
add
movsl
pop
hlt
ret
stos
aad
jmp
mov
pop
push
ret
jl
pusha
ret
pop
jl
jo
test
dec
adc
lock
adc
mov
push
insl
add
push
pop
inc
mov
mov
push
js
cmpsl
sub
insl
mov
xor
mov
les
add
xchg
jbe
mov
mov
sbb
mov
ljmp
jae
inc
sahf
inc
cmp
cmp
icebp
fwait
sbb
aad
cmpsl
sub
pop
je
xchg
jae
or
ret
inc
mov
sub
sbb
into
mov
loope
push
jb
xchg
pop
jl
mov
dec
sub
sub
dec
xor
adc
ja
cmp
das
sbb
setg
add
and
mov
loopne
repz
arpl
loop
jl
icebp
adcb
jecxz
mov
popf
mov
pop
outsl
jne
cld
sbbl
imul
mov
add
mov
mov
fadds
jle
xchg
rorb
scas
inc
and
aam
and
testb
inc
cmpsl
jge
idivl
jp
imull
push
lret
xchg
xor
dec
jo
adc
or
imul
popa
lods
hlt
andl
add
ret
orb
adc
inc
add
push
sbb
outsb
or
cmpl
push
add
adc
mov
pop
sbb
xchg
inc
jae
mov
inc
mov
add
or
mov
jb
push
fdivl
and
ret
mov
outsl
add
mov
push
enter
pushf
aad
push
ret
ljmp
int
inc
cmp
add
ficoms
cltd
xacquire
test
mov
add
or
lret
push
xlat
push
jl
xor
sbb
add
mov
fnstsw
sahf
fldt
test
or
dec
rcrb
mov
adc
mov
inc
sbb
addb
or
push
leave
jle
ljmp
ljmp
push
decb
out
mov
xchg
add
inc
sbb
dec
jne
mov
movsl
mov
pusha
push
push
sub
dec
stc
or
sub
mov
add
jb
js
je
pop
mov
lds
in
or
ja
mov
and
inc
pop
jmp
sbb
xchg
push
dec
clc
lock
mov
cmp
or
insl
sbb
mov
add
add
popl
sbb
add
jbe
repnz
inc
pop
mov
addb
xor
jbe
mov
push
jo
push
push
push
pop
and
sub
mov
inc
call
outsb
cmp
or
mov
mov
jnp
cmp
ret
lea
pop
pop
adc
xor
jle
mov
cmp
jp
inc
dec
jbe
insl
jne
outsl
or
mov
shll
or
clc
data16
ljmp
xor
sub
push
add
jnp
add
fcomip
adc
xchg
cmpb
add
call
xor
inc
jg
les
or
mov
xchg
dec
and
lea
jle
sub
and
add
lock
inc
jmp
sbb
adc
mov
or
dec
dec
js
test
xchg
dec
and
outsl
add
bound
cmp
loopne
mov
ss
xor
test
adc
and
inc
mov
mov
xlat
xchg
xchg
das
xlat
addl
jne
add
jmp
cmp
push
pop
sarb
jo
test
imul
lock
rcrb
shll
pop
mov
or
hlt
adc
cmp
out
scas
loopne
iret
or
jl
push
xor
xchg
xor
xchg
xchg
mov
imulb
push
add
popa
aad
xchg
xchg
lds
add
and
pop
push
pop
nop
testb
nop
inc
pop
movsb
mov
and
adc
add
scas
sbb
dec
mov
outsb
fnstenv
fldt
fcmovb
sti
lods
sbb
adc
filds
addr16
and
lds
loope
pop
mov
jmp
mov
or
or
lods
or
imul
or
shll
push
rclb
adc
xchg
push
sbb
inc
fidivl
loopne,pt
cld
or
xor
hlt
sti
mov
or
insl
inc
inc
test
test
xchg
sub
or
rcrb
mov
inc
js
add
mov
pop
loopne
lock
sbb
mov
push
jecxz
mov
stos
std
test
mov
repz
sti
or
out
add
jmp
sbb
add
mov
mov
or
sbb
test
jbe
ja
std
and
cmp
push
bound
mov
sub
repz
jne
adcl
sarb
shlb
push
cs
sbb
xchg
sub
test
inc
xchg
or
pop
inc
jo
into
push
into
lods
mov
test
fldl
cmp
or
inc
loope
add
mov
inc
mov
dec
jne
add
inc
mov
jl
loope
test
mov
lret
and
addb
sbb
lea
inc
dec
jo
and
pop
pusha
xor
cmp
jbe
pop
fbld
mov
rorl
sbb
sahf
out
adc
cmp
and
pop
in
push
mov
je
xor
push
push
add
sbb
pop
add
cwtl
in
in
xor
mov
cmp
cld
cld
inc
lds
jns
std
inc
xor
in
sub
push
repnz
ds
jge
or
adc
add
add
sub
mov
orb
and
sub
adc
xchg
or
mov
stos
mov
jg
sub
sub
shlb
push
mov
and
add
jl
inc
pop
test
mov
mov
dec
add
and
inc
scas
xor
jge
mov
xchg
ss
mov
dec
jo
sub
jl
jae
xchg
movsb
mov
inc
xchg
in
adc
mov
and
xchg
ds
sub
out
repnz
mov
cmp
rclb
pop
enter
leave
and
enter
push
enter
sbb
scas
cmpsl
loopne
inc
hlt
pusha
sbbl
xchg
adcb
pop
ret
pop
ljmp
push
push
push
xchg
ret
and
in
test
xchg
mov
mov
pop
push
add
popa
cmp
dec
or
minps
shrb
ljmp
inc
cmpsb
sbb
add
and
clc
sub
sub
add
pop
adcl
push
pop
test
xchg
xor
dec
loope
rorb
shll
addb
adc
adc
mov
iret
mov
jne
xorb
jle
cmp
sbb
push
pop
enter
jge
adc
pop
xlat
test
pop
subl
repnz
inc
das
popa
adc
jg
aad
dec
adc
data16
insb
xor
push
jne
xor
sti
add
sub
xchg
xchg
pop
mov
fidivl
sbb
inc
or
mov
shr
test
add
out
xor
enter
push
loope
sub
subl
xchg
subl
xor
add
icebp
pop
std
push
pop
pop
mov
arpl
add
sar
mov
outsl
mov
inc
mov
lea
add
push
adc
mov
mov
push
inc
dec
add
cmp
add
sarb
and
test
shll
sbb
push
testb
je
xor
jne
loopne
decl
adc
jmp
xchg
sub
stos
sbb
ficoml
xchg
es
or
xchg
add
adc
sbb
sub
js
or
sbb
xchg
into
and
cmpl
icebp
mov
cmc
mov
adc
lock
mov
fcmovnu
dec
fdivr
jbe
insl
jno
lea
sub
lahf
or
stos
ret
push
call
loope
popl
jl
pop
lock
xchg
push
inc
inc
cs
inc
js
push
pop
pop
jo
dec
mov
add
inc
js
call
stc
sub
cmp
lcall
fnop
sub
ret
cld
sub
push
sti
pop
add
push
adc
xor
rorl
push
std
decb
mov
pop
daa
mov
add
mov
push
or
rcrb
xor
test
pop
dec
iret
sahf
movsl
lock
lods
cmc
pop
inc
pop
xchg
xor
sbb
pop
add
cli
loope
ret
adc
adc
add
fsubrl
rclb
movsb
aad
jbe
and
sbb
ljmp
xchg
fnstcw
add
sub
lret
xor
add
leave
mov
ret
mov
es
adc
int3
and
xor
add
xor
cmp
jg
mov
lods
mov
lcall
push
sbb
jl
lcall
xor
mov
xchg
and
push
jge
push
pushf
push
dec
mov
aaa
dec
inc
add
dec
sub
and
add
mov
and
fists
sub
cmp
cli
push
je
sbb
test
iret
push
jo
mov
push
inc
xchg
pop
notl
hlt
xor
mov
push
sub
or
loopne
adc
fstps
add
enter
mov
inc
clc
out
add
dec
dec
jne
lea
lea
mov
sub
fildl
jmp
fidivl
not
and
inc
add
inc
inc
sbb
or
jecxz
int
sbb
and
push
aam
ss
cmp
sub
mov
add
add
dec
aam
hlt
xchg
jg
rorb
inc
or
sbb
cmp
cwtl
dec
or
sbb
pop
shrb
lcall
add
jp
jne
sbb
xchg
xor
pop
sahf
stos
pop
xor
jg
sbb
loope
mov
sbb
lock
jecxz
ret
pop
and
push
dec
cmp
out
sahf
pusha
aaa
jl
or
add
sbb
mov
jo
ret
imul
data16
jne
jp
movhps
push
pop
pop
mov
push
pop
push
hlt
inc
xchg
push
bound
es
adc
icebp
mulb
inc
add
ljmp
sarb
adc
or
jbe
incw
mov
pop
dec
dec
test
ja
dec
xchg
inc
or
faddl
xchg
mov
jle
xor
mov
sub
mov
loopne
or
add
or
fwait
jns
cmpsl
mov
sub
push
push
lods
movsb
aam
aam
sbb
push
lea
mov
jbe
cmp
insb
push
lds
rorl
mov
addl
mov
push
lcall
inc
jnp,pn
mov
das
sub
mov
mov
mov
inc
fisttpl
xor
lods
and
sti
jge
mov
push
add
jne
cli
push
adc
push
sub
ljmp
cmp
mov
inc
andb
shl
cmp
pop
jp
sar
std
dec
or
insb
cmp
add
cmc
push
rolb
es
enter
add
das
add
dec
xchg
js
inc
push
mov
mov
jnp
push
test
sub
mov
test
rorb
js
jle
adc
outsl
or
push
push
lock
cmp
dec
mov
jae
sub
je
sbb
jnp
mov
push
into
jo
push
int
cmp
ss
inc
lret
pop
push
shrl
icebp
fadds
popf
adc
ret
mov
and
fsubrl
inc
clc
cmp
outsl
cmp
mov
or
outsl
sbb
inc
aaa
and
xor
mov
sar
mov
fimull
or
stos
adc
rorl
cmpsl
mov
sub
fcmovnbe
cmp
adcl
inc
mov
enter
popa
dec
or
and
or
jo
push
and
jae
add
mov
push
ret
inc
ss
inc
pop
cld
shl
imul
mov
sub
push
cmp
aad
subb
loopne
shrb
divl
pop
inc
pop
adc
ficomps
fsubrp
int
jns
push
sbb
pop
je
js
pushl
push
jp
les
mov
cmp
jle
mull
iret
pop
lods
iret
arpl
fs
add
ret
ret
js
or
lret
jge
vdbpsadbw
sbb
push
sub
jmp
cmp
int
test
jg
call
cli
sub
movsl
ss
jle
cld
arpl
mov
out
xor
add
add
lret
frstor
adc
in
lods
mov
ret
xchg
xlat
mov
add
cltd
iret
lds
and
xchg
mov
out
mov
or
inc
inc
imul
pop
lods
lret
mov
push
mov
adc
rep
cmp
and
loop
out
sub
pop
loope
cs
enter
psubsb
mov
sbb
pusha
icebp
or
xchg
add
mov
pop
mov
js
and
js
mov
fidivs
lods
add
cmp
inc
stc
push
fildll
fmuls
fsubp
jbe,pt
or
clc
dec
lea
shl
mov
ds
and
or
or
mov
mov
xor
stc
push
lcall
sbb
dec
jne
popa
and
cmp
sub
aas
xor
jne
loopne
inc
jecxz
add
shrl
test
lea
lock
loopne
pop
xor
fdivr
or
ret
add
jl
mov
pop
push
sti
lock
jecxz
nop
cmp
xchg
sbb
flds
andb
nop
dec
cmp
call
je
sbb
aaa
stos
insb
xor
push
outsb
fildll
out
cltd
inc
aad
cmp
inc
mov
and
insb
je
dec
jo
xor
into
sub
push
mov
fcomp
push
xor
dec
push
ud0
mov
es
adc
dec
add
inc
loop
push
outsb
and
adc
jb
mov
jecxz
sbbl
dec
rcrl
cmp
sbb
inc
mov
lret
stos
sub
dec
push
movswl
xor
pop
call
mov
add
sbb
imul
and
dec
add
jl
mov
pop
cli
push
rsm
sbb
cli
mov
rcrb
xor
hlt
pmulhuw
mov
enter
enter
pop
cmp
adc
xor
lcall
jae
faddl
adc
loopne
add
cli
aam
cmp
jne
inc
pop
sub
adc
popa
or
sbb
jo
in
nop
xor
decb
stc
cmp
mov
xchg
repnz
add
and
lock
push
mov
cmp
lcall
sbb
xlat
repz
into
push
inc
les
pop
inc
sub
leave
cli
push
sbb
mov
fsubs
pushf
or
and
jnp
cmc
fidivs
jo
cmpsb
test
jo
rcrl
inc
cmp
xchg
xor
sbb
into
adc
jbe
cmp
cltd
cmp
bound
sbb
xchg
cs
add
pop
inc
outsb
add
out
inc
mov
std
cmp
and
jg
dec
push
mov
add
sbb
test
inc
popa
mov
loope
adc
push
dec
xor
push
xor
push
adc
push
jb
push
jbe
pop
jbe
aas
adc
adc
xchg
inc
pushf
inc
shrb
mov
and
jmp
adc
cltd
insb
aad
and
jl
aam
fnstsw
rorb
mov
pandn
lods
lret
add
sbb
mov
test
push
je
mov
cmp
in
and
sbb
loop
jns
jg
xchg
mov
pop
hlt
inc
xchg
add
cmp
stos
add
dec
dec
mov
test
xchg
mov
js
inc
sub
push
inc
add
mov
jle
adcl
or
push
sub
mov
xchg
jecxz
cmp
inc
arpl
mov
push
inc
shlb
add
lods
add
sbb
pushf
mov
pop
inc
inc
inc
cmpsb
movsb
pusha
add
sbb
xor
pop
nop
adc
sub
mov
or
or
clc
adc
dec
divl
jne
jg
inc
shr
push
add
shl
xchg
sbb
mov
aaa
rol
sub
dec
ffreep
aad
loop
jg
out
add
inc
cmp
pop
cmp
aaa
and
jp
adc
push
adc
jle
aam
loopne
jmp
or
inc
inc
or
inc
or
or
add
div
or
orl
adc
mov
add
sbb
or
rorl
or
lds
jo
dec
sub
jg
xor
pop
pop
iret
shl
aam
subb
cli
jg
push
cmp
inc
push
repnz
push
imul
into
movsl
loope
or
movsl
js
inc
out
sub
xor
scas
cmp
inc
repz
jbe
add
testl
pushf
lods
stos
xor
loopne
mov
pop
pusha
icebp
in
dec
inc
jecxz
sub
adc
hlt
stc
dec
popa
cli
fcmovnbe
fldl
adc
je
adc
mov
ss
or
pmulhuw
add
lock
roll
ljmp
sub
addb
or
loope
add
dec
jg
cmp
sbb
adc
lret
and
mov
sub
je
inc
mov
add
fdivrs
sub
jmp
jmp
fisttpll
jl
out
sbb
push
add
filds
pop
pop
add
add
dec
fmull
pushf
and
push
std
fimull
sbb
dec
loope
cmp
push
jg
cwtl
cld
add
pop
xchg
push
enter
or
fisubs
pop
hlt
mulb
add
clc
lods
push
sbb
mov
stos
jnp
cmpsb
adc
cld
mov
add
js
shrb
pop
adc
adc
jns
lock
sub
add
lea
shl
add
clc
xchg
xlat
jle
mov
cwtl
sub
xor
sbb
ds
movsb
jle
imul
add
adc
nop
add
xchg
sub
adc
rcrb
add
sub
push
daa
push
xor
xchg
sub
popa
ret
add
in
push
sbb
jl
pusha
mov
lcall
xchg
inc
bound
pop
and
inc
or
popf
push
scas
mov
cmp
cmp
or
jle
in
repnz
gs
dec
pop
ja
sbb
leave
fwait
cmp
sbb
out
daa
dec
inc
jp
decb
sbbl
add
xchg
push
or
add
lock
mov
and
mov
std
fstpt
inc
enter
idivl
mov
jae
add
enter
fwait
jbe
loop
mov
add
sub
add
sub
jbe
pop
mov
jge
dec
mov
xchg
gs
scas
jecxz
test
test
cmp
cwtl
inc
cmp
pop
add
cmp
add
mov
or
add
cmp
aad
clc
inc
sbb
xor
or
mov
jne
dec
fadd
dec
jne
cmp
mov
adc
jne
dec
cmp
jbe
dec
lock
inc
and
scas
rolb
jp
mov
lods
stc
adc
jmp
mov
xchg
cmc
adc
popa
jbe
sahf
daa
push
add
sbb
sub
or
inc
mov
add
mov
daa
das
jno
aas
fidivs
jno
push
pop
add
or
xor
xor
push
movsl
adc
jle
push
add
cmpsl
add
add
popf
cld
clc
cmp
mov
jbe
stos
shlb
loop
repz
lea
push
jbe
cld
adc
mov
js
out
cmpsl
test
push
or
inc
int3
lock
add
and
inc
mov
mov
ret
jg
mov
jge
or
outsl
aas
sub
mov
call
or
mov
lea
push
jecxz
es
out
mov
sbb
inc
movsb
jge
loop
or
jmp
sub
pop
jb
cli
sub
mov
pusha
mov
fiadds
push
add
push
js
push
das
sub
pop
cmc
add
pop
xchg
add
sub
add
mov
ja
xor
clc
bound
popf
ja
loopne
shll
xchg
subl
dec
xchg
fidivrl
jne
in
adc
mov
jge
xchg
clc
add
fldcw
sbb
into
mov
jmp
gs
ret
mov
clc
rcr
jne
jno
cmpl
dec
xor
popa
xor
dec
lds
repz
ss
ret
inc
fildl
pop
daa
and
clc
sub
inc
mov
jmp
jae
jl
jmp
adc
mov
lods
adc
icebp
lock
mov
sti
pop
cli
repnz
cmp
xchg
xor
enter
ss
or
or
dec
lods
test
int
sbb
or
psraw
jo
mov
and
push
push
mov
jmp
js
adc
mov
rorl
xor
icebp
push
push
inc
mov
or
mov
cmp
dec
add
and
fisttpl
jne
dec
lods
push
mov
and
sarl
outsl
inc
fildl
sub
jmp
jecxz
xchg
jmp
push
mov
fwait
jle
int
lret
add
fstpt
sbb
xchg
add
sbb
out
dec
cmp
and
dec
rolb
pop
jno
insl
pop
inc
pop
cli
mov
dec
or
push
leave
mov
lahf
lret
mov
push
lea
dec
mov
lea
add
sub
mov
xor
out
add
add
ret
pop
sub
and
xor
inc
adc
dec
lods
fsubs
dec
adc
xchg
sub
outsb
cwtl
pop
cld
inc
in
cmp
or
jne
inc
xchg
sub
push
pusha
pop
outsl
push
scas
in
lock
push
add
js
xlat
sbb
push
jno
push
mov
ja
adc
xchg
inc
add
mov
mov
sbb
pop
jnp
movsb
xor
lcall
mov
cmp
and
push
pusha
mov
shrb
decl
enter
and
ds
lea
scas
mov
sbb
mov
ffreep
adc
cli
popa
fiadds
mov
mov
addb
test
mov
pop
or
daa
inc
cmpsl
adc
cld
dec
xorb
jecxz
cmp
jmp
mov
fs
dec
cmpb
mov
adc
loop
nop
cmpb
xchg
cs
fisubrl
or
mov
iret
xor
loopne
jb
movsb
adc
push
js
and
rorb
outsl
outsb
jge
mov
test
js
std
pusha
push
pop
shrl
ja
mov
daa
cmp
adc
dec
je
mov
andl
lods
aas
sbb
dec
and
xor
mov
jle
adcb
das
pop
mov
inc
pop
push
xor
loopne
test
add
mov
dec
aad
xchg
mov
pop
pop
jg
adc
adc
push
jl
jns
test
add
movsb
cmpsl
inc
add
dec
sarb
mov
rcrl
push
mov
sub
testb
in
or
inc
mov
adc
pop
xchg
lret
inc
cmpsb
and
push
mov
push
mov
into
cmp
imul
xor
mov
mov
aas
mov
mov
xchg
lret
repnz
loopw
jnp
repz
jle
add
sub
push
in
and
xorb
mov
fsubrs
ja
lret
pop
mov
ret
xchg
divb
clc
out
lea
xacquire
data16
xor
sbb
or
mov
dec
xor
aas
mov
mov
mov
jbe
idivl
sbb
lsl
mov
hlt
movsl
cmpb
sbb
inc
inc
jb
jne
or
dec
outsb
imul
lahf
add
jmp
or
xor
and
xchg
sbb
arpl
or
cwtl
pop
ja
xchg
xchg
pop
pop
dec
jo
ret
js
inc
sbb
outsb
xor
push
decl
inc
insl
sahf
mov
or
sbb
inc
xor
rorl
xor
dec
inc
push
sbb
or
outsl
scas
jb
shl
add
add
sti
andl
insb
clc
lods
popf
sbb
push
sub
roll
cmp
lock
mov
push
jp
dec
lret
inc
xor
cmp
mov
jo
add
inc
xchg
dec
mov
sbb
push
pop
test
push
cs
dec
lahf
pop
sarb
repnz
and
xor
mov
pusha
or
test
fimull
cmp
jl
ss
and
sub
call
icebp
mov
psrlq
adc
xor
testb
inc
inc
sub
lds
lods
adc
mov
fs
popa
pop
lock
ret
cwtl
lock
iret
mov
and
mov
dec
mov
outsb
pop
je
pop
gs
cmpsl
lcall
cmp
or
or
xor
jecxz
adc
outsl
dec
lods
jnp
or
cmc
mov
add
cwtl
cmp
cmpsb
loop
add
xchg
xlat
push
xchg
gs
or
add
mov
insl
cs
cmc
xchg
dec
out
mov
nop
pop
and
shll
push
lea
loopne
xlat
dec
cmovl
arpl
dec
inc
mov
xor
out
mov
cmp
lret
mov
xchg
sti
pop
cmp
push
push
sub
sbb
xor
pop
lcall
push
xchg
mov
xor
test
in
stos
add
and
xchg
push
lea
or
and
pop
loope
jle
loope
or
stos
ja
mov
iret
jmp
pop
sbb
and
mov
repnz
and
inc
scas
leave
xchg
iret
ljmp
pop
sahf
gs
test
sbb
pusha
ds
or
sbb
add
adc
xor
andb
or
dec
mov
shll
inc
add
sub
inc
pusha
stos
push
jp
adc
stos
mov
sbb
bound
lea
push
rolb
sub
and
mov
rcll
movsb
lock
movsb
lock
lods
fwait
inc
fisttpl
call
push
popa
mov
fsubl
lea
dec
clc
or
sub
xchg
rcr
mov
mov
pop
push
pop
lcall
xor
or
cmpsl
shr
mov
sub
adcl
mov
lea
mov
repnz
jge
sbb
add
adc
push
pusha
sbb
enter
mov
lcall
fists
adc
or
push
push
adc
push
inc
xchg
ljmp
test
outsb
test
mov
sub
addr16
adc
fs
sub
test
add
shl
add
xchg
lcall
fistps
repnz
in
call
inc
sbb
test
mov
mul
xchg
inc
idiv
pop
imul
jnp
andb
inc
jge
dec
test
fistpll
imul
adc
enter
faddl
inc
lcall
xor
cwtl
add
fdivs
dec
inc
insb
in
lods
sbb
stos
faddl
ficompl
jnp
std
sbb
inc
aas
rcrb
cmp
sub
sti
or
enter
dec
mov
push
mov
out
sub
lea
incl
dec
jns
roll
out
cmc
fbstp
test
or
lock
out
push
lret
mov
addl
adc
xor
test
add
sub
and
sar
loopne
sbb
xor
outsl
mov
xlat
or
insb
push
push
adc
inc
push
add
add
sub
lcall
add
jge
adc
ljmp
adc
adc
mov
shlb
mov
adc
in
clc
cs
lods
rcrb
inc
jmp
push
sbb
test
adc
adc
mov
sub
insb
cli
pop
shl
gs
sbb
call
adcb
fcomps
lea
test
sub
pop
mov
fildl
inc
mov
idivl
fcom
pop
je
xor
movsl
arpl
scas
inc
les
jp
push
lea
lahf
rcl
xchg
xchg
cmp
push
adc
pop
js
sbb
jecxz
movsb
adc
cmpsb
stos
mov
scas
hlt
fdivp
jge
pop
lea
push
aas
and
ficoms
adc
out
inc
shl
dec
or
cmpsl
pop
lcall
cmp
adc
push
xchg
lret
add
int3
enter
add
ret
pop
aas
ret
test
xor
jge
add
sbb
adc
stos
jb
rolb
ret
mov
mov
sub
cmp
dec
push
pop
mov
or
shl
adc
adcb
jmp
add
push
mov
sbb
sub
adc
and
idiv
ds
mov
pop
pusha
adc
or
pusha
dec
lret
sub
jmp
push
outsl
mov
cmp
imul
addb
cmpsb
insl
out
and
ret
imul
rorb
fldt
or
jle
scas
enter
inc
imul
mov
mov
add
shlb
adc
cltd
jns
mov
fwait
add
sub
dec
xor
repz
dec
xor
inc
cmp
es
xor
loopne
mov
sub
test
out
mov
mov
into
xor
neg
add
or
mov
clc
adcl
push
dec
push
inc
lock
aad
lods
and
popf
enter
int3
mov
testb
add
xchg
pusha
or
jno
or
mov
xor
xlat
popa
xorb
addb
out
add
pop
jg
sub
add
mov
insb
notb
mov
outsl
repnz
xor
call
pop
push
loope
or
into
jmp
sub
and
sub
adc
or
and
lahf
orb
push
xchg
pop
adc
lahf
pop
push
push
aad
or
mov
sub
ss
cmp
cmp
push
int3
out
dec
adc
test
fcos
xorb
and
mov
push
push
mov
or
cmp
mov
push
arpl
mov
pusha
xchg
arpl
sbb
push
adc
sarb
cmp
ljmp
add
scas
adc
imul
mov
add
subb
add
js
mov
or
xor
lcall
add
add
inc
pop
sub
loope
stc
push
lret
and
jne
xor
jns
mov
lods
sub
cmp
fmull
sbb
data16
add
lea
jle
sbb
test
cmp
add
pop
adc
out
outsb
pop
mov
cli
sub
lahf
push
sub
push
sub
loop
sub
pop
xchg
mov
mul
andl
or
mov
ss
lcall
pop
jbe
data16
cmp
pop
inc
or
lock
pushf
dec
mov
pop
add
stc
jg
add
repnz
fbstp
xchg
sub
sub
daa
sar
sub
in
mov
jl
dec
cmp
xor
shlb
add
lock
inc
and
fimull
mov
jmp
pop
inc
inc
inc
sub
cwtl
mov
add
imul
cmp
daa
iret
add
and
gs
push
js
and
inc
adc
shr
add
push
or
or
divl
adc
mov
or
adc
push
and
pusha
fsts
lcall
push
sti
mov
subl
imul
lcall
in
jno
adc
fsts
lcall
inc
jp
mov
xor
rcr
push
xor
loope
out
mov
fadds
fsubs
shrb
les
jge
cmpsl
xor
bound
daa
and
fadd
mov
pop
inc
inc
and
mov
clc
inc
pusha
add
sbb
adc
xchg
push
sbb
and
sub
sbb
add
out
sbb
push
push
or
stos
adc
pushf
mov
dec
fwait
adc
shrl
test
adc
mov
movsb
mov
adc
adc
fnstcw
cmp
cmc
sbb
and
add
sbb
test
lds
in
add
mov
adc
sahf
pop
pusha
or
push
sbb
movsb
dec
add
add
mov
inc
imul
jo
scas
or
or
inc
clc
or
fsubs
test
and
sub
adc
xchg
mov
imul
mov
popf
scas
add
data16
cld
jae
push
sbb
adc
sbb
shll
mov
bound
loope
jmp
stos
or
push
xchg
scas
stos
xchg
sbb
movsl
mov
testl
cmp
popa
xor
icebp
shll
fwait
cmpl
lds
xlat
and
lods
or
add
sbb
xor
jecxz
cmpsl
add
xor
inc
dec
repnz
mov
sub
subl
jno
adc
fs
xor
popa
xchg
fistpl
push
push
lret
mov
loope
iret
fidivrl
ss
mov
fcom
cmpsl
or
and
adc
ljmp
mov
adc
rclb
sub
cli
insl
push
les
xchg
arpl
adc
sbb
push
push
lock
sub
add
push
mov
mov
mov
push
and
adc
push
inc
repnz
dec
adc
jle
idivb
add
lcall
shlb
inc
cmp
out
int
js
or
shl
lea
add
cmp
push
sub
jo
repz
add
mov
sti
lret
and
adc
imul
rolb
cld
mov
cmp
mov
sub
imul
int
sub
sub
jecxz
sarl
xor
add
cmc
mov
add
in
add
out
sahf
shl
pop
rolb
fbstp
or
insb
shlb
jg
imul
add
xchg
inc
rcll
push
aam
sbbl
test
mov
fisubrl
test
loopne
decl
jb
xor
sar
sub
and
aam
adc
cwtl
pop
mov
mov
insl
jecxz
shrb
jg
inc
and
or
mov
mov
dec
cmp
les
inc
pop
sahf
pop
sbb
inc
cwtl
test
xor
movsb
push
lahf
cmp
jnp
ret
notl
and
repz
jmp
add
notb
jnp
jo
sbb
adc
xor
mov
pop
xor
and
push
or
push
rorl
mov
test
add
or
fwait
out
mov
jl
sub
cmp
jl
jmp
cwtl
jecxz
inc
out
sub
push
dec
and
pushf
xor
mov
fisttpll
test
add
lods
nop
push
dec
fldl
lds
dec
stc
packsswb
nop
pop
cli
ret
call
test
rorl
and
adc
sub
stos
xor
loope
mov
push
xlat
lcall
and
cmp
fstps
cli
xchg
cmp
push
add
cld
dec
push
and
mov
dec
xchg
push
push
mov
dec
push
and
mov
cmc
adc
or
fisttpll
lret
jp
fldenv
imul
jns
mov
roll
lret
adc
mov
inc
or
mov
or
xchg
or
inc
push
adc
jle
or
enter
mov
out
jne
lods
repnz
imul
bswap
rolb
xor
int
xchg
stos
aad
shl
cmpsb
xchg
ljmp
mov
inc
repnz
push
jmp
mov
imul
daa
push
loopne
push
adc
lea
sbb
ds
test
push
shrb
mov
or
lret
pop
loopne
enter
std
pop
or
data16
addr16
in
add
icebp
add
popa
test
sbb
sub
or
stos
mov
add
or
adc
dec
mov
or
xchg
insb
orl
nop
cmp
icebp
sbb
xor
or
sbb
pop
dec
lcall
push
popf
dec
es
sbbb
movsb
jge
fcmovu
es
cmp
jnp
adc
sbb
xor
mov
fsubrs
inc
add
dec
movsb
push
pop
arpl
popa
xchg
dec
sub
mov
test
or
jle
dec
mov
repnz
xor
test
outsl
dec
add
add
cld
sarb
gs
fadds
inc
add
and
inc
or
mov
aas
mov
std
cmp
dec
popa
inc
cmp
incb
push
push
jmp
fildll
mov
push
or
js
in
and
push
into
mov
std
shlb
ret
rclb
int3
adc
push
push
sbb
mov
movsl
int
mov
cmpl
pop
push
mov
or
add
push
mov
pushl
sub
mov
or
scas
pop
fwait
push
xchg
lods
or
scas
repz
jnp
bnd
or
mov
jns
outsl
dec
aas
adc
aas
enter
rcr
outsl
add
dec
inc
and
mov
imul
jb
es
lret
out
mov
movsl
imul
add
pop
dec
out
mov
cmp
or
int
cs
sbb
push
or
jne
ds
addr16
mov
lret
jno
cmc
mov
mov
mov
pop
lea
repz
in
sub
sub
das
jbe
int3
dec
pop
inc
notl
pop
pop
dec
js
call
sbb
push
push
sbb
popf
and
sbb
pop
jae
adc
xor
push
negb
inc
arpl
dec
xchg
and
lock
pop
in
mov
sub
lcall
loope
mov
mov
testl
push
out
mov
sub
jns
mov
push
mov
lahf
stos
stos
mov
pop
fisubs
dec
ds
sub
sub
rol
stos
test
jnp
ss
lock
mov
or
mov
cs
mov
enter
jmp
int
and
sbb
int3
mov
dec
repnz
or
dec
ss
testl
pop
add
mov
fsubrl
pop
mov
into
jne
mov
pushf
in
add
add
int
fildll
sbb
mov
mov
pop
push
mov
xchg
je
lea
sbb
cmp
clc
push
sub
rorb
and
sub
mov
lock
loope
stc
fcmovnbe
mov
mov
cli
or
inc
sbb
mov
adc
sbb
add
int3
imul
scas
or
mov
das
push
or
lods
sbb
add
add
sbb
mov
aas
add
mov
mov
mov
stos
insb
mov
jle
iret
jp
pushf
or
mov
cli
adc
fmull
sub
or
fnstsw
push
cmpsl
push
add
xor
mov
mov
jo
sub
shrb
inc
inc
ss
mov
les
sbb
aam
push
cmp
ret
jl
pusha
mov
xor
mov
push
leave
sbb
lods
add
add
adc
add
pop
lods
pop
mov
pop
mov
jmp
cmpl
add
pop
mov
adc
or
or
inc
adc
popa
inc
xor
mov
adc
or
cmp
inc
out
dec
adc
aam
xchg
push
mov
xchg
rorb
fnstenv
push
adc
sub
test
mov
mov
push
xor
push
mov
pop
dec
pop
xchg
test
or
testb
int
ds
insb
mov
outsl
cli
add
shlb
dec
clc
inc
andb
pusha
int
subb
jge
add
push
mov
andl
or
push
inc
or
push
clc
inc
push
and
push
jbe
xor
inc
mov
xchg
imul
sbb
lea
mov
popl
lret
lret
lods
imul
js
and
and
add
or
sub
xor
repnz
iret
cmpb
dec
jge
inc
mov
or
loop
es
push
dec
in
fwait
lahf
pop
jnp
pop
push
shrb
xor
sub
push
add
movsl
cmp
lea
push
les
or
or
push
xor
sbb
inc
or
das
or
in
mov
jmp
cmpsb
jne
sbb
pop
sub
addb
jae
mov
stc
adcl
daa
iret
leave
add
add
cmp
inc
in
ror
addl
shlb
push
push
push
push
les
cmpsl
rcll
add
lock
je
aam
dec
or
scas
and
adcl
out
popa
lock
push
jle
adc
push
popa
inc
cmp
rclb
mov
shll
add
shlb
mov
fmulp
enter
or
mov
xor
nop
addb
es
xchg
cmp
mov
popa
js
mov
dec
lret
jno
aaa
push
dec
dec
jmp
or
push
inc
js
push
xor
inc
fdivl
pop
add
std
rolb
sub
call
jle
sub
add
xchg
and
mov
push
adc
mov
sbb
rcll
mov
sub
cld
push
into
enter
aad
or
insb
push
xchg
hlt
lock
push
sbb
notb
jnp
add
test
bound
sbb
push
inc
enter
add
adc
fcmove
insb
jmp
push
mov
dec
lods
sbb
cld
int3
jae
adc
and
push
movsb
mov
test
inc
sub
fwait
jmp
shrl
dec
jmp
leave
xchg
jno
xor
add
sbb
addb
daa
mov
int3
hlt
pop
sbb
add
push
jne
aas
push
popf
push
cmc
dec
aas
cmpsl
inc
movsl
subb
sub
push
push
pop
or
cmpsb
sbb
les
or
push
mov
push
test
mov
adc
test
das
insb
add
fmuls
xor
add
cli
fadd
lea
sub
xor
cwtl
test
or
adc
pop
mov
fstpt
fisttpll
imul
cmp
inc
mov
mov
loopne
cmp
ret
and
and
sar
push
jle
iret
mov
xchg
push
sub
sub
push
add
ret
loop
loopne
pop
xor
sub
add
mov
out
xchg
and
adc
mov
add
imul
cmp
jnp
push
arpl
push
mov
push
mov
clc
imul
lock
jnp
mov
mov
and
add
dec
push
aam
gs
cs
pop
fprem1
mov
fldl
movsbl
xchg
or
pop
shrl
xchg
movsb
mov
shl
sbb
repnz
mov
add
mov
pusha
scas
rorb
mov
in
hlt
fs
push
or
nop
pop
rcll
inc
bound
fldl
cmpsb
xor
pusha
sbb
add
mov
ljmp
jle
add
popa
jmp
push
add
decl
mov
mov
sub
inc
or
fnsave
add
sbb
mov
add
shlb
push
lds
add
lcall
xor
push
add
pop
mov
or
add
jl
mov
sti
andb
sbb
add
lret
rcrl
out
scas
insb
sahf
pop
mov
mov
and
sub
shlb
dec
je
dec
sub
inc
jge
lahf
adc
inc
add
cli
add
push
add
cmp
add
adc
clc
xor
aad
lahf
sub
cmp
push
test
jmp
clc
or
jo
adc
out
jns
mov
dec
add
movb
loopne
mov
scas
adc
mov
xchg
adc
jmp
inc
cmp
leave
add
jle
movsb
icebp
inc
sti
mov
pop
aas
inc
inc
pop
sub
lret
imul
decb
scas
inc
out
pop
mov
sub
shll
add
lea
dec
mov
jl
aaa
movsb
adc
mov
sti
addr16
std
mov
mov
test
push
or
add
add
sub
sbb
pop
clc
cmpsb
test
ret
push
jg
jne
add
lods
or
mulb
push
frstor
roll
dec
or
push
and
cmp
xchg
mov
js
aad
pop
faddp
xor
pushf
jl
pop
insb
add
sbb
int3
xchg
or
or
pop
je
cld
push
jmp
insb
in
or
jne
ss
clc
jge
push
shr
push
cli
fistpl
iret
int3
jmp
imul
mov
popa
push
rclb
loopne
mov
sbb
dec
inc
fidivs
out
pusha
inc
or
cmp
inc
add
xchg
push
inc
and
push
adc
adc
ud1
inc
push
xor
cwtl
pusha
push
ja
insb
sub
or
mov
adc
adc
or
cmpsb
mov
sbb
sbb
add
sub
and
jl
fidivrl
push
dec
rcrl
dec
add
push
dec
aam
shlb
add
push
out
mov
jno
cs
and
or
pop
lret
cmp
mov
iret
sub
lret
xor
inc
push
cmpsl
test
jmp
test
mov
pop
or
mov
outsb
add
lret
fs
mov
xchg
xlat
dec
pop
dec
jb
sub
xor
rcl
adcl
xchg
adc
dec
jno
popf
iret
pop
dec
cmp
popf
xor
add
sbb
js
aam
mov
rolb
sbb
call
movsb
mov
sbb
adc
ret
imul
scas
adc
push
jge
add
mov
test
push
adc
sbb
pop
xor
jmp
adcb
push
inc
push
icebp
ds
out
jle
add
push
fstpt
cs
inc
leave
cs
jno
mov
fcomps
aam
arpl
or
sbb
pusha
fcomps
test
inc
lods
and
xchg
inc
sarl
sub
je
dec
pop
dec
add
in
mov
inc
dec
add
cmp
ljmp
ret
inc
push
pop
call
sbb
or
xchg
rorb
ret
test
lock
je
mov
nop
add
or
mov
loope
loope
test
pop
aaa
mov
add
pop
jmp
inc
xor
in
dec
aad
xor
add
cs
cmc
and
adc
jo
add
rorb
cltd
cmp
inc
xchg
sbb
mov
or
sbb
mov
stos
xor
inc
inc
outsl
out
dec
scas
add
mov
pop
xchg
lahf
jo
add
add
push
adc
cmp
cmp
inc
adc
and
push
fstpl
mov
ja
jmp
clc
push
imul
sub
sub
sub
arpl
cmp
xor
xor
imul
xchg
xchg
or
rcl
sbb
xor
inc
inc
xor
cld
add
sbb
xor
mov
or
inc
inc
fsubrs
cmovg
das
xchg
fcomp
lock
fcompl
cmp
sub
pushf
jb
xor
pop
mov
inc
lret
cld
push
push
and
jae
stc
push
outsl
mov
movsl
sbb
pop
test
rolb
cmpsb
and
sub
xchg
imul
cld
insl
or
or
and
pop
enter
mov
mov
xorb
pop
pop
imul
pop
shlb
outsb
push
dec
loop
sub
daa
hlt
icebp
and
mov
fildll
push
add
xchg
dec
add
xchg
inc
xchg
daa
adc
mov
sbb
movsl
test
fistps
add
cmp
call
loope
leave
leave
repz
test
push
add
mov
pop
or
lods
leave
xchg
arpl
data16
aad
push
cld
lcall
inc
bsr
adc
xor
push
iret
cld
xor
sarl
mov
pop
push
inc
shl
sub
xor
daa
dec
ficoms
adc
movsl
and
or
inc
adc
xor
cmp
in
sub
adc
sbb
jge
rolb
inc
arpl
pop
in
xor
in
sahf
xchg
inc
stos
pusha
ret
dec
push
or
fdivl
add
inc
mov
ds
mov
add
sbb
je
iret
adc
add
mov
popf
dec
cmp
cmpsb
lods
add
sbb
andl
jle
fldcw
jecxz
aam
mov
or
inc
leave
push
add
mov
fisttps
pop
rorb
mov
xor
push
pop
loopne
imul
add
and
lods
js
shrb
or
dec
leave
jne
testb
push
mov
dec
in
dec
or
and
pop
test
mov
inc
sub
push
adc
sub
adc
xchg
sbb
pop
adc
cwtl
sub
or
clc
addb
call
and
ret
sub
int
int3
les
int3
xorb
add
and
or
inc
adc
sarb
dec
and
dec
xor
test
sub
push
outsl
pushf
push
aam
sub
out
pop
call
out
fisubrs
cmp
mov
xchg
cli
add
add
idivb
sbb
mov
adc
push
call
push
mov
or
cmp
sbb
xor
adc
repz
add
xchg
or
ficoml
xor
cwtl
dec
je
cmpb
lret
cltd
cli
adc
ret
sub
je
jmp
inc
pop
jne
cmp
or
pop
adc
daa
dec
imul
jmp
inc
test
push
mov
cs
jno
adc
cltd
mov
pop
sbb
call
dec
icebp
cmp
add
rcrl
movsl
leave
sbbb
or
add
mov
pop
mov
fistpll
jbe
cmpb
ja
dec
adc
cmc
mov
subl
xlat
ficoml
inc
scas
push
push
xchg
sbb
ret
and
cmpb
sarl
mov
mov
add
jmp
mov
inc
insl
rcrl
into
ja
push
mov
inc
pusha
mov
jbe
push
insl
mov
jnp
loop
pcmpeqd
lea
js
insl
cmpsl
add
out
push
adc
push
divb
les
push
clc
ja
dec
in
pop
adc
rcrw
or
jp
mov
sbb
cmp
daa
push
pop
popa
push
movsb
mov
inc
pop
out
imul
setg
sbb
push
stos
pusha
mov
add
dec
fldt
jg
push
xchg
ja
fldpi
pop
xchg
mov
jecxz
lret
mov
pop
xchg
or
test
sbb
je
sub
cmc
bound
mov
pop
and
adc
rolb
pop
add
mov
lcall
mov
mov
push
pop
inc
pop
dec
sbb
pop
sbb
mov
pop
enter
int
pop
sahf
dec
cmp
push
add
jne
aam
xorb
dec
inc
dec
dec
movsb
mov
test
push
pop
fistpll
in
aas
pop
test
dec
push
or
sbb
ret
pop
lods
arpl
xor
arpl
flds
add
dec
shr
cltd
mov
ss
cmp
inc
lret
mov
inc
xchg
into
adc
pushf
push
adc
adc
fldcw
pop
pusha
gs
inc
or
dec
pop
lret
mov
inc
inc
adc
xor
enter
ljmp
faddl
ss
jg
fsubrs
arpl
rcll
push
mov
xor
out
lcall
nop
add
push
mov
push
or
xlat
cmp
mov
aad
nop
dec
subb
nop
sbb
push
jo
add
nop
lahf
jo
test
je
mov
xchg
adc
enter
sbb
gs
mov
xchg
arpl
cwtl
test
cmp
lcall
sbb
dec
sbb
sbb
push
or
les
xor
xchg
jbe
mov
sub
mov
orl
fisttpl
mov
fcoms
lods
and
stos
scas
jg
enter
inc
into
call
and
ss
xchg
add
pop
loop
adc
lods
popf
push
rcrb
adc
adc
lds
sub
jmp
int
data16
xchg
repnz
push
cwtl
adc
rcrl
mov
adc
js
dec
scas
roll
add
add
jns
adc
jb
frndint
nop
stc
fbstp
faddp
add
jp
xchg
out
dec
mov
dec
test
add
inc
pop
and
sub
aas
cs
pop
lods
mov
xchg
xchg
insl
cmp
fimuls
sub
push
mov
mov
push
cmpsl
aam
add
jno
js
xchg
mov
test
lds
pop
lods
sbb
dec
jle
mov
xchg
push
xchg
adc
repnz
pop
or
sbb
dec
add
adc
cmp
push
push
add
mov
sub
dec
jo
mov
add
out
mov
mov
pop
jno
mov
inc
fadd
add
xchg
nop
cmp
mov
jge
inc
cmp
adc
and
push
cmp
inc
cmpsb
push
add
push
push
or
mov
xchg
movsl
jecxz
roll
or
push
lea
mov
sub
pop
jae
jmp
sarl
add
pop
les
inc
pop
cs
call
add
inc
and
adc
xchg
xchg
xchg
mov
leave
push
add
jmp
mov
mov
and
add
jmp
jne
push
add
dec
in
out
cmp
pop
dec
push
add
sub
dec
aaa
ljmp
clc
xchg
xchg
pop
add
aam
push
call
mov
es
mov
and
and
movsl
or
loop
addb
inc
gs
and
cmp
pop
cltd
jge
mov
mov
aam
add
adc
dec
dec
dec
add
pop
push
dec
inc
jns
cmp
xor
xchg
mov
mov
push
mov
test
pusha
jo
imul
adc
jmp
dec
shufps
icebp
xor
sub
aas
and
jle
xchg
rcrb
pop
jp
sub
xor
cmpsb
jno
push
arpl
add
xchg
xor
pop
aas
test
shr
or
ds
or
xlat
pushf
sub
int
test
or
nop
jmp
jo
sub
xchg
int3
push
lock
sbb
inc
jne
xchg
movd
mov
push
and
sub
adc
leave
xor
movsl
or
push
pop
add
or
sub
push
jl
in
add
rcll
add
dec
imul
sub
and
lock
jecxz
mov
adc
mov
dec
outsl
or
adc
andb
push
sbbl
xchg
or
pusha
adc
aam
push
sub
xchg
cmpsl
mov
repnz
and
cs
ret
jns
sbb
adc
test
xor
or
push
and
cmp
push
pushl
ret
jne
jno
xor
mov
in
or
loopne
mov
repnz
mov
or
mov
add
cmp
loop
andb
dec
inc
push
outsb
andb
xor
or
dec
adc
push
lods
lds
js
repnz
jl
inc
or
or
shrl
xor
xchg
rclb
mov
jmp
in
adc
xor
leave
sbb
mov
mov
shr
jno
add
dec
mov
add
mov
inc
scas
popf
or
fiaddl
adc
xor
cmp
fbld
call
aam
inc
sbb
add
pusha
lahf
rorl
and
sub
enter
or
pop
insl
mov
in
jle
shl
and
push
adc
xor
pop
xchg
dec
fsub
es
mov
sub
pop
decl
push
mov
and
pop
sub
sbb
and
mov
daa
add
cs
in
pop
dec
pop
and
cltd
add
les
push
inc
or
inc
or
loope
add
inc
mov
rolb
pusha
add
clc
cmc
or
inc
jge
pop
gs
decb
test
pop
shlb
mov
in
daa
cmp
xor
dec
dec
jne
pop
inc
pop
pop
or
sbb
push
dec
add
push
cmp
pop
in
mov
and
aad
push
dec
jno
add
dec
and
lock
xchg
push
call
xchg
fsubrl
xchg
adc
jbe
xorb
adc
jbe
mov
sbb
sbb
dec
pop
cmp
xchg
push
sub
ret
push
pop
mov
jno
add
and
mov
jl
ss
fistpll
ss
and
fiaddl
add
add
sbb
add
mov
dec
xchg
cmp
or
pusha
adc
dec
sarb
or
and
imul
jnp
inc
jecxz
push
jmp
mov
mov
ret
sarl
adc
cwtl
outsl
pop
je
or
dec
add
sti
mov
or
push
lret
pusha
imul
inc
jp
jge
push
inc
cmp
xor
jne
fsubs
sbb
aam
or
inc
sub
push
mov
add
xchg
es
por
pop
pop
xchg
mov
xchg
add
or
jbe
dec
inc
sahf
mov
sub
add
push
mov
xor
pop
xor
sbb
sbb
mov
mov
mov
mov
push
mov
test
jp
push
sbb
movsl
mov
or
sbb
dec
push
rcrb
test
shlb
ffreep
pop
adc
fcompl
sbb
or
add
sbb
sbb
pop
xchg
add
push
mov
push
pop
lret
fwait
push
fs
fisttps
xchg
pop
add
daa
movsb
jno
aad
icebp
mov
push
les
push
add
sub
or
sti
nop
aad
lock
push
and
stos
jo
sbb
pop
inc
inc
xor
push
sbb
mov
lods
addb
adc
pop
push
sub
push
out
les
popa
lahf
push
and
pusha
cmpl
sbb
xor
sub
add
or
and
sub
sbb
push
push
sahf
sub
mov
mov
pop
xor
hlt
dec
push
call
into
lret
pop
inc
adc
or
push
cmp
outsl
pusha
test
dec
adc
cld
jae
ficoml
add
adcb
push
push
sbbb
push
xor
add
add
cmp
push
adc
ss
add
mov
jge
test
push
push
sbb
popa
mov
push
aaa
repz
nop
mov
icebp
mov
lret
xchg
clc
insl
jne
xchg
mov
push
push
cltd
adc
imul
cwtl
sub
mov
xchg
push
pop
adc
add
sbb
and
sub
iret
adc
test
daa
mov
xchg
push
adc
mov
frstor
or
add
xchg
mov
fnstsw
pop
adc
sti
adc
dec
movl
xchg
pop
adc
and
call
inc
enter
adc
mov
and
fstl
or
inc
loopne
addl
and
inc
and
or
or
ds
test
mov
xchg
cmp
pop
fcmovbe
or
dec
add
int
inc
stos
pop
or
enter
or
add
and
add
add
adc
shlb
dec
mov
inc
fadd
or
push
inc
sbb
lahf
adc
in
push
rcr
sbb
pop
dec
xor
fnsave
je
sar
adc
pop
sarl
adc
cwtl
outsl
push
sub
call
dec
enter
dec
push
jl
add
imul
and
push
sub
and
sub
jp
jae
adc
fsubrs
or
mov
xor
or
cmp
cmp
add
cwtl
sub
sbb
jg
mov
inc
jo
sbb
lret
jae
add
rclb
mov
gs
and
or
mov
jge
push
or
daa
sub
mov
insb
add
insl
sub
sub
xchg
sub
adc
push
jno
sub
inc
test
mov
daa
addr16
mov
or
adc
aad
push
fistpl
add
xchg
add
cmpsl
inc
rcll
sbb
data16
aam
xchg
fadds
inc
adc
dec
insl
aaa
jge
dec
cltd
xor
addl
mov
dec
push
adc
fists
mov
incl
add
or
pusha
sub
fidivs
lods
fs
rolb
push
lcall
push
or
xor
out
movsb
lahf
jno,pn
sbb
push
test
jl
mov
dec
fimuls
insb
rorb
shll
dec
pop
cmp
mov
mov
inc
add
aaa
gs
dec
jns
leave
nop
xor
cmc
lret
popf
add
sub
xchg
dec
insb
add
push
push
mov
adc
and
mov
and
mul
jne
add
adc
lds
add
and
imul
lock
pop
pushf
lock
enter
js
push
and
xchg
jle
rcrl
dec
ret
adc
adc
sub
add
insb
cmp
add
add
in
lods
sub
sbbb
push
pop
add
or
sbb
jb
push
rcrb
and
jae
xchg
add
sub
cwtl
iret
sbb
repz
es
or
xorl
dec
mov
pushf
inc
ret
pushf
xchg
inc
add
fstpt
or
rcl
pop
xor
xchg
orl
les
push
sub
pop
xchg
inc
mov
dec
imul
push
push
nop
and
push
inc
jbe
jmp
test
mov
pcmpgtd
dec
int3
dec
sub
loope
test
lcall
fldl
into
int3
ljmp
out
mov
test
sub
sbb
adc
or
pop
mov
mov
lods
and
or
adc
push
jb
xor
out
mov
push
pusha
add
mov
fmuls
push
add
push
or
movsb
xchg
xorb
sub
ljmp
cmp
mov
pop
dec
add
lret
dec
sbb
dec
jp
add
sub
adc
cmp
jne
mov
jo
push
imul
inc
add
and
adc
or
push
push
inc
dec
or
jb
and
mov
xchg
aam
dec
cmp
xchg
out
pop
dec
inc
push
sbb
cmp
mov
sub
mov
or
push
jnp
push
pop
cmp
dec
sbb
inc
pop
push
fisubrs
adc
das
ss
cwtl
push
lcall
xor
push
sub
push
pop
insl
push
fwait
mov
push
or
sub
xor
dec
push
jae
xor
add
les
sub
nop
enter
inc
push
or
mov
mov
dec
or
sub
or
mov
ficoml
pop
popf
lods
imul
adc
int3
pop
mov
adc
shrb
xchg
sbb
sub
mov
adc
adc
orl
cmp
or
xor
imull
gs
jmp
fbstp
dec
push
add
push
dec
icebp
and
dec
sbb
xchg
adc
jbe
adc
cmp
in
mov
adc
xchg
cmpsl
dec
mov
push
or
es
cmpb
push
dec
mov
xor
inc
and
out
fdivl
fwait
pop
pop
ja
hlt
dec
and
push
adc
enter
or
mov
sbb
add
pop
insb
test
les
inc
stos
outsb
pop
imul
mov
pop
add
sub
xor
push
sub
cwtl
xor
sub
xchg
dec
aas
add
add
rolb
aas
mov
dec
lcall
dec
xor
loope
mov
adc
or
adcb
and
pop
sub
jae
xchg
or
nop
push
pushf
es
js
push
push
inc
mov
sbb
inc
jnp
jmp
mov
cmp
push
jecxz
pop
fsts
dec
std
dec
push
int3
dec
adc
dec
imul
lret
aaa
cmpsl
pop
movl
inc
dec
leave
ret
pop
and
rcll
cmp
adc
pop
dec
dec
mov
icebp
addb
or
add
sbb
aaa
add
push
xchg
adc
movl
adc
xchg
mov
pop
and
sub
or
sub
or
adc
aas
push
dec
xorb
cld
aas
fidivrl
in
adc
add
in
add
jmp
jmp
call
or
inc
movsb
or
xor
adc
dec
in
and
xor
inc
or
push
pop
jg
out
adc
inc
pusha
and
add
sbb
or
push
add
test
shll
push
mov
cmp
lahf
loope
ds
jmp
loopne
jo
ja
mov
pushf
mov
movsb
lock
adc
mov
stos
cmp
jno
les
mov
nop
mov
mov
jl
and
repz
cmp
lret
scas
jg
jno
push
out
dec
cmpl
je
test
mov
pop
sub
test
sub
adcl
popa
push
adc
adc
push
add
insl
lcall
mov
pop
in
cmp
add
lods
inc
or
and
ds
push
pop
pop
add
das
out
dec
ret
mov
jle
sbb
testl
mov
inc
jbe
lcall
sbb
push
arpl
jl
push
jne
cmpsb
daa
cmpl
repz
ljmp
push
arpl
out
aas
into
dec
sub
jo
push
inc
push
sub
jmp
mov
add
add
xor
jne
add
dec
adc
inc
lock
adc
push
cmp
push
aad
and
mov
or
and
adc
or
adc
ss
push
pop
pusha
mov
je
in
push
stos
cmpl
jge
xchg
xor
xchg
mov
pop
push
in
in
sbb
imul
add
gs
dec
sbb
or
or
dec
pop
inc
ljmp
dec
inc
gs
add
xchg
insb
push
or
xchg
ds
sbb
cmp
outsb
xchg
jmp
fwait
mov
ret
adcl
add
dec
pop
adc
push
ja
xchg
sub
sbb
addb
mov
inc
mov
push
out
aaa
jl
call
add
or
add
add
pusha
xor
inc
pop
ja
sub
or
jb
subb
jne
vmread
js
fwait
adc
jno
adc
testl
test
mov
dec
mov
scas
adc
and
shlb
mov
inc
adc
stos
cmp
cmp
adc
or
pop
inc
fcomp
cmp
stc
in
add
lret
mov
lock
push
push
mov
mov
mov
inc
mov
mov
lea
sti
and
out
mov
ss
mov
inc
xor
adc
loop
add
sbb
lods
or
add
add
fstpt
mov
std
and
in
ret
jg
inc
push
push
push
das
gs
inc
pop
add
enter
movsb
test
in
loope
or
aas
mov
cmp
jg
and
add
sub
mov
gs
fidivrl
subl
inc
mov
add
adc
sbb
pusha
pop
xor
leave
push
pusha
inc
and
sub
and
xor
lahf
test
outsb
fistl
mov
pop
int3
test
in
mov
xorb
or
push
adc
into
sarl
push
negb
push
fstl
test
leave
mov
ficoml
push
or
sub
lret
inc
and
push
inc
xchg
or
push
inc
jb
stos
push
sub
adc
add
xchg
decl
test
and
inc
cltd
fisubl
mov
inc
dec
jae
cmp
or
stos
in
jg
dec
inc
xchg
inc
scas
and
and
orb
adc
inc
test
cmp
nop
inc
filds
adc
ud1
dec
arpl
push
push
xchg
shlb
sbb
sbb
add
add
dec
mov
push
xchg
cmp
dec
js
dec
call
cli
sub
repnz
inc
inc
inc
sub
inc
add
mov
mov
rcrb
adc
rorb
sub
lock
jne
xchg
cmc
pop
jmp
int3
add
push
pop
add
or
mov
hlt
cmp
cli
sbb
loop
pushf
sub
jnp
dec
jmp
sbb
push
rcrb
mov
or
rolb
stos
stc
and
wrmsr
xchg
fiadds
xor
imull
repnz
add
or
cmpsl
and
sub
push
or
stos
shll
lahf
enter
cmp
mov
push
call
es
add
jmp
mov
rorb
add
push
aas
wrmsr
rcrl
cmp
pop
mov
sarl
aaa
xchg
push
cmp
outsb
mov
mov
xchg
scas
enter
add
jae
pop
or
cmp
or
xchg
mov
adc
fisubrs
inc
add
inc
jnp
cmp
dec
cltd
jmp
inc
cltd
insb
dec
xor
or
or
push
cltd
mov
push
sbb
xchg
xor
cltd
xchg
push
addr16
mov
add
sahf
and
loopne
insb
and
pusha
ja,pn
rclb
out
or
xchg
jnp
mov
idivl
sub
sbb
ss
mov
jnp
popa
loop
es
pop
cmp
ret
dec
insb
mov
pop
dec
xchg
fists
pop
pop
add
call
inc
ja
jne
roll
sbb
and
xchg
or
sbb
add
dec
jno
dec
iret
fwait
sarb
inc
mov
push
loop
outsl
mov
out
cmp
mov
aaa
sarb
and
in
sarb
cmp
push
xchg
test
mov
shrb
pop
loopne
jb
pop
jb
call
enter
pop
jb
shl
andb
jo
lret
push
adc
cmp
daa
and
pop
jno
aas
mov
adc
jmp
aam
fisttps
das
xchg
int
repz
cmp
push
lock
adc
xchg
fldenv
inc
pop
shlb
and
push
cmp
aam
repz
push
daa
pop
jg
xor
add
in
pusha
dec
and
dec
lret
mov
es
adc
leave
dec
scas
dec
int3
in
mov
push
sbb
jne
pop
test
js
mov
or
cmp
dec
sbb
mov
insb
push
dec
mov
mov
mov
mov
lds
xchg
call
aas
push
mov
mov
or
mov
dec
sub
cmp
and
mov
cmpb
xor
dec
mov
ja
nop
cmp
ja
jmp
sub
imul
mov
filds
push
add
add
add
add
call
pop
sbb
jmp
cmp
lea
adc
xchg
add
mov
adc
xor
or
xrelease
pop
in
ret
or
jno
or
jnp
xchg
sub
pop
push
and
xor
insb
xchg
sarb
lcall
ficompl
and
jle
je
flds
int3
fidivrs
inc
int
arpl
push
xor
push
in
icebp
ja
sbb
pop
cwtl
jp
cmp
out
mov
xchg
inc
mov
xchg
mov
test
insl
dec
lods
pop
lcall
push
inc
add
push
dec
mov
push
inc
mov
adc
nop
shlb
les
pop
dec
add
insb
fdivr
dec
xchg
or
dec
outsb
add
enter
inc
add
add
dec
ret
out
jnp
dec
roll
jbe
push
add
pushf
push
in
lds
add
adc
xchg
sbb
inc
addl
adc
sahf
sbb
into
push
lret
dec
ljmp
sub
adc
jl
sbb
sbb
in
jl
xor
xor
inc
pushf
jno
or
ret
sbb
imul
insb
mov
dec
adc
aas
push
push
int3
sub
fbstp
jns
dec
lods
push
aas
or
movsl
aam
aas
and
inc
push
push
ja
xchg
dec
gs
and
xor
loop
in
popf
push
or
imul
enter
fadds
imul
push
add
adc
icebp
xchg
jo
imul
mov
add
sysret
mov
ret
pop
pop
xor
xchg
xchg
test
dec
icebp
ret
or
xor
decb
jno
push
adc
sub
adc
mov
adc
pusha
xor
inc
push
add
adc
loopne
sbb
lods
sbb
add
xchg
popa
sbb
push
call
cmp
fstpl
mov
jns
or
orl
dec
push
cwtl
dec
jbe
push
js
aam
je
insb
xchg
insl
pop
mov
cmp
sbb
and
mov
movb
popa
or
mov
push
pop
insb
cmp
and
js
dec
xor
or
test
mov
daa
xchg
inc
cmp
shlb
dec
cld
ret
fcomps
inc
xchg
outsl
xchg
mov
sub
mov
sub
and
sbb
scas
and
sahf
or
inc
repnz
inc
pushf
sub
and
xchg
fildl
mov
inc
std
shlb
outsb
xchg
push
inc
inc
dec
push
sub
or
loope
cmp
jno
cmpps
xchg
push
mov
push
push
icebp
dec
mov
lea
push
mov
adc
out
or
int
fcmovnbe
adc
sbb
add
ficoml
or
dec
mov
sbb
pop
or
rorb
fidivl
lret
sub
jnp
push
mov
xchg
rolb
pop
or
or
sbb
lods
fwait
pop
push
in
dec
add
push
sub
jmp
orl
repnz
push
mov
mov
xor
ja
pushf
rclb
mov
pop
cmpsl
inc
mov
sbb
push
insl
add
sti
jl
into
fs
push
push
aaa
or
mov
mov
and
mov
mov
rcrl
and
frstor
pop
inc
sbb
rorb
inc
add
add
popa
testb
or
push
push
push
cmp
loope
ss
push
cmp
sbb
inc
lock
mov
xchg
cwtl
add
adcb
fwait
cmp
mov
push
shrb
fsub
fdivl
lret
dec
adc
icebp
in
push
fidivl
xchg
ds
icebp
fldl
rclb
push
out
push
in
xor
icebp
rclb
out
jl
pop
jle
out
in
add
sbb
push
push
sbb
fnstcw
pop
test
pop
dec
mov
pop
dec
test
cmpsb
call
int
icebp
fsubr
rol
pop
sub
movsl
inc
sbb
jecxz
popl
xorl
arpl
sub
and
add
dec
and
fdivs
jne
cltd
ret
or
push
imul
xor
js
mov
scas
and
push
push
rcl
jle
adc
cmp
jg
sub
jmp
lea
pop
inc
mov
xchg
and
inc
add
cmp
and
mov
or
or
aad
dec
push
dec
add
dec
push
add
xor
lcall
in
in
fldcw
lock
hlt
stc
pop
filds
dec
cld
push
mov
cld
mov
mov
add
repnz
push
or
mov
subb
xchg
or
pusha
xchg
fcmovu
rclb
shlb
lea
or
xor
cmp
das
push
pop
pop
xchg
pop
push
xchg
add
shll
push
arpl
sbbb
adc
inc
dec
divl
or
cmp
imul
push
enter
adc
push
test
mov
xor
into
or
aaa
xchg
enter
lods
xlat
cmpsl
add
incl
mov
mov
jl
jne
jl
sbb
push
xchg
movl
pop
cmp
imul
mov
mov
mov
or
xchg
mov
mov
cmp
mov
dec
sbb
jbe
sub
mov
idiv
pop
jmp
sysenter
outsl
repz
clc
cmp
ja
pop
pop
push
dec
mov
adc
xor
icebp
mov
hlt
loopne
adc
xor
outsb
popf
mov
fadds
push
push
aam
aam
sub
add
faddl
xor
mov
andl
add
mov
xor
push
jnp
cmp
cmc
push
jae
add
xchg
outsb
pop
fs
jecxz
dec
add
push
adc
cmpsl
inc
adc
xchg
pop
fiaddl
adc
test
test
mov
pop
add
daa
cmpsl
inc
daa
xor
mov
cmp
xchg
sbb
push
add
ret
mov
ficompl
dec
jbe
out
push
fs
dec
lahf
dec
xchg
mulps
add
addl
dec
rorl
ljmp
testb
xchg
stos
inc
scas
cmpsb
inc
test
cmp
mov
dec
lds
xchg
adc
lock
add
int
add
and
push
ja
dec
outsl
or
cmp
inc
aas
icebp
lods
cmp
push
cmp
pop
fadd
xor
je
pop
cbtw
add
push
dec
imul
and
lea
adc
or
nop
cmp
jo
fildl
push
xor
add
xor
xchg
lcall
xchg
dec
add
jmp
push
mov
mov
xchg
jbe
fs
xchg
pop
jne
mov
or
ss
inc
pop
adc
dec
dec
pop
and
rolb
inc
aad
les
fildl
and
xchg
pop
sub
hlt
lahf
sbb
xor
pop
mul
add
mov
int3
popf
mov
aaa
push
pusha
or
bound
sahf
lock
es
lcall
xchg
daa
sub
out
test
lea
mov
aad
or
mov
dec
rcll
js
xchg
push
nop
ficomps
sub
loop
loopne
clc
leave
xor
sub
push
push
les
lds
jns
call
mov
lock
loop
int
add
cmp
pop
lahf
inc
outsb
xchg
inc
imul
or
mov
inc
rcrb
sbb
sub
out
dec
or
jbe
and
push
xor
sub
or
rorl
lahf
cmp
sbb
or
and
and
test
decl
mov
xchg
or
sbb
or
movsb
les
xchg
adc
dec
dec
lret
and
xor
push
cmp
xor
pop
push
sbb
push
add
jae
push
popf
mov
or
inc
cs
or
jecxz
push
jno
mov
mov
pop
dec
and
cld
pushf
test
pusha
pop
mov
sub
ja
sub
sbbb
push
push
push
inc
in
in
in
inc
and
inc
pop
cmp
push
sub
sbb
xchg
fstps
lods
in
lret
dec
ret
adc
ja
add
stos
mov
pop
adc
sbb
push
push
aas
push
loopne
add
mov
push
jle
push
add
adc
xchg
sub
inc
insb
inc
jne
loop
add
ljmp
cmp
divb
imul
sbb
jge
or
dec
add
loope
inc
fsubrs
or
adc
fs
pop
into
add
mov
inc
mov
fcompl
je
xor
jae
jl
dec
add
push
leave
pop
dec
fildl
imul
mov
int3
ret
xchg
pop
es
and
xor
add
sub
mov
mov
add
add
mov
push
lret
add
and
push
inc
jns
jns
jb
sbb
add
sbbl
pop
or
pop
add
pop
mov
test
add
sbb
sub
test
sbb
add
xchg
or
ficoms
add
push
dec
or
add
cltd
scas
hlt
dec
into
adc
sub
dec
mov
sbb
push
add
adc
and
test
andl
xor
pop
fs
or
or
inc
or
lret
ja
push
xchg
push
pop
inc
or
test
add
or
lds
jb
fdivs
aas
or
jmp
loope
mov
rolb
dec
dec
int3
int3
ja
mov
mov
inc
sub
dec
cmp
push
push
xlat
cmc
repz
aas
int3
sub
aaa
scas
jmp
add
xchg
jge
mov
ret
push
adc
or
scas
xor
loopne
jbe
mov
or
push
lea
xor
dec
push
or
push
and
mov
lret
cmp
adc
sbb
adc
mov
jle
adc
inc
mov
sub
sbb
or
push
out
ret
test
mov
popa
jl
pusha
scas
sbb
fsubl
lods
mov
fsubl
jbe
mull
and
arpl
pusha
mov
and
in
sbb
xor
inc
sbb
lods
and
adc
dec
adc
push
aam
lahf
adc
outsl
adc
pop
out
mov
in
inc
call
xlat
in
cs
jle
scas
mov
pop
adc
mov
sub
test
jo
and
fwait
imul
fidivrl
fnsave
inc
mov
cmpl
test
clc
cmp
outsl
xor
fimuls
xlat
mov
dec
int3
cmp
inc
xchg
ja
enter
es
jns
xlat
lods
hlt
jp
prefetcht0
je
sahf
pop
outsb
pushf
push
paddusw
lahf
out
mov
mov
mov
push
lahf
jb
jl
imull
push
and
mov
sahf
testl
mov
inc
add
jns
ret
imulb
mov
push
and
xchg
push
icebp
xor
add
add
sub
pop
fdivp
mov
movsl
push
inc
pusha
enter
push
add
pop
sahf
mov
pop
nop
add
fsubrl
push
add
sbb
bound
pop
and
dec
dec
or
pop
sub
add
push
or
scas
pop
out
out
and
mov
hlt
pop
aas
xor
xchg
xchg
in
push
cmp
push
sub
rorb
push
loopne
sub
mov
dec
sti
jge
fstl
sbb
pop
cmp
mov
imul
cwtl
lret
cmp
push
dec
gs
fadds
out
mov
popa
push
jne
and
pop
cmp
jne
dec
test
pop
cmp
xor
or
xchg
lods
fnstsw
arpl
inc
imul
inc
pop
push
mov
mov
xor
adc
adc
adc
sbb
imul
or
aad
dec
or
and
mov
sahf
pop
fdivl
add
push
xor
addb
in
sbb
jmp
adc
xchg
inc
cmpsl
push
jno
test
cmp
mov
fdivp
cs
xor
dec
lret
push
add
add
inc
shrl
mov
cmc
or
mov
in
cwtl
add
or
enter
dec
rclb
adcb
enter
pop
cwtl
fiadds
in
adc
jns
repz
clc
fbstp
inc
xor
fcoms
or
jne
cmp
add
or
xchg
push
ret
push
dec
mov
inc
sbb
ficoml
pop
add
push
dec
daa
popa
xor
or
xchg
pop
ja
mov
cltd
add
jns
aad
and
jge
add
hlt
inc
nop
cmp
pop
js
test
jb
push
pop
adc
xchg
mov
lods
stos
and
mov
cmp
jae
loopne
or
mov
or
fnstcw
test
push
xor
add
lret
push
mov
add
inc
add
pop
jp
shrb
add
push
ljmp
add
nop
pop
ds
pop
jecxz
add
pop
add
fcoms
or
aas
jmp
sahf
cmp
add
dec
lds
aas
push
push
test
and
mov
insb
sub
xor
std
int
jae
sbb
sub
add
test
and
xor
je
push
add
lea
add
mov
pop
add
mov
mov
out
push
pop
add
xchg
aaa
dec
shrb
ret
inc
movb
loope
push
and
jge
jecxz
stos
or
or
clc
das
je
pusha
loope
lahf
add
pop
inc
sti
sbb
mov
mov
adc
push
add
inc
dec
lea
jae
add
jl
andb
and
sbb
or
sub
push
or
push
lea
xor
mov
or
mov
jno
bound
insb
or
jo
je
sbb
mov
gs
dec
mov
imul
fdivrl
shrb
dec
inc
and
cmp
xor
pushf
movsb
orb
pop
shlb
movsb
scas
sub
adc
xchg
add
sub
mov
inc
or
repnz
inc
lods
adc
in
xchg
push
cs
insl
lock
fldpi
push
or
mov
subb
insb
push
adc
inc
imul
xchg
dec
dec
push
add
ret
adc
pushf
pop
adc
or
inc
rolb
mov
inc
push
lcall
adc
ret
cs
inc
dec
mov
lods
adc
js
mov
leave
jbe
les
pop
cmpsb
xchg
hlt
xor
sub
loope
xor
sbb
js
enter
push
xor
push
inc
xchg
push
je
loopne
pop
xor
adc
push
ret
sbb
inc
mov
ss
or
scas
mov
jns
je
cmpsl
adcb
enter
jne
or
int
add
add
adc
dec
shrb
sahf
sub
adc
adc
fistl
add
fdivp
pop
int3
ret
inc
mov
jle
adcb
cmpl
das
or
jne
sbb
adc
inc
pop
pop
cmp
push
and
pop
add
xchg
pop
pop
pop
pop
mov
push
adc
sbb
push
inc
stos
incl
dec
or
adc
sti
ja
dec
loopne
mov
mov
daa
cmc
sub
sub
test
cmp
sub
sub
mov
push
pushl
sub
dec
lea
jns
sbb
imul
gs
ret
into
and
fisttps
xchg
mov
pop
jns
and
jb
jo
and
mov
or
scas
cmp
or
adc
int
jg
mov
es
cmp
leave
rolb
scas
shlb
orl
push
insb
arpl
das
or
xchg
mov
sub
push
lods
sub
movl
ds
sti
iret
fisttpll
daa
mov
xchg
jno
pusha
aas
dec
pop
sub
shll
xor
dec
rcrl
sbb
bnd
jl
subb
sbb
sbb
data16
add
std
aas
mov
mov
mov
mov
sbb
jnp
pop
push
in
push
push
dec
loope
add
mov
add
and
inc
loop
imul
push
fldl
dec
inc
ret
mov
lret
pop
inc
pop
fs
lahf
adc
fnstsw
repz
pop
push
jbe
lret
mov
dec
jg
jg
inc
add
je
jg
or
and
rolb
inc
mov
or
xchg
pushl
xor
dec
mov
nop
adc
insb
push
sbb
or
adc
adc
int
push
out
ja
imul
or
or
or
or
xchg
inc
xor
gs
sub
push
rcrb
xor
insb
sbb
test
inc
gs
xor
fwait
cmp
sub
shll
add
mov
adc
push
jno
in
cli
lea
push
mov
pop
or
fs
inc
loop
lock
sub
sub
or
push
xor
adc
or
int3
pop
pop
mov
nop
inc
sahf
jmp
pusha
cmp
insb
insb
xchg
popa
lret
or
add
lret
mov
pusha
and
jns
adc
mov
lods
inc
or
into
push
add
and
mov
sbb
add
adc
addl
enter
cmp
mov
and
sub
or
sub
sbb
dec
dec
jp
pop
pop
push
cltd
insl
pop
gs
mov
dec
das
add
dec
adc
cmp
add
cmp
dec
sub
inc
fistps
add
int3
mov
add
jle
lock
fildl
push
adc
lahf
ljmp
xchg
popa
mov
inc
dec
xor
pop
xchg
sahf
roll
or
mov
and
cwtl
dec
xor
sub
stos
xchg
test
je
ret
inc
mov
mov
outsb
lods
mov
and
and
and
xorl
xchg
int
test
sbb
jo
pop
sbb
repz
test
and
and
and
and
in
add
roll
sub
push
cmpsl
jmp
leave
add
mov
std
jnp
ficompl
xchg
js
pop
inc
loope
add
sbb
fdivrs
or
mov
adc
jle
ret
daa
add
aam
pop
sbb
pop
cld
inc
dec
les
out
addr16
test
insl
mov
sbb
and
sbb
mov
pop
inc
sbb
addr16
subb
ss
pop
adc
sub
in
mov
divb
push
call
sub
lea
mov
sbb
aam
push
or
mov
cwtl
add
ret
pop
mov
test
dec
in
mov
fmuls
lcall
pop
dec
aam
mov
jb
cmp
mov
mov
adcl
inc
or
sbb
adc
or
xchg
and
les
int3
aam
leave
subb
sub
jbe
lock
inc
xchg
push
push
sahf
in
inc
fwait
das
push
adc
sub
dec
mov
enter
lods
push
xor
jl
rolb
sbb
mov
orl
mov
iret
or
push
add
mov
inc
jbe
mov
popf
adc
popfw
xor
adc
pop
pop
enter
nop
jno
mov
adc
and
jae
adc
inc
lods
sub
out
and
push
ret
mov
dec
les
cltd
enter
ficoms
lmsw
pop
push
or
aad
sub
das
push
add
pusha
stc
shl
repnz
xlat
sbbb
mov
icebp
adc
ja
dec
andl
aas
shlb
and
or
xor
inc
mov
aas
call
pusha
outsb
xchg
fadds
push
jg
dec
imul
push
pop
or
dec
xchg
xchg
push
rcrb
je
orl
hlt
stc
gs
mov
jnp
add
sub
ret
mov
pop
cmpsb
cmp
ljmp
adc
stos
test
int
dec
aaa
inc
pop
mov
pop
outsl
cmpsl
decl
push
mov
adc
popa
test
lods
xor
icebp
xchg
xchg
xchg
inc
fs
pop
mov
add
pop
sbb
add
xor
sbb
sahf
hlt
divl
dec
ret
lock
fwait
mov
push
aam
xor
xchg
sbb
leave
xorb
add
jecxz
mov
or
adc
mov
aaa
push
sbb
sbb
xchg
xchg
dec
ja
outsl
inc
sub
sub
gs
dec
cs
outsb
gs
mov
xchg
xchg
imul
dec
or
dec
lock
jl
pop
pop
pusha
out
jb
in
insb
push
xor
lods
shl
and
nop
push
push
cmp
clc
in
dec
shll
sbb
sbb
inc
sub
push
jbe
jecxz
mov
dec
ja
rcr
jns
push
add
push
add
dec
and
out
lods
mov
lea
lods
ljmp
cmp
sub
push
jl
cltd
add
push
inc
sbb
push
dec
and
pop
sbb
aas
and
ret
mov
nop
push
cmp
test
fiadds
mov
cmp
cs
add
hlt
addb
and
mov
mov
sti
lahf
sar
inc
int3
mov
push
lea
adc
cld
push
mov
xorb
or
sub
sbb
addb
or
mov
adc
sub
movsl
loope
push
push
ret
fsubs
push
sub
orl
mov
faddl
test
loopne
outsl
cmp
lods
xchg
or
mov
lock
mov
lock
mov
add
cmc
int
sbbb
leave
adc
adcl
das
cld
clc
clc
mov
in
cld
dec
mov
pop
push
push
stos
inc
mov
pop
cli
fildl
ja
ret
or
dec
leave
pop
cmp
xor
bound
scas
adc
lods
sub
add
add
cmp
jne
xlat
adc
xchg
mov
jge
pusha
lock
jge
mov
pop
loop
in
dec
mov
add
or
or
push
or
mov
push
xor
dec
inc
lcall
inc
subb
and
lahf
cmp
pop
je
pop
add
lcall
pop
bound
repz
popf
or
mov
inc
pop
ret
shrl
pop
add
test
je
pop
add
sbb
jg
jb
cmp
dec
rolb
and
lcall
cli
adc
adc
and
mov
lcall
fistpl
xor
sub
dec
movsb
lea
ss
cmpsb
in
adc
add
aas
mov
gs
dec
dec
call
mov
or
xor
adc
mov
in
cmp
xor
adc
or
or
ds
and
enter
call
in
pop
xor
or
leave
add
mov
test
jo
lahf
push
and
nop
lret
push
mov
dec
push
inc
das
es
mov
add
aas
push
aas
mov
push
push
sbb
sub
sub
add
shrl
pop
popf
das
out
insl
test
xorl
mov
jg
movsb
dec
test
pop
mov
inc
jmp
mov
or
pop
pop
or
imul
pop
mov
push
test
dec
lcall
and
xchg
out
sub
je
and
imul
add
sub
push
fs
dec
shrl
inc
nop
aaa
fcomps
xchg
xchg
push
enter
sub
lret
and
push
jnp
xchg
pop
pop
mov
adc
jl
jae
cli
or
sub
das
mov
add
clc
dec
and
imul
clc
inc
in
jmp
fs
dec
repz
test
shl
fmul
mov
mov
and
mov
loop
fidivrs
subb
sahf
mov
movsb
stc
pop
jo
shrb
fs
inc
lcall
in
dec
movsb
stc
xchg
jbe
fsubl
inc
fcoml
cmp
movsb
sub
dec
lcall
adc
push
dec
mov
add
add
clc
dec
mov
mov
in
mov
loopne
and
imul
decl
and
lret
jl
mov
xchg
jp
mov
xchg
and
test
dec
dec
and
add
shll
dec
repz
add
pop
call
dec
xchg
mov
mov
add
xchg
cmp
nop
sub
mov
and
imul
inc
adc
mov
test
or
add
fcoml
fs
add
and
das
imul
in
add
les
imul
dec
mov
and
add
sarb
out
fs
out
cli
mov
cmc
and
mov
dec
cmp
inc
cli
int
pusha
lods
fsub
lods
add
rclb
and
pop
imul
cmp
cmp
and
jl
and
out
nop
sbb
nop
jbe
lcall
add
jp
dec
and
out
xchg
cli
aam
mov
les
dec
mov
xchg
ss
test
and
xor
xor
out
mov
stos
js
jl
cmp
int
insb
mov
xchg
xor
xchg
jo
dec
cmp
jno
push
dec
repz
cli
lcall
dec
ror
or
movsb
jns
int
test
dec
sbb
jo
stc
xchg
cmpsb
mov
jmp
loope
imul
xchg
out
fcmovu
lods
fs
imul
and
dec
lcall
call
xchg
sbbb
out
inc
lcall
push
rcrb
jbe
aad
dec
fidivrl
pop
int
aas
xor
mov
repz
mov
pop
rclb
imul
xchg
int
adc
dec
cli
xorb
das
imul
cli
xchg
out
push
out
shlb
subb
dec
jmp
sarb
xchg
out
pop
int
jo
nop
jo
int
mov
jg
pushf
inc
xorb
mov
mov
scas
mov
test
fdivrs
xchg
out
arpl
inc
loopne
push
cmc
fidivs
jmp
dec
and
or
cmpsl
sub
or
lret
dec
add
cltd
fs
add
dec
adc
test
aam
dec
sub
xchg
lret
or
jb
in
nop
add
adc
sub
add
lret
dec
pop
cmp
or
loope
xor
xchg
pop
enter
push
arpl
enter
and
xchg
push
enter
test
pop
xchg
nop
xchg
jo
fwait
push
inc
or
push
add
lea
mov
addr16
cmpl
fmull
sub
cmp
jmp
xchg
loopne
sub
mov
sub
lds
jge
adc
mov
mov
mov
lret
sbb
cmp
mov
inc
fisubs
cli
add
dec
push
sbb
inc
les
jmp
fsubrs
lds
add
mov
sbb
inc
adc
pop
add
or
fdivr
movsl
pop
jo
mov
std
inc
mov
fidivs
push
in
jnp
rorl
xor
dec
xor
xor
les
jecxz
push
lea
jbe
adc
insl
aam
xor
xchg
mov
add
rcll
cmpsb
jo
shr
sub
lea
or
push
sbb
lods
sub
mov
sub
cmp
hlt
add
lret
sub
xchg
test
rcrb
dec
xchg
lret
add
add
repnz
int
xchg
push
insb
cs
pop
sbb
adc
jns
ljmp
jb
adc
loop
sbb
or
clc
jp
ret
in
and
xor
lret
outsb
sbb
xchg
ljmp
dec
add
xlat
adcl
adc
movsl
addb
xor
dec
rcrl
pop
enter
add
orl
mov
dec
xchg
rorl
sbb
sbb
adc
sbb
js
xor
out
nop
push
sub
iret
dec
je
dec
jne
mov
test
inc
xchg
sub
pop
mov
inc
mov
ret
dec
jne
mov
icebp
jne
lods
push
or
and
jg
xlat
xor
xchg
punpckhdq
rorl
sub
sbb
rcrl
xchg
cmpl
dec
add
mov
dec
insb
das
and
in
sub
dec
adc
sbb
inc
std
sbb
fidivl
rcr
lock
or
inc
adc
dec
addb
mov
xchg
xor
xchg
mov
xchg
xchg
adc
and
aam
or
jmp
gs
ror
push
pusha
mov
push
cmpsb
push
rorb
xchg
xor
dec
inc
mov
push
xchg
jmp
out
rcll
push
pushf
push
mov
cmp
jne
dec
cwtl
outsb
pusha
xchg
sub
arpl
inc
fisubrs
cs
adc
push
cwtl
enter
and
aam
add
pop
faddl
jne
adc
shrl
add
add
sub
jmp
sbbl
ss
sub
dec
cmpsb
push
mov
xor
lock
punpcklbw
sub
add
ret
test
xor
cmp
movsb
sbb
jl
jp
outsl
or
xchg
add
push
in
fimull
pusha
popf
lea
push
mov
pop
shlb
jo
out
rdpmc
pop
and
mov
loop
dec
jo
pop
sbb
test
subl
addr16
lods
filds
adc
jl
shlb
add
adc
mov
fsubrp
in
sahf
ret
adc
sarb
jne
popa
push
xor
or
sbb
dec
mov
add
shrb
notb
inc
push
lret
xchg
and
mov
out
xor
xchg
in
cmp
cmp
cli
xor
adc
xor
outsl
pop
test
push
mov
pop
nopl
inc
imul
icebp
push
mov
push
rcr
cld
dec
xor
iret
and
movsb
lcall
jo
pop
sub
mov
lea
cmp
aas
add
sbb
lods
push
push
imull
int
inc
stos
sub
xchg
mov
cmc
cmpsb
push
push
jge
les
repz
shlb
xor
mov
out
inc
loop
movb
sbb
int3
add
into
iret
hlt
insb
fadd
mov
or
inc
adc
mov
arpl
push
data16
push
mov
xor
pop
and
mov
add
pop
in
sarb
cmpsb
lea
push
shl
sub
and
mov
lea
mov
inc
sub
pusha
and
xor
mov
pusha
push
push
mov
mov
dec
add
cmp
js
lret
jae
ret
or
and
sahf
dec
xor
subb
ret
mov
mov
mov
cwtl
fs
ss
or
add
into
or
cmp
rolb
insb
mov
lret
test
popa
add
lds
mov
adc
inc
cmp
jne
ss
jne
add
sbb
adc
sub
sbbb
xor
sub
fs
sub
mov
dec
inc
add
jno
sub
push
fyl2x
loopne
nop
daa
das
mov
orl
cmp
add
push
in
pop
cmpsb
push
xchg
repnz
loop
push
inc
test
movsl
push
rorl
cltd
sbb
xor
lcall
push
testb
add
inc
call
jmp
sub
inc
sahf
cmpsl
add
cltd
push
add
add
fcomip
xorl
xrelease
std
mov
aam
lcall
pusha
popf
push
inc
sub
cmpsl
and
xor
loop
cs
pop
incb
ss
push
mov
xor
testb
jp
or
or
loop,pt
sub
es
adc
sbb
rorb
pop
adc
xor
leave
dec
and
ret
add
cmpsb
inc
push
jne
mov
push
mov
imul
inc
scas
dec
rorl
fnstenv
pop
jnp
xchg
stos
pop
sub
pop
sbb
push
dec
dec
or
movb
jle
js
ds
ret
xchg
mov
push
mov
push
add
arpl
sub
test
and
ljmp
or
daa
sub
pop
iret
das
cmpsl
or
push
stos
or
pop
dec
insb
pop
xor
movsb
mov
imul
mov
xchg
in
mov
cmp
dec
insb
mov
mov
adc
jo
pop
sbb
inc
das
mov
mov
push
sbb
in
dec
pop
loopne
int
and
int3
aam
fld
mov
inc
sbb
push
movsb
gs
shlb
mov
add
mov
adc
movsb
rorb
inc
push
sbb
xchg
xchg
jbe
outsl
fs
rcl
pop
cmp
lea
cmp
ja
js
sbb
dec
cld
cwtl
loopne
and
pusha
jbe
lahf
mov
scas
sbbb
sbb
shll
subl
movsb
subl
int3
sub
cltd
insl
call
add
ss
outsb
ror
ret
sub
adc
xchg
mov
pop
xor
add
cmp
xor
mov
xlat
push
add
mov
jmp
push
lock
dec
cltd
arpl
push
dec
jns
mov
fsubs
movsb
adc
fstps
jmp
push
push
jo
xchg
push
shrl
mov
push
loop
push
and
sbb
add
je
mov
test
push
lret
pushf
test
push
testl
sbb
dec
xor
fiadds
jp
or
or
xchg
add
cmp
bound
sbb
scas
or
shll
mov
pop
sub
adc
push
enter
jno
cmpb
adcl
sbb
push
lahf
or
outsb
ret
vmovmskps
or
lar
sub
push
mov
mov
xor
loopne
arpl
rcll
mov
fmuls
jno
ret
enter
jmp
adc
movl
enter
ffreep
inc
inc
in
jmp
dec
lds
dec
aaa
push
je
or
imul
cld
das
and
test
clc
lock
pushf
ret
lret
test
addl
jne
cltd
andl
sub
push
push
cmpsl
out
jne
test
push
psubsb
mov
popf
daa
push
xchg
insb
movsb
es
dec
arpl
push
rcrb
dec
push
pusha
dec
push
loopne
and
push
push
push
and
inc
push
stc
push
push
push
push
mov
gs
pop
addb
mov
inc
or
inc
inc
jle
sbb
adc
sbb
add
rclb
lea
add
mov
cwtl
adcl
daa
stos
aam
sub
mov
xchg
xchg
add
inc
ret
mov
mov
out
xlat
mov
mov
lcall
es
dec
loopne
or
sub
sbb
dec
loopne
mov
push
test
insb
add
xchg
andl
add
arpl
add
rolb
or
loope
xchg
adc
jae
pop
mov
aaa
pop
sbb
mov
ret
dec
add
jle
adc
pushf
outsb
ret
mov
cmp
mov
cmp
cmp
and
dec
mov
jae
ret
add
dec
jne
inc
mov
xor
sub
int
insl
sbb
shrb
pop
lock
xor
repz
jecxz
lcall
xchg
and
aas
add
jmp
sub
xor
jae
dec
je
xor
push
movsb
das
sub
xchg
mov
xchg
andl
and
xlat
out
xor
ja
inc
jo
push
xchg
adc
adc
inc
push
dec
fnstenv
cmp
inc
mov
ret
xor
mov
pusha
xor
ss
add
or
cmp
push
push
dec
push
or
cmp
in
mov
jecxz
mov
lea
dec
pop
cmp
jno
and
test
aaa
lret
mov
bt
stc
hlt
pop
addr16
mov
pop
outsb
sub
pop
cmp
insl
pop
stos
daa
outsb
int3
dec
insb
jo
add
adc
test
or
push
dec
incl
cmp
push
xchg
add
inc
mov
sub
add
aam
xor
sub
sbb
sti
add
or
add
cmp
dec
adc
sub
add
mov
xorb
mov
arpl
bsf
sbb
pop
shl
dec
aaa
inc
mov
push
shll
push
dec
pop
inc
xchg
sub
xor
sahf
jp
clc
sub
ror
fs
cwtl
sar
jnp
mov
add
and
insl
adc
pop
pop
mov
loopne
das
cwtl
inc
out
mov
pop
sbb
xchg
xor
add
inc
mov
mov
inc
arpl
push
sbb
sbb
insl
cmp
mov
or
out
xchg
andb
adc
cmp
test
jo
dec
fldcw
push
dec
push
jb
fistl
lods
addb
dec
les
pop
or
rorb
pop
loop
mov
push
add
and
outsb
sbb
mov
mov
xchg
jo
icebp
test
xchg
jns
les
es
mull
in
mov
jno
icebp
dec
push
notl
xor
icebp
notb
sbb
and
push
imul
in
ljmp
inc
insl
add
das
dec
jmp
inc
movsb
mov
pop
jge
push
cli
movsb
push
mov
shll
add
mov
pop
and
dec
xor
cmp
and
jmp
movsb
adc
push
aad
xchg
or
sub
push
jl
lds
sub
xchg
inc
dec
push
and
sarb
outsb
hlt
mov
test
mov
push
mov
mov
mov
idivb
push
sbb
xor
inc
lock
xlat
xchg
mov
imul
faddp
jg
fwait
pusha
inc
pop
or
shll
dec
mov
rorb
test
xor
in
scas
lds
aad
insb
icebp
sbb
or
call
jge
mov
push
push
outsb
xchg
ljmp
cmpsb
xor
sbb
sub
xchg
mov
mov
mov
repnz
movb
xchg
addl
sbb
ljmp
sub
cmp
pusha
and
push
insb
mov
jl
jo
sub
jmp
and
out
rcrl
xor
fidivs
enter
jo
fwait
aad
clc
jp
or
jns
push
push
repz
jo
iret
sahf
stc
popf
mov
fisubs
sbb
je
int3
loope
adcb
or
insb
push
jns
dec
mov
and
ret
xchg
inc
jno
jp
aas
push
mov
mov
push
pop
push
and
pop
adc
adc
bnd
rcrb
add
or
aas
shrb
int
lret
rol
mov
xchg
inc
movl
pop
popa
push
and
xchg
push
bound
mov
push
xor
push
out
adc
sahf
lret
mov
fwait
shlb
mov
loope
sub
rcrl
ret
sub
shlb
fwait
popf
mov
xchg
push
sbb
rcll
mov
add
in
xchg
mov
mov
arpl
adc
mov
push
sub
jno
mov
and
enter
mov
sahf
arpl
iret
add
fwait
mov
jecxz
or
adc
xchg
movsb
cmp
push
xchg
sub
fsub
xchg
in
int
mov
int3
or
dec
jne
xchg
mov
dec
add
pop
and
lea
mov
push
inc
fcompl
imul
or
imul
add
out
mov
mov
dec
jne
xchg
neg
jp
test
sub
xchg
movsl
shl
jp
push
lahf
and
insl
repnz
das
push
movsb
imul
push
aas
ljmp
add
lds
popf
jle
push
mov
outsl
call
sub
fs
dec
cmp
adc
mov
imul
push
mov
inc
push
jbe
jo
mov
xchg
nop
inc
mov
inc
jb
mov
fsubl
adc
movsl
sbb
cs
pushf
aam
and
mov
inc
les
push
add
or
add
sub
and
jbe
adc
pushf
dec
inc
insb
dec
je
dec
jne
pop
imul
cltd
pop
insl
adc
xor
and
inc
add
xor
lods
and
sub
xor
dec
or
dec
or
or
mov
cmp
inc
jbe
or
add
decl
scas
jno
xor
aad
add
push
inc
mov
mov
fistpll
ljmp
call
xor
cmp
aaa
or
dec
imul
jp
jle
into
mov
sbb
out
or
cwtl
jo
or
and
mov
scas
push
cwtl
dec
pop
jbe
inc
inc
sbb
loopne
jecxz
nop
ds
mov
loopne
jge
cmp
aam
cmpb
popf
sbb
loopne
mov
or
sub
ret
shlb
sbb
mov
or
test
jno
mov
and
and
std
cwtl
andb
fdivrs
icebp
xor
pop
add
push
bound
jge
xchg
cwtl
outsb
inc
adc
mov
mov
imul
adc
dec
add
es
aas
inc
sbb
mov
nop
xchg
sbb
mov
ja
test
fisubl
push
je
hlt
xchg
cmc
or
ficompl
adc
or
imul
mov
cmp
add
sbb
dec
popa
rcrl
push
xchg
test
jmp
pop
pop
sbb
hlt
xlat
sbb
ljmp
push
inc
outsb
inc
fldt
cmp
adcl
add
psraw
sbb
adc
nop
lcall
das
xchg
cmpsl
stc
mov
add
pop
cmp
push
xchg
push
cmpsb
dec
jecxz
dec
push
je
or
mov
xchg
mov
cwtl
pop
test
mov
mov
rclb
inc
add
xor
jl
cmp
lds
add
add
xor
or
clc
int
add
sub
inc
dec
mov
into
sub
fistl
aas
push
mov
inc
fcmovbe
and
in
movntq
out
inc
adc
mov
jnp
add
int
movsb
add
push
ja
push
and
lea
xchg
push
lds
test
or
cmpsl
xor
xchg
push
cmp
mov
movsb
jae
cmp
aas
jno
adc
test
or
jne
daa
dec
das
mov
stc
add
add
test
or
test
sbb
gs
sub
xor
out
mov
sub
push
push
mov
lds
or
or
inc
call
jle
lods
cmpsb
xchg
sbb
push
inc
sub
mov
push
test
cli
ja
jl
and
lods
rcl
stos
bound
cmp
mov
popa
xor
jns
push
jne
nop
fwait
imul
xor
push
push
shlb
icebp
sub
cwtl
addr16
sub
xchg
xor
jno
xor
ret
mov
outsb
and
xor
dec
sbb
test
cmpsl
cld
lds
push
loope
jmp
or
mov
and
push
cwtl
test
xor
or
cmp
rorb
lea
subb
int3
xlat
push
enter
into
adc
pop
out
mov
cmpsb
ja
incl
subl
inc
adc
cld
add
adc
pop
lahf
add
jle
xor
xlat
xchg
ret
add
outsb
inc
out
dec
mov
into
inc
sbb
inc
and
imul
or
and
mov
arpl
cld
popf
cmp
adc
insl
jne
dec
scas
pushf
pop
sub
mov
bound
shrb
leave
mov
movsl
daa
pop
nop
hlt
dec
adc
enter
es
add
jl
sbb
stos
rclb
enter
mov
adc
loopne
dec
stos
bound
dec
inc
sar
in
lcall
add
int3
or
fwait
inc
xor
push
xchg
lret
and
sbb
stos
jne
mov
in
mov
cmp
cmp
inc
or
mov
sbb
xchg
add
test
jno
adc
imul
mov
mov
jmp
shlb
std
outsl
pop
add
xor
sbb
xor
in
mov
inc
je
fadd
sbbb
mov
sbb
xor
rcrl
mov
add
nop
sub
std
imul
out
sub
or
sub
mov
add
mov
and
or
inc
mov
pop
jbe
rclb
ret
push
mov
or
xlat
xchg
pusha
bound
and
and
mov
movb
lahf
xor
fidivrs
dec
clc
mov
dec
dec
push
sbb
loopne
mov
fisubrs
clc
and
bound
loop
in
push
sub
fs
pop
pop
add
je
add
push
rcll
adc
mov
adcl
sbb
sti
push
sbbl
test
dec
jp
lret
mov
xchg
push
push
cs
push
adc
loope
leave
push
inc
dec
adc
lock
sub
cld
shlb
imul
ljmp
adc
ja
or
rclb
nop
dec
mov
sti
jo
push
push
cmp
mov
sub
jl
out
and
cltd
or
push
and
mov
adc
xorb
cmp
jbe
jns
dec
dec
xor
push
mov
mov
adc
mov
mov
insb
mov
or
dec
je
push
dec
mov
rorb
int
cmp
iret
dec
inc
jo
aaa
add
not
xchg
lock
push
push
inc
xchg
mov
mov
mov
inc
bound
clc
shlb
mov
cs
test
jp
or
imul
cmpsb
pop
sbb
push
mov
pop
mov
mov
stc
pop
rolb
dec
dec
cld
daa
add
gs
les
push
add
jecxz
xchg
insb
pop
in
in
xor
mov
adc
movsl
rcll
and
imul
ja
jl
loop
mov
push
push
pop
or
mov
nop
sbb
repz
loop
jl
fs
mov
or
aas
clc
push
cmp
push
dec
and
les
sub
mov
or
outsl
or
lret
xor
xor
or
or
jge
fdivrs
lret
jb
pop
mov
cmp
mov
jbe
je
int3
fstl
je
cmp
inc
mov
mov
test
sahf
xor
fsubs
cld
add
jb
ficomps
jp
or
jmp
ficompl
loope
cld
push
jge
mov
inc
mov
popa
mov
adc
and
insb
fmull
push
scas
jae
scas
jbe
cs
es
xor
ss
xchg
mov
sarl
mov
jmp
pop
jmp
lcall
idivb
push
in
imul
jo
mov
xor
cmp
add
push
sub
ret
aas
push
jnp
nop
jge
ds
sub
rcrl
imul
jo
inc
decl
or
dec
mov
jmp
into
mov
leave
jp
or
inc
mov
add
imul
icebp
inc
js
push
push
out
and
cltd
mov
cmp
sub
jge
test
mov
or
push
call
pop
shufps
cmp
ljmp
lds
add
test
xor
pop
roll
out
pop
rclb
push
cmp
push
sbb
dec
in
adc
call
lret
inc
dec
push
cmpsb
mov
jmp
jnp
data16
mov
inc
pop
int3
push
mov
xchg
push
adc
or
cmp
and
adc
sub
cmp
pop
or
pop
add
cmpsb
xor
push
push
and
cs
sbb
dec
adc
aas
mov
ds
add
cmp
and
xor
out
adc
lods
xchg
pop
rclb
jmp
cmpl
jmp
sbb
popf
push
adc
hlt
add
lea
clc
lods
add
cmp
jne
icebp
rcrl
jbe
push
add
push
insb
inc
jns
sarb
push
inc
das
xchg
mov
mov
test
fnstcw
sbb
dec
mov
mov
sbb
fwait
test
jge
sbb
cwtl
sbb
sbb
movb
sbb
lcall
push
push
cmp
and
mov
aaa
xlat
add
jp
in
fldl
pushw
in
ss
add
daa
filds
orb
and
popf
scas
pusha
or
adc
push
loope
es
lock
xchg
push
daa
lahf
adc
mov
je
cmp
lret
in
jo
out
fnstsw
je
add
dec
jne
jp
xor
mov
mov
cmpsl
dec
fistl
pop
jp
jle
push
or
clc
incl
mov
nop
cmpb
jne
sub
sub
je
xor
out
and
daa
arpl
mov
pop
pusha
fsubs
jmp
adc
xchg
pop
cwtl
out
adc
fimuls
ret
icebp
das
fsts
and
insl
or
and
pop
adc
arpl
jecxz
dec
xchg
aaa
dec
fs
xchg
adc
sbb
sarb
aam
or
mov
gs
xchg
or
pop
xor
xchg
cmp
test
clc
pop
mov
mov
dec
mov
ljmp
inc
pop
mov
pop
sub
dec
cmp
sub
shlb
insl
add
or
mov
push
scas
mov
pop
adc
cltd
mov
es
push
push
xor
shlb
push
aam
js
adc
cmpsb
andb
imulb
xchg
mov
int3
and
mov
xchg
loope
pop
scas
test
sbb
jnp
test
sbb
fmul
jb
stc
shr
sub
lods
adc
adc
xchg
or
hlt
iret
mov
cmpb
jne
inc
ficompl
dec
inc
push
mov
popa
add
and
push
jge
jnp
push
movzwl
and
inc
or
sub
test
test
or
push
add
sub
inc
dec
test
and
cmp
nop
mov
push
enter
adcb
xor
push
pop
repnz
cmp
add
mov
push
aas
or
movsl
xor
out
loopne
xchg
mov
xor
push
pop
lahf
cmp
outsl
pushf
je
jns
pop
cmp
push
andb
push
sahf
xchg
lods
test
or
mov
inc
mov
shr
out
stc
cmc
loop
and
pusha
push
mov
push
out
popa
loop
scas
fs
adc
add
rolb
aad
xchg
lret
aad
push
mov
js
cmp
sbb
insb
daa
movsb
rorl
jne
das
cmp
add
jb
add
push
pusha
and
lret
or
movsl
xor
inc
int3
repz
jnp
xchg
push
inc
mov
in
cs
int
add
inc
cltd
push
std
repnz
pop
pop
xor
sbb
sbb
cltd
movsb
jns
pop
inc
les
sbb
push
push
pushf
dec
xor
and
sbb
scas
push
pop
push
cli
sub
jmp
inc
jle
repnz
mov
into
sbb
dec
inc
out
adc
sbb
adc
sbb
ja
push
push
cmp
pop
dec
outsl
mov
push
or
pop
sbb
hlt
push
cmpsb
xor
jae
inc
inc
xor
mov
enter
dec
adc
mov
fidivl
xor
idivb
mov
cmp
pop
mov
aaa
addl
dec
and
lret
mov
stos
fdivl
fadds
lret
mov
call
pop
cmp
in
clc
inc
or
leave
hlt
inc
inc
out
repnz
movsb
cmp
je
push
xchg
sub
pop
add
pop
iret
in
jl
add
fs
jae
cs
repnz
sahf
jo
je
js
jl
ret
lret
sub
jae
pop
das
test
iret
sbb
add
orb
scas
into
mov
fs
cmpsl
xchg
sub
call
sub
mov
ret
cmp
push
sub
out
add
push
stos
xchg
cmp
push
ret
push
mov
pop
or
rcll
pop
sub
subl
nop
scas
rol
jb
insl
aam
lock
mov
divps
idivl
test
jmp
addr16
sbb
repz
test
cmpsl
and
out
or
cld
sti
je
cmp
push
xor
xor
lcall
push
int3
cmp
xchg
mov
adc
mov
pop
jmp
xchg
push
sub
inc
sbb
seto
push
push
xor
add
lea
sbb
popf
dec
ss
arpl
inc
add
jns
jg
shlb
adc
push
push
lea
icebp
or
lods
and
cwtl
aad
enter
xchg
pusha
xor
lahf
dec
das
in
test
add
and
xor
test
js
xor
jae
sbb
ret
rcrl
mov
cmp
out
mov
out
push
add
addr16
stos
mov
mov
inc
pop
push
mov
push
xchg
push
push
inc
insb
add
or
mov
sbb
push
inc
insb
stos
pop
inc
jb
test
loope
push
nop
and
xor
dec
pop
enter
sbb
dec
nop
jmp
xchg
pusha
sub
inc
jb
add
sarl
push
pop
or
in
cmp
jl
push
inc
fisubrs
enter
push
sbb
arpl
dec
in
mov
sbb
pushf
mov
pop
cmc
mov
add
ret
adc
out
cmpsl
mov
mov
pop
push
cmp
repz
jl
rolb
fsubs
sub
or
inc
mov
xchg
jbe
sub
xor
pusha
sti
mov
das
or
aaa
insb
push
mov
mov
fld
sub
add
insb
rol
mov
shrd
mov
cmp
push
sbb
pop
or
xchg
push
push
fmuls
sub
movsb
enter
xchg
jecxz
and
dec
push
push
dec
and
inc
es
or
mov
sbb
or
xor
sbb
adc
out
push
mov
je
add
inc
arpl
adc
add
xchg
in
nop
testb
enter
js
dec
stos
add
inc
test
cmp
jg
rcll
push
call
dec
clc
inc
push
jle
dec
or
inc
andl
sub
push
push
les
mov
jno
ss
jo
xor
sbb
push
and
lahf
xorb
or
adcb
xchg
sub
test
add
das
cs
inc
test
push
in
jns
push
pop
add
test
add
or
xor
leave
push
add
mov
imul
sub
test
push
mov
jmp
cmpsl
mov
push
clc
or
xor
push
and
adc
or
or
sub
dec
dec
nop
and
insl
sub
mov
mov
pop
je
cmp
sarl
pushf
out
mov
ljmp
mov
shlb
fildl
cmpsl
mov
dec
mov
cmc
test
mov
push
push
push
gs
mov
jns
jecxz
mov
sub
xor
dec
push
stos
add
mov
shl
and
mov
fistps
dec
stos
add
lock
push
insb
mov
aam
dec
cmp
out
dec
lods
cmp
and
je
push
and
push
sub
rclb
pop
lcall
jno
mov
pmaddwd
ds
mov
int3
cmp
nop
dec
inc
rcrb
popa
mov
jmp
out
aam
imul
aam
shlb
icebp
mov
js
dec
inc
movsb
leave
mov
testl
cltd
push
repnz
ss
dec
push
jl
aaa
and
repz
lret
and
cmp
inc
adc
cs
xor
sub
push
icebp
push
jb
xor
adc
repnz
test
add
je
in
and
les
ret
push
inc
stc
pop
sbb
cmp
mov
push
ljmp
je
in
xchg
sbbl
mov
arpl
sbb
cltd
and
jbe
in
sbb
inc
test
jno
cpuid
dec
push
out
mov
sahf
fcoms
push
int3
push
push
push
arpl
mov
adc
dec
sbb
cmp
jb
push
push
sbb
dec
mov
adc
pop
mov
mov
or
or
sub
or
test
or
add
outsl
push
rcrl
inc
outsb
out
in
push
inc
int
dec
add
popa
push
jmp
dec
push
inc
cmp
lret
add
ret
xor
arpl
inc
imul
push
xor
fldl
xorl
lret
sbb
pop
pop
enter
inc
test
sbb
movsb
pop
xor
cwtl
in
xor
stc
and
es
push
fisttpll
add
nop
fbstp
fwait
add
jnp
test
dec
popa
cld
push
nop
or
enter
sub
hlt
push
adc
jb
dec
push
stc
add
filds
xchg
inc
jb
lds
fs
push
sbb
and
aam
int3
cmp
xchg
out
sub
les
loopne
mov
push
sbb
mov
mov
inc
or
pop
out
sbb
adc
or
inc
mov
push
dec
dec
xchg
sbb
jne
push
jge
add
fldl
inc
push
inc
scas
add
es
nop
sub
xchg
or
daa
and
rcll
sub
xor
add
daa
push
add
sub
and
or
imul
aam
mov
sbb
sbb
xchg
jae
push
push
outsl
xor
push
mov
movsb
xor
xor
xor
adc
int3
add
jbe
orl
xor
sub
dec
push
and
or
mov
or
sahf
jo
rcl
lea
mov
outsb
inc
and
std
and
das
insb
push
jmp
cmp
jns
push
add
mov
push
xchg
mov
push
and
push
push
movsb
push
dec
push
sbb
ret
push
push
push
sub
imul
subl
inc
mov
mov
mov
and
loopne
adc
fldenv
xchg
sbb
and
sbb
adc
dec
push
xor
push
js
int
faddl
adc
and
pop
shufps
cmp
or
dec
push
mulb
add
xor
push
movl
mov
mov
outsl
les
or
stos
mov
sbb
inc
test
loop
xor
xchg
mov
pop
shlb
dec
shll
push
sub
or
in
in
push
mov
shrl
dec
xchg
aam
xchg
inc
push
xchg
jbe
pop
push
pop
mov
jmp
cmpsb
or
push
pop
jnp
sub
xchg
movsl
cmpsl
subb
je
sbb
or
add
scas
jmp
push
insl
test
xchg
add
dec
xchg
jle
inc
adc
fwait
sub
xchg
call
xchg
or
cltd
adc
or
mov
and
inc
or
add
mov
push
adc
pop
jno
mov
popa
or
je
xchg
dec
mov
push
or
mov
lret
adc
xor
lcall
xor
aam
cmc
push
mov
test
inc
push
fdivs
jne
and
scas
dec
dec
cmpsl
pop
movntps
or
xchg
add
lahf
xchg
ficoms
gs
sbb
sub
out
adc
jp
mov
fs
pop
cmp
pop
mov
xor
mov
add
dec
xchg
rorb
push
pop
pop
das
pop
pop
pushw
adc
je
insb
jns
add
inc
cmpsl
imul
push
mov
cmpsl
mov
jns
cltd
das
push
push
or
or
adc
or
lods
dec
add
dec
dec
jmp
mov
inc
add
and
xchg
clc
das
sar
int3
icebp
sbb
or
icebp
sbb
daa
inc
and
test
adcb
dec
insb
in
push
ret
mov
mov
push
sub
in
adc
xor
loopne
add
pop
push
lahf
movsb
loopne
scas
pop
dec
in
pop
mov
or
rolb
js
pop
dec
fcmovnbe
or
adcb
and
adc
sbb
out
out
or
pop
cmp
aad
push
scas
adc
jo
test
stc
ds
cmpsl
lds
mov
jle
iret
or
xor
nop
pushf
je
xor
cmpsl
push
fmul
jp
mov
mov
or
push
repnz
add
pop
int3
mov
dec
and
xchg
nop
push
add
add
adc
test
lea
sbb
add
sbb
out
inc
nop
or
adc
movsb
and
es
loopne
out
popf
js
or
and
sbb
aas
rorl
or
in
jmp
push
insb
mov
sarb
cmp
jmp
push
icebp
jb
dec
xor
lret
and
cmp
jnp
orl
insb
mov
inc
and
nop
push
aas
ret
add
ret
mov
or
outsl
add
jecxz
jge
lea
mov
mov
adcl
movsl
inc
lods
mov
xchg
or
push
js
outsb
pop
sub
aad
xor
mov
sbb
test
sub
sbb
idivb
add
jge
jb
push
pop
add
pop
enter
xor
mov
add
sub
shlb
dec
sub
scas
and
stc
dec
and
adc
mov
dec
sbb
sub
mov
inc
inc
out
rolb
adc
imul
sub
add
adc
adc
shrl
push
xor
and
and
rorl
add
jbe
sub
xor
shll
xor
cmp
xor
sarl
cmp
inc
cmp
dec
sarl
add
pop
inc
int3
dec
shlb
aam
push
fcoms
imul
cmpsb
imul
cmpsb
imul
int3
cld
push
inc
sub
inc
imul
mov
or
aad
sbb
jne
cmp
pop
jb
and
push
test
hlt
add
lods
popa
jns
mov
inc
pop
sub
cmp
add
jb
cwtl
xor
sub
scas
and
push
mov
dec
push
cmpsb
sub
inc
or
xorb
and
sbb
ret
push
flds
pop
adc
filds
icebp
cmp
xchg
icebp
dec
adc
daa
hlt
sbb
and
adcl
push
inc
es
pusha
pusha
xchg
dec
xchg
lock
pop
push
xchg
test
inc
mov
dec
adc
rclb
or
jp
push
lds
bound
adc
outsl
popf
mov
add
dec
daa
ljmp
and
cmpb
rcrb
inc
cmp
mov
lcall
cmp
xor
cmpsl
jns
xor
cmp
push
sahf
cmpsb
cmp
dec
push
inc
repz
sub
sahf
out
dec
rcrb
pusha
fsubs
out
fsubrl
insb
in
imul
push
lock
gs
aam
mov
cld
mov
dec
imul
fs
cmp
dec
popa
rcll
fdivrl
cmp
or
ret
pop
fsubr
jno
mov
mov
mov
mov
xchg
push
fadds
pop
roll
push
sub
rcl
mov
and
cmpsl
cmp
jp
push
sub
lcall
inc
cmp
out
push
pop
and
mov
imul
je
roll
cltd
insb
push
jo
fwait
cmpsl
jne
add
jge
cs
jl
lea
push
dec
mov
fstl
jecxz
or
cmc
and
adc
xchg
test
addl
movsl
test
add
aam
xchg
xchg
add
and
xor
pop
leave
fcomps
leave
popf
sub
push
aas
ret
shll
leave
xchg
inc
push
inc
pop
and
test
leave
or
rcrb
mov
lea
cmpl
xor
dec
mov
mov
adc
lret
leave
ret
dec
jg
fs
aam
mov
xchg
loopne
push
addr16
add
sub
and
mov
push
mov
inc
adcb
dec
jmp
lock
inc
pop
push
add
push
inc
popa
add
pop
add
jns
orb
aam
xorl
insb
sbbl
daa
pop
add
jmp
inc
negl
jp
add
dec
jne
aas
jb
xchg
jg
mov
fcmovnb
sub
push
das
subb
fcmovnu
xor
push
call
adcl
fiaddl
adc
popa
pop
xorl
andb
mov
sub
pop
daa
addb
dec
inc
and
and
add
mov
dec
jne
xchg
adc
jnp
xchg
jmp
movsb
pusha
in
mov
fs
arpl
add
cli
and
adc
mov
add
dec
push
sub
inc
testb
sub
adc
push
add
mov
jns
mov
mov
addr16
aas
add
cmp
gs
popa
cmp
pop
xor
je
xor
ja
idivl
into
mov
lea
cli
lret
mov
fimuls
push
fidivl
dec
push
cmp
mov
clc
mov
jb
imul
jp
pop
cwtl
mov
movzbl
adc
cmp
inc
xor
and
dec
pop
push
sub
xchg
dec
push
es
mov
inc
adc
adc
or
cmpsl
cld
fwait
xchg
lods
adc
xchg
add
mov
sbb
loopne
inc
jecxz
mov
mov
cmp
push
nop
sbb
aas
orl
inc
xchg
xchg
mov
xlat
push
movsl
add
xor
in
inc
and
adc
leave
pop
addr16
testl
mov
xchg
or
pop
loopne
pop
je
es
flds
cmpsb
lcall
mov
arpl
lahf
data16
dec
cwtl
dec
in
xor
dec
ret
jp
je
js
clc
dec
fimull
pop
rorl
mov
jo
or
adc
inc
addr16
jl
adc
inc
je
sbb
jne
lea
xchg
pop
mov
mov
and
mov
scas
push
rorb
inc
pop
addb
xlat
add
cmpsl
adc
jp
adc
pushf
sbb
scas
and
sbb
xor
scas
movsb
cltd
xlat
and
lods
dec
sub
pop
inc
repnz
add
nop
or
add
cmpsl
lret
std
adc
sbb
mov
fwait
mov
xchg
pop
adc
imul
pop
pop
aam
fs
push
jge
clc
je
sbb
push
inc
mov
sub
cld
and
inc
fcomps
cmp
pop
adc
inc
cmp
inc
cmpsl
test
dec
aaa
dec
pop
xchg
pop
adc
add
sub
arpl
fcomi
sarb
or
fstps
add
adc
sbb
mov
mov
lret
or
and
nop
cmpsb
jb
or
and
addl
add
cmpb
push
lds
mov
pusha
jp
xor
cmp
xchg
nop
jmp
insb
cmp
out
pusha
scas
jno
or
repz
test
dec
jle
jmp
add
or
test
fldt
mov
mov
mov
sbb
movsl
dec
adc
aaa
mov
ret
cmp
xor
xor
faddl
mov
scas
cmp
sub
and
mov
and
push
push
fwait
mov
dec
jmp
cmp
mov
imul
push
loope
or
sub
aaa
icebp
nop
xor
ljmp
pop
dec
pop
pusha
imul
js
rorl
sub
inc
outsb
push
fimuls
sbb
cmp
xor
or
or
mov
pop
pop
mov
cmp
shlb
dec
mov
xchg
push
adcb
adc
adc
cmp
pop
xor
jb
cmp
sub
nop
pop
and
xor
and
cmp
add
rcrb
inc
sub
inc
mov
and
pop
xor
and
incb
dec
jecxz
arpl
dec
cmp
and
inc
jecxz
add
push
inc
sub
sub
les
int
cmpsl
or
lock
inc
scas
cwtl
nop
xchg
mov
push
push
jae
shll
push
mov
cmp
or
sbb
and
sub
mov
jo
push
jmp
sbb
sbb
adc
push
pop
and
cwtl
sub
leave
cmpsl
sbb
dec
add
sub
insl
test
xor
inc
lahf
shll
or
ficoml
push
cmp
mov
dec
repz
xor
cltd
xor
push
cltd
push
jno
test
lahf
aas
fwait
add
cmp
mov
sbb
and
push
push
imul
bound
icebp
or
fdivl
xchg
cmc
xor
pop
stos
push
js
fsubl
fcompl
stos
jns
pop
xchg
jle
cmpsl
lea
daa
fbld
mov
dec
mov
ret
add
mov
shl
jg
test
inc
push
ret
push
xchg
push
or
mov
mov
inc
pop
cwtl
push
sbb
lret
je
dec
push
dec
int3
mov
mov
dec
inc
xor
iret
xchg
adc
jo
ret
push
lret
shll
cmp
js
aam
les
add
mov
sbb
sub
inc
jge
dec
xor
push
xchg
inc
jp
mov
push
dec
ja
add
jecxz
or
dec
loop
push
ja
iret
ret
std
add
iret
cmp
mov
cld
mov
cmp
xor
pop
test
js
mov
cltd
cmpl
pop
pop
lods
xor
sbb
repz
je
decl
shrl
mov
xor
push
and
sub
in
lea
pop
push
push
jle
pusha
and
push
push
leave
and
sbb
jl
popa
xchg
push
repnz
inc
add
mov
dec
clc
xchg
sub
xor
lods
bound
pop
scas
enter
stos
sahf
mov
adc
and
push
test
mov
xchg
jo
sbb
push
jl
cmp
andl
or
arpl
adc
enter
bound
xor
popa
bound
pop
orl
sbb
dec
fldenv
xor
pop
dec
pop
pop
add
sbb
sub
in
movsb
rol
xor
or
xor
cltd
xor
or
xor
mov
call
and
cmp
xchg
dec
adc
xchg
inc
add
xor
sbb
cmp
cmp
inc
imul
insl
pop
pop
push
movsl
ss
pop
pop
adc
dec
imul
fst
shrb
and
add
xchg
add
pop
pop
push
cmp
sub
pop
sub
outsb
enter
shlb
add
mov
or
fmuls
dec
aaa
xor
mov
or
pop
sub
pop
add
dec
lahf
nop
call
or
imul
mov
push
dec
inc
mov
addb
mov
in
rorl
test
sub
nop
cmp
jp
cmp
int
push
push
inc
adc
sub
pop
cmp
mov
sbb
and
rolb
adc
add
mov
or
xor
test
sbb
push
mov
fs
loope
mov
pop
cmp
add
hlt
in
or
add
nop
imul
pop
ds
leave
stc
or
out
push
xor
cli
sub
cmpsb
fs
or
inc
cmpsb
fs
mov
push
in
int
sti
int3
push
int3
push
dec
ret
dec
mov
cld
pop
cmp
test
sub
jns
movsb
dec
inc
cmp
lret
adc
sub
addr16
sub
and
pmulhw
and
cmp
movsb
or
add
dec
mov
aam
out
cmpsb
push
dec
jnp
ds
cmp
pop
les
sub
nop
nop
dec
pop
sub
mov
call
leave
xcrypt-ofb
cmpsl
lods
xor
int
sbb
pop
add
dec
mov
pop
enter
and
pop
pop
mov
and
xor
jl
leave
nop
dec
pop
pop
insb
dec
xor
fs
xchg
or
xchg
push
jae
push
jo
jmp
bswap
xchg
jl
inc
insb
insb
jmp
xchg
out
xor
je
dec
cmp
je
adc
push
or
les
xor
adc
sti
repnz
enter
push
or
sub
insb
jecxz
jg
fs
jne
adcl
ja
shll
add
ss
mov
xor
and
lea
mov
shlb
mov
mov
cmp
add
insl
test
xorb
test
xor
nop
inc
cmp
repnz
add
or
popa
and
fcoms
pop
fbstp
popf
mov
pop
jb
lds
sbb
lea
jns
xacquire
pop
mov
inc
pop
push
push
movsb
lds
and
jb
pop
add
jns
lahf
rcrb
cmp
js
sti
and
inc
sar
lea
js
and
fistl
and
in
push
shlb
push
cmp
xor
and
ja
xor
addr16
pop
mov
cmp
xchg
and
add
adc
jne
add
dec
dec
or
cmp
and
mov
pusha
imul
or
jg
jnp
mov
mov
mov
cmp
add
ss
fnstsw
mov
xchg
loopne
push
pop
adc
mov
loope
syscall
add
pop
lock
dec
fwait
inc
dec
cmp
nop
add
test
jecxz
aas
dec
lock
and
mov
push
ljmp
inc
dec
sub
dec
loope
mov
dec
jbe
je
cwtl
inc
and
xchg
cmp
loopne
popa
out
pop
push
fnsave
arpl
fdivs
sub
inc
jno
enter
xor
push
repz
into
je
loope
jg
les
ds
sbb
sub
xchg
sbb
gs
add
push
jp
dec
and
add
pop
out
jns
dec
or
icebp
or
mov
mov
push
inc
cmp
sub
rcr
or
ss
pop
aad
push
andl
mov
or
add
bound
sub
inc
pop
orl
lock
pop
enter
pusha
jmp
xlat
add
insb
pop
push
dec
mov
jecxz
imul
xchg
jmp
add
adc
rorl
aas
mov
sti
add
cmp
rclb
cmp
xor
adc
inc
aaa
or
jb
insb
or
sbb
and
and
mulb
mov
sbb
in
test
rclb
pop
pop
push
push
mov
and
mov
imul
jl
inc
push
or
push
add
jp
pop
add
hlt
or
xor
dec
push
ret
xor
xchg
aaa
mov
lret
add
add
cltd
xor
stc
xor
mov
and
push
push
dec
xor
adc
add
xor
add
js
dec
mov
xchg
jg
lcall
sub
fcoms
add
push
test
adc
jne
adc
push
mov
adc
outsl
sbb
sbb
push
packssdw
leave
adc
push
and
or
push
push
popa
bound
loop
pop
scas
out
mov
js
push
cmp
adc
mov
push
test
add
or
add
pop
xor
leave
push
dec
loopne
mov
insl
add
or
adc
mov
fildll
inc
xor
push
int
cmp
in
sub
fs
cmc
sub
push
and
dec
hlt
xor
pop
xchg
or
inc
dec
leave
fiaddl
mov
pcmpgtd
movsb
rclb
mov
fisttpll
nop
xchg
cwtl
pushf
bound
sbb
mov
pop
xor
adcl
cmp
add
test
cmp
pushf
cs
call
adc
sbb
ret
movsl
jg
push
xor
int
fsubrs
loopne
xchg
and
inc
xor
inc
adc
mov
inc
cmp
push
cmp
rclb
jnp
or
andb
fadds
gs
fs
xor
clc
dec
cmpb
push
or
outsb
add
add
addl
mov
outsb
inc
push
pop
adc
xchg
or
out
sarb
add
nop
and
rorb
jns
sarl
cltd
push
jmp
push
lock
push
ficoml
loope
aam
mov
shl
push
xor
out
dec
mov
sbb
cmp
rorb
adc
sahf
xlat
lock
push
dec
ja
and
pop
push
push
mov
ss
imul
add
enter
ja
fldenv
adc
jo
nop
push
mov
pop
cmp
add
ds
xor
xor
int3
loopne
dec
adc
loopne
pop
sbb
xor
and
and
nop
or
and
adc
in
adc
rcrl
leave
outsb
push
mov
rcrb
pop
pop
inc
loope
and
and
add
and
in
and
inc
hlt
and
mov
cmovne
mov
cmp
nop
sub
call
test
mov
andl
test
dec
incl
cli
out
inc
push
xor
jno
add
adc
or
jl
dec
mov
outsl
cmp
push
pop
fs
push
jp
sub
je,pn
ljmp
sub
sub
je
cmp
add
pop
and
inc
add
and
in
adc
fiaddl
or
jns
setp
out
hlt
or
sub
sbb
arpl
pop
push
sub
mov
or
je
add
out
jbe
negb
bound
rorb
std
mov
mov
dec
mov
jge
test
out
ret
jmp
leave
push
mov
fistpll
inc
mov
and
jge
addl
inc
loope
push
mov
add
jg
ret
sbb
int
call
mov
cmpsb
or
xor
dec
rcr
xor
inc
fs
push
jo
mov
or
add
add
fildll
jo,pt
or
push
cmp
adc
and
and
or
pop
inc
pushf
and
lret
or
hlt
bound
xchg
insb
xor
gs
xchg
test
ja
les
push
xor
sbb
xchg
sub
cmovbe
add
sub
lahf
mull
arpl
or
xor
fisttps
cmp
jne
fs
add
mov
pop
js
stos
fcoml
push
fwait
dec
mov
cmc
sub
dec
mov
ss
cld
or
js
test
inc
add
mov
imul
cmp
scas
imul
and
xor
adc
inc
adcb
adcl
adc
cmp
rolb
pop
jecxz
jb
push
xchg
jb
adc
dec
aaa
stos
leave
push
adc
sub
rolb
xor
xor
sub
sbb
add
sbb
sbb
mov
sahf
sbbb
in
adc
inc
add
insl
lret
fcmovnb
jo
sub
or
jne
and
lds
adc
scas
xor
adc
xor
adc
cmc
clc
in
sbb
fs
mov
cmp
or
lock
jg
jl
xchg
pop
dec
xor
test
push
or
insl
pop
jae
xor
punpcklbw
subl
adc
sub
shr
mov
leave
xchg
dec
leave
cmp
and
int3
test
ss
jl
mov
jne
sti
cmp
dec
imul
lcall
dec
xchg
jns
adc
pop
pop
dec
xchg
cmp
fiaddl
adc
pop
mov
or
add
pop
cmp
insl
mov
or
popa
pop
insl
and
mov
or
jbe
pop
es
ja
mov
jnp
fs
fstpt
sarl
push
xor
inc
xor
xor
cltd
jbe
xor
pusha
xor
jae
cmp
pop
cmp
andl
push
pop
jge
mov
inc
pop
arpl
mov
xchg
sbb
and
dec
lcall
je
or
imul
inc
inc
pop
inc
sbb
stos
arpl
sbb
mov
push
lds
lret
aam
add
sub
push
pop
cmp
push
jmp
aas
xor
shll
lahf
rcrb
jl
jmp
rol
cmp
push
clc
mov
mov
adc
xlat
les
mov
mov
lock
rclb
ja,pn
xor
cmp
gs
nop
xchg
add
mov
adc
movsb
adc
cmp
push
or
push
rclb
es
popa
sbb
out
negb
add
xchg
and
xor
jb
pop
or
adc
dec
cld
sbbl
outsb
ret
adc
repnz
in
or
cmp
push
mov
int
dec
push
jmp
leave
imul
and
push
and
and
jb
pop
hlt
sbb
adc
sarl
les
add
or
mov
dec
lahf
lret
call
adc
jmp
cmp
push
in
sub
inc
in
sub
mov
imul
pop
xor
push
adc
loop
notl
jbe
pushf
fldenv
inc
push
rol
push
mov
push
push
iret
and
cmp
insb
ja
sbb
and
dec
sbb
sub
xor
cmp
add
fwait
popa
popf
pop
inc
mov
mov
dec
pop
pop
leave
cmp
and
push
pop
pop
xchg
outsb
mov
inc
rcrb
or
jg
add
movsl
jecxz
xor
adc
pop
icebp
ret
aad
xchg
sbb
and
bound
or
jg
aas
xchg
adc
adc
push
movsbl
lea
aad
cli
dec
ja
inc
mov
sbb
add
aam
or
fadds
clc
out
adc
sahf
add
cltd
mov
jl
inc
inc
xchg
fldenv
push
cli
cmc
jbe
fucomi
pop
or
pop
add
movsl
mov
add
add
adc
std
sbb
inc
jle
loope
das
fcoms
adc
adc
add
xor
ja
negb
lds
popf
add
and
cs
loopne
xchg
rolb
imul
add
or
adc
dec
add
cli
scas
pop
iret
repz
es
sahf
lret
into
clc
pop
add
mov
inc
sub
adcl
testl
sbb
icebp
movsl
push
lret
js
mov
xlat
add
rcll
lods
outsl
lea
imul
add
or
cmp
mov
andb
add
push
fs
pop
push
dec
cmpsb
fs
or
es
xchg
inc
or
sub
xchg
dec
cmpsb
sub
cltd
push
adc
inc
rclb
push
sbb
inc
pop
dec
imul
xor
pop
mov
sub
pop
notl
pusha
fbstp
push
mov
push
mov
mov
pop
xchg
lcall
das
enter
adc
lods
adc
fwait
push
jecxz
push
push
xor
ja
arpl
lods
orl
imul
mov
fcomps
mov
loope
inc
mov
sbb
aam
add
add
je
or
and
pop
and
pop
or
xchg
lcall
popf
sbb
ja
and
cmpl
jmp
sbb
or
mov
inc
mov
add
push
mov
jo
lods
test
dec
sub
add
shlb
add
or
mov
inc
dec
push
pusha
xor
dec
loopne
sbb
clc
xchg
dec
inc
push
sub
push
ja
cltd
and
fwait
add
sub
cmp
push
inc
mull
xor
scas
aam
mulb
xchg
dec
lods
sbb
inc
mov
popa
or
push
ficompl
sbb
insl
sub
push
pop
insb
jmp
sub
mov
add
adc
push
clc
jecxz
mov
sub
std
mov
add
dec
push
test
lret
cmpsl
imull
leave
inc
inc
pop
jnp
andl
stos
and
jge
movsl
and
add
imul
movl
inc
cmpsb
lock
scas
hlt
stc
xchg
dec
add
push
or
sub
test
test
jo
push
push
xor
popa
shlb
mov
dec
aaa
add
pop
cmpl
imull
xchg
outsl
inc
mov
mov
adc
or
xchg
insl
push
adc
jo
cmp
movsl
dec
push
xchg
lods
jbe
cmovb
or
jmp
dec
sti
push
xchg
xchg
sbb
divl
outsb
mov
push
inc
cltd
popa
mov
pop
dec
dec
sub
es
pop
and
clc
inc
xchg
loopne
dec
sarb
add
lahf
dec
aam
mov
call
xor
aas
jmp
dec
pop
test
add
dec
push
rorl
add
or
ds
test
std
andb
cli
xor
push
jp,pn
mov
push
sbb
in
or
inc
dec
push
mov
mov
dec
add
adc
sub
lods
or
pop
ja
ret
jae
cmp
adc
pop
adc
pushf
cmp
ret
dec
mov
nop
loop
test
lea
or
sbb
add
aaa
xchg
ret
pop
jge
inc
das
ret
repz
add
test
push
inc
lea
add
pop
xchg
sub
fcomps
repnz
dec
pushf
dec
movsb
dec
aad
insb
ss
sub
cmp
dec
mov
inc
sbb
dec
shrb
adc
das
cmp
rcll
inc
sbb
nop
push
test
and
inc
cltd
push
popf
adc
push
sbb
xlat
call
testb
shlb
ret
add
stc
lock
and
mov
arpl
leave
mov
mov
push
rcll
fidivl
xor
enter
sub
je
xorl
nop
or
push
push
mov
fnsave
dec
or
push
mov
push
and
lret
jecxz
addr16
sub
sub
and
popaw
add
ja
jne
adc
sbb
out
addl
adc
or
xchg
ret
push
xchg
or
fsubrs
je
sub
scas
out
into
xor
insb
xor
or
lock
adc
imul
ret
scas
mov
ljmp
shlb
je
inc
stos
dec
push
inc
mov
xorb
dec
pop
mov
arpl
imul
mov
dec
adc
test
lret
fsts
push
mov
jo
sub
mov
jae
outsl
jge
add
pop
ds
push
mov
sahf
push
fwait
push
pop
pop
inc
jbe
xor
incb
xor
or
imul
testl
es
mov
adc
into
cltd
xchg
add
cmp
lret
adc
out
xor
mov
add
sbb
or
sbb
ss
xor
push
je
loop
pop
dec
dec
leave
dec
rol
xor
xchg
lea
sbb
lret
add
dec
jbe
enter
aad
mov
mov
mov
dec
or
lock
popa
pop
cmpsb
ret
lock
rorb
imul
iret
stos
movsb
pusha
and
lcall
mov
je
sub
aam
outsb
mov
repnz
loop
xor
push
insb
ds
pop
jb
pop
pop
pop
dec
pop
or
jmp
fcmovnb
or
fcmovnu
nop
and
lods
fs
ficompl
or
add
dec
loop
jne
adc
sbb
xor
pop
push
push
jl
and
int
fdivl
jecxz
mov
fadds
or
add
inc
sub
lcall
call
sbb
pop
movsb
iret
jae
lea
mov
into
mov
push
push
mov
adc
mov
mov
xor
add
mov
aas
pop
pushf
nop
js
es
sbb
rol
inc
push
pop
cmp
mov
and
lahf
addb
pop
lahf
pop
add
dec
pop
cmpsb
lea
xchg
cwtl
inc
add
cmp
or
mov
adc
ret
xchg
les
outsl
mov
xchg
mov
xchg
push
aam
cmc
or
jge
movsb
and
pushf
in
shrb
int
mov
lods
test
jae
sub
xchg
mov
imul
cmp
inc
les
xor
dec
int3
dec
lcall
aam
fcoms
fcompl
int
mov
push
cs
insb
lock
inc
sbb
sti
loope
cli
jo
mov
dec
test
stos
ja
dec
adc
gs
mov
dec
push
pop
mov
sbb
xlat
xor
push
gs
dec
fidivrl
pop
pop
repnz
ljmp
scas
out
mov
jecxz
mov
pop
insl
rorl
adc
or
bound
rorb
test
push
cmp
arpl
mov
or
inc
enter
push
cld
popf
ljmp
push
inc
test
mov
mov
mov
inc
in
je
mov
daa
push
sbb
sbb
imul
outsb
sub
sub
and
mov
jmp
jbe
mov
sbb
add
or
mov
xor
aaa
repz
xor
cmp
or
fs
xchg
mov
and
adc
fwait
pop
mov
or
pop
adc
and
aad
pop
dec
dec
outsb
push
loop
push
mov
mov
jb
sub
sub
testl
pushf
add
cmp
into
fdivrl
and
mov
pushf
jmp
stos
sbb
inc
pop
rcrl
add
out
mov
pushf
cmp
inc
std
iret
pusha
adcb
insb
sub
pop
inc
jp
mov
in
or
xor
inc
rorl
xlat
popa
sub
or
inc
andb
pusha
cmp
ds
xor
jne
push
push
inc
inc
mov
and
mov
pop
ja
mov
lods
push
jge
push
insb
cmp
sub
into
rcr
jle
inc
nop
data16
push
mov
loop
clc
add
xor
sub
adc
subl
add
mov
and
fwait
mov
das
je
jg
push
arpl
nop
push
in
loop
out
fiaddl
loope
pop
repnz
in
pop
dec
pop
cmp
push
xor
test
leave
test
cld
cld
in
sbbl
cmovns
aas
pusha
aas
nop
inc
shll
sbb
add
imul
xor
out
push
add
out
orl
adc
mov
test
bound
repnz
jmp
mov
push
add
mov
jb
cmp
je
cli
jmp
rorb
lea
arpl
or
fs
aaa
iret
popa
mov
mov
enter
ret
jmp
nop
add
dec
add
or
mov
push
add
aaa
adc
pop
push
cmp
dec
sbb
fs
jmp
lods
push
jmp
mov
cmp
adc
or
sub
clc
js
in
cmp
xor
subl
sarl
dec
filds
cmp
sub
adc
lods
cmp
sbbl
cmp
movsb
push
fcomps
push
mov
das
push
jge
jo
cmc
stos
je
jg
nop
test
jl
and
inc
or
and
add
sbb
cmp
push
lcall
es
cmp
rolb
push
push
cmp
andl
cld
or
adc
dec
mov
adc
inc
int3
imul
push
or
or
int3
nop
add
fsts
inc
out
cmp
add
or
inc
adc
add
mov
mov
jp
mov
xchg
insl
dec
push
jmp
pop
push
or
xchg
mov
movsl
sbb
and
in
jbe
fisubs
fldl
aam
xchg
pop
adc
leave
mov
gs
test
pop
jbe
fcmovu
xor
pop
jne
push
mov
dec
lcall
scas
shll
insb
pusha
jae
xor
pushf
or
outsb
das
xlat
jnp
push
xor
xor
loopne
and
lods
dec
gs
sub
test
add
ret
hlt
test
adc
add
add
lea
std
gs
sub
xor
push
xchg
pusha
add
dec
and
push
push
das
popf
scas
movb
insb
jne
cwtl
cmp
movsb
inc
shrb
or
xor
adc
call
cmp
adc
sbb
push
repz
lock
addr16
mov
jne
ljmp
sbb
jmp
mulb
pop
adc
call
pop
inc
lods
or
or
adc
jmp
adc
fstl
je
cmp
fwait
rclb
jb
iret
xchg
add
loopne
lods
sub
sbbb
cld
adc
test
add
ljmp
mov
lods
int
cmp
bound
pop
repz
arpl
adc
or
inc
adc
rcrl
sbb
fstps
rcll
ljmp
into
xlat
test
rorl
nop
mov
mov
lods
add
jno
cmp
jo
push
pop
jne,pt
out
nop
or
jbe
cmpsl
xor
in
ss
aas
lods
mov
clc
cmp
mov
jge
mov
adc
sub
movsb
and
inc
test
push
mov
std
xchg
leave
pop
mov
pop
xor
mov
mov
inc
jb
or
sub
adc
movsb
adc
cli
adc
divl
pop
xor
pop
fmuls
and
inc
loopne
stc
and
jae
ret
lret
and
insl
xchg
dec
jl
add
in
jbe
mov
inc
cmp
or
sub
sbb
incl
jb
in
incl
arpl
imul
add
xlat
xor
dec
incb
mov
push
or
test
incl
pusha
and
add
enter
test
mov
ljmp
sub
sbbb
movsl
fisubrl
insb
or
arpl
sbb
xor
xor
adc
stos
popa
push
in
sbb
add
adc
dec
and
ljmp
add
pop
sar
sbb
incl
inc
mov
jp
leave
sbb
pop
ret
out
add
adc
cld
imul
dec
call
movsl
pop
add
shr
inc
vxorps
mov
cli
iret
inc
imull
movsl
rep
out
add
dec
rorl
sbb
adc
js
rorl
or
push
outsl
sbb
dec
pop
mov
cmc
pop
test
add
xchg
shrb
outsb
fmull
push
dec
sub
push
loope
or
inc
adc
std
xlat
outsb
add
mov
insl
mov
mov
in
shl
mov
pop
mov
popf
arpl
jne
popa
shrl
popa
push
push
add
sbbb
inc
mov
lcall
jo
and
testb
pop
fs
data16
daa
insl
mov
out
sub
jno
add
js
pop
xor
jmp
and
and
fldl
push
mov
and
inc
lock
cld
mov
add
xor
xchg
xor
call
mov
out
dec
jne
jae
or
inc
lea
xor
add
lea
sbb
push
mov
inc
rolb
cmp
push
test
jmp
push
mov
pop
je
lea
mov
or
inc
ret
mov
push
push
push
testb
shlb
mov
les
rolb
xor
sbb
in
imul
sbb
mov
add
lret
jns
imull
push
sbb
inc
sub
out
mov
or
rcl
add
lds
cmpsl
add
dec
lar
add
les
mov
out
iret
lea
rcll
sbb
in
push
push
xor
or
js
or
pusha
sbb
pop
inc
xchg
sbb
or
sub
push
sub
dec
sub
push
add
adc
pop
lret
imul
inc
xchg
sub
dec
inc
or
outsl
loopne
sub
pusha
es
rcll
aam
test
je
adcb
and
inc
outsb
sub
and
enter
je
mov
into
outsb
sub
sbb
ja
push
cmp
dec
into
data16
movsb
inc
push
dec
or
addb
push
mov
xchg
sub
push
pop
push
pop
mov
pusha
add
loopne
push
enter
pop
hlt
push
xor
dec
sbbb
xchg
xchg
je
subl
push
dec
lret
aad
push
sbb
jns
jmp
test
push
cmp
andb
mov
mov
pop
inc
lcall
roll
cmp
pop
inc
push
sbb
adc
mov
push
jnp
jae
movsb
or
push
inc
sub
push
xchg
jno
cmp
add
push
push
mov
sbb
mov
aas
int
int3
dec
jg
push
hlt
cwtl
mov
jne
adcl
sbb
xor
mov
movl
pop
mov
ja
test
mov
mov
inc
mov
push
push
or
pop
mov
iret
pop
or
mov
push
clc
loopew
jo
xchg
outsl
sub
push
js
jg
mov
fadds
cmp
jno
test
push
test
push
pop
dec
push
cmp
inc
fisttps
adc
mov
pusha
cmc
jge
int3
pop
dec
xchg
imul
inc
inc
sbb
push
je
sbb
or
insb
adc
loopne
dec
in
inc
pop
sbb
sbb
pop
push
push
jbe
inc
sub
cwtl
push
and
adc
es
pop
xlat
push
bound
mov
out
xchg
repnz
cmp
mov
mov
inc
cmpsl
xchg
sub
test
cmp
jns
pop
add
roll
xor
jb
dec
pusha
inc
xchg
or
push
jns
adc
mov
xor
jle
les
adc
test
mov
mov
and
or
inc
adc
push
adc
daa
mov
nop
mov
mov
adc
mov
xchg
andl
mov
push
dec
add
jo
or
inc
push
rolb
decb
push
lcall
cld
lahf
sub
inc
stos
mov
xchg
int3
cld
cld
sbb
clc
clc
cmp
in
cld
cld
cs
dec
cs
cld
cld
pusha
jb
inc
dec
gs
mov
mov
cld
dec
bound
adc
mov
sarl
sbb
cmp
cmp
int3
stos
pop
push
js
xor
mov
js
es
push
lock
push
add
cmp
adcl
mov
sbb
stos
xor
call
jo
or
test
sbb
jge
dec
sbb
je
push
xor
movsl
push
dec
adc
sbb
lar
fadd
xorl
add
imul
clc
aas
adc
inc
add
mov
adc
inc
ficoms
insb
xor
fdivs
pop
or
xchg
xchg
iret
adc
adc
xor
daa
adc
sub
inc
xor
cltd
adc
fs
out
dec
shl
push
mov
filds
jnp
inc
add
dec
pop
shll
jecxz
pop
orl
cmp
in
jnp
ret
daa
pop
and
cmp
xchg
int
xor
add
fisttpll
cmp
xor
popa
loop
ljmp
jl
cmp
iret
adc
je
repnz
jbe
push
dec
and
fbld
push
adc
pop
out
sub
sbb
xchg
push
dec
mov
pop
lcall
aam
and
jne
cmp
xor
rcrb
mov
jbe
ja
and
jle
clc
mov
int3
nop
dec
or
sbb
push
vmovntps
pop
and
dec
popa
mov
mov
adc
fsubs
out
dec
lea
inc
sbb
push
pop
add
inc
xchg
cmpsb
inc
push
mov
mov
and
mov
fcomps
dec
inc
test
push
pop
fildll
xchg
jp
into
sbb
lods
loop
stos
jle
int
push
inc
push
add
rclb
jmp
mov
or
test
xor
imul
out
mov
pop
dec
pop
outsl
mov
mov
fiadds
mov
mov
stos
lods
cmpsl
cmp
mov
add
addb
test
inc
imul
popf
cmp
add
test
jp
subb
pop
dec
rol
ss
dec
int3
sbb
inc
cmp
push
cs
cmpsl
lds
clc
sbb
or
int
outsb
lea
or
cmp
es
and
repnz
roll
dec
cmp
mov
add
jae
jmp
push
mov
js
dec
orl
push
sbb
mov
adc
or
mov
ret
jbe
iret
cmp
mov
lods
mov
sbb
out
fmuls
push
sbbl
loopne
hlt
test
adc
sub
nopl
int
pusha
adc
repnz
mov
sbb
incb
jp
test
addb
inc
imul
add
lcall
rolb
pushf
or
add
sti
add
inc
gs
push
mov
and
jbe
sub
adcb
enter
mov
and
notl
jnp
pusha
insl
push
sub
movsb
insb
ret
sub
pop
xor
ja
notl
jae
popa
fldl
jne
test
subl
cmpsb
mov
fbstp
iret
adc
cmp
or
mov
decb
adc
jb
bound
push
pop
repz
cltd
xchg
je
push
sbb
cmp
jne
jle
push
insl
insb
sbb
ret
sub
and
subl
cmp
dec
sub
add
adc
or
lcall
in
icebp
mov
fidivs
or
gs
fsubrl
dec
enter
pop
xchg
sahf
jecxz
adc
sub
mov
out
test
in
pop
pop
movsl
aaa
xor
out
mov
add
pop
push
sbb
push
or
mov
add
adc
pop
hlt
mov
lea
jae
lods
adc
les
dec
mov
mov
cli
sbb
sarb
in
pop
and
push
loope
cmc
ljmp
shlb
lcall
imul
mov
sub
inc
add
je
jnp
enter
cld
or
xchg
enter
lods
dec
scas
cld
push
sub
fdivrl
out
cwtl
hlt
adc
loopne
sbb
mov
lock
cmp
pop
je
or
xor
push
js
add
rcr
sahf
cld
dec
sub
adc
lahf
movsb
test
add
or
push
or
dec
movsl
or
outsl
adc
inc
insl
add
sub
and
inc
and
xor
es
jne
pop
pusha
push
adc
pop
xchg
xor
repnz
lock
fistpl
add
sbb
pop
add
inc
or
push
and
mov
mov
shll
xor
and
sub
sub
and
xor
xor
cmp
fidivrl
inc
inc
dec
imul
and
xor
shll
push
pop
pop
pop
shll
fs
shll
jo
mov
je
js
cmp
jl
fwait
rolb
inc
dec
or
mov
jl
repz
out
jns
je
xor
pop
rcrb
dec
dec
push
dec
ret
les
lea
mov
sbb
push
and
lcall
sub
sub
imul
testb
jbe
cmp
push
popa
dec
inc
scas
and
dec
and
adc
push
xor
shll
push
push
dec
shll
jl
gs
sahf
dec
arpl
lahf
filds
mov
push
sbb
notb
sbb
push
and
bound
stos
or
jg
pop
lahf
adc
nop
add
cmp
repnz
mov
add
mov
xchg
addb
movsb
adc
imul
roll
push
mov
lock
leave
xchg
add
cmp
leave
mov
lock
mov
sarb
lcall
push
dec
pop
push
js
clc
mov
lret
test
scas
insl
sbb
cmc
call
cmpsb
mov
jns
jno
and
push
bndstx
mov
test
jne
pop
movsb
rolb
inc
cmp
dec
or
sbb
mov
nop
push
or
dec
jnp
addr16
xchg
xchg
addl
loopne
pop
jl
pop
cwtl
and
rcrl
pop
dec
xor
dec
fmuls
or
xor
insb
aas
orl
repz
add
dec
inc
lahf
push
or
aaa
rcrl
pop
test
mov
jg
rorb
int
mov
jg
das
je
jg
and
push
out
out
add
outsb
imul
ljmp
xor
mov
or
mov
rcl
or
and
ret
add
sub
xchg
pop
xor
ret
cmp
shrl
adc
fiaddl
cld
js
fwait
lea
popa
lcall
std
dec
xor
pop
sbb
js
imul
sarb
imul
movb
pop
jl
push
pop
test
cmpsl
lret
in
xorb
and
sbb
xor
add
push
repnz
xlat
loope
and
adc
mov
push
sub
pusha
rclb
repnz
sbb
sbb
add
add
dec
inc
jge
mov
sbb
fwait
sbb
les
loopne
imul
inc
pop
and
cmpps
in
adc
insl
jae
push
mov
push
inc
push
jb
push
xlat
inc
jns
sbb
mov
and
addl
or
sbb
or
and
jo
cmp
movsl
loopne
xchg
aad
inc
xor
xorb
stc
lods
push
ljmp
xchg
push
test
inc
rcl
xchg
aaa
push
xchg
pop
push
push
repz
cmp
fstpt
xchg
pop
mov
adc
sar
xchg
add
fsub
push
mov
jbe
fcoml
ret
lods
xchg
clc
dec
stos
cmp
enter
in
sbb
and
push
mov
roll
dec
mov
gs
push
push
ss
into
mov
movsl
jne
aaa
mov
push
jnp
or
out
cltd
fcoml
std
adc
cmpsl
pop
inc
or
sub
mov
inc
jmp
sbb
jnp
ret
jb
imul
and
mov
jne
adc
sahf
mov
xlat
add
icebp
leave
imul
xor
int3
xor
sub
sub
push
data16
sti
loope
std
add
xor
fiaddl
and
sbb
inc
inc
fildll
dec
sbb
sub
adc
push
inc
lret
data16
sarb
jnp
xor
push
push
or
adc
push
cmpsl
mov
pop
add
push
xor
fs
icebp
in
leave
mov
mov
sub
adc
jne
mov
gs
dec
ss
or
and
shll
aaa
fisubrs
inc
cmp
je
push
pop
aas
enter
es
mov
stos
jns
dec
or
pop
sub
scas
or
adc
subb
or
aas
lcall
push
and
dec
jnp
aad
aam
and
push
xlat
and
mov
xor
rcll
imul
sub
pop
sub
mov
or
cmp
jno
adc
inc
cmpsl
sub
cwtl
cmp
xchg
cmc
sub
rcr
pop
shl
mov
mov
and
mov
jnp
or
or
filds
push
ror
adc
shl
mov
inc
aam
lret
ljmp
fisubrl
mov
sub
fs
out
dec
jmp
and
sub
xchg
xor
xchg
stc
mov
cltd
or
loopne
es
push
mov
inc
test
and
loopne
in
call
cmp
fimuls
movsl
or
jecxz
cli
movsl
mov
xchg
mov
inc
shl
rorl
sub
push
popa
push
test
push
or
leave
push
nop
xchg
sub
mov
aam
cmp
or
add
decl
leave
fcoml
sub
dec
jne
popf
jmp
push
adc
dec
xor
add
pop
fiadds
add
out
and
sbb
in
pop
stc
pop
popa
adc
xor
inc
push
loopne
jg
or
ret
js
sbb
jo
in
fimuls
addr16
inc
jno
push
jbe
loop
push
and
fistps
push
dec
insb
in
adc
jne
mov
inc
rcrb
ds
push
iret
push
pop
mov
add
cltd
xchg
jne
and
add
mov
or
popf
push
pop
fmuls
ret
inc
or
fistl
shlb
push
andl
jno
lock
ss
or
iret
pop
inc
pop
ret
add
or
ret
mov
xchg
sub
cmp
dec
jmp
mov
xor
mov
scas
inc
mov
mov
aam
popa
or
test
pop
sbb
shlb
sub
sub
inc
push
pop
jae
or
sbb
cmp
jbe
je
dec
sub
rcrl
cli
ss
repz
or
jnp
fs
push
fucomp
push
mov
add
sbb
push
cli
add
loopne
je
cmp
mov
jo
leave
and
ror
and
and
ja
sbb
test
add
push
jae
imul
jp
add
push
jge
pushl
adc
adc
shlb
xor
mov
rcll
push
nop
push
dec
out
xchg
test
adc
push
push
mov
push
cmpsb
pop
mov
jbe
adc
out
in
add
out
popl
mov
dec
ss
add
fsubs
loopne
inc
popa
mov
scas
stc
movsb
or
and
in
dec
cmp
adc
outsl
sbb
mov
add
adc
mov
adcl
mov
lea
pusha
rcr
and
mov
mov
mov
inc
mov
sar
xor
inc
adc
movsb
scas
inc
inc
mov
inc
sbb
jmp
test
ret
ja
dec
scas
push
adc
and
lods
sbb
mov
cmp
push
fidivrl
ret
mov
fsts
ret
inc
inc
in
mov
adc
lea
add
dec
clc
insb
dec
jae
or
add
add
pop
cmp
pusha
pop
add
repz
xor
add
push
mov
sahf
push
in
xchg
or
adc
inc
jbe
and
inc
aam
mov
mov
inc
mov
aad
inc
roll
dec
rorb
add
mov
and
shl
loopne
test
inc
fists
cmp
pop
xor
loopne
roll
das
or
sub
jg
mov
mov
mov
in
sbb
sub
sarl
push
mov
lret
sub
xlat
add
add
push
out
daa
out
jmp
imul
push
loop
int
inc
outsb
lret
cmp
push
cmp
adcl
push
mov
mov
out
addl
or
scas
call
mov
movaps
in
adc
lds
bound
fcmovb
jb
push
out
shl
inc
fs
arpl
fstps
mov
adc
int3
das
jo
and
sub
out
or
fwait
xchg
nopl
pusha
sub
roll
xchg
and
xor
pusha
or
imul
ljmp
mull
adc
shrl
sbb
dec
or
pop
add
cmp
adc
out
jo
xbegin
addb
push
test
cltd
testl
aas
roll
mov
stc
sbb
xchg
or
test
int
cmp
out
and
add
insl
movsb
cltd
jl
inc
sahf
testl
xlat
sub
jge
sub
jno
mov
ret
cmp
les
mov
or
test
test
scas
jle
aad
not
mov
cmp
mov
add
and
pcmpeqb
jmp
sbb
xor
jl
mov
sub
mov
ret
push
leave
inc
fbld
push
adc
or
push
xchg
xor
xor
lds
cmp
push
jl
rorl
mov
dec
adc
test
sub
sbb
decl
test
lahf
lret
stos
sbb
push
idivb
rol
xor
ja
jns
inc
js
adc
xchg
ret
sub
testb
inc
or
mov
arpl
enter
push
clc
dec
xchg
movsb
jl
jg
testl
out
add
sbb
dec
pop
fnsave
ja
push
pop
les
push
imul
inc
xchg
or
mov
shl
cmpsb
and
in
sub
test
sub
hlt
add
rcll
sub
nop
xor
dec
fadds
and
loopne
mov
mov
cli
xchg
adcl
loopne
cmp
test
cli
lock
shr
dec
aas
gs
loopne
add
mov
inc
jl
out
popa
adc
test
sbb
imul
test
pop
pop
push
add
cmp
int3
jo
lods
jmp
add
sbb
imul
bound
popf
enter
loop
call
cmpsb
dec
jp
xchg
inc
inc
add
xchg
adc
xchg
add
out
sar
or
aam
arpl
xchg
fcoms
cmp
and
xlat
fcoml
mov
mov
jle
testb
mov
mov
inc
add
lock
bound
xor
gs
in
jo
js
pop
sub
pop
jno
or
xchg
enter
cmp
jl
cwtl
das
cmp
jl
fcmovbe
and
and
lret
jmp
int
adc
testl
idiv
repz
leave
inc
mov
pop
push
xor
add
or
sbb
ret
jp
into
les
ret
es
int3
adc
mov
cmp
sbb
jle
and
jb
cmp
aas
push
fdivr
cmp
jb
mov
dec
or
sbb
and
mov
or
imul
lcall
adc
sbb
js
sub
push
cmp
cwtl
cmpsb
aas
movsb
lea
mov
aaa
pop
xor
call
pop
add
dec
ret
mov
negb
sub
or
push
daa
iret
out
stos
cmpsl
push
rorb
and
call
aad
pop
mov
in
jns
movsb
jb
inc
adc
add
subb
dec
push
dec
js
mov
xor
mov
test
xor
inc
aaa
fsubrs
sbb
inc
lret
push
pop
dec
and
pop
outsb
cmp
sti
dec
out
mov
cmpsb
imul
push
mov
pusha
dec
fwait
das
and
push
or
dec
mov
dec
jne
mov
dec
aam
pop
jne
pop
enter
mov
or
pop
test
shlb
add
clc
mov
cmp
pop
lock
sub
jl
mov
pop
cmp
xor
pop
push
ret
inc
cmpsl
jae
sti
sub
push
add
in
ljmp
stc
dec
push
jne
test
cs
cwtl
push
cmpsb
xchg
addl
test
xor
addb
xorl
lods
jge
lret
add
sub
ja
nop
adc
stos
sub
mov
push
and
or
add
mov
and
ror
push
mov
jo
hlt
pusha
addb
sbb
add
imul
movsl
add
xor
clc
sub
xchg
cltd
mov
xchg
test
nop
andl
jge
sub
sbb
js
cmp
sbb
enter
jbe
loopne
mov
xor
push
mov
mov
and
and
fisttpll
inc
or
insb
mov
mov
cmp
and
cmp
test
push
cmp
dec
mov
hlt
mov
jb
add
adc
inc
add
adc
fistl
jb
xor
push
imul
cmp
push
stos
dec
imul
cmp
push
mov
cmc
adc
or
push
fisttpll
ror
sarl
insb
cmp
es
mov
stos
push
xchg
mov
sbbl
shll
jp
push
imul
push
fcoml
mov
pop
pop
decl
int
stc
mov
xchg
lea
or
outsl
add
adc
inc
pop
add
repnz
push
jno
repz
push
push
cmpsb
push
mov
movsb
shrl
jl
cmpb
jge
sub
pop
xor
mov
into
sub
std
jns
mov
ljmp
xor
jbe
in
arpl
test
fcmovu
jl
shrb
cld
push
push
push
pop
push
jmp
imull
jp
jo
push
dec
adcb
pop
add
xchg
mov
sub
dec
push
call
sbb
ds
xchg
rolb
adc
imul
loope
inc
adc
rclb
pop
arpl
mov
push
orb
add
test
cmp
and
sbb
nop
xchg
aad
xchg
mov
push
mov
inc
cmpsl
lcall
sar
or
gs
push
andb
mov
dec
out
pop
aas
fsts
push
push
inc
mov
add
sbb
inc
lea
push
mov
push
inc
mov
aad
push
in
inc
les
xorb
loope
dec
mov
testl
xlat
cmp
scas
push
jno
pop
jne
gs
push
lahf
inc
sahf
dec
push
inc
mov
mov
ret
addl
xchg
mov
dec
cmp
xchg
xchg
popa
and
incl
pop
jns
filds
pop
insl
les
and
push
and
addl
push
out
movsl
or
inc
or
fsubrl
mov
add
sub
arpl
icebp
inc
inc
sbb
push
pop
insb
mov
insb
inc
mov
push
and
cld
cmp
je
lods
cmp
push
pop
push
clc
gs
inc
cmp
rcrb
jecxz
jae
mov
sub
ret
inc
sbb
sbb
lock
popa
dec
lret
dec
popl
dec
jmp
mov
mov
bound
pop
pop
xchg
sbb
sbb
loop
loop
jmp
or
ja
and
jno
movsl
sbb
sub
inc
cs
push
push
pop
xorb
roll
push
ja
loop
enter
lods
std
pop
inc
bound
mov
push
cmp
push
mov
cmp
and
mov
jbe
ret
jl
ret
inc
dec
test
inc
inc
mov
dec
jge
repz
xor
sub
and
xor
add
mov
fwait
daa
sub
fcompl
loope
hlt
pop
and
adc
jle
dec
xor
mov
fsubl
icebp
or
test
lret
push
fwait
arpl
add
or
adc
or
dec
cmp
sbb
lcall
sbb
pusha
add
cmp
add
out
inc
and
inc
mov
mov
mov
or
push
mov
cmp
push
in
adc
popf
aas
push
ret
dec
enter
enter
test
call
pop
push
push
in
adc
popa
xchg
push
or
push
pushf
push
or
scas
jae
popa
jae
xchg
push
ret
inc
or
loope
jo
dec
push
mov
pop
xchg
adc
test
and
inc
pusha
cmp
shlb
shrl
or
push
xchg
inc
shll
gs
pop
pusha
mov
push
enter
mov
mov
xor
cmp
jnp
adc
lods
rol
jle
add
dec
pop
cs
and
push
repnz
lock
je
jns
or
movsb
mov
and
popf
push
stos
xchg
icebp
add
imul
and
cmp
stos
and
fs
pop
mov
xchg
pushf
jecxz
call
out
cli
or
stos
push
fmull
adc
sbb
shr
es
jl
cmp
fsts
stos
adc
mov
mov
inc
inc
push
xor
push
pop
and
or
xchg
push
push
ja
dec
cmp
jae
pop
adc
push
inc
add
push
add
out
ret
push
xchg
and
jbe
out
out
das
push
nop
pop
lea
adc
sub
push
cmp
or
xchg
sub
imul
les
add
ret
sub
fisttpl
lock
fiadds
cld
xchg
push
dec
jb
add
and
xchg
jg
addr16
rcr
sub
jmp
mov
cmc
jge
lcall
cwtl
jge
fisttpl
adc
sub
ficomps
sub
fstpl
jmp
or
lods
cwtl
popf
inc
sub
outsl
fstl
roll
and
or
sub
adc
mov
pusha
icebp
es
imul
test
inc
fimuls
popf
lret
push
and
or
cmc
sub
xchg
mov
cwtl
mov
pop
pushl
fdiv
mov
jne
fstp
mov
dec
arpl
pusha
xor
add
lds
and
inc
push
je
mov
fldl
add
mov
aas
or
jne
fstl
test
aam
jae
cmc
sub
fldl
fsubl
and
loop
js
cld
dec
faddp
fstl
jmp
sub
outsb
add
xor
dec
lahf
jne
cmp
adc
jne
xchg
xor
adc
adc
push
jmp
sbb
and
pusha
pusha
jo
jbe
mov
insl
sub
add
push
stc
fstpl
pop
adc
addr16
or
fiaddl
xlat
mov
push
ss
pop
insb
push
add
sub
add
mov
das
push
push
sbb
mov
cmp
cmpb
cmc
mov
mov
or
or
aaa
pop
mov
sub
inc
dec
sbb
scas
xor
inc
or
shlb
rcrb
push
or
ss
add
hlt
jl
popa
mov
xchg
inc
add
jmp
adc
movsl
push
test
add
arpl
or
sub
sbb
or
add
lods
fadds
arpl
inc
lock
sbb
rorb
sbb
push
inc
sbb
or
adc
jg
xor
cmp
jmp
inc
adc
push
jne
dec
subb
sub
lods
test
sub
push
mov
sub
je
mov
iret
sub
add
inc
call
aad
loopne
push
cmp
fistl
loop
sbb
or
lods
adc
pop
push
pusha
cmp
popa
ret
cmp
mov
push
push
inc
adc
xchg
rcll
scas
add
je
int
test
xchg
mov
subb
inc
js
adcl
push
add
xchg
std
loop
aam
and
or
loop
sub
bound
cmpb
bound
and
pop
int
cmp
ja
and
mov
lds
mov
loop
adc
test
pop
fdivrp
mov
shl
sub
mov
sub
sub
xor
push
dec
and
cmp
cmpsl
sub
ss
das
stos
push
sbb
or
pop
cmpsb
sub
test
cmp
and
and
adc
cmpps
mov
outsb
and
aas
and
sub
push
mov
imul
xor
xor
dec
jl
add
mov
pop
sub
xchg
jmp
rcrb
xchg
andl
cmp
pop
cmp
inc
mov
rol
mov
xchg
xchg
subl
pop
das
shlb
jo
pop
lods
sbb
mov
cltd
mov
mov
mov
or
add
add
jnp
mov
or
jae
rcrb
popa
les
mov
and
into
inc
xor
xor
popa
fwait
pop
mov
imul
dec
rcrl
je
or
add
sub
or
aaa
add
popa
andb
popa
add
xchg
sbb
cltd
xchg
addr16
and
pop
add
push
das
aaa
mov
loope
setbe
cmp
add
nop
add
fadds
scas
or
inc
xor
sub
das
fstpt
insb
lock
add
jmp
fdivs
jg
mov
and
inc
push
cmp
outsl
add
mov
jo
xor
mov
enter
push
popa
mov
inc
data16
clc
mov
mov
mov
jbe
jo
cmp
pop
jbe
mov
call
enter
repnz
fcom
add
shl
xchg
test
shr
xor
nop
imul
push
cli
ss
xor
sti
inc
mov
xchg
cld
shrl
je
adc
mov
stos
adc
faddl
and
sbb
aas
ss
ret
dec
jno
push
and
add
test
roll
sub
mov
fdiv
movsl
aas
mov
cmpw
xor
cli
adc
jl
mov
fcos
cmp
jae
cmp
jae
stos
dec
adc
push
pusha
jb
xor
mov
xchg
rolb
adc
sahf
xchg
aas
in
leave
xor
sub
pushl
test
mov
icebp
pop
jae
push
jmp
ret
adc
push
or
adc
movb
xor
clc
sub
lret
sbb
cmp
call
or
pusha
fistpll
xor
inc
or
push
jbe
pop
mov
jae
inc
popa
jnp
test
adc
iret
push
int3
cmp
cmp
jg
cmp
or
mov
mov
les
cwtl
mov
jbe
push
sbb
fcmovnb
add
data16
sub
nop
mov
pop
or
cmp
jo
push
pop
cs
pushf
mov
je
jge
out
mov
insb
push
mov
adc
inc
adc
dec
insb
cmpb
xor
push
and
loop
xchg
shlb
ljmp
pop
add
int3
sub
sub
ja
lea
in
shrb
addr16
pop
or
sbb
jge
lock
je
shlb
and
sbbl
push
push
gs
add
dec
dec
push
pop
cs
je
inc
dec
push
outsl
jecxz
xor
inc
or
jmp
pop
inc
jne
adc
add
jl
sbb
dec
std
mov
jmp
or
or
jmp
data16
cmp
mov
pusha
jbe
fisubrs
or
or
or
or
xchg
or
add
mov
jl
nop
dec
push
jne
cmp
mov
cmp
movsb
lds
shlb
push
inc
and
push
sub
add
jnp
sbbl
daa
in
out
mov
xchg
add
push
pop
mov
jmp
inc
out
jb
add
sub
jne
movzwl
lcall
pop
idiv
cmp
sarl
test
adc
cs
loope
mov
adc
cmp
inc
mov
jmp
push
pop
adc
sub
int3
adc
arpl
lret
add
xchg
mov
scas
pop
fwait
inc
mov
in
nop
adc
push
test
ja
insb
mov
in
inc
and
sub
sbb
add
imul
pop
idiv
cmpsb
out
rorb
les
iret
mov
outsl
sti
or
je
dec
jbe
adc
sbb
aam
or
les
sbb
rclb
pop
fildl
fmull
inc
fdivrl
or
or
fcoms
cs
rcr
pop
add
in
pop
fwait
xchg
sbb
inc
fldl
rolb
ret
cmpl
dec
mov
stos
or
adc
dec
xor
je
les
mov
mov
inc
add
inc
adc
xchg
lods
addl
and
push
daa
sarb
mov
insl
or
hlt
js
addb
push
adc
mov
pop
mov
adc
icebp
rclb
movb
in
mov
sbb
mov
ljmp
inc
scas
adc
xchg
inc
lock
test
mov
cmp
inc
pop
stos
cmp
ret
mov
clc
inc
mov
xchg
stos
mov
mov
mov
in
xchg
les
cmpsb
xor
mov
add
dec
fisubrl
cmp
mov
cs
cmp
cmp
jne
movl
inc
or
addr16
jge
in
rcrb
rcr
scas
inc
and
imul
loop
mov
mov
mov
enter
adc
xor
outsl
jle
repnz
xor
out
or
lods
xchg
outsb
sub
jb
or
or
dec
lret
inc
add
fcoml
fildll
lock
mov
inc
xchg
fimull
bound
pop
lods
mov
xchg
ja
cmp
jbe
add
mov
and
inc
inc
pop
xor
rorl
add
dec
jae
inc
adc
adc
jecxz
mov
lea
and
xchg
fsubrp
jb
cs
adc
ror
dec
fimull
xchg
push
lock
stos
xor
push
test
inc
xchg
jno
push
fldl
mov
xchg
aam
pop
in
popf
pusha
mov
dec
lock
mov
jmp
add
dec
push
jo
out
mov
call
push
outsb
lock
loopne
fmull
pusha
shrl
aam
add
adc
inc
movb
or
xlat
aaa
cmpl
fwait
stos
inc
outsb
xor
push
xor
enter
call
adc
fsubl
push
mov
pusha
test
nop
js
hlt
or
test
xor
into
dec
notl
mov
jg
test
inc
add
push
iret
mov
or
mov
add
mov
xchg
adc
push
pop
and
xor
gs
and
sbb
and
imul
in
daa
ret
sbb
sbb
push
sarl
inc
loopne
or
pop
imul
sbb
cmpsb
insb
sub
or
adc
adc
es
xchg
pop
rorb
push
mov
js
jle
cmp
in
addr16
mov
stos
imul
gs
add
addb
dec
push
jno
inc
sbb
dec
cmpsl
in
cwtl
adc
data16
cmpsb
xor
mov
sub
cld
pop
sub
test
push
subb
dec
cmp
xor
cld
jae
inc
xor
dec
cli
or
or
rcll
mov
decl
adc
or
ret
push
test
cmp
pop
das
sbb
mov
sbbl
and
nop
orb
dec
inc
inc
adc
push
adc
add
xorl
outsl
xchg
rolb
cmp
loop
adc
inc
pop
enter
jo
test
push
int
dec
cltd
adcb
xor
mov
or
stc
add
pop
in
pop
pop
jo
adc
aaa
dec
sbb
out
and
dec
out
inc
push
push
sbb
and
mov
jbe
xchg
orl
push
lret
imul
pushf
outsb
and
loope
in
mov
lret
or
mov
rcll
xchg
dec
mov
fwait
pusha
lds
call
jne
enter
rolb
cmp
push
je
adc
pushf
ds
call
inc
pop
cltd
stos
push
or
sbb
jp
or
push
jb
fcomp
mov
push
push
sbb
cmp
cmpl
push
roll
or
xor
xor
int
or
loopne
call
add
cmp
repz
xlat
or
add
mov
cs
testb
dec
jle
adc
dec
inc
out
or
and
push
jg
jmp
dec
js
mov
adc
sbb
repnz
cmc
cmp
shll
add
insb
xlat
loope
push
jl
jle
or
mov
mov
cmp
jge
jg
mov
add
aaa
inc
add
test
sub
mov
jb
push
ret
scas
fmull
sti
mov
xchg
pop
mov
jmp
das
pop
push
dec
cmpsl
cmovs
mov
mov
lock
daa
scas
cltd
std
mov
aad
fsts
pushf
sbb
push
mov
negb
stos
insl
loopne
pop
cmpl
jb
mov
xor
mov
je
push
mov
add
test
mov
push
xor
jnp
lea
movsl
ret
int
insb
dec
and
pop
sub
dec
and
jb
shlb
inc
movsb
sub
into
pop
les
sbb
pop
push
and
adc
inc
sub
inc
and
pusha
sbb
pop
pop
dec
jge
aad
push
push
cltd
sbb
jnp
shll
cmc
adc
push
movzwl
inc
or
and
popa
ret
mov
inc
fwait
lret
mov
sbb
dec
and
pushf
add
fldenv
cltd
xchg
add
aam
push
fwait
repz
adc
lods
adc
pushf
pop
adc
pop
rcrl
andb
sub
ja
and
ss
loope
pushf
push
inc
in
sbb
xchg
pushf
add
sbb
pop
xchg
insb
dec
add
pushf
pop
xor
rcrl
mov
test
popf
nop
dec
push
mov
pop
ret
in
out
mov
mov
mov
push
jo
enter
push
and
and
lea
sub
ss
inc
ds
add
add
sub
pop
jb
xor
push
push
testb
cltd
sub
lret
inc
pop
mov
into
ss
pop
in
or
cmpsl
movsl
popf
xor
and
push
xchg
ss
je
and
sti
mov
sub
xor
sub
shll
add
int
inc
add
mov
in
and
sub
aam
fs
movsb
dec
sub
xchg
dec
out
jg
mov
or
push
sub
inc
imul
daa
cwtl
mov
jmp
cs
xor
sub
jmp
aas
sbb
js
mov
je
mov
sub
das
pushl
or
mov
je
jmp
xlat
adc
mov
pop
subb
pop
sbb
ret
mov
and
sub
jl
das
jne
stos
jns
mov
subl
in
aas
es
loope
dec
cmp
push
inc
inc
mov
push
push
dec
mov
in
jbe
or
enter
add
jge
sahf
lods
mov
pop
adc
sbb
in
in
inc
sub
xchg
rclb
call
or
iret
mov
adc
jp
xchg
xchg
sub
pop
aad
insl
pop
mov
cmpl
out
pop
dec
inc
mov
test
pop
and
fwait
sub
loope
call
imul
sub
push
iret
jns
sbb
xlat
or
leave
imul
sub
and
xchg
jmp
out
sub
in
in
out
mov
aad
in
fxam
dec
jae
mov
mov
add
mov
sub
into
fisttpl
call
inc
xchg
gs
and
in
push
sbb
mov
push
xor
push
inc
adc
popa
cmp
add
sub
in
add
and
mov
and
cld
push
es
sbb
rcrb
scas
mov
jne
ss
clc
jmp
mov
sbb
adc
je
xchg
add
mov
mov
mov
xor
and
and
xor
pop
push
push
outsl
jl
cmp
push
fdiv
cmp
cmp
and
data16
shrw
iret
aas
adc
stos
sub
sub
cmp
push
and
test
int
sub
adc
mov
cmpl
into
adc
cli
adc
push
aam
add
fs
inc
mov
loopne
inc
lock
daa
and
cmp
cltd
jge
imul
insb
inc
and
push
imul
addl
adc
sahf
rorb
sub
xor
jo
je
and
sbb
xor
lea
movsb
fldcw
shl
sbb
es
ss
rcl
cmp
cli
fs
into
jbe
outsl
insl
add
push
inc
es
mov
mov
pop
pop
push
mov
mov
aaa
sti
fsubl
stos
imul
lcall
pushf
jl
mov
pop
push
xor
ss
add
pushl
sbbb
pop
add
cmp
sub
popa
jg
repnz
adc
adcb
cmc
cli
mov
subb
lds
and
push
jo
arpl
mov
popf
sub
fsubrp
xor
jmp
and
daa
lcall
push
pop
lds
add
dec
dec
or
or
dec
jge
data16
and
les
inc
adc
push
mov
int3
mov
sub
mov
ror
popl
add
mov
dec
push
jno
fdivr
pop
sub
rolb
add
add
pop
sarb
jns
mov
xor
or
movsb
mov
adc
pop
pop
sbb
sbb
dec
lcall
jno
bound
mov
add
push
popf
ljmp
jp
ds
pop
xchg
fcompl
clc
je
cld
sbbl
clc
dec
sub
sub
imull
push
jmp
sub
adc
mov
mov
imul
dec
inc
push
and
arpl
xor
pushf
inc
jnp
add
insb
dec
push
sti
adc
popa
dec
add
add
js
or
pusha
sub
fsts
add
jmp
jecxz
push
rcrb
jbe
cmp
mov
dec
push
iret
mov
adc
jmp
nop
xor
add
bound
push
cmpb
addr16
or
imul
pop
mov
and
mov
loope
push
in
dec
mov
xchg
cmp
sbb
js
mov
imul
pop
jnp
mov
not
hlt
enter
mov
and
sahf
test
mov
dec
push
push
xor
or
out
mov
mov
addb
pop
pop
cwtl
enter
pop
pop
xchg
aam
adc
dec
loopne
jo
push
test
push
lods
lods
je
pusha
jmp
sbb
stos
sbb
pop
sti
xchg
push
stos
enter
dec
cmp
inc
imul
mov
pop
imul
pushf
fsub
popa
stc
cmp
and
shrb
mov
jl
sbb
xchg
addl
pop
sarl
popf
enter
mov
insb
add
sub
das
js
mov
xor
fcoms
cmp
lock
push
sbb
push
inc
popf
loopne
lock
aam
cmp
dec
dec
sbb
pop
lock
add
gs
sbb
mov
push
push
jmp
mov
faddp
jb
aas
in
sbb
aaa
repz
bound
movsl
mov
jecxz
pop
and
jo
cmp
outsl
dec
jp
xor
mov
pop
and
and
test
mov
bswap
repz
aas
lock
push
roll
and
mov
push
push
mov
shl
sti
shll
jb
das
call
inc
pop
xor
dec
inc
mov
add
aaa
out
jo
sbbl
dec
or
mov
andb
pop
pop
mov
add
andl
ret
fildl
pop
mov
sbb
cwtl
cmpsb
cltd
out
loopne
pop
add
rorb
adc
or
xor
clc
pop
lods
push
xor
push
sbb
lcall
lea
es
dec
lock
ljmp
sbb
add
push
in
jmp
push
fnsave
aas
lock
sahf
fdivrs
repz
je
push
dec
xchg
mov
rcll
adc
push
push
adc
mov
mov
jl
mov
pop
jl
mov
addl
xchg
cwtl
pusha
add
cmp
jbe
jae
ret
mov
xor
add
std
test
xor
push
pop
add
jae
add
add
dec
mov
xchg
mov
mov
mov
push
call
xchg
cmc
cld
rorl
hlt
xchg
mov
int3
sbb
movsb
pop
cmp
sbb
add
adc
push
lret
hlt
mov
clc
mov
push
sbb
fildll
sub
hlt
pop
add
xlat
xchg
xor
adc
dec
call
mov
xor
add
mov
add
js
cltd
cmp
in
or
pop
jne
clc
sbb
or
add
jmp
int3
pop
loope
mov
or
add
cwtl
aaa
xchg
movsb
inc
push
test
xchg
xor
pop
sahf
xor
lods
push
lcall
bound
pop
sbb
inc
push
scas
jg
or
add
or
das
mov
xchg
push
inc
rcrb
or
into
push
sbb
rcrb
sub
push
or
push
push
jne
and
pop
inc
or
sub
loop
cmp
or
outsl
and
js
fcomps
inc
pop
lock
sbb
or
cmpsb
mov
and
mov
lea
adc
xor
inc
or
stos
inc
dec
call
sub
scas
mov
cmp
inc
cmp
cwtl
cmp
sbb
sbb
cmp
dec
clc
dec
lods
jne
dec
jle
push
ret
dec
pop
or
adc
les
stos
test
dec
or
add
addb
fldl
repz
sbb
mov
adcw
or
in
and
or
sarl
inc
adc
pop
neg
ja
cmp
sub
repz
push
fdivs
les
nop
mov
orl
jmp
hlt
jne
lds
or
pop
or
pop
je
adc
jo
popa
mov
or
push
push
lods
xchg
pop
and
sbb
add
sbb
mov
adc
push
test
mov
enter
jo
lret
jne
mov
scas
cmp
push
mov
or
dec
push
clc
sub
es
js
in
and
or
or
add
sub
mov
inc
rorb
nop
popa
adc
in
or
xchg
jbe
dec
rcr
outsb
push
je
adc
je
or
jnp
inc
fidivl
js
dec
add
mov
xor
inc
inc
outsl
adc
jle
xor
lock
sbb
push
lods
xchg
jmp
and
in
into
ret
add
test
in
cmp
sub
or
daa
cmpsl
dec
push
and
test
aas
dec
ss
xchg
roll
clc
inc
or
jb
jge
add
add
xchg
out
adc
pushf
je
push
xchg
mov
adc
insb
sub
or
lret
pop
jae
xor
inc
mov
sbb
sbb
dec
xor
daa
dec
xor
mov
clc
nop
mov
inc
and
outsb
mov
rorl
sbb
sti
cltd
push
dec
push
xchg
xor
movsl
fwait
std
daa
mov
cmp
mov
xchg
cmp
mov
ret
repnz
aaa
cmp
add
pusha
mov
or
into
adc
jecxz
rcll
addr16
clc
sbb
push
dec
push
pop
cwtl
mov
rcrb
cmp
popa
dec
rcrl
and
inc
sbb
dec
nop
test
sub
xor
mov
mov
push
and
jo
xchg
push
mov
sahf
data16
movsb
push
jle
cmpsb
jg
insl
mov
push
inc
stos
inc
adc
sbb
sbb
lea
stos
lcall
or
inc
push
dec
mov
and
or
clc
ljmp
data16
push
enter
pop
test
and
loop
and
pop
push
adc
cmp
adc
mov
add
test
sub
or
and
pop
pop
adc
push
adc
sbb
add
sub
fsubrl
daa
mov
adc
jo
cwtl
lea
push
jb
xchg
loope
shrb
cmp
cmp
pop
push
movl
pop
jp
lea
sbb
pop
push
jae
faddl
push
add
out
pop
enter
cmp
enter
or
push
jecxz
sbb
adc
jne
dec
popf
aam
clc
add
rolb
jg
jmp
test
addl
loopne
mov
mov
push
insl
push
pop
add
sub
rorl
in
enter
clc
add
mov
loopne
adc
enter
cli
nop
inc
dec
data16
add
add
jp
mov
and
cmp
ss
out
adc
or
push
add
xor
xor
add
aaa
push
das
jb
xor
push
cmp
push
mov
xchg
std
aam
mov
adc
push
and
add
sub
cmpsb
push
lea
mov
sbb
sbb
xchg
fdiv
pop
jge
cwtl
ficompl
jns
jae
xchg
cmc
movsl
fimull
shll
xor
mov
pop
and
or
inc
test
movsb
inc
jl
sbb
movl
js
loop
or
jns
jno
out
push
push
inc
xchg
daa
add
fs
mov
cmp
push
push
inc
in
int3
loope
lcall
mov
cmp
adc
test
fsubl
lret
lea
pushf
mov
dec
mov
push
dec
lea
ja
add
pop
jle
and
push
das
inc
lock
add
cmpsb
sub
sub
cmc
rorl
scas
push
push
add
sbbb
shlb
push
mov
insb
dec
pop
sbb
pushf
sub
pop
leave
ret
daa
pusha
lock
xlat
imul
push
or
cmc
sbb
lret
shlb
mov
repnz
add
or
inc
mov
add
sbb
addr16
js
cmp
mov
add
push
add
shrb
pusha
mov
roll
loopne
int3
movsl
sub
add
insb
mov
sbb
pushl
lock
and
dec
nop
cmpsb
add
in
sbb
addr16
loopne
pop
dec
sub
xor
pop
sub
inc
and
or
movsl
lahf
cwtl
xor
mov
jo
imul
pushf
and
xchg
dec
into
mov
sbbb
rclb
sahf
lret
sbb
cld
cmpsl
shr
imul
ret
repz
mov
push
sub
test
sarb
inc
cld
mov
lods
add
inc
add
cwtl
lea
jecxz
fidivrl
xchg
push
pcmpeqb
lahf
add
mov
xor
jg
ja
test
mov
adc
mov
sbb
jle
enter
mov
and
inc
inc
and
push
je
inc
fistl
jmp
xor
repz
push
push
dec
push
push
and
lahf
adc
sbb
adc
subl
dec
fs
add
cltd
sub
daa
int
cmp
or
xor
dec
add
mov
faddl
ror
test
adc
pop
pop
aas
xchg
pushf
shl
and
pop
add
dec
sub
inc
xor
fsubs
stos
sub
in
push
lods
sarl
andl
cmpsl
data16
pop
mov
push
inc
inc
jl
sub
mov
jl
fs
mov
mov
xor
scas
popa
pushf
add
scas
lock
cmp
popf
rorb
cwtl
in
mov
dec
in
sbb
push
adc
adc
jae
hlt
inc
rcrb
xchg
icebp
and
xor
add
xlat
add
out
sub
loope
std
xchg
or
push
mov
flds
pop
adc
mov
add
pop
push
and
in
inc
fwait
clts
dec
and
mov
pop
jnp
lea
arpl
mov
lods
inc
faddl
ret
loopne
add
test
and
push
xchg
fsubl
movsl
mov
daa
imul
push
loopne
imul
out
xchg
push
sbb
pusha
xor
movl
add
fildl
jl
push
add
add
pop
out
cmp
and
adc
les
inc
scas
insb
je
call
int
inc
cmp
add
outsl
sub
sub
jns
sub
push
add
sbb
and
mov
rorb
jl
mov
adc
sti
lock
cwtl
push
push
sub
push
addr16
cmp
cli
dec
add
pop
bnd
fmull
jl
and
sub
pusha
jge
popa
femms
jo
push
push
inc
pushf
add
ret
sub
addr16
inc
jmp
push
mov
imul
inc
lret
jb
movsb
cmp
mov
out
sub
mov
pushf
xor
mov
and
leave
les
sub
or
or
add
adc
fadds
inc
pop
fwait
enter
pop
cmp
loopne
sub
jae
adc
sbb
mov
fadd
cmp
stc
nop
outsb
lea
ret
push
add
pop
dec
ret
sbb
cmp
push
pusha
mov
aaa
int
insb
or
pop
insb
inc
sti
xor
insw
lock
fnstenv
cld
mov
gs
sbb
push
ja
adc
mov
inc
pusha
clc
addr16
dec
sub
lock
cmp
mov
jae
inc
jns
and
add
dec
mov
mov
dec
aas
xchg
add
inc
test
mov
test
add
mov
jle
or
pop
mov
cwtl
mov
add
jl
pop
movb
in
fldl
scas
out
add
inc
cwtl
or
jo
dec
jb
push
push
call
sub
pushf
push
sbb
cmp
inc
mov
add
mov
xchg
movsb
push
cli
subb
pop
jge
movsb
xor
cld
pop
shlb
les
test
les
scas
push
mov
in
ss
imul
lahf
jo
rorb
pusha
aam
mov
aad
movsb
add
pop
add
in
inc
or
test
fs
icebp
mov
dec
mov
dec
clc
pop
leave
add
in
cmp
add
mov
ret
test
xchg
adc
mov
push
loopne
cs
jo
cmp
negb
add
testb
je
es
mov
int3
test
ret
imul
mov
call
in
cs
pusha
call
es
imul
push
push
adc
jmp
jbe
popf
movsb
stos
mov
add
bound
jge
jne
mov
aaa
or
mov
xchg
jb
mov
jmp
push
nop
shll
aam
clc
mov
push
aam
arpl
out
xlat
sub
fstp
je
imul
sbb
pop
mov
xchg
sbb
mov
pop
icebp
xchg
sahf
push
or
adc
inc
mov
cmp
in
les
outsl
sub
or
sar
loop
sarb
push
xor
movsb
lret
sti
cmp
negb
je
les
and
add
adc
pop
jb
mov
xor
cwtl
fdivs
xchg
cmpb
inc
mov
inc
sub
and
adc
in
call
sbb
in
and
xor
mov
jns
fsubs
or
jo
icebp
in
insb
jne
shrl
add
jge
pop
lds
outsb
sbb
jge
outsb
jno
in
call
mov
add
push
or
inc
sub
xchg
sbb
push
dec
xor
push
in
sub
add
cmp
je
pop
pop
cmp
mov
add
jl
jo
xchg
hlt
test
mov
mov
add
sbb
and
mov
out
and
add
sbb
stos
je
inc
data16
dec
or
mov
into
adc
mov
jle
aaa
push
lahf
orl
lods
cmpsl
test
or
mov
adc
inc
clc
xchg
popf
add
inc
cmp
cld
es
and
popa
pop
jns
cld
push
push
mov
mov
sbb
in
add
dec
rcll
sbb
ret
xorb
push
push
mov
xor
inc
insb
rolb
jge
push
aam
ja
jge
and
rcl
sbb
and
xchg
push
jnp
xor
les
addb
pop
mov
mov
sbb
mov
les
scas
dec
testl
mov
mov
mov
mulb
js
shl
popa
jmp
jae
xor
scas
mov
pop
cmp
je
inc
movzwl
movb
jb
loopne
jl
jnp
loopne
clc
push
pop
and
imul
cmpl
pusha
cmp
cs
xor
push
dec
dec
cwtl
xchg
popa
mov
push
or
and
xchg
add
je
ffreep
unpckhps
imul
movl
push
adc
gs
fnstsw
mov
jl
aam
mov
xchg
pop
aas
push
je
mov
xor
xor
or
fnstenv
dec
jne
clc
xchg
ret
push
stos
add
lock
push
push
outsb
or
jmp
push
movzbl
xorl
cmp
add
push
pushl
ficomps
push
push
cmp
jl
jmp
les
dec
pop
pop
push
rolb
les
pop
bound
addb
nop
lods
mov
adc
lds
loope
jecxz
pop
ja
mov
sbb
in
imul
sahf
ja
fiadds
push
orl
cmp
mov
jo
ret
fiaddl
insb
in
push
into
push
mov
sub
jo
mov
and
cmpl
xor
int
push
cmp
data16
cmp
cmpl
or
cmp
cmovp
dec
andl
mov
xchg
push
sub
test
lret
push
adc
or
enter
dec
push
mov
xor
dec
cmp
inc
jns
sbb
or
jo
sbb
fs
orb
data16
ret
mov
into
lret
cmp
andb
inc
stos
loop
and
push
pop
sub
push
mov
sub
jg
adc
cmp
lahf
xorb
cmp
mov
lea
rclb
push
cmovle
and
push
aad
imul
hlt
add
pop
ret
cld
push
js
push
in
add
adc
jo
mov
fistps
push
pop
ret
add
es
sbb
mov
adc
sarl
nop
ret
push
cs
sbb
mov
xor
aaa
add
and
mov
adc
lea
and
fadd
sbb
mov
pop
clc
sti
push
and
insb
pop
push
push
push
mov
mov
ret
sbb
add
lret
repnz
pop
sahf
mov
loopne
xlat
cmp
fists
fst
daa
fiadds
xchg
sub
js,pt
fs
orb
push
outsl
or
in
xchg
imul
xchg
xor
push
inc
cmp
sbb
pop
mov
clc
dec
iret
sbb
inc
push
in
add
roll
pop
add
sub
imulb
lock
insb
or
or
mov
fisubrl
push
mov
test
cmp
xor
gs
xlat
mov
mov
push
ret
gs
test
sahf
mull
dec
mov
clc
pusha
insb
popa
and
jb
xchg
add
jg
mov
push
push
movsb
push
je
enter
mov
or
add
cmp
fwait
addr16
ss
and
stc
or
outsb
inc
mov
or
mov
inc
xchg
out
xor
push
call
sti
cmp
adc
imul
ljmp
dec
xchg
ret
sbb
ret
dec
mov
mov
push
add
mov
mov
push
pop
sbb
push
dec
test
data16
pushf
loopne
push
aam
mov
call
adc
bound
sbb
nop
data16
fs
popa
movsb
mov
cli
or
jecxz
sub
enter
rclb
lea
cmp
xor
subb
or
adc
loopne
test
in
push
push
pusha
sub
adc
cmp
test
push
popl
sub
ds
loop
or
add
addr16
jmp
push
push
sbb
dec
ret
loopne
push
addr16
pusha
scas
adc
pop
jmp
cmp
adc
inc
inc
js
call
push
xchg
lea
pop
or
cmp
addb
xchg
push
subb
sub
push
add
sbb
lret
nop
add
and
push
ret
cwtl
clc
sbb
and
or
sbb
mov
arpl
bound
cwtl
lret
add
push
and
push
bound
push
shl
add
push
das
add
adc
mov
pop
or
adcb
add
pop
decb
add
adcl
and
push
jno
lret
mov
sub
aad
push
ficoms
scas
repnz
aaa
push
cltd
mov
jp
push
mov
sbb
jmp
sub
dec
or
jge
mov
ret
or
mov
adc
js
adc
xor
push
jne
sbb
loope
inc
jecxz
sbb
pop
pop
mov
and
inc
cmp
xor
out
sbb
push
jge
xchg
inc
add
cmpsl
add
sub
fwait
dec
test
jmp
je
and
push
jmp
dec
ficoms
push
adcl
orb
push
pop
test
mov
xor
dec
outsl
scas
movsb
mov
mov
mov
pop
testb
lret
andb
cmpsb
jmp
adc
icebp
push
outsl
js
outsb
outsb
cmp
imul
inc
call
push
add
in
cld
sbb
bound
xor
add
inc
or
add
jge
and
incb
xchg
pop
lock
iret
push
and
cli
cltd
fcomp
and
add
adc
cmp
jne
jbe
lret
test
lcall
inc
adc
push
or
pushf
pop
out
jae
push
dec
mov
mov
mov
nop
pop
adc
scas
add
cmp
mov
dec
and
mov
in
lahf
xor
adc
mov
xor
ret
pop
jno
mov
test
ffreep
add
dec
leave
adc
inc
inc
mov
mov
push
add
add
mov
or
xor
push
xor
call
sub
pop
std
lock
push
nop
push
ja
lea
or
or
cmp
outsl
mov
cmp
shlb
mov
pusha
popf
inc
sbb
dec
jo
fsts
push
arpl
popa
mov
pop
adc
mov
pusha
mov
sbb
push
pop
loop
inc
rorl
aam
and
and
or
sub
sbbl
adcl
lea
add
hlt
mov
mov
or
sub
xor
jb
das
xor
aaa
inc
inc
pusha
pop
enter
jp
add
rolb
cli
pushl
add
icebp
push
jo
je
js
mov
add
addl
push
adc
subb
lea
stos
data16
lea
loope
lea
ds
or
xor
dec
clc
and
movsl
mov
mov
or
fstps
sbb
xchg
adc
xchg
xchg
jne
fstps
pusha
or
neg
cltd
gs
dec
sbb
loopne
fstpl
movsb
les
mov
mov
into
lods
adc
xor
repnz
add
jo
test
rol
adc
pop
mov
xor
test
mov
addr16
add
lds
orb
pop
std
std
std
pop
adc
add
add
loopne
mov
inc
sar
sub
leave
divl
cwtl
mov
add
sbb
cmp
add
pop
aam
and
cmp
mov
aad
popf
test
and
pop
test
inc
inc
adc
lea
add
fsub
lea
dec
shrb
inc
lds
fimuls
push
xor
js
lahf
xchg
xchg
stos
addl
out
bound
clc
dec
push
adc
push
popa
jg
add
mov
push
sti
movsb
pop
xor
push
in
add
mov
xchg
add
int3
push
push
xor
push
mov
inc
popa
shll
cmp
sbb
pop
jl
ljmp
bound
fdivs
xor
push
and
jl
movl
dec
ret
cmp
lock
jbe
jne
cmp
mov
das
pop
or
add
lcall
in
hlt
data16
imul
mov
dec
out
push
jge
cmpsb
xor
pop
dec
cmp
ljmp
sub
lea
mov
or
leave
pop
mov
cmp
mov
pop
scas
adc
xor
outsb
or
inc
sub
and
sub
adc
add
mov
fsubrl
and
and
adcb
fwait
repnz
lods
sbb
add
mov
mov
imul
sbb
les
stos
push
dec
test
push
mov
mov
mov
mov
inc
xor
mov
dec
sub
mov
imul
aam
push
pop
jmp
cmc
mov
push
mov
sbb
adc
pushl
enter
xor
stos
jmp
mov
jecxz
dec
pop
inc
ss
mov
mov
pop
hlt
ret
add
addl
sarb
cmp
cmp
add
adc
pop
les
sbb
adc
pop
or
dec
or
insb
sub
sub
jb
xor
cltd
adc
xor
pop
cmp
push
ficoml
arpl
cmp
jl
notb
push
inc
xor
pop
push
jnp
loope
sbb
adc
and
mov
mov
sti
pop
xchg
push
xlat
scas
mov
pop
cltd
jbe
roll
mov
sbb
inc
push
aad
push
add
add
jbe
push
push
jl
or
stos
mov
pop
fisubrl
push
mov
push
pushl
mov
ret
adc
inc
faddl
mov
fwait
inc
pop
sub
pop
push
or
shr
push
sarl
xor
movsb
xorl
test
or
pop
leave
cmp
pop
adc
jo
adc
mov
cwtl
and
mov
rclb
add
add
daa
sub
ret
hlt
mov
add
cmp
inc
jb
xlat
je
xorl
fistpll
pop
jb
xor
cmp
dec
aas
pop
mov
clc
pop
jns
or
inc
dec
xchg
inc
pop
movsb
je
leave
pop
and
loope
cltd
and
jg
iret
adc
int3
fcoms
inc
shlb
iret
fistpll
sub
xor
bound
push
ret
push
mov
push
jp
out
pop
mov
or
dec
dec
sbb
dec
js
pushf
mov
les
fcoml
jbe
cmpsl
adc
loopne
aad
sub
or
sub
fisubrs
push
xlat
je
fimull
in
pop
jo
push
push
rorb
mov
jl
xor
fwait
adc
mov
adc
mov
dec
jge
add
imul
inc
jl
mov
loope
dec
and
inc
ss
or
aaa
pminub
adc
push
mov
pop
mov
lods
push
push
dec
or
lret
hlt
sub
adc
sbb
and
or
clc
inc
lcall
cld
inc
adc
or
addb
pop
icebp
add
bound
scas
popl
test
cmp
mov
mov
arpl
sub
adc
loopne
mov
outsb
leave
inc
icebp
sbb
push
pop
rol
ss
add
lret
sahf
fildll
mov
ja
icebp
jge
out
sub
mov
lcall
jno
ret
push
rcr
test
je
lcall
or
idivl
push
outsb
push
pushl
xchg
sbb
popa
inc
pop
push
mov
or
add
inc
pop
add
jl
push
test
jp
adc
jmp
into
fsub
mulb
cmpsl
xor
movsb
popa
xchg
in
dec
js
mov
xchg
xor
add
sub
loop
orl
loop
mov
mov
or
subb
dec
xor
mov
andb
cli
adc
lods
lcall
popf
push
dec
fcomps
movsb
sbb
adc
mov
jecxz
frstor
xchg
mov
ret
pop
rorb
pop
mov
jmp
sahf
jl
add
add
int3
bound
sbb
loop
jmp
push
jnp
mov
push
lahf
dec
testb
xor
mov
mov
or
jge
jle
xor
xor
mov
mov
push
mov
push
push
add
jmp
mov
and
xlat
add
shrb
lods
or
add
xchg
pop
pop
imul
pop
sbb
mov
or
mov
adc
cmp
add
orb
decl
inc
pop
loop
jne
test
cwtl
mov
das
imul
add
lock
mov
add
add
add
jge
adc
pop
sbb
pop
test
mov
mov
arpl
push
lret
sbb
fstpt
push
jp
inc
or
out
push
or
pop
addr16
sahf
sti
push
and
dec
inc
pushf
out
inc
inc
xchg
jp
mov
mov
jnp
add
jp
rolb
fldl
sbb
rcl
cmpb
fwait
lock
adc
or
inc
inc
enter
dec
or
shlb
push
jmp
mov
push
adc
fildl
xor
mov
pop
sbb
jo
and
sub
movsl
or
cmp
fdivs
outsb
jl
loope
xchg
pop
push
cwtl
call
pusha
or
sbb
clc
sbb
arpl
jae
jnp
adc
mov
jne
cmp
outsb
test
call
push
or
or
fistps
inc
ljmp
pusha
pop
cs
adc
push
mov
push
jbe
out
arpl
mov
mov
jmp
movb
shrl
rolb
in
rorb
jne
popa
popa
pop
cmpb
sub
lods
jecxz
or
fbstp
or
subb
paddsw
xchg
mov
cmpsb
xor
clc
movb
shlb
sahf
inc
fsubl
adc
je
pop
cmc
faddl
lret
mov
jmp
mov
aam
cmc
test
into
and
adc
jp
mov
lret
mov
mov
pop
idivb
fsts
adc
loop
inc
add
jbe
addb
and
mov
shlb
js
iret
xchg
xchg
sbbb
out
js
add
push
mov
or
cltd
fcoml
push
jae
hlt
mov
mov
sub
fdivl
mov
xchg
push
test
scas
xor
fisubs
aad
faddl
test
cmpsl
out
loope
xor
call
sbb
xlat
aam
add
andl
push
add
lahf
daa
inc
or
icebp
xor
inc
jne
jnp
and
jo
fdivrs
mov
call
push
rorb
outsl
cmp
xchg
mov
je
stos
sub
mov
fistps
test
loopne
and
push
rolb
popa
push
push
lcall
repnz
clc
jg
add
dec
pop
inc
daa
nop
jge
sbb
xor
xchg
adcb
push
das
test
xor
icebp
daa
push
add
ss
xor
pop
jne
dec
inc
mov
stc
orb
mov
mov
push
push
testb
add
movsl
sbb
mov
push
xor
fwait
or
sbb
sbb
mov
push
sbb
mov
push
xor
adc
lcall
sub
outsb
sbb
cmp
ss
aad
sub
sbb
or
inc
sbb
gs
pop
sub
orl
sbb
lcall
test
or
test
push
andl
inc
push
test
add
out
sub
faddp
inc
adc
xor
xor
xor
xor
pop
sbb
test
cwtl
sbb
shlb
sbb
loopne
cmp
repz
push
push
shlb
int
push
or
jge
adc
dec
or
fcomps
ljmp
fmul
mov
test
sbb
adc
out
add
add
adc
scas
dec
loopne
inc
mov
pop
xor
pop
sbb
inc
rorb
sar
lods
add
clc
jl
scas
adc
mov
dec
mov
incl
out
dec
xchg
adc
xchg
push
pop
xchg
or
addb
mov
decb
daa
add
dec
xchg
push
es
cmp
jle
pop
push
pop
push
jbe
and
fisttpl
inc
stos
lret
adc
lods
lods
rorb
cmp
bswap
out
inc
jo
dec
sub
and
movsl
mov
push
sbb
jns
call
dec
rolb
push
add
loopne
dec
js
adc
cmp
jb
xor
jmp
mov
inc
out
inc
inc
je
je
lock
fs
mov
shll
mov
insb
mov
cmp
cmp
and
xorb
xor
ss
mov
dec
jge
inc
mov
sub
push
jo
or
adc
mov
xchg
adc
push
dec
xchg
fistl
cmp
cmp
push
dec
xchg
mov
imul
and
les
push
dec
fidivl
pop
int
lods
and
adc
inc
ficoml
add
dec
mov
jbe
jne
and
dec
inc
rcrb
aaa
jl
jle
pop
test
mov
pusha
or
inc
push
or
pop
xor
clc
add
test
mov
mov
jbe
dec
cmp
cmp
cs
outsb
dec
andl
adc
cli
decl
rclb
movl
push
mov
ss
jmp
in
cwtl
cld
inc
hlt
add
mov
push
inc
hlt
push
sub
add
push
xor
adc
sbbb
clc
mov
adc
cltd
lods
inc
cmc
and
ret
push
or
mov
mov
das
ret
adc
andl
fnstsw
lea
inc
cmovbe
enter
cmp
and
sub
xor
mov
push
or
ret
push
cmp
ds
cmp
sub
rorb
loope
es
lea
push
push
push
sub
test
mov
in
and
sbb
add
loope
inc
inc
or
or
leave
clc
add
popf
push
dec
push
or
add
out
pop
sbb
add
push
test
js
movsl
mov
xchg
jecxz
sbb
push
lret
data16
subl
test
dec
std
push
push
push
test
insl
xor
dec
dec
push
jb
mov
or
add
clc
jb
loope
addl
into
fbstp
dec
mov
or
out
cs
xlat
rcrb
mov
pop
adc
out
pop
jl
nop
test
pop
add
popf
inc
clc
sbb
in
xchg
sbb
fcoms
in
dec
repz
add
pop
ret
bound
adc
jb
mov
es
xor
mov
jb
sahf
or
add
xchg
dec
or
ds
mov
fstps
bound
or
or
adc
outsb
aad
das
jb
mov
sub
je
or
insb
test
nop
push
push
lea
mov
xor
xor
mov
and
mov
dec
and
mov
daa
fistpll
mov
cli
pop
ss
mov
add
adc
sub
dec
push
outsl
daa
pop
add
add
and
nop
dec
xchg
or
decl
rorb
xchg
sub
dec
mov
mov
cs
leave
jg
jnp
or
shlb
fldt
jmp
sub
inc
sub
in
stos
push
inc
dec
or
add
mov
push
pop
scas
cmp
pop
jge
sbb
and
lcall
outsl
ss
into
jne
movswl
sub
lds
xor
test
leave
sub
test
shrb
dec
repnz
add
loopne
mov
out
cmp
pop
int3
inc
data16
aas
loopne
fsub
sar
push
push
push
push
mov
inc
int3
es
fs
sub
sub
adc
xchg
hlt
insb
pop
imul
mov
sub
sbb
out
push
or
mov
push
push
adc
mov
add
xchg
inc
mov
dec
dec
jl
int
dec
enter
fildll
mov
mov
ljmp
sbb
dec
test
jbe
fld
std
fstp
jmp
mov
and
cmpb
and
loopne
imulb
pop
push
lea
ljmp
dec
scas
call
xor
shll
cmp
add
and
add
pop
mov
shrl
rorl
adc
adc
adcb
push
in
in
sub
cmp
mov
je
pop
and
or
cmp
adc
mov
or
push
insb
dec
daa
pusha
cld
mov
inc
mov
or
xor
pop
loope
push
inc
or
jle
je
xor
ret
inc
or
add
push
sub
jmp
and
jo
push
inc
inc
pop
mov
jle
add
test
je
das
mov
pop
sub
in
mov
pusha
movsl
jge
dec
iret
inc
push
xor
test
enter
adcb
and
inc
add
adc
js
fdivrl
mov
xchg
inc
cmp
aaa
inc
dec
sub
ja
fwait
outsb
pusha
mov
jo
adc
or
push
mov
pop
add
push
mov
addl
cmpsb
mov
dec
pop
push
sbb
lret
gs
xchg
push
enter
inc
or
adc
or
mov
cmp
inc
cmp
jle
mov
scas
mov
inc
loop
xor
jp
fnsave
xlat
mov
sbb
or
push
rcrb
sahf
dec
add
jecxz
xor
add
cmp
sub
aam
fsubp
xchg
mov
fwait
sbb
in
movl
test
pop
xchg
or
jo
call
sub
fs
inc
lea
rclb
push
mov
mov
pop
add
ret
js
inc
popa
inc
popa
xchg
dec
push
jl
mov
push
popf
inc
push
mov
jmp
fs
or
pop
imul
dec
sub
cmp
add
push
in
or
imul
xchg
dec
leave
dec
push
add
xchg
adc
adc
push
imulb
mov
rcr
pop
addr16
cmpsl
xchg
and
fildl
loopne
ror
sub
mov
xor
adc
cmp
xor
out
les
int3
add
imul
push
jecxz
inc
adc
lcall
cmp
shlb
cmpb
jb
mov
aaa
insb
dec
adc
fldl
ja
shlb
loopne
sbb
add
adc
int3
mov
pop
xor
inc
dec
clc
add
mov
push
xor
add
mov
mov
je
push
dec
or
dec
xor
pop
frstor
and
add
cmc
add
int3
popa
lds
lcall
mov
leave
mov
lea
imul
mov
in
mov
mov
mov
mov
xchg
or
sub
mov
xor
bound
lea
push
movsl
popf
movsl
movsl
mov
cmp
imul
or
rclb
mov
push
mov
cmp
add
pop
adcl
push
mov
enter
stos
sub
add
loopne
sbb
mov
or
test
xor
pop
js
jns
mov
mov
mov
stos
push
lcall
mov
mov
imul
test
pusha
mov
shlb
mov
or
jge
add
bound
sbb
insl
cld
xlat
int3
hlt
push
dec
pop
xchg
xor
icebp
inc
outsl
add
aas
stc
mov
lcall
call
inc
stc
sub
lock
mov
adc
pop
xorl
ja
pop
xchg
mov
cmp
loopne
mov
jo
rolb
jnp
dec
or
test
inc
or
leave
xchg
aad
into
shl
jl
loopne
or
and
adc
int3
and
mov
rclb
test
lahf
rolb
subl
pop
cmp
mov
jo
adc
call
or
mov
jmp
ja
push
mov
push
xor
fsubs
push
and
xor
movsb
xchg
push
dec
sbb
call
mov
add
inc
add
pop
shl
je
jmp
mov
xor
cmp
fmul
je
push
inc
pop
or
repnz
fisubl
lock
lock
xchg
inc
or
pop
nop
mov
faddl
cmpb
xorb
xor
fbld
call
cmc
test
sbbb
sbb
repnz
or
shll
push
or
mov
add
jl
cmp
daa
sbb
xor
mov
mov
or
dec
inc
cmp
push
xchg
dec
and
add
jo
sbb
xchg
and
xchg
dec
les
inc
adc
popa
cmp
mov
test
faddl
in
adcb
testb
mov
fldl
inc
cmp
jle
xor
adc
cmp
or
fmull
jno
jne
jns
xor
mov
adc
stc
lret
mov
cmp
das
or
and
loopne
sbb
lret
mov
and
outsb
ret
push
addr16
add
sbb
lods
xor
adc
dec
inc
push
or
or
inc
ljmp
loope
test
decl
pushl
push
add
decl
test
or
dec
and
out
cli
pop
and
loop
icebp
je
sub
pop
ret
pushf
orl
sbb
cmp
xor
sbb
adc
cs
add
add
add
dec
pop
daa
rorb
sub
cmp
adc
jl
cmpl
or
push
fcomip
test
fadds
jl
jbe
push
les
outsb
into
es
or
mov
ret
daa
shl
push
andl
pushl
or
sub
xchg
lea
and
and
pusha
les
or
inc
scas
and
or
push
or
loopne
lock
adc
pop
cmp
and
data16
fildll
adc
inc
or
cs
iret
sti
mov
daa
inc
sbb
jno
or
mov
jo
push
mov
cld
sbb
mov
mov
push
or
add
lods
clc
cmp
sbb
cld
cmp
or
mov
mov
push
push
das
ret
add
imul
pop
add
cmp
ret
xchg
mov
out
sbb
les
notl
ret
js
jecxz
mov
xor
or
jecxz
inc
or
enter
es
pop
xchg
jmp
mov
xor
sub
out
jp
jb,pn
xor
adc
jae
adc
pushf
jle
dec
aaa
adc
add
or
or
iret
jg
mov
divl
cmp
je
or
je
add
sub
loopne
and
int3
decb
adc
dec
mov
dec
inc
xchg
nop
jnp
cmpsl
jne
pop
dec
add
pop
push
scas
inc
testl
and
sub
nop
lcall
mov
add
add
push
push
ja
divb
jle
ljmp
and
sub
sarb
cmp
adc
movsl
subl
pusha
addl
dec
push
in
sbb
imul
je
mov
jbe
and
sbb
popf
xor
xor
sahf
sub
xor
aam
mov
push
or
bound
incl
dec
ja
movzbl
sub
sbb
inc
ss
icebp
jae
jmp
loopne
push
adc
adc
jmp
mov
or
and
jmp
adc
xchg
sub
outsb
pop
pop
adc
pop
or
adc
dec
xor
fstpt
fs
push
pusha
repz
repz
push
inc
inc
stos
fcoms
cmp
push
adc
add
add
ljmp
jecxz
sbb
sub
lret
mov
mull
ja
dec
je
adcb
roll
popl
add
mov
out
aam
jne
inc
and
in
lahf
push
add
jmp
es
lret
xchg
lock
adc
jecxz
dec
xchg
dec
add
xor
mov
and
shrb
cmp
and
orb
pop
je
cmp
mov
or
sub
add
jmp
clc
test
adc
sub
test
inc
sub
mov
sbb
push
push
or
dec
ret
fldpi
or
pop
cmp
mov
hlt
movsl
sbb
mulb
cmp
mov
fcom
mov
inc
dec
pop
push
cmp
pop
push
imul
es
or
jne
sti
xchg
movsb
sbb
xor
jbe
mov
push
inc
or
or
cwtl
adc
add
sbb
push
out
cld
outsb
jo
cmp
fsubrs
sbb
test
or
ja
mov
jo
loopne
adc
adc
add
int
xorl
xor
mov
cmpsb
sbb
or
testb
mov
mov
loope
add
ret
sbbb
movl
outsl
adc
jmp
or
orl
mov
pop
scas
in
pop
add
pushf
pushf
aam
pop
mov
gs
or
add
adc
mov
ds
add
mov
adc
repnz
sbb
das
xor
push
ret
mov
cmp
adc
add
or
fdivrl
push
add
inc
push
xchg
sub
gs
lret
jno
sub
mov
cmp
cs
pop
and
lods
test
sbb
arpl
jbe
push
inc
pop
or
ja
pop
ja
sub
lods
sbb
or
mov
int3
dec
ret
jmp
sahf
push
cmp
mov
out
xchg
popf
inc
and
xchg
lods
mov
arpl
rol
mov
in
add
pop
mov
rcrb
and
fadds
loope
and
xchg
pop
dec
pop
sub
push
movd
popf
jb
stos
push
jb
sub
pop
inc
shlb
shrb
add
xchg
dec
mov
adc
lods
aam
adc
mull
test
push
out
and
mov
xor
call
xor
xor
xchg
loope
mov
xor
dec
cli
ss
dec
jecxz
enter
jnp
inc
mov
js
lcall
popa
pop
mov
push
cmp
fcom
add
mov
imul
inc
mov
cwtl
push
cmp
push
sarb
add
push
arpl
clc
mov
inc
test
scas
add
jns
daa
cmp
mov
pop
fadd
xchg
cmp
mov
mov
and
cmp
mov
cmp
push
jne
lret
mov
sahf
jne
sbb
sbb
pop
sub
cwtl
add
and
dec
call
add
add
jb
nop
xchg
adc
push
lea
and
lods
movsb
decl
xchg
rclb
test
jecxz
pushf
sub
dec
pop
sub
shrb
push
xlat
dec
sbb
roll
jge
push
inc
je
sub
fiadds
test
mov
push
cmp
repnz
ficoms
push
shlb
sti
pushf
imul
add
push
jne
test
daa
add
jp
push
or
inc
pcmpeqb
push
inc
rolb
sqrtps
add
dec
and
out
cmp
adc
mov
repz
push
jmp
or
xchg
adc
push
mov
xchg
test
lock
push
xchg
aad
push
inc
dec
sbb
or
fnstenv
mov
out
mov
mov
ljmp
push
fwait
lock
gs
xlat
xor
fildl
or
jg
adc
push
mov
xor
pushf
sbb
mov
cltd
cwtl
mov
sbb
pop
sbbb
loopne
inc
push
loop
int3
or
push
push
mov
xor
add
jno
ja
or
pushf
mov
pusha
mul
push
shrb
inc
mov
push
adc
push
or
cmpl
movsl
test
pop
ss
add
cld
cmpl
mov
stos
push
je
jmp
sbb
rorb
scas
mov
pop
push
js
test
sbb
mov
out
pushl
movsb
or
sub
inc
and
push
inc
xlat
aad
inc
cmp
pop
xor
cmpsb
and
lea
add
ja
fnstenv
je
jo
inc
repz
jnp
mov
or
push
and
and
sbb
clc
addb
adc
ret
add
xchg
mov
gs
mov
lea
cmp
adc
push
push
inc
seto
lods
mov
popa
shr
js
adc
pop
cmp
and
aam
or
pop
jmp
or
sbb
jecxz
int
cmpsb
shlb
mov
addb
popa
cmpsb
sub
stos
scas
add
sbb
hlt
loope
cltd
xchg
add
ja
outsl
add
push
and
adc
push
xchg
add
sarl
push
xchg
bnd
movsb
add
mov
adc
mull
or
pop
pop
adc
mov
pop
addb
addr16
sub
lock
add
and
sub
sbbl
mov
or
movsl
xchg
adc
inc
adc
jae
sbb
sbb
xchg
or
insb
ja
add
cmpb
or
mov
mov
mov
lahf
call
or
pop
hlt
sti
pop
cmp
imul
sbb
push
add
and
rcr
mov
jge
movsb
xor
mov
push
and
loope
popa
pop
sub
pop
rcrb
ret
pop
or
and
push
dec
out
add
fsub
xorb
push
sub
jle
fs
mov
sbb
addb
or
sti
sub
roll
mov
xchg
cmpsl
xchg
adc
rolb
imul
fnstcw
pop
mov
pop
push
or
addl
dec
in
ja
shll
mov
add
call
aaa
movsb
mov
pop
clc
xor
test
mov
sub
or
testb
sbb
adc
je
or
adcl
fwait
shrb
sub
xchg
lea
fstl
das
test
imul
or
sbb
pop
mov
mov
and
mov
jge
sub
add
inc
or
xchg
test
jne
fsubs
js
rcrb
sbb
xor
push
and
and
sbb
pop
jnp
fadds
hlt
dec
test
inc
push
push
push
loopne
add
inc
push
addb
js
pop
mov
add
imul
add
inc
dec
test
fwait
or
xor
aas
jb
dec
dec
add
or
push
pop
add
nopl
pop
lock
rorb
fcomi
push
or
fdiv
ss
cmovge
faddl
aaa
add
or
lods
mov
inc
ja
xor
mov
cmp
pop
inc
lea
push
mov
xlat
add
pop
adc
add
push
cmp
and
sarl
popf
jp
xchg
mov
loopne
gs
mov
cmc
or
pushf
ds
mov
pop
adc
out
push
mov
popl
imul
mov
popf
hlt
push
aam
ficompl
push
sarl
pop
pop
je
fs
pop
cmp
nop
pushf
clc
jg
push
inc
icebp
adc
popf
add
push
and
inc
push
or
mov
in
push
jae
add
movsl
movsl
sbb
cmovae
xchg
call
mov
or
fbld
add
inc
mov
xchg
int
test
inc
mov
in
push
xchg
js
andb
jl
or
or
mov
sbb
xor
mov
add
or
pop
shlb
mov
or
lret
in
sbb
call
sarb
xchg
enter
adc
or
and
lods
iret
dec
mov
xchg
mov
scas
jb
push
nop
ds
mov
or
arpl
add
fildll
mov
push
cmp
testl
testb
lock
push
push
aam
or
pushf
push
push
push
or
push
jb
cmp
jge
dec
pop
push
xor
dec
cwtl
push
push
out
push
insb
jle
popa
jg
mov
cmpl
in
add
lahf
adc
ss
sbb
sbb
add
dec
pop
dec
not
loopne
and
mov
or
mov
clc
ja
outsl
fnclex
ret
ret
mov
add
jle
imull
adc
lods
jle
sub
lods
push
jns
jge
xor
push
mov
mov
clc
mov
lea
mov
push
push
fstcw
addw
adc
adc
jg
mov
adc
int3
jle
pop
add
shlb
cmp
orb
push
adc
icebp
dec
pop
cmp
jmp
out
fucom
xchg
fs
fs
push
mov
inc
cmp
sub
test
lcall
xor
sarl
xor
lock
pop
mov
sub
cmovno
mov
add
enter
jmp
mov
and
loope
enter
mov
xchg
inc
je
int3
push
dec
dec
mov
mov
outsb
fsave
ja
dec
pop
frstor
fldl
adc
add
jg
fs
sub
cmpsb
insb
mov
data16
xchg
aas
hlt
mov
movsb
sbb
je
add
or
mov
in
pop
imull
jl,pt
rorl
cs
je
mov
ret
xchg
fldz
and
out
sub
fld1
daa
dec
or
shll
add
cmp
jbe
sub
fcomp
repnz
mov
mov
xor
inc
sub
fldenv
add
ret
insb
mov
cmp
subl
dec
fs
testb
and
cmp
popa
scas
fldl
jecxz
xchg
rclb
pop
sub
andl
jle
imul
sbb
inc
xor
inc
jo
sbb
lcall
add
mov
jnp
push
rcl
shl
jmp
inc
dec
xlat
scas
pop
add
clc
test
push
mov
sbb
inc
add
xlat
mov
sbb
jmp
pop
push
jge
dec
sti
push
pop
xor
aaa
fsubl
in
es
lahf
mov
push
adc
divps
jbe
cmpl
lods
pushl
sahf
jp
fstp
js
in
push
jecxz
mov
sub
notl
adc
mov
pushf
cmp
ja
lcall
and
pop
pop
pop
jmp
and
mov
subb
push
adc
push
sub
dec
movsl
xor
pop
jo
or
jo
xchg
pop
jmp
fcomps
mov
cmp
imul
pop
lahf
push
jg
vpmaxsw
and
ret
and
push
jge
and
xchg
xchg
jne
sarb
fwait
lret
pop
xor
fwait
in
fimull
pop
adc
jg
adc
jo
out
pop
enter
call
dec
shlb
shll
jmp
pop
dec
sub
mov
lods
push
loopne
jmp
lock
test
adc
add
fs
or
push
idivl
ret
rol
mov
ret
nop
add
xorb
cmp
add
or
jne
stos
je
sbb
mov
imul
or
jle
or
dec
clc
add
ret
push
aad
mov
add
jle
hlt
and
in
mov
pop
mov
mov
cmc
xor
gs
lahf
jmp
xor
xchg
add
push
cmp
arpl
sub
jnp
cmp
das
push
sbb
in
pop
and
cmovle
add
rol
incl
xchg
mov
rorb
push
add
data16
jbe
loope
or
mov
xchg
mov
jmp
jo
notb
mov
and
or
test
test
daa
dec
xchg
and
outsl
test
adc
xor
mov
or
sbb
cmp
scas
ja
sahf
cld
sbb
pusha
xchg
xchg
mov
and
xchg
fs
sub
cmp
out
cmp
push
gs
sbb
lock
iret
push
jbe
in
test
enter
pop
roll
test
int3
jecxz
or
mov
out
shr
pop
call
divb
movsb
sbbl
add
fadds
cmc
mov
dec
rcrb
test
or
cmpsl
push
hlt
clc
fwait
cmp
xor
jo
mov
insl
clc
cmp
fdivrs
sub
aas
rcrb
or
pop
sub
push
es
int3
add
pop
jnp
imul
fsubrs
dec
sbb
and
and
loopne
in
lods
rorl
fwait
loope
jbe
push
or
jo
sbb
shlb
imul
sub
mov
in
and
mov
pushf
jle
xchg
rorb
pop
ja
ret
test
mov
jl
adcb
in
filds
add
cmp
or
add
cmp
inc
dec
dec
push
mov
lret
adc
mov
out
inc
cmp
jbe
xchg
sbbb
push
lods
int3
in
ljmp
lcall
xor
imull
push
sub
mov
sbb
add
dec
push
push
loope
pushl
inc
das
test
rcr
cs
and
sub
loope
push
stos
or
mov
push
fstpt
jl
add
loope
incl
sbb
ret
popl
xchg
call
mov
jns
shl
xchg
lea
cmp
cmp
inc
add
movsb
inc
jmp
dec
enter
jecxz
add
pop
aam
clc
imul
das
sbb
mov
jle
movzbl
mov
lret
lret
xor
add
add
in
mov
inc
jmp
lods
lods
outsl
inc
lods
and
jg
iret
fldl
cmp
add
imul
inc
jns
cltd
and
std
and
mov
aaa
inc
sub
jne
xchg
fistpl
xor
xchg
add
orl
data16
push
clc
imul
fwait
mov
lea
popa
jmp
cmp
ret
jne
neg
jle
js
jge
sbb
pop
ret
push
inc
add
push
add
nop
xor
in
xor
sub
sub
addb
adc
push
push
loope
test
insl
mov
rorl
jo
sub
sahf
rcrb
jmp
adc
rorl
push
or
push
fimuls
dec
jmp
push
or
mov
adc
rcrl
loope
push
or
clc
lods
inc
divl
loope
rcrl
pop
sahf
inc
movsl
cmp
ja
popa
addb
int3
xor
test
inc
scas
or
test
xchg
roll
in
dec
cli
testb
push
jmp
dec
cmp
outsb
gs
xor
inc
inc
push
or
rclb
insb
repz
push
ret
inc
dec
adc
adc
pop
bound
aas
dec
push
inc
mov
push
jne
mov
inc
in
fldenv
mov
mov
sub
ret
repz
mov
add
or
or
xor
js
nop
in
pop
in
mov
sti
hlt
lea
clc
pop
fwait
xor
push
adc
xorb
adc
push
cmpb
imul
addb
or
xorb
or
and
pop
mov
mov
jmp
fbstp
lahf
add
or
mov
clc
mov
adc
outsb
mov
mov
inc
dec
xor
inc
mov
lds
inc
hlt
testb
add
ds
imul
popa
hlt
jne
add
lods
adc
add
or
lock
or
mov
movsb
or
mov
ljmp
sahf
sub
pop
pop
jecxz
in
sbb
jno
sub
add
mov
add
adc
inc
ds
movsb
repnz
fld
sbb
sbb
sbb
and
or
push
jne,pn
inc
jg
push
dec
pushf
xor
push
shr
inc
jg
insb
fcoml
xor
rorl
rcr
or
sbb
lock
imul
mov
add
jb
cmp
or
cmp
xor
in
jbe
dec
cwtl
mov
dec
dec
fsub
sbb
inc
and
pop
leave
adc
insb
out
mov
movsl
ss
xor
push
pop
sbb
pop
and
pop
add
cmp
push
dec
jns
jmp
popa
adc
pop
add
sub
sbb
adc
cmp
adc
add
adc
push
push
inc
pusha
iret
or
lcall
sbb
adc
add
mov
dec
adc
xchg
adc
pop
cmp
sub
movsl
mov
push
loop
xor
mov
push
cs
imull
add
adc
cmp
pusha
and
inc
add
nop
test
lcall
lods
adc
psubw
dec
add
nop
dec
roll
add
jmp
jg
fisttps
out
sahf
out
les
jno
pushf
jg
mov
sbb
cmp
repz
in
lock
lock
repz
clc
clc
cld
cld
lret
adc
ret
inc
adc
loope
xor
or
inc
cs
and
pusha
int
pop
repz
cmp
sbb
lea
xchg
sbb
jl
cld
jmp
push
cld
out
xorb
fsts
sbb
xor
cwtl
push
mov
xchg
je
xor
dec
mov
lods
mov
cmpsb
and
xchg
aas
inc
out
add
add
pop
mov
dec
push
jne
cwtl
ss
add
pop
iret
jnp
jnp
mov
or
push
inc
dec
mov
repz
pop
fs
das
iret
repz
sbb
sbb
adc
cmp
repz
adc
or
and
repz
push
jl
fwait
aas
nop
or
das
js
lcall
adc
pop
daa
outsl
fildl
movsb
sbb
push
jl
ljmp
inc
neg
imulb
sbb
scas
pushf
cmp
out
adc
mov
adc
add
clc
jg
push
inc
or
mov
inc
test
ja
andb
dec
push
ljmp
dec
dec
sub
repnz
push
stos
pop
out
jge
or
add
push
cmp
xor
les
adc
xor
mov
or
or
jae
hlt
loopne
sbbl
cmp
push
sub
sarb
push
sub
int3
or
jmp
push
sub
push
mov
sbb
mov
or
jb
push
mov
xchg
cli
jbe
add
add
push
dec
rcl
nop
aam
lret
ja
dec
ljmp
fimuls
and
dec
loopne
dec
inc
ficoms
jb
jg
push
call
stc
inc
jae
or
jae
shrd
rorl
shr
sbb
loope
shr
outsb
adc
push
or
inc
int3
pop
jle
rorb
dec
ss
push
mov
add
add
push
cmp
push
scas
adc
je
scas
sub
and
mov
sbb
push
pop
imul
shr
xchg
daa
cmp
mov
push
stos
mov
mov
inc
sbb
mov
mov
mov
inc
lods
test
sub
sbb
add
stos
or
xchg
sbb
or
or
lock
or
sub
fsts
xchg
sbb
enter
jne
jmp
clc
inc
test
les
sub
jne
pop
cmp
jecxz
je
or
cld
gs
cmp
dec
jne
fsubl
adc
adc
rcr
cmpsl
jge
je
insb
xor
in
or
cli
push
aam
dec
or
adc
scas
sbb
test
dec
mov
lods
icebp
add
clc
inc
popf
ficoms
lcall
fdivrp
fistl
add
jb
sbb
mov
push
add
cmpsl
mov
or
cmp
xchg
clc
pusha
jne
inc
xorl
stos
loop
imul
cmp
out
pop
mov
xor
es
mov
aam
xor
or
and
in
adc
jmp
arpl
add
sbb
sub
aam
xchg
mov
cs
loopne
jbe
dec
cmpsb
and
sub
test
sbb
sbb
mov
scas
cmp
clc
or
les
insb
shrl
xor
cltd
xorl
jecxz
sub
pop
loopne
and
loope
mov
cmp
adc
mov
fiadds
dec
dec
insl
sbb
loope
aaa
inc
pusha
pushf
mov
mov
mov
cmpsl
std
xchg
sub
jo
mov
push
into
inc
pop
push
cmp
lock
add
cmp
ja
xor
jp
mov
xchg
test
add
sahf
adc
cwtl
mov
xor
add
and
push
jae
mov
add
mov
cmpsb
pop
and
clc
scas
imul
push
pop
ljmp
int3
in
and
mov
xor
add
lcall
jle
loopne
adc
dec
test
outsb
ja
mov
es
cmp
add
loopne
rolb
pushf
dec
lea
aaa
add
adc
or
cwtl
sarb
inc
cmp
pop
xchg
pop
repz
inc
cmp
mov
adc
cmp
sti
mov
clc
rcrb
ret
clc
xchg
fiadds
test
pop
int
in
inc
inc
or
stos
popf
mov
in
mov
daa
xchg
push
mov
testl
sub
xchg
add
or
and
popf
jae
push
cmp
fmuls
ret
xor
popf
jne
add
adc
sub
aaa
mov
rclb
add
mov
pusha
mov
cmp
ret
cmp
mov
cld
jne
push
jno
xor
frstor
adc
in
pop
outsl
push
cltd
dec
adc
clc
jp
push
sub
add
pop
sub
push
push
dec
push
xlat
ds
push
aam
mov
push
je
add
jle
adc
lret
adc
sub
test
pop
and
xchg
cmp
dec
mov
outsl
mov
cmpl
jecxz
nop
loopne
mov
and
cli
sub
or
pop
enter
push
pop
pop
xor
test
hlt
daa
jecxz
jne
adc
in
inc
dec
or
andb
mov
mov
push
daa
xor
mov
inc
outsl
xorb
popl
popf
or
xchg
cmp
adc
mov
jmp
inc
sbb
loopne
push
imul
lock
mov
loop
imul
mov
cmp
je
inc
sub
hlt
add
push
shrl
or
cmc
sub
out
push
sub
lock
std
fnsave
add
cmp
jne
mov
sti
imul
mov
shll
fucomip
mov
push
adc
ds
push
adc
add
or
cmp
scas
lret
push
cvtps2pi
xor
jo
das
sbb
pop
sub
cli
sub
mov
and
pop
cmp
je
cmp
ja
push
pop
sub
add
call
cmp
loopne
cmp
or
cmp
sbb
je
adc
aaa
or
test
xchg
mov
fs
lea
outsb
leave
or
mov
dec
sbb
pop
dec
stos
cmc
sbb
dec
jnp
or
fnstenv
addr16
jne
or
push
add
adc
mov
mov
data16
lret
ds
xor
jle
xor
dec
sbb
test
and
cmp
xor
cmp
or
clc
inc
cld
cmp
je
outsb
daa
add
cs
fdivl
out
and
sti
jns
adc
xchg
pop
arpl
jns
inc
outsb
or
cld
rcll
jbe
jmp
lock
insb
aaa
inc
neg
dec
mov
std
adc
movl
cmp
js
mov
in
jmp
fdivrl
sbb
xor
fs
testb
push
and
push
in
je
es
xchg
push
push
pusha
divb
test
add
icebp
inc
jne
add
jecxz
cltd
imull
subl
pop
mov
add
sub
or
jno
or
mov
imul
jge
push
push
mov
mov
lret
iret
cmp
shl
lea
jno
add
in
push
xchg
hlt
fmull
add
popa
dec
pop
xchg
adc
shl
sti
unpckhps
mov
test
jmp
mov
inc
xchg
in
cmp
dec
pop
shl
dec
shll
mov
add
js
add
xchg
and
cmc
mov
insb
lods
mov
and
fwait
jg
popa
loop
imul
dec
or
adc
sbb
cmp
arpl
shlb
jle
outsb
xchg
or
add
or
or
or
cmp
dec
jmp
cmpsb
xchg
stos
fwait
mov
xchg
je
dec
cld
push
and
jmp
repz
les
adc
cmp
enter
aaa
xor
jb
scas
sub
popa
mov
mov
jmp
adc
inc
and
xor
or
jmp
ret
mov
or
mov
jmp
dec
or
wbinvd
inc
repnz
push
dec
jne
cld
fwait
adc
jmp
andb
dec
je
mov
sahf
jp
push
jbe
test
adc
outsl
add
sub
rolb
test
adc
pop
dec
push
sbb
lea
cmp
or
sbb
and
inc
and
je
inc
dec
adc
lock
inc
dec
fdivrs
sbb
fisubrs
or
mov
add
adc
jb
mov
sti
add
jmp
popf
and
mov
fisubrl
or
test
push
adc
adc
ret
addr16
pop
inc
xchg
popf
jne
xchg
out
mov
push
inc
add
mov
add
inc
andb
jle
mov
loopne
cmp
jae
sbb
ss
mov
push
and
bound
mov
cli
sbbl
xor
push
aam
mov
mov
or
dec
fwait
jg
mov
clc
les
inc
cmp
sbb
and
add
fiadds
pusha
sbb
fimull
mov
inc
js
add
inc
loop
pop
add
jmp
es
popa
movl
fucom
nop
into
daa
or
fdivrs
fbstp
adc
cmp
stos
sbb
je
shrl
pop
lea
push
sub
popf
jmp
lock
cli
adc
cmc
sub
xchg
pop
and
jge
push
adc
xor
jg
cmp
inc
mov
call
push
cs
and
scas
cmp
in
adc
cmp
mov
std
or
inc
lea
xor
jno
mov
add
lcall
pop
pop
or
cmp
fdivs
pop
adc
mov
xchg
dec
push
inc
adc
or
clc
negb
push
sub
lock
int
mov
sbb
leave
aam
orl
jle
xor
jne
mov
and
pop
aaa
enter
mov
or
aad
lds
test
ja
mov
fsubrs
mov
mov
lock
push
mov
mov
sub
fdiv
call
cld
dec
pop
cmp
pop
mov
test
mov
movsl
mov
lock
cmp
jne
ds
loope
in
inc
jo
test
bound
pushf
or
mov
scas
lods
and
je
iret
lahf
adc
xor
fdivs
add
pop
jb
mov
call
xchg
push
jo
push
xchg
repz
add
mov
lret
push
mov
hlt
mov
and
ja
jbe
rcll
adc
or
or
test
cmp
add
call
rdmsr
fbld
stos
push
or
fld
jae
jmp
fs
cli
mov
mov
roll
mov
rolb
in
shlb
ss
mov
imul
xor
loopne
sbb
mov
fs
push
xchg
cmp
push
jmp
mov
nop
mov
mov
ret
jne
lods
je
movsl
jecxz
fs
jge
fwait
mov
mov
subl
adc
or
push
lret
dec
push
inc
xor
pop
inc
xor
and
adc
push
cld
fmuls
push
pusha
rorl
andb
push
popa
hlt
mov
lods
or
or
das
jo
jl
add
inc
or
push
fdiv
imul
push
push
pop
pop
subb
pop
add
or
pusha
adc
jp
ja
std
add
add
stos
or
or
les
or
mov
jmp
mov
inc
mov
pop
push
xor
dec
add
sub
lret
lods
mov
loop
dec
dec
inc
popa
and
push
pop
pop
sbb
push
jl
pushl
addr16
jnp
xchg
xor
and
movsb
cmp
ss
pop
jns
loope
ret
add
add
adc
xchg
adc
cs
orb
mov
les
sub
or
adc
pop
stos
pop
mov
movsl
das
or
inc
sbb
mov
nop
clc
add
adc
mov
iret
push
dec
add
push
add
add
jmp
out
mov
inc
mov
sub
or
out
bt
mov
mov
sub
inc
jbe
enterw
fcmovbe
in
stos
inc
mov
or
test
pop
xor
arpl
scas
subl
mov
mov
mov
shrb
mov
ss
jmp
sbb
xor
jecxz
lcall
pop
rolb
inc
cmp
scas
jl
sbb
sbb
pop
jg
cmp
cmp
nopl
fistps
and
or
movsb
daa
inc
and
and
pop
and
into
xchg
cvtps2pd
add
rcrb
pop
or
adc
and
push
adc
mov
mov
xlat
pusha
lods
dec
sarb
iret
mov
fwait
lods
or
mov
daa
popa
leave
adc
ret
jmp
xchg
sub
jmp
cmp
xchg
shlb
loope
add
js
pop
push
and
sub
and
addl
fwait
add
or
imulb
xor
les
es
push
stc
push
outsb
cmp
and
outsl
imul
jne
push
jne
aas
add
loopne
push
or
inc
movl
sbb
or
jns
mov
pop
loop
lret
sub
loopne
lcall
mov
push
dec
ret
lock
sbb
mov
cmp
xor
sbb
outsb
clc
fimull
je
add
jbe
add
sub
scas
sbb
aas
rorl
add
sbb
scas
nop
test
ss
popa
mov
and
dec
test
mov
push
or
ds
add
jge
in
mul
xchg
mov
bound
xchg
jbe
call
push
int3
call
leave
pop
aam
clc
xchg
and
xchg
adc
add
imul
idivl
add
add
testb
sub
mov
or
pop
push
popa
or
add
dec
dec
pusha
dec
loope
fbld
dec
fcompl
jo
pushf
push
rorb
add
mov
aad
dec
mov
jg
or
push
and
xor
sahf
adc
add
dec
mov
adc
loope
sub
loope
push
insb
orb
nop
cmpl
or
fldt
pop
nop
clc
push
sbb
inc
push
sbb
xor
pusha
or
iret
repz
xchg
or
push
movsb
lods
mov
loope
cmp
xlat
push
mov
aas
lock
push
or
sbb
sub
flds
cmp
pop
xchg
mov
inc
inc
data16
jno
add
jl
dec
scas
dec
or
and
loopne
mov
lea
push
ret
sbb
ja
dec
jbe
add
add
push
data16
ror
push
popf
sbb
inc
outsb
jnp
lret
sub
push
sti
cmp
je
jmp
and
testb
inc
jmp
ja
and
adc
sbb
inc
and
dec
mov
or
or
or
divl
dec
mov
mov
pusha
xchg
imul
pusha
aad
push
imul
popf
add
dec
xchg
mov
jle
inc
mov
jmp
and
ds
xchg
mov
pop
push
clc
cmpsl
loopne
into
adc
add
or
mov
adc
or
mov
mov
cli
lds
dec
dec
ret
push
jg
sub
addb
mov
scas
or
test
sbb
push
add
dec
push
pinsrw
mov
rolb
add
test
nop
mov
and
mov
mov
pop
ret
cmp
push
jle
add
cmp
je
xchg
inc
je
add
shl
mov
dec
aad
sbb
push
test
cmp
mov
data16
int3
and
mov
lcall
push
call
inc
cmp
or
aas
pop
sub
test
dec
icebp
jl
add
je
mov
jecxz
dec
jo
aaa
and
adc
test
mov
xchg
pop
lcall
nop
push
cmp
adc
std
cld
in
mov
jns
push
loop
xchg
or
test
mov
pop
cld
add
xlat
jge
sub
test
and
inc
inc
dec
mov
mov
and
jne
mov
push
add
cmp
dec
dec
or
call
mov
push
lock
jnp
mov
dec
adc
cmc
dec
inc
add
push
nop
jns
add
mov
push
fistl
push
sha1msg2
sbb
out
jne
or
xlat
xorb
pop
and
jbe
xchg
dec
mov
or
adc
mov
mov
fcomps
push
addb
or
filds
scas
or
dec
push
je
xchg
fdivrs
sbb
fsubs
cmp
sbb
lods
cmp
sbb
call
mov
mov
inc
leave
mov
inc
leave
inc
enter
nop
sbb
or
push
aaa
bnd
dec
mov
ljmp
mov
cmp
pop
cmp
jge
sub
xchg
lret
cmp
pusha
je
xlat
xchg
pop
add
in
inc
adc
jbe
dec
mov
lret
lahf
push
or
fldt
insl
and
jl
cltd
mov
int3
insl
cmp
pop
cltd
js
adc
fisubrs
mov
lods
sbb
rorl
sub
es
sub
fscale
out
fldl
inc
adc
push
add
or
ja
xchg
push
loop
inc
or
inc
data16
xchg
or
orb
subb
sub
xor
jle
scas
lods
imull
rol
push
inc
sbb
add
or
fildl
aaa
ss
inc
icebp
imul
fdivrl
adc
xchg
add
dec
inc
cwtl
insb
dec
ljmp
inc
outsl
mov
adc
insb
ss
dec
dec
div
popl
jo
cli
mov
je
les
or
mov
lcall
sbb
jmp
repz
push
cmp
outsl
inc
inc
insb
sbb
ja
or
pop
dec
cmc
je
cmp
loop
cmc
icebp
sbb
adc
jbe
data16
push
mov
jbe
push
push
pop
sbb
cmp
lcall
jae
add
add
sbb
popa
push
xor
xor
jge
dec
icebp
inc
bnd
xor
in
aas
jne
bound
push
jbe
inc
add
and
mov
in
repnz
lret
iret
add
jmp
dec
sbb
dec
test
add
push
and
call
fisttpll
push
je
push
movsl
push
mov
jnp
or
cmp
mov
pop
les
and
mov
mov
dec
sub
data16
xor
mov
sbb
test
addr16
mov
sbb
adc
mov
shll
enter
roll
mulb
rorl
push
dec
push
mov
mov
inc
xchg
add
cwtl
push
mov
mov
push
sbb
xor
adc
inc
cmpsl
das
test
adc
pop
dec
mov
jnp
and
add
xor
outsl
mov
cmp
ja
mov
data16
jbe
cld
push
pop
jmp
ficoms
cmp
lcall
add
jmp
pop
cltd
pop
mov
orl
sub
dec
mov
inc
lods
push
xor
cs
dec
lds
popa
push
jle
push
add
loope
lcall
mov
push
jg
sbb
push
or
cmp
mov
pop
andb
and
sbb
movsb
cmp
rcrl
ss
xor
pop
push
fwait
aam
cmp
cs
enter
xchg
dec
cmp
adc
dec
inc
shll
cmp
jo
mov
pop
push
xchg
dec
sub
jge
adc
dec
data16
inc
fmull
cmp
jbe
mov
sbb
push
data16
mov
sub
sub
pop
and
fdivrs
jmp
inc
cmp
in
adc
adc
pop
adc
or
jl
or
mov
pop
sbb
dec
loopne
mov
adc
add
add
rorl
pop
sbb
mov
push
adc
sbb
outsl
or
inc
out
daa
or
jbe
jge
xor
cmp
push
movb
or
dec
rorb
hlt
ret
adc
push
pop
rcrb
out
adc
jne
pop
pop
add
sub
xchg
cmp
cs
add
dec
loop
jb
add
jbe
mov
sub
lea
inc
xchg
ret
inc
or
les
dec
loop
xor
adc
push
sbb
push
ja
mov
cmpb
dec
movsl
push
mov
cmovnp
or
enter
cmpb
pop
mov
push
or
or
cmp
je
cmpsb
mov
mov
sub
pop
aaa
xchg
daa
adc
add
lods
arpl
push
jne
dec
je
loope
jne
test
imul
inc
mov
addb
cld
pusha
in
lods
mov
adc
or
gs
sub
push
daa
dec
stos
jns
mull
xchg
inc
scas
push
mov
fiadds
pop
xchg
or
and
jb
scas
pop
gs
dec
lahf
xchg
cli
push
ja
les
inc
add
cltd
fsubrs
sub
adc
scas
mov
push
sbb
lock
add
xor
pop
test
in
cmpsl
xor
add
push
cmp
je
xchg
syscall
push
and
xor
mov
xchg
or
shll
adc
inc
popa
pop
dec
push
lret
fs
push
push
inc
add
sub
popf
jbe
xchg
nop
mov
xor
enter
cmp
daa
cmpsl
xor
loopne
iret
jle
cmp
jbe
mov
movsl
cltd
mov
push
pop
cmp
mov
inc
push
roll
bound
push
bnd
jns
jl
add
shl
jmp
sbb
jns
bound
push
jmp
cmp
sbb
and
jne
sbbl
pop
stc
and
pop
xchg
sbbb
ret
sub
sbbl
push
adc
push
or
mov
xor
cmp
jno
and
lret
testl
nop
jb
dec
movsb
adc
push
push
and
and
movsb
add
test
and
cltd
andb
jns
addr16
fs
xchg
cmp
test
inc
je
cmp
adc
mov
xor
add
dec
gs
cmp
fisttps
cmp
in
pop
push
inc
nop
and
or
popa
test
cmp
call
sbb
sti
xchg
stc
and
movsl
pcmpgtd
loop
insb
popa
cmp
inc
arpl
data16
adc
cltd
shr
mov
xlat
pop
or
loopne
mov
daa
xor
or
fcomps
in
adc
cmpsl
push
jge
addr16
adc
in
sbb
outsb
xor
addl
inc
xorl
rcr
fsubl
push
sbb
push
in
cwtl
pop
push
cmpsb
dec
fmuls
xor
xor
rol
pop
ret
orb
add
add
add
ret
push
aas
aaa
push
dec
addb
fdivs
jmp
sub
addb
add
test
dec
add
pop
movl
and
ss
mov
jbe
push
or
in
mov
icebp
xchg
ja
dec
imul
push
add
push
insb
sbb
jo
call
pop
or
outsl
mov
sbb
ja
pop
inc
cmp
mov
mov
and
lret
out
cmp
cs
adc
stc
dec
sbb
sub
add
add
mov
stc
testb
jb,pt
push
in
ja
pop
out
and
in
sbb
imul
int
add
sub
fcoms
in
dec
adc
inc
jl
add
push
sbb
xchg
ja
inc
or
pop
loope
loopne
push
push
push
or
aam
jno
inc
push
adc
ret
adc
lret
test
add
js
andb
xchg
sbb
inc
add
insl
cmp
rorb
mov
stos
shlb
dec
push
pop
xor
push
in
out
mov
xchg
cmp
sub
sbb
or
pop
rclb
add
sbb
ret
enter
jmp
enter
shl
nop
sbb
imul
cmp
add
nop
or
fadd
sub
jmp
or
sarb
or
rcrb
mov
cmpsb
xchg
xor
cmp
mov
jg
jge
push
subl
dec
sub
ror
test
popa
sbb
rcrb
test
movsl
or
into
cmp
push
pop
sub
or
jle
push
sahf
clc
repz
repnz
rorb
loop
and
mov
shlb
mov
adc
sbbb
pop
mov
stos
shrb
and
or
insb
inc
cs
pop
adc
mov
int
jl
sub
inc
or
mov
sar
mov
add
bound
push
push
cltd
test
cmpb
incb
sub
xchg
fisubrl
mov
mov
rcrl
das
push
out
jmp
and
push
test
add
push
sub
faddl
pop
add
push
int
cmovle
adc
adc
add
sbb
mov
push
cmp
aaa
lock
pushl
and
xchg
xchg
push
adc
xchg
jo
rcll
or
sub
jl
pop
mov
add
ret
loope
rcr
xor
jmp
jns
cmp
jo
cmp
je
jge
push
mov
jno
push
push
sbb
push
in
inc
ljmp
incb
daa
xor
mov
rep
stos
mov
mov
and
out
add
xlat
add
adc
es
inc
incl
xchg
mov
fsubrl
sbb
sahf
and
adc
loopne
sahf
clc
sub
mov
je
jp
aad
ret
add
push
insb
outsl
fstpl
js
mov
inc
es
inc
inc
cs
jl
sbb
loop
push
les
ror
sbb
js
testb
sbb
sbb
lea
jne
cld
push
movsl
movsl
pop
mov
jns
add
movb
xchg
shrl
push
jno
aad
cwtl
push
mov
cs
or
stos
add
call
mov
subps
or
cmp
inc
addr16
stc
jb
sbbb
adc
jp
push
pop
imul
xchg
lock
or
jne
mov
mov
movsb
add
and
mov
pop
or
lcall
lret
or
push
jecxz
popa
shll
cmpl
pusha
movsl
lret
sahf
pop
stc
push
sbb
or
dec
sub
adc
dec
leave
mov
test
inc
mov
repnz
in
outsb
aaa
push
fdiv
jo
push
add
push
mov
push
inc
shlb
jle
sbb
dec
inc
scas
push
inc
inc
mov
loope,pn
mov
xchg
loope
xchg
subb
push
in
cmp
dec
xor
cmp
in
and
cld
ret
movsb
rcrl
ja
dec
in
mov
dec
mov
pop
adc
nop
cmpsl
mov
jp
sbb
add
mov
sbb
imul
jecxz
mov
mov
xchg
enter
inc
add
inc
fs
enter
mov
fidivs
test
insl
mov
cmp
and
loopne
xchg
rcll
push
sub
fwait
cli
mov
pop
negb
add
pop
outsl
pop
sbb
mov
mov
in
adcl
inc
test
adc
sbb
jge
cmp
fwait
jl
push
cld
push
and
pop
fdivs
imul
sbbb
dec
xchg
fwait
outsb
ret
adc
popa
adcl
loopne
and
mov
subl
pop
pop
add
and
dec
adc
and
pop
push
sarb
push
fcomp
clc
push
jae
mov
lea
mov
into
sbb
mov
adc
sbb
shrl
cmpl
or
lea
mov
fisubl
push
ret
dec
je
adc
or
int
push
idivb
inc
xlat
adc
or
or
and
gs
loope
pop
jne
sub
jge
cmp
or
movb
add
sbb
and
inc
push
int3
xchg
addr16
xor
lea
push
rol
js
push
jbe
push
mov
xchg
repz
inc
push
imul
nop
fucomi
nop
or
pop
insl
insb
test
or
sbb
fcoms
ds
or
iret
pop
xchg
add
or
popf
mov
sub
jb
fcomps
push
adc
daa
sub
mov
cmp
aaa
test
mov
ds
in
addr16
stos
mov
pusha
mov
mov
out
and
sbb
sarb
lock
push
int3
or
pop
cld
jmp
lcall
or
je
inc
in
add
jno
lea
je
ret
xor
pop
xor
test
rol
test
xor
movsl
imul
sbb
cs
imul
pushl
lahf
push
add
insl
sub
xchg
inc
cmp
jl
adc
jecxz
ret
je
xor
mov
insl
push
push
push
or
xlat
jbe
jle
jmp
sbb
clc
sbb
add
ds
xchg
in
faddl
loop
fidivrl
add
sbb
daa
mov
iret
or
add
popa
push
int3
add
push
adc
push
cmp
testl
inc
int
les
imulb
aaa
fwait
mov
inc
inc
data16
push
roll
out
out
add
sub
pop
dec
lret
jmp
data16
push
cs
xor
hlt
adc
jp
dec
sub
pop
or
loopne
sbb
xchg
mov
mov
mov
in
or
sub
dec
jb
mov
into
loope
jnp
mov
push
jb
or
adc
cmp
daa
into
imul
scas
pop
fimull
xchg
fs
inc
cmp
cmp
pusha
pop
jmp
and
dec
sbb
mov
ret
jbe
cmp
cmp
test
cmp
lea
enter
push
cmp
push
mov
mov
add
shrb
jo
ret
sbb
or
push
sbb
or
add
inc
push
jb
cmp
jmp
sub
dec
adc
cmp
insb
lds
push
cmp
add
rcrb
lahf
and
cmp
jne
or
or
out
mov
rcrl
lea
push
push
pop
into
cld
mov
cld
and
call
push
ja
test
fstl
out
xchg
inc
mov
js
inc
or
rclb
cli
jecxz
popa
add
xchg
and
mov
dec
pusha
adc
mov
cmp
je
inc
lret
sub
aad
inc
or
and
lret
push
or
ss
cmp
loop
push
push
fwait
call
xchg
and
or
es
in
inc
pop
ljmp
add
outsb
jne
in
call
or
push
sbb
fsubrs
add
cmp
mov
mov
and
xchg
mov
push
inc
jl
frstor
adc
cld
int3
das
cmpsb
add
loopne
push
aas
mov
jo
mov
test
push
lods
inc
or
int3
cmc
sub
dec
xchg
mov
mov
subb
ret
mov
add
add
or
dec
aaa
mov
mov
sahf
sub
mov
cli
insb
adc
mov
das
and
add
movsb
out
in
mov
inc
pop
aad
into
sbb
inc
cmpl
out
outsl
leave
lods
or
xorl
mov
inc
lret
subb
or
adc
jne
mov
dec
inc
xor
inc
sbb
xor
scas
mov
push
add
and
das
pushf
jns
and
and
inc
pop
jne
inc
inc
jmp
and
xchg
xchg
sub
pop
imul
lea
inc
xor
inc
sbb
push
xor
or
jmp
inc
xchg
mov
aam
adc
push
pop
inc
add
add
push
pop
movsl
dec
mov
adc
lock
adc
push
sbb
push
scas
popa
xchg
aaa
jno
in
sub
inc
call
enter
sbb
daa
sbb
sbb
dec
xchg
mov
stos
mov
mov
cmc
pop
les
mul
or
shrl
aad
xchg
and
sarl
inc
popf
xchg
ret
rorb
aaa
gs
jg
xchg
add
enter
cmp
cmpsb
adc
shl
add
hlt
lods
or
stc
or
mov
rcl
clc
sbb
add
push
subl
jbe
movsl
jmp
and
xor
push
lods
push
cmp
inc
jp
and
out
dec
dec
lcall
adc
push
inc
dec
dec
pusha
and
arpl
mov
pop
push
pop
or
sub
pop
sti
or
sub
inc
aam
popf
daa
or
imul
je
inc
cmpsl
inc
or
adc
hlt
dec
cmp
dec
add
or
and
les
push
cmpsb
mov
and
xchg
push
or
mov
jo
out
lahf
sub
movb
mov
add
add
mov
inc
sub
adc
dec
or
cmp
xor
mov
iret
jge
mov
and
pop
cld
orl
mov
pusha
adc
dec
repz
mov
rolb
loopne
fwait
sub
mov
adc
mov
lds
add
jno
adc
push
sbb
bound
pop
into
out
popa
les
cmp
fwait
scas
adc
js
enter
ret
adc
add
xor
mov
or
inc
fildl
jne
mov
fistpl
ljmp
jl
xchg
mov
and
dec
cmp
leave
jo
push
loope
push
ds
push
orb
cmpsl
movsb
jo
lods
or
or
add
addb
add
notb
into
xor
inc
mov
and
jmp
push
add
pushf
mov
into
jo
fisubs
fcmovbe
xchg
adcb
inc
mov
adc
mov
cmpsl
cmp
cwtl
sub
jl
dec
xchg
loope
dec
aas
fldenv
or
jmp
pop
adc
add
dec
inc
rclb
test
ss
data16
and
pop
rorb
jg
or
sbb
mov
jge
sub
mov
test
pusha
loop
ret
jbe
jae
adcl
adc
jno
cmp
subl
test
aam
nop
repz
cmp
cmp
nop
xchg
pop
lea
popf
or
sub
fstl
jp
add
mov
ljmp
mov
inc
cmp
jne
subl
xor
insb
stos
add
xor
dec
push
fs
push
jbe
sub
and
inc
lcall
pop
adc
push
fidivrs
push
push
arpl
stos
jle
je
enter
cmp
mov
scas
into
mov
jmp
repnz
roll
add
push
cwtl
sbb
fimuls
jno
nop
cmpb
pop
and
sub
dec
loop
sbb
loope
bound
pop
call
hlt
mov
icebp
shr
arpl
mov
les
out
popa
adcl
hlt
pop
scas
test
and
pop
mov
lods
pop
add
sub
inc
scas
or
push
push
cld
insb
sbb
rcr
add
sub
movsb
jp
dec
mov
mov
xchg
or
and
pop
dec
inc
call
xor
movsl
xor
and
or
and
insb
inc
inc
xor
dec
inc
testb
das
cwtl
mov
xchg
sub
movl
ja
cmp
sub
push
das
clc
sbb
add
incl
add
push
mov
add
call
outsb
fildll
sbb
cmp
add
sub
and
orb
sub
sbb
fucom
sub
jmp
push
add
add
and
xlat
fwait
adc
sbb
nop
inc
sub
fnstcw
or
imul
add
dec
mov
add
pop
jne
and
insl
mov
sbb
and
sahf
push
stos
push
lret
loopne
loopne
pop
sbbl
int
ss
int3
insl
subl
gs
inc
insb
insl
jecxz
adc
mov
pop
aam
xlat
pop
inc
fmull
inc
mov
mov
mov
orb
xor
or
ljmp
cmp
cmp
aaa
sbb
mov
xor
sbb
inc
push
in
insb
dec
cmpb
gs
xor
adc
dec
adc
clc
mov
ljmp
mov
rclb
jb
or
sub
loope
adc
scas
and
aam
aam
daa
sub
pusha
and
jecxz
adc
sub
xchg
xchg
dec
test
ffree
rclb
pusha
sbbb
cmp
cmp
sub
fwait
pop
setg
xchg
ret
dec
push
dec
sub
cwtl
cmp
neg
outsl
inc
loopne
shlb
pop
sbb
pop
imul
pop
adc
jle
mov
sbbb
jno
sub
bound
mov
movb
inc
add
adc
push
adc
mov
rorl
loopne
push
mov
pop
xorb
push
insl
pop
rcrb
icebp
push
movb
das
push
jo
fiaddl
lret
lcall
aam
sti
fs
mov
aas
and
push
mov
jb
sub
or
add
inc
sub
sbb
inc
hlt
out
inc
add
xor
shrb
test
lcall
xor
dec
pop
and
adc
mov
lods
aaa
pop
movb
sbbb
sti
add
pusha
mov
lock
insl
pop
xor
popl
mov
jle
das
loope
stos
ret
mov
add
lods
sar
clc
jge
leave
add
pop
push
sbbl
xor
std
mov
adc
push
push
adc
xchg
mov
sbb
add
inc
push
add
and
aas
dec
rep
mov
in
sub
test
xchg
mov
pop
xchg
pushf
shl
es
test
call
stc
sbb
pop
sub
jl
iret
inc
push
adc
and
sub
xor
pusha
xor
bound
mov
or
daa
and
fcmovb
jo
je
xor
jmp
and
outsb
out
pop
andb
lods
and
notl
notl
dec
adc
lahf
std
lea
decb
in
jne
fxch
fyl2x
jmp
and
in
fldl2e
fmulp
mov
movsl
ljmp
fld1
faddp
testb
dec
add
sbb
add
pop
add
or
std
xchg
test
outsl
mov
sti
std
add
add
aad
loope
lahf
cmp
or
xchg
adc
sub
neg
jp
add
fldln2
inc
in
imul
loope
push
es
inc
subb
ljmp
sbb
or
out
sub
fldz
mov
repz
pop
xchg
xor
jmp
jmp
pop
ja
or
inc
and
push
xchg
xor
imul
adc
daa
dec
shr
pop
ficomps
xchg
cmp
fisttpl
mov
add
ret
lret
sub
sub
cwtl
add
addl
in
rolb
or
icebp
push
inc
add
sub
hlt
or
sub
or
js
imul
push
je
jl
in
add
jp
add
dec
adc
or
and
mov
adc
ror
push
mov
mov
in
sbb
lods
or
xchg
adc
mov
aam
add
pop
subb
aam
and
xlat
push
loopne
insb
insb
and
push
mov
push
and
and
mov
iret
or
and
icebp
in
std
rol
mov
mov
or
in
ret
push
mov
or
pop
call
leave
outsb
ret
adc
imulb
jp
or
bound
ja
jo
roll
aad
pop
add
add
or
dec
fwait
add
pushf
test
and
inc
jbe
dec
cmpb
add
decl
push
add
shl
pop
dec
adc
and
pop
jmp
sub
addl
psrlw
fucomip
into
dec
loopne
repz
add
mov
xor
rcrb
lea
cwtl
add
insl
adc
pop
mov
loope
loopne
push
xchg
mov
fstp
ret
gs
test
lret
test
fldcw
or
pop
addb
xchg
out
jnp
jb
imul
or
fldl
and
outsb
sub
or
sbb
xchg
enter
or
or
fstpt
outsl
add
jl
shll
imul
xchg
mov
cmp
pop
pop
sbb
mov
nop
je
int
loopne
jle
or
or
adc
sahf
dec
push
gs
dec
fsubr
aam
stos
jmp
daa
je
xlat
pop
mov
sbb
jne
sbb
cmp
mov
add
jmp
jb
dec
fcompl
fcmove
nop
jge
mov
in
jmp
push
movsb
xchg
add
movsl
stc
jbe
mov
jg
aam
or
orl
push
sarb
pop
mov
adc
xor
push
adc
mov
out
sbb
inc
xor
js
jo
fldl
in
jns,pn
cmp
and
movsb
push
add
inc
jb
sbb
mov
cmp
xor
xchg
mov
adc
test
data16
push
in
jmp
sub
loopne
gs
lahf
gs
ss
sbb
test
fidivl
lahf
rclb
enter
or
insl
adc
sahf
cwtl
sti
fdiv
pop
rcll
pop
jne
and
pop
sub
jae
out
mov
sub
push
push
pusha
sbb
add
dec
arpl
ficoms
loopne
pop
bound
mov
adc
sub
push
sbb
pop
xchg
pusha
cwtl
je
out
jecxz
mov
outsl
inc
ret
add
addr16
sbb
jge
pop
push
ds
and
gs
push
popf
and
jge
jp
pop
jo
add
sbbb
sbbb
push
sub
lcall
sub
xor
rcrl
out
push
sub
mov
push
push
push
cmpsl
adc
adc
adc
pop
rorb
xchg
loope
pop
enter
and
adc
pop
add
add
int3
inc
xchg
add
and
dec
add
mov
or
and
nop
out
rolb
or
dec
jg
mov
dec
js
lret
pop
sub
jnp
imul
and
loope
imull
sub
movsb
test
in
mov
add
ss
add
jge
dec
dec
or
test
adc
cli
push
jo
test
push
adc
jns
test
xchg
adc
ds
xchg
jns
or
and
je
or
pop
or
xchg
mov
sub
clc
xchg
jle,pt
add
xchg
mov
lods
orb
pop
sbb
cs
cmp
mov
push
ja
jp
and
jecxz
sbb
or
jmp
pop
roll
outsb
sbb
popa
inc
addl
setb
ret
nop
jle
pop
cs
call
or
jle
cmp
dec
and
jecxz
push
xchg
out
xchg
cmp
cmp
mov
mov
inc
and
pop
cmp
pop
outsl
add
inc
cltd
je
leave
add
mov
or
sub
in
lods
es
adc
sti
add
pop
lock
jns
out
test
fisttps
repz
mov
out
loope
jmp
jp
mov
add
dec
push
orb
cltd
scas
loope
mov
and
or
or
neg
sub
push
push
sub
sub
pop
xchg
fisttpll
push
and
inc
dec
arpl
mov
pop
adc
pop
fldl
fstpl
dec
call
or
and
xchg
loopne
test
pop
je
test
clc
xchg
lret
pop
sub
jmp
sbb
scas
push
neg
or
push
xor
fists
mov
sti
or
or
push
inc
mov
mov
movsb
push
mul
cmp
sub
outsb
mov
dec
addb
rorb
loopne
into
fcomi
fnsave
outsb
aas
stos
or
xor
test
in
add
fildll
das
add
into
adc
or
push
fisubl
inc
test
jmp
sbb
pop
loope
and
or
sub
lret
loope
adc
lea
les
jae
or
into
sti
or
lret
jmp
push
subl
loopne
inc
cli
adc
mov
sub
cli
mov
loopne
push
jge
sub
test
add
pop
push
inc
add
insl
hlt
sbb
add
add
clc
bound
mov
lea
mov
push
inc
sbb
push
pop
pop
je
rcll
adc
cmpsb
xorb
stos
adc
push
sub
dec
lret
push
dec
pusha
add
dec
andl
insb
adc
lea
loope
pop
loope
lret
push
and
and
jnp
add
mov
sbb
inc
in
dec
rolb
pop
push
xchg
outsl
jnp
dec
xorb
adc
in
aaa
ss
push
push
sahf
and
mov
jle
adc
mov
data16
and
push
cwtl
sarb
orb
cmp
add
mov
aam
dec
aam
push
dec
clc
mov
pushf
push
popa
mov
add
adc
push
test
das
lret
sbb
or
add
shl
imul
loop
push
push
sahf
add
jmp
pop
jo
daa
push
shrl
shll
sub
addl
mov
and
push
jmp
sub
enter
jge
mov
stc
push
arpl
cwtl
or
les
pop
cwtl
push
ret
push
adc
push
fimull
add
orb
push
andb
push
into
xor
outsl
jbe
daa
outsl
ret
adc
shll
adc
pop
push
rorl
loopne
or
sbb
dec
jmp
adc
and
jno
push
out
dec
fwait
mov
and
inc
fcompl
dec
in
fstps
sub
sub
mov
jp
jo
clc
movswl
sub
gs
sti
cmp
ss
sbb
es
negb
fnclex
sbb
lock
enter
dec
cld
or
ret
dec
fldcw
inc
cld
fwait
mov
jle
or
mov
cmp
or
popa
stos
mov
add
sbb
fsubl
mov
rorb
fcomps
add
mov
xor
push
les
mov
adcb
fwait
sub
jnp
test
xchg
orb
imul
mov
xchg
jp
push
push
sbbb
jns
sub
pop
nop
out
add
jns
and
pop
fsubs
fadds
dec
sbb
ja
rolb
out
fldcw
or
jne
mov
test
jno
call
je
push
xor
mov
sbb
jl
lds
mov
fisubs
fistpll
getsec
xchg
jp
lods
daa
ret
push
ss
adc
or
add
mov
ja
arpl
fwait
imul
push
rcll
push
jmp
pop
cmp
nop
lret
add
cmp
push
jp
rolb
push
xchg
jne
cld
lea
mov
jp
movsl
cmpb
and
pop
popa
dec
incb
rorl
push
push
orl
mov
sti
dec
incl
imul
and
or
mov
push
fsubrs
test
js
push
pop
push
loopne
shll
push
loopne
add
fldt
insb
push
or
inc
jecxz
ss
loope
jp
add
add
jae
pop
or
mov
sbb
stc
out
sbb
mov
rcrb
cli
std
push
addr16
or
in
lock
aas
xchg
xor
shl
hlt
mul
and
das
in
sarb
pop
fmuls
inc
sbb
xchg
xchg
jbe
sub
add
cmp
jo
sbb
jne
or
repnz
xor
adc
sub
jb
fcoms
aam
jb
ret
scas
sbb
es
out
test
in
aas
mov
dec
dec
fdiv
mov
das
in
push
fdivr
adc
fisubs
xlat
loop
fisubrs
and
and
ss
jno
or
in
and
scas
insl
rol
cs
iret
lea
orl
pop
mov
sub
cmp
pop
adc
jge
imul
jb
inc
adc
lret
or
lret
or
sub
adc
jge
in
rclb
out
xor
add
lret
mov
sbbl
leave
or
mov
lods
pop
fisubl
out
xor
das
inc
int3
jbe
nop
lret
int3
int
cmp
or
mov
jge
xor
das
inc
int
push
jb
int
unpcklps
adc
jbe
mov
movsl
jb
add
inc
cs
into
iret
punpckldq
adc
cs
mov
jge
xor
mov
push
cmp
stos
or
and
push
mov
xor
xor
loopne
cmp
frstor
dec
mov
ja
xchg
adc
in
outsl
sub
pop
test
cmp
cmc
dec
popf
inc
movsb
push
aad
fs
stos
rcll
push
fnstsw
fcoml
adcb
fistps
inc
scas
lods
addr16
enter
jmp
jb
add
sbb
add
gs
add
test
push
enter
fcmovnbe
loope
cmp
sub
pop
sub
xor
lock
aas
pop
shr
loop
mov
and
jo
or
or
cltd
sbb
and
fildl
test
pop
adc
fiadds
aas
inc
xchg
into
sbb
sub
ja
add
and
xor
js
lods
sub
mov
ss
rorl
jecxz
lret
add
fsubs
popf
push
push
sbb
dec
inc
push
inc
adc
inc
popa
and
cmp
and
jne
aaa
es
imul
push
lods
add
ret
or
mov
loopne
and
sub
jecxz
loope
sub
rorl
add
add
fmull
fdivl
les
add
jns
shr
jne
push
sbb
sub
jb
xor
imul
mov
or
or
insl
push
fnsave
sbb
xchg
adc
pop
jg
mov
rclb
cmp
int
test
sub
sbb
iret
fnstenv
add
fs
or
adc
fnstenv
iret
shll
xor
xor
jbe
test
xchg
je
enter
jnp
push
pop
ret
mov
jo
sub
jns
out
add
xor
repz
mov
or
dec
add
jb
fstpt
sti
sbb
fsubrp
and
xorb
pop
je
sbb
adc
into
nop
sbb
outsl
leave
adc
inc
and
cmc
sbbb
pop
popa
roll
insl
addr16
or
bnd
mov
xor
pop
pop
stos
push
test
mov
cmpl
mov
orl
clc
and
jl
repz
mov
xlat
add
xor
ds
add
fstpl
ss
enter
ljmp
mov
popa
add
sub
hlt
adc
mov
or
dec
xor
in
mov
dec
pop
jb
ficoms
or
jno
inc
add
bound
roll
les
fstl
mov
xchg
xchg
mov
das
cmp
sub
cmp
cmpsb
or
cmp
push
adc
or
iret
ret
mov
cmc
imul
sbb
cmp
jge
es
divl
cmp
cmp
push
stos
pop
inc
loopne
dec
nop
ret
cmp
aad
sti
xchg
push
pop
mov
jmp
cmp
dec
adc
xchg
orl
iret
push
je
add
jno
fisttps
mov
les
cli
mov
add
fs
daa
mov
cli
jl
js
mov
sub
xor
push
mov
cmp
inc
adc
push
sub
dec
inc
and
aam
push
jmp
fldcw
mov
push
je
in
xor
add
pop
cmp
xor
pop
sub
add
xchg
dec
fimuls
xchg
adc
inc
lock
call
popa
pop
cmp
and
inc
adc
outsb
popf
cs
cmp
test
inc
clc
ljmp
imul
shr
xchg
shll
inc
ret
out
popa
lds
stos
sub
fsubrl
int
imul
add
icebp
xchg
push
imul
dec
mov
add
xorb
aas
push
clc
or
leave
insl
pop
ret
aad
or
xor
imul
dec
push
dec
orb
fsubr
add
dec
movsl
icebp
or
mov
dec
movlhps
adc
aaa
dec
mov
addb
test
mov
es
mov
out
inc
shr
push
mov
movsb
rcl
jae
movsl
rcrb
mov
out
je
push
jns
or
mov
jmp
clc
or
sbb
add
mov
inc
out
sbb
js
jmp
addr16
xchg
es
or
mov
or
xor
fnstenv
jo
pusha
imul
adc
mov
sbb
mov
pop
sbb
dec
pop
hlt
mov
je,pt
aaa
add
add
add
push
shll
inc
jle
mov
pop
mov
push
imul
cmp
sahf
add
test
cmp
insl
loopne
sarl
loopne
adc
daa
lret
xor
and
movzbl
push
insl
stos
imul
fldpi
pop
das
xor
scas
xchg
inc
cmp
or
dec
xor
addb
and
jl
addb
and
add
push
adc
addl
jle
bound
jne
adc
push
inc
pop
fs
js
scas
es
jo
cmovo
scas
gs
add
call
mov
adc
nop
shlb
std
pop
mov
mov
push
push
mov
cld
adc
pop
sub
add
mov
ss
xor
cld
jl
jnp
jg
push
lock
mov
or
inc
or
js
dec
and
jle
iret
je
add
sbb
dec
imul
cmp
loope
clc
xchg
nop
enter
jg
jmp
dec
xchg
inc
insb
jmp
rol
push
push
xor
dec
addr16
clc
mov
cwtl
and
scas
lahf
sahf
cmp
sub
movsb
mov
cwtl
cli
mov
mov
js
add
push
test
test
add
dec
sbb
gs
xchg
add
clc
jae
cmp
jl
and
inc
sub
jg
jb
adc
nop
ret
hlt
ret
roll
aam
xchg
mov
aad
fstp
jp
adc
adc
test
in
mov
pop
dec
cmpb
stos
inc
dec
push
inc
pop
rorl
rcrb
inc
or
fsubs
testb
mov
fdiv
pop
dec
mov
xchg
cmpsb
sbb
or
lret
mov
dec
mov
mov
or
das
push
sub
mov
push
pop
je
or
cmp
ja
inc
add
adcb
pushf
add
nop
jbe
sahf
int3
push
jmp
mov
fnstsw
test
cltd
adc
cld
nop
inc
idiv
into
test
mov
cmpsb
mov
pushf
and
push
pop
dec
test
inc
and
or
enter
jno
ljmp
cmp
and
add
add
jo
mov
xor
int
out
fstl
sub
add
cmpsb
test
xchg
fwait
xor
test
push
sti
or
add
xor
or
outsb
faddl
int3
xchg
jbe
aaa
in
jns
adc
pop
pop
pop
lcall
xor
pop
dec
jo
es
and
notl
icebp
call
aam
push
cmpl
push
imul
sbb
pushf
dec
mov
jge
iret
pop
or
inc
pusha
outsb
cmpb
in
loopne
mov
push
sub
jg
addl
insl
adc
aam
lahf
mov
sub
mov
push
xchg
cld
cmp
outsb
adc
leave
inc
sub
sbb
popf
fs
test
adc
xor
sub
pusha
fs
les
add
inc
mov
sbb
pop
dec
xor
and
dec
push
and
test
mov
adc
imul
jae
mov
sbb
xor
push
push
cmp
jae
add
pop
push
pop
arpl
dec
push
int
add
add
pop
inc
push
cmp
jb,pt
mov
push
jmp
xor
add
setle
addr16
cmp
neg
arpl
push
imul
mov
cmp
add
hlt
push
lea
arpl
ss
xor
jmp
jno
push
movsl
mov
aad
jge
jle
add
dec
mov
nop
mov
push
push
nop
sbb
cmp
inc
or
add
mov
int
stos
fstl
jo
out
inc
lea
loope
aad
or
or
add
add
pop
data16
push
pop
das
push
adc
cld
push
xorb
cmp
insl
int
mov
push
imul
es
jmp
andb
add
xor
pop
pop
fldenv
xchg
sbb
clc
ret
pop
xor
jo
je
gs
fwait
mov
pusha
ss
gs
int3
call
mov
out
push
insl
mov
add
jmp
stos
lret
add
xchg
daa
and
ret
es
loopne
sbb
mov
mov
std
dec
arpl
jo
cmp
loop
pop
add
adc
into
push
adc
or
and
sub
aad
adc
jb
xor
idivb
or
jecxz
xchg
mov
or
xor
inc
aas
mov
inc
jmp
enter
ret
jo
sar
fcmovb
cmp
push
add
mov
inc
std
dec
std
sbb
mov
inc
rorb
inc
jno
xlat
lds
cmpsb
inc
or
rolb
nop
and
inc
movsb
mov
imul
dec
push
cs
enter
mov
jno
adc
fcoms
jne
nop
xchg
out
loopne
shlb
sub
or
push
aas
xor
hlt
cmp
pop
ljmp
sub
or
lret
mov
int3
jmp
inc
sub
call
aas
daa
repz
cmp
jle
lea
or
inc
adc
cmp
mov
jp
loope
mov
mov
rorl
and
pop
cs
and
dec
jmp
nop
pop
shlb
add
push
loope
mov
gs
imul
pusha
shr
adc
dec
and
adc
adc
ss
into
movsb
ret
inc
scas
jmp
lock
fiadds
xor
testb
add
mov
jl
xchg
cmp
push
stos
jg
mov
jmp
push
pop
mov
std
gs
mov
shll
cmp
ds
sbb
adc
testb
fbstp
in
je
adc
push
data16
push
jmp
sbb
aas
stos
mov
hlt
rorb
adc
sbb
pop
push
pop
and
sbb
or
mov
mov
jmp
or
test
adc
mov
xor
push
frstor
mov
jmp
frstor
cmp
popf
sub
imul
adc
pop
pop
sbb
adc
and
or
clc
push
push
sbb
push
imul
lods
lock
jp
popa
and
inc
mov
and
in
es
sub
or
in
pop
xchg
fmull
jo
add
test
jmp
mov
inc
aam
xor
push
jp
ljmp
jmp
mov
and
dec
iret
mov
into
inc
inc
mov
or
mov
dec
rorb
imul
pop
xor
mov
dec
sbb
leave
sub
js
sbb
enter
xor
sbb
sbbb
ret
sub
shlb
push
cmp
sarb
cli
aas
jbe
push
pop
test
push
and
mov
jg
pusha
lea
movsl
pop
and
and
decb
fcoms
mov
jmp
lea
inc
cmp
lret
inc
push
pop
add
push
mov
rcpps
movsb
aad
mov
jp
sahf
and
push
adc
sar
int3
subb
jecxz
pop
hlt
mov
inc
adc
inc
es
xor
dec
pop
cmp
data16
sbb
in
jno
and
cmp
out
mov
sub
jno
jno
cmp
mov
lret
shr
not
and
add
clc
fisubrs
inc
dec
loopne
cmp
shll
or
fidivrs
dec
pop
and
mov
adc
nop
or
sub
pop
roll
es
bound
sub
mov
ret
mov
mov
cmp
and
jae
cmpb
shl
dec
mov
jl
dec
add
adc
xor
push
mov
ljmp
push
insb
xor
xor
mov
jle
pop
add
mov
lock
std
sbb
loope
add
mov
sbb
inc
pushf
idivb
gs
push
or
ret
mov
scas
data16
sti
push
decb
adc
inc
in
dec
mov
and
mov
or
and
or
popa
inc
inc
out
cmc
ja
dec
or
xor
adc
push
lea
nop
test
mov
cmp
cmp
pop
movsl
clc
push
pop
in
cmp
in
adc
cltd
pusha
lret
rclb
pop
scas
dec
pop
and
inc
or
add
or
and
cmp
jo
js
xchg
out
add
not
call
xor
iret
or
xchg
shrb
mov
and
sbb
pop
cltd
cli
mov
push
jne
ds
rclb
add
jecxz
xor
dec
jae
or
es
push
mov
or
inc
out
sbb
mov
push
sbb
inc
dec
jge
inc
adc
xchg
sbb
sbb
sub
push
mov
mov
jns
nop
inc
adc
dec
fwait
sbb
and
pusha
mov
or
cwtl
xchg
dec
and
inc
cmp
mov
dec
cwtl
scas
imul
xor
rcll
cltd
pop
lcall
out
das
mov
shl
inc
jmp
mov
stc
xchg
stos
mov
pop
mov
add
cmp
jle
lcall
loop
inc
dec
mov
cmp
sub
iret
rorl
cmp
and
sub
aas
jmp
dec
in
and
jmp
dec
jo
js
sub
cmp
or
push
insb
xor
shr
dec
or
add
sbb
hlt
adcb
jo
roll
icebp
rcr
pop
test
or
rcll
fs
decb
jge
pop
mov
dec
subb
mov
les
lock
in
out
or
adc
jmp
push
push
lea
inc
push
jnp
arpl
sub
or
add
adc
inc
sub
add
data16
pop
mov
roll
xor
mov
push
jb
outsb
sub
push
movsl
loop,pt
fnstenv
jnp
jno
xchg
cmp
fisttps
xchg
push
jp
pop
and
cmpsb
cmpsl
add
add
or
and
mov
adcb
xor
sub
push
je
xor
xchg
jnp
push
popf
push
pushf
mov
outsb
and
xor
xor
je
push
cltd
push
xchg
loop
mov
jno
test
jbe
push
xchg
dec
stos
repz
clc
dec
inc
mov
fiaddl
xchg
or
xor
aas
mov
rolb
lea
ret
outsb
imul
loopne
lock
add
lock
loopne
sti
or
out
and
add
add
les
sbb
lods
lea
or
js
dec
out
mov
in
psubsb
inc
cld
lock
rorl
test
outsb
add
sub
cmp
ja
sub
mov
dec
or
clc
pusha
push
sbb
or
les
lds
push
inc
fs
inc
test
lcall
leave
test
shl
dec
inc
jne
or
mov
xor
not
and
into
add
ret
imul
sub
xlat
lea
sub
inc
stos
push
add
or
dec
cld
dec
cmp
sbb
xor
mov
or
inc
dec
add
push
jg
aas
sub
sbb
jbe
pushf
pop
push
mov
pop
rcrb
pop
cmpsl
dec
sub
sbb
jecxz
sub
add
and
inc
jb
test
dec
or
imul
push
sbb
pop
adc
mov
rcr
add
mov
cs
pop
mov
or
xor
adcb
push
or
dec
pop
dec
pop
dec
mov
rcrl
pop
add
xchg
adc
mov
and
adc
iret
lret
and
and
inc
mov
or
out
jae
in
xor
pop
cmp
or
andl
ja
inc
and
fadd
loope
loopne
mov
lea
mov
mov
insb
pop
xor
data16
data16
and
das
pop
divb
cmp
mov
aaa
xor
mov
jne
push
xlat
sub
ret
pusha
cmpsb
jl
push
add
push
in
les
ja
ja
bound
and
pop
push
je
add
fstpt
shl
mov
enter
add
ret
push
pop
add
push
es
je
add
ret
jns
inc
adc
xchg
xchg
jle
push
sbb
jmp
cmp
sub
faddl
inc
push
jmp
push
mov
push
daa
or
dec
mov
inc
push
pusha
xor
or
push
mov
je
add
bound
jmp
mov
jne
inc
dec
push
loop
cmp
bndldx
por
jle
addr16
xchg
xor
xchg
and
iret
in
or
pop
add
dec
pop
cli
gs
adc
out
std
adc
and
dec
inc
cmp
es
pop
adc
incl
push
ret
cmp
jae
orb
shr
inc
add
lock
ss
sub
imul
push
adc
js
cmp
pminsw
pop
mov
and
cs
out
pop
enter
push
jo
adc
inc
je
ret
mov
and
lea
push
xor
adc
popa
mov
sbb
into
lock
lods
aas
jae
sahf
sub
jbe
cltd
add
push
or
ud0
or
mov
ret
add
dec
jb
add
sbb
jmp
sub
js
ret
pusha
mov
sahf
dec
pop
xchg
push
loop
jns
adc
mov
into
inc
and
or
sub
jbe
mov
pushf
movsl
movd
je
mov
arpl
add
nop
jle
shll
mov
inc
adc
fnstenv
fmuls
adc
push
sub
jmp
test
nop
lock
cmp
jb
lea
push
add
sub
ret
sbb
movlps
or
push
or
stc
aaa
pusha
and
mov
decl
mov
add
andb
lock
pop
incl
test
inc
pop
cld
and
dec
push
mov
daa
sbb
or
icebp
xor
mov
and
xchg
andb
hlt
in
test
fidivs
mov
adc
mov
push
sbb
and
aaa
data16
jne
jle
fdivs
popa
outsl
jb
insb
inc
jecxz
or
jle
push
or
sti
insb
xor
sbb
into
fidivs
jbe
movsb
cmp
jb
loopne
mov
mov
cmp
adc
hlt
sahf
xchg
jle
sub
sub
mov
shll
rolb
push
sub
mov
ficoml
nop
adc
sub
je
or
testl
inc
std
push
jge
aad
add
ds
movsb
movsb
test
sbb
add
push
jo
and
xchg
mov
movsl
jp
xor
mov
jle
vpsrlq
sbb
mov
leave
push
sbb
mov
xchg
ss
inc
cmp
js
add
push
dec
jne
mov
mov
insl
cmp
jae
adc
xchg
add
adc
mov
or
add
mov
push
lret
ss
dec
je
sbb
pop
mov
sbb
jmp
jmp
rcll
inc
shrl
push
sbb
ds
jns
out
shr
push
xchg
adc
lea
inc
mov
in
sub
rcll
pop
dec
jae
add
sub
popa
clc
sub
das
and
test
or
jo
movsb
or
mov
xor
inc
mov
das
add
test
add
cmp
inc
inc
jmp
add
subb
dec
cmp
add
inc
jmp
xor
sbbb
xor
in
jmp
clc
add
jno
mov
sbb
jle
push
data16
int
pop
das
or
pop
add
inc
inc
lea
push
bound
sub
test
xor
xor
ret
or
inc
shll
fsubrp
scas
lods
add
cmp
in
lock
outsb
push
ret
sbb
js
leave
push
xchg
mov
push
shll
mov
add
or
test
lds
cwtl
jl
sbb
pop
sbb
push
push
enter
setle
jmp
ret
fdivl
movsb
add
lods
bound
test
or
push
daa
or
sti
sbb
inc
push
inc
jbe
push
jae
sub
xchg
xor
pop
inc
cmpb
imul
push
arpl
add
ljmp
inc
fnsave
cmpsb
xor
pop
mov
sub
jg
or
cmp
cmp
leave
push
cli
fsubl
jp
sarb
ds
or
and
push
xchg
test
adc
sbb
mov
pop
sub
js
jno
cs
ret
mov
daa
bound
test
dec
sbb
push
pop
repnz
sarb
dec
push
xor
in
rcll
addb
add
test
rorl
cmc
xchg
add
insl
xor
cmp
add
jmp
out
and
dec
je
sbb
cmpsb
test
and
jne
or
add
and
addb
sub
jo
pop
mov
lea
fbstp
dec
pop
sbb
mov
lret
or
add
inc
shr
jmp
mov
outsb
andb
lcall
or
push
mov
mov
ja
jmp
or
adc
arpl
ss
mov
incl
push
inc
inc
nop
std
orb
gs
faddl
add
add
ret
sbb
pusha
add
dec
dec
pop
shr
dec
icebp
cmp
test
inc
push
cmp
clc
addr16
pop
adc
pop
in
dec
mov
adc
and
in
push
insb
call
or
or
cld
xor
addb
aad
and
push
or
inc
adc
scas
hlt
mov
push
rorl
or
cmpb
and
aam
mov
dec
outsb
and
xchg
lock
out
adc
hlt
adc
out
add
std
movsb
xchg
sub
lea
inc
call
loop
dec
fptan
xor
sub
icebp
punpckhbw
into
popa
xor
sub
in
fwait
jns
sbb
push
xor
aam
ljmp
fcmovnb
dec
cli
add
mov
pop
mov
fs
lock
cli
inc
mov
or
jle
ss
int
test
je
ucomiss
call
rcl
popa
popa
sub
push
loope
push
rorl
fsubl
jecxz,pt
or
test
adc
mov
push
mov
mov
pop
ss
rol
cmp
jp
sbb
fcmovb
cmp
call
adc
sub
mov
mov
pop
stos
push
icebp
pop
les
out
in
mov
mov
bound
pop
adc
jnp
mov
and
sub
mov
add
push
flds
push
inc
mov
add
int
call
outsb
inc
mov
inc
cmpsb
add
outsl
or
cmp
pop
mov
sbb
push
add
jl
scas
shll
pop
loopne
gs
mov
jl
jg
mov
movb
add
fldt
push
dec
fcompl
mov
cmp
push
cld
cmpsb
arpl
dec
adc
or
imul
ret
ss
sar
je
jne
sbb
fsubrp
pop
jmp
jnp
and
inc
leave
or
les
test
cltd
jmp
pop
cmp
shlb
dec
cmpb
shlb
pushf
jg
jl
add
or
jae
je
xor
or
fcmove
add
push
sbb
divl
or
push
das
pusha
inc
jge
cmp
imul
cmp
jle
jns
lcall
add
mov
pop
clc
cmpsb
sahf
xor
lods
or
cltd
mov
cmpl
fildl
loope
sbb
xor
pop
push
insb
push
mov
sti
mov
outsb
rcrl
jo
add
scas
lods
sub
add
add
pusha
cmpb
call
jo
inc
push
movb
xor
inc
js
sti
hlt
es
es
mov
or
inc
sub
sub
or
cmp
movsl
adc
lods
pop
or
sub
add
xor
xor
jae
mov
mov
dec
testl
xlat
test
mov
inc
dec
imul
dec
jle
cmc
fldt
loopne
js
add
mov
and
and
fimuls
mov
dec
mov
pop
ret
jmp
mov
xorb
rorb
out
and
inc
jnp
shll
mov
inc
rcrl
mov
xchg
cmpsl
xor
dec
add
movl
cmp
mov
clc
mov
gs
dec
add
push
mov
mov
add
add
or
adc
xor
ds
inc
addb
add
jns
pop
jb
mov
les
aad
cmpl
add
pop
pop
inc
jg
mov
int
and
imul
out
gs
aas
dec
push
pop
and
addl
movsl
in
and
aaa
in
daa
or
cld
cmp
insb
rorl
repz
or
addl
loopne
orb
mov
sub
sub
pusha
mov
fdivr
cmp
jl
push
inc
sbb
xchg
jbe
leave
lock
mov
adc
jg
and
cmp
mov
sbbl
sbb
aam
push
test
mov
mov
inc
or
loope
sti
dec
sub
dec
or
test
mov
in
out
pop
pop
cmp
push
divb
mov
insb
mov
or
test
jne
clc
add
inc
test
pop
mov
cld
bswap
je
loope
mov
dec
adc
in
mov
pusha
bound
loope
cmp
push
aam
mov
jbe
jle
xchg
jne
jle
push
add
add
cmp
push
dec
aam
addb
mov
inc
push
xor
lock
inc
xor
pop
or
js
xchg
add
mov
pop
aad
mov
mov
mov
add
and
outsb
es
mov
mov
ljmp
mov
cld
jb
cmp
ja
add
cmp
adc
andb
dec
jne
imull
mov
lcall
or
add
hlt
rcll
push
or
sbb
or
mov
jg
add
movsl
sub
rorb
or
in
push
add
add
cld
repnz
std
sahf
xchg
inc
jmp
add
push
mov
ret
mov
sbb
dec
das
sbb
adc
test
mov
cmpsb
cmp
dec
mov
xchg
fidivrs
fs
pop
rolb
pinsrw
add
inc
mov
lahf
lods
rolb
fiaddl
add
shlb
fildl
rol
int3
and
ss
push
or
dec
andl
sbb
pop
hlt
mov
fbld
nop
out
cmpb
xchg
jns
out
pop
lret
push
call
int
loopne
push
or
add
adc
fwait
hlt
movb
rorb
pop
aaa
add
sub
stos
mov
movb
int3
in
idivb
outsb
gs
jg
je
or
je
or
push
hlt
shll
or
dec
adc
movb
cs
jmp
jle
jne
or
xor
and
inc
cmp
jp
jo
outsb
mov
dec
lock
inc
bnd
pop
push
pop
insb
insb
ja
or
mov
clc
out
jbe
sti
jmp
decb
sti
cmpb
dec
add
bnd
ljmp
xor
addr16
adc
insb
pop
add
movsb
push
cwtl
cmp
push
dec
dec
clc
jbe
mov
or
xchg
add
xor
mov
outsb
add
sub
arpl
jnp
and
cmp
push
sbb
push
mov
leave
sbb
add
pop
mov
ljmp
sbb
gs
adc
fs
vpaddd
sbb
imul
pop
push
and
lcall
je
sub
adc
in
ljmp
sbb
push
lcall
cmpsl
mov
mov
push
dec
js
and
jne
test
dec
push
mov
addb
sub
loop
inc
adc
hlt
dec
jle
or
jae
adc
dec
mov
lret
push
pop
scas
in
mov
mov
push
pop
inc
lods
fcmovnu
pop
and
loop
pusha
add
push
lock
adc
inc
aas
testb
sti
jbe
push
xor
add
pop
mov
orl
rorb
sub
mov
bt
xchg
adc
or
pop
sbb
aas
push
daa
inc
sub
pusha
sbb
jecxz
add
int3
andb
push
stos
and
push
mov
scas
or
lods
push
cwtl
je
mov
out
inc
add
lods
addr16
imul
add
je
pusha
mov
mov
call
arpl
and
inc
sbb
add
aas
mov
inc
rcll
adc
inc
fidivrl
mov
mov
pop
or
adc
insb
aas
pop
dec
outsb
add
insl
cmpsl
lods
popa
sbb
arpl
fdivrs
xchg
add
adc
bound
xor
mov
cmp
pop
je
in
sub
mov
cmpsb
xchg
loope
fildll
mov
jae
aam
nop
push
pop
sub
fstps
subb
iret
pop
sbbb
adcb
lcall
pushf
ljmp
inc
test
or
or
xor
push
lret
mov
cmp
je
inc
add
sub
rorl
fs
mov
test
push
ss
cmp
insb
shr
fimuls
cmp
ja
ret
sub
inc
bound
sbb
mov
aaa
pushf
or
sbb
mov
shr
mov
enter
push
fwait
ljmp
add
add
stos
lret
jo
pop
jo
ror
push
test
mov
mov
leave
fs
scas
mov
add
pop
call
jo
sub
dec
or
shll
jne
or
push
cmc
add
and
faddp
in
popf
pop
sub
jmp
pop
or
orb
lahf
ret
pop
ret
dec
inc
es
xor
adc
add
sbb
cmp
and
xchg
cmp
lret
or
jb
push
fdivs
setl
jne
mov
fwait
mov
push
mov
dec
out
add
jecxz
push
icebp
jecxz
jp
dec
rolb
sub
imul
push
aas
add
push
jle
push
aad
add
out
xlat
outsb
pop
lods
rcrb
adc
lahf
add
push
or
les
scas
int3
out
and
sbb
xor
push
das
aad
into
push
arpl
adc
push
add
daa
add
cli
roll
lods
jl
adc
mov
pop
lret
mov
xor
jo
cmp
jbe
insb
shl
jmp
add
fwait
inc
xchg
shl
jmp
fwait
or
push
jno
mov
lea
mov
lret
add
ffreep
mov
sub
inc
jae
sbb
icebp
call
inc
adc
add
inc
mov
ret
add
outsb
inc
pop
data16
inc
jmp
or
mov
inc
jns
nop
cmp
or
mov
dec
scas
jns
data16
sbb
enter
cmpl
in
add
jne
data16
outsb
pop
push
add
lock
push
divb
and
jle
ljmp
das
lret
and
push
jnp
adc
mov
adcl
push
jle
out
rorl
nopl
aam
pop
out
lahf
mov
addl
lahf
clc
add
or
int3
mov
js
incl
jge
jmp
call
filds
arpl
adc
clc
push
xor
arpl
adc
and
lahf
or
subb
sbb
out
lcall
adc
jecxz
and
sub
pop
cltd
clc
lds
and
or
dec
push
loopne
xor
cmp
push
and
mov
in
jb
pop
imul
dec
or
push
je
jne
mov
add
mov
xor
in
xchg
stos
mov
fsubrs
push
lea
sbb
ljmp
insb
in
dec
xor
lcall
mov
jmp
and
pop
stos
dec
test
add
mov
gs
aad
push
and
enter
jmp
mov
cmpsl
cmp
xchg
ljmpw
mov
out
add
or
inc
ds
mov
ljmp
in
mov
in
pop
lock
mov
outsb
hlt
push
mov
les
enter
inc
call
or
fimuls
es
cltd
clc
mov
addb
adc
les
mov
inc
loope
loope
pop
cmp
aas
loope
loope
jbe
mov
ret
ror
sub
lret
jno
cltd
add
and
adc
adc
push
adc
or
inc
js
jb
lds
lock
mov
nop
sub
js
das
mov
or
cmpsl
shlb
dec
divl
mov
pop
push
ds
loope
aam
filds
pusha
je
jp
aaa
push
mov
xor
mov
cmp
add
sbb
add
push
jecxz
mov
inc
ds
jl
sbb
gs
adc
push
lea
scas
pop
nop
inc
or
inc
pusha
sbb
sbb
shll
lret
sbb
xchg
lods
inc
add
push
mov
fmull
mov
ret
rcrl
mov
inc
push
mov
int3
add
addb
jo
mov
mov
mov
loopne
mov
imul
je
dec
dec
and
dec
fst
decl
push
mov
inc
dec
sbb
mov
pop
jb
insb
insl
pusha
mov
lcall
pop
inc
cmp
rcr
incl
or
fucomp
hlt
cmp
xor
addr16
imulb
or
mov
loopne
and
add
jle
fbld
movsl
dec
push
xchg
and
out
cmp
inc
mov
mov
pop
adc
add
mov
dec
adc
int
icebp
imul
daa
inc
sbb
negl
mov
ss
iret
leave
dec
lods
jle
mov
xchg
sbb
lock
xchg
xor
insb
sub
mov
cmp
add
test
jecxz
icebp
idivb
add
cmp
enter
and
inc
cmp
or
jecxz
outsl
sub
rcrl
xor
pop
in
mov
mov
xor
xchg
xor
fld
push
pop
cwtl
nop
imul
sub
fstps
sub
sub
rol
adcl
inc
add
scas
cmpsl
dec
cmp
shll
imul
push
dec
stos
or
ret
jl
sub
dec
shlb
mov
push
xchg
xor
std
dec
add
pop
push
repz
mov
xor
and
je
jge
mov
jbe
jmp
sbb
push
inc
mov
aad
sbb
add
xor
fs
sbbb
cwtl
jo
xchg
loopne
or
inc
aam
leave
pop
xchg
shll
add
jge
xor
push
outsl
mov
pop
mov
repnz
mov
cmp
push
dec
sahf
push
and
jne
adc
mov
fstl
push
and
pop
fidivl
insb
jmp
daa
push
sub
mov
or
mov
sub
add
les
push
and
bswap
int3
jne
sarb
sub
enter
and
enter
out
ss
jnp
mov
inc
cmp
sub
fst
add
xor
mov
out
push
sti
and
in
ret
xchg
aas
rcl
jge
mov
jge
ss
add
jns
adc
or
lret
enter
ret
adc
nop
mov
and
sub
sub
push
cmp
mov
fmull
mov
push
imul
mov
jne
xor
xor
ljmp
out
pop
inc
fsubr
in
or
adc
sbb
sbb
add
add
xchg
inc
subl
adc
imul
and
xchg
inc
addb
clc
lea
test
sbb
push
sbb
push
les
inc
sbb
push
fcomps
stc
jmp
sbb
sbb
movsl
cmp
mov
inc
or
js
or
jmp
adc
mov
add
adc
and
add
outsl
ljmp
fadd
insl
filds
mov
mov
stc
adc
mov
cmp
pop
jo
or
xor
adcl
push
mov
sarl
es
sbb
jmp
int3
cmp
inc
and
fs
rol
push
sahf
lds
inc
sub
stos
ret
add
and
cs
dec
sbb
pop
test
push
add
mov
cmp
inc
popa
js
xor
iret
rorl
out
dec
and
cmp
mov
orb
cmc
dec
or
adc
add
scas
add
pop
call
aas
movb
dec
inc
dec
es
xchg
jb
xor
cmp
rcrb
mov
push
outsb
pop
insb
adc
rcll
adc
test
ret
jle
out
movsl
xchg
fsubl
inc
popf
les
push
data16
adc
jmp
adc
ljmp
cmp
jne
or
jmp
and
mov
add
test
out
clc
cmpsb
and
cmp
jae
jmp
mov
cmp
data16
cmp
je
push
out
mov
dec
int3
jae
int
mov
cmp
data16
jmp
movb
inc
sbb
jae
push
adc
lahf
or
cwtl
push
xchg
inc
cmp
pop
stos
xor
cmp
pop
cmp
inc
sbb
inc
insb
add
mov
adc
sub
arpl
or
sbb
lock
lcall
je
out
jle
xchg
and
roll
mov
inc
enter
sub
push
cmpl
movaps
push
or
mov
addb
lock
inc
js
hlt
sbb
push
bound
testl
aaa
and
fnsave
shll
mov
inc
xchg
sti
xor
movsl
and
adc
adc
add
in
mov
cltd
hlt
sub
mov
outsl
mov
adc
das
xchg
mov
cld
or
push
sub
daa
jl
dec
icebp
or
ja
daa
call
add
xchg
cmp
xchg
jl
sbb
or
enter
add
cmc
or
pop
inc
cmp
inc
aam
mov
lea
les
sbb
leave
cmpsb
pop
sbb
mov
mov
pushf
and
mov
or
and
mov
cmp
or
sbb
mov
dec
lock
or
fisttps
fbld
js
add
sub
nop
fistps
push
jae
xchg
pusha
mov
lret
xor
fimull
inc
into
and
mov
lods
andb
imul
push
enter
xor
out
and
pop
and
sub
enter
pop
push
cmp
xchg
add
pop
push
sbb
xchg
push
jns
pop
sub
call
push
loopne
xor
cltd
fs
sbb
orb
and
sbb
inc
xlat
add
add
inc
xchg
lods
xchg
nop
and
push
push
and
sbb
cmp
inc
into
jb
test
or
test
or
lcall
push
add
adc
or
add
andl
mov
add
push
outsl
sbb
xchg
ret
add
test
inc
jne
sbb
test
mov
movsb
inc
cs
and
adc
inc
mov
lcall
lods
mov
imul
sbb
sub
or
push
je
push
outsb
ja
and
mov
inc
or
pop
lret
nop
cld
sbb
mov
and
lret
jo
test
test
xchg
jmp
inc
test
mov
pop
fisubs
xor
or
and
jb
popa
bound
lock
sub
insl
test
es
sbb
lcall
call
fstp
addr16
and
mov
mov
dec
addb
or
add
loope
sahf
adc
and
mov
or
lret
addb
hlt
sarl
mov
jmp
mov
outsl
pusha
cs
adc
push
or
mov
or
jmp
or
or
jae
ljmp
enter
cmp
add
cwtl
insb
pop
pop
test
pop
mov
or
aaa
add
push
cmc
xchg
xor
adcb
das
add
add
test
mov
in
mov
xchg
shlb
inc
xor
testb
or
or
in
adc
dec
adc
fs
push
ja
ret
add
dec
adc
inc
loope
inc
jl
aam
pop
leave
inc
ret
clc
sub
or
shl
not
test
outsb
and
jge
jge
cwtl
mov
call
and
jl
cmp
fildl
xlat
stc
fcompl
in
cltd
adc
xor
sub
pop
push
mov
out
aaa
cmp
sbb
sbb
nop
mulb
icebp
fcomp
adc
out
jae
sub
rcl
mov
pop
das
pop
add
ret
pop
cltd
addr16
pop
xor
mov
and
repnz
test
test
mov
filds
call
push
sbb
ja
pop
mov
push
dec
push
pop
jo
and
mov
or
sbb
cld
enter
xchg
mov
lahf
push
push
test
mov
push
test
adc
push
dec
xchg
test
dec
or
loop
dec
mov
jmp
cltd
push
add
pushf
mov
or
dec
push
aaa
loop
inc
out
stos
enter
add
call
dec
push
mov
mov
jne
es
add
pop
lcall
not
inc
test
xorb
add
int3
xor
inc
push
fsubs
loop
loopne
push
push
pop
popf
out
arpl
mov
dec
or
mov
or
add
scas
lods
xchg
leave
add
cmp
sti
add
jbe
pop
add
testb
mov
xchg
jbe
lods
pop
push
lock
fwait
inc
shrb
inc
sbb
ret
loopne
add
xchg
jmp
dec
xchg
loopne
jge
push
adc
les
sub
mov
xchg
scas
aam
sub
inc
scas
in
aaa
movsb
pusha
ljmp
sub
pusha
or
dec
add
sbb
mov
cmp
mov
mov
andb
inc
add
inc
out
lds
sbb
es
add
sarb
mov
mov
mov
ds
js
clc
mov
fmull
je
add
bound
pusha
pop
dec
mov
call
dec
in
dec
xor
push
sub
add
hlt
je
and
inc
pop
sbb
cmpsb
push
or
jg
ret
inc
jle
ss
adc
push
xor
mov
mov
int
mov
push
mov
jne
insb
ss
add
cmp
rclb
add
jmp
out
xor
incl
inc
push
mov
push
xchg
push
aad
inc
imul
xor
push
xchg
add
inc
fcoml
fadds
je
cmp
cld
cmp
clc
push
mov
mov
xor
mov
pop
push
add
imul
mov
sbb
enter
mov
fiadds
mov
pushf
or
add
ss
adc
or
je
fcoms
push
sub
cmp
sub
or
jecxz
cmp
mov
or
insb
sbb
or
dec
dec
add
inc
ljmp
and
enter
loop
adc
mov
cld
nop
movsl
sub
add
out
pop
or
outsb
mov
dec
adc
insl
std
js
push
jmp
adc
iret
leave
jp
cmp
dec
dec
loopne
mov
push
adcb
jae
add
int3
je
dec
and
or
adc
push
sbb
lock
adc
push
xor
bound
outsb
stos
or
or
xchg
out
loop
xor
mov
push
xor
adc
push
je
sbb
cmp
cmp
mov
loope
fstpl
or
loopne
inc
mov
push
adc
add
jno
es
adc
in
add
or
inc
mov
xchg
and
adc
inc
or
add
pusha
mov
cmc
enter
pop
jne
push
mov
adc
jo
dec
fcmovnu
sub
and
sub
and
xor
add
inc
add
adc
mov
push
jge
sbb
sbb
cmp
shlb
imul
sbb
cld
jb
xchg
cmpsl
mov
in
outsl
mov
mov
dec
bound
movsb
xor
jns
mov
pop
test
jne
mov
cmp
pop
xchg
jo
sub
add
jb
cmp
outsl
and
lret
lret
add
rcll
adc
add
lret
inc
sbb
push
out
movsl
jnp
movsl
sbb
stc
popa
movsl
popf
xchg
sbb
jbe
subb
out
dec
push
or
nop
adc
dec
cmpl
shll
cmp
mov
cmpsb
push
sbb
sub
mov
add
pop
push
mov
xor
push
mov
xchg
out
repz
inc
inc
popf
movsb
popa
incb
add
mov
int3
push
adc
fneni(8087
mov
sub
sub
enter
mov
mov
add
andl
call
cli
icebp
dec
add
sbb
shrb
dec
ret
cmp
pusha
add
ljmp
mov
fdivrl
insl
add
shrb
js
inc
in
push
or
aam
pop
and
je
call
or
scas
inc
pop
rcrb
xchg
xchg
xor
lock
loopne
or
adc
or
in
mov
je
adc
or
stos
sbb
add
xchg
or
loopne
xchg
mov
inc
std
clc
ret
outsb
das
loopne
xor
cmp
hlt
push
jmp
cmp
in
pop
lret
sbb
jno
sbb
cmc
sub
push
jnp
or
aam
sbb
psrad
pop
jmp
cmpsb
scas
jmp
mov
mov
mov
jle
xchg
fcmovne
mov
mov
or
push
inc
dec
jae
mov
xchg
sbb
adc
jg
test
gs
dec
push
inc
in
xor
cmovnp
dec
push
jb
add
push
lcall
int3
ret
cli
cmp
push
mov
pop
or
dec
jmp
and
scas
mov
mov
jae
xchg
cmp
incb
add
lock
mov
addr16
mov
loope
sar
mov
sbb
push
dec
inc
cs
mov
loope
adc
push
popf
pop
mov
lea
push
cmpsl
pop
sub
mov
ljmp
ficoms
dec
pop
dec
lret
jae
adc
inc
je
push
mov
out
test
mov
add
ret
mov
xlat
bts
cmp
pop
dec
adc
push
pop
ja
inc
jmp
sbb
sub
mov
add
negl
mov
push
ss
mov
or
dec
aaa
jp
mov
adc
adc
pop
sbb
pop
sbb
mov
jle
es
je
rolb
test
inc
jmp
mov
pop
inc
add
outsl
rorb
dec
scas
call
mov
dec
mov
ret
push
pop
jmp
jbe
cmpb
jl
incb
je
mov
dec
adc
xchg
sbb
movsl
cmp
add
repnz
enter
dec
sub
add
loopne
mov
sbb
sub
cmp
xchg
push
sbb
int3
cmp
add
jnp
push
push
fdivs
fcomps
add
xor
pop
xor
idivb
stc
ljmp
mov
nop
ret
cwtl
mov
loope
sbb
les
popa
adc
sbb
cvtps2pi
inc
mov
push
movl
pop
push
adc
imul
push
mov
cmp
mov
cmp
out
xor
adc
into
dec
xchg
jb
xchg
js
lcall
mov
or
mov
and
shlb
push
or
bound
mov
sub
sub
lea
push
or
gs
sub
ret
add
or
loop
sbb
or
add
jo
popf
enter
pop
aam
jp
mov
sub
test
pop
lds
cli
add
add
sahf
loopne
fistps
mov
cmpsl
jmp
sbb
and
les
adc
mov
dec
mov
or
imul
decb
xor
sbb
mov
mov
cmp
js
dec
ficoms
xor
ret
out
sub
loope
test
inc
sbb
jp
mov
lsl
add
cmp
mov
and
sub
das
inc
mov
adc
lods
in
test
outsb
jae
shl
aaa
pop
jne
push
jb
hlt
in
les
jmp
cld
jge
sbb
dec
mov
bound
jg
xlat
jmp
int3
int3
aas
test
mov
jb
jecxz
inc
loop,pt
pop
jo
gs
mov
push
loopne
inc
or
gs
xor
push
add
rorb
add
sub
je
mov
push
stc
adc
or
fdivr
push
fmuls
and
mov
and
add
out
mov
add
sbb
xor
add
mov
cld
and
inc
xor
inc
lock
testb
pop
cmp
sub
jae
jmp
mov
dec
movsl
in
or
inc
sbb
rorl
loopne
arpl
clc
jb
jmp
push
lods
or
sub
pop
shlb
enter
adcb
imul
not
cmpsb
add
arpl
jb
xchg
xchg
das
or
push
test
add
push
and
daa
movsl
enter
dec
sbb
xchg
enter
xor
out
testb
mov
stos
or
mov
mov
cmpsl
inc
and
push
pop
jp
xor
sub
iret
jl
cmp
xor
xchg
scas
cwtl
or
js
adc
push
outsb
jecxz
or
lret
push
pushf
xchg
dec
inc
call
hlt
dec
pop
pop
js
pop
cmp
push
ficoml
cmp
hlt
cltd
sub
dec
aas
sbb
dec
xlat
sbb
xor
sbb
cmp
js
into
dec
mov
mov
or
push
add
xchg
or
imull
add
and
add
sub
xor
std
adcl
push
dec
into
add
dec
or
sub
add
les
loope
mov
jbe
pop
push
out
pop
repnz
out
jmp
or
out
shr
or
popa
pop
mov
push
mov
dec
or
cmp
mov
mov
inc
dec
inc
je
dec
ljmp
data16
bound
sub
lock
pop
cmp
sbb
push
mov
nop
fmuls
cmp
lods
or
add
pop
sbb
mov
push
sbb
aaa
adc
out
mov
mov
jnp
push
jmp
mov
xchg
test
adc
cmp
jmp
xchg
ljmp
sti
sbb
jp
adc
enter
and
pop
ror
push
movb
push
in
out
sahf
out
call
fidivrl
in
out
sti
out
aas
jmp
sarl
sub
mov
les
push
rcr
fimuls
int
jbe
and
xor
add
add
loopne
adc
testb
inc
and
ret
and
or
inc
sarb
clc
int
imul
inc
adc
pop
pop
dec
adc
cld
mov
mov
pcmpgtb
and
ret
clc
lea
into
add
rcrl
push
add
movzwl
ds
je
mov
adc
out
or
xlat
xchg
loopne
dec
inc
clc
ljmp
cli
imul
mov
lea
shll
test
decb
push
rcrl
jo
neg
inc
lock
jbe
pop
jne
cli
aas
jb
in
xor
ljmp
sbb
mov
je
pop
lret
shlb
lods
push
and
testl
call
rclb
rclb
cmpsb
clc
cli
xor
mov
adc
pop
jne
sub
neg
in
mov
sub
or
sbb
cmp
dec
add
cs
ljmp
pushf
push
imul
sbb
jle
cmp
mov
mov
mov
data16
inc
add
add
and
mov
dec
xchg
pop
hlt
lock
lea
jl
test
add
dec
jmp
enter
xor
incl
incb
sub
sub
mov
xchg
sbb
pop
xor
pop
hlt
and
jle
andb
mov
call
sahf
inc
mov
je
in
push
aad
test
in
inc
or
mov
mov
clc
cs
popf
rcl
push
inc
cmp
or
dec
addb
call
or
adc
cli
std
mov
aas
ja
mov
add
test
aam
inc
mov
push
cmpsb
push
add
inc
in
test
sarb
or
clc
inc
push
jle
pop
adc
cmp
sti
adc
cmp
cmp
call
mov
loopne
addr16
cs
push
or
adc
cmp
dec
pop
mov
cmp
xor
call
bound
pushf
add
mov
pop
leave
push
xchg
cld
jo
sub
insl
imul
subl
lcall
cld
adc
push
in
mov
pushf
cwtl
or
rolb
push
rorl
xor
or
jg
or
push
sbb
lcall
or
adcb
ljmp
ss
fdivl
dec
sbb
inc
pop
or
xchg
inc
inc
jmp
xor
mov
add
loop
loop
push
orb
push
or
pusha
roll
adc
push
jmp
cli
push
add
or
push
jmp
sbb
or
sbb
popa
dec
sti
or
in
sbb
insb
dec
push
mov
xor
inc
mov
push
aam
push
push
dec
andb
or
cmp
push
mov
xorb
jge
loope
xchg
in
mov
or
adc
add
xchg
sub
inc
mov
ret
push
lods
add
sbb
xor
daa
dec
xchg
in
mov
add
test
xchg
sbb
dec
hlt
rcrb
adc
loopne
negb
in
clc
cmpsb
sahf
lods
insl
jl
imul
mov
push
mov
dec
xor
and
jbe
cmp
xchg
rorb
not
and
in
add
sub
or
jp
add
jmp
sub
inc
loop
cli
sbb
loope
rol
or
pop
es
adc
jge
lock
jo
add
cmp
cmp
aas
mov
cmpsb
sarb
push
push
push
mov
je
rol
shrb
cmp
fsubrs
push
test
mov
dec
jnp
adc
dec
or
or
and
pushf
clc
incb
jmp
pop
push
repz
add
xchg
adc
sbb
shr
rorb
sbb
xor
or
xorb
insl
push
mov
iret
and
add
sbb
lret
push
lods
jmp
sbb
inc
iret
mov
adc
adc
js
mov
sub
cmp
test
sbb
loope
jae
jg
xor
inc
pop
test
ljmp
xor
push
push
js
xor
addb
popf
sbb
sub
mov
pop
jns
sbb
mov
push
int3
xor
sbb
cmp
mov
fsubrl
loopne
ss
and
and
ret
call
jp
mov
adc
adc
popf
and
out
ljmp
adc
jecxz
pop
test
les
sub
or
outsl
jmp
lds
sti
js
cltd
cli
shll
aas
test
sub
sub
add
add
inc
add
dec
adc
pop
dec
in
andb
clc
push
rorb
dec
out
call
scas
pop
nop
data16
sub
inc
clc
inc
push
aaa
add
jmp
or
pusha
push
inc
add
add
pop
ja
sti
push
sub
pop
inc
loop
or
or
hlt
clc
mov
and
cmp
or
or
les
ret
sub
lcall
inc
push
mov
andb
inc
les
add
adc
jae
cli
push
mov
adc
jl
pop
orl
addl
mov
xchg
mov
mov
cmc
adc
cmp
mov
jb
std
imul
inc
cltd
xchg
mov
mov
repz
add
std
and
push
mov
mov
add
orb
pop
movsb
sub
subl
ss
ret
test
mov
lret
mov
mov
mov
pextrw
lea
mov
sbb
rcr
mov
sub
das
adc
push
mov
into
adc
pop
pop
pop
mov
xor
pop
sbb
pop
cmp
xor
dec
sub
pop
cmp
es
stos
jg
xchg
jp
dec
xchg
push
rcl
loop
jne
sub
sbb
xchg
pop
pop
fwait
pop
mov
push
sub
loope
push
xor
xchg
cmp
les
fwait
push
pop
pop
sbb
adc
enter
xor
push
test
nop
xor
lea
cmpsl
and
adc
xchg
add
or
in
rclb
ds
cmp
imul
sbb
pop
in
pusha
xchg
xchg
inc
and
in
adc
into
and
sarl
xchg
loopne
test
ret
push
bound
into
cmp
dec
sub
out
inc
lds
adc
mov
mov
cmp
mov
clc
shll
inc
inc
nop
adc
mov
ret
cmp
fbstp
fistpl
sbb
sarb
rorb
add
dec
je
push
push
push
je
mov
mov
inc
inc
mov
sbb
sbb
repnz
lea
sbb
pop
xchg
xchg
les
insl
sub
loop
jmp
test
ds
mov
pop
cli
and
mov
push
aam
mov
add
dec
cmp
push
jl
inc
jmp
out
movsbl
dec
movsl
rcrl
rolb
and
or
sti
xor
push
mov
addl
dec
mov
rolb
jb
add
cmp
cmp
js
clc
add
mov
lcall
xor
add
cmp
xor
movsb
jmp
ret
xchg
test
rol
inc
or
adc
enter
xor
inc
clc
cmp
insb
cmp
scas
jl
cmpl
jle
push
or
loope
inc
hlt
fcom
aad
sbb
mov
pop
add
jmp
xor
jae
and
rcl
and
and
testl
lock
lds
pushf
mov
and
mov
test
cmp
orb
push
xchg
push
loopne
cmpsl
add
fidivs
clc
adc
test
jb
sbb
mov
in
lcall
pop
pop
pop
and
pop
test
xchg
shlb
cmpsl
movsb
xor
add
clc
pushf
add
adc
leave
lods
xorl
add
or
imul
aaa
add
fs
sub
or
sbb
les
ja
or
in
das
stos
dec
sbb
push
pop
or
sarl
sub
or
in
aaa
testb
out
jmp
push
out
add
imul
ffree
notl
out
add
rolb
mov
adc
inc
idivl
adc
insl
add
and
mov
lret
mov
enter
or
pusha
or
push
into
aaa
and
pop
inc
ret
jg
xor
rorl
xchg
and
lret
dec
mov
and
fldl
imul
aas
insb
ficoml
push
std
xor
je
andb
xchg
icebp
cmpsl
lock
test
in
cmp
jb
jno
or
adc
leave
pop
mov
adc
cmp
or
cmp
lcall
in
mov
sub
cmp
mov
pop
ret
sub
cmp
stos
xchg
cwtl
pop
sub
into
loope
ss
lock
jne
xchg
loopne
pop
sub
jecxz
cld
push
push
es
popf
sarb
aaa
jne
data16
inc
mov
jmp
mov
out
mov
xor
sub
je
es
push
inc
sti
lret
sbb
push
sbb
scas
adc
imul
mov
or
test
mov
test
adc
xor
dec
xchg
xchg
cwtl
cmp
sar
pop
andl
lods
mov
nop
adc
xor
adc
and
push
lcall
jge
cli
inc
push
or
jae
cmp
add
pusha
fimull
sbb
adcb
outsl
push
pop
nop
xor
mov
xchg
push
jmp
aas
inc
add
imul
inc
js
adc
lcall
or
repz
adc
repz
jl
jnp
lea
ds
scas
and
jle
pusha
adc
sbb
movsb
ja
js
mov
xor
rolb
push
mov
xor
xchg
add
mov
in
mov
lds
and
ret
jo
jl
mov
jmp
outsl
and
lea
sbb
in
pop
dec
sbb
add
out
jmp
aas
add
subb
or
outsb
lcall
push
orb
dec
sti
mov
and
dec
sub
in
sub
fisttps
mov
loope
mov
testl
xchg
jle
test
inc
adc
sbbb
insb
xor
test
stos
inc
dec
adc
sub
add
in
lcall
or
sbb
mov
cmpsl
mov
cmp
call
add
sub
mov
nop
ds
cld
mov
xor
lahf
cmp
fdiv
jbe
repnz
adc
daa
test
cmpsb
dec
jo
mov
push
adc
xlat
mov
incb
lret
movl
in
mov
mov
inc
test
lock
incl
pusha
xor
pop
mov
adc
pop
subb
or
xchg
mov
cmp
mov
sbb
adc
mov
fwait
inc
mov
add
popa
xchg
jle
test
in
sti
pop
xlat
jns
jnp
das
je
orb
xorb
fs
add
xor
mov
push
add
inc
jmp
and
cld
adc
jl
inc
outsl
loope
ret
mov
push
sub
rorb
in
pop
mov
ss
dec
jle
arpl
in
int3
in
hlt
dec
push
rcll
sbb
dec
lcall
xchg
insl
push
push
xchg
jno
or
mov
sub
testl
jae
push
add
sub
pop
pop
pop
xchg
add
mov
testb
xchg
adc
jnp
js
mov
jne
cs
popl
andl
jecxz
fnstsw
test
pop
xor
sub
sbbl
repnz
inc
jl
pop
mov
mov
add
lret
jns
mov
addl
outsl
lret
mov
xor
inc
sbb
push
rcrb
push
sbb
mov
lods
lds
fadds
xchg
test
xorl
cmpb
hlt
dec
and
lock
daa
je
jmp
ljmp
mov
gs
xchg
ss
jo
inc
mov
jno
inc
jge
js
das
out
cmp
jle
insb
lock
cmp
ret
mov
add
leave
or
scas
dec
or
push
add
into
xchg
mov
test
mov
test
mov
push
cmp
fmull
cmp
cld
mov
sbb
pop
sub
pop
loopne
in
scas
rcll
sbb
and
inc
movsl
es
pop
ret
push
xchg
aad
outsw
fisttpl
and
sub
pop
jmp
aam
pop
xchg
push
pop
call
aas
mov
push
test
xor
movl
jne
adc
xchg
fcompl
add
or
ljmp
dec
pushf
cwtl
roll
mov
adc
cmp
and
cmpsb
jmp
push
push
clc
push
pop
jne
add
fisubl
pop
lret
and
bswap
xchg
xlat
in
rcr
insb
or
push
jo
cmp
ds
or
sub
push
out
push
das
and
push
lcall
and
icebp
dec
sub
adc
cmpsl
xor
sbb
pop
dec
das
dec
jp
or
jo
push
rclb
jo
sub
add
pop
add
addl
push
jae
mov
jo
cmove
add
sbb
and
pusha
lock
push
and
mov
jl
lock
add
mov
dec
negl
or
or
fs
push
inc
aam
rcrl
insl
and
les
jp
pop
sub
sbb
cli
clc
xor
adc
sti
push
or
mov
xor
fistpll
adc
xor
lahf
ret
int3
add
shll
adc
addr16
xchg
push
sbb
mov
ljmp
sti
dec
push
mov
inc
andb
fs
xchg
repnz
pop
fcmovb
shll
sbb
movsl
fs
xor
jb
jno
mov
jg
or
bound
fmuls
push
add
mov
pop
pop
in
movsb
mov
lods
push
inc
sub
int3
test
movsb
cmpb
mov
mov
sbb
cmc
cmp
mov
inc
or
test
cli
inc
pop
cmp
adc
add
push
and
shlb
mov
popa
inc
or
push
rclb
and
pusha
pusha
cmpsl
icebp
jne
sahf
sub
push
fstpl
in
jmp
sub
call
pop
pusha
ret
xchg
stos
dec
ljmp
jecxz
push
movsl
mov
xor
push
sbb
push
fcmovbe
imul
les
dec
test
mov
lret
push
jbe
jle,pt
push
pop
cwtl
and
jbe
dec
sub
ret
repz
out
stos
xchg
add
rcrb
or
add
push
cmp
sub
add
adc
adc
add
xor
test
xchg
mov
fcoms
and
incl
add
sbb
jb
scas
push
add
adc
jmp
cld
mov
xor
divb
in
mov
inc
loope
jbe
jmp
sub
add
ds
and
test
xlat
inc
rcrl
adc
cmp
adc
mov
add
fstl
dec
std
aaa
push
adc
xchg
into
mov
call
jl
add
sub
or
in
popa
add
movsb
cmpsb
jge
ret
adc
jo
jmp
push
in
int
or
mov
adc
xor
fsubs
sti
lret
or
jge
fdivl
sub
mov
or
and
in
fsubrs
bound
push
ret
dec
into
mov
ja
mov
lods
enter
mov
inc
pusha
pop
xchg
cmpsb
pop
clc
add
fadds
adc
xorl
mov
or
push
lock
pop
push
nop
adc
dec
add
adc
adc
adc
insb
push
sbb
adc
xor
data16
or
sbb
les
rolb
bound
loopne
add
add
jns
add
xchg
inc
sbb
stc
adc
adc
or
das
push
nop
mov
sbbb
inc
fdivrs
dec
js
sbb
xchg
inc
push
push
sub
push
enter
orb
or
test
fiaddl
mov
inc
data16
push
leave
push
and
pop
pop
push
add
and
lds
pop
cmpsb
enter
test
orl
adc
stc
fwait
mov
push
cmpsl
push
push
rolb
or
out
or
push
pop
into
push
adc
adc
dec
pop
xchg
rolb
imul
movsb
add
jnp
lret
add
push
jmp
mov
idivl
mov
push
mov
shl
and
jecxz
pop
adc
mov
bound
push
mov
jl
test
fsubs
add
adc
xorl
pushf
aas
sub
xor
fs
mov
out
sbb
mov
add
add
adc
lods
in
andl
aas
or
mov
addb
enter
inc
cmp
push
push
mov
sbb
outsl
or
clc
push
dec
pop
aad
outsb
out
je
pop
je
ja
jae
push
and
mov
adc
daa
adc
hlt
roll
imul
gs
pop
pop
push
add
add
mov
jno
push
pop
lea
rep
notb
xchg
hlt
jne
je
adc
mov
das
shlb
jp
aam
ljmp
or
or
pop
shrl
mov
in
rcll
cmp
add
mov
push
or
scas
jne
inc
or
loope
xor
push
push
jmp
fdivrs
or
int3
xor
xor
ss
sbb
popl
pop
movsl
jle
sub
and
scas
fildl
icebp
clc
push
cmp
rolb
cwtl
adcl
inc
aam
jmp
sbb
sub
or
cmpsb
adcb
cs
notl
clc
pop
adc
js
or
pop
xor
inc
subl
sub
or
push
add
inc
adcb
pop
jno
sub
aam
or
mov
aad
jne
pop
and
pop
call
sbbl
push
or
mov
dec
pop
lea
pop
inc
mov
dec
test
cmp
test
clc
push
cmpl
dec
data16
scas
and
mov
push
shrb
outsw
push
mov
mov
cmp
mov
xor
loopne
mov
mov
cmp
pop
adc
or
adc
rcll
in
add
fxch
enter
js
mov
xor
push
or
inc
ror
sub
pusha
or
jmp
dec
outsb
or
ja
sbb
insb
xor
sub
cmp
outsb
push
sbb
add
js
add
xorl
dec
pop
outsl
ror
sub
dec
lods
and
subl
popa
push
out
pop
or
mov
mov
push
push
add
aam
cmc
cwtl
mov
lcall
adc
shrb
and
mov
pop
sarb
shlb
rolb
push
cli
push
cmpsl
xor
int3
dec
cld
and
or
inc
rolb
push
adc
movsb
add
rorl
push
push
ss
add
sub
add
jl
fstl
inc
add
fdivrs
out
jmp
lret
push
pop
adc
mov
jecxz
clc
andl
mov
mov
push
add
xchg
rolb
push
enter
popf
pop
rcr
into
cmp
and
mov
push
adc
inc
inc
imul
rcll
orb
mov
fldl
push
insb
out
pop
push
and
in
jno
sarl
xchg
insl
ss
push
faddl
insl
push
insl
sub
inc
pop
lret
xchg
xlat
sub
or
mov
push
push
push
jmp
jle
shll
dec
and
mov
and
inc
inc
jne
sub
lock
cmp
pop
sbb
pop
jecxz
jae
or
xor
addb
ret
sbb
in
add
add
mov
lea
xchg
sub
jmp
lds
loopne
dec
dec
sub
jg
xor
loop
popa
addb
sub
nop
shll
es
cmp
push
scas
sti
cmpsb
or
test
lret
mov
add
xchg
sbb
pop
jo
inc
or
inc
fdivs
inc
pop
mov
insl
test
mov
adc
sub
mov
mov
mov
in
jmp
inc
ss
jno
repnz
fstps
lahf
and
in
repnz
xchg
scas
sbb
add
arpl
xor
or
push
jge
mov
add
jl
xor
clc
cmp
adc
outsl
arpl
add
cmpsb
out
mov
rorl
and
sbb
stos
idivb
push
or
scas
xor
cmp
fcomps
movsb
enter
iret
push
pop
pusha
mov
adc
pop
mov
sbb
jmp
xor
test
daa
nop
clc
and
in
adc
test
push
subl
cltd
movsb
add
inc
xchg
addl
shl
add
shrb
shl
xor
out
jg
shl
std
or
sub
sbb
inc
scas
js
lea
and
inc
add
push
mov
int3
mov
and
pushf
data16
cmp
adc
and
add
or
push
orl
cwtl
mov
and
push
jno
xor
mov
out
jb
lds
add
push
sbb
dec
push
mov
adc
inc
jl
pop
push
invd
dec
adc
pusha
movsl
add
repz
push
pop
and
mov
daa
lret
push
adc
and
mov
inc
dec
enter
dec
mov
inc
clc
adc
das
push
push
pop
sbb
add
dec
dec
jo
adc
cmovno
sub
xor
mov
add
jmp
insl
or
pop
shlb
decl
inc
pop
test
and
repz
movsl
pop
ja
pop
xchg
jnp
movsb
sbbl
js
inc
inc
sub
jo
rorb
rclb
add
jnp
addb
mov
ja
cmpb
push
adc
jo
lods
adc
cmp
ret
xor
or
es
ds
insl
mov
lea
sub
int3
cli
stos
or
nop
or
jge
jne
xchg
lret
es
pop
xor
or
and
pop
aas
mov
push
aad
bound
adc
ret
push
in
movsb
into
je
stos
add
push
fwait
je
movsl
pop
movsb
movl
mov
xchg
dec
mov
or
jmp
mov
xorl
sbb
fdiv
sub
add
dec
inc
add
xchg
add
jecxz
jmp
insb
push
push
fs
pop
push
sub
arpl
pop
mov
inc
ret
cmp
dec
imul
divl
dec
add
add
popa
lds
je
outsb
push
push
repz
add
dec
pop
jne
pop
pushf
or
js
gs
gs
cmp
repnz
add
pushf
test
ljmp
das
mov
or
stos
aas
sub
sbb
scas
addb
and
dec
lret
sbb
and
add
faddl
xor
adcb
push
or
shrb
xor
adc
das
dec
stos
mov
adc
jbe
scas
or
ds
inc
or
cli
shrl
sbb
sbb
inc
pop
push
std
repz
cmp
jae
push
pusha
cmp
pop
inc
rcrl
inc
aaa
sbb
cmp
leave
push
lock
pop
adc
sbbb
cmp
cmp
das
lods
subb
push
outsb
or
dec
add
rcl
cmp
pop
std
xlat
clc
sbb
jmp
inc
cmp
jb
pop
fldcw
pop
sbb
mov
movsl
or
add
jl
outsl
and
push
pusha
outsl
xor
mov
loopne
cmpsb
sbb
pop
jae
lock
popf
sbb
pop
sub
cmp
adc
addr16
scas
nop
leave
ret
das
pop
aam
out
and
mov
test
add
adc
inc
mov
inc
jmp
idivb
mov
xchg
push
inc
xor
nop
sub
stos
push
rcrb
xor
sub
jmp
xor
stc
leave
jmp
cmc
sub
inc
mov
inc
or
lea
add
dec
or
cli
pop
dec
xor
inc
jg
pushl
iret
cmp
clc
and
jne
js
xor
add
xor
cld
push
adc
lods
aaa
movb
xchg
mov
adc
out
adc
or
icebp
cmpsb
add
fiaddl
ret
push
mov
xchg
sahf
dec
pop
inc
add
cmp
add
incl
cmpl
jl
loopne
hlt
lock
loopne
sbb
pushl
mov
outsb
sbb
mov
jmp
jg
loope
mov
push
ret
push
mov
jl
je
mov
or
and
xor
repz
jo
jo
xchg
lret
fadds
dec
and
and
push
sbb
orl
fisubl
add
push
pshufw
and
loopne
pop
repz
inc
jmp
cmpsb
repnz
add
jo
sub
add
jae
push
cs
jo
subb
shll
pop
mov
add
inc
xchg
inc
xchg
xor
ret
cmp
addr16
push
shl
jbe
iret
fdivrl
push
jne
int
cmp
or
cmpsb
adc
cmpl
jo,pn
mov
mov
adc
fnstenv
push
adc
aas
into
lock
mov
or
xlat
dec
test
jmp
gs
push
push
mov
out
stos
xor
push
out
push
ljmp
mov
add
cmp
faddp
in
cld
jle
xlat
mov
or
and
es
add
rcrl
push
stc
cmp
loope
aaa
or
push
call
inc
adc
pop
sbb
fldenv
cmp
sbb
je
sbb
pop
dec
jnp
pushf
or
mov
jmp
orl
popa
push
push
mov
movsl
mov
jl
nop
mov
push
dec
mov
addl
xor
test
inc
mov
cwtl
xchg
inc
les
test
int
loope
dec
cmp
add
push
sbb
push
outsl
pop
rorb
push
or
and
fsubp
xchg
xchg
jne
and
cld
jo
mov
adc
lret
dec
outsb
xchg
mov
addb
addl
or
and
popa
fadds
pop
xor
cmp
inc
and
mov
mov
addr16
jo
loope
jp
fistpl
lock
into
cmp
rol
push
rcl
or
ljmp
jno
dec
xor
adcl
or
pop
lret
lcall
dec
into
ds
mov
notb
hlt
push
out
and
or
fildl
sub
cmpsb
cmpsb
and
push
insl
xchg
jle
mov
hlt
jg
mov
cmp
push
cld
jg
enter
dec
push
push
or
inc
add
lock
enter
fdivr
push
xlat
leave
mov
and
or
mov
imul
mov
push
repz
or
pop
mov
and
adc
aam
or
aam
add
xlat
add
jb
mov
adc
xchg
xor
enter
lret
loopne
cmp
repz
sbb
clc
or
xor
xor
es
sbb
xor
jge
xchg
inc
nop
mov
in
push
and
aaa
add
scas
cmp
mov
mov
mov
js
or
lret
dec
cmp
push
lahf
rcrl
cmp
or
sbb
or
jne
xor
mov
push
sub
adc
sbb
xchg
es
and
xchg
and
rclb
jno
add
pop
jbe
or
das
or
insl
in
jle
add
add
add
test
add
jg
sbb
rorb
inc
mov
cmp
inc
loopne
mov
mov
fadds
shll
inc
lock
push
xchg
popf
adc
inc
pusha
and
add
push
or
fwait
cmp
add
subl
lods
xorl
mov
sbb
enter
or
pop
cmp
add
lock
cmp
or
inc
popa
add
movsl
mov
add
push
cmp
lahf
add
and
lret
mov
or
mov
int
xor
jae
push
test
dec
js
pop
jne
jbe
addl
nop
pushf
fsubs
stc
test
jge
inc
or
mov
adc
inc
lcall
mov
rorb
enter
dec
mov
xchg
cmp
pop
ss
mov
std
or
rcrb
roll
dec
jne
mov
xchg
mov
add
jo
icebp
add
test
adc
pop
xor
and
sbb
mov
sub
cmp
shr
and
movsl
inc
mov
adc
or
fimuls
push
mov
inc
xchg
bound
inc
rcrb
push
hlt
push
xor
cmc
lock
orl
test
fcmovnb
mov
dec
sub
pop
dec
pop
sbb
icebp
pop
add
movsb
cmp
add
and
mov
or
flds
adc
sbb
jne
sbb
push
jno
nop
prefetcht0
cmpsb
or
outsb
mov
aas
andb
js
dec
pop
pop
push
in
push
loop
mov
dec
mov
push
add
inc
nop
sbb
xchg
ret
xor
add
push
push
sbb
xchg
or
adc
inc
jnp
cmpl
cwtl
xor
pushf
xsha256
cmpsb
push
sbb
sbb
cmpsl
ds
push
dec
cmp
xchg
clc
shlb
push
movsl
or
sahf
addb
inc
jns
push
add
into
jl
jp
cmp
xchg
xchg
or
pop
or
xchg
push
or
push
lds
mov
sub
sbb
xchg
mov
or
idiv
orb
or
hlt
push
add
xchg
push
dec
dec
ret
push
add
in
lcall
jne
int3
mov
or
add
shll
ss
scas
inc
pusha
in
aas
jp
xchg
push
or
std
inc
arpl
add
inc
scas
jns
lret
ret
cmpsb
inc
dec
roll
add
jo
adc
test
add
xchg
mov
xchg
loop
mov
or
fisubl
dec
inc
inc
adc
inc
push
jns
out
dec
or
out
pop
pop
mov
push
jmp
aas
jmp
mov
mov
dec
push
out
sbb
adc
mov
lock
cmpsl
adc
push
stc
and
ljmp
es
adc
cmc
or
inc
add
aam
cmp
adc
sub
sub
or
int
imul
movsl
andl
fimuls
mov
mov
push
sti
loope
add
ds
js
add
insl
jmp
sahf
adc
or
ud2
orl
inc
mov
dec
push
insb
in
mov
out
enter
shlb
sbb
outsl
or
lock
inc
cmp
dec
subb
xor
pusha
or
inc
sbb
movsl
movsb
dec
jl
mov
and
or
push
pop
push
adc
dec
sbb
mov
inc
pop
adc
faddp
jge
jnp
in
sahf
xchg
jbe
ss
sbb
bound
cmpsb
aas
insl
xor
sahf
xchg
flds
test
pop
popf
movsb
mov
mov
icebp
sti
stos
xchg
pop
sysenter
adc
popa
xor
push
cmp
mov
nop
mov
adc
xor
pop
mov
sbb
cld
sub
addr16
mov
adc
mov
lahf
adc
and
or
test
test
fdivs
mov
stos
int
je
roll
add
or
mov
out
cmp
mov
xchg
pop
pop
and
push
push
inc
lods
pop
fisttps
mov
push
fiaddl
es
je
inc
adc
jne
pop
loopne
inc
pop
cltd
aad
mov
loopne
add
fwait
xchg
sub
cli
push
int3
cmp
inc
in
mov
jae
add
dec
sub
push
and
sbb
xlat
lods
icebp
shll
push
push
js
sbbl
add
add
enter
stos
add
outsb
pop
add
icebp
push
dec
xchg
mov
mov
inc
loop
xor
jl
mov
pop
xchg
adc
call
add
aas
or
sbb
adc
inc
push
cmpsl
pop
inc
and
call
add
or
mov
addl
sbb
mov
pop
pop
xlat
rorb
lods
or
out
negl
shlb
mov
cmc
mov
push
imul
daa
ss
push
in
add
adc
cli
lods
dec
sbb
mov
inc
mov
jnp
popa
mov
add
sbb
and
push
add
pop
ret
add
add
or
clc
or
xchg
jle,pn
xchg
mov
pop
inc
mov
mov
sbb
push
mov
xchg
inc
popf
or
lods
or
mov
lret
mov
add
or
inc
inc
cmpsb
add
dec
arpl
mov
movsb
lret
jmp
push
dec
add
loopne
mov
dec
add
mov
pop
je
cltd
cmp
add
push
mov
adc
shlb
cmp
xor
and
push
push
add
sbb
mov
sbb
push
and
or
sbbb
movb
jne
jecxz
movsl
fbstp
xor
jne
and
xor
inc
sub
push
inc
sbb
int3
add
mov
mov
dec
frstor
xor
cmp
mov
xor
add
push
cmpsl
or
pop
int
imul
in
shl
das
out
push
dec
pop
fsts
mov
fcoms
loop
dec
mov
push
inc
xchg
xchg
inc
cli
mov
das
in
xor
js
es
add
xchg
push
clc
cmpsl
xor
and
pusha
and
scas
js
ret
js
cmp
pop
cwtl
mov
aam
push
leave
xor
pop
push
pop
mov
push
add
enter
inc
cmp
sub
js
icebp
sbb
push
sub
in
xchg
push
adc
enter
sub
rcll
outsb
inc
mov
and
mov
out
jne
jnp
add
add
adc
call
inc
xor
ja
add
and
mov
dec
push
pop
je
cmpw
adc
inc
lods
ret
or
adc
jbe
cmp
insl
lock
and
roll
jne
addb
mov
push
cmpb
add
in
addr16
pusha
xchg
add
mov
dec
bound
sub
sbb
and
inc
or
pushf
test
mov
push
imul
sub
push
cltd
int
ss
inc
lret
jo
pusha
xlat
push
and
or
xchg
add
orb
sub
or
in
pop
jnp
push
add
cmpsb
mov
push
stos
mov
sarl
add
and
test
xchg
jnp
or
mov
and
aas
and
jp
ret
lods
pusha
add
movl
mov
mov
pop
mov
lea
fnstcw
sbb
outsb
adc
popa
push
dec
outsb
sbb
sbb
imul
inc
and
enter
mov
push
xchg
xor
call
dec
inc
adc
mov
xor
push
aam
add
gs
xor
and
in
add
adc
sbb
add
add
mov
inc
adc
push
or
add
out
add
mov
push
ja
mov
mov
aas
mov
aaa
push
jns
jne
mov
movb
cmp
stc
stc
loopne
sbb
ljmp
jne
scas
sti
xchg
movsb
out
jge
iret
pop
aad
and
cmp
push
test
xchg
mov
dec
adc
dec
xchg
ds
sbb
jno
pop
sbb
outsb
add
xor
jmp
add
add
adc
or
test
ret
cmc
pushl
les
xchg
sbb
pop
addr16
and
cmp
test
dec
jnp
and
loopne
mov
iret
fsubrs
repnz
sbb
int3
insb
rep
fwait
pop
shlb
icebp
rcll
gs
inc
cmp
sbb
mov
jae
adc
push
fs
pop
sub
insl
into
push
pop
inc
outsl
je
outsb
mov
pop
add
mov
movsl
inc
in
pusha
add
iret
nop
mov
inc
xlat
nop
ss
mov
lahf
cwtl
inc
push
push
enter
mov
xlat
push
enter
test
push
push
insb
pop
dec
mov
sub
dec
or
cld
sbb
pop
dec
mov
add
fs
jnp
xorb
shlb
loope
inc
adc
test
lgs
lcall
sub
cmp
insl
adc
insl
sbb
cmp
cmp
lcall
pop
adc
push
jb
adc
add
ja
cld
aam
jno
dec
xchg
sub
idivb
orb
sub
inc
ret
jmp
lea
roll
lahf
add
xor
cmp
and
int3
cmp
mov
ret
and
imul
or
andl
push
pop
inc
ret
ljmp
cmp
movsl
cmp
sbb
adc
ds
sbb
xor
cld
xchg
pop
hlt
insb
xor
adc
inc
inc
nop
dec
jo
xchg
aam
nop
cmpl
test
fs
movsl
addr16
add
xor
ret
je
sub
cmpsb
push
fidivl
add
inc
imul
sbb
shlb
xchg
add
jae
dec
enter
or
cld
push
subl
push
sub
xchg
test
mov
in
adc
xor
inc
mov
hlt
ds
xchg
in
fdivrp
inc
push
cmp
mov
dec
mov
and
push
jmp
jb
mov
jp
push
movsl
mov
fs
movsl
loopne
push
lods
jne
cltd
jbe
mov
xchg
es
dec
cwtl
lock
xlat
flds
incl
ds
aad
sbb
dec
pushl
pop
fidivrl
pushl
and
loopne
insl
push
mov
cli
nop
jmp
daa
push
dec
pop
pusha
test
adc
add
adc
jo
scas
pop
push
mov
fmuls
push
addl
cmpsb
cmp
mov
adc
push
ret
sbb
testb
test
scas
popa
jno
test
pop
pushf
mov
pop
lahf
xchg
pushf
jbe
mov
inc
sbb
js
or
xchg
pop
add
inc
mov
sub
jl
push
movsl
xchg
daa
mov
dec
adc
and
mov
push
iret
inc
pushw
in
loope
xor
sbb
scas
cmp
cmpl
xor
dec
lret
xor
or
sarl
xchg
push
sbb
jmp
pop
mov
lock
push
fcomps
adc
int3
sub
inc
mov
jmp
addr16
push
and
stos
testl
xchg
and
pop
xor
int
cli
sbb
push
aam
inc
jae
ret
je
dec
fsubrs
and
ljmp
sub
inc
pop
loop
cs
movl
push
xchg
rorl
loope
je
and
sub
sahf
or
mov
je
cmpl
and
movb
mov
loopne
or
mov
adc
inc
in
and
adc
xor
adc
adc
sbb
pop
xchg
and
inc
lods
mov
cs
xor
pop
clc
hlt
test
xchg
aam
stos
jo
mov
lods
aam
pop
rcl
mov
or
sbb
mov
repnz
mov
dec
push
push
movsl
rorb
movsb
test
or
dec
sarb
mov
xchg
sub
or
and
mov
and
xlat
or
mov
lock
xchg
or
or
testl
cli
dec
add
add
add
or
mov
jb
icebp
dec
inc
imul
xchg
dec
mov
imulb
push
lcall
sbb
cld
jmp
dec
mov
mov
xchg
ret
cmp
subl
fnstcw
jns
jno
sub
push
cmp
xor
scas
cmp
clc
std
mov
sarb
sbb
es
cmp
jne
dec
and
hlt
adc
js
test
push
inc
ss
inc
fdivr
fisttps
push
and
lret
pop
jo
dec
shrb
call
pop
mov
push
and
test
test
xchg
push
adc
mov
ds
cmp
aam
xor
arpl
test
inc
and
sub
mov
xchg
xor
cld
lods
mov
lods
dec
push
mov
pop
data16
push
fistl
or
test
aas
insl
testl
pusha
pop
jmp
pop
orb
sub
push
mov
adcb
lods
adc
jmp
in
xchg
add
mov
xchg
cmpl
and
push
lea
adc
push
and
pop
fcoml
inc
sub
jp
inc
je
pop
shrb
int3
nop
dec
mov
lock
and
aam
dec
adc
and
call
ss
shll
inc
add
sub
push
pusha
add
adcl
sub
lret
jno
inc
dec
mov
cltd
fildll
pop
pop
push
rclb
sub
movsl
test
sbb
add
or
mov
mov
lock
jle,pn
pop
pop
lret
sbb
ficoms
inc
sub
pop
jg
loope
and
imul
pop
testl
fdiv
push
mov
add
or
es
mov
fcoms
fs
push
adc
xlat
sbb
inc
xor
adc
in
and
imul
or
insb
add
sub
ja
popa
repz
push
nop
dec
pop
gs
pop
or
inc
xchg
and
xchg
je
cmp
add
rorb
add
and
dec
call
add
dec
je
in
mov
push
adcb
test
sbb
adc
mov
in
or
sub
rorl
pop
fdivl
sti
jmp
sub
stos
cs
xor
dec
push
mov
loopne
pop
push
jmp
xchg
push
ficoms
fndisi(8087
jo
jl
jbe
pop
mov
ss
dec
enter
rcrb
xor
inc
jmp
cmp
adc
push
rcrl
lock
lods
mov
inc
xchg
fldt
sub
mov
sub
inc
fcom
es
xor
clc
insl
jae
mov
push
push
mov
popa
add
pop
add
aad
xor
adc
dec
mov
add
ljmp
pop
add
mulb
sbb
xor
dec
sbb
lods
sbb
add
repnz
dec
sbb
add
dec
push
es
int
mov
add
int3
dec
ljmp
mov
adc
sbb
or
lcall
cmpsl
aam
lock
or
sub
inc
push
mov
cmp
sub
push
fcoms
push
push
testl
mov
ds
cmpsb
ret
jmp
cwtl
shll
hlt
je
mov
shl
mov
shrb
jp
sub
inc
int3
xor
fs
mov
adc
push
out
sub
add
mov
mov
cmp
sti
push
push
roll
add
or
sbb
lret
ret
xchg
cmpsl
xchg
add
outsb
mov
add
cmp
sbb
dec
mov
jne
out
push
push
ficoms
dec
or
in
sbb
push
pop
adc
bound
mov
pusha
mov
pop
nop
sub
sub
sub
push
imul
movsb
or
push
outsb
stos
rclb
sti
mov
jne
iret
push
fstpt
push
add
pop
loopne
dec
les
sbb
pop
pop
and
add
shl
pop
test
add
lcall
push
push
lods
cmpsb
gs
adc
push
inc
sub
ret
adcb
mov
jae
les
push
test
jo
push
enter
adc
hlt
push
xor
jmp
add
cmp
dec
or
test
jne
cmp
jne
dec
rcll
stos
pop
or
add
cmc
mov
push
lods
addr16
insl
mov
pop
push
inc
or
mov
mov
inc
cmp
jae
imul
nop
xor
mov
adc
cmp
mov
add
inc
cmp
push
les
rorb
fwait
push
ds
mov
push
mov
scas
out
pop
shrb
pop
mov
es
inc
pop
jns
sbb
dec
adc
sub
mov
dec
cwtl
ja
adc
subl
lret
loop
loope
pop
outsb
sbb
fstpt
scas
loop
fstpl
mov
dec
sbb
cmp
aam
xor
sbb
jbe
and
adc
aaa
aad
adc
shlb
mov
sbb
push
mov
push
or
jl
add
outsb
push
mov
push
sub
jmp
jmp
xor
add
mov
and
jo
xchg
test
and
cmpsl
mov
jmp
sbb
pop
paddsb
loop
push
and
push
inc
into
xor
aaa
adc
pop
lods
jmp
push
and
insb
sbb
push
test
je
mov
sar
xchg
sbb
jmp
xchg
xchg
jmp
add
iret
inc
jmp
lock
mov
stos
aas
mov
jbe
mov
jmp
pop
pop
and
push
pop
pusha
imul
mov
into
mov
stos
maxps
jmp
insl
add
nop
fs
stc
in
jmp
sub
jne
or
js
lods
pop
fdivrl
push
dec
enter
mov
push
xchg
dec
imul
and
push
ss
test
faddl
push
mov
dec
cmp
sahf
push
je
mov
push
jg
fucomip
sarl
push
popa
imul
push
sbb
xor
xchg
push
mov
iret
jnp
in
mov
es
jns
idivl
pop
push
sub
dec
data16
xchg
out
gs
insb
mov
nop
fsubrs
es
xchg
sub
cmp
outsl
push
push
pop
dec
xchg
push
mov
dec
loopne
pushf
push
mov
sub
subb
nop
or
xchg
xchg
inc
sub
or
sbb
mov
je
mov
cmp
lock
mov
mov
fcmovbe
adc
sbb
add
les
das
adc
pushf
ds
mov
mov
lods
lds
cmp
insb
or
pop
imul
add
xchg
lret
lds
andb
or
mov
push
xlat
sub
jo
push
mov
aad
loop
in
or
inc
adc
push
pop
pop
pop
push
xchg
or
jle
pop
mov
iret
test
orb
or
mov
lds
nop
or
rcll
or
or
xor
sub
sbb
and
cltd
js
xor
push
inc
dec
and
push
cmpl
inc
jmp
pop
mov
lods
jno
jbe
pop
hlt
add
push
push
inc
lock
repnz
xor
fs
loop
lock
shll
in
das
or
adc
xchg
dec
enter
jmp
or
fisttpll
add
jecxz
mov
sbb
push
or
pusha
loope
dec
in
mov
addb
add
adc
ret
xchg
dec
sub
pop
pop
and
pop
xor
ret
sbb
jno
arpl
mov
ss
mov
or
jno
push
push
filds
push
movsl
test
ljmp
xchg
mov
push
adc
syscall
std
cltd
stc
sbb
cli
jl
push
je
shlb
dec
push
into
jmp
mov
outsl
test
pusha
dec
pop
sbb
loope
lret
mov
fldl
mov
mov
mov
in
sbb
add
frstor
jmp
and
adc
cs
and
push
sbb
xchg
insb
call
das
movsl
xchg
xor
or
push
adc
les
test
inc
addl
adc
and
or
dec
test
add
cmp
fcomps
cmp
pop
mov
shlb
mov
dec
xchg
adc
cmp
add
jle,pt
ret
inc
push
or
xor
roll
dec
mov
dec
std
fwait
mov
loope
sbb
mov
loope
push
fmuls
push
test
sub
sarl
cmp
lcall
push
fsubrs
inc
pop
cmp
aam
je
in
ja
mov
push
add
adc
lods
cmp
arpl
sbb
cli
inc
ja
imul
and
int
outsb
adc
jbe
or
sbb
dec
jne
xor
add
push
add
dec
movsb
movsl
mov
add
adc
es
fs
cmp
fldt
mov
mov
into
pop
je
in
cmp
or
sub
mov
xchg
inc
inc
or
cmp
cmp
sub
add
fdivrs
push
outsb
mov
loopne
push
lret
add
cmp
pop
mov
push
sub
into
pop
add
or
ud1
fsubrp
rcrb
adc
adc
jmp
inc
dec
daa
nop
or
xchg
clc
jecxz
xor
sub
and
dec
sbb
mov
adc
jmp
into
push
or
or
stos
rclb
cmpsb
pop
add
sub
adc
adc
imul
and
shr
xor
inc
push
xchg
adc
js
or
sbb
xor
jo
sub
inc
pusha
sub
add
sbb
jmp
cmp
imul
daa
jne
sub
adc
and
sbb
lea
mov
cmp
xlat
or
in
insb
dec
je
xor
xchg
lds
lea
jb
shl
icebp
cmp
xor
xchg
inc
rcrb
xchg
add
mov
fsts
push
sbb
mov
sbb
push
jmp
mov
pop
pop
push
fcompl
add
sub
cwtl
jbe
push
popf
push
cmp
push
stos
lock
inc
arpl
rcrb
in
inc
adc
push
inc
or
mov
cmp
push
das
arpl
je
add
addl
dec
sarl
lret
shlb
mov
lret
ss
sub
jo
adc
xor
add
clc
movsl
mov
pop
aaa
sbb
pop
and
aas
mov
adc
popf
push
push
cmp
lock
xchg
call
or
push
mov
sbb
or
aam
repz
clc
adc
daa
mov
or
push
xor
movsl
dec
nop
push
cwtl
pusha
jmp
outsl
out
mov
cltd
mov
lods
jle
jne
pushf
pop
jns
imul
pusha
dec
test
lea
adc
xor
jle
sbb
cmp
inc
incl
and
das
add
and
imul
lods
add
clc
mov
mov
jno
sbb
ja
mov
or
and
js
add
cmp
mov
xchg
push
ss
sti
cwtl
and
mov
xchg
jl
mov
jae
outsb
xchg
adc
jmp
and
enter
fwait
popa
add
jge
mov
lcall
xchg
orl
or
sbb
add
jge
or
dec
ljmp
fsubr
mov
and
push
aam
stc
roll
int3
adc
and
push
and
mov
insb
loopne
push
call
or
or
es
fnstsw
jne
xor
jmp
cs
roll
in
add
xchg
adc
mov
clc
dec
push
insw
out
imul
xor
adc
sbb
orl
adc
push
dec
push
call
bound
stc
mov
dec
cmp
jp
inc
movsb
rcr
mov
push
or
xchg
sub
xchg
and
mov
mov
add
addb
mov
mov
add
adc
push
or
or
push
stos
imul
cmp
shlb
and
or
test
jl
loope
je
lahf
push
lock
popa
jb
add
adc
push
add
jb
xchg
stc
invd
push
or
push
pop
or
scas
mov
xchg
cmp
sub
icebp
aaa
sbb
adcl
ret
lcall
jbe
jnp
dec
dec
rcll
inc
sbb
cs
mov
xor
and
xor
fnsave
sub
fwait
xchg
sahf
jnp
cmp
hlt
sbb
cmp
je
rol
add
jne
ss
push
mov
pop
cmp
ds
sti
rorb
sbb
test
in
je
and
push
loopne
push
hlt
jne
or
cmp
or
out
push
mov
shl
cmp
sbb
shll
insb
inc
push
inc
clc
inc
enter
andl
test
adcb
pusha
ret
sub
sbb
sub
add
and
rcr
mov
push
inc
push
add
sbb
lea
pop
adcb
push
int3
or
sbb
adc
adc
lcall
sbb
stos
push
insb
js
je
adcb
inc
add
add
jmp
xor
inc
mov
sub
sbb
clc
add
and
jne
xor
or
jmp
or
rorb
iret
lods
add
or
xor
lods
sub
xor
xchg
inc
sbb
shlb
add
xchg
sbb
out
jno
adc
addr16
push
push
cld
fwait
inc
add
or
push
and
call
ret
mov
jnp
xlat
fdivl
ret
add
mov
push
sbb
sbb
dec
pushf
or
aam
pusha
or
es
inc
call
mov
add
mov
mov
xlat
cmp
outsl
add
add
and
xor
jp
push
add
ds
dec
add
xorl
add
aaa
add
test
insl
test
hlt
xor
sbb
repz
sbb
xchg
dec
push
dec
inc
lds
lock
out
push
inc
jo
aas
rolb
xorb
push
aas
adc
sub
xor
fcomip
jns
mov
loopne
mov
inc
dec
clc
xor
xor
adc
and
cmp
mov
ss
cmp
lea
push
in
bound
rcr
inc
adc
test
adcb
and
jge
test
mov
and
cmp
add
fsubs
or
test
shl
and
dec
mov
or
insb
jle
push
xchg
sub
or
xchg
push
mov
pop
mov
arpl
cmp
or
sub
dec
xor
das
or
push
cmp
xchg
jo
sbbb
or
addb
push
arpl
aad
fs
sbb
mov
cmp
andl
fsubrs
xchg
adc
inc
dec
xor
add
adcb
pop
out
imul
push
xor
jno
dec
cmp
push
into
add
add
sub
sub
lods
out
push
xor
rolb
scas
adc
push
scas
fwait
jb
insb
lods
mov
add
push
lcall
pop
or
xor
cmp
sub
shl
mov
xchg
pop
sbb
sbb
mov
mov
or
xor
pop
cmp
loopne
push
pop
retw
inc
bound
sbb
imul
sub
ret
mov
inc
jno
dec
sub
and
xchg
xor
pop
jnp
mov
mov
xchg
ret
jns
or
outsl
adc
push
fcoms
aad
xchg
dec
or
or
push
je
sub
sbb
sub
xor
imul
pushf
sbb
popa
cmp
pusha
cmp
les
dec
lods
cmpsl
sbb
pop
es
xchg
sbb
jb
add
cmpsl
nop
in
mov
cmp
xchg
rcrb
xchg
add
in
xor
mov
sbb
shl
push
scas
adc
sub
add
addb
mov
jmp
jo
imull
xor
pop
cmp
ljmp
mov
sbb
mov
ret
into
mov
and
cmp
jp
ss
pop
inc
inc
jo
iret
xchg
popa
or
xchg
adc
jge
sub
mov
add
push
aam
or
or
xchg
adc
es
xlat
add
jns
enter
loopne
mov
sbb
xor
mov
flds
movsl
inc
loope
jg
push
adc
xchg
jge
stc
push
mov
inc
adc
ja
push
and
inc
pop
mov
xchg
clc
and
js
jecxz
mov
pusha
cmpsl
jo
jecxz
pusha
dec
fs
arpl
inc
bound
cli
jmp
andb
lret
jge
xchg
je
mov
lret
insb
cmp
scas
adc
in
rcrb
int3
and
and
push
cwtl
movsb
and
mov
stos
mov
lds
push
xchg
or
imul
rcrl
leave
sahf
sarl
jge
imul
xor
jp
xchg
mov
pop
push
loope
lahf
pop
push
insb
fwait
sub
fistl
jg
add
dec
je
sub
je
rorb
fidivrl
cmp
mov
or
pop
lock
insl
sbb
imulb
adc
inc
add
rcr
xor
test
xchg
push
stos
pop
jne
inc
dec
mov
jmp
push
adc
cmp
jmp
or
mov
lahf
jo
mov
stos
cmpsl
xchg
inc
cmp
daa
mov
xor
lahf
and
push
sub
mov
sbb
loope
or
xlat
mov
adcb
sbb
js
and
mov
outsl
imul
push
ljmp
daa
imul
dec
dec
sbb
or
outsl
rorb
push
arpl
xchg
inc
push
icebp
je
out
cmpsl
push
cld
or
popf
pop
rorl
cmp
push
stos
rolb
pop
cmp
dec
sbb
jmp
mov
dec
pop
dec
rcrb
sub
and
add
ret
mov
add
enter
pop
nop
pop
and
cmpsb
movsb
adc
add
or
fs
out
adc
cmp
ss
dec
mov
or
ds
loope
push
or
jns
jne
jmp
jmp
out
pushl
pop
push
adc
mov
push
mov
mov
jg
sub
sub
dec
fisubs
add
imul
adc
sbb
gs
add
ret
jmp
jmp
das
jmp
int
fcomps
rorb
and
push
jo
mov
push
js
push
and
sub
mov
jecxz
subb
push
xor
data16
or
rorb
mov
cmpsl
pusha
es
rcrb
fs
dec
adc
xlat
subb
cmp
les
adc
jp
ljmp
rorb
push
dec
or
aam
or
aad
je
mov
mov
or
fadds
lahf
add
sub
push
add
push
or
sub
jne
sbb
or
xchg
out
jne
in
and
push
or
movsl
inc
fisubrl
movsl
jns
test
mov
pushf
cmp
jbe
subl
das
cmp
adc
sub
mov
ficomps
fwait
dec
sbb
ret
or
rclb
and
outsb
xchg
xchg
mov
add
jnp
inc
mov
pop
add
in
add
or
arpl
dec
imul
jl
dec
inc
lahf
or
sbb
push
sub
jbe
xchg
les
push
push
push
push
inc
add
mov
jle
scas
adc
test
dec
ja
dec
add
cltd
add
or
addl
aad
mov
dec
xchg
or
andl
insl
add
or
cwtl
lea
sub
das
in
and
fneni(8087
scas
add
xlat
je
ss
test
inc
push
icebp
das
mov
fsub
icebp
mov
push
dec
inc
jns
fisttpl
pop
je
or
jne
cmp
ss
in
sbb
or
rdmsr
out
or
addl
cmp
ds
push
push
push
jnp
out
fidivs
testb
mov
cmp
add
cmp
hlt
cmpsb
push
lods
or
jno
shl
add
fistl
arpl
ret
notl
sar
pop
enter
dec
sbb
cltd
or
pop
push
adc
push
dec
fstl
addl
int
insl
clc
loopne
popa
lods
pop
cmp
sub
outsb
into
pop
mov
mov
rolb
add
dec
fidivrs
xchg
test
js
jge
daa
or
je
adc
push
sbb
cmc
add
sahf
arpl
loopne
shrb
mov
push
cmp
lea
clc
lods
decb
pushf
movsl
dec
adc
sbb
test
jo
mov
cmp
jne
cmp
mov
out
jo
mov
pusha
mov
cmc
push
sub
xor
ret
adc
add
dec
adc
and
add
mov
sub
sub
and
push
fs
fdivr
aas
js
fnstsw
push
sbb
cmpsl
add
sbb
test
js
xor
imul
sbb
in
pop
cmp
pop
cmc
push
xor
insb
sub
jl
aam
xor
mov
mov
xor
jle
mov
mov
lods
jbe
jmp
loopne
orb
jo
call
or
or
test
nop
lcall
loopne
ss
sub
inc
sbb
sbbb
test
jae
push
aaa
jne
pop
and
ss
mov
das
je
sbb
add
dec
add
sub
push
xchg
adc
shlb
or
adc
inc
test
mov
iret
into
outsb
loop
or
adcb
outsl
mov
jl
and
imul
pop
cmpsl
pop
mov
loopne
xchg
adc
pop
daa
insl
add
mov
adc
into
dec
add
pop
cmp
mov
push
stos
nop
jne
mov
jle
add
in
test
shll
movsb
xchg
jo
and
out
cmp
mov
dec
jns
js
test
and
xor
push
test
push
cmp
jg
mov
imul
adc
push
xor
mov
xchg
ret
push
ret
push
jbe
fiadds
jne
or
aaa
and
xorl
add
aas
ficoml
dec
xor
mov
pop
push
je
lret
xchg
cmp
xor
and
mov
add
test
int
jge
cmp
mov
jae
lret
dec
imul
sub
and
or
xchg
or
pop
and
mov
pop
das
xchg
add
ljmp
xor
pop
movl
and
aaa
inc
mov
or
or
loope
jg
pop
push
scas
test
and
lahf
or
and
inc
in
mov
cmp
dec
xchg
sbb
xchg
inc
cmpl
lock
lods
push
test
pushf
xchg
arpl
inc
enter
rcl
xchg
dec
mov
sbb
sbb
add
adc
add
push
pop
push
fs
sbbl
adc
sub
js
pop
push
insl
jbe
and
in
or
das
loopne
mov
es
push
iret
mov
rcl
and
dec
adc
andb
into
dec
pop
mov
and
push
inc
xor
mov
pop
push
fidivl
mov
mov
jo
adc
pushf
ss
rorb
scas
cmp
xor
adc
or
sbb
pop
or
mov
push
cmc
pop
dec
dec
add
test
enter
mov
loopne
cwtl
movl
lods
xchg
xor
or
add
pop
dec
mov
mov
mov
or
and
in
arpl
dec
sub
ds
add
sub
inc
or
mov
or
mov
push
or
ss
insb
fldl
sbb
and
je
popa
leave
sbb
mov
in
mov
jo
or
jle
or
jp
and
jle
ss
add
push
lods
dec
ds
jo
imul
inc
dec
cwtl
pop
xor
jmp
cmp
imul
push
in
inc
je
or
jbe
cmp
xor
cmpl
arpl
xchg
jmp
mov
xchg
sbb
je
cmpsl
dec
push
lock
sub
sub
mov
ja
adc
ja
je
insb
jne
insb
je
popa
push
fidivrs
xchg
lcall
xchg
cmpsb
mov
push
jmp
cmp
outsl
or
lea
popa
dec
and
xchg
lods
sti
fnstcw
enter
into
ja
pop
fimull
push
cmp
bound
je
js
mov
lock
pop
sub
mov
je
dec
int3
jp
mov
and
push
mov
scas
jecxz
adc
pop
or
push
push
push
shlb
mov
cmp
movsl
push
xor
mov
out
cmp
pop
and
fnstsw
outsl
out
pop
outsb
dec
dec
outsb
scas
movsl
movsl
out
pop
movsl
xchg
and
scas
mov
push
dec
cmpsb
jmp
or
mov
ja
ret
inc
pusha
loope
sub
movsb
fs
inc
or
rol
aaa
dec
btr
fs
mov
push
or
push
aas
scas
push
sbb
xor
add
add
xchg
jg
int
and
shrb
xorb
in
dec
adc
icebp
jecxz
sbb
movsl
mov
dec
push
xchg
inc
daa
or
lods
loop
movl
into
xchg
sub
cld
inc
in
or
and
jge
insl
pop
mov
xor
jl
xor
jle
jnp
or
jl
push
jp
or
jo
pop
add
popf
adc
inc
pop
sbb
and
add
and
int3
xlat
inc
xor
notb
dec
sbb
loopne
mov
adc
cmp
fldl
inc
jp
shlb
inc
adc
je
mov
or
ret
add
rorb
daa
dec
mov
sbb
adc
xor
outsl
sub
js
imul
arpl
mov
jnp
inc
push
xchg
addr16
cmpsl
into
and
jae
cmpl
rorb
jo
adc
adc
pop
pushl
fxch
xor
add
inc
stos
add
and
pushf
cmp
loope
pop
inc
add
cmpsl
adcl
sbb
daa
loope
and
shlb
orb
pop
rorb
inc
rcrb
inc
sub
inc
movsb
or
or
loopne
cmp
fsubrs
and
dec
or
push
movsl
push
add
shll
push
sbb
sub
xor
enter
pop
fs
jne
jle
ret
mov
sarl
cmp
add
in
dec
mov
and
push
cld
or
sbb
lcall
mov
gs
adc
sarb
or
cmpsb
mov
ficoml
inc
xchg
aas
nop
dec
test
mov
xchg
iret
jns
mov
mov
sub
call
jo
xor
dec
test
bound
xor
imul
sub
mov
lahf
or
xchg
and
push
adc
pop
push
mov
popa
psllw
inc
push
push
inc
dec
sbb
lret
sub
xchg
xchg
sbb
fcmovb
and
xorl
xchg
lret
xchg
popa
push
pop
jmp
stos
add
adc
sbb
lret
fadds
cs
add
int
movsl
cmpb
dec
cmpsl
add
nop
dec
scas
dec
repz
bound
sbb
xchg
shll
ret
mov
and
dec
or
roll
sbb
add
cmp
push
xor
add
adc
or
xchg
mov
mov
adc
dec
shrl
add
inc
pop
adc
cmp
inc
jmp
mov
sbb
shrb
aad
in
mov
inc
sbb
adc
popa
add
jl
cmpl
pop
inc
and
adc
leave
push
mov
call
xor
sbb
test
cmp
sub
dec
push
shlb
push
mov
in
dec
sub
mov
shlb
frstor
adc
inc
loop
je
jb
pop
cmpsl
jge
ss
xchg
ret
inc
test
and
ss
inc
shl
cmp
ss
mov
or
and
dec
push
cli
and
add
cwtl
add
cmp
cmp
insb
cmp
insb
xor
push
testl
daa
add
out
rol
push
xor
push
push
or
sbb
rcl
das
push
mov
fadds
pop
add
mov
jle
dec
xchg
dec
push
pop
dec
adc
add
jbe
mov
push
jne
jge
dec
cmpb
sub
jle
dec
add
jle
jp
pop
pop
fwait
mov
adc
out
add
push
test
pop
mov
rolb
cmp
pcmpeqb
clc
or
in
cmp
or
test
push
inc
xor
push
lahf
inc
cmpsb
inc
mov
shrb
dec
and
int
dec
movsb
push
dec
mov
in
fdivrs
pop
pop
pop
and
shll
mov
mov
cmpsb
xor
pop
push
jae
and
lods
adc
inc
cmpsl
jns
xlat
and
or
sub
xor
xor
adc
es
cmp
inc
and
and
mov
or
xchg
xor
xlat
pushf
push
divl
outsl
jmp
or
mov
popa
dec
push
sbb
lea
pop
push
cli
push
sbb
outsb
nop
loopne
sbb
cmp
fwait
lock
push
rolb
test
or
add
inc
sbb
into
icebp
pushf
test
mov
inc
dec
xor
xor
dec
test
adc
pop
dec
dec
mov
loopne
lods
rclb
pop
pop
ret
gs
ret
fwait
xchg
outsl
inc
test
and
pop
pop
sbb
ss
and
rolb
sbb
xchg
push
push
sub
and
mov
or
xor
call
hlt
ja
bound
ret
push
dec
adc
xchg
jo
mov
xor
clc
ret
mov
mov
sarl
je
push
sbb
push
or
add
insb
nop
xchg
or
add
inc
ror
ljmp
pop
push
mov
and
or
adc
pop
cmp
adc
add
adc
in
dec
pop
pusha
movsb
call
pop
push
mov
push
push
xchg
aam
loope
pop
and
sbb
adc
adc
add
xorb
sbb
in
je
mov
inc
mov
in
insb
int3
ss
sub
outsl
les
add
pop
ret
sbb
dec
sub
mov
lea
stos
and
loope
rorl
adc
enter
ret
jb
sub
ret
mov
notl
sbb
pop
mov
pop
push
and
leave
inc
in
or
lods
mov
push
adc
call
loop
xchg
aas
xchg
or
shlb
test
sbb
jb
enter
jl
adc
add
mov
scas
or
xor
adc
mov
add
pop
out
js
nop
pop
fdivs
pusha
test
push
or
xlat
jnp
maskmovq
negl
xchg
scas
inc
sub
push
adc
enter
inc
push
xchg
inc
pop
xorb
es
test
cwtl
and
xchg
pop
test
sbb
movsb
mov
loope
jmp
dec
pop
sub
ret
adc
cmp
test
mov
aaa
adc
test
addb
and
aad
mov
cmpsb
inc
xchg
mov
or
pusha
mov
mov
cwtl
je
inc
or
sbb
push
push
inc
adc
lock
adc
clc
mov
jno
sbb
push
int
push
adc
sub
cmp
jmp
dec
sbb
arpl
adc
or
mulb
dec
clc
and
jb
cmp
cmp
xor
mov
push
add
inc
loopne
pop
add
push
push
jecxz
icebp
std
ret
ss
jge
or
sti
fs
adc
gs
fists
jbe
enter
leave
lds
sbb
rolb
adc
mov
shlb
cmp
dec
adc
push
addr16
or
inc
pop
pushf
arpl
fists
cwtl
push
xor
jo
sub
lret
sub
and
jecxz
jg
and
stos
sbb
pop
or
or
sbb
popf
pop
push
ret
mov
pop
fdivl
jne
inc
xorl
xchg
or
sbb
or
push
pop
xor
rclb
add
test
rcrb
repnz
sbb
adc
add
or
out
pop
xor
cmp
push
and
je
sub
inc
sbb
fdivr
jmp
pop
sub
test
inc
adc
sbb
push
je
testl
dec
push
dec
mov
cmpb
inc
loop
add
test
add
add
add
xchg
mov
add
inc
ljmp
add
lods
push
xchg
cmp
xchg
sahf
push
pop
and
or
push
outsl
jno
or
jmp
in
or
inc
add
or
and
xchg
push
push
loopne
sbb
push
cld
and
adc
and
cs
dec
and
mov
push
jo
xor
nop
push
xor
dec
mov
sbbl
jg
bound
pop
mov
add
sub
test
push
sbb
lret
imul
ljmp
dec
loopne
enter
inc
ret
push
addb
add
mov
adc
test
inc
vmread
subl
nop
loope
daa
jle
test
sub
push
enter
add
daa
repnz
in
push
pushf
inc
add
mov
in
int3
cmpsl
fisttpll
bound
jge
stos
add
pusha
mov
insb
sbb
add
mov
add
adc
mov
add
mov
shr
xor
mov
lcall
sub
jle
sub
dec
cmp
inc
pusha
xor
mov
shl
nop
hlt
rcl
es
pop
or
pop
mov
jl
sub
and
ss
mov
and
xchg
sbb
add
test
and
fistps
adc
cmpsb
adc
inc
cs
mov
mov
sub
stos
sbb
push
push
jne
fwait
xchg
les
add
sub
push
aas
inc
shlb
xchg
ja
sub
inc
adcl
push
adcl
mov
add
add
lret
rorl
mov
ret
pop
sub
xchg
jb
push
shlb
lock
bnd
bound
mov
or
xor
imulb
adc
mov
adc
lods
mov
push
inc
fmuls
jp
jne
test
ss
rcl
into
lahf
adc
push
jbe
sbb
sbb
cmp
xor
add
push
and
xchg
adc
mov
mov
push
sub
arpl
fildll
sub
sahf
adc
jge
cmp
push
sub
push
ss
sub
mov
or
pop
ret
push
out
ja
ret
call
jmp
and
add
push
mov
lock
push
push
pop
daa
mov
sbb
dec
and
pop
xor
shll
lea
stc
add
popf
mov
jo
ficompl
jbe
stos
and
or
and
sub
sub
push
cs
and
add
lret
xchg
mov
fcoms
fiadds
shlb
cld
jo
icebp
push
mov
adc
neg
pop
jo
pop
sbb
ss
or
xlat
cwtl
xchg
pop
push
stc
leave
xorb
test
pop
pop
pop
fprem
push
les
bound
test
cmp
cmpsl
ret
inc
faddp
jmp
or
loopne
scas
xchg
pop
and
mov
loopne
or
or
arpl
inc
mov
or
out
inc
call
xchg
sbb
dec
je
xchg
mov
sub
test
add
enter
mov
and
xchg
cltd
adc
call
mov
mov
test
outsb
nop
in
push
inc
and
xchg
jge
movsl
or
push
cwtl
add
out
or
ss
inc
push
xor
cmc
out
das
aaa
adc
les
aaa
shlb
lock
ret
dec
daa
push
sbb
addl
mov
push
mov
lret
rclb
mov
add
xor
sbb
push
push
sub
push
je
fnsave
and
fimull
scas
xor
or
or
or
lcall
lea
and
loopne
cmpsb
jae
and
inc
cmp
dec
aaa
dec
pop
xor
pop
adc
push
clc
int3
insl
push
or
clc
jne
cmpsl
and
mov
mov
and
sub
push
sbb
xor
fneni(8087
xor
adc
push
push
add
push
cmp
pop
ss
mov
iret
and
ja
and
dec
inc
pushf
gs
push
pop
xor
or
and
push
and
and
mov
add
lods
cmpsl
xor
shrb
xchg
in
fimull
subl
adc
les
jge
rol
fbstp
fisubrs
cli
and
mov
inc
sub
ret
mov
and
and
inc
xlat
scas
sbb
push
adc
adc
xchg
and
cmpsl
push
xchg
iret
fwait
add
fnstsw
add
add
jge
sub
pop
add
adcb
popa
jecxz
movsl
push
xchg
pop
adcb
mov
push
xor
stos
adcl
xor
andl
sub
cmp
outsl
in
cmp
jbe
in
adc
or
clc
clc
cli
mov
or
push
cs
movsb
push
aaa
pop
andb
jmp
cmp
jbe
movd
insb
dec
adc
jae
ret
sbb
add
add
notb
add
sarb
fcom
adc
pop
fcom
divb
and
shl
mov
pop
add
xorl
ret
and
push
push
pop
push
int
add
outsl
stos
push
ret
lds
fidivrs
dec
xor
into
adc
or
aam
nopl
cmp
and
or
xchg
hlt
inc
js
sbb
or
pop
pop
jbe
mov
xor
mov
adc
xorl
cld
inc
mov
adc
je
pusha
jne
sub
dec
pop
dec
sbb
xor
outsb
punpcklwd
cmp
sti
stos
fs
jp
add
xor
inc
outsl
jo,pt
adc
pop
cmp
sub
add
add
adc
pop
push
push
adc
pop
xchg
dec
enter
push
jle
cs
sub
push
add
call
add
std
jo,pt
rorl
repz
cmp
test
mov
push
jae
lcall
add
cmp
or
adc
xchg
add
ret
sbb
mov
movb
and
xor
xchg
xor
dec
mov
enter
and
xor
cld
sub
pop
dec
mov
or
push
lea
int3
rolb
test
aam
sbb
cmp
mov
ret
lock
adc
push
pushf
adc
test
ja
xor
jp
ss
jg
jmp
pop
mov
stos
fs
lea
push
gs
cmp
fidivrl
fs
mov
cwtl
xorb
or
ret
push
push
sub
int
mov
adc
adc
or
adc
or
pop
sub
dec
mov
jbe
xchg
lock
dec
and
dec
mov
mov
jg
mov
xor
sbb
out
loop
ret
jne
fldt
push
or
rcrb
subb
notl
faddl
inc
adc
or
pop
cmp
bound
je
shlb
repnz
ret
and
and
scas
stc
lahf
sub
jmp
andl
clc
xchg
cmc
pop
dec
add
loopne
movsl
shlb
add
mov
imul
es
fs
and
push
rcll
jp
in
lcall
insl
pop
xor
rdtsc
dec
or
clc
lcall
lock
pop
fiaddl
and
push
add
mov
pop
sub
sbb
inc
lcall
inc
in
fadd
mov
mov
jl
mov
cmpsl
xchg
in
push
adc
push
add
jl
adc
push
mov
push
movsl
xor
mov
xchg
scas
fdiv
pop
shlb
sbb
stc
jno
loope
add
dec
push
cmp
add
jmp
mov
add
sub
loopne
add
dec
adc
mov
dec
and
add
ret
or
xor
sbb
mov
xorb
aam
mov
lock
add
sbb
fwait
or
je
sahf
ja
test
arpl
bound
clc
and
inc
jne
out
arpl
mov
push
cmc
jne
adc
dec
xchg
sbb
out
hlt
data16
xchg
push
arpl
add
jo
push
les
rcrb
inc
dec
pop
xchg
dec
sub
jo
loop
movsl
mov
movsb
sbb
pop
bound
or
dec
gs
sbb
pop
pop
adc
or
inc
les
inc
adc
imull
add
and
and
add
adc
pusha
jecxz
xor
jg
push
dec
rolb
cld
mov
inc
cmp
jge
mov
sbbl
bound
jo
cmp
rcrb
jno
inc
push
inc
adc
leave
and
inc
scas
call
imull
push
fisttpll
inc
inc
cmp
lods
out
inc
inc
jl
inc
call
jmp
jmp
fistpll
push
stc
clc
jmp
cmpsl
add
mov
inc
inc
testb
mov
or
lea
cmp
push
or
adc
sti
sbb
loopne
cltd
das
mov
gs
pusha
and
xor
add
rorl
pop
outsl
lock
fisubl
imul
jb
jo
in
and
pop
jns
fbstp
or
lods
add
add
shlb
sub
xchg
repz
std
mov
sub
xor
dec
je
add
jnp
in
adc
and
xorb
sbb
add
adc
shll
sub
shrb
cmp
movsb
loop
adc
jl
cwtl
test
imul
mov
outsl
ljmp
inc
je
arpl
dec
aas
fadds
adc
add
lock
sbb
jne
test
clc
insb
push
in
mov
sbb
mov
fsubs
popf
pop
cwtl
mov
xor
sub
mov
in
or
aam
cmpsb
stos
pop
push
xchg
xor
xor
nop
outsb
lods
cs
adc
rolb
xchg
pop
push
push
push
inc
add
outsb
sub
push
das
bound
pop
adc
add
push
mov
jne
xchg
je
push
js
sbbl
mov
sarl
mov
addb
dec
add
es
xor
mov
lods
aas
fsubrs
fnstenv
xchg
or
mov
sub
push
es
dec
js
pop
mov
mov
pop
cmp
movsb
imul
dec
fwait
pop
mov
cmp
movsb
rorl
or
pusha
xchg
loopne
sub
pop
add
inc
popf
adc
daa
jmp
mov
cwtl
js
mov
out
stos
dec
mov
inc
or
aaa
xchg
mov
dec
sub
mul
jo
mov
and
mov
xchg
jne
subl
xlat
icebp
sti
movsb
aam
mov
imul
add
ret
mov
mov
adc
add
out
cld
add
jge
lea
filds
popa
in
insl
aaa
mov
dec
nop
movsl
sbb
dec
sarl
in
xlat
shrb
xor
es
call
fdivs
adc
mov
add
loop
arpl
add
loope
and
and
jae
xchg
ret
jle
das
in
scas
leave
lods
cld
push
push
push
cmp
aaa
movsl
mov
cmp
mov
sbb
xor
dec
jne
xor
cmp
rcll
stos
mov
add
push
imul
mov
jecxz
aam
rcrl
leave
clc
add
sbb
xor
lock
jge
push
loope
mov
push
push
pop
pusha
fadds
dec
sbb
push
xchg
nop
call
or
lods
dec
xchg
cmc
sbb
ret
or
test
icebp
test
adc
or
xchg
xchg
add
adc
cmp
push
ret
xchg
jmp
add
out
lock
add
mov
jbe
dec
jne
push
fdivl
add
test
clc
cmp
in
push
push
push
shll
sbb
sbb
das
mov
add
adc
xchg
push
push
std
lahf
or
push
add
je
mov
ret
pusha
mov
mov
mov
sbb
mov
dec
nop
xchg
and
inc
fwait
sahf
nop
push
dec
push
sbb
jmp
add
push
enter
jno
ljmp
pusha
push
lods
call
inc
push
mov
or
out
add
popf
mov
pop
sub
pop
mov
inc
inc
insl
or
icebp
adc
rcrl
sub
js
cmp
adc
nop
adc
xchg
push
inc
lcall
push
jmp
test
leave
xor
stc
sarl
xchg
clc
add
rorb
adc
jmp
lret
cwtl
jmp
imul
xchg
and
xor
mov
pop
cmp
or
mov
xchg
or
jmp
xchg
inc
rcll
xchg
repnz
inc
jb
mov
shll
pop
cmpsl
or
dec
fs
cmp
es
in
sub
sbb
cltd
mov
or
lds
scas
xchg
add
mov
xor
arpl
filds
mov
jo
mov
test
inc
pop
push
rorl
inc
jae
imul
lods
ljmp
push
inc
cwtl
sahf
inc
push
sub
test
ret
gs
push
cld
arpl
push
sbb
cld
xor
daa
imul
mov
and
test
sbbl
notb
jmp
or
jb
adc
mov
scas
sbb
bound
push
push
pop
jo
mov
es
push
out
mov
jns
inc
sbb
sahf
dec
sar
adc
cmp
or
push
push
sbbl
cmp
sbb
popa
adc
sub
pop
pop
arpl
xchg
cmp
push
add
pop
push
ss
movsl
add
loope
loopne
outsb
pop
push
cmpsb
lock
hlt
mov
push
cmpsb
xor
adc
andb
out
dec
mov
jne
cmp
add
cwtl
lods
rcrb
mov
inc
jecxz
cmpsb
mov
xor
call
or
jge
rolb
xor
cmpsb
push
imul
das
test
or
dec
add
sub
fildll
push
adc
sbb
sub
jp
int
icebp
sub
push
or
cs
inc
int
or
cmp
add
inc
sub
lea
es
add
xchg
int3
adc
ret
add
enter
mov
arpl
stos
add
jg
in
adcl
clc
popa
sub
loope,pn
in
pop
test
sarb
pop
inc
dec
mov
fstps
insl
arpl
mov
sub
dec
or
sbb
sub
hlt
pop
dec
add
andl
sub
or
mov
mov
or
sarb
in
mov
or
int3
gs
hlt
cmp
jne
test
push
add
push
orl
xchg
mov
mov
push
or
xor
ljmp
mov
sub
sub
in
push
dec
shlb
adc
and
sbb
mov
push
pusha
or
ds
pop
add
arpl
sbb
fimuls
comiss
and
and
xor
adc
adc
rcll
scas
pop
sub
imul
push
std
cmpsl
fsubl
popf
movsl
or
push
push
lcall
inc
mov
cmp
mov
insl
sbb
test
pop
and
je
xchg
cmp
sbb
push
fidivl
pop
add
push
adc
xor
push
cs
mov
adc
add
jle
js
jg
mov
orb
ret
mov
sub
je
pushf
adc
imull
xor
stos
pop
cmpsb
sahf
adcb
dec
jne
cmp
sbb
loopne
add
pop
xor
mov
inc
cld
fdivs
add
add
sarl
sbb
in
pop
and
test
int3
sbb
aam
mov
into
icebp
leave
and
adc
inc
fwait
sahf
cmp
mov
ss
or
hlt
xor
dec
ja
push
mov
mov
dec
pop
rcrl
and
into
pop
mov
inc
dec
mov
aad
or
rolb
inc
int
iret
or
jle
jbe
push
fcmovnb
jmp
lock
ss
mov
jp
jae
rorl
rolb
adc
lds
push
and
pop
xchg
aad
outsb
xchg
or
sub
pusha
xchg
mov
movhps
pop
cmp
inc
imul
or
andb
jns
jb
push
adc
xchg
popa
jg
sub
pop
mov
pushf
int3
stos
cmpsb
and
sub
lcall
inc
cli
dec
inc
push
xchg
cmp
jb
xlat
xchg
pop
pushf
or
or
sbbl
jo
push
pop
or
jge
call
or
js
cmp
add
dec
add
lock
mov
or
jge
out
js
push
shrb
arpl
out
inc
or
inc
dec
jbe
and
mov
and
lahf
inc
outsb
pop
jg
pop
xchg
loopne
sahf
nop
pop
mov
lods
pushf
fildll
inc
mov
sub
sub
adc
cmpsl
test
lea
out
inc
dec
and
dec
lock
ds
stos
jg
pop
or
in
sbb
add
dec
jg
scas
mov
outsb
push
inc
cmp
sbb
push
lds
outsl
push
push
add
add
push
cmp
lock
lods
mov
xchg
add
cwtl
enter
push
mov
adc
cmp
ror
inc
cmp
jnp
xchg
cld
push
push
fsubrs
inc
jo
shll
push
inc
loope
mov
push
inc
jno
inc
cmc
push
add
fdivrl
jo
das
cs
jge
nop
pop
enter
jge
pop
dec
ss
clc
outsb
or
loop
rcr
sub
sub
loope
addl
xchg
ret
orl
mov
cmc
push
call
cmp
ja
popa
sbbb
test
xchg
xchg
sub
xchg
inc
enter
loopne
inc
fnsave
mov
push
xchg
push
inc
sub
jbe
addl
push
in
fldenv
push
dec
aaa
sbb
add
lret
fiaddl
lret
pmaddwd
test
rorb
xchg
adc
and
push
pusha
or
inc
rorb
sub
or
mov
mov
outsb
cmpsb
adc
or
adc
jge
push
xorb
adc
adc
addb
add
popa
add
lret
pop
cmpsb
fs
inc
jle
repnz
dec
imul
adc
fdivrs
cmp
sub
lea
cmp
or
sbb
cmp
shlb
inc
jmp
rcrl
dec
cwtl
clc
pop
dec
jmp
lods
cmp
addr16
and
enter
push
outsb
sub
sub
xor
lahf
adc
movsb
push
pop
jb
push
pop
dec
sbb
pop
sbb
push
iret
and
or
push
sahf
lock
sub
jmp
fdivs
xor
sbb
shrl
cmp
out
int3
push
int3
pop
pop
faddl
xchg
das
lods
lds
arpl
andps
loopne
push
ret
mov
push
aam
dec
xchg
sbb
xchg
jne
js
adc
mov
xchg
dec
push
or
or
stos
adc
fidivrs
lret
adc
movsb
cmp
out
push
pusha
repz
xchg
shrl
call
dec
mov
push
xchg
adc
int
adc
out
jle
loop
pop
xor
xchg
pop
jecxz
add
mov
pusha
adc
test
add
mov
and
testb
pop
dec
xor
adc
in
pop
repz
add
lcall
adc
movsl
xorl
mov
add
ret
rcll
inc
cmpsb
rorl
inc
mov
and
lods
adc
inc
loopne
pop
insl
add
insb
xchg
mov
fwait
sbb
sub
cmc
sbb
push
adc
push
xor
lea
shlb
test
cmpsl
pop
dec
insb
mov
pop
sbb
inc
daa
or
pop
dec
sbb
in
xlat
mov
xchg
xor
jmp
and
outsb
and
std
jge
xchg
mov
shl
push
push
nop
mov
cmp
jle
es
testb
mov
dec
jl
inc
ja
xchg
xchg
inc
xor
or
push
mov
orl
inc
lahf
jmp
pop
fcoms
inc
fnsave
jg
mov
push
imul
seta
dec
shlb
jmp
inc
pop
lcall
fadd
add
int
inc
pushf
add
rol
loop
jl
cwtl
shlb
orl
clc
daa
or
in
pop
out
xchg
push
out
pop
cmp
repnz
add
pop
mov
and
jge
mov
pop
add
outsl
rclb
dec
jecxz
xor
rcr
jle
push
pop
fdivr
fdivrs
cmp
mov
call
test
cltd
jo
test
inc
leave
lret
adc
test
mov
pop
clc
jns
addr16
cs
jge
jle
xchg
test
pushf
daa
sub
adc
sarb
dec
sarl
imul
xchg
or
xchg
pop
scas
shlb
xchg
add
pop
sub
dec
inc
mov
adc
add
inc
mov
jb
and
dec
pushf
lret
pusha
or
mov
pop
lods
xchg
mov
mov
cmpb
mov
inc
cmc
sbb
cmp
in
cmp
fiadds
jmp
mov
cmp
les
lea
push
adc
dec
sub
xor
xchg
push
es
xor
sbb
pop
sub
xor
in
push
in
sbb
xchg
sbb
aad
je
push
add
aad
xor
sbb
in
test
repz
and
and
adc
or
orb
push
mov
leave
mov
and
mov
mov
xor
or
pop
movsb
jecxz
mov
lock
cmpsb
dec
mov
insb
or
dec
dec
pop
mov
or
and
push
inc
ret
inc
loope
mov
fsts
inc
das
lret
mov
pusha
cmp
adc
sub
sub
xor
dec
xchg
int
xchg
sub
and
or
xor
pop
lea
inc
clc
or
inc
or
cmpsl
adc
or
ret
sub
bound
cmp
or
dec
mov
out
and
add
fsub
fimull
mov
cmp
xlat
out
push
mov
add
icebp
jbe
jge
xchg
or
pop
enter
adc
mov
jle
std
fsubs
lea
fdivl
lret
push
lods
push
inc
mov
iret
xchg
cltd
inc
jae
test
je
push
adc
sbb
sub
mov
inc
jo
mov
mov
test
mov
mov
test
pop
mov
cmpsb
push
mov
adc
or
add
out
or
xchg
adc
adc
jo
or
les
test
out
bound
lock
xor
xchg
inc
xchg
fcmovnb
mov
xchg
shll
adc
lcall
or
dec
cmpsb
push
loopne
and
dec
push
cwtl
data16
icebp
int3
data16
emms
xor
loopne
dec
mov
add
cli
or
test
or
test
cmovbe
testl
fsubrl
xchg
and
xor
cmp
mov
push
inc
pop
adc
sub
inc
sub
pusha
idivl
enter
scas
mov
nop
cmpsl
in
mov
cmpsl
inc
adc
stos
imul
or
cmp
xor
pop
ret
push
dec
push
dec
mov
pop
jns
mov
jge
xchg
or
pusha
xchg
inc
test
insl
cmp
mov
imul
mov
push
ss
mov
call
xchg
adc
clc
jno
in
out
clc
lcall
repnz
xor
ret
sub
loope
incb
nop
and
inc
lcall
adc
sar
mov
sub
xor
out
scas
inc
or
inc
pop
jp
loopne
or
xor
js
jnp
test
insl
mov
dec
mov
shr
sbb
testb
pop
xchg
inc
pop
mov
iret
mov
orb
add
outsl
mov
inc
push
idiv
mov
mov
and
or
call
stos
mov
loopne
xor
ljmp
mov
bound
jecxz
subb
adc
daa
leave
lret
ss
nop
mov
ret
arpl
pop
andb
imul
fwait
mov
mov
and
mov
jo
in
ret
push
fs
jo
sbb
adc
push
test
jl
mov
mov
nop
push
movsl
push
popa
add
inc
pushf
sbbl
mov
leave
xchg
pushf
jo
xor
sbb
enter
cmp
jl
icebp
add
dec
pushf
sti
fldcw
fnstcw
enter
nop
dec
jmp
das
adc
jecxz
das
sub
flds
push
jecxz
and
push
scas
push
xchg
stos
pop
lock
sahf
arpl
fsubr
and
shrb
aam
xor
push
mov
adc
adc
les
les
dec
jbe
mov
mov
enter
lods
jge
cld
push
addr16
repnz
and
call
add
mov
mov
sti
or
push
or
or
cmpsb
ret
mov
orl
jo
cld
lcall
je
fisttpl
ret
push
sbb
test
lds
sbb
lahf
mov
clc
inc
push
push
mov
ret
xor
push
sti
and
repz
xor
mov
cld
dec
clc
call
cmp
ficomps
add
ret
xchg
adc
or
jns
pop
pushf
push
xchg
xor
popf
imul
popa
shrl
js
scas
sbb
adcb
ja
test
cli
fs
push
les
or
lock
mov
int
push
xor
xchg
fmull
sub
and
pop
lret
ss
inc
das
xchg
sbb
popa
add
inc
ja
clc
cmc
or
adc
loop
mov
or
imul
dec
ret
adc
mov
movsb
rclb
mov
push
inc
scas
inc
imul
fildl
jg
es
add
addr16
inc
mov
xor
or
cmp
insl
xor
in
movaps
cs
aas
test
sarb
icebp
mov
addr16
shrl
sub
push
push
push
outsb
cmpsb
cmp
xchg
aad
mov
mov
jle
movl
sbb
push
dec
dec
andl
push
into
test
mov
add
jb
pop
pop
adc
ss
cmp
adc
xor
fiadds
sub
mov
cmp
out
push
pusha
or
add
je
dec
es
push
pop
mov
pusha
test
outsb
ds
adc
mov
pushf
enter
xor
mov
pusha
mov
xchg
movsb
rolb
pop
push
add
pop
setne
pop
lods
xlat
adc
pop
mov
sub
inc
mov
enter
es
sbb
and
fiadds
mov
lcall
jne
rolb
sbb
jae
add
in
pop
call
jo
mov
mov
mov
or
cltd
sbb
jne
sub
jb
xlat
mov
xchg
inc
scas
orb
push
fiadds
add
sti
gs
clc
jb
xchg
lahf
pop
fimuls
sbb
jne
jge
sbb
mov
jge
sbb
sub
ret
push
call
mov
add
add
mov
push
push
adc
aaa
mov
xchg
adc
mov
xchg
arpl
jb
push
jmp
fs
lret
lea
insb
cmp
ret
mov
add
sub
dec
cld
clc
lcall
rclb
test
jl
and
push
cmp
sarl
hlt
xlat
insb
inc
or
pop
xchg
mov
mov
xchg
pop
or
dec
and
adc
loopne
sbb
and
js
aas
fistpll
xor
and
outsl
push
push
out
mov
adc
xor
fcmovne
mov
xor
xchg
inc
push
dec
or
mov
insl
mov
push
push
cli
lods
inc
cmpl
jmp
loope
int3
and
mov
push
mov
and
mov
int
movsl
dec
les
lods
xchg
aas
push
push
cmp
outsb
loope
mov
hlt
call
and
push
out
leave
cmp
inc
or
push
adc
sahf
lret
push
pop
adc
adc
sahf
lret
or
hlt
test
repnz
sbb
sbb
and
in
cmp
and
sub
push
insl
pop
test
cwtl
fs
push
dec
and
xor
testl
arpl
cmp
mov
popa
jge
mov
imul
inc
imull
xor
lret
test
enter
andl
xchg
lock
push
push
and
adc
outsb
jbe
adc
dec
pavgw
xor
ljmp
int
push
in
out
mov
imul
loop
addb
or
pop
dec
or
loope,pt
mov
sub
pop
pcmpeqb
or
and
add
gs
shl
pusha
and
mov
mov
mov
incl
dec
sub
pusha
ljmp
jo
bound
or
or
es
stos
enter
pusha
add
mov
data16
je
movsl
daa
pop
mov
cmp
cs
inc
add
pop
aad
dec
and
mov
push
inc
push
lret
testl
enter
jecxz
mov
cmp
ret
jb
xchg
mov
mov
imul
jmp
xchg
sub
xor
dec
pop
jo
movlps
sub
xchg
pusha
rolb
cs
mov
inc
adc
sbb
pop
in
ret
push
fs
adc
out
adc
or
sbb
loopne
xchg
adc
shlb
xor
loope
and
add
scas
dec
sub
fidivl
xchg
push
push
add
add
add
xor
ret
stos
aad
mov
loope
aad
in
sub
xchg
add
cmpsb
push
inc
hlt
inc
mov
test
dec
jecxz
push
cmp
dec
mov
in
xor
movsl
call
push
dec
add
or
je
push
jmp
inc
clc
ret
cmp
jne
aas
push
test
out
add
jecxz
cmp
je
adc
sub
out
add
dec
cmp
es
pusha
bswap
adc
nop
xchg
xchg
mov
sub
js
add
int
xchg
loopne
mov
lods
addr16
and
ret
sarb
inc
sbb
mulb
cmp
mov
xlat
enter
sbb
xchg
adc
int
dec
mov
push
mov
add
es
cld
call
push
iret
and
cmpl
in
xor
sbb
mov
dec
push
dec
aad
cli
jnp
out
cmp
cli
mov
or
adc
loop
push
lods
call
pop
adc
sbb
dec
js
push
sub
jns
jnp
aaa
ret
rcl
pop
pushl
sub
inc
pop
sbb
pusha
cli
insl
or
dec
scas
adc
dec
inc
rcrl
mov
mov
push
sub
mov
sbb
aam
jge
pop
xor
mov
pop
sub
aad
mov
or
faddl
sarl
testb
push
push
inc
xchg
decl
outsb
mov
out
mov
sub
inc
sbb
mov
and
sub
mov
clc
cmp
popf
out
add
and
push
add
mov
mov
xor
je
sub
mov
push
out
mov
mov
loope
mov
mov
cmp
mov
pop
insl
pop
iret
jo
sub
xchg
mov
or
adc
or
xor
dec
mov
jmp
pop
sarl
sbb
nop
push
jno
and
mov
and
push
orl
call
jb
sbb
or
sub
or
inc
sub
popa
enter
adc
lds
push
loopne
or
movsl
dec
ret
push
xlat
nopl
or
sub
out
add
movsb
jne
les
andl
dec
int3
sbb
adc
or
sub
movsb
sub
loope
int3
mov
add
pop
insb
sbb
rcl
mov
lret
pop
sbb
jo
cmp
pop
xor
sbb
or
adc
add
leave
out
leave
es
dec
sub
sub
insb
xchg
pop
adc
xchg
push
ds
or
outsl
jb
mov
fstl
aaa
cmp
movsb
sbb
push
mov
push
fucomip
or
into
inc
inc
cli
mov
or
les
add
test
pusha
and
push
fmulp
shl
adc
sub
fmull
dec
and
pop
and
ja
arpl
ss
mov
ljmp
cmp
and
add
mov
call
aas
adc
and
cs
sub
lods
mov
shlb
scas
rcrl
mov
std
hlt
adc
push
daa
in
inc
sub
inc
xor
ja
loopne
push
and
xchg
incl
jae
xor
lea
test
and
fldt
add
cs
pushf
jo
add
outsb
mov
xchg
or
in
add
sbb
addl
and
sbb
fmull
dec
pusha
data16
adc
mov
add
je
mov
outsb
lock
ret
mov
adc
movsl
and
push
jb
push
stos
inc
iret
mov
mov
inc
xor
sbb
loopne
imul
lahf
pop
cmp
add
outsl
dec
adc
dec
cmp
cmp
aaa
adc
xor
enter
roll
xor
ss
shll
mov
js
jne
repnz
aam
and
mov
ret
push
xor
mov
es
jmp
gs
cmp
je
clc
pop
clc
je
sbb
les
add
inc
xor
inc
or
cmp
pusha
jmp
adc
into
mov
repz
inc
dec
aad
dec
add
dec
testb
and
push
idivb
ja
filds
and
fistl
je
and
push
lock
mov
inc
sub
cmp
mov
daa
inc
je
aas
add
ficoml
inc
push
xorb
xor
mov
ficomps
shll
sub
jmp
mov
push
jo
scas
and
dec
rcll
pop
addb
and
out
or
sub
fcmovnbe
sahf
call
cmovb
jne
or
hlt
stc
arpl
pusha
or
cmpl
je
dec
push
mov
sub
test
mov
lods
cmpsl
stos
fwait
lret
adc
loopne
mov
subb
cmpsb
clc
inc
ss
rorb
out
mov
sbb
sti
sub
jle
mov
and
adc
xchg
clc
pop
aaa
xor
addb
adc
into
pop
jo
out
pop
hlt
add
pusha
test
aas
xchg
mov
pop
and
or
xchg
test
add
mov
test
cmp
sub
mov
pop
add
jge
mov
add
mov
jae
imul
aas
sbb
mov
xchg
cmp
mov
fldl
fstps
and
fstpl
insl
imul
add
fs
xor
leave
les
flds
dec
jnp
pop
addr16
aaa
mov
pop
shrb
mov
loopne
xchg
add
inc
fmull
pop
sub
inc
or
mov
repnz
pop
pop
inc
push
push
mov
notb
jmp
iret
pusha
movsb
lock
clc
mov
lock
or
xor
pop
jmp
add
ret
into
ret
ja
pop
movsb
jne
leave
push
push
and
cli
mov
add
or
xchg
and
sub
testb
je
adc
mov
lock
or
daa
test
les
dec
and
xchg
ficomps
adc
dec
aam
push
adc
or
popf
jne
sbb
add
mov
push
add
divl
pop
or
je
push
or
push
add
push
in
sub
add
sbb
adc
out
inc
jg
inc
mov
fistpl
shl
and
lea
iret
test
ds
js
fdivs
pop
ds
push
lods
dec
popf
and
inc
sub
jb
shlb
sub
or
cwtl
out
push
testl
movsb
jmp
pushf
sub
pushf
mov
inc
xlat
add
movsb
adc
pop
adc
add
ljmp
push
xor
add
xchg
jnp
or
push
cwtl
add
stos
sub
addr16
stos
mov
sub
adcb
jecxz
jnp
xchg
push
dec
adc
sahf
sub
sarb
je
pop
mov
cmp
lahf
adc
sbb
filds
and
cmpsb
add
jge
xchg
jnp
push
lcall
mov
pop
sub
add
fcmovnbe
dec
es
and
cmovle
addr16
jmp
out
idivl
inc
add
icebp
pushl
mov
and
inc
pop
xchg
xchg
insl
mov
cli
add
dec
add
fcmove
fwait
notb
add
sub
cmp
pop
les
out
lock
push
popf
add
movsb
test
push
enter
adc
push
add
push
or
or
mov
add
cmp
jmp
popa
mov
push
dec
pop
pop
push
adc
dec
adc
add
lock
inc
mov
bound
sbb
orl
clc
pop
add
jp
loope
add
mov
jp
sbb
push
insl
test
bts
adc
add
loop
pop
or
or
and
pop
and
es
add
addb
adc
sub
or
adc
xor
xor
aam
mov
sbbl
aad
into
mov
push
pop
push
cmp
outsb
xorb
js
test
cmp
shlb
xor
pop
aaa
mov
je
lock
or
fdivrs
push
out
push
inc
lods
mov
push
outsb
sbb
push
imul
mov
dec
sti
dec
jne
addb
mov
ret
std
in
add
jo
jp
xor
daa
and
add
xor
loope
or
mov
pop
in
fists
add
or
dec
js
add
cld
mov
and
xchg
rcl
jle
pop
jecxz
adc
push
cmp
push
add
popa
subl
imul
or
push
adc
mov
and
fldl
sub
add
clc
dec
out
test
xor
mov
jmp
cmpl
lods
rclb
push
add
loop
out
inc
call
bound
out
je
dec
adc
ja
mov
add
inc
fcoml
outsb
je
and
aaa
fisttpl
mov
add
xor
push
fidivs
dec
push
push
pop
fists
mov
sub
cmp
gs
xor
movsl
movsl
cli
and
mov
dec
loope
add
push
arpl
icebp
inc
inc
lcall
inc
or
or
mov
add
pop
cltd
or
inc
mov
push
adc
orb
incl
add
int
loop
andb
call
cwtl
add
shl
jne
insb
sub
faddl
shll
clc
subb
fcoms
in
mov
xchg
nop
es
adc
inc
mov
stc
ret
add
xorb
out
loopne
rcl
insb
push
das
jo
mov
loopne
xor
cli
mov
movsl
sub
mov
jo
inc
mov
mov
add
in
jbe
add
and
das
adc
push
fcompl
jmp
cmp
and
in
jp
add
int3
inc
add
pop
dec
mov
xchg
aad
sbb
jo
adc
mov
adc
jb
mov
or
rorl
dec
sub
and
jp
push
leave
movups
cmpsb
mov
aaa
pop
lea
cmpsl
jne
push
call
xchg
or
pop
mov
sbb
inc
insb
orb
scas
loopne
mov
or
push
fisttpll
cmp
imull
inc
lea
sub
cmp
dec
and
xor
daa
cltd
cmp
pop
bound
testb
jo
push
inc
xor
adc
arpl
das
jo
push
or
popf
cmp
or
sub
xor
jns
fimull
dec
push
data16
rol
test
sub
sub
pop
inc
cmp
adc
mov
mov
dec
push
mov
mov
xchg
ret
inc
andl
fcmove
mov
test
pop
inc
add
fcmovnbe
mov
xor
gs
push
ret
lcall
sub
cs
mov
es
cmp
mov
mov
daa
mov
cmp
sbb
xor
push
notl
ljmp
sbb
jo
jb
int3
mov
mov
mov
sub
aam
mov
push
and
out
je
push
or
jge
pop
mov
cltd
adc
or
xchg
cmc
loopne
sbb
jne
or
orb
hlt
xchg
andb
or
adc
cmp
mov
push
or
daa
dec
ret
test
adc
or
shll
add
dec
push
push
sub
add
fs
add
inc
pop
std
lea
cmpsb
jno
data16
addb
dec
add
mov
sbb
testb
aaa
addb
push
or
add
rorb
add
loopne
adc
icebp
push
test
and
sub
jg
orb
jne
fistpll
insl
sbb
test
mov
incl
pop
pop
add
xor
or
cmp
add
mov
popa
pop
add
rclb
pop
lods
dec
push
push
xchg
imul
negl
sub
clc
push
pushf
pop
mov
ljmp
repnz
xchg
cmpsb
cli
nop
xchg
test
xor
mov
icebp
mov
in
or
es
inc
add
cmpsb
in
pusha
cmp
adc
mov
or
mov
jne
or
or
or
push
xor
sbb
xor
sbb
mov
fnstsw
mov
dec
xor
ficoml
fisubl
cmp
dec
pop
adc
std
addb
adc
sub
aaa
dec
or
insb
or
jae
mov
push
ret
pop
mov
andb
fwait
sub
out
xor
arpl
sbb
pop
adc
mull
push
je
adc
fsubrs
ud0
inc
call
mov
or
adc
or
add
or
and
pop
or
mov
and
or
lods
sbb
lock
pop
add
pop
add
shl
mov
and
push
push
xchg
adc
inc
lock
inc
xor
adc
insb
sti
ja
jmp
push
pop
xchg
dec
loope
push
movsb
jb
push
add
rol
mov
cltd
jl
mov
lds
mov
ret
movsl
xor
push
stos
sbb
xor
insb
mov
pop
mov
jle
ds
mov
pop
mov
loope
aas
fsubr
lods
dec
jo
pop
cli
xchg
aas
call
mov
dec
fdivs
dec
mov
mov
push
mov
aas
movsb
mov
sub
pop
lods
sub
js
push
push
loopne
push
aas
cmp
adc
cli
pop
daa
add
inc
fsubp
shlb
nop
and
loope
aas
aam
adc
xor
inc
xor
inc
mov
xchg
mov
pop
sub
loop
leave
xchg
mov
mov
jo
push
jg
pop
push
aas
lcall
or
mov
adc
mov
xchg
mov
push
cmpb
mov
inc
pushf
je
or
add
mov
shlb
ficoms
adc
es
adc
in
or
xlat
arpl
pushf
mov
xchg
push
dec
ds
in
test
and
push
sub
mov
clc
pop
mov
add
jns
dec
ss
and
jg
in
addb
loope
xor
test
push
pop
stos
lods
jnp
or
cmp
mov
fldt
insb
in
adc
sub
mov
loopne
lahf
add
cmp
or
xor
jmp
out
mov
pop
pop
nop
cltd
pop
mov
lcall
xchg
fs
faddl
pusha
cltd
rclb
dec
mov
lock
in
pop
fcoml
adcb
fdivrs
pop
pop
fbstp
sbb
mov
mov
and
mov
rolb
mov
sub
movsb
in
mov
inc
push
mov
mov
xor
cmp
sarb
aas
sar
std
mov
pop
leave
call
call
ja
jmp
cwtl
cmp
sub
js
jmp
mov
and
fiaddl
aas
adc
aas
push
mov
ljmp
jg
jns
dec
fidivl
xchg
or
int3
jg
ucomiss
negl
paddq
push
aas
sub
movsl
sub
fdivs
jle
mov
out
add
scas
test
cs
in
out
mov
or
pop
cwtl
pop
nop
push
mov
adc
jg
sub
cmp
mov
inc
in
aas
push
or
pop
adc
pop
enter
xchg
sbb
in
lcall
pop
adc
jle
or
outsl
xor
add
adc
push
jge
sbb
mov
pop
add
pushf
subl
pusha
mov
ret
das
mov
adc
fidivrl
pop
mov
enter
aam
adc
pop
repnz
sbb
fadds
jb
jb
push
enter
or
inc
and
pop
aaa
sbb
sbbl
sbbl
rorl
rolb
push
mulb
sbb
clc
outsl
or
sbb
in
push
and
dec
sbbl
inc
mov
add
add
out
sbb
jl
add
nop
mov
add
repnz
rcll
call
sbb
or
rcrb
fdivl
enter
in
in
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
leave
sub
add
and
inc
movsb
enter
mov
xchg
icebp
call
enter
pop
scas
inc
cmp
fdiv
les
pop
in
insb
and
call
in
mov
mov
jae
sub
sbb
add
test
movsb
aas
pop
leave
inc
xor
clc
and
xor
repz
dec
repz
leave
add
test
mov
lds
inc
mov
movsb
dec
in
es
add
mov
mov
andl
cmp
adc
adc
jecxz
dec
pop
fs
dec
jb
and
pusha
push
jne
test
pop
fisttpll
adc
sbb
fistpll
adc
aas
iret
add
pop
pop
and
sub
icebp
dec
pop
cs
lahf
fiaddl
inc
dec
mov
fadds
jmp
or
out
popf
mov
rol
aas
movsb
cvtpi2ps
jg
mov
pop
push
subb
enter
sbb
cmp
in
movsb
nop
mov
dec
mov
mov
pop
push
push
nop
aas
add
mov
aas
mov
pop
das
adc
mov
cwtl
aas
cmp
adc
cld
dec
arpl
adc
push
bound
int3
xor
mov
and
sbb
dec
aad
pop
enter
andb
pusha
adc
inc
aas
popa
pop
push
nop
into
in
jnp
add
dec
sbb
ss
pop
iret
nop
push
clc
enter
jg
rorb
dec
pop
dec
add
cld
call
xor
bound
pop
ljmp
inc
add
mov
dec
mov
mov
pop
lods
mov
sub
sbb
pop
lock
fs
mov
ficomps
push
jae
lret
xlat
mov
mov
mov
ds
cli
pop
mov
mov
mov
mov
cmp
pusha
inc
push
sbbb
lcall
data16
sub
fdivrl
aam
pop
xor
and
or
and
or
pop
test
mov
sarb
fists
sub
cwtl
fiadds
daa
out
mov
jmp
mov
mov
add
nop
std
fdivrs
psubusb
sub
mov
dec
jg
and
push
ljmp
jbe
iret
inc
pop
imul
mov
push
add
jb
xchg
or
insb
fdivrl
and
aam
adc
les
loopne
inc
aad
loopne
xor
loopne
adc
xor
jo
xchg
pusha
pop
test
aas
jl
fmuls
adc
xchg
jl
jno
dec
pop
rcrb
call
push
cmp
lcall
ficompl
rcrb
mov
mov
insl
rcrl
pop
sub
jg
mov
add
and
fisubl
decw
daa
fistpll
call
lods
cld
rcrb
xchg
xor
aas
lahf
sbb
adc
mov
xor
push
or
inc
insb
fidivl
dec
sti
loope
adc
xchg
out
dec
cld
cmp
je
cmp
mov
mov
in
sub
jo
dec
push
mov
mov
pop
sbb
scas
push
sub
cltd
int3
or
adc
add
loope
dec
sbbb
mov
test
or
stos
add
dec
sbb
push
ret
nop
add
mov
dec
arpl
je
inc
jle
mov
cmp
js
in
inc
push
mov
sbb
inc
push
fs
push
in
sbb
dec
pop
add
cmp
rcr
aaa
rcrb
or
sbbl
scas
jb
repnz
add
fsubrp
pop
fsubr
nop
int
jo
hlt
adc
sbb
in
xor
pusha
push
jne
add
mov
cmpsl
sbb
mov
outsb
adc
testb
pop
mov
adc
xchg
pop
mov
nop
aas
mov
loopne
or
in
cltd
push
cs
mov
sarb
sbb
add
shrb
adc
xchg
leave
rorb
test
mov
mov
mov
mov
fdivr
icebp
cmp
hlt
add
add
jbe
ret
shrb
cltd
xor
mov
sub
adc
xchg
dec
or
sub
push
aam
mov
adc
push
inc
mov
cwtl
mov
xor
xor
daa
and
aas
out
pushf
jl
das
push
mov
add
sbb
inc
fwait
dec
mov
aas
and
fistps
inc
pop
and
ffreep
fstpt
push
insl
pop
adc
sub
test
imul
andnps
xchg
or
cwtl
or
mov
mov
sarb
adc
xor
mov
aas
mov
leave
les
scas
stos
mov
jle
mov
outsl
enter
je
pop
jle
and
mov
inc
mov
mov
dec
arpl
je
imul
nop
pusha
xchg
xchg
rclb
bound
adc
mov
cltd
inc
xorl
call
or
push
push
push
inc
insb
mov
mov
cltd
mov
or
dec
xchg
pop
cvtps2pd
inc
fistpll
hlt
clc
movswl
call
xor
mov
imul
js
or
sarb
adc
inc
fwait
push
cmp
pop
lock
fbstp
pop
xor
nop
inc
aas
jo
cmp
jg
pop
add
or
and
xor
addr16
mov
dec
push
push
cmp
pop
inc
bound
add
nop
mov
jp
icebp
rclb
push
xchg
cmp
pusha
mov
shrb
pop
adc
dec
pop
dec
cmp
push
sbb
pusha
aas
jne,pt
adc
mov
fisubs
aas
and
fbld
les
mov
jg
fcompl
or
aas
test
les
push
dec
sarb
rcl
xchg
xchg
testl
dec
test
insl
sub
and
add
pop
mov
cmp
les
or
jle
pop
mov
xor
or
inc
adc
mov
and
and
outsl
test
sbb
cwtl
sbb
xchg
dec
pusha
in
enter
add
pop
sub
pop
inc
sub
pop
sub
sbb
sarb
jg
sbb
mov
inc
popa
xchg
sar
sbb
cmp
aas
sbb
jg
xor
pop
inc
fcmovbe
or
fildl
addb
imul
dec
adc
sbb
movsb
daa
adc
dec
outsl
aas
prefetcht2
add
sbbl
pop
lea
imul
adc
mov
sub
push
push
jo
add
inc
jg
inc
push
mov
xchg
shlb
add
jno
mov
or
mov
sbb
sbb
in
push
in
es
in
in
loop
or
mov
loopne
call
lret
sbb
pop
cwtl
ds
push
call
ror
faddl
inc
cmp
ljmp
lods
pop
mov
dec
jg
inc
mov
mov
ret
dec
fiadds
fistpll
out
xor
or
inc
jb
fldt
inc
and
adc
or
mov
pop
ds
insb
mov
scas
add
sbb
in
in
pop
or
mov
mov
push
push
lahf
imul
ret
addr16
mov
mov
xchg
xchg
in
sub
or
inc
adc
leave
in
sbb
in
xor
icebp
dec
pop
out
add
mov
stc
orl
and
jl
mov
cwtl
aas
aam
push
movsb
popf
fmull
pop
pop
stc
and
call
movsl
sarl
ret
popf
sbb
test
and
adc
jge
imul
es
sbb
inc
dec
fstps
push
into
test
addr16
rorl
popa
and
rorl
mov
outsl
mov
add
popa
xchg
and
add
insl
xorl
in
in
sub
movsb
pop
pop
paddsb
mov
and
loopne
mov
negl
mov
jg
pusha
and
inc
xor
and
mov
in
mov
push
add
mov
mov
shrb
lahf
jo
test
or
xor
aas
dec
popa
leave
add
pop
mov
sub
es
das
orb
rorb
filds
fs
mov
pop
addb
loopne
adc
pop
push
movsb
das
inc
jg
pop
dec
and
stc
adc
xchg
mov
inc
movsb
sbb
and
nop
int3
mov
enter
sub
in
push
sub
push
int3
mov
xor
fildll
mov
and
mov
or
adc
test
aas
xchg
sub
sub
and
in
push
adc
add
test
adcl
cltd
pop
dec
mov
mov
add
aas
mov
dec
aad
push
inc
pop
mov
mov
sub
jl
fmuls
lret
clc
adc
jmp
sub
mov
ficoml
aas
test
mov
out
mov
pusha
adc
push
push
fsubl
adcl
sub
push
inc
dec
lods
pop
and
addb
cmp
fistpll
leave
in
aam
xor
push
inc
inc
dec
jae
fs
dec
bound
jbe
jns
xchg
outsl
mov
push
or
andb
and
mov
add
add
mov
add
dec
movsb
insl
fildll
movsb
mov
cs
inc
adc
hlt
adc
and
inc
mov
loopne
scas
mov
mov
mov
adc
xchg
add
dec
cs
sbb
pop
pop
pushf
sub
jl
test
sbb
popf
lea
sbb
mov
cs
stc
test
xor
sbb
das
enter
in
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
leave
sub
add
or
fisttps
pop
adc
das
not
faddl
inc
popa
inc
loopne
and
fildl
and
mov
leave
inc
sar
xchg
inc
or
adc
enter
and
adc
pop
adc
fsubs
xor
mov
stc
mov
xchg
hlt
in
xchg
mov
sbb
and
mov
cmp
mov
mov
xchg
cmp
mov
xor
rolb
dec
xchg
loop
aas
call
xorb
xchg
mov
dec
xor
mov
cmpsl
les
dec
sti
jbe
sub
loope
int3
sub
test
mov
gs
fucomp
push
aam
mov
or
push
leave
add
insl
shl
pushf
push
movsb
sub
stos
sbb
push
fsubs
adc
xchg
std
lock
push
xchg
imul
mov
xor
movsb
push
or
testl
xchg
xor
call
sarb
call
fidivl
call
aas
push
shl
sbb
dec
sub
js
sbb
fdivs
mov
pop
pop
xor
ss
mov
and
cmpb
lds
repz
mov
pop
int3
lahf
scas
test
loope
inc
mov
addb
aaa
pop
loopne
xor
call
rcll
aas
add
pop
test
popf
ss
ds
lahf
sbb
fistps
and
jge
mov
scas
or
mov
insb
mov
or
scas
inc
call
lock
roll
mov
insl
push
nop
or
sahf
call
and
fnstsw
xchg
mov
jno
mov
pop
cmp
outsl
loopne
jg
cmp
jg
lahf
push
adc
or
or
dec
cmp
push
test
jg
add
push
bound
xorb
les
xor
pop
pop
and
rolb
les
mov
pop
mov
lea
inc
nop
xchg
es
call
ret
jb
push
aas
pop
mov
mov
xchg
adc
fisubl
inc
inc
aas
push
nop
inc
dec
pop
mov
rcll
push
call
shrb
mull
push
mov
or
mov
add
loop
ds
addb
adc
push
push
ficoml
inc
sub
mov
xchg
add
mov
rol
daa
ja
loopne
mov
inc
xor
mov
inc
aas
cli
inc
test
test
push
imul
daa
and
lds
mull
loopne
nop
jbe
mov
mov
repz
mov
aaa
jbe
pop
mov
add
clc
sub
inc
iret
pop
mov
mov
out
mov
fwait
push
popa
pop
sub
inc
or
adc
pop
daa
xchg
popf
call
arpl
adcb
dec
inc
fdivs
and
pop
insl
dec
mov
mov
inc
pop
leave
fadds
inc
orb
mov
iret
call
xchg
pusha
daa
pop
shrb
push
mov
xlat
or
dec
fildll
push
daa
xchg
loopne
test
mov
ret
or
inc
addr16
int3
shlb
daa
repnz
inc
dec
adc
lock
cmpsb
cmp
push
add
inc
andb
cmp
inc
mov
xlat
push
or
inc
dec
scas
mov
dec
nop
dec
mov
add
jmp
dec
imul
and
or
in
call
shlb
subb
and
or
xchg
push
cmp
pop
daa
and
shl
dec
daa
test
nop
xchg
outsb
mov
ja
clc
scas
ljmp
adc
sbb
dec
mov
ficoms
or
xchg
movsb
xchg
xchg
inc
nop
dec
daa
dec
mov
imul
aas
adc
cmp
push
jo
aas
nop
dec
inc
or
mov
adc
dec
out
cmpsl
in
push
imul
daa
sbb
inc
dec
xchg
orl
xchg
mov
jl
pop
les
jle
out
dec
popa
pop
stos
push
push
aaa
call
pop
dec
addr16
cmpsl
loopne
out
push
daa
mov
js
pop
inc
push
pop
fsub
and
sub
lock
dec
inc
test
rclb
rorb
call
je
push
aas
mov
dec
mov
add
dec
adc
and
mov
sbb
je
dec
mov
adcl
addr16
xchg
je
call
imul
push
jo
out
cltd
or
enter
pop
xchg
daa
sbb
jl
xchg
fiaddl
xchg
or
jno
ss
and
movsl
pop
lcall
xor
fsubl
pop
xchg
lock
addb
and
cwtl
and
cmpsl
add
daa
js
xchg
sub
inc
mov
je
sbb
nop
sub
mov
push
pop
out
lds
dec
rolb
sub
mov
cmp
add
jmp
jg
mov
in
add
in
ds
inc
dec
repnz
push
pop
out
shrb
mov
adc
lods
xchg
dec
repnz
or
add
add
shll
cltd
movsb
data16
pop
push
mov
jl
sarb
adc
dec
test
outsb
xchg
pushf
aaa
or
fwait
push
stc
stc
pop
inc
xchg
arpl
push
jo
popf
mov
push
enter
pop
jb
jns
iret
sbb
pop
dec
xor
pop
daa
pop
insb
in
push
pop
lahf
clc
sub
xor
or
and
cmp
out
das
test
js
scas
push
decl
popa
dec
push
popa
sub
les
stc
inc
cmp
fbld
sub
xor
lock
js
enter
cmpsb
movsb
lea
sti
mov
jg
add
push
out
sahf
out
andb
inc
push
jns
ja
fs
adc
jae
mov
pop
push
addb
cmpl
jns
dec
push
cmp
and
mov
sahf
out
or
jns
out
push
push
xchg
cmpsb
out
jns
out
int3
add
mov
mov
pop
out
sahf
out
and
add
repz
lock
into
mov
repz
jb
push
inc
out
cmp
adc
repnz
adc
cmp
jns
fadd
push
scas
sahf
xchg
iret
repz
test
push
cmp
lcall
hlt
jl
jns
out
loopne
ret
out
sahf
out
jl
pop
sahf
out
sahf
dec
inc
cmp
sbb
dec
repz
clc
jnp
fadd
sahf
ja
repz
xor
pushw
pop
insb
out
idivl
lock
push
into
mov
stos
cwtl
jp
pop
dec
jl
out
cmp
adc
test
cmp
rcr
int3
mov
cmp
outsb
push
cmp
sbb
sahf
cmpsl
stc
cmp
repnz
rol
jns
out
mov
pushf
mov
jns
out
push
dec
cmp
dec
repz
sbb
add
sub
cmp
repz
mov
mov
jo
push
inc
xor
ds
and
xorb
jns
iret
repz
xchg
jle
mov
mov
loopne
iret
repz
push
outsl
push
ss
pop
data16
repz
mov
iret
repz
jo
out
sahf
out
xor
pusha
lahf
out
sahf
jb
mov
stc
xor
hlt
jb
sarb
mov
xorb
jns
out
cmp
adc
jno
repz
in
int3
mov
repz
js
pop
inc
idivl
repz
adc
ljmp
push
ret
xchg
push
out
imul
mov
repz
add
mov
pop
sbb
adc
fucomi
cmp
or
or
outsb
andl
and
idivb
sarl
jns
sub
dec
fidivrs
testl
push
mov
lret
decb
jp
repz
sbb
dec
stos
push
jl
cs
jnp
cmp
dec
data16
sub
repz
jbe
cmpsb
mov
jl
out
shl
testb
push
iret
repz
sub
data16
jns
idivl
push
mov
mov
enter
sahf
out
mov
dec
fucom
jns
cmp
push
lock
negl
xchg
and
cmp
repz
bnd
int3
repz
repz
iret
repz
insb
pop
dec
cmp
adc
cmpsl
stc
cmp
cli
jbe
loop
jns
out
ret
nop
and
sahf
out
push
repz
xor
push
jne
fidivrl
repz
mov
cmp
xrelease
pop
iret
repz
dec
xor
sbb
clc
sahf
out
lcall
jns
out
sahf
xchg
xchg
out
sahf
out
dec
cmp
push
iret
repz
add
jae
int3
mov
cmp
push
xchg
cmp
jns
out
pop
fs
nop
out
sahf
out
mov
repz
push
mov
dec
pop
insb
cmp
repz
test
mov
cmpb
inc
xor
clc
xorl
push
push
iret
repz
mov
mov
iret
repz
xchg
jp
push
sti
cmp
repz
sbb
imulb
mov
sarb
push
stos
jg
je
leave
repz
add
dec
push
cmp
adc
popf
scas
mov
cwtl
test
cmpsl
sbb
cmp
pop
jo
mov
mov
inc
ljmp
iret
mov
inc
fcoms
or
mov
insl
mov
add
ljmp
movsb
outsb
sbb
xchg
mov
outsb
xchg
adc
fwait
scas
es
xor
enter
jnp
iret
repz
pop
pop
pusha
popa
bound
iret
repz
data16
repz
repz
xchg
mov
iret
mov
int
iret
repz
xlat
fcomp
cmp
repz
fstp
repz
loopne
loop
in
cmp
repz
out
jmp
repz
in
out
out
iret
repz
lock
repnz
cmc
cmp
repz
idiv
stc
cli
repz
repz
cld
std
lcall
push
add
add
sahf
out
add
out
sahf
out
or
sahf
movups
adc
adc
sahf
out
adc
iret
repz
sbb
sbb
repz
and
and
cmp
repz
push
gs
iret
repz
xchg
lods
mov
fistpll
stc
cmp
add
push
es
out
sahf
out
pop
addr16
sahf
out
sahf
mov
out
dec
repz
push
jle
sub
repz
repz
popa
jne
iret
repz
xchg
cmpsb
mov
aam
sahf
cmpsl
stc
cmp
add
sbb
jns
out
ss
dec
push
pop
out
sahf
out
jno
orl
cmpsl
mov
ret
out
iret
loopne
adc
pop
xor
jo
repz
jl
mov
out
cmp
testl
sahf
out
and
jns
out
test
jns
lret
fucomip
incb
rcr
std
jne
gs
xor
jbe
jo
adc
fs
insb
sbb
sti
push
int
lret
insb
mov
int
jb
popa
je
push
outsl
outsl
insb
push
pop
mov
push
outsb
xchg
outsl
xchg
push
jb
arpl
jae
pop
and
jb
sbb
insb
outsl
lret
outsb
mov
ret
in
in
imul
sub
jle
push
gs
imul
addr16
add
dec
popa
jns
jg
out
sub
je
imul
imul
inc
jae
outsb
arpl
jns
je
hlt
popa
xchg
insl
xor
jae
xor
jns
push
arpl
repnz
mov
xor
loopne
stos
pop
xchg
pop
push
pop
push
add
and
daa
cmp
xor
popa
sbb
mov
ja
or
push
popa
jb
insl
and
outsb
popf
mov
push
push
and
sbb
test
test
nop
jne
mov
xchg
pop
cmpsl
insb
arpl
pmaxsw
loopne
in
inc
and
xchg
jb
jne
push
mov
lea
outsl
xor
jne
xchg
ret
fbld
push
hlt
stos
jp
addr16
gs
inc
sub
inc
aas
shll
adc
dec
dec
mov
fistl
and
mov
je
adcb
cmp
sbb
insl
cmp
mov
mov
jbe
in
outsl
pop
mov
xchg
mov
andb
addr16
outsl
aaa
out
mov
or
xor
xor
out
and
out
push
inc
into
popf
adc
adc
sub
push
outsb
insl
pop
or
shll
pop
mov
jnp
fs
push
cmp
jb
pop
dec
xchg
ljmp
sub
xor
push
xorl
dec
inc
je
jmp
inc
cmp
imulb
das
mov
sti
push
rorb
adc
imul
push
adc
dec
bound
mov
xchg
sub
sub
fs
fldt
mov
shl
mov
or
dec
arpl
das
rcrl
subl
add
call
mov
xor
insb
ret
add
dec
movd
subb
sub
push
jo
test
dec
je
inc
mov
pop
in
lods
or
insb
lcall
scas
mov
sub
cmpsl
stc
xor
mov
push
inc
cld
gs
mov
fisubs
ds
pop
adc
push
rorb
mov
dec
mov
mov
inc
int
or
out
daa
test
outsl
pop
pop
aad
add
dec
rcll
cmp
xchg
add
xchg
int
in
push
enter
add
adc
addr16
xchg
pop
test
nop
aad
dec
cmp
xchg
aas
pop
and
and
xor
pop
test
fs
cmp
js
push
and
pop
test
add
stos
pop
adc
mov
pop
lcall
xor
data16
xor
cmp
cmp
xor
xor
ss
popa
data16
arpl
jb
add
mov
mov
push
sar
lret
rol
cmpsl
mov
mov
push
pop
push
shl
insb
ss
push
adc
jnp
jge
jo
xor
dec
lock
push
inc
pop
sti
fidivrs
mov
push
xor
push
push
nop
inc
nop
push
outsb
imul
jne
and
push
push
pop
xchg
push
and
sti
fidivrs
mov
xor
adc
fidivs
mov
into
add
nop
push
lock
mov
into
dec
inc
inc
ss
push
and
mov
jle
dec
adc
rolb
out
popf
arpl
push
xchg
dec
push
push
dec
aas
push
push
rclb
pushl
aaa
inc
inc
xor
xor
inc
add
xor
xor
xor
incl
mov
add
jo
inc
add
cmpsb
rol
mov
and
xor
aaa
arpl
aaa
lcall
push
push
mov
sbb
xor
xor
add
clc
imul
sub
bound
push
mov
bound
push
gs
gs
gs
bound
loop
and
ss
test
ret
out
clc
in
addr16
xor
cmp
ss
pusha
fimull
jmp
lcall
add
sti
jg
cwtl
mov
into
les
sarb
rclb
add
sub
incb
ret
jmp
sub
xor
xor
add
in
or
mov
mov
rorb
sbb
inc
inc
aad
lods
inc
negl
cltd
sahf
popf
push
scas
and
jnp
adc
lock
out
in
fwait
or
icebp
jnp
push
repz
sarb
bound
pop
enter
popf
adc
test
push
inc
fldt
in
or
lret
iret
jae
xchg
add
fisubl
popa
add
mov
aas
mov
add
add
outsb
lahf
fstl
mov
inc
adc
out
inc
outsl
inc
mov
and
out
pop
inc
cmpb
and
push
aad
jbe
fiadds
add
and
xor
loopne
mov
mov
ja
add
jmp
in
mov
nop
sub
repz
push
xor
mov
jbe
icebp
ja
dec
fisubl
jb
mov
addb
xor
add
pusha
add
add
clc
aas
xchg
or
jmp
add
add
adc
xchg
add
gs
adc
aam
testl
sub
testb
mov
and
push
jno
jg
cld
mov
lds
je
outsb
lahf
pusha
add
icebp
add
push
xor
jo
lret
roll
sar
inc
les
int
ror
dec
inc
enter
imul
adc
icebp
andl
and
loopne
loopne
ret
mul
push
jb
outsb
jae
rcll
inc
add
add
jbe
or
and
insb
movb
mov
dec
cs
daa
clc
fs
adc
and
daa
mov
adc
push
in
insb
gs
push
push
adc
push
xor
lods
popa
rolb
andb
fadds
imul
sub
jmp
push
daa
jmp
shll
lods
es
aas
testb
out
add
jnp
mov
inc
push
pusha
push
add
jo
jnp
sti
xor
push
push
nop
rolb
inc
arpl
jo
icebp
outsl
jae
ljmpw
and
fistpll
push
gs
push
outsl
jb
fs
imul
jg
cltd
adc
pop
imul
je
jo
das
das
ja
std
lods
pop
js
arpl
or
arpl
das
aas
ja
xor
mov
jae
dec
in
repnz
mov
nop
jns
cmp
pop
mov
mov
sbb
pop
mov
int
mov
loopne
push
push
outsb
addr16
xor
and
outsb
outsb
outsl
je
jb
outsb
sti
add
imul
add
or
jg
in
jg
aas
sub
pop
cld
push
sbb
cli
mov
clc
imul
jp,pt
sti
push
repnz
inc
shl
ja
es
push
ret
pop
push
imul
popa
ret
lea
lret
subl
loopne
and
add
or
andl
idivb
pop
add
fwait
movsb
sub
add
stos
jp
push
setno
sahf
cmp
scas
in
mov
or
jo
push
mov
push
sub
xchg
mov
dec
insb
mov
add
test
jb
push
xor
mov
mov
and
out
inc
cs
and
outsl
inc
jb
xor
rcrb
mov
add
lahf
dec
dec
mov
push
nop
lahf
push
push
inc
inc
adc
mov
lahf
roll
popa
push
cmp
mov
or
mov
adc
popa
sub
jne
inc
mull
cmpsl
push
sub
and
sbb
orl
jns
mov
mov
adc
and
adc
ret
pop
add
push
xchg
adc
hlt
out
insl
sarl
fidivrl
dec
sar
push
jb
shll
subl
loopne
in
jae
push
mulb
and
pop
sbb
test
xor
push
mov
movsb
and
sub
jo
push
cmp
fs
lock
xor
movsl
dec
mov
and
mov
shrb
dec
outsl
inc
and
inc
mov
jb
push
das
mov
fidivrs
xor
push
push
mov
fdivrs
test
ret
inc
jecxz
mov
adc
data16
int3
imul
sbb
adc
cld
dec
rcl
sub
sub
imul
out
cmp
adc
sub
pop
or
cmp
dec
das
cmp
adc
jo
dec
ret
inc
inc
or
mov
jae
addr16
or
dec
in
jo
test
test
rcrb
add
aad
insb
xchg
fs
pusha
rol
popf
add
insb
or
andl
lds
loop
mov
add
lahf
int3
and
push
push
jbe
mov
adc
adc
xchg
mov
ret
push
sub
xbegin
or
or
lock
and
ret
cmp
or
jo
jns
sbb
adc
iret
in
add
dec
pop
jns
out
push
xor
lcall
sub
add
leave
out
fnclex
adc
adc
inc
ret
leave
xor
dec
icebp
es
icebp
jno
dec
mov
cmp
cmp
or
pop
cmpb
daa
rclb
je
add
mov
mov
pop
imul
insl
add
incl
filds
insl
popa
insb
cmpl
jne
jmp
imul
jo
arpl
in
in
adc
hlt
pop
add
and
arpl
pop
enter
push
negb
mov
xor
imul
outsb
dec
sbb
fwait
insl
mov
test
inc
imul
gs
ja
inc
iret
jmp
jae
dec
inc
push
dec
inc
dec
sbb
add
inc
mov
test
add
call
xchg
jnp
mov
add
into
repz
push
popf
push
push
enter
sub
fsubr
les
mov
loope
and
roll
push
pop
scas
stos
imul
or
push
xchg
shll
movsb
add
pop
add
call
lock
popa
add
imul
push
push
sub
and
add
aad
add
xor
fs
add
out
jnp
cmp
jle
cmp
insb
ds
mul
fidivrl
fs
imul
inc
mov
daa
into
and
outsl
sbb
push
insl
idivl
jb
jae
jne
arpl
and
rcrl
sbb
in
loopne
inc
adc
mov
cmpsb
je
push
jecxz
fbstp
je
out
pop
jb
jbe
shll
xchg
insl
lahf
jbe
addl
arpl
inc
sbb
pop
inc
sub
inc
inc
jbe
fs
pop
aaa
jns
ja
data16
rep
dec
aad
mov
adc
xchg
xchg
push
jb
lea
fsubs
and
dec
jl
fwait
out
sbb
outsl
out
lds
imul
dec
fwait
add
mov
fimull
arpl
push
jle
jnp
push
rcrl
push
xchg
pusha
jp
or
dec
repz
mov
mov
inc
fimuls
aas
push
mov
sub
xor
jmp
add
mov
mov
daa
push
push
nop
stos
mov
xor
jle
adc
outsl
insb
add
or
push
arpl
add
add
subb
jb
sub
arpl
outsl
push
xor
jnp
add
jo
cmp
popa
rcrl
cs
arpl
mov
mov
test
jnp
outsb
decl
mov
ja
push
shrl
xchg
je
cmc
je,pt
jae
repnz
cmpsb
xchg
sbb
inc
push
mov
jnp
test
outsb
mov
mov
pop
stos
adcl
inc
sahf
rcll
push
arpl
addr16
loope
insl
jecxz
sub
sarl
push
pop
pop
or
ret
sub
daa
sbb
popa
sub
daa
arpl
jecxz
ret
or
stos
push
mov
pop
das
popl
mov
sbb
js
push
ja
es
inc
inc
and
cmpsl
jmp
xor
xor
xor
test
ljmp
cmp
inc
xor
push
xor
data16
jge
mov
xchg
xor
lods
xor
xor
xor
movsb
xor
xor
mov
xor
xor
xor
xor
xor
ja
test
xchg
xor
xor
xor
fbstp
sahf
inc
xor
push
xor
add
test
mov
decl
shll
iret
mov
mov
mov
cli
lret
ret
das
mov
enter
mov
mov
mulb
out
ror
lret
into
repz
jmp
fcom
ret
pop
inc
inc
ljmp
fiaddl
mov
leave
and
clc
out
aaa
ror
int
mov
xchg
mov
inc
out
mov
and
dec
test
xchg
add
mov
mov
add
aaa
incl
imul
xor
pusha
cld
xchg
push
dec
and
aaa
sub
sub
sbb
lea
push
les
imul
insl
pop
add
pop
add
push
or
push
inc
aas
rorb
xchg
add
aas
lds
fnsave
sbbl
cmp
lahf
jg
add
jge
mov
test
xlat
inc
pushf
jge
iret
fnstsw
mov
pop
aas
test
imul
push
lret
xchg
iret
popa
bound
jle
mov
aaa
sbb
xor
add
lret
cmp
or
adc
jg
or
sbb
lock
mov
push
add
or
pop
mov
or
cs
js
dec
pushf
push
inc
jbe
jle
pop
jo
jg
or
div
maskmovq
mull
cmpsb
add
or
or
outsb
sub
xchg
xchg
insb
jle
or
or
loop
pop
rorb
and
fildll
add
mov
dec
test
adc
lcall
nop
cli
push
and
call
mov
roll
dec
dec
test
test
add
movsl
and
lock
test
sbb
mov
sbb
aaa
pop
test
adc
test
fs
popa
fistpll
xchg
or
sub
jp
cmp
fistpll
in
cmp
fidivs
jge
mov
inc
and
ficomps
in
sbb
pop
pop
rolb
adc
xchg
mov
repnz
scas
xchg
add
nop
frstor
xor
and
call
adc
testl
sbb
sub
adc
push
xchg
dec
adc
icebp
fsubl
add
fdiv
adc
add
push
adc
and
and
xchg
fcmovb
les
or
das
adc
adc
mov
or
arpl
or
es
cmp
and
call
push
mov
sbb
mov
cmp
and
xchg
dec
loop
ljmp
repnz
and
call
mov
push
ljmp
sub
decl
mov
jmp
cmp
int3
pop
pop
mov
adc
scas
js
and
mov
adc
dec
pop
adc
and
xchg
inc
pop
adc
xchg
or
divb
test
lock
push
xchg
mov
jo
ror
call
lods
pop
in
xor
sub
fisubs
xchg
fsubr
jo
mov
xchg
jo
test
or
xchg
stos
push
and
jb
xor
or
or
test
mov
test
in
mov
inc
inc
andl
sbb
sbb
jno
mov
xchg
pop
inc
xchg
les
adc
mov
and
sub
sbb
push
and
adc
cltd
dec
push
aad
mov
jnp
xor
jns
sub
out
aad
inc
and
aad
pusha
push
icebp
jmp
pop
mov
mov
mov
aas
cmp
cmpsl
pop
in
dec
adc
dec
clc
aas
in
adc
nop
sbb
aam
and
xor
adc
mov
add
mov
test
pop
sub
inc
xchg
pop
shl
hlt
cmp
mov
and
or
sub
push
cmp
inc
mov
push
divl
fcom
lds
pop
adc
cmp
test
or
divb
inc
push
sub
inc
mov
adc
lock
loop
popa
insb
adc
leave
shrb
jb
lods
xor
push
mov
or
sbb
cmp
add
cs
int
xlat
clc
inc
mov
xor
and
lcall
aaa
clc
pop
sbb
mov
dec
xchg
xor
test
push
cmc
and
dec
les
mov
popa
or
sbb
mov
sahf
out
dec
repz
add
push
mov
scas
cmp
push
push
fisttpll
push
call
push
pop
sub
ret
and
dec
pop
sbb
sub
and
mov
xor
aaa
dec
gs
push
add
sar
or
jb
dec
enter
jmp
pop
aam
addl
dec
enter
inc
add
xor
push
jb
inc
inc
sub
cmpsb
in
arpl
pushf
xchg
push
jb
iret
jbe
ror
xchg
add
cmpl
push
xchg
push
push
xchg
rcll
stos
and
repnz
je
inc
inc
cwtl
adc
es
xor
mov
xlat
into
mov
into
pusha
or
aas
xchg
and
or
sbb
cmp
iret
adc
and
outsb
add
in
sbb
bound
pop
push
jecxz
sbb
xchg
jb
add
mov
loopne
add
iret
add
inc
lock
dec
jne
test
add
addb
or
icebp
cmp
stc
arpl
cmpsb
int
int
pop
mov
sar
lock
add
pop
enter
xchg
in
inc
ret
lock
xchg
push
std
int3
push
add
les
and
push
mov
or
lock
sbb
ljmp
xor
rcrl
add
jmp
jno
imul
or
out
repnz
shlb
cmpsb
leave
and
clc
lret
fisubs
push
in
adc
scas
sbb
out
out
adc
les
push
xchg
or
mov
mov
push
sub
xchg
inc
pop
les
gs
dec
ss
inc
sbb
or
or
jge
enter
xor
es
lock
cmp
loop
dec
mov
pop
outsl
daa
lret
mov
cmp
shl
cmp
xchg
inc
or
cs
sub
or
nop
pop
cmp
and
leave
clc
filds
add
leave
hlt
xchg
adc
inc
sub
test
or
or
in
in
push
sub
pop
mov
mov
icebp
push
dec
insl
and
stos
dec
and
mov
out
add
shlb
sar
cmc
mov
in
enter
popa
loop
scas
orl
push
dec
push
add
cmpl
dec
out
cmc
rorb
pushl
sahf
xor
setp
or
in
push
dec
xlat
add
les
push
inc
popf
or
int3
inc
dec
cmp
or
fisubl
mov
mov
xchg
ds
xchg
lock
push
ljmp
in
adc
adc
and
dec
push
xchg
push
enter
std
jmp
and
shlb
push
sbb
push
test
adc
push
push
xchg
or
lds
xchg
add
fadd
sub
jns
pushf
hlt
jmp
lods
sbb
or
cld
xchg
dec
into
je
out
push
push
loop
xchg
mov
orl
mov
push
data16
push
xor
nop
les
jo
dec
ret
cmp
or
test
test
push
orb
sbb
or
and
fwait
ret
xchg
jle
add
pop
pop
adc
call
fmuls
inc
cmpl
push
jb
jmp
adc
mov
or
popf
int3
ret
in
mov
and
adc
jb
add
ret
ret
mov
ret
adc
cwtl
xchg
adc
lock
mov
jmp
jmp
mov
pop
mov
adc
or
into
subl
xor
sti
jno
pop
xchg
pushf
lahf
rclb
call
inc
mov
insl
cld
mov
popa
sub
dec
mov
pcmpgtb
lds
jnp
movsl
jo
mov
sub
add
xchg
mov
outsb
call
and
xor
clc
lahf
pop
dec
enter
add
mov
xor
inc
cld
mov
loopne
or
lods
xchg
add
imul
push
leave
dec
mov
into
push
nop
xchg
in
mov
inc
and
mov
or
in
inc
mov
xchg
cmp
mov
cmp
mov
test
mov
sarb
fistps
loop
xchg
and
push
push
mov
in
add
dec
flds
arpl
inc
loop
imul
add
add
dec
pop
jns
xchg
loop
in
cld
jno
mov
clc
test
sbb
ljmp
push
dec
lret
push
mov
clc
and
push
test
fiaddl
lods
and
push
or
xchg
mov
das
enter
hlt
cmp
gs
jns
loope
mov
adc
mov
jnp
cld
outsb
arpl
nop
sahf
subb
aaa
ret
inc
bound
sbb
xchg
lret
fisubrs
xchg
sti
cltd
xchg
push
enter
mov
into
es
mov
lahf
adc
sahf
mov
pop
mov
in
scas
ja
shl
ss
addr16
dec
addr16
ret
lock
mov
jne
repnz
pop
hlt
xor
pushf
ss
or
or
mov
add
rclb
cs
jmp
daa
push
cmp
cmp
jno
ljmp
mov
jns
fs
and
push
ss
imul
ljmp
mov
lods
adc
sbb
sub
shrl
cmp
xchg
xchg
sbb
jmp
dec
push
enter
jmp
mov
adc
enter
sub
xchg
mov
push
test
and
daa
adc
hlt
cld
mov
or
adc
fidivl
xor
sub
cmp
push
pusha
repnz
or
sub
sbb
jbe
xor
gs
es
dec
jo
sbb
nop
adcl
adc
push
es
xor
jecxz
xlat
mov
pop
adc
cli
adc
mov
add
lods
aad
adc
adc
add
shr
push
or
les
or
es
and
cmp
add
mov
lds
arpl
mov
enter
or
xchg
test
sahf
mov
lock
jg
add
adc
cmc
lods
jecxz
xchg
or
push
push
pushf
fcoms
fsts
mov
pushf
xchg
nop
adc
fnsave
repz
insl
and
adc
pop
addr16
add
xchg
dec
push
jne
push
sub
adc
push
or
movsb
and
cltd
in
mov
loopne
sbb
lds
dec
add
mov
andb
dec
jno
mov
xor
das
inc
ret
cmp
and
push
xchg
push
dec
dec
pop
hlt
mov
sbb
and
sahf
or
test
sbb
mov
mov
jae
out
add
pop
mov
and
mov
mov
stos
stos
std
mov
mov
dec
and
repnz
mov
mov
mov
mov
mov
and
mov
mov
xchg
or
lds
in
pushl
bound
and
arpl
mov
push
pop
movl
daa
jmp
scas
or
loopne
and
pop
scas
shrl
or
pop
adc
xchg
scas
mov
push
pop
aad
sub
icebp
dec
cmp
pop
enter
mov
jae
pop
xchg
cli
sar
inc
cs
lods
jb
and
pop
jb
push
lcall
and
fcom
pop
dec
mov
stc
mov
es
adc
aam
and
mov
cmp
sbb
inc
mov
out
mov
pop
fistpl
repz
inc
mov
in
pop
mov
ja
push
xchg
sub
jno
incl
nop
xchg
js
cmc
mov
mov
nop
xchg
stos
subb
mov
inc
cmc
inc
mov
xor
sbb
lds
hlt
dec
mov
cwtl
push
mov
bound
pop
push
scas
mov
repz
push
fs
les
leave
sub
add
inc
push
mov
adc
enter
daa
ss
insb
mov
enter
and
xor
add
mov
inc
xchg
lea
xchg
test
ret
seto
mov
call
nop
inc
data16
in
jns
call
clc
call
mov
or
push
push
add
cmp
cld
mov
adc
and
out
push
call
inc
add
cmpsl
fists
cmp
clc
addr16
in
fs
push
cmp
and
cmpsb
hlt
fsubl
hlt
lds
fwait
cmp
lock
pop
sbb
push
lock
push
add
mov
fbld
and
lret
movsl
imul
inc
bound
lock
or
mov
inc
push
ficompl
popa
rorb
andl
pop
jmp
fldt
movsl
outsl
push
xor
dec
cmpsb
hlt
lcall
push
xor
adc
pop
and
subl
fs
popf
cs
loopne
jmp
sub
sub
setns
addb
movsb
adc
and
movsb
push
add
enter
push
adc
sub
and
xor
add
pusha
dec
or
repz
jo
fs
mov
in
mov
mov
push
call
jnp
add
pop
outsl
jmp
or
cmp
add
xchg
or
clc
mov
ss
repnz
mov
and
outsb
pop
sub
mov
arpl
hlt
mov
fbld
adc
cmpsl
mov
mov
arpl
add
and
add
mov
adc
nopl
mov
sbb
stos
jecxz
mov
and
cmp
and
out
lahf
arpl
enter
ret
lahf
jecxz
cs
mov
lahf
out
cmp
push
lahf
arpl
nop
dec
push
add
sub
sbb
sahf
int3
rclb
loopne
jg
fsts
sub
aam
or
mov
pop
cmpsb
mov
sbb
addr16
add
adc
xor
lea
cmp
jo
pop
rolb
sbb
push
xor
add
test
jns
out
fdivrs
sahf
jb
sbb
fsubr
js
push
inc
or
popf
jmp
fmuls
inc
jbe
xor
ja
add
add
xor
xor
dec
xlat
or
cld
push
push
push
lock
xchg
mov
inc
dec
lods
in
dec
jb
adc
pop
or
and
xor
cmpsb
cmp
adc
cmp
and
pop
jo
fs
insl
ret
ds
jb
sub
std
jbe
in
in
dec
loopne
in
xchg
mov
call
cmpsl
fwait
xchg
fwait
loopne
movb
in
test
inc
fucomip
and
orb
dec
push
enter
in
lds
jo
dec
ret
fs
ret
add
and
in
lods
or
push
adc
clc
push
adc
jno
lods
pop
shl
add
cld
xchg
es
ja
jno
or
jecxz
lods
icebp
mov
out
pop
lock
in
cmc
subl
mov
push
sbb
dec
jno
pop
dec
pop
in
push
or
inc
mov
mov
rorb
lock
cmp
mov
cwtl
movsl
cwtl
adc
call
jb,pt
scas
adc
insl
xor
cmp
sbb
mov
test
call
push
jmp
or
or
or
add
or
lret
loop
fcmovnb
sbb
pop
xor
cmp
and
cmp
push
pusha
jl
cltd
and
or
sbb
xor
rorl
mov
pop
mov
sbb
xchg
adc
add
add
out
lock
pusha
loop
hlt
inc
adc
adc
dec
lcall
cwtl
adc
cmp
inc
inc
push
push
jo
xchg
roll
cmpb
pop
xor
cmp
dec
hlt
call
mov
adc
push
mov
lea
adc
push
dec
insb
repz
fsubrl
popf
or
lds
adc
ja
cmp
xchg
lret
lcall
popa
sti
adc
sbb
add
shl
and
adc
cltd
dec
add
fwait
cmp
jge
and
test
add
shlb
pusha
inc
add
xchg
inc
cld
and
or
shl
insb
rolb
inc
int
pusha
mov
int
or
push
pop
cli
and
mov
rcrb
mov
sbb
sbbl
or
and
adc
nop
loopne
jmp
cwtl
add
and
mov
xor
pop
adc
adcl
add
xchg
shll
fmull
mov
jmp
pusha
push
adc
dec
cmpsb
xchg
push
dec
mov
ja
imul
addr16
ja
nop
lock
jmp
int
adc
ret
inc
xor
dec
das
adc
ret
adc
sub
mov
loop
jne
xchg
dec
fsubl
or
scas
ss
gs
inc
pop
cwtl
sbb
dec
adc
jmp
rorl
popf
and
inc
jbe
int3
adc
ja
xchg
add
sti
xchg
lock
orb
les
addl
sbbl
shlb
mov
orb
mov
call
std
in
dec
add
rclb
es
sub
cwtl
mov
push
dec
fdivrl
adc
or
nop
inc
nop
or
jbe
sub
shrl
jns
das
cld
out
lods
mov
push
xchg
ret
or
dec
mov
loop
data16
sub
adc
pusha
adc
sbb
pop
loop
data16
call
cmp
add
orb
nop
rorb
mov
adc
xchg
mov
adc
xchg
or
and
adc
mov
mov
or
fiaddl
pop
stos
loope
lcall
or
mov
loop
xor
mov
insb
xor
inc
daa
popa
in
dec
push
negb
adc
fs
adc
mov
sbb
das
cmp
loopne
lea
or
punpcklbw
leave
out
hlt
add
pop
in
add
fs
aaa
lea
sbb
xor
jb
adc
stc
mov
mov
push
xchg
sub
fwait
loope
dec
subb
ljmp
xorl
jns
adc
mov
lret
adc
jno
les
popf
xor
or
cmp
mov
loopne
fmull
fisttpll
add
dec
ret
rolb
stos
arpl
and
push
mov
jno
nop
mov
jecxz
fiadds
and
xchg
inc
adc
mov
arpl
and
nop
or
cwtl
adc
dec
loop
or
and
les
sub
sub
flds
xchg
mov
pop
mov
adc
mov
xor
adc
add
lret
pop
jb
mov
lods
xor
std
push
dec
mov
add
mov
xor
push
lds
dec
xor
or
out
mov
cmp
lret
mov
enter
push
lret
xor
adc
xor
and
loope
shrl
or
cmp
pusha
bound
push
xor
cmc
xchg
es
rorl
lret
pushf
or
test
dec
loopne
xor
out
mov
mov
adc
pusha
loop
lret
or
nop
or
pushf
int3
test
push
xor
lret
inc
es
pusha
inc
xor
mov
xchg
adc
or
pushf
fs
daa
imul
add
lret
push
cmpsl
daa
iret
and
flds
ret
mov
or
lret
sub
mov
ja
xchg
pop
push
inc
or
stc
lds
adc
jnp
or
xchg
orb
mov
inc
lret
dec
rolb
xchg
jl
xor
sbb
orb
fldl
lret
clc
add
xchg
inc
push
push
xor
cmpb
int3
xorl
fiadds
ja
push
jmp
orl
mov
scas
xor
xor
and
sbbb
xor
push
or
pusha
loop
mov
inc
inc
jbe
mov
inc
add
insb
lret
xor
repnz
aam
addb
lret
add
out
loop
inc
outsb
es
add
mov
jp
add
xor
movsb
test
pusha
mov
rol
dec
jg
lret
lret
das
ja
pop
push
jg
push
dec
inc
movsb
mov
add
pusha
loop
dec
sub
jg
jle
xor
xchg
cmpsb
xchg
inc
movsb
jb
push
test
cmp
es
adc
out
jmp
jge
jg
xchg
sub
xor
and
jmp
cmp
and
add
mov
lret
adcl
inc
mov
jl
int3
in
shlb
sarb
ror
mov
cltd
in
inc
lcall
inc
mov
sub
dec
lods
lret
adc
es
push
test
mov
adc
xchg
jbe
and
fisubl
ficomps
push
dec
lret
inc
test
test
cmp
xor
pop
test
push
adc
jp
lahf
add
adc
lret
inc
outsb
inc
push
dec
int3
jp
sbb
and
lret
insb
jmp
cmpsb
pop
in
stc
push
or
mov
push
dec
fcompl
lret
jno
movsb
mov
ret
xor
push
jp
cwtl
mov
add
and
and
jns
and
repnz
mov
inc
test
and
dec
mov
adcl
xchg
and
dec
lret
jnp
and
and
dec
int3
adc
popa
xor
cs
pop
test
adc
mov
in
xor
inc
fcmove
les
add
ror
sub
adc
sub
dec
in
js
popa
js
add
nop
mov
and
in
or
les
lret
js
lods
cmp
mov
cmp
js
movsl
rol
mov
dec
push
loop
les
scas
xor
xchg
push
adc
lret
popa
add
repnz
leave
jbe
in
mov
aad
or
mov
lret
lds
lret
test
mov
jne
xorb
aam
jne
jb
cmp
aam
jne
mov
or
jnp
xchg
rolb
les
cmpb
jne
jnp
js
add
adc
imul
lret
jne
jb
cwtl
js
lret
inc
pusha
fwait
push
sti
testb
pop
push
jecxz
je
movsl
je
inc
repnz
inc
mov
dec
lret
pop
add
dec
jns
sbb
loope
dec
in
nop
or
mov
sub
insl
push
xor
xchg
das
pusha
push
or
mov
dec
fsubl
lret
fildl
jae
jno
mov
adc
adc
dec
js
jae
push
inc
mov
in
lock
rol
adc
mov
adc
test
lret
loopne
lock
lea
pop
ja
jmp
jno
push
and
mov
push
lret
pop
faddp
adc
inc
or
lret
or
xor
xor
or
js
sbbb
enter
push
or
lret
mov
add
lret
push
dec
faddl
inc
xchg
outsb
sub
pusha
sub
lret
lods
add
lret
push
dec
adc
add
les
lock
outsl
or
or
js
outsl
mov
push
or
fs
push
push
jge
cwtl
sub
dec
lret
cmp
gs
and
ret
pop
outsl
out
mov
mov
dec
fdiv
outsb
pop
lret
in
dec
daa
mov
add
outsb
or
add
lret
repnz
shlb
cmp
in
scas
insl
outsb
insl
xor
cwtl
mov
pop
es
push
or
nop
data16
adc
lret
add
lret
adc
es
ss
and
test
pushf
insb
xchg
nop
adc
inc
jb
cs
addb
nop
insb
fbld
imul
mov
and
ror
sbb
inc
sub
push
mov
cltd
push
and
nop
pop
push
pop
repnz
dec
mov
fists
pop
or
test
cmp
jmp
lods
sbb
sub
push
shlb
sub
push
jmp
sbb
inc
inc
imul
mov
imul
subl
add
out
dec
mov
adc
cltd
rol
push
test
into
fs
in
dec
push
xor
pop
inc
pop
ljmp
xchg
or
pop
adc
lock
movsb
addr16
mov
loopne
clc
mov
nop
xlat
inc
gs
sbb
jne
addr16
hlt
dec
addr16
sub
test
rol
lret
mov
adc
data16
xor
or
mov
andb
cmp
sub
and
xchg
dec
cmp
es
adc
push
mov
sbb
repz
inc
lret
pcmpgtb
gs
orb
pop
and
lret
inc
popf
jbe
push
sbb
lock
hlt
pop
cwtl
pop
roll
rcll
push
sbb
dec
es
add
ja
jecxz
mov
out
mov
and
mov
lea
inc
dec
and
mov
push
inc
clc
xchg
pushf
or
adc
cld
arpl
in
test
pop
sbb
fcompl
popa
xchg
push
dec
mov
mov
pop
ja
es
and
jbe
loope
call
or
test
in
add
sti
cld
inc
xor
repnz
lret
push
dec
and
inc
pusha
push
or
lret
loopne
xchg
sbb
mov
pop
inc
leave
in
bound
cmp
jmp
mov
sbb
test
andb
lds
loope
push
ja
jmp
bound
or
in
in
popa
loopne
sub
leave
and
pop
cmpsl
jge
mov
and
popa
cli
jo
mov
push
movsl
filds
es
nop
mov
lret
cmp
insb
pusha
ss
pmulhw
xchg
inc
in
pusha
lods
pop
les
aam
mov
pop
imul
xor
pop
xchg
outsb
mov
clc
mov
push
pusha
xor
inc
jnp
loop
xor
adc
push
xor
mov
pop
cmp
or
gs
pop
cmp
pusha
ret
in
enter
ds
adc
dec
adc
pusha
loop
add
mov
lret
adc
jno
sbbl
test
fcompl
sbb
lret
lea
sub
lea
loope
cli
cmp
je
push
push
insb
aaa
into
psrld
test
ret
sub
push
push
jp
pop
pop
mov
xor
mov
test
ret
or
pusha
inc
ds
cmp
dec
push
push
push
jp
add
mov
insl
pop
shll
in
inc
pop
fwait
cld
int3
cmp
addl
fmuls
and
xor
xor
movsb
lret
xor
nop
sub
incl
xor
in
add
dec
jecxz
popa
fldt
movl
jbe
adc
dec
addr16
pop
mov
movb
sub
xchg
or
fs
subl
cmpsl
mov
outsb
jb
pop
popf
inc
lds
xor
sub
pop
pop
xor
xor
xor
rolb
sub
sbb
dec
jne
pop
popf
pop
add
stos
mov
cmp
mov
add
das
mov
inc
jge
push
stos
call
adc
in
lret
push
orl
pop
out
dec
sub
add
jns
dec
shr
sbb
in
mov
and
outsb
add
or
and
push
mov
push
push
sub
mov
sbb
loopne
add
or
adc
and
jbe
dec
add
pop
leave
rcrl
lock
and
mov
test
cmp
xchg
sbb
xor
insl
in
icebp
pop
pop
dec
aas
in
pop
mov
cmp
and
lcall
xchg
js
xchg
ficoml
ljmp
movsb
mov
shl
push
sub
lcall
mov
pop
mov
push
xor
pop
push
or
data16
cwtl
out
stc
popa
mov
dec
add
rolb
pop
test
das
and
or
cmp
out
cmpsl
jl
scas
inc
jbe
inc
and
inc
test
test
lock
aam
pop
push
add
pop
and
or
dec
sahf
or
cltd
push
inc
outsl
or
repz
aad
outsl
arpl
adc
inc
mov
push
pop
sbb
pop
cmc
ret
nop
clc
pop
movsl
sub
les
mov
mov
lcall
popf
push
jp
inc
push
leave
add
jp
push
sub
and
sahf
faddl
adc
push
pop
les
in
add
rcll
enter
mov
push
sub
xchg
pop
add
push
pop
jb
fs
push
jl
leave
inc
xchg
test
pop
punpckhbw
nop
push
dec
push
pop
add
hlt
test
es
hlt
in
jns
inc
sbb
mov
fsubl
lock
andl
std
adcl
negl
push
sub
in
pop
fstps
cwtl
ret
xchg
dec
or
int
test
nop
inc
fists
call
or
pop
movsb
push
das
xchg
stos
test
mov
insl
jns
adcl
enter
dec
jae
shrb
jb
or
mov
call
jns
jo
pop
hlt
push
pop
and
nop
or
push
push
cmpl
push
test
in
push
jb
call
sbb
sub
or
adc
in
push
je
aaa
sarb
mov
jmp
insl
clc
insl
nop
jl
and
sbb
jne
in
sbb
pop
push
call
cmp
and
push
gs
nop
adc
testb
adc
movsb
flds
insl
inc
push
dec
add
and
dec
xchg
push
inc
inc
leave
push
pop
xchg
popf
xchg
je
jbe
or
inc
outsl
inc
hlt
push
or
add
popf
push
call
mov
xor
push
in
ficoms
je
add
jmp
fs
jmp
movsb
mov
pop
add
ljmp
ds
iret
ror
call
movsl
data16
pop
negb
xor
out
jmp
fnstsw
dec
fstl
mov
inc
enter
xchg
dec
inc
fiaddl
sub
lds
adc
ret
jb
adc
push
push
push
int
out
mov
add
cmp
push
cltd
fs
add
dec
or
iret
nop
pop
xorl
popf
dec
mov
or
push
push
test
inc
dec
imul
jno
dec
cmpsl
lea
leave
xorl
xor
pop
sbb
in
pop
stos
fisttps
aam
loopne
das
mov
xchg
loopne
mov
jo
test
sub
mov
jo
pop
mov
dec
movsl
pop
stos
test
int
cmp
subl
ss
jo
std
dec
or
dec
cmpsb
sarb
mov
mov
and
hlt
stos
adc
xor
dec
lods
sbb
mov
xor
inc
add
icebp
add
dec
out
dec
stos
lods
push
dec
std
xchg
sbb
in
aaa
add
adc
cltd
fsubs
shlb
mov
mov
xor
or
inc
fisttpll
adc
or
or
aam
cltd
test
adc
and
in
xchg
shr
sahf
in
dec
nop
sub
jo
cmp
pop
sub
pop
add
push
inc
cs
daa
or
and
mov
inc
mov
mov
popf
mov
jmp
add
adc
mov
xor
pop
int
adc
test
and
enter
mov
push
enter
add
sbb
inc
addb
dec
mov
mov
sub
or
loop
lods
cmp
subb
mov
dec
mov
shlb
xchg
fs
and
movsb
xor
and
mov
dec
fmuls
mov
imul
loope
mov
and
inc
enter
push
ja
dec
cs
xor
inc
inc
ss
ds
in
sub
out
adc
pusha
push
add
inc
and
fs
mov
sarb
mov
sub
or
bound
or
stc
xchg
cmp
adc
sbb
jne
inc
push
and
jnp
pop
rol
rclb
dec
mov
add
dec
push
inc
adc
xor
cmp
xor
add
adc
sub
mov
je
xchg
popf
popf
push
imul
cwtl
jmp
xchg
test
addb
xor
pusha
xchg
inc
xchg
or
push
adc
push
lock
add
add
sub
push
incl
inc
push
in
out
adc
loope
mov
mov
add
lods
imul
and
test
jne
adc
in
push
fcomps
push
enter
inc
scas
inc
adc
out
cld
test
mov
adc
mov
cmp
cwtl
rorl
test
icebp
xchg
mov
inc
pusha
in
mov
data16
add
and
xchg
inc
or
sbb
into
je
lock
mov
inc
xor
mov
and
jmp
add
fst
cmc
cwtl
call
adc
push
scas
das
inc
ja
aam
fs
or
insl
sub
lds
jno
fscale
loop
inc
dec
fadd
fdivrl
sub
fcoms
popa
and
imul
stos
adc
adc
aad
inc
pop
lret
adc
fdivrs
nop
or
inc
dec
mov
fldl
lods
adc
popa
rclb
adcb
jg
dec
inc
movsl
rorl
orl
inc
xor
shlb
adc
pop
adc
xor
push
push
push
repnz
shl
inc
cmpsb
enter
fcmove
adc
lods
inc
out
out
xor
and
pop
sbb
pusha
aam
push
pop
inc
push
lds
in
inc
jne
or
icebp
call
sbb
inc
and
xchg
cmpsb
fmul
sub
inc
adc
sub
mov
clc
out
push
enter
push
imul
std
inc
push
mov
push
rol
lcall
pop
mov
in
aas
mov
adc
xor
inc
jb
repz
push
adc
and
mov
sahf
mov
jns,pn
out
ds
inc
popa
lea
mov
sti
stos
pop
nop
adcl
mov
ds
add
cmp
movsl
jae
cmpsb
ss
push
jnp
xorl
jnp
cmp
shrb
pop
mov
cmpl
jno
stos
inc
dec
sbb
pop
bound
add
and
push
cltd
adc
rcr
cmpsb
stos
lods
jnp
adc
sbb
inc
pushf
test
sbb
or
fdivrs
pop
jns
xchg
xlat
xchg
sub
mov
mov
add
and
mov
sub
jp
cmp
inc
mov
pop
jo
in
pop
hlt
test
ss
lret
cmc
outsl
int3
dec
les
pop
bound
inc
iret
jmp
inc
pop
pop
inc
pop
jle
xchg
or
fsubl
in
dec
clc
cmp
cmp
add
fstpl
push
rcrl
pop
push
call
or
mov
jnp
xorl
push
add
and
out
pop
pop
call
or
mov
mov
sub
stc
test
pop
popf
sarb
mov
dec
sti
ret
mov
and
mov
cld
jmp
cmp
icebp
dec
mov
dec
lea
push
cmp
test
ret
inc
idivl
aam
add
mov
movsb
inc
mov
fdivrs
ret
and
xor
cmpl
es
lods
aaa
out
cmp
xchg
ret
out
aaa
mov
push
add
enter
jmp
or
and
inc
movsl
sbb
out
add
mov
or
popf
rclb
pop
and
std
clc
loope
and
sub
jbe
das
or
push
pop
xchg
pop
jnp
out
push
hlt
out
nop
sbb
pop
repz
jne
bound
push
sbb
push
ds
inc
loop
adc
cmp
cld
xchg
inc
mov
ss
adc
push
cmp
lock
fiaddl
jbe
xor
inc
xor
mov
add
mov
cmp
out
xor
xor
ja
cmc
push
xchg
pop
das
or
jl
inc
movsl
add
xor
nop
insb
jmp
sub
into
test
rorl
loopne
arpl
subb
mov
mov
dec
fists
add
enter
xor
dec
jae
rorb
inc
in
mov
add
out
add
jl
push
sbb
push
dec
jb
pop
or
rclb
xchg
pop
xchg
imul
or
repz
sub
cmc
mov
add
inc
pop
pop
sbb
rcrb
lock
lods
bound
daa
loope
or
inc
push
hlt
or
scas
wbinvd
push
adc
jo
fwait
adc
into
js
testl
outsb
mov
loop
or
add
adc
test
int3
call
aam
movsl
mov
dec
pusha
mov
pusha
pop
xchg
xor
cmovs
arpl
je
popa
xor
xor
and
or
inc
xor
aaa
push
add
adc
or
test
lods
jb
dec
push
shll
imul
mull
lock
xchg
add
sub
bound
jle
xor
fldcw
mov
adc
filds
lock
enter
xchg
add
test
or
insb
push
sub
repz
xor
mov
sahf
mov
xor
and
xchg
pop
xlat
fidivl
popa
sub
and
push
test
and
xor
iret
mov
xor
xorb
movsb
xor
push
sub
xchg
inc
inc
adc
adc
cmp
or
jecxz
mov
xor
in
and
call
adc
push
and
repnz
cwtl
lret
lds
cld
inc
mov
adc
nop
leave
pusha
fsubs
popf
and
nop
nop
aam
shlb
xchg
int3
enter
adc
ret
cmpsb
loop
shlb
nop
sbb
shlb
mov
das
dec
test
sbb
pop
jge
lods
push
movb
cmp
sub
gs
xor
adc
and
mov
movsl
jae
icebp
add
test
test
cltd
cmp
sbb
mul
sub
lods
stos
leave
les
mov
sti
add
xchg
lcall
xchg
ret
adc
ljmp
jno
sub
mov
or
aaa
mov
mov
ss
sub
int
repz
movsl
insb
test
out
dec
push
call
call
loopne
xchg
arpl
dec
sub
daa
lock
ss
sub
dec
in
dec
ja
ret
fs
test
xchg
sub
les
in
jbe
bound
je
or
push
inc
inc
mov
pop
inc
xor
stos
mov
sbb
out
dec
imulb
or
xchg
xor
push
push
jmp
ja
mulb
adc
aam
push
pop
pushf
movsb
inc
xchg
test
movsb
mov
cmp
jno
xor
pop
cmp
aam
dec
cmp
xor
ss
xchg
icebp
push
jp
add
mov
inc
mov
xor
jnp
sti
mov
dec
mov
adc
sbb
push
mov
jno
icebp
adc
lods
scas
xchg
lret
pusha
loopne
cld
cmc
lahf
bound
sbb
sub
mov
sub
ret
sbb
lods
xor
push
push
add
bswap
shr
sub
into
leave
orl
enter
in
xchg
shll
mov
testl
dec
dec
in
sub
jno
fbld
sub
inc
inc
sub
sbb
mov
adcb
inc
scas
orb
popa
sti
sub
popa
nop
or
xor
cmp
movsb
jecxz
ljmp
lods
pop
xor
shr
iret
adcb
test
adcb
add
mov
xchg
inc
std
push
imul
pop
daa
mov
or
jmp
add
clc
push
xchg
push
adc
add
inc
popa
sti
movsl
mov
pusha
sbb
xchg
cmp
sahf
test
xor
add
add
xchg
idiv
nop
mov
popf
and
mov
sub
add
inc
inc
dec
ret
sahf
lds
in
and
jnp
push
add
jnp
and
mov
out
and
pop
add
fisubl
das
and
and
mov
stos
mov
lods
pop
xchg
popa
xchg
push
jl
push
xchg
fs
fldcw
in
jne
stos
movsb
jnp
imul
faddl
addb
roll
or
add
lahf
aad
and
ja
and
and
cmp
mov
and
andl
pushf
or
dec
mov
and
inc
and
pop
jecxz
popa
mov
mov
push
mov
aad
icebp
or
jbe
inc
push
lds
adc
rcll
xchg
mov
dec
or
aas
mov
adc
push
dec
adc
int
push
fadd
int
int
aam
les
rorb
add
call
pop
mov
jo
push
fs
and
inc
lcall
sub
repnz
inc
dec
and
nop
insl
nop
push
bound
mov
les
mov
nop
jnp
adc
add
mov
mov
add
fwait
xor
add
or
dec
int3
adcl
xchg
sub
xlat
in
or
scas
lds
add
adcl
pop
pusha
gs
push
dec
push
in
cmp
pop
ret
adc
jnp
shrl
scas
clc
adc
and
push
adc
fiadds
sbb
mov
adc
inc
rol
or
cmp
inc
adc
push
and
mov
add
add
out
pop
adc
dec
push
push
int3
stc
fidivs
add
and
dec
mov
mov
lock
pushf
push
xchg
sbb
pushf
nop
pop
bnd
sbb
clc
dec
or
xor
nop
cmc
pop
jo
leave
mov
js
or
inc
and
push
movsb
shl
test
or
dec
xchg
std
loop
inc
enter
sbb
sbb
adc
inc
sub
xchg
sbb
and
dec
imul
inc
sub
mov
mov
or
mov
cmp
add
enter
or
or
sbb
fsubrl
mov
push
push
ss
mov
pop
addb
repnz
adc
push
mov
and
adc
xlat
dec
add
or
push
pop
adc
clc
out
or
sbb
movsb
mov
add
push
dec
out
and
jp
mov
mov
push
outsl
adc
clc
popl
cmp
mov
add
push
adcl
sbb
frstor
adc
dec
jb
mov
lods
fs
push
push
nop
xor
jae
daa
adc
adc
sub
and
inc
ja
dec
pop
pop
sub
inc
jmp
jecxz
lret
add
clc
add
or
sub
hlt
test
cmc
jl
dec
jbe
ret
ror
inc
hlt
cld
arpl
cwtl
adc
rcrl
or
outsl
mov
dec
es
and
jno
adc
xchg
ret
cld
adc
andl
jmp
push
leave
adc
pop
mov
cmpl
test
add
sarl
push
sbb
imul
lds
cwtl
push
nop
lea
xchg
add
xchg
or
pop
movsl
orb
in
cmp
push
mov
xchg
inc
xchg
cmp
pop
sarb
movsl
cs
inc
jo
pop
adc
or
clc
lock
add
adc
cmp
dec
mov
pop
xor
enter
sbb
xor
arpl
jmp
jecxz
and
test
cld
and
sarl
adc
arpl
out
filds
pop
adc
adc
adc
xchg
adc
jmp
and
addr16
xchg
pop
adc
jecxz
ficoml
cmc
outsb
pop
jb
and
out
data16
lret
dec
lret
loop
cmp
add
sbbl
pushf
dec
adc
add
sbb
inc
test
and
outsl
mov
jmp
cmp
add
fs
or
or
into
shr
jo
lods
cwtl
jl
xor
and
mov
cli
and
js
adc
movsb
push
adcl
add
inc
push
xchg
ljmp
test
xchg
xorl
mov
ljmp
push
push
cmp
fwait
in
inc
sub
test
aas
inc
dec
and
xor
pop
pop
adc
or
cmp
lea
mov
or
lock
adc
hlt
mov
hlt
jns
jmp
repnz
popf
dec
rolb
add
jl
lods
hlt
adc
mov
mov
stc
xchg
add
nop
xchg
test
push
mov
pusha
cmp
outsl
hlt
popf
lret
xchg
popa
lea
test
movsb
loopne
fsubs
push
enter
mov
iret
pop
pop
push
xor
xchg
push
mov
push
xchg
sbb
fldcw
fs
imul
movsb
inc
pop
sub
aaa
inc
mov
xchg
xor
gs
fdivrl
or
daa
hlt
popf
sub
and
sahf
dec
sub
daa
xlat
pop
pop
or
xor
dec
nop
nop
xor
cmp
btr
popa
stc
mov
xor
mov
daa
mov
push
adc
or
fistl
cmp
sub
call
and
lock
decl
xorb
or
pop
ret
push
inc
sub
test
or
imul
dec
push
jmp
add
adc
test
push
aam
sub
pusha
cld
inc
flds
adc
dec
mov
and
cmpsb
push
and
enter
jns
cs
pop
fwait
mov
and
cwtl
push
jge
cmpsb
pushf
push
test
movsl
rcll
data16
rcrb
sbb
cmp
je
loop
sbb
rorb
pop
jbe
hlt
push
sbb
pop
push
dec
or
push
jb
sbb
xor
arpl
adc
or
aad
cmp
sbb
add
sahf
or
push
add
jno
jp
stos
ficoml
cmp
push
stos
ficoms
hlt
andl
mov
add
inc
lret
sbb
enter
pushf
dec
sbb
inc
dec
and
test
sbbb
cmp
pushf
and
stos
cmpsb
jnp
mov
mov
and
call
call
xor
inc
push
data16
push
xchg
inc
or
mov
add
fwait
sbb
dec
and
pop
dec
jo
jbe
cli
pop
and
lcall
mov
loopne
shlb
or
mov
rcll
mov
fwait
and
cmp
xchg
fwait
movsl
pop
xchg
or
jle
orl
imul
rol
xor
je
dec
enter
cs
mov
movsb
push
lods
mov
ds
je
xchg
fbstp
and
rcrl
sub
imul
or
jns
xchg
or
inc
xor
stos
loop
inc
nop
mov
or
aaa
dec
sub
in
je
pop
fsubl
test
mov
mov
cli
pop
test
jp
push
xchg
adc
pop
add
and
out
pop
fs
inc
push
add
sub
nop
inc
ret
popf
pop
adc
xchg
insl
call
sub
dec
in
sahf
xor
jecxz
inc
fidivrl
inc
or
dec
dec
mov
lret
cmp
cmp
xor
in
or
push
xchg
inc
cs
sub
and
lret
and
push
and
push
xchg
test
xchg
std
inc
adc
push
mov
xchg
or
cmp
and
ljmp
test
rolb
fsubr
jne
push
call
mov
inc
mov
push
test
inc
and
lds
lret
mov
jnp
mov
nop
aaa
xor
push
jns
pinsrw
pop
pop
in
ret
cmp
and
pop
pop
add
jmp
jle
xchg
dec
adc
add
add
mov
in
add
or
or
roll
call
jne
xor
xchg
inc
add
movsb
push
in
out
daa
push
mov
lahf
lret
inc
push
mov
cmp
stc
and
jnp
add
imul
popf
cmp
dec
iret
mov
pop
inc
dec
movsl
add
sub
mov
aam
push
mov
or
addl
mov
in
jge
add
enter
cmp
cmp
push
aas
pop
push
andl
mov
ljmp
nop
inc
push
xor
push
and
add
cmp
aam
and
push
add
push
pop
mov
sub
lods
pop
es
andl
shrl
xor
in
jle
icebp
ret
mov
adc
push
lea
xorb
out
data16
scas
and
pop
ret
call
mov
call
je
mov
iret
or
fcomps
add
add
mov
jne
repnz
sbbb
xlat
out
or
add
sub
or
jo
or
pop
dec
inc
inc
and
in
pop
fs
or
push
cmp
movsb
dec
cmp
loope
dec
sub
dec
add
sbb
pop
xchg
and
test
gs
cwtl
mov
push
jno
cmp
mov
cmp
sbb
inc
jne
cmp
je
sbb
cmp
bound
movsb
dec
cmp
daa
inc
bound
cmp
mov
repnz
inc
repnz
out
lret
cmpb
les
dec
stc
dec
lock
jno
push
and
les
dec
and
push
stc
icebp
cwtl
out
and
xchg
stc
pop
sub
jb
jge
fstl
inc
add
cltd
or
push
xchg
stc
les
add
sub
fnstcw
add
and
push
inc
xchg
xor
sub
ja
stc
das
dec
sbb
mov
xchg
adc
cmpsb
sub
ja
inc
stc
mov
mov
mov
popa
mov
pop
lock
repnz
jbe
getsec
shl
xlat
push
jnp
and
fchs
and
test
sbb
mov
mov
test
push
fists
call
or
out
pop
fdiv
lea
push
mov
fld1
es
add
xchg
pop
mov
out
cs
movsb
inc
sbb
push
insl
xor
xchg
cli
aam
push
imul
xchg
jne
popf
jne
leave
mov
jo
addb
fiaddl
das
jle
scas
test
and
adc
xchg
inc
pop
ret
incb
pop
push
mov
dec
sbb
adc
fcoms
fsubrs
inc
pusha
dec
loope
xchg
sub
out
adc
ret
scas
pop
orl
mov
mov
sub
pop
adc
pop
rolb
or
push
push
stc
lcall
jbe
add
movl
les
xchg
lcall
push
sbb
push
push
and
fmuls
xor
adc
and
adc
mov
movsb
dec
cltd
mov
in
or
addl
pop
sub
xchg
push
ds
dec
push
add
push
in
test
push
and
push
and
mov
adc
adc
add
push
pop
and
inc
mov
jl
fsubl
mov
dec
pop
sbb
mov
outsb
and
push
add
hlt
mov
push
cwtl
adc
adc
sbb
aas
add
les
mov
push
push
adc
xchg
inc
loop
jns
test
adc
dec
fadds
and
stos
jns
js
xchg
inc
jns
jno
dec
and
add
mov
and
dec
push
push
adc
test
jns
dec
sub
punpcklbw
lea
stos
jns
repnz
push
adc
jns
xchg
dec
fcompl
xchg
dec
fadds
lds
mov
dec
test
jns
adc
or
pop
mov
inc
cltd
mov
xchg
dec
cltd
and
loop
mov
out
fsubs
cltd
sbb
jmp
and
and
mov
cmp
fwait
shlb
mov
dec
and
mov
inc
adc
and
mov
lods
js
ja
dec
and
cltd
iret
mov
adc
mov
inc
cltd
stos
pop
loopne
xchg
cltd
aad
pushf
andb
mov
test
call
shl
sbb
mov
push
mov
add
inc
and
mov
xorb
movsb
and
add
pusha
orb
lahf
or
rcll
es
repnz
xchg
sbb
jns
inc
bound
les
or
test
add
xchg
addl
add
and
sbb
or
inc
add
jp
sub
popa
ljmp
or
xchg
xor
add
andl
adc
add
inc
mov
cmp
adc
pop
insb
sub
xor
jo
xchg
movb
out
add
lret
nop
pop
daa
rcrl
mov
les
jle
or
lock
add
inc
mov
xlat
sbb
sub
fadd
fistpll
repz
je
inc
mov
imul
push
push
mov
fistps
mov
jg
daa
sbb
pop
lret
rcpps
sub
adc
add
ds
add
mov
add
mov
scas
jg
sahf
mov
mov
mov
mov
push
mov
dec
rol
repnz
rorb
or
jae
sbb
jmp
pop
or
sbb
and
mov
loop
aaa
add
push
mov
pop
sub
push
jo
fdivrl
cwtl
inc
incl
cmp
push
cmp
sbbb
add
mov
test
movsl
movl
ds
dec
cmp
jmp
and
inc
ret
mov
scas
cmpb
cltd
nop
inc
rolb
inc
sub
xor
mov
mov
add
fcoms
inc
loop
cmp
and
imul
pop
add
or
test
mov
and
mov
scas
loop
dec
cmp
push
adc
pop
push
inc
add
inc
cmp
mov
push
imul
jae
mov
add
cmp
les
pop
adc
add
cmp
push
repz
xor
cmp
push
ljmp
inc
loop
cmp
cmp
mov
lds
cmp
icebp
inc
sub
push
or
addb
gs
push
mov
loopne
rorb
cmp
add
test
mov
std
insl
nop
fcomps
mov
loop
cmp
cmp
mov
cs
adc
les
push
cmp
and
mov
cmp
js
faddl
or
movsl
ret
insl
nop
mov
insl
nop
xor
pop
addl
cmp
es
out
inc
loop
and
call
add
test
pop
add
inc
push
inc
jmp
nop
cmp
add
movl
fldl
mov
xor
add
lods
sbb
stos
cmp
nop
sbb
push
xchg
lds
xchg
bndldx
mov
test
nop
jo
loope
les
push
mov
and
cmp
addb
push
or
loop
dec
fdivl
mov
cli
fdivrl
icebp
movsb
or
cmp
nop
cmp
sub
stos
stc
aad
nop
js
cmp
mov
add
mov
mov
loopne
dec
or
cmp
dec
or
lea
fwait
call
mov
test
ret
xorl
add
mov
bound
inc
cmp
xor
aam
or
mov
subl
shrl
cmp
push
fldl
mov
test
add
insl
nop
cmp
nop
add
mov
nop
mov
and
pop
adc
and
push
pop
and
push
push
js
jl
add
push
push
add
push
js
call
adc
gs
clc
orl
dec
mov
adc
mov
sub
push
and
inc
mov
loop
or
into
xchg
mov
add
add
add
jne
and
addr16
test
jo
popa
scas
sub
mov
pop
cs
push
add
dec
adc
loop
sbb
jno
xchg
lea
enter
pop
xor
movb
dec
fcoml
pop
lcall
out
cwtl
out
push
cmc
cld
pushf
adc
jnp
mov
push
loopne
ja
imulb
ret
or
pop
rolb
je
loop
fldenv
mov
fstps
loop
fldenv
test
fldenv
jno
ljmp
fnstenv
loop
ljmp
push
nop
dec
mov
add
inc
inc
test
add
adc
gs
sbb
xchg
jnp
lcall
nop
adc
aaa
rcr
mov
adc
fldenv
mov
and
mov
lahf
xchg
adc
loope
add
jns
xchg
jno
mov
pop
adc
jg
and
aaa
rorl
push
cmp
cmpb
cmp
and
les
push
sbb
sbb
insl
nop
sbb
adc
and
clc
sbb
push
or
xchg
xchg
sbb
fcompl
inc
call
push
insl
nop
sbb
or
push
mov
adc
stos
sbb
ret
loop
sbb
push
sbb
push
test
nop
xor
leave
push
sbb
punpckhdq
jmp
and
outsb
and
aas
sahf
mov
push
leave
test
fidivrs
add
add
mov
sbb
dec
sbb
test
and
out
ss
cwtl
je
sbb
mov
mov
mulb
xorb
stos
or
cmpsb
fisubl
sbb
sbb
ret
xlat
aad
fsubs
cmp
dec
fmuls
arpl
push
dec
sbb
sbb
dec
fsubrs
xchg
pusha
mov
fmuls
push
sbb
mov
mov
ss
sbb
sbb
push
sbb
les
mov
mov
int3
cmpsb
push
sbb
push
les
and
cmp
lock
xchg
dec
and
inc
sbb
nop
sbb
rclb
js
dec
adc
mov
adc
mov
in
add
push
sbb
push
stc
push
sbb
jmp
add
nop
xor
and
sub
dec
inc
insl
sbb
pop
outsb
stos
or
cmp
push
rclb
or
inc
insl
nop
sbb
and
aad
mov
leave
push
add
inc
ret
jg
pop
xchg
pop
fwait
lahf
or
dec
cmp
and
clc
les
and
popa
daa
push
sbb
sbb
addl
mov
loop
setl
rolb
scas
add
sbb
sbb
mov
mov
mov
sbb
pushf
sbb
cmp
lds
push
jno
ss
pushf
and
and
xor
shll
add
sbb
xchg
test
sbb
push
mov
loope
into
sbb
sahf
subps
add
imul
sbb
inc
insl
adc
jl
inc
mov
fisubs
xor
add
and
mov
pop
adc
sbb
and
dec
fsubrl
mov
xor
cs
pop
and
and
inc
loop
sbb
sbb
and
jle
sbb
dec
sbb
push
pop
adc
addr16
push
sbb
cs
adc
jnp
mov
loop
sub
dec
aam
or
xchg
push
scas
fisubl
loope
sbb
dec
push
push
push
xor
sbb
push
push
sbb
inc
insl
nop
clc
in
sbb
push
mov
call
dec
dec
inc
sbb
lods
inc
mov
aad
sbb
and
inc
push
push
push
sbb
daa
and
jnp
frstor
test
mov
cmp
and
mov
push
sbb
sbb
sbb
stos
inc
test
aam
popa
pop
push
sbb
addr16
push
sbb
sbb
add
inc
loop
sbb
and
adc
or
sbb
repnz
jbe
cltd
xchg
jle
popa
mov
jbe
jno
in
inc
or
sbb
sbb
stos
ss
cs
test
cmp
xchg
inc
mov
loop
sbb
fisubl
jno
sbb
jb
pop
sarb
adc
cs
fadds
test
pop
test
ss
mov
sbb
das
test
dec
sbb
shlb
sbb
cmp
mov
mov
nopl
sbb
jl
xor
mov
mov
push
mov
xchg
inc
bound
mov
inc
inc
les
inc
loop
inc
adc
repnz
mov
mov
test
jo
push
insl
sbb
dec
push
insl
nop
sbb
mov
inc
add
sbb
inc
inc
insl
sbb
ficompl
sbb
inc
insl
nop
jo
sbb
cli
sbb
and
test
nop
cmp
pop
in
cmp
int3
cmpb
dec
aad
sbb
sbbl
push
push
movsb
mov
daa
xchg
adc
push
sbb
test
add
ss
cmp
push
fs
and
mov
nop
mov
and
add
dec
je
sbb
call
or
in
addl
sbb
insb
add
push
or
imul
jnp
jns
lahf
mov
adc
aad
mov
nop
mov
dec
or
dec
sbb
or
scas
push
inc
sbb
push
push
xchg
sub
mov
int
add
nop
pop
xor
mov
pop
jmp
push
pop
push
jmp
push
sbb
pop
call
jns
ja
icebp
adc
sbb
sbb
inc
insl
nop
adc
mov
insb
add
xor
leave
add
push
cmp
push
insl
nop
cwtl
sbb
aaa
test
pop
mov
or
pop
es
sbb
adc
push
or
xchg
lret
add
lret
add
in
jl
insb
mov
push
and
into
fisttpll
jno
or
fcmovnb
adc
pop
notb
aad
or
aaa
xchg
and
sbb
or
dec
enter
dec
push
sbb
sub
add
leave
adc
out
push
inc
insl
nop
sbb
iret
adc
inc
loop
sbb
pop
push
jmp
jb
mov
push
call
add
sbb
dec
pop
inc
mov
add
jno
add
sti
into
ret
or
jl
push
adc
push
push
sbb
push
test
adc
sbb
pop
mov
or
lahf
add
adc
pop
push
sbb
js
push
inc
nop
je
insl
sbb
fisubl
loope
sbb
stos
fisubl
mov
insl
nop
dec
mov
push
push
mov
push
pop
aad
xchg
push
sbb
cmp
cmp
aam
sbb
and
add
orb
push
les
stos
add
pop
in
add
push
lea
rcll
aam
or
jmp
ss
mov
mov
sbb
sbb
mov
sbb
test
xchg
aas
test
adc
push
mov
mov
insb
mov
js
mov
roll
xor
xlat
or
repz
or
das
bound
xor
pop
mov
loopne
sbb
aaa
popa
iret
sarl
fwait
adc
pusha
scas
iret
sahf
cmpsl
stc
cmp
rdpmc
pop
jle
push
les
sbb
ss
adc
sbb
push
mov
aam
idivb
sarl
cmp
stc
cmp
repz
fldln2
add
jns
cmpsl
adc
xchg
sub
lret
js
stc
push
sbb
test
or
or
out
inc
mov
jb
add
sbb
testl
push
sbb
insl
sbb
fldt
sbb
xchg
ficoms
fsubs
xchg
test
sbb
sub
ja
sbb
dec
test
add
pop
adc
and
push
push
pushf
or
ficoms
icebp
sbb
xor
push
lods
dec
out
xchg
lret
insl
mov
sbb
pop
loope
push
mov
and
add
adcb
jns
icebp
pushf
jl
sbb
xchg
xor
cwtl
clc
xchg
or
lahf
xor
jmp
mov
insl
nop
clc
lock
aaa
ret
inc
sbb
into
arpl
push
stos
or
pop
insl
nop
js
sbb
nop
lock
sbb
adc
rolb
fldt
push
push
les
aam
mov
inc
adc
je
and
sub
adc
adc
aam
or
test
xlat
popa
dec
push
les
push
pop
sbb
ret
nop
pop
mov
leave
push
imul
ss
sbb
pop
iret
and
pop
sbb
dec
sbb
out
in
push
mov
ret
push
sbb
and
sbb
add
and
dec
fnstenv
enter
cmp
ficompl
addw
mov
into
inc
inc
jno
fldenv
inc
mov
lahf
dec
inc
jne
fnstcw
or
or
xchg
insb
fsts
cwtl
or
or
push
rorl
frstor
sbb
push
cwtl
cmp
dec
les
test
std
add
paddb
inc
inc
cmc
cwtl
push
adc
fldenv
popa
sbb
out
pop
or
adc
stos
dec
add
dec
pushf
push
lahf
shlb
cmpsl
push
repnz
push
jne
xor
fstps
xchg
add
repz
or
and
push
int3
push
flds
push
cwtl
or
sub
inc
shrl
adc
mov
mov
dec
mov
fsts
loopne
sbb
aad
nop
push
push
fldenv
dec
fdivrl
and
or
test
sbb
adc
push
fnstcw
int
or
in
insb
nop
js
fxch
push
mov
sbb
stos
icebp
mov
mov
and
and
negb
dec
cli
sahf
dec
sbb
sbb
jg
hlt
inc
push
nop
dec
call
in
cmpsb
mov
cmp
push
mov
addw
cmp
inc
dec
pop
les
fstps
dec
mov
mov
imul
fld1
xor
and
lret
dec
sbb
pop
add
dec
loope
pop
lea
data16
adc
push
or
sub
fldenv
jno
fldenv
les
fldenv
jno
lret
sbb
mov
sub
mov
fsin
add
inc
inc
rcr
push
or
aam
int3
fnstenv
dec
or
xchg
xor
fwait
cwtl
push
sub
sbb
loope
add
fldcw
sbb
jnp
stos
sub
mov
add
inc
adc
mov
add
sahf
lds
xorl
mov
fnstenv
mov
inc
bound
fldcw
fldenv
je
jo
sbb
repz
push
or
mov
xor
xor
mov
fsqrt
into
mov
cmp
xor
and
lock
repz
or
test
push
int3
fcos
jbe
xchg
fnstcw
fldenv
popa
ljmp
sbb
add
repnz
fldenv
and
xchg
push
and
out
xor
add
push
adc
push
mov
bound
dec
mov
mov
push
cwtl
fnstenv
dec
mov
pushf
push
mov
push
addw
movl
sbb
inc
or
cwtl
or
fsubrl
sbb
inc
jbe
ss
fsts
mov
cwtl
lcall
and
pop
mov
fsts
enter
mov
jle
pop
stos
insb
nop
fnstenv
or
fidivl
into
lret
mov
in
mov
adc
pop
ds
jnp
xchg
or
add
push
inc
mov
mov
pop
les
jbe
mov
sahf
sbb
pop
add
mov
lcall
leave
lgs
fs
fwait
mov
xor
das
xchg
add
int3
lahf
inc
insl
nop
pop
stc
cmp
sbb
sarb
cmpl
andb
sbb
shl
or
sbb
in
lock
cmp
push
stc
cmp
aam
stc
xor
sbb
push
aam
stc
pop
clc
and
adc
addl
mov
lds
aas
and
and
ds
test
stc
pop
movsl
loop
sbb
jo
fisubl
stc
xor
mov
loop
stc
push
sbb
xor
cmp
cmpsl
cmp
stos
or
push
aad
stc
xchg
push
mov
cmc
pop
outsb
mov
and
push
sbb
aad
mov
xor
stc
push
mov
push
les
movsb
jns
call
or
stc
inc
insl
nop
jo
stc
popf
imul
das
push
or
xor
add
or
inc
push
les
stc
fisubl
popa
adc
stos
stc
test
jno
sub
inc
aam
test
inc
adc
add
push
mov
inc
push
insl
nop
mov
push
stc
mov
add
call
push
pop
adc
mov
mov
sub
dec
sub
mov
mov
bound
fwait
in
pop
loopne
dec
pushf
or
stc
hlt
movsb
loopne
mov
adc
mov
push
push
stc
dec
and
inc
mov
stc
loopne
data16
sbb
sbb
stos
or
adc
dec
jl
dec
lahf
stos
sbb
mov
xchg
stos
or
aad
mov
jle
stc
push
les
inc
loop
push
sub
insl
nop
mov
dec
cmpsl
js
stc
adc
xchg
pop
inc
add
iret
leave
jb
notb
add
mov
and
adc
mov
add
inc
push
and
push
xor
mov
xchg
mov
adc
pop
fwait
call
pop
test
sbb
dec
sbb
and
xchg
loopne
stc
sbb
xchg
andl
push
inc
dec
nop
sbb
cmpsb
sbb
jg
mov
nop
xor
xchg
add
les
or
arpl
nop
inc
add
adc
les
mov
and
push
add
pusha
mov
sarl
add
repz
repz
shll
mov
pop
aas
sbb
pop
or
pop
shlb
mov
nop
push
pop
movsb
out
faddp
sbb
sub
push
xor
adc
push
mov
cmp
xchg
mov
fldenv
js
mov
fldcw
and
push
and
add
pop
xor
fabs
mov
sub
adc
fs
divl
sub
push
mov
fnstcw
mov
mov
mov
push
mov
pop
orb
mov
jl
xchg
dec
adc
dec
nop
flds
loopne
dec
nop
js
rorl
jg
cmp
sub
mov
add
push
fnstcw
rclb
js
adc
fs
mov
and
mov
and
sbb
mov
test
fsts
inc
arpl
scas
es
xchg
push
xor
and
adc
or
mov
and
in
inc
loop
adc
or
and
push
and
daa
and
lahf
inc
addb
mov
fld
xor
or
fstps
xchg
and
sbb
and
mov
fldenv
sbb
dec
cwtl
xor
pusha
fxch
mov
push
das
add
mov
add
sbb
sarl
fnstcw
push
push
jns
adc
test
or
and
or
push
in
xor
and
xor
jecxz
pushf
xchg
mov
stc
dec
pop
and
fxch
or
inc
dec
cmp
add
sbb
mov
inc
lea
hlt
sub
sbb
adc
test
cltd
and
jne
pop
test
test
mov
push
push
test
sbb
push
or
pushf
call
sbb
fstps
out
push
repnz
jmp
mov
xchg
and
xchg
dec
push
cmp
loope
adc
xor
lods
mov
sarl
jne
je
xor
loopne,pn
xchg
and
and
inc
add
flds
cmp
mov
fstps
dec
rcll
sub
fldenv
nop
sbb
push
dec
fldcw
jg
insl
adc
cltd
iret
mov
rcr
or
aaa
sub
fldcw
fisubrs
sbb
push
mov
sbb
inc
add
jecxz
fldenv
add
call
loop
xlat
and
or
ret
add
add
jo
mov
scas
inc
addb
and
dec
flds
test
jecxz
add
xchg
mov
mov
push
push
out
mov
push
or
dec
fldcw
mov
jne
adc
xor
enter
or
aas
aad
sbb
adc
and
popl
or
push
and
mov
iret
push
fwait
sub
fsts
sbbl
add
inc
and
addb
sub
call
nop
fldcw
pop
cs
adc
pop
xor
iret
lods
or
or
pop
sbb
inc
inc
mov
jp
dec
fadds
add
mov
and
pop
mov
nop
and
dec
xor
flds
aam
inc
sbb
nop
pop
add
orl
xchg
add
in
and
adc
inc
fsts
cmpsl
sbb
adc
jecxz
xor
and
mov
pop
rcll
xchg
test
addb
pop
lea
fldenv
inc
ret
flds
sub
pusha
repz
fmuls
loop,pn
imul
pop
add
int
fldenv
or
fxch
mov
xchg
ja
xchg
and
push
push
or
jno
lea
adc
mov
xor
dec
or
add
inc
and
or
adc
push
fldcw
and
fisubrl
mov
cwtl
cmpsl
test
sub
or
push
and
fsts
push
push
pop
test
aam
and
rol
shl
or
push
inc
mov
je
add
aaa
rcr
pop
mov
out
push
mov
fldcw
and
and
push
call
loop
fstps
push
adc
inc
ret
fsts
inc
or
ja
fldenv
mov
and
mov
adc
pop
sahf
push
xchg
and
in
or
es
pop
jl
mov
dec
fnstenv
and
pop
fldenv
inc
ret
lods
dec
fldenv
inc
loop
jbe
mov
inc
neg
sbb
rorb
das
add
cltd
ret
xchg
and
in
and
fsubrl
addb
addb
nop
mov
dec
cwtl
pop
fmuls
jmp
jno
sbb
inc
mov
jb
les
test
mov
test
push
and
aas
jo
inc
sbb
test
inc
bound
or
pop
mov
cwtl
xchg
outsb
push
or
adc
sub
lea
ja
add
mov
fsts
mov
inc
js
xor
inc
adc
push
push
and
inc
ret
xchg
pop
xchg
xor
push
lea
aaa
dec
outsb
stos
xchg
and
adc
sbb
adc
int
and
les
xchg
ret
and
jb
add
xchg
popf
repz
xchg
and
lea
fxch
sbb
mov
nop
cmp
cltd
add
movsb
push
shlb
dec
jne
pop
or
int3
inc
fnstsw
adc
add
pop
cmpsb
rcr
add
xor
xor
inc
fldcw
xchg
cmp
movsb
cld
addb
push
mov
xchg
shrb
les
and
flds
incb
add
clc
xchg
cmp
dec
fstl
mov
dec
lahf
sbbb
pop
bound
lahf
jno
push
mov
push
test
xchg
and
and
push
les
and
les
repz
sbb
mov
inc
loop
movsl
jmp
and
xchg
and
out
fwait
pop
decb
mov
sub
adc
stos
xchg
and
outsl
sbb
add
dec
or
les
jne
dec
sbb
outsb
adc
inc
mov
mov
les
cmp
mov
inc
dec
sbb
pop
movsb
pop
mov
movsb
enter
dec
repnz
icebp
into
xchg
mov
ret
nop
cmp
pop
fdivr
lret
push
pop
enter
jb
mov
nop
mov
mov
mov
add
mov
xchg
add
jnp
xchg
lret
jns
inc
pop
mov
xchg
sbb
add
je
xchg
test
nop
pop
push
adc
add
mov
movsb
dec
cltd
mov
popa
cltd
jb
jne
stos
test
jns
cmpsl
xor
dec
ret
add
or
adc
cltd
enter
pop
sub
adc
lret
xchg
aaa
mov
pop
inc
rorb
in
xchg
pop
cmp
inc
lret
in
hlt
dec
dec
and
clc
cmp
lahf
in
sbb
inc
enter
push
lds
out
test
scas
inc
xchg
or
push
adc
dec
and
sbb
cltd
mov
je
adc
add
xchg
sbbl
push
xor
mov
and
add
push
xor
add
dec
and
dec
push
dec
cltd
stc
xor
sub
adc
mov
and
lea
in
cltd
adc
mov
and
sub
aas
or
ds
xor
fildl
fsts
pushf
aas
and
xchg
mov
or
sub
les
dec
push
and
les
test
fistpll
test
jmp
add
decb
pushf
test
lahf
xor
push
and
adc
add
push
fnstenv
mov
les
les
pop
ss
orb
lahf
and
ret
jnp
sub
push
pop
jae
sarl
mov
push
leave
mov
jbe,pt
test
add
daa
cmp
inc
sbbl
shlb
xor
incl
and
stc
cmp
test
dec
stc
out
sub
adc
push
stc
adc
or
or
ja
stc
xchg
cmp
mov
stc
xor
and
jge
cmp
insb
movsl
pop
pop
shrl
cmp
mov
xchg
out
test
stc
cwtl
mov
dec
adc
pop
sub
lods
sub
stc
adc
cmp
dec
mov
and
dec
fadds
dec
stc
cltd
mov
pop
je
adc
xchg
and
fsub
jp
test
lds
inc
stc
js
repnz
inc
leave
xchg
mov
inc
push
mov
mov
in
xchg
cld
cld
nop
repnz
add
jb
cmp
jbe
xchg
cmp
js
adc
xor
out
insb
sti
xchg
pop
enter
jns
in
leave
and
xchg
sub
test
or
in
dec
nop
stc
mov
lahf
ltr
cmp
sbb
pushf
mov
popf
or
mov
fs
nop
adc
movsl
sarb
stc
inc
and
adc
pop
adc
add
pop
clc
sbb
sbb
and
and
rclb
addr16
sub
or
cs
scas
cmp
dec
dec
push
in
jmp
pop
pusha
xchg
dec
in
fs
repnz
js
jl
jns
xchg
dec
test
mov
nop
mov
xchg
cwtl
pushf
mov
or
jns
dec
test
mov
lret
and
mov
mov
cmpsb
pop
mov
leave
mov
jb
mov
sbb
adc
mov
ss
or
mov
mov
pop
jno
xchg
and
rcrb
pop
mov
adc
mov
lea
dec
insb
push
cmp
add
enter
nop
pop
mov
popa
mov
pop
sbb
adc
je
mov
and
sub
mov
sbb
adc
inc
bound
pop
adc
pop
ds
rorl
add
pop
dec
addr16
popa
cs
xlat
adc
dec
scas
and
sub
push
xchg
xchg
and
pusha
and
or
pop
push
aas
pop
adc
outsl
orb
test
packssdw
loope
mov
or
adc
mov
pop
pop
and
adc
and
pop
nop
xor
call
rorl
test
or
xor
pop
ret
and
sub
jns
or
push
loopne
and
lock
out
mov
push
jmp
adc
cmp
jl
xchg
and
fyl2xp1
mov
adc
adc
sbbb
sbb
or
popa
iret
pop
add
shll
insl
rolb
xor
dec
mov
and
push
adc
into
and
sbb
sbb
fildl
add
push
xor
and
aas
pop
inc
add
and
adc
mov
xchg
pop
mov
adc
sub
sbbl
inc
add
xor
or
push
popa
pop
lret
sahf
sbb
sbb
js
pusha
sub
add
pop
les
imul
bound
pop
sub
dec
nop
pop
cld
pop
xchg
mov
aad
outsl
mov
and
adc
bound
pop
iret
xchg
aad
nop
mov
adc
cltd
popa
xor
adc
adc
fisubl
dec
nop
pop
lds
sbb
test
jne
inc
pop
and
mov
pop
sbb
adc
in
scas
cld
pop
fdivl
mov
cmp
dec
pop
lods
add
repz
pop
push
mov
push
loope
dec
nop
pop
testb
add
add
push
inc
lods
inc
pop
ret
inc
pop
and
jge
clc
add
dec
pop
inc
add
pop
pop
nop
xor
xor
dec
pop
fdiv
inc
ret
adc
pop
ds
push
xor
pop
or
mov
pop
in
mov
sub
shlb
push
sbb
adc
call
and
add
pusha
and
fsubrl
shlb
pop
in
adc
lds
cmp
adc
aam
mov
sbb
pop
rcrb
pop
nop
sub
imul
sbb
or
ret
aad
rcrb
sahf
mov
pop
movsl
mov
scas
adc
jne
mov
mov
mov
push
jmp
int3
aaa
rclb
fnsave
sti
mov
loopne
out
call
pop
sub
hlt
cli
cld
xor
lahf
mov
mov
or
mov
sub
inc
adc
xor
dec
sbb
cmc
sbb
and
or
xchg
stos
jl
addr16
ss
cmp
jns
popa
movsl
inc
inc
lahf
add
inc
dec
xchg
dec
movsl
jb
push
push
pop
cmp
pop
pop
mov
push
insb
jo
or
fs
fs
adc
sub
test
xchg
dec
imul
mov
mov
push
cs
mov
in
lods
mov
mov
and
inc
sbb
outsl
movsb
push
int3
rcl
aaa
fcomp
mov
in
in
lret
dec
movsl
push
lock
clc
cld
jle
popf
lds
mov
mov
push
test
and
xchg
lret
outsl
and
adc
mov
cmp
cmp
dec
movsl
push
inc
inc
dec
dec
push
sub
pop
pop
push
mov
fs
insb
jo
je
pusha
and
pushf
js
inc
bound
cs
and
out
fwait
sbb
pop
les
inc
mov
icebp
arpl
dec
nop
pop
mov
adc
les
pop
push
inc
addb
sbb
hlt
or
outsb
xor
push
sbb
orb
mov
lahf
out
inc
jno
dec
nop
pop
loopne
or
xchg
and
dec
nop
cmp
jge
fisubrs
and
pop
mov
adc
pusha
pop
xor
movsl
pop
xor
and
cld
mov
addb
test
adc
sahf
pop
jno
xchg
cmp
adc
shr
add
or
xor
adc
bound
jo
adcb
inc
loop
pop
dec
nop
sbb
lock
rcrb
xor
push
lods
dec
jo
push
and
mov
inc
addl
or
and
xchg
push
dec
fcoml
pop
test
in
bound
pop
xchg
mov
sbb
inc
clc
call
in
fstpl
push
push
push
and
mov
dec
pop
rcll
fadds
loopne
enter
inc
addb
and
pop
data16
adc
push
dec
fcoms
js
repnz
cmp
out
and
fs
sub
cmp
add
ret
scas
inc
pop
sbb
loope
imulb
dec
pop
cld
in
mov
in
jle
adc
mov
jp
inc
addb
cmp
int
lods
arpl
das
jnp
dec
mov
sub
jl
shrb
and
cltd
repz
dec
cmp
cmpsl
dec
nop
mov
mov
rcrb
and
mov
adc
push
xor
pop
and
sbb
adc
xchg
and
adc
or
test
rorl
cltd
out
mov
pop
adc
inc
inc
pop
test
cmp
mov
shlb
and
adc
or
xchg
insl
test
pop
push
add
fstl
mov
or
aaa
sbb
and
push
xchg
mov
adc
push
dec
sub
pop
adc
mov
cwtl
xor
and
aas
and
mov
loope
adc
lret
cld
testb
sbbb
push
adc
jo
aaa
jne
shll
add
cmpsl
push
and
sub
es
repnz
loop
push
or
xor
and
inc
and
sub
sahf
stos
test
add
sbbb
pusha
sub
pop
add
inc
into
pop
xchg
loope
push
ds
mov
clc
ja
dec
pop
or
xor
test
call
pop
push
jb
push
jbe
stos
test
popf
pop
and
or
mov
or
andb
adc
push
cmc
std
mov
popf
rolb
push
lods
or
pop
mov
mov
pop
and
inc
or
add
dec
pop
andl
adc
mov
pop
fnstsw
push
or
imul
cwtl
scas
jle
adc
pop
cmp
jno
cmp
out
cmp
pop
adcb
mov
or
test
es
mov
mov
pop
fistpl
rorb
lret
dec
xor
and
lahf
fiadds
lret
stos
fbld
or
mov
jg
inc
popa
push
xchg
inc
sbb
and
dec
pushf
and
lret
sarb
scas
lock
or
or
rcrb
ficoms
dec
sbb
fs
pop
ja
sub
sbb
shll
adc
fdivrp
and
mov
cmp
int3
dec
jl
pop
adc
sbb
inc
stc
and
addb
and
add
inc
and
inc
dec
and
popa
ljmp
push
adc
or
icebp
inc
addr16
adc
add
ja
mov
push
or
enter
inc
ret
into
sub
add
jnp
jae
enter
adc
data16
sub
stc
inc
addr16
loope
mov
add
outsb
hlt
stc
add
testb
insl
xchg
addl
or
adc
jo
and
or
nop
dec
pop
add
mov
cmp
addl
pop
inc
and
mov
add
fs
pop
inc
and
punpckhwd
xchg
int3
xchg
adc
or
cmp
add
aad
sbb
and
inc
test
nop
jo
adc
push
dec
fcoml
pop
inc
xor
sub
pop
sub
push
adc
or
or
push
into
pop
mov
inc
sub
imul
jbe
add
inc
jmp
shlb
popa
invd
pop
push
arpl
pop
std
mov
and
add
add
mov
cmp
xor
mov
add
inc
and
sahf
pop
add
stos
mov
or
pop
inc
push
pop
or
es
and
pop
inc
ljmp
adc
and
pop
inc
push
dec
xor
pop
dec
ljmp
and
add
jno
icebp
or
jp
and
addb
xor
adc
pop
and
sbb
nop
push
pop
and
pop
or
int3
dec
cli
enter
and
adc
and
push
pop
leave
sbb
add
std
scas
and
jnp
outsl
int
int
adc
and
sub
pop
dec
jl
pop
fbld
popa
das
adc
inc
pop
sbb
inc
pop
push
dec
cwtl
movsl
push
ret
inc
push
mov
testl
mov
and
adc
pusha
xchg
add
mov
inc
and
xor
pop
inc
loop
add
cmpsl
mov
lret
clc
push
cmc
push
or
pop
fildl
pop
addl
and
aad
lret
jl
sbbb
and
aad
scas
inc
and
inc
pop
push
lods
inc
and
or
rcrb
les
push
les
test
adc
imul
lock
xor
nop
sbb
jle
xchg
or
push
in
adc
and
xor
or
xchg
pop
addl
nop
mov
lret
push
push
add
mov
jnp
add
pop
loope
jns
add
aaa
pop
inc
and
mov
stos
pop
push
fisubl
and
ret
bound
dec
pop
outsl
jns
sub
push
jg
fmull
pop
iret
sbb
adc
pop
pop
lret
adc
jno
inc
js
out
test
and
dec
mov
js
nop
mov
fdivrs
inc
bound
pop
xchg
rcll
pop
push
cmp
add
pop
mov
mov
pop
or
inc
dec
bnd
and
adc
mov
adc
inc
pop
out
jecxz
push
sbb
adc
mov
ljmp
adc
pop
add
or
and
adc
or
inc
std
dec
dec
and
adc
push
adc
mov
cmp
rorl
ljmp
enter
addl
bound
mov
addl
imulb
cltd
add
call
enter
les
or
test
pop
loop
dec
adc
jle
mov
add
rcrl
pop
sbb
add
mov
xlat
lret
or
les
push
and
dec
pop
iret
add
pop
or
add
aam
nop
mov
addl
out
push
mov
pop
cwtl
xor
pop
or
pop
daa
xor
and
bound
sti
and
and
push
icebp
loop
and
out
jns
and
mov
xchg
inc
testb
and
pop
ss
adcl
cwtl
sub
inc
loop
sub
adcb
inc
sbbl
add
mov
xor
or
cmp
adc
idivl
pop
or
pop
mov
rolb
mov
addl
xor
push
add
iret
cli
push
and
xchg
pop
adc
sbbl
add
mov
mov
call
adc
mov
or
cmp
dec
test
xor
dec
dec
inc
es
dec
pop
loope
in
xchg
jo
test
cwtl
test
xchg
lcall
fs
lds
or
add
or
pop
pop
cltd
inc
cs
pop
or
and
mov
dec
cmp
in
xchg
jbe
call
pusha
push
je
test
pushf
lock
add
push
or
adc
and
mov
mov
adc
sbb
lret
dec
xor
add
add
dec
call
adc
push
xor
and
test
pop
rcrb
push
fs
or
xor
fists
or
xor
and
push
add
mov
dec
mov
push
daa
inc
and
pop
and
fwait
inc
mov
lar
adc
sub
daa
out
fs
fisttps
inc
into
aas
clc
incb
mov
and
loope
pop
out
adc
pop
inc
pusha
lods
popf
or
int
xorl
xchg
jmp
jo
and
sbbb
adc
push
pushf
add
cmp
jns
add
pop
add
pop
pop
add
and
rolb
rol
xchg
dec
adc
loop
mov
cmp
cmp
pop
addl
pushf
jl
mov
pop
xchg
pusha
jb
cmp
push
orb
in
push
adc
xchg
lret
leave
leave
and
ds
and
xchg
adc
and
adc
sub
dec
cmp
inc
pop
dec
rclb
cmp
sti
jo
mov
dec
leave
in
push
cwtl
sub
test
mov
daa
xchg
mov
dec
pushf
pop
dec
dec
or
pop
cmp
mov
xor
mov
pop
div
inc
and
inc
loop
pop
add
roll
lds
outsb
mov
dec
push
mov
adc
mov
add
int3
push
add
add
inc
arpl
inc
jecxz
adc
or
pop
adc
xlat
xor
push
js
add
add
addl
aam
add
call
ret
jecxz
pop
xchg
ljmp
aad
nop
mov
push
nop
js
push
pop
ret
sqrtps
pop
sbb
add
ret
clc
es
decb
and
inc
loop
or
xor
add
aaa
sbbl
or
sub
sbb
ficoml
or
pop
add
add
icebp
inc
and
dec
add
addb
inc
pop
filds
mov
lods
push
iret
add
adc
fildl
or
lret
push
aad
int3
mov
outsl
mov
ret
add
xor
lock
pop
dec
in
adc
loope
xchg
idivl
call
adc
and
dec
pop
lahf
push
jnp
or
aad
push
inc
add
les
pop
sbb
add
cmp
test
and
sbbl
insb
pop
add
cmp
addl
and
cmpsb
adc
inc
jo
cmp
or
outsb
inc
and
cmpsb
inc
and
jnp
addl
push
addl
dec
faddl
pop
les
jmp
mov
sbbl
adc
fstp
popa
xor
xor
scas
inc
and
and
jnp
inc
pop
pusha
out
add
add
pop
pop
mov
add
pop
mov
add
mov
adc
xchg
fstpl
pop
test
pushf
lret
push
aam
xor
sub
pop
and
pop
mov
sbbb
shl
fisubrs
push
pop
add
mov
addb
xor
jp
loopne
dec
jmp
insb
add
and
or
in
pop
push
mov
mov
les
and
dec
mulb
inc
push
popa
mov
ja
and
or
pop
bnd
mov
push
lcall
pop
cs
pop
cmp
add
push
add
pop
nop
pop
loope
xlat
xor
jnp
and
dec
sub
ja
add
sbb
testl
or
sub
and
dec
pop
push
popl
icebp
cmp
add
mov
sbb
mov
inc
and
pop
add
dec
nop
mov
add
and
and
sbb
movsb
inc
pop
push
and
nop
cmp
into
sbb
or
pop
mov
adc
inc
hlt
push
sbb
inc
and
adc
dec
cmp
popa
dec
fsubrs
adc
shll
adc
pop
jmp
addl
bound
fs
and
pop
inc
ret
jmp
jbe
pop
fstl
jmp
adc
xchg
movsl
xor
daa
gs
popa
and
push
xor
lahf
jnp
stc
fwait
add
jmp
push
xchg
jne
push
cmp
popa
push
mov
and
and
sbbb
xchg
outsb
ja
pop
cmp
les
and
and
sub
inc
and
mov
in
ja
pop
out
bswap
cs
loop
faddl
mov
mov
inc
pop
mov
fnsetpm(287
or
xor
add
jbe
add
and
dec
pop
mov
add
or
pop
lock
movsl
scas
popf
push
dec
fcoml
pop
test
mov
and
pop
test
mov
xchg
fucomp
xor
nop
pop
aas
sub
dec
test
pop
xchg
inc
and
fmuls
ljmp
jno
pop
or
mov
adc
les
or
lock
xor
mov
add
mov
fwait
add
inc
ret
popa
ds
nop
jge
xlat
mov
mov
nop
pop
push
sub
dec
sbb
pop
adc
lcall
les
dec
faddl
or
adc
sub
cmp
repz
rolb
rolb
fucomi
stc
cmp
out
int3
add
or
and
cmpsl
cmp
cmp
fnstcw
es
les
mov
iret
rcrl
call
jl
lahf
out
ds
imul
or
jl
divl
fwait
push
cmpsl
out
enter
roll
sub
push
push
imul
adcb
push
iret
repz
in
sbb
sub
push
inc
loop
fwait
lret
xchg
int3
fnsave
stos
inc
and
push
pop
loop
push
rol
aad
jp
jb
scas
push
addl
or
test
pop
cwtl
movl
dec
cmp
scas
and
js,pt
or
in
jno
and
cmp
addb
xor
or
cmp
sbb
ret
pop
jg
or
adc
or
out
daa
pop
inc
inc
lods
and
sbbl
adc
rclb
and
hlt
pop
ja
pop
ja
push
or
pop
mov
cmp
rolb
pop
and
and
cmp
adc
add
popa
js
pop
ss
adc
mov
push
enter
add
and
rcrb
add
adc
mov
push
pusha
and
inc
and
and
rcrb
dec
fmul
in
cmpsl
in
je
pop
sub
adc
adc
adc
cmp
test
add
jns
or
xchg
pop
add
mov
mov
add
jnp
pop
jmp
inc
add
pop
xchg
addl
xor
mov
popa
mov
pop
incl
pop
and
cmpsb
out
cmpsb
add
imul
pop
addl
add
test
push
pop
or
cld
pushf
add
or
test
mov
pop
or
push
adc
pop
leave
insb
xchg
in
xor
inc
push
and
pop
mov
nop
pop
int3
sahf
xor
inc
add
es
and
mov
aad
add
pop
add
pop
and
dec
fmull
loop
pop
fcomps
nop
mov
sub
es
adc
xor
adc
and
sbb
adc
and
movsb
int
push
mov
or
inc
fcoml
add
pop
adc
add
scas
sub
adc
pop
ret
add
pop
aas
ss
inc
and
sbb
addl
dec
mov
ret
pop
add
mov
add
pop
imul
nop
pop
pop
sbb
stos
inc
and
int3
int3
out
xor
pop
and
rorl
or
add
add
pop
insb
xchg
xchg
lods
dec
sbb
push
or
dec
pop
push
addl
pop
int
scas
xchg
push
mov
loop
int
push
sti
cmpsb
sbb
add
mov
pop
les
and
sbbb
pop
cmp
mov
or
lea
addl
xchg
inc
mov
pop
fisubl
push
and
insb
adc
ret
pop
jnp
and
mov
sbbl
sbb
sbb
mov
addl
xor
nop
stos
rorb
aaa
repnz
add
pop
jbe
mov
sbbl
and
ror
outsb
pop
or
jae
imul
add
and
and
push
pop
adc
or
aaa
lock
aam
and
and
pop
and
imul
mov
inc
and
outsb
flds
lods
pop
jnp
inc
test
pop
in
mov
cmp
adc
and
and
and
imul
pop
pop
mov
pop
addr16
and
pop
inc
and
mov
push
cmp
add
rcrb
inc
adc
and
inc
out
mov
jns
add
sbb
bound
pushf
cmp
add
add
ja
push
pop
add
adc
addl
mov
jbe
repnz
sbb
push
push
dec
jmp
jne
mov
lds
dec
mov
mov
nop
fwait
dec
jmp
mov
fimull
add
pop
dec
mov
and
xor
jle
xchg
add
adc
dec
sub
sub
daa
sbb
adc
mov
nop
mov
push
pop
imul
call
loopne
inc
inc
mov
loope
mov
or
pop
add
or
adc
xlat
push
xlat
and
imul
pop
mov
and
test
and
xchg
pop
and
add
or
jmp
or
aaa
jo
pop
or
jbe
xor
xorb
sbb
fisubrs
inc
mov
inc
and
inc
loop
or
jne
int3
sub
jmp
inc
sbbl
pop
pop
fsubr
inc
and
fsubp
adc
cltd
ss
cmpsb
dec
adc
pop
es
addl
ffree
mov
inc
jle
and
and
test
pop
mov
mov
push
push
addl
or
and
loop
inc
and
push
cmp
inc
pop
mov
in
add
mov
popa
xor
and
ret
sbb
mov
pop
repnz
xchg
and
pop
ficoms
pop
fcoml
adc
pop
pushf
cwtl
inc
adc
and
or
sbb
pop
test
mov
adc
add
and
sub
pop
stc
jne
jmp
dec
in
addl
and
add
cmc
push
mov
clc
cltd
xchg
or
pop
and
xor
bound
jno
inc
pop
aaa
rcrb
adc
hlt
mov
xchg
or
adc
push
jmp
adcb
mov
inc
pop
adc
addb
push
cmp
sub
dec
adc
pop
nop
adc
pop
cwtl
js
mov
jmp
dec
fcoml
es
push
sub
pop
adc
pop
pop
mov
and
movups
clc
pop
add
inc
and
cmc
or
sub
dec
pop
adc
pop
icebp
xor
jmp
fcoml
pop
sub
dec
or
pop
dec
fadds
in
clc
and
xchg
loopne
adc
jnp
add
cmp
and
add
inc
and
lcall
outsb
dec
sbbb
and
addl
push
adc
xchg
xor
daa
testl
and
push
adc
pop
xchg
mov
add
adc
outsb
es
je
sub
mov
and
or
outsb
adc
inc
and
jl
or
out
out
pop
add
xchg
push
mov
mov
es
pop
bound
movaps
inc
pop
sub
xchg
cld
xor
pop
adc
nop
adc
je
pop
push
jmp
adc
pop
mov
nop
mov
cmp
add
and
cmc
mov
add
data16
movsb
or
cmp
dec
add
pop
mov
adc
and
inc
pop
add
addl
movsb
pop
add
jp
sub
and
pop
bound
add
jbe
mov
mov
mov
push
add
test
pop
add
inc
inc
lea
ret
sbbl
pop
jns
outsb
or
pop
nop
jl
jno
or
cmpsb
and
mov
push
and
mov
nop
nop
mov
or
xchg
pusha
mov
push
and
add
cmpsl
sub
mov
add
push
addl
nop
inc
mov
adc
bound
and
rolb
mov
scas
push
add
fs
add
mov
cwtl
pop
adc
push
adc
addl
inc
and
push
daa
inc
push
or
das
hlt
mov
jno
pop
pop
mov
add
sbbl
add
push
inc
add
movsb
jp
mov
mov
push
addr16
pop
jge
jb
jo
pop
lea
in
adcl
lds
add
jnp
or
mov
xchg
pop
dec
mov
add
adc
add
inc
push
pop
or
iret
pop
sbb
pop
addl
mov
gs
addb
dec
cmp
leave
mov
and
pop
sub
pop
adc
nop
push
pop
lea
push
and
inc
and
and
pop
sbbb
aaa
fiaddl
or
cmp
and
test
sub
dec
fsubrl
sbb
inc
and
or
sbb
and
adc
popa
xor
cmpsl
sbb
fisttps
fwait
dec
mov
int
mov
les
jmp
xchg
pop
and
int3
lcall
bsr
flds
pushf
shlb
mov
pop
jge
rolb
jmp
mov
mov
pop
or
ja
mov
pop
in
test
daa
sub
sbbb
cwtl
stos
or
inc
sbbl
add
pop
into
aad
sti
inc
and
cltd
push
imul
add
call
adc
push
outsb
shll
mov
or
pop
add
lods
loop
add
pop
je
fcoml
pop
cmp
daa
sub
dec
pop
xchg
stos
add
mov
loopne
adc
add
std
mov
pusha
pop
call
mov
inc
scas
mov
and
scas
loop
addl
push
addl
or
or
or
xchg
xchg
dec
add
cltd
lahf
jb
scas
inc
pop
js
sub
es
jo
pop
and
push
pop
jne
je
add
or
mov
pop
add
add
and
or
xchg
adc
in
adc
xchg
add
pushf
xchg
inc
and
pop
adc
xor
or
pop
jnp
add
jo
lods
push
add
adc
test
mov
dec
adc
and
cmpsl
adc
or
adc
je
add
scas
mov
sti
xorb
pop
repnz
lcall
cwtl
mov
pop
or
movsl
add
addl
sbbb
scas
mov
sub
addl
sub
pop
pop
inc
mov
and
inc
bound
sbb
or
stos
sub
dec
pop
sub
or
pop
adc
lea
and
xchg
sbb
inc
loop
mov
add
adc
call
sbb
or
clc
lods
mov
nop
cmc
sbb
and
sbb
addl
and
dec
cmp
pop
jno
fs
int3
or
mov
and
mov
add
popf
or
pop
pop
mov
pop
and
xor
inc
in
sbb
add
pop
adc
out
jle
push
xor
add
out
pop
add
and
ljmp
sub
or
shrb
out
ds
and
dec
pop
ljmp
push
sbb
adc
ds
sbb
jnp
pop
sbb
add
mov
inc
sbb
add
adc
and
cmp
pop
repnz
aaa
daa
and
call
inc
and
lock
cmpsb
nop
pop
in
ljmp
adc
mov
sub
bound
mov
movsl
adc
in
jle
stos
mov
in
ja
adc
mov
ds
inc
mov
out
neg
push
ja
and
or
pop
stos
inc
and
pop
or
scas
out
adc
jb
popf
fildl
int
ja
scas
add
add
filds
addr16
and
fiadds
adc
test
sbb
xor
and
sbb
fs
or
dec
sahf
or
add
out
jo
mov
sub
pop
test
fimull
bound
addl
adc
ret
and
pop
loope
or
mov
pop
add
add
add
lret
or
pop
jl
push
je
cli
mov
push
out
jnp
out
sahf
mov
arpl
xchg
repz
and
dec
std
pop
addl
pop
loop
push
mov
add
inc
and
ficomps
add
adc
or
or
pop
mov
add
dec
pop
shufps
add
pop
cmc
add
push
bound
fisubrl
and
xor
mov
adc
jmp
pushf
out
inc
xchg
or
sub
cs
push
adc
push
cmovae
and
dec
pushf
xchg
jo
push
fcompl
and
bound
jno
rcrl
imul
mov
inc
and
mov
and
sbbb
nop
cmp
adc
push
dec
fcoml
pop
inc
sub
inc
sub
pop
xor
adc
and
sbb
mov
mov
pop
adc
pop
bound
mov
nop
pop
dec
push
and
or
add
ja
xor
adc
mov
repz
sub
dec
pushf
pop
pop
sahf
addr16
arpl
scas
push
iret
pop
out
jae
pop
add
push
adc
inc
rcrb
loopne
cli
smsw
or
sarb
fadds
inc
ret
add
jnp
add
xor
or
inc
bound
std
add
add
mov
push
and
sahf
stos
mov
mov
add
mov
mov
or
or
test
jbe
mov
sub
sbbl
je
outsl
pop
and
jo
inc
pop
pusha
push
scas
and
imul
popl
stos
les
or
or
adc
and
addr16
or
push
xchg
jbe
nop
sbb
jo
and
subb
xlat
pop
mov
movb
add
jbe
and
pop
je
rclb
out
push
outsl
mov
xor
push
jns
out
arpl
add
insb
loope
clc
jne
icebp
sbbl
inc
inc
sub
in
inc
mov
loop
pop
adc
and
jg
and
test
pop
jo
mov
adc
sbb
adc
push
cmpsb
test
dec
pop
push
cmc
inc
and
sbbb
fstpt
xor
adc
sbb
pop
test
ret
pop
sbb
dec
add
sub
dec
fadds
pusha
arpl
daa
adc
jno
les
in
jno
add
cmp
mov
jno
and
pop
inc
and
push
mov
popa
lar
movsl
cld
shlb
inc
pop
or
and
xchg
pop
es
and
pop
jle
or
pop
cwtl
movsb
sar
cwtl
sub
dec
pop
clc
adc
inc
ret
hlt
lret
dec
cmp
call
push
movsl
push
xor
mov
lcall
mull
add
rep
outsl
jmp
inc
and
pop
and
hlt
loopne
in
or
pop
sub
popa
pop
pop
mov
outsb
and
nop
add
adc
or
scas
fbld
adc
adc
pop
jle
jno
mov
mov
and
movsb
add
pop
insb
iret
out
and
jmp
adc
mov
cltd
pushf
incb
push
cmpsb
sub
xchg
jbe
inc
cmp
pop
push
outsb
call
nop
mov
mov
sbb
or
add
inc
pop
lock
inc
loop
cmp
insl
pop
mov
sbbl
inc
popa
xlat
xchg
popa
jp
xor
adc
cmp
adc
popa
add
test
and
pop
cmpsl
jmp
mov
adc
insb
aad
push
popa
mov
inc
pop
iret
pusha
stos
inc
and
add
inc
lret
dec
cmpsl
fwait
or
aaa
aaa
stc
les
sub
cmp
xor
add
sbbl
pop
movsl
or
adc
push
sub
xchg
andb
add
pop
aad
sub
int
xor
pop
jns
nop
fistpl
add
add
push
xor
xor
xchg
add
mov
or
sbb
pop
adc
add
mov
pop
ret
push
push
in
add
js
adc
and
xchg
pop
fadds
add
les
push
lods
xchg
add
pop
or
ja
sbb
loop
sbb
insb
arpl
push
cs
mov
inc
ret
and
lods
push
outsl
add
inc
pop
repz
add
pop
xchg
imul
imul
pop
add
push
inc
and
add
sbb
mov
or
pop
add
push
pop
addl
pop
loop
xor
mov
subl
inc
ret
divl
inc
and
insl
pop
jnp
addl
pop
popa
adc
adc
and
rcrb
push
and
dec
addr16
cmpsb
xchg
cwtl
or
xor
adc
movsb
mov
and
push
sub
add
pop
adc
and
sti
add
jl
les
mov
addl
sbb
cmpl
sub
test
mov
pop
and
mov
jmp
pop
loopne
pop
repnz
ja
inc
loop
xor
orb
adc
in
cmp
add
and
and
sbbb
add
aaa
adc
pop
sub
shlb
xor
jbe
cmp
psubw
and
cmp
and
push
and
jmp
adc
xchg
xchg
add
fs
movsb
pop
add
or
pop
mov
pop
pop
into
sbb
ja
and
dec
or
int
addl
lods
daa
cmp
inc
and
or
sbb
cmp
fiadds
mov
or
repz
repz
adc
adc
or
repz
push
xchg
out
pop
jnp
adc
jge
xchg
lods
roll
sahf
cli
cmp
sbbb
mov
push
pop
mov
icebp
imul
fldenv
push
and
adc
mov
inc
and
pop
xor
cwtl
mov
adcb
or
addb
and
dec
pop
pop
pop
mov
nop
mov
mov
and
pop
into
js
sub
dec
pop
addl
add
ja
pop
addl
add
jnp
or
test
inc
add
adc
sbbl
adc
jmp
pop
adc
and
xchg
inc
mov
shlb
in
mov
xchg
xchg
or
pop
and
ret
pop
scas
and
or
aas
push
dec
add
call
xor
scas
pushf
dec
push
add
ja
subl
adc
sub
pop
sub
lods
push
mov
jno
xchg
mov
nop
mov
adc
inc
and
xor
or
inc
sbb
aaa
adc
pop
xor
mov
mov
pop
pop
testl
xlat
sub
sbb
sbb
xor
or
cli
mov
addb
adc
pop
add
pop
or
jno
add
pop
movsb
push
mov
and
jnp
sti
add
push
push
sti
fs
push
fsubrs
push
add
xlat
loope
and
insb
scas
jo
pop
enter
dec
leave
add
pop
jl
addl
fadds
push
test
xor
sbb
pop
enter
adc
addl
in
jge
loop
mov
adc
jge
pop
xchg
sbbl
ss
sbb
popa
mov
or
outsb
mov
dec
push
add
push
addl
jb
push
je
cmp
out
dec
sub
add
cmp
adc
fisttpl
orl
adc
push
xchg
add
pop
aad
adc
xor
add
add
pop
adc
add
scas
sub
pop
enter
inc
pop
negb
outsl
jmp
add
lcall
mov
inc
les
add
les
adc
pusha
push
in
sub
dec
sub
inc
mov
nop
mov
and
pop
and
push
cmp
dec
pop
mov
ficoml
and
pop
cmp
and
or
fcoms
pop
add
or
das
sbb
and
push
push
stos
pop
inc
adc
xor
adc
addl
pop
repnz
add
pop
adc
and
je
and
jp
lock
push
add
adc
es
and
push
or
rcrb
adc
pop
faddl
add
sub
dec
pop
out
add
pop
add
aaa
jno
sbb
sbb
pop
js
arpl
nop
rcr
dec
dec
dec
push
adc
adc
pop
and
pop
es
rclb
pop
cmpl
adc
and
call
addl
or
adc
inc
ja
adc
test
mov
or
add
jns
shll
add
and
dec
pushf
xchg
pop
add
shll
test
add
dec
es
jo
add
sub
dec
addl
push
dec
mov
or
push
popa
sub
popf
addb
cmpsl
test
add
sbb
sub
test
add
sub
dec
lods
ds
and
test
pushf
push
dec
adc
pop
mov
neg
lock
push
shlb
not
pop
scas
or
jmp
push
loop
bound
pop
push
jge
add
cltd
orb
pop
sar
or
cmpsl
inc
jp
add
insb
pop
and
add
aaa
push
pop
and
adc
in
addb
adc
mov
inc
and
les
or
pop
inc
nop
out
nop
cmp
add
out
add
mov
pusha
aas
xor
inc
and
daa
sbbb
sub
xchg
lock
repnz
and
mov
pop
nop
xor
sarb
mov
adcb
inc
stos
inc
and
mov
inc
and
xor
icebp
and
ljmp
imul
jmp
or
inc
addl
and
insb
inc
pop
and
add
lahf
aam
push
addl
inc
ss
jb
lods
push
iret
js
test
add
out
jl
pop
and
andl
cmp
inc
and
popa
lcall
and
cmpsl
stc
push
jo
ds
jne
lcall
and
sub
cmp
rcrl
sub
jns
cmpsl
sub
jae
cmp
cmp
pop
sahf
aas
push
daa
sub
xor
push
xchg
inc
addl
and
add
inc
pop
adc
or
add
and
jns
adc
xchg
cmpsl
repz
out
out
xor
cmp
push
mov
out
sahf
cmp
jp
jo
out
movsb
mov
icebp
pop
pop
sbb
inc
and
js
pop
sbbl
pop
push
fmuls
nop
push
dec
pop
dec
out
addl
add
call
add
out
jecxz
loop
inc
and
lods
aam
addl
xchg
ds
movsb
gs
icebp
mov
pop
pop
adc
cwtl
xchg
sbb
scas
icebp
nop
mov
nop
hlt
dec
mov
pop
sbb
pop
movsl
push
push
addl
adc
sbb
and
pop
stos
push
dec
mov
and
shll
adc
fs
pop
sti
pusha
sub
sbb
call
cltd
adc
fcoms
mov
sbb
fcomps
pop
repnz
xchg
call
nop
cmp
mov
pop
mov
add
nop
cmp
or
mov
sbb
sbbl
adc
jl
and
add
add
and
pop
nop
cmp
push
inc
pop
jb
jge
adc
aad
ja
add
add
and
lea
adc
and
pop
mov
or
push
filds
pop
enter
nop
cmp
pop
inc
and
inc
mov
add
sub
xchg
pop
and
sbbl
inc
pop
pusha
and
and
mov
outsb
sets
push
sub
pop
pusha
push
int3
nop
push
sar
xor
addl
iret
dec
inc
pop
adc
push
or
add
add
loop
mov
dec
add
add
inc
and
or
push
and
shlb
lds
and
adc
sbb
nop
dec
ja
adc
or
pop
loope
or
pop
add
add
mov
js
pop
dec
push
pop
push
and
dec
dec
adc
and
pop
jb
inc
call
adc
and
mov
or
push
pop
sbb
fwait
mov
jmp
ret
lods
push
pop
push
call
and
sbb
adcb
pop
dec
insl
repz
and
aaa
loopne
and
push
inc
and
add
lods
or
inc
and
in
sub
pop
cltd
and
and
inc
pop
loop
sbbl
adc
pop
mov
add
or
dec
je
addl
pop
add
insl
lret
adc
add
adc
and
js
or
add
sbb
stos
add
jecxz
add
xor
or
pop
nop
xor
cmp
in
inc
and
add
nop
cmp
andb
jo
and
mov
inc
and
gs
ret
nop
mov
add
push
daa
adc
mov
or
adc
and
movsb
pop
and
nop
cmovne
mov
adc
dec
cmp
subl
push
sbb
adc
and
mov
and
add
pop
inc
and
xchg
fsub
xor
pop
insb
pop
adc
dec
pop
int3
mov
inc
xchg
sub
pop
jo
fsubs
mov
dec
pop
stos
push
addl
andl
mov
je
xor
nop
pop
xchg
inc
and
jnp
addl
inc
dec
pusha
adc
adc
fistps
jne
push
and
add
xchg
push
add
into
fmuls
imul
sub
dec
pop
adc
xchg
push
and
xchg
shll
loope
insl
shll
cmp
addb
push
pop
mov
mov
inc
dec
lahf
inc
adc
orl
adc
jbe
sbb
test
jo
mov
and
pop
test
pop
cmp
add
addl
push
push
fcoml
nop
pop
insl
xorb
inc
and
pop
loop
inc
rorb
jmp
in
push
addl
adc
and
fldcw
pop
add
add
mov
jmp
add
aam
pusha
movb
pop
ficoml
lret
jae
es
and
inc
mov
add
jmp
xlat
call
xchg
stos
push
and
or
push
mov
jmp
in
and
or
add
xchg
roll
pop
push
add
add
inc
mov
inc
and
sbb
sbb
pop
lods
lret
mov
inc
sub
dec
pop
testl
or
or
testl
push
dec
and
in
addl
add
pop
adc
adc
xor
sbb
pop
xchg
add
lods
xchg
pop
or
pop
js
and
ja
xor
adc
adc
adc
pop
and
or
aas
int3
add
mov
add
pop
add
cmp
in
ret
pop
ret
gs
inc
sbbl
and
push
and
add
jnp
mov
pop
and
sub
dec
inc
pop
cmp
dec
pop
addl
add
pop
adcb
and
add
lods
roll
or
add
mov
or
les
sub
dec
pop
or
ret
xor
adc
add
and
dec
pop
inc
loop
pop
arpl
mov
mov
addl
and
push
adc
inc
pop
jge
jno
icebp
sub
xor
push
loop
inc
and
lret
addl
sub
and
stos
inc
pop
int3
adc
addl
negb
add
push
dec
pop
xor
cld
mov
pop
cmp
fldenv
pushf
fcoml
nop
pop
hlt
cmp
adc
sahf
adc
and
mov
add
or
mov
inc
loop
cmp
pop
shlb
adcb
inc
pop
cmp
fwait
xor
addl
pop
or
pop
mov
pop
xchg
push
xor
push
and
dec
shrl
rcll
xor
outsl
sbb
pop
inc
mov
jno
pop
add
out
push
dec
adc
add
push
pop
js
shlb
sbb
ret
nop
pop
mov
addl
rclb
mov
adc
and
add
or
adc
or
add
addl
into
pop
sub
popa
scas
inc
pop
dec
addr16
cmp
mov
je
cmove
nop
mov
add
aaa
push
mov
xchg
add
movsl
or
add
lods
or
mov
sub
pop
mov
pop
ret
add
push
stos
jno
inc
add
inc
and
mov
inc
and
inc
and
mov
cs
add
mov
out
loop
add
xor
jno
sbbl
inc
pop
in
cs
inc
and
adc
and
add
pop
add
or
lods
cmp
add
mov
push
dec
or
add
inc
mov
push
movl
adc
pop
pop
addl
sub
dec
sub
pop
adc
add
and
mov
pop
mov
inc
pop
ja
xchg
jnp
dec
sbb
sub
shll
icebp
shrb
out
and
pop
fsubrl
ret
adc
or
repnz
add
mov
jno
pop
add
mov
add
dec
pop
addl
pop
jbe
dec
adc
and
and
nop
cmp
pop
and
jnp
and
push
pusha
loopne
add
pop
bound
inc
les
addl
pop
xchg
xchg
outsb
sub
dec
pop
subl
pop
imul
pop
inc
bound
xchg
adc
inc
sbbl
nop
pop
xchg
push
cmp
add
and
add
jno
pop
adc
and
and
pop
adc
jo
push
and
and
push
xchg
and
inc
pop
pop
pop
sbb
loop
inc
pop
jmp
sbbl
push
sbbl
les
add
add
pop
cmpsl
mov
or
adc
add
mov
push
xchg
or
scas
jle
or
pop
xor
out
push
sub
pop
xor
add
loopne
adc
sahf
add
add
pop
add
mov
fwait
sbb
incl
mov
add
pop
loop
push
and
addl
pop
add
cmp
or
aam
repnz
pop
sbb
dec
loopne
and
push
nop
js
inc
cmp
jb
pop
mov
push
addl
sub
popf
add
stos
xchg
jo
cmp
iret
push
and
mov
pop
inc
and
adc
adc
add
std
fistpl
and
mov
test
add
add
inc
ret
pop
add
cmp
dec
ljmp
mov
sbbl
or
sahf
ss
push
fsubrl
pop
and
loopne
bound
pop
push
xor
loopne
push
and
dec
pop
insb
add
pop
push
inc
addb
lods
sahf
sub
pop
add
jmp
test
mov
adc
adc
mov
xchg
add
and
addl
add
dec
ja
and
add
add
aaa
mov
cld
addl
add
dec
int3
jo
sub
pop
sahf
out
in
inc
and
sbb
or
dec
and
or
jne
pop
test
movsb
add
pop
adc
dec
xchg
std
out
clc
adc
add
shr
inc
and
add
outsl
jecxz
mov
or
or
xchg
mov
pop
adc
adc
inc
pop
lods
sub
jno
dec
sti
add
adc
enter
outsb
leave
fstl
loop
call
loop
and
sub
in
call
pop
mov
add
jno
insl
cmpsb
add
mov
scas
add
pop
push
dec
add
pop
std
out
adc
add
pop
mov
xchg
and
dec
cmp
mov
lock
aaa
inc
and
or
pop
mov
js
add
mov
add
mov
add
jae
in
pop
and
or
in
out
jbe
pop
adc
pop
or
cmp
sbbl
add
jmp
push
add
mov
cmp
jnp
dec
add
adc
and
mov
or
sbb
add
sbb
pop
sub
pop
addl
add
and
pop
add
xchg
fwait
sbb
sahf
orb
inc
nop
addl
or
movb
pop
push
and
lcall
cmp
add
mov
add
stos
push
pop
cwtl
mov
pop
and
dec
pop
mov
pop
xchg
cmpb
push
and
adc
and
inc
xchg
pop
nop
xor
clc
int3
loop
push
and
push
add
insb
sbb
and
call
adc
es
and
push
ret
mov
pop
sub
add
jmp
call
pop
ss
jno
push
pop
sarb
and
sub
pop
sub
test
cltd
pop
sbb
ljmp
mov
jno
addl
inc
and
add
rol
js
sub
push
sub
adc
lcall
negb
add
and
push
sbb
fldl
pop
or
or
inc
pop
pop
add
sub
cmp
adc
mov
add
jnp
cwtl
mov
adc
mov
push
or
add
pop
jmp
or
pop
js
and
adc
pop
je
rcll
or
je
add
adc
pop
add
cmp
pop
adcl
pop
addl
scas
loope
adc
rcrb
push
cltd
xor
out
cmp
pop
cli
push
incl
popa
add
push
idivb
add
pop
lahf
fcoml
addl
adc
rolb
add
or
inc
bound
mov
or
pop
pop
and
or
sub
dec
or
nop
pop
inc
pop
or
inc
cli
add
cmp
mov
les
add
add
inc
daa
add
loop
xchg
and
sbbl
inc
pop
mov
adc
pop
and
add
adc
pop
adc
pop
and
pop
adc
adc
andl
or
push
pop
add
pop
cmp
inc
or
pop
cmpsl
inc
and
stos
inc
and
pop
push
and
xchg
cld
dec
jecxz
adc
mov
mov
pop
inc
push
lock
pop
xor
push
and
addl
dec
pushf
mov
dec
fsubs
adc
mov
pop
lea
sub
dec
pop
xchg
mov
addl
inc
and
pop
inc
and
cwtl
or
add
inc
bound
pop
mov
pop
jae
adc
mov
jecxz
pushf
addr16
shll
lea
pop
cwtl
xchg
mov
inc
scas
loopne
add
mov
pop
dec
push
and
add
push
movsb
pop
inc
add
mov
pushf
fs
and
adc
inc
test
pop
addl
inc
and
add
ja
dec
pop
add
pop
adc
mov
or
and
and
adc
mov
sti
mov
sbbb
or
and
iret
push
add
test
movsb
mov
inc
and
add
addr16
test
pop
or
xor
sub
sti
add
jo
add
xor
xchg
and
ret
xchg
cmpsb
addb
pusha
and
dec
or
pop
add
mov
loopne
adc
gs
mov
mov
jg
ret
add
and
or
add
jle
bound
loop
adc
inc
pop
push
add
dec
add
mov
lcall
push
or
adc
or
or
pop
addl
inc
loop
adc
sbbl
pop
cmpsl
push
addl
mov
push
pop
fldl
mov
pop
cmp
jne
add
sub
dec
pop
fs
xchg
lods
fdivrs
add
stc
inc
rorl
orl
or
inc
and
test
cwtl
sbb
xchg
filds
sbbl
pushf
mov
aam
sbbl
inc
add
pop
inc
xchg
push
add
and
loopne
pop
je
pop
aas
test
in
mov
call
sbbl
xor
int
jg
push
cmpsb
ljmp
add
and
mov
mov
add
sbb
pop
push
sub
inc
loop
les
pop
sub
xchg
rcl
cltd
or
mov
inc
lods
addl
add
sub
or
ja
inc
loop
lcall
push
push
or
pop
leave
or
subb
cmp
sbb
leave
add
fwait
pop
jno
add
test
cltd
push
js
mov
add
or
pop
add
das
test
pop
fs
add
or
push
or
ljmp
or
mov
rcrb
add
pop
popa
call
and
and
aam
push
or
sbbb
dec
mov
rcrb
cmp
rclb
jmp
inc
push
je
push
cs
dec
enter
mov
std
pop
add
mov
add
nop
jo
inc
pop
popf
add
push
les
pop
mov
inc
ret
pop
and
dec
mov
pop
add
sub
or
xor
xchg
push
add
mov
ljmp
push
or
leave
pop
add
push
xor
js
pop
out
cmc
pop
loopne
inc
and
pop
add
add
pop
cmp
inc
loop
pop
inc
and
js
or
and
mov
les
cltd
movb
les
pusha
dec
and
fidivl
pop
call
fadds
out
adc
or
or
mov
or
push
pop
add
xchg
aaa
lock
mov
or
popa
xor
pop
call
adc
adc
cltd
jo
inc
daa
or
xchg
inc
sbb
cmp
sbbb
add
pop
js
push
adc
and
cmp
insb
pop
and
mov
pop
push
adc
cmp
inc
and
add
add
sbb
and
add
mov
mov
pop
add
or
movsl
jns
pop
add
les
add
fisubl
push
inc
outsl
ljmp
add
xchg
adc
call
pop
xor
or
scas
loope
test
loopne
inc
and
or
inc
negb
adc
cmp
pop
mov
sub
xchg
mov
cwtl
adc
and
inc
test
test
mov
push
or
add
mov
inc
add
pop
dec
int
or
push
out
and
popf
push
sbb
or
dec
addl
test
add
dec
push
dec
fsubrs
test
sbb
jae
and
imul
pop
loopne
xor
inc
jnp
or
mov
add
pop
adc
or
test
in
call
mov
aam
and
pushf
push
or
fsubl
adc
mov
adc
test
in
jmp
or
pop
fstpl
addl
pop
int3
pop
cmp
push
lahf
imul
add
mov
adc
push
dec
adc
or
push
addb
test
xchg
sub
orl
out
or
add
aaa
add
xchg
push
call
sbb
pop
in
nop
xlat
popa
sbb
sub
mov
addb
aad
add
or
in
nop
addb
push
mov
pop
loopne
repnz
add
rorl
mov
aas
adc
adc
or
addl
fldt
adc
and
in
or
pop
push
and
sbb
pop
pop
push
and
and
pop
bound
or
mov
inc
pop
cltd
jae
xchg
add
test
and
add
pop
add
pop
or
add
jno
adc
pop
jmp
cld
out
pusha
add
push
push
and
repz
das
cmp
stos
test
cmp
add
pop
cltd
and
adcb
loop
pop
push
cs
add
mov
pop
fs
mov
mov
bound
xchg
push
adc
adc
or
dec
mov
pop
cmp
addl
or
mov
add
or
adc
pop
inc
and
inc
cmp
nop
mov
inc
loop
push
pop
pusha
jp
pop
inc
sbbl
add
jno
and
loop
insb
pop
adc
sbb
pop
add
cmp
addl
dec
lret
or
add
pop
addl
nop
cmp
mov
pop
push
add
cmp
jo
sub
pop
je
push
faddl
nop
pop
andb
sub
dec
pop
push
mov
mov
add
int3
je
push
push
push
jnp
or
and
adc
add
adc
add
add
or
aaa
pop
inc
and
add
inc
test
pop
mov
sbbl
cmp
and
mov
mov
or
out
push
and
dec
pop
sub
addl
mov
mov
add
aaa
jno
pop
addl
adc
push
cltd
dec
and
cmpsl
and
movsb
inc
jmp
adc
mov
addl
dec
sbb
add
mov
cwtl
inc
inc
or
sub
cwtl
and
dec
pop
pop
xchg
jp
pop
js
adc
or
mov
out
fwait
or
mov
adc
and
mov
pop
push
and
nop
mov
nop
mov
and
sbb
xchg
add
add
aas
gs
sub
and
jns
xor
mov
cmp
add
mov
ficoms
push
inc
repnz
sbbl
inc
ret
sti
out
sbb
xchg
push
xor
nop
jo
pop
add
repz
outsb
cmp
sbb
adc
add
push
and
inc
inc
pop
adc
sub
sub
pop
inc
and
nop
sbb
and
push
dec
xchg
xor
inc
add
inc
and
add
sahf
pop
inc
inc
mov
and
out
sti
jb
adc
cld
sub
clc
add
add
mov
pop
in
cli
jecxz
addl
stos
test
xor
sbb
pop
fdiv
inc
mov
and
add
mov
or
push
cmp
add
add
or
cmp
addl
add
sbb
cltd
xchg
and
add
or
xchg
in
inc
repnz
jb
out
jns
sbb
and
inc
and
adc
adc
or
pushf
jbe
popa
lahf
add
mov
and
push
push
and
gs
loop
add
lahf
xor
ja
sbbl
mov
mov
arpl
adc
pop
pop
and
insb
sub
pop
dec
mov
dec
add
inc
rolb
movsl
sbb
push
xor
sub
dec
sub
or
jbe
xor
loop
das
rolb
mov
pop
test
inc
sbbl
and
addl
add
roll
and
add
ja
pop
jns
test
sbb
pop
push
xor
add
sbb
nop
pop
add
add
jno
mov
pop
push
daa
addb
nop
loope
or
xchg
pop
add
lods
dec
fcomip
xchg
dec
sub
outsb
mov
insb
xor
mov
dec
xor
out
sbb
or
pop
push
adc
and
jl
sbb
jno
or
add
xlat
jae
cwtl
pop
add
pop
nop
cmp
jo
and
cmp
sub
dec
cmp
pop
pop
daa
pop
fdiv
and
adc
adc
and
aam
inc
inc
pusha
dec
pop
add
cmp
jo
or
aam
xchg
inc
and
pop
jp
and
scas
mov
xchg
or
jae
sbb
add
pop
call
mov
nop
pop
adc
dec
cmp
push
pop
inc
fcoms
les
adc
add
or
pop
add
dec
pop
adc
mov
mov
adc
add
pushf
inc
and
pop
adc
mov
hlt
hlt
sbb
sub
push
add
xor
add
sbb
addl
adc
adc
icebp
and
or
cmpsb
outsb
sub
pop
shr
sbb
sbb
mov
les
push
and
cmpsl
insl
mov
and
and
in
repz
test
push
shr
out
push
fxch
rcrb
fsave
sysret
lcall
testb
pop
adc
adc
xchg
loopne
pop
bound
add
test
pop
xor
loop
add
mov
add
mov
cmpsb
inc
and
push
xchg
aas
or
xchg
xlat
push
adc
pop
mov
nop
mov
sbb
mov
pop
insl
insb
test
inc
and
sbb
and
cmp
mov
add
mov
popa
pop
add
mov
imul
mov
addl
pop
dec
mov
add
and
pop
sbbb
scas
inc
and
dec
mov
or
cmovbe
xchg
pop
or
mov
or
xor
adc
pop
or
insb
add
addl
and
jmp
xor
enter
adc
lock
push
adc
or
adc
pinsrw
pop
push
mov
aas
popa
fstps
mov
daa
adc
push
dec
and
fists
dec
rcr
lods
push
daa
fnstcw
jbe
cmp
jge
pop
addl
and
and
mov
adc
les
pop
and
adc
add
pop
div
push
icebp
xchg
add
rorb
scas
inc
and
into
test
addb
mov
pop
cmpsl
push
adc
sti
adc
adcl
and
and
dec
cwtl
fcompl
dec
add
ja
sbb
mov
inc
xchg
test
adc
or
pop
aam
addl
dec
add
inc
and
xor
sub
dec
pop
sub
add
test
ss
cmpsl
sub
pop
or
mov
mov
mov
push
pop
jmp
mov
nop
mov
mov
pop
out
and
aad
imul
or
in
sub
imul
xchg
sub
or
cmpsl
cmp
and
pop
repnz
jo
clc
les
call
pop
xlat
sub
dec
sbb
pop
out
xor
push
dec
test
dec
xchg
add
pop
mov
cmp
cltd
push
in
int3
dec
inc
jne
and
lods
insl
dec
or
adc
dec
pop
inc
cmp
mul
scas
add
add
popa
jp
push
jg
movl
addl
addr16
and
call
add
pop
jmp
stc
mov
shlb
pusha
test
pop
adc
adc
and
add
mov
jno
sub
push
mov
inc
and
xchg
and
xchg
add
outsl
dec
imul
pop
jnp
dec
and
je
sub
ss
addl
dec
cmp
mov
pop
int
add
mov
pop
dec
add
js
nop
pop
icebp
jnp
or
mov
add
add
mov
jno
pop
and
in
sbb
adc
call
inc
daa
mov
add
push
das
syscall
push
mov
adc
pop
xor
mov
sub
dec
pop
dec
out
or
repz
inc
ret
subl
pop
inc
shlb
adc
xchg
es
call
test
add
push
addl
mov
mov
pop
and
add
cmp
cmp
inc
ret
pop
jae
hlt
nop
pop
dec
sbbl
and
and
cmp
shrb
shll
and
enter
xor
pop
xchg
add
add
das
loopne
sub
or
fistpll
bound
push
addb
icebp
cli
pop
or
add
push
adc
jo
iret
mov
sbb
and
jb
or
pop
push
mov
fs
inc
loop
pop
jl
mov
and
cwtl
adc
addl
inc
dec
data16
or
and
movsl
addb
addl
or
clc
and
pop
and
cmp
cmc
and
lcall
pop
fs
and
ffree
pusha
add
inc
lret
add
jb
lds
mov
dec
pop
cmpsl
and
mov
mov
in
hlt
das
or
pop
int3
dec
dec
mov
pop
filds
sbb
adc
loopne
push
hlt
adc
mul
mov
jae
sahf
xor
pop
mov
push
sti
or
push
cwtl
mov
pop
insb
popa
add
mov
and
shlb
sub
dec
pop
outsl
ror
or
pop
jge
addl
testb
pop
decl
int3
jle
sbb
pop
jl
data16
or
pushf
out
sti
pop
and
mov
add
cmp
lret
cmp
xor
inc
adc
inc
push
pop
testb
mov
aam
pop
ret
mov
rcr
inc
mov
add
jno
sbbl
inc
pop
sbb
and
inc
pop
addl
pop
jo
ja
adc
add
pop
out
mov
js
outsb
push
jmp
or
add
pop
and
dec
fmull
pop
lret
popa
call
mov
dec
mov
xchg
pop
aam
inc
adc
xchg
sub
jae
add
pop
das
pop
jns
pop
jle
lock
dec
and
call
loop
cs
inc
loop
adc
mov
and
inc
pop
inc
pop
aaa
push
pop
xchg
dec
jmp
or
or
inc
and
popa
and
inc
mov
pop
add
roll
nop
pop
pop
pop
test
jecxz
outsl
arpl
loope
add
in
dec
mov
out
fs
dec
imul
or
inc
adc
adc
fsubrs
and
lret
sarb
push
mov
mov
dec
add
and
inc
and
xor
inc
pop
jae
push
push
inc
and
adc
xchg
add
or
pop
dec
jp
loop
adc
insb
mov
pop
push
pop
push
add
inc
ret
inc
loop
sbb
pop
or
adc
jb
insl
pop
adc
sbb
sbb
add
adc
jne
inc
adc
or
call
lahf
sahf
mov
pop
in
lds
and
cmp
nop
mov
sub
sub
mov
inc
pop
sbb
add
pop
or
mov
pop
dec
pushf
or
cmp
ucomiss
adc
push
push
call
add
jo
xor
add
cmp
cli
fidivl
fld
pop
adc
roll
les
or
jbe
and
pop
sbb
adc
or
and
fmul
xor
xor
fstpt
sbb
or
les
inc
and
add
add
pop
aad
and
dec
pop
inc
cmp
adc
and
subl
push
hlt
push
and
addl
or
dec
mov
adc
pop
add
pop
nop
aad
cs
inc
pop
flds
inc
and
dec
or
mov
out
add
pop
dec
pop
adc
add
sbb
pop
or
push
pop
cmp
adc
dec
and
push
add
mov
sbbl
mov
and
icebp
fcoml
add
lods
sub
adc
push
and
js
lock
shll
xor
pop
push
addl
and
adc
adc
pop
mov
popa
cmp
nop
jo
pop
and
notb
fwait
jnp
mov
loope
pop
and
adc
sbb
pop
sbb
or
loope
inc
addl
pop
pop
add
addb
push
push
loope
test
pop
not
jle
mov
adc
mov
and
test
imul
dec
pushf
rcrb
cmp
sub
insl
sub
addb
pop
mov
pusha
pop
js
or
pop
rclb
or
adc
addl
adc
inc
jb
fimuls
addl
addb
pop
nop
cmp
je
pop
push
shlb
dec
xchg
mov
sub
popa
enter
add
nop
mov
ret
adc
xor
mov
and
dec
lods
inc
and
pop
xor
jl
mov
aas
ljmp
out
lods
push
repnz
push
mov
adc
add
orl
inc
and
cmp
sbbl
or
inc
pop
cmp
loop
bound
adc
dec
pop
mov
cmpsl
popa
lar
outsb
addb
lcall
inc
je
mov
jge
fsubrs
ret
or
add
addr16
stos
add
and
in
dec
add
dec
or
add
pop
dec
cwtl
inc
xchg
jg
dec
sbb
mov
sbb
arpl
cmp
sbb
pop
adc
add
and
add
lods
add
xor
or
dec
sbb
pop
rolb
push
nop
push
repnz
pop
xchg
sub
pop
enter
ret
or
dec
scas
ret
inc
pop
sub
fstps
inc
pop
nop
sti
adc
mov
cmp
push
je
in
add
test
sub
dec
pop
mov
inc
and
or
lods
push
add
push
cmp
sub
pop
mov
nop
pop
xchg
add
pop
adc
adc
add
inc
and
add
push
hlt
xor
inc
pop
in
js
inc
and
add
adc
nop
pop
pushf
inc
and
nop
bound
std
sbb
or
mov
jno
int3
mov
addb
ds
push
xchg
mov
pushf
push
and
dec
pop
sub
inc
loop
pop
and
dec
faddl
pop
add
mov
xor
push
adc
mov
jno
adc
push
dec
sbb
cwtl
inc
xchg
sub
push
push
xchg
sbbl
or
js
add
nop
sbb
mov
push
and
and
and
dec
pop
xor
gs
fdiv
mov
jae
inc
bound
add
addl
xchg
pop
inc
and
lock
ss
jbe
pop
icebp
inc
cmp
mov
stos
xor
push
and
mov
mov
pop
or
pop
cld
pop
inc
cmp
mov
add
add
test
inc
add
sub
dec
pop
inc
and
adc
inc
popa
pop
pusha
or
add
lcall
nop
xor
inc
xchg
scas
or
inc
and
and
addl
mov
xchg
add
add
sbb
xchg
mov
adc
xor
add
pop
ficomps
mov
ds
movb
scas
leave
push
pop
xor
jns
xchg
add
sub
inc
and
dec
cmp
lret
sbb
pop
test
dec
mov
lea
add
or
and
adc
push
xor
and
ret
mov
addl
cmp
push
push
pop
dec
notb
jbe
inc
pop
jnp
pushf
sbb
or
and
notb
lahf
adc
or
sbbl
adc
ss
loop
or
pusha
fwait
or
add
and
pop
fildll
adc
mov
add
mov
or
addl
pop
sub
sub
nop
mov
fcom
adc
adc
inc
bound
arpl
mov
ret
pop
inc
addl
and
mov
adc
xchg
add
in
adc
and
inc
and
or
mov
fcomps
pop
adc
mov
inc
mov
adc
sub
dec
fcomp
ds
dec
cmp
and
pop
ret
pushw
inc
addl
mov
and
dec
fsubrl
pop
adc
test
add
xor
mov
jp
adc
aam
add
add
pop
push
push
push
sbb
add
pop
js
jmp
out
pusha
mov
pop
jo
adcb
push
shll
push
and
cld
push
adc
in
or
add
lock
clc
in
xchg
mov
xorb
push
inc
mov
jmp
popl
cmp
and
xor
sbb
jno
shlb
adc
movsb
mov
or
add
addl
mov
sti
stos
pop
lret
jb
nop
pop
loopne
and
add
sbbl
nop
pop
test
and
dec
pop
and
mov
jecxz
call
adc
pop
push
dec
pop
inc
inc
sub
sarb
sbb
or
cmp
and
dec
fsubrs
and
dec
ss
and
sbb
push
add
out
adc
daa
scas
popf
or
fsubs
nop
cwtl
cmp
inc
ret
pop
imull
movsb
ret
sbbl
inc
pop
pop
or
pushf
loopne
adc
and
inc
and
dec
jecxz
mov
adc
xor
or
mov
dec
add
push
lcall
pop
inc
bound
add
add
adc
and
inc
loop
and
cmp
add
and
test
add
or
cwtl
outsb
pop
or
push
out
test
add
pop
inc
xchg
pop
push
inc
adc
inc
lcall
shrl
lcall
mov
add
pop
or
aam
jl
sbb
pop
xlat
jg
adc
into
adc
addl
pop
add
pop
and
xor
jp
cmp
mov
xchg
or
adc
push
and
xchg
rcrb
adc
sbb
push
add
mov
adc
addl
ret
pop
les
adc
pop
jae
adc
and
mov
pop
or
mov
mov
add
fdivp
and
callw
pop
repz
inc
and
adc
call
sbbl
pop
aad
pop
mov
pop
pop
testl
fildll
or
pop
adc
cmpl
sub
sbb
or
stos
add
inc
bound
nop
push
loop
int3
test
mov
sbb
ficompl
js
and
and
mov
and
mov
cmp
inc
sbb
push
in
mov
sbb
sub
add
ret
xor
std
dec
or
push
cwtl
and
mov
les
nop
cmp
dec
sbb
add
sbb
addb
and
inc
sbb
pusha
loopne
add
stc
sub
cmc
lds
sbb
sarl
xor
aam
add
mov
ss
pop
inc
push
or
adc
sbb
test
adc
popa
xchg
mov
and
xchg
xor
sbb
repz
add
fcoml
cmp
inc
addb
lret
les
rcrb
fmul
inc
sbb
leave
daa
nop
loop
adc
mov
sbb
lds
add
jg
sub
sbb
pusha
out
and
sbb
inc
adc
and
sbb
and
adc
mov
stos
insb
mov
add
push
in
sub
or
jg
scas
mov
and
scas
jg
adc
dec
push
scas
mov
xchg
lods
fisubrl
cmp
loop
and
shll
sbb
mov
adc
sbb
xchg
movsb
and
fwait
xchg
sbb
repnz
and
and
sbb
aad
stos
lods
loopne
add
ret
dec
adc
call
inc
sbb
xchg
cmp
adc
sbb
and
xchg
fiadds
sbb
inc
sbb
aad
push
out
xchg
pop
popf
jno
mov
rolb
in
and
sbb
adc
dec
lods
mov
or
or
or
mov
test
sbb
pusha
lods
inc
and
sbb
inc
add
mov
push
loop
xor
ja
or
xor
cmp
adc
add
or
flds
enter
add
pop
cmc
adc
popa
push
aas
test
and
mov
and
dec
mov
adc
sbb
imul
add
cs
adc
int3
sbb
cmpsl
ljmp
test
add
jg
cwtl
xor
sbb
jbe
and
sbb
les
sbb
and
popa
call
mov
sbb
sarl
jmp
cs
or
sbb
les
dec
jl
scas
inc
sbbb
aam
jnp
inc
sbb
popf
inc
rcll
sbb
add
orb
fimull
pop
or
bnd
sub
test
sbb
mov
adc
dec
js
das
or
sbb
or
sbb
sub
sbb
sbb
les
dec
sbb
sub
movsb
cmpsb
and
lods
mov
and
sbb
out
inc
ficoms
test
sub
add
movsl
push
add
add
cmpsl
loop
sbb
lahf
or
mov
add
add
sbb
nop
xor
mov
fsubr
sub
sbb
add
bound
add
fsubrs
loope
sub
dec
xchg
mov
adc
mov
sbb
and
aam
mov
sbb
test
sbb
and
stos
pop
inc
add
and
mov
mov
inc
test
inc
or
addb
test
adc
loope
sbb
icebp
xchg
test
mov
mov
pop
pop
add
fstps
nop
lock
sbb
testb
aam
hlt
adc
and
xchg
cs
lock
sbb
jne
and
sub
or
add
pop
out
add
adc
sbb
xchg
dec
cmp
and
aas
enter
add
lret
lock
in
clc
sbb
mov
and
rcr
adc
xchg
xor
loope
add
jp
js
or
les
popf
mov
inc
dec
cmp
cmc
xchg
sbb
fildll
lret
mov
dec
adc
insb
pop
sbb
add
sbb
mov
sbb
sub
test
add
mov
nop
sbb
icebp
add
cmp
inc
sbb
outsb
mov
and
xchg
mov
movsb
push
adc
sbb
cmp
jo
add
sarl
shl
add
push
push
add
nop
sbb
mov
sbb
adcb
sub
out
sub
and
pushf
push
sbb
mov
add
test
mov
nop
mov
cmp
fcoml
sbb
sub
and
test
mov
pop
sbb
popl
adc
inc
loop
sbb
icebp
add
lret
mov
sbb
sbb
inc
inc
sub
sbb
cmpsb
adc
mov
add
pushf
mov
push
sbb
and
in
and
sub
in
add
adc
adc
pop
push
sbb
es
adcb
sbb
and
xchg
inc
cmp
adc
test
inc
or
or
adc
cld
test
or
jnp
or
test
add
add
sbb
inc
add
sbb
cmp
mov
and
mov
add
mov
sbb
adc
add
addr16
add
add
mov
sbb
and
cmp
xchg
movsl
add
xor
add
sbb
nop
xor
les
sbb
mov
sbb
mov
add
or
pop
xor
or
or
push
adc
jno
cmp
xor
sbb
xchg
add
sbb
mov
or
adc
cmp
sbb
nop
mov
test
push
sbb
pop
xor
push
rorl
mov
and
add
aaa
push
ss
pop
scas
sub
sbb
add
subl
add
das
incl
adc
int3
gs
and
sbb
test
in
add
sbb
adc
add
xchg
adc
and
call
cmp
and
and
cwtl
mov
lea
jecxz
add
lods
or
adc
add
je
inc
ret
fwait
test
roll
int3
loop
test
sbb
andb
addb
push
sbb
mov
sbb
lcall
inc
and
pop
sbb
les
fcompl
ret
stos
pop
xor
add
inc
sbb
sbb
pop
pop
push
xlat
rcr
pop
push
ds
inc
addb
aas
pop
and
rolb
mov
unpckhps
dec
or
inc
or
xchg
sti
adcb
pop
aam
or
adc
mov
pop
mov
pop
lods
pusha
jnp
inc
or
xchg
jno
and
cmp
jge
add
pop
add
rcrb
fs
and
mov
and
push
mov
fs
cmp
adc
mov
and
mov
in
pop
les
mov
cmpsl
mov
push
mov
push
addl
js
and
mov
mov
dec
fcoml
mov
sub
inc
icebp
pop
sub
addb
add
subl
or
adc
adc
lock
cmp
cmpsl
adc
jnp
push
outsb
cmp
add
mov
jno
mov
imul
cmp
mov
aaa
adc
ljmp
pop
fcoml
inc
cmpb
mov
fsubrs
mov
les
mov
xor
loope
add
in
dec
rolb
mov
test
mov
mov
and
and
xor
add
mov
fcomi
in
or
in
dec
test
mov
adc
jno
add
imul
rcl
repz
jno
or
adc
cli
adc
mov
inc
add
insb
in
mov
mov
xchg
mov
and
add
mov
add
enter
inc
ret
sub
xor
add
mov
push
pop
orb
mov
shrb
mov
lods
or
adc
les
clc
mov
std
arpl
out
sbb
mov
mov
sub
mov
icebp
call
sub
pop
test
mov
xor
stc
sub
inc
sub
scas
or
add
mov
xchg
mov
shl
and
and
mov
out
pop
test
clc
iret
repz
pop
push
xor
jcxz
adc
jns
or
or
sub
fs
or
add
or
ficoml
xor
jl
push
or
add
dec
push
repnz
jns
add
dec
sub
inc
inc
add
mov
add
mov
stos
and
mov
filds
mov
push
mov
inc
test
enter
les
cs
xor
jno
adc
mov
mov
ret
add
movsl
je
pusha
gs
test
jp
lahf
call
inc
cmpb
outsl
xor
add
jbe
mov
loop
or
adc
mov
mov
or
adc
mov
popf
sbb
ret
addr16
adc
jno
dec
pushf
jb
loopne
mov
xchg
dec
leave
inc
dec
dec
test
mov
and
subl
adc
add
int
inc
addb
lahf
imul
fnstcw
rcr
adc
mov
clc
fiadds
hlt
mov
stc
loop
dec
sub
adc
add
sub
adc
and
js
or
adc
mov
add
andl
aad
sub
xchg
movsl
out
lcall
aaa
push
and
dec
flds
les
add
testl
jg
dec
fcoml
fnstenv
data16
and
jp
sbb
flds
push
inc
or
test
and
add
fsubrl
xor
ds
and
mov
and
sarl
add
fsts
fmuls
pop
inc
or
jno
or
add
fldenv
adc
fcmovbe
in
fsin
jp
adc
fnstcw
sub
les
pusha
testb
sbb
neg
out
or
adc
and
pop
adc
and
pop
rclb
inc
loop
fsts
or
sub
in
jo
negb
inc
inc
sub
xchg
add
add
adc
adc
mov
or
pop
test
or
flds
les
and
add
and
mov
es
fnstcw
and
fwait
push
ficomps
sbb
or
sbb
jp
adc
outsb
inc
pop
or
adc
push
mov
and
flds
dec
add
nop
mov
loope
and
inc
or
sti
loopne
xorl
fnstenv
pop
test
or
bound
inc
add
and
es
mov
and
flds
nop
mov
add
faddl
and
outsl
add
ja
flds
flds
les
fldenv
inc
loop
pop
flds
and
pop
inc
push
adc
imul
or
fstps
les
add
iret
es
inc
sbb
es
fisubs
out
inc
or
aaa
adc
and
es
cli
daa
mov
jmp
xor
sarl
imul
mov
shl
mov
xchg
inc
inc
push
addr16
fcmovnu
das
and
cmp
addr16
les
fldenv
inc
loop
sbb
fxch
xchg
sub
repnz
and
sub
dec
out
or
es
faddl
daa
repnz
addr16
xchg
inc
and
jmp
and
inc
add
fld
pop
and
es
adc
and
data16
frstor
call
and
push
call
mov
sbb
add
fsubr
mov
adc
daa
fldenv
aam
icebp
mov
addr16
push
xchg
adcb
flds
fnstenv
in
add
dec
lock
add
fnstenv
add
cs
inc
add
jns
fldenv
in
imul
outsb
or
adc
fcomps
fcoml
push
subl
dec
fldenv
out
or
adc
test
fcoml
mov
fyl2xp1
pop
jno
or
scas
adc
push
les
inc
fxch
push
mov
push
adc
add
loope
and
or
fstps
add
sarl
mov
and
or
imul
flds
push
adc
test
fldenv
add
nop
push
push
fdivl
sbb
lds
dec
test
mov
add
or
and
cmovb
shrl
jne
add
lods
or
call
mov
push
fsts
add
and
cmp
push
adc
and
mov
and
jne
sbb
test
loope
and
inc
fdivrl
cmp
add
fs
stos
add
inc
inc
test
and
inc
and
or
push
or
pop
arpl
je
add
or
les
cmpsl
xor
sti
cmp
xor
aad
es
test
add
sbbb
adc
fnstenv
les
inc
fsts
sbb
mov
nop
fldenv
push
xchg
mov
push
dec
push
adc
and
dec
and
xchg
cmp
and
cmpsb
adc
sub
and
adc
ljmp
fstps
inc
loop
ret
test
pop
and
jle
push
cmovb
sbb
je
inc
add
fnstenv
sar
incl
faddl
mov
fsts
les
jo
and
xchg
xchg
lcall
adc
and
fldenv
js
add
rorl
in
shl
inc
roll
leave
or
inc
adcl
adc
incb
or
test
or
add
rolb
sbb
adc
push
inc
inc
or
lock
std
push
xor
mov
scas
lcall
nop
xor
adc
sarl
loop
or
fsts
inc
inc
addb
or
sbb
insb
push
flds
sub
lcall
sbb
mov
test
sbb
test
sbb
sub
inc
addb
inc
mov
mov
adc
and
sbb
add
pop
mov
push
push
fs
cs
sbb
or
adc
fldenv
inc
loop
adc
flds
pop
adc
dec
dec
fcoml
mov
and
and
push
jb
xchg
or
sbb
add
aaa
js
sbb
or
adc
pop
js
add
pop
lret
sbb
xchg
into
std
push
and
scas
fsts
and
shl
pop
add
push
stos
std
lret
mov
pop
mov
cmp
fldcw
add
flds
adc
imul
push
add
push
sub
inc
add
flds
or
idivb
loop
and
int3
push
popa
ret
fldenv
and
hlt
mov
rcr
icebp
cmpsb
mov
adc
adc
jno
or
nop
fnstenv
mov
sti
cmp
pop
sub
fldcw
adc
sub
or
sbb
cmp
mov
inc
or
out
adc
jno
add
add
xor
aad
test
test
mov
adc
and
or
push
iret
aaa
movd
test
or
mov
aaa
call
sub
lea
sbb
or
mov
test
mov
inc
or
add
mov
cmp
add
pop
jo
mov
faddl
mov
out
out
enter
mov
mov
mov
dec
outsb
inc
xor
jbe
daa
inc
push
mov
add
mov
loop
mov
scas
inc
mov
mov
add
faddl
popa
push
nop
fmuls
and
push
or
test
mov
inc
cmpb
xchg
sahf
push
loop
push
jo
and
setnp
add
jle
xchg
test
leave
addl
pop
xor
add
pushf
cmp
jne
add
dec
bound
adc
adc
inc
mov
add
mov
lea
or
lcall
xchg
push
xchg
pop
sbb
adc
inc
sub
add
mov
fwait
out
and
xor
cwtl
mov
pop
jbe
inc
cmpb
add
mov
loop
mov
push
adc
nop
sbb
mov
inc
or
inc
cmpb
push
addl
test
or
jno
cwtl
adc
and
push
mov
js
test
cltd
push
cs
adc
mov
or
adc
adc
cltd
mov
and
or
cltd
in
add
add
cwtl
sahf
cltd
or
adc
stos
push
cltd
push
inc
push
out
inc
jo
nop
mov
subb
jo
or
mov
roll
sbbb
xchg
adc
pop
enter
arpl
sub
or
adc
xchg
xor
inc
addb
jo
mov
stos
ja
cmp
xchg
test
adc
cltd
fmuls
xor
mov
mov
leave
ret
dec
cmp
or
aaa
adc
inc
cltd
xor
cltd
jecxz
sbb
add
or
les
cltd
add
mov
and
sub
pop
adc
xchg
pop
cli
add
push
and
iret
xor
cmpsl
jl
sahf
lret
out
push
sbb
jb
or
sti
cmpsl
inc
dec
push
and
sbb
inc
sbbb
add
cltd
fdivl
pop
adc
and
sub
pop
adc
sub
lret
pop
jo
mov
cmp
inc
or
add
lds
inc
ret
rcl
lods
or
data16
sahf
xor
sbb
jno
adc
icebp
shl
xchg
mov
mov
add
ljmp
xchg
rorb
imull
push
xor
jg
inc
add
cltd
push
and
sub
jno
cltd
das
add
mov
inc
js
add
inc
and
inc
addb
sbbl
sbb
adc
leave
rcrl
insl
mov
cltd
sbb
inc
inc
or
test
imul
nop
fcomps
cltd
mov
dec
mov
jns
fwait
sub
and
les
and
inc
sbbb
sbb
loop
cltd
aam
mov
or
repz
out
xchg
adc
call
test
cltd
outsb
xor
or
les
mov
cltd
cmp
or
not
or
cmp
pop
fidivs
adc
cltd
cmp
add
insb
repz
add
cwtl
shlb
and
add
movl
adc
and
gs
mov
pop
adc
and
sub
cltd
lods
icebp
jmp
loop
and
cltd
or
dec
pushf
xchg
out
sbb
cmp
jo
add
mov
inc
inc
mov
les
cltd
fstpl
popa
xchg
js
xor
fsubrl
push
icebp
cmp
add
in
ret
adc
cltd
adc
jno
or
bound
test
mov
ret
inc
call
test
and
pop
imull
dec
sbb
mov
cltd
cmp
add
cltd
sub
and
cmp
and
sbb
cltd
or
ds
xor
cltd
aas
or
aas
pusha
or
and
cmp
call
adcb
mov
dec
rcr
or
xchg
and
push
cltd
jbe
add
ja
cltd
pop
xor
lea
inc
cltd
aaa
lret
rorb
xchg
cltd
in
adc
cltd
pop
das
inc
call
and
sbb
add
outsb
cltd
sub
fmull
sbb
mov
or
mov
and
scas
mov
and
movsl
js
inc
loop
adc
faddl
and
sub
ret
sub
inc
adc
cltd
dec
out
adc
orl
in
xor
add
inc
bound
cltd
mov
add
dec
cltd
add
ret
add
js
pop
test
cltd
or
push
and
add
cltd
ret
mov
fcoml
add
cmpsl
xchg
mov
dec
jge
sbb
cltd
add
adc
shlb
rolb
sub
pusha
jb
addb
test
cltd
pop
mov
add
enter
popa
das
insl
xchg
push
popf
aam
sbbb
mov
add
cltd
mov
out
lret
sbb
stos
adc
loope
cltd
adc
jno
sbb
cltd
jae
push
push
push
inc
test
or
mov
in
adc
cltd
loop
jl
push
adc
cltd
mov
pop
mov
cltd
popa
sub
lods
pusha
cltd
xor
and
xchg
sub
aaa
and
ja
sub
xor
cltd
or
lret
dec
fwait
dec
xchg
push
adc
jno
aaa
cmp
bound
ret
add
jecxz
and
aaa
in
and
mov
inc
ret
scas
add
add
dec
mov
xchg
cmp
pop
and
inc
or
inc
and
pushf
cmp
or
adc
sub
out
sbb
cltd
pushf
out
inc
or
lcall
cltd
add
lods
add
inc
inc
loopne
cltd
icebp
mov
cltd
inc
and
negl
push
push
cmc
push
inc
pop
dec
cltd
outsl
pop
jmp
cmp
and
mov
sbb
cltd
jns
add
inc
push
mov
sub
xchg
add
sub
mov
outsl
fstl
cli
jbe
sbb
jns
fsubrl
sbb
mov
push
fbstp
rclb
adc
and
stc
sub
inc
test
or
dec
test
repnz
push
test
stos
adc
cltd
and
xor
and
nop
js
cltd
push
or
add
inc
gs
inc
cltd
outsb
shrl
adcb
in
push
cltd
in
jl
adc
cltd
adc
jno
add
add
sbbb
adc
xor
cltd
stc
test
lea
rcr
cmpsb
inc
addb
sub
dec
sbb
fmull
addr16
insb
cltd
out
sub
es
sbbb
into
mov
rcrl
push
adc
add
mov
lahf
stos
push
leave
call
inc
sbb
dec
cmp
cwtl
mov
loop
and
outsl
push
pop
adc
lea
cltd
and
aam
sub
sbb
les
mov
test
and
and
push
cltd
jge
mov
xor
cltd
test
js
sub
cltd
xor
or
add
cltd
and
lock
mov
or
adc
les
and
es
es
adc
jno
aaa
es
lods
cmpsb
cltd
fdivs
and
and
mov
cltd
and
sub
cltd
movsb
and
jns
in
pusha
nop
add
or
ret
cltd
mov
add
cltd
mov
add
and
push
out
sub
cltd
dec
xor
adc
and
cmp
sbb
add
cltd
and
and
fs
imul
xor
lret
call
loopne
adc
and
sbb
or
add
cltd
movsb
nop
xchg
or
nop
cmp
fdivl
cltd
or
inc
bound
xor
sbb
test
or
test
mov
test
mov
add
push
cmpsb
pop
sbb
sbb
scas
out
add
add
rorb
cltd
popf
je
sbb
and
aas
lahf
sub
les
cltd
or
enter
inc
cltd
cmp
or
add
test
movsb
push
xchg
cmp
xchg
mov
and
add
inc
bound
adc
and
xor
or
add
or
cltd
add
subl
adc
inc
cltd
aad
outsb
mov
or
cltd
sbb
out
andb
and
movsl
sbb
test
mov
aas
push
jbe
mov
push
xchg
lods
push
add
stc
adc
xchg
popa
cmovb
mov
and
inc
fs
fisttps
add
cmp
cmp
and
adc
or
adc
adc
cltd
inc
dec
ja
inc
or
movsl
adc
cltd
test
or
rolb
add
push
sbb
adc
cltd
inc
mov
cltd
and
roll
dec
sbb
js
adc
cltd
xchg
or
adc
je
add
scas
add
add
or
test
inc
cltd
xchg
sbb
cltd
lds
mov
or
or
imul
push
cltd
pop
mov
iret
inc
sub
pop
jle
mov
and
pushf
xor
clc
sub
adc
loop
cltd
dec
mov
addb
add
xor
xor
popf
daa
movsb
inc
add
cltd
and
out
adcb
xor
adc
cltd
addb
fisubs
inc
cltd
mov
mov
jae
sbb
ret
inc
addb
adc
cmp
or
or
cltd
call
inc
addb
cmp
mov
lds
jb
in
insb
fmulp
pushf
out
cmp
imul
cltd
stc
push
inc
and
add
and
pop
cltd
or
adc
fcompl
adc
sarb
dec
push
jno
sub
ljmp
and
or
and
or
or
adc
rcrb
mov
or
faddl
add
les
cltd
push
nop
xor
fisubrs
cltd
push
fwait
and
or
adc
cmp
cmp
sub
rclb
dec
adc
cltd
mov
mov
add
sub
mov
add
push
add
dec
mov
sub
test
or
insb
dec
sub
pop
sbb
adc
and
xchg
cltd
adc
jno
and
inc
call
add
aas
add
ret
cltd
imul
call
or
cltd
int
ss
dec
and
mov
adc
cltd
stos
or
jno
add
push
cltd
mov
or
lods
jbe
pop
test
cltd
mov
cltd
int3
adc
and
pusha
cltd
test
mov
outsb
cltd
les
loop
push
sub
add
cltd
sub
pop
test
mov
or
mov
cltd
test
push
mov
push
cltd
adc
or
adc
push
aas
lods
aam
push
or
loop
sub
mov
cmp
cltd
push
shrl
add
out
call
or
inc
loop
sbb
cltd
test
or
stos
sbb
xchg
inc
and
es
fdivl
stos
cltd
jg
mov
enter
es
xchg
test
or
nop
cmp
sbb
dec
jecxz
sbb
jns
add
mov
cltd
dec
pushf
out
cmpsb
mov
daa
sub
je
dec
adc
and
cmp
adc
lret
hlt
js
and
and
and
mulb
repnz
sub
fcomps
inc
loop
scas
js
adc
add
addl
cltd
ret
out
inc
add
push
test
jno
and
sub
lahf
cmpsb
lock
or
xchg
pop
and
dec
adc
add
sbb
xchg
fisubs
icebp
cwtl
sub
mov
and
dec
cltd
loope
push
push
and
or
jle
ret
ret
add
push
and
movsb
int
xchg
icebp
mov
jb
push
dec
test
or
sub
and
es
mov
add
inc
inc
cltd
add
push
test
mov
mov
dec
cltd
pop
or
inc
loop
xchg
cltd
add
mov
nop
jnp
mov
sub
cltd
mov
cltd
adc
and
cltd
inc
inc
and
lcall
lcall
inc
or
add
cmp
jne
cltd
add
faddl
add
mulb
cltd
xlat
je
mov
incl
bound
cltd
dec
or
outsl
cmp
xchg
or
nop
cltd
js
push
test
mov
dec
stos
xchg
add
cltd
push
and
sbb
cltd
add
adcb
addb
mov
mov
inc
mov
nop
cltd
or
or
in
add
fsubrs
cltd
clc
outsb
aam
pop
or
cltd
daa
dec
fsubrl
add
in
je
jo
add
adc
inc
and
xchg
add
push
loope
adc
add
cltd
sub
pop
fwait
cltd
inc
add
scas
cltd
or
add
faddl
sub
and
inc
and
add
mov
and
mov
cltd
and
fcomp
jb
cltd
and
xchg
push
out
lcall
mov
and
and
or
add
sub
xchg
add
jp
mov
and
dec
inc
or
and
inc
repz
adc
popa
pop
cltd
dec
pop
adc
cmc
loop
les
nop
push
adc
and
jne
test
pop
or
cmp
inc
cltd
push
xchg
adc
xor
stos
mov
popf
or
imul
cmp
nop
cltd
or
mov
adcb
xor
daa
add
cltd
outsl
popf
mov
xchg
and
and
std
adc
test
mov
loope
xor
jecxz
add
icebp
dec
les
nop
cltd
movups
and
cwtd
add
pop
or
adc
or
add
add
and
push
sub
inc
inc
add
mov
xor
pop
add
scas
jo
and
js
les
nop
cltd
mov
outsb
mov
ret
sub
mov
sbb
mov
les
xlat
inc
add
or
inc
sbbb
shll
inc
add
xchg
adc
and
push
or
adc
jg
cltd
mov
adc
inc
or
cwtl
add
adc
cltd
xchg
jo
test
pcmpgtw
xor
fdivr
cmpsl
xchg
mov
add
cltd
and
fcoml
jle
and
adcb
cltd
mov
cltd
mov
and
push
shlb
cmpl
fistps
mov
es
adc
cltd
or
adc
push
sub
mov
cwtl
popf
call
add
out
and
mov
cmp
cltd
daa
mov
push
inc
test
cltd
icebp
pop
adc
jno
enter
sub
jbe
pop
and
les
mov
out
ficoms
das
dec
loop
or
cmpl
pusha
push
and
insl
aas
gs
inc
repnz
leave
xor
push
jb
dec
or
add
in
aas
push
std
add
dec
sahf
neg
add
or
pop
push
sbb
mov
inc
add
mov
and
or
cltd
int3
xchg
and
lcall
aam
inc
or
cmp
in
xchg
mov
nopl
inc
cltd
fstpt
or
adc
addb
and
cltd
adc
xor
lods
addb
jo
inc
cltd
jmp
dec
and
lea
fcoml
pusha
loopne
xchg
cltd
pop
mov
mov
xor
inc
mov
push
adcb
cltd
pop
and
ficomps
inc
sub
add
xor
decb
jl
call
call
inc
loop
sub
rcll
and
jb
and
cld
xchg
add
and
les
mov
mov
sbb
adc
jno
or
cltd
inc
pop
cmp
adc
cltd
cmp
addb
fldt
arpl
pop
arpl
mov
jne
nop
js
out
add
push
cmp
into
add
inc
arpl
inc
pushf
inc
inc
or
jecxz
adc
hlt
nop
jb
mov
fmull
mov
push
and
fdivp
xchg
mov
xor
test
cltd
and
sbb
aas
dec
cmp
nop
cltd
xor
cltd
add
add
imulb
daa
and
adc
loopne
rclb
cltd
mov
addb
add
sbb
repz
xor
inc
addb
aam
or
adc
icebp
mov
cltd
sub
stos
or
jmp
dec
cltd
ficoml
add
cwtl
cltd
popf
or
dec
cmp
fwait
mov
or
adc
test
inc
mov
xchg
cmc
mov
and
outsl
arpl
or
cmp
xchg
jnp
inc
bound
cltd
or
and
mov
adc
test
mov
pop
movsl
inc
test
loopne
mov
cltd
mov
nop
cltd
mov
xchg
test
dec
dec
fmuls
inc
cltd
xchg
adc
push
sbb
add
mov
addb
cmp
sub
or
adc
inc
add
sbb
pusha
sub
inc
adc
or
mov
mov
push
cltd
out
pop
xlat
pushf
stos
test
cltd
dec
push
sub
cltd
mov
or
jno
arpl
jbe
and
mov
mov
adc
pop
inc
or
or
adc
and
js
mov
lahf
adc
ja
or
or
cltd
repnz
cltd
mov
loopne
mov
xor
sbb
add
adc
cltd
dec
test
push
xor
mov
inc
bound
jns
faddl
mov
inc
addb
and
mov
test
mov
add
add
adc
test
rcrb
sbb
addb
int3
fcoml
nop
cltd
popa
shrb
add
cltd
jno
lret
lret
pop
mov
and
sub
sbb
test
or
pusha
cltd
addb
mov
mov
and
test
mov
xor
test
xchg
test
or
mov
cmp
fwait
and
jno
and
inc
sbbb
add
push
adc
cltd
out
or
add
inc
cltd
out
or
add
cltd
xor
sbb
test
mov
jle
mov
inc
and
adc
and
adc
xor
or
cmpb
loopne
gs
mov
cltd
cmpsb
lods
cmp
mov
pop
cwtl
lahf
adc
and
outsb
cltd
push
dec
iret
int
imul
or
or
or
adc
cltd
or
cld
push
cmp
push
xor
adc
enter
sub
adc
cmp
aas
pop
cs
addb
ret
cmp
mov
nop
cltd
and
inc
cld
cltd
mov
and
sub
cltd
aaa
ja
add
addr16
orl
inc
ret
cltd
jno
roll
pop
pop
jno
adc
cltd
in
add
add
sbb
cltd
fsubrs
test
pop
sub
inc
or
adc
and
pop
adc
inc
bound
loope
jne
les
test
mov
insb
mov
and
push
mov
bound
fimuls
pop
and
add
mov
push
sbb
mov
and
sbb
je
dec
dec
dec
arpl
sub
cltd
imul
sbb
ja
add
or
cltd
add
and
add
ja
sbb
lea
pusha
and
sub
adc
pop
call
mov
and
cltd
adc
jno
mov
or
and
adc
push
cltd
jle
add
jo
push
inc
test
or
cltd
sub
sbbb
jl
adc
mov
adc
imul
sbb
add
cltd
jae
add
gs
and
test
and
add
or
cltd
jno
pop
pop
repz
mov
cmpsb
dec
jno
adc
cltd
jmp
inc
loop
stc
dec
and
xchg
in
adc
cltd
shll
mov
mov
or
decl
pop
test
sub
stos
mov
inc
ret
add
pop
add
add
testl
jp
pop
or
or
and
push
cltd
sahf
addb
repnz
popa
addl
cltd
scas
and
dec
mov
sub
cmp
cltd
lock
adc
push
test
cltd
fadds
inc
addb
insb
rolb
pushf
and
adc
adc
and
adc
and
popl
test
or
adc
and
cltd
addb
loope
inc
cltd
mov
xor
inc
sbbb
cltd
adc
xor
clc
incb
adc
pop
and
popa
std
jmp
lahf
inc
outsb
cmpsb
pop
adc
cltd
pop
push
and
inc
pop
cltd
sub
hlt
add
arpl
and
nop
mov
rcrl
pop
cltd
imul
pushf
add
shlb
cltd
cwtl
and
xchg
add
and
loope
dec
fmuls
dec
or
sub
sub
mov
xchg
xchg
jae
xchg
cmpsl
or
ret
xchg
cmp
cmpb
mov
xlat
inc
add
jno
enter
mov
push
add
mov
aam
fadds
adc
cltd
cmp
and
sahf
cltd
add
sub
lea
cltd
jl
sub
jl
inc
test
cltd
jecxz
xchg
inc
add
cmpsl
adc
jno
cltd
add
and
ja
xor
mov
cltd
adc
or
inc
add
add
es
xor
push
popa
orb
jbe
ret
inc
in
add
mov
js
cltd
sahf
jnp
adc
or
adc
cmp
imul
and
cltd
mov
dec
cltd
adc
popa
les
clc
add
mov
push
inc
cltd
je
in
adc
loope
jo
add
insb
test
mov
pop
push
mov
and
daa
movsb
popa
adc
imul
cwtl
dec
add
jnp
out
ret
es
mov
dec
call
dec
or
adc
adc
adc
and
pushf
adc
pusha
push
push
mov
add
sub
test
mov
pushf
nop
lock
inc
cltd
add
cltd
sar
cwtl
or
sub
sub
push
and
pushf
cltd
add
or
std
inc
insb
adc
and
add
addl
or
adc
loopne
cltd
add
adc
mov
adc
add
dec
adc
add
add
jbe
jno
adc
adcb
shrb
mov
jo
int
push
or
adc
adc
jg
mov
aam
push
pop
push
or
popa
ss
adc
nop
mov
sub
pop
push
or
inc
sbbb
and
jb
subb
or
adc
mov
sbb
inc
adc
insl
ss
cmp
andb
popa
add
arpl
pop
or
fsubrl
sub
push
stos
inc
or
pusha
jnp
jno
mov
or
push
cltd
orl
jg
cmpb
movb
pop
inc
lock
mov
mov
loopne
add
mov
jg
mov
add
jl
push
std
lcall
mov
or
add
add
cltd
sub
sti
jl
mov
movsb
mov
and
cltd
mov
push
sbb
inc
loop
or
movl
mov
and
add
add
pop
pop
or
loope
mov
inc
push
dec
bound
lods
or
inc
inc
jo
push
push
cltd
stc
cmp
sarl
dec
pop
fistps
js
cltd
push
add
cmpsb
jle
inc
ret
xor
mov
add
and
pop
test
mov
and
je
or
and
push
cltd
dec
or
add
lods
add
add
mov
or
mov
sub
sbb
cltd
sbb
mov
inc
cltd
rcrb
gs
add
loop
cltd
sub
fsubrl
cltd
stos
add
out
push
sub
or
adc
pop
sbbb
mov
lea
adc
xchg
subl
mov
cltd
lret
xor
adc
js
or
cmp
and
or
inc
rcrb
sbb
adc
cltd
or
inc
ret
cltd
add
push
sbb
cltd
sbb
cltd
cld
fnstenv
cltd
add
test
push
ret
das
cltd
fwait
int
pop
mov
call
push
adcb
add
outsb
outsb
sarb
inc
inc
loop
inc
incl
add
nop
mov
or
ss
or
adc
jno
adc
mov
dec
call
cltd
bound
cltd
push
push
push
fsubl
push
push
cltd
add
and
or
adc
js
in
dec
dec
loopne
adc
cltd
adcb
jo
cltd
or
adc
cmp
cltd
adc
jno
and
add
mov
add
sub
sub
jl
add
and
mov
ror
add
jno
jmp
popl
test
adc
and
pop
inc
addb
or
ror
rorb
inc
les
cmp
pop
dec
push
cltd
andl
or
adc
pop
or
add
or
test
cltd
lds
cltd
inc
ret
shll
and
and
adc
inc
loop
cltd
xlat
mov
cltd
add
mov
inc
adc
inc
or
inc
loop
cltd
or
adc
add
cltd
add
mov
mov
inc
loop
or
adc
cltd
data16
adc
inc
and
jbe
add
push
add
mov
cltd
mov
sbbb
inc
mov
mov
or
sub
stos
rcrb
cltd
or
and
xor
sbb
add
inc
cltd
les
std
mov
loope
sub
test
cltd
or
bound
inc
cltd
or
push
inc
and
pop
and
test
cltd
ret
dec
adc
cwtl
test
cmpsb
and
test
cltd
in
add
add
dec
iret
sub
cs
cltd
in
xor
js
mov
and
pop
imul
faddl
int3
je
and
jg
adc
dec
and
sub
add
inc
inc
lods
cltd
or
adc
xchg
enter
push
test
cmp
add
adc
mov
add
cltd
and
dec
mov
cltd
dec
add
adc
and
add
rclb
aad
jno
adc
cltd
adc
and
sahf
cltd
adc
and
gs
jle
inc
add
push
mov
jno
push
cltd
mov
adc
adc
pop
or
push
add
cltd
push
or
test
mov
xchg
push
cltd
add
add
jne
fdivs
cltd
into
or
push
or
adc
jo
or
cltd
add
inc
and
adc
mov
sub
add
inc
or
pop
pushf
das
adc
cltd
in
inc
mov
dec
jmp
addl
cltd
and
add
lcall
inc
cltd
sub
scas
or
add
add
cltd
or
add
push
cltd
shll
and
inc
cltd
cltd
cmpsl
fiadds
popa
fucom
inc
nop
mov
jo
mov
ds
test
nop
cltd
insb
push
add
mov
cltd
stos
fs
test
or
cld
out
xchg
lret
and
or
cltd
and
jmp
fsub
mov
add
or
inc
cltd
and
lods
push
dec
pop
rcrl
and
cmp
mov
popa
adc
cltd
or
and
icebp
add
add
jle
mov
cmp
iret
adcb
popa
rcrb
or
inc
add
xor
or
nop
sbb
cltd
dec
or
cltd
add
les
cltd
adc
push
cltd
adc
pop
and
test
mov
loop
inc
sbbb
mov
lret
push
iret
repz
add
and
stos
lret
lret
cmp
mov
adc
shlb
cltd
in
test
pop
in
ds
incl
out
jmp
sbb
ret
xchg
out
xor
cmp
testb
fldenv
xchg
test
pushf
xchg
iret
add
outsb
and
cltd
jno
inc
adc
and
test
or
inc
out
dec
sbb
push
or
add
fcompl
sub
xor
xchg
pop
test
scas
pop
xor
push
addb
or
adc
cltd
mov
rcll
xchg
cltd
or
xorb
inc
xor
cltd
push
in
and
jp
pop
xor
and
mov
cltd
aas
js
adc
cltd
or
push
or
add
cltd
mov
or
or
pushf
outsl
dec
cmpsl
dec
sbb
and
and
adc
inc
or
and
cltd
xlat
adc
cltd
and
shll
jno
test
cltd
out
mov
fcoms
cltd
add
pop
pop
xchg
inc
dec
sbb
gs
mov
and
insb
xor
or
sub
sbbb
loop
add
pushf
das
pop
add
mov
es
test
nop
mov
xor
das
inc
or
add
or
and
mov
cltd
add
dec
pop
add
or
or
cltd
mov
test
cltd
movsl
test
test
mov
arpl
cmp
xor
enter
xor
adc
aas
jg
enter
in
dec
xor
cli
jno
and
add
xor
cltd
jbe
pop
stos
sub
js
cltd
test
push
enter
sub
cltd
mov
add
pushf
cltd
add
sbb
shll
loop
and
adc
cltd
test
mov
hlt
cltd
adc
jno
fs
and
cwtl
stos
cltd
cltd
test
nop
cltd
xchg
cs
and
cltd
xlat
test
or
push
inc
cmp
inc
ret
cltd
repnz
and
add
cltd
push
or
dec
sub
ss
sub
inc
cltd
adc
jno
or
mov
cltd
neg
add
scas
and
and
cltd
sti
sub
test
cltd
aas
cmp
inc
addb
test
mov
and
cltd
inc
or
addb
cltd
inc
loop
lods
in
xchg
aam
and
jo
mov
faddl
stc
add
scas
sub
inc
addb
pop
pop
cltd
or
mov
adc
cltd
fs
lods
and
and
cltd
mov
lds
sbb
jmp
adc
jns
in
out
sbb
add
or
pop
adc
and
aaa
mov
cltd
adc
and
sbb
pop
hlt
push
es
test
xchg
aaa
or
fisttpl
adc
jno
icebp
cmp
jo
sbbb
or
or
xchg
pusha
mov
or
cltd
jnp
outsb
adc
and
jmp
add
push
int3
cltd
add
mov
mov
sbb
adc
inc
cltd
daa
stos
cwtl
or
adc
pop
or
pusha
mov
ss
xor
push
pop
test
cltd
cli
clc
inc
bound
shrl
and
mov
cltd
sub
mov
fistl
testb
push
es
mov
sbb
test
cltd
dec
loop
mov
testl
or
inc
dec
sbb
cltd
insb
test
inc
and
mov
adc
cltd
add
add
adc
inc
cltd
ret
adc
or
cltd
jge
mov
cltd
dec
adcb
popa
sub
and
xchg
fs
ret
adc
cltd
pop
clc
jmp
pop
cltd
or
dec
add
inc
cltd
sub
add
fimull
fsts
popa
push
inc
cltd
jbe
nop
mov
and
inc
or
and
inc
and
jp
add
movl
adc
and
sub
ret
cld
mov
pop
into
icebp
stos
adc
cltd
xlat
mov
and
dec
cltd
daa
and
je
cmp
adc
mov
aam
and
cltd
mov
mov
and
mov
cltd
or
rclb
add
adc
and
mov
push
cwtl
cltd
or
add
aaa
push
cltd
and
add
or
and
jo
leave
and
cltd
test
mov
pop
out
inc
add
pop
cmpsb
cltd
or
nop
js
inc
cltd
adc
cltd
mov
push
cmp
add
add
push
or
movsb
stos
cmp
faddl
mov
add
cltd
out
cmp
add
cltd
push
dec
push
test
mov
mov
sub
sbbb
and
jecxz
add
mov
dec
fadd
in
cltd
inc
or
add
and
pop
and
inc
test
jno
add
and
lods
adc
and
xor
cmp
mov
mov
cltd
adcb
je
cltd
ficompl
test
add
mov
inc
cltd
test
sub
cltd
or
adc
bound
cmp
loope
bound
inc
or
and
stos
call
sub
ss
sbb
add
jne
dec
adc
and
xchg
add
repz
adc
and
or
mov
test
cltd
xlat
loope
add
cltd
jle
nop
jo
loop
pushf
push
inc
cltd
and
orb
out
cmp
je
scas
es
or
or
adc
js
pop
cmc
xchg
dec
test
cltd
add
mov
adc
outsb
mov
out
sbb
pop
pushf
test
cmp
cltd
or
sbbb
aad
push
stos
cltd
subl
add
test
cltd
nop
jg
lea
scas
jnp
rcll
inc
test
cltd
xchg
mov
cltd
out
fs
adc
and
repz
add
cltd
jne
add
pop
push
cltd
add
pop
add
test
mov
xchg
pop
pop
inc
xor
test
mov
ret
hlt
repz
aas
repz
fsub
push
push
or
adc
and
fsubrl
add
add
cltd
or
adc
or
xor
jl
imul
movl
dec
test
cltd
out
sbb
insb
mov
adc
test
mov
sti
scas
cltd
or
and
inc
cltd
xchg
mov
add
push
add
dec
push
movsl
sbb
loop
add
xchg
loop
mov
sbb
add
sbb
sub
into
mov
pop
daa
sbb
push
add
and
or
sbb
xor
jmp
in
pop
push
add
cmp
nop
sbb
push
adc
adc
push
test
sbb
inc
stos
add
sbbl
bound
mov
sbb
add
pop
in
sbb
mov
sbb
stos
add
ficomps
out
int
leave
push
iret
mov
stos
add
sbb
mov
leave
jnp
add
push
mov
add
rep
ds
sbb
stos
add
jmp
mov
and
or
xchg
rorb
sbb
daa
es
cli
inc
pop
or
sbb
and
xor
sti
dec
add
cld
xor
rcrl
sbb
les
insb
xor
repz
mov
sbb
sbb
gs
test
sbb
sbb
add
sbb
orb
sbb
mov
mov
and
xor
adc
jae
adc
test
jmp
xchg
sub
and
aam
and
cmp
mov
push
add
adc
push
pusha
icebp
ret
and
sbb
lds
mov
xor
les
push
sbb
sbb
sub
lods
fldcw
addb
push
lret
fcmovnb
inc
ljmp
sub
cwtl
nop
mov
sbb
or
inc
add
and
rclb
shrl
sub
sub
popf
xor
cmp
jo
sub
pop
push
call
test
mov
add
sbb
das
sahf
jge
push
je
add
pop
add
pushf
insl
or
push
add
inc
pop
aaa
push
add
das
es
push
xchg
aaa
push
add
test
adc
dec
pushf
adc
fiaddl
mov
adc
nop
mov
xor
pop
decl
outsl
nop
and
cld
cmp
push
test
mov
scas
add
outsb
xchg
push
add
dec
fcoml
call
mov
sbb
xor
add
fwait
xor
push
adc
mov
and
jae
add
xlat
jo
outsb
sbb
add
mov
mov
stos
sbb
or
and
les
pop
sub
out
outsb
stos
add
add
add
mov
mov
push
pop
cmc
inc
push
add
add
inc
sbb
or
adc
sbb
inc
pop
jmp
sbb
add
sbbb
lcall
loop
sbb
add
nop
pop
pop
dec
cs
loop
add
inc
adc
nop
mov
mov
adc
add
adc
add
test
push
add
adc
sbb
movsb
push
sbb
sbb
decb
sbb
scas
mov
sarl
out
dec
xchg
sub
or
nop
sbb
nop
sbb
mov
test
stos
add
aam
dec
les
sbb
dec
mov
dec
push
pop
add
inc
sbb
sbb
into
xor
dec
fsubrs
push
and
stos
add
add
push
push
add
push
add
xchg
sbb
add
push
mov
mov
push
sbb
mov
adc
jmp
loope
add
and
adc
sub
test
sub
mov
nop
js
sbb
add
sbb
dec
je
sub
xor
sbb
sbb
adc
stos
or
sbb
add
push
sbb
pop
add
mov
add
adc
sbb
and
sbb
and
inc
add
aam
add
mov
fcoml
and
mov
dec
sbb
call
pop
cmp
movsl
add
add
or
adc
mov
insl
bound
adc
dec
pop
xchg
adc
add
ja
filds
sbb
sbb
addb
loop
add
adc
mov
or
jno
sbb
and
jecxz
sbb
mov
or
popa
insb
sbb
adc
inc
push
xor
and
mov
mov
jmp
mov
add
fwait
inc
sbb
addb
sbb
mov
xchg
lret
dec
stos
inc
cmp
iret
xor
dec
leave
or
xchg
sub
add
cmpsb
add
mov
fisttps
popa
addb
sub
sbb
xchg
sub
xor
or
and
dec
sbb
add
lock
adc
bound
sbb
dec
sub
cmp
dec
pop
movsb
mov
test
sbb
mov
adc
sbb
repz
adc
sbb
add
lods
or
out
sbbb
jl
add
dec
add
sbb
mov
sbb
push
jo
shl
push
adc
xor
mov
jmp
es
add
mov
sbb
les
cmp
outsb
sub
sbbb
insb
push
push
add
push
add
and
or
inc
push
sbb
movsb
andb
xor
add
sbb
jno
inc
jo
pop
pop
jle
mov
and
sbb
xchg
or
stos
outsl
in
jle
cwtl
pop
jno
push
jne
sbb
ret
jp
imul
jecxz
adc
subb
test
sbb
and
rcrb
pop
push
sbb
sbb
fsubs
push
add
push
add
test
and
sbb
dec
sbb
mov
orb
rorl
inc
add
nop
mov
sbb
in
or
mov
fsubs
stos
add
cwtl
sub
push
add
das
sbb
mov
adc
pop
sbb
add
add
pop
sub
pop
fs
or
sbb
stos
add
dec
push
push
add
loope
sbb
js
pop
xor
xchg
push
add
and
fs
add
cs
sbb
inc
loop
stos
sbb
gs
pop
adc
les
xchg
dec
sub
stos
add
dec
add
add
push
push
sbb
inc
mov
data16
sbb
add
mov
mov
add
and
cmp
nop
fsubs
sub
push
add
push
add
or
and
imul
and
mov
jne
and
push
push
sbb
jp
adc
add
pop
out
sub
and
and
adc
adc
sbb
adc
push
inc
add
add
dec
ret
fdivl
sub
xor
pop
and
mov
adc
add
icebp
shlb
test
pop
addb
fadds
mul
sub
cli
fimull
push
push
mov
push
sbb
idivb
push
popa
adc
and
or
adc
push
sbb
mov
xchg
adc
or
sarb
movsb
and
mov
and
test
adc
and
sbb
orb
sahf
sub
sbb
and
lret
add
cmp
stos
add
sbb
mov
test
sub
jno
xchg
mov
out
mov
imul
adc
add
and
jo
push
sbb
adc
add
add
outsb
bound
or
xor
add
test
add
xchg
or
popa
and
sub
sub
adc
es
je
sahf
ret
mov
or
xor
sbb
pop
ret
loopne
add
dec
mov
lock
lds
dec
sbb
mov
outsb
and
dec
fsubl
and
mov
and
inc
add
nop
sbb
lods
jg
add
and
enter
cwtl
sbbb
bound
sbb
scas
add
btc
push
add
mov
pop
push
stos
cmpsl
mov
and
dec
loop
lret
mov
push
adc
stos
sub
inc
cmp
aas
mov
dec
dec
sub
adc
dec
pop
shrl
add
add
xchg
or
nop
jo
pop
daa
push
call
faddl
cmp
pushf
outsl
stos
add
cmp
cmp
push
mov
jge
fstl
sbb
inc
call
pusha
cmp
add
push
jg
mov
sbb
jl
inc
loop
test
jnp
xchg
xor
sbb
mov
add
add
push
sbb
sub
mov
push
nop
jo
sbb
sbb
sub
mov
mov
jnp
icebp
inc
and
push
mov
adc
test
and
popf
sbb
arpl
xchg
cmp
sbb
and
subl
push
add
add
sbb
add
insb
sub
dec
loope
and
mov
movsl
pop
sbb
push
call
pop
psubsb
in
repz
pop
stos
sbb
mov
dec
addl
and
push
xchg
cli
or
add
mov
xchg
mov
movsl
or
sbb
out
insl
adc
popf
inc
test
adc
and
les
int
push
push
inc
xchg
or
sbbb
sub
push
add
sub
sbb
and
or
nop
clc
dec
push
sbb
nop
cmp
sbb
sub
add
mov
add
cmp
inc
loop
sbb
shrl
les
pop
sub
add
add
icebp
adc
lods
inc
mov
sbb
cmpsl
mov
pusha
loope
roll
test
ret
int3
clc
push
and
sbbb
test
orl
sub
mov
mov
gs
mov
jp
add
sbb
jbe
dec
inc
and
add
or
add
sbb
jle
call
sbb
mov
mov
sbb
addb
lds
in
nop
mov
outsb
xor
inc
or
mov
sbb
popa
adc
sub
and
add
and
cltd
inc
loop
push
and
xor
add
ja
cltd
movsb
push
add
and
xchg
and
mov
mov
mov
or
jne
or
and
and
inc
or
mov
dec
cltd
inc
and
mov
sbb
scas
add
call
lret
stc
out
filds
and
xor
dec
sbbb
fidivs
and
bound
rcrb
and
sub
cmp
loope
cld
lcall
mov
or
mov
xchg
add
add
in
cmc
filds
and
sub
aaa
push
cltd
aam
or
mov
adc
cltd
rorb
mov
push
dec
faddl
cltd
les
mov
mov
add
pop
outsb
xchg
add
cltd
push
loopne
add
cltd
sub
add
out
push
mov
idivl
mov
sub
shll
cs
rolb
inc
imul
sbbb
adc
jno
cld
mov
cltd
es
dec
fsubrs
sub
popa
mov
jnp
int
cmp
lret
adc
shl
outsb
rcll
add
and
add
jnp
jb
cltd
mov
jns
cltd
movsb
jo
mov
xchg
nop
mov
adc
jbe
cltd
push
outsl
dec
mov
inc
push
xor
js
xchg
add
jns
xchg
orb
jnp
dec
and
std
sub
dec
xchg
incb
push
mov
mov
ret
out
sub
cmp
fistl
xlat
inc
mov
adc
dec
push
add
sub
call
add
fcomip
imul
mov
ljmp
cltd
mov
add
cmpsl
orb
cltd
js
add
sbb
cltd
ret
sub
sbb
push
and
add
ret
add
enter
nop
mov
adc
push
cltd
jp
inc
loop
sub
push
and
xchg
stos
add
je
xchg
add
and
les
cltd
mov
dec
mov
dec
mov
stos
add
imul
dec
mov
dec
add
es
mov
mov
xchg
and
inc
xchg
add
test
nop
mov
sbb
inc
or
mov
inc
or
sub
adc
into
lods
or
mov
cltd
cld
adcb
mov
cltd
push
add
fistpll
cltd
inc
bound
adc
test
xchg
add
inc
cmp
addb
cmp
cltd
and
xchg
add
push
or
or
and
sbb
push
cltd
add
aaa
add
sub
push
sub
cltd
jge
fwait
mov
xor
xchg
add
pushf
sbbb
pop
xorl
out
xchg
add
cltd
add
xchg
push
or
add
inc
xchg
cltd
push
dec
add
push
add
imul
roll
push
adcb
jno
or
addb
and
and
or
addl
cltd
pop
pop
xchg
add
cltd
adc
add
ss
or
test
les
dec
cltd
inc
sbb
aas
xlat
adc
xor
aaa
adc
dec
dec
adc
inc
or
add
cltd
mov
inc
cmp
jmp
pop
pop
add
mov
mov
xor
inc
imul
pop
push
add
xchg
cltd
add
outsb
loop
lret
and
cltd
push
push
sub
scas
fs
add
out
or
inc
and
cmpsb
sub
cmpsb
adc
stos
add
mov
mov
adc
add
push
add
jle
cmpsb
cltd
push
loopne
push
pop
inc
sbb
push
js
add
and
stos
popa
push
enter
push
cltd
and
add
xor
pop
scas
insl
scas
dec
cltd
jecxz
test
inc
push
les
cltd
shrb
add
repnz
inc
pop
inc
leave
pop
add
popf
inc
or
inc
pushf
outsb
jmp
pop
repnz
jb
and
lret
add
sub
cltd
cmc
pop
das
imul
cmp
mov
add
and
stc
scas
adc
pop
and
js
jns,pn
or
or
fsubrl
jns
lock
or
cltd
sbb
das
push
lahf
xchg
movsb
push
in
push
loopne
mov
imul
xchg
out
sub
cltd
movsl
pop
xor
shrb
adc
sub
jne
mov
outsb
push
jo
cltd
inc
pop
test
push
add
and
sub
cltd
jnp
jp
lret
js
cltd
push
xor
xchg
add
jnp
enter
into
and
jg
ds
add
addb
push
dec
cltd
and
jno
and
mov
imul
add
mov
add
mov
push
and
cltd
and
imul
imul
imul
lock
and
adc
mov
mov
add
in
and
inc
or
mov
adc
sub
cltd
mov
xchg
out
sub
cltd
movsb
imul
or
nop
js
cltd
subb
jno
cltd
outsb
and
nop
mov
popf
xlat
inc
cltd
enter
nop
js
mov
adc
sub
sbb
sub
cltd
and
mov
pop
or
add
and
pop
mov
push
cltd
xlat
pushf
dec
fcoml
cltd
pushf
mov
mov
incl
insb
sbb
out
mov
inc
scas
jno
push
add
adc
cltd
out
mov
cmp
sub
imulb
mov
inc
inc
enter
push
or
jmp
shl
loope
mov
add
inc
inc
movsb
fstpt
push
mov
aad
sbb
inc
cltd
rclb
mov
and
es
push
or
rcll
cltd
add
add
in
rcrb
or
xor
mov
xor
clc
arpl
sub
adc
adc
add
xchg
jno
push
cltd
fs
mov
adcb
cmp
inc
xchg
add
adc
cltd
add
pusha
cmp
jle
add
push
cltd
push
add
push
cmp
cltd
shll
dec
sbbb
inc
sub
cmp
in
add
mov
inc
leave
add
std
cmp
sbb
int
test
xchg
or
les
js
nop
sbb
inc
or
add
cltd
or
in
gs
cltd
out
and
rol
add
adc
aad
loope
sub
and
xor
and
inc
cltd
or
jg
jne
pop
mov
add
inc
push
lds
test
cltd
and
imul
adcl
cltd
cvttps2pi
adc
jno
and
mov
mov
dec
xchg
add
aaa
and
js
sub
cltd
stc
mov
loopne
or
and
ret
sub
push
cltd
mov
les
add
dec
sbbb
and
cmp
mov
test
les
pop
in
test
inc
push
enter
insb
cmpsl
and
mov
xchg
add
lods
inc
rolb
loop
sub
push
sub
test
dec
cltd
lea
dec
inc
pop
fisubrs
fmull
fadds
test
inc
les
bound
dec
sbbb
or
push
add
push
cmp
add
cltd
xor
mov
adc
add
jbe
sbb
push
xchg
cltd
push
test
add
ja
adc
adc
cltd
dec
add
add
cltd
sub
adc
adc
clc
push
add
jb
cltd
lea
mov
enter
adc
rcrb
ja
push
add
aaa
xor
add
push
sub
jmp
rclb
add
mov
cltd
inc
pop
cmp
in
imul
push
push
sub
adc
pusha
mov
or
nop
lds
dec
and
xor
inc
cltd
adc
dec
pushf
sub
cltd
aaa
push
jl
shl
or
cmp
enter
adc
adc
and
leave
dec
or
push
inc
dec
sbb
push
xchg
add
jns
pop
and
xor
add
add
enter
mov
xchg
add
fcoms
xor
pushf
add
cmp
pop
push
xchg
add
call
call
sub
cltd
sub
mov
adc
cltd
imul
and
pop
cltd
and
insb
cltd
add
out
cmp
inc
fdivs
jmp
aad
loope
push
or
and
xor
adc
repz
and
xchg
cltd
xor
test
das
rolb
sbb
sbbb
dec
sbbl
add
int3
push
xchg
add
jo
sbb
ret
cltd
js
cmc
and
and
and
sbb
sub
dec
cmp
dec
lods
cs
cmp
push
mov
pop
cwtl
mov
cltd
add
pop
add
aaa
and
sub
sub
jne
add
xchg
lods
ret
sbb
and
clc
xor
sbb
add
jnp
int3
jae
push
add
loopne
nop
add
fsubrs
jns
sbb
ja
pushaw
enter
rorb
mov
jns
mov
sbb
nop
cmp
scas
jecxz
sahf
cmpsl
jge
pop
push
or
and
pop
mov
push
push
push
xchg
cmp
out
mov
pop
loop
lahf
ja
lock
adcl
and
outsb
sub
or
bound
sub
adc
jle
xor
loopne
scas
dec
xchg
add
adc
jno
add
mov
inc
enter
push
cltd
aad
xor
add
mov
movsl
and
cltd
push
inc
sbb
pop
sub
adc
cmpsl
push
pop
push
cltd
dec
mov
dec
add
pop
mov
fsub
out
inc
or
sbb
nop
mov
add
sahf
mov
mov
adc
cmp
mov
pushf
push
or
add
push
xchg
mov
pop
and
das
sbb
inc
push
pop
iret
imul
add
inc
dec
ret
mov
loop
dec
addb
xchg
movsl
and
and
mov
ds
bound
jl
jg
int3
ret
nop
lahf
dec
dec
sahf
xchg
bound
ja
out
and
in
or
fimull
push
cltd
repz
in
lea
mov
in
test
insb
add
mov
into
fidivl
push
inc
inc
or
aas
inc
or
mov
push
or
mov
cmp
cltd
nop
xor
pop
mov
nop
mov
or
loopne
or
dec
xchg
add
and
imul
nop
pop
add
bound
cltd
mov
and
pop
xor
cld
outsb
in
or
add
loope
lods
mov
popf
adc
jno
sbb
adc
mov
popf
and
xchg
adcb
es
and
loop
ss
aas
push
sub
lds
cmpsb
movsl
mov
cltd
add
cmp
add
jnp
cltd
sbb
sub
outsl
cmp
jmp
adc
pop
cmp
add
or
aas
outsb
xchg
add
cltd
and
adc
and
push
inc
incb
imul
and
cld
stc
add
jno
cltd
mov
and
lock
or
add
push
add
sub
adc
cmp
rcrb
mov
js,pn
loop
mov
inc
leave
push
sbb
mov
rcrl
or
and
push
das
in
lds
test
add
imull
cltd
mov
inc
or
sub
cltd
xlat
mov
add
push
xchg
lds
bswap
sub
adc
push
inc
add
sub
nop
pop
xchg
cltd
in
imul
push
pop
call
out
sbb
lret
pushf
into
jae
cmp
cmpsb
mov
cltd
xchg
push
cmpsl
in
and
fsts
insb
nop
iret
add
add
push
jns
mull
pop
popa
add
out
dec
dec
dec
and
sub
sbb
mov
cltd
adc
icebp
sbb
jo
loop
cltd
xor
nop
xor
xchg
test
add
inc
cltd
cmpsb
and
or
cltd
dec
shll
pop
lods
adc
mov
fdiv
add
aaa
push
cltd
enter
das
sub
and
cltd
and
ss
rolb
adc
std
xor
in
gs
and
cltd
in
mov
add
adc
cltd
adc
icebp
and
mov
test
mov
popf
mov
xchg
add
ja
dec
stos
inc
call
enter
and
ret
js
mov
mov
add
mov
fstl
and
cltd
in
push
add
push
nop
sbb
xor
rol
inc
or
test
mov
cmp
sub
mov
or
mov
imul
jg
xchg
sub
adc
test
push
or
adc
cltd
dec
sahf
fsubl
xor
dec
and
imul
add
cltd
pop
dec
addb
scas
inc
add
jbe
cltd
shlb
cltd
and
xchg
test
cltd
or
sub
and
inc
cltd
popf
inc
dec
dec
daa
sub
adc
sbb
outsb
mov
jbe
dec
cltd
lds
or
add
fnstsw
adc
loop
cltd
xchg
add
xchg
and
pusha
inc
or
xor
test
test
push
lods
cltd
sub
repnz
adc
and
and
pop
add
mov
and
adc
fstps
sub
cltd
mov
push
aas
cmpsb
xor
sbb
inc
and
inc
loop
cltd
imul
xor
out
dec
xchg
add
loop
aas
aaa
push
inc
ret
inc
dec
ja
cltd
add
dec
adc
xor
mov
mov
cld
adcb
lods
test
jle
push
mov
mov
pop
push
dec
xor
addl
test
dec
cltd
call
add
cltd
adc
xor
pop
or
mov
inc
xchg
add
or
adc
loop
sbb
pop
mov
xchg
add
jl
xor
and
sub
xor
add
out
or
and
dec
pop
les
inc
dec
aad
cwtl
gs
cltd
or
and
push
cltd
sub
loop
xchg
jo
cltd
push
addb
add
cmp
inc
and
and
cltd
add
adc
adc
les
push
cltd
jmp
add
ret
js
or
sbb
lahf
pop
mov
pop
int
bound
xchg
dec
and
adc
ss
cwtl
mov
pop
pusha
jo
mov
jb
or
test
cmpsb
imul
pop
enter
data16
stos
add
shll
enter
sub
or
push
and
jns
and
push
mov
adc
push
jns
adc
and
jns
inc
ret
ret
and
mov
jns
nop
mov
mov
and
jne
jns
pop
test
mov
add
jns
js
push
add
subb
dec
in
jns
and
adc
inc
pop
addl
adc
mov
adc
outsb
xchg
dec
stos
push
nop
jns
inc
adc
lods
dec
fnsave
sub
jmp
mov
test
xor
add
jns
shl
mov
loop
sub
jns
cmp
push
and
dec
dec
push
add
push
add
inc
jns
cmp
add
dec
fcoml
jns
sub
mov
test
loop
inc
inc
sarb
out
in
lret
dec
minps
adc
add
int
sbb
mov
push
fs
mov
dec
or
jmp
mov
sub
jns
push
or
xchg
and
pop
rclb
icebp
hlt
js
add
inc
jns
dec
pop
lods
testl
dec
jns
bound
add
jle
add
add
dec
pop
imul
jns
nop
mov
or
dec
adc
adc
push
add
call
inc
ret
sub
add
pop
les
jns
faddl
xchg
add
push
mov
or
xchg
ret
pop
push
jne
sbb
inc
jns
ljmp
add
add
test
inc
cmc
es
inc
xchg
jns
add
jno
or
pop
push
frstor
insb
fiadds
xor
nop
push
pusha
or
mov
jns
in
xor
pop
setge
and
xor
mov
and
push
test
lock
scas
test
dec
shll
inc
imul
jg
jno
loopne
in
xor
jmp
pop
add
fbld
xor
jae
xor
pop
test
or
movb
ds
addb
cmp
aas
pusha
mov
inc
inc
jle
data16
icebp
adc
adc
push
add
add
pop
cltd
add
and
mov
notb
sbb
fimuls
cltd
lock
mov
or
dec
and
sub
int
push
cltd
add
dec
popa
add
test
add
mov
add
mov
in
jae
or
bound
cltd
dec
gs
inc
scas
cwtl
inc
pop
push
add
fsubs
mov
push
aas
xchg
inc
and
xchg
and
cltd
cmp
loope
paddusw
add
fldl
test
jb
adc
jno
pop
call
and
mov
xchg
push
xchg
pop
leave
pop
jmp
es
xchg
add
xor
cltd
and
rolb
rorb
nop
mov
sbb
pop
inc
cltd
xor
mov
push
xchg
cltd
arpl
and
outsb
mov
rclb
orb
imul
pop
and
fisttpll
nop
mov
mov
inc
cltd
subb
or
add
sub
bound
push
cwtl
dec
mov
fwait
test
dec
cltd
repnz
and
and
xor
clc
mov
add
cmp
sbb
xchg
or
or
xchg
add
sub
cltd
cmp
or
es
or
adc
xor
inc
into
dec
fcoml
aad
add
cltd
dec
pop
dec
sbbb
add
fisttps
add
arpl
fmull
mov
jo
push
js
wrmsr
call
dec
push
add
scas
and
cltd
or
pusha
sbb
cltd
test
adc
push
mov
xchg
cltd
cmpsl
idivb
sub
sub
push
or
test
dec
cltd
repz
xchg
fwait
sub
sub
cltd
adc
and
adc
adc
cltd
push
add
and
and
lock
cltd
sbb
mov
sbb
pop
sub
adc
ss
and
ds
add
and
push
xchg
cltd
in
in
push
add
and
jne
bound
push
and
cmp
cli
loop
arpl
faddl
and
stos
mov
add
scas
cmp
mov
add
add
push
adc
xchg
cltd
dec
fimuls
sub
cltd
fwait
push
add
nop
js
push
nop
mov
inc
cltd
icebp
test
push
or
sbbb
cltd
xchg
add
les
mov
stos
dec
cltd
mov
add
mov
cltd
out
pop
dec
xchg
cltd
mov
xchg
rclb
xor
jnp
add
es
pop
dec
add
cltd
or
lea
add
pusha
cltd
sub
adc
push
cltd
inc
ret
xlat
mov
inc
and
xchg
add
or
inc
loop
cltd
add
and
adcb
cltd
lret
fstl
cltd
pop
fimuls
mov
and
add
cltd
dec
jl
or
cltd
or
dec
sbbb
cltd
add
and
mov
inc
and
mov
outsb
outsl
push
add
outsl
or
add
cltd
adc
popa
add
cmpsb
cltd
mov
cltd
adc
icebp
push
xchg
jno
rep
cltd
pop
push
mov
adcb
cltd
mov
cltd
dec
addb
bound
addl
xchg
add
loop
cltd
push
add
iret
cltd
adc
jno
xchg
cltd
mov
cs
cltd
jne
adc
mov
and
and
inc
loop
cltd
aam
adc
jno
cltd
adc
jno
or
adc
cld
inc
sub
cltd
push
or
add
sub
adc
inc
cltd
dec
add
cltd
dec
addb
addb
add
or
dec
sbb
cltd
adc
popa
pop
cmp
add
xchg
cmpb
mov
nop
or
nop
jo
cltd
sbbb
les
push
and
add
stc
popf
notl
cmp
sbb
xor
and
lret
add
push
cltd
icebp
mov
and
sub
adc
cltd
xchg
add
insl
mov
xor
ss
push
push
push
add
adc
bound
inc
call
lock
and
les
add
or
mov
js
and
ret
sbb
inc
cltd
push
xor
push
add
cmp
adc
jno
cltd
sub
adc
xor
testl
pusha
lea
sub
adc
pop
es
sahf
out
stos
adc
das
push
push
pop
outsb
mov
and
xchg
int3
pop
cmp
jle
and
and
mov
xor
cltd
pop
xor
inc
or
xchg
and
mov
adc
adcb
inc
or
add
ja
push
cltd
dec
inc
and
or
pop
and
cld
or
test
cwtl
lock
mov
inc
mov
lock
jns
mov
and
inc
or
nop
test
scas
adc
stos
int3
dec
orl
or
jns
test
add
push
and
stos
add
insl
cli
add
leave
out
incl
cld
incl
fimuls
movl
mov
inc
sahf
in
les
add
add
push
stc
enter
addr16
or
add
lods
lods
mov
jns
adc
and
or
xchg
cmp
clc
addr16
jle
popf
dec
add
jns
xacquire
test
jns
inc
and
lods
pop
mov
cmp
and
mov
into
xchg
sbb
test
mov
pop
push
add
fisttpll
or
cmpsb
test
add
push
cmp
movsb
pusha
sub
stos
dec
jns
cmp
scas
nop
inc
push
add
adc
xor
jp,pn
addr16
stos
jns
lods
stos
sub
jns
add
sbb
add
and
dec
jns
outsb
add
and
sbb
push
jns
xor
cmpsb
dec
jns
sub
jno
and
cmp
push
inc
and
sbb
mov
add
daa
pop
jns
add
fs
or
mov
mov
nop
jnp
add
jns
scas
push
fcoml
cmp
loopne
sbb
inc
or
add
jns
stos
imul
push
call
nop
jns
and
push
pop
xadd
into
shrb
fcmovnbe
xlat
lcall
dec
add
jns
inc
inc
mov
mov
dec
xchg
jns
and
or
bnd
imul
jb
nop
xchg
inc
push
cld
add
or
jns
in
or
dec
push
faddl
inc
jns
inc
mov
test
push
xchg
add
mov
in
jmp
std
xchg
je
pop
jp
xchg
pop
dec
sti
push
addr16
inc
jns
pop
mov
scas
push
loope
push
sti
mov
in
jmp
sub
push
cmp
jnp
adc
push
jo
mov
add
or
sub
add
jns
or
in
xchg
jns
stos
or
or
or
xor
push
jns
mov
and
or
or
and
adc
jns
push
sbb
repnz
pushl
roll
frstor
pusha
ret
lock
ret
mov
inc
les
sbb
lds
xor
pop
and
and
lret
lret
pop
inc
or
inc
and
js
adc
loop
dec
jns
cmp
sub
and
adc
jno
add
jmp
adc
fsubrl
adc
pusha
test
dec
jns
notl
and
add
add
jns
jo
sbb
or
mov
sub
adc
mov
xchg
add
jne
lcall
adc
add
push
xchg
push
xchg
jns
add
and
add
ret
add
adc
push
mov
dec
js
lods
mov
loopne
xchg
add
jns
add
or
pop
add
jns
popf
out
stos
add
jns
in
adc
and
inc
bound
push
adc
add
or
add
nop
sbb
mov
jns
and
sub
adc
mov
jns
dec
imul
sub
jns
adc
and
bound
movsl
insl
or
add
pop
and
pop
sbb
jns
inc
orb
jns,pt
icebp
xchg
cmpsb
cwtl
fs
loop
adc
sbb
data16
push
or
in
xor
add
jne
push
add
xchg
add
and
inc
cmp
add
add
ds
or
xchg
pop
jnp
int
mov
mov
jns
roll
insb
dec
sti
mov
lds
jns
test
cld
in
or
movsl
add
jns
add
or
adc
pop
xchg
jns
dec
ss
cmp
jle
les
call
cmp
mov
dec
cmpb
sbb
pop
xor
out
or
xchg
and
test
pop
push
cmpsb
sub
adc
xchg
add
adc
jns
inc
rorb
movsb
sub
add
dec
mov
dec
movsb
or
mov
add
subl
jo
add
add
mov
or
loop
or
les
push
nop
nop
mov
dec
pop
add
inc
or
and
inc
inc
or
push
inc
push
jns
inc
or
or
xor
inc
mov
jns
and
adc
fisttps
nop
xor
sbb
cwtl
pop
inc
jns
jge
lcall
or
push
add
add
je
lret
add
adcl
in
and
nop
sub
mov
pop
mov
and
or
iret
mov
sbb
mov
addb
or
push
adc
inc
jns
test
dec
add
add
add
jmp
and
dec
add
popf
lcall
out
adc
mov
jns
ret
xor
and
mov
mov
sbb
cmp
orb
inc
or
inc
or
nop
sbb
add
insl
dec
inc
jns
cmp
sbb
sbb
lds
test
jns
xor
and
cmp
nop
adcb
jns
add
daa
or
mov
jns
add
mov
popa
add
mov
or
mov
jns
mov
jns
and
add
adc
pop
add
jns
cmc
add
mov
divl
sbb
adc
jno
inc
ret
push
sbb
adc
std
pusha
sbb
and
dec
cwtl
jl
and
je
or
adc
dec
add
jns
sbb
es
xor
add
jns
mov
mov
mov
jns
movsb
adc
clc
sbb
cmp
adc
sbb
and
push
mov
int3
inc
push
add
addb
and
adc
bound
push
or
and
adc
cltd
sub
add
push
adcb
jns
mov
jns
push
arpl
push
or
out
rolb
or
mov
xchg
mov
lock
xchg
add
jns
add
jnp
out
mov
add
pop
ret
and
and
stos
add
jns
add
and
orb
xor
andb
push
jns
and
push
add
add
cmpb
test
stos
cmp
xchg
add
and
and
or
in
push
rolb
adc
and
mov
push
and
mov
dec
outsb
scas
jns
dec
pop
arpl
stos
adc
jns
inc
dec
enter
sub
jo
sbb
add
out
cmp
dec
push
sub
pop
add
or
xchg
add
test
scas
cmp
and
jno
and
pop
test
and
push
push
add
insl
jns
loope
add
push
lea
xor
xchg
add
nop
mov
pusha
add
inc
jns
int
rorl
jo
xchg
add
jns
inc
or
sub
adc
mov
and
adc
cld
inc
add
or
sub
adc
or
mov
sbb
xor
jns
in
mov
xchg
adc
or
stos
adc
jno
sub
adc
push
push
jns
add
shlb
nop
sbb
adc
add
push
jns
adcb
add
jns
test
inc
ffreep
mov
jns
xchg
add
xor
pop
inc
add
inc
mov
jns
adc
and
dec
jns
adc
or
inc
fists
ss
ja
nop
js
jns
jns
add
xchg
lods
cmp
jns
adc
mov
jns
nop
mov
pusha
pop
push
or
jle
in
jns
adc
push
add
or
add
int3
inc
add
add
sub
adc
int3
in
push
mov
or
and
push
jo
add
inc
mov
adcb
rclb
mov
jns
adc
popa
pop
jns
dec
cwtl
mov
jns
sbb
dec
fcomps
mov
rcll
jns
or
das
loopne
lock
jno
add
jns
or
loop
and
mov
jo
push
push
xor
add
add
adc
and
push
jns
les
add
insb
sub
dec
cmpb
outsl
adc
mov
mov
jns
adc
mov
jns
pop
lcall
jns
or
popa
adc
inc
loop
jns
lock
mov
lldt
nop
jns
add
jns
loopne
inc
add
xchg
add
jns
or
adc
add
mov
sub
xor
add
adcb
jns
movsl
iret
adc
and
and
and
xchg
jns
push
adc
jle
pop
add
add
scas
or
push
sbb
xor
inc
bound
adc
and
daa
sub
jns
lahf
lock
and
aaa
add
cmp
leave
shlb
add
xchg
jns
std
test
js
sbb
sbb
fstl
jns
and
inc
mov
jns
nop
mov
xor
inc
jns
adc
test
and
jns
inc
je
outsb
pushf
les
add
mov
and
sarb
fcmovnb
sub
push
push
and
addb
adcb
dec
sbbb
push
lcall
nop
pop
mov
js
sbb
ss
push
or
test
cltd
stc
push
push
or
adc
dec
add
test
cltd
inc
or
add
mov
xchg
cltd
mov
loope
mov
push
mov
cltd
stos
dec
or
cltd
mov
adc
loop
cltd
mov
ss
xchg
add
adc
jno
dec
cmp
and
mov
pop
push
cltd
adc
xor
push
and
push
or
lods
outsb
push
adc
cltd
cs
push
add
nop
cmp
dec
or
push
or
stc
xor
test
in
push
shlb
fcoml
cltd
sub
popf
sbb
adc
push
inc
sbb
stc
mov
mov
les
mov
push
pop
rorb
add
les
mov
mov
bound
inc
stc
push
sbbb
sub
lret
lds
std
mov
fdivrs
lock
xor
dec
adc
adc
mov
and
add
fstps
fcomp
dec
mov
cmp
push
and
ret
fnstenv
mov
inc
xor
or
les
dec
mov
inc
pop
dec
adc
fldcw
cwtl
fnstcw
int
mov
and
imul
or
sub
aas
sbbb
inc
je
sti
lahf
inc
dec
rorb
out
cwtl
dec
adc
into
cltd
adc
and
and
sbb
push
xchg
ss
popw
mov
test
fldenv
xor
loop
fldenv
dec
mov
push
les
sub
mov
stos
push
test
fldenv
test
or
xor
cs
adc
cwtl
lcall
cltd
fnstenv
push
fnstenv
dec
lods
lcall
xchg
fs
into
or
fsts
sbb
sub
movsb
mov
lods
mov
xchg
movsl
mov
push
lds
ret
or
add
cwtl
inc
fmul
movsb
mov
mov
mov
adc
addr16
xor
call
xor
cltd
adc
inc
or
les
sub
push
repnz
xchg
jo
sub
adc
mov
or
enter
mov
in
popf
mov
sub
mov
fistpll
stos
dec
cmp
pop
dec
mov
cmp
xchg
lcall
adc
adc
mov
pop
insb
jo
cmp
rorb
mov
or
xor
mov
cmpl
jg
lods
in
jbe
mov
and
stc
aas
mov
in
sbb
pop
xchg
sub
mov
mov
adc
inc
sarb
cltd
mov
movsb
mov
mov
insl
aam
fisubrl
push
scas
push
inc
mov
loop
sbb
movsb
mov
pushf
mov
cmpsl
sbb
mov
adc
cltd
adc
mov
sahf
pop
add
fdivs
pop
and
cmp
movsb
mov
in
sub
lods
cwtl
mov
xor
cwtl
sbb
pop
out
jmp
fistps
mov
mov
adc
in
cld
out
add
sub
sub
dec
mov
mov
push
in
stos
dec
adc
sarl
sub
mov
es
int3
movsb
mov
and
adc
add
adc
inc
or
inc
add
xlat
mov
mov
add
mov
es
mov
adc
aam
push
les
ret
and
push
les
rorl
je
int
sbb
outsb
icebp
pop
push
repnz
daa
mov
dec
adc
mov
enter
push
sbb
notl
push
and
push
nop
sub
sub
sub
and
mov
jp
cltd
xor
ret
nop
mov
xor
mov
jne
add
in
mov
mov
enter
xor
movsb
or
ret
adc
cmp
daa
xchg
add
movsb
or
or
ja
fsubr
ljmp
or
test
pop
adc
jecxz
call
inc
enter
push
jnp
imul
cwtl
nop
mov
add
mov
mov
push
pop
push
call
xchg
pop
js
mov
popa
inc
rclb
movsb
mov
inc
or
stos
dec
xchg
lcall
inc
xor
dec
adc
popa
leave
jecxz
stos
jnp
je
or
loop
mov
dec
adc
inc
sbb
mov
xlat
dec
adc
mov
push
mov
mov
mov
insb
inc
mov
jge
fs
stos
ljmp
out
cmp
nop
pop
push
dec
push
mov
int
imul
int
mov
mov
das
mov
in
les
adc
xor
inc
fcomps
adc
cs
mov
test
pusha
fdivrs
loopne
mov
sbb
sub
xor
mov
add
mov
cmpsb
push
les
loope
mov
ljmp
aaa
xchg
and
push
mov
inc
dec
in
xchg
xchg
les
aam
shrb
mov
das
rcrb
mov
or
mov
dec
xchg
sbb
xor
hlt
insl
rorb
push
mov
and
xor
movsb
mov
sub
push
ret
outsb
sbb
les
mov
fwait
jecxz
inc
pushf
pop
jg
mov
bound
test
dec
mov
cmp
mov
adc
test
int
mov
bound
pop
lcall
shlb
ss
xchg
xchg
and
or
mov
dec
add
gs
pop
out
add
cmp
fnstcw
mov
jl
push
or
xlat
pusha
add
jnp
test
pushf
scas
nop
imul
aam
fldcw
cmpb
cmp
cmp
mov
les
inc
xor
orb
and
sarl
ret
mov
lds
mov
push
mov
jae
int3
or
andl
movsb
lret
int3
movsb
mov
mov
movsl
add
dec
mov
in
push
test
sarl
mov
add
movsb
mov
or
call
xchg
and
mov
and
xor
mov
add
jmp
inc
or
add
inc
add
lahf
subl
jp
lahf
mov
lahf
and
add
add
xchg
or
dec
cwtl
add
jo
lahf
xchg
cmp
int3
scas
mov
test
lahf
enter
and
mov
jb
leave
add
popl
mov
xchg
in
inc
or
bound
lahf
jo
xor
xor
aam
or
cmpsb
lock
push
add
das
push
xchg
and
sbb
lahf
sub
and
hlt
push
testb
sbb
cmp
add
cmp
adc
xor
or
jns
and
or
adcl
mov
pushf
ficomps
sub
or
stos
xor
inc
ret
sub
lods
cmpsb
add
mov
inc
pop
insb
test
push
mov
nop
inc
fldenv
or
enter
in
addl
xchg
pop
pop
std
pushf
add
ret
cli
pop
xchg
or
enter
and
aaa
jns
pop
add
jns
stc
xchg
dec
add
bound
fnsave
stos
add
push
jns
pop
or
adcb
pusha
inc
mov
test
outsl
add
xor
call
call
js
push
imul
push
cmp
adc
mov
scas
sarb
fwait
aaa
mov
scas
jmp
adc
loop
stc
dec
inc
adc
jns
loope
mov
call
nop
or
mov
nop
call
push
jne
call
push
aad
aaa
lcall
pop
push
test
lds
mov
imul
lret
adc
jnp
mov
sub
mov
aam
push
ret
cmp
xchg
addb
ret
jo
adc
inc
adc
test
adc
mov
adc
test
gs
cmpl
stos
dec
shrl
ret
sti
xor
fmull
test
push
lock
lcall
andb
adc
fwait
rol
cmpb
pop
arpl
ret
push
cmpsl
dec
shrl
lcall
loop
jecxz
push
mov
inc
shll
imul
dec
ret
xlat
push
cmpsl
dec
shl
mov
adc
rol
popf
test
addb
jne
xor
orb
adc
shll
fcmovnb
push
sbb
add
push
xor
imul
shll
dec
popa
ret
dec
xchg
ret
push
ret
test
push
adc
inc
jo
ret
jne
imul
popa
jno
aam
shll
sbb
mov
adc
adc
aam
push
push
or
jecxz
in
add
movsb
ja
adc
or
insb
add
mov
ret
inc
cs
popa
cltd
lahf
lock
push
jb
mov
add
cltd
add
add
add
iret
shll
lea
add
adc
jo
adc
adc
adc
mov
or
mov
hlt
fsubp
scas
and
clc
pop
cmp
test
and
adc
cmpsb
insb
mov
pop
sti
or
push
push
add
enter
pop
nop
loope
in
rcll
mov
sub
pop
es
inc
pop
je
push
les
inc
dec
push
xchg
mov
xor
jb
push
sbb
add
mov
movsb
mov
xchg
lret
in
dec
push
add
rcll
lock
andb
xorl
popa
insl
sub
add
jmp
sub
xor
mov
dec
add
adc
add
push
daa
es
mov
out
or
add
lock
mov
movsb
lods
or
out
push
test
test
jmp
mov
adc
jmp
nop
and
test
enter
push
cs
ds
mov
inc
add
je
cmp
pop
mov
cmp
pop
in
test
add
adc
lcall
adc
addl
or
add
nop
iret
or
out
daa
adc
call
sub
and
xor
sahf
jb
fwait
or
mov
add
fsubs
pop
or
out
or
test
rorb
push
sbb
adc
jo
fs
sti
or
loop
pusha
ja,pn
and
sarb
loop
popf
scas
or
mov
sub
adc
or
mov
adc
ljmp
jo
sbb
fmull
add
fdivrs
xor
jg
sbb
or
and
add
mov
add
pop
mov
popa
cmp
sbb
xchg
or
jb
test
push
jo
sbb
or
mov
outsl
std
cmp
sbb
jb
pop
test
sub
lods
mov
aas
ja
jl
mov
inc
or
hlt
xor
lods
dec
or
add
jne
inc
xlat
cmp
bndldx
jge
xlat
inc
sbb
push
call
shr
xor
enter
insl
add
adc
nop
add
outsl
sub
dec
lcall
cmp
xor
adc
and
imul
cltd
pushf
aas
adc
out
sbb
pop
xchg
xchg
jno
add
cwtl
cs
sub
mulb
out
repnz
je
mov
js
and
aam
mov
popa
adc
push
test
rcll
add
test
call
pop
nop
lock
push
call
popf
gs
jl
jno
sub
add
lods
in
dec
test
sbb
dec
imul
paddq
in
dec
roll
negl
sub
std
push
and
mov
pop
jns
mov
cmp
push
sbb
sub
pop
out
push
es
and
mov
sbb
xor
xor
and
sub
loopne
or
inc
mov
pop
push
cmp
call
pop
cmpb
inc
push
leave
adc
mov
jns
xchg
xor
leave
mov
push
inc
dec
outsb
test
xchg
jns
push
cmp
adc
and
jns
mov
jns
leave
adc
mov
insl
ja
jns
es
jmp
or
mov
cmp
adc
push
xchg
sub
mov
push
leave
adc
cs
jp
dec
xchg
jo
in
fs
testb
cmpb
ja
mov
jmp
mov
jns
leave
adc
or
orb
decb
stos
fs
mov
jmp
and
or
jns
push
sub
xchg
lsl
adc
test
push
leave
adc
adc
cli
xchg
sbb
les
ss
xchg
and
dec
pop
ret
jns
mov
jns
xchg
pop
jmp
mov
jns
push
xchg
sub
in
add
jns
leave
adc
pop
loop
leave
adc
inc
xor
add
inc
push
jns
mov
push
mov
push
ljmp
sbb
dec
xchg
jns
addr16
or
sub
mov
jns
push
xchg
jns
add
mov
sub
sbb
jns
sbb
push
push
pop
push
cmp
addb
out
jp
test
pop
ret
jns
mulb
dec
xchg
add
les
push
jns
mov
push
inc
push
leave
jns
adc
leave
adc
jb
xchg
sub
test
dec
xchg
jo
popw
xchg
and
xchg
fisubrs
cmpsb
mov
jne
xchg
jns
push
subl
imul
sbb
or
loope
stos
xchg
jns
mov
adc
and
pop
sbb
loope
test
jns
andb
xchg
sub
stos
or
into
jns
sub
sub
rolb
inc
jmp
adc
dec
xchg
jns
daa
inc
loope
or
sbb
jns
and
xor
cwtl
sbb
jns
jo
sub
push
jns
inc
push
mov
add
and
xchg
mov
cmp
mov
rorb
or
dec
jns
xchg
adc
mov
dec
jns
sbb
jns
adc
push
popa
xor
enter
rorl
outsl
xlat
aad
or
jns
cmp
or
add
or
fldl2t
mov
xchg
xor
and
call
fsubrs
mov
xchg
stos
jns
and
sub
adc
mov
mov
arpl
int3
lret
lret
shlb
andb
push
leave
jns
or
les
jns
or
sub
jo
test
lret
xchg
jo
and
jo
dec
jns
scas
pusha
inc
and
adc
inc
movsb
outsb
xchg
loopne
push
jns
and
or
test
jns
bound
mov
ret
sbb
xchg
sub
andl
enter
aam
dec
mov
sub
fnstcw
lock
inc
and
jns
pop
orb
jns
dec
jo
dec
repz
mov
push
movsb
into
repz
pushf
xchg
mov
jns
scas
roll
in
add
push
xchg
jo
pusha
popf
lret
or
mov
jbe
daa
push
js
cwtl
push
loop
and
mov
pop
push
jns
and
mov
adc
sbb
and
sahf
out
sub
cmp
push
add
pop
ret
out
int
aas
jo
js
mov
shlb
aaa
dec
sbb
adcb
shll
jb
xchg
pusha
push
jnp
sbb
repnz
pushf
orb
aad
and
xor
shrl
cmp
mov
leave
mov
iret
aas
call
dec
cmp
cmp
or
es
out
stos
jmp
mov
dec
adc
xor
mov
xchg
nop
lods
cmp
mov
aaa
cmpb
pop
test
mov
lahf
pop
mov
add
and
cmp
jecxz
call
push
adc
pop
xor
cmp
and
pop
mov
jecxz
dec
xchg
sub
pop
cmp
jecxz
sub
sbb
pop
ret
adc
leave
adc
mov
fsubl
or
adc
xchg
das
sbb
movsl
or
fdivl
add
ds
cmp
xchg
cmp
lods
jno
call
fwait
cwtl
or
sbb
pop
dec
mov
cmp
rcrl
cmp
dec
fsub
and
cmp
ret
dec
cmp
cmp
inc
in
insb
xchg
mov
leave
adc
xchg
mov
dec
ret
and
or
ja
push
bound
imul
in
jae
mov
or
mov
cmp
mov
xor
adc
sbb
push
andl
movsb
cmp
xchg
sub
insl
call
and
hlt
stos
out
pop
pop
cmpb
subb
cmp
push
es
adc
nop
cmp
sarb
jo
dec
cmp
pop
jne
rorl
clc
addb
cwtl
mov
fcomip
pop
sub
sarl
daa
cmp
sbb
xor
clc
push
and
pop
cmp
outsl
add
jb
inc
xor
adc
outsl
and
pop
cld
mov
add
hlt
and
pop
adc
adc
adc
add
pop
dec
mov
mov
mov
cmp
or
aaa
mov
and
xchg
sub
pop
cmp
adc
sbb
sbbb
mov
xlat
pop
pop
cmp
loopne
repnz
mov
iret
cmp
xchg
es
ret
or
dec
cmp
mov
cwtl
je
out
or
mov
xchg
sbb
push
pop
cmpb
or
adc
or
loopne
or
leave
cmp
loope
lcall
xchg
sub
loope
add
pusha
bound
xor
cmp
or
les
dec
mov
adc
test
xor
gs
or
xchg
cmp
adc
xchg
sub
pop
adc
xor
cmp
sbb
mov
and
rclb
push
bound
leave
adc
shll
push
cmp
mov
sbb
add
cwtl
fs
add
adc
sub
call
leave
cmp
push
imul
jmp
or
xchg
sub
mov
xchg
jo
sub
repnz
aad
int3
aas
call
add
cs
clc
nop
push
jl
test
push
adc
cmp
pusha
lods
aas
push
mov
dec
call
pop
cmpb
fisttps
push
aam
jns
mov
lods
test
or
fmuls
sbb
imul
or
lods
aas
inc
push
repnz
subb
sbb
lods
pop
nop
cwtl
push
mov
sub
push
aas
mov
or
jns
imull
xor
cmp
inc
dec
push
adcb
pop
fs
aas
iret
jnp
sub
nop
or
adc
test
aas
add
fwait
stc
mov
and
push
adc
jmp
mov
xor
dec
cmpsl
pusha
stc
add
mov
stc
stc
push
and
dec
push
ret
fsts
and
inc
mov
ficompl
lret
push
scas
or
mov
jne
adc
and
ret
xor
jo
outsb
pop
mov
insb
sub
jb
loope
add
ja
add
subl
ret
inc
insl
mov
cmp
ja
mov
push
push
or
stos
test
mov
push
call
dec
or
mov
xchg
nop
mov
stc
add
scas
dec
in
sbb
mov
inc
mov
in
add
or
insl
sub
and
in
adc
outsl
and
insl
mov
adc
bound
push
insl
lods
sub
dec
jo
insl
mov
adcb
test
test
sbb
jo
insl
sub
add
inc
imul
adc
or
adc
pop
xor
mov
xchg
or
sub
fwait
mov
fbstp
or
sub
rclb
int
sub
adc
in
pop
xor
int
ljmp
sbb
out
out
cmp
and
repnz
mov
pop
mov
sbb
jo
cmp
test
inc
dec
int
push
inc
sbb
push
pop
xorb
and
xchg
lret
mov
dec
mov
aad
add
mov
push
and
sbb
adc
cmp
insl
and
fwait
push
ret
pop
sub
insb
out
dec
sub
fldl
and
stos
dec
and
loope
xlat
mov
xchg
jmp
test
loope
cmp
and
and
adc
rcll
adc
lea
push
mov
add
add
pusha
mov
sub
push
or
loopne
lea
add
sahf
frstor
movsb
in
push
fisubs
inc
adc
add
aam
loopne
mov
sbb
rcrl
shlb
adc
and
adc
mov
es
mov
xchg
leave
sbb
sub
insb
lea
add
push
lea
shll
mov
xchg
jl
push
inc
dec
lret
test
out
dec
xchg
pop
imul
mov
iret
cmpsb
test
or
xlat
xlat
pop
jmp
xor
add
lea
mov
push
or
in
add
adc
or
push
lea
mov
push
add
push
orb
popa
dec
xor
popf
frstor
int3
add
xor
jo
aam
or
sub
iret
mov
push
push
popa
dec
js
jg
xor
clc
and
popl
rol
sbb
mov
inc
pusha
sub
mov
fcompl
inc
mov
addb
cltd
or
orl
inc
orl
sbbb
rolb
fsubs
rol
xchg
mov
xor
jecxz
in
inc
inc
push
sub
enter
cmp
mov
loopne
popf
js
jmp
popa
dec
popf
and
and
jne
lret
popa
lods
mov
clc
pop
test
popf
mov
jp
dec
popf
rclb
popf
adc
out
popa
dec
popf
cmc
or
jns
iret
popf
xor
adc
loopne
popf
mov
cwtl
popf
out
cmp
call
loop
or
add
idivl
call
out
sub
in
dec
push
cwtl
popf
push
mov
dec
or
sbb
test
pop
nop
cmp
dec
popf
xor
pushf
outsl
ret
stos
popf
xchg
cmp
and
stos
xor
test
loope
popf
dec
xlat
or
pop
sbb
sbb
popf
push
mov
aaa
sbb
add
js
jae
inc
and
or
or
bnd
jae
sub
push
jo
dec
repz
mov
push
rcll
push
add
nop
jbe
xlat
or
mov
mov
add
sub
stos
mov
mov
xchg
jo
in
jbe
cmpsb
add
xchg
shl
add
push
aad
and
add
imul
ja
push
cmpsb
aad
outsl
or
les
test
or
adc
pop
or
sbb
sub
mov
or
adc
cltd
adc
and
loopne
push
aad
dec
js
add
push
aad
movsb
jmp
push
add
add
push
ret
pop
dec
pop
adc
sub
dec
loope
push
cltd
aad
add
sub
lock
dec
or
mov
dec
or
dec
or
push
sbbb
nop
decb
mov
daa
shrb
aad
cmpsb
cltd
adc
clc
push
xchg
or
adc
and
sub
test
inc
push
jo
test
aad
and
inc
gs
aad
mov
imul
mov
addr16
outsl
push
cmpsb
add
lahf
pusha
stos
dec
or
inc
subl
cltd
adc
pop
cmpsl
or
push
aad
or
pop
cltd
aad
call
negl
xor
mov
pusha
mov
mov
aad
add
push
aad
push
push
mov
xor
in
je
xor
sub
packsswb
pusha
xchg
mov
lret
aam
fisubs
loopne
cltd
adc
pop
mov
hlt
adc
cmpsb
test
sub
dec
or
push
aam
add
push
push
mov
orl
cmpl
push
cmpsb
test
gs
enter
pop
mov
push
aad
sbb
dec
aad
pop
gs
jo
aad
pop
xchg
sub
aad
jb
ret
inc
inc
cld
push
push
dec
fidivrs
inc
mov
cltd
adc
aad
and
sub
lods
aad
aad
push
sbbb
xor
push
ret
xchg
aad
push
ret
aad
cltd
adc
cltd
aad
cmpsb
test
in
dec
aad
test
sbb
pop
clc
and
push
call
inc
cwtl
adc
jnp
aam
add
arpl
and
dec
mov
and
and
cmp
and
pop
movsb
mov
push
or
dec
or
sbbl
push
and
popa
and
test
pop
int
sbb
fcomps
es
push
cmp
pop
inc
ret
or
shll
in
sbb
and
or
sub
movsb
fucom
fdivrs
sub
xor
fs
cmp
lods
inc
lahf
push
cmp
frstor
mov
or
mov
pop
xchg
pusha
das
and
or
add
pop
mov
sarb
xchg
jo
mov
mov
mov
pusha
andb
outsb
xchg
adc
aaa
xchg
loopne
adc
mov
mov
sub
mov
jo
and
inc
sbb
int3
fldenv
push
ret
loope
mov
mov
shrb
insb
rcrb
push
mull
scas
icebp
sub
sbb
and
cmp
inc
add
fistps
inc
jb
pushl
call
cli
push
es
shll
and
xchg
and
roll
xor
jmp
pop
adc
pusha
dec
inc
scas
rcll
movsb
icebp
xor
sbb
xchg
jb
shll
inc
fisttpl
add
push
cwtl
adc
cmp
push
daa
aad
cmpsb
add
and
sbb
and
lds
js
dec
or
jmp
sbb
add
inc
dec
lcall
or
loopne
inc
bound
sbb
imul
push
push
inc
sbb
xchg
jo
inc
xor
roll
inc
addl
xor
mov
rcll
cmpsb
inc
pop
sbb
sbb
pusha
dec
cmp
or
inc
inc
pusha
dec
mov
scas
movsl
in
inc
aaa
das
cwtl
adc
push
push
addb
inc
cmpsb
test
and
pop
or
or
xlat
pusha
inc
mov
dec
inc
arpl
adc
int3
jno
xor
sub
rorb
xor
aam
das
rcrb
pop
adc
dec
jo
das
les
adc
and
mov
xchg
xor
loope
es
test
aaa
inc
test
call
lds
jns
dec
dec
js
xchg
jl
addb
das
xchg
inc
dec
mov
hlt
popa
xor
das
cwtl
sbb
inc
xor
das
test
mov
je
call
mov
das
xchg
sbb
push
orb
roll
xchg
popf
lods
mov
xchg
pusha
das
imul
scas
lods
push
and
jle
mov
adc
mov
dec
cmp
inc
ret
mov
dec
fisttpll
xchg
pushf
std
push
push
aad
adc
cmp
icebp
push
cmp
aaa
mov
daa
and
push
fldenv
sbb
adc
pop
rcr
xchg
call
push
add
mov
sub
or
push
sbb
sub
sub
jg
adcb
push
sub
or
movsb
jg
dec
fcomps
lock
dec
jg
addb
jg
push
sahf
push
jg
fimull
xchg
adc
sbb
sub
jg
fimuls
push
ret
jg
and
ss
push
ret
push
call
shlb
sbb
xor
mov
pushl
pushf
xchg
sub
mov
add
fisttpl
popa
adc
xchg
adc
sub
cwtl
dec
or
jp
int
test
movsb
adc
or
xor
ret
in
push
lahf
xchg
jmp
mov
xor
popa
imul
popa
jo
fs
loope
sbb
pusha
xor
and
addr16
jg
xor
xchg
mov
mov
jg
push
jg
xchg
loopne
cmp
sub
call
cmp
add
ret
rorb
xor
push
ret
push
jg
dec
mov
lods
add
mov
mov
push
cltd
xchg
loopne
jg
mov
js
xchg
mov
mov
xchg
int
jg
jb
int3
xchg
xor
jg
mov
int
test
xor
shl
mov
xor
stc
xor
add
xor
push
pusha
es
jo
xor
push
inc
leave
xchg
push
xor
push
ret
mov
movsb
add
push
jg
and
adc
test
xor
dec
int
jg
add
into
dec
dec
jg
ret
inc
pop
pop
ret
inc
xor
and
test
xor
push
and
sub
pusha
es
mulb
and
test
push
test
jmp
test
push
bound
jns
pusha
faddl
xor
jns
in
xchg
adc
nop
mov
jns
cmp
data16
add
outsb
rorl
pushf
cwtl
dec
or
add
sub
adc
test
pusha
es
dec
dec
mov
cmp
fcomi
test
rorb
mov
push
int3
movsb
jns
push
push
int3
movsb
test
adc
int
adcl
jge
and
andb
je
push
ret
movsb
test
inc
int3
jns
es
add
sub
fisttpl
adc
push
addb
jns
idivb
and
fldl
sbb
pop
rorb
push
jns
or
cmp
jmp
push
and
fdivl
adc
and
imul
jns
push
ret
cmp
ja
sbb
dec
dec
dec
push
fdivrs
dec
xchg
cs
dec
or
mov
imul
jmp
sub
mov
rorb
jns
cltd
xchg
loopne
jns
out
popa
lahf
pop
cmp
mov
repnz
movsb
add
fdivrl
sub
dec
inc
stc
jns
cwtl
adcb
mov
push
jns
punpckldq
and
xchg
adc
jns
and
dec
shlb
jns
adc
sub
jns
pop
adc
movsb
dec
popa
rorl
sub
and
jne
fstpl
cmpsb
popa
icebp
shrb
es
mov
jmp
xor
loope
jns
jbe
dec
dec
sbb
dec
rolb
jns
lock
xchg
adc
xchg
lock
loope
lods
jns
inc
pop
adc
jns
ljmp
movsb
test
sahf
or
mov
outsb
sbbb
xor
sub
lods
data16
or
dec
inc
js
xchg
add
push
dec
or
sbbb
push
ret
jns
xchg
or
jns
mov
and
subl
xchg
sub
adc
ss
jo
push
xor
jns
mov
cltd
push
gs
dec
or
inc
jle
stos
icebp
sub
int3
movsb
test
insb
jns
dec
mov
mov
pop
xor
loope
jns
pop
jns
and
push
addb
lods
xchg
adc
data16
cmp
and
jns
push
pop
xor
jns
ljmp
test
push
cmpb
adc
shrb
mov
loopne
pop
dec
inc
xor
mov
jns
out
pusha
es
xor
dec
stos
pop
sub
sub
es
or
ret
add
mov
or
xchg
adc
jns
pop
pop
pop
pop
sub
outsb
es
sbb
adc
jns
mov
jno
es
loope
pusha
jns
js
push
add
jns
fsubrl
xchg
jo
or
int3
movsb
test
int
mov
push
and
dec
dec
cmp
js
inc
shrb
jns
mov
lock
imul
or
jns
mov
dec
cmp
shl
push
shrl
jns
sub
sub
cs
ret
clc
bound
and
dec
or
push
and
jns
dec
mov
or
sarl
dec
fsubs
lcall
dec
jns
es
scas
cltd
push
cmp
fisubrl
fxch
lahf
push
cmp
cwtl
dec
jns
rcrb
dec
insl
cmp
out
es
and
pushf
movsl
das
test
dec
rol
lret
xor
dec
cmp
aad
dec
jns
mov
jb
xor
or
es
mov
pop
clc
cld
movsl
das
loopne
dec
dec
pop
jns
es
int
test
add
inc
jge
sbb
sub
push
int3
inc
bound
and
movsb
test
push
mov
fdivr
dec
inc
jge
xchg
pop
mov
or
cwtl
fadd
das
cwtl
push
int
lds
jle
jns
dec
or
pop
cmp
outsb
or
cmpsb
cmp
xor
or
sub
fmuls
into
inc
lds
fidivl
jns
dec
or
mov
cmpsb
xchg
mov
jl
xor
push
mov
push
mov
cmp
and
mov
and
xchg
adc
jns
sub
insb
dec
mov
xchg
inc
xor
dec
jns
bswap
mov
lret
fldt
sub
sub
xchg
adc
adc
bound
xor
xor
loope
imul
sub
pop
push
stc
std
sub
pop
dec
inc
xor
popa
push
jns
aad
dec
mov
sub
and
jo
test
jns
xchg
cltd
xchg
jns
rorl
jns
xchg
jo
in
and
fnsave
add
cltd
xchg
lock
sti
sbb
or
mov
rorl
jns
or
dec
outsl
xor
push
jns
sub
push
outsl
jns
and
outsl
dec
sub
jns
add
or
push
mov
call
dec
dec
lock
in
push
jp
adc
and
xor
pop
mov
mov
cmp
mov
sub
push
pushf
test
xor
imul
pop
or
shll
pop
rcl
jbe
popf
jl
jl
xlat
aad
cmc
xlat
aad
lcall
cmp
fstps
movhlps
xor
lock
push
xchg
push
rclb
xor
insl
dec
dec
xor
test
xchg
cmp
js
xlat
push
sahf
mov
push
dec
push
scas
daa
test
ret
sub
imul
push
testl
loope
and
ret
xor
push
push
loope
mov
sbb
push
push
cmpb
popa
test
sbb
hlt
sub
jge
ficompl
aaa
cmp
dec
xor
sbb
xor
push
sub
jns
imul
jne
xor
aad
test
mov
es
mov
push
push
cmpb
and
cmp
ret
push
cmp
sbb
mov
inc
push
ret
dec
pop
cmpsl
dec
xchg
xor
mov
cmp
and
cld
dec
or
or
push
hlt
fsubrl
mov
pop
mov
stos
es
es
push
dec
or
pop
mov
push
int3
add
add
mov
xor
xchg
jo
lods
bound
sbbb
es
and
or
movsb
xor
shrb
add
mov
aam
add
fwait
pop
sub
sub
shlb
dec
dec
pop
lea
subl
and
pop
dec
or
add
sub
jo
imul
xchg
adc
jno
lock
pop
push
pop
gs
jmp
xchg
jae
enter
lcall
test
or
xchg
sbbb
popa
dec
add
xor
inc
xor
lcall
cwtl
mov
cld
das
popa
sbbb
dec
or
adc
sar
mov
arpl
mov
lock
aad
test
bound
loope
add
popl
xchg
add
aad
loopne
pop
and
ret
lcall
imul
adc
pop
sub
pop
push
adc
or
stos
pop
and
pop
cmp
push
xchg
pop
outsb
sbb
push
pop
inc
xchg
sbb
lcall
mov
adc
or
pop
pop
sahf
addb
sub
pop
pop
push
inc
test
pop
xchg
pusha
jo
sbb
dec
fsubrs
fcmovnb
push
dec
pop
xchg
andl
xchg
jo
pop
push
xchg
adc
into
dec
jae
test
and
xor
xchg
sbb
cmp
jbe
mov
pop
cli
std
mov
xchg
lds
std
xchg
jmp
call
xchg
imul
negl
cs
inc
xor
pop
xor
sub
call
mov
and
xchg
adc
xor
mov
push
pop
ret
mov
xor
dec
pop
int3
js
inc
dec
dec
pop
rclb
push
xchg
push
ret
inc
pop
and
mov
pop
data16
add
fldl
jmp
int3
inc
jg
insl
lcall
xchg
jo
mov
adc
lcall
xchg
pop
dec
add
sub
pop
push
ret
push
pop
sbb
pop
icebp
xor
push
and
pop
mov
test
dec
push
inc
xchg
loopne,pt
xchg
jo
dec
pop
lods
pusha
jg
xchg
mov
inc
pop
test
dec
dec
pop
mov
sbbb
pop
lcall
test
or
pop
cmp
dec
rolb
xor
xchg
xor
pop
dec
dec
xor
xor
and
mov
es
scas
sbb
xor
push
xchg
adc
lcall
xor
mov
pop
iret
test
leave
or
movsb
pop
add
ret
mov
lock
jo
movsl
stos
cwtl
mov
lea
movsb
pop
daa
and
out
clc
push
scas
pop
fstpl
cmp
test
or
into
cmp
pop
popf
jmp
mov
adc
sbb
stc
nop
xor
adc
lcall
pop
cli
jne
movsb
push
mov
jo
dec
or
cmp
clc
jne
and
or
sti
stc
and
in
mov
aas
mov
and
aaa
sub
sub
js
es
dec
dec
stc
and
adc
aad
aaa
sub
call
mov
stc
xchg
adc
in
jbe
pop
cmp
aaa
stc
jne
inc
mov
out
cmp
aaa
sub
insl
stc
dec
or
iret
push
rolb
js
stc
fisubl
stc
xchg
adc
movaps
inc
jne
fnstenv
dec
dec
stc
inc
xchg
adc
or
cmp
imul
call
loope
or
loopne
and
lods
fwait
xchg
stc
popa
lea
fsubl
adc
xchg
into
xchg
mov
jne
repz
jo
fwait
stc
lds
lds
pop
push
jbe
adc
jo
adc
stc
adc
sub
mov
inc
stc
or
adc
adc
jbe
adc
movsb
fwait
xchg
jo
stc
fwait
xchg
xor
es
sub
movsl
loop
mov
movsl
fdivl
stc
adc
mov
rcrb
add
mov
fdivrp
adc
movsb
add
stc
adc
fcoml
add
and
je
adc
inc
fsub
and
je
aaa
sub
push
popa
stc
adc
mov
and
int
xchg
stc
adc
stc
mov
clc
and
aaa
sub
or
dec
dec
stc
ret
dec
dec
xor
stc
in
push
adcb
inc
dec
adc
loopne
mov
stc
es
push
sub
aaa
sub
or
dec
dec
pop
add
stc
aaa
push
or
sub
mov
sbb
adc
xorl
aaa
insl
je
jmp
fbld
loop
and
or
add
sbb
mov
mov
cmp
or
xor
movsb
add
mov
inc
fdivr
outsb
push
ret
stc
xchg
ret
int3
int3
jo
sub
inc
jbe
js
dec
push
cmp
jo
dec
push
cmp
and
cmp
and
cmp
dec
pop
in
mov
mov
call
mov
popl
mov
lds
mov
popf
adc
xchg
add
mov
lods
subl
andb
jmp
test
inc
cmpsb
test
pusha
mov
pop
or
add
push
xchg
push
ret
add
mov
loope
sti
adc
fcoms
and
iret
or
or
mov
pop
push
les
xchg
test
bound
mov
or
mov
sbb
nop
insl
adc
mov
mov
xor
sbb
push
ret
or
adc
sbb
add
sbb
sub
push
lods
cmp
pop
je
faddl
psubd
xchg
and
push
ret
mov
lcall
js
adc
xor
cwtl
adc
mov
rclb
outsb
add
in
xor
aaa
xor
mov
dec
or
jmp
stos
sbb
pusha
dec
js
mov
test
mov
dec
je
addl
push
sbb
je
push
subl
cmc
bound
push
fimuls
sub
loopne
int3
add
or
add
movb
in
scas
add
push
mov
sub
mov
inc
sub
clc
je
add
aad
adc
or
mov
cmp
pusha
mov
xor
mov
addl
push
adc
cmpsl
push
mov
push
cmp
inc
jnp
and
pusha
dec
xor
je
push
bound
mov
cmpsb
add
push
and
mov
inc
or
fldl
fs
fsts
test
add
dec
push
adc
fldcw
shll
sar
fldenv
inc
sarl
inc
arpl
jge
mov
push
cmp
in
shlb
std
icebp
xchg
dec
push
test
dec
fnstenv
mov
fstps
shrb
xor
rcrl
loope
add
nop
mov
dec
or
mov
xchg
lock
jo
out
pop
ret
lods
pusha
scas
and
cld
sub
lods
enter
xchg
mov
xchg
cmp
and
jecxz
push
cltd
adc
enter
cmp
mov
fs
xor
in
push
push
or
mov
popa
jbe
xor
inc
push
test
enter
movsb
mov
sub
rorl
lds
xchg
inc
push
sbb
adc
push
add
mov
insb
xor
sahf
or
push
pop
mov
or
adc
mov
xor
movsb
shlb
and
and
test
sub
sub
add
test
cmp
cmpsl
sub
cmpsl
mov
cmpsb
test
adc
mov
cmp
inc
add
xchg
pop
xchg
jo
or
adc
pop
lret
mov
jae
mov
add
cltd
adc
add
xor
mov
test
or
xchg
cltd
pushf
testb
adc
push
mov
and
inc
test
push
cltd
and
cmpsb
enter
mov
push
xchg
sub
cltd
sbb
adc
ret
gs
cltd
jbe
scas
mov
xchg
cltd
and
add
push
cltd
sub
pop
jp
cltd
cltd
adc
or
mov
dec
dec
push
cltd
xor
push
call
and
mov
mov
jo
push
gs
dec
inc
mov
dec
cltd
fstpt
test
nop
push
cmpsb
cltd
xchg
sub
lret
xchg
cltd
pusha
or
add
push
sub
xchg
jo
push
cltd
jb
and
mov
cltd
xchg
pusha
scas
je
enter
mov
cltd
dec
dec
dec
jmp
xor
pop
cwtl
or
arpl
pop
push
add
test
and
xor
pop
fidivrs
pop
cltd
std
add
jo
mov
sub
inc
push
and
jge
dec
loope
mov
sub
out
push
gs
mov
dec
xor
cmp
add
ror
cltd
mov
cltd
adc
sub
addl
add
jo
sbb
mov
mov
loop
pusha
test
push
pop
dec
inc
gs
cltd
push
cltd
adc
cltd
xor
xchg
push
scas
cltd
not
aas
or
cltd
dec
out
pop
gs
cltd
jge
fwait
add
sub
xlat
stos
rorb
cltd
adc
dec
les
frstor
push
or
jmp
faddl
cmp
pop
mov
cltd
xor
push
push
cmpsb
cltd
mov
rcrl
test
sbbb
mov
inc
xchg
cltd
pop
add
dec
pop
sub
push
push
inc
cltd
loope
adc
push
cltd
cltd
dec
xchg
jo
cltd
daa
sbb
test
stos
lret
mov
ja
cmpsb
cltd
jge
stos
dec
or
std
jae
cltd
xor
les
push
testl
or
inc
shrb
cmp
jno
cltd
adc
arpl
ret
bound
lret
sbbb
aaa
sbb
lcall
or
and
pop
test
push
insb
cmp
mov
cmpsb
add
jo
pop
rclb
in
add
sbb
lcall
xchg
xchg
and
sub
jne
scas
inc
push
xchg
xchg
dec
out
push
cmp
inc
mov
adcb
push
andb
push
cltd
adc
push
ret
cltd
push
xor
xchg
or
insl
ret
ja
xchg
sub
adc
cmp
and
pop
sbb
push
gs
cmp
gs
xor
cmp
push
orb
cmp
dec
mov
lea
jo
mov
cmc
mov
adc
xchg
loopne
das
push
or
rcll
test
fsubl
push
loop
and
xchg
push
sub
jno
jle
or
cmpsl
loope
cmpsl
sub
loope
xor
fcoml
int
cmpsb
test
mov
cmp
aaa
pop
xor
xor
pushf
aad
sub
adc
push
or
mov
sbb
mov
or
ljmp
sbb
xchg
sub
ds
sbb
daa
push
mov
cmp
inc
jbe
adc
xor
out
daa
mov
inc
loope
jle
add
push
adc
andb
push
ret
inc
shrb
sbb
shrl
repz
iret
cltd
jnp
adc
pop
or
daa
je
adc
inc
daa
repnz
fstp
fidivrs
dec
gs
xor
loopne
daa
adc
daa
loopne
xchg
sub
nop
daa
test
jmp
cmpsb
daa
in
adc
fsubs
jbe
xor
xor
xchg
push
sub
mull
cmp
aaa
xor
daa
in
or
cmp
add
xchg
loopne
or
or
lret
daa
xor
faddl
xchg
mov
push
pop
or
iret
jno
js
add
pop
into
mov
dec
daa
sbb
xchg
sub
dec
daa
pop
cmpsb
test
mov
daa
loope
mov
popf
call
sbb
ja
push
daa
in
mov
mov
mov
pop
cmpsb
test
int
jo
lret
xchg
daa
mov
jno
cli
inc
pop
xchg
daa
call
push
mov
outsl
mov
sbb
sub
mov
sub
sbb
push
fidivl
in
jne
adc
pushl
lcall
daa
push
sub
popf
fstpl
push
add
cmp
push
and
fmulp
test
adc
cmpsb
add
das
daa
insl
fcoms
sarb
push
aas
pop
pop
cmpsb
test
nop
mov
daa
orl
mov
sbb
adc
mov
and
sub
sub
add
or
xchg
daa
mov
add
or
push
daa
nop
shrl
ret
mov
out
push
lods
add
adc
loopne
mov
mov
xchg
daa
mov
mov
xchg
daa
icebp
sub
push
cld
or
rorl
cmpsb
daa
sbb
pop
loop
daa
and
and
ja
and
sub
mov
jbe
call
dec
dec
mov
cmpl
je
push
cmove
out
jge
jge
hlt
or
pop
add
sbb
sub
push
mov
xchg
pop
push
pop
xor
pop
push
ret
push
xchg
lods
and
or
gs
push
lret
add
adc
sub
test
lret
push
push
test
sub
fcmovb
cmpsb
jo
lret
rol
insb
or
inc
les
lret
mov
orb
lret
ss
ret
mov
lret
and
add
jne
adc
iret
cmp
aaa
fs
push
ret
adc
movsb
test
push
add
iret
push
mov
iret
call
mov
call
mov
cmp
ja
push
iret
daa
sub
xchg
ja
jbe
adc
scas
aam
dec
xor
movsb
dec
dec
js
iret
xchg
mov
dec
or
into
jl
iret
jne
adc
sub
jmp
push
iret
rorb
mov
and
fmull
iret
xor
adc
aaa
test
push
and
pushf
insb
iret
test
add
sbb
das
add
pop
test
iret
or
adc
cmp
sub
shl
push
cwtl
iret
and
cmpb
xor
sub
iret
or
and
iret
dec
or
imul
dec
arpl
cmp
icebp
into
mov
cmp
stc
pop
iret
cmp
notl
popf
push
iret
xchg
shlb
or
and
cmp
iret
sbb
pop
adc
dec
dec
pop
and
dec
ror
clc
xchg
sub
dec
iret
dec
ja
xor
xchg
jl
cmp
insl
jmp
cmp
dec
iret
inc
pusha
ret
iret
cli
sarb
sub
into
imul
mov
push
ret
jno
adc
stos
iret
dec
push
ret
dec
iret
cmp
out
insb
jne
je
adc
clc
mov
adc
jb
popf
movsb
iret
fnsave
xchg
adc
push
test
xchg
rclb
add
mov
movsb
test
adc
pushf
iret
leave
add
and
inc
fwait
or
iret
js
pop
pushf
movsb
test
nop
pop
dec
sbb
or
je
or
add
out
shlb
in
push
call
sahf
movsb
iret
clc
rolb
call
movsb
add
rcll
iret
mulb
or
sbb
dec
or
add
mov
outsb
aad
iret
xchg
adc
cmp
testl
push
mov
dec
or
scas
or
sbb
push
iret
jnp
sub
push
sub
movsb
add
rorl
ds
dec
push
sbbb
xchg
xchg
jo
ret
sbb
mov
loope
and
ret
dec
enter
mov
iret
shll
dec
iret
jo
adc
or
adc
push
mov
or
xchg
iret
outsl
and
loope
dec
into
mov
sbbl
iret
dec
xchg
adc
enter
adc
jne
xchg
fwait
lds
sbb
or
pop
lahf
xchg
loop
cmp
mov
cmp
int
cmc
mov
inc
dec
push
cmpsl
stc
cmp
cmp
jb
fwait
and
push
or
push
cmp
and
lock
and
cmp
iret
dec
lods
rol
popf
mov
nop
shl
test
movsb
mov
loop
and
iret
and
mov
iret
orl
daa
sub
out
iret
popa
dec
add
push
dec
daa
sub
or
roll
push
rorb
mov
sbb
dec
adc
push
dec
cmp
add
dec
subb
add
or
dec
lahf
sub
rcrl
ret
lahf
and
add
push
pop
sbb
jo
ret
dec
fdivrs
test
fwait
insl
lahf
or
and
mov
call
sub
insb
sub
pop
enter
test
jae
lret
adc
fcmovnb
fnsaves
shll
and
sub
ja
popa
shrl
inc
dec
sbb
dec
xchg
inc
dec
adc
sbb
push
mov
push
js
pop
push
mov
lds
dec
push
xchg
push
adc
sbb
xchg
adc
and
gs
push
leave
sbb
pushf
or
mov
inc
test
subl
repnz
add
inc
jle
pop
ret
adc
loope
inc
or
fnsave
sub
mov
xor
ret
adc
pushf
sbb
subb
roll
sub
mov
imul
sub
pop
mov
sbb
adc
sub
dec
or
push
add
mov
lods
xchg
sub
cs
push
jne
inc
xchg
dec
adc
cmpsb
dec
les
sub
or
lock
xor
or
movsb
dec
shlb
out
push
cmpsb
test
pop
dec
and
adc
jg
lods
lret
add
inc
push
gs
js
pop
and
or
dec
push
dec
or
jns
mov
orb
pop
pop
ret
push
push
xor
rclb
xlat
cld
imul
sbb
sub
add
rclb
mov
popa
xor
or
in
xor
push
test
sbb
insb
xchg
pusha
ret
jmp
call
xchg
or
jno
out
rorb
pusha
push
or
pushf
pusha
loope
test
rclb
mov
inc
push
pop
push
pop
inc
push
test
pushf
mov
inc
test
inc
fiadds
inc
push
orb
push
mov
dec
or
inc
jmp
int3
loope
inc
push
or
sub
lahf
das
xchg
jo
out
or
or
cmpsb
test
callw
rclb
push
ret
or
xor
fwait
add
hlt
xchg
sbb
push
push
cmpb
jle
fimuls
adc
xor
and
cmpsl
pop
cmpsb
iret
inc
add
outsb
shrb
cmp
lcall
ret
mov
or
call
or
add
dec
or
sub
sub
fs
aas
cmp
fwait
loopne
mov
loop
or
loope
int3
or
jo
test
adc
or
lcall
push
adc
push
push
push
adc
jnp
lcall
test
sub
cmpsb
or
pop
xchg
das
cmp
stos
mov
xchg
fnstsw
mov
sbb
sbb
push
or
mov
insb
or
xchg
add
or
shl
add
push
insb
iret
pop
cmp
push
pusha
iret
dec
add
xor
iret
push
pop
mov
or
inc
test
pusha
dec
iret
add
adc
mov
imul
or
jo
fdivl
pushf
outsb
mov
adc
loop
sub
jmp
xor
xchg
mov
cmp
cmpsb
jo
mov
lods
mov
or
xor
mov
sbb
mov
scas
dec
andl
lahf
jmp
loope
cs
xchg
mov
call
jns
mov
push
xchg
insb
mov
xor
xchg
xchg
loopne
jns
and
and
faddl
cmp
adc
cmp
rcrb
xchg
and
js
call
loopne
jae
xor
add
dec
mov
out
or
movsb
jae
add
sub
push
jae
aam
dec
mov
orb
push
in
iret
push
call
ret
andl
pop
cs
subl
cmp
outsb
or
push
mov
mov
testl
pop
movsb
test
movsl
nop
sub
adcl
adc
adc
mov
sub
sub
sub
jo
cmpsb
sub
or
ljmp
data16
bound
jno
sub
and
bound
sub
xchg
sub
movsb
sub
inc
dec
xor
xchg
scas
cmp
sub
sub
out
movsb
xchg
jo
xchg
inc
mov
mov
push
push
adc
inc
dec
sbb
les
adc
ljmp
adc
add
jo
je
jne
adc
mov
aam
pop
movsb
add
xor
sbb
inc
or
push
jo
adc
pop
movsb
test
rcl
cmp
jmp
dec
inc
jge
cmp
xchg
adc
popa
push
fdivl
adc
inc
inc
loope
xchg
and
xchg
xor
add
sbbb
cs
add
sub
inc
mov
sub
or
cs
andb
xor
adc
fisttps
cmp
jbe
push
adc
jo
int3
add
push
cli
nop
mov
inc
js
xchg
adc
mov
push
ret
and
sub
or
inc
rolb
sub
xlat
orl
mov
mov
dec
js
repnz
jb
adc
in
rolb
fstps
push
push
js
data16
push
cs
or
cmpl
fs
aam
dec
js
sub
cmpsl
push
sub
xchg
ds
mov
mov
sub
push
addb
fdivr
cmp
sub
add
adc
lock
cmpb
sub
xor
negl
xchg
adc
xor
rcrl
sub
std
mov
push
sub
or
and
dec
jg
fwait
dec
lock
cmp
sub
ss
pop
movsb
add
negb
add
shrb
mov
pop
sub
inc
loopne
clc
sub
test
jo
pop
sub
mov
stos
xchg
pop
aam
pop
sub
mov
pop
mov
cmp
in
movsb
mov
rcr
sbb
pop
push
dec
push
and
leave
cmpsb
push
push
adc
add
int
inc
dec
mov
xor
lds
int3
roll
xchg
cs
and
ss
mov
pushf
iret
mov
mov
mov
and
or
and
aam
call
rolb
xchg
or
push
ret
inc
or
or
push
ljmp
or
jbe
je
sub
sub
ds
and
into
fmulp
push
pop
sub
sub
ljmp
cld
jecxz
xchg
cs
ret
call
adc
ficoml
call
inc
fwait
mov
cmp
adc
loope
fwait
clc
outsb
fwait
dec
js
dec
lret
push
inc
fwait
sbb
adc
out
lock
sbb
push
push
push
mov
mov
lods
xor
push
sbb
cmp
push
fwait
adc
pop
inc
fwait
xchg
mov
inc
cmp
adc
push
adc
das
pop
fs
jle
adc
xchg
fwait
sahf
mov
xchg
fwait
sub
push
inc
fwait
test
xchg
jo
fwait
and
and
xchg
loopne
wrmsr
pop
rorb
out
pop
loope
mov
or
scas
or
lods
xchg
adc
call
add
and
xchg
movsb
test
push
mov
sub
ja
and
xchg
leave
sub
xor
dec
enter
sbbb
push
cwtl
push
xchg
arpl
repnz
sbb
push
xorb
mov
arpl
call
arpl
cmp
jecxz
mov
adc
sub
push
ret
arpl
jo
xchg
lock
test
arpl
arpl
movsb
addr16
add
movsb
sub
mov
or
cmp
xchg
pusha
nop
in
ret
arpl
ret
sub
jne
inc
inc
dec
clc
out
mov
sbb
mov
inc
movsb
add
mov
add
jo
test
arpl
inc
inc
dec
arpl
arpl
clc
dec
push
enter
adc
add
adc
mov
cmp
shll
xchg
lock
arpl
nop
mov
js
jno
inc
xchg
int
loope
movsb
test
push
popa
mov
push
orb
arpl
arpl
insl
inc
aaa
push
xchg
arpl
push
je
inc
in
jecxz
sbb
mov
arpl
cmpsl
testl
mov
and
add
or
insb
adc
and
pop
enter
arpl
into
push
jnp
ret
prefetch
imul
and
in
inc
inc
dec
cmp
arpl
clc
inc
or
dec
fsts
mov
addb
xor
ja
ret
adc
les
or
jno
fidivs
adc
inc
call
loop
xor
or
jo
push
adc
adc
ret
pop
push
mov
xchg
ja
dec
push
pusha
and
or
or
xor
add
sbb
push
xor
and
fwait
test
xor
push
and
inc
dec
ja
mov
mov
adc
loope
ja
or
push
ret
es
adcb
inc
dec
jo
xor
sbb
or
and
or
cwtl
dec
ja
test
ja
pop
cli
fisttpll
ja
cmp
or
pop
mov
and
dec
loope
ja
mov
ja
dec
dec
movsb
add
and
dec
or
ja
and
cmp
push
les
add
lahf
xchg
cmp
or
insl
ljmp
xchg
dec
adc
outsb
fs
adc
out
ja
adc
sbb
xor
and
xor
mov
push
adc
push
ret
push
adc
push
stos
xchg
push
cmpb
mov
or
push
adc
adc
call
xchg
pop
cwtl
lret
or
outsb
test
jg
xchg
or
jp
sub
ds
push
push
std
sub
in
loop
fadd
lods
or
xchg
jo
cmp
pop
mov
rcll
or
insl
xor
loope
sub
xchg
ss
ret
adc
push
icebp
test
adc
or
adc
fnstcw
jo
pop
push
adc
jno
push
mov
adcb
pop
mov
adc
xchg
adc
addb
movsb
test
inc
js
inc
dec
mov
out
inc
roll
adc
sub
bnd
jo
inc
dec
adc
inc
or
and
cltd
mov
jns
sub
movsl
and
cs
sub
and
xlat
add
mov
or
dec
adc
and
dec
push
loope
adc
mov
adc
fmuls
sub
mov
je
stos
and
sbbb
pop
mov
and
ret
lock
addb
popl
pop
jp
jge
lods
dec
repnz
pop
xor
sub
sub
cmpb
pop
and
inc
filds
pop
add
xchg
push
cwtl
dec
push
add
cmp
push
adc
movsb
test
adc
adc
sub
adc
sub
push
push
sbb
sub
sbb
jnp
lds
lds
mov
and
mov
loope
pop
dec
mov
ds
arpl
pop
popa
dec
popa
xor
mov
stc
movl
dec
cmp
add
sub
xor
dec
adc
inc
fcoml
push
and
roll
jo
mov
mov
push
movl
push
mov
sub
mov
dec
adc
inc
mov
cmp
mov
mov
sub
enter
add
mov
inc
xlat
and
and
ja
or
fadd
orb
mov
dec
mov
jnp
ss
inc
sub
cld
mov
inc
and
push
rcl
aad
pushw
and
cmp
and
testb
and
inc
sub
adc
xchg
imul
inc
je
sbb
es
cmp
sbb
inc
mov
dec
mov
test
push
inc
cwtl
sbb
and
bound
jp
bound
sbb
inc
or
loope
mov
inc
cmp
push
mov
mov
push
and
push
pop
push
iret
call
xor
inc
xor
adc
inc
mov
stc
loop
out
pop
pop
mov
pop
or
or
sbb
inc
or
sbbb
pop
dec
add
and
jmp
sub
fwait
add
ljmp
sub
insl
pop
lock
xchg
ret
push
jmp
dec
lret
pop
ds
out
bound
add
dec
nop
push
inc
sub
iret
out
add
ficomps
jl
sahf
and
sub
sub
mov
test
scas
push
sub
jmp
inc
or
push
ret
cmpsl
push
and
inc
or
sub
inc
add
fmull
push
adc
adc
mov
das
aaa
bound
inc
shrl
mov
mov
inc
int
cmp
dec
dec
les
push
push
sub
sub
jo
push
mov
cmp
push
xchg
mov
int3
std
jbe
push
cltd
pop
cmp
ja
mov
push
inc
inc
cltd
sub
push
sub
ret
dec
movsb
aam
pop
mov
jge
clc
inc
or
push
inc
dec
sbb
inc
push
push
mov
inc
inc
add
mov
jb
gs
or
orb
sbb
mov
ret
mov
pop
pop
mov
sub
inc
icebp
push
sbb
push
sub
inc
pop
inc
enter
or
pop
jo
pop
ficoms
sbb
sar
push
mov
mov
pushf
lods
or
rorb
dec
xor
les
sub
push
sub
adcl
sub
sub
arpl
dec
jo
lods
and
sarl
inc
mov
popf
ret
faddl
xchg
in
pop
popf
mov
movsb
addr16
sbb
and
sub
dec
push
mov
and
pusha
jo
sub
loopne
xchg
dec
outsb
adc
shrl
lods
leave
adc
aaa
jne
lods
ja
push
aad
dec
dec
lods
popf
mov
jb
scas
or
push
xchg
lods
pop
inc
mov
pop
enter
in
lds
lods
mov
adc
adc
mov
lods
hlt
sbb
lods
and
mov
ret
mov
movsl
orl
imul
mov
rcll
xor
clc
sub
ja
cmp
inc
lods
outsb
pop
cmpsl
sub
push
lods
les
dec
cmp
cmpsl
sub
jnp
lods
and
inc
pushf
loop
lods
and
pushf
mov
and
add
adc
sub
xor
pop
test
loop
xor
mov
popa
bound
xor
loope
jg
icebp
gs
sub
xchg
push
lock
movsb
arpl
rcr
sub
jne
out
jo
cmpsl
xor
loopne
sub
sub
filds
dec
cwtl
imul
imul
xchg
inc
mov
das
imul
shll
push
test
adcb
pusha
xor
ss
js
jecxz
jle
add
xor
or
add
dec
push
ret
pusha
adc
dec
enter
xchg
xor
dec
cmp
xchg
mov
push
xor
mov
testl
sub
adc
push
call
sbb
xor
xchg
lds
xor
out
pushf
rorl
and
cmp
in
push
xchg
lock
xor
inc
or
loopne
xor
xchg
xor
loope
pop
jge
xor
xor
add
popf
mov
test
jne
and
xchg
push
inc
push
call
jne
adc
inc
mov
xchg
pusha
pop
xor
adc
insl
cmp
cmpsl
adc
mov
sub
xchg
push
mov
xor
push
pop
push
je
push
call
jae
push
addb
adc
sub
xchg
xor
push
push
adc
cmpsl
sub
push
jp
xor
jo
dec
and
xorl
call
and
xchg
test
add
popf
mov
push
pop
popf
mov
ja
adc
dec
or
jp
in
adc
loope
cmp
outsl
data16
sub
dec
inc
jo
mov
xor
pusha
mov
and
ret
les
dec
mov
sub
push
mov
push
add
pop
xor
or
inc
xor
xor
or
push
sbb
dec
adc
or
aaa
cmp
stc
pop
int3
sub
hlt
xor
sub
les
mov
add
or
inc
in
mov
dec
fsubrl
dec
xor
push
xchg
xor
or
xor
mov
jle
xor
hlt
loop
push
xchg
xor
cmp
bound
and
cmpsl
or
sbbb
loopne
and
xor
adc
ret
and
dec
pushf
pop
insb
or
popf
mov
add
xchg
cmpsl
cld
mov
add
insl
jnp
adc
pushf
mov
sub
xchg
outsb
adc
xor
or
push
xor
adc
mov
adc
rol
aad
dec
xor
pop
popf
mov
adc
pop
out
or
call
mov
loopne
in
sti
imul
and
push
sub
and
ret
xor
popf
push
cmp
cmpsl
jo
sub
mov
mov
xor
adc
adc
xor
ljmp
cwtl
push
adc
adc
stos
sahf
scas
lahf
mov
fdivrs
inc
or
mov
adc
xor
cmpsl
sub
ljmp
in
xor
push
fbld
jb
pop
xchg
push
push
jo
xor
nop
xor
sub
cmp
dec
mov
aam
sub
sub
or
pop
pop
cmpsl
xor
sub
push
xor
ljmp
push
aaa
xchg
dec
push
ret
mov
jmp
and
xor
movb
inc
or
xor
cmp
test
mov
inc
or
inc
push
ret
or
dec
rolb
ret
adc
lret
and
sbb
mov
xor
jmp
and
inc
or
call
mov
jo
push
cmpsl
xor
es
push
xchg
xor
push
xchg
mov
cwtl
test
xor
test
aad
dec
xor
rcrl
pushf
mov
loope
inc
or
jo
sub
pusha
xor
ret
jl
mov
pusha
add
jo
xor
loop
push
popf
mov
cmp
sub
outsl
ljmp
loope
xor
mov
cmpsl
xor
aaa
icebp
xor
pop
or
jle
sub
test
adc
or
in
mov
dec
push
xor
sbb
call
cmp
sub
ret
and
and
fisubs
cmp
sub
cmc
out
mov
cmp
push
hlt
cmpsb
push
xchg
cmp
xor
push
pop
out
ljmp
and
je
sbb
sub
fstpl
sub
stc
cmpsl
sub
les
adc
inc
cld
rclb
jno
cmp
cmp
hlt
push
mov
and
ret
sti
ljmp
and
mov
mov
add
cld
cli
ja,pn
insl
in
dec
fisttps
inc
dec
jnp
shrb
push
mov
gs
add
mov
ss
mov
sub
mov
clc
or
mov
inc
data16
or
in
and
dec
jp
pushf
mov
xor
or
sub
pop
or
cmp
pusha
jb
out
xchg
xor
pop
or
cmp
adc
cmpsb
cmp
fdivrl
push
cmpsl
sub
cmpsl
sub
inc
sbb
adc
pushf
cmp
push
cmp
cwtl
cld
mov
adc
cmp
dec
mov
and
lock
cmp
cmpsl
sub
into
cmp
fadd
add
mov
stc
insb
mov
adc
cmp
adc
sbb
inc
add
sub
push
cmp
dec
sbb
shrl
cmp
test
or
sub
and
cmpsl
dec
mov
sub
pop
out
cmp
cmp
cmp
sub
pop
iret
cmc
imul
loopne
shrb
nop
orb
push
xlat
mov
icebp
call
and
adcb
ds
cmpsb
hlt
sbb
push
jmp
call
mov
adc
aaa
movsl
into
or
sub
lods
add
repnz
pop
shll
adcb
xor
dec
xor
insl
loope
sarb
cmp
mov
xor
mov
jecxz
movsl
adc
add
mov
push
ret
pop
cmp
xchg
test
cmp
jg
cmp
sbb
in
lret
mov
mov
mov
cmp
ret
rclb
pop
cmpsl
add
out
test
add
sub
fs
popf
mov
ret
or
push
or
aaa
xor
push
adcb
ret
adc
sub
nop
cmp
xor
aaa
shll
pop
sbb
ret
adc
add
cmpsl
sub
aaa
cmpsl
sub
cmpsl
nop
aaa
sub
add
pop
adc
mov
aaa
push
dec
testl
rcll
adc
cwtl
in
xor
sbb
loope
dec
push
ret
adc
inc
xor
inc
push
mov
dec
cmp
or
adc
aaa
xor
jns
loop
rorl
jmp
stc
call
xchg
mov
aaa
adc
lret
push
in
mov
jg
add
aaa
adc
fdivl
cmpsl
sub
sub
out
push
lcall
sbb
sar
adc
sub
je
sub
pusha
aaa
mov
sub
lahf
aaa
cmp
sbb
fsubrs
dec
cmp
test
mov
call
aaa
mov
xchg
aaa
ljmp
movb
ret
aaa
dec
push
ret
and
push
xchg
mov
pop
mov
fucomip
xor
push
ret
add
or
popf
sahf
pushf
ret
jno
aaa
jno
adc
cmp
loopne
inc
or
fdiv
dec
push
ret
subl
or
mov
aaa
push
xchg
nop
bound
dec
mov
push
cwtl
mov
aaa
jecxz
xorb
aaa
push
jo
mul
jno
jmp
push
mov
push
xchg
aaa
aaa
sub
push
aaa
adc
rcll
push
cmp
loop
and
and
call
aaa
fmuls
loopne
and
es
adc
shrl
sbb
sub
lret
outsl
and
push
or
imul
pop
sbb
add
adc
popa
lea
ss
push
adc
xor
adc
sub
aaa
mov
add
add
mov
aaa
xor
adc
sub
aaa
inc
or
inc
scas
push
xchg
jo
aaa
cmp
icebp
aaa
scas
movsb
adc
fcomps
xchg
jo
loop
mov
adcb
add
adcb
imul
aaa
push
dec
push
xorb
cmp
mov
test
sub
fwait
jmp
and
cmp
cmp
jo
jmp
and
cmpsb
xor
adc
test
push
xchg
cmp
inc
or
cmp
addb
cmp
cmp
shrb
cmp
push
sbb
outsb
inc
pushf
mov
add
pop
cmp
mov
jecxz
xchg
xchg
dec
push
cmp
fdiv
cmp
adc
fcoml
cmp
into
and
jb
movsl
fs
pushf
mov
leave
xchg
jo
dec
xchg
jo
or
mov
push
cmp
xchg
inc
roll
pushf
mov
test
mov
xchg
cmpsl
dec
pop
or
cmp
mov
shrl
push
jae
das
enter
cmp
ret
cmp
cmp
jo
or
mov
mov
xor
and
pushf
mov
in
add
loope
jo,pn
pop
jp
sub
in
js
mov
loopne
arpl
and
cmpsl
sub
push
cmp
mov
dec
xorl
in
jno
mov
pushf
adc
jge
jo
int3
aam
pushf
sub
inc
pushf
mov
push
xchg
jo
cmp
adc
xor
xor
push
xchg
rclb
notl
pusha
sub
cmp
xchg
inc
or
loopne
pop
inc
add
call
aaa
fsubrs
dec
or
jmp
and
inc
or
cmp
movsl
mov
inc
jno
adc
and
and
mov
add
adcb
popf
cmp
xor
mov
outsb
sar
and
add
sbb
cmp
stos
add
dec
insb
lods
or
or
lock
mov
xor
pop
or
popa
mov
pop
cmpsl
sub
cmpl
push
into
add
add
call
xor
mov
cmp
adc
cmp
or
sbb
pusha
or
cmp
je
dec
pop
inc
or
ds
sub
in
adcl
mov
dec
mov
loope
or
cmp
loop
jge
sub
sbb
or
inc
or
inc
or
and
xor
cmp
dec
jne
adc
push
aam
dec
sbb
cmp
adc
fdivrl
cvtps2pi
mov
cmp
mov
stos
push
xchg
cmp
inc
or
mov
xchg
insb
call
adc
jmp
and
mov
hlt
push
mov
sbb
add
leave
mov
pushf
mov
pop
cmpsl
sub
cmp
mov
cmp
adc
fdivr
into
sub
mov
mov
cmp
bnd
dec
cmp
mov
xorb
push
dec
push
ret
ss
sub
cmp
stos
adc
push
imul
lock
je
cmp
sub
sbb
push
mov
ret
sarl
jne
jmp
adc
mov
mov
in
je
lock
sub
ret
hlt
cmp
push
mov
lret
jmp
stos
aas
mov
cmpsl
mov
jmp
adc
cmp
test
ret
mov
fs
dec
push
cmp
inc
or
cmp
dec
mov
inc
or
lds
int3
ret
jne
fstpl
mov
jns
fcmovb
push
mov
jl
dec
xchg
mov
pop
mov
push
loopne
mov
iret
jmp
pop
or
es
repz
repz
pop
push
int
daa
iret
xchg
movsl
lock
mov
and
xchg
push
jl
push
push
push
dec
mov
mov
and
dec
push
rcl
cmpsl
sub
les
xor
insb
and
and
cmpsl
sub
xchg
pusha
shlb
lret
mov
adc
sub
xor
dec
adc
negb
xor
test
out
loop
and
jne
adc
loopne
repnz
xchg
sbb
adc
or
inc
or
mov
aam
xor
xchg
loopne
sub
roll
adc
je
adc
push
mov
xor
call
jns
imul
and
dec
inc
pushf
mov
mov
push
dec
xor
enter
pushf
mov
scas
push
xchg
xor
push
xor
adc
fsubr
jns
xor
mov
fwait
sahf
arpl
and
mov
loopne
xor
sub
and
push
loopne
out
inc
push
cmp
xor
std
and
mov
loope
loopne
xor
ja
cmpsl
sub
lods
bound
cmp
xor
es
arpl
mov
es
jo
mov
push
pusha
or
js
lods
cmp
outsl
aad
adc
xor
dec
pop
adc
jno,pt
sub
sbb
adc
pusha
es
sub
mov
xor
aas
dec
push
and
push
dec
push
ret
or
push
xchg
pusha
das
test
cmpsb
xor
inc
pop
sbb
shrl
xor
push
xchg
and
xor
sub
aas
inc
xor
dec
lock
popf
ret
les
push
pushf
or
xor
adc
adc
xor
xor
lcall
jno
adc
sbb
xor
inc
push
xor
movsl
in
add
movsb
xorl
popf
mov
stc
call
pusha
and
dec
sbb
in
sub
adc
push
sbb
aas
inc
or
and
dec
adc
xor
test
jmp
add
cmp
daa
jb
xchg
add
push
test
add
pop
pop
adc
lds
lahf
cltd
stos
fisubs
adc
aad
xor
sbb
adc
pop
cmp
dec
xor
and
add
xor
or
xchg
xor
call
andb
jecxz
xor
call
gs
xor
cmp
xor
xor
in
ja
mov
xchg
femms
ret
cmp
in
mov
faddl
cmp
xchg
mov
and
cmp
sub
mov
cltd
dec
jne
jo
sub
xor
enter
jo
and
sub
mov
sub
and
dec
jo
adc
add
cmp
add
and
imul
inc
pop
cmpsl
or
adc
or
sbb
es
xor
sahf
dec
lods
push
xchg
xor
ret
xor
ret
push
and
sub
adc
pushf
iret
and
push
sub
ljmp
pusha
ljmp
xchg
sub
xor
les
adc
into
or
cmp
add
inc
xor
sub
stos
xor
adc
out
or
xor
inc
or
mov
xchg
loopne
xor
mov
sbbb
xor
andb
push
xor
mov
sbbl
cmp
add
xor
mov
test
stos
adc
pop
sbb
cmp
xor
daa
stos
push
xor
or
dec
js
stc
mov
sub
mov
adc
out
dec
push
sub
adc
sub
xchg
jo
inc
pop
xchg
xor
subb
clc
test
adcb
adc
cmpsl
sub
jo
add
inc
or
add
xchg
loopne
cmp
jae
xchg
xchg
push
add
or
xor
sub
dec
sbb
cmp
sub
inc
or
sub
sub
bound
or
mov
push
cmp
inc
xchg
lods
cmp
sbb
nop
jmp
movsb
mov
adc
sub
call
and
inc
or
push
movsb
and
adc
or
and
test
sahf
sbb
or
or
mov
mov
add
test
sub
push
cmp
adc
push
adcb
dec
jo
and
lods
and
call
and
xchg
inc
mov
rol
sub
or
push
orb
and
outsb
sub
test
and
test
and
call
sbb
and
inc
mov
and
ds
loope
add
xchg
jo
cmpsl
and
adc
add
sub
push
dec
aaa
jnp
add
movsb
dec
pop
add
mov
jo
and
adc
andl
sbb
and
jo
add
adc
push
mov
inc
inc
or
and
dec
push
ret
les
dec
mov
cs
cmp
xorb
xchg
mov
ret
mov
xor
and
and
cmp
les
dec
and
inc
or
and
ret
pop
jo
test
dec
and
xor
inc
and
imul
sbb
inc
xchg
mov
mov
das
sub
mov
fdivs
push
mov
insb
mov
subl
sbb
mov
mov
in
mov
xor
jo
subl
sbb
je
dec
push
ret
sub
dec
mov
aaa
add
pop
js
movb
inc
pop
push
mov
push
dec
pop
xchg
dec
add
test
lea
cmpsl
xchg
mov
xchg
mov
adc
jecxz
mov
or
and
jp
pop
pop
xchg
leave
mov
jle
or
xchg
mov
push
adc
mov
inc
insl
mov
inc
insl
jg
imul
es
dec
mov
movl
pop
outsl
mov
cmp
sbb
add
xchg
bound
leave
mov
pushl
test
cmpsb
push
xchg
jo
insl
scas
inc
mov
lea
insl
push
ret
cwtl
inc
test
ret
sub
sbb
addl
lds
dec
insl
aam
mov
or
insl
lea
insl
sbb
ja
and
loopne
cmpsb
sarb
insl
inc
inc
lret
dec
mov
inc
jo
cltd
xchg
or
add
sub
clc
insl
test
js
mov
adc
insl
adc
pushf
mov
sbb
bound
cld
popa
jo
mov
xchg
mov
and
inc
or
dec
sbb
push
ret
insl
shl
push
rcrl
ret
dec
insl
dec
xor
adc
clc
insl
or
sbb
shrb
insl
addl
inc
or
sbb
mov
insl
pop
cmp
mov
xchg
pusha
pop
and
fldenv
loopne
loope
push
mov
push
adc
push
xchg
jo
adc
mov
and
pusha
adc
insl
xlat
mov
xor
cmp
push
xor
sub
orb
cmc
pusha
insl
adc
ss
insl
pop
sub
lret
movsl
test
scas
or
aas
mov
xchg
enter
adcl
and
mov
adc
mov
fsubl
imul
adc
fmuls
out
or
adc
test
pusha
jg
and
pop
mov
and
and
adc
inc
mov
les
stc
testl
jo
xor
mov
jg
add
push
or
dec
mov
mov
jg
inc
or
dec
mov
loope
les
mov
pop
pop
mov
push
rclb
dec
pop
and
sbb
lcall
jg
inc
mov
mov
incl
ret
jle
adc
fsubl
jg
and
or
jg
cs
sub
mov
out
dec
mov
mov
cmp
inc
or
call
jo
cmpsb
ss
add
in
dec
add
es
out
add
lcall
js
or
cmc
mov
mov
jmp
add
je
cwtl
sbb
mov
mov
mov
sub
xchg
lahf
mov
mov
lahf
sahf
mov
lahf
cmp
nop
lock
fdivs
daa
sti
add
sub
pop
lock
sub
xchg
lahf
cmp
sarl
test
lahf
xor
and
and
mov
out
scas
xchg
pop
adc
add
pop
mov
loope
loop
or
mov
add
push
lahf
push
mov
out
jne
lahf
rcll
adc
mov
add
cmp
movsl
sub
lret
sub
jl
enter
adc
adc
scas
lods
int
sub
jo
mov
mov
dec
dec
lock
lods
push
lahf
or
adcb
xchg
mov
or
adc
ss
xor
or
lahf
mov
das
xchg
mov
push
adc
fsubs
movsb
mov
test
adc
sahf
lahf
movsl
sub
add
adc
xchg
mov
dec
jo
or
dec
push
lahf
test
xchg
mov
mov
dec
mov
mov
push
icebp
pop
pop
cs
fwait
popf
ss
sbb
std
inc
sbb
cmp
inc
subb
repz
enter
sbb
dec
pop
je
sub
xchg
mov
repnz
jb
movsl
sbbl
inc
add
or
mov
push
lock
subl
xchg
adc
dec
or
lahf
out
shrl
inc
or
dec
test
sub
sbb
stos
and
push
rorb
adc
adc
add
jl
mov
out
out
lahf
sub
insb
jo
aas
jae
mov
scas
movsl
lahf
add
push
add
push
lahf
shrb
lahf
lcall
stos
scas
push
xchg
pusha
lahf
enter
push
or
sub
mov
jge
jecxz
fidivrs
sbb
mov
add
xchg
mov
add
cmp
lock
and
pop
and
dec
js
lahf
fdivr
orb
or
fs
movsl
sub
lahf
sub
bound
or
or
cmp
sub
out
mov
dec
in
das
pop
sbb
das
pop
in
bound
outsl
loope
popa
scas
fstp
leave
leave
cwtl
cwtl
loope
scas
call
jns
inc
or
pop
iret
push
test
or
ljmp
xchg
fcmovne
push
sbb
leave
je
hlt
xlat
hlt
je
mov
adc
js
inc
xchg
inc
adc
jge
or
add
sub
es
add
xchg
iret
sarb
pop
iret
lods
mov
pop
iret
xchg
sub
not
xchg
mul
adc
out
mov
push
ljmp
dec
xchg
jo
jp
or
sbb
enter
mov
mov
jecxz
and
dec
xchg
iret
xchg
sub
mulb
mov
cmp
push
daa
adc
sub
xchg
popa
arpl
sbb
iret
sbbl
mov
xchg
pop
jno
sub
xchg
mov
mov
dec
xchg
repnz
sbb
dec
push
cmp
dec
cmp
mov
cmp
jmp
adcl
pop
xchg
pusha
ret
push
and
cmp
cmp
stos
cmp
movsb
push
cmp
add
aam
fimull
add
add
xor
sbb
imul
out
movsl
and
pusha
mov
jnp
sub
cld
add
cmp
and
add
fcmovne
movsl
sub
jp
pop
adc
lock
sbb
push
mov
adc
sub
pop
jb
or
push
xchg
mov
mov
inc
or
xchg
mov
lds
xchg
sar
dec
inc
sub
push
pop
sub
dec
xchg
cmp
push
or
and
ret
inc
or
adc
adc
xchg
frstor
xor
and
add
xchg
rol
sub
subl
xchg
cmp
and
xchg
mov
dec
xor
and
add
scas
adc
loopne
and
mov
mov
xchg
sbb
adc
mov
adc
dec
xchg
push
fwait
push
xchg
jo
xchg
clc
adc
xchg
mov
ret
xchg
mov
xchg
jo
xchg
xchg
pushf
dec
xchg
push
mov
sbb
push
mov
xchg
xchg
inc
lock
inc
mov
or
sbbl
xchg
imul
push
mov
push
cmpsl
sbb
btr
cmp
pushf
outsb
imul
ret
enter
sbb
pushf
jne
movsb
xor
push
mov
pusha
adc
mov
cmpsl
mov
daa
sbb
add
out
add
ret
cwtl
test
xchg
pusha
push
cmpsl
or
call
push
mov
inc
cmpsl
roll
mov
shll
add
jge
movsb
dec
mov
cmpsb
bound
push
add
push
and
cwtl
orl
adc
cmpsl
jns
xorb
ljmp
popf
jo
mov
sub
mov
adc
movsb
roll
mov
fdiv
in
or
in
adc
sbb
pop
pop
add
adcl
cmp
push
inc
sub
dec
pop
cmpsl
mov
xchg
inc
xchg
jo
add
scas
adcb
fistpll
xor
add
lds
pop
xor
inc
or
cmpsl
lea
cmpsl
mov
mov
or
out
push
mov
xchg
loopne
cmpsl
fsubrs
dec
mov
dec
js
call
cmpsl
adc
cmpsl
pop
ja
adc
in
fnstcw
shrb
sbb
cmpsl
mov
push
adc
das
and
xor
les
and
pop
adc
loop
pushf
cmp
sub
cmp
shl
and
fs
inc
hlt
ret
and
enter
rol
test
mov
inc
xchg
imul
xchg
loopne
jo
fwait
test
pop
cmpsb
push
aas
enter
test
hlt
adc
sub
imul
or
xor
xor
lret
xchg
je
test
je
adc
mov
or
add
into
cmp
aam
cmp
dec
sbb
addr16
cmc
cmp
inc
push
inc
mov
dec
push
cmpb
xchg
xchg
lss
mov
addr16
lret
xchg
testb
leave
jle
xor
adc
pop
addr16
cmc
add
xchg
mov
frstor
jecxz
lret
aaa
xor
and
jns
xchg
jno
cmc
jb
insb
push
insb
jle
mov
sub
or
xchg
pop
sub
xor
in
sub
in
and
notb
and
in
sbb
push
orl
pusha
cmpsl
cmp
rcrb
push
enter
pop
and
push
push
rcrl
adc
aad
cmpsl
cmpsl
js
xor
dec
movsb
orb
mov
push
daa
pop
mov
ja
cmpsl
xor
orl
inc
xchg
mov
leave
adc
inc
xor
rcr
sub
cmpsl
test
outsb
bound
xor
adc
mov
fsubr
cmp
cmpsl
ljmp
dec
fadds
and
call
aad
js
xchg
pusha
scas
inc
cmpsl
mov
stos
push
cmpsl
inc
or
test
push
push
inc
mov
xor
or
mov
inc
or
cmpsl
mov
sbb
sub
sub
outsb
adc
sbb
cmpsl
mov
pop
lods
and
dec
int3
mov
sub
mov
xor
popa
xor
shlb
jo
fidivl
cmpsl
bound
testl
xchg
cmpsl
add
dec
and
bound
movsl
push
sbb
and
mov
or
sbb
cmpsl
ljmp
dec
cmpsl
les
inc
push
ret
push
push
and
sub
scas
push
push
adc
fwait
jl
stos
sbb
inc
push
ret
cmpsl
cmp
jle
adc
jo
cmpsb
movsb
cs
call
ljmp
add
jb
es
cmpsl
and
adc
scas
xchg
and
or
pusha
subb
mov
xchg
adc
or
mov
add
and
mov
mov
xchg
scas
adc
mov
and
mov
dec
inc
inc
push
adc
in
mov
pusha
pop
or
mov
mov
dec
mov
ret
mov
cmpsl
jle
loopne
mov
rcrl
inc
or
mov
rorb
mov
cmpsl
sub
or
ds
inc
mov
dec
mov
shrl
fs
les
aad
dec
cmpsl
push
xchg
lock
and
jmp
cmpsl
nop
lea
adc
mov
cmpsl
push
xchg
jo
push
cmpsl
push
and
mov
sub
roll
imul
sbb
cmpsl
in
adc
pusha
cmpsl
nop
and
shll
cltd
adc
inc
mov
and
sbb
cmpsl
lods
sub
sti
pop
cmp
mov
cmpsl
arpl
sbb
adc
cmpsl
mov
add
imul
test
mov
push
xchg
mov
dec
stos
jno
mov
sub
sbb
cmp
imul
stos
sub
shrl
sbb
das
test
aam
dec
das
je
dec
lea
sub
add
push
xchg
loopne
push
dec
push
ret
das
mov
das
fcoms
push
bound
sub
bound
inc
or
fsubs
mov
inc
or
mov
das
sub
or
mov
mov
sbbl
or
adc
adc
das
push
in
sub
imul
mov
pop
adc
mov
das
and
cmp
mov
dec
das
repnz
adc
repz
mov
pushf
hlt
cmpsb
sub
add
shrl
aam
or
mov
mov
test
push
xchg
jo
push
mov
das
adcl
call
xor
dec
js
in
and
clc
addb
das
daa
ds
push
das
arpl
mov
das
xchg
mov
das
push
ret
cwtl
jae
add
sahf
mov
lock
xchg
jo
pop
dec
pushf
mov
mov
sbb
lret
cli
sub
into
add
mov
mov
and
cli
movsb
mov
into
sti
ret
test
jge
je,pn
mov
pop
sub
or
lret
add
inc
push
ret
dec
mov
add
xor
push
sub
inc
or
pop
push
xchg
jo
mov
mov
popa
and
or
or
mov
adc
xchg
pop
mov
jnp
inc
sub
ljmp
clc
jmp
xchg
jo
mov
imul
pushf
add
mov
mov
adc
sbb
out
mov
adc
push
pop
sbb
pop
adc
mov
subl
or
add
mov
in
and
xor
xor
lahf
inc
sub
in
pop
mov
mov
pop
dec
cmp
cmp
and
enter
dec
push
repnz
push
mov
pusha
in
jmp
pop
cmp
cmp
loope
rorb
ds
test
ja
xor
push
sub
jmp
push
xchg
pop
cmp
inc
or
pop
push
ret
dec
mov
lock
pop
dec
ljmp
push
adc
mov
pop
push
xchg
jo
dec
push
sbbb
ret
inc
pop
in
cmp
or
pop
add
loope
mov
adc
js
sub
push
inc
mov
dec
jo
sub
loop
sub
out
call
inc
jbe
daa
clc
adc
or
sub
loopne
cmpsb
or
aaa
xchg
adcb
pop
daa
mov
dec
mov
test
or
sub
mov
inc
or
dec
fidivl
or
minps
inc
pop
lds
test
inc
or
push
ret
pop
mov
pop
mov
and
or
adc
adc
pop
adc
push
shr
xor
sbb
mov
pop
xor
sub
xchg
pop
cmp
pop
pop
dec
and
ret
mov
test
loopne
adc
pop
xlat
xchg
ret
inc
pushf
out
or
sub
or
mov
mov
mov
inc
mov
sub
mov
pop
js
loope
or
jne
popa
inc
mov
and
xchg
pusha
adc
aaa
inc
sbbb
jbe
add
inc
pop
fisubrl
adc
sub
sub
dec
test
mov
push
out
push
ret
jo
sbb
ds
loopne
inc
pop
dec
add
fldenv
fcoml
adc
jg
fnstenv
mov
or
push
pop
std
dec
mov
outsb
or
and
or
pop
ret
push
rclb
mov
mov
mov
popf
outsb
pop
and
jg
mov
push
in
jle
loope
dec
xchg
out
dec
fs
xor
sub
jo
test
or
xchg
pop
push
addb
loope
add
inc
pop
push
sbb
inc
push
pop
pusha
adcb
add
inc
inc
mov
movsb
inc
adc
repnz
push
icebp
imul
add
adc
fs
sub
scas
sub
pop
rcll
adc
mov
mov
sub
mov
sub
jle
inc
mov
pop
mov
bound
fs
add
mov
in
mov
xor
ret
mov
adc
mov
push
and
xchg
sub
xchg
and
addb
sub
subl
xorl
inc
sub
xchg
fs
ja
jg
inc
mov
inc
or
aam
cmp
loope
test
xchg
sub
jle
xchg
sub
in
or
pop
cmp
insl
or
mov
sub
xor
mov
push
ret
orl
mov
add
sub
inc
rol
push
ret
lods
mov
lock
fsub
idivl
jmp
in
sbb
mov
pop
dec
adc
cs
cwtl
sbb
sbbb
es
xor
jo
add
cwtl
and
out
and
jl
out
sub
xlat
mov
push
lahf
and
pop
clc
mov
add
out
push
sub
sub
push
add
insl
fmuls
rcll
jae
pushf
xchg
jb
mov
mov
pusha
push
jp
adc
insl
pop
or
add
ja
sahf
and
cs
dec
in
mov
mov
push
push
push
mov
mov
mov
je
xchg
test
sbb
push
outsb
inc
pop
or
arpl
rolb
or
dec
mov
xor
xchg
pop
test
fcoms
or
dec
insb
add
mov
jp
dec
push
bound
out
sub
dec
adc
mov
or
push
rcrb
out
inc
mov
xor
rol
jmp
xchg
jg
in
out
sbb
dec
xchg
xchg
jmp
jb
js
call
mov
lds
jnp
push
sub
dec
mov
int
test
jle
test
sub
iret
adc
les
cltd
xchg
push
fnop
lock
mov
mov
in
ret
lods
imul
loop
jo
outsl
adc
scas
les
lea
mov
push
inc
push
stc
or
mov
in
cli
call
jmp
inc
icebp
lock
frstor
jo
fwait
push
sbb
les
lcall
xchg
mov
cmc
sarb
sub
push
jb
push
out
or
cwtl
dec
outsl
push
out
or
and
rcr
push
sbbb
fiaddl
out
push
ret
xor
cmpsl
add
cmpl
stc
cmp
and
inc
mov
test
add
out
mov
inc
enter
std
add
mov
orb
out
jo
add
adc
jmp
push
and
cltd
subb
dec
addr16
loopne
mov
addl
fs
andb
sub
mov
scas
and
push
push
mov
adc
inc
and
push
push
ret
adc
out
xor
xorl
and
pop
and
cmpsl
sbb
mov
or
ja
pop
rclb
adc
dec
push
std
data16
stos
pop
fucom
les
pop
or
pop
adc
push
xorb
xlat
push
cwtl
int3
pop
scas
adcl
push
dec
cmp
loope
xor
aaa
add
out
cwtl
insb
aam
inc
out
dec
mov
inc
or
fs
test
lcall
int3
out
mov
lds
les
pop
loop
pop
popf
test
or
out
adc
pop
int
out
adc
push
out
cmp
add
and
fcoms
sbbl
out
xor
daa
lret
inc
or
out
clc
sub
sbb
adc
cld
push
sub
movsl
pusha
out
add
adc
out
mov
mov
out
cs
xor
ret
imul
xchg
test
and
out
mov
std
jns
mov
or
xor
imul
fadd
out
and
xchg
pusha
outsl
out
inc
jp
adc
out
pop
and
mov
push
out
in
and
cmpsb
cld
inc
adc
scas
in
push
adc
cmp
jle
push
mov
add
enter
add
mov
mov
xor
inc
cmp
loope
or
adcb
adc
sub
subl
xchg
nop
dec
sub
mov
pop
stos
inc
imul
push
imul
imul
xor
sub
xor
imul
imul
in
aas
call
pop
jo
or
mov
xchg
imul
notb
sbb
and
jp
xchg
add
jns
xor
shll
push
mov
sub
cmpsl
dec
aad
add
sub
je
aam
test
xchg
jo
insb
xor
push
ret
cmpb
or
dec
js
xchg
push
mov
stos
inc
out
cmp
icebp
and
add
or
std
adc
arpl
jo
ret
and
dec
leave
pop
lret
loopw
xchg
js
push
icebp
in
stc
mov
inc
or
and
nop
shlb
mov
add
xor
adcl
jo
cmp
dec
push
std
jmp
mov
pop
jl
or
inc
or
jns
les
dec
jo
or
subl
xor
std
sbb
xchg
xchg
js
or
inc
outsl
dec
pop
test
add
std
or
add
call
std
mov
or
xor
std
sbb
mov
mov
mov
xor
dec
cmp
dec
sbb
std
push
sbb
cmp
std
xorb
pushf
call
in
stc
pop
pop
insl
adc
adcl
push
std
push
addb
push
cmp
dec
or
daa
add
cmpsb
jno
or
mov
push
ret
testl
push
xor
mov
repnz
jl
das
push
int3
jnp
pop
mov
ljmp
or
pushf
fs
pop
enter
mov
pop
add
shrb
jmp
pop
jns
jl
in
sub
js
sti
adc
mov
mov
out
or
std
sbb
pusha
xchg
xchg
pusha
scas
sbb
xor
out
push
xlat
mov
or
fimuls
daa
or
ret
xchg
mov
aaa
sub
push
jb
pop
mov
dec
sbb
mov
leave
add
icebp
inc
rorb
into
xchg
popa
jno
subl
or
inc
sbb
push
add
cld
and
rolb
fstpt
dec
xchg
subl
pop
adc
dec
ss
jne
rolb
sti
mulps
stc
adc
sub
push
jb
lea
or
mov
mov
cld
push
enter
xor
fs
jnp
inc
ds
jne
adc
sub
bnd
xor
nop
sbb
pop
xchg
pushf
pushf
in
pop
xchg
push
enter
jne
aaa
xchg
shrl
or
push
stos
mov
je
xchg
inc
stos
aas
dec
outsb
inc
call
mov
iret
lret
inc
pop
imul
imul
xor
aam
dec
mov
jo
jo
mov
mov
loope
push
mov
dec
mov
sub
xorb
mov
or
pusha
mov
mov
into
push
sbb
and
orb
scas
xchg
jb
int
lock
mov
popa
movsl
jns
int3
mov
pop
push
push
xor
aam
cwtl
mov
jle
clc
adc
mov
or
shll
dec
pop
test
xor
adc
aaa
xor
ret
sbb
push
or
pop
mov
mov
sbb
lea
test
sahf
xlat
mov
or
sbb
xchg
inc
ss
cmp
mov
je
push
xor
or
sbb
or
or
adc
jb
xor
mov
aas
arpl
xchg
int
jb
jnp
or
nop
ficompl
pusha
addl
sub
je
adc
xor
fwait
repnz
shlb
jno
jmp
add
inc
loope
subl
xor
imul
daa
push
divb
loopne
sbb
inc
or
dec
int
dec
jo
std
inc
mov
adc
cmp
add
pop
nop
jecxz
int3
dec
inc
movsl
mov
mov
jo
adc
mov
lods
cltd
push
mov
cmp
xor
mov
les
imul
fdivr
add
mov
inc
int3
test
inc
or
sub
add
test
repnz
pusha
push
test
push
and
jo
inc
stos
mov
test
outsl
aad
dec
ret
cld
sbb
ja
int3
adc
dec
and
pop
sarb
addr16
ja
test
dec
ret
xchg
cmpb
ja
addl
xchg
and
push
dec
ja
mov
scas
call
cmpsl
pusha
ror
lret
or
adc
cmp
dec
mov
dec
xchg
lock
sub
sub
and
xchg
sub
sbb
nop
and
jns
cmp
outsl
aad
out
inc
and
popa
mov
and
leave
lret
inc
cmpsl
or
sar
mov
and
and
fimuls
dec
sub
or
mov
push
push
nop
mov
dec
or
xor
pop
bnd
add
inc
jnp
sub
in
imul
dec
jle
decl
mov
aas
in
or
jmp
push
nop
ss
call
inc
sub
incl
mov
outsl
test
je
cmp
sub
jle
pop
aas
mov
dec
xor
pop
cmp
ds
and
jle
lret
jmp
shr
mov
inc
clc
aas
pop
and
jmp
movsl
fucom
jl
jmp
decb
xchg
testb
js,pn
testl
xorb
test
mov
jne
add
aad
jmp
std
fstpl
mov
jmp
sbbb
nop
mov
adc
adc
dec
movsl
jnp
jmp
jg
inc
xchg
jb
arpl
std
push
dec
xor
xchg
out
lea
int
in
vmwrite
push
out
fdivrl
int3
push
mov
mov
pop
mov
or
into
ljmp
cli
decl
inc
lcall
xor
jmp
cwtl
push
xchg
jg
das
jo
test
mov
push
lcall
lods
jmp
xor
in
jb
pop
sarb
adc
ret
push
xchg
ja
aaa
adc
stc
loopne
mov
sub
adc
sub
mov
lock
cwtl
call
mov
push
inc
sbb
jmp
add
cs
scas
cmp
stos
and
push
cltd
pop
lret
scas
cmp
xor
xchg
out
lret
dec
icebp
incb
jnp
sbb
adc
shlb
mov
out
ss
mov
jle
or
jecxz
cmp
jne
xchg
paddd
push
je
rcrb
rolb
fcmovnu
mov
cmp
mov
setb
in
jmp
mov
mov
cwtl
jle
sub
rcrb
jo
sahf
mov
lcall
leave
jb
pop
movsl
insb
or
dec
mov
shrd
call
pop
lahf
call
stc
or
jl
push
cmpsl
inc
cmp
adc
int3
xor
test
scas
jg
add
out
jae
push
aas
mov
push
nop
addr16
outsb
xor
lcall
enter
repz
xchg
push
cs
clc
mov
add
push
test
into
clc
cmp
int3
incb
scas
inc
ret
aaa
push
pop
cmp
ds
jns
cmp
sub
add
jle
mov
loop
aaa
jecxz
jns
in
mov
pop
dec
mov
out
inc
ds
test
ret
pop
lock
xor
pop
rorb
fcmovnbe
fimuls
out
push
mov
xchg
scas
jg
cmp
int
mov
push
pop
test
cmpb
out
enter
fistpll
std
ds
into
push
xchg
out
pop
add
out
adcb
arpl
sbb
xchg
push
jmp
cmp
push
push
mov
mov
add
stc
inc
shlb
je
fsubl
das
add
and
sbb
jmp
leave
dec
sti
popa
adc
cli
push
in
add
clc
jmp
into
stc
movsl
dec
sbb
xchg
fsubs
sub
cmp
sub
cli
dec
gs
and
stc
xor
push
sbb
push
push
test
adc
add
mov
fcomps
aaa
dec
in
rorl
xor
cmp
or
sbb
movsb
mov
test
pusha
jbe
inc
sub
xchg
xchg
mov
mov
add
pop
jno
dec
aaa
or
jl
addr16
sbb
out
mov
mov
push
mov
ds
jle
std
push
dec
jmp
sbb
js
lahf
int
push
outsb
lret
xlat
push
push
jecxz
das
mov
icebp
lcall
push
mov
test
aam
push
push
test
mov
out
push
dec
lock
je
xchg
out
dec
sub
ss
sbb
gs
lret
sbb
xor
jo
mov
or
sbb
into
xor
imul
xchg
pop
sbb
cmp
outsl
pushf
aas
mov
dec
gs
lret
cmp
sbb
push
push
test
cmp
out
aas
sbb
in
outsl
outsb
sbb
in
pusha
addr16
sbb
in
sbb
push
aas
adc
outsl
mov
xchg
outsb
nop
lret
inc
sub
sbb
and
xchg
mov
bound
mov
or
cli
loopne
dec
adc
sbb
sbb
mov
or
out
inc
xchg
movsb
mov
mov
movsl
fsts
cmp
dec
pop
test
call
imul
stos
into
sub
push
and
sbb
adc
sahf
ss
movsl
sub
mov
lahf
test
jecxz
lahf
fisttpl
fdivr
adcb
inc
outsb
js
dec
aas
mov
pop
mov
dec
and
loopne
add
lods
sbb
or
mov
xchg
lret
outsb
sbb
ds
dec
loopne
pushf
les
sub
sahf
adc
imul
decl
pop
daa
jl
mov
sub
push
and
mov
jmp
lods
mov
rcrb
mov
mov
shrd
enter
andl
daa
xchg
jge
insl
pusha
jb
leave
and
dec
inc
xchg
push
jae
aas
xor
loopne
loope
test
inc
in
adc
adc
mov
rcll
hlt
je
inc
fwait
add
cmp
decl
fs
ja
sbb
rolb
mov
xchg
iret
loope
gs
ljmp
fs
mov
paddw
add
nop
out
fsts
mov
insb
mov
popf
ror
sub
nop
xchg
mov
rcl
andb
cli
cmpsl
out
mov
jb
rorb
scas
adc
dec
pop
insl
movl
fldcw
clc
fucomp
pop
sub
jmp
mov
jg
outsl
push
push
add
ret
lahf
cmp
jbe
jg
pop
push
pop
imul
aas
call
dec
sub
scas
pop
sub
imul
es
loop
subb
dec
xor
int3
xchg
xchg
mov
inc
push
mov
push
pop
mov
mov
fisubrs
xchg
iret
sub
mov
rcrb
jmp
push
push
pusha
push
inc
scas
int3
jmp
push
mov
sub
mov
and
lock
repz
push
and
push
inc
fsubrs
dec
aas
out
inc
pop
mov
add
popf
dec
cmp
jno
jp
mov
aaa
movb
adc
outsb
lahf
sahf
push
outsb
pop
imulb
fisttps
push
dec
bound
inc
out
mov
pop
inc
lret
mov
xchg
lret
daa
pop
fnstenv
and
inc
inc
sub
push
inc
xor
push
aas
incb
push
or
cmp
xor
jg
rcrb
cld
movsb
inc
jnp
jne
push
sbb
adc
mov
cwtl
jecxz
and
push
inc
je
movsl
std
and
std
add
jbe
lcall
aas
inc
gs
lret
dec
push
adc
or
fnstcw
test
xchg
les
xchg
rcrl
adc
jo
add
inc
ret
sbbb
aas
adc
das
andb
jb
mov
mov
mov
sbb
or
inc
imulb
xor
aad
pcmpgtb
rclb
mov
fidivs
jo
sub
fidivrl
insb
mov
lcall
fwait
mov
or
mov
out
cld
adc
sub
les
pop
add
arpl
inc
aaa
jle
aas
dec
scas
movsb
rolb
ds
sbb
and
ds
mov
push
jns
mov
lcall
inc
enter
in
or
sti
pop
enter
enter
fstpt
idiv
inc
ucomiss
repnz
out
mov
inc
or
pop
movsl
fwait
bound
fistpll
jmp
test
mov
bnd
lock
scas
adc
push
adc
xchg
scas
cmp
or
cmp
jbe
cld
push
in
sbbb
mov
dec
mov
test
inc
popf
and
shll
push
call
inc
mov
xchg
je
sahf
sarb
xchg
cmp
aas
xor
jle
and
nop
pop
dec
mov
mov
mov
cmp
cmpsl
sbb
jns
push
bnd
out
je
ds
pusha
pop
incb
test
test
mov
jbe
fiadds
das
inc
mov
xor
insb
jmp
cmpsb
sub
movsl
pop
adc
or
mov
xchg
jne
dec
cmpsl
sub
pop
aas
sub
and
ss
add
cmp
cmpsb
sahf
rclb
push
push
push
shr
das
ret
pop
xorl
push
in
mov
mov
dec
cmp
aas
movsb
push
imul
dec
sub
add
mov
ds
add
dec
in
fmuls
pop
bnd
loopne
mov
shrb
push
stc
fwait
push
fdivrs
movsb
jmp
nop
movsb
push
loope
xchg
icebp
and
lret
jp
sbb
out
pop
fcoml
push
cs
cltd
rorb
or
mov
push
fstps
push
shrb
mov
movsl
add
cld
sub
in
mov
mov
std
leave
fs
push
mov
aaa
mov
sub
push
cs
movsl
jb
or
incl
shr
data16
inc
ljmp
inc
xlat
mov
inc
push
mov
cmp
and
adc
push
repnz
xchg
mov
vmwrite
inc
iret
mov
xchg
and
inc
push
repnz
mov
and
jns
push
mov
push
cmp
mov
lret
cmp
jns
pop
pop
and
in
cltd
or
or
sbb
popa
adc
push
dec
dec
push
push
test
les
add
push
cld
cmp
push
xchg
mov
js
mov
mov
sbb
add
jo
xor
movsb
loopne
push
cmp
sbb
add
mov
jo
movsb
sbb
sbb
or
popf
dec
add
test
repnz
sbb
out
push
loope
pop
adc
mov
mov
cmp
mov
ss
dec
sub
push
stc
adc
mov
sub
jo
adc
sub
shrb
ret
xor
pop
aas
fidivs
mov
cmpsb
sub
mov
push
jo
pop
jo
jmp
dec
dec
addb
je
jmp
js
cmp
je
scas
or
mov
in
call
xchg
push
add
sti
test
push
sbb
ds
cmp
inc
sub
xchg
add
push
cmp
mov
test
lea
lock
mov
sub
movsl
repnz
sub
call
aam
pop
sahf
xchg
jmp
rcll
inc
adc
sub
mov
cmp
mov
fdivl
std
adc
inc
sbb
imul
pop
add
mov
jge
in
shlb
pop
sub
lret
mov
adc
push
sub
or
jne
adc
push
fst
push
ror
dec
in
inc
adc
and
loopne
loopne
cli
sbb
shl
fdecstp
jo
call
add
fidivs
into
pushf
jle
ds
mov
pushf
mov
test
dec
pop
xchg
lahf
mov
fcmovbe
pop
ror
mov
nop
cs
push
jmp
xor
decl
scas
adc
aas
inc
xchg
mov
fists
lods
pop
aad
sub
arpl
or
add
insl
xor
stc
mov
inc
insl
scas
out
inc
movsl
fsts
imul
clc
rorl
mov
mov
dec
push
cs
push
push
jns
cmpsb
ss
test
imul
les
sarb
ds
addr16
pop
test
aas
add
inc
nop
dec
ja
jg,pt
aas
xor
push
test
jmp
imull
lcall
pop
pop
mov
jmp
sbb
xor
xor
dec
mov
mov
mov
ljmp
or
mov
mov
push
aas
outsb
mov
or
adc
mov
rol
push
incb
push
or
dec
pop
push
dec
fsubs
movsl
mov
dec
ret
out
das
out
fdivs
aam
bound
movsl
push
push
adc
aaa
cmp
mov
sbb
subl
scas
subl
sbb
aaa
ret
jo
pop
mov
fists
shlb
push
aas
jns
aas
push
movsb
xchg
out
fsubr
enter
xor
shl
aad
enter
dec
push
cmp
lods
push
fisubs
mov
mov
pop
sahf
fimuls
into
pop
dec
movsl
js
aam
dec
sub
xor
push
lods
in
cltd
jg
pusha
and
xchg
notl
mov
call
dec
rclb
imul
enter
xchg
jle
xor
aas
mov
in
test
push
push
nop
mov
dec
in
push
sub
sub
inc
inc
adc
cmp
jmp
sub
or
jbe
test
pushl
cwtl
jle
pop
nop
xchg
fdivr
xor
cwtl
shlb
dec
add
aas
test
xchg
dec
in
xor
in
or
lea
or
jno
stc
enter
jo
pusha
jmp
int
sub
test
inc
or
and
out
pusha
mov
loopne
jb
fiaddl
loopne
xor
je
mov
xor
mov
inc
mov
adc
iret
test
pusha
sarb
fists
jmp
mov
outsb
sub
mov
gs
int
sub
sub
xor
cmpsb
ljmp
repnz
cmpsb
mov
adc
push
in
pop
aas
dec
push
sub
push
sahf
lods
sti
jo,pt
das
jp
adc
pop
inc
dec
inc
mov
jl
sub
dec
je
xor
test
ficoms
das
adc
pop
sbb
push
nop
iret
cmp
xor
jle
sub
dec
sub
into
ds
pop
mov
enter
dec
mov
lcall
in
das
pop
stos
shrl
xchg
xchg
in
test
das
jns
dec
insb
stos
es
push
stos
xchg
mov
cld
stos
out
dec
pop
repnz
stos
loopne
shrb
les
xchg
xchg
mov
test
pop
bnd
bound
add
daa
sub
outsb
sbb
sub
nop
jae
dec
add
aad
sub
fsubrl
pop
sub
push
pop
dec
lahf
push
sub
add
sub
add
sub
lahf
fists
mov
sbb
pop
imul
xor
adc
int
or
in
inc
push
xchg
inc
pusha
lfs
xchg
nop
sub
pop
add
aas
mov
add
out
pop
arpl
shrb
dec
and
adc
out
fstp
adc
loopne
mov
push
inc
aas
mov
dec
mov
fsubrs
and
jne
insb
cwtl
pop
xchg
aas
pop
ja
sbb
sarb
push
call
mov
mov
sub
mov
das
mov
and
xor
cmpsb
push
loopne
xchg
js
inc
fwait
cmc
xlat
sti
les
lcall
je
push
sbb
inc
in
popf
cmp
adc
push
mov
xchg
incl
xchg
es
ja
adc
or
pop
aad
stc
icebp
mov
sti
sbb
mov
stos
pusha
sub
mov
and
pop
dec
sub
hlt
mov
push
in
cltd
out
sbb
or
movaps
sbb
fidivs
nop
iret
and
sub
nop
xor
cmp
jb
push
pop
ds
cs
cmpsl
dec
dec
movsl
mov
aas
adc
mov
inc
mov
sub
sub
loopne
mov
or
test
frstor
or
das
inc
out
push
lcall
xor
lret
sub
inc
inc
jmp
sub
sub
orb
bound
cmp
test
es
mov
das
fdivrs
aas
mov
stc
push
add
out
sub
imul
xchg
je
adc
scas
enter
xlat
mov
decl
arpl
or
lahf
inc
inc
les
pop
bound
das
cmp
aas
push
jmp
xchg
sahf
cmp
push
mov
sahf
dec
inc
fsubs
jne
out
cmp
mov
sub
mov
add
out
mov
sarb
decb
std
movaps
call
pop
mov
mov
fisubs
xor
pushf
lods
rcrb
push
and
movsl
inc
ja
nop
out
push
inc
mov
sbb
and
pop
test
out
es
test
in
cmp
mov
jl
and
dec
gs
pop
push
inc
imul
arpl
mov
sub
stc
sub
cld
faddl
notw
je
sbb
cmp
outsl
mov
xchg
dec
fsubs
addr16
add
add
lret
push
ljmp
cli
sub
and
out
orb
and
dec
aaa
add
daa
rolb
jb
movsl
mov
movsl
jb
stos
sbb
xchg
jns
mov
push
sbb
repnz
outsb
and
fldl
aas
lock
nop
ja
inc
sub
and
daa
mov
ret
inc
daa
push
pop
inc
arpl
or
pop
dec
pop
jns
jns
jl
js
and
inc
push
sbb
pop
loop
ss
and
jbe
xchg
adc
mov
xchg
xlat
loop
punpckhbw
aaa
jle
jnp
int
pop
xchg
and
clc
ds
daa
pop
loopne
sbb
sbbb
aas
push
push
loop
inc
pop
xchg
lret
negb
data16
pop
ficomps
cmp
ds
add
sbb
push
push
sub
daa
inc
pusha
push
add
adc
add
add
inc
mov
jmp
les
test
and
ficoml
push
movb
mov
push
jns
in
ds
sahf
inc
mov
call
adc
rclb
inc
jp
mov
daa
pop
sbb
aam
out
mov
push
cmp
bound
push
inc
stos
je
dec
xor
and
incl
arpl
or
and
scas
inc
mov
mov
enter
addr16
cmp
inc
push
and
and
ret
je
repnz
mov
xchg
jno
ret
cld
push
mov
inc
mov
movsl
inc
movsb
pop
pop
add
cmp
lock
dec
xor
inc
push
test
daa
repz
or
nop
sbb
sbb
bnd
fcoms
and
test
push
lock
mov
lret
popa
pop
jns
scas
fdivs
repz
icebp
sbb
add
cltd
mov
xor
addr16
insl
popf
rcrl
ja
das
inc
into
andl
mov
cmp
mov
or
divb
add
in
adc
cmc
cli
lcall
iret
ds
notl
loopne
push
push
and
dec
repnz
daa
ficomps
scas
pop
ljmp
xor
addr16
mov
cmp
es
and
and
je
ret
aas
rcrl
cwtl
sub
xchg
or
ja
hlt
add
call
pop
loopne
inc
inc
and
xor
push
cmp
add
push
sti
sbb
repnz
push
fcoml
cs
push
sub
out
pop
xlat
je
mov
ficoml
cmp
rolb
mov
push
fstl
clc
sub
mov
xor
addr16
sbb
addr16
push
push
pop
out
sub
cmp
inc
adc
stos
cmp
jo
cmp
pop
in
in
pop
cs
dec
rcll
inc
sbb
xchg
inc
mov
in
fmull
or
stc
inc
inc
add
or
mov
cmpsl
enter
xchg
int
adcb
jns
out
push
aam
mov
mov
jns
out
fs
inc
xor
repz
sub
add
push
in
cmp
repz
mov
nop
test
cmp
repz
pop
inc
sub
stc
cmp
and
add
push
out
out
sahf
ret
mov
out
js
fs
dec
out
sahf
out
and
or
repz
add
push
loop
mov
ds
pop
je
push
push
cmp
repz
and
add
sahf
cmpsl
stc
clc
fs
les
mov
lahf
out
sahf
ds
push
cli
arpl
jl
fiadds
pop
sti
cmp
repz
cmp
or
pop
xor
out
push
push
mov
dec
mov
jns
testl
lahf
or
pop
loopne
ret
iret
repz
lcall
repz
cmp
and
idivl
iret
add
pop
in
dec
dec
idivb
out
dec
push
mov
subb
sahf
out
push
inc
sub
iret
sarl
add
dec
loop
mov
iret
repz
lcall
repz
inc
ss
cmp
jnp
or
out
push
fmulp
mov
lods
mov
jns
iret
push
ret
cmpsb
xchg
sahf
out
sahf
mov
bound
sahf
out
cmp
add
pop
repz
shl
rol
mov
iret
repz
nop
jl
pop
dec
imul
push
or
ljmp
xor
sbb
adc
pop
in
out
idivl
ds
push
lcall
jle
pop
inc
pushf
pop
cmp
inc
cmpb
mov
mov
mov
jle
pop
aaa
sub
cmp
sbb
cmp
dec
iret
repz
test
repz
into
cli
jns
cmpsl
stc
push
push
adc
xor
out
sahf
out
pusha
jo
xchg
dec
repz
sahf
stos
mov
cmp
repz
dec
cmp
sbb
repz
repz
notb
mov
repz
jbe
pop
inc
imul
adc
push
out
jns
out
lret
xchg
sahf
out
sahf
jp
pop
dec
ds
out
sbb
or
push
in
repz
repz
ret
iret
repz
mov
push
inc
ss
mov
jns
out
mov
shl
in
out
int
decb
popa
sbb
push
ss
jns
push
pusha
je
les
xor
out
rolb
loop
add
repz
repz
inc
push
data16
cmp
js
pushf
scas
movsb
pop
mov
aam
out
ja
push
and
inc
push
push
out
cmpsb
mov
sahf
out
fsubrp
push
fmulp
mov
out
xchg
xchg
pop
out
sahf
out
cmp
push
or
popf
out
notb
push
fmul
add
pop
push
sahf
out
addr16
push
dec
pop
outsb
jle
sahf
out
xchg
lods
mov
and
sub
in
in
and
xchg
jns
adc
ja
sarb
xchg
push
popf
ja
lahf
stos
mov
scas
push
pop
cwtl
push
xor
add
add
sbb
or
adc
stos
push
cmp
mov
sti
push
or
clc
and
mov
cmpsl
fldcw
lods
xchg
mov
cld
mov
cmp
jno
lcall
cmp
repz
push
pop
sbb
repz
sbb
sbb
cmp
and
xor
cmp
repz
inc
inc
inc
inc
iret
repz
dec
dec
dec
dec
dec
dec
cmp
repz
dec
push
push
push
repz
repz
push
push
push
push
iret
repz
pop
pop
pop
pop
pop
pop
cmp
repz
pop
pusha
popa
arpl
addr16
repz
push
insl
cmp
repz
outsl
jo
jb
cmp
repz
jne
ja
repz
js
jp
jl
cmp
repz
jg
addl
xchg
repz
mov
cmp
repz
nop
xchg
popf
repz
repz
in
out
lcall
aas
sahf
out
sahf
dec
pop
imul
jns
lock
repz
repz
dec
push
push
iret
repz
mov
sahf
out
testl
dec
pop
addr16
sahf
out
sahf
popf
stos
mov
out
aam
out
clc
repz
repz
iret
repz
cs
inc
push
arpl
iret
repz
xchg
lcall
call
out
push
and
dec
sahf
out
sahf
dec
pop
outsb
jl
jns
out
xchg
pushf
cmpsb
scas
mov
enter
cld
and
push
ja
outsb
insl
insl
pop
push
mov
inc
inc
aas
or
and
add
je
insl
gs
gs
inc
adcb
stos
insl
das
inc
ret
outsb
jne
daa
pop
cs
ret
push
imul
bound
and
or
rcrl
popa
jae
dec
test
cmp
add
jo
mov
push
sbb
jb
inc
and
push
nop
hlt
adc
or
fwait
test
adc
push
stos
cmc
rolb
pop
cmp
and
cli
imul
mov
and
mov
push
cmp
inc
cmp
mov
mov
imul
test
cli
insb
push
jmp
adc
imul
adc
shrl
inc
add
dec
jne
inc
orb
fcomps
scas
pop
push
push
stos
dec
inc
sub
jns
je
in
leave
sahf
cmpsb
jae
sbb
push
outsl
push
arpl
fdivl
adc
and
adc
add
fstpt
cmp
push
lock
fstl
push
sbb
cmpsl
bound
adc
inc
pop
mov
imul
aad
or
push
xor
push
push
fistl
adc
mov
jo
add
ss
dec
mov
jbe
push
push
cmpb
sub
ds
pop
pop
inc
jns
xchg
iret
add
adc
imul
or
leave
pop
lock
sub
cmp
test
or
mov
sub
sub
or
add
inc
push
add
xor
pusha
sub
cmp
data16
mov
scas
imul
push
sahf
mov
fwait
pop
loopne
clc
push
xor
push
push
jo
add
jo
pusha
es
pop
movsl
jne
add
hlt
ss
loopne,pt
cmp
push
incl
mov
mov
nop
jbe
pop
add
mulb
jo
push
xor
xchg
jno
mov
sahf
push
mov
inc
ret
enter
jo
adc
sbb
adc
pop
pop
lds
sahf
cmc
push
and
or
mov
inc
adc
pop
pushf
dec
xchg
aas
mov
adc
mov
inc
mov
lahf
cmp
and
andb
cs
movsb
out
or
or
push
and
jno
adc
add
repz
inc
add
lock
add
jo
push
add
stc
sahf
out
outsb
xor
push
inc
outsl
add
dec
jns
and
nop
inc
xor
mov
ss
mov
movsl
add
mov
mov
mov
mov
lds
xor
xor
into
mov
add
cmp
and
mov
mov
xchg
xor
xor
and
xchg
xlat
xlat
lret
call
mov
mov
mov
mov
mov
mov
into
add
gs
xor
arpl
mov
iret
les
adc
out
ret
idivl
ret
or
incl
xchg
inc
push
dec
int
mov
and
ja
test
enter
sarb
and
lahf
ret
mov
ja
leave
adc
inc
jge
push
cmpb
mov
cltd
pushl
sub
stos
ror
mov
mov
jmp
icebp
mov
mov
mov
add
mov
fdivrs
mov
fnstsw
mov
cld
shr
sar
int3
jge
jno
jb
insl
xchg
jo
jo
imul
lds
xor
int3
fdivs
pushl
js
mov
repnz
ret
enter
mov
ret
mov
sub
data16
add
push
sbb
xchg
ret
add
loope
das
jbe
gs
add
je
xor
aaa
fdivrs
mov
or
testl
shll
jnp
mov
fidivrs
lods
xchg
mov
mov
cmpb
mov
les
pushf
pop
cmp
mov
mov
xor
add
add
push
pop
add
dec
and
jne
push
test
lods
xchg
pop
andl
inc
mov
pop
andl
ror
movsl
int
push
or
pusha
cli
pusha
cmp
cmp
ret
sahf
mov
mov
mov
aad
sub
dec
inc
inc
and
mov
decl
push
inc
push
inc
insw
je
adc
inc
fisubs
or
pop
xchg
adc
and
push
push
push
add
lock
in
sbb
xor
sbb
pop
repz
idivl
icebp
push
out
sub
iret
jnp
jnp
ret
addr16
push
cli
add
add
xor
add
add
cmp
or
xor
pop
add
add
cmp
and
add
test
inc
add
pushl
faddl
jae
push
test
sti
cmp
jbe
and
int3
std
xor
sar
add
add
std
add
add
nop
lcall
mov
decl
add
cld
lret
divl
or
jg
std
add
std
addr16
mov
add
mov
inc
add
call
and
xor
xor
dec
xor
push
std
jo
call
add
incl
mov
std
movsl
stos
add
add
cltd
add
sbb
mov
pop
std
imul
pop
mov
mov
xchg
lcall
ds
add
add
add
add
add
cmpb
call
or
or
add
dec
add
cld
dec
clc
mov
std
push
sbb
add
jg
adc
sbb
std
aam
jbe
pop
add
add
incl
xchg
add
clc
and
fcomip
scas
cmc
stc
pop
pusha
add
add
pop
sub
add
std
pusha
clc
aam
cmp
roll
jo
lods
pop
lock
das
push
inc
outsl
mov
pop
ljmp
xor
scas
std
mov
dec
add
jg
in
call
add
popa
std
adc
sub
xchg
mov
call
popf
xor
std
sar
add
in
std
imul
cli
std
cmp
icebp
cld
mov
enter
call
cld
pop
lock
inc
ficoml
push
in
addl
add
mov
pop
add
incl
add
add
add
arpl
add
fisttps
call
stc
jmp
clc
mov
cwtl
stc
pop
cld
jae
xchg
cli
mov
outsl
decl
sti
daa
stc
sti
ss
movsb
cld
push
mov
ljmp
pushl
cld
add
je
or
xor
mov
or
pop
iret
push
inc
push
dec
push
mov
add
add
decb
cld
and
shl
mov
out
fsubrp
pop
icebp
ljmp
icebp
ljmp
divl
cmc
inc
cmc
jo
cltd
sti
mov
incl
roll
add
jno
pusha
or
or
or
push
fimuls
lahf
pmaxub
mov
clc
decl
adc
push
sbb
add
push
add
ljmp
icebp
push
in
aaa
call
sub
add
add
mov
pop
cmc
dec
testb
push
jmp
lods
negb
xchg
cld
fldl
inc
pop
ret
or
pcmpeqd
dec
adc
adc
xchg
adc
adc
ljmp
call
xor
adc
adc
push
jae
dec
sete
add
aaa
sti
psubq
call
sti
imul
negb
repz
in
fsubrl
faddl
jge
xor
in
push
incl
sti
and
xlat
cld
test
or
adc
ds
and
inc
adc
adc
sbb
xchg
test
or
or
test
hlt
cli
repnz
call
adc
ljmp
loop
iret
into
shl
fcomp
loopne
repnz
or
flds
add
xor
test
sbb
lcall
outsb
push
bound
sub
pop
or
push
push
or
cld
decl
mov
repnz
out
lahf
in
jae
je
jmp
fcomip
in
ljmp
imul
fadds
add
jle
add
or
in
lcall
or
xor
sbb
cmp
sbb
push
dec
and
adc
or
jg
mov
iret
add
add
add
add
icebp
mov
jmp
out
mov
out
shr
mov
adc
pop
fidivrl
test
stc
jo
or
call
mov
push
xor
repz
xchg
adc
sbbb
push
mov
mov
sbb
inc
cli
push
stc
jns
loope
lret
std
cmc
clc
jbe
incl
inc
stc
inc
repz
ljmp
mov
cld
in
loope
in
in
aam
daa
pop
lcall
or
or
jecxz
into
adc
adc
ds
adc
adc
push
daa
adc
ffreep
adc
or
rolb
cld
enter
xchg
clc
imul
jne
es
pop
cli
pop
stc
icebp
decl
clc
sbb
xchg
out
mov
pusha
call
mov
fldenv
cld
js
lds
filds
test
adc
push
lahf
adc
imul
adc
movb
adc
or
push
sub
cli
in
xor
cld
idiv
loopne
add
repz
push
das
testl
fsubrp
xchg
out
insb
out
mov
frstor
in
cmpb
icebp
add
adc
adc
adc
adc
adc
pop
lock
scas
adc
lret
adc
adc
mov
lcall
std
mov
stc
or
stc
sbb
push
sbb
out
jb
inc
repnz
stos
mov
in
adc
pop
jecxz
fcoml
rcr
stos
ljmp
adc
push
pop
pop
clc
loope
jmp
pop
popa
adc
xchg
adc
sbb
std
or
pop
femms
or
js
pop
lcall
and
sti
xor
inc
cmp
mov
xlat
sti
outsl
imulb
push
mov
shr
sbb
cmp
cs
or
movsb
fdivp
xlat
outsb
aam
fdivrl
add
ljmp
sbb
sbb
adc
mov
mov
adc
push
adc
ja
cli
or
or
std
mov
test
aam
movsl
std
cmpsb
sti
mov
inc
stc
loopne
in
mov
xlat
loopne
fldl
aad
ror
xlat
popf
ljmp
ds
or
adc
push
lock
xor
pop
rorl
adc
sub
inc
sbb
push
xor
or
jg
and
or
int3
pop
in
add
loopne
lcall
mov
sti
jle
fcomip
inc
hlt
mov
jecxz
fisubl
sub
pushl
mov
mov
and
or
stos
pop
aad
bound
lds
adc
adc
lcall
btr
push
adc
orb
push
pusha
add
sbb
nop
add
or
push
mov
sbb
and
out
out
loopne
fstps
push
push
ret
mov
out
and
std
jg
add
pop
or
mov
sbb
mov
xchg
loop
or
stc
push
inc
adc
adc
add
or
or
or
decl
add
lock
mov
xor
int
sti
insl
lds
cli
out
push
xchg
or
adc
sbb
rcrl
rclb
adc
xlat
or
push
mov
and
scas
inc
ljmp
mov
test
test
xor
mov
lds
pop
or
add
stc
jmp
out
fisubrs
lds
jb
and
add
or
jg
decl
lret
adc
sbb
sbb
adc
xchg
or
push
sub
mov
decl
or
out
add
or
or
or
mov
or
add
decl
in
loopne
fimull
lret
pop
loope
cmc
cmpsb
add
pmulhuw
xchg
cmovge
incl
or
adc
iret
or
packssdw
fcomip
decl
add
pushf
add
add
or
fmuls
mov
fcomip
jp
nop
add
ret
out
push
loope,pn
fscale
leave
dec
les
cld
fimuls
adc
hlt
sbb
sbb
sbb
aaa
pop
pop
push
bound
hlt
add
add
pop
call
add
out
adc
or
add
pop
push
adc
pop
pushl
adc
and
dec
or
sub
loop
xor
fwait
jecxz
fsubl
les
pop
cmp
aad
icebp
cmp
adc
push
adc
xchg
aaa
or
adc
ds
push
add
and
outsl
cli
std
pop
lcall
push
test
pop
adc
call
or
add
in
in
jge
xchg
fsts
int3
mov
jmp
jmp
sbb
inc
pop
push
and
and
add
sub
stos
dec
add
jg
loop
jl
sub
add
paddw
std
mov
or
or
xchg
pushf
adc
das
or
aad
mov
loopne
fsts
call
divb
and
sub
add
push
mov
sti
jmp
in
inc
repz
rorb
gs
or
add
push
add
sar
decl
sub
out
or
push
or
add
imul
out
fmul
push
leave
pop
shlb
out
call
adc
stos
cs
pop
add
call
fcmovu
cmp
add
pop
pop
push
inc
push
sub
sbb
add
dec
push
into
push
out
mov
loop
sbb
dec
sub
pop
hlt
add
fldenv
incl
lret
cmpsl
enter
neg
test
dec
sub
das
xchg
ss
clc
adc
xlat
not
sbb
inc
loop
lock
stc
loop
and
out
faddl
cmpsl
add
pushf
mov
push
jmp
mov
out
dec
or
xchg
add
xlat
inc
sar
sub
ror
add
pop
sti
xor
scas
and
sahf
xor
and
sbb
mov
clc
aam
mov
lock
cli
mov
push
add
push
add
add
push
fmull
js
cmpsl
adc
push
loopne
mov
and
or
sbb
sub
pop
lock
ret
push
iret
repnz
sub
jmp
jg
incl
and
adc
add
loope
fistl
ljmp
decl
rclb
imul
adc
adc
xor
mov
mov
cmp
ss
negb
jmp
jecxz
fnstcw
mov
cmc
jmp
shlb
call
inc
mov
cmp
lcall
push
call
fstpl
fcoms
pop
add
and
mov
les
cltd
adc
adc
mov
jmp
and
sbb
xchg
push
inc
pusha
mov
stc
adc
push
shrb
leave
push
mov
dec
fiaddl
clc
adc
cwtl
es
xor
cmp
in
mov
incl
cmp
lds
or
aam
out
fdivrs
in
icebp
or
pop
daa
in
jmp
xchg
and
and
sbb
adc
or
jecxz
stc
leave
les
popa
jmp
add
push
icebp
daa
loope
in
test
xor
cmp
call
out
inc
out
loop
in
out
clc
fists
xlat
stc
fimull
add
cli
cld
pop
pop
sub
cmpsb
pop
inc
and
and
dec
adc
in
jno
gs
xor
test
inc
ret
ja
pop
fiadds
arpl
or
das
inc
cmp
inc
inc
inc
inc
xor
sub
push
aas
or
adc
mov
fcmovbe
rcr
cs
jmp
and
sbb
mov
xor
jo
pop
or
sti
stos
call
inc
leave
mov
ret
std
call
and
xor
inc
aam
xor
pop
dec
or
xor
lock
filds
lret
pop
iret
mov
fiadds
icebp
adc
jb
sub
fcomip
pushl
xor
add
or
sub
push
idivb
insb
ljmp
out
ret
or
mov
lock
nop
adc
cmp
inc
loop
push
pushl
sub
lods
repnz
xchg
mov
cs
mov
into
mov
add
adc
sbb
inc
aaa
das
xor
es
ja
int3
sti
ljmp
call
adc
mov
jne
sub
sahf
sbb
and
pop
ds
xor
das
sar
sub
xor
fldl
inc
incl
adc
rcr
aam
iret
call
xor
loopne
das
add
xor
xor
cmp
xor
mov
cmc
insb
in
aad
es
mov
mov
pop
adc
daa
push
sub
jmp
xor
rorl
idiv
mov
ljmp
jo
dec
xlat
mov
mov
fnstenv
pop
pop
test
xor
aaa
lret
xor
in
adc
ffreep
roll
mov
mov
addb
cs
ds
dec
push
outsl
ljmp
movsb
pop
or
shl
jmp
call
mov
sbb
add
outsl
mov
jge
inc
mov
push
lods
sub
xor
bnd
xor
in
jns
ror
stos
ret
stos
ljmp
ds
in
lcall
and
mov
call
es
pop
insl
push
push
add
leave
out
push
call
in
shr
into
pop
iret
decl
call
jmp
xor
cmp
mov
jg
push
dec
push
mov
aam
out
sarb
sbb
sbb
inc
cmp
and
fsubrs
ja
xlat
push
mov
stc
xchg
cmc
shl
mov
xlat
cwtl
aam
rol
into
jmp
push
adc
cmp
xlat
push
sti
or
cmc
es
int
mov
out
scas
call
sub
pop
pop
sub
stos
aas
scas
cmp
ficompl
ret
adc
icebp
jecxz
jecxz
in
fdivrp
incl
loopne
fsubl
loope
stc
push
psllw
fsubrl
pop
aaa
fildll
leave
sbb
dec
icebp
call
loope
int
ror
outsl
mov
shl
add
adc
aaa
std
inc
test
sub
inc
stos
and
or
cld
loop
ljmp
cmp
fildl
neg
lcall
ja
std
push
out
dec
outsl
clc
pushl
push
cmp
adc
pop
out
fstps
int3
mov
mov
jmp
imul
in
movsl
cmp
inc
je
mov
js
sbb
jb
test
imul
aaa
std
fmuls
lret
rcll
out
add
sbb
sub
fidivrl
inc
decl
xchg
mov
icebp
adc
outsb
loopne
iret
xor
mov
scas
jmp
mov
add
xor
inc
or
dec
pusha
inc
xchg
jmp
pop
adc
add
out
jmp
ljmp
add
filds
leave
test
fcmovne
insb
sarb
in
pusha
or
inc
push
cld
incl
xor
mov
iret
pop
mov
mov
imul
addl
mov
outsl
sub
cwtl
dec
mov
sub
mov
mov
cmpsl
jmp
jmp
adc
aam
aam
shll
adc
inc
aad
out
add
aaa
sub
xor
aaa
mov
sub
sbb
or
int3
adc
in
mov
mov
mov
cmp
add
xchg
sub
inc
fdivs
or
mov
daa
out
sub
repz
call
popf
flds
call
sarl
pop
mul
push
xchg
push
call
cmp
inc
call
sti
std
or
or
lret
xchg
mov
mov
adc
adc
test
dec
add
ss
push
mov
push
notb
fmul
dec
loope
iret
add
xchg
fdivs
pushl
std
frstor
sub
daa
cmp
cmp
fcompl
repz
push
into
or
mov
test
mov
jnp
lds
jns
repz
mov
incl
sti
xchg
in
aam
int3
push
repnz
or
into
aad
fnstsw
and
mov
inc
dec
sahf
inc
es
pop
and
int3
roll
mov
cmpsl
les
mov
push
sbb
mov
pop
sbb
mov
fldl
es
fstl
out
clc
pushl
sbb
fs
data16
js
and
jle
sahf
inc
addr16
ljmp
inc
jo
xor
adc
aad
int3
add
sarl
decl
aas
sti
sti
mov
jb
mov
dec
out
lea
mov
repnz
jge
pop
lret
lcall
sub
inc
int3
jne
xchg
repz
or
stc
xor
sub
inc
mov
repnz
sbb
std
ljmp
out
aad
into
in
mov
leave
mov
pop
call
outsb
pop
dec
sub
fldl
dec
sbb
xor
push
imul
loop
mov
mov
ret
insb
rcll
ljmp
out
xor
cld
cmp
repnz
add
rcrb
fidivrs
test
call
imul
mov
sti
push
jp
les
and
cmp
cmp
jg
rorl
mov
aas
cld
loopne
sbb
popa
sub
inc
cmp
daa
xor
mov
xchg
call
sub
loope
int
iret
outsb
leave
xchg
ret
test
mov
fcomip
xchg
adc
cmp
inc
cmpsb
push
inc
pop
int3
push
add
fwait
sub
or
icebp
inc
stos
sarb
pushl
test
ss
mov
dec
ds
dec
dec
dec
iret
dec
jl
lret
sbb
incl
lock
loop
shlb
shufps
lcall
sti
fistps
adc
dec
inc
fmull
stos
pop
aam
les
pop
jmp
mov
jg
decl
leave
ret
pop
loope
push
rcl
xor
inc
je
push
dec
xchg
inc
mov
scas
sub
out
clc
ja
adc
add
fldcw
scas
rcrb
test
lock
in
jg
inc
push
loope
sti
mov
pop
dec
sbb
rclb
dec
lahf
ds
insl
add
jecxz
lcall
mov
test
rorl
mov
pop
bound
mov
stos
cmp
pushf
sub
sbb
and
arpl
add
popf
mov
lcall
mov
hlt
xchg
or
and
arpl
ret
inc
cli
dec
sbb
sub
imul
pushl
pop
pop
mov
mov
lcall
and
das
fidivs
mov
jp
rcrb
push
fwait
ret
fiadds
xchg
sub
aam
pop
cmc
incl
fdivrl
rorb
mov
es
mov
push
inc
ljmp
xor
out
in
fimull
cmpb
leave
in
add
cmc
sub
pop
hlt
aaa
push
cmp
mov
xor
icebp
repnz
sahf
jmp
xchg
ficompl
out
add
cli
fistl
lret
and
xor
roll
inc
es
and
adc
cmc
clc
fsqrt
movsb
mov
mov
jmp
mov
lret
stc
leave
adc
es
sbb
ss
incl
cld
jmp
xchg
cwtl
or
adc
or
cmp
fdivl
aad
ficomps
xchg
aam
iret
nop
clc
adc
je
or
or
aas
inc
and
pop
xchg
cmc
sbb
cmp
fistpll
movb
iret
repz
hlt
fwait
or
xorb
xor
jg
pop
ljmp
mov
rorl
cmp
push
xor
xchg
jmp
jmp
jecxz
pop
loope
fnstsw
fcmovbe
aad
into
popf
into
push
jmp
add
mov
jg
in
inc
es
jp
nop
and
fcmovne
mov
pop
mov
ret
rcl
out
aam
addr16
add
inc
xor
divb
jle
sbb
enter
call
jg
xchg
hlt
clc
lock
out
je
mov
dec
adc
and
ljmp
add
sahf
adc
das
adc
cmpsb
xor
sbb
xchg
fcmovnu
lret
inc
cmp
in
or
bound
mov
inc
and
sbb
pop
inc
push
call
mov
lret
add
clc
shr
fistl
mov
mov
iret
ja
jbe
pop
stc
mov
fwait
sub
mov
push
sbb
or
jg
repnz
xchg
dec
out
pop
cli
stos
cld
les
clc
sbb
sbb
incl
or
add
rorb
or
push
inc
push
mov
xchg
hlt
repnz
sahf
ficomps
push
cld
insl
rolb
loopne
aam
push
add
push
out
and
cs
incl
sub
das
jecxz
ljmp
mov
mov
sbb
sbb
and
xor
cmp
incl
mov
add
push
adc
or
xchg
cmc
push
ds
fidivs
aad
call
aad
in
repz
popf
push
aas
sbb
push
outsb
and
jo
jb
cmp
icebp
movsl
jmp
ljmp
mov
mov
pop
mov
xor
add
jle
mov
or
dec
or
adc
cld
dec
push
out
xchg
jecxz
fbld
xlat
fldl
fisubl
pop
jmp
cld
add
pushf
sbb
push
jbe
or
insl
adc
or
incl
cmpsb
icebp
enter
mov
xchg
loopne
mov
adc
pop
lods
add
call
bts
popf
adc
or
mov
jp
imul
cmp
out
loopne
loope
loop
fidivrs
sub
pop
lahf
jecxz
imul
push
dec
or
adc
shrl
and
pop
push
push
xchg
or
clc
repnz
out
in
ljmp
arpl
bswap
adc
push
lcall
aas
push
adc
mov
add
cli
shl
xchg
mov
mov
dec
aad
enter
enter
out
mov
push
insl
sub
lcall
dec
test
cmp
add
repnz
loopne
aad
lcall
and
add
cld
sbb
cmp
in
push
push
sti
pop
gs
mov
push
sub
cmpsb
or
decl
mov
icebp
and
inc
aam
jbe
jg
push
faddp
pushf
iret
inc
in
test
xchg
push
adc
enter
test
mov
mov
inc
and
aaa
std
jmp
add
jmp
shr
ret
sbb
jmp
cld
add
sbb
cmp
cmpsl
sbb
sbb
and
out
imul
push
pop
cld
shr
fcomip
aam
dec
rol
cltd
mov
sbb
xor
popf
push
cltd
cmp
push
jno
mov
jo
call
or
movsb
in
fcom
ret
out
imul
int3
pop
or
fcomip
es
ljmp
cmp
lret
or
gs
rorl
lcall
mov
cmpsl
and
sub
mov
dec
or
inc
pop
dec
outsl
push
jnp
jp
outsb
xor
push
or
out
into
dec
mov
xlat
test
fsubrp
or
ljmp
sbb
ss
ss
xor
mov
or
in
jmp
pusha
ljmp
stc
mov
push
mov
mov
mov
add
pop
jmp
pop
add
pop
pushf
popa
inc
addr16
fwait
pop
rcll
cmp
dec
movaps
xchg
sub
cmpsl
jo
fwait
mov
lret
adc
int
mov
xor
cmp
sbb
push
xor
sub
and
adc
add
push
fcmovbe
pop
in
and
mov
sbb
mov
cmc
inc
or
sub
jbe
mov
inc
add
pop
icebp
cmpb
sbb
cmc
fdivp
iret
fwait
jo
les
cmp
dec
jmp
addr16
cmp
imul
dec
sub
sub
cmp
fstl
incl
fnsave
int
insl
repz
sti
sub
adc
add
add
sbb
lcall
sbb
pop
repnz
xor
mov
pop
ss
or
iret
cmp
idiv
pushl
iret
pop
aad
in
lock
and
rcll
jne
xor
int3
pop
mov
sub
int3
push
or
lcall
add
decl
cli
lock
arpl
mov
idiv
out
dec
jmp
repnz
mov
add
pusha
aas
test
jno
sbb
insb
push
mov
sti
xchg
fnstenv
ljmp
mov
enter
in
hlt
sti
fimull
fs
sbb
cltd
and
popf
cmp
cli
sub
push
xor
clc
rdtsc
decl
hlt
dec
in
shll
dec
ret
sub
xchg
shll
into
stos
ret
lcall
push
xchg
ret
push
mov
bound
jnp
ds
ret
call
ret
les
lret
lahf
sarb
add
sub
sar
cmp
dec
jbe
push
dec
jmp
dec
dec
inc
jle
je
pop
out
mov
mov
scas
imul
add
inc
repz
mov
pushl
sub
push
dec
pop
add
dec
imull
mov
mov
mov
ljmp
sahf
jno
xor
xor
shrl
popa
aas
fists
bound
mov
dec
push
out
inc
cmp
pop
ljmp
ds
nop
mov
jae
mov
lret
std
adc
mov
adc
add
ljmp
sub
jmp
lcall
inc
leave
ljmp
lods
push
ret
add
and
sbb
mov
cld
std
aas
loopne
aam
xlat
push
sbb
xor
and
mov
xchg
cmpxchg8b
cwtl
call
aad
inc
loopne
call
adcl
xor
ficomps
inc
clc
jg
jp
jno
sub
aas
cmp
xchg
es
or
enter
fwait
call
rorb
flds
in
add
shrb
mov
adc
pop
faddl
or
out
clc
call
jo
sub
mov
repnz
cmp
clc
sub
ret
add
not
repz
jl
sar
test
incl
cld
mov
xchg
fdivrl
xor
std
and
mov
xchg
sar
lcall
std
jmp
cld
decl
xchg
or
adcl
pop
jl
imul
cld
sbb
adc
aaa
sti
testb
sub
mov
mov
stc
rep
sti
push
cld
imul
incl
aam
in
hlt
mov
push
cmp
push
call
fldt
mov
hlt
and
das
int
lds
rolb
clc
mov
and
ret
pushl
hlt
sub
xor
and
das
adc
shr
jg
inc
loopne
ljmp
cmpsb
rorl
mov
push
fmulp
sti
rcll
xor
jg
lcall
cmpsl
insb
fldl
sbb
mov
insl
popf
xor
leave
jmp
xchg
inc
adc
es
or
cmp
aaa
adc
push
ss
das
enter
jmp
icebp
jae
cwtl
aad
enter
sarl
lcall
loop
loopne
int
mov
dec
leave
out
pop
xorb
insl
jg
jl
jo
inc
out
push
dec
jmp
mov
pop
mov
xchg
mov
or
and
dec
fiaddl
cmp
stc
xor
and
loop
roll
sub
lea
lret
fisttpl
mov
jmp
repz
or
inc
insb
dec
lcall
gs
fcomip
sbb
jl
shll
test
shll
incl
pushl
cltd
inc
inc
inc
dec
xor
jb
mov
rorb
inc
std
scas
cli
ds
leave
and
into
push
fildll
out
clc
icebp
shl
lods
mul
adc
mulb
jmp
clc
adc
sbb
lahf
nop
inc
hlt
inc
nop
xor
lcall
cmpsb
add
mov
mov
mov
lcall
sub
daa
push
ljmp
es
pop
cmp
mov
jbe
push
or
sbb
scas
pop
jmp
loope
fimull
xlat
cld
fcom
scas
fisubrl
fisubl
or
or
jae
or
and
sub
decl
das
insb
sub
jecxz
je
nop
fistl
push
enter
loope
sti
sub
decl
and
and
and
sbb
xlat
sti
fwait
lock
cmp
fcmovnb
rclb
mov
outsl
mov
fstl
inc
adc
or
aas
lcall
adc
mov
cltd
and
sub
arpl
jmp
inc
adc
add
dec
fcompl
int3
inc
lds
loopne
jmp
or
stos
sub
mov
cmp
stos
sbb
pop
repnz
add
sti
cmp
sbb
incl
leave
daa
aam
call
rclb
sbb
and
adc
and
ds
jae
lods
repnz
repnz
cli
xor
call
das
jle
cltd
pop
xchg
add
call
fsubl
rcr
lock
dec
add
test
jg
clc
add
add
pop
test
or
roll
mov
rcrb
hlt
mov
sbb
and
sub
sbb
call
shl
inc
fsubr
jmp
push
adc
decl
dec
je
xor
into
add
into
sub
int3
xor
cwtl
out
mov
pop
push
pop
pop
or
mov
fimull
or
negb
push
mov
decb
out
ffree
loope
ljmp
sbb
mov
add
lcall
test
stos
andl
clc
mov
shrb
dec
adc
pop
lods
inc
aas
cli
stos
ljmp
or
rol
ret
aad
sbb
xlat
lock
inc
adc
int
push
pop
jg
out
adc
aad
mov
dec
es
jmp
add
std
push
add
inc
stc
aad
push
out
sbb
out
mov
inc
add
pop
repnz
out
fistl
sub
imul
cld
mov
shlb
inc
mov
pushl
cmp
daa
push
mov
xchg
out
aam
mov
outsl
mov
xchg
ljmp
adc
ss
and
es
sub
lret
adc
arpl
dec
insb
add
fs
repz
ljmp
in
dec
in
loop,pn
fsubr
fisubl
fxch
push
int
in
pop
adc
mov
and
pop
push
push
aam
shr
shrl
ret
jg
ja
mov
mov
addr16
iret
add
and
shlb
repnz
or
add
mov
loop
jb
lcall
std
cmp
jmp
jmp
fistpl
pop
aad
in
cmpsb
pop
fcoml
scas
and
add
pop
out
push
decl
pop
sub
adc
sti
je
cli
leave
divb
lcall
hlt
or
and
outsl
clc
call
sbb
push
lret
bound
sbb
sub
sub
lcall
add
in
push
fdivl
enter
lret
into
rolb
js
push
out
in
ljmp
cs
fisubrs
sbb
fwait
inc
mov
popa
inc
sub
xor
sbb
pushl
ret
loop
lds
stos
mov
mov
testl
adc
jbe
xor
push
add
cmp
push
cwtl
cmp
inc
and
and
or
jmp
ljmp
call
repnz
decl
std
jmp
xchg
iret
in
mov
xor
fwait
pop
and
cmp
push
inc
pop
cmovb
and
or
call
ljmp
add
call
in
test
jb
jb
sahf
sti
jecxz
lods
sbb
push
sub
mov
dec
aad
scas
sub
in
int
fdiv
pushl
and
fucomp
divl
lods
mov
aaa
mov
mov
int3
add
sbb
daa
in
xor
xor
dec
mov
cmp
aad
rcl
mov
mov
mov
mov
jns
sahf
ficomps
clc
jmp
into
xor
test
iret
inc
or
sbb
xor
push
cmp
lock
sub
ljmp
lds
lock
std
add
cmp
insl
or
push
add
not
cmc
incl
xor
ds
mov
inc
dec
sub
call
dec
add
jmp
fldt
mov
mov
int
out
mov
adc
clc
cmp
inc
inc
outsl
clc
decl
dec
repnz
test
sbb
add
pushf
loop
in
and
jecxz
lcall
jle
mov
cmc
mov
inc
add
push
mov
jmp
es
jmp
sub
and
loop
shl
mov
jecxz
lods
mov
shrb
ja
pushl
xchg
cmp
popf
inc
jge
fwait
sbb
sar
icebp
pop
jmp
lcall
mov
stc
jp
dec
cld
inc
stc
mov
repz
fdiv
movsb
std
stos
add
cld
decl
cwtl
call
cmc
add
jmp
clc
incl
jb
or
xor
cmp
ja
insl
or
icebp
mov
scas
cmp
xchg
loope
stos
call
xor
xor
decl
adc
add
out
aam
lret
cli
xlat
cld
orb
adc
add
jo
add
jle
out
out
jmp
adc
cli
incl
cs
cmp
jbe
in
and
ffreep
incl
push
adc
dec
loop
stos
and
adc
lock
add
mov
decl
lock
inc
ljmp
pushl
adc
jmp
loopne
call
js
out
dec
add
or
adc
aam
cld
lahf
repz
lcall
clc
pop
add
add
add
cli
mov
mov
in
push
mov
add
lcall
or
sbb
sub
daa
dec
into
dec
mov
sbb
jmp
mov
ss
call
nop
loope
repz
adc
test
test
cmp
stc
cmc
repnz
in
test
popa
sti
xor
iret
call
xor
and
mov
imul
adc
mov
cli
mov
shl
xor
sbb
outsl
in
lcall
and
loopne
cwtl
into
movsl
lret
pop
idivl
movsl
sbb
or
mov
sbb
sbb
sub
sub
test
sub
push
fisubl
in
push
stc
stc
call
push
fiadds
movsl
stc
pop
cli
fs
sub
fprem
aas
lods
or
sbb
daa
pop
das
add
xor
test
stos
push
outsl
cli
add
dec
call
mov
imul
out
jmp
out
das
out
pop
repz
out
and
pop
loopne
loop
hlt
pop
add
push
push
enter
push
ss
xor
and
std
decl
sahf
test
das
out
pop
out
fdivp
fbld
fidivl
jecxz
call
pop
notl
push
test
or
mov
out
dec
and
sbb
sbb
jmp
mov
in
loope
in
in
in
xor
hlt
xor
test
dec
push
pop
icebp
dec
out
xlat
dec
shl
loopne
cmc
fiaddl
icebp
les
push
in
pushl
lock
jns
mov
add
mov
pop
enter
out
mov
add
or
mov
sbb
sbb
adc
decl
movzwl
mov
add
sti
push
cmc
adc
aaa
ljmp
jmp
out
jmp
push
fcmovne
fmul
dec
in
repnz
movlps
and
cmp
ljmp
push
inc
dec
inc
cmp
and
pop
inc
jmp
cmpsb
mov
mov
add
mov
jg
jle
lret
push
mov
adc
adc
adc
adc
xchg
ljmp
sbb
and
mov
test
push
fsubs
call
out
into
mov
fstl
jmp
in
fnstsw
iret
out
iret
mov
ss
add
cmc
pushl
pop
dec
sub
jae
arpl
or
sub
lds
jmp
mov
add
pop
fsubp
sbb
setge
call
loopne
fdivl
sahf
and
and
daa
mov
and
clc
mov
cmc
cli
jecxz
xlat
nop
into
mov
and
iret
push
icebp
loopne
jmp
ljmp
repnz
dec
fcomps
incb
sbb
daa
cmp
call
outsb
sub
dec
cmp
ljmp
mov
ret
in
scas
sarb
test
dec
repnz
pop
nop
sbb
sbb
jle
jmp
cwtl
and
popa
sbb
jnp
adc
test
std
adc
ljmp
mov
push
ficomps
xchg
aam
shrb
or
jo
jecxz
popa
jmp
out
and
pop
out
sub
in
lods
repz
push
repz
jp
dec
sub
cmp
inc
push
inc
xchg
cmp
and
or
call
aam
enter
mov
mov
rolb
jno
imul
and
incl
in
xchg
jecxz
in
adc
adc
cs
jbe
xchg
pxor
clc
ljmp
out
xor
ja
jmp
xlat
iret
fldcw
xchg
shl
out
out
icebp
add
or
pop
loopne
pop
repz
out
and
daa
cmpsb
es
sub
fildll
fdivrp
cmp
inc
flds
enter
incl
jmp
add
adc
sbb
and
hlt
jbe
out
adc
or
cmp
add
test
ja
sbb
hlt
sbb
loop
clc
jmp
call
cmpsb
loopne
ficomps
in
sahf
add
or
rcrb
fimuls
inc
or
mov
or
mov
add
int
jns
and
mov
pop
clc
int3
ljmp
sti
loopne
loopne
in
in
icebp
ljmp
and
pop
adc
mov
imul
testl
adc
adcb
or
mov
ljmp
rolb
jecxz
negb
mov
pop
pop
js
xchg
ljmp
and
push
jns
mov
in
loope
in
icebp
cmpsb
push
and
jmp
filds
es
xchg
add
out
mov
into
call
data16
in
roll
nop
adc
ljmp
and
lret
push
cli
sub
shl
repnz
mov
jmp
jg
add
pop
ljmp
into
and
lahf
loope
out
xchg
add
adc
sbb
mov
je
lcall
aad
loope
cmp
xor
out
sub
push
stc
push
aas
aas
shrb
push
hlt
lock
add
int
lret
fmul
sbb
push
decl
inc
cmpb
jecxz
int
imul
ret
movsl
call
ret
mov
test
inc
daa
push
and
adc
sub
jmp
out
aad
mov
adc
dec
add
push
aas
sbb
adc
cld
add
ja
mov
cmpsb
mov
add
fldln2
push
add
mov
dec
test
lcall
rcll
cmp
xchg
repz
in
fnstsw
loope
in
xlat
clc
movb
add
add
lcall
add
jae
and
aam
add
push
adc
and
sbb
loop
aaa
or
inc
sti
cs
mov
adc
cld
sti
stc
xchg
sti
mov
out
cli
push
icebp
adc
fsubp
jbe
int
ljmp
ljmp
and
bound
cmp
sub
sti
cld
jmp
incl
test
gs
call
jb
into
push
fiaddl
jbe
pop
lret
add
scas
and
stos
add
or
scas
sub
lcall
rcrb
push
adc
lods
pop
and
loop
dec
cmc
push
out
xchg
out
pop
in
jnp
dec
out
dec
repnz
sub
fucomip
add
xor
dec
in
hlt
ftst
xchg
clc
add
lcall
mov
lret
inc
dec
inc
inc
xor
sub
cli
mov
pusha
aam
int
pusha
fscale
pop
lock
cld
sub
add
or
or
data16
ljmp
push
call
std
push
pop
sbb
nop
sub
rcrb
mov
jmp
fsubr
fcmovnu
xor
fcomip
call
gs
add
in
loop
decl
lock
stc
arpl
pop
cmp
mov
sbb
add
incl
xor
rcl
shrb
or
pop
iret
js
lahf
lcall
xor
or
sub
testl
lods
fidivrs
out
fldl
mov
jg
inc
ss
lcall
repnz
cmp
mov
push
flds
mov
std
loop
incl
push
mov
push
push
lds
or
out
fisttpll
repnz
or
and
pushl
inc
stos
inc
mov
cld
mov
lret
sbb
xor
loope
mov
and
cld
lcall
fwait
hlt
dec
jmp
sub
or
sbb
or
ds
cmp
incl
jl
sub
and
adc
adc
stos
enter
into
inc
fldenv
aaa
jp
add
adc
add
xor
repnz
jp
or
inc
push
sti
or
and
cs
inc
sbb
pop
jmp
loop
rcll
roll
aam
xlat
adc
lock
push
lock
add
fcoml
fcoms
mov
mov
dec
sub
call
dec
or
add
ljmp
sti
mov
out
push
adc
ret
loop
repnz
daa
cmpsl
cld
push
add
rorl
or
lock
out
add
testl
in
icebp
aas
loop
loope
lock
popf
pop
ljmp
pop
mov
add
imulb
mov
or
xchg
sbb
or
dec
sbb
mov
adc
dec
clc
sbb
push
lock
hlt
sahf
lock
inc
push
mov
jmp
push
out
imul
sbb
hlt
sti
aad
sti
in
out
lock
and
sbb
jg
push
sbb
add
cld
push
repnz
iret
addr16
pop
daa
fcompl
add
adc
jmp
xor
xor
sub
or
jbe
in
in
out
repnz
cmpsb
incl
lock
adc
or
std
fdivp
test
push
in
in
jmp
pop
cmc
pushl
add
std
or
inc
and
rclb
and
pushl
call
stc
lahf
add
bound
or
aam
jecxz
outsl
icebp
daa
out
inc
in
shl
pop
lock
fcmovnu
mov
mov
xchg
pop
ja
cmp
daa
sbb
push
inc
loopne
dec
sbb
cmc
jg
sbb
cwtl
push
add
xchg
stc
in
hlt
jl
jg
fdiv
loope
pop
out
out
stos
mov
cli
idiv
dec
or
sbb
sti
sbb
push
sbb
incl
data16
or
add
lret
mov
mulb
jo
out
lods
out
mov
adcb
into
out
mov
jmp
cmc
push
imull
pop
std
mov
fs
cs
xor
das
in
sub
and
xchg
pop
icebp
out
or
call
fists
fcomi
out
repnz
add
mov
mov
mov
or
adc
inc
sbb
sbb
pop
fstps
insl
adc
push
lcall
jmp
insb
stc
add
enter
inc
incl
cli
pop
repnz
shl
jmp
inc
ror
leave
in
iret
or
sbb
inc
ret
inc
subb
incl
mov
notl
sarb
fldcw
jg
testb
push
adc
or
cld
mov
add
add
pop
xchg
call
sbb
adc
or
std
xor
out
mov
div
xchg
hlt
xor
lcall
std
pop
add
clc
stc
out
jmp
dec
out
shlb
jecxz
jmp
ljmp
or
and
cs
xchg
sub
and
jp
loopne
push
sti
icebp
inc
ljmp
mov
loop
jecxz
push
add
pop
mov
add
std
sbb
mov
pushl
repnz
adc
lahf
sbb
push
sbb
xor
mov
mov
mov
xchg
std
in
dec
testl
sar
jg
hlt
add
ljmp
popa
out
sar
add
add
add
xchg
lcall
jg
int3
or
adc
add
cli
imul
adc
sbb
lcall
push
adc
addr16
icebp
pop
out
fbstp
cmp
mov
pop
in
rep
add
orb
adc
jg
lcall
sbb
adc
or
add
jg
mov
cmpsb
add
fcoms
pop
out
pop
mov
pusha
out
add
clc
fs
outsb
in
loop
ficoms
in
repnz
loopne
decl
adc
sbb
or
add
mov
pop
in
fstpt
in
stc
sar
pop
cmpsb
ljmp
call
cli
js
lock
call
insl
stc
inc
add
add
push
cwtl
aad
loope
push
sahf
notb
out
dec
clc
ljmp
add
or
push
mov
das
sbb
pop
cmp
and
mov
xchg
jns
icebp
in
out
sub
cmp
add
jg
sub
adc
push
test
sbb
ljmp
lcall
in
in
fistpll
fiaddl
jge
xor
js
xchg
push
test
decl
dec
pop
pop
and
sub
sbbl
mov
daa
lcall
cmp
ljmp
ds
divb
pop
cli
mov
loope
mov
repz
jnp
call
sahf
repz
clc
addb
loop
movlps
sbb
sbb
in
or
mov
xchg
out
mov
cmc
call
test
std
mov
fwait
or
and
or
mov
lcall
iret
loop
loopne
out
jmp
adc
leave
clc
daa
push
push
or
or
adc
pop
movsl
sbb
sbb
push
pop
or
xor
out
clc
adc
out
jmp
out
or
mov
jg
jle
repnz
clc
mov
movsb
in
add
jg
jp
or
pop
out
add
jmp
sub
cmpsl
add
dec
add
add
test
mov
sbb
sub
out
add
clc
gs
ljmp
ds
cld
cmp
lcall
add
fwait
add
add
cmp
int3
jecxz
in
addb
mov
dec
call
xchg
adc
inc
pop
xchg
sbb
adc
add
std
mov
xchg
out
fyl2x
pop
repnz
sbb
mov
push
add
divl
clc
sub
clc
lcall
clc
cltd
std
cmp
cld
jno
rorb
sub
ret
sbb
sbb
adc
sub
das
call
add
push
stc
outsl
cmc
mov
sub
mov
repnz
out
aad
mov
int
xchg
cli
scas
stc
js
mov
mov
inc
icebp
or
out
push
cmc
lcall
fildll
sbb
and
inc
and
or
add
notb
ljmp
mov
jecxz
in
jmp
repz
clc
xchg
jnp
inc
add
add
or
jle
and
mov
jmp
stc
popa
add
sbb
pop
sub
and
js
cld
incl
jmp
in
loopne
loop
jecxz
in
ljmp
inc
decl
sbb
test
ljmp
ja
fdiv
cmp
sarb
cmc
cmc
mov
pop
dec
or
pop
dec
loope
or
ror
adc
sbb
jg
mov
rolb
test
inc
neg
bnd
hlt
out
imul
mov
jmp
insl
out
xor
hlt
mov
cld
in
pop
ret
cmc
dec
add
jg
jg
push
sbb
xor
mov
sbb
adc
jle
jnp
loope
adc
incl
jecxz
out
mov
in
push
out
fucomi
fucomp
test
ret
pushl
cld
das
std
inc
add
cli
adc
addr16
adc
or
ljmp
in
repz
xlat
clc
mov
lcall
push
push
sbb
into
incl
adc
sbb
in
loop
fimuls
mov
sbb
clc
in
add
add
xchg
in
mov
adc
adc
push
fnstcw
or
push
xchg
or
sub
aas
pop
loopne
iret
sahf
add
or
pushl
push
imul
repnz
lock
outsl
repnz
inc
testb
add
call
or
and
jo
std
or
pop
lods
add
cli
push
icebp
and
jne
mov
ljmp
hlt
jge
mov
or
adc
clts
cmp
fdivr
int3
mulb
frstor
mov
call
or
pushl
or
es
bound
adc
push
add
sti
jl
lods
repz
lock
jnp
fcomip
cmp
std
repnz
aam
adc
adc
adc
orl
ljmp
add
stc
idivl
clc
sar
stc
stos
vprotd
jg
push
or
dec
push
mov
sti
popa
stc
das
test
jmp
mov
out
pop
push
add
or
adc
fistpl
or
movsl
adc
jne
xor
sahf
not
jmp
mov
hlt
icebp
clc
repz
xor
pop
or
fwait
push
lock
cli
push
ja
pushl
xchg
dec
cmp
shr
inc
cmc
add
pop
or
jbe
pop
adc
pushl
lds
nop
push
push
or
push
adc
out
xchg
pop
incl
cmp
jb
call
imulb
xlat
or
repz
add
outsb
pop
add
jecxz
jl
cli
lock
mov
out
mov
cmc
xchg
cli
cmpsb
cmp
xor
or
pop
xor
adc
or
dec
pop
out
jge
pop
repz
hlt
ljmp
pop
cmp
sti
inc
sti
das
cld
icebp
cli
inc
divl
jp
insl
idivb
and
pop
in
or
or
sbb
pop
sbb
adc
std
lcall
out
shl
psllw
out
test
sbb
hlt
mov
jp
test
gs
decl
cmp
int3
add
add
pop
cld
fbstp
lock
aaa
in
jnp
stos
in
out
xchg
testl
cmovae
cmp
fimuls
xchg
add
in
adc
dec
std
pusha
hlt
sub
out
in
jmp
pushf
call
movl
rolb
movb
ljmp
negl
clc
jae
insl
pop
add
out
sbb
and
sbb
inc
pmulhuw
insl
icebp
lock
jg
xchg
mov
add
cmp
mov
stc
addr16
sbb
movsl
cli
std
test
addb
testb
push
mov
fcomip
add
xor
imul
bnd
sub
in
pusha
icebp
outsb
cld
adc
or
prefetcht1
cmp
jg
lock
sbb
leave
pop
jp
dec
imull
jle
out
aam
mov
cmc
insl
sti
sub
adc
faddl
inc
cld
mov
out
hlt
pushl
sub
cli
idivb
ds
or
sbb
ds
pop
fistps
std
shl
lcall
repz
in
cli
psubq
cli
inc
ret
xchg
stc
pop
mull
out
inc
repnz
ljmp
mov
xor
sbb
or
lods
test
out
test
ljmp
jbe
repz
cli
add
pop
adc
xchg
or
cld
dec
divb
repnz
add
cld
jmp
cli
inc
add
pop
or
rclb
jnp
rorl
leave
out
cli
incl
add
sti
lahf
testl
xchg
add
adc
mov
es
mov
cli
dec
repnz
or
sti
in
lods
lock
adc
incl
idivl
inc
cmc
iret
stc
push
cld
pop
ljmp
cmp
push
ret
cmpsl
sbb
sbb
sbb
jmp
das
stc
shr
filds
fsubrl
out
out
iret
or
push
adc
loop
dec
adc
push
dec
push
mov
jle
push
clc
sub
sti
mov
push
out
sub
das
mov
push
or
fld1
shl
mov
jmp
hlt
push
std
or
adc
or
loopne
out
mov
roll
roll
loope
stc
inc
push
imul
into
divl
cmc
das
bnd
pop
idiv
fildll
cli
dec
stc
push
stc
incb
or
or
push
push
ja
dec
push
int
cmp
pop
jmp
dec
fisubl
out
lock
or
adc
ret
push
pop
adc
pop
or
lock
pop
sbb
dec
add
lods
push
and
jp
nop
jg
fisttps
in
mov
jecxz
in
jmp
add
or
push
ds
sbb
sbb
loop
lea
pop
add
scas
repz
call
mov
mov
cli
push
jle
sbb
add
cwtl
decl
cli
cmp
mov
rorb
pop
or
decl
push
or
repnz
loopne
fiaddl
in
out
fs
daa
push
sti
adc
push
or
lock
pop
daa
fisubs
and
sbb
cmpb
shr
push
shl
cli
addl
mov
insl
mov
jmp
fwait
fwait
aam
movsb
loope
in
pop
inc
cmp
decl
and
mov
xchg
sbb
sbb
jno
xchg
setle
add
es
cmp
pop
add
add
add
call
loopne
add
add
add
push
clc
inc
hlt
loope
jecxz
out
in
cwtl
out
push
hlt
mov
inc
cli
arpl
lahf
or
enter
rcrb
adc
imul
in
fnstsw
jno
lods
fmull
clc
cmp
push
setno
rcrb
jo
push
adc
or
std
or
cmp
std
push
notb
sar
std
insb
add
call
jo
std
dec
cli
shl
mov
in
or
inc
out
lcall
push
lret
stc
pop
nop
add
adc
lcall
rcrl
jmp
mov
or
sbb
sahf
idivb
pushl
in
push
jmp
in
out
jo
enter
mov
mov
jno
pop
or
les
or
or
jo
mov
repnz
out
in
in
ljmp
movsb
hlt
inc
sti
mov
or
adc
jg
insb
in
ret
xsha1
cmpsb
or
or
add
pusha
cli
cmp
sar
rolb
adc
stos
or
or
or
or
add
and
jo
loop
movsl
aad
aad
decl
scas
loop
out
xor
ret
add
in
daa
pop
sub
push
pop
push
decb
push
je
idivl
add
sti
incl
jbe
loop
stc
pop
negl
and
and
mov
out
mov
call
into
adc
and
xchg
and
and
and
add
clc
and
jmp
cwtl
loop
fistpl
fisubrl
sbb
xchg
in
stos
mul
cmpsb
decl
sbb
or
push
sbb
adc
pop
mov
jecxz
fcomip
incl
testl
fadds
pop
or
jmp
out
mov
out
ficoms
in
jmp
hlt
dec
add
sbb
sbb
push
out
int3
sbb
fbstp
pop
or
movb
add
add
decl
cld
leave
clc
fdivp
aas
repnz
in
dec
ljmp
out
out
add
inc
add
sbb
pop
and
mov
in
ljmp
and
pop
fcoms
pop
push
pop
add
mov
jecxz
loopne
fists
and
loop
out
fbld
ds
dec
cli
sar
add
pop
cld
cmp
addr16
push
nop
push
fistl
sbb
inc
adc
rorl
add
or
fsubrp
dec
jmp
jmp
ljmp
icebp
lock
clc
mov
sti
cld
ret
sub
nop
push
mov
push
adc
push
xchg
call
sbb
sbb
sbb
adc
out
xlat
ljmp
adc
call
sub
add
repnz
test
pusha
mov
or
or
mov
insl
adc
ret
adc
fimull
jmpw
loopne
ljmp
or
fcmovnu
xchg
filds
add
pop
pop
xchg
push
js
xchg
int
xchg
js
mov
iret
or
jmp
cld
cmp
div
not
clc
in
lods
std
xchg
lods
incl
mov
sub
pop
icebp
iret
in
inc
in
xor
aam
pushf
mov
inc
repz
cli
mov
pusha
or
sbb
sbb
sbb
dec
push
jg
ds
push
push
cmc
decl
imul
hlt
adc
inc
testl
add
clc
scas
xor
fisubrl
mov
pop
ljmp
or
or
or
orl
or
notl
repnz
jmp
lock
jmp
sub
sbb
mov
hlt
daa
sti
in
js
out
test
or
or
add
std
jb
pop
les
enter
fbld
or
pavgb
pop
pop
add
decb
into
out
add
fdivp
out
jmp
cmc
cmp
ret
idiv
fistps
or
or
xchg
or
or
pop
or
ljmp
jle
add
cmp
aas
addb
or
cli
hlt
push
loop
in
jae
sbb
icebp
sbb
mov
push
std
or
decl
push
push
jns
sub
cs
sti
ds
fcomip
pop
push
dec
notl
repz
repnz
ljmp
dec
imul
jg
adc
fucomp
in
lock
sub
scas
sbb
aam
andl
and
ljmp
pop
and
std
push
div
repnz
lods
out
imul
add
insl
clc
jmp
mov
cmpsl
in
pop
in
mov
out
cld
rclb
or
or
sbb
and
sbb
sar
decl
lcall
stc
scas
cmc
mov
insb
bnd
lock
mov
in
mov
cmc
aad
jg
cli
data16
hlt
or
adc
sbb
push
add
adc
xor
outsb
or
add
lcall
sar
jmp
push
aad
fst
out
repz
adc
cmp
inc
and
jbe
jno
push
cld
test
mov
adc
xchg
mov
mov
dec
add
jg
fdivp
sub
in
ss
stc
fisttps
loop
in
pop
lock
sub
in
dec
repz
movsb
adc
mov
es
mov
test
xor
inc
sbb
or
ds
outsl
hlt
dec
out
and
pop
out
jmp
lret
mov
hlt
xlat
clc
repnz
jg
cmp
adc
sbb
push
sbb
sbb
repz
add
mov
push
adc
frstor
loop
mov
out
in
jne
fdivrp
cmp
pop
or
mov
inc
jns
mov
pop
sbb
sbb
sbb
inc
push
out
sbb
push
or
add
mov
fildll
fcoms
push
fcompl
sbb
icebp
mov
call
pop
cmp
cwtl
sbb
scas
sbb
sbb
sbb
push
sbb
adc
in
ljmp
cli
dec
cmc
jge
sub
xchg
call
sbbb
icebp
lret
testb
add
add
jb
xchg
adc
unpckhps
enter
fists
or
or
mov
jg
lods
incl
xchg
out
call
add
lock
icebp
and
xchg
cli
mov
ljmp
sub
call
jbe
jo
jecxz
dec
sbb
pop
or
xchg
xchg
std
arpl
scas
or
call
int
sti
out
daa
out
sbb
add
decl
clc
insl
sti
pop
jmp
roll
or
in
lret
mov
mov
aad
scas
or
or
nop
scas
test
mov
mov
fstpt
call
sti
sti
xchg
sti
in
or
nop
sti
mov
imul
negl
imull
cli
add
cld
std
ds
add
jecxz
stos
lcall
ss
ja
aaa
fucom
push
push
push
and
movl
lret
mov
fcomip
repz
out
add
jp
push
jmp
out
sbb
cli
mov
cld
decl
mov
adc
adc
and
cs
mov
or
or
lock
sti
jbe
movsb
lcall
sub
push
out
cmp
sub
out
ja
pop
notb
je
cmp
ljmp
pop
lock
sbb
sbb
sbb
push
imulb
push
add
xchg
out
in
repnz
in
xor
cmp
fcomip
jns
std
jecxz
loop
loop
in
call
stc
int3
add
lcall
push
dec
sbb
and
test
aaa
push
mov
mov
idiv
ljmp
ljmp
add
push
jecxz
loope
loopne
loopne
in
ljmp
mov
push
call
sbb
and
and
les
cmp
push
rcrl
sarb
add
pop
stc
out
jp
cwtl
ljmp
in
or
cmp
pushf
out
call
push
out
mov
pushl
xor
mov
fmull
adc
sbb
mov
sub
daa
jge
dec
pop
pop
pop
repnz
mov
sbb
das
jp
loopne
loope
sbb
incl
xchg
in
jmp
mov
std
sub
insl
mov
mov
sar
add
adc
and
lcall
dec
adc
jmp
cwtl
clc
and
mov
xchg
jecxz
fisttps
ficoml
jmp
push
jecxz
in
jmp
jg
das
push
jnp
sbb
rcll
sti
push
mull
fsubs
jl
sbb
or
and
add
es
call
cmpsl
loop
jecxz
loop
loope
in
call
xor
cmp
dec
push
adc
adc
sbb
sbbb
and
xchg
sbb
sbb
add
jl
jnp
aad
mov
fistpll
loop
out
jmp
out
xchg
testb
add
sub
sahf
adc
adc
ljmp
rclb
cmp
adc
lcall
or
or
add
incl
bnd
push
sub
aad
inc
fnsetpm(287
add
dec
jecxz
out
jmp
out
or
add
pslld
call
lcall
js
popa
adc
mov
and
and
adc
pushl
mov
pop
cli
pop
rep
in
movsl
jecxz
loopne
loopne
loopne
mov
ljmp
push
std
xchg
mov
add
sbb
or
or
or
pandn
call
outsl
adc
adc
adc
or
jg
xchg
stc
xor
cmc
jmp
jmp
push
aad
repnz
ljmp
rolb
or
or
lock
decl
add
adc
push
or
inc
or
or
or
or
or
add
dec
cld
mov
in
repz
pop
jmp
pop
in
mov
push
repz
pop
ja
call
mov
stc
mov
mov
xchg
add
add
incl
cld
adc
sbb
and
pop
adc
inc
add
push
jns
xor
inc
lock
mull
jne
dec
negl
dec
testl
ja
ret
repnz
sti
and
pushf
or
add
decl
scas
adc
push
mov
xchg
sbb
sbb
sbb
adc
adc
pop
add
sub
sbb
cmp
cmc
mov
lcall
hlt
push
hlt
jecxz
cs
sub
pushf
testb
stc
cmp
sbb
or
call
adc
adc
push
bound
pop
xchg
add
std
jb
decl
imul
cmc
in
icebp
shl
gs
icebp
out
jmp
mov
dec
in
fucomip
mov
xor
push
mov
and
es
add
xor
sbb
icebp
sbb
and
es
sbb
shll
jmp
sti
xchg
clc
adc
out
out
in
out
jmp
add
xchg
in
xchg
out
inc
repnz
pop
std
adc
hlt
sub
or
cmp
pusha
pop
ret
les
add
loop
incl
and
es
adc
std
in
cmc
mov
call
mov
lds
cs
cmp
mov
push
xor
xchg
add
pop
outsl
xchg
test
test
nop
fisttpl
loop
adc
xchg
incl
push
dec
push
nop
adc
les
mov
cmp
xchg
testl
cld
ljmp
icebp
in
in
out
shr
mov
out
ljmp
mov
push
sub
push
or
lcall
adc
sub
and
jnp
ljmp
cmpsl
hlt
or
in
jae
loope
push
fldl
test
enter
or
jg
in
fdiv
xor
sub
lock
push
or
into
out
mov
lcall
and
es
daa
nop
and
xchg
jg
call
mov
sbb
add
and
push
sub
jecxz
call
fmull
push
outsl
incl
cli
cld
test
jle
or
adc
call
mov
push
mov
sbb
xchg
in
aaa
mov
jecxz
loopne
ficoms
loopne
popf
out
jmp
insb
repz
movsl
push
cmpsb
mul
clc
popf
stc
pop
sti
into
pop
inc
or
adc
out
xchg
ret
dec
and
xchg
daa
sub
sbb
sbb
aam
add
notb
in
fildll
aam
cld
fstps
js
stc
and
icebp
push
and
inc
adc
adc
adc
test
mov
push
adc
or
adc
or
rcrb
cld
sti
cmc
xor
bnd
loope
fnsave
cmp
loopne
out
out
jmp
adc
mov
push
in
popf
repnz
and
sbb
mov
lods
push
mov
std
sahf
sti
in
cli
scas
clc
outsb
push
outsl
repnz
jno
test
cmp
ljmp
mov
adc
push
add
push
popf
or
decl
or
imul
add
ss
inc
clc
sar
dec
div
stc
daa
add
add
std
ja
roll
add
sti
fcomip
push
popa
lock
clc
in
aaa
mov
clc
lock
or
mov
adc
adc
cld
mov
cmp
push
cli
in
hlt
sbb
fucomip
xor
jmp
out
pushl
push
push
cld
add
pop
inc
or
adc
or
or
add
jg
adc
inc
cld
aam
dec
add
and
or
sar
pushl
xchg
add
cld
jecxz
add
inc
repnz
cmc
inc
stc
push
or
pop
sub
repz
clc
repnz
adc
cmp
adc
mov
or
or
sti
sar
xchg
negl
testl
cmc
enter
lahf
repnz
inc
pop
push
out
aam
jmp
call
loop
jecxz
dec
ljmp
cwtl
in
div
sbb
sub
lock
or
in
sbb
and
and
and
aaa
std
jmp
push
and
inc
or
hlt
int3
in
mov
pop
inc
out
jmp
push
ljmp
pop
outsl
clc
addr16
pop
cld
adc
sahf
cli
mov
cs
jg
fdivp
add
adc
pusha
sbb
sbb
and
and
mov
lret
clc
xor
adc
lcall
cmc
loop
jecxz
out
ljmp
cmp
mov
or
or
or
inc
fcomip
incl
or
or
cmp
or
adc
out
add
mov
push
stos
add
stc
adc
pop
ljmp
call
loopne
loop
in
jmp
int
or
popa
std
inc
std
aad
aaa
cld
in
sti
cli
clc
push
neg
add
pop
test
xchg
jg
cli
or
push
or
push
push
adc
adc
cmp
fistl
jl
cmp
aad
adc
xchg
cmc
push
out
mov
push
xor
cld
mov
xor
push
jbe
das
sti
jb
das
js
jg
add
push
pop
aad
pop
mov
aas
mov
mov
loopne
lea
inc
add
pop
inc
or
or
or
or
outsl
ds
cli
mov
pusha
push
lock
add
popf
icebp
xchg
cmc
pop
cli
outsl
mov
or
or
push
dec
adc
adc
stos
or
arpl
add
add
cmpsb
cld
or
ret
cld
insb
jg
fs
push
loopne
add
add
add
ljmp
xchg
repnz
in
inc
in
fldz
sbb
adc
test
lcall
rorb
mov
call
insl
adc
adc
add
pop
mov
mov
add
cwtl
in
out
ljmp
out
clc
xchg
cld
push
add
adc
adc
adc
push
push
or
add
idiv
cmp
push
mov
icebp
clc
mov
pushf
push
leave
or
call
aaa
js
rorb
and
sbb
sbb
ret
cli
jmp
jmp
gs
movsl
cmp
jmp
lock
push
cld
inc
js
pop
adcb
xor
adc
adc
push
jl
xchg
cli
push
ret
push
stc
outsb
in
pop
push
jae
decl
rorl
dec
or
or
lea
mov
enter
movsl
cmc
mov
mov
test
inc
out
pop
out
cmpsl
decl
std
push
inc
repnz
cld
dec
add
add
mov
sti
or
dec
clc
lcall
test
or
or
or
or
mov
nop
incl
cli
sti
cmp
repz
inc
in
cli
call
std
out
cli
jmp
sbb
jo
xor
jb
ret
ljmp
std
jne
or
jg
out
cli
pushl
sbb
sub
scas
and
push
sbb
stos
fcomip
push
add
lock
cmp
in
or
out
cli
push
ljmp
repnz
negl
cli
mov
ljmp
call
imul
cmpsl
or
lds
lcall
sbb
adc
mov
or
add
inc
imulb
jmp
in
inc
out
mov
mov
add
add
add
add
add
add
mov
sar
testl
adc
fiaddl
repnz
adcl
sbb
adc
push
jae
xor
popa
repz
out
imul
test
dec
jmp
in
mov
clc
push
stos
pusha
add
or
lods
add
add
ljmp
out
mov
lcall
repnz
lahf
negl
idiv
add
add
mov
fbstp
or
cli
or
or
push
mov
fdivr
movsl
std
xor
xlat
cli
and
icebp
push
cli
jno
pop
pusha
cld
mov
std
mov
out
and
decl
sar
inc
std
leave
cld
adc
mov
add
cmc
incl
pop
adc
pop
or
or
fimuls
mov
lahf
add
in
pop
xchg
bound
inc
std
sar
mulb
pop
stc
sbb
cmp
aas
xchg
scas
cli
stc
mov
and
inc
notl
clc
xor
sar
fs
ss
jo
jno
add
stos
cmpsl
pop
dec
push
or
decl
pop
adc
or
pop
xlat
add
ja
sub
xchg
ljmp
ljmp
push
aam
push
cld
sbb
dec
cli
mov
out
cs
sbb
std
test
fbstp
mov
push
pop
jl
dec
add
ss
jg
rolb
push
add
add
inc
decb
push
data16
cmp
and
stos
push
pop
add
xor
sbb
mov
mov
testb
jbe
dec
or
insb
add
sar
sub
jmp
mov
jmp
add
push
jle
roll
mov
std
push
cli
pop
sbb
mov
pop
cmc
imul
clc
add
sub
jmp
dec
add
or
or
or
sub
and
repnz
cmp
icebp
jns
fwait
icebp
or
cmp
sti
stos
std
inc
cmp
or
push
cmp
or
std
aaa
add
in
add
add
xor
jbe
push
std
std
cmp
jle
sub
mov
add
fldl
out
cli
xchg
add
add
add
dec
cli
jns
xor
clc
ljmp
clc
add
xchg
dec
add
das
outsb
or
or
add
jb
stc
adc
push
jmp
cmc
out
or
out
aad
jmp
out
js
adc
sub
mov
lock
cli
orl
or
icebp
or
jmp
fdiv
or
or
dec
pop
test
pushl
sahf
add
into
sti
dec
clc
mov
xor
daa
lock
call
and
cmp
notb
add
add
or
or
repnz
sub
add
add
pop
data16
push
inc
add
xchg
or
dec
add
lock
mov
std
dec
cld
stos
sti
pusha
sti
sar
xchg
ljmp
mov
mov
add
add
mov
add
sub
int3
pop
adc
scas
mov
sbb
add
cld
dec
dec
cli
gs
adc
or
xor
sub
xlat
addl
add
add
add
add
add
add
roll
add
ret
inc
fdivr
dec
jmp
ljmp
lcall
pop
clc
ss
hlt
or
jle
mov
je
mov
js
jg
mov
bound
mov
mov
jp
push
stos
or
call
loop
mov
add
dec
std
pop
sti
clc
inc
aaa
jecxz
push
xchg
idiv
cmc
xchg
addr16
testl
pop
hlt
stc
int
stc
data16
sti
lods
cld
hlt
std
js
dec
add
push
sub
cmpsb
mov
or
mov
pop
push
dec
or
loop
decl
out
add
inc
cld
psubw
int3
hlt
arpl
xchg
hlt
adc
cmp
enter
sbbl
cli
lock
or
rolb
inc
add
cli
std
xchg
std
cwtl
std
call
or
cmpsl
add
add
das
or
or
or
daa
pop
cmpsb
std
add
push
std
xor
stc
sbb
stc
add
mov
jmp
incl
stos
add
add
cld
test
subl
push
or
repnz
repz
xchg
test
es
push
add
add
add
out
xchg
leave
or
push
or
rorl
or
add
mov
decl
sbb
adc
fbld
std
ds
mov
testb
repz
repnz
bnd
js
xorb
in
xchg
clc
fcomps
incl
dec
add
push
add
daa
fimuls
mov
or
pop
dec
push
dec
add
add
mulb
mov
fdiv
shl
jo
fidivrl
push
mov
hlt
mull
stc
pop
cli
push
sti
xchg
mov
add
movb
lcall
hlt
movb
or
or
aad
mov
or
or
pushf
add
add
lock
aam
dec
std
sbb
cmp
mov
cli
or
incl
jb
cld
inc
std
test
sar
fscale
scas
std
jg
test
arpl
dec
std
inc
std
incl
clc
or
push
std
dec
bound
into
loop
sbb
xchg
and
insl
decb
cmp
lcall
add
add
add
jo
and
mov
add
add
decl
fcmovu
xchg
cld
cli
push
cli
sbb
jmp
testl
add
pop
clc
mov
xchg
cli
scas
decl
mov
push
rorb
aaa
jge
mov
fmulp
or
or
push
mov
jmp
out
add
dec
out
ljmp
mov
sub
movsl
cli
adcb
cli
xchg
cli
out
mov
cld
pop
xor
inc
add
or
cwtl
or
xor
or
and
adc
xchg
les
mov
xor
xor
gs
pop
out
cmp
lcall
add
xor
sub
xchg
roll
scas
xor
add
stos
mov
add
stos
add
add
add
call
sar
std
mov
pop
sti
aad
xbegin
mull
clc
jmp
das
xor
cld
fdivr
lods
lcall
pushf
add
add
jne
in
aad
incl
xchg
jg
add
sub
cli
mov
idivl
inc
test
stc
jno
nop
sti
js
ljmp
add
add
sti
add
pop
test
sub
add
add
add
call
lahf
add
dec
add
add
mov
add
ds
sbb
jmp
sbb
and
outsl
cld
push
std
pop
pushl
lret
outsl
rolb
push
movsb
add
add
add
add
dec
add
xchg
add
add
xor
mov
ret
pushl
add
sub
adc
in
jle
sub
add
add
lret
out
add
jmp
pop
cld
ljmp
mov
mov
add
test
add
add
add
add
sub
aaa
xor
inc
inc
cs
pop
adc
cmp
cld
sar
sti
mov
sti
imul
fs
cli
jg
push
jle
std
fiadds
std
jp
in
xchg
daa
sti
cli
scas
mov
out
push
or
dec
cli
es
ss
data16
add
add
lods
mov
mov
sbb
push
add
mov
sbb
mov
aam
sub
cmp
std
add
cld
mov
and
push
incb
aam
add
add
sub
out
sub
mov
cli
mov
dec
aad
in
sub
aas
jmp
mov
dec
pushl
cmpsl
push
jecxz
scas
xchg
dec
and
stos
aad
pusha
push
push
pop
add
incl
pop
add
fcmovb
add
add
inc
add
das
add
or
add
daa
add
add
sub
add
pop
sub
loopne
sub
and
xchg
outsl
cmp
dec
add
cld
xor
add
fcmovbe
decb
jns
cltd
sti
int
xlat
stc
idiv
push
clc
cwtl
testl
mulb
test
fincstp
mov
push
sub
sbb
sbb
stc
xchg
add
mov
into
push
jg
xor
or
pop
movl
incl
add
cmpsb
add
std
movsl
cld
idiv
push
sti
push
sti
cmp
ds
push
lret
jg
ljmp
xor
xchg
loopne
and
push
aaa
add
add
add
add
loop
inc
add
decl
mov
sub
xchg
add
out
jnp
fistps
mov
pop
cld
push
sti
cli
jp
cmp
inc
cli
cmpsl
cli
pusha
sti
cmp
mov
ss
cmpsb
cmp
add
add
add
push
rolb
insl
adc
add
jno
cld
fisttpl
movsl
mov
add
add
sbb
aas
pusha
pop
sub
add
mov
mov
std
xlat
pop
pop
cmp
std
jb
in
adc
pop
add
ret
pop
add
xchg
lcall
cltd
cld
mov
stos
cli
leave
stc
xor
stos
clc
jb
insl
clc
ja
and
aas
clc
call
clc
cmp
stc
inc
cli
jo
mov
cld
std
cld
loope
inc
jmp
dec
add
add
pop
mov
jge
stos
or
or
pop
out
push
mov
shl
add
sub
out
mov
cld
aas
clc
mov
and
ficomps
lcall
sti
or
std
rcll
adc
outsb
loope
notb
xchg
incl
add
dec
push
inc
push
out
add
jbe
aas
sbb
mov
cmpsb
out
cld
add
xchg
cld
push
sti
iret
cli
pop
cli
daa
dec
jae
pop
inc
sti
out
sub
outsl
push
fscale
enter
add
add
add
add
jmp
push
add
faddl
mov
or
add
add
add
jo
cmc
push
es
jnp
cmp
pop
adc
sub
mov
dec
data16
cmp
dec
sar
decl
lods
std
xor
sar
pop
lock
cld
in
sti
jl
sbb
sahf
mov
cli
and
inc
sti
sbbb
sti
adc
nop
cld
sub
stc
push
inc
mov
jl
add
add
add
add
outsl
ljmp
add
add
xor
push
add
decl
ss
jns
idiv
jno
call
cld
cld
or
cmc
sti
pop
mov
std
or
outsb
fsin
and
cmp
adc
add
lcall
data16
add
xchg
add
sti
movl
inc
add
clc
mov
decl
stos
pusha
iret
hlt
fildll
decb
and
arpl
mov
jg
pop
fidivrs
push
add
ret
add
pop
add
sbb
mov
add
add
cmp
inc
add
add
add
add
inc
mov
add
pop
data16
fcoml
mov
xor
mov
add
mov
fimuls
add
add
ret
dec
neg
lcall
incb
ds
mov
std
fs
xchg
testb
jb
mov
pop
and
sbb
loopne
push
jnp
stos
cmc
rcrb
dec
pop
mull
or
std
xor
loop
push
inc
sub
add
sbb
add
mov
cmpsl
add
sahf
test
roll
aaa
fcomip
xchg
jb
push
xor
mov
outsb
add
outsl
add
add
iret
ljmp
out
cmpsb
push
jl
sub
hlt
std
stos
std
stc
or
inc
hlt
jmp
mov
add
add
add
adc
pusha
add
cs
mov
lea
and
sub
pop
add
ja
push
stos
jmp
adc
mov
sahf
push
ljmp
jmp
call
cmp
test
sub
add
call
cmpl
filds
cwtl
add
and
add
add
pushl
dec
clc
incl
cmpsb
mov
std
fdivr
stos
cld
xchg
cld
mov
add
pand
xor
mov
inc
push
mov
ljmp
sub
add
sti
es
sub
mov
insb
std
sbb
sar
mov
idiv
xchg
decb
test
lahf
outsb
push
add
sub
add
sbb
test
cwtl
sbb
pushl
adc
call
lret
push
add
jp
addl
add
adc
cmp
mull
daa
pushl
mov
repnz
xchg
add
add
lock
clc
push
push
mov
mov
cmpsb
mov
cmp
testb
pop
pop
sbb
xchg
sahf
ss
imul
xchg
pop
xchg
jmp
mov
mov
adcb
add
fstpl
add
add
add
in
mov
jg
pop
testb
cmpsl
movb
add
bound
out
mov
lock
out
lahf
cs
int
sahf
cld
push
cld
inc
cld
arpl
lcall
sahf
mov
sub
stos
ret
hlt
lds
add
int
aad
lcall
mov
inc
add
std
inc
mov
test
pop
clc
ss
sbb
out
push
xchg
stos
out
sti
lods
push
pop
into
divb
add
test
lret
mov
xchg
xchg
push
loop
cltd
add
and
arpl
add
sub
add
sbb
and
and
mov
mov
jae
ja
and
rcl
add
dec
or
add
sbb
sbb
pop
cmp
stos
add
xchg
jo
and
jbe
ja
stos
cmpsb
lods
loop
jle
ljmp
ljmp
pushl
push
loop
inc
mov
mov
xchg
dec
push
cld
aas
xor
add
add
test
adc
add
adc
push
mov
dec
fdivr
daa
add
add
adc
dec
or
or
mov
push
mov
mov
aad
idiv
sbb
pop
add
mov
decb
mov
add
inc
out
scas
xchg
fiadds
push
ficoml
inc
ljmpw
and
inc
decb
lret
std
shlb
or
mov
cli
incl
ds
pop
sti
sti
std
sti
xchg
cld
sbb
loope
sahf
les
sub
lcall
inc
add
add
test
add
add
add
ret
lret
adc
fisubrl
inc
add
push
pop
call
mov
cs
pop
mov
sar
pop
pop
out
sbb
out
pop
add
call
stos
pop
cmp
xor
sti
add
cs
mov
sar
movsl
decl
jbe
pop
ret
pop
mov
add
xchg
out
inc
popl
mov
lcall
xor
dec
add
xchg
rol
sti
loop
add
xor
rclb
mov
or
lods
decb
xchg
cwtl
popf
ret
mov
decb
mov
inc
lcall
push
lcall
jecxz
adc
lock
inc
mov
mov
cld
or
std
jle
dec
std
push
hlt
cld
enter
push
sbb
cld
loop
xor
and
jecxz
outsb
fcmovu
cmpsb
cmp
add
xor
push
mov
push
lods
bound
jg
pop
jl
xchg
add
add
add
add
add
shlb
add
ret
decl
cmp
bound
jnp
movsl
add
mov
mov
arpl
mov
aad
sahf
cmpsb
jecxz
in
mov
dec
fidivrs
ret
push
sahf
push
mov
and
or
jg
in
shlb
ljmp
push
add
add
loopne
or
push
outsb
nop
or
ret
xlat
add
add
fcoms
roll
mov
inc
xchg
cmc
mov
fsin
cmpsl
decb
push
cmp
sbb
dec
loopne
add
jecxz
cmp
hlt
out
js
bound
or
imul
add
mov
leave
mov
cld
std
std
jp
cmp
add
cld
pop
pop
or
xor
jg
mov
add
push
xchg
jno
lds
jp
cld
push
mov
sub
sbb
out
add
add
lcall
data16
fcmovbe
inc
add
mov
faddl
repnz
mov
stos
pop
clc
loopne
mov
jle
aam
out
mull
push
inc
or
add
out
xchg
hlt
push
mov
add
cmpsl
ja
xlat
or
jbe
add
ss
add
jbe
add
jb
ja
push
bound
mul
add
add
dec
pop
mov
add
cli
sub
loop
mov
push
aam
adc
mov
jp
ljmp
lock
jno
lods
rcrb
fdivr
add
xor
mov
rcl
incb
out
outsb
lahf
add
mov
push
out
mov
push
dec
xor
jb
jb
outsl
scas
or
iret
jp
push
scas
adc
add
sahf
pushl
adc
sbb
mov
lret
hlt
add
add
add
pop
loop
xchg
pop
scas
adc
inc
xchg
dec
xchg
cmpsb
jnp
dec
pop
mov
aaa
xor
add
divl
add
sbb
cmp
rcll
jecxz
mov
xor
jae
rolb
cld
addb
add
ret
cmpb
sbb
pushf
adc
cmp
push
scas
out
ss
push
fnsave
or
mov
shrb
or
cli
sbb
outsb
pushl
sahf
scas
xchg
decl
insl
decl
bound
decl
push
fsubrp
xor
sbb
scas
cltd
decb
adc
mov
ss
std
cmpsl
std
cmpsb
std
sub
data16
out
push
dec
jp
pop
or
add
jp
or
or
es
mov
jmp
adc
push
mov
xor
and
push
add
cli
loop
in
loope
push
mov
mov
add
pop
jbe
add
push
out
lgdtl
loope
inc
xor
es
mov
mov
sahf
mov
push
pop
rcl
cli
mov
scas
push
mov
push
mov
cmpsb
push
push
icebp
xor
mov
ret
mov
dec
cmpsb
jecxz
dec
fiadds
push
test
push
imul
jbe
btr
dec
dec
fsts
push
lret
cmc
mov
mov
mov
gs
andb
ljmp
idiv
in
or
sbb
jg
aaa
and
pop
cmp
bound
addw
jb
jbe
adc
pop
mov
ljmp
test
mov
xchg
ja
out
decl
pop
cmp
add
xchg
mov
lea
pop
fs
repnz
aad
rol
add
mov
push
or
mov
stos
negl
out
inc
pop
ss
cmpsb
outsb
xor
push
addl
push
in
adc
add
pop
sarb
scas
pusha
dec
jns
mov
mov
dec
mov
sahf
jns
insb
fidivrs
sbb
jo
cltd
lcall
or
push
adc
cmp
add
cmp
lcall
push
push
jne
notb
aaa
mov
sub
pop
outsb
cmc
sub
ret
xchg
jp
std
sbb
bound
test
dec
cs
xor
cmp
out
push
pop
stos
push
push
inc
mov
mov
lret
mov
cmp
xor
bound
fsts
mov
push
mov
jecxz
int3
push
test
ret
mov
dec
add
inc
dec
push
xchg
imul
into
mul
cli
xchg
jge
loope
inc
movsb
xchg
xchg
rol
inc
jb
jge
lahf
es
orl
inc
jecxz
mov
mov
mov
int
cmp
scas
ret
divl
clc
loopne
or
repz
fistpl
sbb
ret
xchg
pop
fidivrl
out
fstps
xchg
ja
ljmp
cmp
call
jp
push
ret
es
xchg
repnz
cld
sbb
mov
cmp
fisubrs
mov
mov
adc
push
or
repnz
test
cmpsl
iret
andl
and
loopne
test
sbb
dec
sysret
js
and
push
push
jns
jmp
stos
jbe
push
push
daa
xchg
push
ret
ss
js
jp
push
push
xchg
mov
out
sti
jp
clc
xchg
push
push
add
push
push
dec
fimull
dec
pop
pop
mov
or
adc
add
sub
ds
push
sub
out
push
add
jp
cmp
neg
pop
out
jnp
popa
aad
sub
add
outsb
lock
push
lock
aam
in
hlt
ds
sbb
jb
outsb
mov
ds
push
repnz
mov
or
popa
ss
push
mov
adc
jno
mov
mov
sbb
and
push
mov
orl
jg
push
xchg
pop
stos
subl
jb
out
mov
xchg
movsl
fidivrl
mov
outsb
cli
data16
mov
dec
sub
mov
and
sbb
jbe
ret
mov
jge
pushf
pop
push
into
xor
cs
mov
push
mov
je
push
outsb
pop
dec
ljmp
sbb
or
push
sbb
or
out
loope
jmp
lcall
and
add
or
cmp
push
xchg
loopne
out
mov
push
mov
push
js
imul
into
pop
pop
fs
test
lock
es
jecxz
inc
sarl
cwtl
ret
ret
pop
test
mov
adc
loope
loopne
cs
sbb
scas
mov
movsb
jbe
mov
jbe
inc
and
div
icebp
jb
and
inc
push
or
orl
mov
xor
hlt
icebp
aad
push
cmpb
lock
outsl
pop
addr16
push
popf
jbe
add
pop
add
jl
add
sti
inc
addb
cmpb
mov
mov
xor
add
loopne
cmp
xor
adc
shl
clc
add
repz
sbb
mov
adc
add
loopne
ljmp
push
and
out
jmp
or
fldcw
popl
mov
shl
dec
mov
push
into
mov
into
and
inc
lods
push
divl
mov
lds
inc
fbstp
push
sub
push
sbb
dec
out
lcall
fists
fiaddl
cmp
push
mov
push
jo
mov
push
jp
ss
jnp
ja
mov
ret
xor
xor
sub
aaa
fidivrl
or
out
adc
or
mov
sub
ss
adc
cmp
jbe
mov
cs
jo
or
and
rolb
out
scas
adc
add
bnd
je
xchg
dec
loopne
divl
inc
scas
mov
fisubrs
push
sbb
add
fstpl
leave
sbb
pop
pop
jbe
sub
mov
add
out
data16
mov
jl
mov
lcall
dec
jmp
pop
sbb
sbb
fisubrs
ret
enter
mov
xor
aad
cmp
ljmp
inc
push
faddp
inc
add
push
cs
jnp
or
ljmp
push
out
loopne
xor
into
iret
inc
fidivrl
addb
sbb
ret
ja
push
mov
aad
add
push
out
ret
xchg
jb,pn
lret
loope
dec
jecxz
inc
vdivss
inc
add
faddp
jnp
adc
jb
add
mov
and
pop
insl
add
add
adc
xor
cld
cs
loopne
loope
push
int3
or
std
pop
out
jmp
in
aad
ljmp
jecxz
clc
mov
neg
add
sahf
jmp
jbe
push
aad
hlt
inc
sti
repnz
cmp
scas
and
stos
xlat
jo
ss
mov
ficompl
adc
adc
inc
and
idivl
in
out
inc
add
mov
cmp
sbb
dec
out
imul
mov
repnz
push
mov
push
fucom
mov
pop
inc
xchg
stc
push
fidivrs
sbb
add
cli
data16
in
cmp
out
push
clc
dec
xor
stc
adc
or
xchg
mov
xor
daa
pop
inc
mov
outsb
addr16
lcall
in
or
mov
and
cmp
sub
pop
hlt
jmp
or
xor
inc
ss
nopl
add
or
push
out
sub
sbb
pop
mov
inc
sbb
mov
or
movb
mov
inc
cmp
ss
push
out
jl
dec
loop
or
sub
sub
inc
mov
jmp
out
negl
push
adc
shl
emms
loopne
shr
popl
pop
or
pop
imul
push
push
pop
jl
aas
mov
add
js
adc
adc
add
inc
js
xor
scas
sarl
dec
push
dec
adc
arpl
mov
cmc
rcl
aaa
ds
pop
mov
push
cmp
cmp
clc
adc
mov
lock
dec
les
std
cmp
notl
sbb
shl
add
cmp
sub
jnp
call
inc
mov
bnd
mov
sti
aas
testb
inc
std
inc
dec
cmp
add
adc
adc
mov
pop
dec
mov
push
enter
xchg
sub
pop
add
push
adc
cmpsl
jo
cmp
xchg
faddl
jg
js
jl
test
mov
cmpl
jle
addb
jle
mov
jg
es
orl
push
aaa
cmpl
push
jns
jp
stos
addl
addr16
xor
sahf
bound
sbb
div
jp
js
dec
test
jnp
inc
cmpl
mov
add
jg
xor
scas
cltd
flds
sub
sbb
jnp
rolb
fbstp
mov
stos
ljmp
shr
or
enter
jl
aaa
xor
jns
xchg
xchg
jo
xchg
mov
adc
jns
push
push
test
lcall
lods
dec
mov
mov
inc
cmp
jp
test
js
pop
pop
data16
mov
mov
pop
inc
cmp
sub
push
incl
mov
jo
dec
inc
dec
pop
ja
movsl
mov
mov
mov
jbe
cmp
aaa
xor
outsl
jmp
lods
mov
pusha
dec
dec
dec
pop
jno
cmpsb
ds
mov
imul
clc
mov
lea
jge
inc
push
bound
ds
stos
sahf
cmp
xchg
xchg
xchg
lea
inc
ds
outsl
xchg
stos
mov
stos
cwtl
jns
push
push
push
imul
pushl
xchg
nop
mov
dec
dec
push
inc
dec
test
test
pop
popa
lcall
mov
notb
cmp
outsl
xchg
test
cmpsl
mov
idiv
popa
push
pop
bound
cmpsb
mov
lods
mov
pop
dec
inc
dec
inc
dec
popa
sbbl
mov
pop
arpl
xchg
mov
xchg
xchg
xchg
jg
inc
aas
dec
inc
dec
fistpl
incl
xchg
subl
mov
mov
inc
ds
dec
inc
dec
data16
push
pop
popa
jb
xchg
movsl
mov
sti
mov
cltd
xchg
inc
cmp
jne
cmpsl
lods
movsb
sahf
mov
neg
das
xor
pushf
scas
mov
test
cmp
inc
popa
das
clc
incl
lcall
jg
movsb
mov
lods
mov
inc
cmp
mov
inc
push
jne
movsl
lods
cmpsl
popf
ja
jo
mov
clc
pop
in
lahf
fwait
cltd
lcall
mov
imul
push
data16
movsl
mov
cwtl
xchg
xchg
cmp
pop
jle
add
stos
scas
ljmp
negl
mov
mov
cmp
inc
push
je
mov
scas
js
jle
pop
cmpsb
insl
adcl
testb
dec
push
pushf
test
test
decl
imul
cmpsb
mov
inc
cmp
popa
cmp
lcall
mov
pop
pop
gs
xchg
test
cltd
mov
cmp
dec
dec
pop
jp
into
jg
xchg
mov
imul
mov
std
popf
nop
outsb
dec
ds
cmp
xchg
mov
pop
pop
outsl
xchg
stos
in
jle
mov
mov
cmp
outsb
mov
fwait
lcall
subl
jl
fwait
stos
or
gs
outsl
in
mov
inc
dec
dec
push
adcb
gs
lock
movsl
stos
movsl
imul
xchg
mov
dec
dec
push
dec
pop
jne
popf
mov
mov
nop
lahf
stos
cmpsl
jbe
mov
push
dec
push
push
pop
insl
adcl
das
rclb
jp
cltd
mov
jbe
dec
push
pop
add
pop
jne
xchg
lcall
imul
movsb
ficoms
xchg
ds
pop
push
pop
pop
pop
push
lea
imul
jp
xchg
lahf
jno
jmp
xchg
mov
pop
pusha
pusha
pop
fdivr
fildll
orb
insl
insb
insl
jb
xchg
sahf
mov
cld
mov
clc
jle
pop
pop
bound
jb
mov
insl
outsb
jo
orb
mov
jnp
jbe
fs
popl
mov
cmc
add
jo
js
dec
lcall
push
push
imul
mov
jl
lea
cmpsb
push
push
outsb
mov
jg
push
fisttps
jns
js
xchg
dec
outsb
lock
outsl
insl
xlat
scas
sbb
js
mov
inc
mov
xchg
nop
mov
xorl
xor
jnp
sbbl
jmp
sbb
xchg
jae
push
outsb
jbe
jge
mov
xchg
xacquire
mov
mov
jnp
jno
insb
jae
mov
lret
aad
mov
xchg
fwait
or
test
jo
add
loopne,pn
jge
lods
mov
filds
push
add
xchg
js
cld
push
add
sbb
imul
mov
andb
loope
fmul
jle
imul
jne
mov
rcrb
add
add
or
lcall
gs
jbe
nop
cwtl
popf
fwait
xchg
lea
pop
and
adc
jnp
jne
jl
ljmp
nop
xchg
xchg
mov
jl
andl
push
outsl
fbld
js
outsl
je
mov
xchg
nop
mov
jnp
rorl
sbb
xor
jbe
or
loopne
inc
mov
cmpl
cwtl
fisttpll
or
cmp
jae
and
nop
mov
or
ds
ja
ja
lods
xchg
push
jb
jp
add
sarl
jle
dec
orl
jge
mov
lods
pop
or
or
jnp
jge
clc
mov
sub
mov
testb
sub
pusha
and
or
mov
out
or
fdivrs
dec
jnp
jl
pop
cmp
lahf
ds
aas
add
pop
adc
lcall
cmp
mov
mov
jne
sbb
repz
jle
and
roll
arpl
pop
sbb
jnp
jae
scas
and
pop
repz
fnstenv
jge
test
add
mov
jl
test
adcl
mov
jnp
mov
mov
ret
arpl
out
inc
pop
xorb
test
fstpt
insb
add
pop
xor
ss
sub
icebp
xor
lea
mov
inc
and
sub
push
and
mov
push
mov
lea
pusha
pop
aas
int
nop
lods
aaa
cmp
mov
mov
aaa
adc
pop
add
aas
adc
jno
jae
les
or
push
outsl
add
and
pop
cmpb
add
inc
in
movsl
testb
and
sbb
pop
pop
movsl
add
mov
jg
cli
jp
mov
sub
subl
sbb
add
or
shlb
jg
push
and
cmp
add
sbb
addb
mov
imul
insl
sbb
jl
cmp
mov
sub
outsl
push
add
adc
inc
mov
rclb
loope
fistpl
cmpxchg
adc
fcom
and
cmp
sbb
lret
xor
mov
addb
lods
insl
fildl
xchg
pop
push
lods
test
xchg
fwait
xor
mov
das
add
das
or
movsl
popa
jae
mov
negl
daa
or
shll
aaa
or
jno
adc
lret
or
jmp
mov
jnp
push
pop
adc
sub
fmulp
ss
sub
sbb
aam
out
faddp
or
pop
mov
jae
lahf
jge
add
push
push
xchg
imul
adc
dec
test
mov
je
je
jp
addl
test
push
insl
pop
or
insb
imul
jl
push
std
mov
test
pop
call
xchg
xchg
xorl
mov
jne
jne
ljmp
xchg
lea
fs
insl
mov
fisttpl
jl
jne
jb
jbe
orb
mov
fstpt
pusha
pop
inc
arpl
xchg
xchg
xchg
nop
mov
jae
jo
je
jle
mov
xchg
xchg
xchg
xchg
push
pushf
mov
pop
bound
addr16
nop
and
pop
test
jo
push
outsl
jbe
mov
xchg
pop
addb
in
jmp
pushaw
pusha
jb
mov
jo
gs
orb
pushf
sahf
pushf
cltd
xchg
mov
popa
pusha
push
nop
xchg
cltd
cltd
xchg
xchg
and
jle
jns
imul
jno
test
or
mov
pop
pop
imul
ret
filds
loop
push
pusha
push
pushf
jge
cwtl
mov
xchg
mov
ja
xchg
mov
xor
pop
imul
cmpsb
lahf
and
xchg
ljmp
pop
push
imul
mov
cmpsb
xchg
mov
mov
push
dec
imul
mov
push
push
pop
popa
test
mov
lods
mov
decl
xor
xchg
lods
mov
jl
pop
dec
dec
push
pop
pop
decw
mov
scas
movsl
lcall
dec
push
ds
jge
decl
shll
inc
dec
push
pop
inc
mov
mov
mov
cwtl
nop
mov
xchg
inc
and
outsl
mov
stos
xchg
je
dec
inc
inc
decl
fs
xchg
cmpsl
mov
mov
cwtl
xchg
aas
sbb
std
idiv
pushl
ror
ret
jne
dec
ds
push
pop
fs
xchg
lcall
mov
dec
pop
sub
xor
mov
lahf
andb
aaa
inc
inc
push
pop
je
xchg
stos
pushl
lods
mov
jne
adc
xor
jns
leave
fmul
mov
jae
inc
sub
mov
loopne
mov
mov
mov
or
xor
lcall
sub
ret
fst
lds
sub
aaa
dec
pop
ja
movsl
mov
rol
mov
jmp
sub
pop
push
xchg
mov
mov
inc
xor
aaa
dec
pop
jb
movsb
mov
rol
inc
mov
test
and
sbb
mov
mov
imul
pop
js
mov
ds
lods
lods
jge
or
sbb
pop
lcall
loope
int
sbbl
and
xchg
scas
mov
sbb
xchg
dec
unpcklps
lods
int3
fsubp
fcmovnb
cwtl
jae
aaa
daa
sbb
cmp
mov
mov
mov
and
sbb
popf
mov
ljmp
sbb
xor
popf
mov
enter
scas
lods
test
or
adc
cmovns
mov
jecxz
loopne
xchg
jo
xor
push
sub
push
outsb
scas
ret
ror
ret
mov
cmp
jg
dec
adc
sbb
pop
xor
out
into
mov
push
and
dec
andb
call
enter
mov
bound
adc
or
and
in
fnstenv
push
push
cs
popa
jge
mov
negb
lret
mov
push
push
pop
nop
mov
jecxz
loopne
pop
je
mov
xor
dec
inc
pop
jns
mov
sub
lret
sarb
lcall
pop
add
pop
mov
dec
dec
xor
xor
jg
jp
mov
fimuls
mov
and
sbb
mov
mov
insb
cld
call
sbb
xor
jl
mov
into
rcl
int3
mov
push
and
sbb
mov
clc
pushl
push
loopne
lods
mov
xor
xor
jl
mov
mov
ret
sarl
sbb
das
arpl
scas
mov
and
mov
clc
es
dec
pusha
jge
leave
into
ror
xchg
mov
sub
add
cmp
decl
int
mov
xor
sub
xchg
scas
rol
into
lret
mov
das
mov
dec
cmp
stos
fcmovne
test
insb
push
xor
das
inc
push
arpl
int
jg
int
mov
dec
sub
cmp
aad
enter
push
cmp
jg
pushl
ss
push
data16
mov
sub
aaa
pusha
cmpb
leave
stos
sub
ss
inc
push
mov
mov
aam
enter
xchg
push
loop
pushl
aaa
and
xchg
mov
aam
mov
andb
cmp
inc
pop
outsl
test
iret
into
mov
xor
and
jno
lods
ror
mov
mov
inc
cmp
mov
sbbl
dec
cmp
and
adc
push
jno
stos
jg
sti
dec
mov
je
xchg
or
xchg
stos
mov
decl
mov
cmp
push
insl
xchg
jns
jbe
imul
dec
inc
inc
dec
fs
test
mov
int
scas
mov
loope
ljmp
adc
push
insb
xchg
movsl
xchg
jnp
push
inc
inc
inc
dec
arpl
cmpsb
mov
or
mov
int
sub
sbb
push
imul
mov
gs
inc
inc
inc
dec
pusha
jne
movsb
dec
or
leave
mov
cmpsl
lcall
das
push
sbb
cwtl
lods
mov
pop
dec
inc
inc
dec
pushl
or
pop
outsl
xchg
or
cmp
xor
data16
mov
jp
lods
mov
inc
inc
dec
pop
insb
test
call
leave
shlb
and
xor
je
lahf
mov
mov
mov
dec
inc
inc
push
addr16
mov
hlt
xchg
cmpsb
mov
mov
sbb
inc
push
push
scas
sub
pop
adc
test
dec
sub
sahf
mov
addl
mov
dec
lock
add
mov
or
dec
inc
dec
pop
xchg
je
adc
shl
out
mov
dec
xor
sub
sub
popf
xchg
push
dec
dec
dec
sbb
lcall
cltd
addr16
dec
inc
and
add
sahf
rcrb
xchg
jnp
pop
push
push
fs
mov
leave
sarb
fstpt
cmp
cmp
pusha
jae
popf
scas
mov
loopne
js
pop
push
dec
dec
pop
push
aaa
std
add
sub
dec
xor
push
addr16
ss
jp
mov
xchg
dec
push
pop
outsb
ret
in
or
fdivs
mov
jne
mov
std
lcall
xchg
stos
cmpsb
xchg
test
pop
push
dec
push
popa
outsl
adcl
popf
insl
dec
push
dec
sub
dec
pop
insb
jle
movsb
cli
std
das
push
jb
pop
push
push
pop
arpl
xchg
ret
fbld
aam
push
push
dec
sub
push
xchg
mov
xchg
xorl
pop
push
push
pop
gs
and
mov
push
dec
sub
mov
cmpsl
mov
popa
pop
pop
pop
data16
mov
clc
jg
in
sahf
jbe
push
dec
xor
cmp
jp
pushf
mov
jmp
gs
pop
pop
dec
sahf
lods
fadd
mov
pop
push
das
add
pop
or
cmp
pop
push
lahf
xchg
xchg
jl
jo
pop
pop
dec
lea
lahf
jbe
pop
adc
or
decl
cwtl
mov
mov
addr16
pop
pop
cs
loope
decl
mov
lods
xchg
jno
push
dec
xor
push
cltd
lahf
lahf
das
add
mov
dec
mov
push
jb
int3
mov
jg
pushl
pop
dec
xor
imul
xchg
mov
pop
imul
mov
test
inc
xor
mov
jg
jnp
cltd
fwait
sahf
mov
jo
pop
pop
arpl
xchg
test
mov
jl
pop
call
stos
adcb
add
arpl
les
pushf
mov
nop
jg
outsl
pop
push
dec
cmp
push
pop
push
test
xchg
mov
arpl
orl
mov
push
inc
ss
insb
jp
xchg
cmp
fsub
popf
lcall
idivb
mov
xchg
add
ds
cmpb
sub
xchg
nop
outsl
addr16
loopne
lock
mov
je
pop
dec
cmp
ret
jb
xchg
decl
loopne
js
lcall
push
jg
fwait
lods
lcall
movsb
mov
pop
inc
cmp
push
pusha
push
lcall
xorb
imul
repnz
sarb
test
push
inc
aaa
aas
dec
push
bound
mov
popf
pushf
xchg
mov
gs
sub
pushl
mov
mov
pop
push
inc
inc
loopne
ss
arpl
xchg
xchg
dec
fwait
xchg
insb
testl
mov
addr16
loopne
xchg
jnp
xchg
xchg
cltd
lcall
cmpsb
mov
jbe
ljmp
ja
jnp
addl
dec
dec
xchg
xchg
push
jle
outsl
push
push
ja
loop,pn
and
sub
js
dec
xor
cld
in
call
xchg
popl
jo
test
cmpsb
idivb
dec
cmp
xchg
cwtl
cwtl
xchg
test
add
imul
mov
mov
dec
addr16
dec
fbstp
xchg
cmp
dec
ds
dec
xchg
xchg
xchg
xchg
mov
push
cld
outsb
imul
jnp
movsl
lods
mov
add
mov
aaa
cmp
jae
xchg
xchg
xchg
cs
lea
je
pop
rorl
lock
mov
mov
pop
dec
aas
dec
pop
add
mov
mov
je
push
lock
dec
push
jb
xchg
bound
fcompl
aaa
inc
dec
push
dec
xchg
cs
add
push
push
jb
mov
test
mov
fs
dec
cs
pop
fs
pop
ret
jae
adc
xchg
lea
push
or
jp
mov
out
bound
inc
dec
push
pop
fdivrl
nop
ficompl
nop
mov
jp
pop
sub
jo
mov
push
fcomps
outsb
pop
je
sbb
mov
mov
incl
test
mov
mov
cltd
subb
jle,pt
sbb
pop
push
pop
push
test
jp
mov
ficompl
lods
sub
jl
popf
xchg
pop
dec
cmp
dec
xor
andb
test
mov
mov
mov
ret
je
pusha
push
in
clc
loopne
inc
inc
dec
in
outsl
jl
xor
insb
decl
sub
xor
inc
mov
movsl
xchg
jl
bound
or
in
pop
pusha
imul
xchg
bound
call
jge
push
cmpsl
scas
mov
mov
popf
mov
pop
dec
aas
cmpsl
xor
rclb
jbe
push
or
cwtl
movsb
test
mov
insl
pop
pusha
inc
pop
inc
in
pusha
insb
inc
xchg
insb
cmp
fnsetpm(287
cwtl
xorl
xchg
mov
stc
mov
cltd
mov
pop
dec
ds
push
push
pop
sbb
scas
pop
cwtl
pushf
popf
dec
js
imul
out
push
sub
mov
mov
mov
int
inc
push
popa
insl
jnp
xchg
popf
cwtl
nop
mov
je
or
insb
jo
xchg
popf
movsb
adc
aaa
sbb
scas
outsl
sub
inc
dec
cwtl
rclb
inc
push
cltd
and
dec
jge
dec
insl
jae
cld
mov
mov
xchg
subb
dec
inc
dec
push
push
pop
outsl
hlt
cmc
pop
int3
xchg
xchg
or
adcl
mov
movsl
pushf
mov
push
inc
inc
dec
push
nop
outsb
jl
sbb
sahf
cwtl
mov
sbb
xchg
insb
inc
xchg
mov
xchg
sbb
mov
scas
sbb
add
or
outsb
jne
lea
pop
pusha
mov
mov
inc
dec
push
push
pop
lock
jmp
xchg
mov
adcl
idiv
mov
mov
cwtl
ja
pop
pop
dec
inc
out
push
add
cltd
xchg
mov
sub
mov
lcall
dec
aam
mov
into
outsw
jle
out
loop
frndint
rolb
xor
mov
std
jns
mov
inc
inc
dec
xor
jg
mov
dec
imul
xchg
popf
push
mov
movsb
fwait
test
sbb
addb
js
push
icebp
pusha
mov
jl
movsl
clc
mov
lcall
pop
dec
inc
dec
dec
sahf
xor
mov
jno
dec
push
xor
shrb
xor
dec
inc
clc
pop
jbe
inc
dec
push
pop
pop
out
imul
cmpsb
pop
mov
scas
cmpsb
pushf
mov
arpl
inc
dec
push
cmpsb
or
xchg
js
xchg
push
cmp
push
out
jae
push
jp
xchg
mov
stos
jp
into
inc
dec
dec
outsl
scas
jle
cmp
xchg
dec
cmp
outsw
jne
or
and
fs
push
inc
inc
stos
dec
outsl
out
pop
gs
cwtl
popf
cmp
xlat
js
push
xchg
sahf
cmpsb
lods
mov
out
outsb
or
pop
add
je
pusha
add
insl
cmp
push
lock
mov
mov
push
inc
inc
into
push
andl
dec
lcall
push
mov
mov
mov
aam
mov
and
popf
dec
xchg
out
jb
dec
inc
rcrl
jg
cwtl
mov
adc
push
dec
into
and
je
pushf
push
mov
and
fcomip
aam
xchg
movsb
mov
cmpsb
cltd
subl
dec
inc
cmp
test
sbb
or
xchg
fwait
lahf
xor
jg
push
out
into
xchg
scas
mov
jnp
popa
push
out
popa
insb
jp
std
pcmpgtd
xor
lea
mov
out
mov
js
inc
dec
dec
xor
pop
xor
jo
popf
push
mov
or
push
and
outsl
enter
mov
mov
dec
inc
xor
lcall
mov
popf
mov
js
call
nop
cltd
mov
test
sarl
inc
dec
dec
arpl
mov
push
ja
jns
outsl
xchg
insb
movsl
cmpb
lcall
dec
push
andb
sahf
fwait
xchg
popl
mov
push
mov
subl
les
mov
fwait
dec
mov
cwtl
jno
shl
add
mov
subb
inc
test
adc
je
addr16
mov
mov
outsl
dec
xchg
cltd
cmpsb
mov
mov
movsl
xchg
jge
xlat
fwait
inc
fimuls
push
nop
pop
push
sti
loop
cltd
xchg
push
jne
outsb
dec
jb
xchg
call
lods
movsl
mov
push
inc
dec
push
pop
insb
sub
or
dec
xchg
mov
jo
sub
movsl
lods
shrb
push
inc
inc
inc
dec
inc
jns
jle
and
ja
jo
mov
fisttpl
jge
push
sub
call
dec
nop
jb
jno
dec
mov
lods
mov
mov
adc
fisttps
insl
jl
xchg
cwtl
xchg
xchg
inc
lcall
orb
mov
stos
mov
or
inc
inc
ss
ss
ja
cli
cmpsl
mov
cmpsb
lcall
dec
dec
sbb
jno
movsb
xchg
mov
ret
jno
out
mov
mov
movsb
cwtl
mov
pop
dec
inc
dec
inc
dec
add
jb
xorb
pop
pop
xchg
mov
mov
dec
inc
lcall
data16
cmpb
orl
scas
push
lods
ficoml
adcb
dec
xchg
movsb
subl
adc
jp
jb
std
pushl
jle
stos
mov
cmpsl
sahf
lea
fs
dec
dec
rcrl
test
outsb
and
movsb
lods
mov
cmpsb
fwait
clc
pop
dec
dec
ret
movsl
push
mov
nop
das
rclb
mov
xchg
test
xor
jnp
push
dec
dec
dec
mov
sub
lock
je
fists
je
orl
jbe
push
dec
dec
dec
dec
fwait
loopne
shl
push
xchg
xchg
out
dec
jne
in
mov
test
xchg
sub
dec
cwtl
dec
or
ret
ljmp
adc
jne
aam
lds
xchg
cli
lods
xchg
nop
mov
cmc
push
dec
dec
dec
lret
jae
call
and
cmpb
adc
movsb
cltd
mov
dec
out
xor
push
inc
sahf
test
orb
jne
orl
nop
add
push
push
stos
xor
sbbl
sub
fmul
cbtw
js
sbb
mov
jae
push
push
dec
cwtl
pop
enter
sbb
cs
xchg
sbb
mov
xchg
lods
stos
mov
or
xchg
subb
dec
lahf
arpl
imul
scas
mov
xor
add
andb
mov
inc
dec
push
pop
imul
jns
int3
xchg
pop
sub
loopne
xchg
mov
dec
add
test
pop
enter
insw
sub
ljmp
pushf
nop
xchg
pop
mov
fs
loopne
sarl
xchg
hlt
test
notb
lcall
jno
push
dec
cwtl
out
addb
mov
add
xchg
js
into
subb
in
mov
inc
insb
js
rol
inc
loope
mov
jp
mov
cwtl
test
mov
pop
push
dec
or
in
or
cmp
cmp
push
sbb
aad
pop
into
stos
movsl
fwait
xchg
test
pop
dec
inc
cmpsb
dec
pop
gs
jo
test
cltd
hlt
add
outsb
jbe
cwtl
mov
into
lcall
loop
sbb
inc
inc
dec
add
je
mov
aad
test
insb
xor
inc
idiv
push
cltd
mov
pusha
push
dec
inc
inc
dec
mov
pop
push
insl
add
test
cmpsb
test
addr16
lcall
sub
sub
jle
push
mov
and
xchg
popf
movsl
stos
dec
mov
push
std
jle
bound
loopne
jo
or
mov
jg
pop
je
push
mov
cmpsb
jb
clc
xchg
dec
or
mov
test
js
sbb
js
cwtl
sub
test
lahf
xchg
test
push
inc
inc
inc
push
pop
imul
cld
movhps
nop
xchg
jno
aas
sub
mov
mov
pop
dec
inc
aas
aas
inc
dec
pop
orb
js
sarb
loop
fcomps
mov
cwtl
or
push
inc
aas
ds
jge
inc
dec
push
gs
or
cmp
mov
mov
xchg
popa
xlat
incl
inc
inc
inc
dec
push
lret
pushf
lods
scas
lods
cmpsb
sub
pop
cmp
outsl
mov
mov
xlat
add
fwait
xchg
xchg
pop
pop
xor
inc
dec
push
pop
insb
jnp
stos
jb
push
xchg
aaa
pushf
jp
outsb
insl
jo
fdivs
bound
dec
dec
scas
pop
addr16
mov
push
stos
add
js
outsl
jo
ja
dec
jo
mov
in
cwtl
movsb
sbb
cld
mov
dec
dec
push
pop
fs
and
test
movsl
popa
adc
loope
cwtl
pop
mov
fisttps
xchg
xchg
xchg
jb
arpl
pop
pop
arpl
fsubrs
mov
sub
add
mov
or
pop
fs
jl
popa
mov
xchg
lcall
aam
rolb
push
cmp
xor
pop
pushf
jb
ret
or
jne
and
mov
add
cli
jmp
lods
imul
xchg
lods
mov
aam
or
and
dec
xchg
fwait
cmpb
fisubl
lahf
add
insb
sbb
mov
xchg
scas
adc
rorb
jge
mov
das
ret
dec
scas
mov
push
lcall
jp
mov
pushl
xchg
sub
lcall
mov
push
jle
jp
ret
or
xor
out
bound
fs
mov
adc
dec
subl
iret
ret
loop
push
rorl
or
cmpsb
test
add
scas
sbb
loopne
test
add
loopne
fs
dec
xorl
loope
pop
inc
mov
ret
das
xchg
jbe
ret
jnp
mov
mov
inc
xor
add
push
enter
jg
pop
and
sub
and
mov
inc
sub
stos
cmpl
mov
fisttps
jno
seto
leave
fsts
inc
jo
das
mov
lock
inc
je,pn
imul
fdivl
jb
inc
inc
roll
push
insb
ss
cmp
pushf
xchg
enter
pop
insl
xor
out
mov
outsb
les
sahf
ds
mov
bnd
jno
in
sub
out
cmp
repz
jb
jb
push
scas
fsubp
imul
fidivs
fwait
in
fldcw
push
jnp
into
das
jge
jle
data16
addl
rorb
fwait
mov
ret
mov
mov
cmp
push
push
xchg
sbb
fstps
or
ss
xor
mov
mov
push
push
mov
lahf
data16
rorb
enter
fldcw
pop
in
mov
and
mov
mov
mov
movsb
sub
fdivr
or
mov
test
aam
inc
jae
clc
out
sbb
mov
dec
pop
out
int
fistl
push
insl
xor
pop
inc
jb
jbe
and
arpl
fwait
push
adc
int
out
and
sbb
addr16
adc
sub
jno
jns
jne
bound
push
add
adc
xor
add
ds
or
dec
out
pop
xor
arpl
mov
and
das
imul
test
inc
shrb
jbe
pusha
fstpt
cmp
jne
mov
aas
add
das
xlat
test
out
js
push
movsl
lcall
imul
pushf
mov
mov
idivl
mov
int3
shlb
popa
imul
and
mov
mov
mov
ljmp
cmpsl
insl
jg
xor
xlat
not
fbld
rcl
sbb
and
test
mov
cld
enter
addb
mov
jg
mov
mov
into
stos
pop
dec
and
in
mov
mov
shrb
mov
fdivrs
mov
shr
mov
pop
mov
mov
jb
mov
mov
ror
into
mov
fisubs
fdivs
std
ror
rcr
out
out
addr16
mov
fldl
inc
mov
ret
mov
mov
lret
lock
pop
insb
data16
push
xlat
aam
mov
mov
jne
add
cltd
inc
aaa
cmp
jo
lds
ds
sub
lret
stc
rcl
and
shrb
pushaw
push
mov
mov
lahf
xchg
cwtl
push
sti
jl
xorl
adc
and
mov
or
mov
divb
mov
icebp
aam
rolb
out
mov
es
lock
insb
out
mov
fidivrl
add
sub
ds
shll
push
ret
das
rcl
stos
mov
into
imul
mov
shl
mov
mov
jbe
fmul
aad
sar
aam
iret
enter
popf
inc
pop
repnz
cwtl
sahf
jb
sar
iret
in
mov
mov
clc
test
loop
ret
mov
iret
mov
adc
int
or
jno
orb
mov
cli
mov
shr
mov
leave
iret
shrb
adc
xchg
pusha
fcmovne
insl
inc
mov
mov
jge
out
inc
mov
and
and
cmp
sub
aaa
dec
ds
xchg
and
sti
fldt
imul
gs
and
and
insb
xor
fs
push
push
mov
sarb
out
pop
jae
ds
jno
mov
mov
mov
push
push
jns
inc
adc
jb
inc
and
outsb
pop
pusha
push
sbb
mov
jae
test
lahf
jp
xor
jne
adc
xchg
push
adc
mov
je
das
ds
and
or
out
and
mov
aad
shrb
sub
and
inc
and
push
es
fucomip
fimull
and
sbb
and
cmp
mov
insl
imul
add
cmp
mov
dec
pop
and
dec
dec
insb
cmp
add
cmc
sub
dec
outsb
out
popa
loopne
jae
data16
xor
mov
sub
popf
add
adc
inc
popa
neg
and
fisubs
out
add
cmp
or
ja
fs
fxch
popa
insb
push
cmc
pop
dec
sbb
test
lock
outsb
or
inc
xchg
jl
dec
xor
inc
fisttpl
xchg
sbb
add
inc
inc
add
inc
nop
cmp
inc
xor
aaa
xor
inc
xor
xor
inc
inc
xor
jbe
das
dec
push
inc
dec
dec
add
xor
xor
ss
cmp
inc
inc
mov
lock
adc
mov
gs
and
mov
or
mov
pop
pop
add
les
loope
les
add
imul
jmp
fisubl
jnp
cmp
popl
negl
push
push
adc
insl
pusha
cmp
jnp
sbb
roll
and
incl
inc
dec
scas
mov
ds
into
int3
in
jle
jge
cmp
loopne
orb
fldt
jbe
mov
dec
mov
lret
daa
inc
mov
push
sti
push
adc
lret
push
adc
jae
nop
adc
stc
movb
fistpl
nop
adc
adc
inc
push
ret
lret
nop
test
andl
mov
pop
lcall
sbb
sub
fnstcw
dec
or
scas
push
push
mov
jns
out
mov
mov
fwait
insl
ja
mov
addr16
push
xchg
push
and
imulb
and
in
mov
sahf
jl
inc
testb
lcall
mov
pop
das
aaa
add
push
inc
push
pop
out
or
es
dec
pushl
push
pushf
in
add
sbb
fisubs
sbb
mov
insb
mov
incl
das
adc
das
orl
adc
es
sub
and
mov
lds
sub
add
add
add
jle
or
leave
jne
repz
and
rcrl
jo
enter
add
add
or
hlt
push
enter
sub
out
sub
pusha
clc
adc
std
jg
fcoml
and
jle
add
mov
pause
and
pop
add
dec
mov
or
adc
test
adc
add
leave
adc
invd
push
add
jbe
pusha
mov
aaa
test
test
or
mov
mov
addl
iret
enter
and
xor
sbb
add
inc
and
mov
add
jbe
xor
pop
scas
adc
sub
add
aad
mov
bound
adcl
aas
adc
sub
movsb
mov
les
or
mov
push
pop
pop
inc
rcll
cli
push
inc
sub
mov
lock
pop
rolb
mov
add
push
shlb
lds
push
pusha
shl
ss
cmp
push
xchg
push
in
xchg
sbb
inc
aam
jns
negl
push
pop
lock
cmpsl
inc
data16
xor
out
jb
aad
clc
or
bound
std
jbe
ret
and
cmp
scas
sbb
add
jp
push
add
sbb
pop
lahf
dec
js
outsl
xlat
sub
add
int3
ja
sbb
outsl
aaa
adc
push
xlat
lock
xchg
ds
pop
and
adc
imul
pop
add
and
daa
andb
pusha
out
insl
out
nop
or
int
pop
adc
andl
test
rcrb
popf
mov
sbb
adc
iret
jae
add
sbbb
xchg
aaa
add
jo
push
outsl
and
cmp
int3
push
add
enter
shrb
add
call
push
ret
mov
nopl
fdivrs
jbe
cmp
and
cs
iret
shrb
jo
mov
adcb
sbb
sbb
ss
lock
sub
mov
pushf
loopne
and
cmp
jne,pn
popf
out
shrl
lcall
pusha
dec
dec
daa
and
mov
and
dec
aad
push
pushf
cmpb
push
incb
adc
mov
pusha
jle
scas
dec
nop
fidivl
push
mov
pop
inc
sti
dec
sahf
rolb
and
iret
in
and
enter
push
dec
daa
nop
or
ds
inc
jnp
rclb
jg
nop
mov
enter
cmp
call
cmp
push
add
outsl
popf
sub
subb
rcrb
push
jo
outsl
mov
or
cmp
clc
incl
pop
xor
pusha
dec
and
push
inc
jo,pn
pop
leave
jae
cltd
push
pop
js
and
push
sahf
loopne
sub
cmpl
mov
lahf
scas
or
pop
das
add
in
and
loope
mov
aas
mov
orb
rcll
lahf
std
shlb
sub
fbld
sbb
daa
mov
adc
pusha
and
bound
xor
add
add
shlb
add
pop
dec
scas
bound
sub
mov
orl
adc
add
mov
cmpl
test
add
push
cmp
gs
jo
sbb
cmp
pusha
push
and
int
dec
pop
adc
outsl
nop
outsl
xlat
cmp
xchg
cs
faddl
cs
sub
fadds
adc
dec
add
jb
push
and
test
in
push
jno
jo
xchg
xor
jno
orl
add
dec
and
inc
outsl
jae
je
and
sub
xchg
and
jns
test
pop
ja
pop
pusha
rorb
shlb
das
add
cmp
js
jbe
cmp
and
adc
add
sbbl
jne
cmpsl
js
add
mov
jnp
es
or
add
enter
add
nop
add
enter
jae
add
inc
jp
mov
fs
mov
lods
cmp
pop
mov
stos
xchg
add
jge
inc
pop
inc
decl
jne
add
pop
test
mov
scas
orb
xchg
xor
pushl
fwait
cltd
bound
nop
call
push
enter
mov
adc
nop
sbbl
cltd
ljmp
rcrb
daa
sbbb
insl
add
pop
xor
pusha
mov
pop
orb
popf
fistps
or
adc
scas
add
popf
nop
das
dec
dec
push
call
jbe
mov
add
jg
outsl
mov
popf
rorb
adcb
lock
xor
fsubrs
mov
jae
leave
push
mov
je,pn
mov
nop
iret
mov
inc
ror
push
pop
cmp
dec
js
out
mov
dec
ja
add
inc
stos
ds
sbb
mov
lock
push
sbb
dec
cmp
push
adc
push
xor
mov
xchg
int
push
push
cmp
push
jno
mov
cmp
mov
pop
imul
push
jae
aas
mov
imul
mov
testb
not
push
loopne
push
mov
imul
push
into
rorb
mov
aaa
enter
mov
sub
cmp
pusha
in
add
ds
shr
add
out
add
and
outsl
repz
inc
imul
cmpsl
imulb
data16
mov
push
mov
mov
adc
xor
pusha
sub
cs
xchg
in
and
daa
inc
add
clc
data16
ficoms
and
nop
mov
sti
fisubrl
push
jbe
xchg
fiaddl
jg
imulb
dec
sub
push
int3
push
testl
mov
push
lock
xchg
mov
int
sarb
mov
push
push
push
push
xor
and
mov
add
inc
mov
out
fidivrl
dec
add
rolb
add
out
scas
push
lock
add
cs
sbb
push
and
iret
mov
or
and
jecxz
push
inc
add
or
xor
data16
lock
add
sub
push
xchg
mov
cmc
cs
out
cs
das
mov
pop
sbb
sbb
add
xchg
add
push
enter
mov
loopne
adc
add
cmpsb
fstl
push
add
mov
pop
and
sbb
mov
in
in
js
push
inc
addb
mov
inc
loopne
outsl
and
les
aas
loop
xchg
or
cmp
shrb
movsb
xchg
mov
stos
mov
xor
rcrb
adc
add
cwtl
or
push
pusha
adc
inc
mov
test
andb
aad
push
mov
shlb
and
adc
lds
lcall
sbb
movsb
fisttpl
das
add
das
loopne
xchg
outsb
mov
push
pop
mov
subl
pop
pop
aas
mov
sbb
repnz
cltd
inc
cmpsb
and
ret
mov
mov
fs
call
test
or
test
dec
shl
mov
sbbb
lock
lahf
cmpsl
nop
or
in
nop
jecxz
sbb
push
aad
push
rolb
stc
jl
addr16
orb
xchg
push
xor
push
mov
sbb
mov
xor
adc
add
add
lock
and
cmpb
add
cmp
lahf
push
sbb
sbb
ja
sub
scas
add
push
pop
sub
adc
adc
push
mov
push
das
jo
nop
pop
sbb
add
ljmp
add
in
adcb
xchg
add
cmp
call
sub
lcall
push
movsb
mov
stos
or
dec
insb
lds
or
or
mov
adc
fisttps
xchg
andnps
xor
sbb
sbb
aas
mov
scas
add
pop
iret
add
jg
fs
push
or
arpl
inc
iret
xchg
cmc
jo
js
lock
pop
sahf
or
push
negl
xor
psrld
das
pusha
imul
mov
push
loopne
aam
rcrl
ror
ja
orb
dec
ja
sti
add
add
pop
cs
push
mov
and
outsb
cld
ds
sbb
pusha
stos
out
rolb
iret
add
ss
in
ja
add
xchg
mov
jns
int3
mov
adc
push
push
dec
outsl
shlb
pop
add
scas
dec
add
leave
mov
popa
pop
popa
es
pop
inc
inc
lock
inc
pushf
mov
cs
mov
sub
dec
pop
dec
dec
cs
jae
iret
xchg
push
push
push
or
imul
out
ds
mov
flds
pop
out
push
das
inc
inc
daa
iret
and
jo
daa
iret
and
and
rcrb
xchg
addr16
daa
add
push
xchg
xchg
out
xor
out
xchg
out
pop
shlb
pushf
xchg
pusha
nop
aas
adc
mov
loopne
popl
push
aas
lock
sbbb
cltd
cli
jg
add
add
aas
aas
stos
push
popl
push
fdiv
xor
decl
push
ffreep
inc
cmpsl
cmp
jbe
cmp
loopne
rcl
mov
call
pop
cmp
popf
out
cmpsl
dec
aaa
fnstcw
cmpsl
push
lret
mov
inc
mov
in
sahf
cmp
movsb
aas
mov
fbld
mov
jo
dec
fimull
jnp
scas
inc
loope
test
jmp
add
arpl
arpl
mov
pop
push
fs
sbb
gs
pop
fwait
inc
push
shlb
pop
in
pop
or
pop
mov
pop
lahf
adc
das
fldt
cmp
jo
pop
out
jae
dec
mov
bound
mov
dec
push
movsl
or
pusha
addr16
insb
add
nop
pop
sbb
imul
outsl
and
aas
cmpb
pop
verr
loopne
add
mov
mov
loopne
das
pusha
pop
add
ret
jb
pop
mov
push
fdivrl
add
dec
js
jge
shlb
test
and
loopne
push
jg
js
in
inc
dec
andb
or
jp
cmpsl
or
nop
jp
jp
inc
xchg
adc
add
repnz
iret
mov
call
mov
aam
sbbb
iret
adc
mov
mov
and
shrb
dec
cs
jno
sbb
and
xchg
sub
mov
or
inc
stos
or
and
push
jb
mov
nop
cmp
mov
cmc
dec
push
inc
push
adcb
adc
dec
rclb
or
adc
xor
add
inc
adc
xchg
je
or
add
sbb
iret
repz
and
xor
and
leave
repz
adc
or
leave
rcll
cmp
cmp
sub
inc
push
nopl
and
jns
cmp
xor
out
sahf
out
pop
daa
cs
cmp
ss
aaa
ds
mov
jns
jg
or
pop
push
adc
aas
iret
repz
std
push
stc
icebp
loope
sbbl
stos
cltd
out
loopne
cmp
das
clc
popl
pop
lahf
push
inc
dec
fmuls
mov
and
fwait
std
idiv
jae
push
xor
sbb
push
bound
mov
neg
data16
pop
push
sbb
push
and
mov
int
sub
or
ss
xorb
xor
daa
aaa
sbb
or
push
sbb
xor
outsb
push
ss
add
ljmp
orb
dec
mov
xor
aas
lret
xchg
scas
out
aas
stos
adc
incl
shl
aas
aas
cmp
jmp
jnp
push
loope
pop
stos
mov
test
shlb
or
cmp
add
xor
bswap
aas
incl
dec
mov
jl
inc
mov
dec
mov
shrb
sbb
and
adc
das
out
pop
fbld
insb
pushf
lcall
xchg
push
scas
outsl
lahf
pop
or
cmp
add
xor
or
cmp
pop
aaa
testl
pushl
mov
ja
call
adc
sub
sbb
daa
out
xlat
test
cwtl
pop
movsb
fs
call
fwait
pop
cmpsl
addr16
push
add
xor
push
into
incb
shll
or
inc
mov
mov
jle
inc
mov
lea
jge
loop
shrb
out
push
fisubs
loope
shrl
bound
pop
push
popa
xchg
push
lods
insl
popf
pop
or
into
testb
cmp
add
dec
mov
jbe
dec
mov
jne
ljmp
sub
push
cld
lcall
fldenv
push
pop
cmpsb
xchg
push
test
gs
push
popf
ljmp
loope
push
aam
mov
jne
daa
inc
pop
sub
repz
aas
mov
scas
or
cmpb
mov
or
push
das
data16
jns
and
rclb
jo
and
imul
add
out
rclb
shlb
out
clc
push
mov
jg
push
add
das
push
pop
add
mov
mov
loopne
pushl
push
add
or
int
mov
pop
add
dec
hlt
pop
cmp
stos
lahf
pop
dec
das
jo
pop
mov
xchg
outsl
gs
std
lahf
sub
das
cmp
sub
call
shl
aas
out
lea
pop
pop
arpl
mov
arpl
popf
fwait
das
pusha
xchg
lds
mov
or
add
pop
pop
and
mov
pop
sti
lock
inc
xor
and
bound
inc
pop
mov
add
call
mov
outsl
add
jmp
push
fidivrs
mov
lock
inc
xchg
add
cmp
cmpsl
dec
push
daa
outsb
add
nop
out
pusha
sbb
pop
xchg
clc
jg
rolb
xchg
mov
mov
inc
push
adc
xor
pop
add
orl
inc
insb
mov
pop
add
idivb
sbb
add
std
rclb
and
shlb
sti
icebp
adc
pop
outsl
call
mov
shrb
jle
iret
push
mov
inc
dec
outsl
je
jo
jb
gs
push
addb
add
cs
inc
pop
fwait
mov
aam
cmp
insl
mov
pushf
subl
cs
or
movsb
fldcw
popf
mov
in
inc
enter
xchg
push
push
orb
xor
sbb
mov
push
mov
xlat
loopne
mov
xchg
xchg
xor
sub
mov
outsb
xchg
sahf
push
jbe
dec
addl
xlat
push
and
add
cli
add
out
dec
mov
push
cmp
repnz
sub
ret
iret
repz
xor
inc
pop
mov
xchg
cmp
pop
into
inc
fs
fimuls
fistps
xor
in
mov
add
loope
jne
aas
push
popa
cmp
push
outsb
ret
dec
inc
insb
sub
lock
or
mov
and
xor
dec
mov
in
push
aas
fwait
into
pop
sub
xor
lahf
adcl
add
mov
adc
in
flds
push
enter
push
and
push
nop
xchg
xor
adc
jo
hlt
adc
shlb
pop
aaa
push
shrb
hlt
sbb
in
inc
and
sub
iret
repz
xor
outsl
les
iret
sarl
lods
xchg
lock
icebp
cmp
icebp
mov
jns
lds
repz
cmpsb
cmpb
imul
mov
dec
inc
repnz
divb
out
mov
push
test
xchg
ret
mov
clc
iret
js
shll
push
loope
mov
add
push
sub
shll
push
add
out
in
out
xchg
dec
test
cld
shrb
out
ss
xor
orl
inc
push
mov
popa
jp
mov
stos
push
mov
call
shrb
mov
clc
scas
es
cs
popf
mov
fistl
add
sahf
xor
addb
imul
add
mov
jg
mov
cltd
push
popf
cwtl
push
sub
mov
pop
shl
lahf
push
test
loopne
jno
xchg
dec
in
insl
add
outsl
mov
push
and
outsb
jae
loop
popw
sbb
loop
push
insb
addr16
mov
push
cmp
push
subps
in
inc
lahf
push
outsb
fs
pusha
and
ss
adc
inc
inc
push
jo
cmp
sbb
xor
add
xor
and
enter
scas
outsb
imul
sub
mov
movq
push
aas
ja
and
cmp
out
sbb
push
mov
adc
pop
mov
mov
orb
aas
dec
lods
into
add
imul
sbb
jns
or
fists
pop
sarb
sbb
mov
inc
loopne
xor
pushf
xchg
add
sarb
and
iret
mov
sar
push
scas
loopne
ret
data16
insb
fs
xorb
dec
xor
xor
and
mov
mov
jae
and
negl
and
inc
jb
cld
out
cltd
shlb
sbb
insl
fnsave
add
scas
gs
adc
pop
add
into
adc
outsl
inc
popa
mov
lds
das
dec
adc
adc
push
outsl
imul
or
inc
pop
mov
mov
adc
inc
push
add
arpl
insb
jb
pop
inc
dec
addr16
pushf
inc
or
xchg
mov
push
repnz
mov
mov
mov
pop
inc
mov
nop
cmp
add
in
dec
cmp
mov
inc
add
cmp
test
jae
js
push
add
outsl
dec
dec
iret
cmp
out
dec
jbe
mov
ss
push
aaa
xor
shr
dec
dec
jle
test
iret
mov
inc
jb
jns
out
js
dec
gs
movq
fmuls
pop
push
pusha
aas
mov
bound
outsl
test
and
test
xchg
lds
pop
cmpsb
nop
out
imul
movsb
and
and
test
clc
pusha
push
inc
mov
fcomip
sub
pop
or
push
pop
xchg
xchg
push
add
lahf
sbbl
cwtl
xchg
jge
sbb
adc
push
xlat
pusha
adc
test
adc
pop
es
pop
ret
adc
pop
int
add
lahf
add
addb
sarb
push
cltd
iret
xchg
cmp
movsb
mov
sbbl
pop
pop
dec
sahf
sub
jmp
clc
pop
sbb
das
call
pop
int
inc
jge
jle
push
mov
jl
mov
fsts
inc
push
push
add
addl
add
insl
or
push
aaa
cmpsl
and
jae
cmp
fsubs
outsb
cmpsl
notb
push
jae
out
outsl
push
dec
repnz
testl
int
sbb
mull
into
inc
add
and
stos
std
add
popa
sti
pop
jle
stos
orb
xor
pop
pushf
dec
popf
out
enter
rol
cmc
movb
inc
incb
dec
loope
jle
add
ret
fldl
es
repz
pop
sahf
xchg
or
pop
das
pop
add
jg
gs
popl
push
popa
addr16
xchg
jbe
xchg
ja
call
sub
push
pop
xor
inc
inc
pop
pop
jmp
adc
xchg
inc
scas
pop
stc
pop
pop
fldl
rcl
imulb
pop
jo
imul
cmp
mov
mov
inc
pop
sub
or
mov
inc
das
int3
pop
push
add
icebp
sub
inc
lock
push
xor
stos
js
jb
push
test
outsl
sub
iret
inc
lock
add
scas
inc
pop
push
in
je
clc
notb
stos
pop
cmp
js
mov
mov
cmc
sub
arpl
cwtl
push
rcrl
mov
aam
das
mov
ja
adcb
push
add
xchg
loope
jb
icebp
push
cwtl
mov
cwtl
mov
sub
test
dec
fcmovnbe
inc
in
jle
push
sbb
scas
sub
mov
rcrl
iret
or
sub
aas
in
xchg
dec
lock
insl
fs
and
into
push
verw
ss
dec
add
adc
jo
xor
sub
scas
mov
inc
daa
or
cmp
pop
outsl
fsubrs
outsb
cwtl
ja
outsb
nop
push
outsl
inc
xor
clc
pop
imul
cmpsb
fadds
loop
sbb
rorb
push
lahf
into
push
loopne
push
dec
outsb
test
cs
pushf
dec
imul
dec
add
pop
movsl
fidivrl
cmp
movsb
iret
jge
fstpl
clc
push
orb
aas
aam
mov
rorb
push
pushf
imul
inc
dec
test
loopne,pn
jae
frstor
das
scas
addr16
aas
add
mov
test
pop
dec
fs
call
iret
xchg
sub
xor
shll
push
lds
jmp
cltd
mov
sarl
dec
popa
jo
out
pop
test
iret
test
shrb
imul
stos
das
push
push
imul
stos
ret
iret
mov
add
into
xchg
cmp
mov
ljmp
jge
xchg
outsb
in
jp
sbb
enter
std
adc
cmp
je
push
jo
pop
cmp
pop
mov
adc
aam
and
add
push
in
test
imul
pop
negl
outsl
adc
out
xor
or
inc
popf
clc
lock
jmp
mov
xchg
addb
leave
or
jno
aaa
js
sbb
and
dec
dec
fildll
dec
dec
add
xchg
fdivs
mov
inc
or
add
push
lods
adc
stos
pminub
jbe
and
addr16
mov
daa
fmul
mov
inc
lret
push
pop
cmp
pop
jne
shrb
mov
push
push
aad
xchg
cmp
fimull
insb
push
fs
jae
push
push
add
data16
pop
mov
sub
jge
sub
decb
ss
pop
add
inc
jo
mov
mov
pop
rorb
xor
ret
sbb
andb
ds
outsb
cmp
std
jmp
filds
add
dec
and
jns
add
fs
sub
sti
or
push
dec
push
inc
inc
adc
gs
loopne
das
mov
pop
dec
pop
ss
push
outsl
adc
jne
jne
mov
jne
orb
incl
rolb
jo
inc
fdivl
sti
movsl
loopne
xor
jb
push
inc
cmp
out
sbb
into
mov
jae
xchg
popl
ja
ja
cmp
push
jne
xor
aas
adc
jae
push
adc
mov
push
jne
and
cmp
pushf
insl
jbe
ret
orl
sbb
dec
imul
dec
in
mov
jg
decl
inc
dec
pop
dec
inc
inc
push
mov
inc
inc
push
inc
inc
ss
add
and
ret
push
das
ret
movsl
add
andb
mov
roll
jle
push
push
mov
or
sbb
sbb
jbe
dec
inc
and
push
xor
cmp
sub
sub
sub
push
and
js
push
es
imul
ljmp
mov
shll
jae
popa
arpl
out
push
ja
jno
xor
push
pop
mov
add
jo
and
push
data16
mov
sub
arpl
insb
push
mov
xor
add
out
das
mov
mov
mov
jo
mov
imul
in
arpl
js
or
decb
stc
lock
in
insl
jne
rcll
mov
pop
das
mov
lret
sbbb
ret
es
inc
jb
add
mov
daa
mov
insb
les
cmp
push
xchg
pop
push
cmp
xor
jne
jae
push
loopne
inc
movsl
xor
fdivr
xchg
inc
add
jne
dec
sbb
or
decl
rclb
adc
sub
and
adc
pop
cmp
popf
pop
sub
push
sub
push
es
fcompl
or
lea
mov
add
push
push
mov
stos
inc
xchg
shrb
sbb
xchg
sub
insb
inc
xchg
jmp
sub
add
xor
mov
fimull
leave
ds
out
jg
ud1
leave
cwtl
rolb
push
pop
jns
sti
pop
insb
out
mov
insw
outsl
fs
dec
inc
iret
lock
xor
jmp
idivb
insb
fs
cmp
aas
sub
clc
and
bound
mov
xor
scas
cmp
daa
popa
sub
insb
imul
insl
nopl
dec
loopew
jae
xor
cvttps2pi
loopne
into
jbe
xor
jo
cs
jbe
add
pop
in
inc
cmp
add
adc
mov
int
fisubrs
add
outsl
arpl
insb
add
dec
add
xchg
cmp
das
sahf
mov
insb
outsl
xor
push
push
pop
call
in
push
add
pop
add
push
mov
and
mov
sub
push
jg
scas
pop
in
add
in
push
push
pop
push
and
add
pusha
push
cmp
js
or
into
inc
xor
add
sbb
shlb
mov
stos
mov
sbb
outsb
subb
loopne
adc
ja
pop
mov
or
popa
xlat
push
pushf
push
dec
outsl
cmp
push
ss
push
sbb
rolb
outsb
jl
pusha
test
mov
and
pop
orb
mov
or
mov
xchg
movsb
mov
sbb
ret
pop
mov
pop
out
je
fcoms
jne
inc
outsb
and
pop
or
clc
inc
and
pop
mov
dec
faddl
pop
inc
dec
dec
push
xor
push
cmpsb
fcomp
les
fmuls
dec
dec
jbe
push
das
andb
jg
dec
sbb
scas
sub
clc
sub
adc
lcall
pop
or
and
daa
das
in
pop
sbb
and
clc
add
movsb
jns
adc
cmp
repz
add
outsb
push
enter
iret
mov
movups
das
mov
sub
pop
scas
push
fucomip
push
xor
sbbb
test
lahf
pop
mov
addr16
xchg
daa
add
or
imul
mov
roll
loopne
and
stos
loopne
fdivrs
fdivrl
xchg
rcrb
cwtl
loopne
lahf
inc
cs
call
call
xchg
daa
xchg
daa
adc
sub
loope
nop
or
xchg
sbb
mov
adc
pusha
adc
push
iret
lock
add
fsub
or
xchg
das
fsubr
sbb
push
mov
push
and
in
ret
leave
mov
subb
loopne
xchg
scas
push
enter
sbb
xor
mov
xchg
jecxz
inc
daa
adc
add
jecxz
scas
pop
and
sub
jmp
jb
fcoms
loopne
dec
adc
jo
xor
mov
pop
xor
sbb
lahf
pusha
in
fdivs
xchg
js
ja
sahf
mov
cwtl
adc
dec
mov
leave
or
in
or
or
daa
shr
frstor
leave
inc
in
scas
xchg
jo
das
or
call
inc
lock
mov
cwtl
in
enter
push
xchg
daa
sub
add
out
jb
loope
sub
inc
push
pop
push
out
mov
push
push
mov
test
add
scas
jo
in
repnz
sbb
xchg
dec
cs
xor
mov
mov
mov
jmp
lahf
push
aad
mov
fsubs
enter
adc
mov
iret
sbb
cs
mov
sub
loopne
push
jne
mov
in
stos
sarb
pop
cs
mov
lods
pop
enter
shlb
and
pop
iret
sbb
fsubr
mov
xor
xchg
pop
lahf
or
in
mov
js
pop
mov
sub
xchg
daa
push
ret
mov
mov
mov
cmpsl
outsl
and
xchg
jmp
xor
loopne
scas
pop
ljmp
xchg
pusha
sbb
test
nop
pop
mov
rcrb
mov
jmp
xor
sbb
es
in
add
jmp
mov
mov
js
xchg
nop
daa
js
add
or
outsb
mov
scas
xchg
call
or
fldt
sub
xchg
daa
mov
and
cmpsl
add
test
inc
add
mov
outsl
enter
outsl
fldl
inc
sbb
lock
adc
in
xchg
xor
push
repnz
mov
inc
sbb
and
daa
pop
add
mov
cwtl
daa
inc
dec
enter
pop
in
outsl
das
mov
fcomps
sbb
adc
out
out
push
mov
daa
js
pushl
out
lahf
pop
add
outsb
xchg
mov
xchg
enter
daa
loopne
out
popa
mov
push
out
xchg
daa
jb
dec
mov
lahf
push
push
xchg
and
iret
sub
out
mov
xchg
shlb
inc
sbb
out
mov
xchg
daa
nop
pop
push
js
sbb
dec
lock
mov
pusha
mov
jbe,pn
mov
pop
test
add
push
repnz
mov
aas
lock
inc
lock
xchg
daa
pusha
sbb
outsb
mov
cmp
pop
daa
ja
ja
mov
daa
mov
test
in
add
xorb
adc
adc
clc
or
shlb
loopne
rcrb
push
idivl
pop
ss
mov
pop
aas
jle
das
jmp
or
into
cmp
inc
mov
and
nop
or
call
in
jnp
xchg
repz
or
fistl
scas
dec
push
pop
dec
outsb
jb
test
incl
pop
mov
pop
orb
inc
cs
mov
sbb
nop
dec
dec
and
cmp
add
xchg
dec
iret
in
jmp
inc
daa
pop
add
mov
sub
pop
jb
dec
leave
enter
add
and
leave
adc
cmc
xlat
popf
out
dec
mov
push
iret
lods
shll
push
xchg
popl
outsb
pop
pop
and
lahf
jmp
imulb
ss
test
jns
dec
mov
push
fsub
in
in
inc
dec
rcpps
xchg
out
pushf
outsl
pop
cmp
add
mov
mov
xchg
negb
ja
pop
push
dec
rorb
sub
fcmove
mov
iret
nop
js
cmp
loopne
or
add
repz
fsubl
scas
or
push
push
add
leave
leave
leave
sub
inc
dec
icebp
jbe
mov
push
sub
pop
pop
cwtl
pop
xor
dec
das
pop
mov
sub
mov
leave
jae
popf
fsubs
rcr
cmp
dec
sbb
mov
cmp
inc
dec
cs
inc
pop
and
pusha
dec
movsl
xor
orb
cwtl
dec
mov
fwait
loopne
mov
mov
mov
loopne
loopne
cmpsb
shl
add
jns
ja
cmp
add
cmp
push
cmp
in
sbb
stc
jo
call
stc
or
add
stc
nop
cmp
dec
mov
cli
scas
nop
dec
cmpsb
shlb
lock
nop
dec
pop
adc
enter
xorb
push
enter
shlb
push
enter
rcrb
dec
mov
jbe
xor
push
mov
mov
sarb
decl
dec
sti
pop
or
adc
sbb
inc
push
outsb
pop
sarb
push
fistps
cmp
dec
push
jg
aas
fisttpl
cld
outsl
pop
in
mov
js
cmp
dec
movsb
leave
adc
xchg
sub
call
fsubrs
or
sub
pop
or
jns
fcomps
dec
and
inc
sahf
pop
or
dec
pop
ja
mov
jbe
cmp
nop
cwtl
scas
cmp
cmp
ret
cmp
repz
add
ds
repz
cli
or
inc
or
jns
out
or
xor
inc
or
sahf
out
punpckhdq
js
out
sahf
out
adc
sahf
adc
adc
sahf
out
pop
ficompl
call
out
sbb
sbb
iret
repz
sbb
sbb
dec
push
cmp
test
cmp
out
push
dec
vmread
fmuls
jbe
nop
dec
and
jmp
enter
inc
mov
sbb
jb
inc
loop
lock
incb
xchg
and
inc
sbb
inc
sbb
jb
ss
inc
inc
push
inc
pusha
inc
xchg
and
outsb
inc
jl
mov
jb
enter
inc
mov
ret
inc
mov
inc
fiadds
inc
cli
jns
enter
inc
push
push
sbb
jns
out
xor
sbb
dec
push
pop
pop
push
lds
xchg
or
inc
add
jg
setge
cmp
mov
mov
pop
rorb
lea
filds
sahf
add
xchg
push
add
jnp
jle
mov
out
out
pop
fsubrs
incl
lock
lock
xor
inc
fistps
fdivrs
mov
jo
xor
sub
cwtl
popf
push
xchg
dec
addb
bound
sub
push
lock
out
lods
xor
sbb
adc
and
or
add
out
scas
nop
fdivs
mov
push
jb
add
cmc
pop
ja
inc
pushw
das
outsb
por
and
push
inc
add
push
pop
mov
add
jns
jns
mov
inc
lcall
sahf
out
push
lods
movd
pop
mov
adc
ja
out
adc
adc
sbb
dec
rolb
fisttps
test
pusha
dec
rcr
add
inc
cmp
xchg
inc
adc
leave
jae
add
inc
outsl
dec
dec
scas
fmuls
orb
das
sahf
pop
inc
mov
arpl
cmp
mov
hlt
mov
iret
lock
pushl
adc
sbb
js
cmp
dec
cs
cmp
inc
dec
xor
sub
jb
jae
push
add
popf
out
movsl
push
mov
cmp
repz
or
or
lret
adc
lock
invd
clc
cs
pop
xchg
cmp
call
out
outsl
cmp
add
mov
outsl
pop
jp
cmp
mov
jae
mov
test
mov
outsl
enter
or
dec
mov
loope
pop
dec
lcall
cmp
adc
pop
in
mov
in
mov
bound
xchg
dec
cwtl
scas
nop
imul
scas
rol
daa
push
insb
adc
ret
fldt
das
or
and
cmp
das
pop
dec
sub
jb
test
or
adc
cwtl
loopne
lods
loop
dec
decl
or
pop
or
jg
sub
pop
fmul
mov
out
add
call
mov
add
dec
pop
cmp
cmpsl
out
mov
push
push
jo
pushf
add
repz
je
mov
or
into
jmp
in
add
ss
push
out
dec
push
adc
push
dec
loopne
leave
sub
lahf
andl
jecxz
mov
test
push
loopne
xor
push
das
js
outsb
dec
out
fldl
cmpsl
adc
add
sub
leave
scas
add
sub
rorb
cvtdq2ps
cmp
pop
and
or
xor
mov
jbe
ror
jg
dec
fs
push
enter
mov
in
sub
fmul
aam
xchg
inc
xchg
or
sbb
dec
cltd
sbb
xor
bound
and
sahf
daa
out
mov
mov
pop
push
add
les
das
test
sub
mov
in
pop
rorb
call
lock
clc
fisttps
or
push
in
je
sub
bound
sub
pop
inc
dec
out
test
incl
test
mov
xchg
jb
sahf
pushf
sahf
test
push
leave
sub
or
rorb
aaa
add
outsl
pop
add
push
push
push
pop
xorb
test
clc
mov
loopne
pminsw
mov
mov
nop
mov
ds
dec
adc
add
or
adc
dec
mov
pusha
das
enter
xchg
sbb
jo
xchg
out
fdiv
sub
mov
pushf
pop
mov
das
pusha
outsl
rcr
scas
fcoms
outsl
add
mov
push
mov
sub
inc
imul
cmovs
enter
jns
dec
mov
mov
nop
dec
adcb
push
mov
shlb
lock
test
clc
adc
adc
cmpsl
in
pop
inc
adc
push
push
jb
cmp
push
pop
adc
in
fsubrs
add
mov
inc
pop
shl
insb
mov
dec
sub
xor
ja
scas
push
filds
das
xchg
push
pushf
push
cmpsl
push
mov
das
das
das
das
mov
push
ficoms
das
das
das
jmp
push
or
das
das
das
adc
push
ss
das
das
das
das
inc
push
dec
push
push
push
bound
das
das
das
insl
push
js
adcl
repz
jmp
push
fists
cmp
repz
sbb
cmp
repz
int
fsubs
iret
repz
jecxz
out
and
and
out
ds
and
sahf
out
daa
and
jns
out
sub
push
sahf
out
sahf
sub
sub
sahf
out
das
jge
mov
nop
iret
dec
inc
mov
test
dec
xor
scas
push
das
push
outsl
ret
push
jl
and
push
fists
push
iret
mov
push
pop
push
or
or
or
repz
repz
or
or
iret
push
jns
xchg
xchg
cmp
repz
mov
cmp
repz
repz
push
jmp
add
call
jb
enter
push
xor
push
lds
sbb
push
lcall
pusha
dec
or
sbbb
mov
mov
aas
stos
mov
decl
dec
scas
pop
outsl
rcr
pop
enter
cwtl
lock
shrb
xchg
push
adc
dec
xor
xchg
xor
dec
push
xchg
pop
and
xchg
pop
and
pop
mov
rcrb
lock
or
adc
addr16
pop
scas
es
xor
enter
pop
inc
pop
push
pop
inc
mov
pop
pop
push
pop
xchg
jo
xchg
pop
lahf
pop
ja
xchg
pop
stos
pop
push
icebp
rorb
lret
outsl
loope
in
iret
imul
iret
repz
pop
prefetchw
add
cmp
mov
add
pop
cmp
xor
dec
mov
push
das
push
sub
jp
pop
decl
insl
dec
idivl
shrb
pop
add
loopne
add
mov
sub
call
adc
enter
sbb
xchg
fwait
pop
into
cmp
cmovnp
jns
push
add
insb
das
ja
test
in
sbb
filds
test
mov
xor
mov
bound
decl
mov
clc
pop
and
and
sbb
and
xor
pushf
pop
push
pop
add
adc
cs
cmp
enter
mov
pop
mov
xlat
push
dec
push
lock
xor
pop
pop
push
pop
bound
pop
decl
push
aas
pop
pop
lock
jbe
jo
xchg
pushf
dec
mov
scas
nop
fwait
aas
cmpsb
pop
stos
test
mov
jg
xchg
or
aas
xor
adc
pop
dec
mov
and
sbb
push
pop
or
and
pop
aaa
dec
cmpsb
pop
jg
outsl
jnp
push
jecxz
mov
push
repz
iret
in
or
mov
in
stos
ljmp
dec
mov
loope
xchg
adcb
pop
pop
fisubs
inc
seto
aaa
rorl
aas
add
mov
sub
inc
pop
shl
mov
pop
pop
outsl
push
cmp
test
add
cwtl
scas
xchg
sub
mov
enter
inc
ds
jb
iret
in
outsb
lds
and
and
pop
or
xchg
pushf
fiaddl
out
pop
leave
ficoms
leave
iret
sub
pop
insl
stos
loope
pop
scas
mov
xchg
mov
rcrl
inc
push
leave
lret
lock
and
pop
bound
movsl
sbb
inc
push
pop
push
into
fwait
mul
push
aas
int3
aas
fcompl
push
jns
or
jmp
pusha
pop
mov
cmp
mov
and
pop
xor
dec
loopne
xor
push
movsb
lcall
cltd
in
and
or
clc
xor
and
mov
mov
test
lcall
fwait
jmp
out
rcrl
ficomps
add
adc
and
pusha
pusha
pusha
ljmp
push
sub
xor
pop
mov
adc
and
dec
test
push
enter
fistl
lcall
imul
iret
mov
xlat
dec
loopne
pusha
jmp
add
je
mov
movaps
popa
scas
pop
and
mov
out
mov
xor
pop
outsl
es
out
adc
dec
mov
rcll
xchg
adc
leave
mov
and
pop
and
sbb
add
and
jmp
loopne
cmp
xchg
dec
es
mov
xchg
paddsb
jb
cmp
lds
fsubs
or
and
bound
bound
daa
inc
xadd
inc
add
rorb
pop
ds
xchg
sbb
lret
fistpll
das
dec
call
lret
lret
lret
lret
popa
bound
jge
mov
lret
lret
lret
cltd
bound
lret
lret
lret
lret
shll
in
sti
enter
or
arpl
iret
repz
pop
adc
imul
pop
push
or
xchg
sub
xchg
push
arpl
pop
leave
dec
popf
xchg
ror
arpl
lock
call
adc
sub
scas
frstor
push
cmovo
mov
mov
lds
test
pop
sub
jbe
iret
cwtl
lcall
and
scas
mov
fcom
sub
sbbb
adcb
femms
gs
sbb
sub
xchg
pop
cmp
in
xchg
push
pop
test
pop
rcll
leave
adc
ficoml
mov
pop
push
xor
repz
fisttpl
psllw
xor
data16
addb
adc
data16
into
inc
inc
data16
dec
pop
in
jns
or
and
in
mov
fucomi
mov
pushw
lds
sub
dec
pop
or
and
mov
out
or
ja
nop
clc
nop
sets
pop
cmpxchg
mov
adc
mov
js
lock
lds
pop
mov
cmp
dec
xor
test
dec
and
test
jo
jns
push
js
push
imul
mov
mov
loope
adc
out
adc
mov
mov
rcr
or
imul
and
push
loopne
inc
imul
sbb
imul
orb
loopne
imul
bound
mov
outsl
lock
sti
mov
sbb
scas
nop
dec
mov
nop
dec
shlb
daa
push
enter
mov
mov
daa
push
enter
repz
cmovne
and
and
in
mov
jg
out
mov
aas
add
repz
jo
adc
insl
lods
stos
xor
jo
xchg
xor
insb
leave
sub
xor
imul
cmp
pop
and
scas
clc
inc
pop
mov
xor
dec
fs
cwtl
inc
cs
inc
cs
dec
and
adc
cmp
xchg
pop
and
pusha
pop
and
insb
dec
scas
nop
dec
mov
enter
fsubrs
xor
inc
das
mov
pushf
or
sbb
fst
fidivrl
adc
mov
das
es
pop
mov
sarb
insb
or
jmp
pushl
iret
pop
mov
dec
in
and
clc
popf
mov
push
or
push
movsl
push
jg
ss
frstor
fsubr
nop
nop
pop
and
aaa
or
in
add
xor
inc
mov
aaa
leave
out
es
mov
leave
adc
and
test
loopne
xchg
cmp
adc
cmp
dec
cmp
lcall
data16
scas
shrb
fcoml
mov
xor
enter
in
dec
lock
jb
adc
sbb
jo
adc
push
cwtl
nop
lods
dec
scas
nop
dec
mov
or
aam
fsubrl
and
test
mov
dec
inc
or
jo
pop
stos
decl
test
jg
cwtl
leave
adc
sar
fcmove
adc
scas
in
adc
sbb
mov
mov
cmp
add
inc
enter
cmp
mov
or
enter
les
pushf
scas
daa
push
lock
or
dec
in
mov
mov
dec
pop
nop
imul
outsl
pop
enter
scas
test
sub
mov
test
and
mov
sub
jo
cwtl
adc
out
rorb
pushf
loopne
jo
sbb
fcomps
and
and
lods
adc
cmp
ds
xor
pop
mov
cmp
jo
outsl
pop
cs
insb
rolb
inc
sub
in
mov
aas
and
loopne
cmp
cmp
test
push
xchg
dec
and
nop
inc
cs
mov
loopne
dec
dec
and
or
jno
dec
scas
nop
xor
pop
add
push
scas
sub
incl
pop
cltd
bound
jno
add
mov
pop
mov
dec
mov
clc
out
pop
xor
insl
incl
jb
pop
jo
add
cwtl
decl
mov
mov
mov
cmp
jmp
inc
enter
inc
out
sbb
cmpsl
push
xor
out
jb
jns
inc
or
pop
jb
inc
dec
es
mov
adc
das
data16
inc
dec
clc
adc
cmp
add
push
incl
adc
dec
pop
fmul
adc
inc
or
pop
and
imul
dec
push
pusha
add
dec
xchg
insb
cmpsl
daa
mov
inc
sbb
dec
ss
pop
and
xchg
dec
insb
pop
clc
imul
pushf
dec
lcall
sbb
sarl
int
pop
subb
daa
outsb
mov
jae
jbe
dec
js
mov
sahf
ja
mov
in
out
test
push
adc
loopne
xlat
lahf
into
gs
inc
mov
aaa
add
into
pop
test
mov
sub
sbb
mov
push
jnp
loopne
int3
inc
outsl
jne
lret
cmpb
push
add
push
leave
out
jecxz
dec
jne
inc
cmp
lcall
sahf
add
add
es
outsl
insb
adc
daa
add
or
shlw
pop
add
insb
scas
pop
or
fnstsw
adc
xor
and
pop
inc
nop
add
add
add
xchg
dec
fists
insl
insb
loopne
push
outsb
dec
push
mov
mov
inc
insb
add
push
or
xor
push
mov
dec
pop
fiaddl
add
out
loopne
in
test
and
clc
sub
fcomps
scas
inc
js
or
mov
inc
outsb
ss
or
int3
pop
pop
repnz
int
pop
add
mov
xor
in
inc
cltd
add
jo
inc
movsl
mov
sub
mov
push
gs
lahf
sbb
xor
xor
pop
int3
lock
add
arpl
divb
imul
and
jle
stos
add
cmp
adc
push
inc
mov
das
mov
pop
nop
push
ret
or
les
jge
cli
aas
andl
dec
add
push
pop
aad
pop
cwtl
mov
sub
mov
pop
mov
mov
xchg
gs
movsb
loop
jbe
jmp
mov
mov
push
adc
push
sbb
fnsave
mov
dec
push
imul
mov
dec
dec
in
lea
sbb
or
movb
das
test
and
push
jae
sbb
sbb
inc
outsl
inc
int3
dec
sbb
or
fcoml
xor
pop
inc
andl
xchg
and
push
mov
pop
mov
xor
or
and
scas
xor
movsb
jns
inc
add
mov
or
cld
jnp
filds
or
outsl
push
mov
dec
push
pop
scas
mov
push
sbb
mov
gs
jge
xorb
dec
push
sbb
outsb
push
add
add
push
xchg
and
fadds
sbb
aas
xor
lock
lock
dec
test
jp
jbe
les
add
add
mov
adc
rorl
jl
sti
insb
jno
inc
cmp
pop
xor
inc
sbbb
jno
dec
or
lea
sbb
mov
inc
jl
add
ja
sub
sub
lods
mov
dec
sub
inc
es
lcall
clc
sub
shrl
sbb
js
popa
lds
ret
pop
cmp
pusha
test
and
je
adc
add
fs
mov
test
mov
fs
mov
add
in
andb
lods
ds
pop
mov
inc
addl
jb
mov
xor
inc
sbb
jno
data16
xor
outsb
sbb
inc
das
push
arpl
adc
push
nop
add
and
outsb
je
in
sbb
add
mov
cwtl
sbb
add
sbb
out
pop
jo
cwtl
rol
sarb
inc
in
sbb
xchg
xor
les
cmp
mov
and
clc
mov
mov
pop
push
xchg
mov
cltd
pop
add
mov
arpl
inc
adc
ret
inc
sbb
pushf
or
add
pop
xor
xchg
sbb
mov
cltd
xchg
xor
cmpsb
test
dec
sti
sbb
dec
cmpb
test
mov
add
outsl
movsl
rorb
xchg
pop
inc
and
push
cmp
dec
sbb
push
jne
addb
or
ss
popf
inc
add
sahf
adc
inc
ja
add
jecxz
imul
push
dec
nop
mov
jmp
push
pop
es
sbb
mov
lock
dec
add
icebp
mov
orl
dec
lock
movl
ds
dec
inc
mov
rorl
and
les
imul
addb
cwtl
sbb
mov
insb
push
lea
ret
loop
scas
mov
pop
push
aas
sbb
lea
add
fldl
loopw
adc
out
insl
scas
dec
lods
cmp
cltd
sbb
aaa
xor
push
xor
and
add
push
inc
mov
push
pop
inc
fs
test
push
insl
inc
sub
in
sahf
loope
inc
sbb
subb
mov
jne
insb
xlat
push
jbe
insb
imul
sti
sub
mov
add
cmp
and
femms
adc
mov
rcll
ds
cmpb
push
sub
adc
pop
popa
jle
sbb
vpunpcklqdq
sub
and
add
imul
filds
incl
dec
jb
test
pop
shrl
xor
push
push
xor
orl
adc
cld
sbb
je
xor
pop
push
dec
xchg
dec
and
subl
xor
jb
bound
pcmpeqb
jnp
test
adc
aam
inc
ret
les
sbb
jae
mov
pop
pop
cmpsl
push
and
orb
push
sub
sbb
adc
dec
rclb
cmpsb
adc
push
add
pop
push
dec
push
xor
clc
mov
lock
imul
or
inc
imul
aaa
jnp
mov
xor
sub
push
sbb
dec
pop
xlat
and
adc
jge
and
pop
jl
jne
sbb
jb
dec
jns
insl
sub
add
ss
jl
arpl
jnp
inc
mov
or
or
mov
enter
mov
and
cmc
sti
inc
sbb
outsb
inc
cmp
and
inc
inc
add
mov
ret
mov
aas
lds
pop
insl
shll
mov
cmp
mov
inc
out
adc
xchg
jno
add
int
inc
fwait
add
das
inc
or
je
ror
mov
inc
mov
lret
cli
jge
fidivrl
dec
jne
imul
mov
push
fs
test
mov
sub
into
arpl
or
add
add
pop
jnp
bound
jb
pushf
pop
imul
push
lahf
int3
js
fistpll
outsb
jo
mov
xchg
sbb
dec
xorl
daa
jns
push
mov
bound
or
pop
test
aas
rcrl
mov
dec
add
dec
dec
lahf
sbb
adc
cmp
and
mov
fldt
jl
mov
mov
push
push
dec
dec
dec
cs
push
push
ss
loopne
mov
jo
cmp
sbb
outsb
xchg
mov
pop
mov
pop
jp
jae
movsb
leave
daa
and
and
push
lds
fs
xchg
jbe
jns
mov
sbb
dec
inc
gs
push
xchg
and
lcall
dec
add
and
or
pop
outsl
sbb
inc
inc
push
push
mull
sub
and
lea
test
adc
add
xchg
ds
push
xor
mov
and
pop
adc
jb
lods
and
mov
mov
rolb
inc
mov
or
loope
jne
in
rolb
xchg
int3
pop
mov
add
add
inc
imul
das
push
lea
psrlq
push
add
nop
rclb
xchg
je
sbb
lea
inc
daa
sbb
sahf
outsl
stos
or
adc
fisubrl
inc
jne
jge
cs
cmpsb
mov
scas
add
sbb
lcall
pop
incl
add
imul
out
fimull
mov
dec
xchg
xchg
pop
test
stos
and
test
in
pop
and
push
push
into
cld
xor
xchg
lret
xor
sub
add
mov
xlat
movsl
adc
iret
sbbl
jnp
std
add
movsl
xchg
xchg
xor
pop
lcall
sub
push
insb
bound
pop
cmp
aas
adc
imul
mov
loope
add
xor
dec
sbb
sti
shrb
sbb
add
push
pop
addl
rclb
sbb
sub
push
movsl
xor
inc
sbb
cmp
lds
test
sti
ss
or
mov
lods
or
jnp
stos
push
xor
daa
shll
pop
sbb
mov
cmp
adc
ljmp
fwait
push
repz
xor
push
mov
lds
mov
jae
add
xor
lahf
popa
mov
das
popf
scas
jne
aaa
push
lret
fwait
sbb
xchg
lret
addb
mov
xchg
xchg
or
loop
pop
mov
mov
jnp
mov
pop
movsl
sub
and
unpckhps
xchg
shr
xor
mov
and
or
mov
movsl
inc
xor
mov
sub
push
mov
in
pop
jl
test
ret
jae
add
fisubl
and
gs
mov
push
push
xchg
popf
dec
repnz
push
fmull
sbb
mov
jle
sbb
or
add
xchg
adc
inc
out
push
mov
jns
add
adcl
pop
mov
or
xor
fadds
mov
cltd
jnp
mov
jo
or
pop
pop
push
push
enter
arpl
pop
aam
add
xor
jo
sbb
pop
outsl
cmpsb
adc
sub
insl
rorl
add
mov
push
stos
mov
lcall
xor
jae
xchg
sub
arpl
inc
adc
inc
jmp
push
adc
mov
dec
pop
pop
jbe
imul
pop
adc
pop
mov
test
xchg
or
arpl
les
add
inc
and
sbb
push
into
push
enter
ja
popf
mov
add
sub
jno
and
sub
jbe
xor
stos
and
jae
movsb
imul
sbb
add
lea
mov
lods
push
push
jns
lock
js
imul
cli
pop
in
enter
aas
lcall
loope
test
add
je
mov
inc
in
mov
stos
movl
xchg
dec
dec
xchg
fsts
add
inc
ja
call
loopne
inc
imull
adc
loop
loop
imul
xchg
mov
sbb
cmc
push
cmp
and
shll
gs
add
lds
cli
push
pop
stc
pop
mov
shlb
jae
daa
sbb
adc
add
insb
jne
and
cltd
mov
push
outsl
push
test
push
fdivrl
push
dec
popf
je
add
jne
cmpl
stos
jbe
cmp
push
scas
outsl
sbb
out
jmp
mov
sbb
add
jae
and
mov
add
lcall
or
pop
adc
daa
xchg
sbb
daa
add
mov
sbb
xchg
leave
jmp
icebp
adc
cwtd
sub
stos
mov
and
iret
pop
sbb
imul
das
ret
add
xlat
dec
and
mov
adc
cmp
xchg
sub
push
xchg
jmp
icebp
fwait
outsb
fildl
les
xchg
pop
xchg
and
sub
das
push
jns
push
dec
or
push
push
xor
lea
sahf
imulb
xor
push
pusha
nop
push
imul
push
inc
dec
add
mov
mov
ficoml
inc
mov
add
cmp
mov
lahf
out
push
inc
cmpb
push
cli
pushf
leave
push
jmp
and
push
and
loopne
add
fwait
idivb
leave
add
push
aaa
xor
pop
adc
ja
mov
pcmpgtd
sbb
lods
ja
add
lods
add
push
shrl
fs
dec
xor
sarb
subb
aas
arpl
add
stos
sahf
jecxz
mov
mov
cmpsl
int
psrld
pop
stc
mov
mov
lret
into
in
stc
fbstp
jnp
fwait
data16
fcmovnb
stos
pcmpgtd
scas
cld
fbld
mov
enter
into
jmp
mov
mov
jle
std
aad
mov
rcr
inc
pop
repz
lret
test
mov
sti
enter
mov
das
push
loopne
int
mov
into
sbb
mov
insb
jle
inc
cmpsl
pop
jne
fs
ljmp
enter
lret
ret
jmp
sbb
push
pop
dec
loop
mov
out
inc
push
xchg
inc
push
inc
inc
add
and
stos
xchg
push
dec
adc
insl
test
sbb
mov
pop
pop
ror
jo
push
sahf
jo
outsb
add
push
fcomip
outsl
into
les
sub
lea
sub
sub
or
mov
xlat
pop
mov
inc
mov
aam
sub
push
xchg
lods
push
les
divl
or
stos
push
insb
and
adc
pop
lcall
in
jmp
mov
mov
lahf
andb
in
dec
scas
mov
daa
aad
test
jmp
cmp
or
jmp
push
sub
dec
pop
add
movsb
mov
dec
ja
dec
mov
jmp
adc
push
or
cli
and
es
cld
sub
popl
add
jmp
push
inc
sub
lds
sbb
jmp
stc
inc
and
jg
lods
and
mov
divl
pop
mov
inc
movsb
push
sub
jmp
lods
add
mov
adc
lahf
into
push
mov
out
dec
push
adc
add
nop
ja
inc
push
add
stos
and
decl
push
loopne
or
adc
testl
pop
pop
adc
inc
addl
inc
sbb
jmp
decl
push
sbbb
mov
xlat
adc
test
xor
pop
add
push
cmp
adc
mov
dec
inc
mov
or
inc
and
inc
pop
mov
fsubrs
pop
in
dec
daa
inc
xchg
push
mov
jg
push
sbb
mov
iret
packssdw
xorb
out
jne
cmp
dec
test
dec
movl
aas
pop
je
mov
lahf
sahf
pop
adc
outsl
sahf
push
mov
sub
shrb
rolb
inc
push
lahf
add
syscall
sub
aas
out
mov
test
es
ja
test
aaa
xchg
out
pop
add
adc
movsb
inc
and
jg
testl
addb
scas
daa
sbb
notb
cmpsb
stos
mov
mov
jg
test
adc
jmp
iret
add
xchg
sub
daa
mov
ja
orb
mov
mov
push
dec
movsb
or
add
add
rolb
data16
add
aam
add
jmp
xlat
add
inc
and
push
inc
pop
loopne
pop
sbb
and
dec
pop
xchg
xchg
mov
into
add
adc
scas
push
decl
lahf
subb
xor
pmaddwd
mov
daa
and
xor
dec
cmp
ret
jne
andl
ret
ja
das
mov
dec
inc
les
mov
xchg
xor
add
add
cmp
out
incb
btc
inc
ficoml
add
leave
jae
fisttpll
push
jne
or
inc
faddp
pop
inc
push
adc
pop
insl
sub
mov
or
add
add
mov
push
xchg
or
idivb
mov
int3
add
push
pcmpgtd
jl
icebp
add
sbbb
adc
out
mov
ds
add
sbb
add
pop
cltd
add
jae
mov
xchg
mov
mov
xchg
lock
clts
jl
xchg
fstpt
divl
sbb
ja
daa
mov
push
or
arpl
or
adc
lahf
lcall
out
data16
cmp
fisttps
sti
jns
roll
aad
push
push
jge
loope
jecxz
mov
mov
ja
jno
into
jg
pop
push
emms
mov
mov
inc
shlb
add
data16
out
jbe
jle
add
flds
roll
add
mov
in
or
mov
xor
mov
xchg
js
out
mov
cmp
mov
frstor
and
jnp
jecxz
orb
or
xor
pop
add
scas
cmp
add
pop
scas
andl
dec
aas
sub
and
mov
mov
pop
sub
testl
xchg
push
cmpsl
inc
and
adc
fs
mov
xor
sub
push
cmp
push
leave
sti
jb
push
jne
mov
iret
repz
ja
test
dec
and
push
push
testb
adc
pop
push
adc
shlb
daa
in
adcl
add
add
loop
stc
pop
jb
pop
adc
dec
incb
sub
and
xlat
add
push
push
push
pop
out
sahf
inc
xor
and
jns
mov
inc
js
mov
xor
xor
mov
xor
arpl
add
loope
test
inc
mov
data16
mov
xchg
bound
iret
shrb
mov
fdivs
mov
out
mov
into
lods
sub
cmpsl
add
mov
mov
mov
lret
mov
push
imulb
dec
xchg
mov
not
adc
fldz
outsb
jnp
mov
test
sbb
in
mov
into
pop
mov
mov
mov
pushf
push
pushf
rcr
scas
pop
inc
setnp
int
out
aaa
dec
xlat
rcl
out
mov
mov
mov
inc
adc
mov
cltd
sbbl
mov
mov
and
rolb
imull
cmp
iret
mov
aad
iret
lock
xor
movsl
lds
and
jbe
ret
xor
ss
jmp
ds
inc
subb
push
es
jbe
stos
xor
shlb
inc
lock
mov
mov
adc
xor
mov
int3
mov
ret
shr
sub
dec
out
or
rcr
adcl
inc
dec
push
sahf
sbb
xor
pop
cs
push
inc
jmp
outsl
inc
gs
and
or
mov
dec
and
lahf
add
scas
pop
arpl
add
aaa
sub
insb
mov
movaps
outsl
cmp
subl
jo
aam
push
dec
inc
pop
pop
shrl
inc
aam
inc
sbb
xor
fs
pusha
in
fldenv
in
fldt
cmp
adc
daa
or
adc
not
mov
aam
enter
mov
into
fidivs
aam
mov
idiv
sbb
mov
mov
or
insb
iret
rolb
es
shr
ficomps
or
hlt
mov
inc
lret
fcoml
into
mov
iret
mov
sarb
imul
jp
and
inc
mov
add
pop
and
aad
sub
push
mov
je
mov
and
mov
fbld
shrb
test
inc
add
mov
loope
sub
adc
add
xchg
ss
and
arpl
daa
pop
add
push
and
or
lock
push
pop
dec
inc
dec
dec
add
sti
sbb
add
sar
mov
and
xchg
cmp
ds
enter
loopne
ret
pop
sarb
dec
dec
jle
in
movsl
repz
xlat
fcmovbe
stos
mov
jg
inc
or
xlat
inc
aam
or
in
in
xor
mov
test
daa
add
add
pop
mov
xor
enter
and
push
daa
out
push
inc
sub
sahf
out
or
outsb
and
aas
jg
or
add
pop
test
outsl
fldt
aas
and
aas
decl
sbb
addr16
push
push
aas
fwait
das
stos
push
adc
sub
pop
mov
pusha
or
mov
cmpl
ss
out
ja
fildl
jmp
add
lods
daa
pop
dec
cltd
sbb
data16
arpl
push
push
pop
push
or
adc
push
outsb
jae
xor
add
int3
dec
xchg
push
fiadds
data16
or
inc
sbb
adc
out
push
xor
inc
push
push
or
jnp
dec
pop
and
sub
push
and
pminub
sbb
outsb
int3
sub
xor
gs
ljmp
sbb
addr16
ss
sub
mov
push
cli
jns
sub
or
aaa
daa
mov
add
fbld
hlt
push
mov
int3
jle
sub
inc
xor
push
adc
cmp
and
test
insl
fwait
or
adc
pop
dec
mov
push
jb
data16
lcall
push
mov
ss
pop
mov
loopne
add
fisttps
cmc
dec
mov
cwtl
pop
and
out
inc
popa
xor
stos
sbb
bound
scas
ffree
xor
mov
and
pop
and
add
fistpl
repz
ja
daa
or
add
pop
sahf
mov
in
pusha
or
outsl
push
add
lds
cmp
mov
imul
mov
mov
arpl
fsubr
fistl
aas
out
gs
mov
das
das
lret
pop
mov
repz
dec
sbb
push
sbb
jp
jo
iret
pop
or
and
mov
data16
add
sub
out
cmp
push
and
or
and
mov
push
jnp
loopne
loopne
xchg
and
scas
es
mov
jne
into
pop
outsl
push
mov
data16
dec
push
xlat
es
ss
dec
popa
dec
popa
inc
lret
mov
les
push
stos
pop
btr
adc
cli
sub
decb
inc
aas
push
push
pop
sbb
jl
add
add
inc
push
pusha
out
adc
xor
push
ds
loopne
xor
sbb
insl
and
push
nopl
add
jns
ss
add
add
mov
and
mov
ficoms
sbb
cs
xor
adc
call
aad
ret
insb
push
mov
cmp
mov
cmpsb
fs
pusha
push
add
iret
repz
add
cmp
push
pop
dec
or
cmp
repz
or
cmp
cmp
repz
or
cmp
xor
sub
sub
cmp
repz
adc
adc
cmp
repz
adc
cmp
adc
or
or
ds
repz
sbb
sbb
stc
jns
out
sbb
sbb
sahf
out
pop
in
and
sahf
out
sahf
and
and
and
jns
out
and
and
sahf
out
daa
shrb
sahf
out
sahf
sub
jns
out
sub
sub
sahf
out
das
mov
jns
xor
jns
out
xor
xor
sahf
out
aaa
cmpb
push
or
addr16
add
sbbl
sub
adcl
or
or
add
or
incb
add
adc
popa
pusha
fs
in
push
outsl
outsl
push
jb
pushl
enter
and
and
sbb
sbb
sub
and
cld
ljmp
push
sub
xor
sub
sub
and
clc
decl
insb
imul
jp
outsl
sbb
sbb
sbb
push
pop
and
and
dec
mov
sbb
adc
in
movsb
pop
add
add
push
xchg
imul
add
sbb
sbb
enter
orb
addb
sbb
je
sti
pop
orb
wbinvd
or
or
cmp
push
fisubrs
inc
or
dec
scas
mov
or
add
das
cmp
and
jbe
jo
or
and
pop
aaa
add
adc
sbb
sbbb
pushw
add
adc
sbb
and
adc
and
leave
imul
adcb
sbb
sbb
sbb
aaa
lods
or
sbb
sbb
lods
mov
sbb
sbb
adc
add
pop
inc
sbb
mov
insl
fbld
adc
pop
add
and
imul
pop
sub
sbb
and
aaa
add
jl
repnz
sub
push
sub
and
push
cmp
inc
mov
xor
xor
sbb
pop
dec
sub
divb
xor
subb
add
sbb
sbb
or
sbb
sbb
mov
add
xor
add
fcompl
rdmsr
xorb
jbe
inc
jb
xor
pop
sub
push
es
push
daa
add
jge
das
or
aaa
cmpb
adc
push
cmp
aaa
add
adc
cmp
mov
and
add
sub
imul
cmpb
inc
and
add
inc
je
inc
into
add
push
mov
lret
insl
cs
and
inc
orb
push
nop
mov
and
and
int
cmpsl
inc
adcb
inc
aaa
add
fcoms
push
add
in
sbb
and
dec
orb
add
jb
pop
sbb
pop
mov
and
dec
orb
dec
orb
xor
add
sub
aaa
lret
mov
daa
push
sbbb
add
ret
outsb
seto
and
push
or
add
inc
imul
xor
push
and
sbb
sbb
push
sbb
pop
and
push
push
push
push
pop
pop
daa
add
mov
push
pop
add
sub
rcr
pop
dec
sbb
mov
pop
adcb
pop
xor
pop
jne
imul
pop
push
sub
pusha
sub
popa
in
mov
sub
bound
sbb
push
xor
orb
cmpsb
movsl
pop
sub
cmpsl
insl
add
pop
xor
push
nop
mov
add
adc
add
in
inc
insb
orb
add
mov
ss
sub
mov
adcb
xorb
je
xchg
fcomi
jne
add
jbe
xchg
sbbl
sub
xor
push
inc
jp
daa
add
das
add
adc
aaa
sbbb
fsubs
shll
jl
add
or
orb
xor
jg
or
out
push
sbbb
and
xchg
ja
or
add
sbb
cmp
pop
test
sbb
sbb
fimuls
testb
add
xchg
sub
inc
push
in
sbb
sahf
xchg
sub
and
insl
je
mov
mov
xor
add
and
sbb
lea
in
scas
pop
sbb
sbb
in
cmpsl
sbb
nop
adcb
mov
xchg
and
add
or
xor
sub
mov
pop
nop
sub
add
pop
enter
leave
rcr
xchg
xchg
mov
add
aaa
xchg
sbbb
push
ficompl
add
xor
out
fiadds
orb
add
mov
pushf
addb
add
popf
cmp
mov
sahf
adc
add
int3
dec
enter
cpuid
and
in
mov
mov
ja
fcompl
sbb
movsl
push
cmpsb
adcb
in
dec
cmpsl
test
sub
subb
testb
add
xor
sahf
outsb
in
cs
and
mov
add
aaa
add
and
mov
mov
sbb
mov
sbb
xlat
sbb
add
or
and
add
or
cmpsb
in
or
mov
sub
and
push
mov
mov
das
add
or
out
mov
leave
sub
add
cmp
addr16
or
push
loop
add
add
and
sbb
mov
xor
mov
and
sbb
fmull
pop
sub
sub
sbb
pushf
das
xor
mov
imul
rolb
incb
add
pop
les
adc
cmp
or
es
lret
dec
out
push
sub
or
add
mov
into
sbb
imul
or
imul
add
sbbb
roll
pop
imul
aad
xor
daa
mov
repnz
cs
xorb
xchg
addb
xlat
orb
fsubs
pop
sbb
xor
fsts
xor
adc
sbb
lret
and
pop
pop
scas
in
sbb
adc
sbb
xchg
sub
xor
adc
or
add
mov
mul
sbb
fdivl
and
addb
add
lods
xor
sbb
fbld
sbb
lods
cmp
and
sbb
jb
jl
loop
add
pop
lahf
jbe
inc
jecxz
pop
sbb
in
in
in
shrb
ss
orb
sub
sbb
ljmp
arpl
dec
in
in
andb
sub
pop
xchg
out
outsl
xor
sub
push
sub
sub
xor
ds
divb
add
xor
sub
out
nop
pushf
pop
sbb
jb
inc
mov
xor
testb
adcb
dec
mov
mov
pop
sbb
stc
pop
sbb
mov
fcmovnu
cli
orb
or
add
sti
cs
mov
sub
inc
enter
sub
aaa
sub
cld
orb
std
xor
xor
repnz
xor
pop
and
sbb
int
out
inc
add
orl
jb
add
push
pop
add
add
and
push
add
push
ss
setno
add
ss
orl
orl
adc
or
xor
or
fnsave
sub
push
push
add
adc
adcl
fildl
adc
pop
das
or
imul
add
and
sbbl
add
aaa
push
pop
aaa
add
add
and
pop
sbb
push
xor
push
xor
mov
insb
insl
sbb
add
and
cmp
sbb
addl
leave
inc
jb
sbb
and
mov
sbb
add
ss
rolb
add
dec
add
and
add
fsubrs
stc
sub
push
sub
adcl
sbb
push
pusha
in
and
mov
sbb
and
subl
xor
xor
sub
xor
in
add
and
sub
sub
sub
mov
and
and
and
pop
adc
sub
jg
subl
xor
xor
sbb
sub
add
xor
sbb
insl
dec
push
xchg
sbb
xchg
and
mov
sbb
jb
ss
ss
sub
aaa
inc
enter
sub
cmp
inc
jb
cmp
sbb
pop
in
cmp
sub
cmp
add
and
add
xor
les
push
jno
cmpsb
add
insl
outsb
sub
inc
orl
cmpl
sub
out
lods
inc
orl
aaa
pop
aaa
or
push
fiadds
or
add
call
or
add
incb
xor
addl
sub
adc
xorl
push
adcl
mov
adc
add
push
cli
add
xor
xchg
push
push
rcrb
or
jle
sbb
and
fimull
adc
or
and
je
mov
or
sbb
push
aaa
adc
or
jl
lcall
shrl
and
push
sbb
push
xor
push
mov
sbb
or
add
movntps
sub
mov
or
push
mov
mov
lcall
xor
or
sub
mov
or
adc
clc
lods
roll
sbb
or
push
lcall
out
adc
sbb
xor
xchg
sub
ret
push
fidivl
push
sub
and
add
push
es
rorb
xor
inc
mov
or
add
and
dec
push
repnz
test
add
daa
or
mov
add
sbb
pop
sbb
mov
mov
shrl
orl
adc
aaa
inc
popa
data16
xor
xchg
notb
scas
add
out
and
add
mov
or
xchg
incb
and
sbb
sub
xchg
push
sub
pop
ljmp
lcall
push
adc
mov
push
or
or
mov
sub
mov
push
push
sbb
fiadds
sbb
sbb
lods
xor
out
or
xor
sub
das
push
ljmp
jp
pop
pop
pop
or
jo
lcall
pop
lock
ret
or
out
into
push
sub
sbb
push
fmuls
mov
sbb
adc
xor
and
dec
mov
xchg
push
cs
and
bound
bound
inc
cmp
add
pop
or
sub
sub
inc
in
mov
add
shrb
pop
orl
add
xor
inc
pop
sbb
ficoml
jbe
sbb
pop
data16
es
cmp
sbb
pop
inc
or
sbb
ljmp
xor
jbe
sbb
cmp
push
adc
and
lock
pop
push
ds
sbbl
adc
adc
xchg
sbb
cmpb
pusha
orl
add
sbbl
ss
adc
jg
cmp
out
push
mov
xor
pusha
andl
adc
bound
sub
int
xor
pop
ljmp
push
jbe
arpl
sahf
adc
fistl
and
outsb
nop
mov
sbb
fisubrl
movsb
ds
push
push
and
stos
sub
or
mov
gs
sub
or
andw
sbbl
inc
jb
and
xor
and
xchg
or
sub
je
push
bound
push
sbb
bound
xchg
adc
push
or
dec
je
mov
mov
add
or
jle
cmp
in
pop
cli
adc
rcrb
sbb
add
add
sbb
pushf
push
cli
or
or
sub
andl
repnz
inc
test
imul
mov
pop
rol
sub
add
mov
cmpsb
xchg
mov
scas
push
ficompl
cs
push
inc
xlat
jb
dec
cs
sub
incb
stos
or
mov
insl
orl
movsl
push
pop
or
scas
sahf
outsb
subl
stos
sub
sbb
rdmsr
or
jne
cs
sbb
or
push
add
mov
shlb
ds
das
mov
add
push
sub
add
mov
xor
subl
inc
cli
adc
js
mov
add
ficoml
xor
lods
rcll
add
testb
sub
sbb
jno
xchg
push
sub
xchg
add
jb
inc
inc
sub
and
pop
jl
aam
jae
pop
je
and
xor
xchg
mov
xor
daa
or
or
jbe
push
sbb
xor
mov
or
pusha
cmpl
dec
sbb
fsub
push
mov
add
mov
jp
fimull
sbb
push
fcoml
out
adc
adc
andl
push
out
orb
into
aaa
scas
add
add
add
or
push
shrl
xor
cmpl
daa
ret
adc
dec
out
cs
sub
add
ss
fidivrs
dec
popa
adc
jbe
or
sub
cs
sbbl
mov
negb
pop
bound
mov
sub
testb
into
mov
mov
add
loope
fldenv
add
orb
jecxz
mov
add
or
add
es
enter
cli
add
rolb
and
and
sub
cmp
subb
sub
inc
adc
or
push
inc
test
push
or
sbb
pop
mov
aaa
lret
xchg
inc
mov
sahf
mov
xchg
ljmp
mov
sbb
push
rolb
loop
dec
add
aaa
inc
or
mov
xor
xorb
push
loopne
or
dec
stos
and
ret
push
or
inc
push
pop
mov
xor
and
push
push
mov
outsb
out
or
rolb
adc
cwtl
dec
sbb
sub
mov
and
loop
ficoml
sbb
push
es
lcall
push
jbe
mov
sbb
cmpsb
ss
mov
xor
lock
into
rsm
sbb
pusha
data16
xchg
and
mov
or
mov
repnz
arpl
push
cli
mov
or
sbb
sbb
or
mov
mov
shrl
push
sbb
ret
adc
pop
sbb
fimull
push
adc
dec
inc
and
or
cmpsb
mov
mov
fimuls
mov
push
rolb
inc
and
inc
push
jbe
or
add
adcb
rolb
push
push
add
mov
adc
or
ret
mov
aaa
xchg
fidivl
cltd
rolb
cmp
data16
xor
push
or
data16
and
addl
lcall
cmp
pop
or
mov
xchg
jbe
adc
jbe
xchg
fisubrl
sbb
pusha
jb
iret
add
dec
das
cmp
sub
and
xchg
mov
xor
adc
lcall
sbb
push
sub
dec
repnz
xchg
adc
sbb
imulb
ficoml
xchg
popf
rorb
inc
cli
cli
and
add
mov
xchg
inc
repnz
addb
add
add
cmp
ss
adc
rolb
daa
jp
add
insb
mov
mov
sub
cmpsb
sub
mov
mov
cmp
sbb
jle
xchg
pop
mov
into
mov
lcall
stos
xor
sbb
sarb
sub
stos
sbb
pop
or
loop
adc
adc
push
and
add
mov
cmp
andb
push
mov
divl
pop
and
push
mov
adc
bndldx
push
es
into
jbe
pop
test
adc
bnd
or
cmp
mov
rol
pop
ss
push
add
xor
xchg
loopne
mov
bound
les
sbb
sbb
ss
lods
xor
daa
pop
jbe
rcrl
mov
xchg
push
jbe
or
lea
scas
sar
jae
dec
iret
into
bound
xchg
and
inc
shll
rolb
dec
cmpsb
push
or
repnz
add
popa
add
or
test
js
xor
adc
push
adc
es
pop
push
xor
sahf
xor
loop
xor
adc
fidivrs
jle
mov
sbb
push
dec
popf
out
rcrl
ds
add
rolb
es
pop
sahf
push
aaa
fisubs
push
mov
pop
xchg
ror
push
push
add
or
into
mov
push
mov
jb
sub
negb
xor
push
or
jbe
adc
sub
inc
loopne
jbe
jbe
test
aas
loope
or
adc
mov
pusha
cli
push
adc
pop
add
sbb
or
push
mov
push
fildl
sbb
xchg
push
mov
mov
daa
adc
test
sub
xchg
adc
test
pop
scas
xchg
cs
push
xchg
mov
inc
loopne
outsb
out
jecxz
xchg
push
add
push
pop
cmp
or
push
pop
repnz
cmpsb
xor
sbb
pop
or
sub
adc
shrl
pop
and
push
xchg
sub
sbb
jp
aaa
add
add
sbb
and
andb
jae
into
inc
add
push
dec
sahf
ds
test
bound
sbb
or
push
adc
lods
sbb
sub
lock
scas
xor
and
or
stos
and
inc
mov
sub
adc
je
pop
and
sub
daa
into
adc
sbb
pop
adc
push
inc
xor
and
lods
adcl
mov
cmpsl
adcl
and
pop
mov
inc
mov
dec
or
add
ret
and
adc
test
mov
inc
xor
push
or
test
clts
adc
bound
sub
sbb
lcall
adc
and
sub
or
add
lcall
xchg
or
fiaddl
sbb
sbb
or
sbb
sbb
nop
inc
and
test
ret
mov
shll
xor
enter
mov
imul
fisubs
push
inc
sub
or
push
lcall
xor
sbb
or
rcrb
or
loopne
inc
out
bound
dec
adc
jle
aaa
or
mov
cmpb
mov
and
inc
rcll
mov
mov
and
xor
push
rclb
adc
jmp
ficoms
fimuls
rorb
mov
or
xor
dec
addr16
jbe,pt
push
mov
or
sbb
cmpsb
out
pop
push
push
cmp
cmp
xor
mov
stos
sub
sub
fimull
add
adcb
or
cmp
jbe
sub
adc
mov
adc
ds
daa
lds
addl
incb
mov
cli
mov
movsl
mov
or
add
or
mov
cmp
mov
daa
push
pop
ja
xor
outsb
sbb
sub
sbb
push
push
mov
sbb
addr16
xchg
push
sbb
xor
pushf
popa
lock
jle
es
cltd
pop
aas
fiaddl
pop
mov
sub
push
xchg
or
stos
rcrl
adcb
adc
and
dec
gs
mov
and
ss
mov
mov
add
xor
jb
sbb
fidivs
mov
xchg
pop
repnz
xor
mov
sbb
stos
add
mov
or
mov
or
mov
mov
sub
push
xchg
and
dec
cmc
int3
pop
push
or
sbb
adc
cmp
sbb
mov
add
lret
sub
enter
bound
sbb
pop
push
or
leave
push
jne
adc
sbb
pop
aam
loope
data16
or
and
push
push
inc
test
out
push
cli
xor
lcall
ror
into
or
push
xor
pop
dec
mov
ret
adc
inc
and
stos
or
add
push
sbb
push
xchg
inc
cmpsb
rorl
cs
sbb
xchg
inc
test
push
add
ds
sub
push
add
add
and
rcrb
mov
pop
out
inc
sbb
push
xor
mov
push
or
les
cmp
out
mov
sbb
add
data16
mov
and
push
jno
fisubrs
jbe
ret
aad
inc
add
mov
subb
sub
push
adc
aaa
xor
or
or
or
push
xor
lret
jo
fimull
and
pop
adc
rorb
out
mov
shl
xor
das
popa
or
bound
push
sub
dec
push
pop
rol
and
xor
inc
push
iret
push
or
sub
bnd
or
xchg
xorl
push
and
push
dec
sub
sub
pop
xchg
push
add
mov
inc
xchg
xchg
mov
xor
adc
adc
sbb
cmpsb
jle
xchg
push
pusha
movsb
cmp
pop
ss
mov
repnz
sub
jle
push
mov
dec
add
or
and
ret
mov
incb
xor
push
mov
fiadds
and
sub
mov
push
sub
add
into
shl
dec
add
fiaddl
jb
and
lcall
mov
add
or
mov
add
aaa
jle
push
xchg
or
push
sbb
and
out
jbe
nop
shlb
inc
test
adc
push
loopne
out
sbb
add
es
xchg
push
es
xor
xlat
or
shll
xor
ljmp
ror
or
xor
or
adc
xchg
mov
push
pop
jp
ret
out
stos
ret
adcl
shlb
xorb
and
loope
ret
cmp
or
outsb
repnz
sub
outsb
inc
sub
sbb
xor
roll
pop
or
inc
xor
das
lcall
cmpsb
dec
dec
out
inc
or
xchg
out
sub
das
or
cmp
jg
adcl
mov
push
and
adc
add
into
out
adc
data16
push
aad
pop
add
sbb
pop
dec
mov
push
and
leave
add
out
stos
or
fiaddl
or
rcrb
repnz
xor
or
dec
and
jl
in
cmp
cli
add
push
dec
push
push
and
out
sub
push
cli
sub
inc
ret
scas
jbe
movsl
adc
push
es
out
cmp
shll
pop
pcmpeqd
adc
les
sbb
pop
push
addl
rcrb
xchg
sbb
pop
xchg
cltd
push
out
dec
dec
sub
sub
das
mov
lcall
sub
sub
and
adc
bound
or
pop
mov
sbb
mov
ss
push
push
add
jp
adc
ret
mov
mov
xchg
sbb
or
fisubrs
fmulp
and
jbe
repz
mov
push
outsb
inc
sub
add
sub
inc
sahf
xor
loop
sbb
cmpsl
lock
movb
adcb
int3
add
pop
lcall
mov
xchg
add
loope
stos
data16
adc
or
rorb
sbb
push
add
popf
jne
sbb
jle
push
cs
adc
push
add
push
adc
xchg
push
xchg
addb
jb
das
fiaddl
call
sti
lcall
bound
xchg
cwtl
jge
inc
and
lret
cmpl
or
add
xor
arpl
sahf
bound
mov
push
loop
add
push
into
outsb
mov
sbb
push
xchg
sub
enter
mov
call
push
or
sub
push
ds
or
out
cmp
rolb
int3
push
lahf
add
dec
and
xor
xor
or
mov
fs
notb
mov
out
ficompl
jbe
leave
add
ret
sbb
movsb
jo
jb
mov
divb
or
cmpsl
add
or
or
out
push
adc
jbe
add
cltd
lret
mov
cli
aad
sub
jle
and
xchg
mov
or
fcmove
into
push
and
xor
aad
and
jle
out
and
loopne
ret
push
sbb
subb
push
test
push
out
es
fldcw
add
mov
xor
add
loop
test
inc
push
inc
push
imul
movsb
lret
jle
sahf
xchg
lret
mov
jb
out
cltd
ret
lea
pop
cmp
dec
sub
push
xchg
xor
jp
push
add
xchg
xor
jbe
enter
daa
out
sbb
pop
push
negb
loop
sbb
ss
pop
fidivrl
push
cmpsl
call
pop
sbb
mov
cs
fidivrs
popf
jge
sbb
push
and
or
aad
lea
pop
aaa
cmp
mov
into
insb
fisubl
add
xchg
dec
push
jo
add
shlb
dec
or
sbb
ljmp
or
or
out
ds
rcr
call
cmpsb
add
and
mov
adc
into
sahf
fdivrs
cmpsb
push
xor
ss
or
out
push
or
out
push
cmpb
and
or
out
jbe
or
sbb
add
inc
xchg
mov
test
arpl
or
sbb
loop
aaa
push
or
idivl
pop
into
loop
push
or
pop
inc
jne
rcrl
and
push
ds
jmp
cs
or
js
daa
jp
jbe
sbb
sbb
iret
stos
inc
fisubl
mov
add
and
cmp
xchg
int
cs
and
or
pop
cmpsl
inc
mov
out
test
push
fisubrl
or
add
push
popf
cmp
cmpb
out
or
or
push
gs
xchg
mov
jecxz
test
mov
push
or
cmp
aaa
js
ret
pop
or
aaa
xchg
dec
fs
push
cs
and
or
or
or
or
pop
aaa
or
jno
or
or
or
pop
or
xor
cmp
or
sbb
addr16
repnz
or
sbb
or
push
cmp
xor
sbb
outsb
xchg
or
adc
aad
outsb
or
rorb
sahf
or
or
or
push
or
adc
fcmove
jne
cmp
mov
or
pop
xlat
fsubrs
xor
shlb
or
sbb
and
mov
mov
sbb
cmpsb
push
outsb
sarl
xchg
pop
push
push
or
pushf
pop
ss
or
or
cs
bound
sbb
and
and
ror
mov
mov
sbb
lock
jae
sub
and
xchg
cmp
nop
and
xor
mov
or
and
xchg
dec
lea
and
add
sbb
or
or
mov
aaa
or
add
inc
lea
push
in
xchg
das
daa
mov
add
aas
dec
lea
adc
or
push
or
xor
aaa
imul
push
or
ret
out
adc
cmp
or
scas
mov
ds
add
ds
mov
cmp
jno
cmpsl
push
or
mov
adc
dec
inc
sbb
push
or
add
call
or
mov
rcrb
loopne
adc
and
add
mov
daa
add
xchg
arpl
cmp
or
fwait
fs
sbb
cmp
arpl
sub
push
add
adc
fcomps
inc
pushf
or
xchg
xor
pop
pop
push
dec
out
or
push
or
dec
or
add
cmpsl
cmpb
loope
lock
xchg
out
cmp
or
inc
aaa
mov
loopne
jns
and
fdivp
cmp
push
pop
and
inc
and
pop
adc
or
or
push
das
xchg
push
insl
sbb
push
sbb
pusha
push
pop
or
stos
out
imul
mov
push
or
and
or
sub
or
les
pop
ss
inc
call
fwait
push
sbb
sub
jle
adcb
and
adc
jb
sahf
stos
test
popa
push
and
sub
cmp
mov
and
enter
sub
sub
sbb
sbb
orb
out
bound
fmuls
mov
or
or
lea
inc
cmp
jbe
push
lcall
mov
adc
sub
in
mov
inc
and
xor
out
push
outsb
test
and
ljmp
inc
push
ret
or
mov
cmp
dec
mov
or
xchg
push
out
xor
pop
pop
ret
add
scas
pusha
push
sahf
cmpsl
bound
test
xorl
sub
adc
push
shl
es
sbb
mov
push
data16
lods
xchg
sbb
and
pop
and
adc
adc
xor
adc
and
ret
popa
in
sbb
or
int3
iret
adc
push
bound
or
pop
lock
cmp
out
sbbb
ret
xor
pop
mov
mul
and
lret
or
jl
pop
cmp
rcll
test
popa
test
push
fisubrs
or
fbld
jbe
add
adcb
jnp
loopne
xor
cmp
xor
push
cmpsb
jmp
add
ret
ret
ret
inc
mov
cli
mov
mov
sbb
jo
and
fildll
and
scas
loopne
cmp
add
add
xlat
bound
xor
dec
mov
mov
pop
sbb
ret
aad
xor
addr16
push
lock
das
out
pop
pop
dec
xchg
pop
or
outsb
pop
xchg
ret
add
mov
adc
add
mov
mov
aas
addr16
sahf
mov
pop
cmp
push
push
inc
popa
mov
cmpsl
adc
push
push
xor
xor
xchg
sub
fildl
sbb
shlb
das
jmp
test
divb
mov
jbe
sbb
stc
ljmp
orl
out
add
ret
inc
xchg
pop
ret
clc
dec
xchg
dec
ljmp
cmp
sbb
add
loop
mov
xlat
call
pop
imul
idivb
or
cmp
push
jne
imul
sahf
out
outsb
outsb
gs
jne
imul
push
outsl
dec
outsb
push
and
jne
sub
dec
push
adc
aas
setg
xchg
jne
inc
push
popa
pop
jle
outsb
in
fnstsw
jb
mov
es
jns
xchg
cmp
jns
jae
jns
out
jp
js
jns
jns
push
imul
push
outsb
aaa
mov
out
data16
push
mov
cmpsl
mov
arpl
jp
push
icebp
fidivrs
push
or
mov
lods
subl
out
rcl
mov
ret
and
mov
pop
pop
notl
dec
sub
dec
mov
cmpxchg
mov
mov
aaa
in
adc
pop
fdivrp
cltd
jp
mov
mov
mov
cmp
inc
fisubl
lods
aam
rol
movsb
jo
mov
pop
push
pop
push
out
push
and
fldl
shl
aaa
jle
imul
outsb
or
inc
inc
sbb
jnp
imulb
jl
dec
sub
das
push
test
or
xor
xchg
lahf
mov
outsl
mov
pop
pop
push
add
adc
inc
cmp
repz
xor
and
imul
add
add
out
sahf
out
loopne
ror
sahf
out
sahf
sarb
sahf
out
nop
mov
sahf
out
jo
push
sahf
pusha
pop
pop
push
push
dec
jns
out
inc
cmp
sub
test
out
adc
sahf
out
push
xchg
push
in
int3
jns
out
shlb
out
js
pusha
push
mov
xor
adc
xchg
hlt
out
sahf
ja
aam
mov
or
jns
xchg
nop
mov
sahf
out
pop
inc
push
inc
inc
inc
inc
inc
jns
out
inc
dec
dec
dec
dec
out
sahf
out
dec
dec
dec
push
sahf
out
sahf
push
push
push
push
push
push
fwait
sahf
out
push
pop
pop
pop
fucomi
mov
jae
jne
ja
out
stos
stos
jnp
fwait
jnp
pop
or
repz
or
or
or
cmp
repz
or
or
cmp
repz
add
add
repz
add
add
add
repz
cmp
push
jno
jae
repz
je
jbe
js
xorl
jp
subb
sub
pop
aas
dec
mov
push
push
inc
xor
pop
xor
mov
add
aaa
or
push
or
insb
add
jne
cmp
pop
pop
leave
and
ss
xor
push
or
xor
aas
sbb
leave
rcl
das
xor
pmulhuw
in
cmp
ss
xor
xor
sarb
lods
mov
rcrb
in
into
pop
fs
out
pop
mulps
push
push
push
xchg
xchg
xchg
xchg
push
push
push
push
xchg
xchg
xchg
xchg
push
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
inc
inc
inc
fwait
xchg
xchg
xchg
inc
inc
inc
inc
mov
hlt
into
fisubs
aas
mov
adc
push
inc
cmp
inc
dec
push
inc
dec
inc
sbbl
ja
insb
add
jl
xchg
mov
jl
sub
or
insb
iret
mov
sub
and
ljmp
or
lret
mov
sub
pop
sbb
and
jp
mov
push
outsb
outsl
lgs
test
ja
pop
mov
add
addb
mov
sahf
test
push
cmp
jo
sahf
pop
int
push
pop
jne
xor
dec
inc
inc
cmc
add
add
mov
lods
push
loope
mov
cmp
or
dec
repz
loopne
aam
repz
sti
cli
mov
mov
clc
mov
js
repz
repz
dec
hlt
xor
repz
repz
adc
add
dec
sarl
push
out
out
sahf
out
in
pop
in
inc
mov
xor
sbb
in
idivl
imul
outsl
repz
cmp
in
jecxz
iret
jae
sub
decl
loope
or
jns
out
enter
xchg
out
jns
out
jl
push
fstpt
stc
sahf
jnp
fidivrl
iret
repz
xlat
aam
test
iret
repz
mov
push
shrl
cmp
repz
rorl
xor
cmp
repz
sbb
add
out
sahf
out
pop
int3
fmul
mov
out
sahf
lret
js
fs
out
push
cmp
lahf
ret
loop
sahf
push
les
jg
sahf
xlat
sub
ret
rorl
push
out
sahf
cmpsl
shl
sarb
mov
mov
out
push
mov
sahf
jnp
mov
mov
add
mov
mov
mov
cmp
repz
mov
mov
mov
add
mov
ret
fadd
jmp
adc
outsb
add
inc
fisubs
lret
cld
rol
dec
add
inc
push
loop
pop
pop
jbe
xor
imul
daa
ror
lahf
nop
add
mov
repz
and
idivb
jecxz
jg
fidivs
mov
int3
cmc
add
xor
mov
popf
add
mov
idivb
lret
jecxz
lret
insb
add
push
dec
pop
clc
adc
in
mov
xor
cld
or
pushf
mov
shlb
mov
sar
mov
aad
rol
roll
sahf
add
or
rcrb
jg
mov
iret
loopne
enter
or
fstps
addr16
or
sub
mov
xor
push
sbb
sub
pop
push
leave
call
adc
adc
inc
cmp
mov
inc
outsl
cmpsl
daa
enter
std
adc
das
and
xor
adc
mov
push
jbe
addr16
add
push
aam
sub
xchg
inc
arpl
shlb
daa
dec
iret
out
rcl
sub
sub
popa
das
mov
mov
dec
add
mov
sbb
insl
inc
jbe
xlat
jecxz
aas
cmpsb
mov
popf
add
dec
cmpsl
repz
add
adc
mov
push
mov
pusha
jg
mov
push
fsubr
daa
pop
and
push
jbe
lret
daa
fldt
pushf
jae
daa
shll
daa
test
adc
fildll
pop
outsb
out
push
pop
idivb
inc
fists
add
out
mov
inc
sbbb
pop
push
cmp
lahf
ja
js
nop
jecxz
das
fcoms
jl
cmpsl
int3
stos
mov
das
jg
popa
push
scas
lcall
fwait
xor
jo
pop
push
push
dec
mov
pushf
arpl
lock
aaa
mov
adc
sbb
inc
adc
or
ret
mov
aas
inc
push
out
pop
or
scas
int
inc
xor
pop
add
mov
pop
leave
ficompl
cmp
fildl
imul
xor
pop
cmp
mov
sub
movsb
sub
mov
bound
test
and
lock
sti
mov
jae
and
ret
rcrb
enter
mov
stos
xchg
subl
dec
sti
aas
xor
pop
mov
shrl
lahf
addr16
push
outsl
add
out
rorb
adc
jmp
std
mov
js
push
push
sbb
les
jecxz
jnp
or
fdivrs
lahf
loopne
cmp
pop
or
pushf
or
fwait
mov
movsb
mov
pop
lret
and
push
pusha
push
aas
out
cmp
mov
xchg
xor
dec
push
fwait
cs
cs
ret
mov
add
int3
dec
idivb
jmp
imul
mov
cli
jbe
inc
leave
cli
ret
int
das
shll
jg
lret
cs
into
sub
jmp
mov
movsl
scas
push
cmpsl
mull
mov
mov
sub
cmpl
das
pop
movsl
daa
aas
addr16
mov
scas
rclb
and
stos
sub
pop
jne
push
bound
aas
sbb
lret
aad
stos
mov
in
pop
inc
sbbb
mov
sbb
std
inc
rolb
les
rol
out
aam
xchg
mov
js
xor
ret
daa
add
sbb
cli
cs
sar
daa
xlat
ljmp
out
jne
xchg
mov
add
iret
mov
xlat
repz
iret
lock
fstp
fmulp
ret
sub
fsub
popl
negb
out
xchg
movl
loope
mov
fmul
clc
adc
cmp
push
insw
outsl
sti
lock
pop
das
negb
jg
add
pop
pop
pop
jns
out
pop
pop
pusha
popa
bound
out
adc
push
cld
push
cmp
repz
call
xchg
repz
into
cmp
dec
cmc
pop
enter
in
inc
cmc
add
pop
cltd
push
push
lds
out
ja
unpcklps
jnp
loopne
out
pop
dec
gs
fstl
dec
iret
aad
in
imul
pop
inc
das
inc
mov
adc
ss
mov
inc
sub
and
lods
fsubrs
outsl
iret
push
aaa
mov
and
jecxz
repnz
mov
mov
test
int
add
mov
fnsave
movups
xlat
sahf
adc
add
and
scas
cmp
and
mov
add
incl
pop
xchg
pop
jnp
mov
dec
push
sbb
inc
lar
in
mov
and
movups
jg
and
mov
jmp
fcompl
pop
loopne
adc
scas
or
pusha
sbbb
adc
sbb
sub
pop
lock
in
add
out
loopne,pn
push
fdivrs
pop
sti
andb
enter
jnp
cmp
adc
rcl
cmpsb
dec
leave
out
mov
in
in
push
int3
shlb
loopne
mov
cmp
ss
ret
in
pop
xlat
iret
mov
sbb
mov
mov
fnstcw
jg
fmul
out
pop
data16
jp
pop
shufps
or
rcr
orb
lret
mov
out
pop
outsb
pop
rol
mov
fcmovb
or
cmp
jg,pn
mov
jg
stos
pop
mov
xchg
outsl
and
test
or
add
cmc
scas
push
lret
jle
clc
push
imul
cs
decl
clc
and
dec
push
inc
inc
dec
inc
dec
inc
add
xchg
ficomps
pop
sub
push
sub
mov
sahf
out
ficomps
push
cmp
xchg
mov
cmp
mov
xor
dec
mov
pop
pop
mov
das
or
lar
add
scas
aas
pop
insl
mov
aas
xor
fs
pop
aas
mov
fdivr
pushl
xor
daa
inc
inc
pop
pop
add
jnp
jmp
push
xchg
das
push
adc
push
mov
xlat
outsl
push
lret
rolb
pop
jnp
pop
stos
push
int
xor
push
xlat
pop
mov
mov
in
outsl
mov
addb
add
dec
mov
push
test
push
shrl
das
lcall
push
xor
sahf
push
dec
pop
jae
rorl
pop
loope
popa
inc
cld
clc
test
pop
inc
inc
pop
pop
idivb
testb
inc
push
inc
jg
sbb
sub
insl
movsl
jbe
mov
rcll
cmp
popl
das
dec
sub
in
adc
dec
dec
xor
cmp
lods
add
test
push
ret
mov
sti
cld
push
xor
cmp
push
dec
push
inc
inc
cld
cs
popa
aas
cmp
dec
inc
push
pop
dec
xor
sti
aad
inc
inc
push
inc
fwait
push
test
add
mov
lods
iret
andnps
cmp
cmp
sbb
or
mov
sbb
test
push
vorps
stos
popa
fnsave
pop
iret
pop
mov
insl
push
sub
daa
aas
aas
outsl
les
cmpsb
mov
add
pusha
add
mov
ficoms
jg
dec
rorl
jg
in
xor
xchg
pop
push
insl
aas
push
dec
jmp
sub
mov
enter
dec
dec
push
xor
sub
xlat
mov
adc
aas
adc
or
test
mov
sbbb
push
pop
inc
loopne
xchg
push
mov
out
aas
push
add
jmp
lods
xor
push
mov
fcmovnu
mov
sete
pop
int
pop
mov
in
mov
aas
aas
pop
adc
jbe
add
cs
and
pop
jp
outsl
or
add
adc
pusha
addb
addl
add
and
sbb
adc
sahf
out
std
scas
pop
xlat
pop
push
push
push
dec
dec
jns
out
inc
inc
cmp
sub
jl
out
adc
cld
clc
iret
repz
hlt
lock
call
repz
fcom
ror
cmp
out
les
iret
repz
cwtl
nop
test
cmp
repz
pop
push
inc
cmp
push
out
fiadds
or
push
or
or
mov
or
or
fisttpll
imul
daa
adc
adc
mov
xor
in
jbe
push
addr16
das
push
xorps
pop
imull
push
and
mov
out
jb
pop
andb
mov
orl
pop
popf
pushf
cmp
xchg
sub
cmp
into
aas
xlat
fsub
xchg
aaa
pop
sbb
add
add
outsb
cmp
aas
shlb
andb
cmpsb
fisttps
mov
pop
sbbl
mov
inc
andb
cmp
add
pop
inc
mov
iret
mov
in
sbb
in
call
adc
cmpsl
in
jle
ficompl
push
pop
fisubrl
xor
fmul
test
jb
jle
xchg
adc
cmp
hlt
cmp
cs
or
loopne
jns
ja
jne
push
inc
nop
push
adc
out
out
cmp
jg
sbb
fdivrs
repz
mov
js
repz
repz
sbb
js
sub
clc
push
dec
or
mov
in
out
call
dec
push
pop
inc
mov
jg
fsubl
jno
cld
aaa
dec
test
ss
or
sbb
xchg
std
push
add
icebp
cmp
add
mov
rcr
add
ljmp
xlat
xor
mov
movsb
or
pop
scas
jns
mov
pop
add
hlt
fistpl
jns
sbb
sbb
pop
out
sahf
out
adc
and
sahf
out
sahf
push
les
sahf
out
adc
sahf
out
adc
sahf
or
or
out
sbb
sbb
out
sahf
out
sbb
pop
sahf
out
sahf
pop
push
and
add
out
jae
stc
mov
clc
jmp
bndldx
test
xor
sub
sahf
in
sub
mov
pop
add
or
inc
xchg
push
icebp
mov
and
outsb
sub
sahf
out
sahf
das
xor
jns
out
push
outsb
jae
mov
jns
out
mov
repz
add
sbb
cmp
repz
mov
lcall
es
out
sahf
out
gs
sahf
int
jns
mov
ljmp
repz
inc
pop
outsb
mov
cmp
repz
lods
mov
out
jns
iret
adc
xor
push
or
jns
push
jbe
mov
and
add
mov
test
jne
sahf
pop
cmp
add
and
in
mov
sbb
dec
push
add
addl
insb
jg
add
push
xor
and
cs
lcall
scas
mov
sbb
lock
pop
inc
adc
aad
xchg
mov
mov
add
xor
xchg
push
add
push
inc
sbb
adc
or
mov
and
sub
xorb
cmp
mov
sbbl
mov
push
push
push
push
inc
jg
pusha
lds
dec
fldenv
add
in
cmp
mov
nop
mov
xchg
xchg
pusha
sbb
js
push
in
or
xchg
push
pop
iret
repz
ja
mov
repnz
loop
lcall
js
shrb
pop
out
scas
add
jo
add
mov
es
mov
jp
outsl
xor
add
shll
jg
cmp
nop
xchg
cmp
mov
add
psubw
or
ret
mov
adc
enter
cwtl
push
and
mov
xor
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
sar
lcall
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
incl
aad
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
call
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
incl
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
jmp
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
clc
lcall
lds
mov
cmpsb
lock
mov
popa
incl
pop
mov
and
stos
xchg
clc
repz
mov
subb
fld
cmp
and
fiaddl
int
pushl
cltd
add
aas
jno
or
mov
pop
fs
dec
lea
incl
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
ljmp
jmp
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
decl
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
dec
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
adc
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
pusha
sbb
xlat
cmp
mov
sbb
add
cmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
jmp
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
std
mov
pop
ficomps
frstor
hlt
out
push
or
das
insl
sar
lahf
adc
loopne
add
xchg
dec
adc
pop
push
cwtl
dec
adc
xchg
cltd
dec
adc
not
incb
jae
fwait
dec
adc
je
popf
dec
adc
imul
adc
push
mov
mov
pop
shll
push
adc
mov
jmp
push
add
hlt
add
aad
leave
test
xor
insb
xor
in
hlt
scas
mov
add
cmp
inc
mov
ss
rcl
pop
ss
add
enter
cmp
sub
lods
cltd
mov
jl
push
and
push
cmp
cli
out
push
or
mov
hlt
xchg
push
jno
adc
enter
sub
rolb
data16
pusha
adc
sbb
adc
js
adc
add
mov
or
mov
or
jecxz
icebp
cmpsl
into
xchg
outsl
add
sbb
sbbb
adc
pop
inc
fdiv
add
sbb
ficomps
stos
xchg
cmp
popa
add
insb
stos
dec
imul
xchg
pop
lock
jecxz
add
and
inc
outsb
and
jns
pop
xchg
jle
push
dec
and
add
ds
add
sub
sarl
pusha
add
xor
movaps
pop
inc
jmp
or
sub
dec
es
loopne
imulb
jp
cs
cmp
cmc
sahf
das
bound
or
xor
dec
daa
add
les
sub
inc
jecxz
sti
xor
add
sysenter
daa
or
add
ja
mov
and
loopne
push
out
inc
push
cmp
scas
dec
push
push
or
and
insb
push
sub
int3
pop
or
dec
sbb
or
outsb
sbb
push
inc
test
jo
mov
sub
xor
pop
cmp
and
subl
dec
xchg
jecxz
or
jae
dec
bound
pop
into
test
inc
dec
mov
xor
mov
test
test
xor
fcomps
push
cs
test
xchg
mov
mov
loopne
loopne
loopne
push
incb
push
inc
stos
sbb
add
add
mov
add
dec
push
push
add
dec
inc
sub
xor
out
push
clc
cmp
imul
mov
in
call
lea
scas
enter
clc
dec
jb
fs
adc
sub
add
int
cmp
pop
push
ljmp
jnp
pop
and
sahf
out
sahf
mov
jne
cmp
jmp
add
jbe
ja
out
cmp
js
jns
addr16
repz
js
jns
adc
shlb
outsl
cmp
fadds
add
inc
mov
add
outsl
rcr
repz
pop
jg
push
mov
aas
out
jge
rorb
js
push
rcrb
jnp
mov
or
loopne
sahf
out
cmp
outsb
adc
jle
mov
sarl
inc
add
mov
js
jo
mov
repz
add
lcall
add
sbb
out
sbb
xor
jnp
pusha
pop
decl
adc
pop
jae
fimuls
push
nop
add
pop
nop
sahf
shrb
and
push
rcl
sarl
xor
movsl
negb
or
pop
enter
ret
das
xor
push
pop
enter
jo
jb
pop
and
add
sbbl
lock
adc
add
cs
or
or
add
cs
adcb
das
mov
pusha
pop
in
sarb
in
lock
sbbl
add
jb
pop
and
and
enter
add
mov
and
enter
addb
pop
int3
dec
das
adc
enter
xor
pop
and
push
pusha
or
mov
das
movd
nop
nop
mov
in
and
sbb
xor
dec
jae
add
dec
enter
and
sahf
mov
jns
pop
aam
insb
aas
inc
xor
imul
inc
int3
ss
pop
or
and
and
jl
jb
dec
enter
cmp
cmp
fdivrl
xor
imul
in
jo
mov
sub
dec
jg
cmp
jbe
dec
ds
popf
fmuls
adc
clc
push
imul
pusha
pop
add
xchg
mov
sahf
insb
test
pop
ds
mov
mov
cli
add
ds
mov
push
ljmp
fimull
push
int3
pop
lds
rcrb
loop
mov
xchg
mov
imul
sub
js
xor
das
imul
push
sub
xchg
mov
xor
insb
jb
inc
lods
and
adc
fcoms
push
adc
jne
and
nop
imul
jbe
pop
xor
jb
jae
and
xor
pop
les
pop
aaa
push
mov
push
repnz
or
push
mov
in
sbb
lcall
fidivrs
adc
inc
push
push
sbb
and
fidivrs
or
inc
push
push
jp
cmp
xor
dec
lcall
push
sarb
mov
and
popa
data16
and
and
xor
jno
lret
sub
dec
dec
pop
xor
ljmp
xor
push
inc
push
pop
push
inc
push
dec
push
push
inc
or
dec
push
pop
movsl
mov
push
inc
inc
dec
adcl
mov
pop
inc
dec
imul
xor
subb
rolb
and
cmp
inc
mov
jno
and
ljmp
dec
inc
dec
inc
push
inc
inc
inc
and
and
jo
push
mov
sub
popa
mov
out
mov
sub
xor
imul
das
das
outsl
inc
insb
lea
lock
pop
push
andb
add
and
jo
add
pop
cli
mov
ret
in
test
sub
stos
loope
push
fistpl
add
xchg
adc
push
aaa
in
dec
nop
xchg
movsl
add
mov
aas
enter
addb
out
call
data16
push
outsb
out
jl
shlb
pop
jl
js
xchg
out
jo
inc
add
test
out
push
clc
lock
aas
mov
jae
mov
jo
mov
cld
ret
das
cmpsl
fnstenv
adc
sbb
jl
stc
fdivrl
cltd
pop
nopl
ja
add
add
add
cmp
mov
push
mov
add
pop
shll
add
push
mov
pop
pop
sub
push
or
fwait
iret
repz
xor
add
xchg
cmp
dec
insb
push
pusha
add
leave
sbb
ljmp
sub
ret
clc
or
lock
rolb
jns
add
pop
jg
out
push
xor
cmp
lcall
adc
xorb
shrb
dec
sbb
cmpsl
mov
lds
imulb
ficompl
cmp
add
push
push
repz
rcrb
pop
add
stc
inc
rolb
sarb
lock
add
fsubr
mov
adc
clc
sar
ret
xchg
movl
adc
ret
nop
and
mov
clc
cmp
enter
test
js
negl
andb
subl
lds
add
cmp
xchg
push
dec
ret
leave
movl
pop
add
inc
xchg
sub
dec
sbb
daa
or
push
enter
or
mov
adc
add
and
decl
cmpsl
out
add
clc
mov
or
sbb
xor
or
nop
lret
mov
daa
vmread
pusha
leave
dec
daa
mov
mov
push
xchg
mov
push
es
mov
lock
inc
push
mov
js
aas
inc
mov
adc
and
inc
pavgb
pop
add
inc
sub
rcr
mov
das
fadds
add
sti
in
insl
scas
mov
add
mov
mov
outsb
mov
negl
mov
lcall
mov
jnp
jo
cmpb
fnstenv
fwait
push
jg
pop
or
cltd
cs
bnd
sbb
fadds
lea
jg
mov
mov
pop
jnp
pop
pop
divps
pop
out
lea
js
lea
jle
iret
insb
ja
paddusw
pand
mov
bndstx
es
in
dec
stos
and
faddl
shll
or
xchg
mov
adc
aam
dec
add
gs
and
push
pop
xor
andl
add
cmp
insb
rclb
daa
lahf
daa
pop
or
out
jmp
aas
daa
xlat
shrl
pop
add
fwait
xchg
sub
dec
inc
out
testb
out
enter
pop
cmpb
sbb
adc
and
das
pop
xor
add
aaa
scas
or
add
add
lcall
jmp
shll
push
pop
sbb
cwtl
scas
lods
negb
das
pop
js
adc
scas
push
jge
lods
pop
bound
adc
sbb
scas
fs
push
sbb
or
pop
adc
test
sub
testl
mov
int3
xchg
pop
scas
xor
orb
scas
in
inc
or
das
ds
push
sti
dec
and
xor
inc
sub
mov
inc
scas
or
push
adc
add
iret
popl
repnz
cmovbe
jl
push
dec
andb
mov
mov
or
lret
mov
inc
mov
sbb
sub
dec
test
or
pop
faddl
dec
sub
ja
mov
xchg
or
cvtdq2ps
mov
pop
or
sbb
add
or
jo
fmuls
adc
mov
jbe,pn
outsb
sub
mov
mov
dec
push
fsubs
pop
mov
cmp
xchg
lret
pop
xchg
pop
aaa
or
ret
aas
ret
mov
add
jmp
or
fbstp
mov
or
inc
mov
jg
or
je
mov
mov
mov
xchg
sub
subl
ja
js
jbe
cltd
inc
xchg
sbbb
inc
mov
or
or
pushf
std
mov
idiv
inc
jp
jp
jae
mov
sbb
and
arpl
popa
insl
pushf
addb
pushf
fwait
jbe
pop
or
js
mov
ja
xor
or
or
or
mov
jnp
ja
xchg
or
testl
mov
rcr
or
adc
or
in
or
les
fiaddl
mov
xchg
mov
inc
inc
adc
punpckhwd
inc
sbb
mov
out
lods
and
popa
jae
push
inc
pop
in
into
mov
xchg
mov
mov
xchg
jg
loop
sub
adc
inc
sbb
jo
sarb
test
or
pop
pop
or
add
imul
cld
pand
sysret
pop
sbb
add
adc
xchg
mov
jnp
add
sbb
add
popf
and
lock
dec
add
mov
dec
pop
xor
out
rclb
sub
popl
insb
add
add
xor
mov
add
lock
mov
push
cwtl
sahf
daa
inc
pusha
push
fsubl
xchg
mulb
sub
subl
loopne
adc
lock
and
push
inc
iret
mov
addb
add
jbe
mov
and
mov
mov
or
jae
dec
pop
inc
sub
scas
adc
dec
mov
outsl
ja
jo
ja
lods
insl
imul
mov
or
add
or
into
inc
fsub
data16
popf
hlt
add
inc
lcall
and
das
xchg
add
or
popa
add
lock
pop
push
inc
or
aaa
jo
sti
cli
sbb
inc
sbb
fisttpll
addb
addb
rclb
ret
clc
aas
gs
xor
outsl
test
push
ds
psrad
or
lods
andl
sahf
push
repnz
out
out
pusha
dec
ficompl
adc
or
push
leave
jae
in
addb
add
faddl
fistps
adc
xchg
imul
mulb
idiv
mov
in
pushf
or
and
add
decl
sbb
inc
add
jnp
ja
sub
je
push
scas
mov
fmul
dec
and
negb
data16
out
push
xor
andb
or
outsl
pop
pusha
push
pusha
scas
clc
jbe
mov
pop
inc
cwtl
mov
add
out
fidivs
xor
push
jg
sbb
addr16
cmp
xchg
clc
xchg
mov
push
add
lret
inc
jmp
dec
pop
fidivrs
ret
push
testb
mov
inc
push
mov
fnstcw
fiadds
pop
scas
cmp
loop
std
ficomps
sbb
mov
xchg
std
add
adc
rorl
icebp
mov
loop
push
jg
lea
mov
push
or
or
jge
mov
ret
xchg
mov
neg
and
pop
clc
mov
test
cmpl
lret
or
inc
pop
fidivs
pusha
sbbb
add
mov
sbb
sbb
insb
dec
das
insl
xor
data16
sbb
mov
and
mov
jnp
cs
das
subl
ja
and
cmp
adc
mov
das
lret
cmpsb
popf
mov
int
add
das
cmp
sbb
neg
fldcw
push
dec
push
das
mov
jbe
fcomps
ljmp
outsl
popa
mov
pop
mov
repz
outsb
insb
cmp
in
mov
popa
outsl
popa
pop
fadds
das
mov
ficoml
pop
das
jg
or
mov
out
mov
shrl
lcall
subl
adc
sub
lods
fnsave
inc
jg
add
or
int3
das
mov
testl
int
push
jae
sub
das
jmp
mov
and
push
pusha
jnp
jge
out
pop
jg
jo
popa
orl
mov
jmp
push
lcall
dec
pop
dec
xor
pop
clc
pushf
and
cmp
inc
test
lock
jg
adc
push
cmp
int
sub
das
or
cmpsb
inc
mov
mov
fildl
out
mov
imul
and
fidivl
mov
push
iret
lcall
add
testl
mov
push
pop
pop
or
aas
xor
cltd
daa
or
je
push
xchg
xchg
cs
fwait
sbb
push
movsb
add
push
push
push
inc
enter
pop
inc
lahf
out
xor
outsb
pop
push
push
or
jmp
xchg
and
dec
xchg
ja
xchg
or
mov
or
or
scas
orb
out
outsl
dec
push
xchg
pop
arpl
adc
cwtl
dec
mov
mov
sub
andb
and
fcompl
dec
mov
ret
and
aaa
mov
inc
cli
fs
orb
add
cwtl
jmp
je
push
xorl
orb
lock
js
inc
daa
or
pop
cs
sub
out
sti
or
push
jae
adc
mov
cld
sti
insl
mov
add
jae
fcoms
fs
mov
add
inc
dec
mov
dec
add
faddl
stos
mov
and
frstor
xchg
pop
push
arpl
mov
stos
jecxz
add
or
mov
dec
push
sub
ds
ss
inc
jne
inc
xorb
andl
add
xor
aaa
aam
ss
ss
cmc
aaa
dec
add
outsb
cmc
adcb
divl
add
das
notl
out
and
out
sub
mov
fiadds
add
lcall
adc
and
push
or
jge
into
xchg
jnp
adc
lods
sub
sub
dec
pushf
pop
pop
push
bound
sbb
cmp
push
lret
dec
inc
stc
in
dec
xor
cld
pop
gs
daa
daa
inc
push
dec
pop
add
sahf
xchg
inc
cs
add
jns
fisttpll
pop
rclb
cmpsl
nop
pop
outsb
inc
fcoml
push
mov
fdiv
fs
push
inc
idiv
or
inc
rcr
pop
add
push
and
jo
add
mov
fcompl
xlat
xchg
or
mov
mov
sbb
xchg
add
mov
test
add
add
and
xor
mov
inc
add
dec
movl
jle
adc
outsb
js
mov
dec
movsl
dec
jmp
mov
xor
pop
cmpsl
mov
adc
push
cld
es
add
xchg
add
jmp
lret
in
sarl
sub
adc
sub
xlat
iret
adc
xor
xchg
push
sbb
add
pop
pushl
bound
mov
pop
fisttpll
sub
cs
or
and
pop
cmp
cmp
and
jbe
jo
orb
test
xor
cmc
shl
test
add
xlat
and
adc
out
shlb
cmp
inc
dec
iret
xor
testb
xchg
xchg
dec
bound
into
xor
lcall
jmp
push
and
xor
xchg
jne,pt
mov
push
push
dec
dec
sahf
lret
xor
lret
jae
cmpsl
add
testl
fildll
push
mov
and
push
fdivrl
xor
inc
add
jae
negl
xlat
insb
push
pop
jo
test
and
and
xor
dec
sub
ljmp
testl
out
pop
dec
add
cmp
dec
adc
dec
xchg
mov
push
push
mov
lret
imul
testl
jbe
jg
rolb
cltd
lcall
pop
add
inc
mov
pop
fistl
ja
jle
inc
pop
sbbb
add
push
mov
push
pop
loop
push
cld
movsl
push
popa
ljmp
das
out
loope
movsl
cmpsb
das
push
pop
out
jle
mov
lock
push
aam
das
and
repnz
loope
and
lock
shrb
pusha
or
sub
mov
add
inc
xor
outsl
xchg
jbe
mov
inc
jmp
push
jo
or
jo
or
dec
cltd
fsts
jecxz
scas
mov
orl
inc
sahf
out
inc
push
cmp
xlat
dec
rorl
fcmovb
mov
scas
cmp
mov
lock
mov
cmpsl
mov
adcb
jnp
iret
pop
fiaddl
ds
jle
addr16
push
inc
enter
push
lcall
cmp
push
or
add
xchg
cmpsb
mov
dec
jo
inc
rorl
jb
and
inc
inc
sti
mov
inc
inc
stos
add
jecxz
sbb
ds
outsb
jg
xchg
mov
lods
lahf
jmp
dec
sarl
jg
xor
fcoms
lret
push
ret
movsl
xchg
mov
pop
lcall
ljmp
or
xchg
into
and
inc
push
push
sbb
cwtl
lret
dec
ret
sbb
push
filds
inc
add
or
jmp
mov
mov
insl
push
pop
in
mov
sub
sar
mov
xor
push
lods
sub
fbstp
pusha
sub
jp
pop
enter
xchg
mov
ficomps
pop
mov
mov
push
loop
adc
add
or
pop
mov
xchg
repz
addr16
les
cmp
pop
ret
and
jle
jno
loopne
daa
lahf
inc
ds
inc
push
adc
pop
addb
enter
call
lcall
rep
packsswb
push
das
or
testl
das
xlat
add
lods
adc
outsl
dec
push
adc
imul
movsb
adcl
inc
jno
lcall
add
addr16
pop
fwait
or
push
sub
jmp
ret
shll
outsl
xchg
push
push
outsl
sbb
pop
sbb
sahf
mov
movl
adc
aaa
movl
cmp
push
inc
cmpsb
push
cmp
into
mov
roll
testb
loop
push
mov
and
or
es
pop
enter
jnp
outsl
push
dec
mov
dec
jge
fs
sub
ja
lahf
mov
push
xchg
sub
insl
inc
aas
pop
xchg
loopne
push
cs
test
push
dec
or
or
stos
ret
mov
cli
hlt
mov
arpl
or
iret
and
sub
popa
push
mov
pop
mov
pop
dec
sbb
push
mov
mov
pop
out
adc
inc
mov
push
out
jbe
jbe
in
rorb
cmp
pop
mov
dec
xchg
dec
pop
dec
push
jge
adc
xchg
fs
inc
lock
iret
jg
sbb
fisttpl
add
imul
cmp
pop
jb
pusha
aaa
dec
repz
push
push
into
in
or
dec
and
push
pop
cmp
mov
out
push
loopne
pop
push
aas
xchg
dec
sub
push
ret
ficoms
cmp
xchg
iret
test
call
mov
add
xchg
pop
or
push
sbb
decl
pusha
add
or
bound
push
fistpll
das
dec
pop
pusha
mov
ss
cwtl
flds
nop
outsb
push
aad
jbe
sub
test
push
mov
push
insl
mul
data16
xchg
mov
xchg
in
dec
cmpsb
out
mov
mulb
out
pop
sahf
dec
gs
xor
mov
pop
sbb
xor
mov
mov
pop
dec
pop
cmp
push
sub
cmpsb
dec
cwtl
out
pop
ljmp
lcall
dec
jp
cmpsl
cwtl
xor
mov
addb
cs
mov
lret
push
cmpb
jge
jae
pop
aaa
ja
mov
nop
xchg
addl
jp
pop
and
insb
in
aas
repnz
pop
add
pop
pop
outsb
jecxz
das
mov
inc
push
push
call
cwtl
push
stos
dec
int
sbb
fs
jbe
adc
clc
jbe
push
and
aaa
mov
into
push
push
xor
incl
sbbb
jnp
fwait
rorb
lcall
fildl
int3
loop
repz
xchg
push
push
bound
adc
nop
mov
xchg
das
jle
xor
push
jae
orl
jle
fimuls
shr
jb
xor
xchg
jmp
fisubl
pop
pop
cmp
push
out
pop
mov
rcrb
jl
mov
pop
pop
dec
jb
addr16
ja
cs
jbe
jge
mov
mov
mov
inc
sbb
and
fst
mov
pop
imul
xchg
mov
ficompl
dec
dec
push
pop
dec
int3
mov
sbb
dec
lahf
scas
lret
int
cmp
jnp
and
nop
jmp
lock
xchg
add
cli
xor
or
or
das
adc
jg
gs
addr16
add
imulb
sti
aam
gs
push
jae
lea
pop
das
dec
sbb
mov
outsb
cwtl
sub
dec
popa
jp
cmp
sbb
mov
pop
outsl
addr16
xchg
mov
outsl
mov
push
out
lea
push
in
ss
sub
inc
and
js
xchg
fdivs
lcall
pop
pop
mov
das
stc
pop
xor
mov
sbb
cmp
sbbl
jle
jbe
aad
cli
push
dec
mov
cltd
push
addr16
or
push
or
ljmp
add
jg
neg
push
stos
aaa
add
rcll
jne
pop
outsb
mov
add
or
sub
arpl
add
push
gs
add
stos
jns
daa
mov
mov
mov
dec
or
mov
cmp
push
pop
scas
nop
mov
das
xchg
arpl
and
lods
mov
out
xorb
inc
mov
xorb
jo
cmpsb
and
jo
or
dec
cmpsl
push
jb
push
pusha
pusha
subl
add
jmp
pop
test
fmull
pop
addr16
pop
push
mov
push
add
inc
add
dec
add
mov
out
cs
add
or
cmp
mov
xchg
jbe
push
xor
fnstsw
add
jle
jo
pinsrw
push
add
push
addb
call
cmp
adc
push
out
adc
sbb
pop
cmp
pop
or
in
lahf
pop
xor
xchg
sbbl
es
sub
shrl
lret
jo
sub
pop
movsl
bound
pop
punpckhwd
push
and
fisttpll
lea
add
xor
xchg
out
jbe
push
mov
xchg
out
jp
mov
or
sbb
arpl
or
push
xor
daa
and
push
jnp
stos
subl
ds
pushl
mov
movsb
insl
popaw
mov
or
pop
in
push
fs
and
jmp
add
inc
sub
push
sbb
mov
xchg
and
aad
mov
add
sbb
add
sub
in
inc
and
adcl
sbb
add
imull
inc
add
xchg
xchg
inc
add
loop
icebp
cs
scas
pop
or
stos
popf
cmpsb
adc
pop
ret
mov
jne
inc
push
add
mov
sbb
lgdtl
xor
ja
fwait
add
shr
insl
adc
repnz
outsl
inc
jl
jbe
pop
pop
cmp
xor
or
or
pop
insl
xchg
sbb
rcr
inc
clc
mov
jb
pop
or
incb
pop
inc
dec
arpl
jo
ret
outsl
adc
mov
mov
data16
test
sahf
add
pop
or
add
mov
imul
dec
adc
testl
mov
push
add
add
add
rcr
lcall
xchg
jbe
jg
sub
imul
pop
loope
jmp
add
das
xchg
add
jo
loop
addr16
dec
dec
push
call
cmpsl
add
das
jns
ja
push
jne
popa
jp
mov
xchg
sub
add
jb
xchg
mov
stos
and
cmp
aas
sbb
ds
xchg
add
mov
insl
mov
sbb
pop
adc
jg
inc
mov
xor
xor
icebp
pushl
loopne
ljmp
xor
xor
xor
xor
xor
mov
xor
jge
xchg
cltd
xor
xor
xor
push
xor
xor
xor
inc
xor
xor
xor
cmpsl
aaa
adc
ds
add
inc
xchg
int3
decl
aas
mov
in
aas
mov
push
mov
xchg
xor
xor
aad
lock
xor
cmpsb
mov
or
xor
xor
icebp
jmp
xor
xor
loopne
cmp
insl
cmp
sarl
xchg
std
ljmp
xor
xor
fwait
xor
xor
xor
repnz
mov
dec
aaa
push
aaa
mov
cltd
aaa
aaa
aaa
or
jmp
cmp
cmp
insl
cmp
cmp
cmp
cmp
cmp
xor
cmp
cmp
incl
lds
sarb
fdivrl
clc
cmp
cmp
cmp
cmp
pusha
cmp
mov
cmp
cmp
loopne
incl
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cs
flds
clc
ret
incl
xor
xor
xor
xor
xor
ljmp
lret
mov
xor
xor
xor
xor
xor
add
sar
pushl
xor
push
bound
add
cmp
test
fnstenv
ljmp
aaa
xor
pop
aaa
je
jle
cmpl
and
ljmp
xor
or
sbb
xor
call
xor
xor
xor
xor
xor
xor
xchg
xor
out
xor
xor
xor
xor
xor
xor
xor
xor
lcall
inc
daa
xor
jb
mov
hlt
pop
add
outsl
outsb
sahf
lods
ss
ss
sbb
cmp
jns
pushl
xorl
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
ud0
cmp
cmp
ret
cmp
cmp
push
cmp
cmp
dec
bound
cmp
cmp
cmp
cmp
cmp
ds
aaa
movsl
or
add
cmpsl
push
cld
pop
add
loop
in
xor
in
xor
aas
clc
stc
xor
jo
xor
xor
xor
adc
push
xor
xor
xor
xor
xor
jge
nop
xor
clc
ss
cmp
aas
repnz
fidivs
cld
loope
push
xor
or
and
aaa
sub
ficompl
cmp
pushl
mov
cli
aaa
pop
cmp
jge
lcall
cmp
cmp
test
into
cmp
ljmp
cmp
cmp
cmp
mov
cmp
cmp
lock
cmp
cmp
in
call
cmp
loop
sub
aaa
aas
addr16
jb
addb
cld
das
call
xor
cmp
xchg
xchg
xor
ret
lcall
sbb
cmpsl
xor
ss
cmp
cmp
cld
decl
cmp
cmp
sub
cmp
cmp
cmp
pushf
cmp
jg
outsl
jp,pt
xchg
ds
ds
or
inc
aas
dec
aas
retw
clc
lcall
xor
xor
xor
xor
xor
jg
mov
loopne
lds
push
jl
ss
mov
mov
add
gs
cmp
xchg
cmp
cmp
cmp
cmp
cmp
ja
xchg
cmp
incl
cmp
cmp
cmp
cmp
push
xlat
cmp
cmp
cmp
cmp
adc
mov
xchg
lahf
mov
cmp
mov
pop
or
ss
mov
fbstp
aaa
enter
mov
xchg
stos
cmpsl
rcrb
pop
cli
xor
xor
xor
decl
cmp
cmp
cmp
out
ss
jp
mov
fisubl
pop
xor
fsubp
mov
push
cmp
pop
cld
gs
lock
xor
mov
xor
xor
xor
xor
ss
aaa
adc
cmp
arpl
call
cmp
cmp
rol
pop
scas
dec
cmp
cmp
cli
mov
lea
cwtl
aas
loopne
mov
pop
xor
jg
jmp
xor
and
xorb
xor
xlat
das
xchg
mov
adc
cmp
jl
xchg
mov
jg
ja
mov
lds
jmp
cmpsb
cmp
push
mov
cmp
cmp
xchg
call
cmp
cmp
cmp
cmp
cmp
cmp
popf
ljmp
jp
cmp
cmpl
ds
ds
and
inc
aas
aas
ljmp
clc
fnstsw
call
inc
add
cltd
xor
xor
mov
pushl
xor
xor
xor
xor
xchg
cwtl
xor
jg
insl
jecxz
xor
pop
and
add
sbb
sbb
and
aas
cld
xor
stos
xor
ss
bound
sbbb
repz
mov
aaa
int
shrl
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
scas
dec
cmpsb
xor
xor
xor
xor
push
ljmp
push
ss
ss
ss
sarb
aaa
repnz
incl
cld
incl
cmp
cmp
cmp
imul
cmp
cmp
test
outsl
clc
imul
cmp
cmp
cmp
adc
jg
inc
add
xor
xor
xor
xor
xor
inc
cld
cmpsb
pushl
cmp
insb
cmp
cmp
cmp
leave
cmp
push
cld
pop
adc
cmp
inc
push
cmp
lods
cli
repz
aas
outsl
mulb
add
xor
ss
jg
pop
xor
push
xor
xor
xor
mov
xchg
ss
inc
aaa
inc
push
cmp
inc
idivb
and
call
popa
aas
fiadds
and
mov
push
xor
push
das
clc
pushl
sub
push
xor
xor
xor
xor
mov
add
loopne
cli
ljmp
xor
jb
popf
xor
xor
xor
mov
xor
xor
xor
cli
mov
cmpsb
xor
cmp
xor
xor
xor
xor
aaa
cld
out
push
xor
xor
xor
xor
xor
jo
je
js
clc
or
incl
mov
nop
ss
ss
dec
mov
sub
lds
bound
aas
ret
mov
cmp
stos
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
ja
repz
cmp
cltd
cmp
jnp
mov
mov
cmp
cmp
cmp
cmp
aas
test
enter
loopne
scas
add
or
xchg
and
xor
xor
xor
xor
add
xor
xor
xor
xor
xorb
inc
xor
in
jmp
mov
aaa
sbb
cmp
cmp
orb
cmp
cmp
cmp
shrb
das
ds
loop
jp
ds
loop
mov
hlt
aas
clc
pop
test
xor
pusha
xor
fwait
mov
xor
xor
xor
push
rcrb
lock
sti
xor
mov
mov
xor
clc
jecxz
or
push
cmp
cmpb
fcomip
jmp
inc
cmp
cmp
cmp
icebp
cmp
imul
out
push
jl
pusha
dec
xor
xor
push
xor
sbb
shll
xor
add
ss
adc
divl
and
sub
inc
aaa
pop
aaa
bound
mov
movsb
aaa
mov
dec
dec
cmp
test
das
cmp
cmp
pop
cmp
push
imulb
cmp
cmp
mov
ds
std
push
inc
aas
push
and
xchg
pop
xchg
dec
or
std
push
std
xor
mov
movsl
xor
xor
leave
cli
pop
mov
cmp
pop
cmp
jl
data16
jl
inc
inc
loopne
in
xor
mov
or
jge
int3
cmpsb
xor
repz
ret
jb
xor
xor
xor
xor
push
pop
orb
lods
push
mov
cmp
xor
xor
xor
mov
xor
add
ret
hlt
xor
lret
or
push
push
xor
and
lret
incl
xchg
dec
xor
pusha
xor
jbe
jle
xorl
xchg
outsb
popf
sub
mov
inc
xor
inc
jbe
out
sbb
pop
aaa
aam
ja
pop
in
adc
pusha
cmp
fistpll
add
cmp
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jl
push
ds
ds
dec
or
jg,pn
outsb
lods
add
xchg
lea
xchg
xor
xor
fnstenv
fidivs
jecxz
call
push
xchg
ljmp
xor
decb
adc
xor
dec
sub
das
xor
cmp
hlt
call
push
push
xor
pop
xor
imul
xorb
incl
xor
scas
xor
xor
mov
lret
outsb
fidivl
fbstp
in
jmp
xor
ljmp
sub
adc
sbb
and
and
cmp
das
fidivrl
xor
pusha
xor
call
ljmp
jns
jle
xorl
xor
xchg
push
lahf
xor
test
shlb
xor
sahf
xlat
ja
cmp
inc
jecxz
lock
xor
push
push
xor
bound
push
xor
xor
xor
lret
loopne
push
mov
dec
inc
ljmp
cld
pop
sub
push
outsl
xor
jge
xor
adc
cmpsb
push
mov
mov
mov
or
xor
xor
xor
xor
xor
xor
push
add
pop
cld
hlt
xor
xor
push
lea
cmpsb
jae
fbstp
push
ss
ljmp
sar
js
xchg
aaa
mov
xchg
cmp
fidivrs
clc
cmp
cmp
cmp
call
cmp
cmpl
cmp
cmp
es
ds
sbb
and
dec
pop
cmpb
xor
xor
xor
xor
xor
xor
jbe
cmpsb
xor
cmp
mov
ds
jo
push
aas
int
imull
data16
rorb
xor
mov
loope
setb
outsb
lcall
mov
divl
xor
xor
pop
jl
aaa
sub
aaa
xchg
aaa
aad
sti
aaa
push
cmp
jo
and
xor
inc
cmp
cmpb
ds
icebp
int
loopne
mov
push
mov
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
lcall
jbe
lea
cmp
mov
cmp
push
pusha
xlat
ds
scas
ds
outsb
mov
lds
push
shl
sbb
or
mov
cmpsb
ret
ljmp
cmpsb
xor
mov
cwtl
xor
cmp
dec
cmp
cmp
pop
cmp
cmp
cmp
sub
xor
cmp
cmp
inc
cmp
push
cmp
pop
cmp
test
ret
cmpb
decl
cwtl
loop
cmp
lods
cmp
cmp
mov
cmp
sarb
fdivrl
mov
inc
hlt
xor
ds
cli
call
push
xor
stc
xor
sbb
xor
xchg
xor
ss
push
cmpsl
das
out
inc
loopne
add
cmp
jmp
cmp
cmp
xchg
cmp
mov
and
mov
repnz
fwait
incl
mov
mov
aas
or
adc
cmp
dec
adc
aas
mov
mov
jmp
push
mov
xor
xor
xor
divl
and
pop
xor
mov
scas
shll
ja
scas
repnz
xor
ss
mov
xor
repnz
mov
lock
jg
push
daa
cmp
cmp
cmp
cmp
push
cmp
les
cmp
cmp
mov
adc
sbb
dec
movsb
ss
ds
aas
jmp
out
call
sbb
pushf
inc
stos
xor
inc
adc
out
call
pop
mov
xor
xor
xor
xor
push
aas
push
mov
push
inc
test
xor
addl
push
cmp
mov
outsb
inc
or
sbb
fdivrs
fdivrl
loopne
mov
std
cmp
cmp
cmp
push
jbe
cmp
sbb
cmp
cmp
into
push
ds
ds
ds
ds
ds
test
jl,pt
pop
aas
pop
imul
mov
mov
dec
les
enter
mov
xor
loop
xor
xor
or
adc
mov
ljmp
pop
scas
xor
test
mov
out
adc
mov
sbb
ss
sub
ss
cmp
inc
ja
incl
lcall
push
ss
ss
loop
ss
sbb
mov
sarl
cmp
cmp
mov
cmp
cmp
inc
cmp
sbb
mov
jb
dec
inc
es
fwait
aam
mov
xor
inc
xor
push
hlt
lds
call
xor
in
xor
sub
clc
xor
clc
lahf
mov
aaa
push
cmp
and
rclb
pop
pop
xor
xor
pop
sti
xor
mov
clc
xor
mov
or
jl,pn
scas
push
lock
nop
loope
inc
clc
push
push
add
mov
orl
ss
xchg
xchg
pop
jo
das
inc
mov
cmp
cmp
cmp
mov
aam
fdivrs
fdivrl
loopne
in
call
cmp
pop
je
fmul
pop
adc
cmp
jbe
pop
lods
pop
cmp
ljmp
lret
xor
cmp
cmp
cmp
cmp
repnz
clc
mov
cli
or
adc
adc
sbb
sbb
and
aas
sub
xor
xor
cmp
inc
bound
and
sub
pop
xor
aas
les
into
filds
add
xor
cmpsl
dec
cmp
add
xchg
xor
testb
xor
jo
out
xor
xchg
inc
xor
shlb
rcll
incb
adc
xor
lds
sub
aaa
mov
jno
mov
lret
push
mov
cmp
out
cmp
cmp
inc
xchg
xchg
stos
pop
jg
es
add
sahf
inc
incl
insl
aas
mov
test
fnstcw
loope
pop
test
inc
inc
add
xor
fnsave
outsb
pop
sbb
test
mov
xchg
lods
ss
jbe
dec
jg
or
enter
push
cmp
test
cli
mov
cmp
cmp
jle
inc
inc
decl
cli
adc
push
add
xor
pop
xor
mov
xor
mov
sub
adcb
xchg
xor
js
test
xor
xor
push
lret
shlw
rorb
push
mov
loopne
add
push
cs
add
es
mov
cmp
xor
insb
or
xor
xor
into
nop
xor
xor
scas
les
push
xor
xor
xor
xor
bound
decl
aaa
ljmp
frstor
cmp
cmp
out
or
xchg
ljmp
inc
cmp
std
xchg
dec
ds
loopne,pt
clc
jg
cwtl
ds
jecxz,pt
pop
sbb
aas
fs
cmpb
push
push
mov
jo
xlat
push
xor
xor
xor
dec
xor
and
xor
xor
xor
mov
push
je
test
sahf
cmpsb
outsb
incb
out
mov
xor
xor
xor
xchg
mov
aaa
jae
xchg
fcomip
mov
mov
cmp
cmp
cmp
mov
xor
cmp
mov
mov
out
adc
jnp
and
push
subl
int
or
and
jne
das
sbb
lcall
cmpsb
hlt
xor
add
adc
sbb
push
mov
dec
push
ja
loopne
in
in
repnz
mov
mov
cmp
loop
notb
cmp
cmp
cmp
lea
mov
mov
lcall
push
nop
cwtl
es
xor
xor
or
xor
mov
sbb
pop
dec
pusha
xor
adc
idivb
cli
cmp
cmp
cmp
cmp
test
out
sbb
bound
mov
cmp
pop
cmp
sbb
imul
cmp
xchg
aas
ljmp
add
xor
lea
cs
pop
fwait
movsb
aas
jmp
dec
xor
inc
pop
cmp
push
mov
dec
aaa
push
fiaddl
cmp
fnstenv
scas
sarb
mov
cmp
cmp
cmpsl
les
out
pushf
cmp
push
mov
in
das
add
pop
xchg
mov
mov
inc
test
adc
nop
xor
mov
inc
xor
adc
dec
xor
shlb
int
stos
ret
and
adc
lret
ss
pop
insl
test
repnz
sbb
cs
es
test
push
in
add
lcall
cmpsb
aaa
mov
pop
inc
cmp
fdivrp
mov
cmp
pop
cmp
cmp
cmp
push
cmp
push
test
iret
sbb
imul
mov
pop
idiv
cmp
cmp
cmp
fsubs
cmp
pop
xorb
adc
mov
aad
gs
mov
and
pop
xor
xor
mov
sbb
push
int3
cmp
jp
cmp
cmp
loope
inc
cmpsl
xor
cmp
rorb
not
mov
cs
into
jg
mov
cmc
cmp
fnstsw
mov
push
adc
ja
jg
fnstenv
mov
cmp
cmp
sahf
jle
aaa
sub
lea
cmp
cmp
data16
cmp
dec
into
add
pop
cmp
cmpl
xchg
pop
push
inc
subb
jle
push
and
xchg
ds
sbb
inc
test
push
imul
push
lahf
or
mov
xor
xor
push
xchg
mov
in
mov
decl
xor
divb
pop
cmp
lods
cmp
cmp
lcall
lcall
lcall
data16
xor
mov
xor
sahf
adc
adc
scas
push
pop
lcall
inc
cmp
pushf
cmp
jmp
ds
loop
adc
sub
sti
sub
fdivrl
mov
sub
xchg
push
cmp
cmp
jle
ds
pushl
ds
popa
lods
ds
mov
mov
das
and
gs
sbb
inc
aaa
xchg
aaa
int3
aaa
stc
aaa
dec
cmp
cmp
mov
cmp
cmp
pop
scas
cmp
outsl
rolb
ss
push
xchg
cmp
cmp
cmp
fistps
mov
ds
or
add
sbb
ret
xor
repz
ss
mov
loope
xchg
popa
cmp
xchg
xorb
or
clc
or
jno
jnp
ja
mov
xor
mov
xor
xor
icebp
ja
ret
dec
out
push
add
and
mov
sub
arpl
cmp
dec
outsb
inc
pop
hlt
jg
push
push
add
shll
jae
pop
sbb
push
cmp
pop
test
and
incl
cmp
pushf
cmp
mov
lcall
mov
pop
ljmp
dec
add
add
mov
xor
push
jp
je
cli
mov
gs
icebp
rorb
xchg
cli
ljmp
jle
ss
ss
fnstenv
clc
aaa
test
push
mov
jg
and
sub
pop
cmp
mov
sbbb
jbe
loope
cmp
push
aas
or
adc
jb
lcall
xor
cmp
cmp
jns
jmp
jp
cmp
popa
cmp
cmp
aaa
test
cmp
cmp
std
cmp
dec
ds
mov
dec
mov
push
push
xor
xor
fbld
ss
aaa
add
leave
jb
cmp
sbbb
dec
jbe,pt
test
sub
xor
andb
divb
xchg
xor
jo
lock
adc
ss
pop
cmp
into
lea
bound
xor
push
xchg
push
mov
test
ja
xchg
mov
inc
int3
xor
push
fdiv
loopne
mov
call
push
dec
mov
xor
xor
ss
mov
je
outsb
and
cmp
push
scas
add
nop
mov
cmp
pop
dec
ds
push
call
ds
ds
pop
out
mov
and
stc
xor
xor
lahf
xchg
jge
add
jecxz
add
out
or
ss
adc
jecxz
cmc
ss
es
mov
aaa
pushf
jbe
ret
or
adc
imul
cmp
cmp
cmp
cmp
push
cmp
stos
cmp
cmp
or
popf
jp
pop
ret
push
inc
xor
loope
pop
cmc
pop
mov
xor
xor
push
pop
lods
std
xor
loop
ret
je
push
fisttps
mov
aaa
xchg
aaa
mov
js
push
cli
push
pop
lret
cmp
cmp
cmp
pop
pop
push
jmp
push
xor
fnsave
jl
jbe
stc
cmp
push
ljmp
cmp
cmp
and
cmp
cmp
cmp
test
loopne
mov
xchg
data16
sarb
xor
pop
xor
cs
mov
mov
imul
mov
lcall
aaa
dec
cmp
cmp
cmp
cmp
dec
push
movsl
sbb
pop
dec
add
jle
sarb
test
mov
jge
adc
stc
cmp
mov
mov
lock
xor
les
lcall
outsb
xchg
xor
sub
xchg
push
lods
push
shr
out
inc
ss
xor
test
xchg
xchg
psubd
cs
xor
ss
and
xorb
push
and
popa
cli
jmp
cmp
cmp
fnstsw
cmp
mov
mov
cmp
cmp
push
sub
andl
repnz
pop
mov
cmc
push
pop
inc
and
dec
and
add
aas
push
cli
inc
cmp
movsb
push
xor
repz
pop
outsb
sub
stos
jmp
add
aad
cld
bound
loope
cmp
pop
rclb
ss
xchg
mov
cmp
inc
je
cmp
xlat
aaa
fnsave
cmp
inc
cmp
call
nop
push
add
movsb
aaa
ljmp
test
mov
dec
cmp
cmp
mov
test
stos
cmp
loopne
cmp
mov
cmp
sahf
add
es
aam
clc
sub
iret
test
and
pushl
cmp
and
and
sub
sub
push
rcll
fs
and
addr16
stos
lahf
jle
xor
aam
sti
jmp
std
xor
or
aas
test
mov
xor
xor
dec
jbe
call
and
xchg
or
hlt
pop
add
bound
xor
jbe
xor
xchg
jle
adc
adc
push
out
pop
ss
push
rclb
dec
pop
adc
mov
pop
aaa
gs
aaa
jmp
push
aaa
pop
xor
jl,pn
jmp
cmp
cmp
fdivrs
pop
push
sar
clc
sub
cmp
inc
jb
cmp
cmp
mov
cmp
cmp
cmp
addr16
mov
push
cmp
es
xchg
into
mov
sbb
xor
into
push
out
pop
test
subb
ds
loopne
mov
adc
ds
out
rclb
mov
fists
or
shlb
xchg
cmpsb
or
xor
gs
ljmp
add
jns
add
stos
jo
push
scas
cmp
jmp
outsb
add
aas
xor
inc
arpl
stos
or
or
roll
mov
icebp
cmp
cmp
jp
cmp
cmpl
sub
cmp
out
cmp
cmp
jno
mov
cmp
out
push
cmpl
push
fistpll
add
and
push
ret
ret
es
xor
xor
mov
cs
xor
test
shrb
push
out
jb
push
inc
incl
xor
xlat
push
sarb
pop
inc
aaa
push
stos
fimuls
rolb
adcl
adc
out
jb
or
add
jl
fwait
notb
cmp
pop
cmp
cs
out
inc
hlt
sub
aas
push
aas
sub
dec
subb
mov
or
shll
inc
pop
pusha
inc
add
xor
adc
sub
add
cmp
inc
xor
xor
pop
xor
out
rorb
push
xor
jl
loopne,pn
movb
adc
stos
push
out
mov
mov
bound
scas
idivb
out
adc
push
rorb
cli
daa
cmp
cmp
cmp
ja
call
cmp
cmp
cmp
mov
js
sarb
xor
mov
or
stos
test
cmp
mov
fimuls
subl
sbb
add
adc
push
aam
push
mov
mov
stos
ds
jg
lock
fwait
cmp
cmp
cmp
cmp
stos
mov
cmp
cmp
sahf
cmp
jmp
cmp
adc
or
inc
mov
fiaddl
dec
dec
rorl
push
insb
test
xor
add
mov
mov
lcall
ficoms
cld
arpl
xchg
xchg
dec
mov
sub
add
mov
adc
cli
ret
dec
lret
sub
xchg
xchg
mov
mov
pop
cmp
cmp
cmp
nop
loopne
push
inc
push
push
or
clc
jmp
push
push
xlat
xor
xor
xor
xor
xor
xor
and
jp
repnz
sbb
sub
ss
sub
jo
xchg
add
add
out
aaa
push
add
ljmp
std
cmp
cmpsl
cli
loope
xor
cmp
mov
mov
push
push
push
mov
lret
add
push
fisttps
mov
icebp
out
adc
xorl
cld
cmpsl
out
divw
lret
outsl
insb
ss
cmp
or
cmp
jb
loopne
add
mov
mov
xor
pop
decb
mov
push
xor
jl
imul
test
mov
inc
mov
clc
stos
sub
dec
lret
bound
imul
enter
lods
cmp
or
adc
push
sub
ds
cmc
roll
adc
cltd
xor
adc
mov
negb
ficomps
loopne
or
iret
js
jo
mov
imul
mov
rcrb
cmp
cmp
cmp
cmp
cmp
loopw
fstpt
pop
inc
call
jp
push
add
xor
add
push
push
inc
jae
loope
in
xor
xor
andb
xchg
inc
pop
les
mov
in
xor
xor
add
jmp
cmp
cmp
daa
cmp
bound
lods
aas
mov
movl
add
rcrb
rcrb
xor
pop
xor
push
jne
push
dec
jp
ret
ss
jns
and
stos
loop
cmpsl
push
sbb
stos
inc
pop
sbb
and
fmuls
scas
inc
add
aaa
aaa
fdivs
loop
cli
fmulp
xor
dec
ret
aaa
dec
sub
test
popl
push
and
xchg
xor
hlt
adc
xor
ss
lods
aaa
out
addr16
cmp
sub
ljmp
cmp
cs
add
ljmp
lods
mov
mov
push
test
pop
aaa
arpl
add
adc
cmp
ljmp
cmp
push
cmp
mov
cmp
loop
out
adc
jg
mov
data16
cmp
cmp
cmp
cmp
inc
dec
inc
out
inc
ds
ds
test
add
xchg
cmpl
lret
mov
aas
xor
xchg
lret
cs
ss
push
jge,pt
into
xor
xor
lret
fdivs
data16
or
mov
aam
cmpsb
loop
jbe
mov
rclb
xor
pop
subb
lret
mov
mov
addl
pop
jo
into
idivl
cmpsl
pop
cld
outsb
rorb
popf
call
push
jns
shll
xor
mov
fildll
rolb
scas
jle
xor
ja
ljmp
fildll
jp
ficoml
pop
xor
inc
xor
add
aas
inc
test
xchg
bound
xor
xor
dec
add
add
repnz
in
jmp
adc
push
xor
ja
ss
ja
ja
xchg
inc
aaa
push
or
ret
out
aaa
or
call
cmp
je
ds
notb
aaa
dec
loope
or
dec
out
pop
inc
and
add
cs
pop
les
cmp
cmp
orl
xchg
mov
pushf
cmp
ljmp
xchg
cmp
lret
pusha
push
pop
mov
aad
es
out
mov
out
xor
pop
xor
das
xor
mov
add
mov
and
jle
xor
mov
xchg
or
jo
aaa
jnp
fisttpll
sarb
jbe
scas
mov
test
sbb
dec
in
call
xor
incb
push
mulb
aaa
push
mov
dec
ret
cmp
xchg
cli
mov
addr16
cmp
cmp
pop
or
or
fwait
xchg
shrb
adc
xchg
add
add
jmp
xor
push
cs
or
push
cmpb
add
push
mov
outsl
sub
xor
xor
adc
pop
outsb
add
add
mov
shlb
roll
inc
add
out
mov
add
add
xor
stos
into
out
cmovp
aaa
jg
lock
ret
cmp
loop
add
xor
rolb
cmp
and
cwtl
cmp
mov
addl
sti
jmp
jo
cli
fstpt
sbb
and
sub
testb
test
mov
mov
aas
dec
movl
xor
or
stos
cmpsb
sbb
stc
xor
pop
push
cmp
inc
mov
loopne
or
jbe
outsb
pop
mov
pop
jb
ficomps
dec
stos
sbb
mov
nop
aaa
loope
sti
aaa
test
repnz
lcall
jle
add
mov
cmp
xchg
cmp
stos
data16
jle
cli
mov
jge
push
lret
mov
shlb
add
cmp
jo
rorb
pushf
jb
jo,pt
lcall
mov
clc
fidivrs
xor
pop
imul
ffree
inc
outsb
or
xor
xor
xor
fsubl
mov
xor
adcb
push
jb
outsb
lock
adc
ss
lock
lock
rorb
xor
push
xor
movsb
sub
push
fiadds
sub
scas
jbe
cmpsl
aam
adc
mov
mov
es
loope
xor
aaa
sub
cmp
add
jne
ficoml
xchg
mov
fbstp
jmp
or
lods
repnz
out
inc
mov
cmp
jb
adc
or
decb
cmp
mov
lods
cmp
cmp
cmp
cmp
repnz
jbe
jnp
mov
cmp
cmp
pop
push
push
mov
add
fbld
mov
inc
outsb
cmpl
dec
aas
push
mov
dec
ret
push
rolb
adc
jbe
inc
xchg
je
push
mov
xor
mov
fimuls
xor
xor
cmp
jecxz
jo
jle
into
lods
push
lret
xor
xor
rclb
xchg
jne
popf
xor
jle
mov
fnsave
daa
xor
xor
mov
ss
adc
lock
das
cmp
lds
fnstcw
sub
mov
andb
xor
adc
inc
push
mov
push
mov
pop
ljmp
push
pusha
cmp
clc
ds
mul
add
mov
xor
xor
xchg
dec
imulb
mov
xor
xor
cmp
mov
cmp
ds
push
fisubl
pop
jb
or
push
sahf
outsb
sahf
test
add
lcall
add
scas
mov
jbe
xorb
and
clc
cmp
cmp
pop
ljmp
xchg
lods
aaa
mov
aaa
shll
fldcw
pop
cmp
ret
mov
cmp
hlt
mov
movsl
cmp
cmp
mov
ret
call
ljmp
sub
cmp
inc
loop
add
add
or
or
mov
inc
repnz
xor
aad
ja
ss
lcall
mov
aaa
jl
test
cmpsb
in
or
adc
clc
sub
cmp
push
and
cmp
sbb
sub
aaa
cs
cmp
cmc
push
inc
mov
adc
outsl
adc
cmp
cs
sub
fidivrl
dec
add
je
test
xchg
push
dec
and
ds
loop
push
andl
cwtl
push
mov
mov
lods
outsl
rorb
pushl
or
and
cmp
dec
cs
ss
loop
add
outsl
push
pop
enter
inc
mov
outsb
add
xchg
add
mov
cmp
xchg
xor
xchg
lds
mov
cmp
adc
jne
lcall
jno
inc
paddw
xchg
ds
out
daa
xchg
mov
out
xchg
xor
pop
inc
mov
xchg
ljmp
mov
cmpsb
std
bnd
add
ljmp
push
ljmp
mov
loopne
lret
pop
orb
test
jnp,pt
je
or
enter
jl
call
scas
out
cld
xchg
jge
mov
xor
adc
xor
push
ljmp
bound
inc
sbb
mov
mov
jp
hlt
add
xchg
push
push
add
sbb
mulb
pop
clc
stos
dec
sub
xor
cmp
inc
ss
mov
push
movsb
aaa
mov
sbb
cmp
cmp
es
xor
repz
cmp
cmp
cmp
inc
inc
pop
test
test
jbe
scas
push
out
or
cmp
cmp
ljmp
cmp
or
cmpsb
adc
and
dec
xor
scas
or
data16
jle
xchg
filds
mov
ds
aas
pop
jl
clc
pop
push
xchg
aas
in
aas
cmc
aas
mov
or
push
push
xor
push
xor
jae
xchg
data16
cmc
popf
dec
lods
xor
xor
adc
clc
in
jmp
repnz
mov
sub
xchg
lret
xor
push
and
hlt
punpckldq
sahf
mov
cmp
push
cmp
jle
stos
andb
cmp
cmp
pop
adc
test
repz
cmp
clc
cmp
shrb
mov
lret
inc
pop
push
push
sub
inc
pop
push
add
push
xor
inc
fnstenv
fisttpll
test
in
in
ds
sub
sbb
std
cmp
ret
orb
xor
mov
into
xor
add
pop
add
mov
repnz
xor
inc
inc
mov
lret
sub
je
addb
mov
and
xorb
mov
adc
jb
lcall
pop
bound
jmp
jle,pn
aas
sub
xchg
aas
pop
mov
aas
ljmp
scas
pop
aaa
aad
orb
and
clc
add
jb
lahf
xor
aad
repnz
xor
ljmp
ss
xorl
aaa
sbb
loopne
js
hlt
aaa
and
test
push
dec
push
adc
add
xor
loop
inc
aaa
adc
cmp
data16
add
ds
dec
mov
ret
pop
sbb
add
inc
aas
cld
aas
push
add
stos
cmpsl
lahf
test
xor
addb
sub
pop
pop
ds
dec
xchg
icebp
dec
loopew
xor
mov
roll
mov
mov
push
mov
mov
adc
adc
xchg
mov
mov
ljmp
push
or
mov
push
mov
pop
cmp
sub
call
add
cs
cmp
les
push
ljmp
adc
sbb
adc
xchg
shll
pop
mov
aaa
push
cmp
test
mov
cmp
stos
sbb
mov
aas
sahf
pushw
jge
cwtl
es
fstl
jle
adc
cli
inc
mov
sahf
mov
subb
cmpsl
cwtl
mov
outsb
inc
mov
mov
push
in
jge
fwait
stos
test
push
mov
push
pop
ss
out
sahf
nop
push
lret
rolb
mul
add
cmp
xor
push
repnz
xor
xor
or
dec
push
ret
std
xor
ficoms
xor
or
pop
ret
xor
pushf
push
stos
ss
lock
xor
mov
js
out
and
cli
es
stos
adc
mov
ficomps
sarl
loopne
pop
pop
dec
and
mov
mov
pop
push
and
or
pop
and
push
adc
sarb
cs
pop
xchg
mov
ds
mov
xchg
xor
jb
add
or
adc
sbb
pop
movsb
sub
cmp
dec
bound
jbe
lea
push
clc
or
mov
jo
sub
in
jp
scas
jno
push
add
push
fisttpl
cs
pop
xor
sahf
loope
mov
add
or
ficoms
mov
mov
mov
jle
mov
shll
mov
push
sahf
dec
popf
inc
adc
lods
inc
out
mov
sub
dec
push
cmp
cmpl
mov
dec
cmp
push
ror
loop
mov
add
cmp
mov
push
sbb
fidivs
and
outsb
push
or
inc
mov
cmpl
aas
rcll
pusha
repz
clc
xchg
icebp
push
xor
lret
hlt
xor
outsb
jge
sub
lret
xor
repnz
aad
xor
test
inc
push
xor
test
jl
test
mov
sbb
push
test
lods
cmp
mov
mov
mov
cmp
mov
sub
daa
adc
add
add
or
sbb
pop
mov
sub
test
sarb
cmp
ret
mov
push
pop
sbb
jg
shl
jmp
xchg
and
loopne
cmp
mov
cmp
aad
or
mov
add
scas
pushf
out
and
lds
mov
sbb
mov
mov
mov
lcall
cli
inc
popf
inc
pop
cmp
xchg
or
test
and
aaa
sbb
dec
aaa
push
jo
jo
adc
mov
add
xor
or
and
cmp
fisttps
cmp
jle
xchg
inc
add
jo
cmp
push
movsl
lret
pop
aas
xchg
shl
ss
xor
inc
les
xor
fists
shlb
popa
jp
add
stos
or
in
xor
jb
adc
inc
push
xchg
scas
insb
ja
pop
sub
jp
mov
aaa
sbb
inc
push
loop
mov
adc
sbb
das
cmp
jne
sarl
add
rep
add
arpl
adc
lds
loopne
fsubl
mov
pop
ja
push
enter
push
and
sarb
cs
loope
jo
jbe
les
inc
test
ljmp
pop
mov
xor
add
mov
push
in
in
stos
mov
cld
xor
xor
xor
pop
or
adc
pop
mov
xor
mov
lret
mov
shll
jp
push
sbb
xchg
bound
cmp
or
sbb
adc
sarb
or
xchg
jne
mov
subl
mov
or
mov
cmp
shlb
mov
xchg
or
pop
xor
cmpb
jbe
mov
xor
xchg
xchg
sub
icebp
and
out
cmp
mov
jg
mov
aaa
insl
add
je
cmpsb
pushf
lcall
icebp
shrb
adc
aaa
lret
xchg
lea
loope
and
xor
scas
xor
addl
adc
je
lcall
test
lea
popa
xchg
test
test
lret
test
inc
sbbb
shl
push
adc
out
out
xor
popf
ljmp
mulb
dec
mov
inc
sbb
push
xchg
gs
pop
add
mov
cmp
idivb
sbb
aad
icebp
add
cmp
sub
test
cmp
and
xor
test
add
outsl
adc
inc
mov
xchg
push
daa
adc
ljmp
jbe
mov
in
xor
mov
push
mov
sbb
xor
xchg
js
push
and
mov
and
push
push
cmp
je
mov
dec
aaa
cli
add
adc
dec
cmp
or
rcr
push
pushf
cmp
pop
mov
cmp
ss
lea
push
dec
mov
cmp
je
xchg
or
fisubl
sub
pop
out
stc
cmp
cmp
cmp
and
push
popf
push
jl
stos
mov
cmp
ret
adc
cmp
xchg
or
clc
call
cmp
hlt
aaa
adc
inc
jb
js
adc
dec
stos
into
jle
fisubrs
push
aas
jle
aas
scas
mov
testb
adc
xor
leave
inc
aam
data16
xor
add
sarb
stos
xor
cmp
push
and
xor
push
movsl
cmp
push
aas
add
imul
xor
stos
lcall
inc
adc
xchg
incb
jno
sbb
cs
inc
adc
jecxz
add
xor
sahf
cmc
sub
push
push
xchg
or
push
add
fdivl
data16
lcall
in
incb
cmp
out
sbb
ds
cmp
js
call
ss
cmp
add
loope
test
dec
or
rcrb
in
dec
cs
xchg
subb
add
loopne
jbe
aas
cmp
dec
push
data16
mov
jne
and
in
sbb
jb
jb
push
xor
xchg
jg
inc
or
bound
repz
test
xor
bound
cmp
push
xchg
push
push
gs
jno
dec
mov
mov
sub
stos
jle
pop
fsts
int
sub
xor
sahf
adc
and
xor
out
mov
pop
xchg
lahf
xor
sbb
pop
xor
xor
push
scas
push
cmp
or
xor
xor
xor
xor
mov
dec
jg,pn
xor
add
stos
xchg
sub
ss
mov
push
or
dec
scas
test
outsb
in
pop
int3
push
sub
outsb
push
mov
test
cmp
adc
mov
xchg
subb
jg,pn
jmp
and
mov
sub
dec
dec
pusha
cmp
stc
cmp
test
add
ret
cltd
mov
cmp
inc
mov
and
inc
pop
push
mov
lcall
outsb
xor
sbb
cmp
sbb
mov
ficoml
sbb
sahf
sahf
push
test
xor
jns
leave
push
mov
mov
arpl
aam
mov
cmp
mov
push
mov
cmpsb
sub
imul
fstps
inc
imul
loop
arpl
jle
inc
xor
lea
subb
push
inc
rcll
mov
xor
fsts
push
mov
inc
xchg
inc
xor
test
pop
call
ss
sbb
addb
mov
je
mov
loop
xor
sarl
mov
add
push
loop
xor
sub
fidivrl
data16
cs
sub
cmp
leave
pop
jns
inc
adc
ds
and
pop
aas
sub
push
dec
xchg
dec
ljmp
clc
pop
sbb
adc
scas
mov
jmp
hlt
jns
or
xor
mov
stc
lods
dec
adc
movsb
cmp
ret
pop
mov
xor
xor
les
or
outsb
sbb
movsl
out
add
pop
cmp
cltd
addl
mov
es
xchg
shrl
cmp
rcl
xchg
ret
adc
xor
pop
cmp
ret
clc
ljmp
cmpsl
mov
and
cmpb
cmp
in
sbb
sbb
sarb
inc
jno
test
ljmp
movsl
inc
push
ds
sub
movsl
sbb
inc
add
ficompl
je
dec
jo
mov
fldenv
jo
inc
iret
and
cli
popa
mov
push
pop
shll
dec
cli
and
push
sbb
sar
stos
pop
fnstsw
lcall
mov
lcall
ss
push
or
insl
push
aam
fdivs
faddl
and
in
or
ss
int
mov
or
adc
add
sbb
aaa
and
sub
popf
mov
xor
cmp
inc
inc
sub
fisttpll
dec
aaa
dec
xchg
push
mov
bound
sub
xor
jne
mov
sbb
push
mov
frstors
xor
mov
sahf
mov
test
aam
fmull
push
cmp
lock
jg
push
sahf
add
fistl
sbb
add
dec
and
and
sub
xor
add
loopne
cmp
dec
cmp
lea
and
sub
push
xchg
dec
cmp
mov
mov
xchg
cmp
cmp
lods
add
mov
cmp
cmp
push
stos
or
inc
in
in
cmp
mov
adc
jbe
jle
ficoms
push
or
cmp
cmp
sub
lea
bound
push
cmp
inc
adc
addl
mov
addl
inc
insb
cmp
js
xchg
nop
jmp
nop
das
jbe
or
sub
mov
mov
lcall
add
inc
pop
mov
movsb
and
fstl
mov
dec
sbb
out
jp
xor
push
or
pop
cmp
adc
push
jecxz
add
mov
push
jp
xor
mov
repnz
insb
xor
sbb
cmp
adc
loop
xchg
push
ficompl
and
insl
pop
jne
inc
mov
test
lea
xchg
mov
add
movsl
xor
jb
push
sbb
incb
push
lds
push
test
fnstenv
loope
jmp
or
stc
sub
mov
adc
inc
mov
rcrb
adc
hlt
adc
push
mov
inc
add
out
pop
sbb
jle
push
xor
movsb
mov
xor
lea
lods
out
fcoml
mov
dec
je
stos
mov
aam
mov
push
and
push
and
mov
test
call
jb
xchg
rolb
xchg
jg
push
cld
subb
inc
xor
or
loop
push
mov
xchg
cmp
faddp
jg
mov
hlt
ds
and
je
push
sbbl
movsb
lret
cmp
test
cmpsb
adc
inc
test
popf
jmp
xor
icebp
mov
mov
pop
jl
dec
cli
clc
xor
mov
dec
es
shlb
push
push
mov
int3
push
inc
sbb
add
push
mov
xchg
mov
mov
xor
fldl
insb
cs
sub
shlb
testb
push
xchg
push
push
test
mov
add
jne
lcall
jmp
jmp
push
pushf
ss
in
adc
push
pop
jmp
and
ret
aad
ret
cli
ljmp
call
pop
mov
mov
in
js
xor
ret
movsl
sub
sub
mov
or
push
push
rcl
adc
cmp
mov
add
pop
mov
push
add
lods
jle
pop
xor
lea
je
insb
je
scas
lods
jle
mov
and
push
adc
das
sub
mov
mov
fsubl
mov
push
add
pop
test
mov
adc
js
mov
push
rorb
fsub
push
xor
adc
scas
or
adc
xchg
hlt
mov
mov
xlat
mov
outsb
test
mov
mov
dec
shlb
xor
shlb
aam
fcoml
push
sub
in
in
jp
sbb
shl
cs
ds
sbb
and
sub
xor
mov
xor
push
inc
sub
adc
push
ja
and
push
lock
inc
push
dec
das
push
inc
dec
inc
mov
movsl
inc
pop
inc
sub
xor
sarl
jmp
cld
jae
ljmp
cmp
push
or
cmpsl
arpl
repz
cmpb
mov
inc
cwtl
add
inc
mov
cmpl
sahf
add
dec
xor
or
push
mov
int3
daa
push
xor
add
ret
jnp
hlt
ss
loope
sub
inc
je
adc
popa
add
imul
hlt
cmp
sub
pop
push
adcb
mov
inc
ljmp
push
ljmp
pusha
mov
jno
xor
cmpsb
mov
mov
push
jge
or
das
mov
cmp
add
or
push
or
push
test
mov
fadd
sbb
cmp
pushf
ret
sub
int
and
pusha
aas
fs
insb
je
adc
xor
movsb
push
dec
in
mov
cwtl
addr16
add
and
pop
pop
movsb
and
push
adc
lcall
cmp
int3
pop
sbb
xchg
stos
cld
out
sbb
push
pop
jl
lods
adc
fdivl
push
sub
push
or
je
ret
mov
lds
or
xor
ss
insb
pop
mov
push
cld
cmp
xchg
push
or
stos
sbb
pop
test
nop
mov
out
mov
push
test
mov
mov
fidivl
lock
clc
or
cmp
dec
adc
add
and
or
pop
loop
sbb
fcompl
mov
icebp
dec
pop
out
or
xor
adc
xor
push
cmp
push
sub
je
mov
cs
cmp
loopne
loope
insb
push
imul
pop
dec
imul
or
add
adc
pusha
cmpsb
push
push
jo
js
add
data16
nop
into
test
and
sbb
push
aam
cmpsl
cs
fdiv
or
sbb
add
inc
scas
test
mov
out
push
dec
mov
ss
push
mov
fsub
clc
push
sbb
orl
pusha
push
mov
sbb
inc
fsubs
and
sbb
or
xor
leave
test
and
sub
rorl
cmp
fimull
scas
pop
sbb
mov
loope
sbb
mov
out
test
mov
mov
cwtl
adcb
push
iret
sbb
adc
sbbl
or
orl
imull
cwtl
add
mov
mov
or
push
adc
jo
sbb
xchg
push
out
sbb
push
bound
jne
mov
pop
push
outsb
mov
sub
xchg
mov
adc
inc
mov
cmovp
mov
bound
sbb
xchg
and
sub
out
insl
sbb
imul
aad
jl
test
mov
call
xor
test
test
mov
roll
add
sub
inc
inc
lods
call
inc
add
scas
jne
cmpsl
push
stos
stos
add
inc
push
cmp
dec
dec
xchg
add
sbb
and
and
pusha
xchg
xlat
test
xlat
mov
pop
jae
shrb
xchg
sub
push
xchg
js
test
add
cmp
sbb
dec
or
inc
bound
inc
jg
sub
addb
out
test
mov
pop
enter
xchg
push
shrb
call
push
lock
clc
inc
outsl
jecxz
add
push
daa
loop
push
pop
add
in
add
cltd
jno
inc
sub
add
add
out
xor
movsb
or
lock
mov
aam
aam
imul
push
mov
clc
xor
sub
or
je
jno
xchg
cs
pusha
or
dec
pushf
pop
add
aaa
add
jno
loopne
mov
push
popf
ljmp
inc
push
mov
dec
push
mov
xchg
and
jl
dec
cwtl
cmp
cmp
sub
cmp
cmp
data16
mov
loopne
cmp
xor
ljmp
push
sub
pop
clc
dec
mov
mov
sub
pop
cld
cwtl
fsubrs
int3
pop
xor
sbb
rorb
sbb
fsubrs
xchg
or
and
inc
das
push
rolb
adc
aad
or
mov
or
dec
sbb
dec
lea
test
push
and
mov
dec
dec
and
icebp
jle
stos
dec
pop
adc
jecxz
cmp
mov
mov
shlb
inc
sarl
sbb
add
lcall
jne
inc
xor
push
mov
mov
test
pop
rclb
in
add
pusha
mov
mov
xchg
pushl
out
movl
scas
xor
push
add
test
cmp
xor
nop/reserved
dec
fldt
sahf
inc
dec
mov
lcall
mov
pop
pop
cmpsl
mov
test
fmull
adc
mov
test
mov
push
hlt
orb
pop
sbb
icebp
icebp
push
repnz
out
pop
enter
push
data16
xchg
xchg
xchg
jecxz
movsb
cmp
inc
shrb
jne
add
adc
inc
xlat
pusha
mov
pusha
inc
add
xchg
mov
out
add
jmp
mov
sub
arpl
lock
mov
cmpl
push
aam
lock
rclb
shlb
pop
nop
push
stos
dec
pop
outsb
mov
call
pop
dec
inc
js
push
sbb
mov
lcall
and
test
hlt
adc
push
jl
and
push
hlt
pop
sbb
inc
push
push
shll
push
je
mov
xor
sub
cli
sub
mov
loop
ret
or
jl
test
test
push
pop
mov
push
ljmp
js
repnz
jnp
ret
idiv
shl
push
repnz
test
lfs
daa
shll
out
mov
mov
xor
pop
mov
icebp
icebp
lcall
mov
lock
and
lods
je,pn
xor
dec
add
xchg
push
mov
mov
movsb
or
xor
test
xchg
lcall
sbb
pop
lds
and
xor
inc
jl
je
push
insb
cmp
or
aam
in
fsubrs
and
call
pop
mov
jecxz
xchg
fcoms
stos
add
xor
icebp
push
add
pushf
subb
push
int3
jp
in
hlt
and
xor
or
inc
and
test
sub
cmp
dec
push
pop
xchg
insb
mov
mov
mov
ds
adc
and
push
xor
dec
push
pop
push
insb
push
jl
aad
clc
mov
lods
clc
push
les
in
rcll
adc
inc
push
jg
jbe
inc
add
sbb
pop
into
mov
and
aam
in
clc
call
cmp
dec
mov
clc
mov
adc
sub
add
sub
cmp
mov
aad
add
mov
call
push
add
mov
mov
add
sar
xchg
add
mov
aam
orb
ljmp
dec
cmpsb
pop
add
jecxz
imul
push
fwait
add
xor
loop
push
mov
mov
adc
and
cmp
ss
sbb
aam
andb
fdivrs
mov
jo
add
sub
test
pop
shrb
hlt
testb
sub
adc
inc
xor
ss
int3
sbb
hlt
add
cli
push
sbb
idivb
mov
add
rsm
aam
or
hlt
fiadds
sub
test
xchg
mov
sbb
pushf
jae
daa
call
push
loop
mov
call
add
roll
lcall
sbb
in
sbb
stos
push
cmp
sub
inc
sbb
setp
sbb
cld
idivl
ds
out
js
mov
shrl
loop
xchg
adc
icebp
arpl
shll
mov
lock
push
jo
clc
pop
adc
inc
cmp
add
push
xor
lock
jmp
cmpsl
mov
add
sbb
shrl
inc
mov
test
clc
test
cmpsl
push
push
add
pop
mov
jecxz
jecxz
push
int3
xor
cld
mov
andl
jne
loopne
mov
xor
sahf
cld
mov
sub
je
lret
mov
stos
mov
aam
jne
iret
xlat
ficoml
and
js
pushf
or
decl
test
ljmp
cmpb
fiadds
adc
add
dec
out
mov
ret
call
mov
dec
add
or
mov
aam
loop
cs
andb
imul
fdiv
cmp
pusha
cmp
jecxz
aad
test
ret
jle
popa
inc
adc
loop
mov
mov
jo
cmp
and
out
cmp
pop
push
test
xor
jecxz
or
cmp
notb
stos
cmp
add
pusha
out
or
lcall
fs
js
rolb
mov
add
or
ljmp
jo
repnz
dec
les
pop
mov
adc
sub
add
cwtl
lock
pushf
outsb
stos
sbb
je
jae
sub
mov
dec
pop
push
push
add
jo
test
add
mov
xor
mov
bound
rclb
dec
xor
jl
inc
lds
cs
adc
add
sbb
pop
idivl
jmp
fildll
shl
adc
pop
andb
jbe
enter
pop
xchg
lock
add
xchg
jb
test
pop
or
aam
push
jbe
or
cwtl
or
dec
jl
rclb
pop
lods
ds
push
or
dec
rcr
test
dec
inc
je
mov
rclb
outsl
jbe
call
jo
mov
push
in
dec
icebp
add
jg
outsl
push
jle
cmp
pop
aas
ds
or
adc
xor
and
mov
fsubl
je
sbb
jg
adc
mov
jg
jle,pn
sbb
sub
push
jle
mov
and
or
sbb
test
xor
mov
mov
add
cld
inc
and
mov
repz
movsb
call
mov
adc
push
clc
data16
pushw
cmp
adc
sti
jne
sbb
je
mov
lods
sbb
or
push
cli
call
inc
sti
dec
dec
xchg
out
aam
andl
sub
sbb
mov
pop
mov
orb
adc
sub
dec
adc
jo
call
lret
xchg
ret
aas
inc
mov
mov
or
sbb
sahf
inc
js
inc
sbbl
arpl
xlat
inc
mov
sub
data16
push
and
clc
cmp
mov
push
add
sub
inc
pop
arpl
inc
test
pop
bound
insb
push
addb
stos
push
ret
add
sub
loop
pop
loop
mov
test
or
lret
or
mov
movsb
fmull
lret
dec
pop
and
push
and
xor
loop
lret
sub
cs
pop
movb
clc
xor
and
notl
mov
es
mov
mov
adc
test
push
and
adc
pop
cld
mov
test
scas
mov
dec
adc
sub
test
adc
or
sub
push
out
rcrb
movb
jo
daa
adc
sub
test
cmp
aaa
es
add
or
and
cwtl
test
ret
call
cmp
dec
add
and
add
cwtl
push
inc
inc
xadd
aas
xor
add
out
adc
add
add
orl
insl
pop
bound
addr16
rolb
add
add
cmova
push
addb
aaa
sub
js
add
xchg
push
cli
adcl
sbb
je
in
lret
cmpsl
add
add
cmp
les
loopne
and
adc
jle
js
mov
inc
xor
lcall
xchg
jp
lock
sbb
xor
dec
push
fiaddl
div
pop
bound
cmpl
add
xor
into
jecxz
cmp
mov
push
lea
repz
out
pop
add
xchg
sbb
jo
lcall
sahf
mov
pop
push
shrb
dec
inc
or
aas
sub
and
mov
or
sbb
cmp
pop
xlat
sbb
es
movsb
and
pop
dec
cltd
hlt
sub
mov
xor
or
adc
inc
jns
clc
add
fistl
push
outsl
ret
push
add
add
add
add
push
dec
popf
clc
lods
dec
xor
cmp
push
add
push
repnz
rorl
jmp
mov
inc
ss
push
dec
jl
adc
sub
mov
pop
or
cmc
dec
push
mov
xor
pop
pop
xor
lahf
scas
test
cmpb
mov
sub
cmp
dec
pop
scas
js
ds
jmp
enter
xor
mul
sbb
mov
test
scas
jae
xlat
xchg
aaa
inc
outsb
int
mov
andl
and
xchg
pop
push
mov
cli
cs
iret
cmp
scas
scas
xchg
mov
stos
sahf
mov
sbb
test
inc
pusha
lret
insb
xor
push
jmp
pusha
and
push
push
or
fimull
mov
in
mov
push
inc
mov
lcall
mov
outsl
arpl
xchg
and
cmp
imul
loopne
das
sbb
add
add
add
or
add
lret
mov
adc
dec
mov
inc
dec
out
cmp
arpl
jmp
cli
xchg
js
dec
out
div
and
rcr
mov
mov
adc
icebp
jb
pop
ret
and
inc
loopne
and
or
and
xor
mov
mov
sbb
cmp
mov
cmp
dec
cmp
add
arpl
dec
ret
push
rol
fadds
xorl
repz
aad
push
push
cmp
movsb
mov
orb
ja
jmp
pop
sbbb
test
stos
or
mov
aad
pop
pop
push
mov
shrb
inc
pop
push
push
add
js
mov
fwait
mov
jnp
loopne
rolb
add
pop
test
or
sahf
stos
mov
fwait
xchg
push
mov
rcrb
dec
inc
ljmp
inc
ljmp
lods
orb
pop
push
inc
add
jp
adcb
outsl
sbb
xor
dec
jns
dec
pushf
lret
rorb
ret
mov
jecxz
lcall
push
rol
push
add
pop
xchg
cmp
pushf
jo
repnz
mov
adc
sahf
out
cmc
ljmp
jl
movsb
add
adc
pushf
test
mov
jb
loop
pusha
and
into
push
in
imul
or
ds
and
xor
lahf
sbb
add
adc
rorb
push
xor
clc
push
mov
ffreep
sbb
mov
rcl
lock
adc
mov
xchg
add
add
xchg
and
push
imul
movb
ss
iret
dec
jl
xlat
and
ret
inc
add
adcb
pop
jb
jae
punpcklbw
mov
jecxz
sysret
rolb
shlb
xor
mov
xchg
dec
push
stos
test
cwtl
lods
or
lahf
jbe
daa
aam
and
add
jns
out
into
in
add
xchg
into
loopne,pn
js
nop
jmp
or
adc
lcall
cmp
icebp
add
arpl
cmp
cmp
mov
sahf
sbb
daa
mov
pop
push
js
dec
xchg
sahf
jno
mov
jp
bound
jo
mov
dec
sbb
xor
mov
add
inc
into
inc
inc
loop
ret
cmp
nop
clc
add
test
loope
sub
mov
jp
sbb
sub
arpl
pop
fcomip
out
pop
and
mov
and
inc
push
inc
mov
dec
sbb
mov
pop
mov
inc
and
scas
dec
sbb
push
mov
cmp
add
insb
sbb
inc
mov
rorb
xchg
lret
adc
inc
arpl
lret
js
ljmp
into
arpl
adc
das
jecxz
cmp
pushl
gs
pop
loop
xchg
ror
or
mov
add
push
sub
xor
sbb
inc
mov
dec
and
inc
cmp
sbb
les
mov
shll
stos
cmpsl
ret
clc
lahf
mov
and
xlat
addl
pop
jecxz
dec
cmp
lea
inc
jecxz
xor
dec
jl
fists
inc
outsl
bound
icebp
cmp
das
adc
mov
inc
pop
sbb
stos
and
push
test
cmpsb
mov
xor
add
or
daa
add
test
push
iret
pusha
or
aam
sbb
daa
repz
dec
aam
loopne
mov
jecxz
dec
arpl
or
movsb
lret
sbb
fsubl
in
cmp
sbb
add
test
inc
xchg
mov
repz
sub
cltd
push
inc
xchg
dec
sbb
outsl
sbb
call
or
mov
xchg
loopne
cmp
push
daa
or
call
mov
sbb
add
clc
xor
push
mov
mov
pop
out
cwtl
mov
dec
call
adcl
add
add
lret
mov
mov
mov
ljmp
push
cmp
stos
or
dec
je
js
enter
scas
and
bound
stos
dec
je
cwtl
lcall
push
mov
loop
popf
call
and
or
pusha
jbe
arpl
sub
xor
adcb
or
push
jmp
mov
stos
adc
out
or
popf
pop
nop
outsb
jmp
xor
push
xor
xchg
pop
pop
or
int3
jbe
je
add
cmp
xor
pushf
fistpl
xor
push
sbb
test
push
ds
xor
orb
mov
stos
or
add
inc
xchg
push
sub
bnd
push
add
xchg
push
xchg
je
xor
into
lcall
scas
stos
xchg
mov
mov
cmpsb
xor
pop
and
ss
xor
xor
pop
subl
push
dec
push
push
out
xchg
divb
enter
addb
or
call
push
lret
pop
shlb
pop
into
or
pop
adc
mov
shll
addb
push
inc
add
and
add
nop
push
icebp
xchg
lock
mov
iret
lret
rclb
aas
lock
aad
enter
popa
mov
nop
into
mov
and
jle
sub
cmp
xor
sbb
pop
push
sbb
mov
sub
adcb
shlb
mov
sbb
xchg
inc
or
lcall
xchg
adc
or
pcmpgtb
adc
fwait
aaa
mov
push
lret
add
shrb
cs
imulb
ljmp
adc
clc
popaw
xor
outsb
in
addr16
xor
arpl
push
arpl
mov
push
or
adc
aaa
xor
popa
xor
add
fdivr
leave
dec
outsb
sbb
add
add
mull
das
or
adc
mov
cwtl
push
and
mov
mov
mov
adc
into
push
or
adc
cltd
sub
fwait
out
or
sbb
test
inc
mov
sbb
lds
rcr
loop
sarl
fcmovu
nop
jno
add
inc
inc
frstor
ret
mov
lahf
and
testb
jo
xor
push
xor
xchg
lods
mov
jbe
xor
add
cwtl
lret
int
repz
jb
inc
add
mov
lods
cmpsl
stc
xor
push
push
idivl
int
imul
jecxz
insl
push
jns
jns
insl
insl
insl
outsb
push
movsl
repz
idivl
outsl
xchg
outsl
es
insb
iret
data16
or
js
jns
ss
in
jl
mov
or
xchg
jl
mov
add
into
scas
mov
xlat
mov
pop
movsb
inc
mov
int
insb
scas
mov
cs
mov
int
jnp
jle
in
fs
jmp
fwait
cld
adc
ja
mov
mov
jnp
mulb
sbb
xor
push
or
in
fnstcw
xor
xor
xor
xor
sub
adc
mov
mov
int
mov
jp
jo
push
xchg
add
push
mov
push
mov
mov
aad
gs
adc
cmp
cmp
out
xchg
xor
dec
jbe
sub
orb
pop
aas
pop
pop
fisttps
xchg
and
and
sbb
and
adc
pop
in
je
inc
js
data16
ss
loop
cmp
or
pop
pop
cs
push
push
sbb
and
and
xchg
pop
add
add
bound
push
loope
mov
clc
popa
inc
add
push
adc
sub
add
xchg
stc
or
xor
xor
push
inc
push
push
dec
dec
dec
mov
dec
or
inc
and
int3
or
jo
orl
xor
mov
mov
cmpb
sub
mov
pop
push
pop
push
inc
and
add
jnp
or
dec
inc
dec
sub
xor
inc
stc
push
out
push
and
fisttpl
jl
inc
xor
xor
int
sti
or
dec
push
nop
and
or
and
mov
aas
roll
jae
mov
cmp
testb
cmp
lds
xchg
inc
pop
movsl
or
fidivl
jge
dec
dec
gs
inc
ss
hlt
fisubl
je
mov
test
pop
ja
dec
xor
mov
outsb
xchg
aam
in
dec
sbb
lcall
fisttps
push
pop
ds
mov
ja
out
or
dec
ja
or
insl
xor
cmpsb
leave
push
mov
mov
imul
mov
add
add
sbb
add
add
inc
jl
int3
xor
add
push
add
shll
and
add
add
add
mov
sub
scas
xchg
xlat
add
add
or
fldenv
sbb
stos
sbb
sbb
fwait
push
and
out
add
mov
push
mov
loop
add
outsb
ss
add
push
and
adc
adc
mov
xor
inc
dec
dec
dec
dec
dec
dec
dec
dec
shlb
imul
dec
imul
cmpsl
movsl
rcll
fildl
push
enter
inc
unpcklps
add
inc
sub
inc
and
pop
std
lods
sbb
sub
andl
mov
gs
mov
mov
xchg
popa
sbb
sub
outsb
arpl
test
add
sub
and
pop
aad
push
sbb
mov
push
repz
pop
push
rorb
inc
lcall
and
push
repnz
cmpsl
stc
cmp
push
mov
pop
jno
mov
sahf
jo
enter
adc
xchg
insb
ss
imul
push
pop
dec
les
pop
int
mov
addr16
push
pop
push
pusha
cld
popa
std
dec
sti
xor
bound
call
lcall
mov
outsl
add
and
daa
inc
and
mov
add
lods
subb
add
add
xchg
sub
fldenv
cmp
popa
out
ljmp
insb
add
mov
cmp
adc
jmp
or
push
or
sub
pushl
adc
sbb
adc
movsb
scas
mov
jcxz
out
add
xor
inc
xor
sub
idiv
lcall
pop
or
dec
dec
push
sub
cmp
sbb
xchg
unpckhps
jl
add
or
pop
xchg
xchg
lcall
es
mov
repnz
add
or
mov
or
add
daa
icebp
in
ljmp
xor
adc
pop
and
pop
sbb
and
and
idiv
xchg
xchg
and
and
jp
cmp
fisubl
mov
iret
rcl
lret
sub
jmp
ljmp
add
push
push
sbb
adc
pushf
pushf
mov
pop
adc
pop
mov
mov
out
hlt
and
xor
cmp
loop
mov
std
mov
inc
inc
push
xor
incl
and
or
sbb
adc
out
xor
pushl
mov
pop
cmp
and
in
jecxz
add
sbb
sbb
adc
jmp
popf
or
rolb
lea
push
fs
cld
call
sbb
jbe
adc
fmul
or
jl
sbb
std
incl
push
addl
pushl
ss
adc
test
mov
insl
je
add
and
adc
and
fdivrp
call
sbb
xchg
adc
cmp
sbb
aam
imul
push
jne
mov
lock
xor
push
aas
inc
dec
fnstsw
in
mov
fistl
fcoms
xchg
cltd
mov
sbb
xchg
call
xor
sbb
mov
adc
xchg
cltd
sahf
hlt
idiv
push
loopne
adc
scas
mov
sbb
inc
inc
dec
pop
pop
popa
dec
adc
ljmp
clc
jg
ficoml
pop
or
adc
pop
dec
dec
push
scas
mov
stos
or
jp
xchg
decl
xchg
cmp
dec
sbb
into
sub
adc
mov
lock
out
push
cs
loop
pop
icebp
ffreep
adc
nop
fsubp
inc
sbb
loopne
adc
mov
std
and
jno
jp
fildl
rcl
fmul
mov
sub
cmp
push
and
add
sbb
dec
push
sub
in
cld
lea
adc
add
pop
and
xchg
cmp
xor
dec
out
out
adc
loopne
push
or
insl
jo
xor
lea
outsl
and
in
or
xchg
adc
call
add
push
test
lods
loop
lock
clc
add
and
push
rcl
mov
fdivl
xchg
xchg
sahf
mov
xchg
push
mov
jg
hlt
xor
and
and
sbb
cmp
pop
icebp
pop
mov
jbe
dec
sub
cmp
push
push
pop
sbb
in
sbb
or
sub
lcall
insl
popa
add
dec
and
mov
jbe
and
jg
incl
popa
xor
data16
leave
xchg
xchg
mov
lret
add
and
xlat
scas
mov
call
dec
xchg
pop
jle
dec
lock
sahf
add
push
movsl
or
lret
pop
lcall
nop
pop
repz
cmp
call
mov
shll
cmpsl
mov
mov
push
into
adc
in
ljmp
xchg
data16
outsl
inc
add
cltd
leave
pop
pop
jbe
jmp
mov
into
lea
cmp
call
das
sbb
add
nop
push
cld
and
xchg
sbb
repnz
cli
inc
enter
xchg
pop
hlt
pushl
mov
push
push
mov
mov
xlat
mov
mov
fidivl
jmp
int
mov
ljmp
aas
jg
xchg
daa
and
ds
movsb
dec
nop
mov
lahf
clc
push
je
xor
and
ret
pop
das
lea
dec
add
dec
xorb
ljmp
xchg
push
cmp
bound
inc
ficoml
sub
ja
lea
cmp
ljmp
les
in
dec
and
xor
enter
int3
mov
push
data16
sbb
int3
push
inc
jl
faddl
xor
cmp
or
repnz
cwtl
add
cmpl
sub
call
decl
lock
cmp
xor
sub
lea
clc
pushf
jbe
fdivl
nop
pop
push
xor
jmp
int
mov
cmc
fs
xor
cmp
rclb
fs
cmp
aas
pushl
idiv
or
xor
clc
push
popf
jmp
pop
xchg
test
pop
hlt
pop
sub
stos
or
add
mov
mov
mov
jmp
jmp
mov
ljmp
cmpsl
mov
test
cmpsl
push
js
or
movsb
jmp
and
adc
cmpb
add
add
fs
xor
adc
cmp
mov
or
cmp
xchg
mov
leave
xor
push
and
fcomip
call
sbbl
dec
pop
rcl
cmp
andb
mov
adc
or
lcall
mov
push
adc
pop
out
inc
add
adc
push
add
push
mov
cmp
mov
push
xor
pushl
mov
push
in
enter
sub
sub
mov
in
shlb
jg
incl
add
mov
push
scas
adc
pop
mov
adc
add
not
ljmp
and
xor
xchg
pop
negb
xchg
sbb
inc
xchg
nop
pusha
inc
pop
jae
adc
mov
into
inc
cmp
incl
sbb
add
add
cmp
lret
mov
sub
push
ret
in
call
ss
sub
xchg
testl
fbstp
clc
sbb
adc
sti
ficompl
aaa
test
cmp
outsb
mov
jle
mov
in
mov
stc
push
inc
int
lods
mov
jg
jo
imulb
outsb
cli
fsubrl
mov
mov
cmp
das
mov
or
incb
mov
aas
jnp
jb
sbb
inc
pop
sub
nop
sub
incl
add
push
dec
add
cmpps
mov
xor
jno
mov
push
dec
xchg
cmp
xorl
inc
cwtl
xor
inc
jb
and
cmp
loop
ljmp
leave
mov
jo
adc
adc
les
push
mov
push
out
pop
inc
xchg
call
mov
ss
inc
cmp
sub
mov
pop
pop
imul
loop
dec
call
lods
and
mov
mov
das
call
sbb
or
pop
pmuludq
xorb
xor
decl
and
xor
fimull
sbb
pop
lea
sub
cltd
loope
sbb
aaa
popf
xchg
test
ja
cmpsb
inc
or
loopne
pop
or
or
loope
call
xchg
pop
pop
mov
out
and
int3
jp
or
cltd
jno
incl
clc
gs
or
jl
and
jo
pop
loopne
call
mov
arpl
push
jne
add
ficompl
dec
mov
cmp
and
cld
decl
cmp
aam
call
xchg
or
mov
adc
lds
testb
js
das
js
lcall
mov
fs
js
loopne
mov
lret
in
jg
inc
lods
rorb
popa
enter
dec
js
arpl
pusha
enter
jmp
call
nop
cmc
xorb
push
dec
mov
pop
xchg
loopne
and
mov
mov
sbb
loopne
add
das
jle
inc
push
sub
sbb
jg
sub
imul
lds
xor
pop
inc
ficoml
pushl
das
imul
pushl
loope
dec
dec
fwait
mov
xchg
shl
push
mov
pop
ljmp
sbb
repnz
mov
sub
jecxz
insb
mov
inc
loop
push
addb
xchg
push
ret
call
stos
mov
in
loop
jns
test
mov
in
inc
arpl
dec
mov
sti
loop
or
push
inc
jp
mov
aam
add
pop
push
in
mov
dec
scas
and
mov
ret
adc
decl
gs
in
into
loope
adc
loopne
jo
xchg
mov
ret
or
dec
pop
add
jmp
xchg
imul
dec
pop
daa
aaa
sahf
or
cmp
dec
xor
xor
imul
decl
dec
dec
mov
cmp
imul
mov
ljmp
jae
loop
insl
int3
or
and
sub
test
mov
faddp
xor
aas
and
or
call
lods
mov
push
or
xchg
xchg
cmp
dec
decl
lret
and
popa
mov
out
or
mov
fucomi
mov
js
fisubs
dec
lret
xor
jle
xlat
cmp
push
ljmp
ficomps
aaa
xor
faddl
inc
shl
addr16
inc
push
or
ljmp
loopne
sahf
imul
mov
mov
xchg
incl
xchg
outsl
adc
sub
sbb
sub
xchg
rol
decl
mov
inc
sti
adc
xor
dec
testl
incl
inc
arpl
dec
jbe
mov
arpl
fisttpll
xor
sub
mov
popf
mov
or
cld
fsubr
and
nop
fnclex
les
out
enter
sbb
push
mov
ljmp
inc
in
inc
mov
icebp
sub
out
or
sbbb
fisttpll
imul
fldt
iret
ljmp
sub
xchg
fldenv
mov
call
pop
stc
js
push
push
mov
add
js
addr16
test
mov
cmp
call
pop
adc
xor
popa
sti
lcall
das
sbb
inc
dec
aaa
scas
daa
outsb
lea
xor
lcall
xor
mov
ss
add
or
out
cli
jle
xor
int3
in
mov
add
and
push
call
loope
lcall
add
aas
ret
mov
inc
cld
mov
sahf
push
mov
ret
incl
aad
mov
cmp
xor
dec
cmpsl
push
js
adc
xchg
out
js
std
into
cmp
or
push
fldt
or
jne
cli
in
pushl
ljmp
dec
cld
imul
xor
popa
push
test
ss
sub
ljmp
pushl
popa
popf
fwait
in
inc
mov
dec
out
rcll
pushf
mov
fcoms
shrl
out
cmp
jae
jnp
dec
insl
div
jge
dec
call
lret
adc
xor
movsb
not
add
jle
inc
jg
dec
cld
scas
xor
jecxz
jecxz
ss
jmp
jmp
xor
sbb
in
xchg
xor
outsb
into
xor
push
inc
sub
add
mov
cmp
mov
adcl
inc
shrl
push
loopne
add
adc
ds
mov
daa
pushf
inc
adc
lcall
cmc
mov
cmp
mov
shlb
cmp
jnp
mov
sbb
push
cld
fnstsw
jbe
xor
in
fidivrs
incl
or
aad
fsubrp
or
jp
out
fsubp
jle
out
mov
jg
aam
jge
add
js
imul
pop
rorl
xor
call
andps
popa
or
addr16
rclb
jnp
jmp
push
push
xchg
es
add
loopne
push
or
or
aad
jnp
jmp
jle
mov
inc
xchg
jbe
push
sbb
jbe
cwtl
jnp
xlat
sbb
andb
xor
sub
jno
es
out
mov
ja
repz
add
or
mov
aam
xor
inc
decl
push
xor
cwtl
cmpl
ja
cmpsl
subb
dec
push
inc
jecxz
or
fsubs
pop
cmp
cmp
inc
dec
or
ljmp
mov
cmc
rorb
dec
rorb
call
or
mov
fs
sbb
add
divb
test
add
or
or
dec
cmp
andb
in
incl
xchg
inc
pop
xchg
mov
mov
mov
mov
incl
test
jle
mov
es
clc
pop
cld
outsb
adc
xor
mov
mov
ljmp
aad
js
enter
sbb
aaa
aam
xchg
push
mov
inc
cmpsl
sub
cli
js
add
mov
cwtl
test
inc
dec
inc
ss
mov
xchg
mov
dec
adc
ja
pop
test
adc
add
xchg
push
cld
jg
sbb
mov
lock
cltd
ud2
cmp
ljmp
decl
sbb
test
mov
sub
adc
mov
or
cwtl
add
xchg
sti
notl
fadds
sbb
js
movsb
mov
inc
sub
lcall
dec
call
sub
cmp
fcoms
js
fisttps
inc
sub
fistl
inc
cltd
mov
mov
dec
es
jns
call
fimull
inc
cmp
jns
call
mov
int
dec
jns
inc
or
xchg
data16
jbe
add
push
add
adc
test
rolb
jg
jmp
sub
f2xm1
or
dec
adc
es
cwtl
repz
cmp
pop
cwtl
inc
rolb
xchg
xchg
push
push
dec
xchg
push
or
dec
jecxz
loop
lahf
stc
popl
xchg
movsb
leave
xchg
shrl
in
mov
aaa
stc
lcall
movsb
cmp
aad
lea
xor
jmp
add
shlb
and
lcall
lcall
sbb
push
ret
inc
dec
xchg
sti
mov
xchg
fisubrl
flds
pushf
inc
jmp
cltd
jecxz
and
jg
iret
test
out
test
push
imul
and
in
mov
mov
jo
jnp,pt
jg
popf
rolb
push
mov
arpl
cltd
leave
jo
adc
xchg
jno
aaa
pusha
push
aad
outsl
add
add
sbb
sar
stc
add
jns
leave
jmp
arpl
dec
sbb
xchg
fs
mov
lcall
stos
mov
mov
jns
sbb
xchg
fs
inc
or
ljmp
movsb
insb
enter
xchg
cmpsb
jmp
pop
jb
call
movsl
leave
mov
pop
stos
jmp
pop
cmpsb
arpl
arpl
pop
sub
xor
nop
mov
jmp
fsts
leave
cmpsb
insb
lcall
movsl
pop
jp
add
test
ljmp
mov
cmpsb
xlat
jns
dec
add
push
outsl
add
negb
jle
loopne
ret
fnstcw
lahf
ljmp
or
lock
and
mov
pusha
or
popf
outsl
mov
ljmp
ljmp
xlat
dec
stos
mov
pushf
shrb
int
test
or
mov
fldcw
dec
popf
les
popf
pop
popf
je
lods
cs
mov
pop
lods
lret
imul
mov
xchg
mov
jmp
push
lods
jo
hlt
rorb
scas
lods
pusha
sahf
sarl
cmpsl
ja
movsl
fs
std
outsl
ljmp
lret
jp
add
scas
out
stos
scas
sti
xor
mov
or
cmpsb
xchg
mov
das
clc
mov
jle
lahf
pop
sbb
lret
mov
lock
insb
pop
push
stc
push
mov
fnstenv
add
insb
cwtl
addb
cs
add
stos
mov
xor
fidivs
push
pop
scas
movsb
cli
push
mov
mov
clc
in
sbb
movsb
jo
or
pop
mov
mov
push
lock
ljmp
jo
neg
scas
inc
sti
and
or
jmp
test
fisttps
repz
fisubrl
fwait
mov
imul
cmpsb
push
xlat
sub
jp
js
mov
fwait
lods
push
pop
inc
ljmp
mov
jmp
xchg
or
xchg
xchg
mov
ljmp
mov
push
mov
lock
decl
cmp
jmp
push
sub
sti
mov
dec
push
xor
jo
sub
add
xorb
mov
iret
decl
dec
fwait
scas
cmc
push
add
add
nop
add
push
add
pusha
mov
rclb
scas
decl
out
fidivl
fwait
pusha
nop
or
or
or
or
fcos
jg
or
add
call
mov
mov
mov
cmp
pop
mov
jnp
movsl
sti
mov
fidivrl
lcall
mov
or
mov
outsb
sub
shl
ljmp
sub
rcll
pop
shlb
sbb
sbb
lock
lock
xchg
fwait
and
cmp
es
lods
sbb
mov
add
pop
ret
into
mov
push
std
jg
xchg
mov
or
pop
adc
lcall
popw
mov
sti
inc
mov
add
rorb
popf
jo
movsl
nop
push
imul
lock
orb
dec
ret
push
pop
add
sub
inc
outsl
hlt
add
in
fisttps
xchg
and
jnp
mov
pusha
or
pop
jo
fwait
add
mov
divb
push
and
mov
add
push
lcall
pop
or
int3
mov
pop
lret
mov
sub
fwait
mov
pop
mov
sub
mov
lret
mov
and
pop
loopne
cltd
mov
mov
sbb
push
das
clc
jmp
dec
lods
pushf
scas
icebp
ljmp
mov
mov
fstpt
sbb
rcrl
sarb
mov
xor
cmp
call
outsb
enter
in
into
jecxz
into
loope
int3
data16
sub
std
mov
insb
fstps
cld
into
rcrl
cld
int3
imull
add
loopne
dec
adc
lock
decl
cmp
insb
adc
ret
addr16
add
mov
iret
xorb
xor
cmpxchg
loop
xchg
cmp
lods
int3
push
xchg
add
sbb
pop
sub
aam
adc
ret
jo
pop
adc
pusha
add
xchg
mov
sub
fdivr
sbb
hlt
ror
mov
ret
push
mov
les
mov
stc
dec
stos
add
pop
aam
std
les
mov
mov
mov
insb
mov
loop
clc
jg
mov
or
cmp
pop
jmp
add
mov
test
into
sub
out
enter
add
repz
jno
and
insl
add
dec
sbb
add
and
xchg
sti
xlat
loope
xlat
aad
iret
fmuls
or
out
mov
or
int
lods
add
addb
pop
pop
dec
add
fiaddl
stos
adc
pushf
aaa
adc
or
push
mov
inc
or
mov
cmp
mov
popf
and
sub
cld
outsl
adc
or
mov
repnz
fucomi
int
cmp
cmp
lock
dec
push
iret
and
iret
sub
shll
sub
mov
fidivrl
test
jmp
int
ret
sub
movb
stos
mov
sbb
sarl
sub
into
sbb
sbb
paddusb
mov
cmp
ficomps
adcb
sub
dec
pop
jg
fisttpll
in
dec
leave
dec
shl
pop
loop
adc
loope
cmp
pop
xlat
sbb
incl
sbb
call
or
cmp
xor
shlb
cmc
jo
pop
scas
scas
fmuls
fsubp
adc
test
call
xor
sbb
loopne
xchg
stos
sub
loope
fs
cmp
in
aam
loopne
or
cmp
push
mov
pop
repnz
fdiv
out
pushl
adcl
or
fistl
add
sbb
jp
int
cmp
scas
clc
call
mov
jge
pushfw
out
cmp
fcomp
fdivl
fdiv
loopne
imul
jle
fdivl
sub
pushf
iret
mov
loop
ljmp
js
cmpl
fists
jmp
jnp
jg
sar
into
mov
ret
add
jge
call
mov
push
jmp
push
loope
ds
into
enter
mov
pushl
shr
inc
push
in
inc
jle
enter
mov
dec
and
call
or
add
and
jl
add
mov
ucomiss
or
pop
mov
loope
inc
jbe
or
jmp
ficoms
jmp
psubb
or
adc
popa
adc
pop
mov
ja
xlat
ja
loop
loope
loop,pn
mov
cmp
jmp
or
lock
test
iret
sub
test
add
nopl
jne
into
int3
ljmp
jb
fcmove
insl
repnz
cld
int
scas
ljmp
test
into
in
mov
in
sti
pushl
scas
add
dec
repz
loope
psraw
jmp
mov
dec
adc
inc
jg
inc
lahf
or
hlt
aas
fcomip
xor
in
cmp
hlt
or
add
sbb
mov
aam
or
fdivrp
mov
or
sub
outsl
repz
lods
add
outsl
clc
adcb
or
outsl
in
test
xor
loopne
rolb
mov
pop
adc
or
aad
or
mov
jns
notl
push
lock
icebp
mov
mov
clc
lret
xchg
jg
cwtl
lahf
stc
call
jmp
mov
and
jbe
or
cmpsl
out
icebp
add
loop
sub
jmp
cli
mov
loope
into
clc
movsb
int
sub
mov
loopne
pop
mov
nop
repz
scas
or
cld
push
jb
das
idivb
aas
cmc
enter
loopne
cld
sub
out
loopne
iret
hlt
dec
and
hlt
cmp
jg
sti
iret
outsl
and
push
into
cmp
das
cld
cmp
jmp
mov
shrl
sar
outsl
test
aas
pop
or
in
push
jae
bound
insb
loope
jmp
add
add
jle
adc
inc
leave
rcll
and
test
sahf
adc
mov
loop
mov
testb
mov
mov
decl
in
xchg
daa
jne
fs
mov
shll
jl
jb
dec
subl
jg
and
aam
dec
fwait
sub
dec
lcall
push
popa
dec
xchg
jp
and
stos
mov
lcall
aad
inc
xchg
cmpsb
nop
pop
mov
pop
mov
pop
cmpsb
loopne
push
cmpsb
pop
mov
or
aam
lcall
loop
jmp
mov
and
test
mov
pop
xchg
in
decl
aaa
sub
mov
aad
push
ret
dec
inc
ret
and
or
jg
pop
js
xlat
pop
divl
push
fdivrl
push
out
outsl
loopne
in
lock
clc
mov
sbb
imul
loop
fdivr
jecxz
jne
adc
jmp
push
ds
xchg
repz
cs
push
jge
decl
pusha
mov
clc
arpl
sub
xlat
mov
dec
loop
jmp
subl
inc
dec
push
jmp
or
mov
das
rcll
ret
or
mov
adc
test
loop
mov
decl
mov
out
jle
mov
push
mov
pop
or
addr16
sub
scas
jmp
and
add
and
xchg
xchg
push
dec
mov
jmp
xchg
dec
jno
call
shll
pop
insb
gs
xor
cmpsl
and
mov
mov
into
cmp
movsb
ror
push
mov
xchg
dec
and
call
mov
jae
aas
iret
push
leave
incl
sub
and
cmpl
mov
call
inc
jmp
sbb
addr16
push
dec
and
jmp
int
cld
mov
inc
insl
xchg
push
lret
lods
mov
or
call
cld
inc
jb
and
and
rcrb
adc
pop
es
xchg
aam
lahf
xchg
cmpsb
push
outsb
mov
push
push
cmp
clc
adc
orl
insl
in
and
sar
jmp
pop
fistps
call
or
xor
fsubs
aad
sbb
ljmp
xor
cmp
or
loop
add
cmp
sbbb
cli
jg
pop
mov
cltd
ret
pop
loope
pop
outsb
jns
sbbb
mov
lcall
xchg
or
jbe
out
cmp
jp
mov
cmp
pop
imul
addr16
pop
or
sahf
xchg
ljmp
jnp
fisubrl
ljmp
jp
xchg
adc
clc
in
or
mov
jmp
stc
insl
xchg
movsl
cmp
std
int
cli
lcall
pop
push
fcmovnu
sti
pusha
cmpsl
lds
jo
ret
out
adc
xlat
fldz
mov
xchg
adc
pop
lahf
pop
popf
sar
push
inc
js,pt
enter
or
gs
xchg
mov
in
mov
jo
sbb
popf
jae
sbb
xchg
cmp
test
out
sbb
std
push
fmuls
mov
int
sbb
jno
xchg
jae
addl
aad
jge
mov
daa
mov
jl
jns
pop
js
jg
pop
mov
mov
jmp
mov
pop
xchg
mov
pop
call
xchg
test
push
ret
jmp
or
push
or
add
adc
jecxz
rcrb
ljmp
clc
in
cmp
push
ljmp
pop
jmp
push
sub
jle
mov
or
push
ja
popa
add
xchg
pop
add
and
mov
mov
aaa
mov
mov
lahf
add
aas
icebp
add
push
or
call
nop
xor
ret
popf
push
dec
sarl
int3
popf
add
inc
sub
mov
mov
in
lret
xlat
popf
iret
ja
fstsw
fs
adc
mov
mov
xor
popf
adc
cmp
mov
mov
shll
decl
cwtl
inc
adc
cs
dec
sbb
dec
jl
sbb
loop
xor
push
aam
lcall
sub
sarb
sub
dec
repz
xchg
or
add
incl
popa
or
movsl
sbb
out
fiaddl
dec
or
mov
cmp
pop
push
adc
ljmp
mov
mov
rcrw
jp
push
dec
pop
ljmp
pop
cmpsb
xor
dec
push
xchg
lods
add
and
dec
ljmp
xor
sub
scas
jae
in
or
aaa
test
push
shll
jmp
xor
cmc
inc
es
push
adc
call
and
xchg
leave
lret
cmpl
gs
dec
clc
push
pop
adcl
das
call
push
xchg
mov
inc
adc
jmp
inc
imul
mov
or
xor
cmp
mov
jmp
ja
mov
rcrl
fwait
ljmp
jmp
dec
inc
dec
dec
sbb
lret
push
sti
test
shll
xor
jae
inc
in
add
jnp
stos
inc
xor
lcall
pop
add
push
pop
arpl
mov
push
in
daa
popf
mov
cmpsl
ljmp
sahf
jb
lods
mov
jmp
jns
repz
xchg
cmpsl
sub
cwtl
into
jl
adc
stos
pushl
rcrl
fstps
xchg
ficompl
ss
in
in
mov
and
cs
dec
inc
rorl
mov
cmp
cwtl
push
adc
pushl
add
rcrl
fisttpl
jmp
jnp
dec
pop
xor
mov
dec
cmpsb
lcall
scas
fs
popa
pop
pop
push
xchg
mov
xor
cwtl
mov
aad
ja
shl
lcall
mov
stos
pop
dec
cmp
mov
lea
lret
in
push
mov
lds
cli
lcall
xchg
xchg
lret
lds
adc
xchg
add
out
jns
fsts
xchg
mov
ljmp
sub
pop
or
pop
ret
fistps
inc
mov
xchg
fldcw
test
filds
ret
ret
mov
push
es
mov
sar
test
pop
outsb
je
add
xchg
dec
jle
sub
decl
push
push
call
les
repnz
fwait
insb
loop
arpl
add
test
xchg
adc
iret
push
mov
in
vmaxsd
pop
dec
xor
stc
lret
imul
frndint
data16
mov
inc
insb
loop
incl
aam
or
cmc
sub
inc
pop
pop
rolb
jge
inc
daa
pop
rorl
cmpsb
sahf
in
cmpsl
add
cld
je
sub
pop
rcrl
loop
addl
nop
cltd
shll
push
cmpsl
sbb
sbb
push
aas
stos
pop
mov
jmp
jnp
jg
or
jg
std
imul
fadd
es
lock
lret
data16
popf
std
in
dec
push
push
adc
out
pushl
mov
pop
fcmovnb
jbe
sub
outsl
pop
fsub
es
cmp
out
rcl
jmp
mov
ja
movsb
scas
mov
ljmp
ret
js
jmp
std
outsl
andb
add
mov
add
test
jl
call
jo
mov
aad
mov
mov
sbb
js
push
outsb
xorl
and
jmp
mov
pop
mov
jns
pop
cs
iret
repnz
mov
jle
test
sti
loop
decl
lock
mov
jae
mov
rorb
pop
adc
cmpsl
lock
pushl
test
jnp
jmp
in
push
sbb
addr16
xlat
cmp
or
dec
mov
std
aam
ja
es
jbe
cmpsl
jge
pop
cmp
dec
cltd
mov
pop
out
jae
mov
test
fwait
out
jnp
jnp
mov
mov
cmp
jmp
cld
lcall
lock
xchg
fdivp
lret
lea
pushl
arpl
xchg
out
in
push
jns
out
fimuls
pop
jp
jae
iret
std
fwait
aaa
loopne
cli
mov
xchg
stc
out
push
mov
std
fdivrl
mov
ret
xchg
sti
movsb
ljmp
stc
push
xchg
cmp
lods
jecxz
xlat
lcall
in
out
cmpsb
push
clc
cltd
sbb
pop
stc
fiadds
jg
adc
xchg
imul
imul
jg
popf
jnp
addr16
mov
cli
mov
aas
out
call
mov
in
jmp
incl
sub
xorl
lock
add
shll
mov
jbe
xor
mov
int3
mov
push
aas
mov
inc
inc
dec
cli
incl
inc
adc
xor
dec
movsl
adc
inc
outsb
cmp
movsb
ljmp
xchg
xor
ret
movsb
add
sbb
or
decl
mov
mov
cli
cmp
dec
ret
fsub
shll
push
call
sub
sub
ret
mov
lods
mov
inc
inc
sub
inc
and
inc
pop
lods
bound
incb
sar
in
mov
ret
int3
xchg
cmp
mov
push
je
dec
fidivrl
cld
push
jg
ret
jl
cmp
rol
pop
jecxz
inc
pop
les
ret
inc
dec
mov
es
imul
inc
dec
mov
dec
fadd
sub
inc
out
inc
dec
or
push
rolb
inc
repnz
xor
push
in
sbb
inc
sub
push
jl
lods
les
inc
arpl
lahf
sti
mov
cmp
jg
incl
pop
lds
lds
inc
push
sbb
jo
arpl
ljmp
pop
int3
daa
or
scas
adc
pop
lcall
ret
gs
mov
outsb
lods
lock
ljmp
cmpsl
sbb
sub
inc
pop
add
jae
ret
sub
pop
inc
and
inc
js
lcall
jbe
and
stos
jae
lds
jge
jno
inc
repnz
inc
push
xchg
or
sbb
je
cmp
xor
adc
inc
xchg
inc
pushl
enter
rcll
pushf
mov
mov
dec
test
dec
hlt
lcall
dec
xchg
test
sub
sbb
dec
xchg
inc
rcll
xchg
aam
xchg
mov
test
in
call
or
dec
popf
xor
pushf
in
leave
test
mov
lret
decl
dec
dec
std
stos
enter
movsl
add
push
pushf
cmp
jmp
mov
in
or
lret
jb
dec
lock
adc
ljmp
inc
mov
mov
mov
mov
sub
mov
lret
mov
ret
lcall
mov
push
dec
mov
sub
xchg
out
dec
mov
jmp
stos
dec
inc
push
int3
in
dec
pop
int3
rorl
movsb
mov
mov
jl
int3
in
dec
aam
dec
shrb
adc
push
mov
dec
mov
jae
fstps
lods
int
mov
fcmovnu
int
jmp
jmp
dec
shlb
hlt
aaa
cld
lret
dec
ret
xor
iret
pop
int
push
mov
dec
push
ret
out
cmp
dec
adc
dec
jmp
cmp
dec
pop
adc
mov
jp
dec
fildll
iret
fcmovnb
into
mov
mov
or
mov
enter
repz
cli
fs
ds
sub
mov
iret
loop
into
hlt
dec
neg
dec
add
mov
xor
call
fistps
incl
add
mov
scas
add
push
lods
subl
lds
push
sar
pushl
test
pop
hlt
push
fbstp
and
cmp
shrb
lods
adc
cmpsl
call
adc
inc
sbb
sbb
push
cmc
lret
sbb
add
sar
call
std
rorl
xor
push
jne
es
rcrl
push
shrb
lea
jecxz
shrb
jne
sbb
call
sub
mov
jns
imul
dec
jb
cs
xor
cmp
cmp
or
daa
jge
pushf
mov
xchg
push
das
mov
xchg
mov
xor
push
clc
das
xor
ss
sub
ljmp
cmp
xchg
cmp
stos
add
push
sbb
push
or
inc
aam
inc
movsl
fmul
test
lret
sub
push
push
adc
sbb
push
aad
decl
lock
loopne,pn
cmp
dec
xchg
aad
jge
fldl
mov
sub
lcall
aad
fwait
test
int
adc
shlb
mov
jge
lock
and
mov
adcb
lea
push
cmc
insb
movsl
shrb
push
test
jg
ds
jb
xlat
add
imul
insl
jbe
xlat
jg
sar
mov
mov
repz
sarb
pop
cmpb
incl
and
xlat
bound
pop
inc
movsl
fdivrs
fdivrs
add
das
xchg
pop
jg
fmuls
mov
mov
and
test
or
fdivrs
fnstenv
pop
dec
test
ljmp
call
pop
cmp
sahf
fadds
pop
pop
and
mov
sub
repnz
pop
xor
lcall
movsb
xchg
cs
mov
push
adc
jmp
mov
mov
jmp
mov
dec
xor
cmpsl
sub
jmp
push
sub
xor
mov
sub
mov
push
pop
and
fisttpl
pop
xlat
cmp
sbb
jne
jg
mov
dec
rcr
push
je
push
xchg
loop
movsb
mov
insl
ljmp
add
xor
arpl
gs
and
ljmp
movsl
mov
scas
scas
inc
mov
cltd
mov
add
xor
fistpl
std
fcomip
mov
pop
loop
pop
push
inc
sub
mov
pop
fcom
mov
mov
pushl
enter
pop
lret
sub
insl
mov
shrl
dec
xor
out
in
pop
xor
repz
out
pop
mov
fistl
xor
jge
and
pop
lock
pop
idiv
ja
rolb
or
xchg
sub
xor
in
jg
pop
clc
std
pop
cli
sbb
xor
repnz
cld
or
repnz
xor
movsl
pop
or
xor
sub
in
fcomip
add
or
shlb
mov
stc
cmp
add
add
xor
loope
fstpl
fdivl
movsl
pop
ret
sub
fcoml
repz
xchg
pusha
adc
jmp
cmp
mov
mov
adc
xor
leave
fnclex
sub
mov
fsubrp
mov
incl
andl
add
ds
bound
cmpl
sub
jmp
add
mov
xor
arpl
fsubp
ljmp
xchg
bound
push
mov
and
xor
ss
sbb
daa
jle
daa
incb
into
arpl
in
imulb
mulb
nop
cmp
in
out
jecxz
movb
lcall
cwtl
scas
fs
xchg
fs
jecxz
xorb
inc
out
das
scas
xchg
in
sahf
loop
sahf
dec
in
xchg
push
cmpsb
cmp
in
xchg
loop
xchg
in
mov
cmp
inc
push
sub
cld
lods
jge
pop
gs
add
orb
bound
out
push
arpl
incl
jecxz
scas
in
mov
int
movsl
sbb
imul
decl
xchg
mov
addr16
lock
or
out
dec
out
es
data16
out
out
adc
out
xchg
jnp
addb
xchg
addr16
push
push
inc
push
test
push
pusha
or
mov
jbe
out
nop
jae
out
xchg
out
mov
out
cs
std
jmp
out
cmp
jo
xchg
mov
outsl
js
fisubrs
fsubp
pushf
dec
std
pushl
addl
rcll
mov
inc
enter
fadds
mov
add
mov
xor
sub
test
mov
scas
mov
push
loopne
mov
imul
push
add
ss
invd
imul
add
jle
lods
mov
out
mov
stos
imul
call
mov
mov
mov
insl
mov
add
insb
cmp
xor
fsubrs
push
in
jmp
lods
lods
pop
mov
push
add
sar
gs
push
in
lret
stos
mov
scas
dec
mov
mov
pop
adc
push
and
sbb
decl
outsb
inc
call
in
test
cs
push
enter
xorb
ljmp
jg
lcall
mov
addb
pop
enter
out
dec
dec
outsl
cmc
pop
outsl
jg
in
push
outsb
out
testb
mov
sahf
or
cld
sbb
cmpsb
out
hlt
fisubrs
outsl
outsl
push
outsl
decb
jo
pop
jo
es
outsl
add
pop
cs
data16
outsl
xor
jo
je
or
add
jo
jg
add
push
and
test
pxor
jno,pn
xor
icebp
aad
call
push
icebp
adc
jno
xchg
emms
outsl
pop
jg
dec
mov
push
pop
jno
mov
add
data16
and
sub
and
or
js
sub
jecxz
outsb
daa
lahf
repnz
mov
or
das
out
jb
pop
jae
mov
test
ljmp
repnz
dec
sub
xor
jae
repz
jae
jg
jg
pushl
xchg
sub
cmp
jae
cmpsl
jae
lahf
repz
repnz
xchg
repz
clc
in
jg
xor
jb
ja
dec
xchg
je
jae
daa
je
push
fdiv
ljmp
daa
hlt
cmp
jne
aas
cmc
sub
mov
call
repnz
cwtl
sub
inc
cmp
je
xlat
je
aaa
repz
ljmp
adc
repnz
pop
shrb
sahf
fnstenv
add
call
icebp
push
pop
jbe
iret
jb
xchg
cmp
imul
jbe
out
repnz
jbe
fiaddl
mull
jb
add
imulb
aas
ja
inc
mul
scas
divb
imulb
imulb
je
add
fistpll
call
ja
jg
jb
idivl
ja
mov
xchg
dec
mov
jg
adc
mul
repnz
cmp
and
gs
js
jg
mov
mov
out
and
mov
adc
pushl
out
ljmp
stc
and
js
jg
incl
clc
jnp
imulb
sub
stc
popf
iret
jns
xchg
sahf
fistpll
mov
jne
inc
movsb
stc
cwtl
xlat
jns
pop
jp
daa
jp
mov
fbld
div
insb
out
mov
stc
cmpsl
pop
cli
test
or
loop
faddl
inc
clc
sahf
notb
sti
pop
iret
divb
cli
js
stc
pop
lar
or
and
xchg
je,pn
icebp
mov
je
jmp
stc
scas
aas
sti
mov
mov
cli
mov
jl
pop
jl
pop
jnp
push
clc
pushl
sti
mov
cld
cltd
das
cld
sub
jp
pop
jno
stc
idiv
call
cld
fwait
aas
hlt
stos
pop
std
pushf
push
jl
jg
shll
dec
addr16
fnstenv
pushl
pop
mov
pop
cmpb
push
xor
pop
aas
pop
jnp
jg
jl
inc
cld
fmull
xchg
in
mov
jl
jl
ja
lock
jnp
lahf
cld
out
adc
mov
cmpsb
das
jp
jge
pop
dec
scas
jle
fistpll
xchg
aam
jg
jmp
jns
pop
mov
push
push
adc
rcl
inc
andl
adc
dec
lods
dec
ljmp
inc
xchg
aaa
jb
fdiv
mov
xor
jmp
cmp
sub
mov
pushl
movsb
gs
ret
dec
inc
and
cmpsb
adc
fcoml
loope
mov
pushl
and
test
mov
call
cs
adc
popf
xchg
jge
ss
jmp
xchg
dec
movsl
stos
shl
fldt
cmp
aas
sahf
sub
movsb
push
mov
in
fwait
call
fld
testl
mov
sub
ret
jg
sbb
fsubrs
insb
imul
push
xor
jbe
lods
push
rorb
or
pop
loopne
insb
jnp
xor
xor
cmpsl
int
ss
mov
add
jle
cmp
lods
insl
lods
push
ljmp
int
and
mov
jecxz
movsl
sti
mov
jg
lods
jnp
mov
sahf
cld
in
repnz
loopne
in
jg
lahf
mov
ljmp
xchg
sbb
aad
and
jno
push
adc
dec
or
push
test
and
pushl
incl
push
mov
pop
mov
sahf
pusha
imul
push
sbb
lcall
addb
sti
xchg
lea
or
jo
and
push
xlat
pop
mov
inc
jmp
or
arpl
adc
pop
xchg
js
mov
in
xchg
dec
push
or
incl
dec
movsb
sub
test
lcall
mov
mov
or
add
gs
xor
mov
negl
fs
push
test
aaa
test
jp
jp
mov
mov
shlb
ljmp
loope
addr16
mov
mov
cmpsl
mov
outsl
inc
popf
push
stos
mov
mov
js
stos
mull
pushl
sub
pop
outsb
and
adc
dec
test
add
pop
rorl
inc
in
pushl
pop
sbb
cmpsl
mov
pop
cli
fistpll
push
jns
mov
cli
stc
test
pop
lret
mov
mov
ficomps
jno
lea
bound
xlat
sbb
pusha
in
lcall
cmp
in
mov
mov
push
cmpsb
mov
lods
test
cmp
jno
je
stos
jmp
jp
rcl
jl
or
add
dec
or
stos
mov
cmp
in
js
cmc
sbb
std
aad
imul
subb
lret
dec
mov
or
or
jl
push
mov
lea
or
pusha
das
fneni(8087
or
lret
insb
dec
pop
dec
imul
xchg
into
pop
cs
incl
mov
jp
mov
push
pop
and
neg
jmp
loopw
int3
ja
pusha
inc
dec
pop
std
icebp
in
and
xor
lcall
add
shrb
in
mov
sub
dec
or
dec
jno
addr16
es
pushl
mov
or
aaa
fidivs
cltd
sarb
cmp
cmc
stos
xor
movsl
call
jge
sarl
jle
rolb
clc
out
mov
sub
dec
jl
dec
sbb
mov
lods
movsl
iret
call
rcrl
js
mov
fstl
xchg
sub
dec
stos
enter
mov
xchg
push
fdivl
add
dec
cmp
mov
out
push
lcall
hlt
sbb
mov
or
jg
cmp
lret
push
stc
cld
xchg
stc
mov
lcall
xchg
imul
je
push
and
mov
repnz
cmp
dec
outsb
sbb
inc
adc
setae
cmp
js
sub
push
xchg
sbb
adc
adc
xchg
and
push
mov
and
decl
dec
or
out
fs
sbb
incl
pop
pop
out
cld
mov
sub
icebp
mov
incl
or
and
or
dec
dec
rclb
das
dec
dec
lea
xchg
inc
push
jmp
xchg
pushf
hlt
and
dec
pop
enter
xchg
scas
insb
in
incl
mov
jl
orl
ljmp
or
dec
arpl
push
or
mov
push
xorb
mov
mov
sub
jle
int
dec
rcrl
mov
push
scas
sub
push
xchg
imul
pop
roll
rorl
push
lcall
rorl
jmp
jno
popa
loope
xchg
in
mov
and
arpl
mov
shrb
outsl
cli
lcall
and
rorl
mov
es
adc
mov
sbb
call
pushl
sub
and
stos
rclb
lods
push
xchg
sub
ljmp
cli
outsl
xor
push
dec
push
jbe
test
movsl
sub
lcall
out
xchg
cmpsl
dec
jge
push
mov
mov
mov
adc
in
aad
adc
into
push
dec
cmp
lock
jmp
shrb
rcrb
roll
xlat
mov
lods
jmp
pop
xor
and
test
rcll
mov
adc
xlat
fucom
jne
and
push
add
xlat
cmp
adc
mov
test
jmp
push
movsb
mov
xor
sahf
std
insb
push
or
mov
push
mov
sub
pop
dec
xchg
in
mov
push
push
cmp
xchg
adc
cwtl
add
movsb
push
push
test
lcall
mov
iret
mov
jp
mov
gs
hlt
scas
lcall
inc
and
aam
mov
arpl
pop
mov
aad
gs
pop
hlt
cmp
pushf
outsb
dec
pop
jmp
in
outsl
jne
dec
inc
cmc
mov
ljmp
js
ret
lea
pop
bound
insl
fdiv
lcall
mov
push
stos
idivl
decl
xor
jmp
mov
scas
mov
test
jecxz
ss
dec
fwait
popa
adc
ljmp
sbb
push
sahf
sub
fsubl
sbb
jns
lods
jnp
sbb
sbb
cli
ljmp
sub
gs
dec
cltd
lret
icebp
dec
pop
loop
add
push
pushl
rcl
clc
ss
and
jl
stc
int3
mov
sbb
lcall
jecxz
popf
ljmp
aas
shl
hlt
repz
stc
pop
ds
into
pop
out
jg
sub
xor
sbb
xchg
andl
adc
into
call
pushl
mov
cli
into
jbe
out
inc
ds
dec
jae
rcl
push
xor
cli
incl
xor
insl
sub
js
repz
or
popa
scas
mov
ljmp
dec
jmp
into
pop
cmc
mov
or
je
inc
or
fnstcw
pop
icebp
call
call
add
inc
cmp
mov
mov
js
adcb
decl
adc
movsb
outsb
and
icebp
cmp
mov
jb
mov
pop
adc
sbb
and
ja
cmc
push
or
test
call
push
add
insb
inc
loop
adc
add
jo
ret
jb
shrb
add
jae
cmp
call
in
jnp
sbb
sub
add
push
frstor
shl
or
or
jno
call
adc
repz
mov
loopne
rorl
std
xchg
mov
ja
shr
and
add
xor
repnz
es
or
pushl
bound
jo
bound
cmpsl
jge
repnz
or
add
mov
into
repz
fcomip
add
loope
sahf
dec
out
repz
mov
ret
xchg
outsb
ret
pop
sahf
dec
cmp
mov
or
loope
es
xor
and
es
dec
outsb
out
out
movsl
in
ljmp
mov
daa
iret
sbb
sub
adc
scas
repnz
cmp
out
clc
mov
and
mov
mov
add
scas
push
push
shrb
ja
jmp
push
sbb
xchg
pop
repz
out
push
mov
scas
xchg
pop
jbe
cs
decl
out
jl
cmp
mov
rcrl
enter
lock
jg
call
fucomp
aas
call
inc
jmp
or
sbb
xchg
sbb
in
mov
mov
dec
mov
jg
aaa
test
inc
pop
fistps
loopne
sub
aaa
sub
push
enter
pop
icebp
test
or
mov
decl
or
pop
pop
rcrb
sahf
xchg
lock
pop
xorl
inc
pushf
les
lahf
int3
fldl
loope
js
dec
movsl
dec
das
imul
cwtl
adc
cmp
mov
aad
lock
decl
adc
popf
test
push
xor
push
cwtl
adc
cmp
sub
mov
call
xchg
clc
popf
filds
shll
add
rcr
repnz
cld
add
inc
xor
mov
shrl
and
loop
lahf
rcll
pushl
dec
shrb
pop
xchg
popa
leave
std
and
sbb
dec
dec
lcall
mov
negl
shlb
push
or
aaa
mov
cmp
out
adc
pushf
rcl
popaw
push
loope
aaa
cld
ljmp
mov
or
ficomps
push
loope
push
sbb
inc
jns
outsl
mov
fistpl
inc
and
lret
ret
jb
js
int
jmp
push
sbb
pop
shl
fnsaves
pop
adc
popa
loop
cmpl
call
loope
mov
aad
decl
dec
or
add
inc
cwtl
add
fs
ret
inc
mov
cmp
jg
cs
push
and
and
adc
fs
ds
push
in
push
add
pusha
and
inc
jbe
aas
sti
outsl
xor
add
and
rol
or
cmp
fs
mov
in
movsb
inc
xor
in
xchg
add
in
mov
dec
cs
cli
mov
fdivrp
aaa
mov
sub
sbb
push
push
inc
adc
and
mov
dec
out
and
data16
bound
es
and
and
dec
call
in
lcall
movsb
dec
mov
pop
cmpsb
and
loopne
pop
into
and
push
gs
fcmovnu
adc
inc
sahf
and
xchg
mov
movsb
push
push
pop
data16
ljmp
jbe
inc
in
in
sarl
test
and
ljmp
call
add
inc
xor
push
cmp
push
out
outsl
mov
imul
sbb
mov
outsb
cmpsb
insw
es
xchg
outsl
pushw
push
imul
add
into
outsw
out
pop
jnp
jg
sub
shlb
ss
mov
cmpsb
jbe
and
incl
out
xchg
daa
js
es
data16
cmpsl
jae
out
push
and
insb
ljmp
dec
ljmp
pop
jnp
out
repnz
outsl
mulb
cmpsb
incl
daa
push
out
daa
insb
push
jl
imul
push
das
inc
sar
ja
test
jbe
imul
fs
jmp
ret
sub
aam
push
orb
adc
mov
imul
test
jle
lea
jmp
inc
ljmp
or
sub
mov
fwait
call
sub
decl
sub
push
imul
push
sub
jmp
fidivl
decl
test
push
imul
and
mov
and
xchg
jle
adc
test
call
sbb
subb
hlt
and
xchg
or
sub
cwtl
push
ljmp
test
jmpw
mov
xchg
jb
fwait
mov
fwait
insb
stos
cmpsb
inc
jmp
adc
add
call
sub
xchg
dec
jmp
xchg
mov
dec
decl
stos
mov
or
jecxz
dec
es
test
mov
or
adc
les
ljmp
mov
add
stos
xchg
push
imul
mov
inc
sahf
inc
mov
jmp
popf
inc
into
imul
arpl
imul
call
inc
mov
test
inc
mov
stos
mov
imul
mov
stos
mov
xchg
mov
lcall
pushf
sub
or
call
xor
mov
inc
shrb
aaa
shlb
sarl
sub
xchg
push
test
mov
in
jmp
scas
or
insb
les
lret
sahf
in
mov
sub
sub
mov
scas
sub
mov
rorl
lret
mov
cli
mov
dec
sub
stos
xchg
xor
or
lods
shlb
jmp
cmp
mov
mov
push
movsb
les
cmp
ss
dec
call
in
fcmovne
sub
ret
mov
fdivp
lods
push
rorb
lods
loopne
in
fistps
scas
scas
out
and
lods
push
into
push
loopne
cs
fmull
fists
ret
cs
out
in
ljmp
in
in
arpl
cs
ljmp
jb
lods
sahf
inc
ljmp
incb
in
sbb
loopne
adc
outsb
fidivrl
fsqrt
rorl
sub
xor
outsl
pop
scas
icebp
push
das
repnz
ljmp
ljmp
adc
repz
ds
mov
out
dec
push
scas
cmc
scas
imulb
mulb
scas
testl
add
inc
cmp
les
cld
jg
movsb
dec
repz
mov
scas
cld
into
das
std
scas
std
fisubrs
out
out
pop
into
insl
sti
scas
and
xchg
out
notb
lds
mov
scas
add
xor
aaa
mov
aas
xor
jo
ds
ficoml
movsb
insl
add
incl
lods
add
mov
jg
adc
dec
out
or
scas
xchg
mov
or
das
fdivs
fcoms
adc
pushl
lret
mov
or
lock
push
das
decl
push
or
cmp
incl
add
outsl
dec
mov
testl
or
mov
lret
jno,pn
fwait
ss
push
and
jecxz
fisubl
cmpsb
mov
cmc
ljmp
adc
xor
icebp
adc
inc
jmp
xor
enter
add
pop
mov
add
push
adc
mov
pop
mov
daa
jno
and
icebp
lock
inc
and
mov
addr16
ja
push
aas
loope
das
clc
fists
xor
mov
pop
and
xor
pop
push
and
adc
repnz
repz
fwait
das
sbb
lock
lock
xor
decl
xor
pop
repz
or
mov
daa
xor
jecxz
sub
call
loopne
push
xor
xchg
pop
xor
xor
scas
sub
aad
out
inc
mov
inc
push
movsb
outsl
xchg
data16
nop
repz
fistpll
cmp
ret
repz
ljmp
cmp
or
pop
pop
addr16
dec
nop
call
fbstp
jg,pt
and
jno
in
xor
pop
xor
pop
xor
div
dec
mov
sbb
cmp
add
xor
cmp
div
inc
dec
xor
das
mov
xor
inc
cmp
mov
inc
add
ret
xor
mov
sbbb
xor
mov
or
lcall
xor
inc
push
mov
fildll
mov
cmp
and
fstpt
xchg
mov
je
xchg
mov
add
incl
dec
mov
dec
scas
je
rol
jmp
dec
stos
je
inc
hlt
cmp
in
mov
dec
adc
jl,pn
es
inc
out
pop
mov
in
jg
divl
or
orb
das
jmp
pop
arpl
inc
sub
mov
hlt
add
add
push
clc
arpl
out
xor
gs
mov
addr16
mulb
mov
add
xchg
mov
mov
out
ret
mov
rolb
ss
stos
add
jbe
mov
insb
jmp
inc
mov
pop
xor
fbstp
jbe
divl
cmp
imul
push
mulb
ss
sarl
notl
add
das
inc
cmp
maskmovq
mull
add
push
out
mov
pushl
pop
mulb
add
jbe
mov
fwait
ja
shl
outsb
jmp
jns
jge
add
push
mov
addr16
fcomi
fldt
pop
cmp
mov
hlt
xorb
xchg
jbe
pop
mov
jg
andl
addr16
inc
cmp
jp
cmp
sar
ss
ss
adc
inc
inc
xchg
mov
cmp
incl
clc
push
add
jno
testl
mov
out
fists
xchg
aas
mov
xlat
aaa
adcl
add
xchg
daa
cmp
xchg
jecxz
jge
shrb
mov
out
inc
xor
int3
stc
je
stc
cltd
jae
jecxz
fwait
ljmp
jns
cmpl
rclb
arpl
repz
loopne
cs
stc
outsl
imul
pop
jne
lock
lret
jns
mov
xchg
in
mov
cwtl
mov
push
cmp
mov
mov
mov
xchg
ja
ljmp
mov
or
addr16
lahf
clc
imul
cltd
stos
mov
inc
jp
mov
scas
out
aas
mov
in
cmp
out
sbb
cli
lods
adc
scas
call
ljmp
mov
jp
xor
shlb
fstpt
jbe
rolb
idivl
or
repnz
cmp
dec
jnp
pop
ja
cmp
mov
mov
ret
cmp
sti
jg
fstpt
rorb
mov
sti
cs
hlt
inc
shl
scas
call
cmp
cli
shrb
mov
pop
mov
jecxz
mov
jg
mov
cld
enter
add
cmp
cmp
cmp
jnp
mov
adc
jecxz
cvttps2pi
ret
cli
mov
mov
outsl
push
sti
mov
lret
pop
sti
into
sarl
jmp
cld
scas
mov
test
aad
jge
addr16
ja
loopne
rorl
cmp
bnd
cld
fcoms
jg
lcall
adc
jp
repz
jl
cmpl
fwait
jge
push
sbb
std
fistpl
jge
mov
stos
mov
pop
cmp
adc
fadds
fistpll
aaa
cld
xchg
jl
addr16
scas
sbb
aad
inc
fmull
call
call
aam
jge
lret
std
loop
call
adc
stc
jmp
fcomi
push
ljmp
add
pop
aas
lock
ds
cmp
std
lret
add
jg
sti
mov
cmp
inc
push
faddl
mov
outsb
mov
xchg
mov
stos
cmp
aas
mov
sti
mov
out
cmp
xchg
jg
xchg
jg
fistpll
fstpt
jg
add
in
adc
inc
test
xor
nop
mov
and
arpl
pushl
cmpsb
sub
mov
and
clc
adc
adc
repnz
jmp
shll
push
or
movsb
iret
mov
sbb
or
outsl
aad
call
in
and
sub
inc
adc
jmp
dec
mov
push
mov
xor
jg
arpl
das
enter
aad
gs
in
pop
mov
jae
outsl
fidivrs
and
mov
sbb
jmp
mov
jb
leave
jae
push
push
jl
sub
scas
cmp
lcall
xor
mov
fstp
jno
aad
sbb
push
mov
frstpm(287
cld
pop
addr16
lahf
jns
mov
xlat
mov
mov
push
sbb
sbb
mov
jmp
add
add
lcall
pushl
enter
test
cmc
fld
scas
ja
cmp
jge
repnz
cmp
jmp
pop
cmpb
mov
cmp
das
cli
pushl
iret
adc
xchg
sbb
mov
cmp
std
lret
dec
mov
cmp
repz
sarb
cs
mov
and
ds
cld
xor
jmp
wrmsr
repnz
xchg
mov
xchg
and
xor
inc
push
pop
cmp
jmp
dec
sub
lahf
sbb
lret
sub
pop
cs
and
lods
hlt
xchg
lret
dec
scas
dec
incl
popl
lret
je
sbb
cld
push
dec
xor
mov
popf
jl
dec
cs
out
clc
test
imul
inc
int3
sub
sbb
in
xor
inc
testl
inc
stc
fs
sub
dec
mov
push
mov
dec
cmp
jg
pop
gs
push
inc
daa
adc
mov
leave
sub
add
fs
mov
das
test
ss
push
pop
cld
jg
cli
jne
fisubrl
adc
push
mov
xchg
sahf
sbb
pushl
lret
sub
in
push
push
outsb
fwait
dec
adc
jbe
and
jbe
cmc
mov
jbe
pushl
mov
cltd
mov
fisubs
int
pusha
pop
xchg
clc
jg
mov
jge
fisubl
mov
and
mov
pop
lock
js
or
fs
shll
pop
cltd
orb
sahf
xchg
lcall
cltd
out
xor
gs
out
gs
call
out
test
call
jmp
arpl
popl
sahf
lcall
stos
rcll
xchg
fs
inc
or
decl
lret
in
mov
pop
fwait
insl
mov
imul
sbb
push
sub
mov
xchg
fucomi
mov
mov
pop
out
rclb
add
rcr
pop
add
mov
out
jae
and
sbb
rcrb
cmpsl
cmp
push
mov
mov
mov
ror
inc
mov
addr16
or
nop
daa
cltd
insl
clc
dec
out
pop
pop
sub
lods
in
pop
push
mov
fwait
mov
lahf
stc
in
lret
in
mov
clc
dec
sahf
jnp
push
and
ljmp
xor
std
rep
jg
jmp
outsl
sar
push
cld
jge
lds
sti
xchg
iret
and
out
xchg
daa
jg
loope
push
cld
loop
or
jg
or
jle
lret
add
je
decl
dec
inc
add
movq
mov
cmp
and
sahf
std
dec
cwtl
xchg
jl
call
out
dec
and
push
or
jns
test
pop
loope
imul
add
in
xlat
mov
les
add
cli
mov
and
mov
icebp
inc
xor
loopne
push
mov
inc
loop
inc
add
test
inc
je
sbb
movsb
pusha
add
lods
in
or
and
jb
outsb
pop
xchg
xor
jecxz
sub
sub
lods
mov
out
add
xor
daa
or
xchg
jmp
cwtl
jge
out
add
lcall
adc
dec
inc
cmp
and
std
jnp
mov
add
add
mov
or
pop
push
or
or
or
or
push
adc
push
adc
adc
push
adc
adc
sbb
adc
adc
adc
add
data16
or
pop
adc
loop
push
ficoml
push
add
and
fsubrs
lds
sub
dec
jp
fwait
add
in
adc
xor
ja
inc
mov
lds
imul
ds
jg
add
push
adc
pop
and
xor
inc
mov
adc
xor
enter
cmpb
sbb
and
sub
imul
mov
push
insl
dec
int3
xchg
mov
xchg
xchg
ljmp
xchg
and
movsl
cmpsb
cmpsl
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
loop
in
out
call
add
cmc
div
clc
stc
cli
scas
pushf
into
jo
or
add
push
stos
add
pop
scas
cmp
adc
outsb
decb
lods
push
adc
pop
popa
jno
and
adc
mov
and
lods
or
xor
adc
loope
icebp
and
xor
add
or
cmpsl
scas
fiaddl
or
js
jg
add
mov
lretw
dec
shrl
out
push
xchg
push
repnz
dec
add
mov
mov
add
clc
pop
stos
add
shl
fistpll
jge
or
call
dec
mov
add
aaa
in
fiaddl
out
sti
popa
lock
pop
std
add
call
push
mov
in
sti
lret
jnp
cmpsb
jge
cmc
call
into
sbb
xchg
lcall
clc
jns
cld
xor
mov
mov
fldcw
cmp
pop
in
psrlq
sub
sub
imul
les
jb
int3
fdivl
mov
mov
fbld
xchg
cmpsb
cwtl
sbb
jnp
clc
imul
sbb
jns
xor
adc
nop
sbb
adc
jl
loop
jg
cmp
loop
jbe
sbb
das
inc
cmp
jge
addr16
xor
aad
sub
push
les
ret
xlat
into
push
jns
add
adc
sub
or
fnstcw
lret
push
repnz
adc
xor
enter
wbinvd
xchg
or
enter
aam
add
ss
sti
adc
pushl
sarb
jle
clc
sahf
ret
ret
ficomps
mov
inc
push
mov
xchg
ljmp
ret
icebp
fldt
clc
inc
sbbb
fists
in
xchg
xchg
dec
jge
incl
push
lock
pop
push
cld
dec
pop
icebp
outsb
xchg
ficoml
mov
mov
movsl
decl
sub
pop
lcall
cltd
ja
test
mov
mov
ljmp
ljmp
mov
leave
inc
icebp
pop
dec
jno
and
mov
push
jno
daa
xlat
jne
sbb
push
imul
ljmp
aaa
xchg
xor
inc
call
mov
sbb
push
mov
stos
add
mov
add
mov
rcll
repnz
mov
jmp
addb
sbb
add
xorl
or
andl
fbld
mov
add
lock
cmp
mov
or
xor
rorb
and
rcrb
mov
mov
repz
movsl
iret
sti
lret
dec
and
adc
mov
mov
mov
mov
aad
jb
inc
add
cwtl
sub
xor
xor
add
repz
clc
idivl
fadd
sarb
cld
and
xlat
aam
mov
or
mov
daa
into
fidivs
xlat
stc
shll
inc
mov
mov
pusha
outsl
push
bound
fbstp
mov
nop
movsb
enter
xchg
xchg
bound
fidivs
outsl
inc
mov
leave
in
sarb
fdivr
lcall
add
xor
data16
fs
cs
sub
das
idivl
add
insl
insb
cmp
popa
jae
data16
data16
xchg
stos
stos
std
sub
add
mov
xor
andb
sub
or
xorb
cmp
mov
stc
mov
mov
add
aas
out
sbb
mov
or
fisttpll
cmc
in
xor
js
filds
dec
mov
outsl
jb
mov
jmp
add
es
divl
out
cmp
lock
or
shrb
add
insl
xorl
sahf
insl
cmp
push
roll
push
mov
popf
out
les
xlat
dec
add
sub
shll
adc
outsb
nop
sbb
mov
push
loopne
push
add
add
adc
inc
dec
rol
rorb
loopne
or
cmpb
xor
cltd
or
mov
fidivrs
out
addl
xorb
aad
and
and
pop
pop
or
or
or
add
mov
rol
dec
dec
inc
mov
jle
mov
mov
push
movsb
stos
xlat
xchg
xor
loopne
inc
or
jp
or
cs
test
push
inc
lock
ret
and
inc
movsl
sub
fst
xlat
cs
mov
sub
xor
fbld
fldenv
aaa
sub
sub
aad
cmp
sub
sub
and
fsincos
push
mov
and
sub
mov
push
test
int3
fucomp
leave
ja
fdivl
mov
dec
add
fwait
mov
inc
push
pop
subl
adc
scas
sbb
testl
xor
jl
xor
cltd
sbb
loope
inc
dec
in
mov
jle
sub
stc
push
stc
pop
or
pop
outsb
clts
mov
mov
push
sub
sub
jl
out
sub
add
ljmp
cmp
shl
div
clc
stc
jge
dec
sbbl
add
into
data16
adc
push
mov
push
out
cmp
lds
inc
or
or
ljmp
mov
and
inc
xor
mov
fiadds
lcall
adc
and
jbe
adc
sbb
add
cmp
nop
je
xor
scas
ret
sub
int
sub
mov
add
pop
test
mov
inc
and
xor
sysret
sub
sub
arpl
push
mov
mov
mov
xor
pop
xor
aaa
pop
or
sub
sub
nop
sub
das
mov
push
mov
sub
test
addr16
xor
dec
dec
dec
or
mov
push
or
mov
adc
fdivl
pop
cs
or
mov
push
pop
and
outsl
pop
inc
sbb
sub
das
xor
add
mov
loop
add
inc
pop
mov
adc
fs
ljmp
mov
hlt
add
and
imul
rol
int3
mov
sarl
mov
shll
es
sub
xor
in
pushl
es
mov
mov
std
test
lret
mov
add
mov
add
shlb
mov
aam
rol
cmp
sar
jo
or
push
fcmovnbe
mov
mov
into
repz
icebp
mov
scas
mov
enter
out
and
mov
in
mov
lock
mov
js
lret
mov
mov
fists
adc
ror
mov
cli
leave
in
mov
fdivrl
js
repz
popf
imul
cmp
rcl
into
pop
inc
xor
sub
cmp
or
pop
jo
adc
jnp
add
mov
aad
insl
loope
dec
push
shl
addl
and
stos
ret
and
xor
xorl
mov
mov
cmpsb
pushl
pusha
cmpsl
fsubrs
jmp
and
nop
inc
sbb
mov
decl
adc
call
pop
sbb
sbb
xor
or
fsubrs
xor
push
and
insl
sti
and
loopne
mov
inc
mov
movsl
mov
ss
cmp
pop
aad
push
xor
out
imul
fisttps
test
push
xchg
subb
inc
push
cltd
inc
push
mov
fmull
pop
push
jecxz
dec
dec
mov
push
mov
mov
shrb
out
mov
ds
sbb
cmp
and
push
xchg
jp
lock
xchg
nop
jl
cmp
into
sub
js
mov
ja
cltd
nop
xor
popa
inc
add
stos
inc
xchg
add
iret
test
pusha
or
scas
dec
movsl
pusha
mov
movsl
adc
add
daa
in
rolb
scas
inc
or
movsb
cmp
and
jg
ljmp
dec
sbb
adc
jo
xchg
sub
jge
loopne
movsb
or
push
jbe
mov
xchg
push
xor
repnz
inc
inc
fldenv
mov
pushl
xchg
adc
cs
pop
orb
ja
cs
push
adc
rcrb
inc
add
sbb
mov
mov
inc
cmc
mov
jle
orl
pop
adc
or
push
stos
jecxz
loopne
cmovg
in
nop
popf
jo,pn
into
xchg
mov
pop
jne
das
add
xor
cmp
inc
dec
and
nop
stos
loopne
pusha
stos
add
add
pop
inc
jo
cmp
cmp
lods
push
xor
inc
mov
outsl
pusha
mov
cmp
outsl
scas
fs
nop
adc
fs
push
shrb
pop
mov
into
clc
gs
and
fdiv
mov
rolb
lcall
nop
mov
adc
cmp
clc
aas
sbb
adc
nop
roll
jp
pop
xor
ret
cmpl
outsl
daa
and
nop
fists
lds
clc
pushl
pushf
or
stc
rorb
push
and
or
cmp
pop
cltd
rol
js
and
cwtl
inc
adc
fwait
loopne
sub
inc
aas
loopne
imulb
movsb
jne
das
and
fs
add
pushf
bound
pushl
cwtl
push
inc
jl
ret
xor
inc
stos
les
das
enter
cmp
adc
pop
and
sub
shll
enter
mov
iret
add
or
lds
pop
xor
mov
and
add
fs
or
addb
inc
push
xor
shll
lock
mov
test
dec
popf
stos
mov
add
loopne
dec
push
xor
rcl
push
inc
fiaddl
outsb
dec
inc
xlat
outsl
mov
xor
mov
sub
fldt
test
adc
jo
outsl
nop
fsubl
nop
adc
or
mov
inc
inc
scas
ffreep
subb
lock
repnz
dec
dec
and
mov
mov
and
nop
adc
pusha
fbld
fists
loopne
and
or
in
xor
in
or
or
test
shl
cmpb
jo
das
shl
cmc
add
loop
jecxz
and
sbb
and
loope
orl
movsl
loopne
out
add
sbbl
out
call
nop
das
add
or
inc
iret
shl
out
out
out
add
adc
adc
scas
mov
in
add
out
pop
add
cmp
and
mov
inc
sbb
mov
popf
test
mov
scas
add
pop
enter
add
es
push
add
daa
nop
int
mov
push
or
cltd
bound
push
xorl
mov
iret
adc
or
pop
pusha
ljmp
add
add
push
repnz
inc
jmp
cmp
or
fs
das
jo
nop
dec
jns
es
or
mov
rorl
loopne
or
rorb
inc
into
fwait
and
and
les
push
mov
sbb
dec
or
shll
enter
outsl
je
shrb
push
pop
push
dec
push
dec
sub
sbb
add
outsl
mov
push
adc
je
add
sub
inc
fdivr
xor
inc
pop
push
xchg
rorb
sub
mov
mov
rclb
mov
push
push
jno
add
inc
mov
rcl
sahf
pushf
mov
sbb
ds
and
cmpl
fistps
inc
xchg
mov
pop
push
pop
and
push
jnp
pop
xchg
pop
sub
xor
push
add
inc
arpl
addr16
pop
in
out
imul
push
outsb
cmpsl
fnstcw
push
xchg
addl
enter
push
loopne
jae,pt
push
xchg
sub
mov
lock
jle
sahf
shrb
imul
loop
push
es
xor
push
leave
mov
sarb
and
faddp
xchg
aas
jg
adc
xchg
inc
mov
inc
adcb
sbb
out
mov
idivb
es
rolb
loopne
push
and
adc
mov
repz
shlb
sub
mov
inc
push
pusha
nop
or
out
cmp
sub
add
dec
xchg
xchg
xor
xchg
ds
jns
pop
xor
cmp
mov
mov
cs
push
out
imul
mov
and
and
adcb
push
pop
repz
sub
movsb
mov
push
test
pop
add
mov
nop
pop
test
push
pop
xor
mov
inc
mov
leave
cs
push
mov
aad
lret
and
out
add
fistl
stos
movsb
jae
movsl
cli
push
out
xor
scas
adc
inc
rorb
lahf
scas
or
and
lahf
jo
test
movsl
outsl
push
jecxz
xor
add
out
fs
repz
add
cs
mov
lock
xor
push
sahf
adcb
and
loopne
stos
inc
enter
inc
and
cmpsb
outsl
ror
inc
test
outsb
inc
mov
inc
and
movsl
aas
nop
movb
ret
incl
inc
rorb
mov
aas
mov
iret
lock
orb
lcall
xchg
out
notl
or
pusha
add
dec
adc
mov
add
aas
rorb
ret
sbb
add
lahf
nop
sub
dec
mov
iret
sub
cmpl
mov
mov
sub
mov
sbb
sub
cltd
pusha
jo
movsl
jmp
das
add
pop
imul
pop
pop
rolb
nop
xchg
mov
mov
pop
inc
decl
and
dec
inc
repnz
dec
jo
sub
insl
mov
and
push
mov
inc
sahf
and
pop
cmpb
bound
pop
shrb
outsl
cmp
pusha
and
popa
adc
xchg
dec
testb
cmpsb
mov
fwait
mov
mov
outsl
cwtl
rolb
lahf
xchg
inc
leave
add
lock
jns
push
push
movsl
xchg
inc
lahf
push
xchg
outsb
aam
or
inc
ljmp
cmc
cltd
dec
adc
mov
inc
xlat
outsl
mov
ret
or
pop
into
xchg
mov
cs
mov
nop
or
add
push
jo
adc
add
adc
mov
and
stos
or
movsl
loopne
scas
push
xor
movsl
and
mov
add
xor
aaa
inc
faddl
fistpll
pop
pop
pop
ds
inc
push
xor
loopne
ret
add
outsl
aas
aad
faddl
cs
ds
mov
push
jb
lock
inc
lcall
repnz
dec
mov
xor
xchg
scas
mov
lock
scas
enter
out
sub
jne
jo
adc
shrl
mov
add
add
test
inc
call
add
jbe
jnp
push
sub
bound
pushf
and
sbbb
cmpsl
lock
inc
rcrb
ret
les
arpl
arpl
test
mov
inc
das
and
pop
popa
pop
popa
cltd
in
jae
inc
add
inc
jb
scas
in
inc
cs
shl
in
dec
pop
dec
dec
cs
iret
xchg
cmp
push
push
push
push
sub
movsb
and
mulb
int
inc
inc
push
mov
dec
orb
in
dec
mov
dec
repnz
in
pop
pop
adc
pop
jb
dec
push
push
inc
push
repnz
jb
push
jo
pop
jae
pop
jb
pusha
pusha
mov
mov
sub
cmp
enter
lret
mov
inc
adc
andb
movsb
cmp
loopne
pop
adc
dec
imulb
xor
cmc
push
pusha
and
jae
add
loope
das
pop
mov
sub
mov
and
push
das
bound
in
bound
movsb
shrl
and
addr16
add
push
adc
cmp
call
jo
ja
pop
mov
add
and
push
aad
add
repz
das
jo
add
lret
rcrb
mov
inc
rorb
and
sbb
test
pushf
jmp
push
out
jg
push
and
lock
and
and
hlt
add
jle
lock
leave
mov
mov
mov
shl
or
adc
add
ds
push
or
inc
faddl
cs
adc
jg
inc
outsl
push
negb
and
add
or
and
sbb
adc
repnz
repnz
push
incl
or
sub
icebp
sub
pop
fbstp
js
pushf
push
inc
mov
mov
jo
pop
adc
sub
mov
push
add
inc
adc
add
and
mov
jno
in
or
scas
into
mov
rolb
sahf
pop
mov
pusha
cmp
push
insl
cwtl
outsb
stc
push
mov
int3
xor
and
add
sbb
push
inc
fildll
lds
das
gs
outsb
rorb
or
inc
sete
das
std
loopne
mov
sar
xor
and
dec
rolb
jg
or
add
inc
scas
insb
mov
pushl
in
stos
rclb
mov
cwtl
rcl
ja
pop
sahf
hlt
add
add
add
dec
cmp
stos
aas
outsl
push
je
adc
push
outsb
imulb
xor
cmp
sub
mov
adc
and
inc
and
in
subb
jo
mov
xor
bound
jecxz
bound
xchg
pop
rolb
or
push
rcrl
das
pop
or
sti
mov
in
jo
jg
or
xchg
or
dec
add
cs
mov
iret
sub
add
loope
inc
pop
and
lahf
pop
inc
js
out
aaa
xor
adcl
sbb
inc
fisubs
sete
sub
sbb
adc
outsl
sbb
fsubl
add
rolb
push
test
mov
loopne
inc
dec
faddl
xchg
pushl
push
test
rorb
or
sub
dec
ret
jbe
iret
sti
mov
pushw
in
push
outsb
jne
pop
or
cmp
jle
sub
in
dec
insb
loopne
mov
fcoml
enter
cmp
or
popl
push
cld
fadds
fmul
jae
rclb
jo
sub
int3
dec
dec
and
cmp
add
push
lods
nop
jo
lahf
loopne
dec
pop
and
add
ss
adc
stos
push
aaa
aas
xor
lret
push
andb
es
and
mov
xor
push
xor
push
push
das
lock
jnp
testl
shlb
jbe
pop
add
cmpb
pop
sarb
lahf
loopne
mov
jnp
push
add
pushf
dec
inc
jg
add
rcr
xor
push
jmp
cs
mov
mov
iret
iret
aad
pusha
lock
es
subl
fildl
scas
fs
rorb
stos
inc
or
nop
gs
cmp
xor
dec
test
nop
sahf
nop
jl
add
cmp
std
iret
insl
inc
das
ljmp
pop
shrb
and
sbb
insb
outsl
xor
pop
adc
out
dec
aaa
add
outsb
push
pusha
push
enter
pop
fidivs
adc
js
mov
js
shlb
fdivrs
add
mov
mov
outsb
jbe
inc
inc
mov
imul
jl
pop
sbb
roll
cs
incl
test
push
sub
fs
aas
inc
outsb
inc
adc
mov
sub
aas
mov
in
and
aas
leave
jbe
lahf
sbb
mov
cmp
jge
jns
inc
adc
jo
jo
popl
adc
addl
movsl
out
pop
and
and
mov
mov
loop
decl
mov
jo
push
or
scas
int
jle
in
adc
loop
popa
stc
push
mov
xor
test
hlt
mov
xor
or
sbbl
inc
add
sbbl
dec
pop
or
mov
push
enter
aam
test
inc
sarl
push
dec
inc
pop
shrb
xchg
cmpsl
pop
enter
adc
adc
jbe
test
push
inc
dec
sub
sub
shlb
aaa
mov
in
xor
sub
and
or
jge
or
ds
fwait
mov
out
mov
mov
cmp
mov
in
sahf
cli
push
cmpsb
loope
fimuls
xor
inc
rolb
lahf
mov
ficoms
call
test
mov
inc
inc
xchg
and
sub
or
inc
push
or
sub
dec
mov
dec
or
ss
insb
nop
jg
cmp
mov
push
shlb
pop
sub
inc
add
mov
inc
add
mov
and
fadds
dec
dec
das
js
add
aas
fcmovbe
or
test
fadds
inc
mov
test
inc
inc
ds
push
icebp
push
mov
cmp
repz
mov
mov
mov
movsb
sbb
ds
adc
iret
repz
out
mov
inc
ss
repnz
mov
dec
imul
and
jecxz
test
and
xchg
stos
push
and
dec
lods
mov
sub
loopne
or
push
das
mov
sub
push
fwait
mov
rcrl
dec
lds
cmp
dec
push
jns
inc
andl
or
mov
out
pop
add
popf
xchg
mov
incl
xchg
in
push
lahf
dec
push
xchg
mov
call
dec
ja
cs
xchg
iret
aad
pop
mov
fwait
adc
sahf
sub
pushf
imul
dec
out
js,pn
clc
fs
inc
sbb
push
xchg
je
mov
pusha
dec
dec
pop
sub
mov
xchg
pop
inc
lea
xchg
lods
push
add
inc
jno
jmp
cmp
push
xchg
dec
fimull
inc
loopne
dec
xlat
dec
nop
lcall
fdivp
inc
cmp
xchg
sub
dec
mov
xor
xor
xor
movsb
mov
cs
outsb
call
das
ja
syscall
and
add
fs
add
ret
jbe
aas
les
add
adc
pop
popa
mov
ja
cs
in
stos
das
popa
cs
dec
fisubrl
adc
add
inc
inc
xor
jmp
aad
aad
repnz
outsb
pop
mov
mov
aas
mov
iret
sub
shlb
test
add
inc
add
sbb
push
dec
addb
dec
add
xlat
dec
push
test
rolb
movsb
mov
sbb
sbb
sub
or
adc
ss
adc
fdivrs
stc
mov
mov
inc
push
stos
iret
inc
stc
xchg
iret
ror
shll
sub
jne
cmp
push
loopne
nop
adc
aas
inc
and
dec
or
sub
aas
mov
and
inc
push
sbb
andl
dec
pop
push
inc
mov
loopne
xchg
inc
pop
rorb
enter
rol
ret
pop
dec
pop
xchg
sub
xchg
jmp
stos
inc
xor
mov
mov
inc
xchg
sub
out
add
inc
aas
cwtl
jp
jns
enter
dec
sets
das
dec
enter
and
addb
jae
mov
dec
sahf
sub
mov
push
sarb
xchg
pop
int
cmp
fdivrs
fstpt
daa
js
icebp
ret
sbb
cs
les
call
and
pop
cwtl
xchg
inc
fldcw
mov
iret
or
inc
cmp
andl
scas
mov
cmpsl
int
push
in
pop
mov
mov
iret
mov
pusha
out
insb
mov
push
xor
sbb
aaa
fisttpl
dec
xor
xor
lret
mov
mov
sub
adc
push
fwait
loopne
xchg
mov
lods
andb
pop
inc
inc
stos
andb
mov
inc
add
jmp
fstl
xchg
cs
add
lret
fimuls
xchg
sbb
jecxz
push
decl
loop
mov
call
or
xchg
adc
sub
lret
mov
in
pop
xchg
push
test
adc
sub
dec
aaa
out
inc
add
push
pusha
das
xchg
jg
mov
jo
aaa
jle
pop
aad
add
outsl
cmp
jo
push
pushf
mov
cs
outsl
pop
dec
mov
and
divb
adcl
push
aad
fdivrs
in
enter
mov
sub
push
lahf
jp
sar
inc
mov
dec
or
repz
js
in
stos
iret
push
in
in
and
lcall
inc
rolb
jle
pop
inc
add
int3
mov
out
ror
shrl
push
sbb
inc
mov
add
xchg
out
fcomip
fsubl
add
push
in
add
inc
and
sbb
outsl
push
push
shr
mov
pop
dec
mov
lret
js
into
push
ret
jnp
test
push
jg
mov
push
pop
lahf
add
call
add
test
in
adc
mov
mov
mov
mov
inc
pop
call
inc
sarb
inc
sub
mov
mov
mov
inc
fsubs
or
mov
sbb
or
ss
inc
add
pop
jp
xor
cmp
lcall
je
shl
mov
and
lahf
inc
and
je
popf
aas
stc
adc
sub
rcrb
or
shrb
pop
das
sub
pop
adc
sub
in
pop
cmpsl
push
add
pop
add
cmp
inc
sub
inc
mov
outsl
outsb
leave
out
jns
test
pop
cmpsl
sub
dec
addl
inc
inc
add
sub
inc
out
inc
and
push
mov
loopne
outsl
jl
ss
fcom
push
cmp
jle
test
add
add
out
push
ljmp
dec
sbb
scas
inc
into
adc
mov
fs
nop
push
mov
out
test
push
dec
dec
dec
sub
rorb
pop
inc
ret
xor
add
outsb
push
push
in
addl
inc
push
inc
xor
dec
push
push
xchg
rorb
testl
lock
imul
mov
loopne
fsubs
mov
loop
jbe
scas
add
imul
mov
sahf
push
sbb
xchg
push
add
xchg
scas
inc
out
pop
out
xor
push
sub
stos
mov
cmc
push
mov
adc
out
jl
movsb
sti
cmpsl
stc
cmp
test
mov
insl
setp
mov
idivl
sbb
push
outsl
fistps
roll
push
jmp
pushf
idivb
in
clc
fimuls
aam
daa
cmp
or
js
ljmp
and
dec
mov
inc
cs
repz
dec
cmp
sahf
clc
enter
mov
push
outsb
movsl
int
stc
cmp
sub
sbb
scas
mov
adc
movsl
jo
in
mov
mov
add
push
sub
push
pop
ja
mov
cmpsl
xor
loop
mov
push
or
into
and
pop
jle
je
shlb
outsl
addb
sahf
ret
dec
ret
sub
mov
sbb
das
sarb
ja
push
cmp
mov
out
ds
jae
push
xchg
daa
sub
push
add
or
sbb
pop
add
dec
dec
fisubl
popf
mov
xchg
lcall
jmp
sbb
sub
jmp
dec
jne
orb
movsl
cvttps2pi
sub
mov
xchg
nop
adc
xor
in
outsb
and
movsl
outsl
nop
push
mov
cmp
outsb
arpl
mov
xchg
or
popf
ss
fsts
xchg
cmpsb
pop
ffreep
or
js
xor
add
cli
test
bound
push
xchg
lcall
pop
inc
and
and
mov
addb
push
adc
add
add
or
out
xor
lock
cwtl
push
mov
push
push
mov
out
push
pop
rorb
cmp
jae
push
aam
fmuls
jb
pushf
sub
dec
push
cmp
cmc
lret
push
jl
sarl
shrb
int
stc
cmp
mov
icebp
sbb
jae,pt
add
pop
jbe
fidivrl
iret
roll
and
insb
ds
repz
fdivrl
je
mov
mov
push
aad
jle
loop
ja
push
es
adc
mov
lds
fdivs
or
push
push
mov
rcrb
push
cmp
iret
repz
ret
mov
push
rorb
push
push
loopne
iret
shr
es
jg
repz
pusha
out
push
xor
sarl
outsb
loop
cs
loopne
inc
mov
sbb
loope
or
cmp
imul
push
mov
loopne
pop
xchg
cmpsl
hlt
loopne
std
push
push
fstpl
cs
ja
cmp
outsb
xchg
or
push
sub
das
fidivrs
js
cmp
dec
push
and
popf
cwtl
divb
push
in
iret
nop
imul
test
ss
lock
inc
repz
arpl
or
je
dec
inc
clc
xchg
pop
adc
stos
xchg
lahf
clc
pop
stc
push
lcall
jae
pop
cli
imul
jg
push
push
dec
inc
inc
dec
pop
push
dec
dec
dec
push
cs
mov
das
adc
push
insb
and
aaa
rcll
fildll
sbb
pop
inc
jb
pop
imul
mov
xchg
dec
and
push
xor
push
and
sbb
pop
fs
jg
xchg
ja
and
adc
gs
es
and
sbb
push
sbbb
sub
sbb
dec
xchg
push
mov
mov
pop
add
pop
sub
sahf
test
xchg
movsb
add
jnp
cmpsl
push
push
push
or
lds
test
cmp
pop
sti
push
cmpsl
stc
cmp
arpl
or
out
mov
or
sbb
mov
in
stos
push
dec
decl
jns
or
out
repz
addb
popa
inc
pusha
fstl
orb
pop
enter
and
cmp
push
pop
pop
les
pop
dec
outsb
or
int3
inc
xchg
jae
sub
xchg
loopne
lods
stos
or
daa
cmp
pop
jbe
bound
es
dec
mov
fcomps
push
inc
lret
add
push
stc
rcrl
pop
clc
push
imul
or
and
fbstp
mov
xor
mov
shlb
int
jmp
aaa
insl
push
aaa
clc
fisubl
or
das
inc
jne
pop
inc
rclb
xor
in
xor
xor
sti
pusha
push
nop
flds
and
mov
mov
mov
xor
lret
or
adc
mov
sbb
cmpsl
testb
cmpsl
jae
and
and
push
movsb
jns
out
hlt
push
lods
jo
movsb
fadds
push
dec
cmpsl
sbb
scas
push
inc
fidivrs
fsts
mov
add
adc
cmp
test
adc
or
xchg
outsl
adc
push
aas
mov
sbb
popf
out
iret
pop
jo
loopne,pn
and
xor
nop
loope
into
xlat
mov
mov
out
or
clc
es
dec
xchg
sbb
pusha
ja
cmp
orb
xchg
cmp
fldt
cmpsb
inc
fidivrs
movsl
inc
pop
dec
loope
gs
or
inc
mov
das
jo
popa
insl
or
xor
scas
outsl
mov
pop
dec
fs
das
cltd
repnz
subb
leave
pushf
or
inc
dec
stos
or
adcb
mov
insb
stos
push
jbe
mull
and
sti
stos
pop
jecxz
jge
insb
jbe
xor
pushf
scas
in
fmulp
mov
scas
fs
push
jae
into
mov
lcall
pop
sbb
or
inc
cwtl
sar
je
and
fbstp
xchg
adc
and
pop
push
idivl
sub
xchg
test
pushf
rorb
push
dec
push
xchg
rolb
pop
and
push
nop
nop
xchg
sub
sbb
idivb
mov
and
jno
xor
pop
adc
mov
outsl
jo
jae
push
add
mov
cmc
shll
movsb
aad
enter
xor
dec
push
test
cmovno
cli
ljmp
and
push
and
fldcw
mov
pusha
out
cmpsl
incl
loopne
loop
and
incl
xor
inc
ja
int
cmp
sbb
test
xchg
jl
repz
enter
push
fisttpl
push
cmpsb
hlt
lcall
icebp
out
sbb
test
xchg
popa
mov
sbb
mov
add
loopne
in
bound
lahf
adc
push
iret
bound
jnp
mov
mov
or
cltd
mov
in
mov
push
inc
add
mov
mov
sbbl
enter
cmp
jecxz
mov
shll
push
ljmp
push
or
aas
mov
aad
aad
add
add
add
enter
add
and
or
pop
enter
add
or
and
enter
enter
adc
sbbl
add
jb
pop
and
sbb
pop
enter
fs
pop
sbb
inc
cs
or
add
in
mov
cs
add
adc
mov
and
iret
xlat
and
jnp
das
push
add
add
sbbb
pop
dec
mov
jae
rolb
dec
movsl
push
repnz
scas
add
cmp
pop
mov
das
xchg
mov
in
sub
jo
loopne
adc
daa
sub
shlb
push
shrb
jo
loope
pusha
daa
inc
pop
das
mov
mov
aaa
inc
testl
cs
pop
mov
pusha
fcomp
inc
mov
xchg
enter
rcr
sub
mov
xchg
push
inc
roll
pop
add
js
cmpsl
mov
addr16
xchg
in
enter
pop
mov
lock
rcrb
outsb
dec
dec
and
ret
sbbb
daa
fdivrs
iret
and
enter
ret
mov
outsb
xchg
shr
push
jb
call
mov
in
add
daa
sub
mov
adc
pop
ret
jo
xchg
or
scas
test
outsl
frstor
rcrb
cmpsl
xchg
adc
ret
adc
shrl
xchg
sub
shrb
push
les
shl
xchg
andb
pop
jg
pop
xor
add
pop
psubusb
push
add
rolb
les
lock
or
daa
ja
jns
idiv
lds
inc
inc
pop
pop
enter
pop
pop
orb
das
mov
test
js
rol
fsubrs
xchg
add
add
mov
or
jg
das
mov
push
jne
dec
push
push
lahf
xchg
daa
call
fldt
adc
daa
pop
scas
xchg
push
leave
or
push
pop
and
sbb
test
shrb
call
xchg
enter
dec
pop
decl
lahf
or
mov
jo
iret
frstor
enter
lahf
xchg
lahf
mov
dec
aad
in
xchg
leave
jmp
push
add
cs
add
xor
mov
mov
or
daa
loopne
frstor
enter
lahf
xchg
test
daa
pusha
lahf
clc
in
notb
jnp
lret
and
and
dec
lret
jns
fldl
jge
adc
jo
jne
lahf
xchg
daa
mov
xchg
pushf
inc
dec
call
and
test
cmp
sub
xchg
scas
nop
or
enter
outsb
fldl
mov
call
das
or
lock
fmul
sub
or
xchg
add
daa
and
mov
push
pusha
scas
xchg
js
sub
add
inc
popa
outsl
mov
mov
lahf
xchg
lahf
pusha
add
cmc
into
xchg
lock
pop
fsubr
mov
or
xchg
daa
mov
das
inc
int
pop
lahf
add
push
mov
fstl
ret
test
xchg
ror
xchg
cmp
pop
in
lock
dec
jo
daa
pop
jg
into
call
sub
call
orb
icebp
adc
daa
or
outsb
mov
jb
lahf
xchg
daa
and
into
into
mov
xchg
daa
or
jo
aas
inc
iret
enter
pop
lahf
xchg
mov
test
sbb
test
iret
and
adc
pop
push
outsl
mov
and
adc
shr
push
pop
and
test
mov
ss
push
arpl
push
dec
lock
mov
cmpsl
sub
jo
decl
lahf
scas
in
jne
js
nop
add
loopne
pop
mov
jne
enter
dec
es
adc
test
outsb
xchg
daa
loopne
das
or
fs
mov
scas
mov
jo
pop
sahf
mov
repz
xor
aas
add
inc
xchg
mov
mov
das
loopne
mov
lods
pop
xchg
out
mov
sbb
mov
out
add
push
dec
shll
and
adcb
xchg
test
xor
frstor
rcrl
inc
outsb
lahf
dec
push
sbb
jbe
aam
in
xchg
in
push
aam
push
jmp
aam
pop
mov
test
xchg
or
shlb
aam
xchg
in
adc
xchg
daa
and
sbb
data16
dec
aad
jne
sbb
daa
and
inc
dec
adc
cwtl
aad
and
je
xchg
aas
inc
inc
icebp
sbbb
js
mov
out
push
call
dec
dec
xor
xchg
dec
daa
cwtl
data16
es
jg
add
outsb
fldl
nop
daa
mov
das
mov
sbb
xchg
push
dec
enter
xlat
inc
pop
adc
daa
rorb
inc
xlat
lahf
jb
push
xor
push
jmp
adc
outsb
int3
pop
test
dec
fsubrs
inc
lahf
pusha
rolb
fdivrs
sub
shr
sub
cltd
and
xchg
inc
daa
nop
scas
mov
sub
subb
scas
and
xchg
xor
iret
call
add
daa
pop
and
in
xor
push
push
mov
or
outsb
cmp
iret
push
pop
js
sbbb
add
ret
mov
fstps
mov
fiaddl
add
outsb
inc
outsb
mov
sbb
jo
xchg
or
imul
bound
lahf
xchg
daa
pusha
imul
loopne
fldt
sub
xor
daa
mov
add
or
or
es
adc
push
and
repnz
inc
shrb
fadds
popa
inc
ja
fmul
add
adc
daa
dec
seto
dec
fcompl
mov
fisttps
add
lea
xchg
daa
mov
rcrb
cs
out
test
int
fstl
out
xor
cmpsl
push
daa
clc
push
or
iret
js
nop
lahf
and
pop
xchg
frstor
jb
fucom
daa
ja
dec
dec
and
pusha
outsb
adc
loop
pop
insb
sub
ja
daa
mov
fiadds
cmpb
jo
pop
push
cmp
out
push
into
jg
daa
add
jmp
cwtl
daa
addr16
sahf
mov
lock
clc
adc
xor
fstl
pop
sub
inc
inc
xchg
scas
fadd
jnp
adc
xchg
dec
loopne
fmull
icebp
roll
loopne
adc
adc
inc
das
or
divl
clc
push
enter
pop
inc
das
sub
and
ss
das
pop
pop
xchg
mov
inc
dec
movmskps
in
or
jg
cwtl
jo
jb
adc
or
adc
xchg
shll
adc
cmp
pop
loope
enter
clc
jo
repnz
nop
loope
into
stc
outsb
inc
mov
rclb
sbb
iret
test
in
cmp
test
xor
cmp
pop
cmp
cmp
xchg
sub
fidivl
nop
nop
in
sub
mov
xchg
sub
or
loope
jb
lock
adc
dec
xor
pop
xchg
pop
mov
jbe
push
and
add
adc
jo
test
dec
adc
nop
xlat
pop
ja
setnp
push
push
insb
leave
stos
add
mov
rolb
fisttpl
in
mov
sbb
dec
scas
nop
addr16
enter
enter
inc
adc
dec
adc
sahf
add
sti
xor
fs
in
out
jne
orb
dec
mov
popf
pushf
je
mov
enter
rorb
test
fildl
clts
adc
push
add
and
daa
iret
mov
push
pop
dec
pop
popa
sub
das
arpl
out
xchg
fisttpl
outsb
push
int3
das
pop
mov
out
or
enter
jbe
sbb
add
jmp
cmp
dec
or
pop
adc
mov
adc
dec
and
push
inc
out
stc
pusha
inc
or
pop
mov
jo
bound
dec
sti
cmp
mov
outsl
loopne
sbb
outsl
rol
arpl
call
xor
call
mov
add
pop
dec
and
nop
imul
add
cwtl
pusha
mov
push
cmpsl
vmread
das
sbb
ficoml
or
and
leave
adc
push
xor
pop
pop
loopne
call
jno
in
or
aas
adc
filds
jmp
push
lock
pushf
mov
fadds
jmp
push
sbb
dec
pop
and
xchg
pop
and
xchg
pop
and
test
and
sbb
nop
dec
clc
xor
push
enter
add
test
push
jecxz
int
pop
js
mov
decl
in
pop
or
rolb
jge
fcoms
push
fisubrs
jge
dec
lock
clc
ltr
cwtl
or
or
sbb
sbb
xor
outsl
pop
cmp
adc
pop
push
dec
add
in
in
sbb
dec
into
hlt
fisubl
add
cmpsl
in
jb
sbb
in
cld
orps
inc
in
das
push
add
jo
mov
push
dec
lds
stc
lock
add
push
sbb
jb
dec
pop
loopne
repnz
out
push
sub
iret
dec
add
cmp
stos
mov
daa
push
enter
rcr
mov
sbb
sbb
sbb
cmp
mov
push
sub
repz
pop
cmp
dec
or
iret
repz
or
repz
repz
cmp
rsm
adc
repz
aam
loop
stc
cmp
repz
out
sahf
cmpsl
pop
sbb
sub
sahf
out
sahf
sbb
sbb
sahf
out
pusha
sbb
dec
push
jecxz
decb
xor
scas
sbb
mov
and
sbb
ret
sub
sbb
push
xchg
and
adc
and
xor
cmp
enter
push
pop
push
push
sbb
push
test
xchg
push
mov
push
scas
push
mov
mov
fcomps
out
hlt
push
add
sahf
out
and
push
adc
sahf
out
pop
cmp
dec
sbb
jns
out
sbb
sahf
out
sahf
sbb
sbb
sahf
out
pop
stos
and
in
into
pop
push
fisttpll
pop
pop
sub
scas
icebp
out
cmp
dec
adc
das
sbb
push
and
je
push
enter
mov
aas
fdivrl
dec
inc
pop
jb
lock
fisttpl
clc
icebp
mov
and
dec
sahf
pushf
je
push
addps
and
adc
or
mov
in
mov
int
xchg
iret
enter
sub
dec
lock
sub
and
push
jmp
and
push
inc
lock
cmp
repz
inc
bswap
repnz
pop
and
lock
hlt
nop
fwait
push
inc
jp
xchg
sub
enter
pushl
and
dec
and
movsl
fwait
call
pop
outsl
stos
mov
and
fimull
or
in
in
movd
jnp
shrl
or
push
into
repz
adc
adc
xchg
and
xor
adc
xor
hlt
fnsave
inc
sahf
add
xchg
xchg
add
xor
push
cmp
pop
lret
aaa
fdivrl
psubsw
daa
incl
and
and
mov
in
scas
pop
dec
push
and
ss
and
jns
pop
test
adc
mov
mov
test
rorl
iret
lret
pop
js
fisttpll
and
and
and
and
and
add
inc
xor
cmovs
sarl
iret
mov
cmp
in
jo
push
add
mov
inc
mov
idivl
rcr
loopne
inc
or
outsl
sbb
dec
pop
mov
and
mov
negl
nop
xlat
scas
push
dec
or
jo
scas
nop
dec
xor
pop
jg
in
subb
orb
shrb
mov
es
clc
pop
cltd
and
es
iret
jae
jne
xor
ds
dec
add
daa
daa
pop
push
scas
cmp
movsl
nop
stc
dec
pusha
mov
mov
es
pop
mov
decl
dec
clc
xor
loopne
cli
mov
daa
mov
inc
xlat
push
add
repz
and
push
sbbb
into
inc
and
inc
iret
mov
jo
rcll
repz
push
sbb
cli
aas
out
in
out
into
packssdw
jbe
push
fwait
scas
daa
or
jg
lahf
in
rcll
nop
shl
in
fsubl
iret
sbb
pop
and
scas
sub
and
adc
inc
sub
inc
mov
pop
sub
push
movsb
sub
sti
aas
push
jo
dec
sub
lcall
sub
scas
fdivs
iret
push
jg
xchg
pop
and
dec
js
mov
pusha
enter
pop
subb
lock
or
loope
repnz
mov
jno
je
mov
inc
out
push
std
mov
enter
inc
out
push
add
out
scas
loopne
mov
psubb
mov
test
sub
cltd
loop
sub
fisttps
stc
fsubrl
dec
jg
sbb
data16
fs
imul
push
enter
dec
jo
scas
pop
sub
sahf
pushf
fmull
psrlq
jmp
sub
loopne
clc
sbb
ljmp
xchg
mov
mov
push
jb
dec
and
scas
in
xchg
mov
mov
addr16
loopne
and
testl
pusha
sub
ficoml
repnz
out
gs
aas
bound
ja
aas
sub
scas
dec
nop
pop
sbb
xchg
mov
aad
and
loopne
push
or
add
mov
movntps
inc
pop
mov
das
push
outsl
adc
sub
push
test
es
outsl
push
sub
js
sub
mov
daa
push
mov
push
sub
nop
dec
cmpsb
nop
xlat
iret
sbb
mov
imul
jg
pop
rorb
dec
scas
nop
jo
cwtl
push
enter
sub
enter
dec
leave
xchg
popf
pop
adc
xor
jo
in
jb
js
dec
add
leave
mov
dec
cmpsl
inc
iret
js
push
enter
cwtl
mov
imul
xor
inc
pop
mov
add
repnz
sub
repnz
repnz
repnz
push
sub
xor
repnz
cs
cs
cs
repnz
subl
repnz
mov
cs
lock
cs
lret
cs
repnz
in
imull
add
iret
repz
or
and
cmp
repz
and
and
repz
repz
iret
repz
sub
jnp
cmp
repz
sub
iret
repz
mov
cmp
mov
das
pop
and
add
cs
das
outsl
add
adc
enter
pop
xor
cmp
dec
xor
xor
xchg
and
xorl
cmp
enter
xor
xor
xor
inc
mov
xor
xor
out
and
push
push
sub
jno
pop
aaa
incl
mov
dec
add
add
repz
jl
sub
or
push
enter
clc
rcrb
aas
loopne
subl
xor
rdmsr
xor
and
scas
pop
pop
xor
pop
and
mov
xchg
adc
mov
mov
or
repnz
xor
test
sbb
lock
add
out
xor
sbb
jb
jl
xchg
xchg
xor
mov
xor
lret
pop
ror
call
xor
xor
cmpb
mov
mov
ud2
xor
push
xor
and
sub
jns
mov
iret
aaa
xor
inc
push
push
dec
out
js
add
add
xor
enter
xor
clc
or
ja
mov
test
out
xchg
fisubrs
mov
or
pop
xor
dec
xchg
movsb
inc
sbb
dec
out
xor
xor
dec
pushf
out
pushf
sub
xor
jg
jg
mov
pop
or
or
xorb
js
leave
repz
fmull
mov
mov
lods
das
mov
ret
adcb
call
in
clc
jg
jg
test
decl
inc
cmp
ss
adc
pushf
dec
and
inc
xchg
pushf
pop
and
jo
pushf
pop
and
adc
jbe
cmp
pop
shr
shl
adc
clc
cmpsb
pop
and
dec
inc
cwtl
dec
mov
or
scas
aaa
push
xor
push
addr16
jb
decl
nop
aas
cwtl
es
enter
mov
shlb
mov
icebp
jg
dec
mov
enter
sub
ret
and
ljmp
nop
imul
test
add
cmpb
nop
cld
movsl
xor
adc
pop
cmp
and
cmp
repz
mov
mov
cmp
iret
in
push
cmp
ror
je
enter
or
out
sbb
fwait
in
mov
pop
aas
jns
adc
lock
adc
adc
cmp
sbb
mov
add
fmuls
push
fisttps
scas
and
ds
in
jle
cltd
xchg
mov
clc
fistps
adc
dec
xor
xor
out
add
inc
incl
add
adc
mov
inc
lock
mov
inc
out
data16
push
mov
shlb
cmp
and
cmp
dec
inc
pop
pop
jb
sub
dec
fists
dec
jnp
dec
aas
fcompl
addr16
cmp
xchg
adc
lds
call
loopne
adc
cmp
and
push
int3
inc
xchg
dec
inc
add
adc
nop
pusha
leave
leave
adc
jns
adc
adc
in
fs
enter
leave
leave
adc
movsb
mov
and
cmp
fs
push
add
outsb
mov
out
xor
aas
inc
pop
dec
lds
iret
loopne
hlt
in
jb
js
orl
call
cmp
pop
outsl
mov
in
in
call
cltd
es
rorb
adc
adc
dec
leave
insl
push
cmpb
lock
sbb
outsl
dec
jb
adc
and
leave
adc
xchg
out
pop
rorb
fsub
mov
enter
lock
daa
push
and
dec
sbb
aaa
cmp
out
push
dec
ljmp
dec
ja
xor
jnp
xchg
into
leave
arpl
call
pop
outsl
sub
inc
xchg
push
enter
pop
nop
cmp
fdivrs
mov
and
inc
test
or
nop/reserved
aad
cmp
repnz
inc
dec
scas
sarb
fdivrs
mov
jne
enter
sti
rol
ret
inc
enter
outsl
rcrb
cmp
cmp
enter
ds
ds
ds
ds
enter
aas
xor
lea
adc
pop
aas
pop
push
in
into
leave
jo
pop
xchg
outsl
jb
test
sbb
mov
adc
mov
psubsb
lock
test
dec
lock
inc
outsl
sbb
push
adc
inc
jmp
sbb
vmwrite
sbb
pop
dec
dec
cmp
add
or
or
movsbl
leave
dec
outsb
push
in
test
loopne
call
fadds
inc
or
leave
adc
or
sub
in
mov
pusha
sahf
fcmovne
adc
nop
xor
mov
repz
jp
pop
inc
jg
sahf
add
adc
rcrb
add
cld
test
or
xor
xor
inc
inc
inc
dec
inc
outsl
mov
and
pop
js
addb
movsl
adc
mov
adc
loop
leave
adc
and
dec
mov
inc
sahf
xchg
and
pop
inc
mov
daa
fisttpll
dec
push
addr16
xor
outsb
punpcklbw
push
push
adc
and
add
bound
dec
rcr
enter
out
inc
inc
xchg
push
enter
adc
in
sbb
cwtl
loope
in
inc
dec
push
or
add
pop
and
inc
xchg
outsb
movl
push
mov
out
pop
push
push
mov
or
fistpll
add
into
push
or
pop
pop
fildl
iret
push
sub
fsubrl
adc
leave
add
xchg
xchg
sub
shlb
inc
inc
js
lds
inc
dec
inc
pop
jns
subb
inc
popa
inc
push
sahf
out
sahf
add
add
mov
mov
mov
pop
out
incl
inc
pop
loopne
ja
enter
add
or
or
into
pop
cmp
push
push
xchg
xchg
fwait
adc
outsb
mov
xchg
inc
sub
outsl
outsl
iret
adc
jmp
and
dec
inc
nop
iret
repz
fwait
push
add
pushf
pushf
cmp
rcr
leave
leave
leave
repz
repz
daa
iret
repz
mov
pop
sub
repnz
inc
inc
gs
xor
inc
jmp
outsl
adcb
jmp
scas
mov
inc
push
popf
sub
mov
lds
mov
test
bound
add
or
or
dec
mov
sub
dec
test
pusha
scas
push
jbe
dec
andb
rorb
inc
repnz
and
dec
mov
and
adc
dec
scas
cwtl
push
xor
and
outsl
and
dec
nop
push
sbb
dec
fbstp
and
sub
adc
mov
punpckldq
adc
dec
incl
lock
pop
jnp
dec
repnz
and
jb
pop
xor
rolb
inc
pop
jb
add
pusha
mov
xor
mov
daa
dec
aaa
cmp
mov
xor
dec
sahf
add
testl
push
lock
dec
clc
mov
pop
and
dec
pop
cmp
push
xor
pop
nop
lock
je
cwtl
mov
inc
sahf
ds
aaa
mov
lock
cmp
movmskps
or
jmp
adc
xor
cmp
dec
cmp
push
sub
insl
push
leave
push
dec
push
aaa
ret
movsl
xor
sub
fwait
pop
and
enter
xchg
sub
sub
dec
dec
or
jo
popf
out
and
cwtl
pop
sarb
inc
add
je
shrb
push
pop
pop
imul
loopne
sti
inc
inc
ljmp
movsl
or
pop
mov
bts
bound
test
enter
imul
loopne
arpl
adcb
lock
ljmp
mov
cmp
fistl
dec
jo
imul
js
jo
dec
xchg
dec
scas
nop
cwtl
mov
mov
shrb
fcomp
outsb
xchg
dec
das
stc
rcll
shl
aam
mov
xchg
cmp
dec
cmp
out
and
out
popl
mov
arpl
lahf
sahf
incl
mov
pop
cmp
pusha
add
rcll
inc
ljmp
outsl
pop
popf
push
fs
cmp
cmpsb
mov
cmpsl
lahf
cmp
and
leave
sub
js
cs
lods
nop
popa
mov
dec
nop
pop
js
push
mov
mov
push
cmpsl
cmp
add
add
push
push
jns
out
push
add
out
sahf
out
or
jns
or
shll
rcll
pop
cltd
loopne
leave
lock
add
adc
leave
adc
push
leave
leave
leave
leave
push
push
push
push
leave
leave
leave
leave
push
push
push
push
mov
leave
leave
push
push
push
scas
loope
jns
mov
icebp
or
pop
mov
cld
push
xor
inc
scas
push
aaa
push
pop
add
test
lock
aas
push
or
push
push
jb
mov
enter
adc
jns
rcrb
loopne
inc
push
call
push
dec
icebp
in
movups
push
jg
push
push
insb
inc
inc
sub
lahf
inc
push
mov
pop
insb
pushf
sub
aas
dec
push
fistpl
test
add
jb
ret
ja
outsb
in
mov
ss
cltd
inc
ds
pusha
mov
imul
iret
repz
cs
mov
leave
repz
pop
mov
pop
ret
leave
leave
mov
push
mov
adc
lock
xchg
or
jbe
sub
and
push
dec
test
push
xor
jae
cvtdq2ps
repz
and
add
xchg
popf
test
mov
xchg
xchg
xchg
mov
in
xchg
ljmp
daa
xor
nop
ud2
push
out
cmp
daa
repnz
sub
jb
jb
inc
dec
pop
xchg
out
es
sbb
add
mov
shufps
and
leave
leave
leave
in
outsb
vmwrite
lcall
leave
cmpsl
out
sub
adc
fimull
dec
or
pusha
pop
dec
mov
push
scas
nop
dec
mov
test
or
scas
push
push
push
push
outsl
push
les
lldt
mov
xor
dec
push
push
push
inc
fbstp
outsl
pop
ss
push
in
mov
mov
js
push
add
test
or
push
enter
pmulhw
cmp
push
push
psubb
pop
pop
lcall
dec
aaa
pop
dec
push
xor
test
jno,pn
sub
pop
push
dec
xchg
jne
addr16
mov
mov
mov
in
in
test
mov
jg
sbb
pop
mov
cmp
mov
clc
aas
push
daa
pop
es
push
testl
test
jg
movsl
pop
dec
dec
push
pop
pop
call
icebp
in
outsl
nop
cwtl
pop
fists
inc
scas
lods
nop
cmp
in
mov
sar
pusha
dec
clc
push
mov
lock
nop
pop
xor
cs
jmp
daa
push
insb
outsl
pusha
push
outsb
jg
or
cmp
jbe
xor
cmc
in
in
mov
scas
pop
stos
mov
xchg
xchg
loopne
mov
dec
scas
pop
pop
cmp
push
pop
xor
push
mov
sub
dec
fists
pop
pop
insl
test
aad
mov
scas
nop
arpl
mov
sub
enter
dec
ljmp
ljmp
push
add
cmp
pop
xor
adc
pop
pop
jg
ficoml
dec
mov
in
sub
ret
ljmp
jns
in
mov
mov
cmp
cmp
sbb
adc
push
inc
push
cwtl
inc
cmp
sarl
mov
pusha
jmp
out
pop
sub
push
xor
cmp
sbb
addb
cs
push
addr16
mov
sarb
aas
pop
mov
xor
push
insb
inc
outsl
iret
loopne
lcall
and
nop
imul
pop
enter
mov
fsubrs
in
push
xor
inc
xchg
sub
xchg
dec
sub
sub
push
jo
sub
xchg
sub
cwtl
enter
sub
lock
adc
inc
into
adc
cld
and
xchg
popf
das
pusha
pop
jo
dec
fmuls
ds
test
mov
test
inc
and
xchg
rcrb
das
dec
rorl
pop
aam
or
rorb
iret
js
ds
cmp
mov
dec
rcl
jle
nop
call
dec
or
inc
pop
scas
inc
fiaddl
inc
push
inc
push
aas
or
jb
leave
adc
pop
jb
call
push
enter
cwtl
into
adc
lods
insb
push
out
call
pop
ljmp
jns
push
sarb
imul
pop
pop
push
mov
scas
xchg
js
out
aaa
xor
lcall
nop
inc
outsl
xor
enter
pusha
pop
sbb
sub
and
rclb
and
shrb
and
cmpsb
mov
jg
test
push
mov
jbe
dec
test
pusha
fistl
fdivr
movsl
sub
xchg
in
inc
das
cmpsb
mov
adc
push
dec
cmp
dec
and
ljmp
scas
adcb
test
in
js
pop
rolb
loopne
sub
cmpsb
nop
inc
jo
dec
scas
sub
push
in
or
addps
sub
daa
movsb
mov
enter
mov
jns
push
enter
add
cmp
adc
or
pop
xor
cmp
nop
imul
fs
mov
mov
dec
scas
nop
dec
fsubs
add
out
sub
out
sub
out
fsubs
popa
ja
xor
std
pop
pop
mov
or
out
in
sub
pushf
pushf
cmc
std
ljmp
in
push
adc
dec
add
sub
xchg
sub
cmp
xchg
sub
push
push
js
in
sub
sub
xchg
js
mov
xchg
sub
lock
leave
adc
inc
jecxz
jb
enter
and
xchg
pushf
outsl
enter
pop
and
outsb
nop
ds
lock
sub
stos
decl
fs
je
mov
dec
jb
jns
dec
xor
cmc
in
mov
and
xor
lds
outsl
dec
dec
fadds
lock
dec
cmpxchg
push
jo
scas
xor
or
dec
punpckhbw
add
or
cmp
fstpl
fs
adc
xlat
sub
jmp
adc
push
enter
cmp
inc
mov
jo
mov
mov
lds
mov
repnz
pop
adc
fwait
or
and
pop
nop
inc
lock
and
push
push
cmp
gs
pop
mov
lcall
test
or
jg
pop
xchg
fcomps
icebp
and
call
push
add
scas
mov
das
xor
iret
ret
sahf
pop
push
jo
and
mov
aam
mov
or
pop
loopne
js
adc
xchg
fisubs
push
movhpd
dec
test
in
or
fnstsw
inc
testl
outsl
shrb
stos
or
xchg
scas
daa
cmp
data16
mov
push
and
or
les
add
jo
fs
ds
fdivs
pop
and
pushf
or
adc
or
cmp
add
scas
pop
push
sbbb
and
rcr
mov
scas
or
xor
dec
in
idiv
push
and
dec
push
pusha
push
scas
nop
sub
jmp
seto
addr16
mov
pop
pop
and
scas
cmp
dec
dec
cmpsb
nop
xchg
adc
nop
dec
scas
nop
cmp
and
scas
mov
sub
mov
enter
pop
jb
fcoml
push
mov
cmp
adc
je
pusha
push
jo
adc
sub
mov
inc
iret
pop
xor
fdivrl
aad
sbb
push
popl
mov
test
scas
das
xor
inc
pop
jnp
inc
pop
ficomps
pop
push
pop
push
and
scas
incl
shrl
das
mov
or
jg
fdivs
pusha
xor
jmp
inc
pop
inc
push
lds
ds
and
dec
aaa
cltd
dec
dec
dec
pop
nop
xchg
movl
leave
sbbl
xchg
mov
push
enter
fdivr
pop
mov
pushf
jmp
push
enter
pop
nop
xchg
push
inc
cmpsb
push
fnstsw
iret
mov
adc
and
and
or
dec
loope
push
outsb
pop
sbb
daa
inc
cmp
inc
push
sub
aas
scas
shlb
loopne
or
mov
daa
in
mov
sbb
adc
inc
mov
inc
pop
and
dec
mov
scas
mov
pop
scas
js
fs
daa
iret
mov
roll
lahf
or
pushf
pushf
pushf
fmull
xchg
mov
pushf
pushf
pushf
pushf
insb
ja
repnz
fsubrl
or
sub
sub
cmp
inc
dec
and
insb
fstpl
push
outsl
fists
mov
or
inc
xor
lcall
je
dec
cmpsb
nop
fisttpll
pop
mov
pushf
push
pop
lods
and
xchg
arpl
pusha
pop
stc
dec
scas
mov
enter
inc
enter
pop
and
dec
cmpsb
in
pop
aad
mov
nop
loopne
in
negb
dec
pop
rcl
scas
in
call
pop
xor
inc
dec
add
imul
rol
mov
push
repnz
adc
pusha
pop
xchg
pushf
sbb
jp
dec
mov
push
leave
sub
notb
dec
pusha
dec
sub
mov
outsb
das
and
jmp
mov
mov
dec
lahf
mov
dec
mov
aaa
aas
sarb
and
mov
push
xor
jb
out
jbe
aaa
call
inc
mov
push
fistps
xlat
fildll
push
pop
bound
mov
dec
lds
mov
pushf
in
jo
dec
test
lock
aaa
adc
pop
push
arpl
dec
and
js
inc
sti
and
sbb
leave
sub
mov
daa
xchg
subl
cli
add
mov
jo
lahf
in
mov
mov
sub
jg
xor
dec
rorb
jp
push
leave
imul
popa
jo
sub
es
dec
dec
push
ljmp
push
push
scas
sbb
add
add
ret
test
and
xor
nop
adc
dec
add
mov
dec
enter
push
sbb
out
stos
and
in
sarl
rorb
dec
xor
cs
fldcw
flds
fsubl
ljmp
push
aad
pop
in
push
sub
xrelease
xor
lock
std
outsb
aad
ss
loop
in
push
push
movb
xor
mov
outsb
lahf
push
int3
inc
add
fnop
rclb
addb
mov
insb
mov
arpl
aam
clc
push
jo
imul
push
les
push
inc
xor
int
jle
int
fldl
pop
ljmp
mov
dec
in
push
sub
shll
in
rorl
sbb
lahf
jle
adc
pushl
pop
loope
cmp
rcr
out
fwait
insb
xchg
fimuls
mov
movsb
adc
cmpsb
movsl
insl
test
add
loopne
out
push
lods
sub
mov
xor
sub
inc
and
aas
rcrb
cwtl
add
xchg
jne
sub
sbb
int
jl
xlat
or
or
int3
fsubs
je
hlt
lret
aam
mov
pop
or
daa
in
jmp
push
and
lahf
sbbb
daa
out
pop
dec
testb
ficoml
mov
jne
jmp
jmp
or
aas
dec
fsubrl
cmp
push
sub
daa
or
push
or
mov
xchg
sbb
cld
addr16
adc
xor
or
nop
imul
jno
aad
or
push
dec
stc
jg
subb
pminub
push
daa
lds
testl
cmpsl
icebp
or
add
and
out
mov
out
dec
sub
push
aad
dec
pop
and
adc
sub
mov
add
decl
or
scas
test
sub
mull
cs
dec
pop
jmp
mov
sbb
push
pop
sbb
or
mov
xchg
or
dec
push
inc
or
arpl
mov
adc
push
ret
sbb
sahf
or
add
inc
xor
test
xchg
clc
mov
xchg
out
cs
push
mov
mov
dec
or
adc
test
sub
stos
dec
add
bound
and
in
daa
stos
sbb
in
daa
cmpsl
inc
popf
cmp
and
add
add
dec
add
mov
outsl
or
add
jg
push
add
adc
or
xor
jp
daa
add
and
adc
aaa
or
push
adc
loopne
out
adc
shrb
daa
testl
daa
es
stos
push
add
mov
imul
add
jg
sub
int3
nop
mov
lret
adcb
push
inc
push
dec
sahf
add
push
test
add
push
rolb
pushaw
inc
add
jg
push
shlb
jmp
add
test
dec
xlat
roll
add
mov
and
test
stos
fs
add
enter
add
add
pmaddwd
xchg
push
daa
test
enter
in
adcl
add
cs
xlat
lahf
or
mov
add
and
jno
cmpsl
add
rcll
adc
or
adc
cmpsl
out
loope
test
ds
loopne
filds
scas
sub
inc
add
mov
scas
dec
add
mov
and
mov
orb
scas
add
and
outsb
sbb
push
popf
or
push
sbb
pop
arpl
push
dec
or
and
imul
inc
inc
and
adc
adc
adc
fmul
sbb
and
sbb
adc
pop
push
adc
shlb
daa
in
adcl
add
add
loop
stc
pop
jb
pop
adc
dec
incb
sub
daa
mov
les
mov
push
lods
pushf
xchg
mov
add
mov
inc
push
push
push
push
inc
xor
adc
or
and
in
and
ja
notb
lret
xchg
pop
fs
xor
daa
add
and
and
orb
xor
xor
pop
stos
add
dec
and
pop
mov
inc
push
dec
xor
shrl
jo
nop
push
adc
pusha
adc
sub
and
push
add
repz
add
add
repz
enter
iret
repz
rorb
or
cmp
or
or
repz
test
movsb
adc
repz
mov
adc
repz
adc
adc
repz
mov
test
iret
repz
sbbb
sbb
cmp
repz
sbb
sbb
repz
push
repz
pusha
and
and
repz
and
and
repz
cmp
iret
repz
xor
xor
sub
cmp
repz
sub
sub
repz
sbb
iret
repz
adc
adc
or
cmp
repz
xor
xor
repz
sbb
clc
hlt
add
mov
xor
and
mov
or
outsb
push
mov
mov
mov
sahf
out
cmpb
sahf
out
sahf
pusha
pop
push
dec
inc
cmp
out
xor
and
adc
xor
out
add
and
lock
repz
in
call
cmp
repz
ror
enter
iret
repz
iret
repz
nop
mov
iret
repz
inc
cmp
iret
cmp
repz
idiv
pop
push
in
cmp
repz
mov
cmp
repz
pop
dec
cmp
repz
sub
or
add
xchg
cwtl
xchg
xor
clc
and
xlat
pop
add
push
iret
repz
test
call
cmp
xor
xchg
lahf
sub
jns
out
pop
cld
dec
sti
cmp
jns
out
sub
sbb
iret
sarl
div
sub
fdiv
cmp
repz
hlt
lods
repz
idivl
repz
jl
fildll
iret
cmp
out
loopne
in
out
sahf
out
in
mov
jns
ljmp
push
lcall
out
in
idivl
repz
in
jecxz
loop
cmp
repz
loope
loopne
cmp
repz
or
hlt
sub
int3
fstpt
fidivrl
out
out
fnstenv
push
xlat
dec
jnp
out
and
add
iret
repz
sub
shl
rcl
sarl
repz
shrb
repz
jl
push
iret
push
lret
sub
cld
daa
sahf
out
sahf
leave
lock
out
out
mov
lahf
push
out
jl
test
xor
cmp
repz
pop
mov
repz
sahf
cmpsl
jne
or
out
es
mov
out
sarb
mov
push
mov
mov
iret
repz
push
mov
and
mov
movsl
repz
mov
xor
mov
out
je
cmp
rep
pusha
pop
push
dec
bound
iret
inc
cmp
and
pop
prefetcht2
jb
sbb
shld
push
or
fdivrl
xchg
add
mov
push
mov
sub
in
pop
and
xor
incl
rorb
or
enter
push
mov
add
and
scas
adc
xchg
sbb
jle
loopne
iret
int
push
pop
pusha
pop
js
jo
fcomp
push
xor
scas
nop
pop
jmp
negl
mov
push
jg
outsb
dec
pop
pusha
lods
cmp
ds
outsl
pop
cmp
push
adc
cwtl
xchg
dec
jnp
sub
add
pop
push
fs
je
push
dec
es
outsb
mov
xchg
and
outsl
add
add
sub
clc
xchg
jnp
nop
dec
fwait
dec
adc
mov
out
dec
aaa
fsubrs
pop
add
aaa
inc
outsb
out
jp
popa
das
xor
or
cli
xor
sub
cmp
dec
push
les
and
sub
aad
sub
and
icebp
inc
arpl
sub
mov
and
jne
mov
push
push
xchg
xor
pop
aaa
bound
dec
mov
jae
imul
push
mov
aas
xor
and
push
daa
imul
enter
add
mov
lcall
inc
adc
outsb
adc
test
ss
sub
inc
jl
dec
dec
inc
sub
movsl
or
add
mov
push
das
push
fmuls
bound
popa
push
jp
and
jne
outsl
insl
aad
stos
stc
pop
js
imul
lods
sbb
and
push
dec
inc
inc
push
pop
and
adc
gs
jb
mov
cmp
xor
xor
jne
sbb
xchg
gs
push
inc
arpl
jbe
push
sub
popa
sub
fs
outsl
lcall
push
and
sub
xor
divl
inc
push
push
dec
push
leave
push
dec
scas
ror
mov
into
es
into
icebp
negl
lcall
lahf
fcoms
in
shll
ss
add
clc
ret
sub
mov
mov
std
insb
imul
xchg
ret
pslld
mov
mov
cwtl
into
jae
adc
or
je
jnp
sarl
pop
mov
push
add
iret
jns
testb
sahf
cmp
inc
pusha
aaa
lahf
fdivs
iret
mov
sbb
or
cmp
sahf
addr16
movl
cmp
fildll
or
cmp
xor
pop
repnz
mov
sub
and
test
adc
shrl
jae
cld
cmp
repnz
hlt
push
in
daa
jmp
fcompl
repz
imul
pusha
push
pop
iret
sti
out
cmp
jbe
and
sbb
iret
jnp
xchg
cmp
push
aam
lods
es
adc
iret
jnp
pop
push
dec
and
out
add
aaa
fisttpll
push
aaa
push
push
lods
not
fiaddl
aam
dec
pop
inc
imul
pushf
push
mov
mov
mov
int3
loop
shlb
add
std
mov
pop
or
add
mov
lods
int3
cmc
scas
lahf
adc
jae
push
sbb
jge
add
mov
ss
or
cmpsb
insb
and
mov
or
sbb
shll
or
pushl
iret
aam
mov
mov
inc
adc
xchg
ret
out
in
sahf
xor
dec
jne
fs
jg
ret
lret
aam
into
stos
aad
or
clc
out
lods
aam
jnp
dec
mov
aas
mov
xchg
shr
fwait
stos
xlat
aam
mov
mov
aam
mov
bnd
inc
jg
testb
lcall
mov
mov
je
xchg
std
mov
out
out
int3
mov
or
xchg
mov
leave
xor
mov
pop
outsb
iret
fbld
push
push
insb
adc
iret
or
adc
sbb
int3
in
lock
mov
insb
pop
mov
sbb
in
sub
xchg
mov
pop
mov
pop
jnp
les
in
cmpsb
jbe
mov
and
mov
call
fbstp
data16
mov
jle
ret
mov
pop
test
psubd
in
repz
sub
and
andb
pusha
jo
test
push
cmpsl
or
push
xor
push
jo
mov
or
or
fstps
cmpl
mov
cmp
mov
adc
xor
iret
push
xor
mov
mov
mov
repz
jb
xor
inc
outsl
cwtl
stos
adc
mov
ds
or
inc
sub
int
push
cld
out
test
ret
mov
loope
cltd
shr
adc
adc
pusha
rolb
inc
xchg
mov
sub
popa
jb
and
or
fisttpl
loopne
xchg
push
outsl
mov
xchg
pop
dec
es
jnp
or
stos
cwtl
enter
lret
xchg
lcall
sub
or
popa
mov
adc
xor
mov
and
mov
mov
xchg
ljmp
xchg
adc
cmpsb
int
notl
sahf
dec
daa
out
fidivl
inc
cmp
shrb
mov
inc
or
or
mov
mov
movsl
mov
and
aas
mov
fmull
push
xor
sbb
push
loop
push
push
add
mov
cltd
push
mov
vpsubq
cmpsl
out
pop
inc
fs
stos
xchg
pop
push
mov
mov
mov
jo
push
daa
add
jb
mov
push
pushf
add
sub
ljmp
dec
in
push
aas
bound
adc
add
push
mov
sub
shr
popa
dec
pusha
dec
adc
loope
or
mov
mov
pop
das
push
out
lahf
jae
xlat
loop
or
push
imul
pop
sub
jae
jbe
mov
imul
fwait
out
mov
fdivrl
xor
xlat
cmpsl
adc
pop
cs
pop
sbb
mov
mov
mov
and
lods
pop
push
rcr
inc
mov
ljmp
aam
ret
mov
mov
xor
and
arpl
test
xchg
scas
push
xchg
xchg
xchg
push
xchg
mov
sbb
pop
mov
dec
push
or
push
push
add
add
push
pushl
inc
sub
mov
sar
lret
sti
mov
push
sub
scas
sub
lar
dec
bound
ret
outsl
fs
jnp
sub
adcb
mov
push
cmp
imul
data16
pop
adc
popa
insl
imul
jbe
les
popa
xchg
jo
testb
jnp
xor
xor
mov
or
ja
adc
adc
mov
push
cmp
xor
movsl
orb
xor
gs
inc
or
mov
xor
xor
cwtl
lods
cmp
shrl
xor
dec
shl
mov
jno
notl
gs
fwait
and
sub
loope
test
and
popf
sub
and
push
fisttpl
or
pop
popa
cmp
les
jno
cmpsl
call
jne
sbb
jbe
push
push
sub
roll
popa
jae
bound
pop
xorb
add
outsb
hlt
pop
sub
stos
sub
jo
jo
and
jnp
insb
push
in
stos
ljmp
das
aaa
sub
adc
push
cmc
lods
and
sbb
add
mov
movb
iret
jnp
test
pushf
push
cwtl
nop
mov
cmp
repz
repz
push
dec
fldz
cli
daa
outsb
bound
cmp
mov
xchg
dec
sbb
push
outsb
cltd
je
out
lods
jb
sbb
jbe
jo
cs
ljmp
push
and
in
es
in
insl
jo
sub
push
inc
mov
sbb
mov
pushw
jae
mov
xchg
cmpsb
sub
das
pop
add
cmpsb
mov
aaa
push
mov
xchg
bound
add
push
jb
sti
pop
mov
add
lar
pop
lret
ljmp
jnp
dec
fwait
arpl
cmp
sbb
dec
mov
push
mov
push
scas
popa
jns
cmpsl
bound
add
pop
jg
add
mov
mov
fists
ja
or
xor
mov
pop
dec
aas
jns
xor
or
ret
mov
clc
jae
outsl
imul
pop
in
and
jne
mov
jae
push
int
mov
je
addb
push
pop
popa
sub
and
sub
xchg
popa
out
or
popf
loope
pop
inc
gs
imul
imul
push
xor
lahf
push
jns
inc
mov
fidivl
outsb
pop
insb
cmp
xor
cld
sub
jns
out
inc
add
push
jae
mov
ret
or
jo
imul
jne
or
ja
or
add
pop
xor
jbe
or
pop
insb
rcrl
pop
xor
or
dec
mov
pop
mov
shld
push
sub
aam
and
fs
add
popa
push
rcr
or
mov
dec
insl
stos
jecxz
cmp
jns
gs
or
clc
mov
outsb
loope
or
sub
lcall
dec
pop
add
sti
pop
lcall
push
outsb
outsl
insb
shll
fidivs
fisubl
pop
insb
push
outsb
cmp
pop
aaa
js
sbb
push
pop
inc
mov
sbb
fisttps
jo
pop
cwtl
les
dec
jns
popa
pop
or
xor
insl
xchg
sbb
cmpsl
loop
pop
jae
into
mov
adc
add
mov
je
pop
inc
outsb
jbe
push
mov
imul
imul
cmpsb
pop
push
lret
fiaddl
movsb
stos
outsl
pavgb
pusha
or
jae
outsb
jns
add
xorb
inc
scas
addr16
ret
pusha
dec
bound
lods
loopne
stos
push
jae
pushf
add
cmp
adcl
int3
push
sbb
loope
insb
sub
imul
mov
xchg
addr16
or
fiadds
jo
pop
xchg
push
xchg
jecxz
add
pop
decl
lds
pop
pop
mov
outsl
adc
pop
insl
sbb
fistpl
jnp
sbb
lods
insl
xchg
popa
pop
scas
mov
inc
pop
adc
xor
sbb
ret
add
cmpl
mov
xchg
imul
ret
ja
sbb
xor
adc
pop
mov
xchg
add
loopne
sbb
push
imull
add
ja
out
ja
js
adc
jl
xchg
bound
cmpsb
cmp
jp
setae
loope
fdivl
fistpl
push
arpl
jnp
iret
pusha
je
call
jbe
inc
sub
xchg
cmpsl
popa
cmpb
push
push
and
out
addr16
outsl
aaa
iret
loopne
test
popa
add
mov
dec
fldl
das
pop
xchg
xor
push
fwait
push
es
stos
add
test
xor
sbb
dec
mov
imul
jb
inc
cmp
or
mov
int3
pop
outsl
addl
inc
outsl
gs
ja
jbe
cmp
and
xchg
addb
add
sarl
jb
sub
in
pusha
shll
add
stos
outsb
add
ja
pop
insb
out
push
into
fadds
fimuls
gs
jmp
fldl
xor
fsubrl
loopne
mov
jae,pn
sub
outsl
dec
dec
mov
jbe
mov
push
push
cmpsb
jmp
loope
xchg
repz
adc
xor
leave
sub
into
ja
testl
or
ss
leave
imul
das
insb
jae
test
bound
cmp
fs
cmpsb
fcompl
xlat
adc
mov
js
lcall
jg
lahf
or
xlat
inc
or
and
fidivs
or
jb
ss
adc
mov
loop
cmp
inc
inc
xchg
inc
stos
push
outsl
jge
lahf
or
pop
out
gs
dec
pop
movsb
xor
push
cmp
pushf
pop
das
mov
pop
mov
sbb
inc
dec
jb
sbb
push
ret
push
jge
jnp
mov
fisubs
sbb
sub
insb
xorb
adc
mov
mov
mov
pop
jne
jne
jne
add
sub
push
adc
outsb
or
adc
addr16
lret
add
inc
leave
inc
shlb
or
adc
clc
subb
jne
mov
adc
xchg
das
ss
xor
cmp
addr16
sbbl
inc
lea
jo
pop
and
xor
jo
push
insl
insl
jbe
loope
ja
loop
ss
push
nop
outsb
cmp
insb
xchg
sahf
push
lret
sub
loop
icebp
shr
lahf
push
lgs
fs
mov
dec
sti
test
add
or
and
cmp
or
fidivrs
and
or
sbb
add
sub
rcll
pop
adc
pop
aam
movsl
fadds
pop
in
pop
sbb
daa
icebp
mov
js
cld
enter
iret
jae
mov
gs
pop
or
lock
mov
dec
loope
push
sub
cmpsb
bound
adc
push
fimuls
jle
cmovb
xlat
pop
insb
adc
dec
fimull
out
xor
pop
pop
xor
jbe
push
movsb
xor
ret
mov
sbb
inc
arpl
dec
popf
inc
lods
pop
mov
pop
pop
mov
das
push
imul
aad
movsl
scas
aas
mov
pop
aas
outsl
push
pop
mov
out
aas
andl
pop
das
mov
mov
sti
pushl
aam
or
sub
test
das
push
push
les
das
test
adc
xchg
das
mov
outsl
gs
lods
ss
das
xchg
bound
insl
mov
mov
mov
xchg
dec
xchg
mov
adc
ss
dec
popl
iret
outsb
fs
push
popa
push
add
test
fisubrl
xchg
push
mov
lods
das
xchg
push
fistl
test
inc
insb
xchg
aas
mov
and
xchg
aas
dec
insb
lds
xchg
das
inc
lds
xchg
fbld
das
push
mov
fcoms
lds
mov
insb
xchg
pop
push
stos
fsubs
pop
dec
cmp
sub
aas
push
and
test
aas
or
xchg
xchg
sub
adc
icebp
fsubl
fiaddl
jg
mov
insl
and
xchg
fsubs
push
pop
mov
inc
xchg
aas
inc
jo
dec
lds
mov
aas
lods
bound
sub
iret
inc
aas
movsl
test
sbb
stos
aas
xchg
lret
mov
dec
outsl
sbb
loopne
mov
pop
cmpb
pushf
arpl
lds
mov
xchg
push
inc
scas
dec
call
add
in
ficoml
sub
negl
and
push
and
test
aas
pop
int
mov
jg
xchg
adcb
mov
iret
add
push
push
lea
dec
pop
or
scas
aas
xor
sarl
outsb
imul
test
outsb
sub
das
pop
aas
push
xor
add
or
inc
gs
inc
mov
push
cmc
xor
bound
push
in
ror
add
pop
test
or
adc
aas
sbb
pop
add
mov
aas
sbb
fimull
xchg
aas
dec
arpl
and
scas
loopne
icebp
ud1
out
mov
xor
ja
inc
mov
dec
fs
aas
das
push
pusha
imul
loopne
push
sub
push
add
cmp
mov
mov
sbb
movsl
pop
add
gs
pop
and
das
aas
cmpsb
xor
xlat
das
push
jbe
das
dec
dec
arpl
inc
das
xor
cltd
lahf
repz
inc
push
imul
imul
movsl
cmp
push
dec
popf
lahf
inc
adc
lock
inc
lahf
sbb
aas
mov
cmp
lods
push
rcll
icebp
xor
mov
sub
dec
mov
jo
push
pop
inc
insl
bound
jae
cwtl
lods
sub
aas
sahf
out
and
insb
push
xor
dec
insl
push
cltd
shlb
or
inc
xor
scas
mov
push
dec
dec
das
pop
das
pop
dec
add
ret
mov
jbe
call
cmpxchg
adc
push
add
sub
out
push
push
pop
adc
aas
or
dec
xlat
clc
pusha
nop
test
in
bound
and
fcmovnu
std
mov
and
xchg
pop
add
testb
test
outsl
test
insl
bound
xor
pop
insl
pop
xchg
jp
aas
add
mov
ret
bound
sqrtps
cs
insl
pop
icebp
subb
pop
pop
jg
push
out
outsb
add
fidivl
enter
into
aam
ror
enter
cmp
sarb
repz
nop
mov
js
out
sahf
je
insb
push
out
pop
pop
push
push
dec
cmp
out
cmp
sub
push
cmpsl
stc
cmp
sbb
add
mov
sahf
out
sahf
in
sarb
mov
pop
or
add
mov
orl
popf
out
ficoms
repz
xlat
dec
sbb
adc
mov
iret
repz
adc
imul
push
sbb
mov
out
sahf
out
js
jns
jae
jp
push
cld
pop
mov
jmp
push
decl
pop
or
mov
lds
pop
xchg
xor
inc
jno
and
mov
ret
lds
roll
jo
out
sahf
out
sbb
sahf
out
sahf
adc
push
inc
jns
out
or
out
sahf
out
add
out
sahf
adc
sbb
js
out
or
adc
mov
outsl
push
sbb
jns
out
push
fcoms
rcrb
int3
and
and
and
adc
iret
stos
cmp
outsb
lret
aad
iret
repz
loopne
in
bnd
cmpsl
stc
push
xchg
adc
cs
out
sahf
out
outsb
jle
mov
mov
xchg
and
repz
inc
popa
data16
cmp
repz
sahf
out
cwtl
or
ds
sahf
out
sahf
push
cmp
out
loop
push
cltd
cs
cmp
repz
push
jb
sahf
iret
repz
mov
xlat
icebp
notb
repz
into
mov
out
cwtl
fmuls
aas
adc
fwait
loopne
stos
ret
imul
test
ja
pop
add
subb
add
pop
pop
mov
and
mov
adc
add
jae
ret
mov
fiadds
subb
add
push
push
or
inc
les
fldcw
inc
xor
or
mov
and
mov
push
dec
into
jg
inc
add
insb
mov
sarl
gs
push
push
add
xor
stos
pop
test
addl
mov
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
orl
push
push
add
ja
adc
sub
add
add
push
in
sub
aad
add
or
cmpsb
push
out
push
or
add
adc
mov
mov
inc
or
andl
add
sbb
adc
adc
loope
xor
add
adcl
les
mov
add
pop
inc
add
cs
push
pop
mov
add
les
push
and
fisubl
sbb
inc
pop
push
add
add
adc
les
nop
mov
inc
and
adc
add
adc
jo
das
sub
inc
and
loope
cld
push
pusha
mov
inc
xchg
das
push
or
push
dec
pop
les
and
inc
and
inc
sbb
stos
adc
pop
add
lea
adc
sbb
adc
or
add
lds
pop
add
outsl
add
sti
es
les
rorb
fsubp
push
insb
mov
inc
and
bound
and
push
xchg
and
jmp
ret
inc
mov
inc
pop
mov
orb
int
lea
and
subb
fldenv
jns
sub
inc
les
inc
mov
rcl
inc
lods
dec
lods
and
push
and
sub
jno
add
adc
popa
inc
cmc
adc
aaa
sub
add
icebp
inc
insb
ss
popf
inc
les
cltd
ss
mov
insb
mov
dec
xor
popl
sub
or
insb
mov
or
flds
push
dec
cmp
jo
inc
and
add
push
insb
popa
and
add
cwtl
or
ss
mov
fdivrs
xlat
adc
sbb
jo
lcall
jne
pop
sub
sbbl
or
mov
cmc
lock
aaa
imul
and
lcall
xor
testl
loop
inc
aad
adc
or
add
popf
xchg
and
inc
or
pop
inc
mov
bound
arpl
add
or
ss
adc
fsts
fbld
inc
stos
int
adc
and
push
aas
push
imul
add
or
adc
jbe
in
fidivl
or
sbb
movsb
sbb
les
inc
jecxz
ljmp
mov
jmp
out
pop
xchg
out
or
pop
mov
or
nop
cmpsb
mov
ret
jmp
mov
arpl
or
jno
bound
outsl
and
sbb
in
inc
and
mov
mov
sub
sub
mov
in
dec
adc
and
cmp
add
cs
call
aaa
shll
jecxz
arpl
orl
inc
call
orb
adc
or
xchg
dec
pusha
pop
dec
and
mov
imul
add
orb
and
and
and
sbb
sbb
je
and
fcomip
add
pop
orb
jmp
dec
pop
and
orb
dec
adc
pop
fildl
pop
orb
mov
pop
pop
in
adc
inc
mov
sub
pusha
adc
out
test
inc
ja
inc
div
lods
imul
add
ret
add
mov
inc
jae
mov
dec
imul
push
push
inc
les
lock
xchg
int
or
stos
xchg
mov
ret
adc
pop
push
sub
sbb
xor
adc
and
inc
lret
arpl
inc
sub
inc
sub
es
stos
add
jno
sbb
add
mov
inc
imul
adc
jmp
cmc
test
inc
and
xchg
popa
negl
push
push
push
xchg
or
vpshab
add
stos
xor
pop
add
mov
adc
mov
sub
pop
subl
dec
andb
push
shll
mov
adc
inc
movsb
fsubrs
sbbb
sub
mov
add
dec
add
xor
loopne
pop
cmp
sbb
lea
adc
outsb
arpl
sbb
movsl
and
dec
leave
test
inc
ret
and
push
outsb
bound
dec
sbb
cli
jb
iret
add
jno
jbe
imul
inc
pusha
outsl
dec
loopne
mov
and
mov
mov
mov
cmp
shlb
outsl
and
scas
and
push
int
add
sbb
and
adc
push
cmc
and
sbb
in
adc
jecxz
popa
in
pusha
sub
cmpsb
mov
loopne
call
movsb
add
mov
mov
add
imul
push
or
or
ret
out
push
or
orl
sarl
sub
repnz
sbb
inc
push
cmp
lea
inc
xchg
and
xlat
push
inc
dec
pop
adc
xlat
les
mov
add
and
xor
leave
add
adc
and
and
add
push
inc
pop
add
xchg
xchg
add
adc
push
or
and
mov
lret
inc
nop
mov
add
and
dec
inc
fcmovb
mov
and
adc
aas
inc
or
nop
mov
and
loop
mov
nop
mov
pop
mov
test
pop
icebp
push
inc
pop
xor
xor
xor
les
andl
or
xchg
mov
lahf
inc
lret
jo
or
sub
mov
into
push
stos
inc
inc
inc
scas
inc
mov
test
dec
mov
pushf
pop
adc
rcrl
aad
xor
and
popf
es
pop
ss
mov
ja
fdivrl
mov
jo
rcll
ret
xchg
in
dec
les
push
arpl
xchg
push
or
pop
cld
inc
push
dec
mov
test
xor
inc
and
insl
mov
enter
shlb
or
out
ljmp
xor
cltd
adc
xor
adc
inc
les
and
add
stos
fwait
adc
mov
mov
mov
dec
lret
ljmp
sub
dec
jmp
and
sub
iret
xchg
dec
add
or
insl
adc
lret
xchg
mov
inc
test
popa
outsl
or
sub
and
pop
loop
pop
mov
test
add
sub
xor
nop
inc
pop
testl
notb
adc
adc
xchg
mov
stc
pop
xchg
and
leave
push
mov
aaa
pop
dec
mov
xor
adc
xchg
mov
sbb
push
inc
int
or
and
inc
mov
push
jno
cmpsb
les
pop
cmp
mov
adc
inc
jno
adc
pusha
insl
xor
pop
nop
lea
inc
jo
mov
inc
cs
lret
mov
mov
outsl
mov
cmpsl
add
mov
sub
add
mov
inc
sbb
mov
dec
sbbl
add
cltd
adc
aad
push
inc
sti
mov
jnp
inc
mov
imul
push
dec
and
mov
mov
jno
xchg
pop
aam
mov
fstl
xchg
imul
fiaddl
mov
outsb
out
pop
jo
cmp
mov
movsl
and
sub
aad
mov
dec
mov
inc
xchg
js
jno
pop
pushf
adc
and
pusha
jae
ret
adc
adc
and
cltd
xor
xchg
push
insb
mov
add
les
xchg
xchg
add
dec
lds
adc
xorl
xor
push
adc
adc
mov
sbbb
add
data16
outsb
ret
outsb
aam
sbb
xchg
xor
jnp
loopne
dec
je
jo
mov
mov
test
rcr
insb
lea
jp
push
mov
es
mov
mov
sub
add
pop
pop
sbb
or
pop
add
push
sub
xor
rclb
mov
ss
and
inc
and
xchg
test
insb
les
sbb
or
pop
cmp
mov
sbb
pushaw
adc
aaa
and
add
or
inc
insl
push
sub
add
insl
add
into
incl
stos
sbbl
jmp
add
add
mov
push
add
mov
test
les
inc
add
push
add
arpl
add
or
sbb
mov
movsb
dec
or
sbb
out
pop
or
es
loopne
push
mull
paddsw
add
push
add
cmc
sahf
sbb
prefetchw
es
xlat
out
fisubrl
ret
lahf
sbb
dec
sbb
push
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
