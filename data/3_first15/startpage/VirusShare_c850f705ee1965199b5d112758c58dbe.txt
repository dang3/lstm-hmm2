mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
frstor
dec
jmp
les
or
cmp
std
push
out
push
cmpsb
test
sub
mov
mov
loop
insl
fwait
push
je
out
lret
push
test
or
sbb
xchg
mov
push
xchg
gs
das
stos
mov
arpl
mov
xor
cwtl
inc
movsl
clc
sbb
push
add
jb
sub
lds
pusha
or
andl
jo
mov
lret
xchg
fld
push
and
cltd
add
xchg
test
mov
mov
call
xor
dec
cmp
rorb
data16
push
push
sub
test
add
adc
xchg
in
lret
enter
pop
and
insb
mov
insb
pop
scas
ds
mov
inc
adc
inc
lds
cmp
sarl
jnp
cmp
push
jp
xchg
jle
daa
pop
out
push
push
mov
dec
into
popa
pop
mov
add
loopne
xchg
loopne
xchg
inc
fisubs
addr16
xor
repnz
mov
loop
sbb
xlat
mov
jecxz
mov
push
or
loope
add
jb
fnstcw
aam
fxch
ljmp
mov
sub
adc
cmp
sbb
rorl
idiv
into
cli
jmp
imul
imul
push
add
subb
mov
mov
mov
sub
pop
inc
cmpl
lcall
out
lods
lahf
push
mov
pusha
add
push
add
mov
mov
cld
pop
push
or
fs
jb
pop
add
cmpsl
and
insl
xor
cmc
mov
dec
ret
sub
add
cmova
fbld
lods
jmp
xchg
aam
mov
mov
int3
ja
jl
cld
and
cmp
gs
aad
push
cltd
cs
dec
dec
pop
arpl
inc
movsl
sbb
jecxz
add
mov
mov
or
cli
cmp
pop
fldl
pop
out
xor
pop
aad
das
movsb
lds
bound
stos
mov
xchg
adc
inc
enter
inc
mov
ds
xor
scas
lcall
dec
int
push
movsb
imul
dec
pusha
xchg
jg
dec
add
fstps
inc
pop
adc
inc
sub
pop
jmp
or
test
mov
rorb
fldl
inc
and
inc
nop
mov
fdivrs
adc
fists
iret
sti
xorl
or
std
pop
call
or
ret
fsubl
mov
sub
mov
sub
fidivrl
jecxz
sbb
xchg
rcrb
push
push
cmp
lcall
call
push
pushf
fldenv
jns
or
dec
push
and
mov
sub
xchg
mov
push
xchg
mov
jns
bound
sub
ret
mov
lret
faddl
dec
rclb
cmpsb
inc
cmp
pop
fnstenv
popf
mov
dec
loopne
filds
pusha
push
fistpl
xor
jne
dec
lahf
mov
gs
loopne
es
sti
xchg
fcmovne
lcall
mov
es
je
jae
adc
fsubrl
mov
xor
cmp
mov
cltd
inc
pop
cli
fisttpl
fdivs
mov
out
outsb
dec
push
and
push
out
pop
and
aam
cmpsb
dec
or
mov
mov
pop
daa
dec
aaa
mov
pop
mov
sub
mov
movsb
fcomip
pop
or
gs
push
idiv
in
fmull
dec
add
pop
or
jno
xor
jle
jns
lahf
mov
lods
std
mov
rcr
mov
lock
lret
aad
iret
in
jge
sub
mov
shrb
xchg
jns
jns
fisubs
aas
push
aad
push
loop
pop
xchg
movsb
rcll
into
ljmp
std
sub
xlat
aas
cmp
sti
add
sub
and
and
jns
xchg
xchg
loop
bound
inc
mov
inc
popa
shr
lods
pushf
pop
out
mov
or
fistpl
mov
aas
fistpll
push
add
into
mov
data16
and
xlat
jo
rolb
addr16
orb
lahf
dec
imul
inc
mov
out
pusha
pop
or
test
jb
jge
test
cmp
imul
add
fisubl
imull
movsb
and
xchg
stc
mov
mov
xor
ja
push
inc
test
fldt
ret
das
mov
dec
push
cmp
sub
fwait
sbb
mov
mov
mov
xor
jb
rcrb
mov
ds
mov
icebp
stos
cwtl
inc
sub
pop
or
mov
lock
inc
cmp
loope
movsb
sbb
adc
scas
dec
sbb
iret
push
sbb
push
jg
aas
inc
cmp
pop
pop
xchg
jnp
and
and
insb
ret
xchg
jmp
addr16
sti
lock
mov
sti
fbstp
jo
inc
push
dec
xchg
js
push
in
pop
sbb
cmp
fsubl
ffreep
sbb
pop
cmc
idivb
mov
daa
lahf
xchg
repz
push
inc
pop
ret
sbb
and
frstor
or
dec
xor
jp
xchg
gs
xor
and
clc
aas
and
nop
sub
mov
mov
movsl
push
das
xchg
dec
sub
sahf
gs
mov
pop
scas
mov
inc
pop
add
cli
mov
sbb
js
aas
movsb
sub
push
lods
ss
jb
dec
dec
lods
cmp
push
add
sbb
shrb
or
sbb
insb
pop
cmp
mov
rcll
imul
ret
sub
push
mov
push
xor
or
mov
clc
negl
lods
xchg
movsl
or
jmp
xlat
and
sub
bound
adc
imul
sbb
xchg
in
and
add
xor
add
mov
sbb
mov
test
push
xchg
cmpsl
lcall
lea
push
in
mov
cmp
aam
dec
lcall
shlb
xor
lret
incb
adc
add
pop
insb
xchg
mov
pop
or
aam
cmc
cli
jnp
outsb
jl
xchg
sbbl
adc
push
sahf
mov
outsl
insb
add
mov
push
icebp
scas
xor
xchg
inc
mov
out
and
and
or
or
cmp
gs
pop
fs
add
in
popa
lods
es
gs
dec
pop
setl
dec
out
mov
mov
ror
mov
or
andl
ja
clc
filds
ljmp
push
jb
aad
arpl
mov
out
sarb
mov
mov
bnd
hlt
or
jmp
stos
testb
hlt
imul
sbb
mov
pop
lea
in
mov
adc
lret
mov
mov
xor
daa
sahf
sub
mov
dec
pop
xchg
mov
and
cmp
fdivs
je
test
leave
push
jbe
add
aam
lcall
in
and
dec
in
xchg
jns
mov
jbe
outsl
mov
pop
jne
mov
cs
popa
push
rcrb
add
repnz
movsl
fistl
pop
into
mov
lock
jle
das
ret
mov
xchg
outsl
push
push
loop
xchg
mov
fldenv
nop
or
add
pop
pop
leave
cs
mov
mov
leave
fmuls
icebp
pop
out
mov
arpl
loop
sub
iret
pop
xor
jns
movsb
rclb
cmp
adc
sub
rcr
mov
mov
nop
rcrb
aad
mov
lock
mov
xchg
xchg
loope
lea
push
add
adc
fsts
pop
cmpsl
xor
insb
and
add
adc
test
pop
lret
sbb
cld
std
cmp
loop
push
andl
mov
fisubl
bound
loope
leave
push
or
cmp
test
cmp
cmp
loope
gs
xchg
pop
dec
mov
frstor
mov
lds
pop
push
inc
imul
pand
imul
shrl
mov
adc
jns
mov
push
jno
ja
mov
mov
dec
or
test
inc
mov
movsb
mov
mov
mov
mov
or
mov
inc
or
sbbl
push
repz
mov
pop
xchg
jbe
dec
test
andb
ret
int
fdivrs
dec
dec
mov
cltd
mov
mov
es
mov
mov
mov
in
adc
mov
jnp
lret
mov
idiv
adc
and
dec
jmp
outsb
aas
pop
shlb
mov
jmp
and
test
outsb
dec
ror
iret
ret
jnp
inc
adc
push
sahf
jmp
sub
add
cmp
mov
ja
push
icebp
mov
dec
xchg
dec
das
mull
test
sub
aad
flds
xchg
ret
push
sbb
xlat
in
mov
xor
push
cs
pop
inc
xchg
inc
fsubs
cmp
mov
cmp
testb
mov
pop
sub
out
repz
push
test
pushfw
sub
xchg
xchg
cwtl
push
sahf
mov
mov
mov
fwait
cmp
xor
loop
iret
jge
mov
rcr
cmc
sbb
icebp
outsl
iret
into
lea
dec
fidivs
out
ficompl
push
scas
mov
fnstsw
pop
xchg
xchg
dec
mov
cmp
nop
cmp
mov
ljmp
in
push
subb
aaa
out
pop
popa
mov
clc
into
cmp
cmp
inc
or
xor
cmp
je
mov
jae
jl
gs
int3
or
jno
xchg
mov
outsl
pushf
fwait
out
outsb
jp
rorl
mov
push
inc
xor
push
inc
mov
xchg
mov
mull
mov
jp
out
push
lods
scas
inc
mov
xchg
adcb
or
rclb
jmp
dec
adc
cmc
xor
sbb
dec
iret
jne
insb
test
push
mov
repz
popa
and
mov
adc
ret
dec
sub
mov
adc
jge
outsl
push
sti
cmpsl
jo
loopne
jae
test
fsubrp
or
sarl
xor
lcall
lret
push
jle
int
jl
pusha
cs
ljmp
or
cwtl
imul
clc
gs
out
mov
pop
cmp
cmp
adc
xor
lds
xor
fdivr
andl
outsl
pop
mov
enter
repnz
cld
push
test
and
daa
mov
in
and
add
xor
xchg
jo
pop
pushf
aas
adc
movl
dec
inc
gs
push
mov
sub
push
mov
mov
movsb
jns
lds
pop
ja
cmp
outsl
xor
fisttps
inc
sub
divl
out
or
mov
adc
xor
std
mov
ljmp
push
adc
sbb
pop
idiv
dec
mov
in
mov
in
add
adc
add
cmp
outsl
jmp
pop
jbe
add
int
xor
mov
sub
std
inc
loope
lcall
out
divb
dec
dec
adc
popa
mov
xchg
mov
sti
dec
inc
scas
xor
in
sub
clc
repnz
ljmp
andb
shlb
in
cld
lcall
mov
xor
adc
les
ss
mov
pop
and
jg
rcrl
inc
negb
add
out
jl
dec
or
sahf
inc
mov
cld
lret
outsb
adc
in
daa
aaa
adc
jae
mov
outsb
inc
lods
lods
ja
popf
rorl
je
xchg
popa
mov
in
mov
cmpsl
aaa
dec
adc
xor
in
data16
push
pop
xchg
fwait
xchg
dec
cmp
pop
aam
dec
leave
fcomip
xor
lcall
jne
iret
adc
ds
xchg
sti
or
xor
shrb
mov
jp
lea
pop
hlt
js
mov
fisubl
and
mov
and
sbb
adc
int3
popa
mov
dec
cmp
lods
int3
dec
jmp
insb
inc
xchg
insb
mov
cmp
ds
cs
cli
shrl
xchg
out
push
mov
jne
imul
ret
adc
lahf
ret
add
mov
arpl
pusha
repz
cmpsb
jb
outsl
adc
repnz
or
mov
pop
inc
sbb
inc
cli
jg
data16
xchg
neg
cmpsl
jne
sahf
pop
fstps
xchg
sti
inc
xor
cmp
shl
scas
push
and
push
inc
cmp
test
fildl
sbb
arpl
fst
mov
arpl
into
jg
pop
insl
add
das
adc
lods
ret
push
cmpsb
fimull
mov
xchg
sbb
fwait
jo
shrb
jne
cmp
mov
movsb
mov
rcr
negb
dec
pop
out
addr16
lea
xor
add
xchg
enter
scas
push
add
fwait
lahf
or
lret
lea
adc
pop
xchg
inc
ljmp
pop
sahf
xchg
mov
mov
sub
push
or
scas
rcrb
xor
add
loope
inc
cmc
addl
or
sub
mov
out
jge
rcrl
orl
notb
mov
iret
mov
and
rcr
sbb
loop
cltd
cmc
outsl
jmp
or
jno
mov
dec
or
popf
adc
sbb
add
lret
mov
movl
pop
xchg
stc
in
jge
jmp
scas
inc
sti
clc
cwtl
cmpsl
xrelease
sub
or
in
xor
movsb
imul
in
iret
movsb
jno
sub
mov
ret
dec
nop
pop
test
jb
jecxz
mov
jecxz
pop
mov
inc
xchg
lods
sbb
cmp
inc
loop
nop
add
je
fstpl
push
pop
loop
or
sbb
push
inc
inc
cmp
add
mov
cs
aad
and
out
sbb
dec
out
push
sub
xchg
mov
and
and
dec
out
add
roll
jbe
out
insl
jp
mov
xchg
pushf
imul
mov
cmpsb
arpl
out
stos
ret
adc
mov
aam
or
std
cld
insb
adcb
bound
mov
cmp
loopne
cli
out
fwait
lods
mov
and
sub
rep
xor
cmpsb
cli
into
hlt
add
lock
push
lods
dec
rorl
into
cmc
incb
out
sahf
inc
mov
jnp
sub
mov
subl
sub
cmp
lods
fdivl
cmp
xor
mov
pushl
ljmp
cmp
lcall
sub
dec
out
mov
xor
add
pusha
in
imul
repnz
mov
outsl
bound
cmpsb
hlt
cmpsl
fistpll
jmp
insb
mov
in
inc
xchg
sub
pop
bound
cmp
pop
cmp
ret
lods
dec
xlat
test
and
out
iret
sub
ja
cmpsl
mov
adc
push
or
popf
xor
dec
sub
ficomps
imul
sbb
imul
mov
popl
mov
pop
sub
rorl
gs
mov
cli
xchg
std
and
adc
fsubrs
cmpsb
mov
and
xchg
xor
push
pop
mov
add
sbb
mov
in
mov
mov
dec
popf
scas
mov
daa
push
dec
sub
push
mov
andl
sub
fstpl
or
mov
adc
mov
lods
leave
lods
xor
jg
dec
arpl
and
int3
cltd
jle
iret
lea
xor
mov
fcomp
mov
lcall
ss
addr16
dec
movsl
cmc
inc
push
leave
jns
push
in
sbb
sti
pop
push
pusha
push
gs
mov
pop
rcl
sub
add
push
ss
sbb
add
sub
jge
aam
push
repz
mov
jo
fistpl
or
loopne
mov
scas
xor
sub
enter
and
pushf
sub
cltd
std
popa
es
nop
push
add
sahf
fs
fsts
add
sbbl
add
je
jb
dec
mov
rcll
cmpsb
push
jne
xchg
mov
cmpsb
lahf
sbb
mov
test
cld
stos
movsb
dec
xlat
mov
jo,pn
jbe
inc
xor
mov
sarb
addr16
pop
cmp
sahf
popa
dec
inc
pop
xchg
fs
add
xchg
mov
dec
adc
mov
push
jg
stos
loop
or
mov
and
hlt
popf
pop
dec
dec
scas
lcall
jge
or
adc
fsubrp
inc
add
or
mov
mov
sarb
mov
jg
jns
aaa
cmpsb
pop
fimuls
les
and
push
jecxz
add
sub
dec
inc
sbbl
mulb
sub
jns
push
stos
xor
jne
xchg
sub
dec
outsb
dec
xchg
pop
adc
hlt
mov
scas
add
dec
mov
addr16
add
lods
js
clc
cmp
mov
mov
es
icebp
pop
dec
mov
push
xlat
fwait
in
or
lahf
jg
das
sarb
out
jbe
and
pop
test
add
bound
jae
ret
mov
cmp
ffreep
or
xor
xchg
pop
aad
push
in
ret
movsl
out
or
sahf
lahf
mov
pushf
cmp
sub
dec
push
push
xchg
aaa
pop
in
in
movsb
loop
in
arpl
xor
addb
sub
jb
push
outsb
push
insb
imul
lahf
pop
outsl
mov
cmp
cmp
jmp
cld
and
jae
jno
je
stc
mov
mov
test
rcll
or
push
pop
movsl
add
int3
or
lods
add
adc
ja
push
push
mov
in
xchg
sti
and
in
xor
rolb
insb
mov
movsl
jmp
add
aaa
hlt
cltd
xlat
mov
mov
loop
sti
movsl
xchg
jo
idivb
loop
decl
pop
push
int
stos
pop
or
cmp
movsl
and
mov
inc
xor
push
out
adc
ret
jbe
imul
sbb
dec
jnp
popf
test
lret
or
shll
pop
push
jl
daa
ret
outsb
hlt
popf
mov
mov
mov
into
scas
jne
rolb
loope
xlat
ret
in
xchg
stc
sbb
pushf
sbb
scas
es
hlt
xorl
xchg
aad
inc
loopne
inc
add
pop
mov
and
cmp
xchg
mov
push
jnp
out
dec
aam
mov
les
popa
dec
adc
push
fdivrs
aas
jb
cli
fldcw
into
sub
xlat
xchg
out
pop
jmp
stc
cmp
out
popl
xchg
js,pt
cmpsb
movsb
xchg
dec
dec
pop
mov
cs
jecxz
pop
loop
mov
lea
lock
es
aad
push
jb
aad
loope
push
jns
jl
loope
add
dec
xor
jns
add
movsb
mov
mov
pop
sahf
loope
cmp
aas
insl
sub
sub
test
dec
mov
or
rorl
mov
pcmpgtd
ja
pop
mov
sbb
pop
xchg
and
mov
fmuls
jbe
xchg
test
mov
subl
xor
and
mov
or
inc
mov
xor
add
jnp
push
iret
mov
pushf
add
hlt
sub
sub
jb
mov
jle
mov
xchg
push
xor
repnz
sub
subl
jg
mov
pop
mov
leave
push
add
and
stc
ja
pop
mov
adc
imul
mov
mov
pop
cmp
pop
nop
sub
call
outsb
loope
pop
sbb
sbb
mov
xor
push
jns
fs
lahf
hlt
jne
out
cmp
mov
lret
lods
mov
sti
pop
rclb
inc
mov
mov
mov
sbb
cmp
xor
dec
mov
call
pop
sbb
sub
hlt
arpl
in
adc
jmp
sbb
cmp
mov
ret
add
sub
xchg
loopne
push
cmp
xchg
inc
loope
xor
dec
loop
std
sub
push
xor
fldenv
cmp
rclb
incb
mov
mov
cld
aad
add
sti
or
cmp
mov
add
xlat
into
mov
sbb
mov
inc
pop
cli
add
js
dec
out
dec
xchg
dec
std
jle
sbb
mov
in
push
mov
jbe
nop
pusha
test
xor
iret
dec
adc
dec
imul
rorb
std
pop
jmp
ds
cltd
mov
ljmp
dec
dec
dec
xor
mov
xor
hlt
pop
fs
movlps
rcrl
test
xor
add
mov
pushl
aaa
in
lret
testl
in
cmp
bound
and
int3
shrl
mov
repnz
mov
cmpsb
inc
cmp
out
cmpb
lcall
adc
fcomip
mov
je
ja
into
mov
mov
add
xor
jmp
xchg
xchg
sbb
jmp
ljmp
push
cmpsb
adc
sub
push
lods
xor
push
out
cld
mul
mov
loope
popa
repz
push
shlb
pop
adcb
cmp
jge
sbb
rclb
adc
pop
inc
pop
add
xor
mov
lahf
out
mov
es
fwait
mov
or
mov
or
jmp
and
lret
ds
lods
das
mov
pushf
jo
loop
cmp
mov
push
in
add
mov
loopne
cmp
rorb
or
imul
mov
bnd
mov
pop
cmpsl
mov
and
dec
pop
iret
jae
aaa
pop
ficomps
data16
sahf
pop
pop
insl
xchg
pop
mov
popa
pop
cmp
push
inc
mov
push
stc
imul
hlt
xorl
inc
rcll
mov
int3
mov
mov
pop
pop
das
fdivp
add
test
jb
pop
fmull
mov
cmp
call
cmp
inc
test
or
fcmovnb
push
cmp
xchg
xchg
mov
jg
xchg
cmc
inc
and
mov
js
addr16
test
or
fistpll
mov
push
cmp
in
ljmp
shl
or
cmpsb
std
fisubl
pop
or
in
mov
pusha
cmp
add
mov
mov
fisubrs
mov
push
sub
push
sbb
pop
inc
sbb
jmp
loopne
jge
andl
bound
lods
inc
repnz
cmp
ja
jnp
cwtl
sub
test
sbb
sbb
ret
push
add
mov
sbb
sub
orb
xchg
std
mov
jmp
jecxz
jp
mov
add
dec
stc
dec
inc
ss
mov
je
mov
jl
jle
and
cs
lea
or
mov
shr
mov
push
mov
push
mov
int3
lock
stos
clc
and
adc
ds
sbbl
push
scas
mov
movsb
jg
sbb
je
fists
mov
aam
sub
test
mov
call
cld
lods
out
mov
mov
add
pop
push
cmpsb
mov
cltd
or
mov
lret
int3
push
flds
jbe
fsubr
ds
cli
inc
scas
dec
inc
cli
jae
outsb
movsb
aad
add
xchg
jmp
xchg
dec
int
sub
jp
pop
mov
ljmp
pusha
int
xchg
add
or
lea
pushf
sbb
jbe
sbb
sbb
inc
mov
jl
adc
xor
bswap
jb
xchg
xchg
xchg
xlat
movsl
ja
mov
call
insb
repz
mov
sub
pop
push
mov
sbb
push
jecxz
dec
fwait
insb
leave
sti
lea
sahf
mov
adc
adc
mov
xsavec
jl
lcall
xor
mov
jne
jbe
lret
sub
sarl
pop
lret
nop
out
xchg
pop
movsl
or
daa
mov
or
mov
cmp
addr16
ja
cwtl
sahf
sub
les
out
sbb
push
mov
jne
imulb
push
push
xor
fsubs
ficompl
mov
ds
std
inc
loopne
ficoml
insb
add
and
xlat
mov
mov
dec
add
arpl
dec
call
popa
std
insl
stos
inc
cmc
repnz
jb
pusha
push
sub
mov
arpl
add
xor
dec
test
out
lahf
scas
mov
in
mov
and
adc
mov
loope
jno
loop
push
xchg
xchg
bound
out
in
in
adc
sbb
dec
int3
mov
in
fsubrl
inc
in
or
push
sub
repz
iret
mov
adc
leave
movsb
testl
xlat
mov
fwait
jmp
mov
push
pop
test
scas
mov
dec
xchg
in
fnstenv
lret
dec
mov
data16
push
xchg
bound
adc
imul
and
aas
sub
xchg
jle
dec
sbb
shrl
in
push
mov
dec
sbb
out
js
push
mov
pusha
xor
out
cmp
arpl
add
in
inc
cld
and
adc
jae
cltd
sti
mov
dec
lcall
inc
and
and
adc
and
repz
mov
mov
hlt
jge
fnstenv
dec
hlt
inc
dec
push
gs
jns
xchg
jns
mov
dec
jno
inc
mov
adc
push
out
pop
pop
cmp
out
and
lcall
add
shll
dec
std
push
sbb
pop
sub
inc
lcall
repz
sbb
dec
sbb
scas
fidivs
mov
inc
push
inc
gs
push
shlb
lods
enter
fldenv
adcl
lods
inc
mov
mov
shlb
xor
jecxz
and
cmp
mov
cwtl
push
dec
adc
xchg
push
push
inc
gs
aam
or
or
jns
xchg
xchg
loop
jo
cmc
xchg
cmp
sub
clc
inc
jb
mov
dec
push
mov
push
pop
mov
xchg
jb
jg
xchg
addr16
jmp
mov
rorb
std
call
jp
addw
ret
stc
adc
xchg
push
arpl
add
into
std
int3
adc
xchg
leave
hlt
enter
xchg
cltd
lcall
std
jle
xor
pop
lahf
ja
rolb
push
ljmp
xrelease
fcomps
lret
mov
xchg
jle
movsb
mov
dec
int3
cmp
div
sub
shl
cmp
cmp
xchg
aas
lahf
xchg
cmc
and
test
sti
or
fisttpll
add
inc
loop
ret
add
xchg
cmp
and
cmp
jbe
mov
push
mov
or
data16
push
dec
dec
xchg
imul
dec
pop
cmp
ror
pop
xchg
jo
aaa
repnz
mov
adc
inc
jae
aas
pop
in
lret
repnz
fsubrp
xor
push
cwtl
stos
push
clc
addb
jbe
jge
popf
aam
iret
jmp
sarl
sbb
dec
lcall
pop
sbb
inc
mov
inc
loop
sub
mov
ss
insb
cmpsb
movsb
and
js
aas
je
jbe
jns
or
xor
cmpl
adcb
dec
dec
hlt
inc
lret
mov
dec
icebp
add
xor
inc
sub
nop
or
xchg
dec
push
and
or
imulb
mov
xor
pop
jl
or
mov
lret
push
divb
sub
pop
lahf
int
inc
pop
mov
imul
or
mov
sahf
lods
outsb
adc
test
pop
bound
fnsave
inc
add
mov
gs
loopne
or
insl
jecxz
xchg
outsl
add
int
push
mov
xor
jmp
jno
cltd
jns
cmpsb
adc
data16
in
lods
sub
add
add
insl
insb
or
out
scas
insb
adc
clc
pop
add
adc
es
test
scas
dec
or
daa
inc
cmp
jne
jae
mov
or
dec
mov
pop
stc
mov
fists
push
into
ret
inc
xchg
push
mov
lcall
loopne
mov
call
pop
adc
es
scas
imul
inc
ret
mov
adc
cli
pop
loopne
cmc
sbb
test
lods
mov
in
mov
leave
aaa
inc
aaa
xchg
inc
xor
sahf
xchg
aas
pop
or
test
xchg
dec
push
lds
mov
cltd
cmpsl
mov
sbb
push
push
push
or
xor
out
testl
cmp
xchg
and
cmpsl
pop
sub
mov
cmpsb
sub
xlat
sub
and
rcrb
fnstsw
xchg
pop
es
add
dec
cmp
xchg
orb
jno
lods
or
adc
mov
sar
mulb
mov
fidivs
mov
pop
mov
aas
pop
add
inc
push
call
or
push
es
fistps
xlat
push
enter
push
jne
adc
inc
mov
stc
cmpsb
push
jmp
out
jns
scas
inc
or
pop
push
insl
push
push
or
pop
mov
push
push
ds
outsb
push
mov
daa
scas
inc
mov
aad
les
pop
sub
cmpsl
fisttpl
ret
test
pop
ror
mov
aaa
in
inc
inc
xor
lea
ss
adc
mov
jmp
pop
dec
ljmp
rcll
jb
push
enter
push
in
xchg
and
hlt
pop
in
dec
or
data16
xorb
ja
or
adc
push
les
clc
out
xor
movsb
or
mov
stc
fstpt
or
adc
jnp
cmp
adc
cs
jae
stos
inc
mov
mov
rolb
add
aam
mov
mov
push
cmp
sbb
mov
test
adcl
int
push
testb
lds
ja
stos
stos
cld
sub
pop
sbbb
add
add
xchg
imul
shr
jbe
shl
pop
lods
rclb
iret
in
mov
lsl
xor
pop
add
dec
cli
lods
ja
mov
paddusb
imul
pusha
std
cs
and
jnp
adc
popa
xor
jl
lods
fcompl
mov
ds
shlb
xchg
fsubp
inc
scas
xor
adc
ja
add
out
scas
mov
inc
or
jp
mov
mov
mov
mov
cmp
mov
notl
jne
push
daa
ror
not
push
xchg
cli
push
push
pop
mov
or
lret
jo
fmull
xchg
push
xchg
jo
jbe
cmp
out
and
inc
mov
pop
adc
ja
lds
pop
jecxz
fsubs
push
les
add
aas
sub
icebp
adc
fcomip
test
cmpsb
or
clc
mov
filds
aam
sti
xor
jns
pop
add
and
testb
in
pop
mov
testb
cwtl
mov
push
cltd
in
jne
repz
mov
push
jg
cmp
test
mov
outsb
push
xor
test
call
push
mov
jmp
jo
pop
jl
test
push
or
push
iret
mov
and
mov
push
push
popf
mov
xchg
testl
fwait
xor
mov
mov
mov
xchg
and
dec
push
mov
inc
cmp
pop
imul
insl
movsb
stos
out
pop
or
cs
iret
lods
mov
add
jno
push
lret
sbb
xchg
aad
shrl
outsl
hlt
dec
adc
or
xor
jae
std
or
mov
arpl
cmp
adc
addb
movsb
inc
add
jg
and
or
dec
sub
iret
movsl
popa
xchg
popl
add
test
jno
out
sub
mov
mov
dec
push
rcrl
push
cmc
xor
mov
cs
sar
scas
or
arpl
sbb
into
sbb
daa
clc
fsubs
mov
xor
repz
test
push
inc
sahf
popa
js
cmpsl
mov
dec
jns
cwtl
clc
and
sbb
and
test
test
fnstenv
cmovb
jecxz
scas
loopne
gs
pop
cmp
or
xlat
repnz
addr16
fimull
jmp
push
movsb
mov
repnz
inc
inc
setnp
sbb
add
not
outsb
stos
testl
filds
addr16
mov
test
movsl
inc
iret
and
mov
lret
xor
mov
lods
shr
or
sbb
pop
fimull
lds
pop
jg
mov
add
or
les
xchg
mov
xchg
jae
mov
test
stos
mov
push
xor
iret
or
iret
dec
fldt
ret
arpl
inc
and
dec
call
repnz
psubw
dec
xchg
inc
shll
pop
and
jns
cmp
ljmp
and
pop
fwait
dec
aam
sti
cmpsl
xor
testl
lods
shrl
mov
test
dec
fmuls
pop
add
xchg
sbb
adc
fidivrs
dec
cmc
mov
ss
xchg
into
mov
orl
cs
jnp
mov
sahf
in
mov
rolb
push
sbb
into
popa
and
push
xchg
scas
push
bound
clc
xchg
mov
arpl
and
dec
rep
cmp
jne
loop
out
jmp
cmp
insl
outsl
push
adc
xor
xchg
hlt
adc
paddusb
xchg
xchg
push
dec
and
jl
call
movl
xor
pop
loopne
sbbb
mov
mov
sbb
cltd
sub
imull
adc
sbb
ret
aad
in
pop
pop
lcall
mov
out
xor
aam
inc
push
xchg
sbbb
stc
int
jae
mov
std
jnp
sbb
shrb
lock
minps
inc
scas
mov
cs
setno
xor
outsl
add
sti
mov
push
xor
loop
adc
test
sahf
dec
repz
inc
add
push
test
mov
cmp
mov
add
sub
stos
mov
fadds
jecxz
call
mov
inc
in
jb
cmpsb
pop
xor
lods
daa
iret
push
dec
sbb
lret
les
push
push
mov
lods
cmp
jp
leave
jne
fdivrl
nop
cmp
loop
inc
sbb
inc
cmc
cmp
jo
jmp
es
out
arpl
sbb
loop
cli
mov
sub
pop
xorl
adc
cmp
sbb
testb
ja
and
xchg
jecxz
lea
mov
pusha
ret
adc
or
test
cmpl
add
fimuls
adc
xchg
sti
xchg
mov
cmp
pop
adcl
sub
push
fwait
mov
xchg
popf
sub
aam
pop
add
notb
lret
ss
movsl
call
dec
imul
repnz
js
push
jmp
jno
sbb
popa
cmpsl
out
jecxz
sti
and
adc
pop
test
wbinvd
fadds
cmpsl
push
adc
mov
xlat
inc
lret
outsb
aam
cmp
out
adc
lock
jmp
push
popa
pop
push
outsb
push
mov
and
push
lock
jno
int
popa
and
leave
jnp
jbe
arpl
test
push
dec
js
out
pop
and
out
add
repz
add
es
cmp
xchg
pop
test
add
cmp
in
jecxz
sbb
inc
repnz
aaa
mov
pop
les
aaa
pop
pop
stos
sti
push
enter
jp,pn
call
cld
int3
mov
xor
jns
cld
js
mov
inc
sub
pushw
mov
sub
dec
mov
sub
sbb
mov
mov
insb
imul
cwtl
xchg
inc
cmp
mov
cltd
call
jns
push
popl
xor
push
in
arpl
sbbb
mov
xchg
int
fisttpl
fucomip
cmp
add
cli
or
add
pusha
fcoms
ficomps
fimull
push
cwtl
loope
pop
mov
push
add
imul
sbb
insb
pop
jmp
sbb
lock
sti
jg
ds
push
pop
les
out
sbb
clc
das
adc
fimull
mov
iret
dec
xchg
sbb
cmp
jecxz
lea
mov
and
cmp
add
mov
ficompl
and
pushf
loope
adc
leave
push
xchg
in
mov
sti
xchg
lods
pop
addr16
clc
call
jmp
adc
pushf
adc
cmp
andb
or
inc
lret
sub
pop
mov
jp
cmp
mov
lds
jle
xchg
aad
fildl
jle
std
pminub
add
divl
shrl
mov
pop
pop
push
stc
adcb
mov
add
stos
lahf
inc
xor
dec
pop
jmp
sahf
pop
cmpsb
adc
mov
add
or
add
outsb
faddp
pusha
popa
in
and
scas
fwait
dec
sarb
jns
mov
mov
shrb
cltd
insb
insb
pop
cld
inc
sbbl
and
pop
jge
fs
cs
andb
pusha
mov
in
pushf
sahf
dec
hlt
inc
js
jmp
push
xchg
dec
cmpsb
pop
push
les
decb
ljmp
push
gs
mov
into
les
dec
push
adc
loopne
lret
inc
rorb
and
push
cs
xorl
out
and
out
rorl
jp
xchg
fsubrl
and
inc
mov
mov
dec
inc
in
xchg
push
loope
fcom
add
lea
pop
in
dec
adc
jne
pop
mov
sbb
pop
fldt
inc
fldenv
lahf
shlb
jmp
jns
ss
pop
adc
hlt
mov
push
imul
test
dec
sbb
adc
mov
js
jl
pusha
test
iret
pop
fimull
cmp
test
xor
aas
sbb
lds
mov
and
ja
or
jbe
insl
adcl
in
mov
pop
push
ljmp
sbb
adc
fwait
xor
jle
sub
pop
sub
sar
mov
inc
outsl
mov
pop
rclb
lds
push
cmp
cmp
sbb
out
call
mov
mul
add
loop
rcr
js
sbb
jl
fistps
cmp
push
clc
xlat
lret
jecxz
fs
cmp
jmp
nop
sbbl
xchg
repnz
in
adc
jne
mov
fsubs
pop
xchg
rep
cmp
and
das
cmpsl
xor
aad
pop
je
and
dec
stos
cmpsl
repnz
ret
sbb
or
sbb
decb
mov
and
test
inc
aas
ja
sub
mov
mov
iret
jmp
mov
mov
cli
faddl
and
ret
or
jae
xor
add
sub
and
test
icebp
orl
or
cmp
outsb
mov
sbb
dec
leave
push
mov
es
cs
push
das
sti
pop
shrl
mov
js
cltd
push
fisttpl
sub
test
jno
inc
adc
sbb
fisttpll
jmp
divb
test
in
jmp
lahf
add
repz
or
push
cmpsl
adc
fldl
dec
fsubs
and
repz
gs
pusha
test
loope
aad
pop
or
pop
mov
sti
mov
cli
in
xor
adc
and
pop
sbb
fcmovu
xchg
ja
clc
hlt
cltd
subb
or
mov
xchg
test
push
adc
sbb
outsl
movsl
add
ds
jo
jg
xchg
sub
push
and
in
push
lea
mov
and
pusha
inc
aaa
jl
rcr
outsb
outsb
pop
rcr
mov
xor
scas
cmp
scas
adc
mov
ljmp
leave
mov
pop
enter
inc
mov
xchg
pop
fst
sub
mov
xor
xor
stos
insl
xlat
add
out
dec
iret
dec
fbld
xchg
frstor
mov
add
insl
mov
stos
mov
scas
out
mov
cmp
hlt
lods
pusha
lea
and
dec
data16
divb
test
sub
sub
loopne
mov
jle
dec
push
lea
nop
push
in
fisubrl
aaa
out
dec
sub
std
dec
mov
rep
push
dec
push
mov
sub
inc
out
mov
fisubs
dec
inc
fwait
pop
cltd
or
stos
stc
out
cmp
mov
data16
cmp
push
or
push
repnz
fidivrs
stos
int3
mov
arpl
je
test
mov
push
and
cld
sub
stos
push
jecxz
in
jo
outsl
jp
ret
sbb
js
xor
inc
push
mov
popa
inc
and
mov
inc
pop
pushf
and
dec
and
dec
xor
clc
push
inc
mov
insb
jns
push
js
dec
xchg
lcall
lcall
cmp
loop
sub
imul
mov
cwtl
mov
or
cmp
mov
imul
movmskps
das
dec
into
pop
test
imull
mov
and
in
adc
pop
mov
dec
popf
int
dec
xchg
add
or
jns
daa
test
leave
and
mov
inc
popf
mov
and
push
imul
mov
sbb
add
add
push
sahf
and
xor
sti
rcrl
jge
testl
inc
lds
or
ds
cmp
rolb
mov
ret
xchg
sarl
fidivrs
fmull
push
pushf
or
outsl
jmp
fwait
gs
jnp
out
push
out
loop
out
nop
mov
bound
lahf
cli
xor
mov
outsb
mov
and
cmp
or
mov
std
xor
test
test
pop
sub
fcmovb
imul
mov
popf
cmp
sbb
and
xor
mov
repz
dec
and
sbb
push
mov
sub
sub
fisttps
popf
cmpsl
ds
dec
shll
inc
sub
dec
push
jp
xor
xor
test
jb
and
stc
sub
cld
jne
pop
shlb
sarb
push
push
into
jbe
adc
mov
pop
out
arpl
xchg
jno
sbb
mov
loop
jp
sahf
dec
dec
push
xchg
fidivrs
addr16
jmp
fcomi
pop
andnps
lcall
jle
inc
inc
cmpsb
mov
xor
adc
and
jno
repz
ja
std
dec
mov
aad
cmp
dec
ljmp
cmc
aas
inc
pop
jl
arpl
or
in
adc
in
scas
pusha
dec
push
daa
mov
arpl
pop
and
stos
icebp
out
std
int3
xchg
scas
push
mov
in
push
sub
data16
test
out
aas
data16
loopne
aam
pop
or
stc
push
add
dec
scas
mov
push
mov
cmc
cmp
pop
mov
inc
lret
int
mov
mov
test
loop
and
pop
xor
repnz
movsl
push
mov
fs
mov
ss
out
push
and
fadds
dec
cmc
xlat
mov
aaa
add
daa
call
fcoml
xchg
or
adc
movsb
mov
pop
xor
mov
xchg
jg
scas
and
jmp
fcompl
popf
hlt
insb
std
dec
in
mov
rcll
fnstsw
rcrl
popa
push
and
pop
movsl
and
cli
inc
arpl
ret
in
and
in
aad
mov
inc
dec
cmp
aad
xchg
adc
ljmp
xchg
decb
lret
adcb
push
dec
mov
lret
cmpsb
or
sbb
loop
std
pop
shr
mov
push
push
fdivs
stc
cmp
push
scas
cld
xor
mov
jmp
aaa
loop
push
mov
fisttps
sub
sahf
test
xchg
cs
dec
inc
xchg
ja
cmp
dec
push
mov
adc
ja
push
cmpb
jl
ljmp
and
add
mov
out
lods
divl
or
lret
das
or
sub
ss
das
jbe
daa
into
cs
push
mov
pop
push
sub
sub
pop
push
outsl
push
jg
lret
cmp
cmp
jb
popf
push
repz
fildll
lcall
add
xor
sub
test
mov
mov
outsl
ds
dec
push
pop
iret
or
mov
jp
scas
sbb
mov
adc
xchg
add
pop
addr16
inc
inc
mov
jno
lret
data16
mov
push
rcll
cmp
pop
mov
xor
sub
iret
add
pop
clc
mov
sbb
leave
shll
xchg
scas
sbb
cltd
mov
nop
pusha
les
inc
push
push
inc
imul
nop
es
sbb
icebp
inc
push
inc
movsb
inc
xlat
fmul
sub
sarb
and
enter
movsl
shlb
icebp
adc
inc
in
xor
gs
or
dec
testl
sbb
mov
xchg
cwtl
lahf
push
inc
xor
mov
pop
lahf
mov
pop
ds
dec
sub
cmpsb
aas
inc
and
iret
sub
push
push
adcb
aaa
add
bound
fcomip
movb
cmp
inc
pop
xchg
nop
outsb
sbb
jl
pop
imul
or
mov
fdivl
cmp
fistps
ret
fwait
mov
hlt
jmp
call
and
mov
cmovle
ss
cmp
loop
movups
movsl
and
frstor
ds
mov
shlb
push
dec
adc
test
aad
dec
mov
lea
andl
popf
outsb
and
lret
xchg
cmpsl
and
idivb
adc
popf
popa
in
pop
lret
pop
mov
jecxz
imul
pop
dec
xor
repnz
xor
mov
fsin
mov
loope
dec
cs
scas
adc
or
xlat
adc
jno
xor
jl
xchg
jle
xlat
arpl
pop
addb
or
and
inc
and
push
inc
sbb
pop
cmpsb
jo
int3
pop
stos
add
mov
xchg
int
sbb
xchg
mov
mov
les
mov
mov
adc
jg
mov
outsb
mov
ds
push
imul
mov
jo
mov
in
inc
dec
dec
ret
push
repz
cmpsb
cld
leave
add
adc
mov
mov
insl
mov
adc
push
mov
movsb
arpl
jp
sub
or
je
mov
xchg
push
inc
jo
push
jne
or
fstps
cli
frstor
mov
fmuls
jp
aas
push
and
add
lock
pusha
cwtl
mov
mov
mov
in
popa
lods
ret
lods
fiadds
xor
inc
push
outsb
xchg
leave
loope
cs
in
fs
and
outsb
or
sbb
loopne
add
gs
shll
dec
add
fisttpll
sbb
or
jle
je
cmpsl
mov
adc
cmpsb
lret
sbb
jo
cmp
mov
xchg
pop
mov
mov
dec
je
les
sbb
aad
js
pop
dec
jno
cmp
scas
out
dec
iret
sahf
jb
cmp
loope
out
imul
mov
dec
ficompl
sbb
imul
jg
mov
cmpsb
out
jl
arpl
xor
loop
arpl
loopne
fs
xor
push
clc
mov
dec
jnp
xlat
mov
dec
sub
cmpsl
sarb
lcall
cmpsl
jb
hlt
clc
xchg
lods
xor
fdivrs
sbb
sub
cmp
cmp
jl
addr16
add
out
push
aad
rcrl
mov
mov
sbb
or
sahf
filds
mov
ss
jo
in
xor
jns
or
cmp
adc
mov
pusha
ljmp
sti
rorb
push
sub
adc
pop
pushl
cmp
out
dec
add
fwait
cli
imul
pop
cs
int
push
pop
insl
jb
jno
jmp
cmp
sahf
inc
mov
fs
scas
arpl
aaa
jae
repz
loop
xor
in
hlt
mov
pop
push
imul
adcl
pusha
dec
shlb
nop
cmp
xlat
xchg
rcll
sub
sub
inc
mov
adc
incb
or
sub
and
stos
pop
mov
xchg
iret
test
cld
jmp
pusha
ja
int3
es
push
push
das
mov
aaa
inc
cmpsb
cmc
in
mov
ficoms
dec
mov
ja
pop
cltd
cmpsl
pop
insb
mov
leave
lock
lods
mov
add
hlt
movsb
repz
addl
mov
dec
lcall
shrb
movsl
fcomp
ja
jmp
imul
fbld
cwtl
pop
jno
cmpsl
push
xchg
adcb
jle
xchg
and
jle
ja
ja
sti
jecxz
push
pop
loope,pn
jl
iret
add
insb
sub
aam
aam
and
mov
lcall
adc
ds
fidivrl
mov
mov
xchg
aam
sbb
insl
cmp
pop
mov
pop
jmp
ds
outsl
test
icebp
mov
stos
fnstcw
mov
shlb
lcall
icebp
inc
or
scas
nop
and
push
jbe
adc
cmpsl
dec
add
pop
popf
and
aam
xor
inc
inc
sbb
push
add
jbe
dec
hlt
mov
push
dec
mov
pop
xchg
mov
stos
fs
inc
jb
xchg
push
sbbl
bnd
sbbl
rorl
fnstsw
pop
adc
out
xlat
fnsave
xchg
xchg
xchg
push
or
mov
and
movsb
lahf
add
push
sbb
xchg
mov
inc
mov
popf
pop
icebp
cmpsb
adc
add
xchg
mov
adc
cmp
or
pusha
sbb
sub
push
pop
fs
sub
xor
and
je
aad
stos
insl
clc
adcl
frstor
outsl
aas
or
ficomps
ja
xchg
add
xchg
adc
pop
add
ret
pop
inc
rcl
mov
mov
pop
dec
or
outsb
adc
mov
xchg
out
pop
jae
out
into
push
mov
mov
xor
dec
add
aad
xchg
imul
mov
lds
loope
xor
xchg
outsb
pop
jne
mov
les
imul
jae
xlat
sub
sbb
popa
shll
inc
in
rcrl
push
xchg
sub
inc
jo
mov
stc
pusha
mov
fwait
push
xchg
mov
mov
cmp
pusha
sarb
mov
lcall
divl
loop
jmp
pusha
jbe
mov
mov
sarl
pop
xchg
push
outsb
mov
lret
and
mov
pop
push
movsl
sbb
test
loop
or
xor
jns
nop
sub
jns
and
movsb
rcll
mov
pushf
and
dec
sbb
shlb
add
xchg
ror
scas
leave
jb
push
loop
xor
pop
dec
jnp
iret
mov
mov
sub
nop
inc
imul
adc
xor
push
inc
mov
adc
pop
popf
push
jnp
repz
add
jnp
adc
lock
inc
aas
insl
cmpsl
xlat
cmc
sbbl
jp
repz
xor
mov
xchg
sahf
inc
out
mov
sbb
pop
out
iret
push
pop
inc
mov
cmp
sbb
mov
rorl
add
mov
sbbb
or
and
mov
mov
inc
imul
fbstp
xchg
subl
sti
or
mov
pop
mov
jne
sub
xchg
data16
inc
scas
sub
fcmovu
int3
adc
xlat
rolb
push
loope
push
mov
loopne
aad
test
leave
in
cmc
orl
rorb
pop
aas
mov
aaa
adc
and
roll
or
sub
xchg
daa
sarb
daa
dec
push
mov
out
fwait
sarl
ret
cmp
out
out
pop
mov
jbe
mov
push
aam
mov
ljmp
fsubl
test
paddd
sub
call
jae
xor
mov
mov
dec
mov
mov
ljmp
sti
lock
in
mov
and
xchg
ja
mov
inc
test
push
call
add
jg
in
dec
call
jp
popf
aad
data16
jp
mov
inc
dec
or
insb
outsl
sub
cli
and
sbb
iret
add
mov
adc
adc
mov
or
out
or
cmc
xor
jo
shl
xlat
lret
mov
jno
test
sarl
dec
fnstsw
xchg
cmp
dec
sbbl
popa
int3
cmp
je
xchg
jo
sbb
push
sbbb
pop
mov
mov
push
stc
icebp
pop
ljmp
or
test
or
jg
xchg
adc
pop
out
lds
imull
movsl
ret
xchg
adc
dec
pushf
shrl
sub
std
jno
pop
mov
jnp
and
lock
lock
sub
pop
add
outsl
addr16
cmp
mov
pusha
push
mov
cmp
out
sti
das
rorb
stc
iret
dec
cmp
push
xor
orb
aam
aad
imul
xor
or
sub
adc
and
fsincos
aam
cmp
pop
leave
pop
cmpsl
mov
fsubp
ficoml
sbb
jne
and
and
and
push
cmpsb
rcr
lods
sub
jp
push
ret
add
jno
mov
aaa
dec
and
push
pop
movhps
dec
xor
rcrb
in
push
cwtl
mov
mov
std
adc
sub
int
outsl
clc
aaa
xchg
pushf
pop
pushl
add
enter
out
out
pop
ss
es
in
loope
in
dec
cs
or
push
in
inc
cmp
mov
push
insb
xchg
rcrl
loop
lret
or
mov
sbb
cmp
pop
mov
negl
in
loope
adc
mov
xchg
je
push
jns
pop
jecxz
loopne
jb
lods
jo
jg
movsb
movsl
inc
cmp
mulb
outsb
jne
cmp
popa
ljmp
leave
je
dec
add
and
cmpsb
jmp
cmp
ficompl
and
sbb
xor
pop
mov
in
lods
add
mov
jp
xchg
bound
hlt
repz
fcmovnbe
pusha
mov
mov
notl
ss
push
inc
adc
inc
test
adc
adc
shlb
cmp
cmp
push
aaa
ss
fwait
das
sbbb
fs
lods
inc
rolb
sbb
jge
add
pushf
mov
fisubl
insl
pop
mov
fsubrs
cs
stc
hlt
ljmp
inc
test
add
sbb
data16
pop
hlt
cmpsl
gs
mov
xchg
sub
aam
or
xor
push
xor
fistpl
into
out
xorb
jmp
sub
mov
push
push
sbb
push
cli
sub
pop
xor
pop
test
xchg
popa
leave
lret
loopne
int
sbb
in
jp
inc
mov
test
push
jns
sbb
push
push
aaa
hlt
push
mov
and
xchg
xchg
and
cmc
sbb
pop
push
pop
loope
idivb
lret
xor
repz
mov
and
fwait
mov
xor
mov
dec
fisubl
mov
xorl
mov
rclb
pop
dec
inc
mov
sub
iret
jae
and
and
pop
adc
push
or
cmp
dec
and
loopne
pop
cmp
lock
sarb
pusha
jmp
lahf
add
outsl
and
fsubp
inc
enter
aas
jne
fs
insb
cwtl
mov
cwtl
sarb
cmpl
xlat
hlt
aas
mov
dec
sub
out
pop
ds
push
push
fdivrs
mov
nop
mov
jbe
shlb
stos
xor
fcomps
call
xchg
ljmp
mov
jae
mov
repnz
shlb
lahf
fistps
xchg
push
xchg
jge
pop
cmpsl
in
clc
mov
or
adc
cmp
dec
pop
in
mov
out
popf
cld
mov
jbe
dec
fwait
add
add
push
stos
and
cmpsb
inc
frstor
stos
hlt
sbb
add
icebp
int
adc
aas
cmp
fwait
dec
cmc
mov
push
popf
pop
insb
ja
push
sarl
icebp
jb
jnp
in
subb
cli
insb
pop
dec
mov
mov
and
out
bound
xor
adc
push
int
out
inc
pop
in
and
inc
addl
mov
mov
movsl
adc
into
mov
mov
add
xor
jmp
mov
cmp
sub
jg
xor
jp
mov
add
mov
cld
inc
sbb
stc
xchg
jno
movsb
jb
xor
mov
out
lods
or
jne
fsubrs
xchg
sub
lods
fcmovnbe
sub
aam
int3
insl
popf
lahf
xor
addr16
dec
lahf
add
mull
mov
ja
in
and
push
sub
mulb
adc
cmovle
jmp
pop
inc
jle
xlat
push
out
test
outsl
fwait
shll
add
test
and
sbb
je
in
lods
negb
insb
push
js
xchg
sbb
shlb
int
sbb
xor
call
pop
cmp
or
adc
and
xchg
lahf
jg
aaa
fdivrs
vxorpd
mul
ja
movd
sub
jbe
mov
dec
add
movsl
push
mull
lods
icebp
xchg
mov
mov
ss
sbb
ffree
xchg
testb
imul
xor
xchg
mov
xchg
jno
arpl
or
mov
xor
scas
mov
pop
mov
loop
jl
xchg
xlat
pop
call
add
mov
adc
or
pop
shl
mov
dec
cmp
push
jp
inc
cmp
fnstcw
xor
or
or
inc
test
mov
imul
push
mov
dec
repnz
xchg
dec
inc
out
cmpsb
push
hlt
mov
dec
mov
push
jmp
ja
jmp
fs
jecxz
xchg
push
pop
rorb
and
xchg
mov
sub
inc
ret
xor
push
inc
fs
and
add
scas
push
fisubrs
lock
pop
pop
pop
or
xchg
add
outsl
cmc
fisubrs
rol
sarl
in
shlb
mov
mov
cli
ds
mov
xlat
sbb
dec
repz
add
lcall
hlt
ret
ss
mov
daa
inc
push
pop
or
xor
test
mov
mov
mov
push
jle
ror
push
jbe
call
jno
xlat
push
ljmp
das
sub
lret
rcrl
jl
push
frstor
fsts
clc
push
lret
add
pop
lahf
inc
pop
add
cltd
ret
lods
mov
aad
shll
or
fs
mov
gs
ret
add
pop
sbb
movsl
jmp
dec
mov
ljmp
add
enter
fcmovb
test
call
aas
scas
out
jge
addb
push
lahf
imul
lahf
push
bound
insb
ljmp
add
fstp
out
pop
popa
adc
ja
mov
dec
push
arpl
inc
daa
clc
dec
mov
icebp
insl
mov
mov
in
insl
addl
jle
out
aas
sub
lret
or
lret
pusha
out
fwait
xchg
out
and
sub
mov
pop
inc
dec
lods
negl
hlt
ret
cmp
sahf
sbb
and
xchg
inc
sub
xor
loope
ss
call
and
sub
mov
ljmp
aas
sub
loope
scas
xchg
insb
cmp
lret
xor
xor
out
scas
test
loop
das
or
sub
jmp
enter
aam
inc
xchg
lods
sahf
outsb
mov
pop
cmp
mov
xchg
sub
shlb
push
add
ret
int
ja
dec
add
pop
cmpsb
iret
fsubrp
pushf
pop
dec
jecxz
scas
jno
jne
cmp
jp
inc
movsl
shll
jp
sub
inc
xchg
popf
sbb
adc
je
and
mov
sub
clc
mov
sbb
sub
ficompl
jl
data16
dec
jle
xchg
adc
sub
lock
subb
jmp
and
inc
iret
call
sbb
cmc
mov
enter
jns
nop
mov
cmp
ret
pop
addr16
jb
cwtl
sub
out
xor
jns
push
pop
mov
syscall
pop
adc
mov
lods
in
adc
shrb
mov
shll
imul
js
ret
fdivs
icebp
cmp
add
mov
or
movsl
pop
addr16
lods
pop
stos
cwtl
pop
jecxz
push
nop
dec
adcl
rcrb
jp
data16
fildl
push
jmp
stc
fidivrs
call
gs
roll
pusha
in
cwtl
pop
dec
push
jmp
inc
xchg
dec
adc
cli
insb
out
dec
popa
imul
fiadds
xchg
icebp
xor
or
popa
add
lods
rorl
movsb
insb
jne
mov
fcmovne
rol
scas
fdivrl
lret
daa
rcrl
sub
popf
sbb
arpl
xchg
arpl
and
test
mov
jb
mov
test
xor
push
mov
sub
inc
sbb
data16
push
adc
mov
xor
cmc
cmp
out
lahf
jns
das
cli
mov
or
sub
xchg
in
repnz
mov
lds
sbb
xor
out
mov
inc
lds
popf
jbe
jns
pop
cmc
mov
lods
add
ja
or
jle
pop
and
clc
jno
mov
pop
fnsave
adc
inc
adcl
testb
xchg
pop
dec
push
xchg
lahf
sbb
mov
push
or
fsubs
mov
and
mov
inc
pop
ret
sarl
xor
ljmp
push
int
xchg
cmp
test
xorl
xchg
shl
cmpsl
pop
sbb
insl
inc
jle
pushf
cmp
pop
movsb
scas
loopne
and
fbstp
aam
lods
adc
push
aas
lods
push
jbe
pop
outsb
into
xchg
xor
loope
into
dec
inc
fdivrp
daa
push
mov
sub
imul
cmpsl
ljmp
notl
add
out
inc
mov
insb
sbb
adc
dec
ljmp
cmp
sub
xor
jle
sbb
mov
es
enter
cld
fldl
test
dec
mov
push
cmp
xor
mov
sub
pusha
pop
cmpsl
iret
adc
clc
clc
fbstp
test
or
fistps
fs
lds
lods
add
stc
in
push
dec
jb
jne
in
and
pop
sub
sub
cs
push
add
movsb
dec
jb
movb
mov
mov
sub
cmp
int
mov
adc
push
mov
inc
fwait
cmp
cmp
pop
push
and
cmp
xlat
jp
mov
stos
pop
cmpsl
popf
stos
sahf
ret
ljmp
in
or
and
xor
dec
mov
aam
jno
pop
lds
pop
repz
popf
clc
sahf
and
mov
shlb
rorb
mov
rorl
lods
sub
mov
mov
and
adcb
lds
mov
adc
xorb
cmpsl
adc
rcl
jb
pushf
cmp
lret
ficomps
adc
mov
stos
jecxz
sub
mov
stos
sbb
pop
xchg
repz
sbb
mov
daa
push
jl
dec
xchg
xorb
mov
jge
js
push
int
scas
push
add
add
add
xchg
ret
jb
pop
jp
es
xchg
xlat
dec
mov
int3
or
mov
or
es
mov
and
rcrb
inc
fimuls
adc
pop
mov
enter
dec
dec
out
mov
sbb
jne
orb
push
divb
test
out
testl
xor
das
sarb
cmp
jns
xchg
lahf
lods
iret
sub
idivb
sub
call
icebp
xchg
dec
sbb
leave
mov
daa
idivb
adc
add
add
inc
arpl
sbb
sbb
push
mov
sbb
lcall
das
mov
stos
test
and
cs
push
pop
add
sub
stc
pop
bound
adc
push
mov
xor
mov
add
test
filds
jge
pop
clc
sub
mull
js
xor
je
iret
add
loope,pn
rorl
cmp
lahf
jp
outsb
lret
ds
mov
test
mov
std
add
sti
loopne
mov
in
test
jmp
add
adc
cmpsb
dec
pop
push
mov
pop
cmpsb
cmp
cmp
xor
inc
fstpt
inc
xchg
vmovdqu
icebp
cmp
adc
loop
lret
dec
mull
pop
jns
adc
xor
add
inc
aas
pop
dec
push
hlt
jecxz
fldt
dec
enter
les
aam
dec
out
aam
jecxz
jb
mov
in
iret
push
and
pusha
add
mov
push
cmp
roll
adc
cmp
or
jnp
outsl
inc
stos
test
cmpl
adc
not
aas
sub
les
pop
mov
cmp
add
mov
inc
dec
xor
mov
cmp
cmp
adc
xchg
sti
int3
in
ficoms
jno
call
pop
xchg
or
jne
add
cmp
jae
sub
dec
adc
add
cmp
sub
sbb
flds
jb
xchg
and
enter
xchg
xchg
repnz
dec
and
mov
or
loop
lret
cmp
mov
addr16
popf
daa
popa
adc
and
lret
pusha
cmpsl
jne
test
and
sbb
aas
jmp
rolb
fldt
jns
jecxz
nop
pop
mov
mov
push
nop
sub
aam
pop
ret
fs
or
add
movsl
pop
roll
sti
push
popa
js
pusha
mov
or
cmp
aad
sbbb
addr16
add
dec
sub
pop
and
int3
jge
test
cld
pop
paddd
popf
movl
adc
xchg
cmp
xchg
arpl
out
jle
insl
mov
xchg
loop
mov
push
fimull
es
in
push
lret
pop
call
notb
cmp
mov
insb
xor
adc
cmovno
sub
in
in
sahf
negb
inc
xchg
in
sub
insb
or
leave
jle
outsl
imul
cli
sub
test
dec
in
iret
ffreep
rol
lea
dec
sbb
mov
addr16
hlt
mov
loopne
mov
or
fistl
int3
mov
pushf
mov
adc
sbb
loop
and
outsl
repnz
rcrl
ret
lmsw
cmp
arpl
or
pop
daa
pop
jge
inc
push
jns
or
add
lret
js
test
cmpsl
adc
jle
push
xor
pop
push
fdivp
outsl
int
add
cmp
push
pop
xchg
xacquire
dec
xlat
jae
mov
subl
and
stos
out
jmp
dec
pop
imul
test
filds
shlb
cmpsl
xchg
sbb
push
sbb
repz
les
sub
shl
jae
xchg
loope
push
mov
stos
enter
outsb
adc
push
cmp
addl
adc
aad
je
jne
rep
xor
data16
std
popf
push
add
ljmp
xchg
shl
jg
je
dec
cmp
rcll
xchg
loope
test
inc
cmp
faddl
fwait
xchg
mov
in
mov
pop
xchg
push
dec
lret
cmp
xchg
or
adc
es
jecxz
dec
inc
lock
loop
imul
and
xchg
push
test
push
stos
ret
outsl
sahf
xor
add
inc
mov
push
jb
stc
fcmovnu
and
push
mov
pusha
xchg
cmpsb
jg
xchg
mov
dec
or
or
inc
xchg
test
xorb
jb
les
out
inc
mov
sub
sub
jns
test
sbb
dec
cmp
fimull
popa
int3
mov
lds
fwait
push
test
lret
movsb
adc
shrb
cmpsb
dec
sub
jb,pn
mov
iret
cmp
imul
movsl
push
cmp
mov
dec
jo
popf
pop
sub
jmp
rcl
mov
jp
pop
or
popf
sbb
xor
sub
add
inc
call
je
push
rcll
add
mov
sub
arpl
inc
sbb
fs
mov
bound
sub
aam
stos
iret
jg
pop
movl
das
mov
dec
cmp
imul
pop
imul
lret
rorb
mov
dec
mov
xchg
ficompl
mov
jmp
lret
mov
int
out
rcrl
push
and
jge
addr16
imul
push
and
insb
and
add
dec
adc
pop
loope,pn
xchg
rorl
mov
or
dec
jecxz
sbb
dec
lahf
push
mov
adc
clc
enter
dec
cltd
lret
cwtl
jg
add
jg
mov
mov
adc
shl
add
mov
and
push
shrl
clc
adc
pushf
data16
cmpsl
mov
test
sahf
out
push
cwtl
out
ds
ja
stos
mov
xor
sub
movsb
or
push
jae
xor
push
lret
xor
ja
rolb
ret
or
mov
xor
inc
repnz
nop
outsl
testb
inc
push
pop
cwtl
das
xchg
test
lods
inc
and
adc
leave
pop
mov
aas
sahf
andl
fdivrs
lea
mov
mov
int3
inc
xchg
out
loopne
jno
stos
daa
popf
popf
test
mov
push
ret
sub
or
xchg
std
insl
add
inc
data16
cmpsb
lret
or
push
sub
in
xlat
insl
iret
outsl
ror
xlat
sbb
hlt
xchg
xor
rolb
fnstsw
inc
mov
mov
or
push
or
aam
and
push
dec
mov
rep
clc
pop
xor
mov
lods
sbb
xor
jae
dec
lock
dec
xchg
xor
or
and
shll
data16
sub
sbb
pop
push
push
test
add
test
jo
sbb
out
cmp
mov
ja
je
mov
dec
and
jp
cmc
insb
stos
push
lea
outsl
fildl
mov
les
scas
jecxz
dec
ss
ret
outsl
and
push
outsb
fidivl
imul
jmp
push
adc
ds
movsl
aas
adc
out
out
iret
lea
mov
or
cli
cmp
xor
push
nop
xor
mov
mov
jmp
icebp
test
es
loop
rcrl
mov
push
dec
jle
js
xchg
mov
inc
jo
stos
arpl
mov
ficoml
addr16
out
sbb
adc
test
fwait
mov
mov
mov
jle
out
jecxz
jno
loop
xchg
je
jmp
aam
xchg
dec
add
pop
aad
stos
fmull
lods
fwait
mov
shll
or
mov
in
pop
test
imul
insl
test
or
cmc
je
or
insb
jb
stc
testb
pop
jae
adc
movsb
rolb
dec
pushf
push
jle
cmp
xor
mov
inc
outsl
das
sub
xchg
les
fucomip
loopne
jmp
pop
mov
aaa
arpl
xchg
xlat
pop
std
dec
imul
daa
je
mull
subl
cmp
stos
test
jns
mov
jge
jl
stos
mov
outsb
inc
insl
test
insb
and
add
mov
xor
insl
idiv
dec
and
arpl
in
mov
in
sub
adc
mov
push
and
rclb
js
mov
scas
shll
lcall
xor
fiaddl
push
cmpsb
cmp
test
arpl
adc
insb
test
js
pop
inc
mov
or
jns
sub
andb
popf
adc
mov
pop
clc
je
xchg
sub
cwtl
sarl
adc
add
test
pushf
pop
sub
imul
fidivrl
xor
inc
cmp
call
insl
push
into
pushf
ljmp
cmp
push
hlt
hlt
std
cmp
pop
ljmp
mov
mov
test
outsl
pusha
es
pop
je
mov
in
dec
mov
pop
insb
xchg
mov
pop
movsb
jbe
rcrb
cmp
jl
jmp
jo
or
pop
push
loop
in
int
sbb
dec
inc
inc
jmp
lods
js
adc
out
mov
call
jecxz
mov
mov
fiadds
xchg
pop
mov
cmc
jns
and
cmp
sbb
xchg
inc
pop
or
mov
adc
mov
sti
sbb
incb
repnz
cmpsb
leave
mov
insb
mov
daa
mov
std
andl
pop
fs
cmp
push
stc
movsb
inc
test
pop
mov
push
ret
rorb
popa
sbb
push
shl
in
arpl
in
jl
fisubl
mov
sbb
mov
pop
out
push
push
mov
les
sbb
push
adc
sub
mov
and
pop
insl
je
mov
cmp
neg
in
xchg
popf
mov
jp
insb
aas
call
cmpsb
leave
cmpsl
fisttpll
jbe
mov
loopne
ljmp
iret
mov
cmovp
bound
cli
mov
jbe
adc
call
pushf
fldenv
aas
inc
ficoml
lahf
ss
leave
mov
mov
or
into
push
xchg
and
test
ror
pop
shlb
ja
or
sbb
sub
xor
cmpsl
rcll
pop
cmp
lock
pop
adc
repnz
adc
shl
mov
shrl
test
inc
jns
inc
sbb
mov
loop
push
addr16
iret
cmp
popf
aam
xor
xchg
test
lds
cmp
adc
decl
dec
addr16
push
add
cmp
push
inc
fwait
sbb
rolb
mov
fcompl
pop
lea
sbb
shll
notl
xlat
mov
ljmp
inc
pop
pop
int3
jb
add
aaa
xchg
scas
mov
cmpsb
ret
adc
jns
mov
push
in
dec
roll
ss
pop
xor
test
inc
out
jb
mov
fwait
rcll
pop
push
and
jbe
jns
imul
xlat
shrl
mov
adc
dec
arpl
pop
sub
adc
leave
xchg
ret
mov
mov
cmp
jl
adc
xchg
add
pop
inc
push
mov
dec
or
cli
jno
out
dec
movsb
jbe
cmpl
fbld
testl
loop
loop
mov
ret
popf
xor
fsub
push
mov
fnstcw
lods
dec
xchg
scas
repnz
mov
aad
inc
repz
arpl
out
loop
jno
xchg
add
ficomps
je
push
pop
push
in
imull
mov
sbb
xchg
loopne
mov
fmulp
dec
pop
dec
mov
stos
fisttpl
in
repz
pop
jle
mov
jecxz
ret
inc
jae
jmp
jp
das
repnz
and
cmpl
arpl
cmp
std
std
mov
jge
in
sbb
mov
xor
or
repz
mov
jg
imul
cwtl
ljmp
or
test
add
pop
xor
mov
and
cli
in
out
adc
decb
cltd
jns
scas
test
jl
lcall
cmp
push
je
jns
out
add
clc
adc
clc
xchg
xchg
repz
rclb
mov
sbb
adc
rcl
rorl
aas
pop
mov
int
arpl
push
and
jge
pop
repz
xor
call
mov
je
clc
aam
xor
leave
hlt
and
pop
cmpsl
and
mov
mov
pop
adc
fs
cld
imul
xor
add
movb
imull
push
push
jae
inc
cwtl
mov
repnz
dec
mov
sub
adc
mov
xchg
popa
xchg
adc
inc
enter
rclb
push
jmp
cmpl
outsl
jecxz
sub
pop
inc
int3
push
fisttps
cmp
jg
negb
in
mov
push
shlb
pop
or
rcl
shl
or
jae
add
mov
ror
into
or
in
xchg
scas
out
sub
jl
push
pop
or
fldcw
sahf
mov
out
aam
das
jp
mov
movsl
mov
xor
popa
pop
std
xchg
mov
insb
mov
popf
mov
fidivrl
testl
sbb
sub
addr16
movsl
pop
insb
pop
jns
jg
or
pop
out
fs
xchg
jbe
xor
rorb
xor
xchg
je
pop
sahf
cli
mov
xchg
nop
adc
js
push
inc
sub
pop
lods
pop
adc
aad
mov
rcr
and
and
mov
stc
leave
mov
dec
adc
aas
xchg
push
dec
out
sub
pop
sahf
flds
fsubr
or
gs
xchg
repnz
or
cmpsb
ficoms
lret
inc
jo
inc
jp
sub
adc
in
nop
pop
cltd
fistps
xor
jg
clc
pop
pop
adc
mov
or
sub
lret
pop
sti
xor
sub
cmc
push
les
and
xchg
add
mov
int3
popf
addr16
adc
in
mov
cmp
xchg
xchg
gs
mov
test
ljmp
test
fwait
iret
pop
aad
ljmp
test
fs
addr16
and
shr
test
cmpsl
cmp
cmpb
sbb
loope
andb
or
out
mov
outsb
or
add
insb
fs
xor
cmpsb
cmc
push
xor
aad
add
cmp
outsb
sbb
bound
iret
roll
push
cmp
jg
in
pop
jmp
or
mov
pop
icebp
iret
cli
xor
xchg
mov
into
sub
leave
test
outsb
push
sbb
push
mov
stc
mov
fildl
aad
mov
mov
popf
dec
adc
mov
add
xlat
xor
jb
dec
subl
pop
xchg
sub
ja
negl
imul
push
mov
sub
pushf
test
xchg
xchg
test
inc
sub
mov
sbb
jp
cwtd
mov
loope
add
sbb
scas
adc
adc
aaa
mov
mov
push
in
sub
mov
hlt
outsl
jb
xor
cli
push
jl
lods
pop
adc
cli
mulb
push
cltd
out
jmp
ss
mov
dec
imul
sub
pop
dec
test
mov
mov
gs
mov
jne
sbb
data16
cli
clc
loopne
sar
and
push
jmp
nop
out
movsl
mov
xor
test
push
adc
jecxz
ret
ret
mov
adc
fs
cmp
jns
testb
cmp
jp
in
popa
sub
jno
sahf
and
into
rcr
test
pop
add
int3
mov
in
orb
test
xchg
sub
fcomp
adc
sbb
mov
clc
push
popf
pusha
out
mov
xchg
xchg
int
mov
mov
ja
aad
push
push
rcll
add
dec
push
dec
fs
cmp
ljmp
xchg
cmpsb
lahf
sbb
xchg
push
popa
mov
movl
repz
jo
ret
lahf
cmp
shl
adc
int
repnz
rcl
scas
je
jo
dec
negb
lock
xchg
in
shl
and
or
jg
dec
aam
xchg
push
or
or
loope
jmp
rcr
fsubrp
xchg
cld
xlat
mov
popa
into
add
push
dec
test
icebp
jae
pop
jb
jp
cltd
repnz
repnz
cmp
and
xlat
loope
mov
cmp
andb
pusha
pop
mov
jnp
sbb
sbb
push
out
lret
iret
sub
jmp
push
mov
push
inc
jb
pusha
mov
sub
xor
mov
andb
and
or
mov
adc
negl
or
mov
or
jnp
push
xchg
add
jns
jecxz
mov
leave
cmpsl
xchg
add
dec
pop
cmp
push
cmp
jl
push
orb
dec
cs
or
add
cmp
popf
loope
jle
xlat
lcall
outsb
out
je
sub
mov
xor
lahf
and
rorb
cli
mov
xchg
fdivrs
push
gs
xchg
pop
nop
rclb
roll
cmp
xchg
mov
cmpsl
pop
fadds
add
mov
out
movsl
jge
inc
sub
daa
out
call
push
jle
clc
jge
mov
daa
pusha
orb
inc
mov
inc
cmp
cs
repnz
mov
sub
test
xchg
or
xchg
or
mov
jno
cli
and
mov
jae
and
xchg
aad
scas
mov
call
loop
ja
sarl
push
sbb
adc
and
push
sahf
inc
and
mov
icebp
pop
out
add
enter
add
repz
hlt
pop
xchg
fmulp
sub
ret
xor
or
mov
lods
ret
cmp
notl
inc
xor
push
lock
pop
or
or
fstl
xchg
pop
cmpsl
and
xor
lahf
cmpsb
inc
jno
arpl
push
test
popf
jl
or
jns
mov
push
mov
ror
jns
pop
push
add
adc
fiaddl
icebp
sbb
dec
xor
mov
cmp
mov
cmpsl
sbb
ds
and
ja
mov
jp
imul
add
mov
dec
mov
aas
jbe
fs
ds
xlat
sbb
and
fs
inc
mov
sub
xor
into
jae
xorb
cmp
mov
into
pop
fldl
in
xchg
mov
pop
pushf
ss
clc
mov
aad
imul
and
stos
xor
out
pop
fisubrl
and
pop
jbe
imul
ss
mov
push
popa
sub
ja
nop
push
scas
xchg
push
pusha
mov
and
mov
xchg
push
cmp
jmp
js
jmp
jmp
sub
out
xchg
gs
mov
jne
inc
cmpsb
xlat
xchg
inc
lods
decl
lcall
xor
adc
in
adc
adc
sub
mov
xchg
cmp
inc
mov
pushf
pop
jno
icebp
cwtl
sub
cli
shll
jmp
xor
icebp
and
and
loop
test
fisttps
cltd
sub
iret
jo
mov
lock
jmp
pop
mov
leave
sub
mov
lods
enter
cli
jmp
lods
sub
xor
or
adc
stc
push
sub
or
cmp
popf
xchg
inc
mov
and
sbb
mov
push
pop
jae
lret
mov
mov
test
dec
jmp
sub
push
cmpl
int3
pop
out
jnp
mov
pop
dec
pop
xchg
in
lret
dec
and
imul
addl
mov
mov
nop
mov
and
call
incl
pop
test
or
test
cld
hlt
mov
or
lcall
cld
gs
sbb
jmp
adc
dec
xor
lcall
mov
adc
xor
test
fldl
add
das
cmp
pop
mov
loopne
or
cs
fstl
in
mov
outsl
mov
mov
stos
popf
mov
dec
and
jbe
aad
jg
xlat
inc
lea
imul
scas
punpckldq
cmp
leave
rolb
mov
sbb
aam
mov
push
movsb
pop
mov
pop
into
push
int3
push
lods
or
les
insb
jbe
icebp
mov
sbb
pop
mov
idiv
test
fisttpl
jbe
lahf
mov
adcl
imull
enter
adc
lret
stos
xor
lock
pop
cld
push
or
add
cltd
mov
bound
notl
jle
imul
loop
fs
pop
mov
test
mov
xchg
and
sarl
and
int
out
je
add
xor
idivb
pop
sub
jbe
gs
repnz
sbb
in
mov
negb
arpl
mov
int3
aaa
or
push
insl
popf
inc
and
sbb
push
dec
int3
out
out
leave
cmp
call
movb
add
sub
out
pop
in
in
pop
movsb
daa
pop
fstpt
mov
clc
add
pop
add
xor
xchg
pop
cmpsb
outsl
mov
nop
and
xchg
mov
test
jle
pop
push
pop
inc
sarb
addr16
scas
test
andl
sbb
mov
dec
cmp
xchg
pop
xchg
loopne
dec
xor
adc
in
out
mov
ret
sbb
sub
or
sub
pop
xchg
cmp
push
out
dec
imul
push
lret
je
mov
stos
lret
mov
mov
in
mov
pop
je
int3
push
loop
push
cmp
inc
out
pop
paddusw
dec
jg
adc
jecxz
pop
pop
repnz
loope
adc
repz
pop
je
fists
xchg
fmuls
ret
pcmpeqb
mov
ror
shrb
test
cmpl
mov
jle
xchg
add
add
daa
test
aad
or
jmp
and
inc
lcall
xor
mov
ltr
sti
mov
orl
pop
mov
repz
and
xor
mov
lods
fstpt
fstpl
adc
inc
jmp
pop
jle
in
shl
mov
cmp
pop
mov
pushf
and
les
mov
xchg
mov
cwtl
mov
lods
sahf
ror
mov
mov
mov
jae
sub
adc
sar
daa
stc
rorl
dec
inc
sarl
and
push
enter
pop
add
xor
push
adc
mov
nop
fisttpll
subb
scas
int3
sbb
or
inc
fisubl
out
lret
add
jge
and
push
pop
xor
jle
add
or
in
es
dec
fisttpll
fsubr
sbb
add
aaa
adc
cmp
mov
das
push
mov
repz
or
adc
stos
xor
add
and
lcall
sub
lret
leave
add
cli
mov
imul
adc
dec
push
call
out
jnp
lahf
inc
or
lds
in
outsl
mov
mov
cli
mov
jge
jne
inc
mov
addr16
mov
subl
xchg
cltd
fs
gs
add
jg
popf
mulb
js
sahf
nop
bound
lret
repz
leave
mov
dec
sub
movsb
scas
and
dec
test
mov
popa
ret
push
pop
pop
jle
xor
in
adc
xor
sub
mov
add
aaa
xchg
cmpsb
jge
inc
sbb
mov
and
mov
push
mov
add
lds
cmp
push
xchg
mov
or
push
adc
adc
stos
ja
xor
xor
les
sbb
dec
sbb
insb
pop
sar
push
push
in
movsl
mov
jb
jp
mov
repz
dec
into
inc
js
cmp
leave
and
jmp
jle
jmp
cltd
mov
or
lods
or
pusha
push
cwtl
sub
xchg
icebp
pusha
sti
out
popa
mov
dec
cli
inc
dec
imul
int
js
push
inc
xchg
push
cmp
iret
hlt
stos
mov
xor
jo
std
jb
pop
xor
inc
xchg
ss
stos
lcall
fisubl
xchg
mov
cmp
jae
xor
insb
inc
in
pop
aad
dec
xchg
movsl
pop
push
divb
adc
outsb
mov
pop
xor
jle
or
repz
add
inc
sti
aas
sbb
and
lds
lret
insb
sub
push
jno
in
ficompl
adc
mov
lcall
mov
pop
push
out
xor
jbe
sub
fnstsw
mov
popf
rcll
test
stos
out
ds
push
and
pop
mov
mov
loop
lcall
cld
repz
popf
pop
push
scas
push
xor
cmp
or
or
jnp
in
sub
iret
scas
inc
je
sbb
inc
je
pop
cwtl
push
push
ja
mov
fsub
mov
shl
mov
cmc
or
mov
ljmp
mov
out
add
sbb
adc
xlat
fsubrs
pop
cmpsb
jb
adc
and
je
push
insl
mov
jns
add
adc
xchg
cs
and
setp
inc
push
fs
shlb
sbbb
fnstenv
subl
insb
inc
lea
in
outsl
dec
mov
int3
andl
pop
idivl
xor
fmuls
xor
sbb
cmp
das
push
rorl
es
and
fcom
repz
arpl
cmc
call
xor
and
mov
xchg
ljmp
mov
add
mov
js
pop
dec
pop
adc
pop
jbe
dec
fidivrl
push
jo
cld
stos
cmp
lods
ret
sub
sar
fnsave
punpckldq
add
int
xchg
inc
fstl
jbe
aaa
jno
cmp
adc
mov
cmpsb
mov
mull
xor
rep
jb
scas
push
xchg
cmp
mov
ds
iret
outsb
pop
mov
mov
in
dec
icebp
xorb
pusha
lret
or
ljmp
push
cmp
xchg
adc
clc
xchg
aam
je
xchg
jecxz
dec
repnz
icebp
mov
xchg
data16
mov
jle
cvtdq2ps
lea
test
test
xchg
jns
sbb
psrlw
jns
call
mov
sbb
jb
pop
ret
sti
loopne
sbb
das
movsl
or
dec
pusha
outsb
xchg
or
mov
jbe
pop
jle
sbb
jns
repnz
dec
add
iret
fistl
dec
shlb
mov
loop
sbb
popa
jbe
ja
and
sarl
dec
or
mov
push
mov
xor
repz
cmpsl
call
push
test
add
das
pushf
jae
testb
out
movsl
sahf
xchg
andb
cmpl
sub
or
adc
xlat
andb
xor
jns
sbb
gs
or
push
and
push
rorb
cmp
cmpl
xchg
loopne
jg
lret
xor
daa
push
movsb
sbb
arpl
cmp
dec
push
stos
enter
lock
cmp
sbb
or
mov
iret
mov
insb
lahf
cmp
adc
mov
pushf
xor
mov
lret
test
xor
jecxz
jecxz
insl
es
int3
inc
or
push
outsb
fsubl
insl
xchg
sti
cmp
shrl
push
inc
push
loopne
inc
imul
das
sahf
pop
imul
test
push
cmp
sub
ret
out
cmp
stos
stc
push
push
in
shlb
popa
cmp
mov
fdivrl
push
dec
mov
or
mov
repnz
out
sub
shr
das
pop
xchg
int
cld
pop
adc
and
add
cmp
add
mov
lea
pop
ss
gs
adc
sbb
cmpsl
subb
push
out
cmp
xor
mov
mov
in
and
mov
mov
adc
or
pop
call
pop
sbb
out
sub
test
inc
lcall
or
imul
inc
inc
aaa
ret
cld
mov
and
jl
out
jnp
push
sub
xlat
iret
pop
ret
ret
into
mov
pop
shlb
lret
stos
and
gs
notb
pushf
enter
aaa
pop
mov
jmp
sahf
cmp
sub
or
loop
or
sbb
out
or
mov
popf
inc
dec
mov
sbb
imul
pop
jmp
sub
xor
shrb
jle
shrb
mulb
call
insl
test
xor
xor
and
aas
rolb
lahf
cmpsl
pop
out
dec
fcmovnu
xor
scas
and
sbb
or
xchg
test
mov
sti
pop
inc
cmp
mov
aas
xor
cli
mov
cmc
jle
mov
pop
sbb
dec
fwait
inc
push
sbb
mov
std
mov
jno
fs
cs
cmpsl
xor
iret
shlb
inc
push
pushf
mov
mov
mov
xor
daa
es
movsb
orb
or
pop
inc
shl
in
mov
pop
pop
inc
push
icebp
test
dec
jae
jno
pop
xchg
pop
fwait
loop
sahf
jnp
cmp
sub
call
stos
fiadds
xor
add
testl
dec
add
mov
cmpsl
sbb
outsl
bound
mov
push
sbbb
push
daa
sub
pop
push
rcll
xor
push
sub
cmpsl
js
xor
mov
rcrb
aam
push
fdivs
inc
sbb
xchg
add
inc
mov
mov
ljmp
jnp,pt
sub
pop
adc
fcomi
lret
and
jns
inc
testb
cmp
test
cmpsb
imul
aas
lret
mov
shrb
fisttpll
push
mov
mov
pop
add
cmp
push
dec
dec
out
push
dec
xor
out
cmp
push
leave
decl
push
repz
jae
ss
hlt
mov
add
int3
jmp
inc
call
or
out
jno
jbe
movsb
and
push
adc
fdivrl
cmpsl
cmp
dec
bound
pop
mov
lock
jge
aaa
pop
js
nop
rcrl
shrl
cmpsb
push
jne
lds
fsubr
pop
ja
sub
sub
mov
jb
inc
xchg
cmp
fimull
mov
mov
bnd
fwait
dec
icebp
lret
cmp
mov
jl
adcl
sbb
pop
jno
adc
je
movsl
cmp
or
jmp
jl
cmp
test
lahf
mov
iret
pop
push
and
push
je
data16
adc
mov
mov
rcrb
imul
aaa
mov
mov
in
mov
fnstsw
jecxz
gs
rorl
xor
xor
outsl
pushf
mov
std
ret
pusha
add
out
outsl
test
adc
dec
cs
push
sub
dec
cwtl
fisubrs
mov
cmp
xor
aad
add
xor
dec
jmp
out
xor
imul
mov
sbb
lahf
pop
daa
pop
and
je
mov
inc
clc
xchg
and
or
mov
lret
std
leave
adc
lcall
ret
push
and
outsl
clc
scas
push
dec
aam
xchg
push
xor
push
inc
outsl
add
insl
shrb
mov
jp
movsl
or
mov
xchg
sahf
jbe
cmp
sbb
clc
mov
inc
dec
fisubs
inc
jb
loop
mov
rcll
xchg
push
stos
arpl
repz
xchg
mov
pop
dec
addb
mov
pop
and
rol
test
imul
mov
dec
cmc
ds
out
and
xchg
sub
lahf
js
rep
sahf
nop
aas
add
les
ss
pop
mov
mov
and
inc
sahf
fidivl
mov
xlat
imul
xchg
jo
fnstenv
xchg
rol
stos
lods
inc
sub
mov
jmp
insl
sbb
or
mov
lods
mov
adc
lock
mov
mov
xlat
xor
lret
fisubs
sbb
std
je
mov
imul
inc
popf
sub
lods
fdivp
xor
rcrb
into
imul
inc
leave
stos
in
xchg
mov
inc
aad
inc
cmp
push
sbb
fidivs
mov
scas
cmpsl
mov
js
stc
inc
jl
stc
and
leave
push
lcall
xlat
mov
mov
dec
andb
shrl
dec
test
ljmp
or
aas
hlt
negb
sub
add
mov
out
dec
icebp
push
fcomps
and
aad
inc
popf
jmp
negl
repz
and
std
fsubs
sarl
dec
sub
push
sbb
pusha
adc
cmp
icebp
jl
pop
loop
mov
mov
jo
ret
push
add
push
cwtl
ljmp
xor
push
stos
ret
lds
mov
cs
loope
xlat
mov
push
xchg
les
push
fsubp
push
movsl
aad
and
dec
lods
divb
xchg
push
gs
sbb
sbb
rolb
mov
test
xor
fwait
xchg
xchg
pop
inc
mov
insl
push
xor
jp
xor
enter
insl
insb
push
sub
pop
mov
sub
sub
jae
mov
fdivrs
aaa
push
dec
lods
iret
mov
nop
or
push
popf
pop
jge
and
in
sub
fsub
add
jo
cmpsl
stc
dec
aad
xchg
xor
cwtl
or
fdivrs
and
lods
iret
and
mov
dec
mov
sub
icebp
loop
push
xchg
add
shl
popf
sbb
cmpsb
sub
insl
ret
xor
inc
pop
mov
pop
andb
outsb
dec
cmp
ja
fdiv
lahf
arpl
fsub
cmpsb
rolb
popa
cmc
addr16
sahf
mov
or
popl
jmp
out
mov
xor
xchg
mov
mov
loop
jp
das
popl
and
mov
insb
sbb
stos
jne
mov
dec
push
stos
adc
pusha
mov
jns
sub
adc
mov
loopne
add
push
inc
mov
mov
pop
mov
daa
stos
dec
cwtl
or
leave
outsb
icebp
and
inc
mov
mov
pop
aas
sbb
mov
popa
leave
jb
push
je
jle
js
aad
repz
das
jg
push
nop
inc
jne
rcrl
and
xor
push
lods
mulb
gs
je
repnz
xchg
insl
xor
push
outsb
dec
lcall
adc
jle
int3
pop
push
lret
push
dec
hlt
mov
mov
lock
sbb
pop
lds
insl
sbbl
sahf
loope
popf
xchg
pop
adc
fmull
cld
cmpsl
inc
inc
popf
mov
je
mull
clc
mov
jae
dec
out
dec
ror
aam
mulb
dec
call
xor
fwait
mov
sub
pop
pop
adc
pop
mov
inc
push
popf
adc
jmp
push
push
dec
inc
inc
arpl
sahf
xchg
sub
faddl
xlat
lret
shll
mov
pop
push
xor
mov
adc
mov
pop
and
gs
pop
cld
sbb
lret
dec
mov
xchg
outsl
fsubrl
cmp
dec
inc
shll
cmpl
sbb
sahf
fdecstp
jae
arpl
stc
aaa
sbb
jg
cs
cmp
aad
es
std
mov
xor
outsl
mov
pop
rcll
rclb
add
sbb
out
iret
pop
pop
mov
iret
cli
call
punpckldq
or
movb
pop
lcallw
lahf
out
pop
push
pop
stos
cmp
rclb
aam
sbb
add
sbb
and
in
sbb
scas
push
inc
int
pop
jne
xor
imull
xchg
lods
cmp
mov
pop
and
lahf
incb
jae
push
loope
sbb
mov
repz
mov
adc
addr16
pop
arpl
sarb
rclb
orl
mov
add
imul
pushf
jno
mov
lea
pop
shlb
cmpl
popa
add
pushl
xchg
testl
push
mov
test
sbbl
mov
sti
push
addr16
add
mov
xor
adc
andb
mov
pcmpeqw
mov
mov
shl
sbb
inc
inc
test
jae
add
je
mov
inc
sbb
lret
test
dec
leave
jo
int3
test
lods
mov
cmc
adc
fmuls
iret
mov
loopne
test
pushf
dec
add
dec
mov
dec
or
movsb
daa
jne
inc
out
push
and
jl
mov
mov
fstps
mov
inc
cs
xor
dec
rcl
mov
stos
js
and
shll
inc
and
inc
cmpsb
push
add
mov
xchg
and
or
jno
test
mov
push
inc
mov
sub
mov
fsub
xor
repz
sub
dec
int3
lea
inc
popf
loopne
cld
divb
push
or
inc
lcall
mov
icebp
mov
push
pop
clc
dec
popf
pushf
pop
movsl
flds
xor
add
inc
mov
ss
and
dec
push
or
movsl
scas
xor
sti
dec
mov
or
fst
dec
jmp
out
out
fnstcw
mov
push
shll
adc
dec
jg
lret
pop
xor
jne
mov
xchg
fldcw
lea
xchg
sub
inc
xchg
or
bound
mov
dec
mov
mov
jp
and
inc
out
sub
cmp
into
jne
mov
mov
fimull
cmp
test
test
jnp
test
test
mov
cmpsl
leave
push
pop
jbe
lret
ljmp
xchg
mov
inc
adc
std
daa
jp
scas
add
dec
xchg
fidivrs
and
jno
pop
add
add
roll
pop
dec
inc
xchg
std
cmp
mov
lock
mov
xchg
inc
jnp,pt
daa
out
lds
cmp
xchg
cmp
sub
loop
xor
iret
inc
adc
rolb
cltd
push
stos
cwtl
mov
nop
dec
mov
inc
push
loop
out
mov
shlb
fwait
stos
rcll
rcll
push
sarb
sbb
dec
and
add
je
sbb
jg
stc
adc
xchg
cld
loop
out
cmc
cmpsb
dec
add
sbb
ss
arpl
xchg
dec
jae
sti
rcr
cmp
jl
loop
pop
fwait
aad
mov
rcll
push
mov
mov
iret
rorb
xor
subb
loope
jo
cmp
sub
sbb
mov
add
insb
icebp
das
lods
pushf
stos
dec
test
mov
hlt
outsl
sbb
dec
movsb
pop
orb
insb
jno
je
pop
mov
int3
mov
xchg
call
shlb
sub
pop
mov
mov
push
lret
into
xchg
popa
and
or
insb
push
loop
es
jns,pn
outsb
js
dec
int
ljmp
les
inc
mov
daa
cmp
lret
jl
pushf
or
jno
adc
push
push
cmp
jl
leave
psubd
xchg
out
pop
data16
add
pop
cltd
push
jae
into
stos
jg
sahf
popf
push
jg
push
pop
iret
push
sub
addl
or
repz
xchg
std
gs
clc
jle
inc
sbbl
inc
test
or
inc
pop
shlb
or
add
adc
andl
in
sub
mov
adc
inc
lea
sar
test
mov
push
lret
jo
icebp
sbb
xchg
inc
je
adc
mov
lds
or
movsb
rorb
jl
shr
mov
jl
xor
loope
add
and
call
nop
push
lret
pushf
mov
pop
decl
icebp
dec
mov
js
mov
mov
popl
jg
jge
dec
insb
movl
xchg
mov
mov
xchg
or
jg
lahf
lret
daa
ss
loopne
sarl
cmp
xlat
loopne
xor
pop
scas
and
sbb
inc
and
sti
fcompl
lods
dec
xor
imul
pop
dec
leave
push
jb
les
push
add
ret
mov
or
les
das
stc
pusha
cmp
enter
add
aaa
arpl
icebp
push
pop
fsubrs
shrl
mov
cmp
ret
hlt
adc
orb
inc
mov
add
orb
mov
test
ss
pusha
mov
aad
jmp
in
sbb
jmp
cmp
lcall
push
movsb
jp
outsl
int3
sti
cmc
cmc
adc
cmc
sbb
add
aas
and
sbb
mov
dec
xchg
mov
inc
les
dec
shll
cmpl
dec
mov
dec
adcl
push
push
inc
in
pop
push
jge
mov
mov
xorl
repz
daa
inc
shl
sbb
or
mov
add
popf
and
rcll
mov
leave
mov
cmp
shll
shrl
dec
mov
lea
mov
sub
mov
add
cmc
jbe
pop
orb
lahf
pop
mov
jecxz
cmc
cmp
lock
fwait
pop
mov
jo
lods
add
iret
jp
mov
in
mov
inc
mov
ljmp
dec
out
xor
push
sahf
xchg
mov
xchg
loop
es
cwtl
pop
push
int
jg
or
dec
les
dec
sub
int
mov
xchg
ds
hlt
shlb
call
into
xchg
cmp
or
adc
jo
cmpsb
mov
mov
pop
aad
xchg
add
inc
jns
jecxz
out
js
sbb
call
fsubs
out
in
mov
push
ret
fwait
push
inc
ret
mov
dec
or
and
xchg
mov
inc
dec
in
in
fistl
pop
mov
int
mov
dec
cwtl
jmp
cmp
inc
into
sub
pop
lea
icebp
push
std
repz
fidivs
shrl
mov
pop
xchg
es
pop
or
aam
push
cli
jne
jge
subb
leave
and
xchg
sbb
and
mov
cmp
push
icebp
push
mov
mov
mov
mov
outsb
mov
testl
push
push
stos
mov
rclb
push
dec
mov
inc
mov
mov
data16
dec
cs
std
adc
jnp
push
jae
xor
mov
cmp
aas
mov
rorl
jns
mov
add
movsb
inc
ds
ljmp
xor
or
sbbb
ds
sub
lret
sub
dec
dec
lods
mov
testb
pop
add
call
xchg
sbb
or
cmc
jnp
xlat
inc
xor
cld
mov
push
lahf
imul
pop
aam
ljmp
ds
xor
enter
mov
sub
loop
cmp
data16
xchg
addb
mov
xor
rorb
push
test
int
imul
inc
xchg
mov
pop
and
dec
xor
jae
cmp
ret
mov
int3
insb
jl
scas
inc
dec
or
aas
mov
rcrb
out
test
insb
cmp
daa
xor
push
mov
iret
cmp
addl
pop
dec
sub
into
rcl
mov
pop
cmp
stc
mov
movsb
push
push
cmp
lret
mov
mov
nop
xchg
push
scas
test
psrad
cmp
retw
lods
pop
xchg
leave
out
push
gs
dec
xor
xchg
cmp
jb
pop
mov
es
push
shlb
cmp
int
pop
pop
xor
or
pop
into
aas
stos
aad
rolb
mov
add
push
add
cmp
mov
add
icebp
sbb
xchg
adc
divb
pop
cmp
std
jg
call
cmpsb
ss
fidivrl
sahf
out
leave
dec
ret
sbb
aas
pop
test
add
sbbb
or
mov
sbb
inc
xor
adc
inc
pop
jbe
pop
mov
adc
out
hlt
pop
fcomps
pop
sub
rcrl
test
rolb
stos
lea
or
cmpb
iret
xchg
hlt
cmc
dec
aad
inc
cmpb
ljmp
xchg
into
addr16
xchg
adc
push
jg
cli
js
mov
xchg
fildl
inc
xchg
das
sahf
aas
adc
inc
lods
dec
popf
mov
mov
jecxz
into
or
mov
mov
push
rcll
push
sbb
test
and
cmp
and
pushf
sbb
sub
dec
xor
mov
das
cmc
test
jbe
ret
jns
cmpsb
push
shll
stos
ljmp
repz
dec
arpl
int
mov
lock
daa
or
lds
popa
adc
repnz
into
mov
dec
cmp
inc
or
gs
in
lds
mov
int
nop
mov
sbb
or
push
xchg
cli
inc
sbb
and
mov
jne
jmp
aam
dec
cmp
stos
scas
insl
jg
das
cmc
and
push
push
mov
push
in
jbe
orb
dec
pop
es
mov
jne
cli
icebp
jne
sub
push
pop
rep
jb
mov
push
repnz
dec
call
adc
and
sub
mov
fistpl
aaa
pop
mov
sbb
sahf
jmp
out
out
shrb
insl
dec
adc
push
mov
cmp
imul
jae
fs
fs
popf
aaa
push
outsl
enter
or
sarb
cmc
cmpsl
sub
sub
int3
aam
ds
inc
dec
and
pop
and
ficoms
and
test
mov
xor
in
mov
or
cmp
dec
cmp
test
inc
cmp
push
cld
stos
adc
daa
daa
faddl
shrb
cmc
es
mov
push
sbb
jo
adc
xchg
jle
cmpsb
out
loope
mov
in
lea
cmp
frstor
pop
adc
icebp
mov
mov
sub
lock
aad
into
cmp
out
stc
jecxz
leave
jg
jmp
in
sahf
fidivrl
inc
insl
pop
push
jp
or
mov
cltd
adc
mov
frstor
loope
enter
mov
and
mov
insb
pop
cmp
pop
lock
mov
test
rorl
lcall
cmpsl
lahf
sbb
pop
out
jns
cmp
aas
out
je
pop
or
loopne
fisttpl
cltd
call
inc
cli
enter
aaa
out
mov
test
dec
and
push
pusha
in
dec
xchg
jge
fcmovu
sarb
mov
lods
inc
jb
inc
outsb
into
xor
mov
scas
loopne
scas
xchg
pop
lods
popf
cmp
mov
add
lcall
push
mov
mov
pop
fcomi
push
sbb
lods
aaa
push
insl
sahf
pop
popf
cmp
cmp
js
mov
imul
push
call
xor
aaa
sbb
push
scas
push
sbb
je
push
sub
and
in
repnz
add
call
inc
mov
mov
loope
push
mov
gs
xchg
mov
jne
or
pop
lods
cltd
cmc
mov
mov
cmp
jmp
adc
add
in
js
pop
hlt
jecxz
test
jle
sbb
mov
jmp
xchg
push
inc
bound
lds
out
sbb
inc
aad
outsl
pop
fwait
pusha
loopne
in
dec
push
mov
repz
mov
pop
lret
inc
es
jb
dec
sbb
xor
jle
mov
cmp
mov
xchg
xor
xchg
mov
lods
leave
add
cmpsl
in
les
fiadds
popf
jecxz
shlb
shl
mov
hlt
notl
hlt
jne
outsl
gs
pop
cmpsb
mov
or
mov
in
xor
xchg
inc
push
pop
add
loopne
addl
lcall
daa
lcall
aaa
xor
xchg
ss
pop
pop
inc
pop
mov
in
cltd
inc
fiaddl
push
xchg
mul
in
mov
mov
sbb
or
hlt
stc
cltd
mov
out
push
lods
xchg
push
in
sub
jbe
push
js
stc
lret
lret
into
mov
dec
in
loopne
push
xchg
and
rol
xlat
dec
push
out
in
es
xlat
push
dec
pop
xchg
addl
mov
gs
fisubrl
jecxz
cli
and
addr16
fistps
mov
insl
mov
cmp
mov
xchg
cmp
dec
mov
or
cli
js
push
hlt
adc
inc
jnp
fs
stc
mov
lds
ja
insl
vmwrite
das
lret
mov
sbb
orl
mov
mov
sub
lds
cmp
pop
cltd
push
jno
jge
pop
dec
jno
sub
movq
aad
popf
cmp
mov
push
test
cld
and
and
cmpsl
push
fcomip
popf
sbb
or
xchg
xchg
in
cmpsl
fistl
ja
pop
shll
cmp
cltd
sub
mov
mov
test
testb
imul
into
hlt
adc
sub
or
adcb
imulb
test
jmp
jne
mov
dec
lds
sahf
add
insb
jg
sub
mov
insl
push
pop
mov
lret
jmp
mov
xor
jle
xor
push
jmp
push
mov
cmpsl
fninit
mov
mov
js
or
xor
sarl
dec
mov
cld
cs
jno
test
inc
add
mov
arpl
div
loope
idivl
dec
jge
cmp
dec
sbb
push
sti
sub
dec
pop
sbb
mov
sub
sarl
jae
arpl
and
push
ja
pop
mov
dec
xlat
mov
push
loope
jp
fwait
shll
fidivl
in
aam
xchg
es
lcall
sub
ljmp
push
dec
sbb
jae
fcomps
fmul
sbb
gs
mov
fs
lods
cmp
push
aad
lahf
cmp
fneni(8087
xchg
jl
mov
sbbb
cld
xchg
insb
xchg
add
into
jmp
fists
into
sbb
fucom
mov
dec
int
cmp
sbb
cmp
pop
inc
jmp
inc
call
int3
push
mulb
xchg
fldenv
cs
fistps
outsb
dec
cmp
mov
in
or
lcall
ja
cmp
pop
lcall
mov
or
push
jo
insb
sbbl
not
jmp
loopne
iret
mov
jg
push
mov
add
hlt
jg
fwait
and
mov
push
bound
jge
sbb
inc
mov
dec
ud1
xor
movsb
rcrb
cmp
dec
dec
mov
mov
push
push
decl
lods
cmc
jge
icebp
or
or
popl
inc
iret
and
jns
test
lret
or
jno
out
xchg
jns
mov
cmp
pop
aam
push
scas
dec
dec
push
mov
sbb
or
pop
pop
popa
cmpsl
cs
insb
adc
ss
adc
pop
xchg
negl
push
loope
pinsrw
mov
pop
xor
mov
arpl
inc
stc
sub
nop
cs
dec
iret
aaa
or
sub
mov
movsb
ret
fwait
dec
add
fcmovu
aas
daa
cmp
outsb
mov
std
aam
and
mov
pop
xchg
lahf
stc
cmp
xchg
sbb
ss
xchg
jns
aaa
adc
xor
push
sub
into
push
lods
push
push
shll
xchg
inc
rorb
push
mov
jbe
sbb
fidivl
sub
add
xchg
repnz
js
mov
insb
in
cmp
in
cld
cmpsb
dec
sbb
in
xchg
push
iret
cwtl
mov
dec
imul
sbb
sahf
psubusb
mov
scas
jmp
outsb
cmp
dec
push
sbb
jge
jb
nop
cmc
rcll
roll
into
jp
sbbb
pop
sbb
icebp
rolb
popa
loope
lods
loop
push
movsb
dec
xlat
sbb
jle
jmp
xor
test
std
mov
mov
mov
jnp
ret
leave
mov
sbb
sbb
and
mov
in
ds
mov
test
mov
cmp
cmc
sbb
dec
sbb
add
xchg
pop
inc
jp
mov
fldt
xchg
lds
sbb
dec
and
adc
pop
cmp
dec
cmp
xchg
addr16
xchg
sbb
xchg
fs
add
push
xchg
and
movsl
flds
push
and
outsb
enter
add
mov
cmp
arpl
and
test
lret
std
mov
lods
movsb
lahf
shl
out
sub
in
jecxz
out
cmc
fs
out
addr16
hlt
inc
push
nop
cmp
mov
xchg
push
shlb
mov
cltd
dec
jnp
xchg
inc
and
sbb
xchg
add
les
in
out
decb
scas
xlat
fs
pop
inc
outsb
cld
mov
cmp
fildl
movsl
dec
mov
xlat
dec
sbb
inc
sbb
mov
es
enter
lret
sbb
test
sbb
ja
jge
xlat
jl
inc
lock
pop
movsb
ds
mov
push
and
data16
clc
lock
test
jp
cmp
push
outsb
popa
jge
or
xor
in
adc
loope
outsb
mov
mov
lea
inc
inc
rclb
bound
fimuls
xchg
push
xor
loopne
inc
idivb
addr16
ljmp
stc
pop
mov
out
pushf
ret
jno
inc
mov
xchg
mov
cld
ds
jg
data16
ljmp
cmp
jo
push
jecxz
ja
cwtl
rclb
lahf
sbb
icebp
mov
lds
loope
sbb
mov
push
fcmovu
out
es
into
xchg
mov
xor
cs
in
jp
push
test
mov
push
popa
xchg
ss
fidivrs
cmp
sarb
std
add
pop
push
repz
repz
xlat
mov
push
notb
xchg
mov
mov
mov
pushf
mov
stos
aaa
mov
pusha
cltd
iret
mov
mov
mov
incl
rcrb
inc
xchg
xor
sub
in
jmp
arpl
icebp
xchg
cmp
popf
mov
leave
add
xchg
rcll
xor
pop
add
mov
push
inc
fists
lret
mov
xchg
test
stos
push
and
mov
sub
and
and
xor
xor
gs
lahf
pop
adc
popa
inc
lods
mov
push
lock
pop
pop
bound
sbb
cmp
xchg
in
mov
push
mov
sbb
jo
aam
jns
insb
lcall
pop
jo
add
mov
add
jnp
add
mov
lahf
fs
pop
enter
xchg
mov
insb
cmpsb
and
aam
add
pop
jmp
jo
cli
mov
xchg
jecxz
rorw
popf
pop
or
xor
dec
and
or
scas
repnz
loope
push
aaa
mov
sbb
arpl
rol
dec
pushf
and
push
pop
cltd
sub
sbb
icebp
and
imul
cmp
cwtl
rcrb
jl
cli
lods
es
in
mov
repz
outsb
movzbl
xchg
icebp
push
mov
xor
or
cwtl
in
rclb
mov
dec
mov
xor
rcr
imul
and
xchg
rep
sbb
fistpll
lret
mov
int3
cmpsb
nop
out
or
lods
sbb
push
test
mov
add
mov
aad
jo
push
jbe
push
add
jnp
pop
pop
or
cmpsl
adc
jmp
scas
or
xchg
fwait
cmpsb
jge
mov
loopne
movsl
mov
gs
jno
subb
and
pushf
loope
stc
sub
pop
cmc
push
inc
and
dec
sub
cmc
inc
xor
notrack
mov
pusha
xchg
sbb
les
push
and
daa
xchg
cltd
xchg
add
and
test
fs
jo
jne
adc
mov
sub
imul
les
hlt
aaa
lret
lahf
cmc
stc
popl
lret
mov
loopne
sub
int3
jns
jnp
mov
xor
vmread
loop
out
sub
cs
and
cmp
int3
faddp
xchg
add
cmp
popf
mov
xchg
or
dec
out
adc
inc
repz
loopne
pop
fcmove
les
xchg
dec
addr16
cmp
in
jne
sbb
xlat
ja
call
outsb
movsb
xor
xchg
daa
popf
ja
push
mov
lods
jl
xchg
leave
leave
inc
pop
cmp
or
push
push
jecxz
in
rcll
and
loope
fists
push
adc
sub
cld
sbb
inc
inc
int
dec
pop
cli
dec
stos
jp
insb
push
decl
or
add
add
push
icebp
inc
add
into
inc
enter
shrl
fiadds
xchg
cmp
fsubr
mov
dec
mov
adc
das
mov
addl
cmp
dec
lds
push
test
add
stc
test
sti
xor
test
adc
fbld
fs
stos
cmpsl
stos
xchg
sti
cmovo
mov
cmp
dec
cmc
iret
cltd
xor
into
mov
scas
dec
fwait
sbb
ret
push
add
and
xchg
into
in
mov
enter
or
mov
push
fs
push
andl
ret
pusha
dec
add
fsts
push
mov
pop
jne
or
pop
sbbl
enter
and
hlt
fcomip
enter
jbe
das
sarb
cld
cmpsl
jge
push
in
and
xor
movsb
fidivrl
push
imul
je
loop
mov
ja
aam
jbe
add
mov
jbe
cmp
es
out
or
movsl
std
push
xchg
xchg
mov
xchg
int3
loop
fidivs
fdivl
xor
sub
lods
and
lds
or
xchg
test
sbb
mov
sub
imul
sub
data16
sub
dec
mov
bnd
lret
mov
pop
outsb
out
bound
cmp
sub
std
pop
adc
dec
add
push
dec
cmp
mov
lret
ret
jo
cmpsb
push
xchg
ficoml
je
idivl
mov
mov
arpl
clc
add
inc
lea
xchg
arpl
fsts
xchg
cmp
lds
inc
imul
xchg
cmp
mov
jno
pop
jnp
das
inc
adc
adc
filds
lcall
sbb
adc
insl
mov
sub
push
mov
mov
push
addr16
es
push
fs
repnz
stos
in
xchg
icebp
sti
je
in
popf
jp
pushf
shld
or
in
inc
mov
stos
orb
or
pop
xor
fmuls
adc
aam
pop
clc
iret
jno
and
pop
jbe
aaa
inc
mov
shll
jecxz
xchg
push
add
or
sub
dec
out
mov
sub
sub
movsl
jmp
in
push
cmpsl
dec
fbld
mov
cld
mov
ret
outsb
das
adc
or
add
mov
loope
lahf
cmp
mov
inc
sbb
fcom
or
fbld
mov
leave
lret
push
mov
adc
test
pop
pusha
xor
ret
inc
popf
rep
cmc
cmpsl
pop
sub
pop
mov
es
push
mov
imul
ret
fucom
push
xchg
xchg
fimuls
jp
ret
data16
dec
call
or
or
clc
ljmp
sbb
test
or
jno
imull
pop
xor
or
dec
aam
add
jae
push
dec
std
add
pop
hlt
sbb
dec
jl
shrb
jnp
xchg
sbb
lret
push
jl
stos
shr
mov
cltd
push
fs
sarb
xchg
mov
cmc
dec
inc
loopne
push
sub
pop
mov
fsubrl
test
dec
push
mov
sub
and
sbb
into
call
add
outsl
adc
mov
sub
fisubrs
fisubl
mov
jmp
into
add
fs
dec
ss
js
mov
enter
lea
aaa
or
mov
stos
xchg
ja
cld
push
shrb
mov
lock
mov
lods
cmpsl
add
das
mov
ljmp
loopne
bound
in
push
mov
les
cmc
push
adc
iret
and
jnp
cmp
adc
cmpsb
mov
ficompl
dec
pop
fidivs
cmp
pop
test
test
shrl
mov
lods
in
push
xchg
xchg
repnz
int3
or
fidivl
fwait
seto
adcb
shrb
add
in
and
daa
aas
std
add
xor
mov
pop
enter
push
and
xchg
xchg
and
fwait
sbb
mov
ljmp
dec
lods
jnp
sbb
andb
fwait
jle
sub
xchg
pop
inc
mov
pop
jle
cmp
stos
pop
sbb
ret
jns
call
push
rclb
loope
mov
sub
mov
sar
lret
jmp
pusha
fldl
aaa
pop
xchg
outsl
fstps
xor
int3
push
mov
and
pop
inc
jecxz
imul
cwtl
int
mov
dec
testl
pop
push
test
dec
adc
pushf
out
pop
inc
push
add
daa
sbb
jno
iret
xor
mov
cmp
outsb
rcrl
add
pop
sbb
mov
push
rorb
jle
mov
adc
insl
in
imul
out
sub
inc
sub
gs
sub
cs
inc
ja
adc
jo
shrl
sub
aas
dec
pop
cmpsb
das
lods
orb
iret
int
es
call
enter
sti
push
and
jns
nop
out
sub
clc
cmp
test
cli
xor
ret
imul
inc
fpatan
or
ficoml
push
mov
lahf
jmp
lcall
pushl
cmp
arpl
sub
rcrb
lds
pop
adc
and
lcall
jl
sahf
daa
push
adc
inc
movb
and
push
push
cmp
loopne
jo
jge
shrb
sbbb
jmp
or
fwait
jmp
fstl
xchg
mov
ficomps
push
or
and
jne
mov
mov
subb
scas
pop
mov
inc
outsb
pop
inc
or
add
xor
mov
sbb
cmp
mov
sar
cmp
out
pop
les
mov
fucomip
test
push
mov
jo
cmp
fsts
push
mov
cli
movsl
test
mov
mov
cwtl
in
loop
movsl
jge
push
and
adc
ja
push
xchg
inc
push
xor
pop
sbb
je
leave
push
ror
vpcmpgtb
mov
repnz
cmp
adc
shrb
inc
je
ja
xchg
xchg
dec
sti
cmp
dec
call
mov
mov
loop
test
fwait
add
aam
rcrl
test
cmpl
xlat
ljmp
lds
xlat
push
jno
sub
xchg
jp
jge
dec
int
in
mov
imul
adc
faddl
sarl
aad
xor
test
pop
lods
int
mov
adc
mov
mov
sub
xor
ret
jge
je
cmp
and
xchg
in
test
mov
repnz
pop
jp
mov
pop
pop
pop
call
xor
cmpsb
aam
je
je
mov
cmp
imul
pop
insl
insl
testb
sub
aaa
and
sti
dec
xor
sti
cwtl
lahf
xlat
pop
std
mov
adc
push
fisubrs
mov
push
leave
and
inc
mov
jb
xchg
aas
into
push
subb
ljmp
lret
pop
fld
lret
clc
inc
outsb
mov
lcall
stos
call
sbb
ja
imul
sbb
mov
in
jbe
mov
pop
mov
xlat
dec
out
out
mov
mov
loop
xchg
mov
jae
cs
ret
and
aam
das
idivb
icebp
stc
cmp
dec
into
sbb
dec
fisttps
dec
adcb
jo
ror
cld
movsb
out
lcall
outsl
shrl
and
adc
inc
jns
loope
jp
and
add
cmp
mov
sahf
repnz
jge
call
and
mov
mov
lods
add
pop
aad
jg
and
test
loopne
idivb
mov
mov
sbb
lea
jo
lret
xchg
cmp
clc
mov
sbb
xor
arpl
dec
stos
clc
push
daa
hlt
adc
pop
sub
cmp
cmp
adc
lahf
loopne
adc
jo
add
ficompl
sbb
rcr
cs
mov
subb
xchg
mov
daa
pushf
mov
ret
push
jmp
pop
xchg
in
lds
sti
data16
aam
push
cmpsl
pop
cmpsb
add
test
mov
mov
push
insb
fnsave
out
pop
sub
fcompl
push
add
xor
hlt
hlt
test
mov
pop
ficompl
fwait
repz
sbb
pop
and
pop
xor
rclb
pop
jnp
ljmp
dec
push
mov
and
mov
fbstp
and
pop
scas
mov
sub
popf
cmp
pop
mov
push
lods
in
cltd
addr16
cltd
ret
sub
or
loopne
sub
stos
cld
cmpsb
sub
dec
movsl
movsb
in
pop
fpatan
jle
jns
imul
xor
int3
les
sub
fdiv
outsb
dec
xchg
pushf
pop
stos
mov
cmp
fisubrs
int3
stos
jge
xor
ds
jp
cmpsb
xchg
mov
sub
addr16
and
cld
fwait
pop
gs
pop
cmc
in
push
mov
jnp
sub
and
push
popf
loopne
sarl
int3
int3
jmp
mov
jae
dec
inc
bound
shl
sub
mov
out
or
jge
xchg
jecxz
and
mov
stc
dec
cmp
fwait
add
sbb
andl
cld
movsl
dec
mov
mov
lret
stos
mov
mov
push
scas
sub
fnstsw
testl
sub
mov
sub
out
shlb
lret
sub
add
clc
xor
add
xchg
or
cmc
add
incb
mov
aaa
jecxz
add
push
mov
jno
ja
mov
add
fcmovnb
lret
dec
sbb
jae
pop
mov
shrb
xlat
adcb
outsb
call
shlb
scas
inc
inc
decl
jl
pop
repz
pop
loopne
ljmp
push
push
repnz
divb
into
pop
in
pop
xor
inc
scas
add
pop
pop
cpuid
pop
jg
pop
icebp
cmc
clc
outsl
inc
add
fidivl
mov
sub
repz
add
loopne
sbb
xchg
test
iret
mov
xor
or
lods
les
mov
mov
or
xlat
pop
cmp
add
push
adc
xchg
xor
shl
or
ret
push
pop
dec
gs
dec
xchg
dec
fstpt
lock
loop
add
xchg
inc
lods
xor
and
dec
lahf
push
adc
lods
or
dec
push
mov
xor
pop
movsl
mov
pop
jo
or
lret
push
sub
pop
mov
test
adc
push
push
mov
dec
clc
clc
dec
ja
aaa
out
jb
clc
mov
sti
inc
iret
call
das
inc
mov
fisubs
adc
or
inc
dec
push
cmpsb
or
loope
pop
dec
fbstp
or
and
lods
push
stos
inc
sub
cli
xchg
mov
aad
enter
in
int3
and
push
test
cmp
jnp
mov
xchg
sbb
roll
dec
mov
shl
scas
sub
mov
aad
in
in
cmp
adc
in
loop
mov
scas
daa
cmp
mov
jne
dec
sbb
test
ja
dec
fisttps
stc
jae
ss
cli
fldl
out
call
or
clc
push
das
adc
nop
cmp
add
lret
pop
xchg
movsl
jmp
mov
inc
inc
dec
das
xor
imul
xor
sub
out
pop
push
sbb
daa
fidivrl
rcrl
mov
inc
push
xchg
and
ficomps
pusha
shrl
aam
cmpsb
cld
pop
outsl
sbb
mov
int3
xor
mov
cmp
cmp
or
std
andl
sbb
mov
push
fwait
mov
sbbb
loope
mov
adc
jo,pn
test
shr
sahf
lahf
mov
popa
adcb
in
push
movsb
xor
and
clc
or
add
sbb
inc
aad
inc
lds
stc
cmp
add
xchg
addb
sub
push
adc
cmp
movsb
test
and
psllq
fs
xchg
xchg
lcall
nopl
lods
pop
mov
pop
shlb
inc
xor
mov
mov
xor
cmc
in
ljmp
sbb
push
les
xchg
adc
lcall
outsl
sahf
mov
sti
jmp
lahf
dec
inc
inc
lret
mov
add
les
shlb
push
popa
lret
and
jb
xchg
arpl
cmp
and
mov
icebp
cmpl
aaa
sbb
outsl
jge
add
add
leave
xlat
scas
xchg
aad
adc
push
add
xchg
mov
push
ret
dec
xor
andl
add
or
pop
sahf
incb
push
xchg
fimuls
in
fiadds
mov
jge
repnz
loop
sbb
adc
call
pop
mov
outsl
aaa
scas
js
adc
push
mov
mov
xor
insb
fsubr
das
test
jl
fnstenv
repz
adc
xlat
fwait
divl
pusha
mov
mov
adc
ret
xchg
ret
call
pop
jnp
mov
or
dec
dec
mull
sub
push
jl
inc
jmp
add
add
cmc
popa
dec
cmp
add
add
push
add
add
add
orb
add
push
add
addb
add
cmc
popa
dec
cmp
add
push
add
sldt
pusha
add
cmp
add
mov
add
mov
add
fadds
add
add
add
sub
add
cmc
popa
dec
cmp
add
add
add
add
js
add
add
add
nop
add
add
popa
dec
cmp
add
add
add
add
mov
xor
add
add
add
popa
dec
cmp
add
add
add
add
enter
pop
xor
add
add
add
popa
dec
cmp
add
add
add
add
lock
add
add
add
popa
dec
cmp
add
add
add
add
sbb
add
push
add
cmp
add
cmc
popa
dec
cmp
add
add
add
add
inc
add
add
add
add
popa
dec
cmp
add
add
rolb
xorb
adc
add
add
add
cmc
popa
dec
cmp
add
add
add
add
mov
add
and
add
add
add
popa
dec
cmp
add
add
add
add
mov
add
xor
add
add
add
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
inc
push
add
mov
inc
add
loopne
add
lock
add
add
add
adc
add
add
add
add
add
add
push
inc
add
add
add
je
add
add
add
add
add
add
add
ljmp
add
adc
add
add
add
incl
inc
add
adc
add
sbb
add
add
add
jmp
add
sbb
add
and
add
add
add
decl
add
and
add
sub
add
add
add
ljmp
add
sub
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
jne
xor
cs
insb
add
add
add
push
jns
inc
jb
gs
je
imul
add
jbe
jo
xor
cs
insb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
jne
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
gs
insb
xor
cs
insb
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
inc
js
add
add
add
inc
js
add
add
add
add
int3
fnsave
sub
rorb
mov
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
xchg
rolb
icebp
pop
or
clc
repnz
push
add
xorps
cli
inc
out
inc
aam
cmp
mov
loopne
dec
jecxz
call
add
sbb
ss
pop
in
hlt
jne
in
jge
int3
es
mov
je
mov
pop
jno
rep
in
dec
or
push
sub
enter
jge
mov
shl
or
inc
outsl
dec
mov
sbb
orb
xchg
or
xchg
int3
pop
hlt
iret
data16
and
and
roll
inc
stos
add
pop
sub
fwait
int
adc
popf
or
loopne
incl
js
or
setg
dec
out
or
scas
icebp
cmp
cmp
jg
icebp
cmp
mov
icebp
xor
xchg
push
hlt
and
dec
aam
mov
call
inc
add
imul
add
pop
lea
dec
cmp
repz
ds
sub
call
or
push
sub
shll
nop
pop
push
jne
and
or
pop
outsb
mov
and
movsb
cmpsb
pop
or
sbb
out
repz
or
js
pop
scas
mov
rolb
addps
sub
mov
jbe
xor
mov
push
add
add
cli
mov
or
incl
jmp
popa
andb
pop
xchg
and
bound
adc
je
cwtl
lock
cmpsl
outsb
or
or
lahf
test
adcl
add
mov
or
cmp
cltd
or
insl
std
add
je
sahf
adc
push
imul
rol
ljmp
or
adc
outsb
lods
and
inc
inc
jns
fldl
push
cltd
dec
fmull
pop
cwtl
and
sbb
adc
jge
dec
xchg
jmp
pop
movl
add
lea
or
pop
daa
push
mov
test
cmp
push
mov
clc
adcl
es
cmpsb
sub
cmpsb
mov
mov
jae
mov
sbb
bound
inc
pop
sub
mov
add
xor
in
mov
lea
push
clc
test
adc
push
jmp
mov
pop
jmp
sbb
dec
js
pusha
fmull
test
jp
dec
jae
mov
pop
lea
mov
dec
fstp
jne
out
imul
je
add
pop
push
sbb
loope
out
mov
inc
sbb
mov
mov
loop
enter
enter
sub
adc
or
mov
or
xor
xor
jmp
mov
inc
bound
mov
or
popa
jno
or
les
sub
andb
push
pushf
bound
test
sbb
das
xor
pop
rorb
fsubs
lock
cwtl
adc
sbb
inc
inc
mov
sbb
repz
jl
movsb
cs
sar
inc
jecxz
pop
decl
push
push
nop
or
incb
mov
sbb
gs
sbb
out
insl
add
jb
js
cld
in
xchg
lock
lea
mov
adc
shlb
push
imul
or
sub
inc
dec
cli
jo
fimull
mov
shl
lret
stc
xchg
jecxz
push
adc
add
push
mov
decb
jo
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
push
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
xchg
test
lock
lret
add
mov
pop
inc
dec
addb
dec
cmp
sbb
jb
xchg
pop
adc
mov
mov
sbb
mov
stos
add
push
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
mov
xchg
fstpt
enter
fs
loop
xchg
leave
fldl
fildl
push
call
cld
add
mov
lea
sbb
sbb
jo
adc
lea
test
orb
or
dec
test
push
inc
add
mov
roll
or
lcall
inc
push
xor
or
inc
mov
loopne
adc
popl
and
xor
sbb
jnp
inc
sub
iret
ds
inc
or
or
or
sbb
inc
or
or
dec
pop
inc
and
inc
adc
inc
adc
adc
mov
jnp
jno
in
cmpsb
cmp
icebp
and
lcall
das
mov
les
div
call
pop
push
push
push
loop
add
popa
adc
mov
add
cmp
lock
ficomps
adc
add
mov
lods
stos
add
cmpl
add
jae
test
mov
addl
inc
push
cli
rep
fistps
jb
xor
add
scas
repz
or
push
call
add
mov
mov
inc
xor
push
dec
iret
xchg
aaa
ret
and
push
call
mov
rorb
xchg
shrl
inc
xchg
or
shrl
nop
add
lcall
mov
test
inc
push
subb
mov
lea
push
mov
and
sub
xorb
loope
fiaddl
jg
lea
push
aas
pop
adc
mov
sbb
lahf
inc
push
push
aas
jge
test
add
stos
sbb
shlb
or
jmp
or
aaa
fisubs
and
movsl
pop
dec
inc
add
test
rorl
and
sub
pop
inc
push
aaa
sbb
setge
or
pop
pop
pop
pop
pop
ret
imul
inc
pop
sub
loopne
add
add
push
call
pop
push
or
xchg
sti
sbb
push
push
negl
ret
push
mov
xchg
pusha
xor
pop
add
add
in
pop
lods
push
jne
lds
cmp
int
rcrl
adc
xchg
lods
inc
mov
rcrl
cltd
or
je
push
inc
call
sbb
xchg
leave
add
je
les
dec
xor
push
jmp
cmp
lock
movzwl
test
jge
adc
jp
insb
inc
insb
mov
adc
add
clc
cmp
jge
rcl
movzbl
rolb
push
cld
sub
je
dec
or
xlat
jne
sub
jbe
pop
or
xor
adc
push
add
scas
pusha
inc
jmp
pop
pop
xchg
mov
xor
mov
inc
notl
sub
std
push
popf
pop
push
mov
sbbl
add
jbe
push
push
call
pop
mov
dec
aas
adc
out
shl
lods
inc
inc
pop
imul
test
inc
int
mov
adc
dec
leave
loopne
xchg
sub
or
pushf
roll
rep
shrb
jnp
add
cli
iret
movsb
push
push
sbb
stos
adc
test
fidivl
cmp
ret
add
pop
mov
pushf
sbbb
push
push
push
and
push
mov
in
es
enter
mov
pop
and
jl
add
push
mov
hlt
push
mov
jge
pop
dec
test
mov
outsl
push
push
flds
in
fnop
clc
enter
xchg
mov
inc
aam
sub
lahf
ss
sti
outsb
push
ret
pop
imul
nop
cli
cmp
jne
stc
sub
adc
repz
inc
rol
decl
movsb
stos
adc
fsub
fildll
jne
cs
cmp
xchg
ficoml
in
sub
lret
std
mov
fwait
mov
and
xchg
cmp
mov
or
or
mov
or
xor
jle
adc
push
push
or
call
sbb
mov
and
cmp
jae
jbe
jne
in
sbb
subl
xchg
inc
adc
dec
sbb
shlb
sub
pop
test
mov
jmp
arpl
jmp
sbb
into
jge
mov
adc
jp
jge
jbe
testb
dec
lahf
mov
je
push
movsb
jg
test
cmp
cmp
jmp
roll
je
data16
inc
jecxz
dec
enter
push
dec
mov
push
and
pushf
aad
test
adc
add
xor
icebp
mov
adc
dec
or
inc
jmp
mov
cld
insl
ror
sbb
inc
cmp
mov
jl
sbb
sub
jmp
push
lea
mov
leave
pusha
cmp
push
orb
je
js
push
pop
sbb
arpl
sub
or
in
xor
and
scas
adc
lcall
mov
fiadds
pop
outsl
cmpsb
dec
dec
scas
icebp
inc
jo
insb
imul
jb
mov
adc
out
and
jne
fldt
adcb
jecxz
cmp
aas
fs
and
stc
in
fnstenv
pop
scas
mov
imul
inc
xor
sub
insb
and
or
daa
arpl
mov
fwait
push
xor
push
dec
fidivrs
popa
addr16
inc
outsl
js
xorl
js
data16
imul
fwait
insb
add
inc
js
je
xchg
movsb
jo
insb
inc
shrb
popa
outsb
fs
jo
dec
jo
lods
sbb
cmp
insb
cmpsb
sbb
jl
imul
add
mov
cltd
lcall
jge
push
add
insl
cmp
and
jmp
push
cmp
dec
dec
xor
dec
arpl
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
mov
dec
add
or
add
add
add
inc
add
inc
add
add
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
fs
inc
add
add
add
inc
add
add
add
add
add
fldl
add
push
mov
sub
mov
mov
xor
inc
push
mov
push
mov
shl
mov
mov
push
mov
shl
mov
add
mov
shl
dec
dec
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
rep
mov
push
mov
or
pop
mov
movzbl
shl
or
inc
dec
mov
jne
cmpl
mov
jbe
jmp
mov
mov
mov
mov
and
shl
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
movzbl
mov
and
push
pop
sub
xor
shr
mov
shl
mov
inc
add
imul
cmpl
lea
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
cmp
lea
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
test
mov
jne
jmp
sub
sub
mov
shr
sub
test
mov
mov
lea
je
cmp
jl
jmp
cmp
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
mov
add
shl
mov
mov
add
cmp
mov
lea
jae
mov
shl
mov
mov
movzbl
shl
or
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
xor
cmpl
mov
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
xor
movl
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
push
movl
jmp
sub
sub
mov
shr
sub
mov
add
push
movl
pop
mov
mov
mov
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
shll
mov
jmp
sub
mov
sub
mov
shr
sub
mov
mov
lea
mov
decl
jne
mov
xor
inc
mov
shl
sub
add
cmpl
jge
addl
cmpl
jge
mov
jmp
push
pop
mov
shl
lea
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
mov
lea
decl
jne
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
lea
shl
movl
xor
inc
mov
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
shr
sub
mov
sub
or
mov
lea
shll
decl
jne
inc
mov
je
mov
mov
addl
sub
add
decl
mov
mov
incl
inc
cmpl
mov
mov
jne
mov
cmp
jb
mov
mov
pop
pop
mov
xor
pop
leave
ret
push
mov
sub
push
mov
movzbl
push
cltd
push
pop
idiv
push
pop
push
push
movzbl
mov
cltd
idiv
mov
mov
mov
mov
mov
add
mov
shl
add
shl
push
push
call
mov
mov
lea
push
push
pushl
mov
push
add
push
lea
push
call
push
push
pushl
call
mov
pop
pop
leave
ret
add
push
add
add
add
add
inc
add
and
add
or
add
inc
add
add
add
inc
mov
add
add
loopne
add
adc
add
add
add
adc
add
xor
add
jnp
add
or
add
add
add
iret
ds
inc
add
incl
loopne
add
outsb
add
in
or
add
add
add
add
add
ds
inc
add
incl
inc
add
sbb
add
pop
dec
add
add
add
add
add
iret
ds
inc
add
incl
and
add
adc
add
adc
add
add
add
add
add
ds
inc
add
incl
adc
add
adc
add
sahf
add
inc
js
add
and
add
and
add
adc
add
add
add
add
add
ds
inc
add
incl
adc
add
adc
add
add
add
add
add
add
add
push
inc
add
add
call
add
add
add
add
add
push
push
call
pop
sub
lea
mov
add
sub
cld
mov
mov
mov
add
lea
lods
stos
lods
stos
lods
stos
lods
stos
nop
cmpl
je
mov
test
je
mov
add
mov
add
rep
mov
lea
add
add
add
lea
push
call
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
push
call
mov
push
call
lea
test
jne
push
call
push
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
add
push
push
call
test
je
mov
mov
test
jne
lea
jmp
test
je
push
and
push
lea
push
lea
push
call
jmp
mov
add
inc
inc
push
push
lea
push
lea
push
call
lea
push
lea
push
push
push
call
push
call
mov
mov
cmpl
jne
mov
mov
mov
add
movb
add
sub
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
nop
nop
nop
nop
nop
nop
push
call
push
push
pushl
call
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
push
push
call
pop
sub
mov
mov
add
push
call
mov
mov
mov
add
add
xor
add
je
push
mov
add
push
pushl
call
stos
pop
add
jmp
add
add
jne
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
lods
test
je
add
mov
jmp
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
movzwl
test
jne
test
je
push
push
mov
xor
mov
movzwl
mov
add
cmp
jge
mov
inc
movzbl
add
sub
mov
je
dec
mov
jne
mov
cmp
jne
shr
rol
xchg
sub
mov
add
add
add
inc
jmp
pop
pop
xor
add
je
cmp
je
call
pop
sub
lea
jmp
jmp
push
mov
mov
add
sub
pushw
push
push
call
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
mov
mov
movzwl
test
je
push
mov
mov
mov
add
mov
sar
rep
add
and
rep
mov
mov
add
xor
push
mov
sar
rep
add
and
rep
pop
mov
mov
add
mov
mov
sar
rep
add
and
rep
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
movzwl
mov
push
push
push
movzwl
test
je
push
mov
mov
mov
mov
sub
mov
add
mov
sar
rep
add
and
rep
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
mov
mov
dec
mov
push
push
pushl
call
lea
push
pushl
pushl
call
mov
inc
je
xor
add
je
dec
mov
pushl
pushl
popl
popl
jmp
pop
push
mov
add
cmp
jne
add
jmp
mov
mov
sar
rep
add
and
rep
mov
add
shr
shl
sub
mov
xor
push
mov
sar
rep
add
and
rep
pop
pop
pop
pop
pop
add
dec
jne
xor
pop
pop
pop
leave
ret
pop
pop
pop
pop
xor
inc
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
xor
cmp
jne
cmp
je
add
je
add
mov
add
mov
test
je
add
push
push
push
push
call
inc
jne
dec
pop
pop
pop
leave
ret
add
jmp
insl
jae
bound
add
in
add
push
push
push
call
pop
sub
mov
mov
xor
mov
xor
inc
inc
mov
pushl
call
mov
mov
test
jne
dec
jne
xor
dec
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
jne
mov
test
jne
mov
movl
mov
test
je
push
mov
test
je
and
push
jmp
mov
add
xor
mov
push
inc
inc
push
pushl
call
pop
test
je
mov
mov
add
add
jmp
xor
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
mov
mov
mov
sub
mov
xor
lods
test
je
cmp
je
inc
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
add
xor
mov
lea
add
mov
shr
shl
push
lea
push
push
push
push
call
mov
test
je
sub
mov
pop
lea
push
pushl
push
push
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
mov
add
lea
mov
shr
shl
push
lea
push
push
push
push
call
mov
mov
pop
lea
push
pushl
push
push
call
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
jo
insb
imul
and
jb
jb
inc
jo
insb
imul
and
jb
jne
je
add
and
outsl
arpl
jne
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
add
add
arpl
add
jne
gs
xor
dec
gs
popa
addr16
outsl
js
add
jo
imul
gs
gs
xor
add
imul
jae
inc
insb
outsl
jae
dec
popa
outsb
fs
add
outsb
push
jb
arpl
jae
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jb
jne
insb
push
jb
je
arpl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jbe
add
lcall
adc
push
add
insl
push
add
rcrl
add
jmp
add
push
push
add
cmp
add
dec
push
add
add
add
jp
add
pushf
sbb
adc
