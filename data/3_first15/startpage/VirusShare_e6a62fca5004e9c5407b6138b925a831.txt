mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
frstor
dec
jmp
les
or
cmp
std
push
out
push
cmpsb
test
sub
mov
mov
loop
insl
fwait
push
je
clc
in
ljmp
je
xchg
xor
or
mov
lods
popf
je
pop
andl
jl
dec
cmpsl
add
or
xchg
imul
pop
mov
sbb
xor
and
xchg
adc
dec
imul
outsb
xchg
push
xchg
sbb
cwtl
das
jg
jb
mov
pusha
dec
cli
adc
xor
sbb
and
shlb
xchg
outsl
dec
aaa
sub
dec
cmp
fsts
movsl
mov
pop
cmp
test
sub
mov
push
mov
mov
lods
sbb
xor
sahf
pop
add
sbbl
xchg
mov
mov
cs
repnz
pushf
cmpsb
test
xchg
rcrb
dec
sarb
adc
fisubrs
daa
adc
push
divl
rcrl
inc
pop
aad
mov
dec
gs
popa
pop
and
aad
mov
lcall
pop
xor
inc
jns
aas
mov
xchg
push
jnp
add
into
cmp
int3
mov
nop
cmp
jle
xor
sti
jecxz
or
push
lods
lods
pusha
lods
mov
je
mov
mov
pop
or
pushf
lock
out
fcomip
mov
popf
pop
mov
into
pop
cmp
xor
lods
xchg
jl
stc
iret
iret
test
decb
xor
lret
jp
jb
ret
xor
and
inc
mov
and
xchg
push
fdivl
xchg
loopnew
jp
rcrb
inc
data16
lds
sbb
sbb
inc
scas
addr16
bound
pushl
jae
or
sub
mov
pop
dec
scas
xor
dec
push
jl
insb
rorb
es
dec
ret
or
lret
out
inc
aaa
pop
sbb
aas
sbb
mov
jnp
not
add
xor
jno
rolb
or
push
adc
adc
jl
out
fcompl
mov
fucomip
add
loope
or
inc
call
ret
rorl
pop
mov
lret
cmc
shll
dec
push
and
push
pop
sub
sbb
sub
mov
pushf
xchg
fiaddl
push
dec
loop
jge
push
push
inc
lahf
sbb
xchg
daa
xlat
mov
mov
orl
fwait
add
das
or
and
mov
in
jnp
jl
mov
je
xlat
aaa
xlat
push
push
inc
lods
inc
ljmp
test
pushf
jbe
xchg
cwtl
flds
cltd
adc
jns
imul
pop
es
pop
push
cmp
push
cld
out
mov
fsub
sahf
into
fs
fisubs
cmp
js
push
jnp
test
ds
pop
stc
adc
cmpsb
outsb
stos
inc
fsubrs
hlt
push
push
fucom
cld
mov
mov
mov
dec
pop
enter
or
lods
ss
dec
test
cs
xchg
lea
xchg
lret
fcomps
repz
imul
pop
ret
pop
push
in
flds
hlt
daa
and
jb
aaa
mov
cmp
jns
movsl
pop
pop
js
scas
iret
fwait
add
ss
js
xor
sub
xlat
sub
fisubl
push
cmp
jmp
sub
xchg
add
jp
shl
mov
cmpsl
dec
adc
fwait
sahf
mov
push
daa
xchg
jo
xchg
pop
inc
hlt
daa
inc
rcrb
adc
lods
push
lahf
loopne
mov
pop
mov
xchg
in
sub
mov
xchg
and
jp
shrl
iret
fs
add
les
push
out
sbbb
fstpt
lret
and
sbb
data16
test
loop
mov
fwait
push
pop
lahf
icebp
scas
jge
mov
pop
xor
in
movsb
adc
sub
es
cld
sub
nop
add
mov
cmp
xor
subb
repz
push
movsb
mov
mov
inc
jb
xchg
lea
cwtl
in
add
pop
pop
mov
mov
loopne
cmp
xchg
movsb
mov
xchg
bound
mov
mov
lods
loope
cwtl
adc
fcmove
ss
loope
aam
jmp
mov
stos
out
pop
add
and
or
arpl
dec
xor
adc
push
mov
mov
cld
inc
cmp
jbe
mov
adc
mov
call
xlat
lock
dec
dec
jnp
push
jecxz
or
push
xchg
rorl
adc
lcall
insl
loop
pop
sti
dec
addl
ljmp
fdivr
in
cmp
in
jmp
das
jns
cs
test
pop
xchg
out
enter
js
add
mov
in
xlat
aad
out
mov
sub
sub
das
mov
dec
dec
pop
jae
xchg
nop
ja
data16
ljmp
sbb
daa
pop
inc
mov
out
mov
add
int3
mov
loop
xchg
les
sub
addl
incb
or
push
pop
dec
inc
dec
dec
ds
fs
jle
cld
push
sahf
sar
push
pushf
outsl
stos
movsb
pop
into
cmp
jl
mov
and
test
aam
aam
ror
test
idiv
xchg
ret
mov
add
xlat
xor
insl
ret
sbb
mov
mov
lea
jne
enter
adc
enter
pop
sbb
push
mov
scas
pop
and
adc
pop
jle
add
lcall
mov
sbb
inc
lock
iret
adc
mov
ja
leave
bound
addb
lods
add
sbb
cli
in
stos
push
xor
imul
dec
aaa
pop
xor
xchg
xchg
ret
cmp
bnd
dec
inc
push
mov
and
push
inc
leave
movsb
out
sbb
cs
aas
sbb
scas
out
rol
rcr
xor
mov
mov
mov
lods
loopne
mov
adcl
fnstsw
call
or
xchg
dec
mov
cmp
xlat
and
jecxz
inc
jmp
jae
mov
xchg
outsb
shlb
sub
popf
pop
xchg
out
xor
xchg
lods
push
mov
inc
xchg
jae
insl
insb
ret
mov
inc
xchg
fimuls
mov
cmp
fists
xchg
leave
ret
lds
sub
js
iret
data16
and
sbb
jmp
push
shll
lods
enter
hlt
mov
xor
int3
popf
dec
popf
data16
xchg
jns
rcrl
mov
or
out
inc
mov
jmp
dec
adc
repnz
int
pusha
gs
mov
sbb
sub
lods
jnp
loopne
jo
int
mov
pop
dec
out
jmp
outsb
xor
push
and
rcr
cmc
in
xchg
adc
jmp
and
shlb
in
dec
and
add
cmpsb
and
and
imul
in
mov
jbe
mov
sbb
clc
inc
mov
cmp
test
test
xchg
mov
dec
mov
mov
and
and
test
xor
jp
clc
mov
dec
push
dec
in
pop
jg
adc
inc
xchg
pushf
sbb
ja
push
xor
add
movsl
mov
cli
lds
pop
jb
mov
cmpsb
les
subl
bound
and
jno
push
fstpt
loop
neg
xchg
int3
sub
je
roll
mov
cmpsb
pop
popa
sbb
insb
adc
and
in
adc
pop
push
enter
mov
xor
xor
es
push
cmp
nop
cld
mov
pop
jmp
add
xchg
lods
push
xor
lahf
push
xchg
jae
ss
mov
pop
outsl
in
hlt
fwait
add
xorb
push
jno
ret
pop
add
jg
jecxz
and
or
jge
out
js
lret
xor
shlb
jge
pop
dec
sub
jl
xor
mov
add
and
jne
fists
fistps
add
cmp
sbb
out
mov
jae
sti
add
inc
inc
fldl
push
stc
push
ret
mov
cmp
sub
imulb
fisttps
pop
cmp
and
add
mov
cmpsl
cmp
or
and
rolb
mov
sahf
sbb
out
push
jns
dec
enter
pop
mov
into
int3
ret
jle
iret
sti
lret
daa
sahf
insl
fldt
and
inc
pop
arpl
dec
inc
jae
pop
scas
int3
mov
test
pop
pop
out
mov
inc
mov
cmp
sbb
popa
arpl
mov
xchg
xor
add
andl
test
mov
pusha
inc
adc
dec
mov
mov
insl
cmp
mov
ss
ds
xor
xchg
inc
call
mov
ret
in
mov
add
sbb
pop
or
jecxz
test
bound
mov
dec
pop
jmp
pushf
adc
movsl
jmp
push
fsubl
loop
test
xchg
loope
fwait
aas
dec
or
dec
pop
loope
jnp
jne
hlt
push
and
aas
sbb
movsl
add
push
stos
pop
gs
inc
add
push
xor
fisttpl
inc
nop
aaa
mov
cmp
dec
jg
fimuls
cmp
test
clc
xchg
mov
mov
cs
cmp
adc
add
mov
pop
or
add
lret
or
leave
and
sub
loope,pt
lret
es
xor
out
out
iret
shl
inc
cmp
sub
lret
ret
sub
adc
push
int3
daa
test
mov
fbstp
inc
sar
or
add
aas
ss
mov
mov
std
mov
cmpsb
ret
sub
add
sbb
sbb
gs
push
jg
insb
sar
cmp
xor
dec
push
outsl
mov
dec
xchg
lcall
faddp
adc
sbb
mov
xor
leave
cltd
xor
inc
push
mov
mov
xchg
faddl
adc
ret
cmpsl
cmp
je
repnz
xchg
cmp
leave
sub
push
mov
xor
jne
sub
sbb
lcall
lods
sbb
cli
sbb
jg
sub
and
and
jle
les
out
into
xor
adc
pop
loopne
and
mov
les
mov
xchg
mov
daa
xchg
in
sbb
pop
sub
add
aas
mov
dec
jmp
dec
pop
scas
jle
or
xor
out
mov
out
rcrl
xlat
ret
negl
scas
mov
push
mov
les
xor
lret
adc
xchg
int
cs
fiadds
or
fists
mov
push
lock
les
dec
orl
dec
fwait
dec
clc
test
mov
mov
add
push
fsubs
lods
and
orl
fistl
add
cmp
or
andb
scas
jne
jnp
cmpsl
test
es
xor
push
loop
scas
ljmp
lds
in
int
rep
and
jno
adc
inc
sub
inc
inc
popa
shl
out
push
xlat
jns
aam
mov
fildll
pop
adc
shrb
negl
mov
sti
dec
pop
push
xchg
popf
cmp
pop
push
add
ja
aas
or
jb
aad
popf
push
les
pushf
fistps
popa
stos
insb
ja
faddp
push
mov
ja
add
movsl
adc
cmp
enter
test
imul
mov
jmp
lret
jns
and
imul
cmp
jge
pop
shll
xchg
xor
add
mov
into
inc
out
pop
pop
pop
mov
jle
decb
mov
adc
das
in
and
mov
or
ret
fcomps
fadd
xchg
pop
mov
sarb
out
jle
mov
rcr
cmc
xlat
sahf
sarl
inc
repnz
inc
or
lods
fisubrl
add
data16
jg
cltd
insl
dec
mov
or
iret
xor
xchg
jb
pop
adc
addr16
and
dec
lods
aas
dec
fmuls
dec
xor
out
mov
lds
push
cmp
and
cmc
into
icebp
shrb
cmpsl
out
fidivrs
push
mov
in
and
enter
mov
push
push
jns
je
in
and
sbb
mov
inc
inc
cvtps2pd
pop
arpl
xor
popf
mov
into
add
cmc
gs
push
dec
stos
sub
mov
arpl
vunpcklpd
xor
push
ret
mov
inc
dec
pop
push
or
xchg
and
cmp
jp
xchg
pop
sub
bound
sbb
mov
adc
lahf
xchg
mov
xchg
xchg
ja
iret
mov
mov
nop
es
sbb
ja
mov
inc
shrb
and
loop
mov
mov
stos
adc
add
pop
stc
mov
repnz
mov
out
insb
test
sub
orb
mov
sbb
push
or
movsb
cmp
in
and
jecxz
lock
stc
mov
nop
adcb
popf
dec
data16
jmp
sti
push
test
pop
push
fstps
pop
aad
addl
jbe
xor
hlt
sbb
sbb
mov
inc
je
mov
jno
mov
mov
jecxz
outsb
popa
iret
stc
mov
mov
insb
sub
int3
adc
cmp
rclb
aaa
icebp
jl
pop
mov
lods
push
pop
jp
test
xor
and
fbld
push
mov
fwait
cmpb
loopne
loop
push
or
push
arpl
jne
int
repnz
xchg
js
repnz
mov
aas
push
decb
or
mov
lods
imul
mov
lds
xchg
inc
sub
push
push
pop
arpl
xlat
movsl
addb
push
adc
jbe
dec
add
fsts
rol
dec
clc
cmpsb
xor
stos
imul
imul
jecxz
je
sbb
lahf
pop
rcrl
jae
aad
dec
mov
scas
std
andb
mov
outsb
mov
aad
lods
ss
cmpsb
adc
outsb
jno
call
mov
lret
sahf
std
cmp
jmp
pushf
aam
aad
dec
mov
lret
pop
jmp
in
adc
add
mov
out
jmp
aad
xchg
in
popl
push
dec
lret
jbe
pushf
mulb
ja
popf
rorb
stc
nop
stc
jmp
cld
mov
xorb
cmp
ret
sahf
cmp
ss
push
popa
xor
adc
mov
aam
nop
lea
xor
jecxz
jl
jmp
sbb
inc
jg
fistpl
es
out
mov
add
int3
insl
dec
inc
bound
and
jecxz
movsl
lcall
or
dec
pop
cmpb
ficompl
jmp
push
push
loop
fidivrs
orb
out
test
pop
inc
jge
push
fdivrs
mov
add
inc
insl
mov
pop
push
xor
sub
addl
adc
cmp
imul
sbb
add
pop
xchg
xorl
cli
fstps
sub
sbb
lds
inc
jno
shl
add
mov
push
inc
jge
scas
movsb
jo
fcompl
fisubrs
icebp
decb
xor
loope
or
fdivs
inc
pop
inc
dec
pop
fisubrl
lock
cmp
inc
push
imul
push
test
xchg
in
fcomps
fidivrs
loope
test
daa
ljmp
dec
in
fs
xchg
sbb
mov
lea
test
xchg
pop
jns
add
lea
aad
aam
pop
insb
maskmovq
imull
outsb
cmp
pop
push
cmp
repnz
popf
shll
shlb
sbb
ds
fs
cs
popf
mov
cmpsb
fldenv
repz
push
aas
xchg
lahf
xchg
adc
scas
push
xor
fsubr
push
loope
arpl
mull
fdivp
add
mov
scas
cmp
mov
aad
jbe
xchg
mov
sti
jl
imul
xor
cmp
mov
aas
loop
int
sbb
push
sub
adc
ds
cmp
push
adc
pop
mov
mov
inc
ss
ret
xchg
inc
scas
sbb
andb
xchg
icebp
mov
insl
testl
repnz
mov
sbb
and
stos
enter
sbb
subb
pop
mov
push
leave
data16
test
ret
sar
xor
out
cmpl
pop
iret
mov
xchg
and
and
or
fimuls
xor
inc
adc
add
and
jno
xlat
push
add
std
inc
add
or
movsb
stos
pushf
sub
fnstsw
movsl
movsl
xchg
lds
push
mov
push
jne
xor
nop
cmp
pop
push
push
xchg
ja
cmpsb
mov
movsl
shrb
add
inc
ret
adcl
fwait
in
fbld
xor
jbe
cmpsb
leave
movsb
outsb
push
gs
inc
dec
aam
sbb
lahf
xchg
loop
jne
adc
js
insb
inc
cmp
inc
test
int
pop
pop
pop
nop
pop
test
or
push
add
xor
lret
xor
outsb
push
add
jp
mov
daa
or
pop
sahf
pushf
arpl
negb
aaa
pop
js
mov
out
scas
add
xchg
pop
sub
cmp
nopl
lret
sbb
shll
fcmovu
jns
aad
popa
jmp
mov
cmp
loope
push
testb
rol
xchg
outsb
xchg
jg
cmp
bnd
jg
fwait
mov
scas
push
mov
mov
cmp
loopne
xchg
ja
ja
std
mov
adc
xchg
mov
xor
mov
int3
pop
and
outsl
jno
aam
lret
inc
mov
data16
or
xlat
and
xor
xor
test
mov
cli
call
xchg
lcall
jle
fs
or
dec
pop
xor
mov
cmp
dec
jb
test
cs
pop
ret
outsl
insl
inc
loopne
sahf
ds
test
es
jge
mov
ljmp
push
mov
dec
push
imul
int3
sahf
xor
lret
xor
sub
inc
pop
movsl
mov
mov
sbb
adc
cmpsl
jae
sti
xchg
lret
test
mov
adc
jno
cmp
sub
lcall
cwtl
fiadds
bound
jnp
add
imulb
cmpsb
lahf
imul
xlat
lret
repz
lahf
les
out
out
inc
jmp
mov
cmp
iret
mov
sub
cld
dec
cmpsl
add
jmp
mov
push
jge
movsl
lds
cs
sbb
mov
repz
iret
rcll
pop
mov
cmpsl
jl
mov
notb
dec
add
dec
adc
popf
jno
sub
shrb
in
cmp
stc
jecxz
loop
in
out
xor
dec
ret
mov
hlt
pop
mov
pop
int
aaa
lods
mov
or
aad
outsb
insb
leave
aas
xor
jge
and
xchg
mov
mov
lock
shl
push
xor
xchg
mov
aas
rcl
or
cmp
push
push
cwtl
cs
cmc
popa
cs
mov
push
mov
cmp
adc
adc
bound
xchg
aas
inc
xlat
xchg
pop
mov
sbb
or
movsl
xlat
and
jae
insl
pop
xor
mov
and
popf
ja
xchg
sahf
jae
mov
add
aaa
mull
cmp
cmc
push
pop
rcll
pop
cld
outsl
cltd
sub
add
hlt
aam
adc
test
out
in
cmpsb
mov
lret
xor
sbb
xlat
cmp
in
sbb
push
pop
nop
mov
lods
es
sti
insl
js
aaa
adc
icebp
insl
fsubp
cmpsb
xchg
xor
lret
addl
subl
pop
mov
mov
enter
add
ja
gs
hlt
adc
or
call
jbe
adc
mov
mov
xor
call
cmp
xchg
pop
aaa
sbb
inc
xorb
inc
xchg
mov
aam
imul
adc
pop
mov
jmp
or
adc
jb
cmc
pop
rolb
fmul
adc
inc
mov
fbstp
mov
pushl
jno
std
lret
add
mov
rcll
les
xor
test
or
mov
jns
dec
ljmp
arpl
sbb
sub
scas
and
sbb
sub
xchg
xchg
xchg
mov
jno
js
mov
cmp
int3
aad
sub
or
movb
xchg
js
int
lea
hlt
sbb
iret
add
push
inc
shll
or
cwtl
xor
rorl
sbb
adc
dec
mov
inc
push
andb
xchg
or
jle
repz
lock
cmc
push
out
push
jl
jnp
pop
cmc
call
xchg
cmc
pop
adcb
lret
scas
xchg
addb
aad
fnstcw
inc
push
pop
inc
mov
imul
int3
pinsrw
ja
cmp
mov
cmp
je
inc
lods
push
mov
rclb
aam
mov
lcall
mov
jo
inc
sbb
fsubrs
mov
or
mov
add
js
rcl
lods
jb
add
shr
inc
jp
in
pop
sub
inc
dec
cmp
add
dec
adc
xchg
or
jbe
out
lret
xor
call
xchg
arpl
stos
out
popf
adc
jne
lret
sahf
aam
jg
es
in
mov
xchg
adc
test
in
mov
movsl
inc
out
push
pop
xor
inc
jbe
lret
int
mov
test
pop
jmp
lcall
jnp
dec
out
xlat
jno
insl
xchg
repz
jge
push
pop
jp
or
pop
aam
adc
in
fiaddl
xor
cmpsb
push
add
xlat
lea
jmp
mov
mov
in
sbb
or
xor
mov
lea
adc
in
addb
in
push
inc
lret
lods
mov
and
xchg
divl
fwait
sbb
test
mov
int3
inc
mov
call
subl
sub
mov
stc
adc
loop
dec
mov
jle
imul
jge
hlt
jmp
pop
jo
lods
stos
or
push
call
add
mov
adc
rorb
xlat
sbb
cmp
or
frstor
cmc
pop
adc
sub
inc
sub
dec
and
xlat
je
fidivrl
je
dec
jns
lret
ja
adc
jo
push
inc
mov
out
inc
test
push
mov
inc
pop
push
ss
repz
inc
dec
call
or
adc
daa
mov
dec
inc
jmp
dec
or
sub
ja
mov
lock
in
in
push
ret
imul
mov
mov
ja
fucomp
push
mov
xor
ljmp
jno
jp
xchg
mov
stos
mov
dec
iret
pop
data16
loope
mov
add
scas
pop
or
pushf
test
scas
pop
mov
push
mov
mov
nop
cmpsl
je
dec
jbe
adc
popa
xor
xchg
pop
mov
push
push
sub
nop
test
add
mov
fsubl
mov
push
push
divb
sbb
clc
outsb
pop
adc
pushf
cmp
sbb
test
jne
xlat
adc
fdivrl
jno
lret
pop
xor
jg
out
jns
xor
clc
adc
sahf
fldt
pop
and
xchg
fisttpl
cmpsl
or
in
mov
ror
dec
les
in
cwtl
lea
and
mov
and
fistpll
pop
mov
push
and
mov
or
out
lea
popa
xchg
in
stos
clc
jo
clc
mov
or
push
repz
inc
movb
cmp
lret
fistpl
cmp
addl
add
aaa
and
mov
jno
pop
scas
out
mov
cwtl
or
xchg
movsl
xchg
sub
hlt
mov
jmp
mov
outsl
stc
mov
sbb
push
mov
js
push
xor
out
push
sub
out
mov
sahf
rcl
call
cmp
mov
or
xor
aad
popa
notl
out
leave
mov
fbld
xorl
es
xchg
push
lret
add
movsl
pushf
movsb
inc
loopne
repz
and
outsb
or
clc
stc
push
enter
add
dec
inc
cs
stos
mov
stos
fnstenv
data16
mov
mov
cmp
lock
or
xor
pop
sbb
out
stos
loope
mov
cli
and
stc
jl
and
xchg
xchg
xlat
pop
divb
inc
imull
dec
jge
pushf
sub
fstpl
push
mov
loope
insb
out
and
fists
add
or
mov
out
dec
xchg
push
orl
fldenv
sub
jbe
xchg
add
in
lock
mov
jl
sbb
adc
stos
sbb
dec
aam
movsb
dec
inc
mov
cmpsb
in
push
xor
adc
adc
bound
cmp
pop
das
mov
or
xor
jg
xor
lods
ds
push
pop
fbstp
sbb
adc
into
das
pop
mov
ficompl
not
in
sti
xchg
xchg
lock
rolb
or
psubusb
xchg
sub
push
push
divb
pushf
push
ret
ljmp
test
xlat
sub
jg
or
out
lret
jnp
inc
sbb
fucomp
mov
jecxz
test
jle
shll
pop
repz
xchg
xchg
ljmp
lcall
jae
cwtl
or
add
pop
pop
movsb
clc
shll
ja
push
clc
inc
aam
or
into
mov
push
pop
push
cmp
out
mov
push
sub
cmc
add
inc
cld
mov
in
push
or
inc
sbb
mov
lret
aaa
outsl
mull
jge
cmp
shll
andb
ss
mov
out
mov
add
daa
add
arpl
ret
mov
mov
sub
scas
loop
pop
add
xor
lods
push
sub
or
loope
jbe
es
popl
jp
in
call
in
aas
mov
push
addb
sub
sub
cs
pop
jle
mov
or
dec
ja
cmc
or
in
sub
aad
outsl
shll
ret
push
out
stos
movsl
sbb
and
adc
cmovs
xor
lcall
and
je
ficoms
sbb
out
push
lea
ds
sarb
cmp
xchg
mov
xchg
adc
and
enter
std
in
lds
pusha
and
mov
mov
cmp
clc
jl
push
sbb
imul
out
sub
pop
sti
and
dec
jno
lds
or
ljmp
jne
cwtl
lea
clc
push
fstl
adc
gs
sub
jno
adc
xor
sbb
loop
ret
add
mov
dec
xchg
push
std
sahf
mov
les
subl
mov
call
dec
inc
cmc
inc
mov
push
jl
ljmp
mov
mov
jp
add
sub
sub
dec
js
xchg
jns
sub
fs
jecxz
rcr
mov
fimull
cs
xchg
jp
fistpll
xchg
jbe
xchg
ljmp
push
addr16
push
shlb
xlat
jnp
and
or
or
aas
loope
fwait
mov
scas
inc
sbb
dec
add
pushl
adc
mull
ss
mov
pushf
pop
fists
mov
xchg
jmp
ds
mov
insl
nop
add
xor
sbb
aas
push
mov
jae
fimull
sarb
adc
stos
push
rclb
xchg
loope
sub
sbb
rorb
mov
pop
cmp
jnp
dec
cmp
xchg
sub
jl
mov
les
jb
ljmp
cmp
test
inc
jnp
push
notl
cmp
ror
push
mov
mov
std
xchg
loope
pushl
clc
mov
inc
scas
and
sbb
or
cmpsb
mov
call
xchg
outsb
movsl
test
jno
fidivs
sti
pop
sbb
icebp
jo
cmpsb
pop
popa
mov
sbb
cmpsb
add
inc
sbb
cli
mov
pop
clc
fldt
rcrl
push
into
cmpsb
mov
dec
pop
mov
push
cltd
decl
mov
fidivrs
dec
insb
lds
adc
shlb
or
arpl
pop
pop
add
outsb
add
jp
in
jmp
adc
lods
add
sbbb
xchg
mov
ss
inc
jmp
jecxz
aad
icebp
sub
ret
or
stos
out
fsubrl
test
and
pavgw
ss
mov
add
jae
mov
mov
addr16
mov
add
mov
pop
mov
mov
xchg
push
imul
jbe
or
notb
mov
mov
fistpl
arpl
aas
pushf
mov
dec
pusha
or
lret
push
pop
dec
fdivrl
push
add
xor
xchg
jl
mov
cmp
pop
pushf
es
xor
jo
ja
cwtl
sbb
or
cmp
xchg
hlt
pop
shrl
pop
clc
sbb
js
stos
fdivrl
fs
cmp
data16
sbb
out
push
adc
rcrb
fisubl
jmp
jmp
or
sub
adc
dec
inc
jmp
paddusb
outsl
in
cmp
xlat
cmp
adc
push
jle
inc
leave
xchg
push
jge
fs
sbb
dec
lods
cld
pop
and
out
push
push
jns
inc
loope
call
lock
dec
je
notl
negb
addr16
and
in
outsb
rcrl
pop
stc
cld
cmp
xor
loopne
inc
inc
arpl
outsb
mov
cmp
pushf
sbb
mov
js
inc
cmp
mov
cmp
insl
mov
jae
xchg
push
shrb
mov
outsb
ret
fs
add
mov
in
xchg
lret
ficoms
rol
daa
adc
mov
xor
js
push
mov
mov
mov
push
daa
cltd
out
and
in
mov
sub
jbe
filds
jo
popa
pop
gs
mov
lock
fldcw
mov
jns
clc
cmp
mov
and
mov
push
movsb
in
inc
pop
or
sar
jb
mov
sub
pop
sub
cs
es
sub
jb
xor
jp
outsb
xchg
pop
mov
adc
push
sbb
push
xor
insl
mov
cmp
fwait
divl
sub
scas
xlat
adcb
rolb
jns
sbb
lahf
ds
xor
mov
pushf
stos
pop
adc
call
negb
movl
pop
stos
jne
mov
leave
xor
dec
xor
dec
mov
pop
filds
inc
sub
cmp
jmp
pop
jmp
nop
jo
idiv
jns
cmp
jge
call
cmp
and
adc
add
adc
pop
mov
fimuls
sub
push
adc
push
in
mov
lods
jne
out
inc
lods
jp
jnp
cmp
dec
fs
xchg
lds
incb
xchg
fwait
cmp
data16
pop
outsl
and
loop
pop
push
and
pusha
jbe
fstpl
jbe
mov
sbb
stos
xchg
out
mov
cs
fs
jmp
shll
jle
and
in
pop
xor
xchg
sbb
pop
mov
mov
dec
imul
in
mov
imull
das
sub
or
imul
clc
clc
inc
ja
xchg
push
mov
sbb
inc
scas
sub
mov
xlat
jne
dec
hlt
loope
pop
mov
cmc
push
aam
sub
sbb
mov
pop
and
outsb
lock
xchg
shlb
pop
int
mov
add
add
repz
lret
fiadds
nop
sub
dec
loop
iret
mov
fists
and
mov
mov
xorl
mov
fiaddl
aaa
mov
add
sarb
or
and
push
imul
call
into
adcb
or
mov
mov
mov
xchg
cwtl
mov
push
sahf
popf
cmpsb
mov
mov
das
lea
cmp
loopne
push
fs
jle
popf
ja
add
adc
aad
dec
bswap
mov
push
mov
lods
leave
icebp
pushw
fistpll
cmp
das
je
pop
push
int
sbb
ret
cmp
xchg
ret
cmc
loop
jmp
pop
pop
les
sub
push
lret
dec
dec
aam
sbb
movsl
mov
frstor
mov
and
dec
cmpsl
push
xor
insl
sbb
sub
mov
mov
imul
in
lds
fucomip
cmp
gs
cmp
inc
fwait
lea
fwait
cwtl
mov
pop
pusha
pop
push
dec
out
push
mov
repnz
push
ret
inc
hlt
test
push
insl
dec
rcrl
ja
dec
pop
pop
iret
scas
movsb
lcall
in
inc
pop
mov
fs
lret
movsb
icebp
mov
and
aaa
sub
clc
stos
insl
add
lahf
inc
sbb
or
push
mov
in
jb
aas
or
cmp
inc
jno
inc
sbb
push
pop
addr16
xor
daa
repnz
xor
lahf
add
jmp
outsb
rclb
adc
lahf
xor
or
dec
sbb
popa
xor
jne
jo
mov
and
lods
xor
cltd
int3
fmull
test
cmp
sbb
inc
or
and
movsb
pop
inc
fwait
leave
popf
and
cmp
mov
mov
addl
out
lret
out
mov
mov
jbe
shlb
mov
mov
and
dec
push
fisubrs
pop
mov
jne
lea
adc
cltd
dec
clc
fisubl
and
inc
imul
test
shll
jle
rcrl
push
xor
call
es
into
cmp
insl
aam
insl
in
mov
and
and
into
lock
add
je
pusha
pop
and
ss
sub
mov
int
in
out
cmp
aam
ljmp
sbb
push
outsl
aad
or
orb
pushf
dec
sub
sbb
xchg
adc
aaa
lea
vmovq
pop
pop
loopne
icebp
andl
jmp
rorb
fiaddl
dec
jns
push
and
mov
dec
and
test
inc
xor
iret
xchg
xor
or
mov
divb
mov
inc
sbb
out
inc
sbb
mov
mov
repz
xor
lret
cli
xor
nop
lds
jnp
cltd
sub
notb
fadds
mov
mov
and
cli
jbe
sbb
sub
mov
add
pop
mov
mov
sahf
cmp
mov
add
jo
xor
movb
jle
adc
cwtl
ret
das
and
jge
xlat
out
mov
push
or
imul
xor
sbb
sbb
jecxz
mov
or
jbe
xchg
popf
jns
dec
cmpl
xor
xor
addl
sub
repz
xor
cmp
xor
pop
sub
popa
imul
push
or
or
mov
dec
out
aam
and
dec
fldenv
ds
pop
xor
aad
mov
pop
cmp
add
mov
xchg
add
cmp
jp
and
iret
int3
mov
adc
in
dec
pushl
outsl
pushf
mov
xor
mov
lods
cmpsl
add
adc
or
inc
daa
test
mov
push
pop
cltd
jns
in
mov
and
shll
mov
cmc
cltd
jno
insl
jmp
adc
mov
xchg
pushf
sbb
arpl
mov
cmp
dec
xor
xor
scas
and
cld
int
imul
lret
and
push
add
cwtl
iret
cmp
sti
fimull
sub
xchg
cmc
aad
imul
or
sbb
stos
gs
inc
fs
in
inc
adc
cwtl
fisubrl
mov
adc
sub
fdivs
insl
clc
xchg
xchg
in
cmp
sub
add
shlb
xchg
cmpsl
mov
push
inc
inc
repz
movsb
or
sbb
pusha
cmpsb
insl
mov
nop
cli
pop
addl
mov
sbbl
jg
jae
pop
cmp
aad
ljmp
ljmp
cmp
dec
lea
and
cwtl
cmp
out
inc
mov
adc
fwait
xor
loop
mov
xchg
xor
lds
sbb
inc
int3
cmc
xor
repnz
push
test
jl
sbb
push
mov
cmpsb
cld
aaa
lret
push
fadds
mov
mov
pop
pop
cmpb
popf
lea
mov
mov
popa
insb
outsl
insl
lahf
pop
mov
cmp
push
mov
fdivrl
sbb
repz
shrl
xchg
lahf
cs
dec
lds
sbb
js
adc
out
fdivr
inc
or
and
adc
pushf
cmc
dec
mov
pop
hlt
sub
pop
jno
add
adc
pop
push
xlat
lods
mov
and
pusha
ja
fadds
xor
push
xchg
push
xchg
mov
les
xor
cmp
push
sahf
insl
pop
jge
jo
nop
sbb
dec
xor
mov
xlat
add
js
add
rcl
sbb
jl
pop
jge
cltd
mov
adc
into
movsl
test
shlb
sbb
fimuls
mov
jo
rcl
mov
add
xor
out
fcmove
inc
jne
xchg
jp
or
cwtl
shrl
enter
divl
mov
xchg
sbbb
mov
cmpsb
mov
mov
cli
mov
jmp
pop
pop
lds
xchg
stc
push
fists
mov
js
push
int
fadds
inc
sbb
sarl
mov
cld
iret
pop
jl
fmul
cwtl
test
scas
adc
fucomip
push
lea
or
xchg
xor
arpl
insl
stos
cld
mov
es
mov
cmpsb
xor
pushw
xor
jo
mov
popa
pop
mov
fsubl
daa
pop
mov
sbb
pop
cld
push
or
adc
sti
push
hlt
adc
cmp
jbe
repnz
mov
enter
mov
dec
adc
je
adc
push
rclb
mov
mov
mov
push
inc
addl
inc
jmp
xchg
lret
xchg
lock
pusha
lods
xchg
xor
mov
sub
dec
lar
sub
and
jae
cld
jb
std
push
push
push
pop
cwtl
roll
scas
mov
cs
sbb
stos
push
adc
mov
addr16
insl
arpl
mov
int3
jp
sub
mov
lahf
xor
push
subl
jge
sbbb
xor
push
test
test
xchg
add
push
jecxz
repz
inc
sti
shlb
pop
jno
jle
fistpl
dec
imul
jno
jo
sub
dec
jmp
js
jl
call
lods
xchg
pop
andb
repnz
cmp
inc
or
leave
push
aam
cmp
cmpl
sub
jns
out
mov
sbb
jecxz
cmp
sbb
jge
mov
test
insb
jns
les
rorb
dec
push
and
loop
push
pop
cmc
push
pop
dec
movsb
adc
pop
or
insl
add
movsl
out
out
ja
xchg
inc
pmulhw
adc
pushf
push
aas
pop
pop
gs
sbb
das
ljmp
push
ds
cmp
xchg
xchg
cmp
repnz
push
jns
adc
repz
rcrb
stos
mov
or
sbb
xchg
xchg
lock
ds
addl
or
pusha
push
enter
movsb
lea
fadds
inc
push
and
sub
jbe
jl
ljmp
adc
add
stc
mov
shl
ss
bound
xor
adc
xchg
adc
orb
out
daa
push
and
test
push
add
fildll
pop
inc
mov
lret
imul
push
xor
mov
pop
outsb
loope
pop
jmp
insb
jbe
std
rol
sbb
popf
lahf
sahf
shrb
inc
sub
xor
fwait
out
sti
adc
mov
push
jl
test
inc
mov
mov
ds
inc
repnz
fucomp
leave
fimuls
xlat
stos
push
or
push
xchg
mov
in
cmpsb
dec
nop
or
dec
rclb
push
lock
xchg
lcall
inc
sti
clc
adcb
cmp
xchg
test
or
push
repz
push
pop
popa
and
testb
les
jecxz
lea
mov
in
add
cwtl
sbb
ror
push
loop
loope
lock
loopne
sbb
sub
sahf
jg
pop
cli
mov
arpl
xchg
mov
cltd
push
jne
sub
inc
ja
addr16
pop
mov
push
mov
jns
xor
push
lret
jae
dec
out
mov
rcrl
jg
data16
in
jnp
pop
aaa
sbb
aad
mov
mov
mov
call
mov
test
mov
xorps
popf
inc
ret
or
icebp
jbe
je
mov
and
xchg
inc
mov
dec
lea
cmpsl
fwait
jg
adc
xor
dec
and
adc
dec
dec
roll
lock
lahf
mov
and
inc
xchg
adc
xor
pop
ljmp
jl
mov
xlat
jb
jge
es
jge
sti
lcall
fwait
test
push
push
pop
shrl
cmc
jo
and
rolb
in
adc
add
sahf
inc
adc
mov
ja
xchg
sbb
cmp
int
jns
mov
dec
inc
push
ljmp
add
scas
jl
ret
rcr
mov
mov
mov
popa
insb
les
jl
repnz
push
adc
mov
push
ds
inc
jmp
dec
inc
fs
stos
pop
test
in
jne
mov
orl
iret
sbbb
push
in
mov
fcoml
or
std
movsl
bound
and
ds
jbe
rorb
dec
movsb
outsl
stos
xchg
cltd
lods
cmp
pop
xchg
cmpb
idiv
insl
sub
inc
push
mov
daa
add
pop
fidivs
adc
rol
dec
xchg
pushf
sbb
pop
movsb
adc
shll
jl
addr16
cmp
test
xchg
inc
or
pop
in
insb
push
sbb
das
push
test
mov
ja
add
mov
mov
sbb
cmp
and
repnz
in
stos
sar
mov
jmp
repz
xchg
mov
daa
lods
jae
out
xchg
cmp
mov
mov
clc
xor
cmpsl
test
imul
stos
pop
aaa
nop
xor
imul
jbe
cmp
push
rorb
adc
es
dec
rorb
fwait
mov
dec
sbb
and
pop
jecxz
pop
sub
rcl
aas
cmp
xor
sub
ror
xor
fistl
ds
pusha
insl
jae
int
and
dec
xor
insl
xchg
mov
lahf
mov
xchg
sbb
dec
pop
pusha
ret
popf
xor
cmp
cmp
sbbb
and
pop
push
xchg
sub
jecxz
adc
mov
mov
sbb
jbe
or
cs
sub
nop
test
add
scas
stos
jns
imul
pop
adc
pop
or
test
cmpsl
dec
inc
jnp
loop
jne
dec
lret
jmp
xor
aad
push
mov
test
xchg
inc
jb
cltd
add
ja
repz
loop
loop
aaa
ja
jg
push
dec
jno
mov
jge
pop
aad
inc
pop
add
sub
sub
mov
mov
xor
ljmp
xchg
test
lret
ficomps
adc
orb
inc
and
cmp
xchg
push
fsubl
nop
aad
dec
lea
push
sub
nop
mov
repnz
insb
lds
xchg
mov
and
mov
imul
and
mov
scas
pop
lret
lods
movb
xchg
into
push
leave
dec
aam
out
mov
cmp
xchg
xor
sti
lds
sbb
lea
out
addr16
shlb
mov
fcmovu
xchg
xchg
in
dec
fisubs
inc
cs
scas
mov
pop
cmp
sbbl
sbb
jbe
push
sub
or
fldt
jl
push
addr16
movl
pop
test
xor
sti
mov
push
fimuls
pushf
mov
push
pop
aaa
xchg
mov
mov
xor
xor
cld
rorl
mov
jmp
mov
fldt
pop
xlat
mov
cld
arpl
or
repz
lret
inc
xor
xchg
cmp
test
pop
into
push
lret
push
mov
sub
sbb
jg
mov
inc
sub
out
enter
pop
jns
xchg
nop
cmp
mov
or
int3
lods
xchg
push
jg
xor
sub
xchg
jle
int
pop
xor
addl
and
pop
push
sbb
mov
cmc
daa
pop
cmpsl
aad
clc
pop
addr16
fsts
out
out
in
pop
leave
out
hlt
int3
lahf
push
fcmovu
sbb
xor
xchg
imulb
cmp
int3
outsb
in
adc
add
stos
and
pop
inc
dec
lods
mov
and
sub
mov
xchg
ficoml
mov
lea
mov
pop
and
cmp
in
dec
mov
cmp
adc
xorl
aas
in
jno
or
jg
xchg
dec
stos
cld
inc
sbb
icebp
and
dec
push
push
gs
insb
xchg
into
js
mov
movsb
xor
cmp
pop
lcall
ja
icebp
adc
dec
mov
les
inc
repz
int
mull
mov
hlt
push
mov
fadds
das
in
xchg
std
sub
pusha
inc
ds
mov
imul
pusha
sarb
std
dec
jle
popa
cltd
sti
mov
pop
inc
movsb
mov
mov
jmp
and
mov
push
sbb
sub
hlt
cmpsb
ja
push
aaa
es
pusha
setae
xchg
sbb
xchg
les
pop
xchg
cwtl
or
sbb
js
or
sbb
lock
sbb
xchg
aaa
aas
ss
not
dec
xchg
and
add
sub
lea
pop
inc
xchg
repz
mov
fldl
shrl
popf
mov
in
rorb
pop
ljmp
jnp
out
xor
addr16
and
sub
in
adc
iret
or
bound
nop
fidivrs
in
add
jno
cld
jb
pop
xor
mov
pop
mov
sub
sbb
adc
mov
ret
repz
cmp
imul
jbe
roll
fwait
lock
iret
jb
idivb
jg
push
pop
xchg
cmp
mov
mov
jmp
dec
sub
psllw
insl
sbb
add
dec
xchg
loopne
lcall
pushf
jmp
and
es
add
pop
pop
test
das
call
xchg
bound
sahf
pop
lahf
jecxz
pxor
aaa
cltd
cli
test
push
imul
fldl2t
jbe
dec
enter
mov
cmp
cld
pop
loopne
shll
mov
push
lods
roll
jp
xchg
cmpsb
pop
jmp
in
mov
ss
jge
insl
in
ret
push
dec
cmpsb
jmp
mov
aas
jbe
mov
sbb
lea
out
adc
test
jbe
movsl
jae
or
mov
sub
fsubs
push
mov
mov
lea
fisttpll
movsl
daa
stc
out
adc
jecxz
pushf
mov
faddl
lcall
push
andl
stos
or
subb
dec
out
aas
push
sahf
mov
and
jle
je
and
ljmp
sbb
nop
test
scas
xor
popa
test
inc
inc
fadd
sbb
repnz
scas
fwait
outsl
fldl
out
mov
jp
inc
cs
lahf
dec
dec
flds
lret
loope
xorl
repnz
dec
or
add
mov
inc
in
add
pop
add
adc
push
mov
pop
xor
addr16
dec
cld
xchg
scas
sbb
in
and
dec
cli
lock
in
insb
cmc
or
push
lds
sbb
dec
out
fs
sbbl
fcmovnu
sbb
mov
pop
push
cmp
add
mov
mov
adc
mov
xchg
inc
incl
pushf
pop
mov
add
mov
les
idivl
jnp
fistl
dec
adc
xor
mov
fists
push
popf
adc
push
imul
jne
xor
mov
ficompl
add
fcomps
mov
sbb
cmp
outsl
jge
ja
aas
add
sub
cmp
out
xlat
xor
jne
push
mov
addr16
mov
inc
inc
mov
shlb
push
imul
nop
xchg
cld
shll
xchg
inc
negl
loopne
popf
jns
mov
iret
fisttps
dec
push
cmp
test
mov
jg
or
mov
sbb
push
sbbl
and
push
out
nop
mov
ret
insl
out
jb
add
movsb
fisttpll
nop
lret
rcll
rcrb
scas
dec
or
xor
cmp
xchg
sbb
loop
int3
ss
mov
push
adc
sbb
mov
ja
push
sbb
mov
dec
push
mov
mov
dec
pop
lock
add
cmp
and
out
pop
icebp
jecxz
popa
out
sti
jns
mov
mov
dec
sub
shll
dec
iret
enter
mov
adc
push
inc
arpl
push
test
jmp
xchg
jnp
mov
ja
push
push
std
sub
jbe
lcall
clc
loopne
bound
js
icebp
imul
movsl
push
pop
dec
jnp
inc
add
loope
xor
sub
lahf
pop
mov
xchg
scas
flds
inc
pop
sbb
jbe
jg
jg
cmc
or
cmp
jnp
mov
inc
lret
ljmp
pop
testl
pop
lods
sbb
insl
shll
add
mov
add
ret
jb
scas
xchg
jb
int3
mov
es
scas
xor
mov
mov
xlat
pop
negb
dec
push
mov
pop
mov
mov
mov
ds
or
loop
js
jmp
rcr
notb
push
mov
sti
push
sbb
add
ljmp
sbb
inc
jmp
mov
push
mov
push
sub
into
mov
mov
sub
test
data16
out
loope
fsubrl
adc
jl
out
dec
xor
mov
xchg
push
cltd
movsl
stos
lret
or
mov
jmp
pop
cs
insb
dec
or
xor
xchg
into
fs
and
sub
loop
mov
adc
sbbb
pop
lret
mov
pop
mov
scas
in
dec
mov
out
jb
sub
add
mov
fadd
jp
jno
repz
push
adc
pop
fidivl
icebp
pop
lahf
mov
push
cmp
jbe
jecxz
in
dec
sbb
xor
scas
imul
lcall
mov
cwtl
jge
aad
hlt
call
clc
inc
aas
mov
test
sub
add
adc
mov
pop
in
jg
imul
cmovns
out
add
popf
cmpsl
rolb
dec
jno
or
in
inc
stos
stos
mov
repnz
stos
or
sahf
mulb
inc
lcall
jnp
cmc
daa
pushf
fucomp
and
xor
sbb
pop
or
add
movsl
into
xchg
sub
pop
cwtl
icebp
dec
sbb
jnp
push
arpl
enter
loope
jle
and
pop
dec
inc
lret
xor
data16
xor
inc
or
mov
test
cld
sbb
adc
cs
cs
jb
jle
fisttpll
dec
movsb
movsb
add
aas
push
xor
adc
movsl
xor
fcomi
loop
lds
add
mov
push
fcompl
outsb
outsb
add
les
shll
lods
push
dec
popa
and
xor
popa
cwtl
cmp
out
xchg
sbb
jg
dec
mov
adc
pop
shrl
insl
mov
lret
or
pop
arpl
jge
inc
stc
push
mov
mov
jns
cltd
cmpb
xchg
dec
mov
cmc
out
xorl
mov
aas
movsb
rcrl
mov
xchg
nop
sub
imul
and
pop
mov
scas
and
cmp
iret
mov
les
out
mov
cmp
lods
pushf
fwait
ret
mov
dec
cmpsb
xchg
jecxz
leave
sub
sub
dec
adc
push
clc
scas
mov
xor
icebp
push
cwtl
lods
or
pop
sub
sbb
sahf
cmc
int3
gs
mov
cmp
je
pushf
pop
and
sub
add
divb
ljmp
or
sub
jp
and
loop
mov
pop
mov
popa
loope
loope
xor
insl
pop
pop
rcr
mov
add
cmp
fcomp
mov
shrl
xor
int3
cwtl
out
adc
fstps
out
mov
aam
sti
add
mov
js
mov
shlb
jp
insb
stos
test
lret
insl
or
pop
testl
lods
es
jno
mov
nop
popf
lods
push
loopne
addb
and
nop
ret
mov
cs
add
xchg
xchg
cmp
lahf
enter
adc
mov
enter
ljmp
pop
xor
adc
xchg
cli
lahf
and
pusha
and
outsb
sub
xchg
adc
add
mov
fsubs
mov
fnstcw
inc
cmp
push
push
scas
cld
out
insb
jge
stos
in
push
loop
jns
push
arpl
fimuls
mov
xchg
in
mov
mov
xor
adc
adc
stos
mov
imul
fnstenv
or
fs
mov
xchg
mov
das
dec
and
shll
mov
addr16
cmp
push
lret
shll
jo
ds
push
sti
inc
pop
or
iret
xchg
clc
fs
sti
fsubrl
push
fcmovnb
adc
jne
hlt
aam
cmp
and
mov
pop
or
push
xlat
lods
jb
mov
mov
ret
sbb
and
int
xor
xchg
jg
inc
xchg
leave
cld
cli
js
mov
mov
xor
fldl
mov
lods
add
es
int3
int
add
sbb
xchg
into
mov
jae
lcall
rcll
pushf
sub
mov
stc
cmp
jno
cmovae
inc
mov
je
mov
sahf
jg
pop
pushf
lcall
in
outsl
fidivrs
repz
je
lcall
mov
mov
mov
xor
out
arpl
stc
xchg
and
inc
mov
push
int
push
decb
bound
mov
outsb
rcll
or
and
xor
mov
sub
std
sbb
insl
dec
pushf
int
pop
xchg
mov
mov
adc
add
xorb
lds
enter
dec
adc
adc
ds
sbb
push
xchg
ret
orb
movsb
sbb
fs
out
ja
das
and
xor
and
jo
fcoms
push
leave
pop
out
mov
fmull
loop
or
ljmp
cmp
das
pop
adc
push
add
int3
and
arpl
cmp
cmp
pop
dec
xor
cmpsb
clc
push
loope
adc
repnz
mov
fistps
mov
fs
push
xchg
and
insb
addr16
int
iret
mov
sub
loope
sub
fbld
pop
sarb
xor
test
inc
jbe
mov
lods
enter
lds
repnz
dec
inc
add
mov
std
add
in
test
and
and
arpl
aaa
xchg
lods
out
and
or
loop
pop
sbbb
fcompl
mov
jns
mov
mov
xor
rorb
mov
das
xor
jne
in
pop
or
pop
sbb
mov
in
jle
fisubrs
lcall
hlt
xchg
inc
push
andb
sub
push
addr16
repnz
inc
add
push
lahf
cld
outsl
stos
outsb
adc
mul
int
and
xchg
or
shlb
call
jns
mov
lret
lea
mov
aaa
stos
aas
jl
xchg
call
fstl
fdivrp
clc
or
sbb
mov
push
mov
push
daa
pop
jle
adc
jno
adc
loope
mov
pop
jns
lds
adc
pusha
bound
jne
mov
jmp
xorb
xchg
idiv
mov
cld
ljmp
inc
stos
adc
lahf
adc
cmc
mov
or
jnp
stc
pop
loop
xchg
pusha
mov
lahf
jbe
outsb
notl
xor
das
push
shll
jns
xor
cmp
add
xor
es
outsl
es
mov
mov
inc
dec
adc
dec
push
and
jb
ja
repz
test
mov
aaa
jge
mov
aad
jae
push
dec
mov
in
add
fsubs
pop
testb
imul
cmp
mov
test
dec
loopne
int3
xor
xor
xor
push
mov
xor
clc
in
sub
pop
xchg
out
mov
dec
mov
cmpsl
mov
jle
sahf
adc
inc
xchg
sub
sbb
test
fists
jmp
das
decl
sub
cltd
mov
jns
dec
cltd
nop
inc
mov
subb
xor
xor
pop
adc
andl
xor
cmpsl
clc
mov
rorl
fdivr
or
out
push
ret
jbe
stos
jo
push
mov
in
lret
lods
sub
add
sarb
insl
xchg
std
cmp
sbb
sub
ljmp
mov
xlat
dec
cltd
aaa
sbb
and
dec
dec
xor
dec
pop
cltd
push
je
mov
pop
roll
push
or
push
jmp
inc
fdivs
cmp
jne
sar
sahf
movsb
ja
push
in
pop
jmp
pop
xor
add
cmp
sbb
in
mov
aas
popf
and
dec
jns
sub
push
sbb
mov
inc
loope
pop
mov
outsb
cmp
scas
fists
mov
lret
fwait
sbb
mov
mov
lods
inc
push
loop
dec
cld
push
jbe
div
cmp
cwtl
xor
adc
cmp
sbb
adc
les
xchg
shlb
filds
sbb
jl
mov
mov
and
stos
gs
arpl
ja
dec
dec
out
clc
fcmovu
adc
adc
popf
lock
dec
mov
rcrl
fucomp
cs
lods
orb
divl
mull
jb
jne
jae
and
pop
xchg
fs
out
pop
cmp
jae
daa
in
ret
cmp
inc
shl
cmp
add
jecxz
adc
push
mov
in
rorb
mov
dec
scas
enter
leave
xor
pop
les
jmp
push
jb
sbb
je
cmp
push
test
fdivrl
add
daa
insb
mov
je
xlat
jle
pop
mov
stc
jle
lahf
mov
mov
lcall
adc
testl
lret
movsb
fwait
sub
mov
sti
out
add
pop
shr
inc
pop
jle
add
xor
push
push
enter
mov
test
mov
orl
mov
lret
mov
pop
out
cmp
out
outsl
nop
cmp
xchg
xchg
imul
xchg
div
rorl
je
jno
pop
lea
cmp
testb
das
xchg
or
jae
insl
fidivrl
adc
jmp
sub
cli
ss
dec
sbb
pop
call
cmp
outsl
and
pop
or
lods
cmp
not
arpl
pushl
shlb
into
jb
das
cs
pop
mov
repz
pop
inc
cmp
xor
xchg
divb
cmc
mov
call
dec
mov
les
inc
adc
popa
push
xchg
movmskps
mov
mov
idiv
repnz
or
ret
xrelease
inc
iret
ja
sbb
ljmp
sbb
fimull
inc
andb
imul
in
xor
inc
std
mov
cmpsb
push
mov
mov
or
inc
xchg
mov
lret
cmc
dec
cmp
int3
pusha
mov
test
sahf
lret
out
pop
js
mov
sahf
pop
out
xlat
fisttpll
sbb
insb
cmc
test
mov
inc
push
sub
jnp
cmp
xor
pop
sub
or
fs
mov
je
xchg
push
and
push
pop
insb
mov
jecxz
push
cwtl
fdivrl
aaa
mov
pop
fadds
sbb
mov
addb
inc
out
andw
dec
xchg
pop
add
mov
loop
call
mov
lock
and
insl
cltd
dec
shll
sbb
mov
mov
sbb
jbe
inc
or
dec
aas
addb
je
cmp
mov
in
movsb
or
mov
in
fisttps
sub
pushf
pop
insb
push
mov
pop
iret
repz
fdivrp
pop
sub
or
lcall
fadds
divl
loop
lods
and
insl
leave
rcrb
mov
cmp
pushf
push
fwait
and
cmp
jecxz
mov
push
test
adc
sub
push
cld
push
cld
jbe
cli
fidivl
faddl
insl
rcll
rorb
jns
mov
in
out
fwait
push
cmpsb
out
cmp
ljmp
fiadds
cli
in
vpcmpgtb
sahf
pop
ffreep
mov
dec
fsubl
mulb
shl
repnz
sbb
push
mov
dec
mov
pop
and
jg
push
xor
or
adcl
daa
jmp
xor
cmp
ret
imul
push
pushf
scas
gs
in
jge
out
adc
dec
xchg
mov
adc
xchg
cmp
sahf
stos
movsl
inc
inc
insl
jnp
es
jns
ja
mov
fstl
add
cmpl
or
out
imulb
fstp
cli
pop
sub
add
in
lret
pop
in
mov
popa
lock
jns
jmp
cmp
loop
cmp
imul
std
mov
or
and
fistps
push
fcmovb
cmp
jmp
das
les
pop
jns
xchg
test
aad
outsb
add
loop
andb
insl
jne
mov
cmpsl
outsl
sahf
cmpsb
repz
fs
fiadds
jge
sub
stos
or
mov
mov
icebp
xor
jg,pn
stos
ds
addr16
add
pop
mov
xor
dec
in
sub
lret
stos
scas
out
xchg
cmp
dec
int
dec
call
push
mov
lea
mov
test
aas
and
inc
jl
daa
icebp
inc
push
mov
shl
ffreep
fimuls
mov
rep
inc
mov
and
jae
mov
ret
adc
std
pop
lret
insl
mov
dec
scas
test
iret
cmpsl
lcall
scas
mov
and
insb
orb
insl
jnp
pusha
ret
pop
lahf
and
pushf
icebp
das
mov
js
stc
cmpsb
sub
xchg
mov
in
daa
mov
xlat
loope
shrb
gs
sti
loop
push
les
mov
fiadds
push
vpaddusw
pop
inc
lcall
push
mov
in
loop
fwait
mov
jl
shl
mov
clc
jp
inc
push
add
mov
lahf
iret
mov
xchg
lods
xor
in
or
cmp
lret
dec
shlb
xchg
stos
mov
cmp
inc
hlt
mov
int
xor
or
outsl
mov
fldl
scas
sbbl
ljmp
outsb
xor
jg
and
jns
jno
inc
out
imul
aaa
pop
mov
adc
lods
mov
push
push
cwtl
xchg
add
push
mov
mov
dec
cmpl
int
xchg
gs
jno
sub
xor
sbb
icebp
inc
add
into
cmpsl
sbb
mov
add
xor
fistps
jg
stc
pop
and
pop
add
in
jns
push
aas
jnp
cmp
mov
test
dec
mov
dec
jp
insb
add
lahf
lods
and
mov
lods
sub
mov
gs
gs
aas
test
es
ja
test
fwait
ja
repz
dec
call
mov
popa
adc
xchg
jo
or
mov
push
leave
xchg
sbb
not
mov
andb
aaa
je
imul
outsb
pop
push
add
out
imul
inc
mov
dec
stc
stos
push
and
jnp
dec
xlat
sbb
hlt
enter
mov
push
in
shll
bound
pop
push
push
cmpsb
xchg
sub
push
lret
ja
mov
pusha
dec
loop
movsl
pusha
fcoml
adc
inc
mov
fists
popa
or
and
pop
jg
mov
mov
scas
xchg
ljmp
xor
add
dec
cs
xlat
popa
cs
jno
out
outsb
jne
sbb
or
mov
xchg
push
aad
sbb
mov
xlat
xchg
out
adc
mov
mull
fldl2e
cmp
lods
push
es
push
mov
cmp
into
loopne
cwtl
ret
lods
mov
out
jb
cld
mov
enter
sub
movups
hlt
dec
mov
rclb
cs
push
stos
add
or
lret
or
out
dec
in
lods
sbb
ds
or
sbb
push
cld
xchg
dec
inc
jnp
xchg
mov
rcrl
sub
clc
insb
insl
dec
test
cmpsl
or
and
cmpsb
xchg
add
popf
ret
loope
push
xorl
iret
mov
adc
js
in
into
fcmovbe
aas
sub
jns
dec
adcl
sub
and
xchg
std
add
lock
or
xlat
mov
inc
sub
dec
lahf
cmp
call
jnp
pop
or
sub
mov
clc
xor
je
adc
aaa
add
jge
fsubs
loopne
mov
jecxz
pushf
push
pushf
cltd
lcall
mov
ja
xchg
mov
inc
adcl
andl
and
sbb
repz
add
jmp
rclb
add
cli
stos
xchg
adcl
xlat
mov
cltd
int
imul
insb
clc
dec
in
lret
mov
jb
mov
jecxz
in
movsl
mov
or
and
dec
pop
sub
cwtl
insl
sbb
cmpsl
and
inc
andl
xchg
mov
stc
sbb
das
add
inc
aam
sub
lahf
test
sbb
dec
push
jbe
jb
arpl
int3
loop
xchg
and
xchg
mov
repnz
inc
jne
cltd
mov
aas
inc
lahf
sarb
sub
push
test
jle
popf
sahf
jge
stos
aas
imul
jo
and
sub
out
sbb
shrb
call
push
xor
fwait
stos
jae
push
bound
lcall
mov
pusha
mov
into
inc
int3
fdivl
aad
aaa
sbb
mov
mov
mov
sbb
sbb
jo
push
sub
push
stos
dec
stos
jmp
xchg
scas
or
xchg
dec
in
xchg
fadd
mov
xchg
insb
lret
pusha
or
dec
pop
push
sbb
in
inc
xor
pushf
ds
lret
mov
ret
frstor
jle
ss
jmp
shll
xor
repz
lds
and
sbb
push
xchg
mov
jno
dec
or
and
dec
jb
pop
inc
rorl
lahf
cmpl
loop
in
or
mov
fucomi
lds
daa
adc
pop
adc
test
sub
adc
fdivr
jecxz
ret
lahf
ss
mov
push
rol
dec
mov
sbb
daa
test
inc
lock
imul
cld
outsb
pop
xor
xor
mov
inc
xchg
jmp
xchg
sahf
aam
les
jno
dec
and
cltd
sti
cmp
test
sbb
push
insl
sub
add
cmp
cwtl
scas
fnstenv
je
outsl
mov
dec
pop
test
jb
mov
sub
popa
inc
mov
ljmp
out
sbbb
daa
xor
sbb
movsb
xlat
jmp
sub
lods
jns
dec
xchg
push
mov
mov
xor
lret
cmp
fbstp
inc
and
neg
shrb
lock
aad
lods
dec
test
dec
xor
imul
jl
int
add
ds
or
xchg
dec
push
enter
mov
arpl
sti
jbe
jge
shl
or
mov
add
xor
inc
push
adcb
jno
jnp
fdivrl
mov
fwait
mov
scas
mov
aam
sbb
adc
sbb
nop
jb
mov
sub
add
mov
ja
imul
push
cmc
stos
loopne
mov
cld
fisttpl
add
inc
into
js
dec
xchg
xchg
fldl2e
ja
pop
inc
push
push
daa
and
stos
orl
insl
loope
enter
aam
sub
outsl
mov
xor
jp
test
jne
fimuls
fdivrs
pushf
test
test
sub
lods
out
dec
std
xchg
and
inc
mov
subb
mov
or
flds
cmpl
cmc
lds
jl
xor
aas
enterw
js
cmp
pop
outsb
mov
repnz
pop
icebp
lret
sbb
stos
clc
inc
js
sub
lea
ljmp
mov
dec
adc
outsb
or
test
cwtl
stos
mov
cmc
call
or
dec
pop
push
mov
jns
pop
cmp
aaa
push
nop
and
xor
aam
inc
jp
add
psubd
popf
mov
in
loopne
mov
push
push
push
imul
xor
inc
mov
push
ja
jno
mov
cmc
imull
nop
in
daa
loope
out
cs
icebp
mov
test
ljmp
push
dec
or
inc
incb
xchg
sbb
movsl
push
mov
pushw
shll
outsb
enter
push
mov
cmpb
mov
mov
in
pop
lods
mov
and
jecxz
nop
xchg
sbb
dec
pop
sarb
or
outsl
add
ficoms
sbb
outsb
sbb
jns
mov
daa
adc
adc
push
dec
loope
lds
arpl
test
mov
or
pop
movsb
ret
imul
jge
push
inc
cmc
call
xor
nop
clc
rorb
jl
inc
xchg
mov
dec
dec
adc
lcall
dec
lods
inc
cmp
int3
xchg
rolb
add
adc
push
shll
pop
jecxz
push
rolb
test
xchg
loop
gs
test
test
movsb
jo
int
lds
shlb
push
or
mulb
vminpd
pusha
outsb
push
mov
movsb
dec
mov
lret
mov
insl
shrl
push
rcrb
dec
lret
out
mov
jle
jecxz
roll
mov
push
xor
xchg
cli
cwtl
neg
push
push
xchg
sbbb
pop
dec
out
xor
scas
bound
jne
scas
daa
or
addr16
cmp
dec
mov
rclb
repz
popa
dec
cs
ljmp
inc
jp
mov
ja
sarl
mov
rcll
cs
lea
jb
mov
mov
sub
mov
sbb
loope
leave
pop
xchg
nop
and
and
testl
icebp
mov
enter
xor
xor
fmull
je
pop
sahf
xor
ja
gs
mov
mov
mov
cmp
nop
adc
ss
mov
and
sti
pushf
mov
mov
lea
mov
mov
pop
xor
cmpsl
mov
add
and
mov
pop
stos
or
jmp
fs
sub
sub
adc
mov
gs
pop
out
push
add
push
shrb
sub
and
insb
filds
clc
xlat
hlt
add
sub
mov
mov
push
mov
cli
shll
sbb
ret
sub
test
xchg
dec
dec
or
insl
cmp
xchg
mov
punpckhdq
mov
insb
jecxz
mov
gs
mov
add
aam
push
push
add
scas
out
dec
adcl
cmpsl
pop
test
repz
imul
and
test
jb
add
pop
pop
xor
push
pop
mov
out
fwait
cmpsl
push
insb
push
das
add
test
orb
gs
out
rorl
in
outsl
mov
hlt
sub
jo
push
jo
mov
into
sbb
xchg
cmpsb
xchg
lahf
add
ret
cs
xchg
push
jge
repnz
fldcw
xor
cmp
jbe
sarb
xor
test
les
add
cwtl
dec
leave
cmpsl
ds
cmp
sbb
fists
imul
daa
in
or
cmp
xchg
sub
pop
nop
jmp
pop
push
xor
mov
xchg
lret
mov
stc
std
mov
inc
mov
imul
mov
call
popa
cli
sub
jne
add
shrl
push
std
add
js
mov
mov
push
sbb
std
cmpsl
int
jg
cs
sahf
xor
xchg
je
icebp
cmc
mov
movsb
iret
shll
out
dec
inc
out
sub
jns
in
mov
jo
insb
ror
push
lods
mov
mov
push
aad
jle
jb
mov
or
scas
jae
or
push
sbb
inc
ret
inc
jecxz
aaa
xchg
jg
pop
shlb
inc
mov
add
dec
add
cmpsl
pop
dec
and
sbb
ret
cmp
jbe
xchg
dec
jg
imull
push
das
shl
adc
dec
mov
fdivrl
inc
cmp
cmp
mov
out
std
jnp
pushf
jns
es
inc
xor
stos
loope
arpl
mov
sbb
inc
imul
subl
int3
lret
pusha
cs
test
pop
or
daa
in
sbb
add
push
adc
stos
xchg
out
into
fbld
sahf
inc
loop
add
fcoml
mov
jge
add
inc
fwait
mov
lret
cmp
andb
mov
movsb
jg
test
fsub
pop
cmp
sub
xchg
cli
es
mov
add
or
pop
cld
stc
xchg
call
cmpsb
mov
mov
in
movsl
les
ljmp
inc
jae
or
cwtl
in
arpl
xor
jo
imul
insb
and
negb
rol
inc
add
js
imulb
cmp
pop
sub
jmp
mov
loope
sbb
cli
and
jb
das
sbb
xchg
sarl
sbb
movsb
movsl
push
scas
adcb
ljmp
xor
jecxz
cmpsb
lds
scas
pop
pop
and
or
test
and
pop
fcompl
es
inc
dec
and
imul
outsl
and
push
shrl
hlt
arpl
sub
in
inc
push
push
inc
insb
adc
int
ror
and
mov
cmp
jns
pop
stc
mov
js
and
or
jge
mov
sub
into
pop
pop
cltd
ja
rcl
sbb
addr16
push
faddp
or
stos
fdivrl
xor
sbb
aam
push
fdivl
lock
or
add
push
jne
fadds
jae
inc
xor
pop
jno
mov
cmp
addr16
stc
nop
adc
jnp
dec
sub
test
add
adc
push
les
pop
mov
cwtl
push
ret
xchg
push
jge
sbb
pushf
out
inc
add
xor
mov
fwait
jbe
mov
xor
dec
lods
cs
sub
jle
or
scas
scas
iret
fwait
ds
in
shll
mov
aas
imul
fcoml
lods
test
cmp
xor
outsb
cmpsl
aas
cli
dec
jo
pushf
gs
das
movsb
mov
add
inc
dec
mov
cmp
ljmp
xchg
iret
lea
imul
es
mov
fucomp
jae
sub
xchg
mov
xor
mov
inc
push
movsb
pop
xor
mov
or
push
jbe
mov
xchg
inc
or
call
cli
add
outsb
js
jecxz
sbb
aad
mov
shl
push
and
mov
jecxz
sub
lret
and
aaa
jp
sub
mov
int
pushf
pop
outsl
cmp
cmpsl
or
dec
mov
scas
addr16
mov
js
and
mov
paddq
push
cmp
enter
mov
sbb
mov
enter
pusha
nop
mov
clc
lahf
aaa
mov
popf
or
xchg
mov
xchg
mov
cld
pop
xor
pushfw
jbe
add
sub
out
imul
lods
outsb
fsubr
sub
pop
inc
mov
ljmp
push
outsb
mov
jl
fimuls
or
loopne
sub
cli
jp
adc
bnd
jb
les
cmpsl
lock
stos
inc
dec
in
jbe
sbb
js
outsb
mov
xor
filds
popf
mov
fsub
js
repz
xchg
mov
xchg
jo
gs
outsl
cmp
mov
xchg
arpl
gs
cltd
lea
cltd
movsl
icebp
sub
arpl
in
iret
and
jo
pusha
mov
mov
ss
xchg
ss
jmp
push
cmp
inc
sub
mov
push
mov
insb
push
enter
cwtl
fsubr
ds
lcall
repz
fiadds
xor
or
and
mov
nop
inc
pop
push
cmc
rcll
test
push
dec
in
dec
jg
rorl
push
adc
stos
fdivrp
push
dec
cmp
sub
aaa
dec
out
xchg
jmp
push
add
sbb
sub
or
roll
push
pop
dec
xor
leave
cmpsl
pusha
dec
arpl
and
sbb
test
lods
mov
jnp
pop
sarl
es
pushf
jg
in
movb
dec
fidivrl
out
add
imul
or
test
inc
imul
or
mov
pop
out
sbb
dec
imul
iret
std
mov
les
cli
inc
int3
in
adcb
int
jle
scas
rorb
push
insb
ds
push
xchg
movsl
push
enter
aas
insl
fwait
scas
push
jbe
inc
mov
outsl
mov
int
cld
jg
cmp
js
push
pop
in
aad
add
ss
push
fdivrp
rcl
xchg
push
out
lds
and
push
jg,pt
icebp
aaa
push
fwait
sub
cmp
mov
and
leave
iret
out
ljmp
lcall
iret
xchg
or
aas
sub
mov
xchg
mov
jmp
aaa
sub
xchg
adc
mov
dec
mov
sahf
mov
xchg
shll
fldl
jecxz
xor
cmp
loopne
daa
shrl
mov
inc
inc
mov
xchg
lret
push
xorb
popf
inc
pop
js
push
movsl
jp
mov
dec
lock
pop
and
jl
aad
dec
mov
movsl
int3
popa
leave
scas
nop
add
fwait
cmp
mov
mov
ja
mov
leave
es
popa
sbb
mov
lahf
push
push
pop
div
cmp
iret
and
mov
inc
mov
mov
fadd
pushf
cmpsb
out
add
and
and
mov
pop
xchg
push
sbb
xorl
xor
lods
outsl
jno
mov
rcll
inc
fdivrl
dec
imul
dec
mov
or
hlt
movsb
orl
xchg
fnstenv
pop
stc
dec
pop
sbb
movsl
aad
sbb
push
stos
add
imul
mov
sub
call
leave
xor
test
add
sbb
lret
or
jo
jecxz
mov
stc
cltd
sub
in
call
mov
xchg
sbb
or
xchg
xchg
jb
add
push
shlb
leave
popl
fcoms
mov
cmpb
jg
lock
ret
pop
xor
repz
mov
es
sbb
and
imul
or
or
in
test
sar
das
cltd
pop
sbb
ret
jg
sub
es
xorb
loop
mov
dec
and
stos
mov
stos
mov
jle
xchg
rorl
int
dec
push
mov
sbb
inc
pop
test
push
out
cmp
inc
add
jg
mov
push
sub
cli
xor
sbb
xchg
ficoml
fidivl
sbb
xchg
sbb
push
outsl
jecxz
mov
xor
cltd
jl
mov
out
push
or
sub
dec
or
ret
sub
iret
lcall
fs
jnp
sbb
lcall
cmp
iret
jmp
adc
lods
mov
add
daa
push
mov
fwait
cmp
mov
push
cmp
fidivrs
dec
cmpsl
cmpsb
ffreep
fisubrl
outsl
sub
mov
sub
sbb
dec
stc
rorl
mov
negb
fmuls
mov
push
xchg
shlw
mov
jl
std
mov
inc
movsl
adc
imul
ss
flds
push
inc
stos
cld
mov
mov
cmp
dec
std
push
jg
sub
add
imul
in
cmp
xor
repz
and
and
cltd
adc
call
xchg
mov
cmp
stos
lods
push
or
dec
repnz
and
jle
fstpl
call
insl
and
enter
cmpsl
cmp
lcall
int3
scas
jno
scas
sub
pop
pop
jg
ret
arpl
mov
fcmovu
sbb
std
aas
jo
lods
imul
sbb
int3
cmpl
in
xchg
ficoms
cmp
mov
test
mov
lock
or
das
shlb
movsl
jbe
je
lcall
pushf
and
ffreep
pop
inc
mov
lock
cs
jg
adc
int3
call
ljmp
or
pop
adc
fnstcw
inc
xchg
xor
dec
stos
imul
aaa
es
jnp
mov
cltd
stos
repnz
adc
mov
push
push
mov
inc
orb
inc
sahf
inc
cwtl
outsl
sti
xchg
mov
sub
sarl
rclb
sbb
enter
or
inc
xchg
ljmp
jae
mov
repnz
mov
pop
add
jno
jns
je
push
cmpsl
in
jg
mov
push
cltd
in
pop
es
lods
jae
inc
push
aad
and
out
push
sbb
in
dec
jo
sub
in
mov
xor
mov
push
push
cmp
pop
add
outsb
mov
or
pusha
cltd
cmc
out
jnp
jbe
enter
nop
cmp
or
movsl
mov
cmpsb
cmp
cmp
jp
rcrb
xor
mov
in
mov
pop
orl
aam
orl
cli
push
push
adc
lcall
lcall
or
xchg
stos
inc
jmp
add
loopne
dec
add
jmp
xchg
push
shlb
outsb
and
xchg
sub
dec
or
in
push
loop
arpl
push
mov
xchg
lret
nop
ret
iret
xadd
push
sbb
push
adc
sti
add
cmpsl
dec
sbb
sbb
mov
js
shrl
popa
aad
cwtl
sbb
scas
xchg
enter
iret
lods
and
int3
jb
jne
mov
js
cmp
mov
xchg
gs
test
fisttpl
inc
add
aaa
add
sub
mov
mov
sub
repz
or
jne
out
mov
out
fcomps
roll
inc
push
fst
and
pop
mov
xchg
leave
mov
jmp
sub
cmp
pop
or
and
push
loop
pop
xor
aas
rorl
movsb
xchg
fstp
inc
fisubs
mov
dec
movsl
out
iret
mov
popa
mov
andb
cli
lahf
cltd
xlat
arpl
jno
lea
mov
jl
jmp
pslld
es
pop
shlb
lods
jne
in
jae
add
nop
in
test
mov
leave
popf
adc
lock
adc
inc
jge
sub
ds
out
dec
cmp
fnstenv
jl
in
jl
xchg
subb
scas
lret
inc
inc
lock
test
jle
repz
xchg
and
test
rorl
lea
add
scas
into
mov
jnp
scas
in
mov
fisubl
mov
ds
jne
sub
jno
lcall
inc
xor
jg
insb
add
cmpsb
mov
xor
arpl
les
gs
je
or
dec
jno
pushf
fldcw
xchg
xchg
cmp
adc
pop
js
mov
pushf
ret
sahf
cmpsb
push
bound
jg
jp
add
daa
stos
rcrl
xchg
int
adc
out
fisubs
mov
pop
out
pop
out
lret
test
adc
mov
outsb
fistps
pop
mov
inc
and
push
jp
fs
xor
pop
sahf
push
add
push
insl
dec
or
inc
push
xor
mov
out
jo
xor
sbb
pop
cmpsl
push
mov
loop
jne
adc
pop
cltd
pop
dec
lret
divb
pop
xchg
sbb
mov
ss
addr16
inc
stos
mov
notb
jle
cltd
js
into
fdivrl
push
adc
inc
movsl
rclb
cwtl
hlt
decb
ret
mov
push
shlb
sbb
sub
dec
fs
cmp
mov
daa
xchg
jmp
rol
shlb
pop
lods
cmp
mov
lret
test
and
cmpsb
fwait
and
outsb
loop
sbb
inc
popl
mov
stos
pusha
fnstcw
mov
mov
adc
or
dec
sub
mov
mov
cmp
popf
clc
xor
out
push
in
or
xlat
pop
pop
jb
cmp
mov
mov
sub
xlat
in
or
stc
dec
leave
sbb
sbb
jmp
xchg
sbb
bound
sub
inc
test
sbb
stos
pop
mov
cli
mov
or
xchg
mov
ret
mov
cld
stc
adc
inc
push
mov
repnz
push
ds
pushf
dec
xor
mov
adc
test
pop
rcrb
fistpll
xchg
or
aas
and
lods
repnz
push
cvttps2pi
jb
cmpb
jne
xchg
xchg
icebp
popa
push
inc
sub
cmc
cli
mov
mov
fwait
jo
adc
loopne
ss
xchg
mov
outsl
aaa
pop
xchg
stc
fildll
stos
subl
mov
mov
xor
test
addr16
cmp
stos
subl
repz
add
push
std
pop
and
jg
xlat
inc
sti
mov
scas
outsb
je
arpl
mov
jge
mov
in
nop
and
aam
pop
in
or
mov
xchg
cli
js
pushf
push
xor
xlat
in
out
cs
mov
adc
pop
sbb
divl
and
gs
mov
lret
and
push
ror
insb
fsubrp
loopne
pop
add
push
sbb
sbb
outsb
xchg
fs
fisubrl
sub
sub
jmp
sbb
je
or
add
adc
lret
mov
xchg
ss
dec
push
dec
mov
imul
sub
aaa
pop
insl
sbb
fstl
add
lds
repnz
mov
sbb
push
jl
lret
xor
shll
mov
repnz
xchg
mov
ss
sub
push
nop
xchg
sbb
mov
cmp
or
xchg
aam
fisubrs
mov
aad
imul
push
shrl
outsl
inc
push
mov
stos
out
mov
stos
imul
push
xlat
ljmp
sbb
sbb
xor
dec
in
movsl
fidivrl
or
or
push
adc
outsb
nop
scas
xchg
pop
mov
incl
test
add
sub
xor
lock
mov
or
dec
shll
repz
je
jne
repz
js
mov
push
jge
mov
mov
fnstcw
dec
mov
addr16
stos
fdiv
je
shll
add
jae
push
push
std
imul
pop
cltd
out
inc
fldt
dec
push
pushf
push
fnstsw
imul
stos
or
mov
je
ss
inc
pushf
mov
enter
mov
ret
fcmovbe
jb
leave
fcmovbe
mov
std
shlb
jp
pushf
push
add
jmp
jno
fdivrl
lahf
xor
cmpsl
dec
sarl
test
pop
xchg
daa
gs
lret
dec
xorl
xchg
push
xor
inc
dec
int
stos
inc
push
and
sbb
push
cmp
cmp
ss
fnstcw
sbb
cld
test
mov
push
dec
test
aam
test
cmpsl
sbb
lret
adc
xor
test
dec
pop
gs
inc
inc
dec
mov
fsubs
rcrb
js
adc
scas
ficomps
xchg
addr16
or
bound
cmp
mov
add
scas
push
stc
xchg
push
pop
xor
loope
aas
and
sbb
mov
enter
lret
cmp
dec
or
aam
mov
sub
ja
cmpsl
sub
lods
or
fwait
and
xchg
rcll
sbb
imul
shld
push
cmp
inc
fisttpll
cs
add
gs
imul
inc
cld
ss
mov
aas
mov
test
mul
cwtl
jbe
sbb
pushf
stos
sbb
lret
xchg
fcom
popa
and
cmp
cmp
je
addr16
scas
sbb
incb
popf
test
sub
test
push
je
sti
call
mov
aas
xchg
jge
insl
rolb
ds
int
sub
int3
sub
ficoms
xor
andl
lea
jbe
jae
les
outsl
mov
fs
int3
sahf
bound
fmull
dec
and
popa
xlat
mov
mov
dec
gs
movsl
aaa
dec
pop
adc
arpl
iret
pop
or
adc
scas
lahf
add
dec
std
setno
jp
fldenv
cmp
pop
xchg
dec
push
add
pushf
pop
fildl
xchg
sahf
jo
push
mov
adc
or
shl
rcrb
nop
mov
in
les
leave
cmp
dec
stos
lds
sbb
pop
adc
inc
and
jge
sbb
ret
mov
or
pop
push
bound
cld
shlb
cli
cmp
icebp
and
sbb
imulb
insl
data16
stc
popf
xchg
mov
mov
push
addr16
pop
pop
or
pop
jge
aad
cmp
imul
shrl
cmc
pop
mov
pop
pop
inc
push
test
movsb
mov
loope
xchg
xchg
mov
ret
clc
pop
stos
cmpsb
test
loopne
mov
mov
mov
sub
mov
mov
fstp
pop
jo
in
mov
push
repz
inc
jne,pt
jno
jg
dec
and
dec
mov
inc
xchg
xor
stc
shrb
int
mov
imul
out
inc
add
lock
push
out
push
jmp
inc
daa
pop
pop
ja
arpl
outsb
lea
and
inc
xor
mov
add
pop
mov
add
xchg
mov
xor
push
test
cmp
inc
pop
lea
ror
mov
call
movsb
xchg
movb
cmp
adc
rclb
fldenv
dec
bound
rorl
imul
in
lcall
subl
lds
mov
xlat
cltd
add
aam
lret
sbb
jecxz
icebp
sub
add
fcmove
iret
pop
xor
vmovntdq
imul
pop
push
dec
sub
or
inc
negl
pandn
lret
leave
mov
xchg
jae
faddp
mov
jo
xchg
insl
cmp
push
jecxz
pop
inc
in
addl
call
mov
adc
mov
sub
rcrl
and
and
scas
mov
xor
xchg
cmpsl
shlb
cltd
aas
mov
xlat
dec
or
pop
aaa
inc
push
lock
scas
adc
out
loopne
pop
cmp
inc
les
xchg
imul
xlat
andl
cmc
add
imul
add
lret
stos
push
mov
lock
and
jl
adc
jns
clc
push
mov
aaa
pop
outsb
fs
or
inc
push
pushf
test
jle
cmc
xchg
xchg
xorb
jp
insl
scas
je
cmpsl
test
gs
mov
ds
into
cmp
cmc
in
mov
mov
scas
iret
add
pusha
mov
jno
sbb
sbb
arpl
mov
into
pop
mov
pusha
test
cs
xor
xchg
lods
mov
jns
sbb
aam
lds
mov
into
pop
fdivl
lods
lods
rcrb
pop
test
fs
xor
adc
dec
pop
dec
sti
sub
lret
lcall
inc
add
sub
test
push
es
jno
xor
xchg
mov
mov
out
cli
jbe
pop
test
outsb
les
aad
and
sub
fnstsw
sub
jle
add
push
out
icebp
sbb
in
mov
push
mov
rorl
in
cmp
fldlg2
imul
jb
cmp
add
in
repnz
dec
mov
pop
popa
cwtl
mov
fimull
sbb
xchg
cmc
sub
jb
xlat
mov
mov
aas
push
ds
fadds
pop
lods
test
mov
and
pop
outsb
xor
push
outsb
push
sbb
adc
inc
in
adc
dec
sub
mov
add
xchg
and
lcall
scas
add
test
testb
fcmovnbe
push
hlt
dec
es
inc
or
out
dec
bound
pop
xchg
mov
cmpsl
jne
scas
push
iret
stos
scas
bound
mov
dec
sahf
cmp
mov
mov
fwait
pop
jo
jmp
lock
mov
fs
xor
pop
pop
shl
dec
ds
adc
addr16
or
jp
cmpsl
insl
push
scas
insb
aam
les
rcl
mov
in
fistl
mov
sbb
aaa
cli
lods
ficoml
inc
popa
cs
test
jge
scas
mov
sbb
dec
test
mov
push
dec
push
ret
mov
pop
mov
in
sbb
stos
pop
sbb
jae
outsl
out
cmp
jp
xor
pusha
fxam
add
push
aas
insb
push
pop
xchg
test
xchg
fs
jp
sbb
push
mov
aaa
in
mov
aam
mov
jmp
daa
cmc
stc
fsub
mov
insb
push
jnp
inc
sahf
cmp
jns
hlt
pop
fisttpl
add
repnz
push
adc
cmp
shlb
je
sub
or
cmpl
push
fdivr
adc
shll
lret
stc
pop
mov
das
add
lds
cmp
cld
leave
shr
push
sub
jle
sbb
adc
xor
js
jae
aaa
mov
jp
mov
imulb
mov
pop
mov
mov
cmp
mov
sub
in
jb
lcall
xchg
adc
mov
aam
dec
sbb
int
mov
stos
push
out
push
mov
daa
add
aad
addr16
mov
popl
sub
imul
lcall
jo
dec
test
mov
xor
ja
enter
mov
sub
addr16
pop
mov
jp
dec
or
aam
sbb
adc
mov
push
sbb
push
fldt
jnp
mov
stos
cmp
aam
int
mov
push
fstpt
lcall
repnz
jns
push
cltd
imul
lahf
loopne
mov
mov
mov
adc
outsl
imul
sbb
pop
xchg
insb
and
pop
add
iret
das
sub
dec
add
xor
jno
rcl
lods
jmp
clc
fmuls
xchg
dec
mov
sub
shlb
movsl
and
mov
ds
or
lret
mov
mov
mov
inc
jo
shlb
pop
insl
lret
jno
jg
push
arpl
cwtl
mov
and
lret
ss
mov
xor
push
stos
push
mov
std
add
adc
xchg
or
jbe
mov
mov
enter
cmp
mov
outsb
xchg
cli
popa
dec
je
std
mov
mov
and
cmp
xor
xor
adc
cld
push
mov
xor
adc
daa
or
ljmp
and
cmc
stc
cli
out
push
cld
out
sbbl
das
mov
ja
inc
xor
into
imul
cmp
fs
jnp
push
les
and
in
arpl
dec
aad
push
das
jbe
mov
call
and
mov
push
xor
fwait
add
push
xlat
test
cmc
shrb
arpl
push
inc
mov
xchg
aam
out
mov
jecxz
pushf
adc
add
jle
lods
loop
and
dec
push
xchg
add
ret
movsl
xchg
mov
jnp
loop
sahf
jl
push
adc
mov
ror
jo
divl
sub
push
or
scas
call
adc
cmpsb
xchg
or
outsl
call
xchg
add
popa
pop
aam
cs
sub
jle
add
xchg
gs
rcll
and
add
lret
xchg
out
shll
fsubrs
ja
fiaddl
repnz
xor
imul
jecxz
xchg
jl
push
adc
out
jae
pop
dec
mov
or
dec
xlat
xor
or
out
cmp
jb
mov
inc
arpl
les
aad
adc
pushf
outsb
cmpsb
adc
pop
popf
jecxz
repnz
pop
arpl
pop
fstpt
push
lret
nop
inc
jns
aad
fistps
sarb
mov
fildll
insl
cmp
sahf
xchg
addr16
sbb
xor
cs
bound
dec
add
sbb
add
nop
xor
fcompl
jl
psrad
popf
clc
aad
jbe
cmpb
pushf
add
jnp
adc
dec
popa
mov
mov
fisttps
imul
mov
push
insl
nop
cmp
lahf
jp
sti
int3
cmp
adc
je
jns
mov
add
pop
push
outsl
xor
or
ret
fs
mov
inc
pop
jmp
or
imul
and
fmull
test
xchg
psrld
lahf
pushf
xor
ss
ja
jbe
adc
inc
push
xchg
or
push
cmpxchg
xchg
sti
sarb
add
dec
cmpsl
pushf
sbb
iret
insl
push
mov
jne
lret
sarl
mov
cmpsl
loop
cld
inc
test
jo
cltd
mov
aas
and
popf
cmp
dec
cli
push
outsl
sub
inc
cltd
pusha
data16
pop
cli
sti
out
sub
add
fdivs
xor
fcompl
js
rclb
jnp
testl
out
inc
imul
or
shr
sub
stos
sub
or
int3
lret
fsubs
sub
mov
rcrb
pop
and
enter
loope
fwait
in
inc
rorl
fwait
sbb
flds
dec
mov
push
dec
lea
lock
adc
notl
decb
stos
scas
jb
insb
jmp
jae
push
jg
clc
aad
adc
data16
popa
lds
push
daa
push
loopne
jo
ljmp
xchg
repz
pusha
and
adc
jle
or
and
inc
inc
mov
in
cs
cltd
jp
dec
testb
dec
push
sbb
sbb
pop
dec
jmp
jecxz
je
mov
xchg
ret
push
mov
sarb
les
ret
call
shll
rcr
sub
mov
and
divb
xor
mov
xor
out
cmp
sub
je
push
sub
cli
pop
in
into
call
xor
sbb
jne
sbb
cmp
fstps
jge
popa
cmp
push
and
hlt
inc
xchg
imul
pop
push
sbb
cmc
mov
pop
dec
jbe
and
insl
fwait
test
dec
cmpsb
lret
in
hlt
mov
or
xchg
sbbb
cmp
jnp
push
sub
lcall
stos
iret
cmpb
add
xor
push
cmp
sar
in
shrl
adc
sub
xor
pop
inc
rolb
repnz
cs
push
or
mov
repz
mov
xchg
fnsave
push
icebp
ret
lahf
sub
pop
mov
lret
stos
pop
sub
xor
mov
adc
inc
or
ja
bnd
arpl
out
add
and
fdivs
add
cmp
mov
popa
dec
enter
xor
aas
or
or
clc
xlat
dec
rcrb
ror
jmp
movsl
and
fstpl
xlat
pop
inc
scas
mov
lret
shrb
dec
dec
sbb
ds
iret
cmpsb
cmp
fs
movl
movsb
js
ja
mov
inc
lods
add
clc
dec
mov
std
add
cwtl
mov
dec
fnop
mov
mov
inc
mov
jge
mov
xor
movsl
pop
scas
rcr
mov
pop
pusha
pop
mov
sbb
scas
in
sbb
lods
scas
xchg
cmp
xor
sub
jp
mov
mov
dec
arpl
lods
fldenv
xchg
inc
adc
adc
pop
mulb
mov
add
pop
push
cwtl
pop
lds
mov
dec
cmp
pop
ds
xchg
sbb
jb
or
xchg
xor
jbe
aad
cli
insb
jle
xor
lcall
sbb
adc
lock
js
movsb
xchg
hlt
sub
in
xlat
iret
outsl
movl
imul
aas
out
jmp
imul
push
xchg
lock
mov
push
xchg
sbb
jecxz
cmp
out
out
test
mov
test
insl
ja
inc
ficoml
imul
mov
lds
mov
fsub
daa
aam
scas
mov
mov
ret
inc
dec
sub
sahf
gs
add
out
ss
test
mov
in
xchg
pinsrw
sbb
out
ja
add
lret
jb
push
fwait
fs
and
out
es
adc
inc
cmpsl
rorb
xor
push
and
insl
inc
ret
push
cmp
loop
pop
std
mov
xor
add
repz
sub
mov
pop
adc
das
scas
test
jmp
cmp
add
lock
sub
jmp
jae
test
repz
cmpsl
lods
sbb
jne
inc
xorb
adc
shlb
cs
popf
out
repz
nop
mov
stc
push
cmc
call
mov
adcl
pop
pop
out
icebp
repnz
or
add
sbb
cmp
ja
pop
and
cmp
pusha
lahf
or
push
cmp
fsub
stos
and
or
mov
aaa
das
mov
and
sbb
jge
cli
and
ja
pop
push
iret
cmpsl
shll
jne
push
popf
dec
hlt
push
in
ret
lahf
lock
ret
mov
gs
lahf
xlat
mov
cmp
cltd
shr
jmp
aas
icebp
sbb
test
dec
les
divl
arpl
loope
inc
jbe
out
call
roll
mov
fmuls
and
outsl
insl
cmp
jmp
orb
clc
inc
pop
cwtl
mov
test
pop
and
lahf
pop
jl
hlt
pop
or
in
gs
add
scas
mov
sbb
jmp
jb
xor
fstl
inc
neg
or
ja
filds
xor
in
xor
xlat
movsl
mov
sbb
aas
fidivs
push
sub
jbe
or
xchg
push
lds
rcrb
test
jp
jecxz
pop
ret
mov
bound
jb
lcall
orl
flds
loope
adcb
cli
jno
repnz
inc
lcall
mov
iret
in
ret
fwait
jnp
ret
pop
inc
add
jl
adc
sbb
adc
icebp
std
fs
or
jnp
adc
pusha
loopne
push
add
aaa
adc
mov
push
and
data16
jnp
pop
imul
jecxz
das
pop
adc
xor
sbb
and
pop
dec
cltd
pop
out
pushf
adc
inc
jne
pushf
les
mov
push
adc
cmpsl
test
mov
cmp
sarl
add
in
cmovbe
es
out
cli
jmp
aam
cli
mov
pushf
mov
mov
int3
imul
fisttpl
nop
out
dec
lret
ljmp
adc
jge
sbb
aad
data16
push
xchg
mov
fs
push
fsubr
fistpl
sub
mov
xchg
push
loopne
scas
shrl
mov
pop
inc
or
mov
lock
les
sbbb
popa
test
arpl
in
shll
push
jge
push
punpckldq
mov
xchg
insb
jo
sub
jns
xor
lea
pop
push
in
cmp
je
out
jb
iret
mov
push
mov
out
sar
xor
sti
outsb
and
popa
imulb
clc
sub
or
sbb
cmpsb
out
insl
jnp
mov
add
mov
cld
fstpl
loopne
jmp
std
in
out
push
push
sarb
and
enter
mov
push
lods
fsub
imul
jne
int
mov
in
or
mov
xor
mov
gs
sub
jge
addr16
paddusw
loope
roll
repnz
sbb
xchg
shrl
add
inc
into
notl
aad
mov
or
ret
mov
insb
cmp
sbb
fstpl
cmpsb
sbb
int
add
out
and
jle
mov
mov
ret
mov
mov
push
and
or
aam
jl
push
inc
dec
sbb
sahf
xchg
das
xor
pop
je
push
xor
push
dec
imul
enter
lahf
push
xchg
xchg
jmp
icebp
in
mov
pop
int
frstor
dec
shrb
test
xor
imul
xchg
mov
sahf
or
sti
mov
mov
gs
sub
aaa
jo
sahf
lods
pop
rclb
add
movsl
out
inc
pop
and
push
xor
lret
pop
popa
addr16
pop
sbb
jo
adc
adc
mov
xchg
sbb
cmpsl
xorl
mov
sub
push
inc
int3
ljmp
ja
loop
mov
xchg
gs
aad
lret
imul
outsb
or
cltd
insl
int
shr
dec
or
test
and
push
pop
xchg
push
xor
imul
fsub
inc
les
cmp
lds
add
cld
xchg
sbb
or
xlat
cld
jl
jge
sub
sbb
inc
mov
cs
and
stos
or
leave
jmp
ret
adc
mov
cmpsl
into
repnz
inc
add
jnp
cmp
sahf
sahf
pop
mov
call
subl
std
das
sbb
aas
pop
push
hlt
pop
daa
outsl
mov
pop
cmp
sub
call
lahf
add
mov
cmp
sub
movsb
push
xor
lcall
and
lock
push
cwtl
outsl
and
push
test
aam
pop
sbb
aad
jg
mov
scas
mov
mov
push
inc
xor
test
in
sti
ret
xor
cli
fwait
push
xor
aaa
pop
imul
lea
pusha
cmpsb
jecxz
or
or
mov
ficomps
fdivrp
pop
mov
in
ljmp
jae
lret
jmp
shll
or
inc
pop
mov
mov
jle
int
fcompl
jge
loopne
dec
scas
pop
or
adc
mov
data16
jp
cmp
dec
das
jne
lds
and
cs
or
jecxz
or
int
sub
jg
aas
mov
mov
icebp
xor
mov
ljmp
inc
test
in
ja
inc
jns,pt
ret
adc
inc
inc
adc
xchg
push
aam
xor
fcmovu
andl
pop
ret
cmp
call
pusha
notb
xchg
sbb
xor
into
push
into
jno
icebp
or
dec
sbb
fcoml
imul
sub
sti
cmp
jge
mov
jno
lahf
repnz
sbb
sbb
mov
hlt
inc
and
test
dec
addr16
popa
add
or
sbb
add
fdiv
mov
imul
pop
fsubp
cmpsl
test
std
daa
cld
fs
insl
adc
xchg
cmp
adc
mov
mov
xor
dec
scas
ror
mul
movsl
add
daa
mov
cld
insl
cltd
sub
jge
jg
daa
mov
ljmp
jo
jl
push
lahf
fistl
call
icebp
xchg
sub
pushf
add
lcall
mov
adc
sbb
adc
sbb
pop
add
pop
push
or
add
psubb
mov
pop
test
sbb
stos
daa
aam
or
cmp
mov
lahf
sbb
cmp
adc
faddl
pop
mov
lock
inc
cmp
and
inc
mov
mov
stos
sbb
pusha
push
pop
jae
push
dec
mov
test
inc
add
inc
xor
loope
in
pop
mov
or
into
dec
jg
outsb
add
xchg
cmpl
or
ret
dec
mov
mov
in
mov
adc
loop
or
shlb
adc
xor
sub
aaa
out
test
scas
aaa
imul
mov
inc
sbb
sub
cltd
mov
cmp
fistpll
push
push
jp
xchg
imul
jmp
jmp
enter
rcrb
movsb
sbb
out
cmp
mov
mov
int
xor
xor
movsl
inc
adc
jno
leave
ret
or
scas
jne
dec
jo
or
lods
add
cmp
mov
push
ror
dec
xor
outsl
inc
add
ljmp
lret
mov
repz
jno
pop
sahf
push
mov
aam
out
xchg
inc
add
or
pop
push
cld
in
mov
xor
add
mov
sarl
sub
jo
mov
ljmp
sub
jnp
sub
movsb
cwtl
xor
sbb
ret
dec
leave
sti
sbb
push
jne
outsb
or
das
and
icebp
mov
subb
adc
mov
mov
sahf
sbb
sbb
adc
movb
xor
pop
jmp
sbb
push
sub
add
stc
sub
adc
decb
or
jmp
in
ss
xor
pop
jnp
fsubs
inc
mov
push
push
push
push
mov
lcall
ret
and
das
jno
and
mov
insb
push
sub
rorb
mov
ror
pushf
lret
out
xchg
sub
lods
xchg
adc
rclb
lea
les
lds
sub
add
jne
sti
dec
or
or
stos
mov
arpl
loope
add
ror
call
aam
out
std
add
sahf
push
jae
sbb
arpl
ret
sbb
repz
cmp
lcall
add
inc
icebp
mov
mov
lret
aad
xor
jnp
xor
and
subb
pop
fmuls
icebp
and
fwait
rclb
fstps
stos
pop
push
cs
xor
jbe
xor
cwtl
arpl
and
cltd
xchg
sub
int
jl
xchg
mov
out
pop
fnstsw
iret
cwtl
inc
lock
gs
movsb
popf
jg
lret
rcrl
add
mov
add
pop
shlb
int
xchg
leave
xchg
mov
xchg
mov
call
push
pop
xchg
xor
pushf
inc
cltd
sbb
cld
and
mov
jle
rorl
in
loope
sbb
jp
mov
inc
fcoms
mov
jne
inc
or
fwait
jmp
int
pop
js
sti
pop
into
nop
xchg
icebp
out
je
add
and
ljmp
leave
in
jle
push
xchg
enter
cmp
sub
adc
fidivs
stos
test
mov
and
xchg
dec
mov
adc
pop
pop
negl
mov
mov
sbb
fnsave
push
jb
adc
sbb
enter
pushl
out
mov
jb
stos
mov
add
jge
ret
add
js
xor
xchg
dec
sbb
insl
std
cld
xor
iret
sahf
mov
cmp
in
sub
icebp
jecxz
mov
pop
sub
nop
movsl
dec
rclb
push
mov
les
adc
mov
test
lods
adc
jge
xor
test
jno
inc
outsl
push
cmc
movsl
cmc
mov
cmpsl
loop
shlb
popa
and
push
enter
sub
bound
mov
pop
movsb
inc
out
fsubrl
addr16
bound
loop
ds
in
pusha
scas
loop
stos
ja
repnz
dec
mov
inc
int3
mov
movsl
xor
push
arpl
jae
xchg
sti
push
enter
xor
cwtl
lahf
dec
dec
or
xchg
shrb
xlat
std
mov
lods
add
bswap
sarb
neg
js
xchg
mov
push
shl
sub
xor
inc
das
jge
loopne
mov
aam
aaa
dec
jns
adc
add
shrb
mov
inc
sti
mov
and
lods
xor
mov
cmp
call
cwtl
cli
in
call
dec
nop
xchg
arpl
lret
fnstcw
mov
popf
movzwl
lret
inc
jo
mov
mov
lods
push
jmp
sbb
cmovnp
xor
dec
pop
pop
and
adc
cli
stc
mov
out
mov
adc
fucom
rclb
out
imul
sbb
int
add
and
mov
hlt
lret
pop
stos
lcall
xchg
insl
mov
or
jl
jb
call
add
pop
arpl
cmp
mov
pop
inc
aas
enter
test
ds
enter
fwait
cmc
sahf
inc
dec
insb
add
jecxz
sti
add
fwait
push
cmpb
mov
insb
xlat
aas
movl
icebp
dec
fdivs
cmp
aas
sub
sub
std
inc
mov
dec
push
outsl
jno
shrl
rolb
xchg
mov
sti
inc
adc
mov
xchg
loop
cltd
or
jb
or
jge
popf
sarb
add
push
fists
push
icebp
cs
notl
loop
or
lret
mov
lahf
mov
cmpsl
pop
outsl
pop
add
fwait
add
hlt
pop
cld
sbb
adc
bsf
sti
jo
les
mov
mov
xor
lcall
pop
jne
add
lahf
jmp
add
xchg
jmp
repnz
fisubrs
adcl
leave
xchg
or
sti
inc
dec
inc
cli
mov
push
xchg
mov
adc
cmp
popf
sub
push
rcrb
jmp
add
add
popf
push
jno
inc
mov
pop
lahf
sbb
out
mov
ja
adc
xchg
sbb
jmp
rclb
jb
mov
or
push
std
shr
fstps
outsl
jmp
pop
jbe
lods
xchg
sar
mov
dec
loopne
sub
xor
push
cli
cli
bound
imul
cmp
push
movsb
jp
mov
cmp
ljmp
enter
nop
push
outsb
or
stc
jmp
cmpsl
xor
sub
cli
daa
mov
inc
fs
mov
ffreep
in
mov
popa
dec
pushf
jnp
pop
repnz
xor
mov
or
cld
push
xor
sub
sbbl
jmp
dec
enter
push
aaa
repz
adc
pop
xchg
daa
es
cltd
cld
adc
stos
lods
out
jecxz
mov
xchg
add
out
mov
xchg
addr16
bound
adc
mov
push
call
fwait
jns
filds
dec
lods
test
cmp
push
xchg
adc
in
fs
xchg
imul
mov
mov
popa
pop
movsl
sbb
jne
cltd
and
xor
imul
adc
push
mov
dec
jecxz
mov
push
and
out
mov
xlat
adc
adc
push
dec
or
test
aad
stos
jns
fwait
sub
jmp
xor
mull
sbb
repz
ret
loop
mov
in
std
dec
cmp
inc
fisttpll
fildll
pop
inc
xor
iret
sbb
es
or
loop
xlat
xchg
sbb
enter
fwait
arpl
popa
xchg
lods
ret
cmpb
and
cmp
xchg
in
mov
push
xor
das
data16
dec
add
icebp
adc
shll
imul
cmpsb
and
lods
ficoms
push
pop
data16
lcall
ret
cmp
int3
jecxz
outsb
dec
ret
das
sahf
pop
push
dec
ds
out
inc
mov
mov
daa
mov
inc
scas
pop
adc
mov
add
and
jbe
out
sbb
jb
js
pop
and
ja
sub
mov
lds
jb
sbbb
and
xchg
sub
or
cwtl
test
fimuls
je
lock
mov
mov
clc
gs
and
mov
pop
xor
scas
cmpsl
out
cli
or
orl
add
pop
stos
fwait
cwtl
ret
push
mov
out
cmpsb
test
jle
ja
push
dec
ret
or
in
jecxz
pmaxsw
subb
jl
lret
xchg
sub
jg
jl
test
test
jge
out
mov
sub
aam
movsl
cmp
mov
add
cmc
iret
leave
icebp
cmp
jns
jecxz
ficoms
imul
push
add
xor
sbb
out
mov
test
mov
mov
lods
jae
adcb
add
js
in
dec
and
mov
or
inc
mov
mov
fidivrs
mov
jae
push
test
popf
ja
adc
xchg
mov
divb
jl
fldpi
cwtl
test
lahf
jb
icebp
sbbl
cli
out
int3
je
out
pop
sub
les
adc
fnstsw
movsb
movsl
imul
adc
pop
repnz
out
aaa
icebp
andb
cwtl
ret
fs
xor
jmp
or
push
js
xor
mov
mov
flds
loop
dec
orb
notl
daa
mov
sti
mov
out
pop
push
adc
lods
pop
inc
test
push
mov
or
lock
xchg
inc
imul
cwtl
push
or
xchg
scas
xor
pusha
dec
out
jae
inc
mov
mov
not
pop
cmc
push
in
xchg
or
dec
and
pop
enter
loopew
pop
cmc
insb
sub
movsb
xor
addr16
into
or
cmpsl
mov
sub
push
mov
out
int3
loopne
test
adc
stc
hlt
push
into
mov
clc
jbe
adc
jb
mov
xor
lret
adc
movsl
into
cmpsl
ds
cmp
pop
js
push
movsl
pop
insb
imul
fadds
mov
pop
xchg
into
pop
stos
call
xor
je
xchg
dec
mov
cmp
dec
stos
mov
outsl
add
out
mov
pop
repnz
cmp
jnp
sub
dec
arpl
dec
ljmp
lods
arpl
fbstp
stos
push
int3
movsb
sub
fwait
xor
adc
mov
loopne
in
cli
mov
sub
jecxz
xor
mov
mov
mov
jns
xchg
daa
ret
cmpsl
lods
cmp
mov
insb
movsl
and
cmpsb
push
aas
cmpsl
icebp
cld
lsl
int
jl
clc
aas
sti
ss
sarl
inc
cmp
hlt
and
or
push
std
ja
sub
into
daa
jae
add
xchg
xor
jle
push
aad
cld
js
pop
jg
sbb
and
std
mov
sbb
and
out
dec
sub
xchg
popa
js
ljmp
mov
bound
imul
jnp
mov
lcall
ljmp
xchg
out
inc
adc
sbb
cmc
cmc
stos
js
dec
in
cli
scas
cmp
jo
pop
lds
inc
mov
push
addr16
fisubrl
fiadds
dec
push
sti
aas
aad
enter
mull
nop
dec
sub
cmpl
sub
fsubr
add
je
stos
in
jmp
aam
inc
inc
mov
cltd
popa
pop
and
shll
pop
mov
stc
mov
scas
cmp
inc
mov
mov
ja
lods
ds
mov
repnz
stos
xchg
adc
decl
sbb
pmuludq
push
push
lods
dec
add
dec
mov
push
xchg
sbb
rolb
std
inc
shlb
cmp
in
xchg
sbb
cld
xchg
push
imul
mov
mov
outsb
rcll
test
icebp
aam
sub
sbb
sahf
xor
bound
mov
mov
inc
or
sbb
pop
and
mov
inc
js
mov
push
pop
dec
and
or
flds
loopne
push
pop
push
pop
push
mov
int
pop
movsb
in
hlt
js
jl
sbb
jne
lock
pop
jmp
cmp
fisubl
mov
loopne
es
shll
sbb
xor
test
in
jge
repz
mov
jbe
sbb
adc
jl
rolb
xchg
hlt
push
cmpsl
jne
gs
cmpsb
ret
ja
iret
nop
leave
push
les
js
push
ja
fs
in
test
inc
xchg
sti
or
jnp
out
into
xchg
inc
xor
dec
push
data16
repz
fwait
scas
mov
test
ftst
test
clc
sbb
int
test
iret
fists
mov
add
add
pop
movsb
stos
fildll
aas
into
inc
out
push
mov
xchg
insl
imul
cmp
out
outsl
pop
jbe
jmp
popa
fistps
rcll
xchg
cmp
and
sbbl
int3
or
lret
mov
fsubrs
lds
outsb
mov
repnz
incb
std
ss
cmp
xor
pop
and
aad
xchg
out
mov
testl
stos
mov
xchg
int3
sub
jle
inc
jecxz
sahf
mov
jle
je
jmp
dec
dec
enter
xchg
xchg
xchg
js
jb
add
dec
pop
and
jmp
mov
scas
xlat
or
push
lds
xlat
scas
mov
add
sbb
outsl
imul
movsl
push
jbe
pusha
xchg
mov
adc
pop
mov
scas
push
adc
lds
enter
cmc
scas
mov
mov
adc
dec
insl
xor
insl
jge
jbe
out
lds
roll
test
in
mov
lods
fwait
loop
insb
push
and
mov
xchg
arpl
test
jg,pn
jns
xor
fsubrs
cmpl
stos
sbbb
xchg
loope
lock
movb
adc
sbb
in
dec
pop
das
mov
gs
inc
mov
pop
ja
add
adc
xchg
adc
push
push
adc
ja
imul
test
sbb
xchg
out
aaa
lahf
mov
xor
lahf
lods
inc
push
cwtl
daa
inc
push
jnp
and
fs
das
stos
popa
daa
sete
ss
mov
xor
fstps
sbb
jp
sbb
fsubrl
inc
sub
outsb
mull
test
push
cmpsl
into
xchg
mov
lods
je
outsl
popa
fisubs
aaa
aad
xlat
jmp
ret
js
arpl
xchg
ja
ffree
stos
xlat
mov
in
add
and
inc
fstpl
inc
cltd
cld
jo
int
xor
dec
cld
scas
fisubrl
loope
xlat
xor
imul
jp
and
divb
mov
sub
cmp
les
mov
ja
push
inc
and
pop
mov
mov
into
mov
cmp
cs
out
push
in
pushf
push
or
enter
adc
mov
add
cmp
mov
les
imul
adc
mov
push
push
sbb
pop
or
cmp
test
jbe
jnp
sbb
ja
inc
shrb
lahf
cld
mov
aam
cs
loope
and
xor
clc
mov
pop
xchg
inc
jg
stos
lods
stc
jns
in
and
xchg
mov
mov
xor
loopne
js
xchg
mov
mov
aad
bound
dec
dec
insl
xchg
jae
aas
daa
lods
cwtl
dec
addr16
ret
mov
clc
inc
stos
jo
call
and
mov
or
insb
mov
inc
and
incl
xor
shrb
inc
in
sbb
push
mov
ja
mov
add
sub
mov
loope
ljmp
push
scas
rcr
repz
xchg
addr16
lock
pop
in
lods
repz
cmp
add
push
mov
mov
out
ficoml
repnz
scas
mov
sbb
test
cmp
xchg
lcall
shlb
nop
inc
test
in
pop
scas
out
inc
mov
mov
add
daa
test
cmp
cs
inc
sub
shrl
cwtl
int3
int
ljmp
cmovp
arpl
push
adc
stos
or
xchg
pop
mov
imul
inc
cmp
sbb
or
scas
dec
sub
and
adc
rclb
push
mov
lret
push
stos
and
fldcw
dec
pop
sbb
ret
push
cmp
test
imul
xchg
mov
fs
out
scas
cmc
lret
ficoml
in
push
sbb
inc
mov
xchg
arpl
cmp
pop
ficoml
cmpsb
and
push
orb
testb
in
cli
jl
push
fmuls
test
lret
push
enter
mov
orb
and
push
jge
and
and
and
fdivl
add
push
dec
dec
push
rcrl
mov
dec
test
mov
movsl
jnp
jle
push
cmp
stc
add
push
sub
arpl
hlt
fs
shll
mov
mov
hlt
pop
jns
icebp
scas
out
xor
or
fbld
orb
and
fbld
xlat
sub
mov
jnp
es
leave
popa
ds
test
in
ljmp
and
adc
leave
out
jle
dec
pop
lcall
jle
cltd
jl
sub
mov
test
jge
pop
xor
or
jmp
in
jne
jno
aam
pop
add
mov
pop
pop
xorl
orl
xor
test
sub
das
xchg
cmp
dec
mov
sbb
cmp
xor
and
popf
shl
add
jmp
ljmp
adc
or
jge
lds
and
push
cmpsl
int
fildl
bound
add
iret
mov
scas
in
mov
dec
mov
pop
mulb
jno
insl
cltd
jmp
adc
imul
mov
divl
push
popa
and
fldl
jmp
movsb
adc
sahf
and
adc
hlt
leave
sub
jae
das
or
sahf
in
mov
jg
jae
fstpl
adc
sbb
fsubrs
cmpsb
out
lahf
dec
lods
dec
inc
ss
fsts
mov
movsl
mov
std
in
loope
add
inc
ficoml
xor
aaa
in
pushf
add
mov
in
in
enter
mov
ror
in
sbb
dec
hlt
add
lahf
cmp
sub
scas
lds
incb
push
movsl
pop
loopne
and
jecxz
mov
and
rcr
ljmp
sub
add
and
cmp
cmp
ja
mov
repz
shl
ja
test
xchg
iret
or
push
dec
imul
jl
stc
cltd
lret
mov
adc
lods
repz
subb
pop
pop
or
pusha
adc
or
adc
adc
add
or
cmp
mov
cli
cmp
xor
dec
xchg
sub
cmpsl
cmpsl
cmp
sbb
jb
jne
icebp
daa
ret
sub
fxch
out
pop
fbld
imul
mov
scas
or
sub
push
xchg
mov
shlb
fistpll
mov
insb
cmp
lods
ljmp
adc
lock
pop
dec
xlat
in
sub
aam
repz
cltd
cmp
jecxz
setge
repz
sbb
cmp
stc
pushf
jmp
pop
cmp
stos
loope
fcmovbe
ret
sbb
fsub
sbb
xor
or
mov
mov
lods
xor
es
mov
test
sbb
cwtl
mov
outsb
and
jns
cmp
cmp
or
pushf
mov
pop
push
add
dec
leave
fnsave
jle
jmp
enter
push
push
fistps
pop
les
aas
add
cmp
ret
add
cmpsl
mov
push
mov
adc
dec
loopne
in
negl
lds
movsb
cmp
iret
mov
cmp
add
cmp
out
dec
stos
sbb
stc
shrl
sahf
cmp
out
xchg
ss
and
in
popf
sarb
xchg
sbb
cli
add
pop
push
jmp
xchg
outsb
pop
int
into
clc
cmp
add
in
popf
inc
xchg
xorps
jno
mov
cltd
aas
and
idivb
repz
mov
push
fadds
adc
jl
lcall
mov
pop
jno
push
lret
imul
iret
in
in
leave
mov
loop
mov
mov
pop
popf
mov
repz
ja
out
inc
xor
popa
leave
cmpsb
frstor
cwtl
mov
clc
aam
sahf
loopne
fsubrp
jp
test
movsb
out
dec
mov
test
gs
push
in
xor
push
jge
call
test
add
orl
push
add
cmp
inc
inc
jae
out
cmp
pop
mov
pushf
in
int3
sbb
and
adc
mov
mov
mov
imulb
lods
xor
push
test
std
cmp
jmp
dec
mov
or
sahf
aam
pop
xchg
jle
nop
negl
notl
lret
mov
jb
mov
xchg
sbbb
ja
cmp
xchg
add
sub
popa
in
cmp
jnp
ret
or
je
dec
sub
adc
mov
dec
and
lock
out
xlat
ds
and
adc
incb
inc
mov
subb
std
outsl
xlat
jnp
mov
xor
sub
stc
jne
stos
jecxz
mov
add
fdivrs
cs
mov
movsb
ja
call
nop
fs
add
mov
sbb
dec
inc
jl
mov
mov
mov
ja
ss
add
mov
stos
xchg
adc
sbb
sub
or
mov
int3
pop
xchg
fcoms
nop
insl
pop
lods
cmp
pop
xchg
dec
or
mov
cli
int
sbb
inc
out
xor
push
test
and
mov
cmpsl
xor
cmp
int
lahf
adc
push
mov
fs
dec
fcoms
mov
cmc
xlat
sub
shlb
sub
fwait
mov
repz
xor
les
pop
adc
flds
lods
sti
cmpsb
out
and
popf
ficomps
lods
lods
nop
std
sbb
or
leave
out
cwtl
addb
xchg
mov
pop
jge
xchg
xlat
xor
mov
dec
push
dec
add
xchg
mov
add
pop
lcall
test
sbb
ftst
mov
inc
xchg
sbb
add
ljmp
xor
fidivrs
mov
jmp
dec
inc
sub
push
xchg
aad
test
jb
rcr
xchg
sti
sbb
and
gs
sub
adc
push
adc
bound
test
jbe
mov
shll
sbb
and
repz
xlat
jne
cmp
sti
aaa
ret
sub
sub
xor
sbb
into
rcrb
imul
addl
imul
das
insl
hlt
cltd
cmp
test
sbb
je
push
xchg
cs
mov
push
push
dec
test
bound
addb
mov
fiaddl
jge
cmp
js
adc
int
std
xor
mov
dec
mov
out
fsubrl
clc
arpl
sahf
lahf
or
rcrl
das
fildl
pop
dec
enter
mov
cmp
pop
arpl
ror
arpl
out
cmp
inc
adc
dec
popf
push
cmp
sub
test
dec
sbb
clc
xchg
xor
push
gs
and
inc
ficompl
lahf
inc
out
cmp
cmc
sub
and
jno
ljmp
int3
stos
iret
movsb
xorl
mov
into
push
xchg
cmpsl
push
xchg
cmpsl
mov
leave
mov
inc
shlb
push
pop
sub
xlat
pop
rclb
or
idivl
adc
sub
pop
pop
repz
out
sub
aad
sbb
rcll
cmp
pop
inc
std
sub
mov
fadd
mov
insb
mov
mov
cli
pop
push
sti
stos
lds
ret
sbb
inc
xchg
pop
sub
add
loopne
js
xchg
pop
es
icebp
arpl
cmc
or
adc
icebp
icebp
inc
pop
ret
cmp
in
sbb
in
xchg
inc
cmp
xor
xchg
cmp
test
test
imul
xchg
jle
mov
jns
outsl
sub
into
cli
jne
adc
cmp
mov
test
sub
sbb
adc
insb
and
xor
enter
rcl
aas
cli
mov
xchg
cmpsl
mov
dec
cld
bound
pusha
test
rcll
movsl
rorl
dec
sahf
in
pop
dec
jp
out
push
mov
jne
xchg
cmc
xor
xchg
xor
jp
outsb
fistps
sbb
and
aaa
xor
je
xchg
dec
xchg
sub
dec
add
nop
and
and
imul
jmp
lds
sbb
hlt
cmp
inc
ret
je
xchg
std
arpl
cmp
jbe
iret
cmpsb
scas
mov
stos
jp
cmc
pop
push
push
or
stos
mov
pop
xor
mov
pop
int
xchg
cld
mov
aaa
imul
jl
or
and
bound
mov
lods
mov
xchg
dec
sahf
jl
dec
push
or
pusha
jecxz
mov
dec
jle
mov
rclb
fdiv
movsb
inc
adc
insl
push
and
jecxz
cmp
out
add
cli
push
push
fdivl
or
outsb
adc
jnp
shr
mov
mov
and
and
fadds
aas
push
mov
pop
sbb
mov
sar
jae
or
mov
adc
jmp
adc
or
jnp
inc
or
cmp
push
sbb
movsl
sbb
fisubs
pushf
add
out
pop
fsts
mov
mov
jl
out
cmpsb
imul
push
nop
cmp
test
aad
dec
loop
cmp
pop
and
fdivp
mov
and
test
mov
insl
jnp
xchg
sbb
imul
test
pop
arpl
jnp
mov
mov
daa
lods
stc
ss
pusha
push
out
pop
lock
stos
iret
addr16
fisttps
push
stc
jae
pop
cld
inc
pop
fadd
lret
movsb
sub
jmp
les
push
imul
push
sub
or
addr16
mov
mov
or
cmp
dec
ljmp
cmp
in
adc
push
dec
pop
xchg
in
or
xchg
mov
pop
popa
incl
in
fcompp
dec
clc
dec
fistl
and
xor
pusha
pop
sbb
fs
xor
and
aas
mulb
popa
jp,pn
or
iret
fwait
jae
xlat
and
cli
ret
out
aad
dec
sbb
cvtps2pi
out
cwtl
mov
lahf
push
clc
push
fnstsw
imul
es
es
push
out
sbb
adc
cmpsl
xor
mov
jae
adc
mov
jns
inc
mov
adc
loope
sub
push
shll
in
and
stos
inc
rorl
mov
mov
js
mov
cld
ljmp
cwtl
jne
jg
into
out
rcll
mov
cmovbe
js
jnp
push
aam
mov
test
repnz
lea
ljmp
lret
in
subb
mov
cmp
test
jns
push
mov
fnstsw
lock
test
sub
pop
fcomip
insl
mov
push
mov
test
push
testl
jmp
bound
pop
stc
pop
xchg
hlt
xor
lock
sbb
cwtl
pop
test
sbb
push
fidivrl
in
jmp
pop
pop
sbb
sub
cmp
out
out
add
inc
scas
mov
inc
jge
xor
mov
mov
pop
cmp
jns
inc
sbb
inc
loopne
fbstp
xor
test
xchg
mov
out
fwait
roll
cmp
dec
ret
ret
mov
xchg
lcall
dec
mov
test
cmp
fwait
lcall
sti
adc
adc
mov
scas
ret
lock
cmp
pop
push
insl
pop
jge
jmp
xchg
mov
jg
lret
adc
sub
sub
cmpsl
mov
arpl
pop
movsl
push
in
lods
incl
in
xchg
int3
out
addl
lds
inc
push
push
mov
lcall
jne
pop
mov
mov
sbb
or
pusha
add
cmp
inc
dec
imul
cli
add
das
mov
std
in
arpl
into
lea
mov
pop
push
test
jmp
subl
leave
jge
ds
imul
mov
cmp
dec
or
sub
clc
repnz
inc
cmp
cli
insl
add
jge
mov
dec
lock
fwait
out
adc
lret
rorb
out
adc
aam
std
xor
fnsave
sbb
das
mov
cmpsl
pusha
xor
cli
mov
pop
negl
pop
cmc
inc
sbb
jg
stc
lahf
xor
ds
pop
in
roll
aas
aad
addl
out
xor
pop
out
push
inc
lock
pop
jno
push
and
cltd
mov
add
and
cmp
push
int3
inc
arpl
pop
mov
adc
pop
push
sti
dec
inc
mov
std
xorl
cmp
out
or
das
cmpsb
lcall
test
cltd
sbb
das
loopne
and
jo
jnp,pt
out
lds
mov
xchg
add
fwait
inc
jmp
or
mov
ljmp
inc
mov
mov
push
pop
out
loop
push
out
inc
inc
stos
lock
jmp
push
arpl
test
add
xor
in
adc
adc
les
mov
cmc
rcl
ret
call
jle
push
lahf
negb
dec
pusha
adcb
insb
xor
add
adc
sbb
mov
daa
mov
ficompl
dec
clc
cmp
mov
mov
xchg
and
mov
push
sbb
adc
scas
pop
test
aaa
lods
adc
fsub
movsb
shlb
jbe
push
pop
mov
mov
sbb
pop
neg
stos
add
leave
pop
pop
xor
or
fwait
rorl
or
cs
jae
cmp
jne
and
insb
pop
lahf
inc
lret
lods
xor
jle
setbe
fwait
mov
adc
cwtl
adcb
and
dec
rolb
call
inc
inc
daa
shll
sub
out
in
adc
mov
call
xor
es
or
jle
sbb
repz
push
fwait
jae
fstps
iret
sub
sbb
push
inc
mov
mov
pop
pop
push
push
outsl
xor
stc
nop
push
lds
in
adc
pop
push
mov
jg
or
outsb
xorb
mov
call
xor
insb
or
xor
nop
pop
push
xor
pop
dec
dec
bound
pop
test
push
inc
push
xchg
push
inc
or
add
dec
xor
xchg
repz
jmp
movsl
ret
neg
push
movb
adc
pusha
mov
xor
lock
fnstsw
mov
dec
pop
sbb
jno
push
repnz
xchg
inc
out
dec
fdivs
or
dec
mov
jne
lret
jecxz
fsts
pop
not
mov
hlt
or
cltd
imul
jb
adc
ss
stc
jp
outsl
lcall
push
call
lea
inc
and
mov
jns
mov
push
movsl
flds
adc
movsl
adc
dec
push
xchg
inc
mov
in
xor
push
inc
sar
and
xchg
ror
lcall
sub
sub
jecxz
jae
sub
jg
fadd
pop
mov
jp
lds
loopw
out
mov
fstpl
scas
mov
xchg
and
frstor
push
inc
sti
rorl
xor
sbb
inc
lds
add
aaa
idivl
mov
faddl
add
xlat
mov
sbb
movsl
pop
scas
popf
lcall
mov
outsl
repnz
test
lds
gs
jns
insb
jg
in
sbb
sbb
aam
loopne
add
cmp
lock
jne
mov
sbb
scas
sub
leave
call
adc
pop
jns
stos
in
xchg
inc
xor
xchg
jp
cmp
test
jle
inc
push
pcmpeqb
push
fbstp
in
or
or
ljmp
cmp
adc
or
xor
into
mov
dec
adc
testl
adc
stos
das
or
sti
push
in
sbb
xchg
adc
jae
push
filds
push
jnp
stos
mov
sbb
mov
mov
into
adc
stos
push
clc
and
jp
mov
sub
sub
insb
loopne
bound
dec
aas
leave
stc
shlb
in
gs
or
adc
cmp
stos
inc
ljmp
imul
test
adc
andl
je
das
mov
addb
mov
addl
outsl
js
lods
adc
dec
push
mov
sbb
push
adcl
pop
pop
cld
jns
shlb
sahf
js
ficoms
jno
push
xor
lods
jmp
cmp
aam
popa
fiaddl
popa
stos
in
bound
stos
gs
cwtl
cwtl
xlat
orl
into
dec
mov
push
mov
out
xchg
test
push
test
add
dec
mov
push
outsl
sub
addl
lret
insb
insb
arpl
in
push
std
rcll
fsubrl
test
dec
loope
insl
mov
mov
mov
sbb
inc
outsb
inc
leave
fdivrl
push
dec
fwait
pop
dec
cmp
and
cltd
test
lahf
sbbl
sub
jb
jo
inc
jo
xchg
shlb
push
cmp
cmpsl
clc
fstsw
jbe
lods
sarl
xchg
mov
pop
je
sti
adc
xorb
mov
pusha
ljmp
call
leave
js
mov
inc
push
mov
sahf
es
and
push
and
sbb
xor
out
scas
push
repnz
fcmove
shl
and
push
push
movsb
scas
mov
mov
cli
andb
cmp
fbstp
int
stos
dec
pop
xlat
addr16
push
repnz
cld
jle
not
mov
bound
sub
lret
pop
mov
out
icebp
setne
mov
cmp
data16
mov
xor
sub
mov
mov
out
or
cmp
sub
into
lock
sahf
pop
inc
loope
decb
dec
rol
adc
insb
push
and
fbld
mov
rcrl
es
lahf
push
xchg
fildll
nop
lods
call
add
jno
mov
inc
xchg
iret
add
inc
lds
and
shr
add
dec
mov
pop
or
inc
fnstsw
sbb
cmp
lods
mov
sub
xor
lods
xchg
push
mov
daa
cld
mov
and
ss
or
push
nop
imul
mov
push
shlw
ficomps
rolb
and
xor
lahf
jle
sar
out
cmc
sti
aam
xor
je
std
outsb
aaa
mov
push
jo
or
leave
xor
addb
dec
inc
push
fldt
pop
add
movsl
jmp
fstpt
int
mov
and
insb
rcll
cli
mov
jle
adc
icebp
xor
inc
fcoms
iret
sub
jno
push
jecxz
fstp
sar
scas
jge
inc
pusha
xchg
dec
dec
shr
adc
mov
mov
leave
imul
popf
push
out
sub
and
xchg
lret
mov
out
pop
push
xor
jg
sbb
mov
dec
xchg
outsl
ja
and
jns
lret
jle
scas
adc
xchg
popa
jo
xchg
popl
test
leave
movsb
ja
mov
and
xchg
movsb
clc
ja
bound
repz
sub
sti
pop
jge
iret
or
jbe
and
push
mov
ss
pop
aam
or
test
push
xchg
ja
es
mov
stos
pusha
in
xchg
add
or
lea
iret
out
jl
loop
pop
insl
xchg
pop
js
and
pop
inc
lods
pushf
in
and
aaa
cmp
or
xor
iret
int
cmpsb
lret
outsb
mov
data16
xorb
cmp
loope
les
into
pusha
mov
pop
adc
push
lock
mov
push
stos
jno
stos
enter
rcrl
sti
jo
hlt
movsl
jo
pop
es
xchg
dec
dec
data16
pop
stc
adc
cltd
ficomps
cmc
je
cmc
and
mov
in
mov
fmuls
das
daa
mov
dec
pushl
cmp
jg
popw
pop
add
mov
cmpsl
or
call
sub
mov
aad
mov
mov
jmp
rorb
sahf
faddl
jecxz
mov
jmp
jb
stc
sti
es
insl
cmp
push
idiv
inc
dec
sbb
pop
jmp
jmp
xor
xchg
rcrl
out
inc
inc
sbb
hlt
mov
lret
sahf
push
cltd
data16
lcall
rcr
icebp
mov
pop
iret
call
mov
insb
push
test
shrb
cwtl
bound
outsb
ja
lock
pop
popa
lods
cmp
push
jb
jno
arpl
insl
and
sub
movsb
add
or
or
shrb
test
cs
sahf
in
daa
xlat
mov
cmp
sbb
dec
push
or
mov
sahf
pop
fcoms
or
xchg
test
int
fisttps
in
add
xchg
dec
dec
and
jmp
xor
adc
inc
and
push
insl
in
xchg
jo
adc
mov
sub
mov
aaa
jb
cmp
xor
mov
mov
sub
mov
mov
xor
mov
fwait
adc
movsl
adc
pop
sub
test
cmp
xchg
pop
xlat
lods
pop
sub
sub
dec
pop
or
cmpsl
or
imul
test
adc
out
adc
push
stos
sub
adc
add
gs
push
fisttpll
fxch
repnz
ja
push
ja
ds
stos
repz
sbb
jnp
inc
add
int
shll
push
sbb
or
fiadds
xchg
pop
data16
jle
xor
mov
test
adc
dec
inc
jno
mov
movsl
mov
cld
mov
mov
xchg
sbb
jmp
xchg
pop
and
jle
bound
mov
push
stos
rclb
ror
popa
push
or
push
cmp
xorb
lahf
mov
popa
test
xor
icebp
push
pop
sub
pop
push
ss
inc
test
into
push
mov
ds
fidivl
jg
inc
sub
xor
mov
fwait
sbbl
xchg
out
jne
arpl
insb
push
repz
jbe
mov
lret
sahf
mov
in
popa
jmp
ret
mov
push
xor
in
stc
lock
pushf
loopne
ficoms
int
sbb
call
or
xor
cltd
divl
and
out
repnz
ljmp
out
cmp
dec
notl
mov
xor
adc
sahf
mov
gs
loope
cwtl
cmp
push
mov
int
xor
mov
movsb
push
dec
jne
rolb
mov
repnz
aas
dec
add
dec
inc
push
fimuls
loop
xchg
and
xlat
fidivs
shlb
push
push
sbb
scas
loopne
addr16
mov
sub
mov
movsl
or
jb
out
push
insl
test
cmp
xor
inc
add
or
and
lret
aas
pop
jge
leave
fwait
mov
aam
outsl
fstl
cmpsl
adc
push
inc
xor
mov
cmp
into
lea
leave
cmp
aam
je
in
scas
jp
sub
mov
push
xchg
or
push
movsb
add
sahf
pop
pusha
andl
sbb
xchg
nop
adc
dec
sbb
pop
addl
xchg
gs
add
cmpb
mov
mov
mov
aaa
mov
inc
lds
lea
push
jecxz
mov
jns
jns
dec
mov
mov
jg
loop
cmp
inc
mov
jns
int3
jg
es
mov
inc
and
lock
andb
outsb
adc
add
mov
int3
lret
pop
roll
sub
lcall
dec
nop
inc
and
sbb
dec
loope
mov
inc
jp
xchg
cmp
mov
inc
out
jb
jp
sub
in
loop
push
lods
mov
push
mov
xchg
jp
xchg
push
adc
movsb
or
decb
in
insl
lods
sbb
lret
rorb
ss
bound
out
popl
mov
dec
add
fs
dec
jb
das
inc
stos
inc
push
adcb
data16
add
pop
xchg
push
fcmovbe
xor
scas
sub
loope
xchg
sub
and
es
adc
outsb
sub
ja
shrb
pusha
push
inc
int3
jbe
adc
xchg
or
decl
inc
enter
mov
rcr
mov
test
fistpll
das
pop
pop
mov
mull
push
push
xor
stc
out
popf
mov
ret
sub
dec
jnp
rorb
cli
push
xchg
rcll
push
lock
adc
or
add
xlat
test
lods
pop
outsb
push
inc
into
fdivrl
xchg
pop
cmc
pop
ret
jg
adc
xchg
jns
or
mov
mov
int
push
fwait
cli
sbb
sbb
js
xor
test
and
repnz
mov
clc
push
jns
in
or
mov
cmpsb
cmp
add
movsb
sbb
pop
mov
sbb
or
mov
add
add
fdiv
mov
inc
and
pop
add
arpl
push
jne
xor
es
aad
mov
js
push
sub
stos
test
adc
fistpll
filds
aas
inc
add
adc
stos
lods
rorb
sarl
scas
cwtl
inc
push
mov
inc
jge
xor
cld
jmp
sbb
sub
inc
call
mov
or
xchg
icebp
imul
addr16
out
add
cmp
int3
push
pop
sbb
aaa
enter
mov
dec
sub
mov
lods
out
cmp
and
mov
pop
ss
idivb
adc
jmp
popf
dec
lock
leave
jo
adc
lods
subb
lods
inc
add
jge
sub
and
cld
cmc
xor
fstps
mov
mov
repnz
sub
xor
push
pop
dec
xchg
pusha
pop
pop
cld
dec
and
and
jno
ret
mov
movsb
and
xlat
fs
rclb
jno
cmovne
inc
xchg
and
cli
sbbb
adc
rcrl
inc
test
js
shrb
leave
es
or
push
lods
xor
sbbl
jmp
push
loopne
repz
bound
es
inc
jno
cmp
adc
jno
cmp
xor
jno
mov
add
hlt
jne
xor
push
lret
or
adc
xchg
jb
sbb
or
sub
inc
adc
ret
adc
stos
data16
jnp
cltd
mov
xchg
fildll
jl
mov
push
loopne
repnz
lods
push
addl
mov
jmp
pop
pop
cmp
mov
and
xchg
loop
mov
and
cmpsb
mov
stos
or
addr16
mov
xor
imul
mov
jg
and
test
xchg
imul
xchg
mov
pop
xchg
mov
nop
dec
int3
test
xorb
mov
lahf
dec
add
add
mov
xor
add
add
push
add
add
add
orb
add
push
add
addb
add
mov
xor
add
push
add
sldt
pusha
add
cmp
add
mov
add
mov
add
fadds
add
add
add
sub
add
mov
xor
add
add
add
add
js
add
add
add
add
add
add
add
add
add
add
add
push
add
les
add
mov
xor
add
add
add
add
enter
pop
push
add
xor
add
mov
xor
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
mov
xor
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
xorb
adc
add
add
add
mov
xor
add
add
add
add
mov
add
and
adc
add
mov
xor
add
add
add
add
mov
add
xor
hlt
add
add
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
loop
add
mov
bound
add
bound
add
bound
add
add
add
arpl
add
add
add
add
add
add
push
arpl
add
add
add
add
add
add
bound
add
add
add
ljmp
add
adc
add
add
add
incl
arpl
add
add
sbb
add
add
add
jmp
add
sbb
add
and
add
add
add
decl
add
and
add
sub
add
add
add
ljmp
add
sub
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
jne
xor
cs
insb
add
add
add
push
jns
inc
jb
gs
je
imul
add
jbe
jo
xor
cs
insb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
jne
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
gs
insb
xor
cs
insb
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
adc
add
add
add
add
add
add
add
add
add
int3
fnsave
sub
rorb
mov
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
xchg
rolb
icebp
pop
or
clc
repnz
push
add
xorps
cli
inc
out
inc
aam
cmp
mov
loopne
dec
jecxz
call
add
sbb
ss
pop
in
hlt
jne
in
jge
int3
es
mov
je
mov
pop
jno
rep
in
dec
or
push
sub
enter
jge
mov
shl
or
inc
outsl
dec
mov
sbb
orb
xchg
or
xchg
int3
pop
hlt
iret
data16
and
and
roll
inc
stos
add
pop
sub
fwait
int
adc
popf
or
loopne
incl
js
or
setg
dec
out
or
scas
icebp
cmp
cmp
jg
icebp
cmp
mov
icebp
xor
xchg
push
hlt
and
dec
aam
mov
call
inc
add
imul
add
pop
lea
dec
cmp
repz
ds
sub
call
or
push
sub
shll
nop
pop
push
jne
and
or
pop
outsb
mov
and
movsb
cmpsb
pop
or
sbb
out
repz
or
js
pop
scas
mov
rolb
addps
sub
mov
jbe
xor
mov
push
add
add
cli
mov
or
incl
jmp
popa
andb
pop
xchg
and
bound
adc
je
cwtl
lock
cmpsl
outsb
or
or
lahf
test
adcl
add
mov
or
cmp
cltd
or
insl
std
add
je
sahf
adc
push
imul
rol
ljmp
or
adc
outsb
lods
and
inc
inc
jns
fldl
push
cltd
dec
fmull
pop
cwtl
and
sbb
adc
jge
dec
xchg
jmp
pop
movl
add
lea
or
pop
daa
push
mov
test
cmp
push
mov
clc
adcl
es
cmpsb
sub
cmpsb
mov
mov
jae
mov
sbb
bound
inc
pop
sub
mov
add
xor
in
mov
lea
push
clc
test
adc
push
jmp
mov
pop
jmp
sbb
dec
js
pusha
fmull
test
jp
dec
jae
mov
pop
lea
mov
dec
fstp
jne
out
imul
je
add
pop
push
sbb
loope
out
mov
inc
sbb
mov
mov
loop
enter
enter
sub
adc
or
mov
or
xor
xor
jmp
mov
inc
bound
mov
or
popa
jno
or
les
sub
andb
push
pushf
bound
test
sbb
das
xor
pop
rorb
fsubs
lock
cwtl
adc
sbb
inc
inc
mov
sbb
repz
jl
movsb
cs
sar
inc
jecxz
pop
decl
push
push
nop
or
incb
mov
sbb
gs
sbb
out
insl
add
jb
js
cld
in
xchg
lock
lea
mov
adc
shlb
push
imul
or
sub
inc
dec
cli
jo
fimull
mov
shl
lret
stc
xchg
jecxz
push
adc
add
push
mov
decb
jo
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
push
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
xchg
test
lock
lret
add
mov
pop
inc
dec
addb
dec
cmp
sbb
jb
xchg
pop
adc
mov
mov
sbb
mov
stos
add
push
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
mov
xchg
fstpt
enter
fs
loop
xchg
leave
fldl
fildl
push
call
cld
add
mov
lea
sbb
sbb
jo
adc
lea
test
orb
or
dec
test
push
inc
add
mov
roll
or
scas
sbb
orl
inc
or
sbb
inc
insb
or
or
arpl
and
mov
push
and
xchg
sub
push
sub
adc
or
xor
xor
or
ret
jne
pop
adc
pop
or
dec
adc
xchg
test
lahf
aas
sarl
inc
xor
or
mov
cld
sbb
imul
imul
jg
call
rclb
push
icebp
inc
or
dec
mov
inc
or
add
sub
outsl
das
fisubrs
sbbb
sbb
push
lea
lods
stos
dec
add
add
jae
test
sbb
mov
jnp
ljmp
pop
sbb
add
cwtl
scas
jmp
sbb
call
add
mov
mov
inc
pushw
dec
push
iret
sbb
popa
daa
or
push
mov
sbb
ss
ror
inc
mov
push
movsl
rcll
xor
leave
je
xor
inc
inc
push
xor
jnp
adc
sbb
jne
inc
cmp
sbb
je
push
daa
and
lea
push
and
pop
orl
lahf
inc
loop
iret
aas
shlb
bound
test
dec
xor
or
and
and
andb
testl
mov
movsb
add
push
clc
aaa
rcrb
sub
mov
rdpmc
cmpsb
cmp
pop
or
pop
ret
adc
cld
xchg
mov
sbbl
push
loopne
push
add
push
decl
test
loope
jle
ret
rcll
add
push
jmp
ret
push
mov
or
xor
add
ret
in
pop
or
push
jne
scas
leave
rcrb
addl
inc
rclb
push
adc
jmp
dec
mov
mov
cltd
xchg
or
xchg
push
enter
push
xchg
pop
cmp
pop
or
mov
add
push
jmp
daa
cs
add
mov
adc
jge
bound
jp
insb
enter
jl
add
add
cmp
jge
mov
mov
add
sub
call
dec
mov
jne
mov
cmp
rorb
rclb
xchg
inc
push
push
add
cmc
int3
inc
jmp
enter
mov
cmp
sub
sub
pop
or
js
rcrb
and
xor
sub
data16
jbe
push
or
call
lds
push
push
cmp
pop
std
cmc
daa
aaa
push
sub
int
inc
in
bound
je
loopne
xor
lds
dec
or
add
pop
movsl
sub
decl
cli
movsb
push
in
roll
stos
loop
adc
cmp
inc
cmp
ret
sub
mov
push
pushf
lcall
and
push
xchg
outsb
push
xor
mov
outsb
mov
movsl
mov
pop
lret
and
jl
add
mov
push
hlt
push
dec
dec
or
das
int
push
push
sti
cmp
in
aas
rorb
enter
pop
mov
mov
xor
ljmp
fsubr
lret
sbb
cli
cmp
jne
push
stc
jmp
push
fisubl
movl
loopne
sub
pushf
movsl
dec
pop
push
jb
fimull
sub
sub
lret
mov
add
bound
cmpb
pop
mov
add
push
push
dec
or
into
cmpl
cmp
push
push
push
call
sbb
mov
and
add
jmp
out
pop
insl
jae
bound
mov
in
sbb
mov
rclb
scas
adc
inc
loop
and
jecxz
lcall
pop
test
push
xor
jmp
or
xchg
jmp
or
into
jge
andnps
int3
testb
mov
idivb
jg
test
and
jmp
fadds
add
sahf
data16
push
inc
gs
dec
pop
adc
push
xchg
fs
sbb
stos
outsl
loopne
xor
ss
mov
call
cmp
inc
inc
jmp
repz
imul
insl
pop
sbb
sbb
clc
add
inc
cmp
add
lea
push
add
test
shr
pusha
loope
push
lea
sub
adc
push
or
add
sbb
sub
jb
gs
test
sub
shlb
mov
and
scas
loop
adc
push
jnp
or
sbb
mov
lods
cmpsb
jmp
inc
jo
insb
imul
and
gs
out
pushf
adc
mov
jo
pop
push
push
arpl
fcoms
insb
cmp
outsb
je,pt
cmc
imull
ss
imul
inc
es
popa
insb
ja
movsl
xor
rcll
arpl
jns
mov
jae
fwait
xor
rorl
xchg
popa
fadds
js
inc
jnp
mov
data16
mov
aas
inc
js
je
push
movsb
outsb
dec
or
dec
popa
outsb
fs
out
pop
dec
jo
adc
je
stos
les
sbb
jl
imul
mov
xchg
lcall
or
mov
cmp
jmp
push
xchg
cmp
dec
xor
or
push
jbe
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
mov
add
pushf
push
add
mov
outsb
add
or
add
add
add
inc
add
bound
add
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
fs
add
add
add
inc
