and
mov
movl
call
mov
pop
ret
nop
out
mov
cmp
inc
and
add
or
sbb
les
dec
fsubp
ret
movl
rorb
fstpt
push
push
mov
add
inc
add
and
push
or
ja
cld
or
fdivrl
xor
dec
or
movb
jae
out
push
push
push
jno
mov
mov
mov
lea
imul
call
and
cmp
mov
jae
incl
pop
add
fistpll
sbb
mov
cmp
jb
push
and
push
aas
sti
jg
lea
push
push
mov
popa
lods
lea
lea
push
push
add
fildl
push
sub
sub
rcll
inc
add
sbb
add
push
xor
mov
std
add
push
lea
push
neg
pop
pop
pop
pop
ret
scas
sub
inc
and
mov
or
int
idivl
push
inc
or
pop
mov
clc
cmp
mov
mov
mov
lea
add
push
xor
or
arpl
inc
push
push
int3
inc
pop
push
jle
jnp
outsb
call
enter
and
addl
fistpl
push
mov
pop
or
pusha
popf
sbb
mov
insl
pop
sbb
pop
mov
not
mov
and
and
or
mov
mov
enter
mov
js
push
jo
sbb
loope
or
int
inc
add
mov
and
sub
lret
and
sbb
lret
sub
aaa
xlat
mov
lret
shl
push
cmp
idiv
fcomi
xchg
shlb
call
bound
add
and
jge
fbld
ljmp
add
and
divl
or
mov
frstor
pop
out
into
mov
out
shr
or
and
out
jbe
cli
mov
pop
testl
ljmp
fdivl
std
mov
test
scas
cmc
mov
shr
jg
insb
popf
loopne
add
and
not
and
or
sub
add
rolb
movb
mov
sub
int
sub
add
in
or
inc
xor
mov
rolb
inc
std
loop
xor
mov
ret
popf
sub
pop
test
popf
mov
imul
popf
out
xor
stc
imul
icebp
enter
cmp
shl
mov
pop
lcall
sub
pop
sub
cmp
les
jnp
xchg
movups
lret
jnp
std
pop
popf
or
lret
pop
popf
lret
mov
ret
xor
popf
sub
popf
inc
cmp
data16
pop
in
popf
icebp
and
nop
imul
xor
pop
lret
rorb
fxch
aaa
rclb
xlat
mov
outsb
ret
ret
mov
jo
sub
mov
jns
movups
jbe
push
pop
and
or
sub
add
mov
add
or
ret
fstpt
shll
pop
add
out
sbb
mov
icebp
sub
idiv
sbb
push
divb
cmc
sbb
or
call
mov
inc
rolb
or
insl
sti
add
pop
push
pop
pop
or
stos
lret
int3
dec
xlat
jl
fcoms
cmp
mov
adcl
mov
cmp
sub
xchg
out
iret
jg
sbbl
and
adc
ret
out
inc
loope
mov
les
inc
add
mov
or
push
or
movsl
xchg
sbb
movsb
pop
in
and
push
test
sbbb
outsb
and
icebp
into
aaa
sahf
je
enter
movsl
enter
mov
rorb
leave
cmp
add
out
loope
sbb
call
dec
into
sti
data16
outsl
xor
mov
rcl
pop
aaa
mov
cmp
pop
or
ret
cltd
xchg
push
jae
je
lret
fsubs
jbe
into
aaa
sahf
arpl
movsl
xchg
in
adc
inc
pusha
or
icebp
movsl
xchg
xchg
cld
sub
enter
add
pop
mov
add
add
int
mov
jmp
mov
imul
sub
fbld
outsl
les
lods
aad
lods
scas
xchg
sbbb
jbe
leave
sbb
lea
ret
fstl
rcr
mov
mov
jge
pop
sbb
add
in
std
push
stos
rolb
xor
xor
or
jno
outsl
mov
movsb
lret
lret
fs
dec
mov
popf
insl
outsl
mov
loope
test
das
adc
stc
cli
xor
or
insb
insl
sti
sbb
enter
aaa
movb
add
xor
cmp
lods
jns
ljmp
mov
mov
mov
sahf
xor
test
sahf
dec
mov
or
inc
shll
shll
rol
sbb
clc
pusha
dec
mov
mov
xor
out
xor
cmp
lods
sub
movsb
in
mov
in
int
mov
sbb
cmp
or
ja
out
cli
ja
xor
push
and
cli
daa
mov
or
clc
insb
out
lods
cwtl
xchg
xchg
test
out
aam
loop
or
mov
leave
sbb
ljmp
add
call
mov
rcl
popa
ret
ret
cmp
lret
fiadds
cltd
bound
or
nop
jo
out
xchg
mov
mov
or
in
ret
pop
mov
push
lods
flds
rorl
jae
pop
adc
mov
inc
and
hlt
jmp
movl
popa
sbb
ljmp
inc
xchg
push
or
mov
pop
cmpsl
and
fs
or
cwtl
sub
xor
xchg
cld
out
lods
cmp
lcall
nop
pop
gs
push
lcall
int3
or
push
or
and
repz
out
call
enter
rcrl
test
jnp
lcall
dec
jle
outsl
jnp
push
lcall
out
push
or
adc
add
aaa
inc
dec
mov
jnp
fwait
and
jle
mul
int
fnstsw
push
lcall
mov
test
mov
pushf
stc
sahf
and
rcl
sub
fs
rsqrtps
add
loopne
mov
xchg
mov
add
call
xor
pop
or
ret
sbb
mov
or
or
outsl
inc
or
add
cld
inc
jp
test
jbe
hlt
or
or
sbb
cld
dec
decl
mov
add
mov
push
cld
lret
adc
fcmovnb
pop
adc
add
sbb
add
int
idivb
push
cmp
jb
pop
pop
ret
push
repz
xchg
clc
inc
out
in
jbe
dec
mov
loop
imulb
push
inc
add
ror
xor
mov
mov
cmp
out
or
or
push
cli
add
out
mov
pop
cmp
jb
test
lds
inc
dec
divb
cmp
push
mov
lea
jne
pop
and
test
xlat
not
out
jbe
mov
push
mov
rorl
fidivrs
out
adc
jmp
and
rep
pop
pop
push
pop
ja
ret
or
jmp
mov
add
shlb
mov
test
push
xlat
mov
mov
aad
add
xor
mov
xchg
cmp
leave
cmp
inc
rol
jb
cmp
dec
adc
in
pop
inc
mov
sub
pusha
xchg
and
pop
ljmp
outsl
hlt
add
or
lods
popa
ja
mov
loop
pop
clc
push
push
call
push
jg
push
addr16
jne
call
or
push
push
lret
lock
xchg
push
add
int3
in
sbb
cmpsl
sub
rol
movsl
sbb
pushf
or
jne
mov
insl
cmpsb
adc
xor
pop
imul
xchg
and
xchg
mov
inc
and
xchg
arpl
mov
adc
scas
lock
ljmp
jl
or
add
dec
xor
xchg
pop
repnz
and
mov
dec
cmovnp
cmc
movsl
shl
sbb
jno
imul
push
sahf
insb
sub
and
test
add
pop
mov
insl
and
imul
mov
es
insl
adc
dec
sub
daa
insl
add
mov
pop
add
fsubl
insl
pop
sahf
mov
add
popa
inc
in
push
push
fwait
shl
lcall
xor
pop
adc
ss
mov
pop
movsl
pop
incb
inc
pop
fldenv
jmp
dec
icebp
and
cmp
dec
mov
add
dec
xor
push
fs
ljmp
nop
hlt
ret
push
push
insl
mov
mov
icebp
jecxz
outsb
mov
add
xor
lea
call
sbb
cmp
pop
in
fdivl
sub
orb
cmp
scas
adc
and
mov
ret
or
loopne
outsb
jge
sbb
lods
jne
jae
adc
cmp
out
xor
jae
or
je
mov
cmp
je
insb
in
loope
cmp
je
cmp
jne
dec
push
out
mov
mov
push
add
pop
std
mov
sbb
clc
pop
ja
dec
sbb
push
mov
nop
pop
fdivrs
push
je
movsb
cmp
adcl
sub
pop
mov
js
mov
adc
or
mov
dec
outsl
clc
inc
adc
and
push
nop
mov
cld
fsubrl
inc
push
popf
push
push
xchg
pop
repnz
mov
pushf
dec
and
in
dec
add
pop
cmc
pop
pop
mov
ljmp
inc
insb
mov
pop
pop
and
or
int
sar
pusha
fcoms
or
dec
cmp
jbe
cmp
jne
loope
mov
and
lret
jne
or
jae
das
test
xchg
sbb
lock
dec
mov
jno
mov
mov
rorl
jmp
popa
xor
test
je
sti
insb
mov
jb
repz
jge
inc
call
jecxz
int3
test
test
std
jbe
xor
or
outsb
adc
cmp
mov
sahf
notl
jb
push
adc
aas
jbe
cmp
jne
and
or
nop
gs
das
push
and
push
aaa
repz
test
mov
nop
xchg
push
pop
push
push
push
jbe
adcl
out
ret
mov
xor
sub
adc
repz
adc
xchg
into
pusha
mov
xchg
push
inc
jp
mov
xchg
or
adc
test
add
mov
movb
sbb
and
xchg
inc
aam
xchg
cmpsl
and
add
adc
mov
and
andb
daa
mov
nop
out
jns
fsubrs
mov
and
mov
and
ds
add
and
pushw
cwtl
cmp
or
push
movsb
mov
adc
fnstenv
adc
sbb
cmc
in
jae
cs
adc
in
sbb
push
mov
push
dec
mov
mov
test
push
or
push
inc
ss
sub
cmpl
nop
fcomps
in
rolb
mov
mov
adc
sub
fildll
pop
daa
sbb
pop
in
jb
push
push
adc
jae
push
and
fnstcw
jae
movsl
fadd
jl
ja
repnz
push
jg
dec
enter
inc
push
push
push
int
sbb
adc
and
add
push
shr
mov
aaa
test
add
lcall
imul
outsb
outsl
xor
adc
jb
je
jne
xlat
insb
lcall
jp
lock
divl
jge
jle
mov
aaa
pop
movb
adc
daa
test
in
xchg
testl
mov
and
jbe
dec
lea
jb
jb
xchg
xchg
xchg
jb
jb
xchg
xchg
xchg
cwtl
jb
jb
cltd
lcall
popf
sahf
lahf
mov
mov
jb
jb
cmpsb
cmpsl
test
jb
jb
stos
stos
lods
jb
jb
lods
scas
scas
mov
jb
jb
mov
mov
jb
jb
mov
mov
mov
jb
jb
mov
jb
rol
les
jb
enter
jb
lret
jb
jb
int
iret
shlb
jb
rcl
rcl
jb
jb
aad
xlat
fdivs
jb
fcmovnu
jb
jb
fstp
fnstsw
jb
jb
loope
jecxz
jb
jb
in
out
jb
jb
jmp
jb
jb
out
out
lock
jb
icebp
repnz
jb
jb
cmc
div
clc
jb
jb
stc
cli
sti
cld
imul
sub
leave
leave
pop
push
add
add
leave
leave
leave
add
push
pop
leave
leave
leave
leave
or
or
leave
leave
leave
leave
or
push
bswap
leave
leave
leave
adc
adc
leave
leave
leave
leave
adc
push
pop
leave
leave
leave
leave
sbb
sbb
leave
leave
leave
leave
sbb
push
pop
leave
leave
leave
leave
and
and
leave
leave
leave
leave
and
es
leave
leave
leave
leave
sub
sub
leave
leave
leave
leave
sub
cs
leave
leave
leave
leave
xor
xor
leave
leave
leave
leave
xor
ss
leave
leave
leave
leave
cmp
cmp
leave
leave
leave
leave
cmp
ds
leave
leave
leave
leave
inc
inc
inc
inc
leave
leave
leave
leave
inc
inc
inc
inc
leave
leave
leave
leave
dec
dec
dec
dec
leave
leave
leave
leave
dec
dec
dec
dec
leave
leave
leave
leave
push
push
push
push
leave
leave
leave
leave
push
push
push
push
leave
leave
leave
leave
pop
pop
pop
pop
leave
leave
leave
leave
pop
pop
pop
pop
leave
leave
leave
leave
pusha
popa
bound
leave
leave
leave
fs
leave
leave
leave
push
leave
leave
leave
insb
insl
outsb
outsl
leave
leave
leave
leave
jo
jb
leave
leave
leave
leave
je
jbe
leave
leave
leave
leave
js
jp
leave
leave
leave
leave
jl
jle
leave
leave
leave
leave
addb
leave
test
leave
leave
mov
leave
leave
mov
leave
leave
nop
xchg
xchg
xchg
leave
leave
leave
leave
xchg
xchg
xchg
xchg
leave
leave
leave
leave
cwtl
cltd
lcall
popf
sahf
lahf
leave
leave
leave
leave
mov
leave
leave
leave
movsb
movsl
cmpsb
cmpsl
leave
leave
leave
leave
test
stos
stos
leave
leave
leave
leave
lods
lods
scas
scas
leave
leave
leave
leave
mov
mov
leave
leave
leave
leave
mov
mov
leave
leave
leave
leave
mov
leave
leave
leave
mov
leave
leave
leave
rol
ret
leave
leave
leave
leave
leave
leave
leave
leave
enter
leave
leave
leave
leave
int3
int
iret
leave
leave
leave
leave
rcl
rcl
leave
leave
leave
leave
aam
xlat
leave
leave
leave
leave
fcomp
fcmovu
leave
leave
leave
leave
leave
leave
leave
leave
loopne
loop
leave
leave
leave
leave
in
out
leave
leave
leave
leave
call
leave
leave
leave
in
in
out
out
leave
leave
leave
leave
lock
repnz
leave
leave
leave
hlt
cmc
div
leave
leave
leave
leave
clc
stc
cli
sti
leave
leave
leave
leave
cld
std
jmp
in
in
add
add
in
in
add
push
pop
in
in
or
or
in
in
or
push
pmulhuw
in
adc
adc
in
in
adc
push
pop
in
in
sbb
sbb
in
in
sbb
push
pop
in
in
and
and
in
in
and
es
in
in
sub
sub
in
in
sub
cs
in
in
xor
xor
in
in
xor
ss
in
in
cmp
cmp
in
in
cmp
ds
in
in
inc
inc
inc
inc
in
in
inc
inc
inc
inc
in
in
dec
dec
dec
dec
in
in
dec
dec
dec
dec
in
in
push
push
push
push
in
in
push
push
push
push
in
in
pop
pop
pop
pop
in
in
pop
pop
pop
pop
in
in
pusha
popa
bound
in
in
gs
in
push
in
in
insl
outsb
outsl
in
in
jo
jb
in
in
je
jbe
in
in
js
jp
out
in
jl
jle
cmpb
push
lods
jbe
add
cwtl
cltd
push
jb
jb
lcall
jb
lahf
mov
jb
mov
jb
cmpsb
cmpsl
test
jb
jb
stos
stos
lods
lods
jg
jae
scas
scas
push
mov
add
lock
leave
push
or
cs
pop
lret
cmp
cmp
xor
sbb
add
or
int3
sbb
dec
and
outsb
int
int
mov
sbb
mov
pop
iret
push
rcrb
clc
mov
jb
push
sbbl
xor
add
xchg
mov
add
mov
sbb
push
mov
in
mov
mov
xchg
xchg
cmp
cmp
xchg
xchg
sbb
cwtl
mov
leave
add
pop
outsl
and
add
test
push
imul
cmp
push
mov
mov
cmp
cmp
mov
mov
cmp
cmp
mov
cmp
cmp
cmp
rol
ret
cmp
cmp
cmp
cmp
enter
cmp
cmp
int3
int
iret
cmp
cmp
rcl
rcl
cmp
cmp
aam
xlat
cmp
cmp
fcomp
fcmovu
cmp
cmp
cmp
cmp
loopne
loop
cmp
cmp
in
out
cmp
cmp
call
cmp
cmp
in
out
out
cmp
cmp
lock
repnz
cmp
hlt
cmc
div
cmp
cmp
clc
stc
cli
sti
cmp
cmp
cld
std
jmp
lods
xor
in
in
add
push
in
in
pop
or
or
in
in
or
push
in
in
movups
adc
in
in
adc
push
in
in
pop
sbb
sbb
in
in
sbb
push
in
in
pop
and
and
in
in
and
es
in
daa
sub
sub
in
in
sub
cs
in
das
xor
xor
in
in
xor
ss
in
aaa
cmp
cmp
in
in
cmp
ds
in
aas
inc
inc
inc
in
in
inc
inc
inc
inc
in
in
inc
dec
dec
dec
in
in
dec
dec
dec
dec
in
in
dec
push
push
push
in
in
push
push
push
push
in
in
push
pop
pop
pop
in
in
pop
pop
pop
pop
in
in
pop
pusha
popa
in
in
arpl
in
in
addr16
in
imul
in
in
jo
jb
in
in
je
jbe
in
in
js
jp
in
in
jl
jle
in
in
addb
addl
xchg
in
mov
in
nop
xchg
xchg
in
in
xchg
xchg
xchg
xchg
in
in
xchg
cwtl
cltd
lcall
popf
sahf
in
in
lahf
mov
in
mov
in
in
test
stos
in
in
stos
lods
lods
scas
in
in
scas
mov
mov
in
in
mov
mov
in
in
mov
in
mov
in
in
rol
in
in
ret
in
in
enter
in
in
int3
int
in
in
iret
rcl
shl
in
in
aam
in
in
xlat
fcomp
in
in
fsubp
in
in
loopne
loop
in
in
in
out
in
in
call
in
jmp
in
out
in
in
out
lock
repnz
in
repz
cmc
mul
in
in
clc
stc
cli
in
in
sti
cld
std
lods
shl
call
push
add
in
in
add
push
pop
or
in
in
or
or
in
in
push
movups
in
in
adc
adc
in
in
push
pop
sbb
in
in
sbb
sbb
in
in
push
pop
and
or
in
and
loopne
lahf
iret
out
and
add
add
add
stc
jl
sub
add
add
add
lahf
iret
out
add
add
add
add
add
repz
jl
add
add
add
add
ds
iret
aaa
add
add
add
add
add
out
stc
cmp
cmp
add
stc
jl
lahf
add
add
add
add
add
iret
out
inc
add
add
add
add
add
stc
jl
dec
add
add
add
add
lahf
iret
out
add
add
add
add
add
repz
jl
add
add
add
add
ds
iret
push
add
add
add
add
add
out
stc
pop
add
add
add
add
stc
jl
lahf
add
add
add
add
add
iret
out
gs
add
add
add
add
stc
jl
push
imul
insl
add
in
add
subb
or
push
pushf
pushf
pushf
pushf
push
mov
pushf
pushf
lea
pushf
pushf
xchg
xchg
xchg
xchg
pushf
pushf
pushf
pushf
xchg
xchg
xchg
cwtl
pushf
pushf
pushf
pushf
cltd
lcall
popf
sahf
lahf
mov
mov
pushf
pushf
pushf
movsl
cmpsb
cmpsl
jle
pop
and
movl
xchg
mov
or
mov
sbb
pop
add
sti
jno
push
push
dec
add
pop
or
xor
add
test
jne
inc
rorb
orl
xchg
and
add
adc
sbb
mov
or
pop
mov
or
add
xor
or
sbb
and
int3
pop
adc
mov
pop
push
push
add
das
pop
out
xor
or
ds
mov
push
push
hlt
push
movsl
jns
inc
lahf
push
push
push
ror
in
ss
jge
inc
push
insb
mov
clc
xor
mov
cmp
cmp
jb
and
mov
sub
push
cmp
je
into
shll
sbb
test
loope
movb
add
jmp
sbb
or
inc
inc
ja
movb
add
dec
mov
leave
inc
xor
or
mov
mov
mov
stos
sti
or
dec
push
test
xchg
pop
sbb
xchg
mov
sub
insl
add
sbb
mov
rclb
add
shl
movsw
stos
int
mov
pusha
lds
popa
div
stos
push
mov
insl
jo
leave
sbb
in
and
mov
inc
rcrl
push
loopne
enter
in
jno
mov
mov
sbb
push
or
ds
pop
jecxz
outsl
push
push
xchg
addr16
cmp
push
sbb
out
lret
sarl
fisttpl
mov
mov
or
and
mov
popf
subb
or
dec
iret
sub
inc
or
sub
outsb
ret
inc
add
adc
pop
and
insb
cmpb
adc
sarl
inc
loop
fildll
cmpl
push
xor
sub
out
lds
cmpsl
sub
cs
sub
cli
pop
sub
aas
das
mov
pusha
pop
mov
pop
push
out
pop
sbb
inc
or
push
push
xchg
enter
xchg
sub
or
iret
scas
adc
sub
aam
sub
sub
adc
and
push
dec
scas
out
push
mov
das
xor
sti
mov
or
and
lahf
clc
into
xor
xor
leave
and
mov
lret
push
sub
lods
cltd
sbbl
jb
sub
sub
in
dec
cltd
pop
enter
or
xor
pop
stos
nop
or
cltd
mov
cltd
js
lods
call
xor
pop
adc
xchg
movsb
add
and
cmp
xor
sub
xor
mov
in
pop
fcomps
push
je
jne
insb
add
add
lds
outsl
jmp
dec
out
mov
into
bound
add
gs
jle
xchg
adc
mov
cmpsl
xor
jo
fnstenv
or
mov
fnstenv
or
nop
js
mov
or
nop
addb
jge
faddl
loop
xor
or
inc
push
test
or
push
int
movsb
pop
fcoms
sub
pop
rol
push
imul
dec
mov
mov
dec
mov
jl
ljmp
iret
push
jb
cmp
neg
xchg
or
inc
imul
mov
divb
adc
add
mov
pop
imul
sub
ret
lods
test
mov
xchg
bound
mov
loopne
pop
dec
push
sbb
insb
fdivrs
inc
or
add
add
stos
clc
adcb
mov
adc
push
stos
jns
mov
test
stos
hlt
int3
adcb
or
inc
adc
jo
adc
cmp
test
and
cmp
in
add
lret
stos
pushf
lret
add
add
inc
push
lods
inc
dec
adc
sbb
in
jb
fadds
enter
adc
enter
and
or
lock
fmul
bound
add
xorb
gs
test
pop
xchg
stos
push
sbb
xor
js
in
adcb
and
and
cmp
cmpsl
pop
adc
adc
inc
or
stos
xchg
add
fmul
mov
pop
dec
into
or
mov
test
test
inc
mov
adc
ret
add
stos
adc
or
stos
push
xorl
clc
inc
sub
pusha
push
mov
les
fldenv
loop
push
add
std
mov
push
push
test
mov
movl
movsb
add
push
pop
or
pop
roll
je
mov
decb
lock
or
call
addb
mov
jge
adc
cmpb
je
push
rolb
andl
cs
shrb
cmc
dec
mov
lea
lea
push
dec
dec
push
jg
fiaddl
push
push
jecxz
fdivrl
pop
mov
dec
xchg
mov
push
add
mov
and
mov
sbb
mov
and
imul
out
incl
adc
sbb
leave
je
mov
or
add
add
xorl
fcmovnb
add
jne
xchg
jmp
sbb
cmp
in
mov
inc
xchg
push
in
mov
dec
mov
test
je
cmp
je
mov
cmpsb
pop
add
add
aaa
adc
add
jmp
test
je
mov
mov
sub
xor
mov
adc
xchg
mov
mov
lea
sub
shll
push
and
push
sbb
mov
cmp
add
sbb
sbb
cmp
push
push
jne
mov
mov
or
mov
push
in
or
inc
push
sbb
fiaddl
stc
push
push
sub
mov
xchg
adcb
add
insl
sbb
jns
adc
repnz
test
pusha
dec
icebp
push
cltd
ret
jb
mov
out
fstl
adc
push
dec
stos
cmp
cmp
push
insb
mov
fwait
sub
xor
outsb
fdecstp
in
add
xor
jp
inc
cmpsb
nop
xchg
push
push
add
sbb
movsb
sbb
xchg
mov
test
mov
push
jp
fs
push
cltd
dec
push
push
dec
push
movsb
cmp
push
test
xchg
push
dec
xchg
or
scas
in
jo
jo
andb
pop
and
add
add
mov
dec
cs
mov
in
jle
mov
push
clc
rclb
orl
sti
mov
jmp
or
pop
and
daa
addb
mov
sbb
xor
ret
dec
inc
repnz
and
in
mov
adc
fldcw
sub
add
pop
xlat
mov
stos
gs
js
aas
test
add
int3
sbbb
sbb
mov
bound
mov
jne
mov
push
sub
adc
clc
xchg
sub
or
or
cmpsb
scas
rcrb
out
gs
xor
dec
ficoml
mov
add
jns
mov
fcom
iret
sahf
jge
arpl
push
inc
mov
daa
and
push
iret
dec
repnz
mov
push
sbb
jns
mov
mov
cs
sub
test
inc
das
test
inc
mov
int3
add
clc
mov
or
ret
pushf
add
pop
push
les
pop
sub
xor
pop
jmp
add
xor
push
pop
adc
or
ds
xlat
das
push
psubb
in
leave
pusha
setae
xor
xchg
dec
ret
or
cwtl
leave
inc
sbb
xor
mov
popa
mov
call
mov
in
insb
mov
or
inc
adc
add
push
leave
sti
sub
fs
xchg
hlt
cltd
int
fstps
inc
and
mov
jae
and
push
pusha
lds
rclb
fimull
xor
pop
jne
mov
dec
pop
cmc
xlat
xor
push
sti
icebp
in
ret
and
mov
mov
mov
fs
aas
int3
mov
add
aaa
push
adc
sbb
mov
int
jl
mov
add
vshufpd
or
adc
dec
mov
cmp
pop
push
das
xor
mov
push
cmp
fucomp
push
shrb
or
adc
sbb
jae
pusha
add
push
mov
sbb
push
pop
aas
add
pop
mov
adc
fcoms
cmpsb
ret
scas
add
dec
bnd
js
rclb
pusha
test
jne
cli
cmc
push
pop
sbb
mov
xchg
mov
add
in
or
and
imul
mov
pop
cmp
mov
out
push
jo
ljmp
add
add
mov
mov
orb
xor
dec
adc
bound
test
js
enter
adc
adc
inc
loope
jns
fwait
je
ficoml
dec
test
test
test
jne
mov
sbb
test
and
sbb
jns
push
push
add
push
aaa
leave
xchg
in
test
mov
test
xchg
sbb
jns
test
push
nop
add
push
add
push
adc
loopne
add
add
add
leave
cmp
adc
sub
jne
inc
es
sbb
dec
xor
loope
imul
stos
loop
sub
and
sbb
outsl
inc
xor
push
push
sub
adc
mov
sub
call
dec
adc
pop
or
in
sbb
add
in
cmp
add
add
in
add
in
mov
cmp
cmp
inc
adc
icebp
mov
jmp
roll
inc
adc
aam
bound
adc
sub
outsl
adc
hlt
and
into
arpl
lds
mov
sub
mov
adc
dec
mov
pusha
out
nop
sub
sub
pop
jb
fcoms
xorb
and
dec
enter
add
add
lret
inc
and
sub
push
add
add
repnz
inc
es
pop
enter
or
cwtl
dec
inc
or
into
xor
sbb
mov
inc
push
addl
mov
fs
push
push
mov
test
lret
mov
inc
push
in
sahf
mov
nop
js
sub
lcall
or
push
pop
add
xchg
sub
andl
push
and
sarl
cmp
push
add
adc
or
and
add
mov
and
add
adc
or
lock
or
sub
pop
mov
nop
cmp
inc
fsub
and
dec
pop
add
shl
xchg
aam
cmp
test
adc
cmp
cmp
push
shrl
adc
xor
adc
lret
inc
add
and
and
and
mov
loop
push
lods
call
mov
movb
mov
xor
mov
add
cmp
inc
cmp
or
push
inc
stos
stos
sbb
cs
stos
mov
out
fisubrs
jbe
sub
push
nop
ja
push
push
jl
inc
movb
push
mov
lret
or
pusha
jae
adc
and
in
mov
xchg
movsl
mov
cmp
add
sub
rclb
and
pop
add
xor
mov
pop
mov
ja
fistpl
push
xchg
and
and
push
inc
loope
push
and
add
into
inc
jne
sub
sub
inc
or
xchg
jnp
popf
push
in
pop
inc
inc
add
sbb
inc
es
fs
push
add
jg
loopne
clc
cmp
push
inc
sub
jmp
test
add
mov
sbb
push
stc
jl
movsb
mov
inc
shl
and
daa
stos
mov
nop
pop
xchg
push
or
rcr
jbe
or
lds
jg
xorb
sbb
push
sbb
xchg
pop
pushw
dec
inc
jmp
jmp
mov
test
sbb
xchg
add
stos
push
pop
mov
std
jnp
insl
cmpl
jne
jle
out
mov
sub
xchg
xor
add
fs
cmp
leave
pusha
cltd
insb
inc
jl
data16
mov
jmp
sbb
mov
sbb
jp
jne
imul
in
xchg
cmp
push
xchg
or
in
into
pusha
imul
push
pop
jne
jno
in
pop
add
add
call
jo
scas
aam
jmp
leave
xor
movsl
cmp
adc
push
or
int3
sbb
or
cli
loop
call
xor
stos
rcrl
push
mov
in
test
adc
pop
add
jno
jo
pop
add
aad
xor
imul
jne
push
stc
scas
insl
push
es
fwait
sbb
pop
sub
test
das
and
xor
cmp
ds
es
inc
inc
push
pop
lret
mov
mov
movsb
in
mov
fmul
rorl
push
rcll
into
stos
imul
push
stos
loopne
mov
push
test
push
js
rclb
mov
or
rorl
pop
pop
dec
mov
xlat
mov
xor
ret
idivl
or
icebp
xor
mulb
inc
lea
ficomps
push
add
in
orb
xor
imul
and
xlat
and
xor
mov
mov
fwait
cmp
add
jo
into
in
jp
clc
xor
pop
pop
pusha
add
popa
fs
push
xor
shr
sub
jecxz
dec
mov
int3
add
dec
clc
jecxz
dec
mov
cs
test
sbb
mov
loop
fdivs
or
push
arpl
clc
xor
add
pop
xchg
or
loop
jmp
popl
inc
pop
and
rcll
cwtl
inc
or
lods
mov
mov
rclb
push
add
cmp
cld
outsl
cld
inc
ret
mov
adcl
mov
mov
orl
imul
in
sub
fcmovbe
jb
rclb
cmp
pop
mov
out
je
xor
ljmp
add
add
insb
mov
lods
mov
inc
mov
hlt
iret
icebp
gs
push
push
mov
rolb
add
push
cmp
fstl
cld
lea
movsb
dec
roll
sbb
lock
inc
xor
mov
mov
mov
mov
dec
jnp
add
fdivrp
test
sbb
imul
nop
adc
adc
or
push
cmc
and
or
mov
lret
sbb
mov
aas
adc
aad
hlt
xor
or
or
or
push
jmp
sbb
nop
push
xchg
jae
xor
test
cwtl
nop
pop
push
xor
or
int3
mov
fimull
pop
leave
xor
pop
add
mov
xchg
dec
jbe
and
imul
and
or
rcrl
js
mov
xor
fistps
mov
mov
lea
sarb
push
cmp
or
inc
repnz
pop
xchg
cmpsl
rcl
leave
sbb
test
jne
cmp
sub
loop
loop
je
mov
mov
js
or
mov
jnp
push
mov
sbb
arpl
pushf
adc
test
add
test
mov
or
push
jl
adc
add
addr16
pmullw
mov
mov
cli
idivb
push
mov
dec
xor
push
xor
add
fmuls
and
pop
mov
adc
add
push
pop
push
jbe
mov
ja
adc
jge
clc
add
push
lret
pop
push
add
mov
mov
sub
int
and
inc
jb
push
and
jb
sub
insl
push
mull
or
xchg
mov
insb
pop
jmp
and
adc
sti
adc
loop
test
mov
out
add
out
shlb
inc
or
adc
in
mov
push
push
mov
cmp
ja
or
mov
shl
adc
fildll
jbe
enter
push
jbe
adc
adc
cmp
mov
aad
pop
mov
jg
ret
cltd
and
add
sar
push
pop
shl
jmp
pop
fists
lods
jnp
nop
add
sub
data16
pop
and
lahf
andl
movl
sub
xor
cmc
push
jo
mov
pop
lods
cmp
iret
out
jbe
add
faddl
dec
and
cmp
adc
lock
push
push
jns
fldt
xlat
dec
push
push
rclb
add
jmp
sbb
and
mov
xchg
or
cli
xchg
mov
jb
aam
add
and
adc
sub
arpl
cwtl
movsb
push
or
mov
add
push
adc
inc
clc
addl
scas
rcl
mov
pop
lods
jae
cmpsb
in
pop
sub
mov
pop
push
data16
inc
icebp
orb
lcall
jmp
adc
cltd
movsl
sub
xor
inc
pop
addr16
leave
cmp
add
popf
cmp
push
inc
and
jp
xor
fsubs
mov
fs
dec
pushf
loop
sbb
mov
inc
add
push
adc
loope
xchg
or
inc
es
pop
or
ret
lea
adcb
mov
and
mov
jbe
xchg
ljmp
dec
push
outsl
push
data16
jmp
ss
dec
lcall
lock
pop
cld
adc
or
inc
mov
pop
imul
add
sub
imul
outsl
push
push
push
pop
shrl
mov
sbb
cs
xorl
xchg
mov
jno
push
and
fldcw
sbb
xor
ret
pop
rorb
decb
xor
jne
add
add
dec
iret
mov
jmp
dec
push
in
pop
inc
jmp
xchg
sub
pop
mov
push
jns
aas
mov
dec
mov
mov
jns
pop
or
in
push
loope
mov
push
dec
adc
sar
cmp
jae
mov
lret
adc
loop
pusha
int
jne
fisubrl
lock
push
or
mov
lock
push
adc
scas
push
jae
mulb
and
pop
cmp
cmp
push
jmp
sbb
jno
inc
and
push
add
push
pop
mov
ss
ret
cmc
push
ror
xchg
sbb
mov
mov
pop
out
and
mov
jg
loopne
in
ja
in
pop
cmp
push
sub
sub
lcall
add
fnsave
mov
dec
ret
je
inc
add
jo
stos
fildll
fisubl
sbb
lea
mov
add
mov
mov
lds
ret
push
xor
or
mov
jae
popa
pop
in
sbb
inc
ret
sbb
into
sub
sub
popf
lock
sub
cltd
lret
fs
cmp
rcrl
idivl
shrb
sar
sub
cwtl
je
sub
insb
fisttpl
mov
dec
dec
dec
movsb
or
mov
cmp
je
xor
int
sbb
shll
mov
pop
xchg
inc
jbe
shl
xchg
orl
push
int
insl
sbb
mov
leave
outsb
inc
inc
pop
add
call
mov
mov
test
adc
jmp
xchg
je
je
mov
js
ret
shrb
outsl
jae
and
xor
push
xchg
or
ret
shrl
adc
dec
addr16
xchg
data16
sbb
and
add
lods
sbb
or
sbb
cmp
xor
andb
inc
enter
sbb
clc
adc
int
outsb
cmp
rcrb
mov
cmp
xor
daa
sbb
fcompp
cmp
jmp
mov
mov
bnd
add
icebp
ss
push
mov
daa
cmc
rorl
lock
popa
dec
daa
push
push
bswap
aad
jo
and
jmp
fisttpll
femms
xchg
add
fsubs
push
cmp
lock
cmp
ljmp
mov
jne
or
test
push
jp
scas
cmp
and
mov
or
pop
add
adc
aad
cld
push
cmp
jb
sub
jle
test
pop
jae
sub
les
loope
sbb
pop
fdivrs
mov
es
cld
mov
xor
mov
fwait
cwtl
push
dec
orl
xchg
lods
loopne
or
dec
sub
fists
add
fisttpll
and
sbb
and
fucomp
popf
inc
sbb
sbb
sbbb
daa
out
push
in
out
push
mov
lea
push
xor
fldcw
pushf
push
add
fcmovnbe
nop
out
adc
add
xor
pop
test
mov
or
push
addb
repnz
mov
mov
repnz
dec
movsb
dec
cmp
fcmovu
jp
inc
rolb
inc
movzwl
jmp
sub
sub
or
push
push
popa
clc
jne
das
xor
xchg
cwtl
xor
imul
cmp
mov
cld
int3
mov
fildl
mov
mov
sub
push
xchg
int
xchg
and
add
sti
mov
xor
outsb
fs
and
pmulhuw
pop
mov
mov
jo
jae
loopne
add
jbe
popw
dec
add
sub
lods
add
jb
and
pusha
xchg
and
add
push
adc
add
push
pop
ja
cmpsb
or
cmpsl
cmp
pop
ret
xor
test
pusha
cmpsb
add
imul
adc
je
pop
push
lcall
sarb
imul
fnstenvs
cmp
mov
insb
ss
jl
fcoms
xor
data16
stos
or
hlt
lods
add
stos
inc
add
and
lcall
xor
shl
loop
shll
cmpsb
repnz
shll
pop
outsb
xor
shll
xchg
dec
shrl
mov
je
decb
push
xor
pop
shll
pusha
test
jmp
add
int3
dec
shll
cmpsl
push
add
add
out
shll
and
cmpsl
aas
lods
popf
jp
mov
xlat
and
mov
cmpsl
and
rolb
adc
bswap
sub
fstpl
xlat
repz
add
jae
das
push
or
dec
testl
lret
pop
dec
daa
pop
add
add
mov
push
push
and
in
test
mov
adc
cmpsl
dec
pop
leave
sub
mov
test
ds
mov
sbbb
dec
add
cs
insb
sub
xchg
mov
or
push
inc
bound
xor
out
add
outsl
stos
or
xor
and
inc
add
lods
add
cmp
je
je
pop
dec
imul
je
dec
outsb
je
jb
gs
sarb
jo
outsl
jb
push
jne
imul
popa
jne
arpl
dec
aas
inc
fs
imul
je
insb
and
mov
jae
add
pop
inc
outsl
arpl
mov
fldt
dec
jae
popa
outsb
and
je
addr16
cmp
sub
jbe
gs
outsl
xor
jnp
add
bound
xor
push
pusha
rcrl
insl
pop
js
mov
xor
inc
popa
jb
jns
jne
push
jle
popa
imul
or
outsl
insb
bound
pop
push
bound
sbb
mov
addb
lods
in
xchg
dec
mov
gs
sub
xor
xor
xor
xor
xor
aaa
or
adc
xor
nop
fstpl
xor
outsb
push
arpl
mov
push
imul
jle
mov
ja
shrb
jne
arpl
add
jge
arpl
outsl
test
mov
push
outsl
lahf
xchg
push
dec
inc
fldt
fisubl
adc
push
and
pop
or
inc
imul
cmp
ficompl
cs
ss
pop
in
jmp
inc
push
inc
repnz
push
inc
dec
push
pop
sti
sbb
mov
push
jae
scas
inc
inc
push
inc
add
insl
aaa
pop
push
ljmp
mov
add
ss
inc
imul
push
shl
imul
xor
sub
imul
sbb
cld
repz
jae
pop
outsl
jo
pop
xchg
mov
and
outsb
insb
dec
inc
push
sbb
push
dec
dec
inc
dec
push
push
push
ja
or
mov
lods
popa
fs
and
pop
pop
fld
fistps
pusha
jnp
and
xor
pop
pusha
dec
cmp
imul
popf
adc
adc
add
lret
push
push
push
adc
mov
mov
and
sub
imul
testl
mov
pop
in
dec
pop
sbb
je
jg
jae
sub
mov
rcrl
mov
mov
push
aas
mov
jle
jo
das
das
imulb
jae
popa
imull
aas
jb
popa
or
out
shll
jnp
sub
pushl
into
iret
mov
xor
das
jbe
mov
imul
das
bound
mov
mov
mov
mov
jae
sub
out
mov
and
mov
ret
int
mov
mov
xor
push
mov
and
or
mov
das
mov
in
adc
jg
mov
mov
jne
lock
mov
mov
lds
lods
ret
rol
lret
sti
mov
shlb
adc
ret
ret
ret
cmp
cmp
sub
and
fisubl
mov
cmp
repz
fdivrs
or
int3
in
fcmovbe
mov
adc
inc
lcall
push
decb
mov
add
xor
and
insl
sti
xlat
lcall
jl
into
out
jl
in
test
sti
jl
repnz
push
dec
ss
cld
scas
rol
arpl
mov
mov
lcall
and
inc
iret
into
shrb
out
int
mov
std
enter
sub
mov
jae
js
add
sti
popa
xor
cmpsl
xor
fcmove
sub
pop
lods
ret
stos
pop
rcrb
jge
ret
add
loop
shll
mov
jnp
popl
in
sar
clc
leave
iret
neg
xchg
cs
int
lret
lret
add
loope
mov
mov
sbb
es
sti
out
mov
xlat
lret
enter
lret
iret
xor
mov
stos
fs
popa
gs
rcl
les
lea
scas
icebp
adc
ljmp
mov
sbb
repz
jmp
inc
inc
mov
hlt
cltd
addr16
fs
into
ror
mov
mov
je
addr16
inc
cmp
aam
mov
imul
jnp
fnsave
sbb
pop
ret
jbe
shlb
pop
sar
mov
test
push
fs
or
xlat
mov
pop
push
out
scas
js
shll
enter
arpl
ret
or
inc
sbb
loop
cs
daa
nop
fisubrl
sub
xor
cwtl
mov
out
and
mov
insb
addr16
push
or
shrb
push
push
mov
loope
imul
sub
adc
daa
ja
xor
jne
jg
and
ret
mov
pop
xchg
sbb
sbb
das
mov
rol
outsb
mov
cmp
push
and
les
mov
lds
xchg
fs
adc
mov
daa
jp
sti
pop
pop
das
add
jae
nop
push
xor
scas
and
or
test
ja
push
ljmp
xor
mov
jae
insl
mov
mov
xchg
fistps
mov
and
mov
dec
cs
mov
repz
hlt
mov
and
sub
in
adc
imul
outsb
movzbl
lret
sarl
mov
sub
lret
out
scas
mov
or
or
lret
repnz
sbb
pop
xor
xor
mov
cmp
xor
int3
mov
mov
sub
push
push
dec
mov
cmp
push
pop
adc
push
aaa
sub
or
data16
sbb
xor
and
ja
je
jns
mov
cs
gs
cmpb
pop
inc
dec
inc
push
not
clc
dec
mov
pop
push
dec
dec
push
in
or
mov
ss
inc
inc
inc
inc
cmp
xor
xor
xor
sub
lods
jbe
sub
cmp
xor
cmp
pop
pop
inc
xchg
push
dec
xchg
std
xchg
or
sub
mov
mov
dec
or
adc
lods
pop
rcrb
xchg
push
pop
dec
and
inc
pop
push
pop
and
cmp
pop
mov
sub
and
iret
mov
outsl
insb
fs
inc
daa
rcr
fstpl
test
xor
inc
mov
test
xchg
xchg
or
add
incl
dec
pop
dec
inc
inc
dec
stc
inc
dec
andb
pop
pusha
push
xor
sbbb
jb
adc
or
gs
aad
and
pushl
inc
imul
push
jo
or
inc
sbb
pop
or
aas
inc
repnz
xchg
lret
aam
les
pop
cmp
add
jnp
or
sub
dec
ss
inc
jno
and
std
mov
lods
and
jg
mov
sub
jg
cmp
shlb
sub
jo
or
inc
cmp
mov
sub
inc
sub
xor
dec
pusha
or
or
test
pop
popf
aaa
mov
push
push
out
push
cmp
pop
inc
and
movsb
stc
bound
addb
loop
cmp
push
sub
cmpsb
jg
jmp
je
xchg
aaa
xor
and
cmp
sub
mov
cmp
xor
xchg
adc
xor
xor
cmp
adc
mov
mov
ret
dec
gs
addl
pusha
rolb
arpl
pop
gs
insb
sub
sbb
jg
inc
sub
popa
sub
sub
sub
sub
daa
push
fisubl
pop
arpl
decl
jge
imul
adc
adc
inc
mov
sub
jb
mov
mov
sub
sub
cltd
in
insl
mull
cmp
xor
cmp
pusha
mov
jge
cmp
pop
jnp
cmp
loope
sub
imul
add
leave
ficomps
jo
jo
pop
adc
dec
adc
aaa
bound
sub
sub
sub
addr16
sub
jge
mov
jge
sub
push
and
test
push
xor
cmp
xor
xor
lcall
xor
sub
xlat
or
adc
sub
xor
das
xor
sub
in
insl
in
sub
sub
or
adc
xor
aad
rcrl
cmp
push
sbb
mov
aaa
dec
mov
aaa
sub
xor
cs
cmp
mov
xor
pop
add
xor
and
lods
cmc
testl
cmp
divb
aaa
dec
cmp
cmp
cmp
pop
xor
xor
pop
and
add
mov
add
jge
ret
xor
xor
imul
fidivrl
xor
pop
aaa
pop
adc
cmp
sub
mov
sub
and
xor
out
push
push
pushf
mov
and
cmp
xor
xor
xor
mov
jb
xor
fcmovne
xor
cmp
ds
xor
cmpsb
xor
pop
xor
cmp
fwait
xor
jge
adc
xor
ss
and
mov
push
push
cmp
pop
das
inc
xor
cmp
fisttps
xor
xor
aaa
test
mov
mov
ss
inc
pop
daa
jno
imul
sub
popa
jl
mov
jne
push
mov
inc
sub
mov
adc
pop
dec
bound
and
inc
jnp
jl
or
imul
mov
data16
cmp
je
push
insl
xor
sub
mov
sub
inc
inc
jl
sbb
push
dec
jo
jl
cmp
scas
aaa
add
and
cs
in
notl
jl
outsl
xor
je
daa
mov
or
mov
jl
push
mov
lea
insl
jbe
add
insb
inc
std
jl
js
pusha
pop
mov
jl
adc
mov
xorb
dec
dec
inc
insl
jo
lret
pop
mov
mov
jl
or
imul
je
inc
pop
sti
ss
pop
ja
insl
insl
je
aad
inc
cli
cmpb
popf
sbb
jne
xchg
popa
fs
in
mov
fmuls
imul
push
mov
out
jl
mov
into
and
inc
xchg
or
jl
jl
jl
jl
add
push
test
in
xor
sub
fstpt
jl
cs
test
push
add
jo,pt
mov
jae
jne
insl
dec
stos
sbb
mov
jae
xlat
push
mov
das
lock
jle
das
outsb
push
lods
mov
sysret
repnz
jne
cmp
inc
adc
bound
jns
mov
sti
adc
insl
imul
pop
adc
clc
jg
enter
push
push
push
sub
push
mov
mov
cmp
aaa
sub
inc
dec
out
adc
loope
fistl
cmp
les
bound
cwtl
mov
inc
ljmp
jno
mov
jmp
popa
addr16
arpl
sbb
sub
mov
sbbb
mov
jae
inc
js
lods
add
jl
cmp
and
ret
imul
and
push
inc
add
pop
insl
jae
xor
pusha
seto
aaa
jo
into
adc
jbe
jne
push
push
pop
stc
sub
dec
pop
out
bound
fistps
imul
cmc
push
sbb
mov
dec
cmc
inc
sbb
sbb
mov
rcrb
dec
inc
pop
inc
int3
in
lea
inc
incb
or
pop
inc
sbb
ss
sub
in
pop
inc
sbb
in
sub
pop
xlat
or
jnp
sbb
bound
xchg
pop
and
fcompl
fnstenv
push
pop
pop
mov
inc
push
pop
gs
sub
and
xlat
xchg
push
popa
ret
xchg
pop
xlat
sbb
or
push
cs
push
add
add
adc
ret
push
inc
out
iret
push
insl
mov
jl
xor
mov
cmp
cmp
das
int
or
out
in
push
and
jae
outsl
jae
data16
and
jne
push
popf
sub
js
sbb
mov
xchg
or
jae
sub
push
sub
jne
sub
imul
pop
xor
xor
pop
xor
push
push
cli
adc
pusha
pop
push
xor
push
or
sub
jne
and
nop
xor
inc
jne
in
clc
mov
inc
data16
fiadds
cmp
cmpsl
and
xchg
push
push
popa
gs
sbb
sub
sti
inc
push
or
pop
sub
inc
inc
pop
add
adc
xor
pusha
add
add
xchg
cld
xorb
cmc
jno
ja
jno
fistpll
pop
jb
mov
and
jne
jns
das
mov
and
jnp
jns
jp
jl
jnp
jge
jl
call
sub
jg
jg
xor
sub
dec
jmp
subl
xorb
cmc
xorl
xor
cmc
test
mov
xchg
mov
cmc
xchg
mov
mov
cmp
cmc
mov
cmp
cmc
mov
mov
xchg
cmc
lea
inc
cltd
cmc
mov
popa
lcall
inc
popf
in
scas
incl
mov
inc
fisubs
mov
or
call
xor
sar
decl
xor
pushl
call
xor
sar
decl
xor
incl
call
sub
and
or
sidtl
call
test
add
aas
add
imul
sbb
leave
mov
inc
xchg
xor
mov
outsl
inc
add
cmc
mov
movsb
jne
or
in
and
call
popa
mov
and
inc
lcall
call
pop
push
arpl
mov
xchg
cmc
lcall
cmc
mov
and
nop
push
and
jmp
or
imul
sbb
or
and
or
outsl
andl
dec
cmpsl
cmc
lcall
cmc
pop
and
dec
int
mov
cmc
pop
push
js
mov
jnp
xchg
les
push
nop
inc
xchg
loopne
loop
ds
dec
pushf
push
loope
in
iret
sarb
add
iret
out
call
inc
and
xchg
dec
test
popa
pop
dec
cmc
movsb
imul
mov
in
and
fxch
xchg
mov
ljmp
pop
enter
push
stos
cmc
out
xor
xor
addb
inc
rcl
subb
lcall
sti
daa
jnp
push
pushf
mov
div
clc
xchg
and
pop
add
jmp
popf
pop
cmpsl
and
jbe
mov
jecxz
jmp
xor
cwtl
push
stos
mov
movsb
imul
push
jge
mov
rclb
clc
lock
lcall
into
mov
shr
mov
insb
xchg
mov
xchg
xor
cmpsb
imul
mov
mov
mov
and
jle
imul
mov
lods
mov
add
cmc
and
outsb
mov
jmp
js
cmpl
sub
out
mov
cli
lcall
ss
cmpsb
test
clc
sub
ret
pop
lods
je
add
loope
out
cmpsb
push
jnp
inc
mov
mov
scas
mov
push
mov
inc
shl
cmpsl
insl
lods
mov
movsl
push
lods
ret
out
enter
shr
mov
inc
ret
mov
aaa
or
test
lods
fisttps
mov
mov
push
xlat
ljmp
cmp
inc
ret
scas
or
and
rorl
movsb
and
in
shrb
stos
and
mov
mov
and
scas
or
pusha
pop
popa
and
jnp
and
push
out
je
pop
or
je
cmp
addb
aam
and
leave
mov
or
cmc
nop
sbb
test
sti
add
add
call
mov
insb
add
mov
adc
daa
or
push
xchg
cmc
stos
jno
mov
and
fdivrs
shr
mov
jmp
cmc
addl
sub
pushl
xchg
or
mov
pop
mov
mov
or
lds
xor
push
mov
or
gs
imul
or
inc
lcall
faddl
test
inc
push
shll
inc
lcall
in
push
nop
add
mov
or
mov
or
and
dec
and
lahf
pop
mov
mov
add
popa
mov
mov
lcall
mov
sub
sbb
push
sbb
mov
mov
or
imul
or
dec
dec
nop
cmc
enter
stos
mov
mov
mov
add
mov
mov
pushl
in
not
xor
shl
cmc
cmc
cmc
cmc
dec
shll
cmc
cmc
xor
shll
shll
cmc
cmc
mov
xor
cmc
cmc
cmc
cmc
mov
add
or
or
jle
pop
jg
nop
inc
push
addl
mov
enter
lea
xor
lcall
pushf
pop
pop
mov
dec
mov
pop
or
scas
push
mov
and
or
inc
mov
or
fdivrs
addb
test
orl
nop
pop
lds
sar
sub
and
fdivl
add
sbb
or
jo
jno
testb
push
and
icebp
push
mov
jp
jge
jge
out
mov
push
jg
dec
subl
sub
mov
or
lods
cmpsl
inc
pop
mov
pushf
xchg
iret
fcmovnb
test
push
xchg
nop
popf
pop
pusha
scas
push
and
pop
or
mov
pop
pop
int3
mov
mov
leave
stos
mov
or
test
add
xchg
cmp
cmp
xor
pop
mov
xchg
pop
xchg
dec
test
xchg
add
lret
or
xor
test
pop
mov
cmc
lock
pushf
pop
cmpsb
out
shrd
adc
xchg
lret
jb
jecxz
push
stos
mov
ljmp
mov
jg
pop
test
pop
fld
aam
add
xchg
lret
pop
mov
sub
cmpsb
imul
mov
movsb
int3
test
aaa
stos
push
sub
shll
cmp
cltd
adc
inc
or
in
flds
sbb
shlb
shll
inc
rcll
pop
jo
pop
add
xor
pop
sarb
push
xchg
int
enter
sub
pop
mov
mov
sub
inc
add
ret
pop
and
int
out
pop
pop
sub
cmp
fwait
lret
mov
rcrl
pop
addb
add
pop
jb
and
in
mov
jnp
popa
jae
cltd
rcrb
nop
or
pop
iret
iret
dec
gs
stos
jb
pop
sub
add
rcrl
shlb
pop
sub
and
adc
test
mov
out
push
mov
out
push
pop
lahf
pop
mov
pop
pop
sub
xor
outsb
and
pop
jo
inc
gs
add
pop
pop
push
push
outsb
and
pop
test
adc
enter
and
lret
popa
add
pop
and
stos
xchg
or
adcl
ljmp
outsl
jno
mov
not
cmp
stos
orl
jmp
test
jmp
sub
imul
cmp
movsb
jmp
add
das
cmp
cmp
inc
mov
cmp
nop
in
cmp
or
jmp
xorb
or
jmp
shll
addb
or
mov
push
mov
pop
lods
lret
push
jmp
out
incl
add
lret
leave
movsb
int
lds
in
dec
stos
aam
or
pop
push
outsl
jmp
dec
roll
add
fldpi
ja
bound
xor
xchg
pop
add
ja
cmp
divb
or
fsubrp
and
push
sahf
pop
scas
xlat
dec
sarl
xchg
filds
adc
adc
out
pop
loopne
out
and
out
push
xlat
sbb
stc
cmp
andl
inc
pop
or
das
add
je
add
lcall
add
xlat
in
jmp
testl
add
push
inc
xchg
inc
nop
mov
mov
je
jne
hlt
mov
ja
xchg
jp
jl
adc
or
mov
outsl
imul
push
and
test
pop
mov
iret
cli
add
inc
inc
sub
xor
or
test
pop
add
or
loopne
or
adc
sbb
or
mov
cld
add
jae
xor
mov
insb
lcall
xchg
out
loop
das
mov
pop
dec
jae
lcall
bound
scas
cld
cli
aas
fs
pop
jbe
fs
aam
fidivrs
cmp
int
pop
jbe
cmp
lods
lods
ret
cmpsb
mov
pop
test
rcrb
add
pop
xchg
mov
fisubs
xor
jb
ret
mov
pop
push
jl
mov
in
repnz
push
mov
int
sarb
sub
out
sub
out
insl
mov
cmp
push
pop
push
je
frstor
lcall
inc
add
int
xor
cmp
dec
cmpb
add
sub
cmp
movsl
adc
mov
add
sti
lahf
nop
cmovs
xor
cmp
inc
dec
dec
inc
inc
pop
or
daa
adc
sub
or
das
pop
or
and
sbb
fstp
div
inc
inc
dec
adc
inc
or
or
inc
add
fdiv
in
adc
adc
add
adc
int
mov
push
sbb
xor
pop
add
dec
sub
mov
and
inc
adc
sbb
sub
add
sub
ss
pop
and
fiaddl
push
and
or
into
mov
daa
xor
add
pop
jmp
fstl
or
sub
mov
sub
adc
inc
inc
xor
cld
out
out
push
cmp
adc
sbb
cmp
inc
jg
pop
sbb
inc
cmp
push
inc
pop
sbb
sub
mov
pop
dec
outsl
inc
pop
daa
pop
pop
sti
sti
lods
adc
sbb
sbb
add
clc
fcmovnb
pop
or
adc
or
out
pop
movsb
pop
lahf
jg
dec
add
sbb
dec
add
or
bound
sub
loopne
outsl
cmp
and
add
cmp
jne
add
decl
sub
das
or
add
sub
add
decl
fsubrs
and
and
jge
jbe
lock
jne
xor
pop
inc
add
lods
jae
jnp
pushf
in
mov
mov
inc
dec
sbb
xor
loope
inc
adc
das
cmp
icebp
in
int
aam
aaa
and
adc
cmp
inc
ja
fwait
xor
loopne
jecxz
ret
pop
shlb
cmp
sub
inc
fdivr
notb
sbb
cmp
add
push
stos
add
add
pop
pop
push
add
je
test
push
mov
nop
mov
add
push
push
cmp
cmp
and
mov
sahf
popa
pop
add
mov
add
add
xchg
xchg
xchg
add
pop
add
cmp
outsb
pop
popa
add
push
add
push
insl
test
dec
fldenv
or
xchg
repnz
shrb
rcll
fisubrs
lods
jnp
stos
add
int3
int
test
filds
and
sub
mov
in
ja
sbb
js,pn
cmp
adc
and
stos
and
out
mov
add
stos
adc
add
lea
mov
cmp
mov
mov
cltd
sti
push
xchg
adc
mov
mov
fldcw
adc
inc
das
out
mov
mov
mov
adc
adc
inc
inc
sbb
mov
jae
pop
push
inc
pop
sbb
ss
lcall
xchg
xor
pop
neg
mov
inc
or
add
sti
fsubs
mov
mov
fstl
ja
add
lret
mov
mov
test
mov
loope
jp
int
lcall
add
insb
stc
in
mov
fiadds
sbb
ss
ja
or
pop
out
push
pop
push
in
inc
repz
pop
or
pop
fldcw
sti
mov
pop
dec
fcompl
xlat
adc
stc
scas
mov
add
pop
int3
lret
mov
shr
out
lret
mov
pop
lcall
xor
xchg
ret
pushf
xor
lret
arpl
popa
mov
mov
xchg
rcr
in
mov
aaa
rcrl
imul
xchg
push
int3
mov
lods
das
inc
add
pop
and
repz
xchg
int3
pop
xor
and
and
jbe
xor
mov
inc
mov
fucomi
popa
pop
add
cmp
mov
mov
das
adc
ja
mov
out
sbb
cmpsl
jbe
push
xor
sbb
and
add
dec
and
xor
xchg
mov
outsl
xchg
add
rcrl
call
add
imul
shrb
cwtl
pop
lret
push
cmp
mov
repnz
movsb
add
gs
push
lods
jnp
sbb
push
xor
fistpl
dec
inc
xchg
push
imul
sub
mov
pop
fists
push
mov
xchg
push
data16
movsl
cmc
push
pop
pop
or
push
pop
push
bound
adcb
xor
mov
pop
loop
sbb
pop
pop
and
insb
inc
or
xchg
insl
gs
push
es
pop
out
bound
js
push
bound
pop
and
sub
push
mov
pop
incl
sti
cmp
xor
add
aas
adc
jg
add
pop
mov
popf
orl
mov
rolb
jge
fiadds
shrb
pop
clc
ud0
lret
into
fs
add
add
cmp
insb
aaa
pop
xorps
incl
pop
pop
add
faddp
out
loopne
lock
xor
ljmp
fbld
adc
pusha
add
loopne
pop
xchg
dec
mov
pop
incl
fiadds
add
dec
sahf
cmp
add
pop
lock
aas
pop
and
or
jg
dec
and
pop
pop
add
dec
jp
imul
adc
pop
nop
xchg
and
add
fdivrl
ljmp
add
outsb
dec
add
push
negb
and
imul
jmp
pop
inc
add
adc
pop
cmp
rcr
jg
xor
add
add
inc
jle,pn
dec
cmp
jnp
loop
sti
add
add
inc
add
add
mov
xor
add
add
jae
arpl
pop
inc
add
fcomi
repnz
push
add
add
inc
inc
sub
mov
pushl
je
mov
call
or
cld
add
insl
sti
jno
flds
popf
cmpsb
stos
add
outsl
mov
mov
add
mov
testb
fcmovu
mov
mov
push
mov
add
jg
jmp
add
mov
add
fildl
test
pop
mov
mov
fisttpl
pop
jo
add
sarl
mov
adc
add
push
jge
mov
dec
rcll
add
testl
gs
arpl
pop
add
in
icebp
jbe
add
jl
inc
add
mov
pushl
push
add
mov
sarb
pusha
jge
call
mov
inc
xor
daa
sbb
inc
add
sub
mov
popa
pop
pop
push
push
add
cmp
pop
inc
add
xor
icebp
add
dec
sbb
sqrtps
inc
insl
mov
ja
mov
pop
add
fsubrs
pop
icebp
and
and
pop
idivl
inc
pop
pop
mov
push
dec
push
add
sbb
add
add
add
and
test
jbe
push
inc
fs
pop
cmp
pop
push
cmp
jnp
dec
cmovns
mov
and
insl
push
pop
add
dec
aaa
xchg
xchg
jae
aad
insl
insl
mov
lret
push
pushl
dec
jge
cmpsl
push
inc
ja
ja
lds
dec
dec
xor
ret
rcll
dec
dec
push
sbb
jg
mov
jb
filds
add
sub
icebp
testl
test
das
ljmp
cmp
xorb
mov
and
xchg
add
mov
lret
lods
cmp
add
add
fldt
iret
or
lahf
push
cmpsl
jno
jae
inc
rcll
pop
pop
sub
pop
inc
pop
xchg
scas
scas
mov
push
adc
insl
xlat
push
negl
add
mov
or
js
dec
push
fs
outsl
clc
stos
ds
imul
add
pop
push
sbb
or
insl
insb
pop
dec
jb
lret
jnp
testl
insl
jnp
jae
pop
decl
imul
and
mov
fildl
je
cmp
mov
sub
inc
insl
and
jne
dec
mov
jmp
sub
inc
daa
lret
ficoms
fidivs
inc
dec
addr16
aas
push
pop
pop
xor
mov
xchg
lea
pop
push
repz
jbe
jge
xor
repz
fbstp
inc
movsl
mov
jg
add
mov
aad
fistpl
xor
add
dec
xchg
outsb
or
aaa
movsl
ds
jb
push
dec
mov
xchg
xor
jg
or
sub
sbb
mov
mov
mov
shrl
test
das
add
repz
lods
push
cs
lahf
add
lret
add
push
push
mov
lret
xlat
les
mov
sbb
ljmp
sti
cmp
add
les
enter
jb
inc
cli
sahf
pusha
pusha
jae
test
sti
jbe
idiv
cmp
pop
add
mov
iret
mov
sbb
les
call
fsubl
outsl
jns
sbb
mov
repz
pop
jne
hlt
inc
cmp
hlt
repz
das
daa
and
cmp
cmc
push
test
cmpsl
frstor
ss
mov
cmp
inc
repz
cmp
lret
stos
cmpsl
and
divl
test
cmp
fistl
xchg
idiv
jg
cli
pop
ret
xchg
and
inc
outsl
es
adc
std
cmp
jg
filds
imul
loop
imulb
jg
cmp
jae
pop
out
leave
mov
std
and
xchg
divb
imul
push
or
lock
ficompl
push
cmp
rorb
xchg
leave
lahf
mov
jne
lods
std
jg
and
sbb
or
add
fs
or
push
popa
jo
movsb
mov
fucomi
sbb
xor
adc
adc
sbb
sub
shr
or
out
and
fistpll
leave
pusha
pop
add
das
jg
mov
out
in
push
in
mov
pop
das
lret
add
aam
dec
gs
outsl
sbb
mov
adc
nop
dec
sbb
in
loop
adc
or
int
cmp
fcmovb
lahf
xor
and
lcall
idiv
adc
push
push
lock
pop
mov
insb
cwtl
fistpll
cmp
xchg
sbb
das
mov
and
clc
sbb
lcall
subl
or
add
mov
fwait
mov
sbb
cli
ds
mov
xor
and
pop
int
test
cmpsl
cli
push
mov
mov
decl
fmulp
sbb
in
ret
dec
mov
test
and
add
mov
out
pusha
lahf
mov
dec
jge
lret
decl
lret
jbe
nop
xchg
fbld
xor
push
cmp
jle
mul
mov
das
out
push
fidivs
mov
into
mov
mov
adcl
fidivrl
leave
cmp
or
scas
xchg
cmp
ljmp
lds
fcoms
mov
mov
pop
in
in
sbb
fidivs
adc
xor
mov
popf
xchg
and
insb
js
dec
sub
in
add
and
jb
scas
aas
mov
or
pushf
das
xor
xlat
ret
sbb
dec
mov
inc
ja
xchg
in
mov
pop
test
fnsave
in
das
cs
mov
mov
test
andl
and
add
out
pop
jmp
divb
das
mov
mov
pinsrw
fadd
and
js
das
jge
cmp
adc
jb
adc
xor
or
jmp
pop
xchg
pusha
call
ja
add
or
in
lcall
das
or
in
scas
loope
loope
sbb
call
jg
daa
pop
mov
mov
dec
xchg
test
pop
mov
shll
pop
xchg
sbb
dec
das
call
popa
pusha
add
xor
lea
outsl
loopne
addr16
adc
ds
das
push
jl
repnz
pop
push
repnz
subps
dec
inc
mov
lods
or
jns
jge
test
imul
pop
loope
xchg
xor
adc
pop
maxps
add
cli
mov
inc
pop
call
ret
cmpsb
pop
xor
idiv
dec
add
pop
push
lea
loopne
outsl
daa
cmp
mov
das
xor
in
inc
or
sti
fistpll
dec
pop
cmp
out
imul
pop
ss
xor
xor
loop
jbe
lret
orl
out
or
inc
add
add
ds
mov
xor
dec
jae
cmp
inc
xor
mov
pop
daa
rorb
jb
dec
aas
inc
or
je
cmp
int3
add
mov
das
cmp
pop
pusha
cmp
aas
mov
jg
xchg
das
mov
cs
das
cmp
inc
xor
or
in
decl
xor
lahf
xchg
dec
cmp
addr16
fistpl
gs
lds
cmp
sarl
inc
or
ret
lock
mov
inc
and
inc
aaa
cld
and
jle
push
stos
push
xor
pop
dec
cs
das
mov
icebp
lret
xlat
loopne
dec
cmp
ds
jp
loopne
imul
pop
cli
fs
pop
pop
push
push
jl
mov
outsb
aaa
fiaddl
jl
sub
call
xchg
sub
add
outsb
das
inc
ss
cs
jno
pop
sbb
aaa
pushf
inc
pop
fs
sbb
mov
call
add
sub
addb
dec
add
or
iret
and
rolb
divb
and
add
cmp
decl
int
xor
xchg
lcall
add
idiv
test
jle
mov
push
std
add
arpl
lret
in
sti
add
pop
out
fwait
lcall
sbb
stc
push
out
mov
iret
or
xchg
xchg
sub
sbb
dec
jne
daa
inc
je
cmp
push
ss
and
popa
inc
fs
std
inc
push
outsb
shlb
add
scas
pop
or
ret
ret
cmpb
inc
cmp
jmp
and
jmp
pop
and
add
movsl
add
xlat
add
mov
adc
icebp
add
ljmp
push
out
adc
adc
idiv
jmp
adc
sbb
sub
adc
pop
push
das
call
xor
loope
mov
sbb
or
sub
decl
sbb
lcall
xor
ja
lea
xchg
flds
mov
mov
ljmp
jmp
push
decl
inc
dec
jmp
push
mov
push
in
add
enter
xchg
mov
jmp
push
test
sub
xor
and
je
xor
incl
icebp
and
stos
je,pt
incl
aam
sub
push
cmpsl
fistl
pop
cs
call
cld
in
sbb
pop
aam
sub
push
jne
jae
xchg
ja
incl
jbe
pushl
js
fisttpll
mov
repz
js
mov
xchg
xor
and
sub
fbstp
and
clc
adc
push
dec
cs
sub
fisttps
and
sbb
inc
xlat
loope
sti
jg
arpl
call
in
fs
jecxz
pushl
jl
sub
and
push
sbb
cmp
loopne
pop
movsl
pop
mov
ja
outsl
iret
test
mov
decl
jg
ret
jb
insl
cld
inc
ss
or
decb
mov
arpl
push
pop
mov
sub
incl
ficoml
fstp
add
cmp
mov
push
and
or
push
and
inc
das
insb
pop
jg
div
jle
pop
lods
jmp
test
dec
incl
iret
ljmp
pop
test
lcall
and
and
cmp
pop
adc
stc
xchg
filds
jl
jns
xchg
decb
add
ret
xchg
insb
push
pop
call
fisttps
xchg
and
call
pushf
dec
lret
in
xchg
push
inc
out
pop
and
outsl
jle
es
push
mov
cmp
gs
jle
sbb
cmp
sub
sub
das
xor
cs
gs
xor
cmp
dec
ret
sub
call
mov
outsb
jo
adc
sbb
cmp
pop
pushl
outsl
sti
jp
jae
xchg
add
icebp
neg
lea
leave
test
ja
mov
cmp
push
ret
call
or
pop
add
xchg
imul
imul
cmp
into
sbb
mov
and
pushf
push
dec
xchg
mov
out
xor
outsl
fdivrl
push
xor
xor
decl
push
cs
pop
xor
das
cld
mov
je
incl
xor
repz
imul
in
ja
adc
xor
ficompl
xlat
or
mov
dec
mov
pop
ret
jne
ja
mov
pop
cmc
ret
push
pop
jnp
adcl
xor
fdivl
iret
jne
mov
outsl
xchg
fcmovnb
outsl
jg
add
ret
lret
outsb
jmp
and
testl
cmp
inc
xor
xor
cs
jle
das
scas
mov
add
or
arpl
jbe
cwtl
xor
and
ret
imul
add
iret
sub
ror
xor
fistpll
imul
mov
jae
popa
inc
jo
fidivrs
xchg
js
ja
insl
insl
jmp
mov
outsl
repz
mov
incb
shrb
jg
imul
testb
lcall
xor
lds
ret
mov
push
sarb
jno
lcall
cmp
les
pop
mov
in
lret
push
sbb
push
adc
jb
and
jp
lahf
add
cmp
mov
push
pop
arpl
pop
jge
gs
cmp
xchg
gs
jp
lret
jb
pop
pop
jmp
pusha
pop
xchg
add
sbb
inc
movups
pop
add
jl
mov
gs
sub
push
pop
xchg
cld
in
rcrb
push
inc
pushl
popf
dec
mov
push
cmp
enter
fildll
int3
push
or
push
jmp
aas
lret
in
lock
cltd
add
inc
in
adc
negb
gs
dec
push
mov
ret
pusha
repz
lcall
dec
jge
imul
jnp
jns
xlat
arpl
inc
mov
imul
stos
or
fidivs
mov
add
dec
mov
int
scas
leave
pop
mov
mov
jnp
pop
mov
inc
setle
insb
fsubrs
mov
lret
push
xchg
pop
pop
mov
push
and
sbb
add
ret
popf
add
and
jb
lds
outsl
bound
ljmp
pop
jg
ror
jbe
gs
subl
mov
aas
sbb
arpl
aaa
sub
or
or
xor
fdivrs
xchg
add
pop
pop
outsb
lcall
gs
mov
pop
cmp
pop
inc
in
mov
push
arpl
outsb
mov
push
adc
inc
outsl
push
add
mov
sub
pop
sarl
add
sti
outsl
inc
dec
pushf
daa
xchg
add
push
cmp
sub
aas
mulb
inc
sbb
push
sub
pop
pusha
ret
pop
xchg
popa
out
pusha
insl
pop
mov
push
fs
insl
les
cs
jge
xchg
pop
push
pop
es
and
aaa
mov
pop
sbb
imul
mov
pop
roll
mov
fdivs
mov
xor
int3
fdivrs
mov
mov
push
mov
mov
imul
adc
fisubs
inc
sub
xor
fisubl
pop
dec
inc
sub
imul
mov
ret
insb
pop
pop
lret
pop
arpl
loope
mov
popa
outsb
pushl
xchg
pop
dec
push
inc
and
pop
mov
pop
das
or
or
lods
stos
inc
clc
pop
insb
pop
xor
add
jg
jo
mov
pop
jg
pop
aas
cmp
mov
mov
iret
mov
push
mov
ja
pop
fldt
jns
outsl
xchg
cmp
mov
adc
inc
dec
fidivrl
mov
pop
or
push
jecxz
add
jle
rorb
push
incl
add
addr16
inc
dec
xor
mov
jmp
dec
cmp
cmpb
addb
mov
push
push
mov
call
loop
jnp
addr16
pop
lods
xchg
mov
inc
xor
dec
lahf
arpl
add
xor
mov
enter
fisttpl
mov
sbb
cld
dec
ret
dec
adc
sub
mov
ja
dec
sub
arpl
pop
pop
stos
jo
rorb
xchg
push
out
xchg
mov
mov
sbb
jl
loop
hlt
jnp
pusha
out
push
inc
push
mov
insl
outsb
xchg
lret
dec
inc
add
cld
shr
in
mov
inc
gs
mov
pop
test
loop
sub
and
xor
jo
jnp
aas
xor
rclb
pop
inc
ret
mov
sub
xchg
inc
pop
pop
cmp
mull
data16
xchg
int3
mov
ret
jne
cmpsb
mov
aaa
ffree
ret
jae
pop
jae
out
push
dec
push
fcmovnu
mov
dec
mov
xor
inc
mov
jge
subl
out
xchg
xlat
pop
xor
push
sbb
jb
mov
fwait
add
xchg
mov
and
push
ljmp
sub
mov
add
push
mov
inc
mov
push
pop
jnp
push
mov
xorl
mov
test
pop
jge
insl
mov
fstpl
jle
bound
push
lret
push
pop
test
push
dec
pop
ret
xlat
in
push
mov
dec
addr16
pop
mov
popa
lahf
pop
pop
sbb
inc
std
jp
jno
outsl
lock
cmpb
sub
stc
mov
xchg
xchg
cmp
jbe
daa
jnp
dec
out
dec
stos
js
jecxz,pt
pop
jnp,pn
aas
dec
inc
xor
xchg
dec
mov
es
in
in
inc
add
sub
adc
ret
mov
pop
sti
aad
cmp
inc
inc
or
je
jnp
pop
inc
dec
ret
bound
xchg
jl
insb
jbe
push
mov
imul
sbb
pop
mov
arpl
incl
loope
and
in
and
mov
hlt
jb
inc
mov
ss
stos
push
mov
mov
in
push
jle
inc
dec
dec
add
lret
jns
stos
lea
iret
mov
mov
stos
inc
incl
add
inc
rorl
ja
ljmp
pop
outsl
dec
imul
jb
xchg
cmp
ss
sub
pop
popa
ja
jg
sbb
inc
mov
mov
pop
inc
push
dec
out
ud0
add
mov
adc
ja
sbb
or
pop
scas
pop
pop
loop
insb
dec
mov
inc
pop
push
imulb
insb
pop
out
xchg
xchg
cmpsb
lahf
popf
push
repnz
mov
adcl
xchg
cmp
ss
dec
arpl
cmpsl
insl
inc
lahf
push
cmp
lcall
outsb
addr16
pop
or
pop
iret
bound
mov
pop
dec
push
xchg
js
frstor
sbb
cmp
jbe
pop
xchg
ficomps
loop
mov
insb
and
insb
repz
imul
pop
jae
loop
cltd
dec
pop
movsb
xchg
stos
mov
ja
add
mov
inc
add
loopne
fcmovu
and
push
pop
pop
dec
mov
lock
dec
xchg
dec
ret
insb
mov
lea
jne
push
andb
dec
push
fisttps
xlat
push
cs
push
adc
push
adc
iret
fcompl
lods
or
dec
jecxz
pop
jmp
mov
mov
and
insl
add
push
pop
sub
in
jbe
dec
mov
call
inc
int3
sti
lret
jecxz
push
push
jle
cld
and
cmp
jae
jae
inc
xor
cmp
lcall
sub
xor
pop
xlat
pop
dec
add
ret
imul
mov
pop
pop
inc
cmpsl
push
jmp
jae
pop
cmp
aaa
mov
in
in
out
jne
jmp
dec
iret
jo
fisubrl
mov
pop
mov
push
jno
rcl
sar
decl
scas
mov
lods
das
movl
clc
add
mov
pop
jo
lcall
decb
xor
and
mov
dec
fildll
mov
mov
xchg
mov
jp
popa
imul
das
mov
dec
outsl
push
inc
inc
jmp
fwait
mov
je
test
fwait
out
inc
mov
fucomi
jecxz
xor
push
dec
or
mov
add
xlat
sub
mov
sti
inc
mov
mov
xchg
mov
or
incl
add
mov
lret
ss
or
insl
inc
bnd
cmp
sarl
pop
inc
addr16
mov
ret
push
pop
inc
pop
ja
fildl
sub
popl
adc
outsb
mov
mov
xchg
das
push
jecxz
cmp
bound
insl
xchg
mov
sbb
push
out
fcmovbe
shlb
cmpsb
call
and
jmp
sub
lcall
and
call
adc
mov
inc
jl
mov
scas
or
outsl
mov
inc
xorl
sub
cmp
jnp
jo
jg
and
push
aaa
adc
dec
ret
mov
shlb
outsl
push
and
push
shlb
or
popa
adc
ret
pop
dec
xor
cmp
inc
outsl
mov
pop
inc
out
pop
pop
loopne
pusha
lret
rcr
movsl
fisttpl
aaa
daa
ja
add
mov
int
out
call
inc
unpckhps
ret
or
xchg
insl
mov
push
popa
adc
xlat
xlat
sub
xchg
das
inc
dec
mov
inc
xor
cmpsl
inc
rcrl
pop
imul
cmp
mov
dec
repz
stos
in
sbb
out
lcall
fbld
mov
dec
xor
das
arpl
loopne
add
stc
or
sub
ret
arpl
sub
and
adc
lock
add
adc
add
xchg
xchg
pop
adc
pop
jnp
cmp
aaa
in
ret
push
pushl
push
pop
ret
aas
and
imul
ret
fidivs
mov
sub
add
lea
mov
or
outsl
jo
jmp
out
xor
jg
and
mov
xor
aaa
pop
jnp
pop
sbb
xchg
mov
outsl
inc
stos
fmul
cmp
fmuls
pop
or
ja
daa
imul
jo
jmp
aas
test
mov
push
fwait
sarb
sub
les
arpl
ret
push
jecxz
outsb
jne
mov
jb
outsl
mov
push
jg
mov
or
stos
fcmovnb
int
pop
in
jbe
out
lock
adc
mov
inc
add
daa
call
jle
setno
std
jl
pop
std
xor
sbb
xchg
aas
inc
xchg
add
mov
inc
sti
std
inc
pop
jecxz
push
xor
and
ret
sub
add
inc
jl
mov
mov
stos
push
add
xchg
inc
cmp
mov
mov
cmc
xchg
int3
pop
mov
jl
shl
xchg
orl
mov
dec
das
jo
outsl
jbe
outsl
outsl
mov
arpl
pop
movsb
cli
xor
icebp
mov
mov
mov
dec
pop
dec
dec
ret
mov
sti
jl
outsl
mov
mov
adcl
adc
das
fadds
fdivl
mov
sbb
push
insl
pushl
mov
test
ret
fwait
mov
test
sti
je
ret
jo
addr16
mov
aaa
sbb
notb
push
jle
adc
jg
dec
movsb
in
imul
pop
pop
pop
repnz
ficompl
jecxz
sub
popa
pop
adc
add
add
jg
push
pop
mov
dec
cmp
arpl
push
out
mov
inc
or
pop
xchg
fistpll
loop
jb
aas
addr16
ja
jnp
mov
mov
popa
mov
sub
pop
pop
in
ljmp
loop
daa
call
insl
call
push
mov
mov
jae
mov
mov
mov
xor
add
xchg
mov
inc
enter
jb
stc
xor
repz
popa
or
loope
push
in
jnp
movsb
add
mov
je
filds
fcmovnu
pop
mov
jge
mov
leave
out
add
out
out
pop
jbe
jp
dec
jb
mov
inc
mov
inc
movsl
xlat
orl
or
lea
test
call
mov
jg
lea
pop
insl
jecxz
ret
loope
in
shl
add
repnz
or
enter
sub
fidivs
mov
xor
jge
fldt
mov
jmp
or
sahf
mov
mov
and
aaa
jle
mov
jmp
mov
sar
mov
test
shlb
shll
in
mov
jae
aas
inc
bound
das
in
push
negb
stos
loope
xchg
jmp
jae
xchg
lcall
sahf
ljmp
xor
jbe
lods
xor
ret
xchg
int
jnp
xchg
outsl
lret
test
jbe
pushl
pop
je
cmpsl
fcompl
inc
mov
cmp
fldt
aad
fisttps
mov
in
stc
ret
fcmove
ss
lds
jnp
push
mov
xchg
jno
push
jne
roll
xchg
inc
outsl
das
dec
jns
pop
adcl
cmpb
lds
ret
fsub
fcomp
jae
mov
rcl
icebp
cmc
orl
lret
insb
lahf
subps
jp
push
scas
xor
mov
jns
jbe
loope
push
or
sbb
sbbl
insb
mov
movsb
jecxz
outsb
mov
sbb
mov
sub
repnz
adc
add
sahf
mov
mov
push
fcmovu
frstor
aam
pop
lret
stos
ja
jae,pn
mov
sub
push
out
xchg
inc
sbb
pop
mov
incb
mov
sub
inc
jge
push
leave
mov
fnsave
add
mov
jg
push
repz
jmp
xor
jno
mov
xor
sub
lcall
and
add
pop
sub
mov
and
or
xor
xchg
jg
mov
mov
loopne
fucomp
xchg
mov
xchg
cwtl
lret
in
addl
mov
pusha
out
subb
out
inc
jnp
mov
cmpl
test
outsb
outsb
mov
push
addr16
aas
jecxz
lcall
incl
mov
fmuls
mov
mov
out
out
or
mov
repz
push
scas
sti
fisttps
cld
js
jmp
add
push
lock
aaa
fs
sub
mov
lds
or
jmp
pop
cmp
jae
outsl
mov
add
dec
xorb
xchg
insb
jg
sbb
scas
mov
mov
test
sti
xor
xchg
lea
and
mov
daa
sub
add
test
mov
push
addr16
outsb
pop
or
or
push
lds
xchg
fmuls
sub
rolb
or
inc
mov
push
mov
jmp
mov
jns
insb
adc
sub
and
test
iret
stos
dec
inc
js
push
gs
add
das
repnz
inc
adc
push
or
adc
outsl
mov
push
outsl
push
pmullw
xchg
mov
jbe
and
push
dec
xadd
cmp
fdivrs
fiaddl
push
sbb
outsl
jae
imul
daa
fs
outsl
mov
jle
dec
popa
xor
and
xor
bound
jbe
push
add
add
inc
gs
dec
mov
imul
inc
and
test
cmpsb
push
popa
insb
jne
fisubs
data16
sbb
in
mov
push
mov
adc
xchg
xor
mov
mov
xchg
inc
inc
aaa
test
sbb
push
push
mov
adc
cmc
xor
pop
or
cmp
aas
cmc
in
ja
jge
outsb
inc
aas
and
or
pop
jae
insb
aas
push
sub
arpl
mov
popa
push
cmovo
fs
inc
push
adc
pop
nop
arpl
adc
inc
push
push
inc
inc
inc
fucomip
inc
push
xor
inc
inc
add
pop
outsb
jo
inc
xlat
cs
roll
ror
mov
xchg
pop
push
flds
rcrb
dec
pop
dec
dec
sub
add
pop
add
pop
inc
mov
cld
insl
popa
js
push
jp
out
sub
mov
push
cmpsb
outsl
adc
push
inc
call
xor
ret
xor
xor
sbb
push
inc
inc
inc
arpl
pop
aad
or
xor
inc
dec
inc
imul
inc
fistps
fsubrs
pop
push
pop
push
add
popf
popa
into
popf
inc
and
mov
movb
cmp
adcl
data16
inc
cwtl
test
inc
mov
dec
or
xor
jmp
lods
shrb
sub
push
mov
fiadds
push
inc
inc
add
sarb
jge
xor
mov
xor
dec
xor
push
dec
xor
sub
dec
add
dec
call
mov
scas
out
sbb
fisubs
xor
push
add
imul
push
sbb
pop
js
inc
push
insl
std
insb
scas
mov
jb
data16
cmp
int
sbb
dec
or
ret
shlb
sbb
mov
outsb
mov
or
js
or
pop
arpl
je
lods
or
mov
out
inc
imul
jae
push
fucomi
dec
movsb
daa
insl
sbb
mov
sbb
fs
mov
outsl
adc
imul
add
push
or
or
sub
adc
mov
mov
loope
pop
push
test
dec
push
pop
xchg
dec
sub
jo
int
adc
test
iret
inc
sti
test
test
push
pop
push
ds
lods
and
push
push
dec
or
insl
das
fldt
sbb
push
mov
mov
push
test
push
insb
or
shl
cltd
dec
outsl
jmp
lahf
in
or
and
jae
sub
mov
test
fsubrs
dec
sbbb
dec
mov
outsl
or
ds
jbe
scas
mov
ficoml
jb
sub
adc
mov
push
adc
or
inc
dec
mov
test
daa
nop
dec
adc
inc
xchg
push
or
adc
lea
lahf
fwait
add
inc
or
es
add
outsb
sbb
add
sti
pop
mov
pop
push
mov
clc
mov
pop
popa
mov
dec
cs
push
incl
aad
nop
loope
or
jmp
and
inc
jb,pn
hlt
push
in
nop
insl
popa
sti
push
pop
add
cs
pop
shlb
daa
rorb
insb
imul
pop
divb
mov
add
addb
add
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
