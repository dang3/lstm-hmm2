sti
idiv
pushl
rol
push
mov
call
mov
mov
pop
ret
sub
out
mov
cmp
xor
sbb
mov
test
add
jp
je
sbb
mov
add
sbb
push
pushl
ret
add
add
add
cld
dec
es
je
and
jmp
or
je
jmp
lea
sub
ret
or
fistps
roll
add
loopne
cmp
push
movl
add
or
push
sub
pop
add
mov
idiv
mov
add
dec
jne
pushl
add
mov
pop
lea
push
lea
adcb
in
or
ret
movsb
dec
cmp
pop
add
sti
sub
push
dec
push
jb
je
arpl
imul
add
lods
lea
movb
push
clc
mov
lock
sti
lahf
out
je
push
mov
add
test
jle
add
cmpb
mov
or
push
loopne
inc
add
rcrl
adc
dec
sub
pushl
mov
adc
xchg
or
mov
test
pushf
lret
fcomip
jne
mov
addl
push
int3
xor
fs
pop
add
pop
sbb
in
and
imul
imul
inc
adc
cwtl
std
pop
inc
adc
add
nop
icebp
jmp
xor
push
jmp
ja
jecxz
sub
add
push
and
dec
and
shll
jne
add
cmp
outsl
jae
jne
cmpb
inc
ret
test
cmp
mov
sub
in
cmp
and
out
sbb
call
xchg
xor
sub
add
mov
jl
sbb
shl
xchg
je
mov
dec
jnp
add
jmp
push
jecxz
add
cmp
pop
lods
aam
lret
les
xchg
inc
popa
cmp
fcomip
insl
cmpsb
fsubs
mov
and
push
in
imul
ret
sub
mov
dec
inc
xchg
hlt
mov
push
fidivrs
xlat
add
or
in
mov
cld
xor
ret
testb
clc
mov
or
xor
sub
pop
add
loopne
into
and
stos
sub
cli
pop
push
inc
call
cld
mov
push
mov
add
push
sub
push
pop
aam
or
push
insb
in
sti
sub
fdivs
call
mov
pushl
pop
pop
push
push
mov
mov
add
prefetch
or
mov
pop
jmp
mov
cmp
addb
or
dec
inc
pop
adc
jbe
adc
out
je
or
orl
sarl
repz
or
push
dec
xchg
lock
jb
divl
in
push
pushl
push
and
push
scas
add
or
adcl
push
cmp
mov
add
xorl
mov
sub
pop
movsb
nop
push
popf
add
xor
add
add
mov
push
or
mov
fcompl
pop
adc
and
ret
or
stos
add
jns
sarb
leave
add
fs
xchg
cmpsb
aam
dec
add
jnp
adc
or
mov
push
sbb
dec
incb
cmp
cs
lret
and
add
push
or
ss
or
adc
inc
fldl
push
push
mov
or
ss
add
hlt
adc
in
pop
daa
ret
js
add
and
cltd
in
and
clc
inc
rorb
sub
mov
rorl
aaa
test
mov
adc
icebp
adc
or
add
dec
inc
pop
mov
shlb
add
push
pop
xchg
hlt
clc
pop
mov
pop
hlt
mov
xchg
mov
push
mov
test
pusha
adc
pop
and
imul
mov
hlt
hlt
jo
jg
xchg
fimuls
add
nop
mov
adc
hlt
dec
cmpl
jp
add
mov
jb
mov
or
xor
out
inc
setnp
mov
imul
mov
mov
stos
call
lds
lock
std
sarb
inc
xchg
mull
shll
mov
and
outsb
add
ret
dec
sub
aad
push
imul
mov
inc
lock
and
fstpl
lock
sub
lock
inc
pop
lea
add
rorb
inc
xlat
or
cmp
cmpsl
les
adc
or
or
jge
fnstcw
push
incb
fldcw
fildll
jb
pop
xor
hlt
mov
iret
inc
inc
sbb
inc
jge
inc
ret
xchg
sub
mov
push
mov
cmp
lock
or
and
inc
icebp
rcrb
in
lds
and
cmp
jb
stos
adc
cld
add
xchg
roll
jb
sbb
rorl
andb
add
loope
pop
call
lods
fstpt
loopne
inc
loopne
fcoms
lock
and
daa
xor
scas
or
mov
and
pop
aam
mov
test
sub
pushf
push
rcrb
dec
push
and
bound
and
shlb
and
js
pop
aas
mov
add
es
inc
cmpsb
fcom
xor
imul
xor
ror
pop
enter
cld
fbld
pop
hlt
pop
dec
dec
jo
ud0
inc
in
push
pop
mov
fadd
shrb
sub
rorb
and
jmp
imul
shr
sbb
sub
pop
jge
pop
adc
sub
and
xor
push
mov
push
call
add
fiaddl
pop
and
ret
mov
dec
out
jle
xchg
inc
cmp
xchg
xchg
xchg
push
or
lock
push
mov
pop
sbb
sub
add
or
andb
loope
clc
mov
and
dec
mov
cmp
xor
loopne
xor
cmp
xchg
test
insl
test
sbb
icebp
sub
sbb
test
lds
sbb
push
adc
push
aaa
xor
je
out
inc
aad
cmovnp
fmull
loopne
fsub
pop
je
rorb
inc
xor
add
fsubl
or
ret
xchg
popa
jmp
push
imul
push
lock
xchg
xchg
daa
cmp
loopne
mov
in
in
jmp
in
insl
cmp
add
je
inc
orl
fdivl
fdivl
xchg
adc
out
sub
pop
pop
mov
rep
or
sbb
xchg
add
add
push
add
test
push
fsubrs
push
push
mov
push
cmp
jg
int3
xchg
adc
les
push
pop
pop
cld
xchg
negb
sarl
fmuls
xchg
sbb
mov
jp
or
mov
dec
jecxz
add
dec
fsubrs
call
mov
dec
fdivr
mov
nop
and
sbb
adc
sub
inc
nop
test
lcall
dec
sahf
mov
int3
in
pop
pop
pop
add
xor
push
add
push
xor
in
fdivs
sub
dec
inc
flds
mov
cmpsb
add
push
dec
jne
jmp
imul
xchg
fcoms
cmp
ja
sbb
xor
es
push
or
add
push
sbb
xor
cmp
bound
outsb
push
push
icebp
push
mov
sub
test
jl
and
scas
sbb
cwtl
jecxz
xor
iret
or
stc
add
adc
add
xor
dec
arpl
lock
ret
fsubr
orb
xorb
aad
pop
adc
inc
and
inc
inc
enter
and
and
popa
inc
test
in
add
test
cmpl
mov
adc
sbb
xor
sbb
orb
pop
and
or
rolb
adc
adc
jne
and
ret
add
cmp
push
push
pop
or
adc
sub
xchg
push
or
test
scas
xchg
mov
in
or
cmp
test
cmp
jne
adc
xchg
dec
inc
and
arpl
inc
bound
inc
push
or
lods
insl
pop
cmp
aam
push
imul
push
pop
xchg
and
fs
inc
dec
adc
daa
cmpsl
dec
ret
push
fwait
and
or
pop
cmp
push
enter
pop
sbb
insb
cmpsl
push
lahf
test
lea
daa
mov
int
int3
adc
les
add
imul
insl
mov
mov
rclb
insb
inc
es
test
xlat
popf
sub
inc
jmp
mov
mov
out
outsb
sbb
jb
mov
ret
and
pmulhw
or
fdivrs
daa
and
push
dec
jg
mov
push
jo
adc
add
inc
mov
push
movl
add
dec
ret
sub
rorb
sub
sbb
push
jl
leave
mov
mov
adc
pusha
pop
in
ret
xchg
sti
add
mov
insb
fildl
js
out
gs
or
fldl
push
push
adcb
mov
xchg
faddl
pop
test
and
push
xor
push
inc
sbb
inc
dec
jnp
add
and
push
adc
inc
and
pusha
jne
dec
das
xor
adc
cwtl
pushf
jmp
shr
fnsave
mov
outsb
xor
adc
repz
push
enter
push
mov
jb
mov
popa
lds
xor
hlt
and
hlt
cmp
xchg
cwtl
nop
xchg
lret
pusha
mov
sub
insl
xorl
jnp
add
or
cli
cmp
pop
sbb
add
enter
pop
mov
insl
lods
jae
or
sbb
sarl
inc
xor
inc
inc
push
insl
jge
mov
or
repz
mov
push
or
or
fistpl
enter
add
and
add
adc
inc
xchg
inc
mov
cmpb
ret
popa
dec
cmp
std
cs
testb
cmp
cmp
clc
daa
adc
push
and
sbb
dec
js
xchg
adcl
ret
add
and
add
lods
out
lods
rep
mov
insb
addl
scas
cld
jle
inc
and
pop
dec
mov
push
add
sbb
hlt
fs
mov
lahf
cmp
cld
mov
dec
shll
adc
push
movsl
imul
or
add
xor
adc
mov
test
push
mov
push
adc
jno
shll
pop
fildl
int
aas
cmpsl
faddl
in
add
daa
mov
pop
inc
sbb
xchg
pusha
jo
popf
and
and
adc
pop
sub
out
adc
xchg
loopne
jbe
xor
push
dec
imul
inc
mov
das
cli
dec
subb
dec
sub
movl
sbb
inc
imul
je
cwtl
aad
add
movsl
cmpb
lock
pop
mov
orl
in
pop
pop
sub
sub
pop
enter
xchg
jae
cmpl
cltd
aad
out
enter
pop
pop
pop
out
mov
and
fbld
push
mov
sbb
adc
in
rorl
or
call
in
or
and
test
andb
sub
addr16
aad
subb
loopne
call
push
jo
adc
jo
mov
cld
jmp
add
mov
rolb
jge
cmp
jbe
fildl
add
test
int3
loopne
pusha
dec
cmpsb
add
xor
lods
cmp
hlt
imul
cwtl
lea
aaa
push
adc
adc
mov
mov
or
cmp
pushf
xchg
repz
push
adc
cmp
mov
sbb
push
ret
jno
pop
dec
xchg
lods
ret
add
adc
call
stos
scas
inc
in
add
sbb
sbb
cmp
xor
adc
daa
daa
pop
dec
fadds
test
xor
enter
int3
jb
jb
add
les
test
rol
xchg
and
or
inc
mov
imulb
bound
shrb
xor
mov
jg
stos
or
fsubl
ftst
fnstsw
test
je
fchs
adc
loop
sbb
or
and
stos
add
cmpsb
sbb
dec
test
in
mov
pop
daa
pop
or
mov
decb
lea
add
in
add
lret
test
sbb
mov
inc
adc
fidivrs
add
xor
cwtl
mov
push
push
sbb
xor
cmp
add
gs
mov
insl
test
add
add
cmp
int3
push
cmp
inc
xchg
push
repnz
jecxz
pop
test
daa
add
mov
add
clc
dec
jns,pn
jp
clc
movl
mov
jno
adc
ljmp
test
cmc
jns
fcoml
out
jl
mov
clc
das
jecxz
sub
std
add
dec
cmp
dec
mov
pop
adc
clc
sub
jo
les
clc
ds
xor
fdivs
sub
jne,pt
jno
dec
xchg
pop
push
mov
movl
add
test
in
popa
notl
les
cmc
pop
jle
sub
jnp
mov
fwait
dec
ret
imul
xchg
outsb
popl
scas
push
add
push
dec
popa
jno
pop
dec
adc
jo
jo
mov
mov
addr16
lahf
aas
jno
cmp
xor
sub
cmpl
xor
das
sub
pop
in
sarl
cmpsl
pop
inc
cmpsl
sbb
push
icebp
mov
and
inc
mov
adc
sti
or
out
push
out
cmp
sub
popf
lods
dec
xchg
icebp
add
dec
mov
lock
cmp
loope
and
push
push
inc
push
inc
lods
int3
dec
dec
loope
inc
in
cmc
pushl
andl
rcr
mov
fcoml
xor
adc
out
mov
push
cltd
sub
test
pop
and
shlb
pop
jg
sbb
inc
addr16
mov
sbb
clc
nop
nop
xor
dec
inc
xor
icebp
mov
in
mov
cmpb
jne
cmp
mov
push
or
inc
pushf
repz
and
dec
mov
jns
fldl
in
mov
int
add
insb
imul
adc
and
mov
xchg
rcr
adc
ljmp
mov
add
push
dec
mov
mov
pop
ret
scas
push
jo
adc
repnz
popa
pusha
xchg
push
cmp
scas
movsb
xchg
xchg
aam
shr
call
or
mov
pop
and
enter
xchg
and
mov
dec
movsb
loope
loopne
or
andb
fadds
loopne
jno
int3
mov
push
pop
sub
cmp
and
and
jecxz
add
test
lahf
lock
popa
cmp
add
mov
mov
cmp
aaa
sahf
and
std
cltd
add
fcmove
lea
pop
inc
repnz
add
call
push
fisubs
jno
add
nop
xor
roll
cmp
inc
mov
scas
cmovae
shl
loopne
inc
xor
in
cs
sbb
fsubl
test
sysenter
les
cmp
pop
push
push
cmp
jg
push
mov
add
fists
fisttps
popa
inc
push
lods
fdivl
push
inc
lcall
cmp
pusha
and
aam
cs
sbb
lods
movsb
sbb
mov
mov
xchg
cmp
mov
nopl
repnz
rolb
pop
add
testb
add
xor
shrb
ja
dec
add
mov
in
dec
fwait
call
sbb
mov
pusha
push
loope
dec
or
inc
inc
add
les
out
push
adc
or
jns
mov
adc
mov
adc
sbb
xlat
clc
push
imul
pop
push
repz
jmp
pop
ret
gs
ss
js
shll
or
into
fwait
mov
std
lea
sub
cld
cld
mov
dec
loopne
imul
pop
and
push
jmp
and
ficoml
adc
xor
sub
cmp
adc
and
push
xor
pop
adc
lods
dec
test
push
and
or
bound
das
jno
pusha
sbbb
out
inc
sub
pop
sub
sub
cmpsl
adc
dec
dec
xchg
lret
add
shrb
daa
cltd
cmp
pusha
jno
aaa
mov
sbb
add
shl
pusha
shl
xchg
decl
insb
movsb
xor
sbb
add
dec
test
and
and
jb
pushf
cmpsb
add
inc
enter
pop
xor
adc
cmp
add
inc
nop
and
inc
and
add
push
inc
enter
push
cs
push
xor
pop
pushf
xchg
sub
cmc
add
andl
outsb
push
inc
lahf
jo
hlt
add
sub
mov
rcll
pop
push
or
rorb
mov
xor
stc
daa
popa
lret
pop
and
jl
pop
push
mov
es
pop
or
add
loop
cld
js
add
push
int3
inc
jmp
out
loopne
mov
push
cmp
add
xchg
sub
add
jbe
mov
add
add
or
adc
xchg
and
and
adc
in
ret
fnstsw
daa
push
adc
lods
push
xchg
push
cmpsb
bound
mov
mov
imul
nop
test
xor
cli
scas
fildl
mov
fisttpll
xor
pop
jno
shlb
insb
dec
and
pop
addl
ja
clc
pop
leave
and
hlt
mov
sub
inc
add
pop
cmp
pop
xorb
jmp
sbb
add
into
sti
out
cwtl
jmp
adc
je
push
add
inc
iret
jnp
call
push
adc
daa
fnstcw
jmp
mov
pop
xchg
call
shlb
stos
adc
adc
xor
lods
adc
jne
enter
outsl
ja
mov
pop
bound
push
pop
mov
dec
xchg
jg
or
sub
inc
leave
sbbl
inc
cmp
dec
pushl
jg
mov
cmp
jg
repnz
jg
das
or
leave
push
cmp
std
addb
arpl
dec
sub
mov
and
cmp
leave
sbbl
subl
cwtl
inc
sub
mov
jbe
adc
and
add
test
incb
add
push
shl
push
xor
xor
jmp
clc
sbbl
add
nop
hlt
mov
push
adc
das
sbb
pop
and
adc
pop
wrmsr
imul
xchg
call
xchg
call
lods
stos
add
adc
lock
mov
add
dec
lret
aad
or
jo
and
clc
and
fs
jo
cmp
insl
pop
push
pop
jb
inc
fadd
cmpsb
adc
jle
fildl
sbb
mov
test
dec
add
ret
xor
sbb
fisttpl
movsl
push
sbb
aam
cld
cld
cld
sub
and
movb
lea
add
clc
in
push
leave
sbbb
jne
lock
dec
jl
or
popa
xor
fistpl
lods
pop
pop
cmp
push
mov
stos
cmp
nop
pushf
mov
in
cmpsl
and
test
in
cmp
test
mov
jl
cmp
cmp
popa
js
scas
fcom
sbb
nop
or
push
xor
sbbb
sbb
push
loopne
out
jno
mov
add
pop
mov
aad
arpl
inc
lea
clc
mov
cmp
adc
adc
or
and
out
push
add
pop
xor
sbb
xor
sub
hlt
je
sbb
or
pop
inc
or
adcb
or
call
add
mov
mov
cs
imul
mov
inc
inc
or
rolb
adc
jmp
jo
das
or
icebp
out
pushf
add
adcl
vpcmpgtb
test
popa
xor
stos
push
pushl
push
hlt
clc
add
mov
xor
add
mov
nop
dec
lock
push
call
mov
and
sub
cmpb
loopne
imul
jns
mov
mov
stos
jecxz
push
out
sub
aaa
mov
outsl
inc
sub
add
xchg
call
aad
and
push
aaa
js
sbb
dec
push
jo
mov
test
hlt
jnp
jb
or
call
pushf
inc
in
loopne
leave
leave
add
in
call
mov
or
inc
shrb
pusha
xor
add
cmp
dec
push
add
or
pop
push
js
jb
adc
pop
lock
in
and
dec
jae
in
call
in
call
cli
jbe
or
or
xchg
sbb
inc
mov
or
dec
add
push
xor
cltd
test
dec
inc
test
push
pop
popa
and
pop
enter
jmp
jbe
inc
push
shll
ret
insb
jae
inc
jb
outsb
fistps
xor
xlat
or
sub
push
jg
mov
in
and
popf
iret
jns
dec
sub
mov
mov
jb
loop
insl
jo
outsl
clc
push
bound
inc
add
xor
push
popa
loope
out
mov
aad
leave
push
xor
lea
push
add
push
add
icebp
test
xor
orl
jmp
popl
fcompl
xor
pop
pop
divb
and
or
dec
jne
sub
in
lods
repz
ret
sbb
insl
jo
mov
sub
inc
add
xchg
push
and
xor
cltd
mov
mov
mov
add
or
xor
mov
jmp
shrb
xchg
pop
hlt
pushf
or
mov
sub
mov
add
cltd
and
or
inc
adc
inc
cmp
hlt
ljmp
add
rorb
jne
ret
jne
addb
add
inc
pusha
push
sbb
jno
jo
add
rclb
loope
adc
adc
stos
fbstp
pop
push
adc
lea
aas
adc
xchg
jmp
inc
cmpb
jo
pop
jbe
std
rorb
sub
push
xchg
mov
dec
sub
mov
lds
mov
clc
or
andb
lods
mov
enter
pop
inc
and
ja
loope
or
int
cs
mov
mov
movsb
outsl
aam
int3
cli
or
ret
push
popf
jge
dec
or
pop
leave
sub
arpl
js
mov
loope
cmp
mov
sub
pop
dec
adc
sbb
fs
andl
lcall
mov
dec
loopne
push
fsubl
sbb
and
adc
lea
jae
sub
sub
and
mov
shl
jb
jl
out
xor
addb
xor
and
dec
mov
jno
and
mov
call
cmp
sbb
ret
or
test
dec
data16
and
out
lods
cwtl
mov
sbb
push
pop
push
aam
dec
enter
adc
lock
inc
sbb
add
mov
mov
icebp
nop
or
dec
ret
in
and
dec
pusha
cltd
mov
mov
jg
ds
clc
test
mov
push
sbb
sbb
imul
sbb
inc
push
enter
add
lock
adc
cli
loopne
cmp
inc
in
cmpsb
mov
mov
test
add
or
jle
sub
sub
adc
das
and
xor
imul
add
stos
fs
movsb
out
xchg
rep
cmpl
mov
test
mov
mov
sbb
adc
sub
cmpl
xchg
and
nop
add
nop
mov
add
cmp
or
int
imul
and
jle
jo
xchg
repz
sbb
add
cmp
lods
les
lea
jae
into
and
add
addl
movsl
mov
roll
inc
outsl
cld
jns
push
and
adc
imul
and
and
jns
mov
xor
clc
rorb
cltd
add
pop
mov
lock
sbb
adcl
xchg
icebp
movsb
push
leave
mov
mov
sub
or
pop
pop
fcoms
push
enter
and
pusha
inc
fmul
leave
mov
jne
push
push
addr16
scas
jp
lea
add
inc
lock
push
or
test
push
mov
clc
push
add
push
mov
pop
jl
in
push
push
lea
int3
dec
pop
test
inc
loop
jb
cmpsl
mov
xor
rep
inc
inc
sub
lods
add
hlt
mov
rcrb
pop
push
push
and
div
push
ja
outsb
in
aas
in
shlb
add
push
mov
xlat
sub
cmpsl
add
adc
cmc
rolb
add
loopne
xor
add
imul
xor
adc
pusha
push
int3
data16
stos
add
lods
jne
adc
add
out
mov
or
dec
add
push
lods
pop
jnp
cmp
xchg
push
shrb
and
in
fmuls
insl
push
sbb
inc
sbb
cli
or
add
pop
sub
inc
push
adc
bound
sarl
push
scas
cmpsb
jno
push
inc
sub
cwtl
xor
cltd
insb
ja
out
out
adc
inc
movl
iret
add
cmp
cmp
mov
push
mov
dec
or
sbb
in
sub
sub
shrl
pop
dec
or
xor
pusha
roll
pop
xchg
iret
dec
addr16
and
push
fs
dec
inc
add
jge
and
shl
fidivrs
fsubs
or
or
ret
sbbb
cmp
pop
sbbb
dec
stos
xor
outsl
in
mov
mov
sub
mov
or
ja
mov
and
dec
mov
and
xlat
dec
dec
push
xchg
sub
test
dec
add
fs
ljmp
xchg
adc
cld
mov
and
mov
lret
or
es
adc
lea
in
xor
lods
inc
sub
or
jmp
add
pop
add
pop
adc
or
gs
adc
mov
adc
inc
mov
les
or
add
xor
or
jne
popf
lret
dec
sahf
nop
inc
xor
or
sbb
sub
subb
jnp
loop
dec
popf
pop
adc
push
xchg
inc
cs
inc
xor
inc
cmp
and
lret
lock
fs
in
push
and
sub
jle
and
shll
adc
jae
add
faddl
lock
xchg
pop
fst
test
pop
mov
adc
and
mov
enter
popa
push
mov
add
loope
sub
and
dec
inc
in
loopne
pop
add
adc
sbb
rolb
fcoms
aam
add
jns
or
fsubl
adc
jo
inc
rorb
mov
xor
inc
stos
xchg
int3
enter
xchg
fsubrl
leave
cltd
jl
adc
xchg
out
call
xchg
add
int
rolb
cmc
push
xchg
and
inc
gs
inc
pop
sub
fsubr
add
sbb
xchg
xchg
outsb
and
test
xchg
add
rorl
addr16
or
xor
out
outsb
or
xlat
dec
fldcw
test
cwtl
cmpsl
ja
xor
jge
call
loopne
daa
and
push
dec
mov
xchg
add
jns
push
xor
sbb
sbb
inc
xchg
ret
cmpl
test
add
in
cltd
repz
xchg
clc
in
cmpb
es
movl
and
fsubrl
mov
test
clc
dec
pop
or
shl
push
sbb
sbb
adc
sub
add
xor
out
jle
push
addl
repz
add
sub
push
test
adc
loope
xchg
jne
and
sbb
pusha
test
popf
es
ss
jo
add
add
fadd
mov
jle
xchg
sbb
mov
in
inc
jg
in
into
pushl
mov
or
sub
push
add
or
push
push
pop
insb
pop
ret
dec
js
sub
inc
push
mov
stos
jo
or
in
push
push
aas
xchg
es
xchg
in
les
push
fwait
add
cmpsb
push
pushf
movsl
inc
add
fcompl
js
mov
sbb
adc
enter
pop
add
dec
pop
mov
jmp
insl
add
inc
shrl
adc
dec
dec
js
in
in
xchg
out
push
aam
imul
dec
fdivr
and
push
inc
adc
xor
aam
fsubr
pop
imul
jecxz
pusha
les
sbb
adc
sub
pusha
inc
mov
imul
movsb
mov
add
push
jecxz
inc
xchg
fnstenv
cmp
mov
mov
jge
sbb
or
push
movsl
shlb
or
stc
or
sbb
add
mov
bound
jbe
pop
jmp
cmp
sbb
in
rol
xchg
cmpl
rorl
popf
and
loop
sbb
pushf
pop
int3
subl
xorl
aam
lds
inc
ret
fwait
in
shl
rorb
inc
lods
dec
jl
clc
add
dec
add
add
inc
xchg
xchg
aas
in
jmp
std
fsubrl
jmp
imul
pop
bound
out
xor
adc
mov
out
int
and
fsubrl
ss
xchg
mov
ret
popf
mov
mov
nop
add
loopne
xlat
sub
dec
shlb
andb
mov
push
cwtl
movsl
addr16
shlb
je
fdivrl
sbb
sub
mov
mov
adc
loopne
mov
push
movsb
sbbl
mov
mov
in
xchg
and
js
scas
inc
movsb
inc
repnz
inc
sbb
lods
bound
shrb
andl
aaa
or
daa
or
rcll
loope
sub
mov
imul
mov
adcb
mov
dec
sarl
push
push
add
or
adc
sbb
add
loope
sbb
dec
insl
mov
adc
pop
jns
xor
pop
pop
dec
loopne
and
push
aaa
xchg
or
aad
cltd
shrb
ss
dec
loope
mov
jecxz
aam
adc
pop
aaa
dec
dec
sbb
aam
addr16
adc
lods
and
mov
or
aas
inc
insl
add
pop
add
or
jecxz
jb
lods
popf
iret
hlt
mov
adc
and
adc
lods
loopne
adc
lock
rorb
in
mov
mov
sbb
pusha
lds
aad
movsl
mov
add
push
filds
add
jmp
fnstcw
push
push
movsb
repz
enter
repz
add
andb
lods
inc
or
push
testl
push
sbbb
and
cmpsb
data16
mov
mov
push
lods
hlt
mov
in
sub
scas
sub
popf
pop
mov
add
jl
test
fadds
xor
or
addb
sub
fimull
and
cltd
or
lret
stos
dec
add
xchg
inc
sbb
nop
add
in
sbb
lds
cmp
inc
dec
sub
mul
test
jmp
out
add
xor
loope
add
jb
pop
test
inc
popf
in
dec
adc
movl
fstp
lods
adc
cmp
lret
pushf
mov
and
jb
mov
pusha
and
fisttps
das
push
dec
shl
cld
mov
or
imul
es
out
test
vmovdqa
sbb
xor
and
mov
jmp
sub
push
jns
push
or
dec
leave
lock
popf
adc
stc
pop
cmp
xchg
push
enter
lds
shl
shr
mov
data16
pop
adc
sahf
adc
call
aad
in
inc
lock
add
nop
subl
sub
sbb
movsb
pop
or
hlt
jecxz
or
push
adc
xchg
add
xchg
daa
ds
loopne
xor
adc
push
and
mov
add
or
dec
lods
push
dec
mov
lret
in
inc
xor
fbstp
add
sbb
sub
add
scas
xchg
int3
mov
daa
rcrb
inc
js
loopne
mov
sti
rcrb
addl
and
sbb
inc
test
popf
rorb
in
or
inc
sti
sbb
and
cmc
mov
adc
test
popf
add
stos
pop
inc
mov
and
mov
lcall
loope
andl
popf
mov
mov
inc
bound
clc
add
inc
inc
inc
mov
loope
cmp
mov
shrl
pop
test
push
and
imul
push
inc
or
push
cmp
shlb
xchg
rcl
sbb
dec
sub
adc
push
in
ljmp
mov
add
pop
pop
add
out
adc
pop
nop
hlt
or
add
add
add
inc
cs
scas
sbb
or
movb
movsb
test
stos
popa
xor
icebp
mov
pop
in
sbbb
rclb
cmp
push
mov
lods
pusha
mov
les
inc
in
push
or
lcall
and
rorb
and
jge
loopne
add
lea
fimuls
orb
pop
in
dec
rorl
mov
adc
dec
shrb
xchg
adc
add
add
mov
sub
lahf
test
rorl
xorl
push
sub
dec
es
loopne
cld
mov
mov
push
in
and
cs
shlb
xor
or
in
adc
xor
and
xchg
xlat
in
or
and
outsl
adc
adc
sub
and
std
lahf
adc
push
fcmovnb
add
sbb
and
sbb
push
cld
mov
sub
lock
ljmp
pop
cmpsl
push
inc
fldcw
mov
pop
and
leave
jnp
add
and
addb
enter
pop
inc
lock
sbb
add
call
cmpsb
xor
or
xchg
lock
jae
dec
sbb
inc
or
mov
add
mov
sub
in
jmp
pop
ret
jecxz
push
inc
add
mov
inc
shl
or
scas
mov
icebp
dec
push
enter
add
dec
inc
leave
and
enter
adc
in
stc
inc
push
cmp
sub
xor
maskmovq
testl
add
test
repnz
push
push
leave
adc
adc
inc
xchg
pop
adc
or
jb
xchg
xor
mov
and
pop
or
inc
int3
inc
or
adc
movsl
fsubl
mov
pop
mov
mov
inc
mov
imul
push
lods
push
xor
mov
mov
fs
inc
xchg
dec
push
add
mov
pop
mov
add
sbb
clc
inc
jae
sbb
cmp
je
ror
in
sbbl
xchg
xchg
nop
fdivs
mov
mov
inc
rcr
sbb
and
xor
add
data16
lea
rorb
push
xorl
xchg
int3
xchg
arpl
or
cs
test
xchg
sub
aaa
out
outsb
jecxz
hlt
mov
jmp
imul
loop
lock
test
mov
stos
adc
dec
dec
add
nop
adc
cld
push
cmovbe
pop
cld
inc
xor
xchg
push
stos
lret
mov
sbb
add
adc
mov
inc
mov
insb
dec
in
add
enter
into
xor
test
les
lock
ret
dec
mov
icebp
fildll
sbb
mov
repz
pusha
into
inc
test
mov
popa
xchg
jo
out
jne
pop
in
test
stos
add
pop
clc
lcall
or
add
push
stos
adc
cmp
cld
xor
movsb
sub
cwtl
add
imul
or
popf
mov
inc
inc
mov
bound
add
xor
je
addb
arpl
repz
add
cmp
ror
or
mov
sbb
and
rolb
inc
ret
pop
mov
pop
ja
ja
jl
call
imul
orb
int3
jmp
add
adc
out
dec
loope
dec
test
push
xabort
cmp
jl
pop
dec
cltd
xor
mov
dec
push
push
andl
mov
add
lods
loopne
mov
adc
inc
movsb
jg
addl
sbbl
inc
into
or
cld
adc
stos
pop
cltd
mov
jge
mov
insb
fcmovu
or
sti
add
and
and
add
push
imull
dec
enter
mov
loopne
movsb
xlat
sub
inc
bound
adcb
clc
xchg
mov
and
hlt
add
inc
push
sub
xor
cmp
cmp
inc
dec
push
cmpsb
inc
mov
dec
cmpsl
lock
add
nop
lret
or
pop
xor
shr
add
jne
lea
and
and
push
test
add
add
jno
jno
bound
sbb
mov
hlt
out
add
aam
mov
mov
xchg
mov
xchg
sahf
stos
jl
out
call
mov
xchg
fwait
xchg
or
mov
pushf
add
xchg
cmp
and
shrb
push
adc
xchg
push
faddl
jae
and
mov
inc
pop
adc
sti
push
shlb
push
int3
call
aam
or
pop
cmp
xor
cmpsb
mov
lahf
fwait
adcl
xor
xchg
enter
lods
cmp
lea
addb
insl
sub
add
or
subl
dec
inc
sti
call
add
nop
or
jo
das
test
jl
sub
push
loopne
cltd
cmp
jle
loopne
outsb
mov
dec
lods
in
aad
loopne
rorb
iret
and
enter
and
std
or
les
pop
inc
aas
mov
test
shrl
pop
and
jb
in
xchg
xor
fwait
or
and
push
mov
dec
jno
shlb
in
pusha
push
fistpl
nop
and
lock
ljmp
adc
xor
add
and
cmp
sahf
inc
lcall
push
sub
jmp
mov
and
and
or
lahf
inc
add
adc
xor
jge
fcmovnbe
stos
lcall
sbbb
inc
and
or
mov
sub
adc
push
add
ficompl
fisttps
cltd
testl
inc
sbb
testl
jnp
adcb
xchg
jo
jmp
xor
mov
popf
in
mov
or
lds
xchg
in
xchg
stos
rorb
pop
pop
adc
aas
inc
bound
rcll
inc
mov
inc
mov
clc
pusha
aam
sbb
adc
or
test
adc
clc
cld
pop
sbb
dec
sub
push
mov
add
mov
and
je
decl
test
inc
adc
pop
push
cmpb
icebp
daa
mov
mov
add
jmp
sbb
pushf
cmpsl
pop
test
dec
loopne
mov
mov
aam
pop
or
xchg
add
lahf
gs
nop
sbb
lahf
add
adc
out
loope
shrb
dec
lcall
bound
test
lret
and
lret
add
mov
test
xor
aam
mov
dec
clc
fstpt
rorl
lock
icebp
cmpb
pop
rolb
cmpsb
sarb
lock
lock
xlat
ja
add
imul
cmp
xchg
out
inc
jo
pop
hlt
adc
mov
fwait
rorb
shll
add
mov
inc
pop
ret
cmp
pop
cmp
mov
repz
pop
push
icebp
and
push
pop
ret
push
leave
imul
hlt
mov
add
shlb
sbb
and
rcl
je
cmpsb
xchg
and
or
in
or
dec
adc
dec
mov
inc
mov
popf
ret
inc
adc
or
pop
leave
movsb
sbb
and
or
cmc
xchg
mov
and
add
roll
adc
leave
push
or
add
and
insb
and
fbstp
mov
mov
mov
loop
cmc
negb
pop
shrl
outsl
test
or
add
pusha
add
add
orb
fdivrl
or
fdiv
movsb
pop
andl
add
xchg
mov
test
or
xchg
mov
sbb
inc
xchg
or
push
add
dec
and
movl
add
fcoms
leave
and
faddl
mov
clc
and
xorb
inc
push
and
mov
mov
pusha
std
xchg
subb
and
sbbl
cs
adc
inc
rcr
add
gs
rorl
loopne
inc
add
cmp
adc
stos
imul
add
out
roll
mov
add
cmp
jg
sbb
dec
orb
sub
mov
xchg
insl
mov
rolb
add
mov
push
mov
lea
or
mul
add
jne
shlb
test
outsb
mov
cld
mov
aam
sti
cld
jns
dec
push
xor
cltd
repz
add
iret
into
rcrb
shl
insb
jmp
ficoml
shrb
outsb
fmull
gs
add
je
loopne
fmull
mov
add
mov
clts
je
in
sub
lcall
ftst
mov
pop
fldt
sub
xor
add
cmpsb
les
std
sub
sbb
movsl
add
pop
fsubrs
add
push
and
mull
enter
push
lock
lock
push
push
adc
rcrb
mov
mov
fmull
lods
or
je
sub
add
xchg
stc
adc
or
mov
dec
xor
mov
into
les
test
mov
push
mov
aaa
aas
daa
popa
and
xor
mov
mov
jae
shrl
push
sub
xor
mov
nop
cmpsb
sub
dec
test
test
lods
les
fldl
orb
pop
mov
inc
dec
arpl
les
push
xlat
call
lods
test
ret
push
mov
mov
and
sbb
sub
jmp
or
mov
and
xchg
jno
xchg
pop
push
pop
sub
mov
mov
das
xchg
enter
pop
pusha
inc
or
mov
mov
and
adc
xchg
popa
lret
shlb
leave
call
mov
and
rclb
xor
xor
ret
add
push
mov
or
sbbl
andb
xor
test
xchg
mov
mov
int
bound
insb
test
xchg
rolb
movsl
stos
inc
pop
je
or
add
add
sbb
or
mov
push
mov
adc
add
dec
xchg
stos
dec
xlat
adc
or
lahf
xchg
aaa
pusha
add
or
push
add
stos
mov
xor
test
in
mov
mov
and
in
dec
lds
roll
int3
adc
dec
in
sub
loope
push
push
add
pushf
inc
call
sub
stos
fs
test
mov
fildl
xchg
nop
fwait
shll
push
test
adc
add
pop
inc
or
stc
dec
or
add
test
ss
add
pushaw
adc
and
pop
xchg
push
adc
fmul
and
adc
loope
aad
and
push
fwait
in
in
xchg
add
xorb
xor
sti
mov
aas
adc
sub
test
mov
pop
pop
or
enter
pop
leave
push
dec
push
adc
scas
dec
popa
add
mov
xchg
push
subl
imul
loopne
sbb
jbe
and
je
int
rorb
movsb
test
das
push
xor
loope
push
test
sbb
les
in
sbb
inc
popf
mov
sbb
cmp
jae
xchg
add
or
cmp
cwtl
int
cld
aad
cmp
gs
pop
daa
test
mov
jnp
add
mov
push
or
sub
pop
dec
jns
inc
lods
dec
xchg
xchg
mov
and
dec
push
mov
jne
arpl
xor
dec
test
into
sbb
xor
add
add
sub
add
and
inc
and
xor
push
sub
dec
daa
leave
pop
xchg
add
sbb
jp
inc
ret
add
add
iret
add
sbb
int3
add
hlt
aam
push
int3
fwait
loopne
push
stos
bound
fcoml
add
pusha
stos
adc
xchg
push
adc
das
pop
les
xchg
or
out
shrb
orl
add
pusha
inc
sub
and
or
shlb
rcrb
sarb
jns
mov
xchg
add
cmp
push
ret
add
ud1
cltd
or
add
dec
or
mov
xchg
sub
pop
imul
and
aas
or
dec
cmp
xor
sarb
jo
sbb
add
or
out
sbb
pop
imul
cld
hlt
and
aam
inc
xchg
cld
add
push
lea
jno
test
xchg
mov
or
adc
test
cmp
lds
xor
icebp
and
sub
mov
in
push
push
out
int
and
rorb
dec
inc
stos
in
add
sbb
dec
push
and
jnp
inc
adc
or
inc
sub
pop
xchg
bound
je
cld
push
dec
shlb
xor
aas
xchg
ljmp
sbb
xchg
leave
add
cmp
sub
push
inc
hlt
lods
add
xor
or
push
ret
insb
xchg
push
daa
pushf
mov
fmull
sahf
test
jo
rcr
add
bound
test
ljmp
and
mov
lds
add
pop
insb
std
jns
roll
movsl
ret
push
dec
lcall
cltd
fsub
add
fiaddl
push
popf
movl
imul
enter
xor
les
mov
movsl
xor
mov
lds
pop
mov
out
faddl
loopne
in
fdivl
mov
aaa
mov
or
mov
icebp
fdivl
pop
enter
jnp
mov
bound
and
in
mov
sbb
ja
mov
pop
or
hlt
xchg
test
lock
andl
sub
insl
and
loopne
scas
or
aaa
lock
imul
and
jb
sub
mov
xchg
xor
idiv
es
repnz
dec
inc
repz
jge
inc
lds
cld
fninit
push
sub
push
jge
push
sub
or
out
mov
scas
or
mov
dec
push
and
jmp
mov
mov
mov
test
negb
add
add
lods
inc
or
inc
add
pop
and
xchg
and
cmp
jo
lock
push
out
mov
movl
inc
push
mov
or
es
mov
pop
not
mov
add
or
bswap
add
or
mov
mov
ret
arpl
fdivl
je
adc
je
cmp
jne
jl
movl
xchg
cltd
jb
xor
push
lock
int3
jns
aas
dec
data16
cmp
fcmovbe
jbe
enter
push
adc
add
push
mov
inc
ret
stos
add
mov
shrl
xchg
int
aaa
add
aas
adc
push
adc
add
ret
and
lock
pushf
sbb
repnz
sbb
push
pop
xchg
mov
pop
push
je
jo
pop
inc
in
outsl
adc
cli
or
sub
lret
push
loop
push
or
mov
repz
je
shr
sbb
lods
and
sub
xchg
lcall
je
inc
mov
pop
xor
push
inc
in
sbb
pop
mov
push
mov
pop
std
in
std
adcl
inc
jno
insb
leave
or
xchg
sbb
mov
mov
pop
out
jne
fwait
mov
push
and
mov
mov
cwtl
pop
and
cmp
out
push
testb
push
jp
push
add
xchg
pop
dec
jnp
je
lods
add
or
es
das
adc
pop
loope
in
mov
outsl
push
out
or
adc
mov
sarb
sbb
add
adc
clc
sub
push
mov
out
push
push
dec
lcall
add
lea
fldl
fcompl
aam
add
push
inc
fsubrp
and
ja
jnp
in
add
cmp
fdivl
lea
mov
fstpl
fcmovbe
cltd
and
fdivs
frstor
dec
pop
pop
sbb
sbb
mov
sbb
das
in
clc
fldl
or
movsb
jns
rol
fstpl
push
sbb
push
mov
ret
nopl
mov
jle
sub
pushl
add
call
je
dec
jne
xor
jmp
or
stos
stos
pop
in
add
or
ret
cmpsl
pop
outsb
add
addr16
lock
ja
push
fcmovne
or
push
xor
test
add
sarb
cld
push
addr16
mov
jp
lea
lcall
jo
inc
and
sarb
incb
in
jmp
xor
jl
or
jmp
lahf
add
add
xlat
mov
sti
push
jne
data16
inc
add
shlb
jmp
push
add
cwtl
jmp
sbb
jle
jae
adc
neg
sbb
andl
push
lock
sub
xor
mov
add
scas
loopne
clc
call
inc
push
or
xadd
call
sub
adc
loopne
adcl
out
ret
ss
xor
push
call
push
push
inc
lods
inc
and
mov
push
sbb
adc
jno
mov
pop
push
dec
mov
sbb
push
pop
cmpsb
mov
add
sbb
add
xchg
mov
sbb
xchg
movl
or
xchg
push
aaa
clc
out
jl
sub
push
mov
or
dec
ja
sub
cmp
adc
jne
arpl
js
pop
or
aas
push
pop
mov
cmpl
add
add
xchg
and
add
pop
jns
pop
aas
aam
sub
aam
pop
add
jp
lret
mov
fchs
inc
xchg
lret
out
mov
mov
and
adc
hlt
mov
mov
push
and
repnz
mov
push
xlat
ficomps
out
or
jle
icebp
movl
xchg
es
cld
imulb
push
sbb
in
mov
mov
push
xor
jmp
aas
or
fmuls
je
popa
fistpll
inc
or
jl
xor
cmp
dec
and
mov
xor
nop
in
jmp
sbb
leave
cmp
push
lahf
std
decl
sarl
mov
jl
mov
cmp
jle
sbb
stc
push
pop
ret
sub
push
cmp
cmp
mov
aaa
fucomi
cltd
xor
sub
inc
cltd
idiv
or
fdiv
loopne
pop
gs
push
sub
jg
je
je
lret
movl
fdivr
adc
js
add
ror
rcll
scas
lods
arpl
orb
dec
mov
jg
jo
idivb
divps
mov
cmp
cmp
xor
add
out
add
incl
out
push
sahf
add
je
or
mov
push
test
sub
sarl
jle
push
roll
stc
jle
sub
es
sub
ret
in
sti
ret
mov
idivb
adc
or
mov
pop
adc
ret
push
test
inc
aam
or
mov
cmp
sbb
cmp
sbb
mov
movsbl
mov
dec
adc
adc
cld
sub
mov
dec
aad
cmpsl
lods
and
es
add
xor
sub
sub
mov
xor
fld
lock
jmp
mov
sub
adc
movl
and
jl
sbb
fisttpl
aad
xchg
dec
and
push
and
sbb
clc
in
xlat
jne
sub
sub
jl
jbe
jmp
sub
add
xlat
mov
mov
push
jg,pn
or
jge
mov
mov
stc
mov
xchg
scas
and
jne
aam
mov
pop
shlb
nop
sarb
pop
push
cmp
jl
orl
xchg
stc
hlt
adc
mov
push
scas
cmp
pop
mov
sub
inc
pop
push
mov
or
jmp
mov
stos
loop
into
repz
lock
das
psubsb
inc
sbb
mov
test
sub
add
jne
xchg
ja
jge
pop
cld
sbb
or
sbb
jg
push
push
mov
dec
aas
add
push
loope
dec
add
cmp
ret
in
insl
sub
mov
or
jmp
xor
cld
push
xor
and
clc
add
xchg
cmp
pop
idiv
inc
fs
fcomps
sbb
pop
xchg
mov
je
xchg
cs
aad
cwtl
cmp
jb
or
pop
sub
mov
mov
test
or
jnp
push
inc
movsl
popf
cmpb
cmpsl
je
sahf
inc
dec
xor
pop
shrl
xchg
add
dec
stos
jmp
lea
or
cmpsl
xlat
cli
and
push
push
data16
cmp
js
add
ss
daa
sub
cmp
sub
and
dec
push
cwtl
push
call
jno
cmp
inc
dec
mov
add
cld
test
add
je
cmp
mov
mov
xchg
cmp
rol
lds
subl
mov
adc
loopne
jge
sbb
frstor
loopne
fadds
std
loopne
ret
loopne
aad
test
push
pop
mov
daa
into
cwtl
xor
add
std
daa
imul
sbb
je
sbb
mov
fnstcw
out
imul
xchg
dec
dec
shlb
dec
fstpl
xchg
ret
orb
data16
fs
outsb
or
mov
xor
rcrl
movzbw
arpl
jl
mov
sbb
inc
je
push
jb
out
mov
dec
push
push
xchg
aaa
dec
test
fnstsw
aas
mov
push
jo
push
movb
roll
addr16
sahf
loopne
xor
fs
mov
sbb
push
cmp
push
adc
cmp
and
push
dec
rclb
dec
or
dec
dec
pop
lods
insl
dec
add
push
adc
or
push
push
push
hlt
lea
out
daa
ret
pop
out
pop
sbb
mov
sbb
mov
aam
jbe
stc
dec
adc
test
jp
data16
fisubl
cmp
je
cmp
jne
cmp
jne
test
adc
jp
inc
xor
jne
dec
fstl
or
cmp
push
sbb
push
mov
test
and
ret
adc
js
or
dec
push
add
rclb
inc
mov
fcmovu
popf
fisubl
xor
ds
and
cmp
js
aas
cmp
xor
jle
push
push
sti
pop
mov
mov
pop
ss
jmp
addb
inc
cmp
nop
aas
js
adc
pushf
xor
enter
push
mov
pop
int3
inc
jmp
jl
push
push
movsb
push
ljmp
sbb
mov
mov
je
inc
ficomps
mulb
lock
jne
mov
in
push
je
mov
mov
adc
add
loopne
or
sub
out
insb
xchg
cltd
push
mull
dec
add
fnsave
pop
loopne
dec
xor
add
les
adc
hlt
test
cmp
jle
push
sbb
mov
ucomiss
adc
or
pop
xor
insl
mov
ss
sbb
cmpsb
lods
ljmp
es
or
std
shll
cmp
dec
addr16
jne
inc
mov
dec
decl
xchg
cwtl
jecxz
add
enter
xchg
and
std
mov
and
js
jmp
jmp
out
in
pop
fildll
jmp
pop
adc
decb
rcll
fidivl
test
sbb
iret
add
sub
xchg
icebp
cmp
repnz
mov
xor
adc
aad
sbb
cwtl
inc
xchg
or
int
repz
xor
shlb
mov
sub
das
int
movsl
rolb
cmc
cmp
stos
je
dec
mov
mov
jmp
mov
sbb
jg
je
adc
inc
dec
jmp
push
dec
sub
adc
sub
outsl
sbb
aas
add
mov
push
push
mov
push
or
lock
xor
gs
sub
lcall
ret
lahf
movsl
mov
dec
adc
aam
stc
loop
loopne
rorb
and
inc
mov
adc
mov
sub
mov
iret
jno
dec
jno
in
mov
mov
xor
pushf
pop
push
cmpsb
clc
jle
xchg
jne
jo
fsubs
push
mov
jl
xchg
mov
add
enter
sub
push
outsb
mov
test
loop
push
aad
push
sbb
jmp
sub
es
dec
testb
adc
pop
mov
xor
adc
insb
pop
sub
cmp
je
lea
xchg
decl
xchg
mov
add
sub
out
add
out
lea
ret
inc
add
sbb
shrl
shr
mov
fstps
jb
call
mov
and
fisubrs
add
cmp
rep
pop
xor
xchg
inc
cs
sbb
inc
js
push
jp
push
jl
or
shr
and
out
movsl
scas
and
call
sbb
mov
ss
testb
inc
stc
jle
cld
mov
push
pop
repz
inc
testb
adc
cmp
std
xchg
out
inc
shll
or
sub
rclb
cmpsl
imul
add
xor
hlt
rorb
jg
jge
add
inc
xchg
pop
push
fs
mov
mov
mov
sbb
and
push
sbb
adc
sbb
xor
push
hlt
and
clc
addl
js
rolb
mov
sub
add
sub
pusha
rorb
int
imul
dec
movsl
jns
add
inc
xchg
out
xor
add
mov
cmp
pop
cmpsl
push
sbb
pop
sub
add
movl
incb
inc
pop
sub
adc
jl
jl
mov
mov
je
mov
cmp
add
pop
repnz
jmp
mov
push
cld
cmp
fucomi
pusha
mov
cmc
sub
push
cmp
add
jg
pop
mov
cmp
jge
xor
cmp
jecxz
mov
sbb
lret
clc
jle
add
and
dec
sub
pop
push
sub
or
aaa
dec
fs
sub
lea
call
adc
pop
or
pop
mov
inc
cmp
mov
mov
lea
and
rolb
dec
pop
icebp
xor
cmp
iret
add
jge
push
push
sbb
dec
cmp
adc
jg
inc
lock
cmp
leave
jge
sub
push
shlb
jne
add
fs
jg
cmp
mov
lods
aam
jno
inc
cld
cmp
mov
movb
repz
test
inc
pop
out
incl
xlat
lret
xor
shlb
jmp
in
mov
jl
in
mov
sbb
or
and
jge
add
cld
repz
xor
dec
imul
adc
mov
rolb
dec
jns
sub
fcomps
push
jl
addr16
or
dec
cmp
push
in
jns
int
test
insb
insb
jle
out
xchg
or
mov
out
jl
jmp
sub
mov
xchg
cmp
jl,pt
push
outsb
rolb
clc
mov
jmp
ljmp
pop
pop
inc
dec
cmpsb
or
insl
out
std
jge
cmp
adc
aam
frstor
stos
jb
sub
sub
sub
pop
inc
mov
pop
cs
jne
mov
int3
and
xor
insb
cmpl
aad
push
dec
mov
inc
mov
push
clc
mov
mov
push
clc
mov
push
shlb
sbb
cli
sbb
out
fmul
cmp
clc
mov
jns
jmp
and
jno
rorl
push
push
push
cmpsb
sbb
jbe
pop
mov
out
jle
and
adc
bound
scas
rcll
dec
lea
and
pop
popl
mov
lea
add
ljmp
sub
and
and
add
mov
xchg
into
pop
xorb
sbbb
add
and
outsb
je
xor
push
ret
adc
jb
sub
outsb
or
inc
cmp
sbbl
and
inc
jb
adc
sub
adc
push
add
inc
xchg
push
dec
enter
or
add
out
inc
stos
sbb
inc
cs
or
add
push
jle
idivl
push
mov
adc
lock
fsubs
pop
scas
out
adc
push
sbb
xchg
dec
or
dec
mov
andb
repnz
mov
inc
je
pop
rorl
push
push
shll
push
push
shrb
fs
mov
mov
lea
rorb
add
mov
bound
ss
add
jge
jle
in
dec
sbb
add
clc
pop
jmp
inc
push
jne
push
roll
push
js
add
aas
xor
add
push
add
fsubp
dec
mov
inc
and
or
inc
push
repnz
fstpl
rcrl
test
or
icebp
int3
mov
jl
je
shll
or
jb
aam
loopne
or
adc
pop
sub
js
and
fwait
xor
ret
shlb
cmpsb
movsb
inc
inc
jo
cs
in
and
push
jge
aam
push
xchg
incb
outsl
cmpb
sbb
hlt
jge
dec
call
sbb
imulb
jmp
adc
and
sub
adc
loop
lahf
xchg
push
add
ds
aaa
dec
clc
jmp
ds
jge
lea
mov
mov
popf
push
xchg
add
in
push
dec
out
xchg
inc
jmp
dec
movsl
push
into
adc
mov
rcrb
fsubl
push
mov
pop
test
lods
mov
movsl
inc
sbbl
cmp
jmp
or
jmp
cmp
add
push
jecxz
push
jp
rolb
fs
jne
int3
push
shl
push
jnp
loop
mov
insl
out
xchg
into
push
dec
or
adc
or
add
js
imul
xor
xchg
cmpsl
in
and
mov
es
add
add
adc
iret
push
ds
lods
jbe
stos
push
mov
mov
mov
jo
sbb
nop
ds
fcmovnu
loope
sbb
in
or
sub
push
int3
ljmp
mov
push
mov
dec
call
shll
test
push
mov
cmpsb
rcl
ret
stc
mov
shlb
mull
je
push
rorb
mov
fwait
nop
xor
mov
mov
testl
sbbb
dec
ss
sbb
push
adc
sbb
dec
push
push
test
lahf
in
and
fdivrs
sbb
xchg
add
adcb
je
je
and
rcrl
cmp
iret
push
or
adc
je
into
mov
mov
push
jge
je
xor
cmp
je
shrl
sub
add
pop
jne
std
testl
lea
mov
pop
sbb
add
push
divl
push
cli
inc
addb
adc
mov
sub
add
adc
jmp
mov
cmpsl
sbb
pop
jl
mulb
enter
sub
rol
or
jl
sub
dec
and
dec
movl
loop
or
push
jo
add
lock
cwtl
dec
adc
test
les
push
iret
icebp
lods
loopne
aam
stc
negb
push
mov
and
mov
push
xor
xchg
cmp
add
je
lcall
mov
mov
loope
adc
push
mov
ret
xchg
sub
imul
pop
sahf
cmp
xchg
popa
xchg
push
popa
mov
xor
dec
lods
jl
fstpl
in
add
insl
loopne
mov
add
adc
std
pop
sbbb
je
dec
jne
insb
je
repnz
inc
push
add
add
imul
dec
je
cmp
pop
clc
dec
jne
mov
inc
outsl
loopne
mov
add
xor
or
adc
xlat
adc
lea
ljmp
jo
pusha
ret
loopne
js
pusha
inc
aad
lods
repz
lahf
fcomps
or
shlb
cmp
dec
addr16
add
push
divb
add
dec
cmp
mov
push
cmpsl
lret
movsb
push
pop
push
sbb
test
shl
inc
push
daa
lods
mov
mov
movsl
push
jle
rcr
pop
pop
bound
xchg
push
jmp
stos
push
push
sarl
jle
push
push
lods
cmp
je
pop
lcall
cmp
aaa
xchg
push
push
dec
cwtl
xor
xor
sub
arpl
push
into
mov
push
mov
push
inc
sahf
mov
rcll
and
aad
aam
fs
mov
dec
mov
aas
add
jo
mov
push
aas
or
add
jno
inc
lret
cmpsl
jb
sub
or
xor
or
jge
rclb
adc
insb
xchg
inc
sub
push
popa
nop
push
mov
aas
and
adc
in
push
and
mov
add
pusha
ret
sub
pop
adc
or
popl
adc
lock
pop
push
add
pop
adcb
cmp
pushw
cmpsb
jo
ljmp
sbb
or
add
mov
aas
fs
je
pop
xor
jle
push
sbb
decl
jmp
push
bound
jmp
fnstsw
add
or
test
fstl
lock
js
sub
stos
ret
bound
aaa
ret
sbb
not
and
push
pushf
add
push
push
push
mov
pop
pop
cmp
pmaxsw
sbb
or
push
push
in
faddl
dec
push
add
add
daa
xchg
pop
push
push
jg
jnp
add
xchg
ret
adc
ret
mov
ja
fldl
aaa
scas
sbb
inc
cs
out
loopne
and
add
ds
xchg
dec
add
adc
les
push
pop
mov
psubq
icebp
ds
jo
pop
add
popa
xchg
push
push
or
aaa
or
test
lahf
loop
arpl
sbb
cs
push
push
inc
push
js
jb
cwtl
inc
or
and
testb
adc
pop
mov
es
inc
call
test
pusha
sbb
jmp
mov
add
enter
mov
mov
xor
dec
adc
pushf
mov
jo
push
xchg
outsb
cmpl
dec
adc
sub
inc
fisubl
push
xchg
push
inc
movsl
mov
lea
add
lcall
mov
test
fisubl
mov
dec
sub
mov
adc
jp
add
push
test
daa
cmp
ret
sub
loop
loopne
pop
rcrl
rcll
or
mov
jo
pcmpgtw
nop
push
or
push
test
jb
jle
test
add
add
es
add
or
push
mov
fsubrl
cs
xor
push
adc
test
dec
js
dec
inc
mov
arpl
xor
fisubl
sub
adc
and
pushf
add
xor
mov
xchg
push
and
shl
mov
aas
cli
adc
mov
or
push
push
imul
mov
jbe
push
dec
add
dec
mov
adc
fsubs
nop
das
mov
cwtl
cmp
mov
inc
fcmovnb
inc
add
mov
dec
or
jecxz
fcompl
dec
sbb
lds
stos
daa
jo
dec
jne
clc
popf
dec
push
pop
pop
mov
mov
outsl
ret
jne
cmp
sahf
cmp
cmp
sub
push
adc
push
add
add
inc
mov
mov
or
jnp
adc
pop
mov
shll
lods
fnstcw
cli
mov
mov
push
lods
and
or
jne
or
inc
mov
enter
pop
or
decl
or
test
mov
jne
inc
pop
in
sub
ds
dec
sbb
lea
cmp
jb
add
shlb
mov
mov
cmp
int
sbb
int
mov
test
jbe
add
mov
jne
lea
mov
push
cmpsb
adc
jmp
int
jae
clc
cmp
mov
dec
push
fwait
pop
add
pop
loope
andl
lea
xor
ret
mov
push
mov
push
mov
clc
cmpsl
xor
adc
inc
scas
sbb
imul
inc
clc
jb
lea
loop
sbb
sub
sub
cltd
xor
xor
ret
pushf
xor
mov
decl
or
mov
pop
pop
cmp
mov
fbstp
inc
int3
push
or
rolb
adc
es
mov
jl,pn
or
xchg
mov
bound
repnz
add
or
mov
andw
imul
xchg
jg
push
js
fldl
jecxz
mov
mov
int
leave
add
push
add
sbbl
inc
or
push
or
or
cwtl
push
or
xchg
loop
data16
adc
pop
push
xor
pop
rorl
or
rclb
cmpsb
mov
sub
add
jbe
inc
or
subl
jbe
or
mov
push
jbe
outsb
mov
cmp
inc
dec
sub
or
sub
inc
js
dec
pop
jp
sbb
test
adc
jp
mov
jle
push
popa
faddl
cwtl
push
fwait
pop
pop
and
adc
jmp
mov
pop
inc
and
fsts
dec
loopne
push
bound
or
fcmovnbe
cli
sahf
pop
inc
dec
stos
and
add
fcoml
sub
jne
jne
ds
cmp
jle
lret
dec
jns
fucomip
cmpsb
mov
aaa
out
pop
cmp
je
aaa
in
bound
jp
in
lock
xchg
pop
dec
data16
ret
dec
adc
fildl
inc
call
ss
fidivrl
xchg
jecxz
fwait
adc
popl
fistpl
dec
and
vpsraw
fsub
mov
cld
je
cmp
add
lock
aam
dec
adc
das
jle
neg
mov
js
fbstp
loope
cwtl
adc
aam
mov
push
mov
mov
pop
pushl
jg
call
aas
mov
lock
lret
cmpsb
xchg
mov
pusha
and
pop
push
shrb
mov
call
scas
aas
adc
pop
pop
imul
xor
cmp
jne
clc
sub
add
push
incl
ret
sbb
fwait
movb
xor
mov
fisubrl
push
pop
lea
jge
sub
lea
stos
push
les
lods
fs
rcrl
push
nop
insl
fbstp
iret
pop
insl
push
mov
mov
or
pop
pop
rcll
add
jmp
pop
sub
adc
movb
jnp
sbb
mov
aam
xchg
iret
pop
push
loope
es
sub
aam
adc
loope
pop
outsb
cwtl
jecxz
xlat
jge
fisttpl
test
rcpps
mov
pop
pop
pusha
mov
ret
sub
sub
cmp
push
jle
add
std
push
inc
cmpsl
mov
pushf
xchg
push
push
lahf
ss
clc
cli
and
repnz
push
dec
cs
or
jbe
std
add
xchg
jge
inc
adc
push
add
push
push
cmp
mov
add
ljmp
loopne
ret
insl
inc
push
iret
sub
shrl
or
outsl
movsb
dec
pop
adc
mov
jne
or
sarb
xor
jae
int
add
repz
sub
or
je
and
insb
jge
fidivrl
add
cmp
jge
js
xor
pop
fiaddl
jmp
push
pop
pop
adc
or
sub
or
pop
loop
or
inc
ljmp
pop
daa
cmpsb
loope
jg
or
adc
ds
ret
add
or
jb
int3
or
and
daa
enter
add
and
into
xorb
fs
mov
or
pushf
nop
push
scas
aas
add
or
jg
jp
or
das
push
jecxz
idiv
hlt
mov
test
js
rcr
push
push
std
sub
cld
repnz
pop
dec
inc
addr16
push
push
or
dec
add
sarb
dec
push
call
or
mov
cmp
add
add
and
stos
xor
add
push
add
and
push
dec
aam
pop
das
cmp
push
pop
clc
es
fiadds
loopne
sahf
push
call
adc
push
nop
sbb
mov
cmp
iret
push
leave
ja
and
cmp
jns
ror
push
inc
je
add
in
add
out
dec
orl
cmp
fimuls
fcomps
scas
aas
insb
push
dec
push
dec
lods
mov
cmpl
push
popf
mov
or
jle
test
nop
sbbl
xchg
mov
lods
xor
clc
adc
push
aas
inc
xchg
xor
xor
dec
sahf
add
orb
sbb
sub
sbb
js
in
clc
popa
inc
xorl
scas
push
xor
xchg
pop
sub
dec
push
mov
sti
or
js
inc
jmp
jne
idivl
jmp
sbb
mov
or
push
loop
mov
in
add
add
or
push
sbb
push
in
sbb
mov
cwtl
mov
push
mov
mov
and
int
xlat
add
adc
mov
pusha
movsb
inc
pop
inc
push
xchg
xorb
mov
cmp
inc
ficomps
pop
jbe
sub
lock
add
xor
lods
sbb
mov
out
jle
jbe
xor
xor
mov
add
and
inc
jle
xor
push
in
mov
fiadds
inc
or
out
enter
adc
movsl
in
jecxz
xchg
push
pop
xor
pop
push
inc
add
adc
or
filds
test
dec
lods
idivb
push
push
sub
jne
xor
cltd
xor
pop
idiv
adc
dec
mov
push
push
js
cmc
sub
je
push
test
sbb
lea
and
add
cmp
inc
jmp
lea
push
push
cs
ret
arpl
fists
dec
add
cmp
and
jmp
pop
nop
add
jb
adc
add
mov
loopne
cmp
push
adc
push
test
and
add
aas
sub
insb
xor
adcl
pop
movsb
add
ss
dec
sbb
dec
add
and
test
xchg
sbb
cmp
push
pop
dec
jae
and
lods
bound
aas
and
mov
rolb
fstpl
enter
lds
xlat
xorl
addl
mov
xchg
cmp
mov
inc
jb
shlb
sub
xchg
rolb
and
add
dec
pushf
orb
je
rcrl
test
mov
in
and
js
fmull
inc
popf
loope
loop
test
push
add
push
pop
xchg
adc
push
aaa
mov
jl
push
jle
mov
fildl
push
cmp
sbb
push
xorb
cwtl
rolb
dec
mov
jp
push
cmpsl
sbb
sbb
mov
jle
pop
enter
push
adc
js
insb
dec
sub
orb
pop
cmp
popa
jbe
cmpsb
and
mov
mov
xchg
mov
cmp
cmp
cmpsl
or
in
mov
mov
popf
rorb
and
push
inc
adc
xor
mov
mov
sbb
dec
gs
dec
mov
pop
pop
dec
call
aam
int
or
and
or
pop
or
add
outsb
dec
mov
decl
imul
push
mov
fstpt
jno
mov
push
xchg
icebp
pushl
push
mov
mov
mov
cmp
jne
add
xchg
push
filds
pop
push
in
in
addr16
push
inc
add
fdivrl
fnsave
test
jmp
jne
cmc
mov
imul
xchg
daa
aas
in
sahf
cmp
sub
push
pop
call
addl
pop
clc
add
and
adc
cmpsl
pop
dec
push
jne
or
add
enter
enter
loopne
mov
test
push
or
enter
adc
add
mov
or
jle
out
out
sub
cmp
lods
orb
fstps
xlat
xchg
lods
push
dec
push
cmp
rorl
push
lds
inc
sar
popf
lahf
push
leave
xchg
add
mov
xor
push
jecxz
je
push
cwtl
fiaddl
inc
out
pusha
insb
cmp
cmp
push
xchg
xor
push
xorb
lods
je
pusha
sbb
or
inc
imul
pop
push
cmp
fcmovnbe
or
adc
iret
nop
mov
sbb
cmp
sti
cmp
icebp
pop
jmp
ret
cmc
mov
test
icebp
push
mov
ja
and
sub
xor
icebp
jo
rorb
push
add
mov
in
pop
and
imul
jg
push
mov
push
fisubrs
ret
clc
add
cmp
in
es
cmp
push
das
xchg
mov
xchg
jne
sub
ret
pop
or
lock
adc
hlt
lahf
xchg
pop
pop
mov
push
push
clc
add
dec
mov
ret
pop
xchg
ja
cmpsb
pop
aam
push
ret
pop
fwait
cmp
or
or
or
mov
leave
cmp
sete
inc
adc
and
stc
xchg
dec
jp
xor
add
outsl
inc
pop
push
lods
stos
fwait
lcall
test
test
xchg
cmp
xor
jle
ret
iret
jno
test
ret
ds
dec
pushf
jo
mov
leave
sub
lods
dec
xchg
pusha
jo
into
movl
sbb
loope
sub
inc
cltd
pop
xor
cmpsl
pop
pushf
insl
add
sbb
jg
pop
or
jge
push
idivb
shlb
sbb
mov
mov
inc
mov
lahf
push
xor
adc
fisttps
lea
inc
dec
lods
jno
hlt
and
adc
push
jecxz
push
loopne
mov
and
and
xor
xchg
adc
loopne
dec
jmp
inc
inc
pop
pop
inc
adc
call
push
scas
sub
out
push
add
orl
mov
js
or
je
mov
mov
es
or
je
jne
iret
out
cli
sub
je
xor
jbe
sbb
sub
ja
roll
cmp
inc
mov
mov
fcmove
sar
adc
pop
xchg
push
mov
or
push
ja
cmp
push
jge
cmp
xchg
xor
jne
dec
cmpsb
push
lcall
push
jg
fs
and
lods
in
insb
push
and
jle
or
sub
xor
cltd
faddp
leave
aaa
ret
outsl
mov
jg
jl
cmp
loop
jno
push
and
xor
andnps
or
loopne
in
jg
sbb
dec
or
push
mov
cmc
out
push
adc
icebp
ret
jp
adc
mov
jmp
jg
sbb
and
int3
dec
aaa
popa
sbbb
gs
jmp
bound
push
dec
push
out
or
jnp
xor
test
je
fimull
cli
add
sbb
js
mov
sbb
mov
jnp
cmp
jg
or
out
out
jnp
push
nop
xchg
jne
mov
cmpsl
sbb
je
lds
cmp
sub
notb
push
xlat
repz
add
cmp
xor
outsl
lahf
or
pushf
js
cmp
loope
pop
and
fneni(8087
mov
or
jp
lods
cmp
jg
mov
push
pop
xchg
mov
jp
add
or
jmp
push
push
out
sub
jle
pop
data16
adc
addr16
outsb
loopne
je
sub
divb
lock
adc
outsb
popa
inc
push
inc
dec
inc
pop
lock
addb
add
pop
pop
shrb
sub
stc
rorb
dec
cmp
mov
jmp
sbb
es
mov
or
dec
xor
push
push
mov
adc
jns
pop
or
cmp
push
inc
adc
jmp
cmp
push
push
xchg
lea
rorb
jle
pop
sahf
test
sbb
jbe
in
inc
add
mov
add
sbbl
dec
adc
xchg
cmp
cwtl
insl
lea
test
iret
push
test
loope
mov
sbb
enter
repnz
adc
fldcw
sub
push
adc
mov
int
rcrb
jno
lahf
jnp
xchg
incl
sbb
clc
pop
mov
je
test
movsl
mov
pop
mov
iret
dec
sub
pop
pop
mov
fs
cs
movsb
push
jl
xor
push
rcrb
jo
cmp
jecxz
lcall
mov
add
call
dec
js
xchg
pop
loope
jno
ffreep
fwait
jo
ror
mov
or
xor
out
jo
inc
ficoml
mov
mov
add
fisttps
aam
add
adc
or
sahf
push
sbb
adc
gs
scas
xor
fstps
mov
daa
outsl
andl
push
xor
loop
sub
pop
mov
jl
andb
sub
cmp
out
orb
int3
and
push
mov
je
push
xor
jne
js
fwait
mov
fdivp
mov
xchg
sub
pop
ret
mov
mov
pop
push
rorl
nop
xchg
sub
jecxz
mov
stos
jo
ret
xor
push
jae
in
mov
rorl
sub
pop
fildl
out
scas
jl
mov
daa
daa
and
cmp
or
and
loopne
out
test
je
ret
pop
shrb
and
pusha
dec
and
pop
mov
dec
iret
push
jmp
add
movsb
mov
insl
psrad
mov
add
movl
sbb
mov
push
lods
adc
cmp
cmp
sub
and
inc
lcall
push
push
bound
pusha
mov
lcall
add
test
aas
push
dec
sbb
push
jne
dec
ret
int3
jns
sbb
and
pop
call
or
and
or
ss
cmp
test
cmp
adc
xor
mov
roll
scas
stos
jmp
and
or
lret
in
push
mov
test
push
lea
add
lea
lods
pop
fstpt
adc
adc
cmp
or
mov
mov
enter
inc
sub
enter
and
push
push
jmp
cmp
xchg
cld
add
mov
jl
push
and
sbb
dec
push
pop
fs
or
or
loope
xchg
lea
rcrl
inc
addr16
cmp
push
lret
sub
push
mov
cld
mov
icebp
adc
adc
pop
inc
cltd
bound
out
xchg
xchg
inc
ret
xchg
mov
fmuls
ss
push
add
and
xor
or
stc
fists
jl
es
adc
and
mov
cmp
out
sarl
fmuls
icebp
push
pop
push
xor
popa
pusha
fs
adc
inc
push
js
or
pop
jl
adc
les
push
cmp
xor
lea
jne
dec
fimuls
jmp
inc
jo
je
push
pop
jmp
ret
scas
xchg
and
cld
and
mov
mov
xchg
std
pop
aam
xor
imul
cmp
xchg
push
push
ficoml
pop
push
ret
push
xor
adc
je
sub
out
test
sub
je
test
and
mov
push
or
icebp
sub
mov
mov
ret
inc
xor
loop
popa
or
push
inc
mov
arpl
pushf
fadds
mov
int3
and
nop
or
push
add
add
mov
inc
ds
mov
ret
jge
or
ja
adc
mov
and
testb
pushf
fldcw
or
add
mov
jg
fstpt
sti
jne
add
sbb
xor
push
sbb
mov
outsb
adc
xchg
add
rclb
sbb
push
xor
outsb
je
iret
xor
cmp
jl
mov
data16
jnp
jg
lods
jge
inc
xor
inc
inc
dec
push
adc
mov
ja
mov
push
jg
nop
and
push
push
inc
dec
fldenv
lods
roll
or
mov
push
jecxz
adc
add
shrb
push
inc
xchg
in
popf
outsl
nop
jp
xchg
xchg
in
pop
xor
inc
lods
push
pop
outsb
xchg
mov
les
add
cmp
cmp
sbb
js
xor
repz
cmp
mov
mov
add
test
les
dec
adc
insb
adc
sub
push
in
cmp
jo
loope
stc
sbb
xchg
pop
xchg
imul
xchg
pop
add
inc
mov
xchg
add
or
fs
arpl
fidivrs
xchg
mov
xchg
pushf
notl
mov
mov
scas
xchg
test
lea
in
cs
jmp
sbb
leave
mov
jl
dec
addl
jl
out
nop
lods
lret
xchg
imul
rcll
pop
fidivrs
out
lahf
mov
jge
push
and
lock
data16
stc
sarl
sbb
push
adc
sub
inc
inc
mov
daa
push
movsl
push
sbb
inc
jle
adc
iret
mov
dec
add
and
add
nop
dec
push
push
xchg
insb
je
dec
in
int
push
xor
inc
ss
mov
jge
xchg
or
subb
enter
mov
andb
sbb
xchg
jae
cwtl
shrl
insl
adc
pop
nop
sbb
jbe
and
jb
pushf
mov
movsb
test
cmp
jb
mov
sahf
out
fdivl
incl
mov
test
out
xchg
cmpsb
mov
cld
repz
repz
mov
repz
popf
mov
fldln2
add
les
push
pop
lahf
jne
mov
lea
mov
cwtl
sbb
pop
pop
sbb
js
pop
rcrb
xchg
shl
push
add
adc
and
jnp
dec
cmp
test
das
ret
mov
sub
or
in
popf
popa
stc
sahf
xchg
jp
dec
mov
mov
out
push
push
push
cmp
jne
xlat
mov
sbb
add
sahf
sbb
mov
jnp
push
push
loop
fsubrs
and
cs
dec
sti
inc
jl
daa
add
adc
and
jbe
je
es
sub
sub
cmpsl
pop
clc
adc
dec
inc
or
loop
pop
ja
mov
fadds
pop
inc
movsb
or
add
mov
loopne
jo
add
cmp
sbb
xor
and
in
add
xchg
sub
cmpsl
loope
nop
ds
loope
or
sbb
xchg
stc
pushf
jl
add
cwtl
cld
pop
subb
setne
dec
and
jp
shll
xor
loopne
mov
inc
cmp
mov
loope
aaa
sbb
popf
jecxz
push
mov
jns
js
test
imul
inc
lods
lds
mov
push
fldenv
add
cmp
pop
cwtl
repz
loopne
jle
jl
movl
add
jmp
xor
jmp
iret
sarl
add
sbb
int3
repz
adc
je
xlat
movl
les
push
lea
cs
jmp
iret
adc
lods
add
enter
add
sbb
and
pop
mov
or
test
dec
pop
mov
mov
ljmp
jl
sbb
jg
mov
and
cwtl
adc
pop
lret
pop
push
les
adc
scas
add
jmp
enter
aad
sub
out
repz
repnz
and
add
inc
and
icebp
sub
dec
adc
mov
or
push
lea
int
lods
jecxz
sbb
add
jle
push
pop
sbb
sarb
int
lods
sbb
cmp
cmp
dec
mov
or
xor
movsb
or
sti
mov
outsb
jl
push
or
sarl
ret
lcall
push
add
or
lods
jbe
push
in
les
in
adc
call
leave
add
mov
add
push
mov
shlb
ret
jo
in
nop
or
leave
sub
divl
enter
cmp
das
jmp
dec
inc
xchg
les
out
xchg
hlt
loop
cwtl
insb
push
add
out
push
les
je
out
xchg
xchg
mov
or
fadd
rcrl
ljmp
xchg
in
xor
or
add
xchg
js
push
test
adc
fidivrs
jg
push
adc
out
lds
popf
std
dec
test
sarl
mov
push
and
inc
iret
sbb
lret
push
cmp
jmp
pop
repz
or
enter
xchg
fstp
fisubrl
fsubrl
sbb
jnp
add
dec
fxch
fmul
sub
into
sbb
mov
sbb
cld
clc
dec
iret
fnsave
mov
shl
sbb
push
adc
mov
ret
dec
pop
push
daa
pop
lods
mov
loop
add
out
cmp
adc
xor
push
jl
out
add
push
test
push
js
fmull
push
js
pop
push
gs
adc
call
dec
imul
inc
vsqrtss
insl
and
push
pusha
mov
add
cmp
jge
scas
sub
adc
cmp
or
xchg
mov
adcb
mov
sbb
xor
xor
add
inc
sub
test
pop
jno
inc
mov
push
mov
ret
or
jmp
rcrl
or
stos
or
mov
insb
push
mov
je
repnz
add
cmp
sub
mov
loopne
cwtl
popa
leave
dec
cltd
cmpsl
popl
bnd
mov
dec
fdivs
lods
andb
sar
jb
lea
lea
cwtl
dec
shll
xchg
stos
add
push
sti
bound
push
sbb
cmp
fdivrl
lret
test
dec
jg
or
and
dec
sti
leave
xor
dec
inc
pusha
dec
xor
push
pop
xchg
arpl
mov
add
or
cli
scas
and
sub
cltd
dec
mov
pop
mov
dec
mov
sbb
jle
cmp
inc
mov
sbb
sub
mov
shrb
sbb
sbb
adcb
and
scas
test
js
fistpll
sahf
dec
jo
mov
movsl
std
mov
add
lods
and
notb
pop
adc
jecxz
mov
jo
push
daa
dec
aam
jl
or
xchg
lock
mov
mov
stos
xor
fldcw
idivb
mov
mov
fcompl
xorb
sbbb
imul
add
add
or
adc
sub
push
dec
inc
call
fs
jp
fidivl
xlat
gs
push
adc
sbb
xchg
cmc
dec
out
fstpt
int
arpl
scas
sub
scas
loopne
jne
xchg
lea
lds
rolb
enter
pop
jl
mov
mov
push
mov
movsl
addr16
push
push
xchg
push
sbb
sub
xor
adc
mov
int3
add
mov
and
test
loope
in
adcl
je
sbb
pop
push
and
jo
int3
je
push
stc
cmp
push
jl
xchg
adc
enter
add
and
bound
je
push
je
mov
test
inc
mov
addb
mov
mov
ret
push
mov
dec
je
xchg
jne
jl
add
pop
fistpl
xor
jmp
cmp
jne
outsb
adc
ret
push
and
out
inc
inc
cmp
inc
fs
push
push
sbb
jns
pusha
or
je
rorb
add
jne
adc
cld
mov
and
lods
mov
dec
sbb
mov
imul
dec
jge
imul
pop
mov
jge
into
adc
or
add
lods
aam
mov
iret
adc
sbb
lods
sub
and
or
push
mov
push
and
lods
dec
xchg
or
xor
cmp
sub
or
sub
clc
push
fwait
cli
aam
pop
insb
ss
inc
jne
je
adc
adc
mov
andl
cmp
fstpl
dec
push
cmp
das
xchg
mov
fisttps
push
push
pop
and
jmp
loop
push
push
cmp
repz
inc
push
dec
dec
inc
fidivl
push
ret
sbb
jns
push
xor
add
sbb
cmp
or
and
dec
pop
pushf
mov
call
shufps
ret
call
pop
stc
cltd
push
mov
push
movb
rorb
test
and
pop
adc
lret
fcomps
cmc
or
mov
hlt
cmp
adcl
add
popa
and
add
jb
cmp
jle
jle
movsl
fldt
in
clc
mov
rorb
repnz
arpl
or
lahf
fwait
sbb
in
fildll
pushf
int3
or
dec
jg
mov
xor
pop
lea
into
xchg
xlat
lahf
pushf
cld
rcrb
lret
push
js
ret
repnz
scas
push
loop
add
push
and
enter
cmp
mov
shl
dec
xchg
cmp
je
mov
xchg
sbb
int3
inc
test
pushf
sbb
je
mov
and
or
xchg
push
sbb
xchg
mov
mov
jns
add
imul
inc
outsb
inc
outsb
outsb
leave
sbbb
outsb
or
scas
dec
and
cli
cmp
or
lret
or
sbb
dec
stc
add
leave
pop
pop
dec
xor
into
push
push
sbb
mov
into
push
jecxz
pop
rorb
cld
inc
or
pop
lea
or
testb
dec
or
pop
leave
inc
lods
lods
dec
add
or
lahf
inc
sbb
push
push
xchg
int3
in
ficompl
pop
ret
stos
xchg
inc
jne
fadd
mov
mov
push
cmp
push
jo
negb
xor
or
add
inc
adc
xlat
push
pop
mov
cmp
inc
dec
fidivrs
mov
push
push
lcall
sbb
pusha
mov
add
and
xor
push
call
jmp
add
arpl
mov
jbe
mov
clc
mov
jmp
shrb
cld
dec
and
xchg
neg
xor
and
push
push
call
jo
jmp
lds
pop
andnps
aas
push
jmp
aaa
pop
push
xchg
fcoms
push
xor
js
pop
add
push
je
js
incl
jmp
or
jnp
inc
xchg
es
pop
inc
bound
addl
fists
dec
sub
jl
je
dec
sub
sub
xchg
sub
push
lods
push
push
push
xchg
lea
pop
jg
sub
icebp
sub
mov
or
clc
mov
sub
and
imul
inc
jmp
orb
jbe
sub
xor
test
ret
movsl
sbb
push
fcom
cmp
test
sahf
loope
add
sub
inc
adc
and
and
push
mov
cmp
and
push
ret
cmpsb
je
add
cmp
aam
xor
pop
jmp
push
jecxz
jnp
jmp
push
jnp
xchg
cli
cmpsl
cmc
pop
ja
inc
cmp
or
adc
pusha
xor
inc
lods
inc
orl
mov
mov
mov
out
sarl
mov
shr
add
pop
mov
imul
and
pop
xlat
loop
and
dec
cltd
xor
inc
ret
xchg
shr
or
cmp
ds
outsb
xor
idiv
jmp
ja
data16
mov
inc
or
shlb
addr16
inc
sub
adc
mov
or
dec
mov
and
dec
aas
mov
mov
mov
pushf
cmp
sub
xor
in
lret
stc
sub
and
jmp
leave
and
ja
sub
test
lds
pop
ret
repnz
xor
inc
mov
nop
jg
in
jb
pushf
cwtl
lret
and
jle
mov
jno
sub
inc
je
sub
icebp
movsl
sbb
ja
int3
xor
mov
mov
xor
push
mov
or
push
mov
adc
sbb
mov
cmp
fisubrl
or
jo
adc
test
sbb
dec
les
es
xchg
dec
lret
or
cmp
pop
and
test
inc
pop
dec
mov
push
sarl
mov
and
add
inc
sbb
pop
stos
dec
or
ret
xor
dec
divl
dec
jle
push
sbb
mov
inc
scas
test
data16
popa
pop
enter
fimuls
outsl
jne
jno
push
loop
adc
push
aas
adc
mov
or
inc
jl
in
mov
sub
pop
lahf
fidivrl
mov
movsb
addr16
in
cmp
loope
mov
lods
movsb
sbb
xor
sbb
push
pop
add
and
and
cmpl
mov
loop
pop
test
xor
pop
test
pop
nop
add
xor
fcmovu
add
add
add
add
pusha
add
cmpsb
test
je
pop
enter
dec
sbb
and
xchg
inc
test
push
outsl
icebp
iret
inc
sbb
jp
pop
dec
sar
pop
dec
inc
xchg
cmp
js,pn
test
mov
sub
ds
jmp
pop
test
stos
mov
inc
or
push
or
mov
add
pop
outsl
pop
les
ss
outsl
adc
inc
frstor
scas
sbbl
xchg
mov
inc
pop
adc
pusha
sbb
lret
dec
and
pop
sub
or
bndldx
scas
rclb
int
hlt
outsl
jbe
mov
inc
je
mov
pop
lods
sbb
push
jno
jno
loopne
xor
xorb
and
push
push
arpl
clc
adc
arpl
repnz
jg
repz
pop
test
and
push
addr16
jge
fdivrs
fstl
pop
mov
mov
cmp
jg
jp
or
or
push
aas
dec
nop
xor
inc
lcall
sbb
cltd
mov
inc
sbb
sbb
sub
push
lea
xchg
push
pop
mov
cmpsl
popa
leave
pop
dec
dec
and
pop
loopne
or
add
pop
add
push
mov
pushf
decl
enter
push
mov
pusha
test
sub
xor
jb
test
or
inc
ds
or
ficomps
cmp
cmp
aas
jno
sahf
out
sbb
xchg
push
fildl
mov
mov
lahf
scas
add
mov
mov
inc
inc
jb
popf
mov
push
dec
adc
ret
pop
inc
scas
push
pop
ret
pusha
out
imul
lret
pusha
dec
popa
dec
je
nop
adc
repz
inc
inc
push
push
data16
ret
mov
nop
add
jg
jnp
and
dec
idivb
rol
fmulp
cmp
adc
pop
mov
fwait
cwtl
test
cmp
add
xchg
lods
jo
sub
lea
lea
mov
pusha
addl
lcall
test
mov
jnp
repz
sub
lods
jmp
sub
adc
dec
icebp
push
dec
inc
enter
fidivs
int3
sub
add
sahf
ret
int
pop
and
jns
mov
push
test
pop
lock
dec
pop
xchg
or
mov
pop
test
or
push
add
mov
jecxz
mov
pop
or
pop
mov
test
push
push
mov
xchg
testl
mov
xchg
inc
or
fs
ret
leave
sub
adc
int3
out
in
push
mov
cmp
loop
dec
lea
int
mov
fpatan
jg
or
mov
or
or
fistpll
sub
sbb
and
adc
imul
insl
pop
and
mov
js
dec
jl
aam
adc
lea
push
nop
push
push
movsl
mov
and
xchg
sub
adc
sbb
rclb
inc
inc
cmp
jns
stc
jp
cs
xor
cmp
jne
int
cmp
les
test
ja
add
push
jbe
movsb
pushf
adc
in
and
fists
ja
jmp
into
mov
mov
jmp
sub
jmp
add
adc
dec
jmp
add
or
outsl
dec
add
jmp
je
xchg
dec
push
repnz
rclb
ficompl
pusha
push
sub
jle
aam
mov
push
add
sahf
push
cmpsb
mov
pop
pop
sbb
pop
lea
push
frstor
lea
lds
insb
pmuludq
mov
sahf
out
add
pushf
cmpsb
mov
orl
pop
loop
inc
pop
and
popf
iret
repz
dec
mov
mov
mov
ds
rcrl
pop
mov
lahf
pop
and
rcrl
or
xorl
dec
std
das
cmp
xor
push
push
mov
adcb
fsubs
sub
xchg
leave
repz
push
and
subb
cmp
mov
add
je
mov
cmpl
xlat
push
loop
push
addl
inc
mov
adc
xor
xchg
roll
or
or
fs
adc
in
add
inc
shrb
push
cmpl
decl
and
sub
inc
adc
jmp
stc
lcall
inc
out
and
cmp
dec
add
inc
add
movsb
or
inc
push
inc
fistpl
dec
add
sbb
xchg
or
adc
pusha
mov
les
and
cs
sbb
add
or
sbbb
fs
enter
cwtl
jbe
add
lock
lods
inc
sub
outsb
xchg
mov
lret
push
es
movl
mov
or
push
movsb
add
adc
rcrb
jno
add
arpl
ret
je
xchg
sub
push
call
cmp
push
dec
in
imul
sbb
mov
cmp
rorl
or
pop
push
fs
mov
stc
lea
add
lcall
or
lea
xchg
push
inc
push
mov
test
nop
call
sub
mov
sbb
cmp
cmp
mov
and
inc
push
dec
xchg
stos
xchg
sub
sbb
xor
js
jo
enter
xchg
or
xchg
push
adcb
or
cld
iret
adc
add
push
je
adc
push
ret
add
dec
shrb
sub
pop
push
push
add
add
mov
iret
fidivrs
mov
pop
adc
or
push
lea
pushf
pop
inc
fldl
mov
fmull
sub
sub
lret
jnp
dec
pop
inc
shlb
or
subb
in
push
push
fnstenv
sbb
pop
add
push
jmp
cmp
sti
mov
push
js
push
addr16
in
mov
cmp
or
push
pop
sbbl
xor
cmp
bnd
pop
or
mov
cmp
mov
cmp
mov
lock
int
lret
lea
add
lock
mov
jbe
pop
xchg
sub
add
ret
dec
js
imul
lock
dec
mov
popl
push
or
xchg
push
frstor
insl
inc
xchg
por
add
push
push
dec
test
loopne
jae
jne
mov
into
bound
mov
jmp
adc
test
and
mov
test
int
mov
push
jo
push
jnp
xor
inc
cmp
mov
out
push
sbb
xchg
jbe
inc
jl
dec
or
sbb
push
sbb
mov
test
lods
ss
push
or
arpl
in
imul
leave
into
jnp
mov
out
stc
bswap
cwtl
mov
inc
adc
dec
fsubp
test
mov
mov
cmp
push
cmp
int3
inc
inc
cs
cmp
out
or
subl
inc
sub
jo
xor
or
mov
pop
mov
fstpl
mov
call
dec
mov
add
xor
pusha
loope
movsb
fs
dec
aam
mov
add
dec
mov
pop
aas
xor
xor
adc
adc
stc
mov
decl
xchg
pop
cmpsb
int
adcl
jns
xchg
push
stos
push
int3
and
push
jecxz
cmp
mov
dec
and
inc
mov
push
pusha
fdivrs
push
outsb
xor
loope
xor
push
lods
es
and
pop
push
xchg
inc
sbb
pop
add
xor
rcl
movsb
insb
sub
shrl
ret
out
xchg
cmp
popa
or
aam
fimuls
imul
dec
sbbb
push
cmp
xor
imul
cmpsb
fcmovb
jno
jns
mov
mov
push
int
nop
out
inc
add
push
leave
xor
leave
mov
leave
lock
xor
in
pusha
lret
adc
rcrl
push
mov
or
lock
push
mov
sbb
inc
inc
xchg
sbb
cmp
mov
cwtl
insl
xchg
in
rcrl
pushf
sbb
scas
popf
sarb
adc
push
enter
icebp
fsts
mov
sahf
test
imul
fists
lds
mov
inc
jg
push
addb
insl
fcompl
cmc
mov
or
add
imulb
das
nop
lea
daa
sub
sub
xchg
inc
add
cmpsl
loope
enter
mov
push
fstpl
rolb
sub
jno
pop
in
lcall
sbbb
push
nop
sbb
shrl
or
adc
and
loopne
cmp
mov
into
xor
or
pop
shlb
orl
mov
push
xchg
and
mov
xor
or
mov
cmp
adc
imul
jle
inc
cmp
sbb
push
add
adc
jo
push
stc
push
ficoml
and
xor
cmp
sub
adc
pop
inc
rcl
push
push
mov
scas
fcoml
aad
push
add
adc
aam
pushf
xchg
je
mov
bswap
add
mov
cltd
negb
pop
xchg
cmpsl
out
andb
pop
mov
jecxz
jns
lret
insl
pop
xor
mov
jo
adc
mov
stos
push
cwtl
sbb
jb
mov
sub
mov
sbb
into
into
into
mov
dec
sub
jne
inc
fists
fisttpll
dec
sub
bound
ds
jmp
outsl
and
pop
lret
xchg
sub
and
lcall
add
mov
pop
xor
shrl
add
jbe
mov
jno
in
jne
xchg
icebp
shll
mov
test
mov
sbb
cmp
int
xor
mov
add
jne
testb
or
lahf
or
and
push
pop
push
ja
pop
pop
mov
ljmp
orb
xor
and
mov
push
and
and
sbb
or
and
add
mov
outsl
pop
adc
aaa
mov
imul
jo
cmp
add
jg
fwait
jle
push
sbb
fistl
pop
jne
test
jo
test
outsl
push
sbb
cld
add
adc
push
push
gs
inc
inc
js
dec
das
rcrb
or
push
pop
push
inc
es
repz
pop
pop
pop
adc
or
call
dec
je
sbb
cmpb
pop
add
push
lea
push
pop
mov
rolb
or
push
adc
add
pop
mov
lea
fimull
xor
testb
pushf
lahf
xor
xchg
ret
or
out
sbb
push
aas
dec
adc
imul
pop
sbb
popa
push
lock
dec
clc
mov
shrb
scas
jne
mov
jmp
add
mov
pushf
and
mov
xor
je
loopne
push
add
sub
fnstsw
push
mov
push
wrmsr
and
cwtl
xor
add
cmp
loope
xchg
xor
adc
mov
fldcw
xor
test
rorl
dec
sbb
push
xor
sahf
adc
jmp
fnsave
daa
mov
fdivrp
int
hlt
or
pop
push
push
push
adc
andl
shrb
push
pop
mov
push
dec
pop
mov
into
or
mov
push
stos
pusha
mov
andb
pop
add
test
pop
push
scas
cltd
fsub
add
mull
jmp
mov
pusha
add
mov
mov
sbb
push
add
add
mov
xor
das
push
daa
sbb
out
lods
push
push
pop
ss
xchg
push
add
sub
xchg
adc
rcrb
xor
sub
push
adc
adc
imul
and
sbb
dec
dec
fwait
test
int
or
xor
and
fildll
push
test
and
fmuls
xor
in
pushf
dec
xor
aas
xchg
call
and
push
jnp
jae
pop
in
inc
aas
jg
pusha
loopne
gs
aas
test
enter
jecxz
mull
fildll
stos
push
movsb
fildl
stos
arpl
les
nop
mov
repz
addr16
or
or
in
push
mov
fwait
rorl
out
iret
adc
adc
push
decl
xchg
repnz
push
cmp
add
movb
icebp
ret
mov
pop
add
jne
loopne
loopne
mov
sbb
arpl
stos
add
in
jmp
jbe
or
add
ret
fstpt
jbe
jb
int3
insb
bswap
jl
int3
popf
push
cltd
test
popf
lahf
into
sub
or
xchg
sbb
cwtl
mov
xlat
or
adc
push
inc
rorl
xchg
add
loopne
adc
subb
add
pop
arpl
cld
push
xor
xchg
inc
add
into
xor
loope
add
dec
mov
mov
inc
das
mov
stos
add
rclb
out
jle
inc
jo
adc
insb
call
test
repz
mov
in
hlt
inc
shll
inc
or
or
xor
movsl
push
xchg
lret
adc
mov
or
and
mov
lea
inc
xchg
rcrb
sbb
dec
push
jecxz
or
repnz
add
sbb
out
push
xor
push
cmpl
loope
inc
inc
loopne
xor
or
daa
loopne
add
mov
clc
mov
ret
jne
and
test
test
insb
out
push
adc
lret
stos
mov
push
jmp
lcall
add
add
mov
insl
xchg
dec
xchg
insb
in
mov
push
sub
shll
sub
or
dec
or
and
out
and
sub
jae
or
in
inc
sub
cmp
add
or
insl
fldenv
jmp
jmp
add
and
js
or
fistpl
sbb
nop
sub
dec
sbb
push
and
mov
inc
pop
je
insb
outsb
mov
arpl
or
adc
clc
mov
lret
dec
add
adc
add
sub
arpl
cmp
mov
in
les
and
rcll
and
xor
inc
and
fsubs
lods
xor
push
xchg
arpl
push
add
push
push
stos
dec
add
mov
leave
mov
dec
jmp
fistps
fisttps
fcmovbe
sbb
push
lret
adc
mov
js
out
lock
addl
push
sbb
mov
dec
shll
dec
dec
dec
push
sbb
hlt
or
mov
dec
imul
cli
leave
lahf
push
push
pop
call
push
sbb
adc
leave
inc
dec
loopne
jecxz
add
rcrl
push
clc
mov
mov
sbb
or
inc
add
fadds
sub
jge
and
rclb
and
mov
xchg
dec
dec
jae
lds
push
inc
inc
in
mov
lock
inc
inc
repz
adc
dec
fsubs
push
outsl
add
xor
push
imul
mov
movzbl
clc
sub
insb
add
popa
das
cmp
loope
adc
cmp
and
loope
xorl
and
jecxz
aam
cmp
jo
sub
jl
or
in
and
stc
cmp
roll
imul
sub
out
xchg
cmc
and
iret
and
add
test
mov
pop
pop
shlb
xchg
push
and
jns
out
inc
push
data16
cmp
cltd
fists
adc
xor
mov
popf
das
sti
or
cmc
or
dec
dec
cs
lahf
js
sahf
or
pusha
mov
add
add
and
call
xor
cltd
lods
cmp
dec
cmp
faddl
or
xor
inc
mov
mov
ds
pop
enter
rclb
mov
xor
or
add
mov
in
in
out
and
push
lock
pop
leave
mov
and
sub
mov
mov
push
pusha
lret
lock
cmpsb
nop
lahf
sbbl
or
sahf
pop
xchg
shlb
jo
jbe
mov
mov
add
shll
mov
dec
mov
outsl
add
or
mov
loopne
xor
sbb
mov
or
dec
xchg
cmp
imul
push
aas
and
or
hlt
push
xchg
and
shrb
push
mov
inc
cmp
jbe
cmp
je
ss
adc
sub
test
lods
idiv
push
push
pop
leave
inc
imul
je
sub
mov
lock
dec
ret
cmp
jp
in
cmp
adc
mov
inc
sbb
or
mov
lcall
mov
jnp
add
iret
inc
or
add
inc
push
inc
inc
add
cmp
dec
adc
arpl
jg
add
mov
das
or
fmulp
push
push
adc
add
cwtl
fs
lods
and
push
lods
popf
lock
fisubrl
cmpl
xchg
adc
fisubs
clc
push
adcb
xor
or
lods
adc
in
jne
xor
inc
int3
sahf
sarl
jo
je
outsb
jge
push
pop
sbbl
insb
into
mov
pop
push
and
out
in
inc
xchg
push
out
push
jle
leave
je
adc
aaa
lea
fists
adc
shrl
adc
adc
inc
movb
int3
into
mov
mov
roll
call
fdivs
rcr
push
in
rcrb
and
dec
ja
sub
adc
inc
sub
jmp
je
sub
push
fs
shlb
add
push
mov
xchg
and
rcrl
dec
add
and
mov
push
push
hlt
dec
scas
dec
push
sbb
xor
test
xchg
fs
and
sbb
jmp
sub
sub
push
jbe
inc
ds
push
push
jo
addb
push
insl
ljmp
add
and
jp
adc
adc
sti
lea
je
or
xchg
sbb
or
push
push
sbb
and
adc
sbb
es
push
test
clc
in
das
or
je
aaa
or
add
insb
dec
imul
push
aaa
inc
xor
sbb
inc
scas
icebp
out
int3
jns
and
and
xor
xchg
adc
sbb
add
or
or
sub
movsb
mov
xor
pop
pop
pop
fldt
jge
or
adc
add
cli
mov
movsl
lahf
bound
fildl
out
cmpsb
pop
icebp
daa
and
jle
ret
mov
loop
push
dec
or
dec
lcall
lods
shlb
pop
rorb
inc
into
jg
iret
jne
mov
mov
push
add
outsl
loop
add
dec
movl
ror
repnz
cmp
cmp
sar
add
std
push
or
and
mov
adc
push
pop
in
aad
loopne
jne
sbb
pop
inc
movsb
mov
adc
inc
push
inc
mov
add
mov
mov
sbb
cmp
pushf
movsl
inc
add
adc
adc
jge
ret
or
add
jnp
shlb
je
or
jns
lock
or
sbb
xchg
inc
jg
and
nop
inc
inc
cmpl
test
sbb
xchg
mov
jle
adc
or
pop
pop
jbe
je
sbb
push
fs
test
mov
mov
or
icebp
inc
subl
dec
dec
repnz
pause
hlt
mov
jns
movsb
push
and
lahf
mov
testl
notb
ret
xor
rorl
fdivl
mov
inc
cmp
mov
cmp
aas
dec
inc
add
sarb
dec
pop
fidivs
sub
cmp
adc
push
or
add
lds
mov
dec
adc
movb
jmp
orb
pop
loope
imulb
push
xchg
das
jecxz
lods
jo
test
add
dec
adc
ds
rclb
inc
ds
lods
repnz
mov
rcl
pusha
into
cmp
popa
pop
fisttps
cmp
add
test
pop
mov
jno
jb
mov
movsb
enter
dec
xchg
bound
scas
call
cs
adc
fwait
dec
movb
mov
lds
add
lret
mov
orb
add
nop
imul
sbb
rcrb
xchg
xchg
sti
pop
movl
xchg
mov
adc
daa
add
or
daa
xor
xor
push
jmp
add
push
mov
popa
lahf
xchg
dec
add
rcr
movsb
jmp
add
inc
in
sbb
add
pushf
nop
or
jmp
adcl
ret
pop
in
add
and
inc
insl
popa
lock
je
scas
or
dec
push
test
inc
add
jmp
sbbl
mov
push
cs
mov
loope
mov
insl
lock
addl
jg
les
es
aad
jg
adc
add
andb
cs
lock
push
pop
cmp
and
push
jae
pop
lret
orl
jae
cmpsl
inc
filds
dec
and
cmpb
pushw
pop
mov
jnp
inc
inc
xor
lea
xlat
add
pushf
inc
enter
int3
les
xchg
pushf
mov
pushf
lahf
mov
icebp
or
dec
aas
xchg
les
pop
inc
adc
loopne
add
rcll
enter
lods
mov
addl
out
in
xor
and
enter
sub
negl
inc
pusha
movsb
jg
adcb
lahf
mov
lcall
jg
repz
dec
sarb
xor
jge
dec
filds
sub
lahf
push
pop
push
dec
imul
mov
mov
cli
pop
pop
adcb
movl
and
or
pop
mov
fistl
and
or
push
fsubrl
pop
mov
repz
add
mov
jmp
filds
xor
int
test
fs
xor
aaa
dec
mov
roll
ret
out
cmp
jmp
or
mov
insl
dec
lea
and
cmp
jl
jle
push
dec
sbb
call
pop
xor
xchg
int
push
or
aas
movsb
jge
dec
inc
inc
cmpsb
add
xchg
and
push
and
or
leave
aad
sbb
lods
pop
push
cmp
pusha
or
cmova
sti
jl
push
faddl
cmp
sbbb
fxch
xor
adc
mov
call
fdivs
dec
push
cmpsb
or
arpl
neg
sbb
xor
and
out
lods
mov
sub
loop
aaa
mov
inc
cmp
jl
add
pop
cld
xchg
mov
mov
sbb
cli
test
sub
adc
aaa
jne
lcall
pop
jns
popa
stc
insb
pop
mov
outsl
loop
adc
add
jo
dec
jl
mov
sbb
push
mov
cmpb
xor
push
cmp
sub
dec
loope
fbld
out
mov
mov
sbb
xchg
sti
dec
es
cmp
push
and
notb
xchg
mov
fs
mov
sti
xor
stos
lcall
dec
movsl
pusha
fs
cmpsl
adc
add
iret
xor
js
jl
xor
dec
push
jmp
nop
pop
pushf
je
and
cmp
test
sahf
xchg
dec
movsl
enter
enter
aam
fsub
inc
sti
mov
adc
add
xchg
dec
movsl
in
lock
clc
xchg
mov
push
or
jns
xor
or
daa
mov
push
dec
adc
add
add
cmpsb
mov
sahf
mov
adc
cwtl
sub
and
cwtl
pop
pop
mov
push
push
decl
shlb
in
add
push
jg
mov
xor
aas
or
sub
xor
pushf
ret
sub
mov
ret
mov
call
and
sub
mov
mov
movsl
iret
cmpsl
and
js
xchg
add
lea
adc
fucom
adc
shlb
sub
adc
adc
or
jne
loop
dec
push
stos
lea
fcoml
and
cwtl
or
jo
dec
pop
xchg
sahf
or
sub
shlb
add
cwtl
inc
inc
dec
sub
push
dec
add
adc
and
xor
push
sub
push
xlat
push
sbb
push
pop
add
movsl
insl
inc
add
fcomps
mov
sarb
cmp
add
cmp
arpl
adc
inc
push
mov
xchg
push
xor
xchg
adc
sahf
test
popa
mov
sbb
sub
sub
lret
xchg
jo
movsb
into
nop
push
leave
sbb
in
push
push
push
xchg
addb
scas
dec
mov
icebp
cmp
lahf
add
push
rcr
add
out
daa
xchg
jo
xor
push
pop
pop
mov
loope
lock
loope
adc
gs
xor
mov
das
add
jnp
mov
addb
push
popf
sbb
jne
call
repz
into
adc
out
sbb
lahf
pop
add
push
cmp
push
int3
in
adc
mov
outsb
bound
lods
adc
sbb
in
jl
and
dec
test
and
cld
push
add
push
inc
sbb
movsl
adc
fsubr
clc
and
hlt
cwtl
hlt
cmp
push
inc
sub
arpl
shl
or
or
sbbl
cmpsb
sub
sub
ret
sbb
sub
loopne
cltd
inc
fsubrl
push
or
out
sarl
jmp
in
insl
push
sbb
mov
push
push
mov
pushf
xchg
aaa
mov
jmp
mov
enter
std
insb
sub
cmpsb
mov
dec
pop
scas
insl
and
cmp
insb
adc
cmp
js
dec
loopne
fwait
xor
cmp
in
lcall
add
jo
mov
add
dec
into
pop
bound
add
xor
sub
cmp
xorb
sahf
jecxz
mov
out
push
jo
pop
pop
les
imul
mov
sahf
add
dec
push
jae
or
nop
insb
lock
jp
lahf
hlt
add
dec
out
std
xchg
loop
push
fildl
clc
mov
xchg
ljmp
fsubrs
jmp
jb
cwtl
les
add
es
push
lahf
cmc
iret
inc
mov
push
fs
add
je
inc
loop
add
mov
test
pop
je
cmp
xchg
xor
rorb
push
xchg
xor
push
push
add
mov
sub
dec
jl
rsqrtps
mov
adc
sbb
and
mov
sub
inc
mov
add
push
adc
jo
or
jns
dec
cmp
inc
cmp
pusha
push
adc
sbb
inc
adcl
pmaxsw
ret
pop
jl
jle
inc
cld
ja
lods
dec
sub
cmp
jge
mov
lods
cld
pop
rol
outsl
xor
mov
movsb
pop
std
mov
sbb
pop
push
push
push
je
xor
and
aad
or
dec
into
push
cltd
sub
iret
cmp
cmp
dec
and
insb
or
inc
pop
lea
xor
cs
fadds
stos
jle
jmp
adc
mov
js
andl
mov
inc
roll
ret
arpl
loopne
dec
add
cmp
add
and
mov
xor
inc
ss
push
push
jne
adc
pop
push
xchg
pop
sub
mov
and
nop
xor
fisttpl
loopne
mov
outsl
fwait
mov
cmp
pop
mov
add
jne
lret
jo
mov
mov
nop
loop
daa
lret
movb
clc
inc
inc
je
add
mov
ret
jbe
pop
push
adc
sbb
rcr
and
dec
jle
dec
faddl
mov
dec
pop
popa
jge
inc
push
iret
cltd
shl
je
push
jo
arpl
sub
rolb
mov
rolb
fmull
sbb
icebp
jbe
jmp
cmp
adc
scas
cmp
movsl
pop
and
jnp
xor
pop
sub
or
stos
js
sub
pop
inc
sbb
jo
mov
loopne
push
inc
add
iret
xrelease
subb
mov
push
xor
movsl
dec
fs
aam
and
push
das
js
inc
shlb
push
add
mov
push
push
sbb
dec
sub
mov
mov
cmp
cmp
cmp
push
xchg
add
mov
add
cmp
jle
dec
ja
lock
clc
cld
mov
fdivr
xchg
dec
pop
or
lret
pop
adc
push
sbb
and
aaa
sub
xor
xor
cmp
sbb
inc
dec
dec
test
push
pop
pop
repnz
push
jp
dec
and
and
jo
js
jb
cmp
sbb
push
jns
xchg
test
dec
pop
push
mov
cwtl
pushf
dec
add
mov
xchg
outsl
in
mov
mov
mov
sub
enter
sbb
push
rcrb
sbb
inc
push
push
sub
rcl
fcoms
jmp
in
rclb
and
hlt
clc
or
push
sub
xchg
xor
add
or
in
stos
je
adc
sbb
sbb
xchg
lret
and
sub
movsl
push
stc
aaa
xor
cmp
sub
dec
push
movsl
push
mov
pusha
sub
insb
jo
jb
lea
inc
adc
dec
movsl
test
sub
mov
movsb
cmpsb
test
xchg
xchg
xchg
dec
mov
mov
push
sub
enter
xorb
sarb
aas
xor
add
repnz
dec
add
fcmovnbe
jmp
sub
inc
pop
and
mov
mov
and
fisttpl
lea
xor
les
jo
sub
jns
cltd
dec
cwtl
mov
lret
jl
test
outsl
je
push
push
and
xchg
icebp
sbb
pop
push
ret
lea
inc
mov
popf
mov
ret
cs
std
and
test
sub
jnp
inc
call
pop
pop
sbb
pop
sbb
push
push
sub
mov
test
inc
fldt
lret
push
xchg
or
inc
outsb
sub
lret
bound
inc
pop
sub
loopne
or
cmp
push
mov
xadd
and
xchg
or
cmp
aaa
addl
aaa
mov
movl
adc
pop
mov
adc
sbb
lahf
sahf
aam
pop
rorl
mov
add
push
test
sbb
sub
insl
cmpsl
mov
sub
neg
and
pop
lock
push
xchg
ret
je
push
into
jb
enter
sbb
push
addr16
push
das
lods
in
sub
imul
xchg
xchg
enter
add
push
jo
sub
es
and
mov
sub
adc
cmp
jle
jle
or
inc
mov
mov
test
cmpl
incl
push
push
adc
clc
adc
or
arpl
xchg
or
push
add
int3
test
push
jmp
cmp
mov
inc
addl
inc
adc
add
adc
push
stos
xchg
arpl
or
mov
je
push
xchg
mov
add
clc
clc
or
clc
and
sti
pop
pop
pop
je
pop
push
push
dec
pop
stos
imul
cmp
mov
inc
add
fildl
icebp
or
jmp
add
push
push
into
and
push
daa
mov
xlat
shll
out
push
cmc
scas
push
insl
cmp
aad
iret
into
jno
mov
jb
cmc
or
xlat
adc
mov
pop
push
lods
mov
adc
jne
insb
dec
jp
jae
decb
sub
add
pop
cltd
cmp
and
push
aas
cmp
test
cld
lea
nop
xor
cwtl
xchg
rcll
sbb
leave
rcrl
and
fidivs
add
add
jno
xchg
data16
je
dec
and
je
push
jo
adc
pop
test
mov
test
lret
pop
test
or
mov
add
scas
sti
cltd
sub
rcrl
jbe
or
or
pop
mov
sti
jle
mov
push
mov
fldl
sub
out
and
add
or
sub
nop
adc
jmp
push
loopne
lock
testb
fcompl
in
push
sbb
dec
dec
je
lea
push
push
es
adcl
pop
or
xchg
cmpsl
mov
movsl
mov
add
unpcklps
push
adc
xor
mov
and
or
arpl
pop
pop
sub
cs
cmp
inc
test
stos
push
inc
sbb
addb
outsl
dec
aad
dec
pop
adc
lahf
push
mov
das
jle
cmp
dec
rorl
rolb
adc
jg
lds
cmp
and
cs
and
mov
ficompl
mov
lret
cmp
pop
xchg
popl
inc
sbb
add
arpl
adc
add
outsl
shlb
imul
dec
shlb
push
jno
adc
add
insl
add
addb
mov
adc
pop
push
lods
add
mov
add
xchg
sbb
adc
pcmpeqw
pusha
roll
adc
lret
pop
jg
pop
cmp
aas
and
fdivrs
insb
and
push
nop
loope
push
clc
popf
cmpsl
mov
test
test
push
shll
or
pop
xor
add
adc
clc
mov
in
dec
outsl
or
and
ret
dec
or
sub
push
js
out
dec
test
cld
jo
push
mov
inc
mov
xchg
pop
loopne
add
mov
ret
nop
adc
adc
mov
pop
call
gs
sahf
cmp
rcrl
cmp
sbb
push
cs
xlat
push
xchg
lods
call
xchg
jl
inc
dec
outsb
xor
inc
cmc
fwait
sar
adc
adc
test
shlb
cld
adc
and
add
add
pop
movsl
xchg
les
inc
subb
xlat
jb
inc
sbbb
and
or
xchg
sbb
stc
pop
add
adcb
mov
jp
sbb
adc
add
daa
mov
xor
push
daa
cwtl
cwtl
mov
leave
push
and
adc
and
add
fiaddl
dec
cmpsl
push
jb
repnz
sbb
and
or
nop
popa
xchg
and
xor
add
mov
mov
in
pop
cmp
fmull
cmp
add
or
adc
xchg
sbb
xlat
ret
xchg
testb
xor
imul
aas
inc
mov
inc
sub
xor
fistl
pop
lret
dec
cmp
push
inc
add
and
or
lock
fisttpll
xchg
imull
int3
push
cwtl
jb
insl
add
and
pop
dec
mov
jb
daa
pop
push
enter
and
pop
push
and
xor
mov
add
test
cmp
pop
mov
push
ja
dec
pop
in
cs
mov
in
or
jb
jl
pop
push
in
pop
dec
outsb
je
pop
sahf
adc
mov
faddp
xor
ss
fadds
pop
sub
pop
xor
pusha
mov
mov
cmp
push
lret
ret
popf
dec
adc
int
shrl
mov
push
fcmovnb
mov
and
dec
movsb
setb
mov
imulb
xor
movsb
sub
nop
or
data16
data16
mov
pop
pop
enter
mov
dec
jne
mov
add
popf
jmp
adc
cmpsl
mov
leave
sbb
push
sub
pop
sub
xor
mov
bound
fbld
inc
daa
mov
fisttps
cmp
cmpl
andb
adc
stos
xchg
or
mov
cmp
and
lods
push
bnd
push
cmp
enter
mov
lods
inc
xor
mov
enter
and
and
int3
ret
inc
adc
mov
das
mov
out
jns
inc
push
insb
lods
in
push
sub
mov
push
jg
inc
lcall
in
mov
xor
mov
cmp
rcrb
js
sub
pop
enter
jo
lea
add
sub
enter
clc
or
push
push
inc
out
lahf
add
jl
rolb
jmp
jo
movsb
cmp
and
adcl
xor
add
insb
sbbb
sub
in
add
jg
outsb
mov
dec
ror
push
jno
sub
test
xchg
jae
sbb
add
subl
icebp
inc
adc
sahf
lods
mov
imul
adc
scas
or
dec
mov
add
dec
and
sar
dec
adc
and
ds
sahf
fstpt
mov
inc
ret
xor
and
sbb
shrb
int3
mov
add
or
imul
lahf
sahf
dec
xorb
cmp
sub
push
out
or
nop
lea
inc
jle
in
rcl
adc
sbb
push
daa
movsl
seto
call
sbb
xor
add
insb
sbb
mov
lret
adc
rcr
mov
xchg
adc
or
dec
push
pop
mov
dec
xchg
inc
sub
hlt
sub
push
hlt
xchg
ds
add
int3
and
imul
xor
pop
mov
lahf
xchg
out
rcrb
xor
cmp
add
addl
add
lahf
add
cli
mov
jne
pop
inc
ds
insb
cmp
movsl
sbb
push
je
or
inc
pusha
and
mov
loop
unpckhps
adc
add
mov
test
sbb
pop
shrl
or
cld
adc
push
or
adc
lret
add
pop
pop
cmp
push
test
bnd
lock
lea
mov
jno
mov
jge
ret
sbb
mov
push
mov
inc
ret
call
stos
push
pushf
sbb
or
adcl
adc
push
xchg
push
daa
test
jb
push
orl
or
pop
inc
js
loopne
shll
cli
sbb
stos
notl
or
lea
mov
pop
mov
push
add
push
pop
push
pop
sbb
dec
or
cmpsl
arpl
inc
and
jle
add
sarb
add
pop
mov
test
cmp
ss
in
pop
or
push
and
push
ret
sub
pop
adc
or
mov
mov
or
adc
iret
mov
ja
and
add
rorl
push
inc
sub
testb
neg
inc
push
push
push
add
in
ljmp
jae
xor
and
iret
push
push
bound
xchg
gs
ss
jb
push
mov
or
add
mov
push
sub
add
and
subl
int
push
mov
mov
sub
sbb
or
popf
add
mov
jnp
sub
mov
icebp
je
sbb
imul
ret
shrb
pop
push
outsl
xor
movsl
sbb
ljmp
sbb
mov
mov
cmp
sub
xchg
mov
push
mov
repz
push
dec
sbb
push
lods
adc
adc
lds
adc
fcomps
pop
pop
dec
adc
add
add
or
sbb
ret
fcmovnbe
or
cmp
inc
bnd
lea
mov
add
addb
pusha
pop
rolb
sbb
xchg
push
push
lds
pop
cmc
pop
mov
pop
inc
scas
add
cli
rol
xor
out
mov
cmpsb
push
adc
push
inc
sbb
push
mov
jmp
mov
ss
in
jge
inc
and
pusha
xchg
scas
mov
jl
and
sub
add
lods
daa
mov
shrl
push
mov
inc
fs
mov
jae
pop
pop
ds
add
lods
dec
xchg
cmp
movsb
outsb
mov
dec
and
mov
sub
push
push
mov
testb
lds
sub
sti
jbe
ja
int
cmp
ds
arpl
xchg
fisttps
push
fldt
or
lock
repnz
mov
cmp
fwait
pop
sub
jg
pop
inc
or
aam
cmp
ds
or
test
add
rcr
adc
sub
pop
cmp
inc
pop
mov
imul
mov
sbb
loopne
cli
shr
jne
jns
or
mov
imul
cmp
xchg
lahf
xchg
pop
jo
push
mov
jge
push
movsb
call
negb
dec
cwtl
ret
nop
push
test
movsb
setg
popl
fwait
out
jle
out
add
cmpsl
shlb
add
or
mov
pop
inc
pop
jecxz
sbb
inc
or
rorl
or
pop
add
pop
cmp
mov
pop
ja
push
inc
jl
je
sbb
rcll
cmp
sbb
or
jge
sub
add
pop
xchg
sbb
jmp
cmpsb
jg
jge
lea
cmp
decb
mov
inc
hlt
shlb
insb
inc
pop
inc
daa
adc
clc
or
push
or
cmp
mov
ret
lahf
mov
cmpb
lea
add
push
mov
jno
jno
sbb
dec
fs
add
int
mov
rcll
add
cmp
rolb
nop
bound
ljmp
movsl
xchg
sub
xor
aas
xchg
push
ds
sub
sbb
mov
ret
pop
pop
sub
lods
adc
jne
filds
insb
or
sbb
mov
mov
aas
pushf
lods
sub
and
loop
xor
sahf
rorl
lcall
int3
xchg
lret
xchg
leave
dec
push
mov
arpl
push
jb
xor
loop
and
sbb
and
cmp
js
mov
test
es
jge
jo
fsubs
fimuls
mov
fwait
repnz
outsb
loop
sub
lods
gs
sub
fwait
push
push
and
test
aam
sbb
ret
loope
ret
sbb
enter
sbb
jmp
cmp
mov
out
mov
add
cs
mov
add
scas
mov
push
mov
xorl
and
rol
inc
mov
adc
out
fstl
push
pop
lea
dec
inc
jecxz
or
hlt
push
dec
sbb
icebp
loopne
je
dec
pusha
dec
sbb
adc
test
rolb
mov
push
jo
add
sbb
inc
dec
cmp
xchg
add
adc
loopne
cmp
test
xor
pop
pop
out
push
inc
cltd
in
cmp
push
sub
insb
lock
mov
je
or
push
int
pop
int3
sahf
pushf
ret
sub
std
sub
test
dec
repnz
pushf
vxorps
pop
jl
dec
call
adc
inc
ret
xchg
add
adc
dec
mov
adc
test
mov
test
je
aad
ret
mov
scas
and
rol
jp
movsl
fcoms
push
fimuls
inc
rcrl
mov
ja
loope
mov
test
xchg
mov
and
adc
aam
adc
push
sti
es
pop
pop
cs
dec
inc
add
inc
jmp
adc
jae
add
rcll
add
testl
pop
dec
and
dec
xchg
jb
xor
test
lock
push
lods
xchg
lods
mov
shrb
fcomps
int
push
icebp
nop
push
and
xor
jg
jnp
and
lea
adc
mov
add
sbb
add
out
pop
xchg
cmp
add
xchg
xor
out
sub
cmp
push
mov
or
subb
mov
pop
cld
mov
ret
cmp
inc
aam
push
popf
inc
fcomps
loopne
xor
pop
fcoml
mov
xchg
and
push
or
sbb
push
sub
sub
xor
iret
fidivl
inc
add
aas
add
push
adc
dec
xchg
inc
pushf
inc
xchg
mov
outsl
mov
mov
xor
add
add
sbb
enter
adc
push
sbb
adc
std
cmpsl
mov
sbb
or
mov
add
adc
mov
pop
dec
bound
mov
sub
push
adc
pusha
addr16
xor
adc
mov
shrb
fs
pop
aas
cmpsl
adc
mov
jnp
loope
inc
push
scas
mov
test
je
repz
mov
push
inc
or
scas
jo
push
sub
js
and
clc
and
pop
mov
test
cwtl
add
push
xchg
pop
jmp
dec
outsb
inc
mov
or
fisttps
pop
cwtl
out
addr16
add
push
adc
lea
push
call
js
pop
and
adc
es
pop
jo
and
adc
mov
lret
pop
or
dec
cmp
xor
lds
loope
adc
mov
and
adc
lds
aad
rclb
pop
cmp
popf
and
icebp
push
or
shll
jno
xchg
bound
loopne
xor
rolb
lret
inc
scas
sub
pop
add
mov
aaa
pushf
and
inc
pop
jmp
lea
add
add
ljmp
mov
dec
and
adc
and
and
or
mov
test
dec
lods
xor
insb
in
sbb
dec
mov
call
push
dec
adc
in
jo
repz
popa
addr16
dec
mov
cmp
push
dec
adc
fdivrp
or
inc
bound
inc
sbb
shrl
xchg
fiaddl
or
add
pusha
cwtl
push
cs
mov
lcall
push
stos
inc
sub
and
adc
fdivl
dec
out
jne
ja
lock
xchg
add
cmp
push
mov
add
push
dec
fmuls
repnz
clc
push
nop
cwtl
inc
push
jl
icebp
cmc
xchg
add
in
adc
sbb
les
in
cltd
push
mov
sbb
je
cmp
mov
push
or
inc
add
call
bound
jo
add
or
inc
dec
leave
add
loope
dec
jle
and
scas
ficoml
mov
mov
rcll
les
mov
movsb
jge
mov
inc
add
rorb
popf
cmp
pop
repnz
bnd
cmp
pop
mov
lahf
ret
add
pushf
and
or
adc
fimull
add
sahf
mov
pop
sub
pop
nop
xchg
add
xchg
dec
inc
roll
aas
jmp
inc
lock
test
ret
pop
xlat
aam
adc
and
add
sahf
sbb
cs
aam
push
lock
xor
sti
add
cmp
xchg
mov
push
pop
sahf
and
lret
sbb
cltd
xchg
out
add
sub
adc
and
pop
test
add
ficoml
inc
dec
jecxz
add
jbe
or
and
cmp
and
and
mov
pusha
je
neg
cmp
add
add
loope
cs
sbb
ja
fldcw
jl
test
lret
nop
xchg
or
fstpt
sbb
pop
push
pop
jb
pop
pop
lea
enter
pusha
jo
sahf
aam
mov
lods
add
stos
pusha
add
loop
loopne
and
lret
in
jge
in
in
call
xchg
lock
in
adc
jns
pop
fimull
nop
cwtl
xchg
mov
pop
mov
mov
or
sbb
jb
mov
xor
and
mov
int3
and
nop
lock
and
aad
and
or
and
dec
sub
clc
add
adc
in
inc
and
sub
lds
loope
mov
mov
mov
jg,pt
test
push
cmp
les
out
or
movb
push
jmp
ret
imul
push
inc
sarb
aas
add
test
rclb
lods
lahf
inc
and
icebp
jno
mov
sbb
ja
sti
fsts
les
add
mov
pop
fisubs
jne
xchg
ror
xor
lea
pop
rol
int
push
xchg
pop
insl
enter
adcb
sub
sbb
jne
cmp
lods
xchg
in
enter
sub
cmp
push
cmp
cmp
and
add
cmp
or
push
sub
fcoml
push
fmuls
cmp
add
aad
push
lods
or
pop
cwtl
sub
in
inc
lcall
push
pop
or
dec
push
in
xor
adc
in
and
mov
test
push
divl
push
and
or
adc
mov
or
mov
fadds
gs
add
xor
rol
push
leave
adc
lahf
or
xor
sbb
int
les
push
add
je
push
dec
aad
add
cmpsl
add
test
out
or
or
add
xor
rcr
inc
cmpsb
lret
mov
aam
and
lahf
mov
mov
stc
insl
mov
pop
imul
fisttps
mov
adc
xchg
xor
mov
jae
sbb
mov
ja
gs
dec
mov
test
inc
sbb
push
jb
lea
lea
sub
push
pusha
int3
sbb
aas
push
ss
insb
adc
gs
addl
scas
cwtl
ret
lret
sub
sub
dec
loop
movsb
aam
cmp
mov
inc
ret
xlat
dec
sarl
js
and
push
adc
adc
push
adc
or
jmp
or
and
xor
lcall
adc
rorl
xor
push
sub
enter
push
sbb
pop
sub
pusha
mov
xor
rorl
add
push
data16
pop
cltd
pop
inc
iret
insb
movsl
jns
movsl
inc
sbb
je
cmp
xor
push
push
inc
inc
test
lret
pop
inc
sbb
insb
dec
lret
inc
pop
test
mov
inc
inc
lock
push
and
xchg
call
sbb
pop
leave
lock
int
push
dec
dec
fildl
xor
je
roll
insb
cmp
je
mov
fbld
lea
lods
data16
rcr
or
rcll
dec
and
or
add
xor
fstl
out
sti
in
pop
mov
adc
cwtl
lea
or
pop
outsl
jb
push
ss
das
clc
daa
xor
enter
pop
cltd
fdivrl
stos
imul
push
in
add
jns
sub
push
scas
aaa
mov
jne
add
or
les
insb
lods
xor
and
sbb
adc
or
sbb
loopne
add
cvtps2pi
push
add
adc
push
jne
pop
pop
inc
adc
pop
lds
add
push
lods
mov
mov
pushf
rclb
pusha
sub
mov
push
push
sub
mov
outsb
mov
sarb
sub
push
rolb
lds
mov
and
sub
scas
lock
xor
rol
jl
xchg
enter
push
jl
add
lea
shl
mov
stos
pop
adc
push
insb
addl
jecxz
pop
data16
xchg
mov
mov
outsb
dec
mov
imul
lds
cld
inc
loop
or
adc
daa
mov
cmp
or
ljmp
mov
sub
jne
sbb
sub
test
mov
mov
and
pop
outsl
mov
add
sub
pop
mov
xchg
mov
fnstcw
mov
or
jo
in
pusha
pop
add
fisttpll
insl
lock
mov
cmp
add
mov
cmpb
xor
push
rcrl
mov
push
addr16
jno
aad
push
icebp
add
outsl
push
pop
add
fistpl
imul
aam
fildl
push
xchg
cltd
push
add
pop
push
imull
test
sbb
out
push
jmp
ss
pop
aas
das
dec
lods
jo
stos
cmpsb
lds
adc
in
pusha
dec
push
orl
xchg
adc
or
mov
sahf
cltd
xchg
cmp
mov
cwtl
cmp
adc
mov
add
add
test
fstpl
pop
jle
pop
add
adc
or
mov
fwait
sti
mov
xchg
sbb
jo
push
xchg
out
push
mov
cmp
cmp
into
xchg
fistps
inc
jb
std
lret
std
out
mov
jle
imul
into
push
jmp
adc
jne
cmp
sbb
inc
js
int
dec
jne
push
xor
popf
cmp
adc
xchg
add
icebp
shll
and
cld
cld
xchg
int
sbb
push
icebp
mov
inc
sub
and
insb
insb
call
nop
pop
add
ret
and
push
mov
and
add
and
cmp
shl
cmp
xor
leave
push
hlt
add
addr16
dec
lds
stc
add
add
xchg
adc
sbb
jp
push
pop
push
mov
or
or
dec
mov
ja
ffreep
jmp
pop
popa
cmp
pop
jle
sbb
push
lahf
adcb
xorb
jecxz
xchg
jle
decb
cmp
cmp
mov
out
mov
outsl
cmp
push
fiaddl
js
inc
xor
add
test
aaa
lods
mov
pop
out
pop
or
xchg
and
loop
add
cmp
or
or
aam
shl
imul
in
lea
adc
xchg
scas
xor
jmp
dec
or
cmp
xchg
sbb
mov
loope
push
sahf
adc
cld
xor
es
fisttps
call
pop
push
push
adc
jp
mov
lea
mov
lahf
rclb
sar
add
es
cmp
lea
adc
cli
xor
cmp
mov
sbb
xor
sbb
sbb
insl
or
adc
inc
adc
pop
test
xor
adc
das
dec
popa
lcall
nop
push
je
lahf
sbb
jmp
push
sub
mov
mov
mov
and
and
push
inc
add
imul
pop
cld
pop
jb
push
push
pushf
out
lcall
jge
push
and
cmp
ds
push
es
cmp
jns
pop
push
and
pop
push
or
jnp
push
das
push
mov
fildl
imul
xchg
pop
pop
dec
sti
sahf
out
call
push
fwait
mov
sub
add
push
jns
neg
push
mov
push
push
mov
repz
pop
lds
pusha
dec
rcrb
pop
inc
inc
shrb
call
mov
les
push
or
and
fs
adc
popa
and
lock
aad
movsl
or
outsl
stos
cmp
daa
xchg
sub
in
and
push
jne
push
push
or
push
mov
jnp
add
add
push
xchg
mov
push
filds
jns
ret
mov
xchg
push
incl
mov
sub
lds
shlb
test
sbb
int
or
jne
int
mov
int3
movsb
cmp
mov
mov
and
mov
or
aaa
scas
sbb
pop
adc
aaa
cmp
mov
iret
insl
mov
mov
rcrb
ficomps
insl
cmpsl
mov
repz
pop
xchg
mov
aad
mov
jg
imul
mov
and
xlat
gs
push
pop
jp
in
rcrb
xchg
mov
andl
dec
mov
push
dec
push
push
dec
sahf
inc
fcompl
sahf
fisubrs
mov
mov
or
jle
jns
add
xchg
out
jo
xchg
test
int3
mov
test
jg
cmp
mov
or
push
ljmp
rclb
fbld
mov
xchg
or
bound
push
push
lods
dec
jl
sub
cmc
icebp
enter
jne
sbb
or
movsl
rcll
lcall
loopne
mov
or
xor
das
rcrb
adc
jmp
les
clc
mov
js
addr16
jne
inc
fsubr
sbb
push
and
ret
gs
nop
pop
sub
pop
adc
bound
sbb
lahf
dec
js
test
lcall
rclb
das
mov
decl
sub
mov
adc
aam
xchg
sbb
test
cmc
aam
shrl
dec
sbb
or
ss
pop
add
sub
mov
mov
push
cmp
xchg
scas
lea
sbb
adc
sub
dec
in
xchg
mov
insl
rcl
sub
sarb
test
jg
aam
movsb
sbb
push
incl
cmp
lret
pop
xor
and
and
push
inc
or
push
pop
lea
add
loope
jo
cmp
mov
cmp
mov
jne
mov
dec
xor
xchg
mov
sub
fisttpl
push
lods
hlt
add
inc
cmp
movsb
and
int3
dec
inc
pop
sbb
sarl
xor
add
adc
inc
popf
inc
adc
adc
test
xor
f2xm1
and
xchg
stc
dec
xor
jge
and
incl
sub
xor
fcomps
lcall
mov
adc
pop
add
jle
test
add
mov
dec
sbb
shll
mov
jl
lret
cmp
push
jae
cmp
mov
jl
sbb
mov
push
ficomps
xlat
pop
adc
int3
jle
insl
test
ja
xchg
orl
inc
or
ja
sahf
aas
sahf
inc
mov
jae
pop
lods
push
xchg
push
push
cmp
fldl
pushf
jno
mov
mov
and
jmp
jne
test
mov
and
lds
js
insb
push
adc
sbb
ds
push
adc
sar
push
mov
loop
xor
stc
enter
sub
inc
fcoms
xor
jbe
clc
mov
mov
mov
movsb
jmp
mov
push
ret
dec
nop
mov
test
mov
sbb
das
inc
inc
pop
jl
fcoms
sbb
movsb
addr16
or
add
test
idivb
sbb
and
push
pop
mov
sub
push
push
in
inc
push
and
mov
push
or
mov
test
push
idivb
push
and
stos
out
je
das
lods
enter
xor
and
lea
sbb
pushf
lea
push
mov
hlt
mov
mov
jo
xchg
xor
push
roll
mov
xor
mull
add
mov
adc
push
lret
cmp
add
inc
lcall
mov
fs
push
mov
inc
pop
mov
adc
mov
inc
cld
push
js
mov
jle
and
push
mov
pop
sbb
mov
mov
stc
dec
sahf
mov
lret
mov
xor
ss
dec
and
lock
les
add
cs
sbb
loop,pn
in
insl
jmp
mov
xchg
pop
cmp
adc
data16
fsubr
lds
mov
xchg
lea
adc
test
ljmp
stc
push
or
jl
sbb
and
sbb
adcl
das
adc
imul
sbb
push
jg
add
clc
push
fdivs
add
push
pop
add
sbb
lea
repz
insl
imul
jmp
pusha
fwait
xor
pop
sarb
lcall
in
add
cmp
jg
jmp
cmpsl
pop
push
jp
and
in
fcoml
xchg
out
jno
sbb
mov
xchg
push
cmp
ficompl
inc
inc
sub
popf
xlat
dec
fcoml
pop
add
cmp
data16
cmp
fmull
shlb
jl
movsl
subb
mov
test
movaps
cmp
dec
sbb
pop
and
arpl
loope
and
ja
popf
add
pop
jl
iret
inc
add
fisttpll
sub
or
or
mov
push
push
jmp
xor
adc
dec
inc
lret
inc
test
inc
roll
ficoms
add
lea
pop
lds
adc
stos
inc
enter
adc
jp
movsb
out
dec
lods
pop
jmp
mov
jmp
push
call
js
lea
push
cld
aaa
or
ret
push
dec
push
dec
sbb
jns
mov
add
add
xor
push
scas
pop
push
push
jge
fsubrl
sahf
jmp
lret
add
inc
arpl
hlt
hlt
daa
call
jle
icebp
clc
out
xchg
adc
mov
dec
neg
sbb
and
roll
inc
mov
jnp
cs
jl
lcall
add
dec
sub
fcmove
mov
lock
das
push
scas
jns
enter
mov
sub
cmp
mov
shr
pusha
or
push
and
pusha
jno
push
mov
mov
lret
lret
out
lods
lahf
add
nop
xchg
xchg
push
add
loopne
xchg
inc
jge
daa
test
lret
js
sahf
mov
push
sbb
and
les
das
sub
mov
mov
sub
xchg
mov
mov
push
inc
stos
jb
rcr
xor
rorl
xor
clc
test
scas
push
mov
vpcmpeqw
fmull
cltd
rcrb
fldln2
daa
jnp
push
sbb
js
lods
pusha
mov
cmpsb
dec
xchg
pop
or
dec
adc
fwait
in
dec
push
jbe
mov
pop
imul
dec
and
out
sbb
or
std
dec
dec
int3
pop
jae
xchg
clc
jg
aam
pop
test
std
add
mov
mov
add
jmp
jae
and
gs
fdivrs
add
movl
mov
insb
es
arpl
and
pop
mov
aas
or
cmp
jge
and
loop
push
mov
xchg
mov
sbb
sub
out
add
insb
push
pop
or
sbb
push
jns
mov
jmp
fwait
adc
enter
pop
jge
mov
ja
dec
jmp
dec
jp
fstpt
and
arpl
into
sbb
ret
aaa
pop
inc
cmp
jl
in
pop
data16
mov
add
mov
mov
or
sub
rol
or
adc
imul
pop
pop
cmp
aad
mov
test
adc
je
aas
ret
inc
lcall
push
fdivrl
add
xchg
lods
xor
dec
stos
jge
lods
pop
pop
mov
adc
into
inc
add
cmc
xchg
pop
mov
repnz
xor
adc
sub
ss
mov
fs
cmc
decl
add
mov
lds
xchg
loop
push
xchg
sbb
cmp
pushf
jl
mov
lock
lea
fstl
js
nop
cmp
cmp
insl
jae
in
sbb
pop
pop
cmp
fsubrs
lods
pop
xchg
fnop
or
push
movsl
adc
fcomp
inc
add
inc
push
mov
pop
outsl
xor
sub
adcl
or
jb
js
push
lea
popa
pop
das
aam
add
mov
cmpl
dec
jnp
orl
xchg
adc
adc
xchg
add
jne
xor
pop
mov
inc
add
loop
cmp
hlt
clc
lods
pop
sbbl
je
imul
icebp
decl
push
cmpl
je
mov
sub
mov
cmpsl
js
cmp
popa
das
lods
lea
push
add
add
movsl
fs
adc
loopne
or
call
shlb
inc
or
inc
pop
dec
shrl
fcmovbe
es
push
mov
jp
clc
nop
xor
sbb
clc
add
ficompl
testl
inc
mov
sub
sbb
js
hlt
mov
shlb
outsb
pop
sbb
pop
out
cmp
mov
je
dec
daa
and
adc
xchg
jno
loopne
mov
std
fwait
or
scas
or
addl
adc
pop
jg
push
sbb
pop
pop
dec
adcb
shl
push
add
ss
cmp
into
lods
xorb
adc
cmp
cmpsb
mov
pop
je
imul
mov
shll
insb
and
into
int
mov
and
mov
lods
ret
js
ja
cmp
cmpsl
out
pop
jae
push
sub
pop
cmpsb
shl
sub
cld
push
rorl
sub
dec
push
inc
nop
nop
shrb
mov
pop
lcall
or
aad
sbb
inc
adc
mov
sub
cmp
es
inc
dec
sbb
jno
jae
outsl
push
xor
jne
inc
dec
mov
mov
pop
mov
push
nop
push
jle
cwtl
or
dec
jns
fnstsw
and
fs
mov
jge
mov
mov
add
xchg
xchg
add
shll
test
into
sbb
rclb
daa
je
push
lcall
xchg
or
or
flds
adc
in
mov
mov
fmuls
or
jecxz
lods
xchg
rcrb
rcr
mov
je
adc
jge
mov
movl
sarl
and
or
or
js
inc
daa
into
cmp
xchg
addl
pop
xchg
movsl
movsl
jno
push
cmpsl
add
jge
sbb
rorl
push
imul
lods
adc
add
or
sarl
dec
cmp
movsb
xchg
xor
cmpl
test
push
xchg
adc
sbb
imul
and
sbb
sbb
pop
aaa
add
jo
pop
nop
inc
fsubl
adc
pop
filds
arpl
add
dec
pop
les
sbb
rcrl
notb
out
mov
dec
inc
jp
in
jne
xor
sbb
mov
and
add
mov
insb
lcall
push
mov
sub
lock
shlb
shll
jl
mov
ds
pushf
orb
popf
sbb
fsubs
imul
mov
nop
or
mov
mov
mov
add
inc
jo
pop
inc
cmpb
cmovo
outsb
movsl
xor
mov
cltd
push
out
push
shlb
aas
adcl
out
sub
lea
or
jnp
mov
dec
xor
dec
adc
sub
cmp
dec
cmp
pop
lock
mov
lret
sub
mov
sbb
mov
loope
dec
inc
mov
lods
jne
mov
jmp
popf
adc
jle
xor
and
pop
adc
push
test
and
cmpl
sub
jae
xchg
loopne
add
push
sbb
enter
cltd
jmp
mov
xor
mov
daa
jns
fnstenv
push
pop
sub
repz
fnstcw
xchg
jns
and
cmpl
adc
enter
test
cmp
lret
pop
inc
cltd
add
mov
push
sub
std
cmp
in
hlt
sub
push
jo
push
xchg
and
push
add
push
mov
lea
push
xor
push
mov
lock
sub
xchg
adcl
js
add
mov
adc
mov
fs
ret
pop
sbb
xchg
mov
add
mov
cmpsb
in
fdivs
je
lods
sub
or
jge
lods
adc
sub
sbb
testl
push
movl
shlb
paddd
push
push
test
call
call
insb
push
jne
push
mov
faddp
push
popa
push
push
shl
sarb
sbb
xchg
or
dec
add
fs
ret
lods
popa
add
jae
dec
mov
xchg
add
inc
push
decw
mov
lea
mov
ret
sbb
pusha
push
rorb
sbb
dec
int
jge
mov
jge
add
aam
and
incl
jge
mov
lea
scas
into
loopne
add
repnz
jno
cmp
or
js
push
sbb
push
ss
pushl
pop
adc
in
adcb
xchg
cld
add
in
sbb
cli
xor
cwtl
jbe
leave
lods
or
clc
jmp
ror
movsl
stos
mov
push
test
sbb
stos
jmp
bound
ret
scas
movsb
rsm
insb
sbb
and
psadbw
push
add
or
xchg
cmp
sbb
mov
add
fwait
mov
mov
inc
mov
mov
pop
mov
mov
xor
pop
test
insl
adc
mov
pop
fldenv
lods
push
icebp
and
or
adc
pushf
dec
das
mov
fdivs
or
sub
cmp
sbb
push
mov
push
jecxz
push
mov
dec
jp
lods
pop
or
and
addr16
shlb
lds
push
aas
sbb
jne
lea
mov
test
fsts
pop
ret
pop
insb
and
movsl
testb
mov
sub
add
pusha
jge
cmp
sub
inc
push
jne
sbbb
cmp
jp
mov
test
and
shll
insb
lods
addl
or
repnz
push
sub
push
test
incl
and
out
ret
dec
push
mov
fistpl
jne
aad
in
push
mov
cs
jl
push
in
push
sbb
sbb
inc
sbb
fs
ja
cmc
cmpsb
or
or
imul
xchg
cmp
cmp
rorb
loopne
xlat
adc
ret
fs
sub
adc
push
call
dec
fcompl
loopne
leave
jns
inc
mov
xor
in
push
dec
jmp
mov
or
xchg
mov
pop
ret
inc
cmp
mov
jle
rcrb
arpl
mov
jmp
sub
cmp
daa
mov
pop
leave
sub
xchg
in
clc
lock
mov
sar
cmp
inc
or
mov
js
mov
pop
into
xchg
push
pop
adc
out
xchg
sub
jne
mov
jcxz
xor
dec
in
out
ljmp
fcomps
add
add
ja
pushf
fmuls
xor
jnp
cmp
sbb
inc
and
inc
ds
add
insb
loopne
int3
ret
in
sub
pusha
in
push
nop
ds
cmp
jl
sbb
add
push
xlat
lea
xchg
xchg
push
test
repz
push
in
into
lock
dec
jmp
fs
adc
es
jmp
repnz
ficoms
push
pop
scas
in
push
lock
mov
push
bound
cmp
mov
push
sbb
mov
rcrb
push
andl
add
gs
js
inc
ret
push
fisubrs
inc
push
jecxz
mov
shrb
jl
sub
jp
sub
xchg
loop
in
outsb
pop
cmp
mov
movsb
pop
fcoml
wrmsr
cmc
push
mov
nop
ds
jbe
fists
cld
stos
xor
pop
and
cmp
sub
ret
nop
jl
mov
loope
stc
das
sub
and
cmp
jo
js
cli
in
adc
push
adc
and
adc
aas
lret
pop
outsl
cltd
jb
addr16
pop
sub
mov
int3
std
add
adc
mov
adc
loope
inc
addr16
popa
dec
jle
movl
xor
sarl
adc
sub
mov
mov
adc
adc
xchg
shrb
pop
js
jmp
cli
sub
scas
xlat
fxch
lret
mov
mov
stos
daa
jl
or
clc
js
mov
imul
xchg
imul
mov
xorb
cli
sbbb
and
pop
loopne
sbbb
xchg
mov
je
shll
or
icebp
push
mov
movsl
pop
movsl
icebp
pushf
test
pop
adc
les
pop
pop
data16
sub
aam
add
sbb
xchg
popa
aam
sbb
mov
nop
adc
lahf
and
or
loop
push
jl
add
fcomps
xchg
ret
xor
cmp
movsl
jns
jp
add
call
xor
xor
insl
cmp
je
out
sub
lds
cwtl
xchg
jmp
fwait
jne
icebp
cmp
sbb
mov
sbb
pusha
daa
sbb
dec
inc
lock
xor
sbb
shl
inc
popa
xchg
loopne
or
mov
loop
lret
jae
dec
fidivs
ret
lock
inc
mov
pop
sub
pop
add
pop
push
cmpl
push
add
leave
add
lock
add
andb
or
je
dec
or
pop
pminsw
cwtl
inc
sbb
jne
inc
daa
test
adc
rcl
jne
push
push
or
mov
adc
xchg
jnp
cmp
jge
jecxz
pop
add
inc
mov
pop
lds
jle
ficompl
xchg
call
add
add
arpl
roll
pop
mov
and
test
sub
inc
jmp
cmpb
jnp
mov
push
and
pop
es
xchg
xchg
loopne
cmp
sbb
and
add
cld
dec
adc
movsb
adc
pop
outsl
mov
sub
push
cmp
sub
adc
jno
movsb
dec
lret
push
push
mov
adc
pop
insb
sub
jg
pop
dec
or
sahf
cmpsl
es
stos
orb
repz
or
sub
add
adc
push
fneni(8087
fcmovnb
pop
adc
sbbl
les
sub
lods
adc
push
push
adc
outsl
outsb
in
movb
push
or
cmp
dec
push
into
pop
popa
cld
push
push
push
push
push
jnp
shr
add
lock
lods
sbbl
lods
xchg
pusha
in
add
push
jb
rclb
and
pop
addb
mov
call
icebp
mov
push
push
icebp
jno
call
lea
push
sub
lea
mov
pop
jmp
addb
adc
mov
popa
sub
or
add
pop
adcb
adc
xchg
xchg
sbb
pop
shll
insb
pop
pop
scas
test
aam
inc
inc
mov
sbb
mov
pop
add
add
dec
insl
bnd
cmp
sbb
add
inc
pop
sub
push
and
and
mov
or
pushf
push
or
push
rcll
add
xor
daa
ljmp
xchg
test
leave
sub
or
push
dec
add
mov
jnp
jb
sti
and
test
ds
jns
and
mov
inc
inc
movups
add
push
imul
gs
mov
adc
loopne
mov
cmp
aas
jmp
jae
or
and
or
dec
push
aad
adc
push
sub
sub
add
ret
clc
dec
xor
push
push
into
sub
xchg
sbb
inc
stos
add
lods
or
adc
push
push
dec
xor
inc
loopne
lods
testl
xlat
pop
lret
cmp
mov
push
pop
outsl
jmp
pushf
cmpsl
stc
mov
pop
nop
arpl
jne
push
push
std
xor
mov
add
pop
call
mov
xchg
mov
push
mov
loopne
add
push
aad
jo
mov
or
jp
or
adc
pshufw
insl
je
push
negl
sahf
dec
cmp
std
add
xchg
mov
xor
inc
pop
xor
xchg
xlat
pop
push
movsb
aaa
mov
inc
or
popa
sbb
addl
or
arpl
xchg
jnp
push
test
fists
cmp
push
push
add
xchg
xor
fdiv
mov
sub
out
mov
mov
xor
or
sub
das
pusha
fcmovb
mov
inc
mov
mov
inc
inc
imul
or
add
or
stos
dec
xchg
push
xor
mov
sub
fdiv
add
cld
fidivs
push
push
mov
push
ja
pop
rclb
push
shlb
lods
mov
call
cpuid
push
sub
movsl
jmp
xor
cmp
sbbb
jns
fnstenv
xchg
jo
mov
adc
or
mov
jp
add
inc
pushf
je
xlat
testl
xor
mov
sbb
imul
inc
fisubl
ret
inc
es
inc
popa
mov
inc
jno
xchg
orl
fsubs
and
add
fnstenv
add
int3
bound
lcall
negl
xchg
sti
mov
mov
jne
daa
dec
dec
push
adc
push
mov
adc
add
fidivs
js
xchg
sti
add
and
cmp
push
cmp
in
pusha
dec
add
inc
and
call
and
into
sbb
dec
cmp
pop
in
inc
sbb
notb
sub
cs
push
sti
daa
dec
jnp
and
dec
mov
jmp
shrd
shlb
ss
xchg
inc
and
cmp
ljmp
push
cmp
jb
lahf
aad
jo
push
cwtl
addl
sbb
xchg
adc
std
push
aas
jecxz
cmp
jns
lret
add
add
add
add
lahf
add
add
sbb
imul
cs
ds
push
push
xchg
loopne
into
repz
imul
pop
lea
repnz
push
hlt
fwait
cmp
cltd
ficoms
push
insb
cltd
xor
dec
pushf
xchg
pusha
push
js
sbb
jo
cmp
xchg
add
mov
insb
rorb
add
inc
mov
insb
or
or
push
aad
clc
mov
xchg
lret
cmpsb
push
pop
orl
sbb
daa
mov
and
push
mov
sti
push
sub
xchg
adcl
pop
stc
ja
or
popa
popf
pop
cs
or
movsl
sbbb
xor
pop
sub
dec
ja
movsl
jbe
add
mov
int3
xlat
rcl
push
xchg
add
sbb
cs
pop
mov
je
pusha
and
fs
ljmp
jp
push
addps
mov
push
out
out
call
test
pop
mov
sbb
rolb
mov
adc
sbb
inc
or
cwtl
cmp
mov
rorl
adc
cmpsb
or
pop
mul
adc
adc
push
outsb
nop
ss
adc
jmp
cmp
push
pop
mov
es
pop
test
add
sti
or
dec
lret
lret
sahf
mov
addb
xchg
push
ljmp
dec
mov
in
pop
imulb
pop
inc
push
push
outsl
and
sahf
movsb
rcl
sbb
cmp
push
flds
xchg
xor
cld
nop
pop
add
xchg
adc
in
aaa
push
mov
dec
sbb
xchg
sbb
ret
push
dec
mov
loope
mov
dec
mov
mov
mov
jmp
cmp
xchg
ds
fld
mov
mov
movsb
adc
cmp
sub
and
movsb
out
ja
add
imul
inc
adc
test
std
aaa
mov
jns
loopne
pusha
outsl
sub
push
popa
inc
adc
push
xor
mov
or
test
and
inc
cmp
jl
xchg
sub
je
psubusb
jl
mov
and
or
push
xor
fsubrs
stos
cmp
subb
mov
fcomip
adc
add
jnp
add
lahf
pop
adc
aas
adc
shlb
and
mov
adc
mov
fwait
test
jge
jb
xor
loop
sbb
pop
movsb
inc
mov
pop
addr16
inc
xchg
xor
push
adcb
stos
adc
mov
adc
cmp
mov
mov
xor
push
sub
sbb
push
popf
dec
mov
add
mov
imul
push
mov
mov
ret
aad
jo
sbb
jp
push
mov
push
dec
lret
inc
cld
lea
jae
or
mov
test
push
test
xlat
or
adc
addb
jecxz
push
pop
cmpsl
stos
push
dec
sub
test
xor
jp
and
repz
push
movsb
movd
push
add
pushf
mov
add
mov
sbb
jmp
lret
ficoml
xor
jae
sti
sub
mov
ljmp
inc
std
push
lahf
rcr
add
mov
enter
sahf
cwtl
add
aaa
jle
add
inc
and
inc
or
call
aas
jge
dec
inc
sub
sub
jle
sbb
push
je
push
adc
and
pop
pop
dec
and
push
adc
mov
xchg
jle
jmp
add
cmp
adc
adc
xchg
lret
lods
cmp
in
sub
push
lea
or
or
faddl
popa
movsb
outsb
mov
insb
sub
popf
pop
add
xlat
mov
mov
sahf
sub
test
sbb
xor
test
pusha
ret
pcmpgtw
lea
push
xchg
ret
rorl
cmpl
mov
hlt
add
dec
xor
xchg
mov
jb
sbb
push
push
mov
adc
loop
or
adc
aad
sbb
mov
push
push
daa
inc
xor
dec
ret
sub
cmp
int
shll
cmp
les
add
push
mov
dec
xchg
pop
sbb
add
imul
aaa
stc
push
movsb
push
or
mov
test
xor
or
push
jae
je
insb
adc
mov
push
or
push
jne
leave
outsb
test
sbb
xor
in
std
mov
xor
sbb
inc
pop
loope
xchg
sub
rolb
push
mov
mov
adc
dec
dec
push
movsl
lock
xor
mov
jno
or
in
push
pop
inc
mov
andb
flds
scas
rcrb
sbb
divl
adc
mov
add
mov
sbb
jle
jbe
jmp
mov
lcall
fldenv
xchg
xor
or
enter
push
bnd
sbb
arpl
or
arpl
xor
dec
jle
mov
addb
mov
lret
test
mov
xchg
inc
xor
fs
xor
rorl
adc
jp
orl
push
fidivs
addl
insl
icebp
adc
je
dec
cmpsl
repnz
pop
jbe
pusha
mov
andl
fadd
je
xchg
add
test
or
sbb
add
push
jno
adc
insl
loopne
xchg
ret
pop
aad
loope
outsl
push
pop
lods
jns
dec
adc
cmc
cmpsb
jnp
incl
cs
inc
daa
dec
sbb
push
mov
jg
neg
sbb
and
dec
or
sbb
cmpl
pop
pop
mov
inc
adc
inc
mov
jecxz
mov
or
and
sbb
nop
mov
rcrl
push
subb
push
sarb
gs
in
jmp
imul
inc
lret
adc
iret
inc
and
out
je
inc
jecxz
imul
add
inc
sarb
add
pop
std
mov
add
movswl
add
sub
xor
add
xor
mov
xchg
xchg
or
insl
lods
test
pop
popf
sub
mov
sub
lods
sub
and
push
mov
cmpl
sub
je
je
add
cmp
mov
outsb
ss
sbb
or
int
pop
dec
inc
repz
int
cs
cmpsl
pushf
leave
mov
pop
sub
and
inc
rolb
push
aaa
push
rcl
clc
push
cmp
dec
int
mov
sub
sub
sub
push
push
cmp
mov
inc
lcall
xor
in
bound
cmp
cmp
cmp
cmp
adc
pop
cmp
lret
push
cwtl
imul
dec
jp
push
adc
sub
cmp
pop
dec
jae
pop
pop
pusha
cs
enter
push
sub
cltd
dec
push
popa
jl
dec
sub
out
pop
cmp
push
or
sbb
cld
inc
cmp
jecxz
xchg
mov
xchg
pop
push
lea
rclb
or
jle
dec
data16
and
cmp
inc
cwtl
cwtl
daa
and
inc
push
cs
push
addr16
daa
mov
sbb
dec
adc
int3
dec
mov
daa
cmp
lods
or
sub
sbb
arpl
inc
adc
adc
insb
ss
xchg
mov
mov
cmpsl
fldcw
test
lods
int
in
pop
cmpsb
les
ja
inc
in
push
pop
cmpsl
sbb
sbb
je
inc
push
cs
je
fiadds
je
sbb
shll
mov
fadd
or
test
xchg
mov
push
and
adc
add
and
pusha
int
adc
fldl
inc
adc
cwtl
add
inc
pop
mov
pop
add
lea
in
xorb
lock
push
add
bound
ljmp
inc
xchg
lods
sub
mov
sub
xor
or
pop
aad
loope
andl
sbb
xor
cmp
push
pop
add
out
dec
dec
mov
mov
cwtl
inc
cmp
and
ja
mov
and
or
adc
pop
and
sti
xor
pop
arpl
mov
add
xor
add
test
lcall
and
mov
es
jl
out
and
mov
mov
sub
enter
fcoms
movsb
push
sbb
fbld
out
adc
punpcklbw
xor
xchg
sub
stc
xchg
inc
xor
xor
xchg
cmp
dec
fs
and
js
mov
adc
shl
fstp
jl
in
jmp
push
xor
jb
xchg
inc
pusha
adc
ss
mov
mov
push
fwait
add
imul
dec
push
testb
xor
and
and
xchg
jle
push
dec
mov
cs
or
test
jne
stc
sub
sub
mov
orl
or
or
insb
orl
pop
orb
in
add
adcb
hlt
and
adc
incb
ret
push
push
add
pop
push
cmp
pop
mov
inc
sub
gs
or
mov
lods
xchg
invd
in
jp
cmp
aam
outsb
mov
pop
fadd
jnp
ljmp
inc
and
sarb
clc
scas
mov
sub
or
or
and
xchg
loopne
repnz
pop
dec
xor
jmp
and
xchg
jp
cmp
movsb
add
mov
push
push
sbb
or
adc
jo
or
add
sbb
daa
ljmp
fstl
pusha
sbb
mov
xchg
mov
xor
and
addb
cmp
imul
adc
dec
mov
sti
inc
daa
test
sub
sbb
adc
add
inc
mov
mov
sub
pop
loop
jmp
fadds
ret
fmul
fistpl
dec
cmp
fisubs
repz
andb
or
enter
movsb
js
test
out
add
push
sbb
sbb
jne
mov
xchg
test
movsb
mov
add
movsb
insl
pusha
or
lock
jecxz
add
xchg
push
cmp
jne
mov
test
push
orps
add
push
push
push
xor
aam
mov
inc
pop
ret
or
push
mov
and
scas
gs
adc
or
pop
or
sahf
ficoml
push
lcall
sbb
andl
and
adc
mov
pop
test
inc
orb
out
adc
dec
jp
dec
scas
flds
shlb
scas
or
xchg
mov
mov
test
cmp
dec
inc
lock
mov
jno
cmp
loop
outsb
addr16
mov
inc
insb
cmp
popa
pusha
loope
scas
adcl
sub
pop
inc
jle
dec
dec
cmp
or
test
add
cltd
imul
dec
add
adc
add
push
or
imul
fs
nop
sbb
mov
dec
aas
mov
cwtl
lock
push
xchg
jo
fldl
je
add
dec
xlat
cmp
xchg
je
ljmp
and
and
sub
pop
inc
test
sub
sar
sbb
cmp
mov
sti
and
out
lea
mov
jmp
inc
push
pop
test
xchg
cmp
aas
mov
jp
and
incl
xor
cmpl
and
mov
or
xor
or
imul
inc
inc
bound
mov
inc
loop
xchg
mov
test
outsb
push
sub
adc
sub
push
mov
and
adc
push
les
lret
pop
inc
divb
in
dec
and
lcall
add
mov
sub
mov
add
jg
pop
sub
cmp
je
adc
pop
loopne
je
or
cli
mov
iret
mov
insb
testl
jl
mov
xor
mov
push
sbb
push
jbe
xchg
or
mov
and
cmp
scas
dec
add
adc
divb
movsl
pop
inc
loopne
add
lods
cmpsb
and
and
mov
adc
dec
push
cmc
push
std
push
add
fists
mov
cmpsl
mov
inc
adc
mov
add
or
mov
out
and
adc
mov
ljmp
or
pop
into
adc
imul
or
dec
loope
push
and
pusha
rcll
pop
push
mov
mov
xor
mov
aam
and
and
pop
pop
xchg
mov
int3
push
mov
rorl
mov
test
sbb
sarl
xchg
push
daa
lret
sub
fsts
movsb
mov
imul
outsb
xchg
in
push
mov
stos
inc
push
aaa
push
mov
adc
or
outsl
dec
dec
cmp
mov
dec
jp
pop
imul
in
fnstsw
add
and
and
sub
mov
sbb
aas
loope
fcompl
inc
jo
loope
jns
jbe
mov
push
sub
es
sbb
inc
out
imul
dec
add
aaa
sbb
mov
inc
xchg
fs
cs
xorl
aaa
cmpsl
ficoml
xchg
inc
insb
data16
or
adc
cmp
stos
jae
je
pop
pop
add
pop
out
sub
dec
xor
dec
dec
andb
push
pop
and
xchg
sub
jl
sub
call
push
sub
add
cwtl
sub
popf
hlt
and
and
cmp
sbb
pinsrw
or
adc
push
xor
sub
cmpsl
aam
mov
add
jo
jne
or
push
aas
pop
cmp
cmc
imul
push
inc
jnp
pusha
xchg
push
adcl
ljmp
popa
mov
mov
inc
pusha
add
push
inc
pushf
adc
mov
sbb
scas
xor
push
not
mov
or
mov
bound
lods
and
mov
sbb
add
sbb
pop
mov
imul
stc
int3
sbb
nopl
sbb
or
or
push
mov
lret
mov
cmp
sub
out
addb
test
lahf
or
inc
pop
add
add
cwtl
add
and
push
xorl
xchg
sub
scas
push
mov
mov
mov
popa
adc
lods
jae
bound
addr16
ret
rclb
scas
sub
mov
loopne
outsl
mov
scas
in
mov
repz
stos
mov
jns
out
gs
mov
sarl
int
jecxz
mov
sahf
out
fisubrs
stos
fadds
iret
repz
in
adcb
lcall
jg
ljmp
xor
cmp
mov
scas
mov
sbb
sbb
pop
fistps
enter
jno
outsb
cli
jns
add
xchg
xor
cmp
adc
sbb
and
fidivrl
cmpsl
pop
inc
xor
lcall
jb
push
pop
je
xchg
push
js
out
inc
inc
std
and
push
rorb
leave
xchg
andb
and
mov
fcoms
mov
test
adc
mov
add
orb
or
add
rol
mov
xor
rorl
push
add
iret
repz
pop
mov
ds
sub
out
sahf
xchg
stos
rcl
cmp
sarl
sub
push
je
clc
add
test
js
pushf
jmp
imul
lock
lea
lret
cmp
cmp
rcrb
cld
test
cld
inc
rorb
xchg
testl
push
cmp
mov
jne
test
pop
dec
push
or
std
mov
lods
jmp
jmp
sub
insl
pusha
mov
test
jne
or
mov
and
or
out
rclb
popa
das
and
pusha
and
pop
jae
dec
inc
add
test
dec
jecxz
add
movsb
push
fistpl
mov
push
adc
lods
sbb
out
and
dec
or
or
jb
fmull
push
mov
or
add
insb
push
ret
mov
pop
sub
adc
adc
leave
test
jle
adc
inc
xchg
pop
jo
test
add
dec
mov
call
dec
outsl
lea
nop
je
sbb
les
xchg
push
mov
xor
jmp
dec
pop
es
popf
movsb
xchg
dec
xchg
mov
test
lcall
dec
outsb
dec
xchg
pop
inc
lea
xor
or
add
das
and
jne
aaa
mov
adc
movsb
cltd
ds
nop
das
or
mov
popf
icebp
pushf
leave
pop
sbb
arpl
xchg
pusha
jle
pop
rol
fcmovnu
add
cmp
sbb
and
xor
xchg
test
sub
loopne
mov
add
xchg
adc
lock
push
outsb
pop
mov
push
sarb
inc
add
mov
sub
mov
inc
std
and
sbb
push
pop
cltd
and
push
sbb
jb
jg
stc
test
popa
nop
jo
sub
lea
xor
jno
add
cmp
add
movsl
in
aam
dec
mov
xor
add
add
pop
dec
je
xchg
mov
add
jecxz
loope
push
add
movsb
int3
adc
shlb
xchg
mov
dec
jnp
mov
in
insb
mov
pop
or
xchg
lret
in
loopne
fsubr
fsubs
add
mov
mov
mov
or
mov
dec
and
lods
inc
dec
adcl
ud0
sbb
pop
or
mov
dec
xchg
xor
inc
add
movsb
pop
dec
lods
push
xor
fwait
sbb
pop
push
add
sbb
ficomps
fstps
add
add
sbb
xor
mov
sub
add
mov
adc
and
mov
jb
shrb
or
dec
dec
and
and
and
xor
mov
cmp
lods
and
js
adc
mov
mov
add
pop
sub
test
and
mov
jecxz
push
and
ds
ja
cmp
sbb
lods
addr16
or
jno
pop
inc
add
or
fimull
negl
mov
sbb
or
movb
add
push
cwtl
addl
jo
add
loope
push
adc
cld
mov
pop
adc
push
pop
pop
arpl
dec
das
es
add
pop
cmp
cmp
jo
jnp
inc
inc
xchg
insb
mov
insb
add
or
or
cmp
icebp
sub
adc
loopne
out
jge
ret
lahf
pop
jae
push
iret
addr16
or
inc
adc
add
jge
or
iret
adc
and
add
push
and
add
jbe
ret
jnp
push
add
sbb
ret
test
add
xor
and
xor
push
in
cmp
lret
pop
test
nop
je
or
and
push
gs
pop
dec
push
bnd
inc
dec
mov
or
rcl
pop
cmp
dec
dec
cmpsb
and
xchg
jp
inc
pop
ret
inc
dec
ret
push
lea
aad
xor
xor
lret
add
mov
ret
sub
sub
cli
out
add
fistpl
sbb
scas
add
mov
mov
scas
jle
in
lods
sar
int3
bound
jle
shlb
sub
data16
mov
push
push
rolb
ss
js
cmc
pop
push
idivb
and
cmc
pop
add
and
jne
out
cld
sbb
push
add
add
cmc
add
push
icebp
dec
shlb
push
sbb
push
or
push
cld
dec
aam
xor
xor
insl
out
and
divb
std
pop
pop
sarb
push
sbb
js
inc
sbb
push
or
jo
aad
mov
cld
mov
cmp
js
pop
push
push
push
push
dec
push
lds
mov
lahf
pop
mov
sar
sar
sub
sub
pusha
push
push
push
cmc
or
and
nop
jp
sub
push
or
inc
les
sub
lret
imul
sbb
add
inc
jmp
sub
xchg
popa
or
and
gs
or
flds
cmp
jne
lods
sub
dec
lods
pop
popf
scas
shll
clc
push
xor
jne
arpl
push
es
test
pop
pop
jg
inc
jmp
dec
loope
cmp
rolb
mov
imul
pusha
add
addr16
or
movl
cmp
xchg
xor
xchg
test
xor
push
decl
inc
push
inc
jmp
pop
pop
xor
or
out
adc
or
cmp
shlb
inc
inc
sub
push
pusha
and
mov
push
lret
pop
sbb
addr16
mov
mov
mov
sbb
push
xor
push
dec
mov
and
rcll
dec
xchg
cs
add
loopne
jo
sub
and
jne
ret
aas
push
add
or
pusha
dec
jl
cmp
cmpsb
pop
mov
cmpsb
cmp
imul
movl
sub
and
xlat
shlb
iret
or
dec
dec
push
mov
xchg
mov
push
inc
cli
dec
jnp
inc
cmp
adc
imul
test
xchg
jno
orb
out
or
sbb
fisubrs
push
pusha
sub
sar
arpl
movsb
cltd
and
and
inc
sub
and
inc
add
loopne
aad
push
mov
insb
add
push
push
mov
call
inc
scas
adc
data16
pop
loop
cmpsb
and
xchg
loopne
mov
dec
and
lock
push
mov
mov
xchg
ja
leave
sub
push
dec
xchg
inc
ret
dec
cmpsb
sbb
dec
and
add
repz
xchg
call
push
jg
imul
imul
xchg
or
adc
iret
insb
cli
inc
xchg
fimull
mov
mov
inc
push
sub
jno
fwait
adc
in
clc
adc
pop
jmp
mov
mov
ret
or
mov
cmp
jg
sti
and
lock
sar
push
rcl
ja
push
cmp
jle
or
movsl
shlb
and
and
inc
push
ja
hlt
pop
adc
ret
push
bound
in
jp
xchg
sub
lock
icebp
mov
fiadds
out
cmp
jb
push
testl
pop
testl
jmp
ret
data16
mov
push
and
mov
in
inc
ljmp
or
mov
pop
sbb
mov
cmp
mov
mov
imul
xor
lahf
xchg
das
dec
movsl
test
in
adc
daa
daa
adc
in
and
xor
in
mov
mov
rcl
bound
pop
rolb
or
push
aam
fbstp
pop
push
cmp
mov
jb
lock
sub
dec
jb
mov
push
push
push
in
push
fstl
xchg
xor
clc
inc
lods
sub
bound
jge
mov
loopne
mov
mov
push
jl
andl
inc
inc
data16
ret
movsb
mov
sbb
cmovbe
or
repz
adc
lock
or
dec
popa
add
xchg
mov
add
dec
xor
add
and
and
sbb
ret
iret
pop
je
add
test
popl
and
subb
xorl
cmpsb
xor
icebp
fiadds
mov
adc
adc
jg
cmpl
adc
push
pop
push
aam
les
sub
mov
cmp
jae
xchg
shrb
xor
pop
push
sbb
les
xor
inc
jb,pt
clc
pushf
hlt
fldcw
mov
and
xchg
pop
add
push
sub
je
push
and
sbb
fmuls
add
xor
ljmp
shll
daa
mov
out
xchg
stos
xchg
jno
scas
mov
push
inc
adc
xor
sub
call
test
push
push
push
rolb
and
inc
mov
mov
fs
stos
int3
inc
jmp
fistl
loopne
mov
ret
and
add
jle
inc
test
push
dec
cmpl
sbb
add
add
add
push
jo
or
and
loopne
js
pop
push
mov
nop
or
dec
mov
inc
fsubl
notb
mov
nop
addb
fnstcw
mov
jno
je
push
dec
scas
fcmovb
dec
pop
insb
imul
mov
imul
orb
xchg
mov
pop
decl
cwtl
xor
xor
stos
dec
push
sub
sub
shll
jnp
adc
and
push
mov
fnstcw
leave
subl
mov
and
outsl
sbb
cmp
out
push
adc
loop
bound
cmp
mov
add
pop
adc
jg
lea
stos
aas
lcall
lret
adc
add
or
push
cmpsb
adc
push
jno
enter
out
xchg
sbb
inc
call
sub
fstl
jne
sbb
push
or
add
leave
mov
adc
shl
loope
push
and
loope
lcall
dec
jo
testb
sbb
sub
mov
add
and
add
and
push
sbb
mov
ret
push
add
push
or
pushf
push
and
push
pop
adc
aaa
aaa
xchg
dec
add
test
sbb
ljmp
inc
arpl
or
popf
inc
in
addb
icebp
add
sub
adc
movsb
imul
jno
mov
or
outsl
jo
and
pushf
xchg
mov
mov
and
sbb
push
or
mov
and
aas
or
mov
inc
roll
push
enter
fsubr
and
daa
mov
add
mov
add
and
lods
push
xchg
and
loopne
add
sahf
pop
mov
insb
add
push
rcll
leave
pop
cmp
add
pop
out
add
jbe
push
outsb
xchg
push
pop
push
pop
shlb
dec
sub
dec
xor
test
sub
shr
and
adc
cmp
adc
cmpsb
in
cli
xor
adc
xor
cmpsb
sbb
xchg
test
les
xchg
inc
xor
pop
and
mov
inc
sub
loop
mov
or
mov
mov
mov
jo
dec
imul
fstps
dec
pop
clc
rorb
nop
andb
std
mov
xor
fcomps
mov
pusha
push
jnp
inc
popa
add
push
fcmovnb
pop
and
add
sbb
and
and
addr16
call
pop
stc
adc
pop
call
add
adcb
pop
sbb
adc
pop
adc
das
mov
add
push
push
je
es
shlb
cmp
fs
and
fisttps
loopne
jae
sbb
sub
jg
or
sahf
dec
js
mov
jle
dec
add
rolb
and
inc
jge
sub
mov
xchg
mov
and
sub
shl
push
sub
adc
sbb
in
popl
xorl
and
pop
ret
or
mov
loopne
arpl
dec
add
les
jno
dec
imul
idivl
shll
and
lods
mov
dec
cmpl
mov
call
sub
test
push
enter
and
add
outsb
push
and
ljmp
test
mov
stos
jbe
sub
jne
inc
loop
mov
dec
jns
out
lods
in
pusha
mov
mov
mov
cmp
jle
add
js
mov
and
mov
pop
stos
loope
out
mov
cmp
rcll
lea
int
clc
jo
push
push
data16
or
test
inc
mov
addl
repz
fstpl
add
pop
movsb
mov
pop
or
or
inc
sbb
mov
xlat
call
adc
push
adc
add
bound
mov
or
hlt
sti
enter
jecxz
pop
mov
jne
jno
roll
mov
xlat
std
inc
dec
pop
add
adc
or
mov
sub
add
inc
movsb
lcall
stos
xchg
adc
js
das
movsl
dec
cli
add
jg
js
dec
cmp
push
icebp
adc
js
sub
push
push
or
fstl
sub
js
data16
pop
dec
pop
adc
aam
mov
push
push
pop
push
mov
insl
or
insl
std
xorb
fs
xor
js
push
add
xor
adcl
push
adc
pop
pop
jne
testl
loopne
inc
test
aas
mov
mov
adc
nop
or
dec
sbb
clc
rclb
dec
pop
mov
test
out
call
cmp
test
push
jg
and
movsb
mov
jb
xchg
es
nop
or
sbb
and
jne
pop
cmp
fcoms
pop
call
cs
insl
inc
repz
jnp
sub
sub
cmpsb
outsb
aad
rcrb
hlt
loope
xor
gs
sbb
jae
arpl
push
rorb
mov
movsb
sbb
lock
aas
or
cmpl
loop
sbbl
ret
mov
sbb
dec
pop
pop
or
lret
fcoml
pop
push
mov
aad
sub
insb
lods
je
jle
jne
mov
xchg
xchg
xchg
xchg
movsl
dec
add
movl
sahf
ja
out
xor
xor
dec
push
imul
fidivs
jbe
push
call
push
add
xchg
repz
rcrb
pusha
push
js
outsl
icebp
jl
add
sub
dec
mov
cmp
jne
jno
sub
inc
cmp
in
pop
sub
push
push
xchg
push
mov
jnp
shrb
cmp
xor
inc
inc
je
add
rcl
mov
or
add
mov
jmp
sahf
inc
add
and
or
mov
jbe
mov
mov
push
loop
imul
add
cmc
dec
pop
mov
pop
ds
insl
iret
mov
xchg
add
push
mov
int
jbe
or
fwait
leave
pop
jecxz
add
push
sarb
sti
xchg
jmp
cmpsl
cmp
jb
cmp
mov
pop
or
inc
leave
test
mov
mov
push
or
fildl
inc
push
arpl
nop
cltd
mov
sbb
and
test
cmpsl
cmp
cltd
jno
mov
cmp
js
and
aam
jno
add
leave
mov
lcall
in
pop
ret
pusha
gs
ret
insb
cmp
loope
mov
pop
pop
lods
xchg
jb
jmp
inc
cmp
sub
jne
mov
push
sbb
xchg
insl
jnp
xorl
sahf
or
icebp
addl
movb
daa
scas
inc
lar
rcl
cmp
xchg
mov
and
or
cmp
jo
dec
test
add
loope
movsl
in
js
xchg
sti
subl
jbe
sbb
pop
cmp
and
ja
icebp
int
inc
mov
and
sbb
jl
aam
add
je
dec
sbb
loope
addl
mov
mov
jg
sbbl
mov
pop
adc
cmp
or
fists
and
in
sbb
adcb
es
add
dec
cmpsb
inc
or
mov
push
jne
and
roll
rcll
push
adc
enter
sbb
stos
jl
and
or
or
push
or
pop
sbb
jge
or
leave
cmp
or
mov
xor
push
clc
add
rcl
and
insl
addl
shrl
or
pop
xchg
or
mov
mov
fwait
adc
sbb
dec
aad
adc
pop
xchg
lea
fcompl
adc
pop
sub
daa
mov
adc
dec
pop
shl
xor
inc
dec
imul
and
push
xlat
and
mov
pop
popa
cmp
in
and
out
or
cmp
dec
inc
add
inc
clc
clc
jbe
cmp
mov
ljmp
shlb
sbb
stos
pop
sbb
adc
lock
mov
mov
movsb
loopne
push
push
out
cmp
or
adc
test
sub
mov
inc
push
cmp
mov
orb
adc
push
adcl
insb
and
and
add
dec
cmp
mov
sti
xor
rorl
inc
jl
pop
mov
xlat
mov
adc
or
lea
sub
repz
cmpsl
movsl
ret
cmp
bound
or
mov
lret
shlb
adc
es
nop
add
push
and
ljmp
and
cmp
js
jns
movsb
inc
mov
push
mov
out
sbb
daa
dec
rolb
xchg
and
lods
lods
cmp
ficomps
rolb
fidivrl
adc
jmp
push
repnz
pusha
inc
xchg
fstpl
mov
jbe
jo
push
xor
push
cmp
sub
jg
mov
mov
push
sub
adc
or
lock
push
icebp
and
icebp
sbb
xrelease
add
push
lods
lock
scas
and
mov
jo
pop
inc
fmull
fdiv
jge
stc
push
adcl
inc
dec
sub
xchg
cmp
call
push
outsb
les
pushf
fimuls
cltd
jmp
and
or
test
jmp
mov
adc
mov
jmp
popa
push
and
push
sub
push
mov
dec
cmp
scas
pop
fsubrl
sti
push
add
pop
dec
sbb
mov
jo
hlt
and
lea
push
add
or
mov
fildl
call
pop
and
xchg
enter
xor
and
sbb
pop
popa
push
daa
repnz
ret
insb
jne
cld
outsl
mov
xchg
add
std
repz
lods
roll
stos
or
jmp
sub
push
jl
inc
push
mov
push
xchg
sub
shrl
das
or
lods
cli
cmp
push
orb
xchg
add
mov
push
dec
lret
or
call
dec
inc
xlat
dec
pop
cmc
std
jne
jne
fnstcw
lock
mov
mov
jle
add
pop
in
add
mov
inc
cli
sub
add
cmp
inc
lret
hlt
sub
jb
addb
or
adc
sub
and
or
jecxz
mov
inc
or
push
inc
test
push
inc
ja
pop
ltr
adc
imul
mov
sub
xchg
rolb
inc
and
push
gs
sbb
mov
jo
or
push
mov
inc
add
rol
sub
mov
nop
cmpb
adc
push
add
or
popf
adc
inc
fisubl
inc
or
cs
insb
inc
push
and
add
xchg
jne
pop
inc
cs
cmc
les
test
setp
inc
and
or
xor
mov
add
xor
add
sar
mov
fcomps
xchg
push
pop
es
push
inc
inc
loopne
sbbb
sbb
dec
je
or
loopne
inc
jne
cmp
add
aas
mov
imul
repnz
jmp
jbe
pop
dec
repz
dec
push
push
aam
in
jge
repz
pop
out
sub
and
sbb
shrl
cmp
adc
mov
push
and
push
or
in
xchg
int3
movsl
and
jp
mov
loopne
add
mov
jl
into
nop
dec
lret
adc
push
into
push
sbb
adc
xorb
xlat
lahf
xor
and
mov
test
jne
ja
fstpl
mov
loope
xchg
lock
mov
sbb
sub
cmp
sub
loope
mov
push
pop
ret
adc
popf
dec
pavgw
cmpl
rorb
nop
fcoml
sub
jo
pop
xlat
je
insb
popf
cmp
mov
push
or
xor
cmp
pop
add
dec
pop
sub
loop
imul
add
adc
mov
cs
push
push
adc
and
push
pshufw
pop
and
dec
cmp
push
xchg
pop
test
cltd
mulb
adc
mov
ss
inc
out
sub
jne
push
add
sub
dec
xor
sub
dec
js
les
pop
mov
inc
sub
add
into
sub
adc
pop
xor
xor
adc
add
icebp
scas
inc
jl
sub
scas
and
mov
push
push
icebp
add
dec
jns
test
notl
and
fwait
mull
mov
xor
negb
enter
adc
sub
mov
bnd
sti
xor
hlt
adc
pcmpeqb
adc
shl
push
int
and
add
sub
mov
and
dec
dec
ljmp
or
push
mov
loop
pop
dec
jg
push
cli
or
add
popl
imul
or
pop
sub
cmp
js
sbb
aas
sbb
cmp
les
and
lea
sub
xor
adc
or
jb
test
xlat
pop
adc
cmpb
inc
punpckhdq
pop
adc
and
dec
ret
xor
pusha
xchg
sub
jl
pusha
movb
adc
push
mov
dec
inc
orb
or
adc
js
jp
cmp
inc
loopne
mov
or
jne
in
add
dec
sbb
sub
mov
in
jl
or
push
imul
mov
clc
std
push
sub
dec
shl
fsubrl
inc
inc
fsubr
jno
lds
add
push
jg
repz
push
pop
mov
test
push
mov
enter
push
push
pop
out
inc
inc
jns
lods
mov
mov
dec
inc
add
dec
push
mov
and
push
dec
sub
jmp
and
pop
pop
jg
mov
fstps
ret
int3
push
sti
cmp
push
add
lods
push
mov
dec
ja
cmp
cmp
ffree
adcl
jge
pop
jae
loopne
dec
cwtl
sbb
push
push
mov
sbb
cmp
xor
addb
pop
popa
jmp
sbb
outsb
jbe
and
shll
inc
sbb
mov
jg
mov
cwtl
xchg
push
cwtl
mov
aas
jbe
adc
aam
insb
sbb
in
sub
in
pushf
xor
loopne
dec
popf
test
dec
cld
xor
jbe
dec
iret
inc
push
pop
lret
in
or
gs
xor
push
rorl
inc
adc
push
imul
les
jo
mov
mov
push
inc
push
add
sub
or
bswap
cmp
in
aad
push
enter
push
pushw
mov
insb
imul
dec
fnstcw
adc
sbb
out
nop
adc
sti
add
jmp
call
mov
pop
clc
cmp
movl
lock
popf
mov
pop
movl
insb
loopne
clc
mov
pop
sub
leave
in
pop
inc
int3
int3
loopne
push
das
lock
cs
andl
in
mov
or
mov
inc
in
loop
mov
xor
adc
mov
dec
sti
xchg
out
jne
fsub
add
insb
sbb
pushf
out
imul
xor
add
loopne
jp
leave
sub
ds
push
fs
sbb
int
insl
lcall
add
in
add
cmpl
push
sahf
addr16
inc
test
dec
or
in
fst
xor
sbb
sub
sub
aam
loopne
int
movsb
dec
push
push
aam
test
jmp
cmp
dec
in
jns
jne
xor
fnsave
cmp
jmp
push
pop
test
js,pt
and
scas
repnz
es
imul
les
les
cmpsb
hlt
add
ret
insb
add
inc
popf
xchg
test
add
xor
dec
xor
stos
cmp
pop
int3
cmp
enter
xor
addr16
push
mov
ss
faddl
adc
fdivrl
fsubs
push
aas
pop
adc
cmpsl
sbb
add
push
push
outsl
in
aas
push
test
scas
sub
repz
cmp
aas
sbb
adc
mov
xchg
mov
mov
icebp
or
dec
or
and
lods
sub
sub
push
mov
add
and
popa
pop
in
sahf
inc
push
pop
pop
inc
add
mov
add
mov
es
lock
ja
jb
mov
or
adc
call
or
popa
out
repnz
lcall
cmp
dec
mov
and
jmp
mov
push
sub
insl
push
jno
out
xchg
mov
push
adc
cmp
scas
inc
jge
add
push
lahf
shlb
mov
push
lret
pop
mov
add
mov
test
dec
test
add
jle
adc
jo
mov
push
adc
stc
xor
movsl
xor
and
out
dec
adc
jle
and
mov
std
stos
aaa
add
loope
cmp
or
pop
sbb
out
add
jg
ljmp
mov
push
inc
and
xor
add
popf
push
xor
cs
xor
inc
mov
rcl
pop
and
inc
pushf
push
sbb
sub
add
pusha
pop
or
mov
push
xchg
inc
aas
add
xor
rcrb
sarb
inc
xlat
js
sbb
nop
adc
pop
add
sub
xchg
test
ret
push
push
mov
xor
cmp
loopne
dec
or
pusha
jb
or
dec
mov
adc
das
pop
hlt
adc
xlat
sub
or
and
adc
inc
adc
or
pushf
dec
or
or
jle
mov
aas
xchg
out
outsb
mov
mov
lea
clc
loop,pn
adc
lock
cmp
inc
pop
mulb
pop
scas
in
popa
adc
or
inc
adc
mov
fcompl
dec
lock
pop
inc
pop
pop
mov
xor
xor
or
push
pop
push
pop
fldcw
cmp
cmp
and
sbb
add
sub
loopne
and
jns
dec
or
inc
clc
push
cltd
mov
outsb
loop
sti
pop
mov
pop
idiv
jbe
mov
cmp
ret
or
mov
xchg
push
sub
orb
lea
cmp
xor
push
add
pusha
call
jne
cmp
jne
xorb
or
adc
mov
mov
push
jle
or
in
fs
dec
ljmp
add
fstpl
fcmovnbe
push
fbld
jl
shl
sub
movsbl
mov
fsubl
push
or
jle
add
xchg
pusha
sub
cmpsl
push
push
scas
jp
rclb
pop
clc
flds
fabs
fnstenv
sbb
clc
jmp
fmull
fcoml
std
xchg
adc
inc
push
adc
std
xor
and
sub
je
in
xor
loopne
push
aam
lock
cmpsb
lock
sti
xchg
sbb
imul
rol
pop
add
sbb
fcomps
xor
imul
lcall
leave
cmp
fdivrp
mov
adc
ja
pop
popl
fmull
sub
imulb
mov
fisubrs
stos
push
rcrl
mov
add
pop
and
mov
arpl
or
pusha
loop
or
xchg
sbb
push
call
push
push
push
push
push
push
gs
sub
mov
push
rolb
sbb
sti
xor
mov
movb
ds
fildll
lods
ret
inc
rolb
stc
inc
xchg
inc
inc
addb
mov
bound
push
arpl
out
cmp
insl
scas
fs
test
adc
jp
sbb
and
clc
pushf
jb
mov
mov
adc
cmpsb
mov
dec
dec
stos
pop
mov
add
inc
cmp
mov
push
pop
insb
and
pop
sti
push
pop
add
cs
push
mov
push
jns
push
jmp
pop
xor
xor
mov
push
sbb
xor
lock
jp
inc
or
dec
dec
subl
ret
pop
adc
sbb
orb
xchg
test
push
je
mov
mov
pop
rolb
sbb
cmp
jne
ds
inc
xchg
rorl
cmp
xor
out
decl
subb
sub
ja
jecxz
mov
jmp
cmp
popa
push
adc
cmp
cmp
or
jne
insl
insb
inc
sbb
and
xor
sti
es
sbb
not
sub
pusha
mov
pop
xor
push
xor
sbb
add
adc
sub
scas
sbb
lret
xchg
hlt
mov
pop
lock
je
push
xor
or
addb
dec
pop
stos
outsl
or
and
dec
sarb
mov
dec
das
je
or
sbb
scas
or
je
xchg
icebp
bound
inc
in
nop
clc
ljmp
inc
in
jmp
inc
mov
lret
jns
dec
add
mov
xchg
and
sbb
out
jne
and
or
outsl
dec
fimull
adc
mov
into
out
dec
push
stc
push
sub
xor
movsl
sub
inc
ja
jno
enter
addr16
in
testb
adc
pusha
push
inc
adc
lret
push
mov
in
push
test
daa
and
jmp
and
pusha
pop
pop
jle
int
mov
andb
and
je
ret
adc
pop
jmp
punpcklwd
and
lds
imul
and
add
sub
sub
push
and
ljmp
jne
cmp
jne
add
pop
out
mov
xchg
sbb
jne
add
sub
icebp
jne
mov
pop
rclb
out
push
mov
movsb
fcom
arpl
pusha
push
cmp
mov
mov
or
sahf
in
ret
mov
fadds
mov
push
and
ret
push
adc
fs
cwtl
pop
outsb
adc
add
out
sub
ds
fsubrl
pop
test
add
iret
mov
and
pop
push
and
pop
les
or
cli
adc
jl
add
jmp
pop
pop
pop
pop
fcomip
inc
or
mov
jne
mov
add
or
out
pop
out
jne
ret
adc
sub
mov
jbe
cmp
jae
mov
ret
xor
adc
mov
repnz
repz
sarl
jg
push
or
sbb
and
push
dec
dec
loopne
push
cmp
jge
cmp
jle
xchg
repnz
mov
push
or
mov
pop
sbb
xor
arpl
push
loope
jg
ss
xor
shrl
mov
dec
jo
inc
xchg
rorl
fdivrs
push
add
mov
fcmove
xchg
pop
ret
in
or
leave
push
or
icebp
add
mov
movsbl
jle
sbb
inc
mov
insl
cmp
loop
pop
pop
jbe
mov
leave
xchg
cmp
xchg
fdivl
pop
roll
pop
frstor
cmp
in
sarb
cmp
testl
cmp
push
sub
loopne
idivb
xchg
jle
sub
outsb
pop
scas
arpl
sub
loopne
pop
or
cwtl
and
and
adc
fbstp
xchg
outsb
adc
pop
ret
dec
je
sub
gs
dec
jmp
dec
stos
sbb
pushf
out
dec
lcall
sub
es
dec
les
adc
bts
mov
push
les
mov
xchg
adc
les
data16
push
xchg
xor
hlt
cmp
iret
in
xor
adc
or
push
add
inc
mov
jmp
or
or
mov
mov
ret
add
mov
or
add
xchg
xchg
fcompl
insl
and
faddp
cmp
and
push
push
mov
sub
jbe
push
push
push
rorb
add
lds
inc
push
and
mov
orl
adc
cmp
adc
sbb
xor
stos
fcomip
sar
sets
dec
adc
rcrb
cli
adc
sti
dec
mov
lds
cmp
cmp
sub
andl
sub
pop
das
and
or
loope
orl
push
shlb
sub
enter
mov
and
pop
aam
rol
aad
inc
dec
xorl
push
sub
dec
xorb
jno
lock
lods
xor
xlat
imul
xor
je
sbb
xchg
or
fcomp
notl
mov
adc
push
pop
sarb
push
cli
pop
jg
das
sarb
mov
or
push
pop
flds
jl
mov
mov
lahf
arpl
jae
mov
sbb
lock
pop
push
orl
push
ss
repz
or
pop
fcmovnbe
sub
push
loopne
je
or
repnz
cmp
xor
lods
sbb
insb
lods
sub
dec
rcrb
cmp
sub
imul
pusha
jmp
jb
aas
add
add
iret
ja
shrb
inc
sti
jnp
loop
mov
or
add
push
mov
out
clc
es
and
syscall
or
addr16
mov
add
and
movsb
and
xchg
call
sub
dec
add
push
aaa
push
rorb
movsb
mov
and
dec
pop
mov
mov
ret
xor
lods
cmp
mov
dec
out
negb
out
sahf
xlat
push
mov
movsb
push
incl
jo
push
cmp
mov
rclb
stos
xchg
test
and
daa
jmp
pop
cmp
jae
or
mov
call
xor
push
mov
mov
sub
in
inc
add
dec
pop
push
iret
push
add
nop
repnz
roll
pop
imul
andl
enter
es
add
mov
aaa
or
mov
xor
mov
lcall
test
pushl
sarb
popa
add
inc
add
mov
or
sub
lods
xor
push
test
pop
add
roll
lock
aaa
orb
inc
add
aaa
cmp
cmp
aas
cmp
cmpsb
add
orl
or
mov
jmp
sbb
inc
aaa
push
lret
add
add
adc
pop
xchg
jecxz
clc
nop
xlat
insb
jne
arpl
mov
invd
adc
dec
int
or
js
jne
xor
imul
cmp
or
sub
repnz
lods
add
adc
add
cmp
out
adc
cs
in
xor
pop
sbb
or
mov
mov
or
outsb
in
sub
add
enter
inc
fs
jl
ret
movl
pop
add
or
push
dec
shrl
insb
xor
lea
fmuls
and
xchg
add
aaa
mov
rep
stos
lea
mov
lea
jl
call
jecxz
ret
js
cli
xor
in
sub
xor
fldt
fidivrs
xor
or
add
pop
or
push
movups
out
out
popa
xor
movsl
movsb
push
sub
subl
movsw
adc
mov
xchg
or
mov
xchg
movsl
cmp
push
out
pop
sti
pop
lock
jbe
dec
or
movsb
pop
shlb
push
bound
pop
outsl
call
loopne
mov
xlat
push
lock
jle
xorb
add
mov
xchg
xchg
lods
sub
or
jb
or
mov
popa
pusha
cmpsl
xchg
iret
push
dec
xchg
lret
adc
lea
leave
push
roll
movsb
mov
add
xchg
fisubs
push
lods
loopne
or
orl
ds
sbb
in
adc
ficomps
inc
int
repnz
in
dec
ffree
add
push
push
mov
mov
fsubl
cmp
inc
or
inc
outsb
cld
jle
xor
push
mov
rcrb
cmc
test
push
fidivrs
ret
call
lret
add
or
pop
adc
mov
mov
jo
gs
sbb
sbb
outsb
aam
div
inc
cmp
pop
loopne
pop
add
pop
mov
or
jge
mov
push
lock
dec
mov
fimuls
decl
mov
jle
inc
sub
rolb
mov
rcrb
jne
mov
ds
jp
int
lds
faddl
mov
mov
inc
in
mov
nop
mov
fmuls
push
stos
push
jge
call
jns
add
sbb
xor
inc
cli
mov
out
out
movsb
mov
inc
shl
mov
jo
out
mov
xor
outsl
add
xchg
push
xor
mov
call
lea
mov
pop
shrl
sub
fldcw
pop
ss
mov
push
adc
out
push
or
add
imul
fcompl
repnz
pop
dec
pusha
roll
addps
lea
mov
sti
in
or
add
push
add
sbb
dec
and
lods
es
push
sar
fisubl
xchg
int3
adc
push
adc
iret
mov
int3
jp
stos
adc
pop
stos
lods
sbb
icebp
mov
andb
jne
call
cmp
call
je
lea
fwait
xchg
xchg
push
sub
or
ret
lret
push
push
rolb
mov
in
mov
inc
aas
xor
in
xor
mov
add
pop
lea
lahf
dec
xchg
jmp
cmp
add
cmp
shlb
xor
test
imul
cs
push
adcb
push
in
rcll
ja
inc
in
fwait
push
jmp
cmp
icebp
jle
in
ja
push
mov
jo
rol
sub
cltd
int
faddl
adc
push
and
adc
popf
enter
push
ss
leave
loope
add
out
push
sarl
test
push
xor
mov
je
pop
adc
add
adc
outsb
out
push
nop
pop
pop
mov
mov
sbb
adc
das
js
adc
cmp
fwait
sarb
cmp
jne
and
sub
jb
jbe
lcall
adc
cs
clc
clc
inc
mov
or
test
daa
inc
fnstsw
movl
sub
aad
xor
mov
cmc
dec
jp
enter
dec
sbb
pop
fidivs
lock
cmc
add
cmpl
mov
cmp
mov
pusha
cwtl
leave
push
ret
xchg
les
dec
jbe
adc
xchg
hlt
les
pusha
popf
mov
fdivl
cmp
cltd
mov
out
sbb
jnp
addl
and
and
jmp
pusha
xchg
add
mov
sti
sub
push
mov
xor
mov
mov
inc
push
pop
fwait
sub
orb
jle
movsb
jno
rclb
ss
outsl
xchg
stos
cmp
loopne
sti
xchg
sub
das
adc
and
dec
insb
loop
or
add
fcmovu
popa
jl
sub
push
cmp
mov
inc
xor
rcrb
cmp
push
add
mov
pop
lods
mov
jns
push
lods
or
or
addl
scas
add
daa
fidivs
fldt
pushf
adcb
lods
cld
pop
inc
adc
scas
or
and
adc
inc
clc
push
add
jge
jg
je
add
ret
add
mov
fld
cmp
mov
adc
ret
loope
je
loop
adc
jp
and
or
dec
dec
mov
inc
pop
jns
xchg
push
cld
popa
je
in
sub
mov
lahf
xor
mov
sbb
dec
lock
mov
and
inc
jnp
test
pop
and
test
jno
mov
jb
pushf
push
cli
jle
add
les
sub
cmp
sub
cmp
and
and
push
es
sbb
dec
dec
test
dec
inc
mov
inc
sub
mov
test
push
push
das
adc
dec
dec
mov
add
cmp
and
ja
enter
add
jge
xor
shl
jbe
cmp
lods
aas
rcl
fs
add
nop
sub
sub
mov
fmuls
rcr
mov
adc
push
dec
repnz
fldl
ja
outsl
sbb
jge
xor
arpl
mov
mov
mov
subl
jl
and
repnz
mov
test
mov
es
push
xor
lret
adc
push
sahf
push
cmp
mov
inc
fs
push
inc
jns
and
jae
dec
rorb
jmp
adc
adc
insb
sti
add
push
push
push
xor
lock
data16
int
push
push
push
add
inc
mov
aaa
int
dec
stos
xor
mov
mov
fwait
sbb
icebp
inc
rcrl
and
ss
xchg
addb
js
sub
add
cmpsl
push
mov
xor
pushf
rorl
pusha
push
xchg
adc
pop
pop
xor
add
sahf
fidivs
loopne
ret
rcrl
push
fidivrs
testb
push
xor
int3
add
aaa
ds
loop
ret
mov
das
xorl
adc
into
or
lret
bound
mov
add
xor
cmp
mov
xor
dec
sub
xor
mov
sub
callw
cmpl
xor
push
shll
rcll
mov
adcb
dec
xor
lea
fldenv
call
jno
adc
loop
push
add
inc
mov
sub
shll
fcoml
or
add
sbb
mov
adc
sub
lods
test
xchg
sahf
mov
and
mov
pushf
pop
add
or
fidivrl
sti
push
gs
or
ss
cmpsl
adc
xor
cmp
inc
rcrb
push
repz
mov
jae
cltd
movsl
sbb
or
bound
in
popf
pop
outsl
push
das
push
add
jnp
mov
imul
sbb
imul
push
add
mov
addb
push
push
adc
pop
mov
sbb
enter
pop
nop
and
push
sub
sub
xchg
xchg
lods
leave
push
mov
pop
jne
push
adc
pop
imul
cld
add
into
lds
decb
ja
testb
sbb
sub
adc
jne
push
decb
mov
popa
addr16
mov
jg
fsubs
sti
mov
add
adc
xor
push
imul
enter
imul
push
jmp
in
fwait
dec
mov
adc
jne,pt
adc
and
pop
dec
add
shlb
or
imul
insb
aas
mov
incl
mov
in
mov
pushf
scas
bound
inc
and
lods
and
cmp
lea
lahf
orl
jl
mov
pop
push
push
xchg
in
add
lds
sbb
push
add
lds
add
add
jne
imul
mov
es
les
jle
clc
test
es
pusha
lcall
or
push
adc
sbbb
jmp
int3
inc
cmc
dec
xor
stc
cmp
pop
aad
jns
push
call
cmc
int
xchg
lea
stos
add
js
test
or
add
or
jne
add
adc
ss
add
mov
jo
js
jecxz
or
add
or
sbb
stos
mov
xor
ret
lods
push
pop
push
cmp
enter
push
ret
inc
xchg
pushf
aam
inc
ret
addb
in
mov
jo
lods
push
pop
sub
adc
jge
mov
pop
push
popf
les
jo
ficoms
inc
pop
cmp
mov
stos
inc
mov
mov
push
testb
adcb
mov
dec
dec
es
adc
inc
mov
fs
dec
sahf
jg
shr
mov
dec
int3
adc
sar
adc
loop
sub
pushf
xchg
lea
lahf
lds
mov
call
xchg
pop
sub
add
fiaddl
xor
push
jne
je
push
adc
sarl
mov
mov
idivb
loopne
dec
aam
push
push
ja
insb
orl
push
push
push
mov
pushf
popa
and
adc
mov
adc
js
xor
sbb
sbb
test
xor
xor
and
dec
hlt
dec
jb
in
ret
jle
pop
std
mov
sub
add
dec
dec
dec
addb
mov
rcll
lods
inc
or
xchg
into
arpl
sub
fdiv
fldcw
pushf
fdiv
loopne
hlt
sbb
ret
pop
inc
imul
sub
dec
lock
out
pop
mov
stos
pop
inc
out
popf
mov
adc
dec
mov
test
cli
and
add
cmp
pop
jo
jne
add
dec
add
scas
pop
movl
pop
adc
mov
mov
lds
lret
jl,pn
xchg
je
fdiv
fcmovu
push
add
sub
jb
fdecstp
jns
out
sub
xchg
sub
leave
jnp
addr16
push
pop
sub
push
int
mov
sysret
dec
sub
cmp
pop
arpl
mov
sysret
pop
repnz
sbb
mov
pop
push
adc
cmc
pop
xchg
clc
mov
jl
jg
mov
shlb
pop
shll
or
or
mov
test
and
daa
insb
dec
xor
adc
nop
enter
out
test
jo
or
push
sbb
add
pop
or
mov
jnp
xchg
mov
aas
je
adcl
popa
rorb
sub
pushf
clc
mov
inc
add
ljmp
xchg
cmp
sub
mov
sub
cwtl
fsubrl
push
rcrb
shrl
div
test
push
jno
xchg
adc
cmp
and
mov
mov
add
sbb
mov
or
sub
repnz
sbb
cmp
sbb
and
lock
movb
lock
int3
add
outsb
repnz
mov
sbb
add
xor
xor
nop
das
sbb
and
cmpsb
push
pop
pop
xor
adc
jo
fcmove
jno
and
nop
or
lods
xor
fists
pop
xor
sub
mov
pop
orb
add
jne
or
pop
pop
add
and
xchg
pop
xor
xor
int3
push
rorb
cs
repnz
inc
push
mov
mov
pop
sbb
jnp
mov
test
loopne
dec
enter
add
sbbl
mov
sbb
dec
loopne
or
sbb
sahf
push
movsb
fcomps
xchg
and
push
mov
xor
ret
pop
arpl
cltd
stos
cmp
ret
add
leave
jg
sub
dec
adc
xchg
inc
mov
adc
inc
jmp
rorl
andb
in
dec
xchg
dec
sbb
shl
xlat
push
shlb
fdivl
push
popa
shll
adc
jge
add
enter
adc
push
adc
rcrl
aas
ficomps
cmpl
cmpl
js
shrb
add
or
mov
popa
push
adc
les
dec
loopne
push
sbb
mov
jg
popf
cmc
ror
mov
push
gs
imul
or
cmpsl
cs
sub
jae
test
xor
push
scas
cmp
idivb
xor
cmpb
popf
xor
xor
cmp
xor
jmp
pop
dec
cmp
sub
dec
pop
or
aam
inc
sub
addb
testb
in
outsl
sub
shlb
adc
lock
xlat
jmp
nop
and
dec
xlat
repnz
lods
pop
js
cltd
mov
push
cltd
or
mov
push
mov
shlb
lock
fisubs
imul
inc
dec
lcall
es
sub
sbb
imul
inc
dec
jge
mov
xchg
ret
shrb
pop
lret
mov
push
loopne
inc
dec
add
mov
dec
pop
sti
adc
jo
add
mov
les
add
nop
nop
xchg
notb
add
gs
fisubrl
das
sbb
push
fdivr
jb
sbb
or
jl
lock
and
mov
and
inc
add
std
xor
pop
lods
lcall
lcall
xor
jne
mov
rorl
add
jg
mov
mov
outsb
pop
hlt
pop
dec
sub
sub
push
lods
mov
clc
mov
dec
lret
negb
sub
insb
sub
and
lods
cmp
sub
call
push
add
insb
xor
xchg
xchg
inc
sbb
inc
push
loope
lret
lods
mov
push
pop
pop
sbb
push
mov
loope
cld
adc
outsb
push
addr16
push
cmp
mov
pop
sbb
cmp
into
mov
nop
dec
dec
test
pop
xchg
and
cmpsl
addb
mov
gs
fcomps
add
or
push
sbb
or
jmp
and
inc
cmp
jl
mov
ficomps
push
push
sub
sbb
add
push
mov
sub
sbb
cmp
mov
add
push
frstor
push
dec
pusha
in
rorb
ret
imul
mov
or
push
ljmp
pushf
stos
test
lea
xor
sbb
cmp
repz
dec
rol
fucomp
sub
stos
pop
add
inc
jbe
icebp
adc
mov
or
adc
xchg
inc
jecxz
or
sbb
sub
jmp
or
lcall
mov
jmp
sbb
out
jle
or
lods
xchg
adc
int
cmp
insb
adc
push
push
push
clc
sub
jnp
xor
cmp
jne
push
hlt
or
fildll
adc
xchg
mov
xchg
and
push
and
push
pop
loop
insb
cwtl
cmp
lods
jne
popf
pop
mov
push
cs
jp
mov
sub
and
in
dec
jecxz
xchg
sub
add
outsl
shrb
jnp
sub
push
out
movl
aam
fcmovbe
add
ds
loopne
decl
mull
aaa
xchg
jno
cmc
dec
add
roll
outsb
ja
pand
sbb
sub
aas
fcomps
movsb
inc
les
shlb
xchg
lods
pop
mov
xchg
outsl
mov
or
aas
cld
push
push
push
nop
adc
popf
arpl
and
movq
int3
add
mov
or
fdivl
add
mov
adc
cmp
in
sbb
cltd
add
and
push
outsl
mov
pop
inc
fldenv
sub
and
push
sub
sub
add
inc
jecxz
adc
jne
inc
mov
testb
sub
clc
es
ret
or
lea
int3
rclb
sub
inc
jecxz
fildll
or
mov
lret
add
dec
repnz
add
dec
push
fdiv
js
leave
add
sarb
dec
test
pop
sahf
push
imul
sub
mov
mov
cmp
aaa
add
adc
xor
adc
push
arpl
ficoml
inc
inc
add
xchg
popa
sbb
push
push
inc
addl
jmp
divl
dec
jne
and
adc
sub
pushf
push
pop
dec
pop
cmp
push
arpl
lcall
add
mov
lods
xchg
push
std
pop
push
add
mov
bound
es
jb
and
fidivrl
push
mov
pop
push
divl
or
ret
jmp
push
dec
or
loop
sub
sbb
adc
scas
or
push
andb
push
jp
pop
dec
ret
xor
and
or
scas
and
fstl
sbb
dec
add
std
or
or
aas
pop
xor
fs
call
ret
sub
fstpt
or
je
ds
insb
mov
and
or
daa
jno
test
pusha
inc
adc
or
mov
sti
pop
in
and
outsb
pusha
jne
in
mov
mov
dec
and
inc
pop
cmc
mov
inc
add
dec
xor
aad
jl
adc
bound
rolb
fcompl
inc
daa
add
dec
add
dec
add
icebp
or
das
movsb
sbb
lea
xchg
sbb
xchg
push
pop
ret
dec
pusha
pusha
or
adc
or
lret
je
andb
xor
test
fadds
and
fxch
aaa
xchg
mov
js
shll
scas
call
rorl
test
jmp
popa
je
mov
clc
dec
pop
fstps
jne
or
cmpb
leave
imul
test
dec
jae
adc
push
jno
dec
js
rorl
lret
pop
pop
out
sbb
or
popf
es
xor
lea
mov
and
mov
push
or
inc
repnz
mov
js
fimuls
in
rclb
mov
add
and
pop
std
lock
sbb
push
add
inc
sbb
orl
or
call
inc
loopne
xor
ret
test
sub
push
push
adcb
cmp
aam
cmpl
adc
out
xchg
adc
xor
loopne
sbb
shl
add
cmp
jecxz
enter
popf
lret
fisubrs
adc
rorb
je
shr
push
jle
jle
in
inc
push
movsl
movsl
icebp
jle
dec
push
push
push
push
repz
andl
cli
push
jg
dec
dec
lcall
out
add
loopne
add
mov
mov
add
out
xor
inc
dec
lea
stos
out
inc
push
ja
adc
mov
lods
xchg
add
or
mov
inc
push
dec
and
mov
cmpl
inc
push
jo
cs
dec
jne
fimull
push
push
jp
add
test
push
pop
test
sub
movsl
hlt
adc
cli
mov
pop
imul
or
sbb
in
mov
push
xlat
inc
sahf
ret
das
add
or
add
ret
mov
sbb
add
inc
dec
mov
push
and
and
lds
inc
push
fwait
dec
or
sbb
mov
pop
mov
sbb
out
jae
xor
fadds
int3
push
and
push
les
js
fucomip
adc
adc
or
jne
xchg
pusha
xchg
sbb
lret
adc
or
je
lcall
aaa
pop
jge
dec
xchg
mov
cmp
jle
andl
movsb
cmp
sbb
andl
pop
jmp
into
sub
sti
mov
popa
and
pop
pop
sub
inc
adc
jne
pushf
mov
frstor
add
adc
lock
test
push
pop
mov
out
cs
pop
jb
adc
inc
dec
inc
cmp
mov
or
iretw
sub
jp
xor
in
mov
lret
push
adc
out
push
leave
lea
adc
pop
or
add
movsl
movsb
jae
adc
mov
jle
std
add
push
jp
push
xlat
jbe
inc
lock
jge
jmp
addr16
sbb
call
je
je
lods
lea
push
or
je
scas
dec
pusha
cmp
mov
inc
push
faddl
xor
mov
adcb
adc
rcr
push
fiaddl
mov
add
push
jge
dec
dec
jne
dec
push
add
in
test
cli
sbb
pop
add
adc
ds
fs
push
outsl
mov
mov
or
and
je
leave
dec
mov
adc
daa
inc
insl
into
vmwrite
dec
mov
aas
inc
popa
dec
insb
jno
lret
sbb
inc
bound
testl
cmp
add
inc
and
mov
stos
and
sbb
add
mov
dec
addr16
stos
push
flds
add
das
mov
fnstcw
imul
add
out
scas
and
inc
mov
mov
mov
insb
or
inc
mov
fimuls
mov
idiv
add
jl
std
add
ljmp
sub
adc
push
add
mov
inc
and
sub
ds
dec
adc
aam
xchg
pop
sbb
inc
sub
imul
insb
repz
pop
pusha
add
fs
lret
pop
and
and
push
loope
add
iret
mov
add
and
cmp
mov
jg
push
push
adc
mov
mov
adc
mov
rorl
clc
push
lahf
loopne
cltd
sub
insb
lods
push
mov
push
xor
push
and
loop
xor
aad
inc
push
and
add
pop
and
addb
and
aaa
out
sar
clc
pop
subb
pop
lea
mov
shr
shl
subb
hlt
cli
or
lea
jne
pop
pusha
mov
xor
cmp
mov
cmp
or
nop
push
dec
clc
int3
sti
push
addb
or
xchg
jmp
call
movsb
pop
std
pop
add
pop
out
push
lea
jnp
es
xchg
push
adcb
fs
add
add
jle
xor
add
loope
icebp
leave
clc
inc
mov
dec
push
shl
dec
jle
mov
push
fadds
fsubl
pop
pop
mov
push
inc
fimull
mov
or
push
loopne
sub
mov
inc
sub
mov
dec
loop
jb
mov
loope
or
add
call
push
sub
xor
push
loope
pop
pop
jl
sub
and
inc
sbb
imul
loopne
leave
cmc
sub
out
sbb
fucomp
cmp
inc
mov
sbb
jge
neg
cmp
jge
mov
out
pop
push
push
fsubs
sahf
pop
dec
jmp
jge
neg
cmp
and
pusha
outsl
dec
in
fnstcw
mov
pushf
xchg
pop
and
inc
jno
pop
sahf
les
test
test
ret
push
push
fwait
jge
pop
nop
ret
mov
or
popa
add
add
dec
or
mov
xor
or
jbe
bound
mov
pop
jge
push
adc
push
adc
fs
push
sbb
jo
cltd
cmp
and
int3
jne
flds
or
adc
cmp
add
lahf
jo,pt
cmpsb
add
enter
cmp
nop
mov
push
push
sbb
xor
dec
scas
inc
mov
into
rcrb
add
lds
sbb
iret
sbb
add
adc
or
fiaddl
xor
jno
jo
sbb
adc
aam
fs
leave
mov
cmp
or
push
addr16
mov
dec
xchg
jecxz
push
fs
jno
pop
pusha
xchg
or
xor
iret
inc
into
push
adc
push
js
rcrl
js
lock
sbb
add
inc
sub
mov
mov
mov
xor
adc
iret
nop
int
inc
je
or
xchg
ret
mov
sbb
cwtl
test
mov
pop
mov
insl
ret
mov
mov
aas
add
mov
inc
jb
loope
mov
mov
cmp
repnz
xor
adc
cmp
xchg
and
sbb
mov
sub
cmp
pop
and
test
add
insb
rolb
push
addr16
je
aaa
dec
sub
clc
push
and
dec
jnp
pusha
push
les
mov
dec
shrb
xor
pop
sub
dec
js
mov
push
fadds
xchg
sbb
ret
xchg
sbb
sbb
xchg
loope
push
cmpsb
inc
push
addr16
hlt
add
push
pop
jle
test
loope
sub
mov
adc
jg
lea
das
insb
xchg
mov
inc
cmp
dec
fstl
add
adc
xchg
ss
roll
loopne
pushf
mov
les
mov
ds
add
or
pop
setp
pusha
pop
inc
lahf
fadds
jp
or
outsb
inc
jo
xchg
mov
xor
add
push
add
cmp
fildl
xor
pop
loop
insb
adc
imul
nop
js
jge
inc
sub
jo
dec
add
pop
gs
cmp
xor
je
aam
add
add
mov
cmc
test
pushf
mov
dec
sbb
jae
dec
and
ds
adc
test
inc
int3
xchg
jns
in
iret
pop
ds
pop
add
pushf
mov
lcall
inc
inc
ret
push
loop
outsb
push
sub
bound
jne
and
lcall
inc
add
loop
popa
push
loopne
inc
pop
sub
loope
push
or
ss
mov
and
scas
adc
in
sub
jo
lds
lea
shl
ret
je
imul
clc
sub
nop
iret
inc
mov
in
ret
xchg
sub
add
cwtl
pushf
into
push
out
mov
xchg
inc
cmp
add
xor
sbb
jmp
and
insb
lock
dec
jg
and
xchg
push
mov
xchg
cmp
or
and
cmp
push
mov
pop
mov
xchg
mov
and
test
dec
cs
outsb
ret
add
lret
jno
insb
cmpl
mov
jl
jns
clc
pop
xchg
push
jmp
push
xchg
imul
std
push
cmpl
jge
inc
gs
fistps
or
cmp
jle
mov
cmp
push
or
lahf
adc
push
add
jmp
lret
add
jg
add
int
add
xor
js
push
lret
adc
dec
add
je
mov
imul
jmp
xchg
push
mov
pop
cmp
js
jne
dec
add
sbb
adcb
insb
xor
pop
inc
xor
das
cmp
lahf
xchg
rolb
push
push
imul
andl
jge
in
jne
and
pusha
ret
mov
shl
dec
out
ja
aam
mov
mov
push
dec
punpckhbw
or
pop
sbb
pop
inc
cmp
out
jle
shl
adc
imul
add
mov
lea
sub
cli
ret
xchg
sbb
xor
test
out
push
add
or
clc
push
push
addl
clc
lds
adc
adc
cmp
push
push
jnp
leave
ficoms
pop
sub
push
aas
xchg
mov
fwait
imul
xchg
int
fs
dec
imul
out
or
cmp
jp
mov
add
pop
sarl
js
jo
inc
add
sbb
add
sarl
mov
sub
and
repnz
in
jns
cwtl
inc
cld
mov
ja
add
push
pop
jl
cld
in
xor
jbe
jmp
bnd
inc
out
scas
jbe
imul
daa
adc
jo
adc
cmp
fistl
fadd
ret
cmp
xor
out
xorb
and
or
add
xor
inc
jb
mov
dec
jns
adc
jmp
aaa
add
andb
or
pop
mov
lea
adcb
add
mulb
xor
repnz
jl
leave
or
mov
inc
dec
inc
cmp
stos
push
xchg
cmp
enter
mov
andl
stos
test
lret
pusha
dec
pop
push
lret
sub
push
adc
push
xlat
bound
pop
jl
ret
sbb
push
xchg
mov
test
loopne
dec
push
popa
cmp
rol
xor
dec
or
and
add
data16
cmp
mov
pop
xchg
jmp
mov
enter
mov
mov
clc
in
cli
scas
lret
testl
jl
std
inc
xchg
mov
out
xor
cmp
mov
stc
inc
and
push
test
sar
add
and
lds
add
pop
out
ret
gs
mov
stos
jmp
ret
imul
mov
push
stc
pop
inc
adcb
xchg
cmp
ljmp
pop
mov
push
ret
push
or
pop
xor
xchg
push
pop
rorb
xchg
pushf
pop
pushf
in
cltd
lea
push
idiv
push
push
les
jo
cltd
sub
iret
pop
pusha
and
inc
fmull
adc
mov
movb
testl
mov
adc
xchg
js
aam
mov
and
sub
xor
mov
adc
add
add
dec
test
add
sub
add
std
rcr
adc
pop
jae
or
fmuls
aad
cmpl
daa
mov
inc
or
mov
lret
das
sub
test
adc
les
sbb
fsub
and
ds
adc
pop
xchg
or
xlat
dec
push
cmp
outsb
pop
sbb
or
xlat
ror
and
adc
fdivrl
and
dec
repnz
jecxz
imul
add
cmp
shll
push
icebp
push
pusha
sbb
inc
adc
outsl
into
fwait
mov
test
insb
and
pushf
xchg
dec
fisttpll
sbb
inc
dec
mov
mov
add
push
and
inc
or
sub
push
push
push
movsl
push
add
insb
add
add
aam
or
adc
or
outsb
and
dec
lods
leave
lds
lock
xchg
adc
stos
test
fwait
mov
pop
add
sbb
push
mov
adc
xlat
cmp
ret
add
jge
dec
mov
arpl
addb
push
fs
push
cmp
add
lret
jp
pop
and
cmc
xchg
push
cmp
fld
out
daa
dec
dec
push
sbb
leave
xchg
adc
sub
pop
push
and
or
pushf
and
js
jge
or
add
popl
adc
sub
mov
out
jg
inc
nop
adc
pop
or
jl
xchg
pop
nop
into
jle
dec
inc
repz
sbb
rolb
cli
or
mov
add
dec
or
mov
add
ret
lret
jp
sahf
push
jmp
fidivrs
shl
sbb
pop
ret
cwtl
pop
xor
jg
sarb
and
add
jecxz
adc
js
stc
xor
movl
push
push
push
cmp
sbb
ror
pop
sub
adc
sti
inc
sub
push
push
jns
adc
mov
js
xorl
xor
sbb
jle
adc
mov
pushf
pop
pusha
adc
es
push
pop
and
jnp
js
js,pt
push
lods
loop
shlb
xor
test
push
mov
jp
pop
and
lret
jp
sti
sahf
jbe
dec
dec
cmp
xor
orb
push
add
cmp
lds
xor
push
mov
push
or
scas
mov
mov
ret
jp
pushf
pop
inc
loop
lods
test
xchg
std
add
mov
stc
sub
pop
lods
inc
add
mov
push
xor
push
shrl
shl
adc
inc
push
adc
orb
gs
cmp
inc
add
dec
jns
and
lea
inc
cli
out
sbb
mov
jmp
and
mov
mov
inc
push
adc
ret
into
scas
and
aam
push
push
mov
clc
clc
mov
popf
jne
xor
and
cmp
iret
cmp
pop
or
inc
cmp
pop
mov
add
sub
mov
and
inc
int3
jnp
jmp
mov
dec
shr
mov
pusha
lret
mov
insl
aam
push
mov
add
or
pop
mov
cmpb
mov
rcll
jmp
xchg
push
cmp
jo
in
xchg
push
dec
sub
xchg
inc
cld
ljmp
add
dec
inc
cmc
push
std
cltd
inc
imul
pop
xor
push
add
outsl
pop
inc
jl
adc
ret
xor
and
test
lea
sub
or
inc
add
add
inc
bnd
inc
sbb
sbb
mov
inc
push
add
fidivs
add
scas
lea
xchg
test
cs
xor
xor
mov
inc
mov
jmp
jmp
adc
ret
ret
cmp
daa
jo
sbb
push
mov
xorl
xchg
mov
push
push
imul
in
jne
lcall
addr16
scas
mov
inc
in
sbb
rcrb
movsl
dec
mov
imul
mov
aam
insb
sbb
test
fimuls
push
sbb
nop
jo
or
sbb
jns
add
mul
xor
int3
in
push
sub
repnz
int3
rorb
add
aad
jns
dec
inc
shl
mov
pop
bound
push
jo
push
cmp
push
push
cwtl
js
or
push
or
jne
outsb
bound
mov
mov
mov
dec
add
andb
sbb
sti
inc
insl
and
jno
add
inc
enter
cmpsl
loopne
add
or
dec
pop
dec
xor
arpl
sbb
cmp
js
cmp
adc
adc
push
adc
sub
cmp
cmp
sbb
sbb
cmpsb
inc
add
push
and
cmp
or
mov
add
mov
test
adc
jo
and
out
push
jg
sbbl
fadd
add
push
dec
lods
sbb
add
sbb
test
xor
cmp
sbb
fwait
icebp
enter
xchg
test
addr16
sub
sbb
cld
push
dec
lds
dec
cmpb
add
mov
loopne
bound
jle
ret
aas
fisubrs
notb
or
ret
or
rclb
push
or
test
call
xchg
cwtl
orl
pop
orb
rolb
call
mov
pop
push
sub
filds
dec
mov
scas
ret
rep
das
jmp
add
inc
lock
mulb
sub
add
dec
pop
cmc
aaa
adcb
inc
add
and
cmp
jmp
push
add
outsl
push
or
mov
adc
inc
push
xlat
cmpsb
sub
cmpsb
ds
mov
add
add
sub
and
fs
push
out
mov
imul
andb
xor
and
dec
roll
jmp
test
dec
sub
and
test
test
sbbb
subb
push
sub
xor
add
dec
inc
sbb
add
shrb
jg
into
mov
sbb
or
mov
in
cld
aaa
jo
push
sbb
and
sub
sbb
daa
xorb
dec
ss
mov
pop
jmp
ja
push
sbb
xlat
fistps
ret
pop
and
sub
movsl
sbb
or
insl
cmp
cld
sbb
insb
inc
cmp
imul
sub
loopne
adc
inc
jecxz
cmp
jno
popf
jae
int3
ret
jns
mov
mov
sbb
sahf
adc
push
ljmp
insb
lahf
arpl
xor
pop
daa
ljmp
push
push
test
cmp
adc
popa
lcall
adc
sahf
dec
lods
push
cmp
rclb
dec
sub
push
or
nop
nop
adc
or
lcall
rcrb
outsb
xchg
add
les
inc
cmp
rcrl
push
xchg
or
push
inc
add
or
pop
andb
cmp
rclb
imul
xchg
push
out
fs
sbb
push
or
cmpsl
in
or
scas
pop
call
rcrb
into
push
sbb
push
and
xchg
cld
adc
adc
fistpl
pop
push
fwait
sub
int
setne
mov
or
or
sub
or
js
cs
mov
add
xchg
pop
arpl
arpl
add
push
arpl
enter
pop
dec
mov
inc
mov
cmp
insl
lret
dec
ja
pop
sub
sub
sub
lret
mov
xor
cmp
cmp
fwait
xor
repnz
push
dec
adc
mov
shll
repz
movsl
sub
xchg
fldt
sbb
lahf
mov
fwait
push
dec
mov
stc
arpl
inc
clc
add
popf
mov
test
cmpsl
push
imul
insb
and
addb
or
sbb
daa
xchg
pop
mov
cmp
sub
addr16
adc
sub
cmp
and
sbb
add
pop
fidivrl
das
cmp
adc
sbbl
mov
imul
adc
pop
jo
loopne
or
imul
repnz
sbb
cmp
lcall
and
and
mov
mov
mov
cmp
fdivrl
pop
add
xchg
xor
scas
and
aam
mov
dec
mov
push
jo
push
xchg
cs
pop
popf
push
xchg
or
mov
in
mov
inc
and
xchg
xchg
xor
pop
icebp
jge
push
adc
pop
call
bound
add
mov
mov
shll
jb
jae
push
data16
sub
mov
jae
xchg
jae
rorb
jb
sbb
push
jp
fcomip
inc
sub
sub
popa
push
mov
or
sbb
and
mov
and
ficoms
fwait
sub
sbb
push
adc
out
mov
out
sbb
lock
push
dec
rcl
daa
cmc
fs
push
or
xadd
adc
cs
scas
aad
inc
mov
push
sbbl
or
out
insl
rcrb
push
mov
inc
insb
inc
pusha
fistps
mov
in
hlt
sub
add
jp
pop
lods
sbb
or
add
mov
inc
or
pop
popa
test
into
and
pop
fwait
mov
ret
jge
mov
jo
test
insl
sub
push
popf
add
mov
jmp
shll
inc
test
xchg
scas
hlt
xchg
sbb
aad
mov
lret
add
dec
sbb
cltd
xor
fmull
adc
sub
push
iret
adc
and
push
out
push
in
je
mov
xchg
pusha
push
pusha
movsb
nop
push
dec
call
inc
sbb
js
inc
insl
mov
or
mov
cwtl
inc
sub
outsl
cmp
push
push
addr16
or
cmp
sub
fidivl
sbb
jl
cmp
ret
imul
ret
leave
cld
inc
je
inc
dec
in
inc
sahf
and
lret
jne
loope
add
inc
lds
xchg
fldenv
lods
mov
int
mov
ret
fisttpll
out
sub
xor
push
push
lret
sub
sub
push
sbb
pushw
inc
cli
adc
push
add
mov
es
fnstsw
lea
movmskps
jmp
add
fs
fiadds
and
rol
sub
adc
call
sub
imul
pop
or
arpl
lret
push
jmp
dec
xor
out
push
inc
push
lea
shl
and
cli
jle
add
lea
jge
fisttpl
sti
out
and
int
stc
or
lret
sbb
mov
out
push
leave
loope
or
mov
cmp
jl
cmp
scas
jmp
and
cmp
jb
push
mov
adc
dec
insl
stos
sbb
popf
sub
movaps
out
sub
in
inc
push
test
push
adc
push
push
adc
push
imul
push
sbb
add
pop
adc
pop
movsb
sbb
jle
push
or
xor
push
outsb
xor
inc
je
cmp
add
outsb
push
pop
pusha
stc
adc
xlat
and
pop
js
je
push
outsl
jmp
adc
mov
negl
clc
dec
or
add
stc
sbb
pop
sub
cmp
pushl
ret
js
lds
push
shl
push
fs
dec
mov
lock
push
xor
cmp
dec
add
adc
push
mov
shrb
add
xor
adc
orl
pop
inc
or
inc
pop
or
nop
xor
lock
inc
fadds
pop
jl
xor
addl
mov
in
push
dec
ret
push
fidivs
sub
jae
and
or
mov
lock
or
or
bound
push
movsl
jo
arpl
in
or
push
dec
fisttpll
adc
cld
jecxz
mov
lea
jo
shll
xchg
add
jp
subl
ds
dec
cmp
add
lock
aad
push
pop
push
add
push
push
jns
sbb
adc
in
es
mov
pop
pop
xchg
iret
and
adc
daa
and
sbb
inc
add
mov
add
adc
pop
cmpsl
push
dec
and
out
lds
inc
addl
add
dec
add
cmp
fbstp
ret
fists
cmp
push
sub
push
lock
test
xor
dec
jle
mov
mov
xor
cmpsb
imul
sub
jae
lea
aas
push
cwtl
pop
jns
mov
push
sbb
mov
int3
add
mov
jne
imul
sub
test
inc
pop
fldl
inc
xlat
jge
mov
add
mov
je
inc
mov
dec
sbb
imul
jmp
lea
rclb
or
incl
push
jmp
stos
push
pop
mov
inc
mov
cmp
icebp
xchg
in
adc
and
push
js
sbb
cmp
add
xchg
mov
inc
and
mov
sub
data16
push
add
cwtl
lret
adc
aas
cmp
pop
adc
idivb
or
cmp
cmp
fstps
jl
add
mov
cmp
jne
pop
and
jne
mov
cs
adc
dec
mov
cmp
inc
or
jbe
add
push
push
xor
or
inc
jne
fwait
sub
add
loopne
int
and
cmp
mov
stc
aaa
repz
not
cmp
add
jne
pop
repnz
sti
add
bound
cmp
sbb
stos
cld
add
push
or
cmp
push
add
rorb
dec
or
pop
orb
jnp
adc
or
add
push
pop
lahf
and
pusha
inc
jne
js
lods
xor
lea
push
jno
or
and
xlat
xor
loopne
lds
xchg
jg
pop
add
or
lret
sarb
jne
dec
aas
cwtl
loope
aam
xor
inc
lcall
xor
lahf
sub
push
out
inc
out
scas
xor
data16
or
adc
fadd
pushf
lods
lds
jle
push
in
nop
stc
sbb
mov
scas
mov
loope
jp
dec
xor
jge
jge
ret
ss
add
push
aaa
sub
daa
sub
out
les
lret
cmp
add
jmp
jb
jge
adc
cmpl
pop
dec
fidivl
jmp
adc
rclb
andb
and
xchg
mov
es
adc
testl
push
int3
push
push
mov
cmp
je
push
cmp
mov
mov
sbb
or
in
imul
and
xlat
add
dec
xor
sar
or
ljmp
mov
or
add
push
adc
mov
cmp
lock
sti
adc
jne
pop
mov
pop
in
pusha
jo
push
lock
sub
clc
pop
mov
push
loopne
mov
subb
sub
add
push
pusha
jne
pushl
shll
fisubs
push
xchg
leave
cmp
mul
jne
or
dec
xchg
adc
lret
mov
outsl
lea
sbb
in
jg
adcb
add
cmpsb
mov
push
push
retw
cmp
inc
cltd
icebp
rorl
in
ljmp
sbb
add
lods
jge
mov
xchg
in
mov
jge
jmp
xchg
xor
fistpll
lcall
jne
je
jecxz
je
mov
mov
add
or
adc
pusha
loopne
daa
addl
mov
nop
xor
movl
and
subl
jmp
inc
jno
das
mov
push
add
adc
push
cmpsl
mov
and
push
mov
xchg
push
je
subb
sbb
cmp
inc
pop
movsb
pop
inc
das
jne
cmp
xor
repz
out
mov
cmp
ret
sub
or
sbb
jge
jno
ja
pop
cmp
cli
cmp
or
pusha
xchg
cmp
bound
iret
xor
push
lret
sub
push
shld
mov
xorl
jbe
lock
push
dec
fdivl
push
outsl
loopne
cmp
pop
jno
cmp
push
mov
push
dec
push
push
addb
mov
outsb
test
inc
adc
or
arpl
je
pop
test
mov
jo
popa
popa
sub
loope
and
adc
incl
rorb
sar
cmp
jg
mov
add
shll
cmpsl
or
xor
jbe
add
xchg
cmpsb
rol
jle
inc
sub
and
inc
adc
fstl
inc
dec
cmp
pop
fldt
clc
inc
clc
ret
loopne
inc
jnp
sbb
fisttpll
sbb
add
mov
sbb
lock
pushf
pop
rol
sbb
cwtl
nop
cmpsb
dec
push
lods
movsb
push
rorb
test
xchg
test
je
test
pop
test
sbb
push
push
popa
push
and
pop
jmp
pop
mov
or
addr16
int3
sbb
orl
shll
mov
cld
jecxz
sbb
xlat
cmp
fmuls
sbb
sbb
test
xlat
fadds
xor
aam
mov
and
ficomps
gs
cs
push
sub
push
push
inc
add
lea
or
scas
rcrb
push
mov
mov
test
push
fmull
or
mov
stos
insl
pop
jbe
sub
and
gs
test
inc
scas
dec
cmc
sbbb
push
outsb
sub
mov
mov
add
das
adc
dec
daa
fldenv
stos
push
iret
ror
adc
mov
inc
xor
jo
dec
or
fwait
add
pop
shrb
nop
xchg
push
js
jge
addl
add
stc
cmp
stos
mov
rcrb
aas
cmpl
xchg
nop
mov
clc
mov
leave
or
pop
loop,pt
mov
add
or
adc
out
pusha
outsl
add
jmp
xor
pop
xor
add
adc
jmp
sub
sbb
inc
push
fisubrl
outsb
cli
push
add
push
add
push
add
or
ret
inc
jmp
jbe
add
pop
xor
into
or
cmp
adc
mov
pusha
mov
loopne
es
out
or
addb
lock
fcoms
pop
or
push
lahf
lock
je
adc
sub
rcrb
ret
push
cmp
fstpl
mov
in
push
inc
cltd
ret
lret
mov
cmpl
call
xchg
or
mov
dec
addr16
movsl
orb
jne
shl
lcall
jnp
mov
lcall
sub
and
inc
and
rorb
mov
xchg
int3
inc
inc
cmp
sub
mov
and
push
jns
sbb
bound
stos
and
pusha
dec
je
ret
cmp
sbb
out
cwtl
dec
sarl
in
jns
sbbb
shrb
jecxz
icebp
push
pop
cmp
aam
adc
inc
cmp
lea
mov
clc
mov
dec
pop
repz
ds
sbb
and
hlt
lods
imul
jle
fimull
cmp
dec
pusha
pop
pop
push
inc
adc
cwtl
push
data16
jge
add
fiadds
das
push
adc
lret
mov
fimull
scas
lcall
sbb
jo
adc
add
jbe
add
lock
jl
add
cs
sub
mov
inc
jp
mov
loopne
test
jmp
into
popf
cmova
addr16
mov
jo
sbb
pop
adc
mov
incl
mov
mov
mov
shl
data16
or
movsl
jo
add
hlt
or
ds
ljmp
mov
ret
cmp
sub
rcrl
sub
pop
and
and
dec
into
ret
outsb
add
ret
jge
ucomiss
push
dec
mov
lcall
push
scas
cmp
add
add
mov
push
call
popf
test
loop
cld
or
movb
dec
jne
jne
and
cmp
shl
std
sbb
adc
dec
lea
inc
push
cmp
stos
add
or
inc
dec
loopne
insb
ljmp
mov
jae
sbb
jmp
cli
movsl
mov
push
sbb
adc
incl
and
xor
cmp
or
clc
inc
je
inc
sbb
fcmovu
sbb
adc
test
xchg
push
xchg
dec
push
fnstenv
pop
jae
inc
push
outsl
push
jecxz
xor
fwait
inc
mov
or
je
sbb
mov
into
shl
vmovsd
idivb
mov
cmp
jbe
cmc
sub
cmp
and
jnp
pop
push
jle
sarb
les
scas
mov
and
push
inc
lret
and
lock
jmp
push
mov
and
into
fs
xchg
loopne
jmp
into
in
and
js
and
jae
ret
pop
adc
subb
sbb
test
xor
ret
out
push
jo
test
sub
hlt
loopne
cmp
push
mov
sub
add
xor
test
jo
or
scas
mov
or
dec
adc
lret
jecxz
les
xchg
ljmp
lock
loop
add
mov
out
pushl
xor
adc
mov
dec
or
push
imul
pop
orl
pop
lds
ss
xor
pop
in
mov
push
adc
xchg
cmpsl
int3
mov
cmp
push
adc
mov
mov
push
push
or
and
lret
sub
scas
jle
dec
call
or
inc
imul
or
pusha
jl
mov
sbb
push
mov
xchg
cwtl
mov
adc
nop
xor
imul
adc
and
jg
cwtl
add
outsb
sub
xlat
mov
push
cmp
sbb
and
and
scas
outsl
lea
inc
outsl
push
pop
sbb
adc
cmp
push
fisubrl
pusha
adc
or
es
test
pop
xor
lods
jg
fidivrl
cmp
js
into
xchg
pop
sub
cmp
imul
ret
sub
movl
rcrl
cmp
inc
stos
add
dec
push
pop
cmp
pop
or
push
inc
je
mov
adc
and
pusha
loop
nop
rorb
out
push
push
jo
bound
into
push
je
fs
cmovnp
sbb
adc
nop
test
cmp
adc
inc
push
popa
mov
lret
in
nop
xchg
cwtl
aaa
cmp
pop
out
add
ret
clc
pop
adc
xor
add
adc
adc
cmpl
xchg
or
add
jge
cmp
repz
or
inc
iret
cmpb
ljmp
or
sbb
loop
pusha
insl
mov
adc
or
or
fisubs
add
jae
lea
test
enter
mov
cmpsl
add
push
outsw
loope
cmpb
jne
mov
push
jb
push
xor
mov
push
sbb
test
mov
cmp
pop
lods
push
push
push
scas
add
loope
jp
insl
cmp
add
fmul
mov
pushf
mov
inc
dec
push
pop
adc
xchg
cwtl
fildl
mov
imul
cmp
sbb
shll
xor
test
addr16
and
xchg
cmp
nop
lcall
mov
das
cmp
jae
mov
out
sbb
push
lea
push
xor
data16
test
mov
add
and
push
test
outsb
xor
mov
or
test
les
fdivl
adc
xor
js
dec
inc
insb
pushf
jl
adc
sub
cmp
dec
shl
sub
stc
and
orl
jmp
push
mov
jbe
adc
sub
out
inc
call
add
or
mov
fmuls
cmpb
inc
cmp
jg
mov
sbbl
sbb
jns
enter
ret
mov
rcrb
or
mov
jns,pt
aas
jns
sbb
add
sbb
ret
adc
and
pusha
jae
mov
push
adc
lcall
lods
jmp
jbe
push
inc
sbb
lret
push
fidivrs
in
mov
test
sbb
pop
or
and
pop
shll
or
imul
push
mov
inc
and
aam
loope
inc
ficoml
add
dec
or
or
or
and
neg
jbe
push
push
mov
add
sbb
jle
mov
stos
jne
rcrb
and
jne
xor
mov
cwtl
adc
jae
sub
and
sub
sub
sbb
or
int3
jae,pt
pop
loop
jne
push
fsubrl
sbb
jle
rol
xchg
sbbb
push
into
pop
dec
data16
xchg
push
js
or
and
adc
insb
je
sahf
loopne
les
and
jge
and
push
add
and
or
sbb
mov
xchg
dec
mov
scas
fstpt
pop
or
xchg
sbbb
jbe
and
sub
lret
ret
jg
cmpsl
mov
mov
and
or
or
push
sbb
add
cwtd
cmp
pop
in
mov
fbstp
inc
or
call
jb
mov
nop
add
pop
add
mov
xchg
sub
add
add
add
movsb
jae
or
nop
xor
popa
jo
mov
ljmp
xchg
jmp
cmp
pop
jle
xor
xor
adc
cmc
cmp
cli
pop
dec
sub
je
icebp
dec
xor
test
orl
cwtl
jne
idivl
or
ja
ss
je
cmp
stos
inc
add
mov
and
rorb
fstps
inc
mov
adc
sub
jmp
mov
xchg
xchg
loopne
dec
fs
xchg
pop
clc
cli
jae
or
test
lods
divb
cld
fwait
adc
xorb
mov
and
out
or
bnd
or
adc
mov
cmp
cld
push
repnz
or
imul
push
push
or
dec
adc
js
dec
ljmp
xor
xor
xchg
xor
push
jno
pop
or
mov
lret
sti
jp
ljmp
inc
cli
dec
jecxz,pn
push
dec
inc
or
push
cmp
dec
cld
outsb
pop
jl
pop
or
adc
push
shrl
shlb
ret
add
mov
pop
mov
in
das
call
pop
mov
mov
and
mov
cmp
movl
add
cmp
mov
add
pushf
xchg
popf
hlt
outsb
mov
push
xor
decl
push
cmp
mov
and
cmp
adc
and
je
scas
adc
mov
loope
and
cli
dec
in
dec
shrl
inc
add
pusha
sbb
lods
rorb
loopne
xchg
out
lods
sbb
xor
mov
test
sti
push
in
cmp
mov
mov
mov
je
sub
pushf
aas
or
imul
xlat
lea
xchg
in
mov
pop
stos
movsl
test
add
aas
cmp
fs
xchg
movsl
rolb
ret
adc
xor
lret
inc
ja
xlat
mov
adc
inc
bound
arpl
adc
jg
das
jne
pop
add
cwtl
push
jmp
and
pusha
and
pop
jb
rcll
cvttps2pi
or
fcmovnb
fsubs
daa
cld
push
sbb
in
xchg
inc
inc
repnz
sub
push
pop
sbb
testb
call
ja
adc
test
adc
incb
cmp
cmp
mov
addl
lock
jne
inc
pop
mov
sti
mov
xor
mov
mov
xor
dec
inc
mov
js
icebp
add
enter
push
jne
adc
mov
sub
jle
add
jbe
cmp
je
mov
mov
movl
cmp
cmp
gs
or
lea
addr16
je
mov
mov
xorb
add
daa
cmpsb
add
divl
fcmovbe
jmp
repz
out
sti
ja
daa
addb
jae
test
jne
sub
lods
incb
loopne
sahf
cld
cmp
add
ds
mov
sub
push
or
mov
mov
jbe
mov
jnp
loopne
fadds
orl
out
pop
add
pop
mov
xlat
std
push
aam
cmp
pop
push
je
cmp
or
or
mov
dec
sbb
xchg
in
cmp
push
jns
pop
sub
shlb
mov
lods
shl
mov
sbb
sbb
ljmp
dec
ss
popa
cltd
pop
bound
inc
add
aam
sub
ja
inc
nop
sbb
mov
xor
push
sbb
add
lock
lds
mov
xorb
xor
es
outsb
dec
sbb
iret
pusha
ret
mov
insl
aas
sbb
pop
push
push
xor
push
pop
test
push
ss
mov
add
pop
mov
call
jecxz
push
push
inc
outsl
inc
enter
cmpsb
sbb
add
or
xor
dec
and
popa
lcall
jle
mov
add
lcall
in
add
cltd
sbb
xor
popa
fdivl
lcall
inc
push
popf
cld
clc
shrb
or
cs
icebp
xor
test
clc
mov
mov
mov
xchg
mov
push
mov
add
lds
jle
das
stos
mov
fstl
es
or
inc
lret
sub
xchg
jb
cs
in
xor
or
dec
enter
push
lea
out
fwait
notb
or
mov
subb
pop
orl
sbb
fiaddl
sbb
xor
in
fcmove
cltd
jb
inc
shrl
adc
sarb
call
mov
cmp
loope
fidivl
mov
sbbb
or
push
lcall
scas
push
lock
fmuls
loop
adc
icebp
inc
orb
mov
push
cmp
das
mov
xor
adcl
sbb
mov
add
stc
outsl
inc
orb
mov
inc
stos
jno
cmovp
or
mov
fadd
outsb
sti
push
push
mov
push
push
inc
inc
or
xchg
das
fadd
add
outsl
shlb
mov
cmp
sub
or
test
push
pusha
mov
rorb
mov
or
mov
push
popf
push
and
add
mov
fistl
push
push
aas
adcb
jle
jnp
pusha
mov
or
stc
inc
sbb
pop
push
add
and
push
pop
sbb
mov
sti
xor
rcll
mov
nop
dec
imul
mov
or
jnp
sbb
jp
ss
jne
rorb
rcll
shrl
nop
mov
push
ljmp
test
lds
inc
and
mov
push
aam
pop
faddl
cmp
mov
and
or
mov
cmpsl
ljmp
inc
xor
mov
sbb
pop
movb
rcll
addb
push
or
test
loope
shr
add
add
xorb
mov
movb
movsb
cwtl
pop
inc
inc
lcall
into
xchg
mov
jp
xchg
jle
add
pop
push
push
test
add
mov
fisubrs
sub
pop
mov
jg
cmp
add
mov
push
inc
sub
pop
mov
or
or
adc
loope
push
inc
popa
jo
int
push
xchg
sub
idiv
push
jns
adcl
mov
roll
fimull
or
fidivrs
mov
insb
je
sub
mov
mov
popf
cli
push
fisttpll
add
lahf
add
pop
or
mov
rcl
or
lret
and
jae
test
lret
arpl
into
inc
pop
imul
sbb
sbb
inc
sbb
sub
dec
pop
cmc
inc
push
lds
xor
loop
add
sbb
inc
mov
stos
and
xchg
or
mov
inc
sysret
lock
mov
xor
in
push
sbb
sbb
jecxz
in
movsb
jbe
loopne
call
bound
rol
push
clc
dec
dec
jne
push
pop
mov
xchg
decl
push
dec
loope
cmp
lea
je
es
xorb
ret
mov
mov
popf
rol
jne
shll
cmp
arpl
ret
dec
and
nop
adc
jmp
js
out
inc
outsl
adc
lret
add
lea
clts
pusha
lea
arpl
sbb
and
xor
mov
int
test
pop
or
mov
outsb
inc
jp
je
push
rcll
pop
out
loope
xchg
bnd
xor
xchg
rcl
movsl
inc
lds
mov
sub
cmp
sbb
dec
inc
xchg
adc
pusha
cmp
or
jle
dec
cmp
jne
adc
test
add
fadds
imul
in
dec
shl
add
aam
mov
cmp
aad
frstor
mov
push
pop
sub
mov
sbb
jne
and
test
out
icebp
adc
xor
rorl
ljmp
or
pop
enter
call
je
push
or
sti
push
xchg
mov
jp
pop
pop
dec
or
dec
cmpsl
dec
jg
xchg
bound
inc
enter
pop
mov
add
push
push
mov
sub
inc
dec
add
cs
jmp
adc
test
mov
push
es
and
daa
adc
arpl
out
ficoml
out
shll
loopne
mov
aad
mov
xchg
add
mov
jg
lea
cmp
mov
ret
inc
cmpsb
or
rcrb
ret
dec
scas
xchg
je
push
dec
xchg
andb
flds
mov
dec
sbb
mov
pop
add
movsl
push
orb
test
mov
pop
cmpsl
lds
push
cmp
int
outsb
or
mov
xor
ret
js
fsubrs
rcrl
fcoml
enter
mov
add
or
push
testb
lock
inc
dec
dec
cmp
xor
xor
mov
cmc
or
push
and
jbe
hlt
mov
pop
sti
inc
lock
lods
mov
sbb
pop
fucomp
xchg
rcr
loopne
cld
or
stos
pop
mov
jne
or
lds
sbb
fisttpl
roll
xchg
sahf
sub
shlb
sub
pushl
mov
mov
gs
mov
out
sub
dec
call
fs
jmp
lret
test
lock
nop
push
push
add
pushf
inc
push
push
mov
push
add
gs
fimull
push
jle
in
add
out
dec
inc
push
sub
adc
jne
ret
push
dec
filds
or
call
mov
ficoml
xchg
repnz
sbb
and
and
mov
cmp
jae
pop
and
mov
dec
or
xchg
sti
and
into
shll
and
jns
jae
xor
fdivl
cmp
scas
aam
and
cmp
and
and
or
in
add
dec
mov
js
inc
add
subl
jns
clc
xchg
ljmp
stc
adc
inc
popf
or
xor
add
inc
xorl
push
xor
xor
mov
rolb
inc
fcompl
cmp
jnp
inc
insb
push
dec
inc
jg
and
idiv
jle
pop
inc
mov
push
push
ret
push
inc
or
loopne
adc
aam
shlb
out
mov
or
pop
xor
xorb
in
arpl
sbbb
jbe
xchg
fwait
and
aas
dec
daa
and
das
filds
inc
dec
test
test
and
ret
cmp
out
dec
jmp
sbb
mov
cltd
push
fwait
add
test
sbb
jge
imul
aaa
sbb
sub
xchg
dec
aaa
pop
or
fstl
lcall
fadd
jle
xchg
pop
in
lods
mov
cmp
sbb
and
fwait
add
add
or
shrb
orl
lea
orl
cmpsb
cmpsb
mov
inc
push
clc
les
movsl
pop
xchg
mov
aaa
and
xor
jge
or
pop
and
popa
adc
shrl
xorl
test
or
sbb
outsb
add
sub
pop
sub
mov
add
or
xor
jmp
cmpsb
xor
movsl
pusha
jo
and
xchg
shlb
inc
cmp
mov
lcall
ret
rorl
cmp
jl
cmpsl
pop
or
lcall
cmp
cli
adc
and
pop
ret
shll
adc
in
insb
or
cmc
or
add
push
call
dec
imul
pop
jge
adc
aam
push
mov
lret
scas
dec
dec
push
mov
rcrb
dec
and
fadds
fs
xor
cmp
inc
jo
push
shll
les
and
loope
dec
sub
je
stos
fnstsw
dec
push
movsb
mov
cmp
jne
pop
and
clc
inc
and
cmp
sbb
jo
adc
sbb
lods
aam
cmp
inc
ret
scas
cmc
lock
xchg
adc
movsb
jae
movsb
add
ficomps
add
pop
adc
or
lahf
jo
ret
jl
xor
cmp
mov
mov
cmc
stc
pop
add
push
cmpsb
ss
ficompl
mov
xchg
out
inc
rcrl
dec
push
sahf
push
jae
mov
mov
int
and
adcl
sbb
jns,pn
enter
sbb
or
xor
aas
sbb
dec
xor
inc
inc
daa
mov
je
push
shll
jb
inc
mov
sub
inc
fs
bnd
jmp
adc
push
mov
loop
cmpl
pop
push
add
clc
xor
movl
int3
ljmp
outsb
adc
jg
subb
cmpsb
pop
xlat
inc
ficoml
stos
mov
xchg
adc
mov
xor
gs
sbb
and
and
lods
fstps
leave
and
and
in
dec
inc
rorl
mov
cmp
mov
or
dec
sbb
pusha
insb
or
rcl
jp
dec
dec
aas
sbb
push
push
adc
pop
xlat
jo
sti
push
dec
fnstenv
push
lods
rcr
jns
and
test
push
adcb
test
xchg
rcl
fsubr
or
lea
push
add
jge
sbb
or
pop
mov
mov
cli
stos
into
adc
sbb
or
xchg
mov
outsb
scas
cmp
pop
sub
pop
cmpsb
in
push
sub
nop
add
add
rorl
sbb
jmp
test
pop
repnz
add
popa
and
push
sub
cwtl
imulb
sbbb
mov
push
xor
lock
add
add
in
insb
xor
inc
daa
in
pop
arpl
insb
mov
std
sbb
jg
cmp
repz
fld
inc
insl
popl
mov
add
inc
loopne
rorb
es
adc
je
push
test
add
pop
pop
push
push
ret
mov
outsb
add
push
jo
push
add
dec
ss
aas
adc
add
adc
imul
jae
test
sub
push
dec
fcmovnu
xor
imul
adcb
sbb
mov
cmp
mov
aam
dec
sar
mov
pop
mov
popf
jmp
or
addr16
jne
sarl
sub
fsubl
in
shrl
pusha
jo
rol
aam
adc
xchg
into
les
mov
fadds
sub
inc
sbb
jne
rcl
pop
mov
mov
dec
adc
enter
cmp
inc
cmpb
ja
ret
add
les
mov
push
ret
dec
or
inc
adc
cmpsl
aad
adc
push
add
popl
adc
or
insl
dec
add
push
lcall
mov
sbb
mov
mov
or
inc
jmp
movsb
inc
xor
pop
adc
test
mov
mov
pop
mov
add
outsl
pop
mov
mov
call
xor
and
pop
push
push
mov
jmp
aam
or
insb
in
sbb
dec
pusha
add
adc
shrl
lea
fsts
mov
stc
shlb
cmp
cld
movsl
andb
sbb
lods
add
add
xchg
clc
dec
mov
jg
pusha
or
dec
rolb
mov
push
cmp
and
insb
push
mov
add
adc
pop
or
inc
adc
test
stos
aad
sti
add
sbb
adcl
rcl
cmp
lret
mov
pop
fcmovbe
push
scas
add
push
and
push
inc
adc
adc
mov
inc
mov
mov
and
dec
jo
js
ljmp
and
out
inc
xchg
leave
fistps
push
jb
cmc
jg
nop
pusha
jo
dec
enter
jae
dec
out
adc
add
dec
aas
dec
sbbl
pushf
mov
push
mov
addb
shl
push
sub
inc
je
pop
inc
push
mov
push
mov
ds
mov
pop
ja
inc
push
loop
ja
or
scas
push
inc
aas
xchg
xor
push
push
push
and
dec
or
cltd
or
sbb
lahf
push
lahf
adc
push
sub
sub
les
mov
out
push
mov
mov
push
mov
adc
or
push
data16
lret
sbb
cmpb
push
inc
mov
jmp
sbb
push
xor
mov
out
push
pushf
lods
pop
rcll
mov
sub
leave
dec
mov
jne
mov
mov
pop
fwait
add
or
adc
sub
cmp
mov
mov
sbb
stos
and
jmp
pop
dec
icebp
push
mov
mov
test
jmp
inc
mov
sub
jecxz
push
mov
fs
pop
jns
push
pop
sub
sub
sbb
mov
repz
push
sbb
sahf
pop
pop
mov
or
outsl
dec
je
sti
sub
lods
sbb
shlb
push
xchg
add
adc
mov
mov
test
int
cmp
pop
jl
xchg
sub
ret
test
inc
or
jb
cmp
fiaddl
mov
rclb
mov
xor
adc
sarl
mov
adc
adc
push
sbb
je
jnp
mov
xor
push
sti
int3
xor
clc
mov
in
and
in
pop
lret
js
xchg
lea
iret
or
enter
inc
lea
push
movb
into
pop
cmp
mov
push
sbb
push
imul
push
adc
fdivs
push
test
outsb
push
adc
repnz
imul
sub
and
push
in
cwtl
and
popa
les
ret
add
test
adc
push
sub
imull
pop
xchg
mov
mov
adc
xchg
push
in
xor
cli
lock
adc
push
lds
leave
mov
lcall
push
movsb
pop
cwtl
movsl
dec
enter
xor
or
jecxz
dec
xlat
dec
enter
adc
inc
out
push
mov
mov
loop
pushf
inc
push
add
rcrb
lret
push
push
loope
aad
stc
out
adc
push
adc
push
sbb
mov
cmp
imul
cmp
or
lods
sub
inc
or
rorl
shll
sbb
addps
in
pop
inc
pop
jle
decl
clc
pop
dec
xor
inc
or
jle
jle
fsubs
or
mov
out
jbe
add
and
adc
push
mov
jmp
decl
mov
or
test
into
jno
mov
lahf
sub
pop
in
xchg
xor
or
sbb
dec
xor
pop
dec
pop
shrl
mov
adc
test
addr16
xchg
and
int3
add
add
cmp
pop
push
fnstsw
cmp
pop
pushw
outsl
dec
pop
jnp
push
es
xchg
sub
mov
fs
push
xchg
stc
jl
sbb
adc
fs
inc
push
adc
adc
jmp
sbb
push
dec
and
push
xor
in
out
adc
sbb
daa
push
sbb
xchg
inc
xor
and
add
or
or
inc
dec
xchg
dec
push
cltd
or
fadds
fstpl
pop
mov
xchg
daa
push
test
fists
add
sbb
ss
daa
add
ja
and
push
adc
addl
loop
stos
xchg
loop
push
sub
pop
pusha
sbbl
jae
es
mov
das
xor
dec
scas
in
xor
in
scas
in
sub
scas
sub
sub
in
sub
in
scas
in
and
scas
and
and
jb
and
jb
push
and
push
push
jb
push
sbb
xor
add
sbb
ret
pop
fiaddl
push
cmp
or
or
pop
xchg
call
and
sbb
sarb
sahf
mov
pop
and
lret
push
test
adc
push
dec
adc
or
push
rolb
leave
leave
leave
adc
lds
or
sbb
loopne
cmp
and
push
movsb
push
cmp
cmp
push
pushf
mov
add
mov
jb
popf
pushf
js
cmp
or
fldt
adc
sub
aas
les
dec
dec
pop
scas
sbbl
add
dec
add
adc
imul
cwtl
or
lcall
sbb
xor
mov
mov
loop
mov
mov
inc
sbb
ss
xchg
mov
ret
lds
xor
inc
add
mov
fst
adc
sbb
ret
mov
mov
fnstsw
test
xchg
lods
mov
and
icebp
jp
xor
xor
mov
adc
les
ret
popf
jge
pop
pop
data16
fimull
imul
rolb
pop
cmp
in
and
cmp
lods
push
shrb
jecxz
pusha
pusha
pusha
mov
rcll
or
sarb
mov
push
or
adc
push
gs
cltd
or
xor
in
je
push
js
push
hlt
hlt
lods
imul
dec
xchg
adc
sbb
iret
sub
pop
sbb
movsb
std
push
xchg
inc
xor
adc
mov
adc
imul
jns
aas
mov
xchg
es
je
leave
or
pop
fdivrl
ljmp
inc
repz
loope
bound
fnstcw
push
mov
xchg
and
and
jnp
jbe
jbe
dec
xchg
les
push
add
cmp
mov
inc
dec
ds
pop
dec
inc
call
xor
push
xchg
push
call
mov
aam
fs
add
out
pop
cli
push
adcb
sub
xchg
iret
call
std
push
inc
fadds
int
inc
sbb
lds
fs
scas
push
ret
mov
ss
loopne
cs
rclb
dec
sub
xor
movsl
sahf
xchg
loopne
lea
cltd
push
lock
xchg
push
ret
add
and
cmp
inc
fs
sbb
dec
mov
adc
and
lods
jno
push
aas
call
and
mov
sbb
jb
fildl
push
mov
mov
pop
cmp
xchg
adc
sahf
add
stos
data16
push
test
clc
shl
movsb
sbb
icebp
cld
xchg
push
stc
fwait
jno
mov
loopne
push
push
sbb
sub
cmpsl
icebp
lea
cmp
ror
ret
xchg
push
and
mov
or
cmp
call
jns
add
or
dec
sub
lea
cmp
xor
fwait
rorb
ret
push
idivb
mov
and
push
and
addb
inc
and
fbld
lods
pop
div
repz
inc
in
or
xor
psraw
sbb
mov
adc
xchg
pop
mov
inc
push
inc
pop
rorl
pushf
dec
sub
jo
add
mov
ja
xor
or
in
or
jge
mov
cmp
ja
pop
lea
mov
cmp
adc
pop
fnsave
cmpb
jmp
pop
cmp
shll
scas
or
aas
push
data16
shrb
and
xor
push
jb
jl
push
inc
jg
xchg
or
add
mov
and
cmp
add
xor
leave
dec
jg
jl
fisttpll
jl
cli
pop
jmp
inc
sbb
mov
jnp
popf
adc
clc
lret
pop
pusha
addr16
addr16
pop
inc
dec
cmp
sub
cli
pusha
dec
inc
dec
cmp
sbb
inc
adc
add
push
pusha
fs
adc
loope
nop
inc
fsubs
mov
mov
cmp
xchg
ret
cmp
add
push
mov
or
sti
pop
add
pop
inc
adc
sti
and
xchg
or
rolb
xorb
ret
or
adc
xchg
out
or
jmp
pop
add
fnstcw
pop
adc
adc
push
and
add
cmp
inc
jmp
xchg
or
mov
mov
xor
adc
dec
mov
jbe
sbb
jns
pop
push
xchg
inc
cmp
lods
add
or
add
mov
out
adc
xchg
data16
pop
mov
sbb
mov
ss
inc
inc
lcall
mov
inc
sbb
adc
jbe
cmp
mov
sbb
mov
loopne
add
cmpb
jg
incb
lock
cmp
mov
sub
and
pop
mov
dec
dec
outsl
jmp
pop
das
sbb
imull
add
fs
cmc
pop
push
repz
inc
cs
je
sbb
and
test
sbb
das
push
daa
mov
push
dec
fiaddl
xor
clc
incl
add
cmpsb
addl
jne
push
or
mov
add
pop
je
lret
sbb
jecxz
inc
jae
ret
insl
ja
and
shl
jg
and
inc
adc
or
xchg
jecxz
jmp
push
mov
out
mov
mov
out
push
dec
adc
cmp
shl
cwtl
push
and
inc
and
rcll
pop
inc
and
out
pop
lahf
roll
mov
mov
inc
xadd
in
ret
xlat
popa
arpl
or
outsl
and
jmp
mov
outsl
dec
inc
or
sbb
clc
sub
std
push
or
push
jl
or
mov
jle
jmp
inc
cmp
xchg
jmp
icebp
and
push
pop
mov
popa
adc
les
into
cltd
jbe
movsb
fidivrl
jnp
shlb
adc
push
adc
pop
push
add
or
push
pop
and
pop
pop
movsb
mov
jl
cmp
jnp
push
mov
adc
pushl
mov
jo
jae
jle
sub
jge
push
mov
push
add
push
test
loope
mov
push
add
or
sbb
add
push
adc
inc
sub
sbb
mov
imul
and
imul
imul
adc
movl
cld
roll
xchg
dec
inc
data16
insl
adc
je
jbe
pushfw
push
mov
mov
pop
test
movsb
pop
pop
sbb
in
dec
movsb
jl,pt
mov
mov
test
mov
inc
pop
movl
mov
data16
sub
insl
insb
or
or
xor
cmp
add
leave
cmp
adc
stos
cmovns
loopne
cmp
cmp
xor
cmp
dec
jnp
filds
dec
test
je
add
adc
shr
test
pop
push
icebp
inc
inc
and
gs
adc
sbb
fcomps
sub
mov
xchg
inc
add
xor
or
fldt
ja
and
sub
clc
das
add
cmp
jne
testl
pop
add
mov
push
or
fcompl
xor
pop
cmp
pop
std
mov
shll
sahf
cmp
cmp
jne
leave
aad
push
jne
mov
add
sahf
cs
inc
jns
mov
outsb
cmpsl
rcl
incl
dec
shrl
mov
add
lods
test
add
or
sbb
add
rcll
add
add
fistpl
adc
testl
sbb
add
xchg
push
stos
lea
pop
rcrl
loop
jns
push
je
and
push
mov
mov
fsubl
xor
and
testb
fcom
loop
mov
in
pop
out
adc
jo
and
sub
dec
mov
xchg
add
lea
sub
jl
lods
dec
or
mov
fstl
movsl
mov
imul
or
push
push
push
out
rcll
pushf
mov
xor
mov
ret
sub
jle
dec
out
xchg
fidivl
lock
ret
mov
test
movsb
arpl
addl
inc
or
inc
fwait
mov
sahf
shll
or
fimuls
ficoms
and
xchg
cmp
shlb
mov
dec
cmp
push
rorb
and
es
inc
push
xor
jle
push
push
xor
adc
jno
cmp
ret
and
es
outsl
jno
leave
dec
popa
ds
xchg
nop
or
gs
sub
ret
movsl
mov
aas
xor
pop
enter
popa
dec
mov
jb
lea
jbe
out
sub
and
inc
and
fmull
popf
add
dec
adc
jmp
sbb
xchg
dec
sti
rcr
test
push
push
movsb
lods
jmp
or
call
ficoml
je
jne
out
lea
sbb
add
sub
ds
jg
fdivrs
dec
fistpll
pop
lret
sub
jl
cmc
push
push
xchg
push
int3
jne
push
stc
mov
pop
cmp
push
push
jl
imul
inc
push
cmpsl
xchg
lods
in
push
je
call
in
push
sbb
jle
int3
push
test
mov
fucomp
xor
dec
xchg
leave
sbb
test
and
add
shrl
sti
jae
push
inc
leave
cli
je
test
test
in
aaa
push
xlat
js
cmp
sub
push
jl
inc
adc
jl
sub
pop
inc
inc
fdivs
imul
or
popa
pop
xor
cmp
and
cltd
rolb
out
wbinvd
sbb
sbb
sub
pusha
push
pop
sbb
aad
pop
inc
inc
cmc
mov
je
push
sub
mov
mov
sub
jbe
mov
lcall
and
cmp
and
rclb
fsubs
enter
loope
adc
pop
jl
or
ret
cmp
incl
loope
add
in
fsubr
xchg
shll
inc
aas
bound
pop
ret
aas
push
dec
jae
movsb
push
insb
idivb
out
movb
imulb
mov
or
push
sbb
inc
inc
push
pop
arpl
or
rcl
adc
xchg
js
sub
push
mov
loop
xlat
or
and
xor
daa
inc
addl
and
add
push
adc
dec
jle
mov
lahf
mov
mov
out
inc
inc
pop
add
xchg
mov
jp
jp
fsubs
test
xchg
pop
imul
test
xchg
mov
add
sub
jmp
addl
push
jmp
loope
or
imul
outsl
cmpb
dec
es
adc
loopne
repz
mov
jns
adc
call
pop
pop
push
pop
nop
dec
sarl
ss
jle
mov
push
pop
mov
and
inc
inc
and
lock
inc
xor
push
push
aad
mov
nop
and
flds
xchg
mov
push
iret
push
add
and
jnp
push
mov
pop
mov
jo
push
mov
nop
push
imul
shr
push
sub
cmp
sbb
and
js
jecxz
add
or
repnz
insl
mov
xchg
pop
xchg
push
fs
sbb
sub
push
mov
imul
cmpsl
xor
jb
pop
sbb
rcrl
nop
sbb
jmp
push
and
and
fidivrs
or
aas
adc
mov
cmp
inc
jo
push
bound
cmp
adc
rcrl
inc
dec
repnz
and
leave
and
or
or
xor
push
adc
jl
cmp
cmp
and
and
shrb
or
fmuls
xchg
stos
je
push
push
inc
subl
push
in
inc
cmp
push
paddq
fiadds
push
push
daa
or
mov
add
dec
or
mov
and
in
adc
and
pushf
or
adc
or
rep
and
add
sub
pop
add
dec
xchg
or
fs
and
insb
mov
addr16
push
push
gs
leave
bndldx
mov
test
adc
rclb
or
sbb
jne
push
xchg
into
and
push
nop
cmp
lods
pop
cmovle
add
imul
movl
mov
mov
mov
adc
sub
mov
push
repnz
sub
ret
cmpsb
out
sbb
sub
fcmovnb
or
jmp
or
mov
test
lahf
jmp
enter
lea
push
add
loopne
mov
inc
cld
inc
jns
dec
push
or
insb
inc
stos
jg
inc
or
stos
cmp
and
dec
jle
cli
cmp
adc
rorl
cmp
bound
and
into
push
pop
jg
sub
fbld
mov
or
loope
out
sbb
or
lret
out
push
cmp
add
inc
pusha
mov
iret
push
push
push
push
sbb
fsubs
xchg
ret
sarl
lcall
mulb
dec
jns
sbb
push
pop
jge
into
adc
clc
dec
mov
mov
movl
std
mov
insb
loop
jl
mov
add
jge
dec
push
je
gs
ja
jmp
bound
xor
pop
xor
xorb
int
repz
leave
ja
push
inc
inc
push
aad
lahf
ljmp
jmp
pop
rorb
add
pop
aas
and
and
or
add
add
sub
add
rolb
push
mov
adc
jmp
nop
cmp
std
dec
insb
dec
push
xlat
cld
out
or
imul
and
pop
imul
fiadds
push
sar
dec
push
rcrb
mov
inc
loope
pop
les
outsl
pusha
loope
je
ficoms
ret
je
inc
shlb
jo
call
scas
mov
call
jns,pn
or
cwtl
xchg
out
mov
sub
dec
test
xchg
adc
mov
push
sarb
or
push
or
and
fsubrp
loopne
dec
mov
mov
add
repz
jecxz
iret
sub
orl
inc
insb
or
push
cltd
mov
bound
add
fcomps
fildll
shll
ret
mov
cmp
movsb
sub
js
dec
inc
movsb
ds
loopne
test
faddp
push
xchg
lahf
mov
xchg
je
fwait
sarb
or
lea
or
in
and
es
xor
dec
inc
cmpsb
loopne
cmp
mov
andl
loope
js
xchg
sti
or
and
repz
test
sbb
in
sbb
sbb
and
ds
dec
sarl
aas
pusha
mov
xor
out
jge
and
cmp
push
xor
push
enter
dec
dec
ss
pop
pop
push
lahf
orb
insb
std
fidivs
dec
xchg
mov
sbb
adcl
mov
fcomps
mov
mov
fnsave
and
dec
sub
adc
xchg
mov
sub
mov
mov
fcomps
pop
loopne
pop
jecxz
das
inc
adc
jb
xchg
add
out
pusha
and
fdivp
dec
and
sub
aam
mov
pusha
sub
pop
lods
mov
inc
sub
pop
adc
push
test
pop
cmp
popa
mov
and
faddl
push
and
mov
xchg
int3
in
push
rcl
push
or
stc
cs
sub
push
cmp
fldenv
insb
push
mov
sbb
orb
inc
pop
jl
fildl
pop
xor
and
pop
push
orps
subb
stos
dec
pop
jns
movsl
jl
sbb
icebp
insb
outsb
popa
push
sub
dec
and
imul
mov
and
sbb
jg
icebp
lock
pop
sti
adc
cmpl
rolb
loop
out
es
pop
orl
pop
and
sbb
rcr
push
and
aad
cmp
pop
inc
pop
in
dec
test
add
inc
daa
push
lock
mov
sub
js
cltd
sub
and
adc
leave
adc
xor
sub
xchg
push
dec
pushf
dec
rcrl
insb
push
jo
cmp
enter
test
addr16
je
add
aas
or
mov
jl
adc
out
fs
es
cmp
add
cmp
and
es
lea
add
mov
ja
mov
lock
icebp
lcall
add
mov
leave
or
mov
loope
fnsave
xchg
add
cmp
lahf
aam
loopne
lea
sbb
fmul
xchg
sbb
xchg
mov
pop
sbb
push
imul
add
popa
rcrl
lahf
call
lock
loop
inc
es
ret
push
decl
mov
and
dec
stc
lods
sbb
sbb
or
dec
cs
bound
push
lret
xchg
pop
test
mov
sub
dec
test
loope
adc
aas
inc
mov
test
repz
cmpsl
push
js
add
push
xchg
dec
stos
daa
outsl
sbb
xchg
sub
negb
cmp
sub
stos
cmp
dec
cmp
inc
dec
fwait
xchg
push
in
enter
push
push
jp
mov
xchg
je
and
mov
ljmp
fisubl
xchg
add
dec
popa
pusha
lahf
xor
leave
nop
ret
scas
inc
test
pusha
roll
ret
jb
cmp
xor
inc
xorb
xchg
add
push
lea
cmp
push
push
push
xchg
or
lds
pop
lock
push
push
inc
filds
loop
movsl
mov
stos
mov
inc
je
shrb
movsb
cltd
sub
push
icebp
mov
js
sub
cmpsl
mov
mov
push
add
nop
out
shrb
in
fs
bound
jle
setp
push
add
mov
sar
int3
aaa
js
call
loop
pop
cmp
and
dec
sbb
andb
ret
je
inc
adcb
sub
ss
sub
in
cmp
les
cmp
notb
imul
mov
lret
aam
xor
rcll
jns
fdiv
add
jbe
jns
lea
sub
pop
rcrb
dec
jae
pop
or
scas
cmp
push
movsb
out
inc
inc
push
dec
push
mov
xchg
add
add
scas
notl
rorb
add
and
out
fcmovnb
stos
outsl
jbe
rclb
rcrl
adc
ret
shll
push
or
dec
adc
adc
data16
lds
lock
mov
xchg
rorl
push
jmp
mov
xchg
movsl
js
jb
sub
adc
xchg
cmp
push
adc
inc
sbb
xor
jns
sti
sub
jns
sbb
sub
dec
fisubs
push
repnz
xor
push
dec
add
aaa
aam
test
push
mov
add
sub
leave
rcrl
push
lcall
or
test
pop
mov
adc
dec
sub
int3
mov
inc
mov
rcrb
xor
push
subb
push
shlb
aad
fs
sbb
mov
test
jne
jnp
mov
sub
mov
das
rclb
cmp
scas
xchg
lods
aam
and
inc
fsubr
call
mov
xchg
pop
push
enter
jbe
or
hlt
cmp
rorb
inc
fucomi
ret
rolb
sub
mov
dec
inc
or
push
pop
mov
push
pusha
cmp
jge
cs
nop
inc
in
or
shr
adc
dec
jl
lea
push
out
dec
sbb
lcall
ret
fiaddl
and
movb
xor
fstpt
hlt
ja
mov
xchg
hlt
or
xchg
popf
loop
xor
mov
push
mov
sub
adc
lret
inc
not
repnz
test
bound
in
outsb
jnp
repz
loopne
fwait
shlb
rorl
mov
mov
push
shrl
ja
fdivrs
cltd
inc
jp
cmpsb
push
push
lret
cmp
mov
jo
or
xchg
decb
cmp
rcr
test
cltd
imul
mov
jl
cmp
mov
sub
jo
inc
sahf
mov
push
insb
test
lea
mov
push
jae
and
inc
push
and
fdivrs
notb
push
or
lock
xor
cmpb
add
add
push
test
dec
pop
and
jmp
pop
cmp
aas
push
ret
xor
sbb
dec
shl
out
nop
loope
push
jmp
pop
test
pop
rorb
fs
push
mov
sbbb
mov
cmp
add
nop
cmpl
call
inc
xchg
push
sbb
pusha
inc
pop
mov
sbbl
mov
jne
arpl
add
push
pop
sub
push
xchg
jae
push
sub
cltd
clc
and
push
jns
sbb
aad
jne
inc
stos
xchg
and
jnp
pop
mov
loop
mov
out
adc
mov
cld
rclb
fs
push
and
cmp
mov
push
icebp
mov
shrb
popa
mov
mov
mov
stos
daa
or
dec
mov
xchg
js
and
cmp
sbb
add
andb
xchg
es
subb
sbb
nop
mov
pusha
lahf
cwtl
in
jmp
testl
or
adc
xchg
mov
xor
bound
leave
enter
in
out
adc
jl
add
sub
fs
cmp
pop
enter
or
or
leave
dec
sbb
add
sbb
movsb
into
sub
xor
sbb
je
in
xchg
test
jb
or
xor
mov
mov
pop
pop
cltd
jae
add
es
js
pop
pop
shlb
sub
and
xchg
jne
cmp
orl
loope
pop
pop
pop
sahf
mov
push
and
sti
scas
gs
je
push
sub
pop
sub
or
test
mov
add
std
inc
mov
shl
mov
mov
push
xor
push
call
xchg
mov
add
cmp
icebp
addl
pop
pop
outsb
dec
sub
or
sub
std
jne
ror
sbb
sub
push
sbb
ret
out
imulb
and
mov
dec
push
cmp
push
fucom
jmp
push
dec
and
sbb
mov
push
or
scas
pusha
pop
inc
pop
mov
stos
push
add
mov
or
test
lods
cmp
pusha
xchg
cmp
pop
loopne
adc
cld
xor
or
add
adc
popa
nop
pop
cmp
add
dec
call
arpl
pusha
adc
loopne
cmpsl
lcall
sub
pop
sub
push
or
sbb
das
inc
add
data16
sub
mov
repnz
rclb
lods
jle
jo
push
ljmp
in
gs
sbb
pop
aas
dec
icebp
pushf
mov
shl
xor
ret
ret
loopne
add
mov
push
xchg
adc
jnp
mov
and
add
cmp
daa
pop
xor
xor
aas
push
in
adc
lods
push
lahf
mov
lret
push
lds
xlat
push
dec
out
ss
dec
inc
in
push
pop
sub
inc
sbb
sbb
sbb
testb
mov
pop
sahf
bound
mov
xor
sub
lahf
cmp
daa
ljmp
push
mov
sub
nop
je
movsl
test
js
adc
inc
or
rclb
addl
and
mov
mov
lahf
mov
insb
push
repnz
jge
sub
divb
jnp
fnstcw
dec
sub
call
pop
or
mov
cmp
je
push
jmp
cmp
push
dec
dec
inc
sbb
mov
and
or
mov
or
insb
cmp
mov
mov
popf
inc
push
xchg
push
xor
mov
mov
pop
pop
dec
insb
cmp
adc
cmp
dec
rolb
adc
shlb
mov
or
push
adc
mov
out
xchg
dec
sahf
or
push
insb
add
pop
or
adc
rorb
ret
out
lret
iretw
out
orl
jg
cmp
add
pop
out
xchg
ja
cmp
push
movsl
jmp
dec
cmp
lcall
mov
pop
and
mov
sbb
push
dec
cmp
add
xor
inc
es
jg
test
sahf
fdecstp
ret
xor
lcall
xchg
mov
call
sti
rcrl
loope
add
mov
popa
test
and
call
pop
sbbb
sbb
adc
pop
add
cmp
dec
fldenv
cmp
dec
or
adc
mov
dec
adc
jge
jl
mov
popa
mov
inc
mov
jecxz
faddl
lea
cmp
sub
mov
pop
repnz
shrb
inc
mov
dec
cs
imul
clc
mov
je
mov
sbb
adc
push
cmpsb
emms
movsl
mov
ret
leave
push
jle
insb
and
inc
mov
rorb
dec
insb
add
mov
xchg
inc
mov
dec
add
hlt
lds
sbb
push
mov
call
push
adc
or
je
inc
test
lea
push
adc
iret
sarl
int3
insb
mov
shll
and
cltd
lret
mov
setl
xchg
arpl
orb
adc
push
sbbb
fwait
or
add
cmpsb
sbb
cmp
pushf
jne
push
mov
or
push
sbb
inc
adc
fnstenv
add
mov
or
shlb
or
mov
test
mov
ret
inc
scas
orl
cmp
dec
push
les
test
dec
rclb
dec
push
mov
lcall
sub
sbb
dec
pop
rol
or
lret
xlat
jo
add
sbb
add
into
rolb
test
add
add
sub
popf
push
bound
hlt
jmp
dec
dec
cmp
or
sub
shll
test
adc
cmp
cmp
push
mov
es
mov
mov
or
push
add
adc
add
pop
inc
sbb
mov
or
sti
add
mov
push
call
add
jge
rcr
push
jg
fdivrs
std
test
out
push
or
bswap
dec
int3
out
pusha
xor
out
enter
enter
hlt
movsl
cmp
cli
mov
ret
loopne
mov
loopne
aas
add
bound
scas
jb
pop
xchg
xor
js
jns
or
mov
je
adc
push
xor
mov
sbb
or
xorb
lahf
sbb
push
shlb
or
hlt
je
fadds
loope
mov
mov
xor
mov
lahf
nop
push
sbb
push
xchg
mov
pop
push
sti
mov
dec
lods
out
dec
cltd
daa
call
psraw
add
cmp
sub
insb
ret
adc
cmpl
mov
jl
push
mov
add
lcall
shl
fnsave
mov
mov
jb
xchg
das
mov
xchg
mov
pop
pusha
mov
mov
jg
movsb
adc
scas
into
neg
push
jecxz
mov
push
jecxz
add
sarb
adc
fdivp
sub
mov
jmp
inc
dec
dec
hlt
enter
aaa
sub
cs
imull
clc
incl
adc
popa
inc
push
fnsave
mov
jbe
cli
add
arpl
add
enter
push
xchg
fs
mov
insb
xchg
push
add
ljmp
dec
fwait
test
cli
in
jecxz
push
cmp
cmp
mov
pop
decb
cmp
adc
cmp
mov
sub
jns
fldpi
jge
push
sbb
sbb
rorb
andl
push
arpl
je
jmp
dec
shll
xchg
xchg
lret
sbb
aas
cmp
cmpsl
fs
inc
rep
movsb
lock
sbb
es
adc
cmp
roll
call
in
cmp
sub
stos
dec
xor
add
jnp
into
jle
roll
jl
jmp
jle
pop
sbb
push
and
dec
push
jb
shlb
in
mov
jp
push
mov
mov
enter
adc
jo
les
add
mov
mov
sarb
enter
call
and
lea
mov
push
dec
push
xchg
inc
cmp
mov
andb
cmp
add
mov
sbb
data16
jg
xchg
pop
add
add
mov
jge
or
pop
pop
mov
aas
sbb
in
pusha
xor
test
pop
in
xor
adc
int
dec
jl
das
add
cmp
rcrl
movb
fildl
or
mov
iret
repnz
pop
cmpsl
dec
jns
mov
jmp
out
mov
outsb
sbb
je
pop
adc
fld
lret
jae
inc
inc
add
jne
jns
pop
pop
stos
dec
xor
mov
dec
push
and
arpl
push
cmpsl
and
test
or
imul
xor
cli
dec
and
pop
popa
and
mov
mov
xchg
rclb
daa
ret
lcall
aas
and
xor
jmp
push
sarl
stos
or
add
enter
push
enter
push
push
enter
add
ret
push
bnd
cmp
add
xchg
dec
clc
mov
jo
subb
fadds
adc
pushf
jmp
cmp
mov
sbb
push
orb
arpl
or
push
cmp
sbb
inc
ljmp
push
push
lds
cmp
push
and
mov
je
adc
clc
sbb
and
sub
jo
push
xlat
mov
jo
loop
xchg
sbb
call
repz
xor
loop
dec
add
mov
mov
jnp
cmp
mov
roll
mov
add
inc
sbb
aaa
fisubrs
adc
mov
jge
jmp
mov
add
int3
mov
or
and
dec
aam
sbb
pop
mov
test
and
or
sub
push
push
sub
cltd
cmp
adc
sbb
aam
xchg
xor
lea
pop
mov
adc
arpl
div
ret
inc
mov
mov
jnp
call
lods
cmpsb
inc
inc
pop
rorl
nop
ret
cmp
in
adc
sub
pop
lret
xchg
lret
pop
cltd
cmp
push
dec
dec
mov
cmp
decb
out
sbb
fiaddl
stos
push
out
sti
adc
roll
mov
push
jmp
sub
xchg
add
mov
lret
push
js
adc
lds
loope,pn
dec
jl
push
jmp
pop
shlb
ret
push
pop
fistpl
sbb
sti
arpl
jo
jbe
pop
dec
mov
lds
clc
pop
sub
sub
rclb
lods
test
and
lods
adcb
xchg
add
add
and
jl
and
lret
jp
sub
lds
lock
out
jmp
inc
xlat
fldl
ret
repz
xchg
dec
clc
pmaxub
push
je
or
lods
add
push
or
aam
push
sub
or
mov
xlat
xor
push
push
sbb
adc
pop
shr
push
or
or
jmp
or
or
add
mov
inc
lea
sub
inc
mov
pop
xlat
orb
and
cmp
dec
in
testb
or
popa
jno
ds
cmp
push
xor
hlt
fiaddl
into
push
adc
and
mov
xchg
xchg
mov
cmp
je
mov
and
add
subl
and
imul
scas
js
pop
jae
fwait
push
push
lcall
adc
push
and
or
xor
dec
inc
xor
xlat
jo
packssdw
xchg
dec
xchg
xor
js
xor
cmp
pop
push
jae
lock
testb
mov
movsl
and
mov
add
dec
mov
lock
repz
xlat
xchg
les
push
push
popf
out
jns
insb
es
rcr
and
pop
test
push
jnp
ret
jmp
push
es
decl
xlat
dec
inc
inc
test
xchg
add
rorb
in
ret
out
scas
push
push
mov
lcall
or
xchg
out
stos
or
nop
dec
dec
movsl
and
pop
sub
js
sub
add
hlt
jmp
mov
lret
rorb
ret
and
sub
and
int3
repz
into
jo
mov
xor
int3
fiaddl
sarl
dec
lea
xchg
imul
pusha
je
fildl
mov
fidivl
inc
pop
fnstsw
jo
sub
jl
jl
jne
fnsave
pop
xorb
xor
push
xor
pop
add
add
jl
push
xlat
fldenv
mov
jp
ss
sbb
cmp
pop
xchg
push
bound
add
jo
cmp
je
std
movsb
fdivs
add
dec
or
jb
sbb
mov
aaa
xchg
xlat
xchg
loop
cltd
mov
adc
mov
int
ret
push
pop
popa
movsb
addb
pushf
int
and
mov
sub
into
push
xchg
popa
adc
xor
or
and
inc
lock
inc
pusha
int
sbb
test
cld
adcb
mov
push
add
sbb
in
adc
daa
adc
popf
loopne
sub
clc
int3
stos
inc
imul
jo
mov
xor
add
cmp
jno
mov
mov
add
stos
sub
or
jne
insb
jne
xor
into
or
push
inc
cs
jne
xchg
jne
lahf
xor
ret
jl
add
xor
hlt
test
jb
cmp
mov
fwait
pop
jl
sbb
aad
mov
add
data16
cs
push
bound
je
push
mov
xor
subl
inc
dec
sub
jecxz
iret
mov
add
pop
lcall
or
fisubrs
xchg
pop
and
je
xor
dec
testl
stos
push
pop
adc
loope
sbb
ret
push
dec
mov
loopne
sbb
adc
adcl
pop
mov
or
cmp
arpl
pop
test
push
or
fdivrl
xchg
negl
push
cmp
sti
pop
cld
pop
or
nop
out
cld
push
cmc
and
movsb
or
mov
add
cs
ret
adc
movsb
rorb
cmp
add
mov
push
push
mov
adc
push
and
xor
sbb
push
dec
loope
imul
xchg
inc
add
xchg
cmpsl
and
sbb
xchg
inc
xor
jnp
adc
pop
or
sbb
push
or
adc
and
mov
xchg
sbb
adc
sbbb
aam
or
lock
cmpsb
and
dec
ret
sbb
lds
dec
add
sub
nop
and
sbb
cltd
test
push
sbb
mov
sbb
add
pop
inc
or
push
cwtl
cmp
add
dec
je
push
cmp
jge
xchg
jne
push
ffreep
rorl
aam
cmp
dec
addb
arpl
loope
sub
loope
jbe
iret
cmp
roll
fbld
push
jns
or
push
rcl
call
out
es
pop
imull
inc
mov
mov
cmp
and
pop
push
repnz
fisubs
pusha
inc
dec
push
and
in
xchg
add
xor
mov
mov
ret
xchg
jb
inc
adc
adc
cmpsl
xchg
scas
dec
pop
stos
or
test
pop
dec
jg
hlt
sub
mov
incb
push
and
adc
xor
fsubrp
add
or
sub
adc
mov
js
sub
rclb
adc
arpl
sub
mov
xchg
out
push
ret
enter
and
or
addl
xchg
jl
xchg
out
outsl
pop
aam
push
arpl
or
xchg
shll
mov
nop
xor
xchg
xor
adc
sbb
sbb
mov
inc
ja
adc
lods
mov
pushf
ret
lret
sub
add
cmp
xor
push
inc
sub
push
inc
pusha
sub
popf
adc
addr16
add
lea
push
loope
cmpb
pushf
push
fwait
repz
jne
or
or
mov
sub
or
add
jl
cmp
jl
cmp
push
jle
cmp
jl
cmp
add
add
orb
sub
or
loopne
jl
js
cmp
repnz
lea
mov
out
call
xor
or
lahf
sbb
jmp
inc
adcb
pop
sbb
push
cmpsb
push
or
sbb
push
dec
sbb
shll
pop
add
lods
leave
and
sub
inc
xorb
ss
outsb
xor
and
and
and
in
je
adc
je
or
je
sub
je
fwait
fwait
fwait
inc
and
je
and
jne
andl
jb
jecxz
and
sbb
mov
push
cmp
dec
pop
inc
rcl
pop
jnp
dec
sub
and
or
lret
xor
out
sub
mov
push
mov
push
mov
dec
sub
and
imul
pop
sub
inc
fistps
xor
adc
inc
pop
sub
scas
imull
adcl
adc
xor
in
movb
add
cmp
sbb
inc
sub
test
cmp
imul
out
pop
add
cmpsb
mov
lods
xor
dec
inc
xor
enter
mov
adc
fmuls
fld
push
dec
arpl
scas
or
gs
and
sbb
push
jmp
inc
cmp
addr16
push
jmp
das
je
outsl
imul
test
scas
push
roll
aad
mov
popa
dec
inc
and
or
add
decb
push
or
adc
nop
xor
out
push
enter
insl
xchg
inc
inc
xor
rorl
push
cmp
lods
push
dec
negl
adc
sbb
adc
mov
cmp
jecxz
sub
push
cmp
push
sub
test
jmp
and
mov
add
clc
push
xor
add
or
sub
adc
and
mov
xchg
inc
ret
xor
sbb
js
inc
jmp
xchg
xchg
shlb
adc
inc
inc
pop
je
in
ficomps
test
adc
callw
js
iret
mov
mov
cmp
cltd
sbb
cwtl
mov
sub
sub
cltd
jmp
pusha
adc
mov
pop
pop
mov
push
sbb
sub
xor
movsb
or
mov
sub
jmp
add
pop
cmp
aam
imul
mov
sub
xchg
mov
mov
and
fucom
popf
xchg
ss
cmp
mov
jge
out
sub
add
inc
add
dec
pop
cmp
mov
in
stc
jl
add
test
push
dec
adc
xor
add
mov
cld
mov
mov
or
ss
fnstenv
jg
dec
or
shr
pusha
mov
push
leave
popa
xor
stos
mov
add
push
sub
rorb
push
jmp
out
inc
aaa
jo
adc
mov
jecxz
sbb
arpl
rcr
sub
jge
outsb
and
jge
enter
test
dec
push
in
pop
ret
sbb
jmp
repz
pusha
push
movsb
jp
pop
push
dec
test
xchg
ljmp
movl
xor
jo
ret
popa
and
jl
or
testb
or
mov
and
cmc
xor
or
inc
or
mov
mov
fwait
or
or
pusha
add
test
add
xchg
dec
inc
rolb
dec
rorl
cs
dec
xchg
push
xor
inc
or
dec
pop
imul
sub
dec
cmp
xor
gs
mov
dec
leave
imul
and
jecxz
mov
push
je
test
dec
push
push
and
xlat
jge
insb
mov
inc
sub
mov
dec
pop
dec
adc
out
xor
adc
inc
ret
sahf
mov
adc
hlt
adc
ret
or
and
rcr
ret
jge
dec
inc
fcoms
cmc
add
flds
int
lea
sbb
dec
mov
addr16
test
and
jbe
push
adc
sbb
hlt
and
icebp
push
outsb
outsb
out
ficomps
inc
sub
neg
pop
notb
or
jp
xchg
test
pop
cmp
jae
xchg
mov
fmuls
in
adcb
cmp
scas
xchg
gs
in
insb
xor
jecxz
dec
inc
and
or
and
push
dec
sbb
and
aam
enter
jbe
sub
xor
push
int3
add
jno
and
mov
add
push
sbb
jo
push
xchg
mov
cmpsb
jecxz
jecxz
lea
ljmp
rcrb
push
adc
inc
jecxz
cmpsb
mov
jmp
or
jl
sbb
insb
jbe
lods
jge
mov
jge
shlb
in
in
movsb
sub
push
mov
pop
dec
push
push
xchg
and
push
xor
push
inc
daa
adc
lahf
adc
jo
cmp
add
xchg
inc
mov
scas
int3
xor
or
inc
test
adc
and
shrb
mov
cli
mov
cmp
and
test
xor
ss
sbb
lock
movl
dec
ret
push
sahf
add
or
sub
jmp
mov
div
stc
jecxz
jmp
faddp
push
fnstcw
clc
fwait
and
imul
add
mov
push
pop
jp
push
nop
add
pop
mov
push
fwait
push
loop
mov
lock
lret
test
fnstsw
pop
pop
das
xchg
ret
test
shlb
test
cmp
mov
mov
jno
ds
jle
xchg
and
xor
mov
rclb
es
jmp
js,pn
jno
xor
pop
push
cmp
adc
add
notb
ret
into
or
adc
push
cld
pusha
sti
je
jmp
sbb
add
jne
cmp
xorw
sbb
xor
leave
loopne
mov
mov
adc
cmpl
pop
pop
pop
leave
and
fistpl
inc
dec
outsl
mov
add
je
push
and
inc
xor
add
xor
ret
in
sub
jnp
sahf
enter
sti
test
adc
dec
movsl
xor
xchg
mov
mov
adc
push
and
and
xor
inc
adc
sbb
mov
insb
cmc
jmp
orl
jl
jge
scas
sbbl
dec
sbb
rorb
jp
loopne
jl
nop
push
sub
mov
mov
push
mov
sub
pop
mov
call
lcall
das
loope
inc
pop
sbb
pop
add
jmp
add
or
sbb
push
loopne
inc
cmpl
cwtl
pop
movsb
xor
jo
sub
push
test
and
repnz
iret
xchg
mov
ret
add
mov
test
outsb
adc
nop
mov
scas
push
cmp
dec
imul
pop
sub
adc
test
pop
adcl
nop
orb
test
or
push
mov
dec
mov
negl
jb
ljmp
loope
jl
js
jmp
jp
fimull
arpl
or
add
push
loop
push
or
lock
mov
dec
loope
dec
jl
stos
cmpsl
push
mov
xor
jbe
rorl
fistl
pop
rcrl
sbb
mov
popa
and
or
and
push
scas
dec
push
dec
test
adc
jns
adc
ret
push
xchg
mov
cld
push
cmp
push
je
adc
les
out
mov
push
or
ss
or
negb
test
sub
and
pop
push
or
push
shlb
dec
push
add
jno
test
cmp
ds
and
lea
xchg
push
or
fxch
cmp
or
sahf
and
fucomp
sbbb
out
push
cmp
cli
inc
jmp
jbe
add
ja
xchg
sbb
dec
lahf
sbb
gs
xchg
adc
sub
xor
pop
add
mov
add
ret
push
push
push
and
movsl
inc
pop
loop
fstpl
push
int
inc
jno
nop
mov
dec
fbld
out
ljmp
and
sti
fwait
sbb
push
mov
cmp
subl
ja
fs
pop
or
orb
sbb
pop
insl
loopne
jmp
pop
shlb
fadd
add
add
cmpl
add
scas
je
dec
jo
aam
mov
inc
or
int
dec
jmp
pop
jge
lcall
faddl
popa
and
pop
ja
fistpll
sub
push
jno
inc
fsubrs
or
mov
aaa
add
cmp
mov
mov
sub
insb
or
and
insb
pop
or
xchg
shlb
xchg
mov
sbb
jecxz
sti
loop
mov
lcall
cli
add
pop
sbbb
sbb
mov
pop
xchg
fisttps
fbld
or
movl
and
fnstenv
pop
add
cmc
sbb
push
xor
mov
es
rol
imul
fwait
mov
push
sbb
mov
and
insb
and
je
adc
add
push
adc
pop
inc
dec
shlb
add
aaa
jle
je
negb
jns
sbb
dec
add
sbb
xor
or
push
sbb
lods
fs
or
xorl
adc
sbb
je
dec
imul
int3
shlb
xor
sbb
repnz
data16
sbb
adc
loop
nop
mov
push
push
push
sbb
test
mov
add
in
mov
fisubrs
lods
cmp
mov
adc
popa
lods
and
shll
inc
scas
sub
add
dec
mov
jnp
inc
inc
push
pop
pop
arpl
je
add
enter
push
and
dec
mov
adc
push
pop
negl
sub
and
out
jecxz
rclb
jne
es
jmp
mov
mov
pushf
jbe
pop
mov
ret
test
push
adc
mov
dec
sahf
push
push
cmp
cmp
xor
repnz
push
ret
sbb
mov
fidivrl
adc
add
jg
inc
jo
lds
les
je
push
stos
jne
jno
dec
dec
sub
push
popl
gs
xchg
add
nop
add
lret
test
push
lock
cmpsb
fadds
roll
add
sub
xor
mov
adc
adc
mov
scas
push
sub
arpl
lahf
insb
xchg
imul
sub
sbb
jge
cs
xchg
push
out
add
mov
pop
push
rcll
cmpsl
movsb
dec
jmp
add
sub
ljmp
add
mov
fwait
cmp
inc
jp
xchg
inc
dec
add
outsb
orb
lea
sub
daa
lock
adc
mov
pop
jmp
ss
or
movsb
dec
mov
xchg
dec
xchg
mov
dec
stos
sub
xor
sbb
cli
mov
ljmp
mov
jnp
mov
xor
mov
xor
ret
xor
add
push
leave
adc
inc
jno
inc
push
lcall
insb
loopne
dec
xchg
mov
nop
mov
or
xchg
aam
shll
jne
mov
add
push
mov
movsl
push
sub
sti
ljmp
push
push
test
adc
adc
inc
out
adc
outsb
pop
out
add
xchg
pop
jecxz
pop
ret
aad
jns
adcl
sub
cmpb
jo
cmp
rcll
and
dec
inc
je
ljmp
dec
roll
out
inc
pop
lock
mov
fcmovnb
push
rcl
xor
or
xchg
clc
and
xchg
mov
mov
add
mov
push
mov
pop
add
add
adc
repz
push
sub
js
ss
dec
sub
les
aam
negb
in
fmull
mov
dec
push
push
lcall
mov
les
je
add
jbe
aaa
add
lods
mov
pop
jmp
and
mov
jno
cmp
popa
pop
cs
add
jmp
cmp
pop
fld1
xchg
or
or
lds
shrl
mov
sbb
xor
in
sub
dec
enter
xor
xor
dec
loopne
dec
or
ss
add
loope
push
gs
dec
xchg
mov
sub
xorl
call
js
das
and
jle
out
mov
fnstcw
in
mov
mov
call
repz
add
adc
jno
test
rcrl
sbb
dec
icebp
adc
daa
push
jecxz
dec
lods
cmp
add
fbld
dec
outsb
jle
cmp
pop
insl
fldcw
loopne
int
cmp
xchg
pop
pop
fucom
pop
sub
ljmp
adc
addr16
and
test
adc
orb
lea
inc
idivb
or
jbe
call
arpl
mov
xchg
jns
dec
ljmp
bnd
cmc
jo
das
push
hlt
imul
rorb
fmull
adc
adc
push
das
push
xor
mov
lret
push
jl
push
and
and
cmp
dec
subb
cltd
mov
repnz
jge
push
cmp
shrb
loope
mov
sbb
or
dec
jo
pop
push
lock
adc
add
push
js
mov
push
push
push
mov
xor
clc
outsl
pop
adc
test
sub
mov
mov
mov
jp
jle
int
test
push
add
pop
ret
int
push
neg
sbb
jmp
sbb
or
das
push
push
dec
leave
adc
leave
sbb
rcrb
cld
push
jae
nop
cli
pop
sub
insl
add
add
add
cld
sub
mov
in
or
sub
jnp
push
out
adc
jl
imul
mov
pop
jp
mov
outsl
mov
mov
sahf
mov
and
sub
flds
into
adcb
int3
imul
xor
dec
mov
and
test
sbb
out
sbb
sbb
lcall
and
lahf
xor
and
jmp
test
test
jecxz
or
mov
ds
lret
ret
and
mov
push
dec
cmpsl
and
jo
test
adc
inc
adc
inc
sub
push
mov
je
nop
mov
jl
mov
mov
int
ss
jg
add
inc
imul
adc
je
jmp
push
adc
enter
add
mov
pop
clc
or
iret
enter
or
enter
or
or
inc
or
iret
or
call
icebp
push
xchg
es
jle
aaa
test
pop
pop
pop
arpl
loop
cmp
or
gs
sub
add
incl
add
fwait
jg
push
adc
sub
addl
xchg
pop
sbb
mov
loopne
mov
jbe
stos
sahf
gs
lea
inc
pop
inc
or
adc
insl
incl
or
loopne
xchg
jne
push
in
add
adc
push
mov
mov
imul
cs
ja
sub
dec
daa
cmp
adc
mov
push
ret
push
inc
or
mov
test
ss
dec
push
sbb
or
dec
jg
in
jecxz
or
xor
imul
add
mov
or
push
mov
jo
jg
je
mov
dec
mov
and
sub
dec
dec
imul
inc
lea
shrl
xchg
or
cmp
daa
orb
xchg
aas
jne
adc
mov
inc
es
inc
mov
adc
adc
cmp
mov
mov
sarb
jl
repz
mov
aas
xchg
fisubs
lret
mov
mov
out
aas
enter
mov
add
or
or
add
sbb
or
mov
das
ret
sbb
sbb
mov
jg
test
incl
icebp
or
je
repz
addr16
leave
lock
inc
scas
mov
sbb
add
and
stc
mov
popf
insb
cmp
mov
ret
and
je,pt
jne
lds
sbbb
and
add
cmp
jecxz
adc
ret
pop
or
ret
mov
and
mov
sub
mov
mov
sbb
adc
adc
lods
or
mov
mov
add
mov
mov
add
adc
xor
or
fisttpl
fsubs
pop
adc
lea
imul
test
sbb
movsl
jp
dec
add
into
sbb
push
xor
gs
or
push
ja
or
jne
adc
jl
mov
cmp
xor
push
mov
sbb
inc
jg
cmp
loop
push
cmp
push
scas
cmp
call
add
aam
inc
gs
jne
out
lods
mov
mov
inc
faddl
mov
push
push
loope
and
mov
mov
cmc
inc
fadds
movb
xchg
lea
mov
fnstsw
adc
aad
in
sbb
mov
cmc
xchg
aad
push
xchg
xchg
ss
fsub
test
aas
push
mov
pushf
test
mov
cmc
push
and
jo
sub
test
push
xchg
xchg
push
inc
test
fs
xchg
rclb
add
scas
rclb
push
or
inc
inc
aad
shlb
mov
arpl
pop
sub
push
scas
inc
pusha
test
and
cmovl
mov
push
outsb
iret
lret
or
inc
add
int3
ret
xor
ret
xchg
or
call
jl
sbb
enter
fcmovbe
push
push
js
add
xor
cli
pop
iret
clc
add
pop
pop
cmp
rcr
and
ret
mov
lea
fmuls
loope
or
dec
push
push
subl
inc
mov
mov
push
mov
pop
bound
or
push
pop
insl
mov
jnp
mov
cmp
sub
or
mov
ds
mov
adc
bound
inc
pop
xor
jae
ffreep
jp
jecxz
lock
push
jl
cld
out
loopne
pushf
addb
std
inc
add
push
inc
mov
rcll
jp
mov
in
call
lea
push
rep
xor
xchg
cmp
push
inc
inc
push
or
xchg
cs
sub
aad
adc
mov
imul
fiadds
popw
leave
add
mov
add
dec
add
push
inc
in
fbld
push
mov
sbb
sarl
add
sbb
lds
dec
sub
jle
or
push
mov
lods
xchg
xor
or
rclb
sub
cmp
push
or
test
out
jp
xorb
inc
add
sbb
jmp
mov
adc
push
shrl
sub
jo
mull
shl
dec
inc
xor
add
pop
call
insl
imul
jae
out
inc
jb
add
or
adc
xchg
cmc
in
std
lcall
outsl
out
rorb
push
test
js
push
push
pop
or
or
loopne
ds
jbe
mov
push
clc
adc
mov
lea
and
push
mov
adc
mov
in
or
ud1
mov
loope
xor
adc
adc
dec
mov
inc
xchg
sbb
in
loop
clc
lea
movl
cli
mov
jo
inc
pop
and
shl
jp
or
jle
dec
sbb
dec
popa
mov
xor
push
mov
sbb
jmp
mov
adc
or
rclb
test
xor
rcr
fiaddl
rcl
mov
push
ja
icebp
add
ret
mov
je
and
mov
inc
lods
out
add
sbb
push
arpl
mov
jbe
mov
push
adc
roll
sbbl
cmp
xchg
jp
push
mov
decb
or
push
imull
add
jmp
int
mov
xchg
sub
pop
cmp
add
mov
mov
mov
sbbl
adc
loopne
insb
or
je
and
test
jge
push
jle
clc
imul
and
jne
mov
fnstsw
call
mov
pusha
pop
les
dec
xlat
mov
push
mov
xor
cmpsb
aaa
sbb
push
mov
sbb
enter
push
push
push
xor
test
push
subl
pop
or
jmp
and
sarb
mov
push
xchg
xchg
sub
jne
jne
mov
nop
adc
ficoml
out
xchg
jge
addl
fadds
ds
dec
lock
ret
pop
add
sub
or
mov
lock
mov
inc
test
in
lods
push
dec
enter
scas
not
addb
push
cmp
cs
out
and
nop
push
into
cwtl
mov
fisubrs
cs
cmp
repnz
sub
push
pop
inc
mov
or
mov
ss
test
inc
jmp
mov
push
inc
dec
pop
aad
push
push
out
lret
cli
xor
and
pop
xchg
pusha
and
mov
pop
xchg
pusha
or
push
mov
cwtl
push
imul
fmuls
xor
inc
std
mov
pop
and
mov
and
ljmp
test
add
daa
and
bound
ljmp
lahf
pop
lock
mov
les
mov
stc
adc
sbb
or
mov
je
dec
imul
dec
adc
sbbb
test
out
inc
sub
xor
mov
add
sub
sub
imul
lahf
sub
pop
or
push
and
inc
sub
and
aas
addl
call
mov
xor
iret
dec
push
cmp
popa
xchg
jb
push
adc
jno
cmp
xchg
jno
test
sbb
in
fsubr
inc
pop
xor
lods
dec
loopne
dec
dec
fsubl
lahf
js
sbb
cmc
inc
rorb
mov
push
test
inc
loope
dec
adc
icebp
shlb
in
xchg
lret
pusha
stos
inc
dec
or
inc
add
movsb
aaa
inc
movsb
or
xor
or
popa
fwait
sub
xlat
jns
add
xlat
shll
mov
cmp
je
aad
pusha
mov
adc
add
mov
push
clc
add
aas
xor
and
lds
sub
bound
adc
or
incl
or
dec
push
call
outsl
dec
push
into
sbb
fsubs
mov
dec
adc
and
inc
jb
inc
sub
in
push
xor
add
test
dec
add
aaa
sbb
stc
clc
add
pop
ret
and
adc
push
cmp
mov
arpl
push
loopne
sub
popl
xchg
add
lods
sbb
inc
lret
xchg
int3
lahf
mov
inc
push
cmp
xchg
jno
mov
mov
mov
cmp
mov
adc
mov
imul
fdivs
mov
dec
sub
push
fmul
dec
sbb
sub
mov
es
mov
add
dec
test
or
addl
shlb
cld
push
inc
sub
ficoms
push
ret
fwait
rclb
xlat
jo
xor
fadds
sbb
inc
mov
mov
mov
in
mov
into
pop
popa
pop
add
testb
mov
push
push
aam
mov
orb
mov
xor
fidivs
xchg
fldlg2
sub
fcomp
xor
push
or
mov
fbstp
imul
loopne
pop
jbe
push
adc
dec
cmpb
fmuls
popl
sbb
orb
js
lea
ss
pop
jl
mov
test
jp
popf
jecxz
jo
push
and
sbb
push
push
enter
mov
cmp
push
add
addb
adc
xchg
imul
lods
cld
popf
inc
push
adc
xor
inc
inc
insb
insb
pop
push
pop
push
in
jecxz
lret
add
or
xor
dec
or
les
lods
adc
repnz
les
lea
out
aam
push
ficoml
jg
cmp
jne
sub
cld
pop
xchg
lea
mov
or
sbb
shlb
or
adc
outsb
fistl
inc
loopne
push
adc
mov
mov
add
jae
or
inc
prefetch
test
cmc
bound
ret
xchg
stos
or
loopne
sbb
pop
and
dec
push
jmp
mov
movsl
imul
outsl
push
cmpsl
je
inc
fadd
inc
cs
add
sbb
pusha
call
faddl
mov
int
in
cmp
adc
pop
xor
jle
dec
ficoml
mov
cmp
sbb
pop
mov
add
out
cs
cmpsb
add
mov
or
jge
mov
outsl
inc
push
dec
mov
xlat
or
lahf
xchg
push
and
bound
jmp
lods
loopne
push
nop
xchg
add
dec
fcompl
push
loop
cmp
inc
mov
fdivs
push
mov
in
mov
or
sub
cwtl
mov
mov
add
mov
mov
inc
adc
dec
aam
test
push
dec
test
lods
pop
adc
add
xchg
dec
je
cmp
mov
call
xor
pop
fidivl
insl
or
push
dec
adc
adc
adcl
lret
or
shrb
add
in
inc
sbb
xchg
jno
popa
aam
aas
and
int3
mov
push
int3
sub
inc
mov
jne
xchg
addb
shlb
xor
ret
push
cmp
rcll
push
push
cmp
and
dec
fisttps
jb
and
mov
add
lahf
xchg
in
push
cmp
insl
mov
movsl
xor
test
cmp
cmp
inc
lcall
cmpsl
mov
push
inc
sub
lret
repz
and
mov
jg
sbb
mov
fcomps
inc
or
ja
cs
jge
add
fldl
fcoml
sbb
add
mov
mov
andl
cli
sbb
jmp
jb
xorb
fldl
adc
loope
mov
push
rol
jp
outsb
sub
in
jns
and
jmp
or
add
emms
dec
jb
cmp
sbb
fdivr
push
out
in
mov
xor
cmp
add
add
mov
sub
push
insb
inc
xor
and
jl
aas
pop
lcall
xor
pop
jp
nop
stc
adc
cmp
mov
cmp
push
jae
out
ds
leave
repnz
jnp
nop
pop
sbb
pop
sub
lea
mov
imul
jne
testb
pop
inc
inc
adc
jb
shlb
pop
mov
adc
pop
pusha
pop
loop
adc
sarl
mov
test
xchg
mov
shrl
outsl
pop
data16
aas
cmp
push
cmp
push
fwait
mov
lods
or
pusha
and
rolb
sub
test
dec
sub
das
cld
inc
pushl
lea
add
cmp
and
inc
pop
lret
andl
sbb
mov
mov
xchg
test
pop
sar
add
and
adc
data16
cmp
and
push
cmp
jb
cmp
sub
or
loopne
push
lret
ror
xlat
add
enter
lods
lods
imul
fcmovb
sub
cmp
test
test
loopne
call
imul
adc
and
push
ja
dec
shl
sub
rclb
jns
and
pop
sbb
inc
out
call
fcomi
lcall
inc
sbb
cli
leave
cli
repz
pop
push
test
push
js
mov
push
cmp
dec
mov
mov
icebp
mov
push
pushf
jp
mov
push
clc
mov
ret
mov
test
lret
xchg
push
mov
jmp
mov
int3
and
inc
cmp
push
setp
daa
push
mov
mov
jmp
cmp
mov
push
mov
dec
pop
lods
add
dec
lods
aad
mov
test
arpl
js
nop
push
movsl
movsl
imul
mov
movsl
pop
mov
in
in
pop
lahf
push
push
pusha
xchg
testl
inc
push
sub
push
in
push
jg
pop
dec
shlb
stos
xor
pop
mov
jle
sub
jl
call
or
mov
cmpsb
lock
dec
mov
rolb
or
cmpl
push
push
inc
aam
loope
push
xchg
aas
clc
lock
adc
push
xor
mov
gs
loop
movl
xor
pop
adc
or
lock
adc
sub
jp
mov
idivb
test
pop
push
push
aad
push
imulb
jo
cmp
push
sbb
data16
mulb
add
fistpl
andl
jnp
cmp
push
ss
cmp
dec
xor
dec
or
add
loop
dec
xor
and
adc
sbb
ss
or
jge
mov
mov
mov
pop
cmp
xchg
sarb
into
push
pop
daa
cmp
and
jo
rcrb
fldl
pop
or
or
pusha
add
int3
push
inc
jo
xorb
popf
sahf
mov
lcall
cmpsl
xor
in
sbbb
xor
in
clc
jge
adc
xchg
addr16
jp
test
js
out
sbb
pop
rclb
les
and
or
push
xchg
ja
add
pop
dec
sub
lea
in
mov
pop
jo
sbb
nop
js
loopne
add
adc
mov
cmp
pop
ret
and
lret
xchg
pop
and
inc
sbb
pop
cmp
mov
scas
movsb
push
movb
mov
cmp
xlat
shll
dec
cmc
adc
ficomps
jae
push
push
lea
lods
scas
pop
dec
mull
mov
sub
lods
adc
or
jbe
push
sbb
in
inc
fsubl
xchg
js
call
lea
jne
inc
call
dec
fiadds
lods
data16
add
andb
add
sahf
inc
mov
jmp
cmp
cmp
jns
jle
inc
xor
or
dec
and
jno
adc
je
mov
add
leave
ret
dec
or
or
add
insl
and
lahf
push
andb
sub
in
mov
shlb
xchg
push
fadd
dec
dec
pop
repz
loope
push
cmp
leave
cmp
jmp
xor
xor
subl
sub
scas
pop
dec
and
pop
cmp
mov
cltd
pop
dec
sub
lea
ret
dec
xor
push
cmp
sub
and
fsubs
pop
test
push
lods
insb
sbb
into
jns
mov
push
inc
mov
push
pop
sbb
mov
jg
sub
lret
push
inc
scas
pusha
sub
out
ljmp
lea
or
imul
std
rolb
push
mov
mov
lea
cli
sub
shrl
inc
sub
add
mov
dec
push
popa
and
push
cmp
roll
mov
xchg
mov
cvttps2pi
xchg
xor
das
add
xor
les
push
pop
pop
jo
inc
mov
pop
pop
sub
test
ss
and
clc
push
push
aaa
cwtl
mov
repnz
call
test
mov
mull
add
dec
mov
std
dec
xchg
subl
clc
adc
add
push
push
sub
jmp
jo
jbe
inc
popa
adcl
jno
out
dec
push
rcrl
jp
mov
or
xor
shll
mov
lds
add
push
adc
push
sub
sub
pop
inc
pop
inc
pop
insb
fcoms
add
xor
dec
mov
fnstenv
inc
jmp
pop
dec
mov
lcall
xor
mov
adc
and
pop
xchg
adcb
add
rol
pop
xor
gs
add
je
test
jae
clc
cmp
mov
test
lea
xor
inc
push
dec
popa
sub
pop
jno
sbb
int3
pop
adc
cmpb
mov
stos
xchg
jno
rcrl
pusha
and
negb
loopne
inc
inc
lcall
add
fisubl
icebp
sub
and
dec
sbb
adc
pop
mov
xchg
mov
and
inc
push
mov
mov
mov
or
mov
dec
sub
mov
mov
xchg
icebp
call
adc
or
xorl
add
push
sarl
xor
inc
push
jmp
in
dec
popf
jne
repz
pop
nop
sub
or
add
outsl
add
gs
pop
push
cmp
insl
lahf
add
xchg
fcompl
sbb
push
inc
cmp
xor
dec
pop
mov
mov
push
popa
jns
fwait
std
mov
clc
sub
xabort
inc
lds
mov
push
push
stos
pop
jp
mov
adc
and
lods
pop
mov
jmp
cmp
sub
inc
mov
pop
jp
cmp
jge
xchg
dec
mov
orl
std
loopne
adc
pusha
lods
xchg
nop
xchg
mov
ljmp
add
xor
inc
add
ljmp
fmuls
jg
fadds
fmull
je
and
xchg
add
pop
xorl
jo
xchg
mov
sbb
loope
xchg
fwait
xor
push
mov
cmp
bound
aam
cmpsb
cmp
cmc
inc
push
mov
lea
or
out
imul
xor
jl
inc
xchg
mov
and
adc
int
add
xor
cmp
fiadds
pushf
xor
push
jo
ss
roll
pop
mov
mov
daa
mov
pop
inc
stos
dec
dec
cmpsl
test
testl
inc
lret
movl
add
dec
dec
jo
push
pop
lods
push
andb
sub
loopne
pop
sbb
aas
aad
xchg
ss
push
push
das
inc
cmp
test
pop
push
adc
mov
icebp
rolb
insb
test
pop
cmp
test
psubb
jg
imul
xchg
leave
xchg
shr
in
jp
mov
daa
mov
or
cmp
imul
data16
mov
ror
and
or
stc
push
mov
sbb
testl
push
out
pop
les
mov
mov
ffreep
adc
cmp
adc
int3
lods
xor
je
mov
call
cmp
je
aas
loopne
loope
dec
test
aas
jne
cmp
dec
sbb
lea
jae
or
outsl
adc
int
lea
int
pop
nop
int3
add
add
loope
pushf
jmp
mov
movsb
xchg
push
js
jmp
push
decw
movsl
jne
dec
and
or
and
adc
ds
mov
mov
sbbb
pop
in
es
cmp
sub
mov
negb
push
pop
insb
adc
insb
push
insb
dec
and
jecxz
ror
arpl
movsb
into
es
adc
ret
push
imul
fbstp
pushf
mov
and
test
dec
dec
sub
sbb
and
call
fcomip
sub
and
mov
cmp
pop
jo
push
push
daa
add
push
cwtl
jbe
dec
dec
mov
inc
std
adc
push
push
cmc
inc
push
jb
sbb
dec
psrlq
sub
out
dec
inc
lcall
dec
inc
pop
lds
scas
adc
lret
adc
xchg
push
cli
shl
push
cmp
add
jmp
push
mov
sbb
dec
fwait
mov
scas
and
inc
add
movswl
dec
push
leave
daa
ds
outsb
scas
add
pop
cmp
mov
ret
mov
cs
sub
inc
insb
pop
add
xchg
rcrl
mov
or
inc
xchg
push
nop
int
mov
rclb
inc
pop
jecxz
pop
adc
out
push
mov
pop
and
push
or
sbb
insb
imul
add
lods
gs
xor
pop
pop
imul
cmpsl
pop
arpl
xor
sub
inc
pop
dec
inc
pop
dec
aam
add
mov
ret
push
sub
fwait
icebp
add
fwait
push
and
cmpsb
push
or
fsubrs
hlt
cmp
xor
xchg
andb
repz
orl
je
sahf
push
mov
xorb
and
dec
into
dec
outsl
seto
push
inc
adc
fcoml
dec
cmp
mov
mov
out
inc
fsubrl
sahf
add
pop
pop
arpl
das
mov
adc
cltd
sub
dec
add
inc
hlt
xchg
test
cmp
sbbb
cli
or
dec
mov
lods
lods
out
xchg
adc
push
push
inc
test
mov
test
jp
aas
iret
sub
sub
or
aaa
push
mov
lcall
sub
xchg
inc
add
and
or
xchg
jbe
inc
fsubrl
loop
ret
sub
or
inc
or
xorl
mov
push
mov
in
lock
add
adc
jg
inc
xor
and
add
adc
jns
movsb
xchg
dec
mov
add
dec
dec
push
imul
dec
ret
push
mov
add
xchg
mov
clc
pop
addr16
jne
lods
hlt
and
mov
ret
loope
adc
addr16
out
sub
fidivrl
xchg
push
cmp
lock
push
xorl
enter
dec
lods
test
push
jne
xchg
cmp
ss
adc
inc
in
gs
call
xor
push
pusha
inc
add
iret
xchg
push
dec
push
inc
movl
shl
inc
or
xchg
or
mov
xor
dec
pop
cmp
mov
dec
aas
xchg
out
rolb
fsubl
push
inc
sub
push
mov
jo
lds
test
mov
adc
add
inc
push
addr16
sbbb
jne
sub
jl
mov
push
cmp
sub
push
pusha
test
je
fstl
test
cmpb
jp
icebp
cs
lea
adc
sahf
fs
push
gs
cmp
jbe
jle
mov
sub
and
inc
jne
test
mov
movsb
rcrb
cmp
sub
or
dec
xchg
or
xchg
jae
mov
and
lahf
clc
icebp
aas
es
pop
lods
push
rolb
sbb
mov
adc
rcrb
pop
or
popl
loopne
jmp
into
push
mov
or
pop
mov
sbb
or
push
dec
je
and
push
repnz
decl
jg
repnz
xor
ret
rcrb
in
push
test
pop
mov
shll
sbb
sbb
push
xor
push
roll
dec
aad
test
mov
dec
fistl
hlt
mov
jo
adc
add
bound
sub
jo
dec
add
je
or
das
pop
inc
jbe
xchg
inc
dec
cwtl
les
jmp
jne
mov
mov
sbb
je
adc
adc
subl
xor
inc
and
pop
jecxz
pop
adc
inc
and
sub
bound
lods
push
inc
cmp
pop
inc
pop
enter
push
cmpsl
xchg
stos
xchg
mov
push
cld
sbb
repz
iret
add
fidivrs
into
and
add
xchg
inc
xor
xchg
lock
mov
mov
mov
stos
rolb
lret
das
andl
out
mov
push
inc
adc
add
ret
mov
fs
adc
jbe
cmp
jne
push
lock
div
aam
mov
mov
sub
add
push
dec
shll
push
dec
pop
push
pusha
cmpsb
jge
xor
insb
movl
cmp
mov
enter
sub
adc
jns
lods
bnd
movsb
aam
and
adc
cwtl
or
movsb
sub
es
inc
pop
dec
or
or
sbb
mov
xchg
mov
push
mov
mov
lea
sbb
add
sbb
cmp
cmp
lahf
or
add
jl
xchg
jmp
pop
or
jg
imul
add
scas
jmp
ja
les
lods
and
mov
add
cmp
mov
mov
xor
mov
pop
imul
adc
inc
jg
lret
movsl
mov
add
into
and
mov
adc
shrl
pusha
add
out
dec
mov
pop
and
insb
out
rorb
lock
sub
rcrb
out
sbb
cmp
pop
dec
xor
ja
jle
push
mov
icebp
or
adc
mov
add
or
repnz
or
test
and
insl
stos
push
inc
dec
jmp
je
inc
push
pop
adcl
pop
ud1
loopne
pop
push
push
push
cmpsl
mov
mulps
mov
pop
or
bound
lds
pop
sub
popa
pop
inc
mov
call
inc
nop
xchg
mov
in
push
xchg
mov
inc
push
mov
pop
mov
ljmp
lock
pop
push
popf
movsl
add
scas
bound
sbbl
mov
addr16
nop
or
pop
shll
adc
adc
adc
dec
adc
or
add
movsb
movsb
imul
test
lcall
pushf
sub
pop
inc
sbb
sub
je
and
lea
xor
daa
mov
sbb
mov
jo
lods
jne
xor
ss
jp
adc
in
pusha
xor
mov
add
or
loop
jmp
and
je
test
pop
test
jmp
pop
mov
or
dec
push
inc
adc
nop
inc
jns
and
push
outsb
xor
push
insb
dec
pusha
in
push
xor
packuswb
add
pop
roll
testb
les
pop
inc
add
and
push
inc
and
or
adc
in
jg
pushf
inc
repz
or
sub
sub
stos
adc
mov
ja
pop
sbb
xchg
push
cmp
or
cmp
imul
mov
sub
xor
bound
push
mov
mov
mov
pop
in
dec
add
sbb
sahf
add
push
push
add
in
inc
lcall
cmpsl
lods
outsb
inc
jmp
pusha
push
int
sbb
adc
push
adc
and
add
in
pop
fcmovu
cmpsl
jno
ss
cmp
jns
sbb
adc
jmp
popf
mov
pop
outsl
jl
xor
pop
xchg
or
dec
push
pop
mov
movsl
mov
movsb
mov
rolb
loop
outsb
test
pop
adcb
int3
stos
mov
rorl
push
adc
sub
or
ljmp
lods
and
jnp
orb
xchg
mov
ljmp
jg
push
push
inc
lahf
cmp
mov
jmp
je
decl
lret
lock
movsb
pop
or
pop
add
pop
add
popa
jae
pop
movsl
inc
in
xchg
xor
inc
sub
add
out
testl
push
adc
jb
mov
test
inc
jp
sbb
mov
jbe
subps
outsl
pop
adc
cwtl
or
add
insl
cmp
shll
aas
or
pop
or
add
or
xchg
negb
aas
inc
cs
cmp
add
push
pop
clc
inc
nop
les
sbb
sbb
inc
mov
add
fstl
mov
mov
push
pop
xor
push
or
loopnew
xor
mov
insb
or
inc
cmp
xchg
push
lds
sbb
bound
push
cmp
push
mov
add
cmovo
js
mov
push
stos
push
leave
cmpl
add
loope
daa
add
adc
cmp
xor
in
pop
icebp
or
loop
in
mov
adcb
inc
cld
dec
push
in
flds
sbb
or
adc
insl
cs
test
cmp
push
pop
movsb
sbb
push
push
jle
mov
or
pop
xchg
pop
sbb
rol
jo
fisttpl
jmp
jg
pop
dec
add
loopne
cmp
int3
push
dec
pusha
jl
movsb
jge
jno
xchg
je
popf
mov
and
sbb
test
xor
jb
or
pop
lcall
inc
and
push
cli
ret
aaa
push
xor
and
push
mov
or
add
pop
add
ret
push
inc
pop
lea
or
movsl
sarb
push
sbb
or
inc
icebp
ficompl
or
movsl
ret
fsubs
pop
dec
ja
xchg
dec
aad
dec
jp
fwait
push
xor
inc
call
or
xchg
or
mov
add
sbb
dec
add
cmpsl
test
push
xor
dec
xor
pop
roll
flds
push
mov
sub
pusha
mov
and
imul
and
or
push
push
rorb
sub
push
test
sbb
push
xor
push
push
mov
xchg
push
das
std
pop
xchg
pop
shr
movl
inc
mov
test
dec
or
jle
sbb
subl
adc
and
std
mov
clc
add
je
push
fisubrs
add
add
or
mov
cli
icebp
cmpsl
insb
pop
pop
pop
adc
sub
pop
addb
sbb
pop
cwtl
xor
push
nop
pop
loopne
adc
xor
psllw
or
lahf
pop
adc
bound
das
push
mov
pushf
das
mov
pop
ja
xchg
or
dec
jb
mov
cmp
lock
push
ret
pop
or
daa
popa
mov
add
add
or
sub
imul
rolb
dec
sub
lock
pop
xchg
inc
sarb
sub
adc
adc
test
orb
fdiv
mov
shll
daa
subb
fs
dec
mov
sub
xchg
shlb
adc
adc
out
popa
loopne
push
or
loopne
xchg
ds
xchg
pop
dec
rorl
or
or
out
xor
pop
scas
stos
add
mov
or
movsb
pop
and
sub
push
dec
cmp
mov
dec
lock
test
jne
sub
adc
or
mov
out
subl
sbb
sti
xchg
jno
cmc
mov
je
testl
jge
or
pop
dec
aam
fisttpl
repnz
ja
cmp
sarb
mov
je
pop
mov
aaa
movsl
mov
jecxz
dec
cmp
and
or
push
gs
insl
jmp
mov
ljmp
cmp
notb
jb
mov
lds
add
or
movsl
mov
xorl
outsb
jp
aad
dec
sub
cmc
inc
or
jns
inc
test
movsl
mov
lds
dec
das
pop
cmp
outsl
loope
movsb
fcompl
pop
jecxz
imul
mov
pop
scas
nop
sub
mov
mov
xchg
sbb
inc
push
leave
mov
test
roll
pop
and
or
and
and
xchg
repnz
ja
mov
andl
push
pusha
pop
mov
or
pop
cs
push
sbb
in
mov
nop
push
mov
jl
xchg
les
pop
rorb
enter
je
loop
mov
cmpl
mov
addb
insl
insb
mov
jg
jecxz,pn
or
inc
lahf
add
data16
daa
test
inc
and
or
adc
daa
dec
and
fisubl
dec
mov
hlt
sarl
jno
inc
aaa
add
cmp
pop
test
ret
daa
mov
add
add
pushw
push
jmp
mov
testb
ret
dec
inc
jae
cltd
and
xor
in
dec
and
sbb
xor
test
imul
sbb
xor
nop
adc
and
jae
xchg
fildl
add
push
xor
add
sub
inc
add
repnz
mov
adc
pop
cltd
inc
shrb
cld
sbb
popa
sub
enter
or
xchg
push
sbb
cmp
movsl
mov
add
pop
mov
jg
add
fst
inc
or
cmp
xor
adc
call
push
dec
add
sbb
xor
xchg
mov
dec
cmpl
ja
inc
out
mov
sub
adc
push
add
adc
pushf
add
push
pop
test
adc
and
mov
fists
loopne
sti
xchg
scas
fists
filds
xchg
mov
xlat
jl
xor
inc
test
adc
pusha
andl
jne
jae
add
inc
enter
gs
sub
mov
pushf
push
imul
add
mov
or
adc
lods
mov
andb
cmp
mov
fisubs
push
mov
loope
push
mov
push
mov
pop
xor
jo
cmp
jecxz
xor
sub
jno
imul
sub
pop
rol
rcll
dec
test
or
pop
or
icebp
inc
lea
add
cld
adc
shrb
jl
push
mov
repnz
je
pop
divl
call
xchg
xor
adc
movsl
mov
aaa
or
hlt
lcall
or
jno
mov
adc
jmp
lcall
adc
mov
and
xor
inc
and
ljmp
cwtl
loop
pop
push
nopl
sub
sbb
push
addr16
and
sbb
fadds
neg
loope
loope
cmpsl
dec
mov
and
cmc
ja
pop
xor
mov
in
push
enter
enter
or
add
sbb
adc
xchg
mov
rcl
push
sub
iret
out
sbb
xchg
mov
dec
stc
push
gs
adc
sbb
sub
shll
pop
add
xor
xorb
add
rolb
repnz
mov
add
sbb
sbb
test
pop
testb
inc
pop
push
ss
int3
add
cmp
mov
cmpsb
mov
out
in
xchg
mov
popa
dec
or
into
imul
lcall
or
pop
icebp
stc
test
loopne
push
xor
push
lods
xchg
sbb
hlt
pop
push
pop
adc
cwtl
cs
daa
je
push
push
arpl
adc
mov
xchg
add
or
mov
stos
mov
push
sub
push
and
mov
pop
dec
xor
or
lret
sub
loope
push
pusha
pop
lcall
cli
mov
pop
mov
sub
pop
gs
pop
pop
sub
mov
pop
and
add
pop
push
lds
shrb
pop
sbb
or
inc
fsubl
pop
sbb
mov
pop
add
sbb
adcb
rorb
test
cmpsl
fs
sub
mov
inc
stos
push
jmp
ljmp
adc
mov
jmp
adc
lea
mov
lahf
or
shrl
mov
in
insl
ret
les
adc
stos
xor
in
or
mov
push
dec
imul
sub
jp
pop
inc
lret
xor
push
push
pop
scas
push
inc
cmpsb
ja
or
enter
shl
testl
pop
lea
cmp
aaa
je
les
sub
outsb
enter
mov
mov
arpl
sub
jne
scas
test
stos
loope
xchg
outsb
mov
inc
shr
lock
xlat
or
pop
push
int
mov
push
in
push
inc
jns
imul
fldenv
push
lea
sbbl
cmp
dec
cmp
or
mov
sahf
adc
decb
mov
inc
bswap
adc
lods
cmp
nop
addl
pop
lcall
inc
mov
cmp
push
aaa
je
cmp
roll
xor
xor
push
aad
sbbl
aaa
or
jmp
call
mov
loopne
and
push
mov
xchg
inc
shl
push
mov
inc
mov
dec
fnsave
push
or
loopne
jg
mov
in
dec
push
lea
pop
or
mov
ret
sub
lds
push
xchg
sub
lea
push
mov
in
or
lock
je
xchg
or
shlb
dec
out
mov
xor
mov
fimull
sbb
pop
lret
jo
outsl
icebp
xchg
xchg
in
inc
sbb
sub
out
xor
dec
mov
mov
movsb
xchg
adc
subl
jp
icebp
xor
xchg
mov
pop
adc
nop
mov
xchg
mov
inc
push
mov
ret
push
iret
pop
mov
sti
pop
mov
pop
and
mov
inc
fnsave
xchg
cmp
test
inc
rorb
pop
xchg
xchg
or
push
push
inc
dec
pop
cmp
decb
pop
hlt
loopne
mov
jnp
pop
and
mov
xchg
mov
adcb
and
dec
daa
dec
inc
add
mov
jg
lea
mov
cmp
mov
movsl
xor
test
xchg
je
adcl
inc
add
mov
out
std
push
sub
cmp
sub
cmp
mov
shll
xchg
imul
add
push
rorb
adc
add
cmpl
mov
loop
mov
jae
sub
aam
jg
push
fcmovb
jmp
pop
in
std
adc
stc
data16
inc
mov
popf
pop
jnp
mov
decl
lcall
fiaddl
push
add
add
xor
fcomi
mov
add
xchg
lret
aam
lahf
pusha
xor
add
add
adc
push
sbb
pop
mov
jbe
mov
or
add
adc
adc
sbb
hlt
and
loop
mov
mov
mov
sub
lea
mov
insb
ds
and
sub
pop
pop
enter
add
incb
sub
mov
mov
outsl
es
jae
xor
mov
inc
sub
orl
pop
mov
mov
mov
data16
jae
mov
cmp
push
sub
push
fwait
pop
lock
lret
aam
test
xor
inc
data16
negb
pop
adc
sbb
test
rcrb
and
dec
cmp
jmp
cmp
inc
nop
mov
xchg
out
jo
jge
adc
insl
add
mov
add
sub
jl
xchg
jg
sti
mov
es
sbb
xchg
mov
lahf
cltd
mov
sbb
mov
enter
jne
inc
mov
or
jmp
rorb
inc
lock
scas
mov
arpl
lahf
mov
lock
and
dec
mov
adc
add
mov
inc
sub
and
aam
inc
fadds
adc
std
xchg
xor
or
pop
jl
rsqrtps
or
or
sahf
inc
dec
lahf
sbb
cwtl
lock
and
dec
outsb
or
mov
movlps
pop
jl
pop
js
jmp
xor
dec
inc
inc
ror
std
mov
inc
push
or
fs
fst
jb
mov
jmp
lret
add
jecxz
adc
imul
shr
dec
mov
sbb
mov
inc
pop
mov
mov
dec
movsb
into
cmp
je
ljmp
outsl
jbe
xchg
xchg
add
imul
rclb
lea
out
sbb
lret
add
mov
lret
cmp
jle
sub
addr16
iret
dec
or
inc
and
jge
mov
dec
pop
xor
loopne
nop
push
xlat
movb
xor
xor
sbb
mov
push
movsl
pusha
lea
adc
cmp
mov
enter
ss
leave
mov
or
rorb
mov
sub
es
shl
lock
jb
mov
enter
adc
faddl
jmp
adc
adc
adc
lret
dec
in
bound
daa
xchg
jmp
push
dec
dec
imul
sub
rcll
adc
dec
roll
loopne
sub
cmpsb
sub
dec
or
dec
add
push
cmpl
fists
and
ljmp
cmp
and
cmp
and
add
xor
mov
fcmovnu
sbb
cmp
insl
cmpsb
lcall
jb
cs
scas
icebp
xor
jmp
rclb
int
aas
or
mov
dec
sti
jo
ss
pop
dec
sub
mov
fldl
inc
pop
mov
mov
fmull
fdivl
adc
mov
out
shl
sbb
loop
shll
xchg
sbb
jbe
movl
mov
push
fsubl
subb
add
es
xchg
push
push
push
shl
les
and
sahf
enter
imulb
loopne
fwait
clc
ja
fmuls
jle
push
mov
or
popa
or
fdivrl
or
cmp
mov
insb
and
les
or
incb
inc
push
add
add
movsl
add
push
repz
adc
mov
in
cmpsl
mov
push
test
js
adc
out
notb
ret
add
and
cmp
rcrb
push
jl
adc
aaa
test
fistpll
bound
cmp
dec
dec
mov
mov
es
mov
cmp
adc
lea
frstor
sbb
push
xor
aam
or
hlt
lea
data16
rcrb
mov
or
outsb
sbb
bound
sti
inc
popa
lock
incl
inc
push
cmp
add
stc
cmpsb
sbb
stc
push
jle
int
lock
jl
inc
decl
dec
cmp
or
decb
inc
sahf
cmpsb
push
lret
jl
divb
arpl
lret
movsb
xchg
insl
dec
sub
jle
mov
enter
lods
inc
loop
inc
or
push
xchg
push
or
mov
xchg
xor
mov
jns
and
adc
push
in
pop
xchg
and
data16
adc
cmp
and
orb
push
out
mov
pop
jns
dec
sbb
adc
enter
push
add
inc
test
inc
and
scas
pushf
adc
fnstenv
ret
xchg
js
dec
mov
addr16
sbb
mov
dec
mov
outsb
xor
push
xchg
jecxz
in
mov
sbb
enter
or
push
idiv
add
jle
and
and
js
mov
jl
pop
jmp
ja
push
movsb
lret
movsb
arpl
loopne
sub
xchg
cmp
cmp
xchg
aas
pop
push
loope
addb
pop
push
cmpsl
xlat
jne,pt
fs
sbb
clc
das
shll
mov
mov
orl
loop
and
cs
inc
push
mov
test
mov
pop
dec
push
je
clc
fwait
addr16
adc
and
push
nop
addb
jno
call
xchg
movsb
push
pop
xchg
lods
add
lcall
aam
cmpsl
movsb
push
cmpl
mov
xchg
cmp
cmpsl
fsub
xchg
xor
xorl
pop
das
cmp
popf
test
inc
out
xor
in
sbb
inc
inc
xor
push
sub
leave
stc
movsb
cltd
pusha
adcb
dec
lcall
test
aam
loopne
inc
sbb
or
add
adc
pop
je
data16
add
mov
xchg
jg
xor
inc
mov
push
push
idivl
adc
inc
xor
jno
sub
mov
pop
sbb
sarl
and
inc
pop
inc
mov
das
add
imul
hlt
icebp
sub
mov
rcl
in
fsubrs
cmp
and
int
loopne
push
test
inc
add
cmpsb
lods
xor
andb
inc
dec
add
aas
inc
adcb
add
push
aad
mov
mov
adc
mov
inc
add
inc
adc
aas
ret
cmp
test
inc
and
adc
adc
imul
sahf
int
and
inc
js
fdivs
sbb
ret
jmp
xchg
sbb
mov
sub
mov
or
in
add
mov
dec
pop
add
add
dec
ret
push
inc
test
arpl
mov
arpl
pop
dec
push
pop
iret
js
add
clc
ljmp
lret
inc
add
mov
shll
jne
pop
mov
jg
sbb
mov
lret
xchg
or
or
test
cmp
mov
or
push
les
push
push
in
fcomi
sarl
cmpl
or
or
or
hlt
adc
add
cmp
les
inc
sti
ret
int3
cmp
daa
sub
in
push
sbb
sub
fnstsw
pushf
sub
cli
add
mov
cmp
in
inc
ret
outsb
rcr
das
dec
jne
jmp
test
push
fdivrl
and
test
or
xlat
outsb
loopne
pop
sbb
aaa
mov
adc
mov
lahf
sarl
je
inc
xor
nop
fimull
sub
or
sub
mov
imul
ja
inc
aas
lea
mov
xor
test
xor
inc
out
add
xor
fsubs
fisttpll
add
mov
add
jo
mov
scas
movaps
mov
pop
in
lea
adc
and
push
xchg
bound
cmp
test
sub
inc
push
cmp
pop
inc
nop
cmp
xor
cmp
add
mov
mov
and
or
jb
and
jne
test
mov
aam
push
jne
adc
aad
push
ljmp
push
movsb
ficoms
mov
cmp
fs
pusha
push
lret
inc
inc
sub
inc
push
push
rol
cmpsl
int3
scas
fildl
lret
test
pop
add
cmp
mov
inc
sub
xchg
jge
push
adc
adc
adc
pop
aas
movsl
std
daa
shll
push
pushf
xor
lds
push
ret
push
dec
pop
lods
cmp
add
push
jae
mov
mov
ret
enter
mov
and
aaa
test
adc
adc
lock
rolb
or
xorl
insl
and
jmp
aad
ljmp
sbb
cmp
mov
je
mov
mov
mov
jne
pushaw
cltd
mov
das
pop
sub
negl
testl
inc
jo
pop
dec
dec
fstl
insb
pop
mov
push
mov
dec
dec
fadds
xchg
sub
adc
inc
push
lret
dec
lea
gs
push
outsl
inc
pop
jl
not
iret
push
popa
push
sub
dec
inc
lods
popa
loop
dec
mov
adc
hlt
jmp
push
inc
cld
push
adc
insl
fists
xchg
adc
or
iret
cmp
pushf
test
nop
and
mov
and
sbb
push
or
insb
push
mov
cmp
and
push
lds
sbbl
cmc
push
push
inc
out
push
insb
jge
push
icebp
pop
adc
push
push
jg
or
jmp
lea
push
shll
and
movsl
xchg
add
fbld
mov
add
adc
or
push
cwtl
push
and
adc
pop
adc
xchg
ds
cmp
mov
or
jge
je
sub
cmp
adc
lock
repnz
nop
push
mov
nop
adc
stos
std
add
sbb
jge
push
dec
mov
jp
or
inc
adc
inc
faddl
xchg
lea
or
mov
mov
and
cltd
cli
mov
int3
add
and
pushw
mov
push
jnp
xor
ror
cmpsl
mov
imul
adc
xchg
jl
cld
pop
out
lea
mov
test
push
push
push
xor
mov
data16
pop
rol
jmp
add
idivb
inc
push
jmp
mov
sub
and
shlb
cli
push
xor
sub
je
inc
jmp
loopne
lea
fs
xor
xor
lret
jge
cmp
sarb
push
mov
imul
sbb
xor
dec
rolb
push
sbb
mov
or
sbb
lods
push
jle
sub
rolb
push
cmp
pusha
xor
test
jno
pop
pop
push
xor
push
or
jbe
pop
cld
or
xchg
rcrl
vpmulhw
jl
or
inc
or
mov
das
je
xchg
add
mov
test
mov
shlb
out
inc
mov
lahf
inc
pop
dec
insb
inc
jbe
test
rcrb
repnz
mov
cmp
sub
add
push
inc
shll
imul
sbbl
mov
mov
lea
imul
adc
call
pop
sahf
pop
test
outsl
dec
jo
sbb
xchg
test
cwtl
rorb
adc
sub
daa
push
lock
mov
popa
xchg
shll
sahf
and
lret
decb
inc
push
jmp
xor
push
fisubs
je
loope
sub
sub
inc
les
mov
adc
sahf
mov
nop
nop
les
dec
movsl
push
sub
push
orl
out
orb
fiadds
adc
mov
sub
sahf
mov
sahf
hlt
xchg
shr
push
or
pop
mov
push
pop
ja
add
adc
call
sub
and
test
lea
adc
mov
fmull
and
pop
stc
sbb
xchg
mov
push
add
mov
and
sbb
mov
mov
jl
adc
ljmp
push
or
inc
sub
sbb
fimuls
push
adc
fwait
or
sbb
add
and
pusha
out
push
aad
add
push
je
jle
into
or
mov
mov
pop
loop
addr16
or
push
iret
mov
cmp
inc
scas
or
and
imul
ds
outsl
xor
push
push
loope
pop
imul
push
jbe
paddsb
xchg
sbb
daa
or
inc
adc
sbb
sub
mov
packuswb
jp
mov
movsb
clc
push
push
mov
testb
mov
xchg
push
pop
hlt
sbb
lea
sub
push
dec
rclb
lret
push
jnp
cmp
pop
push
adc
or
push
fsubr
or
rcl
pop
enter
mov
pop
push
fdivl
dec
lea
mov
dec
movb
inc
imul
dec
and
call
mov
mov
inc
jo
push
ljmp
and
movb
and
jb
and
scas
stos
daa
and
cltd
fsubs
rorl
outsb
xlat
nop
es
dec
dec
jne
pop
es
cli
add
shrl
loopne
pop
xchg
jnp
mov
xor
push
call
push
add
mov
mov
and
es
jno
adc
sub
jnp
inc
xchg
jo
mov
popf
testl
shlb
xchg
call
xor
fs
mov
popa
insl
leave
inc
sbb
fists
loopne
jmp
mov
inc
add
or
dec
hlt
mov
sbb
imul
add
pop
je
push
push
fsubr
ss
xchg
mov
enter
mov
mov
inc
inc
dec
js
mov
arpl
sub
add
fiaddl
push
xchg
mov
jo
clc
and
or
mov
or
cmp
jb
push
cmp
mov
xchg
and
je
subl
ljmp
imul
and
jecxz
dec
mov
jne
adc
test
pusha
out
or
xchg
lods
rcll
in
add
push
cmp
sbb
pop
loopne
push
and
not
and
or
fs
or
and
xchg
test
es
loop
inc
xchg
sbb
shlb
xlat
push
or
dec
pop
cmp
push
lea
mov
js
shl
or
add
dec
fisubl
ljmp
sub
fstpl
cld
mov
into
mov
push
shr
or
add
mov
cmp
lcall
decb
test
scas
cmc
rorl
sbb
loopne
add
nop
shrl
and
xchg
nop
or
push
xor
lds
sub
xchg
or
pop
cwtl
jns
push
test
push
mov
inc
xor
movups
mov
cmpl
inc
repnz
pusha
inc
or
cmp
mov
xchg
rol
ja
push
sarb
inc
mov
cmp
loopne
mov
imul
mov
fs
loop
or
inc
cmpsl
test
testl
lcall
jae
jp
push
mov
cld
out
dec
adc
dec
pushf
or
icebp
add
ds
mov
in
sarl
mov
push
iret
cmp
push
jle
rcll
and
nop
imul
sub
loop
xor
addl
subb
stc
xchg
jno
std
adc
add
push
pusha
and
ljmp
pop
mov
cmpsb
movups
ljmp
add
pop
lock
lea
mov
ds
adcl
pushf
push
frstor
push
aas
popf
fstp
sbb
push
idivb
sbb
or
fs
test
loop
popa
js
mov
pcmpgtb
out
add
xchg
and
out
cwtl
cmpsb
repnz
push
pop
pop
adc
out
shlb
jo
cli
je
xchg
out
pop
or
push
stos
mov
xchg
jo
out
int3
addb
mov
mov
popa
or
pusha
paddsw
sahf
jecxz
ret
mov
dec
xor
push
adc
add
test
push
loope,pt
ret
das
mov
mov
movups
xchg
and
cmpsl
inc
daa
dec
adc
aad
fisubrl
cmpsl
mov
enter
sahf
push
loop
cwtl
push
or
push
xchg
mov
push
aaa
fucomp
push
cmp
int
push
iret
loope
out
dec
sub
and
jns
insb
cli
imul
jno
pop
aaa
ret
dec
loopne
bnd
mov
push
clts
dec
mov
jp
popa
inc
daa
dec
adc
int
into
cmp
xlat
lcall
mov
push
loope
ret
and
das
fldenv
in
push
add
int
pusha
imul
shrl
clc
mov
jbe
dec
out
cli
stc
xchg
sti
pop
clc
rol
cmp
dec
mov
je
imul
jo
jbe
into
fnsave
loopne
or
or
sub
adc
xor
xor
jl
in
cwtl
inc
cmp
jmp
mov
fbstp
fdivs
into
mov
lock
xor
adc
and
dec
inc
shll
shlb
shl
or
cmp
pop
and
insl
push
adc
pusha
sbb
adc
cli
cmp
lods
fs
and
adc
in
pop
dec
mov
cmpsb
call
xor
movl
sbb
aad
dec
add
xor
cmp
test
lcall
jmp
stos
xchg
icebp
les
int
lret
xor
xor
pop
punpcklbw
jbe
mul
fbld
sbb
push
std
xor
mov
repz
dec
push
outsb
jo
mov
pop
ret
mov
xor
jle
sub
pop
add
jb
mov
mov
push
cli
daa
mov
rcrb
push
mov
cmp
xor
aam
sub
out
clc
fbstp
sub
call
shll
add
out
in
or
cmp
out
sbb
fldl2e
sbb
add
mov
mov
cmp
in
test
andl
pop
xchg
fstpt
vmovups
sub
cmp
push
inc
push
imul
loopne
loopne,pt
ud2
enter
inc
mov
inc
and
hlt
adc
loopne
xchg
rorl
rcrl
xchg
cmp
ljmp
inc
push
or
or
cmp
stos
add
xor
stos
adc
rcr
andb
inc
sub
mov
push
jno
sbb
sbb
push
cmp
push
and
hlt
pop
jmp
fsubrl
int3
or
push
mull
ds
arpl
lock
mov
xor
das
push
cltd
push
push
popa
cmp
ret
ja
or
push
inc
movb
inc
je
pop
pandn
dec
jle
outsl
jmp
mov
loopne
fldcw
out
incb
sbb
cmp
dec
dec
dec
ss
and
add
clc
add
sbb
mov
enter
and
xor
jo
ja
cmpb
jmp
and
dec
addr16
adc
dec
xor
sbb
rcrl
nop
xor
repz
cltd
pop
ss
sub
clc
add
inc
xchg
ss
roll
xor
and
inc
pop
icebp
loope
je
adc
xor
fisubl
or
test
mov
call
xchg
mov
add
aad
sbb
mov
and
test
cmp
or
push
xor
repnz
loope
test
aaa
sbb
ljmp
shl
jmp
shl
add
pop
add
adc
inc
imul
aas
scas
pop
jp
movl
inc
dec
add
movl
add
inc
addr16
mov
fdivrl
es
pop
test
mov
ret
lahf
rcrl
mov
fildll
add
repnz
and
push
decl
lods
cld
sub
add
mov
daa
xchg
clc
cmp
jb
pop
pop
xor
shlb
jg
addr16
add
or
mov
xor
clc
add
cmp
mov
mov
push
bswap
sbb
mov
orps
jno
pop
aam
andb
sbb
movb
mov
or
mov
sub
ja
jne
sbbl
enter
or
mov
sbb
adcb
iret
xchg
movsb
jl
inc
leave
bound
add
iret
hlt
push
inc
loop
xor
clc
ret
int
leave
xor
into
cmp
push
ja
stos
mov
xor
incl
jnp
sarl
sub
cli
cmp
mov
push
push
int
test
add
lea
popf
xor
mov
mov
clc
adc
jae
mov
mov
rcll
lret
sbb
xor
roll
inc
pusha
sbb
mov
push
push
out
aad
adc
sbb
adc
mov
xorb
lock
lea
mov
dec
incl
mov
add
test
cmp
movl
repnz
sbb
jne
push
pusha
and
cmpsl
push
push
push
cmp
jl
in
data16
pop
push
pop
sub
pop
and
xor
movsb
das
add
push
imul
push
pop
and
adc
and
sbb
and
mov
jecxz
in
ja
in
fiadds
negl
add
ret
shr
jge
or
mov
push
xor
inc
inc
cmp
jae
xor
push
sbb
pop
fisubrl
or
test
mov
add
adc
aad
hlt
lret
sbb
xor
xorl
jo
lods
jmp
xchg
mov
subl
mov
adc
rolb
xor
jg
pop
sbb
dec
adc
mov
or
mov
decb
xor
xlat
jbe
cmp
mov
mov
sbb
cmp
mov
outsb
adc
cmp
cmpsb
imul
and
jne
jp
xor
in
cmc
add
xor
insb
lcall
xchg
sbb
jecxz
xchg
sub
or
cs
aas
push
mov
xor
insl
or
outsb
pop
lds
jl
push
mov
in
in
ss
clc
dec
out
lret
or
ss
xchg
cmpb
jge
adc
imul
cltd
mov
std
arpl
xchg
xor
push
cwtl
sub
pop
dec
lcall
outsb
fimull
stos
xor
inc
sub
cmp
repnz
push
mov
loopne
ss
ds
out
je
sar
es
pop
ja
loopne
push
stos
mov
lcall
stos
test
ljmp
pop
inc
mov
jo
mov
cmp
addl
jle
sub
xor
loopne
into
ss
cmpsl
mov
xor
out
mov
inc
xchg
in
sbb
fwait
out
jl
test
loopne
sbb
fildl
adc
iret
addr16
rclb
push
or
pop
adc
ret
adc
mov
xchg
mov
ss
sbb
vmfunc
test
xor
push
shr
push
sub
inc
adc
dec
data16
aam
jecxz
and
lcall
test
movswl
data16
data16
or
loopne
mov
sbb
adc
xchg
xor
cmc
rcl
jecxz
add
mov
test
lock
dec
test
push
push
xor
push
stos
push
mov
jl
je
fs
sbb
xor
test
or
movsl
add
ud2
aad
ret
sbb
pop
sbb
in
inc
jno
jmp
mov
ret
jbe
add
ds
cli
xor
mov
shll
call
dec
sti
jnp
mov
adc
dec
addl
add
dec
mov
dec
js
sbb
test
scas
pop
jp
xor
sbb
addr16
es
jbe
mov
mov
adc
cmp
test
je
push
aam
inc
or
push
push
clc
pusha
addl
push
loopne
or
mov
fcomps
sub
test
jne
js
cmp
adc
mov
and
inc
int
les
dec
stos
pusha
add
pop
cwtl
lods
push
out
or
mov
test
adcl
pop
sti
and
shlb
pop
or
xor
dec
lds
adc
icebp
sar
mov
pop
int3
inc
inc
mov
mov
mov
xor
fldt
mov
sub
inc
add
dec
jne
push
mulb
adc
mov
inc
add
sbb
inc
cmp
or
adc
cli
pop
push
xor
jmp
sub
push
push
rcr
xchg
adcb
xor
sbb
adc
inc
or
popa
pop
mov
nop
push
scas
adc
push
inc
movb
xorl
lahf
mov
mov
loopne
aas
sar
and
jg
in
repnz
idivb
or
cmpsl
adc
sub
cwtl
lret
scas
das
aam
dec
xor
add
dec
add
add
add
xor
das
push
in
jb
int3
jbe
pop
enter
cmp
or
nop
xchg
mov
lock
or
add
nop
xchg
or
or
cmp
aas
or
xor
pop
das
adc
pop
jb
xchg
pop
adc
das
adc
xor
inc
or
adc
mov
pop
test
push
or
leave
or
xchg
int
push
and
sbb
push
mov
or
je
stc
lcall
data16
inc
add
nop
adc
push
push
push
push
xor
cmp
and
shrb
les
xchg
mov
scas
and
push
mov
xchg
lret
mov
lock
and
arpl
ljmp
scas
jmp
leave
jnp
pop
inc
repnz
dec
fimuls
inc
inc
push
in
negl
push
rorb
arpl
dec
push
push
cmp
repnz
adc
add
or
add
dec
rcl
mov
or
mov
mov
notb
xor
or
and
mov
and
mov
gs
sub
xchg
bound
lods
or
mov
rorb
inc
xor
push
push
adc
arpl
pop
xlat
pop
pop
movsl
inc
add
sbb
mov
add
xchg
or
sub
sbb
push
inc
inc
jb
fcoms
jp
pop
dec
adc
addr16
or
or
pop
sti
test
aam
addr16
sti
and
out
test
pop
inc
or
xchg
adc
cmp
jg
push
mov
sbb
pushf
insb
jecxz
or
inc
inc
pusha
cmp
adc
imul
cmpsb
dec
lea
push
and
mov
fimull
mov
and
into
dec
or
inc
cmpsl
push
imul
mov
sub
stc
sbb
pop
add
inc
and
sub
push
addr16
je
call
cmpsb
push
mov
or
jne
ret
inc
les
and
or
cmpsl
sub
js
or
jne
sub
push
push
and
jmp
loop
mov
jb
adc
rolb
and
inc
sbb
xchg
test
lcall
or
adc
and
inc
cwtl
jo
adc
cmp
inc
or
clc
push
xchg
adc
push
cmp
rcll
add
je
fmull
and
sub
incb
fdivrs
out
add
es
orl
mov
push
lahf
pop
dec
inc
dec
cmp
ficoml
xchg
pop
pushf
mov
loope
inc
add
pop
shll
push
push
test
shll
push
sbb
add
jo
iret
pop
add
inc
enter
lock
cmp
fisttps
cltd
mov
and
mov
roll
lock
aas
dec
add
mov
cmp
lds
mov
mov
mov
dec
push
mov
add
inc
add
push
xlat
rcrb
pop
ret
sbb
mov
pop
inc
in
sbb
xlat
or
jge
pop
pushf
cmp
sti
xchg
test
push
fistps
icebp
fisttps
add
inc
jbe
andb
mov
jecxz
push
mov
sbb
xchg
pop
out
push
jl
mov
aam
jne
push
repz
push
sub
mov
adc
cld
add
or
mov
and
and
mov
mov
push
iret
sbb
mov
call
pop
add
fmull
push
dec
sub
jne
fldl
or
mov
icebp
dec
fisttpll
cmpb
mov
ds
loope
iret
mov
aad
imul
pop
mov
inc
enter
rolb
rolb
lds
inc
push
addb
push
fs
sub
or
shrb
sub
icebp
lret
mov
push
push
dec
or
outsl
inc
fisttpll
add
test
xchg
xchg
adc
push
pcmpeqw
popf
mov
in
push
test
fcoms
xor
nop
pop
pop
jnp
js
in
fistps
outsl
loop
xchg
outsb
sub
fdivs
repnz
jno
and
push
jmp
repnz
and
mov
hlt
ret
dec
pushf
or
or
lods
shlb
jb
push
dec
jo
ljmp
inc
push
cmpsb
push
jge
add
pop
inc
adc
sarl
incb
cmp
xchg
add
mov
mov
rol
std
mov
push
loop
jno
lahf
test
mov
mov
xchg
and
ret
jns
mov
rcl
sub
push
or
daa
dec
loopne
sub
inc
mov
inc
xchg
popa
and
sbb
test
mov
fldt
xor
push
subl
ds
add
fdivs
sbb
leave
sbb
inc
andb
mov
icebp
inc
sub
gs
nop
les
add
mov
xor
push
shrl
mov
mov
inc
ret
bound
jge
bound
pusha
add
adc
fisttps
push
pusha
pop
mov
sbb
pop
and
aam
adc
je
lock
sub
xchg
hlt
and
add
adc
jmp
add
xchg
test
push
sub
mov
enter
not
add
add
jo
lret
add
adcb
lea
mov
sbb
adc
xor
jnp
sub
add
scas
mov
stos
push
push
sbb
push
mov
xchg
mov
sub
mov
int3
movb
stc
rcrl
mov
add
xor
rorb
push
mov
dec
loope
jge
or
fnstenv
jbe
nop
inc
push
outsl
pusha
adc
negb
out
add
xor
jp
mov
pop
ret
stc
mov
sub
adc
push
push
mov
dec
add
mov
enter
mov
push
jle
xlat
cli
adc
jmp
in
xchg
fucomip
sub
inc
or
jmp
inc
or
push
sbb
int
or
inc
shll
push
lods
imul
imul
fnstcw
fwait
dec
movl
loopne
pop
enter
dec
add
pop
add
lods
mov
xor
or
pop
push
mov
pop
ja
sub
push
xor
push
push
xor
ret
add
arpl
int3
or
adc
pop
push
adc
pop
cmpb
add
add
nop
add
xchg
jb
inc
es
inc
fdivr
push
repnz
sub
add
je
ret
or
mov
and
jge
jae
pop
adc
test
fstp
add
lods
fistpl
or
call
loopne
in
jns
mov
add
gs
mov
mov
add
xchg
cld
mov
enter
insb
pusha
xchg
jl
adc
mov
cmp
or
sub
and
div
sahf
cmpsl
insl
push
daa
clc
push
pop
xchg
test
mov
sahf
shl
pop
or
jns
repz
movb
cmp
fsubrp
in
xchg
lods
mov
aaa
pop
filds
mov
repz
push
pusha
push
push
mov
adc
lcall
inc
sub
mov
adc
xor
in
push
fdivl
inc
fstpt
sbb
in
push
pop
jo
and
sub
jno
inc
outsb
fbld
push
or
inc
inc
push
in
push
hlt
lret
xor
and
cmp
push
xor
fsubl
adc
dec
fsubp
jl
push
inc
jae
jl
push
jne
add
jns
pop
push
imul
inc
outsl
pushf
dec
push
dec
sub
pop
inc
ds
push
pop
out
jmp
add
fmull
cs
xchg
inc
adc
push
and
shrb
and
mov
xor
jns
pop
xor
add
inc
cmp
je
icebp
push
mov
push
mov
adc
sub
mov
fwait
add
pop
pop
mov
dec
sbb
test
sub
cmp
adc
loop
roll
test
repnz
and
dec
or
sbb
mov
dec
add
cmp
dec
mov
pop
cmp
gs
rorb
lea
mov
dec
inc
or
or
push
rcrl
and
or
addb
pop
inc
loopne
push
or
fistl
cmp
jmp
sbb
dec
push
mov
in
push
addr16
or
sbb
and
pop
cmpsb
adc
fbld
ret
bound
pop
stc
inc
add
sub
sbb
or
sbb
inc
lcall
mov
add
sbb
mov
popa
push
loope
pop
mov
pop
xor
jl
add
jnp
sbb
add
pop
dec
fnstcw
add
mov
fwait
jb
adc
lahf
pop
or
std
push
pop
jge
lea
push
fisubrl
xchg
dec
sbb
stos
fptan
pushf
or
nop
xor
pop
rcrl
in
xchg
or
lcall
xchg
pop
test
dec
leave
enter
inc
mov
xor
cmpsb
icebp
xchg
fisubrs
pop
add
inc
ret
sbb
outsl
shrb
mov
xchg
add
loopne
and
pop
dec
push
add
inc
arpl
fbld
pusha
add
or
imul
mov
test
jg
neg
sub
imul
loope
mov
and
push
xor
stos
iret
test
jp
out
push
inc
push
scas
cmpb
sub
sbb
push
je
mov
sbb
movsb
mov
lret
sbb
add
insb
ja
and
loopne
xchg
push
dec
test
add
xor
lea
je
inc
mov
jg
cmp
pop
jl
dec
pop
cmpsb
lock
inc
add
fwait
adc
add
inc
dec
xor
or
lcall
sbb
pop
test
pusha
pop
shrb
dec
lea
inc
push
pop
pop
jo
mov
push
push
sbb
push
push
dec
scas
jmp
cmp
dec
adc
or
cmp
syscall
pusha
add
dec
push
sub
xchg
testb
xchg
adc
or
add
mov
loopne
mov
or
mov
mov
xchg
pop
or
fiadds
inc
mov
add
mov
inc
dec
adc
jmp
shll
adc
add
jge
jmp
das
dec
pop
data16
add
mov
add
pop
loope
inc
insl
add
mov
inc
and
repz
inc
mov
xchg
sbb
js
push
jns
iret
sbb
xor
ret
test
add
push
dec
add
std
xchg
xor
xchg
das
sbb
xor
xor
cmp
add
shl
jge
cmp
mov
or
or
mov
push
mov
push
vmwrite
test
pop
fcoms
ret
add
pop
and
movsl
or
and
ret
loope
xor
ljmp
xchg
and
xchg
mov
imul
inc
cli
repnz
fcom
add
fsts
fiaddl
mov
adc
rorb
fidivl
mov
or
jecxz
mov
mov
jo
cmp
jnp
test
inc
xlat
pushf
add
cmp
adc
sub
dec
push
dec
jmp
inc
push
ds
adcb
movb
aaa
push
es
movb
push
cmp
je
push
mov
xchg
dec
push
out
jns
dec
push
push
cmp
cmpsb
sbbb
add
add
add
pop
and
lret
or
jne
imul
pop
jb
xchg
jmp
push
mov
mov
push
jno
push
adc
hlt
repnz
inc
push
or
xor
inc
inc
out
mov
test
mov
and
ss
rolb
xor
clc
adc
xor
stc
xor
mov
or
pop
sbb
add
jbe
sbb
push
pop
pop
js
int3
inc
roll
pusha
mov
andb
adc
cmpsb
add
xor
jns
add
enter
es
shl
pop
int
add
pop
es
divl
fldenv
cltd
mov
imul
sti
sbb
cmp
dec
dec
addl
adc
xorb
xchg
sbb
sub
pop
inc
or
or
jmp
stos
push
mov
mov
std
dec
jge
sbb
arpl
insb
enter
add
mov
jecxz
jnp
clc
cmp
add
or
movsb
fldt
loopne
loopne
mov
ret
or
pushf
sub
lds
jmp
fwait
cmp
fadd
subl
adc
popf
nop
rcrb
mov
cmp
andl
add
pop
mov
addr16
cmp
fiaddl
add
pusha
mov
add
cmp
push
adc
lcall
xchg
jo
add
dec
dec
test
sarb
insb
jecxz
and
outsb
jo
outsb
pusha
inc
sarl
enter
aad
insb
pop
jno
push
mov
or
fisubrs
fs
sub
or
fcoms
shrb
pop
sar
rcrl
mov
sub
imull
mov
xor
or
xchg
jbe
dec
sub
xchg
dec
inc
movsl
mov
fisttpll
push
adc
loopne
movsb
hlt
addb
adc
sub
or
add
arpl
loope
xchg
sbb
mov
push
sarb
add
push
mov
sub
movsl
xchg
jge
and
cwtl
sbb
ret
movl
dec
ljmp
insl
dec
inc
inc
lea
mov
xchg
push
movsb
divl
mov
adc
test
add
nop
pop
mov
mov
push
sbb
js
push
cmp
loope
xor
ja
xor
popa
cmp
xor
pop
sub
aas
repnz
dec
enter
xorl
fdivrl
xchg
fs
push
ret
pop
inc
xor
rclb
ret
push
sub
dec
mov
cmp
inc
or
imul
inc
clc
sbbl
push
mov
jle
add
jno
fsubs
test
or
aam
xchg
movl
xor
ret
mov
test
mov
or
mov
scas
dec
add
or
lret
test
push
sbb
jnp
pusha
dec
push
mov
jne
pop
add
ret
push
push
mov
and
push
push
leave
push
add
clc
dec
xor
adcl
in
adc
aad
in
std
sub
imul
and
mov
inc
dec
nop
mov
sbb
push
in
roll
or
mov
push
enter
pusha
clc
fmuls
mov
add
adc
mov
push
add
dec
xor
es
or
or
fwait
jg
fdivl
lret
or
aas
push
loop
or
je
push
stc
jl
js
cmp
enter
cs
jge
loope
mov
fstl
aam
fidivrl
xor
ret
cmp
or
ret
inc
push
roll
add
push
pop
push
or
ret
and
sub
stos
cmp
add
les
and
dec
jg
push
or
pusha
inc
out
mov
add
insl
xlat
push
push
push
test
add
add
sub
xor
push
dec
add
and
push
or
add
mov
insb
cmp
insb
cmp
adc
push
push
popa
test
mov
stos
xchg
jl
fbstp
lods
adc
sahf
cmp
mov
cli
or
sbb
loopne
fistpl
gs
inc
pushf
mov
jg
push
gs
leave
push
xor
sub
fidivrl
push
add
pop
insl
test
inc
jl
dec
shlb
int
testb
push
and
test
xchg
inc
sbb
jmp
sbb
jecxz
sub
filds
enter
mov
mov
lret
add
rorb
incl
dec
roll
push
rcrb
out
add
rolb
int3
inc
das
pop
pop
pop
sbb
xchg
xorb
fs
cmp
ret
xchg
es
mov
add
ficoml
in
movsl
aad
pop
mov
jle
inc
pop
cmpl
fabs
test
test
xchg
lock
xor
cli
sets
dec
and
fldl
sub
pop
stos
sbb
xchg
aad
repnz
lods
sub
dec
cmp
push
loop
nop
mov
sbb
xor
mov
xchg
rclb
dec
stc
sbb
shlb
and
int3
dec
dec
lahf
pop
or
adc
je
and
sbb
inc
lock
pop
lahf
sbb
cmp
push
xchg
mov
or
popf
fimuls
adc
add
cwtl
clc
out
sahf
jb
test
lock
popf
sub
mov
in
lock
adc
push
and
jb
and
or
lds
mov
sbb
push
inc
inc
scas
push
sbb
dec
jne
jecxz
xor
adc
inc
jno
dec
mov
nop
cmpsb
cwtl
dec
or
pop
arpl
and
adc
and
pop
popf
pop
pusha
mov
sub
pop
mov
xor
pop
inc
stos
sub
xor
adc
sbb
shrb
ret
clc
repnz
inc
xor
add
cmp
stc
leave
js
mov
mov
pushf
adc
push
and
sub
enter
push
push
mov
orb
enter
lock
out
cmp
dec
clc
ss
lret
push
push
fucomi
or
test
int
cmpsl
cmp
call
inc
lret
inc
in
lret
mov
outsl
lods
testl
jb
cli
ljmp
into
inc
stc
repz
push
push
pusha
pop
or
push
rorb
and
add
sbb
adc
shl
mov
add
addr16
and
call
pop
push
lea
insb
fs
mov
pop
adc
xor
and
xor
adc
pop
push
xor
pop
das
lods
fs
lret
iret
xchg
call
push
xchg
pusha
mov
aam
push
jle
adc
or
lahf
insb
push
push
ss
inc
push
sbb
pop
subb
fldt
aam
sub
xchg
ss
shrl
out
xor
and
sub
popa
sub
cmp
xor
pop
sarl
out
mov
inc
adc
cltd
and
lret
push
pop
rcrb
push
or
mov
inc
cmp
incb
sbbb
sbb
push
movsl
adc
and
loope
dec
cmp
test
jg
push
sbb
lea
in
movsb
mov
cs
pop
mov
popa
rol
xchg
ret
sub
adc
call
cmp
les
xor
cmp
push
cmp
add
push
mov
xchg
inc
pop
mov
out
loope
mov
inc
adc
orb
push
out
daa
pop
cmp
pop
mov
mov
jno
jl
fmull
insb
mov
scas
xchg
mov
sub
inc
mov
lea
test
rcr
enter
test
int
adc
data16
mov
xchg
sub
movsl
jge
add
add
mov
add
shrl
stos
test
fs
mov
mov
lea
dec
sbb
pop
cmp
and
pop
outsl
inc
sub
push
xchg
pop
ret
push
push
adc
or
push
and
data16
fs
andl
je
sbb
xchg
dec
mov
pop
std
add
addb
push
or
pop
loop
fucom
mov
add
mov
outsb
mov
jl
sbb
mov
fcmovbe
mov
lahf
aam
loope
pusha
xor
neg
sub
mov
fcompl
lea
xor
insb
loope
je
dec
in
and
push
push
add
into
jo
cmp
jo
push
inc
inc
cmp
sbb
add
mov
cmp
jne
cmpl
xchg
push
or
fldenv
movsb
add
dec
sub
mov
push
test
push
rclb
roll
cmp
xor
je
loope
push
insl
mov
jae
push
pushf
je
jnp
xchg
daa
or
enter
dec
je
cmp
lock
daa
mov
xor
mov
jno
pop
mov
sbb
jnp
popa
jnp
dec
jge
lea
push
add
sarl
push
es
pop
es
mov
enter
mov
sbb
mov
jg
push
enter
inc
add
ss
mov
pushf
push
aaa
addr16
sarl
mov
sbb
add
sbb
lods
test
test
add
or
pop
data16
mov
imul
fadd
jmp
dec
mov
lahf
ret
test
push
stos
in
mov
testb
and
add
sub
or
adc
int3
xor
sub
pop
cwtl
aam
add
movl
mov
add
mov
out
nop
and
lret
pop
call
push
add
xchg
in
mov
orl
dec
test
xor
xor
add
adcl
mov
push
int
and
orl
push
push
sbb
xchg
pop
or
loop
movsl
sub
gs
pusha
aad
scas
and
sahf
add
jo
inc
mov
cmp
nop
push
popf
add
out
mov
inc
dec
test
movsl
sbb
or
adc
cli
xorb
dec
or
or
and
sub
inc
stos
in
sub
pushf
movsl
sbb
add
mov
xchg
ret
clc
jle
mov
cmc
pop
rol
in
add
push
jle
mov
stos
pop
push
adc
or
mov
sub
push
clc
add
pop
add
filds
lret
out
scas
and
xor
in
sbbb
stc
xor
pop
cld
xlat
mov
pop
sarb
lret
pinsrw
fs
push
add
jb
dec
sti
test
sbb
cld
xchg
mov
leave
push
and
clc
push
mov
sub
inc
popa
imul
mov
pusha
jecxz
adc
movsb
add
sbbl
leave
sbb
imul
push
ror
mov
add
push
test
daa
push
addb
sbb
out
or
xor
cmp
add
and
filds
pop
cmpsl
pop
mov
push
rcll
and
addl
jecxz
jo
lahf
mov
pop
xor
or
int
push
outsl
dec
dec
testb
dec
sbb
xchg
repnz
xor
inc
or
cltd
data16
jecxz
cmpsl
nop
ret
bound
add
int
fsubl
xchg
jge
lods
sbb
repz
push
test
lods
mov
lock
jb
sub
dec
insl
add
fnstenv
push
fisubrl
mov
or
ljmp
add
in
push
cmp
repz
adc
jle
mov
cmp
or
and
int
dec
into
addb
xor
into
sub
lret
pop
lcall
sbb
frstor
fcom
dec
push
insl
lock
cmp
push
cmp
test
dec
leave
hlt
roll
fwait
mov
scas
cmc
daa
jne
dec
add
xlat
insl
dec
fisubl
inc
dec
add
add
push
jecxz
popa
add
out
out
or
pop
nop
pop
mov
aaa
aaa
sar
and
addl
imul
inc
roll
or
dec
push
loopne
xor
push
lock
push
jmp
add
dec
cmp
pop
inc
dec
adc
imul
das
mov
sub
xlat
lods
fwait
lock
sbb
sbb
jns
push
mov
push
sub
cmpsl
cli
jb
lret
add
ret
mov
cmp
or
shlb
pop
test
popa
inc
dec
jg
jb
mov
sbb
pushf
inc
rcrb
push
stc
push
push
stos
std
push
popf
sbb
cwtl
pop
push
xchg
rcrb
dec
pop
bound
sub
fsubr
and
stc
adc
fmul
ret
rorl
add
dec
call
push
sbb
push
adc
xorb
add
sub
gs
fwait
test
xchg
mov
ret
sbbb
mov
add
jo
push
push
cs
dec
repz
ffreep
inc
jl
roll
cli
sub
mov
or
dec
jl
cmp
jge
or
jns
dec
popa
fxch
pop
sbb
fldl
jno
adc
aas
cmpl
cwtl
shll
add
inc
mov
push
adc
push
popa
fdivl
adc
into
mov
or
popf
inc
loop
xchg
clc
xlat
push
cmp
adc
push
js
or
cmp
leave
and
adc
xchg
pusha
mov
fdivrs
inc
cmp
push
pop
lahf
imul
jl
or
mov
icebp
pop
sbb
fsubrs
dec
aad
mov
inc
int3
mov
jns
push
xchg
addr16
stos
cltd
lahf
xor
bound
xchg
dec
push
or
lcall
inc
push
orl
or
push
lea
repz
push
mulb
lret
add
adc
sbb
mov
ja
and
adc
sti
dec
xchg
rcr
shrb
push
pusha
ja
push
jmp
test
push
xor
in
sub
mov
lcall
jl
cmp
sub
xor
in
add
jl
shrl
stos
adcb
push
dec
ss
xor
jae
push
pop
lea
roll
fwait
sub
pop
test
push
rorl
or
pop
adc
rcll
aas
icebp
inc
add
inc
adc
push
sti
scas
jno
pop
aad
stos
stos
rolb
mov
inc
inc
xor
push
movsl
inc
adc
sub
mov
xor
leave
sbb
xchg
nop
push
pop
xlat
sub
sub
jmp
int3
repnz
out
sub
scas
and
roll
sbb
xchg
lds
cmc
push
or
pop
cmp
xor
xchg
pop
xchg
jo
add
daa
nop
inc
add
cmp
add
dec
inc
cpuid
loop
mov
call
incb
and
std
clc
add
xchg
push
mov
inc
pop
inc
and
inc
push
or
dec
inc
cld
xor
in
inc
inc
cmp
cmp
loope
add
shrb
aad
xchg
adc
inc
lds
mov
inc
mov
mov
jno
out
mov
cs
lea
jmp
outsb
jo
sub
test
add
push
sbb
subl
mov
inc
cmp
mov
xchg
lock
mov
pop
push
add
xchg
and
or
xchg
mov
pusha
mov
sub
rcll
inc
mov
loope
inc
push
and
adc
push
inc
shl
adc
fsubrs
sbb
xchg
fildl
inc
sbb
nop
push
ficomps
sbb
or
or
or
mov
or
mov
sbb
ret
cmp
call
and
sub
add
ds
dec
sbb
insl
popa
sahf
aad
call
mov
outsl
inc
js
dec
adc
or
cmp
test
adc
xor
mov
mov
sub
jno
out
push
jnp
cmp
xor
sbb
pop
div
xor
adc
arpl
fs
sub
cmpsb
add
stc
aas
jle
or
xor
or
pop
inc
cs
add
inc
mov
repnz
cmp
or
repz
andb
cmp
adc
add
or
mov
jmp
push
fs
push
mov
or
rorb
or
inc
lea
ljmp
loop
xor
and
andb
pop
or
jnp
ret
and
fsubrs
xor
or
loope
lcall
jbe
push
inc
adc
push
push
xchg
jnp
aad
loopne
rorl
data16
movl
sbb
fidivs
addr16
gs
hlt
mov
sbb
insb
xchg
mov
mov
jge
cmp
xchg
push
or
fimuls
mov
and
ret
inc
jb
xor
mov
add
aas
ss
jmp
push
pop
add
mov
and
in
adc
push
adc
cmp
pop
nopl
inc
mov
and
push
pop
inc
cmp
xchg
adc
jo
xchg
mov
jne
popw
pop
push
sub
sbb
shl
jo
aam
xor
sub
push
jp
inc
insb
push
outsl
repnz
je
fs
inc
outsl
add
jno
loope
dec
inc
psubsw
inc
push
arpl
and
xor
adc
xchg
mov
cmp
jmp
mov
mov
enter
jnp
popf
out
cltd
add
adc
push
bound
cmpsl
pop
and
or
rcl
and
ret
adc
mov
js
scas
jne
stos
fdivr
sub
push
fwait
mov
pop
and
add
insl
cs
addb
and
cmpsl
lock
shrl
sbb
into
add
push
les
adc
sbb
into
mov
shlb
mov
and
cmp
cld
push
mull
sbbb
or
mov
jmp
aad
push
mov
push
mov
mov
adc
sub
push
mov
inc
sub
and
aam
shrl
or
mov
adc
push
test
std
mov
pop
push
popa
and
mov
adc
enter
jo
mov
inc
loope
or
inc
push
dec
adc
in
pop
push
adc
mov
fmuls
loopne
push
test
loop
or
or
add
test
mov
fndisi(8087
push
mov
or
popa
sbb
mov
mov
jns
ss
and
inc
jo
or
je
ljmp
ret
push
shl
fadd
dec
inc
sarb
movsb
or
test
pop
or
adc
adc
mov
pushf
and
push
lds
adcl
add
or
add
push
pop
inc
sbb
ret
or
adc
cmpsl
push
cmp
mov
insl
add
mov
pop
push
adc
std
loop
lea
incl
inc
lds
popa
enter
xchg
add
adc
and
fsubrs
aas
shl
loop
fsubs
push
sbb
call
repz
mov
jmp
dec
in
sub
inc
inc
inc
push
sbb
or
adc
push
add
jo
ret
lcall
jo
icebp
or
push
or
pop
gs
adc
popf
push
out
jae
sbb
fs
cmpsl
or
add
in
rclb
inc
les
mov
leave
es
xchg
jns
loop
xor
aaa
xchg
es
jns
lock
push
mov
sbb
mov
xchg
movsl
dec
inc
dec
adc
xchg
or
push
push
incl
lock
push
adc
push
clc
adc
dec
adc
or
xchg
cli
adc
js
add
or
rcrb
jmp
pop
adc
mov
or
rol
gs
lock
addr16
push
jle
popf
lods
out
xor
or
test
inc
cmp
ror
popa
imul
sbb
lret
fists
pop
je
cmp
pusha
arpl
fisubrl
mov
mov
mov
pop
addl
or
addl
js
add
cmp
imul
cltd
es
or
mov
push
ss
mov
hlt
adc
push
or
xor
dec
inc
xchg
mov
enter
xor
addb
iret
adc
dec
lret
ret
and
mov
push
sbb
push
testl
inc
add
add
filds
pusha
inc
aad
mov
sub
mov
aam
lock
dec
xor
and
dec
shl
push
and
jle
sarb
xchg
test
mov
pop
pop
or
ljmp
jmp
mov
jae
jecxz
sub
sahf
sbb
adc
push
pop
adc
inc
sub
fstpt
dec
lods
push
push
cmc
mov
data16
andb
xchg
test
loop
add
adc
js
sub
daa
cmc
push
sub
scas
mov
jne
sub
adc
movsl
in
pop
repnz
add
or
pusha
sub
sbb
or
xor
sub
xor
pusha
add
leave
lock
aad
cltd
xchg
mov
dec
and
pusha
mov
pop
adc
dec
cmpsb
mov
push
xor
sub
dec
add
cmpsb
cmp
xor
sub
mov
dec
cmp
sbb
rorb
jmp
adc
loope
add
nop
rclb
xor
lods
pop
and
mov
sub
push
sbb
or
jecxz
jle
sbb
push
data16
dec
mov
insb
addr16
sbb
mov
jl
shlb
pop
roll
iret
xchg
aaa
dec
cltd
js
ds
mov
rcl
cmp
push
and
sub
jl
push
push
sbb
or
lods
or
push
rclb
sub
mov
stos
cmpsl
push
jno
call
push
mov
lcall
cmp
mov
xor
mov
mov
xor
pusha
cmp
push
push
mov
push
sbb
es
outsl
pop
rclb
pop
mov
jp
cmp
shrl
pop
push
mul
pop
jo
lea
xchg
cmpsb
ret
inc
enter
jo
add
push
lods
sbb
adc
int
mov
add
setns
dec
rol
jbe
test
adcl
xorl
ret
cmpsb
xor
call
xchg
adc
and
push
or
daa
mov
loopne
adc
sbb
andb
push
mov
sub
adc
pop
or
and
nop
mov
adc
inc
sbb
add
dec
mov
int
pop
mov
mov
popf
and
xlat
ja
or
add
push
sub
inc
jl
ja
and
dec
pop
ret
popf
xchg
inc
cmp
add
mov
jbe
and
test
ljmp
mov
xchg
mov
lock
push
sub
lods
ds
sbb
shlb
jg
fimull
push
in
jns
jb
fbstp
sub
inc
xor
out
add
and
out
or
or
inc
ss
push
jo
adc
popa
jnp
cmpsb
add
jl
mov
xor
mov
push
dec
lods
push
inc
jbe
jecxz
xor
push
repnz
xor
pop
movl
cld
inc
movsb
pop
out
pop
xchg
inc
push
jmp
add
aad
clc
adcb
jmp
ret
dec
cmpsl
pop
adc
jno
movsb
in
add
mov
inc
mov
mov
cli
dec
pop
push
push
push
xchg
push
sub
add
mov
repz
outsb
imul
imul
sbb
push
lret
jnp
xor
jg
adc
cmp
mov
jns
mov
sub
aam
lods
imul
lahf
mov
je
push
in
or
cmp
or
sbb
test
push
pop
jo
ja
sub
js
out
jge
push
xor
aaa
or
pop
mov
js
cmp
stos
scas
mov
push
push
xchg
pop
and
and
ljmp
push
adcb
mov
add
cmp
or
pusha
sbb
mov
or
sahf
pusha
add
or
cmp
jle
add
adc
mov
jbe
nop
jp
hlt
mov
leave
dec
mov
repnz
jnp
jbe
xor
mov
xchg
mov
push
jge
mov
ret
sub
in
push
and
or
push
add
dec
shlb
sbbb
push
imul
inc
in
in
cmp
pushf
cmc
test
sarb
xchg
adc
or
dec
inc
and
or
shlb
xchg
mov
xchg
and
std
push
add
pcmpeqw
mov
add
rcll
add
add
sbb
pop
nop
movsl
cmp
sub
push
or
jb
dec
adc
pushf
lret
loopne
lea
xor
repnz
mov
mov
add
add
test
pop
adc
push
mov
mov
add
cld
mov
mov
ret
rep
mov
or
mov
data16
int3
xchg
sub
push
or
or
mov
jno
adc
pop
xchg
outsl
xbegin
mov
dec
je
mov
mov
dec
jne
dec
sbb
dec
xor
cli
jno
jp
push
or
add
imul
pop
paddsw
and
cwtl
inc
and
mov
shll
das
in
arpl
sarl
and
pop
or
dec
sub
lods
jg
fcompl
mov
sbb
add
orl
jmp
add
push
sbb
pop
gs
xchg
or
push
sbb
shrb
cld
push
lea
iret
jle
ss
or
add
scas
add
xor
ljmp
insl
sbb
jmp
and
test
lods
out
push
dec
sarl
or
ficoms
sbb
push
in
sbb
leave
mov
push
lcall
ret
dec
or
jmp
scas
scas
mov
sbb
push
xor
mov
and
inc
or
pusha
dec
cmc
xchg
sbb
lea
or
xchg
or
or
or
ret
rol
dec
rcll
or
cld
pop
cmp
pop
jl
fmull
adc
out
out
inc
fsubrs
dec
and
or
cmp
push
adc
or
mov
fwait
and
ljmp
pushf
xchg
arpl
pop
cwtl
push
xor
mov
ja
sbb
push
jl
xlat
jg
ret
test
ret
mov
lea
xchg
out
rcrb
ret
es
sti
sti
subb
je
pop
incb
jge
rsm
mov
rolb
inc
add
pop
dec
je
icebp
pop
mov
test
or
or
or
das
or
and
ret
xor
cli
dec
mov
mov
adc
add
lahf
xor
push
lea
cli
stos
lret
rclb
pop
cwtl
lret
fisubl
push
mov
mov
insl
or
xchg
je
gs
sub
dec
cmp
std
mov
add
mov
roll
jo
mov
xchg
mov
das
dec
pop
and
mov
daa
xchg
inc
lock
pop
xchg
xorb
inc
pop
ret
lods
xchg
pop
mov
cld
mov
int
push
addl
clc
pop
cli
pop
dec
fiaddl
js
out
movsl
dec
lods
aaa
inc
or
push
sbb
pop
mov
and
addb
rcrb
fsubl
cld
xor
push
push
jo
dec
sub
or
inc
bound
test
sub
dec
and
add
lea
mov
push
hlt
sub
xchg
daa
inc
cmp
push
les
add
cmovle
roll
push
mov
adc
fisubl
inc
push
mov
repnz
adc
add
inc
inc
imul
mov
jmp
lea
imulb
outsl
adc
sbb
jl
push
dec
adc
gs
dec
pop
cmp
adc
pop
aam
sti
push
test
inc
mov
nop
mov
test
loopne
sbb
xor
add
push
or
sbb
and
andb
fimull
sbb
fstl
xchg
sbb
shrl
pop
mov
out
mov
faddl
rclb
xorl
sub
out
jecxz
xchg
xor
push
push
mov
or
xorl
sub
cld
add
and
call
xor
adc
out
adc
mov
shl
jmp
inc
xchg
pushf
ficoms
push
adc
pop
adc
sbb
or
pop
movsb
push
test
push
les
add
cltd
ret
jne
nop
imul
rclb
add
mov
std
pusha
mov
push
push
faddl
jb
std
insb
adc
mov
dec
sub
pop
jl
mov
jle
test
push
adc
push
outsl
jne
add
bound
sbb
xor
scas
ja
loopne
cmp
outsb
daa
fiaddl
int
test
inc
out
cmpsl
adc
add
addr16
pusha
fdivs
adc
push
std
pop
mov
push
push
rolb
pusha
pop
adcl
test
ret
fcomp
pop
and
lock
mov
inc
xor
cmp
mov
sub
mov
push
mov
or
popl
fidivrs
out
decb
pop
out
mov
fs
add
les
adcl
add
cmp
push
jl
mov
jne
rolb
test
or
or
xchg
mov
inc
les
std
sti
add
shrb
xchg
inc
dec
lcall
repz
jmp
add
xor
addb
or
add
fcompl
cs
add
int3
sub
aaa
jns
dec
pop
inc
pop
cld
add
leave
sub
loopne
jl
and
dec
dec
fists
es
or
inc
inc
outsb
aas
and
sbb
aaa
je
mov
xor
lods
xchg
mov
and
mov
push
lds
sub
cli
ss
repz
xchg
mov
jnp
repz
sbb
roll
xchg
ds
repz
cmp
scas
add
dec
aam
lds
add
mov
inc
mov
push
mov
add
or
or
shll
pmulhw
xchg
call
add
data16
inc
or
in
pop
push
je
gs
sbb
or
fwait
mov
into
mov
mov
stos
mov
inc
lea
std
adc
out
adc
les
sub
pop
inc
inc
mov
xchg
les
and
and
adc
inc
push
or
inc
push
cmp
sub
push
addl
mov
mov
mov
xchg
add
aaa
add
cwtl
push
push
inc
arpl
or
push
add
xor
ror
sbb
rorb
loopne
adc
push
sbb
repz
fldl
repnz
mov
fcmovne
add
loop
cmpl
xchg
stos
sbb
push
or
dec
addl
pusha
lock
mov
sub
push
add
lock
inc
fcoml
cli
lds
push
xor
sbb
sbb
jbe
or
pop
pop
xor
mov
push
aam
sahf
push
ret
mov
lret
dec
add
popa
dec
and
ret
insl
enter
mov
xchg
dec
pop
and
loopnew
add
jne
scas
stos
add
ficomps
or
dec
xchg
add
leave
xchg
jmp
cli
xchg
loop
aam
and
push
pop
jp
mov
push
ds
adc
dec
cmp
mov
mov
push
push
es
ss
bound
sbb
pop
xor
and
aad
dec
iret
je
push
mov
adc
fucomi
mov
adc
pop
pop
jge
test
lret
mov
pushf
xor
inc
enter
inc
cmp
inc
call
mov
add
dec
test
inc
inc
call
push
cmp
pop
xchg
dec
lods
lods
jl
std
add
pop
fiaddl
xlat
test
testl
cmp
enter
inc
das
jo
pop
xor
lahf
add
mov
inc
std
dec
out
iret
or
pop
inc
inc
inc
dec
dec
clc
lretw
adcl
les
shrb
push
add
outsl
sbb
mov
sub
pop
cltd
push
mov
outsl
js
pusha
repnz
add
outsb
xchg
adc
jns
nop
rorl
pop
nop
inc
mov
sbb
or
or
orps
add
xor
loop
pop
dec
inc
inc
dec
cmpsb
arpl
popa
jnp
pop
mov
mov
xchg
sbb
pop
stos
jg
pop
les
scas
mov
sbb
adc
mov
push
mov
mov
jnp
mov
inc
sub
sbb
dec
jns
repnz
ret
or
js
add
inc
xchg
rclb
mov
and
lock
pop
repnz
push
addb
cmpsb
in
mov
sbb
and
push
loop
incb
loop
mov
roll
call
xchg
das
mov
cmp
jbe
test
push
xor
xchg
push
or
aaa
cmp
subl
or
aad
sbb
fistpll
mov
jbe
pop
pop
mov
movl
sub
add
in
sbb
sbb
les
or
inc
lock
cmpsb
mov
pop
fsubr
fadd
mov
mov
xchg
jbe
push
adc
inc
adc
ja
jmp
fidivl
xchg
push
lea
incl
rorl
add
sub
fdivr
adc
add
jmp
scas
mov
pop
popa
fisubl
jle
push
mov
adc
aad
xchg
outsl
jb
insb
or
outsl
lret
mov
in
or
mov
mov
jo
sbb
and
xchg
cmp
pop
loopne
jg
jl
out
lock
test
loope
xor
jbe
adc
icebp
push
adc
mov
aas
cli
or
dec
mov
pushf
lret
sub
jne
mov
or
cmp
in
xor
pop
push
fnclex
add
push
fidivrl
scas
cmpb
push
adc
dec
loop
je
mov
arpl
mov
pop
dec
xor
xor
icebp
push
pop
push
push
push
jne
adc
mov
fimull
ds
cmp
cmp
mov
cmpsb
or
xor
dec
jo
mov
cmp
xchg
addr16
das
ret
sbbb
mov
inc
sarl
scas
adc
push
and
push
pop
lcall
mov
adc
add
mov
cwtl
movsb
cmp
push
inc
jl
and
sbb
cltd
das
xchg
xchg
inc
push
and
ret
sub
push
iret
sarb
push
movzbl
cmp
inc
scas
mov
xchg
jmp
inc
wbinvd
in
nop
mov
pushf
sub
in
std
dec
xor
daa
mov
shll
dec
jl
inc
ss
add
or
sahf
imul
out
addr16
out
mov
sub
or
mov
sbb
shll
push
jmp
imul
mul
adc
mov
xlat
pop
pop
push
pop
cmp
inc
push
dec
xchg
fisttpl
mov
inc
test
sub
jb
jmp
adc
mov
mov
push
mov
xchg
push
and
pop
mov
push
adc
or
in
adc
inc
loopne
add
inc
imull
test
push
or
sbb
mov
sbb
das
scas
mov
add
rclb
xchg
mov
mov
mov
cmp
pushf
dec
jne
sub
ret
xchg
add
jns
mov
mov
dec
insl
cld
inc
pushf
in
addr16
dec
adc
push
push
adc
xchg
mov
jl
or
or
jae
push
xor
test
ret
lahf
loopne
hlt
dec
jns
push
lods
and
pop
pushf
push
imul
aad
push
push
sbb
or
cmpsl
ja
mov
loopne
inc
cli
and
mov
in
or
add
pusha
scas
pop
stc
repnz
sbb
pop
and
popa
and
arpl
xchg
sub
hlt
mov
mov
add
xor
jg
sub
sarb
mov
mov
push
daa
or
push
in
fs
sbb
inc
lods
ljmp
cmp
jecxz
rclb
inc
repz
xor
pop
lahf
jg
push
cmp
roll
fsubrl
dec
push
mov
pop
pop
adc
xor
mov
add
sub
inc
je
or
mov
mov
jmp
xchg
jbe
push
shrb
inc
pop
jb
or
jbe
pop
add
stc
mov
push
sbb
je
testb
imulb
dec
xchg
lret
fisttpl
mov
pushf
pop
fwait
pop
js
jae
or
mov
inc
dec
add
mov
bound
cmpsl
test
rcrb
and
or
fistpll
cmp
jbe
or
mov
mov
and
out
shlb
jae
sub
cmpsb
ds
inc
je
xchg
test
or
sub
popa
xor
sbb
adc
sub
std
insl
and
sbb
xor
mov
mov
pop
add
or
icebp
add
adc
insb
lods
aad
mov
pop
pop
xchg
xchg
adc
ret
fs
jbe
ja
mov
dec
or
lea
lock
add
inc
or
cltd
inc
cltd
or
pop
xchg
push
fdivrs
stos
cmp
add
add
push
jo
adc
push
mov
or
popf
insl
cmp
jle
jns
addb
push
movb
push
insb
test
aad
cmc
mov
pop
dec
orb
icebp
xor
imul
jbe
sti
mov
pop
das
jb
into
gs
imul
into
cltd
push
dec
sbb
jbe
std
jg
lea
decb
dec
jne
cmp
mov
loopne
jb
xor
inc
adc
aas
shl
inc
and
sub
or
sbb
xor
and
xchg
mov
aas
outsb
aam
ljmp
cmp
push
pop
pop
pop
push
cmp
jp
imul
inc
leave
icebp
es
push
adc
and
sub
add
dec
sub
inc
cmpsb
subb
push
xchg
inc
add
sbb
rorl
out
imul
fcmovu
adc
jne
dec
inc
and
sbb
push
dec
xchg
outsb
outsl
adc
xor
imul
mov
push
xchg
pop
mov
or
loope
jmp
rcll
xchg
dec
lcall
inc
dec
in
pop
sbb
popa
ljmp
pop
mov
inc
cmp
push
jmp
mov
push
inc
aam
lea
or
test
mov
sahf
add
and
adc
fists
in
lods
mov
test
push
dec
dec
cmp
dec
scas
and
sbb
jbe
xchg
xchg
pop
dec
in
out
jo
push
add
mov
loope
rorb
inc
dec
dec
dec
loope
pusha
lea
in
inc
cltd
loopne
and
push
and
adc
push
push
call
jg
xlat
fwait
pusha
and
cmp
shll
cmp
ja
inc
push
jp
mov
call
sbb
and
nop
push
pop
or
fnstenv
outsl
add
fnstenv
push
sub
jbe
push
sub
push
loop
adc
or
xor
jg
outsb
sbb
mov
push
jbe
nop
xchg
xchg
push
and
aas
imul
dec
sti
jae
sbb
mov
outsb
cmp
add
lods
filds
scas
add
loopne
xorl
mov
sub
sub
outsb
inc
call
add
mov
subps
jb
xchg
icebp
and
popf
xlat
nop
insl
jmp
mov
push
loopne
aaa
jl
sub
inc
lea
inc
popa
add
popa
sarl
add
shl
mov
xchg
add
sub
add
mov
loope
or
mov
hlt
mov
movsb
bound
iret
sub
daa
lods
or
mov
ret
cmp
add
popa
mov
adc
and
push
xor
ret
mov
xor
xor
stos
pusha
mov
loop
cmp
mov
aas
push
lahf
sub
mov
fsubr
sub
pop
pop
sub
push
lahf
std
xchg
push
add
jae
push
sub
mov
inc
cs
sub
add
nop
addr16
pop
fistl
fcomps
mov
pop
xor
mov
inc
xor
jmp
push
lds
jns
push
sub
adc
iret
add
int3
leave
lods
adc
inc
mov
or
adcl
int
in
inc
adc
or
sbb
pop
sub
dec
xor
sub
cmp
sub
adc
insl
xor
inc
pushf
inc
push
dec
faddl
push
enter
xchg
push
add
push
pop
push
mov
insb
push
pusha
sub
call
add
fldt
insb
xor
add
adc
stos
aas
lahf
mov
cmpsl
mov
rol
ds
call
inc
inc
add
addl
je
dec
or
sub
adc
aaa
fs
mov
pop
jg
xchg
pop
outsl
sbb
cwtl
inc
cmp
jne
jle
scas
int3
dec
and
dec
xchg
or
inc
add
sbb
pusha
int3
push
pop
cli
aas
push
fs
lret
aaa
xor
mov
sub
mov
call
push
int
sbb
add
jo
int3
pushf
mov
cli
inc
je
scas
inc
jmp
bound
test
or
pop
pop
dec
push
jb
dec
jb
add
jbe
test
rcrl
mov
stos
cmp
mov
das
hlt
ds
and
inc
popf
inc
subb
clc
or
adc
icebp
pop
dec
aaa
mov
mov
fcom
jecxz
fistpll
inc
mov
adc
xor
call
dec
cld
pop
sub
pop
jl
mov
outsl
fsubrl
add
inc
xchg
push
cmp
push
cmp
insl
imul
add
push
in
mov
pop
test
push
mov
shld
sbb
push
sarb
push
mov
data16
outsb
js
mov
jl
jmp
sbb
cmp
adc
inc
mov
adc
jge
js
add
mov
adc
mov
push
adc
jo
jne
jle
inc
imul
in
dec
call
sub
imul
fistpl
inc
and
sti
bound
sub
jne
adc
inc
mov
adc
inc
mov
insl
or
aas
icebp
clc
jne
cmp
sub
xor
jg
cmp
jne
and
cs
clc
inc
xchg
xor
dec
or
fmull
jl
inc
xor
inc
lods
mov
pop
addr16
mov
sbb
jmp
cwtl
dec
and
push
mov
pop
or
or
jl
fs
pop
test
sarb
add
push
mov
pushf
dec
pop
lock
in
fdivl
jno
jne
jmp
insb
and
xor
das
icebp
je
sub
imul
inc
dec
aaa
jnp
mov
test
push
mov
insb
jmp
dec
sbb
sti
mov
mov
jne
pop
enter
sub
jne
fsubl
mov
aaa
mov
sbb
pop
inc
adc
test
inc
jl
popf
cld
or
adc
mov
mov
subb
mov
mov
lock
mov
mov
adc
jmp
mov
pop
jge
jmp
fdivl
mov
jp
sub
icebp
rorb
arpl
jbe
mov
push
jecxz
lods
sbb
outsb
push
orb
mov
iret
je
orl
jl
mov
inc
add
movsl
pop
cmp
or
xor
inc
loopne
or
sbb
and
out
in
test
xor
inc
mov
and
pop
movsb
xor
push
adc
dec
shlb
ret
mov
add
xchg
jmp
jne
inc
mov
add
xchg
std
addb
ja
loope
dec
pusha
sbb
sbb
out
fnstenv
inc
pop
push
add
mov
fiadds
mov
lahf
aaa
xor
sub
ret
loop
subl
sbb
adc
adc
pop
adc
add
inc
xchg
ret
adc
pop
adc
stos
sbb
adc
fs
cmp
loopne
inc
imul
xchg
adc
shlb
lods
pop
iret
or
xor
pop
rcl
mov
inc
adc
xchg
push
adc
xchg
pushf
add
mov
mov
out
mov
popa
and
fstpt
sub
sub
inc
lods
and
mov
mov
dec
fs
sbb
lret
cmp
push
lahf
dec
pop
push
pop
cmp
call
mov
sbb
andl
mov
pop
inc
jmp
shll
std
inc
or
es
rcrl
jno
inc
movsb
pop
sub
add
sbb
sbb
lea
jle
cmp
xor
lock
cmp
jne
lods
les
add
xchg
fistl
mov
push
pop
push
mov
add
ja
or
stc
ljmp
pop
jmp
pop
inc
movsb
sbb
fildl
push
icebp
movsb
fadds
popf
rcrb
xor
fsubl
xchg
pop
inc
leave
sub
sub
pop
pop
nop
jno
add
sub
xor
jno
and
and
std
add
sarb
insb
mov
mov
mov
mov
bound
clc
push
icebp
cmpb
or
add
pusha
cmp
pop
rorl
js
fbld
xor
loope
mov
xchg
mov
in
in
rclb
xchg
adc
add
in
scas
push
adcl
movsb
les
xor
inc
and
fs
push
or
or
cmp
clc
scas
and
or
adc
push
inc
je
mov
imul
fimull
cld
inc
and
pusha
cltd
cld
jbe
imul
sub
push
pop
scas
mov
xor
sub
je
xor
icebp
mov
inc
js
fadds
shlb
cmp
push
jno
je
push
sub
lcall
inc
dec
xchg
das
mov
adc
outsl
add
nopl
and
jb
xchg
fildl
xchg
loope
pop
pop
js
ret
push
inc
push
pop
add
pop
inc
lods
movsb
jae
inc
push
mov
sbb
sbb
pusha
mov
testb
loop
mov
dec
or
pop
or
popa
xchg
stc
imul
dec
and
and
add
out
mov
inc
jp
rcr
ss
pop
sub
xlat
in
xchg
adc
mov
push
cwtl
dec
das
addb
mov
idivb
sbb
mov
mov
inc
xor
mov
xor
mov
xchg
push
fcomps
sub
mov
sub
sub
in
daa
out
dec
jne
orl
or
jno
adc
cmp
sub
loope
xchg
push
cmp
jne
int
and
and
jmp
jo
out
jl
mov
adc
mov
mov
inc
and
or
sbb
add
dec
mov
mov
rolb
jo
add
and
aas
jmp
push
push
insb
ss
notl
add
or
pusha
pop
add
pusha
adc
adc
xchg
and
in
inc
add
inc
push
or
or
pop
push
dec
mov
movb
je
sarb
mov
in
xor
push
faddl
popf
xor
inc
inc
adc
xchg
cmp
enter
pusha
rcrl
rorb
xorb
icebp
cmp
jae
fneni(8087
cmpsl
orl
rorl
fcoml
push
bound
pushf
mov
inc
xchg
pushf
fbld
enter
mov
dec
arpl
aad
push
fdiv
inc
jno
sbb
outsb
add
dec
adc
mov
aas
mov
sbb
mov
sub
xor
sub
data16
outsb
loop
scas
push
push
push
mov
pusha
mov
rcrl
mov
sbb
in
cmpsl
cmc
xchg
sub
outsb
xchg
inc
pop
nop
shrl
lret
inc
inc
in
sub
lea
inc
sbb
clc
inc
mov
mov
rolb
mov
adc
shrl
ja
cwtl
sub
sub
sub
jbe
pusha
mov
xor
pop
add
lods
cmp
loopne
add
dec
insb
sbb
cmpsl
mov
push
insb
inc
or
jmp
xor
cwtl
inc
push
add
outsb
pop
test
cmp
push
repnz
loope
setle
ficompl
jae
fmuls
add
or
sbb
push
and
scas
notl
int
and
pop
out
lea
call
sbb
cmp
insl
pop
inc
jl
push
jle
cmp
test
add
jle
or
jo
stos
cmp
movsb
xorl
jecxz
or
dec
imul
dec
and
adc
pop
adc
xchg
and
lahf
push
loope
call
in
lcall
je
inc
or
jne
sub
lret
jmp
push
call
lds
ret
dec
xor
cwtl
xchg
testl
pop
push
loop
and
xchg
adc
pushf
mov
cwtl
lods
or
dec
js
sbb
xchg
adc
and
xor
add
push
icebp
dec
inc
imul
dec
dec
push
add
ja
or
add
iret
adc
adc
push
xchg
or
sbb
push
and
rorl
js
xor
sub
jge
subb
push
movl
pop
jg
and
dec
xor
imul
sub
fiadds
dec
sub
cmp
push
sbb
add
nop
out
pop
push
dec
arpl
and
das
mov
outsb
mov
dec
imul
jl
daa
sub
addb
dec
sub
bound
nop
xor
aam
repz
verw
sub
push
fdivrl
add
sbb
mov
lea
add
add
and
and
adc
and
das
test
pop
jbe
sbb
clc
rolb
in
stos
cmp
repz
xor
data16
jecxz
nop
inc
inc
xchg
cmp
cmp
jbe
rorl
scas
jno
xorl
cmp
cli
addr16
sub
mov
movsb
jp
cmp
inc
jae
push
pop
add
popa
outsl
cld
inc
xchg
add
inc
in
inc
add
mov
jp
sarb
mov
insl
enter
cmp
clc
jp
mov
std
inc
add
mov
or
push
dec
jge
adc
inc
mov
sub
pop
mov
inc
dec
push
push
and
test
call
cwtl
je
sub
adc
cli
pushf
in
arpl
and
mov
dec
jne
push
not
push
xor
dec
mov
cmp
out
xor
cmc
test
frstor
mov
adcb
stos
loopne
test
bnd
ljmp
and
sti
inc
gs
xchg
addr16
mov
mov
mov
inc
mov
lods
mov
push
pop
mov
inc
inc
mov
sub
push
mov
mov
lods
mov
inc
popa
inc
cmp
lea
add
sub
add
cs
inc
push
cltd
and
aam
cmp
pop
scas
push
into
pop
and
loop
sysenter
movsl
add
lods
and
inc
pop
mov
ret
es
and
dec
cmc
add
adc
pushf
mov
and
es
inc
pop
mov
cltd
call
test
sub
sbb
or
and
ss
scas
inc
popa
mov
dec
sub
out
test
push
lods
bound
xor
loope
cmp
ret
cld
lds
sbb
add
enter
mov
ret
rolb
pop
lret
and
shll
push
jbe
pop
xorb
mov
sarl
dec
mov
mov
lock
sbb
mov
inc
jne
and
mov
in
jecxz
sbb
push
push
jecxz,pn
or
and
mov
lods
fldenv
sbbb
arpl
fdivr
rclb
jae
cmpl
xor
leave
dec
dec
dec
daa
lods
jecxz
fsubrs
xor
dec
xchg
inc
call
cli
mov
ss
mov
cmp
adc
and
ja
or
sbb
jmp
cmpsb
fidivs
fsub
cmp
sbb
js
imul
int3
xchg
xchg
in
lret
imul
sbb
xchg
lds
movsl
inc
jp
jmp
ret
or
lock
ret
fdivl
mov
shl
test
add
enter
sbb
loop
push
imul
inc
les
jg
adc
xor
or
mov
sbb
sbb
mov
rolb
xlat
push
fistpll
jb
in
inc
fwait
adc
adc
push
ficomps
and
jno
cltd
insb
dec
sbb
xorb
mov
jl
add
inc
xor
mov
inc
or
xchg
rorb
mov
rcrb
shll
dec
rol
movb
lahf
dec
push
loope
and
mov
jo
xor
xchg
enter
xor
int
push
inc
jo
jbe,pn
xchg
mov
and
imul
dec
dec
push
repnz
inc
push
xchg
adc
and
adc
dec
repz
add
and
jno
mov
loop
popl
mov
cmpsb
jl
pop
or
xchg
mov
cmpb
cs
xchg
pop
or
hlt
hlt
jns
nop
inc
mov
mov
or
xor
jno
addr16
adc
sub
inc
mov
inc
outsl
inc
mov
sbb
mov
xchg
adc
add
cmp
das
add
std
pop
frstor
ss
scas
mov
lahf
push
rol
pop
push
xchg
inc
push
outsb
xor
mov
mov
xchg
scas
xor
test
mov
dec
cmp
push
shrl
inc
or
add
push
fnstsw
dec
cmp
sbb
cmpsl
sbb
inc
inc
ss
mov
cld
add
or
lock
sar
lods
push
jmp
imul
cmp
lcall
aam
jo
icebp
idiv
mov
dec
loop
mov
adc
pop
in
mov
and
lea
adc
jo
faddl
call
test
xchg
jo
mov
cmp
or
mov
repnz
fimuls
adc
and
mov
xchg
je
mov
sbb
pop
sub
fldenv
mov
bound
adc
sub
mov
mov
mov
push
in
dec
add
xchg
push
mov
add
aam
je
xchg
lods
out
sahf
xor
push
dec
push
sub
xchg
lock
ficoml
add
dec
xor
mov
imul
or
jo
inc
je
call
fs
cmp
push
in
mov
std
test
nop
fcom
dec
push
or
inc
xor
mov
mov
into
shlb
xchg
fidivrl
adc
fldenv
sbb
and
mov
scas
sahf
dec
lods
and
push
insb
fcmovnb
and
ficompl
mov
lds
add
cltd
shl
ret
ret
add
dec
shl
dec
mov
inc
jmp
sub
addr16
push
add
insb
out
inc
dec
data16
lret
lock
or
ret
jb
addr16
mov
push
jl
test
in
push
dec
dec
or
mov
jno
in
je
add
push
lock
or
int3
add
pop
pop
xchg
adc
lea
pop
es
and
cmp
mov
js
movsb
loop
or
cmp
add
xchg
dec
in
pushf
outsb
mov
or
or
inc
pop
loope
pop
sub
ds
and
adc
and
jp
xorb
dec
out
sbb
xchg
add
sub
jbe
dec
std
test
jne
mov
into
add
enter
xlat
adc
fs
inc
pop
and
aam
push
mov
bound
inc
cmc
imul
pop
loope
dec
clc
mov
sbb
cmc
test
les
ret
shrb
push
mov
mov
inc
test
pop
push
lds
add
ss
nop
inc
cmp
add
xchg
push
sbb
push
inc
xorb
and
js
outsb
sbb
rclb
or
lret
push
or
xor
mov
ftst
xchg
sub
mov
adc
add
mov
cli
adc
movb
fsubrs
mov
sbb
je
or
pop
xchg
sbb
insb
add
lret
or
out
je
mov
loope
pop
jne
lds
aad
div
pushf
dec
cmpb
jbe
sub
xchg
mov
mov
push
mov
outsb
sbb
xor
fwait
movsl
add
sar
int3
mov
mov
xchg
add
sahf
adc
add
xchg
mov
aad
mov
lods
sub
lods
js
xorb
xchg
movsb
jecxz
adc
add
sbb
shl
addb
lcall
sti
cmpsl
jle
mov
mov
adc
jne
lods
ja,pt
xchg
or
adc
mov
xor
add
mov
jle
add
mov
pop
mov
mov
mov
aam
sbb
pop
add
lea
xor
adc
jne
icebp
pop
mov
repnz
add
pop
rorb
or
bound
je
pop
lock
mov
and
add
sti
sbb
imul
mov
dec
push
testb
dec
pop
jle
adc
ffree
sbb
rcl
enter
dec
fs
jo
pop
mov
shlb
sub
mov
jae
or
and
and
mov
or
lret
bound
add
cmpsb
or
js
dec
jno
dec
scas
mov
inc
enter
decb
inc
add
lods
mov
mov
sahf
push
sub
out
pop
dec
push
data16
mov
ljmp
sar
popf
in
or
inc
dec
xchg
loopne
mov
cltd
sbb
bound
push
lea
je
or
lahf
dec
sub
add
dec
addr16
loopne
cmc
add
mov
xor
in
dec
pop
lcall
mov
lock
xchg
sub
jl
cld
mov
repnz
adc
ret
aas
cmp
xchg
mov
pusha
jo
outsb
cltd
inc
call
add
popa
add
pusha
push
daa
add
xor
test
mov
lea
cs
das
and
sub
mov
je
mov
in
sti
sub
and
lea
pop
mov
pop
dec
adc
adc
sbb
mov
pop
rolb
xchg
push
lods
fcmovnb
andb
repnz
out
mov
add
adc
and
mov
popa
dec
inc
mov
repz
mov
fs
pushf
dec
mov
and
pop
sti
jl
or
xchg
mov
arpl
and
or
or
fisttps
sbb
sbb
test
or
sbb
adc
aas
and
aaa
andb
jp
sub
push
das
fmuls
jl
in
aaa
ret
xchg
jge
cwtl
xchg
push
jae
sahf
or
jno
mov
lods
lahf
xor
mov
xor
je
mov
shlb
xchg
and
xchg
ret
push
cmp
push
jno
adc
mov
aam
callw
lds
cmp
and
roll
mov
loopne
js
mov
mov
icebp
jmp
or
daa
test
test
lods
lahf
int3
jbe
adc
cli
es
fimuls
mov
dec
push
add
push
add
dec
jg
mov
fcomip
ja
jg
sar
mov
sarl
rcrl
jmp
xor
test
add
jmp
pop
xor
add
or
ds
imul
mov
xchg
adc
jns
xor
pop
sub
cmp
repnz
std
mov
nop
out
je
add
daa
mov
and
lods
ret
cmp
sti
cmp
nop
sbbl
fmuls
cmp
clc
mov
jmp
std
mov
cld
sub
pop
cmp
or
jne
mov
mov
ljmp
add
or
jge
mov
ds
dec
and
pop
bnd
scas
dec
mov
das
call
addr16
stos
and
test
repz
lods
imul
xor
sbb
mov
mov
pop
adc
sub
and
and
jecxz
fistpll
into
sti
inc
or
push
pop
add
or
add
rcrb
pop
push
ss
mov
inc
inc
mov
xchg
lea
mov
or
push
add
xchg
pusha
aad
inc
sahf
mov
dec
cld
add
push
adc
lock
pop
rorb
inc
je
add
cmp
adc
aam
push
inc
rcl
mov
loopne
mov
sbb
add
mov
sbb
inc
add
scas
adc
aas
aas
mov
adcb
dec
inc
pop
sti
or
loop
adc
dec
mov
lock
cmp
mov
add
cli
inc
jl
cmpl
add
xchg
mov
cmp
cli
sub
sbb
push
dec
pop
or
outsb
pop
add
pop
inc
out
mov
roll
insl
inc
sub
add
mov
push
loopne
xchg
and
push
sahf
outsb
loop
sub
jg
lea
mov
punpckhwd
addr16
inc
mov
insl
out
fdivrs
or
push
mov
lea
into
jae
add
andl
je
hlt
inc
nop
xor
ficomps
xchg
adc
adcb
out
xchg
mov
rcr
sbb
jnp
dec
mov
sub
push
sbb
add
xchg
jmp
mov
xchg
add
push
inc
das
dec
pop
stc
jne
pop
mov
pusha
cmp
adc
cmp
mov
dec
sbb
xchg
inc
add
dec
add
ret
mov
pusha
push
stc
jg
adc
sbb
ret
add
shl
dec
push
std
and
ss
jb
push
cmpb
and
add
inc
cmp
lea
fs
and
xor
mov
out
or
ljmp
cmpsl
xor
cmp
sbb
sbb
pop
ljmp
mov
fmuls
pushf
pop
adc
inc
push
pop
enter
rcll
or
dec
negb
sub
inc
movsb
rclb
call
jb
adc
pop
add
sub
inc
sub
call
adc
jne
orb
xchg
inc
and
mov
mov
cmp
or
lea
mov
fmull
dec
lds
mov
adc
or
mov
inc
and
xchg
addb
sbb
mov
pop
xchg
add
push
add
nop
mov
push
mov
mov
leave
inc
add
adc
jo
cmovnp
or
add
test
or
and
push
stos
xor
sub
pop
add
cmp
imul
jo
jns
and
loopne
fistps
ja
imul
fs
cmp
shlb
xchg
sub
iret
adcl
clc
cmp
jne
adcb
dec
andb
outsl
pop
mov
mov
ret
ss
xlat
or
push
add
xor
inc
pop
neg
adc
loop
jmp
pop
adc
jne
mov
shlb
push
adcb
mov
sub
aas
xchg
sub
and
cli
dec
and
add
dec
cmpsl
xchg
faddp
xchg
ret
inc
flds
push
cs
incb
jno
dec
inc
imul
or
enter
out
mov
fbld
xor
stc
clc
or
shll
loopne
adc
popa
arpl
inc
rcll
stc
and
call
mov
inc
mov
ret
dec
push
sub
mov
or
push
lcall
inc
mov
jge
imul
adc
shrb
fucomp
mov
sub
push
cmp
mulb
mov
mov
xor
sbb
imul
sbb
and
push
add
scas
nop
dec
and
ljmp
jo
adc
mov
sbb
sub
sub
sub
pusha
pop
jns
mov
push
or
ror
push
xchg
mov
xor
inc
cwtl
sbb
clc
lret
add
or
or
je
adc
dec
dec
mov
test
test
std
jle
clc
data16
sbb
pop
ds
cmp
or
jae
rorb
jl
xchg
push
xor
je
movsb
push
mov
aad
adcb
ret
sar
and
lods
inc
icebp
push
xchg
cmp
push
sub
jns
repz
jmp
in
pop
jecxz
add
mov
punpcklbw
adc
je
stc
jmp
inc
and
jl
inc
inc
orl
xchg
mov
inc
cmc
dec
mov
mov
mov
outsb
sbb
aaa
xor
cmp
push
inc
lret
or
xor
xlat
lods
cmp
push
ret
or
push
je
sub
addb
sub
adc
adc
cwtl
jp
test
jne
shlb
pop
xlat
mov
int3
loope
test
push
adc
push
rclb
or
clc
lret
rorb
cmc
pop
push
push
pop
dec
or
dec
xor
mov
insb
jl
inc
lret
mov
nop
and
cmpl
add
sub
mov
js
push
xchg
clc
je
cmp
jge
and
test
mov
mov
or
sbb
fsubrl
mov
sbb
movsb
push
or
lea
mov
cmp
mov
inc
inc
je
int3
lock
xchg
add
xorl
xor
mov
jb
insl
nop
and
aad
addb
push
lcall
xor
xchg
push
add
or
cld
or
sbb
inc
shrd
pop
dec
imul
stos
loope
mov
mov
add
mov
aas
push
mov
or
mov
mov
push
push
push
test
cmp
add
loope
inc
clc
pop
cmp
js
aam
mov
inc
pop
enter
inc
mov
add
fisttps
add
sbb
mov
push
mov
xlat
sbb
mov
pop
jo
outsb
lds
pusha
push
and
not
mov
sbb
push
mov
divb
xor
out
in
aaa
gs
lods
inc
jmp
cmp
and
arpl
mulb
fwait
cli
inc
dec
lcall
orb
add
rcr
dec
xchg
adc
pop
xchg
and
sbb
adc
pop
push
fdivrs
loopne
lock
and
jge
mov
lret
cld
popf
sbb
add
hlt
dec
push
imul
or
cmpsl
sub
js
mov
pop
or
lret
add
mov
cmpsl
or
push
sub
fcmovne
and
adc
fmull
fstps
jl
mov
push
or
rcl
ss
ljmp
lretw
ja
mov
push
pop
je
popa
fisttpl
add
cltd
mov
sti
ljmp
jnp
repz
mov
push
clc
das
dec
imul
aas
mov
lahf
dec
pop
add
insl
sbb
shrb
push
repnz
mov
pop
push
rorl
or
mov
xchg
lods
int3
fstps
imull
dec
cli
cmc
add
xchg
dec
push
adc
cli
dec
je
movsb
push
bound
js
jo
jo
adc
mov
sbb
push
dec
dec
xchg
pop
les
cwtl
cmp
xchg
inc
arpl
shlb
jmp
adcl
inc
add
jmp
jb
jns
add
push
pop
pop
sub
sbbb
dec
mov
mov
dec
push
fiaddl
jmp
add
cmp
and
xchg
xor
jnp
notl
sub
loop
shlb
cs
xlat
clc
or
mov
sbb
fadds
lret
xorb
adc
test
xor
lret
test
xchg
mov
pop
add
fdivrl
or
incb
pop
adc
sbb
inc
or
add
sbb
sub
rcll
sub
push
fldt
fldcw
sbb
mov
fsubs
xchg
push
xor
dec
sub
cmp
cmp
pop
jb
sbb
xor
clc
jae
lret
ret
adc
adc
mov
insb
pop
xor
dec
xor
push
jle
fcomps
std
sbb
dec
mov
clc
jbe
je
ja
mov
sub
sbb
stos
lea
inc
adc
ja
xchg
mov
sbb
ret
and
add
sub
pushf
adc
or
sbb
mov
shlb
ljmp
push
xchg
loopne
xchg
add
or
push
add
add
mov
or
sub
jb
and
sbb
aas
cmp
je
or
mov
lret
sbb
subl
std
push
lods
push
inc
in
or
lcall
jns
sarb
sbb
cmpsl
enter
xchg
mov
icebp
and
push
movsb
inc
dec
xchg
pushf
fstps
sub
lret
mov
add
sub
lea
sbb
add
jbe
and
mov
xor
mov
sub
outsl
test
sbb
push
mov
jo
dec
sbb
out
je
cltd
mov
sbb
pop
sahf
mov
adc
add
inc
adc
adc
test
cwtl
dec
add
and
hlt
cli
xchg
iret
jmp
and
jb
sbb
add
sub
inc
inc
dec
push
ret
mov
das
cmp
aad
add
add
loope
mov
pop
pop
sub
loope
pusha
ret
jg
or
adc
mov
and
stos
push
or
test
push
ficompl
jae
add
xchg
mov
push
cwtl
push
sub
mov
les
in
rol
test
in
push
pop
ljmp
push
sbb
sahf
inc
or
out
mov
icebp
fwait
aad
ljmp
dec
stc
rcll
add
or
pop
or
pop
jae
into
mov
jb
xchg
dec
push
fcomps
push
or
test
mov
mov
mov
das
jle
mov
sbb
adcl
pop
mov
mov
loop
nop
repz
ret
adc
jl
icebp
js
xchg
sbb
jecxz
outsl
xor
push
and
push
mov
aad
mov
out
addb
mov
push
fidivl
test
test
xchg
popa
add
mov
pop
sbb
cmpsl
jge
push
aam
mov
jl
sub
scas
movsb
mov
dec
add
pop
imul
sub
sub
ljmp
daa
xor
add
test
icebp
xor
pop
push
pop
dec
adc
sub
pop
sbb
pop
push
cmp
cmpl
push
cmpb
ss
pop
sbb
das
inc
jae
mov
inc
mov
add
ret
sbb
push
fdivl
and
ret
mov
add
nop
xchg
add
or
cmp
ljmp
int
inc
cmp
push
ficoms
cmpsb
cmp
adc
test
push
and
rorl
repnz
push
xlat
push
jl
xlat
mov
jge
add
and
add
jae
cmpsl
mov
mov
sbbb
push
cwtl
push
in
ficoms
inc
adc
sbb
loopne
or
mov
int3
mov
pop
ljmp
ljmp
push
decb
in
mov
inc
sbb
dec
jne
mov
movsl
mov
pusha
push
lret
pop
stc
or
sub
mov
fbld
jno
sbb
jle
add
sbb
sti
pop
sub
icebp
and
push
in
jnp
mov
ds
mov
nop
xchg
jmp
xchg
adc
sbb
movsl
call
fcmovnu
in
cmp
or
push
pushl
mov
pop
sub
mov
mov
add
inc
inc
pop
mov
and
adc
ja
mov
push
mov
push
jo
push
push
push
pop
and
push
pop
outsl
sbb
pop
sub
jmp
fisttpl
ss
push
mov
mov
jnp
into
lcall
pop
adc
xor
jle
int3
mov
jbe
insl
jne
cmp
fiaddl
xor
inc
push
adc
nop
test
add
ljmp
inc
add
inc
sub
push
adc
repnz
mov
cmpb
push
push
jno
pop
xchg
xor
inc
add
jg
cmp
sub
fmulp
cmpsl
aam
xchg
dec
and
test
xchg
jle
sub
lock
mov
and
sbb
add
adc
xchg
jmp
inc
jge
or
and
adc
add
js
bound
cli
push
cmc
sbb
dec
and
ss
lea
stos
fistps
jmp
int3
testl
lods
jle
pusha
fbstp
inc
pusha
or
lret
fcmovnbe
addl
jne
dec
pop
cmp
mov
jmp
jmp
jo
inc
sbb
sbb
lgs
cmp
pusha
pusha
lods
cmp
mov
xchg
mov
lods
inc
je
or
push
lock
jl
iret
or
jl
cltd
dec
or
mov
sub
mov
mov
ret
aad
adc
mov
aam
adc
xor
mov
push
pop
adc
inc
pop
pop
and
dec
insb
xor
adc
pop
dec
shrb
loop
sbb
dec
mov
mov
sub
outsb
pushf
fcmovb
sti
lods
sbb
adc
filds
ret
into
and
add
mov
and
push
jmp
mov
or
xor
repnz
and
push
rolb
imul
ficoml
push
jo
les
test
insb
rclb
dec
movsb
pop
push
sbb
jo
lret
cld
or
adc
add
push
hlt
add
xor
push
sub
inc
inc
jae
adc
ret
stos
add
pop
mov
pop
or
shlb
notb
dec
cld
inc
js
push
movsl
mov
xchg
ret
xor
sub
sub
sbb
test
mov
rcrb
test
mov
repz
testl
or
jmp
sbb
add
sarb
mov
stos
sbb
test
int
hlt
xchg
and
cmp
test
push
bound
add
gs
sub
rorb
repz
jne
pop
inc
and
adc
xor
inc
mov
push
add
lret
js
cmpsb
mov
dec
je
insl
or
and
cmp
into
push
into
xchg
mov
lods
sarb
out
sbbb
xor
lock
sbb
add
les
pop
inc
inc
push
cli
mov
jl
das
inc
pop
xchg
xlat
lret
rclb
cmp
inc
arpl
xchg
dec
jo
roll
cmp
sbb
inc
sahf
and
rorl
iret
repz
sbb
adc
sbb
jb
push
pop
sub
sub
test
pop
loopne
sub
add
add
ret
push
or
cwtl
icebp
cwtl
push
je
push
cld
and
bound
inc
cmc
scas
jns
mov
loop
std
cmp
clc
push
cs
ja
cmp
incl
push
jns
add
sub
sub
mov
je
adcb
push
sub
adc
test
popf
inc
fdivrs
fisubrl
pop
mov
js
jecxz
movsb
fwait
jnp
mov
and
push
push
mov
test
mov
dec
dec
add
adc
inc
push
and
test
pop
lock
mov
push
push
lods
xor
xor
dec
jo
hlt
mov
mov
popa
push
xchg
mov
fsubrl
int3
in
inc
or
loopne
jp
mov
add
dec
mov
and
sahf
mov
push
push
inc
mov
or
push
addb
pop
jb
rclb
pop
and
sbb
pop
xor
adc
sbb
or
testl
pusha
addl
ret
pop
rorb
pop
out
bts
out
push
push
and
in
es
inc
sbb
mov
lea
pop
dec
pop
aas
lods
imul
jmp
inc
imul
outsb
xor
cmp
mov
cltd
stc
clc
sub
mov
adc
mov
add
shrb
mov
loope
or
push
adc
cmpb
inc
adc
xlat
mov
pop
adc
and
shrb
iret
mov
jne
jle
add
xchg
and
push
jp
xchg
sbb
push
stos
mov
add
sbb
mov
inc
mov
pop
inc
xchg
pop
ret
jg
and
stos
cmp
ljmp
mov
xor
sti
or
stos
pusha
cmp
xor
push
das
pusha
jmp
xor
sbb
inc
push
jo
sbb
jo
shr
dec
out
push
add
pop
xor
enter
mov
sbb
ljmp
xchg
ds
fucomip
in
xor
add
xor
push
mov
arpl
add
sar
dec
imul
mov
pop
cli
lea
add
push
adc
or
cld
push
inc
dec
add
cmp
push
dec
add
lret
mov
push
cmp
insl
sarl
push
testb
je
xor
decl
jmp
shrl
sub
push
shrl
loopne
push
stos
mov
or
xchg
es
or
adc
mov
adc
cmpb
and
mov
psrlq
mov
and
inc
cmc
mov
pop
sbb
lea
mov
add
mov
fwait
jbe
xor
mov
insl
jno
mov
sub
lahf
or
push
push
and
xchg
sbb
pop
xchg
jl
pop
ss
inc
cs
pop
pop
sbb
dec
mov
outsb
dec
sahf
lahf
inc
sbb
cmp
icebp
jl
stc
sub
cmp
lcall
cmp
sub
addb
adc
sti
sbb
loopne
pop
add
push
adc
mov
push
std
cmp
cmp
fisttpll
and
cli
pop
push
popf
inc
cmp
add
dec
aam
loopne
iret
sahf
add
subl
ja
pop
mov
daa
xor
cmp
mov
aaa
xchg
popf
add
in
mov
push
push
mov
and
sbb
ljmp
or
add
or
outsl
inc
dec
fldenv
lret
or
cmp
add
rcrb
sub
repnz
lods
mov
int3
and
push
out
xor
push
add
cmp
outsb
rcrl
dec
jg
mov
sub
push
inc
lcall
mov
fstpl
or
js
mov
push
jge
inc
rol
push
pushf
add
cwtl
outsb
push
dec
inc
add
push
xchg
push
and
add
enter
dec
dec
dec
movsb
adc
cmp
cli
push
jmp
test
iret
push
jo
movsb
cld
mov
test
lods
push
call
push
addb
adc
adc
fstps
push
sbb
lock
aad
mov
lds
inc
dec
dec
pop
jo
outsl
mov
rorb
xor
and
inc
xor
lcall
push
fiaddl
and
lock
inc
push
push
lea
sub
mov
sub
add
jmp
xchg
je
cwtl
aas
inc
or
js
mov
cmp
xchg
jmp
pmuludq
aas
pusha
mov
insb
movsb
adc
adc
push
jne
mov
xor
shlb
inc
xchg
xor
mov
insb
imul
inc
dec
shl
inc
or
mov
je
pop
enter
and
push
out
lock
push
cmc
add
push
jp
fcompl
inc
es
ret
loopne
jnp
imul
ljmp
pop
aad
aas
pop
pop
mov
sbbb
nop
pop
push
bound
or
cmp
shl
push
add
notl
loop
shr
and
adc
pop
or
mov
and
test
ja
shrl
mov
dec
xor
xchg
sbb
push
lods
mov
jnp
mov
push
mov
leave
incl
sub
or
lret
adcb
lahf
es
add
fwait
outsl
push
sub
push
sqrtps
test
ret
push
hlt
mov
jbe
mov
pop
xor
mov
inc
or
mov
inc
push
stc
mov
xchg
out
loopne
mov
push
in
push
mov
cmpsl
mov
sbb
int
xchg
add
lods
and
cmp
sub
inc
lods
hlt
sbb
push
dec
call
test
ja
out
sub
insb
push
or
shll
or
jp
movsb
lock
sar
std
add
sbbl
in
test
fs
das
add
roll
ss
push
mov
sbb
adc
rcrl
popa
popa
sahf
mov
inc
ljmp
movsb
test
jle
adc
dec
cltd
sub
loope
mov
test
std
inc
adc
adc
jae
out
sarl
mov
mov
movsb
imul
loopne
mov
inc
mov
sbb
cmpsb
fadds
popf
jg
lock
and
jg
js
jb
insl
fdivr
cmp
push
xor
insl
add
sbb
test
aaa
out
add
sbbb
sar
add
js
mov
das
clc
adc
stos
adc
sar
sub
fcmovnbe
sub
jo
mov
ret
faddl
nop
adc
add
xlat
and
or
jecxz
lds
test
cmc
mov
add
ss
imul
shl
imul
mov
sub
std
add
push
shl
mov
shr
mov
adc
ficomps
fisubrs
int
pop
movsb
hlt
repnz
or
jmp
pop
repnz
outsl
mov
ret
jmp
cmp
jle
cmc
iret
outsb
enter
lods
sub
sbb
movl
mov
icebp
fidivrs
vgetmantss
pop
sbb
push
or
pop
sub
jmp
cmp
jg
call
setp
cli
sub
sbb
arpl
or
jg
adc
sub
ffree
call
adc
loopne
push
mov
mov
cmp
xlat
mov
lds
sbb
xchg
mov
jg
cmp
mov
or
mov
and
cmc
js
test
push
mov
sub
imull
inc
pop
les
inc
mov
jns
dec
enter
push
push
rclb
mov
mov
pusha
loop
js
fiadds
fnstsw
js
and
js
popa
cltd
cmp
jp
add
nop
mov
or
lea
mov
push
dec
or
clc
dec
lea
pop
shl
mov
ds
and
ret
xchg
mov
sub
mov
xor
rorb
lcall
xchg
jbe
outsb
inc
dec
jne
sbb
dec
imul
and
inc
out
dec
xor
jne
mov
add
rorl
sbb
add
lea
mov
xor
fdivr
ret
shll
shrb
pop
cmp
push
cmp
xabort
mov
push
add
xchg
cmp
jmp
xor
shll
xchg
mov
sbb
lea
mov
sub
cmp
mov
sbb
scas
pop
mov
je
dec
jo
xor
into
stos
js
push
mov
ss
xor
dec
push
ud0
sahf
sbb
call
loopne
je
outsb
and
test
push
js
mov
mov
lock
mov
jl
lea
outsb
xor
xchg
push
aas
xchg
push
movswl
mov
lahf
xor
cmp
fmull
lret
imul
dec
shll
cmp
lds
push
cmp
pop
cli
push
cvtpi2ps
mov
cli
mov
cmpsb
aad
or
add
adc
mov
enter
jb
dec
pop
cmpb
inc
xor
rcrl
arpl
sbb
faddl
adc
loopne
sub
dec
cmp
jne
inc
pop
sub
adc
popa
or
xchg
cmpsb
jo
in
nop
xor
decb
stc
cmp
mov
xchg
repnz
add
sub
cmpsb
mov
add
push
mov
cmp
lcall
sbb
xlat
repz
into
push
inc
les
pop
inc
sub
leave
cli
push
sbb
xor
fsubs
pushf
or
and
fidivs
jo
es
jo
rcrl
inc
cmp
xchg
xor
sbb
dec
insb
adc
jbe
cmp
cltd
cmp
bound
sbb
xchg
cs
add
pop
inc
outsb
add
out
inc
mov
std
cmp
and
jg
dec
push
mov
add
sbb
test
inc
popa
mov
loope
adc
push
xor
push
xor
push
adc
xchg
scas
push
jbe
pop
jbe
aas
adc
adc
mov
pushf
inc
rorb
mov
jmp
adc
mov
aad
and
jl
aam
fnstsw
rorb
mov
pandn
lods
dec
add
sbb
mov
test
push
je
mov
cmp
in
adc
xorb
xorb
adc
fsubrs
idivl
push
orl
std
mov
dec
mov
sub
mov
pop
push
inc
sub
jl
mov
push
inc
add
idivl
and
sbbl
popa
or
push
sub
jecxz
xor
dec
scas
mov
pushf
jae
jnp
push
add
mov
jl
cltd
shrl
xchg
cmpsb
mov
pop
dec
or
inc
inc
add
sbb
add
ja
mov
sbb
jge
sub
bound
sbb
inc
dec
divl
jne
jg
or
adc
cmc
shl
xchg
add
push
adc
loope
test
or
insb
int
mov
jmp
adc
sbb
jne
inc
cmp
pop
cmp
nop
test
jp
inc
stos
ret
and
or
jle
jmp
or
or
fdivs
or
mov
jns
div
or
mov
rcll
mov
or
out
or
fcoms
or
mov
sub
or
testl
sbb
rcrb
iret
shl
aam
jo
add
cli
jg
inc
xchg
sbb
daa
cmpsb
inc
push
xchg
sub
fidivl
mov
ret
movsl
hlt
enter
ret
push
mov
pop
jo
jle
inc
repz
out
mov
cli
and
jb
neg
pushf
xchg
out
jl
jge
lret
mov
sahf
sbb
sub
adc
xchg
stc
dec
jg
jp
fldl
jae
out
sub
mov
mov
cmc
and
enter
inc
cmp
and
jmp
test
xor
xchg
addb
or
loope
hlt
and
xor
jg
cmp
sbb
adc
movsb
dec
rolb
inc
outsb
push
gs
add
dec
out
call
dec
dec
addr16
dec
mov
push
inc
mov
or
mov
loopne
imul
adc
cwtl
decl
test
mov
aas
mov
pushf
and
lods
pop
fimull
add
sbb
cmp
push
jg
mov
jmp
add
enter
add
fsubp
lea
rorl
adc
sbb
adc
or
aad
mov
add
js
inc
cli
and
jns
push
decb
imul
shlb
jg
out
add
push
clc
xchg
xlat
jle
mov
gs
or
sbb
jb,pt
adc
in
mov
add
stc
int3
xchg
add
sub
cmp
lods
inc
pop
add
add
jp
add
daa
push
or
add
push
sahf
add
cmp
sbb
jl
pusha
mov
dec
adc
test
pop
push
mov
pop
and
inc
or
adc
jle
pop
cld
mov
inc
in
repnz
dec
or
ja
cmp
push
sbb
sbb
jp
leave
call
mov
pop
push
or
enter
xchg
push
or
adc
sbb
sbb
or
adc
enter
int
hlt
jae
add
enter
xlat
sub
mov
mov
sbb
push
cmpsb
lods
dec
mov
hlt
pop
sub
add
sub
add
dec
xchg
cmp
and
cmp
test
cmc
inc
add
inc
cmp
or
inc
add
mov
or
add
sbb
sub
inc
and
gs
xor
pop
and
dec
aaa
or
dec
jne
jne
in
dec
faddl
add
jne
jbe
fisttpll
inc
dec
inc
push
and
add
sub
adc
stc
mov
add
cmc
adc
test
xchg
mov
shlb
push
or
add
sub
pop
inc
jno
xor
push
push
mov
pop
add
pop
pop
js
repz
inc
addr16
push
mov
loopne
mov
pusha
add
dec
or
sbb
push
jmp
jbe
hlt
pop
rcrl
repz
outsl
and
inc
jmp
jbe
pushf
push
js
and
xchg
or
aaa
cmp
inc
int3
add
and
loop
push
mov
movsl
adc
sbb
sbb
pop
mov
stos
sbb
jge
aaa
aas
sub
adc
and
jle
je
sti
movsl
or
xor
inc
fcoml
dec
cld
inc
jecxz
jl
mov
inc
lods
jge
clc
dec
pop
dec
loop
add
inc
cmp
nop
adc
sub
shll
sub
jo
xchg
js
jns
mov
push
xor
mov
das
xchg
lock
jo
push
jmp
gs
popa
rorl
adc
pop
outsl
ret
das
std
ja
push
pusha
scas
loopne
mov
mov
aam
gs
dec
jne
in
rol
mov
les
adc
jbe
rcrl
rep
pop
jecxz
es
jmp
mov
jle
rolb
fwait
cmpl
sbbb
xor
repz
adc
inc
push
cmpsb
fistpl
sbb
sbbb
nop
ret
jecxz
xchg
movsl
jne
mov
sarb
adc
jmp
pop
dec
imul
lea
lods
xor
outsb
lock
mov
mov
pop
call
lods
mov
enter
xor
mov
inc
data16
sub
jns
pop
mov
cld
dec
push
push
mov
dec
dec
js
adc
and
cmc
sbb
rorl
mov
mov
movsl
mov
ds
push
fldl
rorl
or
adc
mov
dec
cwtl
push
mov
and
xlat
loope
jle
outsl
inc
cmp
pop
fsubl
pushf
sub
jmp
jmp
popa
adc
push
pop
sbb
fmulp
fcomi
push
inc
add
sbb
aas
mov
fistl
out
jle
loopne
add
dec
mov
push
sbb
adc
mov
xchg
loope
push
leave
mov
jg
insb
sbb
lea
dec
mov
push
lea
add
pop
adc
test
movsl
inc
sub
add
and
call
lds
pop
inc
adc
bound
ljmp
cwtl
pop
stos
test
inc
inc
and
jp
inc
adcb
push
and
jmp
in
mov
add
js
jno
push
or
adc
pusha
or
add
mov
or
fsubl
mov
jl
into
out
xor
daa
sbb
ror
xor
and
add
mov
add
enter
mov
jge
inc
xlat
pop
data16
lea
adc
movb
test
jg
jmp
push
mov
inc
inc
lock
and
pop
inc
xchg
xor
adc
jle
test
movsb
push
sbb
cmc
mov
add
mov
mov
sti
inc
jne
inc
xchg
cs
xor
aam
or
mov
iret
sti
or
aam
jg
jo
mov
js
and
inc
or
test
or
daa
adc
fistl
mov
sub
jecxz
cmp
pop
mov
and
or
or
rcrb
inc
aas
sbb
push
add
dec
mov
loop
lret
adc
out
pop
mov
inc
jae
into
inc
js
jge
add
mov
dec
aad
mov
mov
das
add
cmpl
test
inc
add
add
fs
bswap
in
pop
or
inc
push
sub
cmp
push
mov
sub
testb
push
outsl
jb
rcll
inc
movsl
mov
cltd
out
adc
sub
push
mov
push
mov
lret
je
add
imul
push
test
xchg
add
push
jle
nop
mov
repnz
fists
arpl
mov
sbb
imul
mov
pop
sub
mov
xor
jecxz
addb
ret
out
lea
xacquire
aaa
sbb
and
addb
push
adc
mov
cmp
jbe
and
fimull
jge
add
ret
fdivl
rolb
or
dec
outsb
lcall
adc
fisubs
clc
and
lret
jb
jp
subl
mov
xchg
sbb
arpl
add
and
loop
xchg
pop
dec
jo
adc
inc
sbb
outsb
xor
cs
or
jo
call
jecxz
fistpl
sub
xchg
ret
push
inc
xor
jo
adc
stos
dec
mov
mov
xchg
push
outsb
push
sbb
cmp
dec
scas
jb
shl
add
add
jle
test
loopne
pop
jbe
sbb
jle
push
popf
sbb
push
dec
js
mov
xor
mov
insl
pop
xchg
sahf
jae
lret
inc
inc
mov
lods
xor
jo
add
dec
jmp
dec
mov
pop
pop
test
test
dec
inc
ret
cmpsl
push
xor
bound
in
or
ret
das
or
jo
pop
ret
add
xchg
int
test
pop
and
dec
aad
adc
mov
inc
enter
sti
dec
sub
call
jl
add
rol
les
dec
xor
inc
je,pn
inc
pop
xchg
into
pop
in
jmp
es
das
mov
jbe
je
popa
add
lock
iret
mov
inc
or
adcl
shlb
mov
outsb
pop
loope
xchg
push
je
lcall
cmp
or
inc
or
jo
xor
es
jmp
js
pop
cmc
mov
mov
mov
es
jp
loop
add
and
lock
xlat
push
flds
rorl
popa
insl
dec
out
mov
xor
outsb
cltd
push
and
lea
clc
ret
cmovl
arpl
dec
shr
jbe
imul
and
mov
in
test
xchg
loope
inc
sti
pop
cmp
push
push
sub
xchg
popa
mov
les
jmp
lea
pop
incl
dec
mov
sub
push
pop
cmp
adc
sahf
test
push
ret
ret
cmp
pop
ss
mov
mov
add
mov
jnp
cmp
jmp
and
sub
lahf
aad
push
or
inc
or
sahf
xchg
sub
sbb
xor
lret
push
inc
faddl
push
dec
or
push
and
pusha
pop
add
addl
mov
cmpl
out
out
out
dec
lock
inc
or
jo
add
lea
push
mov
push
sub
add
mov
lock
movsb
pusha
sub
insb
lods
add
dec
sub
push
add
fsubr
push
pusha
lea
dec
clc
xorl
clc
xchg
mov
push
fcoml
xchg
mov
lcall
outsb
cmpsb
or
ds
mov
xor
sub
movsb
loopne
pusha
lahf
mov
fadds
jae
sbb
andb
push
sbb
jl
clc
pusha
pop
nop
and
cli
pop
mov
mov
notb
pop
add
test
loope
je
adc
ret
out
inc
push
or
mov
jne,pt
dec
push
leave
adc
cwtl
inc
mov
or
sub
shl
push
fstl
in
or
in
jo
shrb
imul
push
imul
idiv
pop
imul
cmpl
xor
sti
push
adc
fistl
rcll
rclb
test
adc
aaa
ret
orb
or
and
adc
sti
pop
pop
fmul
cmp
sbb
dec
add
adc
roll
mov
sbb
inc
aas
sarb
lea
sar
inc
mov
lea
mov
push
mov
stc
mov
cltd
movb
decl
dec
pop
fdivs
mov
adc
pop
addr16
cmp
addl
add
das
add
pop
push
add
push
clc
jecxz
add
add
ss
rcrb
xor
inc
and
out
or
or
dec
push
inc
pusha
xchg
sbb
out
loopne
sti
cs
xor
sub
add
dec
dec
shll
add
scas
add
ljmp
adc
adc
mov
cmp
add
mov
cmp
int
inc
in
clc
cs
jmp
push
push
jp
xchg
cmp
mov
sub
xor
and
loopne
inc
sti
int3
call
inc
add
fdivs
push
vmovups
ds
aam
sbb
pop
cmp
jbe
movsb
push
cmp
jns
mov
fdivs
inc
loop
sub
push
inc
or
inc
push
js
xchg
lea
popa
push
pushf
fnsave
mov
pop
cwtl
sbb
mov
xchg
movsb
adc
mov
scas
push
pop
lea
pop
clc
cmp
adc
adc
out
and
push
jecxz
cmp
pop
add
push
jae
test
push
xorl
lock
sub
data16
add
jecxz
mov
lods
ret
pop
add
add
std
mov
je
scas
ret
mov
fiaddl
inc
cmp
dec
push
xor
shl
sbbl
inc
ret
xor
jo
push
test
sbb
sub
and
or
xor
inc
jl
sti
jle
out
mov
pop
pusha
adc
or
adc
out
cmp
cmp
scas
cmp
js
das
add
roll
ret
jne
xor
mov
loopne
sub
int3
pop
pop
loopne
pusha
je
jno
pop
and
mov
add
adc
sub
cmp
cltd
jns
add
sub
and
xor
repz
push
adc
lret
push
inc
testl
sub
test
mov
inc
and
cs
xchg
dec
sti
out
orb
mov
loopne
cld
shrb
xor
pop
test
fwait
aad
rolb
push
adc
data16
testb
lea
shrb
or
shr
xor
out
add
pop
or
inc
cmpb
jecxz
insb
negb
daa
fcoms
mov
outsl
repnz
xor
mov
pusha
nop
pop
xor
xchg
jo
xchg
into
jmp
rcll
cwtl
aas
pop
pop
ret
jbe
sub
clc
mov
sub
sbb
nop
xchg
jmp
or
mov
push
add
test
mov
pop
xor
out
push
mov
jmp
shrl
out
jbe
xchg
or
push
add
mov
sbb
xor
pop
pusha
sbb
lret
sbb
xor
cmp
subl
popl
pop
add
adc
adc
shll
add
aas
shlb
xchg
or
sub
aaa
xor
mov
add
pop
sub
loope
es
ret
sar
lret
and
dec
inc
cmp
ss
pop
lea
rolb
arpl
cmpb
mov
inc
pop
stc
pop
sub
fnstcw
pop
push
add
lock
mov
out
xchg
dec
cli
sub
push
mov
xchg
xor
and
or
pop
pop
fidivl
mov
shlb
push
lods
shll
movsb
cmp
clc
sbb
mov
or
out
popa
arpl
fwait
pop
pop
push
cmp
pop
inc
cmp
dec
pushf
dec
sbb
pop
or
stc
jg
add
repnz
dec
adc
loope
xor
xchg
sub
idivl
daa
sar
sub
in
dec
lcall
xor
pop
sub
loopne
and
mov
scas
fimull
fs
stos
jge
and
xor
gs
cwtl
int
shr
imul
cmp
adcb
loopne
mov
and
inc
adc
push
or
add
divl
inc
stos
jg
fldenv
fsts
add
pusha
fsts
pop
dec
lret
mov
adc
cltd
jno
sbb
adc
and
pop
filds
and
mov
fsts
push
xor
fldenv
in
xchg
jne
cmp
fld
fadd
push
xor
push
hlt
xchg
cli
mov
xchg
fsubs
inc
fidivl
fsub
les
adc
fstp
ja
daa
and
fadd
push
pop
inc
inc
and
mov
clc
inc
pusha
adc
jo
mov
jnp
and
and
mov
sbb
sbb
push
shrl
insb
push
or
cmp
sbb
jmp
mov
roll
ficompl
movsb
xor
adc
ss
ret
cmp
fnstcw
add
sub
and
test
out
in
or
sbb
js
lea
ss
pop
pusha
loop
jp
push
or
daa
push
jo
add
dec
inc
imul
sbb
aas
or
or
inc
enter
clc
or
fsubs
out
pop
enter
and
mov
push
flds
xor
and
mov
push
jmp
inc
stos
or
or
xor
cmp
cld
jae
push
ds
adc
mov
sti
mov
shll
mov
jo
lock
xor
test
push
push
add
or
adc
mov
cmp
add
jnp
ss
pop
icebp
shll
aas
in
shll
xlat
and
push
push
cmp
adc
neg
fidivl
scas
add
sbb
cmpsl
add
sahf
adc
adc
xor
mov
int3
sub
sub
incb
mov
add
dec
xchg
lret
mov
push
loope
iret
fisubl
mov
pop
mov
xor
xchg
movsbl
add
fdivs
pop
mov
test
adc
mov
xchg
faddp
fisubl
data16
inc
inc
sub
adc
sbb
push
fcomps
push
lock
sub
jne
push
mov
inc
mov
push
loopne
testb
add
repnz
sbb
icebp
aad
mov
mov
mov
adc
je
add
decb
push
jge
inc
cmp
sub
add
jecxz
sub
add
ja
xchg
sub
jo
rclb
pop
push
mov
xchg
and
fstl
rclb
into
lret
lcall
rcl
mov
mov
sub
imul
xchg
imul
pushf
pop
scas
stos
sub
pop
add
mov
xor
add
cmc
dec
loope
inc
sbb
insb
in
add
or
rolb
cmp
call
ss
xor
push
fs
rcll
sbb
gs
push
adc
inc
xor
inc
std
jne
test
mov
stos
dec
mov
fisubrs
xor
push
fildll
inc
and
rcl
call
or
ss
and
and
icebp
jg
adc
bound
mov
mov
add
cmpl
dec
test
add
dec
test
sbb
mov
lock
adc
adc
mov
adc
sub
aam
mov
adc
xor
xor
xchg
and
rorl
mov
dec
pop
and
enter
or
push
inc
in
jl
sub
btc
inc
out
sub
push
retw
adc
and
push
sub
test
jp
sbb
bound
cs
dec
pop
inc
pop
sub
add
fstl
cmp
dec
stc
lock
push
cmp
stc
adc
cmp
or
and
ret
stos
adc
sub
minps
scas
mov
cmp
sbb
pop
push
mov
pop
cli
push
add
test
mov
dec
and
ja
and
push
push
or
int
mov
icebp
aaa
jmp
mov
inc
repz
orb
mov
fisttpll
lods
xchg
inc
xor
fsts
imul
hlt
inc
lret
into
push
rcrl
testb
or
fildl
sbb
sbb
mov
add
sub
sbb
mov
lods
repnz
pop
add
loopne
iret
outsl
xor
lods
rolb
cmp
stos
sbb
add
aad
rorb
xchg
cmp
fwait
test
mov
or
and
push
lods
adc
int3
pop
aaa
aad
fldcw
and
push
loopne
adc
popa
push
popa
xor
add
adc
lea
mov
test
or
mov
mov
or
inc
mov
arpl
add
mov
inc
mov
jno
scas
movb
push
ret
or
add
or
adc
dec
and
pop
jmp
sub
adc
cmp
add
sbb
xor
xchg
push
addr16
fimull
rep
xchg
out
loopne
or
cmpb
je
fidivrl
adc
movsb
aas
int3
clc
adc
mov
fcomps
xchg
fsubrl
inc
add
pop
sbb
dec
sub
dec
sub
or
xchg
inc
ret
pop
mov
add
add
cmp
dec
mov
cmp
mov
test
outsl
add
jbe
sub
les
in
fstl
pushf
push
aas
pop
dec
aam
nop
add
and
xchg
inc
aas
fcompl
popl
sbb
ss
add
inc
jbe
sbb
cmc
mov
fwait
movsb
add
addr16
pop
pop
push
and
add
out
sbbl
lods
pop
pop
shlb
adc
adc
push
push
das
lcall
insl
mov
dec
cwtl
add
imul
adc
pop
push
popf
xchg
sbb
insl
mov
dec
popa
outsl
mov
or
sbb
sbb
cmp
jmp
fadd
jle
add
dec
ret
lret
pop
mov
sarb
out
out
pop
xor
jmp
push
push
fcompl
icebp
jnp
mov
in
in
and
je
push
ret
ja
jmp
faddl
mov
inc
bound
xor
movsl
in
mov
lods
fstpt
sub
shr
mov
adc
aas
aad
aas
mov
or
lcall
xor
cs
dec
ljmp
xchg
jo
add
in
xor
push
push
mov
and
test
fsubl
inc
pop
sbb
nop
outsb
xchg
mov
jecxz
jge
add
les
rcr
xchg
testb
or
or
ja
sub
testb
cmp
and
cmpl
imul
cmpsl
mov
xor
pop
cld
mov
sahf
clc
sbb
stos
and
jl
rclb
cmp
cs
es
mov
arpl
imul
push
pop
pop
loop
enter
out
ret
xchg
ret
or
pop
das
xchg
add
fwait
adcw
ljmp
and
adc
sbb
push
xchg
adc
mov
pop
sbb
and
ss
mov
mov
setbe
arpl
mov
repz
pushf
dec
adc
ljmp
jmp
jo
add
dec
add
movsb
mov
in
push
fsubp
and
xchg
movb
mov
dec
ret
jnp
bound
push
mov
sbb
stc
add
cltd
sbb
and
add
fbstp
push
add
cmpl
jo
lds
fsubrs
jnp
dec
xor
push
xor
scas
adc
push
push
mov
push
or
ss
shll
cmp
add
xor
lea
lock
xchg
mov
push
mov
out
push
out
sbb
mov
mov
fs
fsubrl
mov
or
mov
cld
mov
loope
sti
jle
cmovbe
rolb
mov
sti
outsb
and
dec
or
mov
jmp
fmuls
lods
dec
es
enter
mov
mov
scas
int3
sbb
inc
aaa
in
mov
dec
test
pop
daa
pop
fidivrs
ljmp
mov
mov
insl
out
arpl
in
je
leave
push
icebp
mov
mov
addb
jno
cmp
movb
mov
sbb
insl
add
sub
pusha
adc
clc
push
xchg
mov
jne
les
ret
or
rorl
loope
popl
pusha
pop
add
nop
sti
add
jno
cmp
inc
hlt
or
mov
add
lods
inc
add
pop
mov
pop
pop
loop
in
mov
pop
mov
fsubr
faddl
js
push
sbb
mov
mov
or
xorb
lret
mov
addl
cmc
ret
std
mov
icebp
stos
cmp
imulb
sbb
hlt
gs
cmpsb
xchg
mov
adc
mov
int
push
xor
or
cwtl
or
mov
lcall
loopne
mov
adc
jnp
push
cmp
dec
imul
es
jecxz
xor
mov
repz
loop
out
in
dec
lcall
stos
pop
mov
sbbb
xor
and
add
xchg
push
rorl
add
mov
lods
pop
mov
add
jmp
jb
sub
adc
rcrb
notb
and
adc
nop
mov
cwtl
xchg
cmp
or
or
xchg
bound
rolb
lock
xchg
rcrb
rol
mov
pop
xor
mov
mov
movsl
xorl
stos
insb
call
inc
and
xchg
dec
dec
ds
test
in
dec
in
mov
push
fxtract
and
dec
clc
test
inc
pusha
dec
and
xchg
mov
adc
dec
pop
popf
push
mov
push
xchg
sahf
push
or
push
arpl
sbb
and
push
jbe
inc
push
popa
insb
sub
inc
cmp
adc
aas
rolb
push
sbb
mov
arpl
cld
sub
shrb
das
inc
popf
imul
int
sbb
fbld
out
test
and
lcall
roll
addl
adc
jge
push
inc
or
push
dec
in
dec
mov
sbb
sarb
lahf
fld
push
push
mov
movsl
sarl
out
and
mov
push
or
mov
push
or
push
fadds
js
mov
adc
pop
mov
cmpsb
jne
sbb
jne
push
sub
sub
rcrb
cmp
insl
stc
mov
into
leave
jae
add
add
push
es
cmp
push
enter
add
fdivs
push
in
push
push
push
les
pop
pop
fidivrl
pop
adc
clc
xorl
dec
or
xor
arpl
fdiv
xor
mov
adc
jmp
shrb
rcl
scas
xor
fs
mov
sbb
clc
push
rol
mov
ret
sbb
add
les
pop
and
andb
mov
inc
mov
out
or
jb
dec
dec
and
and
pop
pushf
fcoml
pop
sahf
xor
loopne
imul
and
xchg
fsubrl
mov
mov
mov
sbb
jle
mov
lcall
pop
xchg
sbb
adc
pop
sbb
rcll
mov
sub
loopne
or
mov
push
xchg
js
in
aad
or
sbb
fs
cwtl
mulb
pop
pop
outsl
fadd
mov
cltd
push
xchg
inc
enter
add
mov
std
cltd
add
cmp
aam
mov
mov
adc
push
fbld
cli
cmp
or
and
inc
xchg
push
test
rol
mov
inc
fistpll
mov
stos
pop
adc
jns
jmp
mov
pop
test
sbb
xor
sub
ljmp
test
add
mov
push
push
push
nop
push
pop
lret
adc
push
add
pop
or
test
pop
inc
cmp
xchg
sbb
xor
mov
sbb
or
sbb
inc
add
sbb
fdivl
stos
gs
lcall
sub
xlat
in
pushf
movsl
mov
sbb
pop
or
mov
fcoms
add
xchg
adc
add
ret
es
inc
jle
or
rorb
and
pop
add
outsb
push
sar
push
jle
js
add
mov
sub
push
add
push
pop
ret
sub
adc
insb
sub
sbb
loopne
add
pop
xchg
movsl
lea
cmp
out
xchg
into
push
cmp
push
lods
push
sub
ffreep
rol
xchg
nop
cld
fwait
add
arpl
push
mov
or
mov
das
and
add
gs
adc
add
push
out
push
outsl
outsl
and
mov
lea
lock
pop
xchg
movsb
pusha
ja
in
shlb
repnz
data16
into
mov
mov
push
rorb
popa
jbe
inc
lock
push
jecxz
hlt
fs
rclb
cmp
add
test
shrb
adc
pop
mov
xchg
mov
adc
cli
outsl
push
fdivrp
add
sbb
jbe
pop
sbb
inc
mov
mov
sub
cmovno
fdivrs
jge
aad
mov
add
lret
push
lds
loop
inc
sub
lcall
adc
xor
sbbb
jecxz
cmpl
jl
mov
push
mov
mov
sbb
jg
sub
xchg
and
insb
sahf
pop
mov
mov
add
inc
push
inc
add
dec
je
dec
outsl
mov
or
call
inc
cmpsb
pushf
inc
shll
push
push
add
and
loope
adc
je
push
test
fsubl
push
push
hlt
jmp
jp
dec
stc
or
add
jns
std
dec
add
xor
inc
movb
scas
adc
cmp
and
mov
inc
lock
sbb
push
leave
cld
addb
mov
pop
sahf
dec
movsl
imul
icebp
mov
push
add
daa
test
sahf
xchg
leave
rorb
lea
jl
in
inc
into
aaa
movsb
movl
add
and
mov
repz
mov
ja
or
test
jg
sub
add
mov
movsl
cmp
xor
sbb
fisttps
test
subl
mov
sub
pop
push
push
adc
add
xchg
xchg
mov
adc
mov
aas
mov
cld
jl
pop
sbb
add
push
cld
shlb
or
or
push
inc
pop
mov
sbb
inc
push
mov
cs
shr
mov
add
adc
xor
sub
adc
das
aas
repnz
sub
rcrl
or
dec
cmp
sub
out
roll
mov
adc
movsl
leave
sub
pop
mov
xor
mov
loope
lret
mov
sbb
adc
rorb
mov
insb
sub
les
xor
adc
adc
nop
pop
mov
sbb
and
add
lods
imul
mov
jne
cmp
mov
cmpsb
add
push
dec
pop
test
test
data16
dec
mov
push
andl
and
insl
pop
lret
mov
pop
inc
lret
add
nop
xor
inc
push
adc
mov
pop
nop
pop
or
lahf
or
dec
es
dec
in
mov
add
stos
inc
mov
inc
jb
sarl
or
rcrb
mov
adc
dec
jno
movsl
ud1
popf
iret
pop
jge
xchg
mov
xchg
push
sbb
jb
pinsrw
push
and
std
decl
inc
enter
mov
sbb
mov
add
mov
mov
xchg
push
pop
jne
inc
cmp
pushf
enter
xchg
sbb
test
sbb
or
daa
test
inc
sbbb
pop
mov
imul
js
clc
add
or
sub
cmp
add
repnz
repz
arpl
mov
fs
pusha
push
pop
sub
pop
movsl
pusha
aas
xlat
pop
inc
or
push
sub
je
fwait
inc
rcll
dec
pop
dec
sub
dec
mov
cmp
aas
mov
xchg
sbb
and
xchg
xchg
mov
xchg
inc
add
pop
call
dec
je
xchg
nop
shr
sbb
jnp
add
xchg
cmp
loope
add
aaa
mov
in
push
add
call
test
and
sbb
inc
adc
scas
dec
popf
jo
add
nop
lret
add
inc
rorb
push
aam
or
or
mov
add
pop
pusha
sub
into
int3
repnz
rolb
sbbl
and
push
and
sbb
xchg
lret
and
or
add
sbb
pusha
aas
push
je
les
cmp
mov
sub
jmp
sbb
cmp
xchg
sub
enter
inc
out
sbbl
xor
pop
outsl
mov
sarl
mov
add
pop
ds
sbb
xor
fsubs
rolb
jl
daa
mov
mov
jno
inc
mov
lods
roll
and
sub
pushf
jae
lods
lret
pop
sub
pop
sbb
push
xor
jmp
xorb
mov
movsl
sbb
pop
test
add
mov
mov
jns
xchg
and
inc
imul
pop
insl
or
or
and
or
pop
enter
mov
push
rorl
add
js
daa
jns
push
ds
mov
mov
out
loop
icebp
movsb
je
rolb
std
iret
push
pop
inc
add
shrl
push
mov
push
push
add
cmp
dec
or
adc
lock
xchg
xchg
fsts
es
aas
sbb
imul
push
loope
jns
jbe
leave
aas
mov
loopne
push
add
lods
jecxz
adc
lods
shlb
fcmovne
xchg
mov
aaa
mov
push
push
shrb
jbe
mov
test
out
dec
pop
arpl
arpl
mov
xor
daa
repnz
nop
inc
imul
jb
adc
xor
leave
and
adc
popf
or
xor
add
test
mov
or
jecxz
dec
pushf
scas
or
jecxz
add
sbb
cmpsb
xor
push
or
in
sub
dec
pushf
icebp
icebp
sbb
mov
adc
xor
aam
or
aam
mov
incl
add
insb
popf
push
inc
not
and
fisubrs
xor
mov
sub
divps
fs
js
inc
dec
jo
add
jno
aas
mov
dec
aad
frstor
xor
lcall
in
lock
or
cmp
and
popa
push
mov
test
dec
or
adc
imul
mov
dec
or
stos
mov
pop
inc
insl
outsl
or
imul
push
lods
adc
mov
xchg
push
cwtl
sub
lret
add
adc
adc
and
jae
mov
in
xchg
dec
iret
lds
add
or
jg
adcb
adc
fsubrl
jmp
xchg
sarb
mov
mov
scas
adc
insb
xchg
push
js
add
incb
cmp
fisubrs
cmp
movb
jne
xor
dec
xchg
mov
jle
and
ljmp
cmp
push
or
mov
cmp
and
aad
or
push
push
lret
dec
loope
mov
js
icebp
add
clc
dec
jge
push
fwait
aam
cmpb
lret
mulb
icebp
jl
mov
and
pop
jmp
mov
popa
and
mov
sub
sbb
dec
mov
cmp
inc
pop
adc
sub
add
inc
data16
movb
mov
insl
mov
mov
dec
icebp
mov
pop
add
xor
xchg
outsb
or
or
gs
popa
cld
fsubrs
fmuls
ret
in
jg
jbe
cmpb
ja
dec
adc
cmc
mov
arpl
sarb
add
push
push
xchg
arpl
or
and
or
fsubs
inc
adc
push
add
jno
mov
mov
sub
inc
mov
push
cmp
ja
jae
imul
push
insl
ficoms
xor
inc
aad
push
clc
lea
sbbb
out
push
jne
mov
mov
andb
ja
dec
ud2
mov
pop
sahf
jb
sbbb
out
adc
pusha
movsl
test
out
sbb
cmp
daa
push
add
jne
pop
fstpt
or
sbb
add
sbb
mov
ss
sbb
mov
mov
jmp
mov
pop
mov
lret
xlat
shlb
inc
push
mov
or
andb
je
mov
je
cmc
bound
daa
filds
je
inc
inc
outsb
inc
adc
rcrb
push
xor
lea
add
imul
adc
and
push
pop
test
pop
enter
and
xchg
pop
sahf
call
ficoms
lret
inc
sbb
rcrb
inc
imul
inc
and
repz
push
pop
aas
pop
gs
sbb
or
fstpl
sub
pop
imul
inc
push
mov
xchg
adcb
mov
push
and
mov
pop
push
popf
xchg
movsl
lea
ds
out
scas
dec
xchg
into
adc
pop
sbb
sbb
or
or
or
and
mov
dec
ficompl
int
mov
jae
fmuls
mov
jg
fdiv
push
mov
insl
fcmovne
pop
rcll
jle
cmpsb
or
or
jmp
mov
mov
les
sbbl
or
aad
inc
rol
inc
push
adcb
ja
and
addl
lahf
xor
je
rcrl
sbb
push
call
dec
ret
outsb
test
cmp
adc
cmp
cli
movsl
pop
dec
cmp
sbbb
sbb
dec
sbb
inc
push
mov
mov
xorb
xor
sub
insb
jg
imul
add
push
push
aas
stos
nop
les
and
ds
into
pop
mov
xchg
dec
int3
pop
push
push
xchg
cmp
cmp
and
lcall
push
das
xchg
xor
cmp
popf
push
rcrb
adc
pop
add
stos
sbb
inc
in
dec
sbb
jg
call
add
xchg
in
or
repnz
roll
arpl
adc
test
adc
bound
cmp
nop
stc
ffreep
or
lods
sbb
mov
push
dec
test
add
jl
mov
incl
add
aas
pop
cmp
xchg
push
imull
adc
out
sub
stos
sahf
xchg
mov
push
outsb
adc
mov
iret
nop
add
push
stos
sub
pop
lods
jp
inc
push
sbb
jle
xchg
push
xchg
stos
mov
dec
pop
cmpsb
or
sbb
enter
sbb
jmp
test
jmp
mov
test
mov
andl
dec
dec
lea
lods
lods
in
mov
les
mov
mov
les
dec
movl
fcoml
movsl
ljmp
and
cmp
push
or
lea
cmp
adcb
or
xchg
lea
xchg
jne
lea
andb
test
push
andb
xchg
sub
aas
add
bound
pop
les
push
mov
jl
insl
lods
push
add
inc
and
xchg
push
add
or
int3
add
xchg
xchg
sub
add
add
adc
mov
and
lods
je
jae
sub
loopne
sub
pop
out
jne
mov
mov
push
fimull
or
aas
sub
or
sub
subb
adc
inc
stos
sbb
stc
sub
addl
test
or
and
sarl
sbb
or
xchg
mov
and
xorb
inc
jge
adc
push
mov
in
add
ljmp
lock
icebp
push
cmc
adc
or
and
orl
xor
daa
inc
cmp
sub
sub
leave
jno
push
push
movsb
aas
cs
sub
inc
dec
dec
inc
mov
jg
jne
sub
mov
xchg
scas
xor
dec
sbb
xchg
cs
xor
nop
aas
jbe
mov
fucomip
push
inc
push
sbb
sahf
inc
push
stos
mov
rorb
and
jp
cs
sub
hlt
or
je
jmp
int3
aad
les
int3
push
adc
mov
pop
dec
sbb
inc
jne
cmp
aas
push
add
pop
fistps
lahf
xchg
leave
addr16
dec
jmp
out
xchg
push
pop
push
movsl
dec
sbb
into
pop
movsb
dec
push
mov
pop
adc
adc
sub
xchg
mov
lods
push
jae
cmpsb
adc
add
and
pop
pop
inc
sbb
push
or
rol
or
and
js
ret
dec
cs
test
adc
adc
insb
add
dec
adc
sbb
imul
mov
add
cwtl
dec
adc
push
mov
in
add
nop
cmp
sbb
cs
repz
shlb
push
int3
dec
sbb
or
cmp
sub
push
filds
jne
loopne
sbb
dec
sub
mov
or
push
adc
add
sbb
aas
jmp
or
inc
adc
sbb
sub
je
inc
push
lcall
and
and
and
sub
dec
push
in
lds
jl
jl
mov
mov
insb
sbb
lahf
leave
leave
push
inc
push
adc
adc
pop
in
cwtl
into
mov
push
dec
push
dec
ja
or
adc
leave
pop
mov
enter
mov
shr
xor
mov
lods
cmp
scas
dec
insb
push
push
xor
xor
push
pop
jp
mov
push
mov
loop
aas
push
lds
mov
test
cld
xchg
lahf
push
dec
push
je
mov
fstpt
pop
decl
push
cmpb
mov
call
test
cltd
mov
mov
pop
in
pop
dec
pop
or
or
movsb
xor
mov
xchg
inc
add
mov
movsb
lock
subl
cmp
mov
push
and
inc
xchg
jp
pop
lds
decl
mov
xor
or
notb
pop
inc
pop
jne
into
bound
dec
les
push
add
push
push
sub
sub
shrb
lahf
mov
test
hlt
es
sub
or
lock
inc
addb
leave
rolb
mov
or
or
inc
push
add
xchg
ss
pop
dec
adc
imul
push
shrb
sbb
loop
push
cmpsb
test
and
push
adc
inc
pusha
inc
inc
mov
xor
inc
xor
fnsave
sbb
and
inc
or
test
or
adc
lahf
pop
shrl
add
call
test
jp
cmp
mov
push
jmp
xor
push
rclb
mov
or
shrl
pushf
dec
int3
insb
subps
inc
lea
enter
push
dec
cmp
pop
andb
jmp
adc
sbb
xor
and
sbb
jmp
push
inc
fwait
cwtl
ljmp
push
jo
and
movsl
repnz
cwtl
pop
pop
cmp
outsl
shll
sbb
mov
adc
mov
shlb
cmp
or
fadds
adc
xchg
je
clc
and
push
jg
pop
adc
mov
jg
jg
cmpl
je
test
jne
and
xor
inc
ljmp
add
and
mov
or
xor
into
in
or
pop
dec
and
adc
outsl
jg
xor
mov
adc
xchg
imul
adc
lret
push
xchg
sub
adc
out
jge
lcall
sbb
rcrl
push
or
push
push
mov
and
and
mov
sbb
and
adc
sbb
mov
test
std
xchg
push
push
mov
xchg
push
jecxz
dec
ret
add
inc
rcrl
add
aad
mov
les
test
cli
or
test
and
cmp
mov
sub
pop
sub
xchg
ljmp
push
je
xor
enter
daa
mov
addr16
push
cmp
xor
mov
lock
jae
insl
dec
je
xor
dec
rcll
sbb
xor
push
sbb
sub
push
xchg
add
inc
add
aas
orb
push
adc
fimuls
jmp
mov
push
aaa
xor
xchg
mov
arpl
and
jl
push
sbb
push
jno
add
popa
dec
dec
lahf
push
dec
les
mov
push
into
xchg
cltd
adc
imul
inc
call
stc
repz
ficoms
add
js
pop
mov
fsubs
dec
shrl
pusha
jb
adc
test
aaa
mov
xchg
push
jne
dec
call
pop
mov
add
and
hlt
lds
cwtl
mov
jp
xor
loope
or
inc
sub
test
decl
pushl
inc
cmpsb
nop
adc
mov
xchg
sub
mov
or
mov
jne
sbb
sub
xchg
adc
in
pop
pop
addb
or
sub
add
lds
popf
imul
or
or
lcall
ret
cmc
sub
dec
dec
inc
sub
or
or
sbb
xor
mov
inc
call
mov
test
sbb
aaa
and
xchg
fisttpll
and
andps
add
jge
dec
cmc
adc
dec
jecxz
inc
fs
mov
jl
sub
xchg
loopne
or
jecxz
adc
xor
rcl
adc
inc
xchg
and
adc
imul
cmpsb
mov
nop
cmp
shlb
loopne
add
repnz
push
pop
dec
enter
ss
xor
mov
pop
test
mov
jl
daa
insb
cmp
add
xchg
mov
dec
xor
mov
jmp
push
and
enter
xchg
xchg
inc
add
rcrb
stos
push
xor
adc
sti
das
or
xor
aam
repz
xchg
inc
mov
inc
inc
inc
cmpsb
movsl
aam
jae
inc
sti
inc
mov
dec
dec
push
xor
ficoms
add
mov
jmp
pusha
adc
lods
test
test
stos
push
pop
nop
rdpmc
nop
cmp
sahf
out
mov
popa
in
es
cmp
adc
flds
push
dec
mov
shll
fimuls
xor
dec
mov
cmp
push
sbb
cmp
cmp
mull
push
outsl
and
movsb
pop
pop
jl
js
loope
mov
jne
imul
mov
mov
inc
and
sub
cmc
dec
push
dec
and
testl
adc
adc
stos
es
push
or
mov
xchg
mov
pop
jb
inc
repz
lcall
mov
insb
stos
adc
adc
nop
stc
and
xchg
add
add
push
data16
rclb
adc
and
shll
inc
sub
mov
cmp
inc
popa
je
iret
fld
adc
mov
mov
dec
or
sbb
fmuls
add
dec
add
and
add
cmp
shll
mov
dec
addb
xor
push
scas
mov
pop
dec
mov
or
das
push
decl
sub
fstl
xor
pop
add
sbb
push
mov
int
jns
testl
and
cmp
and
jg
inc
out
jne
orl
dec
mov
lock
movsb
sbb
cmc
enter
cwtl
les
pop
ljmp
or
aas
push
daa
subb
add
lods
and
test
sub
or
push
pusha
dec
imul
lock
dec
add
inc
sub
cmpsl
add
add
pop
sub
leave
mov
cmp
mov
jne
mov
insb
pop
sbb
adc
dec
push
lods
sub
pop
inc
add
loop
decb
mov
lea
ljmp
mov
and
inc
jns
jns
jne
nop
or
aad
or
xchg
ret
mov
pushf
les
mov
rcl
pop
adc
sub
add
xchg
cmp
shr
inc
push
sbb
mov
add
pop
mov
push
imul
mov
cmc
dec
mov
pop
fs
jnp
push
stos
sbb
or
inc
mov
insl
push
inc
inc
das
ss
cwtl
shlw
jno
add
sub
adc
push
mov
or
push
xor
add
jge
fsubs
cs
sub
nop
enter
inc
mov
int
bound
sub
dec
dec
mov
push
add
sbb
push
mov
frstor
dec
add
add
addr16
pop
mov
mov
push
add
or
arpl
pop
rclb
adc
imul
xor
xchg
orl
sbb
mov
cmpsb
pop
pop
xchg
rolb
sub
cwtl
test
and
cmp
inc
push
push
mov
sarb
mov
push
xchg
movsb
xchg
xor
jp
out
add
inc
daa
add
sub
sub
inc
jge
sub
sub
outsl
lods
into
xor
jne
cmp
sub
pop
pop
adc
jo
int
add
cmp
or
inc
sbbl
xor
gs
pop
dec
enterw
movsb
ret
pop
jnp
dec
sbb
roll
clc
jmp
push
addr16
pushf
pop
jb
and
jg
sbb
dec
scas
cwtl
push
push
das
fsubl
outsb
leave
nop
sbb
mov
dec
mov
jg
hlt
sbb
insb
jg
xchg
or
or
outsb
sub
inc
sahf
add
xor
adc
fistl
fistpll
mov
cwtl
insl
lret
mov
inc
dec
jg
fwait
jp
jl
dec
or
add
jne
pop
add
and
push
pop
xchg
call
ret
sbb
lds
jl
sbb
sbb
rorb
add
dec
dec
jg
mov
adc
mov
bound
cmp
mov
jle
sub
xor
jg
test
xchg
aas
add
leave
add
mov
jl
pop
ret
xor
cli
fdivl
adc
or
ret
adc
or
sub
hlt
and
and
and
dec
int3
pop
and
rorb
popf
mov
sub
mov
lret
push
cmp
dec
sub
add
push
sbb
mov
ljmp
push
enter
mov
dec
rcr
and
nop
fiadds
pop
inc
add
adc
mov
xchg
mov
int
daa
js
inc
adc
sbb
sub
xor
cltd
add
mov
push
fadd
stos
leave
pop
aaa
jb
and
push
adc
pop
xchg
dec
mov
jno
scas
or
dec
mov
popf
mov
je
mov
orb
adc
mov
lods
xor
mov
add
adc
pusha
adc
and
xor
xchg
add
or
fistpll
out
loopne
cmp
xchg
jb
outsb
sub
cmp
cmpsb
or
imul
movsb
add
add
pop
gs
dec
add
add
stc
in
adc
inc
mov
jp
push
movd
ja
mov
mov
cwtl
adc
pop
jg
cmp
sub
add
test
mov
loop
sarl
and
cs
adc
lret
xor
xor
lahf
leave
xchg
cmp
dec
js
mov
mov
jl
gs
sti
out
mov
test
adc
jnp
iret
inc
and
and
add
push
and
rclb
or
add
ret
xchg
pop
dec
push
and
sbb
or
or
and
pop
or
xor
inc
and
pop
lock
dec
xorl
pusha
adc
sbb
mov
pusha
push
aaa
data16
mov
add
xchg
aad
out
push
pop
xchg
jmp
adc
out
inc
ficoms
xor
push
mov
cmp
dec
pop
jo
push
mov
push
notb
sub
add
and
lea
and
push
pop
test
nop
cwtl
push
insb
call
shrb
subl
ja
adc
imul
inc
cs
push
dec
test
sbb
mov
aad
clc
sbbb
sbb
or
push
mov
repnz
sbb
mov
add
dec
cmpsb
aad
aas
push
cmp
ljmp
fsubs
push
pop
dec
lahf
dec
inc
push
mov
push
insb
push
or
push
cmp
push
adc
mov
sub
into
mov
fst
push
jecxz
and
fdivrl
rcll
add
and
sub
xrelease
cmp
pop
popf
outsl
or
push
inc
dec
inc
pusha
in
add
or
ds
imul
xor
inc
dec
insl
call
sub
outsl
add
sbb
inc
push
out
loope
fs
adc
dec
loop
pop
push
add
jnp
test
aad
cmp
xor
pop
cwtl
movsb
adc
inc
ja
test
mov
pop
sbbl
add
test
adc
insb
add
xchg
inc
lret
aad
xor
xchg
mov
cmpb
pushf
mov
pop
mov
jb
jecxz
aas
jecxz
xchg
dec
push
push
push
out
and
mov
orb
popa
xor
je
sub
pop
pop
fisttpll
mov
xchg
or
icebp
in
fcmovnbe
shlb
mov
repz
jg
lahf
mov
xor
push
adc
add
pop
add
add
xor
in
pushl
add
mov
push
xor
enter
rorl
call
leave
inc
sub
and
jg
push
pusha
pop
mov
lret
or
or
push
lret
outsb
fistl
fists
xchg
ja
pop
cltd
rcrb
nop
adc
jne
sahf
push
or
inc
sub
and
mov
mov
or
rcrl
push
push
movsb
push
add
in
add
outsl
add
adc
adc
and
movsl
mov
adc
mov
pusha
pusha
inc
lahf
inc
lock
adc
pop
and
xchg
cmp
add
adc
enter
inc
or
or
test
dec
cltd
rclb
sub
es
push
inc
pop
aam
hlt
mov
push
jp
inc
and
cltd
in
push
ss
jl
ret
pusha
xor
xchg
adc
sub
sub
dec
ss
dec
or
dec
dec
fsubs
dec
lcall
inc
inc
inc
sbb
dec
cmp
mov
rorb
rorb
add
dec
xchg
hlt
add
add
loopne
por
das
aad
test
add
dec
adc
ret
dec
add
dec
pop
xchg
dec
adc
mov
sbb
jl
lea
jecxz
add
call
pop
gs
clc
xor
adc
jmp
imull
clc
mov
out
add
or
cmpsl
repnz
push
xchg
rclb
jge
mov
and
lahf
enter
xchg
call
popa
push
add
add
fs
xor
push
popf
dec
addl
rcll
pusha
das
sub
pop
jns
inc
push
mov
lods
push
fisttpll
sub
pop
add
je
jo
or
and
and
jl
hlt
jae
sbb
cld
call
pop
das
inc
test
mov
adc
add
mov
in
dec
dec
cltd
ret
or
push
jmp
add
dec
mov
dec
push
dec
add
add
sbb
pop
pop
insb
ja
inc
dec
sbb
in
insb
addr16
adcb
sub
inc
sub
call
daa
mov
js
cmpl
out
sbb
mov
push
test
fidivrs
iret
sarl
mov
leave
ljmp
in
adcb
dec
les
mov
movsb
fidivs
and
sub
sub
sbb
in
lods
mov
lret
sub
inc
out
add
mov
mov
out
xchg
mov
add
inc
dec
jb
pop
pusha
pop
nop
pop
mov
dec
inc
fnsave
jne
mov
loopne
pop
jb
shl
and
jb
call
pop
in
lock
pop
jb
hlt
aam
inc
add
inc
dec
xchg
inc
clc
jae
icebp
pop
add
push
pusha
sub
pop
push
adc
xor
inc
pusha
inc
mov
dec
lahf
popa
fnsave
sbb
sub
aam
test
insl
call
movsl
dec
xchg
cs
dec
lods
dec
sbb
push
pushf
xchg
xor
inc
jmp
or
fwait
movsl
pop
or
fadd
xchg
xlat
jmp
sub
cmp
mov
sqrtps
mov
xchg
in
imul
sub
xchg
xchg
fs
adc
cmp
xchg
pop
cmp
inc
cmp
cmp
fs
out
adc
push
add
add
sbb
push
cmp
dec
jle
cs
fimull
pushl
dec
add
les
loopne
cli
add
jo
mov
cld
movsb
jbe
incb
or
xchg
pusha
sub
push
jne
shll
cli
mov
xor
inc
jecxz
fcoml
push
xor
push
and
xchg
dec
cmp
xchg
push
js,pt
or
xor
fdivs
pop
imul
inc
jne
adc
add
mov
adc
ss
or
or
jmp
data16
into
inc
xor
negb
shrl
or
or
cmpb
or
adc
sub
hlt
pop
nop
test
inc
jmp
add
mov
cmp
sbb
push
jp
dec
subb
lock
lock
push
orw
or
push
xchg
outsl
dec
add
xor
mov
mov
pop
jo
cmp
popf
xchg
add
movzwl
nop
push
cltd
pop
cs
add
idiv
int
mov
push
loop
add
pusha
jmp
lds
mov
gs
inc
cmp
mov
das
push
mov
mov
push
inc
mov
sub
xor
add
into
pop
mov
cmp
in
nop
adc
adc
test
insl
mov
iret
in
sti
mov
sbb
add
and
add
insl
adc
dec
and
ja
movsb
iret
aad
ja
jge
je
dec
jbe
adc
sbb
cmp
ret
xchg
sbb
sbb
pop
pusha
rolb
fildl
mov
sbb
popa
inc
add
fadd
fstpl
pop
fst
ljmp
daa
add
dec
jne
inc
or
lea
jo
dec
inc
sahf
jl
mov
movsl
mov
pushf
js
cmp
xor
mov
or
out
push
loopne
faddl
push
push
jge
mov
sbb
pop
push
or
cmp
push
or
mov
fsubrl
pop
pop
ds
pop
add
or
push
mov
mov
cltd
pop
mov
adc
lock
xchg
movb
sbb
hlt
lahf
adc
nop
mov
mov
pop
adc
cmp
lock
sbb
mov
mov
cmp
adc
and
mov
mov
mov
push
mov
popa
ljmp
push
lock
and
mov
rorb
mov
cmp
pop
sbb
cmp
xchg
sub
cmp
pushf
in
testl
sbb
cltd
popf
mov
rcrb
and
scas
inc
iret
lods
add
scas
xchg
loop
mov
mov
sar
inc
mov
cmp
test
add
out
or
es
aaa
and
lods
es
or
or
inc
adc
add
jmp
mov
sahf
and
fildll
cwtl
xor
scas
lock
push
mov
push
rcrb
leave
or
jg
adc
inc
cmp
jbe
fsubs
insl
lods
and
fidivl
inc
inc
pop
pop
aad
cmc
or
or
in
dec
add
adc
adc
lea
loope
rcrb
jmp
scas
push
ret
dec
lock
xchg
ja
mov
adc
and
cmp
push
fldl
lock
push
shll
pop
inc
push
cld
dec
lock
insl
fcmovnbe
cmp
adc
clc
add
dec
push
jo
sbb
jns
push
add
call
sbb
push
loopne
fmull
pusha
rorl
push
adc
inc
cli
inc
dec
pop
jo
mov
sub
adc
xor
lock
ret
push
or
sbb
dec
in
call
in
js
cwtl
sbb
mov
add
jp
ret
test
add
pop
je
dec
mull
je
cmp
or
adc
inc
adc
inc
add
push
iret
dec
push
mov
pop
pop
or
mov
sub
or
add
sub
imul
daa
or
adc
cmp
pop
clc
fldl
lea
rorb
hlt
or
mov
inc
sti
or
jne
add
addl
push
test
pusha
sbb
fistps
jmp
cmp
shrl
push
adc
push
fcoml
adc
jecxz
mov
add
xchg
jo
pop
mov
mov
clc
je
or
cmp
inc
adc
je
mov
sub
cs
mov
out
repz
aam
mov
fnsave
cmpsb
das
sbb
adc
and
pop
or
push
cwtl
dec
shll
stc
test
enter
inc
jns
shlb
cli
or
add
fbstp
jno
clc
sbb
or
lret
ret
push
test
cmp
adc
enter
cmpsl
push
in
pop
stos
or
or
adc
adc
clc
sbb
movl
jns
xor
xor
popf
jbe
pop
adc
nop
sbb
mov
nop
add
adc
sbbl
jg
dec
lods
pop
test
in
shll
ds
outsb
mov
pop
aaa
cmp
into
xchg
lcall
ja
int
push
sbb
and
dec
fs
nop
enter
xchg
cmp
sarb
lcall
icebp
push
add
push
pop
mov
and
mov
pop
adc
adc
adc
clc
push
cmp
je
inc
or
int
push
call
lds
pop
subl
push
push
insb
add
or
cmp
je
sbb
push
arpl
pusha
or
fcomps
pop
push
enter
push
cmp
and
in
push
cmp
sbb
call
imul
mov
sbb
in
adcb
je
enter
imul
scas
cli
xor
push
popf
divb
repnz
fstpt
or
push
or
cmp
jge
clc
push
inc
add
aaa
test
stos
inc
add
add
sti
test
mov
daa
inc
and
shrb
xchg
sar
mov
pop
jmp
das
ret
xor
ucomiss
push
and
and
fdivl
pop
xchg
sbb
and
int3
fld1
es
test
out
shll
add
test
pop
mov
or
or
adc
push
mov
or
mov
mov
es
push
xchg
lock
sub
mov
bound
adc
jne
movsl
add
movsl
pop
mov
jae
pop
jb
sub
pop
mov
or
xchg
push
call
xchg
inc
and
shlb
push
mov
sbb
add
ret
and
int3
or
and
sbb
call
sbb
fisubl
inc
or
add
mov
jnp
cmp
ret
stos
pop
push
mov
or
and
nop
mov
mov
add
xor
or
pop
mov
and
xor
push
in
or
shrl
test
fdivrs
mov
push
mov
or
and
inc
jmp
aad
test
jo
loopne
adc
sbb
or
inc
mov
daa
or
pop
push
push
mov
dec
test
xchg
mov
loop
pop
aad
jge
dec
ficomps
xchg
aad
cmp
shrb
adc
lea
jo
dec
hlt
xchg
push
or
push
or
cld
fstpl
inc
jmp
sbb
inc
imul
and
leave
movsl
mov
movsb
mov
loope
mov
jb
adcw
in
pop
seto
cld
sub
sub
jnp
movsb
cmp
in
pusha
adc
pop
inc
rorb
movsl
aaa
ds
push
sub
rolb
jbe
imul
and
mov
pop
pop
ret
popf
push
int3
add
fs
mov
fs
rorb
and
lods
sbb
ret
clc
pop
mov
push
dec
push
hlt
push
add
cld
into
fcoml
lds
pop
pop
fistps
and
push
or
push
lcall
and
dec
xor
rolb
jae
xchg
ss
pop
popa
xchg
add
sub
test
dec
add
jle
jno
aaa
mov
scas
mov
add
or
jmp
adc
mov
jb
inc
ficompl
popa
mov
pusha
divl
adc
mov
enter
pushl
or
shrl
dec
sbb
xchg
inc
je
mov
push
mov
inc
push
fmuls
push
push
lds
inc
add
lock
cwtl
or
xchg
cmp
xor
inc
bound
mov
fists
or
incl
inc
inc
mov
xlat
fs
hlt
xchg
or
fsubrs
shrb
sbbb
cmc
push
adc
jmp
in
mov
sbb
aas
imul
mov
iret
mov
xchg
je
inc
imul
or
mov
cmp
and
enter
dec
pop
mov
fisubrl
adc
stos
fists
cmpsb
fldenv
xorb
shrb
or
leave
imul
sub
and
out
sub
mov
je
cmp
cmp
out
push
fldenv
cmp
in
cmpsb
mov
xchg
jno
sbb
scas
arpl
arpl
cmp
fstpt
sub
xor
mov
aas
and
inc
and
dec
sub
mov
xor
adc
js
sbb
psubsb
sub
push
inc
sub
and
or
or
jno
inc
nop
cmpsl
loop
and
cld
cmpsl
dec
in
test
fisubl
scas
push
jne
js
clc
jmp
mov
xor
and
xchg
icebp
lret
pmaxub
push
lea
push
fs
and
shlb
mov
jl
cmp
adc
or
lret
mov
enter
cli
dec
and
insb
sub
sub
fidivl
cmp
test
nop
push
add
adc
andl
xorl
jecxz
jp
imul
int3
cltd
mov
push
adc
inc
mov
es
and
sub
push
pushf
and
jnp
lock
sub
ljmp
call
orl
inc
les
scas
cmpb
jbe
cmpsl
shr
sub
sbb
and
pusha
mov
xchg
pop
popa
js
inc
popf
shr
dec
lcall
push
or
out
mov
pop
jbe
outsl
dec
mov
dec
push
mov
adc
inc
lret
es
jae
jb
push
je
push
je
cmp
push
test
pop
dec
xor
fstps
or
jl
mov
nop
sub
loop
call
push
nop
sbb
add
cwtl
inc
pop
inc
cmp
add
and
push
xlat
mov
push
adc
insb
dec
push
scas
seto
dec
cltd
push
jl
push
push
jo
in
push
mov
mov
sarb
inc
rorb
ret
adc
insb
push
push
add
ret
pop
arpl
fadds
cmp
data16
and
rcr
pop
and
mov
mov
cmp
int3
mov
xchg
mov
faddl
in
cltd
adc
icebp
aam
jecxz
loope
pop
pop
mov
sub
jecxz
lock
sbb
cmp
mov
xor
lret
mov
roll
xor
add
bound
mov
insb
xor
xchg
add
push
dec
cmc
dec
push
xchg
sbbb
scas
xchg
fcompl
clc
je
cld
enter
clc
dec
sub
sti
push
pop
adc
jle
shrl
add
jge
inc
movsl
pop
jb
dec
iret
pop
lret
inc
push
xor
ficoms
mov
popa
dec
add
add
push
jo
sub
je
push
jle
movb
stos
mov
add
leave
pushf
std
pop
aad
jno
adc
mov
jg
push
adc
in
pop
and
iret
dec
fs
jmp
ret
insl
pop
push
add
frstor
js
or
pop
push
cmp
sbb
les
sbb
clc
fldl
and
mov
mov
mov
adc
xchg
fisubrl
leave
xchg
lret
js
push
fsubrl
and
test
mov
fcoms
mov
mov
cmpsb
out
add
mov
mov
inc
dec
push
push
xor
in
adc
inc
push
sub
enter
ljmp
test
je
or
push
cli
daa
push
shlb
movsl
jmp
or
rcl
pextrw
push
sub
stos
enter
cmp
adc
jb
ret
and
pushf
fsub
loope
ffree
bound
fldl
in
push
out
and
in
cmp
loope
adc
or
or
pusha
jg
mov
ja
movsb
lock
fmuls
addr16
push
dec
xor
loope
push
cmp
lock
push
sbb
sbb
mov
icebp
popf
sub
cmp
mov
mov
sbb
push
adc
mov
adc
test
lea
xchg
stc
sub
inc
mov
aas
lcall
or
loope
testb
fldl
orb
cld
xchg
adc
push
addb
push
or
mov
mov
pop
and
enter
jge
flds
xor
scas
or
mov
or
jne
push
sub
jbe
pusha
loop
adc
sbb
cmp
mov
imul
xor
sahf
pmaddwd
bound
and
loope
fs
sub
and
imul
and
scas
push
movsl
mov
push
sbb
or
push
dec
inc
inc
adc
push
xchg
sub
and
pop
add
in
xor
lea
xor
in
pusha
sub
mov
loope
lahf
or
sbb
add
push
in
jmp
push
pop
aaa
int3
or
cmp
dec
mov
ds
xchg
ss
shr
push
inc
push
mov
push
adcb
jno
fs
cmp
or
fimuls
push
cmp
jbe
cmp
movsl
sbb
mov
add
or
ret
and
in
or
ret
push
adc
sub
push
neg
pop
out
push
call
add
lret
mov
pop
inc
data16
and
xor
aad
inc
mov
sbb
add
adc
fs
dec
cli
push
pop
fnstcw
adc
cwtl
push
sbb
sbb
fnsave
sti
sub
hlt
pop
add
orb
or
inc
sahf
push
xor
and
lret
outsb
in
loop
and
js
sbb
addr16
mov
jne
sbb
mov
add
mov
loopne
loope
jno
add
xchg
and
mov
add
test
adc
andb
jge
or
push
dec
pop
sbb
imul
jae
or
inc
iret
jg
mov
mov
sahf
inc
sbb
inc
xchg
push
xchg
leave
pop
sub
or
or
adc
loope
lret
push
push
jne
ja
push
pop
add
jne
xchg
inc
dec
and
adc
rcl
cli
xchg
sarb
sub
and
mov
inc
add
sub
rcrb
and
add
inc
sbb
popa
mov
mov
in
jle
subl
pop
test
inc
dec
mov
hlt
add
fbstp
mov
dec
xor
dec
jle
or
push
jnp
es
xor
sbb
pop
inc
cwtl
push
pusha
xor
mov
xchg
or
daa
data16
push
addl
or
fsubrl
test
lea
inc
out
js
jns
pop
inc
bound
sub
push
mov
in
mov
push
mov
les
lcall
push
outsb
mov
movsb
lds
inc
das
or
sub
inc
pop
je
mov
imul
mov
xchg
enter
and
pop
and
sbb
sbb
je
aad
xorb
lods
push
rcll
imul
xchg
push
call
loopne
xchg
mov
jmp
push
jo
push
or
clc
or
mov
xor
jecxz
test
mov
and
lods
cmp
rolb
pop
adc
or
notb
data16
daa
or
jns
inc
and
or
or
fidivl
push
je
shll
je
or
jnp
cwtl
mov
adc
outsb
sbb
inc
jo
pusha
or
xchg
mov
lods
pop
enter
jmp
and
mov
xchg
jo
dec
into
ret
jb
rolb
pop
adc
daa
sbb
and
dec
push
and
add
lock
outsb
ss
mov
cmp
clc
inc
or
jl
jge
inc
inc
mov
adc
cld
es
ret
adc
push
outsb
adc
adc
shl
mov
imul
xor
xchg
inc
xor
fwait
xor
add
insl
les
sbb
jp
dec
push
or
pop
or
pusha
pusha
dec
jmp
mov
lea
or
pop
xor
mov
inc
fwait
sub
xor
push
test
mov
inc
imul
js
sub
aaa
cmp
cmp
or
sub
incb
lret
xchg
jecxz
or
pop
push
pop
cwtl
mov
rcrb
cmp
dec
or
outsl
lock
pusha
ljmp
mov
mov
loop
add
pushf
adc
mov
dec
lock
movsb
push
jle
cmpsb
adc
jnp
mov
inc
stos
inc
adc
sbb
sbb
lea
pop
aad
push
movswl
push
inc
push
dec
mov
test
pusha
ja
push
clc
and
pop
rcr
cmpsl
mov
enter
and
inc
lods
add
loop
and
add
mov
cmp
adc
aam
ja
push
scas
add
test
sub
dec
shr
imul
mov
in
adc
mov
mov
push
mov
outsl
mov
push
ficompl
xchg
sbb
sbb
add
cmp
inc
mov
jb
inc
out
xorb
jp
lea
jae
and
aam
sub
ret
enter
enter
mov
sub
sbb
movsb
arpl
sub
cmc
adc
jne
jne
unpckhps
add
push
cmp
js
sub
test
sbb
sbb
mov
push
jge
rolb
insl
or
rorb
lods
push
enter
loop
or
sbb
pop
pop
insb
jne
stos
orb
enter
dec
jecxz
push
data16
xor
xor
lock
cmpsl
inc
or
roll
or
adcb
sub
incb
adc
add
aaa
push
das
jb
xor
push
cmp
sub
push
arpl
insl
retw
xor
adc
je
and
orl
pop
inc
xlat
mov
lea
cmp
iret
lcall
xlat
ljmp
jns
xchg
mov
push
or
imul
shl
pop
shl
and
js
cmp
pop
rorl
add
push
xchg
sub
mov
fldl
push
inc
out
out
lret
mov
and
test
push
scas
inc
cmp
or
int3
adc
sbb
cmpsl
dec
pushf
sti
xchg
adc
jo
lea
pop
dec
mov
mov
mov
mov
lea
ja
jle
jne
xchg
cmp
add
fildll
dec
mov
imul
push
push
mov
add
sbb
push
movb
push
data16
sub
fsts
pop
sbb
addl
inc
stc
leave
ret
xchg
mov
add
jne
push
pop
shlb
jle
and
mov
fwait
jns
adc
inc
bound
and
clc
loop
ljmp
and
push
add
xor
loopne
cltd
add
add
inc
sub
loope
rcll
lds
and
test
add
scas
sub
xorl
adc
dec
cwtl
inc
sbb
add
in
packsswb
call
sbb
sub
push
imul
icebp
sub
inc
movsb
sbb
fbstp
cs
push
jne
nop
xchg
outsl
push
xor
setl
movsl
mov
mov
repnz
sahf
ja
dec
push
adc
xchg
out
cmp
and
push
scas
mov
add
lock
insl
das
cwtl
jb
cmc
push
and
js
idivb
push
adc
test
andl
insl
mov
cld
mov
insl
cmpb
mov
xor
xor
pop
push
xchg
cmc
sub
push
aam
into
ja
scas
pusha
mov
cmpsl
pusha
jl
sbbl
fs
lock
and
popa
data16
mov
and
rolb
push
je
fistl
jmp
in
push
or
push
jmp
repz
push
push
and
pusha
fmuls
das
sbb
dec
xchg
or
dec
and
and
sahf
aaa
or
popa
cwtl
adc
mov
xchg
pop
push
jo
push
es
mov
mov
or
hlt
movsb
inc
wrmsr
inc
mov
sbb
add
xchg
sub
sub
shlb
dec
and
adc
lret
loopne
stos
sub
push
push
and
je
adc
shrb
dec
cmp
push
jl
sub
ja
xchg
cld
jl
data16
cltd
sbb
add
sti
push
and
xor
scas
adc
cmp
popf
scas
int
mov
aaa
das
sbb
pusha
dec
push
sub
push
fnstenv
jae
sbb
inc
jo
pop
cmp
push
adc
add
pusha
outsl
xchg
sub
mov
xchg
push
add
or
add
adcb
sbb
rsm
sub
ds
xor
mov
cltd
enter
or
decb
jnp
lea
insl
inc
faddl
ret
xorb
mov
ds
nop
add
inc
out
andl
movsw
mov
daa
imul
imul
xchg
push
add
outsb
pusha
movsl
hlt
jo
inc
and
ret
add
pop
push
add
add
pop
and
mov
inc
adc
test
insb
je
lea
inc
push
or
outsl
xorb
jbe
or
xor
fs
aam
or
or
pushf
lods
sbb
out
push
push
hlt
pusha
sbb
mov
pop
fbld
jecxz
push
jnp
inc
pop
adc
mul
or
sti
cwtl
push
push
sub
push
iret
jbe
adc
cmp
cli
sub
pop
xor
aam
xchg
jl
fmull
jl
and
sub
pusha
jge
popa
femms
jo
adc
sbb
scas
jne
adc
mov
icebp
jmp
mov
aad
test
aaa
pushl
xchg
xor
dec
inc
lret
jae
mov
add
mov
mov
xor
jl
leave
xchg
and
mov
mov
nop
sub
ret
sub
push
or
fcomps
jge
leave
lret
pop
cmp
jno
sbb
adc
mov
rol
dec
jns
hlt
aam
or
xchg
cmp
inc
imul
jge
jne
pushf
popa
rorb
fimuls
adc
pop
or
push
push
mov
imul
dec
jl
jbe
fildll
insw
lock
cmp
enter
cld
cld
adc
xor
cs
sbb
push
ja
add
xchg
mov
xor
jno
jge
push
shl
lock
push
sarb
cmpsl
xchg
pop
jle
ret
sub
push
dec
mov
mov
mov
movl
push
test
sub
mov
cwtl
roll
mov
pop
cmp
clc
ret
jl
mov
xchg
mov
loope
out
add
inc
cwtl
lret
pushf
add
jo
dec
jb
push
push
call
sub
pushf
push
sbb
cmp
inc
mov
add
mov
xchg
movsb
adc
test
shlb
push
mov
push
push
test
les
add
inc
pop
scas
xchg
fs
imul
enter
imul
rorb
pusha
aam
push
mov
movsb
pop
pop
cmp
sub
dec
in
inc
jl
sub
icebp
mov
stos
pop
pusha
dec
push
cmp
and
cmp
adc
insl
mov
jge
jno
test
cmp
ja
add
cmp
push
loopne
cs
in
aas
add
cmp
testb
je
orl
movsl
push
sub
mov
cwtl
add
jp
xchg
ret
xor
rorb
dec
call
pop
push
cmp
hlt
push
push
mov
add
xor
inc
adc
add
stos
leave
cmpsb
sti
jle
adcl
xorb
aad
jle
jmp
push
lods
nop
loopne
adc
icebp
jge
loope
cld
insb
rcr
dec
aam
arpl
xor
scas
sub
inc
ja
fisttpll
loopne
inc
xlat
ficompl
mov
enter
outsb
cmp
pop
icebp
xchg
rorb
loopne
push
add
movb
sbb
mov
lds
icebp
or
shll
pop
cmpsl
add
jge
xor
add
and
lock
mov
inc
push
xor
cs
sbb
hlt
or
xor
cwtl
fsubrs
mov
mov
lds
jl
sub
push
jb
nop
cmpsb
pop
in
call
in
in
adc
mov
jo
xchg
orb
and
or
insb
jne
mov
push
jns
push
sub
push
rcr
mov
mov
cmp
call
sbb
pop
in
or
xchg
je
cmpsl
pop
rolb
jecxz
adcb
inc
sub
push
cmpsl
movsb
push
xor
cmp
dec
mov
jno
fcmovnbe
xor
mov
data16
call
push
sub
orb
inc
insb
lods
insl
test
pusha
ret
and
add
and
int3
ds
add
out
and
rcr
nop
stos
je
mov
lock
sbb
add
test
into
adc
pop
jle
aaa
push
ffree
adc
lahf
sbbl
dec
push
or
call
xchg
push
adc
add
mov
outsb
adc
es
and
scas
cld
push
lods
and
mov
ss
or
rcll
ficoml
lret
mov
pop
lods
push
mov
or
js
dec
enter
hlt
push
aam
faddl
rcl
push
cwtl
inc
jbe
xchg
jbe
test
in
jl
jge
add
negb
dec
nop
out
test
jo
mov
repz
in
enter
fldl
mov
cmpsl
divl
mulb
js
clc
push
or
push
jae
out
cmc
xlat
cmp
cmpsb
loopne
cmp
je
inc
movzwl
testl
jmp
push
loopne
clc
cmp
pop
and
pop
loopne
imul
in
clc
call
test
xor
fstpl
dec
push
lock
or
enter
dec
xchg
adc
je
adc
jg
imul
cmp
push
and
into
inc
adc
mov
test
mov
pop
add
and
xorl
push
ret
mov
fnstenv
and
mov
and
xchg
pop
clc
xchg
lret
sbbb
push
inc
cmpsl
or
or
add
add
lods
jg
mov
and
cmp
aam
cmp
jge
pop
jmp
push
cmp
jl
jmp
icebp
loope
or
rorl
pop
es
daa
or
and
addb
popa
sub
cmovbe
mov
ja
mov
xchg
cmp
sbb
pop
mov
orl
ret
test
addb
int3
push
cs
dec
test
jo
mov
push
bound
cmpl
pushf
call
push
cmp
divb
outsb
data16
in
add
lidtl
movsl
mov
cmp
xchg
sbb
jnp
adc
xchg
mov
movl
xadd
push
pop
decb
jns
add
push
mov
sub
push
cmp
or
jp
sbb
xor
inc
jl
cwtl
nop
sbb
cmp
rcl
cmp
stos
cli
pop
and
pop
and
or
inc
push
pop
mov
in
stos
push
pop
sub
jg
les
mov
adc
xorb
cld
xor
jp
add
push
cmovle
mov
and
add
fwait
ret
pop
pop
ret
pushf
inc
loope
sbb
push
or
mov
leave
outsl
out
fdivs
pop
add
push
jmp
push
mov
loope
push
pop
add
ret
pop
sbb
sbb
sub
push
sahf
sub
mov
xchg
add
push
fcompl
inc
ret
mov
push
and
mov
or
push
decb
sbb
or
in
fcoml
test
aam
mov
mov
outsb
rcll
or
pop
sahf
and
lock
and
dec
push
cwtl
fiadds
lods
push
incb
repnz
sarb
orb
jae
and
ficoms
xchg
sbb
enter
iret
xor
iret
lret
movl
push
push
inc
push
nop
add
addl
sub
testb
xor
insb
or
or
inc
mov
test
push
stos
inc
sub
xlat
mov
loope
add
popf
test
cltd
out
popl
mull
fsubs
clc
pusha
insb
push
and
add
add
jb
jmp
push
movsb
push
mov
xor
test
xchg
jl
sbb
in
jnp
or
and
cmp
call
lahf
ret
inc
cmp
dec
shr
push
xor
das
sti
add
cmc
lock
fstps
mov
int3
cmp
call
sbbb
pop
push
add
lds
lcall
xchg
inc
push
shl
rorb
xchg
pop
in
mov
test
inc
push
adc
xor
inc
sbb
inc
dec
jnp
inc
stos
push
add
mov
mov
ret
xor
and
je
mov
lea
cmp
xor
loop
stos
adc
adc
pop
xor
in
das
shlb
inc
xor
xchg
push
or
cmp
ud2
and
inc
add
inc
or
add
in
insb
and
cmp
push
push
shr
and
insl
fmuls
push
xchg
adc
ds
lods
pop
enter
je
xchg
inc
inc
js
jne
or
pop
es
ret
dec
cmp
test
adc
pop
adc
out
js
fidivl
insb
dec
cmp
inc
sub
push
inc
push
xchg
ss
add
not
loop
sub
jb
add
and
sub
insb
adc
scas
sbbb
inc
insl
int3
inc
rcll
inc
addl
lock
push
and
adc
cmc
outsb
int
pop
movsb
adc
fdivs
bnd
push
pop
mov
push
mov
dec
loopne
lret
or
inc
mov
movsb
stos
mov
or
insb
popf
in
scas
push
mov
inc
jp
jl
negl
push
adc
jns
push
sbb
adc
lcall
or
sub
cmc
inc
rcrl
add
hlt
ret
push
xchg
pop
jo
mov
push
loope
inc
add
pop
sbb
das
xor
inc
or
loop
popa
push
rolb
mov
sar
fdivl
jge
xchg
lcall
push
stos
pop
push
push
andb
je
das
daa
pop
cmpsb
dec
adc
and
call
test
inc
cmp
icebp
arpl
jo
add
mov
xor
sbb
movsb
mov
mov
jl
mov
testb
xor
and
dec
push
jmp
inc
lahf
adc
int
push
call
out
jle
dec
shrl
or
lret
cmpsb
adc
push
or
sbb
mov
cld
sbb
pop
rclb
das
movsb
movsl
pop
or
sub
add
or
add
jge
aas
test
pop
xchg
pop
lock
iret
cltd
fcom
rcll
fidivrs
adc
mov
jmp
adc
cmp
jne
jbe
mov
out
jmp
add
scas
lock
and
or
pushf
pop
sti
pushf
bound
mov
jne
pop
pop
inc
shrb
shrb
lods
sbbb
cltd
or
add
sbb
sub
and
push
xor
js
insl
es
or
xor
cmpl
fwait
mov
clc
inc
push
std
lea
subb
sti
mov
pushf
mov
cmp
test
ja
and
shll
or
jns
shl
out
inc
fmull
test
add
or
jmp
test
jo
push
hlt
lret
sbb
loop
sbb
cwtl
rcrb
les
mov
loopne
push
push
adc
or
jg
cmp
push
inc
or
cmp
mov
or
jp
xor
mov
cmp
lea
xchg
hlt
push
pop
xchg
loopne
movsl
jbe
dec
sbb
jb
sbb
mov
add
and
inc
inc
and
dec
hlt
add
imul
idivb
pop
rcrl
push
push
rorb
es
cmpsl
add
rclb
add
pop
hlt
xor
cli
sub
cs
mov
sub
adc
or
fstps
lock
sbb
or
je
adc
clc
pop
add
fstps
pop
sub
fiadds
dec
inc
mov
dec
lcall
les
sahf
xchg
mov
int
sub
into
lods
adc
xor
repnz
add
cmp
inc
pusha
cld
push
lods
ret
and
mov
lds
xor
inc
enter
adc
pop
push
add
push
cmp
inc
jecxz
add
add
leave
and
pusha
jp
dec
imul
popf
je
xchg
mov
pop
mov
adc
push
test
and
mov
fildl
lret
mov
test
or
pop
mov
cmp
iret
mov
add
rolb
fsub
xor
add
jle
jmp
ficoml
mov
xchg
push
add
clc
xchg
movsb
int3
xchg
pushf
bound
icebp
xchg
sub
call
or
push
fistpl
push
in
loopne
arpl
and
movsl
push
sbb
push
ret
out
cmp
sbb
jo,pt
lret
shll
adc
xor
push
bound
sub
movl
dec
xchg
cld
mov
jne
cmp
arpl
dec
add
or
loopne
adc
rorb
hlt
clc
cld
hlt
xor
test
lds
clc
dec
in
jo
sbb
push
xor
data16
insb
sub
lea
and
pusha
stos
lods
or
or
mov
pop
iret
ret
jno
mov
loopne
imul
and
adc
subb
in
shrl
xor
fcompl
push
push
addr16
push
orl
shlb
pop
push
add
jle
ds
fnstsw
add
cmp
ret
jg
or
and
lods
inc
pop
bound
sub
mov
and
test
pop
movsl
aas
test
push
push
mov
cmc
adc
mov
mov
outsb
adc
test
pusha
hlt
mov
push
stos
dec
cmp
mov
movsl
push
mov
ret
or
ud0
add
sahf
mov
or
jl
jmp
mov
fnstsw
or
fimuls
sbb
inc
inc
mov
adc
or
push
or
jl
push
cmp
cmp
testb
cmp
fstl
or
adc
pop
and
inc
orb
in
sbbb
cmp
jo
iret
sub
cwtl
out
inc
sbbl
adc
add
sbb
inc
jge
jbe
je
sub
adc
add
or
rol
sti
xchg
pop
push
sbb
adc
xchg
cwtl
mov
mov
sti
sub
sbb
leave
and
sbb
and
push
cltd
jbe
cmp
xchg
or
push
inc
fistl
test
mov
lods
add
in
add
pop
push
fsts
js
push
mov
lds
lods
add
jno
sbb
dec
mov
jp
pushl
cmp
faddl
jmp
mov
sub
clc
data16
pop
push
and
jg
mov
dec
enter
lea
or
xorl
int3
sbb
sbb
mov
sbb
lret
lahf
xchg
sahf
andb
and
push
inc
mov
ds
das
rolb
adc
xchg
cmp
inc
fcmovnbe
je
adc
mov
fcomip
aad
inc
arpl
mov
xor
push
adc
or
sub
pop
mov
xchg
cmp
push
fmuls
mov
adc
arpl
mull
jbe
sub
pop
push
cmpb
iret
iret
inc
aam
dec
and
int3
pop
inc
mov
add
fs
aas
mov
push
push
popa
cmc
shrl
sub
sub
jo
mov
cs
sarl
pop
mov
sahf
jo
sahf
add
mov
and
loopne
in
or
call
sub
mov
xlat
sub
push
add
mov
sub
dec
out
mov
xor
or
lock
sub
dec
mov
mov
sub
or
inc
shlb
jl
mov
xchg
orb
push
and
inc
addb
or
pushf
pop
push
mov
pop
add
ret
mov
in
pop
cmp
push
sub
pop
add
divl
or
wbinvd
cmp
clc
add
or
lea
fildl
test
sub
sub
mov
mov
subb
loopne
movsb
loopne
dec
sub
subb
inc
jge
lods
popa
jecxz
lods
push
pop
mov
xchg
sahf
fisttpll
sbb
push
fcmovnu
cmp
or
fdivrs
je
and
cld
lahf
aas
int
add
mov
jno
mov
mov
sti
mov
pop
je
movsb
add
or
cmp
xor
adc
push
outsb
push
pushl
xchg
ret
ret
mov
add
sarb
test
movsl
add
mov
or
flds
fcoml
scas
push
mov
pushf
cld
pop
mov
test
sahf
xchg
xor
shlb
push
in
jl
shlb
push
int
pop
rcll
jmp
sub
movsb
dec
orl
icebp
jnp
push
mov
rorl
js
adcb
and
or
mov
andb
jge
cmp
lods
lcall
popf
push
dec
insb
sbb
adc
pop
mov
and
sahf
push
mov
jge
jb
ret
cmpb
push
ds
mov
aam
test
shlb
xchg
add
add
int3
insb
push
fstp
pop
inc
push
jmp
push
jnp
sub
orb
mov
mov
pop
mov
mov
clc
push
enter
in
jle
xor
mov
rorb
push
inc
mov
push
push
add
sarl
adc
shlb
inc
mov
insb
iret
je
lods
je
dec
inc
mov
ss
repnz
shl
fildll
sbb
testl
mov
sub
dec
call
cmp
mov
cwtl
lds
or
lahf
lret
adc
rclb
ljmp
add
ret
repz
mov
xchg
jge
inc
cmp
adc
add
inc
xchg
je
cmpsl
push
shr
inc
cli
fistpl
push
push
ss
aad
mov
lods
adc
lds
pop
std
jp
inc
or
out
push
or
cltd
ljmp
jmp
xchg
jp
iret
adc
movsl
out
inc
mov
xlat
mov
test
push
mull
lea
int
js
cmpb
ja
inc
xlat
loope
xchg
push
jecxz
in
test
push
inc
out
xor
push
pushl
and
push
adc
and
sbb
sub
adc
inc
dec
shlb
and
cmp
ss
add
outsb
jno
loopne
loop
pop
dec
push
cwtl
call
stos
or
sbb
fadd
sbb
test
adc
or
gs
dec
shrl
in
push
or
jecxz
sbbb
or
clc
fisubrs
mov
push
push
repz
add
push
fldenv
subb
xchg
push
loopne
and
inc
sbb
pusha
add
rorb
jne
or
mov
add
push
xchg
jge
mov
dec
jns
fisubs
cmp
cmp
push
inc
sbb
testl
or
or
or
or
ficompl
jae
sbb
lret
shlb
push
or
leave
push
aam
cmc
test
mov
fistpll
add
dec
pop
inc
stos
lret
xorb
scas
xor
adc
add
loop
inc
add
insb
or
mov
test
xor
js
iret
fwait
lods
dec
cmpsb
out
add
ss
lock
push
push
mov
or
push
test
hlt
mov
mov
iret
outsb
jbe
xchg
and
test
cli
mov
mov
push
in
dec
xor
cli
aad
addl
pop
sub
or
lahf
push
rcrb
insl
ljmp
and
jns
mov
inc
or
inc
leave
jnp
and
mov
js
pop
jbe
xor
sub
cmpl
push
xor
pop
push
sbb
mov
mov
dec
fildll
test
loopne
and
push
gs
add
lcall
repnz
clc
jg
add
add
lret
shll
jp
ds
subl
sub
sbb
mov
cmp
adc
sub
call
ss
xor
pop
jne
dec
call
push
adc
addl
testb
fs
dec
and
push
xor
fidivl
and
and
push
xor
add
jo
ds
adc
shrb
dec
sub
outsb
sbb
cmp
jo
mov
fwait
outsb
in
sahf
or
inc
fisubs
repz
sub
orl
add
mov
jmp
inc
es
add
dec
or
jo
test
stc
rcr
push
mov
movb
add
mov
pop
add
es
add
xor
mov
pop
xchg
lods
pop
jns
add
cmp
push
xor
push
or
addl
jle
pop
ljmp
call
mov
testb
dec
adc
je
jo
or
push
xor
imul
mov
js
vmulss
fistpl
fildl
xor
jp
loopne
adc
jl
sbb
lea
out
stc
ljmp
sub
mov
lock
inc
jl
jmp
adc
jp
mov
rorb
sub
jne
rolb
add
xor
mov
orl
jbe
shlb
lods
dec
pop
call
aam
sub
rorb
cmp
bswap
out
inc
jo
dec
mov
xchg
add
jl
movsl
mov
ret
test
sbb
fiadds
inc
daa
ja
inc
movsb
add
jmp
inc
adc
cmp
jb
xor
mov
cmp
out
inc
clc
xchg
je
add
push
ret
pop
add
adc
ljmp
inc
shlb
adc
addb
pop
push
xorb
fcoml
and
xchg
data16
ret
daa
dec
xchg
movb
mov
adc
push
aaa
sub
je
mov
cmp
push
imul
add
inc
cmp
pop
ret
jbe
ds
jecxz
xor
stos
mov
fcoms
or
hlt
add
dec
mov
add
and
jbe
data16
popf
jno
jle
mov
add
test
pop
mov
test
xchg
or
rcl
clc
add
add
ret
jne
lret
push
cmp
lods
dec
out
mov
sbb
adc
cli
decl
add
lret
movl
push
mov
ss
je
mov
cld
inc
hlt
add
imul
dec
rcrb
mov
clc
ret
xchg
push
xchg
sub
scas
clc
movsl
and
and
cmp
push
mov
adc
xchg
add
mov
wrmsr
pop
dec
sub
or
fisubrl
lret
repz
push
cmp
pusha
xchg
inc
mov
inc
aaa
loope
lea
push
push
push
ds
and
cmp
xor
adc
push
and
movsl
and
ret
inc
or
pop
add
xor
push
add
insl
les
mov
les
sub
push
iret
mov
mov
sub
xchg
cwtl
ret
jecxz
sbb
cmc
add
test
adcl
mov
push
test
add
or
sbb
push
dec
dec
push
jb
repnz
inc
loope
xor
in
test
movsb
shrb
xor
or
out
cs
mov
fwait
mov
and
test
sbb
sub
adc
popf
inc
clc
sbb
out
add
dec
cmp
xor
push
xorb
or
cwtl
outsl
leave
mov
lods
push
sbb
imul
or
xor
jns
insb
add
push
and
subb
inc
pushf
push
fstps
bound
pushf
jl
cs
jnp
mov
pop
fnstenv
hlt
add
adc
lods
or
gs
loop
push
lea
repnz
or
sub
leave
or
dec
cwtl
inc
inc
lret
pop
jb
loop
lcall
fldenv
mov
xor
dec
pop
adc
push
daa
dec
push
outsl
jb
and
in
rorl
jmp
add
inc
jb
adc
pop
add
mov
xchg
or
shlb
std
popa
dec
fcomp
push
scas
jmp
cmp
dec
inc
mov
aaa
add
xor
fistpl
jo
sub
enter
sbb
imul
rolb
dec
rclb
jne
mov
in
int3
movswl
sub
push
push
es
xchg
sti
cmp
jb
push
test
and
adc
mov
das
fldl
pushf
loopne
dec
fsub
aaa
fldz
cmpsl
rol
cmp
pop
int3
inc
data16
loopne
inc
add
push
adcl
fsubrs
cld
cmp
sub
and
xchg
pop
fs
adc
imul
clc
mov
roll
imulb
add
pop
mov
rorb
dec
xlat
ja
mov
pop
xchg
inc
mov
or
sub
in
aad
enter
pop
sub
lret
mov
mov
dec
test
jbe
fld
inc
cld
scas
push
in
cmpb
push
fchs
sbb
test
jl
call
decl
imul
dec
shlb
add
rcl
arpl
pop
rcll
push
sbb
shll
subl
sub
add
mull
cmp
cmp
sbb
inc
xlat
sub
add
xor
jge
addl
mov
movsb
pop
pop
inc
movsl
adc
insb
test
cmp
lret
and
mov
and
in
push
dec
add
push
inc
or
add
adc
jle
addb
cs
shlb
add
jo
addb
or
mov
add
add
mov
fadds
pop
pop
jg
dec
sti
lret
inc
iret
inc
push
xor
test
push
enter
and
xor
push
inc
inc
add
mov
fdivrl
mov
mov
cmp
jb
orl
mov
push
in
push
clc
xchg
or
int
or
push
mov
pusha
fadds
cmp
jle
dec
andl
in
mov
add
xor
movsl
sub
add
and
push
enter
push
and
adc
xor
pusha
fsubrs
scas
mov
push
into
ljmp
and
movsl
out
mov
sbb
rcrb
std
sahf
sbb
insb
add
cmp
add
out
add
aam
fsubp
ret
dec
aas
shrl
sub
sub
cld
ss
bound
ljmp
cmp
jo
push
test
js
movsb
mov
cmp
jne
lods
ja
test
test
cmp
jl
push
call
jb
mov
or
or
pop
or
or
jp
aam
pop
popf
inc
push
mov
daa
push
test
and
jo
cltd
cmp
dec
push
adc
aad
insl
pop
or
mov
loope
add
cmpsb
test
adc
leave
cld
xchg
adc
adc
mov
cmp
cmpsl
ja
lahf
push
inc
cmpb
or
ror
xchg
and
dec
or
xor
push
xchg
mov
loope
add
in
sbb
xlat
loope
test
lcall
push
imul
rcl
dec
adc
mov
imul
xchg
mov
outsl
ja
sbb
xor
dec
loopne
push
test
fcoml
mov
mov
pushf
xchg
mov
enter
mov
clc
xchg
dec
and
mov
sub
sub
lds
push
push
xor
frstor
adc
add
shrl
xchg
ficoms
xor
adc
dec
and
scas
push
xorl
adc
fldl
lret
mov
inc
xor
loope
bound
lea
outsb
test
movsl
mov
movsl
xchg
adc
dec
xchg
or
mov
or
or
cmc
pop
cmp
push
out
ss
and
inc
sbb
xchg
adc
lret
stos
sub
pop
sbb
stos
add
push
dec
loopne
cwtl
mov
push
cmpsb
jo
bound
js
mov
out
fidivs
push
lcall
mov
mov
mov
shrb
ljmp
shll
test
loope
add
jne
xor
call
xchg
push
push
dec
inc
xor
ret
inc
icebp
jmp
cmp
inc
sbb
dec
mov
mov
mov
xor
jg
clc
test
dec
inc
sahf
sub
or
add
inc
lock
xor
push
mov
cmp
jo
push
jnp
shrb
iret
mov
jnp
or
pop
or
xor
adc
xor
jge
push
or
dec
jae
dec
and
mov
push
imul
add
les
sub
fiadds
test
pop
adc
mov
sbb
call
mov
nop
test
xor
popa
xor
in
jnp
push
and
xor
lds
rorl
mov
inc
mov
mov
dec
sbb
sub
pop
or
je
jmp
mov
adc
cmp
fmul
adc
or
test
push
mov
sbb
inc
in
jge
arpl
fs
cmp
jne
mov
push
or
pop
mov
cmpb
dec
pop
sbb
cmp
jg
call
cmc
test
or
or
repnz
or
cmp
cmp
inc
xor
add
jl
cmp
sbb
sbb
xor
jle
inc
cmp
xchg
adc
and
dec
jo
jo
mov
push
sbb
addb
xchg
imul
les
movsb
repnz
les
decb
push
in
adcb
pushf
adc
movsl
movl
mov
xor
or
out
xchg
mov
sbb
jns
push
addr16
adc
mov
inc
jbe
out
pop
push
add
and
pop
cvtps2pd
bound
add
lret
mov
ret
loopnew
or
addr16
add
sarb
mov
or
xor
fcoms
sbb
or
lret
cs
xor
outsb
inc
sbb
out
add
imul
push
push
and
push
fdivrp
decl
dec
push
or
or
sbb
adc
xor
push
inc
icebp
je
sub
loop
int3
orl
sbb
push
or
xor
adc
pop
imul
push
add
mov
js
inc
cmc
push
inc
add
adc
sub
cmp
add
cmpl
cmovs
leave
lock
icebp
push
fdivs
jl
xchg
dec
loopne
mov
addl
sahf
ret
jmp
orl
std
and
pushl
or
lea
mov
fdivrs
fists
xor
scas
and
cmc
push
nop
orb
add
add
xchg
les
sbb
in
xor
adc
inc
or
cs
iret
jp
call
inc
sbb
stc
cmpl
lcall
dec
rcrl
rol
and
sub
push
aam
pop
rclb
mov
loope
mov
aam
cmpsl
loop
dec
fsubl
cld
or
or
cld
mov
lahf
or
mov
sub
xchg
popa
mov
or
gs
bound
xlat
popa
or
add
mov
sbb
mov
pop
xor
lods
mov
or
pop
std
enter
jns
xor
jmp
mov
push
xor
push
xchg
ja
mov
jp
adc
and
adc
xor
sbb
adc
pop
push
iret
rorb
iret
imul
adc
ss
je
or
je
sub
shlb
mov
push
xchg
jb
adc
mov
or
jnp
push
dec
pop
fcomps
scas
dec
dec
ficomps
testl
and
cmp
and
roll
add
push
inc
ja
popa
shrl
divb
jle
ljmp
inc
ret
clc
sub
and
and
push
scas
enter
sbb
daa
lock
pusha
adcl
sbb
btsl
and
or
popf
xor
lcall
fwait
idivb
and
inc
imul
push
or
bound
add
and
jg
ja
movzbl
cmp
fidivrs
test
cmp
inc
jmp
loopne
push
add
xchg
jmp
adcb
adc
push
jmp
adc
pop
add
les
cli
iret
rcr
mov
es
jns
sti
cs
test
rolb
add
jbe
out
add
adc
pop
jnp
jle
cmpsb
add
push
adc
add
icebp
sub
jnp
add
pop
add
adc
adc
leave
and
add
add
sub
and
lock
pop
lea
mov
jne
cmp
add
add
jmp
dec
push
pop
cmp
stc
xlat
mov
faddl
mov
jl
push
ss
xchg
inc
shll
arpl
and
jle
and
sbb
fcmovnbe
sub
pop
je
cmp
adc
in
adc
push
ja
imul
push
mov
inc
sub
fidivrs
movsl
jo
sbb
pop
je
sub
je
push
or
or
jmp
adc
js
xchg
pop
stc
movsb
mov
xchg
push
mov
lret
shlb
jne
xchg
add
add
push
dec
rolb
xor
test
enter
lods
xor
cmp
or
adc
test
adc
add
test
add
hlt
fsubs
aad
push
sub
jo
mov
add
popf
jo
in
popa
mov
dec
in
jae
add
psrad
adc
cli
xor
outsb
push
adc
bound
mov
and
mov
cmpb
sbb
sbb
add
ret
dec
add
sub
push
push
out
inc
mov
and
mov
inc
dec
mov
adc
test
shlb
scas
test
adc
lods
test
call
in
xlat
xchg
loop
test
and
subl
ret
je
inc
xchg
ret
inc
cmpb
jl
sbb
or
lods
testl
flds
gs
leave
dec
and
push
cmp
cs
in
mov
addr16
mov
jbe
pop
and
mov
ja
jbe
jo
jmp
push
xor
cmp
jmp
stos
push
jmp
pusha
xor
mov
cmp
rolb
xchg
mov
das
mov
arpl
xchg
icebp
rolb
sbb
xor
shlb
sbb
movsb
push
inc
test
xchg
inc
and
lock
xchg
and
push
movhps
push
dec
pushl
add
pop
inc
shlb
xchg
inc
adc
add
test
xorb
sbbb
bound
and
loopne
and
enter
push
fidivs
jo
lock
xor
xchg
xor
or
jecxz
enter
es
mov
mov
jge
fdivs
cmp
or
js
mov
push
cmp
icebp
inc
sbb
pop
push
inc
pop
mov
sub
add
cmp
sub
push
sub
dec
dec
call
test
jecxz
xor
cmp
jne
cmp
jne
in
in
cmp
rclb
jge
call
add
jbe
jecxz
jnp
pop
jne
lret
mov
sahf
jne
mov
inc
cmp
mov
pop
cmovb
in
adc
mov
leave
jb
sbb
inc
leave
adc
ss
lret
test
adc
push
xchg
mov
dec
jbe
ret
or
sbb
push
pop
test
test
cmp
push
xlat
xlat
inc
lock
adc
inc
je
sub
fimuls
in
push
scas
or
nop
std
jne
ret
mov
pop
or
sub
test
inc
movsl
jge
sbb
cmp
jae
or
adc
stos
add
pop
and
push
das
inc
push
cmp
jbe
je
and
sub
jbe
pop
je
sub
sbb
and
add
adc
mov
and
push
jmp
or
mov
cwtl
addb
jmp
push
xchg
push
and
and
add
push
imul
cmp
aas
mov
jb
pop
clc
adcb
mov
aaa
cli
pushf
pop
in
and
add
cs
inc
cmp
fdivrs
in
jg
adc
enter
mov
in
pushf
cltd
mov
repz
sbb
cmpsb
xor
push
cld
loop
int3
inc
arpl
or
adc
faddl
and
sahf
daa
cmpsl
addl
cmp
pushf
mov
jnp
inc
jl
loope
mov
jbe
push
shll
sbb
and
data16
mov
push
inc
cld
or
cld
lods
jl
push
nop
shll
je
jmp
pop
popa
cltd
fs
sbb
mov
test
sbb
pushl
adc
rcrl
fildll
inc
and
xchg
in
sbb
or
add
mov
sbb
xor
mov
jmp
repz
dec
xor
and
pop
push
xchg
addl
mov
sub
movb
popa
lods
lods
lahf
mov
push
inc
cmp
enter
push
jno
add
mov
arpl
rclb
pop
cmp
loopne
push
inc
or
pop
jmp
sub
jo
int
xchg
cmc
inc
dec
int
movsb
out
adcl
add
xchg
add
mov
add
jo
jne
mov
jp
sub
or
movsl
mov
add
push
rclb
and
outsl
or
xchg
arpl
add
or
repz
test
mov
jecxz
popa
shll
lret
pop
adc
mov
add
inc
loopne
jae
sbbb
dec
dec
dec
cmp
push
dec
push
adc
mov
lock
adc
pop
xchg
jae
adc
adc
sbbb
and
aaa
cmp
pop
mov
sbb
loop
push
and
mov
cmp
imul
push
imul
pop
hlt
test
call
rcll
mov
outsb
enter
xor
cmpsl
push
jmp
lahf
and
adc
pop
shlb
push
iret
sbb
push
xchg
jge
pop
push
and
cmp
and
xchg
orl
repz
and
dec
adc
xor
pop
jb
mov
imul
add
addb
or
movsl
sti
cmp
pop
jno
pop
lods
mov
xchg
cmpsl
xchg
adc
mov
fnstcw
pop
aam
xor
adc
mov
add
or
mov
fnsave
clc
and
pop
cltd
xor
inc
pop
aam
inc
data16
or
nop
test
ret
xchg
adc
je
iret
push
outsl
loop
jp
insl
ficomps
cmpsl
std
loopne
add
loopne
insb
enter
das
ret
inc
mov
adc
or
sarb
and
jno
mov
jge
add
adc
mov
sbb
xor
test
jne
data16
mov
stc
or
bound
and
sbb
xor
xor
leave
es
test
jbe
jbe
inc
push
popl
shlb
sbb
sbb
add
rcr
or
adc
cwtl
add
jb
xchg
repnz
shrb
sbb
sub
cmp
nopl
leave
fwait
pop
rorb
sti
ds
sbb
mov
idivl
xor
clc
pop
dec
faddl
aaa
add
lret
mov
or
mov
inc
adcl
cmpb
fs
shll
inc
pop
adc
add
push
cmp
cmp
sub
and
mov
imul
jp
jb
cmc
or
or
mov
das
jmp
pop
push
or
fdivs
jae
add
test
mov
push
xchg
push
call
rclb
mov
popf
shr
cmp
into
xor
fstpl
pop
fiaddl
movsl
inc
xlat
sub
pop
in
jne
sub
inc
cwtl
loopne
rol
and
in
popf
add
and
jbe
rol
mov
jae
add
movsl
push
dec
cmpl
push
call
jmp
add
sub
call
and
sbb
mov
adc
mov
inc
xorb
out
adc
in
push
and
jge
shll
call
add
or
jmp
scas
jae
bound
mov
ja
dec
lds
xor
add
adc
test
jbe
call
shl
sub
sti
ret
js
pop
rolb
pop
and
dec
xchg
out
daa
in
and
dec
mov
xor
xor
xchg
jb
pop
aam
std
and
mov
mov
and
mov
push
adc
push
push
xor
scas
add
sub
rclb
and
enter
ljmp
out
lods
popf
adc
mov
pusha
jecxz
xchg
mov
push
push
and
sub
mov
mov
cmpl
mov
in
adc
push
push
add
cmp
in
pop
dec
ss
cltd
xor
cld
pop
adc
insl
fistpl
fnclex
ret
ret
mov
add
cmp
mov
ficoml
sbb
push
cmp
inc
add
cmp
inc
cmp
inc
mov
xchg
sbb
mov
movsl
iret
mov
mov
push
jl
xor
fnstcw
addw
inc
movsb
or
adc
jecxz
shl
jg
ds
adc
bsr
test
test
xor
push
sbbb
inc
fyl2x
dec
xor
sub
or
cmpsl
rcl
clc
cld
xchg
bound
sti
fcompl
nop
jmp
xchg
nop
ja
pushf
pop
aas
or
mov
or
inc
jmp
faddp
jns
jnp
push
lds
lock
pop
push
sub
and
or
add
xor
or
shlb
loopne
loop
cmp
inc
clc
inc
jne
jo
inc
je
int3
push
in
outsb
test
dec
dec
js
fnsave
ss
dec
in
aas
dec
pop
frstor
fldl
adc
popa
xor
adc
push
rcll
mov
enter
or
sbb
aam
mov
mov
pop
imull
cwtl
lods
fldt
das
cmp
xchg
fldz
and
cmp
imul
cmpsl
xchg
pop
fld1
daa
dec
or
xchg
mov
test
ljmp
adc
cmp
fcomp
pandn
cld
fwait
push
jne
fmull
lods
jge
shrl
fldenv
add
ret
insb
call
push
adc
inc
dec
mov
arpl
outsl
push
cmpsb
add
jnp
arpl
adc
cmp
test
rcrl
pop
sbb
aas
adc
jle
daa
mov
jbe
push
rolb
fiadds
push
inc
jl
push
fcompl
in
cmp
lcall
cld
or
mov
sbb
test
and
and
je
pop
xorb
push
xor
mov
imul
mov
inc
loope
sbbl
cmp
shl
xlat
mov
xchg
jne
jmp
pop
push
sbb
in
sar
aaa
fsubl
in
es
fadds
jo
repnz
inc
adc
int3
mov
mov
jo
fprem
xor
sahf
sbb
out
fstps
pop
add
lods
jecxz
mov
sub
adc
call
cli
repz
mov
je
inc
pushl
lods
pop
adc
lcall
pop
enter
jmp
and
and
es
pop
push
test
push
sub
pop
sub
or
fldl
xchg
pop
jmp
mov
cmpsl
or
cmp
pop
fcompl
lahf
push
jg
sub
ret
and
push
jge
and
xchg
popf
and
scas
sarb
fwait
mov
in
xlat
jbe
lds
jg
adc
inc
addb
call
or
shll
ret
mov
pop
dec
fcompl
sbb
cwtl
or
adc
jmp
push
cmc
xor
movsb
out
sbb
stc
pushf
in
imul
jne
idivl
push
or
sub
add
or
jne
cmp
push
loopne
subb
mov
cmc
mov
push
jle
push
mov
jo
adc
std
and
fstl
lret
add
jle
movsl
or
in
or
add
push
lock
fsubrs
push
push
and
dec
orb
pop
sub
or
gs
cmp
dec
sbb
movsl
cmpsb
sub
sub
sbb
sub
mov
rcr
shrl
push
sbb
cmpb
add
push
push
sub
add
es
cwtl
dec
sub
add
or
outsl
ljmp
enter
lds
lods
arpl
mov
jle
arpl
loopne
pop
pop
xchg
sbb
cmpsl
and
and
jmp
xor
std
insl
addr16
fs
push
pop
hlt
divb
or
mov
loopne
mov
add
cld
sbb
sub
cmp
xor
push
movlps
add
mov
ret
jno
pushf
hlt
adc
lret
jbe
nop
clc
cwtl
in
test
pop
in
enter
add
fbstp
out
dec
enter
repz
jo
jo
pop
jo
push
rclb
lock
clc
or
movsl
ljmp
orl
cmc
mov
pusha
push
push
hlt
clc
jo
mov
ja
and
insl
clc
rolb
fadds
xchg
aas
shrb
dec
sbb
out
call
or
dec
ret
sub
pop
jnp
fcomps
mov
imul
int3
sbb
mov
aad
mov
and
divps
xor
push
or
jo
les
fdivrp
or
adc
enter
jmp
and
or
add
add
icebp
in
imul
mov
xchg
rorb
pop
ja
ret
test
stos
sbb
jl
sbbb
dec
lret
jbe
mov
sub
or
add
add
into
call
jge
movsb
and
jl
dec
adc
insb
add
add
lock
xchg
subb
in
or
sbb
sub
rcl
mov
inc
sbb
jnp
cmc
jmp
add
dec
ja
push
xchg
lret
xor
add
pop
pop
add
cs
dec
clc
movsl
lret
mov
jl
add
fimull
dec
adc
pop
mov
cltd
inc
jl
fsubrl
push
adc
ret
popl
push
and
mov
shl
sbb
sub
inc
aaa
shll
mov
adc
ljmp
mov
pop
pop
pop
outsl
loopne
xlat
sbb
inc
mov
inc
add
movzbl
sbb
sub
in
xor
add
xor
es
in
jmp
xlat
adc
cmp
pushf
inc
add
outsl
fldl
dec
and
cltd
test
pop
pop
inc
pop
loope
int
aaa
inc
sub
push
fsubr
sub
pop
xor
xchg
add
subl
mov
filds
fwait
lea
popa
jmp
cmp
ret
jne
xchg
cmp
pop
ret
rolb
sbb
xor
in
xor
sub
adc
or
push
addb
pop
aaa
enter
les
imul
insl
sbbb
js
jo
fildl
rcrb
add
jo
and
sub
push
push
insl
mov
push
or
push
pop
pop
jmp
adcb
enter
clc
fcompl
push
mul
jp
or
cmp
fiadds
loopne
test
adc
add
pop
mov
push
mov
push
add
pop
insb
adc
daa
cmp
inc
xor
inc
dec
pop
cmpsb
fs
testb
push
fadds
or
push
nop
call
rol
ss
fs
push
push
ret
inc
dec
adc
pusha
dec
push
push
sarl
mov
mov
jo
push
fld
dec
in
adc
pop
mov
mov
sub
int
inc
or
daa
pop
push
rorl
cmpsl
or
repnz
arpl
iret
sub
fdivrs
or
hlt
lea
clc
xor
or
add
push
adc
xorb
dec
je
sub
push
call
cltd
imul
sub
stos
addb
add
clc
push
sbb
push
sub
mov
out
shr
sbb
test
or
push
add
clc
mov
in
jmp
jbe
mov
and
mov
outsl
mov
mov
jb
imul
loopne
ficoml
ds
xor
adc
add
mov
out
or
jmp
or
xchg
or
mov
jns
adc
sub
dec
test
pop
pop
jecxz
xor
and
loop
sub
sub
ss
inc
mov
pop
pop
or
inc
movsb
mov
je
scas
movsb
sbb
cmpl
dec
fwait
xchg
lods
fldt
jne
inc
inc
add
pop
popa
sub
ja
adc
shr
inc
push
xor
sbb
ffreep
shr
rcr
shr
rcr
or
sbb
lock
lahf
sub
test
mov
jb
cmp
std
decb
or
cmp
add
mov
dec
dec
fadds
xor
sbb
mov
test
ja
sbb
mov
cmpsb
shl
sbb
sahf
inc
pop
pop
pop
pop
add
ret
adc
push
dec
jns
jmp
xchg
aad
and
popa
enter
lods
mov
rcrl
push
fcompp
pusha
push
and
adc
push
or
sbb
jnp
lcall
fstpl
push
jle
mov
addb
nop
addb
mov
pop
je
stc
lret
movsl
test
dec
add
cwtl
repz
push
sbb
mov
faddl
add
test
scas
repnz
test
push
sub
es
push
adc
and
mov
and
xchg
cmpsb
movsb
pop
or
lods
adc
xlat
mov
dec
xchg
add
add
inc
inc
inc
inc
jg
iret
repz
or
push
je
fs
push
fimuls
inc
mov
sbb
sahf
out
call
out
sahf
out
hlt
clc
clc
cld
xor
xor
sbb
mov
adc
loope
push
mov
shlb
jbe
nop
cmp
fildl
inc
cmp
adc
lea
dec
outsb
mov
jmp
sub
out
xor
neg
fimuls
xor
stc
sub
xor
repz
inc
pop
nop
dec
push
push
xchg
je
xor
dec
mov
lods
mov
cmpsb
and
xchg
aas
inc
out
add
add
pop
mov
dec
push
jne
cwtl
ss
add
pop
iret
jnp
jnp
mov
in
push
hlt
cld
das
ds
cmp
adc
cmc
das
sbb
iret
repz
sbb
adc
repz
repz
or
or
add
aas
push
icebp
jns
inc
or
pop
insb
cmc
das
loop
imul
push
inc
pusha
mov
daa
outsl
add
fcoml
lcall
sub
xchg
les
adc
add
sub
dec
inc
or
mov
inc
test
ja
andb
dec
sub
lods
adc
dec
sbb
repnz
mov
xchg
cmp
sbb
or
orl
les
adc
or
push
push
xor
in
in
rorl
or
or
jae
popf
cmovle
out
xchg
mov
inc
dec
mov
inc
adc
fstpl
xlat
or
jmp
push
sub
into
mov
push
cmp
adc
pop
sbb
dec
xchg
sahf
sub
add
cli
jbe
add
add
push
es
lret
add
les
mov
add
adc
lock
dec
inc
ficoms
jb
mov
adc
cmp
jae
or
jae
shrd
es
aas
loopne
ljmp
call
adc
push
ficoml
inc
int3
pop
pop
sub
adc
test
pop
mov
and
call
inc
pop
xchg
dec
jae
adc
je
mov
mov
test
das
jae
mov
add
jne
out
mov
or
cmp
test
and
call
test
mov
ret
push
loope
adc
js
les
jmp
daa
add
pop
mov
jo
pusha
aaa
sbb
out
inc
test
xchg
cmp
mov
loope
or
jp
xor
xchg
mov
xchg
pop
data16
jne
jmp
clc
imul
dec
les
sub
pop
idivb
cmp
pop
cmp
jecxz
je
inc
cmp
dec
push
adc
add
je
jne
lea
insb
xor
inc
jnp
push
aam
mov
adc
fcmovu
scas
pop
mov
inc
or
add
xor
adc
fidivs
test
nop
mov
call
mov
popf
testb
jb
sbb
adc
add
cmpsl
pop
or
addl
or
pusha
jne
inc
sub
nop
inc
mov
inc
add
loopne
icebp
mov
push
dec
cmp
out
pop
mov
cmc
arpl
pop
es
mov
movsb
stos
adc
cmp
push
pop
jmp
arpl
nop
cltd
or
leave
jg
mov
dec
xchg
jo
hlt
xchg
aam
in
cmpsb
outsl
out
fs
fsubrs
jno
movsl
ljmp
mov
cmp
xor
xor
cmp
insb
shrl
jle
loope
jnp
andb
mov
ja
and
xchg
mov
cmp
adc
pop
jne
fiadds
dec
sbb
adc
sbb
fcomps
sbb
data16
pusha
js
inc
push
insl
pusha
jmp
inc
adc
loope
xchg
inc
loopne
pusha
jae
pop
mov
sub
ja
andl
mov
lock
push
jne
push
push
mov
mov
add
and
shrb
xchg
shlb
pop
mov
js
and
insl
sbb
jne
pop
in
xor
jge
pop
mov
and
and
mov
adc
add
sub
fistpl
inc
in
lcall
mov
std
sub
jbe
cmp
ljmp
adc
push
incb
pop
jle
dec
or
add
inc
push
outsb
sub
mov
orl
mov
cli
jo
jl
pop
xchg
pop
jle
stos
cmc
sbb
inc
pop
jg
add
scas
xchg
mov
pop
add
cmp
sub
fiadds
test
ret
clc
push
rcrl
in
pop
es
or
cmp
jnp
or
fbld
adc
adc
add
jnp
clc
arpl
mov
adc
or
lcall
cmp
loope
outsl
pop
push
imul
adc
xor
sub
xchg
jmp
popa
sub
fstps
xchg
xchg
stos
add
add
aas
xor
xor
in
in
movsb
mov
add
dec
ret
pop
pop
dec
jo
test
pop
aam
sbb
frstor
push
xor
adc
imul
sub
dec
adc
clc
popa
jl
clc
jp
push
sub
mov
add
scas
push
push
dec
push
mov
out
mov
and
js
adc
lret
adc
out
sbb
jno,pt
adc
push
popa
cs
out
or
mov
cmp
cli
inc
nop
loopne
mov
lock
nop
in
jge
test
xchg
jge
push
lret
cmp
push
test
add
imul
adc
or
testb
pop
adc
andb
mov
mov
xor
sbb
movsb
dec
data16
loopne
dec
mov
outsl
add
fidivs
inc
push
cmp
jl
push
pop
and
jmp
loopne
push
or
push
rcrl
jbe
add
loopne
adc
ret
jno
pop
incb
pop
enter
cmp
je
mov
test
inc
or
adc
push
cmc
fmull
and
jne
popa
jg
sub
in
sub
hlt
sbb
mov
les
data16
not
inc
shll
fucomip
mov
push
or
lcall
push
or
lret
push
packuswb
jo
in
dec
das
sbb
push
ret
cli
sub
dec
fdivr
mov
clc
pop
cmp
je
cmp
ja
push
pop
add
or
push
dec
inc
je
dec
cmp
dec
shrb
inc
cmp
out
cmp
sbb
or
push
movsb
lcall
inc
inc
bound
lea
lea
ss
push
cmp
shlb
rolb
or
fnstenv
push
loope
jne
or
push
push
jecxz
push
adc
add
insl
rcrl
inc
add
loope
icebp
jle
xor
xor
loope
jne
and
dec
mov
ret
les
adc
lods
test
cs
inc
cld
cmp
je
outsb
insb
fdivl
out
sahf
daa
add
and
faddl
jns
add
aam
xchg
pop
arpl
outsb
or
nop
jbe
sbb
fildll
enter
inc
neg
dec
add
std
adc
pop
je
shlb
in
cld
ret
sub
in
jmp
pop
sub
lods
xor
mov
ret
testb
inc
add
cli
xchg
movl
jno
out
cmp
or
sbb
icebp
inc
jne
out
imul
cltd
test
gs
mov
add
sub
pushf
jb
mov
and
pop
stos
push
inc
push
pop
lret
lea
push
rep
test
mov
imul
iret
inc
shl
sub
mov
lea
sbb
in
push
xchg
hlt
sbb
testb
dec
dec
bound
xor
shl
jmp
dec
xor
lcall
mov
mov
inc
push
dec
pop
shl
dec
or
out
shll
and
inc
xchg
mov
push
test
mov
lahf
ret
insb
lods
lods
and
mov
jp
jp
rorb
movsb
shll
ret
adc
and
push
out
js
dec
je
arpl
fidivl
sub
or
add
sub
fdivl
jmp
pop
sub
sub
xor
notb
xchg
cmpsb
xchg
stos
fwait
xchg
sub
jp
cld
push
and
jmp
sbb
and
adc
cmp
and
jno
xor
xchg
xor
mov
mov
xor
and
mov
movl
or
mov
cmp
mov
les
or
shr
inc
inc
push
scas
cmp
repnz
scas
inc
int
push
dec
or
sbb
and
inc
jecxz
adc
pop
enter
dec
jp,pt
xorb
mov
addl
test
push
sub
loope
insb
out
cmp
dec
outsl
pop
xchg
test
xchg
add
sbb
lea
fcmovb
cli
or
subl
jo
or
lock
and
push
mov
jbe
addr16
les
decb
rorb
mov
mov
lahf
sarb
adc
mov
jmp
popf
and
mov
fidivrl
add
test
push
adc
adc
shlb
pop
sbb
pop
inc
xchg
popf
jne
cmpsl
out
jne
push
inc
fidivl
lock
or
inc
andb
jle
je
loopne
cmp
sub
mov
push
and
bound
mov
cli
sbbl
xor
push
aam
mov
mov
or
dec
fwait
jg
mov
clc
les
inc
cmp
sbb
and
add
fiadds
pusha
sbb
fimull
mov
inc
js
add
inc
loop
pop
add
jmp
es
popa
movl
insl
out
into
daa
or
fadds
mov
cmp
stos
cmp
sub
dec
mov
jmp
notl
cmp
sub
addr16
inc
mov
loopne
cmp
ljmp
sahf
rol
sbb
sbb
in
sub
out
and
adc
scas
cmp
adc
adc
mov
lea
es
arpl
je
dec
movsb
sbb
adc
add
xchg
testl
inc
fdivs
adc
mov
cld
pushf
dec
movsl
rorb
cli
clc
div
lods
lods
pop
inc
mov
rorb
or
cmpsb
hlt
mov
mov
cmp
jne
or
and
add
out
testl
push
or
fiaddl
mov
loopne
xchg
jecxz
rorb
fsubr
ret
and
xor
test
push
mov
andb
shlb
jmp
cmp
fnstsw
cmp
jb
lea
bound
insb
fsub
push
js
lret
movsl
mov
subl
ds
push
mov
bound
nop
fldcw
and
mov
adc
ror
jae
mul
mov
jne
add
arpl
sbb
xchg
jnp
cmp
iret
xchg
push
push
xchg
or
mov
jbe
add
cmp
sti
xor
jbe
rcrl
mov
lcall
enter
mov
imul
call
cmp
mov
faddp
jmp
fs
xchg
js
pop
popf
pushf
mov
clc
rolb
cmp
sub
les
int3
sub
inc
xchg
sbb
sbb
mov
int3
push
sbbl
xchg
cmp
push
jmp
mov
andl
jne
lods
je
movsl
jecxz
or
push
popf
lahf
fwait
je
lret
mov
push
imul
cmp
outsb
inc
cli
lahf
int3
push
inc
xor
pop
inc
xor
out
pop
sbbb
inc
cmp
sub
or
mov
cmp
je
insb
jnp
mov
sbb
dec
nop
cmpl
inc
fldl
adc
push
push
pop
pop
subb
push
loope
push
or
ret
insb
jp
mov
and
lds
stos
or
or
lods
test
xor
xor
jmp
mov
in
mov
pop
sub
xor
and
push
cwtl
xor
dec
xor
jne
xor
pop
mov
movlhps
rep
mov
cld
add
and
xor
and
out
inc
call
add
jo
pop
push
aam
and
inc
bts
jmp
movsl
nop
inc
jo
int
mov
sub
mov
cmp
arpl
inc
aaa
push
rcrb
dec
push
mov
fisttpl
inc
mov
insb
std
xor
inc
or
and
jo
jecxz
or
sbb
add
mov
mov
data16
iret
or
or
rolb
cwtl
outsb
sub
push
sub
jns
or
add
sub
nop
bound
idivb
jg
out
sar
mov
mov
and
or
or
lahf
gs
enter
pop
mov
test
adc
movsb
popf
push
xchg
adc
nop
push
nop
xchg
ret
lock
fists
or
xorb
les
rclb
pusha
in
push
xchg
imul
clc
sbb
roll
cs
push
mov
sbb
je
or
jge
dec
jmp
jo
je
sbb
add
mov
adc
xchg
push
and
fisttps
scas
repnz
int
cmp
cwtl
nop
push
sbb
faddl
mov
jnp
add
fistpll
fisttps
pop
sbbb
jg
or
out
sahf
out
fs
push
dec
inc
adc
cwtl
cmp
repz
loope
push
lods
sarb
add
and
inc
mov
cmova
xor
pop
loopne
mov
cmp
pop
push
sbb
xor
push
fbld
jns
mov
push
in
hlt
adc
negb
push
fistpll
xchg
xor
cmp
dec
add
add
pop
fists
mov
cmp
mov
data16
hlt
mov
dec
mov
adcb
sbb
lea
push
ret
cmp
cmpsl
cmp
adc
jbe
aaa
add
shrb
mov
mov
imul
sub
jnp
and
sbb
or
mov
lcall
insl
movsl
adc
jmp
pop
pop
jmp
sbb
push
test
subb
arpl
inc
mov
adc
adc
insb
loop
dec
fidivl
insb
cli
mov
ss
je
inc
rcrl
xchg
cli
jne
mov
out
or
ret
xchg
xchg
or
repz
stos
je
inc
dec
push
loope
aaa
add
mov
push
ljmp
inc
sub
xor
test
lret
je
in
cli
sbb
pop
mov
idivl
pop
in
xchg
dec
adc
xchg
dec
xor
inc
rcl
je
cmp
add
cmp
je
add
sub
or
cmp
pusha
jne
daa
inc
sbb
or
xchg
mov
pop
sub
pop
orb
outsl
push
add
or
mov
int3
sub
ja
inc
leave
addb
test
xorl
loope
stos
sbb
adc
stos
adc
in
cld
stc
dec
xchg
add
or
or
push
add
aam
pop
hlt
sub
add
xlat
sbb
test
out
lret
mov
jne
inc
inc
dec
push
jne
dec
adc
mov
adc
test
add
lods
or
jg
gs
xor
mov
repz
lock
test
nop
repnz
cld
dec
inc
xor
hlt
adc
cmc
dec
jo
test
nop
sbb
popf
js
xchg
mov
inc
push
aaa
adc
cmp
jne
sbb
out
jne
or
call
les
int
mov
jne
push
push
push
push
and
mov
or
fists
pop
sbb
sub
je
xchg
xchg
jno
sbb
adc
dec
dec
and
nop
sbb
adc
pop
sbb
incb
push
sub
xchg
inc
xchg
icebp
pop
pop
push
shl
xchg
mov
xor
sub
inc
sub
jg
jle
pop
push
sarl
lret
cmp
pop
cmp
and
sub
mov
inc
sbb
movsb
and
mov
add
movaps
mov
test
sub
add
push
sub
stos
xor
int3
insl
and
xlat
xchg
cmp
pop
cltd
sbb
dec
mov
inc
add
or
dec
fiaddl
es
sub
inc
add
adc
popf
cmp
add
or
push
add
clc
pop
inc
or
inc
mov
jbe
orb
cs
stos
ss
jbe
roll
rol
push
inc
adc
mov
or
sbb
les
movsl
test
pop
inc
mov
fdivrl
adc
dec
sbb
add
or
ret
ljmp
adc
dec
pop
daa
test
cli
mov
lcall
jp
inc
les
add
add
sub
jne
rolb
mov
cmp
cmp
sbb
ja
mov
sub
and
loop
jne
adc
or
imulw
loop
add
decl
push
pop
sbb
andl
sti
sbb
or
add
sbb
cwtl
xor
mov
pop
jecxz
rcrb
repnz
rclb
mov
pusha
bound
push
jbe
push
pusha
add
mov
inc
cmp
movsbl
ja
mov
jg
movsl
mov
enter
adc
adc
push
or
je
sbb
nop
loop
out
or
cmp
orb
or
push
pop
mov
jle
aam
pop
sbb
pop
cwtl
ret
sahf
cmp
ror
jle
test
xor
filds
sbb
pop
sbb
pushf
inc
mov
enter
roll
pop
xchg
cmpsb
or
pop
in
sti
pop
mov
je
add
xchg
add
push
cwtl
push
cmp
pop
ret
or
or
ja
loopne
mov
mulb
push
nop
or
icebp
lcall
ss
je
test
or
shld
push
pop
jmp
fidivs
cmp
mov
push
cmpsb
xor
sub
popf
add
or
clc
sbb
leave
lods
add
push
fsts
xor
nop
insl
adc
add
shll
mov
lcall
dec
and
inc
push
jg
sarl
rolb
data16
mov
jge
and
arpl
cmp
push
mov
cli
add
xor
pop
cmp
sbb
dec
xchg
dec
sarl
cmp
sub
add
or
jo
imul
sub
shrl
sub
les
fisttpll
sub
inc
and
adc
es
mov
sub
pop
add
cmp
push
inc
test
push
xor
xor
sbb
cmp
pop
lcall
in
mov
jl
or
xchg
jno
mov
adc
mov
ds
rol
xchg
pop
push
outsb
jmp
cmp
pop
clc
mov
in
orb
cmp
ss
cmpsl
sbb
popf
cmpsb
cmpsb
jge
or
loop
xor
cmp
orl
mov
nop
jno
or
ret
cltd
adc
mov
sbb
dec
fcmovbe
fnstsw
add
fstpl
in
push
sub
cld
adc
sub
jl
pop
les
imul
adc
add
mov
ret
fstp
cmovns
lock
pop
js
mov
dec
xor
dec
sub
push
and
cmpb
push
aaa
enter
int3
sbb
and
mov
mov
or
pop
icebp
pop
sbb
clc
jnp
or
or
cmp
je
movsbl
lods
frstor
aaa
or
adc
shlb
xchg
push
jne
xor
sbb
cmp
sbb
or
sbb
sub
or
add
cld
inc
call
seto
ficoms
or
cmp
loope
mov
inc
mov
and
das
or
bound
mull
gs
dec
push
test
stos
inc
push
adc
push
pop
pusha
add
cltd
fsubrs
sub
aas
sub
jo
dec
add
es
and
imul
sub
and
btr
xor
loope
pusha
mov
out
jmp
inc
mov
push
pop
cmpsl
add
cmpsb
fs
add
popa
fs
mov
add
sub
out
mov
nop
mov
popf
xchg
inc
inc
pop
jns
add
aas
cmp
sub
inc
xchg
in
cmp
das
int
in
jbe
mov
sbb
xorl
xchg
cli
push
mov
inc
push
cs
pop
xchg
rcll
bound
jns
jge
jns
imul
inc
jl
jmp
sbb
jns
jo
push
jmp
cmp
or
jmp
dec
and
jne
pop
ss
push
js
and
adc
adc
movsl
inc
xlat
fucomi
inc
sbb
iret
push
ss
daa
lret
mov
jecxz
push
addr16
clc
and
and
push
repnz
xor
jmp
push
dec
out
xchg
lods
sub
test
nop
cltd
xchg
xor
int3
addr16
outsb
je
aaa
and
adc
cmp
pop
push
cmp
jo
sub
adc
sbb
xor
test
sarb
fistps
es
in
pop
push
push
push
adc
xchg
push
insl
jmp
rclb
inc
imul
mov
fistl
push
xor
adc
movsl
adc
cwtl
adc
jnp
jae
loope
aam
inc
dec
inc
rcrl
push
dec
mul
jbe
adc
mov
add
loopne
inc
jnp
xor
in
stos
push
or
adc
loopne
adc
in
xlat
sub
adc
sub
add
rcr
les
in
adc
rcrl
xor
xor
rol
pop
mov
clc
push
mov
cmpsb
add
js
test
aaa
adc
or
and
jne
jmp
sub
dec
mov
add
mov
clc
rcrl
in
add
mov
inc
or
or
cld
push
or
stc
and
pusha
loopne
xchg
pop
adc
popa
or
push
and
lcall
or
sbb
push
xor
lods
pushf
mov
mov
or
add
push
sub
popa
mov
mov
shlb
inc
pushf
shrb
ja,pt
inc
xchg
sub
sub
ret
in
mov
inc
jmp
cmp
mov
dec
adc
mov
sub
and
adc
and
mov
in
gs
adcb
sti
mov
jge
dec
dec
and
xor
icebp
sub
adc
xor
and
or
sarb
cltd
out
fildl
aas
add
enter
pop
add
in
sbb
cmpsb
sub
bound
or
mov
in
sub
loopne
or
mov
out
push
and
push
dec
ret
adc
lods
ret
orb
data16
cmp
jae
mov
clc
fidivrl
hlt
jb
push
popa
test
lret
mov
sub
test
outsl
jb
aaa
mov
xchg
mov
fnsave
cmp
push
jno
outsl
shr
cld
add
dec
test
mov
push
adc
rolb
add
xor
mov
mov
xchg
jbe
and
call
push
and
mov
mov
sub
cmpsb
insl
push
in
mov
add
mov
xor
mov
lret
push
push
nop
mov
fnstenv
add
aam
call
or
mov
xor
cmp
inc
push
bound
lock
jb
inc
jo
testb
and
sbb
adc
idivl
mov
add
cmp
mov
ja
pop
or
shll
rclb
aaa
and
inc
aaa
or
cs
dec
je
daa
movsb
enter
leave
xchg
mov
ja
out
xor
mov
jle
push
push
push
mov
pop
ret
adc
sub
jge
xchg
out
sub
mov
adc
in
cs
add
mov
mov
enter
add
dec
fstl
cmp
hlt
test
and
jp
push
adc
dec
rcrb
jmp
leave
sbb
sub
mov
and
push
cmpb
mov
ret
enter
outsl
leave
xchg
rorb
in
add
in
nop
sbb
imul
cmp
add
nop
or
sbb
sub
cmp
test
xchg
sarb
or
and
jae
es
fiaddl
mov
ror
xor
pop
xchg
rcrb
sub
and
dec
mov
add
mov
loope
lods
aam
ljmp
adc
mov
nop
rorb
push
jle
adc
push
cmpl
das
sub
push
mov
inc
sti
xchg
push
insb
mov
inc
lret
push
xchg
fcmovbe
imul
add
aas
or
xorb
int
and
jl
sub
inc
or
mov
add
pop
add
js
push
pop
mov
jae
test
cmpb
mov
push
inc
push
push
repnz
fs
or
daa
cmp
mov
cmp
jge
clc
in
mov
and
push
adc
sub
lret
rcr
or
xchg
or
push
daa
and
pop
push
pusha
adc
out
push
mov
mov
popf
popf
fwait
or
icebp
pushl
and
test
andl
or
jo
sarl
pop
sbb
push
inc
sbb
cmp
mov
mul
or
ds
test
jns
sbb
out
cmp
je
sbb
push
mov
out
sbbb
rolb
push
and
or
and
mov
andb
in
xlat
pop
xchg
and
xchg
notl
dec
mov
lea
mov
test
or
decb
incl
ficoms
jb
pop
xchg
out
sub
mov
inc
lods
lahf
sbb
sahf
add
lea
and
icebp
mov
je
sub
and
imul
xor
in
cmc
push
cld
mov
inc
es
inc
inc
loop
les
jle
dec
ret
jo
jl
push
add
shll
jg
lahf
loope
rorl
lea
movsl
movsl
mov
rcrl
sahf
push
cmpb
orl
inc
or
imul
cmc
push
push
jno
mov
scas
jmp
and
lahf
cwtl
cmpsb
xchg
stos
add
cmp
fs
minps
test
add
js
cmp
insb
sbbb
pop
dec
and
push
pop
rclb
stos
and
and
das
adc
pop
cmp
nop
js
imul
ljmp
je
or
lahf
jne
mov
movsl
repnz
or
push
jecxz
jl
mov
cmpl
sbb
lret
sahf
pop
pop
xor
scas
nop
jecxz
pop
sub
test
adc
mov
divl
inc
inc
ljmp
movb
and
aaa
push
inc
repz
jo
add
sbb
xchg
pop
add
sub
sub
inc
cwtl
push
or
sbb
rcrb
pop
xchg
pusha
adc
cli
adc
or
inc
std
cmp
mov
inc
inc
cld
mov
mov
pop
xor
in
mov
mov
push
pop
adc
xchg
add
sbb
aas
cmpsb
xchg
mov
jecxz
cld
loopne
mov
add
xchg
sub
jb
mov
ret
inc
fs
enter
not
mov
das
in
outsl
pop
mov
push
popf
cmp
and
loopne
xchg
mov
pop
mov
pop
inc
cmp
sbb
clc
and
jle
or
pop
test
mov
mov
sahf
rorb
loopne
add
aaa
subl
orl
cmp
bound
sbb
add
add
je
cmc
mov
testb
ret
xor
push
pop
cmp
push
jmp
add
std
loope
idivl
add
mov
xor
rorl
lea
sbb
and
add
ficoml
mov
jne
xor
lea
push
shll
rol
js
dec
jo
orb
and
lods
sbb
or
push
cmp
mov
mov
test
dec
orl
stos
add
les
xchg
sub
or
mov
fcomps
dec
adc
sub
mov
mov
test
data16
daa
or
test
or
mov
and
push
push
ja
pop
add
push
pop
test
add
std
or
test
hlt
jb
or
lret
jmp
jle
and
mov
jecxz
pop
and
inc
dec
loopne
out
pop
sub
fbstp
negb
loope
or
inc
fadds
adc
mov
or
js
insl
in
js
xor
xor
sub
inc
dec
xor
add
push
mov
or
sbb
sbb
sti
mov
loop
xor
cmp
mov
push
add
in
lret
cmp
jl
adc
pop
ret
je
gs
in
jae
dec
les
sub
mov
data16
push
sbb
shlb
jmp
pop
mov
pop
xor
add
cltd
cmp
ds
add
cmp
stos
aam
jb
out
sbb
fwait
shl
mov
shr
adc
leave
data16
pop
push
push
and
lock
inc
mov
and
js
and
or
lock
test
pop
enter
bound
cs
add
inc
xchg
inc
cwtl
or
fstpt
scas
test
or
aas
add
push
adc
mov
jle
outsb
and
adcb
add
inc
add
and
add
mov
dec
popa
hlt
pop
lea
inc
out
sbb
lret
pop
orl
sbbl
test
cmp
sbbb
popl
add
push
pop
mov
sbb
mov
lock
mov
sbb
inc
push
stos
mov
mov
or
jo
loopne
cmp
mov
cmpsl
mov
arpl
cmp
ret
insl
mov
cmp
add
push
es
sbb
jle
add
xor
cmp
cmp
sbb
jg
sub
cmc
orl
out
inc
loope
mov
and
popa
push
imul
push
ds
pop
out
add
inc
or
push
or
push
mov
and
aad
push
jmp
sbb
push
adc
inc
int3
dec
mov
movsb
cmp
je
inc
inc
lea
mov
add
xchg
jb
jo
add
dec
pop
adcb
aam
push
push
ret
call
xchg
and
cmp
lahf
jp
dec
cs
push
pushl
scas
cmp
push
outsb
pop
add
outsb
jne
pop
decl
add
sbb
pop
lcall
shrl
adc
and
es
push
push
movsl
push
loopne
test
mov
xchg
test
out
mov
and
aas
and
or
or
sti
mov
test
inc
repz
or
or
mov
or
cmp
loopne
mov
mov
add
sbb
sbb
and
xor
adc
sub
js
or
cmp
sub
test
push
dec
xchg
mov
inc
add
jnp
pop
aad
into
sbb
imul
mov
inc
cmp
repz
pop
jb
testb
lret
or
fisttpl
adc
jne
jl
dec
bound
mov
xchg
stos
adc
add
xchg
test
mov
cmpsb
dec
sub
add
or
or
pop
jne
inc
xchg
mull
outsb
nop
sub
mov
xchg
fimull
sbb
inc
jg
scas
add
sbb
add
shr
mov
aam
adc
push
pop
inc
add
add
push
aas
movsb
dec
jp
or
lock
cs
sbb
push
scas
popa
xchg
aaa
jno
in
sub
inc
call
pop
jl
ret
add
jmp
sbb
ds
mov
xchg
jge
scas
push
sub
or
or
or
popa
js
xchg
testb
xor
add
dec
cld
lods
add
and
adc
add
xor
in
cmp
out
aam
imul
mov
mov
xor
sar
sbb
and
push
pop
dec
aas
gs
xorb
mov
sub
cmp
imul
xchg
push
push
jmp
dec
fisttpl
xchg
add
adc
ret
pusha
and
jmp
push
dec
dec
or
dec
arpl
mov
pop
mov
out
inc
mov
movl
push
popf
mov
je
or
jp
cli
mov
pop
mov
mov
leave
adc
xor
jns
jno
push
in
sbb
test
push
out
sbb
push
and
outsb
mov
jo
mov
inc
add
and
sbb
xor
aas
jmp
sarb
adc
rolb
and
push
mov
inc
cmp
cmp
add
or
movsb
daa
or
pop
repz
sbbl
mov
pusha
or
ss
pusha
inc
mov
add
roll
or
jl
xchg
popa
cmp
push
adc
dec
scas
push
test
add
orl
push
repz
mov
stc
jge
and
and
add
or
enter
jne
call
or
inc
pop
cmp
lcall
jne
test
sbb
fdiv
pop
dec
sbb
pop
sub
mov
push
js
and
fadds
pop
push
loope
or
loop
or
leave
push
orb
repz
movsl
movntps
movsb
adc
addb
sbb
test
mov
cmp
add
aam
dec
and
adc
pop
mov
imul
jo
fmulp
and
in
inc
lods
push
imul
mov
dec
sbb
push
xor
xor
dec
or
or
push
push
lea
nop
or
xor
aas
fldenv
sbb
sbb
adc
inc
push
gs
xchg
add
addl
mov
adc
cmp
mov
jg
add
mov
mov
mov
mov
jge
sub
jp
sub
shrb
cwtl
loop
lar
rcrl
adcl
adc
jns
or
mov
subl
push
push
test
repnz
xchg
mov
lea
inc
cmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
subl
enter
loop
or
ret
in
jmp
push
cmp
sub
lea
adc
test
scas
adc
sub
adc
je
enter
scas
jp
cmpb
into
mov
jmp
repnz
loopne
or
mov
rol
and
sbb
adc
out
adc
push
pop
or
add
jo
loopne
lock
mov
cwtl
je
arpl
mov
clc
sbb
shl
xchg
je
xor
sbb
outsb
jae
jo
push
std
js
sub
and
mov
adc
or
clc
add
push
mov
popa
jae
cmc
ljmp
pop
xchg
cmp
clc
xor
sub
mov
or
inc
in
inc
xor
addb
xchg
xor
arpl
mov
sti
pop
lcall
jmp
and
test
fs
pusha
adc
cwtl
and
or
push
inc
and
idivb
push
mov
fidivs
xor
aad
iret
dec
sbb
add
push
in
out
cmp
stos
pusha
ljmp
push
sbb
into
mov
mov
sub
in
and
sbbb
cmc
sub
jmp
orb
les
mov
adc
cltd
loopnew
int3
add
or
int
loopne
sbb
add
loopne
xchg
add
dec
loopne
xchg
sbb
adc
into
iret
arpl
fildll
or
xor
push
aaa
lret
push
imul
sub
add
fisttpl
addl
push
imul
aaa
adc
inc
pop
aam
or
inc
mov
mov
mov
adc
mov
push
mov
je
or
or
hlt
and
sub
or
or
fildll
cmpb
je
cmp
dec
add
dec
andb
push
inc
fmull
add
jb
cmpsl
cmc
dec
and
and
jecxz
sbb
aaa
xor
xabort
rorb
fdivr
and
mov
jae
subl
ds
jle
push
or
mov
daa
test
repnz
inc
adc
sub
adc
lahf
sarl
cmp
push
push
aam
adc
and
dec
mov
scas
pop
cmp
inc
cltd
pusha
xchg
or
inc
shll
jle
mov
or
pop
xor
shll
push
movb
inc
mov
insb
inc
add
rcl
loopne
push
nop
loopne
push
push
or
xchg
adc
adc
enter
xor
movb
loopne
mov
and
int
dec
jns
neg
movb
ret
and
adc
adc
fisubrl
or
xchg
mov
inc
cwtl
push
jnp
inc
hlt
out
inc
add
xor
das
pop
sub
rcll
cmp
xchg
xchg
and
roll
sub
lret
ljmp
mov
cmp
sti
add
pusha
fwait
mov
push
insl
or
adc
add
mov
pop
pop
test
inc
stos
movsb
mov
leave
add
pop
push
mov
dec
or
loopne
or
xor
test
dec
lea
ja
push
push
add
mov
push
repz
loop
and
pusha
test
sbbb
sub
call
sub
jne
and
pop
dec
test
sub
enter
adc
test
ret
insb
or
xor
sub
data16
dec
imul
add
or
je
sub
xor
adc
ljmp
push
pop
sub
xchg
ds
loop
add
cltd
decb
in
jne
fxch
fyl2x
jmp
and
in
fldl2e
sub
clc
leave
jo
sbb
call
add
inc
inc
sbb
ficomps
addl
sub
xchg
es
addb
les
insb
mov
mov
not
mov
xlat
add
or
or
lods
adc
sbb
fldln2
inc
in
fstpl
mov
add
shlb
ret
inc
inc
jmp
je
pop
ret
or
push
pop
in
cmp
sbb
xchg
rcrb
push
fldz
xchg
sub
in
in
jmp
or
cmp
or
ja
adc
in
xchg
add
popa
or
cmp
add
outsb
fcompp
sub
cmp
fisttpl
add
or
sbb
mov
rcll
hlt
add
je
inc
roll
icebp
push
sbb
hlt
or
jge
adcb
frstor
loopne
lods
and
push
je
push
test
pop
xchg
lds
and
mov
popf
xor
iret
add
jmp
push
inc
add
mov
push
pop
sub
push
mov
pmulhw
xor
add
loope
movsb
pop
loopne
stc
rol
shll
dec
and
jb
add
xchg
xor
jmp
int
jg
adc
std
and
insb
scas
loopne
rol
mov
mov
or
in
or
add
xor
sub
lahf
mov
adc
imulb
mov
fstpt
or
clc
sbb
je
aad
pop
add
add
mov
sbb
pop
pushf
test
cmpb
inc
nop
fldl
cld
add
sub
dec
lahf
les
xor
andb
into
jmp
inc
mov
icebp
popa
loopne
adc
rolb
aad
mov
xlat
push
out
movsb
into
adc
or
adc
js
fldcw
movsl
cmp
fsub
mov
loopne
push
or
or
arpl
jp
ror
sub
dec
inc
in
push
fldcw
jb
and
sbb
pop
fs
jnp
or
mov
xlat
test
and
or
stos
jg
push
sbb
or
movsb
enter
or
and
or
fldt
jne
cs
sub
xchg
and
outsb
cmp
jl
and
andb
push
data16
imul
or
loope
add
divl
cmp
cmp
mov
test
daa
je
xlat
pop
mov
xor
lret
and
cmp
je
jo
movsb
fstpt
dec
add
bound
sbb
mov
and
jae
pop
and
in
mov
loopne
dec
repz
push
xchg
insl
test
push
pop
mov
dec
jae
sarb
mov
inc
adc
xor
push
adc
mov
push
ja
sbb
test
loope
or
push
fisubrl
jp
mov
dec
jo
push
inc
sub
jmp
rclb
scas
xor
xchg
ja
mov
mov
fsubr
ja
jae
loopne
gs
jecxz
jne
ss
rcrb
sarl
inc
jmp
lahf
dec
lcall
dec
out
fwait
and
sahf
cwtl
rcl
outsl
maxps
push
xlat
dec
pop
test
pop
jne
and
cmp
xor
inc
inc
sub
push
inc
add
add
aad
leave
dec
xchg
setno
sub
cmp
or
or
or
adc
sahf
cli
add
insb
int
in
and
fabs
push
add
and
dec
lock
pop
jns
je
mov
xor
or
test
and
gs
push
jge
xchg
loope
jae
cmp
fxch
fsubs
mov
xchg
add
sub
inc
inc
sub
dec
cmp
inc
xor
out
xor
cmp
sbb
mov
push
push
test
dec
and
cltd
rcl
adc
pop
rorb
and
sub
test
mov
push
or
ret
sub
and
push
xchg
dec
nop
data16
xchg
push
fs
and
cs
or
or
decb
lret
ja
xchg
cli
pop
sub
andl
imul
cs
sti
iret
sub
xlat
sbb
sub
pusha
sub
sti
dec
or
test
adc
test
add
scas
hlt
push
adc
jns
test
or
add
ds
add
add
je
mov
je
or
or
sub
dec
fimuls
add
add
push
iret
aam
sbb
push
mov
jmp
andl
add
jp
imulb
daa
and
jecxz
sbb
or
jmp
sbb
mov
sbb
xchg
cmpb
popa
jle
lcall
movsb
or
pushf
lods
imul
xchg
lret
test
cmp
inc
fcmovnu
jge
inc
and
pop
cmp
pop
cmp
mov
test
xor
test
bnd
lcall
scas
cmp
add
add
test
fbstp
mov
sbb
push
pop
fisubrl
dec
je
add
dec
fdivrs
add
sahf
push
and
or
or
imull
or
push
stos
xor
pusha
push
popw
adc
xchg
fs
pop
push
sub
push
and
inc
inc
fbld
dec
pop
adc
pop
fldl
fstpl
mov
jnp
aaa
jno
push
insb
out
add
mov
je
test
fisttpl
xor
sub
jmp
mov
or
inc
xor
ret
xor
test
xor
or
push
inc
sbbl
mov
push
mul
add
push
shrl
add
sub
add
pop
loopne
push
mov
into
fcomi
frstor
outsb
aas
stos
xor
dec
inc
enter
jb
push
fistpll
fstpl
mov
test
into
aam
and
adc
xor
inc
test
pop
loope
popl
push
stos
push
ret
pop
lret
push
insb
push
lea
out
push
or
clc
into
sti
or
lret
scas
cmpl
jo
add
mov
lret
loope
sbb
mov
testb
test
inc
mov
shrl
sbb
pop
adc
dec
add
clc
fiadds
inc
sbb
mov
push
pop
pop
je
andl
adc
adc
adc
push
sub
scas
stos
pop
pop
add
roll
jae
xchg
ss
lret
ret
dec
dec
pushf
sbb
js
and
add
ret
push
nop
mull
xchg
add
and
and
push
pusha
dec
cmp
nop
addb
pop
push
xchg
outsb
ja
aaa
xchg
pop
mov
push
int
addr16
mov
pop
lret
or
and
mov
mov
and
sbb
jecxz
imul
jl
jp
int
inc
ret
pusha
mov
sbb
jmp
test
rcl
orb
clc
and
mov
shl
mov
adc
push
push
sahf
add
pop
les
jo
and
shrl
rcll
test
cltd
mov
sahf
push
mov
and
js
pop
pop
lds
xchg
mov
data16
add
mov
adc
jne
fs
ret
pop
mov
pop
pop
cwtl
push
cmp
fimull
mov
add
and
sbb
push
andb
notb
mov
jns
repnz
push
negb
mov
adc
shll
adc
and
or
and
or
out
gs
out
inc
rorl
add
fwait
and
les
fdivrl
daa
sub
sbb
add
and
jp
mov
cs
iret
test
fnstsw
ss
sbb
xorl
add
and
rol
cld
or
fldcw
inc
cld
imul
nop
or
sub
das
mov
clc
adc
stos
mov
enter
sbb
in
and
rorb
push
sbb
fldpi
xor
or
xor
ret
andb
jnp
test
xor
push
mov
xchg
jb
xchg
jp
push
iret
mov
in
push
sbbb
nop
out
xchg
int3
add
and
popf
inc
cli
pop
fadds
fsubrs
sbb
xchg
add
test
xor
dec
mov
aam
jne
mov
mov
cmp
je
cmp
je
push
xor
mov
out
xor
mov
sahf
in
cmp
movl
jp
lods
daa
ret
push
ss
push
push
push
insl
into
or
cwtl
insl
or
jmp
push
add
sbbl
xchg
push
imul
fwait
pop
data16
xor
or
pop
add
pushf
out
test
jbe
inc
and
inc
push
rolb
bound
jne
cld
sarl
adc
hlt
mov
jnp
jmp
pusha
add
and
sbbb
dec
fisttps
mov
rorl
or
ljmp
xor
mov
jmp
pop
lods
fcoms
jecxz
xchg
hlt
xor
push
data16
push
add
push
fmuls
adc
lock
orl
fmuls
push
xchg
fldt
insb
iret
or
cmp
push
add
sub
inc
pop
add
jae
sub
push
mov
mov
mov
pushf
sbb
mov
not
xchg
add
push
addr16
jecxz
xchg
xchg
in
addps
push
sbb
fmuls
test
enter
mov
pop
jb
shrl
jmp
jae
shll
stos
adc
sub
hlt
adc
jb
into
rcl
xor
ret
fwait
out
sub
or
stc
loopne
xchg
hlt
xor
fdiv
ficoms
int
fdivr
adc
outsb
out
int
fisubs
stos
or
fstpt
adc
out
push
xchg
inc
cmp
out
jno
or
mov
orl
fadds
iret
lea
pop
mov
jo
pop
lret
dec
cmpsb
cmp
rclb
jnp
jge
xor
das
inc
lret
pop
cs
lds
cmp
fisubl
jge
xor
subb
nop
lret
test
int3
cwtl
sub
or
mov
in
movsl
jge
xor
or
push
jb
nop
int3
int3
int
and
or
mov
mov
add
mov
xor
pop
jb
int
mov
fcmovb
or
insl
mov
bound
rcl
xor
mov
into
iret
xchg
dec
cmp
or
notb
adc
jge
fcmovu
movsl
out
xor
imul
push
sti
push
sub
divb
loopne
cmp
fnstenv
scas
push
adc
or
sub
adc
xor
or
fcoms
push
xchg
rcll
or
cmp
inc
rcrb
xchg
push
push
pandn
mov
or
fldt
or
add
jmp
mov
cmp
add
add
jl
incl
jl
dec
orb
incl
enter
fcmovnbe
loope
cmp
sub
das
dec
mov
xor
lock
aas
mov
cmpb
mov
int3
mov
and
enter
sub
test
out
ret
pop
adc
das
sarb
arpl
in
cmovne
fdivs
xor
bswap
cmp
sub
dec
add
mov
ss
or
movsl
fiadds
lods
pusha
fsubs
cld
push
push
test
pop
dec
inc
push
adc
xchg
push
mov
pop
jne
aaa
es
inc
pushf
cmpsb
jb
xor
cmp
xchg
jns
inc
inc
aas
jbe
fwait
or
loopne
and
dec
push
jecxz
loope
sub
shll
add
push
popa
add
add
mov
dec
mov
pop
add
and
fldt
adc
sbb
xor
je
sbb
out
cmp
cmpsl
das
clc
and
popf
dec
push
fnsave
iret
mov
inc
xor
jg
cmp
retw
xor
out
or
xor
andl
or
jmp
rcrb
xor
pop
jl
cmpsl
xor
xor
jbe
test
and
add
inc
hlt
pop
ret
clc
lcall
or
jns
loope
push
icebp
out
add
nop
and
sub
cmp
sti
or
dec
add
sti
sbb
fsubrp
and
and
sbb
adc
or
and
cmc
cmc
dec
dec
orl
inc
in
jne
cli
or
sub
cmp
or
repz
sbb
repnz
sarb
push
xchg
test
loopne
fs
xor
dec
add
test
les
jne
jl
pop
adc
cwtl
clc
pop
test
pop
jno
jl
loope
nop
hlt
add
sahf
mov
ss
mov
jmp
repz
pushl
leave
inc
ss
add
ljmp
stos
sub
push
sub
mov
pop
orl
and
movsl
mov
fmull
insb
adc
rorl
subb
mov
inc
push
jae
push
daa
mov
mov
fstl
bound
shrl
xchg
mov
das
cmp
das
jmp
inc
xchg
lods
push
adc
pop
push
jne
mov
shlb
dec
icebp
xchg
inc
nop
or
cmp
in
dec
divl
cmp
cmp
cld
cwtl
pop
aas
add
push
nop
ret
cmp
repnz
mov
pop
dec
or
ret
inc
pop
in
fadd
movsl
or
sarb
mov
or
add
fldenv
outsl
jno
fisttps
xor
mov
xor
cli
mov
push
pusha
in
hlt
dec
jecxz
mov
movsl
js
addl
mov
xchg
inc
xor
sub
movb
and
out
pop
sub
je
int3
negb
jmp
xchg
and
mov
in
fisubrs
jp
fimuls
adc
ret
loop
adc
xor
or
mov
jo
in
or
mov
sarb
mov
cs
daa
pop
cltd
test
inc
clc
lret
xchg
dec
aaa
popa
sbb
sbb
test
push
pop
push
jp
sub
mov
lret
ss
push
jns
ja
xor
repnz
pop
or
mov
mov
int3
sub
ret
push
mov
lods
pop
hlt
ret
ret
pop
adc
pop
ret
xor
add
adc
ficompl
adc
ljmp
mov
imul
leave
or
adc
or
mov
jmp
sbb
inc
shr
push
mov
push
imul
in
jns
or
fildll
sub
fmuls
sbb
add
pop
inc
movl
add
xlat
jmp
loopne
jmp
popf
xchg
daa
adc
jo
and
pop
sbb
sub
sbb
mov
aas
dec
or
and
inc
pop
lods
lahf
inc
push
add
adc
pop
or
sbb
pop
mov
push
imul
movsb
inc
sahf
mov
cmpl
jmp
js
jbe
mov
or
sbb
push
outsl
outsb
push
dec
jecxz
mov
pop
or
dec
lret
das
xor
xorb
jae
out
lods
cmpsl
cltd
sbb
sbb
add
or
add
fadds
push
pop
mov
add
sarb
jle
bound
jle
jne
adc
jecxz
jmp
insb
scas
es
in
bswap
sub
cmovo
inc
pop
in
scas
jo
idivl
push
mov
fs
add
or
mull
xchg
fstpt
add
mov
xchg
mov
adc
pop
fistl
sbb
xor
fmuls
mov
orl
jnp
jg
add
xor
lock
xchg
mov
jns
lea
dec
stos
dec
or
clc
jle
outsb
aaa
arpl
inc
lahf
sbb
dec
clc
inc
cmp
loope
nop
adc
adc
xorl
jg
jmp
scas
xchg
fwait
jns
imul
dec
mov
mov
loope
push
ret
adc
xchg
daa
cmpsb
mov
pop
fldcw
xchg
xchg
lcall
jle
mov
and
cmpsb
loope
ds
fldpi
addr16
sbb
pop
push
nop
clc
lock
jae
cmp
jl
clc
or
dec
adc
or
mov
or
aam
bound
ror
push
lock
push
or
rol
adc
test
int3
test
testl
or
push
mov
mov
xor
and
adc
pop
and
push
cwtl
testb
mov
cmpsb
sub
insl
mov
or
movsb
mov
rorl
adc
pop
mov
jae
sub
test
je
test
pop
inc
jle
cmp
fisubl
xchg
lock
or
aam
pop
fdiv
pop
insb
or
sbb
daa
sbbl
lret
mov
lock
cmpsb
mov
jne
sub
test
inc
dec
imul
or
jb
or
jno
mov
inc
push
jge
adc
add
rolb
mov
dec
push
add
pop
xor
push
sub
stos
add
cmpsb
jnp
jo
cmp
lcall
jg
add
orb
or
dec
adc
fcoml
gs
fdivrs
lcall
loopne
push
sbb
lret
sub
dec
jo
add
icebp
es
push
fnstenv
adc
fisubrl
out
popf
mov
sbb
sbbl
fstps
mov
pop
ljmp
jae
lods
or
lock
pop
loopne
aas
push
sub
xlat
cmpl
cmpl
sahf
add
or
push
push
insb
jb
sahf
fdivrl
jb
push
in
dec
imul
push
popa
lods
insb
or
xchg
adc
out
push
sbb
jne
mov
cmpsl
adc
or
outsl
dec
das
push
jl
pop
testb
subb
jbe
das
pop
dec
enter
xor
cmp
rol
push
sbb
adc
dec
inc
ss
movsb
xor
pop
mov
fisubrs
jae
add
sbb
rclb
dec
push
add
adc
adc
dec
lret
int
mov
insl
jg
or
xchg
xor
add
fdivrl
cmpsb
addr16
mov
push
jnp
push
mov
push
imul
jo
repz
sbb
mov
push
dec
int3
add
push
add
inc
xchg
fsub
jmp
xor
jmp
mov
push
jl
or
add
add
xor
sbb
lods
push
push
nop
insl
push
push
out
pop
in
sbb
ret
cmp
inc
or
hlt
cmpsl
mov
int
sub
pop
pop
lock
add
mov
inc
lods
or
insl
pop
xor
movsb
dec
inc
shll
test
inc
aas
xchg
push
es
insl
cld
pop
fcmovu
sbb
mov
pop
es
jmp
loop
adc
inc
cld
or
mov
pop
dec
and
fwait
ret
mov
pop
sbb
jo
je
clc
cmpsb
xchg
mov
sbb
jmp
cmp
popa
pop
jl
outsb
pop
and
xor
aad
scas
push
sbb
pop
stos
in
insl
shrb
dec
loopne
xchg
addb
add
cmp
mov
xor
adc
lods
std
inc
arpl
outsl
jmp
ds
inc
mov
cmp
add
xchg
lds
jo
or
adc
adc
sbbl
sub
es
mov
pop
lret
sub
push
xor
lea
adc
sub
enter
outsl
gs
xlat
push
add
inc
sub
add
xchg
add
sub
sbb
daa
in
orb
jecxz
pop
mov
and
inc
inc
mov
add
outsb
add
push
cmp
es
sbb
inc
push
rorb
push
push
inc
sahf
sbbl
jmp
mov
leave
in
push
push
or
mov
shlb
mov
mov
cmp
cmp
inc
mov
int3
pusha
mov
add
imul
mov
enter
ss
mov
add
andl
adc
cwtl
bound
sbb
jno
mov
popa
adc
and
mov
pop
jae
js
out
or
xchg
or
or
imul
or
mov
adc
movsb
inc
pop
push
in
adc
jmp
push
loopne
rol
xor
xchg
mov
data16
inc
or
insb
scas
jmp
les
fsubs
xor
inc
or
adc
add
cmp
cs
shl
cli
inc
lret
gs
or
nop
pop
and
addr16
testl
fbstp
enter
mov
iret
je
push
data16
push
add
push
mov
stos
mov
cmpsb
test
test
xchg
lcall
inc
cmp
jle
adc
add
inc
fdivrl
sbb
push
mov
ret
add
jbe
xchg
mov
push
adc
dec
sub
pop
je
lock
jmp
xor
shl
sbb
sub
and
or
adc
out
fists
mov
repz
push
fstl
push
jae
mov
cmp
in
adc
or
and
sbb
adc
or
lret
jp
pop
clc
push
adc
sti
aam
jge
xor
pop
mov
sbb
or
push
mov
pop
mov
or
jge
imul
js
cmp
add
push
scas
adc
add
adc
call
call
into
jecxz
inc
and
add
or
and
iret
imul
inc
xchg
xor
push
dec
or
mov
mov
lea
or
cld
adc
pop
adc
jne
add
cli
aas
sbb
clc
jbe
push
pop
in
cmc
push
push
jae
mov
aas
lret
dec
add
and
decb
and
and
jmp
mov
inc
cmp
lret
inc
push
subb
aam
jmp
rcpps
fidivrl
adc
pop
add
fisttpll
and
and
push
or
sar
sub
daa
xorl
sti
cltd
add
outsb
jne
and
xor
adc
add
dec
pop
cmp
jbe
call
sub
xchg
and
cmp
cmpsb
mov
jno
jno
dec
out
cmp
mov
and
add
shl
add
xor
cmpsb
dec
loopne
cmp
out
loopne
outsl
aas
jae
xchg
int
xchg
rorb
dec
pop
add
inc
or
xor
xor
xor
inc
sbb
dec
xlat
pop
roll
inc
int
scas
es
bound
outsb
or
sti
ja
pusha
mov
mov
rorl
jae
cmpb
mov
test
fildl
xor
and
dec
adc
loopne
xor
ljmp
jno
adc
xor
imul
mov
sti
add
mov
les
mov
or
add
movsb
pusha
push
hlt
push
cmp
sub
mov
push
or
sbb
push
decb
adc
icebp
adc
lcall
js
imul
adc
jno
shl
push
jmp
adc
push
dec
or
mov
push
dec
adc
push
lcall
jbe
loop
mov
jbe
sahf
sahf
push
cmp
adc
movsl
pop
xchg
jb
cmp
in
adc
loopne
imul
lret
loopne
ljmp
loope
inc
add
test
out
and
adc
xor
shr
fsub
jmp
std
imul
mov
rolb
sbb
sbb
mov
and
js
ret
pop
xlat
fcmovnbe
adc
out
jne
sti
sbb
testl
xor
pop
dec
jae
pop
or
out
or
in
es
add
mov
je
js
xchg
cmp
mov
out
pop
cmpsb
sahf
cmpsb
cmp
cmp
sbb
and
sub
mov
imul
add
int
jo
push
mov
xchg
or
push
jne
test
cltd
int
cmp
mov
lret
sub
inc
ficomps
scas
into
cli
int
and
pop
out
outsl
mov
add
testl
sub
pop
mov
add
stos
add
int3
pop
outsb
lcall
inc
dec
popa
cmp
mov
add
shll
cmc
movsb
cmpsb
movsb
decb
pop
xchg
and
mov
decb
jne
adc
and
jmp
dec
push
add
jno
andb
or
push
insb
mov
lds
and
arpl
add
dec
mov
std
andb
ljmp
xchg
push
outsb
imul
inc
mov
push
inc
imul
ficompl
cli
or
subb
mov
les
popa
into
shr
or
adc
fisubrs
push
or
push
jnp
rcrb
or
sbb
jb
dec
leave
into
add
pop
fisttpl
data16
mov
roll
xor
lods
mov
mov
xchg
rclb
loopne
jp
fnstenv
xchg
cmp
or
cmp
lods
pusha
cmpsb
cmpsl
push
and
add
js
mov
mov
xor
es
add
adc
data16
xor
xchg
popf
push
mov
cld
mov
mov
mov
data16
sub
and
fwait
cmpsb
xor
xchg
dec
stos
adc
stos
clc
sbb
push
dec
inc
mov
movsb
aam
mov
pop
cmp
xchg
push
or
lea
aas
sahf
loopne
ret
outsb
imul
test
lock
lret
mov
mov
shl
add
ret
lods
mov
add
mov
ficoml
aas
dec
imul
add
cli
ja
lea
dec
repz
stos
in
mov
psubsb
inc
cld
lock
push
les
addb
scas
mov
lods
pop
lock
jg
sbb
or
clc
mov
lea
pop
dec
and
dec
or
fsubl
sub
inc
fs
inc
test
ljmp
test
hlt
mov
jne
or
add
ljmp
sub
imul
pusha
lret
and
jo
sub
and
xor
mov
or
hlt
mov
cmp
test
mov
jge
andb
and
add
daa
adc
jecxz
jg
xor
xchg
jbe
pushf
pop
push
mov
pop
xor
jae
cmpsl
rorl
sbb
nop
pop
int3
or
and
inc
fdivrl
and
nop
dec
or
lcall
push
out
mov
or
insl
out
arpl
mov
sar
dec
mov
cs
pop
mov
sbb
adcb
cltd
adc
push
dec
pop
dec
pop
adc
pop
pop
pop
add
xchg
dec
push
jae
int3
adc
iret
lret
and
and
sbbl
jae
in
rcll
jle
inc
xor
add
mov
sub
push
js
cmp
jo
outsb
jae
lea
or
mov
add
lods
mov
insb
pop
xor
and
das
add
pop
idivb
jno
cld
aaa
ret
test
inc
cmp
inc
push
pusha
cmpsb
mov
lret
adc
repz
xlat
dec
jmp
in
in
repz
and
movsl
jno
or
add
mov
or
loopne
xor
add
cmc
pop
fildl
ret
push
pop
imul
dec
add
and
dec
je
inc
add
xchg
sbb
push
cmp
dec
mov
sbb
push
push
jmp
movb
dec
inc
jno
jmp
mov
and
cmp
pop
xor
add
aam
stos
mov
test
push
loop
out
movsl
mov
sbb
pmaxsw
nop
sti
jmp
mov
mov
mov
mov
xchg
insl
stos
rol
mov
sbb
sbb
add
xor
std
adc
and
dec
inc
lea
lock
push
es
sub
jecxz
adcl
xor
jae
orb
iret
mov
push
lock
add
daa
rorl
jnp
cld
cmp
bound
mov
push
pop
pop
add
test
xor
inc
add
andb
mov
and
mov
push
mov
test
sbbl
dec
insb
pop
popa
or
xchg
mov
aas
lods
aas
jae
mov
cltd
add
or
jge
outsl
ud0
or
icebp
sub
or
mov
out
inc
ret
mov
pop
sub
js
or
pop
xchg
push
xor
stos
adc
cs
and
or
and
cli
out
punpcklbw
outsl
mov
or
pusha
add
das
xor
sub
mov
inc
adc
adc
jbe
or
push
adc
jmp
test
std
add
mov
cmp
jb
rcll
clc
and
enter
cmpsl
xor
sub
sbb
dec
bound
test
fmuls
dec
pop
push
aad
sub
stc
aaa
loopne
pop
ret
fisubrs
je
decl
mov
add
andb
lock
pop
incl
test
loope
je
adc
dec
jge
pop
loop
mov
popa
shl
add
mov
mov
pusha
hlt
in
pop
test
cmp
fidivs
mov
sbb
lock
lret
jl
sbb
test
sub
outsb
jae
jne
clc
sbb
sub
movl
or
jle
mov
or
out
xchg
je
sbb
cmp
popf
es
xorl
jb
fldl
cmp
adc
sarl
pop
cli
sbb
pop
jbe
jae
popa
test
ds
daa
fidivrl
push
aas
pop
mov
lret
jb
inc
dec
inc
pop
paddq
sub
xor
out
mov
cmp
adc
adc
ds
addl
cs
movsb
movsb
adc
lods
push
jo
and
adc
cli
mov
inc
jg
push
push
jb
adc
fstl
jle
outsb
sbb
mov
leave
push
pop
pop
pop
fcompl
push
cld
mov
inc
cmp
xor
mov
sub
mov
fbld
or
add
sub
sbb
sbb
lods
push
cmpb
sub
or
fadds
sub
std
pop
orl
sub
shrl
sbb
pop
xor
jmp
idivl
pushf
clc
jmp
shll
sbb
mov
movsl
pmaxsw
pop
out
int3
adc
lea
xor
dec
add
and
mov
or
push
push
dec
jae
adc
mov
mov
mov
js
je
add
sbbb
fwait
shl
and
push
xchg
mov
push
fs
mov
push
xor
add
cmp
pop
add
mov
rolb
jmp
dec
test
inc
pop
jb
add
aam
xorl
lea
jno
push
loopne
jae
hlt
push
data16
fistpl
dec
inc
mov
inc
inc
lea
subl
sub
test
fbstp
xor
ret
sub
add
fsubrp
scas
or
lock
add
xor
outsb
push
ret
mov
test
leave
bndldx
inc
inc
mov
or
push
jne
cmpl
clc
or
dec
adc
clc
jl
sbb
mov
enter
setle
jmp
jae
sub
jo
movsb
add
les
mov
jp
adc
mov
inc
mov
mov
cwtl
inc
push
sub
daa
push
jae
jge
push
divb
cmp
lret
cmp
push
dec
xchg
mov
inc
mov
sub
rolb
pusha
imul
les
and
add
pop
xchg
and
inc
or
leave
push
adc
add
cli
mov
xor
dec
mov
dec
push
mov
mov
adc
sbb
sub
pop
inc
les
js
push
jo
pop
loopne
mov
ja
pop
push
test
call
cmc
push
inc
pop
dec
xchg
inc
jb
pop
jnp
mov
shrl
shrb
inc
add
test
std
test
mov
ja
and
adc
je
sbb
mov
test
lcall
cmpb
cmc
xchg
add
sub
lods
jge
mov
fimull
lea
test
sub
sub
lret
mov
cmpb
inc
inc
shr
jmp
dec
enter
xorb
aaa
jne
cmp
dec
rcr
add
jbe
push
adc
subl
mov
dec
xchg
and
ss
cmpb
jne
inc
inc
nop
and
orb
les
add
and
add
xchg
ret
sbb
xchg
dec
jo
fstl
xor
add
scas
clc
addr16
cmp
pop
push
xchg
das
call
or
in
push
insb
and
cmp
lods
or
dec
add
cmp
je
mov
xor
mov
adc
xor
das
inc
out
hlt
mov
out
push
lock
or
and
mov
rorl
sub
lock
adc
sub
xor
ret
and
inc
aas
jmp
mov
push
fcmovb
int
mov
cmp
repnz
pop
or
punpckhbw
mov
repnz
sub
xchg
es
in
imul
push
and
or
cli
rclb
mov
pop
mov
push
or
aas
and
add
sub
dec
mov
je
ucomiss
call
lds
popa
popa
sub
sbb
ret
mov
adcl
and
push
rorb
jle
aad
inc
mov
add
loop
in
rcrb
xor
inc
sbb
leave
cmp
or
xchg
adc
adc
es
insb
leave
loop
mov
inc
xchg
mov
ret
hlt
sub
dec
push
jecxz
loopne
enter
out
push
mov
mov
div
cmp
xor
sub
inc
or
inc
fcoms
adcb
mov
mov
push
add
pop
je
xchg
loopne
mov
inc
mov
sub
inc
gs
daa
cmp
xchg
cmp
movsb
xor
add
mov
addr16
dec
dec
fiaddl
pop
inc
mov
rcll
pop
mov
movb
add
and
ja
cld
jmp
inc
inc
addr16
or
aaa
or
push
cld
cmpsb
arpl
adc
or
add
mov
pop
cmp
divl
sar
je
jne
pop
jmp
xchg
jecxz
fstpt
and
inc
leave
or
cltd
fsubrs
and
adc
jmp
rdpmc
shl
daa
inc
jb
mov
jl
push
shrb
jae
je
dec
xchg
pop
pushf
neg
leave
dec
pusha
ja
cli
jmp
sbb
divl
or
fsubs
inc
jge
cmp
idiv
cmp
mov
mov
loopne
inc
in
faddl
call
js
pop
pop
add
aaa
je
push
adc
xor
cltd
mov
push
cmp
adc
jne
and
roll
in
sti
mov
neg
sub
mov
jmp
lods
sub
nop
imul
add
pusha
cmpb
call
scas
pusha
add
movb
xor
hlt
xchg
sub
jae
xchg
les
es
inc
xchg
mov
adc
adc
sbbl
pop
xchg
faddl
xor
nop
adcb
push
push
ljmp
sub
and
add
lock
inc
xchg
jle
stos
add
imul
inc
push
and
jle
mov
fdivrs
jbe
mov
fdivrs
js
dec
mov
jmp
mov
xor
gs
shll
push
outsb
cmp
pop
sub
adc
push
push
lock
mov
icebp
xor
mov
pop
xchg
out
push
add
push
xchg
enter
or
dec
add
les
adc
pop
jmp
adc
sub
push
mov
add
xor
cmp
push
adc
pop
frstor
mov
dec
pushf
test
or
add
jg
xor
adc
or
ret
dec
jo
es
or
inc
out
into
xor
insl
aas
dec
insb
loop
lock
add
imul
insl
roll
push
cld
cmp
addl
add
mov
xchg
cmp
or
outsl
int3
or
or
push
call
cmc
jl
test
mov
jle
adc
call
push
sub
cmc
mov
cmp
cmp
scas
loopne
and
mov
or
sub
add
mov
xchg
test
pop
jecxz
data16
and
add
mov
pop
push
shl
push
add
lret
dec
push
add
inc
cmp
jl
movsl
dec
or
push
inc
aad
xchg
andb
adcl
filds
inc
cmp
sbb
or
sub
loop
subb
or
movsb
sbbb
jmp
fsubs
push
mov
mov
inc
pop
mov
push
syscall
cmp
jbe
xchg
cmp
lods
adc
movl
aaa
rolb
push
xchg
mov
loopne
lcall
mov
adc
cmp
xchg
mov
insl
sub
loope
cmp
push
or
inc
inc
mov
jbe
es
mov
fisubrl
or
or
add
dec
fmuls
sub
push
dec
and
jo
adc
mov
jle
adc
inc
xchg
dec
adc
sub
add
add
fcoml
dec
mov
mov
mov
scas
es
mov
std
incl
sbb
jb
cmp
ja
add
cmp
sbb
out
fadd
cmp
jne
dec
jne
movsb
cmpsl
cltd
nop
adc
inc
repnz
daa
imull
andl
sbb
mov
test
clc
pop
cli
or
mov
je
or
nop
out
push
dec
add
rcrl
repnz
inc
dec
sarl
add
fld
imul
push
mov
mov
jno
js
xor
adc
xorb
je
out
add
sub
mov
lea
xor
inc
ret
mov
jmp
aam
or
imul
push
or
xor
fistpl
es
ss
data16
push
dec
mov
push
cmpb
inc
push
push
and
and
cmpb
lcall
add
iret
repz
mov
mov
pop
hlt
movb
push
rorb
enter
ret
or
clc
pop
fidivs
inc
rorb
cmp
jg
dec
cmp
add
or
sti
inc
test
dec
or
dec
mov
inc
jmp
ss
or
xor
inc
sbb
mov
and
xor
lock
inc
bnd
pop
push
pusha
insb
insb
ja
or
mov
lcall
push
decb
sti
cmpb
dec
or
mov
pop
xor
xchg
xorb
push
notl
cmp
sarl
fsubrs
add
cwtl
cmp
pushf
sbbb
cltd
push
mov
xchg
add
aaa
xchg
inc
movb
je
jo
cmp
or
inc
loopne
or
jmp
sbb
cli
nop
roll
loopne
mov
add
push
jbe
mov
outsl
jg
push
mov
std
jge
lret
fs
add
mov
addr16
xor
mov
loopne
push
and
lahf
xchg
je
cmp
fs
ljmp
cmp
ljmp
jae
inc
add
jne
mov
cmp
sahf
and
jne
test
sbb
push
dec
jb
ss
push
sub
fs
insb
cs
inc
cmp
sahf
into
jle
adc
in
pop
add
and
fisubs
dec
adc
scas
in
filds
cmp
push
sarb
aaa
mov
push
inc
sahf
push
push
roll
mov
push
xchg
mov
jbe
push
gs
xchg
pop
ss
orb
ret
and
push
and
mov
push
adc
shl
xchg
or
push
daa
inc
nop
mov
add
push
ds
adc
andb
insl
mov
rep
dec
mov
dec
pusha
bound
hlt
mov
into
call
and
jle
adc
dec
ljmp
je
mov
data16
add
or
andl
adc
xchg
ret
sub
and
sub
inc
lods
add
aas
mov
inc
rcll
adc
inc
fidivrl
cmc
movsl
mov
ds
adc
cmp
pop
dec
or
push
popa
sbb
arpl
fdivrs
xchg
bound
xor
mov
cmp
pop
je
in
sub
mov
xchg
pop
mov
jae
aam
xchg
pop
sub
fstps
subb
iret
pop
nop
sbb
adcb
push
pushf
sub
xchg
data16
jnp
test
sbb
or
xor
push
lret
mov
cmp
je
inc
lret
jecxz
cs
push
ficomps
ss
cmp
insb
shr
lret
inc
mov
cmp
ja
nop
add
add
les
add
clc
mov
mov
pushf
or
jb
xor
jmp
push
enter
push
pushf
or
rolb
sbb
mov
xor
imul
push
test
xor
mov
push
rcl
mov
enter
call
add
adc
or
shll
outsb
mov
popf
jne
or
add
cmp
cmc
and
or
mov
popf
pop
sub
incl
lea
add
scas
test
inc
es
dec
jmp
jbe
sub
je
testl
enter
cld
lcall
jg
lret
test
into
sbb
jb
inc
xor
push
pushf
xchg
jne
mov
cmp
push
mov
into
out
add
jecxz
mov
jecxz
jp
dec
sub
adc
sbb
or
and
add
mov
scas
lods
push
leave
add
pop
sbb
mov
adc
aad
xlat
pop
inc
outsb
pop
sbb
adc
lahf
add
xchg
jo
decb
int3
lcall
dec
sti
scas
and
sbb
aad
push
push
arpl
cs
add
add
and
jl
mov
sbb
jo
cmp
push
add
shl
mov
add
aas
xchg
shl
jmp
fwait
dec
fs
add
add
shll
mov
jl
sarb
adc
neg
popa
fldcw
adc
sbb
popf
sub
sbbb
cmp
adc
repz
pop
data16
inc
jmp
or
mov
jns
nop
cmp
clc
adc
dec
xlat
mov
dec
push
enter
mov
ds
pushf
add
lea
dec
inc
in
or
andb
sub
clc
xchg
xor
xchg
ljmp
das
dec
inc
lock
mulb
cmp
adc
inc
pshufw
push
jle
hlt
or
pop
sbb
dec
lods
xlat
xchg
out
out
pop
pop
adc
push
decl
scas
lea
or
or
lods
jg
dec
rorb
incl
or
push
adc
or
cmc
cmp
ffreep
daa
into
inc
clc
push
xor
out
add
add
or
adc
and
pop
out
add
outsl
jl
push
cwtl
test
test
dec
or
or
clc
pop
lret
shlb
or
dec
frstor
xchg
pusha
loop
mov
daa
mov
pop
outsl
testw
je
sbb
push
add
cmp
or
mov
dec
or
xor
fs
test
in
pop
repnz
push
lea
out
sbb
stos
int
test
adc
movb
mov
or
mov
mov
adc
xchg
fmuls
or
xchg
mov
scas
testb
pusha
xchg
cmp
sub
testl
or
and
enter
jmp
mov
cmpsl
cmp
xchg
add
lahf
ret
mov
cmpsb
aam
jne
or
inc
cltd
gs
dec
adc
fs
or
jecxz
cwtl
lods
xor
aam
pop
lock
mov
adc
inc
push
inc
add
cmpb
je
or
aad
jle
jge
lea
fadd
sbb
push
loope
adc
je
ret
popa
cli
and
shrl
shrl
loope
sbb
dec
pmulhw
and
mov
sub
adc
dec
nop
xchg
repz
sbb
mov
pop
enter
popa
sahf
inc
and
nop
mov
pushf
das
cltd
inc
fistpl
orb
mov
out
in
sbb
aam
gs
push
inc
ret
cmpsl
aam
pop
enter
add
sbb
xchg
notb
mov
jne
inc
mov
sbb
mov
and
addr16
push
push
sbb
xchg
pop
sbb
push
pop
scas
test
mov
dec
nop
int3
arpl
test
gs
std
hlt
pop
add
dec
and
arpl
adc
push
push
sub
mov
push
push
mov
push
xchg
loope
mov
popa
sbb
out
int3
das
add
mov
pusha
jae
cmpsl
or
cmpsl
addl
push
mov
mov
mov
dec
scas
pop
mov
roll
jae
xchg
testb
lcall
and
sbb
insb
push
sub
pop
jne
das
add
fisubrl
cmp
dec
ret
push
int3
push
enter
add
push
xchg
testb
inc
inc
add
inc
jge
lahf
leave
lret
dec
xchg
fs
negb
andw
inc
pop
mov
add
adc
xor
jbe
xchg
jp
movsb
xor
out
clc
xor
and
lock
push
xchg
and
mov
add
cmp
in
insl
loopne
orl
pop
adc
inc
add
adc
and
add
icebp
inc
xor
lret
aas
ss
pushl
movsb
and
jo
or
push
sub
adc
push
cmc
inc
test
popf
in
xor
sarl
add
add
inc
sbb
push
push
jg
fiaddl
test
repz
jl
dec
adc
cld
cmp
jne
or
and
mov
loope
and
clc
fmuls
or
inc
in
jae
imul
scas
cmp
je
push
adc
es
pop
jae
insl
cmpb
or
movb
mov
jae
push
adc
sbbl
adc
inc
cmp
xor
mov
adc
cmp
cmovae
pop
jnp
icebp
add
or
sub
jmp
sbb
mov
lcall
mov
loopne
pop
pop
and
addb
mov
clc
out
test
enter
sub
xor
jnp
cmp
bnd
sub
dec
mov
sub
sbb
jmp
loopne
mov
and
test
into
xchg
mov
xchg
and
cwtl
int3
std
lea
shrl
nop
sub
movb
sub
addb
mov
lock
add
je
push
xor
pushf
sbb
pop
aam
push
in
adc
xor
mov
sar
faddp
scas
inc
mov
jmp
in
jp
xchg
jo
adc
sub
xor
loopne
stc
or
adc
dec
push
or
lea
shrb
jmp
call
daa
sbb
or
and
push
and
or
jl
and
out
stos
enter
test
movsl
aad
hlt
pop
lret
push
pop
push
fwait
cmpsb
jne
or
cs
lahf
mov
movsl
in
push
push
mov
enter
mov
pushf
or
shrl
cmpsl
cmpsl
push
jl
int
stos
or
sbb
jmp
cwtl
inc
sbb
dec
lock
fisttps
adc
aad
xor
add
sub
mov
inc
inc
or
dec
jmp
je
dec
dec
les
mov
add
mov
dec
sbb
cmp
adc
fsts
ret
jg
imul
pop
xor
dec
inc
add
cmp
mov
or
rcrl
xchg
cmp
insb
xor
inc
aam
dec
fsubrs
mov
push
xchg
and
mov
stos
and
lods
or
cmp
mov
das
adc
loopne
cmp
daa
inc
repnz
mov
rorb
adc
int3
jle
test
into
pop
add
sbb
sub
inc
jle
jbe
and
and
fs
test
jle
sarb
mov
mov
cld
add
cmp
xor
les
xor
in
jmp
ljmp
sbbl
jp
xor
movsb
daa
call
push
push
mov
xor
xchg
xor
or
and
dec
add
inc
mov
sbb
xchg
sbb
sahf
les
repnz
dec
lods
inc
push
ret
popa
mov
leave
dec
sbb
dec
xor
or
jl
fsubrs
xor
push
dec
or
jge
pop
mov
enter
or
add
and
pop
push
xor
mov
xor
or
jbe
addb
outsl
jmp
sbb
adc
jge
pop
push
pop
mov
in
mov
cltd
mov
prefetcht0
xor
fwait
add
pop
xchg
rcll
push
sbb
outsl
lahf
or
mov
cmpsl
mov
push
data16
sbb
push
pop
mov
jne
adc
incl
push
add
mov
fsubr
adc
push
sub
rorl
popf
insl
fwait
dec
and
lret
cmp
cmpsb
movsb
cmpsl
dec
out
jne
adc
test
mov
inc
cmp
push
jmp
test
test
jp
push
mov
sti
and
add
mov
pop
insb
inc
test
or
std
cmp
jge
sbb
dec
mov
outsb
mov
es
ret
cmp
mov
jl
and
dec
push
mov
pop
mov
cmp
push
push
imul
pop
ss
xor
inc
popf
shll
sbb
or
add
sub
mov
faddl
stos
or
xchg
or
and
imul
stos
adcb
adc
pop
add
and
push
sahf
cltd
notl
sbb
push
stos
mov
dec
cmp
inc
sbb
stc
jmp
outsl
mov
call
jmp
sub
rcll
push
decl
cmp
jle
sub
jmp
adc
cmpsb
add
xchg
dec
and
jne
ret
test
fistps
mov
xchg
mov
scas
mov
mov
dec
pusha
push
and
or
push
fisubrs
jo
es
hlt
sbb
mov
and
aam
popa
and
ja
dec
mov
sbb
sbb
push
cwtl
or
shll
sbb
stc
or
into
lcall
add
add
sbb
js
adc
cmpsl
cmp
insl
pop
cld
push
daa
jo
lods
xor
pusha
push
addl
mov
dec
inc
xor
sbb
or
inc
out
out
add
and
mov
sbb
gs
jg
push
and
cld
pop
int3
xchg
aad
nop
push
je
jnp
in
into
and
bt
sbb
add
mov
mov
and
rcrb
insl
sbbb
jmp
adc
inc
fstps
andl
orb
xchg
adc
cld
pop
aaa
aaa
jne
jb
pop
fldcw
mov
xor
or
dec
test
push
cmpsb
addl
in
sub
or
or
add
cmp
rcll
add
add
mov
int3
or
lret
push
mov
mov
mov
mov
add
pop
lods
ss
out
adc
push
pop
or
mov
mov
xchg
adc
bound
or
or
jg
je
dec
jmp
insb
pop
pop
test
pop
mov
in
shlb
cmc
jo
pop
xor
adc
sbbl
inc
mov
mov
bswap
mov
inc
mov
or
or
or
or
cmp
mov
inc
dec
jecxz
or
push
add
or
or
pop
sahf
add
sbbb
dec
adc
lahf
add
mov
xorb
mov
sub
pop
mov
not
test
outsb
es
cli
dec
sub
adc
movsb
lock
or
add
jl
in
nop
push
icebp
xchg
and
fst
je
cltd
adc
mov
pop
pop
push
jo
dec
mov
sub
insb
loopne
adc
push
imul
cmpb
inc
jge
adc
push
mov
sub
pop
cltd
addr16
push
inc
addb
and
cmpsl
icebp
sub
pop
add
test
inc
push
scas
lahf
push
xchg
push
ja
and
mov
adc
push
lret
and
inc
xor
int3
clc
adcb
js
cld
enter
sbb
add
ss
inc
push
scas
or
add
and
clc
daa
add
adc
or
xor
dec
test
push
ret
push
pop
jne
pop
sahf
cltd
push
push
pushf
push
or
or
xor
sub
not
mov
into
mov
call
ds
roll
push
pusha
add
hlt
push
pop
call
pusha
loopne
or
and
andb
adc
dec
jp
xor
cs
int
shrl
loopne
vpsllw
mov
dec
or
fcmove
push
adc
or
add
add
dec
sub
std
sub
and
loope
xchg
add
hlt
push
lock
mov
mov
mov
pop
int
mov
mov
add
mov
out
sub
pop
pop
add
xor
jbe
sub
loopne
jge
lret
sub
aas
sub
fwait
das
jnp
push
xchg
mov
test
inc
mov
adc
mov
sub
pusha
or
dec
scas
dec
mov
jbe
xlat
sub
mov
and
add
add
adc
cmp
fdivs
jg
es
mov
or
or
ds
mov
incl
sub
clc
adc
fmull
bnd
lea
mov
xlat
push
pop
sub
rorb
sub
pop
and
lods
dec
outsl
imul
dec
fisttps
test
add
rclb
mov
xchg
int3
dec
cmp
dec
or
xor
movb
mov
jle
jno
mov
test
inc
insb
scas
mov
mov
mov
mov
jne
insb
cmp
cld
int
dec
jl
cmpb
jl
ret
bound
add
jmp
dec
xor
incl
mov
outsl
push
adcb
add
or
subb
movsb
push
xchg
or
pop
jnp
mulps
fadds
je
push
cmpsl
inc
mov
sub
test
or
pop
xor
cltd
lods
jge
test
push
in
mov
addb
mov
test
mov
shll
arpl
or
lahf
mov
push
mov
andb
loopne
shlb
iret
ss
adc
xchg
push
mov
orl
xchg
je
inc
ret
push
sub
jo
or
loope
inc
cmp
mov
dec
ljmp
dec
add
sbb
pusha
lret
test
jmp
enter
loop
or
sbb
adc
and
or
adc
sbb
jmp
adc
iret
mov
sarb
out
add
push
ret
xchg
repz
add
mov
push
dec
dec
jae
or
sub
add
push
or
iret
mov
popf
in
outsb
push
jmp
dec
push
nop
shl
bound
outsb
mov
and
pop
push
pop
sbb
inc
push
lds
inc
mov
mov
or
je
mov
das
xchg
loope
fstpl
xchg
xor
loopne
or
lcall
and
xor
pusha
addl
adc
scas
fisubs
or
movsl
sahf
andl
xchg
inc
ss
mov
sbb
sub
xor
or
jmp
andb
inc
push
mov
inc
mov
adc
dec
fstpt
jmp
cmp
movsb
ret
sub
and
movl
insb
adc
push
aam
pop
aam
fs
sbb
test
cmp
sbb
imul
dec
mov
jb
xchg
or
popf
inc
sub
setnp
pusha
or
adc
xor
scas
int3
dec
jl
jb
xor
aad
ss
sub
and
scas
adc
add
cmp
cmp
jg
jmp
cmp
add
mov
cmp
add
cmp
jbe
inc
shl
daa
pop
subl
movsl
jnp
popa
movsl
popf
mov
xor
xchg
sbb
jbe
cli
imul
push
mov
jl
add
sahf
insb
add
sub
jle
shrb
cmp
cmpsb
and
inc
and
sbb
jne
push
mov
mov
xor
pop
jns
xchg
out
hlt
shlb
repz
popa
jl
mov
test
mov
nop
ret
and
dec
fneni(8087
mov
sbb
or
jo
push
test
mov
sbb
mov
xchg
lods
cwtl
or
adc
xor
xchg
mov
and
fdivs
push
dec
adc
inc
scas
mov
push
insl
pop
add
and
ss
rcrb
call
lock
dec
pop
test
push
cltd
in
mov
mov
and
repz
or
test
out
pop
dec
inc
push
das
and
xchg
outsb
ss
sub
or
cmp
fidivl
stos
sbb
mov
sbb
push
jge
je
mov
les
adc
sbb
pop
jmp
inc
jo
push
dec
pop
jmp
pushf
inc
sub
dec
push
xchg
outsb
outsb
in
sahf
mov
or
push
jbe
inc
push
or
out
jle
arpl
jg
jl
push
sti
dec
push
cmovnp
out
xchg
scas
pop
push
lcall
adc
ret
cmp
cmp
roll
inc
scas
mov
test
and
les
das
adc
ret
es
cmpsb
inc
lock
or
push
jmp
xchg
rclb
adc
cwtl
sbb
loope
pushf
adc
push
mov
and
dec
repz
popf
pop
inc
adc
pop
or
inc
cmpsb
or
mov
iret
mov
push
call
push
lea
adc
mov
pop
hlt
pop
inc
pop
or
jae
fs
mov
mov
cltd
add
add
sub
adc
inc
push
or
bts
pop
dec
adc
jmp
jo,pt
pop
movsb
je
mov
mov
fisubs
mov
hlt
mov
pop
adc
pop
pop
dec
pop
iret
xor
int3
xor
mov
ret
es
sbb
mov
je
shl
add
push
mov
mov
push
sbb
jo
rorb
rcrb
aas
dec
lods
jbe
cmp
push
pop
jno
mov
cmpb
jl
incb
hlt
and
dec
inc
dec
adc
adc
insb
xchg
xchg
lods
ja
xor
movsb
push
xchg
divb
pushl
pop
sbb
dec
push
xor
adc
sub
sbb
add
aaa
sub
cmp
mov
push
shl
xchg
add
pop
js
rcr
mov
or
xor
dec
in
add
xchg
xchg
rol
imul
aaa
lods
stc
or
xor
ret
inc
mov
sbb
xor
xchg
jmp
adc
xchg
pop
nop
add
lds
lcall
in
popa
sbb
push
scas
inc
or
mov
adc
repz
je
mov
mov
cmp
hlt
jns
cmp
or
push
das
adc
enter
out
mov
es
test
or
adc
sub
stos
fs
dec
adc
dec
lods
fsub
test
test
gs
dec
cmc
add
mov
mov
hlt
sub
sub
add
mov
pop
push
movsb
or
sbb
cmp
inc
pop
inc
aam
mov
rcrl
inc
sub
int3
add
pop
in
scas
dec
cmpsl
xchg
shrb
jle
push
push
sub
push
cld
sbb
lock
das
int
add
lds
sub
sub
sahf
scas
loop
mov
and
pop
les
sbb
jp
pop
or
add
inc
inc
sub
push
into
in
push
sbb
test
xchg
or
add
loope
xchg
ret
mov
push
xchg
jmp
in
fisubrl
xor
push
push
outsb
jae
sbb
mov
jb
push
jne
inc
iret
dec
or
jmp
cld
jge
mov
shr
jl
jg
test
pop
jmp
lahf
movsl
inc
inc
push
xchg
add
stos
mov
loop
daa
add
adcb
mov
or
xor
lods
push
add
xor
cmpsl
and
mov
xchg
adc
push
sbb
xlat
inc
inc
mov
ret
jbe
in
and
add
out
mov
cmp
test
and
push
cwtl
pushf
fiaddl
dec
je
les
cmp
sub
lret
sbb
mov
mov
daa
pusha
mov
mov
xor
mov
mov
xor
jb
jmp
push
mov
jo
test
pop
test
repz
je
inc
dec
push
push
adc
jb
rcll
divl
mov
icebp
inc
cmpsb
jo
add
stos
enter
or
sub
push
push
and
dec
cltd
sub
in
push
jne
sbb
mov
into
pusha
mov
pushf
or
adc
jne
xchg
sub
js
push
push
add
test
pop
push
add
iret
jl
lcall
jmp
mov
or
shll
sub
pop
loope
sub
cmp
push
cmp
rcrl
push
into
sub
mov
or
dec
mov
jo
hlt
pop
push
fisubrs
lods
sbb
mov
ss
xor
lret
into
test
cmp
or
xchg
aaa
sub
mov
push
daa
push
in
xchg
enter
scas
out
das
or
inc
sbb
mov
cli
movsl
popf
into
add
aam
aas
add
lea
sbb
pop
cmp
mov
shr
imul
ret
fistpl
lea
and
std
std
fidivrs
jmp
or
out
shr
or
push
ds
test
sub
es
inc
aas
xchg
rol
inc
je
xchg
push
or
adc
inc
lock
add
push
inc
mov
push
or
jae
dec
pop
sbb
or
mov
xchg
dec
int3
mov
dec
les
stos
jne
mov
or
or
mov
sbb
andb
pop
sti
mov
pop
add
sarl
adc
mov
cmp
cmp
clc
jmp
xor
popf
fiaddl
loop
or
add
enter
test
out
fidivrl
sub
movb
push
in
out
out
sahf
call
in
mov
sti
out
aas
xlat
shlb
mov
sub
or
test
push
add
adc
jne
dec
mov
xor
add
add
pop
add
inc
mov
data16
sbb
ficoml
mov
test
jmp
lods
inc
ds
test
sub
call
rcrl
and
sbb
push
ror
arpl
add
jg
mov
push
loope
mov
cli
mov
fs
adc
sbb
test
or
cmp
addl
leave
dec
mov
lea
sar
aad
mov
fsubrs
imul
lock
cli
aas
fwait
push
fisttpl
xor
adc
test
sbb
mov
je
dec
push
test
imul
std
jo
call
sbb
push
adc
data16
mov
mov
icebp
pop
dec
fldl
into
pop
neg
imul
cmp
add
and
mov
push
pusha
jbe
pushf
lea
or
jns
sbb
mov
loope
fdivr
mov
push
mov
fwait
enter
add
or
dec
adc
inc
adc
ud0
dec
jmp
sahf
inc
incw
push
adc
incb
sub
sub
mov
mov
sbb
mov
pop
hlt
flds
adc
andb
roll
mov
and
pop
dec
scas
rclb
aaa
in
ss
fisubl
or
mov
or
out
cmp
and
imul
loopne
jg
std
mov
aas
ja
sub
jno
cmp
mov
xchg
sbb
test
dec
or
cmp
cmpb
push
mov
dec
out
ljmp
cmp
cmp
call
orl
cmpsb
push
sbb
cld
push
or
xchg
jmp
es
jmp
dec
xchg
or
push
inc
setae
add
arpl
or
add
cmpsb
dec
xchg
push
adc
sar
xor
push
pusha
pop
mov
add
enter
imul
adc
pushf
cwtl
fdiv
enter
rolb
and
push
popf
and
lods
fbstp
sti
cmp
or
sub
push
push
cmp
insb
add
fdivrs
add
push
xchg
add
repz
dec
ljmp
ss
faddl
dec
ret
fcoml
push
cmp
cmpsb
sub
fiadds
adc
push
dec
je
sbb
push
or
adc
test
xor
jmp
loop
sub
push
jae
add
jge
mov
sub
or
push
sbb
jmp
mov
ret
xor
or
push
insb
add
add
or
cmpsl
xchg
push
mov
jmp
mov
arpl
mov
dec
leave
add
and
or
dec
cmpsl
ret
push
dec
add
and
daa
lea
fnstsw
bound
xor
cmp
and
jle
inc
dec
test
fldcw
jl
test
std
pop
mov
and
or
ficoml
mov
sbb
jbe
xor
cmpsb
xchg
adc
pop
pop
cmp
and
inc
mov
out
mov
cli
dec
and
mov
aam
loopne
mov
cmpsl
mov
mov
pop
xlat
push
icebp
sbb
ds
dec
mov
push
fmuls
inc
out
or
sbb
push
mov
cmp
nop
fsubrp
jl
pop
orl
fisubrs
popa
sarb
cmp
mov
pop
jmp
add
pop
notb
sub
loopne
add
ret
push
jnp
fistps
add
orb
in
mov
push
mov
push
fadd
jg
ret
test
or
inc
push
or
inc
push
mov
pop
pop
int
inc
out
in
shlb
int3
int3
data16
cs
daa
addb
insb
or
mov
das
add
and
mov
sbb
mov
orb
mov
pop
or
mov
fiadds
push
pop
xchg
mov
icebp
and
jb
inc
inc
mov
sbbb
mov
scas
inc
inc
mov
repnz
cltd
sub
sbb
adc
out
add
sbb
xor
and
xor
movsb
cmc
out
adc
sbb
jmp
lahf
and
mov
movsl
test
lahf
inc
cmp
nop
hlt
sub
movsbl
push
mov
inc
add
in
cltd
or
pop
out
out
mov
or
xchg
or
inc
pop
bound
test
push
clc
jl
xor
dec
les
dec
pop
dec
call
dec
pop
add
push
or
xor
pop
dec
out
lods
gs
cs
cltd
in
cmpb
adc
testl
aam
inc
idivl
or
jmp
lock
icebp
out
test
push
adcb
sub
je
sbb
mov
popa
mov
sbb
in
jb
inc
int3
jmp
shrb
fdivrs
dec
clc
jg
xor
shll
and
pusha
in
les
push
rclb
mov
jb
inc
jmp
add
or
sti
in
test
jne
sbb
adc
movsb
cmp
xor
xor
or
sub
xchg
inc
cmp
pop
dec
pusha
dec
out
pop
and
shlb
add
mov
cld
jmp
cmp
je
enter
lcall
add
xorb
adc
sub
sbb
and
shll
mov
data16
push
cmpb
jne
xchg
loopne
ret
aaa
push
jecxz
cld
push
or
test
sbb
and
jp
add
jne
adcl
outsl
pop
jmp
leave
xchg
sbb
xor
daa
fstpl
inc
je
xor
sbb
adc
mov
test
add
add
imul
and
arpl
sbb
mov
add
loope
sub
adc
pcmpeqw
xchg
xchg
inc
sub
sub
xorl
nop
adc
xor
sub
notb
and
or
push
mov
jo
mov
adc
testl
jmp
jne
outsl
imul
idivl
movsb
sub
adc
inc
cwtl
add
push
xor
jne
mov
scas
fadd
adc
orb
adc
insb
xchg
test
pop
lea
dec
add
cld
jle
mov
mov
mov
lcall
inc
lds
push
xor
hlt
xor
mov
insl
mov
sub
add
lock
lods
sti
loopne
cwtl
push
jmp
outsl
and
push
dec
sub
outsb
testl
out
jmp
aas
into
gs
dec
mov
stos
mov
pop
jge
inc
sbb
mov
aad
and
stc
cwtl
repz
sub
pushl
jno
gs
or
inc
ja
push
hlt
add
les
inc
adc
dec
adc
inc
push
xor
fiadds
mov
inc
jge
xchg
push
xor
fidivs
movsb
lods
out
pushf
pop
aam
mov
adc
push
sti
adcb
jo
inc
push
mov
pop
pop
ja
dec
insb
ljmp
or
or
pop
in
and
pusha
push
sub
xchg
push
pop
push
xchg
dec
fimuls
and
jmp
test
lock
aam
inc
sub
add
pop
hlt
pop
js
inc
insb
add
or
or
cmc
movsl
inc
rcrl
js
jl
adc
xor
inc
pusha
and
sbb
cli
and
jne
adc
push
mov
sbb
rcr
movsb
lahf
out
fs
mov
lods
add
push
and
ret
pop
leave
les
mov
push
and
lods
js
shrb
repz
push
and
xchg
or
mov
push
test
cmp
push
pop
mov
xor
add
fildl
shrl
leave
out
xchg
push
add
push
dec
lcall
js
dec
add
and
inc
and
stc
mov
leave
rolb
jo
aam
lods
xlat
nop
leave
adc
lods
aad
sub
pusha
inc
or
mov
shl
xchg
xchg
xchg
lods
sbb
sbb
pop
loop
adc
scas
add
jne
mov
mov
dec
push
dec
sbb
test
pop
xor
fldenv
and
cli
add
jbe
cmp
add
mov
mov
adc
addl
out
imul
pop
inc
cli
arpl
sbb
dec
and
xorl
add
fs
jae
or
int3
gs
or
das
dec
cmpsl
push
out
call
imulb
mov
mov
xor
or
fnsave
xchg
lods
ja
mov
jge
insl
adc
js
js
out
imul
inc
sarl
mov
or
xchg
enter
cltd
cmpsl
or
add
jge
dec
sarb
or
push
ret
ret
std
or
leave
add
xchg
sbb
adc
push
xchg
test
push
stc
jne
mov
push
cmp
pop
mov
cmp
shrb
or
fsubl
xor
imul
in
dec
push
adc
sbb
lods
mov
pop
cmp
sahf
das
sbb
jns
inc
shlb
push
cltd
mov
pop
jmp
aam
pop
xchg
mov
xor
mov
mov
and
xchg
pop
movl
icebp
xchg
lcall
into
sub
mov
mov
dec
xchg
or
or
and
or
pop
popl
or
push
cwtl
scas
stos
push
push
repnz
outsl
pop
xchg
clc
imul
movl
cmpsl
imul
jo
cmp
cs
jo
int3
stos
mov
and
sub
test
xchg
push
sub
cmp
push
adc
dec
pop
addl
jae
mov
dec
add
xor
insl
subb
sub
sbb
push
lods
xor
add
call
dec
rorl
xchg
dec
ds
mov
and
push
pop
mov
xchg
or
or
fisttps
add
outsb
popf
insb
pop
jae
push
inc
jl
shr
sub
push
add
or
or
push
inc
xchg
and
inc
or
xor
les
cwtl
xchg
pop
sub
popa
lea
clc
or
adc
pushf
hlt
add
movsb
and
adc
xor
fistpll
enter
xchg
lahf
ror
jl
push
push
lea
rcr
rolb
push
xchg
push
adc
cmp
or
sbb
movsl
xor
mov
inc
mov
inc
mov
test
push
mov
repnz
fcom
push
jp
jle
je
lahf
sbb
sbb
inc
les
adc
mov
pop
or
inc
es
inc
mov
inc
sahf
fstpl
or
lods
jnp
pop
hlt
inc
test
sbb
mov
push
pushf
nop
cwtl
adc
dec
dec
mov
xchg
test
cmp
cli
add
dec
ficoms
push
add
add
sub
ss
or
orb
push
das
inc
pop
dec
iret
aas
mov
add
jne
sahf
sub
in
jmp
cmp
movsb
and
out
dec
aad
ljmp
cmp
stos
xor
sbb
mov
test
push
sti
cmp
sbb
adc
lret
adc
mov
mov
scas
xlat
das
jnp
pop
sahf
sub
xchg
sar
push
xchg
or
or
test
mov
jmp
fistpll
popl
rcrb
lods
aaa
xchg
sub
mov
jge
pop
int
or
xchg
pop
sbb
jb
jb
add
adc
xchg
push
push
mov
les
stc
sbb
cmpsl
sub
loop
int3
les
les
jmp
hlt
mov
sub
inc
or
mov
dec
sub
or
dec
jle
inc
cs
jl
int
lds
js
jp
fcoms
push
in
les
ret
adc
cmp
not
aaa
adc
add
fistpl
lret
fmul
sub
add
or
imul
sub
cwtl
jp
or
in
mov
sbb
js
cmpsb
jge
repz
push
shr
add
adc
xor
fsubrs
xchg
daa
xchg
or
lock
add
in
cmp
and
in
fdivs
or
lock
arpl
in
fsts
orl
int
lods
enter
sub
inc
pop
clc
adc
ret
fcoms
pusha
add
sbb
popf
je
ret
and
mov
add
adc
cmp
lock
lock
pushf
cmp
adc
cmp
add
fstpt
adc
outsl
pusha
leave
addr16
data16
or
arpl
add
or
pop
lock
add
enter
inc
push
ret
xchg
mulb
mov
das
sbbb
or
andl
mov
outsb
dec
cmp
in
push
xorb
xor
aaa
mov
in
xor
sahf
xor
pop
and
pop
pop
push
pop
or
stos
cmpsl
jae
cmp
adc
push
sbbb
lock
ss
popa
loopne
pop
punpcklbw
aaa
push
or
or
rol
fsts
dec
add
pusha
pop
inc
sub
cmpl
je
xor
mov
out
sahf
mov
xor
fiaddl
fdivs
orl
or
fstpl
pusha
sbb
int
add
push
es
and
push
repnz
ret
rol
jb
pop
mov
add
sbb
xchg
xor
dec
insl
xor
xlat
test
out
pop
or
loopne
test
pop
add
sbb
ja
or
icebp
and
aam
ja
jae
rol
call
add
je
ret
or
movsl
cwtl
or
fnsave
test
push
sub
or
mov
pop
lea
rep
ss
jne
add
pop
add
xor
clc
je
dec
cmp
pop
push
jae
mov
shl
jae
out
mov
cmp
jno
xchg
adc
fwait
ds
aam
mov
adc
inc
push
jmp
bound
xor
popa
mov
enter
push
roll
xchg
or
push
mov
mov
xor
pop
mov
sub
sub
sub
cld
sbb
cmp
pop
or
or
cwtl
push
push
sub
aam
popf
xchg
js
mov
rorb
mov
push
add
es
rclb
daa
stos
inc
add
clc
pop
daa
add
lock
lcall
sub
and
subb
loope
and
imul
dec
rorb
call
jno
xchg
fcmove
jmp
sub
adc
adc
push
xor
pop
cmpb
shl
sub
addr16
adc
cmp
jb
or
cs
dec
fnstcw
sbb
imul
dec
adc
cmp
sub
adc
jmp
jecxz
mov
pop
shr
lods
adc
test
mov
mov
cmpsl
push
mov
outsb
ss
xor
or
fistl
subb
sahf
or
sub
and
fiadds
xor
stos
in
xchg
pop
je
add
fsin
enter
sub
push
mov
cmp
sbb
sbb
decl
pop
in
leave
insl
mov
or
inc
add
add
sub
pop
leave
add
add
sub
jb
pop
js
push
pushf
movsl
add
dec
insl
mov
jns
aad
mov
shlb
lret
loop
pop
rdmsr
inc
fldt
fistpll
hlt
fwait
push
jecxz
push
out
push
shll
subl
stos
lret
out
mov
cmp
pop
sbb
xchg
pop
jp
sarl
enter
push
cmp
jno
inc
xchg
add
jne
xor
into
push
xor
popf
rcr
mov
test
sub
push
and
xlat
mov
fisttps
dec
adcl
fsubrs
push
and
or
push
shlb
pop
push
daa
dec
cld
rcrl
mov
add
dec
add
mov
xor
mov
jl
cmp
adc
jmp
push
jp
nopl
lock
push
dec
subl
shl
jb
and
scas
scas
stos
daa
mov
stos
sbb
xor
in
add
sub
mov
paddq
lea
xchg
xorb
dec
mov
add
movsb
or
ret
jno
add
sub
sub
xchg
ret
es
or
push
and
or
sbb
enter
adc
add
mov
inc
or
sbb
leave
inc
es
mov
sbb
mov
inc
fs
ljmp
or
pusha
in
jmp
inc
push
repnz
flds
push
push
nop
aaa
sbb
in
cmp
xlat
in
inc
or
dec
xor
js
xor
mov
pop
sbb
sub
add
and
push
sbb
jl
add
inc
outsl
shll
sbb
and
push
fwait
imul
add
jmp
jae
and
adc
and
and
and
cli
movsl
push
scas
stc
cmp
adc
int
loope
push
hlt
mov
arpl
inc
adc
xor
sbb
mov
xorb
dec
fldl2e
push
stos
xchg
rcrb
je
lcall
cmp
or
loope
push
rclb
stc
xchg
aad
iret
sarl
pusha
shrl
jmp
xor
push
in
ret
insl
inc
and
or
or
inc
push
fiaddl
addb
popa
js
fstpt
adc
aas
stos
push
mov
pop
repnz
and
jg
loop
adc
shrl
jecxz
mov
inc
or
mov
pop
sbb
lea
pop
enter
inc
mov
jns
sbb
inc
fmull
add
repnz
js
js
and
pop
push
dec
push
xchg
pop
aaa
mov
leave
inc
icebp
or
jno
push
out
add
lock
loop
test
and
ret
push
mov
and
push
lea
aas
inc
mov
inc
fwait
or
lods
lds
arpl
sbb
negb
push
inc
mov
jbe
xchg
fistpll
adc
fdivrs
fstsw
sub
push
cmp
and
dec
mov
stos
ret
rorb
nop
hlt
jl
inc
sub
orl
or
adc
loopne
mov
adc
sbb
xorb
or
pop
bound
add
dec
xor
repz
fiadds
daa
sahf
pusha
bound
or
imul
rcrb
xor
add
popa
nop
and
mov
push
es
mov
ja
adc
mov
adc
addb
cmpsb
xor
pop
test
jne
push
es
add
mov
jb
insl
mov
and
out
loop
adc
pop
jmp
jne
test
xor
dec
lahf
add
adc
sub
xchg
xor
jbe
test
cmp
push
sub
je
stos
add
loopne
push
mov
insb
and
inc
add
mov
sub
inc
dec
jg
jno
dec
add
pop
pop
stos
sub
leave
addl
or
shl
and
xchg
mov
mov
ret
mov
fists
mov
movsl
jno
dec
movb
sahf
mov
add
les
push
loopne
repz
clc
aad
push
or
cmp
and
fs
xchg
cmp
jp
cmpsl
inc
xor
aad
bound
lea
dec
push
insb
nop
adc
sahf
les
inc
mov
cli
jecxz
mov
sti
repz
jp
mov
or
enter
inc
adc
push
adcb
add
jp
xchg
clc
xchg
sbb
sbb
push
xchg
js
push
or
jecxz
cwtl
and
hlt
inc
mov
add
icebp
jbe,pt
mov
rolb
mov
push
ds
mov
push
sub
add
or
repz
loopne
imul
test
mov
inc
pop
inc
rcrl
outsb
cmp
cmp
sbb
pop
adc
cmp
xor
mov
pusha
sub
ror
scas
or
and
sbb
out
cmp
pop
lds
inc
xor
inc
xor
pop
mov
shrb
jbe
imul
pop
lea
mov
jmp
inc
cmp
daa
outsb
fs
pop
jne
pop
cmpsb
inc
outsl
xorb
and
es
in
fisubrs
inc
cs
fmuls
or
inc
ds
jae
lock
call
mov
mov
imul
icebp
mov
fwait
mov
xor
mov
mov
scas
xchg
stos
add
xchg
add
mov
inc
jmp
pusha
inc
xchg
dec
add
lcall
xor
push
movb
jmp
mov
jae
add
or
push
insb
je
pop
pop
inc
or
cmp
push
push
pop
sbb
dec
or
dec
sahf
jmp
pushl
jae
dec
jp
jo
or
push
or
test
adc
mov
int3
push
mov
fdivs
or
outsl
sub
push
notl
inc
lea
adc
sti
jne
add
test
sbb
mov
pop
adc
cmpl
jl
loopne
hlt
cmc
and
mov
pushl
xor
mov
loop
dec
movsb
jmp
mov
ror
add
push
rorl
pop
shl
lcall
arpl
das
mov
add
bnd
add
cmc
cmpsl
push
sbb
add
fs
dec
pop
dec
addb
dec
or
andb
jge
jmp
push
jp
scas
xcrypt-cfb
cmpsl
mov
inc
hlt
shll
xchg
cs
inc
jmp
dec
in
and
pop
jo
add
es
aam
subb
jo
or
hlt
andb
sub
mov
inc
dec
ret
jge
movsb
inc
cmpsb
fcomi
ret
cmp
lods
push
push
shl
jbe
iret
fdivrl
push
jne
int
push
lahf
or
mov
pop
or
andl
dec
xor
jo
sub
xchg
sbb
dec
inc
inc
loope
xor
adc
lds
call
push
movsl
ss
ret
push
xchg
sub
aaa
ret
in
arpl
xchg
call
sbb
mov
lcall
jle
loopne
pop
jnp
jo
out
dec
test
inc
roll
adc
push
add
stc
cli
adc
in
cmp
nop
pop
or
daa
jno
mov
cli
addl
pop
sbb
mov
pop
mov
ret
rolb
jne
pushfw
or
push
push
into
adc
cmp
inc
loopne
popa
push
push
mov
movsl
mov
clc
mov
sbb
loope
loopne
addl
xlat
inc
cmp
jmp
leave
pop
cwtl
xchg
les
test
out
push
xchg
add
loope
mov
xor
jp
push
addb
push
push
je
jp
jns,pn
push
aaa
push
inc
rcll
lock
or
jmp
add
adc
imul
imulb
push
add
jnp
push
addl
enter
mov
or
dec
loope
xchg
and
jmp
jb
mov
sub
jmp
sub
sbb
loope
push
data16
cmc
xchg
sub
loop
jo
xchg
test
pop
or
pop
and
push
pushl
xchg
add
inc
popa
call
cmpsl
nop
inc
lret
jno
push
lcall
dec
aaa
mov
notb
hlt
push
out
in
cltd
mov
jbe
loopne
sub
bound
test
mov
lea
jg
aam
jmp
cmp
jg
enter
shrl
push
or
mov
push
fsub
adc
jecxz
and
arpl
movsl
ljmp
sub
xor
mov
push
incl
jl
pop
mov
xor
sub
xchg
stos
or
ss
pop
push
xlat
inc
sub
test
mov
cmpsl
push
xchg
sbb
pop
fwait
jmp
pop
mov
or
push
xchg
pop
push
xor
xor
insb
or
enter
pop
inc
cld
orb
or
inc
test
repz
push
and
add
and
mov
lcall
adc
jmp
sbb
mov
imul
and
push
or
adc
pop
sbb
popa
xor
lock
or
add
or
or
movsb
lcall
xor
orl
daa
icebp
or
test
mov
ds
cmp
movsl
fimuls
cmp
sub
jmp
rcrb
das
mov
xchg
and
dec
cmp
lea
pushf
mov
mov
lock
xchg
clc
xchg
movsl
jo
and
dec
jno
aaa
dec
jbe
cli
pop
jne
xchg
jo
decl
sbb
adc
and
and
subl
imul
mov
pop
rolb
sub
xor
std
xchg
pop
or
lock
repz
sbb
dec
xchg
and
insb
sub
icebp
and
or
popf
insl
in
bound
or
stc
fwait
and
mov
add
add
sub
jbe
adc
adc
add
cld
or
cmp
outsl
clc
dec
or
xchg
or
inc
mov
xor
add
mov
dec
movsb
lea
push
adc
sarb
je
imul
iret
fs
jnp
es
fs
ja
mov
jne
mov
inc
jmp
inc
fwait
shrb
inc
and
jo
outsb
push
jecxz
xor
or
je
sub
or
pop
mov
fidivl
xor
clc
lcall
and
ljmp
pop
push
or
xchg
add
adc
xor
cltd
out
inc
inc
mov
add
mov
hlt
add
pop
lock
dec
mov
inc
sub
jnp
hlt
mov
sbb
pop
test
push
movsl
in
or
add
pop
cli
adc
dec
lods
mov
sub
pop
mov
movsb
or
sbb
ret
or
push
ret
or
add
nop
mov
je
aaa
jne
jno
pusha
mull
and
add
cmp
loope
cmpsb
pushf
pop
repnz
test
inc
and
or
pop
pop
mov
sbb
add
hlt
xchg
add
sbb
mov
push
dec
push
jg
jmp
inc
push
add
jge
pop
dec
outsb
mov
or
and
insl
gs
or
pop
add
cmpsb
push
orl
popa
and
add
ds
neg
clc
push
pop
push
sub
mov
and
pop
push
loop
pop
addr16
add
into
fsubrs
jnp
les
sarb
adc
pusha
sub
pop
aas
xchg
add
or
adc
mov
jmp
inc
xchg
xor
loopne
in
shl
cmp
lock
adc
popf
loop
xchg
lock
inc
divb
add
push
add
sub
sbb
imul
dec
sbb
push
test
leave
xchg
push
and
and
inc
jns
adc
mov
pusha
inc
sub
in
add
stos
pop
mov
or
pop
inc
das
mov
repnz
sarb
or
fiaddl
dec
inc
inc
adc
movsb
sarb
or
out
jle
mov
or
xor
mov
sub
mov
test
fstp
out
jo
adc
sbb
and
mov
adc
sbb
sbb
jl
out
in
add
push
add
inc
add
xchg
test
or
inc
ret
add
test
cmc
addl
jne
pop
jnp
sbb
aas
mov
and
dec
sub
add
or
das
sub
rorb
stc
adc
xchg
xchg
ret
adc
push
nop
adc
add
clc
sbb
push
aas
dec
dec
dec
xor
adc
sub
fadds
je
push
xor
dec
das
arpl
or
xchg
or
jne
enter
cmp
cmc
mov
push
ret
add
push
cli
inc
sbb
ret
repz
pop
sbb
push
inc
test
pop
push
js
push
sbb
and
jae
sarb
jge
fadds
fdivrp
jnp
jbe
orl
sbb
bound
mov
test
enter
push
popf
cmp
sub
adcb
inc
push
xchg
rclb
push
fdivl
and
add
cmp
bnd
psubsb
push
test
rolb
cwtl
aam
ret
cmpsl
push
cmp
into
add
mov
push
ret
testl
aaa
fsubrs
je
sarl
roll
sbb
xchg
add
mov
out
fcmovnb
jmp
adc
iret
fisttpl
jle
or
movsb
sub
mov
mov
add
push
enter
mov
sub
sub
loopne
aad
shr
inc
arpl
inc
xchg
adc
jno
daa
nop
jne
lret
sub
cmp
xor
sbb
sbb
or
lock
neg
cmc
dec
sub
push
adc
je
cld
push
jmp
dec
mov
cwtl
je
pushf
fdivrs
pop
jo
jnp
lcall
pushf
dec
add
mov
sub
loope
fsub
lods
sbb
push
sbb
popa
js
push
fldenv
inc
jp
movsb
ficoml
testb
call
pusha
jno
jae
hlt
cltd
sub
jl
xchg
and
mov
dec
push
sbb
fs
pop
pop
ja
pushf
lret
push
out
or
insb
cmp
mov
outsb
shlb
icebp
dec
jecxz
cmp
lahf
push
jno
sahf
lahf
dec
in
push
and
push
pop
fs
mov
mov
int
hlt
rol
mov
push
sahf
pusha
test
fisttpll
add
pop
or
stc
ret
add
pushf
push
add
sbb
sbb
dec
outsl
icebp
rclb
inc
or
pop
inc
jge
sub
or
push
sbb
push
push
daa
je
mov
rclb
jl
les
popf
js
ss
stc
inc
shll
push
pop
cmp
loopne
fdivp
pusha
movsb
lret
jmp
push
sbb
and
xlat
sbb
pop
enter
cmp
cltd
cmc
push
shll
push
mov
lock
dec
es
jnp
lods
daa
shlb
test
and
push
lock
add
mov
test
in
or
cmp
pop
cmp
xorb
sbb
adc
push
adc
jne
xor
adcb
popl
cmp
inc
sbb
push
je
out
push
popl
push
js
repz
inc
mov
int3
xchg
insb
sub
shlb
and
inc
mov
shrl
loope
and
scas
fcmovnbe
jbe
pop
lock
dec
call
cmp
push
and
popl
xchg
shlb
mov
sub
xor
inc
shll
and
xchg
pop
or
or
and
push
xchg
sub
cmc
ret
xchg
xchg
cmp
push
cld
jo
mov
push
pop
sub
clc
push
push
add
fcoms
push
shlb
inc
add
cs
mov
lret
dec
clts
subb
dec
and
mov
rcrl
sub
cltd
or
nop
fsubrs
push
mov
adc
push
icebp
sub
mov
mov
jne
lods
xlat
mov
or
cmp
mov
inc
inc
xchg
mov
pop
mov
adc
mov
test
pop
je
cmpw
hlt
and
rorb
mov
jbe
outsl
out
and
or
test
mov
roll
push
push
cltd
mov
int
ret
jge
push
xor
push
xchg
xchg
sarb
sub
hlt
and
popa
or
inc
cwtl
popf
pop
insb
dec
pop
pop
imul
shll
sti
out
mov
or
shlb
dec
imul
sub
and
std
ja,pn
rorb
adcl
adc
data16
jnp
dec
idivb
mov
dec
jnp
and
push
push
mov
xor
or
jnp
or
and
fdivs
or
and
or
jg
cmpsl
add
or
push
adc
pusha
mov
dec
gs
push
loopne
and
pop
jl
sahf
pop
fsubrs
loope
loope
pop
and
fisttpll
jbe
enter
loopne
dec
adc
sub
inc
adc
gs
leave
and
adc
push
push
add
movsb
or
rorb
aam
adc
ret
pop
add
cwtl
adc
in
add
mov
push
cs
sub
add
push
push
cs
push
aad
adc
push
push
or
cmpsb
repnz
push
adc
push
ja
mov
dec
lock
mov
hlt
jne
mov
push
jg
and
or
cwtl
ret
jb
stc
sti
and
inc
mov
add
lods
jmp
dec
data16
inc
jne
sbb
out
mov
testl
dec
mov
rolb
cld
cs
jcxz
or
xor
lods
mov
orb
lods
or
adc
pop
or
cld
aam
jne
imul
add
pushl
rorb
movsb
mov
and
and
mull
imull
incl
dec
jl
inc
test
push
cmp
andb
incl
add
inc
pusha
daa
insb
mov
int3
je
movsl
sbb
imul
xchg
adc
inc
cmp
cmp
add
cmp
sub
xor
into
call
pop
outsb
inc
push
mov
xchg
std
mov
xor
iret
sbb
pop
sub
je
cmp
inc
push
push
cmp
dec
jmp
fists
out
out
into
pop
or
xor
out
push
insb
pop
call
test
xlat
cmpsl
das
adc
dec
data16
add
pop
xor
mov
and
inc
cltd
xor
inc
data16
inc
inc
or
push
push
cmp
mov
add
fbstp
mov
insl
adc
add
dec
pop
jo
add
les
pop
imul
sbb
mov
leave
and
sahf
mov
sarb
pop
adc
les
sub
xchg
add
out
dec
inc
or
xchg
push
mov
and
clc
hlt
pop
sbb
dec
push
mov
or
add
xor
mov
cmp
movsl
xchg
ret
lds
and
xchg
int3
cmp
mov
add
fsubs
push
shll
cmp
shl
mov
cmp
and
jne
rcll
sbb
mov
adc
cmp
mov
sub
mov
sbb
mov
mov
sub
xchg
sbb
pop
orl
sahf
pop
jmp
xorb
adc
mov
jle
ss
popa
push
mov
in
push
push
push
add
aaa
cwtl
add
inc
fwait
jb
pusha
pop
cld
push
mov
cld
push
adc
xchg
push
or
and
mov
aas
in
adc
mov
push
stos
sahf
fiaddl
lock
lods
cmp
adc
or
inc
jns
sbb
call
push
add
dec
mov
mov
shll
and
cmp
xor
xchg
push
lods
mov
and
pushl
sbb
iret
lret
pop
mov
pushl
pushl
dec
insl
adc
rclb
icebp
add
mov
test
nop
jmp
daa
pop
add
mov
aad
in
scas
and
pop
sub
add
sub
lods
test
jmp
fadds
mov
cmp
inc
sub
xlat
inc
adc
movsb
push
push
test
lock
inc
and
and
lods
xchg
mov
adc
push
or
xor
mov
inc
xor
popa
jne
sub
ret
lods
popf
mov
xor
data16
loopne
jp
cli
and
cs
lock
test
xlat
clc
sbb
rcl
add
mov
int
test
mov
xchg
xor
lods
cmp
adcl
and
sahf
add
addr16
lock
add
xor
adc
dec
add
pop
push
cmpsl
mov
shl
push
inc
and
fistps
sub
sub
inc
fucomip
adc
lods
dec
push
and
arpl
xor
jne
mov
popf
int
cli
sbb
daa
daa
jno
push
add
jge
cmp
and
test
and
in
js
mov
jnp
dec
scas
sbb
mov
fld
or
pop
push
sub
dec
loope
je
shlb
or
pop
test
cmp
leave
fs
ret
fisubrl
jle
push
jne
in
pop
ja
cmp
loopne
daa
adc
mov
inc
mov
inc
es
arpl
cmpb
add
clc
xchg
and
rcll
and
jle
pop
sub
xor
dec
push
imul
aam
and
test
sub
fadd
xor
pop
sbb
daa
dec
xor
rolb
pop
clc
push
popa
imul
push
stos
shlb
sbb
sub
imul
mov
pushf
dec
pop
clc
dec
dec
test
lea
xlat
lret
int3
sub
xor
stos
mov
xchg
mov
mov
rorb
adc
subl
and
inc
sub
push
pushf
sub
out
mov
push
push
loopne,pn
pop
add
push
push
dec
sbb
push
ja
sbb
adc
push
jecxz
mov
cmp
or
imul
test
imul
mov
mov
cmp
and
repz
push
cs
xor
shll
sbb
mov
pop
cmp
jecxz
iret
aaa
hlt
clc
dec
das
jbe
je
dec
jne
inc
cmp
jmp
negl
jne
adc
jl
adc
dec
nop
mov
rcll
push
push
push
and
or
lret
or
outsl
int
popf
enter
pop
push
and
test
and
scas
and
cltd
mov
xor
cmp
add
xchg
mov
aam
xor
fs
add
cs
dec
push
dec
sub
jbe
mov
lods
pop
insb
sbb
jnp
jmp
aaa
nop
mov
or
nop
mov
pop
push
pop
mull
jmp
push
loope
add
dec
add
push
insb
pop
loope
or
adc
ret
aaa
jmp
or
fcomps
jne
int
clc
orb
dec
addl
xor
adc
fcompl
inc
sbb
push
lea
inc
out
pop
mov
xorb
jp
jb
pop
shlb
iret
lock
subb
xor
adc
jg
mov
shr
pusha
inc
add
mov
push
dec
pop
mov
and
inc
call
mov
pop
nop
sbb
xor
scas
jo
mov
mov
pop
lret
dec
mov
sub
sub
add
add
pop
pop
das
pushf
fdivrl
pop
pop
ret
roll
push
addl
pop
cmp
xchg
jne
and
sbb
mov
loop
xlat
dec
cli
and
and
add
inc
jp
addl
jo
orl
mov
andb
dec
gs
adc
addr16
sbb
inc
lods
and
or
inc
mov
mov
movsb
shrb
pop
add
dec
or
nop
insl
imul
adc
xchg
lahf
rorb
push
mov
cmp
mov
and
and
lds
sbb
sbb
adc
push
adcb
faddl
jmp
sti
jmp
cs
or
sub
dec
rorb
mov
push
je
jmp
ret
or
jo
lahf
cmp
xlat
jl
adc
pop
dec
lods
sahf
inc
jmp
or
or
rolb
xchg
inc
or
pop
lods
ds
mov
adc
pop
arpl
ss
xor
pop
inc
cli
sbb
mov
fldt
push
ret
mov
push
jle
mov
insl
std
mov
mov
push
push
mov
mov
int3
mov
rcr
push
xor
push
dec
rcll
add
fs
pop
or
js
pop
sbb
cs
sbb
push
stos
adc
adc
js
push
repnz
push
aaa
add
add
scas
ret
es
cmp
and
pusha
add
push
ret
orl
jl
arpl
lock
hlt
js
clc
and
xchg
test
ret
dec
add
cmc
inc
test
mov
sahf
test
sub
push
hlt
and
mov
mov
push
iret
xor
adc
push
ja
adc
outsb
hlt
push
in
je
mov
sub
pop
addr16
push
push
adc
sbb
aaa
cli
dec
fadds
push
outsb
inc
jmp
out
sub
adc
faddl
sub
in
xchg
add
pop
rclb
icebp
sub
or
xchg
rcll
cmp
inc
add
cmc
adcb
or
sub
cmp
sbb
adc
push
add
divb
adc
ja
out
xor
jl
insb
pop
adc
bound
mov
loopne
mov
dec
imul
sub
sbb
cld
mov
inc
imul
pop
push
push
lods
pop
add
mov
sti
xchg
sub
cmp
xor
js
push
or
ret
mov
adc
subb
das
push
adc
pop
pop
lods
push
mul
jbe
dec
jno
test
add
inc
push
loopne
dec
push
pop
push
adc
stos
lea
pusha
int
sub
ret
push
rcr
push
jo
fcmove
push
data16
mov
push
outsl
push
mov
js
push
or
jmp
add
pop
cmp
mov
jne
cmp
add
jbe
sbb
push
or
pop
inc
test
xor
cmp
into
dec
inc
xlat
into
test
je
sub
movsb
mov
jp
lret
sbb
inc
aaa
lods
mov
cmp
inc
adc
sub
pop
movsl
jmp
dec
add
cmpsl
and
or
adc
inc
test
push
jne
pop
addr16
mov
ror
shrb
inc
add
sbb
jns
sbb
pop
mov
sub
jo
lock
pop
das
dec
sahf
ja
and
jae
ljmp
mov
adc
mov
sub
lods
insb
mov
sbb
xor
lock
sbb
pusha
sub
pop
push
jne
cltd
shlb
pop
adc
testb
inc
jge
jmp
push
push
fcos
roll
pusha
fsubr
sbb
mov
push
add
loopne
cs
andb
fistl
add
jg
jo
xor
mov
dec
mov
jne
outsl
out
jmp
sbb
jmp
popf
sbb
jbe
pop
push
ja
inc
sbb
adc
fldl
push
and
push
xchg
sub
popa
out
and
pop
rcrb
pop
inc
aaa
and
cmp
stc
xchg
sbb
idivb
xchg
in
mov
mov
jmp
jnp
inc
jmp
lock
or
into
stos
aas
mov
push
adc
imul
cmp
xor
pop
pop
pusha
inc
movsb
xchg
add
sub
maxps
jmp
or
out
mov
jmp
sub
jne
or
sahf
cmp
sub
dec
mov
xchg
dec
and
cli
push
ss
jmp
sbb
add
lds
cmp
push
xlat
xor
lahf
out
mov
push
and
stc
data16
test
push
and
into
push
xlat
xlat
insl
dec
repz
and
icebp
pop
pop
decl
cmp
repz
sbb
push
popa
pushf
cmp
repz
lea
adc
aam
loope
pop
and
jge
les
push
push
dec
dec
int
jo
fs
out
out
push
mov
adcl
xchg
mov
pop
andl
mov
sub
test
es
mov
cmp
data16
push
adc
and
stos
out
adc
incb
ds
add
push
sub
lret
adc
add
je
or
in
xor
call
lds
push
lock
ror
cwtl
inc
or
or
stos
iret
or
inc
dec
xchg
sbb
test
mov
cmpsb
or
leave
push
xor
mov
pop
test
mov
pop
repnz
fildll
addr16
jb
xor
sub
leave
les
mov
or
rol
pusha
adc
jnp
sbb
pop
fildl
ss
cmpsb
push
daa
mov
scas
or
or
add
inc
dec
shrb
pop
push
xor
jo
pop
cli
sbb
adc
push
xor
repnz
adc
sbb
pop
clc
push
clc
test
arpl
lea
inc
and
mov
add
cmc
add
pusha
pop
adc
movsb
add
inc
push
or
lods
or
sub
xor
xor
cmp
mov
xchg
add
jne
ret
pop
cmp
xor
bound
jno
arpl
dec
jmp
and
or
or
shlb
mov
push
push
cmp
or
fbld
aad
insl
inc
data16
sbb
xor
push
adc
and
cli
std
cltd
stc
sbb
inc
pop
add
movsb
iret
adc
je
dec
push
into
jmp
cmp
pop
xorl
lret
mov
inc
sti
xor
fwait
add
add
mov
mov
or
shlb
pop
shrl
and
pop
mov
stos
test
sub
inc
sbb
rcrb
das
sub
and
and
xchg
push
loope
sub
lock
aas
shrl
cmpl
aaa
add
cmpl
dec
pushf
dec
cmp
imulb
loop
add
rclb
gs
jo
mov
orb
and
pushw
inc
push
add
xor
pushf
cli
test
ret
loop
mov
pop
adc
fisttpll
push
imul
ja
imul
je
xor
ja
xchg
cmp
mov
daa
call
out
mov
push
fwait
test
cmp
pop
jno
mov
sbb
xchg
and
movb
hlt
js
and
sub
sbbb
das
jbe
or
sbb
dec
jne
add
fmull
push
test
push
add
push
dec
mov
or
scas
repnz
fldt
adc
rolb
cmp
pop
je
mov
fs
adc
sub
cmp
jbe
dec
and
adc
pop
lea
js
jmp
cmp
sub
lods
andb
add
and
adc
aas
xor
outsb
add
aaa
cmp
into
data16
xor
add
or
push
ud1
pop
adc
lods
sbb
inc
pop
ret
or
movsb
inc
push
mov
add
fldl
mov
sub
popa
and
dec
sbb
mov
and
cmp
dec
inc
cmp
adc
sti
adc
jns
sti
xchg
lahf
lock
jb
push
inc
js
and
xor
lods
pop
dec
lret
imulb
sbb
insl
add
das
cli
xor
sbb
mov
inc
loope
or
daa
arpl
das
cmp
and
or
adc
pop
and
adc
push
sbb
mov
push
add
xchg
or
or
cmpsb
dec
insl
xchg
mov
xor
or
dec
ds
inc
push
xchg
daa
adc
mov
ret
add
cld
fldenv
jmp
sbb
sarl
jecxz
push
jmp
mov
bound
jae
pop
add
fiaddl
push
lcall
lods
fmul
fmull
cmp
enter
pop
leave
push
orb
push
imul
lds
leave
shr
and
dec
add
sbb
add
pop
dec
ret
ret
push
xor
popa
loopne
jmp
cltd
adc
and
push
mov
scas
dec
or
loope
and
xorb
pop
or
pusha
lahf
fimull
call
add
pushf
test
call
and
cli
lea
xchg
cmp
xchg
dec
loop
or
push
inc
or
daa
mov
fdivrs
push
xor
outsl
shlb
insl
call
push
addr16
jno
and
int3
pop
popa
pop
sbb
pusha
jecxz
lock
dec
notb
pop
jne
sub
xor
inc
pushl
and
leave
add
daa
movsl
push
push
sub
clc
pop
aaa
test
rorl
cmp
lock
pop
adc
pop
or
adc
je
and
pop
add
inc
add
dec
mov
mull
fisttpll
pop
dec
mov
sub
adc
jmp
jp
push
jae
mov
fcmove
or
mov
fmull
movsl
sub
mov
cmpsb
mov
out
orl
or
ljmp
sub
xor
add
cmp
stos
and
pop
adc
stc
out
out
adc
ret
add
sbb
sub
cmp
call
adcl
pop
outsl
lods
inc
nop
cmp
jne
xor
subb
in
cmp
jle
js
inc
mov
in
inc
add
add
clc
cmc
and
and
int
xor
inc
nop
sbb
jl
subl
adcb
and
test
xlat
mov
add
sbb
sbb
out
pop
sti
add
xlat
inc
inc
sbb
or
test
cmp
cmp
or
push
adc
dec
xorb
imul
push
cmp
lock
scas
mov
jo
int3
add
add
cltd
adc
push
or
sbb
add
add
or
je
fcom
mov
sbb
push
adc
adc
mov
fs
or
shll
rcl
inc
xor
mov
hlt
jb
or
xchg
mov
les
sub
outsb
icebp
add
insb
sbb
adc
adc
xchg
xchg
adc
pop
ret
out
jno
jae
dec
dec
fs
fwait
icebp
lds
je
xor
je
adc
xorb
jns
dec
mov
jne
sub
dec
iret
gs
xor
js
inc
cmp
xchg
call
jne
ss
push
dec
add
das
sbb
push
ds
repz
sbb
test
xor
je
and
push
das
shll
lea
jge
push
inc
jne
fnsave
add
in
data16
push
mov
icebp
cmp
lock
ja
lock
andl
les
xchg
mov
xor
jb
jge
inc
sub
mov
ficoml
adc
push
and
sbb
nop
sbb
dec
mov
xor
adc
hlt
lock
inc
add
xor
mov
arpl
push
in
insb
js
xor
int3
mov
je
lods
or
iret
or
daa
mov
mov
shlb
idivb
test
dec
das
sarb
pop
push
pop
adcl
jmp
icebp
rolb
pop
addr16
jmp
aaa
or
dec
shlb
incb
pop
aaa
fwait
xor
mov
not
and
cmp
pop
jno
fcomps
push
cld
push
adcb
sbb
loopne
rolb
mov
dec
scas
adc
movl
enter
cmp
or
pop
orb
and
dec
inc
add
testb
and
mov
fisubl
aas
enter
xor
jge
ljmp
push
loopne
ss
dec
add
push
outsb
pop
sbb
aas
lock
sub
mov
or
push
sbb
mov
dec
push
dec
inc
cmc
or
popa
loopne
and
cs
idivl
xor
aas
adc
mov
jns
lret
pop
dec
bnd
mov
push
dec
and
add
push
mov
mov
push
cmp
fisttpll
lcall
shrb
and
lods
add
xor
pop
enter
inc
or
addb
clc
test
mov
and
xor
add
rcrl
or
rolb
and
mov
rclb
inc
daa
subb
and
push
or
pop
adcl
jmp
pop
push
add
ret
xor
mov
pushf
test
imul
scas
xchg
push
test
xchg
push
aaa
shrl
jo
daa
mov
mov
dec
push
shlb
imul
cmp
inc
dec
ret
push
xor
jno
dec
add
inc
dec
cltd
sbb
sbb
sub
rclb
stos
push
and
jno
xor
stos
popa
push
sub
mov
fdivrl
pop
xor
pop
push
ret
push
incl
and
xor
dec
es
xlat
inc
and
cmp
ds
mov
loope
add
sbb
pop
cmp
xchg
add
xor
scas
clc
andb
sbb
or
lock
cmp
ret
inc
bound
lock
fs
je
cmp
dec
xchg
sub
std
test
adc
push
js
popa
xor
dec
cmpsb
ret
jl
movnti
xchg
push
shrl
xchg
test
pop
push
inc
adc
test
orl
lahf
and
inc
sub
sbb
adc
cmc
and
sbb
icebp
lods
mov
mov
scas
andl
dec
jns
movsb
xor
popl
andb
add
mov
push
adc
popa
inc
cs
jne
outsb
or
inc
add
mov
jle
adc
push
scas
mov
dec
fsubl
shl
add
cmp
push
in
loope
and
inc
loopne
sti
sub
add
test
mov
adc
das
mov
mov
or
aas
push
es
or
xor
push
mov
xchg
push
fs
rolb
jle
arpl
addb
adc
test
add
mov
push
std
sub
inc
or
pop
mov
pop
xor
push
out
sub
mov
push
mov
pop
add
and
pop
or
repz
sbb
lock
dec
negb
sub
mov
cmp
les
adc
shr
xor
hlt
sub
and
add
aam
or
xchg
pop
jle
mov
inc
pusha
outsb
and
sbb
fs
push
jg
mov
andb
mov
and
out
mov
cmp
andl
mov
adc
mov
and
or
call
lcall
stos
xchg
inc
jg
push
fisubl
sbb
repz
sub
ja
cmp
leave
sahf
repnz
lds
test
loop
imul
lahf
inc
xor
pop
pop
push
insb
sbb
fisubrl
je
sub
je
insb
push
cmp
lcall
adc
lock
insb
mov
add
test
mov
push
stos
pop
sti
adc
jne
lea
mov
push
cmp
jmp
pop
cmc
or
push
lahf
icebp
jg
push
mov
ss
fs
mov
mov
xchg
fcompl
ret
xlat
loope
or
jle
push
adc
pusha
or
push
and
add
shlb
sub
lea
popf
inc
cmp
sub
mov
dec
xor
sub
aaa
cmc
addr16
lea
cmp
pop
jbe
je
or
lea
mov
or
cmp
addb
add
rcr
and
cmp
into
pusha
xor
jne
cmp
pop
jb
addb
sbb
push
push
and
insl
shlb
mov
inc
mov
sbb
test
mov
loop
int3
pushf
add
and
xor
and
ja
fmull
push
or
mov
ds
into
jmp
loope
add
push
xor
jmp
dec
push
adc
jmp
mov
inc
pop
jmp
sbb
pop
push
das
les
je
or
cltd
fisubs
add
lahf
pop
out
test
sbb
adc
dec
adc
sti
gs
ret
push
jmp
das
jmp
or
ror
mov
adc
mov
push
js
push
xor
jecxz
push
sub
sbb
aaa
mov
loope
xor
sti
inc
and
cli
jnp
push
push
loopne
mov
into
movsb
rolb
fs
dec
adc
xlat
sbbb
cmp
mov
or
cwtl
sbb
ljmp
rcrb
out
add
rol
loopne
adc
inc
or
aad
mov
push
mov
dec
lret
cld
fwait
test
mov
or
sub
jne
or
xchg
in
and
loop
jo
or
movsl
inc
fisubrl
movsl
xor
fwait
and
idivl
fwait
dec
pushf
add
ret
jne
imulb
cmp
adc
sub
mov
fidivrs
push
or
sub
pusha
sbb
ret
or
rclb
and
outsb
xchg
and
xorb
js
add
divl
adc
pop
add
mov
mov
lock
or
jp
add
std
cld
add
test
inc
mov
and
loope
mov
fadds
inc
push
push
jle
or
jl
mov
inc
inc
mov
rolb
pop
add
cmp
enter
dec
fs
mov
gs
imul
rorb
popa
sub
adc
cs
les
jnp
test
jbe
ss
adc
das
popa
pop
pop
mov
icebp
scas
cmp
sbb
pop
int
cmpl
test
xor
cmp
sbb
and
scas
inc
adc
rdmsr
ja
loopne
test
jo
xchg
add
scas
inc
mov
or
or
and
ffree
or
rclb
call
inc
inc
aam
pushf
add
adc
push
mov
adc
mov
lret
and
add
cli
pop
loopne
jb
lea
movsb
adc
inc
push
push
adc
lret
popf
pop
sbb
ja
pusha
add
and
mov
lods
xor
adc
flds
out
adc
sub
outsb
sub
mov
jp
adc
jae
or
mov
fidivrs
imul
push
mov
push
sbb
roll
sahf
adc
xchg
shr
subb
sahf
arpl
add
cmp
leave
sbb
push
xchg
cs
insb
aam
cmovbe
dec
les
jb
push
out
stos
jg
js
cmp
jne
cmp
enter
je
sub
das
loop
jo
mov
fs
iret
lock
ret
push
addr16
mov
and
and
mov
inc
es
adcl
mov
add
push
stos
loope
mov
sbb
in
push
loop
loopne
ja
xchg
push
push
push
sbb
cmpb
jle
xchg
dec
ret
rorl
into
cmp
scas
mov
or
cmp
je
je
cmp
mov
cmp
lds
cmp
push
xor
testb
mov
inc
xor
jle
push
xchg
js
jnp
mov
mov
adc
xor
sahf
cmp
das
inc
cmp
or
cld
or
push
push
jo
sahf
xor
and
sub
shll
js
add
pop
jbe
cmp
jae
shlb
loopne
push
push
inc
jne
ss
dec
orl
push
lds
je
adc
cmp
inc
mov
shl
xchg
sbb
or
mov
sub
shrl
adcl
or
aaa
leave
in
sub
mov
pop
and
lods
and
je
out
xor
shl
push
fidivl
lods
cmp
bswap
xor
and
nop
sub
std
cwtl
mov
jne
mov
icebp
mov
adcb
sbb
inc
lea
loope
mov
test
cmp
cmp
lock
lret
aaa
je
test
add
jbe
mov
clc
mov
pop
pop
push
adc
push
movsb
enter
and
adc
add
sub
aad
jo
cmp
outsl
dec
mov
jg
cmp
pop
imul
outsl
pop
dec
push
and
lock
mov
cmp
je
lret
xchg
inc
add
xor
inc
outsb
popa
fs
cmp
ficoms
stos
sbb
scas
sahf
jge
cmp
jae
jbe
jbe
lret
cmp
jp
mov
cli
mov
jmp
inc
jne
push
xlat
outsb
pop
and
pop
or
mov
inc
inc
das
fadds
lret
sbb
pop
movl
cmpb
and
sbb
xchg
pop
adc
scas
movsl
xlat
ret
or
or
adc
dec
es
push
xor
adc
cmpl
and
sub
or
pop
ss
or
xor
pop
cmp
leave
sbb
push
inc
jge
fwait
cmp
loope
daa
mov
sahf
shrl
movsl
adc
push
dec
loopne
stc
dec
mov
sub
and
and
fwait
jp
fldl
mov
shrl
or
ljmp
ret
cmp
dec
lea
mov
adc
mov
stos
clc
push
pop
xor
out
jb
nop
fstps
fidivrl
in
and
insl
xchg
test
cmpsl
and
sbb
dec
mov
aaa
pop
lods
aas
ss
mov
push
pop
cmp
jo
fldlg2
pop
sbb
cmp
cmc
push
dec
adc
fucomp
dec
add
cld
jle
cmp
xchg
mov
rorb
je
sbb
test
out
pusha
add
in
loopne
movsb
xor
pop
stos
or
or
add
ds
push
fstps
add
sub
mov
sub
dec
dec
bound
pop
dec
enter
jbe
push
fidivl
dec
daa
ja
insb
cmpsb
xor
xchg
frstor
ja
je
pop
leave
add
jne
dec
xchg
jp
jo
or
cs
or
jp
and
add
sub
push
and
dec
ds
push
jmp
add
lock
lcall
sub
inc
fadds
imul
xchg
jbe
cmp
xor
loopne
push
xlat
push
jp
daa
in
xchg
sbb
call
lock
ss
dec
xchg
ret
sti
popf
cmpb
push
je
insb
jne
insb
je
popa
sub
cmp
xchg
lcall
push
lcall
shlb
into
dec
push
in
mov
stc
cmp
cmp
xchg
adc
cs
fcmovnbe
or
pop
bound
mov
loope
je
jne
mov
jns
pop
mov
dec
or
int3
jp
xor
or
xlat
fnsave
aad
sub
sbb
sub
push
shr
cmp
dec
xchg
mov
flds
addr16
mov
push
sub
pop
pop
dec
aaa
popf
int3
jle
pop
pop
rorb
and
daa
mov
pop
mov
test
out
pop
scas
mov
mov
mov
xchg
adc
inc
mov
cs
icebp
sub
jmp
addr16
mov
mov
cltd
push
inc
or
adc
or
cvtdq2ps
mov
adc
jo
fwait
inc
and
js
ret
push
add
mov
sub
sbb
cld
sbb
jmp
jecxz
pop
add
mov
sub
lods
push
xchg
push
loop
dec
orb
popa
push
sub
cmpsl
xchg
adc
inc
and
int
shrb
xor
jl
xor
flds
jp
fstpl
jo
pop
test
add
addr16
pop
inc
inc
adc
clc
pop
add
push
int3
inc
and
xlat
loopne
mov
mov
push
mov
insl
add
xor
adc
scas
mov
adc
xchg
cmc
fcmove
adc
push
or
push
cmp
jo
mov
inc
sub
sbb
jg
cmp
adc
sub
sbb
mov
imul
and
es
jae
cmpl
jne
push
inc
adc
and
push
mov
mov
mov
dec
push
mov
cld
sub
pushf
cmp
pop
inc
pop
dec
jb
movsl
orl
xor
scas
ret
mov
fmul
pop
or
hlt
shlb
shlb
inc
push
dec
pop
cmp
or
cmovnp
movsb
or
mov
pop
xchg
dec
and
pop
dec
or
pop
loop
and
mov
pushf
cmp
ret
dec
lock
pop
mov
ret
mov
insl
cmp
add
in
dec
aas
aad
jge
mov
push
cld
or
sbb
lcall
mov
out
jle
inc
mov
inc
ficoml
jo
mov
shlb
mov
aaa
nop
push
subb
mov
sub
mov
test
push
inc
daa
xor
dec
dec
dec
xor
xchg
push
adc
cltd
and
ret
inc
sbb
mov
setbe
jp
sbb
mov
sbb
pop
push
cltd
inc
shlb
icebp
pop
rcrb
or
inc
fldcw
push
mov
dec
xchg
mov
loop
icebp
push
pop
xorb
and
les
orb
and
scas
fistl
jb
aam
adc
jp
lret
fadds
xor
adc
sub
adc
movsl
cmpb
add
add
cltd
ret
imulb
sub
push
shrl
pop
pop
and
lret
test
mov
cmp
lea
push
mov
inc
add
lods
dec
movsb
out
mov
mov
pop
inc
adc
mov
mov
roll
movb
cmp
pop
adc
or
inc
outsb
or
hlt
sbb
dec
xchg
dec
shr
mov
data16
xchg
mov
jle
cmp
push
ds
push
subl
inc
inc
mov
sub
xor
push
push
ds
jmp
arpl
ret
and
sbb
or
test
add
repz
push
ret
pop
push
rclb
or
loop
and
je
test
ss
add
xchg
ret
inc
cmp
inc
and
add
out
lods
cmp
xor
sbb
mov
addr16
mov
push
add
xor
movsb
sbbl
xchg
push
cmp
push
xor
push
add
inc
mov
ret
stos
mov
mov
popa
stc
pop
push
push
or
sbb
jbe
dec
call
add
push
jne
inc
push
xchg
dec
push
pusha
rolb
and
into
shrb
inc
pop
jne
jge
dec
add
int
jle
dec
and
pop
pop
and
add
or
cld
test
pop
mov
rolb
cmp
pcmpeqb
jle
add
push
ret
xchg
lds
cmp
outsb
adc
inc
mov
adc
adc
pop
pop
shrb
dec
test
xchg
lcall
fcomps
push
rclb
data16
mov
inc
or
xor
imul
xor
cltd
out
xor
lock
es
test
ljmp
and
rcl
inc
xlat
pushf
push
shlb
xchg
lock
or
dec
push
cmpl
cli
push
sbb
or
imul
into
lock
das
int3
mov
sbb
sub
pop
lock
sbb
fdiv
pushf
test
lret
cmp
inc
dec
xor
xor
dec
test
adc
fldenv
adc
mov
adc
add
inc
dec
icebp
sbb
cmp
fwait
xchg
pop
sbb
xor
xchg
insb
call
rclb
mov
push
and
mov
push
nop
lcall
into
call
test
push
bound
or
and
adc
and
xor
or
mov
and
sub
fistpl
or
fstps
or
add
ficompl
ret
aam
push
inc
mov
dec
ret
or
cmc
scas
mov
push
sbb
or
add
sub
push
inc
ja
pop
test
inc
mov
out
inc
mov
je
push
and
pop
and
inc
jge
adc
adc
add
rcl
inc
dec
lods
inc
sub
bound
sub
int3
cmc
lods
cmp
adc
outsb
ret
mov
adc
jno
mov
fildll
lret
ret
mov
lret
dec
sbb
imull
bound
fmuls
fcomps
xchg
mov
cmp
sub
rclb
jecxz
and
adc
fs
ret
mov
negl
mov
pop
nop
adcl
addb
mov
cmp
sub
or
mov
daa
mov
test
mov
adc
add
sbb
and
add
mov
mov
adc
filds
sbb
sub
adc
and
add
pop
sbbb
xor
test
add
dec
sub
adc
mov
adc
xchg
or
xor
rorb
sub
into
jg
sub
push
sbb
sub
test
mov
dec
inc
clc
jmp
pushf
xchg
push
sti
xor
add
jbe
movsb
and
dec
ljmp
adcl
xchg
aad
push
adc
lea
inc
xor
inc
ficompl
mov
cmp
ja
xor
inc
rorl
and
divps
js
mov
xor
adc
cmpsb
mov
pushf
clc
mov
sti
xlat
sbb
xor
paddw
adc
ljmp
and
xchg
inc
hlt
adc
jge
adc
jmp
lock
mov
rclb
mov
cld
mov
push
add
or
push
dec
push
jecxz
dec
and
mov
and
jecxz
and
fists
popa
adc
icebp
into
lds
enter
addr16
or
test
jecxz
cmp
fimull
mov
jo
adc
adc
push
addr16
cmp
adcl
lcall
fists
pusha
lret
mov
es
lahf
aam
mov
inc
xor
and
push
fisubs
fadds
sbb
mov
xor
int
push
or
pushf
mov
sahf
and
jne
adc
adc
and
jb
xchg
xor
add
adc
lahf
push
ror
adc
das
xchg
ret
sbb
rcrb
andl
xchg
push
clc
pop
mov
popa
or
jle
pop
inc
xor
jmp
sbb
jge
or
and
jno
scas
hlt
clc
inc
movsl
jmp
sub
movb
iret
daa
inc
xchg
je
imul
push
pop
pop
nop
jb
pop
adc
xor
dec
cmp
scas
jne
mov
jl
mov
jmp
dec
push
lahf
ss
or
dec
loope
xchg
cmp
sbb
clc
loopne
add
add
adcb
ja
add
test
xchg
dec
pop
and
shlb
and
sbb
add
cmpl
jmp
call
repz
inc
or
add
adc
add
and
and
test
push
and
and
mov
call
dec
or
imul
test
adc
popa
shrl
adc
or
sbb
push
xor
pushf
pop
and
dec
xor
test
cmc
xchg
sbb
xor
or
pop
into
pop
rorb
cmp
insl
adc
xchg
nop
adcl
sub
push
data16
pop
pop
gs
ret
mov
mov
repnz
add
fs
mov
scas
push
add
sub
sbb
adc
sbb
subb
pop
mov
push
int
insl
adc
nop
inc
dec
pop
or
push
loope
fcmovnu
je
jbe
mov
pop
jne
jnp
je
out
inc
pusha
inc
push
inc
int
or
les
jle
in
sbb
cmpl
adc
sub
data16
push
jo
insl
insl
mov
pop
pop
push
xchg
sub
rcr
jae
sti
xchg
adc
mov
and
add
filds
popa
dec
rcrl
dec
add
sub
stos
test
adc
sbb
sbb
xorl
shlb
add
sub
push
adc
fildll
pop
clc
sbb
js
and
inc
push
fdivs
xor
ret
add
clc
ret
fldl
jbe
aas
fmull
jb
push
rorb
xchg
sarl
adc
rclb
inc
xor
testb
pop
pop
test
pop
inc
xchg
ficomps
cmp
and
mov
jp
jne
push
or
into
lahf
adc
push
push
push
adcl
dec
dec
jecxz
xchg
and
push
sbb
loope
andb
pop
and
cmp
pop
xchg
mov
in
sbb
sub
out
je
mov
ret
jle
mov
call
sub
push
ss
fcoml
mov
sub
fimuls
ret
mov
xor
repz
call
jmp
and
push
push
mov
sub
push
push
pop
daa
sbb
push
sbb
and
fildll
inc
mov
stc
mov
popf
rcrb
shlb
jbe
jle
push
xor
orb
sub
js
insl
add
or
icebp
sub
xchg
adc
enter
out
jge
shlb
cld
jo
add
test
sarl
neg
add
push
push
mov
pop
addr16
push
push
jl
pop
jp
mov
pop
stc
leave
lods
adc
pop
jae
sarb
pop
pop
test
popa
test
push
push
clc
scas
add
loop
inc
or
cmpsl
fsubp
xchg
ret
jmp
xor
xchg
pop
jbe
or
xchg
sbb
inc
mov
mov
or
sub
inc
or
sub
xchg
out
cmp
sahf
or
mov
push
adc
popf
or
in
les
push
xorb
add
mov
and
pop
loopne
and
sbb
and
add
movsl
or
push
cwtl
movl
inc
jge
mov
das
or
adc
or
nop
out
shlb
lock
popa
pop
insl
fcompl
fists
mov
jb
dec
jmp
out
add
adc
inc
mov
add
or
sbb
push
lcall
test
gs
fnsave
ret
scas
cmp
or
mov
nop
push
fists
xor
loop
xchg
addb
and
in
mov
test
xor
data16
pop
scas
dec
push
inc
push
mov
add
dec
rcll
mov
mov
cmp
sbb
mov
sbb
push
rclb
jne
pop
push
pop
sub
lock
push
cmp
pop
ss
das
pop
andb
into
sbb
xchg
xorl
push
mov
sub
add
imul
push
sub
adc
pop
adc
inc
jo
shll
aas
and
xlat
or
lret
or
es
sbb
xlat
mov
dec
sbbl
xchg
adc
les
mov
add
rol
into
insl
dec
out
mov
jbe
sub
and
mov
inc
adc
mov
add
imul
mov
add
adc
jo
push
scas
addb
dec
mov
bound
popf
adc
pushf
mov
movsl
add
adc
test
pop
sub
pop
mov
pop
mov
push
mov
mov
inc
sbb
xchg
popa
inc
or
jno
addr16
js
xchg
and
in
cmp
jbe
mov
rcrl
mov
or
inc
ret
lea
clc
cli
mov
add
pop
inc
xchg
or
aaa
pop
movsl
push
adc
xor
aaa
lret
cmp
jbe
insb
fistpll
adc
adc
add
sbb
mov
or
fdivs
idivb
movsl
cli
rclb
sbb
and
shll
orb
sbb
es
inc
jae
nop
jbe
push
push
or
outsl
stos
mov
ret
js
dec
add
lcall
sbb
sub
xchg
sbb
mov
and
daa
movsb
cli
or
and
add
sub
add
mov
mov
and
push
bound
pop
out
cmp
aaa
dec
pop
xor
in
outsl
sbb
test
add
xor
add
pop
push
add
jo,pt
push
adc
dec
in
or
out
pop
push
push
sbb
daa
jb
xchg
dec
enter
jl
clc
sbb
add
sub
push
adc
inc
sbb
insb
idiv
jo
rorl
repz
ljmp
inc
int
push
xchg
pushw
add
inc
shlb
adc
or
dec
mov
adc
aad
or
add
fcom
or
subb
cld
sub
and
enter
push
lea
xchg
popa
lods
repz
add
or
push
aaa
mov
inc
loopne
lods
mov
pop
or
pop
xor
lock
mov
xor
pop
adc
shll
ss
jg
jmp
out
pop
mov
mov
iret
das
pop
jnp
inc
into
mov
test
rcrb
fs
mov
or
add
mov
sub
adc
or
pop
mov
leave
and
enter
or
cmp
adc
adc
xchg
add
das
arpl
sbbl
inc
inc
cmc
jne
fneni(8087
jle
test
dec
add
sbb
test
shll
xor
mov
push
jne
mov
sbb
push
dec
pop
nop
dec
or
sbb
loopne
sbbl
sbb
sub
stc
adc
inc
cwtl
lahf
sub
jmp
mov
aad
add
movsl
jno
xor
push
rcrb
mov
sub
cmpsl
inc
movsl
ret
dec
jp
cmp
mov
shlb
xor
popf
cli
mov
stos
sub
and
inc
pop
push
add
push
pop
cwtl
xchg
sub
dec
or
test
sbb
mov
or
xor
add
or
test
lock
adc
push
inc
loope
inc
jle
or
mov
mov
push
movsl
xor
dec
or
and
sub
or
popa
xor
int3
subb
xchg
imul
pop
add
jne
faddl
push
xor
shlb
jae
leave
jne
or
mov
cmp
into
inc
sub
add
xchg
dec
in
jno
jl
aas
xchg
mov
adc
jecxz
arpl
xchg
sar
cmp
and
adc
adc
andl
rcrb
jnp
xchg
or
sbbl
cmp
pushf
cmpsb
rcr
xchg
psrad
inc
aaa
push
mov
xor
pushf
mov
add
out
mov
nop
push
hlt
pop
fisubs
mov
jl
cmp
cmp
sub
incb
xor
jg
push
ret
call
cld
mov
inc
cmp
jge
lock
xchg
cmp
outsb
sbb
stos
fadds
add
sbb
cmpsl
add
inc
or
sbb
jbe
and
and
or
mov
fisttpll
inc
inc
test
pushf
xchg
cmp
inc
jl
sbb
inc
jmp
jmp
fisttpl
mov
movsl
and
sbb
add
lea
cmp
push
jae
lret
outsl
pop
cmpsl
roll
xchg
leave
mov
les
jns
push
mov
popa
sub
je
addr16
inc
icebp
jo
xor
xor
nop
mov
cmp
cmpsl
xor
inc
rolb
loopne
inc
pusha
ffreep
mov
test
addr16
int3
push
pop
add
fs
xor
xchg
dec
dec
inc
rcrb
adc
jnp
gs
xor
clc
fidivrl
ds
and
sbb
rcll
mov
jl
gs
movsl
push
xor
nop
cs
add
dec
sub
xchg
xor
cwtl
cmp
pop
popf
xchg
adcl
shl
les
inc
or
sub
in
jbe
mov
jns
add
xchg
es
mov
test
in
pop
test
nop
adcl
sub
das
fmuls
jmp
mov
xchg
je
pop
add
pop
sub
or
inc
sub
leave
push
inc
add
pop
push
shll
pop
mov
adc
inc
pushf
bound
pop
jl
dec
adc
push
gs
subl
push
fwait
adc
js
add
jge
or
js
cmp
pop
dec
mov
jo
dec
out
lcall
or
loop
or
or
adc
imul
icebp
mov
push
xchg
hlt
ja
outsl
or
jo
push
cmp
jne
shll
pusha
lods
dec
mov
sbb
das
daa
dec
lds
call
cmp
pop
int
movsb
loope
add
and
or
sbb
nop
lock
jns
or
push
shlb
and
daa
clc
orl
xchg
jne
cwtl
adc
sub
ljmp
inc
aaa
jl
rclb
mov
nop
cld
insl
mov
and
sahf
in
mov
and
in
das
call
push
jge
stos
fmull
test
ret
popa
outsl
dec
or
mov
sti
fwait
xchg
jge
add
scas
mov
mov
divb
nop
movsl
sbb
loopne
jge
lret
xlat
ss
sbb
shlb
lock
call
js
shr
adc
xchg
rolb
lret
ds
pop
mov
lods
mov
inc
rcr
mov
loope
in
mov
dec
not
inc
inc
jp
cld
push
push
push
adcl
add
lcall
cmp
xor
jbe
mov
dec
jne
gs
xor
add
push
jno
lret
pop
mov
push
mov
xor
add
test
les
add
adc
jle
pop
mov
mov
add
insl
mov
sbb
out
hlt
pusha
xchg
ds
adc
xchg
fxch
nop
shll
sbb
or
les
je
sbb
xchg
loop
shrl
insl
pushf
inc
shrb
inc
cltd
cmp
data16
mov
xlat
pop
push
adc
xor
scas
xor
das
adc
jg
adc
jae
or
push
sub
cld
mov
jne
push
push
push
jno
mov
dec
andb
loopne
dec
ret
sbb
xchg
push
add
mov
repz
lods
loope
lahf
insb
push
add
je
mov
or
fst
jmp
cmp
clc
mov
outsb
xor
inc
sbb
xor
mov
dec
push
insl
or
outsb
add
flds
inc
dec
jg
mov
inc
pop
adc
int
and
sub
adc
shl
or
push
test
fadds
sbb
loopne
mov
out
rolb
adc
mov
sub
and
and
cmp
lock
push
sub
adc
jbe
sbb
or
lods
repz
shrl
push
mov
add
clc
adc
push
add
out
push
pusha
jne
push
mov
xchg
cmp
mov
mov
mov
mov
fcoms
mov
and
mov
adc
pop
aad
sbb
mov
js
or
push
insl
xorl
popa
xor
scas
xchg
mov
test
xor
cmp
aam
pop
sub
or
push
movsb
sub
xchg
xlat
loopne
pop
cmpsb
ljmp
cwtl
or
sahf
inc
loop
aad
push
sub
mov
gs
push
adc
fwait
rolb
mov
mov
dec
lods
mov
nop
or
jge
or
shlb
ja
jmp
push
jg
jmp
sub
push
push
aas
jb
adc
inc
inc
sub
inc
or
push
push
pop
jo
mov
lods
push
scas
jmp
jns
inc
sbb
sbb
sar
adc
cmp
or
add
pop
xlat
jbe
popa
adc
sbb
dec
and
ret
outsl
cmp
push
add
and
in
cmp
inc
loopne
imulb
outsb
movsb
jo
popa
test
jno
add
cmp
leave
data16
es
nop
push
xchg
ljmp
mov
sub
movl
sbb
dec
sbb
fnstenv
mov
mov
orl
pop
imul
sub
idivl
sub
sbb
mov
das
inc
and
sbb
sbb
push
fs
xor
push
js
es
arpl
xchg
add
sub
sahf
sub
icebp
sbb
imul
jne
cmp
cmp
sub
sbb
inc
ss
or
loope
push
imul
adcb
pop
shll
sarb
or
testl
sub
cmp
rorb
inc
inc
mov
mov
cmp
push
mov
imul
addl
xchg
push
out
stos
jno
js
adc
mov
mov
and
sub
imul
in
daa
ljmp
dec
sti
sahf
push
sbb
push
jne
pop
add
outsl
push
adc
sahf
xchg
lret
add
adc
jp
arpl
ja
cmp
cmp
push
movl
jbe
jns
pushf
dec
arpl
add
push
adc
dec
jne
inc
add
cmp
xorl
js
aam
or
cli
inc
or
rcl
sbb
mov
sbb
in
jnp
inc
sub
jbe
into
test
ja
cmpsl
adc
fnstcw
shll
and
push
inc
mov
push
je
adc
fistl
out
rolb
sbb
and
jp
jae
pop
dec
jl
jge
pop
mov
adc
je
lds
cmp
aad
addl
push
test
test
xchg
jp
xor
mov
and
mov
out
push
push
ret
push
fdivr
jl
jmp
outsl
pusha
jb
and
pop
lahf
adcb
in
sub
mov
shrb
mov
imul
cmpsl
xchg
in
cmp
lds
or
and
and
fsubr
push
out
rcrb
rorb
xor
fstpt
jnp
push
fs
cmp
mov
jg
xorb
mov
scas
xor
dec
outsb
repz
or
fsub
in
clc
and
pop
or
adc
push
jb
mov
arpl
or
lret
in
sub
push
mov
enter
icebp
push
push
icebp
out
scas
clc
sahf
or
inc
jnp
or
dec
cmp
pop
jmp
pop
cwtl
cmp
popa
lahf
ret
sbbl
jo
push
sub
lea
in
mov
sub
xor
push
icebp
jne
sub
aad
jno
jl
inc
sub
add
test
and
adc
inc
adc
pop
lock
jg,pt
rorb
jg
inc
xchg
rolb
add
mov
scas
mov
sbb
movsl
cmp
mov
jnp
sub
xlat
nop
adc
out
jge
push
cmp
aad
add
test
les
inc
push
mov
test
arpl
mov
mov
jge
cmp
push
mov
xchg
test
adc
adc
jge
adc
adc
push
pop
mov
dec
pop
subb
xchg
call
mov
das
xor
insl
in
dec
or
and
or
jmp
or
push
pusha
mov
ljmp
test
sub
add
and
xor
inc
shlb
dec
or
sub
packuswb
adc
mov
add
test
xor
push
aaa
and
sub
add
dec
push
dec
addl
xchg
repz
sbb
jg
js
fwait
mov
sbbb
lea
push
ljmp
and
sub
adc
sub
cmp
or
adc
ret
and
inc
or
mov
add
push
adc
ret
data16
jecxz
addb
ret
inc
dec
leave
add
and
iret
into
jo
in
push
adc
push
imul
xchg
cmp
or
pop
dec
add
xor
xchg
and
orb
mov
or
sub
and
ret
cmp
out
sub
loop
int3
push
xor
notb
dec
sbb
pop
and
and
dec
sbb
cmp
mov
dec
ficomps
jmp
or
or
sbb
inc
fnstcw
testl
add
aaa
push
punpckhbw
xchg
sub
xchg
ret
and
add
sbb
push
and
outsl
inc
push
test
jne
xchg
movsb
mov
sbb
or
add
aam
loopne
inc
cwtl
xorb
jp
popf
cmp
xor
adc
jg
mov
push
xor
cld
push
push
adc
and
cmpsl
xchg
cmc
or
pop
inc
or
insb
push
adc
mov
into
push
adc
cmpsb
xchg
aas
mov
or
cli
inc
dec
add
push
dec
pop
and
and
dec
dec
jnp
das
and
cmp
cmp
in
pop
repz
insb
test
fadds
add
rcrb
cmp
xchg
push
fmuls
add
fsub
adc
cmc
jo
inc
out
mov
cmp
pop
stos
test
lcall
rcrb
adc
in
xor
arpl
add
jbe
xor
push
aaa
inc
leave
faddl
icebp
pushf
dec
rorb
add
xchg
xchg
adc
inc
xchg
in
adc
xchg
notl
pop
dec
sar
mov
popf
cmp
scas
add
xchg
or
jo
jo
sbb
sbb
xlat
mov
xor
or
std
jge
xchg
testb
fsubr
inc
jecxz
pop
cmp
jle
es
mov
test
ret
clc
sahf
out
jl
dec
test
inc
xor
dec
push
sbb
outsb
cld
and
in
gs
pop
mov
adc
fcomp
lds
test
cmp
add
cmc
sub
push
lahf
xor
lret
test
aam
mov
xchg
push
cwtl
xchg
sbb
into
and
lret
ret
xor
inc
or
jo
or
dec
xor
out
shll
orl
popf
add
daa
or
or
sub
inc
push
xchg
push
es
and
ss
hlt
and
mov
mov
mov
cwtl
add
leave
shlb
je
dec
pop
fdivr
fdivrs
cmp
clc
xchg
xchg
add
mov
or
sub
dec
fucomip
inc
mov
adc
inc
lret
andl
cltd
add
push
xchg
xor
sub
mov
push
sbb
add
lret
inc
fs
les
popf
cltd
add
inc
mov
and
insl
sbb
lock
out
or
mov
and
xlat
push
jo
repnz
mov
mov
test
hlt
js
adc
fstps
cmpb
shrb
add
sbb
inc
stc
add
int3
cmp
movsb
pop
enter
jmp
mov
or
ja
lret
xor
jnp
push
adc
dec
mov
add
sub
sbb
popa
push
add
dec
mov
add
outsb
in
sbb
xchg
sbb
lds
push
mov
std
hlt
sbb
push
xlat
jmp
add
push
fwait
ljmp
cmp
jmp
push
repz
sahf
adc
rclb
scas
adc
in
or
adc
mov
addb
fidivrs
mov
and
mov
pushl
adc
clc
or
or
xchg
rcl
pop
xor
loope
outsl
push
or
hlt
insl
xchg
ds
adc
test
jbe
dec
movsb
jno
adc
and
add
addl
or
cmp
xor
stos
mov
ds
adc
sub
add
push
ss
mov
push
subl
cmp
testl
sbb
mov
add
or
call
cmp
or
insb
jne
push
or
inc
andl
bound
lock
mov
sbb
add
pushf
lea
cmpsb
jbe
jge
cmp
or
push
js
or
mov
jle
ret
fsubs
les
add
sbb
sub
scas
pop
add
push
sub
jle
loope
imul
xchg
sub
stc
inc
fisubl
mov
inc
jo
fildll
sub
movsl
movsl
and
dec
sbb
dec
test
movsl
cwtl
test
adc
inc
mov
sbb
mov
cwtl
xor
stc
or
adc
adc
push
add
xchg
mov
aaa
add
lock
inc
xor
xor
mov
xchg
test
adc
cs
cmp
stos
loopne
rcr
sbb
movsb
dec
cmpsb
add
ret
push
cwtl
clc
and
push
data16
push
sbb
test
mov
insb
bswap
sbb
loopne
sbb
pop
cli
adc
dec
js
pop
out
xor
or
lss
fsubrl
lcall
and
and
lods
and
or
inc
pop
adc
cmp
dec
pusha
mov
popa
push
or
mov
sub
add
adc
sbb
inc
mov
cmp
inc
cmp
dec
xchg
mov
je
push
leave
and
call
outsl
les
sub
flds
pusha
js
mov
repz
jle
rcr
lea
insb
lods
mov
mov
push
jnp
xchg
cld
fisubl
pushf
pop
js
dec
jo
out
fcmovnbe
out
push
push
pop
addb
fptan
aas
and
xor
adc
in
fmull
and
inc
outsl
mov
pop
lea
setns
imul
lods
add
sar
add
add
clc
sub
hlt
cmp
test
inc
pop
fistps
lea
add
test
or
fwait
dec
jecxz
ds
out
shl
movb
cs
mov
pop
xchg
inc
test
iret
orb
lcall
or
notl
pop
adc
or
jmp
stos
xchg
pop
xor
out
mov
rolb
sar
js
push
pop
push
pop
movsb
notl
daa
adc
push
cmpb
push
dec
or
jmp
xor
push
rolb
xchg
sarb
adc
xchg
lds
xchg
mov
in
movsl
pop
je
and
les
and
fs
lods
pop
or
pop
add
cvtpi2ps
cmp
fs
insl
add
xchg
xchg
xchg
pushf
push
cmp
cmp
pop
movsb
cmp
and
xor
js
lods
mov
test
mov
inc
out
sbb
leave
in
mov
sarl
mov
dec
pop
pop
cmp
xlat
mov
jge
in
adc
pop
fisubl
daa
xchg
adc
mov
cmovo
js
fisttpll
pop
clc
aas
arpl
dec
push
sbb
xchg
lahf
shrb
lcall
insl
jne
xchg
adc
mov
imul
xchg
lds
leave
sbb
in
jo
fcmovnu
or
jl
add
repz
fwait
xor
or
or
push
or
sub
xor
fwait
clc
xor
pop
test
add
lcall
je
das
push
pop
pop
jecxz
inc
adc
outsb
cmp
into
adc
cmp
lret
inc
cmc
cli
inc
push
mov
sub
call
enter
in
rorl
cs
and
mov
push
mov
out
dec
clc
cmp
je
lahf
xor
das
adc
push
popa
xchg
or
orb
mov
loopne
iret
xchg
enter
push
jmp
xor
aad
js
push
jnp
stos
scas
mov
popf
aam
loop
insb
movsb
push
inc
test
loop
and
mov
andb
cmp
jle
push
and
pushf
out
push
mov
pusha
xchg
repz
loop
sbbb
insl
mov
insb
pop
roll
mov
testl
adc
adc
xchg
dec
les
xchg
popa
mov
push
adc
int
mov
test
lret
cmp
movsb
int
jns
shrb
cltd
adc
adc
or
int
mov
mov
imul
imul
xor
mov
movsl
jnp
jmp
mov
and
mov
sarl
rcrl
sub
dec
jecxz
mov
sub
xchg
sbb
mov
add
nop
adc
jbe
adc
dec
andl
inc
jno
mov
and
ret
add
mov
adc
and
inc
sub
fidivrl
sahf
pop
cmp
adc
repnz
sbb
enter
or
push
pusha
or
addl
lods
cmp
push
dec
push
adc
ds
pop
loopne
jo
inc
lret
cmp
negb
dec
push
shll
inc
pop
fstp
pop
push
add
pop
setne
mov
pop
in
pop
adc
dec
push
adc
mov
adc
cmp
xchg
loope
js
sub
add
mov
xchg
les
ljmp
or
mov
mov
jae
dec
fs
scas
fdivrs
cmp
popf
adc
jmp
adc
xor
je
decl
xor
xchg
mov
mov
mov
ret
decl
jbe
ss
fdivrp
gs
in
and
lea
sbb
jne
in
pop
cmpsl
inc
fstpl
xor
jne
or
lock
add
pop
repnz
add
iret
pop
push
das
pop
push
push
add
lahf
pop
adc
adc
roll
pop
pusha
sbb
lcall
addb
inc
pop
xlat
mov
andl
and
pop
mov
cmp
cmp
mov
jl
xor
cmp
hlt
add
imul
inc
mov
sbb
adc
daa
nop
cmp
loopne
pop
cwtl
adc
adc
pushf
pusha
std
xchg
sbb
xchg
and
call
push
out
fbld
daa
push
testl
jmp
mov
push
mov
ror
les
mov
ss
call
push
push
cli
insb
mov
sar
test
and
push
push
xor
sbb
cwtl
lret
int3
fadds
and
sarb
inc
mov
xchg
outsb
xchg
movsb
mov
mov
testb
push
icebp
push
cmp
mov
adc
adc
out
pop
or
add
out
push
ds
dec
adc
sbb
mov
mov
cs
and
sub
sub
xor
scas
fs
pushf
dec
or
or
mov
fcos
jmp
adc
ret
jge
cli
mov
roll
movl
add
xor
mov
xchg
inc
loope
mov
cwtl
jnp
in
mov
cltd
pop
insl
dec
sets
inc
stos
fxch
cmpsl
sub
inc
adc
lock
pop
sbb
mov
imul
pop
xchg
js
mov
pop
dec
cmpl
push
leave
pcmpeqb
or
loopne
lret
pushf
jmp
es
cmpsb
cmp
cmc
movsl
jne
incl
fs
add
mov
or
aaa
and
orb
dec
enter
popa
loop
xor
sub
dec
fdivl
lret
dec
or
adc
cmp
adc
sub
push
add
adc
mov
mov
mov
daa
and
lret
mov
inc
dec
in
popf
cltd
and
cmp
ret
enter
imulb
nop
and
or
inc
inc
push
lock
mov
addb
inc
mov
inc
jecxz
or
jl
ret
mov
push
lea
mov
test
push
pop
rolb
add
adc
mov
mov
rcrb
aad
or
sti
cltd
rcrb
cmp
ffreep
push
mov
inc
pop
das
add
mov
test
pusha
push
adc
add
nop
add
sbb
add
pop
and
xor
push
xlat
push
jg
daa
sub
sti
fstpt
mov
add
or
cs
cmpl
lea
sbb
push
pop
mov
adc
cmpsb
or
sub
mov
movsl
add
cld
insl
pushf
fs
cmp
test
xchg
jp
mov
adc
push
out
fsqrt
pop
and
jecxz
cmp
mov
mov
push
bound
add
cmp
ficoms
push
nop
xchg
in
or
mov
add
add
cmpsb
jp
mov
lods
jecxz
or
mov
out
add
cli
cmp
adc
ret
loop
testb
shlb
add
push
xor
jle
inc
pop
adc
pop
jb
and
test
push
mov
mov
mov
fs
add
sub
push
iret
and
fldl
cmpl
fwait
adc
dec
jecxz
cmpsb
daa
incb
push
dec
mov
pop
jmp
pop
les
mov
sbb
loop
ja
cwtl
arpl
jmp
mov
rol
sbb
dec
js
inc
out
aaa
add
loope
orl
ret
pushl
xchg
inc
sbb
mov
sbb
jle
add
dec
scas
rcrl
mov
and
add
ss
je
popa
xor
sbbl
movl
sbb
or
adc
add
jo
stos
dec
clc
push
push
dec
dec
lock
pop
xor
xchg
popf
enter
adc
add
cwtl
pusha
sbb
jp
enter
or
dec
xor
jbe
and
add
mov
inc
cmp
jbe
sbb
ja
sti
sti
xorb
mov
mov
adc
add
popf
movb
dec
sbb
vmovhps
push
or
orb
mov
popf
rcr
mov
jno
adc
jno
and
push
jo
inc
daa
add
mov
inc
add
dec
sub
adc
cmp
daa
test
add
shll
arpl
ja
inc
scas
popa
pop
sub
ret
inc
inc
int
adc
push
loopne
sub
andl
sbb
lahf
or
xor
add
sub
lea
lahf
xchg
mov
sub
fwait
mov
cmc
dec
loope
subb
int3
adc
adc
mov
lahf
xchg
cmp
mov
sarl
adc
pop
pusha
mov
pop
lcall
add
stos
and
cmp
dec
scas
mov
push
lret
nop
jo
mov
push
cmpsb
adc
inc
adc
jb
sub
dec
mov
adc
outsl
pusha
scas
or
push
sbb
push
je
and
pop
data16
push
sahf
sub
sbb
dec
rol
pop
fistl
or
int3
jle
rorl
fidivrs
shl
sub
xlat
or
push
int
fmull
xchg
inc
and
repnz
outsb
dec
jo
inc
inc
ja
movb
jle
mov
xor
mov
js
inc
mov
into
and
mov
push
loope
loopne
sub
and
xchg
sub
push
dec
cmp
xchg
or
sbb
pop
std
hlt
sbb
ja
dec
push
push
add
xor
push
adcl
sbb
lock
lea
test
adc
mov
in
xchg
aam
pop
xor
push
add
mov
xor
push
mov
mov
add
sbb
mov
inc
mov
push
test
dec
pop
lea
adc
aam
sbb
inc
scas
adc
std
inc
loopne
lock
pop
loopne
movsb
jbe
ret
mov
push
ret
mov
fisubrl
push
ljmp
sub
mov
xchg
add
sub
das
pop
cmp
xchg
sbb
sub
mov
lret
dec
sub
pop
and
mov
or
pop
jne
mov
xchg
les
adc
test
les
mov
outsl
adc
pop
push
aam
adc
push
test
adc
and
push
xor
sbb
dec
das
into
sti
add
call
cwtl
call
je
clc
and
pushf
mov
sub
les
jp
clc
inc
xor
xor
sub
push
cmp
test
and
in
addb
dec
cmc
dec
ljmp
sar
mov
sub
and
jae
pop
inc
loop
subl
and
mov
movl
int3
daa
inc
je
aas
ss
mov
inc
push
mov
or
mov
push
jecxz
andl
add
cmc
jmp
adc
xor
lods
and
popa
push
xchg
or
pop
imul
push
sbb
inc
xchg
inc
popf
paddsb
test
inc
mov
jge
mov
pop
pusha
pop
add
adc
push
ficoms
ss
test
inc
mov
pop
lahf
insb
jmp
sbb
or
and
or
mov
lret
cmp
popa
inc
jmp
mov
sub
add
cmp
xor
out
aaa
jne,pn
scas
and
test
mov
jbe
addr16
cwtl
sbb
adc
add
pop
cmp
fdivrs
pop
sub
sar
jbe
push
pop
and
or
or
xor
mov
cmpsl
pop
cmp
pop
outsb
jg
dec
arpl
add
mov
add
mov
cmpsb
cmpsl
sbb
mov
xchg
sub
and
fldl
jecxz
cmp
fstpl
insl
imul
pusha
or
imull
sahf
add
xor
lret
mov
xchg
mov
mov
pop
aaa
cwtl
pop
pop
dec
aaa
adc
fistps
jno
add
mov
loopne
adc
imul
dec
sbb
or
push
push
scas
sbb
pop
es
adc
push
sbb
mov
and
pusha
pop
fcmovne
andl
jge
clc
popa
or
aaa
call
fcomps
xor
xor
popa
ja
pop
or
jne
mov
xchg
pop
adc
pusha
rolb
insl
lock
out
adc
mov
dec
dec
decb
jecxz
enter
push
loop
adc
adc
xchg
dec
jb
push
les
xchg
sbb
push
dec
mov
xlat
ficoms
aam
push
adc
and
adc
jne
adc
aas
sbb
jecxz
pop
divb
or
push
add
or
push
loopne
sub
jmp
inc
nop
aam
push
mov
fistpl
jge
mov
stos
dec
subl
imul
pop
ds
inc
sub
push
lods
dec
in
push
sbb
mov
enter
fisubl
xor
cld
lcall
cmpsl
call
pushf
xor
pop
pushf
sub
dec
push
mov
inc
std
xor
push
mov
sub
sbb
adc
xchg
xorb
clc
and
je
push
xchg
jnp
lods
adc
push
cwtl
add
test
ja
pushf
dec
stos
mov
push
cmp
loop
push
ja
jecxz
jmp
xchg
push
dec
adc
pushf
pop
push
mov
mov
adc
push
mov
and
pop
int3
cmpsb
add
mov
gs
jge
xchg
jnp
movsb
ds
xor
gs
neg
push
jno
xchg
jns
mov
fcmovnbe
insl
mov
movzbl
pop
dec
pop
pop
adc
int
out
stos
mov
pop
inc
pop
mov
mov
pop
stos
pop
pop
bound
cmp
das
xchg
push
movsb
sar
pop
cmp
dec
mov
mov
push
enter
stos
lods
push
insb
push
push
or
or
cld
aam
cmp
jmp
ret
loope
dec
loope
cmc
shll
and
add
sub
inc
rcr
daa
push
cmp
sbb
jbe
or
cmp
mov
pop
add
and
add
mov
outsb
jecxz
in
jne
cmp
push
pop
adc
pop
pop
mov
add
test
in
or
pop
mov
mov
sub
lret
add
stos
inc
xor
inc
or
adc
xchg
js
and
out
int3
mov
aam
mov
pop
imul
je
fmull
add
or
sub
or
sub
jnp
dec
lock
mov
jne
ds
stc
or
jno
cmc
sahf
push
inc
lret
stos
mull
or
fdivrs
push
out
push
push
imul
jae
jo
add
and
sarl
push
push
es
jo
int3
std
sbb
inc
rorb
decl
jne
or
and
add
mov
sbb
adc
adc
hlt
daa
push
je
cmc
or
int3
mov
mov
sub
jle
adc
push
cmp
add
push
outsl
lahf
mov
shlb
in
add
adc
jbe
cmc
add
mov
test
pop
or
fsubrs
sarb
add
test
xor
daa
jae
and
jmp
mov
jmp
lods
ror
rcrl
adc
add
mov
icebp
imul
stos
sbb
loop
push
je
push
shrb
adc
outsb
mov
lods
dec
je
and
fdivrl
mov
xchg
fadds
fwait
push
mov
cmpsb
mov
fists
mov
add
pop
andb
push
add
xor
or
test
and
movb
sbb
sbb
pop
inc
or
adc
lea
aas
add
dec
loopne
add
and
and
cmp
sbb
aaa
incl
add
andb
and
test
mov
shl
movl
andb
mov
lods
dec
test
lcall
ret
push
scas
filds
loop
sbb
inc
std
insb
push
das
enter
dec
jmpw
imul
call
movsb
hlt
and
mov
add
in
mov
or
dec
ret
das
adc
push
fcoml
jmp
loopne
ret
into
cmp
and
in
sbb
pop
pusha
icebp
int3
add
jbe
inc
mov
mov
adc
out
sub
in
mov
or
icebp
fbstp
mov
and
and
shll
pop
aam
adc
pop
or
mov
push
lock
incb
dec
mov
sbb
push
add
or
cmp
data16
ja
inc
lea
mov
cmp
adc
inc
add
enter
pop
imul
mov
ret
or
sub
push
inc
popf
shll
jo
leave
repz
jne
mov
pop
out
daa
out
xchg
push
popf
loope
inc
sbb
ljmp
movsl
add
sub
flds
push
scas
xor
adc
sub
arpl
lods
in
mov
inc
sbb
xchg
popa
xchg
or
andl
jl
push
imul
add
mov
pusha
mov
popa
and
push
rol
nop
mov
and
lods
push
adc
cmpsb
fwait
outsb
rol
fidivrs
cmp
dec
add
mov
lcall
cltd
fidivrl
push
clc
cmp
test
push
add
xor
rolb
mov
arpl
sbb
mov
pop
or
jmp
aam
add
sub
out
je
push
dec
and
jne
nop
sbb
or
cmp
outsb
sbb
jne
or
and
or
or
or
xchg
ss
jne
cmp
dec
adc
and
push
or
je
mov
in
andb
enter
fiaddl
dec
push
push
push
addb
dec
dec
mov
lea
add
stc
or
dec
sbb
and
js
mov
sbb
testb
jb
ljmp
pop
addb
dec
xor
and
dec
or
pop
and
sbb
cmp
mov
incl
stos
test
test
inc
movsl
sub
jmp
xor
outsl
or
inc
pop
pop
push
hlt
pop
add
xor
or
add
mov
inc
movsb
dec
pop
push
lods
dec
or
rcll
and
push
add
jmp
nop
lahf
push
les
rcll
pop
sbb
push
add
dec
xchg
ljmp
repnz
rcrl
pop
movsb
cli
nop
xchg
sub
test
arpl
mov
and
jge
std
mov
fdivs
andb
in
and
fstps
repz
out
dec
call
das
cli
jb
mov
or
adc
adc
xor
sbb
push
xor
sub
sbb
outsl
adc
jno
dec
xor
xchg
mov
fnstsw
xchg
test
add
or
sbb
les
testl
adc
leave
or
jecxz
mov
adc
iret
insb
ret
sub
mov
pop
add
sub
inc
in
or
rcrb
push
adc
jbe
mov
mov
adcl
and
outsl
loopne
push
dec
add
sahf
jo
xor
fs
xchg
cmp
pop
cmpsl
cs
xor
or
jbe
cmp
popa
add
jmp
inc
das
iret
or
or
add
mov
lods
xor
cmc
cwtl
and
pop
shrb
sub
cmp
mov
mov
mov
add
clc
ss
jmp
push
pop
xchg
setns
push
dec
mov
or
add
mov
push
push
push
xor
pop
mov
and
dec
cmpsb
push
mov
xor
mov
sub
fsubrp
inc
cld
sub
mov
mov
in
fnstcw
aas
fsubr
pop
inc
mov
call
dec
or
fsubr
cmpl
jg
cmpb
mov
sub
pop
lods
sub
lock
dec
scas
outsb
add
int
inc
enter
cmc
push
inc
fsubp
rclb
dec
aas
in
clc
mov
test
in
sub
push
push
leave
mov
xor
sti
jg
cmp
cmp
cmp
decl
pop
insl
call
mulb
aas
das
mov
and
jmp
mov
mov
pop
ret
pop
orl
mov
xor
jg
mov
popa
pop
dec
lds
addb
adc
mov
pushf
pop
in
mov
push
mov
gs
dec
jo
mov
enter
shll
inc
dec
ficompl
in
sub
punpckldq
and
jo
movsb
enter
xchg
fsubs
cwtl
outsl
xchg
mov
jg
lahf
and
aam
pop
orb
lea
sarl
mov
adc
cmp
fcmovu
into
jge
dec
adc
jo
sub
sahf
outsl
sub
and
xor
push
test
nop
xchg
mov
pop
cltd
pop
mov
pop
dec
lcall
xchg
fs
adc
rcll
pop
or
inc
pop
call
add
enter
rorb
mov
roll
pop
dec
dec
xor
sub
addb
inc
mov
fsubl
mov
test
cwtl
ja
sahf
jns
mov
dec
adc
jae
ja
sub
pop
test
mov
fcomps
arpl
add
mov
xchg
xchg
ss
in
in
in
cmp
enter
fs
fcompl
mov
je
inc
inc
jle
mov
dec
mov
fadds
cltd
popf
sarb
fs
fmuls
cmp
pop
xor
int3
cmpsb
dec
or
popa
mov
jg
nop
sbb
mov
push
jb
mov
js
mov
cmpsl
mov
in
loop
out
adc
lds
mov
or
pop
or
mov
in
mov
fadds
pop
nop
mov
and
or
inc
es
lea
int3
loop
lret
fcompl
paddq
pop
xchg
cmp
aas
pop
jg
pop
pop
lods
aaa
movsl
sub
loop
in
mov
xchg
negb
test
out
mov
mov
cwtl
mov
out
pop
cwtl
adc
mov
call
mov
rorl
adc
inc
insb
pushf
or
pop
xchg
inc
leave
mov
clc
mov
lds
insb
pop
jne
loop
test
mov
xchg
pop
mov
and
inc
adc
add
fcoml
mov
das
and
pop
mov
mov
dec
imul
in
xchg
xchg
pop
sbb
jb
inc
push
fcomp
aad
xchg
or
lock
in
sbb
aaa
sbb
dec
pop
cmp
cwtl
adc
rolb
push
ss
subb
clc
orl
sbb
enter
cmp
enter
pushf
mov
add
mov
outsl
add
lods
sub
mov
jl
pop
jb
add
or
mov
mov
and
out
push
push
repnz
fcompl
lahf
ds
es
add
jb
mov
aas
in
sbb
fadds
cmp
nop
add
nop
in
in
in
cmp
in
add
nop
add
in
nop
add
nop
in
in
in
cmp
in
add
nop
add
in
nop
add
nop
in
in
in
cmp
in
add
nop
add
in
repnz
sbb
ljmp
xchg
orl
or
inc
xchg
enter
add
inc
movsl
in
xchg
aas
lock
fwait
dec
xchg
scas
call
bound
call
jg
popl
add
xchg
aas
fsubs
add
jb
loopne
js
add
cltd
inc
loopne
inc
xchg
xor
mov
mov
sbb
pcmpeqb
add
imul
and
sub
inc
pop
xchg
movsb
rclb
inc
push
adc
mov
xchg
pop
fs
xchg
pushf
je
pop
pushf
pusha
sbb
cmp
cmpsb
push
or
fistps
add
aad
lahf
iret
shl
stos
add
pop
cs
sbb
or
jbe
icebp
aam
xchg
mov
sbb
shr
cwtl
mov
mulb
jle
mov
aas
mov
and
mov
mov
insl
xor
subb
push
or
fiadds
and
mov
imul
add
push
inc
sarb
aas
cltd
mov
mov
aas
in
add
test
xchg
inc
lahf
dec
aam
add
xchg
xchg
or
ds
mov
jae
mov
fistpl
lret
adc
pop
push
mov
push
inc
fadds
scas
dec
fbstp
sbb
jnp
rcrl
mov
pop
push
xor
push
xchg
dec
fdiv
ss
lds
add
cmp
ljmp
inc
add
fdivl
adc
pop
nop
fisubs
adc
insb
sub
stos
fs
pop
lock
rorb
jmp
sbb
loopne
mov
subl
push
aas
sbbb
pop
js
xchg
dec
cs
subb
add
hlt
sub
insl
mov
lea
and
stos
enter
pusha
sahf
enter
mov
or
dec
pop
add
aas
fcomps
mov
jmp
enter
out
mov
jmp
fimull
scas
scas
pusha
sbb
aas
rcr
mov
psubusb
popf
sar
js
pop
and
mov
cmp
mov
cmpb
in
dec
or
adc
test
ret
lods
and
lock
fdivrl
push
mov
jno
mov
mov
mov
jg
mov
or
aas
xchg
dec
mov
or
insb
jl
orb
mov
adc
aas
dec
imul
dec
aas
push
mov
and
push
cwtl
mov
and
pop
movsb
mov
xchg
inc
aas
subb
inc
lds
clc
movsb
test
adc
or
push
and
sub
aas
mov
subl
cli
dec
imul
shlb
rorb
inc
dec
sti
lcall
shrb
cld
push
jns
dec
cmp
je
mov
in
rcll
push
rorl
fdivr
pop
sbb
fidivl
sub
dec
cwtl
or
adc
dec
inc
add
xchg
test
test
pop
mov
dec
inc
pop
dec
outsb
sbb
xor
pop
jbe
add
add
enter
sbb
add
push
cmp
sbb
mov
orl
push
movsb
loopne
add
sbb
orl
shlb
or
dec
add
test
shl
pop
pop
cmpsl
fsubrp
cmp
cs
pop
fsubr
leave
hlt
adc
sbb
sbb
or
pusha
aam
add
nop
test
sub
inc
jb
test
or
mov
inc
adc
sub
mov
or
mov
fiaddl
jg
aas
call
adc
sub
inc
jb
mov
stos
test
xor
dec
cmp
jo
xor
in
in
rorl
loopne
in
adc
cmp
or
jbe
jg,pn
mov
jb
mov
lahf
mov
dec
rclb
add
ficoml
or
std
sub
shrb
and
negb
sub
adc
leave
in
or
fs
outsl
shll
mov
enter
iret
cwtl
shll
mov
lahf
and
pop
push
aas
or
out
push
mov
inc
cmpsb
sub
test
adc
cwtl
lahf
movsb
out
call
aas
mov
popa
push
or
and
and
cmpl
movsb
popa
repnz
lods
pop
in
psrlq
mov
xchg
mov
les
xor
lock
test
scas
or
fildl
jg
aas
mov
add
mov
repnz
mov
xchg
subl
dec
mov
scas
out
aam
cmp
cwtl
sub
xchg
dec
sub
js
pop
mov
nop
nop
out
cmovnp
out
in
cmp
insb
lcall
adc
outsb
inc
movsb
adc
loop
std
xor
mov
movsb
dec
xor
xor
add
shll
ret
lahf
jge
and
loopne
fdivrs
and
jg
dec
xchg
push
xor
shlb
mov
cmp
cwtl
aas
test
call
or
mov
jle
xchg
test
test
jg
pop
mov
sarb
clc
lods
and
mov
fidivl
dec
pop
sbb
adc
inc
inc
aas
mov
pop
enter
inc
add
pop
pop
dec
rcr
aas
mov
inc
mov
dec
push
inc
sub
add
sub
xlat
incl
jo
rcrb
pop
push
mov
mov
leave
mov
sbb
pusha
mov
addr16
mov
dec
dec
dec
push
fwait
cwtl
ja
popa
add
insb
sarb
cmpsl
outsb
cmp
les
pop
imul
movsb
sbb
fidivrs
lea
pop
aas
subl
xor
bound
pop
pop
in
aas
fsubs
dec
add
add
xchg
xchg
dec
nop
jmp
test
pop
add
xchg
xchg
enter
add
add
add
lods
fidivrl
mov
aas
mov
es
dec
mov
adc
shld
mov
lahf
addl
aad
mov
leave
pop
mov
add
mov
mov
out
pop
adc
ficoml
sbb
sbb
inc
lock
mov
aas
dec
aas
mov
lcall
shrb
jo
faddl
or
aas
sub
and
adc
sbbb
pop
mov
insb
push
mov
pushf
cmovs
mov
push
cmc
rcrb
push
adc
mov
mov
mov
pop
pop
inc
ret
daa
push
sbb
sub
xchg
xchg
jo
int
rol
mov
inc
add
pop
mov
in
in
in
repz
nop
cmp
dec
insl
mov
enter
aas
sbb
or
lods
idivb
inc
lfs
lods
das
lods
mov
push
and
aas
or
mov
adc
sar
lods
aam
or
test
leave
add
pop
jo
adcl
rorl
sub
ds
cmp
cmp
in
in
shlb
ljmp
or
ret
cs
adc
add
mov
sub
and
or
inc
adc
and
aaa
sbb
add
les
pop
push
mov
enter
call
ret
inc
mov
popf
jg
pushl
in
sarb
aam
mov
in
fmull
pop
pop
outsl
enter
call
mov
ret
popf
sahf
clc
ret
cmpsb
sbb
adc
dec
xor
dec
sti
inc
inc
adc
and
and
cltd
pushf
popl
test
adc
jmp
popf
sbb
sub
adc
xor
and
aas
adc
pop
dec
add
loopne
inc
nop
mov
in
pop
mov
and
mov
das
vmovsd
jecxz
mov
mov
xchg
pusha
adc
cmp
mov
cmp
pop
rcrb
bound
loopne
enter
scas
push
and
and
inc
movl
lahf
mov
aas
filds
sub
cltd
xchg
iret
lock
adcb
and
lahf
push
enter
mov
sbb
cwtl
pop
mov
mov
loopne
aas
cmpsb
nop
inc
adc
inc
cmp
ljmp
dec
bound
xchg
inc
or
xchg
push
adc
and
xor
mov
xchg
dec
les
add
daa
daa
in
jae
dec
insb
push
int3
mov
sub
jnp
xor
fmull
mov
add
adc
fdivrs
and
pop
dec
lret
movsb
and
call
insb
test
sub
jg
sbb
inc
out
pop
test
add
jg
mov
xchg
sbb
cmp
push
leave
adc
rorl
testl
push
sbb
in
inc
or
sub
into
scas
adc
xchg
adcb
sub
daa
shlb
hlt
jnp
int3
iret
test
sahf
cmp
sub
ja
leave
aad
push
daa
js
xchg
pop
leave
xchg
enter
and
sarb
inc
sub
xor
add
daa
nop
lds
pop
push
imul
inc
and
or
pop
adc
das
push
sub
ror
xor
call
xlat
jg
out
adc
rorl
pusha
daa
fsubrl
fcomps
scas
inc
mov
jbe
shrl
and
aam
sub
movsb
sub
sub
pop
rcl
clc
daa
mov
aad
jo
sub
or
adc
pop
xchg
cmpsl
out
imul
daa
pop
xor
add
or
inc
jnp
pop
scas
and
push
lcall
js
mov
sub
cmp
mov
sub
mov
daa
repnz
cmpl
loope
lods
dec
test
pop
fcom
pushf
pop
aad
iret
mov
sbb
sub
jns
inc
adc
push
push
push
or
in
cmp
or
scas
inc
iret
mov
scas
fcomp
xor
sub
scas
call
fincstp
in
stos
shlb
inc
mov
jnp
add
inc
out
fisubrl
mov
ficoml
fisubl
fwait
stos
push
enter
daa
ret
add
sbb
jg
daa
nop
sbbl
stos
popa
repnz
adc
push
fmull
fmull
fdivrl
mov
fstl
pop
xchg
int3
mov
loop
cmp
jg
sub
frstor
jb
cmpsl
sub
inc
or
in
xor
hlt
dec
ja
sarb
daa
mov
fidivs
xor
daa
in
imul
push
jl
cmp
arpl
add
pop
add
nop/reserved
mov
mov
loopne
push
loopne
in
movsb
and
shrb
pushf
xchg
daa
das
es
pop
loope
movsb
and
sarb
cmp
or
mov
pop
imul
xchg
mov
ret
mov
scas
mov
icebp
or
jecxz
js
pop
cs
xlat
pop
sub
mov
pop
icebp
adc
push
rorl
aaa
fcmovb
bound
daa
xchg
daa
movsl
ss
mov
iret
fsubs
dec
or
aam
insl
les
adc
inc
mov
aaa
testb
es
xchg
pusha
das
push
dec
push
xor
nop
icebp
out
das
cltd
in
pop
xor
mov
test
shlb
dec
mov
cmpsl
inc
pop
cwtl
jge
subb
or
dec
inc
nop
shlb
fistl
xlat
push
ret
out
ljmp
out
cmp
mov
push
pop
jg
ljmp
cmpsl
cmp
push
add
in
dec
jb
outsb
adc
lods
insb
pushf
in
xchg
repnz
jge
and
inc
sarl
in
leave
ja
push
pop
mov
mov
cmp
jmp
pop
jb
and
in
rorb
sbb
sahf
dec
sarb
xchg
or
pusha
in
fcoms
sub
mov
iret
mov
cltd
jbe
shrl
in
out
pop
mov
cmp
lahf
nop
sub
movsb
sbb
pop
sub
xchg
adcb
inc
lock
mov
mov
add
or
add
iret
repz
push
sbb
ds
pusha
in
jb
add
add
push
or
in
test
push
lcall
jns
jnp
das
or
test
out
sahf
bound
inc
cmp
lock
decb
push
and
jns
out
xor
jbe
sahf
negl
push
and
add
les
cmp
out
fsubr
add
adc
repz
repz
dec
pop
iret
repz
outsb
jp
cmpsb
mov
cmp
lock
fmulp
mov
mov
jl
ds
push
add
out
lcall
jns
out
fs
xchg
movsb
cmpsl
jge
out
ret
or
mov
cmp
out
out
or
add
pushw
cmp
ja
bound
push
push
xor
adc
cmp
out
testb
fmul
iret
repz
mov
jo
iret
repz
dec
ds
jns
iret
repz
add
push
out
sahf
out
movsb
cwtl
subb
add
bnd
push
ror
repz
mov
pop
ds
repz
xor
add
jns
out
in
fadd
mov
out
sahf
out
mov
dec
int
jns
xor
or
std
loop
iret
repz
int3
mov
iret
repz
xorb
repz
inc
ss
cld
sahf
out
sahf
call
cwtl
push
lahf
out
xchg
mov
sahf
testl
add
sti
iret
repz
in
ret
jo
out
pmaxsw
sarb
int3
out
adc
repz
shrl
inc
pop
jbe
iret
repz
cwtl
mov
into
fdiv
sahf
out
ds
adc
es
jns
out
data16
pushf
lods
mov
mov
or
orb
push
adc
cmp
repz
iret
repz
adc
sbb
sahf
out
cmp
push
movsb
add
out
push
cmpsl
cmpb
aaa
cmp
mov
push
cmp
sahf
out
pop
je
xchg
sahf
out
sahf
out
mov
sarl
decb
add
iret
repz
push
mov
add
add
call
jns
mov
outsb
jns
out
pusha
push
inc
cmp
xor
out
or
add
fisubrl
mov
sahf
repz
mov
push
mov
mov
repz
jl
push
dec
xor
sahf
cmpsl
stc
cmp
cli
adc
aam
out
out
scas
sahf
test
cwtl
push
mov
jbe
pop
push
inc
jl
out
cmp
adc
testb
cmp
shl
aam
mov
iret
pushf
mov
iret
repz
sub
add
sahf
cmpsl
stc
repnz
into
mov
out
mov
add
jns
sarl
sbb
push
ss
out
dec
repz
push
mov
mov
or
jns
divl
sub
cmp
push
js
mov
ror
out
xchg
mov
push
adc
iret
repz
xor
dec
pop
repz
repz
lcall
loopne
or
sub
dec
push
data16
out
outsb
ja
sub
dec
push
add
or
fdivl
adc
jns
enter
mov
iret
repz
lcall
cs
push
push
negb
popf
out
fsubp
push
cmp
push
add
test
add
aas
or
popf
cmp
push
add
push
je
leave
je
adc
mov
pop
inc
push
testb
iret
repz
push
lret
adc
lcall
pop
ret
jnp
rcl
out
push
dec
jg
mov
loopne
mov
add
cmp
add
cltd
outsl
mov
push
dec
pop
gs
mov
mov
pop
jnp
push
xor
bound
adc
pushf
sub
iret
repz
and
and
cmp
repz
dec
push
arpl
cmp
repz
mov
mov
cmp
repz
xchg
xchg
xchg
cwtl
repz
repz
lcall
iret
sahf
lahf
mov
iret
repz
movsl
cmpsb
cmpsl
test
cmp
repz
iret
repz
scas
scas
mov
mov
cmp
repz
mov
mov
repz
repz
iret
repz
mov
ret
cmp
repz
enter
repz
lret
int
repz
into
iret
rcl
rcl
cmp
repz
aad
xlat
fdiv
cmp
repz
fcmovnu
fucom
repz
loopne
or
out
sahf
adc
sub
fs
out
jb
xchg
cmpsl
mov
jns
out
shr
testl
dec
adc
popa
cmp
repz
jbe
xchg
cmpsl
repz
repz
fcomp
repnz
sahf
out
cs
and
inc
sahf
out
sahf
push
gs
xchg
mov
mov
enter
jl
out
idiv
or
adc
repz
sbb
sub
ds
cmp
repz
pop
bound
repz
repz
cmpsb
mov
jecxz
jns
iret
out
add
push
sub
sahf
out
sahf
dec
pop
push
jle
jns
out
xchg
mov
xor
out
stc
or
pop
sub
repz
inc
push
fs
mov
jne
gs
xor
popa
jo
adc
fs
insb
inc
or
sbb
inc
jb
popa
je
push
outsl
outsl
insb
push
push
outsb
mov
jae
outsl
je
jb
arpl
jae
inc
imul
sbb
insb
outsl
ret
outsb
scas
gs
xor
push
imul
jo
inc
arpl
pusha
mov
fsincos
gs
outsl
outsb
je
inc
sub
jp
pop
or
push
aam
jae
daa
cmp
pop
fwait
mov
dec
popa
sbb
lret
inc
mov
in
mov
jb
insl
and
fs
mov
xor
dec
ret
adc
sbb
gs
mov
imul
imul
jbe
jns
arpl
jns
je
ret
mov
dec
jo
outsb
rcr
dec
push
sarl
push
imul
push
je
push
pusha
ja
pop
jbe
gs
outsl
push
xchg
inc
jne
outsb
xor
inc
outsl
xchg
mov
cmp
insb
call
mov
xor
jnp
fs
cmpsl
notl
cmp
dec
inc
in
or
inc
clc
sbb
aas
push
rolb
jp
addr16
gs
lods
add
and
adc
push
cmpsb
dec
xchg
or
popa
fucomi
jb
jne
push
jne
cmp
sbb
icebp
jb
sbb
jp
mov
push
or
movsb
push
into
dec
ret
cmp
aaa
pop
jl
aaa
in
cmp
push
or
xor
sbb
pop
mov
push
outsb
insl
xchg
mov
xlat
lahf
sbb
fs
push
xchg
jo
push
push
mov
sbb
inc
arpl
or
fiaddl
sub
xor
sbb
insl
dec
inc
repnz
fwait
xor
popa
push
pop
pop
clc
or
push
ret
jo
hlt
sub
fs
adc
push
orl
jbe
and
jne
or
pop
sbb
push
xchg
sub
imul
sarb
push
push
ret
imul
push
mov
icebp
mov
fsts
push
int
cmp
sub
adc
mov
or
fadds
inc
jns
sub
shll
or
jb
ds
or
push
shlb
sar
imulb
xorb
sub
add
pop
inc
push
add
xor
fsubp
add
shlb
inc
push
aaa
dec
inc
mov
daa
fldenv
sahf
pusha
mov
pop
inc
xchg
jne
add
pop
subl
lock
xor
js
add
ss
jns
nop
inc
test
mov
movsl
pop
loopnew
pop
jb
add
hlt
dec
cs
inc
mov
fsub
and
xlat
add
lods
push
sbb
adc
dec
xor
aaa
jecxz
in
add
inc
rolb
add
sbb
or
lods
mov
jb
lahf
push
xor
pop
pop
xor
mov
pop
pop
xor
data16
xor
cmp
cmp
mov
ss
popa
data16
arpl
xor
mov
lret
rol
scas
push
std
cmpsl
mov
mov
pop
push
nop
test
subb
dec
sahf
iret
shr
jo
inc
nop
push
inc
and
dec
inc
sti
out
jge
push
push
rcrb
pop
inc
push
mov
jnp
pop
push
push
xor
adc
push
cs
sahf
imul
push
push
inc
pop
inc
cs
ja
jae
loopne
push
xchg
fisubs
push
fistpll
mov
mov
cmpsb
and
dec
jnp
data16
pusha
mov
imul
dec
push
inc
fs
fidivs
xor
dec
cmpsb
shlb
dec
cs
out
fldl
push
lock
out
push
shlb
in
incl
inc
inc
xor
xor
inc
add
xor
in
fstpl
inc
xor
add
xorb
cmpsb
rol
mov
loopne
ret
ja
push
push
rcrb
decb
aaa
xor
arpl
aaa
mov
fistps
int3
fcoml
fidivl
data16
data16
xor
add
mov
stos
int
jnp
icebp
xor
bound
data16
lods
lods
ds
gs
gs
and
add
push
sub
aad
mov
add
mov
inc
cmp
inc
sbb
stos
adc
ss
pop
mov
lods
into
les
sarb
sub
loopne
cmp
cmp
dec
cmp
inc
incb
xor
xor
lret
cmpsb
fdivl
js
pop
shlb
jb
shlb
orb
fistps
inc
add
insl
lahf
nop
adc
rorl
add
movl
pop
enter
adc
pop
mov
pop
inc
push
mov
adc
xchg
das
dec
adc
mov
ss
add
push
inc
hlt
cmp
aas
enter
xchg
dec
sahf
mov
stc
sbb
lods
dec
ljmp
sbb
inc
sahf
iret
test
pop
dec
cmc
inc
adc
lcall
mov
inc
shlb
aas
mov
inc
xchg
test
push
mov
lea
pop
std
sbb
and
xor
dec
push
push
movl
imul
and
mov
mov
add
mov
sbb
in
in
add
dec
jmp
lahf
xchg
or
pop
andb
in
sbbb
icebp
ja
dec
ss
sbbb
daa
pusha
add
mov
rolb
andb
dec
adc
clc
aas
loope
add
pop
jmp
inc
mov
notl
inc
sar
mov
test
gs
adc
aam
not
adc
push
cmc
sub
divb
mov
shll
push
insl
stos
or
mov
movsl
add
je
orl
icebp
mov
add
add
pop
dec
enter
mov
mov
imul
inc
jo
dec
in
daa
add
adc
cmc
adc
incl
mov
mov
rcl
dec
and
mov
inc
jo
fldln2
rcrl
pop
es
inc
rorl
enter
mov
roll
dec
mov
jmp
xchg
mov
je
xchg
mov
dec
or
mov
dec
stc
ja
jl
cmp
ret
imull
jae
pop
dec
push
sub
daa
add
jbe
adcl
push
insl
insb
xor
cmpsb
pop
sub
clc
or
add
filds
test
cld
inc
add
push
adc
pusha
push
sahf
imulb
addb
add
mov
loop
mull
loopne
nop
dec
arpl
jae
data16
gs
inc
push
gs
push
outsl
jb
fs
inc
loop
outsl
imul
outsl
dec
imul
jae
adc
pop
and
nop
leave
pop
int3
movsl
pop
adc
mov
aaa
xchg
call
push
add
dec
lods
and
jle
push
ss
and
mov
ss
outsl
stos
and
jge
lock
outsb
and
inc
dec
push
and
cs
pop
idivb
xchg
stc
pop
inc
roll
push
sbb
cli
mov
xor
dec
sbb
jp,pt
sti
in
jge
std
push
inc
shl
ja
es
push
fcomps
push
lock
lcall
push
mov
dec
cwtl
push
and
add
mov
stc
adc
mov
adc
or
jns
pusha
add
bsf
fnsave
cmp
cmp
push
dec
ret
xchg
push
out
pusha
push
in
sub
sub
cs
push
call
xor
dec
insb
test
jb
popa
and
into
add
dec
jb
mov
out
inc
cs
and
xor
fildl
jae
arpl
xlat
inc
inc
mov
lahf
test
nop
lahf
push
adc
dec
dec
push
or
notl
add
decl
or
add
xchg
and
adc
lods
popa
or
loop
dec
and
arpl
cmp
add
jbe
mov
push
xor
xor
js
in
add
dec
xchg
sarb
adc
cmp
inc
adc
fs
fidivrl
and
or
subl
ficoms
adc
cmpsl
mulb
and
aam
push
adc
dec
loopne
and
push
cmp
out
pushf
mov
cmp
and
cmp
int
xchg
sti
xor
out
adc
mov
adc
ja
ljmp
push
push
daa
aas
enter
mov
je
push
push
mov
fdivrs
test
mov
loopne
adc
sbbb
sbb
jmp
jns
inc
pop
add
je
fdivrl
lcall
jl
and
push
sbb
imul
push
je
sbb
dec
aam
push
shll
cmp
mov
pop
dec
ret
inc
inc
out
imul
cmpl
jae
ret
in
or
cwtl
jmp
daa
mov
subl
jmp
xchg
insb
sbb
test
rol
inc
sbb
fs
or
dec
or
lds
and
jne
add
cmp
mov
jbe
sbb
imul
sub
sub
insb
out
mov
or
sbb
loopne
inc
jl
push
ret
nop
rorb
cmp
out
or
or
cmp
sahf
dec
pop
push
xor
lcall
sub
add
int
mov
lcall
adc
push
push
dec
icebp
shl
mov
dec
mov
cmp
cmp
or
xlat
inc
js
pop
orb
daa
rorb
adc
pushl
mov
jb
mov
decb
je
jb
add
add
insb
cmpl
jne
dec
mov
imul
xor
inc
jo
pop
arpl
mov
icebp
and
adc
sbb
arpl
pop
push
xchg
js
lods
inc
push
aaa
xor
imul
cs
dec
mov
leave
mov
imul
call
add
push
dec
inc
dec
jge
mov
inc
mov
push
das
sbb
push
popa
aam
xor
pop
add
push
popf
out
cwtl
outsl
mov
push
cmp
push
enter
sbbl
add
inc
popf
push
test
nop
lcall
nop
inc
mov
mov
mov
mov
fldcw
add
lock
popa
add
pop
ret
pop
mov
and
push
sub
and
cmp
out
mov
outsl
push
cmp
and
push
fidivrs
cmc
add
pop
jae
imul
fdivrp
dec
insb
ds
adc
imul
sub
popa
pop
daa
into
and
outsl
out
mov
out
sbb
push
insl
bound
jb
jae
jne
out
jnp
arpl
and
sbb
aas
jae
sarl
mov
cmpsb
je
out
push
jl
push
jecxz
push
dec
je
out
outsl
jo
outsl
pop
jb
jbe
aaa
iret
jnp
subb
push
jae
jb
sar
pop
add
cmp
inc
add
ja
inc
outsb
bnd
jbe
fs
ja
ss
xchg
sbb
bound
sbb
out
adc
or
mov
rsqrtps
gs
cli
push
sbb
push
xor
cmpsb
outsl
repz
sbb
mov
sbb
stos
popa
fwait
pop
daa
sbb
outsl
es
testb
rcrl
sub
jbe
divb
dec
add
sub
sahf
push
inc
fimuls
jle
js
jmp
cmpsl
sub
xor
sarl
jns
and
inc
outsl
addl
xchg
mov
daa
scas
scas
and
xor
sbb
js
pop
pop
pushw
push
mov
adc
call
pop
scas
or
pop
ret
ja
jecxz
in
sub
arpl
fisubrs
add
loope
jp
out
lret
popa
cmpl
jmp
pusha
adc
or
pop
outsb
call
push
shrl
xchg
call
mov
cmp
sbb
xchg
sub
sub
arpl
pop
imul
mov
pop
stos
push
add
inc
sahf
subl
sti
insl
loopnew
ret
jecxz
sub
mov
adc
xchg
daa
sbb
or
add
daa
pop
call
jne
adc
lods
sbb
pop
das
fs
fwait
pusha
jp
repz
lock
sbb
pop
lea
decb
or
adc
sbb
and
add
xor
dec
pushl
push
xor
data16
jge
mov
xchg
xor
mov
shll
xor
xor
movsb
pushl
stos
xor
xor
xor
xor
xor
xor
xor
xor
ja
test
xchg
xor
xor
sti
pop
repz
sahf
inc
xor
push
xor
bound
test
mov
int
or
je
cmp
das
ja
arpl
outsl
xchg
fisubrl
jp
adc
inc
shll
call
add
ret
lret
ret
mov
jmp
movsl
mov
mov
lret
sti
jg
ror
idivl
dec
and
rcl
cli
mov
sarl
or
clc
jg
test
cli
mov
mov
mov
xor
ret
enter
in
outsl
xorb
cmp
inc
jno
jmp
cmp
outsl
ss
rcl
mov
mov
clc
aad
cmp
and
aam
jmp
ret
aam
vmaxsd
cmp
imul
lret
test
add
and
leave
mov
test
xor
mov
jo
cs
shrb
mov
stos
lret
cs
cs
cs
adc
repnz
int3
mov
add
loop
shlb
mov
mov
and
adc
decb
mov
mov
test
clc
jae,pn
sar
jbe
fcom
out
rol
popa
jle
jge
push
nop
das
add
ss
cmp
fistps
add
bound
arpl
aas
add
fwait
shlb
popa
ret
test
dec
loop
loopne
outsb
sbb
add
mov
ds
movsb
xor
dec
dec
mov
mov
mov
mov
inc
and
mov
xor
adc
mov
dec
or
inc
push
out
xchg
and
stos
inc
shlb
ss
loop
sbb
mov
xorb
jns
mov
push
jbe
popa
imul
insb
outsl
addr16
add
aaa
xchg
cmp
popa
arpl
gs
mov
gs
xor
or
insb
pop
pop
dec
jg
cld
inc
inc
dec
imul
inc
daa
loopne
jne
and
enter
arpl
es
rcrb
jb
jbe
cs
cmp
adc
jo
or
push
les
aad
pusha
nop
faddl
cltd
bound
aad
cld
das
sub
insb
jbe
outsb
popa
data16
xchg
and
and
nop
sbb
aad
enter
ss
push
adc
sbb
or
or
push
pop
inc
and
xchg
popf
aad
frstor
or
adc
or
ffree
aas
loope
sbbl
adc
add
jge
mov
test
sahf
out
sub
inc
pushf
jge
jecxz
push
mov
pop
out
ja,pt
test
imul
aas
xchg
ss
jle
mov
insb
sub
aaa
xor
ss
sbb
jnp
dec
sbb
dec
push
inc
rolb
scas
sbbb
add
add
test
scas
or
mul
or
pusha
jl
mov
and
mov
or
pop
inc
shrb
inc
sub
pusha
or
das
dec
in
inc
loopne
push
inc
fidivrs
fcmovnb
nop
fsubs
clc
cwtl
out
div
pmaxsw
xchg
movsb
sbb
or
pusha
adc
push
shl
xlat
out
mov
into
sbb
pandn
insl
jl
clc
adc
sbb
add
adc
mov
push
pop
adc
imull
or
pop
push
popa
daa
ret
jle
or
pop
adc
push
add
add
mov
call
out
ret
mov
fs
push
fstl
test
enter
mov
add
jns
mov
das
sub
xor
xor
xchg
mov
test
sbb
nop
cmp
xchg
sbb
xchg
sub
mov
inc
enter
daa
sbb
stc
in
mov
sbb
stos
sbb
adc
xchg
jl
sbb
pop
and
rolb
std
pop
sbbb
pushf
inc
int
mov
and
jb
js
and
cmp
or
inc
pop
dec
cmpsl
clc
sbb
inc
sbb
push
ds
add
arpl
and
add
ret
paddusw
add
xchg
in
inc
test
cli
push
lock
negl
mov
push
jmp
imul
das
sub
add
or
arpl
or
adc
xchg
xorl
arpl
popa
popa
leave
hlt
xlat
pop
ja
je
push
or
aas
sbb
adc
sub
mov
and
jbe
adc
push
and
jae
adc
sub
fsubr
mov
in
cmpsl
hlt
call
sub
insl
and
jmp
mov
stos
or
adcl
ret
mov
mov
jb
and
mov
add
popa
orl
adc
or
mov
cld
ret
push
jmp
and
inc
test
xchg
mov
pusha
inc
cs
add
adc
push
push
clc
jbe
add
sub
xor
lret
fucomi
sbb
mov
cli
xor
sub
in
xchg
adc
stc
adc
xchg
add
xchg
mov
test
inc
pop
outsl
or
cmp
push
sub
fchs
mov
cmp
or
inc
xchg
es
in
loopne
add
les
sbb
rol
in
mov
test
and
ja
cmp
incb
mov
xchg
push
push
flds
mov
xor
xchg
call
fcoml
cli
or
andl
pop
out
les
ficompl
lret
push
call
inc
or
pop
stos
pop
pop
mov
scas
sub
xor
inc
push
and
or
and
inc
xadd
add
jmp
enter
add
or
call
aam
mov
call
push
repnz
in
lock
frstor
popa
fldenv
pop
adc
call
les
lock
lods
push
in
inc
rsqrtps
push
adc
mov
rcrl
push
mov
mov
mov
popa
popl
inc
fsub
iret
stc
ret
subb
sar
in
jb
ss
xchg
repz
div
or
jecxz
or
fwait
and
std
lods
cmp
add
lcall
fsub
xor
xchg
adc
fsub
outsb
push
inc
shl
cltd
cmpsb
sub
pusha
test
movsl
popa
add
testl
daa
push
aam
lret
add
sub
sti
mov
invd
sti
jo
or
inc
add
dec
mov
jb
fs
test
ja
pop
xor
mov
and
dec
jno
gs
mov
scas
sub
xchg
push
push
jl
adc
and
mov
and
loop
loop
pop
sti
pop
gs
cltd
jl
lock
dec
lcall
adcl
or
popf
lods
add
int3
push
das
clc
sarl
fstl
sti
pop
popf
arpl
add
xchg
inc
dec
or
pusha
or
mov
inc
sbb
popf
dec
nop
mov
or
shlb
or
pop
subl
adc
inc
pop
jae
dec
popf
push
lahf
mov
xchg
adc
adc
push
or
call
enter
ja
pop
pop
cld
pop
mov
enter
js
into
fmuls
or
aam
jmp
les
in
mov
fdivr
cltd
mov
in
push
aas
call
add
icebp
sahf
das
rolb
sbb
inc
lods
inc
add
popf
out
jbe
sub
push
push
mov
test
mull
cs
sub
push
xchg
inc
or
jmp
adc
dec
mov
fstpl
or
push
outsl
jb
dec
enter
jecxz
xchg
mov
pusha
inc
cmp
cmp
add
xor
push
jb
dec
cmp
inc
cmpsb
in
rorb
pushf
xchg
push
jb
pop
call
add
xorl
in
and
xor
lods
xchg
punpckhdq
pop
dec
int
mov
cmp
inc
xchg
repnz
add
in
and
inc
fcom
push
cmpsb
inc
nop
pop
xchg
xchg
jae
push
bndldx
xchg
sbb
jns
call
fs
sarb
xchg
pop
repnz
and
mov
mov
loope
push
dec
inc
mov
movsl
push
inc
shll
add
push
std
push
out
jp
pop
shrl
jb
inc
lock
mov
out
sbb
push
test
sbbb
add
in
xchg
pop
adc
sbb
loopne
or
add
sub
bound
xchg
test
sub
and
mov
add
fsubl
jns
add
in
mov
in
mov
sbb
xor
sub
in
jl
jns
push
xchg
ret
rorb
inc
pop
imul
cmp
or
xchg
lods
mov
ret
imul
inc
movsb
add
or
in
lods
pop
ds
and
add
add
cmp
or
insl
in
aaa
leave
xchg
in
in
icebp
sub
ds
in
xchg
leave
int3
icebp
xchg
in
cmp
adc
pusha
daa
jge
or
out
adc
or
jecxz
inc
sub
inc
cmp
sub
inc
into
add
fdivp
cmp
add
fdivr
mov
inc
xchg
leave
jmp
add
xchg
in
pop
lret
sub
cld
mov
dec
cmp
cwtl
or
add
xchg
xor
mov
into
add
add
and
sti
ret
call
mov
jns
test
inc
push
pop
dec
es
dec
mov
cmp
sbb
inc
jb
add
xchg
adc
loop
push
xchg
outsl
in
or
mov
test
add
sbb
inc
lahf
add
insl
pop
fs
jp
clc
inc
aad
inc
insb
test
fcmovne
incl
movsl
and
add
cmpsl
in
sub
incb
pop
push
add
sbb
aad
scas
adc
and
in
jno
ds
xor
fs
xchg
or
pusha
inc
push
stc
outsb
in
je
dec
xchg
ret
call
sub
popf
enter
lea
jmp
pop
pop
dec
pop
mov
adc
stc
push
cs
add
in
cmp
imul
cwtl
in
mov
mov
push
movsw
sarl
ret
mov
inc
xchg
lods
and
dec
push
imul
and
or
mov
movsb
cld
sbb
cmp
sti
jmp
inc
lock
fsincos
mov
adcb
add
push
xchg
lcall
cmp
pop
jp
lret
pop
push
inc
fidivs
outsb
ret
je
cmp
push
sti
out
cmp
xor
pop
or
lods
adcl
aad
and
cwtl
or
cli
add
insb
outsl
inc
enter
adc
cmpl
mov
or
mov
xor
dec
push
addr16
in
jns
push
adc
fiadds
fwait
inc
jle
xchg
ret
fs
xlat
and
adc
aam
jns
bound
jne
xchg
pop
xchg
std
push
stc
test
inc
mov
adc
jmp
xchg
xchg
mov
and
sbb
clc
popa
sbb
and
adc
jno
notl
xchg
call
call
bound
inc
jmp
jge
mov
add
push
dec
inc
pop
fidivs
movsl
xchg
loop
divb
and
sahf
mov
adc
mov
pop
pop
mov
cmp
adc
test
add
lods
outsl
jno
je
xchg
pushf
nop
shrd
jae
imul
mov
loope
addr16
enter
cmp
nop
test
xchg
inc
jb
cmc
outsb
cmc
gs
xor
sbb
and
repz
std
adc
test
pop
imul
xchg
nop
mov
loope
cli
fs
scas
adc
cwtl
hlt
in
jl
add
add
xchg
loope
flds
or
insb
aad
out
cmp
es
and
inc
dec
adc
hlt
in
in
cs
jno
clc
pusha
sub
imul
mov
pop
jecxz
into
pop
push
clc
enter
adc
imul
xor
jle
lret
or
mov
xchg
pop
jg
and
nop
lret
or
cmp
lret
or
jns
ficomps
adcb
rcll
adc
xchg
jecxz
add
fcomip
ret
repnz
inc
mov
addr16
xchg
out
fldt
xchg
sti
cltd
xchg
push
enter
repnz
push
xor
es
repnz
push
lahf
add
cmp
xchg
xor
shll
in
scas
mov
icebp
movsb
daa
call
or
pop
or
mov
xor
adc
jl
mov
dec
and
jns
push
xchg
ljmp
stos
adc
inc
rorb
mov
out
lock
push
cmpsb
adc
popf
mov
rdmsr
aaa
lret
mov
enter
cmp
sub
jb
fs
pop
lock
cmp
and
dec
push
enter
call
in
mov
push
mov
enter
mov
test
daa
nop
out
push
call
faddp
rorl
jo
jmp
and
cmp
sbb
inc
loopne
jnp
jbe
jbe
or
inc
cmpl
in
push
jnp
adc
pop
lds
pop
cmpsl
lahf
mov
xor
std
sbb
out
sahf
dec
add
jnp
nop
dec
mov
add
jno
ss
dec
push
xor
inc
mov
and
sbb
jmp
rcll
add
or
in
mov
repnz
ret
lahf
lcall
inc
enter
in
in
stos
movsb
sub
lods
stc
pop
sub
push
call
jne
pop
js
test
add
mulb
and
xchg
xchg
sbb
push
sti
adc
fcoms
inc
nop
inc
in
sbb
add
jb
pop
xchg
je
mov
and
push
in
cmp
in
push
in
mov
push
nop
inc
mov
insb
nop
and
in
enter
xchg
nop
iret
jmp
fildll
pop
adcb
inc
adc
pop
cltd
xchg
jne
std
inc
push
sbb
enter
ljmp
add
and
inc
dec
and
fadds
pushf
rclb
cmp
fbld
sbb
bound
fs
cld
test
mov
sub
inc
sti
mov
mov
jns
and
clc
call
jecxz
mov
sbb
xchg
cmpsl
mov
xchg
call
in
nop
call
lret
jae
stc
jb
orb
mov
cmp
inc
push
enter
out
push
repnz
mov
dec
lret
orb
push
mov
dec
sbbl
ret
sbb
xor
push
cmp
out
aad
cmp
sbb
mov
add
and
movsl
and
in
mov
pusha
add
adcl
mov
mov
dec
cmp
or
mov
and
cmp
shl
lods
in
pop
add
add
pop
and
ret
loop
inc
and
and
cmpl
inc
movsl
push
loop
xchg
mov
xor
nop
dec
and
out
lret
mov
pop
push
in
loop
or
sbb
push
repnz
push
leave
mov
imul
add
mov
pop
mov
push
or
lock
and
loope
pushf
jbe
pop
or
xor
popl
sbb
sbb
push
loope
mov
jns
jle
dec
stc
xchg
dec
ds
je
repnz
mov
in
xchg
fs
loopne
xor
and
push
les
dec
and
fbld
rolb
and
leave
filds
mov
xchg
icebp
mov
add
and
push
cmp
in
enter
int3
add
js
add
nop
enter
fwait
sub
aaa
mov
jb
fs
in
das
out
xchg
push
test
rcrb
in
xchg
xchg
fadds
fdivl
mov
jns
cmpsl
or
mov
sbb
jmp
adc
add
fwait
dec
adc
adc
enter
inc
xchg
movsb
jb
pop
pop
js
nop
add
add
add
dec
in
sub
lret
jb
or
jns
xor
fadds
or
xchg
inc
or
mov
mov
or
loopne
cli
push
in
fisttpl
dec
imul
jmp
adc
xor
add
and
push
sbbb
sbb
mov
lret
fiaddl
call
sbb
push
outsl
lods
mov
or
jnp
in
in
mov
inc
or
js
call
lret
and
sub
lods
hlt
in
fsubl
clc
sub
and
xchg
push
fdivr
out
cli
cs
jmp
call
in
jp
jb
push
jb
jo
pop
and
push
test
dec
pop
mov
repnz
lock
inc
repnz
add
sub
loop
jmp
aas
bound
mov
and
sub
xlat
dec
xchg
cmp
cmpsb
push
out
mov
fwait
jmp
inc
push
clc
pop
xlat
leave
add
enter
cmp
cmp
lds
enter
ljmp
mov
dec
mov
mov
daa
fs
jb
sub
or
cmp
add
mov
or
roll
cmp
test
shlb
sbb
jae
sbb
popa
fs
cmp
jno
xor
lret
int
mov
mov
mov
push
or
pop
test
popa
dec
cmp
ljmp
pop
and
pop
cmp
mov
pop
jb
arpl
mov
mov
or
sbb
fwait
adc
sbb
jmp
push
fs
or
fnstcw
mov
addl
sub
in
mov
xor
or
ror
out
mov
sbb
rcrl
shr
lcall
adc
ja
and
pop
repz
xorl
je
cltd
call
mov
push
shll
or
mov
mov
sub
or
pop
inc
add
mov
sbb
xchg
push
pop
adc
push
repnz
mov
into
fcompl
or
inc
push
mov
into
sbb
xorl
loopne
adc
in
mov
add
cld
mov
call
push
outsl
xor
dec
add
adc
addr16
mov
cmpl
or
adc
add
rcl
in
adc
inc
push
adc
push
out
test
push
movsl
loope
pushf
or
sbb
sarl
adc
ja
push
cmpsl
lock
cs
sbbl
test
mov
pushf
inc
jo
movsl
fwait
sub
pop
insl
dec
loopne
mov
xor
jmp
push
inc
adc
push
pop
mov
roll
fmul
xor
mov
jne
rcrb
out
and
in
jo
adc
dec
stos
rclb
addr16
mov
nop
and
rolb
icebp
into
push
addr16
scas
enter
dec
sub
mov
sbb
sbb
test
jne
xor
mov
iret
and
mov
movsb
shlb
inc
adc
dec
pop
ret
sub
mov
je
or
mov
and
and
add
out
adc
mov
ror
sti
xchg
lock
sub
adc
mov
test
and
les
adc
ljmp
push
inc
push
test
test
es
dec
xor
xor
sbb
leave
add
inc
std
jmp
and
js
add
testl
jno
xchg
add
mov
add
sub
inc
rcrl
dec
int
adc
fsubrs
pop
sbb
roll
dec
mov
lods
das
ret
scas
cs
pushf
sub
aaa
and
mov
xchg
sub
pop
inc
inc
adc
jno
adc
fcompl
cmp
inc
les
adc
adc
inc
xlat
add
lret
cmp
add
cmpl
and
adc
in
sub
dec
mov
lret
and
inc
xchg
mov
adc
and
mov
adc
dec
pusha
dec
insb
add
inc
xchg
adc
dec
push
test
addr16
daa
enter
adc
adc
mov
sub
add
inc
push
in
in
mov
in
inc
repnz
jne
mov
in
adc
push
jb
clc
mov
inc
pop
or
in
je
mov
dec
and
std
leave
jecxz
pop
sbb
push
push
rolb
inc
test
int
aas
nop
outsb
subl
fimuls
imul
mov
enter
jno
jbe
shlb
xor
inc
xchg
loopne
enter
daa
fsub
mov
adc
mov
mov
inc
pushf
not
dec
cmp
and
shrb
adc
pop
adc
imul
mov
subb
sti
test
or
and
mov
add
aaa
cmp
adc
adc
int3
adc
or
mov
add
inc
mov
xor
fwait
jl
push
repnz
cmc
jnp
or
dec
loope
cmp
aaa
lret
push
mov
adcb
add
pop
mov
dec
xchg
xchg
aaa
adc
mov
pushf
cmp
aam
lret
arpl
mov
or
dec
loop
ret
cmpsb
push
insl
lods
xchg
jae
cmp
and
in
loopne
clc
push
push
in
imul
mov
push
pop
insl
pop
sub
icebp
mov
fucompp
mov
mov
repz
jb
pop
add
mov
nop
fwait
xchg
cmpsb
add
movsl
lods
int3
lds
add
inc
mov
dec
out
xchg
add
popf
mov
mov
dec
lods
std
and
jb
outsb
loop
xor
sub
popa
stos
in
fmull
or
push
call
out
decl
stos
xchg
inc
or
xchg
mov
jecxz
out
test
rorl
dec
jne
pop
adc
pushf
pop
stos
pushf
xchg
mov
cmp
les
inc
push
enter
les
jp
les
nop
and
dec
in
sbb
test
xchg
or
adc
add
adc
ret
sbb
mov
pushf
fldt
movsl
add
add
mov
lods
xchg
sbb
aas
mov
les
and
or
addr16
pop
and
filds
jno
push
das
and
rorl
in
inc
xchg
push
das
inc
mov
push
pop
and
lcall
sbb
stos
add
or
push
movsl
das
adc
xchg
popa
icebp
shrl
and
pushf
mov
or
andl
cmpsb
sub
or
shlb
mov
or
and
and
imul
inc
inc
inc
imul
jo
dec
and
and
mov
sbbl
cmp
mov
cmpl
bound
pop
mov
inc
imul
mov
mov
test
and
sbb
cmpsb
lret
pop
and
dec
or
loop
mov
das
jae
or
mov
hlt
mov
adc
das
push
mov
mov
jns
rolb
jno
dec
pushf
nop
outsb
adc
push
mov
and
xchg
das
sub
pop
or
pop
and
adc
mov
jbe
push
fs
sbb
xchg
mov
jle
das
and
push
mov
push
pop
das
clc
adc
add
das
xchg
add
push
push
movsl
add
mov
das
or
inc
imul
add
fstl
movsl
add
js
inc
cs
and
das
add
loop
add
movsl
das
mov
shrb
add
inc
and
dec
das
inc
pop
add
xor
cwtl
mov
sbbl
pop
pop
pop
xchg
inc
outsb
mov
out
mov
add
adc
sub
orl
or
test
inc
pop
dec
das
out
inc
mov
xor
test
sub
fs
sub
xor
sub
arpl
or
cs
scas
xor
sub
js
adc
es
das
into
jg
mov
sub
ss
in
fs
aaa
push
push
cmp
nop
or
ljmp
adc
call
adc
dec
cmp
xchg
jo
sub
push
aam
das
and
rorb
andl
pop
pop
and
pcmpgtb
mov
mov
je
and
adcl
mov
or
xchg
cltd
sahf
sahf
adc
sbb
lcall
inc
mov
leave
add
mov
fcoml
das
add
cltd
jbe
inc
push
pop
das
ret
imul
inc
outsl
imul
xchg
sub
pop
pop
mov
and
sub
je
mov
adc
pusha
mov
add
adc
pushf
inc
std
xorb
pop
sub
mov
sti
push
rolb
jno
cmp
sbb
inc
imul
int3
mov
out
inc
push
and
je
and
cwtl
dec
mov
mov
pushf
push
add
mov
sub
jnp
les
ret
or
pop
fiadds
rolb
pop
sbb
mov
dec
das
out
imul
lea
add
test
inc
imul
in
arpl
sbb
and
xorb
add
das
add
and
enter
pop
faddp
cmp
imul
das
push
sti
push
mov
add
das
mov
inc
mov
and
les
dec
sbbl
and
inc
mov
and
and
filds
mov
subb
test
hlt
scas
aam
daa
seto
lret
scas
rcl
and
dec
mov
jno
xor
das
inc
push
jl
dec
or
sbb
das
pop
mov
scas
adc
imul
or
xor
cli
lods
in
cmp
enter
push
lods
les
sbb
movsb
dec
or
adc
lods
test
mov
das
ret
push
jb
sarl
rolb
jno
das
inc
pop
shll
out
stos
mov
arpl
or
das
popa
dec
lods
push
mov
inc
ss
cmp
xchg
das
or
pop
xchg
push
mov
push
das
jbe
mov
add
das
mov
jae
sub
xchg
push
das
sub
lds
pop
adc
add
or
fisubrs
push
or
push
jo
stos
mov
movsl
pop
and
inc
shrl
push
sbb
push
imul
xor
pop
and
mov
test
push
das
ljmp
inc
push
imul
bound
das
sub
adc
scas
xchg
movsb
das
sub
add
mov
jnp
movsl
das
cld
test
xor
loopne
fstpl
into
ret
jno
push
das
movsb
push
aam
shrb
lock
sti
mov
faddl
mov
jnp,pt
xor
xlat
shlb
jbe
rcrb
rorl
cmpsl
mov
add
test
push
mov
cmp
jns
cmp
cmpsb
mov
jns
popl
jo
nop
mov
das
push
pop
and
pop
das
xchg
push
or
data16
mov
faddl
xchg
mov
stos
pop
xchg
push
das
sahf
movsl
xchg
push
enter
jp
nop
mov
adc
sbb
nop
pop
movsl
and
movsb
and
sub
rolb
jno
push
push
cmpsb
adc
subb
nop
inc
and
sti
mov
and
fwait
mov
and
adc
xchg
cmpsl
lock
or
sub
enter
in
mov
stos
pop
mov
mov
in
cmp
jmp
addl
dec
mov
in
lea
in
je
jno
mov
lea
pop
das
shrb
inc
popf
push
mov
repz
adc
sbb
in
in
push
mov
add
fldl
popf
pop
lock
insl
or
dec
adc
or
inc
imul
jmp
push
stos
test
mov
xchg
hlt
dec
mov
test
mov
add
pop
and
lods
je
sub
jo
mov
test
inc
sub
pmulhuw
cmp
push
and
es
in
insb
xor
sahf
mov
rolb
icebp
mov
in
pop
popf
js
sub
and
shlb
cwtl
xor
mov
loopne
xor
sbb
enter
pop
pop
hlt
cli
popf
dec
or
sbb
test
cs
mov
dec
sahf
popf
mov
xchg
cmp
push
push
popf
inc
popf
cltd
scas
dec
enter
clc
jecxz
and
pushf
inc
add
cltd
lret
xorl
sbb
cli
and
or
push
dec
lcall
xor
pop
xchg
das
call
dec
das
add
sti
mov
test
cld
inc
sti
fwait
and
xchg
push
das
inc
or
mov
das
adc
aam
cmp
loopne
cmp
sbb
or
xlat
in
pop
jmp
pop
das
lea
shrl
loope
rolb
das
xchg
dec
push
cmpsb
jmp
sub
sub
lods
add
out
lcall
lahf
test
loopne
mov
popf
popa
cli
inc
inc
ss
shll
push
movsl
jecxz
or
das
shlb
jns
insb
lods
dec
clc
es
in
xor
adc
out
cltd
lods
or
cmp
sbb
lcall
push
pop
and
mov
jecxz
or
mov
xor
aaa
outsl
inc
mov
imul
mov
push
aam
stos
mov
mov
inc
sbb
dec
or
or
rorb
mov
inc
adcb
scas
mov
and
cmp
pop
das
jo
add
mov
rolb
jno
and
push
mov
movsb
mov
das
outsb
enter
adc
adc
out
bound
sbb
or
xlat
xchg
add
ret
arpl
lock
popf
movsl
lahf
rolb
gs
and
mov
ja
adc
adcb
mov
mov
sbb
mov
inc
imul
sbb
cmp
mov
xchg
scas
sub
inc
mov
jmp
cmp
movsl
inc
pop
shll
xchg
or
push
arpl
cmp
jo
xor
push
lds
lahf
and
xor
add
xorl
aaa
add
ja
and
push
add
sub
or
iret
icebp
xchg
or
cmpsb
add
xchg
sbb
jno
test
ss
insb
mov
push
lock
xchg
pop
and
inc
inc
fstpl
dec
pushl
lahf
add
xchg
pop
popl
das
and
dec
cmc
test
jne
add
es
adc
outsl
cmpl
lods
in
cmp
pop
pop
movb
xchg
or
or
or
test
and
jne
pop
or
or
pop
lcall
lock
scas
xor
push
pop
cmpsb
incl
pop
dec
in
xor
pop
adc
dec
xchg
add
sub
clc
xchg
jecxz
inc
pushf
push
inc
jge
pop
or
inc
sbb
mov
into
push
nopl
mov
mov
mov
or
adc
xchg
or
mov
lock
jmp
mov
xchg
or
in
into
cmp
mov
and
int3
inc
pusha
nop
mov
sbb
xchg
popf
adc
movl
adc
push
loop
popf
pop
rolb
xor
mov
mov
jmp
sbbb
shl
scas
jae
xchg
in
mov
or
adc
push
fs
dec
test
pop
aaa
popa
and
icebp
lcall
xchg
jmp
call
lret
pushf
and
mov
sub
and
inc
out
cmp
mov
push
sbb
xor
mov
div
xchg
out
cmc
dec
adc
fcmove
popf
nop
call
or
adc
mov
push
push
loopne
mov
pop
jb
hlt
popl
jne
clc
mov
push
add
lock
adc
sbb
lahf
sub
jbe
lods
lea
hlt
ret
inc
popa
mov
or
popf
shll
dec
inc
push
inc
mov
or
jge
sbb
cmp
xor
je
addr16
inc
or
addr16
add
pop
add
jns
dec
push
pop
in
cmp
repnz
mov
dec
sub
in
sahf
xchg
dec
ja
mov
jo
dec
addr16
je
test
dec
insl
xchg
popf
xchg
mov
jg
into
into
mov
inc
cmp
adc
scas
adcl
adc
lock
imul
or
push
enter
add
add
jns
ljmp
movsb
sbb
add
inc
ss
aam
icebp
fisubs
push
pop
in
lds
adc
lea
and
push
inc
ja
dec
inc
jno
lea
or
scas
in
psrld
and
in
mov
test
mov
inc
or
cmp
imul
das
les
adc
sub
add
pop
les
dec
into
lret
adcb
leave
add
adc
xor
add
mov
sbb
dec
pushf
and
xchg
push
decb
mov
and
movsl
popf
and
cmp
mov
call
movsb
push
sbbl
sahf
cmpsb
sbb
das
or
loopne
test
cs
mov
mov
test
jmp
or
xchg
mov
cmpsl
in
jne
pop
mov
pop
push
rorl
or
sbb
pusha
push
repnz
and
add
pop
jge
bound
push
enter
cmc
mov
mov
or
inc
inc
jp
push
add
enter
mov
xchg
or
nop
inc
std
xchg
ss
xchg
adc
ret
add
fmuls
out
enter
sub
sub
mov
mov
cmpsl
push
xchg
xrelease
jns
fiadds
addr16
cmp
dec
sbb
hlt
sbb
loopne
incl
pop
mov
and
sub
bound
sti
pop
and
inc
inc
fisttpl
adc
push
das
insb
and
fadds
xor
call
inc
adc
add
xor
dec
cltd
sub
fiaddl
pop
xchg
lods
or
lret
shrl
lret
pop
or
adc
pop
sbb
adc
push
push
push
cltd
roll
int3
jne
pop
std
sbb
fists
xor
xchg
pop
pop
push
jne
imul
mov
cmpsl
adc
mov
xchg
dec
mov
loope
call
and
jno
pop
push
xchg
push
sub
test
test
lock
push
aad
popf
int
add
dec
adc
nop
dec
pusha
or
xchg
push
loop
test
js
xchg
cmp
dec
xchg
testl
xchg
jno
jmp
cmp
and
dec
inc
pusha
adc
pop
fndisi(8087
addl
adc
insl
pop
test
and
sub
add
pop
cmp
pop
inc
pop
les
sbb
push
enter
test
add
in
movsl
test
and
sbb
lds
sub
in
movsbl
add
mov
adc
mov
decb
jno
dec
add
jle
pop
sub
mov
xor
ss
mov
mov
and
jne
rclb
clc
imul
inc
in
mov
add
cmpsb
mov
or
add
jl
sbb
pop
or
and
inc
inc
cmp
aad
mov
icebp
mov
fadds
add
adc
mov
fwait
movsb
adcl
subl
add
rolb
imul
sbb
cld
arpl
mov
loope
imul
shr
leave
inc
xchg
xchg
jmp
cmp
dec
test
add
xchg
and
push
sub
and
mov
adc
loopne
add
fcomp
sbb
add
inc
imul
adc
lret
mov
push
inc
nop
add
add
inc
pop
adcl
arpl
and
incl
inc
push
push
std
cmpb
mov
xchg
nop
pop
mov
leave
or
andb
or
xchg
or
push
insb
scas
mov
call
dec
add
leave
mov
jno
or
inc
push
add
rcll
call
repnz
sbb
or
pop
mov
jg
jg
lret
ret
mov
pop
push
fsubrl
mov
pop
add
or
shl
addb
xchg
lock
jg
or
stc
or
in
mov
and
test
adcb
push
ljmp
jle
clc
fdivrl
jecxz
pop
lods
loopne
shr
pushf
jle
inc
and
sbb
mov
push
pop
jle
sbb
mov
adc
add
or
nop
iret
adc
push
in
je
add
jge
or
and
mov
sahf
jge
push
mov
pop
clc
pushf
loop
or
hlt
adcb
mov
jne
xlat
sub
lea
in
fwait
pop
jge
sbb
adc
add
clc
jmp
inc
jmp
icebp
push
movb
adc
lock
fildll
das
adc
push
or
fisubrl
lds
stc
jl
push
dec
jl
jl
inc
jb
pop
jne
sbb
arpl
nop
jl
insb
inc
loope
pop
cs
test
adc
adc
adc
es
add
jnp
or
loope
cmp
inc
xchg
xchg
gs
test
and
sbb
mov
push
add
push
push
xchg
shll
push
jns
fldenv
adc
add
add
in
adc
fildll
jmp
adc
and
sub
fstps
in
lock
pop
mov
add
enter
int
outsb
jmp
or
add
and
aaa
jp
add
inc
or
jp
xor
mov
in
jns
mov
fisttpl
push
pop
lods
into
cmpsb
pop
pop
pop
pop
pop
xchg
lock
scas
mov
sbb
lea
pop
cmp
js
shll
scas
pop
js
js
sub
add
or
test
leave
ja
cmp
adc
or
test
adc
test
jecxz
hlt
and
lea
ja
adc
mov
gs
cltd
or
xor
adc
repnz
in
fidivl
sbb
jbe
jbe
add
cmpsb
jbe
or
xchg
xchg
jbe
mov
and
and
lock
fst
addb
mov
call
fldcw
sub
push
jecxz
adc
cmp
shrb
ret
cmp
sub
enter
or
mov
pop
outsl
inc
repnz
mov
je
push
or
int3
outsl
std
pop
enter
pop
mov
and
push
sbb
adc
push
mov
cmpb
jae
leave
xor
sbb
xchg
dec
in
add
sbb
adc
push
jae
sarl
sbb
add
jae
jae
or
push
test
sbb
push
sub
loope
mov
in
mov
mov
imul
xchg
xchg
hlt
dec
jb
in
jb
mov
in
mov
stc
pusha
push
push
pop
divb
and
shlb
in
pusha
jmp
sub
enter
and
xchg
inc
xor
or
outsl
subl
adc
out
mov
add
push
shll
mov
push
enter
cmp
pop
pop
and
fadd
cmp
test
or
mov
add
sub
and
add
push
sbb
dec
and
push
xchg
push
daa
mov
push
xchg
inc
pop
pushf
fnstenv
leave
insl
mov
xorl
and
ja
cmp
mov
outsl
or
outsb
lcall
clc
inc
lock
cmpl
or
add
or
mov
lods
outsl
repz
or
std
push
in
jae
xorb
add
add
sbb
sbb
outsl
fadds
cmp
or
jmp
clc
fisttps
pusha
and
sub
push
cmp
sub
leave
and
out
imul
dec
dec
gs
in
jl
xor
fidivl
das
mov
repnz
sub
pop
add
leave
ja
inc
jle
cs
test
rol
adc
imul
adc
add
addl
das
sub
lcall
adc
cmpsl
push
add
gs
mov
sub
cwtl
mov
fs
xchg
mov
dec
or
loop
dec
or
push
or
jmp
jo
test
push
push
test
daa
repnz
pop
push
or
xor
fiaddl
or
les
fdivrl
pop
shrl
sbb
pop
cmp
repz
add
inc
push
mov
js
cwtl
xor
pop
mov
sub
imull
insb
push
dec
push
sub
je
adc
test
sbbl
or
test
push
adc
pop
aam
les
int3
int3
ficoml
mov
or
ds
je
jle
rorb
xchg
push
xor
mov
dec
mov
mov
mov
cltd
pusha
bound
pop
mov
sub
push
hlt
cmpb
in
sbb
push
mov
sbb
and
push
andnps
mov
cmpsb
lods
push
jne
adc
fmull
or
jmp
jge
or
mov
pop
pop
movsl
adc
sub
nop
push
ret
jg
mov
push
insl
and
jae
jmp
fsubl
jnp
push
or
push
movsb
adc
ljmp
mov
subl
fcomps
jo
jns
sbb
mov
pop
xchg
xchg
js,pt
imul
jae
nop
inc
jb
push
pop
push
push
add
hlt
fs
ja
fs
cmpsb
mov
movl
roll
xor
leave
js
aad
shrb
mov
fmull
orb
loopne
cmpsb
add
divb
shr
lds
sarb
stos
fwait
int3
and
mov
mov
fcompl
int3
jne
popa
lock
out
movsb
cwtl
jmp
mov
sub
or
in
add
push
sub
iret
ret
dec
add
rclb
pop
mov
arpl
ljmp
mov
mov
cmp
mov
mov
enter
or
push
call
mov
loopne
in
mov
adc
shlb
pop
sub
test
xor
mov
mov
mov
rclb
lods
sub
push
je
adc
dec
dec
adc
xor
inc
cltd
das
ljmp
cmc
div
adc
enter
mov
add
adc
mov
stos
pop
repz
or
shlb
sub
icebp
pop
or
lcall
imul
data16
inc
dec
loopne
jb
mov
inc
filds
repnz
ljmp
inc
and
inc
es
insb
movsb
cmp
jno
adc
add
push
or
iret
inc
dec
les
call
sub
ljmp
or
fwait
gs
enter
mov
popa
stos
sub
adc
xchg
ja
xor
dec
cltd
dec
adc
mov
gs
adc
stos
pop
ja
jbe
inc
jb
mov
loope
mov
xchg
arpl
xchg
arpl
xchg
lret
arpl
mov
arpl
nop
inc
enter
out
daa
cmp
dec
scas
inc
push
and
dec
bound
push
add
mov
ret
dec
or
jno
aad
popa
mov
push
adc
mov
sbbl
push
sbbb
add
int
cmpb
sbbb
inc
sbb
cmp
adc
and
add
or
add
sbb
pop
jb
jo
pop
out
das
dec
pop
xchg
adc
dec
pop
and
in
outsl
xchg
inc
mov
pop
jmp
sbb
mov
test
mov
sbb
dec
int3
mov
lret
or
aam
dec
stos
pop
inc
jae
nop
enter
rolb
out
in
cmp
push
pop
cmp
inc
rcr
leave
insb
add
enter
pop
cmp
adc
mov
insb
jb
in
es
mov
lods
shll
imul
and
sbb
dec
fcoml
and
add
inc
imul
inc
xor
xchg
in
call
and
xchg
int3
insl
mov
test
sbb
cmpl
movsl
or
and
ficoms
mov
div
inc
sub
push
push
jecxz
jl
mov
push
movsl
and
add
inc
sbbl
push
leave
push
and
add
add
inc
dec
push
enter
and
push
or
repnz
orb
adc
add
xor
cmp
sub
jb
bound
mov
jns
xor
dec
push
cmp
add
push
stc
push
push
jae
add
push
dec
int3
int3
adc
push
cmp
add
inc
push
sbb
gs
enter
icebp
push
cmp
and
addr16
add
jecxz
jmp
and
in
push
notl
cmp
dec
xorb
xlat
test
xchg
add
nop
push
das
push
pop
repnz
in
push
fisttps
add
and
pushf
inc
push
sub
dec
inc
push
test
dec
pop
and
dec
mov
popl
dec
hlt
dec
cld
pop
and
cmp
leave
mov
insl
push
rorl
in
sbb
int3
dec
mov
push
bnd
jl
aaa
imulb
xor
pusha
test
sub
xor
adc
mov
orl
test
dec
push
sbbb
inc
push
jecxz
sub
mov
xchg
inc
cmc
inc
inc
lcall
dec
ja
or
mov
cmpsb
add
add
mov
jge
inc
add
inc
dec
pop
dec
mov
or
add
xchg
xor
daa
mov
dec
push
cmp
mov
sbb
aas
sub
cmpsl
inc
popf
lods
dec
cmpsb
push
fcoms
add
mov
mov
add
std
cmpsb
call
or
mov
mov
add
and
pusha
xchg
or
aad
int3
jmp
sarb
or
cmovbe
push
and
les
imull
or
mov
inc
add
push
mov
sbb
add
sahf
xor
cmpl
inc
dec
das
dec
mov
adc
cmc
pop
call
dec
in
jb
testb
loop
and
aam
roll
in
loop
adc
mov
inc
pop
daa
subl
hlt
int
cmp
stos
or
out
add
sbb
dec
leave
nop
dec
cmp
js
test
or
ret
adc
aam
push
lods
adc
lock
or
jno
lods
insl
enter
inc
cmpsl
pop
sbb
lret
rclb
push
or
in
hlt
das
jmp
push
inc
xchg
adc
pop
repz
jne
inc
push
clc
push
movsl
dec
push
das
sbb
inc
inc
das
xor
pop
inc
jo
mov
push
aad
xchg
lea
iret
xor
cs
inc
xchg
push
mov
xchg
xorl
jp
jae
adc
xchg
pop
ret
push
pusha
adc
push
inc
fxtract
xor
sub
inc
sbb
bound
loopne
sub
xor
push
out
xor
jns
inc
int3
decb
add
cmpsl
inc
cmp
in
loopne
cmp
rcr
insl
push
sub
mov
loopne
scas
in
push
gs
cltd
loopne
and
outsb
fs
lcall
stc
sub
ret
jns
or
or
cmpsl
loopne
in
loopne
pop
mov
push
leave
mov
pop
imulb
inc
in
repnz
xchg
inc
in
enter
das
inc
xchg
mov
sub
jns
leave
or
in
sub
jb
ljmp
xchg
inc
mov
jb
inc
aad
int
inc
jb
inc
icebp
add
testb
leave
inc
xor
iret
ljmp
inc
enter
inc
inc
sbb
pop
and
inc
cmp
and
adc
or
ss
mov
aas
nop
pop
enter
fildll
in
enter
subl
and
and
push
and
and
sarl
adc
outsb
lods
sbb
clc
clc
or
and
mov
mov
lcall
or
cmc
es
clc
cmp
mov
add
xchg
das
inc
fmull
popf
js
call
push
daa
mov
jl
aaa
stc
adc
push
pushl
jns
push
ss
mov
dec
mov
lock
mov
or
enter
push
imul
inc
pop
adcb
push
adc
sti
cmp
scas
cmc
cmp
xchg
and
adc
insl
mull
hlt
add
mov
fs
dec
mov
mov
push
loop
cmp
cmpsb
xchg
cltd
sbb
or
dec
push
ficoms
adc
inc
push
subl
cmp
add
ss
loope
int3
arpl
mov
mov
cld
lcall
test
xchg
add
call
and
pusha
push
sub
test
ljmp
outsb
or
ljmp
test
inc
ja
or
movl
cmp
xchg
sub
mov
dec
test
add
xor
fwait
aas
cmp
gs
xchg
test
icebp
or
enter
gs
sub
cmp
pop
push
idivb
loope
mov
aam
sbbl
hlt
mov
pop
lea
add
lret
xor
pop
xchg
cmp
cmpsb
push
cmpb
jns
popa
push
sbb
pop
addr16
cmp
or
pop
repz
sbb
add
insb
lcall
dec
shl
leave
repnz
cmp
xor
outsl
loop
sub
sti
cmp
add
adc
jge
nop
out
sarb
push
int3
jge
mov
mov
divl
daa
subb
push
xor
loopne
orb
mov
es
int3
and
insl
aaa
adc
shll
pop
aad
sub
aaa
stos
and
add
sbb
pop
xor
shr
mov
test
ss
pmulhuw
ss
mov
xchg
xor
das
cmp
and
adc
hlt
fldenv
push
inc
lock
out
nop
add
and
push
repz
sub
pop
xchg
sbb
test
add
daa
push
and
adc
xor
fwait
mov
fmul
xor
inc
mov
lret
bound
mov
sub
xor
pop
add
jns
xor
push
mov
movsb
add
xchg
sar
jl
push
add
inc
jl
das
insl
cmp
loopne
adc
lods
inc
fs
sti
or
add
inc
lds
mov
aad
arpl
xor
and
xor
dec
jle
repnz
xor
call
xchg
dec
push
jno
rcll
imul
add
adc
mov
jge
push
cmpsl
add
repnz
xor
int
mov
aam
aad
push
shll
repz
push
cmp
and
cwtl
inc
inc
lcall
and
dec
push
loopne
xor
push
sbb
lret
and
push
jno
xor
xlat
xor
pop
jmp
xchg
popa
push
mov
repnz
jg
inc
fidivrs
nop
push
dec
xchg
push
adc
imul
iret
stos
inc
and
sbbb
xchg
xor
xchg
ret
xor
or
adc
add
xor
js
add
in
sub
inc
jb
imul
xor
leave
lret
or
adc
flds
movsl
pushf
orl
jmp
imul
mov
push
pusha
inc
sub
movsb
andl
dec
jb
das
imul
jb
enter
sbb
cmp
repz
das
push
test
add
xor
filds
pop
test
jecxz
mov
mov
mov
pop
adc
pcmpgtb
add
cmp
inc
mov
sbb
das
ljmp
xchg
cmp
test
imul
leave
lret
repnz
out
popf
and
cmpsl
and
push
add
xor
enter
xor
in
int
fildll
mov
inc
fimull
xor
test
pushf
mov
xchg
cwtl
push
leave
dec
ficoms
and
enter
repnz
mov
cld
call
dec
mov
jbe
icebp
mov
jp
xchg
dec
insl
or
cmp
and
jo
ds
pop
push
sub
dec
jb
push
negb
enter
push
ret
in
test
test
pop
sub
sub
pusha
xor
rclb
loopne
sub
xor
inc
leave
and
sub
push
mov
stos
in
cmp
pop
enter
and
sub
pop
xchg
sti
sub
sub
add
inc
mov
jb
push
loopne
subl
cmp
jns
sub
sub
and
in
sub
adc
sub
fldenv
enter
cmp
lret
cmp
xchg
cmp
into
in
adc
sbb
sub
or
call
sub
sti
mov
dec
ljmp
int3
inc
and
fisttpll
jecxz
push
and
add
add
inc
pop
inc
mov
mov
xor
aaa
sub
sub
pop
enter
cmp
adc
in
stos
adc
in
in
push
cmp
mov
aam
add
icebp
cwtl
add
jno
jge
fucomp
xchg
daa
adc
dec
and
daa
xor
xchg
out
add
loopne
jns
ror
in
es
mov
add
enter
icebp
punpcklbw
test
xchg
fildl
sbb
scas
call
push
ja
sub
call
mov
es
nop
push
rorl
sub
and
pusha
dec
sbb
in
or
and
test
mov
fbstp
or
jnp
adc
loope
xchg
mov
jo
sub
and
xor
sub
xchg
pop
or
jne
andb
cmp
and
inc
jl
push
mov
mov
sahf
pop
stos
nop
or
aad
imul
jae
clc
add
dec
dec
and
cmp
add
mov
and
sarb
nop
adc
rol
test
icebp
sub
jl
add
lds
dec
es
and
adc
lock
add
lock
xchg
ret
sub
cmp
and
int
sbb
test
in
adc
shll
dec
or
repz
pop
out
test
call
mov
shlb
or
bound
out
in
enter
push
mov
and
incb
xchg
inc
mov
jbe
scas
and
ret
and
push
sbb
pop
mov
andb
enter
gs
add
jns
pusha
pop
and
lock
push
inc
push
nop
xchg
in
add
adc
cmp
add
mov
sahf
push
int
sbbl
mov
cmp
cmp
mov
jo
and
mov
xor
pushl
vprotq
push
xor
pop
dec
cmp
mov
fildl
xor
test
xchg
mov
mov
add
lret
enter
mov
and
cmpsl
call
jno
push
dec
and
adc
test
pop
jno
jno,pn
inc
fcoml
cmp
sbb
jno
push
out
clc
push
push
adc
mov
leave
and
mov
push
push
test
sbb
or
mov
adc
lcall
pusha
lods
inc
adc
shrl
imul
lea
xchg
jno
je
sbb
ficomps
nop
add
adc
or
jne
cmp
jb
imul
fxch
sub
leave
cmp
orb
xchg
push
or
or
in
cmp
or
ja
and
pop
leave
and
adc
mov
mov
add
sub
lea
orl
lret
add
mov
enter
pop
cmpsb
cmp
push
inc
mov
data16
add
clc
mov
nop
push
inc
rclb
and
pop
inc
or
adc
mov
mov
adc
addb
jmp
sbb
sahf
or
dec
les
arpl
adcl
ds
or
add
iret
popf
add
pop
and
jne
out
sbb
punpcklbw
cltd
fimull
arpl
and
xor
jl
inc
pusha
pop
shll
push
inc
adc
adc
hlt
and
cmp
scas
sub
mov
shlb
call
sets
call
jmp
lret
scas
adc
sbb
in
sbb
cmpb
jp
mov
and
rcl
call
or
xlat
std
lock
sahf
adc
sub
lcall
adc
add
and
lock
pusha
mov
pop
or
mov
sbb
add
inc
sbb
adcl
pop
out
cmp
sub
pop
mov
or
scas
inc
jb
popf
pop
add
push
jmp
js
or
icebp
loope
xorb
lahf
fs
mov
test
hlt
sub
push
xchg
adc
jb
jns
sub
lcall
rclb
fsubrl
fdivr
sub
xchg
loopne
adc
outsb
fdivs
mov
jge
int3
lea
mov
push
push
fdivl
mov
add
pop
scas
adc
jno
add
jb
mov
decl
mov
and
pop
subl
xor
pop
push
rcl
hlt
fdiv
or
add
xchg
iret
inc
mov
or
enter
rcl
int3
add
jmp
mov
test
fdivs
mov
imul
and
add
sbb
sub
lcall
xor
insb
mov
or
mov
sti
adc
jmp
xorl
or
iret
adc
mov
jl
adc
and
mov
xchg
nop
add
les
js
xorl
shll
aad
cmp
testl
inc
pusha
cmp
pop
inc
adc
push
adc
popa
insb
in
ret
push
clc
jmp
call
and
in
out
dec
clc
mov
push
rolb
clc
push
jb
adc
lock
push
sub
in
cltd
push
add
push
dec
pop
dec
addl
leave
icebp
adc
push
inc
repz
dec
inc
repnz
xchg
pop
adc
adc
adc
sbb
mov
bound
addb
and
es
dec
ds
and
xchg
insl
repnz
lods
adc
inc
pop
or
and
leave
adc
in
add
sbb
push
sub
cltd
add
inc
sbb
sub
inc
sub
add
cmpsb
or
xchg
lock
lock
add
xchg
addb
push
add
sub
push
add
sub
lahf
out
mov
cmp
enter
sahf
in
lock
push
and
in
unpckhps
addb
filds
xor
in
movsl
popf
sub
mov
call
adc
cmp
and
cmp
sbb
out
sub
cmpsl
cmp
pop
xchg
idiv
dec
es
mov
and
insl
loop
test
fildll
cmpsb
popf
jnp
and
inc
or
xor
lret
cmc
or
cld
jae
adc
or
xchg
cmpsb
fs
or
aas
add
or
in
inc
push
inc
or
stos
sbb
sub
inc
or
xchg
and
enter
rcll
pusha
adc
inc
fidivs
mov
jge
es
sub
pusha
xchg
push
jmp
pop
or
mov
xchg
cmp
hlt
mov
cmp
cltd
imul
xchg
or
sub
dec
mov
or
xor
or
sub
outsb
and
adc
sahf
jg
xchg
mov
popf
cmpsb
mov
test
inc
sub
pusha
mov
call
and
enter
rorl
addr16
ror
pop
cmp
sbbl
or
loopne
test
insl
and
jae
lock
xchg
inc
or
stc
dec
test
mov
lcall
jmp
mov
arpl
in
push
sub
xchg
add
xorl
in
or
sub
loope
cmp
dec
daa
jo
or
and
repz
incb
arpl
inc
mov
inc
pop
pop
mov
mov
or
andl
jmp
sbb
push
test
and
mov
nop
cmpsb
mov
cltd
fisubl
dec
add
movsb
imul
rorb
imul
pop
mov
sbb
es
mov
push
outsl
fildl
mov
ja
lea
and
add
cmp
xor
mov
sub
fisttpl
mov
mov
stos
in
add
call
and
sbb
cltd
push
xchg
inc
outsb
push
sub
add
cltd
xchg
popa
dec
jmp
aam
and
faddp
mov
addl
testb
dec
mov
mov
es
stos
pop
pop
decb
lods
cld
adc
add
in
add
cld
out
and
mov
movsb
mov
bound
and
psubd
dec
add
dec
aaa
sub
jb
adc
test
jmp
mov
push
sbb
inc
loope
pop
jb
les
out
fcmovne
add
mov
in
test
in
lcall
adc
pop
xchg
in
lea
mov
iret
sbb
adc
xchg
ret
lock
add
jbe
outsl
fists
mov
and
stos
add
lcall
mov
and
jmp
dec
push
adc
ljmp
stc
gs
mov
lock
and
gs
add
cld
scas
sbb
or
out
add
fldl
loopew
pop
mov
into
cld
adc
mov
test
lods
insb
and
mov
jne
popf
sahf
cmp
xor
in
add
and
dec
adc
push
push
out
pop
add
add
xor
jae
pop
or
cltd
sub
ljmp
aas
pop
jno
adc
jle
scas
ficoml
cmpsl
fcomps
das
stc
xor
mov
add
je
sbb
por
stos
add
shl
xor
dec
leave
add
jbe
ljmp
daa
xchg
xchg
and
int3
insl
jmp
xor
add
mov
or
pop
mov
mov
call
cmpl
std
add
movb
mov
int3
push
aas
inc
jb
mov
ret
or
fs
xlat
sbb
pop
push
mov
arpl
call
lret
lock
cmp
testl
and
rclb
in
and
fildll
pop
inc
or
adc
jbe
add
loope
mov
xor
test
sahf
or
xchg
lret
in
sub
cmp
add
xor
enter
push
inc
add
mov
xor
xor
push
les
testl
test
adc
idiv
push
pop
fwait
add
div
sbb
inc
and
testl
add
testl
dec
testl
cmpsb
testl
sub
pop
sub
xor
xchg
or
idivl
enter
add
cmpsl
fildl
popa
lock
cwtl
rcrl
sub
xchg
imul
add
ja
sbb
mov
aaa
adc
adc
and
loop
mov
inc
mov
push
adc
and
fsub
out
cmp
pop
aas
cmp
sbb
push
test
roll
inc
cmpsl
add
sub
sar
sbbb
mov
loop
add
mull
push
or
hlt
bnd
ds
idivl
scas
add
ja
scas
push
adc
add
inc
adc
nop
mov
inc
fsubs
divb
mov
pop
push
popf
push
or
cwtl
fisttpl
inc
xchg
mov
mov
jno
test
or
add
dec
add
inc
mov
aas
imul
push
ja
pushf
inc
pop
xchg
push
ja
and
insl
adc
dec
rclb
test
inc
push
sbb
ja
adc
in
cmpsl
push
shlb
adc
and
test
inc
fsubrl
and
adc
loop
adc
loope
sub
test
shlb
sahf
push
mov
ja
stos
cmp
aaa
pop
push
cmp
aas
enter
jg
les
inc
sahf
sub
sbb
into
adc
cmp
push
push
mov
mov
sti
cld
rcrb
or
int3
sub
lret
jo
cmp
pop
cwtl
sbb
inc
pop
ja
cmpb
or
ret
or
sbb
xor
inc
outsl
or
xor
pushf
pop
and
cmp
add
sbb
pop
sbb
jno
jge
pop
adc
rorb
push
fstpl
aaa
cmpsl
inc
fnstsw
movswl
test
pop
sbb
mov
mov
jnp
fildll
mov
sbb
pop
add
in
call
mov
loopne
in
and
addb
add
sub
pop
ret
push
add
inc
add
dec
mov
daa
mov
add
call
movhps
lcall
adc
xchg
aaa
jp
aam
xchg
push
xchg
push
mov
dec
leave
and
es
std
xchg
inc
mov
test
inc
mov
cmp
dec
add
pop
lods
push
imul
dec
push
jns
daa
sbbb
and
enter
fcos
es
andl
push
jp
mov
fxch
mov
dec
mov
gs
mov
pusha
frstor
lock
add
or
adc
lods
fadd
push
shrb
js
int
mov
les
xchg
cmpsl
pop
mov
loop
xchg
jae
insb
xorb
pop
and
cltd
dec
ret
sbb
clc
dec
int
mov
out
sbb
jp
maskmovq
negl
add
rolb
add
adc
mov
mov
ror
or
and
loop
sub
ja
test
add
and
mov
mov
xor
xor
cmp
ja
iret
lret
add
or
push
xchg
ja
sbb
adc
pop
insb
inc
or
ja
dec
add
add
sbb
inc
add
rolb
adc
push
loope
or
mov
sbb
popa
movb
sbb
adc
mov
sti
ret
rolb
cmpl
nop
hlt
icebp
call
cmpl
pop
mov
jge
pop
call
cld
jmp
mov
loope
cmp
sbb
jne
loopne
lret
into
xor
mov
xchg
lods
and
sub
and
orl
or
cmpsl
jmp
push
mov
loope
test
sub
jmp
dec
mov
ffreep
inc
add
das
inc
mov
and
and
xchg
jo
push
lods
imul
lds
sbb
pop
imul
push
dec
mov
or
cmpb
inc
pop
mov
and
and
pop
push
pushf
push
or
test
dec
ficompl
or
imul
subl
and
mov
or
pop
mov
int3
pop
outsl
dec
js
mov
ja
scas
test
adc
add
movsl
jle
push
inc
add
and
mov
add
nop
bound
mov
cmp
sbb
add
mov
sbb
or
inc
and
addl
mov
mov
xor
ja
pop
push
inc
lea
ja
sbb
sub
or
add
dec
mov
data16
jle
inc
insl
add
mov
push
sti
cltd
sub
inc
or
adc
pusha
and
aam
cmpb
aaa
mov
xor
lea
xor
aaa
clc
lret
roll
push
loopne
mov
aaa
int3
add
add
test
add
sbb
test
cld
add
cmp
push
dec
jo
xor
sbb
clc
push
jae
movsb
loopne
sub
sub
repz
jnp
push
adc
pop
nop
test
cmp
or
xor
fs
adc
add
mov
mov
adcb
lahf
sbb
adc
ljmp
lahf
mov
fisttps
xor
pop
jle
je
add
adc
sub
lods
iret
sbb
mov
adc
add
xor
add
cli
dec
pop
push
adc
pop
loop
add
fnstcw
inc
dec
push
jo
mov
and
push
add
scas
sub
mov
push
push
cmp
adc
sub
sbb
jg
dec
mov
inc
addl
outsl
xchg
loopne
pushf
fnstcw
aaa
sub
aaa
cwtl
inc
decl
add
cltd
xchg
aaa
rcll
orl
das
xor
fiaddl
pop
inc
movsb
mov
lock
xchg
pop
cmp
nop
add
add
xchg
add
jecxz
test
sub
sbb
cmp
push
sub
mov
outsl
and
xchg
adc
mov
aaa
ret
sbbl
mov
or
cmp
lahf
cwtl
call
add
inc
push
add
pushf
rolb
test
addr16
mov
jmp
dec
inc
add
xchg
fistpl
ret
addr16
push
lock
dec
fstpl
imul
cmc
scas
jns
push
push
xorb
loopne
mov
lahf
sub
ja
jecxz
mov
xchg
push
add
daa
jp
add
dec
adc
mov
add
sbb
bound
popf
dec
adc
pushf
inc
pop
or
loop
sub
mov
mov
adc
xchg
add
daa
cltd
jo
sarb
mov
rcrb
fisubrs
rorl
lcall
and
fbstp
fstpt
and
rorb
lea
add
add
sbb
hlt
call
dec
jae
push
mov
mov
push
inc
add
xor
and
mov
in
push
notl
or
rcrb
stos
mov
mov
nop
lock
ss
xchg
pop
stos
and
push
dec
out
outsb
sub
fsubrl
dec
inc
or
mov
out
movsb
push
rolb
pop
inc
cwtl
in
unpcklps
int3
aas
shlb
jno
cmp
rorl
movsl
inc
and
fdivr
cmp
inc
jne
shll
cmp
pop
xor
cmp
mov
mov
jle
mov
roll
rorb
insb
pop
cmpsl
inc
les
push
mov
push
adc
inc
pop
notb
lea
jmp
add
add
fisubrl
push
fiadds
out
and
jge
sbb
adc
lea
or
pop
adc
adc
sbb
adc
orl
sub
push
mov
adc
cmp
xchg
and
mov
aam
sbb
in
mov
adc
push
adc
sarb
nop
or
jl
mov
fcomps
jge
cmp
inc
sub
sub
je
push
xchg
and
add
cmp
inc
cmp
call
cmp
std
dec
push
lods
dec
adc
rol
add
dec
or
add
xor
mov
cli
pop
ja
sub
inc
push
movsb
dec
fsubrp
fnsave
inc
or
sbb
pop
addr16
or
sub
aad
ja
or
mov
outsl
pop
inc
adc
call
add
rorl
rorb
xchg
unpcklps
arpl
push
loopne
in
les
sub
jmp
jp
xor
push
push
mov
jbe
or
inc
jle
mov
xor
mov
xchg
hlt
xchg
inc
jp
mov
inc
imulb
mov
cwtl
push
push
addr16
push
roll
fs
add
adc
pop
and
sbb
add
push
push
sbb
mov
mov
insl
fcompl
sub
cmovge
push
cmpsb
clc
scas
ja
cld
adc
cmovl
or
mov
jne
mov
or
and
dec
add
adc
or
in
inc
cmp
lock
adc
out
adc
pop
or
push
mov
pusha
or
cmp
out
adc
movsb
pop
push
aaa
jb
addb
sti
nop
lock
imul
xchg
inc
inc
imul
push
pop
push
jns
rol
test
pop
pusha
sub
jbe
xchg
mov
popa
xchg
push
fimuls
adc
adc
cmp
sub
arpl
and
adc
fadds
push
xor
repz
push
negl
cmp
pop
clc
mov
ja
or
cmp
ljmp
add
cld
add
adc
aad
and
testb
movsl
sub
xor
pop
outsb
xor
sbb
in
repnz
jnp
call
mov
jmp
mov
jmp
inc
mov
mov
fidivl
adc
hlt
mov
or
mov
mov
pop
in
js
pop
loopne
jmp
sub
mov
fisttpl
aad
push
add
or
cs
test
pushf
jl
mov
ja
pusha
loope
jnp
cltd
cmp
fnstenv
popa
mov
sbb
or
pop
cmp
add
push
cmp
lahf
fstp
jmp
fstps
jmp
cmp
dec
adc
push
push
xchg
xchg
xchg
jne
data16
add
sbb
add
mov
ret
clc
inc
xor
push
inc
addr16
mov
cmpsb
aaa
jp
dec
adc
pop
fs
data16
mov
es
and
dec
add
mov
pop
fiaddl
repz
add
mov
dec
mov
dec
outsb
adc
or
or
xor
mov
cmp
ljmp
andb
paddq
or
lahf
ljmp
or
jnp
lods
pop
loopne
leave
cmpsb
add
decb
add
lea
sub
enter
mov
testb
and
lds
rcll
sub
mov
inc
inc
add
les
xor
mov
lret
dec
xchg
cmp
add
test
test
rcrb
mov
lods
pop
push
mov
pop
push
sti
jg
lret
xchg
sub
jp
adc
dec
jmp
inc
xchg
jmp
fwait
rcll
data16
push
adc
cmp
pusha
jmp
push
sub
ds
dec
in
push
stos
jmp
push
movsb
add
inc
loope
xor
inc
xchg
or
lods
mov
and
mov
data16
inc
mov
loopne
push
or
push
clc
xor
dec
fwait
push
in
xchg
jge
inc
pop
sti
add
lret
lods
in
push
push
and
std
fsub
lea
les
sgdtl
adc
rclb
into
pop
sbb
inc
hlt
and
adc
jmp
pop
int3
mov
sub
out
les
mov
push
push
adc
cmp
cmpsb
jne
lcall
push
push
adc
pop
jg
push
and
sub
mov
cmp
sub
or
cmp
cmp
pop
adc
int
insl
movsb
sbb
clc
push
xor
rolb
mov
or
mov
mov
mov
or
rclb
or
jle
jg
mov
orl
push
fst
psrld
lods
pushf
xor
shll
mov
rcl
adc
mov
jecxz
or
jne
sub
cmp
and
jge
mov
aam
outsl
add
xor
div
mov
aam
dec
ja
dec
mov
add
push
mov
pop
outsb
mov
push
sub
inc
call
cli
mov
cld
mov
mov
cmp
jb
scas
test
add
adc
pop
pushf
mov
mov
movsl
mov
clc
sarb
cmp
adc
adc
test
shlb
add
adc
filds
inc
clc
test
lea
jp
adc
imul
pusha
fmul
adc
stos
dec
prefetchw
shrb
ljmp
mov
fnsave
mov
sub
iret
or
cmp
pop
test
test
arpl
call
push
das
add
loopne
rorl
push
shr
nop
add
xchg
aad
push
or
push
bound
jmp
dec
idivl
xchg
push
and
mov
fstps
fisubl
xlat
add
scas
push
add
aaa
sub
leave
inc
xor
add
dec
jae
test
jmp
inc
inc
enter
imul
inc
fisttpll
dec
mov
add
jns
sarl
sub
and
out
dec
add
cmp
mov
mov
pushf
cmpsb
in
pop
adc
inc
popa
inc
std
fwait
addb
in
lcall
adc
inc
add
lret
pop
and
dec
lock
add
adc
cmp
dec
repz
dec
je
adc
xor
push
mov
xor
adc
xchg
jg
add
outsl
fucomi
jl
and
add
movsb
xchg
inc
sub
sbb
add
sbb
inc
push
scas
loop
add
pop
adc
int3
push
iret
leave
xchg
dec
je
push
adc
faddl
lds
push
or
push
enter
stc
or
mov
or
testb
or
movsl
jl
or
or
adc
cltd
push
lds
mov
jp
je
sbb
dec
adc
orb
shlb
inc
jmp
sti
or
jb
outsl
icebp
xor
jb
aaa
je
sbb
test
jbe
inc
out
call
sbb
fdiv
jmp
leave
push
insb
mov
or
or
sbb
pop
mov
sub
mov
jbe
cmp
push
dec
cmp
es
pusha
or
cli
jne
dec
pop
push
int3
pusha
jp
int3
jno
lcall
or
or
push
into
jmp
nop
and
ret
and
xor
popa
lods
mov
xchg
push
ss
ds
push
and
xchg
lea
or
dec
fidivs
loop
or
push
test
inc
sbbl
imul
movsb
pusha
xorb
xchg
xor
adc
mov
sbb
stc
pop
xchg
mov
inc
test
push
sub
dec
dec
lock
add
push
mov
push
push
loope
or
xorb
jle
pop
sbb
inc
mov
mov
loopne
testb
je
jle
pop
mov
jl
or
inc
add
mov
insl
push
or
dec
lods
decb
cltd
mov
dec
repnz
out
xor
call
lret
adc
sbb
sub
out
lahf
jp
xchg
je
mov
and
cmp
iret
push
test
jo
in
dec
push
pop
cmc
pusha
cmp
sbbl
repz
mov
sbbl
xor
pop
or
dec
cmp
adc
fdivr
loopne
and
testb
shlb
les
push
notl
jae
inc
cmp
mov
jno
and
imul
call
sbb
lahf
pop
lea
addr16
stos
dec
add
sub
cld
mov
pop
sbb
dec
xchg
xor
scas
lods
dec
push
xor
inc
push
xchg
cli
push
sbb
rcrb
push
out
mov
in
sbb
cmp
or
icebp
adc
jp
add
lds
xchg
movsl
js
jg
xor
jbe
pushf
sub
add
and
xlat
mov
pop
cltd
push
dec
pop
mov
jno
lds
or
jne
mov
add
enter
push
or
sbb
inc
les
or
sub
add
jp
cld
test
sbb
out
mov
pop
inc
and
push
incb
dec
pop
shlb
and
stos
imul
jae
adc
add
inc
inc
push
inc
cmp
bound
les
cmp
inc
aad
and
aaa
or
adc
rcll
je
and
inc
push
insl
fadds
add
jno
and
xchg
or
popa
pop
push
sbb
repnz
adc
and
and
and
sbb
mov
mov
add
xchg
xchg
pop
mov
push
or
pop
sbb
and
mov
sbb
fwait
divb
add
pop
in
sbb
jg
jo
bound
test
xchg
mov
outsb
and
push
and
or
pop
dec
xchg
jo
add
pop
das
je
inc
or
pop
jb
bound
test
bound
les
pop
es
and
ss
out
rorl
test
out
imul
popl
mov
adc
loope
xor
inc
pop
arpl
adc
out
fldl
push
push
adc
nop
sahf
push
adc
and
mov
ret
sub
pop
sbb
xor
loop
pop
adc
bswap
shl
xorl
imul
adc
aas
adc
cmpb
mov
inc
or
pop
and
pop
or
push
arpl
inc
pop
sahf
and
and
pop
jmp
adc
stos
lods
dec
jo
xchg
aas
mov
cmp
push
inc
pop
and
test
add
pop
add
les
or
loopne
push
pop
or
inc
mov
daa
push
bound
test
adc
aaa
add
add
mov
sub
pop
icebp
inc
pusha
sub
pop
sub
bound
aam
sbb
xor
subl
adc
and
sbb
pop
adc
insb
je
test
add
lock
orl
adc
mov
mull
mov
jl
sbb
push
pop
add
js
ds
iret
push
xor
push
jg
inc
adc
jne
inc
in
and
and
mov
lcall
js
fcoml
xor
mov
out
bound
dec
xor
ret
cltd
jne
test
add
push
xor
rorb
int
mov
inc
and
inc
out
repnz
lcall
data16
addb
cmpsl
out
inc
and
mov
stc
adc
add
or
mov
sahf
out
iret
push
ja
jle
test
jg
es
testl
pusha
push
les
push
mov
push
aaa
adc
aaa
je
fwait
cmp
dec
sar
xchg
xor
aaa
es
dec
sub
dec
or
aaa
arpl
inc
fsubs
bound
loop
xchg
push
and
sbb
cli
enter
mov
loope
push
push
pop
test
inc
fcoml
push
mov
push
add
inc
fdivrs
and
cmp
es
sbb
xchg
jnp
bound
mov
push
xor
jg
adcl
push
lods
loope
lea
cli
jg
bound
les
push
push
adc
lock
lahf
xchg
adc
loope
xor
dec
xchg
out
mov
add
jns
fucom
outsb
adcb
push
mov
lahf
scas
push
push
adc
push
inc
push
movsb
mov
jo
and
negl
add
jg
and
testb
test
fs
aam
bound
bound
ja
xchg
xchg
jo
xchg
push
pop
and
jnp
lods
add
adc
adc
mov
sbb
jno
jbe
xor
enter
jno
bound
test
ja
test
cmp
bound
punpckldq
test
ja
mov
adc
pop
shrb
inc
and
test
sub
test
stos
cli
mov
inc
ja
pop
sbb
pop
push
or
and
out
and
add
or
push
or
cmp
lds
or
flds
dec
hlt
enter
push
ja
not
aad
cmc
es
faddl
add
or
inc
ja
xchg
leave
ja
xchg
xlat
nop
xchg
or
pusha
xor
add
test
jns
ret
xor
bound
add
pusha
push
push
inc
xor
in
ss
into
xchg
dec
or
sbb
dec
dec
pop
inc
and
or
test
ja
push
or
mov
ja
xlat
push
mov
inc
ja
rolb
cmp
adc
ret
or
mov
cmp
imul
adc
mov
inc
ja
lea
ja
fiadds
test
ja
pop
lock
and
fldl
inc
pushf
out
shr
or
les
and
cmpsl
bound
ja
add
add
mov
lahf
push
mov
xchg
in
ret
adc
sbb
mov
xor
aam
and
mov
adc
xchg
ds
scas
add
ret
les
or
imul
je
jge
bound
cli
mov
adc
and
adc
out
or
ja
xor
add
pop
adc
cmp
ja
sub
bound
hlt
pop
jp
push
call
sbbl
inc
js
adc
mov
pop
aam
rcrl
add
movsl
jmp
mov
add
pop
andl
or
js
push
inc
and
push
ja
xor
pop
dec
xchg
jmp
adc
ja,pt
adc
or
mov
jno
adc
dec
cmp
js
ja
dec
adc
and
bound
stc
adc
adc
stos
jo
ja
add
popf
push
push
xorl
dec
xor
icebp
xor
or
js
ja
add
lcall
test
push
push
aas
jno
ja
sbb
sub
and
das
cwtl
bound
les
or
adc
push
iret
jmp
inc
ja
js
jnp
frstor
out
lcall
push
scas
pop
mov
add
ja
adcl
scas
inc
ja
adc
test
and
or
sbb
sbb
popa
pop
jg
into
jecxz
pop
xorb
xor
popa
scas
push
jge
loopne
sbb
repnz
jle
inc
add
popa
shl
outsb
sbb
aas
sbb
or
in
jle
xor
cmpsb
xchg
ljmp
cmp
inc
faddl
mov
outsb
sub
sub
pop
adc
jb
add
test
mov
adc
int
mov
inc
ja
test
adc
jmp
sub
flds
ja
jge
nop
test
inc
add
and
scas
notl
adc
ja
fcoml
ja
out
jbe
subb
sti
xor
jecxz
xlat
pop
mov
int
or
std
into
lret
movhps
lret
sbb
ret
or
mov
dec
mov
call
and
mov
push
push
out
cwtl
and
mov
pop
aaa
xor
push
adc
repnz
lcall
data16
inc
test
push
fcoms
pop
adc
inc
and
loopne
mov
and
sbb
adc
xor
sbb
pop
xor
sub
in
adc
add
or
cmp
xor
mov
adc
mov
pusha
adc
xchg
inc
push
loopne
test
add
ret
adc
and
stos
mulb
add
xchg
in
shlb
shll
mov
mull
dec
je
fmuls
adc
cwtl
and
adc
mov
inc
and
mov
xorl
mov
sub
xchg
sti
adc
jno
int3
mov
mov
imulb
dec
rorl
dec
sbb
xchg
dec
and
jbe
shl
aad
xor
push
and
mov
int
movsb
sub
dec
pop
jmp
fidivl
mov
sub
add
stos
lea
push
or
mov
xchg
mov
imul
dec
loope
cmp
jns
adc
or
adc
xor
movsb
aad
mov
adc
add
mov
push
xor
pop
enter
xor
xor
mov
pop
pop
push
pop
fists
mov
cwtl
lock
in
lock
xor
mov
test
movsl
inc
push
lcall
fcoml
mov
inc
adc
or
mov
or
sub
and
lahf
push
test
adc
adcb
adc
mov
ljmp
pop
sbb
add
add
inc
es
inc
and
inc
and
cld
loopne
push
xor
mov
xchg
adc
rorb
call
in
pop
add
adc
xor
push
push
sub
xor
mov
lds
inc
push
dec
inc
dec
nop
scas
push
lods
pop
addr16
arpl
xor
push
data16
pop
dec
push
or
js
inc
sbb
rclb
jecxz
sbb
hlt
data16
adc
and
scas
dec
push
and
pop
insl
xor
or
push
cmp
cmp
xchg
dec
adc
ret
jo
add
xchg
je
js
and
out
push
xchg
pusha
add
scas
mov
push
lea
jno
mov
rcll
xorl
dec
rorb
jo
data16
dec
rorb
push
mov
test
ss
or
inc
imul
adc
xchg
pushf
aas
nop
sbbb
push
nop
mov
push
sti
mov
xchg
sub
into
push
mov
shl
call
add
xchg
push
int3
sub
sahf
insl
mov
sahf
out
xor
rcrb
mov
pop
xor
out
jg
out
cmp
add
push
int
or
lea
mov
mov
cmp
repz
ja
stc
cmp
stos
mov
sahf
out
sahf
xor
cltd
or
out
lods
rcll
fucomi
cmp
nop
js
xor
push
pop
loopne
mov
call
pop
outsl
lret
adc
bound
xchg
push
movsb
or
fsubs
test
sbb
push
outsb
outsl
lcall
or
cmp
dec
inc
and
rclb
rolb
push
cmpsb
sub
mov
mov
add
push
insb
mov
push
out
push
pushf
js
or
push
loope
mov
dec
imul
sarb
mov
insl
and
scas
jno
push
mov
les
lock
sbb
loopne
push
loopne
or
push
outsb
notl
pop
stos
loopne
push
xchg
lahf
in
fisubs
inc
cmp
inc
jl
pop
aaa
loope
jo
push
pop
int
js
push
push
int
mov
push
insb
xchg
pop
push
pusha
xchg
fwait
push
jle
or
aad
add
sub
or
sub
inc
inc
push
add
jmp
mov
mov
fisttps
data16
inc
or
push
dec
xor
sbb
add
jo
push
xchg
nop
pop
mov
mov
call
jo
sbb
out
fbld
and
in
xchg
push
or
mov
aam
xorl
lret
mov
popf
add
stc
pop
pop
or
rorb
or
loope
int
xchg
fnstcw
xlat
adc
or
xlat
xchg
add
adc
mov
xlat
xchg
out
or
or
xor
xlat
andl
shrl
jns
mov
pop
call
das
push
pop
add
xlat
push
out
cmp
dec
xor
mov
fs
mov
sbb
xchg
les
add
cmp
and
and
in
in
or
xlat
mov
inc
js
and
xlat
movsl
popl
stos
xchg
pop
or
addl
push
and
fbstp
xchg
stos
data16
add
push
inc
sub
and
push
xor
dec
fwait
jp
cwtl
and
xlat
hlt
sbb
enter
mov
lods
inc
mov
daa
lret
fldl
dec
xchg
aaa
int
mov
push
rolb
xor
sbb
jno
fsubrl
les
cmp
data16
dec
xor
xchg
jnp
lcall
xlat
sbb
icebp
mov
inc
dec
inc
adc
jmp
popa
xchg
xlat
popa
mov
rorb
pushf
les
inc
push
dec
jg
inc
dec
xchg
shrl
jg
pop
int
mov
lret
aam
xorl
scas
gs
sbbl
xlat
inc
and
stc
dec
mov
xor
jns
adc
mov
mov
xlat
aam
adc
add
imul
ja
or
pushf
xor
push
fwait
and
xchg
cmp
cwtl
and
xor
push
inc
xlat
lret
inc
and
pop
sbb
test
inc
and
xor
clc
lods
sbb
in
int3
mov
rorb
xor
push
int
xlat
sub
cmpl
inc
xlat
mov
push
lds
xlat
adc
imul
shll
add
loopne
inc
repz
xor
mov
inc
xlat
xchg
ret
or
push
je
mov
rcl
data16
loop
push
xchg
lea
push
xlat
ljmp
add
sbb
popa
xor
sbb
loope
mov
and
mov
dec
js
xlat
lock
mov
int3
adc
xlat
das
lcall
data16
int3
adc
and
aaa
adc
cmp
add
xlat
adc
xor
dec
mov
loop
mov
cs
mov
cs
cmpsl
lcall
jle
add
movsl
andb
nop
shl
aad
in
inc
or
les
jns
xor
data16
cmpl
xlat
loopne
inc
lcall
sbb
jno
xlat
sbb
loope
add
mov
xor
push
or
or
xchg
pop
ds
jle
test
jle
pop
mov
or
iret
xchg
xor
scas
test
sub
add
les
xlat
pop
rclb
push
stc
xor
xlat
fwait
mov
add
icebp
and
adc
outsl
fdivl
lahf
rcrb
sbb
pop
add
push
rcl
hlt
addb
xor
inc
cmc
adc
insb
out
adc
mov
ret
or
mov
sbb
in
rorl
mulb
push
sbb
inc
xlat
mov
and
and
xlat
mov
bound
notl
xlat
xchg
ss
sti
mov
xorl
xor
pop
nop
mov
int
pop
mov
or
pop
push
cmpsb
xchg
cmp
inc
inc
and
push
hlt
je
push
sbb
je
mov
inc
pop
jg
pop
inc
fadd
or
insb
and
or
pop
loopne
ret
adc
pop
int3
adc
sahf
adc
mov
shlb
xchg
sub
pop
mov
popf
imul
adc
xor
lea
imul
data16
pop
lcall
pop
data16
loopne
and
add
sub
aam
subl
pop
sahf
and
sahf
mov
int
pop
int3
lahf
push
adcl
aam
cmp
pop
xor
pop
pushf
dec
int3
adc
or
and
cld
cmpsb
bound
test
mov
in
nop
sub
mov
data16
mov
outsb
mov
pop
xor
and
pusha
xchg
xlat
and
or
inc
loop
data16
mov
add
inc
sahf
insl
xor
sti
mov
xor
mov
add
sbb
mov
and
add
test
jno
xor
fisubrs
adc
in
xchg
xchg
lock
jmp
push
cmpsb
pushf
sub
cmp
stos
in
test
inc
cmpsl
or
inc
lcall
add
adc
and
adc
dec
nop
push
dec
and
and
add
dec
bound
push
lds
pop
mov
and
push
sbb
adc
or
pop
les
shll
add
lahf
into
fs
cmpsb
stc
addl
enter
add
ja
and
in
push
ja
inc
loopne
ja
movsl
fldl
pop
sub
iret
repz
jbe
push
dec
push
mov
pop
push
add
dec
sbb
mov
xor
popf
lret
aas
loope
jb
nop
movsb
test
pop
movsb
std
stos
add
dec
pop
or
adc
cs
stos
orb
adc
rcll
fadds
mov
inc
push
sbb
push
ficoml
decl
add
push
mov
mov
push
mov
adc
add
inc
test
add
push
aaa
jmp
add
cwtl
mov
call
mov
mov
mov
rolb
dec
add
test
push
fiaddl
scas
divb
jg
mov
sbb
mov
dec
rcrb
add
shll
push
ret
dec
add
jmp
add
in
sub
adc
negl
xchg
add
adc
mov
out
scas
adc
testl
testl
daa
push
xchg
add
notl
and
ja
pop
mov
mul
push
or
push
xor
and
rclb
ficoml
mov
xchg
and
xchg
mov
xchg
sub
dec
and
inc
xchg
jecxz
mov
das
inc
sarl
or
sbbb
xchg
add
jg
push
or
push
or
adc
xchg
bound
push
mov
stc
sahf
cs
add
xchg
int3
or
aam
jle
push
dec
push
xchg
jmp
mov
in
add
push
or
xchg
jne
or
dec
loop
add
pop
scas
fsubr
mov
inc
add
rcrb
and
scas
testb
xor
sbb
xchg
and
cmp
adcb
dec
inc
jmp
dec
xchg
dec
cmp
inc
add
xchg
add
cmp
xchg
xchg
je
mov
and
push
add
cs
dec
add
loopne
lcall
xchg
mov
inc
xchg
or
mov
push
xchg
add
push
add
adc
xchg
pop
sub
test
aas
cltd
add
xchg
rolb
sbb
xchg
sbb
cmp
xchg
xchg
adc
or
into
aaa
sbb
or
loop
push
xchg
shll
popa
je
xchg
fsubrs
jno
aaa
cmp
adcb
inc
sub
cmpb
pusha
sbb
in
xchg
fisttps
and
stos
xchg
cmp
mov
jo
stos
adc
cmc
cmp
adcb
and
xchg
cmp
push
xchg
add
xorb
add
jne
dec
ja
movsl
xchg
cli
mov
aad
dec
in
paddusw
and
add
add
jmp
push
xchg
rep
adc
pop
inc
xchg
lcall
xchg
inc
push
testb
push
loopne
push
add
add
mov
xchg
add
movsl
add
cs
xchg
add
inc
iret
int3
lcall
push
or
xchg
lods
add
cmc
or
fdivs
inc
add
pushw
inc
or
sub
mov
mov
add
inc
mov
es
lods
or
or
inc
xchg
add
adc
xchg
cli
dec
add
hlt
and
xchg
aas
stos
cmp
aad
aas
rcll
inc
xor
xlat
add
and
loopne
adc
xlat
cmp
scas
or
icebp
push
xlat
clc
adc
loop
or
xlat
rcrb
adc
xlat
les
add
push
sbb
roll
adc
add
cltd
sbb
pusha
or
xlat
or
cs
add
inc
xlat
jo
push
xchg
adc
popf
cmp
es
xlat
imul
add
cmp
and
pushf
mov
inc
bound
je
sub
stc
movsb
fcomps
add
adcb
loop
pop
movsb
xlat
or
jno
js
add
lock
rol
push
dec
andl
lret
add
add
inc
xlat
xor
and
mov
mov
pop
out
sub
mov
xlat
pop
cs
call
sbbb
or
xlat
push
lret
add
xlat
inc
and
xlat
push
mov
dec
add
add
mov
rolb
add
mov
rcl
decb
add
xchg
mov
and
or
jnp
xlat
xor
dec
xlat
push
dec
and
or
add
adc
add
incl
inc
lods
adc
fldl
in
or
inc
mov
dec
add
stos
and
roll
xlat
push
dec
xor
ret
les
mov
int3
test
sbb
mov
or
inc
in
mov
ret
fnstenv
add
lock
add
aas
fmuls
pushf
adc
sub
lds
xlat
cmpsb
fnstsw
mov
xchg
add
add
dec
xlat
inc
leave
add
mov
xlat
or
xor
push
mov
xor
mov
add
mov
add
in
add
push
cmp
fmuls
and
ja
xchg
pop
daa
pusha
add
cmc
xchg
stos
or
popa
push
ja
add
out
push
dec
ja
add
dec
sub
test
movsb
push
out
jno
out
add
or
mov
jb
jno
and
or
jno
cwtl
cli
push
or
test
adc
mov
mov
ja
stos
inc
pop
popf
or
jecxz
dec
add
jnp
cmp
ja
mov
and
push
ja
xor
adc
ret
test
les
push
or
dec
sub
mov
repnz
add
loop
adc
loope
mov
mov
nop
sbb
cld
insb
sub
jg
aad
add
cld
fbstp
ja,pt
and
jo
adc
ljmp
xor
add
mov
jae
ljmp
dec
add
inc
dec
add
sub
mov
sbb
ja
add
das
ja
xchg
popa
push
mov
mov
test
mov
add
ja
sbb
roll
xchg
or
mov
ja
jo
inc
pop
adc
enter
add
add
ja
push
or
inc
movsl
pop
mov
in
sbb
and
mov
mov
or
add
cmp
pop
bound
sbb
adc
and
out
pop
sbb
pushf
mov
add
mov
inc
push
mov
shlb
or
push
mov
add
or
adc
add
insb
or
add
pop
cmpb
div
sub
add
mov
and
xchg
shlb
lock
add
aad
fistpll
sar
test
mov
sub
xor
in
push
das
stos
add
and
inc
movsb
shlb
xchg
lret
nop
add
hlt
pop
xchg
mov
lods
push
mov
mov
adc
lods
inc
xchg
cmp
push
add
xchg
dec
adc
sbb
xchg
mov
je
adc
out
adc
xchg
mov
lahf
and
and
push
xor
push
adc
jb
jb
ret
addb
and
les
add
mov
add
add
push
lods
insb
loopne
adc
add
cmp
and
lds
push
add
xchg
xchg
les
add
add
inc
inc
xchg
cmp
dec
les
jb
test
xchg
js
and
dec
jb
mov
jb
test
stos
add
loope
push
xchg
sub
mov
or
push
popa
adc
push
inc
and
popf
jl
pop
push
add
push
push
xchg
mov
stc
xor
push
xchg
das
add
inc
or
xchg
das
dec
pop
cmpb
sub
and
sti
jp
lahf
aaa
xchg
push
or
add
aaa
add
imul
adc
stc
ss
rolb
stos
or
icebp
leave
aaa
add
js
or
add
fcmovu
jno
adc
aaa
aas
mov
aaa
movsl
adc
mov
add
into
mov
pop
fstps
dec
add
jae
aaa
testb
jo
jo
cwtl
add
aaa
push
cwtl
add
cs
aaa
loop
mov
sbb
dec
mov
adc
aaa
sub
pop
cwtl
add
aaa
sbb
movsb
aaa
add
inc
or
sub
push
mov
es
jne
mov
sbb
sbb
inc
adc
and
cld
ds
cld
pop
enter
lcall
xchg
pop
leave
sub
jbe
cli
xchg
cmovb
mov
pop
in
push
xchg
sti
xchg
push
stc
mov
mov
test
and
je
test
orl
add
lods
jmp
adc
mov
lock
and
in
mov
sbb
and
sbb
push
push
xor
mov
ret
add
xor
mov
pop
add
add
add
data16
or
lods
popf
scas
or
adc
adc
sbb
pop
movsl
stos
cmp
and
and
pop
xor
mov
cmp
inc
leave
enter
dec
dec
push
push
inc
cs
lret
pusha
fs
imull
js
repz
adc
jne
add
addb
mov
popa
cltd
mov
xchg
jns
test
cwtl
pushf
mov
push
cmpsb
test
in
add
adc
add
and
add
stos
xlat
add
adc
xlat
fsubrs
test
add
sbb
fsubs
sbb
mov
add
jo
pop
adc
hlt
ret
add
pusha
mov
loop
sbb
rcrb
mul
add
jmp
add
xlat
add
loop
mov
push
pop
xlat
cmpsb
cs
add
enter
or
jp
in
jo
and
xchg
xlat
pop
add
fs
add
xorb
andb
aam
xlat
and
jne
xlat
loope
pop
sbb
add
cmp
push
add
popa
sub
adc
add
fsub
and
loop
jecxz
xlat
fdivrl
call
pop
add
faddp
add
sub
or
jns
mov
mov
xlat
cmp
adc
dec
aaa
icebp
ja
data16
test
jo
xlat
cmp
inc
xlat
dec
stc
mov
xlat
cmp
adc
adc
test
add
xlat
sbb
or
jl
and
rolb
add
loop
inc
or
xlat
add
popa
daa
insl
add
mov
add
and
femms
xlat
cmpsl
xchg
loopne
inc
fcompl
mov
test
xlat
add
add
ja
xlat
faddl
mov
cmp
loopne
rolb
testl
add
xchg
add
or
test
push
pop
xlat
sar
sub
add
add
push
add
lds
push
cwtl
cmp
fdivr
pop
jne
add
nop
outsl
cwtl
mulb
lods
mov
pop
sbb
add
faddl
icebp
xchg
lret
dec
inc
fsubrs
xor
loopne
xlat
pop
dec
jp
jo
and
jl
add
and
add
ret
mov
push
mov
xlat
sbb
jbe
inc
jmp
add
inc
pop
add
xlat
jo
and
dec
mov
xlat
mov
xchg
jne
add
out
andl
and
ret
add
xchg
cmpb
mov
rcl
fldl
mov
pop
sbb
inc
cmp
mov
movsl
imul
xlat
push
add
add
xorb
sub
cmpsl
xor
add
fcoml
ret
insl
dec
xorb
sub
dec
roll
xlat
or
jo
and
inc
mov
xlat
jae
add
cmpsl
mov
ret
mov
cmpb
push
sbb
mov
push
add
push
xor
xor
cmp
adc
xlat
push
add
icebp
mov
mov
sub
out
in
cld
jle
xlat
subb
jecxz
sbb
or
or
xlat
push
mov
add
mov
xchg
jns
cwtl
scas
adc
in
sti
mov
test
scas
mov
int
pop
mov
mov
enter
pop
int3
dec
shrb
fsubrl
xchg
xchg
dec
loopne
ljmp
hlt
clc
out
ret
cld
out
fucomp
jns
dec
incb
out
add
or
dec
or
out
jnp
out
adc
adc
sbb
sbb
dec
and
xchg
es
dec
push
stc
dec
sub
xor
add
repnz
cmp
cmp
jl
das
xchg
inc
dec
cmp
movsb
push
test
enter
bound
enter
add
push
sub
inc
add
out
sbb
aaa
jl
test
mov
xchg
cwtl
pushf
mov
movsb
test
mov
sbb
mov
test
aaa
enter
dec
movsl
jb
fcomp
loopne
push
sub
hlt
clc
fmuls
adc
lock
or
lock
adc
adc
jl
sbb
and
lret
sub
sub
xor
inc
inc
sub
cmp
inc
movsb
push
test
sub
pop
pop
pusha
jmp
inc
pop
cmp
add
les
pop
aam
mov
nop
push
mov
mov
les
les
xorb
add
dec
sbb
or
mov
es
les
ret
add
movsl
push
mov
mov
add
mov
xorb
add
add
mov
out
inc
out
cmp
adc
add
mov
adc
popf
pop
jge
fisubrs
add
or
les
pop
clc
orb
jo
add
repz
adc
or
adc
les
push
push
xchg
dec
sbb
or
add
or
add
outsl
and
mov
nop
add
add
aam
cmpb
push
inc
js
add
jo
jl
dec
addl
push
add
iret
sub
mov
add
data16
ja
add
cmp
mov
xchg
mov
and
inc
clc
call
pop
ja
notl
push
push
jnp
jae
inc
stos
mov
push
sbb
xchg
lret
fadds
jno
enter
add
movsb
mov
add
outsb
mov
mov
add
or
or
js
dec
adc
pop
sbb
cltd
mov
jnp
aas
cmp
pop
addr16
add
cmp
adc
mov
sbb
jecxz
add
mov
roll
adcb
mov
dec
inc
jecxz
pop
dec
or
js
add
daa
lcall
sbb
sub
push
add
add
add
jno
lret
hlt
adc
pop
inc
fdivrs
add
adc
add
dec
jne
mov
adc
add
pop
mov
add
js
popa
or
or
mov
test
sbb
testb
mov
test
sbb
cmp
mov
add
loop
or
cmp
adc
add
push
mov
cmp
and
push
sbb
mov
mov
insb
sub
jbe
push
or
add
xchg
es
fistps
call
and
sbb
mov
test
lock
mov
lret
add
add
sbb
or
movsl
and
push
sbb
mov
stos
jmp
add
outsb
mov
scas
push
add
sub
jmp
dec
ret
pop
stos
pop
lahf
call
and
stos
pop
aas
sahf
dec
xor
and
pop
jo
and
mov
mov
adc
dec
or
adc
inc
push
sahf
add
push
dec
pop
das
test
push
sbb
jbe
add
or
sbb
mov
jb
mov
loope
push
add
and
adc
mov
pop
add
adc
sub
lock
cmc
std
mov
dec
pushf
or
lea
push
add
js
jmp
movsl
mov
add
mov
or
inc
pop
mov
pop
mov
sbb
mov
mov
mov
add
fs
inc
ds
jl
adc
and
pop
jno
sbb
out
fwait
push
pop
addb
mov
jg
mov
or
test
es
sbb
mov
add
out
cmp
mov
outsb
stos
dec
jo
mov
test
or
mov
mov
fwait
cmp
cmpsb
push
iret
aas
jnp
inc
dec
pop
ja
mov
sti
jg
mov
call
faddl
insl
loope
sbb
xchg
adc
arpl
ja
shl
jae
push
rcll
ja
std
sbb
push
movsb
add
dec
int3
inc
xor
int
mov
pop
inc
or
jne
pop
call
cmp
ja
pop
fs
popf
mov
cmp
leave
rorb
mov
inc
push
jo
and
push
dec
push
fwait
mov
ljmp
mov
dec
and
test
jecxz
mov
call
push
loope
inc
faddl
pusha
das
mov
sbb
aaa
insl
push
in
insl
mov
adc
enter
pop
push
in
sub
fnsave
in
mov
enter
sub
fwait
mov
cmpsl
xchg
or
je
loopne
sub
fadds
xchg
push
test
or
ja
imul
insl
ja
aad
push
ret
fsubrs
cmpsb
sub
mov
sub
cwtl
mov
in
daa
cmpsb
sub
mov
sbbl
dec
push
mov
testl
mov
sarl
sbb
pop
dec
mov
test
mov
sbb
lds
mov
or
add
mov
or
jo
add
jo
popa
inc
dec
pop
mov
test
push
les
adc
dec
pop
push
jo
les
mov
orb
mov
mov
push
mov
cmp
xor
xor
cmpsb
sub
pushf
scas
sub
and
fcmovb
sub
adcl
push
push
inc
es
cmp
adc
push
in
pushf
add
fcoml
adc
and
mov
shr
shlb
push
addr16
mov
mov
cmpsb
sub
lds
in
lock
call
and
shll
rorl
test
jo
or
xor
or
mov
gs
gs
rclb
adc
push
mov
sub
mov
das
mov
inc
pop
inc
sbb
mov
jecxz
sub
xchg
test
loopne
mov
mov
les
mov
pop
mov
dec
adc
popa
push
mov
imul
push
insl
loope
mov
add
mov
and
loope
fidivl
xor
int
clc
mov
cmpsl
push
lds
stos
xor
push
loop
xor
dec
negb
and
arpl
pop
adc
cwtl
mov
aad
mov
scas
mov
inc
pop
test
push
lods
mov
sub
jo
lds
cwtl
mov
sbb
sahf
inc
xor
jmp
add
stos
cwtl
mov
mov
push
push
lcall
mov
mov
sbb
adc
cwtl
mov
xor
cwtl
mov
xchg
mov
mov
or
jo
popa
lret
out
or
mov
mov
jns
jo
rcll
mov
push
xor
into
mov
pushf
add
fisubl
cmpsb
mov
pop
xor
les
cmpsb
sub
mov
ret
stos
jg
push
fsubrl
mov
pop
jb
adc
xchg
insl
loope
adc
dec
nop
imul
sahf
js
xlat
inc
xor
cmp
xchg
rcll
dec
inc
push
cmp
mov
adc
orl
bnd
xor
test
mov
mov
jecxz
push
push
xor
mov
mov
imul
rcll
ds
es
mov
inc
mov
mov
mov
dec
mov
mov
pop
and
mull
mov
mov
imul
adc
call
mov
in
sbb
dec
sahf
int3
fcmovb
dec
lahf
dec
psrad
jno
bound
mov
scas
mov
sub
and
test
push
inc
aam
sub
push
dec
mov
sbb
mov
jle
jecxz
cwtl
mov
lcall
sbb
dec
dec
pop
mov
loop
push
dec
pop
mov
push
cmp
adc
push
adc
mov
pop
mov
insl
loope
pop
mov
imul
cmpsb
sub
push
mov
mov
xor
jo
cmpsb
sub
dec
pop
mov
stos
push
lds
jo
inc
insl
loope
inc
mov
repz
les
out
jns
pop
mov
pop
push
loope
push
dec
mov
je
xor
sbbl
test
test
inc
subb
jl
daa
sub
pop
scas
jge
add
dec
pop
mov
int
pusha
lds
pusha
insb
or
popa
loopne
dec
cli
pusha
call
shll
ret
cwtl
ds
mov
jmp
sub
leave
or
aam
inc
pop
xor
out
lcall
mov
adc
ja
and
shll
sbb
mov
cmp
add
and
xor
dec
xor
dec
inc
cs
and
jb
xchg
push
test
dec
cwtl
and
xchg
mov
lods
aad
or
ret
add
and
xor
or
add
fwait
cltd
or
and
mov
jne
ret
cmp
or
sub
adc
inc
je
fcmovb
test
adc
into
xchg
mov
xor
adc
push
mov
push
inc
pop
mov
mov
xchg
push
mov
push
fadds
adc
push
mov
add
loopne
test
mov
insl
or
pop
adc
fs
cmp
jecxz
add
sbb
pop
xchg
ret
mov
incb
inc
and
punpckldq
mov
dec
lahf
pop
leave
test
sti
insl
shrl
pop
xor
fiaddl
mov
jmp
sbb
mov
repnz
aas
clc
inc
push
rcll
xchg
mov
rcll
cmp
mov
insl
popa
dec
inc
mov
shlb
mov
pop
push
shr
push
jnp
popa
out
gs
and
xor
sahf
stc
lcall
into
jecxz
shll
or
adc
ret
mov
cmc
call
pop
sahf
mov
cmpsb
sub
mov
daa
aam
add
cmpsb
sub
cmp
andl
xor
cmp
ret
cmp
aaa
in
dec
mov
pop
jb
jb
pusha
push
ror
in
dec
adc
lret
leave
adc
and
sub
daa
xchg
jle
adc
sub
pop
sub
fcoml
push
dec
pop
mov
push
xchg
pop
imull
cmp
mov
sub
xchg
or
sub
dec
test
jo
cmp
mov
mov
jb
jb
or
in
mov
push
adc
mov
mov
scas
jne
mov
in
div
jb
imul
pusha
dec
cmp
mov
das
sub
add
iret
push
loope
xor
stos
lret
push
ret
insl
mov
push
cmpb
mov
in
add
mov
mov
mov
jmp
xor
sbb
mov
les
aam
fiaddl
mov
scas
bound
shlb
stos
aam
fsubl
aad
push
popa
push
leave
and
stc
adc
and
adc
sub
dec
cmp
push
pop
jmp
jo
mov
adc
les
mov
fstps
gs
pop
cmp
inc
push
add
add
adc
mov
outsb
pop
mov
inc
ret
dec
mov
push
add
xor
mov
push
add
mov
mov
popa
mov
push
leave
push
jmp
in
xor
mov
mov
sub
xor
imulb
mov
fisubrs
ret
mov
jmp
cmpsb
fidivl
rcll
mov
jmp
imul
les
xor
push
mov
mov
xchg
dec
lcall
testl
out
cmpb
push
and
mov
decl
mov
mov
cmpsl
xor
cmp
pop
mov
test
dec
inc
inc
push
into
pop
les
push
mov
push
push
dec
pop
cmp
jo
mov
loopne
cwtl
mov
cmp
adc
push
out
inc
outsb
mov
fisubrs
cmp
lea
push
jbe
cwtl
mov
stc
in
das
mov
mov
fistps
dec
ret
push
fsubs
cmpsb
sub
pop
dec
pop
mov
out
addb
insl
mov
dec
cwtl
mov
cmp
push
test
xor
fbld
test
inc
dec
mov
call
out
daa
pop
movsb
dec
or
aam
inc
add
imul
xchg
adc
add
fisubrs
repnz
mov
xor
roll
lcall
lcall
insb
mov
in
mov
addr16
mov
movsb
jo
dec
push
les
and
mov
sub
ret
inc
dec
pop
mov
push
mov
ljmp
fisubs
orb
mov
mov
das
ljmp
mov
push
pushf
cltd
ret
dec
mov
lods
fsubrs
fidivl
and
jo
movntq
push
cmpsl
sub
push
sub
mov
fcmovb
cmp
mov
push
sbb
ss
stc
rcll
pop
pop
movsb
dec
insl
rorl
mov
faddl
ret
mov
sbb
test
bound
xor
cmp
mov
and
push
push
jbe
ret
mov
push
sbb
add
xor
mov
in
mov
cmp
mov
and
mov
cmpsl
cwtl
mov
mov
cwtl
mov
pop
jmp
les
mov
mov
popa
cs
roll
test
cmp
leave
movsl
xchg
loopne
fld
mov
pop
jmp
cwtl
mov
jae
xor
loop
inc
and
xor
jnp
outsl
mov
mov
push
inc
jbe
in
jmp
push
mov
push
inc
xchg
and
ret
shll
fidivl
fcmovb
rclb
mov
and
test
inc
pop
fimuls
sub
inc
mov
repz
lods
sub
mov
shll
enter
add
aaa
or
cwtl
mov
push
xor
mov
test
inc
mov
push
mov
and
adc
or
mov
fsub
jne
mov
ja
push
mov
mov
mov
mov
pop
test
imul
fucomp
add
aas
sbb
fcoms
out
jb
or
inc
push
push
push
adc
mov
adc
adc
push
mov
adc
push
les
or
sbb
push
adc
dec
les
add
insl
mov
xchg
cmp
xlat
mov
mov
inc
inc
les
ret
mov
insl
loope
mov
push
push
movsl
les
or
add
cmp
notl
les
mov
mov
push
into
insb
and
in
push
rcrl
iret
shrl
sbb
xor
rep
mov
sbb
mov
push
xor
ds
xchg
sahf
enter
dec
out
ds
repz
lahf
cld
dec
sbb
out
cmp
idivb
xchg
imul
and
aaa
sahf
idivl
jb
stos
mov
mov
les
clc
or
sbb
imul
jae
mov
mov
xor
add
mov
cmp
push
dec
inc
inc
mov
mov
imul
mov
add
xchg
sbbb
mov
push
nop
test
les
dec
or
aam
incb
cmpsb
sub
sub
test
push
and
lds
inc
dec
pop
mov
cmp
ret
repz
push
imul
pop
inc
dec
pop
mov
mov
stos
rcl
rcll
sbb
push
daa
hlt
sub
pop
push
mov
ret
rolb
ret
pop
mov
and
fidivl
and
cmpsb
sub
add
sub
pop
mov
les
in
inc
dec
mov
xchg
jl
les
mov
push
push
adc
sub
xor
enter
dec
pop
mov
and
aaa
rcrb
aas
mov
sbb
cmpsb
sub
xor
push
push
adc
inc
mov
into
push
movups
mov
cld
add
inc
aam
gs
pop
ret
mov
rol
mov
mov
mov
mov
shll
fiaddl
inc
call
inc
xor
adc
mov
inc
dec
pop
adc
mov
mov
cmc
sbbb
test
pop
and
lds
inc
bound
rolb
insl
popa
lock
sti
pushf
mov
sbb
add
popf
dec
shll
dec
pop
mov
xor
adc
adcb
mov
je
sbb
imul
add
add
lds
xchg
in
adc
inc
cmp
mov
xor
mov
or
dec
pop
mov
sbb
cmp
sbb
fidivl
rcll
mov
es
lds
adcb
or
sbbb
fcmovb
dec
icebp
mov
sub
fcompl
dec
xor
pop
jnp,pn
dec
pop
mov
xor
adc
adc
push
out
std
cmp
fcmovb
or
pop
mov
mov
inc
mov
sbb
andb
mov
adc
stos
cwtl
mov
lea
lds
mov
adc
xor
mov
sbb
dec
int3
and
pop
and
rcll
xchg
and
mov
mov
adc
sub
ret
sbb
push
push
mov
mov
repnz
push
add
jl
repz
or
sti
out
mov
push
dec
mov
add
mov
mov
lds
cwtl
mov
into
cmp
decl
imul
insb
lahf
dec
mov
pop
xor
mov
mov
or
and
mov
mov
mov
mov
insl
rorl
and
imul
psubusb
sbb
call
fcoml
mov
movsb
mov
cmpsb
mov
rorb
repnz
les
insl
mov
pushl
imul
mov
imul
inc
dec
pop
cmp
jne
mov
sub
pop
mov
ss
inc
dec
mov
aaa
shl
cmpsb
sub
rorl
or
push
mov
mov
or
jbe
fsts
sub
jnp
inc
sub
rcll
mov
or
xorb
repz
mov
test
add
mov
out
xor
pop
mov
mov
mov
cwtl
add
test
inc
mov
sub
lahf
xor
add
mov
sbb
mov
arpl
xchg
or
xchg
fs
adc
push
mov
fcmovb
add
loope
addl
cmp
xor
sbb
movl
insb
pop
mov
js
icebp
test
cmp
pop
push
push
pop
jmp
jle
fdivl
mov
lds
mov
xor
jmp
push
sub
fidivl
dec
and
sbb
pushf
in
cmp
push
outsb
xchg
xchg
je
sbb
adc
mov
mov
push
and
mov
call
aaa
or
fcmovb
add
mov
mov
mov
mov
cli
or
dec
dec
and
cmpsl
imul
pop
mov
cmpsb
mov
aam
xor
fucomip
cwtl
mov
ljmp
mov
sbb
adc
push
mov
scas
cwtl
mov
ret
rcll
or
pushf
cmp
mov
jl
inc
pop
inc
dec
pop
mov
sub
jmp
cmpsb
sub
fiaddl
scas
pop
fdivs
mov
pop
push
xor
cmovns
ret
sub
sbb
sub
push
dec
ret
xor
and
dec
adc
mov
jno
dec
pop
mov
sub
fcmovb
jecxz
pushf
mov
rcll
out
rcll
mov
cmpsb
sub
cwtl
mov
cmpsb
in
sub
cs
lret
mov
sbb
cld
sub
mov
daa
jge
sti
push
xchg
adc
pop
sbb
fcmovb
adc
fcmovb
push
cwtl
mov
and
or
sbb
pop
xor
sub
sbb
xor
mov
mov
and
loop
mov
add
mov
or
cwtl
mov
hlt
push
lods
and
xor
cwtl
mov
mov
jo
add
aaa
rcrb
inc
lods
cwtl
mov
call
inc
sub
fstpt
push
inc
add
mov
addl
add
add
ret
cmp
cmpsb
sub
and
bound
jo
cwtl
mov
ljmp
in
push
push
sub
mov
xchg
lods
inc
daa
and
mov
nop
prefetcht1
pop
lds
clc
mov
mov
shrl
cmpsb
sub
push
sahf
movb
mov
add
sbbb
sub
inc
inc
sub
loopne
cmpsb
sub
mov
jnp
cmp
and
inc
xor
or
mov
sbb
add
dec
test
adc
les
fiaddl
push
faddl
rcll
pop
adcl
fidivrl
cwtl
mov
mov
inc
dec
pop
cmp
fcompl
dec
inc
mov
mov
fcmovb
pop
adc
mov
sub
lods
je
sub
loop
lds
mov
test
outsb
mov
inc
les
cwtl
mov
mov
pushf
xchg
push
sbb
mov
push
fisubrs
ret
sub
popl
shll
les
push
lahf
nop
push
xor
mov
push
xchg
js
stos
enter
adc
adc
mov
test
inc
dec
pop
mov
cmp
repnz
pusha
and
xchg
pusha
jbe
push
sub
push
mov
adc
xor
sbb
mov
inc
inc
mov
or
imul
mov
mov
fdivr
mov
es
mov
sbbl
mov
or
dec
mov
sub
aam
sub
sbb
mov
sub
jns
xchg
cmpsb
mov
jl
cmp
insl
mov
sti
cmpsb
loopne
les
mov
pusha
jo
inc
xor
dec
nop
pusha
nop
test
into
test
add
inc
lahf
push
popa
mov
mov
cs
mov
mov
mov
adc
sahf
xchg
test
pushf
addr16
dec
mov
mov
fcmovb
mov
dec
pop
adc
test
fcmovb
pop
inc
mov
lcall
imul
nop
push
xchg
mov
loope
add
or
push
xchg
adcb
cmpsb
sub
call
int
mov
push
jp
inc
sbb
jg
dec
mov
push
sbb
mov
sbb
pop
clc
push
int
sbbl
popf
xor
xor
mov
jb
and
cmpsb
sub
inc
or
imul
add
cmpsb
sub
dec
pop
jo
shrl
mov
sbb
or
jb
fsubrs
mov
or
pop
test
cmpsb
sub
arpl
out
adc
and
fcmovb
sahf
mov
or
pushf
xlat
lods
xchg
or
test
outsb
mov
sub
sbb
and
imul
dec
pop
pop
mov
test
jo
rcll
mov
fwait
dec
fmuls
fwait
jns
fcmovb
cmp
fcmovb
fwait
pop
xchg
mov
adc
mov
or
add
pop
add
mov
sbb
jmp
sbb
adc
mov
mov
adc
push
mov
sub
dec
add
mov
repnz
mov
imul
stos
cmp
inc
andl
sub
mov
mov
cwtl
push
cmp
cmpsb
sub
pop
cs
add
aaa
fdivrs
insl
loope
sub
outsb
jno
les
pop
pop
mov
jl
pop
dec
mov
popf
sub
andb
push
insb
xor
adc
out
bound
pop
adc
arpl
mov
mov
adc
mov
and
fmuls
adc
dec
dec
pop
mov
fildl
test
lock
loopne
enter
or
movsb
mov
insl
and
in
pop
sbbb
xor
es
cli
pusha
loope
call
push
jne
sub
or
mov
mov
dec
lds
inc
dec
mov
imul
push
push
xchg
push
add
add
shll
inc
mov
sub
mov
or
mov
adc
cmpsl
jae
adc
mov
cmpsb
mov
addl
dec
arpl
sub
pushf
dec
sbb
lods
and
mov
xchg
pop
repnz
cmp
cwtl
stc
adc
pop
mov
imul
push
lods
or
lods
ss
pop
adc
mov
adc
mov
dec
dec
js
mov
dec
mov
and
lds
xchg
imul
push
add
mov
aad
shll
les
aam
mov
sub
jnp
test
sbb
cwtl
mov
lods
ret
xor
inc
lds
insl
rorl
loopne
mov
pop
sub
sub
xchg
mov
jo
sub
lds
mov
ja
jle
dec
pop
mov
push
add
insl
loope
mov
outsb
xor
mov
jnp
shll
add
mov
mov
add
inc
mov
mov
lock
out
sahf
push
push
push
push
adc
cmpsb
sub
push
xchg
cwtl
clc
pop
outsl
test
scas
push
push
add
out
ds
ljmp
negl
mov
adc
pop
rcll
mov
mov
cmp
es
pop
ljmp
push
mov
adc
xlat
mov
bound
inc
dec
pop
mov
lret
mov
daa
and
call
arpl
xorb
mov
mov
shll
inc
pop
push
jmp
push
cwtl
mov
in
fcmovb
loopne
mov
bound
sub
mov
sub
dec
test
mov
sbb
mov
jecxz,pt
cmpsb
sub
imul
adc
add
insl
mov
dec
shll
sub
fiaddl
sub
lret
dec
ja
add
dec
inc
in
mov
mov
daa
mov
out
mov
sbb
pcmpgtw
lds
sub
jle
pop
test
test
pusha
test
les
popa
sbb
inc
test
or
or
xchg
cmp
xchg
int3
add
push
into
dec
inc
cmp
push
adc
dec
pop
mov
test
mov
mov
push
mov
and
mov
mov
or
dec
mov
jle
add
cmpsb
sub
or
or
inc
cmpsl
mov
test
enter
iret
fistps
fadd
jl
out
push
ja
sub
xor
and
into
push
adc
push
mov
ret
fdivl
rolb
mov
pushf
fisubs
cwtl
mov
cmpsl
or
ret
sub
xor
sub
pop
movsl
movsb
or
scas
sub
js
xor
sub
cwtl
mov
xor
stc
xorl
clc
jmp
sub
adc
push
out
jp
mov
cmp
push
inc
push
inc
sub
push
and
jo
fcompl
pop
bound
mov
test
pushf
sub
jo
mov
loopne
faddl
insl
mov
push
cmp
cmpsb
sub
lds
into
push
mov
imul
mov
xor
xor
mov
cmpl
inc
mov
cmpsb
sub
mov
cmp
push
out
xorb
adc
sbb
sub
fiaddl
cld
mov
repz
push
jecxz
xor
inc
push
lahf
out
scas
adc
sarb
push
adc
push
sahf
testl
into
sarl
sbb
pop
push
or
mov
pop
jl
mov
mov
fcmovb
push
fcmovb
call
pop
cmp
out
push
mov
or
mov
xor
fcmovb
popf
cwtl
mov
mov
or
bound
fistpll
aaa
inc
mov
xchg
sub
push
xlat
mov
push
scas
xor
mov
inc
divb
mov
jnp
and
mov
mov
aad
loopne
stos
cwtl
mov
scas
sbbb
cwtl
mov
scas
mov
fcmovb
pusha
adc
sub
pop
cwtl
pop
orl
jbe
daa
cmpsb
pop
inc
pop
mov
into
push
outsl
mov
cmpsb
outsl
cmp
repz
xchg
push
adc
xor
pop
cmp
xrelease
dec
mov
cmpsb
sub
ljmp
ret
jbe
sub
cmp
fiaddl
into
dec
testl
rcll
mov
mov
ret
sbbl
mov
or
push
or
js
mov
or
add
rcrl
xor
adc
insl
mov
pop
pop
pop
fidivs
pop
dec
pop
mov
mov
mov
rcll
in
test
pusha
mov
push
repnz
adc
insl
loope
add
or
sti
or
repz
fsubs
add
pop
mov
push
mov
movsl
sub
xorb
push
orl
ficoms
pop
js
mov
sub
arpl
mov
sub
cmp
mov
sahf
cmp
push
les
push
stos
xchg
or
int
loop
xor
insl
loope
inc
mov
pop
mov
rcrl
pop
mov
mov
xchg
ret
pop
outsl
mov
shll
imul
ret
cmpsb
adc
push
inc
jb
mov
out
cmp
leave
push
ss
subl
add
std
jno
fcmovb
jb
cmpsb
sub
aaa
mov
mov
and
imul
sub
jmp
cltd
pushf
test
push
sub
xchg
les
xor
daa
push
xor
adc
push
mov
push
mov
cmp
adc
cmpsb
sub
sub
fcompl
xchg
add
and
rolb
inc
popa
sahf
adc
push
xchg
inc
mov
push
add
mov
out
aam
adc
mov
jmp
pop
push
mov
mov
aad
push
xor
dec
mov
xor
pop
mov
mov
and
inc
cmpsb
rorl
mov
aaa
aaa
stc
loope
adc
cmp
add
xchg
mov
xchg
push
adc
cwtl
mov
xchg
and
rclb
popf
add
xor
mov
xorl
insl
data16
mov
rol
pop
rolb
inc
mov
les
push
dec
pop
mov
adc
push
fcoml
push
mov
add
add
push
push
push
mov
add
jne
rcll
mov
pop
fmuls
pop
mov
inc
pop
mov
push
rcll
push
ds
sub
sbb
or
les
mov
add
insl
loope
pop
sarl
adc
mov
mov
sub
jno
inc
into
adc
inc
add
nop
cs
add
ret
mov
aad
or
lock
and
adc
push
or
mov
mov
jnp
insb
xchg
mov
test
jns
or
mov
mov
lds
loopne
fiaddl
mov
fwait
lds
mov
push
in
inc
mov
ja
mov
rorb
loopne
mov
jle
mov
inc
jnp
adc
dec
dec
and
mov
push
mov
insl
loope
loopne
add
inc
lock
dec
xor
add
sti
add
cmpsb
sub
in
inc
xchg
and
dec
repnz
sub
cmpsb
mov
xor
pop
adc
mov
and
mov
mov
push
pushf
bound
repnz
insl
loope
cmpsb
mov
push
les
adc
mov
mov
mov
pop
les
adc
push
mov
xchg
ret
pop
inc
xor
sub
rolb
mov
mov
dec
fisubrl
sub
psubw
ret
inc
push
and
xchg
das
bound
cld
decb
test
add
mov
mov
mov
adc
push
or
mov
rcll
in
pop
into
sbb
pop
xor
sbb
int
imul
daa
jge
push
xchg
mov
imul
push
xorl
bound
ss
dec
mov
xchg
fsubrs
imul
inc
call
cmp
xchg
cmp
pop
push
ja
iret
repz
mov
dec
pop
mov
roll
js
insl
mov
ja
mov
dec
repz
add
ret
mov
push
or
mov
decb
xchg
popf
test
xor
pop
out
imul
inc
sub
andb
sub
add
hlt
sbb
inc
dec
pop
jo
mov
sub
mov
sbb
mov
xor
ret
mov
and
xor
push
inc
aas
js
mov
das
inc
sbb
pop
and
cwtl
mov
in
xor
insb
mov
inc
icebp
dec
je
call
mov
adc
dec
pop
mov
stc
cmpsb
fs
subl
add
in
mov
fs
lret
cld
ds
push
mov
js
pop
les
fcmovb
es
jmp
iret
jne
loope
fidivl
xor
outsb
lods
test
imul
xlat
sub
cmpb
loope
or
mov
fwait
mov
adc
cmpsb
sub
pop
mov
push
aaa
inc
dec
mov
imul
lds
inc
push
jnp
push
inc
jbe
push
jnp
xchg
add
repz
fs
in
push
cmp
xchg
add
js
in
cltd
es
loopne
insl
popa
and
add
push
test
in
cmp
nop
jns
dec
sub
ret
sub
sti
popa
call
std
adc
dec
add
call
push
sbb
ret
movl
and
mov
into
xor
sub
or
shll
ficoms
fiaddl
shll
xor
sub
mov
insl
inc
dec
cs
sbb
push
xchg
xor
dec
mov
cmpsb
cwtl
mov
mov
and
les
dec
pop
mov
xchg
ficomps
jecxz
enter
xor
add
and
stos
add
clc
jbe
xchg
mov
les
les
mov
lods
mov
mov
pop
cld
sub
or
fiaddl
xor
mov
mov
or
mov
adc
push
inc
dec
mov
nop
lods
sarl
sub
or
insl
mov
and
ret
sub
insb
mov
imul
mov
ret
and
pop
push
popf
bound
movsb
inc
dec
mov
inc
add
insl
mov
mov
scas
jp
mov
xor
add
js
test
insl
popa
out
mov
sub
fcmovb
cmp
pop
xor
mov
push
dec
mov
xchg
xchg
rorb
add
cmp
mov
dec
add
imulb
sarb
xchg
in
inc
dec
mov
adc
adc
lods
dec
xlat
sub
fiaddl
inc
push
inc
mov
inc
mov
aam
push
cmp
xor
test
mov
xchg
or
cwtl
mov
js
addb
out
sahf
pop
gs
jne
mov
insl
inc
fidivl
sbb
test
pusha
scas
sub
ja
imul
mov
scas
aaa
push
mov
sub
lret
cmpsb
and
sub
rcll
sahf
movsb
adc
push
adc
in
inc
xor
dec
adc
mov
in
push
shll
xchg
jg
lock
push
shll
xchg
jae
scas
rcll
into
jmp
push
loop
and
inc
jge
loope
mov
roll
adc
jp
xor
mov
inc
dec
pop
mov
imul
xor
xchg
dec
mov
aam
adc
dec
mov
adc
mov
aaa
scas
stos
cwtl
mov
stc
mov
dec
pop
sbb
dec
xchg
ljmp
in
mov
out
cmpsl
mov
ret
sub
mov
sbb
add
mov
xorb
popa
mov
cwtl
mov
jl
repnz
add
jae
sub
sub
and
fcmovb
mov
pop
xor
aas
mov
mov
adcb
jo
stos
cwtl
mov
jg
mov
in
jo
call
add
mov
arpl
and
shll
push
push
fiadds
dec
inc
js
adc
inc
dec
pop
mov
mov
outsb
loop
fiaddl
mov
adc
iret
jns
push
out
mov
scas
dec
movzwl
sahf
andl
push
xchg
sub
and
pop
outsl
popa
xor
cltd
jnp
lds
push
jl
jns
out
jge
scas
lret
out
jns
int
jle
jg
movsl
mov
aad
or
cmpsl
stc
cmp
outsl
addl
push
or
pop
rcll
out
jns
repnz
xchg
push
adc
loopne
inc
adcb
mov
cwtl
mov
std
mov
mov
shlb
popa
mov
repz
out
jne
mov
repz
cmp
popf
scas
sahf
cmpsl
stc
cmp
push
test
xor
sahf
out
pop
outsl
test
out
pop
jns
jb
and
aam
mov
add
pop
xchg
fmul
cwtl
mov
cs
pop
ret
divl
cwtl
out
sub
mov
in
cmp
cmpsb
sub
mov
lods
mov
or
int
shlb
aam
pop
adc
and
jmp
insl
scas
mov
mov
hlt
mov
pop
jnp
pop
jo
mov
push
fcmovb
adc
mov
fstps
mov
sbb
js
xor
xlat
dec
add
cmp
mov
xchg
add
lds
push
mov
pop
adc
icebp
fsubrs
sub
arpl
mov
xchg
call
es
lods
add
jo
ret
push
mov
and
mov
clc
add
cmpsb
sub
mov
cmpsb
sub
add
lock
xchg
out
les
xlat
and
jne
cmp
nop
xchg
and
add
fnstcw
aaa
sahf
xchg
cwtl
mov
adc
mov
aad
cmpsb
sub
and
and
rcll
mov
push
dec
pop
mov
xorb
loopne
mov
ret
push
daa
bound
push
lds
mov
mov
sub
adc
push
mov
sub
out
insl
adc
adc
push
jecxz
mov
inc
ja
and
push
inc
lahf
cld
shr
add
pop
in
mov
add
add
push
movsl
add
cld
adc
add
adc
mov
and
mov
cwtl
mov
mov
pop
xor
ljmp
xchg
pop
mov
shll
add
sub
xor
daa
mov
mov
sub
sub
dec
pop
mov
test
jo
lds
popa
dec
mov
pop
and
jns
lahf
mov
pop
js
mov
mov
sbb
push
adc
pop
iret
xchg
pop
push
call
imul
inc
sti
and
mov
inc
push
mov
sub
shrb
or
push
xor
inc
add
push
leave
pop
mov
and
popa
mov
push
and
insl
mov
mov
out
adc
mov
je
sbb
shll
dec
pop
mov
cwtl
mov
xchg
mov
ljmp
insl
or
and
pop
ret
jge
into
mov
mov
hlt
and
or
add
cld
add
add
or
xchg
mov
imul
pop
cmp
add
dec
mov
push
mov
sub
cmpsb
sub
xor
mov
nop
cmovne
add
adc
xchg
loope
xor
mov
sbb
ret
mov
jbe
mov
mov
push
fcoml
push
push
mov
idiv
mov
add
daa
fs
mov
mov
pop
sbb
jb
les
fcoml
xchg
outsl
sbb
mov
aaa
inc
xor
je
orb
fcmovb
cmp
mov
or
or
mov
aas
adc
mov
dec
and
push
push
fcoml
rcll
mov
push
or
cmpsb
sub
insb
ljmp
lock
movb
sar
xor
dec
les
xor
fs
bound
outsb
xchg
and
ret
push
sbb
dec
imul
dec
jge
or
cmpsb
sub
sbb
add
es
jbe
cmpsb
sub
mov
and
sbbb
add
mov
mov
pop
dec
jb
mov
sub
push
andb
cmpsb
mov
shlb
loope
sbb
aad
push
in
push
xor
push
adc
mov
jl
stos
cwtl
mov
les
and
inc
xchg
cwtl
add
ficoml
xchg
out
out
and
pusha
adc
call
loopne
mov
sub
movsl
and
sub
add
sbb
pop
sbb
test
andl
lods
push
icebp
insl
inc
insl
xor
sub
xor
mov
mov
pop
mov
sbb
lcall
dec
lds
cmpsb
mov
in
insl
roll
push
testl
dec
fcmovb
jge
and
iret
push
push
xchg
arpl
adc
or
popa
incl
mov
pop
xchg
pop
rcll
push
mov
out
xchg
ja
xor
adc
call
or
fiaddl
cmpsl
aam
xchg
dec
push
jl
ficoml
rcll
mov
inc
dec
pop
mov
in
adc
push
in
jecxz
es
or
sbb
and
mov
sbb
pop
les
pop
mov
sub
sub
sub
adc
mov
rcrb
cmp
or
fmul
push
push
dec
pop
mov
dec
push
push
add
mov
shl
sbb
mov
pop
inc
dec
pop
mov
pop
push
cld
pusha
vmaxsd
jo
dec
mov
lret
mov
mov
mov
repz
push
es
lds
adc
insl
mov
js
mov
int3
fcmovb
cmp
fiaddl
add
mov
xor
xor
sbb
mov
ret
in
adc
mov
movsb
lds
push
mov
bound
mov
dec
outsb
shrb
sub
dec
cltd
or
cwtl
mov
jle
rclb
mov
int3
jnp
rcll
mov
bound
dec
les
xor
and
mov
dec
pop
mov
pushf
cwtl
mov
cwtl
mov
lret
cwtl
mov
xor
add
mov
adcb
insl
mov
and
mov
or
mov
mov
mov
add
sub
adc
aam
imul
faddl
mov
push
add
cmpsb
sub
adc
cmp
sbb
mov
pop
pop
mov
sbb
rcl
and
cmpsb
mov
inc
sarb
cwtl
sbbb
mov
das
leave
aas
fimuls
cmp
pushf
mov
mov
xor
adc
mov
push
mov
pop
je
push
out
mov
cvtdq2ps
mov
sub
inc
lds
fcmovb
inc
movsl
mov
pop
add
pop
mov
xchg
adc
insl
popa
pop
mov
loope
loopne
pop
leave
jbe
cmp
push
xor
sub
adc
push
mov
cmpsb
das
cmpsb
sub
mov
mov
add
mov
mov
xor
je
or
and
sub
push
mov
mov
fcmovb
inc
push
mov
fiaddl
mov
ret
pop
mov
push
mov
das
bound
test
ret
lds
fidivl
test
mov
cs
mov
adc
fcmovb
mov
bound
lds
mov
jbe
rorl
push
sub
cmp
mov
jo
subb
mov
dec
xor
shll
sbbl
sub
dec
mov
fcmovb
sbb
mov
daa
and
push
cmp
mov
stos
add
inc
inc
filds
addl
fcmovb
loop
mov
mov
bound
push
xor
sbbb
dec
mov
loopne
jo
sbb
sbb
cwtl
mov
test
cmpl
add
lds
push
mov
pop
xor
adc
mov
push
dec
pop
adc
mov
push
dec
pop
mov
sbb
jmp
les
mov
cmp
fwait
add
paddusb
loop
mov
shll
loopne
cmp
ja
pop
leave
cwtl
mov
or
cmp
lods
mov
lahf
dec
pop
les
xchg
je
mov
out
sub
push
into
test
mov
pop
adc
push
test
mov
sub
or
es
aas
or
movsb
mov
cmpsb
sub
inc
dec
js
push
mov
les
fs
mov
inc
pop
xor
out
mov
add
mov
sub
arpl
jl
rcll
fisubs
mov
cwtl
sbb
mov
adcl
push
push
mov
cmpsl
cwtl
mov
mov
mov
bound
rcll
mov
inc
sub
ret
mov
xchg
lcall
fidivl
std
jnp
cmpsl
mov
xorb
mov
mov
xchg
sub
inc
dec
push
ljmp
movsb
cs
loop
xor
push
or
mov
mov
es
push
adc
push
mov
adc
mov
pop
sbb
or
inc
mov
or
mov
ds
sbb
cli
call
jnp
das
add
js
lds
pop
dec
mov
adc
inc
xor
mov
mov
xor
or
mov
cmp
das
push
pusha
repnz
les
mov
fmuls
mov
push
outsb
fs
cld
imul
test
jo
mov
andl
mov
inc
dec
pop
pop
adc
cmp
xor
aam
xor
rcll
mov
mov
xchg
icebp
inc
dec
xchg
std
out
clc
movsb
sub
xor
call
ja
loopne
mov
addl
out
and
cwtl
mov
lock
dec
mov
xchg
and
lds
mov
cmp
mov
loopne
fstl
loop
les
inc
adc
call
mov
repz
cmp
cmp
insl
cmpsb
loope
inc
dec
mov
pop
push
xor
mov
push
mov
sub
js
push
fiaddl
rol
add
lock
les
mov
fidivl
mov
mov
pop
mov
and
out
in
mov
fcoml
cmp
out
out
jbe
mov
push
or
mov
push
pop
ja
mov
lcall
mov
dec
js
notl
add
and
fistl
sbbb
xor
dec
les
fcmovb
cmp
fiaddl
shll
mov
test
add
adc
add
mov
popf
cmp
mov
mov
ficomps
nop
subl
jecxz
dec
sbb
push
inc
dec
mov
lcall
cmp
or
mov
mov
push
int3
jecxz
scas
inc
push
or
adc
mov
add
imul
adc
adc
push
dec
pop
mov
inc
xchg
inc
adc
push
mov
push
sahf
cmpb
sbb
insl
roll
sub
and
mov
repz
sbb
pop
cmp
cmpsb
sub
and
xchg
sub
xor
pop
fwait
call
mov
in
pop
push
dec
negl
sarb
shll
push
dec
pop
mov
lcall
push
ljmp
fmul
adc
nop
clc
adc
push
out
and
inc
adc
mov
cwtl
mov
add
jp
bound
or
jmp
adc
mov
test
xor
push
mov
jmp
sub
orl
pop
rcrl
mov
movsb
inc
sub
xor
and
loope
mov
bound
mov
mov
or
push
dec
pop
mov
mov
mov
mov
test
inc
test
jmp
lds
rcll
mov
lods
adc
push
mov
rcll
in
dec
cwtl
out
mov
push
or
mov
sub
sub
lock
aam
rcr
sahf
popa
repz
pop
mov
mov
mov
repz
rol
aas
pop
pop
inc
dec
pop
cmp
and
mov
insl
shl
inc
call
adc
lods
push
dec
mov
push
push
rcll
mov
add
mov
inc
xor
int3
mov
push
push
xchg
movsb
and
jp
mov
xchg
roll
inc
sub
add
mov
and
fcmovb
push
mov
inc
stc
or
psubq
mov
lds
inc
test
push
dec
pop
mov
adc
push
faddl
xchg
sbb
jae
cwtl
mov
pop
pusha
add
and
rcll
push
xchg
mov
cmpsb
sub
fcmovb
pusha
or
mov
test
cs
negb
and
mov
pop
mov
inc
bound
in
push
dec
mov
xchg
xor
adc
mov
lods
iret
xchg
and
decl
lds
cmpsb
sub
xlat
xchg
sarb
jae
cmpsl
cmp
mov
in
movsl
sub
mov
mov
push
jmp
sub
les
mov
test
inc
jge
pop
xor
mov
or
dec
mov
push
out
mov
aaa
notb
adc
mov
fcmovb
cltd
and
and
mov
ret
mov
sub
lret
pushf
jne
cmpsb
mov
shll
enter
bound
sub
pop
adc
push
mov
mov
andb
sub
jae
xchg
lds
xor
mov
cmp
mov
dec
or
cwtl
mov
push
mov
mov
mov
dec
cmpsb
sub
sub
rcrl
mov
mov
add
mov
and
mov
cmp
and
cwtl
mov
pop
jbe
xor
call
test
subl
mov
rcll
out
int3
sub
or
adc
dec
cmp
ja
and
adc
pop
push
cmpsb
sub
aam
and
mov
rcll
mov
pop
les
sbbb
call
sbb
in
dec
xor
add
cwtl
cmp
xor
mov
inc
outsl
jg
xorl
loop
addb
jno
scas
and
mov
fwait
or
add
popa
add
pusha
inc
sbb
ja
dec
mov
cmpsb
das
lods
mov
push
sub
xor
add
push
cmpsl
addb
shrl
mov
frstor
xor
cmp
xor
test
insb
or
push
es
push
xchg
push
into
outsl
adc
jmp
dec
or
fcmovb
dec
mov
in
pusha
push
jb
cltd
test
adc
aam
jg
jp
mov
and
insl
inc
dec
pop
mov
pop
xor
mov
dec
pop
push
dec
jle
jo
push
mov
je
pop
repnz
jmp
xchg
push
push
xor
mov
into
add
add
cmp
outsb
jo
jg
sbb
sub
dec
orb
and
pop
rorb
adc
push
mov
push
into
adcl
inc
adcl
sub
popf
rcl
imul
or
stc
mov
pop
ret
std
stc
stos
and
pushf
cmpl
mov
test
push
out
bound
or
sub
xchg
sub
add
xor
cltd
cwtl
mov
pop
push
cmp
or
test
mov
mov
add
or
les
pushl
pop
out
adc
rcl
pop
and
popa
call
or
xor
ret
mov
push
cs
jo
bound
dec
mov
dec
jnp
cwtl
mov
adc
sub
push
mov
js
push
and
rcll
out
idivb
adc
or
adc
lea
mov
cmpsb
sub
call
cwtl
mov
adc
mov
js
enter
xchg
sahf
mov
add
pop
lea
fiaddl
mov
mov
mov
add
pop
or
shll
inc
rorb
or
rcll
mov
mov
orb
mov
insl
loope
addb
sub
cmp
sub
mov
xor
cmpsb
sub
les
mov
jge
pop
sbb
jns
lock
popa
mov
mov
mov
insl
loope
add
jns
xor
mov
adc
push
ss
jbe
xor
add
stos
mov
jo
sbbb
xor
mov
cmpsb
sub
inc
dec
pop
mov
insl
popa
xor
mov
adc
jno
mov
mov
out
mov
mov
mov
mov
add
test
adc
push
mov
insl
shl
push
sbb
push
mov
mov
sub
mov
pop
jo
jns
pop
sbb
mov
enter
dec
mov
loope
push
sub
aam
adc
xor
mov
movsb
shl
std
in
mov
ret
rcll
mov
stos
test
adc
rcll
sbb
add
pop
adc
pop
xor
sti
sub
mov
divb
sub
les
sub
adc
lahf
xor
xor
mov
jnp
sub
mov
push
imul
push
mov
mov
pop
orl
cwtl
mov
mov
rcll
outsb
sbb
dec
pop
pop
dec
xchg
push
mov
jnp
mov
ja
sub
pushl
sub
rcll
es
ljmp
inc
pusha
fidivl
sbbb
dec
add
and
push
sbbb
call
les
lds
mov
test
dec
fs
into
ja
mov
cmp
mov
js
fiaddl
xor
int3
mov
cmp
mov
dec
pop
les
push
adc
mov
xchg
andb
cwtl
mov
xor
imul
xor
ret
loopne
mov
mov
stc
push
call
dec
pop
mov
rcll
in
popf
jne
mov
mov
inc
aad
pusha
mov
imul
push
repnz
mov
xchg
mov
daa
aas
fiaddl
cwtl
mov
mov
inc
adc
xorb
test
pop
in
rcll
push
pop
add
push
mov
add
fcoms
les
pop
mov
jae
loope
xor
pushf
fimull
fiaddl
xor
fwait
xorb
les
and
pushf
cwtl
mov
enter
out
pop
push
fsubrp
out
cli
and
ret
insl
shll
call
pop
mov
push
mov
xor
push
out
sub
mov
push
outsb
and
adcb
xor
push
mov
loope
add
or
add
mov
push
mov
mov
clc
rclb
les
or
rclb
daa
jo
cmp
pop
mov
xor
cmp
jo
mov
fcmovb
loope
jp
or
jp
loopne
or
push
mov
mov
insb
pop
or
ret
push
xor
jnp,pn
push
cwtl
mov
xor
in
mov
fsubs
xor
or
and
popa
adc
mov
rcll
lods
and
enter
or
add
jle
or
shll
mov
inc
mov
mov
add
cmpsb
cmpb
sub
andb
xor
adc
push
push
mov
pop
and
lds
inc
mov
adc
sub
add
mov
add
cwtl
mov
push
or
xor
mov
mov
cmpsb
sub
inc
dec
pop
mov
ds
mov
mov
add
mov
mov
cmp
inc
push
pop
daa
test
and
hlt
and
shll
int3
mov
sub
add
jnp
loopne
je
mov
mov
inc
inc
mov
loope
lods
sbb
faddl
mov
xor
std
and
mov
dec
mov
mov
mov
test
ret
mov
movsb
int
lods
bound
fcmovb
mov
fs
fiaddl
sub
and
cld
ds
cmp
stos
push
adc
imul
lods
xor
adc
roll
les
bound
mov
sti
out
push
xor
xor
cli
or
test
bound
in
sub
fiaddl
cmp
mov
inc
push
push
xor
sub
xor
loopne
bound
fidivl
dec
mov
cwtl
lods
add
sbbb
dec
inc
punpckldq
mov
mov
push
mov
clc
pop
cmp
cmp
sub
push
inc
push
dec
mov
cmpb
gs
ret
mov
sbb
mov
sub
push
dec
pop
mov
fcomip
fmulp
icebp
inc
dec
push
adc
sub
ret
mov
xchg
push
and
adc
push
mov
cmp
mov
mov
testl
ja
and
rcll
mov
push
dec
pop
cmp
mov
das
xchg
pop
inc
jae
decl
inc
ret
mov
add
xorb
enter
bound
in
dec
pop
mov
mov
cmpsb
sub
and
add
gs
mov
xchg
cs
xor
mov
xchg
inc
and
imul
arpl
push
outsb
mov
ss
popa
inc
xor
sub
fidivrl
daa
push
xor
daa
outsb
sub
pop
adc
push
mov
add
insl
loope
mov
mov
enter
add
pop
out
mov
mov
fisttpll
mov
mov
sub
inc
dec
pop
mov
push
inc
rclb
and
adc
add
mov
les
lds
adc
cmp
xor
dec
pop
mov
rep
mov
push
insb
and
rorl
mov
repnz
sub
push
xor
sub
out
sbb
roll
ja
xor
bnd
sub
cwtl
fadds
and
or
cmpsb
sub
ret
inc
jns
mov
push
push
pop
xchg
cmp
orl
mov
cmpl
in
ret
push
and
mov
js
lds
mov
fsubr
pushf
mov
aas
out
adc
adc
push
mov
push
scas
mov
and
rcll
push
scas
pop
je
imul
and
adc
cwtl
mov
movsl
es
dec
pop
js
mov
rcll
in
out
push
sub
mov
aaa
in
dec
mov
push
ss
shll
add
mov
insl
rcrl
outsb
sub
dec
sub
pop
add
loope
fst
push
imulb
cmpsb
sub
add
popf
fiaddl
rcll
in
sub
call
loopne
adc
xchg
out
sbb
mov
mov
cmpsb
sub
icebp
adc
push
adc
mov
stc
fisubrl
test
or
push
dec
in
shll
mov
sahf
in
inc
in
cs
adc
in
xchg
out
addb
push
cltd
mov
jbe
sysret
mov
outsb
mov
pop
rorl
pop
or
adc
pop
ret
and
sbb
and
je
mov
arpl
ja
sbb
lds
cwtl
mov
push
jb
push
mov
sbb
fisubs
mov
add
insb
test
jo
bound
pop
xor
mov
cmp
test
repz
imul
in
mov
push
xchg
dec
pop
mov
mov
nop
adc
sub
testl
xor
cwtl
sbb
or
es
mov
adc
add
xor
sub
dec
pop
mov
xor
andb
xor
jmp
or
sahf
sub
mov
adc
mov
pinsrw
stc
mov
inc
das
dec
add
or
dec
shlb
fists
push
and
mov
dec
jmp
and
mov
jbe
mov
ret
or
test
repz
mov
xor
mov
mov
dec
pop
mov
mov
aaa
xchg
dec
mov
jl
js
into
lods
adc
mov
scas
jl
addr16
adc
adc
adcl
repnz
rorl
xor
mov
fwait
js
and
out
adc
cwtl
mov
int3
lahf
adc
ja
mov
aam
pop
adc
mov
sbb
mov
insl
loope
les
mov
push
into
dec
jb
sub
sub
add
insl
mov
cmpsb
sub
cmp
sub
push
mull
dec
stos
into
lock
clc
cs
inc
mov
add
add
pop
popf
ficompl
lahf
in
cmp
push
adc
aas
jge
cmp
sub
cmp
mov
dec
inc
dec
pop
mov
sub
icebp
lds
clc
sbb
adc
add
dec
xlat
insl
shrl
sbb
cmp
cmp
or
inc
mov
cmp
movsl
jp
lahf
pusha
les
rcll
push
inc
lcall
out
loope
push
xor
cmc
bound
xor
out
mov
imul
movl
dec
cmp
ret
mov
push
add
je
pop
pop
ljmp
test
jo
shlb
adcb
dec
pop
mov
cwtl
mov
xchg
in
and
shr
adc
ret
add
cmc
jg
jp
aaa
lds
sub
push
insl
loope
sub
mov
dec
jne
dec
cmp
repnz
hlt
mov
mov
popa
mov
mov
dec
pop
dec
and
rcll
pop
js
jno
mov
jnp
mov
push
les
jo
lds
mov
cs
xor
imul
aaa
daa
int3
push
das
mov
pcmpgtw
adc
mov
mov
mov
jecxz
dec
aad
rorl
repz
push
dec
pop
mov
test
add
adc
mov
inc
mov
push
or
mov
mov
adc
push
inc
or
jnp
mov
push
in
push
enter
add
lret
popa
xor
inc
jmp
and
xor
mov
add
pop
cmp
out
push
and
mov
mov
add
mov
insw
popa
lock
in
add
mov
push
inc
sbb
push
shll
cmp
pushf
arpl
dec
inc
mov
insl
shrl
pop
loop
jo
xor
cmpsb
sub
xchg
lods
bound
lds
adc
cmp
adcb
les
cmpsb
sub
fiaddl
mov
mov
add
fiaddl
mov
push
push
pop
in
xchg
mov
jnp
mov
dec
sub
adc
les
push
scas
mov
mov
pop
sbb
inc
mov
jb
mov
ja
insl
mov
sbb
ja
mov
xchg
and
call
jo
outsb
hlt
jmp
xor
sub
test
roll
add
inc
lds
mov
cmpsl
cwtl
mov
aas
sahf
xor
pop
rcll
mov
pop
push
int3
popa
lahf
dec
push
add
shll
xlat
sub
sbb
adc
loope
lds
faddl
mov
cmpl
jmp
ret
pop
mov
and
and
mov
pop
pop
and
cmpsb
sub
inc
dec
pop
mov
bound
mov
mov
inc
push
mov
adc
jo
dec
xchg
adc
mov
sbb
insl
mov
incb
mov
pop
xor
sbbb
push
mov
insl
loope
jle
add
call
mov
ret
dec
pop
mov
push
aaa
loopne
or
roll
mov
insl
loope
or
mov
inc
xchg
mov
cld
insl
inc
inc
mov
xor
sub
gs
imul
dec
pop
jle
lock
lret
call
loope
push
mov
loope
adc
mov
jg
pusha
pop
sbb
insl
mov
pop
aaa
push
pop
xchg
dec
jmp
or
rcll
mov
dec
pop
mov
mov
loopne
xor
jp
xchg
mov
out
je
shll
pusha
cmp
fistl
sbbb
sti
mov
pop
sbb
roll
js
ret
add
insl
mov
clc
push
les
in
jno
dec
xchg
lds
lds
or
pop
push
mov
fidivl
insl
roll
sub
dec
xchg
add
or
mov
jp
mov
sbb
fidivl
push
mov
xchg
xorb
fidivl
cmpsb
sub
push
push
jle
sub
mov
fiaddl
insl
loope
gs
mov
mov
push
mov
imul
inc
test
push
fcoml
mov
sub
and
cwtl
mov
mov
imul
imul
pushf
or
mov
and
inc
push
les
push
call
xor
dec
call
mov
mov
push
adc
cwtl
mov
pop
xor
jo
mov
xchg
add
std
lret
out
xor
jecxz
dec
ret
popf
sub
push
or
repz
fstl
insl
loope
mov
mov
ret
pusha
les
lahf
dec
pop
jo
mov
fcmovb
pop
mov
mov
insl
loope
cmp
or
loope
sub
pop
xor
loopne
lds
mov
add
mov
mov
lds
mov
cmpsb
sub
bound
sub
fsubs
fidivl
and
fcmovb
pop
pop
mov
mov
adc
insl
mov
cwtl
mov
pop
mov
ret
jmp
bound
aaa
adc
mov
fadd
rol
mov
out
insl
loope
mov
rcll
outsb
add
adc
sub
sub
xor
mov
push
sbb
xor
shll
and
or
mov
notb
pop
mov
jnp
pop
cmp
out
sub
enter
and
lds
mov
mov
ret
push
push
bound
mov
pop
loope
cwtl
push
cmp
sub
cmpsb
mov
adc
adc
or
pushf
popa
pop
xchg
adc
jg
movsl
cmpsl
push
les
test
xorb
pusha
pop
repnz
adc
insl
loope
ret
mov
sub
adc
and
xor
mov
cmc
cmpsb
sub
mov
mov
es
mov
or
daa
popa
pusha
push
push
sbb
les
or
nop
xor
mov
mov
xor
mov
push
pushf
mov
pop
mov
xor
scas
lods
inc
mov
xor
dec
and
mov
fiaddl
xor
call
mov
xor
dec
inc
rcll
out
and
ja
mov
and
sbbb
sub
stos
dec
js
and
les
pop
mov
adc
push
xchg
shlb
test
inc
je
push
dec
pop
xor
repz
test
mov
pop
call
xor
test
imul
add
cmp
xchg
lahf
jg
add
imul
mov
out
add
inc
xor
mov
adc
adc
pop
and
mov
cmpsb
sub
jo
mov
or
add
add
ss
sbb
push
push
and
mov
jo
mov
repnz
push
dec
gs
add
pop
adc
mov
push
cmp
pop
mov
dec
scas
ja
mov
mov
pop
ja
mov
mov
sti
mov
data16
mov
mov
xchg
push
je
imul
mov
test
mov
test
fcmovb
jge
adc
push
or
push
test
add
insl
loope
mov
rcll
in
popa
pop
mov
mov
inc
xor
mov
inc
or
dec
adc
mov
js
les
fsubrl
rorl
add
mov
push
pop
jecxz
dec
mov
ja
inc
popf
imul
add
or
adc
pushf
mov
rcll
out
adc
mov
pop
sbb
inc
mov
jnp
mov
xchg
fidivl
mov
test
sbbb
les
and
cmp
adc
push
mov
inc
sbbb
rcll
out
fdivs
ret
adc
fidivl
shll
push
ret
negl
jae
inc
or
cmpsb
mov
or
pop
cmp
inc
xchg
mov
cmp
push
dec
ss
push
les
mov
xchg
xchg
mov
mov
les
push
cld
add
inc
inc
mov
and
adc
push
les
mov
sub
push
movb
inc
xor
push
mov
fcmovb
pop
pop
out
push
lcall
dec
pop
mov
fiaddl
sbbb
mov
sub
fiaddl
mov
sub
add
mov
les
pop
sbb
adc
sahf
sbb
test
push
jp
cli
push
push
push
add
xor
jl
pop
mov
add
lret
dec
pop
mov
sub
inc
dec
pop
jo
mov
bound
add
in
test
ret
and
xor
push
fiaddl
jo
or
enter
cwtl
mov
dec
inc
xor
divb
gs
pushf
mov
mov
cld
aas
ret
sub
push
fidivl
lock
mov
rcll
outsb
pushf
pusha
mov
mov
pop
sub
mov
leave
pusha
add
fidivl
shlb
sbb
add
shll
js
sub
pusha
cmpsb
sub
nop
mov
mov
push
adc
push
mov
mov
mov
mov
nop
pop
adc
mov
cmpsb
pop
adc
xchg
and
push
add
insl
mov
mov
mov
mov
lods
aas
mov
xchg
mov
adc
push
mov
rcll
in
cmp
sbb
push
testl
or
imul
rcll
outsb
sub
mov
cmpsl
test
dec
lds
inc
sti
and
fidivl
rcll
mov
or
push
push
sbb
cmpsb
sub
imul
xor
sarb
or
push
sbb
sbb
nop
add
or
cmpsb
mov
dec
inc
mov
adc
sub
clc
in
call
pusha
shr
hlt
push
js
mov
ficoml
popl
daa
inc
cmp
jle
mov
in
mov
les
sub
aaa
add
insl
mov
push
scas
mov
mov
sub
fcoml
xchg
pop
xchg
cmp
mov
and
cs
outsb
and
push
adc
mov
mov
or
or
out
add
add
shll
jl
and
loope
int3
cs
and
gs
ss
and
sbb
push
imul
push
push
dec
ficomps
mov
xchg
cmpsb
cwtl
mov
jns
fiaddl
sub
and
push
lock
fidivl
cmp
sub
pop
dec
pop
sbb
pop
sbb
dec
inc
jecxz
mov
adc
mov
sti
ret
adc
std
fdivs
inc
ret
pop
push
dec
mov
mov
and
inc
sbbl
nop
mov
mov
lock
adc
cwtl
mov
mov
int3
sbb
push
dec
pop
mov
xor
fidivl
cwtl
outsb
mov
or
sub
addb
mov
xchg
xor
mov
sub
adc
pop
lods
adc
dec
popa
mov
dec
dec
sub
cmp
xchg
adc
insl
roll
lret
jl
icebp
push
xor
fcmovb
std
aas
mov
js
mov
pop
mov
cmpsb
sub
cs
cmp
sub
inc
dec
mov
test
cmpsb
sub
ret
or
orb
push
fcmovb
mov
insl
loope
mov
insl
shrl
mov
push
or
xchg
andb
jae
mov
mov
mov
push
jae
or
mov
cmp
and
lds
mov
ficomps
fisttpll
adc
call
cwtl
mov
or
imul
mov
mov
or
imul
shll
push
xor
mov
fists
mov
or
pop
pop
xor
adcb
mov
int3
mov
mov
cli
add
inc
mov
adc
push
daa
mov
sub
push
inc
mov
loop
inc
pop
mov
icebp
lahf
or
mov
std
aaa
or
mov
mov
nop
add
dec
lock
inc
mov
xor
inc
pop
adc
ja
push
ja
add
ficomps
sbb
ja
sub
inc
inc
pop
mov
cmp
pop
sbb
and
frstor
imul
cmp
mov
adc
out
inc
in
push
inc
pop
ja
mov
fcoml
rcll
ja
sbb
mov
mov
cld
jle
inc
inc
mov
mov
cmp
inc
inc
pop
ja
jmp
cmp
ror
mov
add
mov
push
cmp
adc
fdivrs
imul
push
inc
ja
xor
outsb
aas
stos
mov
add
fcmovb
sbb
adcl
sbb
in
call
movsl
add
add
push
lds
jg
scas
dec
pop
repnz
and
pop
scas
sub
pushf
in
cmp
mov
lods
les
enter
fdivrl
adc
xchg
movsb
stc
adc
push
push
ja
pusha
and
inc
inc
test
ja
push
mov
insb
xchg
movsb
inc
pop
push
aam
inc
ja
repnz
adc
push
ja
and
repnz
push
ret
xchg
lods
pop
xchg
lods
lret
out
nop
inc
lods
cmp
dec
adc
ja
popa
test
dec
mov
ja
sub
fiaddl
lock
cmp
rcll
ja
fiaddl
sbb
cmp
repnz
pop
xchg
and
ret
sub
dec
xchg
mov
loope
mov
mov
fidivl
push
push
sbb
inc
inc
pop
ja
sti
pop
cmp
xor
push
inc
mov
push
mov
insl
sar
push
cmp
jmp
and
adcl
cmp
fldcw
mov
or
jp
inc
pop
ja
aas
sub
ficomps
mov
int3
adc
cmpsl
cmp
pop
test
pop
add
push
cmpsl
jg
push
adc
ja
mov
ret
push
push
sahf
xor
repz
pop
daa
and
xorb
inc
ret
sbb
out
mov
pop
sub
into
ja
and
imulb
and
or
mov
aas
and
and
cmpb
mov
push
add
jl
dec
and
ja
pop
stc
ret
cmc
movsl
data16
inc
add
movl
popf
stos
or
push
mov
test
js
inc
mov
ja
inc
inc
pop
mov
xchg
ja
jo
pop
cmp
push
inc
ja
push
or
mov
inc
inc
pop
cmp
dec
xchg
mov
lea
adc
push
dec
adc
push
into
outsl
ja
dec
push
add
ds
mov
scas
jb
sbb
add
ja
mov
adc
fdivs
push
xlat
inc
mov
adc
ja
xor
push
inc
pop
ja
adc
dec
ja
or
popa
mov
ja
mov
ja
adc
insl
inc
push
ja
in
mov
pop
push
adc
ja
add
add
rcll
push
stos
ja
mov
push
inc
test
mov
ja
adc
pop
insl
loope
ja
push
stc
push
mov
add
xchg
data16
mov
add
push
mov
push
call
popl
fwait
lcall
aas
mov
ret
imulb
sbb
cwtl
adc
ja
adcb
inc
insl
loope
and
out
and
adc
pop
add
insl
ja
shlb
ret
aas
mov
pushf
mov
lcall
stc
dec
inc
fucomip
add
fiaddl
jo
xchg
xor
push
mov
or
lods
push
inc
pop
mov
scas
push
aaa
push
inc
dec
cmp
mov
jl
insl
inc
lock
mov
mov
inc
add
ja
pop
js
insb
insl
rorl
in
mov
and
adc
xchg
imulb
and
ja
mov
adc
push
ja
or
pop
mov
outsb
js
inc
inc
ja
xchg
orb
add
movsl
out
sbb
and
pop
adc
das
adc
pop
xor
ja
mov
ja
pop
enter
nop
push
cmpsl
pop
cmp
mov
push
inc
ja
or
rcll
ja
mov
and
ret
insl
loope
outsl
ja
fcmovb
pop
lds
inc
pop
mov
sub
sub
insb
sbb
mov
ja
loope
movsb
push
inc
pop
push
add
adc
mov
mov
and
or
inc
ja
add
insl
inc
bound
mov
ja
fiaddl
ja
or
fwait
and
in
into
cmp
pop
ja
adc
add
and
dec
add
mov
and
and
push
inc
mov
ja
push
ficoms
adc
es
sub
ja
mov
mov
pop
mov
push
ja
sbb
and
sbbl
mov
fcmovb
xchg
ja
sub
inc
inc
pop
mov
insl
loope
ja
ja
mov
push
addr16
mov
ja
push
adc
shlb
pop
or
add
ja
mov
xor
adcb
cld
and
add
inc
push
inc
mov
mov
pop
adc
mov
aaa
cmp
add
out
or
inc
mov
mov
inc
pop
js
ja
mov
push
cmp
mov
mov
sub
add
sub
push
inc
push
ja
test
js
test
loope
sub
inc
adc
and
sub
add
rcll
out
sub
and
adc
insl
and
fidivl
gs
inc
pop
pop
jbe
cmp
adc
cmp
and
xorb
call
ja
and
pop
inc
sub
mov
adc
sbb
ja
test
mov
fidivl
int3
mov
inc
mov
push
ja
or
push
pop
adc
insl
ja
inc
inc
pop
cmp
or
test
loop
inc
ja
jle
inc
add
fidivl
or
adc
push
mov
mov
scas
xor
lret
mov
mov
mov
test
subl
mov
mov
jo
adc
orb
adc
or
or
adc
inc
pop
mov
push
insb
pusha
mull
orb
mov
add
sarb
dec
adc
inc
inc
pop
sbb
pop
dec
add
jmp
jbe
cmpsl
and
fidivl
aam
adc
push
add
aaa
add
test
fdivl
mov
mov
or
sub
and
add
js
pop
jo
ret
sub
and
push
out
sub
aaa
adc
sub
fiaddl
dec
push
push
mov
push
cmp
or
push
mov
add
lock
cmp
sub
out
pop
xor
sub
push
adc
dec
xchg
insl
push
cmp
push
jg
inc
pop
cmp
fsubrl
push
push
fmull
inc
sub
push
dec
popa
cmp
push
ja
insl
push
sbbb
pusha
or
mov
ficoml
push
xorb
mov
adc
mov
mov
rclb
pop
js
mov
inc
push
xor
push
mov
or
push
pop
cmpsl
xorb
adc
push
add
push
add
ret
push
out
sub
ds
repz
adc
push
push
inc
add
lret
push
add
jecxz
in
mov
mov
inc
hlt
sbb
lds
aaa
add
inc
xchg
push
pop
hlt
ret
adc
push
or
jp
push
add
cmpb
loope
push
sbb
push
in
js
mov
push
xchg
pop
xor
add
addb
sub
inc
add
cmpsb
push
dec
movsl
fldlg2
andl
adc
push
push
loop
rclb
int3
in
inc
pop
mov
les
xorb
mov
mov
sub
push
pop
and
dec
subb
fs
cld
sub
adc
rol
sub
or
popa
pusha
push
xor
mov
rclb
push
rolb
push
add
ret
popa
inc
push
adc
sbb
cmp
imul
jae
outsb
push
cwtl
mov
repz
je
adcl
push
sub
xorb
mov
stos
add
ljmp
push
fs
add
or
mov
push
insl
popa
and
add
push
inc
pop
jo
push
pop
cmp
inc
inc
push
xchg
pop
ja
mov
push
mov
stos
or
push
rclb
or
fildll
xor
xchg
push
adc
push
inc
push
rclb
pop
push
inc
cs
push
adc
xor
mov
pop
adcb
push
push
push
sub
daa
and
cmpsl
pop
push
aam
and
or
push
pop
adc
push
jl
xor
insl
loope
pop
mov
adc
sbb
or
push
push
xlat
dec
push
add
or
test
insb
add
and
mov
sbb
xor
or
addl
leave
fcompl
dec
dec
mov
nop
dec
fs
or
ja
adc
push
les
pop
or
push
inc
ja
push
inc
pop
cmp
add
jo
shlb
test
adc
push
add
jns
out
icebp
test
xchg
dec
faddl
xorb
mov
sub
ficomps
sub
push
aad
or
mov
push
jp
sub
and
sti
inc
push
add
dec
ja
mov
sarl
rclb
out
add
ret
ja
ja
xor
sub
ja
sub
inc
ja
xorb
inc
cmpsb
addb
test
fs
pop
mov
mov
jnp
ja
aad
adc
ja
jp
and
jns
push
jae
or
mov
shrl
in
xorb
mov
mov
xorb
cmpb
mov
mov
pop
mov
sarb
push
in
push
inc
ja
shll
cmp
ja
negb
repz
repnz
pop
ja
adc
lock
ret
pop
cmpsb
and
mov
out
ja
inc
pop
mov
pop
cmp
mov
mov
sub
stos
fimuls
push
adc
ja
or
push
ja
jecxz
das
push
inc
add
add
rclb
in
mov
ja
mov
testb
and
test
and
mov
adcb
insl
rcrl
mov
inc
inc
pop
mov
mov
ja
rclb
out
xor
ja
mov
jnp
loopne
ja
fcmovb
dec
jns
ja
insl
loope
gs
mov
pop
push
es
pop
mov
mov
sub
fcmovb
loopne
ja
push
insl
loope
add
dec
mov
pop
add
dec
pop
mov
es
lds
or
and
ret
push
loope
add
ja
es
add
add
jo
inc
pop
ja
dec
fmuls
imul
addb
add
dec
addr16
repnz
xor
push
xor
in
das
bswap
xchg
call
dec
pop
xchg
and
sub
mov
dec
sub
cld
fsubrl
call
repnz
call
xor
xchg
bswap
xchg
call
or
into
xor
pop
and
cmc
frstor
outsb
es
rclb
ja
es
icebp
mov
inc
inc
pop
mov
mov
ja
stc
shl
or
addr16
in
repnz
lods
fistpl
call
or
dec
leave
mov
sub
push
cmp
ja
pop
inc
ds
pop
adc
dec
lock
xorb
in
ja
insl
popa
jo
bnd
imul
jae
or
repnz
add
push
out
or
ja
push
rcll
ja
mov
ja
ds
or
ja
mov
ja
push
mov
repz
push
inc
pop
ja
push
loope
xorb
add
ret
push
test
fimuls
ja
mov
mov
push
fcoml
dec
mov
pop
dec
xorb
add
cmpsb
ja
push
ja
lcall
fadds
mov
mov
ret
inc
or
test
inc
pop
pop
lret
fiaddl
ja
xchg
push
inc
pop
mov
adc
loopne
xor
cmp
push
test
or
xchg
mov
test
xchg
push
mov
ficoml
push
push
add
or
sub
mov
sub
ja
or
gs
lcall
stos
and
and
jge
or
inc
arpl
call
mov
ja
insl
loope
push
xor
and
in
es
scas
add
ja
dec
insl
mov
inc
sbb
push
inc
pop
ja
sbb
cmpsb
xorb
add
cmpb
sub
add
ret
dec
sub
push
pop
ret
adc
add
sub
lock
xorb
and
sbb
mov
or
insl
loope
lcall
push
push
fcmovb
loopne
ja
inc
jl
mov
inc
cmp
sar
inc
and
mov
ja
push
pushf
shl
lock
pop
adc
xchg
pop
push
scas
xchg
aam
mov
shlb
sbb
call
dec
shrl
test
add
jns
push
add
ja
insl
popa
xor
mov
or
stos
xorb
add
adcb
or
or
adc
or
ja
sar
inc
pop
cmp
xor
push
push
push
ja
pusha
add
adc
dec
mov
add
ret
out
ja
pop
mov
jmp
push
ja
dec
mov
ja
sbb
pop
ja
push
mov
lcall
sbb
test
mov
std
adc
push
aam
ja
mov
adc
push
out
sub
ja
jne
or
ja
add
add
mov
adc
mov
lods
xorb
test
sub
insl
loope
and
push
test
add
dec
les
hlt
dec
inc
pop
inc
inc
pop
ja
stos
xorb
push
outsb
xchg
dec
ja
adcb
inc
jb
ret
ja
int3
js
test
pop
lea
ja
lods
pop
add
or
cs
ja
mov
mov
std
xorb
out
stos
ja
ficomps
dec
adc
rorb
jmp
sbb
and
push
ja
test
inc
add
dec
sub
aaa
adc
inc
call
mov
adc
or
mov
push
cwtl
xor
ja
fisubrl
mov
shlb
imul
adc
push
ja
repnz
mov
xorb
dec
push
add
inc
adc
cmpl
mov
rcll
ja
push
in
adc
xchg
pop
push
and
pop
jo
or
pushf
pop
pop
inc
inc
ja
push
push
inc
pop
ja
and
add
bnd
push
cmc
test
iret
aaa
out
fs
adc
push
ja
dec
mov
cmp
aaa
call
add
ja
add
rolb
cmpsb
mov
mov
adc
ret
mov
out
add
fidivl
push
sbb
inc
stos
xorb
mov
insl
loope
ja
adc
mov
in
push
hlt
mov
push
jbe
mov
mov
push
xor
mov
cmp
mov
push
fildl
or
inc
sub
xchg
inc
loope
and
adc
insl
ja
std
cmpsb
add
ret
sub
adc
push
outsb
pop
bound
test
push
jno
js
cmp
dec
and
and
movsl
mov
fsts
jo
pop
daa
leave
nop
pusha
push
or
add
test
cwtl
ja
test
adc
les
pop
dec
sub
mov
fwait
and
push
add
test
data16
fimull
mov
dec
and
xchg
pop
push
add
sbb
popa
addb
and
cmpsb
movsl
out
rclb
push
add
cwtl
sub
fs
mov
sub
xorb
or
loope
inc
ja
and
push
push
xorb
mov
call
mov
ja
lock
rclb
ja
fiaddl
ja
sub
cmpb
test
jo
add
mov
xorb
pop
push
add
mov
subb
or
mov
jbe
insl
and
loope
cmpsb
push
mov
and
dec
mov
add
loopne
inc
pop
js
ja
ja
jo
and
pop
mov
push
mov
inc
inc
ja
sbb
loopne
xorb
add
cli
ja
inc
inc
pop
mov
push
ja
addl
pop
stos
and
jb
mov
add
enter
mov
add
mov
or
test
or
pop
test
adc
sbb
ja
xor
pop
add
outsl
loopne
inc
pop
ja
test
jb
mov
inc
push
leave
pop
xor
jo
push
xchg
jae
dec
inc
ja
mov
adcb
push
fisubs
scas
cmpsl
leave
xorb
mov
xchg
aaa
add
xor
ja
cmp
sub
inc
sub
sub
mov
adc
insl
ja
cmpsl
ja
rclb
ja
xor
or
ja
inc
add
ss
test
mov
cli
ja
sbb
inc
in
dec
leave
jle
jl
bound
sbb
jb
or
nop
inc
or
cmc
cmpsb
rcll
add
and
rclb
push
dec
lock
sbb
aaa
adc
comiss
ja
cmpsb
pop
adc
mov
cmp
sub
sub
inc
adc
insl
loope
ja
mov
ja
rclb
fisubs
ja
mov
dec
test
jo
add
push
rolb
and
jns
pop
daa
sbb
fidivl
add
ret
test
imul
addb
sub
icebp
insb
push
adc
push
pop
push
ja
push
ja
mov
sbb
add
ret
sub
xorb
sub
inc
pop
adc
pop
pusha
lock
push
inc
ja
shr
jne
push
testl
rcrb
sbb
adcl
fcomps
inc
push
ja
mov
lcall
pop
inc
ja
pop
adc
sub
add
test
fcmovb
sbb
loopne
push
adc
insl
loope
xorb
push
sbb
add
cmp
call
and
add
call
ret
pop
xor
pop
mov
mov
or
pusha
and
cmp
in
dec
jmp
iret
push
pop
insl
loope
jnp
xor
ja
xrelease
fsubrs
and
aad
push
jg
push
scas
dec
add
test
pusha
cmc
mov
push
gs
xorb
rclb
in
push
or
adc
sahf
ret
das
add
ret
cli
int
sbb
push
mov
addb
ja
push
or
test
fdivr
push
outsb
or
fstpl
or
xor
dec
add
push
xlat
add
insl
ja
ret
mov
ja
test
adcl
ja
subb
mov
jp
sbb
sub
js
push
sub
mov
ja
sar
dec
sub
sbb
insl
ja
add
cmp
sbb
add
inc
in
ja
and
jge
addb
ja
inc
mov
fiaddl
xor
loop
add
jo
push
fnsave
sbbb
loopne
add
ja
popa
mov
push
xor
push
inc
pop
ja
xchg
pop
push
adc
push
ja
lret
sub
jbe
insl
rcll
jo
inc
call
cmpsl
ja
gs
add
mov
sbb
push
push
inc
mov
inc
ja
mov
push
add
insb
add
mov
sub
ja
xorb
xor
push
or
aam
jo
add
mov
mov
cmp
pop
pop
and
sbb
sbb
inc
ja
sub
or
xorl
sub
sub
pop
adc
mov
shlb
js
and
pop
push
add
dec
sbb
ja
in
push
push
inc
pop
cmp
movsl
ret
inc
ja
dec
jge
addb
ja
xor
aad
xorb
sbb
jmp
rclb
inc
push
in
sahf
dec
adc
call
push
push
sbb
mov
jnp
ja
xchg
push
cmpsb
fiadds
ja
jl
inc
inc
pop
test
add
push
xchg
out
lret
icebp
pop
adc
inc
pop
jo
ja
pop
mov
loopne
ja
movb
or
ret
xchg
scas
or
add
xchg
jl
sub
push
gs
mov
ja
adc
push
push
pusha
ja
or
sub
jnp
js
sub
ja
cmp
cmp
push
dec
fwait
inc
xchg
push
inc
pop
cmp
inc
ja
bound
pusha
insb
loopne
js
icebp
addb
mov
ficoms
out
mov
xchg
xorb
ret
mov
add
sub
ja
cmp
sub
filds
ja
xchg
inc
and
or
out
and
ja
rclb
out
adc
ja
out
inc
or
lcall
ja
sub
shl
ja
mov
shrl
add
add
insl
ja
pop
add
cwtl
add
push
inc
imul
ja
fiaddl
xchg
pop
and
mov
push
ja
pop
cwtl
pop
in
rcrl
add
ret
lea
iret
in
lods
fwait
hlt
jbe
sbb
into
and
ret
adc
std
and
rclb
ja
loopne
push
xchg
xchg
cmc
loop
adc
add
ja
sub
insl
shll
or
sbb
adc
push
adc
ja
call
insl
ja
shll
adc
and
mov
and
insb
ja
sub
enter
sub
shrb
and
subl
ja
push
ja
in
loope
xorb
add
cwtl
out
popa
xor
pop
inc
add
mov
mov
jg
fistpl
test
push
aaa
push
inc
ja
xchg
push
ja
mov
cmp
sub
in
mov
ja
fwait
jne
rorl
mov
ja
iret
pop
insb
test
lahf
call
leave
jo
nop
call
mov
jecxz
xorb
sbbb
fnstcw
push
inc
pop
ja
or
dec
jb
sbbb
or
pop
mov
outsb
mov
ja
sbbb
mov
ja
add
sbbb
mov
sbb
xor
ja
cmpsb
insl
loope
add
pop
add
ja
mov
mov
mov
mov
lcall
xchg
faddl
ja
es
and
aad
rclb
ja
xor
mov
ja
and
add
inc
ja
inc
pop
cmp
jp
lods
test
je
pusha
cmp
mov
pop
cmp
mov
or
fiaddl
push
mov
xor
jbe
xor
scas
fs
ja
xor
push
outsb
sub
sub
inc
ss
pop
mov
scas
add
xor
ja
into
outsb
addb
int3
lret
movsb
push
loopne
ja
shlb
cmpsb
or
jo
nop
xchg
adc
pop
ja
mov
ja
push
inc
pop
xor
ja
insl
popa
xor
jle
add
cmp
jnp
mov
inc
mov
mov
xchg
push
test
add
cmpsb
sbb
pop
sbb
sbb
scas
out
loop
add
ja
scas
adc
push
or
and
inc
loope
iret
jg
adcb
in
sub
adc
add
adcb
or
testb
sbb
and
pusha
xchg
push
sahf
rorb
popa
lea
ja
and
add
add
inc
push
dec
ja
dec
in
movb
cmp
ja
sub
sbbb
add
add
push
in
add
subl
xor
ja
mov
jbe
mov
xchg
push
aas
and
ja
int
cwtl
in
xchg
cmpsl
push
adc
push
mov
insl
popa
jo
ja
xchg
xchg
jo
add
and
mov
mov
jp
lret
sub
sub
ret
ja
jle
rclb
ja
mov
adc
je
inc
inc
or
movsl
inc
inc
pop
dec
adc
or
or
fcmovnb
out
pop
add
imul
mov
push
inc
ja
or
adc
push
ja
inc
pusha
cli
xchg
dec
sbb
or
test
ja
addl
add
push
or
add
xchg
movsb
fiaddl
sbb
ja
mov
inc
pop
mov
scas
repnz
pop
or
pop
push
inc
pop
cmp
dec
je
jnp
xorb
inc
jns
das
lods
fbld
add
insl
loope
mov
ss
fsubrs
pop
ja
push
add
push
inc
jo
mov
dec
inc
add
in
and
xchg
push
cs
push
scas
and
xor
shlb
push
pop
add
es
add
xor
mov
sub
adc
insl
loope
add
add
orb
mov
fldl
loope
sub
mov
ja
mov
or
mov
ja
xchg
sub
jecxz
inc
push
ror
scas
sarl
mov
dec
fnstsw
lds
into
fidivs
dec
inc
imul
ret
cmp
cmp
sub
push
mov
add
mov
mov
sbb
ja
push
fnsave
addb
fcmovb
mov
xorl
add
fdivrp
ret
xorb
jl
push
add
ja
and
inc
add
imulb
adcb
xor
insl
loope
ja
and
add
cmpb
mov
pop
mov
lcall
push
lret
sub
pusha
cmpsl
les
fwait
and
adc
sub
mov
sub
rclb
push
into
lock
push
in
add
aam
xor
adc
pop
adc
test
pop
loopne
adc
or
add
inc
fcmovb
jge
sub
pop
sbb
sub
ja
add
push
pop
mov
jmp
hlt
sbb
mov
mov
imul
fldenv
cmpsl
mov
orl
ja
push
ss
sub
ret
mov
adc
ja
pop
js
clc
push
call
inc
inc
ja
jmp
or
add
ja
rolb
mov
ja
xorb
mov
rcll
ja
shl
repz
sub
adc
push
ja
mov
ja
or
rorl
enter
or
adc
push
add
push
mov
push
or
ret
or
cmp
add
aas
rclb
add
lods
aam
lret
ja
cmp
inc
inc
pop
cmp
nop
push
shrl
fs
pop
xor
loop
add
inc
ja
dec
fadds
leave
test
inc
inc
pop
mov
adc
cmp
test
stos
ja
daa
add
ret
call
ret
or
pop
push
or
sbb
inc
pop
xor
xchg
or
jns
sub
mov
ja
rclb
into
ja
dec
push
out
adc
cmp
mov
sbb
push
cmp
mov
and
ret
or
mov
repnz
mov
ja
push
add
ret
jnp
mov
adc
pushf
ja
xorb
test
cmp
imul
fcmovb
jp
cltd
and
push
mov
outsl
push
ja
inc
cmp
mov
rcll
sbb
fcmovb
popa
stos
ja
fimuls
mov
add
push
sub
sbb
popf
push
sub
jle
ret
and
xchg
sbb
fidivl
ret
orb
fs
push
lcall
adc
ja
int3
loope
add
ja
sub
add
cmpsb
add
cld
test
cmp
adc
push
mov
ja
pop
mov
adc
inc
ja
or
fiaddl
lods
xor
test
mov
ja
or
add
ja
inc
inc
pop
adc
pop
outsb
lcall
outsl
es
rorl
ja
je
or
add
data16
es
stc
inc
sti
mov
lahf
rclb
fisubrs
ja
sbb
movsl
adc
outsb
sub
ja,pn
insl
popa
xor
xchg
mov
xor
sub
out
pop
xor
mov
mov
ja
ret
fdivp
mov
lock
mov
sbb
xor
dec
push
ja
cmp
dec
add
repnz
aam
add
insl
ja
add
daa
ja
jbe
add
je
in
or
test
inc
jb
add
test
adc
push
push
add
pop
mov
mov
ja
mov
inc
add
lods
cmp
mov
addb
movsb
and
fiaddl
mov
mov
movsb
ja
inc
inc
pop
mov
sbb
mov
mov
push
test
mov
ret
mov
mov
add
jo
xorb
pop
ja
or
mov
inc
sub
push
mov
mov
mov
xchg
test
or
negb
adc
stos
dec
and
jo
push
ds
cmp
icebp
lds
add
hlt
or
aaa
enter
ja
push
xchg
xor
inc
inc
pop
cwtl
ja
rclb
in
aam
les
mov
cmp
mov
jmp
rolb
mov
xchg
sub
insl
popa
jo
sub
add
pushf
mov
or
add
bound
sub
notl
mov
mov
push
and
ja
pop
mov
rclb
out
inc
ja
and
pop
pop
adc
and
add
push
add
ds
test
imul
sub
pop
add
add
insl
loope
ja
pop
inc
pop
jo
ja
mov
ja
sub
outsb
xor
mov
adc
push
add
ret
push
ja
arpl
or
lods
out
add
ret
jmp
adcl
gs
ret
ja
push
xchg
cwtl
mov
or
adc
jns
mov
addl
pop
mov
popf
add
lcall
sub
fidivl
shlb
test
push
add
cmp
ja
and
inc
pop
ja
mov
add
jle
add
mov
cwtl
ja
push
adc
ja
cmp
out
scas
add
rolb
rclb
into
ja
fistps
jle
sbb
ja
popa
pop
loope
add
ja
sub
push
add
ficoms
popf
call
adc
ja
popa
adc
push
int3
hlt
mov
xorb
fucom
test
icebp
pop
enter
shll
xor
mov
ja
loop
cwtl
out
xchg
out
fidivrs
das
sbb
add
dec
cmpl
repnz
aam
push
adc
sbb
aas
add
ret
xor
enter
or
cmpsb
ret
inc
pop
sbb
nop
mov
lods
cwtl
cmp
jnp
push
mov
mov
call
dec
dec
inc
ljmp
pop
roll
in
mov
insl
ja
push
testl
xchg
and
out
sbb
inc
inc
pop
ja
das
cmp
in
mov
call
insl
loope
aad
push
rclb
pop
sbb
adc
mov
add
add
data16
shlb
mov
dec
mov
lret
push
outsb
mov
push
insl
popa
xor
orl
xorb
or
stos
ja
icebp
or
inc
add
fisubrs
mov
ja
insl
popa
and
ja
mov
xor
sti
and
inc
call
call
xchg
inc
inc
pop
cmp
inc
and
rcll
pop
and
pop
mov
pop
push
lock
call
loopne
xorb
push
fiaddl
sub
inc
pop
cmp
and
rcrl
ja
mov
push
xor
arpl
fiaddl
inc
pop
lods
add
jne
sub
mov
into
add
inc
arpl
inc
pushf
mov
push
mov
lock
ja
out
stc
mov
push
imul
sahf
aad
inc
imul
pop
js
ja
addl
add
add
ja
push
add
xor
jno
ljmp
push
xchg
outsl
mov
adc
jo
shlb
sbb
add
xorb
and
lods
sbb
mov
or
xchg
pop
vunpckhps
push
in
xchg
mov
ja
push
push
dec
aam
pop
mov
ja
mov
and
inc
ja
jmp
cmp
mov
fisubl
ja
and
adc
adc
fwait
mov
add
ret
call
mov
ja
mov
ret
mov
enter
ja
jecxz
push
push
aaa
xchg
jnp
pop
sbb
ja
mov
ja
in
pop
xchg
mov
cmpb
pusha
insl
loope
add
pop
inc
imul
add
dec
mov
ja
sbb
adc
push
ja
add
jl
jl
mov
inc
imul
adc
or
mov
pop
mov
pushf
std
push
mov
ja
pushf
push
mov
fiaddl
sar
jns
fiaddl
cwtl
or
mov
push
ja
xor
dec
jp
dec
xchg
jmp
enter
mov
xorb
loopne
ja
mov
jbe
add
test
xchg
inc
ja
push
in
inc
mov
push
adc
cs
adc
ja
into
ljmp
rclb
outsb
or
adc
ret
ja
inc
es
add
push
sub
push
xor
add
cmpsb
or
lods
addb
push
add
pop
repnz
fcmovb
mov
ja
cwtl
mov
xor
add
ja
mov
cmp
sub
adc
inc
sub
mov
adc
pop
sbb
cmp
inc
ja
mov
test
ja
adc
loope
rcrb
fsub
mov
push
add
les
stos
xorb
ret
sub
dec
scas
int3
je
in
fimuls
add
pop
rolb
rclb
ja
or
push
ja
push
inc
lods
hlt
sbb
adc
ja
xchg
adc
xchg
sub
ja
xchg
out
fwait
and
imul
pop
mov
inc
pop
mov
sbb
add
or
inc
or
ja
dec
out
adc
pop
xchg
sbb
push
ja
push
iret
sbb
cmp
sbb
add
shlb
lods
pop
pop
push
jp
xor
dec
sbb
ja
add
ret
pop
js
out
jecxz
lods
insb
adc
push
push
mov
push
cmpsb
lods
cmp
cmp
mov
inc
pop
lds
mov
int
cmp
pop
pop
push
dec
movl
add
bound
cli
or
pop
ja
and
fiaddl
mov
test
adc
mov
push
push
adc
in
inc
inc
ja
pop
and
or
add
insl
loope
or
add
ja
cld
faddl
mov
inc
sbb
and
insl
shll
inc
add
dec
or
mov
rclb
ja
add
push
fmuls
add
mov
inc
pop
ja
dec
pop
fcmovb
inc
dec
jmp
lock
ja
movsb
or
outsb
adc
xchg
fmull
lods
dec
nop
mov
dec
data16
and
outsb
loop
push
push
xorb
out
mov
fs
je
js
sbb
mov
ja
mov
mov
inc
sub
test
inc
rclb
add
pop
mov
mov
fcmovb
popf
and
stos
jo
adc
stos
and
mov
xorb
sub
sbb
mov
or
adc
add
ds
imul
push
add
ret
jmp
add
and
mov
ja
rclb
out
mov
ja
sub
push
sub
or
jl
jge
movsb
inc
fadds
daa
addb
sbb
add
ja
sbb
mov
frstor
sbb
mov
test
and
add
insl
popa
mov
loop
cmpsl
mov
cmpsb
dec
aas
dec
adc
ja
cmpsb
dec
and
sub
push
cltd
sbb
out
sub
ja
pop
mov
and
push
ja
or
add
stos
mov
adc
push
ja
mov
add
xorb
pop
mov
jle
ja
mov
inc
stos
ja
insl
loope
popf
xorb
popa
or
and
fiaddl
enter
add
out
add
lcall
cmp
add
ja
rolb
pop
add
fidivl
xchg
sbb
push
ja
rclb
push
ja
push
dec
ret
mov
xchg
add
in
push
adcb
loope
adc
ja
in
add
orb
mov
ja
mov
and
xor
and
mov
xchg
pop
or
ja
popa
std
lcall
pop
and
cmpsb
dec
adc
push
ja
pop
sbb
cmp
push
add
insl
ja
std
out
lods
xor
pop
push
inc
or
ja
js
and
es
pop
adc
mov
and
mov
xchg
shlb
pop
cmpsb
sub
push
or
pop
adc
xchg
cmpsl
mov
push
xchg
jg
or
sahf
lds
mov
push
int3
and
inc
adc
ja
cs
inc
imul
in
adc
or
sbbb
ja
lcall
cmpsb
sub
jnp
xorb
cmp
mov
xorb
mov
push
int3
pusha
jle
xorb
xor
scas
xchg
cmc
addb
insl
popa
mov
xor
or
inc
add
ja
dec
lcall
xchg
je
fnsave
ja
jp
inc
pop
fadd
ja
sub
aas
pushf
and
rclb
call
or
ja
sub
add
cmpb
or
add
sbb
or
xor
jnp
cld
ret
pop
ja
adc
push
push
mov
pop
mov
add
or
bound
mov
mov
ja
adc
mov
dec
imul
insl
shll
or
ja
dec
call
push
call
push
rclb
into
adc
pop
cmp
push
test
push
or
insl
and
push
fiadds
pushf
push
cmp
adc
and
mov
jle
adc
or
push
inc
pop
pop
pushf
ja
or
ret
or
pusha
daa
add
ja
dec
int3
bound
inc
inc
pop
xor
ja
or
loopne
mov
mov
xorb
pushf
rclb
scas
xor
jo
adc
jbe
mov
and
inc
pop
sbb
ja
dec
adcb
inc
inc
pop
mov
jb,pt
sub
jg
pusha
daa
and
sbb
xorb
imul
loope
add
sub
ja
add
int3
orb
push
enter
jno
jb
jb
adc
add
ja
adc
add
mov
sbb
andb
popa
inc
pop
sbb
cmp
xor
dec
add
pop
mov
es
pop
push
inc
ja
imul
mov
sbb
ja
decb
inc
inc
pop
ja
flds
and
sub
lahf
lds
xchg
loopne
in
pop
cmp
outsl
fld
stos
lahf
aaa
pop
mov
rclb
aaa
sbb
jl
mov
or
sub
and
out
xlat
adc
push
sub
or
jno
push
aaa
test
ret
pop
mov
add
adc
imul
mov
add
dec
enter
push
adc
fdivl
mov
dec
push
mov
xor
mov
shrb
jecxz
sub
and
add
xor
nop
pop
and
mov
add
pushf
mov
je
push
aaa
or
je
jo
push
aaa
fnsave
mov
popa
jo
or
mov
movb
ficompl
mov
outsb
flds
ret
xor
xchg
sub
sub
cltd
sbb
mov
loopne
rcrb
mov
imul
xor
shll
pusha
fld
cmp
sbbb
push
xchg
mov
pop
jno
aaa
lea
outsb
mov
adc
xchg
aaa
sbbb
xchg
sub
fnsave
lret
push
push
jl
ret
pop
addl
adc
and
aaa
xchg
shlb
fdivs
push
cmpsb
adc
mov
push
fld
imul
add
mov
pop
les
pop
mov
mov
flds
cs
hlt
outsb
aaa
cmp
movsb
jnp
add
je
add
inc
lea
jmp
jne
push
jmp
adc
xchg
cmpsb
repz
inc
fld
test
or
leave
push
mov
xlat
sub
insb
sbbb
mov
mov
aaa
pop
mov
mov
imul
mov
push
fsubl
push
push
aaa
add
push
aaa
or
or
or
inc
push
pusha
mov
dec
loopne
pop
mov
adc
pop
jo
aaa
mov
int3
aaa
pop
mov
setno
xchg
sub
pop
fld
ljmp
outsb
aaa
sub
add
mov
xor
add
jo
jmp
popl
test
jo
push
aaa
loop
flds
ret
ljmp
mov
sub
aaa
sub
mov
aaa
mov
andl
or
mov
sbb
cli
push
or
test
lds
aaa
mov
rcr
aaa
insb
popa
xor
jns
loope
adc
aaa
adc
adc
mov
shlb
xchg
or
pop
jo
inc
add
sub
add
add
or
insb
loope
or
data16
jno
mov
shll
inc
mov
aaa
loope
or
mov
mov
add
sub
xor
sub
mov
jmp
loope
dec
fdivl
or
push
add
bound
push
aaa
outsb
fld
jnp
push
dec
std
pushl
flds
fiadds
mov
adc
or
mov
aaa
ja
dec
and
aaa
test
aas
inc
mov
sub
insb
roll
push
mov
inc
add
fdivl
aaa
flds
mov
daa
outsb
aaa
int
imul
out
jne
outsl
fld
pop
repnz
xor
int3
je
and
into
dec
aaa
or
inc
popa
sub
insb
inc
clc
aaa
mov
xchg
mov
xor
push
fdivl
loop
insb
je
jno
aaa
push
in
or
mov
lods
mov
lods
aaa
and
add
push
aaa
mov
add
ret
and
loopne
outsb
fnstenv
aad
sub
mov
loope
jo
aaa
lret
push
in
inc
gs
jle
ret
aaa
push
outsb
aaa
inc
jo
shrl
test
jne
push
int3
icebp
inc
aaa
sub
dec
test
ret
push
aaa
sub
sbb
test
shll
xchg
push
push
fiadds
jo
lret
aaa
into
or
aam
pop
aaa
and
jne
push
aaa
cltd
push
aaa
mov
shll
adc
pop
mov
inc
dec
sub
ret
aaa
add
aaa
xchg
enter
loopne
aaa
in
inc
lds
lret
mov
bound
mov
mov
or
ja
push
cld
leave
cltd
pushf
es
loopne,pn
sub
sub
sbb
push
call
xchg
add
stc
push
and
insl
popa
fucom
ret
push
inc
mov
mov
sbb
pop
mov
and
cwtl
stos
or
aaa
insb
push
pushl
aaa
mov
push
aaa
into
loope
cmp
mov
lret
push
aaa
and
and
add
or
xchg
jle
mov
dec
cmpsl
pusha
and
or
mov
outsb
fld
loopne
push
aaa
or
or
sbb
aaa
scas
mov
add
mov
cmp
outsb
sbbb
or
pop
jno
aaa
xor
and
aaa
push
adc
shrb
sub
fld
dec
or
push
outsb
add
mov
push
jne
aaa
outsb
fld
sarl
insb
loope
cmp
aaa
add
push
aaa
ljmp
add
and
mov
lret
jmp
mov
gs
mov
js
test
xor
cli
pop
aaa
in
ds
incl
out
jmp
insb
mov
or
sbb
testb
lret
test
out
into
xchg
jle
mov
push
into
xorl
jno
aaa
dec
and
or
xor
or
or
adc
test
xchg
sub
jne
push
aaa
jns,pn
jecxz
es
cmpsb
push
jg
insb
shrl
xchg
sysret
add
inc
mov
loop
sub
mov
mov
adcb
mov
aaa
icebp
cmpsb
test
mov
mov
shl
xchg
sub
into
mov
xchg
loop
aas
push
ficomps
fdivl
or
sbb
mov
aaa
lret
push
pushf
sbb
je
xchg
int
pop
jno
push
aaa
dec
mov
aaa
or
scas
or
mov
xlat
add
mov
xlat
xlat
mov
flds
xor
and
aaa
loop
mov
out
sbbb
ss
aam
lret
aaa
fcoms
aaa
pop
outsb
fld
loop
inc
aaa
mov
orl
mov
add
aaa
insb
xor
mov
pushf
outsl
les
loopne
sub
repz
add
sub
mov
mov
jnp
aaa
fidivl
push
mov
push
fdivl
aas
add
lret
cmp
push
fdivl
push
mov
shll
mov
les
pop
push
pushf
xorb
ret
hlt
pop
pop
aam
aaa
movsl
test
arpl
mov
aaa
xchg
adc
xor
ret
or
aas
jg
in
xor
adc
adc
mov
shll
adc
add
pop
stos
sbb
aaa
sub
push
andl
pushf
aaa
flds
push
outsb
and
pop
lods
add
jno
aaa
sub
or
shlb
fs
inc
subl
aaa
test
test
xchg
add
ret
sub
dec
insb
popa
jo
aaa
cmp
push
in
push
mov
push
mov
lret
aaa
out
pop
mov
mov
sbb
loop
mov
lret
push
out
cltd
inc
aaa
or
fld
loope
aaa
neg
mov
cmp
dec
sbb
pop
aaa
sti
sub
sub
mov
sub
stc
or
or
neg
lock
fdivl
xchg
sub
push
push
shr
aaa
int3
dec
fnsave
aaa
push
sbb
push
pop
mov
sub
lret
aaa
dec
mov
aaa
mov
ljmp
mov
sbb
or
aaa
data16
aaa
fs
aaa
movsb
push
mov
mov
aaa
mov
inc
jmp
mov
pop
push
push
out
mov
jo
outsb
fnstenv
je
xor
sbbb
aaa
cmp
jne
push
aaa
movl
push
pop
hlt
mov
cmc
add
into
mov
loop
sub
aaa
fdivl
aaa
flds
mov
pop
outsb
aaa
mov
rcll
sub
jmp
jo
aaa
ljmp
sub
push
pop
cwtl
call
adc
aaa
daa
stos
test
add
or
ss
xor
push
mov
cli
clc
insb
popa
xor
test
push
mov
enter
mov
mov
mov
fisttpl
testb
push
es
mov
sbb
fdivl
mov
testl
sub
loop
dec
sbb
aaa
insb
test
inc
mov
aaa
mov
adc
aaa
fld
loope
mov
or
outsb
aaa
ret
adc
mov
mov
aaa
dec
sbbb
sub
push
into
xchg
fs
ret
jno
aaa
pop
clc
sub
or
shll
pop
inc
cmpb
cmp
testl
sub
aaa
xor
ja
and
push
es
mov
inc
and
outsb
fnstenv
dec
push
mov
aaa
add
push
loopne
sub
aaa
sub
fcoml
call
pop
jne
push
aaa
aaa
mov
xchg
sub
add
scas
cmp
push
push
js
aam
push
in
jno
mov
push
jo
das
ds
lret
aaa
or
sbb
xchg
adc
push
aaa
dec
fdivl
xchg
sub
or
insb
loope
mov
add
mov
ds
out
test
or
mov
outsb
and
pop
mov
pop
pop
out
pop
mov
or
shlb
pop
inc
or
and
mov
add
insb
aaa
loope
outsb
fld
inc
aaa
mov
add
pushf
je
cmpsl
scas
jmp
inc
cmpb
xor
mov
aaa
out
mov
popa
cld
aaa
push
stos
pop
mov
dec
aaa
push
pop
push
icebp
pop
jmp
mov
sbb
mov
aaa
jecxz
mov
aaa
push
jnp
in
aaa
mov
cmp
mov
add
xor
cmp
frstor
aaa
or
cwtl
loop
sub
adcb
mov
push
mov
ja
aaa
imul
fld
pop
fnsave
adcb
mov
ficompl
jo
mov
mov
sub
fnsave
popa
xor
aaa
sub
xchg
or
xor
mov
pushf
ljmp
xchg
mov
or
fdivl
flds
pop
roll
test
sbbb
jb
push
fdivl
test
mov
xlat
loope
cmpb
push
jle
test
add
adc
mov
das
out
cmpsl
add
je
scas
mov
add
aaa
mov
out
cmc
xchg
dec
aad
pop
adc
enter
ljmp
insb
sarl
roll
pushf
xor
inc
fdivl
or
pop
aaa
aas
lret
push
mov
daa
pusha
jg
jne
subl
loopne
pop
mov
lock
cmpl
jnp
mov
test
test
mov
xchg
sbb
aaa
out
outsb
fld
fs
repz
pop
mov
ret
mov
sbb
mov
mov
pop
pop
inc
xor
outsb
and
cmp
hlt
repz
fdivp
out
fsub
popa
mov
xchg
ret
faddl
mov
loope
aaa
pop
mov
cmp
mov
mov
xor
fwait
nop
lea
js
fdivl
les
adc
xchg
sub
mov
mov
pop
dec
sti
scas
mov
aad
aaa
push
or
fdivl
xchg
mov
insb
mov
mov
shll
cmpsl
in
mov
sbb
dec
or
mov
dec
mov
inc
in
or
mov
and
movsb
cmp
mov
mov
lret
ret
xchg
jns
inc
je
or
mov
stos
or
xchg
sub
loope
sub
add
lock
xorl
or
lret
push
out
mov
popa
adc
mov
and
xorl
mov
push
push
sub
jnp
xorl
mov
nop
xchg
dec
pop
lds
or
mov
mov
nop
rcll
mov
sub
addr16
sbb
push
loope
cli
adc
push
add
mov
push
pop
or
lret
push
mov
sti
xor
mov
mov
xchg
sub
stc
nop
xor
les
mov
pop
xor
mov
add
ret
adc
push
out
fcoms
and
mov
insb
loope
outsl
mov
test
add
sbbb
les
mov
imul
adc
lret
push
mov
add
inc
lds
push
in
adc
loopne
sub
push
or
out
dec
push
jle
lods
xor
push
mov
sub
or
adc
mov
invd
mov
sub
mov
mov
out
or
jo
pop
mov
and
sub
pop
mov
std
lcall
cwtl
adc
pop
or
mov
jmp
das
push
mov
pusha
xchg
push
pushl
xchg
sbb
shrb
xchg
sub
jecxz
iret
and
jnp
xchg
xchg
xchg
push
mov
lahf
push
call
or
cltd
pusha
mov
jge
sbb
adc
bound
pop
or
mov
mov
push
lods
insl
pop
push
push
rclb
mov
pop
or
adc
mov
test
xchg
or
lds
mov
add
xchg
sub
inc
andb
dec
adc
xchg
sub
in
scas
sub
dec
or
loope
adc
xlat
jmp
popf
mov
roll
fucom
pop
fsubl
pop
fiaddl
insb
loope
insb
loope
sub
or
mov
pop
xchg
stos
roll
loop
insb
mov
xor
mov
mov
pop
sbb
dec
xlat
or
jae
dec
outsb
rorl
fld
mov
mov
rcll
sahf
mov
pop
mov
xchg
hlt
shrb
inc
mov
popa
add
push
dec
aam
jo
pop
aaa
adc
and
call
push
mov
jno
rcll
mov
inc
dec
les
mov
shll
leave
mov
rorb
pop
mov
call
mov
aam
mov
mov
or
or
sub
mov
lret
push
in
push
mov
xchg
sub
push
pop
mov
cmc
inc
adc
gs
add
lret
push
mov
insb
loope
mov
push
aam
pop
sub
mov
std
mov
sub
and
sarl
or
push
or
push
mov
ret
mov
mov
add
mov
push
sub
js
mov
rclb
aad
pop
dec
push
lret
push
push
mov
lret
push
pushf
dec
mov
pusha
adcb
pop
sbbl
gs
sub
mov
sbbb
mov
mov
loope
mov
popa
and
xchg
and
adc
fld
pop
bound
adc
decl
jmp
mov
mov
shl
xchg
mov
pop
andl
mov
xchg
hlt
cmpsl
les
mov
xchg
sub
sbb
push
xchg
rcll
push
bound
xorb
mov
xchg
xchg
mov
movsl
andb
and
lds
push
xchg
mov
mov
cmpsl
adc
xchg
adc
xchg
pop
and
mov
or
push
mov
cmp
xchg
stc
cmpsb
testb
push
or
mov
rcrb
dec
fmull
push
xorb
push
add
dec
movsl
add
fsubrs
pop
mov
push
cwtl
fldl
shrb
orl
mov
popa
fwait
xchg
adc
push
sahf
ja
gs
pop
mov
xchg
insl
jmp
sub
xchg
pavgb
inc
les
flds
ret
jge
ret
xchg
sti
mov
bound
push
adc
adc
mov
mov
jecxz
les
lea
sbb
enter
insl
mov
cmp
lcall
xor
or
test
jb
in
adc
xchg
imul
pop
in
adc
pop
fadds
xor
test
into
xchg
add
dec
add
pop
and
push
lahf
push
or
ja
add
fld
or
inc
and
xor
xchg
sub
push
lret
push
outsb
and
push
adc
push
les
mov
xchg
mov
loope
push
fs
test
lea
sub
xor
inc
pop
sub
jmp
lods
or
stos
repz
jl
mov
push
test
xchg
xor
mov
lret
sub
xchg
repnz
push
or
xor
mov
jmp
mov
mov
xchg
sbb
jno
xchg
sub
fsts
lret
push
xchg
lds
lret
push
or
push
clc
inc
adc
mov
add
in
xor
shl
pop
add
xchg
sub
test
inc
pop
mov
xchg
cmp
gs
dec
lea
cmpsb
push
pop
push
push
cmovne
lock
inc
imul
jno
sub
xchg
xchg
pop
mov
adc
pop
mov
mov
mov
adc
out
fadds
xor
les
sbb
mov
xchg
lods
nop
mov
hlt
sbb
xchg
sub
push
pop
dec
xchg
lret
push
sub
xor
or
adc
lret
xchg
mov
arpl
aaa
adc
cwtl
sub
das
insb
loope
lds
mov
pop
mov
punpckldq
rorl
xchg
sub
gs
push
xchg
mov
loope
dec
xchg
xchg
sub
pop
adc
xchg
pop
xor
lds
roll
mov
fs
orb
xchg
cmp
fsts
pop
xchg
lds
or
mov
shll
orl
xchg
flds
mov
bound
sbb
adc
test
daa
mov
les
mov
and
cmp
enter
xchg
sub
or
sub
mov
inc
sub
xchg
aad
sub
lret
push
out
push
scas
xchg
flds
push
out
bound
and
adc
mov
xchg
add
adc
mov
dec
inc
hlt
addr16
add
or
adc
push
xchg
mov
xchg
sbb
xchg
pop
inc
inc
sub
xchg
insb
loope
and
jnp
mov
lods
cli
cli
gs
out
filds
insb
loope
xchg
popa
jnp
jnp
data16
push
xorl
xchg
flds
test
bound
add
insb
xchg
shlb
addb
xchg
sub
sub
push
mov
adcb
add
scas
and
loopne
push
add
mov
sbb
cltd
lcall
push
push
cmp
loope
bound
push
mov
or
sub
fld
cmp
sub
pop
test
and
mov
inc
xchg
xchg
sub
or
and
mov
push
dec
mov
mov
inc
adc
xchg
mov
xchg
mov
mov
mov
sbb
adc
push
xchg
xor
test
pop
xchg
add
sarl
enter
mov
ret
xchg
add
pop
cmp
adc
flds
lcall
imul
fsubl
test
sub
sub
inc
inc
sub
xor
xchg
fld
or
push
sub
push
test
and
add
mov
pop
mov
and
divps
mov
xchg
mov
xchg
jb
or
inc
ss
imul
cmp
call
add
je
mov
xchg
data16
lods
mov
rorl
in
aas
mov
dec
pop
mov
pusha
cmp
popa
add
push
mov
xor
adc
push
xchg
daa
rcll
pop
imul
xchg
sub
mov
sub
test
mov
xchg
push
lret
push
out
and
fstpl
loopne
les
sbb
sarb
sbb
pop
xchg
fbld
in
inc
sub
xchg
es
or
fisttpl
xchg
or
popa
xchg
xorb
xchg
mov
mov
adc
dec
inc
sub
xchg
fs
cli
rclb
jo
or
fwait
sub
dec
lds
jecxz
jb
mov
and
lret
push
mov
inc
insb
shll
popf
movsl
jge
mov
outsl
bound
xchg
cmp
xchg
insb
popa
or
es
jbe
mov
mov
mov
xchg
mov
les
ret
mov
and
mov
sbb
mov
in
ret
push
xchg
aas
mov
cmp
xchg
pushf
dec
and
or
lret
push
xchg
add
and
sbb
mov
in
xchg
dec
or
out
call
int
mov
or
ret
ret
pop
insl
mov
cmp
adc
fld
sbb
push
out
or
xor
clc
dec
adc
xchg
sarl
sub
xchg
add
sub
xchg
dec
and
xchg
sub
mov
loope
xchg
push
sbb
pop
xchg
fld
rcrl
test
or
lock
mov
jns
mov
xchg
jnp
push
mov
subl
xchg
push
hlt
mov
aas
adc
icebp
add
or
call
sub
insb
xchg
jge
mov
xchg
gs
dec
cmp
jp
lock
xchg
dec
jbe
xchg
sub
and
mov
xchg
pusha
jle
call
fdivrl
xchg
sub
cmp
mov
and
cmc
xchg
xchg
sub
and
mov
xchg
inc
rclb
inc
ret
scas
pop
clc
les
xchg
ja
test
add
push
adcb
test
push
push
mov
aam
faddl
pop
neg
and
mov
sbb
dec
cmp
not
jns
add
subb
or
cmpsl
ror
add
sbbb
pusha
jecxz
sahf
inc
ljmp
loope
adc
pop
inc
pop
out
push
nop
lret
nop
pop
les
in
or
sbb
push
scas
sub
and
push
test
jl
sahf
push
xor
in
inc
pop
cmp
loopne
jle
mov
imul
pushl
mov
pop
neg
sub
inc
mul
fisttps
test
insl
loope
aad
add
ret
push
testl
and
or
ja
mov
xorb
mov
fwait
xor
movsb
fcmovb
or
push
or
add
mov
ljmp
fiaddl
cmpb
add
or
inc
outsb
das
add
imul
fidivs
cmp
loope
imull
shll
inc
pop
sbb
addb
inc
idiv
pusha
inc
dec
jae
inc
negl
and
adc
xor
sub
sub
or
negl
fnstsw
outsl
cmp
test
xorl
mov
faddl
mov
negl
rclb
in
xchg
negl
mov
adc
dec
loope
jg
loopne
testb
mov
pop
arpl
adc
into
in
test
outsl
mov
pop
movsb
xor
mov
push
adc
ljmp
je
std
sub
mov
idivl
add
push
mov
ja
adc
inc
pop
ficomps
dec
in
xchg
push
sub
into
int3
loope
insl
je
or
inc
jne
pop
sub
xchg
push
rclb
inc
neg
inc
pop
xor
ss
sub
fisubrs
inc
add
divl
add
insb
icebp
or
xor
into
hlt
or
addb
or
arpl
sub
rclb
int3
cwtl
out
mov
ret
test
add
mov
inc
idivl
loope
or
push
dec
fcoml
imull
xchg
sub
test
and
ret
shl
mov
mov
nop
dec
aaa
push
inc
pop
imull
cmpsb
or
testl
divl
sbb
add
xchg
and
push
mov
ficomps
inc
inc
pop
mull
mov
push
mov
xorb
push
out
cwtl
cwtl
imull
and
sbb
testl
or
inc
neg
cmp
sub
mulb
add
andb
add
lock
sbb
fsubrl
mov
ret
mov
mov
mull
fld
imul
or
push
pop
mov
push
imull
pop
jo
inc
pop
idivl
add
mov
and
testl
pop
jmp
or
pusha
and
pop
pop
jmp
jle
inc
idivl
insl
loope
rcll
or
adc
fwait
test
neg
add
nop
aas
push
or
add
std
pop
mov
testl
mull
mov
push
scas
mov
push
sahf
icebp
dec
or
in
adc
ds
inc
adc
testl
testl
dec
idivl
pop
mov
add
or
not
push
outsb
or
pop
insl
rcrl
div
inc
cmp
add
imul
cmp
adc
push
imull
inc
lods
mov
dec
or
fcmovb
add
notl
pop
mov
inc
pusha
pop
cmc
or
xor
push
and
insl
loope
dec
mov
push
out
adc
ds
adc
jge
add
mov
or
fcmovb
adc
add
cmpb
sbb
sub
sbb
push
scas
xorb
ret
popa
ror
adc
sub
adc
inc
pop
add
inc
mull
lcall
add
imull
add
cmpl
sub
pop
xchg
cld
add
cmc
mov
add
idivl
add
xor
fiaddl
pop
xchg
mov
xchg
xchg
out
aam
je
adc
negl
add
ret
in
mov
sub
pop
test
adc
jnp
mov
cld
push
loopne
add
push
pop
pop
repnz
dec
js
int3
mov
pop
repnz
or
mov
pushf
cmp
xlat
scas
testl
push
push
loopne
xchg
cmp
movsb
loope
shl
and
aas
subb
sub
in
mov
push
shrb
insl
popa
leave
jae
fsubrl
les
dec
shrl
imull
in
das
push
xchg
les
cmpsb
xor
cli
jecxz
rclb
idivl
sub
sub
push
js
adc
add
push
out
jg
cmp
notl
inc
jo
add
inc
and
cs
inc
inc
pop
negl
ficoms
imul
rclb
idiv
mov
or
out
ja
rclb
not
and
or
test
ret
imul
lret
in
dec
sahf
lock
xorb
lock
idivl
xorb
xorb
xorb
xorb
xorb
bnd
scas
testl
mov
imul
and
fmuls
add
ret
movb
insl
loope
idivl
rclb
pop
fdiv
adcl
adc
adc
test
xorb
shrl
mov
pushf
adc
lds
pop
notl
and
adc
sub
add
mov
cmp
mov
ret
testl
adc
shl
into
mov
dec
test
adc
fiaddl
mov
add
or
neg
or
jb
stos
inc
add
idivl
punpckhbw
test
fstpt
sbb
add
divl
aaa
push
fcmovb
pop
add
es
scas
add
pop
jg
dec
pushf
scas
xor
incb
fiaddl
mov
sub
lock
fiaddl
xchg
mov
inc
pop
sbb
incl
pop
jbe
je
mov
into
addb
mov
cmp
add
mov
cmp
notl
ss
add
sub
cmpb
fidivrs
out
jle
pop
add
notl
xorb
pushf
testl
pop
sub
and
or
enter
std
sub
sbb
test
and
js
push
inc
leave
orl
sbb
or
not
push
into
adc
mull
dec
cs
jmp
mov
jne
clc
testb
js
shlb
pushf
sbb
mov
test
inc
pop
not
push
adc
sbb
add
movsb
dec
push
mov
mov
int3
sbb
push
adcl
testl
pop
mull
push
sub
fldz
and
and
add
sbb
lods
ret
pop
testl
lock
push
sahf
sub
cmc
shlb
stc
aam
cmp
in
jnp
mov
test
inc
xor
xchg
or
lret
imul
add
sbbb
arpl
lret
dec
aaa
sub
inc
addb
adc
lahf
push
add
ret
sub
mov
cli
mov
dec
fmull
fisubrs
test
mov
mov
cmp
testl
ret
or
iret
ja
shll
inc
add
movsl
push
inc
loop
xor
sbb
lock
lds
rclb
into
jecxz
fistps
shrl
testl
stc
mov
pusha
or
push
enter
stc
es
mov
ds
sbb
push
aaa
add
insl
notl
push
into
in
push
je
push
push
adc
testl
inc
or
fwait
rorl
testl
and
and
loope
push
xor
aad
push
inc
add
mov
sarb
pusha
sub
push
or
or
sub
pop
sub
sbb
push
xlat
pop
mov
negl
xchg
or
cmp
sbb
xchg
add
negl
mov
push
fiaddl
mov
testl
cmp
mov
daa
mov
repnz
inc
cs
xchg
or
shll
or
stos
das
mov
jnp
pop
push
inc
pop
testl
sbb
lret
mov
cmpsl
add
ret
push
mov
inc
push
xor
mov
outsl
movntq
insl
popa
jb
cmp
push
mov
divl
push
sub
aaa
int
outsb
add
mov
loope
jae
mull
cmp
pusha
pop
sub
shrl
shl
add
loopne
xorb
mov
mov
xchg
adc
arpl
idiv
inc
pusha
stc
fcomp
jmp
or
inc
cltd
fbstp
pusha
mov
xchg
das
stos
ret
mov
or
into
pop
add
cmpb
divl
add
addl
mov
and
lods
inc
push
fs
ret
sbb
addr16
negb
jl
int3
jae
mov
add
and
mov
mov
push
xor
xorb
mov
js
jo
push
sub
sbb
pop
sbb
jge
push
mov
out
out
out
cmp
dec
push
push
arpl
in
mov
pop
popf
push
stos
nop
push
push
aad
sahf
out
push
loop
or
das
push
mov
out
mov
dec
push
pop
inc
mov
pop
nop
outsb
and
add
divl
test
push
nop
pop
add
fcmovb
dec
mov
cmp
cmpsb
add
sub
ficoml
pop
testl
enter
add
cltd
push
cmpsb
mov
cld
movsl
jne
xorb
mov
add
test
rorb
push
imull
mov
add
mov
testl
inc
sbb
adc
push
outsb
xchg
push
testl
and
lods
push
test
cmp
add
or
mov
rcll
xor
push
adc
negl
inc
push
sub
aas
clc
mov
mov
mov
lcall
push
pop
adc
notl
cmpsb
notl
mov
xor
lock
mov
shl
daa
adc
jo
inc
divl
ds
lods
addl
cmp
imul
cs
xlat
or
mov
jae
or
add
repz
pop
jns
pop
mov
inc
sub
popf
mov
jo
outsb
add
mov
ds
mov
mov
aas
xor
mov
mov
push
mull
loope
not
push
int3
mov
mov
aam
imull
xor
or
or
cmp
sub
shll
and
lods
mov
in
add
pop
adc
movsb
mov
jns
cmpsb
dec
into
mov
mov
cmp
push
push
mov
popf
or
adc
testl
testl
cmpsl
or
pop
aas
insl
movsl
cmp
push
test
inc
add
rcrl
add
idivl
sub
cmpsl
xorb
pop
fcmovb
imul
cmp
inc
mov
rolb
ret
add
push
popa
mul
xor
adc
and
push
nop
xchg
mov
imul
add
add
inc
negl
sub
fmull
or
test
jns
sub
sarl
notl
andl
mov
xor
cmpsb
ret
loope
sub
cwtl
js
or
sbb
inc
xor
add
xor
test
xor
addb
sub
inc
cmp
cmp
or
push
loope
fmuls
add
neg
imull
div
mov
test
les
add
negl
mov
inc
lds
neg
ret
mov
add
add
fdivl
add
mov
sub
iret
imul
flds
fsub
test
pushf
cmp
lret
dec
add
idiv
push
jg
sub
add
in
push
enter
pop
push
xchg
pushf
cmp
jnp
cltd
push
pushf
mov
test
mov
xor
testl
loop
divl
arpl
pop
add
xor
xchg
or
testl
xor
shlb
pusha
lea
mov
mov
rclb
push
cmpsl
inc
dec
mov
aaa
adc
xor
addl
ret
add
xor
push
ss
repnz
mov
popf
push
into
in
gs
push
nopl
mul
ss
add
xorb
pop
mov
test
test
xchg
testl
rclb
lret
inc
call
enter
mov
pop
sub
and
mov
mov
add
mov
xorb
push
add
xchg
pop
sbb
xor
rol
inc
inc
notl
add
ret
cmp
sub
idivb
or
cmp
xor
mov
in
loopne
xor
mov
push
mov
test
testl
test
add
ret
or
pop
enter
loope
cmp
je
sub
mov
not
push
add
mov
adc
mov
or
inc
sbb
xchg
mov
push
out
add
sbbb
or
pop
test
sub
mov
xor
aam
add
xor
push
testl
adc
sarb
arpl
mov
or
test
or
insl
divl
test
sub
insl
rcrl
push
cltd
and
push
add
test
or
inc
pushf
dec
push
jns
sbb
xor
das
outsb
dec
dec
cmp
adc
push
imull
xor
popf
mov
inc
call
aas
loopne
inc
pop
cmp
inc
pop
cmp
pusha
and
testl
dec
test
jle
push
inc
sub
cs
popa
test
add
aam
data16
xchg
push
lds
mov
out
jl
clc
push
dec
sahf
add
or
push
inc
pop
js
notl
rclb
in
dec
cmp
insl
popa
xor
pop
or
add
or
rclb
divl
or
adc
hlt
adc
jns
adc
insl
loope
testl
mov
mov
movsl
push
aas
in
aam
addl
xor
xor
lahf
dec
aad
mov
pop
clc
mov
das
cmp
insl
aaa
jns
aam
pop
aaa
sub
or
test
fiaddl
adc
mov
aaa
add
out
push
fiaddl
xor
push
aaa
inc
adc
add
cmp
add
push
push
sub
pop
and
rcrb
mov
daa
clc
mov
das
or
or
push
push
dec
fwait
js
stc
xor
pusha
clc
or
push
push
add
pop
repz
push
fiaddl
subl
pop
clc
popa
jo
popa
pop
jb
in
add
insl
aaa
sub
push
inc
adc
insl
loope
aaa
xchg
pop
or
add
aas
test
or
movups
outsb
insl
shll
insl
rcrl
aaa
mov
push
add
and
add
adc
and
xchg
pop
ret
bound
push
fiaddl
outsb
js
aaa
fcmovb
jecxz
jo
push
call
push
push
aaa
cmpsl
xchg
xchg
mov
inc
pop
cmp
out
pop
pop
add
ret
aaa
rorb
mov
rclb
push
pushf
aaa
push
xor
mov
add
js
mov
mov
xor
fiaddl
pop
sbb
cwtl
mov
adc
insl
shll
mov
aaa
push
fcmovb
popf
cld
rorb
dec
sub
and
aaa
mov
add
pop
les
push
and
add
xor
jo
fiaddl
clc
xchg
lds
aaa
inc
xchg
inc
call
xor
sub
mov
aaa
or
mull
or
sbb
sbb
mov
mov
or
xchg
or
mov
ret
inc
aaa
xchg
pop
fidivl
test
mov
sbb
pop
xchg
aaa
inc
pop
xor
or
jle
and
or
push
movsl
xor
xorl
add
outsb
aaa
jbe
aaa
mov
xchg
inc
mov
jbe
fidivs
call
inc
pop
aaa
inc
sub
or
clc
inc
pop
fadds
mov
inc
aaa
or
push
aaa
clc
adc
jne
sbb
gs
shrl
adc
jb
imul
pop
es
xor
push
aaa
push
add
jns
sbb
fisttpll
add
pop
mov
cmp
mov
add
pop
sub
pop
rcl
jo
and
add
and
xor
dec
mov
dec
push
enter
push
mov
add
ret
jmp
push
adc
fbld
cltd
sub
push
popw
pop
into
adcb
mov
incl
fwait
sub
fs
enter
pop
and
sbb
add
and
xorl
sbb
shrb
mov
aaa
sub
push
sbb
mov
aaa
or
push
push
xchg
mov
xor
sub
rclb
aaa
in
rolb
jb
push
xchg
movsb
aad
xor
aaa
and
pop
mov
shll
nop
insl
adc
call
test
or
fidivl
inc
scas
rclb
int3
lret
jb
push
pop
xor
cmp
fists
aaa
shll
mov
cvtps2pi
sub
test
mov
sub
call
mov
aaa
mov
or
test
jl
incb
and
pop
aam
pop
sbb
sbb
pop
jo
aaa
and
sub
daa
clc
mov
mov
sub
ljmp
and
push
cmc
orb
and
mov
sub
mov
sub
bound
test
aas
xor
or
or
aaa
sbb
aaa
enter
adc
sub
mov
fwait
push
loope
or
xor
add
leave
clc
push
out
mov
push
cmp
aaa
add
fcmovb
mov
roll
mov
mov
ja
inc
aaa
sbb
ja
fdivs
sti
inc
pop
mov
leave
pop
cmp
or
inc
aaa
or
mov
sbb
inc
adc
insl
inc
scas
aaa
push
sub
pop
fiaddl
mov
aaa
add
or
or
lods
out
sbb
aaa
cmp
fmuls
pop
xorl
mov
fwait
sbb
mov
mov
push
ret
sub
aas
js
and
and
and
mov
fcmovb
sub
adc
add
sub
cwtl
pop
insb
jmp
loopne
inc
pop
divl
xor
push
xchg
mov
xor
inc
popa
and
inc
add
sbb
mov
sbb
rclb
out
ljmp
adc
mov
add
fadds
or
push
mov
mov
ret
jge
jne
or
add
mov
divl
sbb
addb
push
testl
neg
adcb
cwtl
pop
inc
je
add
dec
data16
dec
push
add
xor
or
sub
add
ret
roll
notl
test
push
or
mov
mov
adc
pop
mull
testl
imull
push
inc
notl
add
repnz
stos
mov
mov
or
xor
divl
jp
mov
inc
inc
pop
cmp
divl
mov
scas
xorb
add
push
mull
mov
inc
sub
in
aaa
addl
neg
adc
imull
sub
and
add
negl
fstl
imull
push
mull
and
test
or
mov
or
inc
pop
mull
mov
negl
sbb
inc
add
inc
imull
jle
inc
add
dec
imull
mov
notl
push
fisubrs
rclb
les
adc
or
outsl
xchg
notl
rclb
ficomps
div
inc
pop
push
or
sahf
pop
inc
notl
push
adc
not
pop
mov
inc
add
addb
add
add
mull
xor
iret
test
test
testl
mov
sbb
pop
add
test
out
add
and
negl
sub
add
add
ret
mov
inc
and
mov
dec
push
aam
xorb
notl
pop
mov
adcb
int3
sbb
inc
sub
idivl
inc
pop
idivl
add
test
push
inc
lds
push
add
ret
mov
addr16
orb
add
and
pushf
or
testl
jo
jg
ss
frstor
add
and
adc
push
idiv
adc
testl
testl
push
mov
sbb
lods
add
ret
movsb
adc
rclb
ss
pop
xchg
push
pop
testl
mov
imull
sbb
push
add
test
fldcw
mov
jo
xor
popf
push
adc
jnp
mov
jmp
lahf
or
cmpsl
dec
divl
insb
adc
push
adc
pushf
or
loope
adc
mov
sub
sbb
or
notl
pop
mov
mov
cmp
and
push
shl
cmpsl
mov
xorb
fidivrs
pop
push
xchg
sahf
testl
test
or
mov
nop
jle
adc
or
pop
add
not
push
into
nop
ljmp
cld
bound
shl
or
or
insl
loope
adc
notl
loopne
inc
mov
bound
ljmp
adc
mov
sbb
dec
sub
notl
pop
js
divl
insl
and
mov
xor
jge
add
or
mov
loopne
fiaddl
cmpsl
or
sub
rolb
testl
not
stc
add
incl
lods
pop
mov
add
jle,pn
mov
ds
in
xchg
mov
stc
sbb
sahf
mov
add
add
xchg
push
push
cmp
push
fiaddl
or
adc
adc
push
fcompl
dec
pop
mov
add
adc
push
push
mov
adc
fwait
sub
jp
mov
imul
test
not
sti
add
adc
push
xchg
mov
jl
or
cld
inc
xor
mov
mov
sub
push
push
add
scas
nop
mov
mov
popa
lock
jp
fiaddl
inc
stos
sub
testl
xorb
push
pusha
test
fmuls
testl
insb
loope
or
xchg
xor
add
jg
mov
push
pop
divl
or
fcmovb
push
xorb
sub
adcb
add
fs
inc
inc
add
pop
mov
divl
push
add
fcmovb
mov
sbb
push
out
add
and
fiaddl
cltd
cmpsb
mov
imul
popa
sub
sbb
data16
add
pop
rcpps
mov
or
push
xor
rolb
add
fisttps
or
cmp
add
dec
push
imull
and
or
jns
lret
in
inc
aaa
inc
jb
cld
add
xchg
loopne
cmp
or
les
jo
add
out
mov
jnp
shl
xchg
jmp
std
mov
push
pop
jp
or
pop
outsb
push
addr16
push
out
ficompl
js
sub
mov
insb
inc
push
push
xchg
push
es
jns
mov
push
lock
mov
add
divl
inc
pop
adc
add
xorb
mov
fs
call
add
or
inc
dec
ret
cmp
add
subb
push
ret
push
mul
inc
pop
jo
mov
pop
movb
pop
add
pop
stc
mov
or
or
adc
push
scas
jl
push
sbb
sbb
mov
and
rclb
int3
xchg
and
andb
or
adc
fdiv
xor
pop
test
xorb
pop
mov
jmp
inc
imull
cs
or
or
fcom
jmp
add
loopne
or
dec
dec
xor
or
adc
push
mov
fdivrl
push
cmpb
out
push
inc
pop
xor
fmull
or
insl
mull
or
test
xchg
sub
xor
mov
mov
mov
pop
inc
pop
dec
les
testl
testl
mov
xorb
add
fcoml
pop
divl
in
and
mov
mov
jb
outsb
add
mull
shl
adc
lcall
sbb
xor
dec
inc
inc
divl
inc
add
adcb
mov
cmpsb
and
insl
and
insl
negl
ret
addr16
push
inc
negl
pusha
xchg
movsb
test
and
push
inc
pop
mov
into
in
data16
mov
xor
add
test
mul
inc
sbb
add
cmp
push
and
adc
inc
pop
and
or
sbb
scas
add
leave
push
testl
jb
sbb
sub
int3
pop
imull
test
cld
add
or
and
mov
cmpl
mov
cmp
mov
pop
mov
dec
sarb
inc
idivl
negl
les
mov
or
div
xor
add
sbb
pop
xor
jg
rorb
pop
push
inc
inc
pop
xor
mov
out
add
divl
inc
pop
imull
sub
xorb
mov
mov
mov
test
insl
popa
je
test
and
adc
xor
adc
cs
pop
adc
jb
jnp
inc
testl
mov
rcrl
xor
inc
or
add
xor
inc
or
or
push
scas
sub
mov
fcoml
and
xorb
or
aaa
cwtl
mov
or
jo
adc
mov
or
add
test
mov
sub
lret
fcmovb
loopne
testl
test
sub
sub
or
push
mov
imull
addb
sbbb
or
inc
inc
pop
testl
sub
or
push
les
out
or
negl
shl
add
add
inc
or
sbb
fwait
or
mull
and
add
sub
pusha
pop
popa
mov
and
fcmovb
xor
adcb
es
add
dec
add
add
sub
or
xorb
xchg
scas
xor
outsb
push
mov
mov
mov
adc
xor
mull
or
xorb
adc
pop
add
mov
push
mov
imull
adc
add
test
mov
in
pusha
dec
add
add
dec
xor
sbb
into
mov
add
pop
adc
push
xorb
test
pushf
testl
imull
cwtl
dec
adc
push
push
cwtl
das
push
jo
inc
inc
test
mov
lods
addb
xchg
inc
cwtl
test
xlat
call
divl
push
loope
xor
int3
adc
pop
idivl
or
in
je
or
adc
bound
add
ljmp
imull
rol
adc
mov
add
notl
xorb
lea
mov
imull
out
rclb
inc
add
mov
fiaddl
andb
rclb
notl
rclb
in
push
out
mov
adc
pop
add
imul
add
divl
js
xorb
pop
testl
sbb
xchg
dec
push
inc
testl
notl
mov
add
shl
jno
add
add
shll
testl
pop
adc
pop
push
fiaddl
adc
cmpb
mov
mov
notl
dec
and
mov
mov
mov
sub
pop
cmp
mov
notl
pop
mov
cmp
and
imull
sub
or
or
bound
sti
scas
jb
fisttpll
addb
inc
add
testl
neg
sub
mov
test
notl
pop
jo
push
inc
pop
test
or
nop
pop
addb
dec
cmp
pusha
pusha
loop
orb
mov
mull
popa
push
jecxz
add
xor
add
ret
fdivp
iret
jbe
and
shlb
inc
pop
cmp
add
fs
testl
mov
mov
adc
add
add
add
insl
shll
mov
not
add
sbbb
or
notl
adc
in
add
pusha
imul
mov
in
mov
xor
imul
int
test
mov
divl
push
cmpb
jge
jo
adc
lock
lods
mov
data16
pop
add
test
testl
sub
sbb
or
or
push
rclb
pop
xchg
neg
push
add
add
jo
or
sub
mov
rol
mov
into
push
adc
and
testl
negl
sbb
pop
inc
inc
inc
divl
pop
mov
xorb
inc
test
inc
push
inc
mul
sub
inc
add
inc
sub
aas
lock
fcmovb
cmp
inc
mov
rcl
push
lret
push
rclb
ljmp
lcall
or
push
divl
or
and
ret
and
notl
sub
cmp
mov
mov
mov
addb
sahf
mull
or
sub
and
or
ret
lock
mov
add
imull
fcomps
cmpsb
or
add
test
jmp
mov
fsubs
xor
pop
pop
inc
neg
ret
or
push
add
xor
idivl
mov
push
and
or
decl
adc
cmp
aaa
inc
divl
add
or
divl
rolb
fcmovb
mull
rclb
mov
dec
mov
loopne
inc
mov
adc
or
mov
test
divl
sbb
add
mov
jl
and
nop
mov
or
ljmp
mov
mov
stos
inc
mov
inc
inc
add
sub
push
movl
add
add
mov
divl
adc
jbe
rclb
xchg
notl
and
xorb
and
lock
testl
addl
into
clc
testl
testl
dec
imull
movntps
mov
ja
mov
mull
imull
testl
add
imul
and
add
test
mov
pop
mov
mov
lcall
jl
sub
pusha
jecxz
out
sub
adc
popa
inc
mov
test
add
cs
inc
add
movb
pop
pop
adc
divl
dec
mov
mov
xlat
pop
pop
mov
add
jo
dec
movl
scas
mov
pop
push
pushf
xchg
pop
rcrb
jno
push
pop
push
cs
test
add
adc
xchg
xlat
sbb
mov
mov
adc
jbe
test
sub
jno
push
xlat
fcoml
mov
dec
aas
lock
mov
xlat
pusha
and
xlat
mov
xlat
rorl
add
outsb
lret
sbbb
jge
xlat
xchg
add
pop
sbb
xlat
es
mov
popa
or
xlat
mov
faddl
jle
xor
je
push
xlat
and
imul
mov
fstl
mov
xlat
and
rorl
lahf
or
inc
mov
imul
loop
sub
into
outsb
lret
adcb
add
dec
les
xlat
sub
sub
mov
and
ret
xlat
mov
sub
mov
out
mov
xlat
pop
cmpsb
or
pop
push
xlat
mov
cmp
pop
push
in
inc
mov
push
jne
or
xlat
pop
adc
xchg
test
ljmp
lret
ret
jl
sub
jbe
fsubrs
lods
aad
loop
xlat
lock
xor
inc
jo
mov
movsl
push
mov
xlat
popa
inc
jecxz
xchg
push
cmpsl
lcall
stos
sbb
push
lds
cmpl
mov
add
push
addb
pusha
xchg
push
sub
mov
fsubrp
fstl
mov
sub
push
lret
mov
add
add
out
add
mov
pop
push
adc
push
push
ljmp
push
enter
push
adc
add
push
push
pop
mov
dec
cmp
movsl
push
add
inc
add
test
jae
lods
pop
cli
mov
pop
xor
mov
adcb
pop
adc
jl
rolb
mov
sbbb
add
mov
pop
dec
jle
mov
movsl
fbstp
fwait
add
jg
lcall
fnstenv
les
stc
pop
or
leave
inc
insb
pop
mov
add
add
enter
pop
ja
rol
or
mov
in
adc
lock
fidivl
rol
sbb
or
ja
sbb
sbb
adc
xor
and
out
lahf
add
add
repnz
xor
add
ja
sub
mov
add
ja
pop
inc
add
mov
or
clc
or
ja
out
or
sbb
clc
mov
mov
ja
add
ja
and
hlt
das
adc
inc
add
adcb
or
sub
adcb
mov
test
aaa
dec
inc
daa
icebp
loop
add
inc
add
divb
adcb
in
lods
es
or
xor
adcb
ja
add
pop
cmpsb
push
adc
adc
loopne
pop
adc
adc
mulb
sub
sub
fcompl
add
and
sub
mov
ja
mov
pop
pop
outsb
mov
inc
scas
fmuls
pop
mov
and
ja
add
pop
int3
arpl
add
push
and
mov
push
nop
popa
push
and
sbb
push
cmp
and
out
cmp
sub
mov
pop
xor
call
adcl
loop
push
out
loop
mov
add
jb
fwait
decb
xor
push
ja
popf
dec
inc
adc
cmp
ja
sub
sub
mov
pop
or
ja
fsubr
lcall
fs
mov
adc
xlat
add
out
mov
jo
adcl
mov
divb
rcrb
mov
pop
rolb
dec
imul
aad
mov
add
add
or
and
sub
dec
mov
add
add
shll
and
cmp
shrl
inc
mov
sbb
ret
test
mov
add
ja
inc
ja
adcb
std
adc
or
ja
mov
jle
rol
pop
add
mov
add
inc
add
xorb
or
mov
push
sub
push
cwtl
dec
repz
lea
int3
cmc
or
add
ja
add
repz
add
ja
cmp
push
add
hlt
cmpb
inc
cli
add
shlb
xchg
mov
push
mov
subl
push
ja
adc
add
adc
sub
or
test
outsb
sub
ja
mov
mov
inc
ja
add
or
mov
add
mov
in
add
mov
adc
ja
xchg
add
mov
and
rol
popa
mov
dec
xlat
jmp
ljmp
pushf
in
ja
insl
pop
jecxz
mov
lods
ja
sub
xor
test
stc
sub
push
loopne
icebp
push
add
ret
cmpsl
ss
pop
imul
push
mov
add
add
nop
ja
cmp
test
ja
push
adcl
adc
dec
stos
add
rol
lcall
jg
push
dec
sbb
rep
pop
and
shlb
lahf
dec
call
dec
add
es
add
add
andb
addb
push
or
iret
imul
decl
leave
push
enter
xchg
push
add
imul
push
out
mov
jmp
adc
push
inc
add
ja
push
pop
adc
push
ja
pop
dec
push
outsl
psraw
add
fsubr
add
push
or
adcb
insb
sub
sub
jle
ret
int3
cmp
add
push
inc
xor
and
int
push
xchg
push
addb
sub
or
test
add
or
add
cltd
add
rolb
nop
sub
ja
test
add
push
test
add
push
ret
mov
xor
pop
add
jmp
scas
adc
arpl
imul
loope
dec
fisttps
sbb
cmpsb
add
aam
test
into
add
jo
fists
cmp
scas
stos
filds
test
movsb
add
xchg
push
inc
and
rclb
add
add
les
jne
jae
inc
push
or
push
xchg
inc
adcl
push
out
sub
je
adcb
adcb
pusha
dec
xor
inc
pop
xor
sti
shll
out
xor
add
jl
jns
adc
imul
sbb
or
sbbl
sub
nop
mov
add
mov
ljmp
mov
test
test
dec
or
mov
ljmp
or
in
xchg
pop
pop
std
cwtl
jb
sub
dec
pop
push
adc
jmp
lcall
cmp
push
sub
call
or
cmp
es
mov
pop
call
cmpb
or
or
adc
cmp
adc
pop
or
inc
inc
scas
add
mov
pushf
or
into
jmp
fsubl
call
pop
cmpl
call
sti
or
cwtl
mov
push
jmp
push
jne
in
into
in
adc
xchg
inc
xchg
aaa
es
dec
pop
push
mov
imul
je
mov
add
lock
clc
push
sub
mov
jl
ret
insl
roll
aaa
and
adc
sbb
or
cli
inc
adc
insl
enter
fcompl
push
inc
insl
lock
or
out
and
sbb
aam
ret
insl
and
and
div
xor
pop
xor
xchg
and
testl
pop
loopne
mov
mov
mov
lods
and
and
insl
and
or
xchg
mov
adc
enter
inc
enter
insl
test
scas
mov
and
push
sub
add
jne
xor
test
fs
insb
fs
andl
add
insl
mov
in
mov
push
inc
and
inc
enter
push
insl
nop
test
arpl
test
push
sub
or
insl
mov
sub
jne
mov
adc
xchg
or
add
popf
and
jbe
std
jns
or
std
subb
aam
loope
shl
iret
push
adc
push
push
adc
ret
shr
xor
inc
nop
test
add
jne
enter
ret
cltd
leave
push
nop
dec
dec
and
add
jl
or
mov
enter
das
orb
sbb
dec
vmwrite
or
test
wbinvd
mov
pop
adc
inc
push
out
mov
es
mov
sbb
roll
sbb
and
add
pop
and
add
out
in
jo
or
push
dec
subb
or
push
fs
fwait
loope
fwait
and
pop
push
push
adc
pop
je
push
mov
fs
cmp
lret
sub
cmp
push
or
pop
sbb
add
rdtsc
mov
int
pop
pusha
jo
in
fs
jmp
add
mov
mov
cmpsb
loope
xor
mov
verr
enter
add
push
arpl
and
or
xor
xor
inc
push
sysenter
push
dec
nop
test
add
insl
sub
daa
xor
push
or
cvttps2pi
sub
pop
ret
orb
mov
mov
enter
orb
sete
or
ds
leave
repnz
push
pop
xor
pop
mov
jg
cmp
xor
scas
aad
dec
add
addr16
sbb
mov
mov
call
jnp
xchg
jb
adc
vprotq
and
je
cmp
add
mov
shlb
adc
add
popa
orb
sbb
push
enter
clc
orb
or
add
daa
les
loopne
and
mov
add
in
or
sbb
es
lret
pop
and
dec
jmp
mov
out
pop
loope
adc
test
pop
or
or
fs
xchg
les
pop
andb
or
pusha
cs
ficomps
fstps
dec
or
mov
add
xor
or
xor
fstps
mov
fmull
pop
aad
sbb
or
cmp
adc
dec
dec
sbb
xor
and
fstps
and
xchg
mov
bound
mov
js
jle
popa
cmp
sbb
xor
pop
pusha
pop
sub
add
or
sub
cmp
and
cmp
add
lcall
and
pop
data16
repz
aas
loopne
or
sbb
mov
add
scas
mov
cmp
bndldx
scas
mov
loope
or
fidivs
scas
or
sub
lods
pop
mov
pop
and
call
popa
jecxz
lret
test
mov
xchg
pop
es
push
sysret
pop
and
add
rcrb
sbb
out
or
pop
jno
add
data16
cwtl
imul
testb
jbe
mov
and
je
mov
adc
or
push
rdmsr
push
cmp
ja
repz
lock
adc
jmp
inc
push
and
pop
pop
push
jns
test
adc
lret
dec
jl
jno
rcrb
push
cmpsl
fnsave
dec
sub
adc
in
fisttpll
sub
ja
dec
xor
in
xor
sub
aaa
xchg
xor
andl
push
es
or
pop
aaa
andl
aaa
hlt
xor
and
lea
sbb
aaa
pop
push
xor
mov
pop
call
inc
push
aaa
xchg
xchg
outsb
mov
mov
push
js
xor
adc
bound
push
adc
and
adc
cmp
push
inc
dec
ret
push
aaa
js
sub
push
mov
lock
imul
pop
sub
aaa
add
sub
aaa
insb
je
pop
in
dec
jmp
mov
dec
pusha
das
push
jb
cmp
mov
shlb
aaa
cs
cmp
mov
xor
out
call
inc
rcrl
jae
aaa
inc
push
mov
mov
loopne,pn
xor
aaa
mov
jmp
andl
ss
adc
sub
inc
loope
xor
aam
inc
add
stos
mov
jmp
sbb
or
aaa
add
sbb
mov
in
mov
popa
pusha
aaa
loopne
jmp
andl
aaa
hlt
sbb
or
aaa
loope
jno
xor
mov
ret
inc
aaa
xor
adc
aaa
inc
push
js
xor
fnsave
inc
xchg
pop
jmp
mov
aaa
out
in
push
sub
add
xor
mov
mov
loop
push
mov
aaa
mov
or
mov
ljmp
sbb
push
xor
sbb
or
mov
es
popa
aaa
or
fdivl
or
aaa
test
jmp
inc
sbb
sub
pop
sub
push
cmp
out
pop
ss
fwait
push
aaa
loopne
mov
or
and
leave
out
adc
adc
cmpsl
mov
aaa
ljmp
aaa
jp
adc
mov
addb
push
cmp
stos
aam
sub
test
pop
aam
or
andl
imul
aaa
jmp
pusha
das
push
movsb
mov
xchg
mov
adc
aaa
pusha
pusha
stos
push
xchg
ljmp
mov
or
sub
push
pop
or
xor
jmp
adc
arpl
inc
aaa
sbb
or
sub
jbe
jne
aaa
push
mov
popf
cwtl
sbb
sbb
or
jo
aaa
push
pop
cmp
pop
pusha
mov
sub
sub
out
in
mov
dec
add
sbb
pop
add
pop
aaa
inc
add
and
mov
xor
sbb
aaa
popa
xor
pop
les
rcll
mov
xlat
mov
lock
aaa
cld
push
enter
mov
mov
sbb
xor
mov
add
adc
stos
xorl
push
aaa
sub
mov
push
es
push
aaa
arpl
das
das
lock
add
push
aaa
rolb
aaa
aaa
sbb
or
in
aaa
loope
and
push
das
sub
adc
negb
sub
aaa
add
sbb
or
dec
push
or
add
or
adc
inc
aaa
ret
rcrl
or
or
fists
pop
aaa
bound
pop
sub
xor
aaa
xchg
sbb
outsb
bound
push
xor
aaa
dec
icebp
popf
add
and
push
negl
cs
pop
nop
push
fcompl
test
ficoms
shrb
add
mov
aaa
dec
fldl
pushf
add
jg
iret
repz
or
push
and
adc
add
push
sbb
push
push
pop
push
shlb
jmp
adc
repz
test
or
loopne
lret
lahf
add
nop
adc
cmp
dec
push
call
ret
nop
clc
push
sbb
inc
push
push
jo
dec
push
push
sbbb
inc
aaa
push
push
mov
mov
sahf
out
xchg
or
push
movsb
lods
mov
mov
xlat
fimuls
pusha
aaa
aas
lock
sub
cmpsl
stc
push
or
sbb
ret
aaa
pop
push
add
mov
ret
out
xchg
jo
insb
mov
mov
mov
push
inc
xchg
es
xor
cmp
notl
inc
jge
adc
int3
mov
pop
ret
out
iret
aas
push
pop
rcll
testl
outsb
mov
or
xor
cli
out
jno
mov
adc
mul
xchg
sub
mov
rorl
inc
mov
adc
pop
mov
add
dec
notl
test
cmp
push
adc
mov
aam
and
test
ss
mov
mov
sub
lock
sub
mov
pop
mov
fcoml
test
mov
or
inc
ja
outsb
mov
pusha
testl
add
xchg
and
sbb
rolb
pop
mov
add
add
or
outsb
mov
sbb
mov
mov
testl
nop
sbb
dec
mov
lock
sub
aaa
loope
xchg
sub
int3
sbb
push
mov
idivl
and
pop
insb
xchg
mov
xchg
shrb
scas
or
cwtl
cmp
push
in
les
push
mov
shll
sub
mov
divl
mov
add
jl
outsb
shl
push
andw
movsb
notl
test
xor
stos
out
or
dec
test
jo
adc
and
push
jo
and
push
xlat
sub
pop
jo
mul
pop
inc
pusha
outsl
mov
sub
cmp
dec
shl
pop
mov
mov
sarb
lock
push
out
aaa
jno
adc
add
out
inc
mov
xor
adc
mov
push
add
mov
mov
pop
adc
mov
xchg
sub
or
testb
int
mov
mov
mull
sub
test
dec
mov
mov
sub
mov
rcll
shlb
pop
pop
mov
inc
loope
div
in
repz
sub
cmp
ja
xor
aad
and
es
add
or
jle
mov
dec
push
lods
sbb
jo
or
or
add
ret
adc
movsl
push
mov
cmp
fisttps
sahf
push
push
nop
cs
jns
adc
adc
mov
mov
mov
inc
or
sub
or
xchg
sbb
inc
add
xchg
push
push
les
ds
adc
push
xchg
mov
add
adc
push
pusha
xchg
inc
pusha
nop
mov
dec
dec
rolb
test
cmp
adc
push
pop
les
outsb
mov
mov
outsb
mov
push
repz
add
add
adc
mov
push
dec
adc
sbb
loope
je
fldcw
add
jmp
pop
xor
pop
cld
mov
sub
cmp
push
addb
sti
push
jne
cmp
js
cld
sbb
nop
or
sbb
mov
movsl
sbb
aas
dec
jns
xchg
pusha
aas
jg
or
push
inc
out
sahf
out
xor
and
ds
push
aas
adc
push
out
or
mov
aas
add
mov
push
jnp
mov
pop
nop
sbb
cmp
mov
aas
push
mov
aas
iret
jnp
inc
mov
mov
iret
repz
fsub
negl
aas
adc
pusha
xchg
jns
sbb
sub
cwtl
and
add
mov
aaa
and
jbe
inc
inc
adc
jmp
xor
adc
jns
or
and
sbb
in
sbb
pusha
inc
int
push
or
inc
xchg
mov
rorl
insl
mov
pusha
movsb
sub
and
sbb
cmp
inc
adc
lcall
sbb
and
cmp
add
fnstcw
xchg
pop
mov
cmp
mov
inc
loope
mov
sub
ret
add
or
test
push
or
xor
or
jmp
cmp
inc
push
aaa
in
rorl
or
adc
ret
pop
pushf
rcrl
inc
sub
xor
push
inc
xor
mov
xchg
fcoms
sub
sub
adc
sub
xor
sub
push
mov
and
aaa
mov
inc
adc
hlt
insl
inc
imul
adc
or
adc
and
inc
leave
pop
xor
sub
xor
sub
xor
adc
rcll
cmp
loopne
cmp
adc
cmp
out
call
repz
sahf
cmpsl
and
or
push
adc
lret
mov
fcoml
test
roll
fdivl
or
mov
push
xchg
scas
sbb
adc
mov
jecxz
adc
jecxz
mov
dec
inc
and
sbb
or
or
sub
ret
jecxz
imul
sub
aaa
outsb
mov
insl
flds
je
adc
adc
jg
loope
sub
sbb
push
imul
cmp
jo
ret
dec
and
and
mov
dec
mov
sub
jl
outsl
or
rcrb
mov
pop
sub
pop
pop
push
push
rol
dec
xchg
cwtl
sbb
pop
adc
mov
cli
movsb
sbb
cmpb
dec
and
lods
and
repz
push
shll
repz
adc
lds
cmp
sub
and
add
or
ja
dec
fwait
or
sbb
xchg
mov
push
dec
sub
inc
loope
test
add
fistpl
push
dec
sbb
pop
push
or
jl
popa
inc
add
lret
into
xchg
pusha
push
mov
mov
jb
mov
lea
push
ret
addl
mov
pop
mov
lods
mov
loopne
dec
into
subb
scas
push
dec
or
xchg
push
push
push
pop
lcall
aad
dec
adc
pop
inc
pop
mov
inc
inc
movsb
inc
sbb
push
pop
popf
fucom
es
cmp
mov
sbb
or
push
loope
test
mov
cmp
xorl
popl
mov
mov
adc
add
pop
lea
pop
inc
mov
push
push
cmp
or
adc
sbbl
adc
das
rolb
movsl
fisttpl
xor
mov
pop
in
fs
mov
add
dec
or
cmp
mov
inc
adc
mov
jne
lret
sbb
adc
and
or
test
dec
inc
pop
adc
into
cmp
stos
iret
sbb
dec
push
adc
pop
jmp
mov
sub
call
rolb
and
xlat
idivl
add
dec
daa
decl
mov
in
pop
push
sbbb
jo
add
inc
movl
push
xchg
sarl
and
xchg
pop
adc
cmp
inc
loope
xchg
and
and
xchg
pop
add
scas
mov
call
pop
mov
push
push
mov
fadds
jae
add
pop
inc
sub
and
ret
je
orb
lock
adc
repz
popa
and
imul
or
mov
add
adc
pop
or
sbb
add
pop
roll
pop
je
inc
loope
push
in
jbe
sub
push
adc
fsubs
subb
sub
subb
xor
add
mov
aaa
adc
push
movsl
fisttpll
add
adc
push
popa
andl
inc
adc
js
dec
aaa
dec
adc
sub
mov
into
mov
and
push
inc
adc
stos
or
and
divl
dec
sub
lock
mov
lcall
lcall
lock
inc
adc
push
sub
dec
cmpsb
push
xchg
or
aam
mov
or
dec
adc
cmp
add
sub
xor
sub
add
test
mov
mov
sub
mov
imul
js
sub
push
sub
or
push
mov
or
mov
into
pop
mov
jbe
lock
add
mov
sub
mov
mov
or
xor
or
mov
test
call
ret
stc
jmp
fsubrl
inc
jle
inc
adc
subb
pop
add
popa
cltd
pop
das
adc
sub
data16
adc
cwtl
xor
ret
addb
inc
loope
loopne
movsl
lret
jb
add
sub
inc
adc
inc
adc
lods
lea
adc
push
inc
sub
add
cmp
inc
into
ret
inc
cld
push
fisttpll
cmp
pop
or
adc
or
push
sub
mov
and
sub
mov
or
inc
adc
adc
ficompl
movsl
nop
jle
and
push
call
sub
cwtl
lcall
sub
xor
out
push
cmp
call
jo
inc
dec
out
call
xlat
pop
sub
or
test
clc
scas
fwait
mov
repz
sbb
fldl
and
adc
fwait
mov
sbb
sub
sub
xor
inc
ret
and
fidivl
jne
push
xor
movsb
fucom
fdivrs
sub
xor
fs
cmp
lods
inc
lahf
push
cmp
frstor
mov
or
mov
pop
mov
dec
flds
or
add
or
adc
mov
je
sbb
les
xchg
inc
loope
jg
add
outsb
iret
jge
mov
outsb
mov
aaa
or
fcoml
adc
sbb
enter
sbb
push
add
mov
test
cmpb
sbb
dec
jg
rorl
xor
insb
shlb
push
test
aaa
scas
icebp
cmp
jae
lea
cmpl
arpl
mov
fadds
sub
jb
pushl
call
dec
shlb
lcall
pop
mov
push
push
xchg
ss
inc
inc
xorb
bswap
in
mov
and
mov
xchg
add
icebp
test
shld
subb
mov
adc
or
xchg
jb
test
push
pand
add
push
cmp
sbb
test
shll
and
inc
pinsrw
adc
sub
jnp
sti
mov
mov
mov
into
inc
dec
mov
dec
lcall
ds
bound
subb
pop
imul
mov
mov
sub
cpuid
jo
stos
lret
stos
add
mov
adc
push
cmp
orps
mov
js
adc
sbb
leave
pop
adc
subb
mov
add
subb
adc
imul
adc
inc
popa
jo
jl
cmp
fs
pushf
rolb
adc
push
lods
add
inc
adc
inc
daa
or
faddl
push
jp
mov
popa
dec
lods
fdivr
shlb
mov
sti
lds
add
push
pop
pop
movsb
dec
popa
sub
inc
sti
and
mov
sti
jo
adc
adcl
jl
fwait
mov
push
insb
push
sti
adc
sbb
jne
test
push
jl
mov
hlt
popa
xor
sti
cwtl
sbb
inc
mov
sti
test
mov
je
call
mov
sti
mov
sbb
addl
test
popf
lods
mov
mov
jmp
pop
push
jp
jne
scas
les
and
jle
mov
adc
mov
dec
cmp
jmp
cmp
dec
fisttpll
add
push
push
aad
adc
cmp
jmp
cmp
aaa
mov
daa
and
shll
and
pop
fcoms
ljmp
ret
mov
scas
xchg
fimull
mov
sbb
inc
mov
shll
inc
push
adcb
dec
push
test
adc
aam
xor
dec
mov
addl
add
push
pop
sub
test
mov
push
add
dec
push
ret
and
jnp
add
mov
mov
aam
test
stos
fisubs
sbb
cmp
sub
pushl
xorps
cmp
mov
xor
mov
ss
add
jo
aad
mov
aam
test
fwait
push
ret
js
or
jo
and
or
popa
out
dec
pushf
or
jne
mov
fisubl
fisubl
mov
imul
dec
xchg
xchg
hlt
mov
dec
stos
xor
push
pop
xor
dec
in
dec
insl
push
jo
cmp
xchg
push
inc
dec
push
je
fisubl
mov
popa
xor
ss
jle
dec
mov
loope
clc
push
dec
ss
push
pop
dec
adc
shlb
sbb
mov
push
sbb
pop
insl
push
jo
dec
test
insl
push
pop
sahf
dec
js
push
push
add
dec
aad
dec
dec
push
dec
xor
ret
jb
sub
dec
aas
push
sbb
mov
push
add
mov
aam
stc
xor
movsb
aam
dec
sbb
lock
dec
add
cmp
xor
subl
inc
insl
dec
stos
or
sbb
lcall
dec
dec
cmpb
fimull
fiadds
dec
add
dec
sub
mov
loope
dec
adc
inc
loope
add
int3
mov
inc
push
aad
test
ficoml
loope
or
or
mov
sub
cmp
insl
push
cmp
iret
xchg
or
test
jmp
push
pop
push
jp
ret
push
cli
pusha
and
in
test
sub
push
aam
add
jo
pop
or
faddl
cmp
push
xlat
add
push
daa
test
push
mov
push
insl
push
mov
cmp
fcomi
test
push
insl
push
ret
mov
push
aam
push
insb
push
push
aam
test
adc
sub
pushf
adcl
mov
adc
subb
mov
ret
push
test
inc
aam
fmulp
inc
aam
add
xor
mov
inc
insl
push
push
mov
call
faddl
or
add
int3
push
in
sbb
jmp
push
aam
ret
les
test
push
cmp
push
lods
pushf
dec
inc
insl
push
loope
lods
daa
out
ja
sbb
sub
push
inc
insl
push
js
push
inc
popa
leave
mov
inc
int
add
jbe
pop
sbb
ds
sub
sbbl
push
test
insb
push
sbb
pop
cmp
js
mov
jl
mov
mov
stos
sub
push
js
loop
test
loopne
aam
sbb
adcl
lods
sub
sub
or
push
int
push
inc
mov
or
push
sub
sub
lods
cmp
test
mov
shrb
add
push
push
jmp
push
test
jbe
test
cs
or
dec
cmp
push
adc
stos
or
adc
push
push
inc
popa
je
jnp
pop
inc
xchg
mov
clc
flds
push
push
popa
xor
jmp
loope
aas
inc
push
add
pusha
adc
pushf
push
shrb
sub
push
sbb
xor
push
mov
or
sub
push
sbb
inc
push
test
cwtl
sub
lods
push
mov
xchg
sub
inc
insl
push
push
mov
loope
rclb
dec
ja
adc
in
inc
jle
mov
mov
adc
insb
cmp
push
mov
pop
push
add
push
sbb
addb
cmpb
scas
sub
push
test
sbb
push
aaa
inc
popa
jo
push
xchg
ljmp
add
sub
push
push
sbb
loopne
push
push
test
push
andb
and
push
push
mov
jnp
push
mov
sub
adc
call
xchg
push
push
sub
ficoml
sbb
mov
mov
mov
loope
jo
ret
adc
adcl
les
mov
jno
add
rcrb
outsb
or
pushf
js
inc
push
sbb
sub
or
imul
push
fcoms
cmp
fadds
rcrb
push
aam
test
rclb
add
lods
sub
cmp
mov
jecxz
cmpb
add
push
push
ret
mov
and
test
mov
fisubl
push
sbb
xorps
test
cmp
clc
test
faddl
push
decb
scas
test
push
pushf
cmpsb
faddl
fwait
test
sub
jnp
mov
popa
push
dec
mov
das
cmp
daa
es
fxch
lahf
mov
push
fisubl
fadds
dec
das
jge
xorl
add
test
inc
test
or
push
push
mov
loope
dec
cmp
insl
rcr
and
inc
jge
push
imul
cld
movsl
inc
popa
cltd
pop
das
loopne
jo
mov
xor
mov
push
cmpsl
cmp
dec
push
sbb
mov
jge
out
bound
sbb
push
movsl
das
cmp
mov
inc
and
mov
push
add
dec
push
sbb
sti
dec
and
dec
cmp
les
out
bound
sbb
pop
mov
or
cwtl
push
inc
loope
pusha
int
jle
sub
adc
push
pop
cmp
fwait
stos
ss
cmp
inc
jge
out
pusha
daa
ss
pop
or
das
hlt
cli
push
inc
loope
loopne
inc
fidivl
sub
adc
push
mov
ss
xchg
mov
insl
mov
out
jo
ss
pop
push
mov
sub
sti
sub
rclb
test
mov
sub
insl
push
push
imul
push
push
mov
loope
push
inc
sub
shrl
fistps
test
insl
push
mov
xchg
mov
push
lret
mov
insl
push
cmp
mov
ljmp
adcb
push
inc
incl
decb
push
std
dec
push
test
push
aad
push
sub
push
mov
mov
mov
loope
xchg
push
mov
jo
inc
push
fsubl
push
fnsave
loope
lock
or
ficoml
sbb
push
sbb
dec
inc
push
outsl
mov
inc
and
sub
mov
outsl
test
sub
fidivl
add
add
out
push
adcb
mov
lret
adc
push
xor
sub
daa
and
sti
pusha
mov
jae
pushf
mov
sbb
imul
test
push
loop
xor
sti
pusha
mov
shlb
xlat
aad
cmc
xlat
aad
outsb
fldl
test
dec
inc
sbb
or
ja
fldt
rclb
inc
mov
insb
outsl
addl
sub
push
ret
das
sahf
mov
scas
daa
and
das
mov
das
dec
stos
cmpsl
mov
loop
mov
sub
jmp
aad
das
loope
push
pop
fldl
das
sbb
jno
adc
mov
insl
push
mov
stos
das
sub
jecxz
cmp
hlt
sub
aaa
push
inc
add
das
cmp
or
js
sub
outsl
imull
addr16
xor
mov
mov
rcr
add
faddl
test
call
cmpsb
js
fldl
add
das
insl
push
js
cmp
add
and
or
mov
cmpsl
dec
adc
xlat
insl
das
repnz
pop
sbb
sbb
insb
lcall
push
pop
cld
inc
popa
daa
cmpl
sbb
ja
outsb
addl
add
rcll
mov
inc
dec
sbb
mov
das
int3
addb
outsb
aaa
mov
sub
ret
inc
cmp
sbb
or
cmpsb
loopne
sub
or
push
aaa
push
add
or
add
leave
push
sbb
dec
stos
or
jb
mov
mov
jnp
mov
aaa
pop
xchg
fadds
faddl
add
xor
pusha
push
lock
sub
imul
aaa
jno
addl
adc
test
ss
add
faddl
add
aaa
insl
push
mov
push
add
xchg
cmp
adc
aaa
jle
mov
or
aaa
test
rorb
loopne
scas
ret
push
faddl
aaa
xor
adc
push
test
push
push
js
out
dec
add
ret
aaa
das
fldl
test
aaa
ss
add
fwait
loop
mov
fnsave
bound
ss
add
or
jo
aaa
loopne
repnz
sbbb
jo
adc
aaa
insl
push
mov
outsl
add
aaa
xor
aaa
in
sub
aaa
subl
or
aaa
faddl
test
mov
ss
mov
inc
xchg
orb
mov
adc
mov
xorb
sahf
xchg
faddl
test
push
aaa
ret
push
or
xorl
dec
nop
cmp
and
inc
popa
aaa
xchg
add
pop
andl
js
outsb
aaa
rorl
mov
frstor
add
pop
xchg
sbb
adc
scas
or
test
pop
sbb
mov
std
xchg
jmp
call
dec
fsubrl
ret
sbb
ljmp
mov
lea
pop
xor
mov
mov
lret
adc
jmp
pop
les
aaa
ret
mov
inc
rcl
mov
shll
add
xchg
ja
insl
aaa
mov
sub
mov
hlt
push
add
add
push
and
xor
or
roll
inc
addb
insl
mov
outsb
xorl
dec
subl
insl
push
mov
add
arpl
fdivl
push
aaa
sbb
aaa
and
xor
sbb
lods
or
clc
mov
inc
add
aaa
outsb
add
pop
pusha
aaa
sar
sbb
inc
jmp
pop
inc
aaa
pushf
outsb
mov
popa
aaa
aas
mov
or
test
push
jo
aaa
or
xchg
cs
pop
mov
mov
faddl
test
cmp
addl
andb
inc
or
inc
mov
scas
loopne
mov
mov
mov
push
add
roll
aaa
sub
adc
aaa
nop
dec
inc
loopne
aaa
ss
je
adc
jno
or
ja
push
movsl
pusha
popa
push
ja
out
mov
lods
or
daa
push
les
push
sub
push
or
cmp
add
adc
ja
cmp
insb
popf
jmp
mov
sub
imul
xlat
xchg
js
rcl
nop
push
inc
add
shl
sub
imul
pop
arpl
mov
inc
shll
mov
lods
andb
sti
movsb
and
mov
mov
aas
mov
add
sbb
adc
sub
adc
xlat
and
and
push
xorl
xlat
push
jne
subb
in
outsb
add
xlat
pop
adc
fdivrl
add
mul
jne
inc
mov
push
add
push
adc
add
xor
aaa
add
loopne
or
xlat
movaps
rorl
add
sbb
pop
xlat
inc
or
and
adc
fiaddl
jo
add
cmp
aad
popa
xorl
jnp
jo
mov
xor
out
addb
xlat
xchg
mov
mov
into
xlat
adc
push
repz
or
or
add
pop
ret
add
sbb
cwtl
push
xorb
das
inc
add
subb
jo
es
add
adc
data16
add
mov
sub
xlat
add
mov
rcrb
adc
mov
adc
xlat
add
adc
adc
adc
and
dec
add
adc
mov
push
je
rorl
mov
subb
ja
cmp
fwait
cmp
adc
xlat
mov
and
or
mov
xlat
or
cld
fs
add
add
and
mov
adc
xlat
push
add
jmp
cmpb
hlt
lret
test
mov
movsb
add
subb
aaa
xlat
subb
push
mov
and
push
fisubs
add
insl
je
jmp
mov
xchg
lock
inc
xlat
sub
in
mov
mov
js
xlat
and
push
call
or
mov
xor
subb
cmpsb
xlat
adc
pop
mov
push
push
pop
add
test
mov
js
jbe
shlb
sbb
int
push
or
pop
push
in
dec
adc
rolb
add
addb
popf
test
popf
push
add
js
popf
adc
or
inc
jnp
adc
inc
sahf
pop
push
inc
popf
popf
adc
xchg
subb
inc
add
mov
andb
jmp
add
test
jo
popf
mov
jg
add
mov
sub
push
add
mov
sti
adc
fadds
mov
jmp
sbbb
adc
mov
xor
imul
loope
or
popf
inc
roll
add
popf
inc
add
out
popf
add
adc
stc
xor
popf
fsubl
pop
je
mov
inc
adc
ret
cli
sbb
popf
ljmp
fadds
out
pusha
add
adc
outsl
cmp
adc
jg
xchg
mov
popf
xor
inc
adc
faddl
or
pop
add
adc
cmp
js
add
and
psraw
pop
inc
loope
sub
add
push
add
cmp
mov
stos
subb
sbb
inc
adc
cmc
bound
js
popf
inc
inc
loope
stc
or
aam
loopne
int3
push
or
add
or
popf
or
and
sub
adc
test
popf
inc
sub
push
inc
popf
clc
je
push
add
out
dec
dec
adc
and
mov
jp
push
add
int
popf
push
inc
adc
test
popf
or
pushf
popf
sahf
cmpsl
std
cmpl
push
addr16
mov
sub
mov
add
subl
popf
lods
adc
popf
sub
or
jne
popf
loope
test
add
jbe
leave
inc
popa
or
fistl
jge
push
popf
cmpsb
out
inc
inc
sar
add
add
cmp
pop
add
test
test
mov
xchg
dec
inc
adc
adc
sbb
test
popf
or
popf
and
mov
mov
push
xorl
inc
popf
stos
in
mov
mov
pop
inc
adc
mov
sub
pushf
add
sub
stos
popf
shrl
jb
sub
push
or
lods
popf
add
test
and
mov
mov
mov
dec
test
or
add
mov
fmull
mov
or
sub
pusha
loope
or
cmp
pop
adc
add
sub
sub
cltd
mov
pop
lock
pusha
popa
jno
mov
or
add
mov
xor
mov
sahf
fldl
and
ret
add
out
ret
mov
into
dec
adc
mov
test
movsl
push
xchg
rorl
adc
push
and
inc
adc
or
mov
dec
or
inc
popf
sub
test
stos
pusha
orb
test
inc
loope
testl
cmp
mov
sbb
mov
ret
idiv
pop
inc
sub
negl
mov
sub
or
mov
or
movsl
mull
add
inc
xchg
rcr
cmc
or
mov
imull
pushf
test
or
adc
imul
inc
test
test
add
pop
mov
mov
sub
inc
loope
or
jbe
and
adc
and
and
idivl
adc
sub
mul
and
jl
xor
imul
push
divl
or
sbb
mov
mov
or
fisttpl
and
sub
mov
lret
or
mov
adc
push
sub
mov
or
notl
inc
loope
jb
imull
bound
xor
inc
rcrl
push
mov
dec
jmp
inc
add
mov
testl
rorl
adc
and
dec
xor
add
notl
pop
mov
cmp
jge
push
idiv
add
loopne
testl
push
sbb
jle
test
push
inc
notl
jo
inc
adc
sbb
mov
or
inc
loope
lret
add
and
adc
and
sbb
adc
cmp
jo
mov
pushf
push
mov
and
pusha
test
push
pop
inc
inc
adc
movsl
testl
test
adc
inc
mull
pop
pop
daa
subb
jge
fwait
add
inc
jne
xlat
jnp
push
mov
or
into
and
or
fwait
inc
sbb
ss
test
iret
std
cmp
push
inc
adc
orb
lock
adc
rorl
mov
nop
adc
or
and
notl
pop
add
ja
adc
mov
and
aaa
push
inc
dec
daa
sbb
inc
adc
mov
mov
inc
loope
loopne
std
jae
test
mov
inc
adc
add
mov
push
js
push
imull
rcrl
test
testl
negl
sbb
mov
and
sub
stos
dec
lret
or
mov
fsts
cwtl
nop
push
add
mov
sbb
dec
jp
adc
stc
loop
adc
in
add
push
addb
shrb
mov
dec
js
or
fcoml
push
in
stos
movsl
mov
sub
push
dec
sbb
cmp
rorb
adc
or
and
cmp
mov
mov
xchg
mov
and
push
addr16
inc
add
cltd
and
adc
or
inc
cltd
push
loopne,pt
and
cltd
push
mov
or
cltd
add
jo
stos
and
or
fistl
inc
mov
repz
rolb
pop
add
cwtl
pop
adc
subb
sub
and
mov
sub
adc
mov
dec
xchg
adc
push
sbb
push
cmp
dec
or
or
inc
inc
popa
test
and
int
ret
inc
aas
dec
xor
push
add
gs
pop
stos
imul
idiv
add
sbb
aad
push
gs
addr16
call
sbb
cmp
scas
fs
add
notl
push
mov
inc
xchg
out
sbb
out
mov
xchg
adc
sbb
shll
stos
jo
iret
lea
inc
ljmp
mov
mov
push
add
push
or
push
test
dec
aaa
lea
ficoms
adc
cmp
stos
xor
mov
add
gs
mov
fcmovnbe
push
sbb
inc
popa
jb
cld
ret
adc
rolb
push
bound
call
jb
push
jae
popl
test
bound
push
mov
sahf
pushf
test
push
push
inc
rorl
test
adc
adc
add
xchg
mov
mov
gs
push
pop
or
iret
jno
js
add
pop
mov
sbb
fldt
or
lds
xchg
andb
js
loop
pop
test
loopne
push
popf
shll
mov
es
and
adc
fsubl
xor
pusha
xor
mov
jno
cli
adcb
or
outsl
add
andl
sbb
negb
push
data16
cmp
cmp
push
repnz
lds
sbb
out
sbb
and
inc
popa
sti
daa
push
sub
dec
testl
jb
jnp
xchg
push
and
sarb
cwtl
jns
lcall
mov
int
inc
cmp
mov
outsl
push
xchg
test
lock
mov
or
aaa
inc
mov
mov
outsb
sbb
inc
xor
gs
inc
addl
jo
adc
loope
add
xor
fadd
push
mov
pop
adc
or
adc
insl
or
sbb
sbb
cwtl
sbbb
push
in
or
sbb
xchg
push
sub
sbb
and
dec
xor
xor
cmc
jne
push
xchg
pop
out
cwtl
shlb
sub
mull
mov
xor
and
bt
sub
out
fs
sbb
pop
mov
push
pop
push
mov
mov
pop
mov
jno
adc
mov
mov
mov
addl
mov
jae
inc
repnz
sbb
pop
add
outsb
mov
cmp
pop
push
inc
imul
cmp
je
lret
in
insl
imul
mov
popa
and
insl
and
outsl
inc
ret
test
imul
dec
sbb
jo
movsl
das
xor
pushf
cs
das
adc
mov
dec
sbb
inc
imul
push
mov
pop
call
dec
shll
mov
jo
sbb
mov
das
test
sbb
jbe
adc
add
aam
test
push
das
xchg
mov
jo
push
jl,pn
inc
loope
shrb
push
sub
ret
das
insl
push
push
test
add
xchg
das
dec
inc
xor
dec
das
call
dec
mov
mov
or
sub
sbb
xchg
call
add
pop
pop
xchg
or
test
inc
and
cwtl
das
dec
add
inc
and
xor
fmuls
rclb
mov
and
and
add
sub
adc
shrl
shlb
shlb
pushf
push
or
das
insl
or
ret
das
movsl
inc
or
jmp
push
test
xor
das
adc
das
dec
aaa
dec
xor
cmc
jl
cmp
aas
jmp
cmp
add
inc
push
pop
xchg
push
das
je
fwait
sub
jo
add
imul
mov
jmp
dec
lods
das
stos
mov
js
addl
push
test
sub
pop
movsl
inc
popa
mov
xchg
push
test
pop
out
addl
out
or
ja
loopne
push
sbb
leave
push
stos
shlb
or
movsl
inc
loope
das
pop
in
add
je
push
call
pop
test
test
xchg
push
das
repz
test
sub
xchg
push
add
das
jbe
sbb
sbb
push
xor
test
das
fldcw
push
imul
cwtl
pop
int3
imul
xor
mov
adc
test
sbb
pop
das
add
fmuls
mov
sbb
or
iret
test
pop
sbb
ret
inc
xchg
push
das
loope
adc
enter
pop
push
das
aad
mov
das
int3
mov
sub
ret
mov
xchg
mov
fwait
adc
mov
adc
jo
ja
push
mov
sbb
or
push
int3
mul
mov
test
mov
or
dec
das
lcall
push
xor
inc
sahf
in
push
inc
imul
out
mov
dec
movsb
shl
iret
sarl
and
inc
loope
dec
add
cli
das
inc
popa
or
das
adc
xchg
aaa
jmp
movsl
inc
and
pop
movsl
das
pop
cmpsb
cmp
movsb
adc
das
orb
pusha
xchg
push
add
push
loope
cwtl
or
or
roll
or
dec
rcll
dec
add
add
les
mov
sbb
pop
mov
dec
xor
out
lods
dec
push
mov
loope
sahf
dec
mov
sub
sub
push
dec
adc
ret
xchg
push
ret
xchg
movsl
loopne
mov
add
ja
xor
adc
test
pop
or
jnp
push
mov
xor
dec
loop
sbb
dec
xor
test
or
popa
mov
push
sub
in
push
pop
adc
cmpsl
imul
movsl
adc
add
push
push
test
inc
push
add
fildll
jnp
mov
xor
lea
cmp
push
pusha
push
jnp
mov
pop
adc
pop
or
ret
pushf
or
or
and
sbb
push
test
jnp
sbb
and
inc
paddusb
das
cmp
adc
test
sub
iret
cmp
enter
xchg
xor
test
loope
or
add
adc
lahf
mov
xchg
mov
sub
aad
push
pop
adc
mov
dec
xchg
js
incl
add
test
and
cmp
rolb
pushw
lea
adc
inc
loope
adc
enter
inc
stos
dec
adc
stos
adc
push
shrb
out
pop
pop
sbb
add
adc
push
stos
jg
ret
stos
add
cmp
and
or
shll
dec
or
nop
xchg
jnp
jns
test
andl
push
push
add
mov
add
cltd
or
movsl
xchg
cmp
subl
orl
test
shlb
scas
inc
push
sbb
jmp
sbb
dec
movsl
jl
test
jmp
call
adc
addr16
adc
subb
ja
push
or
mov
fiadds
adc
test
or
adc
jnp
cmp
push
rclb
addr16
push
mov
or
and
aam
out
stos
subb
aaa
push
push
inc
adc
or
pushf
scas
mov
ret
mov
jbe,pn
inc
addr16
das
or
or
jns
xchg
jo
call
push
and
or
pop
subb
es
push
mov
xchg
roll
add
push
adc
adc
jbe
add
xor
or
addr16
dec
lods
sub
fists
shrb
cmp
and
sub
test
mov
push
pop
push
addr16
add
push
inc
sub
les
push
mov
inc
popa
push
addr16
sbb
shl
loop
or
sub
mov
outsl
inc
loope
stos
imul
add
sub
xor
and
sbb
add
sub
andl
rcrb
or
or
add
or
mov
dec
mov
jle
mov
cs
ret
push
jecxz
xor
or
add
cmc
add
stc
jmp
and
pop
cmp
dec
inc
or
jecxz
movsb
pusha
daa
mov
sub
sub
adc
jae
cmp
jno
adc
insl
pop
jae
fstl
pop
mov
push
out
adc
mov
insl
jae
pop
outsb
lret
ret
jae
cmp
push
lods
xchg
jae
sbb
push
fstl
pop
mov
loope
jae
xor
and
xor
fdivl
push
jae
cs
loopne
sub
scas
adc
test
sub
loopne
lahf
jmp
pushf
mov
mov
inc
sub
xlat
push
or
xchg
imul
addb
sub
cwtl
and
xlat
negl
mov
ja
inc
pop
insl
adc
ds
rorl
mov
adc
call
push
shll
push
mov
in
addr16
rolb
jo
cmp
inc
adc
push
dec
dec
dec
adc
testb
mov
jae
dec
push
xor
shll
and
adc
shr
daa
cwtl
and
shrl
jo
or
leave
dec
adc
mov
div
inc
push
mov
nop
mov
and
scas
shll
out
jbe
jno
cmp
and
and
loope
jnp
adc
xchg
pop
xor
add
inc
jnp
inc
pop
dec
adc
adc
jnp
imul
mov
jnp
push
adc
jnp
fldl
js
jnp
add
push
xorl
fsubs
int
inc
mov
or
add
mov
orl
mov
add
xchg
add
inc
jnp
inc
popa
inc
je
add
mov
mov
aam
jno
les
mov
inc
adc
or
jnp
sbb
cld
add
dec
inc
jge
adc
stc
jnp
inc
popa
jne
push
jnp
pop
ret
inc
out
inc
adc
xchg
xor
mov
pop
mov
mov
js
push
xor
cmpb
adc
jnp
sub
jo
movsb
inc
sub
cmpsl
add
popa
js
or
adc
iret
xchg
popa
xor
das
cli
nop
mov
xchg
les
test
adc
das
pusha
subb
movsl
jnp
test
push
sub
or
mov
movsb
in
and
shrb
add
jnp
mov
add
jnp
mov
rol
push
jnp
pop
mov
mov
jnp
or
sbb
push
push
js
push
or
inc
adc
push
inc
jnp
leave
movb
add
pop
mov
or
or
jge
cwtl
and
inc
xchg
inc
and
sub
add
jno
push
mov
adc
cmp
add
lock
jo
jne
inc
jnp
inc
push
dec
adc
adc
jnp
adc
xor
lret
push
xor
loopne
rcrl
mov
sbb
roll
jnp
jns
or
mov
add
adc
xchg
jnp
inc
rorl
aaa
mov
inc
roll
adc
pop
adcb
es
out
cmp
mov
mov
les
jp
ss
or
xchg
pop
dec
adc
pop
aam
inc
pop
mov
jnp
sbb
mov
sahf
dec
jo
in
movsb
rcr
sbb
mov
cmp
inc
adc
inc
push
adc
inc
rcrl
dec
xor
jo
push
lds
push
roll
movl
js
dec
inc
xor
pop
mov
xchg
xor
es
stc
mov
push
mov
add
inc
jnp
pop
push
xor
adc
push
jnp,pt
and
aaa
xchg
or
xchg
loopne
aaa
cwtl
and
divb
int3
sub
loopne
sub
mov
stos
xchg
and
mov
aad
sub
call
pop
ret
repnz
mov
mov
inc
dec
ret
inc
push
sti
daa
mov
xor
push
mov
adc
jmp
jo
test
movsb
add
sub
test
or
cmp
xor
mov
ja
sbb
sbb
int3
or
add
push
inc
sahf
and
and
popa
test
sub
add
xchg
dec
lods
jmp
mov
cmp
add
push
xchg
or
xchg
add
je
nop
sub
jmp
mov
les
sub
test
mov
lret
adcb
jmp
dec
das
or
mov
lods
loop
mov
loopne
out
jmp
or
pushf
test
std
call
or
inc
adc
andb
sbb
std
xor
std
xor
adc
sub
xchg
lods
and
inc
adc
imul
mov
lds
pusha
pop
mov
mov
cmp
jl
mov
or
adc
mov
mov
popl
pop
jecxz
mov
adc
xor
adc
adc
mov
mov
mov
sarb
dec
divl
adc
stos
cmp
mov
push
add
xor
in
inc
adc
pop
inc
xchg
pop
sbb
mov
jne
out
and
add
sbb
xchg
inc
adc
adc
mov
jo
xchg
mov
add
mov
mov
jb
pop
push
clc
dec
or
add
add
adc
out
cmp
and
adc
xchg
adc
js
xor
rcl
push
icebp
or
popa
or
push
mov
jo
sub
or
inc
adc
out
shr
es
sbb
popa
imul
mov
pop
cmp
test
push
mov
adc
adc
pop
insb
add
inc
shll
pop
mov
rcl
pusha
enter
rorl
ret
imul
sbb
add
ret
add
sub
or
sub
pop
enter
pushf
shrb
cltd
xchg
lock
and
mov
shl
pop
sbbb
xor
add
pop
mov
and
daa
pop
inc
and
xchg
or
push
add
aaa
dec
cmp
loope
and
push
adc
pop
push
xor
nop
pop
outsl
adc
xor
push
lcall
aam
mov
mov
pop
adc
push
push
or
mov
xorb
mov
sub
cmp
and
imul
and
testb
test
pop
cli
fldl
xchg
or
and
mov
subb
dec
mov
inc
dec
loope
mov
mov
inc
dec
inc
adc
and
mov
subb
xchg
mov
sarl
test
test
and
xor
pop
imul
cltd
mov
mov
bnd
mov
jg
push
mov
and
push
dec
xchg
inc
add
inc
adc
into
inc
aaa
adc
rol
fdivl
repnz
pusha
subb
jp
add
sbb
inc
popa
push
xchg
dec
push
mov
pop
xchg
ss
or
fimull
xor
or
dec
repnz
add
dec
add
sbb
push
xchg
push
mov
mov
movsb
lcall
bound
sbb
dec
pop
bnd
add
js
mov
mov
sbb
subb
subb
or
and
mulb
xor
outsb
sbb
inc
mov
or
scas
sahf
pop
adc
and
sbb
jle
adc
and
xchg
add
js,pn
push
mov
cmpsb
enter
aaa
popa
sbb
add
dec
push
js
add
jle
insb
mov
push
sub
cwtl
rclb
adc
stos
dec
or
outsb
cmpsb
push
jb
pop
fistpl
pop
xor
mov
roll
push
or
adc
daa
push
outsb
ljmp
sbb
or
mov
xchg
gs
les
mov
ret
dec
scas
sbb
cmpl
push
xor
sub
pop
dec
push
pop
cltd
xchg
gs
or
inc
enter
push
add
xchg
jb
pop
xchg
push
stos
scas
sub
aam
push
cmp
and
ja
dec
and
andl
sbb
sub
dec
or
push
push
enter
sbb
sub
in
jnp
mov
jns
dec
pop
push
stc
loop
scas
inc
mov
sub
mov
jl
adc
lods
sub
sub
pushf
mov
loopne
add
or
inc
cmpsl
inc
orl
mov
or
sbb
test
mov
mov
push
mov
pushf
subl
or
int3
or
sbb
mov
pop
stos
mov
popa
sub
lds
mov
push
mov
loope
or
xlat
inc
xchg
jae
jnp
sub
sbb
cld
mov
adc
push
test
pop
and
adc
push
popf
orl
loop
sub
jbe
in
cmp
es
fs
mov
dec
mov
lret
sbb
and
pushf
push
add
cmp
adc
pop
fwait
movsb
add
je
jns
js
test
aam
push
xorl
popa
xor
xorl
inc
cmp
sbb
adc
or
or
dec
sbb
adc
adc
addl
or
xor
lds
xor
sbbl
imul
pop
lock
sarb
xchg
ret
push
into
iret
adc
jmp
ret
addl
dec
lret
iret
out
push
pop
adc
lock
push
cs
test
sub
sahf
and
enter
loopne
into
outsl
jns
sub
jne
or
andl
sub
inc
cmpl
xorl
outsl
jo
adc
mov
add
adc
das
push
test
dec
adc
or
or
cmp
sbbl
adc
adc
mov
nop
int3
cltd
pop
add
pop
adc
cmp
dec
orl
push
inc
popa
movsb
cmpl
clc
mov
push
subl
mov
outsb
push
push
jb
add
gs
sbb
imul
inc
loope
ret
orl
orl
sbb
pop
addl
pop
ficoms
cmp
add
sar
push
in
jo
mov
xchg
push
jmp
out
imul
inc
imul
push
jmp
xlat
movsb
adc
movsl
inc
and
adc
inc
subl
arpl
push
push
sbb
adc
xor
pop
movsl
inc
jmp
dec
popa
cmc
mov
faddl
xchg
orl
in
jmp
scas
cld
loope
mov
push
sbb
jnp
ret
sub
stos
shrb
pushf
dec
pushf
mov
stos
xor
mov
jo
xchg
dec
outsb
or
adc
fwait
sub
stos
xor
movsb
jmp
dec
jmp
adc
scas
in
add
shl
or
ret
or
imul
out
shlb
mov
hlt
sbb
jmp
push
sbb
or
pop
jmp
sub
imul
fcoml
jmp
mov
subb
rorl
jmp
push
test
outsb
push
shrl
or
dec
and
ret
or
jmp
mov
aad
movsl
jmp
xchg
push
jmp
test
xor
scas
mov
ficomps
shll
out
sub
cmp
int3
sbb
dec
sbb
lds
or
cmpsl
inc
loope
cmp
push
dec
mov
cltd
fisubl
xchg
adc
imul
sbb
popf
push
cmp
push
cmp
adc
faddl
icebp
mov
xor
ljmp
dec
cmp
imul
shll
push
cmpsl
inc
sarl
test
add
xor
imul
push
add
cmp
jb
adc
cmp
cmpl
push
cmp
push
mov
enter
sarl
sbb
hlt
jno
adc
mov
int
cmp
cmp
push
sbb
imul
sbb
or
cmp
or
xor
sbb
lods
cmp
mov
sbb
or
pop
popf
push
test
sarl
jg
enter
cmp
push
test
out
and
arpl
xor
pop
jb
imul
leave
insl
jnp
insl
gs
push
sbb
imul
lret
popa
mov
mov
mov
cmp
jge
pop
push
je
push
mov
cmp
shrl
xor
xor
cmp
or
subl
sub
sarl
call
add
jo
add
push
sbb
in
pop
pop
jo
mov
cmp
mov
mov
add
lods
enter
or
and
cmc
adc
push
cmpsl
inc
popa
cmp
inc
cmp
sbbb
inc
cmp
pop
sbb
push
sub
je
cmp
loop
cmp
adc
push
add
mov
movsb
icebp
mov
sub
and
xor
dec
adc
sbb
xor
call
test
dec
push
dec
and
xor
pop
sbb
adc
cmp
mov
cmp
or
push
dec
push
imul
sbb
adc
mov
iret
and
loop
sarl
or
js
inc
movsb
fmuls
dec
cmpl
xor
cmp
adc
mov
pushf
mov
ret
aam
dec
cmp
cmpsl
cmp
xchg
jnp
or
mov
adc
cmp
inc
jl
jno
adc
adc
cmp
mov
sarl
cmp
cmp
iret
imul
aam
or
scas
sti
mov
in
outsb
and
mov
and
jo
mov
cmpsl
loope
shll
sbb
inc
cmp
imul
mov
or
adc
adc
imul
testb
lret
icebp
pusha
cmpl
imul
or
cmp
sbb
adc
adc
push
cmp
mov
mov
fld1
and
jne
daa
pop
push
push
or
inc
call
imul
sbb
cmp
ss
je
jp
or
movsb
shll
inc
popa
cmpb
test
sub
loope
mov
in
sbb
mov
add
jo
mov
test
dec
cmp
xor
mov
or
dec
jo
adc
cli
xor
dec
call
shll
push
test
or
and
fs
inc
jae
cmp
dec
cmpl
cmp
push
sub
data16
cmp
aas
or
in
sbb
mov
cmp
sbb
enter
mov
dec
pusha
ret
cmp
shll
pushf
push
test
dec
mov
inc
and
jo
add
shrb
cmp
push
cmp
nop
push
mov
imul
outsl
loop
pop
push
dec
inc
pop
sbb
or
shll
in
sbb
cli
cmp
ret
push
add
mov
jl
mov
sbb
and
imul
repnz
or
je
adc
ds
add
orb
mov
cmp
adc
cmp
xor
mov
mov
pusha
ss
mov
ret
mov
xor
sbb
movsb
push
mov
inc
inc
ret
dec
in
adcl
es
and
mov
iret
and
idivb
mov
testb
and
adc
mov
dec
jnp
fmuls
loop
inc
jns,pn
or
jne
sub
mov
mov
test
xchg
daa
in
add
jp
or
mov
push
cs
add
jp
repnz
or
jbe
dec
addl
jle
shlb
jb
mov
dec
jle
mov
or
das
bnd
fstps
xor
pushf
xor
push
push
test
or
inc
pushf
push
test
inc
out
dec
add
xorb
imul
xchg
inc
cmpsl
inc
inc
ret
xor
fdivl
xor
ja
loope
rcrb
pop
test
cmpsl
inc
xor
pop
pushf
push
xor
jo
xor
add
xor
adc
inc
push
xor
mov
sbb
adc
inc
jbe
add
incl
mov
and
adc
xchg
jl
cmp
scas
mov
in
inc
testl
dec
cld
lock
or
cmpsb
jns
add
jmp
orl
ret
mov
outsl
add
or
xor
or
mov
cmpsl
inc
shl
fdivrp
mov
cmp
and
xchg
push
addb
inc
inc
imul
insl
shll
xor
xor
pop
pusha
out
push
or
jl
add
je
hlt
jecxz
stc
push
pusha
pop
jle
out
sbb
rorb
adc
add
xor
test
aaa
mov
inc
push
sbb
sub
dec
sbb
or
fbld
inc
loope
cmp
sbb
sub
sub
fs
shll
push
cmpsl
inc
xor
add
or
sbb
pop
mov
push
sbb
xor
adc
loope
xor
push
popa
inc
xchg
sbb
push
xor
push
test
adc
dec
add
dec
mov
mov
fiadds
push
adcb
or
push
push
inc
call
shll
ja
sbb
cmp
jo
push
xor
push
xor
pushf
mul
inc
pop
add
cmpsl
inc
sarl
mov
jbe
je
shll
std
call
scas
jae
or
in
enter
jecxz
cmp
or
shll
or
xor
mov
cmp
mov
jne
jb
add
not
mov
mov
cmp
pop
push
insb
out
push
lock
cmpsl
inc
loope
mov
adc
jbe
jo
cmpsl
xor
adc
jmp
xor
ret
mov
xor
fucomip
int3
add
xor
adc
xor
loop
xor
jo
xor
xorl
stos
sub
bound
adc
mov
imul
cwtl
jns
mul
je
xor
loopne
mov
mov
or
rol
imul
testb
add
pop
add
jmp
pushf
push
xor
es
push
and
or
pop
ret
pop
aam
and
xor
xor
aam
sbb
and
add
dec
mov
hlt
popa
lea
xor
inc
xor
push
adc
cwtl
or
mov
mov
xor
push
add
rolb
sub
xor
loopne
xor
or
mov
shll
lahf
push
add
sub
jo
ret
inc
inc
loope
xor
cmpsl
inc
xor
mov
mov
push
test
imul
push
test
xor
push
sub
fwait
xlat
sbbb
sub
pop
cmpsl
inc
shll
jmp
shll
sub
call
adc
pushf
push
test
pop
imul
and
aaa
mov
faddl
cmpsl
aaa
xchg
cld
jo
loopne
aaa
fistl
loope
shll
adc
inc
roll
cmpsl
inc
loope
add
add
insl
sbb
sbb
jle
adc
cld
aaa
das
push
cmpsl
inc
loope
aaa
shll
inc
inc
lods
stos
aaa
jne
mov
test
loopne
sub
push
dec
jo
add
add
pushf
mov
sub
loopne
aaa
fmuls
pushf
cmpsl
aaa
dec
add
jo
aaa
xorb
das
push
inc
dec
xorl
fdivl
adc
insb
push
loopne
sub
push
jo
pushf
push
test
sub
jo
xor
shr
xor
mov
shrl
ret
push
pop
in
aam
dec
aaa
out
or
ljmp
add
xor
cld
jle
cmp
mov
je
shll
mov
mov
out
scas
add
je
lcall
lods
xor
shll
mov
sbb
mov
xorl
dec
pusha
shll
or
shll
xchg
or
cmp
inc
push
mov
aaa
jl
sub
imul
sub
out
cmp
and
inc
movsb
cmp
test
cld
aas
dec
addl
mov
adc
scas
xchg
les
push
loopne
sbb
xor
mov
adc
aaa
stos
add
add
inc
or
fsubs
jle
or
lock
and
push
pop
insl
sbb
lock
imul
shll
xchg
imul
sub
imul
mov
add
aaa
push
pushf
push
add
rcrb
aaa
push
or
lock
rcll
jge
cmp
adc
test
ficompl
adc
add
xor
xor
xor
mov
adc
ljmp
jo
mulb
push
ljmp
sbb
cmp
xchg
inc
sbbb
pushf
aaa
test
mov
mov
test
pushf
push
test
mov
and
cmp
ja
enter
sbb
jo
fstpt
push
jmp
mov
sbb
dec
adc
add
inc
pushf
aaa
pushf
push
add
aaa
dec
add
ds
aaa
shll
sub
cwtl
xorb
mov
aaa
push
ljmp
ss
das
cmp
aaa
lahf
push
test
ss
addb
stos
adc
xorl
adc
add
push
imulb
cmp
fidivl
jmp
jns
call
ss
popf
dec
aaa
lock
sub
sbb
mov
mov
notb
pusha
xchg
aaa
lret
fucomp
mov
aaa
stos
aas
mov
xor
ds
ret
inc
aaa
test
mov
fs
shrb
cmpsl
inc
loope
fs
or
hlt
enter
aaa
fimull
addb
lds
dec
aaa
jo
sarl
cli
push
mov
or
in
dec
or
punpckldq
mov
push
ja
mov
cmp
jns
fldt
in
push
xchg
out
ficoms
push
es
dec
outsb
repnz
xchg
ret
push
mov
es
xchg
mov
sysret
push
push
decb
jge
inc
cmp
dec
aam
out
push
mov
lods
sbb
shll
cmpl
cmp
shrl
pushf
cmp
test
stos
dec
cmp
cmpl
test
shll
xchg
cmpsl
nop
stos
cmp
ficompl
dec
cmp
cwtl
dec
add
push
cmp
ret
sbbl
shll
cmpsl
inc
loope
cmp
mov
imul
sbb
add
mov
int3
dec
push
or
mov
xor
adc
cmpb
jne
push
jmp
or
adc
sub
ljmp
sbb
cmp
popa
mov
jne
mov
inc
cmpsl
cmp
pushf
push
test
rcrb
cmp
js
inc
loope
loop
int3
bound
add
call
imul
cmp
dec
push
je
adc
cmpb
js
push
add
test
cmpsl
inc
loope
ljmp
sbb
out
cmp
fisubrs
cmp
cmpsl
shll
loope
mov
loope
pop
cmpsl
inc
cmp
shll
mov
push
pop
sbb
push
xor
mov
inc
lock
les
popf
dec
les
cmp
and
cmpsl
or
cmpsl
inc
and
push
je
sub
cmp
cmp
shrb
jae
sub
into
pop
mov
in
cmp
mov
cmp
sbb
sarl
cmp
dec
cmp
sub
test
or
xor
std
loopne
cmp
call
dec
cmpl
and
push
cmp
sub
mov
test
inc
loope
inc
add
mov
lahf
xchg
stos
adc
pop
ret
adc
rclb
mov
sub
mov
xor
cmp
jns
lahf
int3
pop
mov
mov
xor
or
or
call
cmp
addl
xor
pop
inc
call
cmp
or
or
imul
sbb
rclb
jo
sub
or
mov
ss
in
rcl
mov
push
ret
test
inc
insl
or
dec
cmpl
sub
push
test
ret
push
cmp
subb
std
loope
jbe
imul
jbe
loop
sub
xcrypt-ecb
cmpsl
or
mov
imul
adc
mov
mov
xchg
inc
lods
cmp
imul
rorb
mov
imul
jbe
dec
cmp
add
or
test
add
pop
mov
jno
adc
inc
cmp
cmp
sub
xor
cmp
lods
cmp
test
mov
mov
cmc
mov
pushf
push
test
xor
cmp
add
imul
stos
lcall
cmp
test
es
cmp
loopne
adc
pop
cmpsl
inc
mov
or
or
inc
les
sahf
push
test
pop
or
imul
cmp
inc
mov
pop
jo
mov
inc
xor
sbb
push
pop
popf
push
test
imul
pop
xor
test
inc
jno
adc
into
inc
push
add
add
mov
push
pushf
push
inc
cmp
inc
sbbl
push
add
ror
inc
shll
and
mov
jae
call
mov
in
fadds
dec
addl
scas
mov
sub
jno
imul
test
inc
enter
xchg
cmp
movsb
pusha
xor
mov
std
xor
inc
mov
sub
inc
pop
cmp
loopne
inc
sbb
pop
jo
adc
aaa
out
dec
addl
sbb
popa
pusha
inc
add
add
pusha
es
inc
lret
adcb
jbe
push
inc
inc
sbb
sbb
jo
sbb
shl
xor
mov
in
sbb
inc
mov
in
cmpsb
dec
inc
loopne
or
adc
pop
xchg
call
ja
inc
hlt
dec
push
add
pop
mov
add
addb
inc
popf
push
test
cmp
shll
sbb
mov
inc
loope
jno
sbb
mov
add
ficoms
inc
fimuls
jno
adc
dec
add
enter
mov
in
les
cmp
adc
mov
jb
add
xor
add
inc
les
mov
or
aam
jbe
cmp
fnstcw
mov
inc
inc
mov
pushf
push
add
mov
xor
addb
sub
add
fdivs
push
test
mov
adc
push
sbb
mov
or
or
clc
add
sub
xor
int
inc
xchg
push
add
fdivl
loope
xchg
cli
fistpl
xchg
lret
orb
add
jg
sbb
cwtl
sahf
jg
sbb
add
xor
mov
mov
mov
sub
push
test
or
cmc
cmpsl
push
sbb
fidivrs
lea
test
sbb
push
mov
in
inc
pop
pop
xchg
xor
sbb
xchg
or
add
adc
mov
mov
adcl
add
mov
jns
mov
push
cmp
addr16
push
in
pusha
testb
pop
dec
jb
mov
add
add
inc
dec
loope
sbb
dec
mov
addl
adc
or
test
movsb
xchg
addl
test
mov
sub
xchg
movsb
fsubrs
xor
xchg
xchg
and
sbb
dec
xor
xor
sub
push
dec
xlat
ret
ds
frstor
lret
mov
pushf
push
sbb
fidivrs
shrb
pop
aad
push
xchg
xor
dec
sub
push
xor
sbb
repnz
mov
sbb
stos
rcll
mov
xchg
bound
or
xchg
mov
cmc
xchg
inc
inc
add
je
or
mov
shrl
xchg
jne
inc
and
sbb
faddl
mov
mov
andb
cmp
test
xchg
call
mov
adcb
in
push
test
inc
es
xchg
adc
ret
and
adc
xlat
mov
inc
adcl
push
insb
xchg
or
inc
cmp
daa
scas
sbb
mov
add
xor
cmc
xchg
fcmovnbe
xchg
push
sub
mov
mov
or
and
jge
sub
xchg
stc
sbb
and
mov
push
pop
add
mov
jnp
nop
mov
cmp
add
xor
mov
mov
loop
shrb
sub
xchg
ss
bound
ret
iret
sbb
push
mov
mov
rolb
cwtl
out
or
ret
xor
add
rcrl
inc
mov
add
sbb
movsb
mov
mov
add
fs
lods
sub
push
pop
mov
orb
mov
mov
push
xchg
icebp
lock
xor
sbb
aas
inc
popa
pop
rcrb
out
mov
addl
lahf
xorb
sub
adc
add
push
push
add
push
out
or
js
sub
call
bound
dec
sarl
inc
push
sbb
sti
and
es
cmp
aaa
mov
mov
add
cwtl
or
jnp
mov
mov
xor
test
lods
test
xchg
popa
jno
push
test
movsl
inc
test
dec
adc
cmp
cs
jle
and
imul
into
sarl
stc
repz
lds
push
cmp
xor
test
shlb
sbb
mov
push
xor
pop
adc
pop
pop
sbb
jmp
inc
loope
add
in
or
xor
test
push
add
add
test
je
call
scas
shlb
mov
enter
bswap
cmpsl
ficomps
cld
and
add
movsl
inc
test
int3
cmp
sbb
orb
add
adc
jb
inc
push
sbb
clc
cmp
push
sub
pop
sbb
scas
mov
test
and
jecxz
jle
and
loopne
and
jl
cmp
imul
push
test
cmpsl
pop
lock
pop
push
sbb
rorl
addb
enter
loope
dec
subl
inc
test
fimuls
inc
pop
jb
fsubr
into
clc
inc
sbb
dec
leave
xchg
test
js
inc
add
cmp
dec
add
test
xchg
mov
shrb
jb
movsl
in
and
loopne
loope
out
movsl
inc
popa
jo
shrb
adc
mov
sbb
mov
jmp
inc
test
jecxz
test
push
mov
les
shrl
push
dec
daa
movsl
shrb
in
add
push
mov
or
imul
dec
enter
test
inc
imul
jb
xchg
stos
dec
js
mov
test
ret
cs
sarb
test
je
fistpll
mov
mov
add
test
ret
sbb
ret
adcb
test
test
push
push
jmp
pop
push
push
sbb
sbb
and
shl
pop
push
test
xchg
cmp
testl
mov
ret
pop
pop
sub
mov
mov
or
jnp
popf
xchg
pcmpeqd
pop
scas
addl
push
test
aam
add
fldln2
aam
jne
adc
shll
push
sbb
nop/reserved
scas
cmpb
call
sbbb
inc
popl
add
cs
je
adc
sbb
cs
xor
or
jbe
mov
or
mov
test
insl
sub
pusha
das
add
push
inc
pop
leave
cmp
or
flds
lahf
mov
jmp
sub
bnd
sub
flds
mov
pop
and
add
enter
or
ret
gs
mov
or
jo
flds
test
and
xchg
mov
outsb
lcall
xchg
mov
pusha
pusha
pop
mov
shlb
fstl
inc
pop
flds
mov
sbb
and
into
ret
mov
push
inc
xor
sub
xor
fcoml
push
inc
repnz
mov
cmp
stos
or
or
outsb
sbb
or
mov
xor
add
inc
loope
or
add
mov
insl
mov
cltd
cmp
outsl
sahf
cmp
and
cs
pop
sbbl
xchg
lret
and
mov
and
popf
fcmovne
ret
and
dec
sbbl
popf
test
popf
push
add
xor
pop
mov
imul
add
addb
sbb
sub
xor
lcall
mov
popf
pop
adc
js
push
or
mov
popf
jno
push
cmp
adc
pusha
fstpl
cmp
popf
movsl
inc
popa
jo
lcall
ret
sub
rcrl
popf
imul
popf
lock
cmp
push
addb
jo
scas
sbb
mov
mov
push
popf
or
lcall
test
dec
rcrb
push
popf
pop
in
jo
sbb
pushf
fcoms
push
mov
or
sbb
inc
xchg
add
push
popf
mov
dec
popf
sbb
inc
imul
sub
stc
mov
xor
shlb
popf
imul
add
cmp
cmovbe
push
cmp
shll
shl
jns
xchg
xor
inc
pushf
dec
pushf
add
or
pushf
jl
and
daa
sbb
or
sbb
or
pop
push
loope
sbb
jnp
xor
inc
lea
push
mov
cld
ss
push
int3
mov
cmp
push
sar
insl
sbb
adc
xor
sub
push
pusha
mov
pop
gs
mov
addl
cmp
cmp
sub
push
test
and
push
mov
mov
sub
in
or
push
cmp
pop
pop
cmp
cmp
pop
sub
nop
and
or
sub
jmp
pusha
pop
shrb
xchg
out
nop
sub
sbb
and
fistpll
inc
and
adc
sbb
pop
mov
push
mov
test
pop
shrb
ja
test
xorl
out
sbb
mov
xor
or
mov
orl
add
cmp
ja
and
ret
sbb
inc
xorl
daa
xor
jl
push
shlb
adc
or
lea
test
hlt
call
int3
push
sar
aam
pop
jns
sbb
ret
mov
cmpsl
ret
insb
push
sub
hlt
sarl
fwait
push
ret
adc
js
shlb
pop
add
in
sub
inc
popa
add
jno
addl
sbb
or
loop
loop
jbe
fucomip
or
cmp
and
adc
sbb
addr16
enter
cmc
lock
and
js
mov
push
xchg
xor
and
notb
push
mov
lcall
mov
dec
pop
xor
cmc
add
xchg
pop
jecxz
mov
or
mov
lret
jno
cmc
jl
lret
fwait
mov
movsb
sub
enter
add
insb
xchg
fadds
lock
in
jb
and
int3
nop
and
in
dec
lds
sbb
lea
adc
cmp
in
add
xor
and
push
sub
shl
loopne
dec
mov
pushf
dec
pop
lcall
and
shrl
xchg
lahf
push
dec
fidivrl
mov
pop
cwtl
xchg
inc
adc
hlt
in
fldenv
xchg
or
cmpsb
push
mov
test
mov
ds
xor
fsubrl
and
xor
mov
call
mov
mov
add
pop
pop
cli
js
rcrl
mov
pusha
dec
push
cmp
pushl
shrb
mov
fmuls
cwtl
bound
sbb
mov
sbb
test
mov
xchg
xor
xchg
push
mov
adc
inc
cmp
xchg
shlb
jg
inc
and
mov
stos
sbb
mov
dec
pusha
sub
mov
mov
or
mov
in
add
dec
mov
add
push
sbb
push
cmp
mov
cmp
popa
xor
mov
and
adc
adc
sbb
sub
mov
mov
and
add
lods
xchg
test
je
pop
mov
mov
fs
aad
push
mov
sub
ret
sbb
cmpsl
pop
fwait
jl
mov
mov
adc
jp
cmpl
stc
mov
cli
decl
add
dec
jg
subb
test
adc
scas
and
inc
enter
mov
inc
add
notb
inc
push
and
loop
mov
enter
aas
scas
adc
adc
mov
bound
dec
mov
js
rol
pusha
adc
xchg
mov
call
cmp
ret
jbe
imul
aad
inc
jle
push
hlt
push
sbb
mov
inc
and
xor
mov
sbb
or
jb
sbb
pusha
xor
fdivl
inc
mov
xor
mov
push
js
imul
or
sbb
or
ljmp
mov
pop
adc
push
shll
push
mov
sbb
mov
or
mov
mov
cltd
or
push
mov
orl
sti
mov
sbb
les
adc
mov
sub
push
arpl
lods
cwtl
xlat
add
push
inc
lret
arpl
cld
fimuls
sbbb
mov
push
lea
mov
or
sbb
in
sbb
or
add
inc
into
sub
inc
cmp
popa
push
cmp
cmp
dec
inc
mov
add
out
pop
pushf
cmp
dec
sbb
adc
sub
or
push
mov
data16
arpl
push
or
cmp
cmp
sarb
or
push
js
cmp
shll
or
ret
or
aam
cmpl
sub
mov
cmp
add
in
adc
add
js
sub
lret
cwtl
inc
add
aam
addl
js
sub
or
lret
push
mov
cmp
adc
shll
ret
repnz
test
in
sbb
mov
xor
shll
or
push
cmp
cmp
sbb
test
or
sahf
setle
sbb
dec
pushf
stos
adc
jo
sbb
xchg
movsb
rcrl
or
aas
inc
addl
jecxz
mov
into
add
cmc
mov
pop
add
loopne
inc
cmpl
es
mov
mov
popa
inc
loopne
and
jmp
shrb
xor
adc
add
cmp
or
lds
sarb
arpl
add
sbbb
push
test
and
mov
cmp
inc
loope
cmp
or
sbb
out
and
cmp
push
stc
xor
sub
clc
jmp
sbb
push
xor
idivb
xor
mov
xchg
in
ret
xchg
xchg
insb
add
andb
adc
enter
outsb
dec
and
fsubs
lsl
sbb
cmp
or
or
test
push
test
push
jp
xor
cmpl
push
lahf
mov
leave
das
dec
or
cmp
or
jbe
add
subb
das
jns
inc
cmp
les
mov
nop
daa
addr16
dec
mov
lahf
cmp
movsl
push
in
sbb
fmull
push
clc
push
jecxz
inc
rcr
cmp
repnz
add
cmp
mov
mov
inc
loop
sbb
enter
dec
adc
adc
addb
ret
cmp
jbe
inc
cmp
jp
subl
sub
or
shl
pusha
xor
lcall
je
pop
jmp
fdivs
inc
push
jo
dec
ds
dec
loop
push
call
sbb
daa
clc
xor
adc
fidivrs
or
sub
loopne
cmpsb
sbb
push
mov
add
rcrb
sub
inc
cmp
test
ss
push
mov
cmp
fidivl
add
rcrb
lds
lahf
adc
push
add
movsl
push
cmp
or
sbb
fistpll
or
js
loopne
cmp
or
push
inc
loope
les
cmp
cmp
or
dec
mov
cmp
shll
or
out
mov
sub
mov
sub
mov
xor
inc
mov
mov
pop
mov
cmp
sbb
mov
xlat
xor
pushf
popa
lret
cmp
pop
aaa
inc
adc
sbb
or
xor
sub
dec
imul
jnp
mov
pop
sbb
out
ret
push
inc
loopne
inc
cmpl
sub
adc
adc
xor
cmp
popl
sbb
fnstenv
cwtl
adc
push
mov
mov
adc
rcrb
or
xor
push
cmp
mov
mov
shr
cmp
and
jnp
inc
push
in
subb
leave
mov
mov
adc
push
add
xchg
roll
lea
out
pusha
add
mov
push
add
and
cmp
mov
enter
lods
mov
insl
lcall
jb
mov
jb
rorb
and
sarl
shll
xchg
mov
xor
adc
aaa
test
cmp
jns
rorb
jle
int
test
loope
push
jmp
imul
and
mov
mov
add
or
inc
loope
add
mov
pop
test
mov
add
add
or
pop
call
add
xchg
inc
sub
jo
xchg
lods
aam
adc
jg
cmpsl
lret
mov
inc
loope
pop
cmp
add
sbb
adc
sbb
xor
jle
shlb
add
xor
mov
add
sub
mov
pop
xchg
add
arpl
or
push
xchg
add
jo
gs
add
and
lret
mov
sbb
push
fisubs
or
ljmp
and
mov
ret
sub
pop
rolb
loopne
and
das
lock
and
sub
pop
jno
adc
movsb
int3
add
inc
dec
mov
arpl
jge
je
dec
cld
xor
out
mov
rorb
out
and
jne
and
lahf
fnsave
hlt
mov
jae
and
xor
or
jne
pushf
push
and
fs
mov
ss
scas
mov
push
jae
pushf
or
pop
lret
adc
rcrb
add
cs
in
cld
arpl
or
or
pop
push
add
cmp
add
sub
imul
mov
insl
out
sahf
cmp
pop
or
lock
insb
arpl
rclb
popf
dec
mov
mov
out
mov
push
mov
mov
xchg
add
jno
sbb
pusha
and
or
cmp
jb
mov
cld
pop
imul
xor
dec
jmp
in
jg
sbb
fbld
xchg
lods
xlat
xchg
add
mov
mov
rcll
push
adc
mov
test
push
outsl
mov
gs
sub
xchg
push
test
or
test
stos
xchg
sub
jns
mov
push
hlt
mov
fnop
lock
push
cmp
subl
jb
mov
jae
xchg
xor
mov
jo
dec
jmp
nop
inc
push
dec
fwait
push
repz
hlt
or
dec
in
push
jmp
adc
adc
frstor
icebp
mov
and
in
cs
and
adc
jns
sbb
pusha
inc
je
arpl
pop
mov
jmp
in
mov
dec
push
out
pop
xchg
pop
adc
in
aam
pusha
push
xchg
sbb
sbb
pushaw
aaa
mov
addr16
push
add
sbb
xchg
cld
add
dec
jns
sbb
out
and
sub
orl
or
and
xchg
xchg
inc
push
or
clc
add
or
xor
and
popa
or
or
test
push
add
xchg
pusha
push
mov
cmp
mov
fildl
jecxz
or
addl
bound
push
test
mov
sub
test
pop
frstor
mov
sub
fcoml
test
aad
or
push
push
pop
lea
adc
or
adcl
test
fnsave
outsl
addl
lret
add
ret
xor
std
mov
dec
mov
xchg
mov
cld
fsubs
xchg
adc
jns
pop
mov
adc
call
stos
add
aam
push
adc
movsb
and
pusha
xchg
cmp
or
xchg
rcrb
xchg
xlat
dec
sub
call
push
popa
je
sbb
addl
mov
push
xchg
out
addl
pusha
adc
sbb
or
xchg
in
cld
inc
clc
jmp
pop
fcoms
push
addl
sbb
call
sub
fs
xchg
daa
mov
notb
xlat
cld
add
scas
sbb
or
xchg
and
xchg
stos
shll
push
mov
add
xchg
pop
mov
or
xchg
jbe
sub
dec
xchg
add
sbb
cmp
inc
shrl
imul
and
pop
inc
jp
mov
push
xchg
jge
jo
addl
jbe
stos
shll
push
in
inc
cmp
adc
popa
pop
cmp
jle
push
adc
enter
add
fdiv
sahf
and
inc
cmp
loope
xchg
adc
inc
loope
pop
popa
push
xor
mov
popf
gs
pop
out
orb
inc
sub
mov
sbb
test
xchg
sub
xlat
adc
sub
enter
sbb
and
or
or
sub
dec
mov
xchg
adc
dec
popa
push
pop
pushf
push
mov
popa
push
pop
aas
call
adc
pop
mov
test
add
sub
pop
push
lock
or
jno
push
jle
fisubrs
rcrl
test
mov
adcb
push
xlat
pusha
lods
adc
adc
and
cmpb
push
sbb
push
stos
xor
jno
sub
push
sbb
insb
push
or
push
add
push
test
add
subb
aas
js
xor
sub
xchg
push
jmp
cmp
out
add
jle
cmpl
stos
adc
arpl
inc
shrl
and
cmp
or
stc
rcll
nop
lds
jg
push
test
mov
nop
ret
pop
jbe
add
jp
or
stos
xor
orb
mov
stos
jmp
gs
loope
jb
sbb
rcll
test
pop
cmp
adc
adc
cmp
sub
cs
push
dec
xor
test
stos
in
mov
shl
mov
and
test
pop
test
pop
test
sbb
stos
ret
dec
sbb
push
sbb
jo
ret
jne
push
jl
or
lret
or
jb
jl
mov
or
stos
dec
or
loop
loopne
call
inc
or
movb
inc
stos
stos
push
sbb
loopne
or
pop
xor
mov
sub
lahf
lret
adcl
inc
sbb
lds
test
fcomps
loopne
inc
pop
xchg
inc
ds
mov
je
adc
mov
mov
mov
int
test
xchg
adcb
incb
jnp
dec
jmp
inc
sub
inc
adc
or
subl
and
in
add
test
ficomps
add
push
popa
push
stos
lock
fimuls
or
inc
dec
add
and
nop
inc
cmp
sub
xchg
lock
push
test
mov
sub
push
xlat
xchg
popa
or
add
xchg
enter
or
inc
add
push
or
cld
xchg
jo
and
insb
push
cmpb
inc
dec
lods
pop
jne
add
mov
cmp
fsubrl
aaa
push
dec
pop
cmp
mov
cmp
mov
xchg
cmp
and
cltd
or
or
add
dec
jmp
cmp
nop
pop
inc
push
subb
stc
ficoms
pop
mov
push
mov
mov
out
and
jge
or
aam
cli
shlb
call
mov
iret
cmpsb
inc
or
dec
adc
add
jns
xor
adc
sbb
sbb
push
fs
sbb
aas
push
popa
and
sbb
xor
popa
sbb
and
jne
push
popa
or
add
shll
loope
test
les
stos
or
sbb
jb
scas
sbb
push
dec
xor
sbb
pusha
pushf
or
xor
xchg
sub
jle
sub
push
cwtl
clc
adc
pop
adc
popa
adc
sub
dec
les
cli
dec
push
xor
cmp
xchg
ret
adc
rorb
sub
ja
sub
pinsrw
dec
mov
sub
adc
ret
dec
daa
out
jnp
push
sbb
mov
or
adc
gs
lcall
or
shlb
inc
loope
call
sbb
sub
fsubl
iret
lret
pop
lret
or
push
push
sti
xor
daa
mov
daa
aas
arpl
das
adcl
push
sbb
fidivl
adc
les
test
rolb
push
cmp
pusha
shrb
rolb
inc
gs
popf
lods
insb
sbb
inc
dec
push
dec
dec
in
outsb
pop
sbb
mov
out
xor
mov
mov
int3
xchg
mov
and
in
or
and
mov
mov
ja
fstpt
shll
in
or
or
scas
ret
mov
lahf
cld
pop
xchg
loopne
pushf
popa
push
pop
or
dec
adc
sub
out
les
jp
rcrb
and
cwtl
xor
pusha
dec
dec
test
dec
addl
or
dec
xor
faddl
add
popa
dec
test
bnd
addl
push
addl
dec
addl
nop
xor
adcb
cmp
jne
aad
sbb
cs
addr16
sbb
sub
andl
lds
adc
shlb
and
xorl
shrl
inc
cld
lea
jg
jl
pushf
and
js
mov
insl
lret
dec
mov
daa
icebp
call
adc
aam
xor
and
ja
pop
lock
sbb
insb
or
and
je
fsubrp
pop
push
nop
call
mov
fwait
js
sti
cmp
and
mov
insb
or
sti
fs
mov
sbb
fsts
in
push
sti
aam
loopne,pn
push
adc
and
lret
xchg
mov
sti
fistl
lret
sbb
mov
push
cmp
jmp
addb
xchg
dec
push
dec
inc
pusha
pop
adc
out
xor
cwtl
mov
dec
sub
mov
das
in
inc
loopne
pop
inc
sub
shr
dec
sahf
in
enter
or
aas
in
xchg
push
sub
aam
test
push
mov
jb
incl
pop
xorb
jle
sub
cmp
ret
push
add
push
cs
push
mov
cwtl
mov
and
fstpt
mov
fdivrs
sahf
mov
and
mov
sbb
jmp
ja
test
lcall
sbb
xchg
pop
push
mov
adc
inc
push
outsl
dec
int3
push
inc
mov
fnstsw
aad
jmp
jmp
cmpsl
push
fsubr
mov
mov
cmpb
and
mov
lahf
stc
cmp
iret
jo
pop
subl
cmp
call
jno
arpl
dec
xor
mov
clc
mov
in
mov
jae
dec
es
in
push
fstl
pop
shll
call
out
push
fbld
movsb
sbb
push
mov
repnz
jle
inc
mov
pop
das
push
push
sbb
sahf
lahf
mov
dec
jnp
adc
fisubrl
push
mov
dec
push
sarb
sub
stc
mov
mov
out
ss
jb
jecxz
loopne
fcomp
cmp
and
mov
ret
js
jbe
push
or
adc
inc
test
clc
out
jns
pop
add
test
cld
sub
push
pop
ret
mov
lcall
adc
adc
repnz
jnp
mov
adc
cltd
xor
insl
sbb
cltd
adc
push
out
push
push
mov
clc
mov
mov
je
pop
add
aas
push
repnz
jbe
loopne
loopne
inc
or
push
cmp
es
ffreep
cmp
mov
cmc
nopl
shr
jns
sub
xor
push
cmpl
push
js
push
call
push
test
mov
lcall
js
mov
sub
fs
neg
stc
in
mov
push
fwait
push
lcall
lahf
jle
pop
sarb
push
sbb
ja
jl
push
aaa
inc
jl
xchg
popf
ss
in
push
fucomip
xor
xor
into
jg
lret
fisttpll
lock
scas
jae
sbb
xchg
lock
dec
xor
decl
mov
push
fisubrs
mov
js
ds
sbbb
xchg
push
sub
cmp
dec
movsl
cltd
int3
add
mov
jns
mov
punpckhbw
inc
push
scas
js
mov
sub
scas
repz
pop
addb
pop
out
mov
ds
test
or
das
push
out
cwtl
shrb
dec
push
add
faddp
insb
mov
ljmp
lods
jg
iret
cmp
pushf
scas
pop
mov
pop
mov
jno
movsl
mov
in
lds
mov
out
push
aas
insl
and
and
mov
daa
pusha
jae
mov
jmp
js
pop
jbe
mov
outsb
xchg
dec
sti
or
popf
cltd
stc
inc
mov
das
test
adc
push
loopne
cmp
or
insl
jnp
push
mov
inc
cmc
dec
adc
cli
and
dec
add
int3
mov
ja
dec
sbb
movsb
jb
mov
test
fdivl
and
pop
add
adc
cli
and
cwtl
lret
xchg
stc
xor
dec
xor
nop
mov
push
sbb
push
push
test
leave
outsb
or
push
pop
fcomps
repz
nop
outsb
nop
lret
clc
outsl
cmp
gs
ja
add
and
push
sbb
test
notb
push
push
pushf
fidivl
push
inc
jle
add
push
jno
jl
xchg
xchg
fnsave
addr16
sbb
jns
je
and
fldcw
push
cmp
enter
gs
dec
cs
mov
js
dec
xchg
push
dec
push
add
jb
das
xor
xchg
push
aas
popa
aas
sbb
and
aam
fsub
fs
mov
nop
cmp
xor
dec
cmpb
ja
sbb
or
sbb
test
adcl
pop
mov
xchg
inc
sub
jo
gs
lret
lods
push
in
inc
jo
aas
idivb
imul
inc
jmp
sbb
xchg
xor
push
sbb
add
daa
sub
in
and
mov
nop
enter
movsb
repnz
jb
mov
outsb
in
xor
xchg
loopne
nop
sbb
mov
aas
push
xlat
outsl
mov
mov
inc
jl
push
test
lret
jbe
loop
aaa
xchg
cli
shlb
into
in
dec
ja
mov
frstor
inc
xor
les
call
push
cmp
in
lea
pop
xchg
cs
pop
mov
sub
push
inc
outsb
add
mov
push
mov
and
xor
outsb
add
sti
inc
fdivr
psubusb
outsb
pop
push
aas
cmp
xchg
sbb
cwtl
push
decb
aas
shl
inc
sub
clc
xchg
call
scas
fcoms
push
mov
fisttpl
test
cmp
pop
mov
jmp
inc
dec
xor
dec
push
fidivrl
push
sub
and
out
push
fimull
data16
rcrb
roll
sbb
mov
shrd
enter
mov
std
xchg
cmc
xchg
in
xchg
dec
es
xorb
shll
dec
mov
add
xor
call
mov
pop
jns
jmp
fwait
push
pop
stc
mov
and
cwtl
loopne
rcrl
cmp
xor
gs
in
js
jmp
inc
jl
cmp
mov
cmp
or
dec
mov
xlat
cmpsb
jo
mov
in
or
inc
pop
call
xchg
adc
push
or
cmpsl
dec
mov
jb
xchg
outsb
shrb
in
call
pop
or
jle
out
stos
sbb
jecxz
fucomp
fwait
inc
push
repnz
aaa
jmp
or
call
xchg
or
mov
mov
mov
shrb
aam
xor
aas
sub
pusha
push
pop
sub
lock
pop
sub
je
xor
out
sub
es
in
rol
adc
out
mov
push
cmp
testb
mov
fisubrs
nop
fadds
sub
or
pop
mov
xchg
fistps
mov
nop
lret
inc
push
inc
xchg
dec
mov
outsl
rorb
addb
outsl
mov
outsb
and
aas
fmuls
repnz
sbb
add
sub
cmp
push
dec
xor
sbb
fstl
mov
sub
jns
or
insl
xlat
inc
pop
mov
fstpl
inc
lahf
inc
into
test
pop
imul
mov
mov
pop
jno
inc
scas
adc
cmpsb
filds
addr16
fsts
nop
inc
decb
pop
push
lods
xchg
cmp
decb
push
aas
push
pop
adcl
ja
aas
iret
pop
pop
out
daa
jge
xchg
inc
jg
aas
xadd
out
push
mov
cmpsl
ss
clc
lea
mov
ficoms
dec
test
aad
sub
inc
je
setb
addr16
jbe
ljmp
popa
lds
lret
push
adc
sub
dec
lret
test
xchg
les
xor
pop
adc
scas
sbb
xor
fs
cmpsb
and
mov
pop
loop
mov
add
icebp
mov
ja
push
inc
pop
inc
stos
adc
dec
shlb
pop
pop
pop
add
nop
xchg
mov
pop
xchg
mov
outsb
mov
add
lret
cmp
in
xchg
cmpsb
mov
lahf
cld
inc
rorl
out
hlt
std
jb
adc
cli
and
addr16
scas
clc
sub
mov
pop
sub
pop
ds
add
sahf
inc
enter
dec
jle
mov
dec
or
inc
jg
pop
movsb
repnz
leave
inc
js
ds
ds
test
pop
aas
push
test
loopne
enter
lods
pop
jge
loopne
sti
pop
or
cli
mov
decl
out
dec
mov
subb
pop
movb
pop
and
xchg
inc
jge
loopne
mov
mov
push
cmp
wrmsr
lahf
test
repnz
pop
daa
jg
push
adc
dec
call
push
pop
fidivrs
xchg
outsb
sbbl
aas
push
mov
dec
jle
in
repnz
leave
and
fsubrp
lods
rolb
clc
sahf
es
inc
jns
push
mov
fdivrs
adc
dec
in
aam
mov
lahf
push
rolb
xlat
in
jge
and
mov
push
rclb
imul
jle
pusha
and
mov
pusha
push
xchg
sub
jle
mov
aas
inc
lahf
insl
xchg
das
vpmaxsw
pop
ret
adc
call
pop
pop
xchg
mov
and
ljmp
outsb
test
aas
push
jmp
mov
cwtl
cwtl
imul
sub
mov
pushf
inc
sub
shr
sub
dec
loopne
adcb
xchg
pop
jecxz
enter
add
mov
test
into
add
scas
ds
cmp
in
cs
ds
mov
sbb
movsb
push
mov
sub
vmwrite
test
mov
ds
cli
test
dec
arpl
repnz
xor
popa
in
aam
mov
mov
sbb
xor
push
sub
jecxz
rcr
or
sub
dec
adc
xchg
out
rcrb
inc
cld
sub
fst
pop
sahf
cld
ja
adc
sub
mov
sub
adc
dec
in
or
in
fldcw
cmpl
sarb
nop
adc
frstor
or
push
inc
adc
adc
inc
enter
and
in
vmwrite
mov
mov
mov
push
mov
jns
inc
push
addr16
cmp
and
push
mov
push
repnz
xchg
mov
vmwrite
inc
pop
mov
mov
mov
cmp
and
call
test
jmp
outsl
push
iret
pushl
xor
icebp
sbb
stos
adc
push
test
mov
mov
push
daa
lahf
add
cmp
aaa
movsb
sbb
in
or
sub
gs
lret
push
xor
loopne
sbb
or
cmp
pop
mov
mov
test
or
ret
sub
cmpsl
test
sub
or
shrb
in
cmp
inc
in
out
repnz
ss
fsubr
adc
xor
pop
sub
xor
cmp
xchg
testl
cbtw
xor
xchg
outsb
xor
sub
loopne
xor
aas
cmp
add
inc
scas
jae
fbstp
lock
and
xchg
lds
test
mov
and
push
add
cmp
stc
push
cmp
cmpb
sub
dec
or
mov
xchg
loopne
clc
aas
push
and
push
test
sbb
xchg
out
popf
jo
enter
test
aas
shll
lahf
ljmp
fldl
xor
adc
inc
lret
repz
mov
cs
and
inc
movsl
mov
adc
clc
bnd
dec
mov
fisttpl
mov
out
icebp
hlt
adc
push
sub
sarb
sub
in
mov
lds
dec
cwtl
sbb
ds
dec
xor
test
push
aam
enter
movsb
pop
adc
imul
sbb
fistps
outsb
imulb
xadd
mov
insb
add
sbb
adc
fldl
in
clc
fwait
mov
ret
dec
cmp
mov
mov
andb
pop
push
dec
fstl
aas
movsb
pop
dec
ds
sbb
sti
fbstp
xchg
lret
sub
xchg
cmp
outsl
and
insl
aam
adc
fsubs
out
mov
test
push
jns
lods
xor
fdiv
xor
mov
push
andb
imul
in
sbb
xchg
inc
decb
push
push
enter
lds
ds
loopne
fildl
mov
lret
cmpl
sub
outsb
dec
aas
je
in
pusha
cmc
stc
xchg
or
push
pop
pop
test
pop
mov
xor
and
lahf
stos
das
dec
dec
scas
dec
and
call
xchg
scas
jge
adc
pushf
add
mov
pop
cmpb
dec
das
outsl
sbb
ja
ret
push
xchg
subb
xchg
cmp
push
fmulp
call
andb
cmp
out
decl
aaa
aam
sbb
cmc
push
push
adc
cmpl
pop
enter
add
nop
pop
ds
cmp
scas
mov
outsl
sbb
fisttps
sbb
lds
jnp
mov
js
pop
jmp
mov
mov
ds
mov
mov
push
jb
xor
rcll
sarb
mov
mov
xor
in
aas
pop
jo
aam
jnp
jmp
mov
enter
lret
cwtl
inc
jno
je
subb
nop
insl
jo
mov
ja
lods
xor
jnp
push
insl
and
xor
fiadds
xchg
add
loopne
stc
icebp
add
jp
jae
sahf
xor
lds
mov
xor
rolb
push
jmp
mov
xor
mov
jae
xor
push
mov
push
movsl
jb
loopne
xor
pop
repnz
fdivrl
and
je
nop
inc
sub
sbb
push
lea
push
xchg
jo
popf
xor
leave
stos
pop
mov
xchg
dec
mov
decl
push
and
pop
mov
dec
mov
pop
mov
pop
lcall
adc
dec
sub
or
shrl
pushl
scas
les
push
mov
das
fbstp
mov
adc
js
mov
push
mov
das
pusha
pop
jns
xchg
ds
xor
mov
adc
fcompl
shlb
in
fisubrs
jbe
cs
push
fimull
enter
push
add
ret
rcr
jmp
lods
mov
push
xchg
dec
cmpsl
cltd
mov
inc
mov
or
lret
into
add
ja
mov
cs
cmpsl
imul
push
sahf
cs
mov
dec
jne
ds
nop
dec
cwtl
in
dec
sub
fbstp
repnz
xchg
sbb
test
jns
dec
pop
or
stos
mov
stos
mov
jo
pop
repnz
xchg
lcall
jns
dec
cmp
xchg
mov
pop
repnz
test
and
test
test
icebp
cmc
jnp
sti
cld
js
stos
outsl
fldl
mov
and
andb
sub
aaa
enter
pop
sub
xchg
dec
movsl
lahf
jae
cmpb
cmpb
or
mov
xchg
inc
cmp
or
jo
push
clc
das
push
xor
scas
rcrb
outsb
adc
loope
mov
add
adc
mov
or
add
lahf
xor
inc
inc
jecxz
cmp
push
pop
call
xchg
aaa
adcb
mov
inc
jb
adc
fsubs
sbb
sti
cmpsl
bound
or
insl
cmp
jnp
enter
aas
jmp
iret
mov
nop
mov
jmp
ds
enter
cwtl
jnp
sub
xor
movsl
push
rol
cmp
and
push
fcmovu
in
lcall
aas
test
test
clc
push
sub
xor
jp
imul
push
scas
mov
icebp
push
push
sti
repnz
cltd
sbb
jl
fcmovne
addr16
in
mov
xchg
lret
sub
mov
xchg
lret
in
push
adc
jo
stc
xchg
lret
punpckhbw
nop
jl
and
jae
lret
aas
mov
into
dec
jge
outsl
add
outsb
sub
push
cmp
push
movsb
aas
and
or
mov
dec
testb
or
push
movsl
fldcw
das
orb
mov
popa
push
aas
dec
xor
mov
inc
mov
test
pop
jle
sub
pusha
outsb
jmp
xor
mov
mov
or
lods
inc
call
out
adc
ds
incl
and
mov
sub
out
daa
or
pop
dec
into
enter
aas
and
mov
fstpl
dec
push
sbbl
push
movsl
lahf
pusha
inc
enter
inc
sub
cmpsl
test
cmp
cmp
or
mov
inc
and
movsl
repz
and
adc
je
sub
es
out
xor
fisubs
decb
pusha
repz
punpckhbw
mov
cmp
inc
mov
xor
enter
addl
cmp
data16
mov
addr16
sbb
cmp
add
push
or
and
pandn
leave
pop
fisttpl
mov
daa
sub
lods
push
mov
orl
jo
sbbb
cmp
sub
jecxz
jns
mov
push
fcmovb
aaa
data16
cmp
test
daa
sub
outsb
andb
call
imul
sbb
test
pop
push
ja
xorl
xchg
lret
sbb
and
fs
lret
shlb
ror
cmp
test
mov
cmpsl
mov
sub
dec
xchg
xor
ja
cwtl
dec
in
nop
push
mov
in
js
aas
ja
sub
jns
arpl
push
jns
jnp
pop
push
cmp
rcr
jbe
add
xchg
mulb
in
je
xorl
sub
divb
xchg
adc
and
jle
jmp
ds
mov
mov
clc
jmp
daa
pop
inc
rorl
xchg
test
xor
sub
inc
lods
repnz
mov
push
pop
jnp
pop
pop
push
xchg
andl
daa
nop
pop
push
mov
push
jns
dec
xor
or
je
cmp
and
adc
es
and
sub
dec
push
sub
js
mov
pop
cmpsl
mov
mov
lcall
mov
xchg
xor
sbb
mov
sub
mov
cli
fwait
lods
xor
xor
inc
push
ja
and
mov
push
notrack
push
subb
xchg
jo
iret
out
je
addr16
les
and
xchg
scas
fdiv
and
sub
repnz
rorb
sbb
sub
push
stos
push
jnp
test
jg
inc
push
imul
pop
pop
xchg
inc
ficoms
lea
push
add
add
or
inc
daa
adc
sbb
inc
mov
push
lock
push
ror
jmp
daa
dec
cmp
mov
and
adc
loopne
rcr
sbb
incl
sbb
push
sub
cmpsl
das
fs
jg
xchg
data16
push
dec
sub
cmp
or
in
call
jnp
lock
cmpb
pop
dec
clc
out
cmp
cmp
es
faddl
xchg
fldenv
adc
popa
pop
test
iret
sbb
mov
sub
ficomps
push
jns
push
xchg
nop
es
xor
icebp
pop
pop
movsl
cmp
js
mov
mov
frstor
xor
enter
sub
push
int3
lock
sbb
sbb
in
in
sbb
aaa
ss
push
insb
jge
sahf
insl
repnz
repz
xlat
mov
xchg
lcall
js
cmp
cmp
xchg
es
cmp
dec
adc
fldl
mov
addr16
inc
mov
sbb
dec
movsl
cltd
dec
cwtl
nop
push
enter
xchg
or
pop
and
stos
push
adc
ss
dec
push
jns
and
repz
add
test
jbe
inc
cmp
inc
add
or
call
lcall
rorb
divw
and
sahf
cmpsl
stc
mov
test
sahf
out
mov
out
sahf
out
inc
xor
adc
repz
or
test
into
mov
cmp
lcall
repz
ds
out
lcall
sahf
out
sahf
mov
pushf
xchg
xchg
sahf
out
outsb
fs
inc
cmp
jnp
out
and
add
in
cmpsb
sahf
cmpsl
fnstcw
stos
shlb
out
mov
jns
out
xor
mov
jns
out
push
ret
mov
jns
out
jo
push
inc
cmp
cmp
cmp
scas
enter
test
repz
repz
inc
xor
adc
dec
popf
fidivl
int3
mov
ds
repz
sub
push
cld
scas
jns
out
repnz
ret
jns
out
xchg
bound
xor
add
jns
cmpsl
flds
hlt
lahf
loopne
mov
out
sahf
out
test
int
jns
inc
xor
adc
sahf
in
iret
repz
enter
repz
repz
fs
inc
fdivp
cmp
cmp
sbb
loop
cmp
repz
aam
mov
ds
jle
pop
popf
into
scas
add
pop
push
aam
mov
jns
xchg
xchg
out
sahf
out
cmp
push
iret
repz
add
lods
fmul
mov
repz
into
sub
sbb
negl
xorb
push
pop
inc
negl
add
ds
mov
js
push
mov
cmpsl
stc
call
push
andb
mov
rcll
dec
dec
jns
cmp
mov
out
sahf
out
mov
sahf
rcl
lock
or
sbb
xor
push
out
push
repz
out
sahf
sahf
mov
int3
fsub
cmp
sarl
movsb
cwtl
test
cmp
repz
out
lcall
mov
out
sahf
movsb
xchg
mov
push
jge
out
ds
push
clc
movsb
sahf
out
push
into
shrb
jns
insb
pop
dec
inc
repz
out
sbb
cld
mov
lock
mov
mov
repz
jo
pop
dec
xor
out
cmp
mov
add
repz
sub
dec
push
iret
repz
fs
mov
stc
cmp
repnz
cmp
repz
dec
pop
jo
repz
repz
idivb
xchg
mov
and
jns
out
dec
pop
outsb
orb
mov
loop
cmpsl
stc
cmp
push
mov
sub
push
iret
repz
or
mov
cmp
repz
test
mov
cmp
repz
fstpt
ds
adc
cli
mov
push
stos
repz
cmp
jp
pushf
lods
mov
push
dec
adc
sub
ds
repz
stos
movsb
mov
xchg
out
mov
or
mov
push
je
aaa
js
into
gs
mov
push
repz
data16
testb
ja
push
jb
push
stos
cmp
xchg
add
addl
daa
mov
fistps
shll
mov
or
clc
and
jge
fbld
pop
push
add
jo
push
repz
rcr
loopne
iret
repz
ljmp
iret
repz
cli
sti
cld
std
cmpsl
sbb
repz
pushl
push
add
add
sahf
out
pop
sbb
sbb
out
sahf
out
sbb
out
sahf
and
and
jns
sub
sub
out
sahf
out
sub
out
sahf
xor
xor
jns
cmp
cmp
out
sahf
out
cmp
out
sahf
inc
inc
inc
inc
inc
inc
jns
out
inc
dec
dec
dec
dec
out
sahf
out
dec
dec
dec
push
sahf
out
sahf
push
push
push
push
push
push
jns
out
push
arpl
out
sahf
out
mov
aad
iret
sarl
cld
adc
cmp
repz
pop
imul
cmp
rep
mov
jns
iret
testb
or
sahf
out
sahf
cmp
pusha
insl
jb
jns
out
xchg
stos
mov
mov
fldl
sbb
cmp
repz
push
pop
insl
jnp
cmp
repz
repz
mov
ret
int3
aad
lcall
push
ficoms
jns
out
sub
push
data16
jns
out
xchg
mov
jge
jecxz
add
outsb
push
and
out
sahf
out
pop
outsb
jle
mov
cmp
movsl
and
outsb
gs
xor
ja
outsb
insl
insl
or
pop
xor
push
mov
pop
movsl
sub
push
pop
adcb
test
les
and
add
add
adc
adc
inc
or
sbb
push
ret
imul
pop
ret
rcpps
in
inc
outsb
jne
dec
push
ret
jae
add
pop
push
imul
pop
ret
and
adc
in
rcll
add
push
scas
cmp
ss
jb
inc
and
dec
lock
setno
xchg
xchg
adc
pusha
jne
addb
pop
out
or
pop
and
call
insl
pusha
pop
push
outsl
imul
or
jo
imul
gs
sbb
inc
lea
xor
add
addr16
shll
inc
push
dec
sub
outsw
aas
and
pusha
or
cmp
jb
dec
add
dec
jae
rolb
xchg
nop
imul
mov
outsb
mov
pop
and
and
sbb
mov
sub
inc
inc
xor
test
and
lods
pusha
or
and
or
adc
adc
ja
shrb
mov
fsubp
fdivl
fmuls
mov
stc
ds
or
test
ss
in
lock
add
add
ret
pop
mov
outsb
cmpsl
fnstsw
repz
roll
add
pusha
pop
mov
jo
add
xchg
addr16
leave
es
or
inc
push
lock
ss
fldcw
xor
xor
es
mov
sarl
ds
add
cmp
jmp
inc
xor
addr16
push
nop
dec
dec
pusha
aas
jns
cmp
pop
outsb
rorb
and
adc
fidivrs
inc
push
inc
outsb
jo
xor
neg
ja
rorb
cs
pop
xor
mov
pop
shrb
jno
adc
push
jecxz
adc
inc
cs
push
push
and
xor
pop
enter
inc
lock
pushf
inc
mov
pop
inc
mov
dec
add
mov
inc
xor
inc
add
mov
repz
adc
dec
imul
push
inc
and
lahf
mov
iret
jle
xchg
xchg
sbb
stos
dec
or
inc
test
call
mov
cmpsb
xlat
adc
cmp
adc
inc
outsl
insl
in
push
rorl
sahf
cmpsl
stc
das
push
mov
add
xor
inc
adc
lcall
les
push
mov
out
and
push
daa
inc
xor
add
movsl
add
jg
mov
cmpsl
leave
call
mov
mov
shll
pop
pop
adc
xor
xor
cmp
xor
imul
jg
and
mov
mov
xor
jg
lcall
mov
lret
aad
and
test
daa
dec
ret
enter
mov
mov
sub
aas
gs
and
addr16
arpl
iret
sbb
sub
mov
ret
idivl
ret
or
or
dec
sub
dec
int
out
loopne
leave
and
fcmove
test
rol
mov
shll
mov
push
lock
mov
inc
orb
ja
jge
lock
dec
cli
xlat
mov
ffreep
add
int3
leave
stos
sub
stos
ror
mov
mov
or
into
icebp
mov
mov
mov
mov
jge
ret
mov
mov
shr
sar
int3
jge
sub
jmp
jb
insl
imul
jo
jo
imul
shrl
and
fdivs
mov
fsts
lret
mov
dec
ret
shlb
bound
sub
and
fildll
aas
push
sub
jbe
gs
cmpsl
xchg
aas
pop
je
xor
aaa
fdivrs
mov
or
testl
shll
ja
clc
cmpsl
mov
aaa
mov
mov
loope
mov
mov
les
xor
fcoms
movsl
pop
mov
mov
adc
mov
xor
xor
push
mov
cmp
push
push
outsb
mov
push
test
lods
mov
fsts
sub
and
je
jo
jo
jb
inc
inc
and
push
addl
mov
mov
mov
neg
mov
xor
dec
inc
inc
and
push
inc
push
sub
in
std
inc
insw
je
adc
add
push
push
inc
push
nop
add
pusha
add
and
or
push
push
push
add
lock
icebp
sbb
outsb
in
pop
sti
pop
repz
out
outsb
icebp
push
fdivp
fidivrs
ret
addr16
push
cli
pop
add
repz
add
add
sbb
add
in
incl
xor
pop
add
add
cmp
and
add
test
inc
add
pushl
fmull
incl
jae
push
cmp
jbe
and
int3
std
xor
fists
add
add
std
add
add
nop
fistpll
out
aas
add
decl
scas
add
cld
lret
divl
fbld
or
std
addr16
mov
add
mov
inc
add
jne
push
std
and
xor
xor
dec
xor
push
std
jo
call
add
incl
ja
sub
inc
sti
mov
std
movsl
stos
add
dec
add
inc
add
add
sti
mov
xchg
decl
add
add
add
add
add
add
add
ja
call
or
ljmp
or
add
dec
add
cld
dec
clc
mov
std
push
sbb
add
pop
add
lcall
sbb
std
aam
jbe
pop
add
add
add
clc
and
fcomip
ljmp
pusha
add
add
pop
sub
add
stc
cmp
roll
pushl
lods
pop
lock
das
push
inc
add
pop
ljmp
xor
scas
std
mov
dec
add
sti
pushl
aad
jge
popa
std
adc
sub
xchg
mov
call
popf
sar
xor
in
std
imul
cli
std
cmp
icebp
cld
mov
enter
add
cmp
inc
ficoml
push
in
addl
add
mov
cld
jg
pop
add
adc
add
arpl
add
pushl
mov
out
push
call
stc
jmp
clc
mov
cwtl
stc
pop
cld
jae
xchg
cli
mov
add
add
daa
stc
sti
ss
movsb
cld
push
mov
ljmp
incl
pop
add
je
or
xor
mov
or
pop
dec
push
les
dec
push
mov
add
add
decb
cld
and
shl
mov
out
push
cld
fsubrp
sub
ljmp
divl
cmc
inc
cmc
jo
cltd
sti
mov
dec
add
add
adc
jmp
or
or
or
push
fimuls
lahf
pmaxub
mov
adc
or
push
sbb
add
push
add
clc
sub
icebp
push
in
aaa
call
sub
decl
out
mov
pop
cmc
dec
testb
fcomi
jmp
lods
negb
xchg
cld
fldl
inc
pop
ret
decl
lret
pcmpeqd
dec
adc
adc
xchg
adc
adc
adc
adc
adc
adc
push
jae
dec
sete
decl
jnp
enter
psubq
sti
imul
negb
repz
in
call
fsubrl
faddl
jge
xor
in
push
incb
sti
and
xlat
cld
test
or
jmp
pop
mov
pop
popa
sbb
adc
adc
sbb
xchg
test
adc
inc
push
or
test
hlt
cli
repnz
adc
ljmp
ret
cmp
loop
iret
into
shl
fcomp
loopne
repnz
jp
jg
add
xor
test
sbb
pop
sub
outsb
push
bound
sub
inc
or
or
or
push
push
or
pop
add
mov
decl
out
lahf
in
jae
je
jmp
in
ljmp
imul
fadds
loope
out
adc
mov
adc
or
je
pushl
nopl
cmp
sbb
push
dec
and
adc
or
cmpb
iret
add
add
add
add
icebp
mov
jmp
out
sar
mov
in
mov
adc
pop
fidivrl
test
stc
jo
or
adc
adc
adcl
push
xor
repz
xchg
adc
sbbb
push
mov
movl
pushl
std
stc
jns
loope
mov
std
cmc
clc
jbe
add
inc
stc
inc
repz
ljmp
in
jno
mov
cld
in
loope
in
in
aam
daa
pop
sbb
fimuls
jecxz
into
adc
adc
xor
jno
ds
adc
adc
push
daa
adc
adc
or
rolb
cld
enter
lcall
clc
xchg
clc
imul
jne
es
pop
cli
pop
stc
push
clc
sbb
xchg
out
mov
pusha
call
pushl
pushl
loop
out
push
cld
js
lds
push
test
adc
push
lahf
adc
and
lcall
imul
sub
cli
jg
in
xor
cld
idiv
loopne
add
repz
das
testl
fsubrp
xchg
out
insb
pop
cmc
pop
icebp
out
mov
frstor
in
icebp
add
adc
pop
cld
mov
fmulp
adc
adc
adc
scas
adc
lret
call
loopne
adc
adc
mov
stos
std
mov
stc
or
std
sbb
sbb
push
sbb
out
jb
inc
repnz
stos
in
sub
jecxz
fcoml
rcr
stos
ljmp
pop
movlps
push
pop
pop
loop
popa
adc
xchg
adc
sbb
add
jg
std
or
pop
femms
or
add
jmp
decb
sti
xor
inc
cmp
mov
xlat
sti
outsl
imulb
icebp
mov
shr
sbb
cmp
cs
decl
in
fdivp
xlat
outsb
aam
fdivrl
add
ljmp
push
pop
sbb
cmp
cli
adc
mov
mov
adc
push
adc
or
or
std
mov
std
sahf
add
test
aam
movsl
std
cmpsb
sti
mov
repz
mov
xlat
add
xor
pop
aad
ror
xlat
popf
in
repz
lcall
ds
or
adc
push
lock
xor
pop
sub
inc
sbb
push
xor
fwait
jbe
jp
push
rclb
and
or
add
pop
in
add
loopne
lcall
aam
jle
fcomip
inc
mov
mov
jecxz
fisubl
sub
mov
mov
and
incl
enter
xchg
stos
pop
aad
bound
lds
adc
adc
jno
inc
btr
push
adc
call
lea
orb
push
pusha
add
sbb
dec
ss
mov
push
add
stc
and
jl
pop
out
loopne
fstps
push
push
ret
mov
out
and
pop
ljmp
sbb
sbb
push
adc
incl
or
scas
stc
push
inc
adc
pop
mov
ret
or
call
or
or
add
lock
mov
xor
int
sti
cli
out
push
cld
insl
lds
jp
or
adc
sbb
ljmp
sbb
sbb
pop
adc
xlat
or
push
mov
and
outsl
clc
mov
pop
cltd
or
test
xor
mov
jmp
or
add
stc
cmp
cmp
test
lds
jb
and
jmp
clc
or
inc
or
or
adc
sbb
sbb
adc
call
or
add
add
add
or
or
or
or
mov
pushl
mov
fucomip
shl
loopne
fimull
lret
pop
loope
cmc
cmpsb
add
psubb
jmp
setno
dec
or
stos
or
psrlw
adc
iret
or
packssdw
decl
pusha
ljmp
xchg
add
sbb
mov
and
cmc
fistpll
fmuls
mov
jp
nop
add
ret
out
push
loope,pn
fscale
dec
dec
les
fimuls
adc
hlt
sbb
sbb
sbb
aaa
pop
pop
push
bound
hlt
add
add
das
stos
clc
pop
call
add
push
add
add
jne
add
mov
pop
adc
pop
ljmp
adc
outsb
adc
repz
xor
lock
lcall
into
sbb
add
aad
icebp
cmp
adc
push
adc
mov
push
xchg
add
ds
push
add
and
incl
std
pop
lcall
push
test
pop
adc
call
adc
cmp
clc
lods
in
in
jge
xchg
fsts
int3
mov
jmp
jmp
mov
pop
push
and
and
add
push
cld
das
into
sub
stos
dec
add
or
and
add
std
pop
and
push
std
mov
or
or
mov
out
fisubrl
or
out
lcall
fsts
div
mov
and
sub
add
test
mov
sti
jmp
in
inc
repz
rorb
gs
or
add
push
add
inc
or
or
or
push
or
add
imul
out
fmul
push
leave
pop
rcl
pushl
adc
stos
cs
pop
add
call
fcmovu
cmp
add
pop
pop
push
inc
push
sub
sbb
add
dec
push
into
pushl
icebp
push
mov
jmp
dec
sub
pop
hlt
add
fldenv
roll
lret
cmpsl
enter
neg
test
dec
sub
das
xchg
ss
clc
adc
push
not
sbb
inc
loop
lock
stc
loop
and
out
faddl
cmpsl
add
pushf
fcomip
ljmp
mov
out
dec
or
xchg
add
call
fst
inc
sar
sub
ror
add
pop
sti
xor
scas
and
sahf
xor
and
sbb
filds
dec
std
clc
aam
in
pop
loope
lock
cli
mov
push
inc
std
incl
bound
add
add
push
fmull
js
cmpsl
adc
push
and
or
decl
lock
push
ror
ret
push
iret
repnz
sbb
daa
mov
ds
xor
loope
push
add
mov
fistl
ljmp
rclb
imul
adc
adc
pushl
push
mov
mov
cmp
ss
negb
jmp
jecxz
fnstcw
mov
cmc
jmp
decl
xor
mov
cmp
push
call
fstpl
fcoms
pop
add
and
mov
les
cltd
adc
adc
push
clc
and
les
xchg
push
inc
ljmp
adc
stc
adc
push
shrb
leave
push
mov
call
mov
adc
cwtl
es
xor
cmp
in
inc
xor
cmp
lds
or
cli
decl
fdivrs
in
icebp
or
ljmp
adc
pop
daa
in
xchg
and
and
sbb
adc
or
ljmp
xchg
jecxz
stc
leave
les
popa
jmp
add
push
icebp
daa
loope
in
test
xor
ljmp
cmp
call
out
inc
out
loop
in
fists
xlat
stc
fimull
add
cli
cld
pop
pop
sub
pushl
cmpsb
pop
inc
and
and
mov
mov
loop
xor
test
dec
inc
ret
ja
pop
fiadds
arpl
or
das
ret
inc
inc
inc
inc
xor
sub
push
aas
or
es
fistl
fnsave
fldcw
fldenv
and
sbb
mov
pushl
jo
pop
or
sti
stos
call
ror
ret
aaa
mov
lods
in
std
call
cmpsb
call
and
xor
inc
aam
xor
pop
inc
call
push
add
push
lret
pop
iret
mov
cli
incl
adc
jb
sub
xor
add
or
sub
push
xchg
out
idivb
insb
ljmp
out
ret
or
into
lock
lcall
push
lcall
cmp
xor
sub
icebp
call
lods
repnz
xchg
mov
roll
mov
add
adc
jmp
sbb
inc
aaa
das
xor
es
ja
int3
sti
sub
and
mov
adc
mov
jmp
jne
sub
sahf
sbb
and
pop
ds
xor
push
xor
fldl
inc
call
xorb
ljmp
jno
push
shlb
xlat
loopne
das
add
xor
pushl
push
cmp
xor
mov
cmc
insb
in
aad
enter
mov
mov
mov
call
fldenv
push
sub
cmp
ret
or
cld
mov
ljmp
dec
xlat
mov
mov
pop
test
xor
aaa
lret
xor
adc
push
in
adc
ret
lcall
icebp
addb
cs
ds
decl
push
sub
shl
jmp
call
mov
sbb
add
outsl
jg
fisttps
jg
lods
sub
xor
bnd
xor
call
in
jns
ror
stos
ret
ds
in
lcall
and
mov
push
pop
adc
es
pop
insl
push
push
add
leave
out
push
call
in
shr
mov
pop
loopne
pop
iret
call
xor
jg
jp
sahf
ss
cmp
cmp
mov
repnz
dec
push
mov
aam
call
loopne
out
sarb
sbb
sbb
sub
and
fsubrs
ja
xlat
push
jmp
stc
xchg
cmc
shl
mov
xlat
cwtl
aam
rol
into
movsb
iret
adc
aaa
clc
push
adc
lcall
lods
cmp
push
sti
or
cmc
es
int
mov
int3
or
sub
pushl
sub
stos
aas
scas
cmp
ficompl
ret
ljmp
icebp
jecxz
jecxz
in
fiadds
loopne
fsubl
loope
stc
call
icebp
and
sub
pop
aaa
fildll
leave
sbb
dec
icebp
shl
sbb
scas
outsl
mov
ljmp
add
adc
aaa
std
inc
test
sub
sbb
or
cld
loop
lds
push
cmp
fildl
neg
lcall
fisubl
jo
or
push
out
dec
ss
push
cmp
adc
incl
fstps
int3
mov
mov
jg
arpl
in
movsl
cmp
incl
dec
mov
js
sbb
jb
test
imul
fmuls
lret
rcll
sar
loope
daa
add
sbb
sub
fidivrl
inc
xchg
fisttps
repnz
loopne
iret
xor
mov
scas
and
add
xor
inc
or
dec
pusha
inc
xchg
jmp
pop
adc
add
out
jmp
filds
das
push
loop
leave
test
fcmovne
insb
shlb
in
jmp
push
or
inc
push
push
xor
mov
jg
dec
pop
mov
mov
imul
addl
xor
add
inc
pushl
mov
popf
sub
mov
mov
cmpsl
jmp
arpl
cmp
push
shll
adc
sub
dec
inc
aad
out
add
aaa
sub
xor
aaa
out
ss
xor
or
cmp
adc
in
mov
mov
mov
cmp
das
xchg
sub
inc
fdivs
lock
in
dec
mov
daa
out
sub
repz
xlat
popf
flds
call
sarl
ficomps
mul
push
xchg
push
call
cmp
inc
adc
std
or
or
lret
xchg
mov
mov
adc
adc
test
ss
push
mov
push
notb
jmp
fcompp
fmul
dec
loope
iret
add
xchg
fdivs
frstor
sub
daa
cmp
jg
cmp
fcompl
repz
into
or
mov
test
decl
mov
jnp
lds
jns
repz
mov
cs
in
aam
int3
incl
repnz
or
into
aad
fnstsw
and
es
inc
dec
sahf
inc
es
in
pop
and
int3
roll
mov
cmpsl
les
ja
pusha
sbb
mov
jmp
push
es
sbb
mov
fldl
es
fstl
jo
sbb
fs
mov
dec
fldenv
js
and
jle
sahf
inc
addr16
jo
xor
call
cld
xor
dec
aad
int3
add
sarl
dec
fdivrl
sti
sti
mov
jb
jmp
dec
out
lea
mov
repnz
jge
pop
lret
pop
shrl
mov
int3
jne
call
pop
stc
xor
sub
inc
mov
repnz
sbb
or
aad
into
in
decl
leave
mov
pop
call
pop
xor
cmp
mov
dec
xor
push
imul
loop
mov
rcll
ljmp
out
xor
popa
aaa
test
add
jmp
jecxz
rcrb
fidivrs
test
cs
push
sti
push
pushl
std
jp
les
and
cmp
cmp
dec
mov
js
aas
cld
loopne
sbb
popa
sub
inc
cmp
daa
xor
mov
sub
loope
int
iret
outsb
lcall
clc
leave
xchg
ret
test
mov
notb
outsb
inc
cmpsb
call
pop
int3
push
add
fwait
sub
or
icebp
inc
stos
sarb
mov
ss
hlt
decl
and
xor
aaa
dec
dec
dec
iret
dec
jl
lret
sbb
pop
lock
loop
shr
pushl
shufps
lcall
sti
fistps
dec
inc
fmull
stos
pop
cld
call
dec
les
pop
jmp
mov
stos
leave
ret
pop
loope
push
xlat
call
shll
jmp
dec
xchg
inc
mov
scas
sub
adc
add
fldcw
decl
pop
test
lock
in
ret
popa
sti
mov
jmp
dec
sbb
rclb
dec
lahf
ds
insl
add
jecxz
lret
int
mov
mov
or
mov
pop
bound
mov
cmp
pushf
sub
sbb
and
mov
lock
popf
mov
lds
sbb
xchg
or
and
pushl
ds
inc
cli
dec
sbb
sub
imul
jae
pop
pop
mov
mov
call
adc
das
fidivs
mov
jp
rcrb
adc
fadds
xchg
sub
aam
pop
fdivrl
rorb
push
ljmp
out
add
adc
cmp
dec
inc
xor
out
in
fimull
inc
cmpb
leave
in
add
cmc
sub
cmp
add
pop
pop
mov
xor
jmp
lock
fstl
loope
fsubp
rolb
adc
and
xor
sar
incl
inc
es
and
adc
cmc
clc
fsqrt
movsb
mov
mov
mov
lret
stc
leave
adc
es
mov
xor
divl
enter
sbb
sti
adc
or
cmp
mov
fnstenv
ficomps
xchg
aam
iret
nop
clc
adc
jmp
or
aas
inc
and
pop
xchg
cmc
sbb
cmp
test
cmp
or
repz
hlt
fwait
or
xorb
xor
ljmp
mov
mov
push
xor
xchg
out
add
cmp
jmp
fcompl
pop
fnstsw
fcmovbe
aad
into
popf
into
push
jmp
add
mov
ds
inc
es
jp
nop
and
fcmovne
mov
pop
mov
ret
rcl
out
aam
addr16
hlt
xor
add
xor
sbb
enter
call
jmp
hlt
clc
lock
out
je
mov
dec
adc
and
ljmp
fistpll
decl
lock
sti
sahf
adc
das
adc
cmpsb
xor
sbb
xchg
fcmovnu
clc
pushl
lods
in
in
or
bound
mov
inc
and
sbb
pop
inc
push
ljmp
mov
lret
add
clc
shr
fistl
mov
mov
pushl
jbe
pop
stc
mov
fwait
sub
mov
push
sbb
or
incl
repnz
xchg
dec
out
pop
cli
stos
cld
les
clc
sbb
sbb
inc
decl
or
add
rorb
or
push
inc
push
mov
xchg
hlt
repnz
sahf
ficomps
ljmp
loopne
aam
push
add
push
out
and
cs
add
ljmp
das
jecxz
ljmp
mov
mov
sbb
sbb
and
xor
cmp
jmp
add
push
adc
or
xchg
cmc
push
ds
fidivs
aad
sar
call
int3
in
repz
popf
push
aas
sbb
push
outsb
and
jo
jb
cmp
icebp
movsl
jmp
repz
call
pop
divl
adc
xor
add
jle
mov
call
cld
decl
popf
or
or
or
push
out
xchg
jecxz
fbld
xlat
fldl
jmp
pop
jmp
cld
add
pushf
sbb
push
jbe
or
insl
adc
or
call
std
jo
cmpsb
icebp
enter
mov
xchg
loopne
mov
adc
pop
lods
add
call
ljmp
jae
add
idivl
imul
cmp
out
loopne
loope
loop
fidivrs
sub
pop
lahf
jecxz
imul
push
dec
or
adc
shrl
and
pop
push
in
xchg
or
clc
repnz
out
in
ljmp
arpl
bswap
adc
push
cli
aas
push
adc
mov
add
cli
shl
jmp
mov
fimull
in
jmp
mov
cmp
mov
push
insl
sub
adc
dec
test
cmp
push
std
lcall
add
repnz
loopne
aad
into
and
add
cld
sbb
cmp
in
call
push
push
sti
pop
gs
mov
push
sub
cmpsb
or
sbb
xlat
icebp
and
inc
aam
ljmp
mov
mov
ret
inc
in
test
xchg
push
adc
enter
test
mov
mov
pop
pop
inc
and
add
jmp
shr
ret
sbb
jmp
cld
add
pop
lahf
adc
sbb
and
out
imul
push
pop
cld
shr
jmp
leave
rol
cltd
mov
sbb
xor
popf
push
cltd
cmp
push
jno
mov
incl
dec
jo
push
pop
xor
adc
out
imul
int3
pop
or
ljmp
sbb
ljmp
sbb
or
gs
out
clc
rorl
pop
mov
mov
cmpsl
and
sub
mov
dec
or
inc
pop
decl
push
jnp
jp
outsb
xor
push
or
out
into
dec
mov
xlat
test
fsubrp
cli
das
sar
std
ljmp
xor
ss
ss
xor
mov
outsl
ljmp
or
pusha
ljmp
stc
mov
push
mov
mov
mov
add
pop
dec
shl
repnz
pop
pushf
popa
inc
addr16
fwait
lcall
push
pop
cmp
movaps
xchg
sub
cmpsl
jo
fwait
mov
lret
adc
int
mov
pushl
xlat
xor
cmp
xor
sub
and
adc
add
push
fcmovbe
pop
decl
lock
and
sbb
mov
mov
jmp
pop
sub
jbe
mov
inc
add
lcall
jecxz
decl
fwait
jo
les
cmp
addr16
cmp
imul
ljmp
dec
sub
sub
cmp
fstl
incb
fnsave
fwait
int
insl
repz
sti
sub
adc
add
add
sbb
sbb
sbb
pop
repnz
pushl
jb
mov
pop
ss
or
iret
cmp
xor
pop
aad
in
lock
and
mov
decl
rcll
jne
xor
int3
pop
mov
sub
int3
push
or
sbb
js
decl
cli
lock
arpl
mov
idiv
out
dec
jmp
repnz
jns
jecxz
imull
pusha
aas
test
jno
sbb
insb
push
mov
sti
xchg
fnstenv
mov
mov
mov
enter
in
hlt
sti
fimull
fs
sbb
cltd
and
popf
cmp
sub
push
xor
clc
rdtsc
decl
add
push
dec
in
shll
dec
ret
sub
xchg
shll
into
stos
ret
push
sar
decl
push
xchg
ret
push
mov
bound
jnp
ds
xchg
push
and
test
ret
jmp
popf
pop
lahf
sarb
add
sub
sarb
dec
jbe
push
dec
cld
jmp
dec
dec
inc
jle
je
pop
out
mov
mov
scas
imul
fwait
popa
cwtl
repz
mov
std
and
in
cmp
lcall
pop
add
dec
imull
mov
mov
mov
das
sahf
jno
xor
xor
decl
shrl
popa
aas
fists
bound
mov
dec
push
out
inc
cmp
pop
ds
nop
mov
jg
scas
jae
mov
lret
std
adc
pop
insb
adc
add
incb
dec
cs
rclb
aas
jmp
sbb
inc
leave
ljmp
lods
push
ret
add
and
lcall
mov
std
aas
loopne
aam
xlat
push
sbb
xor
and
mov
xchg
cmpxchg8b
mov
aad
inc
loopne
call
adcl
xor
fdivrp
lcall
clc
jp
jno
sub
aas
cmp
xchg
es
or
flds
rorb
flds
in
add
shrb
daa
dec
and
faddl
or
in
and
call
cwtl
out
clc
out
jo
sub
mov
out
xor
mov
add
not
repz
jl
sar
test
mov
xchg
incl
cld
fdivrl
xor
std
and
mov
xchg
rcrb
std
jmp
das
orb
or
adcl
pop
jl
imul
sbb
adc
aaa
sti
testb
sub
mov
mov
stc
repz
ljmp
push
cld
imul
jge
xchg
aam
in
hlt
mov
push
cmp
push
fistl
test
mov
hlt
and
das
int
lds
rolb
clc
mov
and
xor
sub
xor
and
das
adc
shr
jg
inc
loopne
ljmp
cmpsb
rorl
mov
push
faddp
dec
sti
rcll
xor
pushf
imul
insb
fldl
sbb
mov
jg
xchg
insl
popf
xor
inc
adc
es
or
cmp
aaa
call
push
ss
das
enter
xor
loop
aad
enter
sarl
lcall
scas
cli
pushl
ljmp
xorb
insl
jg
jl
icebp
pushl
inc
out
push
dec
jmp
push
xchg
mov
xchg
mov
or
and
inc
fisttpll
dec
fiaddl
cmp
stc
xor
and
loop
roll
sub
decl
mov
mov
fs
mov
jmp
repz
or
inc
mov
dec
lcall
gs
sbb
rcl
mov
lcall
cmpsb
lods
lods
shll
incl
inc
dec
cltd
inc
inc
inc
dec
xor
jb
mov
mov
fcmovb
in
push
loop
ds
leave
and
into
push
fildll
pop
std
scas
mov
clc
icebp
shl
lods
mul
adc
and
imul
adc
and
mov
nop
inc
hlt
inc
nop
xor
sbb
int3
out
sub
hlt
call
lcall
sub
daa
push
daa
pop
es
pop
cmp
mov
jbe
push
or
sbb
ljmp
xchg
loope
fimull
xlat
cld
fcom
scas
fisubrl
fisubl
or
lcall
or
jae
or
and
sub
es
sub
jecxz
je
call
enter
enter
loope
sti
mov
xchg
sub
cs
and
and
ljmp
cld
sbb
fwait
lock
cmp
fcmovnb
rclb
arpl
int
mov
outsl
mov
jl
fstl
inc
adc
or
aas
lcall
pop
adcl
adc
mov
cltd
and
sub
arpl
inc
adc
add
dec
fcompl
int3
inc
lds
call
pop
loopne
jmp
or
stos
sub
and
pop
stos
sbb
pop
repnz
add
mov
inc
imul
jmp
loope
roll
leave
daa
aam
call
rclb
sbb
dec
and
adc
and
ds
jae
lods
repnz
cli
xor
call
das
jle
cltd
pop
mov
call
fsubl
dec
add
test
decl
clc
add
add
pop
test
or
roll
mov
rcrb
jmp
add
mov
sbb
and
sub
sbb
call
shl
inc
fsubr
jmp
push
lcall
adc
push
fimuls
xor
sbb
add
into
sub
int3
xor
adc
sar
out
stc
pop
push
pop
pop
or
pop
aaa
inc
cli
pop
push
fimull
or
nop
sbb
push
mov
or
std
jno
out
ffree
loope
ljmp
sbb
mov
jg
add
test
stos
andl
clc
mov
shrb
dec
adc
pop
pop
cmc
in
lods
inc
aas
push
or
rol
ret
aad
sbb
xlat
lock
or
int
push
pop
jg
out
adc
aad
mov
jmp
cmpsl
pop
cmp
jle
fdivr
push
add
inc
stc
aad
push
out
sbb
out
mov
inc
add
pop
repnz
out
fistl
sub
imul
cld
mov
shlb
incl
push
mov
cmp
cmp
daa
push
mov
xchg
out
aam
mov
outsl
mov
xchg
pushl
std
ljmp
sbb
sbb
and
es
sub
lret
adc
insb
push
dec
insb
add
fs
push
cmp
lods
hlt
cld
divb
cmc
in
dec
in
loop,pn
fsubr
fisubl
fxch
push
int
in
pop
adc
lret
xor
pop
push
push
aam
shr
shrl
ret
decl
jg
pop
int3
lret
mov
addr16
iret
add
and
shlb
repnz
lcall
cli
or
add
mov
loop
jb
lcall
std
cmp
jmp
jmp
jae
mov
fistpl
pop
aad
in
cmpsb
pop
fcoml
scas
and
add
lcall
push
dec
inc
pop
sub
adc
sti
je
cli
leave
divb
lcall
hlt
or
lcall
arpl
rcrl
push
lret
bound
sbb
sub
sub
dec
sub
adc
adc
push
fdivl
enter
lret
into
rolb
js
push
out
in
in
ljmp
xor
fisubrs
sbb
fwait
inc
mov
popa
inc
sub
xor
sbb
ret
loop
lds
stos
mov
lcall
jbe
testl
adc
push
add
hlt
lcall
cmp
push
cwtl
cmp
inc
and
and
or
mov
das
adc
lcall
into
push
repnz
jmp
xchg
iret
in
mov
pushl
or
cmp
push
inc
pop
cmovb
and
or
ljmp
add
sbb
out
fcompl
cli
jb
sahf
sti
jecxz
lods
sbb
mov
lcall
ds
sub
in
int
mov
mov
inc
jne
fucomp
divl
lods
mov
sti
mov
int3
add
sbb
daa
in
xor
inc
xor
dec
mov
or
not
in
rolb
fdivs
xor
addr16
jns
sahf
ficomps
and
xor
test
iret
inc
or
sbb
xor
push
cmp
lock
call
test
sub
cmc
mov
adc
sbb
popa
std
add
cmp
insl
or
decl
or
cmp
shl
dec
or
adc
ds
jmp
inc
dec
sub
dec
add
jmp
fldt
mov
mov
int
out
cld
pushl
cmp
inc
inc
dec
in
dec
repnz
test
sbb
add
pushf
loop
in
pushl
push
and
jecxz
fnstsw
mov
cmc
mov
inc
add
push
lods
or
or
out
ljmp
jmp
sub
and
lcall
shl
mov
mov
shrb
rcrb
bound
xchg
cmp
popf
inc
jge
fwait
sbb
shrl
clc
in
out
add
stc
jp
dec
cld
inc
stc
mov
repz
jg
fdiv
movsb
std
stos
add
ds
cmc
add
call
idiv
jb
or
xor
cmp
ja
insl
pop
cmc
decl
sbb
mov
scas
scas
mov
call
xor
xor
mov
and
adc
add
out
aam
lret
cli
xlat
cld
orb
adc
mov
push
jmp
mov
hlt
pop
adc
cs
cmp
jbe
pushl
mov
pop
push
adc
dec
loop
stos
and
adc
lock
add
mov
mov
and
ljmp
pushl
lcall
iret
test
push
in
js
out
dec
add
or
adc
aam
decl
sar
lahf
repz
out
or
jge
pop
add
add
add
cli
mov
mov
in
dec
push
mov
add
sbb
sub
daa
dec
into
dec
mov
sbb
jmp
mov
jg
aam
push
nop
loope
repz
adc
test
test
cmp
stc
cmc
repnz
jmp
sti
xor
iret
push
xor
and
mov
imul
adc
mov
cli
mov
mov
xor
sbb
outsl
in
lcall
outsb
cwtl
into
movsl
lret
pop
idivl
pop
icebp
call
movsl
sbb
or
mov
mov
sbb
sub
sub
test
sub
push
fidivrl
test
fs
in
push
les
push
fiadds
movsl
stc
pop
cli
fs
sub
fprem
aas
lods
or
sbb
daa
pop
das
add
pop
stos
push
outsl
cli
add
out
dec
call
mov
imul
out
jmp
out
das
out
pop
repz
out
and
pop
loopne
loop
hlt
pop
das
clc
incl
push
push
enter
push
ss
xor
and
sahf
test
das
out
fcomip
lcall
inc
fdivp
fbld
fidivl
jecxz
call
pop
notl
or
cli
push
or
mov
out
dec
and
sbb
sbb
clc
mov
loope
jg
call
in
in
in
xor
hlt
xor
test
pop
icebp
dec
out
xlat
dec
shl
ljmp
cmc
fiaddl
icebp
les
push
in
pop
dec
arpl
aaa
jns
mov
and
filds
mov
pop
enter
out
mov
int3
or
mov
sbb
sbb
adc
ljmp
mov
mov
mov
add
sti
push
cmc
adc
aaa
ljmp
ljmp
jecxz
out
jmp
push
fcmovne
fmul
dec
in
repnz
movlps
and
cmp
jbe
stos
incl
push
inc
dec
inc
cmp
and
pop
inc
jmp
cmpsb
mov
mov
add
push
push
or
adc
sbb
push
mov
adc
adc
adc
adc
xchg
and
mov
jno
and
mov
test
push
fsubs
out
dec
mov
fstl
jmp
in
fnstsw
iret
out
iret
mov
ss
add
pop
jg
decl
push
addb
das
or
sub
lds
jle
scas
dec
shlb
pop
fsubp
sbb
setge
fdivr
pop
subb
sbb
sti
daa
mov
and
or
incl
mov
lds
iret
push
icebp
loopne
jmp
mov
dec
fcomps
incb
sbb
daa
cmp
call
outsb
sub
dec
subb
decl
ret
in
scas
sarb
test
dec
repnz
pop
nop
sbb
sbb
and
and
popa
sbb
jnp
adc
test
std
adc
ljmp
pop
xlat
xchg
aam
shrb
or
jo
jecxz
popa
jmp
out
and
pop
out
sub
lods
cmc
push
jp
push
repz
jp
dec
sub
cmp
inc
push
inc
xchg
cmp
and
or
lcall
aam
enter
mov
mov
rolb
jno
imul
and
jmp
sub
adc
adc
cs
jbe
xchg
pxor
clc
ljmp
out
xor
and
cmp
xor
iret
fldcw
and
shl
out
cld
jmp
clc
icebp
add
or
pop
loopne
pop
repz
out
and
daa
cmpsb
es
sub
jg
or
inc
flds
enter
aaa
std
decl
shl
addr16
add
adc
sbb
and
hlt
jbe
out
adc
ljmp
or
cmp
add
test
ja
sbb
hlt
sbb
loope
mov
loopne
and
mov
cmpsb
loopne
ficomps
in
sahf
add
or
fdivrp
jg
lock
inc
or
mov
or
add
lcall
int
jns
and
mov
pop
clc
int3
ljmp
dec
in
in
icebp
ljmp
decl
sbb
ret
adc
inc
imul
testl
cld
incl
adc
adc
push
add
hlt
jecxz
push
fisttpll
shl
clc
call
pop
jecxz
negb
mov
pop
pop
js
xchg
and
push
jns
mov
in
loope
in
jg
push
cmpsb
push
and
push
es
xchg
add
out
mov
into
call
mov
fcom
in
roll
nop
adc
and
pop
and
lret
push
cli
decl
shl
repnz
mov
jmp
sbb
pop
ljmp
ficoml
and
lahf
loope
out
xchg
add
adc
es
je
jg
and
mov
cmp
xor
out
sub
jmp
aas
inc
push
stc
push
aas
aas
shrb
push
hlt
jp
int
xor
sar
fmul
sbb
push
mov
xlat
and
push
jecxz
int
imul
call
ret
hlt
cwtl
add
or
daa
call
adc
sub
jmp
out
aad
mov
adc
dec
add
push
aas
sbb
adc
ljmp
ja
mov
cmpsb
mov
add
fldln2
push
add
mov
dec
test
call
push
cmp
xchg
repz
in
fnstsw
loope
in
xlat
clc
movb
add
add
sbb
incl
jae
and
aam
add
push
adc
and
sbb
loop
aaa
or
ljmp
hlt
mov
adc
cld
sti
stc
xchg
sti
mov
out
cli
push
icebp
adc
fsubp
jbe
int
ljmp
aam
out
ljmp
and
bound
cmp
sub
sti
cld
jmp
fdivrl
call
mov
test
gs
call
jb
into
push
fiaddl
jbe
pop
lret
add
cli
mov
mov
or
scas
sub
lea
sar
lcall
push
adc
lods
pop
and
loop
dec
cmc
push
out
xchg
out
pop
in
jnp
dec
out
dec
repnz
fcomip
scas
enter
out
xor
dec
in
hlt
ftst
xchg
clc
add
movhps
mov
jmp
lret
inc
dec
inc
inc
xor
sub
cli
mov
pusha
aam
int
pusha
fxtract
jg
scas
cld
sub
add
or
or
data16
mov
loope
stos
std
push
pop
sbb
nop
sub
rcrb
mov
fsubr
fcmovnu
xor
fcomip
call
gs
add
in
loop
ljmp
inc
sarl
stc
arpl
pop
cmp
mov
sbb
add
xchg
add
push
rcl
shrb
or
pop
iret
js
lahf
or
jg
adc
pop
sub
testl
lods
fidivrs
out
fldl
mov
jg
inc
ss
dec
pop
ljmp
push
repnz
cmp
mov
push
flds
mov
std
loop
idiv
incl
adc
lds
or
out
fisttpll
repnz
or
and
mov
ljmp
iret
inc
stos
inc
mov
cld
mov
lret
sbb
xor
loope
mov
and
sbb
call
add
fwait
hlt
dec
jmp
sub
or
sbb
or
ds
cmp
decl
jl
sub
and
adc
adc
stos
enter
into
inc
fldenv
fistpll
add
adc
add
xor
repnz
jp
or
inc
repz
decl
pop
cld
sbb
sub
daa
inc
sbb
pop
jmp
loop
rcll
roll
call
adc
lock
push
lock
add
fcoml
fcoms
mov
mov
dec
sub
push
dec
sbb
dec
add
ljmp
sti
mov
out
push
adc
ret
fwait
mov
xchg
daa
cmpsl
cld
push
add
rorl
or
or
div
and
loop
loope
jg
lock
popf
pop
sub
pop
mov
add
imulb
call
mov
or
xchg
sbb
or
sbb
mov
adc
dec
clc
sbb
call
jae
hlt
sahf
lock
inc
push
mov
out
out
imul
sbb
hlt
sti
aad
sti
in
in
out
lock
and
sbb
sbb
add
cld
push
repnz
iret
mov
jmp
pop
daa
fcompl
add
adc
xor
sub
or
push
int
jbe
in
in
out
repnz
cmpsb
mov
loop
mov
cli
std
fdivp
test
push
in
in
jmp
pop
cmc
pushl
add
std
or
inc
and
rclb
and
pushl
call
stc
lahf
add
bound
or
aam
jecxz
outsl
icebp
daa
out
inc
in
shl
pop
lock
fcmovnu
mov
mov
xchg
pop
ja
cmp
daa
sbb
push
dec
sbb
add
sbb
cwtl
push
add
xchg
stc
in
mov
jl
jg
fdiv
loope
pop
out
out
stos
mov
std
dec
incl
adc
sbb
sti
sbb
push
cli
or
or
decb
pop
lret
cmc
mulb
jo
pop
adc
mov
out
mov
jmp
adc
in
scas
cmc
push
imull
inc
add
fs
cs
xor
das
in
sub
lock
std
and
xchg
pop
icebp
out
fists
fcomi
out
repnz
stc
or
mov
mov
sbb
xchg
push
sbb
or
adc
lcall
sbb
sbb
pop
fstps
insl
adc
lcall
jmp
insb
stc
add
dec
repz
inc
inc
cli
pop
repnz
shl
inc
ror
leave
in
iret
or
sbb
and
dec
lcall
add
push
jg
stc
sarb
fldcw
inc
pop
stc
push
adc
or
pop
pop
add
std
jo
ss
pop
xchg
sbb
adc
or
lcall
std
xor
out
mov
div
xchg
hlt
xor
push
mov
repz
jmp
dec
out
shlb
jecxz
jmp
mulb
and
cs
xchg
sbb
jns
and
jp
loopne
push
sti
icebp
inc
ljmp
jecxz
push
add
pop
mov
add
std
sbb
mov
repnz
cli
adc
fistps
inc
sbb
sbb
sbb
xchg
mov
mov
xchg
std
in
dec
testl
jno
jecxz
ja
add
ljmp
popa
lock
out
sar
add
add
add
xchg
push
int3
or
adc
add
lcall
cli
imul
adc
sbb
push
adc
addr16
icebp
pop
out
fbstp
cmp
rep
add
orb
adc
in
jae
cltd
or
add
mov
repnz
cmpsb
add
fcoms
pop
out
pop
push
mov
add
fs
decl
push
mov
xchg
fildl
mov
pop
outsb
push
adc
sbb
loopne
adc
add
in
fstpt
in
stc
sar
pop
cmpsb
call
sbb
cmp
sti
lock
in
sub
push
pushl
adc
ljmp
adc
out
dec
sbb
cld
xchg
add
or
push
xchg
das
sbb
pop
cmp
and
mov
jecxz
jg
out
in
in
out
sub
cmp
add
push
or
or
test
sbb
ljmp
lcall
in
in
fistpll
fiaddl
jge
xor
js
xchg
push
test
decl
dec
pop
pop
and
sub
sbbl
mov
daa
lcall
cmp
ljmp
ds
divb
pop
cli
mov
loope
mov
repz
jnp
call
sahf
repz
clc
addb
loop
movlps
sbb
sbb
in
or
mov
xchg
out
mov
cmc
call
test
std
mov
fwait
or
and
or
mov
lcall
iret
loop
loopne
out
jmp
adc
leave
clc
daa
push
push
or
or
adc
pop
movsl
sbb
sbb
push
pop
or
xor
out
clc
adc
out
jmp
out
or
mov
jg
jle
repnz
clc
mov
movsb
in
add
jg
jp
or
pop
out
add
jmp
sub
cmpsl
add
data16
mov
pop
decl
add
outsl
or
adc
out
add
clc
gs
ljmp
out
or
jbe
cmc
cltd
clc
push
loopne
icebp
inc
fwait
add
add
cmp
int3
jecxz
in
call
mov
dec
adc
inc
pop
xchg
sbb
adc
add
std
mov
pushl
cld
call
repnz
clc
mov
push
add
divl
idivl
imul
and
cltd
std
cmp
cld
jno
rorb
sub
ret
jg
lcall
bndldx
adc
inc
adc
incb
pop
hlt
pop
icebp
cmc
mov
sub
out
aad
mov
int
xchg
jg
sub
cli
scas
stc
js
mov
testl
jmp
jmp
cmc
lcall
sbb
and
inc
and
pop
xor
push
or
add
notb
out
ljmp
pop
clc
xchg
jnp
inc
add
incl
and
or
jle
and
mov
repnz
add
popa
add
sbb
pop
sub
daa
and
js
push
jmp
in
loopne
loop
jecxz
in
ljmp
adc
dec
add
add
test
xchg
fdiv
cmp
shrb
jg
cmc
cmc
mov
pop
dec
or
repz
lcall
sbb
mov
rolb
test
inc
neg
bnd
hlt
jmp
ljmp
jmp
insl
out
mov
cld
in
pop
ret
cmc
dec
add
sbb
and
and
and
ds
aaa
sbb
sub
jnp
loope
adc
ret
out
mov
mov
push
out
fucomi
fucomp
test
ret
std
inc
add
cli
adc
addr16
adc
adc
adc
or
ljmp
in
repz
mov
lcall
push
push
mov
xor
into
add
adc
sbb
in
loop
fimuls
mov
add
in
cmpsl
icebp
nop
clc
in
add
add
xchg
adc
movhlps
push
fnstcw
jmp
or
xchg
or
sub
aas
pop
loopne
iret
sahf
add
mov
cs
repnz
lock
outsl
repnz
inc
idiv
lcall
xor
stc
xchg
add
pop
inc
push
test
adc
push
jo
std
or
pop
lods
incl
cmp
push
icebp
and
jne
mov
hlt
jge
mov
or
adc
movlps
add
std
int3
mulb
in
dec
mov
call
or
or
es
bound
adc
push
xchg
icebp
incl
adc
jl
lods
repz
lock
jnp
std
repnz
aam
cli
jg
adc
adc
adc
orl
add
stc
idivl
clc
sar
stc
decl
inc
ret
or
dec
push
mov
sti
popa
in
stc
das
test
jmp
sub
aad
pop
push
add
or
adc
lcall
or
movsl
adc
jne
xor
sahf
mulb
mov
hlt
icebp
clc
repz
xor
pop
or
cmpsl
fwait
decb
lret
cli
push
xor
xchg
dec
cmp
shr
inc
cmc
add
mov
jbe
pop
adc
lds
nop
push
push
or
push
incl
out
xchg
pop
incl
cmp
jb
out
cli
call
imulb
jle
repz
loop
fiadds
add
cli
lock
mov
out
mov
and
mov
cmc
xchg
cli
cmpsb
clc
or
pop
cld
mov
pop
bound
cmp
or
outsl
jo
out
jge
pop
repz
hlt
ljmp
pop
cmp
sti
inc
sti
das
cld
icebp
cli
inc
divl
jp
insl
idivb
or
pushl
sbb
pop
sbb
adc
out
shl
psllw
in
out
test
sbb
hlt
mov
jp
test
mov
jbe
sahf
cmp
int3
add
call
sar
add
cld
lock
aaa
in
jnp
stos
in
out
cmpsb
incl
cli
and
jle
inc
sbb
dec
and
in
adc
decl
hlt
sub
out
in
in
call
movl
decl
dec
clc
movb
ljmp
negl
clc
jae
insl
cld
lcall
jge
out
sbb
and
sbb
inc
pmulhuw
insl
icebp
lock
incl
xchg
mov
add
cmp
mov
stc
addr16
sbb
movsl
cli
std
test
jne
add
testb
push
mov
add
mov
imul
bnd
sub
in
pusha
icebp
outsb
cld
adc
or
prefetcht1
cmp
jmp
loope
sbb
leave
pop
jp
dec
imull
jle
out
aam
jg
jmp
cmc
insl
sti
sub
adc
faddl
inc
cld
mov
out
sub
out
cli
repz
idivb
ds
or
sbb
ds
pop
mov
xchg
std
shl
lcall
repz
in
cli
psubq
cli
xchg
adc
cmpsl
hlt
adc
mov
repnz
jg
or
sub
add
cmp
test
fucomip
jbe
repz
cli
add
pop
adc
xchg
or
cld
dec
divb
repnz
pushl
in
cld
jmp
cli
inc
add
pop
or
rclb
jnp
rorl
leave
add
cmc
lcall
add
sti
lahf
testl
xchg
add
adc
mov
cmovge
decl
mov
cli
dec
repnz
or
sti
in
lods
lock
adc
sbb
or
negb
mov
inc
cmc
iret
stc
push
cld
pop
fbld
test
cmpsl
sbb
sbb
sbb
incl
das
stc
shr
filds
fsubrl
out
out
iret
or
push
adc
into
call
int
dec
push
mov
jle
push
clc
sub
sti
mov
push
out
sub
sbb
cwtl
push
testl
loopne
jg
jecxz
jmp
hlt
push
std
or
adc
or
loopne
out
mov
roll
roll
popa
ret
stc
inc
push
imul
into
divl
cmc
das
bnd
pop
idiv
mov
stc
push
stc
incb
or
or
push
push
ja
dec
push
int
pushl
ljmp
loope
fimull
fmull
loopne
out
lock
or
clc
adc
ret
push
pop
adc
pop
or
loope
std
mov
add
lods
push
and
jp
nop
incb
cld
mov
push
in
jecxz
in
jmp
add
or
stos
ds
sbb
sbb
loop
lea
pop
add
scas
repz
hlt
and
mov
cli
push
jle
sbb
add
cwtl
cld
lcall
outsb
cli
movsb
cli
cmp
mov
rorb
pop
or
ud0
call
or
repnz
loopne
fiaddl
in
out
fs
daa
push
sti
adc
push
or
fbstp
es
and
sbb
cmpb
cld
cmpsb
shl
cli
addl
mov
insl
mov
jmp
aaa
adc
in
push
inc
cmp
dec
decl
and
mov
xchg
sbb
sbb
jno
xchg
setle
add
es
cmp
pop
add
add
add
ljmp
rolb
std
push
clc
inc
hlt
loope
jecxz
out
in
cwtl
out
push
hlt
rclb
cli
arpl
lahf
or
enter
rcrb
adc
imul
in
jns
jno
lods
fmull
clc
cmp
push
setno
rcrb
jo
push
adc
or
out
cli
inc
add
std
std
push
notb
sar
std
insb
add
ljmp
dec
cli
shl
mov
in
or
inc
out
lcall
push
lret
stc
pop
nop
add
adc
pushl
call
sbb
push
mov
or
sbb
sahf
divb
repnz
jmp
in
out
jo
enter
mov
jg
lcall
jno
pop
or
les
or
or
jo
mov
dec
out
in
in
ljmp
movsb
hlt
inc
add
clc
add
or
adc
call
ret
xsha1
cmpsb
or
or
add
pusha
cli
cmp
sar
rolb
adc
stos
or
or
or
or
incl
and
jo
loop
movsl
aad
aad
fldt
sti
ret
add
in
daa
pop
mov
ljmp
push
pop
push
decb
idivl
push
icebp
mov
add
sti
inc
std
jbe
loop
pop
negl
mov
std
jmp
out
and
mov
out
mov
jg
pop
sbb
and
and
add
clc
jmp
cwtl
loop
fistpl
fisubrl
fcomip
mov
in
stos
mul
add
adc
sbb
pop
mov
jecxz
add
add
push
pop
or
decl
testl
loopne
in
jmp
hlt
dec
add
sbb
sbb
push
out
int3
sbb
or
movb
lcall
add
decl
cld
leave
clc
fdivp
aas
repnz
in
dec
ljmp
out
out
add
inc
add
jmp
sbb
pop
and
mov
sub
pop
fcoms
pop
push
pop
add
mov
jecxz
xchg
lock
loopne
fists
and
loop
out
hlt
sar
decl
sar
add
cmp
addr16
push
nop
push
fistl
sbb
inc
adc
pushl
rorl
add
or
fsubrp
dec
jmp
jmp
ljmp
icebp
lock
mov
fs
cld
ret
sub
mov
push
mov
push
adc
push
test
sbb
sbb
sbb
adc
push
cmp
shlb
jmp
out
pushl
add
repnz
test
pusha
dec
or
or
mov
insl
adc
ret
adc
cli
adc
fimull
ljmpw
incl
or
fcmovnu
xchg
in
push
add
pop
pop
xchg
push
js
ljmp
incl
sbb
mov
iret
or
mov
stc
inc
div
not
clc
in
push
sar
lods
std
xchg
lods
incl
sti
sub
push
pop
icebp
iret
in
inc
in
xor
aam
pushf
out
inc
repz
cli
mov
pusha
or
sbb
sbb
sbb
in
ljmp
adc
or
push
cmc
decl
imul
hlt
adc
inc
testl
std
add
add
addr16
add
mov
pop
fs
decl
jmp
pop
or
orl
or
notl
repnz
jmp
sub
sbb
jmp
mov
hlt
daa
sti
in
js
out
test
and
xchg
or
add
std
jb
mov
add
add
push
or
cltd
pavgb
pop
pop
add
mov
mov
pop
lock
out
out
jmp
cmc
cmp
mov
sti
or
or
xchg
or
or
in
fwait
pop
fs
or
or
push
cmp
aas
filds
xchg
add
hlt
jae
sbb
icebp
sbb
mov
scas
les
inc
push
std
or
rcr
les
popf
push
jns
sub
cs
sti
fstpt
notl
repz
repnz
ljmp
dec
imul
adc
incl
cld
call
inc
sub
scas
sbb
aam
andl
and
cld
lcall
sbb
or
div
repnz
lods
out
imul
xchg
sbb
jmp
in
mov
cmpsl
in
pop
in
mov
out
aaa
jl
jp
rclb
or
dec
sbb
and
mov
push
rorl
lcall
stc
scas
cmc
mov
insb
bnd
lock
mov
out
fs
jno
mov
cmc
aad
data16
hlt
or
adc
sbb
push
add
in
push
and
outsb
or
adc
mov
shrl
jno
iret
aad
fst
out
repz
mov
and
and
test
mov
adc
xchg
mov
call
ja
push
dec
add
imulb
in
ss
mov
data16
fisttps
loop
dec
lret
in
dec
repz
incl
bound
and
outsl
and
inc
sbb
cmp
or
ds
outsl
hlt
dec
out
and
pop
out
sbb
lret
std
das
xchg
ljmp
xlat
clc
repnz
add
jg
push
sbb
out
cli
incl
sbb
push
add
mov
adc
frstor
mov
loop
mov
out
in
jne
fdivrp
cmp
pop
or
or
push
inc
jns
pushl
sbb
sbb
inc
push
out
sbb
or
add
mov
ljmp
fcoms
push
fcompl
sbb
icebp
mov
pop
cmp
cwtl
sbb
and
ljmp
sbb
push
sbb
adc
add
or
out
sub
xchg
call
sbbb
icebp
lret
testb
push
xchg
insb
sahf
bound
xchg
out
cmp
adc
unpckhps
enter
aas
or
ds
mov
mov
jg
lods
xchg
jmp
jmp
out
jmp
lock
icebp
and
xchg
cli
mov
or
jbe
jo
jecxz
dec
sbb
push
adc
minps
push
xchg
xchg
std
arpl
push
test
out
sbb
test
hlt
xor
pop
filds
std
jmp
roll
or
in
outsb
pushf
push
mov
aad
fisubs
or
or
or
nop
scas
xchg
add
add
ljmp
mov
xchg
sti
in
or
nop
sti
mov
imul
negl
clc
ja
add
cld
std
cmpsb
inc
pop
fidivrl
push
add
lcall
or
or
pop
push
push
push
and
movl
lret
mov
hlt
xchg
repz
out
add
jp
push
jmp
out
sbb
cli
mov
std
pop
cmc
sti
cld
decl
rclb
stos
adc
adc
adc
and
cs
jg
or
sahf
or
or
lock
sti
jbe
mov
out
push
out
cmp
sub
out
ja
pop
notb
je
cmp
mov
pop
lock
sbb
sbb
sbb
push
mov
mov
out
in
repnz
in
xor
mov
jns
std
jecxz
loop
loop
in
call
stc
int3
add
mov
mov
dec
sbb
and
test
aaa
push
mov
lcall
mov
imulb
ljmp
add
push
jecxz
loope
loopne
loopne
in
ljmp
cmc
call
sbb
and
and
les
cmp
push
rcrl
lcall
adc
or
stc
out
jp
cwtl
ljmp
or
cmp
pushf
out
call
nop
jmp
in
push
out
mov
clc
xor
mov
fmull
adc
sbb
mov
sub
daa
or
dec
pop
pop
pop
repnz
dec
int3
in
das
jg
pop
jp
loopne
loope
outsb
out
jmp
mov
std
sub
hlt
jg
xchg
or
rclb
pop
adc
and
inc
jbe
dec
adc
jmp
cwtl
clc
and
mov
xchg
jecxz
fisttps
fsubrl
fisubl
ficoms
in
jmp
jg
das
push
jnp
sbb
rcll
sti
ja
ret
lcall
mull
fsubs
jl
sbb
sbb
adc
mov
mov
jecxz
loop
jecxz
loop
loope
in
call
jg
push
cli
xor
cmp
or
adc
adc
ret
sbb
sbb
push
pop
xchg
sbb
sbb
add
jl
cli
jnp
aad
mov
fistpll
loop
out
jmp
out
xchg
testb
add
decl
lock
sub
sahf
adc
adc
adc
adc
adc
lcall
adc
fimuls
or
add
cli
xchg
bnd
push
sub
aad
inc
fnsetpm(287
add
inc
cld
jg
dec
jecxz
out
jmp
out
pslld
fiadds
icebp
call
add
adc
sahf
es
cmp
scas
pop
leave
outsl
clc
lcall
lock
iret
add
cli
pop
rep
in
movsl
jecxz
loopne
loopne
loopne
dec
out
ljmp
movsb
repz
push
std
xchg
mov
add
call
decl
cs
or
pandn
outsl
adc
adc
adc
or
jg
xchg
stc
xor
cmc
xor
jmp
jmp
fcomip
xor
ljmp
push
mov
orb
or
jnp
add
adc
push
or
lock
decl
inc
or
or
or
or
or
add
dec
pop
icebp
inc
in
repz
cld
mov
loopne
sbb
pop
in
mov
push
repz
pop
mov
ja
ljmp
mov
mov
xchg
add
add
adc
sbb
incl
xor
and
pop
adc
inc
add
cmc
jns
xor
inc
outsl
push
xor
mull
jne
dec
negl
dec
testl
xor
lret
call
add
and
pushf
or
scas
adc
push
mov
xchg
add
clc
lcall
aaa
sbb
sbb
adc
push
pop
or
or
incl
cmp
cmc
mov
cmc
div
jbe
push
hlt
jecxz
cs
sub
pushf
testb
stc
cmp
std
cld
xchg
sbb
or
ret
adc
push
bound
jg
inc
pop
xchg
add
std
jb
imul
cmc
in
icebp
shl
gs
icebp
out
jmp
or
icebp
pushl
ljmp
and
es
add
decl
adc
sbb
and
es
sbb
mov
data16
sti
xchg
clc
adc
out
out
in
out
jmp
loop
call
xchg
out
inc
repnz
and
testl
pusha
pop
ret
jmp
push
add
cmp
es
adc
std
in
jmp
in
pop
out
mov
jnp
lds
cs
cmp
jg
push
mov
push
xor
xchg
add
pop
test
nop
fisttpl
lea
paddsw
push
adc
stc
fcomip
call
dec
push
nop
adc
les
mov
cmp
xchg
testl
call
mov
frstpm(287
icebp
in
in
out
shr
mov
out
ljmp
test
push
sub
push
or
adc
sub
and
jnp
das
clc
cmpsl
hlt
or
in
jae
loope
push
fldl
test
enter
in
fdiv
stos
add
xor
sub
lock
jg
adc
or
into
sbb
and
lds
or
push
sbb
adc
ljmp
add
and
push
sub
jecxz
call
fmull
push
in
fisttps
test
jle
or
adc
sbb
std
decl
sbb
xchg
adc
std
dec
cmc
in
mov
cmpsb
mov
loopne
ficoms
loopne
popf
out
jmp
insb
repz
cmpsb
mul
clc
shr
xchg
hlt
popf
stc
pop
sti
je
inc
or
adc
lcall
fistpl
and
xchg
daa
sub
sbb
sbb
aam
lock
mov
int
lods
fldcw
cld
fstps
js
stc
and
incl
icebp
push
and
inc
adc
adc
adc
test
mov
push
adc
adc
adc
pusha
loop
rorb
cld
mov
xor
bnd
loope
fnsave
insb
out
out
fists
jmp
adc
mov
push
in
popf
repnz
jg
movsl
sbb
mov
lods
push
mov
std
sahf
sti
in
cli
scas
clc
outsb
cmc
outsl
repnz
pushl
test
cmp
ljmp
mov
adc
push
add
push
popf
or
or
or
ljmp
pushl
clc
sar
dec
div
stc
daa
add
add
add
outsl
nop
push
mov
sti
fcomip
push
popa
lock
mov
mov
xchg
or
mov
adc
adc
xchg
pushl
testb
add
cli
in
hlt
sbb
fucomip
xor
jmp
out
push
call
add
pop
inc
or
adc
or
or
add
adc
inc
cld
outsb
cld
outsl
cli
aam
dec
add
and
or
push
cli
call
clc
add
inc
repnz
cmc
inc
stc
push
push
loope
clc
sub
repz
clc
repnz
adc
cmp
adc
punpckhwd
decl
or
sti
sar
xchg
negl
testl
cmc
enter
lahf
repnz
fwait
mov
add
xchg
sub
mov
mov
repnz
sub
lock
or
in
sbb
and
and
and
and
and
xchg
or
inc
or
hlt
int3
in
mov
pop
inc
out
jmp
adc
scas
clc
jg
clc
addr16
pop
cld
adc
sahf
cli
mov
cs
ljmp
repnz
adc
pusha
sbb
sbb
and
and
adc
lock
add
clc
xor
adc
sbb
cmc
loop
jmp
pushf
out
ljmp
cmp
mov
or
or
or
pop
or
or
call
or
or
adc
lcall
mov
push
stos
add
stc
adc
pop
ljmp
loopne
loop
mov
jmp
int
or
popa
std
inc
std
in
sti
cli
clc
push
mov
fiaddl
negb
push
xchg
cli
or
push
or
das
sar
push
push
adc
adc
cmp
fistl
jl
cmp
aad
adc
ja
ret
cli
xchg
cmc
push
out
mov
jle
ds
push
jbe
das
sti
jb
insl
add
scas
clc
out
add
pop
mov
aas
mov
add
add
incl
inc
pop
inc
or
or
or
or
jno
icebp
cli
mov
pusha
push
lock
lock
icebp
xchg
cmc
outsl
movsb
mov
mov
aam
push
dec
adc
mov
stos
or
in
add
add
in
add
decl
cld
ret
cld
insb
jg
add
add
add
add
decl
insb
data16
in
je
inc
in
fldz
sbb
clc
call
imull
add
or
adc
add
std
mov
ljmp
call
in
out
ljmp
push
add
adc
adc
outsb
push
es
adc
push
push
or
add
idiv
repnz
icebp
clc
mov
pushf
push
sub
leave
or
and
rorb
and
sbb
sbb
sbb
pop
icebp
cli
jmp
jmp
gs
lock
push
cld
inc
js
ljmp
adc
push
jl
xchg
lcall
push
stc
outsb
in
mov
pop
push
pushl
rorl
dec
or
or
lea
mov
enter
movsl
cmc
mov
mov
test
inc
out
pop
out
jg
jmp
cmc
cld
dec
add
add
mov
sti
jmp
cld
decl
pop
or
or
or
or
or
or
or
mov
mov
jg
outsb
aaa
cli
sti
cmp
repz
inc
in
cli
call
ja
lcall
sbb
jo
xor
jb
ret
ljmp
std
jne
or
jg
ja
mov
sbb
scas
and
push
sbb
outsl
clc
pop
push
add
lock
cmp
in
or
jge
cmc
out
int
in
scas
repnz
negl
cli
mov
pushl
out
push
add
repnz
cmpsl
or
lds
lcall
sbb
adc
pop
cmc
lcall
or
add
inc
imulb
jmp
in
inc
out
mov
push
mov
add
add
add
add
add
add
mov
sar
testl
fiaddl
repnz
adcl
sbb
adc
call
jae
xor
popa
repz
out
imul
test
dec
jmp
in
mov
clc
push
stos
add
lods
add
add
call
notl
lcall
repnz
lahf
negl
idiv
sbb
mov
mov
pop
or
mov
ljmp
push
jo
mov
or
or
push
mov
fdivr
movsl
std
xor
xlat
cli
and
cli
push
cli
jno
pop
pusha
cld
mov
std
mov
out
and
std
dec
cld
sar
inc
std
leave
cld
adc
mov
add
std
add
pop
adc
pop
or
or
fimuls
mov
lahf
add
push
or
ds
std
sar
mulb
pop
stc
sbb
cmp
dec
push
std
aas
stc
mov
and
inc
notl
clc
xor
sar
fs
sub
add
stos
cmpsl
pop
dec
push
or
incl
or
or
pop
xlat
add
ja
sub
xchg
call
ljmp
push
aam
push
cld
sbb
dec
cli
mov
out
cs
sbb
std
imul
out
fdiv
ret
clc
mov
push
pop
jl
dec
add
icebp
or
rolb
push
add
add
inc
decb
push
data16
cmp
and
push
push
pop
add
xor
sbb
mov
mov
testb
jbe
dec
or
insb
add
sar
sub
hlt
lcall
push
mov
jmp
add
push
jle
roll
fucomip
les
cmc
std
push
cli
pop
sbb
mov
pop
cmc
imul
clc
add
xchg
cli
jg
dec
add
or
or
or
mov
add
xor
loop
dec
icebp
jns
fwait
icebp
or
cmp
pop
or
loop
stos
std
inc
cmp
loopne
ret
or
or
cs
add
add
sarb
sbb
inc
jbe
push
std
std
cmp
mov
add
fldl
jp
add
add
loope
ljmp
jns
xor
clc
ljmp
loope
mov
add
or
ljmp
cli
add
stc
adc
push
out
cmc
out
or
out
aad
cmpsb
jmp
out
js
adc
sub
mov
or
test
decl
pushf
or
or
or
or
or
dec
or
test
add
into
sti
dec
jg
decl
xor
daa
lock
and
cmp
sbb
sti
adc
mov
ljmp
pop
or
repnz
adc
fiaddl
cmp
pop
adc
inc
les
mov
dec
adc
gs
add
mov
and
jmp
mov
mov
std
dec
cld
stos
sti
pusha
sti
sar
xchg
out
jmp
add
add
mov
add
sub
int3
pop
adc
addb
add
loope
fnsetpm(287
cld
dec
dec
cli
gs
adc
pop
ja
add
add
jmp
add
add
add
add
add
add
roll
add
pop
std
mov
cmpsb
mov
lcall
pop
clc
ss
cmc
aam
push
hlt
or
jle
mov
je
mov
js
mov
bound
mov
decl
or
jp
push
stos
or
out
loop
mov
add
ljmp
xchg
dec
std
pop
sti
clc
inc
notl
cmc
xchg
addr16
testl
stc
cmc
stc
int
mov
aaa
enter
sti
lods
cld
hlt
std
js
dec
add
push
sub
pop
push
jg
rorl
xlat
jp
or
or
add
add
incl
psubw
int3
hlt
arpl
xchg
hlt
adc
cmp
enter
hlt
stos
inc
and
incb
cld
xchg
rolb
inc
add
cli
std
xchg
std
cwtl
std
or
sub
add
or
add
ljmp
or
or
pop
cmpsb
std
add
jmp
cli
mov
sti
cli
sar
insl
stc
add
mov
jmp
pop
jbe
stos
add
add
cld
test
subl
or
repnz
repz
xchg
test
es
push
ljmp
testl
or
rorl
or
push
lcall
add
mov
mov
sbb
push
aad
ds
mov
cli
fidivrs
push
testb
repz
repnz
bnd
js
sub
repnz
xchg
clc
fcomps
mov
push
add
daa
fimuls
mov
or
pop
dec
push
dec
add
add
mulb
and
fdiv
shl
jo
fidivrl
hlt
jg
push
es
pop
cli
push
sti
xchg
mov
add
movb
movb
or
incl
or
or
or
aad
mov
or
or
jecxz
lock
or
add
add
decb
sbb
cmp
mov
mov
cli
or
cld
mov
incl
test
sar
fscale
scas
std
jg
test
arpl
dec
std
inc
std
or
push
std
dec
bound
into
loop
sbb
decb
cmp
sar
incl
add
rolb
add
add
add
add
jo
and
mov
mov
es
xchg
cld
cli
push
cli
sbb
jmp
testl
negb
aam
out
repnz
cli
scas
ljmp
xor
jmp
rorb
iret
or
or
or
or
xchg
jg
mov
add
dec
out
ljmp
inc
mov
mov
sti
aaa
sti
movsl
cli
adcb
cli
xchg
cli
out
ja
cli
mov
xor
inc
add
or
cwtl
or
out
mov
sbb
or
or
les
add
cltd
add
sti
xor
jle
gs
cmp
lcall
add
xor
sub
xchg
imul
add
cli
mov
add
stos
add
add
add
pop
std
call
cld
pop
sti
aad
xbegin
mull
clc
jmp
das
jg
repnz
fdivr
lods
lcall
pushf
add
add
add
jne
in
aad
push
lods
push
idiv
add
sub
cli
mov
stc
xchg
clc
out
jle
inc
test
stc
jno
nop
sti
js
cmp
inc
add
mov
mov
sti
add
inc
mov
xor
lock
inc
clc
fiaddl
movsb
add
add
xchg
mov
dec
add
add
mov
addl
sbb
sub
cld
outsl
cld
push
std
push
faddl
pop
pushl
lret
push
out
clc
outsl
jmp
pop
add
dec
add
xchg
add
add
ret
pushl
test
inc
roll
xchg
adc
lcall
in
out
adc
sub
add
mov
mov
add
cmp
call
mov
jmp
cmp
add
add
xor
lsl
add
inc
add
ja
xchg
in
cs
pop
imul
sti
pop
sti
in
xor
mov
sti
cmpsl
sti
loopne
fs
jle
std
icebp
scas
pushl
add
jp
in
xchg
daa
sti
cli
push
or
dec
cli
inc
jmp
aam
ss
lock
cld
fildll
jmp
add
add
fisttps
mov
sbb
push
add
mov
in
clc
add
imul
notb
cmp
std
jge
mov
and
push
incb
push
loopne
add
rolb
push
dec
jmp
sub
gs
sub
icebp
dec
jmp
test
in
sub
aas
movsl
push
fwait
mov
dec
pushl
cmpsl
push
jecxz
scas
xchg
dec
and
push
test
push
push
pop
add
add
decl
test
sbb
inc
add
das
add
add
lock
sub
add
add
test
mov
std
add
pop
mov
mov
sub
and
sbb
mov
xchg
add
jg
pop
test
lret
fcmovbe
decb
cld
lcall
stc
idiv
push
clc
cwtl
testl
mulb
test
fincstp
mov
sti
dec
push
mov
sbb
stc
xchg
add
mov
cld
push
jg
xor
or
pop
movl
incl
add
std
movsl
cld
idiv
push
sti
push
sti
cmp
ds
push
lret
inc
ljmp
xor
xchg
loopne
and
push
aaa
add
adc
cmp
mov
clc
add
sub
add
loop
inc
add
std
das
mov
sub
xchg
add
out
jnp
fistps
std
decb
push
sti
cli
jp
cmp
inc
cli
cmpsl
cli
pusha
sti
cmp
mov
jg
lock
cmp
add
add
add
outsl
das
push
add
scas
add
jno
add
add
mov
add
test
push
add
sbb
aas
add
mov
jge
mov
mov
cmp
std
jb
in
adc
push
add
push
xor
cs
cld
mov
stos
cli
leave
stc
xor
stos
loopne
sbb
clc
jb
insl
clc
ja
and
clc
cmp
stc
inc
cli
jo
mov
sbb
pop
cld
std
cld
loope
inc
jmp
xchg
add
push
outsl
pop
mov
jge
or
decl
stos
or
or
push
mov
fbld
out
mov
mov
and
fiadds
js
jb
lcall
sti
or
std
xor
clc
mov
notb
xchg
push
add
inc
push
out
add
jbe
mov
mov
out
cld
add
push
sti
iret
cli
fcomp
lock
cli
daa
dec
jae
pop
inc
sti
out
sub
std
decl
enter
add
add
add
add
push
mov
incl
add
faddl
mov
stos
mov
into
add
add
es
push
out
mov
jnp
cmp
pop
push
sub
mov
dec
or
data16
jg
pop
sar
decl
lods
std
xor
sar
cld
in
sti
jl
decl
jle
sbb
sahf
mov
cli
and
inc
sti
cmp
cld
nop
cld
cli
sub
push
inc
mov
incl
ljmp
add
push
add
in
add
add
xor
push
add
decl
ss
jns
idiv
jno
or
cmc
sti
filds
andb
fsin
and
cmp
lcall
add
mov
mov
ja
add
add
xchg
add
add
add
add
or
stos
decl
stos
pusha
jmp
fwait
pop
and
paddd
arpl
mov
cmc
outsl
or
cmp
pushf
add
add
add
pop
add
adc
add
jg
pop
ljmp
sarb
inc
add
add
add
and
pop
mov
add
pop
data16
fdivr
jl
mov
pop
rcll
add
sbb
fimuls
add
add
jg
neg
lcall
incb
mov
rol
test
std
fs
xchg
testb
jb
mov
fnstsw
sbb
adc
push
stos
sub
ljmp
dec
pop
mull
ficomps
std
outsb
mov
loop
sahf
clc
data16
add
insb
push
adc
cmpsl
add
sahf
leave
add
add
aaa
in
cmp
shlb
push
xor
mov
outsb
add
loopne
lcall
add
iret
ljmp
out
cmpsb
push
jl
stos
std
fidivrs
stc
or
inc
add
mov
sbb
nop
aad
aas
mov
add
add
add
movsb
add
jbe
scas
das
inc
out
mov
lcall
add
pop
add
add
loop
cmp
push
mov
mov
push
call
push
cmp
test
sub
inc
pop
mov
xchg
outsb
cmpsb
pop
add
add
or
add
add
add
mov
adc
decl
shlb
je
xor
fdivr
stos
cld
xchg
cld
mov
insb
aaa
push
mov
xor
mov
add
ljmp
sub
add
sti
rorl
test
insb
std
sbb
sar
mov
adc
ret
std
xchg
decb
loop
lahf
outsb
push
add
add
add
sbb
push
outsb
dec
lret
add
cmpsb
sbb
mov
es
add
pop
push
xchg
lret
push
add
jp
addl
add
cld
adc
incl
ud0
mov
push
or
pushl
cmp
rcrb
jecxz
add
test
add
faddl
add
add
jge
xor
mov
lcall
xchg
jmp
mov
scas
cmp
dec
adcb
je
cli
mov
nop
add
ret
sbb
xchg
add
aad
add
add
mov
pop
fldl
add
add
bound
out
ljmp
ret
push
out
lahf
cs
int
sahf
cld
push
cld
push
jl
incb
arpl
lcall
stos
ret
fildl
fiaddl
mov
dec
push
das
cli
lcall
mov
into
test
std
pop
pop
loopne
inc
mov
ss
sbb
out
push
xchg
mov
rcll
stos
out
std
cmp
out
add
cli
mov
out
test
lret
add
cltd
add
popf
sub
and
add
push
adc
cmp
add
incb
in
std
mov
ja
push
and
scas
mov
loopne
dec
or
add
sbb
cmp
add
add
jbe
icebp
push
dec
cmpsb
lods
loop
jle
decl
ljmp
pushl
push
sub
sahf
mov
lahf
sbb
call
mov
add
jg
ret
dec
add
adc
es
pushl
mov
add
add
adc
dec
or
pop
xor
jge
or
mov
frndint
mov
jmp
mov
cld
sbb
pop
std
mov
decb
mov
add
push
ret
add
add
xchg
loopne
fldl
adc
mov
movw
les
das
bound
inc
decb
lret
std
shlb
or
mov
movsl
ljmp
or
sti
pop
sti
sti
std
sti
xchg
cld
sbb
loope
sahf
lcall
mov
add
add
rclb
clc
jmp
add
add
add
ret
lret
xchg
ret
push
fisubrl
jo
and
mov
sar
jg
jecxz
cs
pop
mov
sar
pop
pop
es
ljmp
pop
add
call
add
add
mov
mov
cs
pop
add
pushl
decl
jbe
pop
jl,pn
std
mov
add
xchg
pop
clc
popl
mov
lcall
xor
dec
add
loop
add
cmp
mov
mov
or
clc
sbb
or
lods
decb
ja
push
bound
ret
xor
decb
ror
shl
mov
lcall
push
lcall
jecxz
out
inc
clc
call
pop
mov
mov
dec
std
jle
dec
std
xor
scas
outsb
push
hlt
cld
enter
loop
xor
and
mov
or
cmp
add
push
add
mov
lods
bound
mov
xchg
add
add
add
sbb
sub
add
add
dec
cld
rol
xchg
decl
decb
adc
jnp
movsl
add
push
add
cs
add
mov
sbb
adc
push
mov
fisubl
or
and
inc
adc
rcll
mov
jle
add
add
test
stos
push
outsb
nop
push
xlat
add
add
add
push
fcoms
pop
ss
mov
fsin
cmpsl
decb
push
lcall
or
addb
scas
xchg
out
jecxz
call
scas
out
js
bound
jmp
loope
or
imul
add
decb
sbb
std
std
jp
cmp
add
dec
sar
in
cld
adc
sbb
jg
mov
jle
add
jp
push
pop
add
sbb
scas
push
add
out
add
add
lcall
push
or
inc
fisubrl
mov
add
sahf
aam
xor
repnz
mov
dec
mov
pop
or
jle
inc
lock
inc
or
add
dec
pop
pop
inc
out
out
push
mov
add
mov
ret
jbe
inc
add
ret
ss
add
sub
xor
jle
pushl
bound
sbb
add
add
dec
ficoml
cmpsb
sbb
mov
mov
add
mov
idivb
aad
sub
ljmp
call
jno
cmpsb
push
xchg
std
xor
mov
out
outsb
push
add
loop
outsb
aam
push
out
mov
lret
lcall
lcall
adc
or
pushl
cmc
sbb
out
cmp
data16
cmp
das
dec
jle
add
add
add
pop
and
add
rcll
aam
xchg
cmpsb
mov
mov
xor
add
sbb
cmp
jno
and
push
mov
xor
jae
sub
and
add
sbbb
lock
inc
add
out
pushf
push
ja
mov
inc
ss
pop
sbbl
push
fnsave
into
divb
add
test
scas
cltd
add
push
iret
push
pop
imul
xchg
decl
pop
or
hlt
fbld
decl
push
fsubrp
scas
cltd
decb
sahf
out
adc
std
ss
std
cmpsl
std
xor
sub
sub
dec
jp
test
jl
mov
jp
ret
cmp
pop
test
es
xor
arpl
adc
push
pop
jmp
mov
push
and
cli
pop
ljmp
dec
mov
add
add
push
hlt
jo
hlt
out
lgdtl
or
loop
es
mov
popl
sahf
rcl
cli
cmova
mov
roll
mov
lcall
mov
xchg
jecxz
test
add
inc
out
sti
sbb
mov
pxor
xchg
ret
lret
cmc
push
addl
jge
inc
mov
rcrl
gs
xchg
mov
in
or
sbb
popf
icebp
imul
cmp
and
bound
dec
mov
sbb
rcll
adc
mov
fldl
inc
cli
mov
roll
push
divb
out
incl
pop
outsb
xchg
stos
inc
add
lea
pop
loopne
cmp
repnz
imul
pop
out
ljmp
aam
mov
scas
jnp
inc
pop
sub
pop
ss
dec
cmpsb
outsb
xor
cmp
bound
in
iret
add
mov
push
dec
pop
xor
mov
lret
aad
push
mov
lock
sahf
jns
insb
lret
adc
out
mov
mov
movl
stos
mov
cmpl
loopne
jmp
or
notb
dec
ret
mov
adc
outsb
cmc
jp
std
sbb
push
adc
pop
andb
xchg
dec
test
inc
shrl
push
xor
cmp
out
test
or
push
inc
mov
add
add
dec
sbb
push
mov
inc
xchg
sbb
shlb
in
test
outsb
mov
or
sahf
mov
mov
loope
int3
push
test
or
push
jb
add
dec
pop
shlb
imul
ds
pop
mul
cli
mov
push
loope
inc
scas
inc
movsb
xchg
xchg
jb
jge
shl
data16
es
aam
js
outsl
lret
out
adc
xor
jbe
ret
test
sub
jbe
mov
mov
mov
fcomi
inc
xchg
bound
pop
fidivrl
je
mov
pop
mov
pushl
test
and
mov
cs
rcll
repnz
cld
sbb
inc
mov
cli
lods
lret
fmull
adc
rcll
outsl
push
inc
mov
iret
andl
push
xor
andb
inc
mov
jo
add
cmp
jno
movsl
xchg
jns
mov
hlt
lcall
mov
jge
push
xchg
mov
out
out
jmp
loope
mov
push
push
add
lcall
dec
adc
lods
dec
std
jp
add
pop
sahf
cli
sbb
sub
ds
push
jnp
js
add
jp
cmp
and
pop
out
jnp
popa
pop
push
pop
stos
lock
sbb
jbe
push
test
rol
jle
inc
hlt
clc
js
xor
jb
outsb
mov
cli
cmp
push
repnz
jno
or
popa
ss
mov
sub
cmp
mov
mov
push
add
rorb
jl
or
arpl
mov
faddl
or
mov
mov
outsb
testb
outsb
cli
dec
jo
fisubrs
push
hlt
mov
and
icebp
hlt
jno
jbe
ret
mov
testl
xor
cs
push
push
mov
sarl
ljmp
pusha
dec
mov
inc
jnp
add
or
lret
xchg
xchg
cmp
and
add
or
idivl
sbb
fiadds
xlat
test
jg
je
push
cmp
push
js
imul
push
pop
pop
fs
inc
adc
push
lret
or
adc
sarl
cwtl
ret
or
out
mov
adc
mov
dec
sbb
scas
mov
xchg
ficoml
inc
and
jp
rol
push
and
inc
push
or
push
cmp
or
xor
rol
push
pop
push
cmpb
mov
shrl
addr16
push
jbe
add
pop
add
jl
add
inc
addb
cmpb
dec
out
jle
or
cmp
fists
mov
xor
adc
loopnew
add
repz
sbb
add
add
push
andl
sub
inc
sahf
sahf
cmpsl
scas
or
fldcw
sahf
ds
ss
push
mov
shl
jecxz
loope
loop
push
into
mov
into
mov
lods
push
fcmovnu
push
xchg
mov
dec
add
sub
mov
sbb
dec
out
lcall
jbe
fiaddl
cmp
push
mov
inc
rcrl
push
jp
ss
mov
bswap
push
push
ret
xor
xor
sub
aaa
fidivrl
or
mov
or
mov
sub
ss
or
scas
inc
jbe,pn
mov
mov
and
or
and
roll
scas
adc
add
repnz
aad
kaddw
dec
divl
inc
sub
sbb
add
fstpl
leave
jbe
scas
lods
daa
pop
pop
jbe
sub
push
pop
test
add
out
data16
mov
ret
icebp
jno
jle
cmpsl
lcall
dec
jmp
arpl
sbb
fisubrs
je
fcmove
outsb
ljmp
xor
aad
cmp
subb
inc
push
jnp
pop
adc
push
cs
add
sbb
ljmp
xor
mov
dec
aam
iret
inc
push
push
push
pop
faddl
and
loop
ficoms
cmp
aad
add
push
out
ret
cs
scas
or
jle
jb
lret
xchg
jecxz
inc
vdivss
inc
add
jnp
out
mov
push
push
jb
add
mov
add
add
adc
xlat
je
pop
cmp
cs
movb
mov
std
push
sbb
inc
in
aad
stos
pop
out
mov
outsb
clc
mov
hlt
fiadds
sahf
jmp
js
aas
fiaddl
push
aad
hlt
inc
sti
repnz
mov
scas
pop
ret
sbb
out
jp
lret
ja
push
cli
adc
adc
inc
and
ss
push
fsubp
lcall
mov
mov
sbb
dec
out
imul
mov
pop
loopne
repnz
push
mov
push
sbb
inc
sbb
pop
inc
xchg
stc
push
jnp
mov
incb
sub
data16
in
xor
out
fsubrp
push
clc
dec
xor
stc
adc
out
imul
daa
sub
push
sub
daa
pop
inc
and
fwait
outsb
addr16
lcall
loopne
out
mov
and
in
mov
pop
hlt
jmp
cld
sub
hlt
push
out
xor
inc
ss
cmp
add
add
or
out
jge
push
out
sub
sbb
inc
ja
out
ds
inc
sbb
sbb
faddp
jnp
sbb
add
and
lock
ss
push
out
pop
lock
mov
xchg
std
imul
cmpsb
mov
sub
mov
clc
jmp
out
idivl
dec
loopne
cmc
emms
inc
adc
mov
add
or
pop
jp
gs
pop
repz
jo
scas
add
add
loope
adc
adc
add
xor
scas
pop
out
loope
dec
push
dec
adc
arpl
cmc
fcomi
push
pop
jnp
ds
pop
mov
push
cmp
testl
inc
add
sub
ffree
add
es
cmp
fcoml
loopne
iret
add
push
add
jnp
fcomi
push
idivb
sti
sub
mov
inc
mov
add
idivl
sti
aas
testb
inc
std
xor
push
or
pop
xchg
js
adc
pushf
sub
and
sbb
sbb
movsl
jo
addb
pop
dec
jb
and
jl
test
idivb
test
jns
jle
addb
jle
fdiv
out
insb
add
es
orl
push
aaa
cmpl
push
jns
jp
stos
addl
lahf
xor
les
cmpb
mov
fstpt
dec
test
jnp
inc
cmpl
imul
addl
jl
mov
mov
jle
jp
test
shrb
pop
test
enter
shlb
jp
jg
inc
push
addb
call
pop
idivb
fmulp
pop
jns
xchg
xchg
jo
xchg
mov
mov
outsb
push
push
test
es
cltd
xchg
lea
cltd
mov
dec
aas
inc
inc
cmp
ljmp
js
pop
pop
data16
mov
mov
pop
inc
cmp
sub
push
andb
mov
dec
inc
dec
pop
ja
movsl
mov
mov
mov
jbe
cmp
aaa
xor
xchg
idivb
sarb
dec
pop
jno
cmpsb
ds
mov
imul
mov
outsb
lea
jge
inc
push
bound
ds
stos
sahf
xchg
xchg
out
clc
xchg
lea
inc
ds
outsl
xchg
stos
mov
stos
cwtl
jns
push
push
push
imul
pushl
jns
dec
dec
push
inc
dec
test
test
pop
popa
mov
ljmp
lea
xchg
xchg
outsl
push
cmp
outsl
xchg
test
cmpsl
mov
sar
lcall
je
cwtl
cmpsb
mov
lods
mov
pop
dec
inc
dec
inc
dec
popa
sbbl
mov
pop
arpl
xchg
mov
xchg
xchg
xchg
jg
inc
aas
dec
inc
dec
bound
ljmp
imul
cmpb
mov
clc
jg
pop
ds
dec
inc
dec
data16
push
pop
popa
jb
xchg
movsl
mov
in
push
das
mov
cltd
xchg
inc
cmp
jne
cmpsl
lods
movsb
sahf
mov
divb
mov
scas
mov
test
cmp
inc
popa
sbbb
mov
push
pop
addr16
movsb
mov
lods
mov
inc
cmp
dec
inc
lock
call
xchg
movsl
lods
cmpsl
popf
ja
jo
mov
loope
in
lahf
fwait
cltd
lcall
mov
imul
data16
movsl
mov
cwtl
xchg
xchg
cmp
pop
jle
push
add
ljmp
mov
mov
xchg
mov
cmp
inc
push
je
mov
and
cmpsb
insl
adcl
jp
fistpl
cmp
push
pushf
test
test
clc
call
imul
cmpsb
mov
inc
cmp
popa
sbbb
lods
cmpsb
sahf
mov
pop
pop
gs
xchg
test
cltd
mov
cmp
dec
dec
pop
jp
mov
sahf
lahf
xchg
jnp
pop
pusha
data16
clc
mov
ret
or
inc
cmp
xchg
mov
pop
pop
mov
jle
mov
mov
cmp
outsb
mov
cmpsb
lahf
xchg
subl
jl
fwait
stos
or
gs
inc
dec
mov
push
adcb
gs
lock
movsl
stos
movsl
mov
lcall
dec
dec
push
dec
pop
jne
popf
mov
bound
nop
lahf
stos
cmpsl
jbe
mov
push
dec
push
push
pop
insl
adcl
mov
data16
jp
cltd
mov
jbe
dec
push
pop
push
pop
pop
in
clc
pushl
xchg
lcall
imul
movsb
ficoms
decl
insl
pop
push
pop
pop
pop
push
lea
imul
jp
xchg
lahf
movsl
sbb
xchg
mov
pop
pusha
pusha
jg,pn
sti
jg
mov
ja
insb
insl
jb
xchg
sahf
mov
jle
lock
sbb
mov
insl
outsb
jo
orb
mov
jnp
jbe
fs
popl
mov
cld
jno
jb
test
mov
mov
imul
mov
ja
xchg
aad
push
push
outsb
mov
jg
push
xchg
jge
adc
jge
lea
outsb
lock
outsl
insl
mov
js
mov
add
mov
test
xorl
sbb
in
jnp
sbbl
lea
and
jae
push
outsb
jbe
push
rolb
xacquire
adc
hlt
jnp
jno
insb
jae
push
lret
fisubrl
push
mov
xchg
outsb
ss
adc
jge
jo
adc
pop
mov
lods
mov
jl
push
add
xchg
js
cld
push
adc
imul
mov
andb
loopne
jg
jle
imul
jne
mov
add
adc
add
or
add
pushl
arpl
jbe
nop
cwtl
popf
fwait
xchg
lea
sarb
rolb
adc
lock
stos
outsl
fidivl
jle
nop
xchg
xchg
mov
jl
or
mov
push
outsb
mov
je
mov
xchg
nop
mov
jnp
test
sbbb
js
jb
jle
mov
sbb
dec
xchg
jg
test
xor
or
cmp
jae
and
cmpsb
pop
fcompl
mov
or
mov
ja
ja
lods
xchg
cmp
jp
add
sarl
jle
xor
xor
mov
mov
xor
or
jnp
jge
loopne
push
cmpsb
push
mov
fadds
into
jb
mov
mov
xor
cmpl
negl
jo
dec
jnp
jl
jae
mov
add
arpl
add
lock
fidivrs
xlat
insl
fwait
pusha
pop
inc
repz
jle
mov
xchg
arpl
pop
sbb
out
gs
and
xlat
lock
jnp
fnstenv
inc
jo
js
sub
sbb
inc
xor
push
jl
test
sbbl
pop
sahf
mov
out
lea
fcmovnbe
fimuls
sbb
popf
push
inc
sub
xorb
xchg
sti
inc
xchg
fstpt
xor
jl
cltd
pop
xor
sbb
sub
js
xchg
push
push
scas
aas
mov
adc
sub
stos
adc
pop
mov
fsubrs
out
mov
inc
or
push
enter
pop
mov
les
insl
jg
add
mov
aas
adc
jno
jae
bound
xchg
push
outsl
orb
pop
and
addl
movl
add
mov
add
fmull
test
adc
xorl
cmpsb
push
lahf
add
add
push
xor
sub
and
aad
or
aad
orl
inc
outsl
fnsave
fwait
jl
imul
pop
sbb
xchg
fimull
cmp
push
add
movsb
inc
mov
pusha
test
in
lea
jae
mov
addps
mov
push
push
adc
insb
aad
mov
cmp
or
lret
xor
pop
pop
roll
pop
cmp
mov
inc
sub
mov
xchg
fwait
xor
mov
add
xchg
orb
mov
cmpb
pop
andb
iret
push
or
or
inc
popa
push
jno
adc
gs
insb
ds
inc
jmp
xor
mov
adc
inc
ja
sbb
inc
push
or
mov
ljmp
pop
mov
cmp
lahf
jge
add
push
push
xchg
imul
fsubrs
popa
and
dec
test
fistpll
js
je
je
jp
addl
test
mov
xchg
out
jg
insb
imul
jl
cmpl
mov
test
jg
xchg
xchg
xchg
xorl
mov
jne
call
jne
jnp
xchg
lea
fs
in
orl
ja
je
jae
jp
mov
mov
in
push
xchg
pop
inc
arpl
xchg
xchg
xchg
nop
mov
jae
jo
je
jle
ljmp
xchg
xchg
xchg
push
pushf
mov
pop
bound
addr16
nop
and
scas
aam
fistps
outsl
jbe
mov
xchg
pop
addb
pushl
data16
pusha
jb
mov
jo
gs
orb
pushf
sahf
pushf
cltd
xchg
mov
popa
pusha
push
nop
xchg
cltd
cltd
xchg
xchg
push
mov
imul
jno
test
add
xchg
imul
ret
xorb
pusha
push
pushf
jge
cwtl
mov
xchg
mov
pusha
ret
xor
pop
imul
cmpsb
lahf
and
pushl
imul
mov
cmpsb
xchg
mov
mov
push
dec
imul
scas
mov
scas
mov
push
push
pop
popa
test
mov
lods
mov
xchg
xor
xchg
lods
mov
jl
pop
dec
dec
push
pop
pop
inc
cli
jmp
jg
xchg
mov
movsl
lcall
dec
push
ds
jge
xchg
shll
inc
dec
push
pop
inc
mov
mov
mov
mov
xchg
inc
and
outsl
mov
stos
xchg
je
dec
inc
inc
jg
std
fisttps
fs
xchg
cmpsl
mov
mov
cwtl
xchg
aas
sbb
sti
incl
mov
mov
jne
dec
ds
push
pop
fs
xchg
lcall
fists
sub
xor
mov
lahf
andb
aaa
inc
inc
push
pop
je
xchg
ljmp
mov
cwtl
pushf
jne
adc
xor
jns
leave
fmul
mov
jae
inc
sub
lock
loopne
mov
mov
mov
or
pushl
push
sub
ret
fst
lds
sub
aaa
dec
pop
ja
movsl
mov
rol
mov
jmp
sbb
pop
push
xchg
mov
mov
inc
xor
aaa
dec
pop
jb
movsb
mov
sar
inc
ret
test
test
sbb
sbb
mov
mov
imul
pop
lcall
loope
nop
stos
ds
lods
lods
jge
or
sbb
pop
lcall
loope
int
sbbl
and
xchg
scas
mov
sbb
xchg
dec
unpcklps
lods
int3
fsubp
fcmovnb
cwtl
jae
aaa
daa
sbb
cmp
mov
shl
lret
mov
and
sbb
popf
mov
call
lods
andl
sbb
xor
popf
mov
enter
scas
lods
test
or
adc
cmovns
inc
mov
mov
jo
xor
push
sub
push
mov
scas
ret
ror
ret
mov
cmp
dec
adc
sbb
pop
xor
out
dec
mov
push
and
dec
andb
mov
bound
adc
or
and
call
fnstenv
push
push
cs
popa
jge
mov
into
dec
lret
mov
push
and
nop
mov
jecxz
mov
push
xor
dec
inc
pop
cld
lcall
jns
mov
sub
lret
sarb
sbb
pop
add
pop
mov
mov
dec
xor
xor
jp
mov
fimuls
mov
jmp
pop
sbb
mov
mov
insb
push
xor
and
inc
pop
jl
mov
into
rcl
int3
lcall
mov
push
and
sbb
mov
loopne
lods
mov
xor
xor
pop
jl
mov
mov
xchg
push
pop
sub
add
cld
idiv
add
arpl
scas
mov
and
aaa
dec
pusha
jge
leave
into
fcmovnbe
lret
lods
lea
sub
add
cmp
scas
lret
int
mov
xor
sub
jmp
xchg
scas
rol
into
lret
mov
das
sbb
cmp
stos
fcmovne
test
idivl
xor
das
inc
push
arpl
int
mov
dec
sub
jmp
or
aad
enter
push
cmp
ss
push
data16
mov
mov
xor
add
aaa
pusha
xorb
stos
sub
ss
inc
push
js
cmpsl
aam
fildl
sub
roll
xchg
push
xor
and
xchg
mov
aam
mov
lcall
incl
ds
pop
outsl
test
lds
and
ljmp
push
jno
lods
ror
mov
mov
inc
cmp
push
push
fwait
scas
mov
fnstsw
shlb
or
ss
jno
stos
mov
je
incl
or
xchg
stos
mov
shll
sti
neg
decb
ss
insl
xchg
jns
dec
inc
inc
dec
fs
test
mov
jg
arpl
int
scas
mov
sub
sbb
push
insb
xchg
movsl
xchg
jnp
fcomi
lcall
inc
inc
inc
dec
arpl
cmpsb
mov
in
enter
incl
sbb
push
imul
cmpsl
cwtl
andb
inc
inc
dec
pusha
jne
movsb
ljmp
iret
leave
mov
das
push
sbb
cwtl
add
call
lods
mov
pop
dec
inc
inc
dec
pop
outsl
xchg
fcomip
lcall
or
cmp
xor
jbe
movsb
jp
lods
mov
mov
pop
dec
inc
inc
dec
pop
insb
test
shlb
and
xor
je
cli
decl
lods
mov
dec
inc
inc
push
addr16
cmpsb
mov
mov
fildl
inc
push
push
adc
test
dec
lcall
mov
mov
dec
cmp
and
cmp
mov
inc
cmp
dec
pop
xchg
je
adc
clc
push
inc
mov
dec
xor
sub
sub
popf
xchg
push
dec
dec
dec
decl
lcall
cltd
addr16
dec
inc
and
add
rcrb
xchg
jnp
pop
in
adc
fs
mov
leave
sarb
in
mov
cmp
pusha
jae
popf
scas
mov
loopne
js
pop
push
dec
dec
pop
push
incb
mov
mov
jle
dec
dec
xor
push
add
addr16
mov
xchg
dec
push
pop
outsb
loope
add
lret
sarb
das
and
decl
imul
test
pop
push
dec
push
popa
outsl
adcl
popf
insl
dec
push
dec
sub
dec
pop
insb
jle
std
pop
mov
xchg
test
xorl
arpl
xchg
ret
out
xor
aam
push
push
dec
sub
push
xchg
mov
xchg
xorl
pop
push
push
pop
gs
and
mov
push
dec
sub
lcall
mov
xchg
xorb
pop
pop
pop
data16
mov
aas
andb
dec
xor
cmp
jp
pushf
mov
mov
jp
gs
pop
pop
dec
sahf
lods
fadd
mov
pop
pop
add
scas
push
or
cmp
pop
push
lahf
xchg
xchg
jo
pop
pop
dec
lea
lahf
jbe
pop
adc
inc
cs
ja
cwtl
mov
mov
addr16
pop
pop
cs
decl
mov
lods
xchg
jno
push
dec
xor
push
cltd
lahf
pop
add
fistpl
jb
pop
pop
pop
push
mov
mov
pop
pop
dec
xor
imul
xchg
mov
pop
inc
lock
ljmp
adcl
mov
test
inc
xor
mov
cltd
fwait
sahf
mov
jo
pop
pop
arpl
xchg
test
mov
ds
push
cmp
nop
cwtl
fistps
add
arpl
les
pushf
mov
mov
push
dec
cmp
push
pop
push
test
xchg
mov
arpl
orl
mov
push
inc
ss
insb
jp
xchg
sbb
popf
lcall
pop
fs
push
mov
xchg
add
ds
rcr
jo
mov
outsl
addr16
lock
js
mov
mov
arpl
cmp
ret
jb
xchg
jg
lock
mov
jae
mov
lods
mov
push
movsb
mov
pop
inc
cmp
push
pusha
push
js
mov
lcall
imul
repnz
sarb
test
push
inc
aaa
aas
dec
push
bound
mov
popf
pushf
xchg
mov
gs
mov
mov
pop
push
inc
inc
lock
sbb
jp
imul
dec
fwait
xchg
insb
jnp
aas
adc
mov
cmpsb
stos
lcall
xlat
cmp
xchg
xchg
cltd
lcall
roll
cs
sub
mov
enter
mov
mov
inc
push
pop
addr16
dec
xchg
xchg
xor
call
outsl
push
push
ja
loop,pn
xchg
sbb
jbe
js
dec
xor
idivb
xchg
xchg
cltd
cwtl
xchg
popl
jo
test
cmpsb
jnp
mov
je
dec
cmp
xchg
cwtl
cwtl
xchg
test
andb
jno
test
movsl
dec
addr16
outsl
fwait
inc
icebp
dec
cmp
dec
ds
dec
xchg
xchg
xchg
xchg
mov
jae
imul
jnp
movsl
lods
mov
add
cs
lcall
aaa
cmp
jae
xchg
xchg
xchg
cs
lea
je
call
lcall
mov
pop
dec
aas
or
jnp
dec
push
jl
test
jge
sub
mov
dec
push
jb
xchg
bound
fcompl
aaa
inc
dec
push
dec
xchg
ja,pn
inc
pminsw
jb
mov
ja
fwait
test
mov
fs
dec
cs
pop
pop
cld
and
jae
adc
xchg
lea
push
add
xchg
jp
mov
out
dec
pop
cmc
mov
push
pop
fdivrl
nop
fimull
inc
sti
cwtl
nop
mov
jp
push
insb
mov
adc
fcomps
sub
or
mov
hlt
inc
push
test
mov
mov
cltd
subb
ds
push
pop
push
test
jp
inc
push
mov
push
ficompl
adc
mov
ret
cmp
dec
xor
adcb
push
or
lahf
into
mov
push
inc
jo
mov
ret
je
pusha
jbe
lock
inc
dec
in
outsl
jl
xor
insb
incl
jbe
mov
movsl
xchg
jl
bound
cmpsb
ja
inc
inc
in
pop
pusha
imul
xchg
clc
decl
insb
pop
xchg
lahf
cmpsl
scas
mov
mov
popf
mov
pop
dec
aas
push
cltd
arpl
rclb
jbe
push
xchg
mov
lods
mov
mov
addr16
inc
in
pusha
insb
inc
xchg
mov
xchg
in
in
xorl
xchg
mov
cld
inc
sub
dec
ds
push
push
pop
or
adc
pop
cwtl
pushf
popf
dec
js
imul
ja
sub
mov
lods
mov
lock
inc
inc
push
popa
insl
jnp
xchg
popf
cwtl
nop
mov
mov
insb
jo
xchg
popf
movsb
adc
push
jnp
mov
dec
aas
inc
dec
cwtl
sub
xchg
dec
jge
dec
insl
jae
fbld
cld
jnp
cltd
mov
xchg
subb
dec
inc
dec
push
push
pop
aaa
cli
cli
or
xchg
xchg
or
adcl
mov
movsl
pushf
mov
push
inc
inc
dec
push
nop
outsb
jl
mov
loopne
cwtl
sahf
cwtl
mov
sbb
or
mov
xor
pop
push
sbb
and
inc
inc
add
incl
outsb
jne
lea
das
xor
xchg
xorb
lock
xchg
xorl
mov
ljmp
cwtl
ja
pop
pop
dec
inc
out
push
add
cltd
xchg
mov
mov
lcall
dec
push
fmuls
into
outsw
jle
out
loop
insb
jle
and
xor
mov
cmp
fildll
push
inc
inc
dec
xor
jg
inc
fistpl
je
xchg
popf
push
mov
movsb
fwait
test
pop
or
cmpsb
pop
dec
inc
dec
addb
mov
mov
jl
push
cld
fbstp
mov
cwtl
jg
gs
dec
inc
dec
dec
sahf
cwtl
pop
mov
cli
xchg
test
lcall
nop
shrb
xor
dec
jl
cmp
inc
inc
dec
push
pop
pop
out
imul
shrl
mov
cmpsb
pushf
mov
arpl
inc
dec
push
roll
xor
mov
xchg
push
sbb
insb
push
jp
xchg
add
xchg
jp
into
inc
dec
dec
outsl
scas
mov
dec
cmp
outsw
jne
test
in
popf
jae
pop
push
and
cmpsl
mov
out
pop
gs
cwtl
popf
cmp
cmpl
insl
jno
adcl
out
outsb
add
dec
inc
sbb
cmp
or
clc
jg
mov
lods
mov
push
inc
inc
into
push
inc
shlb
jl
test
push
ret
cmpl
mov
pop
push
gs
jns
push
inc
dec
dec
and
mov
jb
mov
lea
or
push
dec
into
and
add
cltd
mov
and
out
js
les
subl
dec
inc
push
pop
aam
sbb
or
xchg
fwait
lahf
xor
jg
mov
add
out
into
dec
push
fsubrl
mov
push
out
popa
insb
jp
pop
mov
add
insb
outsb
jno
mov
repz
mov
js
inc
dec
dec
xor
sub
popf
push
mov
xchg
adc
outsl
enter
push
lock
mov
dec
inc
xor
dec
jb
fdivrl
popf
mov
js
dec
adc
cwtl
cmpsb
nop
cltd
mov
test
push
inc
inc
dec
dec
arpl
mov
test
push
jns
outsl
xchg
insb
movsl
cmpb
cmpsl
lcall
dec
push
andb
sahf
fwait
xchg
popl
mov
pop
jg
mov
rolb
inc
inc
les
mov
fwait
dec
mov
cwtl
jno
pusha
cli
testl
mov
subb
inc
test
or
cmp
push
mov
jne
push
lcall
cmpsb
mov
mov
movsl
xchg
jge
jmp
mov
push
pop
push
nop
scas
stos
jge
popf
cltd
xchg
push
jne
outsb
dec
jb
xchg
call
jecxz
lods
movsl
mov
push
inc
dec
push
pop
insb
adc
dec
xchg
mov
jo
sub
movsl
lods
shrb
push
inc
inc
inc
dec
inc
jns
aas
in
xchg
sahf
cwtl
xchg
stos
ja
jo
mov
fisttpl
jge
push
sub
call
dec
nop
jb
jno
es
loopne
repnz
add
mov
out
arpl
insl
jl
xchg
cwtl
xchg
xchg
inc
add
dec
cltd
movsb
mov
mov
mov
aaa
clc
popa
dec
inc
inc
inc
ss
ss
ja
cli
cmpsl
mov
cmpsb
lcall
dec
dec
mov
sbb
movsb
xchg
mov
ret
jno
jae
fcompl
cwtl
mov
pop
dec
inc
dec
inc
dec
add
xorb
lods
incb
scas
mov
dec
inc
pop
or
data16
cmpb
xchg
rorb
mov
push
in
or
push
xchg
dec
xchg
movsb
adcl
adc
jp
jb
jg
jle
stos
mov
cmpsl
sahf
lea
fs
dec
dec
loopne
lock
repnz
fwait
mov
pop
icebp
xor
xchg
movsb
lods
mov
cmpsb
fwait
clc
pop
dec
dec
loope
add
sub
or
mov
xchg
mov
xor
jnp
push
dec
dec
dec
mov
push
cltd
mov
jbe
out
stos
clc
je
js
mov
mov
mov
dec
dec
dec
dec
jo
push
xchg
out
dec
jne
lds
pushf
movsl
cwtl
stos
movsl
xchg
sub
dec
cwtl
test
adc
dec
dec
push
ljmp
or
jne
scas
bound
lods
xchg
nop
mov
push
lret
jae
call
adc
cmpb
xorb
cltd
mov
dec
out
cltd
subl
orb
jne
orl
nop
add
push
push
push
lcall
xchg
mov
cmp
data16
js
sbb
ficoms
push
sub
push
push
dec
cwtl
pop
enter
push
mov
call
andb
pusha
cmpsl
lods
stos
fsub
add
pop
push
dec
lahf
arpl
mov
das
scas
mov
xor
mov
test
inc
dec
push
pop
imul
jns
int3
xchg
adc
xchg
mov
dec
add
ret
jns
push
or
jnp
jle
push
push
std
xchg
js
pop
mov
fs
jmp
adcb
cmp
sub
xchg
lcall
jno
push
dec
cwtl
out
inc
ret
inc
sub
mov
xor
and
jle
subb
repnz
mov
inc
insb
js
pusha
mov
xchg
xor
lahf
mov
sahf
xchg
mov
pop
push
dec
or
sub
push
cmp
push
cmp
dec
orb
into
stos
movsl
fwait
xchg
test
pop
dec
inc
cmpsb
dec
pop
gs
sub
jmp
jle
jbe
dec
push
and
push
jg
pop
icebp
xchg
dec
inc
inc
dec
add
je
mov
ljmp
andb
ljmp
cltd
mov
pusha
push
dec
inc
inc
dec
mov
stos
ss
test
cmpsb
inc
test
rorb
push
loope
sub
fldt
inc
stos
jle
and
xchg
popf
movsl
stos
dec
mov
decb
dec
inc
loopne
jo
test
xchg
movsb
popf
mov
jg
pop
je
xor
js
fwait
mov
cmpsb
jb
cld
ret
lds
inc
inc
dec
or
mov
push
add
ds
jg
incb
or
push
inc
inc
inc
push
pop
imul
incb
push
movsl
cmpsl
cmpsb
mov
data16
lcall
push
pusha
mov
mov
pop
dec
inc
aas
aas
inc
dec
inc
lds
pop
push
sarb
icebp
pop
insb
sahf
insl
jno
cwtl
mov
cwtl
or
push
inc
aas
sbb
dec
push
gs
or
sbb
outsl
pushf
xchg
jmp
popl
inc
inc
inc
dec
push
lret
pushf
lods
scas
lods
cmpsb
adc
test
cmp
outsl
mov
mov
mov
cs
lods
sbb
dec
push
pop
insb
jnp
stos
jb
inc
lock
enter
outsb
insl
jo
fdivs
bound
dec
dec
scas
pop
jmp
shl
addr16
xchg
push
stos
add
js
outsl
jo
ja
es
cwtl
movsb
sbb
sub
insb
pop
fs
and
test
xor
loopne
movsl
mov
sub
jg
out
dec
mov
imul
push
pop
pop
arpl
in
xchg
add
rolb
adc
xchg
jg
add
adc
mov
inc
mov
pusha
pop
pop
pop
fs
jl
popa
mov
enter
push
xchg
outsl
ljmp
insl
push
sbb
pop
pushf
xchg
xchg
jb
and
and
jle
std
hlt
outsb
loope
outsl
lods
imul
xchg
push
pop
mov
lea
nop
push
pusha
add
dec
cmpb
fiaddl
push
xchg
xchg
add
test
stos
insb
xchg
scas
or
and
jge
mov
pop
popa
adc
nop
nop
aas
or
fmul
jle
jns
jl
pop
js
fsubs
cltd
leave
xchg
inc
mov
xchg
lock
jp
popa
sub
jae
bound
fs
ficompl
adc
dec
subl
loopew
pop
loop
push
push
cmpsb
test
pushf
addl
test
add
dec
fs
movsb
inc
fdivs
fildll
sub
mov
popa
outsb
sub
xchg
cmp
and
ss
adcb
das
pop
and
sub
add
adc
sub
adc
pop
jnp
sub
pop
xchg
mov
out
push
inc
add
jb
in
adc
mov
push
cmp
out
aas
inc
xchg
inc
mov
dec
mov
inc
outsb
int
stc
xor
lahf
outsl
std
mov
imul
and
repz
repz
jae
push
movsl
idivl
iret
out
jne
leave
pop
jbe
es
jl
into
push
int
jnp
xchg
lret
test
mov
mov
mov
cld
nop
sub
adc
repnz
xchg
push
pop
xchg
push
dec
xchg
testb
dec
repz
xor
in
mov
fldcw
movsl
jne
cmc
test
fwait
int
mov
mov
mov
mov
mov
mov
enter
sub
mov
fwait
mov
out
insl
or
push
jg
inc
cld
mov
push
mov
mov
lock
jae
mov
mov
out
fdivr
call
sub
in
mov
les
mov
rcl
sub
sbb
clc
mov
jno
push
jns
gs
pusha
data16
xor
xchg
and
arpl
jae
mov
arpl
addr16
popa
pop
sub
jno
jns
jne
push
movups
daa
bound
in
dec
or
sub
and
pop
xor
arpl
data16
insb
das
imul
dec
clc
adc
sub
xor
mov
incb
xlat
test
out
je
je
mov
mov
addr16
les
lcall
fadd
in
aam
leave
int3
shlb
mov
pshufw
mov
leave
ljmp
and
not
fbld
rcl
sbb
push
cmp
and
outsb
pop
adc
cld
enter
addb
mov
adc
out
mov
mov
into
stos
into
inc
xchg
ret
loope
mov
mov
dec
or
lods
adc
divb
jmp
repz
fisubs
mov
adc
int3
mov
mov
ror
into
mov
mov
sarl
std
ror
rcr
addr16
adc
iret
fldl
inc
mov
ret
ss
fdivl
lock
dec
push
xlat
aam
mov
and
int3
fnstenv
shl
sbb
andl
or
fcomp
sbb
enter
inc
lret
stc
rcl
and
shlb
mov
loopne
xchg
mov
sub
pop
dec
mov
xor
sti
xchg
mov
mov
fsubs
or
cmpsb
mov
xor
sub
into
dec
lock
aam
ror
out
mov
es
and
bound
mov
fists
mov
clc
adc
rcrb
ret
mov
ret
push
into
faddp
das
rcl
stos
mov
mov
shll
mov
fmul
aad
sar
inc
pop
data16
iret
enter
xor
push
sahf
jb
idivb
mov
mov
iret
ljmp
mov
movsb
mov
outsl
iret
mov
mov
push
insb
push
clc
push
add
mov
rolb
aam
iret
shrb
mov
and
inc
mov
shll
inc
mov
cli
or
sub
ds
cmp
ds
pop
jge
push
xchg
and
cmp
divb
xor
ja
and
and
pushl
jb
fs
push
push
mov
sarb
ds
adc
mov
ss
or
pusha
push
sbb
xor
xor
xor
and
mov
inc
adc
and
jp
xor
adc
adc
fs
sub
bound
jae
ds
and
pusha
jae
inc
jne
arpl
cld
and
shrb
stos
jge
sub
and
inc
push
and
push
es
ret
mov
and
sbb
and
inc
sub
adc
imul
add
cmp
mov
decb
mov
cmp
sub
dec
outsb
jae
popa
sbb
rcr
gs
data16
xor
pop
xor
std
es
inc
adc
fldt
push
aaa
add
mov
ja,pn
fs
cmp
or
cmc
adc
ds
pop
dec
sbb
outsb
or
seto
mov
push
push
mov
xor
incl
inc
xor
xor
xor
inc
cmp
xor
inc
inc
inc
mov
inc
inc
inc
xor
add
inc
dec
dec
add
xor
xor
inc
inc
inc
inc
inc
fistpl
add
shl
aas
adc
mov
hlt
lret
divb
test
mov
fldl
add
data16
push
je
push
push
arpl
or
push
inc
add
add
and
insb
insb
sub
loope
loop
outsl
dec
jnp
hlt
push
cmp
jle
adc
fidivl
lock
jmp
loopne
push
lea
mov
ret
push
add
shlb
sbb
mov
sar
repnz
mov
sbb
sbb
push
sarb
xchg
nop
adc
add
test
fisubrs
push
roll
and
ja
mov
dec
scas
mov
cmpsb
inc
bound
dec
jne
filds
pop
addr16
jns
inc
jle
mov
add
or
push
sbb
mov
lea
call
sub
jae
insb
ja
jo
push
je
pop
xchg
or
push
outsl
js
inc
cmp
sbb
dec
daa
cmp
test
pop
dec
dec
adc
pop
or
mov
jge
fcmovnu
or
and
and
sbb
sub
mov
fwait
sub
or
push
adc
call
les
push
mov
sbb
test
adc
xchg
mov
jmp
nop
mov
cmpl
inc
movsl
mov
sbb
mov
and
rep
push
push
mov
mov
mov
cmp
repz
mov
mov
push
lock
int
pop
push
and
in
mov
push
and
loop
jge
add
mov
notb
add
pop
das
aaa
add
pop
les
ss
insl
push
dec
pushl
in
add
call
movsl
sub
sub
mov
neg
mov
mov
hlt
incl
das
and
addl
imul
adc
orb
cltd
insb
flds
add
mov
sub
mov
and
or
inc
jg
test
sub
aas
int
pop
xchg
jne
repz
enter
shlb
adc
int
cmp
or
hlt
or
bound
cmp
xchg
int3
in
mov
add
adc
shll
lock
jg
pop
mov
push
repnz
repz
inc
xor
adc
and
enter
mov
dec
add
inc
and
aam
adc
jo
dec
sub
faddl
movsl
adc
push
sbb
or
xor
push
add
xchg
mov
add
sbb
and
sub
and
push
or
mov
pop
add
inc
scas
into
and
dec
out
or
scas
xor
pop
bound
roll
inc
sbb
lcall
punpcklwd
loopne
adc
push
lcall
cmc
inc
sub
mov
mov
cmpsb
pop
shrb
and
add
lcall
dec
add
adc
push
xchg
and
cmc
call
addb
ss
jmp
out
nop
fsubrp
mov
jno
lcall
jnp
adc
sbb
add
cmovns
xchg
data16
jmp
leave
cmpb
ds
mov
add
push
sbb
clc
push
xor
fsubrs
ja
sub
xchg
mov
push
mov
jns
adcb
adc
movsb
jne
icebp
seta
mov
push
cs
adc
mov
add
jb
pusha
out
or
jbe
or
jne
sub
rolb
mov
pop
and
jae
out
fisubrl
adc
and
outsl
sbbb
jo
pushf
mov
sub
fiaddl
fsts
pop
insb
in
lock
pop
inc
jg
lock
sbb
jge
jbe
pop
jnp
shrb
pop
and
movsb
jne
shrb
sub
sub
push
cmc
scas
mov
mov
cmp
sbb
cmp
mov
fmul
or
and
data16
nop
jo,pn
dec
adc
cmp
add
in
repnz
lds
dec
inc
add
xor
ljmp
daa
and
adc
cwtl
test
dec
test
iret
mov
inc
das
pop
jo
xor
into
xchg
ror
add
pop
enter
test
adc
leave
jae
mov
clc
adc
mov
js
or
add
mov
stos
add
xor
stos
outsl
lods
in
aad
lods
pop
sbb
adc
or
inc
jle
in
scas
add
clc
pushl
in
nop
stc
lock
mov
shrb
pop
cltd
loopne
test
adc
mov
push
ror
daa
add
xchg
or
inc
adc
lds
das
xchg
std
lahf
push
mov
mov
mov
fbld
daa
sub
mov
daa
sbb
mov
push
pusha
iret
mov
sbb
add
cs
mov
scas
xchg
or
es
pop
xor
pop
adc
lea
mov
dec
in
add
lahf
xor
add
shl
mov
mov
mov
pushf
push
or
adc
pop
int3
push
int
add
outsb
sub
xchg
aas
nop
outsl
in
dec
mov
mov
decl
add
outsl
rcl
jno
pop
dec
ror
lahf
inc
jo,pn
cmp
or
aam
and
or
rol
mov
ret
mov
and
add
add
sbb
lret
inc
push
adc
lret
xlat
xchg
adcl
xor
inc
orl
add
nop
pop
or
iret
in
repnz
iret
nop
int
add
add
int
ror
nop
or
cmpb
mov
cmpsl
daa
nop
adc
rcrb
lock
orb
dec
shr
loopne
add
nop
cs
adc
adc
sub
scas
push
insb
inc
fldenv
scas
pop
lods
stc
pop
push
xlat
add
ret
stos
sub
pop
in
xlat
add
decl
fisubrl
ljmp
jb
cmpsb
into
loope
pop
or
sbbb
jns
mov
dec
icebp
sub
add
pop
mov
mov
cwtl
iret
mov
lds
rol
subl
and
adc
and
jmp
or
subb
pop
shl
test
and
add
jg
negb
ud0
cmp
dec
and
lahf
mov
movsb
pusha
loopne
iret
inc
push
adc
nop
hlt
scas
nop
repz
das
xor
ljmp
mov
notl
imulb
mov
jg
outsl
or
out
orb
push
lock
enter
mov
mov
je
negl
inc
add
and
fwait
test
or
movaps
out
or
out
subb
loop
inc
and
cwtl
jno,pt
lods
push
push
or
leave
orl
jge
std
jb
pusha
xchg
aam
push
or
jecxz
inc
ss
sub
pop
dec
xor
push
cmpb
mov
and
gs
sti
mov
pop
or
enter
push
sbb
sub
or
push
aas
inc
push
adc
mov
ja
notl
push
and
xor
jne
push
and
push
cld
push
push
xchg
xor
sahf
sub
sarb
add
mov
and
push
jb
fincstp
nop
push
push
rolb
repz
sar
pop
out
mov
nop
cld
push
xorb
repz
or
push
and
ds
push
inc
roll
in
in
sub
fstpt
push
dec
cmp
cmpsl
jge
jo
cs
xor
cmp
imul
push
add
mov
adc
and
outsb
aaa
test
add
xsha256
cmpsb
pop
jnp
mul
mov
pusha
push
rorb
push
add
jg
inc
xor
and
or
pusha
sub
mov
jno
mov
ret
in
adc
or
xchg
add
roll
push
mov
mov
enter
movsl
cs
iret
lds
fstpl
test
out
add
repz
lcall
mov
rolb
clc
stos
scas
mov
push
push
mov
mov
add
movsb
sbb
out
xchg
fwait
mov
push
lea
lock
aad
sub
decl
push
int3
pusha
hlt
arpl
push
sahf
xchg
mov
cmp
inc
nop
incb
lea
and
rclb
dec
cwtl
mov
add
lcall
cmp
push
in
push
inc
ja
stc
daa
inc
addb
or
push
jo
call
jecxz
inc
cmp
adc
or
enter
mov
call
pop
inc
cmp
and
mov
jae
das
lock
out
mov
add
ret
pop
pusha
out
pop
or
dec
testb
inc
les
pop
add
stos
add
sub
jmp
add
stc
iret
lds
lahf
mov
jmp
or
outsb
adc
jmp
lahf
add
das
add
das
dec
mov
pop
das
mov
xchg
in
mov
pop
das
rolb
adc
pusha
das
lds
test
mov
add
xchg
mov
sar
dec
lahf
sub
or
mov
cmc
push
push
sub
sub
icebp
push
test
or
jle
rolb
lods
ss
cmc
movsb
pop
mov
mov
add
or
jmp
xor
das
push
cmp
mov
nop
sti
xor
out
push
addb
dec
inc
popa
push
lock
jbe
cmp
and
mov
and
iret
or
mov
outsl
clc
mov
insl
xor
dec
ljmp
lahf
lock
add
dec
leave
ja
scas
add
jb
pushl
dec
adc
mov
add
pop
sbb
push
loope
mov
loop
jns
loopne
xor
out
das
call
add
push
jg
add
lock
add
mov
push
mov
adc
das
cmpsb
pop
dec
jl
xchg
aad
xchg
incl
es
stc
lcall
lret
shlb
pop
pop
ds
enter
mov
add
dec
repz
lds
pop
inc
add
iret
and
lods
or
add
sbb
push
call
dec
adc
and
das
sbb
pop
jo
add
fidivrl
scas
in
das
pusha
push
sarb
xorb
xchg
jg
lock
xchg
insb
test
loopnew
ja
cmpl
xor
add
bound
inc
dec
mov
push
push
and
xor
inc
xor
sub
data16
push
jo
push
xor
add
insl
inc
repnz
es
mov
nop
sahf
flds
add
add
repnz
add
add
pop
pop
sahf
sub
popa
pop
popa
inc
inc
and
mov
xchg
ja
cs
lock
pop
dec
mov
cs
push
sub
push
push
sahf
imul
out
ds
jns
mov
inc
inc
cmp
cmp
cmp
dec
dec
loopne
cmp
cmp
dec
adc
xchg
pushf
inc
push
pop
push
jo
cmp
push
push
mov
jns
add
loop
sarb
push
mov
and
inc
and
aas
xor
and
fidivrs
scas
add
cltd
add
sti
mov
add
aas
aas
stos
push
popl
push
fdiv
xor
lcall
push
inc
cmpsl
cmp
jbe
cmp
loopne
rcl
mov
jl
xor
lcall
aaa
fnstcw
cmpsl
push
lret
mov
inc
mov
in
sahf
cmp
movsb
aas
mov
daa
sarb
dec
sub
inc
call
arpl
jo
jnp
scas
inc
loope
test
hlt
or
cmp
out
adc
mov
inc
das
jg
nop
mov
pop
pop
mov
enter
and
sbb
pop
aas
mov
in
lahf
push
mov
daa
iret
bound
add
xchg
out
push
scas
xor
loop
sub
dec
xor
dec
mov
add
adc
roll
mov
aas
sarb
pop
cmpxchg
or
push
and
lret
mov
fcoml
into
sahf
lahf
ret
lods
inc
fmul
decb
lock
iret
add
subb
subb
inc
sub
sub
je
lret
add
inc
repnz
push
jg
into
or
adc
clc
outsl
sub
push
sbb
adc
dec
adc
shlb
daa
loopne
ss
and
cmp
cmpb
push
loop
loop
hlt
add
loopne
loope
push
cltd
fdivrs
inc
fimuls
dec
xchg
or
add
cs
dec
fnstsw
shrb
sbb
loopne
mov
jo
inc
ja
leave
mov
loope
les
mov
cli
or
push
push
pop
jo
sar
xchg
inc
test
lret
sar
and
and
adc
cmpb
mov
dec
add
or
add
dec
pop
xor
add
test
ds
iret
repz
sbb
and
xor
and
repz
cmp
adc
or
inc
daa
adc
shlb
xor
fmulp
jae
sbb
push
and
sub
cmp
xor
jns
out
es
daa
cs
out
sahf
xor
aaa
ret
stos
in
ds
jg
xchg
cmp
add
fisubl
mov
mov
stc
icebp
loope
sahf
cmpsl
repnz
add
cld
clc
data16
out
lock
cmp
loopne
stos
inc
lds
push
inc
dec
fmuls
mov
neg
outsl
sbb
jnp
jae
push
xor
sbb
push
bound
fldcw
mov
inc
sub
sbb
push
and
mov
fadd
adc
or
ss
int3
in
aaa
push
andb
sbb
or
push
int3
int3
int3
ficomps
mov
cmpsb
mov
ss
mov
add
out
popa
dec
mov
xor
aas
lret
xchg
lcall
idiv
scas
out
aas
stos
adc
shl
aas
aas
cmp
jmp
jnp
jmp
jp
loope
pop
stos
jb
push
test
shlb
or
cmp
add
xor
bswap
aas
incl
inc
mov
mov
addl
dec
mov
shrb
sbb
and
adc
das
out
pop
fbld
pusha
nop
push
lods
insb
pushf
pop
mov
outsl
lahf
pop
or
cmp
les
or
cmp
incl
aaa
testl
dec
mov
ja
call
adc
sub
sbb
cmp
jmp
out
xlat
test
cwtl
pop
movsb
fs
push
stos
imul
add
xor
push
ljmp
pushf
add
xor
or
inc
mov
mov
jle
inc
mov
decl
loop
shrb
out
push
fisubs
loope
shrl
bound
pop
mov
sub
lods
insl
popf
pop
or
xor
testb
cmp
add
push
mov
jp
inc
mov
mov
jns
inc
mov
sub
sbb
es
sub
sbb
and
call
stos
push
pop
cmpsb
xchg
push
test
gs
push
popf
add
fbld
aas
jne
daa
inc
pop
sub
repz
aas
shll
cwtl
sub
outsb
mov
and
in
shrb
test
nop
incb
lods
gs
outsb
nop
imul
out
xchg
mov
das
std
mov
fistpll
cmpsl
add
das
subb
mov
mov
add
add
pop
dec
jae
sbb
nop
mov
hlt
mov
aad
ljmp
sbb
push
incl
push
push
xchg
outsl
gs
std
lahf
sub
std
rolb
pop
mov
test
dec
jae
sbb
or
dec
sbb
arpl
xor
pop
cmp
xchg
push
sbb
pop
enter
pusha
mov
das
sti
jns
pushf
pop
xor
mov
pop
dec
jecxz
enter
incl
push
les
bound
mov
mov
pop
fists
mov
mov
pop
and
sub
push
add
inc
aam
pusha
push
iret
jb
or
into
pop
shrb
cld
aas
inc
orl
sbb
mov
iret
mov
add
idivb
rorb
jo
add
lahf
aas
fistpl
sbb
mov
pop
mov
xor
pop
out
cmp
sub
sub
dec
rorb
jmp
call
dec
jg
sbb
fsubrp
into
add
inc
dec
outsl
je
incb
mov
outsl
jb
gs
sbb
js
dec
in
and
aam
pop
and
push
add
or
neg
in
and
imulb
mov
jg
sbb
lods
roll
xor
push
inc
xor
jo,pn
cmpsl
pop
dec
imul
xchg
fs
shlb
std
pop
daa
xchg
dec
cmp
adc
push
dec
fdivrl
and
loopne
jle
jo
add
sbb
xorl
sub
rcll
inc
sbb
dec
sub
nop
sub
pop
pop
movsb
pop
push
es
mov
ds
mov
pop
sahf
out
inc
xchg
insb
insl
lods
rol
negl
icebp
push
dec
daa
push
lock
out
adc
ds
fcmovbe
call
scas
add
inc
fs
fisubrs
adc
mov
adc
pop
inc
inc
add
or
push
add
pop
aas
push
popa
call
sbb
pop
dec
andl
je
popa
jo
mov
cmp
nop
jle
jb
jae
cmp
push
loopne
pop
or
cmp
sarl
inc
into
pop
pop
xchg
push
pop
adcl
add
test
fiaddl
push
js
cmp
imul
outsl
add
push
inc
rorb
dec
push
pop
push
sub
add
shll
push
sub
mov
inc
aam
fsubp
repz
iret
call
push
inc
repz
ds
insl
fwait
out
inc
idivb
dec
jg
dec
outsl
fcoms
cmp
dec
mov
fisttps
scas
stc
psubusw
out
xor
xchg
cmp
mov
xor
mov
jo
insb
dec
xchg
dec
js
fsubs
and
mov
push
imul
dec
push
mov
aam
scas
jno
xor
mov
xor
aas
jb
pop
fiadds
mov
fiadds
fs
push
add
loopne
out
pop
add
jg
adc
sbb
scas
lock
incl
testb
xchg
inc
push
fidivrs
push
mov
push
filds
gs
aad
shrl
adcb
fstps
add
aad
sub
adc
les
inc
mov
cmp
push
add
inc
inc
out
push
xchg
xor
imull
pop
lods
cmp
xchg
dec
sti
sbb
inc
push
mov
push
and
outsb
jae
imul
pop
mov
mov
pop
push
push
adc
xchg
cmp
jae
setg
fs
cmovg
jb
out
ss
pop
inc
lock
and
outsl
ret
or
nop
or
subb
xor
mov
jne
or
aaa
fildll
pop
dec
jnp
add
loopne
ds
movhps
pop
aas
adc
and
sbb
outsl
add
stos
cs
sub
cs
out
push
push
push
cmpl
xor
mov
push
adc
mov
pop
push
and
jae
sub
sbb
jae
add
fcoms
push
cmc
outsb
xchg
out
jle
mov
cmp
rcrb
sbb
inc
data16
notb
push
daa
add
lods
frstor
sbb
loope
testl
inc
jb
ja
add
dec
jb
mov
insl
xor
gs
add
insl
outsl
gs
aam
outsb
into
outsl
jb
inc
sbb
inc
push
and
insb
mov
dec
adc
cwtl
and
imul
mov
pop
pop
mov
flds
or
dec
adc
fists
inc
push
sbb
dec
insl
insb
dec
subb
jb
pop
inc
dec
sbb
loop
sbb
jo
repnz
jno
sub
push
bnd
pop
fmuls
add
jb
cmp
cmp
daa
mov
scas
xor
je
push
jl
scas
xor
dec
dec
sbb
or
in
fldenv
and
cmp
lahf
jno
mov
adc
dec
adc
cmp
inc
jb
jns
pop
pcmpeqb
repz
outsl
lock
gs
push
and
div
xchg
outsl
test
nop
cmp
sub
cmpsb
sub
icebp
sub
inc
aaa
ss
push
movsl
iret
inc
insl
jl
xchg
test
cmpsl
loopne
inc
fisttps
arpl
cmp
lahf
and
mov
arpl
jne
pop
add
dec
cmp
test
mov
or
dec
outsl
leave
addr16
jo
jns
pop
imul
pop
in
cs
push
mov
lods
pop
addb
in
sahf
sub
dec
imul
dec
dec
insb
mov
cmp
repnz
xchg
mov
pop
outsb
das
call
pop
ja
rcrl
cmp
je
shrl
add
sbb
push
sub
arpl
cld
js
ja
data16
push
enter
xchg
lds
maxps
push
inc
test
ds
push
ja
jle
push
leave
cmpsl
outsl
cmpsb
adcl
sahf
adcb
cmp
mov
stc
push
les
jae
lock
adc
std
dec
adc
cs
rclb
ror
aad
push
xlat
jnp
js
cmpsl
push
int
rorb
and
jo
iret
mov
in
loop
loope
das
push
pop
sbb
ds
adc
pop
sahf
cmpsl
sbb
sahf
cmp
pop
das
pop
add
adc
pop
enter
push
popa
sbb
shrl
push
cmp
mov
jle
or
js
or
pop
pop
fwait
sub
hlt
add
and
pop
jno
pop
fwait
into
repnz
mov
sbb
adc
xchg
sbb
dec
insl
mov
inc
dec
lock
lahf
inc
das
sbb
jg
cmp
xor
out
add
push
iret
sub
push
test
into
push
ljmp
and
int
addb
fcoms
push
in
aad
inc
lret
idiv
and
cmp
mov
clc
cmp
xchg
int
ds
cmp
mov
push
pop
add
adc
stos
aad
das
mov
ja
adcb
lods
sbbb
mov
push
loop
dec
pop
adc
popa
rcl
mov
jle
add
mov
sahf
jge
iret
mov
scas
data16
fcomps
sbb
inc
insl
mov
and
fs
and
into
push
mov
scas
fcomps
add
addl
inc
sti
mov
sbb
inc
push
fcmovnu
shlb
pop
sub
pop
mov
xchg
mov
or
cs
cs
test
and
xchg
push
cs
pop
ret
jnp
mov
loopne
push
xchg
lahf
into
mov
lahf
notb
mov
in
sbb
mov
xor
out
sbb
push
xor
test
ds
nop
and
jns
mov
add
mov
pushf
imul
inc
clc
sbb
jae
fcoml
je
cmp
ficoms
std
nop
or
add
adc
ret
cwtl
pop
cmp
fisubl
adc
xchg
jle
xlat
push
inc
xor
mov
cs
flds
das
push
and
add
js
aas
call
push
mov
fwait
ljmp
push
fiaddl
stos
rcrb
push
loopne
insb
push
imul
out
enter
or
push
repnz
lods
add
cmp
je
fadd
rolb
scas
and
jp
les
outsb
mov
push
and
stos
push
add
inc
jmp
jo
fidivs
pop
push
fcomps
pop
xchg
inc
mov
sub
xor
add
popa
ljmp
jb
sahf
cwtl
dec
push
addr16
aad
cltd
outsl
loopne
or
movb
cmp
cmpb
pop
movsl
sbb
inc
push
mov
push
pop
lahf
scas
mov
dec
dec
jo
sbb
dec
push
pop
mov
dec
and
inc
or
push
adc
or
push
push
or
add
pop
leave
scas
lds
insb
addr16
mov
inc
or
fsubs
fisubrl
cmp
pop
jne
mov
pop
cmp
push
xchg
cmp
das
dec
inc
ret
and
add
ja
iret
cmc
mov
adc
dec
cmc
fmuls
mov
add
inc
out
push
test
notb
inc
testl
push
xor
stos
loopne
xchg
pushf
pop
dec
cmp
mov
add
dec
and
jns
adc
dec
das
fs
or
push
inc
push
mov
icebp
inc
adc
gs
je
or
outsl
adc
add
jne
dec
jne
cmc
mov
outsb
incl
or
pusha
inc
fdivrl
mulb
jb
push
inc
push
pushf
jae
adc
xchg
pushf
jae
cmp
ja
lahf
mov
jne
xor
cmpsb
mov
daa
push
adc
sbb
filds
js
and
movntq
pop
dec
inc
aas
data16
push
add
fs
xchg
sbb
push
sub
mov
fs
pop
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
or
movl
inc
push
inc
inc
ss
pusha
cmp
addr16
js
pusha
decb
ss
pop
push
sbb
es
mov
fstpt
fnsave
dec
inc
and
push
xor
cmp
sub
xchg
add
testb
imul
repnz
xor
and
jo
arpl
out
push
ja
jno
inc
cmpsb
sbb
xchg
sub
add
jo
add
jbe
data16
sbb
xor
mov
adc
cwtl
add
mov
inc
lock
out
outsl
jo
mov
popa
lods
inc
dec
sbb
fs
arpl
adc
mov
mov
xor
fistps
scas
inc
aaa
insl
mov
jns
or
jge
arpl
das
mov
lret
fsubrs
pop
add
mov
es
inc
jb
add
fwait
adc
fadds
and
push
dec
pop
pop
push
cmp
jne
jae
pop
daa
test
push
xor
fdivr
jo
or
add
jne
push
inc
dec
pushl
mov
sub
and
cmp
jmp
in
mov
sbb
xor
jg
sbb
sub
lds
ja
ds
push
mov
mov
xchg
sub
mov
fadd
sbb
xchg
insl
xchg
imul
mov
jg
xor
fimull
leave
ds
out
jg
insl
fcmovne
xchg
push
cwtl
rolb
pop
insb
out
push
pop
jns
xor
inc
iret
lock
insw
outsl
fs
push
xor
pop
testb
fs
cmp
aas
sub
loopne
add
test
int
push
jnp
mov
ss
imul
insl
scas
popa
sub
nopl
dec
fnsave
insb
addr16
cvttps2pi
jbe
lfs
xor
add
shll
add
xlat
subb
cs
mov
out
fsubrp
inc
mov
push
xor
dec
mov
xchg
int
pop
test
push
in
pop
outsl
xchg
sbb
enter
mov
cmp
or
push
pop
outsl
mov
push
or
mov
insb
push
push
sub
pop
add
push
mov
inc
add
scas
pop
and
sub
push
push
add
in
push
push
pop
ret
test
push
add
pusha
push
insl
mov
inc
lods
jo
out
into
add
sbb
push
adc
sarb
outsb
cmp
stos
subb
jl
adc
cmovnp
xor
mov
pop
push
and
ss
add
inc
push
pusha
ret
cmp
mov
inc
xor
adc
pop
insb
jp
adc
mov
adc
lods
push
je
cs
mov
inc
jne
daa
pop
pop
add
xchg
test
clc
inc
fildl
add
push
pop
lahf
cmpsl
mov
push
pop
idiv
xor
and
loop
dec
inc
fmuls
dec
dec
inc
add
std
cs
das
andb
dec
sbb
scas
sub
xor
cs
adc
aas
sbb
pop
or
and
daa
inc
jbe,pn
sbb
cwtl
hlt
shlb
call
lcall
mov
test
jle
js
push
out
add
shrb
mov
mov
fsubs
dec
scas
add
fstl
xchg
xor
dec
adc
xor
sub
lahf
xchg
loope
das
test
negl
nop
aaa
add
push
jo
nop
test
inc
jbe
jae
lahf
fsubs
xchg
daa
adc
and
fisttps
sbbb
pusha
lahf
xchg
fdivrs
orps
aas
mov
mov
and
jns
pop
call
jnp
xchg
daa
or
xor
nop
sub
pusha
daa
fadds
and
iret
mov
mov
mov
xchg
daa
pop
lahf
lock
mov
scas
or
xchg
daa
mov
mov
and
push
jo
js
inc
mov
adc
lahf
xchg
or
push
xor
xchg
daa
lock
xor
xor
jnp
sub
gs
outsb
and
jo
xchg
jns
scas
mov
daa
cmp
fiadds
iret
add
loopne
and
jl
enter
xor
xchg
sub
ja
jns
jbe
outsl
pop
pusha
mov
or
scas
lds
cmp
out
mov
mov
out
lock
or
xchg
and
mov
jg
mov
sub
outsb
dec
ss
das
dec
mov
outsb
xchg
mov
mov
enter
and
xor
add
dec
sbb
xchg
xor
dec
nop
stos
in
scas
pop
jo
nop
pop
mov
mov
mov
push
repnz
loop
mov
and
xchg
cmp
nop
bound
in
cmp
xchg
mov
adc
mov
enter
das
nop
pop
fcomps
outsb
dec
dec
sbb
xchg
daa
call
mov
cs
push
push
lock
sub
mov
or
ror
cmp
lahf
pop
enter
lock
dec
sbb
xor
xchg
jb
outsb
daa
push
pop
enter
lahf
nop
add
xorb
inc
fidivrs
rolb
dec
and
mov
cmp
fsubrl
xchg
daa
lock
fwait
inc
pop
pop
cmp
add
xchg
pop
mov
sub
xchg
daa
sub
ret
xor
push
push
popa
adc
cmp
jbe
and
inc
daa
push
or
mov
pop
mov
cwtl
daa
mov
outsb
mov
in
cmp
lahf
xchg
pop
or
call
xchg
aas
push
push
cmpsb
cmpsl
scas
sub
xchg
daa
call
mov
add
lahf
xchg
inc
xorl
lds
sbb
loopne
popl
mov
and
addr16
inc
adc
push
xacquire
pop
add
adc
xlat
dec
daa
xor
jo
shlb
xchg
daa
push
imul
insb
lahf
xchg
daa
push
cmp
ds
adc
outsb
dec
xchg
daa
cwtl
aas
push
fwait
inc
pop
pusha
aas
js
enter
xchg
outsb
and
xchg
lahf
lock
inc
pop
and
inc
sbb
mov
daa
adc
push
fwait
dec
dec
push
inc
push
jmp
andb
push
inc
jmp
pop
and
pop
push
js
push
clc
inc
fldt
cmpsl
xor
pop
cmp
jo
pop
pop
add
push
jae
daa
ja
daa
nop
push
test
lahf
inc
pop
shrb
imul
cltd
lock
movsb
cmp
fistl
daa
mov
pop
add
rorb
sub
dec
loopne
testb
mov
scas
mov
mov
in
cltd
fsubs
add
popa
xor
cmp
dec
pop
dec
dec
pusha
mov
pusha
aas
push
mov
jg
clc
in
fistps
into
pop
arpl
nop
in
scas
in
orb
in
fwait
fs
subb
clc
out
mov
sbb
push
pop
sub
xlat
jo
scas
pop
pop
loopne
es
pop
addb
test
cs
inc
cs
dec
and
and
add
into
adc
jmp
xchg
pop
mov
ficompl
out
push
repnz
mov
jb
sbb
test
outsl
fsub
scas
sbb
pusha
iret
inc
call
ud2
cmpsl
adc
lcall
mov
push
xchg
nop
aas
dec
aaa
das
loopne
inc
lahf
push
xor
insb
daa
popa
jg
jg
mov
pop
push
mov
mov
mov
addr16
iret
push
xor
iret
xor
mov
pop
sub
adc
xchg
iret
jo
into
adc
cwtl
pusha
iret
jae
jmp
imul
jle
mov
daa
daa
xchg
pushf
cmpsl
dec
mov
fcmovne
repz
pop
mov
daa
push
lods
adc
clc
fldcw
jbe
scas
dec
pop
adc
sahf
or
iret
repz
inc
push
add
jbe
popf
cmp
fs
outsl
dec
jp
pop
mov
in
test
dec
mov
dec
add
sub
pushf
pop
and
add
adc
push
cmpsl
adc
loope
nop/reserved
xchg
mov
fs
inc
dec
shlb
daa
push
pusha
push
cs
orb
mov
sahf
test
cmp
leave
xchg
dec
push
dec
rclb
push
xchg
imul
fs
dec
jb
dec
repnz
pop
adc
cmp
mov
inc
cs
mov
fcomps
xchg
decl
mov
push
loope
in
add
popf
pop
mov
decl
in
pop
or
push
cmp
pushf
js
push
inc
mov
and
fistps
cwtl
push
or
daa
test
jg
aas
xchg
push
in
call
jg
insl
test
cmpsl
jmp
push
mov
xchg
cmovo
jbe
push
mov
pusha
pop
push
rolb
leave
mov
rcll
lret
adc
outsl
and
loop
leave
lock
push
xchg
jg
push
out
loope
out
push
out
add
ds
dec
pop
pop
or
out
push
out
sahf
out
xchg
or
or
scas
push
mov
sahf
out
fcoms
out
hlt
repz
out
add
repz
push
push
sub
cmp
cmp
repz
sbb
fs
repz
sbbb
push
pushf
pop
ds
cwtl
mov
dec
dec
psubusb
adc
mov
inc
sahf
and
adc
enter
cltd
xor
inc
cltd
inc
mov
push
cltd
pop
cltd
insb
cltd
jp
in
xchg
and
cltd
mov
jb
cltd
rcrb
xchg
and
cltd
clc
cltd
push
lcall
adc
adc
adc
ds
dec
pop
pop
out
sahf
out
push
out
sahf
test
xchg
sbb
sbb
scas
push
mov
sahf
out
fadds
sub
push
das
and
fwait
cmpsl
cmp
in
sbb
sbbb
addr16
pop
and
add
add
add
pop
mov
sahf
mov
jle
mov
add
fadds
ret
decl
push
jg
push
outsb
daa
push
add
jo
jo
mov
jg
test
iret
js
scas
fcmove
inc
out
cmpsl
psubusb
enter
mov
jb
push
adc
leave
xor
push
pushf
in
push
mov
jo
clc
dec
push
and
add
nop
and
mov
cmp
loopne
push
mov
jne
fnstsw
das
into
cmovnp
call
popa
popf
imul
pop
or
jns
mov
out
push
or
cli
or
repz
or
outsl
stos
pop
pop
sbb
adc
jmp
iret
repz
adc
inc
dec
dec
adc
dec
xchg
loopne
je
fisttpll
sahf
pop
fwait
push
xchg
cmpsb
add
repnz
add
leave
adc
sub
loopne
addr16
into
imulb
decb
or
enter
sahf
daa
sahf
das
sahf
inc
jp
cmpsb
mov
pushl
push
sub
jo
scas
js
pop
jo
cmp
pop
movsb
leave
adc
mov
sarb
leave
enter
add
repz
std
dec
add
pop
enter
sbb
es
xor
add
in
loopne
fmull
push
jb
mov
cwtl
push
dec
dec
dec
sahf
add
and
dec
iret
pop
ficompl
mov
iret
in
loopne
add
cmp
scas
mov
and
jg
lds
mov
imul
clc
nop
and
pop
mov
add
lahf
jo
jb
subb
lahf
lock
mov
and
aaa
repnz
mov
divps
daa
daa
iret
jae
add
movsl
nop
inc
test
mov
sarb
mov
pop
xor
cltd
mov
or
or
stos
or
mov
aas
fimuls
test
repz
add
and
stos
cmpsl
out
iret
mov
dec
jmp
arpl
xchg
out
je
jle
jo
mov
orb
dec
cmpl
aas
xchg
mov
lds
rcrb
lahf
jecxz
cld
mov
iret
or
dec
cmp
push
enter
pop
and
js
pusha
mov
jne
enter
mov
mov
mov
mov
nop
sub
loopne
and
pop
pop
dec
add
movsb
push
pop
and
jg
dec
push
pusha
nop
shrb
xchg
cmpb
dec
iret
loopne
clc
pop
mov
adc
bound
mov
dec
out
inc
pop
jg
cmp
cltd
loopne
lock
dec
lea
das
or
dec
adc
sbb
insb
push
xor
dec
jnp
mov
push
scas
pop
fisttps
adc
jg
out
or
mov
cmp
sub
fisubl
add
mov
call
in
decb
cmpsb
dec
dec
leave
xchg
pop
call
rorl
add
sbb
mov
xor
pop
inc
xchg
mov
cmp
daa
test
sbb
pop
enter
aas
add
aaa
lock
adc
cmpsb
call
sub
jno
adc
rolb
aas
pop
pusha
or
jbe
scas
dec
and
scas
loop
scas
test
out
shlb
dec
cmpsb
loopne
pusha
sub
pushf
in
dec
or
sbb
xchg
cmpsl
cmpsl
push
outsl
inc
lock
or
cmp
or
pusha
cmpsl
loopne
mov
mov
rcrb
push
sub
mov
pop
mov
or
mov
jg
pop
leave
sub
dec
pusha
adc
mov
mov
jb
adc
cmpsl
leave
jo
add
arpl
test
test
in
sub
cmp
jg
iret
push
mov
adc
iret
or
and
mov
mov
test
out
icebp
test
pop
pop
pop
cld
test
test
pop
pop
pop
pop
sub
dec
test
push
test
jne
pop
pop
pop
pop
subb
test
lods
test
int
or
fsubrs
test
fcomip
test
sbb
pop
push
and
sub
jns
and
dec
out
sahf
out
pop
and
and
outsl
es
test
jns
out
nop
sub
sahf
out
mov
mov
sahf
shrb
fnsave
adc
mov
cmp
xchg
mov
and
and
stos
dec
stos
pop
stos
sbb
jb
imul
inc
mov
stos
cmp
enter
stos
out
cmc
stos
and
sbb
lods
adc
enter
lods
dec
lods
push
lods
mov
jo
dec
pop
xchg
lock
jnp
add
pop
fs
lods
sahf
add
mov
lahf
rorb
shl
loopne
adc
xor
test
dec
xor
outsl
xor
push
loopne
lods
lcall
cs
jo
inc
cs
and
mov
xchg
pop
and
dec
pop
and
scas
nop
scas
nop
dec
scas
xor
dec
sbb
cmp
movsb
scas
out
scas
scas
xchg
xchg
scas
pushf
scas
cmpsl
scas
mov
in
xchg
and
scas
stc
add
jb
scas
jmp
jne
jns
ljmp
and
sub
inc
scas
scas
dec
scas
cmp
fwait
popf
iret
push
scas
out
bound
push
insl
add
js
mov
sbb
scas
mov
mov
push
xchg
fisubrs
fsubrs
loopne
ljmp
xor
xor
mov
pop
dec
repnz
and
mov
into
leave
adc
mov
jg
push
enter
pop
or
nop
jb
cmp
cwtl
pop
bts
iret
jae
add
int3
das
xlat
loope
pop
fmull
loop
in
push
dec
das
mov
adc
sbb
sub
mov
dec
nop
xlat
outsb
push
push
mov
nop
dec
dec
cmpsb
jo
xor
cwtl
pusha
jns
dec
scas
mov
add
or
fdiv
xchg
fcmovne
cmpsl
pop
lock
loopne
insb
sbb
cwtl
lahf
mov
mov
or
xor
push
test
insl
mov
mov
aad
mov
xchg
mov
xchg
xor
push
mov
mov
and
scas
add
repnz
mov
cmpsb
pop
cmp
mov
outsb
sbb
cltd
mov
in
mov
dec
jp
adc
outsb
in
push
pushf
btr
outsb
xor
cmpsb
in
outsl
mov
icebp
lcall
push
cmp
xchg
test
addr16
in
aad
xlat
cwtl
loopne,pn
aad
xchg
cltd
sbb
pop
pop
sbb
in
ljmp
orb
test
es
out
push
pop
mov
outsl
ljmp
mov
in
xor
jo
jo
loope
aaa
dec
pop
cmp
xchg
test
fistpll
in
dec
nop
inc
or
jbe,pt
jns
in
in
mov
call
ret
xchg
sub
mov
or
in
and
aaa
pop
and
dec
pop
iret
pusha
jno
js
jbe
jo
iret
nop
fbld
add
loope
jmp
in
shlb
jb
mov
xor
test
call
or
dec
fwait
sub
pop
mov
fbld
outsb
ds
pop
and
fcompl
ja
and
pushl
mov
mov
fcoms
mov
jae
nop
dec
cmpsb
and
inc
test
jae
jb
xor
jb
subb
test
shr
or
je
call
js
je
mov
pop
mov
or
pop
and
mov
xor
ds
scas
pop
or
jg
push
jae
ljmp
scas
in
in
cwtl
pop
das
jne
mov
xor
scas
loopne
out
pop
dec
lock
push
out
clc
pavgb
iret
jb
or
adc
call
pusha
mov
jbe
sub
dec
ja
mov
nop
imul
jo
cmp
jns
or
ret
push
dec
adc
add
je
or
sub
lret
pop
out
pushf
sbb
push
ds
push
popl
ja
mov
nop
mov
dec
push
leave
enter
mov
outsl
iret
add
ja
ds
mov
cmpb
and
adc
xadd
sub
les
stc
pop
ds
popf
add
push
js
fistpll
das
test
pushl
lret
sarl
mov
stc
mov
and
xor
pop
mov
imul
repz
mov
repz
push
fsts
push
or
out
cmp
sub
pop
leave
dec
popf
xchg
and
ss
outsl
push
dec
enter
scas
jo
lock
nop
cwtl
push
outsl
sub
pop
nop
loop
outsl
lret
mov
mov
sbb
iret
clc
nop
pop
leave
adc
dec
mov
mov
jp
in
pop
fs
outsb
das
vmovups
jns
jnp
adc
cwtl
pop
adc
mov
leave
rcr
lcall
es
jnp
add
scas
adc
cmpsb
mov
push
mov
pop
sahf
add
xor
imul
mov
iret
leave
mov
pushf
pushf
pushf
call
or
mov
push
enter
jge
pop
and
dec
cmp
and
pop
and
into
adc
lock
cmp
psubb
mov
inc
and
xchg
xchg
inc
enter
cmp
pop
push
dec
cmpb
test
pop
and
cs
cwtl
scas
fdivs
dec
add
sub
adc
out
push
jg
repnz
pop
push
xchg
aam
subb
jo
push
out
push
mov
or
mov
fs
sub
xchg
sub
shlb
and
outsb
pop
enter
push
enter
xadd
rclb
incl
cltd
rorb
sar
pop
adc
pop
pop
jb
test
js
jb
pop
adcb
sarb
in
in
pushf
inc
pop
adc
dec
scas
nop
dec
inc
cmp
jo
clc
je
bound
movsb
dec
jb
aas
js
push
ficoml
fidivrs
iret
rcll
shlb
push
nop
jo
mov
jns
scas
cmc
push
add
sbb
cmp
incl
push
fldt
jl
test
fcoms
mov
pushf
dec
push
leave
mov
les
adc
adc
mov
add
enter
or
test
cmp
jb
pop
jb
push
pop
nop
js
test
mov
mov
mov
adc
call
call
mov
dec
sub
inc
inc
pusha
ja
aas
rorb
das
sbb
jp
pop
mov
dec
aam
xchg
add
dec
icebp
push
dec
lock
dec
scas
or
fsubl
es
mov
pusha
inc
push
ret
fstpl
lods
cli
push
jg
xchg
dec
aaa
cltd
cld
mov
inc
loopne
test
adc
enter
mov
pop
lahf
incl
incl
cmp
scas
jne
sub
ret
push
scas
or
mov
dec
sbb
jae
pop
pop
shrb
repz
jnp
pop
sbbl
incl
mov
dec
mov
test
or
xor
mov
or
pop
dec
clc
xor
sub
jo
les
and
shrb
pop
xor
cmp
inc
mov
clc
pop
dec
and
insb
decl
pop
mov
scas
js
or
mov
in
mov
add
adc
mov
orb
pop
add
mov
xor
decl
sub
shr
jp
test
lds
and
push
enter
sub
pop
mov
or
dec
mov
mov
pop
test
fsubr
adc
or
dec
mov
mov
or
icebp
or
mov
dec
je
jl
fisttpll
stc
adc
out
imul
sub
scas
sbb
adcb
adc
js
jb
adc
and
dec
lock
dec
leave
mov
xor
dec
nop
dec
pop
jb
dec
jo
cwtl
test
cmp
jb
pop
jb
call
pop
adc
mov
xchg
pop
mov
pop
push
add
jp
dec
jg
xchg
lds
cmp
inc
jo
jb
enter
xchg
iret
dec
cmp
decl
cmpsb
popf
loopne
enter
scas
nop
pop
and
inc
in
scas
popf
dec
pop
call
adcb
adc
xor
ja
and
jo
adcb
xchg
das
out
add
and
fdiv
adc
push
js
cmp
xor
movsb
enter
fmul
adc
xchg
or
fisttpll
sbb
sbb
cltd
xchg
insb
cmpsl
daa
shlb
dec
int
ss
stos
and
xchg
fwait
lcall
pusha
jl
mov
lods
push
jbe
pop
mov
sub
cwtl
dec
jns
cmp
lahf
out
xlat
sahf
ja
in
out
hlt
jbe
adc
sbb
push
cwtl
negl
mov
mov
movsl
or
into
add
pop
aad
jnp
add
jg
pop
imul
and
push
nop
push
adcb
add
or
push
sahf
test
loopne
add
push
inc
and
ja
movsl
subl
out
loopne
sbb
insl
mov
or
and
pop
add
pushf
inc
insb
scas
pop
jb
ss
fnstsw
cmpsb
orl
nop
cmovb
add
add
fwait
stc
outsb
dec
fists
push
outsb
jl
in
insb
push
push
mov
pusha
nopl
sub
cwtl
push
data16
sbb
nop
pop
and
in
cmpsl
or
sub
in
xchg
xchg
andl
ret
and
call
add
cmovns
outsb
push
xchg
movsb
das
dec
outsb
pop
dec
ret
push
sbb
add
jo
add
xlat
add
lret
add
insl
sarl
gs
ss
fbstp
dec
inc
dec
inc
into
add
push
dec
loopne
addl
mov
cmp
sbb
movsb
ror
aaa
popf
popf
loope
jmp
add
js
and
repnz
imul
dec
stc
add
popa
das
stos
add
or
sbbb
mov
adc
inc
mov
cmp
je
ja
shll
pop
nop
push
adcb
mov
les
add
je
or
ja
cmpsb
and
sbb
dec
xor
add
pop
mov
and
pusha
ficompl
mov
or
xor
gs
jmp
add
add
insl
and
int3
mov
add
jo
mov
sub
leave
sbb
sbb
inc
add
das
add
and
icebp
and
cmp
fadd
sub
jae
push
or
insb
or
inc
adc
lods
aad
lret
ja
cmp
lock
sub
cmpsb
bound
jle
sbb
adc
mov
lds
push
adc
popa
and
dec
inc
push
pop
sub
adc
sbb
push
mov
push
mov
add
scas
jg
adc
push
insb
jbe
sbb
mov
out
push
inc
lods
xorl
adc
andb
add
bound
add
or
aas
xor
jo
pop
dec
jne
lock
sbb
xor
jbe
les
add
add
mov
dec
int
rcrl
jne
cmp
or
sbb
pop
dec
or
shrl
pop
test
add
data16
loope
cmc
loopne
ret
and
sub
std
inc
es
or
clc
sub
cmpsl
sbb
lods
cmp
sub
mov
jae
jbe
out
and
add
adc
push
push
ja
mov
mov
pop
xchg
add
jecxz
jnp
andb
data16
je
pop
mov
inc
or
pop
sub
pop
jns
repz
cmp
clc
adc
data16
icebp
inc
das
push
arpl
adc
add
mov
out
push
fxtract
xor
in
cmp
xchg
add
and
js
inc
test
add
sbb
loop
cmpsb
out
pop
jo
push
icebp
lock
cwtl
shr
sbb
orb
inc
xchg
les
cmp
xor
jo
or
xor
orb
sbbb
sbb
push
sub
mov
mov
pop
add
mov
inc
adc
arpl
push
push
frstor
pushf
or
jno
sbb
add
mov
dec
or
and
or
fdivr
jo
aam
imul
dec
sti
sbb
or
test
mov
push
pop
add
in
add
sub
jl
xchg
sub
inc
and
push
in
in
dec
sbb
push
jne
or
adc
leave
ss
popf
and
mov
cmp
and
jg
inc
mov
dec
nop
mov
jmp
push
shlb
rcll
sbb
lds
sub
pandn
cmp
ljmp
push
or
orl
stos
inc
jne
movl
cmp
rclb
inc
rorl
push
xor
push
imul
ss
adc
fwait
xor
push
push
daa
ret
out
pop
stos
scas
mov
loopne
mov
pop
push
aas
pop
ljmp
imul
loopne
mov
sbb
out
insl
cmp
sbb
mov
cltd
add
mov
jmp
and
and
cwtl
push
shrl
cmp
push
jge
frstor
test
fildl
aaa
push
insl
loope
fisubl
push
and
nop
mov
add
mov
sub
insb
push
push
loope
imul
mov
adc
inc
movsb
outsb
or
test
mov
andb
push
mov
mov
push
add
xchg
sub
outsl
dec
push
mov
adcb
scas
add
popf
cmp
push
mov
insb
sub
sbb
shl
fiadds
xchg
incl
dec
jb
test
je
cmp
pop
inc
push
push
xor
loopne
fidivrl
sub
pop
push
dec
loop
jno
sub
xor
ret
and
sbb
jl
ljmpw
inc
cmp
decb
gs
cmpsl
push
mov
loopne
dec
inc
testl
sbb
fcoms
or
and
push
out
and
mov
cwtl
lahf
push
sub
cli
sub
dec
pop
mov
xchg
sub
rcr
ret
adc
pusha
mov
daa
mov
dec
push
xor
inc
imul
jg
add
sbb
mov
aaa
mov
jns
xor
xor
sbb
inc
jl
dec
pop
xlat
and
adc
loopne
xchg
pop
pop
jl
or
dec
jns
mov
pop
les
jnp
or
je
mov
and
dec
loopne
js
ljmp
inc
and
mov
add
ud2
cmc
filds
cmp
movb
clc
lock
add
push
push
fistl
aas
call
sar
imul
inc
out
dec
sbb
lds
dec
dec
rcll
add
push
das
inc
or
insb
shll
icebp
je
imul
lret
mov
pop
ret
pop
and
mov
push
dec
fcmovbe
fisubl
jo
pop
jae
in
je
into
arpl
movsb
push
sahf
inc
and
cmp
bound
sbb
int3
xor
es
pop
sub
aaa
cmpsl
xor
lahf
jg
outsb
jo
in
cmp
sahf
mov
push
mov
loope
loopne
xor
subb
bound
jnp
pop
test
aas
roll
sbbb
shlb
inc
iret
clc
lock
dec
dec
dec
lahf
sbb
js
xor
pop
sbb
fldt
dec
popa
jmp
inc
jg
mov
dec
dec
cs
push
push
jbe
into
mov
add
pop
sbb
xchg
cwtl
add
pop
jp
fbstp
mov
daa
and
push
inc
push
in
mov
cmc
test
adc
jbe
jns
pop
lea
push
dec
inc
dec
xchg
and
faddl
jno
pusha
pusha
add
pop
test
push
dec
pmuludq
add
xor
mov
mov
add
and
outsl
sbb
movb
push
xor
add
pop
or
mov
cmp
push
xor
mov
mov
cli
jnp
gs
int3
add
sbb
lods
mov
fisubrl
js
add
xchg
loope
and
in
aad
mov
cmp
push
cwtl
dec
setbe
mov
push
push
inc
cltd
xchg
movsl
sub
pop
sbb
ret
push
dec
xchg
mov
inc
aaa
stos
inc
lcallw
fcoml
in
addl
movsb
jecxz
jb
stos
fisubrl
loope
or
inc
jne
pushw
inc
std
mov
add
sbb
mov
gs
repz
insl
jo
sbb
and
inc
pop
testb
and
sub
pusha
shlb
pop
and
xor
into
cld
jp
inc
xor
xchg
push
add
mov
add
mov
push
jbe
fwait
add
cmpl
movsb
mov
xorl
adc
insb
mov
stc
and
insb
mov
pop
add
mov
add
std
cmp
aaa
add
mov
xor
inc
dec
sbb
push
je
push
cmp
push
popa
pop
sbb
push
or
mov
lret
sbb
add
mov
sahf
add
icebp
push
xchg
xor
pop
aaa
mov
jmp
insl
jnp
ret
sub
push
pcmpgtb
adc
cmp
and
pushf
clc
roll
push
pop
dec
fwait
jnp
xor
movsb
out
xor
push
add
xor
aaa
push
pop
lahf
imul
dec
pop
scas
mov
mov
adc
mov
add
ficoms
testb
mov
cmp
push
sub
push
leave
loope
dec
sti
and
mov
push
xor
addb
and
mov
adc
push
mov
in
pop
jl
push
inc
js
jae
add
insl
daa
movsb
or
scas
je
scas
sbb
pop
push
ret
push
sbb
and
or
outsl
scas
adc
out
pop
jae
adc
xchg
jp
outsb
imul
mov
mov
jns
sbb
popf
add
cwtl
inc
mov
inc
mov
stc
dec
addb
cmp
stos
mov
pop
out
add
lods
xchg
cli
popf
pop
sub
add
dec
add
fs
xor
xor
mov
adc
cmp
scas
insl
mov
push
sbb
shrb
mov
sub
jae
push
popf
mov
dec
inc
jmp
dec
adc
sbb
pop
imul
pop
pop
loope
and
and
dec
test
loopne
imul
cli
aas
dec
pop
add
popf
mov
inc
jbe
add
push
xor
mov
adc
in
push
add
dec
inc
mov
pop
jbe
xchg
pop
add
leave
sub
push
xor
imul
cwtl
sbb
push
daa
and
dec
and
ret
cmp
push
bound
ja
pop
in
icebp
inc
lods
inc
outsb
lcall
add
je
mov
pop
or
push
jb
stos
add
sbb
xchg
int3
dec
cmp
mov
cmp
xor
into
sub
jmp
roll
and
jae
ja
pop
fmuls
imul
pop
pop
aaa
iret
mov
sub
cmc
push
inc
es
gs
push
in
jbe
fwait
stc
and
mov
cmp
sbb
cmpxchg
insb
jne
fstl
popf
in
mov
push
test
ror
or
je
dec
popf
je
sbb
loopne
add
mov
stos
mov
scas
aaa
pop
cmpsl
int
sbb
mov
fidivl
sbb
and
sarb
test
push
pop
xchg
addb
aam
sbb
or
daa
mov
pop
mov
push
dec
pop
int3
mov
icebp
addr16
addr16
or
in
out
add
xorb
out
out
push
jl
addb
push
popl
inc
js
xchg
push
sbb
add
rclb
jne
jae
mov
adc
push
loopne
cmpsb
test
outsb
jae
mov
insb
inc
jne
ja
and
mov
xor
xlat
addl
xchg
test
je
outsb
ss
and
fidivl
xchg
mov
imul
lock
add
shlb
mov
outsb
outsl
inc
xor
push
lods
in
test
mov
repz
jmp
outsb
scas
dec
js
sub
xchg
mov
mov
push
pusha
sbb
fwait
mov
in
mov
push
das
dec
stc
cmpl
adc
lods
xor
or
pop
add
jge
add
xor
add
xor
andb
add
repz
add
stos
hlt
aam
push
jecxz
in
in
das
outsb
scas
mov
cmpsl
int
psrld
pop
shrl
inc
jecxz
mov
lret
into
in
stc
fbstp
data16
fcmovnb
jg
out
popf
stos
pcmpgtd
addr16
mov
into
jmp
mov
mov
fadd
repz
lret
fcmovb
push
ss
out
sub
mov
mov
movsb
mov
or
loopne
int
mov
into
sbb
mov
adc
fidivs
fs
ljmp
enter
lret
mov
mov
jmp
sub
js
mov
ucomiss
push
popa
lods
notb
inc
inc
add
and
nop
ficoml
idivl
sub
jae
add
jae
leave
iret
jo
push
dec
incl
sahf
jo
outsb
add
into
les
insb
dec
ljmp
adc
sub
sub
outsl
clc
pop
orl
mov
inc
mov
aam
lret
or
iret
repz
outsb
cld
push
mov
jl
and
out
imul
push
pop
mov
js
dec
scas
fs
daa
in
jmp
aad
inc
repz
cmpb
pop
dec
notb
jb
sub
daa
cmc
sub
push
jmp
jmp
jmp
sbb
aas
dec
lea
add
es
dec
ja
daa
push
nop
andb
push
or
cli
cld
add
loopne
popl
adc
inc
dec
jmp
adcb
aas
xor
jo
or
mov
pop
adc
push
push
andl
iret
jg
lds
in
daa
testl
push
mov
inc
cmpsl
icebp
add
cwtl
push
out
and
and
add
inc
inc
dec
inc
add
or
stc
decl
and
push
xor
add
dec
inc
adc
les
add
mov
jo
pusha
adc
mov
inc
add
add
orb
sbb
xlat
add
xchg
sbb
dec
xchg
call
mov
stos
add
add
or
inc
pop
add
mov
jmp
jmp
cmpsl
stos
jne
jne
pop
in
dec
pop
rolb
pop
add
scas
push
dec
sbb
iret
or
add
in
add
daa
adc
jmp
mov
aas
mov
add
pusha
pop
mov
inc
jb
mov
push
jne
adc
jae
add
or
adc
test
out
es
push
sbb
ja
mov
jo
pusha
dec
out
inc
or
add
jg
mov
inc
daa
testl
or
andb
add
jne
testb
sub
mov
mov
cwtl
mov
adc
inc
enter
jmp
iret
add
add
fimuls
or
xorb
sbbb
dec
dec
lcall
cmp
data16
push
xor
dec
inc
or
add
pop
jne
add
adc
xlat
out
bound
add
adc
mov
or
into
arpl
sub
jl
add
xor
subb
pmaddwd
xor
mov
and
daa
mov
adc
xlat
push
sub
pop
lahf
ja
pushf
ret
das
mov
add
add
imul
add
std
add
xchg
fdivrs
incb
btc
in
stc
inc
fiaddl
mov
xadd
leave
jae
jne
or
sbb
push
adc
pop
mov
insl
or
mov
lgdtl
or
idivb
xchg
idivb
data16
pcmpgtd
mov
icebp
add
xlat
scas
adc
dec
or
jecxz
rcrl
clc
xor
and
add
stos
add
addl
add
jae
mov
pop
addr16
mov
pop
mov
sti
push
xchg
lock
clts
jg
idivl
sti
sbb
stos
bound
xor
push
sbb
test
aas
fidivl
mov
lcall
out
repz
jg
cld
cmp
dec
sub
add
add
sahf
aad
push
push
jge
loope
mov
cli
std
xchg
mov
mov
emms
mov
mov
pop
jbe
inc
jbe
add
mov
mov
cmp
jnp
in
add
flds
roll
add
psadbw
mov
xor
pshufw
xchg
js
ret
fisubrs
xchg
jmp
push
frstor
jecxz
inc
pop
inc
test
add
addb
jno
sbb
and
pop
scas
dec
aad
pusha
adc
add
add
outsb
sub
inc
scas
or
push
inc
notb
adc
xchg
mov
jecxz
dec
jl
or
adc
shrl
jbe
in
push
sti
jb
push
cwtl
out
sahf
jne
jae
ja
inc
shlb
push
push
or
ss
fcomps
notb
cmpsl
pop
mov
add
or
sub
or
pusha
aam
dec
xchg
cwtl
out
stc
inc
adc
pop
xchg
stos
loop
std
dec
decb
push
inc
or
cs
inc
push
xor
cmp
repz
adc
jnp
leave
mov
dec
jo
cmovno
pop
adc
add
imul
and
dec
lret
stc
int3
loope
test
inc
mov
lcallw
mov
mov
mov
repz
test
in
dec
adcb
and
dec
push
into
lods
sub
mov
insl
incl
mov
lret
mov
out
popa
out
sub
shll
not
outsb
dec
rcrl
mov
mov
ror
mov
mov
clc
popf
shlb
mov
mov
add
jae
or
scas
pop
inc
setnp
dec
and
out
jle
rcl
out
mov
mov
mov
cmp
cwtl
sarl
cld
mov
and
sbb
adc
sub
pop
add
mov
iret
mov
aad
inc
fsubl
out
ss
pop
xor
movsl
sbb
add
and
jbe
ret
pop
inc
cwtl
mov
das
inc
push
aaa
shll
stos
xor
shlb
cmp
add
clc
les
or
into
sbb
mov
sub
call
rol
mov
or
callw
add
dec
push
sahf
push
in
mov
push
xor
pop
cs
fldl
push
inc
xor
and
or
insl
mov
jae
pop
add
or
pop
arpl
add
out
mov
test
outsl
cmp
push
mov
inc
pop
pop
shrl
push
add
sub
bound
pushf
add
sbb
mov
xorb
sbb
jl
enter
shl
daa
mov
adc
aam
aam
cli
pop
or
enter
clc
into
fidivs
ljmp
aas
inc
mov
mov
or
sub
fisubl
mov
rcrb
out
fnstsw
jae
inc
or
hlt
mov
inc
lret
fmul
fld
sbb
aad
mov
mov
or
sub
gs
imul
pop
and
mov
mov
and
shlb
and
mov
sub
cmpsl
and
mov
ja
pop
or
adc
inc
and
mov
jbe
push
add
push
and
or
lock
push
pop
dec
inc
dec
dec
add
sti
sbb
add
sar
mov
and
xchg
cmp
ds
enter
loopne
ret
pop
sarb
dec
dec
jle
in
movsl
repz
xlat
fcmovbe
stos
mov
jg
inc
add
cs
inc
aam
adcl
sbb
xor
mov
test
daa
add
add
pop
mov
xor
enter
and
push
daa
out
push
inc
sub
sahf
out
or
outsb
and
aas
jg
or
add
pop
test
outsl
fldt
aas
and
aas
decl
sbb
addr16
push
push
aas
fwait
das
stos
push
adc
sub
pop
mov
pusha
or
mov
cmpl
ss
out
ja
fildl
jmp
add
lods
daa
pop
dec
cltd
sbb
data16
arpl
push
push
pop
push
or
adc
push
outsb
jae
xor
add
int3
dec
xchg
push
fiadds
data16
or
inc
sbb
adc
out
push
xor
inc
push
push
or
jnp
dec
pop
and
sub
push
and
pminub
sbb
outsb
int3
sub
xor
gs
ljmp
sbb
addr16
ss
sub
mov
push
cli
jns
sub
or
aaa
daa
mov
add
fbld
hlt
push
mov
int3
jle
sub
inc
xor
push
adc
cmp
and
test
insl
fwait
or
adc
pop
dec
mov
push
jb
data16
lcall
push
mov
ss
pop
mov
loopne
add
fisttps
cmc
dec
mov
cwtl
pop
and
out
inc
popa
xor
stos
sbb
bound
scas
fadd
xor
mov
and
pop
and
andl
mov
fistpl
repz
ja
cltd
mulb
or
add
mov
in
or
or
outsl
push
jnp
cmp
add
cmp
mov
xlat
push
lret
fsubr
cmp
dec
das
arpl
mov
ja
mov
das
pop
repz
sbb
push
dec
jecxz
jo
iret
sbb
or
and
push
pop
push
int
pop
data16
add
cmp
jae
sub
and
or
fnstcw
inc
pop
push
jnp
loopne
popa
ret
xchg
and
scas
sbb
loopne
into
pop
outsl
pushw
dec
mov
mov
push
xlat
es
popa
dec
popa
ss
inc
lret
jo
push
dec
mov
stos
pop
unpckhps
andl
jg
cli
adc
mov
and
addr16
inc
insb
lahf
fiadds
inc
inc
push
rol
mov
and
mov
test
nopl
add
add
jns
out
add
jns
out
test
and
fimuls
sbbb
out
xor
adc
das
insb
mov
out
mov
mov
add
push
dec
iret
repz
push
push
add
add
inc
push
inc
pop
cmp
cmp
repz
or
iret
repz
xor
sub
sub
and
and
sbb
cmp
repz
adc
iret
repz
adc
or
or
add
add
cld
dec
jns
out
sbb
sbb
sbb
jns
out
sbb
sbb
sahf
out
sahf
sbb
fdivrl
out
and
and
and
jns
out
and
and
sahf
out
sahf
and
mov
sahf
out
sub
sahf
out
sub
jns
sub
nop
jns
out
xor
sahf
out
xor
jns
xor
jo
or
insb
bound
inc
orl
push
insb
inc
jno
addl
sub
xor
adc
pop
or
add
or
in
mov
pop
adc
push
sti
lcall
outsl
outsl
push
out
outsb
jo
enter
cld
jmp
sbb
sub
and
sub
xor
sub
sub
and
dec
or
or
insb
imul
jp
outsl
nop
data16
jmp
sbb
sbb
and
sahf
add
and
mov
sbb
fucom
les
add
add
mov
add
sbb
out
dec
push
xchg
sbb
orb
addb
sti
enter
pop
orb
wbinvd
or
push
and
pop
pop
inc
cmp
or
push
or
sub
orb
sub
dec
dec
scas
add
das
xor
cmp
pop
pop
pop
pop
cltd
adc
adc
aaa
add
adc
cmp
and
adc
fistpl
adc
sbb
push
and
and
adcb
sbb
add
sbb
sbb
imull
aaa
sbb
sbb
sbb
sbb
sbb
lods
mov
add
sbb
inc
sbb
and
and
add
fwait
jbe
push
and
sub
int
sbbb
scas
push
mov
sub
push
sub
jb
xlat
lcall
xor
pop
xor
sub
adc
sub
xor
xor
rorb
sbb
sbb
addb
add
pop
sbb
pop
and
add
xor
adc
sbb
xor
dec
scas
popf
xor
sub
sbbb
fcmovb
push
sub
xor
repnz
push
daa
add
or
aaa
cmpb
fcmovb
mov
cmp
aaa
add
ss
fs
sbb
sub
cmp
jl
outsl
mov
cmpb
aas
addb
add
inc
orb
or
push
add
pop
int
pushf
cwtl
lret
and
inc
jb
sarl
add
and
enter
jns
xchg
sbb
inc
adcb
inc
fwait
push
lods
aaa
add
add
and
outsb
add
or
sbb
in
mov
sbb
fdivs
dec
orb
add
mov
dec
subb
pop
add
and
leave
subl
jb
push
sbbb
add
add
sub
and
push
enter
or
add
sub
aaa
xor
xor
bnd
in
push
orb
sbb
scas
imul
and
push
push
push
push
pop
outsb
mov
out
pop
daa
add
and
pop
add
pop
fwait
nop
inc
sub
sbb
cmp
pop
adcb
pop
imul
pop
adc
pop
push
sub
pusha
and
scas
sub
popa
push
add
cmp
pop
arpl
sbb
xor
fs
xor
mov
andl
sub
mov
pop
xor
push
addb
add
adc
popf
mov
mov
pop
insl
add
cmp
and
outsl
adcb
pshufw
fistpl
jne
add
sti
xor
ja
cmpb
add
pop
add
jp
daa
push
cwtl
sub
add
push
repnz
aaa
sbbb
pop
bound
xor
int
and
xor
movd
add
mov
sbbb
and
repnz
cmp
add
pop
stos
pop
sbb
fcmovnb
and
pop
add
xchg
sub
sbb
enter
and
out
sbbb
or
int
mov
xor
orb
sbb
lea
sbb
sbb
mov
sbb
mov
xchg
mov
and
xchg
and
pop
and
xor
sub
in
add
sub
add
jbe
add
daa
pop
fwait
xchg
subl
mov
add
cmp
or
mov
add
fdivrs
enter
lcall
ficomps
addb
add
lcall
add
or
add
orb
jbe
lcall
pop
xchg
pop
stos
pop
sbb
mov
cmpsb
adcb
test
sub
lds
sub
das
xor
cs
and
rorl
stos
lods
push
add
iret
in
lfs
add
and
mov
mov
cmp
mov
add
or
ficoml
pop
or
or
mov
sub
mov
roll
push
mov
mov
das
add
mov
sub
fnsave
mov
xor
loop
add
add
add
add
and
mov
cmpb
and
sbb
mov
xchg
fldt
sub
xor
jbe
daa
mov
push
and
mov
in
out
rolb
add
add
pop
mov
add
movb
enter
frstor
lret
lret
or
mov
or
orb
into
insl
jbe
dec
sbb
shlb
and
cmp
orb
add
sbbb
shll
jns
adc
add
aad
xor
inc
sahf
and
daa
es
sbb
divb
xorb
sub
lcall
xor
fsts
xor
jae
in
adc
sbb
xchg
cld
pop
leave
pop
sbb
adc
in
xchg
lret
sbb
jae
int
fiaddl
sbb
orb
fistps
sbb
fdivl
and
mov
add
add
or
sbb
pop
in
mov
sbb
sbb
adcb
sbb
loop
add
push
jbe
cs
jecxz
pop
sbb
in
in
pop
ss
addb
mov
call
scas
ss
dec
jmp
sbb
sbb
in
sub
test
out
pop
xor
sub
push
sub
sub
in
and
xor
ds
add
add
xor
xchg
mov
daa
sub
sbb
sbb
add
cs
or
leave
xchg
mov
testl
clc
jle
add
pop
jb
cmp
mov
sbb
ss
jb
ss
cs
mov
daa
sub
in
or
sahf
sub
std
xor
xor
add
orb
pop
and
in
sbb
add
xchg
mov
add
and
pop
add
and
outsb
stos
add
and
inc
mov
push
ss
add
fisubrl
or
push
adc
or
xor
faddp
add
or
push
scas
nop
pop
mov
and
ja
arpl
sub
adc
cmp
adc
das
add
addl
roll
daa
xchg
sbbl
sbbl
cmp
aaa
or
add
sbbl
sub
xor
pushf
lods
or
sbb
add
and
jge
sbb
addl
and
push
in
imulb
sbb
sbb
ss
add
and
push
outsb
or
xor
xor
and
and
sub
adcl
pop
int3
add
xchg
add
mov
outsl
sub
movsl
xor
sub
daa
xor
sub
mov
xor
and
jae
incb
adc
sbb
imulb
sub
xor
add
adc
aaa
in
outsl
int
sbb
das
addl
pop
in
mov
and
add
xor
sbb
inc
jb
add
sbb
bound
xor
add
push
push
xchg
mov
ss
stos
add
sub
aaa
cmpsl
popf
roll
cmp
push
jns
sbb
aaa
loope
sbb
xor
out
mov
es
add
add
iret
mov
aas
and
shrb
mov
cmovno
ss
cmp
add
sbb
int
inc
orl
mov
inc
orl
pop
inc
add
pop
aaa
or
std
or
add
orl
and
jmp
incb
xor
adc
push
adc
cs
test
sbb
jbe
push
adcl
adc
sbb
xor
mov
push
inc
add
sub
or
pop
push
xchg
push
push
rcrb
or
and
or
adc
sub
sub
jb
pop
and
pop
je
daa
or
das
fsub
pop
sbb
push
aaa
adc
or
xorl
aaa
or
js
push
sbb
dec
fildll
sbb
or
add
jb
or
push
or
inc
sarl
mov
push
mov
mov
adc
xor
jns
xor
and
lock
rcrb
adc
push
push
xchg
or
sbb
or
add
push
sub
jp,pn
sub
sbb
xor
xchg
ret
mov
xor
sub
mov
fidivs
push
es
inc
sbb
push
sbb
or
add
push
pusha
fdivrs
das
adc
aaa
xchg
loopne
push
daa
push
das
add
sbb
push
mov
andb
clc
or
mov
orl
xchg
sub
adc
aaa
push
and
sub
xor
fmuls
notb
lcall
ljmp
jge
incb
and
sbb
or
gs
inc
or
lock
into
pop
ljmp
ret
sbb
push
adc
adc
ret
mov
or
mov
sub
push
mov
mov
push
push
sbb
fiadds
sbb
es
cs
push
ret
and
stos
aaa
jp
sbb
push
ljmp
inc
mov
pop
pop
or
cvtpi2ps
mov
add
add
sbb
sub
sbb
push
sbb
mov
sbb
adc
add
mov
adcl
add
xlat
test
push
bound
mov
addb
xchg
push
ja
mov
or
and
pop
addl
dec
and
das
pop
orl
add
inc
popa
xor
ficoml
jbe
mov
cli
pop
data16
sbb
cmp
sbb
int
or
or
pop
adc
and
jmp
sbb
cmp
sub
pop
add
and
mov
or
ds
sbbl
int3
loope
outsb
adc
adc
xchg
dec
testb
mov
repnz
test
sub
jp
add
ss
adc
daa
mov
push
or
out
adc
mov
xor
pusha
andl
mov
test
add
xor
pop
and
test
push
ficomps
jbe
mov
arpl
sahf
ds
addl
outsb
mov
roll
xchg
subl
inc
popa
push
add
push
inc
push
mov
mov
out
xor
jle
xor
and
cwtl
cs
xchg
or
push
push
push
stos
adc
dec
push
sbb
imul
jo
bound
or
mov
add
pop
cmp
pop
cli
adc
inc
inc
xchg
cwtl
es
mov
xchg
or
add
add
sbb
or
mov
sub
repnz
pop
popa
push
repnz
subl
ds
rcrb
je
ret
add
xor
scas
push
call
sbb
jb,pn
dec
inc
cmc
shll
sub
mov
insb
addl
pop
xchg
add
or
scas
sahf
outsb
subl
jno
adc
pop
xor
pop
sbb
or
sbb
push
add
ds
das
or
das
add
add
js
mov
mov
jo
sub
xchg
add
orl
lret
adc
add
push
sbb
ficoml
xor
rcrb
cwtl
xor
mov
sub
sbb
shl
fadd
jno
xchg
push
add
push
ret
and
sub
adc
sbbl
data16
xor
jle
xor
and
or
or
jbe
sbb
cmp
push
mov
aaa
mov
sub
jbe
or
push
sbb
sbb
fs
dec
push
mov
xchg
inc
add
adc
push
or
sbb
and
jnp
adc
adc
push
fisubl
out
sub
orb
into
aaa
scas
add
push
cli
dec
mov
lcall
jp
ret
ret
jle
dec
out
clc
fs
cs
ss
dec
addb
jl
dec
lcall
or
xchg
sbb
ret
xorl
popa
or
xchg
jle
negb
pop
fcmovbe
add
bound
adc
hlt
mov
or
mov
mov
add
add
sbb
aaa
xor
push
and
out
mov
setb
lcall
cmp
scas
or
test
or
sbb
bound
push
cmpsl
pop
sbb
sub
pop
xor
test
pop
or
orl
xchg
push
push
jecxz
push
or
sbb
lret
xchg
in
push
mov
sbb
push
sub
orl
mov
mov
mov
shll
and
sbb
ss
dec
add
scas
mov
ljmp
sbb
orb
push
and
mov
dec
stos
bound
pop
push
movsb
test
or
inc
xor
pop
and
inc
add
dec
xchg
out
or
mov
add
adc
dec
or
push
loop
push
sub
fisubl
dec
lcall
push
jbe
mov
bound
cmpsb
ss
ljmp
xor
mov
sbb
add
push
ljmp
int3
and
mov
repnz
sbb
mov
add
mov
inc
dec
push
pop
shll
sbb
jle
aam
cmp
mov
sbb
cmp
mov
adc
pop
sbb
fimull
add
cmpl
cmpsb
mov
outsl
xor
orl
push
daa
rolb
enter
inc
jbe
or
add
arpl
pop
pop
pop
lea
lods
push
lock
fidivl
out
outsb
or
stos
mov
loop
aaa
xchg
mov
ss
adc
int3
shrl
xor
push
ljmp
jle
and
push
mov
push
sbb
sub
xorl
cltd
push
mov
nop
add
jbe
jbe,pn
sbb
jb
iret
push
add
add
cmpsl
lds
mov
push
shl
pop
ljmp
adc
sahf
mov
push
mov
data16
sbb
outsb
push
shlb
call
xchg
adc
ficoms
imulb
ficoml
inc
xchg
adc
cli
cli
and
add
and
sbb
or
push
out
stos
add
push
adc
mov
rolb
daa
jp
add
inc
push
inc
pop
adc
cwtl
negb
or
mov
dec
inc
bound
sbb
jle
xlat
add
xchg
xchg
adc
and
xor
pop
sbb
adc
dec
cmpsb
pop
sbb
jle,pn
pop
or
in
xchg
sub
stos
push
loop
mov
es
and
push
xchg
inc
faddp
sbb
add
or
ds
mov
mov
mov
leave
icebp
xor
adc
jle
xchg
push
or
repnz
add
jle
cmp
or
add
or
lcall
mov
pop
loopne
stos
bound
adc
push
out
or
and
mov
cwtl
or
pop
jbe
or
repnz
jbe
rcll
scas
or
rol
jmp
bound
xchg
and
scas
ret
add
pusha
sub
or
repnz
push
scas
sbbb
add
adc
pop
stos
cltd
rcrb
adc
es
pop
push
xor
sub
add
bound
ds
dec
jo
data16
inc
lock
shlb
into
push
pop
stos
sbb
xor
add
icebp
ret
rolb
es
aaa
or
ret
fisubs
xchg
sahf
pop
dec
sub
add
or
cmp
cltd
into
mov
push
mov
xchg
out
sub
sar
rorl
xor
jbe
adc
or
sahf
jbe
mulb
sbb
jbe
push
sub
sbb
push
mov
ds
sbb
push
push
mov
idivb
cmpsb
mov
add
roll
xchg
ljmp
add
fimull
aad
fs
pop
scas
bound
inc
xchg
cs
push
or
xchg
xchg
mov
out
adc
js
xorb
mov
xchg
add
or
push
mov
repnz
sbb
js
push
daa
cmpb
stos
inc
add
sub
and
push
add
bound
xor
dec
ret
cmpl
andb
or
push
push
mov
ret
dec
sahf
ds
test
lds
mov
sbb
and
mov
mov
adc
xchg
mov
push
roll
or
adc
stos
and
jb
add
cmpsl
mov
pop
and
sub
pusha
pop
movsb
mov
into
adc
xor
lret
push
lods
adcl
or
stos
ljmp
lcall
sbb
dec
or
subl
lods
or
adc
sbb
ljmp
out
push
adc
pushw
sub
bound
jp
loop
shrb
rclb
push
adc
sbb
and
sub
xor
dec
pusha
xor
mov
clc
das
add
or
or
sbb
inc
mov
adc
orl
dec
or
adc
mov
jae
or
add
add
and
inc
dec
pusha
push
pop
sub
sub
lcall
adc
sbb
repnz
push
xlat
jecxz
shlb
out
nop
rorl
bound
lock
push
aaa
sbbb
dec
pusha
mov
mov
mov
es
mov
and
push
mov
inc
pop
cmpsl
add
mov
cmp
or
xor
pusha
push
cmp
shlb
push
cmpsb
stos
lret
out
mov
mov
add
or
sub
sub
ret
pop
adcb
or
call
sahf
jbe
sub
lret
add
test
sub
mov
pop
pop
xchg
or
sub
mov
xchg
xor
sbb
or
incb
mov
sub
js
cli
mov
adc
jb
cs
push
or
add
or
mov
cmpb
call
mov
xchg
xor
stos
cmp
outsb
sub
xchg
lds
loop
lret
data16
sbb
test
add
jle
cli
loope
loop
fiaddl
pop
mov
int3
sub
xchg
or
inc
push
xchg
mov
mov
out
mov
fisubl
and
movl
subl
or
mov
adc
xchg
fidivs
dec
push
pop
repnz
sub
mov
push
daa
mov
les
pop
pop
mov
or
bound
sbbb
rcl
mov
push
xchg
and
pop
push
or
fmuls
ret
sahf
sbb
cwtl
add
or
inc
push
cmpsb
pop
push
add
bound
adc
stos
add
sbb
or
dec
pop
data16
inc
mov
xor
decb
outsb
and
add
cmp
push
cli
hlt
or
xor
or
rcll
into
or
pushf
push
es
cli
xchg
faddp
xchg
je
push
xchg
sub
or
pop
push
sbb
popf
cs
push
or
or
mov
pop
mov
add
or
add
nop
enter
sbb
out
or
lcall
push
xor
aad
add
or
les
pop
xorb
add
fdivrs
cmpsb
mov
ret
and
add
sbb
lcall
or
inc
add
adc
jbe
es
sub
add
adc
xor
push
mov
push
or
xchg
fimull
xchg
dec
or
mov
iret
orb
mov
jne
sub
data16
dec
fisubl
mov
sub
sbb
stos
pop
rol
and
iret
rcrb
orl
js
push
bnd
adc
xchg
xorl
cmp
push
dec
cltd
popa
adc
add
pop
xchg
push
add
adc
cmp
cltd
aad
je
pop
sbb
adc
loopne
stos
push
adc
aad
stos
jle
xchg
jle
pop
data16
scas
fs
aad
or
push
out
mov
adc
or
and
push
mov
sbb
roll
aad
push
adc
sub
push
sub
dec
or
shl
dec
or
adc
add
adcb
and
lcall
mov
add
dec
pusha
xchg
add
lret
or
movups
xchg
int3
out
add
add
xor
in
test
xchg
sbb
jne
adc
rolb
psrld
xchg
push
dec
mov
or
shl
es
ds
adc
add
and
jbe
pop
sti
dec
xor
sub
adc
xor
mov
and
push
cmpl
stos
ret
xchg
xchg
mov
or
sbb
adc
add
cmp
or
or
mulb
outsb
xorl
sbb
orl
roll
lcall
lcall
cmpsb
dec
dec
sub
xchg
sbbl
lret
nop
push
or
fwait
push
aam
xchg
jg
sub
pop
xor
sbb
movb
jb
lods
jge
or
lcall
aad
pop
add
dec
and
out
ljmp
jecxz
out
fiaddl
push
shl
scas
and
sbbl
pop
enter
jb
sub
lcall
mov
loope
add
dec
push
xchg
mov
sub
push
cli
in
or
inc
sub
scas
pusha
cmpsb
ret
fisubs
loop
orl
xchg
out
mov
rolb
ss
out
xchg
sbb
xor
xor
pop
adc
xchg
sbb
data16
int3
mov
mov
out
dec
sbb
mov
mov
or
mov
or
sub
dec
xchg
sub
rclb
bound
sbb
pop
aad
test
mov
adcb
and
mov
ss
sti
and
cmpb
inc
xor
nop
mov
push
popa
mov
sub
cmp
and
sub
repz
pop
push
roll
push
outsb
outsb
adc
aas
pop
shrl
cli
sbb
sbb
xchg
push
mov
cli
push
cmp
in
adc
fadds
es
mov
jle
int3
push
cwtl
xchg
stos
data16
push
jle
adc
loopne
or
shlb
jo
rcrl
add
ljmp
push
cs
or
addb
and
xchg
adc
jb
das
fisubl
or
ljmp
xor
or
imul
xchg
and
shr
sub
fildl
add
andb
or
push
mov
sahf
mov
mov
pop
mov
sbb
push
loop
test
adc
mov
js
into
push
inc
scas
das
sub
jb
mov
inc
pop
adc
ds
mov
or
out
push
cli
les
add
je
mov
dec
and
xor
xor
imul
mov
inc
mov
mov
fsubrl
test
out
ficompl
mov
ret
cs
jbe
jb
rolb
mov
dec
orl
xor
pop
lds
mov
xchg
inc
mov
mov
cli
jle
and
scas
push
push
xchg
mov
into
push
data16
push
jb
and
mov
cltd
or
out
ret
and
add
into
push
lock
lret
int3
subb
push
out
sbb
aam
es
outsb
or
pop
add
push
outsb
xor
sub
loop
push
daa
and
lret
pop
xchg
pusha
push
jle
sahf
mov
sbb
push
es
out
push
adc
enter
push
pop
xchg
test
in
dec
sub
jp
mov
push
pop
push
add
xchg
pop
cmp
xchg
xor
dec
mov
inc
add
out
sbb
jbe
jnp
inc
add
sbb
cs
ss
xlat
out
pusha
push
pop
fidivrl
or
add
popf
mov
inc
sbb
sbb
inc
imul
sbb
insl
hlt
fsubrp
push
and
or
or
pop
aaa
or
sub
pop
mov
cmpsb
or
or
sarb
cmp
mov
inc
sbb
ljmp
adc
or
out
out
fstp
ds
or
cmp
add
and
movsl
adc
cmpsb
and
les
xor
out
mov
mov
and
or
push
in
jae
add
push
and
jbe
or
pushf
push
sbb
sbb
lret
das
inc
imul
or
outsb
mov
loop
into
mov
or
inc
or
and
scas
adc
pop
or
cs
cltd
dec
push
or
sbb
ret
xor
sbb
stos
xor
and
insb
push
in
add
and
or
push
and
or
pop
xchg
fisubrl
or
je
mov
mov
movb
or
or
cltd
xor
ja
push
je,pt
jecxz
bound
or
sub
or
cmp
or
xor
sub
fnstcw
or
cmp
in
or
dec
andl
xor
das
pop
jnp
imul
cmp
int
pop
or
or
add
adc
pushf
push
out
shr
and
cmp
out
or
bound
sarl
or
ret
mov
jnp
xor
clc
ja
inc
or
outsb
push
mov
loopne
dec
sahf
or
or
or
jno
jnp
adc
ficoml
jbe
scas
adc
and
push
xor
mov
or
and
add
push
or
jno
sbb
mov
mov
push
or
lret
push
loope
push
or
cs
jo
adc
sbb
sbb
or
xchg
out
sub
and
and
xchg
les
or
or
mov
sti
pop
and
xchg
imulb
push
inc
ss
add
or
xlat
js
or
push
fprem1
aaa
or
add
inc
negl
push
das
daa
cltd
sub
mov
add
aas
testb
jo
pushf
bound
push
or
test
aaa
imul
mov
push
or
pop
cmp
ficoms
das
cmp
or
arpl
icebp
mov
mov
add
inc
pop
mov
dec
sub
call
mov
or
adc
sbbl
add
xorb
rorb
add
loop
jb
jbe
add
jle
shrb
or
adc
add
scas
add
xchg
cs
pop
adc
or
jg
aaa
add
leave
add
add
sub
or
sub
or
jae
mov
mov
inc
xchg
xor
mov
or
or
cmpl
or
push
dec
add
fisttps
xor
mov
mov
xchg
inc
sbb
ret
out
or
or
inc
aaa
repnz
xchg
mov
and
int3
shl
fisubs
push
pop
and
inc
and
cmp
rorb
or
push
fidivl
js
push
das
xchg
inc
shrb
sahf
push
pop
or
aam
add
cmp
popf
push
sub
mov
xor
mov
or
sub
test
cltd
sbb
ds
cmp
mov
sub
jae
pop
fistpll
push
adc
or
stos
push
jbe
or
and
push
mov
mov
ds
cmp
dec
pop
sub
orb
sbb
aaa
out
bound
add
sbb
cltd
sbb
adc
addr16
or
push
or
push
lcall
mov
cmpsb
inc
popa
adcb
and
xchg
dec
or
mov
outsb
xchg
cmp
or
ljmp
xchg
ret
sahf
sbb
mov
or
cmp
shlb
push
int3
cmp
pop
pop
shrl
sahf
inc
add
cmpsl
bound
push
push
push
push
sub
add
adc
sub
jno
xor
inc
sbb
lock
lea
push
xchg
cmp
or
push
adc
and
push
and
sbb
and
xchg
or
int3
iret
jp
push
or
cmp
out
cmp
and
mov
sbb
call
xchg
or
cwtl
cmpl
jl
dec
stos
ss
or
jp
adc
or
es
or
cmc
adc
fbld
cmpsl
dec
or
es
jmp
jnp
sub
cmp
xor
or
add
ret
test
aas
ret
lea
mov
xchg
jo
rclb
loope
inc
cmp
adc
fildll
inc
and
rcll
xor
bound
xor
je
js
mov
lcall
sbb
test
jmp
or
or
popa
jg
das
out
mov
or
clc
fdivrl
mov
adc
push
repz
popa
sub
addr16
cmp
pop
cmpsl
push
je
popf
ficoms
incb
sbb
cmpsl
adc
push
push
xor
xor
xchg
sub
mov
cmp
shlb
das
xlat
popa
or
adc
jae
mov
aad
xor
push
popf
mov
out
add
test
popa
xchg
push
dec
xchg
dec
lcall
js
out
add
loop
sbb
sub
sarb
add
pop
addb
cmp
adc
in
jbe
jne
imul
out
cmp
outsb
outsb
gs
jne
imul
push
outsl
dec
outsb
push
and
jmp
sbb
dec
push
adc
aas
pcmpeqw
imul
es
push
popa
pop
jle
outsb
lret
repz
mov
es
repz
and
jns
jae
repz
arpl
js
push
mov
shrl
pusha
cmp
outsb
jns
jns
push
mov
arpl
jp
mov
or
cmp
cs
fbld
mov
mov
iret
rcl
mov
mov
sub
das
js
mov
pop
pop
notl
sub
sbb
std
and
cmpxchg
mov
lods
pop
mov
mov
jnp
sub
scas
pop
fidivrs
iret
aam
mov
mov
cmp
int
lods
aam
rol
shlb
pop
push
pop
push
add
xor
leave
stc
shl
aaa
ja
push
test
or
inc
inc
ja
mov
inc
aaa
jl
and
scas
pusha
pusha
sbb
xor
sub
or
pusha
lock
push
mov
iret
cmp
fs
inc
push
push
xor
repz
and
adc
jns
out
add
push
lock
out
ror
sarb
test
cwtl
nop
mov
out
cmpb
push
fs
pop
pop
push
sahf
out
sahf
push
dec
dec
inc
inc
cmp
out
xor
and
adc
xor
out
add
dec
in
loopne
repz
aam
mov
iret
repz
xorb
cmp
repz
inc
xor
adc
jns
iret
add
dec
in
les
movsb
xchg
test
js
mov
jns
inc
inc
inc
inc
inc
inc
jns
out
dec
dec
dec
dec
dec
out
sahf
out
dec
dec
push
push
sahf
out
sahf
push
push
push
push
push
push
ljmp
mov
sbb
ja
repz
ljmp
or
repz
or
or
or
cmp
repz
or
add
repz
repz
add
add
repz
add
add
add
cmp
repz
or
or
repz
repz
or
or
bswap
into
or
and
xchg
mov
stos
jbe
cld
aas
xchg
mov
data16
push
push
inc
xor
in
cs
adc
cmp
cmp
pop
jb
ss
xor
or
adc
pop
push
jne
sbb
fcoms
das
xor
cltd
jbe
pop
cmp
cs
xor
push
fcoml
xchg
subl
insl
cmp
cmp
ss
leave
leave
xor
addl
addl
popf
sbbl
pop
daa
daa
daa
daa
pop
push
push
push
daa
daa
daa
daa
push
push
push
push
daa
daa
daa
daa
push
dec
dec
dec
daa
daa
daa
daa
dec
dec
dec
dec
daa
daa
daa
daa
dec
inc
inc
inc
daa
daa
daa
daa
inc
inc
inc
inc
sbb
call
fisubs
mov
dec
push
inc
cmp
inc
dec
push
aas
cmpsl
jne
inc
dec
inc
stos
or
push
out
scas
fadds
add
jl
xchg
out
mov
push
sub
sahf
jae
cmp
lea
or
in
out
fldenv
ljmp
and
faddl
sub
or
and
inc
push
dec
sahf
outsb
outsl
cmp
push
cmc
push
ja
pop
shlb
push
add
push
cltd
cmp
sbb
push
cmpsb
push
xor
cmp
push
pop
push
insb
pusha
push
mov
xor
add
inc
and
mov
fidivrl
lea
scas
repz
pop
push
loopne
sar
cmp
repz
sti
mov
mov
stc
nop
clc
js
iret
repz
push
hlt
cmp
repz
repz
add
sub
div
fdivp
pop
lock
out
fistpll
out
push
out
pop
in
dec
in
out
sahf
out
jmp
ljmp
aam
call
iret
cmp
in
push
in
iret
jae
repz
loop
push
loope
sahf
out
lcall
jns
out
test
insb
faddl
jnp
fstpt
fidivrl
cmp
fmuls
xlat
cwtl
repz
cmp
jl
push
ror
repz
pop
rorb
cmp
ds
repz
iret
or
hlt
push
jns
out
int
int3
int3
lret
out
sahf
out
lret
push
enter
sub
sahf
jnp
lahf
push
les
push
ret
iret
imul
sarl
jns
in
aam
shl
sahf
out
lods
mov
out
test
mov
dec
mov
push
mov
iret
repz
mov
mov
iret
repz
mov
push
mov
mov
add
sbb
mov
ret
fadd
jmp
outsb
add
or
faddl
lret
cld
rol
push
loop
jbe
xor
ret
imul
mov
out
sarl
mov
out
and
notb
insl
loope
fidivs
mov
cld
xor
jecxz
cmc
mov
popf
add
mov
idivb
add
pop
loopne
jecxz
push
adc
mov
mov
xor
or
clc
mov
mov
shlb
add
sar
mov
aad
shl
dec
mov
mov
add
add
jg
popl
out
stos
iret
loopne
enter
insl
and
pop
aas
pusha
mov
add
cmp
xor
adc
aas
push
sbb
call
pusha
popa
jecxz
adc
adc
inc
add
int
mov
enter
sub
paddw
cmp
das
dec
mov
imul
addr16
xor
xchg
daa
jo
pop
inc
arpl
out
das
push
shlb
rcl
sub
mov
mov
or
daa
orl
add
jbe
sbb
insl
adc
xchg
aas
cmpsb
pop
mov
popf
fimuls
repz
mov
add
push
pusha
adc
mov
mov
addl
pop
xchg
or
les
arpl
daa
bound
scas
pop
mov
out
aad
in
add
out
add
fisubrl
daa
push
into
stos
ret
inc
cmp
inc
mov
pop
sbbl
cmpsl
sub
mov
das
jg
mov
mov
lret
das
fwait
fmuls
pop
push
push
dec
lret
lock
sub
out
dec
aaa
mov
or
dec
lret
leave
in
add
push
out
add
lods
inc
xor
mov
xchg
rclb
aas
pop
add
notb
daa
fstpt
push
lock
stos
inc
mov
mov
mov
dec
pop
sub
xchg
pusha
adcl
mov
sub
les
popa
out
jg
mov
mov
pop
or
mov
rcrb
enter
mov
push
fnstcw
mov
sbb
sti
aas
mov
xchg
pop
mov
push
cmp
aas
sarb
loop
out
adc
jmp
std
mov
or
mov
sbb
jecxz
aaa
lret
jnp
fdivrs
pusha
inc
jbe
lahf
pop
inc
adcl
or
sbb
or
fwait
mov
mov
pop
int3
loope
add
and
and
out
pop
shlb
adc
rol
aaa
or
cs
or
mov
sbb
idivb
clc
out
imul
cli
ret
iret
push
in
in
mov
aaa
lret
dec
mov
and
mov
mov
aad
cmpsl
mull
mov
fsubrl
push
mov
sub
orl
bound
jecxz
mov
adc
aas
addr16
mov
mov
aaa
ret
ret
daa
stos
inc
adc
xchg
jne
imul
rcl
leave
stos
mov
fs
mov
dec
jo
cmpsb
invd
jo
dec
pop
or
les
jp
pop
out
mov
cmp
push
and
mov
fsubs
dec
dec
and
mov
add
push
xorb
sti
daa
mov
rcll
cmp
jne
fdivrp
jo
jo
add
iret
mov
xlat
repz
mov
mov
or
mov
fwait
xchg
sbb
out
xlat
repnz
pushf
sbb
mov
adc
cmp
push
lock
lods
in
insl
das
pop
das
imulb
iret
repz
jg
add
pop
pop
pop
pop
cmp
pusha
popa
bound
iret
shrl
pop
push
in
in
cmp
repz
enter
push
punpcklbw
int
into
pop
enter
add
movswl
inc
cmc
push
push
push
jo,pn
lds
loope
fimull
adc
out
lods
mov
mov
sbb
pop
dec
push
aad
into
iret
fdecstp
xor
inc
mov
adc
mov
jae
mov
adc
fcoml
das
loop
notl
iret
push
aaa
cmp
sub
ss
jecxz
outsb
stc
loopne
cmpsb
mov
mov
cwtl
popa
mov
nop
jo
pmovmskb
push
scas
adc
subb
add
addr16
cmp
push
in
mov
jg
add
jae
mov
movups
push
sbb
imul
mov
movups
jg
xlat
hlt
imul
or
jmp
fcmovnu
cmp
scas
clc
pusha
into
pusha
pop
lock
test
cmp
fcomp
loopne
add
fmuls
sti
xor
mov
js
enter
cmp
pop
rcrb
ds
cmpsb
dec
jnp
push
adc
std
rol
into
leave
out
mov
in
bswap
shlb
in
push
mov
mov
mov
ret
cmpsl
cmp
aas
in
pop
xlat
iret
mov
clc
mov
fsts
mov
jg
mov
mov
outsl
jg,pt
fmuls
out
lret
into
out
pop
jp
pop
shufps
xor
rcr
orb
pop
outsb
cmp
mov
pop
rol
mov
fidivrl
jg,pn
mov
movsb
stos
pop
mov
push
dec
in
test
fs
mov
or
push
lret
jle
clc
xlat
stos
clc
push
imul
sub
and
mov
or
dec
inc
dec
fiadds
xor
add
pop
sbb
sbb
mov
negl
push
cmp
cmp
repz
js
mov
cmp
jnp
xrelease
xor
dec
insl
inc
sbb
pop
sbb
and
mov
out
or
sarl
scas
aas
fiaddl
aas
out
aas
push
mov
pop
leave
pusha
pop
mov
dec
sub
das
fs
dec
inc
inc
pop
pop
add
testb
aam
xchg
das
or
mov
cs
push
outsl
push
lret
xchg
mov
das
pop
test
push
int
arpl
xlat
pop
bound
addr16
outsl
loope
add
mov
add
push
mov
sbb
shll
pusha
clc
push
sahf
push
dec
pop
jae
mov
lahf
pop
ret
and
mov
pop
scas
pop
inc
inc
pop
pop
sbb
jg
ds
pop
push
push
inc
push
inc
jg
cmp
fcmovbe
dec
push
sub
mov
jg
dec
in
shll
das
movsl
lods
shlb
mov
or
lods
cmpsb
comiss
and
and
repz
cmp
mov
aad
xchg
sti
clc
stos
pusha
mov
das
push
dec
push
inc
inc
clc
pop
pusha
imul
push
dec
inc
sub
aas
mov
imulb
inc
fwait
rcr
sub
add
jbe
jg
test
push
andnps
jnp
cmp
fdivl
add
jg
out
lods
mov
ret
lcall
mov
iret
mov
xlat
fiaddl
fisubl
aas
fildll
imul
outsl
pop
add
iret
es
jg
cld
and
and
dec
fisubl
and
and
xchg
pop
push
insl
aas
push
dec
test
sub
mov
enter
dec
dec
push
xor
sub
push
mov
pop
or
add
or
test
pminsw
or
rcr
or
inc
and
fs
push
mov
dec
push
add
jns
mov
test
push
mov
xchg
unpcklps
mov
mov
xchg
cmc
aas
pop
scas
add
mov
pop
lock
outsw
mov
mov
push
aam
add
adc
daa
add
add
sbb
popl
je
scas
push
adc
dec
repz
add
daa
clc
hlt
lock
repz
sahf
idivl
mov
mov
jns
xchg
nop
mov
test
repz
sahf
pusha
pop
push
push
dec
inc
xor
iret
repz
and
push
or
hlt
movsb
cmp
cmpsb
call
xchg
sbb
push
add
add
out
sahf
out
or
dec
dec
sahf
or
or
aaa
or
jbe
xchg
scas
or
daa
jbe
dec
ficoms
push
adc
and
in
inc
push
addr16
das
mov
xorps
insl
dec
sahf
out
push
and
jb
fsubrl
fcompl
orl
cmp
pushf
test
xchg
sub
mov
inc
fidivs
aas
into
aas
xlat
pop
sbb
add
sahf
jl
movl
cmpb
cmpsb
lret
pop
movsl
sbbl
fildll
mov
bswap
add
pop
inc
cmpsl
nop
fbstp
mov
call
leave
pop
cld
jle
push
add
push
pop
fisubrl
xor
sub
fsubp
stc
jb
jle
push
jecxz
fisubrs
dec
outsl
ja
sub
push
or
fnstsw
jne
push
inc
inc
push
adc
xor
out
push
adc
sub
ror
cmp
sbb
sahf
cmpsl
stc
cmp
lock
js
sahf
out
mov
dec
imul
ret
cmc
jge
or
sahf
push
pop
jne
jg
or
adc
fsubl
jno
or
cld
outsl
adc
ss
or
sbb
xchg
std
aas
mov
inc
or
stos
sbb
roll
and
ret
add
call
or
js
or
add
sub
xchg
push
mov
sbb
iret
repz
test
jl
repz
push
je
insb
pcmpgtb
repz
pop
add
iret
repz
adc
iret
repz
or
or
adc
cmp
sub
and
repz
repz
adc
or
add
cld
sub
jne
jns
clc
and
out
aad
mov
ret
mov
outsl
movups
xor
sub
mov
inc
aas
mov
pop
add
faddl
mov
xor
pop
outsb
jg
inc
outsb
stos
push
scas
mov
out
sahf
mov
out
cmp
repz
or
sub
repz
repz
pop
jle
popf
out
cmp
mov
inc
sahf
out
sahf
and
inc
inc
data16
sahf
out
xchg
cmpsb
lret
in
cmp
out
or
ss
iret
repz
push
mov
repz
out
push
inc
adc
xor
jle
out
sahf
out
mov
test
cmp
or
daa
cwtl
push
lds
lds
enter
inc
pop
adc
mov
fwait
add
sahf
pop
insb
pop
fidivs
inc
sbb
sub
inc
push
leave
and
add
les
test
add
fadds
in
jg
add
sbbb
aaa
cmpsb
stos
data16
add
cs
or
lock
mov
add
rorb
mov
sub
cmc
push
inc
out
inc
ja
add
or
fildll
add
push
mov
push
push
push
inc
in
inc
or
test
cltd
fisubrl
rorb
xchg
xchg
out
add
lea
mov
cs
xchg
xchg
and
xchg
scas
js
inc
pop
rclb
out
fidivs
ja
dec
repz
mov
repnz
das
dec
adc
pop
cmp
inc
test
pop
adc
mov
out
ljmp
adc
mov
and
adc
jg
fistl
popa
xchg
pop
jg
push
sti
loopne
sub
mov
add
cli
or
or
in
jl
ret
mov
adc
stc
and
and
sbb
into
sbb
inc
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
sti
incl
add
inc
stc
mov
adc
mov
decl
js
jg
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
call
repz
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
cld
rclb
popa
aam
mov
and
xchg
clc
repz
mov
subb
fwait
xchg
and
dec
insb
arpl
add
int3
add
aas
jno
or
mov
jo
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
call
mov
inc
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
pushl
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
jmp
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
incl
cmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
jmp
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
incl
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
fstpt
pop
ficomps
frstor
jp
push
or
das
mov
incb
xchg
add
in
xchg
dec
adc
scas
in
mov
dec
adc
xchg
cltd
dec
adc
sti
imul
add
je
popf
dec
adc
pop
addr16
bound
mov
push
adc
jbe
push
adc
fbstp
adc
pusha
mov
fs
sub
cli
xlat
ljmp
add
cmp
mov
jnp
and
ljmp
add
dec
sub
jg
add
jg
repz
xor
sub
sub
cmp
mov
mov
jecxz
cli
out
push
or
xchg
push
jno
loopne
imul
js
popl
adc
inc
data16
dec
inc
push
adc
js
adc
push
jbe
jns
or
call
push
or
cmpsl
mov
adc
into
xchg
outsl
add
jecxz,pn
xchg
jo
adc
add
push
sbbb
sbb
cmp
lock
stos
mov
out
add
insb
push
mov
les
data16
pop
lock
push
and
inc
outsb
and
pop
jns
xchg
jle
push
dec
and
add
add
mov
dec
cmp
add
daa
jmp
pop
shll
pusha
add
sub
or
xor
inc
jmp
ss
sub
mov
inc
or
imulb
test
fcompl
sahf
das
bound
inc
stos
and
mov
dec
outsl
loop
addb
add
sti
daa
cwtl
les
sub
xor
add
movsbl
mov
sub
mov
xor
add
out
mov
push
inc
push
sbb
add
cmp
push
pop
dec
jo
or
and
insb
int3
pop
or
cmovs
sbb
sbb
pop
jo
sbb
cmp
xor
rcll
xor
pop
and
sbbl
dec
test
mov
or
test
lea
xor
test
xor
push
inc
test
push
cs
cli
dec
jmp
test
xchg
mov
mov
loopne
loopne
loopne
stos
sbb
inc
add
inc
add
out
jb
or
xchg
push
dec
add
push
add
fiaddl
orb
add
xor
repz
outsb
push
push
adc
loope
jo
enter
ss
add
dec
or
adc
enter
sub
add
pop
out
sbb
enter
pop
and
push
push
mov
jnp
out
je
jne
add
jbe
iret
repz
ja
js
jl
iret
repz
addr16
jns
cmp
rcll
inc
jo
push
outsl
sub
enter
add
add
add
and
jg
add
iret
push
mov
aas
or
mov
sbbb
cwtl
push
sub
mov
or
inc
enter
fs
repz
iret
outsb
adc
jle
add
sarb
dec
inc
add
mov
fiaddl
jo
mov
mov
adc
imul
pop
sbb
lahf
out
sahf
sbb
sbb
sbb
dec
adc
or
nop
cmp
int3
loope
lahf
dec
add
bnd
out
pop
sahf
shrb
and
push
xor
inc
add
or
mov
pop
and
arpl
xor
add
sbbl
add
jb
pop
and
shlb
pop
enter
add
adc
nop
or
and
inc
in
mov
cs
or
pop
add
mov
in
das
mov
mov
shrb
loopne
and
nop
lock
adc
add
sbbl
add
jb
pop
and
add
sbbl
lock
das
add
and
enter
jmp
jb
pusha
add
inc
fadds
cmp
jl
in
in
push
sbb
xchg
cmp
xor
daa
in
int
jge
mov
dec
cmp
and
cmp
out
insb
aas
inc
orl
test
xchg
pop
and
and
in
jl
aam
dec
enter
mov
jb
xor
mov
leave
in
jo
mov
loopne
xchg
cltd
jg
lcall
and
popf
sub
sahf
pop
leave
jbe
daa
adc
push
cmp
add
insb
test
pop
rcrb
stos
ds
mov
pop
add
ds
add
sti
pop
in
scas
or
pushf
mov
das
push
mov
aas
movsb
jns
outsl
rcrb
loop
mov
mov
pop
rolb
mov
sub
jns
mov
mov
mov
and
inc
in
rcrb
ret
lods
push
fiaddl
fadd
push
adc
dec
fimull
lds
and
ds
inc
scas
pop
xor
and
enter
xor
pop
les
push
sbb
inc
push
adc
dec
mov
test
cmp
mov
dec
das
pop
adc
inc
jbe
jnp
push
push
sbb
and
inc
fidivrs
mov
push
jp
mov
jb
loop
add
imul
and
popa
data16
and
mov
inc
and
xor
testl
pop
push
dec
push
push
inc
push
pop
push
inc
push
dec
push
push
inc
xchg
movsl
ror
or
fimull
xor
push
push
inc
inc
dec
adcl
dec
xchg
bound
pop
inc
cmp
decb
data16
push
sub
pop
pop
fdivs
mov
and
push
inc
push
inc
lock
add
and
mov
xor
inc
dec
inc
push
inc
inc
inc
and
and
dec
adc
and
insl
popa
mov
pop
jo
sub
xor
mov
dec
leave
imul
das
das
outsl
popa
ret
lahf
xchg
arpl
pop
push
adc
and
pop
and
xor
insl
jo
outsb
pop
mov
or
jae
pop
dec
testl
dec
jns
or
xchg
enter
inc
fnsave
xchg
movsl
add
out
push
nopl
aas
enter
sahf
ja
mov
inc
push
data16
mov
shlb
pop
jl
sahf
out
push
js
pusha
inc
ss
iret
imul
push
clc
lock
aas
mov
cmp
mov
cld
ret
ds
adc
sbb
out
out
sahf
jl
insb
and
cltd
pop
vmwrite
in
popf
pop
add
add
add
negb
popa
fdivrl
mov
or
popa
jnp
xorl
xchg
cltd
popf
out
pop
pop
sub
insb
ds
repz
or
cmp
std
add
repnz
pusha
add
and
push
pusha
jmp
pop
lock
iret
lods
ljmp
es
das
pop
add
pop
jg
push
shl
out
cmp
and
push
rclb
sahf
dec
repz
pop
or
cmp
or
jmp
mov
addr16
pop
pop
cmp
push
out
stc
mov
push
dec
push
rcrb
and
mov
pop
add
push
sarb
dec
adc
lock
push
add
imul
clc
sar
ret
xchg
stos
sub
movl
pop
pop
and
adc
pop
mov
lcall
push
leave
dec
test
out
jnp
push
andb
subl
fnstenv
mov
dec
jp
add
pop
dec
mov
xchg
add
mov
lahf
fwait
add
dec
xchg
js
jb
xchg
daa
or
dec
das
add
sbbb
add
rolb
je
jb
and
dec
int
and
mov
mov
sbb
xor
or
es
js
vmread
xchg
lahf
sub
daa
mov
mov
push
xchg
cmp
es
mov
mov
jns
js
pusha
adc
xchg
cmpsl
inc
sbb
inc
mov
add
ror
enter
mov
orb
add
int
fdivr
jnp
ds
add
mov
mov
ds
mov
pop
mov
lcall
push
ficoml
jnp
lock
mov
orb
pop
or
iret
push
jg
sbb
or
or
jg
mov
pop
xor
rclb
divps
outsl
in
jecxz
pop
js
lea
jle
jnp
mov
fldl
pmaxsw
fsubs
cmpxchg
test
xor
emms
das
jns
fldl
and
faddl
push
adcl
fidivs
adc
push
popl
add
rcrl
daa
mov
xor
sub
add
cmp
andl
jo
jae
out
jmp
aas
push
outsb
adc
fbstp
adc
xchg
push
les
sub
add
testb
out
scas
cmpb
or
add
mov
inc
les
add
aaa
dec
ret
sub
sbb
add
pop
pop
or
xchg
dec
pop
push
pop
sbb
mov
sbb
pop
js
mov
rcll
mov
lods
pop
in
insl
notl
adc
adc
loopne
scas
fildl
inc
sbb
and
pop
push
scas
push
popa
andb
les
dec
pop
scas
popa
adc
dec
aaa
inc
nop
movsb
scas
sbb
push
jnp
ds
inc
add
cmp
pop
xor
sub
or
or
rclb
and
xchg
out
cmovbe
jl
inc
add
mov
div
arpl
dec
push
div
mov
js
jp
inc
lods
rcr
fdivrs
daa
pop
sub
add
sbbb
faddl
inc
fstpt
addb
xchg
or
movlps
mov
add
sti
int
fistpl
mov
add
jo
les
mov
adc
mov
jae
mov
sub
pop
in
inc
jb
push
push
insl
popa
popl
subb
loopne
lret
ss
cwtl
fmuls
sbb
push
pop
aas
ret
mov
insl
sbb
sbb
scas
inc
ja
mov
or
test
xchg
or
mov
je
mov
mov
mov
push
fmull
xchg
mov
test
fcmovne
adc
or
mov
xchg
mov
clc
or
or
iret
or
or
jp
cmp
fucom
jp
dec
or
sbb
lcall
imul
fdivl
js
mov
sbb
or
int
rcr
or
ja
xchg
or
testl
adc
rcr
inc
pop
xor
or
jno
or
shlb
cwtl
data16
mov
inc
inc
orb
ljmp
sbb
sub
inc
setnp
pop
push
and
imul
mov
faddl
mov
jle
xchg
jg
dec
subl
adc
ja
jo
not
xchg
or
or
loopne
or
and
or
push
dec
xor
sub
paddb
sbb
mov
jp
pop
add
add
and
cmpsl
adc
xchg
mov
imul
sbb
add
sub
pop
inc
movsb
dec
dec
inc
xor
in
add
adc
mov
lahf
out
xchg
or
aas
popl
adc
lods
add
pop
mov
add
enter
xchg
lock
sahf
daa
add
loopne
cmpsb
es
or
mulb
sbbl
es
andl
lock
xor
add
addb
adcb
mov
sbb
sbb
pop
sbb
jl
mov
cmp
rcrb
sub
add
mov
outsl
ja
jo
insl
pop
jnp
ja
cmp
mov
outsl
in
insb
or
add
or
ret
mov
jg,pt
popf
enter
hlt
mov
jl
pop
xchg
add
or
sbb
pop
or
inc
loopne
sti
inc
sbb
or
ret
push
imul
in
push
xor
movsb
addb
addb
shlb
aas
gs
xchg
xorl
push
and
mov
and
psrad
or
outsl
or
dec
push
push
push
xchg
xchg
out
out
pusha
dec
mov
jle
jo
push
mull
push
rolb
orb
imul
push
je
nop
aad
add
dec
mov
repz
jnp
add
outsl
mulb
idiv
test
out
push
and
add
pushf
jae
sbb
inc
add
or
scas
dec
xchg
jle
div
pop
data16
out
xorb
push
outsl
in
add
adc
mov
pop
mov
ret
or
ret
fnsave
xor
push
jg
sbb
cmp
xchg
clc
xchg
add
popf
mov
add
add
lret
xchg
dec
ja
adc
pop
jno
fidivs
cmp
testb
jae
fnsave
pop
inc
push
mov
in
into
fdivrp
fiadds
pop
data16
sbb
std
ficomps
sbb
outsb
lds
add
mulb
pop
push
jecxz
fcomps
out
aas
push
jg
push
clc
jmp
frstor
ds
insb
pop
jo
fisttps
sub
mov
sbb
jecxz
movsl
pop
adc
mov
and
pop
clc
mov
pop
das
cmpl
mov
add
fidivs
pusha
add
in
sub
fcmovnu
or
sbb
arpl
insl
xor
sbb
mov
and
mov
pop
das
subl
insl
das
and
cmp
sub
divl
ss
mov
jg
add
das
jbe
mov
popa
addr16
mov
push
das
mov
jbe
insl
sti
es
popa
ljmp
outsl
popa
das
mov
mov
ja
fistpl
insl
iret
mov
outsl
popa
rol
push
movsb
das
jg
das
test
jg
pushaw
nop
out
mov
adc
cltd
lcall
sbb
adc
sub
lods
jg
xchg
or
add
or
xchg
mov
sbb
int
xchg
lcall
push
ret
and
push
add
dec
in
sbb
pop
jg
dec
xchg
xor
mov
das
mov
ficomps
xchg
cltd
out
clc
pushf
and
out
loope
in
xchg
inc
test
push
xchg
adc
xchg
fiaddl
das
sub
pop
or
xor
lds
dec
inc
das
out
jmp
das
mov
mov
adc
xor
leave
jo
adc
push
jns
ja
stos
mov
push
pop
pop
or
std
xor
cltd
daa
or
je
push
pop
lret
and
fdivrl
push
inc
push
push
dec
xchg
sbb
ds
inc
cmp
test
pop
push
push
or
dec
cmp
ja
xchg
and
dec
or
or
fsub
sbb
inc
ds
js
adc
outsl
pop
arpl
pop
iret
inc
sub
pop
mov
add
push
push
andb
dec
xchg
xchg
insl
ret
orb
lock
fs
orb
add
je
cmp
push
bound
sbbb
loop
pop
dec
aaa
das
xchg
dec
mov
mov
dec
mov
xor
adc
xchg
xor
mov
sahf
pop
and
inc
repnz
xchg
adc
insl
mov
std
ss
add
push
jbe
xchg
mov
add
sahf
outsl
pusha
push
inc
dec
or
add
xchg
stos
mov
and
andl
jmp
xchg
pop
sub
or
stos
in
popf
cmc
inc
jecxz
add
mov
dec
push
inc
ds
mov
add
xorb
subl
sub
adcl
aam
in
loopne
xor
add
ss
aaa
loopne
neg
dec
add
outsb
cmc
aaa
add
lock
or
lds
out
xchg
js
push
sub
mov
test
adc
data16
daa
add
push
cmp
sub
xor
cltd
imul
lods
sub
sub
pushf
inc
xchg
jb
pop
push
bound
push
xchg
out
insb
push
scas
push
push
xchg
and
sbb
dec
inc
xor
in
add
pop
gs
dec
pop
push
mov
dec
add
in
dec
xchg
inc
add
dec
pop
pop
mov
push
push
cmpsl
fcoml
ret
xchg
inc
jle
push
mov
push
inc
notl
add
arpl
ficomps
mov
and
pop
add
push
xor
out
jnp
xchg
xchg
or
fucom
jo
mov
outsl
sbb
xchg
add
adc
adc
pop
je
push
pop
add
and
sar
add
sbb
clc
int3
mov
sbb
insl
pop
pop
jle
adc
loopne
pop
outsb
js
mov
dec
movsl
addl
test
fwait
dec
rorl
and
sub
pop
xchg
add
push
xchg
cwtl
stos
lods
in
push
add
sub
ss
sub
aas
xchg
aaa
adc
lods
xlat
iret
xor
jne
nop
dec
xchg
ss
jmp
pop
and
xor
push
mov
pop
fisttpll
pusha
jo
scas
or
and
ja
fistps
addr16
and
add
sub
dec
aas
not
add
roll
inc
into
loopne
add
xlat
push
add
cmp
inc
mov
iret
xor
testb
dec
outsl
and
roll
inc
xchg
jno
cmc
lcall
inc
add
and
fisttps
stos
lods
xor
mov
testb
dec
lret
jae
cmpsl
add
adc
pop
or
pop
jo
jge
add
xor
inc
add
insl
cltd
push
push
testb
pop
jo
aas
jbe
cmp
imul
xchg
pop
dec
or
scas
lods
in
mov
repnz
and
pop
pop
inc
sub
and
imul
repnz
imul
testl
jbe
pop
test
sub
gs
cltd
test
mov
add
insl
dec
test
inc
mov
inc
jle
int3
fidivrs
inc
pop
sbbb
sbb
push
pop
push
icebp
xchg
jbe
pop
loop
popa
ljmp
jmp
cmpsb
das
push
sbb
mov
jle
push
push
aam
das
and
repnz
cs
add
das
pusha
push
cmpsb
rcl
mov
aad
or
add
xchg
jle
push
sbb
push
mov
fstps
mov
add
lods
lret
or
jp
mov
ret
cmpsb
mov
stc
data16
mov
cmp
imul
sbb
cmp
add
mov
dec
adcl
fcmovb
xchg
scas
cmp
ja
lret
pop
mov
mov
andb
add
jb
sarb
sarl
addr16
add
xor
push
int3
push
je
push
and
dec
and
push
push
inc
hlt
test
xchg
sbbb
cmpsb
idiv
dec
jo
inc
leave
inc
and
shll
xor
nop
je
pop
sti
mov
jb
stos
add
ds
mov
sub
jg
lahf
jmp
sahf
push
jg
lock
xchg
sbbb
adc
xchg
cs
add
mov
mov
in
inc
xchg
test
int
or
pop
inc
push
push
and
sbb
call
filds
add
cld
outsl
add
push
jle
xchg
inc
lock
ret
iret
imul
push
popa
mov
sub
push
lods
sub
movsl
dec
dec
add
ja
dec
mov
xchg
mov
and
and
ficomps
push
mov
jl
add
pop
adc
adc
inc
pop
lock
push
mov
ret
repz
and
cmp
aas
adc
arpl
sbb
and
jle
daa
lahf
push
inc
lds
ds
adc
pop
test
fwait
inc
orb
jnp
lds
imul
les
pop
das
or
testl
imul
outsl
dec
push
xchg
push
out
mov
mov
outsl
pop
inc
in
or
mov
cmp
jb
mov
addr16
push
sub
nop
pop
xor
outsl
xchg
push
push
jo
push
bound
das
inc
mov
sbb
stos
sbb
out
mov
sbb
hlt
and
jmp
and
cltd
cmp
mov
das
mov
cli
mulb
push
in
xor
or
jns
cmpsb
testb
mov
dec
mov
fldl
push
xchg
lahf
mov
cmp
xchg
inc
aas
pop
xchg
mov
sub
push
jns
loope
cs
test
add
loop
iret
or
hlt
mov
push
fisttpl
push
lea
jg
inc
pop
mov
or
ret
push
pop
out
adc
xlat
fisubs
das
inc
xchg
push
das
mov
test
inc
cmp
pop
in
mov
mov
insb
addl
xchg
fs
hlt
sbb
iret
insb
sub
add
sub
push
ljmp
cmpsl
cmp
aaa
dec
test
add
in
mov
cmp
pop
icebp
lock
popa
data16
out
cld
sbb
insl
push
loopne
pop
push
sub
push
pop
or
cmp
bound
test
add
pop
adc
push
cli
push
sbb
add
or
arpl
sti
jl
jle
das
sub
dec
dec
add
cmpsb
or
insb
xorl
sbb
outsb
push
aad
xchg
pusha
data16
sub
test
push
mov
push
sahf
xchg
mov
xchg
orl
fxam
ja
cmpsb
out
mov
pop
sahf
xchg
sbb
dec
gs
adcb
pop
rcrb
fidivs
pop
and
xor
out
dec
pop
cmp
push
sub
imul
ficompl
jp
dec
inc
hlt
scas
dec
jp
cmpsl
sub
pop
sbb
popa
into
inc
scas
cs
push
or
mov
aaa
ja
pop
cmc
rorl
call
or
pop
and
into
in
aas
repnz
adc
lret
outsb
jecxz
add
sbb
das
push
push
call
insb
mov
cwtl
push
stos
jb
fs
jbe
adc
clc
jbe
shr
xor
push
pop
outsl
mov
xor
incl
sbbb
or
pop
dec
xor
sbb
shlb
pop
xchg
outsl
dec
insb
dec
push
push
bound
std
nop
mov
data16
sbb
jle
xor
mov
dec
sbbl
jle
lret
popa
lahf
das
fimuls
xor
inc
and
daa
pop
divb
addr16
stos
rcrb
ficomps
inc
jl
mov
sub
dec
hlt
sub
xchg
mov
sar
and
inc
sbb
fildl
fldenv
imul
mov
addr16
xor
dec
hlt
xchg
xchg
imul
push
dec
push
pop
dec
movlhps
ss
sbb
dec
lahf
scas
mov
es
push
shrl
and
nop
jmp
xchg
add
and
add
or
popa
packsswb
adc
gs
addr16
fistl
das
add
mulb
cmp
jae
sbb
pop
das
cmp
pop
outsb
cwtl
jp
cmp
cmovp
sbb
mov
xchg
mov
push
push
out
lea
fiaddl
es
sub
inc
or
jg
and
js
jbe
lcall
fsubp
outsb
xchg
pop
stc
pop
xor
mov
mov
or
insb
inc
iret
jle
jbe
dec
mov
rclb
or
or
sti
fidivrl
adc
sbb
fldt
rcll
jne
push
cmp
scas
inc
mov
imul
movsb
mov
lahf
push
data16
jns
daa
gs
xchg
or
and
icebp
rorb
lds
or
xchg
arpl
lcall
mov
cmp
and
dec
cmpsl
addl
add
dec
adc
mov
xchg
push
pop
addr16
outsl
mov
cld
push
add
das
mov
or
add
xor
jbe
lcall
push
push
shrb
shlb
jle
add
pmaxsw
push
dec
push
jb
push
push
addb
or
lret
inc
lret
cmp
mov
push
ret
lock
jb
adc
sbb
pop
xor
in
ret
pop
lahf
pop
xor
cmp
add
sbb
pop
insb
js
cmp
roll
lret
cmp
dec
push
pop
ja
movsb
std
stos
dec
fisttpll
add
xchg
or
push
jge
out
jbe
out
jp
push
test
inc
mov
or
mov
dec
data16
daa
in
lods
xchg
andb
subl
ds
loope
xchg
pushl
test
ljmp
xchg
insl
push
push
jmp
and
jmp
adc
and
arpl
mov
xchg
inc
mov
jae
es
ret
add
out
push
filds
sbb
mov
sti
jge
sub
and
call
sbb
sbb
push
mov
lods
pop
or
add
xchg
stos
sti
fldl
cs
scas
pop
or
adc
xlat
or
push
add
or
mov
les
add
dec
shlb
dec
cmp
mov
fisubrl
ja
or
push
xor
or
fdivs
or
pop
push
add
pop
adc
xor
in
dec
arpl
incb
pop
inc
jg
jge
dec
arpl
jo
outsl
adc
mov
mov
pop
fimull
sub
mov
jl
test
push
or
inc
mov
or
and
sub
insl
inc
dec
dec
stos
and
dec
or
jle
fstpl
sub
push
orb
ljmp
and
and
or
jbe
jg
sub
imul
rolb
jae
das
roll
addr16
dec
push
jg
sub
add
das
add
push
mov
push
popa
jp
arpl
push
jb,pn
stos
and
js
pop
push
cmp
ds
xchg
adcb
add
mov
add
push
shll
adc
dec
clc
xor
js
mov
call
pop
xor
xchg
xor
xor
xor
xor
xor
dec
xor
xor
call
xor
xor
xor
xor
push
xor
xorb
xor
add
push
xor
xor
incb
arpl
adc
das
push
aaa
les
das
cmp
ds
jmp
filds
push
lods
ds
or
adc
and
inc
leave
mov
hlt
xor
xor
jmp
xor
xor
xor
xor
imul
xor
xor
mov
shll
aaa
jge
aad
fbstp
push
cmp
cmp
cmp
add
cwtl
inc
xor
mov
lcall
jg
mov
xchg
ss
ss
cmp
cmp
cmp
pop
inc
cmp
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
decl
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
aaa
ds
ds
ds
jmp
js
lahf
ds
add
or
ds
sarb
aas
xlat
aas
repz
adc
rorb
shr
lcall
xor
xor
xor
xor
xor
xor
iret
xor
fnstenv
ljmp
xor
xor
mov
xor
test
xor
cmp
xor
xor
xor
xor
xor
xor
imulb
aaa
xor
aas
out
mov
xor
cmp
cmp
jle
movsl
cmp
cmp
cmp
cmp
loopne
pushl
mov
or
sbb
cmp
cmp
cmp
cmp
cmp
or
in
out
mov
cmp
and
push
cmp
cmp
dec
cmp
repnz
sub
xor
inc
ds
imul
cmpl
ds
mov
dec
sarl
loop
add
push
aas
and
xor
inc
aas
jbe
cmpb
aas
cwtl
aas
mov
aas
out
adc
lods
dec
cmp
xor
cmp
push
xor
jg
xor
cltd
cmpsb
mov
xor
xor
xor
ja
leave
inc
xor
xor
xorl
ret
xor
xor
sbb
es
xor
jg
loope
pushf
xor
aam
xor
xchg
xor
fidivs
pushl
movsb
ss
and
aaa
jne
ret
aaa
fdivs
jmp
stc
aaa
pushl
sub
cmp
outsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
clc
jmp
cmp
cmp
imul
cmp
cmp
mov
sbb
and
pop
mov
lret
ds
aas
lea
cmpsl
ja
daa
loopne
or
xor
adc
jmp
xor
xor
xchg
pushl
sbb
pop
xor
or
xor
xor
xor
xor
xor
sar
mov
add
int
and
nop
mov
fdivl
out
xor
cmpb
lcall
mov
xor
xor
aaa
pop
aaa
in
das
sbb
and
mov
push
cld
pushl
cmp
cmp
cmp
cmp
cmp
push
cmp
jg
mov
loope
pop
rcl
mov
mov
cmp
mov
fdivrl
out
clc
fistl
push
adc
cmp
clc
cmp
sbb
add
adcb
sbb
xor
mov
xor
mov
pushl
jne
mov
xor
mov
aad
loopne
jg
xor
jp
cmp
stc
cmp
cmp
cmp
cmp
cmp
decl
cmp
ds
loopne
cli
ds
mov
ljmp
data16
xor
xor
jp
test
hlt
stc
lcall
xor
dec
xor
xorl
mov
enter
jle
pop
xorw
movsl
ss
cmp
cmp
dec
pusha
adc
test
ds
mov
mov
daa
xor
cmp
lods
cmp
test
cmp
aas
aam
mov
add
cmpsb
mov
and
xor
cmc
cmp
xor
xor
push
cmp
cmp
cmp
cld
cmp
cmp
cmp
cmp
mov
lret
dec
lea
xor
xor
std
xor
xor
xor
xor
xor
dec
ss
cmpsl
ss
repz
pushl
inc
aaa
popa
aaa
cmpsl
aaa
out
hlt
aaa
pop
cmp
cmp
cmp
cmp
dec
cmp
dec
aas
jmp
rcll
loop
pop
incl
xor
xor
jp
xor
xchg
ss
aaa
jg
xchg
aaa
arpl
cmp
cmpsb
inc
cmp
cld
jg
out
inc
mov
outsl
cmp
cmp
cmp
cmp
ds
ds
imul
ret
scas
loopne
xor
ljmp
and
xor
xor
cmpsb
xor
xor
in
adc
sbb
stos
stos
sbb
pop
xorb
outsl
cmp
lds
and
inc
aas
fdivrs
jecxz
lock
outsl
orl
xor
mov
sbb
or
push
xor
xor
hlt
jg
pushl
xor
fnstenv
es
xor
aaa
xchg
aaa
scas
aaa
aaa
loope
inc
aas
std
mov
cmp
xchg
nop
cmp
cmp
cmp
ljmp
jmp
cmp
cmp
popa
cmp
cmpb
cmp
insl
inc
pop
cmp
cmp
cmp
cmp
dec
push
cmpb
ds
std
mov
xchg
insb
aas
ja
xchg
ret
aas
loopne
mov
xchg
dec
xor
xor
xor
xor
pushl
xor
mov
les
iret
xor
mov
xor
mov
xor
xor
dec
ss
ss
mov
ss
aaa
lcall
cmp
cmp
cs
pushl
cmp
jp
xchg
cmp
cmp
cmp
cmp
std
cmp
cmp
aad
in
ds
subb
aaa
test
stos
mov
xor
out
xor
xor
add
call
and
pushl
xor
repz
out
icebp
xor
lcall
push
lret
loopne
jmp
add
xor
sbb
das
mov
dec
sub
aaa
push
sar
pop
xchg
shll
or
adc
cmp
mov
rolb
cmp
cld
pushl
jnp
xchg
jl
pop
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
add
dec
mov
xchg
push
push
aas
jl
test
pop
add
mov
xor
mov
mov
cmp
std
mov
cmp
cmp
and
clc
mov
cmp
mov
cmp
cmp
cmp
cmp
add
cmp
pop
loopne
pushl
cmp
cmp
cmp
cmp
cmp
jb
cli
cmp
jmp
cmp
cmp
cmp
cmp
cli
mov
clc
aad
lods
enter
mov
add
jg
lret
nop
xor
mov
xor
xor
xor
jle
ds
cmp
jle
pop
mov
cmp
push
lcall
inc
add
xor
pop
xor
push
pop
cld
mov
cmp
cmpb
cmp
cmp
add
lcall
push
cmp
cmp
cmp
add
cmp
inc
sahf
push
les
cmp
movsb
clc
ljmp
mov
mov
mov
les
enter
pop
jle
ds
fdivrs
fdivrl
in
call
ds
loopne
hlt
ds
ds
mov
aas
les
push
push
dec
mov
into
xor
xchg
cmpsb
decb
adc
xor
xor
aaa
std
pop
cld
mov
cmp
sarb
lcall
mov
xlat
pop
cmc
lcall
mov
cmp
insl
ds
sarl
ds
aas
xchg
mov
add
push
lcall
mov
mov
nop
xor
cmpsb
xor
pop
jge
pop
pop
jns
jae
sarb
fucomi
cmp
repnz
mov
jo
pusha
push
xor
xor
and
add
adc
sub
xor
aad
xor
jp
test
outsl
sub
fbstp
or
push
cmp
cli
or
cmp
cmp
push
ss
sub
jecxz,pt
aas
icebp
mov
aas
lahf
ret
mov
shll
dec
aaa
ja
mov
cli
lcall
aaa
sbb
cmp
lds
loop
lcall
cmp
or
les
out
sub
pop
jge
cmp
cmp
cmp
jbe
xor
decl
cwtl
cmp
loopne
pop
sarl
in
call
push
cmp
jg
jg
add
or
or
adc
and
jo
mov
ds
imul
dec
xor
mov
add
xor
xor
push
es
ret
bound
clc
cs
cli
xor
xor
xor
ret
pop
sbb
xor
push
mov
xor
xor
shlb
js
nop
inc
das
shlb
jle
pop
cmp
cmp
cmp
andl
cld
cmp
test
test
cmp
loop
idivl
sbb
shll
push
jae
pushf
aas
lret
push
mov
add
mov
xor
push
xor
xchg
adc
xor
xor
xor
or
pop
mov
ja
cld
add
shll
stos
sbb
inc
aaa
pop
push
jg
mov
and
cmp
dec
cmp
and
jo
cmp
cmp
cmp
mov
cmp
push
inc
ljmp
out
repnz
dec
aaa
cmp
adc
sbb
fbstp
je
aam
mulb
xor
xor
jmp
jle
xchg
xor
xor
xor
xchg
xor
push
aaa
xchg
mov
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmc
pop
mov
cmp
cmp
mov
mov
mov
loop
ds
ds
cmpsl
ds
mov
aas
iret
loop
add
xor
xor
xor
dec
pop
mov
and
xor
xor
out
or
mov
inc
xor
jns
mov
jg
adc
stos
fucomip
cmp
sub
ror
and
rclb
xor
jbe
ja
jg
xor
dec
lea
mov
fdiv
cmp
insb
cmp
jp
cmp
cmp
cmp
lret
mov
cmp
lcall
jg
sub
cmp
jo
jnp
cmpb
cmp
bound
cmp
ret
xor
jp
clc
mov
idivb
sti
cmp
cmp
cmp
cmp
jg
cld
aad
and
cmp
cmp
lock
dec
cmp
jle
call
pop
cmp
cmp
cmp
cmp
cmp
inc
cmp
scas
push
scas
scas
push
adc
enter
push
aas
stos
aas
mov
scas
add
test
sahf
out
xor
xor
xor
add
lcall
or
mov
xor
jbe
xor
xor
xor
xor
cli
xor
shlb
xlat
fnsave
out
out
ss
ss
add
and
sub
mov
aaa
xor
cmp
inc
push
push
aaa
push
dec
clc
call
imul
jg
test
sub
ret
pushl
xchg
aaa
pushf
aaa
mov
dec
mov
aaa
stos
lock
call
in
jmp
push
add
loopne
cmp
lcall
sbb
cmp
cmp
inc
cmp
push
cmp
pop
cmp
push
jo
jne
rclb
jp
jg
xchg
xchg
mov
out
repnz
mov
cmp
cmp
cmp
dec
ljmp
cmp
cmp
cmp
cmp
lcall
adc
pop
cmp
and
daa
cmp
xor
cmp
inc
cmp
jg
mov
cmp
cmp
jb
js
jge
ljmp
xchg
mov
xchg
cmp
cmp
cmp
jno
cmp
fdivrs
fnstsw
loop
pop
and
ficoms
mov
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
adc
pop
pop
cmp
mov
fnstsw
sub
inc
cmp
repnz
decl
dec
movsl
cmp
cmp
or
push
jb,pt
sahf
cmp
cs
dec
pop
lock
lock
xchg
lret
and
jmp
mov
lahf
xor
sbbl
push
or
jnp
jbe
cmpsl
inc
pusha
xchg
orl
fnstenv
arpl
xchg
dec
xor
lods
ret
push
xchg
mov
adc
rol
sbb
imul
inc
dec
adc
pop
push
mov
or
pop
ret
mov
fstpt
out
pop
mov
scas
inc
adc
daa
pop
aas
dec
aas
bound
outsb
lcall
or
pop
cli
lods
pop
adc
xchg
xor
xor
xchg
std
pushl
dec
rorl
xor
xor
xor
push
xor
mov
inc
xor
xor
xor
push
dec
pop
mov
and
arpl
xor
xor
int3
xor
pop
clc
dec
aaa
xchg
cmpsb
inc
cmp
cmp
fisubl
add
scas
aas
or
cmp
aas
xor
xor
jmp
add
xor
adc
xor
add
jmp
and
xor
push
mov
and
inc
xor
xor
lcall
xor
xor
mov
xor
xor
xor
xor
xor
add
mov
nop
xor
ficomps
mov
mov
mov
call
int3
xor
xor
xor
cs
dec
aaa
xchg
inc
cmp
mov
cmp
xchg
stos
shlb
cmp
rclb
ret
arpl
int
std
xor
push
xor
cmp
mov
inc
xor
aas
add
xorl
cld
jg
ss
and
sub
cmp
mov
mov
push
mov
add
add
or
imul
clc
mov
mov
adc
cmp
cs
xor
cmp
pop
jmp
cltd
aas
stc
das
push
cwtl
ljmp
lahf
xor
xor
xor
push
and
mov
push
sub
inc
add
push
push
sahf
xor
sub
jg
xor
xor
xor
xor
dec
js
inc
pushl
mov
fbstp
ss
cli
loop
out
outsl
sub
test
xchg
cmp
inc
lock
cmp
cmp
cmp
adc
add
repnz
adc
pop
mov
cmp
mov
aas
clc
push
add
fucomp
and
xchg
add
clc
das
bound
jecxz
adc
cmpsb
mov
xor
in
xor
xor
push
outsl
lcall
inc
push
dec
xor
push
xor
shrl
ss
ss
xorl
dec
dec
inc
sub
movsb
cmp
ljmp
mov
add
cmp
push
outsl
cmp
rcrb
fdivrl
dec
call
cmp
cmp
rcr
cld
pop
add
mov
cs
cmp
sbb
and
sub
fisubs
rolb
inc
xchg
dec
cmp
jmp
fwait
xchg
cmp
xchg
aas
mov
cmc
xchg
push
xchg
add
adc
sahf
bound
iret
xor
jo
dec
pushl
data16
rcrb
sub
push
push
decl
addb
aam
push
cmp
mov
dec
jl
mov
es
cmp
add
sbbb
scas
sarb
cmp
cmp
das
hlt
dec
add
cwtl
cmp
ss
jo
or
clc
sub
ss
mov
adc
cmpb
inc
aaa
dec
ss
pop
mov
sarb
in
outsb
pop
dec
mov
jecxz
je
rolb
in
xchg
pop
or
ds
push
test
mov
mov
add
test
lods
out
push
mov
mov
les
enter
pop
mov
outsb
aam
fsubrs
test
call
xor
xor
testb
add
xchg
adc
sbb
xor
lcall
and
sub
sub
dec
xor
xorl
xor
xor
xor
xor
xor
xor
xor
xor
or
loop
mov
sbb
and
sub
mov
movsb
xor
pop
jp
push
ss
sbb
pusha
xchg
pop
cmp
cmp
rolb
arpl
xchg
or
cli
cmp
cmp
cmp
cmp
mov
subl
cmp
cmp
in
and
jg
sbb
push
cmp
mov
push
cmp
nop
inc
xchg
mov
cmpsb
push
nop
add
inc
xchg
mov
leave
mov
add
inc
jge
in
cmp
inc
jg
add
cs
xor
xor
ficoml
xor
xor
xchg
push
incl
jle
xor
cltd
xor
loopne
inc
xor
fs
xchg
aaa
popf
aaa
jb,pn
lea
pushf
cmp
cmp
call
jge
mov
lcall
or
cs
aas
push
mov
andl
outsl
xor
and
push
adc
and
xor
sbb
clc
ja
inc
stos
dec
push
in
cmp
cmp
cmp
out
mov
push
inc
cmp
pop
or
fwait
cmp
mov
cmp
jp
daa
jo
dec
and
mov
add
xor
xor
xor
mov
lds
sti
inc
sbbl
test
inc
cmp
push
cmp
mov
cmp
movb
test
push
mov
cli
push
cmp
cmp
cmp
hlt
cmp
cmc
fisubs
scas
sbb
add
xchg
xchg
mov
int
add
xbegin
aas
movsb
push
rolb
adc
mov
xor
jno,pn
scas
cmpb
xor
mov
out
clc
divl
inc
xor
jecxz
ljmp
cmp
inc
ss
cmp
jg
cmpsb
int3
cmp
cmp
cmp
inc
cmp
data16
mov
cmp
fildll
sub
cmpl
orb
mov
inc
das
mov
jg
popa
cmp
cmpb
data16
dec
fisubrl
push
addr16
jg
adc
lods
xor
dec
jp
adc
loopne
daa
stos
xor
ss
lea
ljmp
test
ds
sahf
movsb
cmp
notb
push
mov
mov
sub
xchg
or
pop
inc
jno
pushf
cmp
push
cmp
mov
push
loopne
loopne
cmp
xchg
cmp
mov
repz
aas
rclb
das
pop
lea
push
push
dec
dec
xor
test
fdivr
push
aas
xor
xor
arpl
lahf
ss
aaa
dec
aaa
out
ret
add
jae
pop
cmp
mov
notb
cmp
stos
push
cmp
xchg
clc
dec
lret
xor
subb
cld
xor
movsb
push
lods
mov
sub
mov
mov
mov
shlb
aam
fdivs
mov
fdiv
lock
es
xor
jp
or
cmp
inc
dec
adc
sbb
sub
mov
mov
test
push
xor
pop
decb
jno
sub
lea
adc
sbb
and
and
sub
adcl
push
xor
xor
jecxz
mov
repnz
jno
adc
cmp
cmp
adc
dec
in
cmp
loop
pop
mov
sbb
aaa
adcb
push
xor
cmpsb
xchg
push
mov
pop
and
loopne
out
sbb
cli
xor
jmp
or
ja
loop
mov
nop
cmp
jl
or
sarl
push
and
lods
cmp
mov
mov
cs
cmp
cmp
cli
sbb
es
push
call
push
ds
mov
test
mov
aas
xchg
pop
mov
aas
cmc
add
and
pop
xor
repnz
xor
into
xor
xor
xor
xor
xor
loope
cs
mov
loope
and
lock
into
mov
cmp
dec
lcall
xchg
js
adc
movsb
outsl
rolb
xchg
push
pop
fcomip
jge
xor
xor
and
push
xor
jbe
xor
xor
xor
cmp
aas
cmp
add
les
mov
cli
sarb
sub
add
sub
cmp
cltd
inc
and
dec
movsl
mov
xchg
lods
mov
aas
mov
mov
add
mov
lock
js
pop
xor
xor
xor
xor
das
ds
mov
loope
sbb
movsl
xor
xor
xor
jbe
outsl
scas
ljmp
shr
cld
ss
aaa
jno
movsl
push
push
out
clc
jb
fwait
cmp
fidivrs
aas
cmp
xchg
inc
mov
push
and
lret
pop
mov
repnz
xchg
outsb
je
dec
push
les
push
adc
or
adc
inc
ljmp
aas
and
pop
xchg
cs
push
es
pushw
and
pop
mov
add
dec
sbb
into
xor
dec
sbb
mov
xlat
xor
xor
outsb
shll
outsb
mov
loop
lcall
mov
push
aas
inc
aas
pop
aas
imul
aas
xchg
xor
mov
aad
or
nop
xor
xor
scas
push
lock
jbe
push
xor
push
jg
xchg
add
mov
fwait
xor
inc
jge
mov
cmp
fiaddl
test
add
out
xchg
add
jbe
xor
xor
ficoml
cmp
cmp
mov
dec
mov
out
inc
repnz
cmp
out
cmp
cmp
xor
cmp
sub
xor
xor
cltd
fisubrl
pop
jae
lcall
loop
aaa
adc
mov
inc
in
pop
dec
insb
sub
inc
or
cmp
je
xchg
xor
xor
xor
jb
or
imul
xorb
ss
aaa
jecxz
xor
cmp
mov
ror
mov
cmp
mov
and
push
repnz
jle
mov
dec
loopne
ja
mov
sub
push
push
add
inc
push
or
incl
sbb
aaa
ss
sbb
and
dec
aaa
mov
ret
ja
in
cmp
cmp
push
sbb
dec
iret
xor
cltd
inc
jecxz
cmc
adc
xor
or
mov
jg
jecxz
and
and
ret
mov
jmp
fbstp
cmp
cmp
stos
cmp
cmp
sti
cmp
mov
ss
add
neg
jns
mov
rorl
xor
es
ss
ss
ss
cli
aaa
and
outsb
rcrb
xor
cmp
cmpsb
cmp
cmp
add
fnstsw
cmc
xor
or
ja
loopne
aaa
or
mov
js
jl
xorb
xor
xor
loopne
aaa
mov
xor
xor
xor
cmp
mov
push
cmp
cmp
push
js
xchg
stc
cmp
cmp
cmp
cmp
stos
xorl
xor
mov
mov
aam
incl
sbb
xor
xor
xor
xor
xor
xor
inc
and
loop
and
sahf
xor
jbe
pushl
aaa
leave
cmp
cmp
add
sub
cmp
xchg
add
xor
jg
cmp
jg
xchg
lret
insl
cli
movsl
cmp
ds
pop
fs
ja
stos
sbb
fdivp
add
adc
stos
xor
xor
xor
xor
jbe
dec
mov
fidivs
adc
ss
push
xor
jnp
push
roll
out
jle
cmp
stos
clc
stos
push
ljmp
pop
out
sarl
rcll
sbbb
out
scas
stos
add
jg
fdivs
adc
adc
pop
test
pop
out
mulb
movsl
aam
mov
es
aas
sysenter
or
jle
cmpsb
lahf
fs
mov
fwait
xor
xor
scas
les
lods
mov
mov
cld
push
ss
lahf
jns
stos
ret
dec
sahf
test
cmp
jp
fisubrl
outsb
insb
divl
add
xchg
enter
imul
pop
outsb
xor
xor
xor
fimull
xorl
cmp
lcall
sbb
sti
xor
ret
dec
inc
pop
sbb
ss
es
lcall
aaa
mov
ds
stos
and
mov
mov
mov
cmp
or
dec
pop
out
lock
shll
cwtl
mov
lcall
roll
pushf
cmpb
jae
mov
push
xor
jg
js
cmpl
ror
stc
repnz
push
add
cmp
xor
xor
sbb
xchg
dec
xor
cmp
adc
mov
rolb
push
inc
test
aad
dec
add
xor
inc
xchg
pop
inc
adc
aaa
mov
inc
xchg
sub
cmpl
clc
fwait
jo
cli
mov
stc
shlb
cmp
add
lock
mov
gs
lock
or
pop
bound
ds
sbb
inc
aaa
or
cmp
and
mov
xchg
xor
cli
loop
add
inc
xor
jnp
xor
xor
dec
movb
test
rol
add
pushl
jbe
xor
xor
divb
aaa
clc
aaa
cld
int
daa
fsubl
into
jo
cld
aas
test
mov
aaa
fnsave
loop
out
icebp
aaa
add
adc
sbb
push
ss
cmp
mov
mov
mov
push
test
cmp
xchg
cmp
jg
jle
cmp
cmp
cmp
cmp
cmp
imul
jne
lds
mov
cmp
divb
pusha
fisttps
push
cmp
cmp
cmp
sub
lcall
adc
push
js
test
loope
mov
into
pop
push
rolb
mov
loopne
clc
ds
outsb
ret
bound
aas
adcl
inc
add
push
adc
xchg
xor
xor
xor
xor
xchg
xor
test
in
adc
add
jns
mov
pop
into
lods
xor
xor
push
push
xor
push
push
mov
movsb
test
xchg
outsb
push
divl
dec
push
mov
lret
cmp
loop
outsb
cmp
cltd
and
cmp
or
jbe
push
out
xor
jg
imul
add
or
inc
cmp
cmp
cmp
cmp
loop
push
sahf
mov
ret
xchg
cmp
sarb
dec
aas
popa
aas
jns
xchg
loop
aas
fprem
jnp
jge
mov
xor
xor
imul
cltd
es
xor
xor
xor
inc
call
mov
movsb
mov
sbb
xchg
nop
lcall
decl
insl
jbe
pop
lcall
nop
cmp
les
push
sbb
and
sbb
in
or
loop
push
xor
cmp
add
outsl
scas
icebp
mov
xchg
ss
aas
ret
aas
xlat
dec
xor
out
mov
mov
das
data16
mov
push
push
or
negb
mov
mov
aas
in
push
jp
inc
jb
pop
push
js
mov
pop
test
les
cli
ljmp
mov
test
ss
ss
ss
add
insb
ret
or
je
js
jl
subb
mov
push
inc
pop
xchg
into
pushf
mov
or
lods
ss
mov
mov
ss
lds
inc
jecxz
faddl
enter
push
cmp
mov
cmpsb
jp
fwait
ds
inc
add
inc
jle
mov
mov
xor
xor
stos
ljmp
pusha
and
cmp
xor
xor
mov
sbbl
int
pop
inc
cmp
std
xor
cmp
mov
repz
sti
or
lds
out
cmp
cmp
cmp
inc
mov
and
scas
shl
out
cmc
mov
mov
orb
mov
push
lcall
xor
dec
xor
shll
jmp
inc
cli
ljmp
and
cmp
gs
insb
ljmp
xor
divb
and
dec
pop
add
popf
aaa
fidivrl
or
cwtl
cmp
xchg
inc
xchg
scas
adc
cmp
pop
or
loopne
cli
lret
cmp
add
outsb
daa
loope
push
call
jp
jge
loopne
sub
loopne
pop
shll
pop
xor
cli
cs
lea
cmpsl
xor
fisubrl
xor
test
inc
sbb
stos
outsl
push
adc
dec
cmp
sbb
cmp
cmp
cmp
mov
pop
xchg
ds
je
and
dec
mov
jl
push
and
xchg
lds
or
sbb
jge
pop
clc
loope
jbe
add
loop
and
lret
ss
cmpb
aaa
outsl
fidivrl
xchg
aaa
repz
xor
sarl
cmp
push
or
pop
cmpsb
adc
arpl
add
mov
data16
pop
out
aaa
push
pop
add
nop
jle
andb
adc
or
add
add
sbb
jb
sbb
adc
push
scas
mov
ljmp
sbb
jl
in
ds
mov
dec
inc
inc
sbb
call
std
dec
test
push
xor
ljmp
scas
ljmp
in
add
fnsave
hlt
or
int
fstpt
mov
inc
add
mov
cmp
imul
add
xor
je
cs
mov
shlb
aam
mov
es
xor
jbe
outsl
push
xchg
pop
cmp
test
stos
testb
call
cmp
cmp
sbb
jle
scas
cs
pop
fwait
mov
pop
or
aam
popf
jp
daa
iret
std
xor
cmpl
or
push
adc
pop
ljmp
cmp
push
add
popa
popf
lcall
lea
sbb
incb
mov
sub
cmp
call
clc
ds
add
adc
sub
cmp
mov
sbb
jl
push
or
add
and
mov
aaa
cmp
aad
jmp
inc
aam
rcrb
sub
loop
mov
ficoms
cmp
pop
and
pop
dec
mov
pop
pushf
add
cs
mov
xor
xor
push
push
loop
stos
sub
in
cmp
cltd
sbb
cmp
lret
dec
subl
in
repnz
or
pop
daa
sbb
xor
xor
inc
add
jle
push
xor
rolb
data16
ljmp
xor
xchg
jmp
mov
aaa
xor
jge
enter
shll
jbe
dec
jp
cmp
adc
clc
fwait
cmp
cmp
jbe
stos
xchg
movsb
or
push
push
lock
cmp
inc
ds
ds
fiaddl
xor
xor
aam
subl
movsl
add
rorb
xor
push
mov
aam
and
xor
movsl
dec
je
test
pop
outsb
push
sub
shrb
jae
jg
mov
lahf
cmp
sbb
cmp
cmp
xchg
outsl
add
sbb
add
cmp
cmp
pop
xchg
xchg
cmpb
sub
sarb
cmp
adc
iret
push
push
cmp
into
mov
aam
cs
pop
mov
mov
push
and
outsl
es
dec
ds
ds
ds
jbe,pt
push
xchg
ss
ds
adc
sar
es
adc
aas
lahf
aas
scas
out
fdivrl
ljmp
push
stc
aas
call
mov
adc
pop
loop
push
push
scas
data16
xor
xor
xor
cld
pop
jmp
jno
jnp
divl
push
xor
xor
adc
xchg
or
andl
outsb
and
push
or
fidivrl
cmp
cmp
mov
fistpll
cli
adc
add
sbb
cmp
fisubrl
mov
add
push
inc
ja
sbb
xor
insb
push
mov
aaa
mov
xor
xor
inc
clc
xor
addb
decl
dec
xor
push
xor
or
dec
xor
xor
pop
sub
push
mov
nop
add
push
jl
push
sub
xor
loopne
dec
out
out
imul
lcall
dec
mov
out
inc
idivl
std
cmp
cmp
vunpcklps
and
mov
xchg
stos
push
or
mov
adc
or
push
dec
test
xchg
outsl
cmp
dec
mov
mov
pop
mov
xor
xchg
pop
clc
ss
les
subl
jo
ja
xor
add
mov
ret
bound
adc
jle
insb
xor
jle
out
stos
jnp
pop
xor
xor
pop
notb
jle
add
xor
mov
xor
xor
stos
add
sbb
dec
xchg
sub
pushf
cmp
inc
test
int
jmp
stos
pop
test
and
jne
movsb
adc
loopne
pop
add
aam
pop
push
and
andl
add
push
js
mov
mov
sbb
inc
jl
mov
fwait
aas
shrl
out
cld
inc
ljmp
jg
push
cs
or
inc
xor
loop
inc
movsb
mov
push
test
xor
mov
lods
das
and
xor
xor
xchg
push
add
dec
push
and
ljmp
push
sbbl
es
push
add
xor
mov
sahf
lcall
sarb
push
repnz
add
inc
sub
pop
addr16
push
and
ret
mov
cmpsb
call
icebp
cmp
test
xchg
cmp
push
fstpt
jmp
lock
lock
cmp
jae
test
sub
mov
add
jmp
cmp
xor
mov
into
cld
adc
xor
push
mov
mov
sub
cld
cmpsb
mov
mov
jl
xchg
inc
enter
xor
outsb
or
loop
push
mov
mov
add
pop
stos
mov
rcrl
and
inc
xor
pop
push
test
add
out
xor
xor
sbbb
roll
xor
out
add
pop
xlat
push
add
lock
outsb
outsb
xorb
ss
into
ret
ss
fidivl
cmp
jge
mov
xorl
xor
dec
out
cmp
das
and
push
cmpsl
loop
cmp
subb
adc
das
and
mov
cmp
icebp
cmp
pop
adc
icebp
pop
pop
xor
daa
dec
push
jnp
inc
cld
shll
jl
popf
xor
fisttps
xor
xor
xor
xor
stos
shlb
shlb
ss
sysexit
jbe
mov
outsb
rcl
mov
inc
outsb
adc
or
mov
cmp
and
cmp
pop
push
ja
mov
call
dec
out
lcall
adcb
shlb
cmp
negb
and
mov
cmp
push
je
popf
inc
push
scas
sbb
sub
add
jle
dec
cli
pop
ror
shrb
cmp
test
fistpll
or
and
ds
push
or
sbb
dec
into
push
clc
push
jnp
push
out
testl
dec
je
jp
add
or
scas
xchg
dec
jb
ja
shrl
pop
push
mov
mov
jp
cmp
add
add
pop
repnz
aam
cs
push
add
fs
es
pop
pop
mov
cmp
cs
lret
add
xor
xor
push
mov
inc
xchg
mov
mov
mov
hlt
mov
or
mov
xor
xor
add
or
dec
xor
inc
adc
pop
fidivs
jle
inc
mov
mov
cli
push
sbb
shlb
jecxz
dec
pop
cmp
cmp
or
sbb
pop
push
data16
jo
and
jle
cmp
stos
scas
sbb
pop
das
push
push
ret
orl
or
ficoms
ds
ror
sub
pop
jbe
pop
jl
or
xor
xor
dec
cmp
adc
aaa
mov
sub
incb
jb
cmp
pop
inc
outsl
paddsw
popa
cmp
xchg
cmp
cmp
cli
es
xor
test
int3
push
and
cmp
mov
push
jle
adc
shrb
sbbb
jp
out
ja
inc
stos
or
scas
xor
pop
jb
stos
test
pop
mov
inc
ds
aaa
mov
cmp
mov
lcall
inc
ds
cmp
jecxz
push
ret
sbb
xor
pusha
adc
push
xchg
push
test
mov
inc
push
inc
push
test
xchg
push
ret
dec
cwtl
jbe
into
nop
dec
pop
and
xchg
cmpsl
xor
pop
loop
lock
xor
xor
sbb
bound
pop
jecxz
sub
xor
outsl
jb
xchg
xchg
add
push
xor
add
or
es
pop
outsb
mov
ret
in
add
sbb
push
mov
pop
pop
lods
subb
pop
mov
ds
xor
adc
mov
jbe
out
inc
xor
subl
mov
jge
mov
popf
xor
pop
outsb
dec
or
repnz
adc
mov
imul
inc
xchg
sub
push
xchg
cmpsl
sbb
mov
cmp
outsb
dec
jp
repz
push
out
sbb
lcall
xchg
outsl
mov
mov
add
cmp
jno
mov
mov
sbb
pop
lcall
rclb
aad
or
test
mov
enter
mov
out
bound
data16
push
aam
dec
out
jb
jp
xorb
fs
dec
push
mov
mov
mov
pop
add
xor
or
sbb
into
incw
mov
add
pop
sub
ds
jnp
movsl
or
jb
inc
add
pop
and
jo
mov
xor
fldl
mov
mov
xchg
dec
mov
ret
sbb
cmp
not
cmp
cmp
adc
mov
call
mov
jle
je
sbb
jbe
mov
cmpb
fdivrp
fidivs
adc
shlb
adc
push
xor
mov
inc
xor
in
loopne
xor
xor
stos
test
inc
xchg
lds
sub
push
daa
cmp
sbb
mov
jg
aaa
sti
pop
repnz
or
cmp
cmp
jbe
cmp
addl
cmp
push
or
add
xor
or
gs
adc
cmp
lds
and
add
mov
xor
inc
add
ds
jno
test
test
inc
push
inc
test
arpl
dec
mov
mov
call
ret
pop
fbld
xor
xorl
push
xor
pop
or
scas
or
aaa
push
cmp
and
adc
lock
push
and
push
aas
pop
aas
subb
loope,pt
mov
pop
sbb
aaa
loope
sahf
das
xor
push
or
mov
repz
adc
jecxz
test
loope
cmp
jmp
xor
scas
xor
ror
inc
xchg
call
pop
fisubs
pop
out
sbb
inc
cmp
mov
rclb
inc
pop
sub
push
imul
adc
rclb
sbb
cmpl
push
adcl
xor
cmpsb
test
popa
mov
mov
sbb
nop
sub
pop
lods
scas
mov
ds
mov
lock
dec
push
push
insb
xor
mov
cmpl
xor
sbb
loop
xor
and
repnz
xor
fidivrs
test
xchg
xor
cs
pop
fistpll
icebp
subb
cmp
xorb
aaa
aas
test
add
pop
jge
inc
add
mov
sbb
push
cmp
mov
aad
add
sbb
fstps
lock
sbb
sarb
and
jb
mov
adc
dec
add
push
sbb
xchg
mov
or
sahf
lcall
call
mov
add
cmp
add
inc
mov
xor
sahf
ljmp
rolb
inc
cld
fldl
xor
pop
dec
rolb
push
or
dec
and
inc
push
shlb
inc
pusha
xchg
mov
inc
test
lret
loop
stos
orb
jb
sahf
mov
push
sub
push
adc
adc
cmp
jbe
aaa
cmp
aas
das
aas
xor
aas
cmp
add
inc
aas
dec
aas
dec
inc
xor
addr16
add
outsl
aas
jae
jnp
movsb
mov
mov
xchg
aas
xchg
mov
movsb
push
xchg
mov
adc
pop
push
ror
pop
stos
sbb
inc
adc
inc
mov
xor
shll
mov
scas
shlb
xchg
xor
mov
jl
mov
jle
loopne
push
mov
push
inc
pop
fidivs
inc
pop
out
inc
inc
sbb
and
cmpsl
mov
pop
jl
adc
sub
shld
std
push
jb
xchg
nop
cmp
jb
push
add
push
jbe
dec
lret
mov
aas
sbb
shl
mov
dec
fsubrs
rorb
clc
jmp
pop
xchg
or
dec
ja
loopne
xor
xor
or
jbe
out
cmp
cli
out
add
sbb
sbb
xchg
jo
adc
xor
in
mov
rorb
outsb
inc
pop
or
and
stos
mov
push
xor
cmp
ds
ljmp
add
rorl
aas
pusha
aas
push
aas
push
push
or
stos
jp
adc
xlat
add
je
jbe
xor
xor
adc
push
ljmp
lret
push
adc
xor
push
pop
lcall
repnz
push
lret
cmp
xchg
xchg
push
mov
cmp
mov
push
stos
cli
mov
fldl
mov
cs
es
shrl
out
ljmp
ret
dec
pop
ret
sub
mov
push
or
cmp
push
mov
inc
jo
push
push
cmp
push
mov
pop
ss
xor
gs
mov
xor
xor
xor
ss
adc
aam
xor
lods
mov
scas
adcb
jo
add
in
pop
add
ret
or
push
cmp
aaa
cs
mov
and
and
movsb
mov
pop
cmp
or
out
cmp
out
add
pop
out
cli
mov
xor
cmp
push
movsl
rclb
xchg
loope,pt
call
lcall
insl
pop
pop
out
mov
inc
mov
xor
push
add
roll
test
or
jle
lcall
mov
push
fsubl
add
adc
pop
push
mov
cmp
out
adc
cmp
mov
cld
call
cmp
jb
cmp
xchg
out
pusha
push
xor
mov
bnd
and
inc
fwait
push
xor
pop
and
rolb
testb
cmpsb
cmp
cmp
xor
sbb
scas
gs
or
inc
aad
sub
push
mov
push
add
sbb
gs
add
sub
dec
and
sbb
cmp
les
insl
xor
jmp
mov
add
notl
rorb
xchg
push
addb
push
sahf
pop
xchg
fwait
xor
cmp
rolb
into
xor
inc
sbb
add
xor
inc
pop
je
test
mov
add
pop
cs
inc
xchg
ds
pop
sahf
jne
xchg
xor
pop
mov
mov
xor
adc
fisubrs
loope
mov
xor
mov
sub
and
cmp
push
test
mov
gs
and
lea
test
mov
pop
push
or
jns
sub
sub
mov
ljmp
ds
mov
mov
sub
test
mov
push
xchg
mov
jb
cmp
fwait
jno
test
push
ret
cmp
jno
movsb
sbb
data16
push
sub
jp
push
jmp
inc
xchg
add
lret
sbb
aas
sub
inc
shl
mov
pop
sub
dec
xor
iret
test
inc
ljmp
stc
jecxz
mov
push
xor
xchg
xchg
xor
mov
sub
pop
rclb
lds
xor
push
jp
lea
mov
inc
mov
xor
sbb
add
mov
xor
mov
dec
adc
mov
jb
inc
lds
and
shll
and
aaa
roll
ljmp
push
adc
push
cmp
dec
gs
inc
jle
imulb
or
out
negb
dec
call
sbb
sysret
call
xchg
andb
mov
or
push
loopne
pop
std
xchg
sbb
mov
repnz
test
movsbl
movsl
sub
pop
cmp
xor
dec
cmp
cmp
cmp
cmp
xor
cmp
xchg
leave
rorl
dec
dec
jno,pt
mov
call
push
sub
dec
loopne
call
nop
pop
xlat
std
lds
sub
xchg
cs
xor
xor
fbld
sbb
test
pop
mov
xor
rol
xor
shll
jge
pop
ret
adc
stc
fmuls
xlat
xchg
and
ss
xchg
sub
in
push
and
mov
imulb
test
out
push
jns
adc
fidivrs
jle
orl
ds
pushf
push
mov
sarb
or
sub
pop
adc
or
xor
push
or
sbb
mov
xor
mov
and
xchg
xor
pop
sbb
imul
lea
jecxz
sbb
pop
add
mov
sbb
or
leave
cmp
dec
inc
push
mov
cmp
sbb
cmp
es
ss
push
iret
movsl
int3
xor
je
jb
shlb
test
call
rcll
ds
add
mov
push
mov
jmp
xor
test
mov
icebp
push
dec
mov
mov
dec
imul
aaa
xor
dec
outsb
xchg
cmp
shll
scas
adc
pop
cmp
test
mov
or
adc
mov
and
push
jae
inc
adc
add
scas
pop
add
mov
sbb
sbb
aam
shrb
or
lods
into
inc
xchg
push
addb
ficoml
mov
mov
xchg
xor
jb
mov
xor
push
lods
add
and
cli
ret
mov
in
out
cs
fimuls
jbe
xchg
sub
cmpsb
icebp
dec
adc
setle
ljmp
sub
out
lods
in
shll
or
mov
aaa
pop
cmpl
mov
in
ljmp
lds
push
lea
cmp
pop
push
rcrb
mov
mov
call
ljmp
sub
sub
xor
dec
pop
into
inc
rorb
inc
pop
loopne
daa
push
ret
jl
rorb
and
mov
orb
loopne
call
icebp
pop
and
add
or
or
adc
and
push
sbb
push
inc
cli
cli
mov
jo
js
sub
test
xchg
sub
jg
outsb
les
outsb
es
sub
push
mov
lock
clc
ficompl
or
clc
add
add
xor
adc
mov
dec
xchg
adc
mov
push
mov
jo
je
add
jl
test
inc
nop
ds
ret
add
int3
adc
xorb
jg
es
mov
adc
and
add
or
dec
mov
fimuls
out
jbe
jg
inc
fbstp
sbb
and
and
sub
xor
cmp
inc
xor
inc
adc
aas
out
pusha
xor
fidivl
xor
push
mov
orb
sbbb
add
stos
cs
aas
sbb
ret
adc
xor
cmp
mov
into
loop
sbb
sbb
fisubl
outsb
dec
inc
adc
mov
ficoms
add
dec
adc
add
subb
inc
inc
and
sub
cmp
loop
loop
insb
mov
mov
jecxz
xchg
test
adc
inc
fidivl
ja
ljmp
or
cmp
stos
push
or
mov
in
push
sbb
xor
inc
add
scas
test
dec
jb
adc
pop
inc
test
inc
pop
push
xchg
sbb
push
push
repnz
cmp
sar
pop
pop
mov
and
aam
or
and
cmp
or
data16
orl
pop
stos
xchg
or
cmp
push
push
je
lods
mov
adc
subl
add
les
inc
xor
mov
jl
test
sbb
lods
xor
push
cld
push
sub
add
jl
jno
push
mov
clc
cli
cmp
popf
inc
adc
inc
lahf
jl
shrb
fisubrl
xchg
je
or
mov
test
rorb
add
cmc
aad
jne
ss
scas
xor
fs
push
xor
pop
xchg
dec
les
cli
xchg
cmp
xchg
mov
push
add
cmp
xor
cmp
xor
sarb
sub
add
mov
inc
lods
or
scas
pop
add
bnd
mov
push
mov
jecxz
jl
fisubl
pusha
je
mov
popa
nop
cs
vmread
adc
cmp
pop
add
sbb
cmp
add
push
pushf
xchg
xchg
or
xor
pop
xchg
sbb
pop
jle
mov
sub
stos
pushf
into
movsb
incb
push
shrb
fadd
cld
xor
xchg
and
and
das
dec
popa
inc
xchg
jecxz
pop
int
mov
push
mov
add
shlb
push
and
push
mov
pop
xor
cmp
dec
jbe
xor
inc
jb
test
mov
xor
xor
inc
fists
js
xorb
mov
adc
mov
enter
inc
mov
loopne
aas
shrb
push
and
aam
pop
call
mov
inc
add
push
cld
xor
mov
jo
xor
jl
rcll
mov
enter
imul
push
test
lock
clc
arpl
or
pusha
ret
fcmovb
xor
je
add
outsl
pushf
inc
or
rorb
jmp
lods
sbb
lcall
and
fcoml
push
pop
lahf
js
addb
or
sbb
xchg
jno
cwtl
daa
mov
addl
les
int3
push
imul
shll
jo
add
and
nop
pop
push
sbb
ret
pop
fsubl
cmp
cmp
sub
pop
stos
push
sub
adc
lret
xor
and
xor
cs
push
inc
cli
push
xchg
ss
int3
ds
repz
iret
xor
jl
xchg
push
or
shrb
loopne
inc
enter
fdivs
pop
loopne
loopne
call
inc
mov
cmp
lock
sub
imul
fwait
sbb
push
or
sub
add
fiadds
mov
mov
mov
stos
loop
dec
xchg
and
dec
mov
push
push
test
mov
pop
cli
addb
inc
aam
jecxz
add
jl
xchg
mov
clc
ljmp
sub
iret
shrb
cmp
push
rorb
daa
add
dec
mov
arpl
inc
jl
lods
imull
pop
scas
mov
ljmp
add
push
cmp
add
aad
add
aad
xor
inc
mov
lret
push
lcall
push
xor
aas
add
int3
sahf
ds
dec
dec
inc
das
inc
push
je
push
or
loop
arpl
mov
xchg
push
or
cmpsb
add
shlb
movsb
xor
in
bound
arpl
les
mov
push
subl
adc
inc
inc
jo
adc
ss
push
mov
shll
rolb
mov
orb
cmp
enter
adc
push
mov
pusha
mov
test
stos
test
shlb
cld
invd
push
adc
pop
mov
negb
and
cmp
pop
rolb
and
in
push
call
clc
cmp
mov
test
or
adc
sbb
and
pop
xor
test
adc
fiaddl
dec
repnz
fidivrs
cs
cmp
or
inc
jl
mov
ss
inc
mov
push
pop
mov
xchg
pop
fdivrs
mov
push
adc
pop
popa
add
arpl
cmp
cmp
add
sbb
jecxz
pop
mov
mov
mov
jo
into
orb
out
nop
ds
out
pop
jecxz
xor
clc
ljmp
or
lods
adc
mov
inc
lods
add
mov
lret
int3
inc
cli
bound
xor
inc
inc
je
xor
and
movsb
inc
xchg
or
movsb
scas
mov
dec
pop
push
push
dec
call
loope
pop
xor
push
pop
fs
test
pop
insb
xor
inc
test
ss
nop
sahf
push
test
rol
inc
call
sub
loope
push
or
hlt
mov
xchg
orb
daa
mov
and
and
pop
adc
xor
cmp
inc
mov
sbb
dec
and
and
das
iret
xor
xor
stos
aam
mov
inc
test
sbb
fdivs
xor
dec
stos
loopne
adc
subb
jmp
stos
and
dec
and
sub
pop
aas
test
cwtl
cmp
in
cmp
add
pop
push
pop
call
dec
popf
inc
mov
je
push
mov
or
addb
push
js
cmpb
mov
nop
xor
sub
push
es
lock
rclb
xlat
sbb
add
sub
sub
movsb
add
imul
js
mov
push
xchg
mov
jae
mov
push
inc
shll
adc
or
and
and
nop/reserved
lret
pop
dec
rorb
jo
fbstp
mov
ss
xchg
mov
push
aad
sbb
dec
dec
sub
addr16
movsl
cmpsl
lcall
addr16
ja
rcll
cmpsb
clc
arpl
cmpsb
xchg
ljmp
bound
jbe
fs
ss
setbe
sub
inc
pop
jg
out
push
inc
fdivr
xor
mov
rolb
xor
pusha
out
cwtl
push
lds
int3
xlat
call
bound
aas
insb
rcrb
lds
shlb
cmpsl
pusha
out
pop
and
ljmp
js
or
dec
enter
ljmp
sbb
inc
push
and
inc
or
xchg
xchg
or
inc
cmp
and
xor
xor
out
subps
ljmp
sub
jecxz
adc
jp
mov
in
add
cmp
pop
mov
xchg
xchg
xchg
mov
add
or
mov
add
adc
dec
mov
jp
sub
in
add
ja
pushw
push
cmp
adc
xor
xor
jle
add
xor
dec
xor
pushf
xchg
out
das
sti
mov
add
test
stos
cmp
pop
pusha
jne
sbb
xchg
push
adc
imul
add
movsb
xor
cmp
fsubl
adc
sbbb
shlb
movsb
divb
inc
int3
outsl
icebp
adc
js
sbb
adc
adc
sbb
test
adc
jb
add
sub
inc
bound
cmpsl
mov
pop
cmp
inc
mov
arpl
lock
cmp
jp
pop
xchg
test
mov
rolb
subb
imul
mov
mov
dec
inc
sbb
push
xchg
cmp
fs
rcll
andb
call
sub
aam
test
lods
push
aam
cld
mov
dec
add
jno
rorl
cli
lods
ljmp
mov
or
sbb
xor
push
fisubl
inc
mov
jle
mov
jl
jl
lock
cli
xor
inc
negb
sbb
jg
xorb
ljmp
int3
ljmp
repnz
sbb
dec
out
loop
lock
icebp
test
mov
pushf
out
lods
rorb
ljmp
es
pop
repnz
rclb
ret
dec
loop
fcmovb
in
push
push
ljmp
cmp
insb
repnz
pop
pop
lret
sarb
jne
mov
scas
stos
lock
test
pop
or
call
cmp
mov
jecxz
lret
xchg
out
push
mov
test
lock
in
cmpsb
add
movl
xchg
cmp
adcb
clc
clc
js
jle
jp
push
jl
mov
pushf
xchg
mov
cli
clc
clc
mov
ds
xchg
cld
lcall
sbb
sub
cmp
test
jl
dec
pop
jle
mov
lcall
in
push
jle
jo
push
cmp
push
cs
and
xor
dec
ss
inc
adc
inc
fs
data16
add
ds
mov
mov
fcmovbe
in
jo
jecxz
hlt
ljmp
or
push
cs
out
lods
inc
push
or
ljmp
mov
mov
lcall
lock
or
xor
shll
cli
dec
mov
mov
xchg
sahf
add
ljmp
movswl
sbb
dec
sbb
inc
sub
mov
jl
mov
test
mov
dec
mov
sub
xor
add
cmp
negl
sbb
inc
insb
cmp
test
aam
in
sbb
sar
add
xor
xor
loope
inc
punpckhbw
setl
mov
in
xchg
push
adc
add
sub
loopne
xchg
test
aaa
mov
cli
loopne
add
shlb
dec
dec
roll
out
add
jl
sbb
xor
into
mov
shll
mov
cli
xor
mov
lock
add
add
cmp
push
lret
lock
xchg
add
mov
jl
push
aam
je
cmp
push
xchg
es
mov
pop
xor
dec
add
xor
scas
pop
lcall
int3
sbb
dec
or
mov
ljmp
dec
sysexit
xchg
aam
or
pop
dec
js
shrb
mov
xor
jp
and
pop
xchg
jl
roll
push
jecxz
xor
inc
pop
sbb
sub
shll
aam
and
shl
push
or
and
cmp
or
jp
push
lock
jne
pop
push
adc
cmp
dec
sbb
inc
cwtl
jno
icebp
jl
lods
xor
pop
mov
add
push
mov
lcall
or
sbb
mov
jo
xchg
add
add
scas
movsb
lret
shr
ljmp
fistpll
mov
pusha
pop
jl
test
insb
pop
pop
out
rcl
clc
dec
aaa
sbb
sbb
mov
mov
fadds
xor
mov
repnz
adc
mov
push
and
or
sbb
add
inc
sub
cmp
dec
push
jl
mov
cld
jmp
mov
sbb
stos
cmp
dec
call
fnstsw
mov
pop
dec
xchg
pop
outsb
ss
ret
xor
pop
xor
inc
jmp
cmp
mov
cmp
add
sbb
fs
rolb
lock
cmp
addps
pop
loopne
out
ret
jmp
lcall
pushf
mov
cmp
push
fsub
adc
fucomp
js
push
repnz
je
movsb
or
mov
lock
jecxz
nop
xor
outsb
xor
mov
ret
pusha
cli
jl
rol
add
cmp
sbb
cs
mov
pushf
pop
shl
add
adc
dec
sahf
xor
data16
cmp
cmpsb
push
cmpsb
push
adc
sti
sbb
out
dec
jecxz
xlat
outsb
jecxz
ror
push
sbb
inc
outsl
je
cmpsb
test
xchg
pop
dec
cmp
inc
add
clc
fsubs
jp
sbb
cwtl
lock
mov
push
clc
lahf
adc
dec
addr16
pop
rclb
pop
mov
mov
inc
clc
push
adc
cmp
dec
and
add
cmpsb
les
jle
sbb
inc
test
add
pop
fadds
pop
xchg
das
outsl
adc
sub
subb
je
xchg
inc
mov
inc
in
hlt
adcl
fstl
arpl
xchg
mov
mov
in
es
or
loope
ja
mov
jg
cmp
sub
adc
fisubrs
jp
adc
stos
stos
cwtl
jp
arpl
lods
popa
inc
and
iret
add
nop
bound
ds
js
js
cmp
rcrb
aas
pop
scas
orb
rorb
pop
sbb
pop
js
or
popf
adc
push
lods
push
out
push
add
sub
or
je
inc
aam
adc
inc
xchg
pop
sbb
mov
push
xchg
push
mov
pop
mov
dec
mov
fsub
jmp
add
add
sub
push
jecxz
xlat
adc
enter
inc
push
dec
jp
pusha
test
scas
pop
inc
enter
adc
and
push
xchg
sub
ret
cmp
fadds
call
fs
pop
clc
push
add
mov
mov
dec
adc
push
or
mov
jae
push
xor
movb
and
subb
loopne
or
mov
mov
dec
mov
lret
call
mov
inc
push
out
nop
inc
xor
mov
dec
cmp
push
mov
jno
and
add
lock
cltd
jno
pusha
scas
push
test
sbb
push
or
and
scas
mov
mov
lahf
fs
popa
adc
ret
ret
mov
fdivrl
pop
insb
xor
xchg
adc
dec
xchg
or
pop
dec
dec
pusha
scas
pushf
push
mov
sbb
or
xor
inc
stos
repnz
add
je
or
adc
out
push
and
pop
mov
inc
jmp
and
or
sbb
or
loope
stos
sahf
daa
loope
cmp
cmp
jb
mov
lods
outsl
lahf
xchg
sub
mov
dec
mov
mov
push
lods
das
cmp
inc
cmp
sbb
ficoml
and
je
mov
pop
xchg
scas
cmp
addr16
shlb
sub
and
or
loope
repnz
les
fcmove
les
inc
sbb
dec
or
jo
andb
les
xor
stos
lahf
and
sbb
xchg
call
jnp
sti
pop
inc
mov
jmp
and
ret
or
loop
mov
repnz
cmpl
into
inc
jl
pop
mov
mov
cmpsl
nop
dec
jo
mov
dec
das
pop
or
and
cwtl
xchg
scas
test
aaa
sub
scas
test
sbb
rcrb
push
pop
cli
xor
push
loopne
lods
or
or
jo
jae
and
add
daa
cs
add
movsb
jb
jo
adc
out
jp
shrb
insb
cmp
iret
xchg
xchg
jp
js
push
xchg
xor
mov
shlb
imul
pop
rolb
cmpsl
pop
jno
mov
mov
mov
mov
inc
rcl
rolb
movsb
mov
ret
mov
pop
adc
lret
cmp
push
pop
daa
jge
scas
fisubs
mov
and
sbbl
shlb
or
cmpsl
lahf
hlt
dec
daa
pause
mov
lods
test
leave
imul
fwait
push
jp
pop
xchg
mov
mov
lods
lods
xchg
mov
lods
lods
outsl
addr16
lods
loopew
loop
imul
pop
mov
jp
out
xchg
cli
gs
mov
test
inc
push
pushf
test
or
or
vaddss
or
mull
cmp
xchg
into
add
add
add
sti
jb
push
pop
push
add
add
mov
loop
adc
loop
jp
add
add
into
pusha
das
inc
loopne
js
pop
pop
loopne
sbb
push
add
push
addl
or
fcmove
inc
cmp
ret
jmp
ds
xchg
mov
cmp
into
xchg
outsb
cmp
mov
inc
rcrb
adc
pushf
test
dec
xorl
or
sbb
add
aas
mov
ret
xchg
lock
inc
lods
xchg
icebp
and
les
test
pushw
xchg
enter
dec
aaa
loop
cmp
imul
mov
or
fdivr
xchg
cmp
cmpps
mov
into
mov
push
cmpsb
lcall
jbe
dec
cmp
push
jns
stos
sub
inc
pop
insb
popa
jns
out
xchg
test
or
or
xchg
or
loope
pop
aad
jo
push
dec
addr16
push
or
shrb
pop
inc
mov
out
pop
push
iret
jp
push
push
push
pop
dec
jl
cmp
cmp
fsubrs
push
iret
mov
and
clc
add
scas
pop
xor
pop
subb
or
pop
mov
imull
inc
jecxz
out
pop
or
dec
clc
and
scas
test
adc
pop
or
or
daa
pop
ss
push
les
push
adc
test
dec
lods
mov
mov
stos
add
fidivs
sbbb
jmp
loopne
pop
add
fwait
jo
xchg
sub
sbb
pushf
mov
push
inc
jp
sub
fidivs
mov
ret
cmp
xor
dec
jle
xor
cmp
sbbb
xchg
push
xor
add
clc
aaa
adc
rcrb
ss
xchg
or
pop
test
adcb
aad
fiaddl
push
jne
cmp
jp
inc
sbb
test
add
stos
mov
and
sbb
pop
inc
js
fildl
inc
aas
test
inc
nop
xor
jb
fwait
push
inc
les
mov
xchg
repnz
xor
inc
inc
rolb
fistps
rolb
clc
add
or
pop
adc
jmp
stos
pavgw
inc
jle
mov
lret
ret
pop
jnp
pop
or
cmp
mov
es
mov
mov
enter
enter
dec
enter
out
inc
dec
call
xchg
pop
bound
dec
inc
mov
mov
bound
pop
bound
cli
out
aas
sub
in
shr
or
fldt
loopne
cmp
add
inc
ret
lock
add
xchg
pop
or
lods
out
shlb
jno
enter
mov
lret
fs
and
dec
jg
dec
cmp
outsl
and
arpl
sub
and
repnz
cli
mov
div
iret
and
mov
and
mov
mov
scas
xchg
mov
les
lea
xchg
fwait
mov
jecxz
mov
mov
sahf
cmpsb
sbb
or
push
arpl
mov
xchg
push
das
adc
add
mov
subl
lret
clc
xor
ror
js
das
jecxz
mov
add
ret
out
adc
jecxz
ret
inc
loop
sbb
adc
out
inc
bound
sahf
xchg
xchg
cmp
add
inc
lea
arpl
xchg
xor
das
push
mov
adc
jecxz
cmp
xchg
jae
shlb
ss
jnp
loopnew
jp
mov
and
pusha
adc
mov
or
lahf
xor
sub
cmpsb
cmp
cs
test
cli
arpl
sub
mov
pop
xor
lds
jno
lret
inc
or
add
shll
push
sbb
inc
cs
or
mov
movsb
and
int3
fsubrl
in
cld
out
movsb
and
or
cs
sbb
cmp
mov
insb
inc
pop
add
jl
xchg
lods
roll
pop
and
push
ja
inc
push
test
shlb
call
ljmp
mov
mov
inc
sbb
push
addr16
pop
iret
jo
xorb
loopne
call
push
test
call
push
jo
test
fcoms
mov
nop
aaa
and
pop
jno
bound
lret
cmp
adc
outsb
or
addl
cli
sub
nop
mov
xor
push
cmp
pop
push
bound
out
lods
push
push
daa
lcall
and
ret
popf
call
ss
or
jbe
jbe
arpl
push
jle
cmp
cmp
add
arpl
push
scas
andb
sbb
lcall
jo
xlat
fistpll
pop
add
inc
add
scas
loop
xor
xor
xor
mov
adc
sbb
stos
subl
stos
movsb
mov
ds
inc
xor
movsb
or
push
pop
xchg
hlt
adc
push
outsb
es
dec
lds
inc
jle
xchg
mov
xor
xor
scas
mov
push
xor
mov
and
mov
jle
lea
mov
fisubrs
dec
shlb
mov
into
push
stos
cli
xor
xchg
add
pop
and
mov
sub
inc
adc
mov
outsl
pop
cmp
add
lret
dec
mov
adc
loopne
add
mov
pcmpgtw
iret
ror
iret
mov
inc
lcall
mov
aad
enter
sub
mov
into
mov
and
leave
push
ret
and
xor
sbb
mov
lock
loopne
inc
int
ret
addr16
pop
lcall
fildl
mov
adc
mov
aad
imul
adc
ret
shll
dec
repz
stos
jmp
push
repz
cmp
imul
push
mov
sahf
insl
repz
mov
and
das
jne
push
lahf
jnp
jle
mov
insb
filds
rolb
mov
xchg
call
ss
int
lahf
push
push
scas
mov
mov
insb
or
push
int
in
out
ljmp
sub
jge
fadds
out
add
mov
in
xchg
es
sub
xor
push
or
xor
mov
sahf
cmp
push
xor
xor
sub
and
inc
jne
jge
cs
mov
jp
jo
data16
push
cmpb
mov
popa
or
ret
or
jecxz
icebp
mov
mov
xchg
cltd
and
sub
rorb
enter
pop
pop
add
fs
cmp
das
arpl
fs
xchg
imul
je
inc
js
cmp
int
notb
ss
negb
cmp
pop
cs
push
push
nop
mov
sub
xor
fcoms
cwtl
xor
ja
and
push
inc
add
pop
in
inc
and
mov
and
pop
gs
push
sti
movsb
mov
sub
or
and
push
push
dec
dec
dec
push
xchg
pop
inc
dec
or
inc
and
movsb
test
or
add
pop
push
sub
inc
sub
gs
fldt
js
mov
sti
in
xor
push
pop
push
inc
and
jnp
or
dec
inc
dec
pop
movsl
or
leave
insl
cmpb
xor
out
push
test
enter
xor
xor
jle
push
inc
dec
push
nop
and
jo
pusha
fistpll
and
sub
mov
aas
xor
pop
mov
xor
ret
call
xlat
adc
aas
dec
xor
inc
pop
inc
dec
dec
add
cmpsb
push
rol
fidivl
insb
cld
dec
dec
gs
nop
int
inc
in
fisubl
je
mov
test
fnstsw
dec
xor
mov
outsb
xchg
aam
in
sbb
push
inc
fs
je
or
ds
mov
ja
out
or
dec
ja
or
insl
xor
cmpsb
leave
push
rol
xchg
loop
mov
sbb
or
shlb
addl
xchg
add
pop
addb
adc
xchg
int3
xor
add
push
add
cmpsl
jo
add
mov
push
jo
push
lds
mov
add
movsb
rcrl
pop
sub
repz
lods
pop
push
roll
add
insb
ss
adc
sbb
xchg
sbb
data16
pop
call
jo
sar
data16
mov
loop
data16
loop
xor
adc
xchg
push
fs
lahf
lret
sub
dec
dec
jne
mov
dec
dec
dec
dec
dec
xchg
push
sub
pop
mov
push
pop
ljmp
movsb
inc
cmpsl
sub
add
cmc
mov
adc
das
dec
sahf
adc
add
or
rorl
add
mov
adc
adc
lea
adc
ror
inc
pop
adc
outsl
add
xor
loopne
mov
aaa
fistl
dec
push
mov
mov
into
xorl
cwtl
and
cmc
xor
add
dec
push
sahf
out
mov
jae
jb
fwait
in
sarl
inc
mov
push
enter
cmpsl
in
into
cmp
xchg
jnp
add
mov
insb
ds
add
push
push
insb
ds
mov
pop
mov
cwtl
or
or
addl
pop
inc
lcall
add
dec
cmpsl
cmc
aam
dec
popf
mov
std
insb
push
lahf
add
into
mov
pop
pop
pop
push
pusha
adcl
adc
data16
outsb
and
sbb
ret
ds
cmp
jb
rcr
arpl
sbb
push
push
fdiv
xor
add
sub
mov
enter
daa
or
sub
cmp
stc
pop
leave
cmc
sarl
lds
xor
sub
or
cmp
push
jns
or
roll
lds
jmp
push
aam
and
test
inc
ss
cltd
std
and
or
enter
sub
sarl
sbb
jg
sub
or
pushl
add
push
sbb
sarb
mov
and
lret
mov
mov
adc
and
les
mov
leave
mov
mov
xor
mov
mov
in
das
and
leave
mov
int3
in
push
pusha
inc
pop
xchg
mov
std
cmp
enter
xlat
mov
sub
jl
fs
mov
sub
cmp
xor
xor
xor
fs
jbe
pop
arpl
pop
fs
outsb
add
outsb
data16
jae
ret
bound
sbb
aaa
test
sub
xor
pop
xor
jbe
jae
fs
mov
imul
insb
daa
xchg
dec
inc
outsl
xor
or
imul
jg
and
dec
cmp
and
jae
jae
outsl
popa
cmp
sub
addr16
xor
sub
bound
xor
mov
sub
xor
subb
pusha
stos
fs
notl
xor
push
daa
mov
mov
ds
and
pop
inc
in
jle
cmp
xor
popa
fdivrl
arpl
jbe
js
push
or
sub
sub
cs
xor
lret
test
sbb
ss
add
pop
pop
or
xor
outsl
push
icebp
pop
jns
xor
xor
jns
rolb
dec
sbb
outsb
cmp
clc
inc
mov
mov
add
jmp
mov
fwait
adc
pop
sub
inc
insl
lret
sbb
je
roll
jo
fst
add
or
sbb
jo
and
dec
ja
ret
into
mov
xorb
loopne
pop
mov
or
ja
pushf
cmp
mov
sbb
add
sbb
add
insb
repnz
cs
xor
enter
or
hlt
mov
mov
clc
or
sub
andb
sub
out
cld
or
adc
sbb
sub
add
bound
popw
jae
std
pop
add
and
mov
lcall
insl
cmpl
fbld
xlat
push
testb
add
loope
int
mov
mov
add
or
add
inc
mov
jg
test
sbb
out
sub
mov
in
xchg
jo
and
pop
xchg
shl
mov
test
mov
xlat
cmp
xor
mov
movb
bound
ret
stos
rolb
fxch
clc
mov
adc
fimuls
cmp
cltd
or
and
sar
mov
mov
in
mov
push
jns
int
iret
xor
xchg
xor
inc
cmp
mov
jp
add
inc
inc
or
loopne
pushf
test
cmp
mov
sbb
aam
shrb
add
sbb
jno
aam
ret
adc
xchg
test
test
adc
mov
xor
bound
add
sbb
sub
rclb
mov
out
add
call
ret
sbb
xchg
call
mov
dec
cmp
sti
add
shr
mov
movsl
xor
xor
jnp
xor
mov
in
mov
mov
mov
mov
sub
fldenv
shrb
adc
inc
mov
xor
out
ljmp
mov
clc
mov
rcl
mov
ficoms
fwait
icebp
out
outsl
push
rol
mov
sub
stos
mov
dec
outsl
mov
idivb
and
mov
shl
iret
sub
ret
jmp
and
mov
inc
data16
mov
movsl
imul
insl
in
int
int
cmp
pop
lock
pop
xor
hlt
nop
mov
mov
lret
ror
aaa
loopne
insb
mov
and
xor
cmpl
into
data16
movsl
pop
jno
ss
xchg
adc
pop
cmp
adc
int
leave
iret
xlat
fistpll
test
xor
sbb
push
jg
mov
dec
leave
mov
fsubl
xor
int3
hlt
aad
sbb
in
sbb
push
sub
mov
sbb
jo
sub
adc
fisttpll
jge
sub
inc
ret
sarb
mov
sarb
mov
int
sub
pusha
in
pop
add
inc
ret
call
loope
mov
pop
in
movsl
mov
and
dec
mov
jecxz
xchg
fsubrs
and
fs
and
add
mov
out
mov
dec
or
es
loop
push
jecxz
int
fistpl
push
stos
or
or
mov
in
sbb
in
and
add
add
lcall
sbb
inc
add
lock
scas
sti
pop
ljmp
and
out
mov
sub
push
adc
push
mov
add
lret
mov
mov
mov
add
push
test
and
adc
add
pop
insl
lods
jnp
dec
xchg
cmpsb
add
cmp
mov
xlat
adc
divl
push
add
sti
push
jne
negl
sub
push
push
push
xchg
add
iret
jnp
push
push
inc
push
add
addr16
and
in
mov
adc
push
cs
add
mov
js
std
push
ja
xor
int
lret
push
inc
mov
push
fdivr
add
cmp
movsl
add
cs
pop
sahf
jecxz
or
fucomi
call
icebp
vmread
pop
and
jbe
out
jns
outsb
xor
icebp
pop
mov
mov
outsb
inc
out
out
dec
fsubrl
pop
ja
adc
push
inc
out
or
cmp
test
ss
out
push
lcall
jbe
out
pop
mov
push
lret
jle
testl
and
out
mov
push
push
adc
call
fbld
notb
push
jnp
jnp
push
into
push
std
push
ja
int3
mov
or
cmpsb
jne
xor
xchg
fists
mov
xchg
out
cmp
lret
fimuls
mov
fnstsw
addr16
and
fimull
into
sbb
int3
loopne
test
decl
iret
mov
push
pop
jbe
add
cmp
faddl
inc
jmp
fldl
insl
loope
mov
add
scas
mov
inc
add
jle
add
iret
pop
cmpsl
jo
adc
cmp
data16
mov
dec
mov
pop
and
in
in
xchg
or
pop
mov
sbb
sbb
insl
pop
pop
movsb
add
movsb
inc
jbe
insb
jbe
xchg
jle
mov
mov
mov
inc
pop
jge
jle
mov
fistps
xor
add
pushf
pushf
dec
jp
sub
sub
aas
jnp
jle
fs
pop
imul
ja
dec
sbb
cmp
mov
jl
dec
ss
sub
pushf
or
sbb
pop
dec
xchg
push
adc
push
lock
xor
add
sub
jle
cmpsl
jne
pushf
and
jmp
inc
pop
scas
jae
pop
mov
mov
sete
pushf
push
sub
pop
adc
outsb
bnd
jae
testb
push
arpl
adc
inc
xor
lods
mov
aas
js
add
pop
mov
pop
popa
dec
jno
subb
sub
jb
push
mov
stos
push
mov
mov
cmp
push
mov
sahf
pusha
dec
imul
xor
addb
int
mov
inc
dec
dec
xchg
cmpsb
pushf
dec
adc
pop
inc
daa
push
or
dec
push
jbe
pusha
js
dec
pop
inc
add
pop
les
stos
jns
or
pop
movsb
xor
subl
pop
pop
addr16
dec
add
jle
xchg
add
cltd
mov
jg
subl
or
sub
lcall
mov
and
outsl
cs
fcomi
cs
mov
clc
pop
adc
sbb
insl
addr16
or
xorl
jns
rcrb
mov
scas
xchg
js
rcrl
push
stc
gs
lea
cmp
jae
test
and
dec
jle
cmp
xor
sbb
sbb
lret
pop
test
sarl
dec
mov
mov
insb
and
test
sbb
mov
cld
les
fistpll
jb
pushf
pop
sub
and
js
ss
cld
jg
and
push
push
pushf
dec
mov
adc
dec
xor
xchg
outsb
popl
ret
inc
inc
mov
sub
ret
jo
push
adc
xchg
inc
es
mov
mov
jbe
pushf
js
add
pop
mov
push
movb
add
cmp
pop
outsb
mov
dec
insl
add
bound
push
fs
jle
movsb
sbb
jge
je
pop
push
or
pop
push
hlt
pop
pushf
out
cld
add
cmp
fdiv
aas
sub
int3
adc
scas
pop
mov
les
insb
add
inc
in
test
mov
stos
negb
inc
push
je
mov
data16
jle
mov
mov
pop
pop
mov
adc
mov
adc
mov
ja
pusha
push
aaa
or
pop
or
or
and
icebp
inc
sbb
adc
les
loope
mov
xor
jo
dec
xchg
push
int
inc
aas
mov
dec
push
mov
in
inc
jmp
adc
es
xor
loop
fcoms
mov
dec
cs
aam
repz
add
subl
xor
mov
rolb
loope
pushf
add
enter
dec
push
add
repnz
ss
adc
adc
rcrb
sbb
fldt
cmp
add
mov
aad
testl
pop
inc
add
shlb
cmp
xor
incb
jge
lods
pop
std
push
in
inc
add
cmp
and
cmp
jnp
outsb
addb
pop
out
sahf
cmp
add
jle
imul
fistl
add
jnp
sub
jge
or
pop
fdivrs
jo
adc
push
cs
mov
mov
nop
ja
or
mov
out
xadd
push
and
pop
xchg
adc
in
jo
add
xchg
mov
xchg
loopne
test
dec
in
lcall
cltd
adcb
cs
data16
dec
jg
cmp
adc
andb
pop
in
dec
das
loopne
outsl
adc
mov
sub
flds
enter
mov
pop
push
cs
addb
xchg
lea
ss
inc
push
scas
icebp
xchg
mov
sub
or
sbb
shr
lock
aad
cmpsl
push
xor
adc
mov
shl
and
mov
add
dec
ficoml
das
add
inc
mov
enter
dec
and
lods
pop
loopne
pushf
mov
dec
nop
scas
aad
push
outsl
add
inc
mov
mov
pop
test
xchg
inc
repnz
mov
push
lock
lock
ror
dec
and
push
ret
add
fisubrl
jo
adc
push
shl
in
ret
aas
adc
pusha
pop
mov
lock
add
ret
cs
inc
fwait
inc
push
nop
jecxz
outsl
jns
push
loope
jecxz
or
aam
inc
popw
push
clc
aad
stc
enter
pusha
dec
add
repnz
nop
pop
mov
enter
push
aam
nop
in
sub
adc
aad
jp
jmp
aas
mov
inc
test
nop
xlat
das
add
mov
or
incl
enter
cmp
or
inc
das
fdivrs
neg
cmp
xlat
inc
fdivrs
sbbl
nop
pop
xor
add
inc
pop
add
mov
inc
popl
das
nop
add
orb
js
push
pushf
inc
push
xor
loopne
loope
mov
loopne
mov
insl
mov
pusha
pop
jmp
das
enter
adc
dec
out
in
add
dec
nop
icebp
outsl
andb
ret
push
push
mulb
xor
shl
nop
adc
loopne
filds
call
adc
scas
cmp
cmp
test
jo
inc
mov
aaa
addb
pop
push
sbbl
xchg
push
sub
nop
testl
cli
enter
mov
filds
cli
orl
je
test
ljmp
int
pop
sar
lahf
cmpl
loop
out
mov
in
add
cmp
inc
jno
jo
jg
sti
jae
outsl
add
jo,pn
lock
mov
and
or
fsubr
and
inc
or
add
mov
adc
and
iret
rorb
fwait
inc
add
add
push
xor
and
inc
scas
or
add
or
add
stos
stos
pop
pop
dec
push
je
loopne
pop
sub
cmpb
cmovb
adc
sbb
and
adc
movsl
loop
scas
sbb
or
test
dec
sbb
adc
sbb
iret
cmp
adc
add
fdivs
inc
sahf
sub
shrb
mov
fwait
call
fcomip
outsl
jb
ljmp
push
nop
out
mov
jno
adc
add
inc
mov
push
das
andb
mov
add
and
cmp
or
fcomps
mov
iret
into
out
andb
iret
das
inc
mov
inc
test
call
jo
sbb
daa
outsl
inc
jo
cmp
lock
lsl
clc
dec
sbb
or
nop
icebp
xor
push
push
shll
push
jae
rclb
jns
je
aas
outsb
jge
or
jo
inc
pop
xchg
adc
push
xor
add
out
stos
cmpsl
and
test
inc
sti
fldln2
sbbb
inc
jle
and
insb
fistpl
testl
inc
mov
xlat
lods
aaa
mov
inc
or
mov
iret
repz
dec
mov
mov
or
mov
push
ss
ficomps
pop
push
pop
push
popl
popa
and
in
decb
push
pop
push
pusha
add
sahf
data16
push
sarb
sbbl
stos
testb
subl
push
xchg
or
rcrb
lods
rolb
mov
inc
jo
nop
and
rolb
inc
mov
xor
push
mov
pop
push
test
cs
push
pushf
dec
jbe
push
xor
mov
iret
nop
shlb
nop
push
xchg
rcl
ror
xchg
sbb
shl
adc
adc
pop
lods
inc
rorl
rclb
inc
cmpsl
in
testb
adc
pusha
xor
xor
inc
fistps
or
xor
inc
es
nop
sub
stc
xor
push
cmp
inc
and
sti
mov
push
adc
das
loopne
push
dec
push
jl
mov
nop
dec
or
pusha
dec
insb
outsl
repz
push
mov
dec
outsb
jb
gs
fcompp
mov
add
aas
xchg
cs
mov
sti
scas
js
push
bound
jb
jno
mov
je
out
daa
dec
dec
push
jb
add
fisubs
xor
dec
divl
push
inc
cmp
loop
push
hlt
cwtl
push
add
loopne
jo
mov
sub
stc
das
cltd
push
inc
push
push
rol
fmuls
inc
inc
cmpsb
and
das
push
loop
jecxz
inc
push
nop
in
out
pop
dec
repz
jo
pop
sbb
xchg
ret
xor
pop
sbb
jecxz
lock
scas
inc
add
scas
dec
lret
or
daa
push
mov
or
cs
out
fs
adc
gs
and
push
inc
dec
xchg
and
inc
in
nop
inc
and
push
iret
inc
pop
scas
imul
pop
pop
xchg
enter
inc
mov
sub
xor
daa
insb
or
cmp
sub
pusha
and
add
mov
daa
outsb
dec
aas
push
adc
push
sub
std
iret
xor
jns
out
das
addb
call
jg
das
loope
or
lock
inc
outsb
add
xor
push
lods
dec
loope
xor
add
pop
adc
jl
ss
loopne,pn
sbb
ss
adc
sub
shlb
and
shrb
aad
inc
cmpsb
push
inc
daa
dec
mov
add
xchg
in
mov
pop
das
pusha
inc
pop
pop
pop
push
mov
pop
lock
mov
and
cmp
xor
cmp
and
mov
pop
sahf
mov
lcall
fwait
push
roll
imulb
jl
xchg
add
std
or
mov
or
add
cmp
lahf
or
imull
jp
inc
push
nop
cmpsb
mov
ss
outsb
movsb
inc
cmpsb
mov
mov
inc
incl
stos
sarb
sbb
inc
push
js
das
nop
xor
inc
outsl
js
mov
lock
and
jns
inc
push
mov
mov
lahf
mov
jb
mov
or
scas
and
ja
mov
cltd
adc
add
nop
in
mov
add
inc
out
daa
inc
xcrypt-cbc
cmpsl
push
repnz
sbb
inc
inc
iret
loopne
add
aad
mov
in
lock
shrb
inc
stos
loopne
adc
xor
fidivl
inc
enter
daa
xor
push
fsts
cmp
cmc
jmp
or
dec
ss
push
inc
fistpll
xchg
ds
and
sbb
inc
mov
popl
aas
jo
mov
mov
mov
cmp
inc
jg
shrl
dec
inc
aam
xlat
inc
call
push
add
inc
or
addb
scas
dec
add
loope
cmpsb
inc
pavgb
mov
fildll
pop
in
pop
jmp
mov
pusha
movb
enter
xchg
inc
popa
test
sbb
shl
jo
notb
inc
push
in
rorl
and
inc
leave
test
inc
cmp
mov
btc
ror
loope
fs
cmp
arpl
addr16
out
das
pop
pop
jae
out
dec
popa
pop
popa
inc
in
in
inc
mov
jb
scas
inc
cs
pusha
dec
push
repnz
in
dec
dec
cs
push
and
push
push
imulb
mov
cmpsl
shr
mov
inc
lock
repnz
repnz
and
dec
dec
jb
pop
jb
dec
dec
sbbb
pop
pop
mov
repnz
jb
push
loopne
push
cmp
jns
jmp
pop
jo
cmp
pusha
pusha
inc
cmp
mov
in
mov
and
mov
add
inc
mov
cs
sub
or
cmp
cld
pop
mov
movsb
and
sbb
cmpsl
sub
cmpsl
cmpl
aas
jo
push
in
ss
das
pop
pop
mov
aas
lahf
sar
mov
fwait
lock
cmpsl
shll
mov
fcoml
inc
cmpsl
push
mov
ret
decl
mov
adc
lahf
xor
loop
inc
iret
xor
loope,pn
dec
adc
je
mov
or
icebp
add
scas
nop
adc
testb
pop
adc
das
jo
clc
push
pop
xor
inc
xchg
add
cmpsl
les
or
movsl
push
jb
jo
xchg
jo
inc
add
or
add
pop
jb
push
push
inc
lahf
and
lock
jo
push
aas
sbb
loopne
sbb
rolb
iret
and
fists
fwait
and
dec
adc
sbb
es
xlat
xor
loopne
nop
iret
js,pt
inc
seto
shlb
xchg
xor
add
stos
sbb
adc
dec
gs
out
nop
and
ljmp
inc
mov
sbb
out
cs
push
cs
inc
jb
call
pop
push
mov
dec
addps
inc
jl
outsl
sbb
push
fbstp
adc
and
cmp
cmp
sub
cmp
outsb
in
cmp
mov
inc
lods
xlat
ret
push
das
inc
data16
push
and
xor
cvtdq2ps
add
addr16
add
push
pop
add
xor
enter
pusha
mov
jnp
enter
pop
repnz
xor
push
xchg
add
mov
in
mov
push
stos
push
out
das
sub
mov
das
std
mov
scas
out
sbb
or
push
fs
add
and
sbb
push
aaa
cs
cmpsb
pop
xor
push
sub
shlb
sbb
int
cmp
and
hlt
jmp
lods
pop
dec
das
pusha
and
push
je
fcoms
orb
xchg
and
push
mov
out
in
sbbl
jns
and
loopne
mov
daa
mov
xchg
mov
xor
xchg
jbe
cmp
adc
push
sub
dec
cs
loopne
jg
nop
mov
leave
or
add
sub
sub
adc
inc
adc
shlb
mov
xchg
mov
negl
push
jle
test
add
dec
jnp
incb
xchg
inc
and
push
mov
inc
out
clc
push
or
into
lock
aam
push
aas
mov
inc
mov
inc
icebp
add
add
imul
shlb
mov
subl
or
pop
pop
enter
jle
dec
insb
aaa
test
sbb
pop
imul
lahf
dec
push
fsubs
scas
nop
loopne
xor
dec
adc
lahf
scas
nop
xchg
out
or
jo
mov
lahf
sti
dec
add
mov
enter
out
pop
ret
adc
nop
mov
lahf
mov
mov
mov
xchg
lods
inc
pop
aaa
aas
rolb
ss
es
in
sub
lock
loopne
inc
push
push
sahf
out
cmp
add
sarb
es
inc
xchg
pop
mov
inc
dec
nop
dec
pop
inc
or
pusha
push
pop
push
lahf
sbb
jle
adc
inc
imul
pop
or
sub
adc
mov
jne
pop
lret
cli
push
xchg
mov
mov
popa
push
or
scas
int
adc
loop
popa
stc
push
mov
xor
lcall
add
pop
das
add
mov
xchg
push
notb
pop
and
pop
in
xor
pusha
pop
or
pop
fwait
mov
pusha
es
jns
sub
andb
inc
add
push
js
push
leave
shrl
adc
or
enter
jle
push
dec
std
inc
pop
cwtl
test
mov
xchg
fwait
add
and
jb
ret
lret
dec
dec
dec
and
sub
and
mov
adc
jb
jnp
jge
repz
jne
iret
jo
repnz
iret
repz
xor
jmp
out
mov
cmp
inc
gs
outsl
lods
loope
and
push
and
push
push
pop
mov
push
scas
mov
and
push
sub
sbb
jg
mov
sub
or
imull
or
or
mov
aas
testl
lock
dec
push
gs
imul
pop
sub
fimuls
inc
mov
xorb
divl
dec
adc
inc
in
mull
pop
mov
adc
cmp
jmp
and
xor
not
dec
aam
inc
and
call
push
push
xchg
fstpl
out
fsubp
push
icebp
idiv
sub
orl
pop
push
pop
subb
inc
pop
xchg
ss
cmpb
cmp
mov
sahf
push
scas
lret
int
out
daa
imul
and
pop
sahf
mov
pop
lret
test
lcall
arpl
outsb
xorb
ficoms
mov
in
inc
and
dec
aad
cmp
adc
sbb
nop
push
int3
out
sbb
call
mov
push
out
pop
fwait
sub
stos
movsb
into
dec
incl
insb
inc
es
into
mov
mov
mov
leave
out
out
xchg
mov
rcll
add
xchg
insb
dec
sahf
or
add
stos
flds
add
xchg
add
sub
push
jb
add
xchg
add
adc
es
in
jg
push
jl
out
xor
not
arpl
sub
pop
int3
push
mov
idiv
mov
icebp
mov
mov
cmpsb
outsl
adc
add
xor
xor
xor
add
pop
add
sub
and
add
sbb
packsswb
dec
dec
mov
fldl
outsb
mov
push
xchg
jo
sbb
clc
or
mov
cs
scas
cwtl
mov
mov
fldcw
cs
mov
mov
mov
pop
adc
push
sub
push
xchg
add
cs
stos
flds
pop
push
mov
sbb
cmp
test
inc
sahf
sub
inc
and
divl
push
and
dec
or
dec
adc
sub
cmp
xlat
add
loopne,pn
mov
adc
sub
push
pop
ds
jbe
imul
dec
push
test
into
jg
das
iret
imul
jmp
xlat
outsl
fdivrs
xor
pop
push
clc
aas
dec
int3
push
adc
and
cltd
sub
or
mov
aas
not
arpl
pusha
js
cmp
xor
nop
push
inc
adc
jbe
imul
inc
sub
adc
adc
jns
outsb
pop
dec
pop
push
jo
cmpl
out
pop
xor
inc
faddl
sbb
outsl
adc
jg
mov
xor
add
xor
negb
add
xor
iret
fwait
mov
sub
popf
mov
cmpl
push
rcrb
jno
push
test
outsb
imul
mov
inc
shrb
iret
cmp
push
mov
movsb
arpl
je
xor
xor
leave
mov
ja
movsw
repnz
aaa
notb
flds
enter
aad
ffreep
push
sbb
fbstp
lea
push
and
popf
cmpsb
mov
push
mov
imul
in
fadds
nop
sub
xchg
sti
mov
cs
jbe
push
jl
push
out
enter
aaa
pusha
and
mov
addb
into
jo
flds
insb
xchg
mov
je
mov
cs
inc
inc
int3
negl
insb
pop
dec
ja
fisubs
push
imul
mov
dec
ja
xchg
cs
add
in
das
xchg
aas
dec
xor
nop
xlat
or
mov
out
mov
rcrb
int
in
xchg
fmuls
fwait
lahf
sub
inc
mov
or
stos
sub
sbb
mov
cmp
leave
add
mov
xchg
adc
scas
push
outsl
fcomp
outsl
loopne
inc
loop
testb
or
fldcw
push
out
insl
ds
fwait
jne
add
sbb
pop
test
call
insb
inc
not
jle
pushf
sub
insb
inc
sahf
imul
cmp
and
sub
dec
ja
push
shrb
sahf
or
shr
iret
and
aad
sbb
or
xlat
popf
fisttpll
out
push
dec
push
xchg
mov
idivb
fisttpl
push
pop
incl
outsl
ja
lds
outsl
subb
mov
pusha
pop
nop
add
jle
in
lds
mov
push
enter
cs
inc
leave
pop
gs
fimull
jl
cmp
xor
add
test
cmp
mov
and
mov
jl
popf
scas
ds
push
pusha
cmpsl
add
out
scas
jo
ret
push
movsl
dec
fbstp
dec
jnp
outsl
loopne
cmp
das
sbb
fstl
out
dec
fisubrs
ja
jbe
inc
mov
cli
jle
insl
inc
aas
fsubrs
adcb
fdivrs
mov
fsub
sub
fst
fstl
fs
outsb
shr
out
fwait
int
js
or
jmp
push
popl
loop
out
ds
fwait
mov
call
jge
ja
outsb
pop
lds
stos
out
call
cmpsb
mov
mov
adc
lret
or
sub
sub
fstl
mov
lahf
mov
push
xor
sub
loopne
scas
lea
daa
pop
leave
add
ud2
outsb
or
scas
out
push
adc
add
inc
sub
out
loopne,pn
push
sub
or
outsl
mov
or
cmpsl
xchg
addb
enter
test
mov
shll
sahf
push
into
push
or
ret
sahf
out
movsb
dec
mov
test
or
out
push
dec
dec
dec
dec
dec
jle
xor
sbb
lcall
xchg
popf
outsb
notb
xor
dec
push
push
xchg
jb
xlat
aaa
aad
mov
mov
jmp
loopne
outsl
addr16
sub
ja
dec
loopne
pop
scas
shl
pop
iret
clc
pop
cmp
push
outsb
inc
push
clc
fsts
hlt
jnp
mov
rorb
sahf
sahf
push
enter
test
inc
fldt
fs
xlat
push
mov
aad
sarl
push
jb
push
bound
out
ds
daa
ja
dec
iret
repz
cmpsb
push
js
cwtl
aad
mov
cmp
push
mov
leave
rcrl
jns
pop
insb
pop
repnz
push
addl
mov
fnstcw
mov
adc
jne
pop
ja
sub
mov
je
inc
scas
push
pop
push
cmp
sti
sahf
pusha
js
in
test
push
jge
push
push
imul
std
xchg
jg
xchg
inc
xor
outsb
dec
push
add
or
jge
adc
das
push
cmp
pop
or
je
sub
iret
or
dec
outsl
insb
ret
popf
or
cmpsl
xor
in
or
sahf
xor
dec
inc
cs
pusha
pop
and
subb
and
mov
mov
xchg
test
mov
icebp
push
testl
lahf
icebp
and
test
mov
pop
andl
pop
push
xchg
dec
mov
mov
scas
dec
pop
rcrb
pop
nop
inc
stos
pusha
cli
incb
lock
test
dec
pop
add
mov
shrl
ja
inc
pop
cwtl
push
or
mov
push
andb
add
roll
fadds
cld
addb
inc
pop
or
or
clc
mov
sub
popf
jecxz
addr16
jge
push
loop
jl
xchg
lcall
mov
mov
inc
and
call
bound
sahf
xlat
push
cmp
adc
add
push
add
out
aaa
or
sahf
out
ss
repz
dec
orps
pop
fiadds
push
mov
into
rcrb
sahf
jnp
repz
mov
push
mov
cmp
dec
add
sbb
or
int
adc
sarl
sbb
mov
xor
mov
jl
out
mov
rolb
dec
pushf
ds
out
iret
rorl
and
pop
jnp
les
push
push
adc
jp
leave
movsl
fwait
int
imul
jo
push
imul
iret
push
jne
dec
mov
sahf
push
ja
sarb
xchg
mov
into
movsl
jg
jnp
add
push
cmp
mov
adc
pop
push
je
nop
cs
aaa
mov
add
movsb
push
mov
outsl
jecxz
or
insb
mov
mov
xchg
lcall
iret
jnp
or
imull
xchg
add
fiadds
and
out
mov
mov
sti
cmp
sarb
cmp
cmpsl
addl
mov
stos
inc
mov
mov
fstpt
shlb
ret
inc
ss
ficoms
sarl
push
cmpsb
push
mov
arpl
into
shrl
sub
sbb
and
and
aaa
das
aaa
sbb
or
das
adc
push
or
imul
fwait
and
push
inc
iret
insl
inc
lret
enter
std
mov
jno
arpl
push
mov
out
cli
jbe
outsl
pop
sub
pop
dec
fistps
ja
call
cmp
push
pop
mov
movsb
cmpsl
push
push
push
or
push
cmpsb
stos
xor
add
sub
shrl
in
mov
lret
xlat
pop
mov
repz
nop
data16
andl
dec
jecxz,pt
pushf
es
pop
dec
inc
jne
jns
fnstsw
jae
cs
mov
mov
adc
cmpsb
mov
es
push
sub
mov
mov
sbb
data16
sbb
pop
and
push
pop
adc
xor
dec
outsb
xor
adc
jo
dec
dec
dec
pop
pop
push
je
jbe
enter
pop
jbe
bound
es
inc
jae
dec
lcall
imul
xor
jno
dec
xchg
dec
dec
outsl
nop
or
dec
call
adc
lea
jnp
mov
rcr
and
rclb
and
xor
scas
or
jne
fiadds
pop
xor
dec
xor
aaa
xor
mov
and
inc
sub
aaa
aaa
mov
ljmp
xor
js
add
and
or
ficompl
or
cmpsl
xor
roll
fcoms
jae
and
sub
and
mov
dec
mov
and
cmp
repz
pop
je
enter
in
push
dec
cmpsl
xor
add
push
adc
mov
pop
mov
jns
pushf
push
shl
or
lods
dec
aaa
mov
mov
pop
inc
ja
pop
ror
outsl
scas
out
orb
push
call
push
mov
sbb
push
sub
xchg
xlat
popf
divl
push
mov
jne
les
pusha
or
sti
or
inc
add
push
test
sub
cmp
inc
movsb
inc
neg
stc
inc
pop
xor
sahf
in
xchg
cld
pop
sti
filds
inc
pop
test
inc
das
or
stos
andb
das
jo
popa
insl
or
jns
stos
das
out
inc
pop
jnp
and
pop
test
and
add
imul
push
push
mov
ret
scas
in
out
push
addl
shrl
push
outsl
xor
cmp
fwait
insl
cmp
sbb
push
jnp
xchg
or
das
outsb
pop
pop
pop
cmpsl
mov
jno
push
pop
mov
mov
pop
pop
mov
call
int
mov
ret
add
and
pop
mov
fiadds
push
pusha
mov
lret
push
iret
push
or
lcall
popa
add
cwtl
inc
sub
imul
lahf
sub
push
mov
std
incl
into
adc
dec
push
and
fldcw
mov
pusha
mov
inc
mulb
loop
and
and
into
in
ja
int
cmp
sbb
cs
sub
mov
insb
push
fisttpl
sbb
cmp
mov
mov
sbb
test
pop
xor
rorb
enter
add
das
jbe
adc
lahf
adc
push
iret
bound
aad
fidivrs
or
in
cmpsb
xor
loope
scas
cmpsb
jle
push
inc
add
push
lahf
pop
in
inc
test
and
mov
cmpsb
stos
fcmovnu
popf
jecxz
mov
rcr
xchg
ds
push
ljmp
ds
sub
aas
xchg
das
and
push
add
add
add
enter
enter
pop
or
or
enter
or
jb
pop
and
mov
enter
add
adc
enter
enter
pop
sbb
sbb
mov
xor
add
mov
cs
or
add
push
add
or
pop
fbstp
cmp
add
xlat
test
das
push
add
add
sbbb
iret
mov
jae
rolb
out
add
add
push
push
xor
clc
pusha
mov
bound
xchg
adc
shrb
cmp
pusha
fistpll
inc
lock
mov
and
add
test
orb
mov
daa
inc
shrb
pusha
idivl
sahf
clc
xchg
popa
cmpb
ds
mov
dec
popa
xchg
or
jo
filds
insb
cwtl
lahf
xchg
out
shlb
in
xchg
lahf
test
push
enter
cmp
pusha
mov
xchg
rcrb
mov
and
jg
iret
fmuls
cltd
inc
shlb
ror
xchg
arpl
adc
lahf
sub
pop
jb
inc
arpl
push
fsubl
js
or
daa
sub
jg
bound
mov
enter
nop
pop
enter
add
and
sub
test
cmpsb
xchg
adc
fs
scas
xchg
subb
test
xchg
push
stos
jecxz
fsubs
lock
or
nop
aam
wrmsr
xor
stos
addb
add
fldt
push
dec
gs
pusha
daa
ja
mov
adc
outsl
adc
jo
leave
cwtl
inc
aam
pop
aam
jecxz
inc
fsubrs
gs
or
xchg
dec
cmpsl
xchg
pop
add
sub
data16
and
jg
mov
outsb
andb
insb
cmpb
xchg
daa
push
push
das
fcom
lahf
call
mov
xchg
xchg
daa
call
pop
cmp
scas
cltd
pusha
ret
mov
scas
nop
sub
shrb
call
cmp
scas
inc
cmpsb
xchg
pop
inc
push
fstl
ljmp
push
pop
and
adc
jo
iret
call
cmpsl
add
adc
mov
rcrl
sub
push
add
popf
js
scas
cs
jne
mov
out
ret
lods
pop
int3
out
cmpsl
fsubs
loopne
leave
sub
add
adc
xchg
daa
lahf
push
mov
xchg
inc
sbb
and
mov
out
sahf
dec
add
inc
outsb
dec
mov
xchg
and
mov
scas
inc
imul
xchg
test
test
lahf
or
sub
fldl
nop
loopne
xchg
xlat
or
jg
or
push
or
add
outsb
xor
ss
pusha
mov
js
and
mov
or
daa
inc
xlat
outsl
fistl
adc
cmp
and
xlat
dec
ds
int3
or
lahf
xchg
lahf
mov
jbe
outsl
mov
xchg
daa
sub
call
adc
aas
add
repnz
mov
add
mov
and
inc
dec
daa
call
or
mov
xchg
mov
push
fmuls
mov
ljmp
in
mov
outsl
xchg
daa
sub
push
outsl
scas
push
fldl
and
popf
mov
or
subb
aas
jo
and
jo
sbb
jns
outsb
daa
test
inc
jo
sub
lahf
enter
or
fxch
test
jne
mov
xor
pushf
dec
dec
adc
clc
jo
jno
mov
daa
push
fcos
mov
or
mov
jo
frstor
nop
jno
cmpsl
fsubs
pop
inc
outsl
daa
nop
fcos
jb
fstl
daa
mov
and
pop
leave
add
jo
jb
push
fwait
push
rcrb
add
ret
mov
fcmovu
xor
adc
fidivrl
pop
xchg
cmp
dec
push
out
sbb
out
mov
add
out
push
daa
pop
add
outsb
xchg
push
sub
mov
hlt
xchg
fdivrs
clc
sbb
xor
push
adc
adcl
inc
je
fisubrs
xchg
pop
daa
push
fisttpl
xorb
and
push
adc
shlb
pop
xchg
pop
add
sbb
test
enter
jg
jne
inc
outsb
frstor
xchg
enter
mov
jne
frstor
ror
shlb
and
sub
pushl
mov
xchg
jbe
and
inc
fdivrl
bound
or
pusha
lahf
or
xchg
pusha
aas
cmpb
incb
enter
dec
push
cwtl
jbe
loopne
shl
sub
fdivrl
jns
cmp
ja
add
cmp
daa
fcomp
push
test
nop
and
xchg
outsl
mov
cmpsb
enter
mov
js
push
mov
adc
dec
xor
test
outsb
inc
js
fnstsw
jo
andb
aaa
inc
icebp
sbbb
ss
mov
test
push
out
fcomp
sbbl
enter
shlb
jns
jns
fistl
pop
daa
dec
and
fcomp
iret
and
cwtl
pop
enter
mov
and
enter
push
jo
add
add
sbb
in
jbe
xchg
daa
mov
inc
ds
jne
lock
shlb
cwtl
pop
mov
pop
xor
daa
lock
fildll
inc
ss
or
jp
jnp
mov
daa
push
lahf
pop
insb
mov
pop
jnp
jo
xchg
ljmp
iret
es
iret
add
add
inc
xchg
daa
rcr
bound
sbb
jl
daa
orb
fnsave
daa
sub
das
jl
dec
pusha
loopne
outsb
pop
jl
mov
pop
mov
xchg
daa
ja
rolb
daa
push
or
jl
adc
or
xchg
daa
mov
test
loopne
inc
pusha
outsb
dec
jge
shrl
mov
fsubrs
lock
add
ljmp
pop
out
cmpxchg
loopne
add
sbb
and
nop
loope
jle
jle
fisubrs
xchg
loopne
iret
sub
jle
daa
push
sbb
ja
daa
daa
js
insb
mov
mov
dec
dec
loop
mov
xchg
jg
inc
jne
mov
cmp
fisubrl
pusha
dec
push
pop
aaa
jg
sarl
pop
cld
pop
inc
das
jb
test
orb
pop
mov
pop
into
mov
jg
nop
imul
adc
cmp
pusha
adc
xchg
and
xor
out
jb
mov
and
call
aaa
call
sbb
fs
jo
mov
test
mov
cmpb
nop
fwait
in
sbb
pop
mov
jbe
scas
loope
scas
loopne
rorb
xor
xor
jns
adc
pop
mov
adcb
inc
cs
add
sub
rclb
ss
aas
or
push
mov
mov
cmpsl
in
adc
int
pusha
test
inc
jmp
cmp
mov
lock
sbb
cmpsl
sti
dec
pop
mov
adc
dec
mov
dec
add
leave
popl
dec
mov
fidivrl
test
sub
mov
inc
leave
add
bt
sub
jns
mov
bound
lds
cmp
lret
sbb
or
jae
inc
cmpsb
iret
clc
xor
popf
sub
and
dec
sahf
out
data16
add
out
dec
dec
mov
or
lods
mov
adc
loopne
scas
jns
scas
fcom
pop
add
dec
or
into
or
or
xchg
repnz
jmp
xor
add
add
fucomi
jbe
das
pop
dec
push
jne
push
push
sbb
incl
xchg
sbb
mov
cwtl
nop
push
mov
mov
dec
scas
nop
inc
call
fcoms
xchg
push
mov
js
filds
int3
dec
dec
outsl
jns
fstpl
dec
add
pop
add
or
int3
iret
push
pop
in
pushf
loope
int3
out
data16
outsl
rolb
xchg
ret
mov
outsl
and
lahf
cmovs
pushf
loope
ror
enter
mov
lock
mov
adc
sbb
adc
and
outsl
push
call
inc
dec
push
punpcklwd
imul
scas
je
cmp
dec
pusha
mov
rcll
pinsrw
psubsb
adc
xchg
sbb
sbb
mov
test
mov
inc
or
addps
out
add
xorb
push
das
pushf
js
into
fisttps
pop
jg
stos
jb
scas
fnstsw
out
clc
outsl
rcl
lock
fsubr
jecxz
into
iret
cmp
nop
mov
out
pusha
dec
enter
xor
iret
cmp
inc
iret
movl
dec
mov
cmp
xchg
mov
mov
jns
mov
repz
iret
decl
inc
cs
mov
mov
xor
leave
adc
or
sub
or
lods
je
pop
dec
rolb
in
call
loopne
repnz
or
enter
rcrl
lock
cmp
sub
adc
push
outsl
pop
fcmovne
leave
in
dec
pop
pusha
fbld
xchg
push
scas
pop
sub
mov
lcall
mov
mov
xchg
sub
loopne
call
shrl
sbb
xchg
push
leave
adc
dec
lods
sub
adc
das
rclb
mov
dec
mov
sub
shrb
in
in
jne
loopne
nop
cwtl
pop
inc
or
nop
mov
pop
mov
ja
out
pop
rclb
add
dec
xchg
dec
lock
call
push
rcrl
enter
mov
fnstsw
ss
add
push
out
sahf
mov
push
add
jns
jl
mov
cwtl
or
out
cmpsb
or
out
rorb
jns
in
psubd
or
adc
repz
adc
xor
cmp
repz
adc
cmp
pop
pop
push
js
cmp
repz
sbb
repz
sbb
or
int3
pop
fs
dec
mov
aad
aad
jbe
xchg
pop
and
xchg
cmp
and
loope
call
fs
aad
enter
aad
aad
aad
sbb
jb
aad
aad
aad
aad
xchg
and
aad
aad
aad
cmp
in
sbb
adc
adc
repz
adc
adc
iret
repz
adc
cmp
repz
mov
cwtl
sbb
repz
cmpsb
sbb
repz
sbb
adc
repz
cli
and
scas
add
mov
call
jg
cmovp
inc
cmp
jns
outsl
rcrb
into
add
xchg
sbb
mov
xlat
clc
mov
inc
add
fdivrl
test
adc
sbb
scas
pop
mov
jg
push
dec
mov
fildll
jp
adc
mov
adc
xlat
xlat
fsubrs
or
iret
clc
and
nop
xlat
dec
and
nop
dec
pusha
jo
pop
scas
sbb
cwtl
xchg
mov
repnz
mov
sbb
inc
mov
inc
psubb
jae
rclb
xchg
fcoms
loopne
mov
jmp
decb
jnp
incl
cmp
xchg
push
cltd
pop
mov
cmp
cmpsl
repz
notb
jg
outsb
or
or
xor
sahf
aaa
aad
pop
dec
fcos
pop
push
adc
sahf
out
adc
adc
xor
cltd
popa
xchg
fbstp
dec
add
mov
push
xchg
sbb
in
scas
add
in
enter
push
fcmove
lock
frstor
push
das
cs
fimull
out
add
mov
pop
fcmove
orb
subb
scas
mov
in
fidivl
sub
jae
pop
aam
or
fmulp
xchg
xchg
lock
add
adc
add
sub
out
sahf
out
push
pop
dec
or
jns
mov
add
in
sbbb
mov
sbb
in
daa
push
ror
add
in
in
in
jmp
adc
or
lcall
cltd
fdivr
sahf
cmp
outsl
push
outsl
outsl
pop
fdivr
pusha
fsubl
orb
lcall
xchg
sub
pusha
shrb
xchg
loopne
add
cmp
test
dec
sub
cltd
sbb
icebp
push
fwait
scas
jo
outsb
fnstsw
js
orl
das
cltd
jb
leave
repz
mov
mov
jb
adc
scas
loop
fdivrp
fwait
jg
or
scas
adc
pop
pusha
push
xchg
push
add
out
sub
fisttps
mov
xor
xchg
cmpsl
xlat
subb
iret
mov
rclb
cs
pop
je
push
das
inc
into
adc
inc
mov
lahf
mov
dec
cs
rorl
jmp
out
jg
popf
out
cmp
rcll
adc
dec
adc
sub
decl
push
dec
jo
test
fildll
cwtl
nop
jp
jb
cwtl
mov
push
sub
decl
jecxz
jmp
neg
mov
or
inc
sahf
mov
loopne
push
loopne
mov
jo
test
pop
jb
nop
sarb
pop
jb
clc
shl
and
xchg
mov
cmp
lock
lahf
mov
stos
dec
inc
out
sbbb
loope
pop
push
int
cmp
add
mov
push
xorb
dec
loope
jbe
jbe
mov
or
scas
mov
bound
jg
jg
dec
cs
pop
mov
dec
mov
cmp
loopne
leave
insl
mov
cmp
xchg
mov
mov
mov
mov
xchg
xchg
arpl
scas
in
mov
leave
leave
shr
nop
fwait
adcl
mov
inc
bnd
inc
xor
test
loop
loop
mov
aas
addb
xchg
or
stos
mov
push
leave
test
jecxz
adcb
dec
mov
pavgw
push
pushf
pop
and
outsl
andb
jnp
pushf
jbe
outsl
pop
mov
loope
jecxz
mov
pushf
mov
jbe
and
jecxz
pop
loopne
push
mov
pushl
in
and
and
enter
push
pusha
lock
mov
pop
inc
movsl
pusha
movsl
shl
or
and
in
movsl
in
fcoms
ret
test
sub
inc
scas
loopne
data16
mov
loopne
fwait
ret
iret
xor
and
or
jns
stc
pop
fists
in
in
in
jns
jns
in
in
in
in
jns
jns
in
in
in
in
jns
jns
in
in
in
in
jns
jns
in
in
in
in
jns
jns
in
in
in
out
pop
daa
js
out
sbb
fbld
push
sahf
out
sahf
sbb
sbb
sbb
jns
push
pop
pop
and
jns
out
and
jle
out
sahf
and
jns
out
es
daa
mov
out
sahf
out
sub
sub
sahf
out
sahf
sub
sub
sub
jns
add
das
or
repz
mov
dec
sbb
cmpsl
out
sbb
jb
out
push
out
out
out
and
jge
mov
cltd
out
jb
enter
out
out
out
inc
mov
out
out
out
iret
repz
adc
repz
inc
adc
repz
repz
adc
aam
iret
pop
xchg
test
sbb
inc
iret
mov
call
shr
call
enter
test
pop
and
jmp
mov
pop
xor
popa
cmpsl
outsl
pusha
sub
imul
mov
orb
in
sub
or
xchg
sub
pop
leave
adc
andb
leave
adc
adc
clc
cmpsb
nop
iret
leave
sbbb
arpl
aam
out
ljmp
and
ljmp
cmp
ljmp
jo
sbb
jmp
xchg
xchg
xchg
jmp
jmp
jmp
adc
fucomi
in
pop
outsl
data16
jno
scas
repz
iret
xchg
out
xchg
push
push
popf
repz
iret
add
add
cwtl
jno
mov
sub
clc
jmp
popf
int3
fucomip
in
das
adc
jmp
xor
fistl
scas
pop
pop
add
jb
cmp
jo
mov
and
or
jg
test
or
aaa
pushf
pop
and
enter
jns
outsb
pand
add
fsubr
in
in
cld
das
pop
in
movhlps
jg
push
mov
push
sub
fbstp
pop
cmp
pop
ja
cmovo
dec
jg
test
daa
jg
in
pushl
das
mov
push
enter
and
ror
daa
push
enter
in
inc
cmpsb
nop
inc
lahf
shrb
les
pop
and
adc
out
cmc
mov
dec
out
xlat
scas
pop
sub
pop
pusha
dec
jo
movsl
pop
and
jb
adc
fsubl
push
mov
pop
ret
jo
fsub
loopne
call
adc
mov
decl
out
scas
sub
mov
cmpsb
adc
out
inc
jg
imul
push
jg
out
fadd
jbe
jg
outsl
xlat
outsl
pop
and
scas
nop
dec
fdivs
add
pop
push
sub
scas
jne
jg
outsl
mov
cmp
js
or
sahf
pop
loopne
decl
inc
jb
mov
mov
cs
nop
out
cmpsl
pop
mov
test
push
mov
ljmp
xor
mov
mov
outsl
mov
xchg
test
fistpll
dec
jo
xor
pop
in
dec
mov
dec
mov
stos
in
nop
cwtl
pusha
mov
addb
sahf
xchg
aas
lahf
iret
add
out
mov
push
rcr
mull
pop
push
xchg
lock
adc
dec
shl
fdiv
adc
dec
adcl
inc
mov
daa
mov
loop
fs
pop
mov
mov
aas
fcompl
ljmp
and
lock
adc
xchg
push
adc
sbb
xor
leave
adc
dec
and
scas
pop
jb
pop
shlb
rcr
sbb
lock
dec
mov
adc
cs
pop
daa
daa
push
enter
or
test
mov
cmp
das
xor
push
add
repnz
daa
iret
mov
add
mov
xchg
insb
aaa
mov
movsb
push
adc
push
ror
rcr
repnz
mov
repz
xchg
xchg
das
decl
repz
outsl
sti
fimull
xor
pop
pop
pop
sub
ficoml
ss
shlb
mov
xchg
nop
cwtl
push
test
inc
scas
pop
mov
jg
dec
jo
inc
cs
jae
push
popa
decl
nop
imul
mov
scas
push
dec
and
dec
or
cwtl
or
in
jg
push
mov
out
cmp
mov
popf
xor
pop
ret
lret
btr
ret
sarb
mov
jp
mov
enter
aas
loopne
loopne
leave
and
or
mov
outsl
scas
jne
aad
je
push
add
loop
cmc
scas
sub
jo
xchg
inc
sarb
insb
cmp
faddp
aaa
loopne
dec
and
cmc
mov
cmc
mov
cmc
mov
cmc
mov
testb
testb
idivb
nop
or
iret
mov
sar
idivb
ror
imulb
lock
js
adc
inc
adc
push
mov
das
testl
or
testl
mov
bswap
cwtl
divl
mov
push
sar
add
mov
clc
femms
clc
adc
sbb
fcoms
xchg
pop
cmp
mov
push
pop
cmp
js
lcall
adc
nop
mov
inc
sahf
fstpt
repz
fisttpl
psllw
cmp
stc
lahf
adc
das
stc
stc
fs
fs
stc
lahf
dec
stc
pop
dec
scas
nop
out
pusha
orb
sahf
lods
mov
pop
enter
mov
lock
call
xchg
cli
adc
xor
adc
and
leave
adc
xchg
out
pop
nop
sets
in
ss
mov
mov
sub
fadd
cli
cli
jb
test
cmpsl
jmp
adc
lcall
mov
outsl
jb
test
push
jae
nop
inc
ja
jb
cmpsb
or
ret
leave
pop
jg
ret
add
sti
decl
push
jns
out
dec
push
add
in
in
clc
jg
and
push
sbb
cs
cmp
inc
cwtl
ret
dec
and
cld
call
inc
xor
push
mov
sub
out
jbe
jo
pop
push
xchg
js
mov
cld
jns
pop
stc
das
mov
push
add
add
rolb
fucomp
das
lock
aaa
jnp
dec
clc
outsl
add
js
mov
std
lcall
xor
push
scas
pop
into
adc
mov
test
mov
pmulhuw
in
mov
mov
mov
fdivl
repnz
loopne
psadbw
cmp
add
or
out
in
and
dec
dec
inc
dec
pop
or
dec
sahf
out
or
jo
jnp
ficoms
in
mov
outsl
rcr
pop
pop
pop
and
add
lock
clc
xor
enter
decl
fildll
xor
cmp
lds
sub
lahf
lcall
lods
cwtl
pop
aaa
cmovg
mov
inc
nop
lcall
test
mov
mov
mov
lock
lds
mov
jb,pn
inc
push
dec
ss
xchg
int3
xor
outsl
mov
enter
add
inc
mov
pusha
movsbl
pop
adc
das
cmpsl
outsl
xchg
sub
fiaddl
xchg
sub
call
aam
enter
xor
pop
mov
lcall
mov
scas
push
lock
inc
dec
add
shrb
mov
jnp
leave
xchg
pushf
dec
and
pop
and
pop
and
fdivrs
mov
lock
sbb
repnz
dec
add
addr16
fmul
loopne
push
cmpsl
xor
popf
pushf
mov
add
pop
jp
xchg
out
add
out
mov
mov
in
mov
xchg
pop
loopne
call
lock
or
rorb
lret
pop
jno
add
push
add
pop
das
sbb
pop
add
lret
iret
cmp
push
addb
lret
or
push
leave
sub
call
popl
inc
mov
rorb
aad
in
outsl
clc
loopne
mov
and
add
pop
push
testb
add
jmp
adc
add
jb
pop
test
jo
jb
pop
fsubs
or
enter
inc
cs
or
pop
and
sbb
push
xor
and
insl
lods
outsb
jg
push
mov
aas
ja
out
pop
xchg
test
mov
mov
leave
out
cs
adc
xor
dec
js
fdivs
and
push
scas
xor
cmp
call
push
dec
clc
or
push
in
mov
mov
in
mov
mov
loopne
rolb
cmp
push
pusha
sbb
mov
mov
cs
mov
mov
stos
leave
mov
loopne
add
pop
jne
sub
and
nop
ja
mov
push
scas
mov
push
test
aas
fcoml
lcall
lcall
shrb
inc
mov
rcll
rolb
pcmpgtb
jg
pop
and
mov
fcomp
punpcklwd
sahf
aas
adc
jns
adc
or
aam
roll
test
rcrl
adc
dec
sbb
leave
hlt
decl
mov
pop
adc
lcall
pop
xchg
push
add
mov
cmp
aam
aam
dec
xlat
pushf
pop
pop
mov
icebp
outsb
das
dec
into
push
inc
or
incb
aam
mov
dec
pusha
enter
or
test
pop
jb
pop
inc
mov
test
les
fdivr
dec
xlat
outsb
ja
in
pmuludq
cld
mov
and
or
bound
decl
pop
fwait
mov
scas
jo
or
insb
in
in
mov
add
adc
xlat
xlat
orb
pop
add
push
push
xchg
lcall
add
bswap
cmpb
mov
or
fmuls
mov
bound
dec
and
cs
mov
pushf
xchg
scas
nop
imul
clc
aam
push
enter
call
dec
cld
jo
fwait
adcb
out
cwtl
dec
in
in
into
sub
xor
popl
and
xchg
call
dec
leave
adc
dec
push
in
mov
outsl
jo
jb
adc
adc
ror
jb
lods
call
jns
fcmovnbe
cmp
mov
repnz
or
dec
mov
mov
cmp
fdivl
sub
ud2
mov
in
or
sub
fildll
jp
or
pusha
or
xchg
adc
jl
pop
and
leave
mov
cltd
bound
pop
mov
cmp
and
int3
fcmove
adc
scas
and
sub
enter
loope
enter
add
sbb
push
adc
jmp
dec
cmpsb
fcomp
jmp
rcrb
xor
cmp
inc
outsl
mov
inc
scas
dec
shlb
jb
in
clc
fimuls
fbld
fists
fcoms
outsl
inc
call
popf
sub
nop
js
movsb
nop
xchg
push
rolb
lods
pop
test
mov
rorb
shlb
jb
addb
loopne
dec
out
psubusb
pop
pushf
pop
mov
in
hlt
jg
das
adc
add
pop
jo
and
xchg
pop
and
adc
das
and
mov
sahf
add
or
lcall
lods
shr
pop
pop
adc
lcall
jbe
loope
dec
js
sub
loope
push
cltd
bound
or
sbb
jmp
loope
lods
add
sbb
arpl
iret
xor
das
xlat
popf
or
mov
mov
or
outsl
rolb
pushf
pushf
fsub
mov
pop
test
add
adc
push
scas
shl
loopne
sbb
sub
clc
loop
test
add
cs
dec
and
rcll
jecxz
dec
adc
inc
dec
cwtl
jecxz
jecxz
es
sahf
xchg
jecxz
jecxz
scas
lock
pushf
mov
or
jns
int
in
push
add
mov
enter
scas
mov
enter
addr16
mov
inc
clc
pop
push
dec
pmulhuw
sub
mov
maxps
pop
and
rcl
in
pop
and
rorb
add
cmpsl
pop
ud0
nop
imul
orb
dec
test
cmp
cmovg
out
dec
test
out
out
fdivrs
cwtl
inc
sub
movlps
out
popf
cmpsl
and
loopne
cltd
inc
mov
je
push
pusha
pop
xchg
cltd
mov
enter
call
adc
incl
xchg
popa
imul
icebp
sarl
out
lcall
nop
call
push
pop
pop
int3
movq
jmp
cmovb
jmp
inc
dec
mov
push
lock
loopne
jmp
clc
dec
or
and
ljmp
cmp
lcall
scas
pop
dec
dec
add
popf
sub
mov
jbe
test
xchg
pop
insl
or
jmp
sub
lods
mov
inc
mov
jmp
out
sub
js
push
xchg
xor
push
outsb
push
fucomip
cli
inc
push
negb
pop
shll
and
jmp
jmp
int
insl
loopne
pop
mov
adc
lds
scas
aam
adc
fsubrl
jne
aaa
inc
jecxz
pop
sbb
or
add
out
ucomiss
jbe
jb
fsub
push
cmovs
adc
aad
mov
pushf
adc
cmp
push
sub
mov
addr16
fimull
iret
sub
fistpll
in
sahf
xchg
adc
push
in
add
push
adc
xchg
pop
and
dec
test
rorb
and
in
fs
test
push
lahf
sub
pusha
leave
xchg
pop
test
jb
jb
test
rorb
xchg
push
cmp
insl
and
adc
sub
in
aaa
aad
scas
pop
push
sub
cmp
inc
leave
and
test
out
pop
adc
mov
dec
jo
jmp
lock
mov
inc
dec
lock
loop
dec
mov
pusha
js
or
decl
sbb
pop
aas
mov
test
daa
test
or
push
cmp
sti
push
xor
nop
sti
push
lahf
mov
sub
in
inc
push
dec
in
xchg
dec
dec
fmull
dec
push
popf
mov
test
imul
mov
dec
dec
push
add
out
mov
dec
push
push
inc
sub
shrl
mov
inc
iret
adc
and
leave
addb
add
add
push
push
adc
lcall
add
sahf
hlt
inc
push
jmp
aam
xor
imul
insb
ss
xchg
lea
push
pop
xchg
add
fldenv
fwait
cmp
int
stc
push
mov
lret
jle
cs
sub
and
outsb
lcall
sti
inc
push
loop
mov
fldl
adc
dec
push
sub
cmp
imul
push
mov
xor
pusha
loopne
insl
mov
xor
hlt
and
xor
data16
or
dec
mov
repz
test
imul
cmp
mov
lcall
aam
cmc
push
cmp
sbb
mov
sbb
cmp
cmpsl
sahf
push
add
cld
add
mov
test
pop
mov
or
shlb
push
add
repz
dec
push
and
aad
mov
andb
or
dec
pop
add
inc
out
orl
add
insl
aas
out
mov
push
dec
push
ss
add
adc
push
or
out
mov
pop
xchg
push
push
sbb
repz
cld
pop
in
mov
in
jne
pop
push
les
adc
daa
pop
and
in
jmp
addr16
daa
out
ficoml
idiv
daa
stos
jne
mov
add
dec
pop
aas
cmp
mov
xor
fsubrl
dec
ja
or
push
sub
or
cli
adc
mov
cld
adc
and
insb
shll
inc
dec
jmp
add
xor
jo
xchg
popl
dec
stc
jg
sbb
data16
sub
push
mov
cltd
mov
notl
addr16
inc
ljmp
pop
dec
mov
or
adc
inc
push
mov
dec
invd
addb
ja
and
adc
stc
call
inc
pop
adc
nop
test
orl
mov
pop
pop
inc
sub
mov
push
movl
inc
test
dec
jmp
sub
jmp
pop
push
lea
ljmp
ljmp
outsb
push
push
or
and
sub
pop
or
and
mov
jmp
pop
pop
inc
inc
out
cmpsl
lods
ret
test
pop
pop
in
dec
add
dec
daa
cmc
mov
scas
push
add
mov
jo
pop
out
push
in
push
cmpsl
into
push
dec
push
pop
shrb
dec
aas
mov
mov
stos
pop
adc
mov
add
add
mov
add
adc
aas
out
mov
add
or
mov
aaa
push
or
add
and
out
mov
mov
daa
loop
push
dec
testl
daa
movsl
push
lea
divb
nop
mov
jg
imul
pop
jmp
incl
add
mov
inc
fidivs
mov
add
sub
les
orb
push
mov
add
jg
mov
push
pop
call
push
movl
and
dec
xlat
mov
loopne
out
pop
and
add
sub
xor
inc
and
inc
cmpsb
data16
lahf
or
inc
xchg
push
jmp
inc
adc
daa
inc
or
daa
pop
sbb
dec
and
mov
stos
lahf
push
sbb
mov
sub
mov
add
or
inc
mov
idivl
mov
cmpsl
out
test
adc
mov
add
push
push
add
inc
imull
dec
add
lods
add
nop
adc
mov
push
or
outsb
les
pusha
inc
xchg
mov
mov
sysret
sbb
and
das
push
or
xchg
sti
and
and
lahf
inc
add
test
into
fcomps
notb
pop
pop
mov
add
or
sub
or
pusha
aam
dec
xchg
cwtl
out
stc
inc
adc
pop
xchg
stos
loop
std
dec
incb
stos
sub
xlat
add
push
test
dec
out
sahf
pushf
mov
testl
movsb
push
dec
mov
nop
mov
push
test
push
inc
pop
xchg
add
sub
pop
pop
xchg
pop
and
push
adc
or
adc
repnz
mov
pop
pop
adc
or
cmp
pop
rolb
push
rolb
int3
xlat
aam
push
push
push
cmp
sub
jns
notl
les
jns
out
add
out
sahf
pop
mov
mov
lods
jns
out
or
jns
out
or
out
sahf
sete
nop
adc
mov
test
jns
out
adc
out
sahf
pop
je
jo
insb
jns
out
sbb
fs
jns
out
sbb
out
sahf
pop
push
and
dec
jns
out
and
inc
and
jns
out
and
out
sahf
daa
sub
and
and
out
sub
sbb
jns
out
sub
out
sahf
das
or
add
add
repz
cld
test
cmp
repz
xor
cmp
iret
aaa
call
inc
pop
fs
or
mov
iret
repz
test
cwtl
nop
mov
js
push
iret
repz
dec
inc
cmp
iret
repz
sub
sbb
or
sahf
out
ds
mov
call
out
aam
int3
out
sahf
out
sarb
test
cwtl
nop
mov
out
cmpb
pop
out
sahf
out
inc
xor
sbb
sarl
add
scas
in
loopne
cmp
repz
mov
cmp
repz
pop
dec
cmp
sti
cmp
sub
or
scas
mov
hlt
and
add
pop
xor
inc
push
call
xor
cmpsb
push
push
rolb
in
push
out
fsub
sahf
or
pop
mov
sbbb
mov
sahf
out
pop
std
dec
cld
cmp
out
sahf
sti
sub
sbb
or
repz
lock
cmp
repz
cmc
mov
pushf
iret
repz
repz
jl
insb
iret
jae
cmp
fisttps
out
rcrb
in
shr
jmp
sahf
out
cwtl
ljmp
out
call
fsub
outsl
iret
repz
push
in
push
in
jecxz
repz
cmp
push
loopne
repz
xor
sbb
cld
mov
fucom
fdivrl
out
push
fidivrl
fldenv
out
jns
out
xlat
cmp
adc
mov
cmp
push
lcall
repz
repz
rcrb
test
insb
int
cmp
repz
inc
lret
sbb
jns
cmpsl
stc
in
mov
loopne
int3
out
jns
out
mov
xor
out
push
les
and
out
fdivp
push
dec
sahf
out
sahf
mov
adc
mov
mov
iret
repz
iret
repz
mov
dec
stos
cmp
mov
jle
mov
mov
cmp
repz
mov
inc
inc
pop
ljmp
cmp
xor
push
fs
push
dec
movsb
repz
inc
cmp
sub
and
pop
adc
push
ud1
fxam
or
rorl
scas
adc
push
sbb
call
and
push
cmpsb
rcrb
jnp
fldcw
jmp
push
or
mov
negl
push
sbb
test
add
rcrl
movups
lods
jnp
push
sbbb
jle
loopne
push
pop
xlat
scas
jo
pusha
pop
push
inc
cmp
fcomp
pop
push
jmp
idivl
mov
inc
jg
outsb
cmp
pop
cmp
pusha
xor
sub
nop
dec
jnp
push
adc
pop
cs
add
pop
inc
or
je
in
mov
push
outsb
mov
push
mov
cmp
mov
sub
sub
frstor
xor
push
outsl
adcb
xchg
jnp
loopne
xchg
out
call
mov
jl
ret
outsb
pop
add
or
jo
add
mov
ja
popa
das
xor
xor
sub
dec
pusha
negb
cmp
dec
push
dec
inc
and
sub
mov
inc
adc
push
and
test
dec
inc
arpl
sub
pop
mov
pop
and
je
jnp
dec
push
push
push
das
xor
mov
xor
jne
sub
imul
jo
nop
lock
dec
add
outsl
mov
nop
nop
fisttpll
sahf
cmp
add
mov
mov
sub
mov
fs
sub
or
addr16
inc
dec
clc
out
ss
dec
dec
dec
inc
sub
pop
js,pn
pop
add
dec
pop
and
sbb
outsb
bound
popa
push
pop
stos
lods
mov
int
dec
jo
js
imul
daa
inc
mov
inc
dec
push
dec
inc
fisubl
cli
inc
push
pop
and
pop
gs
or
jb
shlb
test
daa
push
jne
nop
pop
inc
rcrl
in
aad
mov
push
inc
arpl
fimull
inc
sub
popa
sub
fs
out
dec
pop
dec
cmp
sub
xor
push
in
incb
push
dec
push
leave
push
dec
scas
ror
mov
icebp
div
rclb
lret
dec
pop
xchg
fcmovnu
mov
aas
iret
in
shll
sbb
add
add
add
outsl
dec
cmp
or
pop
add
hlt
iret
push
pop
xchg
js
dec
addr16
fnstsw
cwtl
jle
lods
into
push
mull
inc
mov
int3
int
push
insb
mov
fldt
lahf
adc
push
pusha
enter
jae
aaa
rcrb
daa
inc
loopne
jge
mulb
aam
jl
insb
cld
lret
out
movl
lret
ja
xchg
iret
mov
insb
pop
inc
fiadds
pusha
in
nop
out
push
dec
inc
cmp
jns
cmp
in
jmp
adc
xor
mov
in
push
jns
sti
mov
add
movsb
cwtl
push
nop
jns
ja
fs
pop
es
sbb
jns
adc
enter
push
mov
jns
nop
push
test
out
add
push
es
and
rorb
not
fidivl
and
lret
cmp
push
mov
nop
jle
dec
ss
int3
loop
sub
imul
popa
sti
pop
lods
jnp
daa
add
mov
lods
int3
cmc
jae
das
and
pop
push
sbb
das
out
js
movsb
inc
lret
sti
sub
push
es
movsb
int
and
mov
or
sbb
push
subb
xor
insl
cmp
pop
sti
iret
aam
mov
mov
fwait
xor
xchg
ret
out
xor
sbb
fs
xor
hlt
rolb
xor
call
enter
into
stos
aad
mov
dec
mov
dec
imul
mov
mov
mov
bnd
push
testb
les
jg
mov
mov
mov
out
out
andb
outsb
mov
xor
insb
into
pop
and
into
jmp
fbld
iret
gs
cmc
xlat
out
shlb
adc
or
xchg
jecxz
in
push
and
aaa
lods
loope
out
fcoms
mov
push
add
push
mov
nop
fcompl
pop
pop
ret
add
add
pop
jbe
mov
leave
lret
popa
addr16
mov
addl
aas
mov
enter
je
mov
or
daa
sbb
xorl
ss
je
stos
not
ret
pusha
and
aas
daa
shr
inc
test
fsubs
mov
mov
movsl
lret
inc
push
or
cmpsb
shr
rcll
pop
mov
and
popf
push
mov
inc
xchg
cwtl
or
iret
push
push
mov
mov
mov
adc
xchg
mov
pop
rcll
mov
adc
ds
lret
int
pushf
loop
add
cli
shll
push
pushw
pop
lret
shr
adc
cmp
or
push
push
lret
mov
iret
out
mov
into
pushl
or
mov
sbb
xchg
adc
dec
out
outsl
adcb
dec
adc
jg
ss
stos
xchg
lcall
sub
adc
mov
imul
mov
adc
cmpsl
fistps
or
out
fimull
out
inc
mov
xchg
xchg
and
mov
mov
sti
and
xchg
sahf
dec
cmp
out
daa
out
fcmovbe
stos
xlat
stos
and
xor
jmp
or
mov
jle
mov
mov
cmp
fadds
mov
int
mov
fsubl
or
rcll
leave
popa
sub
push
ljmp
test
push
mov
vpsubq
mov
cmpsl
out
stos
xchg
add
pop
inc
pop
push
mov
mov
cmp
push
dec
jb
jo
fbld
mov
loop
mov
adc
push
ljmp
xchg
int
push
aas
notl
xchg
dec
bound
and
shll
xor
pop
adc
repz
mov
insl
push
lret
outsl
pop
out
nop
bound
lahf
jae
push
or
xlat
xor
push
sub
jbe
sbb
mov
lea
fdivrl
stos
xor
xlat
mov
stos
xor
je
mov
mov
cs
lods
lods
fnstcw
pop
push
nop
pushf
and
push
jae
sbb
fwait
sahf
ljmp
mov
mov
mov
arpl
mov
scas
incl
xchg
cmpsl
jl
sbb
push
fsts
xchg
sbb
push
dec
dec
push
or
or
dec
push
push
add
add
div
jge
popa
pushf
rclb
xchg
nop
rclb
icebp
cmpsl
pusha
jle
and
inc
add
out
and
cmp
ret
mov
xchg
or
push
pop
add
and
popa
loop
mov
pop
mov
pop
pop
nop
inc
adc
mov
inc
cmpsl
scas
aas
mov
adc
aas
mov
out
aas
andl
pop
sub
das
mov
mov
sti
pushl
aam
or
das
lahf
pusha
imul
push
jnp
mov
mov
adc
or
das
xchg
xor
xchg
imul
addl
aam
dec
pop
aas
pop
test
nop
xchg
dec
adc
lods
pop
xchg
xor
das
xchg
dec
inc
sbb
das
sub
das
mov
or
inc
fidivl
and
es
aas
nop
mov
adc
mov
adc
es
das
or
dec
xchg
das
adc
push
lcall
xchg
inc
mov
xchg
pop
push
addr16
adc
lods
xchg
push
mov
lcall
movsb
xchg
aas
sub
aas
push
push
movsb
xchg
dec
push
xor
adc
rorb
aaa
dec
xchg
dec
test
inc
fiaddl
xchg
adc
insl
and
xchg
mov
sbb
mov
xchg
lcall
test
iret
inc
aas
dec
or
adc
movsb
push
xchg
aaa
or
xor
rolb
insl
xor
rcrl
movsb
add
sahf
jb
push
xlat
clc
outsl
repz
sub
adc
popa
xlat
dec
or
aad
add
lods
sbbb
aas
addr16
and
aas
cmpsb
xchg
fisubrl
xchg
test
jg
roll
mov
mov
sub
ret
scas
dec
cs
aam
push
aas
dec
outsb
lods
fcomps
dec
inc
xorl
inc
fstps
inc
repz
pop
add
jb
imul
adc
xor
dec
and
add
sbb
ds
sub
cltd
push
in
mov
pop
aas
xchg
aas
dec
arpl
xchg
mov
inc
mov
out
sbbl
inc
pusha
mov
dec
jg
adc
jne
loopne
clc
and
push
bndstx
loopne
sub
out
cmp
aas
mov
mov
lods
pavgw
fldt
out
mov
mov
adc
add
das
push
lods
cwtl
into
push
sub
das
pusha
das
xor
cltd
dec
popf
test
push
dec
lods
adc
jae
aas
movsb
cmpsb
aad
pmulhw
lahf
aas
popf
pop
add
pop
lahf
inc
sub
mov
adc
aas
sbb
pop
loopne
push
xchg
xor
aas
push
push
cwtl
aam
filds
dec
mov
pop
push
pusha
stos
dec
mov
inc
insl
or
cmp
aas
dec
int3
push
adc
sahf
out
lods
adc
jbe
popf
insl
popl
movups
shlb
dec
xorb
adc
inc
ret
decl
dec
mov
rclb
or
popa
adc
inc
and
loopne
iret
dec
sub
sub
sub
jne
inc
test
sub
inc
add
pop
add
fs
inc
aam
pop
subl
push
push
push
inc
inc
sbb
mov
or
aas
add
push
bound
movsb
inc
pusha
test
leave
nop
cmova
lret
mov
fisubrl
call
xchg
adc
fisttpll
add
fsubs
mov
test
jns
out
cmpb
sahf
out
sahf
push
cmp
out
sub
and
sbb
jns
out
adc
or
iret
sarl
add
push
hlt
call
fcoms
rorb
enter
repz
rep
mov
jmp
push
lods
add
sbb
test
xchg
and
pop
mov
pop
addr16
jns
push
out
push
sub
sub
test
jns
ljmp
sbbb
adc
sbb
push
cmp
repz
rcrb
cwtl
sbb
cmp
repz
sbb
js
ret
iret
jns
jp
cld
scas
push
adc
mov
mov
inc
sbb
pop
xchg
or
inc
stos
fldl
or
mov
loop
inc
ret
pop
roll
sbb
out
sbb
add
sahf
out
jl
cld
push
hlt
push
and
push
jns
out
in
fmull
aam
jns
out
int3
add
jns
rclb
and
jns
or
sahf
out
cwtl
sbb
sahf
mov
adcb
pop
jns
out
jo
insb
and
and
sub
adc
push
cmp
repz
outsl
jne
addb
xchg
scas
mov
into
sahf
out
cmp
cli
push
push
push
jns,pt
out
inc
pop
bound
out
ret
add
repz
push
cmp
xchg
repz
movsl
stos
lret
sahf
out
testb
sub
dec
out
sahf
out
outsb
sbbb
into
shr
repnz
out
sahf
out
ds
jb
xchg
addr16
sahf
xchg
mov
loop
mov
leave
pop
add
aas
call
pop
mov
xchg
ja
repnz
or
pop
add
adcl
inc
lcall
mov
sub
inc
push
adc
ss
push
pop
push
add
and
xchg
jle
xchg
add
iret
and
mov
cwtl
or
addr16
inc
test
movsb
or
and
ja
andb
and
add
or
mov
sub
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
cs
addr16
xchg
lods
mov
sbbb
xlat
cmp
or
movl
push
adc
or
fists
adc
test
push
adcb
adc
add
add
xor
add
lcall
mov
cmpsb
xor
repz
imul
scas
xor
adc
add
xchg
cmpsb
sub
jne
adc
push
mov
cmc
xor
push
lods
cwtl
cmpsb
mov
lea
ficoms
rcll
dec
and
dec
popa
xor
adc
or
push
lock
je
mov
loope
xor
add
imul
or
push
sbb
and
adc
mov
jo
outsb
test
pop
adc
xor
sbbb
orl
or
adc
sub
nop
pop
dec
outsb
dec
push
mov
mov
shlb
lea
adc
fdivs
cmpsb
cmpsb
in
imul
xor
add
addb
sub
int
add
add
add
inc
add
icebp
test
outsb
faddl
push
push
ror
ret
insl
sub
push
sub
int3
shll
pcmpeqd
out
cmpsb
aam
pop
test
mov
pop
xchg
inc
aas
out
pop
sub
cmp
repz
sub
pop
push
outsb
hlt
xchg
jmp
jbe
iret
pop
and
sub
rcll
mov
adc
fdivs
cmp
mov
icebp
add
nop
dec
sbb
test
sti
adc
push
stos
add
pop
xchg
loop
pop
push
add
ja
sbb
sub
loopne
shrl
inc
mov
sbb
mov
jo
and
sub
subl
adc
push
arpl
push
addl
dec
push
or
pop
test
pop
mov
pop
xchg
cmp
or
sub
add
ret
movsl
jo
ss
push
cmp
add
test
xchg
popf
add
pop
pop
test
aaa
pop
insb
or
add
sbb
xchg
test
daa
jnp
clc
fs
mov
push
pop
push
popa
sbb
jo
ret
cmpsb
pusha
pinsrw
jnp
xor
sub
aaa
push
mov
sub
pop
adc
lock
dec
fs
pop
xor
test
leave
sbb
ret
mov
popa
mov
pop
push
addl
pop
mov
mov
adc
dec
loope
dec
pop
mov
adc
or
lahf
cmpsb
xor
cmpsb
rorb
add
ret
xor
push
jge
push
add
jns
jne
adc
jns
movsb
lods
mov
aas
imul
sarl
loopne
jnp
inc
and
add
adc
test
imul
cmpsb
jo
je
int
test
cmpsb
sub
or
add
xor
dec
popa
data16
or
add
stos
imul
push
inc
filds
and
sub
xor
add
rorl
cltd
sbb
bound
push
cmpsb
data16
repz
test
inc
push
ret
sub
push
mov
ffreep
and
in
test
pop
cltd
cmp
addb
mov
inc
clc
and
dec
inc
pop
test
and
dec
popa
lea
sbbl
add
mov
fwait
ret
mov
pop
sbb
add
inc
mov
fs
and
pop
add
std
add
push
aaa
mov
out
add
addb
adc
adc
sub
mov
mov
add
jecxz
mov
add
and
xchg
sbb
addb
mov
dec
mov
in
mov
aad
xor
adc
aas
sub
xchg
dec
popa
outsl
das
xor
sub
inc
mov
lods
dec
and
addb
sub
add
ret
xchg
sub
pop
or
and
sub
adc
sbb
insl
inc
add
inc
jg
and
sarl
lds
xor
jno
push
xchg
cmpsb
adc
or
rcrl
xchg
push
ret
push
dec
fwait
inc
sub
mov
cmpsb
xor
cmpsb
add
pop
leave
lahf
add
xor
nop
xor
lret
mov
out
add
outsl
sbb
into
inc
and
call
imul
ficoms
fisubs
cmpsl
dec
jmp
jb
jp
sub
xor
imul
loopne
sbb
lods
dec
loopne
fmuls
dec
jae
test
xor
lret
jno
scas
mov
insl
outsl
sbb
addb
sub
add
out
sbb
xorl
lods
add
adc
or
shll
mov
xor
xchg
adc
sbb
aaa
dec
shll
mov
lcall
mov
or
adc
int3
mov
addr16
lret
sub
pusha
inc
jns
inc
push
cmp
loope
aaa
testb
roll
cmc
push
inc
sub
sbb
or
push
movsl
stos
adc
popa
mov
push
ret
fwait
or
dec
or
push
ficomps
or
adc
xchg
lea
jbe
repz
jne
ret
pop
test
push
or
mov
in
mov
cmpl
add
test
sub
add
xorl
sub
add
add
fldcw
arpl
pop
adc
dec
jmp
or
sub
fsts
or
adc
sub
sbb
or
push
sbbb
pop
ss
cs
mov
mov
adc
arpl
ja
mov
sub
mov
test
pop
sbb
out
pop
jno
mov
add
rolb
fadds
roll
fisubrs
or
adc
push
jb
mov
addl
pop
adc
inc
fcom
bound
movb
aaa
outsl
cwtl
stos
add
aas
add
pusha
popa
push
add
or
and
mov
test
mov
or
push
mov
bound
fldl
or
sbb
lods
sub
or
arpl
inc
inc
jl
fidivl
test
fmull
adc
insl
mov
push
dec
mov
ret
add
rorb
add
outsb
ret
fsub
es
mov
sbb
rclb
add
mull
shrb
push
sub
sti
pop
arpl
arpl
inc
lods
ret
dec
addr16
pop
pop
ret
ljmp
add
add
scas
pop
imul
push
iret
inc
jno
inc
fs
dec
sub
add
sbb
adcl
push
xchg
arpl
aam
pop
sbb
mov
sub
or
add
and
add
or
jno
ret
jb,pn
mov
or
das
xchg
test
jnp
xchg
sbbl
dec
pop
dec
jnp
adc
jb
ja
dec
ret
jae
test
adc
mov
xchg
imul
and
or
mov
pop
pop
cltd
mov
pop
xor
jae
imul
pop
mov
scas
es
add
dec
addb
cmp
push
adc
and
and
fsts
lds
mov
adc
push
xchg
stc
add
or
and
loope
adcl
fcomp
and
pop
xor
fbstp
mov
or
fsts
popf
push
jne
clc
mov
mov
or
outsb
push
outsb
mov
lods
stos
xor
inc
inc
xor
and
es
mov
lock
add
and
fcoms
cmp
and
mov
dec
dec
adc
add
mov
aaa
divb
xor
or
sahf
adcb
in
lock
pop
add
ret
dec
lea
push
sahf
pop
stc
pop
xchg
mov
xor
push
scas
add
subb
sbb
push
sub
popf
popa
jne
gs
sub
pop
push
sbb
popa
popa
inc
cmpb
dec
test
daa
rol
data16
dec
pop
cmp
inc
ret
dec
adc
insl
cmp
push
sub
push
fimull
adc
xor
add
adc
push
add
imul
jno
stgi
lret
sub
pmovmskb
pop
mov
shlb
and
xchg
jb
jbe
xor
pop
enter
aad
mov
sbb
loopne
or
daa
add
test
mov
orb
add
xchg
push
sahf
loop
dec
imul
mov
mov
sahf
mull
add
pop
add
imul
push
xlat
out
rcrl
lock
shrl
bound
sbb
and
xchg
add
add
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
