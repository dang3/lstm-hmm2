sti
idiv
pushl
rol
push
mov
call
mov
mov
pop
ret
sub
es
mov
das
sub
add
mov
xchg
dec
je
mov
inc
test
je
outsl
lcall
add
add
xor
xor
add
test
call
mov
dec
es
je
and
pushl
push
je
out
imul
ljmp
ret
ret
or
std
cld
incl
and
inc
shl
sub
lea
push
movl
or
lock
push
test
add
mov
add
dec
jne
pushl
outsl
mov
mov
add
mov
pop
lea
push
lea
or
ret
pop
mov
cmp
pop
add
sub
lods
std
call
push
jb
je
arpl
imul
add
je
mov
push
clc
mov
lock
push
mov
incl
test
jle
add
subb
push
aas
mov
inc
add
adc
stos
mov
push
idivl
xor
mov
or
sbb
jne
mov
mov
nop
jns
xchg
popf
pop
inc
sub
push
or
std
inc
mov
enter
shlb
push
add
sbb
ja
fistpll
sbb
pop
pushf
mov
add
inc
adc
inc
jbe
popa
das
lsl
cmpsl
mov
xor
jmp
outsb
fs
jno
add
dec
and
test
jne
ds
mov
leave
je
cmpb
add
leave
jne
andb
inc
ret
test
cmp
jne
or
mov
cmp
and
sub
shr
cmp
jne
sub
mov
dec
add
sarb
inc
stc
ret
sbb
shl
push
je
mov
inc
jle
inc
je
sub
push
jecxz
add
aam
mov
repnz
les
jmp
or
jmp
cmpsl
jge
mov
mov
pop
and
push
mov
cmp
jge
lods
stos
add
imul
rclb
push
mov
jb
jnp
cmp
or
cld
push
xchg
xor
lds
inc
js
fldt
cmp
mov
or
xor
popf
insl
sub
and
cli
pop
push
pop
lods
mov
push
add
adcb
mov
add
repnz
pop
pop
aam
ss
sub
and
jge
iret
in
scas
mov
add
sbbb
sbb
pop
push
push
mov
mov
add
jnp
pushl
scas
pop
jmp
mov
cmp
adc
rcr
ds
sti
mov
adc
jbe
test
mov
dec
push
jo
into
or
cmpl
popl
loopne
sarl
and
jo
push
mov
push
cwtl
push
js
lahf
push
cmpsb
xor
inc
add
add
xchg
sarb
sbb
call
add
js
and
inc
andb
add
push
add
jae
clc
push
dec
je
adc
rcrl
ret
es
iret
stos
pop
outsb
jns
ja
xlat
out
add
pushf
push
jbe
add
push
sbb
pop
xchg
dec
shlb
outsl
sub
pop
test
push
sarl
sbb
pop
sub
in
add
cmp
fimuls
push
pop
shrb
loop
imul
jo
jl,pt
push
or
sti
jmp
push
adc
cmc
fcomp
leave
inc
mov
lea
dec
aad
jo
les
hlt
clc
rcll
dec
hlt
xor
mov
lock
jbe
sbb
and
pop
insl
pop
add
pusha
mov
ret
into
pop
test
push
js
mov
rorl
stc
popa
outsb
dec
ljmp
lock
loope
loope
adc
or
add
inc
js
movsb
and
xor
xchg
subb
adc
adc
jnp
or
add
and
lcall
push
enter
aad
push
and
pop
enter
mov
icebp
or
test
jno
fiaddl
jne
mov
dec
cmp
scas
call
push
in
push
lea
push
push
out
decl
xchg
add
inc
add
mov
adc
add
and
call
jb
push
push
aad
adc
adc
and
xor
dec
mov
inc
mov
or
sub
inc
hlt
jno
inc
stos
jmp
shlb
pop
dec
push
fdivrs
jecxz
icebp
pop
pop
mov
xor
mov
addb
lods
xor
stc
pushf
mov
sbb
mov
pop
xlat
adc
mov
imul
xchg
dec
mov
dec
or
or
in
das
inc
ljmp
ret
lret
jno
enter
nop
test
push
mov
notl
nop
xchg
scas
xchg
out
mull
repnz
stos
xchg
adc
in
test
bound
fisttps
clc
mov
xchg
fbld
in
push
sub
and
adc
push
or
push
test
ss
lods
cmpsl
hlt
add
sahf
ss
pop
in
pop
cmp
add
jo
add
and
push
loopne
xor
subb
out
pop
sub
mov
push
dec
push
and
lret
push
or
lret
nop
inc
ret
enter
pop
stc
dec
jnp
xor
pop
hlt
pop
popa
jg
hlt
adc
mov
mov
adc
test
or
mov
add
mov
adc
sub
push
inc
jmp
inc
repz
or
mov
push
or
lock
stos
jecxz
cmp
and
or
add
push
hlt
pop
and
hlt
push
outsb
sahf
sbb
add
pop
xchg
out
or
jns
outsl
gs
lock
dec
xor
dec
shll
xchg
lahf
xchg
test
mov
fmuls
jl
and
pusha
mov
pushl
test
xchg
adc
mov
stc
and
mov
inc
mov
test
lock
push
and
iret
xor
sub
sbb
fucomp
in
and
and
loopne
push
test
sbb
in
lock
xor
or
pop
or
adcl
fcomps
aam
rcrb
int3
int3
enter
inc
enter
cmp
dec
in
sub
lods
inc
and
and
inc
cwtl
push
push
mov
mov
sbb
xlat
and
je
test
cmp
jne
inc
inc
sti
out
in
dec
je
adc
pop
cmp
jne
mov
mov
adc
add
add
idiv
jg
add
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
dec
test
jnp
adc
out
jne
sub
shr
sbb
stc
mov
addr16
fdivr
push
mov
cmp
jne
sbb
cmc
sti
and
add
or
and
cmp
lods
cmp
int
mov
cltd
jmp
xor
jb
dec
add
add
push
aas
in
jle
or
fld
jne
adc
mov
mov
mov
sbb
xor
jb
pusha
push
das
pop
popa
or
pop
stc
leave
ret
cmpsl
pusha
or
into
das
sti
add
stos
hlt
fnstcw
pushaw
sti
mov
int3
or
mov
jge
insl
xor
push
call
dec
push
rorb
or
or
int3
shlb
cwtl
int
mov
scas
aas
call
sarl
fbld
mov
pop
clc
bound
add
lds
add
in
fisttpll
cmp
in
into
or
rcll
shlb
add
mov
cmpl
insl
push
ss
pop
push
xor
pop
mov
adc
mov
adc
or
or
clc
sub
push
inc
xchg
jnp
mov
mov
push
cld
xor
mov
in
mov
cmp
xor
shll
and
adc
jmp
and
imul
xchg
loopne
and
xor
and
shlb
push
iret
add
inc
out
lret
sub
sub
int3
adc
mov
xor
sbb
jne
dec
and
and
add
jo
add
and
lret
sbb
dec
and
dec
and
and
xchg
sbb
pop
hlt
inc
in
sbbb
in
add
jo
add
sub
lock
push
mov
dec
int
cs
mov
mov
lock
mov
add
call
lcall
mov
add
add
outsb
push
daa
dec
rclb
sbb
and
loopne
cmpl
decl
test
and
sbb
bound
icebp
adc
stos
call
adc
faddl
or
inc
dec
pusha
aaa
das
sub
fdivrs
mov
daa
lret
shlb
mov
aam
aam
lds
icebp
sarb
dec
clc
repnz
rcrb
and
int3
add
add
rclb
rclb
in
orb
out
loope
mov
add
xchg
sbb
add
dec
xor
nop
mov
enter
or
xchg
lea
les
loopne
pushl
inc
in
frstor
dec
jae
xorb
les
adc
cmpsb
and
xchg
inc
mov
adc
jne
adc
push
subl
push
cmp
jmp
sar
and
add
jle
push
popa
nop
lret
xchg
add
or
inc
add
xlat
test
jne
add
mov
push
mov
inc
iret
pop
pop
and
push
jmp
add
and
xor
into
push
add
add
jnp
outsl
test
lahf
or
icebp
inc
sbb
or
enter
xor
or
mov
push
out
iret
daa
in
mov
mov
loopne
orl
pop
cmp
cltd
in
mov
push
add
imul
xchg
jns
popa
mov
mov
out
lea
push
lock
push
cwtl
and
jg
add
xchg
or
shll
dec
fiaddl
dec
adcl
push
repz
fdivl
xchg
adc
cld
mov
adc
fcoms
rorl
add
aas
mov
jns
xor
imul
mov
pop
inc
push
push
mov
push
cmp
bound
out
jg
push
push
dec
or
sub
push
add
pop
jg
inc
test
rcl
loopne
add
jo
ret
pusha
in
inc
sbb
fdivrl
fcoml
mov
subl
push
dec
fmuls
add
mov
js
inc
jno
xor
pop
push
xor
or
dec
insb
aad
roll
in
pop
pop
pop
push
sub
bound
sub
pusha
je
inc
out
xor
adc
xchg
int3
in
xchg
popa
pop
adc
adc
sbb
adc
mov
arpl
mov
push
icebp
sbb
adc
inc
mov
rcrl
sahf
or
or
ret
sbb
roll
or
dec
nop
cmp
xor
sbb
inc
xchg
xorl
sbb
inc
dec
cld
mov
cmp
jl
push
sbb
jecxz
cmp
pop
and
push
call
or
inc
adc
loopne
leave
xor
and
out
or
lds
int
mov
hlt
fstl
ja
xor
pop
loope
inc
xor
mov
lock
or
lock
pop
push
test
lret
cwtl
scas
in
mov
add
inc
cmpsl
hlt
mov
xchg
rolb
sub
pop
inc
scas
add
adc
test
push
push
fisttps
push
push
imul
pop
pop
dec
jne
pop
xor
cmpsl
fwait
or
stos
pop
test
cmp
add
xchg
test
adcb
cld
and
and
inc
nop
or
cmc
fldt
cmp
loopew
xor
dec
xchg
adc
push
lret
pusha
add
push
dec
insb
push
push
loop
or
push
xchg
mov
xchg
clc
mov
or
js
mov
outsb
adc
or
push
test
mov
add
jge
movl
out
mov
inc
popf
add
je
repz
dec
shr
jle
loop
in
lods
mov
lret
ljmp
movsb
push
push
mov
ficoml
outsl
mov
pop
test
pop
sub
add
sti
imul
pop
stos
pop
pop
loop
sub
add
movsb
shl
es
aam
adc
pop
add
xor
add
adc
mov
cld
ss
or
jecxz
add
inc
xchg
or
in
gs
inc
rolb
push
dec
fcomp
fcomps
cltd
faddl
mov
push
push
sub
add
inc
dec
or
or
push
adc
xchg
pop
and
fsub
fsub
jbe
enter
in
add
clc
or
cmp
cmpsb
or
loopne
or
or
adc
sbb
cmp
cmpsl
fidivrs
push
cmp
bound
adc
or
into
xorl
add
ds
or
fcompl
insb
movsb
pop
dec
push
aas
push
jp
jne
test
push
or
xchg
scas
lods
inc
mov
mov
orb
stc
xchg
pusha
scas
in
push
inc
add
mov
fdivl
shr
adc
sbbb
test
mulb
xchg
pop
cld
in
mov
push
das
out
in
jg
int
push
call
push
cmp
int3
shr
pop
popa
inc
inc
int3
aam
jl
xchg
adcl
scas
cmp
dec
push
lock
fisubl
cmp
shl
faddp
push
lock
in
jb
movsl
add
loopne
adc
fadds
fcompl
ss
leave
fadds
shl
and
shl
xchg
fmuls
xchg
data16
add
and
inc
or
dec
cld
addr16
test
sub
sbb
call
mov
adc
pop
jmp
inc
or
addb
subl
inc
ja
push
or
in
push
dec
xchg
cld
xchg
add
in
test
and
xchg
and
es
jnp
xchg
mov
pusha
aam
repz
test
xor
add
pop
clc
mov
cmpb
loopne
pop
pop
in
sbb
xchg
call
movsl
add
and
jecxz
push
add
insl
adc
lea
cmp
movsb
scas
or
addr16
xchg
dec
adc
jecxz
and
xor
clc
push
xchg
adc
cmpsb
clc
into
ja
pop
stos
adc
sbb
cli
adc
cmpsb
jmp
adcl
push
lods
orb
das
std
mov
dec
or
and
mov
adc
es
loope
or
jae
mov
cmp
mov
dec
add
xchg
xor
lcall
int3
hlt
inc
adc
add
and
sbb
sbb
daa
mov
in
sub
sarb
cld
js
inc
pop
add
and
or
inc
push
call
inc
push
test
cmp
or
jbe
sbb
inc
xor
add
es
loopne
daa
push
pusha
lds
add
out
sbb
inc
adc
lret
ror
adc
inc
mov
testb
nop
inc
add
inc
dec
cwtl
stos
add
rcll
mov
and
mov
xorb
xor
mov
and
mov
les
add
shlb
mov
add
cmpsl
mov
push
mov
push
adc
arpl
clc
add
ror
mov
test
push
dec
addr16
adc
out
popf
mov
orb
addr16
jae
and
out
inc
xor
pop
or
in
sarb
sahf
or
push
js
mov
mov
sbb
cmp
fcomps
nop
xlat
fdivrl
xor
lea
fsubl
sbb
int3
jno
mov
popf
push
lcall
sub
inc
arpl
and
mov
subb
push
sbb
pop
add
inc
bound
push
or
cld
jno
pop
xor
jg
test
incl
std
es
mov
inc
cmove
hlt
inc
movsl
icebp
sub
mov
add
sub
ja
dec
test
xchg
push
push
adc
pop
cltd
test
std
push
inc
dec
mov
pusha
mov
repnz
sub
or
imul
sub
push
insb
lock
inc
inc
pusha
mov
lea
insl
mov
jmp
and
add
xchg
push
jb
mov
andl
lods
lods
lcall
or
inc
mov
repnz
pushf
xchg
and
inc
lcall
imul
lcall
add
sarb
shlb
clc
nop
inc
inc
cwtl
adc
mov
js
out
add
mov
add
or
call
lock
cmc
push
add
mov
adc
mov
and
xor
or
lds
push
scas
shl
ret
loop
sbb
sub
loope
insb
sbb
dec
out
xchg
pop
mov
add
in
xchg
cmpsb
mov
lock
adc
std
mov
inc
push
test
shlb
mov
mov
sarb
lcall
dec
scas
ret
pop
add
pushw
push
push
sub
xor
or
movsb
rol
mov
insl
add
cld
add
scas
xor
add
mov
cmp
add
sbbb
and
push
inc
shll
adcb
rol
sbb
adc
mov
or
in
dec
ss
push
and
cmp
hlt
inc
add
sbb
dec
dec
mov
pusha
movsb
nop
arpl
xor
and
out
pop
mov
pop
ret
popa
push
or
je
adc
jns
xor
lahf
adcb
jge
sub
push
mov
add
adc
cmp
sbb
dec
rcr
xor
sbb
clc
cmpb
mov
loopne
jne
mov
sbb
cld
sub
je
cmp
dec
aam
mov
cs
sub
in
push
adc
in
push
jo
add
test
mov
test
rcr
xor
xchg
pop
movsb
sub
mov
pop
scas
push
faddl
sub
cld
add
adc
dec
sbb
nop
mov
xchg
dec
cs
adc
sbb
mov
sbb
add
ljmp
loopne
push
aam
test
mov
movsl
adc
dec
jge
push
cltd
mov
xor
cmp
sub
sbb
cmp
mov
inc
bsr
mov
int3
jp
or
add
mov
and
pop
dec
popl
xor
adc
xor
sbb
leave
mov
cmp
add
and
xchg
aas
xchg
inc
cs
add
xchg
xchg
push
jno
mov
and
adc
fcoms
loopne
add
xchg
cld
mov
or
mov
xor
or
push
adc
sub
sbb
adc
mov
dec
add
mov
xchg
sub
ss
add
cmp
rorl
scas
cmpsl
pushf
stos
or
or
cmc
dec
pop
jle
lods
sbb
xor
cltd
aam
es
push
ror
add
xchg
pop
lods
xor
xor
pusha
sbb
lods
push
movsb
cmp
test
aad
lods
xchg
xor
repz
adc
mov
inc
mov
and
jl
faddl
scas
cmp
pop
popf
insb
and
fldpi
sbb
jmp
fnstsw
test
je
fchs
fcompl
call
andl
jecxz
inc
pop
jbe
in
push
sbb
inc
clts
sub
xlat
mov
add
and
pop
mov
test
xchg
sub
stos
and
cltd
mov
stc
lds
ret
push
push
stos
sbb
pop
enter
inc
or
add
mov
jnp
and
push
pop
ss
pop
xchg
inc
add
add
jmp
clc
jae
aas
cmc
movl
les
pop
fs
xor
popa
aam
xchg
shll
les
outsb
fistps
sbb
push
nop
cs
outsb
cmp
mov
cmp
mov
and
push
inc
mov
cltd
flds
inc
push
mov
daa
sbb
hlt
inc
popf
popf
xor
fdivr
ficomps
add
inc
mov
in
xchg
jns
mov
addr16
xchg
xor
dec
cli
sbb
hlt
test
stos
movsb
andl
sbb
and
and
xorb
test
mov
xor
inc
sub
inc
sbb
cmpl
or
xor
stos
cmp
cs
or
pop
cltd
add
or
or
sbb
les
xor
jge
jb
xchg
jl
loopne
xor
sub
into
rcll
stos
lods
cmp
ss
xchg
imul
lock
add
in
loopne
sbb
add
jno
mov
cmp
cmc
push
insb
roll
bound
and
and
popa
sub
push
ret
xchg
xchg
push
pop
mov
lcall
ljmp
push
mov
adc
and
loop
addr16
andl
aaa
fs
mov
xor
inc
aad
push
enter
pop
adc
xchg
pop
cmp
addr16
and
jge
subb
mov
xlat
movsl
nop
pop
fcmovne
mov
push
popf
xor
jge
mov
pop
pop
and
inc
dec
lock
dec
aad
pop
nop
pushf
shrb
mov
shll
mov
nop
inc
or
aaa
sahf
xor
and
rcl
and
inc
mov
fisubs
int
sar
jae
call
xor
pop
xor
mov
fcmovbe
loopne
iret
ret
nop
loopne
and
shl
xor
incb
lock
and
sub
outsl
pop
push
push
adc
pusha
sbb
rcrb
add
xchg
leave
add
mov
inc
and
cmc
fdivl
or
mov
mov
pop
add
add
lcall
lods
lods
or
imul
mov
or
mov
mov
pop
inc
push
shll
imul
rcrl
cmp
jb
dec
hlt
das
enter
mov
add
stc
movsl
push
pop
jb
sbb
jg
nop
les
adc
les
out
push
and
arpl
add
dec
arpl
xchg
dec
imul
adc
inc
push
fwait
in
call
icebp
dec
in
xor
lods
cs
or
inc
push
rolb
stc
lods
mov
lock
das
xchg
adc
mov
sbb
loop
xor
data16
je
push
and
les
sbb
or
addl
pop
and
in
sub
cmp
hlt
lock
cmp
lock
xchg
add
clc
push
sbb
add
sbb
inc
enter
inc
dec
leave
adc
cmpsb
add
cmpsb
or
and
pop
and
cmp
and
xor
adc
pop
xor
mov
dec
mov
push
inc
xchg
pushf
xchg
sub
xchg
dec
adc
mov
pusha
sbb
fs
outsb
push
lret
fmull
sbb
push
or
xor
cmp
adc
imul
jmp
and
daa
popa
ss
dec
pop
outsl
ja
jne
pop
mov
push
cmp
or
mov
xchg
add
pop
out
xchg
mov
or
adc
xchg
or
psraw
movsb
pop
adc
cld
mov
add
fisttpll
stos
mov
or
and
and
das
pushf
xchg
and
je
js
or
js
fstl
push
test
or
pop
mov
roll
jp
inc
orl
cmp
pop
pop
jns
imul
add
adc
and
jg
inc
or
pop
hlt
fisttpll
pusha
movsb
or
imul
mov
shlb
addr16
and
aaa
inc
std
mov
clc
pop
leave
and
hlt
mov
sub
inc
add
cli
cmp
pop
out
iret
fisttpl
jmp
sbb
add
pop
into
sti
mov
adc
adc
roll
adc
daa
cmp
jmp
mov
xchg
cmpb
adc
imul
cmp
out
xlat
in
adc
in
jnp
ja
mov
lods
sub
test
or
pop
mov
and
test
inc
leave
jl
inc
dec
addb
ljmp
dec
mov
inc
jg
aam
and
inc
jge
incl
jg
inc
mov
cwtl
dec
mov
in
pop
cmp
insl
inc
or
fmuls
ret
push
and
sbbl
ret
inc
fwait
dec
dec
andl
lcall
mov
mov
push
dec
and
dec
xlat
push
mov
aaa
bound
jmp
push
push
shl
jns
add
push
das
jmp
clc
addr16
add
jg
loopne
xor
mov
push
inc
cs
and
jg
or
pusha
and
adc
jo
jb
lods
sub
jmp
out
in
or
adc
sbb
clc
mov
pop
sbb
adc
or
pushf
or
clc
addl
rolb
jb
imul
adc
add
add
mov
inc
rorb
jecxz
dec
add
push
je
ret
ret
xor
fcmovnbe
or
xor
cld
cld
cld
xor
dec
movntq
push
pop
lea
in
mov
jns,pn
sar
push
xor
pop
add
inc
dec
cmpsb
dec
jl
or
inc
arpl
cmc
mov
lds
adc
inc
adc
mov
xor
and
add
popa
test
hlt
test
clc
adc
cmp
inc
xlat
pop
mov
outsl
or
call
cmp
adc
push
and
push
jecxz
or
mov
and
inc
and
dec
pop
lods
test
in
mov
clc
or
xor
cmp
jo
pop
or
cld
test
or
sub
stc
push
ds
mov
xchg
es
xor
nop
cmp
sub
cmp
sbbb
mov
popa
or
insb
inc
cmp
add
enter
push
sbb
je
push
imul
shll
nop
push
or
iret
jb
sub
mov
add
in
cs
fs
std
cmp
sub
and
xor
clc
add
dec
cmp
mov
mov
cwtl
sub
in
push
call
mov
dec
jb
jbe
xor
dec
cmp
leave
adc
aam
inc
jmp
mov
test
mov
lock
test
mov
xchg
inc
leave
and
push
int
call
in
push
aaa
push
push
jo
xchg
mov
mov
xor
in
call
imul
jnp
adc
orl
mov
mov
add
mov
roll
stos
add
pop
pop
jne
mov
js
mov
lock
in
xchg
sub
xchg
add
lock
stos
mov
jbe
or
push
jb
xchg
or
push
xchg
adc
aad
and
xchg
subl
mov
cwtl
pushf
xchg
sub
push
mov
fistpll
adc
push
inc
mov
inc
and
imul
and
and
xchg
cld
sbb
sbb
add
or
movsl
rolb
in
and
pushf
xor
and
mov
and
jmp
js
movq
dec
xchg
add
insl
aaa
cmp
icebp
mov
mov
orb
pop
addl
dec
movsb
push
mov
sbb
out
leave
pop
xchg
push
xor
lea
push
add
fldl
mov
xor
push
orl
pop
and
lods
lods
je
fcompl
xor
je
dec
and
test
xchg
mov
fmuls
jmp
xchg
lods
frstor
xchg
mov
xchg
sub
inc
add
add
adc
nop
rclb
call
sbb
push
clc
clc
dec
add
xor
pop
mov
mov
or
hlt
push
and
add
daa
add
test
ret
dec
and
pop
hlt
ljmp
and
jne
ficomps
into
add
pushf
add
inc
xor
imul
xchg
sub
call
rcll
or
and
push
pop
mov
imul
adc
pop
es
ds
adc
ret
xchg
xor
fstps
add
rcrb
add
ja
push
lds
and
sub
or
adc
mov
add
push
cs
clc
loopne
adc
adc
lods
mov
dec
or
mov
inc
and
lcall
adc
sub
mov
mov
movsb
outsl
aam
mov
fwait
mov
ret
sbb
int
int
jns
lahf
mov
and
cmp
inc
cmp
rcr
add
lds
std
xor
mov
xor
mov
hlt
sbbl
loopne
jnp
fildl
gs
adc
fsubl
jb
in
test
lea
orb
test
xchg
js
mov
mov
shl
lahf
sub
xor
hlt
inc
hlt
test
add
sbb
inc
loopne
aas
in
dec
sbb
aad
sbb
ret
or
sbb
mov
ljmp
jecxz
fdivl
add
pop
clc
xchg
xchg
push
push
xchg
aam
fcoms
xor
inc
paddq
push
jb
adc
enter
jns
test
cmp
fcomip
lock
inc
mov
sti
mov
add
sbbb
and
mov
xchg
roll
pop
insb
jo
cmp
test
sbb
dec
sub
add
and
int3
and
add
sub
lret
pop
js
adc
mov
pop
adc
lods
cmp
inc
and
push
push
pop
sbb
add
push
mov
or
mov
lds
sub
lods
adc
or
or
inc
lret
pop
jl
xchg
movsl
shl
cmp
arpl
pop
sub
push
xchg
push
xor
or
test
sub
sub
xor
pop
push
xchg
adcl
in
sahf
jo
mov
jmp
lods
pop
imul
lock
shr
inc
and
in
inc
in
add
push
mov
add
inc
movsb
js
fisttpl
sbb
jno
into
push
push
frstor
xor
call
faddl
cld
inc
leave
sub
hlt
inc
sbb
inc
sub
cld
sbb
inc
jns
adcl
xor
jne
or
mov
in
push
or
cmc
ss
xor
or
xchg
outsl
sub
dec
pop
dec
pop
sub
outsl
lock
rolb
popa
adc
xchg
inc
or
stos
xlat
test
test
pop
icebp
xchg
or
jmp
mov
jge
add
andb
add
add
shll
add
or
mov
push
dec
cmp
test
lock
pop
mov
push
or
lea
add
push
jo
stos
inc
rcr
push
push
lea
int3
sub
push
inc
cmp
rolb
cmpsl
lret
mov
jle
lret
rep
out
clc
inc
pop
inc
cmp
hlt
fcoml
es
cltd
xor
imul
enter
adc
mov
flds
adc
test
adcb
add
cmp
pop
adc
sbb
rcrb
lods
imul
pop
pop
inc
lds
and
stos
lret
lret
sub
lods
mov
stos
lock
jmp
sbb
sub
arpl
xchg
movsl
add
mov
and
lahf
push
leave
mov
fsubr
fcoms
outsb
lea
or
push
sub
mov
sub
xor
xchg
add
add
inc
pop
in
cmpsb
push
sbb
add
mov
jo
aaa
insb
push
cmpsb
push
or
cmp
popf
push
subl
dec
movl
icebp
add
rolb
call
mov
push
sti
xchg
dec
shrl
loopne
jle
mov
xlat
cmc
xlat
cld
or
or
sbb
pop
add
cltd
cmp
je
inc
dec
outsl
leave
push
lods
pop
and
nop
je
pop
inc
add
movsb
lods
scas
push
xchg
mov
push
inc
scas
pusha
cmp
pop
scas
adc
hlt
xor
jb
jb
scas
pop
in
add
add
xor
add
pop
or
jle
inc
js
mov
xchg
cmpl
xchg
pop
movsl
inc
mov
stc
adc
xchg
sbb
mov
push
xchg
pop
test
inc
xor
fcompl
inc
roll
aam
mov
mov
test
stos
add
sub
es
rcrb
and
clc
adc
cmp
cmpsl
xchg
or
repnz
add
loopne
mov
adc
loop
scas
popf
and
dec
xor
xchg
loope
popa
add
or
das
add
test
adc
or
and
ja
and
add
add
mov
dec
enter
pop
add
jnp
fstpl
dec
popf
pop
add
shrb
enter
sbb
mov
push
jp
subl
popa
imul
test
jle
mov
repz
or
js
and
add
push
sub
add
push
rorb
mov
cwtl
and
orl
sub
loop
mov
jmp
push
jno
sbbl
pop
push
add
jns
jmp
faddl
cltd
mov
jne
push
or
pop
push
xchg
int3
enter
adc
enter
mull
and
pop
xchg
and
int
lds
add
xchg
popa
dec
mov
pop
subb
sbb
xor
sbb
shrb
dec
and
xor
icebp
sub
or
and
add
popf
scas
fsts
test
lcall
adc
nop
cmp
call
adcb
sub
cmpb
idivb
andl
adc
fdiv
shll
xchg
test
add
adc
lods
xchg
clc
in
and
rolb
sbb
xor
nop
lahf
add
inc
xchg
or
adc
orl
fisttps
cmp
adc
mov
add
xor
or
jle
mov
std
dec
lea
add
les
aas
test
inc
lods
xchg
adc
jmp
faddl
fcomps
outsl
movsl
loopne
dec
ss
add
fsubs
cld
test
mov
pusha
andl
jne
pop
xor
or
xorb
dec
inc
sub
inc
ret
or
adc
pop
pop
adc
xor
sub
mov
add
xor
jne
or
xchg
add
push
add
and
loop
cmpsb
arpl
loopne
mov
fnsave
lea
fadds
or
sbb
pusha
pusha
push
lahf
scas
aad
popa
les
sub
mov
dec
sbb
js
dec
loopne
fmul
add
leave
in
in
fcompl
sbb
aam
push
push
mov
test
mov
adc
xchg
cmp
ljmp
lea
jne
push
loop
add
add
sbb
and
inc
mov
nop
lret
xor
adc
inc
mov
lds
movsl
loope
fsts
adc
dec
mov
or
test
jge
or
sbb
sbb
movsl
cmp
rcr
add
push
adc
stc
or
sbb
cltd
cmp
lods
adc
pop
inc
xchg
imul
ss
mov
mov
and
push
pop
inc
lock
add
inc
mov
gs
pop
clc
addl
imul
adc
mov
pop
ret
push
shl
add
test
jl
and
or
add
dec
outsb
jmp
or
fcoml
jmp
fildl
imul
rcr
or
ret
or
sub
leave
push
add
add
dec
insb
adc
fsubrl
xchg
in
popa
rol
mov
push
add
cmp
outsl
mov
xor
sub
and
xor
mov
pusha
fwait
addr16
xchg
mov
addr16
sbb
mov
adc
inc
add
ret
ljmp
sbb
cmp
addr16
xchg
xchg
popf
dec
sub
ret
mov
js
inc
repnz
sbb
sbb
mov
lods
addr16
xchg
xor
push
add
aaa
popa
add
or
addr16
shrl
pop
dec
mov
pop
stc
vcmppd
pop
adc
xor
int
push
andl
lock
ljmp
inc
xchg
rolb
enter
mov
dec
and
adc
test
and
mov
xchg
dec
lods
bound
fwait
add
or
add
push
xchg
inc
lahf
iret
push
ret
and
es
adc
pop
or
add
stc
and
in
andb
roll
jp
sbb
adcl
add
jge
popf
test
popa
push
or
les
sbb
gs
bound
mov
mov
jg
sub
lock
pop
dec
adc
sti
leave
testb
mov
jge
test
repnz
mov
add
pusha
aam
cmpsb
cmp
and
or
repnz
add
xor
push
dec
add
sbb
sbb
xchg
stos
dec
or
adc
add
sub
mov
mov
outsb
cmp
adc
add
mov
fisttpll
rclb
out
inc
add
sbb
pop
sti
inc
xor
jno
push
add
frstpm(287
add
add
and
mov
bound
sub
cltd
test
xor
les
dec
loopne
push
inc
imul
mov
es
or
inc
icebp
hlt
lds
cmp
shrl
pusha
lret
repz
mov
add
mov
sbbb
enter
mov
sub
inc
xchg
jmp
test
insl
pop
popf
mov
adc
add
inc
movsl
mov
call
adc
add
aaa
push
mov
push
add
push
jno
adc
adc
es
roll
and
add
push
cmp
test
out
xor
sub
xor
decb
or
repz
aad
sbb
inc
das
pop
enter
add
adc
push
sub
adc
aas
add
test
sbb
movsb
fsubr
adc
mov
adc
inc
orb
push
div
mov
data16
pop
and
or
push
adc
dec
dec
ret
sbb
rcl
rclb
lods
and
sbb
in
mov
in
in
lea
sub
in
mov
scas
sub
and
xchg
jne
ret
cld
mov
and
sbb
push
dec
pop
rorb
sub
test
cmpsb
add
ror
or
xlat
or
jns
dec
add
bound
shlb
clc
or
aam
mov
xor
adc
cmp
xchg
in
cmpsb
ficoms
and
hlt
enter
or
test
stos
adc
inc
cs
mov
nop
or
and
mov
adc
inc
cs
scas
sbb
nop
or
and
dec
adc
add
cmc
lcall
or
xor
sbb
in
orb
cmp
repnz
shll
inc
out
adc
sub
or
adc
push
adc
or
das
loopne
or
jge
pop
jo
in
push
xorb
mov
repz
rcrl
nop
mov
mov
lahf
or
adc
mov
leave
loopne
sub
dec
add
sub
inc
aas
dec
mov
sbbb
add
cmp
inc
fucom
jns
add
jno
in
sbb
fiadds
pop
sbb
add
jg
rcll
movl
sbb
mov
inc
or
inc
and
dec
dec
add
cld
lock
test
sub
add
cmp
mov
inc
fxam
fcompp
cmp
push
jne
add
or
out
fadds
rcr
add
sahf
cmp
gs
xor
mov
pop
ret
test
aad
shll
lea
pop
mov
mov
adc
push
rcrb
adc
nop
add
mov
rol
xchg
push
sub
decl
adc
in
test
les
ret
int3
enter
jns,pn
enter
mov
fadds
xchg
aas
repnz
pop
and
add
or
add
stos
push
popa
bnd
push
test
and
push
and
enter
fbstp
add
add
pusha
or
push
popf
jo
or
out
test
fildl
push
movsl
fsubl
rolb
mov
lea
bswap
sbb
mov
mov
loop
sarl
out
pop
push
lods
mov
enter
mov
xchg
push
jb
enter
cmp
push
out
in
xchg
icebp
mov
or
leavew
lock
xor
or
mov
lea
bound
in
les
shrl
inc
mov
add
mov
dec
js
cltd
ret
fisttpl
adc
fdivl
xor
inc
daa
mov
jb
loopne
fmuls
xor
imul
xlat
int3
aaa
int3
test
and
sub
pop
push
inc
stos
push
mov
add
xchg
in
add
orb
adc
pop
dec
adc
inc
jmp
add
add
lock
adc
test
push
and
cld
or
pusha
mov
or
icebp
xchg
nop
mov
inc
jmp
fucom
or
mov
repz
in
adcl
cld
xor
add
fsubl
adc
repz
sbbb
push
mov
mov
mov
mov
insl
lock
inc
test
mov
psllq
sbb
aad
pop
push
flds
cmp
sub
stc
dec
dec
push
movsb
cmp
mov
lock
add
inc
inc
shll
roll
mov
cld
xor
bound
es
stos
or
pop
daa
call
sub
fstp
mov
rorl
pop
dec
addr16
mov
lcall
popa
les
loopne
pop
in
lods
mov
push
shll
dec
hlt
fcoms
lret
enter
xor
inc
adc
rol
xor
push
in
jns
xchg
jbe
or
aad
sbb
inc
add
push
mov
xor
jmp
add
and
test
aam
pop
jp
push
mov
clc
std
cmp
lods
fisttpll
jl
aam
sub
mov
cwtl
push
push
sbb
stos
int
add
fisubrl
flds
lea
pop
xchg
mov
imul
mov
and
sbb
or
sub
or
cld
int
mov
mov
outsl
insb
stc
sub
push
pop
nop
or
sti
xchg
add
shl
sti
in
add
jo
push
and
sub
dec
push
movsb
aaa
add
push
insb
sub
icebp
outsl
adc
hlt
outsb
das
nop
sbb
jb
icebp
add
pop
icebp
add
cs
addl
mov
adcb
pop
stc
cmpsb
sahf
and
and
jb
and
push
btr
popa
push
xchg
xchg
cmp
xor
xchg
cwtl
cwtl
or
mov
push
xor
pop
or
mov
hlt
adc
cmp
pop
pop
inc
test
xchg
pop
pop
adc
mov
push
xchg
or
push
and
out
call
movsl
dec
sbb
push
cmp
jb
mov
pop
mov
xchg
pusha
mov
cwtl
test
sub
push
adc
adc
sub
iret
pop
or
inc
cmp
test
push
adc
pop
rcl
fstl
pop
jns
mov
lahf
sub
or
push
cmp
and
or
orb
aam
push
xor
les
and
gs
loop
inc
outsl
in
push
les
mov
sbb
out
add
sti
call
insb
and
jl
xor
push
fwait
add
push
mov
xchg
sbb
pop
jno
in
rorb
xor
push
dec
xor
in
orl
mov
or
adc
sub
ljmp
xor
mov
in
loopne
leave
or
movsb
add
test
mov
adc
sbb
sbb
push
int3
in
mov
sub
mov
and
or
sub
xlat
adc
adc
sbbl
dec
hlt
mov
sbb
scas
notl
adc
shrb
mov
push
decl
lods
nop
in
add
and
adc
mov
add
xor
push
cwtl
fcmovnbe
stos
iret
add
les
mov
iret
adc
adc
ljmp
add
pop
movsl
nop
daa
or
cwtl
or
mov
pop
divl
xor
jae
pop
push
sub
imul
gs
icebp
sub
xor
push
or
addr16
sbbb
mov
xor
xchg
or
addl
addr16
mov
out
shrb
sub
adc
pop
lods
or
sbb
mov
adc
add
adc
loope
xchg
push
sub
cltd
test
inc
push
clc
cld
sbb
enter
pop
dec
mov
cmp
pop
push
test
roll
pop
push
or
adc
push
addb
dec
icebp
cmpsb
pshufw
mov
fdivs
jmp
inc
xor
in
aam
dec
loope
sti
std
shlb
jbe
xchg
add
lahf
test
nop
pusha
gs
lods
repz
sub
add
or
imul
ljmp
sub
test
dec
mov
or
mov
dec
or
cld
nop
mov
fcoml
push
xor
mov
fcomps
or
rolb
or
int
sub
adc
xlat
movb
mov
pop
adcb
xchg
loopne
cmp
dec
rolb
inc
jo
mov
mov
in
add
mov
inc
pop
ret
sti
sbb
jle
xchg
daa
jo
add
push
sbb
and
and
fbld
pop
and
mov
push
mov
mov
and
sbb
in
dec
repnz
sub
or
les
sub
mov
je
add
inc
pop
xchg
test
andl
ficoms
fimuls
mov
mov
push
das
and
sub
or
cs
mov
test
pop
push
dec
add
je
lret
mov
inc
add
push
xor
xchg
add
and
cmpsb
push
push
add
add
push
xchg
or
inc
loopne
dec
and
enter
adc
add
orb
add
shrb
dec
mov
rorb
add
push
cltd
rcl
ret
enter
or
mov
loopne
insb
sbb
xchg
xchg
or
push
push
add
or
add
add
push
enter
fcomp
faddl
insb
and
cmpb
fcoml
fisubs
sbb
std
inc
daa
mov
push
add
and
andb
sbbb
cltd
add
push
xchg
cltd
nop
movsl
jge
sbb
in
mov
inc
add
push
add
or
xor
jno
movsl
test
sar
xor
add
dec
aad
insl
shll
leave
sub
mov
dec
jg
or
adc
inc
bound
and
mov
xchg
sbb
mov
mov
mov
jmp
pop
lea
or
add
lcall
xchg
aam
or
jle
mov
mov
inc
sti
sbb
pop
sbb
cltd
repz
or
and
or
loopne
into
in
insb
sbb
dec
xor
sub
xor
sub
and
fmull
mov
addb
inc
push
mov
int
sub
dec
xchg
insl
in
pusha
mov
mov
inc
adc
mov
psrlq
les
movsb
in
jne
cmp
mov
shrb
add
mull
and
xchg
or
mov
jmp
mov
mov
mov
fmull
lods
pop
lods
cmp
add
mov
pusha
andl
xchg
stc
mov
sbb
mov
enter
mov
or
lea
mov
adc
sbb
push
mov
insl
aas
daa
xlat
xor
xchg
inc
add
int
lods
test
mov
mov
cmp
fmull
nop
jo
dec
inc
outsl
nop
test
es
push
inc
test
xchg
fldl
ficomps
pop
sbb
xchg
xor
rclb
pop
out
xlat
sbb
cmp
mov
jno
rol
cmp
movsl
or
das
add
add
imul
sub
or
cmpsb
sbb
adc
lods
xchg
sub
popa
pop
test
add
ret
or
outsb
sbb
movsb
and
mov
ret
daa
xor
les
inc
jo
scas
add
add
mov
xchg
inc
push
and
xor
add
inc
inc
or
pushf
xor
push
fildll
mov
add
add
or
orl
scas
lds
popa
sub
fldl
pop
mov
mov
xchg
or
stos
xchg
add
jl
and
adc
dec
xchg
push
adc
sub
sbb
inc
add
adcl
test
push
push
cmpb
mov
mov
inc
jno
add
adc
dec
xlat
push
enter
clc
dec
dec
sbb
push
sbb
push
in
jns
or
orb
xor
or
test
push
in
adc
push
xchg
mov
fildl
xchg
nop
fwait
shll
push
test
add
movsl
or
and
insb
or
stc
and
cs
xor
push
sbb
icebp
fmull
dec
sub
outsb
out
push
ss
sub
jo
aad
nop
or
jmp
popa
inc
jne
je
js
dec
pop
ret
stc
add
xor
push
sub
sbb
pop
inc
dec
adc
adc
movsl
add
pop
cmpl
mov
test
popa
xor
cmp
out
xchg
pusha
insl
test
jb
inc
std
imul
add
xor
dec
sti
fcomp
gs
add
andb
loope
mov
jbe
adc
sub
pop
cmp
adc
adc
lea
add
call
cs
xor
add
push
in
cmp
dec
leave
or
or
dec
scas
int
cld
mov
ret
jmp
sub
lods
mov
jnp
or
das
imulb
mov
pushf
fsubrl
mov
mov
stos
sub
or
xor
lock
shlb
mov
dec
movsb
mov
js
fucomip
enter
and
cmovnp
adc
and
and
sahf
addl
pop
mov
inc
fcompl
jp
add
sbb
and
jns
iret
enter
int3
hlt
int3
add
imul
test
nop
loopne
fmull
loop
aad
rorb
pop
les
outsl
lock
sbb
imul
push
cwtl
pop
int3
add
adc
test
xchg
xor
scas
xchg
xchg
mov
pusha
mov
adc
add
and
adc
xchg
add
add
nop
adc
push
adc
pop
or
enter
sbb
and
repz
sbb
lahf
dec
lahf
add
cmp
adc
add
subb
pop
cld
leave
bound
jp
dec
xchg
cld
shrl
fs
and
shlb
xor
and
pop
and
fwait
mov
and
and
movsb
stc
sbb
inc
loopne
stos
push
mov
fstps
dec
popf
pop
loopne
sub
dec
inc
int
adc
stos
sbb
fldln2
inc
pop
push
loopne
dec
mov
and
jnp
and
dec
loope
dec
and
jge
xor
or
inc
dec
xor
or
mov
xor
aas
xchg
pushl
jecxz
add
mov
stc
add
mov
cmpb
sbb
ret
insb
xchg
mov
adc
inc
les
push
or
fmull
mov
add
sbb
loopne
inc
xchg
push
inc
jns
sbb
and
pop
inc
movsb
add
std
add
add
inc
out
ret
cmpsb
push
dec
lcall
and
inc
and
push
inc
xchg
push
sub
cmc
fsubrs
pop
mov
shll
or
adc
mov
lods
mov
adcb
fsubrl
fdivl
addb
shlb
mov
or
in
inc
stos
aaa
mov
dec
add
pop
in
push
pop
pop
fcompl
loopne
push
adcb
adc
lret
push
inc
push
lock
pop
sbbl
shl
pop
or
insl
lret
or
out
jge
jmp
hlt
xchg
sbb
push
roll
daa
movsl
and
jb
dec
mov
xchg
and
adc
push
in
adc
adc
adc
xchg
cmp
jecxz
add
fiadds
push
sub
cmp
xchg
adc
cmp
dec
push
mov
inc
push
shrl
jl
push
jbe
jmp
add
xchg
cwtl
adcb
push
pop
test
jo
pop
fcmovne
add
inc
or
lcall
xor
xchg
loopne
and
test
cld
nop
xor
ret
push
mov
cmpl
ror
and
scas
fcompl
rorl
ss
add
or
dec
cld
jle
xor
mov
ret
arpl
mov
cli
insl
jno
adc
je
cmp
or
add
mov
aaa
ret
xor
mov
add
test
mov
fiaddl
dec
xlat
fnstsw
sub
mov
push
sbb
pop
test
adc
xlat
sahf
gs
add
pop
xchg
fs
sbb
adc
stos
out
mov
add
add
jne
jo
adc
dec
shlb
mov
pop
ret
and
sbb
imul
sbb
inc
jne
int3
mov
or
pop
push
je
push
in
loopne
adc
adc
cli
or
sub
insb
es
lock
push
loopne
xlat
push
pusha
cmc
and
add
and
add
insb
and
sub
je
inc
mov
pop
loopne
aas
cmp
adc
adc
inc
lods
sbb
into
xor
mov
push
mov
pop
std
mov
je
inc
jno
insb
sub
push
leave
or
mov
mov
ret
jb
jne
fwait
mov
pop
out
sahf
fdiv
pop
and
jne
imul
lret
dec
lock
pop
push
add
das
je
lods
add
xor
pusha
prefetch
in
repnz
or
iret
int
addb
je
out
jbe
push
loopne
fstpl
inc
or
mov
dec
aam
xor
test
clc
sub
push
push
or
loop
jne
out
push
test
lcall
pop
jl
jg
push
lea
fldl
fcompl
or
inc
cmpsl
push
out
xchg
call
cld
out
jle
mov
lea
and
shl
incb
jne
frstor
jo
out
or
sbb
sbb
or
inc
call
fldl
or
fstpl
clc
sahf
dec
jne
pop
push
sbb
push
or
test
or
sub
mov
jbe
fildl
je
dec
je
dec
jne
xor
jmp
or
add
or
jecxz
pop
scas
ret
cmpsl
lcall
addr16
mov
ja
push
push
insl
inc
or
adc
cs
mov
mov
addr16
mov
sub
add
mov
jo
inc
and
sarb
pop
sub
xor
jl
or
add
add
sbb
das
les
std
fimull
xlat
mov
jne
data16
inc
add
outsb
and
scas
dec
jmp
push
add
cwtl
jmp
mov
add
adc
neg
sbb
add
sbb
pop
sub
mov
lea
jb
add
cld
inc
or
adc
inc
shrl
push
push
or
shld
push
cs
or
loopne
adc
mov
popa
jo
add
and
push
call
push
mov
inc
pusha
mov
push
sbb
adc
pusha
adc
lds
pop
pop
push
push
pop
cmp
xchg
inc
daa
xchg
push
add
inc
sbb
add
sahf
or
faddl
push
pop
mov
pop
mov
dec
sbb
fs
xchg
lock
push
int3
insb
sub
push
mov
cmpsl
mov
cmp
cmp
mov
jne
mov
push
or
aas
push
icebp
rcrb
pop
xchg
mov
push
pop
jmp
cmpsl
incl
jno
sbb
add
shll
xchg
and
aam
xlat
movsl
nop
fwait
aas
aam
pop
jmp
sub
add
sub
fisubrl
loopne
out
mov
dec
or
test
pop
push
mov
mov
push
and
add
adc
push
fidivs
fsubl
pop
mov
jle
icebp
movl
or
push
insb
imulb
push
inc
clc
test
pop
and
pop
push
pop
jl
popa
xor
jg
inc
or
xor
jmp
ja
push
sbb
xor
push
pushf
ret
rorb
push
xchg
sbb
leave
cmp
dec
and
cmp
mov
jl
mov
cmp
jle
sbb
ret
jne
cltd
xor
sub
push
cmp
incl
lods
jg
clc
jnp
cltd
xor
sub
inc
cltd
idiv
ds
test
cld
add
xchg
imul
add
and
adc
lods
mov
adc
ret
dec
sub
add
jg
jo
idivb
dec
rcr
sbb
cmp
cmp
sub
icebp
sub
add
pop
movl
adc
add
inc
scas
push
sbb
pop
lock
jge
push
jle
lea
cmp
jle
sub
es
sbb
mov
sub
outsl
sub
cmp
adc
mov
mov
mov
adc
test
daa
adc
imul
in
inc
push
xchg
pop
je
or
mov
inc
cli
cmp
sti
testb
sbb
pop
movsbl
mov
jle
insb
adc
adc
cld
sub
mov
imul
es
and
leave
gs
jg
hlt
push
in
pop
pop
cs
adc
xor
fld
mov
sub
add
mov
xor
mov
popa
jl
sbb
fisttpl
inc
ret
dec
and
push
and
jle
ja
sbb
sbb
sub
jl
push
arpl
jbe
sub
sbb
lock
mov
push
jg,pn
or
mov
jl
sbb
mov
stc
mov
imulb
sbb
pusha
test
jmp
mov
mov
nop
into
pop
cmpsb
cmp
jl
sub
mov
xor
push
fisubs
mov
adc
mov
sub
inc
mov
mov
cli
push
jmp
mov
xchg
mov
inc
das
psubsb
inc
xor
mov
test
sub
add
push
ss
xchg
pop
cld
sbb
xor
repnz
inc
sbb
pop
mov
and
push
jl
add
ljmp
mov
add
jne
push
call
insl
sub
lea
jb
jns
push
xor
and
jg
clc
add
xchg
fnsave
cmp
cmp
push
sbb
ficompl
je
xchg
cs
mov
cmp
jb
or
pop
sub
fidivs
or
rcll
mov
inc
je
inc
in
add
in
push
inc
adc
jmp
cmpsl
je
sahf
inc
xchg
and
pop
shrl
loopne
pusha
and
dec
adc
pop
xlat
sti
and
or
push
and
sub
jae
lock
push
add
ss
xor
jae
pop
inc
sbb
xor
mov
and
addr16
jnp
popf
out
push
pop
mov
adc
sub
bound
add
icebp
adc
mov
add
je
cmp
xchg
es
cmp
xchg
inc
or
or
test
ret
ret
xorl
cmpl
hlt
sub
gs
mov
sbb
sti
push
cmp
push
jmp
push
pop
mov
daa
bound
arpl
mov
push
add
mov
xor
inc
loope
dec
repz
push
adc
js
iret
fcomps
or
fcoms
addl
inc
call
cmpsb
addb
fwait
loope
leave
leave
outsb
shll
cmp
mov
mov
arpl
setno
push
sbb
inc
je
cs
popf
xchg
push
cmp
push
mov
push
xchg
aaa
rorl
xchg
add
leave
and
and
push
mov
push
leave
cmp
jnp
rcll
ss
leave
fs
mov
add
push
cmp
push
or
xor
sbb
and
test
inc
dec
jmp
add
xor
lods
push
repz
push
jecxz
aam
jge
cmpsb
mov
xchg
sub
in
mov
and
mov
xchg
jmp
ja
cld
insl
xor
xor
lcall
and
je
cmp
jne
cmp
jne
test
adc
inc
mov
jne
inc
frstor
cmp
mov
cmp
adc
ret
cmp
adc
js
adc
jo
or
or
daa
rolb
sbb
cli
test
je
jmp
cli
and
cmp
pop
leave
aas
cmp
xor
jle
pop
mov
mov
pop
fldt
xor
out
test
inc
cmp
nop
or
push
jo
mov
xor
push
or
out
push
mov
cld
inc
jmp
movsb
push
ljmp
mov
mov
cmpsl
jmp
mov
ficomps
mulb
lock
loope
mov
fdivrl
sub
push
je
mov
mov
nopl
add
push
sub
sub
add
jno
and
ja
insl
fwait
insb
mov
cmova
or
roll
inc
push
add
hlt
sub
or
jno
sahf
dec
jle
push
sbb
orl
stos
mov
adc
pop
jnp
insl
int3
jmp
xor
out
sub
mov
mov
rorb
inc
je
es
cmp
rcrl
pushf
inc
xchg
jne
inc
mov
cmp
loopne
outsb
decl
xchg
ret
sbb
pop
xor
xchg
sti
add
sub
sub
jmp
fldl
fsubr
cmp
inc
cmp
adc
decb
rcll
cmp
push
push
shrb
clc
pop
gs
add
sub
cmp
adc
jl
ret
xor
dec
push
push
push
inc
or
adc
inc
xchg
sub
lock
lock
mov
dec
repz
mov
sub
or
push
sub
cmp
clc
call
aaa
dec
mov
je
jmp
mov
sbb
popl
sub
dec
jmp
addr16
or
sub
jo
cmc
roll
add
fldenv
or
sub
jmp
push
nop
cmpsb
or
jns
xor
push
test
and
sbb
icebp
push
jl
sub
push
fcoml
mov
push
aam
jl
mov
pop
rorb
xor
mov
mov
adc
cs
in
iret
jno
movsb
cmp
jb
mov
pop
lods
sub
jbe
sbb
sub
jle
xchg
jne
aaa
in
ret
xchg
popa
push
push
mov
jl
xchg
pop
filds
sub
push
push
jne
sub
test
push
pop
pushf
pop
push
aad
push
sbb
ret
je
lock
dec
testb
adc
dec
mov
xor
adc
sti
fwait
pushf
push
jge
cmpb
je
lock
incl
push
sub
out
add
out
lock
rclb
and
fdivrl
mov
mov
in
pop
xor
cwtl
and
call
aad
or
mov
and
cmp
lret
add
movsb
pop
xor
sbb
or
and
push
jp
add
sbb
dec
pop
adc
push
and
call
mov
stos
je
cmp
sbb
std
and
mov
scas
inc
cld
mov
adc
je
push
push
hlt
shlb
xor
into
jne
fs
sbb
jle
vpunpcklwd
mov
adc
lock
push
dec
lods
jo
adc
push
mov
push
lahf
dec
jns
call
out
aas
andl
into
mov
mov
mov
add
cwtl
inc
outsl
lods
push
sbb
xor
sub
mov
inc
adc
shll
js
rolb
pop
lods
add
ss
add
sub
dec
xor
inc
adc
xchg
out
mov
push
add
pop
add
lcall
inc
add
add
cmpsl
imul
sbb
mov
sbb
sub
shll
aaa
loopne
pop
jle
xor
and
mov
and
xor
ds
mov
je
mov
mov
adc
push
dec
jns
xor
jmp
or
shlb
cmc
sub
push
jl
add
pop
push
sub
fdivrs
xor
cmp
jo
push
sbb
cmp
sub
lret
mov
cmp
sub
add
ret
repnz
cmpl
adc
sbb
in
call
or
pop
mov
int3
mov
btc
inc
add
push
stc
loop
fiaddl
dec
js
mov
lret
test
jge
sahf
sbb
sbb
and
xchg
into
je
adc
jg
dec
movsl
xor
inc
lock
cmp
js
jns
leave
jge
sub
push
loop
mov
movsl
lret
xor
pop
push
cli
lea
andb
inc
cld
cmp
mov
mov
add
mov
lock
pop
ror
movsl
call
lret
xor
rol
push
add
push
fdiv
xchg
hlt
ret
lods
mov
dec
mov
sbb
adc
mov
cli
inc
push
repz
xor
insl
mov
adc
sbb
dec
mov
add
lock
jle
je
cmp
or
push
push
push
sbb
add
jns
int
push
add
sbb
insb
jle
push
fisttps
push
int3
mov
out
jl
push
add
sbb
push
push
sbb
xchg
add
imul
pop
jl
clc
xor
adc
sub
inc
adc
sbb
jle
inc
dec
cmpsb
std
jge
cmp
pop
pop
fidivrl
add
push
mov
pop
dec
mov
sub
adc
pop
gs
lods
or
cmp
mov
in
and
xor
mov
cs
fadds
aad
push
dec
adc
ljmp
clc
mov
shlb
clc
mov
push
shlb
sbb
cli
sbb
cmp
call
clc
mov
scas
sbb
mov
jle
mov
rorl
push
push
push
cmpsb
sbb
jmp
out
in
movsb
mov
sbbb
daa
cld
shlb
mov
pop
or
or
push
and
cld
and
or
rclb
add
ljmp
jp
pusha
arpl
and
add
jb
mov
mov
push
dec
pop
popf
orb
add
in
sbbb
push
xor
sbb
xchg
jb
or
push
or
sbb
add
cmp
push
and
push
jl
jb
adc
sub
or
adc
mov
aaa
jae
enter
or
push
shll
inc
cs
add
and
incb
stc
cmp
add
clc
lods
lcall
mov
scas
enter
out
mov
sti
inc
adc
test
xchg
dec
call
and
aas
repnz
mov
jno
xor
inc
je
xor
mov
push
push
rorl
push
inc
fwait
xor
shrb
dec
pop
pop
adc
jbe
pop
or
xlat
rcll
add
mov
inc
int3
fnstenv
jmp
push
push
mov
add
jge
mov
add
sbb
sbb
add
inc
push
push
pop
mov
pop
push
sub
roll
js
add
aas
xor
add
push
jns
push
shl
dec
pop
jo
pop
mov
ret
pop
or
clc
add
xchg
out
lods
or
push
rcll
dec
and
sub
push
push
sub
ja
mov
adc
cmp
in
and
cmc
ret
mov
out
xchg
push
pop
add
add
mov
sbb
adc
add
movsb
mov
dec
cmpb
testl
call
scas
jge
mov
adc
and
adc
xor
push
add
and
aas
mov
aaa
int3
lock
jge
lea
mov
push
das
loope
mov
sarb
sbb
sti
ja
dec
fdivrl
jmp
adc
sub
data16
cs
lahf
and
hlt
pop
cmp
testl
enterw
incl
pop
add
add
test
mov
jmp
jo
inc
pop
fsub
jecxz
push
fs
jne
add
shr
push
pusha
mov
sub
jo
pop
xchg
mov
push
xor
cmpb
mov
push
adc
loopne
dec
mov
sub
loop
pop
push
das
mov
orl
repnz
es
bound
sahf
add
add
sbb
sar
add
push
pop
mov
xor
jno
les
adc
push
sbb
decl
sbb
xor
adc
insl
push
test
test
adc
shrb
dec
stc
dec
aad
sbb
inc
xchg
or
imul
mov
and
jmp
ret
scas
push
mov
push
lock
lahf
xchg
mov
rcrb
pop
insl
inc
mov
push
mov
sbbb
imul
xor
outsl
test
push
push
push
in
shrb
sahf
les
test
fcomi
ret
int3
mov
xchg
xchg
scas
rolb
pusha
push
repnz
mov
loop
rcrl
cmp
call
adc
je
adc
vmovhpd
inc
je
xor
cmp
je
ss
in
mov
adc
dec
cli
mov
ja
addb
stos
adc
sub
jo
sub
xchg
or
jecxz
and
inc
sub
dec
movsb
ss
sub
adc
sbb
mov
jmp
mov
jl
shll
sub
or
sub
ror
mov
and
mov
movl
push
jb
jle
jo
ret
mov
cs
push
add
test
adc
data16
in
push
or
addl
mov
xchg
xor
inc
push
mov
xchg
mov
push
add
dec
cmp
sbb
js
repz
add
sub
push
mov
iret
movsl
loope
inc
and
inc
pop
sbb
xchg
push
cwtl
shrb
mov
jno
or
jg
jl
fstpl
in
add
insl
inc
add
and
xor
sbb
ficomps
dec
je
dec
jne
insb
je
jmp
fisubrs
add
out
sub
and
je
dec
jne
mov
dec
xchg
scas
ret
das
add
outsb
pop
xor
adc
xlat
adc
insb
xcrypt-cbc
cmpsl
mov
ret
lea
fwait
jge
mov
cmovbe
mov
js
popf
or
clc
pop
sbb
push
inc
push
test
mov
xor
pushf
jo
push
jle
cmp
xchg
add
dec
jp
movb
xor
movsb
cmp
dec
push
into
xor
test
aad
mov
jne
daa
repnz
pop
push
repz
dec
cmp
jo,pt
es
outsl
nop
je
int3
push
or
or
cmp
push
push
push
xchg
cmp
mov
pop
outsl
and
movsb
cmp
addr16
jmp
push
daa
pop
in
cwtl
cld
xor
sub
insb
pop
sbb
push
push
xchg
cmpsl
das
or
xchg
xor
cmpb
or
adc
mov
sub
fs
push
insb
pushf
cmp
stc
sbb
insb
andb
cs
pop
cs
mov
mov
loope
push
adc
push
js
xchg
push
xchg
pop
adc
test
jnp
popa
loopne
pushf
or
aas
and
adc
and
addr16
mov
adc
cmp
jmp
lods
lods
pop
adc
shl
repnz
cmp
pop
adc
pop
ja
cmp
sbb
lock
ret
loopne
pop
xor
mov
xor
push
lods
cmp
and
mov
pop
xchg
aas
fs
or
jle
push
popf
enter
stos
sub
testb
cmp
popf
push
jmp
and
push
or
lcall
xchg
mov
test
popf
push
push
push
out
xchg
mov
js
inc
lods
sub
inc
cwtl
push
insb
sbb
not
and
mov
push
pop
mov
xchg
pop
jbe
jne
loope
test
push
in
and
in
fisttpl
add
cmp
xor
push
lock
jo
jl
ret
loop
ret
adc
push
mov
sub
pop
mov
mov
aaa
scas
sub
inc
cmp
jb
and
or
test
repz
fdiv
push
pop
mov
test
ds
test
add
punpcklwd
sbb
push
pop
or
add
int
dec
imul
andb
sbb
cs
push
push
adc
fmuls
push
push
rcr
and
jno
push
ffreep
movl
inc
fildll
add
lret
inc
call
test
pusha
sbb
jmp
add
sbb
enter
add
sub
adcl
movsl
cs
outsl
xor
dec
adc
pop
mov
ret
xchg
fdivrs
sbb
cld
fldcw
xchg
adc
push
mov
or
lea
insb
xor
push
addb
xchg
adc
lahf
and
sub
mov
pop
lods
add
pop
mov
test
vorps
mov
loop
pop
inc
adc
ds
mov
les
inc
dec
add
push
cs
mov
adc
enter
cmp
or
dec
fcoms
clc
push
test
mov
cmp
add
inc
mov
xchg
sbb
jle
pusha
and
dec
sbb
push
add
sub
js
lods
lods
jecxz
dec
pop
or
pop
add
das
testl
and
js
inc
dec
mov
fcmovb
rclb
mov
pop
les
pop
aas
add
push
lods
xor
popf
aas
adc
jle
inc
mov
loop
cmp
ljmp
or
sarb
fildll
or
or
fisubrl
xor
mov
sbb
and
jb
xchg
into
jo
push
jns
mov
xor
idivb
pop
movl
mov
add
inc
sub
es
dec
test
sbb
jp
mov
inc
or
dec
jecxz
add
mov
mov
jl
jne
cmp
pop
cmp
push
pop
adc
pusha
push
loopne
push
shrb
mov
filds
loop
repnz
adc
jle
mov
jecxz
pop
jo
adc
lock
or
pop
push
or
dec
in
sbb
lods
les
cmp
jne
or
inc
movb
sti
lcall
adc
femms
or
test
mov
jne
rcrl
xor
jnp
ret
lret
pushl
addr16
sub
lea
cmp
jb
add
mov
mov
ret
fistpll
or
int
sbb
int
loopne
jl
jg
imul
imul
pop
lea
add
mulb
push
jecxz
push
int
jae
clc
cmp
pop
ds
enter
jbe
ds
pop
loope
add
orb
or
lret
mov
push
ret
test
adc
jae
enter
pop
push
lahf
mov
shl
cmpl
je
cmp
outsl
or
je
mov
in
xchg
inc
clc
jb
lea
and
xchg
movb
pop
adc
sar
xor
loope
decl
or
movsb
popa
mov
jo
loop
push
or
rolb
adc
push
data16
mov
xor
add
sbb
popf
test
push
fisubrl
icebp
js
mov
pop
jno
sahf
xchg
in
filds
sbb
dec
push
fs
fildl
adc
sub
add
xlat
int3
loopne
inc
or
push
or
or
or
movsb
mov
adc
pop
sbb
or
stc
or
shrb
adc
and
sub
cmp
jbe
aaa
jge
pop
push
or
ds
sbb
xorl
add
or
push
push
pop
jo
dec
jbe
push
daa
iret
outsl
inc
cmp
sub
or
push
dec
hlt
outsb
mov
sbb
test
mov
jle
push
popa
cmp
inc
faddl
cwtl
push
fwait
inc
inc
sub
popf
adc
sbb
pop
jle
mov
xchg
fsts
sbb
jmp
dec
loopne
dec
mov
sbb
fwait
rorb
mov
cmc
cmp
add
ret
jne
pop
mov
fnsave
ds
sbb
addr16
dec
jns
push
aaa
faddl
cmp
cmp
sar
je
lret
daa
leave
pushf
xor
push
mov
shll
xor
fwait
mov
aad
and
addr16
sbb
cmp
cmovo
mov
dec
in
lret
in
mov
add
mov
pop
leave
xor
pusha
and
stc
sahf
in
addl
xchg
mov
popa
push
mov
je
clc
loope
in
sub
push
aam
dec
adc
neg
mov
cmp
xor
sbb
xlat
add
in
push
dec
out
rcrb
sbb
insb
xor
aas
fdivrl
fnstsw
xchg
dec
or
jnp
inc
in
or
push
push
dec
pop
pop
pop
insl
push
mov
mov
call
cmpl
xor
popf
sub
insb
push
pop
stos
push
clc
cmp
jne
icebp
push
adc
icebp
aaa
ret
mov
lds
cld
outsl
mov
lcall
jge
sub
lea
adc
or
stos
mov
xor
sub
nop
push
lock
and
cld
or
nop
jmp
push
jbe
cmpl
add
call
pop
add
test
push
je
sarb
cmp
mov
ljmp
out
jmp
pop
sub
incb
fisttpl
sub
sahf
rorb
rcpps
inc
mov
cltd
lods
pop
insb
shrb
ret
scas
jb
or
fsubrs
ret
cmp
movsb
mov
mov
rol
std
push
inc
xchg
push
push
sbb
and
repnz
xchg
sbb
xchg
dec
cs
inc
ss
mov
xchg
jge
inc
cwtl
mov
push
push
add
push
push
inc
pop
mov
add
pop
push
int
push
iret
ss
fsubrl
daa
push
or
xor
dec
pop
adc
add
repnz
jne
inc
test
xchg
sarb
mov
lods
jne
movsb
mov
push
push
and
or
fwait
outsb
je
je
jge
fidivrl
xchg
loope
or
sarl
fcmovu
test
xor
jmp
fsts
mov
pop
pop
adc
xor
or
mov
jge
sub
fmull
or
add
dec
jl
sub
sub
xor
or
mov
sub
addb
aaa
js
cmc
jle
dec
or
enter
or
xor
push
add
loop
or
dec
xchg
mov
mov
dec
pop
push
add
mov
or
mov
jnp
xor
or
pop
sbb
or
push
mov
out
mov
call
pop
and
pop
scas
in
mov
mov
sub
push
orl
and
arpl
sub
dec
mov
gs
rolb
cmp
xor
sahf
ret
add
push
and
js
adc
test
ss
scas
xchg
sbb
addr16
es
add
add
push
call
adc
cwtl
adcb
sbb
outsb
mov
iret
inc
scas
ja
and
ficomps
cmp
pop
jmp
insb
mov
and
cmp
cmpsl
je
test
xor
into
adc
or
cmp
dec
aas
insb
push
les
into
out
push
ljmp
lods
or
lahf
cmp
std
decl
mov
pop
stos
lret
xchg
out
add
add
lods
push
push
leave
enter
inc
xchg
xor
add
mov
orb
dec
mov
add
or
sti
mov
test
pop
call
push
dec
push
arpl
mov
jl
sub
sbb
add
jmp
jne
adc
loope
out
cmc
sbb
pop
sub
jne
and
out
add
fstpt
pop
pop
sbb
push
lock
add
notl
test
call
adc
add
popa
test
xchg
pop
je
lea
cmp
inc
jb
mov
aad
sub
pop
pop
insb
add
mov
sbb
inc
rep
mov
lret
sub
sub
add
jo
xor
push
jne
pop
jp
add
adc
xchg
or
lahf
jmp
int3
aas
adc
mov
add
mov
adc
loop
inc
push
xor
cmpl
jne
cmp
xchg
bound
test
xor
and
push
push
xchg
stos
cmc
xor
int
cmpsl
add
jbe
xor
xor
adc
cmp
mov
dec
sbb
lahf
push
ss
filds
inc
or
xor
sub
in
lods
push
rcll
push
xchg
xor
mov
add
adc
jge
pop
clc
jmp
or
xchg
push
sbbl
je
adc
jne
xor
cltd
inc
loopne
test
lahf
aam
fdivs
mov
push
push
testl
jle
jp
xlat
push
mov
pop
hlt
movsb
outsl
mov
cmp
inc
jmp
lea
ret
mov
jg
cmp
aad
inc
add
in
add
inc
jnp
mov
adc
jnp
push
mov
xchg
rorl
push
adc
stos
int3
aas
add
int
scas
push
xchg
inc
push
cmp
sub
ss
sbb
dec
add
adc
test
xchg
lahf
xchg
adc
adc
adc
sahf
adc
add
sub
in
loopne
mov
mov
lods
push
xor
or
test
or
call
inc
add
push
movsl
lods
sbb
repnz
inc
lahf
mov
in
sbbb
addl
repz
mov
aam
xchg
xchg
mov
jle
mov
hlt
xor
or
ss
push
mov
push
adc
movsb
sarb
sbb
push
ret
mov
jno
pop
std
and
jo
repnz
inc
fistpl
lret
adc
insl
and
push
cmp
sahf
push
push
push
enter
insl
aas
cmp
cs
jo
inc
pop
pop
cmp
adcl
jle
sbb
inc
mov
mov
call
mov
add
loopne
sbb
lock
mov
sbb
dec
pop
pop
imul
fbld
xchg
mov
test
mov
cmp
popf
rorb
and
push
add
push
loopne
push
mov
cmp
out
inc
add
nop
sarb
dec
jo,pn
pop
jl
mov
ds
call
mov
adc
xchg
in
dec
fs
aas
jl
test
das
inc
jb
mov
jmp
and
or
xor
sbb
call
inc
jecxz
pop
verr
push
mov
cmp
jne
mov
push
jb
pop
add
push
or
add
sub
movsb
fdivr
push
rcrb
bound
pop
aad
in
cmpsb
sub
xor
test
insb
jle
out
sbb
mov
push
pop
call
xchg
sub
add
shrb
cmp
and
xchg
adc
in
in
sbb
cltd
stos
push
pop
pop
clc
repnz
xor
iret
push
je
or
or
push
or
scas
popf
cmpsb
jl
dec
fdivs
sbb
or
lods
push
xor
lds
or
xchg
dec
push
cmp
push
fsubl
inc
lds
mov
or
inc
ror
or
pushf
lahf
xchg
add
shl
loope
cmp
xor
aas
enter
ret
add
cmp
cmp
rol
shlb
inc
xlat
inc
repz
xor
lods
je
test
dec
push
pop
sub
push
cmp
outsb
adc
iret
add
xor
sbb
sbb
icebp
pop
jmp
mov
push
push
push
lds
test
jbe
adc
mov
push
adc
or
sahf
adc
jo
xor
xor
addb
cltd
in
mov
andb
inc
hlt
and
adc
add
pop
or
shrb
sar
add
pop
and
xchg
adc
mov
aas
push
movsl
imul
pusha
test
cmpsl
pop
pop
cmc
pop
sub
mov
and
insb
aaa
jg
adcb
xorl
mov
lods
lahf
ret
pop
xchg
jge
fs
aam
push
ret
ficomps
fst
add
dec
clc
jg
or
xchg
cmp
push
js
leave
cmp
sete
mov
mov
enter
arpl
cwtl
inc
lcall
jmp
lahf
cmp
test
js
mov
enter
addr16
pop
shrl
pushf
ret
iret
sbb
jl
mov
dec
xchg
dec
cmp
dec
dec
rsm
pop
into
movl
sbb
rorb
sbbb
sub
inc
cltd
pop
and
insl
add
mov
and
add
cmp
jne
sbb
jo,pt
lds
jl
cmp
mov
xchg
push
cmp
lahf
push
xor
jnp
rcrb
mov
addb
and
adc
add
aas
push
inc
ljmp
into
and
lock
jp
mov
dec
mov
jmp
inc
cld
pop
push
cmc
cmc
inc
push
add
sub
icebp
jp
popf
into
push
add
lock
test
and
inc
js
add
dec
xchg
or
je
push
or
add
add
or
repz
je
jne
sub
je
scas
adc
xor
jbe
mov
call
ja
shrl
rolb
push
shll
into
sar
das
push
mov
adc
xchg
movsl
push
push
dec
pop
lahf
xlat
pop
cmp
xchg
or
and
lcall
dec
jle
mov
cmpsb
push
push
jg
sbb
push
ljmp
sub
xor
aaa
outsb
bound
ret
push
cli
push
outsl
sbb
cmp
shlb
das
push
and
xor
jae
mov
adcl
or
jg
sbb
and
jbe
or
xor
push
xchg
adc
fidivl
adc
jmp
jg
pop
inc
jg
sbb
and
int3
dec
mov
push
or
push
push
dec
push
fwait
js
out
sbb
inc
fimull
cld
sbb
sub
xchg
mov
jne
das
adc
jmp
jnp
idivl
pop
cmpl
je
aaa
push
or
out
lret
nop
xchg
jne
mov
and
pop
cmpsl
das
je
rorl
adc
sub
mov
imul
movsl
xor
mov
push
adc
pop
mov
out
roll
and
fneni(8087
mov
add
inc
inc
xchg
mov
in
dec
and
sub
push
mov
scas
jmp
scas
push
jmp
push
out
jl
xor
data16
add
stc
pop
adc
rorb
sbb
clc
imulb
inc
dec
and
mov
dec
or
std
inc
mov
pop
js
sub
daa
pop
shlb
add
dec
adc
xor
stc
xor
pusha
inc
aas
cmp
shr
jne
push
daa
negb
inc
es
jne
push
repnz
icebp
clc
or
pop
arpl
cmp
jle
xchg
in
pop
or
mov
cmp
or
imul
jmp
pop
dec
lods
sbb
scas
ror
cltd
jl
adc
cs
call
cmp
rcll
std
inc
cli
mov
loop
mov
inc
sub
add
xchg
cmp
shl
mov
mov
rcll
push
sbb
test
push
test
sbb
enter
or
fldcw
sub
push
adc
test
pop
test
mov
dec
mov
pop
add
or
into
subb
ret
jle
push
int3
push
pop
dec
xor
cmp
inc
cmp
sahf
push
les
call
in
sbb
mov
push
js
ret
pop
addb
pop
call
inc
inc
sbb
cmp
cmp
lods
ret
aam
cmp
ja
inc
lea
or
into
mov
mov
lret
push
xor
push
adc
pop
add
dec
cmp
cmp
lcall
mov
or
mov
fwait
sbb
roll
pop
mov
mov
fadds
sarl
rolb
add
mov
ds
and
inc
xor
dec
add
dec
or
xchg
cmp
push
ss
push
xchg
push
or
xchg
cmp
mov
xchg
add
pushl
rcr
jl
add
push
push
lcall
fldenv
aaa
add
test
stos
call
push
cmp
out
push
cmp
and
pop
sbb
sub
movsl
mov
hlt
push
push
test
popa
jne
pusha
jnp
xchg
and
fisttps
cmp
push
mov
lock
push
sub
add
pop
mov
add
and
je
add
movsl
pop
in
mov
popl
cmp
mov
xchg
test
push
pop
dec
jle
pop
js
sbb
mov
cltd
scas
jle
lret
push
jae
push
push
insl
cmc
add
and
add
lods
je
outsb
cmpsb
cmp
idiv
cmp
loop
neg
sbb
mov
loopne
ret
or
push
hlt
sub
pop
les
std
lahf
cmp
jne
or
jmp
enter
add
sub
or
dec
jne
call
addb
mov
in
inc
push
inc
jne
sbb
mov
push
pop
add
sbb
xor
mov
cmpsb
add
ss
mov
or
js
mov
repz
mov
adc
sbb
dec
push
lea
lret
pop
addb
movsl
push
mov
xchg
shrb
iret
inc
mov
mov
pusha
mov
and
mov
cmp
lock
cmp
jle
sub
add
clc
pop
jle
xor
push
jo,pn
jge
rcrb
adc
jl
loopne
popf
and
mov
xchg
lea
xchg
push
inc
or
xchg
jne
or
test
ret
jo
insb
pop
inc
fwait
nop
inc
pop
shlb
pop
lea
in
fmull
push
adcl
mov
pop
mull
pop
mov
sub
jo
mov
push
push
push
movsl
and
mov
and
adc
add
or
sti
mov
sbb
dec
jae
and
push
leave
outsb
inc
sbb
mov
inc
push
sub
cmp
cmc
mov
cmp
in
dec
or
add
inc
push
mov
js
rcrb
mov
mov
lret
add
daa
pusha
or
test
jb
push
add
cld
mov
pop
push
push
lea
fxch
stos
scas
loop
mov
nop
cmp
mov
jge
push
jge
inc
sbbl
dec
sub
pusha
sbb
cmp
inc
sahf
push
push
sub
sahf
sbb
add
lds
xor
inc
fs
shll
rclb
das
push
pop
and
mov
leave
cmp
dec
add
fisubrl
sbb
test
insb
dec
in
jo
push
ss
scas
push
jmp
sti
sahf
out
mov
shlb
mov
sub
inc
mov
loopne
xor
std
and
mov
inc
push
test
fisubl
or
inc
adc
rcll
cltd
mov
pop
pop
pop
inc
fwait
jbe
mov
push
push
inc
dec
sbb
cmpb
rcrb
adc
nop
cmp
mov
lea
inc
or
fstpt
xchg
int
jg
call
push
rorl
fcoms
xchg
rcrb
mov
ret
into
push
out
pop
mov
mov
mov
adc
jo
adc
sub
and
sbb
mov
or
jl
sub
sarl
loop
add
cmc
jns
jno
mov
das
cmp
or
sbb
and
or
or
push
push
insl
or
push
mov
test
shlb
adc
push
inc
push
or
out
ret
dec
mov
popf
insb
push
push
jno
aaa
cmpsb
sbb
les
je
cmp
sub
push
or
hlt
push
add
push
cmpsl
shr
or
jnp
pusha
xchg
or
mov
addb
jmp
pop
loope
enter
push
aas
adc
subb
rorl
aas
sbb
test
push
lahf
sub
dec
and
mov
es
pop
pop
lahf
jbe
loop
mov
add
scas
jl
ds
add
mov
mov
setne
dec
and
es
in
pop
push
or
sbb
andl
cmp
lea
mov
loope
xor
les
pop
push
pop
lods
movl
sbb
fisubl
add
dec
lea
insl
scas
cmp
test
fmulp
scas
mov
cmp
or
and
xchg
mov
cmpsb
mov
add
cmpsb
xchg
lahf
popf
or
sub
in
aaa
stos
sbb
lcall
or
sub
pop
movb
in
loop
pop
in
or
sbb
sbb
push
subl
adc
test
pop
lods
shrb
popf
insb
cmc
push
test
rorl
pop
push
inc
sub
mov
mov
or
mov
xchg
mov
js
jmp
and
popl
addl
cmp
fsubs
mov
je
add
jns
mov
scas
xor
or
testl
xor
outsl
jns
enter
es
jl
orl
jo
pop
subl
or
jo
inc
jo
xchg
lahf
lahf
or
dec
out
rcl
mov
push
cmp
out
push
pop
pop
div
movsb
ret
loopne
push
sbb
jl
mov
fisubs
push
je
adc
pop
movsl
popf
adc
das
mov
sbb
add
adc
mov
push
sbb
faddp
push
nop
movsl
fstps
orl
dec
sub
cwtl
xchg
pop
fisubrl
xlat
push
dec
pushw
mov
xor
sbb
and
xchg
xchg
sub
pop
daa
out
cmp
push
push
push
test
aam
jne
mov
repnz
loope
or
pop
ret
std
cmpsb
mov
mov
imul
jg
push
mov
push
lea
mov
adcb
add
inc
push
push
addb
sti
adc
lods
mov
pushf
mov
pop
ds
cmp
add
sahf
imul
insl
adc
pushf
pushf
mov
and
cmp
cmp
push
loope
sbb
imul
add
jae
out
mov
push
add
or
lods
gs
popa
push
or
push
pop
outsb
add
sti
mov
mov
add
mov
add
jns
push
rolb
imul
data16
sbb
cmp
xor
pop
loope
mov
and
jo
insl
movsb
imul
pop
pop
pusha
push
fs
insb
push
cmc
push
jmp
dec
add
and
enter
xor
test
cmc
test
sub
pop
jp
push
test
add
mov
add
and
jnp
add
adc
mov
lret
jae
mov
inc
cmpsb
cwtl
mov
dec
sbb
inc
push
inc
sbb
mov
push
push
jmp
or
add
mov
ffree
push
or
and
mov
sbb
add
orb
loope
imul
mov
scas
bound
adc
shlb
imul
fmull
inc
arpl
mov
jns
nop
mov
cmp
mov
cltd
repnz
jbe
mov
mov
mov
push
add
inc
and
cmp
or
stc
fists
stos
js
xchg
adc
bound
push
adc
mov
mov
icebp
push
pop
push
xor
xchg
dec
fs
adc
test
xor
push
mov
mov
push
mov
xor
and
mov
add
dec
fimuls
jmp
inc
jo
je
push
push
add
sbb
or
mov
add
xchg
mov
fimull
xchg
sub
ljmp
push
add
fimuls
je
adc
sub
pop
sub
sbb
rolb
mov
mov
sbb
inc
mov
ds
cmp
inc
adc
mov
xchg
jne
leave
push
xor
idivl
jo
inc
push
ficomps
push
dec
nop
rcr
mov
add
cs
inc
outsl
add
fstpt
sti
push
pop
shlb
pop
sbb
mov
mov
dec
filds
adc
xchg
add
rol
inc
lcall
inc
mov
xchg
sbb
xchg
dec
mov
push
stos
jb
divps
testb
and
mov
dec
aam
mov
out
cmp
nop
and
push
push
mov
dec
fldenv
cmc
mov
push
xor
cmp
and
push
add
add
jnp
mov
stc
push
inc
xchg
mov
push
xor
inc
lods
xorb
fs
pop
les
je
loopne
pusha
mov
push
and
add
orb
lods
mov
je
push
mov
xchg
test
push
adc
xor
push
inc
xlat
push
sahf
ret
and
pop
stc
sbb
xchg
lds
add
add
cli
push
or
enter
pop
stos
and
clc
add
xchg
adc
or
out
or
mov
mov
xchg
xchg
pushf
mov
cli
add
mov
and
jbe
jge
xchg
mov
call
cmc
push
mov
push
mov
cmp
repz
sbb
jns
mov
iret
mull
ret
ds
ror
repz
and
outsl
scas
iret
push
test
iret
mov
pushf
jg
adc
pop
fsubr
add
push
test
pop
enter
sub
push
roll
mov
in
inc
lretw
test
dec
or
out
add
and
push
and
pop
mov
dec
insb
je
push
xor
inc
ss
insb
mov
jge
sub
dec
xchg
mov
rcl
fsubl
andb
mov
and
cmp
jmp
sbb
xchg
mov
out
cwtl
pushf
push
jb
pop
mov
jb
lods
mov
mov
push
mov
popa
push
jb
xchg
movsl
mov
lcall
sbb
out
test
jns
aad
std
adc
cmp
js
lods
test
dec
mov
add
dec
pop
pop
lock
sahf
push
adc
add
clc
add
jb
jp
add
push
mov
mov
loope
jp
or
push
dec
aam
adc
scas
push
mov
stos
ds
pop
xor
mov
xchg
cli
jl
mov
cmp
push
push
push
jp
jl
repz
int
or
int
arpl
inc
jl
daa
add
mov
out
dec
sub
iret
in
and
lods
sub
add
xor
and
cmpsl
mov
outsl
out
push
rolb
xlat
test
sbb
setle
add
push
mov
dec
jo
add
cmp
adcl
or
shrl
add
add
push
adcl
inc
rol
roll
xchg
lahf
mov
or
ret
js
aaa
jl
aam
inc
jno
jns
cmpsb
xor
dec
js
ret
mov
js
in
fwait
lea
mov
add
pop
loop
andb
scas
fs
movl
mov
xchg
sbb
mov
mov
in
add
mov
dec
pop
push
addl
jne
or
int3
rep
add
je
xlat
icebp
rol
jo
les
lea
cmp
xor
adc
imul
add
add
out
mov
inc
sbb
iret
pop
leave
sub
arpl
idiv
cmp
fs
lods
mov
mov
les
inc
add
pop
jno
mov
outsb
add
adc
or
lods
in
mov
mov
aas
xor
and
sub
or
sbb
pusha
lods
mov
sub
dec
fmuls
pop
nop
scas
mov
adc
inc
push
js
into
cli
lretw
push
sbb
outsb
outsb
outsb
or
je
add
push
push
jg
or
mov
or
in
ret
mov
sbb
nop
dec
lahf
or
and
or
call
scas
jl
push
or
sarl
ret
incl
mov
add
push
or
sbbl
adc
leave
les
insb
mov
sahf
push
leave
mov
int3
lea
inc
psllw
call
xorl
cs
inc
lea
mov
push
mov
and
push
cmp
pusha
cmp
cmp
or
inc
je
fs
insb
movsb
pop
sbbb
movsb
jl
out
dec
pusha
sub
cmp
inc
add
dec
or
fsubrs
into
sub
pop
mov
or
xor
and
dec
add
push
push
test
inc
or
dec
and
test
js
jg
mov
lds
lods
sub
out
cmp
sbb
mov
push
and
sub
aam
test
jg
cmp
jecxz
cltd
test
adc
icebp
or
or
or
fstl
adc
imul
fxch
fmul
jae
in
sbb
call
dec
cmp
int3
cltd
dec
std
mov
roll
sbb
popl
int3
mov
pop
push
daa
adc
inc
pop
pop
pushf
xchg
inc
cmc
ret
dec
adc
push
push
jl
out
pusha
lea
faddl
push
insl
push
js
push
inc
adc
int3
ds
xor
add
push
mov
out
mov
dec
add
adc
adc
scas
or
cmp
jge
xchg
clc
lea
cmp
and
adc
push
mov
push
xchg
das
or
shrb
adcl
mov
loopne
xchg
insb
data16
loop
sub
pushf
sar
push
sub
push
and
sub
int3
icebp
xor
push
inc
cmp
add
mov
jg
fidivl
add
mov
add
cmp
sub
mov
popa
leave
jmp
cltd
cmpsl
inc
mov
ret
or
sub
addr16
cmpsl
jmp
mov
cs
lea
adc
cmpb
stos
add
popf
mov
cmp
add
jb
xchg
or
aam
pop
ret
lahf
ret
or
jbe
jb
mov
jg
add
jb
cmp
andb
in
push
in
sub
pop
add
push
fnstcw
sbb
xlat
pop
sbb
cmp
xchg
jno
dec
mov
sarb
cld
push
clc
outsb
dec
jle
cmp
add
mov
and
add
pop
xor
test
jl
mov
inc
mov
or
std
mov
rcl
pop
add
xlat
dec
adc
push
push
js
jo
pop
pop
lds
bound
xchg
rcrl
fsub
push
mov
xchg
inc
subb
sub
pop
pusha
cmp
dec
test
iret
cmp
jb
add
pushf
cltd
movsb
jge
sbb
icebp
and
in
pushf
mov
adc
sub
push
sbb
insb
xor
xor
pop
xlat
movsl
mov
cmpsb
ljmp
fisttps
push
daa
cmp
mov
cmp
je
cmp
push
lock
imul
mov
je
mov
mov
mov
sub
rcrb
das
stos
xor
and
xchg
push
push
sbb
push
aad
bound
xor
push
ja
push
sbb
jge
mov
imul
nop
pop
pop
movb
sub
jnp
pop
push
arpl
cmpb
xor
push
je
push
push
sub
xchg
lods
or
test
call
push
cmp
dec
sub
loop
je
jl
scas
and
dec
add
rol
fnstcw
lret
sub
or
addr16
dec
cmp
adc
into
add
jp
ds
pop
jnp
cmp
jne
setp
adc
rol
arpl
leave
push
stos
inc
add
adc
lret
repz
push
push
ds
or
add
mov
mov
sub
and
enter
ja
out
popf
sbb
sahf
jmp
push
aaa
or
inc
mov
fidivrl
add
adc
add
mov
add
ds
push
lahf
push
and
or
je
mov
cmp
inc
xor
dec
in
sub
xor
jo
pusha
cs
sub
clc
push
fwait
hlt
mov
sub
xor
jo
mov
mov
sbb
inc
add
sbb
test
jl
in
jnp,pn
ret
fisttps
iret
add
and
es
cmp
push
dec
inc
dec
imul
add
push
ret
or
xor
or
push
jmp
sahf
jbe
cmp
cld
ss
dec
pop
mov
call
jo
out
dec
and
mov
mov
push
and
add
push
cli
mov
cmp
or
test
cltd
push
rorb
jle
mov
jle
mov
sbb
jl
aas
adc
enter
lret
xchg
adc
mov
lea
inc
ds
jp
sahf
and
push
inc
repnz
inc
cmpb
add
inc
sub
jne,pn
clc
fbstp
cmp
adc
pop
xchg
outsb
add
mov
ret
sbb
sbb
xor
outsb
sahf
sti
inc
fdivrl
push
loopne
lds
mov
sar
incl
inc
mov
nop
pop
sbb
pop
hlt
repz
adc
adc
mov
shlb
lahf
adc
mov
push
mov
add
mov
outsb
outsb
lds
and
outsb
mov
xor
dec
and
jo
loop
mov
pop
or
add
ret
fs
sbb
dec
mov
mov
xlat
sbb
inc
sbb
inc
ficoms
adc
pop
inc
jl
xchg
int3
pop
ret
fildl
stos
xchg
fcoms
push
cmp
aad
mov
stos
pop
add
lock
call
sub
mov
lret
test
jmp
push
push
and
add
sbb
add
cmp
or
mov
fsubrs
cmp
ljmp
push
jmp
mov
lds
xor
sbbb
in
imul
push
decl
fstps
leave
and
push
xor
inc
outsb
gs
sbb
jmp
lds
sub
aas
rcll
cmp
push
das
push
orb
push
je
call
push
call
mov
pop
idivb
push
xor
bound
xor
sub
test
cli
jg
lea
sub
sub
push
lods
push
je
loopne
push
push
xchg
ss
adc
sub
cld
sub
sub
xor
inc
add
aam
cmp
jge
sub
and
inc
or
adc
data16
jno
fld
add
xor
lds
jb
or
push
sub
adc
js
cmp
inc
add
adc
lahf
sub
mov
pop
ljmp
ret
push
or
out
xor
add
in
leave
dec
xor
cmp
pop
movb
jmp
push
jnp
lock
sbb
or
out
mov
loope
inc
call
sub
adc
test
sbb
inc
xchg
or
pop
leave
adc
pop
pusha
mov
outsl
add
out
sar
mov
shr
add
pop
mov
imul
and
xchg
sbb
and
sbb
jo
mov
fsubl
sub
aad
leavew
lea
xchg
push
mov
xor
jmp
cmp
jo
mov
inc
push
jbe
sbb
addr16
jnp
sub
jle
and
scas
dec
adc
sbb
aas
mov
pop
cli
sbb
add
sub
addr16
xchg
addr16
pop
and
test
push
sub
mov
sahf
je
adc
fists
arpl
jns
jb
call
int3
aas
test
add
enter
add
sub
mov
add
stc
jge
test
or
cmp
mov
mov
push
mov
cmpsl
orl
push
cmp
or
and
cs
push
daa
cmp
push
pop
jo
push
cwtl
rolb
jmp
je
fimull
jmp
ja
lods
xor
mov
jp
imul
xor
addl
push
push
jle
or
adc
adc
les
pop
push
pop
inc
ja
push
sub
mov
or
jge
lcall
jmp
dec
push
imul
adc
push
imul
inc
inc
jge
subb
cwtl
mov
inc
add
cmp
sti
or
test
mov
cmp
adc
push
cmp
pushf
inc
ret
mov
pop
ja
js
adc
mov
adc
mov
jmp
sub
jmp
pop
mov
adc
push
add
or
outsl
push
je
fimull
pop
sbb
xchg
inc
jnp
xchg
cli
jp
pusha
push
push
jle
inc
fcoms
aam
inc
sbb
cmpsl
push
add
sbb
movsb
rolb
pop
pop
push
push
push
sbb
and
insb
jp
icebp
sbb
sahf
out
in
dec
in
xchg
push
xchg
pushf
cmpsb
bound
jg
sbb
push
shll
and
popf
cmp
repz
mov
mov
call
in
pop
pop
and
adc
adc
xor
in
ljmp
push
xor
push
dec
sub
fcomps
inc
dec
sbb
push
push
leave
out
hlt
ret
push
and
sahf
cmp
adc
jo
loop
add
jns
inc
loope
punpckhbw
push
xor
add
jmp
sbb
enter
lahf
pop
and
pmulhuw
mov
sub
cmp
stos
sub
aad
xor
lahf
adc
jo
rclb
dec
lahf
orl
dec
test
sbb
stc
pushf
sub
sub
push
addb
and
into
mov
pop
inc
push
mov
and
push
fldl
in
jne
jo
sbb
popa
add
or
pop
test
push
dec
test
jb
and
and
lock
and
cld
adc
shrl
add
lahf
lods
clc
fs
mov
jne
add
loopne
mov
mov
push
jecxz
outsl
daa
push
cmp
imul
mov
mov
shlb
add
add
cltd
inc
xchg
xchg
pop
fistpl
mov
movsl
adc
sbb
mov
push
mov
stos
incl
xor
xchg
mov
inc
sti
inc
lret
inc
and
cli
xchg
xor
pop
dec
or
iret
push
sti
pop
and
or
aas
pop
cs
adc
pop
rclb
sub
mov
jne
sub
xorb
sbb
push
faddl
adc
mov
inc
push
js
or
push
mov
push
inc
pop
pop
pop
pop
rolb
es
jg
adc
cmp
mov
push
and
adc
xor
inc
dec
mov
push
jmp
inc
push
cmp
ss
into
pop
inc
inc
jno
pop
push
push
mov
mov
xchg
xor
inc
inc
jp
xchg
mov
mov
mov
mov
xor
xchg
ret
add
out
btr
add
addr16
insl
sbb
cmp
or
add
or
das
imul
dec
fldl
sub
lds
je
nop
sub
lods
je
pop
and
test
cmp
ficompl
or
lock
xchg
push
push
xchg
lret
pop
cmp
add
dec
loope
xchg
adc
shlb
call
mov
or
test
dec
jnp
sub
mov
sub
mov
push
adc
rol
cwtl
or
je
andb
mov
adc
js
leave
xchg
cmp
adc
jmp
aad
pop
push
mov
inc
pop
mov
add
push
jle
add
daa
pop
sub
fs
add
sbb
cmp
addr16
pusha
stos
mov
mov
pop
push
cmp
movsb
mov
push
sahf
xchg
sti
es
insb
jmp
test
push
add
push
mov
mov
push
add
push
outsb
insb
xor
push
daa
popa
out
lods
mov
inc
jg
push
or
xchg
xor
jno
and
lds
adc
movsb
add
imul
pop
or
inc
push
popa
or
add
jl
dec
push
cmp
xor
cmpsl
lock
fwait
aas
out
and
fistpl
bound
aas
jg
xchg
sub
aas
bound
cwtl
xor
mov
add
popa
xchg
aas
push
stos
arpl
mov
in
add
aad
cltd
mov
push
lods
mov
or
or
and
adc
pop
test
je
push
decl
add
xlat
rcll
iret
into
add
jnp
dec
sbb
movsl
pop
ret
pop
rcrb
ret
cmp
lods
incl
inc
stos
add
mov
push
popf
jbe
jnp
add
or
fcmovnb
aas
loop
mulps
jb
sbb
insb
popf
push
cltd
test
les
into
sub
or
bound
xlat
or
jno
adc
inc
mov
sub
lahf
insb
add
sub
adc
lods
pop
jl
mov
test
and
mov
jmp
xor
pop
dec
mov
mov
mov
inc
das
cwtl
subl
out
add
mov
addr16
inc
jo
xor
call
pop
cwtl
aaa
mov
xchg
fisubrs
aas
mov
push
dec
mov
decb
dec
or
sbb
mov
subl
sub
mov
dec
sbb
inc
sbb
mov
push
or
mov
sub
inc
xor
and
mov
push
xor
push
roll
cwtl
stos
sub
xorb
or
push
hlt
add
or
mov
dec
cli
fldl
sbbb
or
mov
aad
testb
cwtl
dec
js
or
hlt
add
push
add
enter
in
jne
fiadds
mov
sahf
push
sub
stc
sub
jne
pop
dec
push
add
mov
xor
stos
add
nop
add
mov
clc
mov
adc
cmp
lods
add
cwtl
add
inc
dec
and
add
filds
mov
lea
xchg
add
ret
ret
xlat
mov
inc
cli
shrl
mov
add
inc
sbb
jns
dec
or
xchg
push
imul
mov
mov
rorb
test
mov
mov
mov
inc
insl
push
aas
mov
mov
clc
add
or
out
jl
cmpsl
aad
push
mov
adc
push
lods
push
push
fisubrs
push
push
or
cmp
or
imul
loopne
push
or
cmp
adc
faddl
push
in
sbb
xor
pop
je
xchg
dec
push
loop
push
out
fsubrl
push
push
add
mov
push
shl
stc
cmp
fucomi
inc
xchg
inc
cmpl
ror
add
jmp
lea
fists
sub
mov
daa
sbb
jmp
movb
mov
jne
rol
push
fists
sub
inc
xchg
fdivs
rcr
lahf
ret
sbb
and
jb
push
fldl
sub
sub
sbb
lahf
mov
mov
loop
rclb
inc
dec
xor
xchg
inc
rorb
aam
inc
xor
fistpll
ret
xlat
or
push
jno
or
sbb
aad
jo
andb
push
push
jmp
cmp
sub
int
ret
stc
mov
movb
fnstenv
or
inc
mov
mov
mov
loope
jge
or
inc
dec
je
or
add
adc
jnp
cmp
adc
pop
cmp
test
imul
cmp
push
leave
mov
cmpsl
push
push
or
pop
sbb
stc
insb
or
push
ds
push
mov
or
and
push
out
pop
cltd
aam
push
or
push
push
out
xor
dec
outsl
rcrl
fisttpl
add
in
sbb
xchg
nop
pushf
mov
arpl
lcall
sahf
mov
fwait
mov
adc
push
popf
ret
jmp
bound
loop
push
dec
leave
int
inc
xchg
rcll
cmp
inc
std
nop
and
mov
insl
mov
push
rolb
shlb
roll
inc
mov
push
mov
inc
mov
test
jmp
xchg
jmp
test
test
mov
lods
cmp
mov
repz
mov
inc
jb
jecxz
jg
mov
movsb
push
pop
lock
dec
stos
inc
jp
adc
inc
mov
adc
pop
les
sahf
cmp
rorb
movsb
cmp
push
pop
mov
mov
and
xchg
lea
pushl
add
sbb
sbb
dec
xor
das
sbb
ret
shlb
into
push
push
sbb
aas
pop
dec
je
push
jns
and
sbb
dec
lcall
lods
sub
orl
pop
push
add
mov
cmp
adc
fldlg2
cmp
pop
pop
adc
inc
xor
mov
jmp
pusha
adc
add
mov
mov
sbb
pop
xchg
cmp
push
enter
inc
push
enter
add
jmp
xlat
or
dec
push
cld
inc
mov
or
pop
aam
lock
je
sub
pop
jno
out
jecxz
aam
call
push
aas
pushf
dec
inc
mov
loopne
ret
xchg
andb
and
adc
ret
outsl
mov
push
or
or
imul
loopne
mov
jns
or
lods
std
enter
xchg
das
daa
sbb
push
jecxz
cmpl
movsb
add
loope
pop
test
mov
fnstenv
call
bound
jge
mov
test
repz
enter
add
mov
repz
sbb
adc
sbb
adc
jecxz
fs
push
xor
ss
jo
nop
fldt
push
add
rcll
push
sbb
movsb
mov
dec
lahf
dec
pop
cmp
jns
dec
mov
xchg
pop
shlb
int
in
pop
movl
stos
xchg
mov
sbbl
decl
or
dec
add
inc
mov
stc
lahf
push
or
movsb
and
adc
idiv
nop
dec
es
in
rcrb
in
stos
idivl
add
dec
pop
mov
mov
test
test
inc
inc
and
add
pusha
or
sbb
lods
sbb
push
das
cmp
add
sub
ror
push
sbb
ret
push
push
push
or
out
lock
dec
lock
ffreep
push
inc
sub
lahf
sub
lahf
xchg
mov
push
mov
mov
add
nop
mov
shlb
cmp
pop
rcll
orl
jae
cmpsl
inc
add
fs
fbstp
leave
adc
sbb
push
xor
ret
mov
mov
xor
lea
cs
pop
in
nop
push
aas
pushf
sti
enter
lcall
pushf
lahf
mov
cld
cld
les
inc
mov
jmp
inc
xchg
push
mov
pusha
in
pusha
and
or
sbbl
in
xchg
push
push
sbb
add
mov
sub
xchg
push
pop
pop
add
mov
adc
push
sub
push
sub
pusha
sub
in
mov
pop
pop
and
lods
jle
movsb
int3
cli
pop
fistpl
xchg
sub
cmp
pop
mov
loopne
adc
sti
call
sbb
sarl
pop
dec
pop
enter
jl
fcoml
mov
imul
jle
out
jbe
mov
int
test
mov
cmp
ficomps
vpshufd
fucomip
add
das
notb
mov
cmp
jl
lahf
or
add
mov
push
in
cmp
or
nop
sahf
popa
je
fs
andl
nop
test
dec
push
mov
aad
cs
cwtl
loope
pusha
push
jmp
adc
jl
pop
push
cmp
addb
pop
inc
cmp
jl
push
dec
or
push
iret
push
insl
push
stc
dec
fcoml
fiadds
mov
jne
es
neg
sbb
xor
and
mov
mov
mov
jp
loop
jne
inc
cmp
jl
add
cmp
inc
mov
rorb
shr
xor
sub
add
push
push
jmp
jne
repnz
xor
xor
pop
lods
pop
push
js
shrl
push
js
and
pop
loope
test
lods
mov
scas
jl
nop
mov
xor
cmpb
add
sahf
outsb
insb
mov
pop
mov
insb
and
aas
fnstsw
xchg
call
pop
pop
or
xor
sti
jge
mov
or
xor
xchg
stos
mov
sarb
stos
lcall
pop
or
push
stos
iret
add
jo
je
js
repz
ficompl
jl
xor
movsl
rclb
mov
mov
enter
cmp
mov
rol
addr16
enter
aam
jb
push
fcomp
loopne
imul
adc
add
xchg
push
lock
clc
or
in
mov
add
add
pop
dec
subps
leave
or
push
pop
adc
cmpsb
js
cmp
pop
dec
call
and
scas
push
and
jl
rolb
lcall
addps
dec
adc
push
sub
and
adcl
pop
or
inc
std
xchg
pop
mov
adc
xchg
pop
dec
adc
ds
add
xchg
ret
inc
jne
pop
gs
shrl
push
dec
pop
or
mov
add
push
jl
inc
sub
adc
jge
jne
adc
mov
add
sub
mov
fwait
inc
mov
popa
xchg
movl
ljmp
dec
into
mov
mov
adcl
xchg
imul
inc
adc
fdivl
in
adc
in
inc
add
je
push
rorb
inc
xchg
cmp
sar
or
mov
and
ss
fidivrl
adc
inc
mov
inc
add
les
lahf
and
ja
stc
mov
sbb
sub
sub
sub
push
mov
mov
adc
loopne
xchg
filds
sub
leave
pop
aam
xor
jmp
notl
jo
xor
push
pop
lods
adc
sbb
mov
loope
mov
imul
verr
and
cltd
mov
push
xchg
mov
mov
dec
or
xchg
push
aas
test
repz
call
mov
sbb
cmp
adc
outsl
in
sbb
int3
fsubr
les
push
adc
xor
loop
jo
insb
scas
push
xor
arpl
lahf
xchg
pop
and
or
movl
aam
call
je
je
add
mov
xorb
call
add
addr16
xlat
lret
inc
cwtl
mov
sub
loopne
add
test
call
cmp
cmp
lahf
pop
cmp
es
insl
push
loopne
andl
mov
pushf
xchg
xor
shlb
cmp
imul
adc
add
fsubrl
test
aad
dec
shrb
push
cmp
and
xchg
xor
mov
pop
cwtl
pop
out
insb
pop
mov
hlt
cmpsb
inc
fimuls
popa
and
add
pop
jmp
in
adc
and
and
sahf
addr16
push
jo
lcall
fs
mov
sahf
or
add
test
adc
sub
mov
out
bnd
ret
out
out
or
add
or
pop
mov
lods
add
aad
clc
add
mov
jb
cmp
int3
and
push
push
add
mov
fs
sub
push
je
add
mov
add
lahf
call
je
notb
dec
shlb
rol
stos
mov
cmp
fiaddl
sbb
movsb
xor
push
aaa
sbb
shll
add
jne
xchg
stos
xchg
ret
pop
inc
sbb
lahf
in
push
pusha
cmp
pop
add
shlb
cmp
dec
repnz
add
pusha
aaa
icebp
push
push
push
jo
and
sbb
cmp
push
push
fisubrs
ret
pop
outsl
and
jle
sub
in
cmp
add
mov
mov
mov
ss
sbb
pop
push
push
push
je
xor
and
aad
or
dec
into
push
cltd
sub
iret
cmp
movsl
cmp
dec
and
mov
xchg
ljmp
inc
movsl
lret
inc
mov
adc
inc
adc
les
dec
sbb
xchg
inc
mov
call
xorb
add
add
cmp
sbb
push
mov
jp
xor
dec
push
push
pop
xlat
adc
push
or
test
pop
lea
cmp
mov
and
xchg
sbb
pop
cmp
sub
in
fsub
into
and
and
fdivl
pop
addr16
add
jne
inc
cmp
outsb
outsb
adc
adc
mov
nop
loop
daa
fstps
mov
lock
stc
add
xor
ret
fimull
rorb
sbb
adc
xchg
jbe
cmp
les
mov
dec
fadd
in
lock
fs
ss
sahf
adc
jo
movl
addl
test
add
sub
std
sbbb
outsl
ja
mov
pop
cli
fiaddl
outsb
and
pop
and
jnp
xor
dec
enter
cmp
in
nop
mov
mov
sub
pop
stos
aam
mov
pop
mov
xor
pop
inc
add
xorl
loope
mov
and
mov
dec
dec
cmpsb
xchg
mov
js
adc
lea
adc
push
pop
in
pop
fisttps
sub
mov
call
mov
adc
sub
sbb
add
inc
mov
add
add
mov
or
clc
xor
mov
add
in
sti
mov
cmp
sbb
int
pop
sbb
and
sub
xor
movsl
sti
pop
xor
cmp
inc
sub
push
push
pop
add
pusha
pop
arpl
movsl
jb
dec
pushw
mov
js
sbb
dec
push
orb
mov
in
mov
xchg
or
xchg
smsw
aaa
repnz
test
mov
inc
sub
enter
inc
lret
repnz
pusha
mov
push
lret
mov
movsl
sti
inc
sub
fsubr
loopne
in
xchg
xchg
dec
call
lods
mov
pusha
add
or
lods
rcrb
or
adc
sbb
test
sbb
and
xchg
dec
in
sub
xor
cmp
push
and
dec
dec
dec
in
push
push
push
pop
pop
push
and
jo
aaa
push
test
adc
lret
mov
xchg
xchg
cwtl
pushf
lret
movsb
mov
inc
sub
mov
mov
into
gs
int3
into
rolb
hlt
rcl
add
add
sub
and
in
mov
mov
dec
test
inc
gs
mov
mov
sub
jo
add
icebp
outsl
cwtl
mov
test
push
push
icebp
sbb
adc
add
xor
jecxz
adc
aam
mov
and
sahf
jp
mov
idivb
int
xor
sub
mov
das
sbb
bound
pop
inc
rcll
add
lcall
push
insl
inc
inc
testb
jae
dec
cmpb
jnp
mov
pop
jge
fcomip
nop
xchg
into
sbb
sti
mov
dec
imul
dec
loopne
fildl
incl
xchg
orl
aaa
andl
pushf
testb
or
es
add
scas
leave
or
daa
or
mov
ds
jle
sbb
mov
add
fdivl
pop
pop
dec
dec
loopne
xor
or
popa
sub
sub
push
adc
lock
and
lret
ret
pop
pop
and
je
push
ja
mov
sbb
xchg
cmpsb
nop
xchg
mov
sahf
arpl
in
sub
xchg
mov
jb
add
push
jo
or
mov
push
daa
mov
push
je
das
xor
add
test
cmpb
push
and
or
test
adc
movsb
push
rcrb
xchg
push
push
addb
add
gs
pop
xchg
cld
fadds
sti
xchg
push
pusha
cmp
je
stc
push
jmp
inc
gs
sahf
flds
add
or
sub
sar
dec
dec
mov
je
push
xchg
jg
sbb
clc
clc
or
clc
pop
inc
lock
pop
pop
je
pop
push
push
cmp
lock
inc
mov
mov
pop
je
adc
mov
cmp
les
xor
add
push
push
into
and
out
mov
xchg
mov
dec
mov
jne
aad
iret
xorb
fldcw
ja
ss
adc
mov
mov
fmull
out
or
jne
or
decb
outsl
popa
scas
dec
into
lea
popf
push
cmp
jns
cltd
cmp
test
cmp
lods
in
push
cmpb
cld
ss
push
jb
lahf
loopne
adcl
mov
or
js
dec
jmp
or
adc
push
pop
xor
mov
sub
mov
and
cmpsb
mov
je
je
jo
sbb
icebp
nop
push
ret
pop
clc
adc
push
dec
jno
cmp
mov
push
or
xor
sbb
jo
sub
lcall
ret
bound
mov
ljmp
cmp
jle
sbb
ret
add
adc
out
and
add
or
ret
bound
or
loop
cmp
mov
arpl
pop
mov
push
sbb
mov
ss
dec
jg
push
lods
push
push
push
negl
lds
imul
or
out
adc
push
push
adc
or
ret
jl
sti
cltd
je
push
mov
add
mov
and
roll
clc
cmp
sbb
push
stos
pop
mov
cmc
into
rorb
imul
pop
xchg
loopne
mov
add
pop
sbb
push
loop
jbe
ja
je
test
and
sbb
sbb
or
adc
mov
cs
cltd
popa
mov
sub
test
enter
cld
adc
dec
jo
mov
ret
str
mov
pop
dec
and
pop
push
jno
in
stos
jg
add
add
add
sub
pop
pop
push
mov
sub
mov
ss
cmpl
loop
mov
and
push
mov
inc
jg
sub
pop
add
aam
inc
mov
pop
out
push
inc
aam
shrb
arpl
and
cmpsl
sti
cmpl
jl
test
stos
test
jb
loope
xor
mov
adc
add
jl
xor
push
sbb
and
outsb
into
out
sub
push
daa
sarb
daa
push
add
movb
jo
inc
add
inc
mov
subb
add
pushf
push
add
inc
je
call
pop
jmp
cmp
pop
add
nop
shll
xor
fnsave
ss
dec
adc
or
dec
push
jl
pop
mov
mov
sub
adc
sbb
addl
push
add
movl
mov
add
push
dec
inc
mov
pop
add
je
and
pop
cmp
inc
mov
jle
icebp
pop
je
xor
outsl
ret
ja
pop
push
jg
dec
aas
nop
pop
and
pop
jnp
cs
test
pop
fstpt
loop
les
pop
in
fst
dec
ljmp
sbb
dec
push
jl
int
fildl
push
push
sbb
pop
imul
lahf
mov
dec
inc
sbb
sti
mov
push
cmp
test
xchg
in
pop
data16
rcll
rol
bswap
push
adc
decb
mov
hlt
pop
xchg
push
aad
and
inc
pushf
mov
sbb
es
fildl
test
add
cmp
loop
mov
sbb
imul
loope
pop
out
mov
dec
mov
in
push
rorb
add
add
xor
xchg
push
add
xor
std
je
shll
mov
sbb
addr16
pop
sbbb
dec
add
imul
in
inc
test
and
pop
iret
pop
movsl
mov
pop
push
jbe
lcall
add
push
mov
cwtl
inc
filds
orb
inc
dec
loopne
sub
or
inc
dec
mov
inc
sti
xchg
push
or
push
and
inc
adc
pushl
mov
shlb
cld
adc
push
or
adc
movsl
sahf
adc
test
or
cld
cmp
jge
adc
loopne
or
pop
sbb
mov
cmp
faddl
mov
push
xor
add
sbb
outsl
sbbl
push
dec
adc
cmp
xchg
cmc
pop
push
and
sbb
daa
and
mov
lock
in
pop
inc
add
push
sbb
mov
cmp
inc
mov
lea
or
pop
mov
pop
push
adc
ja
push
sbb
mov
scas
add
sahf
mov
lea
rcl
mov
mov
jns
mov
call
lea
push
pusha
push
and
mov
ret
xchg
push
mov
cmc
cmp
mov
iret
mov
xor
dec
dec
push
adc
ja
rdtsc
add
inc
adc
push
call
inc
pop
stc
int
imul
iret
push
pop
cli
inc
mov
add
addr16
pop
adc
xor
lock
push
sub
add
add
and
repnz
push
dec
negl
cmp
pmullw
test
sub
inc
push
push
popf
add
mov
cmp
pop
bound
icebp
je
sbb
jle
loop
shll
sub
xor
push
outsl
mov
and
adc
mov
jns
test
jl
pop
push
mov
cmp
mov
push
jae
in
pop
out
add
push
sbb
or
sbb
xor
xor
mov
insb
xchg
nop
pusha
pop
pop
dec
adc
xor
in
sbb
movb
sbb
ret
cld
add
inc
bnd
lea
mov
lret
loopne
mov
arpl
sahf
cmp
inc
arpl
xchg
iret
push
mov
pop
popa
scas
push
pop
push
push
push
jmp
mov
cmp
test
mov
inc
cmp
push
sbb
cmpsb
sbb
cli
push
stc
notl
out
pop
jmp
sbb
mov
test
jge
xchg
dec
pop
and
call
mov
das
adc
or
push
mov
inc
push
pop
ret
xchg
mov
jae
or
jnp
adc
std
cmpsb
and
adc
psrld
ret
std
je
dec
ret
and
sub
push
push
pop
test
and
lds
je
iret
sub
insb
jo
pop
dec
jge
int
dec
addb
push
sbb
lods
nop
les
clc
fs
mov
fsubl
lock
repnz
gs
sbb
fsubrl
xchg
insb
fists
mov
or
cmp
lea
inc
pop
inc
xor
mov
stc
xor
inc
adc
push
sbb
pusha
out
push
pop
insb
push
imul
mov
sbb
call
lods
xor
mov
arpl
add
xchg
loopne
shlb
shrb
sbb
push
movsb
call
test
subl
call
xor
push
jle
out
add
cmp
jne
and
or
inc
pop
movsl
pop
jecxz
adc
leave
push
jbe
dec
cld
mov
add
adc
add
push
mov
faddl
lret
push
inc
insl
pop
add
rcll
cmp
mov
loopne
add
push
and
inc
jl
mov
xor
inc
cli
jge
lea
cmp
mov
lret
jo
push
shlb
insb
xor
cmp
fs
pop
fdivrs
push
pop
xchg
popa
mov
jns
testl
loop
jno
gs
imul
sbbl
loopne
add
dec
mov
rcll
xchg
pop
or
fistl
or
sbb
mov
lea
sahf
es
fimuls
pushl
mov
mov
xchg
push
ds
mov
jne
mov
fisttps
popa
or
jle
pop
pop
in
out
mov
and
filds
sub
sub
push
addl
jle
push
push
pop
lods
sub
xor
in
add
xor
sahf
roll
and
jbe
cmp
push
imul
push
jb
xor
push
lods
iret
fmuls
sbb
in
and
sahf
add
push
stos
sub
dec
dec
mov
ret
fsubs
add
mov
cmpsb
addl
movsb
push
js
and
in
sub
cmp
test
adc
jne
xor
and
jnp
roll
ret
xchg
jmp
adc
mov
dec
test
test
and
pop
popa
and
ja
jnp
xlat
cmp
je
xorl
pop
and
mov
rcrl
popf
jo
sub
ljmp
je
orb
rclb
faddl
cwtl
pop
dec
pusha
dec
sbb
or
in
fldl
shlb
cmp
dec
jo
xchg
sbb
test
lea
pop
mov
negl
adc
push
jb
inc
dec
jge
pop
inc
sbb
add
push
jle
cmp
adc
fadd
test
cmp
out
pop
out
push
inc
call
sub
xchg
insb
push
lods
sub
pop
mov
push
int
xchg
or
sub
jnp
fsts
add
into
sahf
xchg
mov
xor
aas
push
vxorps
pop
insb
mov
inc
cmp
shrl
int3
decb
mov
adc
and
rclb
subb
inc
adc
je
aad
add
enter
and
sbb
cwtl
lcall
fmuls
add
pusha
adc
shll
push
sub
sahf
sbb
test
dec
push
fiadds
and
sahf
inc
mov
iret
decl
xchg
add
pop
pushf
inc
pop
mov
orl
xor
fistl
add
rcll
cmp
je
sub
mov
repnz
pop
xchg
xorb
or
subb
xchg
lods
xor
push
mov
test
mov
sbb
pop
pop
xchg
xor
mov
add
sub
repz
add
sbb
std
je
mov
sarb
lds
or
or
dec
sub
push
add
or
push
or
iret
mov
mov
pop
sbb
add
cld
mov
cmp
inc
out
sbb
mov
mov
and
dec
mov
mov
sbb
adc
sbb
rclb
push
call
movl
rolb
mov
inc
add
add
inc
lea
enter
pushf
pop
test
lods
nop
pop
ret
incl
xor
scas
push
mov
add
fdivrl
adc
inc
mov
or
or
mov
sbb
pop
rcrb
sbb
in
pushl
pop
mov
fwait
les
mov
xchg
jbe
sti
andb
jo
pop
bound
add
cmp
popf
or
ja
sbb
sbb
and
push
adc
mov
cs
test
sub
push
shrb
jnp
scas
dec
add
adc
sub
dec
sbb
mov
lret
pusha
dec
aas
lahf
lods
ficoml
pop
pop
pop
aam
sbb
addl
subl
dec
dec
mov
cmp
in
dec
jnp
or
xchg
pop
jecxz
js
adc
adc
adc
lea
push
call
shrb
or
adc
mov
insb
or
sub
push
add
dec
jno
cmp
inc
or
les
lds
sbb
aad
jl
and
icebp
push
or
pop
andl
jp
jo
xor
scas
aam
in
push
call
in
sbb
or
jo
shlb
and
pop
shll
pop
pop
jmp
lea
pop
or
cmp
mov
addl
adc
adc
pop
mov
xlat
dec
xor
test
mov
js
mov
dec
mov
dec
adc
sbb
add
add
call
sbb
inc
push
cmp
dec
or
cld
or
nop
bound
lods
sbb
mov
jno
or
xor
inc
inc
and
sub
xor
rcr
jle
dec
cmp
xor
ds
or
sbb
xchg
xor
dec
xor
dec
out
jne
dec
xor
xchg
sbb
sub
lods
mov
push
push
dec
lods
les
aaa
inc
push
jl
push
push
xchg
pop
and
enter
jp
jno
cmc
inc
loope
adc
pushw
pop
push
mov
sbb
mov
ds
inc
pop
jb
cmp
cmp
lea
clc
call
pusha
lret
pop
sbb
and
pop
pop
inc
adc
sub
js
mov
jle
addl
rorl
mov
jle
xor
movsb
jge
daa
add
into
je
sub
jb
jl
xchg
jae
int
lahf
incl
jmp
and
adc
ret
mov
mov
add
ds
mov
mov
rclb
fimull
add
or
das
cmp
xchg
or
mov
shll
mov
jmp
and
popa
jmp
mov
cmp
adc
andl
push
push
cmpb
sbb
push
lea
xor
mov
ret
lods
fmuls
pop
sahf
and
lret
cmp
add
and
cltd
xchg
sub
cltd
xchg
sub
lods
test
add
dec
mov
popa
adc
fadds
mov
rolb
add
and
cltd
movsb
cmp
pusha
je
rorl
mov
cmp
mov
add
add
sbb
or
subb
sahf
jl
pop
mov
and
cmp
pushf
mov
enter
fcompl
push
push
shll
enter
lret
int3
rcrb
out
cmpsl
add
add
movl
xor
mov
push
loopne
and
xchg
out
mov
in
call
pop
lock
fdiv
pop
adc
in
into
mov
nop
cwtl
xchg
bnd
lret
lods
adc
dec
in
sbb
add
int3
xor
add
jge
sub
aam
aam
or
sbb
mov
jecxz
xchg
or
cmpsl
sbb
in
movb
bound
sbb
inc
jo
fs
sti
mov
pushf
cli
loope
lahf
cmovle
icebp
fistpll
sbb
sub
aas
pop
adc
cs
or
adc
or
xor
loope
pop
mov
cmp
mov
fistpll
cmp
pop
cmp
adc
mov
mov
push
push
sbb
push
test
jno
pushf
sti
inc
cmp
mov
inc
les
iret
imul
xchg
jge
pop
fisubs
jne
xor
lds
cmpsb
mov
lea
aam
push
xchg
pop
enter
dec
ficoml
jl
push
sub
int3
adc
in
les
jl
push
pushf
sbb
je
pop
pushf
sbb
leave
pusha
push
dec
adc
cmp
enter
adc
add
push
sbb
adc
push
fdivrs
cwtl
pushf
ret
push
mov
or
nop
xchg
add
cmp
pop
or
or
cmp
nop
pop
and
cmc
inc
popa
test
aad
jne
iret
inc
and
or
and
ret
pop
lds
pushf
jl
add
aam
dec
dec
outsb
pop
add
shll
xor
stos
cltd
mov
fildll
sbb
adc
insl
dec
sbb
test
inc
mov
push
aad
add
xchg
lret
mov
push
mov
inc
out
pusha
pop
adcb
mov
enter
mov
push
adc
push
and
push
enter
outsb
sbb
mov
push
ret
cltd
nop
add
add
mov
and
mov
sub
std
push
dec
or
xchg
xor
mov
xor
ja
mov
inc
cmc
outsb
mov
inc
fsubrl
push
xor
scas
add
ja
int3
adc
add
push
push
push
cmp
cmp
adc
arpl
pop
mov
mov
dec
lahf
xchg
push
arpl
cmp
mov
mov
lods
xchg
inc
cmp
push
mov
or
push
push
enter
adc
cmp
mov
mov
mov
jmp
scas
adc
jo
cmp
xor
loope
outsb
jmp
sub
mov
push
lret
dec
orl
inc
mov
xor
rorl
enter
cmp
mov
lods
xor
inc
shlb
jmp
out
xchg
push
push
and
test
xchg
ja
inc
sbb
insb
dec
push
cmp
movl
adcb
add
push
add
enter
push
and
adc
pmullw
add
mov
je
incl
mov
sub
clc
je
mov
mov
lea
aad
packsswb
fdivrs
shll
push
dec
movl
add
out
pop
lods
pop
and
xor
cmp
orb
les
outsl
cs
lret
das
clc
daa
xor
mov
shl
cltd
pushf
jg
lods
shll
outsb
or
in
sub
mov
jne
mov
dec
fldenv
mov
loope
push
sbb
mov
push
mov
lock
sub
aas
push
adc
or
inc
adc
pop
lds
pop
cmp
or
lods
js
xchg
rol
jno
outsl
lods
rclb
mov
cmpsb
rorb
stos
sbb
or
les
cmp
push
mov
push
push
nop
add
push
cs
loopne
and
scas
icebp
shll
mov
add
dec
xchg
push
jl
add
lea
xchg
fldenv
cwtl
stos
pop
adc
push
sub
lea
adcl
pushf
incl
mov
mov
outsb
dec
mov
shll
lds
test
ss
out
mov
mov
cwtl
mov
out
shr
fdivrs
push
sub
sub
jne
cmpsl
loopne
in
push
add
ror
roll
imul
int
or
cmp
mov
push
jo
push
lea
and
pop
mov
pop
aas
pop
xchg
mov
pusha
mov
adc
rorb
clc
mov
cmp
add
cmp
cmc
popl
jns
cmc
mov
or
sbb
mov
addr16
sbb
push
dec
push
icebp
add
outsl
push
cmp
loopne
dec
mov
and
aam
dec
sbb
push
xchg
cwtl
dec
jge
arpl
in
aam
inc
mov
push
jmp
dec
xlat
and
das
dec
lods
jo
inc
mov
pop
stos
cmp
mov
pusha
dec
inc
cmpl
loopne
or
mov
xor
adc
cmpsl
jge
sbb
cmp
adc
enter
mov
test
popl
or
pop
jle
pop
shll
mov
add
popa
pop
cmp
xlat
pop
adc
mov
cmp
sbb
adc
cmp
shll
or
out
inc
inc
pushf
stos
je
cmp
cmp
xor
je
fistps
sub
cs
jae
aad
iret
cmp
push
adc
jne
mov
pushf
test
and
cmp
push
pop
rclb
popf
cmp
adc
fnsave
cmp
icebp
rcll
mov
cld
xchg
movsl
pop
shr
mov
repnz
or
adc
les
xor
lahf
nop
pop
add
adc
add
test
and
sbb
adc
pop
mov
cmp
mov
nop
das
js
hlt
add
addr16
add
mov
or
sbb
mov
mov
dec
sub
pop
adc
pop
pop
andb
ja
ffreep
jmp
test
jle
cmp
decb
xchg
icebp
and
sahf
dec
sbb
fsubs
das
mov
out
sbb
cltd
outsl
cmp
js
inc
xor
push
push
push
call
aaa
push
pop
loopne
outsl
add
out
lods
add
pop
mov
loop
add
cmp
or
mov
inc
ss
cmp
dec
add
in
lea
adc
ret
mov
sub
cld
and
jb
out
mov
loope
push
or
jbe,pt
fdivrp
mov
mov
fisttps
xchg
js
add
mov
push
mov
cmp
not
mov
push
mov
jle
sub
cmp
sbb
jne
scas
fstpl
rcll
adc
cli
pop
cmp
xor
cmp
or
data16
sbb
sbb
or
and
pushf
and
inc
adc
mov
jnp
inc
mov
pop
add
rcll
scas
push
dec
add
pop
inc
insl
mov
push
sub
lods
xchg
mov
mov
and
fsubr
push
inc
push
push
out
imul
cmp
adc
push
insl
adcl
sti
fisubrl
push
es
push
cmpsl
jns
mov
int
lcall
dec
pop
fwait
add
out
sahf
or
inc
lret
xlat
push
pop
imul
push
xchg
jmp
sti
fdivp
cmp
sti
sahf
push
pop
push
adc
pop
insb
cmp
test
pop
cs
mov
and
insl
mov
es
push
mov
mov
jp
and
or
xchg
mov
jmp
dec
sbb
mov
fcoml
mov
mov
ret
movsl
cmp
out
in
sbb
outsb
push
shrl
and
les
xchg
adc
xchg
decl
push
mov
arpl
dec
mov
call
dec
xchg
in
xor
test
mov
mov
incl
cmp
lea
pop
xor
loope
and
sbb
test
mov
int
adc
cmpsb
lock
int3
xchg
add
imul
pop
mov
add
xor
neg
cmpl
divl
push
xchg
adc
pop
mov
arpl
or
fldt
movsl
sub
mov
cmp
sub
shlb
pop
cmp
mov
xor
rclb
cmpsb
mov
or
xchg
add
mov
mov
andl
jne
push
pop
orl
or
dec
mov
movsb
arpl
mov
pop
add
and
dec
mov
pop
leave
dec
jnp
pop
jmp
test
int3
mov
sub
push
or
scas
fs
push
cmpb
and
aas
arpl
dec
popa
pop
and
loope
mov
sbb
aam
fmull
rcll
sbb
jle
and
inc
sbb
jns
shll
ds
push
ds
test
xor
test
mov
ror
dec
adc
mov
mov
add
cld
stos
pop
fnsave
lock
jne
movsl
and
orb
gs
adc
in
ljmp
sub
xchg
ret
inc
mov
scas
mov
jns
lahf
adc
jo
mov
pushf
dec
push
rol
pop
shrb
lret
add
dec
pop
sbb
pop
jae
insl
mov
ss
pop
mov
pop
mov
pop
add
pcmpgtd
dec
jae
movsl
data16
sbb
xchg
mov
les
xlat
add
sub
sarb
mov
jg
in
aam
outsb
clc
adc
mov
push
pop
push
call
push
add
subl
xchg
lock
cmp
cld
jbe
rclb
mov
jne
rcrb
xor
mov
pop
or
sub
test
push
or
or
push
mov
loope
and
add
push
loopne
sub
sarl
push
inc
and
mov
sbb
popf
inc
test
test
jne
add
push
lret
fnstcw
xor
jmp
sarb
pop
bound
mov
dec
mov
out
aas
sub
mov
and
push
sahf
mov
or
jmp
int3
push
jae
mov
sbb
sbb
repnz
jl
push
fidivrs
gs
mov
mov
pop
es
add
push
scas
call
mov
sbb
fcompl
or
dec
adc
xor
mov
or
push
pop
mov
enter
test
add
pusha
and
popf
adc
jmp
mov
adc
out
aaa
cmp
mov
shr
and
xor
dec
push
xor
stc
iret
inc
push
xchg
ret
inc
popf
or
mov
orl
daa
dec
daa
mov
push
mov
dec
test
je
nop
mov
test
mov
mov
sbb
cmp
pushf
jmp
mov
cmp
in
outsl
mov
sbb
cmp
jle
sbb
sbb
int
jbe
mov
mov
xchg
sbb
push
push
or
mov
test
into
sbb
ret
sbb
push
xchg
out
mov
and
stos
das
lods
xchg
xor
push
mov
roll
push
pop
daa
into
sub
loope
add
jns
pushf
mov
hlt
mov
cmp
mov
jmp
and
push
dec
xchg
fsubs
push
pusha
xor
mov
pusha
mov
sbbb
mov
cmp
cvtpd2ps
sub
mov
lcall
icebp
xor
test
xchg
aad
ret
pop
js
or
out
xorb
push
insl
mov
pop
jg
mov
mov
and
insb
pusha
loope
dec
mov
mov
daa
and
addr16
lret
shr
push
sub
stc
and
and
rcll
outsl
bound
inc
insl
jmp
mov
and
cmp
adc
into
ret
lods
outsb
add
adc
cmp
sub
push
rorb
mov
or
outsl
aad
push
push
push
adc
or
outsl
sbb
mov
das
adc
popa
pop
aad
adc
jmp
fs
clc
or
add
push
pop
repz
mov
repz
fnstenv
inc
es
fcompl
xlat
mov
pusha
adc
fiadds
xor
test
outsl
aad
push
dec
cmpl
inc
fsubs
cmp
pop
or
jg
jmp
and
xchg
lds
push
inc
gs
call
mov
xchg
ficompl
js
popf
pop
aad
dec
jge
orl
les
psubusb
or
cmp
sbb
jo
cmc
add
mov
xchg
inc
sub
pop
dec
shrb
jl
movsl
push
stos
loope
or
sbb
cmp
inc
or
dec
cmp
jno
xchg
jno
jnp
cmpsl
shl
ja
jge
cmpsl
add
movsb
jge
jl
iret
cld
fisttpll
push
xlat
or
jecxz
mov
or
jmp
xor
inc
loop
cmp
test
lea
and
je
lea
add
push
fdivrp
shrl
lea
fiaddl
pop
cmp
icebp
enter
push
movsl
jnp
mov
jmp
das
lock
aaa
lahf
jmp
push
call
popa
sar
js
lea
push
ret
push
dec
push
dec
or
mov
popa
call
cmpsl
jecxz
loopne
push
pop
xor
push
push
cmp
arpl
fisttpll
push
jl
in
inc
bound
hlt
or
cmp
pop
fildll
cmp
jle
icebp
insb
and
add
adc
add
clc
mov
dec
idivb
and
xor
inc
cmp
jl
lcall
add
dec
sub
fcmove
mov
loope
sahf
clc
das
push
scas
jns
ja
cwtl
push
mov
or
enter
out
or
call
and
xor
push
mov
mov
in
mov
add
push
enter
add
lock
inc
mov
inc
or
xchg
hlt
push
pop
pop
lret
jns
leave
push
outsl
sahf
mov
push
fadd
inc
sbb
hlt
push
and
mov
xchg
mov
insb
jp
inc
out
inc
imull
push
inc
stos
jb
adc
pop
and
xor
xchg
test
scas
push
mov
movsb
aad
lea
adc
mov
pop
inc
imul
std
jnp
push
sbb
sbb
cmc
add
or
dec
adc
fwait
in
dec
push
jbe
mov
pop
imul
dec
and
out
sbb
or
std
dec
dec
int3
pop
jae
xchg
clc
jg
test
pop
test
std
add
mov
mov
add
call
jae
xchg
sub
clc
lea
movl
mov
insb
adc
jmp
arpl
add
aas
stc
sbb
pop
mov
aas
or
cmp
jge
pop
and
mov
mov
mov
movsb
shr
sub
or
inc
sbb
and
insb
sbb
and
push
loope
inc
add
mov
mov
or
rcrb
inc
adc
dec
dec
ja
dec
ljmp
sbb
outsl
jo
mov
pop
inc
cmp
jl
mov
pop
and
or
mov
or
les
xor
je
push
pop
aam
xchg
in
test
inc
dec
mov
dec
and
mov
movsb
jb
mov
shrb
or
cmc
out
mov
in
push
sub
add
dec
or
push
push
popa
or
mov
movsb
nop
mov
mov
xchg
pusha
pushf
test
pop
mov
test
sbb
jns
adc
leave
pop
cwtl
inc
ret
cld
roll
or
jns
pop
or
adc
pop
sub
je
mov
sbb
dec
testl
das
push
lea
out
and
cmp
mov
nop
fistpl
and
scas
mov
sahf
sbb
xchg
popf
or
adc
inc
arpl
fcomp
pop
push
les
adc
pop
out
nopl
mov
add
pop
cmp
cmp
or
inc
xchg
dec
js
push
lea
mov
aaa
or
outsl
pusha
inc
add
jp
and
nop
add
push
jle
loopne
xchg
sub
xchg
mov
out
add
jne
inc
popf
pop
mov
inc
les
jp
add
push
pusha
repnz
incl
cmp
xchg
je
jnp
inc
or
lcall
cmpl
je
mov
fdivrs
addr16
cmp
popa
cmp
out
in
das
lods
lea
push
movsl
fs
push
shlb
xor
stc
push
jne
or
jae
aam
cmp
xchg
imul
push
fcmovbe
shrb
or
pop
jp
ds
aas
and
dec
jne
pop
repz
test
mov
sub
mov
inc
les
pop
push
adc
push
or
cmp
pop
adc
and
jo
mov
hlt
xor
add
push
adc
pop
cld
push
fwait
or
xlat
add
fistl
rol
je
add
in
sbb
jg
push
sbb
das
daa
dec
dec
push
push
sub
rcll
inc
out
adc
cmp
push
out
sbb
push
dec
cmpsb
mov
xchg
pushf
loop
cmp
adc
pusha
decb
xor
mov
and
int
jne
dec
sbb
or
or
rol
js
imul
aas
lahf
pusha
lods
lods
rcll
enter
ja
push
sub
lock
dec
push
cmpsl
push
inc
sbbb
popf
nop
nop
pavgb
sbb
fists
testb
mov
movb
push
mov
xorb
cwtl
je
inc
out
xchg
lcall
pop
outsl
push
loopne
out
xor
jne
adc
fmuls
sub
nop
push
out
or
dec
jns
frstor
xor
jo
add
loop
push
js
je
add
pop
push
mov
cmpsb
add
jno
inc
add
inc
mov
movsl
sub
sub
push
add
lods
cmpsb
outsb
lock
jb
adc
or
fnstcw
add
sub
push
cli
push
in
or
or
jecxz
push
pop
add
rcr
xchg
ret
jl
in
negl
clc
test
movl
shll
mov
push
push
nop
aad
loope
daa
mov
cmp
addl
test
add
pop
rcrl
push
inc
push
into
inc
add
jne
sub
loope
in
add
add
sub
dec
imul
mov
mov
jmp
nop
outsb
mov
inc
sbb
cmp
test
pop
daa
insl
pusha
test
pop
adc
pop
out
add
sub
repnz
sbb
cs
and
pop
push
fstl
jo
ret
pop
popa
aas
pop
arpl
adc
arpl
add
lahf
cmp
cltd
nop
push
xchg
jmp
fsub
ficompl
inc
lods
jne
xor
sbb
cli
sbb
cmpb
jne
and
or
sub
and
push
test
enter
scas
push
or
lods
cmp
jo
xchg
or
fs
or
test
add
mov
pop
pop
aaa
xchg
push
xchg
gs
insb
add
into
rorb
or
inc
cmpsl
mov
add
or
clc
inc
cmpb
cmovo
mov
push
add
xor
push
int3
cmp
xchg
inc
jl
sub
push
fs
js
dec
dec
sbb
or
test
dec
lods
movsb
movsb
je
fisubl
jmp
sbb
mov
lock
call
lret
insb
adc
push
dec
jnp
insb
xor
inc
js
inc
mov
loopne
dec
mov
sbb
clc
push
les
sbb
adc
or
lds
sbb
jae
aas
adc
ret
ljmp
mov
mov
jmp
mov
dec
sbb
popa
push
daa
andl
js
push
pop
jns
fnstcw
dec
xor
and
cmpl
jge,pn
jne
pop
mov
cmp
sub
pop
inc
cltd
add
mov
push
sbb
cmp
push
push
push
in
push
xchg
add
mov
and
sub
dec
lods
mov
mov
push
mov
in
adc
dec
andl
fmuls
js
pop
sbb
add
mov
adc
or
mov
pop
or
inc
or
dec
cmp
mov
ffreep
sbb
add
pop
or
roll
test
inc
mov
filds
mov
push
movl
call
shlb
imul
inc
sbb
lea
mov
test
push
xchg
lea
push
xor
loope
ds
rclb
mov
sub
sbb
and
jns
mov
xor
xor
push
pop
adc
or
add
inc
jno
ret
lea
inc
adc
int3
or
adc
insb
insb
and
xchg
add
mov
data16
pop
aam
imul
pop
pusha
push
mov
mov
pop
adc
pop
clc
inc
aad
dec
int
jge
mov
mov
aam
and
mov
push
jge
mov
lea
xchg
loopne
add
repnz
push
cmpb
push
fimuls
sahf
mov
cmp
loope
push
int
jmp
fs
clc
push
add
adcb
cmpb
jmp
gs
add
mov
push
rcll
scas
xchg
adc
jbe
leave
pushf
mov
clc
jmp
ror
sbb
call
icebp
inc
or
inc
testl
jge
and
inc
cmp
lds
push
jo
psadbw
shlb
cmp
out
mul
mov
xchg
jmp
mov
push
fsubrs
and
mov
pop
cmp
inc
push
out
xchg
xchg
add
xor
adc
lret
cmp
lcall
lea
or
cmp
scas
dec
jne
or
xor
clc
je
push
sbb
or
loopne
loopne
push
mov
das
dec
inc
rclb
pop
addr16
dec
dec
sbb
addl
ds
jmp
mov
push
add
push
mov
dec
test
and
cmp
mov
add
push
add
jne
cmpb
jp
orl
mov
test
lahf
mov
mov
call
insb
cmp
lods
xor
push
xor
push
test
test
sub
push
popa
and
test
dec
push
mov
aam
jl
fcmovnbe
sbb
jnp
dec
in
push
mov
cmp
push
and
lods
sbb
rcrb
enter
nop
cwtl
xchg
fs
fisttps
aam
int
cmp
jne
or
cmp
lock
inc
and
test
and
and
aas
js
xor
fs
push
call
dec
cld
sbb
or
jns
or
jmp
push
lret
out
mov
daa
test
in
adc
testb
jbe
call
sbb
sub
adc
clc
cmp
fsubr
insl
jecxz
push
jl
or
and
xor
lock
jbe
mov
stc
cmp
and
mov
js
mov
pop
into
xchg
push
jl
jne
fcoml
xorb
jcxz
adc
aad
push
fmull
out
ljmp
fcomps
cltd
rolb
ja
pushf
fmuls
xor
pusha
insb
loope
sarb
add
ds
add
push
add
int3
ret
fnstenv
pop
lock
push
hlt
jge
ja
mov
add
cmpsb
pop
inc
or
ja
gs
push
adc
adc
mov
jo
in
into
lock
jbe
aaa
aaa
mov
or
and
dec
or
repnz
mov
clc
mov
and
adc
push
push
bound
xor
push
sbb
addb
fistpl
or
push
adc
shrb
push
loopne
pop
push
jb
push
push
outsl
testl
pushf
add
sub
test
xchg
les
push
lea
adc
ret
ret
cmc
add
dec
pusha
inc
call
xor
sub
push
cmpsb
insl
test
cld
sahf
orb
xor
pop
mov
xchg
icebp
sub
mov
into
stc
lock
pop
das
je
cmpl
sbb
cli
sarb
arpl
adc
ss
jnp
inc
or
mov
sbb
pop
xchg
pop
out
xor
sub
mov
xor
jne
or
mov
mov
mov
or
ret
icebp
movl
sub
test
mov
fmuls
call
cmp
push
adc
es
js
add
inc
or
scas
gs
fwait
xlat
adc
mov
or
clc
js
mov
aad
and
test
leave
mov
adc
mov
mov
xor
fidivl
sub
inc
inc
inc
push
and
inc
pop
add
cmpsl
lcall
cwtl
or
inc
inc
mov
je
or
fsubl
and
sub
pop
push
cli
mov
ret
daa
je
les
pop
pop
sub
pop
pop
pop
mov
mov
cmp
inc
or
mov
dec
mov
cmp
nop
adc
push
inc
je
push
or
in
test
in
adc
shlb
ret
cmp
hlt
jns
jp
mov
push
push
inc
xchg
int3
lock
mov
push
adc
sbb
je
lds
jae
cmp
imul
mov
or
pop
loopne
lret
sbb
fcoms
mov
xchg
loopne
hlt
clc
push
scas
or
mov
add
jl
fidivs
mov
divl
pop
test
push
cltd
addr16
add
loope
jge
push
jp
and
add
xorb
pop
pop
fstpt
cmp
or
je
push
dec
sbb
jge
jp
outsl
push
sbb
jne
inc
mov
or
xor
shll
push
push
sti
ret
aad
mov
jmp
jne
cmp
add
push
jge
mov
and
lds
sbb
leave
jle
lods
xchg
mov
call
fistl
test
arpl
inc
mov
push
inc
jo
pop
or
xchg
add
mov
lea
mov
jne
orb
mov
mov
mov
pop
sub
adc
xchg
add
sbb
cmpsb
jae
fs
sub
xchg
xchg
or
loopne
outsl
mov
xchg
cli
insl
sub
push
leave
daa
inc
cmp
push
sub
adc
pop
push
mov
adc
jg
pop
dec
or
jns
mov
stos
inc
jle
push
gs
pop
jns
cmpsb
int
fiadds
add
lock
add
pop
pop
clc
or
cmp
jl
cmp
lcall
mov
cmpl
pushf
xor
outsl
outsb
xchg
mov
pop
push
clc
addr16
sbb
push
push
push
push
push
push
pushf
mov
jnp
lock
stos
dec
mov
jb
pusha
push
xor
pmulhuw
add
lret
jb
adcb
and
push
mov
test
pushf
fcom
call
push
pop
ds
jo
pop
pop
dec
jb
mov
fwait
mov
lea
addb
leave
add
fs
test
mov
lea
lods
sub
adc
bound
in
jo
push
movsl
sbb
push
pop
push
xchg
sbb
subb
cmpsb
xor
fs
imul
pusha
shlb
mov
jo
jne
dec
loop
add
cmp
add
inc
pop
sub
push
and
and
adcb
jae
or
pushf
cmp
mov
inc
add
xor
out
push
sbbb
add
adc
outsl
adc
mov
inc
das
mov
test
or
inc
cmp
lods
add
push
adc
push
cmc
adc
cmp
idivl
cmp
mov
adc
or
popf
aas
pop
pop
outsb
out
jmp
jae
or
xorps
mov
mov
mov
rclb
push
dec
or
clc
or
ret
into
sub
call
jae
ss
lods
pop
cmc
roll
mov
adc
mov
pop
dec
add
testl
ret
dec
fildl
push
mov
pop
das
jns
sahf
cmp
sub
xchg
mov
dec
repz
mov
dec
dec
push
cmp
aad
div
push
add
pop
add
and
mov
imul
or
push
push
mov
or
or
test
inc
ret
xchg
or
cmpsl
and
add
stc
fistps
rcrl
push
imull
add
cld
xor
andb
movsl
addr16
mov
pop
mov
inc
or
shrd
sbb
adc
xchg
hlt
xchg
inc
std
movsb
icebp
arpl
push
test
lret
dec
cmp
mov
es
insl
xchg
xor
sub
pop
cmp
adc
or
xchg
clc
das
pusha
inc
mov
dec
sbb
inc
adc
cmpw
jne
xchg
push
xor
xchg
inc
inc
xchg
xchg
inc
and
enter
add
sbb
fidivs
adc
std
push
dec
sbb
lcall
lods
push
push
lods
aam
js
mov
insl
loop
nop
xor
push
inc
test
in
iret
push
mov
sbb
xor
xor
or
fnstsw
or
add
mov
push
cmp
sbbb
mov
clc
xor
mov
mov
push
inc
cmp
sub
or
mov
sub
mov
xor
inc
notb
sub
pop
mov
mov
sub
into
add
and
jl
mov
test
dec
mov
inc
mov
dec
jp
mov
cmp
push
mov
bound
bound
fidivrs
sbb
jle
and
or
xor
adc
jbe
inc
and
call
lcall
sbb
imul
inc
cld
loope
and
xchg
add
push
ljmp
mov
jmp
movswl
mov
add
data16
cmp
das
pop
cmc
adc
dec
inc
push
lahf
sbbb
pop
bswap
shrb
ret
xchg
jl
out
aam
mov
iret
mov
push
add
add
add
add
in
pop
pop
add
add
mov
jge
adc
xchg
wbinvd
out
fisttps
pop
push
cmpsl
call
inc
push
hlt
push
xchg
faddp
mov
xorb
popa
lods
add
push
movsb
pop
pusha
pop
xor
mov
cmp
inc
insb
outsl
push
and
mov
dec
inc
mov
add
push
mov
adc
xor
pop
scas
cmpsb
push
pop
andl
xchg
lret
loope
in
push
mov
push
movsb
xchg
sti
adc
and
adc
outsb
push
push
aam
xchg
stc
xor
popf
pop
mov
cs
or
sbb
mov
pop
sbb
shld
jne
inc
ja
js
cmp
int3
inc
xchg
sub
or
sbb
mov
js
lock
adc
dec
inc
rorb
loopne
ljmp
jp
push
adc
hlt
call
push
mov
lret
test
out
out
pop
mov
sbb
or
xchg
lret
dec
add
sbb
sbb
add
cmpsl
sbb
mov
aaa
sbb
or
ds
cmp
lock
adc
ret
or
cmp
scas
inc
pop
pop
daa
push
jne
jmp
push
push
out
pop
mov
ljmp
dec
add
inc
xlat
or
pop
push
mov
testl
stos
mulb
divb
and
nop
xchg
push
shld
mov
outsl
jecxz
iret
repz
fs
adcb
pop
cmp
cwtl
push
flds
movsl
mov
nop
pop
bound
jnp
xchg
adc
in
lea
push
sbb
pop
push
push
clc
lret
loope
dec
adc
push
ret
outsb
pushf
or
pusha
dec
jmp
je
pop
xchg
ds
mov
mov
mov
movsb
adc
cmp
sub
and
movsb
out
ja
or
imul
inc
adc
xchg
xchg
or
push
sbb
mov
jns
and
sub
cmc
ret
test
or
xor
sbb
insl
adc
cmp
je
and
inc
cmp
jl
xchg
push
push
dec
shlb
dec
cmpxchg
jl
mov
dec
leave
adc
push
xor
mov
dec
push
adc
fistpl
clc
les
test
mov
add
inc
and
daa
pop
lds
adc
push
xor
inc
repnz
mov
xchg
and
jge
loop
movsb
inc
and
cmp
rolb
test
rorb
xor
insb
add
mov
dec
stos
les
cmpl
adc
mov
sbb
cmp
xor
inc
sub
adc
sub
sahf
pop
js
data16
lock
jmp
dec
lcall
push
jo
xchg
cs
cwtl
out
aad
test
sub
loop
or
pop
mov
xchg
jb
inc
cld
push
ljmp
pop
mov
test
dec
or
xorb
test
add
adc
push
push
test
stos
push
test
in
cmc
xor
mov
and
repz
push
sti
jo
cmp
insb
pop
int
xchg
cmp
es
mov
add
mov
push
sub
cmp
mov
or
dec
cli
pop
push
xor
jae
sti
sub
mov
ljmp
inc
std
push
lahf
rcr
add
mov
enter
sahf
cwtl
add
aaa
jle
add
inc
and
inc
or
call
dec
out
jp
nop
sub
sub
xchg
aad
cmp
push
mov
das
push
jg
fisubl
lods
out
sbb
xor
test
adc
mov
and
push
ljmp
fwait
sbb
out
or
lods
mov
push
test
insb
test
sub
sbb
ret
adc
cli
sub
cmp
popa
xchg
inc
sbb
xchg
mov
cmc
cmp
test
pop
rcrb
in
push
cmpl
mov
xchg
loopne
je
xor
jns
pop
jp
sub
jb
xchg
inc
push
movsb
lret
pop
movsl
push
mov
cmp
rolb
jge
scas
aad
test
aam
or
in
add
xchg
or
and
and
out
push
cwtl
add
cmp
iret
int
mov
push
mov
lock
cmp
or
push
mov
stos
adc
sbb
test
sub
xor
aaa
stc
add
xchg
stc
or
test
push
inc
scas
adc
sub
lahf
rolb
add
int
xchg
mov
sub
add
xchg
jne
leave
ljmp
and
fidivrl
popa
leave
add
xor
mov
loope
xchg
push
and
push
addl
jno
ja
adc
dec
stos
mov
dec
lock
lret
xchg
xor
scas
sbb
push
enter
pop
arpl
push
push
mov
jne
xor
adc
lea
xchg
or
int3
adc
sbb
jle
jbe
sbb
dec
add
scas
ja
push
pop
fmuls
xchg
nop
and
popf
cs
dec
xchg
ret
ja
insl
push
adc
sbb
cmp
in
cs
mov
mov
mov
lret
or
push
icebp
mov
call
inc
cltd
jno
mov
sbb
cmp
push
fs
dec
add
scas
cmp
cmp
faddp
fstpt
in
aaa
adc
push
xor
stos
je
dec
cmpsl
add
rorb
fmuls
push
sub
sbb
sbb
je
fadd
je
jg
enter
add
vpaddw
insl
cmp
outsb
adc
aam
ret
stos
xor
jns
lcall
mov
lcall
cmp
inc
push
out
test
mov
sbb
dec
gs
subl
inc
jle
out
pop
or
mov
ret
inc
adc
xor
xchg
pop
jecxz
mov
or
mov
adc
fwait
inc
xlat
xor
loope
sub
or
sarb
xor
jmp
cmp
shlb
iret
aam
xor
gs
jecxz
adc
adc
pop
mov
dec
sarb
pop
arpl
mov
mov
enter
adc
cmp
xor
pusha
or
inc
fidivrl
mov
lods
test
xor
test
leave
xchg
mov
orl
and
push
mov
cmpl
sub
je
je
add
cmp
mov
outsb
ss
sbb
push
and
lds
dec
inc
repz
int
cs
cmpsl
pushf
leave
mov
pop
sub
and
inc
rolb
push
aaa
push
rcl
clc
push
cmp
sbb
leave
mov
sub
sub
inc
sub
cmp
jl
cmp
lcall
xor
in
bound
cmp
cmp
cmp
cmp
adc
pop
cmp
lret
push
xchg
sub
imul
dec
jp
mov
mov
cmp
add
pop
pop
pusha
xchg
lret
add
bound
cwtl
dec
inc
cmpsb
push
cmpsl
push
out
sub
js
cmp
cmp
push
mov
add
popa
repnz
cld
inc
adc
mov
mov
mov
aad
or
dec
pushfw
out
cwtl
cwtl
and
lcall
mov
pop
dec
dec
adc
xor
add
jmp
movsl
sub
sbb
adc
fnstcw
push
rcrl
sahf
add
testb
cmp
mov
out
sahf
out
lcall
pop
int
jl
cmpsb
test
iret
jnp
lods
push
fdiv
push
cmpsl
test
mov
incb
je
sbb
std
nop
aam
xor
mov
mov
jge
add
enter
and
mov
and
add
fstps
mov
pop
add
lea
in
xorb
ficoms
xchg
pop
out
push
or
and
jg
push
push
jnp
dec
into
cmpsl
pusha
jle
cmp
xchg
test
cmp
xchg
leave
sbbl
enter
jae
push
and
add
adc
jb
cmp
push
movsl
add
lock
out
dec
jge
mov
or
sub
or
lcall
call
xchg
mov
inc
push
cmp
js
add
mov
pop
add
jno
cmpsb
out
jne
orb
sarl
add
add
fnsave
sub
adc
jae
inc
sbb
imul
jle
cmp
jg
and
ljmp
xchg
cltd
and
push
jo
push
add
pop
xor
jmp
adc
cmp
mov
cmp
movsl
and
jl
jp
cmp
outsb
lods
push
xlat
int3
push
push
or
mov
or
popl
ret
and
out
and
les
out
stc
in
adc
sbb
add
mov
addb
or
xor
dec
push
mov
sub
xor
inc
inc
in
cmp
pop
cmp
fidivrl
and
inc
adc
jl
out
dec
pusha
mov
adc
push
add
or
xchg
xchg
sub
lahf
push
insb
add
test
dec
and
and
call
or
ds
sub
sub
iret
fs
cmp
dec
xor
insb
jo
xchg
adc
push
jl
in
jmp
push
xor
jb
lea
add
pop
in
mov
fisttps
lea
add
outsl
dec
mov
push
addb
inc
mov
test
pop
test
mov
dec
jno
jle
fs
inc
leave
and
and
sbb
test
inc
and
sub
mov
fistl
xchg
inc
push
inc
jo
cs
xchg
popl
push
test
mov
pop
push
jp
dec
cmp
nop
add
push
add
jbe
cwtl
sub
adc
jb
jo
fcmovb
mov
jge
movsb
adc
inc
sub
mov
adc
insl
pop
sbb
add
mov
inc
lods
mov
insl
push
or
orb
push
jecxz
mov
in
sub
or
add
jge
and
loopne
xchg
sahf
and
jmp
dec
mov
push
add
or
lods
cmp
pop
mov
xor
sbb
in
aam
jmp
mov
add
adc
xor
pop
dec
ljmp
push
xchg
mov
sti
xchg
rcll
mov
inc
das
call
sub
fistpl
sub
test
ljmp
adc
cmp
add
jnp
jne
sbb
inc
cltd
push
jno
adc
call
sbb
sbb
loop
ljmp
fnsetpm(287
fcoml
mov
xor
in
push
andb
aad
repz
movsb
hlt
push
mov
adc
sub
jbe
pop
sbb
sbb
mov
pop
mov
fwait
xor
pop
add
movsb
xor
aas
jbe
insb
pop
decl
mov
dec
je
cmp
jne
and
push
icebp
mov
push
xor
push
sbb
and
mov
pusha
xor
push
xchg
loopne,pn
ljmp
xchg
js
and
xor
sbbl
cmc
repnz
add
andb
xor
or
push
mov
stc
pushf
lods
pop
mov
sbb
and
and
fsubrl
sub
icebp
inc
xor
add
incl
cmp
rclb
sub
sbb
mov
nop
test
xchg
dec
scas
xchg
cmpb
add
test
pop
cmp
jge
ficoml
cltd
inc
andl
xchg
fisubrs
test
cmp
dec
inc
sarl
push
jno
cmp
loop
or
rol
dec
adc
cmp
scas
adcl
sub
pop
inc
fs
into
jge
jmp
das
mov
xlat
out
pop
add
push
dec
add
sbb
subb
in
adc
or
cmp
fs
and
xchg
sbb
sbb
xchg
in
jge
std
mov
add
dec
xlat
cmp
notb
cmp
xchg
and
sub
nop
mov
adcl
lcall
push
addr16
add
sti
and
out
cltd
scas
or
lea
cmp
cmp
inc
push
xchg
addr16
paddusb
aas
lea
in
sbb
outsl
and
incl
pop
cmpl
add
je
cmpl
int
call
movsl
or
inc
bound
loop
je
cwtl
and
sub
sub
sub
push
cmpl
loope
mov
or
xor
jge
mulb
push
dec
dec
test
xor
and
in
cmp
cmp
adc
mov
lret
adc
std
iret
add
cmp
je
adc
into
add
out
lods
test
dec
mov
add
push
aas
mov
sub
xchg
xchg
cli
pop
je
push
xor
add
adc
je
sbb
push
push
jae
pop
push
fsubrs
daa
fistpll
movsb
jb
into
fwait
sub
bound
cmpsl
or
xor
adc
or
into
adc
aas
pop
pop
and
sub
inc
mov
lods
mov
push
test
push
sub
dec
das
imul
pop
adc
fucompp
test
hlt
mov
mov
or
cmp
inc
xchg
aaa
add
dec
pop
pop
mov
adc
push
dec
push
pop
pop
into
fbstp
inc
sbb
es
ret
movsl
mov
push
xchg
cmpsl
rcl
sub
or
pusha
pop
push
mov
mov
xor
and
xchg
rorb
inc
lods
pop
pop
add
mov
xchg
mov
jle
lds
dec
xor
adc
or
xchg
scas
sahf
iret
sub
pop
mov
cmp
sbb
mov
sahf
push
push
dec
popa
xor
mov
pusha
xor
and
fnstsw
xchg
push
mov
dec
cmp
dec
faddl
test
imul
push
data16
add
test
dec
xchg
ss
outsl
adc
lret
or
jecxz
add
test
insl
lods
inc
pop
arpl
jge
push
cli
loope
pushf
push
nop
pop
add
ss
jns
pusha
and
data16
out
cmpb
inc
nop
push
xor
imul
add
repz
inc
into
xor
aaa
cmpsl
add
inc
insl
stos
insb
data16
stc
cmp
sub
pop
pusha
test
jno
nop
jo
test
mov
add
cmp
push
dec
pop
xor
sbbb
or
xor
or
clc
call
push
sub
push
js
addr16
cwtl
sub
popf
rcl
test
aad
ret
and
cmp
mov
aam
inc
cmp
les
or
xor
sub
popf
push
ret
inc
mov
loopne
jne
or
push
aas
push
loopne
xlat
imul
push
inc
push
in
add
imul
lahf
ret
int3
jmp
sbb
arpl
and
cs
scas
xor
pop
or
pop
in
int3
inc
pusha
bound
xchg
in
pop
mov
push
rorl
mov
and
jg
rolb
jnp
mov
cmpl
cmp
sbb
pop
push
mov
popa
adc
ret
push
xchg
mov
call
cmp
xor
fwait
jo
pop
jbe
inc
popa
xor
jne
pop
cmpsl
addl
xchg
inc
sbb
scas
xor
jge
push
mov
cltd
mov
xchg
sbb
inc
es
xor
mov
sub
xor
mov
mov
push
out
ds
mov
movsl
out
xor
lcall
mov
iret
sarl
cmc
or
ds
repz
mov
jns
imul
push
pop
neg
jnp
fs
sahf
lods
push
inc
xchg
push
push
inc
inc
push
or
or
sti
ret
ret
xor
mov
dec
mov
jmp
jbe
xor
lahf
pop
faddl
cli
jns
loop
xchg
pushf
sbb
das
mov
gs
cmp
sub
pusha
mov
xchg
arpl
mov
shrb
mov
lods
leave
xchg
dec
mov
insb
fs
addb
xchg
xchg
mov
inc
mov
and
pop
sub
xchg
xchg
mov
xchg
cmp
bound
roll
xlat
adc
mov
mov
mov
add
enter
or
aas
iret
repz
ss
sahf
out
lcall
xor
out
lods
in
incl
push
repz
repz
cmp
aam
adc
push
dec
loop
pop
jns
test
sub
lea
call
movsb
sti
cltd
call
lea
outsb
push
cmp
jns
notb
add
jae
adc
in
nop
cmp
or
push
push
mov
pusha
add
cmc
test
pop
dec
push
lea
push
imul
push
inc
pop
outsl
daa
mov
test
jne
mov
xor
je
adc
jnp
xchg
and
cmp
mov
jae
imul
add
lret
or
xchg
daa
movsb
cmpxchg
mov
xchg
dec
out
mov
sbb
idivl
mov
sbb
pop
and
mov
sub
imul
inc
push
add
mov
xchg
or
pop
nop
or
adc
push
adc
inc
xor
mov
xchg
pop
push
adc
add
and
arpl
ss
mov
pop
in
cmp
fs
movb
push
nop
push
and
mov
push
roll
cmp
cmpsb
and
mov
enter
movb
pop
les
aas
shlb
jmp
jb
xor
das
aaa
sbb
jo
push
imul
mov
push
xchg
pushf
leave
andb
sbb
sub
das
push
lock
mov
xchg
dec
push
jns
dec
sbb
dec
enter
sbb
mov
and
lahf
mov
mov
mov
mov
ja
loopw
cwtl
mov
vaddsd
cmp
or
std
push
fsub
xchg
mov
fstps
frstor
jg
bswap
dec
dec
dec
sahf
mov
pop
xchg
mov
jno
test
mov
pop
lea
dec
sub
cmp
push
lock
push
lahf
cmpsb
nop
jge
mov
loope
rcrb
xor
pushf
xchg
out
rolb
add
cmp
mov
and
clc
sub
in
pop
ficompl
aam
pop
fsubr
cs
lret
mov
mov
movsb
das
call
pusha
ja
pop
loopne
mov
push
inc
inc
sbb
dec
iret
loope
repnz
mov
roll
pushf
movsl
mov
mov
sub
pop
xor
in
push
adc
and
cmp
xor
loop
xor
mulb
clc
movsb
mov
push
mov
fdivrs
add
jl
cmp
bound
sbb
pop
and
push
and
pop
sbb
and
adc
pushf
in
mov
and
dec
xchg
nop
and
and
xchg
inc
xchg
imul
jmp
js
sub
pop
ds
sbb
add
sub
adc
or
push
jbe
mov
or
jp
ds
jb
js
cmp
call
lea
clc
arpl
neg
mov
jl
cvtdq2ps
sub
xchg
in
add
sbb
adc
repz
pop
test
out
xor
lea
adc
mov
add
pop
pop
arpl
imul
add
xchg
sarb
xchg
jnp
push
cmp
jne
inc
xchg
outsl
mov
mov
icebp
insb
lock
dec
ss
loopne
mov
aaa
or
pop
andl
outsl
pop
add
les
or
sbb
adc
inc
push
jecxz
subb
jb
lds
pop
or
jnp
push
mov
add
lods
or
loope
inc
ljmp
jmp
jns
xor
aam
pop
cltd
aad
addb
add
adc
sub
jmp
mov
lock
je
jg
cmp
xor
andb
stos
mov
jg
mov
cli
pop
cmp
test
inc
mov
pusha
sahf
into
inc
addb
xor
ret
inc
dec
ret
push
stos
xor
push
gs
or
shlb
mov
call
sub
add
dec
xor
sbb
enter
or
stos
add
sar
jb
scas
cltd
xor
sarb
add
movsb
loopne
adc
cli
ss
xor
push
xor
pushf
push
add
mov
iret
pop
aas
pusha
xor
dec
cld
sbb
push
add
movsl
xchg
movsb
shlb
add
mov
push
sub
movaps
dec
sahf
cmp
xor
repnz
out
insl
push
bound
cmp
sbb
xor
fs
push
sbb
mov
adc
scas
push
lods
jne
xchg
push
sbb
xor
push
push
dec
push
ret
mov
push
add
in
bound
sar
sar
sub
sub
pusha
push
das
adc
mov
push
and
rclb
and
adc
and
sub
lret
pushf
sub
sbb
push
lret
pop
add
inc
adc
leave
shr
dec
outsl
in
push
pop
xor
push
or
push
dec
js
or
sub
dec
xor
xor
in
nop
mov
in
pop
mov
scas
add
shlb
and
mov
jne
insl
push
dec
adc
inc
pop
pop
jg
movsl
cmp
sub
add
rolb
mov
sub
inc
xchg
fdivl
xor
lcall
and
loopne
push
mov
inc
mov
jnp
add
pushl
dec
cmp
inc
xchg
ret
sbb
cmp
and
stos
pop
pop
xor
sub
ja
mov
test
jnp
or
cmpl
pop
cmpsb
inc
inc
sub
add
push
lds
mov
and
adc
loop
popa
and
icebp
push
mov
ret
push
push
lea
pop
iret
push
xor
push
sub
mov
in
push
inc
sub
adc
and
loopne
ret
out
mov
dec
or
pop
inc
aam
xor
andl
shrb
loopne
pop
inc
pop
inc
pop
es
jl
cmp
into
mov
dec
push
mov
testl
inc
out
mov
jns
cmp
adc
push
movsb
lea
dec
xchg
test
jmp
sbb
xorb
ja
cs
pusha
sub
addb
adc
mov
add
xchg
push
cmp
fdiv
adc
cmp
pop
fildl
ret
call
in
and
dec
leave
test
and
mov
popf
and
cmp
add
or
mov
sub
xchg
shlb
and
and
and
movsl
inc
repz
cmp
lahf
xchg
dec
jl
jg
test
and
lcall
sub
push
ret
jns
inc
xchg
aam
push
sub
xchg
rolb
sbb
and
mov
mov
push
mov
roll
xchg
pop
xor
push
sub
aas
and
fidivrl
mov
mov
sub
mov
fmull
jg
ljmp
movsb
outsl
and
push
sar
mov
cmp
jle
imul
sbb
dec
in
dec
movsl
adc
and
xchg
out
push
mov
cmp
sub
in
popf
xchg
imulb
sub
leave
adc
add
cmp
add
adc
sbb
adc
divl
sub
data16
adcb
mov
push
push
movsb
sub
and
cli
gs
cmpsl
mov
cmp
push
or
push
inc
popf
call
jp
jb
mov
xor
imul
xchg
adcl
adc
xor
fdivs
mov
xchg
jmp
adc
adc
lret
pop
push
bound
incb
loope
stc
jb
jecxz
add
and
xorb
push
push
fstl
cmp
bound
add
adc
out
bound
push
clc
xchg
pop
lock
mov
or
std
loopne
mov
movsl
push
enter
jl
ret
jo
add
inc
xchg
mov
sar
shrb
push
sbb
and
pushf
push
cmc
or
fmull
inc
push
dec
repnz
xchg
sbbb
add
xchg
cmp
rorb
or
sbb
add
inc
cs
inc
test
add
sbb
pop
je
pop
adc
aam
je
cmp
or
jno
subb
out
cmp
adc
adc
jg
cmpl
adc
push
pop
push
fisttpll
inc
sub
sub
mov
cmp
jae
xchg
jecxz,pn
xor
pop
push
push
int
loope
cltd
inc
jb,pt
jmp
mov
lock
pop
add
jbe
push
add
dec
aam
or
je
imul
icebp
jne
adc
push
mov
xor
cwtl
les
push
fwait
into
cltd
rolb
push
push
subl
adc
test
inc
decl
push
push
jns
push
and
inc
loop
sbb
rolb
sbb
aas
imul
fwait
dec
xor
insb
sub
mov
mov
and
mov
faddl
lods
fistl
loopne
ljmp
mov
inc
sbb
lea
sub
inc
and
dec
cmpl
cmp
push
push
xor
mov
inc
inc
adc
aaa
lds
loopne
js
push
mov
add
rcrl
mov
movsl
adcb
adc
scas
cmpsl
popf
cli
xor
add
in
jno
xchg
fmull
jmp
dec
scas
xchg
mov
pop
std
lock
xchg
mov
push
mov
push
xchg
sbb
push
es
add
call
imul
xchg
ror
or
js
jmp
fnstcw
pushf
dec
scas
mov
jmp
cmpl
shrl
dec
sbb
out
push
adc
mov
xlat
and
cli
or
push
rcrl
cmc
adc
idivl
lods
lods
movq
push
pop
stos
push
repz
lcall
lret
push
push
scas
add
or
fs
mov
cmpsl
sbb
inc
call
sub
dec
adc
jne
sbb
push
mov
loopne
loopne
mov
adc
out
dec
xchg
hlt
and
cmp
lcall
pop
push
test
inc
sub
sub
loopne
and
adc
add
js
cmp
outsl
xchg
ret
push
add
push
or
nop
or
lcall
and
push
push
loope
add
aaa
sbb
stos
and
arpl
push
adc
push
mov
sub
xchg
inc
xchg
add
inc
sbb
and
insl
hlt
outsl
jo
fldl
iret
and
int3
xchg
mov
mov
and
sbb
or
mov
subl
fidivl
dec
or
in
mov
popf
insl
adc
movsl
and
cmpsl
or
xchg
xchg
pop
mov
jle
ret
std
mov
mov
mov
push
leave
call
and
pop
mov
mov
out
add
xchg
push
inc
jp
push
mov
jns
cmpsb
cld
add
int3
sahf
dec
mov
inc
je
sub
and
adc
cmpsb
in
imul
or
fidivrs
sub
inc
xor
pop
sbb
sub
aaa
aaa
inc
mov
loope
add
dec
loopne
stc
loopne
ret
xor
inc
pop
call
adc
adc
clc
ror
std
inc
shlb
pushf
add
pop
push
jnp
or
or
jle
or
es
fldt
popa
shlb
pop
mov
add
and
inc
outsl
loope
mov
lret
cmp
pop
call
pop
adc
ret
add
jp
loopne
adc
js
xor
push
mov
xorb
mov
xchg
xor
sbb
xchg
cltd
dec
mov
fisttps
loopne
jae
loopne
pop
loope
cmp
cwtl
sbb
sahf
dec
js
mov
jle
dec
sub
add
mov
hlt
inc
outsb
loop
dec
jge
adc
push
or
inc
dec
gs
mov
int3
jno
xor
mov
mov
push
sub
add
mov
dec
adc
popl
inc
pusha
sub
add
push
dec
push
call
xchg
inc
sbb
and
push
pop
xchg
mov
js
inc
dec
dec
jmp
push
sub
movsb
into
lea
jle
std
xor
lea
std
nop
lods
mov
dec
ja
xchg
les
dec
add
cmp
sub
and
mov
in
xchg
sbbb
cmp
outsb
add
fdivl
pop
mov
test
mov
xchg
jbe
sub
jne
inc
loop
xor
ja
mov
dec
jns
out
lods
in
pusha
xchg
in
aas
xor
sub
mov
cmp
jle
add
js
mov
rcl
ss
leave
and
inc
inc
ret
cmpsb
or
add
shrl
clc
jo
push
push
sbb
js
test
sbb
push
dec
dec
sub
dec
xchg
repz
fstpl
add
xchg
push
test
xor
out
and
pop
pop
sbb
push
and
ret
call
bound
pop
nop
outsb
pop
rdpmc
fstpt
call
dec
out
cmp
push
push
jne
sbb
mov
xlat
std
inc
or
jne
add
psrlw
and
in
pusha
adc
xchg
inc
mov
lahf
sub
or
adc
dec
pusha
cmp
xchg
cli
add
jg
js
dec
cmp
js
xchg
fs
push
push
push
dec
jo
movsl
sbb
rcl
dec
pop
jl
add
push
push
push
pop
outsb
mov
push
std
xorb
inc
xor
xchg
test
je
sbb
push
adcl
cmp
sub
dec
testl
mov
je
adc
dec
and
clc
jb
sub
push
dec
gs
clc
inc
sbb
xchg
rcrb
jecxz
pop
pop
mov
test
adc
cmp
cmp
mov
mov
xlat
mov
es
ja
nop
or
and
scas
aam
bnd
rcll
fmuls
insl
adc
mov
repz
cs
add
mov
cmp
andb
adc
jb
ret
rcll
jae
or
arpl
imul
rorb
sbb
lock
adc
sbbl
jp
ret
std
sbb
test
xchg
unpcklps
push
mov
aad
sub
andl
lods
je
jle
jne
mov
xchg
xchg
xchg
and
movl
cmp
mov
xor
xor
dec
push
imul
push
mov
mov
lahf
mov
push
push
add
xchg
iret
jnp
popa
cmp
js
js
cs
add
cmp
repz
jne
jno
inc
cmp
fldenv
pop
scas
sub
in
push
push
xchg
xorb
jge
mov
jl
fbstp
sub
mov
and
js
push
movsl
loopne
dec
addr16
mov
sub
inc
push
aam
call
adc
or
pop
adc
nop
pop
sbb
jbe
push
ret
and
mov
lldt
xchg
dec
or
insl
sub
in
ror
mov
aam
xor
je
sub
adc
lea
sbb
mov
lahf
inc
mov
jmp
inc
cmp
xchg
ja
je
mov
ljmp
and
inc
inc
push
fisubl
sqrtps
jmp
inc
mov
push
in
cltd
sub
int3
mov
cmpsl
push
mov
cmp
cs
push
sbb
imul
fmuls
cmpps
inc
lea
ret
xor
insb
cmp
bound
xchg
pop
pop
lods
xchg
leave
cmpsb
pop
test
into
inc
add
mov
pusha
mov
push
inc
mov
mov
jnp
orl
pop
lods
push
push
stc
add
icebp
cmovae
mov
add
inc
pcmpeqb
rcl
cmp
sub
or
shr
je
push
jecxz
rcrb
test
icebp
test
push
loope
push
or
subl
jbe
sbb
pop
xchg
orl
or
pop
icebp
int
adc
jmp
inc
cli
mov
jl
aaa
fcoms
sarb
dec
sbb
loope
push
fcompl
inc
sbb
mov
mov
jg
xchg
ret
addl
pusha
mov
hlt
xor
mov
xor
test
popf
dec
pop
xchg
subl
adc
lds
mov
add
cmc
add
int3
xchg
push
push
jp
movsl
sub
push
cmc
data16
out
adc
enter
mov
ja
sbb
or
adc
or
or
lock
fldl
into
jo
jg
cld
ret
mov
gs
push
clc
pop
cmp
rep
xor
dec
xor
repnz
dec
mov
addr16
mov
hlt
mov
sub
mov
pop
ret
mov
mov
aaa
and
xchg
lods
ljmp
adc
adc
mov
push
iret
jne
in
and
inc
mov
push
add
fdivs
cmp
in
pop
inc
shrb
pop
mov
cmp
jl
xor
xor
jbe
cmp
pusha
and
scas
mov
sub
push
insb
imul
stos
pop
mov
sbb
mov
sbb
in
push
add
notb
or
sub
rcrl
inc
ret
cmp
int3
cld
mov
orb
jo
add
add
push
inc
and
xlat
and
cli
shl
xor
ja
cmp
sti
xor
aaa
mov
or
jle
inc
jl
pop
add
adc
inc
mov
popa
mov
sub
loop
or
sub
inc
cmpsl
cmp
bound
add
dec
add
andb
sbb
fsubl
test
xlat
fimull
adc
dec
sbb
xor
addl
inc
dec
out
sub
xor
add
shlb
add
arpl
mov
sbb
mov
gs
adc
dec
insb
push
ds
filds
addr16
mov
stos
pop
push
xor
andb
push
xor
test
push
jbe
cmp
mov
jl
sbb
xlat
push
push
adc
loope
jl
sub
push
das
mov
insl
xchg
and
sbb
addl
push
sbb
jle
inc
xchg
sub
scas
nop
adc
into
jo
pop
inc
scas
xchg
jno
fdivl
or
shlb
dec
sti
adc
push
aaa
lea
ffree
pusha
xchg
insb
push
cmp
sbb
mov
jmp
aad
inc
mov
ss
js
or
insb
and
jmp
mov
xchg
cmpsb
lds
cmp
bound
popf
xchg
sub
jae
enter
adc
add
push
pop
dec
mov
scas
xchg
mov
lea
sbb
test
and
inc
push
jns,pn
and
aad
and
xor
test
add
pop
les
jg
mov
rep
sub
jne
pop
mov
fs
jns
in
mov
lods
lahf
push
pop
dec
ret
sub
push
jl
inc
add
arpl
aam
mov
and
call
adc
pop
daa
pop
loopne
pusha
dec
in
adc
lcall
xchg
add
mov
push
dec
lret
int3
test
add
movsl
mov
inc
fisubrl
cmc
std
jne
push
xor
fldcw
push
and
add
add
jle
add
or
daa
add
scas
std
add
cli
sub
add
cmp
dec
pop
or
mov
jne
mov
or
adc
sub
and
or
jecxz
movsb
popl
add
inc
test
push
inc
ja
pop
ltr
adc
imul
mov
sub
xchg
rolb
inc
and
push
gs
sbb
mov
cmovo
cld
push
mov
inc
add
pop
pop
lods
push
xor
add
ss
adc
inc
dec
adc
xorl
cmp
sarb
dec
sbb
push
and
add
add
ljmp
jo
enter
pushf
cwtl
popa
mov
lcall
cmp
mov
add
xor
cli
push
mov
fdiv
xchg
loopne
inc
push
push
pop
es
cmp
inc
or
in
inc
inc
inc
pop
mov
stos
inc
insb
sbb
adcl
dec
je
inc
jne
cmp
sub
movsb
fwait
jb
aas
rolb
and
shrb
jbe
loope
push
test
hlt
push
mov
jns
movups
adc
aas
pop
or
push
ja
es
inc
cmpsl
test
or
fidivrl
dec
fwait
jne
push
inc
and
xchg
sbb
and
jmp
add
jp
mov
sbb
lret
mov
sub
lock
shrb
ret
movsb
dec
adc
dec
filds
lahf
lds
add
rclb
faddl
pop
bound
mov
adc
mov
jbe
add
cmp
sub
and
add
fildll
jae
mov
cmp
mov
out
jecxz
lods
fs
pop
pusha
dec
inc
jo
insb
popf
orb
adc
inc
cmp
pop
dec
jl
inc
sub
nop
xchg
xchg
ret
adc
xchg
adc
sbb
adc
add
xchg
iret
movsb
jno
test
test
cltd
loop
dec
cmp
dec
add
xchg
mov
and
push
addb
dec
in
mov
jne
sub
fs
orb
dec
js
dec
add
inc
sub
cs
cltd
clc
addr16
adc
inc
popl
xor
mov
cmp
sub
and
xchg
sub
scas
xchg
and
and
push
push
push
adcb
ja
add
dec
jns
fisttpll
adc
add
xchg
repnz
mull
cmp
lcall
mull
adc
int3
mov
bnd
sti
nop
rcrb
sub
jne
shr
shl
pop
mov
rclb
add
sub
dec
faddl
mov
and
dec
lock
jmp
pop
and
pop
dec
sub
sub
add
sarb
push
mov
pusha
sub
fistpl
adc
mov
xchg
fistps
cmp
shlb
lret
sub
inc
push
push
out
mov
mov
aad
xchg
xlat
ret
pop
adc
inc
punpckhdq
dec
or
ret
xor
pop
xor
pop
test
jle
adcb
cmp
mov
jp
and
sbb
mov
shl
jl
dec
cmp
jo
leave
pop
pop
nop
pusha
adc
add
pop
ret
pop
and
insb
add
xor
stc
or
icebp
or
add
lds
iret
cmp
push
sub
int3
test
add
add
lods
fsubr
jno
mov
mov
cwtl
je
mov
gs
sbb
sbb
mov
adc
psubsb
enter
loopne
bound
push
push
inc
imul
adc
or
das
push
add
and
loope,pn
add
test
sub
inc
inc
and
out
lods
rorb
pop
ret
int3
push
sub
xor
cmp
cmp
sbb
cmp
xor
enter
mov
test
nop
add
adcl
jns
xor
dec
adc
mov
push
push
mov
mov
sub
xchg
je
sbb
addb
lret
insl
xor
lods
sbb
add
and
shll
jo
inc
push
push
pushf
mov
cwtl
push
mov
aam
pop
in
jo
lds
orl
in
pop
xor
loopne
sbbl
std
or
add
mov
pop
gs
lret
in
push
mov
push
imul
inc
adc
les
jo
or
in
bswap
mov
push
sub
cmp
lods
push
dec
add
mov
adc
push
push
enter
dec
xchg
jmp
and
xlat
jl
cmp
out
nop
adc
jmp
pop
add
cwtl
sub
pop
clc
adc
sbb
call
out
les
pushf
rcrb
inc
and
mov
xlat
ja
push
clc
mov
pop
sub
and
inc
int3
aas
test
lock
gs
in
outsb
addps
mov
inc
in
loop
ret
jmp
adc
in
jae
xchg
out
xor
test
jo
sbb
xlat
cmpsb
pop
out
cmpsl
adcl
add
dec
cmpl
sub
hlt
fs
sbb
repz
push
mov
aam
add
ss
or
enter
loopne
jns
popf
mov
adc
adc
xlat
jne
push
aas
xor
sbb
xorl
pop
xor
fisubl
pop
aaa
pop
insb
shl
jmp
cmp
or
in
jbe
or
or
test
cmp
js
adc
js
and
neg
out
outsb
scas
repnz
xor
es
pushf
cltd
cmpsb
and
hlt
add
ret
sbb
and
dec
lds
ja
loopne
adc
lock
cmp
pop
int3
cmp
mov
xor
xchg
inc
mov
cwtl
sub
jp
popa
xchg
in
xchg
stos
aam
aas
pop
adc
push
aad
add
push
push
outsl
lods
push
out
aas
adc
scas
sub
out
sbb
xchg
jge
aas
sbb
mov
jns
adc
pop
xchg
mov
scas
leave
add
rcrb
sbb
sbb
loopne
inc
dec
or
and
xchg
sbb
jg
in
aas
andb
cmp
dec
cmp
sbb
push
shlb
cmpb
fs
pop
push
push
ja
jb
jl
jne
nop
pop
aas
or
push
push
push
repz
ret
adc
pop
ja
insb
or
mov
cs
dec
test
popl
pop
jb
or
jmp
mov
xchg
sub
dec
push
adc
sub
adc
xor
push
rcl
clc
push
lahf
in
or
lret
push
test
or
xorl
arpl
in
fldl
lock
popf
sbb
pop
fsts
dec
and
and
mov
out
rorb
and
push
pop
jg
or
adc
repnz
push
mov
lds
push
xchg
push
ret
adc
int
add
cmpsb
pop
ret
fld
sbb
mov
and
stc
loopne
cld
add
jle
mov
mov
lea
or
loope
cmp
or
outsl
arpl
mov
inc
cmp
sbb
xlat
jl
pop
mov
outsl
pop
js
and
nop
add
shlb
mov
loopne
cs
mov
mov
fwait
xor
mov
dec
test
jno
pop
test
daa
insb
movsb
addb
cltd
push
shl
jns
adc
jno
lahf
pop
adc
loopne
ret
xor
cmp
sbb
test
sbb
pop
add
adcb
add
or
or
push
ret
push
nop
cmc
mov
mov
xchg
dec
or
pusha
jb
out
test
jle
imul
testl
or
lret
and
adc
inc
adc
cmp
pushf
dec
subb
insl
jle
mov
outsb
push
test
jne
mov
mov
push
pop
or
push
mov
daa
xchg
mov
arpl
or
mov
push
outsb
mov
icebp
jl
or
and
add
pushf
add
rclb
pop
inc
pop
pop
or
lods
cmp
pop
stos
mov
pop
mov
push
or
leave
and
cmp
xchg
adc
add
lods
decl
or
add
inc
sub
sub
push
cltd
mov
pop
mov
mov
popa
rcrl
enter
inc
cmp
xchg
push
fists
clc
push
pop
bound
cmp
xor
sbb
dec
mov
sub
push
add
pop
and
dec
add
xorb
or
adc
fadds
or
or
inc
lea
or
sbb
lahf
idivl
cli
dec
fldlg2
fldl
fstpl
mov
pop
or
pop
or
loopne
in
jg
mov
xor
lock
jecxz
add
popa
or
and
pop
cmc
stos
ja
cs
inc
mov
fabs
dec
fdivl
jmp
fmull
fcoml
scas
jae
fldl
or
adc
mov
adc
sub
bnd
shrl
xchg
dec
sbb
push
adc
lock
mov
pop
mov
xchg
add
and
insb
inc
fdivs
mov
pop
add
popf
push
fcomps
nop
jo
pop
xor
mov
pop
pop
loopne
mov
sub
inc
jecxz
icebp
fdivrp
push
popl
bound
cwtl
lds
dec
daa
negl
add
xor
push
jo
negb
lods
loopne
mov
fiaddl
add
pusha
mov
sbb
mov
push
mov
push
in
xor
imulb
push
push
inc
sbb
and
cwtl
add
aas
sbb
pop
push
mov
and
inc
dec
or
std
xchg
pop
inc
arpl
lret
ja
inc
or
cs
mov
inc
inc
xchg
inc
inc
sbbb
mov
bound
into
cmp
sub
lods
mov
push
mov
sbb
jmp
stc
int3
mov
inc
jp
inc
mov
adc
jnp
cmp
mov
adc
call
dec
or
push
mov
mov
push
mov
inc
fimuls
push
dec
mov
xor
sub
xor
adc
sbb
pushf
inc
and
imul
push
popf
jp
xchg
add
lret
lea
pop
adc
inc
ret
lahf
add
or
bound
sbb
test
push
je
inc
in
aas
and
mov
inc
mov
cmpb
ds
shlb
enter
add
mov
repnz
int3
add
hlt
add
mov
mov
sub
scas
or
jmp
mov
or
cmp
fcmovnbe
rsqrtps
jl
aas
add
cmp
rcl
push
dec
fsts
push
jb
jg
cmp
xor
add
shrb
sub
pop
dec
sub
push
adc
repnz
add
cmpsl
jnp
imul
inc
andl
sbbl
add
sahf
je
xchg
inc
mov
or
bound
dec
jo
xchg
mov
inc
jbe
adc
aam
rcrb
sub
das
je
or
or
je
mov
mov
fcoms
sbbl
add
add
rep
sbb
jecxz
dec
sub
mov
daa
test
aam
or
test
and
or
dec
adc
pop
sahf
mov
mov
into
out
dec
dec
movsl
repnz
xor
pop
mov
aad
testl
into
lcall
sbb
rcrl
mov
add
add
daa
and
or
jle
add
push
ror
mov
xor
shll
pop
test
adc
ret
jne
or
addr16
adc
cmc
and
push
and
dec
lods
mov
sub
xchg
jl
ds
xor
cmp
jne
cmp
jne
add
pop
ss
push
inc
push
xchg
clc
add
push
jne
cmp
decb
and
icebp
jne
mov
call
cmp
inc
sub
cmp
fisttpll
lods
adc
adc
ret
and
adc
orl
cmp
es
add
imul
fdivrs
dec
mov
fcoml
das
dec
sub
and
pop
adc
fs
call
inc
or
or
push
xorl
and
scas
adc
pop
ficoml
cmp
cmp
jl
call
jae
out
pop
pop
pop
pop
jecxz
sbb
insl
out
mov
mov
cmp
jne
mov
ret
cmp
or
out
test
in
pop
pop
out
jne
mov
ret
mov
jbe
cmp
jae
sbb
lods
jg
xor
adc
sbb
testl
out
repz
jg
aaa
mov
enter
jle
push
lcall
std
lahf
cld
test
lret
cmp
jle
xchg
repnz
pop
add
sbb
mov
jecxz
or
mov
pop
das
sbb
sarl
adc
enter
pop
cvtps2pi
pop
mov
push
add
je
add
push
test
scas
xchg
enter
jg
movb
or
push
xchg
fcmovb
and
or
xchg
jbe
xor
inc
out
call
and
sti
mov
dec
insl
cmp
jbe
cmp
push
jg
test
add
aam
jl
lock
popf
nop
push
dec
fildll
and
dec
add
out
loopne
aam
filds
and
jg
cmp
jle
gs
push
push
push
sub
pop
jo
push
test
add
xchg
jae
insb
mov
mov
out
arpl
xchg
lea
test
stos
inc
lcall
and
movsl
pop
dec
pop
xchg
loopne
test
cmp
push
ljmp
nop
cmpsl
dec
les
sti
add
and
pop
icebp
mov
pop
andb
aam
push
movsl
fcmovnb
xor
lock
mov
iret
cmp
cltd
or
stos
mov
adc
lcall
int3
adc
push
inc
push
or
add
add
mov
or
xchg
add
xchg
dec
out
cs
cmp
xorb
cmp
adc
xor
push
int3
mov
adc
xchg
add
push
push
imul
les
movsl
sbb
je
test
stos
adcb
ja
pushf
add
shlb
mov
not
clc
sets
dec
adc
rcrb
cli
mov
lds
cmp
push
adc
into
ficoml
cmc
pop
fs
push
enter
lods
pop
scas
and
xchg
jo
xorl
aaa
imul
enter
and
fbstp
push
rol
aad
inc
pop
sbb
pop
push
mov
repnz
sbb
pop
je
xchg
mov
mov
inc
sub
or
sub
js
je
fstpl
lret
outsl
add
in
dec
fdivrp
dec
lock
inc
mov
push
inc
add
cli
mov
daa
call
std
adc
sarb
mov
or
test
sub
ret
leave
mov
mov
rclb
je
or
adc
add
jmp
pop
xor
push
ss
insb
ret
jbe
negb
jp
add
aam
out
and
add
jl
cmp
xorb
cmp
dec
or
out
or
pop
ja
xchg
shlb
cmp
sub
lcall
jmp
jmp
pop
add
add
in
lods
add
pop
sbb
fwait
les
add
add
mov
addb
push
jns
filds
es
and
syscall
mov
ficoms
or
xor
dec
inc
stos
inc
xchg
add
mov
jbe
sbb
dec
push
cmp
mov
or
movsb
inc
fadd
mov
cmp
je
pop
pop
jno
popa
insl
pop
je
lret
xor
scas
pop
testb
scas
dec
or
movsb
adc
jo
push
cmp
mov
push
push
dec
sarb
push
cmp
and
jg
adc
popa
pop
or
xor
xchg
inc
adc
inc
adc
sub
add
xchg
xor
pop
push
iret
push
dec
subl
or
je
dec
add
sub
out
js
add
dec
test
fistpll
adc
push
mov
and
mov
add
lds
inc
mov
add
lock
aas
aas
xor
mov
roll
or
popa
add
in
mov
or
aaa
push
add
push
ljmp
pop
pop
mov
scas
mov
cwtl
je
fisubs
sub
jae
pop
cmp
cmp
aas
cmp
jno
dec
loope
dec
add
push
loope
test
mov
inc
aas
lea
enter
xchg
pop
push
stos
inc
add
add
cmp
in
pop
xchg
mov
and
xchg
insb
jne
rolb
pcmpeqb
call
adc
or
js
jne
mov
jbe
ret
cmp
or
sub
cmpsb
pop
int
add
adc
add
iret
in
add
lret
jae
xor
daa
pop
mov
sbb
adc
add
lret
cmp
and
nop
sbb
inc
xchg
aaa
sbb
inc
mov
add
mov
sbb
dec
shrl
push
adc
lea
fadds
shrl
lcall
rep
stos
lea
mov
lea
pop
inc
es
inc
add
cli
fistl
cli
push
xor
fldt
pusha
data16
cmp
push
std
add
pusha
loope
or
enter
cmp
jne
movsl
movsb
push
sub
mov
sub
movsw
sbb
test
repz
or
js
mov
mov
xchg
fwait
or
inc
inc
faddl
dec
adc
sbb
or
push
dec
inc
call
hlt
imul
into
push
add
push
dec
leave
xor
enter
xlat
mov
lock
jne
sbb
das
imul
jp
and
insl
pop
push
out
ljmp
inc
lea
jae
mov
or
push
lret
lock
sbb
push
push
lret
movsb
ret
rorl
rcrb
shlb
and
or
dec
or
pop
adcl
sub
add
add
jns
test
aaa
cltd
pop
add
daa
fsubl
push
mov
insb
mov
ret
or
jle
xor
push
mov
xchg
mov
cmc
mov
les
and
and
int
adc
lahf
pop
or
and
jge
mov
outsb
aam
fistpl
mov
mov
lea
cltd
div
inc
cmp
sarl
scas
inc
loopne
pop
out
or
mov
clc
mov
push
inc
js
loopne
mov
clc
push
decl
loopne
xor
inc
sub
rolb
dec
jne
mov
mov
inc
jp
int
andl
insl
jae
filds
in
mov
nop
test
fmuls
repnz
push
jge
call
popw
add
sbb
inc
cli
out
cmp
outsl
movsb
mov
mov
sub
or
add
bound
out
adc
lea
and
mov
shrl
or
nop
lea
sti
ss
mov
push
adc
out
add
mov
xor
hlt
or
jecxz
jge
lcall
lea
loop
mov
aam
test
insl
adc
push
push
push
add
dec
insb
es
dec
jp
cltd
push
sar
mov
cltd
xchg
int3
adc
iret
sbb
scas
xlat
mov
int3
jp
stos
daa
cmpsb
sub
stos
lods
sbb
fwait
jecxz
lods
inc
mov
inc
sub
shlb
dec
nop
lock
rclb
sub
mov
xchg
and
or
or
ret
push
shrb
sub
inc
sahf
mov
add
xchg
xchg
xor
in
pusha
mov
or
pop
jle
and
mov
xchg
push
cmp
sub
cmp
add
cmp
adcb
adc
inc
negb
outsb
mov
lods
cmpsb
mov
add
out
in
rcr
cmp
push
inc
in
fwait
push
jmp
popf
sub
in
ja
push
and
jmp
or
cltd
adc
push
and
mov
movsl
enter
add
xor
loopne
add
out
push
mov
xchg
aam
test
mov
mov
je
dec
or
add
adc
call
lods
dec
pop
mov
mov
sbb
adc
pop
lock
dec
jl
cmp
add
mov
es
push
addr16
or
jb
jbe
xor
fcmovne
sub
jne
ucomiss
dec
xchg
or
or
mov
push
xor
subb
jo
test
cmp
fidivs
sub
movsb
adc
inc
aad
bound
sarb
cmp
ljmp
loop
js
mov
xlat
loope
sub
loope
cmpl
insb
push
cmp
addb
mov
adc
adc
cwtl
adc
in
adc
cmp
xor
xchg
mov
jp
xchg
cmp
jns
sbb
int
or
push
add
imull
jns
adc
mov
sub
and
leave
int
dec
rorb
clc
cmp
fnstcw
jg
sub
dec
mov
sbb
pop
xlat
in
lea
xor
lret
or
aad
xchg
inc
call
movsb
sbb
daa
popf
es
xlat
add
inc
mov
fsub
or
mov
sbb
add
add
cmp
inc
inc
dec
sarb
lret
ret
mov
sub
mov
mov
fcomp
push
mov
push
pop
pop
lea
dec
cmp
jne
aam
xor
add
rclb
into
pop
cmp
and
lods
cld
sbb
ss
jo
or
push
and
push
pop
add
push
jmp
add
test
sbb
scas
mov
je
fnstenv
push
dec
and
push
es
lahf
shl
xor
pop
jp
and
dec
inc
je
lahf
mov
sbbb
sbb
in
sub
lods
inc
jge
cmc
sbb
mov
sbb
dec
lock
mov
and
inc
jnp
xchg
pop
add
mov
push
mov
jle
add
movsb
jnp
mov
pop
sub
cmp
sub
sbb
insl
jmp
mov
sbb
fwait
aam
jb
dec
dec
test
dec
inc
cltd
sbb
rcl
inc
or
cmpsb
xor
pop
push
test
xor
xchg
dec
dec
shll
cmp
and
arpl
mov
sub
enter
add
jge
xor
rolb
mov
in
lods
aas
rclb
xchg
das
add
fnstsw
push
jo
sub
mov
pop
roll
fmull
xlat
andb
inc
xchg
xor
outsl
jmp
sarl
in
arpl
pop
pushf
inc
in
mov
arpl
inc
mov
or
mov
xchg
mov
popl
xor
roll
push
xor
jmp
sub
pushf
push
sahf
and
inc
ja
push
mov
inc
fs
push
sub
push
dec
js
std
sub
add
dec
jno
lods
iret
mov
dec
cmp
jge
push
push
mov
jo
jl
into
outsl
add
bound
inc
scas
int
inc
push
push
rcr
add
mov
add
push
add
add
lret
sbb
icebp
mov
mov
jns
mov
clc
sbbb
insl
mov
cmp
cmpsl
xchg
cs
mov
das
mov
pusha
push
pop
xor
inc
and
repz
test
movl
jge
rcrl
enter
add
mov
ds
aam
int3
insb
ret
ret
das
hlt
cmp
or
jecxz
mov
pushf
cmp
fcmove
cmp
sub
test
bound
or
insb
or
sbb
and
sarb
adc
inc
aad
pop
or
jl
jle
xchg
jo
mov
addl
pop
sbb
fldenv
inc
iret
mov
adc
adc
cmpb
inc
aas
push
xor
inc
add
jae
sub
mov
pop
add
xchg
add
sbb
sub
mov
insl
sub
cmp
mov
and
xor
ror
fsts
movsl
addb
mov
cmpsl
push
sarb
cmp
sub
push
cmp
inc
shlb
adc
mov
mov
jns
mov
sbb
or
adc
insb
out
in
outsl
push
das
push
add
jnp
movsl
insl
pop
add
imul
cmp
and
dec
sbb
push
popf
mov
in
sbb
test
xchg
lock
sub
or
push
jle
insb
movsb
cmp
xchg
rorl
aas
push
ljmp
lcall
pop
xor
idivb
lea
adc
arpl
inc
fimuls
mov
mov
add
jb
add
sbb
cmp
mov
call
sbb
adc
adc
jne
jmp
insl
inc
jge
les
sarb
add
jne,pt
pop
xchg
push
fwait
or
jmp
ss
lcall
aaa
mov
sahf
gs
adc
bound
or
adc
mov
movnti
mov
jge
mov
lds
loop
cmp
and
add
pop
movsl
inc
push
inc
push
mov
jo
mov
es
les
repnz
push
xchg
pop
shlb
cmp
jp
pop
ja
adc
mov
xlat
push
cli
mov
int3
inc
xchg
xchg
or
cmp
out
call
inc
xchg
rolb
xchg
push
rorb
lea
fldt
ds
ret
stc
or
add
push
or
pop
enter
je
nop
mov
or
push
sbb
ficomps
push
jne
add
xchg
sub
out
jo
xor
ret
add
cmp
cmp
add
lcall
sbb
pushf
mov
inc
inc
adc
cld
adc
in
mov
xchg
lods
push
pop
sub
xchg
mov
leave
mov
popf
les
xchg
push
jp
pop
insl
or
pusha
mov
cmp
xor
rolb
push
mov
inc
sub
movsl
cltd
cltd
shrb
add
fs
sub
or
int3
adc
shl
sub
setp
ss
xchg
lea
clc
lds
mov
call
repz
or
and
xor
push
jne
cmpsl
cmp
sbb
jp
fs
lods
mov
xchg
out
mov
addl
pusha
sbb
push
push
push
mov
loopne
or
adc
lcall
inc
mov
xor
cmpb
push
push
and
dec
in
ret
jle
mov
movb
adc
lea
repnz
cmp
addb
mov
out
add
pushf
inc
xchg
into
rorl
lods
or
fldcw
mov
loopne
cmc
or
aaa
fadd
fadd
pop
cs
aam
pop
imul
pop
mov
inc
out
dec
stos
popf
mov
jb
pop
mov
mov
loopne
dec
xchg
and
adc
pop
jo
or
jae
movsl
fcomps
pop
jp
dec
loope
and
insl
add
adc
mov
xor
sub
push
cld
inc
fldl
vshufps
mov
in
subl
push
movsb
sub
jns
scas
or
movsb
mov
jns
fildl
les
rcrl
inc
inc
push
pop
insl
xlat
jns,pn
dec
inc
pop
push
seta
test
loopne
imul
sysret
pop
and
inc
das
ljmp
adc
enter
jl
push
mov
int
jbe
dec
inc
imul
or
or
mov
push
add
push
mov
mov
dec
nop
enter
xor
test
jo
or
jmp
xchg
clc
inc
les
dec
mov
je
sti
mov
mov
cmc
xchg
xlat
mov
add
mov
fs
pushf
clc
mov
jne
inc
sub
ljmp
cmc
pop
out
mov
mov
aad
add
sub
sub
push
shl
push
notb
test
jno
and
pushf
push
add
mov
sbb
dec
cmp
or
sub
js
ret
lret
orb
and
or
addl
mov
push
int3
shlb
std
iret
add
sub
pusha
mov
and
sahf
dec
mov
jo
fwait
dec
imul
ljmp
rcrb
and
or
or
jmp
pop
shlb
pushf
mov
dec
push
addb
fs
dec
inc
push
aas
push
or
push
jp
sbb
push
cs
push
divps
enter
xchg
inc
push
ja
xchg
test
mov
pop
inc
pushf
sub
xchg
loope
ss
shlb
sub
and
mov
push
pop
cmp
and
push
out
xor
mov
xchg
lods
sbb
fstpt
stos
cmp
jg
sub
pop
push
lock
jmp
and
fimull
lret
jmp
shrl
pop
shr
sbb
es
push
dec
sbb
pushf
and
jo
shlb
fsubl
mov
sti
pop
adc
mov
enter
call
or
pop
adc
jg
mov
mov
xchg
hlt
mov
or
sbb
mov
add
lret
lods
push
add
push
notb
loopne
or
les
clc
cmc
rorb
shrl
popf
ret
lcall
add
add
imul
mov
lcall
push
fisubrs
mov
idivb
scas
ss
jmp
fistpll
ret
adc
ljmp
cmp
dec
dec
pop
bound
sub
sbb
inc
dec
aas
inc
xchg
addb
andb
jbe
sbb
push
push
cmpb
xor
dec
xorb
xchg
xor
pop
das
xchg
ffreep
push
sbb
fdivl
dec
push
xchg
adc
or
lock
rol
push
mov
xorl
aas
cmpsb
mov
lcall
xor
jmp
jbe
add
clc
push
mov
cmp
inc
aad
pushf
jnp
bound
push
jb
pusha
ret
pop
lcall
and
loope
subb
mov
fisttpll
dec
pop
sti
adc
sbb
or
mov
jnp
cmp
inc
push
add
sub
add
pop
jne
loopne
divps
push
into
pop
sbb
clc
adc
ret
movl
mov
or
mov
sub
rcr
ret
loopne
jp
or
imul
adc
loopne
pusha
push
mov
inc
xchg
decl
xor
outsb
sub
sub
mov
mov
lret
fiaddl
pop
dec
sbb
ja
insb
sub
sbb
and
fldenv
push
sub
add
jno
decb
test
ss
ret
inc
inc
clc
and
lret
cvttps2pi
mov
cmp
psrad
cld
adc
nop
hlt
cmp
outsb
push
cmp
sahf
cmc
test
jmp
std
inc
pop
scas
mov
lret
shlb
mov
xchg
xor
sbb
cwtl
pop
mov
subl
imul
jl
mov
ficomps
mov
push
in
mov
ljmp
adc
pusha
mov
mov
adc
aaa
sub
add
pop
jecxz
paddusw
lret
test
shll
test
dec
insb
mov
ja
ja
add
aam
push
push
rorb
andb
add
repz
adc
mov
xorl
lods
icebp
adc
mov
xchg
and
ret
mov
mov
ljmp
stc
mov
clc
add
out
pop
call
js
jl
dec
inc
mov
std
sbb
out
jle
or
int
xorb
pushf
popf
pop
daa
test
dec
sub
je
push
lods
push
dec
or
or
loope
jo
jne
push
jbe
pop
sub
and
test
inc
push
and
mov
xchg
lret
or
push
popf
pop
mov
mov
mov
push
das
data16
sub
inc
in
lock
xorb
insl
mov
jnp
pop
fsubr
je
mov
test
movl
scas
push
aam
or
hlt
aad
loopne
je
pop
jl
mov
mov
add
adc
mov
call
sbb
loop
frstor
ret
loopne
shlb
mov
das
loopne
jl
imul
cmp
add
and
mov
push
add
ljmp
push
add
loop
insb
int3
add
pop
inc
subl
add
inc
and
push
test
icebp
xchg
push
sbb
sub
push
outsl
and
loopne
fsts
je
loop
out
or
cli
sub
cmc
sub
rorb
mov
push
sub
sar
cmp
or
clc
add
gs
sbb
neg
cmp
rolb
orl
pop
adc
push
sub
leave
xchg
cld
add
test
cmp
stc
nop
or
sahf
push
xchg
loope
dec
aam
or
inc
shl
fstl
jp
pop
dec
mov
arpl
ficoml
inc
inc
add
push
loopne
pop
push
cmp
mov
sub
iret
jmp
and
sbb
fcomps
adc
int
movsb
push
pop
push
fbstp
sarl
leave
aas
add
int3
push
dec
ljmp
xor
adc
fs
movsb
aad
mov
cwtl
idivb
repnz
int3
push
xor
in
mov
mov
push
push
enter
jno
loop
or
xlat
push
dec
push
cmp
jle
add
inc
lea
sub
lahf
stos
aad
pushf
dec
and
pop
sub
jp
xchg
rcrl
or
push
push
sbb
loopne
into
rorl
push
cs
shrb
loope
or
xor
push
pop
inc
iret
mov
mov
orl
fsubs
popf
cmpb
daa
mov
mov
movsb
addl
mov
jmp
inc
insl
testb
push
cmp
in
mov
cmp
test
xor
cmc
mov
and
movsb
mov
in
pop
xchg
inc
scas
inc
adc
jmp
mov
daa
add
dec
add
mov
or
ds
lea
mov
cmp
mov
fcoms
or
imul
mov
pop
push
rolb
out
xchg
rorl
mov
leave
int3
aaa
jnp
xchg
add
scas
call
inc
or
mov
mov
popa
fs
dec
pop
fstps
jne
or
push
jnp
jo
dec
bound
xchg
sub
sbb
or
inc
or
jmp
out
push
in
sbbl
cmpsl
dec
js
cmp
jbe
pop
pop
out
les
popf
cmp
popf
roll
inc
ret
inc
cmp
add
hlt
xchg
ret
movl
popf
sbb
mov
xchg
leave
fimuls
xor
jg
shlb
and
lock
movsl
and
push
sbb
pop
add
or
aad
shrl
out
pop
jg
sub
push
sub
push
push
adcb
cmp
aam
cmpl
inc
ss
outsb
xchg
and
rcrb
pop
sahf
sbb
addr16
or
add
pushf
ffreep
adc
pop
push
mov
fimuls
movsb
aam
nopl
je
mov
ret
int
push
movsl
dec
push
mov
fimuls
push
push
push
repz
cli
movsl
mov
insl
push
jg
dec
dec
lcall
out
add
outsl
push
sbb
cltd
ds
dec
xchg
rclb
in
push
lods
and
inc
dec
lea
mov
lea
lods
jb
add
adc
lods
mov
xchg
add
or
mov
inc
push
dec
mov
push
inc
movsb
call
scas
lea
dec
jne
fimull
push
push
fbstp
or
jmp
push
pop
push
aam
inc
mov
mov
mov
scas
push
jg
or
sub
xchg
addr16
pop
fimuls
sbb
ret
loopne
outsb
pop
push
mov
outsl
pop
out
ret
mov
sbb
add
rorl
rclb
or
inc
push
and
xor
imul
pop
cmp
adc
pop
cwtl
jae
xor
cmpsl
loopne,pt
imul
inc
mov
mov
sbb
adc
adc
or
mov
add
pusha
das
aad
orl
mov
je
inc
push
mov
push
orl
cmp
jle
cmp
and
adc
pop
or
push
sub
and
pop
incl
dec
lods
dec
xchg
pop
or
sti
xchg
push
lds
push
lea
adc
mov
adc
jne
and
je
and
adc
or
shlb
in
lret
xor
mov
sub
inc
scas
push
cmpsl
mov
mov
inc
push
mov
jp
lret
inc
adc
in
dec
out
mov
push
adc
pop
jo
lea
adc
setne
pop
jle
add
insl
add
movsb
adc
sbb
push
jp
dec
fldl
jg
jbe
xor
sbb
inc
lock
ret
lods
lea
cmp
cmp
je
push
lcall
in
and
inc
out
je
aam
sbbb
xchg
or
pop
faddl
mov
rcl
jae
jp
aas
fisttpl
fcoms
mov
add
in
adc
dec
jne
push
out
xor
xor
dec
out
in
pop
mov
dec
test
pop
add
cli
sbb
adc
push
inc
ret
outsl
inc
stos
mov
or
cmp
je
stos
test
inc
inc
dec
mov
bound
fmulp
vmwrite
out
dec
mov
aas
inc
std
lret
sbb
adc
inc
inc
mov
inc
bound
dec
and
pop
push
push
push
aaa
mov
sub
stos
orb
and
sbb
xor
addr16
fldcw
jbe
das
mov
jmp
push
flds
push
fnstcw
aaa
cltd
sbb
add
cltd
xchg
lcall
push
pop
jecxz
pop
pop
arpl
test
pop
inc
mov
mov
or
xchg
mov
idiv
cmpb
sbb
add
mov
stos
sub
jne
push
xchg
adc
adc
clc
lds
xlat
test
add
sbb
inc
lea
inc
pop
insl
divl
push
sbb
insb
jmp
push
pop
pusha
fs
or
add
add
add
push
push
faddl
mov
dec
adc
loope
insl
mov
push
push
pusha
cmp
push
push
inc
cmp
xchg
jmp
or
cld
repnz
or
loop
push
mov
test
pushf
data16
add
lods
inc
cmp
push
xor
rclb
lock
ret
lret
inc
shlb
and
jge
mov
dec
popf
jl
incb
xor
mov
jbe
repnz
insb
in
or
lea
sbb
adc
mov
jae
xor
addl
push
es
loopne
sbb
cwtl
loopne
int3
and
sar
das
in
jne
xchg
adc
adc
cmp
cwtl
fdivr
pop
inc
push
out
loop
fwait
jnp
sub
jnp
or
sub
addl
jle
mov
inc
popa
adc
faddl
loope
jl
loope
mov
dec
push
shl
fstl
cmp
jle
push
push
fadds
xor
push
add
mov
xlat
dec
adc
mov
cs
push
adc
fmuls
shlb
push
mov
dec
loop
movsb
fldl
sub
pop
xchg
ret
and
mov
dec
inc
sti
ret
cltd
sub
and
dec
pop
pop
adc
jo
cli
shl
cmpsb
or
cmp
adc
jo
fs
sub
shrb
out
cmpb
ljmp
in
mov
sbb
jge
neg
cmp
jge
scas
mov
mov
fs
fdivr
dec
cmp
sahf
pop
dec
jmp
jge
neg
cmp
xor
push
outsl
dec
in
jle
jp
nop
add
in
out
push
cmp
mov
je
clc
enter
outsb
mov
push
push
jnp
inc
sbb
and
test
imul
adc
aam
insb
inc
xor
push
icebp
xchg
nop
ret
imul
add
loopne
sub
jne
cmp
mov
int3
jne
outsb
andb
add
xchg
bound
pop
cmp
push
inc
iret
xorl
enter
cmc
sub
and
add
xor
pop
iret
cs
dec
scas
inc
mov
pushf
cli
sbb
add
vxorps
aad
icebp
repnz
xor
add
push
outsb
push
outsl
and
xor
add
jno
ja
mov
push
js
mov
adc
pop
movsb
outsb
call
dec
xor
mov
std
xchg
jmp
fisttpl
fists
push
adc
int3
cmp
add
test
xor
cmp
xchg
out
into
push
push
cmp
ret
xor
jg
out
or
fildl
cmovnp
cmpsl
inc
sub
imul
sbb
fiadds
mov
xor
adc
stos
addr16
inc
je
inc
xchg
xchg
pop
push
popa
mov
pusha
mov
pop
lock
or
inc
cmp
xchg
pushf
inc
push
add
cmp
aam
mov
adcb
xchg
mov
or
mov
push
mov
cmp
or
add
ds
popf
loop
adc
pop
ja
xchg
int
xchg
sub
adc
addb
add
push
and
dec
adc
push
sbb
mov
xor
or
sbb
dec
dec
nop
push
push
push
fsts
imulb
ret
xchg
or
cmp
sub
test
jb
fists
mov
cmpsl
push
clc
fldenv
push
pop
jle
push
push
les
mov
and
inc
cmp
pop
push
ja
or
adc
or
mov
push
dec
pushf
xchg
push
xchg
fcmovnb
adc
pop
pop
mov
inc
mov
ljmp
rcrl
lods
add
add
scas
iret
xor
andl
enter
sbb
sbb
adc
or
inc
dec
sbb
dec
adc
adc
lcall
mov
cmpsl
mov
and
inc
sub
and
mov
mov
cwtl
cmp
in
aad
je
test
cltd
test
cmc
mov
test
xor
dec
lds
dec
and
jmp
jno
add
jp
mov
add
pop
xor
pop
int3
xchg
pop
fidivrl
inc
pop
add
pushf
mov
movzbl
dec
int
or
or
jnp
push
in
mov
and
inc
jmp
add
arpl
push
inc
inc
je
jno
pop
mov
and
or
mov
inc
adc
lds
fmul
xchg
sub
push
cs
xchg
push
xor
push
je
mov
clc
sub
iret
inc
mov
imulw
addl
and
gs
pushf
into
popf
testb
jle
xchg
xchg
and
loop
push
sahf
xor
xchg
jo
sub
mov
jo
and
insb
jg
and
cmp
adc
sbb
sbb
jo
and
xor
push
inc
je
inc
mov
aas
adc
inc
sub
xchg
pop
push
inc
outsb
mov
sbbb
sbb
ss
xor
jl
jns
imul
adc
push
nop
mov
outsb
push
jge
inc
gs
imul
or
cmp
jle
mov
cmp
push
or
add
push
push
add
jmp
lret
inc
loopne
fidivrs
jg
rorb
xchg
out
int
xor
rol
lea
xchg
push
in
ljmp
adc
je
incb
jl
nop
push
stc
out
orl
xor
jne
pusha
lods
nop
sbb
movl
dec
push
je
pop
ds
inc
imul
pop
jmp
nop
orl
jl
addr16
and
adcb
pop
xchg
sub
test
jecxz
pop
in
ret
mov
xchg
xchg
mov
ja
aam
aaa
fs
mov
daa
mov
sbb
scas
inc
ja
pop
inc
cmp
mov
mov
dec
mov
imul
pop
lcall
lea
sub
push
xchg
add
xchg
dec
ljmp
rcrb
mov
add
or
aad
stos
inc
addl
clc
lds
bound
jbe
sbb
or
leave
fisubrs
inc
rcll
aas
jb
insl
lds
mov
fs
or
add
pushl
dec
add
jo
inc
add
lock
and
jmpw
shll
rorl
mov
jnp
or
fmuls
repnz
scas
inc
inc
inc
js
cld
mov
loopne
pop
push
push
fsubr
out
cmp
lock
xchg
inc
aam
repnz
sub
add
enter
testl
fistl
addr16
mov
fadd
jmp
ja
ret
mov
mov
jb
ret
lods
xchg
push
ret
ret
imul
mov
jmp
aaa
add
pop
pushf
add
push
lea
adcb
or
mov
inc
mov
or
sar
jl
leave
clc
jo
add
inc
add
inc
dec
repnz
mov
xchg
cmp
push
test
adc
inc
rep
test
lret
cli
mov
pusha
sub
push
adc
ss
jo
jl
mov
sbb
dec
inc
aaa
add
popa
test
inc
mov
xor
shl
and
sub
mov
iret
jne
lcall
cltd
pop
inc
lret
inc
cmp
inc
mov
filds
sub
mov
mov
clc
in
cli
scas
lret
sbb
cli
div
fnstcw
inc
xchg
test
jae
out
out
xor
cmp
mov
stc
inc
jno
cmp
nop
jl
test
push
std
xor
push
jns
sub
cmp
das
mov
cmp
jle
das
xor
faddp
imul
or
dec
push
stc
pop
movl
jnp
loop
and
or
popf
lcall
push
push
fildl
ret
push
cmp
pop
repz
les
push
sbbl
mov
mov
lea
inc
cmp
call
incb
sahf
lret
iret
pop
inc
and
les
dec
cmp
insb
inc
out
fnstsw
addr16
cld
test
rcrb
add
mov
addl
and
pusha
mov
pop
mov
adc
add
ltr
sub
add
cmp
fcmovbe
pop
add
sub
or
fmuls
aad
and
daa
adc
hlt
and
or
push
out
adc
das
sub
adc
and
stc
inc
jo
xorl
pop
inc
enter
mov
mov
add
fildll
and
jge
jb
and
leave
and
ret
sub
js
loopne
and
fsubrs
leave
and
sub
sarl
pop
add
movsb
cmp
push
rcll
sbb
sbb
test
fwait
mov
test
mov
jle
pushf
xchg
dec
jbe
mov
lret
mov
and
and
push
sbb
push
push
jbe
xchg
ds
pop
adc
dec
mov
add
enter
fcom
xchg
and
dec
mov
inc
fwait
dec
orl
fistl
imul
jno
adc
hlt
pop
inc
inc
mov
lods
adc
jge
leave
push
cmpsl
inc
mov
sbb
fadd
push
inc
popf
stos
daa
push
imul
add
lret
call
faddl
push
cmp
shlb
je
mov
push
nop
adc
push
pop
adc
sub
push
and
adc
jae
movsb
inc
mov
xchg
xor
loope
or
ret
or
lods
or
sub
add
mov
fldt
mov
inc
rorb
into
popl
pop
out
mov
adc
cmovo
or
mov
dec
sub
xchg
sbb
sar
imul
rcrb
hlt
cltd
dec
or
pop
jo
add
sbb
add
sbb
js
push
xbegin
xor
ret
ret
jg
sar
jp
jp
and
add
or
cmp
test
shrb
stos
push
push
push
cmp
dec
cmp
add
push
les
test
mov
sub
push
push
jns
and
sub
test
cmp
inc
or
mov
shlb
add
jge
sbb
xor
jl,pn
es
push
jns
jnp
xchg
js
js,pt
push
add
or
sbb
push
mov
les
pop
cmp
mov
lret
or
testl
and
xor
insb
push
cmpsl
daa
add
cmp
lds
sub
inc
mov
pop
arpl
mov
pop
cmpsl
fcmovb
xor
daa
pop
adc
mov
xchg
std
add
mov
stc
sub
lods
push
cwtl
pop
lods
inc
add
cmp
xor
pop
dec
and
push
xchg
daa
xor
mov
sbb
mov
or
mov
push
pop
or
xchg
and
cmp
sub
sahf
movsb
movb
and
pop
and
hlt
mov
pop
pop
dec
sbb
and
and
ret
into
inc
push
subl
sub
sbb
xchg
sbb
jmp
imul
and
cmp
mov
push
cmp
cmp
cmp
pop
inc
movsl
mov
sbb
aam
xor
add
sbb
cwtl
sbbb
inc
aad
inc
push
rorl
shr
gs
fwait
and
fisubrl
push
mov
lcall
addr16
add
fwait
adc
outsl
or
pop
test
push
xchg
pop
cmp
dec
dec
jecxz
je
lahf
dec
and
and
cld
sbb
aam
push
std
xchg
jle
in
cmp
xchg
mov
clc
mov
aaa
ret
jo
sbb
add
pusha
and
sbb
lea
sbb
bound
push
rclb
int
add
inc
pop
addl
repz
rorb
push
push
mov
inc
insb
mov
and
movsl
cmp
xchg
loopne
in
sub
xor
enter
icebp
and
pop
inc
mov
sub
rcrl
lock
sub
dec
push
push
dec
push
sbb
stos
shll
inc
imul
fisttpl
pop
cmp
push
push
inc
jne
push
adcb
xor
ds
sub
sbb
jecxz
lods
push
lock
lea
push
insb
outsl
adcl
jl
neg
and
jo
or
sbb
movsb
andb
inc
add
imull
jo
add
nop
lods
cmp
sbbb
push
cmp
js
mov
jns
push
pop
imul
mov
push
bound
push
jae
push
imulb
adcl
loope
dec
add
fmuls
xor
sbb
xor
mov
sub
mov
imull
or
inc
sub
sti
inc
inc
mov
andb
or
pop
test
les
xor
and
xor
negl
or
xchg
out
cmp
adc
or
rclb
add
inc
out
in
andl
cmpsb
inc
rcl
add
inc
or
xor
mov
pop
in
popl
mov
ror
aas
or
or
and
iret
push
decl
inc
or
push
lods
xor
jo
add
push
adc
std
adc
or
push
or
imul
and
mov
pop
ret
popa
std
fsqrt
ja
sub
sbb
inc
ds
lds
and
movsb
fisubrs
dec
add
scas
lret
mov
adc
pop
ja
pop
lcall
push
or
xor
push
or
test
mov
xchg
data16
sbb
jne
inc
popa
push
orb
rolb
call
mov
add
std
mov
mov
ja
cmp
dec
mov
scas
ret
rep
mov
dec
jp
xchg
add
inc
lock
inc
fwait
cmp
sub
add
push
xor
cmc
out
or
cs
gs
shr
and
cmp
jmp
push
or
ret
loop
lcall
push
mov
add
or
or
add
fs
fwait
dec
mov
push
or
insl
pop
cmp
ret
jbe
pusha
or
lods
add
or
loopne
repnz
rcpps
ror
sub
mov
sbb
cs
push
sbb
or
stos
fists
push
sub
xor
add
dec
hlt
fwait
add
cmp
lock
inc
arpl
mov
jg
lods
xor
dec
jle
insb
in
or
pop
pusha
scas
aaa
insl
int3
push
sbb
dec
add
push
cmp
fisubs
aas
cmp
pop
and
cmc
lret
jg
mov
xchg
mov
ret
subl
aaa
ds
dec
pusha
insl
inc
cmp
dec
xlat
fsubl
push
mov
sub
and
cmp
out
push
dec
outsb
sub
pop
adc
mov
out
mov
mov
cmpsl
xchg
pop
outsl
adc
incl
ret
sbb
xor
dec
ret
mov
test
mov
sub
pop
imul
adc
lcall
add
adc
pop
test
sbb
ss
push
and
or
or
add
test
imul
les
testl
pop
add
dec
adc
push
cmp
xchg
psraw
push
sub
push
mov
mov
add
push
push
push
rcrb
imul
or
jnp
outsb
clc
push
or
pushf
push
ja
add
or
mov
sarl
sbb
cli
push
lock
push
and
push
adc
pop
push
and
adc
insb
stos
int
setne
daa
jg
js
test
mov
jbe
mov
cmpsb
in
popa
pop
arpl
arpl
rcrl
out
push
lret
push
sub
mov
push
cmc
jae
push
in
adc
inc
push
mov
cmp
sub
xor
dec
push
fs
ret
sub
sub
filds
xor
cmp
add
push
cmp
inc
push
dec
loopne
and
adcb
sub
mov
stos
fsubr
or
mov
push
outsb
add
jl
mov
fwait
push
in
shrl
mov
clc
add
jns
test
add
imul
insb
and
mov
cmc
mov
add
push
mov
ljmp
push
xor
adc
gs
cmp
jp
adc
add
movsl
sub
das
cmp
imul
pusha
sub
ret
adcb
mov
xor
rclb
and
repnz
in
mov
mov
xchg
jecxz
jns
mov
adc
cmp
and
push
push
pop
ret
in
lods
data16
and
aam
push
jge
icebp
lods
push
jo
push
jp
inc
pop
jge
or
scas
push
add
je
or
in
push
push
je
xchg
push
int3
sbb
je
jl
xchg
jge
push
adc
mov
xchg
outsb
and
push
jo
insl
test
mov
push
inc
jbe
enter
sub
inc
inc
insb
jae
xchg
jae
xor
pop
inc
jmp
xor
imul
mov
call
jae
xchg
mov
into
pop
sbb
pop
and
push
or
bound
fwait
sub
aas
push
ja
cs
andl
dec
cmc
fs
adc
testb
xlat
ljmp
push
push
inc
mov
push
in
insl
in
movsb
and
popf
rcrb
mov
insl
push
jl
pusha
push
inc
cli
mov
sub
stos
testl
jp
inc
dec
sub
pop
add
or
add
popa
test
push
and
and
cmp
jnp
mov
mov
test
mov
mov
mov
jne
popf
add
jmp
sub
out
dec
test
andb
mov
repz
inc
dec
pop
pop
pop
in
add
mov
mov
out
jne
clc
mov
pop
insl
inc
push
xor
cmp
mov
lock
add
push
push
xor
sbb
fcomi
mov
adc
push
rcll
sbb
ljmp
je
and
shl
mov
gs
xor
and
mov
xchg
dec
push
cmp
scas
jp
cmc
shr
adc
aaa
jno
mov
cmpsb
aad
push
xchg
fmuls
movsb
bound
or
cmc
jp
loopne
popl
and
imul
aad
push
sbb
lock
push
test
push
jns
push
sbb
adc
enter
mov
orb
and
xor
push
ficomps
pop
arpl
sbb
add
popf
add
adc
push
pop
cmpsl
call
daa
xorl
sbb
fmull
add
cmp
adc
movsb
lahf
pop
jmp
jg
lods
dec
popf
and
push
sarb
adc
sbb
in
dec
xor
aaa
mov
adc
add
or
push
inc
rcll
adc
push
mov
pop
add
jbe
inc
sbb
jb
push
stos
dec
jmp
inc
adc
nop
adcb
sub
pop
xchg
inc
test
repnz
pop
sub
add
dec
enter
lahf
mov
xor
sbb
imul
push
addr16
adcb
jno
aas
addr16
sbb
xchg
test
lock
pop
mov
test
push
adc
jg
push
in
sub
jne
mov
stc
test
and
sub
inc
out
insb
or
or
mov
or
and
adc
lock
aas
adc
inc
cwtl
cmp
pop
or
sbb
ficompl
push
adc
lahf
or
loopne
add
mov
out
xor
iret
mov
cmp
jne
nop
dec
jne
mov
add
es
fadds
mov
inc
mov
xor
pop
add
aaa
imul
inc
add
push
loopne
rcl
xor
cs
sub
add
and
cmp
mov
sahf
add
dec
cmp
xchg
cmp
add
testb
ja
cmp
bound
cmp
sbb
jne
push
and
pop
aad
dec
push
sub
sbb
adc
int
enter
or
pusha
fiadds
jmp
loope
xor
lea
push
adc
xchg
adc
test
push
dec
cld
pusha
fcmovnbe
aad
push
cmp
mov
jg
adc
cmp
aam
xchg
jle
outsl
fcoms
push
add
or
dec
jo
aam
or
stc
nop
dec
fsubl
inc
mov
aam
lahf
test
mov
mov
mov
push
and
or
mov
mov
les
ret
sub
sarb
push
icebp
adc
sub
xor
mov
adc
inc
mov
or
ret
add
add
push
push
out
or
pop
rorb
loop
loop
cltd
xor
cmpb
jb
cmpl
or
add
mov
jmp
push
fidivl
shlb
xor
lods
loopne
push
sbbb
test
pop
inc
js
rcrl
push
push
fdivrl
push
int3
push
push
ret
cmp
je
push
jl
xlat
cmp
mov
rcr
sbb
or
mov
aam
jge
sub
pop
repnz
clc
and
mov
stos
push
or
in
pop
mov
out
cli
jg
adc
iret
insl
pusha
cwtl
sub
push
in
cmp
mov
arpl
jne
cmp
xor
cs
cmc
jmp
adc
mov
sub
add
pop
imul
mov
push
push
adc
dec
mov
shrb
xchg
and
dec
sub
xchg
test
loopne
pop
or
mov
fs
lret
mov
pop
pop
lods
sbb
push
mov
loopne
adc
add
mov
adc
data16
sbb
dec
lea
sub
pop
pop
sbb
add
mov
out
cs
mov
dec
and
fistpll
xchg
mov
outsl
push
pop
jg
jecxz
je
mov
mov
or
adc
mov
mov
add
inc
les
push
sub
xchg
add
movl
aaa
jae
mov
mov
inc
jmp
inc
sahf
jg
lods
inc
sub
dec
pop
push
add
ret
aas
fcoms
sbb
lret
aas
pop
aam
sbb
push
or
push
xor
pop
dec
aas
iret
jne
fnsave
and
cmp
enter
cmp
subl
hlt
pop
adc
cmp
cmp
or
dec
cmp
out
add
dec
jl
sub
pusha
cmp
mov
bound
mov
inc
aaa
jecxz
sub
mov
addr16
repnz
shrb
ss
jl
push
add
add
outsl
sbb
sbb
jl
add
xor
push
push
fcomp
push
dec
adc
mov
cs
push
adc
enter
loop
sbb
dec
sub
sub
test
inc
xchg
dec
rcrb
or
jo
sub
dec
cmp
adc
push
int
std
cmp
jg
mov
xchg
shll
sbb
imul
jbe
orl
jge
sub
or
mov
sbb
sub
lock
test
mov
loopne
adc
fisttpll
push
jmp
push
add
inc
pop
jl
jmp
pushf
or
ficoml
mov
jbe
xor
dec
orl
add
aaa
shl
or
je
mov
pop
pop
mov
push
push
pop
sti
adc
jmp
inc
outsl
aaa
xor
movsl
or
xor
or
push
mov
mov
pop
pop
ja
dec
adc
dec
jge
ret
mov
mov
mov
xlat
cwtl
inc
inc
movsl
inc
jmp
imul
adc
mov
xchg
sbbl
push
sub
push
push
sub
and
faddl
add
mov
add
adc
push
lret
cmpsb
pop
sbb
push
or
rol
mov
push
test
out
adc
out
daa
loopne
pusha
stos
arpl
pop
push
mov
xchg
push
addl
dec
or
xor
cmpsl
dec
cmpsl
movsl
mov
jl
adc
sub
fimuls
add
stc
cmp
cmpb
loopne
popa
jne
mov
shrl
mov
mov
je
mov
lods
imul
or
adc
data16
mov
inc
inc
out
xor
jmp
sub
movsl
mov
lods
xor
xor
outsb
cli
push
out
cmp
adc
nop
sub
sbb
add
inc
andb
push
inc
add
dec
cmc
cmp
sbb
pop
dec
test
push
js
inc
in
cwtl
or
outsb
pop
call
leave
push
out
or
push
fadds
or
push
lahf
lock
je
adc
sub
rcrb
rol
push
stc
xchg
lock
sbb
fstpl
xorl
shll
lret
mov
loopne
jle
in
test
cli
adcb
into
and
push
mov
xchg
cmp
movsl
orb
jne
stc
xchg
out
add
jnp
mov
lcall
loopne
add
ds
inc
inc
dec
pop
hlt
dec
push
and
pop
and
xor
cmp
pop
mov
push
jns
sbb
pushf
popf
movsb
xchg
add
push
add
pushf
aas
ret
cmp
shr
sub
jp
mov
add
sti
test
push
ficoms
cmp
test
adc
lea
lcall
testl
cs
inc
sbb
dec
or
icebp
inc
xchg
sub
jmp
std
lea
and
inc
push
adc
xchg
lcall
inc
adc
and
add
cmp
data16
jge
into
insl
insb
xorb
dec
push
mov
data16
cmp
test
sbb
and
pop
or
dec
xchg
add
push
lock
jl
dec
push
jnp
jp
imul
xchg
pushf
add
orl
pop
addr16
mov
sub
sbb
sbb
pop
pop
fdivs
jg
pop
cmp
adc
aas
dec
lret
mov
mov
mov
shl
data16
repnz
push
push
test
stos
movsb
pop
mov
mov
pop
aas
xor
ret
cmp
sub
lods
or
mov
out
in
adc
sub
into
and
and
adcb
mov
add
jge
sarl
dec
mov
jg
aad
inc
mov
clc
es
add
mov
jne
inc
mov
and
mov
or
movb
dec
jne
mov
lods
jecxz
cmp
sbb
add
mov
jo
shlb
and
push
push
aad
push
sub
inc
xor
inc
mov
fcmovb
cmp
repnz
vxorps
cli
ss
adc
incl
and
test
je
inc
fists
pop
in
mov
or
inc
and
andl
adc
imul
push
jbe
add
jae
inc
add
fimull
clc
fwait
lock
imul
xchg
pop
inc
arpl
sbb
xchg
imul
shl
js
inc
idivb
mov
cmp
jbe
cmc
sub
cmp
jle
ds
push
ss
les
std
rorl
adc
lret
mov
lods
xchg
lock
add
out
jmp
push
mov
or
test
xchg
call
adc
adc
and
add
arpl
ret
push
sbb
pop
adc
test
test
add
lock
dec
push
adc
sub
hlt
loopne
imul
int
ds
ret
lods
push
sbb
jo
or
mov
stos
scas
and
or
dec
adc
lret
xchg
ret
ljmp
or
and
push
add
das
dec
aaa
shl
divl
or
jge
mov
inc
enter
jnp
inc
or
pop
lds
ss
xor
push
push
push
adc
xchg
cmpsl
or
mov
inc
out
jmp
push
xchg
mov
mov
and
dec
add
or
lcall
jbe
dec
jle
jmp
out
mov
dec
insb
es
jmp
xor
js
push
mov
pusha
jl
add
repz
and
aam
push
in
mov
and
add
jo
xor
inc
scas
adc
shrb
in
jl
push
int3
dec
enter
out
inc
add
nop
push
in
call
int3
movsb
subb
pushf
sbb
rcrl
fwait
mov
pop
push
add
pop
das
sub
mov
mov
sbb
and
pusha
es
push
adc
dec
lods
dec
push
rorl
mov
cmc
inc
adc
mov
adc
stos
ljmp
fiaddl
sbb
and
xor
mov
inc
xor
mov
cmp
mov
roll
stos
adc
dec
andl
cmp
sbb
outsl
jl
push
cmp
push
inc
je
mov
push
scas
dec
add
adc
out
testb
push
jo
bound
mov
add
into
push
je
xor
mov
mov
pop
add
jle
fldl
xor
test
in
fwait
mov
adc
fildll
mov
xchg
mov
cwtl
aaa
out
add
pop
adc
clc
pop
pop
or
pushf
adc
rcrl
adc
movsb
adc
adc
adc
inc
and
lcall
clc
push
push
xchg
rcrl
hlt
mov
rcrb
inc
xchg
pop
jp
lret
in
dec
je
loop
add
adc
or
or
push
je
mov
xorb
mov
push
push
call
inc
add
cmp
add
fs
data16
mov
xor
mov
mov
sub
ljmp
push
push
or
lret
pop
dec
popf
lea
sub
push
push
push
cmp
sub
or
jo
pop
fdivr
fwait
cmp
adc
push
pop
adc
push
insb
sub
mov
aas
dec
loop
imul
aas
cmp
jae
xor
push
add
test
mov
nop
lahf
sbb
insb
jmp
das
cmp
jae
mov
cli
jge
aam
lea
push
xor
andl
cltd
add
and
data16
mov
cmp
lods
sbb
insb
push
shl
enter
pop
jl
or
sub
sub
pushf
jl
aam
sub
out
or
mov
add
and
push
mov
cli
orl
jmp
sub
add
and
push
mov
mov
test
cmp
fmuls
cmpb
xchg
cltd
cmp
or
mov
pop
insb
xchg
mov
sbb
jns
ret
mov
jbe
andl
sub
mov
imul
jns
xor
sub
out
daa
mov
adc
sub
test
push
shlb
or
sub
adc
dec
addr16
jmp
jbe
mov
mov
rcll
icebp
pop
add
fcoms
shrb
fwait
pop
andb
cmpl
outsl
std
mov
sbb
or
xlat
ficomps
dec
fildl
pop
adc
add
test
arpl
cwtl
add
or
loopne
je
scas
inc
jns
scas
push
mov
mov
inc
push
and
int
push
jle
pop
dec
test
mov
sub
je
cwtl
call
sub
jno
int3
push
test
in
push
inc
push
mov
test
inc
sub
loop
jne
push
faddl
mov
jge
sbb
sbb
aas
inc
dec
pop
sbb
pop
and
mov
add
pop
dec
je
cmp
cwtl
push
sahf
ret
addr16
cwtl
xchg
or
and
xchg
adc
sbb
adc
mov
mov
xchg
dec
mov
scas
fstpt
pop
or
mov
fidivrl
testb
and
dec
lret
ljmp
push
pusha
mov
and
mov
push
or
push
sbb
add
cltd
mov
mov
pop
xchg
loope
je
xchg
inc
sub
call
sub
ret
pop
add
int3
mov
add
lret
popa
pop
push
sub
adc
cmp
je
sub
xchg
xchg
cmc
add
fldl
ds
pop
xor
pop
lcall
xor
xchg
mov
into
xchg
cmp
cmpb
ljmp
loop
inc
mov
clc
cwtl
jbe
fcmovnu
jne
negl
jae
movsb
ss
aas
xchg
cli
xchg
je
cmp
popa
dec
sub
xchg
and
sbb
push
pusha
cmp
inc
mov
dec
lods
pop
or
mov
xchg
movsl
or
loopne
dec
fs
or
stos
das
cli
jae
xor
sub
cmpsb
push
dec
pop
notb
dec
cmp
addb
sti
sbb
arpl
mov
mov
inc
bnd
fwait
mov
mov
push
mov
push
data16
addl
or
mov
dec
sbb
or
dec
adc
ljmp
fs
inc
sub
xchg
xor
mov
jno
push
loop
jg
mov
xchg
ljmp
cwtl
cli
push
dec
inc
or
jno
adc
jl
psrad
cmp
adc
sub
and
add
adcb
mov
out
adcb
mov
mov
jns
inc
and
mov
cmp
movl
jbe
sbb
sbb
mov
inc
sbb
xchg
int3
in
movsb
ja
push
push
xor
push
push
and
lcall
cmp
loope
cmp
je
scas
and
adc
adc
mov
mov
fucomi
inc
or
rorb
cmpsb
adc
or
lods
aas
xor
or
lods
enter
pop
filds
jbe
sti
push
jne
fs
aam
mov
je
or
xlat
in
jge
lea
xchg
stos
imul
int
movsl
xchg
mov
cmovne
andl
xchg
movsl
rolb
mov
test
jbe
mov
mov
sub
mov
mov
adc
cmp
or
je
aam
pop
inc
clc
cmpb
jne
cwtl
push
pusha
and
je
data16
shrl
xchg
or
fcoms
lcall
popa
fstpt
adc
pop
test
mov
push
cmp
testb
sbb
ss
and
adc
push
lret
rolb
mov
add
out
adc
mov
pop
or
push
loopne
xor
cmp
xor
mov
rolb
pop
jle
pop
icebp
mov
inc
mov
add
add
ss
or
or
movsl
mov
jbe
cmp
je
mov
add
movl
fldt
jle
push
mov
add
sub
scas
inc
sub
jae
div
mov
addr16
je
mov
mov
xor
call
sar
add
sub
jbe
xchg
orl
push
jle
or
push
inc
mov
jae
test
jne
sub
lods
ret
pop
add
sahf
cld
cmp
add
cmp
sub
push
mov
dec
loope
ss
mov
jnp
pop
sbb
mov
orl
shlb
mov
push
xlat
std
cmc
lret
push
cli
cmp
je
cmp
add
ss
or
or
in
dec
or
push
inc
xor
cmp
jnp
shlb
mov
mov
xor
ret
sub
sbb
ljmp
dec
ss
xor
bound
inc
add
xor
adc
add
add
daa
cmp
pusha
addb
lea
lret
mov
cs
andb
mov
ror
outsb
dec
push
loop
rolb
mov
ret
mov
pop
imul
test
pop
shlb
push
xchg
xchg
jle
push
inc
mov
pop
aaa
cmp
add
push
push
dec
out
pusha
cld
inc
outsl
push
enter
call
or
xor
mov
addl
adcb
dec
in
xchg
int3
aaa
data16
add
cld
cs
cmp
adc
test
stos
xchg
push
xchg
rcrb
push
adc
lods
loopne
popl
adc
and
mov
dec
inc
mov
je
jo
popa
int
jecxz
adc
mov
addl
aad
lret
mov
fldl
jb
cs
in
mov
pusha
cwtl
mov
inc
adc
xchg
pop
inc
xor
or
mov
pop
addl
cmpsl
xor
push
rolb
js
inc
adc
cltd
xchg
adcl
dec
setne
add
cmp
sahf
shrb
or
mov
sub
mov
js
jbe
stc
mov
addb
dec
xor
mov
scas
push
mov
in
pop
jp
das
and
fld
mov
and
xor
add
das
test
push
push
xor
loopne
jb
mov
scas
xor
aaa
adc
fadds
add
mov
cmp
mov
cmovp
dec
push
mov
jnp
fadd
outsb
sti
arpl
popa
aad
add
push
push
inc
inc
mov
dec
stc
fadd
add
outsl
shlb
adc
mov
dec
push
rcrb
or
inc
fucom
mov
leave
mov
jne
add
sbb
or
mov
or
in
xchg
jne
push
in
add
movq
mov
or
push
jo
mov
inc
sbb
dec
jno
pop
pusha
xlat
push
pop
aad
jl
cmpsb
sbb
je
inc
das
add
push
rcll
jl
dec
test
jl
dec
jl
ja
dec
mov
xor
sbb
jne
add
ljmp
nop
jp
lret
mov
add
push
or
xor
add
dec
aam
mov
dec
cmp
lahf
jae
mov
and
adc
mov
out
sub
in
add
es
xchg
jnp
out
rcll
imul
incb
cmpb
mul
pop
shr
add
dec
add
lock
mov
movb
cmpsb
adc
test
xor
add
test
xor
ss
aam
or
pop
push
test
push
add
cmp
mov
mov
lahf
add
fs
mov
inc
mov
adc
and
js
xchg
outsb
dec
cmp
xchg
mov
popa
jo
mov
sub
idiv
push
add
in
sarb
std
push
lods
mov
jge
dec
jno
adc
insb
or
sub
js
aad
cmp
dec
sbb
mov
lret
push
movsb
push
sbb
in
notl
mov
arpl
into
inc
lods
std
cmp
sbb
inc
sub
sub
dec
mov
dec
dec
adc
mov
faddl
inc
call
stos
movsl
mov
push
imulb
add
add
mov
inc
add
adc
xor
mov
and
clc
repnz
in
movsb
jbe
mov
xchg
inc
add
fwait
push
clc
dec
dec
jne
push
cmp
cli
add
dec
insl
fwait
sub
cmp
lea
je
push
lods
fcmovb
mov
pop
adc
fdivl
sti
popf
rol
jne
inc
ret
pusha
insb
fsubl
or
pop
leave
and
jo
adc
inc
dec
sahf
mov
add
lea
jge
xorb
add
and
test
shlb
lret
mov
or
mov
mov
je
xor
adc
or
ret
rcll
rcl
movsl
mov
adc
outsb
push
imul
cmc
lea
sbb
add
add
cmp
inc
and
dec
cmp
jne
in
pusha
adc
mov
mov
insb
pop
mov
add
in
sub
sarl
repnz
rcr
aaa
or
ffree
pop
sahf
pop
sub
sti
push
ret
sbb
jne
out
xor
mov
xor
mov
repz
push
sub
shll
lea
inc
mov
or
mov
aad
jmp
out
pop
mov
ror
std
pop
mov
and
dec
cmpsb
xchg
inc
enter
inc
sarb
js
add
scas
inc
pop
testb
lret
arpl
std
xchg
mov
and
xchg
add
es
adc
dec
adc
roll
xchg
add
je
adc
xchg
or
xor
shrl
shlb
aad
mov
xchg
cli
ret
sbb
or
fucomi
cmp
mov
sub
es
ret
imul
andb
or
lret
mov
jo
andl
pop
xor
fiaddl
lds
sub
lea
cs
cmpsl
lds
push
jae
jae
sub
test
or
inc
xor
bound
lret
mov
roll
aaa
add
ljmp
jae
jmp
push
mov
test
mov
dec
inc
dec
push
or
mov
cmc
sub
nop
and
jbe
adc
out
ds
sub
lods
mov
sbb
inc
ja
xchg
sar
loopne
ret
sub
movsl
cld
out
push
lock
mov
fimull
lds
sbb
shr
int
pop
mov
lods
sbb
cmc
push
icebp
inc
mov
add
push
outsl
outsl
and
inc
pop
mov
lcall
gs
mov
dec
pop
fists
jmp
lret
add
ret
leave
jmp
add
loopne
jp
jne
push
jb
insb
mov
das
push
clc
dec
imul
pop
jle,pn
in
lds
add
sub
in
inc
sbb
aas
adc
xor
filds
push
mov
sbb
mov
repnz
mov
addl
addl
mov
jl
iret
jae
xor
add
mov
xchg
pop
loopne
sti
inc
adc
into
roll
fwait
jns
sahf
jnp
mov
mov
add
movsl
into
push
mov
cmp
inc
push
data16
je
or
add
pusha
pop
js
mov
js
inc
push
add
or
push
imul
loopne
into
clc
xchg
ljmp
stc
adc
inc
int
fadds
push
push
je
das
inc
andl
add
push
adc
repnz
rolb
inc
pushf
mov
cmp
jnp
inc
insb
push
dec
add
and
idiv
jle
adc
rolb
and
push
sbb
daa
inc
adc
fsts
faddp
pusha
lcall
or
lahf
mov
adc
push
mov
jbe
mov
xchg
lret
dec
iret
and
mov
stos
adc
jns
adc
sarb
mov
pop
inc
mov
loop
inc
incl
cmpsb
subb
jg
test
adc
or
popf
xchg
leave
test
sub
adc
lock
lcall
or
or
dec
movsl
xor
int3
or
es
fadd
jle
xchg
push
ret
dec
cmp
pop
fwait
call
aam
lcall
nop
stos
sub
pop
test
mov
or
lods
rorl
lods
push
or
and
inc
and
inc
std
or
sahf
andl
dec
adc
push
push
mov
inc
add
bndstx
or
adc
fsubl
xchg
shll
sub
pop
sbb
test
dec
mov
sub
sub
sbb
insl
mov
insl
push
cmp
out
jmp
data16
lods
pop
mov
or
dec
adcl
icebp
pusha
cmc
push
stos
and
xchg
aaa
sub
pop
scas
pop
sbb
adc
or
xchg
push
mov
add
daa
das
adc
fpatan
stos
sahf
nop
push
add
das
les
or
dec
xor
orl
push
jne
je
inc
insb
dec
pop
jge
mov
and
sub
jne
ljmp
add
iret
scas
dec
dec
adc
adc
nop
dec
ficoml
ds
push
sbb
or
pop
js
daa
sub
push
inc
mov
push
and
pop
sub
push
mov
xor
pop
cmp
jne
rorb
push
movl
sar
fistl
sbb
pusha
imul
roll
inc
ret
hlt
lock
xchg
adc
mov
out
add
dec
mov
movsl
or
xchg
ret
outsl
add
xor
push
xor
dec
shl
stc
jo
cltd
mov
ss
lcall
inc
rcll
dec
push
pop
dec
dec
imul
mov
call
int
and
in
push
lds
sbb
in
and
int3
ret
and
pop
mov
out
cld
jo
xor
dec
xor
inc
inc
daa
mov
ret
xor
sub
jb
inc
cmc
mov
pop
mov
mov
mov
or
inc
add
and
mov
pop
pop
push
add
pop
sub
sbb
push
add
add
mov
loope
fdivrl
add
push
sbbl
add
add
pusha
movsb
popf
dec
cmpsb
stos
or
adc
jmp
cmp
add
add
and
pop
cmpsb
dec
dec
pop
test
inc
mov
fs
mov
mov
sbb
and
rol
aas
imul
push
jo
sti
pop
or
lods
push
dec
sbb
jns
mul
out
dec
and
push
imul
movsl
adcb
rcl
sub
dec
fsubr
or
add
cmp
jge
jnp
dec
les
cmp
popl
mov
or
xchg
mov
pop
je
mov
bound
add
or
mov
add
or
add
or
or
jb
and
add
dec
push
cmp
or
push
pop
dec
sti
ss
sbb
mov
push
xor
mov
shlb
add
pop
and
and
cmp
mov
push
std
sub
dec
ds
push
sahf
out
jmp
call
add
or
xor
fnstenv
adc
xchg
pop
add
lcall
sub
dec
lea
jo
sub
sbb
sarl
cmp
cmp
adc
add
adc
xchg
push
rcll
jne
mov
mov
mov
insl
stos
mov
imul
add
mov
xor
cmpsl
cmp
xchg
pop
xchg
sub
movsl
inc
jae
and
clc
adcb
inc
mov
les
inc
sub
aad
fsubrs
sbb
adc
xor
mov
sub
dec
je
in
popf
cmp
adc
das
xchg
dec
jle
ds
push
sub
push
dec
sub
adc
sub
xchg
or
or
lea
int
cmp
add
jb
or
cltd
push
mov
sub
pop
imul
int
adc
or
addr16
fdivrs
add
pop
pop
xchg
adc
cmpsb
adc
sub
shl
addr16
cmpsl
adc
push
pop
pushf
outsl
mov
mov
dec
sbb
sbb
jo
pusha
mov
push
popf
adc
sarl
in
push
jg
roll
lahf
adc
pop
pop
adc
and
adc
dec
adc
clc
lea
adc
lds
test
dec
pusha
pop
add
mov
add
ret
jo
aas
push
mov
mov
in
push
fdivrs
pushf
mov
inc
push
adc
adc
mov
je
imul
cltd
jb
xor
and
sbb
and
lcall
je
sbb
int3
sbb
rclb
scas
add
push
and
adc
adc
in
mov
clc
int3
pop
subb
jmp
jo
ds
sbb
leave
adc
or
pop
and
cltd
mov
push
push
fimull
pop
or
sbb
sbb
add
pop
rorb
or
add
sbb
add
aaa
push
arpl
mov
pop
sbb
cmp
out
sub
or
adcl
push
adc
pop
mov
sbb
ret
pop
dec
sbb
xchg
aaa
incl
or
shl
pop
jecxz
push
and
or
js
push
or
mov
push
push
and
or
mov
pop
setg
lcall
add
inc
pop
sbb
mov
jns
pop
add
sbb
mov
mov
and
push
mov
in
decl
xor
sbbb
sbb
shrd
push
push
push
inc
mov
and
ret
pop
les
loop
mov
xchg
ffreep
inc
mov
or
jno
sub
loop
gs
out
daa
rolb
scas
xor
inc
xorl
sub
mov
adc
jle
sub
movsb
mov
and
jmp
push
nop
mov
push
insl
lods
mov
adc
adc
mov
dec
jne
out
pop
js
xchg
xchg
imul
inc
dec
cmp
fildl
add
sbb
dec
pusha
test
jno
sbb
je
outsb
imul
sti
pop
filds
int
test
dec
inc
xor
sub
mov
test
mov
jl
push
sbb
dec
fsubrs
jb
inc
or
fsubrs
sub
lea
test
dec
or
inc
mov
pop
adc
sub
or
sarl
xchg
cmp
sbb
or
xor
lock
fdivl
popa
pminub
lods
and
in
xchg
mov
push
lea
inc
and
test
pusha
cld
inc
lea
test
dec
xlat
push
sbb
test
add
jne
jmp
jne
mov
ss
push
adc
les
test
xchg
or
inc
adcb
fs
cwtl
and
or
and
cmpsb
andl
call
test
repz
sub
inc
jb
int
xchg
mov
in
lock
adc
push
push
or
cmpsl
pushf
mov
nop
push
mov
jmp
enter
sub
je
xchg
or
xchg
dec
enter
mov
enter
mov
fstpt
sbb
addl
ljmp
inc
les
pusha
mov
push
adc
push
fimull
adc
ds
sub
and
and
test
sbb
cmp
and
pop
inc
pop
adc
inc
jle
decl
add
pop
hlt
incl
cmp
jle
push
mov
mov
sahf
or
mov
add
cmp
push
push
adc
mov
jmp
decl
mov
push
ret
or
and
sti
iret
pop
push
cmp
xor
or
mov
xor
lds
add
in
adc
sar
mov
add
dec
pop
inc
jmp
test
fisttpll
and
inc
sbb
push
sub
insb
ret
sub
mov
orl
dec
daa
push
adc
lahf
iret
and
push
push
aam
xchg
enter
dec
pop
xchg
cmp
dec
adc
and
or
add
adc
daa
push
enter
xor
or
or
or
xor
jl
aas
inc
dec
insl
cltd
fs
or
sbb
ss
dec
mov
cwtl
fsubs
push
daa
push
add
fists
add
xchg
inc
outsb
inc
scas
daa
add
ja
and
imul
loop
bound
test
push
add
adc
dec
xor
add
jae
out
cltd
inc
mov
xor
mov
xchg
sub
mov
sub
sub
xchg
sub
mov
loopne
and
and
sbb
push
daa
and
xchg
pop
sbb
leave
xchg
pop
sbb
enter
xchg
add
xor
fmull
inc
ret
pop
imul
scas
mov
push
and
fbld
jecxz
mov
rorl
push
pop
and
lret
push
test
dec
dec
addb
dec
adc
or
push
rolb
dec
outsb
daa
daa
xchg
adc
pop
adc
rclb
adc
add
dec
lret
adc
leave
leave
leave
leave
push
in
in
add
mov
xchg
fucomi
in
or
cmp
or
dec
jmp
pop
sub
aas
les
jb
shlb
push
mov
jo
jg
pop
imul
jnp
cld
pop
add
popa
pop
sbb
rolb
dec
jmp
in
mov
les
and
push
leave
test
lret
out
mov
add
js
es
xor
mov
lock
sub
xchg
add
sbb
or
add
push
push
je
cmp
cwtl
mov
xchg
cmp
xor
fidivrs
sbbb
and
mov
ret
push
sub
fcomip
xchg
sbb
jne
fimull
adc
adc
lods
je
leave
and
out
pop
and
cmp
add
add
add
dec
add
arpl
cltd
inc
das
push
add
inc
xor
cwtl
subw
xor
adc
je
push
loope
and
xchg
lods
imul
dec
fsubr
movsb
fidivs
sbb
pop
leave
inc
sbb
test
lods
mov
mov
sbb
adc
dec
sbb
aas
js
xchg
push
es
je
or
pop
mov
sti
adcl
ds
inc
mov
paddq
fnstcw
push
or
xchg
and
and
lret
insl
and
cmp
dec
push
push
add
mov
cmp
lcall
pusha
ds
pop
sti
adc
popa
cmp
int
cmp
xchg
je
xor
inc
and
int
inc
push
inc
xor
fs
lock
adc
cli
push
movsb
and
cmp
sub
xchg
iret
daa
sbb
ret
inc
lock
jmp
int
ljmp
inc
fidivrl
xchg
adc
imul
or
int3
cltd
or
cs
shlb
dec
sub
pop
mov
inc
sbb
push
nop
sbb
push
push
cs
loope
flds
jne
sbb
es
sbb
adc
and
and
cmp
insb
mov
mov
arpl
nop
dec
mov
add
push
adc
or
and
pusha
push
push
mov
add
fidivrs
push
test
clc
insl
js
mov
jl
mov
xchg
call
stc
les
jne
loopne
push
push
sbb
sub
cmpsl
icebp
lea
cmp
ror
ret
adc
push
and
adc
out
pushf
imul
cmp
add
inc
cmp
cmp
fisubl
pop
lock
idivb
mov
lds
jo
push
aad
test
mov
div
faddl
or
xor
xor
lsl
inc
inc
mull
xchg
bound
pop
insl
dec
enter
repz
pop
xchg
sub
jo
pop
add
subb
call
xor
aad
mov
cmp
xor
mov
ja
pop
lea
movsb
cmpsl
xor
mov
js
sti
mov
sbb
das
cmp
jl
mov
jmp
pop
and
cmc
mov
imul
sbb
data16
lods
cs
fiadds
cmc
daa
into
jb
jl
push
inc
adc
mov
and
enter
addb
movsb
push
add
lock
jne
push
call
sbb
add
leave
jle
test
scas
or
cli
pop
jmp
ret
ret
dec
call
stos
cmp
lret
pop
bts
push
test
cmp
sub
cli
pop
int3
inc
test
mov
insb
mov
add
adc
or
xchg
fs
inc
divl
lea
aad
rol
fsubrs
or
cmp
inc
shl
jb
add
pop
add
test
lret
lret
or
jno
fcmovbe
push
rolb
push
loope
xchg
rcrb
mov
pop
xchg
mov
push
pop
inc
pop
andb
mov
cmp
jg
pop
pop
jo
add
fcomps
add
mov
jmp
push
inc
das
xor
test
or
xor
orl
loop
push
mov
jns
rorb
xchg
pop
push
ret
lods
dec
inc
loopne
pop
or
rorb
sub
and
fcoml
mov
push
jl
rorb
pop
mov
mov
insb
ret
divb
dec
enter
cmp
add
and
call
push
stos
add
and
test
sti
fimull
cmpb
call
mov
inc
add
jbe
clc
lahf
mov
jg
push
sbb
in
adc
jmp
inc
sbb
sub
xlat
outsl
dec
mov
adc
ja
and
xchg
xor
push
push
loope
jns
xor
inc
lcall
in
push
daa
aam
mov
adc
aas
push
jmp
cwtl
xor
mov
xchg
and
lods
movl
add
aam
arpl
sbb
fs
jge
aam
pop
inc
cmp
pop
jmp
movsb
mov
push
ljmp
lar
cmp
sub
lea
xorl
adc
add
cmpsb
pop
pop
mov
mov
inc
jb
push
jns
fistpl
push
inc
shlb
jl
xor
lods
ret
adc
jmp
pop
and
jo
clc
aaa
mov
daa
test
adc
sbb
push
dec
lds
fisttpl
pusha
cmp
shll
inc
aad
sbb
add
xchg
and
or
lcall
rol
mov
mov
push
movsb
cmp
adc
fidivrl
aam
and
mov
movsb
xor
xor
fcomps
jo
adc
push
add
or
push
mov
fs
xor
nop
pop
pop
clc
jl
cmp
fidivrl
mov
adc
movsl
test
mov
xor
jae
test
ret
jle
sub
jge
flds
test
jg
jo
push
mov
lret
lock
add
or
lods
or
inc
nop
sub
or
push
dec
mov
xor
inc
xchg
and
sbb
cmp
lret
dec
mov
pop
push
xor
push
and
xor
shll
sub
xor
xor
xor
cmp
cmp
inc
rcll
rclb
shll
mov
les
dec
inc
shlw
mov
in
data16
jbe
pushfw
push
fadd
adc
dec
pop
pop
dec
adc
sub
fldenv
and
jl,pt
pop
enter
add
ret
pop
inc
pop
mov
nop
lea
mov
data16
sub
ss
jge
or
xor
cmp
mov
in
pop
add
mov
lods
mov
fiaddl
xor
cmp
push
sbb
jnp
filds
and
je
add
scas
mov
dec
adc
shr
sbb
pop
pop
add
jl
adc
or
pop
cmpsl
inc
xor
fwait
inc
dec
sbbl
pop
movswl
ret
pop
sbb
es
andl
inc
fisttpl
or
dec
ja
cmovno
add
test
push
pop
testl
pusha
xchg
cmp
insb
sub
jmp
or
scas
dec
bound
arpl
or
xor
loope
ficoml
cmp
cmp
jne
xchg
push
add
add
add
jns
jmp
dec
add
add
dec
mov
sub
ret
sbb
test
enter
pop
lret
push
adc
filds
sbb
jno
pusha
aaa
sti
xchg
add
lcall
mov
dec
sbb
ljmp
mov
cltd
lea
add
pop
wbinvd
insl
adc
mov
push
test
mov
arpl
loop
xor
and
mov
add
cmpsb
push
inc
jg
mov
inc
sub
mov
mov
jnp
dec
subb
es
test
add
lea
setbe
xor
adc
jecxz
inc
rorb
ficoml
sbb
ret
xor
push
dec
addr16
stc
pop
cmp
jle
mov
rclb
mov
inc
rcl
xchg
mov
sbb
jl
mov
inc
ljmp
mov
dec
jecxz
cmp
or
lret
or
inc
sub
shl
sub
fists
jo
loope
and
loope
call
les
lret
push
sti
pop
out
mov
std
dec
popa
divb
and
pop
jle
push
push
xor
insb
cmp
ret
inc
inc
add
imul
je
outsl
jno
js
loope
nop
shlb
cmp
cmp
push
popa
mov
pop
arpl
adc
pop
adc
ret
movsb
aas
cwtl
dec
cmpsb
or
ljmp
and
inc
and
rclb
lods
cmp
pushw
aad
insl
adc
js
sub
cmpsb
std
test
or
mov
push
push
lea
pop
or
call
mov
shll
fs
test
jo
or
jg
fdivrs
sub
lret
sub
jl
cmc
push
push
xchg
push
int3
push
jle
in
jne
push
cmp
push
push
jl
lcall
ret
imul
xor
or
fadds
and
jle
lods
push
popa
inc
std
dec
jnp
fcoml
fs
adc
xchg
movb
jbe
push
cmp
scas
sti
cmp
or
das
push
inc
in
cli
test
ret
or
mov
les
pop
cmp
notl
ds
adc
inc
push
push
jl
xorb
sub
inc
loop
inc
push
jl
push
adc
add
inc
aas
mov
cmp
inc
dec
ror
fsts
rol
mov
mov
adc
sbb
lods
and
add
cmpsb
mov
lods
call
mov
jle
cmp
sub
ss
nop
add
repnz
push
and
rcll
and
mov
rclb
xchg
jo
sarb
pop
pusha
or
pop
jl
pop
add
push
pop
stc
mull
mov
add
and
rcrl
push
add
jle
mov
or
fldt
or
add
scas
adc
jo
cmp
sbb
popa
mov
adc
clc
test
xlat
dec
xor
ss
fldcw
pop
mov
je
js
sbb
aas
stos
aas
cmp
mov
mov
cmp
push
mov
inc
pop
ja
in
dec
push
push
add
and
cmp
mov
shlb
and
clc
cwtl
pop
push
mov
nop
pop
xchg
jle
jbe
adc
mov
shll
inc
add
adcb
xorl
adc
push
repnz
jns
pop
add
pop
sbb
mov
push
add
push
mov
mov
cmp
push
dec
imul
inc
dec
jecxz
mov
addr16
sub
rcll
sbb
and
inc
sub
js
mov
and
or
repnz
insl
mov
xchg
pop
repz
sub
push
hlt
xchg
test
imul
dec
imul
pop
cmp
add
sbb
jmp
push
and
and
cmp
or
aas
adc
rorl
inc
or
adc
shll
pop
repnz
and
jl
jl
and
dec
sbb
adc
enter
adc
cmp
cmp
jl
and
add
adc
enter
dec
jge
sarb
mov
sti
xchg
mov
inc
push
andl
fists
popa
cld
sbb
pop
cmp
adcb
add
push
cmpsl
add
push
adc
cmp
lea
cs
test
and
mov
or
mov
stos
subl
arpl
pop
add
imull
add
adc
add
repnz
push
push
loope
loope
add
insb
mov
and
cmp
test
test
and
ja
pop
adc
xor
rclb
das
push
xor
xor
jbe
inc
out
cmp
data16
cmp
add
mov
dec
mov
imul
or
dec
mov
mov
in
mov
ret
jle
jmp
sub
push
repnz
cmp
xchg
xchg
sahf
add
add
xchg
inc
enter
jmp
movsl
ret
pop
test
jmp
cli
or
int3
cmp
add
push
push
sbb
lods
orl
inc
xchg
jg
dec
and
or
out
jmp
dec
push
adc
fcoms
bound
je
gs
mov
push
pop
pop
add
dec
stos
adc
pop
add
mov
or
add
aam
xor
cmpsl
out
jbe
dec
add
data16
mov
push
push
push
sbb
jle
xorl
pop
rcll
mov
nop
ret
dec
jns
sbb
les
pop
cmp
fmul
sbb
roll
fsubrs
ret
jmp
cmp
mov
jl
dec
jge
mov
push
je
gs
pop
std
push
sbb
xchg
dec
or
pop
add
xor
fmull
add
leave
pop
adc
and
lods
and
inc
dec
pusha
mov
mov
scas
aam
sub
and
je
mov
lods
je
mov
push
test
or
clc
sub
imul
adc
jmp
test
scas
das
je
mov
data16
dec
push
test
rclb
sbb
dec
in
adc
pop
pop
xchg
sub
push
push
lods
push
into
clc
dec
leave
cmp
xor
fs
lock
xor
les
cmp
add
rclb
call
outsb
mov
mov
jns
ret
imulb
push
mov
dec
pop
xlat
xlat
xor
and
rclb
fadd
test
mov
and
xchg
mov
dec
mov
xorb
jne
sub
jecxz
iret
and
dec
dec
loopne
cmpb
js
pop
xor
mov
inc
pop
push
cltd
sbb
jne
sbbl
in
cltd
xchg
jo
cmpl
subb
cs
js
dec
mov
and
adc
add
imull
dec
ja
mov
or
xchg
je
mov
sbb
and
cmpsb
or
inc
xor
push
push
in
pop
adc
mov
sbb
or
push
in
js
mov
add
push
imul
cmp
repz
jnp
bound
mov
xchg
sbb
inc
cmp
pop
or
cltd
sbb
aas
pusha
mov
jge
pop
out
jge
push
xor
pusha
fsubrs
cmp
dec
lea
jle
ret
or
cmpsl
pusha
fidivs
push
sbb
add
test
mov
addr16
out
pushf
xor
shlb
sub
je
push
mov
sub
dec
cmp
hlt
mov
jo
fcomps
loopne
push
nop
subb
inc
rclb
sbb
pusha
and
sub
test
sub
js
into
ror
mov
jo
xchg
das
inc
pop
mov
mov
adc
or
inc
cmp
sub
and
mov
cltd
fucom
or
mov
addb
sbb
and
or
rorb
lea
mov
or
push
mov
sbb
or
orl
push
xor
test
js
ret
push
out
or
mov
sub
hlt
cmp
sbb
mov
sub
sbb
ret
sbb
jno
or
fdivl
jmp
adc
scas
inc
aas
push
fiadds
cmpl
rolb
rcrb
mov
lock
sahf
pop
xor
pop
les
jo
outsb
lds
fwait
iret
in
push
ret
cmp
rorl
insl
sbb
mov
push
jge
inc
loop
fists
rolb
cli
mov
mov
test
dec
add
xchg
or
sub
mov
pop
dec
mov
dec
dec
insb
pushf
movsb
add
push
cmp
dec
dec
test
je
addr16
cmp
daa
adc
aam
push
jmp
iret
pushf
sub
push
jns
jl
mov
fwait
and
jecxz
push
imul
pop
cmp
rolb
dec
mov
stc
out
add
and
lea
jne
mov
jl
inc
push
sub
rorl
push
push
fistps
lahf
lcall
add
mov
int3
lock
push
push
fnsave
cmp
mov
inc
pop
xor
or
int3
lahf
aam
loopne
push
aaa
fmul
xchg
sbb
xchg
mov
test
fs
xor
call
adc
mov
test
mov
push
outsb
and
push
jl
jo
pushl
call
or
and
lods
inc
push
add
ret
adc
mov
js
inc
lcall
mov
push
jmp
dec
andl
add
daa
repz
xorl
push
in
dec
fsubr
push
data16
repnz
or
cmp
push
sub
sbb
movsb
jo
sarl
jmp
arpl
in
dec
fwait
inc
mov
loop
push
xchg
dec
in
push
arpl
inc
inc
pop
mov
jge
xorl
cmp
push
je
vmovsldup
cmpsb
add
and
inc
fmuls
cmp
imul
jecxz
test
xor
inc
fpatan
inc
add
push
gs
and
fnstenv
sbb
push
and
push
push
inc
filds
outsb
pop
lcall
dec
cmp
and
aam
or
rclb
test
pop
xor
mov
mov
add
pop
and
cs
inc
lea
loopne
icebp
pusha
dec
lcall
daa
pop
mov
or
loop
pop
cmp
pop
lret
and
inc
dec
adc
mov
lods
add
aad
and
or
sub
push
cmp
ja
scas
add
add
dec
sti
mov
push
shl
outsl
mov
jo
pop
aam
pop
lahf
jbe
push
mov
mov
add
jns
pop
dec
sarl
loopne
testb
push
xor
add
js
pop
sbb
push
inc
push
dec
push
int
sub
shll
cwtl
jo
notl
outsb
adc
mov
xchg
xchg
outsb
pop
add
ss
mov
or
pop
mov
adcb
ja
inc
cmp
bound
mov
andl
mov
std
xlat
or
js
push
push
call
mov
movsb
movsl
js
jb
and
pop
sub
push
sub
sbb
lods
xor
jge
dec
sti
aam
loop
sub
jns
sub
pop
and
sub
inc
dec
fmull
and
add
cmpsb
hlt
jle
xchg
test
lcall
std
sub
cmp
int3
test
sub
push
push
xor
adc
or
add
adcb
ss
pop
int3
js
sub
mov
pop
es
xor
rcll
test
push
imul
aad
les
int3
cmpsb
add
cld
jne
in
fdivrl
mov
sub
mov
das
rclb
cmp
scas
xor
and
inc
fsubr
call
mov
xchg
pop
push
enter
jbe
or
mov
cmp
or
pusha
inc
pop
fildll
loop
lods
mov
jl
jmp
dec
sub
fcmovnbe
or
lahf
daa
or
mov
fwait
aam
out
ljmp
aam
nop
pusha
jmp
adc
rolb
lea
loope
loopne
test
lcall
ret
movsl
sbb
adc
or
gs
cmc
pusha
cmp
int3
fsubs
nop
js
mov
cmp
movsb
lds
mov
pop
ficoms
adc
dec
push
test
sarl
repnz
push
xchg
pop
mov
loopne
fwait
jne
test
int
rorl
mov
clc
es
mov
sub
ja
fdivrs
jb
xchg
mov
add
mov
jl
and
sbb
ljmp
add
inc
jo
or
ds
lret
pushf
mov
jl
arpl
mov
jae
nop
cmpsl
rclb
test
inc
ja
sub
push
jae
inc
push
or
flds
xchg
std
dec
adc
sbb
notb
push
inc
rol
bound
aas
xor
and
dec
or
lahf
add
shr
leave
inc
not
int
push
ret
js
call
cmp
outsb
mov
loope
pushf
movsl
push
jp
mov
test
daa
adc
jl
jbe
or
add
mov
outsb
mov
add
nop
add
lds
aaa
or
dec
or
push
inc
xchg
push
and
add
xlat
mov
ret
pop
xchg
cltd
jne
fdiv
mov
arpl
add
push
lret
addl
xchg
je
fsubl
cltd
clc
cltd
mov
and
mov
jns
aaa
inc
je
jne
dec
shrl
mov
jnp
pop
scas
and
add
les
adc
jl
mov
push
inc
sbb
sbb
cmp
inc
and
cld
push
jle
xchg
push
popa
mov
mov
mov
stos
daa
or
push
setl
shlb
xchg
js
mov
push
js
shrl
movsl
mov
cmpb
push
adc
and
sub
mov
es
testl
or
adc
xor
and
xor
jo
cwtl
dec
xor
adc
sbb
je
and
es
sub
fs
mov
enter
sbb
and
mov
lret
sbb
movsb
cld
mov
inc
je
add
scas
faddl
xchg
dec
insb
add
push
cltd
jae
add
es
sbb
pop
rclb
mov
xor
inc
scas
test
mov
loopne
mov
push
push
jge
or
sti
je
mov
pop
inc
push
sub
imul
mov
or
std
inc
mov
cld
mov
popf
pop
fcompl
push
std
push
jae
imul
mov
xor
dec
jns
es
pop
lahf
call
and
lock
std
adc
les
sub
aaa
sub
sub
lret
push
sub
and
sub
movsb
or
cmc
outsb
jg
xlat
mov
dec
push
cmp
push
fldl
into
push
push
sbb
lret
sarl
or
and
xchg
scas
pusha
pop
stos
xor
cld
inc
pop
mov
pop
inc
popa
sub
mov
xlat
ljmp
cmp
xchg
cmp
mov
inc
pop
push
aad
xor
push
mov
js
popa
mov
add
into
cmpb
out
pop
dec
call
inc
adcb
inc
or
fwait
lcall
sub
or
xchg
or
push
mov
jne
adc
ret
add
cwtl
sbb
jb
leave
dec
push
jno
inc
ja
mov
lods
push
ljmp
add
dec
xchg
jo
push
aas
cmp
hlt
xor
jo
add
mov
inc
sbb
mov
push
xchg
push
adc
jmp
cmp
jne
pop
lods
inc
adc
jno
xchg
clc
adc
adc
push
push
mov
mov
push
gs
push
jp
addl
fwait
in
push
pop
sub
inc
clc
jl
cmp
dec
xor
repnz
movsl
sub
or
scas
or
jns
xor
or
ljmp
je
sub
nop
jl
xchg
call
adc
mov
and
lods
adc
in
xchg
and
loop
or
jb
and
insb
push
or
mov
divb
push
push
pop
cmpsb
jnp
sub
les
ret
or
int
xchg
mov
push
jmp
and
dec
inc
cmpsl
movsl
xor
call
mov
nop
pushf
add
dec
sbb
mov
push
mov
pop
imul
sub
xor
dec
mov
push
push
xchg
fcompl
jg
or
pop
pop
push
ret
rolb
aam
cmp
imul
dec
mov
add
call
xchg
lret
push
or
push
dec
jmp
inc
pop
or
adc
jbe
fadd
push
das
pushf
gs
out
dec
or
jg
cmp
inc
popa
dec
mov
fs
testl
pop
adc
shlb
xchg
dec
dec
dec
scas
sub
cmpsb
cmp
repz
and
mov
lods
sub
xor
pop
pop
loop
jecxz
lcall
sub
ret
add
mov
mov
dec
inc
mov
mov
and
add
lock
add
pop
jle
fsubl
and
or
ss
orb
push
dec
adc
add
rorl
dec
pop
xchg
cmpsl
popf
pop
sbb
and
jne
mov
rcll
push
outsb
push
or
sub
arpl
adc
stos
scas
add
jp
sbb
jecxz
sbb
mov
lea
loop
shll
rol
call
lods
adc
sbb
adc
pop
xor
mov
fimull
mov
je
mov
fistpl
stos
es
popa
and
mov
pop
dec
cwtl
mov
mov
cmpl
mov
xor
add
pop
inc
cld
mov
je
push
jp
bound
inc
push
push
mov
lahf
adc
push
or
mov
fisubrl
mov
rcrl
insb
mov
push
call
push
shll
mov
add
shlb
mov
cltd
into
add
adc
push
add
or
in
cmp
dec
push
mov
pop
and
popf
ret
je
dec
inc
adc
bound
pop
notb
loopne
inc
mov
or
xor
xor
loop
mov
lret
mov
ret
add
cmp
push
sub
jne
adc
adc
push
movl
or
adcl
push
sbb
call
dec
dec
pop
sub
lret
xlat
ds
xor
add
sbb
or
add
into
js
or
imul
mov
pop
nop
push
jmp
add
jo
subb
clc
jl
sub
adc
adc
imul
dec
cwtl
sub
jge
adc
dec
fwait
mov
jg
fdiv
mov
jmp
push
add
pop
sbb
cmp
mov
or
call
xor
sti
xchg
adc
dec
movsb
xor
push
or
push
push
call
cs
lea
ffree
inc
jg
fcomps
std
test
mov
bswap
dec
int3
out
enter
enter
inc
std
or
rclb
ret
xor
aas
add
push
in
cmp
pop
push
mov
mov
jne
mov
loopne
sub
dec
pop
mov
je
cmp
inc
or
enter
fwait
or
or
nop
lahf
mov
and
push
shlb
clc
movsl
stos
hlt
je
mov
or
int
ljmp
pusha
or
inc
push
jbe
xchg
mov
ljmp
jno
xchg
mov
push
dec
sti
mov
dec
lods
out
xchg
jns
call
adc
popa
cltd
add
sarl
ret
clc
jl
cmp
xor
jo
inc
mov
xlat
add
lcall
aaa
sbb
pop
enter
push
xchg
pop
mov
das
jbe
xchg
mov
xchg
mov
add
push
mov
fdivrs
scas
cmpsl
fiadds
push
push
ret
fists
sub
sub
sub
jp
dec
cld
fdivp
sub
mov
jmp
inc
dec
mov
lret
aaa
sub
jmp
jmp
or
int
cmp
push
bndstx
rol
cmp
mov
add
adc
into
mov
push
cli
arpl
add
sbb
push
push
sbb
and
lret
inc
aas
jl
je
pop
sub
sub
movsb
fisttpll
in
out
repnz
cmp
inc
fs
fsubrl
jmp
mov
movsb
shl
sub
jmp
and
push
push
push
mov
sub
or
shll
push
in
je
mov
jmp
dec
sbb
lret
lret
xor
mov
sbb
mov
mov
pusha
sub
outsb
fldenv
lcall
test
leave
jge
mov
outsb
adcl
aad
add
xor
ss
jge
les
add
lods
push
jnp
ja
flds
and
mov
and
dec
xor
nop
mov
mov
pop
ja
aad
es
test
adc
subb
and
fwait
test
mov
mov
sarb
enter
inc
xor
push
or
jnp
call
and
in
dec
add
data16
jle
and
movsb
sbb
push
js
xchg
jg
xchg
sub
mov
pop
mov
jge
adcb
inc
loope
mov
sbb
aad
or
stos
lcall
sbb
add
sbb
les
and
js
pusha
jl
aam
test
adc
inc
or
dec
mov
dec
pop
pop
pusha
or
inc
lcall
and
jbe
cmpsl
inc
mov
add
sbb
and
inc
add
cmp
or
scas
cmp
mov
dec
push
push
jne
mov
test
add
adc
arpl
mov
sbb
and
lock
pop
das
js
adc
sti
push
mov
pop
rclb
or
xchg
sub
cmc
aad
inc
sbb
jl
lea
xor
mov
inc
or
mov
rclb
enter
loope
andb
cld
push
enter
add
add
cmpsl
sub
clc
subb
clc
add
lods
sbbb
lods
scas
mov
ret
aaa
out
pmovmskb
add
sbb
jo
pushf
ja
jmp
mov
push
in
push
mov
mov
cmp
push
and
int
clc
sbb
out
sub
xor
sbb
mov
call
test
repz
loop
add
mov
sub
dec
loope
ret
mov
aaa
arpl
fcom
ficoml
add
cld
push
dec
fisubrs
adc
cmpsb
test
fs
cmp
mov
and
fdivl
lods
and
pusha
movsl
jmp
mov
test
and
mov
pusha
cmc
sub
sbb
and
push
jns
sbb
mov
pushf
or
imul
lea
pop
mov
or
repz
mov
mov
sahf
mov
outsb
push
dec
scas
lea
jno
add
push
dec
adc
in
mov
xchg
leave
and
xchg
dec
dec
mov
dec
andb
push
imull
movsb
xor
roll
add
and
rcll
je
out
xor
je
sub
lret
add
daa
clc
push
js
or
push
inc
xchg
loop
ja
dec
jl
push
jmp
pop
mov
imul
out
ret
push
sbb
sti
arpl
shr
insl
loope
dec
mov
add
add
imul
adc
loop
lods
test
add
test
adc
adc
popa
and
sbb
ret
getsec
int
je
test
aam
sbb
fldl
sbb
sbb
cmp
adc
pmaxub
imul
rorb
push
or
mov
lods
sti
int
push
decl
jne
mov
mov
mov
push
sbb
adc
mov
or
or
jmp
or
or
ret
fcomps
add
addr16
sub
jb
nop
xlat
add
add
and
fnstsw
testb
or
sbb
mov
test
mov
test
jp
mov
imul
cs
in
xchg
mov
mov
cmp
push
or
add
and
roll
insl
xor
mov
ds
sbb
and
lods
pop
js
jb
jae
fwait
push
push
dec
or
sub
push
and
and
adc
xchg
push
cmp
mov
add
insb
xor
mov
mov
xchg
lock
cmp
pop
pop
testb
lock
jmp
mov
movsl
and
mov
add
and
js
mov
iret
repz
fs
insb
jno
jmp
sbb
andb
cmp
inc
push
adc
pusha
jl
fstl
sub
xchg
dec
enter
inc
mov
in
test
push
push
fiaddl
xchg
mov
aam
or
lcall
or
add
and
xor
sub
add
hlt
dec
popf
or
jmp
dec
ret
cld
test
decb
sub
cmp
adc
sub
jo
xor
popa
roll
sub
and
lods
dec
or
mov
pop
pop
jp
test
mov
lock
inc
je
ss
popf
daa
and
push
jo
sub
test
jl
mov
movsl
jne
fnsave
fcomp
xor
ret
je
and
pop
xor
insb
jne
add
leave
jecxz
pop
je
jl
push
pop
cltd
inc
mov
add
orb
in
push
xchg
push
pusha
and
add
add
movsb
or
mov
jb
dec
cli
push
pop
sbb
aaa
xchg
xlat
mov
jno
sub
ret
push
push
push
test
out
add
mov
test
push
fs
xor
test
or
lret
into
push
and
push
cmpsb
push
je
aas
and
test
or
inc
cmp
popl
xchg
adc
and
enter
lock
pop
adc
nop
test
xchg
pop
mov
push
repnz
push
jo
and
xchg
jg
mov
add
add
test
stc
mov
or
or
mov
fs
mov
push
mov
loopne
ffree
pop
jne
insb
into
or
push
inc
clc
pop
testl
sub
mov
shlb
pop
pop
sbb
add
cmp
pop
lahf
xor
cmpl
inc
xchg
pop
jl
push
push
pop
sbb
rolb
addr16
xchg
outsl
loopne
pop
xor
das
and
dec
xchg
sub
cmp
sbbb
scas
icebp
and
inc
dec
mov
add
push
mov
out
adc
das
push
or
sbb
rorl
add
inc
or
cmp
xchg
mov
mulb
aad
clc
sbb
test
or
and
and
sbb
adc
sti
insb
or
loopne
pop
mov
or
sub
arpl
cs
movsb
adc
sbb
negl
push
mov
adc
pop
cld
push
cmc
and
cltd
inc
push
inc
inc
pop
push
sbb
in
loope
xor
add
push
ret
adc
push
mov
xchg
scas
jbe
push
push
mov
cmpb
mov
faddl
pop
mov
inc
sbb
or
mov
adc
xor
sbb
jbe
xor
shll
cmp
or
mov
in
push
push
and
mov
mov
pop
lods
fbld
je
adc
jg
add
sbb
mov
lock
dec
and
push
movsb
ret
sbb
push
push
cmpsl
mov
xor
adc
lcall
addl
pop
xchg
rclb
push
lret
adc
sbb
add
sub
bound
test
push
aam
add
pop
dec
out
lret
sbb
jne
ja
jge
push
mov
sbb
and
out
addb
xchg
push
testb
orb
loope
cmp
sub
and
dec
push
sarl
jbe
inc
jne
popa
or
pop
leave
push
push
push
or
rcl
cld
fsubr
imull
cmp
js
mov
outsl
and
fidivs
pusha
inc
dec
pop
cmp
push
and
shll
add
xchg
xchg
mov
mov
jb
cmp
sbb
pextrw
stos
and
or
enter
pop
pushf
shlb
xchg
add
sub
pop
jmp
xor
inc
add
adc
pop
inc
adc
out
add
or
mov
mov
xchg
jo
pop
nop
test
cmp
call
mov
xor
pop
lods
or
mov
aam
push
rcr
fstl
add
rolb
or
incb
cmp
mov
jo
jae
ret
sub
loopne
push
test
mov
mov
pusha
xor
or
or
fnstsw
repnz
sbb
mov
jmp
add
mov
cmp
push
add
mov
es
cmp
aad
push
inc
pusha
sub
or
mov
xchg
les
jo
roll
dec
mov
test
or
clc
xchg
dec
and
sub
addb
xor
sbb
xor
ret
jl
cmp
push
dec
mov
dec
shr
lods
cmp
adc
rolb
iret
aam
xchg
jb
add
inc
cmpb
and
push
xchg
mov
out
call
jge
xlat
xlat
les
or
shrl
aam
lea
add
roll
jle
cmp
sbb
sbb
shlb
add
jb
fwait
lock
adc
shlb
ret
and
push
je
adc
je
or
je
sub
int
int
dec
and
inc
and
je
and
pop
int
aaa
inc
jne
in
mov
and
sbb
mov
inc
push
cmp
and
scas
dec
jmp
inc
jnp
dec
sub
sahf
test
pusha
lret
xor
push
adc
adc
xor
inc
notl
cmp
inc
les
dec
loope
add
dec
dec
xor
enter
lea
sbb
mov
adc
in
daa
inc
cmp
adcl
mov
in
xor
and
or
and
out
fdivl
push
lret
sub
popf
ss
aaa
loop
sub
cmp
jae
inc
push
add
fcmovnb
outsl
cltd
mov
mov
adc
dec
inc
in
push
xor
arpl
and
fisttpl
inc
adc
out
pop
xlat
push
dec
xor
bound
inc
rolb
cmp
gs
imul
lret
push
sbb
push
jmp
inc
pushf
std
inc
pop
cmp
jmp
das
je
test
test
scas
lret
les
push
shl
xchg
and
or
add
decb
int3
mov
cwtl
push
xchg
and
add
or
scas
jne
xchg
into
sub
cmp
dec
push
push
cmp
xchg
mov
add
adc
jb
inc
xchg
mov
aaa
cmc
push
xlat
jno
mov
es
push
dec
sub
sarl
xchg
stc
push
or
sub
add
in
or
daa
cwtl
push
pop
or
or
or
es
dec
or
addb
xchg
movsb
pop
int3
addb
sbb
xor
and
insb
and
lret
jne
jns
pop
adc
inc
mov
add
inc
pop
pop
inc
test
adc
fcmovnb
fwait
sbb
dec
callw
iret
mov
cltd
xchg
and
loope,pt
mov
adc
clc
dec
mov
mov
stos
dec
cmpsl
adc
daa
jmp
dec
ret
xor
mov
or
arpl
aam
mov
rcl
mov
xchg
lea
rorb
int
repnz
xchg
mov
jge
cmp
mov
jge
cltd
dec
loop
out
sub
add
pop
cmp
in
add
xorl
dec
xchg
jo
les
adc
test
mov
je
xchg
sbbl
testl
or
adc
mov
rcr
xor
mov
push
pusha
xchg
pusha
pop
scas
popa
pop
mov
mov
cmp
dec
push
xor
stos
push
sub
push
pop
and
rorb
jmp
out
adc
fprem
inc
aaa
mov
jecxz
sub
sub
or
jge
idivl
mov
rcrb
jmp
and
in
insb
pop
jmp
jp
ret
dec
pusha
pop
push
dec
ljmp
dec
and
or
xchg
or
out
xor
sbb
adc
adc
mov
frstor
out
pop
ret
std
xor
mov
xor
nop
ret
rcl
or
push
sub
inc
or
jae
add
sub
in
test
xchg
int
imul
dec
roll
rcrb
cs
dec
xchg
dec
shrl
rolb
sub
or
imul
roll
mov
adc
sbb
dec
bound
push
or
and
orl
imul
mov
push
je
mov
js
pop
push
and
adc
xorb
imul
xor
int
or
mov
out
fimull
mov
cmc
and
outsb
ret
dec
inc
das
rorl
push
pop
roll
jge
cmp
xor
mov
int
lea
jnp
sub
push
es
jbe
push
or
ret
aaa
aas
loop
ds
aaa
push
jl
pop
or
jnp
jmp
pop
testb
cmpl
or
sub
or
or
lods
jmp
and
jae
int3
xor
inc
enter
js
mov
cmp
scas
sbb
mov
xor
pop
inc
sbb
jp
in
sub
jo
push
and
push
dec
add
bswap
test
andb
xchg
sub
pop
pop
dec
cmp
xor
cmp
xor
or
inc
cmpsl
push
sbb
pusha
pop
cmpsb
jecxz
add
sahf
stos
push
inc
mov
xor
pop
pusha
push
sarb
mov
fcomp
mov
push
jl
sbb
jge
mov
inc
mov
jge
xor
pop
or
movsb
sub
pusha
pop
sbb
and
adc
jo
ss
sub
daa
mov
cmp
outsl
lahf
adc
dec
cmp
fiaddl
push
or
outsb
sbb
scas
mov
inc
mov
push
adc
push
sbb
jb
test
aad
and
cltd
cmp
test
ffreep
add
mov
xchg
dec
pusha
push
movl
pop
push
or
mov
mov
dec
pop
cs
jne
int3
roll
test
xchg
lret
and
fnsave
addr16
xchg
push
cmpsl
inc
mov
and
adc
pop
loop
push
ret
lret
test
fnstsw
fsubs
shlb
outsl
ret
test
cs
lret
mov
xchg
xchg
hlt
es
jle
xchg
and
xor
lcall
aad
sub
ret
add
and
rcl
and
pop
pop
jge
add
notb
or
repnz
jg
xchg
je
cmp
jbe
sbbl
pushf
jb
inc
jne
cmp
fs
cmpsb
sub
dec
scas
nop
enter
and
sbb
movswl
cmpsl
xchg
pop
sti
mov
mov
cmp
sbb
in
push
fsubs
inc
or
clc
shlb
sbb
mov
xchg
pop
xchg
movsl
xchg
push
dec
push
enter
inc
xor
xchg
pop
sbb
adc
add
cld
cs
mov
imul
xchg
sub
cmp
mov
jnp
adc
or
push
and
or
add
push
xlat
xor
adcb
jo
or
and
in
or
mov
push
sbb
push
sbb
insb
dec
sbb
push
jle
jmp
cmp
add
add
adc
mov
lcall
sbb
xchg
dec
dec
sarb
jmp
aaa
das
sbb
imul
add
pop
cwtl
sbb
adc
jo
inc
inc
push
mov
clc
add
add
jecxz
add
or
push
mov
mov
pushf
test
ret
call
cmp
test
outsb
ss
mov
sub
jecxz
xchg
adc
lahf
sub
nop
mov
dec
xchg
mov
imul
cmp
repnz
sub
cs
test
pop
xchg
add
addr16
nop
test
adc
mov
lods
cli
push
inc
dec
mov
neg
push
push
cltd
popl
xchg
js
sub
js
jmp
jp
jmp
mov
jbe
arpl
or
loop
test
test
sub
or
or
loopne
mov
in
xchg
addb
pop
dec
xor
cmp
push
rorl
adcb
fistl
and
or
pop
mov
cwtl
inc
popa
and
push
dec
xchg
and
sub
add
dec
xor
mov
xchg
inc
loopne
rcrl
push
cmp
push
je
pop
and
sahf
mov
inc
inc
cmp
xchg
outsb
push
imul
or
lods
popf
inc
js
pop
mov
shrb
jae
mov
rep
inc
sbb
add
lods
xchg
mov
jno
dec
imul
sub
gs
das
xorl
lock
fxch
cmp
lock
test
ret
inc
push
lcall
dec
pop
cmp
jbe
add
nop
imul
pop
push
lahf
sbb
pushf
mov
adc
sbb
dec
sbb
scas
movsl
dec
pop
push
add
xor
adc
pusha
push
push
and
and
pop
xchg
inc
data16
mov
jbe
fistpll
int
mov
je
cmp
fucomip
aaa
icebp
cmp
cmp
fwait
sbb
or
subl
push
push
fs
pop
push
test
dec
jne
cltd
add
cmp
rolb
movsb
or
out
add
ds
movsb
cmpsl
shlb
or
xor
mov
push
adc
ret
int
ja
add
push
or
pop
inc
push
cld
pop
adc
and
cmp
notb
push
stos
in
scas
or
repnz
mov
or
testb
mov
sub
sbb
lds
push
and
inc
pop
pop
mov
mov
xlat
jg
js
push
mov
jb
ljmp
mov
sbb
inc
cwtl
cmp
outsb
outsb
jg
or
jecxz
or
movl
bound
enter
xor
mov
jnp
repz
pop
insb
sti
test
pop
and
es
sti
mov
push
imul
xchg
add
dec
sub
sbb
sub
je
push
adc
and
add
lea
pop
ret
insb
call
sbb
lds
in
sbb
add
ds
pop
jne
mov
add
push
je
in
es
xor
cltd
push
out
push
xor
sbb
and
cltd
mov
push
jnp
hlt
sbb
dec
inc
push
pop
dec
dec
xchg
sbbl
outsb
jl
xchg
inc
inc
push
je
adc
sub
cmp
cmp
push
fisubl
or
lods
cmp
or
xchg
lahf
xchg
push
ret
cmpsb
mov
inc
test
mov
cmp
je
or
xor
cwtl
xchg
push
repnz
daa
sub
xchg
mov
add
mov
pop
jne
es
push
test
pop
or
adc
xchg
or
in
jl
lods
or
dec
test
and
je
mov
mov
je
push
sbb
lcall
and
adc
lods
daa
fcmove
outsl
cmp
fldcw
cmp
addr16
xchg
jg
addb
lea
adc
pop
push
fdivrl
xchg
cmc
loope
rorb
gs
dec
xor
add
add
and
xor
push
sub
add
movsl
imul
or
add
fadds
mov
sub
loopne
rorb
lret
repnz
insb
sub
nop
int3
jne
pop
shl
mov
push
mov
sub
pusha
mov
scas
inc
test
daa
aaa
sub
dec
les
fdivr
jge
pop
popl
lock
push
jecxz
mov
rcr
testb
pop
adc
dec
iret
ljmp
add
xor
inc
add
inc
jp
or
outsb
xorb
outsb
imul
lea
push
cmp
test
lock
push
or
dec
add
aad
nop
dec
pop
adc
mov
xchg
lret
sbb
push
adc
xor
mov
ljmp
mov
popa
dec
lcall
dec
mov
add
mov
aad
lcall
inc
dec
loop
leave
jno
inc
and
add
jge
mov
int
je
push
mov
dec
icebp
sbb
sbb
stos
arpl
ljmp
jp
shl
hlt
subb
mov
push
andl
push
jno
and
or
test
push
popa
fucomi
xorb
mov
jns
sbb
xor
sbb
xchg
inc
imul
sahf
jecxz
je
adc
jae
adc
mov
pop
nop
sbb
mov
dec
je
daa
jmp
mov
xchg
rolb
inc
mov
scas
or
xorb
mov
add
add
mov
jge
add
xchg
jnp
add
dec
sub
test
mov
andb
movsb
fadd
cmp
pushf
mov
dec
or
insl
mov
add
std
mov
sub
mov
sbb
or
dec
push
push
imul
adc
je
or
cmp
je
add
test
call
and
and
outsl
add
jmp
cmp
sbb
or
imul
add
lcall
aad
xor
nop
adc
rclb
sub
loopne
pop
loope
and
mov
push
gs
sub
rorl
je
sbb
xor
ds
and
cmp
dec
jb
les
ds
cmpsl
push
enter
sahf
xchg
lret
push
or
inc
dec
bound
into
sub
imull
mov
dec
or
mov
mov
and
mov
push
lods
add
mov
lock
mov
jbe
ds
pop
sub
dec
repnz
lret
sub
mov
push
data16
dec
ret
inc
rclb
sbb
or
adc
neg
push
add
fcmovnb
lea
or
call
mov
arpl
cltd
jp
add
imul
aas
dec
ljmp
bnd
cmc
aam
push
add
mov
cmp
pop
lea
mov
cmc
aas
xor
into
idivb
and
mov
or
and
loopne
sbb
jo
xchg
add
cmp
data16
jp
lds
repnz
loope
jbe
jge
dec
or
cmpsl
add
adc
fstps
or
shl
sti
aas
push
xchg
sub
dec
add
cmc
sub
and
push
rcrb
clc
outsl
adc
inc
inc
shrl
push
xchg
dec
insl
xchg
sbb
mov
sbb
sbb
int
or
pop
aad
pop
pop
out
stc
int
inc
add
or
xor
jl
cmp
cmp
sub
das
push
push
and
mov
xchg
cmpsb
pop
sbb
cli
inc
ljmp
cmp
mov
std
or
add
xorl
or
cmp
sub
dec
jne
iret
xchg
jl
pop
dec
pop
pop
inc
push
ds
push
das
sbb
sbb
repnz
es
rcrb
mov
data16
jo
add
in
and
rol
fnstcw
push
fcoms
dec
sbb
fidivrl
and
adcl
sub
test
pop
add
sahf
inc
inc
inc
js
inc
sub
adc
or
and
paddusw
xor
pop
dec
inc
add
adc
jnp
ret
inc
adc
inc
dec
loopne
inc
sub
stos
outsb
mov
je
fistpll
add
jl
mov
mov
ja
popa
cmp
jns
pop
sbb
cwtl
cmp
cmp
rol
adc
enter
add
mov
pop
clc
or
and
enter
or
or
repnz
or
or
bnd
lcall
mov
fwait
loope
loope
sbb
sbb
sbb
push
sub
mov
sbb
sub
inc
incl
imul
and
call
or
cmpl
pop
sbb
inc
and
push
les
cmc
and
addr16
dec
cmp
cmpsb
repz
lea
inc
adc
ret
mov
ret
cmp
adc
mov
push
jbe
jmp
loopne
aas
or
mov
cs
daa
dec
cmp
jg
adc
sub
or
or
inc
sub
cltd
and
pop
idivb
xlat
xchg
jge
mov
dec
jg
in
or
imul
jecxz
add
xor
or
lods
jae
fistps
mov
or
cmp
and
push
add
in
lea
sub
push
pusha
int3
lea
stc
or
cmp
adc
add
subl
inc
jl
adc
cmp
xor
loope
fs
add
hlt
addb
clc
lret
test
inc
out
cmp
xchg
add
inc
mov
test
or
mov
or
popa
jmp
or
das
sar
and
push
cmp
in
clc
mov
pop
aas
std
or
pushl
mov
scas
push
adc
addr16
push
or
das
jp
pop
xlat
andb
test
and
mov
in
dec
lret
dec
sahf
sub
or
pop
rclb
push
dec
sbb
dec
jne
lds
and
shlb
push
insl
and
ret
mov
sbbb
push
dec
sbb
or
sbb
sub
filds
sar
dec
jne
mov
rclb
je
shll
test
mov
xorl
mov
adc
xor
shrl
sbb
adc
fwait
and
or
push
sub
mov
inc
daa
add
scas
or
aad
inc
into
and
test
fcomp
and
or
jp
push
cld
jne
or
cmp
ss
insl
loopne
add
xchg
pop
adc
kandb
push
inc
mov
push
scas
or
lods
jge
jne
call
add
aam
cld
mov
ret
lods
jne
nop
aad
incb
in
push
push
loope
pop
lods
loope
loope
jne
ss
scas
mov
lea
cmp
fstp
les
inc
jge
aad
ret
lahf
dec
in
or
aam
push
pop
pop
fstl
or
mov
push
fsub
test
das
dec
mov
cmp
lgdtl
add
ficoms
in
push
sbb
add
push
or
cmp
sbb
std
outsb
test
cld
push
test
scas
adc
ss
mov
es
in
rclb
add
push
clc
rcrb
sbb
in
or
sub
loopne
lods
sbbb
adc
dec
mov
icebp
fwait
addb
xor
push
popf
pusha
mov
push
test
xchg
xchg
pop
cmpsl
inc
call
cmc
mov
cmp
stc
jne
movsl
sbb
int3
ret
mov
lea
orl
dec
push
push
subl
inc
mov
mov
push
mov
push
pop
bound
or
push
pop
insl
mov
jnp
mov
cmp
sub
add
sub
js
int3
sbb
roll
bound
inc
dec
xor
jae
fbstp
push
js
fsubr
loopne
pushf
add
add
rcrb
insl
decl
jp
mov
lods
rcl
dec
dec
sub
stos
xor
cmp
jnp
jge
push
inc
inc
push
or
je
insb
pop
cmp
adc
mov
outsb
repnz
rorb
lret
call
pop
outsl
jbe
xor
add
push
dec
dec
inc
sbb
push
sub
lea
push
add
lea
enter
rcr
loopne
ret
or
push
jo
ret
lcall
ja
imul
push
or
repnz
subb
mov
mov
xor
jmp
mov
adc
mov
ret
sub
push
nop
inc
mov
aas
es
stos
sbb
bnd
dec
call
add
xor
inc
ret
loopne
add
pop
stos
ror
adc
inc
cltd
popa
jge
sbb
es
cmp
mov
int3
push
test
cmpsl
dec
fistl
or
or
loop
incb
les
mov
sub
push
movsb
xchg
out
lea
sub
mov
xor
or
cmp
cmp
jno
lds
in
or
ud1
ja
xchg
loop
dec
xchg
into
mov
addb
dec
clc
sbb
pusha
orl
push
pmullw
inc
cli
mov
call
loopne
loope
out
jbe
xchg
movsb
inc
cs
das
jecxz
adc
dec
popa
cmp
mov
push
mov
outsb
sarl
mov
orb
or
mov
and
adc
aas
stos
push
or
fiaddl
push
insb
inc
aas
les
mov
jno
jno
inc
mov
lock
pop
dec
mov
push
push
cmp
pushf
out
add
fcoml
insl
and
push
arpl
mov
adc
push
and
adc
sbb
popf
push
xchg
xor
sbb
nop
loopne
imull
or
je
jmp
int
inc
jnp
sub
pop
cmp
push
mov
mov
mov
js
sub
adc
into
insb
or
je
adc
fldl
das
jge
push
jle
clc
mov
jne
mov
fnstsw
call
cltd
jmp
les
jmp
lcall
ret
or
aad
rorl
inc
mov
mov
enter
adcb
out
jp
sub
pop
adc
outsb
lock
push
push
xor
inc
loopne
loope
inc
jmp
adc
push
xchg
jne
inc
dec
stos
int3
jne
mov
shll
pushf
pop
mov
mov
xchg
jge
inc
mov
or
cmp
and
loopne
shlb
adc
push
cmp
pop
or
mov
jae
and
cmpsb
fwait
les
inc
in
cmp
adc
adc
fistl
stos
cmp
cs
nop
push
into
cwtl
lods
cltd
iret
test
mov
mov
pushf
das
inc
leave
sub
inc
or
mov
pusha
std
mov
mov
sub
add
loopne
sarb
push
inc
dec
pop
out
push
dec
pop
jbe
inc
sbb
or
cltd
imul
inc
xchg
aaa
mov
jge
sub
add
inc
das
adc
adc
movsl
inc
fmuls
cmpl
fnstenv
mov
or
jmp
dec
inc
test
or
push
or
and
dec
pop
inc
sub
fwait
or
sub
incb
mov
gs
ret
dec
pusha
sub
jecxz
adc
mov
or
push
nop
rcrb
inc
sub
fs
xchg
lock
mov
xor
xchg
pusha
cmp
test
and
scas
pop
or
das
push
or
push
and
and
jl
add
es
inc
mov
mov
mov
xchg
ja
push
dec
sub
lea
mov
js
xchg
adc
xor
xor
mov
mov
std
test
or
mov
jb
xor
loopne
dec
xchg
mov
and
push
dec
fxch
dec
dec
outsl
or
sbb
pushf
xchg
insb
pop
inc
mov
sarb
sub
xor
mov
pop
test
add
cltd
xchg
mov
sti
mov
push
jnp
and
js
nop
lret
stc
xlat
sar
pop
sub
cs
cmp
je
sbbl
jne
adc
xchg
cmp
cld
adc
sub
mov
adc
mov
or
test
pop
cmp
cmc
inc
cmp
dec
cmp
loope
in
sbb
and
and
imul
inc
test
loopne
enter
push
inc
movb
add
xchg
clc
add
sbb
imul
mov
sub
cmp
out
inc
sbb
xchg
inc
or
mov
int
push
cmp
ret
adc
aam
or
ds
xor
xor
fisubrl
ds
mov
add
mov
fldl
add
jne
mov
das
das
lods
jb
sub
or
sub
ljmp
daa
or
stos
enter
data16
movsb
loopne
push
jle
xor
rorb
or
xor
rcrb
jnp
outsl
push
push
xlat
int
jmp
gs
mov
dec
lods
dec
add
inc
push
lock
call
sub
pop
mov
mov
cltd
aam
add
mov
cmp
sbb
sbb
jne
cltd
orl
fildll
or
sub
inc
xor
and
add
add
fidivs
push
adc
sti
mov
add
popl
loopne
testb
js
lea
ss
pop
sbb
jmp
ds
aas
sub
dec
pushf
or
adc
lea
or
call
and
orb
mov
mov
push
sahf
and
sbb
or
inc
add
sbb
insl
add
adc
xor
insb
lods
in
sub
in
stos
push
jno
jecxz
in
mov
cs
mov
sub
or
les
lods
mov
mov
or
inc
add
call
pop
push
adc
adc
xchg
lea
mov
mov
ret
pop
jmp
nop
mov
adc
or
into
sbb
outsb
dec
or
or
stos
mov
popf
fidivl
inc
aaa
dec
push
movsl
into
test
pop
lahf
orb
pusha
loop
mov
jns
mov
enter
push
test
xchg
or
test
in
movsl
imul
jp
fmuls
jb
add
sarl
jno
in
idivb
repz
call
inc
loopne
fsubrl
cmp
adcl
loop
mov
dec
fcmovb
dec
inc
push
xor
mov
shrb
mov
repnz
mov
loop
mov
jge
mov
cmpsb
and
test
outsl
inc
push
cli
xor
or
xlat
or
push
dec
cmpsl
loopne
xchg
loop
xchg
jmp
lods
loopne
lods
sbb
aam
popa
dec
fcoml
push
rcrl
xor
mov
inc
or
popa
daa
xlat
add
adc
add
cwtl
mov
and
adcb
enter
adc
sbb
mulb
jge
add
push
sub
xchg
inc
cmp
out
pop
or
mov
fcompl
mov
push
mov
je
pushf
add
xlat
mov
jo
or
mov
cmp
push
or
or
test
lock
jg
cmp
imul
int3
popf
test
movsl
mov
mov
jne
xor
xor
or
inc
rorb
insl
inc
xchg
mov
add
pop
jmp
shll
orb
and
mov
add
cmp
insl
mov
mov
cmp
pop
cs
cmp
push
push
add
fstpl
and
pop
pop
mov
inc
sub
jl
cmp
lret
mov
jg
movsl
stc
push
sbbb
fcomps
fsubs
inc
icebp
imull
sbb
xor
ret
fldl
fcoml
shlb
mov
rclb
sub
test
sbb
push
lods
or
aam
imul
loopne
xchg
and
push
xchg
inc
loope
sbbb
rol
lds
inc
mov
jne
xor
mov
ds
fldcw
jmp
emms
dec
jb
cmp
fnop
jmp
mov
cld
cmp
aam
in
cmp
add
add
call
sub
sarb
push
xor
lcall
push
cmp
sub
xor
stc
scas
bound
arpl
push
arpl
mov
in
jns
jg
sbb
imul
orb
mov
or
outsl
sub
adc
inc
add
lds
test
jo
je
adc
push
bound
imul
jl
dec
sbb
and
loope
int3
sbb
out
dec
sub
addr16
icebp
lret
push
push
iret
add
mov
add
or
dec
add
lcall
loope
test
sub
inc
das
lahf
or
cld
jmp
sbb
add
or
mov
inc
out
inc
dec
mov
dec
mov
test
xchg
sbb
xor
add
and
add
fmuls
movsb
lock
enter
fdivr
pop
jb
cmp
jb
cmp
ja
add
jnp
sub
push
add
sub
xlat
add
in
mov
shrl
pop
mov
push
fidivrl
loop
test
roll
shlb
adc
and
mov
andb
add
fldenv
and
pop
xor
dec
notl
fcomi
fs
aas
lcall
jae
iret
xlat
pusha
sbb
jg
adc
push
icebp
daa
jmp
scas
pop
sbb
push
add
loopne
cli
or
clc
push
jb
cmp
fadds
mov
mov
mov
push
push
icebp
outsl
sti
in
or
sbb
int3
and
inc
cmp
pmaxub
shrl
lcall
sbb
adc
pop
sub
dec
rol
shll
pop
mov
insl
aad
adc
push
imul
push
repnz
cmp
push
out
mov
xchg
pop
aam
pop
add
sarb
sbb
mov
adcl
xchg
aas
inc
cld
imul
mov
cmp
fildll
jne
inc
push
insb
lea
pop
cmpb
movswl
les
mov
mov
jne
jl
add
add
inc
sbb
subb
xor
mov
lds
pop
mov
lock
push
sub
xor
pop
adc
mov
or
aas
dec
rolb
inc
call
mov
cmp
mov
adc
in
js
testl
stos
jo
mov
data16
rorb
mov
xchg
add
mov
shl
dec
or
xchg
dec
and
mov
fstl
jnp
cmp
push
shlb
push
dec
or
adc
loop
mov
and
xor
mov
mov
dec
sbb
and
adc
cmp
push
ret
enter
pushf
fildl
movsl
or
or
add
out
or
and
sub
sahf
cmc
shr
sbb
adc
push
in
jo
ljmp
repnz
clc
pushf
pop
inc
pop
addr16
je
sti
inc
int3
xchg
inc
cmp
pop
shlb
cld
mov
or
cs
fcmovnb
hlt
jae
push
xchg
jb
jle
pop
scas
dec
sub
mov
pop
jo
pop
je
lds
pop
or
add
jmp
ds
test
inc
and
movsl
inc
xor
dec
aaa
pop
jmp
inc
sbb
cmpsl
popa
ret
push
lds
mov
es
mov
leave
nop
sbb
mov
push
lea
idivl
adc
repnz
loope
adc
lea
repnz
pop
ret
orps
in
andb
pop
jo
fistps
js
or
jo
xor
aaa
inc
jl
sahf
aas
es
add
lods
inc
incw
adc
inc
add
imul
mov
and
or
jno
inc
daa
mov
pop
mov
add
in
or
dec
or
jl
sub
push
inc
mov
inc
lahf
push
mov
fadds
pop
pop
jmp
mov
push
mov
fadd
sbb
jge
dec
pop
loopne
add
inc
xor
xor
inc
push
mov
xor
xchg
fldt
inc
cli
cli
lcall
sahf
mov
mov
shlb
ret
lea
ret
push
cmp
and
and
mov
push
test
cmp
lods
insb
jns
mov
sub
fidivrl
push
jp
lea
cmpsl
or
aam
mov
xchg
ret
mov
adc
sbb
leave
cmp
mov
sub
push
jmp
and
mov
adc
lea
jbe
pop
cli
sub
inc
sub
add
shl
sbb
mov
dec
push
cmp
cmp
mov
add
xor
aad
inc
mov
dec
jne
adc
les
das
loope
pop
and
mov
jmp
ss
jg
in
add
jne
xor
es
lods
shl
push
icebp
call
pusha
call
sub
dec
jns
lea
insb
mov
dec
js
or
push
push
pop
add
add
jmp
fnsave
jmp
inc
popa
icebp
fs
adc
dec
jno
jge
dec
push
xor
js
int
dec
rorl
gs
pop
xchg
sub
sbb
lods
je
add
das
lcall
popf
pop
ret
sbb
adc
pop
jne
push
andb
ror
xchg
test
dec
sbb
push
rclb
mov
movsb
xor
mov
imul
cmp
add
dec
xchg
add
adc
and
addr16
or
sbb
loope
add
mov
test
lea
lcall
addr16
dec
mov
dec
push
and
mov
mov
and
nop
popa
mov
aas
push
lea
pop
push
add
pop
negb
loope
push
pop
inc
inc
lcall
add
fidivrl
popa
nop
mov
pop
dec
sbb
jmp
mov
push
mov
add
inc
gs
out
fistl
lds
xchg
movsb
dec
add
or
jbe
mov
sub
bound
add
loop
cmpsl
fdivs
call
inc
add
dec
mov
inc
add
mov
aad
testl
mov
in
mov
add
push
dec
leave
or
rol
xor
xor
sbb
and
clc
mov
xchg
sbb
xchg
ret
adc
lcall
mov
push
xor
std
and
xor
sbb
push
ss
cmpsl
mov
cld
jbe
adc
stos
movsl
lods
add
movsl
and
aas
scas
add
gs
popa
mov
ret
jmp
xor
push
cld
scas
arpl
cmp
jge
xchg
les
cwtl
dec
mov
inc
int3
and
adc
pop
mov
ds
cmc
sbb
jns
xor
add
adc
cmp
clc
pop
call
adc
push
test
pop
int3
leave
sub
cmp
xchg
mov
pop
ja
imul
add
xchg
fwait
mov
dec
adc
pop
sub
pop
sub
cmc
inc
push
pop
or
js
rorb
out
imul
sub
inc
popa
sub
and
popf
xchg
add
xchg
popf
adc
mov
ret
pop
add
xor
cmp
mov
outsb
push
shrl
jmp
pop
sub
xor
add
testl
sbb
movl
lea
movsb
add
sbb
hlt
push
pop
call
and
mov
pop
push
sbb
jnp
bound
adc
ss
push
out
inc
cmp
push
bound
or
adc
sbb
add
pop
test
pop
lea
pop
enter
mov
inc
pop
cmpl
push
cmp
sbb
push
in
scas
dec
nop
push
jp
or
or
jne
mov
repnz
fcoms
inc
push
sub
repz
sub
jge
or
stc
push
or
loope
std
push
and
pop
cmp
lods
mov
mov
push
test
out
add
or
mov
insl
sub
inc
jo
in
rcll
icebp
mov
int
mov
shll
les
leave
mov
mov
and
dec
imul
pop
aad
cmp
mov
xchg
xor
mov
rorb
add
sbb
dec
lea
and
stos
cmpsb
int
outsb
inc
mov
jmp
adc
inc
inc
jp
inc
xchg
mov
stos
sbb
decw
and
or
dec
imul
push
push
or
imul
cmpb
insb
sbb
mov
xchg
jnp
and
jno
or
pop
jge
aad
xor
test
add
bound
mov
mov
mov
sub
cmp
jge
and
pop
add
pop
and
and
fildll
mov
and
pop
push
sbb
lock
push
push
sbb
cwtl
dec
daa
jbe
dec
mov
inc
std
imul
push
cmc
jb
sbb
sbb
sub
dec
lcall
add
adc
lds
inc
scas
adc
jp
xchg
pop
lret
push
mov
frstor
add
jmp
rorb
mov
jp
pop
sbb
jne
inc
inc
shrb
cmp
mov
pop
sub
push
mov
jb
imul
jl
push
movsb
std
fldcw
dec
ss
sub
fwait
and
call
outsl
add
add
das
xor
rclb
js
cmp
and
xchg
aad
add
mov
or
xchg
push
jmp
dec
inc
insb
imul
or
pop
jnp
dec
xor
add
pop
arpl
mov
add
cmpl
dec
add
gs
cmpsl
jbe
xor
nop
lret
jecxz
mov
in
xor
inc
cmpsb
push
pop
dec
rorb
data16
mov
cmp
xor
arpl
or
mov
adcl
push
jp
cwtl
orb
jmp
call
cmpsl
mov
dec
push
xor
push
cmovbe
loopne
outsl
push
mov
xor
sahf
add
rol
pop
mov
cmp
pop
fmull
das
xchg
or
sub
inc
ds
add
xchg
test
jno
cmp
sub
cli
or
dec
or
adc
push
mov
pop
inc
sbb
pusha
jp
aas
test
iret
sub
sub
or
aaa
push
mov
lcall
sub
xchg
inc
add
pop
push
addl
add
mov
int3
outsl
loop
ret
jae
xchg
inc
mov
mov
dec
push
or
jl,pt
mov
pop
lret
push
add
adc
aaa
gs
sbb
xor
jne
sbb
adc
jns
inc
add
outsb
xchg
or
xor
adcl
dec
add
je
sbb
xchg
add
push
fstl
pop
outsb
movsl
pop
lret
and
outsl
lods
mov
mov
adc
dec
mov
aas
cmp
shr
xor
pop
mov
inc
xor
enter
xor
fimull
push
push
jne
lret
jmp
ss
in
gs
pop
pushf
push
call
dec
mov
pusha
inc
jns
pushf
pusha
add
dec
push
ds
xor
inc
popa
pop
add
repz
mov
inc
mov
push
dec
pop
imul
test
stos
dec
add
lock
xchg
mov
fsubl
or
xor
lea
mov
adc
adc
cmp
mov
sub
jne
loop
movsb
insl
mov
xchg
push
sub
int
push
add
cmp
add
shlb
jno
hlt
sub
lea
inc
push
sub
gs
jle
adc
and
mov
inc
aad
movsl
inc
jne
dec
mov
dec
dec
pop
sbb
pop
sub
repnz
cwtl
in
outsl
sub
push
js
push
xchg
outsl
cmpl
enter
loop
call
mov
fisubrl
cmpb
adcb
jns
adc
cwtl
xor
xchg
cld
jg
orb
or
cmp
ja
or
icebp
sahf
jb
bound
sbb
pushf
subb
push
mov
add
js
and
inc
push
in
xor
xor
inc
dec
adcl
pop
add
xorl
adc
cwtl
xor
clc
std
push
mov
ror
dec
aad
or
bound
outsb
adc
mov
or
push
jge
mov
mov
jo
out
or
popa
bound
movsb
negl
dec
add
jmp
das
in
bound
cltd
pop
jne
inc
cmp
aaa
jmp
jmp
jne
mov
scas
sbb
je
adc
adc
repz
sub
xor
inc
and
pop
jecxz
pop
adc
sbb
arpl
add
pop
cmp
adc
aas
adc
add
fistl
push
dec
jl
popl
into
mov
mov
aad
pop
add
xor
push
jge
fsubs
lods
pop
mov
inc
repnz
clc
outsb
mov
sbb
out
mov
addl
popa
xlat
xchg
sbb
and
add
fcomps
jb
cmp
push
dec
insb
inc
jno
push
lock
mov
add
mov
sub
pop
les
ss
fbld
push
pop
inc
inc
call
sub
cld
add
jns
dec
scas
ret
or
mov
jmp
add
mov
or
and
clc
sbb
xor
loope
in
push
sbb
push
out
xor
mov
dec
cmp
cmp
fs
test
mov
push
nop
rol
add
jmp
loopne
inc
sbb
adc
imul
test
cmp
es
push
push
negb
fisubs
mov
mov
mov
add
leave
push
outsl
je
push
rcl
cs
inc
or
mov
mov
in
pushf
icebp
popa
add
inc
or
sbb
xor
push
adc
inc
jmp
sub
dec
adcl
mov
clc
mov
push
push
push
mov
movsl
add
sub
dec
popf
inc
add
pop
or
cmpsl
push
mov
add
popf
mov
and
inc
rcl
jle
lea
aam
js
lea
mov
mov
lea
xor
les
push
xor
dec
inc
ljmp
outsl
sub
dec
pop
push
popf
mov
loop
loop
jne
movsl
adc
mov
xchg
add
add
pop
rorl
and
mov
outsl
xchg
adc
sbb
jb
mov
or
push
test
and
imul
dec
dec
adc
or
insb
fs
rorb
mov
adc
mov
fwait
jo
lods
jne
adc
jbe
cmpsb
lcall
icebp
shlb
cmp
clc
and
pcmpeqd
je
mov
add
dec
add
aas
lahf
adc
mov
pop
push
fisubl
push
mov
jle
xchg
dec
sbb
jge
pop
inc
mov
jle
xchg
or
in
jmp
or
mov
aam
inc
pusha
push
testb
sbb
or
adc
hlt
dec
fnstcw
cld
xor
push
inc
stos
cmp
adc
out
jge
and
int
xchg
dec
adc
call
dec
and
jp
mov
xor
xor
add
arpl
mov
mov
push
sbb
mov
cmpsb
xor
sbb
sbb
rclb
jp
lahf
cmp
lds
sbb
js
adcb
mov
and
dec
inc
outsb
pop
add
push
push
push
add
repnz
in
push
xchg
pushf
adc
jns
pop
sbb
mov
dec
scas
inc
jmp
xor
or
fsubs
adc
push
adc
mov
or
cmp
adc
stos
pop
lcall
adc
sbb
bound
ss
sub
jb
push
test
fiaddl
dec
push
xor
jo
pushl
movsl
mov
cli
push
push
dec
or
fistl
lods
pushf
shrb
mov
push
les
or
pop
add
xor
sub
or
lea
xchg
mov
push
gs
dec
and
add
and
cmp
cltd
and
imul
decl
lods
add
in
add
pop
jae
push
or
add
jmp
inc
add
sub
xorb
aad
sbb
aad
xor
push
imull
movb
sbb
cli
jo
or
pop
xchg
loopne
pop
sub
fwait
lods
push
outsl
pop
adc
lds
int3
gs
cmp
add
in
stos
gs
or
add
or
jl
jae
xchg
negb
aas
cmp
add
or
push
inc
mov
jo
or
and
stos
inc
mov
add
or
jp
or
inc
adcb
adc
xchg
loopne
xor
sub
je
inc
cmp
xchg
xchg
lds
sbb
jge
lea
lods
xor
cmpl
out
and
stos
fs
push
or
pop
inc
daa
inc
and
add
pop
push
jb
icebp
or
push
or
jl
pop
jbe
add
and
add
cs
test
push
mov
mov
mov
mov
and
pop
xchg
or
loopne
ds
lods
add
sub
loopne
loopne
cmp
sbb
dec
pusha
jl
rcrb
sarb
not
je
popf
test
mov
push
ret
xchg
adc
xchg
test
jno
add
inc
mov
push
or
add
sub
test
fisubrs
in
ret
push
inc
pop
xor
mov
aas
push
sbb
aas
and
add
inc
inc
les
xchg
sbb
push
or
xor
add
pop
dec
cmp
mov
aad
dec
jmp
push
call
inc
call
and
jb
int3
or
adc
mov
fmull
xor
pushf
add
pop
jle
in
sub
cmp
add
js
sarl
pusha
mov
or
dec
and
mov
or
scas
or
cltd
sub
test
sub
push
jmp
adc
push
xor
push
rolb
adc
mov
lret
lods
xor
stos
and
xor
incl
outsl
jmp
mov
add
fbld
icebp
pop
fs
je
out
add
icebp
push
movsl
mov
inc
je
mov
jl
ret
lahf
ds
and
lret
jle
add
xor
mov
push
int
adc
or
shlb
test
inc
sub
mov
xor
sbb
ret
push
lea
jl
inc
sbb
adc
je
out
mov
push
add
frstor
cmp
push
push
mov
lret
mov
push
lock
pop
cmpsb
cmpsb
mov
add
sbb
or
cmp
cwtl
repz
xchg
push
bound
dec
push
fs
sub
or
adc
and
inc
mov
sbbb
rorb
in
jns
push
imul
or
out
fs
scas
stos
add
orl
cmp
das
and
dec
dec
mov
push
jne
ret
test
jne
inc
shrb
std
push
or
mov
xchg
jno
fs
push
or
sti
xchg
push
mov
je
pop
testl
insb
scas
call
je
fbld
dec
push
xchg
adc
sub
ja
je
aas
mov
sub
fstl
xchg
imul
out
arpl
adcl
jmp
ret
ds
push
pop
sub
sub
mov
shl
adc
sbb
add
int3
call
sub
xchg
push
xchg
or
fisubl
ss
jbe
mov
sub
pop
mov
add
pop
pop
cltd
andl
push
fcompl
ss
lret
movsl
or
lock
xchg
xor
sbb
pop
and
add
mov
insl
add
sbb
dec
push
dec
pop
and
and
pushf
mov
push
xchg
hlt
mov
xchg
repnz
wrmsr
fcoml
andl
push
pusha
pop
mov
xor
sub
xchg
movsb
fdiv
push
lret
in
test
push
sbb
mov
xchg
orb
cmp
rorb
enter
cs
ret
andb
push
or
xchg
inc
bound
push
or
xchg
mov
lahf
pop
fs
insl
cwtl
jno
add
mov
push
popa
and
icebp
addb
mov
insl
and
fiaddl
cmpsl
sub
imul
imul
add
pop
aad
cmp
mov
dec
sub
dec
dec
mov
mov
mov
ret
dec
dec
cmp
fs
xor
mov
aad
cmp
sbb
mov
and
xor
fiaddl
add
xchg
mov
pop
push
pushf
sbb
add
out
push
addr16
xchg
sbb
push
xor
xor
fld
add
sub
test
xchg
mov
add
mov
in
dec
mov
xor
repz
pop
sbb
pop
fsubrs
loope
push
mov
xor
xchg
addl
rol
mov
mov
inc
jae
pop
mov
pop
xor
insb
push
cmp
sub
mov
or
add
inc
mov
shl
sub
xchg
mov
mov
cli
add
sub
imul
je
pusha
adc
add
inc
or
aaa
mov
mov
inc
lcall
or
xchg
pushf
jge
adc
push
push
filds
xchg
aaa
sbb
mov
mov
sbb
les
outsl
adc
xor
cmp
enter
or
push
sub
mov
xchg
or
in
xor
sub
mov
dec
cs
add
mov
test
jge
dec
push
xchg
push
mov
or
jecxz
dec
aam
icebp
mov
movsb
mov
xor
jo
cmp
popa
loop
daa
jno
shrl
or
outsl
push
inc
pop
inc
rol
dec
in
push
or
jmp
xor
icebp
inc
lahf
push
cmpl
or
add
inc
push
mov
cmp
mov
repnz
je
call
jbe
leave
mov
js
pop
push
add
movsb
mov
hlt
pop
add
push
and
fiadds
jle
adc
adc
jp
or
inc
xor
or
pop
mov
jg
add
inc
xchg
cli
pop
cmp
inc
or
sahf
mov
aad
inc
nop
in
mov
rorb
sbb
xor
leave
neg
push
and
cmc
mov
pushf
and
xor
imul
add
cmp
test
adc
js
je
xor
cmp
inc
dec
adc
xchg
mov
lods
das
out
lds
adc
rcr
adc
bound
adc
scas
dec
jo
icebp
push
into
mov
and
xor
sub
and
and
mov
and
and
movsb
push
adc
test
sub
popa
push
ss
push
out
mov
jle
fs
in
sub
test
jmp
dec
lds
andb
fadd
subb
insb
or
pop
lcall
loopne
push
cmp
sub
push
push
lods
jb
sub
and
cmpsb
dec
pop
push
pop
inc
push
daa
test
push
add
arpl
add
icebp
mov
mov
in
add
sub
push
rclb
and
xor
cwtl
jb
lods
jmp
sub
out
push
inc
mov
sbb
sbb
data16
mov
ficoms
push
pop
gs
sub
push
or
dec
icebp
inc
cmpsb
push
pop
dec
aas
movb
push
adc
inc
enter
cmp
addl
and
dec
cwtl
add
mov
xchg
test
and
ljmp
and
sub
dec
add
and
xor
es
sbb
cmc
xchg
addb
jo
in
insl
xor
ljmp
adcb
mov
sbb
lret
dec
cwtl
add
mov
sbb
push
iret
push
push
pop
ja
dec
sbb
mov
in
or
xchg
shl
enter
inc
in
xchg
pop
aaa
je
add
add
subl
and
pop
into
enter
jp
stos
xchg
addr16
jne
pushf
pop
shrb
mov
outsl
mov
loop
aaa
or
mov
push
jno
pop
or
cltd
lea
icebp
or
subl
cmp
stos
icebp
sbbl
xchg
test
ja
push
fdivrl
cmp
popf
mov
adc
sti
jnp
cltd
push
sbb
arpl
push
lods
adc
sbb
add
sub
in
cmp
je
cmp
sub
sub
shrl
jecxz
push
sahf
sbbl
nop
jle
xor
fcomps
lea
cmpl
mov
and
test
ja
loope
inc
shl
push
dec
insl
and
pop
and
sbb
incb
lea
cmp
jg
mov
or
clc
fwait
lea
cmp
xor
in
mov
lea
cmp
sub
sub
pusha
bswap
decb
inc
je
dec
je
xchg
or
or
or
out
dec
mov
int
in
adc
sbb
pop
lret
js
xor
xchg
movsb
xchg
pop
mov
sbb
out
xor
cmp
cwtl
inc
dec
xchg
jns
dec
enter
push
das
xchg
pop
jae
mov
mov
adc
xchg
mov
ret
ret
xchg
jmp
jmp
andb
lret
scas
pop
mov
loopne
pop
and
pop
mov
ss
mov
cli
xchg
addl
xchg
movsl
mov
mov
or
push
pushf
mov
mov
inc
dec
pop
cmp
xchg
in
mov
inc
pop
and
mov
jnp
add
mov
cmp
dec
and
dec
inc
add
lcall
pop
dec
cmp
mov
cmp
mov
sbb
out
xchg
mov
push
rclb
mov
inc
ljmp
mov
out
cmp
push
cmpb
adc
rorl
pop
jnp
repnz
pop
in
leave
cwtl
mov
jmp
adc
movsb
imul
fmuls
mov
or
xchg
inc
inc
mov
jecxz
loopne
aam
jg
jmp
pop
in
cli
mov
sub
adc
stc
cmpsb
xor
dec
aas
cld
frstor
pushf
sbb
in
cmpsb
fisubl
movsl
push
daa
cmpsl
pop
add
add
and
add
add
adc
push
sahf
je
add
push
push
orl
in
inc
mov
jne
jns
sarl
gs
inc
cmp
or
mov
jbe
mov
push
mov
and
inc
sub
lret
mov
shrl
push
lea
mov
insb
ds
pop
pop
imul
jge
dec
push
jge
sti
inc
pusha
push
mov
mov
jae
jecxz
dec
shlb
and
inc
sub
sbb
xor
pop
push
xor
mov
scas
ljmp
add
out
push
repz
xor
je
lock
ja
pop
mov
inc
movsl
test
or
jl
xor
pop
adc
sbb
and
mov
add
cmpl
out
sahf
jno
call
pop
mov
fucom
sub
pop
mov
ret
add
push
sbb
pop
sub
in
xchg
je
jl
mov
jbe
mov
mov
mov
sbb
in
aas
xor
mov
enter
inc
push
sarl
and
dec
cld
sbb
dec
addb
movb
mov
insl
test
test
je
dec
mov
adc
add
sub
pusha
adc
inc
cli
pushf
jge
mov
pop
inc
fadds
adc
std
or
adc
inc
inc
adc
lcall
add
add
dec
push
xchg
ss
rcl
dec
inc
inc
push
or
push
or
icebp
sbbb
popa
pop
js
enter
dec
inc
xchg
inc
inc
xchg
shlb
push
or
fs
std
bnd
mov
mov
shl
sar
pop
xor
jne
lret
xor
pop
sbb
mov
pushf
es
add
inc
and
ds
loope
roll
cmp
je
ljmp
outsl
jbe
xchg
xchg
fs
jb
rclb
lea
lcall
dec
je
adc
iret
dec
or
pop
jo
incl
mov
pop
sbb
jne
dec
dec
pop
xor
sahf
or
sub
pop
addl
into
gs
loopne
ja
push
movsl
or
sub
adc
cmp
mov
jecxz
ss
sub
imul
rorb
mov
insb
and
lock
jb
cmc
mov
inc
or
adc
leave
jge
mov
andb
inc
adc
lret
dec
xchg
lret
outsb
adc
jmp
lret
dec
imul
aas
mov
dec
rcll
roll
push
nopl
dec
or
push
jo
lods
dec
mov
mov
insb
pop
cmc
mov
scas
adc
movsl
cltd
inc
and
leave
ret
and
int3
sahf
sub
cli
cltd
lods
fildl
movsb
pop
sahf
xchg
fwait
fwait
shlb
mov
pusha
cs
scas
sbb
jmp
clc
or
leave
decl
mov
dec
pop
dec
sub
sbb
sti
lock
inc
pop
mov
gs
sar
and
mov
lock
lcall
loop
jns
adc
aam
adc
loop
xchg
add
jo
adc
jl
mov
into
dec
and
dec
cmpsb
jl
sbb
mov
shl
les
and
ret
shl
loopne
fmuls
push
call
adc
rcrl
daa
adc
push
dec
cld
xchg
ret
xchg
insb
push
xor
push
int3
incb
ret
outsb
dec
inc
fs
sbb
addl
movsl
mov
add
mov
add
add
in
xchg
and
sub
loope
mov
in
xor
cwtl
adc
out
notb
ret
add
and
cmp
rcrb
push
jl
adc
and
bound
cmp
int3
inc
mov
mov
and
mov
cmp
int
adc
lea
push
clc
push
xor
aam
pop
lret
lea
data16
rolb
mov
or
cmp
bound
sti
sub
sub
inc
or
push
cmp
add
stc
cmpsb
sbb
stc
push
jle
int
lock
jl
inc
decl
dec
cmp
or
decb
inc
sahf
cmpsb
push
lret
jl
divb
arpl
lret
movsb
xchg
insl
dec
sub
jle
mov
enter
lods
inc
loop
inc
or
push
xchg
push
or
mov
xchg
xor
mov
jns
and
adc
push
in
pop
xchg
mov
jg
inc
sub
or
popl
orb
add
andb
sbb
rolb
push
add
inc
test
inc
and
scas
pushf
adc
fnstenv
ret
xchg
sbb
dec
mov
add
xchg
dec
fimull
ret
outsb
xor
push
xchg
jecxz
in
mov
sbb
enter
or
push
idiv
add
jle
and
and
js
mov
jl
pop
jmp
ja
push
movsb
lret
movsb
arpl
loopne
sub
xchg
cmp
cmp
xchg
aas
pop
push
mov
sbb
push
cmpsl
xlat
jne,pt
fs
sbb
clc
das
shll
mov
mov
orl
loop
and
cs
inc
push
mov
test
mov
pop
dec
push
je
clc
fwait
addr16
adc
and
push
nop
addb
jno
call
xchg
movsb
push
pop
and
xor
lcall
aam
cmpsl
movsb
push
cmpl
stos
lds
xchg
cmp
cmpsl
fsub
nop
adc
xorl
pop
das
cmp
popf
test
inc
push
cmc
xor
inc
inc
xor
leave
and
add
test
leave
inc
rclb
add
xor
loopne
outsb
sarl
jl
iret
push
pop
and
je
xor
xchg
subl
out
and
push
xor
xor
orl
pop
cmp
xor
pop
repz
ret
jns
add
test
pop
mov
verw
jge
sub
xchg
and
xorb
je
adc
jecxz
sub
xor
add
nop
add
jne
sbb
dec
test
adc
add
ret
lcall
mov
leave
sub
test
lods
sub
pop
mov
inc
add
inc
mov
mov
jns
cmp
shlb
ret
or
ret
popa
leave
sbb
imul
sahf
int
and
leave
sahf
arpl
movsb
adc
lahf
cmpsl
cmpsl
sub
mov
mov
or
clc
mov
lock
pushl
push
mov
rcll
mov
or
int3
in
push
xor
cmc
popa
sub
out
inc
xchg
jle
shl
sbb
les
subb
lret
or
pop
inc
lcall
mov
pop
ljmp
movsb
pop
mov
add
stos
int3
push
test
jns
adc
mov
jbe
inc
mov
mov
mov
enter
adcl
fstpt
enter
fcoml
push
add
rclb
adc
sbb
int3
sbb
mov
lods
inc
js
jnp
sbb
cmp
sub
sub
cmpsb
lods
icebp
jae
adc
mov
ret
outsb
cmp
std
mov
jl
icebp
push
into
sar
cmp
nop
and
popa
xchg
lea
inc
test
mov
push
adc
push
mov
lahf
roll
sarl
fs
sub
rcrl
mov
or
or
adc
fisttpll
jl
int
sahf
push
cs
or
or
lahf
push
push
inc
dec
dec
push
push
fists
fimuls
add
nop
xor
or
pop
nop
scas
push
sub
in
lea
scas
mov
fdivl
mov
add
inc
out
jne
mov
es
pop
inc
lahf
test
or
ja
loopne
or
add
add
mov
mov
movsl
add
test
sub
push
jp
cmpsb
loopne
leave
push
mov
push
xor
loope
adc
lret
aam
and
mov
sbb
mov
dec
inc
sub
inc
mov
jb
xor
inc
mov
in
rolb
popa
mull
add
cmp
cmp
inc
sub
xchg
adc
adc
daa
shll
push
mov
xlat
dec
xor
mov
adcb
addl
and
xchg
jo
ret
mov
cmp
mov
push
scas
adc
add
adc
addl
popf
dec
in
movsb
enter
add
jmp
cmp
cmp
xor
cmp
mov
je
add
xchg
leave
inc
mov
cmp
fadd
push
sub
xchg
cmp
test
push
negl
inc
jo
push
cwtl
sahf
mov
out
sbb
lea
aas
mov
xchg
scas
fadds
xchg
sub
fdiv
lods
sbb
into
jae
lea
sbb
cmp
fildl
iret
push
popa
push
sub
dec
mov
je
insb
and
loop
dec
loop
mov
hlt
jmp
push
push
mov
out
inc
cld
push
push
cmp
sub
inc
sub
xor
cmp
xchg
nop
and
push
and
adc
mov
jge
shlb
mov
mov
push
and
cmpsl
and
aas
mov
mov
ret
jl
subb
xchg
and
fs
cli
dec
mov
sub
jmp
lea
push
sub
in
adc
add
or
shl
add
testb
mov
push
push
pop
aam
adc
cmp
adcb
add
lock
outsb
test
int
inc
nop
data16
enter
adc
sub
push
sbb
lea
push
dec
outsl
mov
pop
jge
push
dec
mov
and
adc
daa
cmc
inc
jle
mov
fs
mov
add
add
shll
test
and
or
mov
or
push
adc
or
push
cmpsl
mov
cmp
sub
in
loopne
rclb
push
adc
shl
xchg
jno
in
push
inc
and
mov
push
add
negb
xchg
dec
cmpsl
js
dec
push
fisttpll
adc
hlt
jb
xchg
dec
sub
mov
xor
sub
je
inc
jmp
add
lea
fs
arpl
jl
xor
shlb
mov
push
mov
cmpl
addw
xlat
bound
xor
dec
popa
sbb
inc
mov
inc
xor
push
or
add
pop
aam
in
int3
xchg
adc
push
cmp
push
repnz
lea
push
xor
sbb
push
cmp
pop
cld
or
lds
or
push
loope
sub
inc
or
and
bound
dec
ss
or
mov
icebp
or
int
pop
cli
inc
daa
adc
sbb
cmpb
mov
pop
sbb
or
and
pop
insl
xor
xlat
adc
enter
hlt
inc
push
stos
dec
jne
push
cwtl
inc
and
pop
sahf
movsb
mov
ret
test
sub
add
fstpl
push
lahf
inc
xor
and
xor
mov
pop
adc
sbbl
and
test
movsb
xchg
dec
ss
ja
adc
fadd
dec
testl
sub
daa
push
push
push
fucom
add
mov
shlb
jnp
call
mov
xor
es
movsl
rcrb
push
pop
xor
inc
pushf
mov
ss
cld
inc
rcll
mov
test
nop
aad
xor
lds
add
cwtl
pop
add
mov
and
popa
outsb
or
push
cmpsb
test
lea
aam
rcl
pusha
dec
sahf
js
sahf
loopne
pop
pushf
mov
sub
xchg
mov
mov
fstp
or
sbb
add
lea
fmull
shlb
sbb
dec
add
aad
xor
dec
in
push
add
pop
cld
addb
or
and
mov
add
scas
xchg
jge
sub
inc
or
dec
sub
fisttpll
add
dec
cmpl
ss
pusha
out
push
aad
add
add
pusha
cs
add
ljmp
inc
js
divb
out
insl
pop
inc
cmp
sbb
push
mov
xor
cmp
and
mov
xor
cmp
mov
dec
and
xor
lods
rolb
lcall
dec
movb
movl
sbb
mov
push
mov
push
ss
imulb
dec
insl
dec
jns
pop
adc
mov
lea
int
mov
loope
adc
push
mov
int3
cmp
pop
testb
test
dec
mov
subl
in
rcl
and
lock
and
xchg
rorb
push
mov
inc
ljmp
push
mov
cs
fmull
mov
inc
inc
push
cmp
and
and
fld
push
cmp
dec
stos
cmp
ss
and
push
dec
roll
and
dec
dec
adc
shll
cmp
jne
pop
xchg
add
sbb
ret
outsl
add
inc
sub
mov
jbe
adc
push
add
or
xchg
andb
sub
pop
jno
insb
jnp
out
mov
or
in
or
dec
xchg
call
mov
mov
dec
dec
push
mov
pandn
pop
jbe
push
push
stos
add
and
dec
fstl
sub
rcrb
or
xor
subb
push
pushf
je
pop
bound
imul
shlb
xor
cmc
test
xchg
jge
arpl
sub
and
push
rclb
cmpsl
aaa
cmp
cli
or
mov
movb
int
setl
fwait
js
pop
mov
inc
push
add
out
nop
xchg
icebp
mov
push
jle
pop
cmpsl
cmpsb
dec
xor
pushf
stos
adcl
adc
test
lret
and
and
or
icebp
push
ljmp
or
movsb
push
and
push
sbb
pop
xor
inc
dec
and
not
and
or
inc
std
pop
sbb
xchg
fcmovnu
or
loop
inc
out
rorl
xlat
push
or
cld
jg
je
stos
jmp
jo
and
shl
add
shl
or
add
and
not
and
or
in
in
das
jbe
add
inc
pop
out
into
mov
push
shr
or
add
xlat
loopne
cli
mov
push
lcall
leave
cs
lods
jmp
test
or
lock
cmc
sbb
loopne
add
outsb
clc
add
nop
and
xchg
nop
or
lcall
lds
adc
int3
add
mov
cmp
adc
test
adc
int3
andl
cmp
add
inc
repnz
cmp
mov
push
mov
push
sarb
inc
add
or
mov
cmp
mov
loop
mov
xlat
add
nop
in
and
std
inc
mov
sarb
ret
push
aad
xor
test
mov
lcall
pop
cwtl
loop
pushf
or
ds
mov
andl
data16
push
cs
lahf
fucom
jbe
xor
cmp
lret
and
add
lcall
jno
std
adc
pop
test
fs
and
ljmp
pop
mov
cmpsb
setp
mov
pushf
ljmp
and
xchg
pop
lock
in
jmp
fisttps
mov
mov
push
push
in
or
ljmp
fstpl
and
push
idivb
add
add
and
jmp
stos
test
mov
rclb
fsubs
js
dec
add
je
and
xchg
pop
xor
out
aad
push
pop
pop
adc
add
cli
clc
push
xchg
jns
nop
jmp
push
stos
mov
out
int3
jo
cmp
addb
lcall
mov
and
ret
xchg
or
inc
push
ret
fidivrl
pop
mov
insl
push
add
add
loope
push
lds
jmp
pusha
js
pop
movups
cmp
adc
fdiv
adc
aad
loop
cmp
pop
enter
sahf
push
pusha
and
int
out
push
xchg
inc
inc
ret
je
ficoml
dec
in
cmp
jmp
int
and
dec
sub
orl
pop
imul
ret
dec
adc
or
ret
mov
jle
pop
cs
mov
cmp
sub
adc
int
decb
cmp
into
pushf
sbb
adc
inc
mov
push
loope
add
imul
das
pop
mov
mov
jecxz
add
roll
pop
jl
cmpsb
mov
insb
shrl
clc
mov
out
cld
dec
out
cli
stc
xchg
push
push
pop
mov
mov
and
push
flds
outsl
addr16
adc
jg
mov
into
fnsave
addb
jnp
and
pushf
xor
xor
daa
daa
ss
inc
cmp
jmp
leave
inc
loopne
sbb
cwtl
add
into
mov
xor
push
movsb
lock
adc
cmpsb
lods
mov
xor
repnz
pop
and
insl
sbb
push
mov
adc
cli
cmp
pop
fs
and
adc
in
nop
mov
and
jl,pt
repnz
xlat
xor
fbstp
jl
ljmp
sbb
ret
cmp
xchg
jmp
iret
test
je
jecxz
mov
aad
xchg
cmp
dec
mov
mov
std
xor
out
add
mov
outsb
jo
mov
lcall
mov
fbstp
jle
sub
ret
add
shll
roll
push
push
cli
daa
mov
in
pop
movl
aad
adc
loop
repnz
out
aam
fbstp
or
xor
add
sub
xor
jge
out
in
or
inc
out
sbb
stc
cmp
aam
ljmp
mov
sbb
cltd
test
xor
cmp
popf
jp
pop
xchg
loopne
into
sub
jnp
cmp
push
inc
push
mov
jp
repz
and
push
lods
loopne
or
lock
ds
and
hlt
lods
sbb
lods
adc
or
dec
push
daa
sahf
iret
cmp
jmp
push
or
pop
push
test
xor
stos
add
add
add
add
sar
movsl
mov
add
mov
into
mov
ret
pop
pop
gs
add
adc
xchg
pop
mov
push
lock
sbb
movsb
lcall
xchg
int3
or
push
pop
in
jno
and
dec
mov
lea
jg
jge
out
ljmp
adc
mov
rcrb
mov
rcrl
test
and
xor
in
inc
pop
enter
ss
jle
outsl
jmp
dec
or
fldcw
out
pop
jb
add
jmp
rcll
dec
adc
add
jmp
stc
roll
mov
and
arpl
sub
mov
cmp
xorl
jle
imul
and
mov
orb
into
cld
ss
sbb
aas
mov
ss
enter
sub
addr16
add
xchg
jmp
and
inc
pop
out
adc
loop
xorl
ret
lcall
test
push
mov
inc
cmp
pop
push
xor
fbstp
mov
adc
or
push
or
adcl
mov
or
and
outsb
repnz
mov
or
roll
add
pop
adc
filds
dec
and
jp
imulb
mov
es
mov
add
movl
or
outsl
mov
int
push
fdivrl
xor
and
jbe
pop
xorb
sub
mov
add
repnz
and
push
decl
filds
mov
movups
add
icebp
test
adc
mov
pop
das
add
bound
and
lea
add
popw
jmp
cs
add
add
cmp
mov
add
push
notb
push
sbb
js
cli
push
dec
push
jno
pop
aam
bound
sbb
lret
or
mov
mov
mov
fstpt
add
mov
sub
ja
imul
in
mov
jmp
sbb
jl
orl
sbbb
test
lret
adc
ja
push
sbb
movsb
jl
xchg
stos
and
or
inc
loop
lea
lods
ljmp
mov
jae
incl
jnp
roll
fcmovnu
fnstsw
sub
cmp
mov
push
fcomps
call
sbb
dec
jmp
ja
dec
add
mov
pop
nop
pop
dec
sahf
jne
sbb
cmc
jae
or
xor
push
cmp
adc
inc
xor
jo
adc
movsb
push
loopne
sbb
lods
lret
push
push
adc
inc
fstpt
mov
js
rcrb
test
mov
insb
ret
lahf
add
push
jge
pop
shlb
and
mov
cmp
in
jbe
push
test
aad
mov
aam
sbb
push
outsb
jge
sbb
rolb
call
cmp
push
cmp
cltd
xor
pop
and
push
or
lahf
jg
into
xor
test
mov
xor
movsb
call
mov
add
sbb
jecxz
fsubl
xchg
mov
push
orl
loope
imul
ret
shr
jg
mov
mov
cmp
jae
dec
xor
push
sbb
in
ss
iret
test
push
mov
mov
xchg
inc
add
jmp
pusha
lock
ficoml
xor
or
xor
jg
mov
xchg
pop
ret
or
frstor
push
or
rorl
xor
loopne
inc
or
lahf
or
cmp
cmpb
ffreep
popf
mov
push
aam
std
add
sbb
inc
mov
mov
mov
addl
inc
cmp
mov
pop
push
lcall
lods
leave
lahf
xor
mov
mov
pushf
or
jmp
dec
add
or
and
in
lahf
push
test
cmp
mov
mov
add
add
inc
adc
add
mov
in
hlt
and
mov
daa
adc
xor
daa
outsb
gs
jl
insb
jl
push
mov
imul
mov
in
ss
lds
ss
mov
dec
mov
dec
inc
je
adc
sub
shll
xchg
cli
fnstsw
inc
push
cwtl
sub
pop
dec
lcall
add
cmpsb
xor
stos
xor
mov
jo
shrl
sti
inc
fstpl
xor
inc
clc
in
cmp
out
xor
lret
outsl
out
ja
test
or
or
in
mov
call
cmpsl
sahf
adc
and
inc
je
test
add
notb
add
push
xor
mov
xor
add
xchg
cmpsl
mov
xor
mov
insl
push
ljmp
sbb
lods
mov
loopne
sbb
sbb
lret
mov
adc
jge
adc
pop
jae
dec
loope
mov
je
rcrl
dec
or
mov
js
sbb
or
hlt
adc
in
xchg
shr
scas
test
movsb
and
inc
adc
ret
ret
dec
data16
aam
fmull
ds
push
dec
mov
xor
data16
into
es
loopne
lock
outsl
sub
icebp
xor
xor
int3
mov
xchg
push
and
test
hlt
ss
add
mov
mov
and
jl
je
fs
popa
mov
xchg
scas
push
test
mov
sub
pop
inc
mov
sbb
sub
sbb
in
inc
mov
ret
arpl
add
inc
pop
mull
shll
call
mov
adc
sti
xchg
testb
inc
addl
sarb
or
je
lock
test
pop
dec
pop
mov
mov
jne
push
pop
dec
aaa
dec
pushf
in
add
add
jl
ss
shl
ret
cmc
jmp
aam
es
nop
xchg
lea
jle
push
lock
mov
loopne
fcomps
push
shrb
ret
jne
js
dec
clc
mov
mov
enter
inc
mov
popl
popa
push
push
imul
insb
popa
or
mov
jmp
rcrb
lods
jle
repnz
lea
mov
into
sub
ror
pop
sti
jg
jle
int3
inc
inc
mov
mov
mov
or
adc
mov
cmp
inc
add
dec
jne
push
in
inc
es
mov
mov
mov
sbb
inc
jo
push
sbb
je
sbb
cmc
xchg
roll
jmp
es
or
mov
sbb
add
bound
and
popa
pusha
pop
sub
sbb
popa
pop
mov
adc
test
push
xor
inc
in
outsb
pusha
sbb
add
add
movswl
subl
pop
adc
mov
lahf
cmc
fisubs
nop
in
add
adc
mov
gs
inc
ss
push
jb
insl
das
aam
pushf
inc
in
inc
push
adc
add
pop
in
add
mov
add
push
les
push
xchg
inc
data16
pop
sbb
in
daa
or
or
inc
dec
cs
lock
inc
inc
pop
enter
or
cs
push
in
inc
loopne
sbb
mov
adc
adc
in
and
pop
adc
enter
das
adc
pop
dec
adc
daa
daa
in
mov
pop
mov
push
and
sbb
inc
add
add
pop
push
add
xchg
cld
inc
aas
mov
inc
pop
bound
or
inc
add
dec
arpl
int
push
mov
pop
push
push
push
cwtl
negb
dec
fisubrs
and
shrb
les
dec
fisubs
push
scas
xchg
negl
push
mov
leave
in
dec
lock
inc
xchg
out
mov
push
add
xchg
subl
in
xchg
pop
inc
jns
and
inc
push
jb
jnp
ss
shlb
push
push
push
vmwrite
movb
mov
add
pop
add
and
jmp
sbb
pop
pop
add
adc
xor
inc
fwait
clc
mov
or
add
inc
pop
or
aam
shll
lods
dec
mov
or
dec
addb
inc
loopne
push
test
fadds
cwtl
pop
jno
rolb
lock
sub
mov
add
dec
and
sbb
shlb
sarb
push
mov
adc
loope
mov
or
pop
mov
add
jmp
xor
sti
inc
push
into
or
cld
push
mov
fimuls
mov
mov
sbb
cmp
inc
sub
testb
daa
pop
mov
dec
out
adc
dec
cs
dec
lea
mov
jp
add
jge
xchg
push
inc
jmp
pop
inc
cs
shlb
sub
xor
cwtl
bound
dec
dec
dec
sub
mov
stos
pop
pushf
pop
xor
test
inc
fistpll
pop
je
call
push
push
into
adc
sbb
rolb
imul
imul
mov
push
inc
jne
push
sub
mov
adc
and
cmp
adc
sbb
inc
or
mov
loop
mov
pop
xor
test
and
sbb
aaa
add
cmp
pop
add
xchg
mov
push
lea
mov
imul
or
inc
mov
dec
leave
xor
inc
sbb
cmp
dec
imul
add
cmp
xor
loop
pop
push
dec
lea
negb
jb
pop
mov
fistl
adc
xchg
adc
sbb
imul
and
mov
loope
call
shrl
xchg
adc
push
dec
enter
nop
add
inc
enter
mov
mov
inc
cmp
ffreep
add
mov
mov
sub
shrl
inc
push
sarb
add
dec
movsl
adc
popf
lea
repz
mov
and
fisubs
mov
push
cmp
xchg
or
push
xlat
nop
sbb
sbb
inc
pop
ret
movsl
jnp
inc
std
inc
call
add
fs
mov
outsl
push
mov
xor
repnz
aas
sbb
movsl
or
inc
cmp
add
mov
pop
mov
xor
sbb
xchg
jl
mov
mov
push
and
push
jne
popa
or
add
or
mov
xchg
loop
es
adc
shlb
push
push
int3
fildl
jnp
xor
pop
dec
xorl
lahf
jne
pop
or
testl
js
push
dec
jl
xchg
sub
add
fdivrl
fcmovbe
mov
pop
in
data16
inc
enter
pop
enter
shlb
add
add
aam
sbb
mov
mov
sub
push
push
enter
dec
fisttpll
add
test
loope
dec
shll
cmp
push
je
out
cmpsl
xchg
push
arpl
mov
mov
xchg
push
test
call
clc
js
in
fistps
xchg
jbe
aaa
icebp
scas
sub
jne
repnz
jno
scas
loopne
jmp
adc
lods
mov
ret
out
add
je
mov
jb
sbb
mov
xor
cmpsb
push
mov
jo
sub
mov
jbe
xor
inc
adc
scas
and
mov
jge
push
sbb
insb
push
and
test
and
inc
les
push
cs
mov
daa
dec
loopne
mov
mov
add
push
inc
push
movsb
push
pop
xchg
lret
pusha
js
sbb
inc
and
and
mov
push
ds
pusha
ret
mov
call
add
outsl
and
lods
icebp
inc
mov
mov
test
pop
add
outsl
pop
out
mov
mov
fisubrl
flds
jge
pop
or
add
add
mov
pop
in
ss
xor
adc
cli
jo
xchg
dec
xchg
hlt
pop
xchg
icebp
jge
movb
inc
push
js
or
push
lds
fstps
dec
pop
push
sub
into
adc
arpl
mov
and
sbb
add
ret
dec
jge
jmp
inc
cmp
and
lods
jns
les
sbb
call
mov
adc
add
stos
add
cmp
push
mov
sbb
inc
inc
sub
pop
mov
pop
mov
sbbb
stc
jbe
inc
push
test
das
add
cwtl
bound
sbb
bound
sub
mov
aam
test
icebp
enter
outsl
push
out
add
jle
rcl
xlat
xor
scas
lea
sub
mov
push
push
xchg
jb
dec
cmp
mov
xchg
sbb
cmp
fcoml
mov
xlat
and
shl
add
or
xor
or
add
mov
rolb
cmp
lea
cmp
int
je
roll
cmp
mov
test
insb
shlb
adc
pop
cmp
sub
add
dec
movsb
arpl
jle
lods
and
enter
movsl
add
pusha
arpl
and
push
inc
xor
cmp
xchg
and
popf
lods
sub
pop
push
push
or
add
or
inc
out
testl
xor
cwtl
aas
adc
popf
orb
inc
loop
ret
dec
add
add
insb
and
clc
lea
or
mov
test
jl
xchg
rorb
or
add
je
ret
or
dec
push
ds
xchg
ds
and
sbb
in
pop
fmull
and
mov
sar
int
mov
jae
movsb
cmp
add
xchg
nop
add
jns,pn
sbb
ja
data16
push
sbb
rorb
or
in
clc
pop
sbb
pop
mov
push
out
pop
push
push
outsb
iret
repz
jns
xchg
fmulp
repz
fcmovb
xchg
push
adc
jge
clc
push
cmp
das
inc
pop
insl
inc
enter
jp,pn
and
mov
mov
cmp
inc
push
ljmp
mov
or
fisubrl
in
and
outsl
sub
push
fdivl
inc
fstpt
sbb
push
mov
jo
and
sub
nop
cmp
dec
push
or
or
lea
xor
pop
add
cmp
push
lods
test
fs
fsubp
cmp
ficomps
ret
push
loope
fsubl
pop
fmuls
rorb
push
mov
hlt
xchg
data16
pushf
dec
stos
jmp
mov
pop
inc
cmp
pop
loop
pop
jmp
add
lcall
into
loopne
adc
push
and
and
push
mov
add
cmp
lods
xor
sub
int3
nop
sbb
xor
shlb
loope
mov
bound
mov
mov
jbe
pop
adc
add
ss
sbb
cmp
adc
push
les
loop
addb
das
daa
push
xchg
and
or
push
sbb
xor
push
shlb
das
cmp
add
dec
mov
mov
xor
addr16
adc
pop
add
xchg
xor
movsb
pop
adc
push
dec
and
dec
sahf
out
and
and
fdivrs
gs
cmp
inc
sbb
adc
push
or
sbb
and
arpl
push
fwait
push
add
inc
fimuls
popf
dec
xchg
or
jns
and
shlb
adc
fbld
gs
inc
stc
sub
push
jo
cmp
cmp
dec
pop
or
add
bound
rcrb
adc
outsb
add
xor
inc
and
shrb
mov
mov
test
cmp
ret
ds
mov
sbb
add
sbb
shl
cmp
pushf
aaa
xchg
ret
pop
lahf
pop
mov
xchg
dec
or
and
out
lea
xchg
scas
push
int
rcrb
in
pop
or
rorl
mov
mov
cltd
mov
xor
cmc
dec
inc
mov
aas
insb
and
sub
icebp
xchg
insb
jb
and
ret
icebp
es
xor
fdivrs
loope
xor
or
inc
and
pop
dec
push
add
es
lahf
ss
loop
jecxz
jo
test
cmpsl
lea
dec
push
add
enter
cmp
incl
loopne
mov
inc
or
insb
loop
cltd
loope
flds
fld
fistpll
insl
loop
mov
or
stos
iret
out
push
andnps
das
xchg
pop
scas
jo
popf
or
std
mov
dec
cmp
dec
dec
stos
mov
fistpll
pop
and
xor
mov
mov
add
sub
je
push
inc
mov
xchg
pop
and
iret
addr16
out
xchg
lea
je
adc
xor
stc
les
ret
mov
pop
loope
pop
mov
jle
movl
lcall
sbb
pop
mov
add
pop
rolb
lcall
pusha
inc
push
pop
pop
jo
jle
mov
push
push
sbb
push
push
dec
scas
jecxz
test
dec
dec
daa
fwait
js
inc
add
mov
lea
je
movntps
pop
insb
rolb
lcall
push
sbb
xchg
cmc
aaa
push
xor
testb
pop
xor
xor
mov
mov
sbb
sbb
or
or
lcall
mov
add
xorb
add
fs
ljmp
jge
shlb
add
add
push
or
loope
and
fistpl
push
mov
xchg
add
add
jnp
pop
repnz
leave
ret
jl
inc
fs
test
pop
roll
jae
sbb
sbb
cmp
cmp
xor
mov
add
shll
xchg
mov
dec
inc
outsl
jmp
sub
cmc
bound
pop
push
rsqrtps
movaps
cmp
or
loope
xchg
mov
sub
in
jb
sbb
ljmp
mulb
add
repnz
es
fcompl
xor
inc
add
or
adc
add
imul
cmp
adc
pop
push
orb
sahf
add
sbb
ss
cmp
lock
or
call
fisubrs
and
mov
negl
repnz
sarb
andb
jmp
inc
ret
ret
jo
movb
aaa
jae
cmpb
xacquire
dec
mov
sbb
roll
push
dec
pop
repz
jmp
lret
or
lcall
fs
fdivrs
stos
in
sbb
inc
add
repz
mov
leave
push
int3
rcl
sub
cmp
mov
mov
test
fildll
pusha
or
adc
and
aam
push
push
shll
push
xchg
xchg
add
arpl
inc
and
in
inc
mov
pop
sub
adc
sti
push
push
sahf
outsl
push
add
xlat
and
pop
fsubl
xchg
ss
int3
inc
xor
add
imul
add
xchg
push
xchg
add
and
clc
sbb
neg
shl
mov
add
pushf
neg
pop
or
sbb
cwtl
lods
test
je
push
andb
out
xor
add
nop
add
aam
xor
add
ret
lea
add
mov
xchg
and
or
push
sbb
sar
aaa
bound
ret
into
cwtl
xor
and
dec
rorl
imul
inc
inc
cmp
and
or
test
and
shrl
push
add
mov
aas
lret
mov
in
jnp,pt
mov
jecxz
paddusw
les
sbb
jbe
popf
nop
push
mov
dec
scas
cmp
xchg
adcb
pop
mov
jns
fidivrl
push
add
pop
inc
cmp
and
ficoms
or
mov
lcall
xchg
jo
add
insb
sarb
push
push
adc
add
stc
pusha
shlb
insb
pop
jno
xchg
mov
push
add
outsb
or
cmp
test
dec
aad
sub
or
xor
xor
mov
pop
insl
push
sahf
mov
or
mov
xor
xchg
pop
mov
dec
mov
push
pop
outsb
adc
mov
mov
inc
sbb
adc
push
loope
or
loope
popf
push
adcb
push
pop
mov
or
sub
add
sbb
leave
icebp
ret
jge
and
sbb
adc
inc
mov
xchg
ljmp
xor
inc
inc
lea
cmc
mov
xchg
mov
aad
test
add
push
nop
imull
push
push
xor
cmp
ret
loopne
jns
xchg
dec
popa
cmp
enter
repnz
cs
dec
pop
mov
or
pop
fdivrl
push
xchg
xchg
fs
pop
inc
jmp
jne
jo
ret
jl
cmp
je
or
dec
cmp
popa
inc
xor
bound
pop
vshufpd
push
dec
sbb
addl
test
popa
add
hlt
mov
mov
movl
inc
mov
or
mov
mov
or
push
aad
or
mov
adc
dec
add
or
add
imul
ret
loopne
mov
test
inc
inc
push
push
enter
mov
dec
xor
pusha
movb
push
push
jecxz
out
or
push
mov
push
or
cmp
mov
inc
decl
push
inc
fsubrs
and
cmpsl
adc
and
arpl
pop
es
cwtl
pop
imull
test
sarb
mov
fs
mov
loope
push
and
push
or
mov
cmp
dec
add
or
aaa
push
sarl
adc
ja
dec
and
xchg
jno
sbb
bound
xor
push
xor
push
xor
push
or
xchg
jl
pop
ret
xchg
enter
or
mov
ja
jne,pn
fstl
mov
sti
fdivrl
stos
and
pushf
loopne
repz
and
push
push
cmp
sbb
lret
cmp
and
or
inc
cmp
ror
dec
mov
ds
jbe
add
add
push
push
shll
aam
pusha
cmp
adc
or
push
add
rorb
lock
xchg
or
roll
pop
pop
or
cmp
dec
sbb
dec
and
ret
hlt
mov
sarl
jp
lods
mov
adc
cli
or
lcall
in
inc
mov
testl
push
gs
add
ljmp
test
lock
or
int
add
or
pop
mov
mov
test
aam
pusha
mov
jl
adc
je
fs
mov
inc
mov
or
sbb
cmp
push
mov
lret
add
rolb
fdivr
cwtl
loope
sbb
pop
push
rolb
sahf
and
inc
jp
mov
add
add
enter
call
xor
xor
dec
imul
rorb
adc
dec
sbb
lods
pop
adc
addb
les
add
xchg
fldenv
or
cmp
lret
hlt
movsb
mov
aad
sub
add
sets
dec
and
std
pop
or
push
mov
sbb
cmc
rcll
mov
loopne
jmp
xor
mov
out
test
push
outsb
dec
lahf
divl
mov
fwait
imul
jns
rclb
int3
push
je
out
je
and
ret
pop
out
lret
sbb
sbb
cmp
cs
mul
lea
push
dec
or
add
dec
int
nop
clc
loopne
push
inc
movlps
cmp
inc
addr16
add
and
push
sbb
lods
or
mov
or
adc
out
jae
or
into
adc
pop
push
sbb
js
or
adc
cmc
sub
push
pop
push
push
mov
or
inc
xor
ret
js
jle
daa
test
mov
sbb
sub
pop
cmpsb
mov
adc
push
mov
es
jecxz
nop
or
ds
cmpb
movsl
dec
jl
dec
push
popa
dec
jle
pop
shlb
and
icebp
call
aas
dec
test
add
sbb
xor
dec
outsl
call
enter
inc
lods
adcl
push
popa
call
add
inc
ret
dec
push
dec
cmp
xchg
mov
add
add
add
or
iret
pop
rolb
ret
pop
push
ror
movsb
add
lret
mov
das
inc
jmp
mov
xchg
insl
aam
jbe
cli
or
sahf
lahf
ja
fisubrl
push
push
pusha
pop
cld
mov
push
pop
push
pusha
and
insb
inc
lea
mov
add
inc
hlt
std
add
loopne
jmp
popa
and
or
sti
adc
xchg
push
jle
and
pop
test
adc
pop
jp
sbb
ja
inc
das
dec
out
dec
lock
cmp
adc
inc
mov
push
add
dec
clc
xor
sbb
mov
push
imul
mov
pop
pop
ret
test
test
cmpsl
pop
out
lods
adc
ret
out
xor
adcb
and
adc
push
add
test
sbb
cmp
cld
lret
lret
cmp
lret
test
mov
imul
add
dec
loopne
jb
das
pop
aas
lds
sbb
xchg
jmp
iret
push
imul
pusha
movsb
jle
mov
pop
jmp
cmp
lea
adc
mov
test
js
imul
pusha
fldcw
mov
cmp
add
shll
inc
jp
pop
pop
mov
mov
push
test
inc
add
pop
mov
lods
jo
and
pop
cwtl
mov
push
inc
mov
add
nop
enter
cmc
arpl
das
xchg
pushf
stos
insb
and
mov
mov
shr
xchg
sub
inc
mov
pop
or
fisubrs
xor
inc
sub
mov
add
xchg
add
dec
das
inc
movsb
add
inc
add
stos
jmp
dec
push
shlb
fadds
and
adc
mov
push
sarb
pop
ret
inc
push
lea
push
lret
push
push
xor
ja
leave
push
data16
int
test
fcomps
dec
orl
push
or
pop
loop
sarb
add
rorl
pop
adc
xor
pushf
fisubl
shlb
push
loope
mov
mov
xchg
fcompl
ficoml
cmp
loope
call
scas
push
cmc
xor
push
push
fcmove
jo
int
push
mov
movsl
xchg
jne
cmp
jo
stos
push
sbb
inc
pop
test
cmp
jne
sbbl
fdivrs
in
push
nop
or
or
rcll
adc
loope
push
jmp
add
aas
je
loope
mov
jmp
sub
or
scas
cmpb
and
sbbl
cmp
mov
je
daa
sbb
cmp
pop
push
add
jnp
mov
xor
jno
jnp
push
lea
scas
scas
push
add
ret
inc
add
push
push
push
fistpll
adc
js
mov
mov
xor
rcrb
out
xor
stc
ud2
aam
or
and
dec
inc
imull
pushf
push
jns
mov
xor
add
and
lods
test
and
rorl
push
ret
sbb
loope
xor
data16
and
and
scas
dec
mov
lahf
ret
push
push
mov
daa
mov
test
popw
out
sub
jo
push
popw
arpl
adc
mov
mov
sbb
mov
adc
cli
pop
outsl
pop
and
add
test
or
ret
sub
dec
sbb
rol
mov
mov
cmp
add
add
ret
or
cwtl
add
je
inc
enter
mov
sub
mov
cmpl
sub
out
or
insl
inc
pop
push
push
sbb
pop
add
jno
dec
test
xchg
push
cmc
fldt
mov
rorb
xor
or
pop
inc
cld
adc
sbb
mov
dec
test
push
ret
add
dec
or
push
pop
call
add
rcl
movsb
push
jge
jle
pop
sub
adc
push
adc
enter
pop
into
sbb
mov
mov
xor
push
mov
cmp
pop
sti
dec
add
push
adc
cmp
sub
push
inc
insl
xchg
int3
or
repnz
clc
mov
dec
mov
insb
out
scas
cwtl
dec
adc
inc
jo
popa
adc
lods
nop
setg
loop
or
dec
bound
mov
fisttps
imul
sbb
pop
bsr
and
push
jb
icebp
dec
pop
es
sub
mov
pop
add
dec
and
sti
into
push
jo
jno
loop
push
mov
int
and
popa
imul
mov
orl
pusha
movsb
sbbl
subl
ss
inc
add
pop
and
outsl
repnz
add
mov
lret
push
adc
mov
outsl
or
inc
xor
dec
and
jg
sub
adc
sub
pop
push
test
loopne
sub
insb
add
cmp
xchg
add
cmp
add
xor
int
inc
sub
call
aam
aad
popa
aam
cld
ficomps
and
xor
and
mul
and
inc
or
out
or
lock
pop
in
push
faddl
cld
pop
inc
mov
lret
fisttps
call
leave
mov
dec
sbb
cmp
jne
cmp
push
popa
xchg
lods
push
or
mov
dec
arpl
outsb
shl
or
sbb
lea
mov
xor
decb
repnz
addb
dec
xchg
out
es
lret
pop
lods
imul
sbb
dec
add
insl
adcb
int3
cmp
push
cmp
aaa
fsubs
sub
dec
leave
hlt
sarl
imul
push
push
push
and
xlat
adc
mulb
inc
dec
push
pusha
mov
into
push
jecxz
push
push
nop
xchg
out
pop
mov
xchg
sbb
test
sar
and
xor
adc
jmp
sub
adc
push
lock
and
dec
push
jmp
add
dec
lock
and
pop
pop
inc
dec
adc
imul
das
mov
mov
je
xlat
mov
fists
stos
push
unpckhps
ja
dec
or
cld
xchg
das
lret
add
push
insb
je
adc
or
mov
in
push
jg
dec
loopne
out
jmp
or
js
inc
shlb
sbb
push
adc
xchg
push
push
popf
pop
mov
cwtl
js
push
iret
nop
rcrb
loop
push
sub
lods
push
inc
pop
outsl
inc
add
js
cwtl
fmul
and
push
jne
mov
lods
inc
push
popf
jo
jo
mov
test
sbb
test
sub
gs
pusha
push
pop
push
js
into
add
add
mov
cmp
push
push
std
xor
repz
cli
imul
or
push
scas
mov
cmp
icebp
inc
sbb
or
mov
pop
inc
jno
sbb
sbb
mov
jne
push
add
or
adcl
lea
push
push
xor
adc
adc
fdivl
or
pop
cli
adc
lea
jbe
pop
cmp
xchg
scas
popf
sarb
test
std
adc
fisubrl
adc
push
inc
jge
inc
inc
jp
add
es
push
cmp
inc
pop
lret
movsb
ret
push
xchg
test
testl
jnp
cmp
fsubrs
sub
xchg
xchg
jns
push
fs
xchg
xchg
or
push
or
ret
dec
or
dec
in
cmp
inc
push
loope
out
sub
or
inc
push
lea
push
mov
or
mov
add
xor
pop
sbb
mov
mov
es
or
cmp
into
rcr
rolb
pusha
ja
mov
test
xor
xor
je
dec
xor
push
mov
adc
mov
fstpt
pop
pop
xor
pop
jne
in
push
mov
jl
xchg
fldcw
mov
xor
stos
push
pop
aam
pop
lea
jae
mov
pop
sub
pop
push
fs
sub
or
pop
adc
roll
je
or
icebp
inc
add
arpl
xor
xor
inc
popa
fbstp
mov
shll
jne
movsl
movlps
test
es
sbb
xchg
nop
mov
orl
je
lret
mov
or
pop
push
push
sub
scas
and
roll
sbb
adc
leave
dec
adc
test
data16
lea
stc
add
daa
nop
inc
add
rolb
and
inc
cld
cmp
xchg
and
xchg
in
sub
pop
or
jle
sub
inc
push
test
and
and
inc
push
pop
loope
or
xor
out
jge
or
inc
sbb
add
cmpsl
rol
inc
lds
mov
or
sub
nop
add
cld
mov
xchg
and
jmp
lock
cs
lea
jle
fcmovb
shlb
push
sbb
or
push
mov
insl
sbb
loop
fisttps
call
mov
add
cmp
dec
xchg
and
ret
sub
or
pop
pusha
mov
mov
inc
cmp
nop
sub
popa
adc
mov
mov
mov
push
in
imul
mov
ret
loopne
vunpcklps
cmp
inc
js
test
sbb
pop
xlat
pop
or
ljmp
std
cs
fadds
and
in
mov
ds
fcoms
and
and
jo
sub
lods
adc
fnstenv
daa
mov
mov
mov
sbb
cmp
cmp
adcb
sub
popf
andl
add
mov
push
jnp
pop
dec
push
dec
les
es
sbb
mov
mov
adc
sub
rolb
enter
stc
rcrb
dec
scas
push
insb
sbb
inc
sub
inc
incb
xor
scas
pop
repnz
add
fimull
jle
mov
test
popa
les
push
sbb
fmuls
sbb
push
jmp
push
lock
inc
fs
or
cmp
push
test
faddl
inc
pop
xor
sbbl
pop
pusha
adc
sbb
mov
loop
jo
or
hlt
xchg
mov
sbb
subl
or
push
jo
pop
mov
out
mov
data16
add
xor
xchg
loopne
dec
arpl
jnp
cmp
push
jp
sbb
insb
xchg
mov
mov
pushf
xchg
pop
sbb
pop
xor
sbb
or
adc
bound
aas
mov
add
and
pop
cli
pusha
add
in
xor
aad
loop
sbb
xor
adc
daa
jp
lea
icebp
jbe
xchg
in
mov
rcrl
add
pushf
imull
test
adcl
mov
lret
pop
pop
push
sub
outsb
jo
adc
insb
dec
aam
push
sub
or
mov
insl
mov
adc
insb
push
outsl
xlat
fs
cmp
push
xchg
and
inc
jno
loope
mov
xor
arpl
jg
inc
adc
xchg
add
lea
dec
jmp
not
mov
push
jne
mov
fld
cmp
push
mov
inc
es
jge
rcrb
imul
push
inc
fdivl
fsubs
cmpsl
mov
push
push
shlb
movsb
add
xlat
out
addb
and
pop
jo
ss
rep
mov
popf
push
scas
inc
or
pusha
loopne
push
cmpb
or
mov
mov
insb
addb
pop
push
imull
adc
inc
hlt
or
mov
push
mov
push
lods
mov
pusha
add
jg
shl
sbb
addr16
or
insb
pop
test
jo
addr16
push
shrl
mov
pop
pop
rolb
push
rorb
pop
loope
adc
dec
in
loopne
mov
pusha
jo
mov
ret
lds
inc
loope
or
push
sub
or
push
mov
xor
or
pop
push
dec
test
sub
iret
fldl
or
push
sub
and
lahf
cmp
push
pop
pop
pushf
cmpsl
ss
and
je
pop
or
push
mov
jecxz
or
sbb
sub
jg
inc
ljmp
adc
adc
rclb
jmp
lods
jmp
inc
adcl
mov
pop
cmp
push
les
aas
jl
or
mov
pop
test
int3
mov
mov
push
loopne
in
shll
stos
jnp
es
add
push
daa
pop
push
sbb
sbb
rol
add
adc
push
lret
test
adc
mov
add
roll
sub
add
scas
lea
dec
dec
in
ds
inc
inc
inc
push
loope
sbb
adc
inc
mov
adc
sbb
icebp
or
push
mov
adc
lods
imull
adc
fs
mov
push
inc
push
or
in
mov
xchg
popa
loopne
movsl
adc
inc
mov
sbb
adc
rolb
push
push
in
lock
sub
xchg
pop
dec
cld
jne
in
xchg
push
in
imul
cmp
bound
push
push
jmp
lock
and
adc
pop
ret
stos
push
mov
push
sbb
xchg
aam
pop
add
pop
aas
jo
fucomip
lea
push
mov
sbb
pop
lock
jne
push
push
cmpsl
cmc
push
jle
lods
or
daa
mov
add
adc
adc
add
xor
pop
ret
call
mov
je
cmp
insb
xorb
inc
dec
je
mov
mov
addl
dec
dec
or
push
pop
mov
or
pop
les
test
cmpsb
adc
inc
cs
insb
mov
fdivrs
adc
push
or
mov
mov
in
cmpsb
xchg
ja
in
sbb
lock
mov
insb
faddl
dec
xchg
adc
idivl
push
sbb
mov
jns
xlat
fucomip
and
sbb
add
pop
adc
push
inc
cmc
scas
mov
sti
push
xchg
pusha
adc
and
and
mov
mov
xchg
and
push
pop
pop
or
jmp
mov
imul
and
cmp
cmp
inc
sub
mov
out
xor
pop
dec
lods
push
or
jmp
push
mov
and
xlat
test
shrb
fisubs
cmc
fistpl
jmp
push
jne
sub
test
out
mov
xchg
add
push
push
pusha
sub
xchg
rolb
add
and
lcall
pop
sti
add
lock
aad
dec
and
imul
sbb
or
pusha
aaa
push
xor
add
lock
sub
dec
add
cltd
push
cmp
sarb
sub
jmp
in
pop
aaa
jmp
shrb
lods
jnp
or
test
xchg
das
cmp
sahf
shlb
pop
and
hlt
ret
pop
je
into
clc
push
sbb
adc
cmpsb
jle
sbb
push
fisttpl
push
jp
lahf
push
cld
sbb
mov
adc
jno
add
sbb
iret
xchg
aaa
clc
and
mov
push
fistpl
int3
mov
dec
push
xor
pop
cs
mov
lods
push
dec
loope
add
bnd
push
and
ss
pop
mov
pop
cmp
mov
pusha
ffree
pop
add
lds
lea
es
push
cmp
push
push
mov
add
jg
outsl
pop
xor
aad
out
pop
mov
jp
cmp
rorl
aad
jecxz
jo
loopne
insb
inc
adc
inc
push
loopne
int
int3
std
mov
pop
mov
and
fiadds
setns
nop
orb
pop
das
fidivrs
adc
add
dec
test
cmpsb
pusha
adc
mov
push
or
push
or
jmp
sbb
addr16
cmp
adc
sbb
add
push
fcomps
int
fdivs
xor
adc
cwtl
sub
sarb
into
add
sub
pop
test
inc
popa
jbe
repz
and
xlat
ja
inc
sbb
jl
mov
and
dec
pop
push
pop
out
xor
rdmsr
push
inc
cmp
add
inc
mov
push
lcall
or
out
leave
inc
ljmp
jle
mov
xchg
ja
loopne
je
jle
push
sub
sub
sbb
dec
fnstenv
and
fimull
mov
mov
imul
xchg
jns
add
or
adc
pop
lds
pop
push
jo
es
stos
mov
in
je
js
mov
and
mov
sub
jl
mov
add
xchg
pop
leave
adc
in
and
and
inc
cld
movl
add
das
pop
ljmp
pop
push
mov
pusha
mov
dec
lahf
ret
imul
pop
inc
dec
and
aas
and
je
lock
mov
push
and
pop
jecxz
adc
sub
xor
in
clc
addl
add
adc
imul
sbb
jnp
xchg
stos
push
xor
pop
pop
mov
or
lret
enter
and
cmp
ja
lret
xorb
cmp
or
mov
mov
sbb
lahf
xor
sub
mov
fsubrl
lock
ljmp
addl
dec
push
inc
mov
notb
dec
sbb
pop
sub
ljmp
lret
mov
repnz
inc
adc
imul
pop
xor
cmp
mov
xlat
mov
mov
jl
xchg
cmp
inc
adc
add
and
inc
movsb
repz
mov
mov
movsb
es
imul
in
mov
adc
mov
xchg
inc
xchg
mov
mov
push
das
mov
or
and
push
push
inc
out
mov
adc
add
pusha
dec
rolb
push
jns
xor
shl
imul
jbe
sbb
cmc
test
sarb
dec
or
rorl
and
add
adc
cmp
in
mov
xchg
and
jne
addb
je
ljmp
add
jo
jo
xchg
in
call
push
sbbl
lock
push
lea
add
dec
sbb
insb
and
mov
jb
add
inc
xchg
add
fcomp
adc
jb
ret
add
add
cld
mov
mov
lret
jecxz
mov
jnp
popa
mov
add
data16
push
dec
inc
dec
pop
mov
add
rolb
inc
adc
mov
mov
mov
cld
iret
push
pop
mov
dec
je
dec
jne
dec
cltd
les
sbb
dec
xor
sub
js
stos
push
jmp
adcb
pop
pop
out
fnstenv
xchg
cwtl
inc
add
mov
call
mov
sbb
xor
adc
out
jl
add
lods
jg
faddl
mov
pusha
cmp
jg
or
jle
add
mov
or
cmpl
add
orl
mov
or
in
push
sbb
mov
js
movd
out
adc
stos
add
popl
xor
sbb
mov
daa
mov
ficomps
push
inc
fidivs
lods
out
cmpsl
test
jmp
jp
or
sbb
push
in
sbb
sub
in
sub
push
jp
popf
xor
outsb
xor
hlt
push
push
scas
into
push
push
xor
fsubs
inc
inc
in
xor
jp
push
movsl
das
and
inc
or
sbb
add
sub
sub
xor
inc
dec
mov
cmpsl
ret
rol
mov
movsb
pusha
sub
test
pop
cmp
pop
jl
xor
sub
lea
dec
movsl
cltd
pop
sbbb
out
inc
add
inc
mov
or
xchg
jecxz
adc
pop
pop
mov
mov
ljmp
pushf
xchg
or
cmp
push
pop
loope
out
sbb
push
jl
xlat
jg
lea
sahf
pusha
ret
xchg
mov
pop
adc
lea
loopne
xor
push
ret
es
movsb
std
jge
loopne
add
pop
stos
mov
add
mov
call
cmp
or
pop
scas
shrb
fs
push
jb
pushf
xchg
rorb
or
xchg
sarb
add
pusha
push
cmp
out
cmp
push
or
cmp
das
xchg
dec
cmp
cmp
sub
test
dec
pop
call
push
mov
mov
insl
je
lock
jno
gs
jmp
leave
rclb
inc
push
std
mov
push
pop
into
shl
add
mov
shl
aad
rcrb
pop
mov
nop
and
icebp
dec
pop
add
mov
andb
pop
jbe
xorb
inc
pop
ret
pop
insb
ret
mov
inc
lahf
push
add
cli
mov
dec
fiaddl
inc
test
pop
mov
inc
or
push
sbb
ud2
push
and
insl
pop
shlb
add
xor
fldt
imul
and
test
inc
cmp
add
pop
int3
and
lahf
or
mov
inc
adc
push
call
sub
mov
cmp
inc
aam
sbb
inc
stos
shlb
roll
push
mov
push
pop
sti
ss
rol
mov
insl
adc
add
inc
inc
imul
or
push
cmp
in
aaa
movsl
adc
lods
divb
fstp
jl
push
dec
adc
movsl
lods
cmp
adc
push
test
xor
sbb
cld
in
or
pop
hlt
or
or
xor
add
pop
lea
or
cmp
or
mov
int3
sbb
jp
mov
sbb
shrl
pop
mov
fbld
push
and
out
ja
lcall
adc
or
dec
imul
loopne
pop
andb
and
pop
and
add
push
push
lock
pop
imul
inc
shll
fdivrl
push
adc
pop
adc
movb
jmp
sahf
adcb
xchg
mov
adc
les
add
mov
sbb
int
jae
sahf
rclb
ljmp
push
push
lcall
sbbl
adc
dec
sub
xchg
mov
mov
iret
fildll
sbb
push
adc
push
outsl
jne
pop
cmp
hlt
out
jne
sbb
xor
push
shl
push
add
sbb
fisubl
mov
test
push
scas
or
cmpsl
adc
or
into
addr16
add
push
add
movaps
ret
push
int3
mov
das
push
push
mov
sbb
xor
test
ret
push
or
and
lock
mov
inc
xor
cmp
xchg
jno
or
push
mov
jns
sarb
dec
out
decb
call
fs
add
sbb
cli
push
in
cmc
cmp
push
cmp
jne
or
rolb
test
or
frstor
xchg
mov
rolb
pop
cmp
or
add
xchg
adc
xchg
int3
inc
or
std
imul
push
jmp
add
sti
mov
mov
xor
mov
mov
or
sbb
pop
jns
cmpsl
insl
cmp
std
cmp
in
cmp
add
pop
loopne
and
cmpsl
inc
dec
les
xchg
adcl
push
or
orb
mov
in
and
je
das
xor
bound
xor
jl
movsb
sbb
and
add
shrl
cli
pop
inc
push
popa
mov
out
mov
jns
jnp
lods
inc
xchg
push
aam
pushw
lock
lds
out
xor
jle
adc
add
aam
sbb
roll
add
shll
or
or
or
mov
add
xchg
add
pandn
inc
or
adc
push
sub
data16
in
pop
push
je
mov
pusha
lock
sub
mov
mov
or
mov
lock
jl
scas
mov
adc
sahf
sub
mov
sbb
xchg
add
and
les
inc
push
push
cmp
mov
ret
push
out
jmp
mov
xchg
add
mov
pop
loope
aaa
add
inc
or
cmp
ror
dec
stos
dec
add
push
sbb
cmp
pavgb
pop
cmp
fcomip
pusha
mov
nop
add
fstpl
fildl
add
inc
sbb
stos
sbb
push
addl
sub
orl
push
pop
and
pop
pusha
jno
xchg
push
and
nop
jns
inc
jo
push
or
pop
out
stos
or
mov
sbb
nop
jne
mov
add
pop
add
dec
and
adc
or
lods
adc
sbb
mov
dec
xchg
push
push
fnstsw
jmp
loopne
sub
scas
dec
jne
scas
stos
add
test
push
dec
add
push
and
dec
mov
push
cli
cmp
sysenter
mov
add
pop
and
ret
mov
loop
shlb
pop
negl
push
mov
xor
ss
bound
cmp
mov
shlb
inc
add
or
cmpsb
push
mov
incl
data16
jge
sub
repnz
xchg
std
jecxz
or
dec
mov
inc
cmp
in
dec
ds
call
jno
lret
dec
dec
sub
push
dec
inc
ja
and
cmp
shrb
std
sub
inc
lods
lret
cmp
es
jecxz
mov
js
test
mov
jno
add
roll
sbb
das
subb
rcrb
insl
push
add
inc
jp
push
cmp
je
inc
inc
lretw
jb
jl
xorl
adc
and
mov
add
push
lods
inc
sbb
add
xor
sbb
lea
pop
ror
mov
cltd
ret
xchg
add
outsb
xchg
adc
jns
nop
or
pop
pop
nop
inc
dec
and
adc
fimull
imul
add
test
ds
adc
sbb
pop
mov
mov
jecxz
cmp
pop
movsb
adc
js
dec
scas
xor
sbb
sbb
das
mov
and
sub
sbb
inc
lret
add
ret
add
arpl
jmp
mov
subl
push
xchg
lock
rorb
pop
repnz
adc
ss
ficomps
push
adc
or
daa
mov
sub
fdivr
sti
add
xchg
das
lods
das
cmp
add
jne
aam
les
or
leave
xor
push
lods
or
lods
inc
fadds
mov
inc
jne
and
push
pop
pop
mov
mov
cmp
sub
orb
pop
jmp
flds
inc
cmp
sbb
in
rolb
sbb
dec
rcll
inc
dec
inc
lock
mov
push
pop
fcoms
jbe,pn
mov
inc
les
push
adc
sub
lods
mov
jle
mov
push
lea
clc
pop
jl
cmp
mov
inc
add
imul
popa
ljmp
rorl
out
fisubl
pop
add
xor
je
hlt
adc
subl
push
and
pop
pop
lods
jle
nop
sbb
loope
arpl
xchg
cmp
add
aas
jg
jl
out
lock
test
mov
jbe
adc
loope
adc
jmp
add
cli
or
sar
clc
dec
lock
loopne
test
push
and
adc
shr
xor
pop
push
xchg
adc
scas
sbbb
adc
push
mov
mov
in
lock
mov
pop
dec
push
std
jg
add
or
push
push
jne
or
cmp
out
data16
fimull
ds
cmp
dec
inc
mov
inc
nop
in
dec
mov
cmp
xor
add
ficompl
les
lods
pop
leave
lock
ret
inc
sarl
std
popa
jmp
xsaves
xchg
or
data16
jmp
aaa
push
push
rorb
pusha
cwtl
movsb
sti
push
mov
jne
inc
cmp
addb
je
inc
ret
mov
push
iret
rclb
sbb
mov
js
lret
adc
jg
sbb
add
jmp
inc
mov
nop
rorb
sbbb
inc
jge
cmp
subb
shll
dec
jl
jg
jns
add
or
jmp
push
mov
inc
dec
jne
mov
hlt
outsb
cmp
jo
sbb
shll
push
jmp
or
adc
adc
popa
jb
pop
push
testb
inc
scas
push
mov
fisttpl
and
lcall
push
cmp
pop
xchg
xchg
or
add
xor
push
mov
push
sub
mov
add
add
rolb
inc
add
pop
nop
aad
dec
inc
notl
or
sbb
push
jl
sbb
das
jmp
lahf
stos
hlt
add
push
arpl
sbb
sub
cmp
ret
movsb
sub
inc
daa
mov
mov
push
sbb
fnstcw
adc
or
dec
adc
push
push
adc
push
jns
popf
mov
cwtl
mov
mov
push
xor
lahf
lock
ret
lahf
divps
cmp
and
push
imul
lods
jne
repz
push
xchg
loopne
ja
push
mov
inc
xchg
sub
cmp
push
or
adc
in
lret
adc
pop
sbb
pop
mov
and
pop
sub
xorb
mov
cmp
add
clc
call
pop
int3
push
lods
testb
enter
mov
js
inc
pop
push
js
pop
popa
jl
loopne
lahf
inc
sbb
insl
pusha
dec
add
sbb
mov
aas
pop
adc
add
sub
xor
pushf
inc
sub
mov
test
jecxz
mov
loopne
jmp
adc
push
xchg
mov
add
outsl
je
add
stc
mov
orb
add
and
lret
fisttpl
mov
jge
shld
js
jae
call
loop
rcr
add
adc
bound
mov
sar
imull
sbb
cmpb
lock
icebp
bndldx
or
push
push
xchg
insb
iret
dec
and
out
shlb
jae
add
ret
cmpsb
ds
inc
je
aam
sbb
dec
or
outsb
jb
rcrb
sbb
ja
jne
add
xchg
xor
insb
add
inc
mov
adc
xor
outsb
inc
cmp
iret
insb
or
mov
pop
leave
or
adc
pop
pop
cltd
sbb
cli
push
or
adc
out
sbb
push
and
adc
pcmpgtw
jns
lea
dec
lea
push
add
and
lcall
mov
mov
loopne
push
mov
and
pop
sbb
jns
and
mov
insb
enter
subl
repz
sarl
jp
outsl
add
imul
push
xchg
jbe
xor
imul
imul
imul
lods
mov
fdivrl
mov
ljmp
sbb
jne
cmp
jb
clc
rcll
adc
aas
shl
movsb
in
and
jbe
jo
sbb
sbb
mov
sub
mov
add
or
sti
add
add
fsubs
push
pop
stos
mov
push
mov
jb
or
es
and
scas
and
cmp
push
fsubp
mov
inc
inc
fldcw
push
adc
stos
pop
test
inc
rcrb
adcb
adc
rorb
add
movsb
repnz
addr16
dec
inc
and
xor
push
adc
push
fildl
adc
inc
inc
cltd
cli
push
push
xchg
add
adc
jmp
repz
popa
inc
imul
jne
dec
xchg
mov
rorb
jbe
inc
sub
hlt
enter
add
jmp
jnp
enter
inc
aam
xchg
and
lcall
mov
inc
cmp
and
into
push
inc
loopne
in
insb
push
dec
dec
ror
adc
xchg
das
and
sub
jbe
dec
in
dec
xchg
xchg
out
jo
mov
loope
push
add
mov
out
dec
loope
repz
pusha
lea
insb
and
xchg
in
inc
and
enter
inc
or
push
lods
bound
sbb
sub
lds
sbb
push
cmp
cmp
ja
inc
push
les
or
pop
lds
xor
movsb
sbb
mov
popa
lock
jbe
push
sub
jle
lret
scas
jbe
push
mov
dec
push
and
adc
out
inc
cmp
jbe
mov
push
or
jecxz
nop
push
rcrb
sbb
dec
push
push
and
cli
mov
xchg
or
fld
jae
and
movsb
and
mov
add
sbb
sti
or
clc
sub
outsb
inc
cwtl
add
adc
jle
jb
xchg
icebp
and
jmp
mov
nop
pop
icebp
adcl
loopne
aaa
inc
lea
inc
popa
fs
imul
and
xchg
add
jmp
jns
mov
loope
ds
xor
add
and
ret
sub
xchg
adc
popa
cmp
push
mov
into
cld
and
xor
adc
push
xor
push
push
lea
rol
xor
adc
pusha
mov
loop
add
cmp
lcall
sub
outsb
dec
push
mov
sub
pop
pop
dec
push
lahf
std
jae
push
mov
lahf
fcmovnu
orl
call
sub
movsb
push
std
xchg
add
nop
pop
fistpl
dec
in
lcall
pop
xor
mov
add
jmp
push
adc
lds
inc
push
sub
iretw
add
int3
leave
xchg
lods
adc
mov
in
push
or
cmpl
sbb
inc
adc
in
inc
push
je
cmp
enter
sub
mov
pop
push
cmp
sub
jne
sub
adc
inc
pop
inc
push
push
or
and
cmp
ret
movsb
mov
subl
dec
sbb
lds
cmp
loopne
push
jne
outsl
xor
adc
aas
xor
pop
lcall
cmp
jns
decb
loopne
fdivs
dec
dec
add
cmpsb
add
je
pusha
ret
or
dec
rorb
ds
loope
faddl
push
insb
pop
pop
cmp
sub
dec
outsb
js
jle
scas
xchg
cmp
push
sub
or
cmp
outsl
aas
sbb
fidivrl
and
xorl
lret
push
xor
mov
adc
mov
ja
push
push
icebp
add
or
mov
or
jo
int3
inc
je
scas
movsb
jb
cmp
test
add
or
cltd
add
leave
xor
sub
dec
push
add
add
shrl
push
jo
or
jl
nop
loope
xor
std
jle
mov
bound
clc
or
je
add
pop
cld
mov
fcom
jecxz
fistpll
dec
sahf
xor
call
add
shl
inc
pop
add
pop
stos
add
jl
mov
fiadds
push
sbb
out
lods
sub
dec
dec
add
cmp
xor
push
in
mov
scas
cmpl
sbb
or
add
push
mov
sbb
pop
sbb
sub
outsb
js
sbb
stos
adc
je
rcll
vpunpcklwd
xchg
dec
js
mov
repnz
fwait
mov
ret
push
adc
xor
stos
add
jmp
inc
xchg
jbe
mov
int
add
imul
and
andl
add
adc
mov
inc
mov
or
inc
mov
jno
mov
xor
xor
jg
cmp
gs
pusha
jne
and
inc
xchg
fsubrl
mov
xor
cs
cmp
cmp
inc
xor
loop
mov
movl
ret
and
in
push
pop
sub
jmp
shlb
ds
mov
mov
or
or
fs
popf
ds
test
jnp
add
push
pop
loop
sbb
lock
inc
jne
pop
fdivrs
pusha
jmp
insb
and
je
lds
sub
imul
inc
dec
cmp
add
je
pusha
pop
adc
ja
jmp
dec
sbb
sti
mov
pop
enter
ljmp
loopne
aaa
sahf
mov
aaa
push
sbb
push
inc
es
test
sub
sarl
clc
cmp
xchg
or
mov
mull
subb
dec
adc
es
push
mov
adc
imul
js
jmp
fdivl
mov
jp
pop
inc
sbb
out
mov
fisubs
lods
js
in
push
jo
push
jecxz
insb
sbb
fst
mov
dec
iret
pop
mulb
je
orl
jl
pop
rcrl
int3
mov
add
mov
enter
and
rorb
clc
jnp
mov
dec
and
out
add
and
push
xor
dec
aas
push
and
mov
ret
push
dec
or
xchg
incl
sub
mov
stos
mov
inc
daa
sti
or
cmc
dec
or
inc
ret
pusha
sbb
sbb
pop
push
add
cs
add
jns
sub
jg
pusha
and
push
jbe
js
xchg
and
fdivrl
sbb
mov
adc
add
inc
roll
and
movsb
lds
mov
mov
notl
fs
and
dec
inc
imul
push
sbb
adc
mov
scas
shll
or
xor
addb
inc
loop
icebp
mov
daa
rclb
jge
mov
aaa
mov
mov
loop
push
rclb
popa
and
push
lods
inc
icebp
mov
lods
and
dec
dec
lret
push
mov
xchg
call
push
add
jp
jg
ret
xorl
or
mov
mov
enter
jl
pop
sub
imul
test
jg
inc
les
xor
or
rcrl
pop
addl
js
cli
inc
pop
sbbl
jle
cmp
mov
sub
mov
pop
sub
pop
adc
rep
jne
dec
mov
mov
rcll
clc
inc
adc
or
add
sub
mov
pop
push
ret
pop
push
pop
sbb
or
inc
bound
in
imul
push
or
and
test
pop
sub
xchg
ret
or
mov
popa
jge
sbb
add
jle
sbb
xchg
add
in
mov
sbb
cmpsb
into
xchg
jb
and
mov
and
ret
sbb
clc
push
fcom
adc
rorl
push
add
pusha
test
mov
xor
xor
sarb
sbb
push
lods
pusha
fucomp
xchg
jb
xor
movb
adc
shrl
in
cmp
dec
je
cmp
push
cmpsb
push
mov
or
cmp
and
clc
scas
and
cmp
or
je
mov
mov
lcall
mov
adc
sbb
loop
lock
scas
mov
xor
sub
je
sbbl
mov
inc
inc
xchg
mov
outsb
sbb
shlb
and
imul
cwtl
add
stc
mov
lcall
mov
dec
cli
lock
aas
and
or
xchg
fstpt
add
inc
sti
into
pop
mov
xchg
mov
scas
sidtl
push
pop
inc
lods
push
int
dec
and
adc
popa
xchg
xor
inc
testb
and
fimull
and
pop
cmp
test
lea
test
addl
mov
pop
jmp
sub
sbb
jmp
dec
das
add
popf
mov
lret
mov
mov
mov
inc
push
add
in
push
clc
lea
mov
xchg
ds
popa
imul
hlt
sub
push
sub
pop
nop
sub
sub
dec
jne
pop
mov
xor
aad
and
jno
cmp
outsl
dec
pop
or
mov
test
in
movsl
mov
and
jmp
and
mov
mov
lock
mov
in
test
shll
and
or
sahf
mov
push
outsb
ss
pop
pop
push
decl
loope
mov
xor
pop
sarb
add
cmp
pop
jb
jb
inc
mov
idivl
or
sub
dec
addb
in
push
or
cltd
add
inc
dec
pop
dec
push
xor
push
dec
sbb
push
ret
push
dec
je
dec
addl
xchg
repz
shll
push
xchg
xchg
fs
adc
inc
inc
adc
xchg
cmp
loopne
sbb
adc
dec
rorb
xorb
sarl
sub
sbbl
and
insb
orl
mov
je
or
pop
mov
jmp
popa
or
jb
xchg
jecxz
lods
mov
pop
dec
dec
mov
xor
mov
fdiv
inc
outsb
mov
outsb
fcmovb
js
adc
mov
xor
mov
lock
sbb
pusha
inc
and
and
sub
dec
push
push
mov
loop
push
out
rcrl
push
and
pop
mov
sub
sbb
xchg
pop
nop
in
movsl
call
dec
inc
xchg
inc
sub
sub
sub
lea
clc
inc
mov
mov
push
or
sbb
mov
push
jo
ja
and
sub
sub
mov
shrl
sub
jbe
sbb
xor
inc
xor
cmp
add
pop
loope
mov
clc
or
dec
lds
leave
xor
xor
test
cwtl
inc
into
sub
mov
pop
test
cmp
or
loope
test
ucomiss
setle
jno
out
sbb
or
adc
out
push
push
add
xchg
clc
mov
mov
repnz
icebp
add
sub
lea
jmp
sbb
in
insl
ret
or
push
pop
nop
cmp
test
adc
push
test
loopne
mov
jno
xor
test
arpl
das
push
call
xchg
mov
push
adc
sahf
adc
lods
mov
lahf
add
adc
push
loope
mov
in
lcall
outsl
jbe
or
or
sbb
jo
call
or
dec
mov
mov
fs
pop
jle
je
pusha
mov
movsb
les
and
mov
iret
add
and
or
ret
inc
daa
sbb
xchg
cli
add
popl
mov
test
lahf
dec
dec
push
add
jb
jo
fcompl
adc
dec
or
or
and
lods
dec
add
xchg
enter
inc
cmc
inc
add
orb
arpl
jg
pusha
leave
xor
mov
rorl
add
dec
jecxz
ja
sub
fcoms
or
call
sbb
add
rorb
xchg
mov
out
dec
insl
and
je
push
cmp
enter
sub
mov
mov
addb
bound
mov
inc
mov
addl
sub
dec
sarb
sbb
pushf
cmp
jg
mov
adc
lea
add
jmp
adc
ja
dec
and
test
xchg
xchg
xchg
add
cmp
push
in
add
ret
stos
cmp
insl
aas
sbb
jecxz
call
cmp
movb
mov
das
rolb
wrmsr
pop
or
dec
cmp
add
popa
int3
test
mov
mov
inc
and
fidivl
push
xor
add
cmpl
inc
and
or
or
add
add
push
mov
push
enter
clc
xlat
xchg
adc
jl
cmp
pop
sbb
shl
or
push
sub
jmp
jge
jmp
ds
and
dec
push
push
pop
push
cmp
decl
push
add
nop
xchg
mov
sar
xor
cmp
dec
sbb
pop
pop
jne
xor
dec
mov
adcb
aam
cmpsb
mov
add
nop
sub
push
inc
test
bnd
sbb
pop
adc
sub
out
or
xchg
xchg
loop
pop
addr16
repnz
mov
inc
mov
mov
cmp
lods
pop
mov
inc
inc
mov
ds
dec
iret
sub
sub
pop
sti
adc
ret
lods
sbb
sbb
mov
cmp
pop
mov
mov
add
add
cmp
adc
mov
mov
fwait
and
pop
outsb
cmp
mov
movsb
add
cmp
pop
add
add
aam
mov
fisttps
cmp
fwait
lock
mov
and
sbb
inc
pushf
xchg
xor
mov
mov
sbb
ds
arpl
sbb
fs
sub
insb
gs
push
jge
mov
xor
scas
mov
and
adc
pop
mov
lret
scas
xor
cmp
pop
pop
mov
push
add
data16
cmpb
nop
ret
ret
inc
shlb
jmp
cltd
or
jbe
movb
incb
out
cmp
sbb
mov
push
mov
sbb
mov
adc
and
cmp
bound
mov
add
cmp
xchg
add
loope
and
jne
jl
inc
mov
sahf
pop
dec
pop
arpl
movsl
sub
out
xor
stc
clc
iret
inc
dec
xchg
push
jp
xchg
out
dec
dec
daa
mov
xor
inc
mov
pop
mov
stos
cltd
movsl
std
jnp
adcl
jne
and
ja
or
dec
clc
add
enter
inc
cmp
mov
add
movsb
sbb
js
add
jo
dec
sub
int3
sub
imul
fs
jnp
or
mov
popf
push
inc
cmp
xchg
or
lock
add
rclb
mov
mov
inc
sub
sbb
lods
or
or
xor
xor
imul
inc
les
mov
lods
jbe
rorb
jae
addl
and
mov
lds
jb
loopne
adc
ret
inc
adc
or
mov
mov
or
repz
sbb
lods
and
sub
lea
call
add
and
cmc
push
xor
lret
xor
test
jno
les
mov
imul
test
pop
xchg
mov
and
add
cmp
sub
loope
jo
cwtl
adc
fdivl
daa
xor
add
inc
push
imul
or
lcall
inc
sbb
and
adc
test
add
bound
and
lcall
pusha
push
inc
js
add
test
in
pop
inc
xchg
mov
sub
or
sub
or
adc
jns
movsl
js
movsb
nop
inc
or
xor
fnstenv
lcall
mov
add
cmp
loope
inc
mov
or
sbb
dec
dec
jo
je
iret
xor
cmp
dec
adc
and
bound
std
pop
call
call
mov
lahf
push
xchg
or
andb
xor
ja
ffree
divl
test
mov
jne
je
dec
jae
pusha
ret
or
add
push
push
mov
or
jo
call
inc
ss
mov
inc
stos
loopne
imul
lock
rorl
add
jmp
lds
ret
jp
lcall
int3
dec
ret
dec
mov
push
dec
loop
in
test
mov
add
add
cs
es
xor
adc
dec
or
call
jge
add
inc
jo
xor
fs
sbb
gs
and
add
adc
adc
xchg
out
jl
je
mov
mov
shl
push
fldenv
mov
add
ret
lods
add
in
mov
add
xor
sbb
jo
outsb
arpl
int
xchg
mov
jbe
lret
movsb
mov
or
lock
dec
push
sub
lock
jo
movsb
xchg
push
cli
sub
test
adc
add
dec
gs
loopne
aaa
pop
dec
inc
push
mov
inc
scas
leave
cmp
push
std
test
adc
push
int3
lods
adcl
sbb
mov
imul
mov
or
sbb
dec
leave
adc
scas
sahf
lcall
pop
push
insb
ljmpw
sbb
mov
js
and
ret
in
idiv
add
jbe
das
dec
shl
jl
dec
rcrb
inc
jmp
sub
add
adc
cmp
xchg
cmp
lret
lock
or
flds
mov
jl
test
dec
pop
sub
dec
or
mov
add
je
add
jnp
push
nop
sbbb
mov
shlb
mov
adc
stos
imul
ret
sub
jle
pop
add
orb
mov
fidivrs
push
jns
adc
pushf
outsb
stc
xor
sarl
mov
loopne
add
ror
xor
cmp
andb
sub
aam
call
dec
lods
ret
push
iret
out
inc
sub
add
push
lahf
adc
xchg
ljmp
xchg
enter
rcll
cli
xchg
out
fs
pop
test
js,pt
addb
push
sub
or
inc
add
int
dec
clc
pop
add
fmull
sahf
adc
jae
les
xor
sbb
out
adc
mov
out
imul
xchg
mov
js
push
xor
rorb
inc
sahf
ss
das
xor
ret
nop
fistps
test
negl
pop
xor
test
shrb
sbb
adc
mov
jl
lahf
rolb
nop
push
ljmp
xor
mov
cmpsb
movsb
sub
cmp
pop
cmpb
add
insl
incl
cli
adc
movb
scas
sahf
xor
bnd
or
mov
test
jo
add
lret
inc
cmp
je
mov
bsr
cmp
loope
pop
jne
xor
imul
add
cmpb
xchg
mov
mov
popa
lds
into
sbb
push
xor
mov
add
test
clc
int3
movl
add
imul
inc
cs
aad
mov
sbbl
xchg
hlt
jmp
adc
push
popa
xchg
sbb
shl
pop
and
add
das
rcrb
popf
repz
and
or
inc
dec
into
sahf
repnz
rep
or
adc
adc
out
mov
lock
inc
cmp
mov
mov
cmovno
adc
vcmpss
lods
cmp
notl
aam
sbb
sbb
lea
test
adc
out
mov
push
sub
mov
rcrl
bound
je
pop
addl
sti
sbb
ficoms
sbb
rorb
dec
fists
mov
das
push
mov
dec
sbb
sarl
pop
or
dec
mov
sbb
shlb
inc
sub
add
je
inc
lods
xchg
or
in
sub
or
jmp
roll
push
sub
ret
cmp
push
fmul
dec
mov
adc
enter
mov
shl
outsl
aaa
nop
rcrb
inc
dec
and
mov
or
shl
mov
inc
or
dec
push
fwait
mov
imul
je
mov
ljmp
mov
or
inc
dec
leave
and
cmp
jg
cltd
sbb
cmp
lods
addb
pop
or
rorb
mov
xchg
push
add
xchg
std
jb
jg
mov
inc
xor
mov
jg
adc
orb
sub
push
ret
xor
pop
push
pcmpeqw
fldt
push
in
adc
test
add
jge
jg
mov
dec
aas
jne
xchg
and
xchg
pusha
push
adc
lods
adc
sahf
xor
sahf
gs
xchg
sahf
mov
lea
lods
mov
or
dec
and
adc
test
adc
sti
sahf
les
pop
lea
loope
out
xchg
outsb
sbb
adc
adc
sub
arpl
and
jno
inc
dec
movsl
lods
mov
subl
and
repnz
js
or
pusha
sarb
sbb
lcall
int
call
jne
jb
fs
pushf
test
pusha
add
inc
and
pop
sti
ja
push
xchg
xor
xor
sbb
popf
outsb
sbb
jp
mov
dec
mov
rcrb
sub
push
or
cmpb
add
arpl
aaa
movsl
xor
xor
or
mov
mov
nop
loop
fs
jge
nop
int3
icebp
jno
sahf
lret
fwait
cli
popa
dec
jno
sti
lods
pop
lret
and
xor
je
add
xchg
in
jge
lods
sub
test
cmp
cmp
inc
pop
or
mov
and
shr
cli
mov
and
sbbb
mov
mov
icebp
jmp
or
mov
mov
aaa
mov
int3
adc
fiadds
inc
mov
pusha
add
mov
in
mov
cmpb
clc
mov
xor
sar
mov
mov
cmp
pop
xor
or
sbb
bnd
mov
inc
xor
sub
pop
mov
imul
sub
xor
loopne
inc
fxch
pop
es
in
xchg
sbb
add
sar
clc
lahf
nop
and
add
pop
nop
sbb
daa
mov
pusha
mov
mov
mov
xor
jmp
stc
andps
prefetchnta
clc
pop
or
nop
or
mov
push
and
nop
pop
xor
pop
cmp
or
cmpw
sbb
arpl
add
inc
inc
daa
popa
sbb
xchg
jo
push
pop
bnd
orb
scas
dec
pushf
stos
adc
pop
leave
mov
push
sbb
repz
push
inc
xor
pop
cmc
aad
sbb
mov
add
fisubl
cmp
clc
and
mov
xchg
fildl
jbe
cmp
pop
test
rorb
pop
ss
je
loopne
arpl
call
add
call
shlb
movsb
add
insl
in
xchg
add
in
faddp
pop
add
ljmp
add
rorb
adc
bound
and
stos
aam
push
or
scas
mov
jo
adc
or
pop
xchg
inc
nop
scas
or
pop
mov
je
add
push
sti
mov
xchg
ret
loop
fildl
outsl
icebp
adc
je
cmp
lea
add
adc
inc
jl
insl
lock
lret
add
test
mov
sub
xor
pop
add
sbb
inc
pop
mov
out
mov
shrb
add
mov
add
mov
xlat
aas
add
decb
outsb
outsb
loop
fdivrs
lea
mov
push
sti
pusha
aad
adc
fs
cmc
inc
mov
insl
out
sbb
leave
or
addr16
addb
fstl
xor
idivb
mov
adc
and
fcomip
inc
nop
pop
adc
mov
fcompl
mov
cwtl
xor
or
or
mov
sbbb
xchg
pop
lcall
mov
je
in
outsl
test
inc
jne
pop
mov
hlt
ret
inc
push
cmp
mov
stos
dec
sbb
inc
roll
sbb
cmp
sub
push
xchg
sub
jno
mov
fildll
test
xor
mov
nop
sub
mov
out
frstor
mov
jb
push
jge
js
aam
inc
out
pop
sbb
loopne
test
or
push
xchg
mov
js
mov
dec
fmull
stos
lock
pop
dec
adc
pop
pop
pop
cmp
pop
loope
je
xchg
sbb
insl
js
sub
adc
lea
dec
sub
jo
in
push
inc
test
leave
push
pop
shll
iret
test
negb
arpl
push
notl
dec
dec
in
ret
decl
inc
inc
sahf
sub
mov
stos
ret
pop
sub
sub
inc
shl
push
bound
mov
adc
rolb
xchg
roll
or
adc
clc
lods
push
rcr
cld
lea
mov
push
jno
mov
sbb
mov
inc
in
mov
push
inc
ss
xor
xchg
lret
sbb
lea
lcall
xor
sbb
fadd
sub
mov
adc
add
or
lock
jbe
dec
movsb
lock
cmp
rcll
inc
inc
aaa
shrb
push
cmp
cwtl
xlat
sbb
imul
and
cld
pop
inc
or
push
jg
push
imul
dec
and
mov
xchg
repnz
subl
jae
into
jae
mov
mov
call
sarl
in
sub
andb
jne
adc
pop
addb
ss
rorb
enter
fdivr
push
add
xor
cmp
loop
jb
jp
jmp
adc
add
push
xor
adc
xor
push
xchg
sub
dec
and
add
dec
or
ret
cmp
cmp
mov
ret
xchg
adc
push
xchg
xchg
loop
push
dec
inc
mov
and
imul
add
out
mov
fbld
scas
nop
jecxz
xor
shll
add
xchg
loopne
adc
sub
rcll
stc
adcl
das
dec
pusha
leave
adc
inc
add
push
sub
lock
lcall
inc
mov
jge
mov
add
fstl
and
mov
sub
or
dec
mov
or
inc
pop
dec
rclb
fisubl
scas
sarl
adc
add
ret
pop
inc
sbb
lcall
sub
xor
or
mov
inc
daa
lods
pop
sbb
mov
adc
sub
or
sub
jns
mov
dec
pop
mov
push
or
push
or
leave
cmpl
push
pop
out
pop
int3
mov
fldl
stc
popl
mov
test
fildl
mov
popf
xor
test
cmp
sbb
rol
out
pop
ds
cmp
xchg
test
xor
mov
sti
shlb
push
jge
push
push
lea
ret
sar
lds
fs
and
xchg
xchg
push
aad
cmp
mov
lret
inc
adc
aaa
xor
in
and
loope
in
in
sub
add
xchg
push
popa
mov
adc
push
pop
cmp
mov
dec
lcall
xchg
imul
xor
inc
rcr
test
xor
push
xlat
cs
or
lods
cmp
mov
je
sub
and
test
add
sub
xorl
test
jne
insb
pop
lods
xchg
xchg
popa
add
adc
pop
aas
ljmp
test
inc
add
mov
out
xor
sub
lret
or
sbb
mov
jb
incb
rcrl
inc
mov
incl
icebp
jge
cmp
loope
pop
sbb
sbb
sbb
shl
mov
cmpb
mov
jnp
loopne
or
fsubrl
mov
pop
push
movsb
lock
mov
mov
inc
or
dec
or
ret
insb
ljmp
adcl
mov
ret
decl
cs
push
nop
and
push
pushl
leave
or
sub
pushfw
incb
call
or
or
mov
aam
mov
hlt
shrb
xchg
dec
inc
mov
mov
ret
mov
mov
mov
push
jo
adc
mov
and
pop
and
pop
dec
cmpsl
sbbb
push
push
push
test
scas
lock
pushf
push
xchg
inc
clc
or
scas
xor
cmp
fs
mov
imul
and
pop
xor
ret
incl
push
and
pop
pop
pop
xchg
cmp
lret
loop
mov
mov
push
not
push
les
pop
push
fwait
xor
pop
xor
cwtl
out
into
push
or
mov
in
adc
jae
add
mov
dec
dec
arpl
cli
inc
dec
push
push
sti
xor
add
dec
into
adc
jmp
loope
mov
shrl
dec
xchg
lock
les
movsl
daa
add
pop
push
fdivrs
loopne
and
es
add
mov
mov
into
mov
hlt
sbb
and
xchg
xchg
hlt
es
mov
inc
mov
and
addr16
mov
mov
dec
adc
out
cmp
clc
fmull
fstps
jl
dec
or
sub
and
sbb
lahf
ljmp
or
mov
push
dec
xchg
sbb
mov
call
sar
pop
cld
cmp
xor
mov
pop
sub
cld
dec
jne
movsl
adc
andb
pop
int
ds
push
or
imul
xchg
sbb
push
sbb
aas
roll
arpl
adc
inc
fsubrl
xlat
xchg
cmp
push
jns
push
dec
movsb
push
lahf
push
js
mov
xchg
jo
shlb
lret
pop
lea
inc
les
cwtl
cmp
cmp
jo
shlb
push
fdivs
addr16
mov
shlb
push
loope
popf
lods
or
or
add
adc
lcall
mov
dec
push
dec
sub
inc
rolb
xor
xor
mov
int3
movb
cmpsb
mov
nop
testl
dec
mov
rcrb
test
adc
xlat
clc
dec
or
xchg
push
xor
lret
jo
push
xor
mov
xor
adc
test
test
sub
jno
lret
xchg
adc
mov
movsb
add
je
lret
pop
ljmp
add
ret
leave
add
inc
push
add
sbb
sub
xchg
sub
sub
call
sub
push
mov
jbe
mov
dec
psubusb
sub
call
push
dec
or
mov
or
enter
clc
ret
sbb
xor
adc
lret
jge
xor
pop
xorl
push
xor
dec
add
outsb
xchg
xchg
fldt
std
sbb
and
sbb
sbb
mov
stos
lea
mov
jno
adc
xchg
adc
cmpsb
ret
adc
inc
pop
filds
pushf
adc
rorb
loopne
pusha
pop
arpl
ljmp
ljmp
add
loopne
rorb
nop
popf
mov
or
mov
push
dec
cmp
je
popa
inc
sbb
or
pop
mov
jb
cmp
arpl
cld
lret
mov
dec
std
push
xor
lods
push
jle
or
sbb
sub
fstpt
imul
scas
xor
lock
push
orb
das
pop
sub
sahf
inc
dec
lea
jmp
cmp
sub
push
jns
pusha
das
sbb
or
add
jbe
loopne
xor
lahf
mov
sub
gs
rcrb
adc
mov
adc
push
mov
dec
bound
pop
sahf
cmp
xor
lds
push
and
shl
adc
xchg
repnz
jbe
jle
mov
inc
or
test
icebp
add
jns
sbb
xchg
push
push
inc
push
dec
mov
mov
push
xor
js
pop
rcrb
clc
or
and
pusha
ret
scas
or
lahf
dec
mov
orl
stos
or
mov
push
aam
inc
inc
inc
jno
xorl
pop
mov
inc
js
mov
sti
cwtl
push
sub
sub
faddl
mov
lret
ljmp
ljmp
enter
inc
cmp
cmp
or
jnp
fwait
aad
stos
cmp
xchg
scas
dec
clc
je
sbb
inc
mov
dec
popa
add
int
cmp
adc
xchg
aas
cmp
fcomps
push
or
movsl
int
push
jmp
xchg
cwtl
pop
or
pop
mov
das
sbb
mov
push
dec
add
mov
mov
dec
jl
jl
jno
xor
xorb
outsl
iret
ror
xor
mov
xor
shrl
mov
add
addb
dec
or
inc
push
sub
xor
call
lds
jge
sub
test
dec
sbb
test
hlt
gs
jo
imul
or
push
faddl
add
xor
mov
dec
jo
test
icebp
scas
pop
adc
js
mov
push
xchg
inc
xchg
mov
xchg
aam
in
pop
push
cmp
mov
cmp
or
mov
sbb
or
jbe
mov
add
jb
push
fdivr
ret
xor
ret
mov
xchg
sub
pop
rcrb
test
jo
add
jns
push
ret
pop
repnz
sahf
ljmp
pop
in
or
inc
push
push
ficoms
push
cmp
popa
gs
hlt
cwtl
add
or
xlat
je
shrb
jl
jge
mov
sarb
add
xchg
mov
fnstsw
or
sub
xor
cs
dec
sarb
sbb
sbb
bound
and
push
cmpsl
sahf
addr16
add
ljmp
lea
push
push
decb
add
inc
sbb
mov
jne
mov
pusha
insb
xor
push
push
stc
or
js
cli
sub
ret
mov
add
sbb
fists
loopne
or
adc
andb
loop
push
mov
ja
jns
sub
pop
mov
mov
ret
add
call
sub
dec
cmp
data16
or
cwtl
xchg
xchg
cmp
pusha
sub
add
jbe
repnz
inc
pop
sub
loopne
mov
xor
adc
push
mov
push
jo
nop
cmc
jbe
push
push
push
pop
and
mov
inc
pusha
and
push
jmp
je
push
mov
mov
jnp
lea
pop
pop
adc
in
enter
popa
jle
jp
inc
dec
jbe
jmp
jne
test
mov
inc
push
adc
nop
test
test
out
add
sar
mov
movl
add
jl
pop
lods
jnp
adc
xchg
cmpb
push
les
dec
pop
les
or
xor
lahf
push
xor
xchg
dec
and
xchg
mov
jle
paddb
push
add
jmp
sbb
fstpl
jmp
inc
jge
adc
dec
dec
mov
or
data16
jmp
sbb
dec
and
or
orl
cmp
fmul
dec
xor
cmovbe
jge
js
jle
inc
pusha
or
scas
insl
subl
add
jne
dec
jmp
jmp
jnp
fimuls
jmp
jo
movsb
movsb
and
push
je
jp
or
or
shlb
cmpsl
cmp
mov
sub
xchg
pop
dec
jbe
adc
cmp
out
push
lock
or
jl
and
inc
pop
es
xchg
pop
push
push
shlb
fildll
or
ret
aad
jb
push
and
mov
aam
and
dec
or
xor
pop
push
pop
and
mov
adc
in
insb
xor
adc
or
pop
popa
add
or
mov
outsb
mov
mov
pushf
fcmovb
sti
lods
sbb
adc
filds
and
fiadds
daa
add
ret
outsb
push
jmp
mov
or
or
sbb
test
lret
aam
imul
or
mov
les
xchg
inc
xchg
push
fbld
pop
xor
or
lret
insl
jl
and
or
adc
call
xor
xor
rolb
sub
lss
or
push
subb
xchg
push
js
cs
mov
or
shlb
mov
inc
js
add
xchg
faddl
dec
aas
loopne
lock
sbb
roll
push
mov
push
sti
test
mov
repz
sti
or
filds
cmp
jmp
sbb
add
mov
mov
sbb
mov
out
sar
and
cmp
push
bound
cmpsl
mul
mov
sub
repz
jne
adc
daa
push
jnp
adc
sbbb
push
xor
mov
dec
xor
ss
push
xchg
push
add
das
cmpsb
mov
int3
subb
push
xchg
mov
loopne
push
into
lods
sbb
gs
mov
or
mov
push
add
mov
inc
mov
or
adc
mov
jl
ret
push
fs
ret
mov
call
filds
shrl
sub
in
and
and
enter
rorl
sbb
cmp
jae
adc
sbb
mov
push
mov
xor
push
rcrb
sub
add
sbb
mov
push
fistpl
or
cwtl
in
leave
lds
mov
cmp
cld
cld
inc
mov
jns
std
xor
lret
clc
push
cmp
or
adc
add
pop
dec
add
sub
sub
mov
orb
and
pop
js
dec
ljmp
out
mov
push
popa
jecxz
fisubrl
pop
mov
movsb
fwait
jnp
loope
mov
pop
push
jmp
xor
push
dec
and
int3
jnp
sbb
inc
dec
adc
loope
or
pop
push
lcall
and
daa
push
adc
push
inc
lods
dec
jo
sub
inc
jp
sbb
out
sub
mov
lods
fisubl
mov
jge
cltd
dec
and
inc
fcmovu
in
stos
inc
or
cmp
cmp
sub
pop
rclb
mov
xchg
dec
scas
nop
sbb
adc
nop
or
sbb
push
dec
shll
hlt
pusha
xorl
lods
nop
stos
pop
ret
pop
aad
imul
push
mov
xor
xor
dec
mov
test
mov
mov
dec
or
jmp
sub
rcrb
jg
dec
aaa
sbb
mov
clc
mov
cmp
xchg
add
adc
shl
dec
adc
test
inc
adc
into
mov
adc
sub
mov
pop
xchg
sub
loopne
iret
mov
jne
jle
add
sub
cmp
hlt
and
push
push
mov
jge
rclb
movsb
inc
xor
test
mov
fnsave
repnz
inc
sub
adc
dec
sub
ja
fmuls
insb
xor
movsl
add
push
xor
sti
imul
push
xchg
or
rcl
xor
sbb
inc
push
jo
or
add
ljmp
pop
xor
enter
inc
dec
loope
sub
aad
addl
mov
add
xor
rol
jg
pop
mov
arpl
add
sar
lcall
pop
cli
lea
add
push
adc
or
cld
rcr
push
jmp
inc
dec
add
cmp
push
test
mov
dec
pop
arpl
shr
je
dec
jne
adc
sub
ja
pop
push
testb
je
xor
decl
inc
subb
sub
or
lods
subl
imul
or
mov
cwtl
jno
or
cwtl
and
mov
pop
out
cmpl
pushf
xchg
aaa
scas
stc
rorb
js
lea
sti
jbe
imul
sub
xor
sub
sub
lahf
or
push
jo
dec
test
loope
popl
jl
add
es
mov
pop
ss
icebp
jo
dec
mov
fmull
inc
sbb
cmp
add
stc
mov
lcall
stc
shrb
lods
add
adc
sti
xor
rcll
add
inc
std
cmp
cmp
in
cmp
in
and
inc
push
add
pop
pop
mov
ficompl
or
rcrb
pop
sub
iret
sahf
les
pop
xor
call
inc
aam
xchg
pop
mov
adc
pop
add
cli
sub
push
sbb
popf
add
mov
push
push
mov
and
sbb
mov
dec
push
and
and
jns
and
cmp
add
cmp
ret
mov
lret
mov
jo
int3
and
xor
add
mov
cmp
push
popf
adc
inc
mov
fisttpl
xor
lcall
stos
sbb
jl
lcall
xor
mov
push
jge
add
pushf
sub
rolb
add
inc
sub
scas
sbb
or
mov
loopne
lret
sub
cmp
mov
push
xchg
sahf
insl
inc
dec
test
iret
push
jo
lahf
mov
xchg
pop
xor
fsubrp
sbbb
add
add
fdivrl
enter
shl
aad
mov
filds
jg
out
add
dec
dec
mov
sarb
fisttpl
inc
xor
and
inc
add
add
jl
xor
and
push
mov
cmp
sub
mov
mov
sbb
call
and
xchg
jp
pop
mov
inc
or
test
aaa
js
and
lea
movsl
sbb
xchg
aas
and
sub
lea
xchg
gs
pop
sahf
inc
xchg
push
cmp
cmp
jg
mov
arpl
dec
shl
aas
push
sbb
mov
inc
cs
insb
in
xchg
cmc
add
jp
rclb
sbb
mov
out
movb
fdivr
imul
ljmp
pop
lods
fdivrp
loope
mov
rcl
mov
inc
lds
movsb
add
repnz
add
shr
cmpsl
and
add
add
add
add
or
mov
sub
test
ja
dec
or
dec
mov
add
in
es
mov
sarb
xchg
mov
sub
or
cmp
adcb
std
xor
or
sub
push
push
jp
cmp
sbb
hlt
mov
jbe
cmp
clc
stos
shrb
and
pop
inc
mov
addl
mov
and
push
out
loopne
xchg
add
jnp
movd
mov
dec
mov
inc
outsb
adc
xchg
fisttpl
icebp
fs
sub
das
bound
push
jne
push
inc
mov
test
ja
inc
adc
dec
push
xor
push
insb
add
push
dec
shl
and
sti
nop
std
add
fsubrl
orl
or
pop
cli
ror
shl
das
add
call
push
mov
das
adc
mov
into
push
inc
fisubl
xor
jmp
lds
sarb
adc
dec
dec
or
inc
mov
in
xchg
mov
out
jmp
je
mov
sbb
into
insl
shll
push
mov
jge
test
sbb
sbb
adc
xchg
cwtl
jg
and
pop
sub
subl
inc
clc
cmp
push
xor
insl
pop
jg
or
lea
xchg
inc
aaa
pop
mov
das
xchg
cli
add
loopne
mov
mov
loopne
or
stos
adc
sar
sub
fcmovnbe
xchg
cmp
or
lcall
add
sbbb
mull
or
and
lea
jo
mov
add
ss
and
scas
shlb
pop
je
push
cmp
push
shl
sub
inc
aaa
test
sub
and
bound
ficomps
fidivs
jmp
pop
xchg
ror
mov
jmp
jne
sti
mov
sub
jmp
cmp
jle
cmc
iret
mov
lods
sub
add
outsl
lock
ret
ret
je
cmp
jge
xchg
mov
pop
sbb
push
sub
adc
cmp
jg,pn
call
mov
push
sbb
arpl
jle
das
pop
or
jg
adc
sub
fldl
mov
adc
adc
int
cld
adc
mov
in
sub
mov
mov
xchg
mov
jg
cmp
mov
or
inc
inc
imul
push
sub
adc
push
mov
lds
stos
cmp
iret
mov
or
push
sub
out
adc
dec
js
psrlw
cmp
add
pop
dec
mov
sbb
test
aam
mov
js
and
jbe
or
daa
or
xchg
cmp
dec
call
add
or
jp
cli
fmuls
or
inc
es
clc
dec
lea
je
mov
inc
lret
and
pusha
mov
dec
or
insl
daa
or
ljmp
testb
push
mov
jbe
mov
inc
dec
jne
imul
mov
xor
jecxz
sbb
jne
bound
push
add
into
dec
cld
shll
lea
lea
pop
xor
add
sub
pop
lods
pop
sbb
daa
jl
pop
push
sti
mov
mov
aaa
flds
cmp
cmp
movsb
cmp
rcl
aaa
mov
scas
loop
ret
mov
insb
push
outsb
inc
sbb
je
fildll
out
cmp
sbbb
and
aad
scas
pop
insb
je
xchg
loopne
dec
jo
xor
cmpsl
dec
js
push
mov
dec
std
dec
jns
push
fmuls
ud0
adc
add
call
jb
pop
push
insl
sbbl
or
jecxz
push
mov
dec
scas
add
lret
mov
cmp
dec
mov
push
movswl
add
mov
test
pop
call
lret
dec
shll
add
jl
cwtl
andb
xchg
test
movsl
pop
push
cli
push
add
sbb
add
popf
xchg
pop
sub
xor
aas
in
nop
mov
enter
and
xor
ret
inc
inc
rcrl
ss
mov
cli
add
fldl
pop
dec
cmp
jne
jb
movsl
inc
add
adc
xchg
shlb
lods
dec
rorl
push
popa
aam
mov
mov
data16
mov
xor
add
imul
add
push
mov
jnp
sbb
unpckhps
xlat
out
addr16
push
inc
les
pop
inc
sub
rolb
fmul
xchg
cmp
sahf
push
inc
adc
dec
push
testb
inc
int3
sub
jo
xorb
hlt
shll
jl
cmp
mov
shlb
sbb
popf
shlb
adc
scas
xor
or
sbb
adc
sub
sub
pop
inc
faddl
fiadds
inc
lahf
std
cmp
inc
hlt
sub
dec
push
mov
dec
or
push
aaa
mov
pop
int
rol
ret
cmp
dec
mov
pop
adc
and
pop
mov
aas
adc
adc
int3
mov
xchg
mov
jle
and
jmp
adc
mov
aad
and
inc
clc
mov
mov
and
push
fbld
pop
jmp
add
shll
inc
fidivl
mov
adc
push
orb
push
call
in
inc
jl
adc
xor
jg
and
inc
or
push
std
mov
add
jg
add
xor
mov
add
sub
push
inc
add
jo
psrad
jle
adcl
sbb
shlb
or
scas
jae
add
jmp
sbb
jne
test
xor
jle
sbb
xor
and
inc
orl
xor
push
mov
adc
fcmovnu
sbb
jnp
sub
bound
divl
loop
inc
jne
jg
push
add
shrl
xchg
aaa
rol
addb
dec
pop
jl
push
ret
adc
sbb
jne
xor
out
cmp
pop
cmp
pop
or
nop
mov
push
and
or
or
push
aaa
push
ja
or
sbbl
adc
lock
dec
rcll
es
cmp
ret
xor
out
or
sbb
inc
inc
or
or
stc
jbe
push
lds
jo
dec
stc
jg
arpl
rcrb
stos
add
aam
dec
jle
or
push
fdivl
inc
jns
nop
cmpsb
inc
push
xacquire
movsl
push
fidivl
or
movsl
js
pop
mov
mov
fnstsw
les
mov
push
ficompl
neg
orb
inc
pushf
lods
jge
lret
sarb
mov
nop
add
jecxz
sub
adc
hlt
stc
dec
fldl
inc
test
outsl
mov
out
sub
ds
rorb
add
movl
jmp
lea
xor
loope
scas
jo
addb
dec
pop
loope
xor
pop
mov
jg
cmp
mov
inc
add
sub
hlt
mov
or
mov
jge
enter
fmuls
arpl
lods
or
sub
std
mov
add
sbb
add
or
filds
pop
jno
test
add
aas
mov
cmc
andl
pushf
and
lea
mov
push
cmp
push
jg
call
pop
jmp
or
pushf
add
aas
orl
mov
sbb
cmp
adc
or
mov
add
xchg
sub
inc
js
imul
sarb
or
std
xchg
rcrl
lea
shl
pop
lcall
xchg
xlat
jle
aaa
jl
add
adc
dec
je
dec
jne
daa
push
jg
adc
add
cmp
and
mov
sub
inc
push
nop
js
sub
imul
sub
js
mov
jp
push
js
mov
daa
push
or
rclb
pop
add
jl
sbb
sahf
popf
pusha
mov
jmp
daa
sub
ljmp
adc
dec
add
sbb
adc
cmp
mov
inc
in
repnz
movsb
xchg
in
sahf
xor
sbb
xor
cmp
inc
test
push
sub
xchg
push
or
in
pop
sbb
mov
mov
popa
and
fsubr
add
xor
hlt
jmp
outsw
jae
add
enter
mov
fidivs
cld
es
push
cmpsb
lods
dec
sub
fdivrs
sub
add
dec
push
dec
sahf
shlb
mov
in
test
lock
add
je
je
cmp
xor
jmp
fimull
add
sub
inc
sbb
sub
and
daa
fstl
dec
jne
jne
cmp
jbe
daa
mov
adc
jne
imul
dec
aaa
jo
aaa
inc
push
and
ds
pop
shlb
mov
adc
fimuls
cmc
adc
fldcw
sahf
daa
push
add
sbb
out
into
popf
shlb
push
or
pop
pop
inc
test
mov
pop
inc
jno
enter
aas
pop
sub
pop
dec
pop
add
adc
imul
dec
inc
add
dec
jge
in
addr16
dec
or
add
mov
or
add
mov
push
call
loop
jg
fdivrl
and
pop
mov
jbe
pop
cmpsb
js
push
inc
xlat
or
xchg
or
inc
int3
push
xorb
and
js
into
push
pop
sbb
pushf
jo
sbb
mov
add
jge
loope
fidivs
aas
sub
add
and
jle
je
mov
lcall
movsb
test
sbb
adc
movsl
loop
add
inc
cmp
decb
cmp
out
mov
mov
fdivrl
rolb
sub
add
push
mov
subb
add
lcall
mov
jmp
mov
lods
adc
mov
xor
sbb
adc
ss
fnsave
push
pusha
scas
loopne
jbe
inc
xchg
dec
mov
dec
dec
in
pop
xchg
dec
jne
in
or
dec
push
add
dec
jl
inc
sahf
jmp
sbb
jecxz
mov
jmp
xor
xchg
rcl
jl
in
jne
sub
and
and
xor
repz
ss
pusha
add
fildl
pop
daa
and
inc
lods
inc
pop
pop
cmpsl
or
adc
jl
jmp
mov
fst
and
sbb
sarb
shl
mov
fcmovnb
pop
cli
bound
ds
cmp
lret
sbb
sub
sbb
or
or
movsb
ret
inc
sbb
or
xchg
cmp
mov
xchg
dec
push
push
mov
je
nop
pop
dec
js
adc
pop
or
cmp
sbb
or
adc
jae
test
cmp
loopne
mov
mov
daa
sbbl
cwtl
cmp
loop
pushf
sbb
push
outsl
inc
insl
ret
cmp
sub
jmp
shrl
shlb
jle
int
lret
mov
adc
outsl
sbb
xchg
add
push
into
divl
cmp
xchg
test
call
popa
xchg
sub
ss
lods
mov
sbb
leave
mov
nop
jg
xchg
adc
out
push
lea
dec
adc
aas
pop
inc
push
lea
add
push
or
test
xor
out
or
call
inc
shlb
inc
adc
dec
adc
sub
mov
cwtl
pop
clc
sbb
inc
pusha
adc
and
xchg
sub
push
outsl
push
scas
in
loopne
or
push
add
js
scas
cmp
mov
out
add
jmp
leave
jo
inc
lret
shlb
test
xor
daa
sbb
xor
or
or
push
ror
shrb
decl
enter
and
ds
lea
cmc
xchg
or
jp
lea
mov
rorl
movb
test
jp
aam
jg
call
mov
lock
leave
pop
and
sub
adc
shl
xchg
mov
mov
sub
cmc
sbb
idivb
mov
push
adc
sti
xchg
cs
pop
xor
or
mov
iret
add
xlat
dec
sti
ret
mov
movsb
adc
push
js
and
inc
cmp
outsb
jge
int3
mov
test
fistl
scas
mov
ja
push
push
call
lahf
add
out
and
dec
je
and
ret
inc
push
push
es
mov
les
or
xor
adc
inc
out
popf
mov
dec
aad
scas
inc
push
or
rorb
lds
jl
jns
xchg
sahf
ficoml
inc
sbb
add
add
sub
aaa
in
push
sub
movsl
pushf
test
sbb
push
mov
das
sub
add
jb
lret
rcll
inc
out
adc
loope
mov
xchg
lret
inc
add
cmpsb
and
push
mov
mov
pop
mov
pop
cmovbe
mov
pushf
fwait
aas
subb
mov
push
es
mov
mov
leave
pop
bnd
add
repz
push
jnp,pn
sub
push
in
mov
scas
xchg
add
mov
xor
ret
mov
jno
mul
push
lea
repnz
rorl
xor
mov
scas
test
sub
shrl
or
push
aas
sbb
mov
xchg
jb
notl
xchg
cli
bound
fimull
cmp
dec
ja
inc
inc
or
dec
xorb
or
movsb
imul
xchg
aaa
cmp
jmp
mov
xchg
sbb
push
pop
and
xor
xchg
pop
dec
jo
mov
mov
ret
in
xchg
push
inc
outsb
xor
jo
mov
loope
lcall
imul
shlb
stos
dec
cmp
add
jp
push
call
dec
scas
jb
shl
add
add
cmpl
mul
mov
or
jbe
push
popf
sbb
lret
push
fistpl
ret
inc
stos
test
inc
jmp
cmp
fidivl
lret
inc
xor
jo
push
dec
in
add
sbb
jne
mov
xchg
jo
mov
repz
ret
bound
sub
ret
shlb
cwtl
sbb
add
jo
xchg
int
and
sbb
xor
xor
addl
sub
call
and
jae
rol
testb
pushf
inc
cld
je
inc
movsl
pop
pusha
and
and
dec
scas
mov
or
incb
test
pop
ror
jb
or
sub
push
dec
mov
jne
outsb
pop
je
pop
dec
sbb
mov
pop
sbbl
jo
push
lock
daa
mov
cmp
test
out
cmc
mov
movsb
aaa
xor
cmpsb
loop
pop
int3
add
pop
or
pop
sub
push
cmp
rorl
or
sbb
out
mov
and
sbb
push
lea
xchg
adc
cmovl
outsb
ja
das
arpl
dec
imul
and
or
jne
xor
test
sti
pop
cmp
aam
sbb
push
push
cmp
aam
sub
popf
mov
or
call
pop
pushl
adc
sbb
lock
sub
and
js
mov
push
push
mov
pop
test
push
sbbl
and
xchg
mov
out
cmp
es
data16
inc
adc
std
xor
sub
push
inc
into
xor
cmp
repnz
xchg
and
movsl
lds
sbb
cmpb
aam
addl
add
add
mov
inc
inc
sub
mov
sbb
loopne
jp
dec
gs
rol
out
cld
stos
inc
or
rolb
push
testb
mov
lock
adc
inc
or
lock
adcl
add
dec
sub
fwait
adc
sbb
push
pusha
lea
in
lcall
sub
xchg
add
xor
xchg
mov
xchg
dec
in
pop
lcall
icebp
orb
scas
xor
inc
sbb
gs
cmp
fbstp
mov
sbb
orb
lcall
ds
loopne
inc
pusha
cmp
pop
sbb
push
add
push
repz
adc
or
push
and
fwait
ljmp
xchg
sbb
or
nop
fimuls
shlb
jo
jge
leave
adc
test
movsb
or
or
loopne
ds
mov
in
or
movsl
pop
sub
jmp
call
cmpsl
and
dec
test
add
adc
imul
cmp
mov
jge
loop
pop
add
sti
push
adc
fistl
loop
jo
adc
call
clc
push
cmc
aaa
and
dec
add
xchg
push
mov
adc
mov
sbb
mov
or
sbb
and
inc
aas
mov
lea
sar
incb
or
dec
mov
push
mov
inc
rolb
xor
roll
sar
dec
jns
cld
mov
mov
call
stc
push
scas
insl
loopne
jns
xor
roll
jo
dec
lret
inc
dec
add
mov
push
movsl
lock
add
rcl
push
movb
sbb
int
lods
add
pop
xor
sub
xlat
or
push
add
es
and
dec
repz
mov
add
add
mov
pop
adc
mov
pop
lea
push
sahf
adc
adc
mov
mov
add
mov
cmp
in
fiaddl
sub
jmp
push
sbb
add
adc
enter
adc
mov
cmp
outsb
mov
call
sbb
adc
xor
xor
adc
add
xor
xor
fildl
pop
adc
cmp
jo
dec
fmulp
idivl
fdivs
inc
or
aad
cmp
push
dec
jp
mov
call
pop
mov
jmp
cmp
sbb
clc
sbb
pop
fcomps
jecxz
fwait
les
movsb
adc
sti
mov
push
pop
lea
push
ret
fidivrs
and
inc
and
les
rclb
push
cmpsl
sti
pop
add
add
sub
movb
sbb
out
js
lret
ret
cwtl
ret
sbb
and
std
orl
ret
sbb
in
mov
cmp
adc
bswap
dec
push
jb
rolb
ds
lock
xchg
or
sbb
or
fidivrl
push
push
pop
sbb
cmpsl
bnd
sub
and
and
push
cmp
xchg
mov
pop
pusha
adc
or
jmp
mov
push
cmp
imul
dec
fisttpl
and
sarb
mov
shl
cmp
xchg
mov
cmp
adcl
and
mov
jle
adc
std
add
adc
cltd
jns
pop
movsb
subb
sub
dec
xor
repz
xchg
pusha
sbb
sahf
or
push
push
shl
mov
mov
push
mov
sub
cmpl
test
mov
movsl
and
pushf
popa
rcl
stos
and
mov
mov
loopne
lock
adc
dec
js
xchg
mov
add
mov
and
add
add
jno
or
push
orb
test
or
add
inc
scas
or
sub
add
pop
jg
pusha
sub
add
jecxz
insb
notb
mov
andl
outsl
repnz
xor
rcrb
sub
rcrb
or
into
jmp
sub
fistl
push
push
adc
clc
add
and
push
or
mov
lods
push
push
mov
int3
insb
stos
test
rclb
cmc
mov
jno
int3
out
push
push
loop
test
jmp
daa
and
mov
mov
fcoms
sbb
dec
mov
fwait
xchg
jo
lcall
push
adc
sarb
ljmp
or
ds
adc
adc
adc
mov
add
add
cmpsb
incb
roll
in
mov
mov
es
repnz
sbb
mov
add
pop
sub
loope
stc
push
lret
inc
popf
cltd
add
xor
xor
int
sub
imul
repnz
cmp
sbb
sahf
jecxz
test
mov
inc
cwtl
popa
fnsave
pop
push
cs
or
mov
sub
mov
sub
jne
shl
std
lret
test
pop
js
imul
shl
dec
cmpl
sbb
mov
sti
or
out
lea
pop
push
cmp
sbb
cmp
dec
mov
inc
sbbl
jo
cmp
push
push
add
ljmp
std
add
dec
cmp
mov
and
mov
inc
and
fisubrl
mov
pop
and
sub
rolb
cwtl
or
jae
mov
and
add
and
xorb
jb
push
or
or
ud1
divl
inc
sbb
push
and
sub
nop
lods
or
cmp
mov
repz
data16
insl
adc
and
and
inc
pop
jl
enter
xchg
fsts
inc
cmp
out
dec
mov
push
inc
jp
push
xor
rcr
in
push
jns
xor
push
out
xchg
sbb
push
xchg
fadds
jae
sti
push
fsubs
mov
fldcw
jo
xor
bound
daa
and
adc
rcll
inc
inc
and
dec
push
sub
push
clc
inc
pusha
adc
pop
mov
out
sbb
sbb
fnstsw
adc
fsts
add
inc
pushf
and
outsl
hlt
sub
dec
push
js
adc
leave
movsb
xchg
add
imul
fnstcw
or
sbb
and
test
subb
gs
cs
pusha
add
lea
ss
push
ficompl
sub
call
add
add
imul
imul
imul
inc
clc
or
fsubs
and
add
sbb
add
push
sub
loop
push
jl
loop
out
mov
pop
push
aaa
insl
cmpsl
imul
stos
or
or
inc
cld
out
sti
into
in
jae
push
ds
adc
sbb
movl
sbb
xchg
shll
stos
fildll
stos
lds
push
nop
psubusb
std
adc
mov
cmp
add
pop
pushaw
out
jge
shll
aas
or
mov
fisttpl
movsl
xlat
and
xchg
bound
adc
add
sbb
imul
scas
add
mov
or
dec
repnz
js
and
int3
sub
and
cmp
and
add
sbb
dec
pushf
movsb
mov
lret
push
pop
and
sti
xor
daa
pop
ds
loope
iret
fiaddl
mov
xor
cmp
inc
ljmp
xlat
mov
out
fisubrs
rclb
mov
icebp
dec
sbb
cmpsl
or
sub
adc
sbb
push
push
lock
and
add
push
mov
xor
push
loopne
mov
add
repnz
mov
fwait
dec
idivb
roll
pop
lock
push
inc
inc
push
fimuls
cmp
hlt
mov
js
or
shl
lea
popa
mov
outsl
lods
insb
mov
lret
jo
inc
xchg
std
push
mov
add
push
fstl
push
pushf
jmp
push
or
lret
ljmp
rcl
sbb
jmp
mov
sub
imul
ror
mov
and
sub
js
jo
pop
add
add
cmc
outsb
xlat
adc
dec
and
in
add
sbb
in
rolb
faddl
push
call
sub
push
ss
add
popa
xchg
ret
adc
push
push
cmc
imul
or
mov
test
and
mov
mov
out
lea
xor
sar
or
jns
inc
and
xor
cwtl
xchg
sub
sub
js
shrb
es
lods
test
es
adc
mov
cmp
shlb
pop
mov
popa
xchg
cmpsb
add
aam
dec
or
pop
test
imul
push
and
repz
aam
enter
jnp
fdivr
and
subb
lock
or
mov
jl
les
dec
mov
cmpl
or
das
test
add
cmp
pop
out
cmp
sub
xchg
jmp
cwtl
jecxz
icebp
mov
inc
out
sub
push
dec
and
daa
int3
loop
call
jp
mov
dec
fstl
inc
sub
fisttpl
sub
jno
imul
mov
pop
adc
stc
sarb
call
stos
push
sub
or
loopne
cli
sub
or
cpuid
push
push
repz
aam
cmpsb
aam
clc
push
sbb
loopne
stc
pop
in
jle
cli
push
add
jno
pop
js
dec
push
and
sbb
push
mov
pop
ja
in
xor
push
mov
mov
push
mov
ret
sahf
mov
lea
fnstcw
pop
or
cmp
xor
cmpsb
adc
add
out
inc
pop
call
testb
sbb
or
inc
lcall
jle
icebp
ret
sbb
mov
cmpsb
mov
aad
bound
pop
add
loopne
iret
rolb
mov
xchg
stos
aad
sarb
xchg
test
mov
cmp
cmp
repnz
aad
pop
aaa
aad
mov
ljmp
push
or
push
adc
lea
pusha
test
or
mov
lret
in
cmp
pusha
ljmp
pusha
and
imul
sub
cmp
pop
add
jle
stos
dec
mov
push
jg
mov
add
or
pusha
xchg
aad
adc
dec
mov
pop
jmp
sub
insl
xor
repnz
sbb
insb
sub
cltd
xor
cmp
mov
pop
dec
lcall
mov
es
lret
push
popf
je
jge
fcmovu
popa
into
movsb
adc
adc
adc
push
es
jns
pop
fsubrs
inc
add
leave
cwtl
adc
pop
cmpl
push
inc
dec
sub
inc
ret
sbb
dec
test
inc
adc
mov
adc
ljmp
add
in
and
loopne
add
rcl
insb
jmp
clc
add
mov
sbb
cmp
nop
in
fcmovnb
ss
pop
and
je
and
sub
popa
fldl
incl
rcrb
movsb
mov
xor
iret
lods
cmp
or
add
into
arpl
pop
mov
loopne
sub
adc
push
push
cwtl
es
mov
jns
mov
dec
cwtl
add
cs
pop
fstl
push
mov
jbe
fstl
in
insl
lahf
mov
dec
nop
gs
pop
lds
add
xlat
int3
ljmp
pop
add
pop
mov
sar
xchg
lahf
mov
mov
push
insl
fs
iret
sub
mov
aas
or
push
xchg
xchg
xchg
sbb
push
aas
xor
aas
ret
push
add
inc
dec
or
enter
sbb
in
or
sbb
mov
adc
imul
sub
pop
jnp
ss
or
cmpxchg8b
imul
cwtl
dec
or
add
rcl
clc
sbb
pop
xchg
sub
fwait
cmp
scas
push
sub
xchg
adc
imull
sub
insb
and
cmp
repz
push
add
push
inc
add
add
je
rclb
adc
xchg
hlt
bswap
jge
jb
setp
sbb
mov
add
xor
negb
xor
sbb
jbe
xchg
je
pop
ds
popa
or
mov
pop
sbb
inc
mov
push
xor
adc
jo
fsts
pusha
xchg
jno
lcall
mov
scas
stos
ficoml
repnz
fisubs
push
fisttps
pushf
mov
and
lods
fwait
add
repnz
lock
cmp
mov
mov
out
mov
sbb
lods
fcompl
or
and
lahf
push
sub
and
insb
jg
and
add
and
daa
adc
push
jecxz
adc
fmull
jge
fistpl
stc
push
add
outsl
pop
fisubrl
sbb
outsl
loope
add
jl
int3
sbb
nop
scas
fcmovbe
mov
add
or
outsb
cld
and
jle
or
mov
insb
or
mov
adc
pop
inc
jecxz
xchg
lods
or
mov
or
movl
cmpsl
push
push
adc
sub
loop
cmpl
cmpsb
cmpsl
push
fdivr
sbb
shlb
xor
sbb
outsl
inc
aad
in
icebp
xchg
and
mov
fnstcw
xchg
ja
push
jmp
cld
inc
fisttpll
jg
inc
sbb
notb
pop
rcrb
popf
lret
imul
and
ret
sub
push
lahf
adc
cwtl
mov
mov
jle
cltd
lods
cwtl
xchg
mov
cmpsl
dec
add
push
aas
std
sbb
adc
pop
movl
cmp
cwtl
fdivrl
lcall
iret
push
xorl
cwtl
add
xor
or
sbbb
jne
aam
xor
pop
jg
mov
addb
add
scas
fmull
mov
push
mov
add
cmp
xchg
cmp
inc
sarb
jo
insb
jns
cltd
jp
ljmp
sar
push
jle
mov
andps
sub
push
add
loopne
pop
fs
mov
mov
sbb
in
push
roll
sbb
cld
fldl
jl
movsb
adc
push
cmp
adc
jno
jo
aas
shll
aam
or
adc
push
mov
inc
js
jle
push
and
add
xchg
cmp
mov
mov
orl
out
mov
outsl
popa
sub
pop
mov
lock
movsb
mov
shl
aaa
imul
into
mov
pusha
or
insb
inc
fwait
imul
mov
sub
fs
rcrb
mov
add
dec
sub
dec
jecxz
sub
add
add
mov
cli
xchg
mov
inc
sbb
pop
pop
sti
add
mov
mov
sbb
inc
mov
mov
sub
inc
or
insl
xchg
aam
clc
mov
insb
sti
jbe
add
lret
push
lds
add
lcall
xor
mov
pop
test
mov
clc
xchg
test
mov
aas
out
mov
add
inc
cmc
add
imul
sahf
pop
mov
mov
add
std
sub
add
adc
das
rclb
jg
cwtl
inc
adc
push
push
push
add
pop
push
ret
cltd
test
pop
inc
test
inc
sbb
xor
push
push
hlt
jmp
jp
lahf
sbbl
inc
std
sbb
movb
scas
push
jl
lock
mov
out
dec
and
sbb
push
leave
add
nop
and
movsb
dec
xor
fwait
mov
pop
pop
inc
fadds
das
sahf
lods
pop
push
adc
mov
sbb
movsb
sbb
jns
xchg
inc
inc
adc
push
mov
repz
cmp
dec
inc
dec
je
lahf
jl
aaa
push
and
inc
sti
pop
fisttps
adc
cmp
add
add
sbb
clc
sbb
lds
clc
cmpsb
jne
fnstenv
ret
push
jg
or
ds
mov
movsl
cmp
or
add
adc
or
xor
cmp
incl
std
inc
push
mov
rcrl
inc
loope
sbb
inc
add
sar
jl
cwtl
mov
jl
pop
pop
and
imul
or
pop
pusha
jl
push
lret
lahf
push
adc
xorl
xor
jle
jmp
adc
cmpsb
and
fstpl
jmp
push
dec
mov
lods
loopne
push
lea
adc
mov
leave
and
mov
push
adc
lds
mov
movsl
ficoms
in
push
xor
popa
das
add
in
push
mov
cltd
test
pop
mov
sub
dec
cmp
ret
test
dec
adc
adc
add
mov
lods
imul
dec
stos
movsb
pop
xor
inc
cmp
cmpsb
imul
mov
push
pop
inc
push
push
inc
mov
pop
leave
bound
in
push
push
dec
and
and
mov
mov
jo
sub
les
inc
mov
or
jl
pop
loopne
add
push
pop
or
es
add
stos
enter
loopne
mov
sub
sbb
dec
inc
jb
push
xor
or
rcrb
or
dec
jno
popf
iret
pop
lret
xor
sbb
or
add
jb
popl
and
dec
rorb
lret
push
decl
scas
adc
inc
cwtl
roll
mov
xchg
jne
and
pop
fiaddl
aaa
or
adc
ss
sub
xor
addb
cs
popa
push
or
add
out
insl
jecxz
je
jge,pn
pop
add
imul
xchg
adc
xchg
inc
dec
pusha
cwtl
inc
mov
pop
pop
mov
xor
and
cmp
popa
mov
push
sub
je
dec
xlat
adc
dec
stos
inc
dec
add
add
and
pop
enter
xlat
in
jns
add
sbb
bound
xchg
pop
or
je
dec
je
nop
sub
loopne
filds
test
jnp
mov
je
loope
fwait
pop
aaa
mov
fildl
mov
push
in
aad
xor
adc
mov
sbb
and
add
add
or
aam
add
or
mov
notl
dec
xchg
xor
sub
rcrb
add
scas
add
mov
mov
dec
mov
shl
cmp
cwtl
inc
push
rorb
inc
imul
addb
mov
cmp
lcall
sahf
in
or
incl
enter
sarl
ja
mov
shlb
inc
cli
push
imul
sub
xchg
push
lret
subl
aam
mov
mov
or
sarb
inc
aam
out
mov
pop
add
sahf
nop
xchg
mov
add
sbb
xor
fcom
add
out
mov
sbb
insb
btr
xchg
fcompl
daa
out
and
jmp
je
sub
pushf
jae
sub
and
push
test
xchg
gs
mov
push
or
and
outsl
test
inc
jo
inc
xchg
jns
or
ret
jbe
pop
fsubrl
cmp
and
or
pop
enter
or
jno
orb
pop
pop
push
xchg
lret
shlb
or
inc
lea
cmpb
loopne
jnp
jmp
push
pop
sbbl
cmp
in
mov
mov
push
sbb
xchg
push
insb
cmpl
fwait
sbb
adc
adc
pusha
cs
dec
mov
cwtl
cmp
sub
sbb
add
aas
xchg
out
adc
mov
lods
leave
xchg
mov
scas
push
pop
push
inc
mov
sub
roll
rep
mov
fxch
in
xchg
sub
jnp
add
mov
pop
push
dec
out
lods
push
movd
jns
enter
and
inc
dec
push
cmp
adc
in
nop
xchg
xor
sub
dec
push
cmp
adc
sbb
inc
or
lcall
dec
iret
pushf
jl
sbb
adc
sbb
or
jmp
add
sub
icebp
mov
sub
pop
dec
xorb
sub
add
cmpsb
hlt
mov
add
movsl
insl
int
mull
shl
cmp
add
test
jb
sub
es
loopne
fnstenv
lahf
push
mov
or
and
push
xor
dec
addr16
fwait
loopne
push
xor
out
js
je
mov
cwtl
mov
js
mov
shlb
push
mov
pop
push
bound
jne
jle
shrb
in
push
aad
ja
lret
divb
and
adc
mov
data16
inc
test
jecxz
sub
or
ljmp
xchg
movsb
sub
push
mov
or
xchg
fisttpll
shll
rolb
cmp
jmp
hlt
in
mov
pop
cmp
addl
cmp
out
faddp
push
incl
push
cmp
movb
jne
inc
sbb
sub
add
scas
fsubrp
or
sbbl
adc
lret
rcrl
std
adc
sbb
rcrb
cmpsl
insl
mov
or
stos
fnstsw
and
mov
xor
cmpb
stos
lret
mov
mulb
icebp
lds
sub
je
jmp
aam
xor
fisttps
push
rcll
inc
fdivr
push
movsb
mov
adc
sub
pop
aam
inc
std
movb
adc
push
mov
cmp
xchg
xchg
dec
icebp
fldenv
add
xchg
sbb
xchg
and
and
xchg
ret
fsubrs
clc
mov
aaa
jns
jbe
cmpb
ja
dec
adc
cmc
mov
arpl
mov
or
inc
mov
push
xchg
push
cmpsb
jo
test
lds
cmp
adc
push
sbbb
xchg
inc
sub
sbb
inc
mov
inc
and
ss
pop
je
ja
testb
push
test
cwtl
push
insl
ret
in
not
pcmpeqd
lea
xchg
cmp
add
jae
jne
mov
push
test
dec
js
xchg
sbb
push
mov
push
jo
ret
sbb
pop
jmp
inc
sbb
mov
inc
ljmp
mov
mov
fildll
setg
sbb
fsubrs
or
imul
lea
pusha
jno
fldpi
pop
xchg
inc
mov
xchg
push
lds
pop
adc
xchg
hlt
add
test
sbb
push
mov
adc
push
daa
dec
orl
mov
add
clc
cmpsb
rcrb
push
aad
rclb
push
shrb
lea
int3
sub
sti
enter
push
rcrl
sub
jle
cs
or
mov
jne
jnp
add
or
xchg
movsl
data16
shrl
add
mov
cmp
pop
mov
or
or
fstpl
sbb
pop
pop
xor
mov
flds
or
sbb
and
hlt
pop
dec
xlat
sbb
mov
dec
jne
repz
pop
sbb
sbb
or
or
dec
sub
test
inc
push
testl
push
imul
jg
fsubrs
push
mov
icebp
mov
jg
push
dec
inc
jle
inc
push
xchg
test
rcr
pop
dec
mov
insb
loope
mov
mov
or
js
aad
nop
sarl
sbb
xor
adcb
cmp
test
jp
icebp
push
xchg
sbbb
call
and
mov
movsb
ret
loopne
cmp
pop
adcb
sbb
mov
sbb
test
lock
and
jbe
inc
outsb
rclb
inc
sub
jg
mov
mov
or
mov
ret
rorb
ds
mov
mov
arpl
push
add
add
or
pop
dec
inc
loop
xor
cmp
popf
push
adc
add
rcrb
add
sbb
jne
sbb
jg
pop
fcomps
lods
call
sub
pop
inc
repnz
dec
fldl
rcll
pop
xor
cmpsb
xor
in
test
cld
nop
stc
fidivrl
inc
filds
in
pop
dec
mov
dec
jae
xchg
and
push
enter
mov
fcomip
or
push
mov
or
push
cltd
loopne
insl
cmp
mov
mov
xor
sub
cmpsl
or
dec
js
mov
movsl
cwtl
xchg
push
test
enter
lods
sbb
jb
dec
jle
mov
push
subl
mov
lret
sbb
sbb
mov
repnz
push
cs
sahf
push
scas
or
test
jne
sub
dec
sub
jp
push
jo
add
loope
shll
dec
mov
sbb
inc
jg
jno
je
adc
pop
mov
push
lods
pop
dec
js
xchg
push
mov
mov
adc
mov
xchg
mov
push
sub
and
arpl
cmp
cltd
xchg
jne,pt
sub
popf
insl
xchg
dec
jb
nop
mov
sub
lods
les
dec
ds
jns
mov
dec
inc
mov
adc
sbb
out
mov
test
cmp
cmpsb
in
movsl
cld
fstl
xchg
lock
dec
jge
imul
mov
inc
movsl
or
add
add
mov
or
adc
gs
pusha
or
enter
add
sub
adc
sub
add
cmp
xor
cmp
add
add
jl
xor
sub
adc
mov
sub
mov
add
imul
in
hlt
pop
sbb
and
sbb
jge
mov
sub
or
push
xchg
add
push
sub
sub
xchg
outsb
nop
lret
sub
pop
pushf
adc
clc
inc
pop
or
and
gs
bound
arpl
xor
xchg
mov
outsl
test
ret
rorb
dec
add
pusha
and
push
andl
cmp
mov
add
xlat
sub
icebp
inc
and
clc
in
pop
or
jecxz
cmpsl
sub
out
dec
push
in
loopne
xor
xchg
es
pop
inc
dec
stos
pop
dec
leave
dec
in
pop
addl
and
movsb
aas
sub
mov
sub
movsl
pop
pop
push
ljmp
mov
mov
scas
xor
xor
sub
add
adc
cli
push
test
int3
inc
das
lods
cs
jle
ss
inc
sbb
ret
xlat
das
inc
pop
inc
int
cs
add
nop
aas
mov
dec
ror
pop
push
mov
jae
cld
mov
jp
add
test
leave
mov
sbb
movsl
leave
push
pusha
fbstp
inc
ds
jbe
push
lahf
xchg
leave
icebp
loopne
sub
pusha
pop
negb
add
or
ljmp
test
jno
add
xor
add
imul
mov
rclb
ret
mov
sidtl
xchg
and
sahf
fsub
iret
push
push
ret
dec
adc
and
les
dec
dec
sub
or
hlt
sti
push
mov
inc
inc
add
insb
or
repz
cs
cmp
out
add
and
jbe
jns
fnsave
adc
cmp
and
adc
loope
push
shl
cmp
or
mov
or
and
jp
and
mov
pop
pop
add
and
cmp
jae
mov
nop
bnd
inc
push
mov
adc
and
dec
sub
add
or
clc
lret
lds
popf
loope
xor
jl
pop
sub
sub
push
push
push
ficompl
push
adc
ret
mov
pop
sub
das
xorl
imul
pop
insb
add
enter
mov
inc
add
jb
fldl
sahf
test
or
in
mov
hlt
dec
call
pop
ret
mov
push
lds
push
imul
sbb
add
mov
cmp
hlt
cli
cmpsb
ja
es
cmp
movsb
jno
lea
jle
push
mov
inc
popa
imul
movb
mov
inc
pop
in
dec
cmp
pop
pop
dec
pop
xorb
lods
push
les
mov
inc
push
sub
insl
dec
mov
es
jge
cmpl
pavgb
shlb
sarl
inc
pop
lds
cmpsb
mov
mov
xor
dec
push
fimuls
jne
pop
inc
pop
jne
rcrl
rorl
arpl
or
dec
pop
sbb
call
pop
xchg
inc
insb
push
xor
rorb
lock
cmc
fs
add
push
mov
popf
xchg
push
out
adc
lea
pusha
jo
fiaddl
imul
and
adc
imul
and
jo
insl
in
mov
adc
ret
jne
adc
jge
fstl
sbb
xor
rolb
inc
out
and
sbb
das
sbb
mov
mov
mov
or
adc
jl
lea
popa
insb
add
aas
mov
pop
xor
shll
stc
or
inc
mov
mov
repz
adc
out
pop
hlt
or
xor
into
fcmovnb
push
dec
cltd
mov
and
sub
insl
pop
cmp
push
lret
leave
inc
iret
mov
gs
movsl
pop
dec
sbb
sub
xchg
push
shlb
orb
inc
pop
jnp
repnz
add
add
dec
xchg
pop
scas
rcrb
repnz
imul
insb
arpl
call
je
or
jg
xor
sbb
test
inc
stos
mov
sub
mov
push
mov
test
je
test
push
sbbl
sbb
jne
push
pop
dec
lcall
inc
lds
shlb
aas
out
test
and
dec
and
mov
outsl
jg
sbb
mov
call
inc
adc
inc
xor
pop
test
les
add
xchg
and
fisttps
add
and
repz
call
adc
outsl
rcrl
push
addr16
dec
test
lods
push
sbbb
and
xorb
sub
sbb
or
push
jnp
add
mov
jp
andl
and
loop
inc
mov
or
xor
and
sub
lahf
add
push
mov
jg
sbb
jo
les
xlat
add
or
test
or
mov
mov
sub
adc
movsl
bound
xchg
xor
push
dec
push
inc
sbb
sub
or
notb
push
cld
jae
inc
inc
stos
aas
xor
mov
adc
xchg
sub
or
jnp
add
sbb
lret
push
jb
pop
sub
and
adc
leave
inc
add
out
push
adc
sbb
js
mov
xchg
ret
xchg
and
push
incl
push
pushf
test
movsl
cmpsl
shrl
sub
outsb
sbb
push
je
dec
fdivrl
sbbl
enter
cltd
adc
subb
adc
add
adc
or
and
ret
mov
jbe
shrl
pusha
jb
in
push
add
jge
add
dec
call
sarl
dec
rclb
movsb
add
orl
mov
dec
cmp
mov
lcall
jo
scas
movl
outsb
cmp
call
scas
mov
mov
inc
popf
xchg
test
push
and
and
add
cmp
in
add
xchg
sahf
push
pcmpeqw
jno
aam
and
and
and
push
and
and
push
dec
mov
cmpsb
fldl
xchg
mov
add
pop
inc
pop
add
js
xor
and
dec
pop
jmp
inc
negl
aam
out
push
filds
jge
or
adc
lods
loope
inc
push
aad
push
add
pop
cmp
mov
ret
jg
and
sbb
test
in
movsb
push
dec
ja
dec
fsubrs
or
leave
and
pushf
sub
aas
fwait
call
xor
js
mov
jg
inc
popf
jl
seto
sbb
jb
add
or
call
pushl
leave
push
push
pop
sbb
pop
shrb
addl
jo
arpl
dec
loope
push
pusha
call
sub
mov
push
adc
and
pop
mov
pusha
stos
out
push
and
out
test
cli
xchg
mov
inc
and
sbb
cmp
adc
aam
lods
sbb
mov
adc
mov
aam
inc
inc
push
aaa
and
dec
setno
ret
jmp
ret
iret
pop
adc
xor
incl
pusha
in
sub
lods
test
fs
stos
push
in
jns
cmpsl
stc
push
sub
push
insl
lods
les
push
add
js
repz
rol
mov
jp,pt
add
fimuls
in
or
daa
lods
ret
xor
cmp
sbb
jl
dec
push
xchg
imul
in
adc
aam
pop
pop
insb
cmpl
test
cmp
add
or
xlat
sub
inc
fsubs
idivl
insb
lds
flds
stc
stos
inc
mov
ds
adc
sarb
js
aad
xlat
adc
decb
rcrl
inc
ret
adc
adc
and
imul
rol
add
enter
jl
jns
sbb
push
test
adc
mov
jg
jl
adc
xchg
xorl
sub
dec
sbb
repz
xchg
addl
sub
xor
dec
adc
dec
fcmovnb
add
sbb
shrl
add
pop
mov
push
adc
adc
or
cwtl
push
loopne
aam
sub
sub
mov
insb
mov
mov
pop
pusha
nop
imul
nop
fwait
inc
inc
push
push
bound
iret
repz
cmpsl
mov
cmp
and
add
sub
dec
pop
inc
lcall
test
xchg
movsb
jge
mov
leave
add
fmull
stos
test
movl
xor
jb
inc
ss
push
pop
push
and
and
pop
adc
or
inc
xchg
push
or
sbb
loopne
xor
clc
das
pop
sbb
xchg
repnz
cmp
dec
cmpb
sbb
ret
push
jg
push
movsb
aam
insb
pop
pop
push
movsb
fs
pop
xor
cmpl
sub
aam
adc
sbb
test
pop
pop
xor
pop
inc
test
sub
cmp
jne
and
push
or
lock
loopne
pop
mov
bound
loope
movsb
mov
sbb
adc
adc
dec
cmc
nop
sub
mov
cmp
popa
dec
xchg
cmp
inc
push
pop
adc
push
mov
pop
movsl
roll
sub
rcll
and
pusha
mov
add
cmpsl
sub
pop
fs
popf
mov
in
sbb
mov
push
mov
inc
das
popa
sub
shll
je
test
movsl
dec
daa
or
push
cmpsl
sub
test
in
jge
sbb
mov
push
jae
xor
add
add
or
sub
nop
cltd
add
pushf
mov
data16
into
xor
dec
xchg
push
movsb
test
push
or
mov
sub
addr16
pop
mov
add
sub
inc
push
add
sub
dec
sbb
imul
add
int3
in
mov
adc
xor
jmp
or
jmp
mov
xchg
push
mov
pop
imul
add
lahf
xor
push
push
jns
test
sub
movsb
outsb
leave
pop
mov
pop
sbb
or
xchg
scas
outsb
xchg
lahf
push
sbb
test
outsb
lahf
push
cs
and
movsb
lahf
mov
lahf
push
sub
pop
xor
icebp
xchg
and
aas
subl
pop
movsb
push
jl
dec
test
mov
add
and
aas
inc
int
imul
sbb
dec
push
mov
inc
and
adc
into
and
xchg
mov
or
mov
pop
cmp
adc
adc
mov
mov
add
lods
movl
sbb
cmpsb
push
popa
movsl
rorl
dec
adc
xchg
pop
imul
nop
dec
push
mov
adc
jg
xor
jg
push
inc
aas
cmpsb
xchg
cmp
inc
incl
and
add
enter
lock
and
fucomp
push
and
movl
mov
bound
cmp
mov
mov
test
jg
jle
rcrb
push
popa
fadds
test
dec
fs
and
sub
mov
fdivr
dec
push
dec
jg
ljmp
xor
sarb
inc
jbe
sub
addr16
pop
cmp
dec
cli
xchg
mov
add
rclb
dec
popf
mov
out
dec
push
stos
add
xor
test
inc
fbld
dec
popf
mov
outsb
adc
mov
mov
icebp
call
jle
or
add
inc
adc
sbb
jne
shrb
fs
xor
insb
mov
adc
adc
adc
lea
dec
mov
sub
outsl
pop
sbb
rolb
dec
jp
sbb
lahf
push
mov
lahf
sub
adc
push
or
dec
xor
add
rolb
adc
or
adc
mov
xor
sub
and
cmc
pop
mov
je
pop
lods
mov
mov
and
push
std
js
add
cmp
mov
adc
add
scas
nop
add
inc
and
or
jmp
clc
ror
pop
or
jp
sahf
mov
insl
xchg
jmp
cmpsl
jle
push
sub
mov
cmpsl
sub
fsubl
mov
clc
cmpl
mov
aad
mov
jne
mov
scas
in
sub
xchg
aaa
insb
insl
pop
je
popf
jl
cmp
gs
sbb
push
cmc
test
mov
fbld
sub
js
adc
adc
inc
push
sbb
movsl
sub
add
or
jnp
out
gs
or
ss
jp
rorl
add
and
pop
add
ret
push
or
jno
sahf
inc
mov
sbb
and
in
inc
pop
data16
movsb
test
cmp
cs
cmpsb
pop
jl
push
xchg
jmp
push
out
dec
pop
adc
inc
xor
sbb
test
cmp
mov
dec
lods
jo
push
inc
push
adc
mov
sbb
xchg
lahf
add
jmp
adc
loopne
lock
imul
and
pushf
popa
loope
xchg
cmpb
mov
inc
push
xchg
pusha
mov
and
in
push
decl
push
repnz
clc
les
mov
sbb
sahf
rclb
cmc
aad
sbb
sbb
add
xor
bound
or
push
cmp
iret
add
or
enter
loopne
push
fisttps
loop
ret
fbstp
or
incb
push
jmp
fwait
push
sbb
jmp
inc
test
jno
push
leave
sbb
sbb
inc
xorb
sub
sbb
loope
in
pop
inc
jo
inc
push
inc
call
aaa
jl
dec
add
or
sub
pop
dec
mov
inc
pop
testl
lcall
jne
vmread
sbb
icebp
inc
adc
inc
adc
rcr
int
inc
mov
mov
scas
adc
lock
and
rolb
ja
sub
stos
mov
shrb
pushl
dec
push
fwait
jb
mov
sbb
mov
adc
fs
nop
mov
sbb
adc
mov
xor
dec
xor
inc
adcb
loop
and
mov
sbb
int
xor
mov
pop
cmp
add
rcll
mov
and
fcmovne
xchg
or
xchg
test
jg
cli
dec
fdivl
cmpsl
push
or
pop
shl
and
sbb
pop
sbb
xor
pop
loope
push
xchg
mov
sub
test
mov
xor
push
dec
mov
and
push
pusha
pop
adc
mov
and
pop
push
push
xchg
nop
jg
xchg
lret
adc
fistl
sahf
or
aaa
jbe
xor
xor
lea
and
cmp
jle
lds
sbb
push
and
pop
pop
test
mov
pop
cmp
out
inc
and
push
and
adc
push
sub
push
and
pop
jg
sub
mov
mov
adc
and
cmp
dec
add
xchg
nop
in
inc
dec
mov
add
adc
add
add
push
mov
add
pop
mov
or
mov
insb
xor
mov
in
sub
mov
jge
xor
inc
les
jb
and
dec
inc
clc
and
pop
bound
or
inc
inc
pop
mov
and
andb
stc
push
and
mov
pop
inc
and
xor
cmpsl
jne
push
jbe
xor
into
dec
pop
and
cmp
test
pop
cwtl
inc
inc
inc
mov
das
sub
adc
mov
add
invd
fisttps
mov
call
inc
scas
dec
fcompl
das
pusha
cwtl
push
outsl
and
push
enter
adc
mov
xor
in
sbb
test
sub
xor
jecxz
or
jno
jmp
lock
mov
in
dec
xor
jp
in
inc
repnz
test
addl
xchg
xchg
adc
cmpsl
sub
pop
xorl
or
cmp
stos
jg
mov
mov
jns
fdivr
push
call
inc
xchg
adc
push
cltd
push
add
rcll
rcrl
jno
jns
out
int3
cmp
adc
jge
jg
shrl
das
in
jg
leave
rclb
sbb
cs
add
add
test
test
sub
movsl
pusha
enter
adc
fcmovnbe
and
iret
sbb
inc
add
mov
outsl
sub
jge
in
cltd
mov
mov
mov
add
imul
push
dec
pop
lret
adc
imul
adcl
or
sub
push
pop
fs
insb
and
pusha
pop
or
cs
or
sarl
push
mov
push
mov
dec
mov
ds
int
jns
jp
push
lods
stc
imul
pop
and
xchg
mov
lcall
shlb
inc
fcoms
insl
sub
sub
xchg
mov
imul
xor
js
out
pushf
add
mov
sub
and
dec
cmp
aas
and
daa
cmp
mov
dec
push
and
and
fmulp
add
loopne
test
in
pop
enter
enter
enter
leave
test
aam
bt
pusha
int
jmp
mov
sbb
and
sbb
jns
mov
add
xchg
push
xor
inc
cld
push
insb
insl
lahf
jecxz
addr16
cmp
push
scas
pop
jmp
test
xchg
orb
in
mov
call
mov
inc
add
xchg
ds
stc
stc
andl
pop
adc
test
ds
mov
jne
inc
push
jb
jmp
js
addb
or
ret
dec
xor
cld
hlt
add
test
fisubs
inc
or
xor
gs
pop
pop
or
jne
imul
add
pop
sbb
test
insl
jmp
or
or
jmp
test
jo
xor
and
lea
outsb
pop
or
or
bound
adc
sub
loopne
gs
sub
adc
jbe
mov
mov
or
push
push
inc
lods
push
jo
push
jp
or
mov
cmp
orl
mov
and
pop
jo
pop
xor
pop
mov
pop
sar
add
pop
testb
jne
movzwl
adc
add
idiv
sub
sarl
push
cmp
dec
ret
push
cmp
aas
mov
gs
ret
mov
mov
cmp
jl
adc
mov
adcb
dec
add
push
add
outsb
lods
jecxz
mov
adc
xor
sbb
ja
insb
mov
in
ss
and
sti
negb
cmpsb
add
or
fstp
and
shrb
cltd
pop
idiv
mov
xchg
dec
movsb
iret
aad
ja
clc
fistl
jo
ret
adc
sbb
cmp
sahf
loop
sub
sbb
mov
subb
add
leave
rolb
mov
add
jae
sbb
cwtl
fbld
fadd
fstpl
pop
fstp
cmp
dec
mov
aam
int3
aad
xor
rcr
ss
jns
or
fadds
push
call
sbb
jbe
and
cs
xor
xor
faddl
and
fdivs
sbb
pop
aas
sbbl
and
sbb
clc
daa
xor
push
or
xor
insl
or
fs
js
fs
pop
xchg
pop
les
mov
mov
ret
jg
xchg
adc
movb
sbb
sarb
mov
hlt
sbb
mov
xor
mov
mov
lock
cwtl
adc
mov
or
push
insb
and
cmp
out
fucom
inc
mov
push
xchg
mov
inc
dec
push
lock
test
hlt
push
sbb
insl
ret
xor
mov
add
ficompl
xorl
jne
cmp
mov
inc
cld
adcl
sbb
rol
in
rcrb
rcr
scas
inc
cmpsb
test
jmp
fisttpl
dec
add
clc
add
fistpl
outsl
jle
push
mov
out
or
lods
push
data16
aaa
out
or
or
add
mov
loopne
jmp
repnz
mov
sub
lock
pop
push
sub
leave
jg
adc
loopne
inc
cmp
pop
insb
in
jbe
mov
fmuls
shrl
inc
cmc
mov
add
fimull
adcl
cmpsl
push
pushf
arpl
mov
lock
pop
sub
or
loope
fsubrp
inc
push
scas
inc
ret
loop
test
lea
fmul
or
inc
sbb
or
dec
push
fldenv
cmp
lret
add
mov
or
fs
push
div
dec
mov
dec
lock
adc
clc
add
fidivrs
hlt
dec
push
jo
push
add
call
out
push
xor
loopne
fmull
push
xor
push
pusha
roll
andl
les
movb
or
ss
adc
cltd
dec
mov
ret
sahf
or
or
in
call
in
stos
fdivrl
shlb
mov
mov
je
data16
mov
or
push
inc
adc
inc
add
push
iret
cmp
xchg
roll
or
cmp
rorl
add
inc
sub
push
pop
clc
fldl
and
sbb
mov
mov
loopne
test
imulb
mov
pop
sbb
push
sarl
inc
pushf
push
mov
inc
pop
inc
or
sti
cmp
mov
shl
adc
push
int3
dec
sbb
push
add
mov
mov
test
dec
dec
mov
push
mov
pop
xchg
in
je
cmp
cmpb
mov
sbb
sbb
jmp
cltd
outsl
pop
adc
bound
icebp
cmpsb
xor
les
rcrl
push
mov
and
cmpsl
push
xchg
cmpsb
push
push
je
mov
adc
loopne
leave
ss
iret
movsl
loopne
ret
stos
es
sbb
sahf
pusha
das
jp
pushl
call
sti
lret
sub
ret
cmp
jo
push
mov
mov
adc
call
inc
push
data16
cld
cwtl
add
add
loope
push
xchg
fmull
in
rolb
adc
push
in
cltd
fadds
jb
fs
sarb
dec
cltd
adc
nop
pop
call
loope
add
addl
add
inc
sub
pusha
xchg
add
pop
aaa
cmp
xor
and
inc
push
fwait
xor
dec
and
or
call
xor
and
xlat
mov
outsb
and
pop
push
fcomps
mov
repz
pop
xchg
xor
adc
sbb
cmc
dec
and
jo
pop
adc
adc
push
push
sub
inc
push
pushf
or
mov
xor
sub
in
out
adc
mov
push
mov
pushf
pusha
cmp
lret
sub
je
add
xchg
fs
mov
xor
pusha
fsubrl
pop
fs
sbb
push
adc
xor
sbb
ja
xor
mulb
cs
mov
jle
or
push
fabs
addr16
orb
jge
clc
push
inc
add
or
loope
stos
ljmp
sbb
mov
daa
scas
pop
dec
idivb
daa
or
rolb
jl
dec
dec
and
and
jb,pt
sbb
inc
jbe
iret
insl
daa
scas
dec
scas
das
aad
adc
rcr
add
xor
adc
or
jne
js
fcomps
cmp
jb
mov
xor
icebp
mov
sbb
inc
push
mov
orl
mov
jnp
add
imul
jne
movsl
add
movsl
pop
call
jae
pop
jb
sub
insl
dec
sub
in
addr16
mov
arpl
and
and
test
sbb
sti
mov
pop
ret
adc
jmp
push
push
aaa
push
movzwl
or
rorb
fimull
jne
xorl
jb
imul
clc
add
in
adc
lock
push
in
hlt
xchg
pop
dec
movsl
adc
add
pop
fstl
pop
js
inc
pop
add
movswl
add
add
fcompl
adc
dec
ja
pop
add
pusha
and
or
or
pmulhuw
hlt
push
add
sub
popa
adc
ret
xchg
and
nop
dec
loop
xchg
mov
lea
push
test
add
push
add
pop
ret
mov
cltd
fstpl
dec
cmpb
and
mov
rcll
shrl
mov
jmp
add
push
in
adcl
jp
std
jp
push
cmp
mov
lret
adc
sbb
push
pop
pop
push
dec
adc
and
pop
dec
cmp
push
js
xor
dec
das
sub
dec
or
sub
roll
xchg
cmp
sub
hlt
sarl
mov
nop
push
jle
xor
push
out
mov
in
push
rorb
adc
or
rorb
jns
inc
mov
add
jmp
aas
loope
jmp
add
je
mov
xor
das
pushl
or
or
shlb
dec
add
jp
pop
inc
je
int3
jbe
mov
inc
fadd
mov
lret
lods
ret
mov
push
inc
or
test
pop
addl
sbb
push
xchg
xchg
lods
dec
sti
xlat
sbb
int3
aaa
orl
push
inc
add
test
mov
push
inc
pop
mov
sub
adc
cmp
pop
adc
mov
inc
sub
pop
and
and
loop
fnstcw
xchg
into
push
outsb
adcl
pop
mov
mov
jmp
push
jbe
xor
test
sub
fisubrl
push
stos
int3
jp
inc
bound
push
jns
xorb
movsl
cs
lret
sbb
and
in
dec
sub
shlb
cmp
out
dec
sbb
pop
call
add
cwtl
out
js
jne
push
fldcw
inc
jp
pusha
xlat
in
pop
jne
int3
push
imul
cmp
arpl
mov
cmp
dec
xchg
stc
mov
pusha
ja
and
dec
and
cltd
mov
push
mov
adc
imul
xor
pop
rcrl
inc
sub
and
je
repnz
sbb
lea
cltd
and
cld
xor
iret
or
adc
and
mov
fidivl
mov
clc
pop
xchg
shl
jmp
mov
sbb
scas
or
xchg
jne
push
add
jnp
outsl
popa
inc
rcrl
pop
adc
or
aam
push
and
shlb
inc
push
jl
cmp
test
adc
call
jbe
data16
loope
outsl
adc
xor
cmpsb
and
cmpsb
dec
imul
nop
push
imul
loopne
or
loopne
popf
fs
enter
adc
push
jbe
and
divb
scas
inc
mov
es
aam
cmpl
test
sub
lods
addb
adc
or
inc
or
inc
scas
movsl
and
push
jnp
or
data16
rcrl
sbb
and
xor
xor
lea
test
jno
imul
aas
imul
push
or
mov
sub
xor
push
fisubrs
jbe
lret
inc
roll
enter
fwait
insb
jecxz
daa
pop
popa
ds
loopw
push
mov
pop
sbb
fwait
cmp
jl
addr16
cmp
mov
insb
xorb
call
cld
pop
es
cmp
add
sarb
fisubrs
fld
shlb
push
push
scas
nop
push
add
dec
and
popf
test
jo
fsubrl
test
mov
and
add
mov
adc
bound
cli
push
push
add
adc
push
mov
mov
inc
les
inc
adc
push
mov
int3
mov
mov
jmp
dec
adc
lret
popl
pop
shr
mov
mov
jl
shrb
cmp
and
js
pop
add
pop
rcrb
pshufw
cwtl
dec
andl
insb
push
es
adc
fisubl
stc
add
leave
pop
sub
mov
xor
movsl
insb
xchg
stos
stos
dec
push
xchg
add
push
xchg
aad
pop
or
fs
neg
pop
cmp
cltd
add
jbe
les
inc
push
add
les
daa
lea
out
pop
jge
adc
or
sbb
popf
inc
push
xor
add
pusha
dec
lods
cli
insb
dec
mov
mov
sbb
pop
outsl
pop
jne
add
jo
sub
mov
mov
jo
adc
add
sub
pop
sub
mov
in
jg
pop
or
lea
sub
outsl
dec
fs
jmp
dec
mov
add
push
daa
mov
fldl
push
faddl
sub
icebp
inc
ret
les
clc
lock
loopne
or
and
sbb
cmp
xor
xor
sub
xchg
or
leave
js
fcompl
clc
push
imul
into
jnp
mov
out
pop
shlb
jnp
movsl
xchg
sahf
pop
push
sbb
dec
push
push
xor
cmpsb
sub
jecxz
adc
cmp
ljmp
test
je
and
mov
scas
movsl
add
xchg
jmp
lods
push
cli
rolb
mov
rorl
xchg
bts
or
pop
mov
bound
imul
addr16
mov
fsub
and
fst
fstl
sub
roll
fs
faddl
xchg
pop
adc
bound
call
popf
enter
mov
xchg
mov
sbb
add
daa
sbb
fnstsw
movsb
dec
cmp
test
cmp
push
cmp
lock
and
mov
push
lods
push
inc
jmp
out
popf
sbb
in
adc
push
clc
mov
pop
roll
inc
cvtpi2ps
data16
out
jge
push
inc
into
popf
scas
dec
jp
test
jae
inc
outsl
fmul
aas
test
sbb
sub
add
out
movsb
sbb
test
jb
cmp
push
icebp
pop
rorl
pop
and
pop
pop
lahf
and
arpl
mov
inc
add
sbb
jns
push
aas
lock
dec
mov
and
mov
dec
rcrl
add
xchg
ret
mov
jne
jb
das
mov
add
jmp
mov
or
mov
aaa
pop
lahf
add
inc
mov
ds
js
pop
pop
mov
add
add
adc
inc
and
xor
pop
nop
scas
push
mov
dec
sbb
subb
add
in
pop
adc
insb
mov
inc
fsubl
mov
ret
xor
sbb
pop
push
sbb
lcall
lea
es
add
xchg
lcall
push
sbb
add
push
in
jmp
push
mov
dec
or
jno
mov
je
push
push
lcall
addr16
push
sbb
and
adc
cmpb
pop
rolb
mov
mov
inc
and
sbb
cwtl
pusha
mov
cmp
jbe
jae
push
daa
push
pop
inc
add
out
push
inc
mov
or
pop
out
jmp
ret
push
inc
addr16
xor
lock
push
rcl
std
dec
dec
pop
xor
dec
jl
inc
cmp
jnp,pn
rorl
mov
or
lcall
and
lret
sbb
add
or
dec
push
cmpsb
iret
and
pop
mov
mov
mov
mov
imul
cbtw
ljmp
cld
fildll
test
je
dec
mov
push
xor
cld
popw
add
js
js
add
xor
in
pop
jne
sbb
mov
add
xchg
out
add
jmp
add
roll
jl
mov
adc
dec
push
cmp
xchg
push
sbb
jle
or
in
jbe
mov
lods
jae
dec
enter
push
push
cmpsl
popa
xchg
arpl
jg
add
add
je
push
xchg
push
lods
scas
and
pop
gs
lret
adc
and
pop
sbb
add
inc
and
mov
pop
mov
test
and
mov
adc
lods
ja
push
sub
dec
mov
cmp
sub
pop
inc
jae
or
lret
clc
or
cld
lea
inc
sbb
inc
jl
and
pop
insl
rorl
fbstp
cmpl
dec
aad
jbe
or
jnp
inc
add
shll
jle
add
dec
lods
jne
dec
jle
or
ret
adcl
cmp
clc
cmpb
inc
sbb
add
sahf
push
push
add
and
popa
mov
inc
daa
data16
adcl
inc
lock
pop
hlt
lea
sarl
dec
popf
xorb
bound
sub
mov
push
mov
inc
fstpt
mov
jb
hlt
jne
adc
pop
or
inc
pop
or
pop
push
sub
je
and
pop
mov
je
xchg
ja
inc
push
insb
dec
or
clc
sub
cltd
pop
add
loope
add
test
lds
sbb
push
call
je
push
mov
push
insl
imul
clc
or
clc
jno
push
push
ss
js
mov
push
loop
ret
or
push
cmpsb
push
pop
imul
adc
push
add
push
clc
dec
inc
inc
push
or
pop
sub
imul
push
je
adc
je
or
add
cmpsb
jnp
js
inc
adc
int3
in
push
sbb
inc
add
test
or
lea
bndstx
out
insb
pusha
enter
jmp
rolb
add
xor
dec
into
ret
xchg
xor
test
adc
aam
pop
push
sbb
in
es
cmp
mov
pop
adc
imul
push
mov
ljmp
sbbl
mov
lock
call
ljmp
push
loopne
sub
and
cmp
xchg
imul
js
int
cmpb
inc
sub
push
cltd
ret
and
jno
out
loopne
mov
lahf
or
outsb
mov
sarl
hlt
inc
inc
inc
pop
stos
inc
push
push
xor
push
jge
dec
aaa
sti
enter
cmp
mov
bound
test
push
ret
and
aaa
cmp
dec
inc
sub
add
add
push
test
jecxz
adc
loopne
mov
call
push
js
subb
cmp
mov
jle
or
outsl
mov
sbb
adc
xor
les
xchg
outsb
add
pushf
adc
mov
sahf
data16
movsb
push
jle
cmpsb
jg
insl
mov
push
inc
stos
inc
adc
sbb
sbb
lea
stos
lcall
or
inc
push
dec
mov
add
or
or
push
movsl
xor
sub
pop
shl
mov
loop
les
in
in
pop
test
and
loop
and
call
cmp
adc
les
cmp
test
sub
dec
dec
shr
outsl
pop
adc
adc
jp
add
jmp
fdivl
mov
inc
shlb
mov
sub
mov
push
ficompl
xchg
pop
cmpsb
mov
insl
sbb
add
cmp
inc
incb
jb
inc
out
xorb
jp
lea
jae
dec
dec
or
out
pop
ret
jne
ss
add
push
jmp
push
jecxz
das
sub
sbb
pop
ss
fmuls
add
jne
int3
js
inc
lahf
dec
loopne
test
jg
fldt
inc
and
sahf
adc
add
mov
push
insl
or
rorb
jo
enter
mov
adc
lcall
insb
enter
jl
push
enter
data16
addb
jp
nop
mov
sti
fdiv
or
push
ret
and
jns
add
adc
and
mov
aaa
push
das
gs
pop
jb
xor
cmp
sub
cmpsb
or
adc
test
jp
and
push
int3
xlat
outsb
adc
lea
mov
xchg
notb
push
xchg
fcompl
ficompl
jns
add
dec
mov
popa
negl
shll
jmp
xor
pop
or
fcoms
arpl
adc
jecxz
clc
fcoms
jnp
xor
pop
cmpsb
mov
and
into
push
lds
adc
roll
test
push
mov
cmp
push
bound
sbb
rclb
int
rorb
or
adc
add
mov
pushf
sbb
jo
lds
mov
insl
sbb
out
lea
popa
fidivl
ja
jle
rcll
clc
ss
inc
lock
mov
sub
int3
add
scas
or
mov
add
mov
mov
dec
test
stos
mov
dec
pop
sbb
xadd
mov
mov
out
cmp
dec
sbb
rcrl
lret
jle
clc
movsl
dec
aaa
repz
inc
arpl
pop
inc
insb
add
jo
sbb
sub
ror
data16
subb
xor
mov
xor
push
add
in
stc
adc
loopne
and
sub
fidivs
dec
in
loop
adc
or
bound
and
inc
sbb
dec
call
loopne
add
imul
add
pop
cmp
dec
test
ret
xor
push
or
sub
xchg
int
aaa
and
mov
movsb
mov
sbb
adc
fcomps
lods
les
iret
in
enter
dec
iret
jae
inc
lea
pop
xchg
and
adc
adc
dec
mov
push
sub
inc
cmp
shll
cld
mov
pop
push
shlb
mov
cmp
push
movsl
mov
sbb
add
sub
loopne
jg
push
push
scas
into
ja
scas
pusha
fstp
popl
sbb
inc
jo
xchg
and
outsl
and
sub
xor
mov
stc
jns
rol
mov
push
push
negl
and
add
outsb
push
sbb
dec
and
hlt
or
inc
fs
pop
inc
js
jl
cmp
ret
adc
loope
cs
xchg
pop
push
movsb
pop
mov
fsubl
push
loope
iret
adc
daa
dec
xchg
push
and
pushf
push
sahf
push
rcll
pop
out
xchg
sub
push
push
push
loop
inc
xor
add
rclb
clc
scas
ljmp
xchg
insb
adc
adc
sbb
ret
inc
push
jl
sub
jl
data16
mov
add
xor
jmp
xchg
int3
scas
adc
rol
outsb
mov
adc
jmp
mov
xchg
cmp
fs
into
ss
flds
jae
push
sbb
add
pop
cmp
fcomps
dec
cmp
adc
sbbb
loope
add
fwait
test
rolb
mov
mov
adcb
sbb
mov
or
es
push
and
xchg
dec
movsb
loopne
fwait
loop
loop
shll
lea
mov
sub
jne
popa
inc
faddl
ret
adc
sbbb
mov
jo
cmp
in
movsw
mov
daa
imul
xchg
xchg
outsb
imul
call
mov
xchg
movsl
hlt
jo
inc
daa
xor
pop
mov
pop
push
add
add
pop
out
cmp
ja
and
mov
insb
je
rcl
xchg
rorl
inc
cmp
sbb
mov
push
jns
mov
aam
xor
shrb
lods
sbb
out
xor
cmp
jb
nop
rcrb
gs
ljmp
mul
sub
push
push
cwtl
push
push
sub
push
iret
jbe
sub
jmp
cli
sub
dec
adc
push
fmull
jl
and
sub
pusha
jge
popa
femms
jo
push
adc
and
sbb
add
aam
mov
sti
jmp
push
mov
dec
xlat
outsb
or
inc
lret
and
lret
mov
pop
rcll
pushf
cld
outsb
divl
xor
jl
leave
jae
loope
enter
arpl
cmp
mov
nop
sub
es
lock
orb
or
fadds
inc
pop
lds
negb
sbb
pop
dec
pop
sub
sbb
cli
sbb
mov
jmp
sub
push
xchg
ret
add
mov
ret
sbb
cmp
push
adc
outsb
or
mov
ret
lea
push
sub
pop
jl
idiv
sbb
or
lock
cmp
subb
pusha
jo
sub
adc
ja
cld
adc
leave
sub
js
ja
fcoml
adc
push
push
sbb
xor
push
add
daa
pop
xor
push
dec
mov
mov
lods
dec
int3
xchg
adc
inc
test
pop
mov
andl
shll
cwtl
mov
and
es
jl
mov
xchg
cmc
in
pop
push
js
out
add
inc
cwtl
fiadds
xchg
jge
jb
push
rorb
sbb
mov
xorb
pushf
cmp
inc
mov
xor
mov
dec
aaa
xorb
orl
ss
stos
push
jge
movsb
xor
les
test
les
scas
daa
add
add
xchg
fimull
sub
shrb
jo
rorl
pusha
aam
push
aad
movsb
or
mov
in
inc
sub
jne
mov
mov
dec
mov
dec
mov
mov
sarl
mov
or
or
xchg
cmpsl
adc
loope
loopne
cs
mov
and
adcl
jg
pop
testb
je
es
nop
or
xlat
mov
mov
mov
mov
push
ret
dec
call
and
push
fisubrl
xchg
xor
call
cmp
jbe
js
jnp
sbb
adc
stos
fnstcw
jb
sahf
les
mov
insb
mov
push
in
popa
jecxz
or
and
cmp
cmp
nop
jnp
scas
push
push
and
repnz
sbb
sbb
aam
arpl
nop
jo
je
or
fstpl
xor
adc
ficompl
or
enter
xor
data16
popf
addb
add
lock
cmp
inc
push
jl
in
mov
mov
je
mov
or
cmp
push
xor
mov
and
aam
mov
sbb
je
les
or
in
cs
xor
cs
add
inc
adc
sub
je
sbb
jnp
daa
pop
inc
arpl
rclb
fdivrs
push
pop
in
sbbl
sbb
in
or
lcall
jns
push
sub
mov
jne
rcll
test
mov
mov
shll
push
outsb
sbb
sti
push
fucom
pop
in
call
mov
scas
pop
rolb
jecxz
aam
ffreep
stos
inc
sub
cmp
dec
cmp
fcmovnbe
push
insb
or
out
cmp
cmp
cmp
mov
add
jl
jo
and
test
xor
and
sbb
add
insb
loopne
test
shl
push
and
add
cmp
data16
dec
or
mov
into
adc
mov
jle
aaa
push
lahf
orl
popf
cmpsb
mov
mov
add
xchg
inc
xor
into
addb
push
outsb
adc
hlt
and
cld
inc
les
gs
loope
push
lock
mov
rcrl
xchg
mov
push
enter
add
fldcw
or
push
aam
enter
and
rcl
sbb
or
adc
insb
push
inc
shlb
pop
dec
mov
dec
call
cmp
in
enter
or
iret
jmp
das
mov
enter
ja
xor
cmp
lods
sub
sbb
jae
xor
xchg
icebp
pop
jg
loopne
cmp
je
inc
movzwl
push
pop
ljmp
idivl
and
pop
nop
cmpsb
cmp
xor
clc
call
jl
pop
cs
rcr
leave
xor
push
dec
dec
xchg
push
mov
and
pop
enter
fcomp
or
mov
xchg
push
icebp
or
dec
imul
nop
std
push
and
dec
cmpl
mov
mov
xlat
xchg
jbe
jl
pop
addl
inc
sub
in
rolb
pop
and
mov
jbe
ds
add
clc
xchg
add
adc
iret
js
push
push
xor
or
jmp
push
movzbl
and
cmp
flds
or
push
pop
jle
push
mov
jp
cmp
movsl
fimuls
jl
jmp
sub
addb
shl
mov
mov
push
jno
std
or
pop
incl
inc
dec
arpl
mov
repnz
pop
ja
mov
jbe
adc
faddp
in
add
mov
or
push
cmp
cmp
and
pushw
jne
mov
orb
pop
ja
and
jo
mov
jle
data16
cmpl
xor
push
cmp
xlat
push
dec
leave
scas
or
pusha
dec
in
cmp
cwtl
jnp
out
push
jg
andl
sub
pop
sbb
push
adc
mov
js
insb
add
push
cmp
imul
jbe
decb
jns
rcrb
push
pop
jne
push
cwtl
push
cmpsb
jo
aam
xlat
rorb
push
loop
pop
mov
jns
test
fstpt
inc
inc
xlat
push
and
stos
bound
shlb
push
pop
mov
xchg
jg
scas
add
add
and
shrb
sub
aas
addb
lea
jecxz
lods
shrl
push
jo
or
repnz
inc
es
cmp
loopne
add
jle
push
pop
pop
ret
or
in
add
adc
lea
jae
and
cltd
cmp
xchg
push
pop
ret
mov
push
bound
nop
ret
mov
shll
inc
bound
orb
pusha
dec
sbbb
ljmp
adc
inc
lea
push
fsubl
sbb
push
and
clc
adc
jle
outsb
push
push
push
xchg
js
in
faddl
and
add
mov
mov
loopne
fnstenv
sahf
dec
ficoms
sahf
jmp
movsb
dec
fiadds
xchg
not
js
fs
outsl
or
orb
jae
xchg
and
imul
pusha
gs
lret
pop
adc
clc
add
arpl
in
insl
sub
mov
mov
inc
xchg
aad
mulb
inc
insb
or
or
mov
mov
fcoms
ss
inc
xlat
xchg
push
das
xor
mov
je
std
mov
mull
fsubs
clc
shrb
aaa
shll
popa
and
sbb
in
add
jg
xor
pusha
lock
push
movsb
push
ljmp
lea
xchg
out
mov
cmp
fwait
and
sbb
clc
stc
or
and
sbb
mov
or
fisubrl
pushf
xchg
jae
push
das
sti
rcl
push
dec
mov
add
jbe
aam
loopne
xchg
mov
ret
int3
sub
mov
push
mov
lds
out
out
rorb
mov
in
cltd
push
pop
fistps
cmc
and
cmp
inc
mov
adc
js
dec
out
adc
cltd
sbb
pusha
pop
dec
test
xor
mov
jbe
or
adc
pop
imul
adc
cmpsb
cmp
in
cmpb
sub
movsl
pop
xor
mov
add
in
call
push
cmp
loop
outsl
fs
inc
or
inc
add
inc
or
add
bound
dec
push
push
push
mov
insb
lea
mov
sti
pusha
scas
push
push
adc
pop
enter
leave
out
or
pop
xchg
and
bound
loopne
aaa
orb
adc
inc
mov
mov
sub
dec
cmp
and
arpl
lret
xchg
add
test
jb
xor
mov
and
loope
or
loop
rcrb
add
sbb
push
push
or
push
add
rcl
add
xchg
adc
fwait
aaa
xchg
cmpl
fdivs
inc
jmp
push
pop
aaa
dec
mov
adc
mov
lret
push
inc
or
inc
aam
cmovge
stos
mov
rorl
push
cltd
idivl
sahf
push
mov
xor
push
sbb
jns
push
push
add
loopne
or
adc
hlt
sub
loope
xchg
push
mov
mov
sub
jo
loope
inc
adc
test
cmpsl
popl
pop
jno
inc
or
insb
push
or
adcl
push
shl
sub
inc
mov
jg
sub
add
sub
inc
enter
daa
pop
cmpsb
and
jl
dec
out
or
orb
jp
add
testl
xor
scas
outsl
dec
movsb
mov
in
call
inc
mov
inc
and
ret
es
add
popa
lds
ljmp
push
jmp
lock
or
lret
mov
push
imul
add
xorl
int3
pusha
cmp
jp
mov
jl
sbb
jge
hlt
inc
clc
std
xchg
pop
lock
iret
cltd
fmuls
fs
fidivs
push
inc
adc
jle
cmp
jne
jbe
inc
xchg
and
lcall
inc
adc
xchg
mov
fsub
adc
xor
jne
pop
or
inc
les
loop
dec
mov
les
push
mov
inc
inc
outsl
sbb
jg
mov
push
outsl
lods
jge
or
outsb
ja
or
dec
inc
cmpsl
cmpl
movsl
mov
cmp
std
lea
std
dec
and
sbb
add
call
and
inc
out
fstps
je
jge
dec
cmpl
mov
cltd
adc
pusha
and
mov
inc
in
push
jmp
mov
jo
push
out
das
arpl
add
jae
jnp
xor
enter
ret
pop
push
adc
mov
sbb
test
push
xor
xchg
sub
cmc
mov
ret
and
test
andl
or
loopne
sub
dec
sbbl
in
pop
push
leave
adc
sbb
daa
inc
push
jb
pop
inc
inc
dec
rorl
and
dec
add
push
repnz
inc
testb
add
fimull
shlb
mov
rolb
test
je
xor
pusha
inc
cmpsl
add
add
sbb
data16
sbb
rolb
dec
fisttpll
dec
clc
adc
fildl
mov
sbb
or
test
adc
adc
add
lods
jmp
pop
sub
outsl
bound
push
and
int
jnp
loopne
les
fiaddl
rorl
test
out
data16
into
lods
adc
xor
repnz
or
jp
add
cld
push
mov
ds
cmp
mov
adc
in
inc
inc
cmp
cs
cmp
add
or
inc
push
repz
add
jb
pop
outsb
movsl
xor
rorl
xchg
je
sub
jo
aam
test
add
fcom
push
xchg
or
jle
jbe
fs
xchg
cmp
ret
insl
jmp
in
or
mov
mov
movsb
iret
mov
lret
enter
rolb
and
loopne
jb
ret
xchg
cmc
mov
movsl
js
lahf
xchg
xchg
movsb
rolb
mov
mov
or
and
xor
push
push
add
ror
push
in
aam
inc
xchg
dec
fcomps
or
push
stos
xor
in
pop
push
sub
lods
pop
xchg
sbb
and
sbb
sbb
add
jbe
and
adc
fdivr
push
bound
jl
movl
ds
aaa
and
add
fcomps
mov
cmp
jne
cmp
add
adc
aad
std
movsb
imul
data16
mov
mov
out
inc
pop
repnz
xor
xor
scas
pop
cmp
ss
mov
or
faddp
adc
pop
pop
adc
and
loopne
cmpsb
imul
call
or
lret
and
fsubl
dec
mov
insl
adc
push
nop
sahf
push
mov
sbb
dec
mov
popa
sar
jle
pop
jnp
cwtl
lret
xor
cmp
or
xchg
or
or
pop
fdivrs
hlt
and
scas
ret
jnp
inc
mov
inc
mov
mov
loopne
sub
stos
addps
imul
add
inc
sub
nop
mov
sub
xchg
xor
int
mov
push
mov
test
mov
ud0
xorb
jne
mov
clc
mov
lret
inc
dec
push
adc
inc
fimuls
insb
xor
mov
inc
xchg
rclb
cmp
jl
push
cmp
cmp
add
adc
pop
les
sbb
adc
pop
or
aas
or
fwait
cmp
cmp
xor
add
inc
pcmpeqd
addl
push
stos
cltd
adc
jp
xor
pop
cmp
in
adc
inc
ljmp
sub
mov
adc
jp
xchg
idivb
inc
xor
pop
push
sbb
adc
fs
and
loope
test
xchg
mov
sti
add
lcall
inc
xor
lds
pop
cltd
jbe
cmp
loopne
push
and
push
in
xor
outsl
ret
inc
lods
mov
test
mov
icebp
sub
jbe
push
push
sub
lret
loopne
fisubrl
jl
fmull
aaa
dec
icebp
mov
jp
pushl
xchg
inc
faddl
jmp
orl
pushl
mov
sub
pop
push
push
pop
xor
or
lds
fsubrs
scas
mov
ss
push
or
xchg
lods
sti
aam
and
daa
pop
push
loope
es
xchg
cwtl
pop
sub
or
push
lea
sbb
pop
sbb
add
shlb
push
add
loop
dec
jg
mov
add
cmp
popa
imul
int3
sbb
out
add
pusha
int3
fistps
jb
sub
push
and
lods
lcall
mov
mov
inc
pop
movsb
je
jecxz
mov
in
add
popf
sub
push
sub
call
iret
pop
and
scas
jge
aam
int3
pop
stos
add
pop
jp
and
push
ds
xchg
xor
pushf
es
push
pop
mov
rorb
cmp
and
js
rclb
sbb
loopne
imul
in
push
mov
mov
sub
je
dec
shlb
out
hlt
pusha
add
xchg
mov
sub
data16
sub
mov
ss
sub
pop
xlat
loopne
popa
sub
stos
and
aas
xor
rcr
mov
iret
inc
lock
dec
xrelease
push
mov
pop
sbb
pop
sbb
ss
test
ss
inc
push
add
testb
lds
or
clc
cmpsb
loopne
and
mov
test
cld
xchg
fwait
mov
push
orb
add
in
popa
addl
jecxz
adc
daa
push
sbb
jmp
test
or
icebp
mov
movsb
jmp
out
ret
xchg
or
xor
subb
add
cs
jge
mov
imul
xor
adc
sahf
fistpll
adc
jge
je
xchg
testb
cli
jno
mov
mov
pop
je
cmpsb
imul
or
je
fstpt
push
pushl
xchg
lea
les
sahf
xorb
mov
in
add
or
jo
lret
lea
clc
push
xor
lods
adc
jmp
into
mov
adc
pop
xor
neg
add
xchg
in
dec
das
loope
clc
xchg
adc
into
pusha
add
fistps
orl
test
sub
mov
jo
lcall
frstor
pusha
mov
andb
fldt
pop
xchg
popf
push
dec
movsb
sbb
daa
popa
jae
adc
rcrl
inc
mov
scas
jge
jb
ret
push
mov
lea
aam
mov
cmpsb
xchg
push
jl
add
add
sbb
add
adc
jo
pop
jmp
push
jnp
push
ret
pop
pop
and
out
int3
mov
mov
cmp
push
les
jle
xor
ja
mov
lret
push
push
js
sub
xor
and
data16
loopne
push
dec
les
adc
je
lods
je
jmp
or
inc
psrlq
xchg
fbld
xchg
sbb
jo
nop
clc
ljmp
add
addb
cld
push
push
sub
dec
call
adc
jmp
cwtl
mov
cs
jne
inc
sbb
xor
inc
jle
sbb
test
ret
add
cli
rcrl
inc
fcom
add
sbb
push
hlt
sub
cmpsl
addr16
loopne
js
arpl
mov
mov
inc
or
xlat
or
outsb
out
push
or
sti
adc
dec
addr16
cmpsl
cmp
xchg
jp
fwait
jp
aas
mov
mov
xchg
jecxz
push
fidivrs
sbb
stc
in
xor
xor
jne
xchg
movsb
jecxz
in
adc
and
lcall
ss
lcall
cmp
push
adc
and
push
inc
insb
out
lcall
int3
and
jno
and
fdivs
and
sub
icebp
rcll
adc
popa
subb
sbb
sbb
pop
cmpl
outsb
or
gs
data16
xor
outsb
test
mov
cmp
dec
lcall
xor
test
mov
push
push
adc
jns
add
push
rcll
add
lock
jmp
movb
pop
hlt
add
imul
xchg
addb
inc
jne
or
pop
dec
les
push
xchg
pushf
mov
fimuls
hlt
bound
cmp
jne
inc
and
inc
or
push
movb
loope
push
out
adc
je
push
rcrb
and
fst
movsl
mov
sub
leave
push
aam
out
cli
aam
dec
clc
mov
js
add
cwtl
cwtl
jns
scas
je
movsl
lret
jne
sar
movsb
fldcw
adc
loop
adc
scas
mov
pop
or
gs
adc
add
iret
jecxz
inc
adc
add
jb
dec
clc
mov
or
push
jae
ret
lcall
notl
mov
roll
mov
in
dec
xor
cmp
mov
sub
xor
int3
ss
mov
inc
add
adc
lods
andl
push
and
stc
cmp
or
lahf
ret
xchg
and
das
test
fistpll
dec
cmp
stc
js
xchg
mov
push
push
sbb
loope
pop
sbb
push
pop
subb
mov
inc
sbb
test
pop
lock
push
insb
mov
jecxz
lcall
repnz
clc
jg
add
xchg
outsb
sbb
add
jge
fnstenv
push
and
movsl
xor
sub
and
push
call
add
icebp
dec
pop
jne
leave
cmc
mov
adc
push
enter
out
testb
bnd
dec
and
push
xor
enter
push
xor
pop
mov
out
xor
imul
sub
rorl
shll
rcrl
imul
or
cmp
sbb
sbb
inc
jns
sub
add
dec
sbb
add
add
add
sub
mov
lret
adc
movb
bound
pop
xor
icebp
pop
rolb
mov
xchg
fisubrl
push
out
cmp
or
pop
pop
loopne
cmp
out
repz
mov
sbb
push
or
jge
adc
xor
pop
pop
dec
cmp
mov
xchg
std
test
adc
adc
cmp
mov
invd
add
cld
es
or
xchg
fwait
aam
or
pop
sbb
inc
decb
jne
jp
jo
pop
and
jl
adc
scas
jmp
incl
jno
mov
mov
leave
mov
mov
clc
lea
jmp
mov
lock
shrl
pop
jmp
movsb
adc
pusha
mov
fidivrs
popf
movsb
shl
jbe
and
fstpt
mov
bound
xchg
adc
out
sub
test
push
push
inc
add
test
jae
pop
sahf
cmpsl
aaa
ds
dec
adc
mov
outsb
sbb
dec
inc
movsb
add
push
cli
lods
dec
xor
xor
jb
xor
inc
ret
mov
mov
cwtl
mov
ljmp
js
sub
rorb
test
test
xchg
pop
addl
and
and
scas
out
jo
mov
sub
cmp
mov
adc
adc
movb
jo
jnp
jnp
jmp
push
je
or
jle
shlb
jmp
add
adc
imul
mov
jbe
ds
mov
inc
sahf
stos
es
or
push
or
push
cmp
pop
adc
mov
and
or
aad
adc
hlt
jle
adc
jl
or
stos
mov
je
or
or
xor
clc
add
mov
sbb
mov
inc
cmp
inc
andl
adc
sub
mov
movl
push
mov
ss
shll
in
cwtl
cld
inc
hlt
andl
hlt
sbb
fmull
outsb
jo
xchg
pop
mov
sbb
sbb
sub
scas
xchg
push
andb
inc
cmc
xor
mov
and
mov
sbb
xor
sub
pop
inc
getsec
mov
dec
fsubrs
bound
push
dec
adc
lret
mov
ret
bound
cmpsb
sub
add
xchg
pusha
call
pop
es
lea
push
push
push
mov
es
aam
push
and
lock
stc
adc
les
jns
les
lock
wrmsr
xlat
mov
add
daa
jecxz
push
addr16
aad
test
cmpl
xor
in
inc
or
dec
imul
cmpsb
lock
lret
data16
adcl
rolb
jle
into
push
test
nop
adc
push
dec
jl
shll
add
mov
test
add
fbstp
pop
xchg
test
ljmp
cs
pop
adc
shll
or
pop
add
popf
inc
das
or
clc
sbb
jbe
cmp
lcall
adc
pushf
cwtl
push
ret
bound
sbb
dec
outsb
mov
es
xor
or
add
cs
or
fmuls
mov
pop
jb
jo
pop
movsb
bound
mov
or
outsb
aad
imul
hlt
add
push
mov
fwait
adc
or
insb
nop
push
shrl
add
dec
mov
or
and
sbb
or
test
fs
or
and
mov
cli
pop
push
movsb
mov
add
mov
cwtl
in
adc
push
daa
dec
push
pop
add
ror
and
rclb
or
decl
xchg
sub
in
pop
dec
mov
xchg
xor
leave
jg
adc
xchg
add
aaa
xchg
call
mov
lock
outsb
push
inc
inc
dec
add
repnz
add
andb
and
pop
sbb
pop
xor
rclb
jne
movswl
push
sub
push
movsb
push
mov
leave
xchg
jnp
test
shrb
repnz
fldl
loopne
outsl
dec
fsub
aaa
fldz
push
test
data16
cmp
aas
loopne
faddl
test
push
push
push
sub
inc
int3
es
fs
pop
and
adc
sbb
das
sbb
stos
adc
psubb
sbb
xor
or
mov
cmpsb
push
adc
je
cmc
popf
add
xchg
inc
mov
pop
jb
mov
aad
ljmp
inc
enter
fildll
mov
mov
dec
test
dec
sbb
leave
jbe
fld
xchg
fstp
jmp
cmpb
insl
push
into
and
loopne
out
mov
jl
ud0
xchg
or
xchg
xor
and
rolb
rcrb
xor
lahf
dec
loopne
test
ret
mov
inc
mov
hlt
push
jns
roll
shll
add
ror
xor
add
les
orl
add
leave
nop
leave
cmp
dec
sub
xor
push
cmovs
push
push
or
jle
ret
call
cs
mov
xor
push
aam
add
xor
jo
ret
add
fadds
push
cli
sbbb
pop
pop
pop
das
xorl
inc
push
xor
mov
pop
inc
xor
cmp
test
add
fsubrl
call
mov
aad
adc
iret
inc
dec
sub
ja
jmp
xor
and
mov
mov
ds
daa
xor
push
xor
jb
dec
andl
out
add
mov
pusha
mov
xchg
adc
enter
adc
add
and
sti
imul
cmp
cmp
ret
mov
into
mov
ret
addr16
mov
xlat
mov
sbbl
dec
sub
pop
shl
es
std
sahf
sbb
adc
jnp
fldt
mov
jae
sub
aam
pop
and
xor
sub
mov
adc
jbe
lock
int
imul
adc
push
jne
inc
push
das
inc
jmp
subl
in
mov
bound
pop
pop
pop
flds
add
pop
mov
push
inc
popa
dec
push
jo
inc
jmp
mov
dec
or
fisubs
sub
push
add
data16
dec
iret
add
adc
aad
sbb
fldt
popa
fs
out
dec
push
imul
mov
inc
adc
cs
imulb
cmp
cmpsl
inc
sbb
fstp
test
xor
xchg
shlb
ror
sub
loopne
sbb
les
arpl
int3
add
bound
addb
jae
cmp
adc
lcall
cmp
rorb
cmp
add
adc
sbb
imul
ja
sbb
movsl
mov
push
inc
loope
or
dec
fcomps
sub
pop
clc
add
imul
fs
add
leave
add
mov
push
inc
mov
and
je
or
xchg
xchg
and
lds
and
add
mov
int3
popa
lcall
dec
mov
mov
lcall
and
mov
mov
in
mov
mov
mov
xor
adc
clc
and
rorb
fstpt
movsl
mov
cmp
movsl
push
xchg
or
lods
push
iret
add
push
cmp
push
stc
and
or
in
or
mov
call
popa
xchg
adc
jbe
mov
sbb
sbb
bound
js
mov
sahf
imull
push
lcall
mov
mov
mov
pop
pop
andl
sbb
cltd
inc
movsb
lods
mov
bound
test
cwtl
lea
lods
jne
or
clc
xlat
int3
popa
push
inc
and
pop
jmp
inc
inc
icebp
pop
push
adc
outsl
jb
push
test
push
in
mov
xor
jg
mov
sub
ret
out
inc
inc
mov
cmpl
sub
je
cmp
fmull
cmp
add
xor
jnp
test
aam
iret
cmp
or
pop
ret
inc
or
popa
sahf
aad
sub
data16
push
xor
sbb
or
int3
and
add
ljmp
and
mov
pop
les
or
popa
fiadds
loope
ss
adc
sub
sbb
push
mov
pop
movsb
test
mov
out
xor
in
jne
push
and
xor
lds
rorl
lcall
rolb
sub
push
pop
daa
mov
pop
shl
fistl
scas
pop
or
je
jmp
mov
daa
ljmp
sbb
inc
pop
or
add
lret
aam
in
jge
add
xchg
sbb
adc
inc
mov
mov
pusha
xchg
jle
jne
cmp
fdivl
test
loopne
int
call
cmc
test
and
rcr
repnz
or
pop
shlb
iret
cs
jae
sub
int3
jl
cmp
and
adc
scas
loopne
inc
xor
jle
xor
ret
or
push
xchg
dec
dec
inc
sub
push
test
test
push
sbb
fisttpl
push
mov
xor
test
xchg
inc
push
les
decb
push
in
adcb
jb
into
mov
mov
sbb
jecxz
mov
out
push
fnsave
push
pop
xchg
cmpsb
pop
jo
icebp
fdivl
jns
jbe
push
and
jbe
in
or
in
out
pop
push
add
sub
jo
xor
lret
mov
ret
push
addb
adc
xchg
or
and
pusha
test
push
call
sbbl
push
insb
inc
sbb
jae
pushl
push
fdivr
mov
js
decl
dec
adc
sbb
or
add
out
xor
je
sub
sbb
push
add
xor
adc
subb
out
jmp
cmp
push
inc
sub
cmp
orb
andl
and
js
out
ret
lock
or
sub
adc
dec
daa
jo
sub
es
xchg
rolb
jle
add
andl
pushl
sahf
movsl
not
or
lea
pop
test
les
ffreep
or
test
and
xchg
jp
into
or
sbb
pop
addl
dec
mov
call
adc
inc
or
cs
iret
stos
data16
push
sbb
repz
clc
dec
cmp
xchg
je
inc
movsb
push
nop
cld
popf
popa
jecxz
sbb
subb
push
cs
mov
fildl
push
lods
mov
dec
push
dec
or
or
mov
mov
push
imul
mov
mov
xor
dec
xorl
push
jnp
movb
add
mov
sbb
insb
ljmp
xor
insb
cmp
pavgw
or
enter
adc
and
pop
push
cmp
notl
xchg
xchg
xor
daa
adc
jns
adc
out
pop
add
stos
pop
ret
test
adc
outsl
loopne
aam
call
pop
mov
iret
pop
lods
mov
add
cmp
je
or
je
add
lahf
adc
pop
loopne
pop
les
or
push
pop
loop
mov
sub
pushf
xchg
pusha
xchg
adcb
dec
lahf
adc
scas
inc
jae
daa
out
testl
mov
sahf
adc
roll
add
sbb
add
and
ja
divb
or
divb
cld
mov
clc
sub
and
fs
jp
sbb
js
enter
pop
mov
or
in
or
popf
or
int
leave
and
sbb
mov
dec
inc
sub
sub
arpl
lcall
sub
imul
clc
popa
jo
dec
dec
ja
movzbl
ret
dec
dec
or
and
ret
adcb
fnstsw
jmp
adc
adc
ja
andb
and
jmp
insb
push
sub
jle
pop
add
cmpsl
div
mov
bound
jecxz
iret
ret
fcoml
out
ret
lret
ds
test
xor
out
push
adc
sbb
mov
stc
idivl
cmp
add
adc
add
add
aam
push
xchg
mov
or
sub
and
sub
and
xor
add
or
out
aam
jne
aas
add
cld
in
push
add
jmp
mov
lret
xchg
loope
inc
fdivl
es
and
rolb
mov
and
sub
pop
adcl
aam
cwtl
xor
pop
dec
adc
sub
and
pop
inc
rorl
and
jmp
scas
xor
gs
call
decl
sbb
ret
sbb
shll
mov
push
xor
mov
xchg
pop
cmp
aad
push
das
cmp
out
mov
pop
xchg
xchg
dec
mov
add
or
imul
aam
xchg
cmp
je
xor
add
incl
xor
shll
push
hlt
dec
jne
inc
fsubrs
sbb
cmp
xlat
inc
mov
insb
popf
jo
loopne
xor
mov
jae
add
cmpl
jg
cmp
lcall
inc
lods
or
mov
push
mov
pusha
aad
add
mov
adc
sub
jnp
dec
adc
stos
pop
outsl
loope
and
arpl
mov
mov
add
test
xor
imul
mov
in
mov
js
jle
push
mov
and
mov
mov
repnz
lcall
or
aas
cmp
jl
test
mov
and
dec
or
and
cmp
inc
inc
sub
jbe
dec
and
cmp
mov
cmp
cs
dec
mov
push
mov
sub
sbb
jbe
lods
push
inc
pop
sub
ja
pop
ja
add
sub
jbe
jo
dec
nop
pop
mov
int3
dec
ret
stos
push
cmp
lret
mov
inc
popf
inc
xchg
push
xor
mov
xchg
out
in
out
shrl
add
push
dec
shlb
mov
jmp
fadds
and
orb
rcll
je
inc
sbb
fidivrl
inc
shlb
pop
into
outsb
loope
mov
test
ret
jno
mov
jl
cmpl
and
cmp
xor
xchg
shld
or
add
or
lds
ja
mov
jge
or
orl
stc
js
mov
inc
sbb
pop
push
popf
or
cmp
cmp
loope
push
sarb
pop
rcl
ficompl
or
test
fisttps
bound
js
jne
into
dec
in
js
cmp
mov
popa
and
aad
push
fisttps
cmp
loop
pop
and
pushf
jbe
fisubrs
jne
mov
sahf
jne
into
rcl
js
pop
dec
adc
mov
inc
pop
je
inc
pop
ret
in
or
mov
add
xor
fmul
inc
and
in
das
shrb
insl
mov
sbb
sub
fiaddl
xchg
push
xlat
sti
les
xchg
and
loopne
fimuls
call
imul
or
push
dec
and
pop
mov
or
sbb
sub
or
ret
pop
jne
jbe
mov
test
lea
inc
push
mov
jbe
je
push
nop
push
push
push
setl
cmp
je
dec
les
cmpb
xor
lcall
jo
and
cld
push
jmp
or
mov
cwtl
addb
jmp
push
xchg
push
xchg
les
insb
sti
sbb
je
lahf
inc
lods
test
dec
rcrb
or
pop
mov
pushf
pop
faddl
mov
mov
xchg
cmp
or
in
arpl
mov
in
pushf
cltd
negw
shll
mov
pop
jecxz
lret
mul
jmp
push
mov
or
adc
push
rolb
and
cmc
push
dec
pusha
mov
pushf
mov
subb
mov
pop
mov
movl
jns
push
pusha
ss
cli
and
inc
movsl
mov
push
inc
cld
cmpl
cmpsb
jl
push
je
jmp
xchg
add
add
rcr
adc
js
test
sbb
jo
out
pushl
movsb
fistps
loope
outsb
and
mov
call
dec
inc
scas
xor
add
data16
je
push
mov
ja
lods
mov
lea
in
call
or
push
and
pusha
stos
sub
ljmp
test
and
mov
xchg
cmp
sub
lods
lahf
inc
test
lret
sub
push
cmc
xchg
sbbl
fisttpll
rclb
pop
and
push
orl
pop
jmp
mov
dec
int
test
into
imul
ds
sub
and
mov
test
jo
call
sbb
hlt
loope
popf
sub
xor
outsl
add
in
cwtl
push
xchg
push
and
outsl
or
sub
cmpsb
push
xchg
out
rcrb
xchg
repz
and
roll
adc
daa
mov
pop
pop
adc
clc
dec
or
mov
loopne
mov
jns
dec
inc
mov
jl
adc
push
adc
mov
mov
mov
xor
mov
xchg
jae
in
loopne
pop
or
insb
ja
xchg
or
and
jae
and
and
into
push
inc
pop
call
mov
jb
xor
imul
lock
sbb
and
or
cmpsl
in
dec
out
jae
jge
movsb
xor
dec
push
jae
and
or
pusha
mov
sbb
push
adc
lea
mov
lahf
xor
jne
loopne
and
adc
repz
fsubl
and
lahf
xor
mov
sbb
imul
add
or
cmp
cmp
cmpsb
pop
icebp
or
mov
xchg
cmpsl
xchg
adc
xchg
jmp
add
pushf
aam
adc
push
or
dec
sub
ljmp
ljmp
lret
aaa
clc
xor
pop
shl
test
cmp
testb
sbb
adc
jle
add
xor
loopne
loop
fisubrs
sub
ret
jne
pop
loopne
adc
mov
das
cmp
clc
dec
sbb
push
shlb
or
mov
and
andb
mov
jge
sahf
add
or
inc
or
mov
lods
fbstp
test
data16
pop
stc
or
and
jne
xor
and
sbb
mov
mov
dec
test
inc
push
sbb
jb
mov
push
dec
or
orl
or
mov
mov
adc
cwtl
add
xorl
lock
jl
or
pusha
je
or
sbb
mov
pop
rorb
fdivrs
sbb
idivb
pop
dec
faddl
aaa
inc
addl
ss
imul
xor
adc
roll
mov
ret
rclb
jae
or
cmp
jns
and
es
jbe
adc
cmpsb
aaa
add
or
mov
jmp
pop
cltd
shr
mov
lock
xchg
insl
gs
jb
out
jo
pusha
add
push
call
mov
add
push
xlat
call
dec
mov
pop
in
outsb
outsb
mov
pop
outsl
xor
push
mov
push
shr
pop
sbb
push
call
adc
inc
mov
test
jge
cmpl
pop
and
jmp
call
adc
add
outsb
mov
test
push
push
pop
aas
xchg
insl
outsb
repnz
adc
in
inc
push
addr16
push
fidivrs
xchg
decb
push
add
testb
pop
mov
nop
add
out
push
nop
decb
pop
pop
push
inc
sub
adc
pusha
testl
push
shlb
pushf
das
or
pop
js
pop
mov
mov
adc
or
sub
popf
mov
jb
sti
mov
imul
or
gs
cld
and
insl
add
and
and
dec
mov
rcrb
dec
inc
cmp
aam
or
mov
push
jge
cmpsl
lret
ljmp
push
push
adcl
cwtl
push
push
dec
xchg
fnstsw
mov
cmpl
je
add
jo
inc
pop
xor
sahf
call
insb
push
dec
ja
or
inc
sub
aad
jl
adc
fnclex
ret
ret
mov
in
xchg
jbe
jbe
pop
sub
mov
ret
in
sahf
in
add
inc
stos
hlt
ret
adc
stos
mov
rcr
push
and
inc
dec
idivb
mov
in
scas
sbb
fnstcw
addw
pop
daa
sbb
lock
or
xchg
add
inc
inc
add
popa
xor
or
adc
fiaddl
add
sbb
repz
bound
sbb
push
and
out
add
pushf
lret
or
aas
or
fs
aaa
cs
or
inc
jmp
faddp
rol
xor
scas
jns
push
lock
pop
mov
fisubrl
dec
push
push
and
sbb
outsb
sbbl
loop
cmp
and
jne
jo
inc
mov
push
dec
dec
sti
btc
push
fnsave
and
dec
pop
frstor
fldl
adc
jnp
dec
ljmp
rclb
adc
or
addl
pop
ficompl
dec
shll
xor
in
pop
imull
mov
sub
je
mov
cmp
and
loope
loopne
or
scas
imul
daa
dec
or
leave
or
movsl
ljmp
rorb
out
fwait
inc
adc
into
jne
imul
addl
fldenv
add
ret
insb
loopne
fwait
sub
push
push
cmpsb
pminub
out
mov
xchg
call
and
lock
cmp
jo
mov
or
pop
sbb
inc
sub
je
sub
fidivrl
push
and
inc
xor
inc
outsb
out
shr
fbld
lcall
rcl
adc
add
xchg
adc
jbe
inc
mov
jmp
inc
ret
xchg
fistpll
pop
mov
imul
adc
or
jns
add
cs
mov
jne
idivl
pop
push
lea
dec
cs
fsubl
in
es
jo
pop
xor
adc
sub
xor
xchg
fprem
daa
cmp
std
fwait
sahf
jp
fstp
fists
rcrb
mov
sbb
add
adc
rcr
jge
push
mov
cmpsb
mov
je
inc
pushl
pop
das
and
pop
pop
pop
nop
mov
jo
inc
aam
push
pop
adc
pop
push
daa
push
icebp
shlb
add
sbb
testl
jmp
lret
xchg
pop
jmp
mov
cmpsl
or
cmp
mov
push
jg
push
sbb
and
ret
and
push
jge
and
xchg
push
or
fwait
pop
pop
addl
adc
inc
jg
adc
ss
out
enter
call
sub
shll
jmp
pop
dec
into
mov
pop
sarl
inc
ljmp
in
cmc
pusha
fs
int
sbb
cltd
cmp
pop
add
jne
idivl
inc
or
jecxz
add
nop
add
sbb
cmp
or
xor
jp
rcrb
dec
xor
jo
jne
les
adc
std
sbb
pop
sbb
jle,pn
nop
xchg
and
sub
pusha
jg
cs
inc
cmp
push
lock
xor
pop
dec
mov
std
mull
mov
enter
rcrb
cmp
clc
test
adc
cmp
push
imul
ds
out
pop
cmp
insl
xor
test
push
sbb
cmpb
cli
cmp
cmp
popl
icebp
or
add
ja
ret
add
cmpsb
push
sbbl
bound
mov
push
cld
sahf
arpl
mov
loopne
pop
pop
ficompl
add
or
cmpsl
pop
test
sbb
inc
ret
lods
daa
mov
insb
daa
pusha
dec
and
mov
sarb
and
mov
sahf
cld
sbb
xchg
bound
outsb
subb
jno
push
and
xor
hlt
adc
lret
scas
pop
jo
cwtl
in
ljmp
sarl
mov
jb
pop
call
repz
jo
jo
pop
add
icebp
xor
and
lock
mov
add
dec
sbb
or
hlt
sahf
outsl
push
lock
and
adc
and
insl
clc
cmp
fcomps
int3
aas
rclb
inc
loope
push
loopne
add
jecxz
xor
inc
xor
add
pop
jnp
ret
sbb
mov
sbb
cmp
xchg
jmp
mov
cmp
or
divps
ret
sub
bnd
loope
mov
adc
rorl
mov
jmp
and
or
insb
jecxz
xchg
add
in
imul
pushf
jp
daa
adcl
inc
pop
les
loopne
mov
mov
jbe
mov
cmp
or
add
je
or
aas
dec
dec
jmp
arpl
jge
in
adc
push
loope
in
out
xor
lock
xchg
adcb
in
sti
adc
ljmp
inc
mov
les
mov
mov
call
inc
dec
dec
pop
push
cld
andb
testl
pop
hlt
pop
add
movsb
dec
cs
and
sub
mov
mov
inc
cmpl
adc
pop
mov
loop
mov
push
adc
ret
popl
sbb
std
add
jns
shl
shrb
cmp
mov
mov
mov
adc
fisubrl
jecxz
add
rorb
pop
jp
push
push
mov
mov
inc
add
movzbl
insl
jae
in
sbb
lret
xor
popf
sub
mov
xchg
cmp
mov
dec
inc
mov
ficomps
and
jb
test
xor
aaa
inc
sub
fmull
fildl
rolb
or
mov
es
rolb
mov
fisubs
iret
cmp
ret
jne
lock
sbb
fiadds
sbb
add
inc
add
xor
sbb
or
cltd
rcl
in
add
or
mov
das
test
repnz
pop
ja
pop
push
mov
out
insl
mov
pusha
jo
jo,pn
mov
adc
popa
mov
test
ret
add
push
pop
lods
ja
testl
jmp
or
loope
nop
hlt
pop
mov
or
idivl
add
loope
rcrl
inc
aam
test
ret
xor
cmp
ret
xor
pop
es
adc
lods
and
div
addb
xchg
ss
outsb
gs
xor
inc
jns
add
push
sub
dec
adc
push
hlt
inc
mov
mov
addr16
aad
movsb
dec
pop
mov
mov
jmp
mov
sub
dec
mov
rorb
cmpsl
or
pop
add
xor
dec
and
int
sbb
daa
hlt
lea
clc
imul
add
push
adc
xorb
or
inc
insl
dec
je
push
mov
mov
ret
insl
lahf
or
clc
push
sbb
bound
pop
xchg
inc
dec
dec
mov
std
pop
lea
test
mov
ja
or
push
clc
out
jbe
imul
mov
fdivl
or
mov
fnstenv
rclb
testb
push
cmpb
imul
popa
lcall
rorl
push
add
or
add
pop
or
mov
cmp
or
mov
inc
movsl
scas
push
jne
lcallw
adc
adc
icebp
adc
sbb
arpl
add
xchg
popf
or
cmp
movsb
or
inc
call
jns
sbb
loopne
arpl
jne
inc
jg
push
add
popa
adc
shr
inc
mov
xor
shr
rcr
rcl
xor
shr
rcr
or
sbb
lock
std
sti
aas
sbb
out
shll
cmp
or
cmp
int3
jo
push
jbe
dec
cwtl
mov
dec
dec
fsub
sbb
sbb
inc
data16
out
adc
or
jnp
dec
adc
icebp
pop
push
into
repz
sbb
pop
mov
add
ret
jns
jmp
loopne
or
adc
subb
xchg
adc
adc
mov
adc
push
or
lcall
pop
lahf
xor
jge
xor
pop
aam
decb
xor
hlt
and
cmpsb
add
cmp
sub
movsl
jb
mov
jb
loopne
mov
mov
mov
or
test
nop
aad
pop
in
sub
es
push
adc
and
xchg
pop
enter
dec
cwtl
or
lods
adc
xchg
notb
dec
add
int
test
inc
inc
ficomps
nop
out
inc
inc
jg
or
push
je
sahf
out
insb
fs
push
dec
repz
mov
sbb
iret
repz
in
in
lock
hlt
push
iret
repz
clc
cld
cld
popa
gs
inc
divl
inc
mov
jmp
mov
mov
rsqrtps
nop
cmp
xor
add
jo
fsubs
push
lea
jl
cld
mov
and
std
cld
out
xor
sub
fimuls
pop
gs
sub
xor
pop
nop
pushw
dec
push
push
je
fsubrs
mov
lods
mov
aas
dec
mov
inc
inc
out
add
add
insl
adc
jbe
dec
dec
push
pop
add
ljmp
mov
sahf
mull
in
in
push
hlt
cld
add
jns
jl
or
adc
loop
sbb
out
sahf
out
sbb
adc
or
or
add
or
jns
aas
inc
or
movsb
loop
push
pop
insb
loop
push
add
lds
add
pop
mov
daa
outsl
add
add
cmp
and
add
inc
neg
repnz
add
outsl
pushf
orb
adc
add
inc
or
mov
inc
test
ja
andb
dec
xor
or
mov
cmp
jge
or
cmp
lahf
jno
mov
les
sbbl
xor
xadd
aaa
or
or
jae
popf
hlt
loopne
rorl
xchg
mov
cmp
aad
inc
jmp
jge
movb
inc
add
ljmp
push
push
sub
mov
add
dec
push
sbb
or
dec
mov
jbe
mov
faddl
add
push
negl
lret
ja
andb
dec
faddp
ja
mov
loopne
mov
dec
inc
rolb
fwait
lret
in
std
adc
push
or
jae
or
jae
shrd
shr
ret
dec
cwtl
sbb
sbb
loope
shr
outsb
adc
add
and
movl
xor
push
cmp
cmpsl
sar
addl
or
adc
mov
mov
je
pop
sub
jae
mov
push
rorb
mov
jo
lods
out
das
popa
or
mov
cmpsl
fs
ds
jmp
aad
inc
test
pusha
mov
sub
adc
js
mov
inc
daa
add
or
imul
cmp
aaa
sbb
out
inc
or
push
add
aam
push
sbb
pushf
jp
enter
push
outsb
cltd
loope
sbb
jne
mov
in
outsl
jmp
clc
inc
test
in
lods
clc
sub
jne
pop
cmp
jecxz
je
inc
or
dec
loope
add
adc
adc
rcr
adc
xor
in
or
cli
push
aam
mov
sbb
scas
movsl
add
cmp
adcb
or
shrb
ljmp
fsubrs
add
jb
sbb
mov
push
add
icebp
push
aam
cmpsl
inc
add
jnp
or
and
jne
inc
pop
or
xchg
hlt
mov
jno
push
mov
cmp
out
fcmove
sbb
pop
stos
push
jmp
push
pop
pusha
in
inc
inc
lret
movsb
adc
ss
add
push
popa
sbb
les
xor
inc
cmp
xchg
jne
cmpsb
sub
sub
sarb
fmull
sbb
sahf
dec
popa
lock
push
inc
out
xchg
mov
mov
mov
gs
xorb
loopne
and
mul
xchg
xor
cmp
adc
mov
popa
mov
je
push
dec
aaa
inc
sub
or
xor
ret
mov
cmp
xchg
push
insl
mov
xor
fdivrs
pop
lock
cmpl
orb
out
sbb
and
adc
mov
push
pop
add
subl
repnz
jne
push
and
mov
cmp
and
push
jae
add
pushf
mov
mov
sbb
pop
xlat
cmp
in
pop
in
xor
push
cmp
mov
inc
shll
xor
sub
pop
cmc
mov
mov
adc
mov
and
cmp
jl
cmp
add
add
pop
jb
cmp
dec
mov
sahf
dec
loope
and
orl
ljmp
cmp
pop
xchg
or
cmpb
inc
cmp
imul
push
adc
mov
adc
clc
rcrb
ret
sti
xor
push
mov
fwait
out
cmp
mov
mov
sbb
roll
mov
mov
pop
add
mov
mov
dec
test
bnd
cmp
jbe
pop
pop
jecxz
fwait
dec
divb
popa
sub
scas
mov
and
sbb
out
add
in
rcrl
jbe
pop
or
adc
popa
and
js
sub
jno
xor
adc
mov
dec
adc
clc
jp
lock
and
sub
add
push
sub
mov
or
nop
lock
je
movsb
adc
inc
dec
test
lret
mov
pop
adc
cmp
mov
hlt
push
popa
inc
mov
cmp
sbb
mov
movsb
out
xchg
call
cmc
mov
xchg
sbb
repnz
push
test
add
imul
into
mov
adc
in
inc
loopne
sbb
or
mov
mov
popf
int3
mov
xor
sbb
mov
push
lsl
or
aad
sbb
xor
hlt
shrb
or
loopne
push
test
and
xchg
jle
adc
ret
inc
push
loopne
jno
enter
cmp
je
cmp
adcl
xor
cmc
test
pop
add
ja
lock
sub
xchg
outsb
fdivs
cmpb
jne
mov
lahf
std
xor
inc
shll
fucomip
mov
push
sbb
inc
lcall
push
or
mov
cmp
push
pand
dec
xchg
xor
sbb
sbb
idiv
arpl
add
pop
cmp
je
cmp
ja
push
adc
adcb
mov
mov
mov
add
add
inc
cmp
out
cmp
sbb
add
or
test
xor
push
or
movsb
rol
imul
cmp
add
arpl
mov
fnstenv
or
lods
adc
jne
or
dec
mov
or
adc
mov
ds
xor
jle
xor
out
daa
sub
sbb
loope
jne
and
lret
sub
out
xchg
mov
add
add
cld
cmp
je
outsb
insb
jns
loopne
fdivl
out
and
daa
mov
out
push
aam
xchg
pop
arpl
xchg
cld
filds
js
clc
push
testl
std
adc
pop
je
jecxz
or
cld
ret
sbb
add
xor
mov
lods
xor
outsb
sbb
add
testb
push
xorl
jp
repnz
stos
push
inc
jno
test
add
xchg
push
ljmp
add
jb
mov
pop
cltd
test
enter
sub
inc
sub
or
inc
int3
jne
popf
push
jg
int3
aad
push
mov
push
rep
test
xor
push
and
jle
mov
lea
sbb
in
push
sbb
hlt
dec
push
testb
adc
push
shl
sub
dec
xor
fnstcw
pop
lcall
inc
adc
inc
push
jne
push
mov
dec
shll
and
inc
xchg
add
out
push
lcall
ret
insb
add
cmp
lods
rol
pop
rorb
ja
lods
adc
gs
mov
cmp
je
arpl
xchg
add
int3
jb
push
dec
mov
xchg
add
or
loop
xchg
adcb
ds
jne
jl
sbb
nop
dec
jmp
jecxz
jl
xchg
xchg
je
jns
loop
dec
cld
push
and
jmp
sbb
adc
in
inc
xlat
cmp
aaa
xor
xor
add
mov
pop
add
inc
or
sahf
adc
sti
ret
inc
and
xor
or
mov
adc
sub
cmp
repnz
aam
and
push
dec
or
jle
cld
adc
and
adc
pop
lea
jp
push
js
and
mov
lcall
sub
inc
mov
cmp
dec
call
enter
lock
sbb
lea
cmp
or
lret
adc
cmp
and
dec
add
jbe
icebp
cmp
pushf
andb
addl
or
pop
xor
add
js
clc
mov
bound
mov
inc
loopne
rcll
mov
outsb
je
mov
inc
dec
stos
mov
loopnew
lods
dec
jmp
cltd
test
mov
out
popa
out
bound
or
andb
adc
loope
dec
popa
sbbl
adc
mov
xchg
stc
mov
pop
sti
lea
sub
sbbl
cmp
ljmp
dec
mov
clc
les
inc
cmp
sbb
addb
add
fiadds
call
rcr
mov
adc
cmp
adc
loop
adc
xor
shlb
nop
into
daa
pop
fmuls
sbb
jne
call
jmp
push
cmp
je
jo
push
jae
sub
or
fwait
leave
fwait
iret
add
test
scas
movl
loopne
sub
adcl
cmp
call
cwtl
cs
and
lret
xchg
adc
nop
hlt
inc
std
pop
pop
mov
lea
cmp
add
adc
add
jecxz
popl
jne
jbe
or
mov
dec
movsl
sub
push
cld
or
clc
aas
cmpb
div
scas
jp
pop
push
pop
pop
iret
sbb
jae
dec
mov
and
adc
pop
xor
jne
andb
add
pop
out
lret
mov
push
adc
jbe
or
sub
loopne
movsl
push
jecxz
xchg
jecxz
push
mov
fiadds
xor
fsubrs
push
jmp
insb
adc
fdivrl
jp,pt
cld
dec
pop
cmp
jb
sbb
scas
pop
pop
and
xchg
movsl
mov
dec
pop
fstpt
clc
jne
ds
inc
inc
jo
sub
add
adc
lods
and
je
iret
lahf
adc
in
mov
cmpsb
popf
out
jne
add
fwait
jo
mov
call
push
push
jns
xchg
addl
xor
push
rcr
mov
ja
jbe
rcrl
or
mov
imul
adc
and
sarb
sbb
push
jae
pusha
mov
add
rcll
and
mov
sbb
ljmp
sbb
mov
mov
test
cs
xchg
imul
xor
or
push
xchg
cmp
push
jmp
mov
dec
mov
shlb
je
movsl
jecxz
xor
adc
sub
mov
inc
imul
in
jne
jb
mov
push
inc
xor
pop
inc
xor
xchg
jle
jbe
cld
fmuls
sub
imul
inc
inc
jae
rolb
popa
xor
aaa
xor
inc
test
pop
outsb
jnp
adc
push
push
pop
pop
subb
sbbb
or
or
xlat
incb
stos
or
or
inc
mov
decb
mov
xchg
jnp
adc
sub
xor
xor
ljmp
dec
xor
pop
mov
cmp
into
rep
mov
lock
outsl
loopne
add
and
sbb
call
add
dec
or
add
decl
and
inc
bts
jmp
add
ja
and
sub
mov
or
aaa
push
dec
aas
and
mov
outsb
aas
loop
push
stos
inc
mov
cmc
xlat
rclb
mov
pop
add
lock
mov
out
or
add
mov
testb
xor
lcall
cmp
iret
inc
xor
cs
je
cwtl
outsb
sbb
inc
cmpsb
sub
mov
cltd
inc
pop
cmpl
add
ror
dec
dec
jbe
in
jg
mov
mov
cmp
and
or
inc
dec
xchg
gs
xor
test
inc
mov
xor
push
movsb
popf
push
xchg
add
nop
xchg
push
aad
cmp
fisttps
sti
mov
cli
sbb
pushf
sbb
or
xor
pop
push
cmp
lods
cmp
dec
mov
rorb
dec
repz
fsubrp
push
in
aam
les
loopne
ds
orl
jmp
and
sub
sti
nop
push
lds
fbld
jb
cld
test
pop
nop
mov
push
fadds
add
fildll
pusha
push
fists
sub
push
or
out
ficomps
insb
je
test
rorb
xchg
cld
ffreep
out
sbb
mov
mov
and
pushf
and
cmp
pop
and
inc
inc
xchg
imulb
rcl
dec
xchg
adc
nop
push
loop
add
sub
lea
push
ret
cmp
xchg
cmp
jbe
adc
mov
ja
loopne,pn
je
mov
sub
mov
shlb
sbb
or
ret
jnp
ret
je
inc
jmp
xchg
jmp
pop
shlb
sbb
jmp
pop
subb
test
ljmp
mov
jno
mov
cli
sub
loopne
mov
std
or
nop
lcall
jmp
adc
jns
pop
push
sbb
push
inc
dec
ficomps
rclb
test
test
pusha
or
push
and
add
mov
add
xchg
sub
popa
shlb
xor
adc
mov
cmp
aas
xor
adc
pop
ret
adc
std
cld
xchg
add
inc
pop
subl
push
lds
movsl
cmp
dec
fwait
orb
fiaddl
stos
dec
adc
cmc
ss
jbe
sbb
nop
xchg
add
icebp
pop
sbb
push
push
adc
xchg
pop
push
stos
mov
or
mov
dec
mov
je
ja
jno
adc
adc
dec
dec
and
imul
and
loopne
pop
fwait
cmp
push
pusha
sbb
out
pop
adc
pop
pop
xor
xor
xor
push
jb
jb
or
inc
in
push
fidivrl
notl
cmp
sub
mov
xor
cmp
jge
sub
add
mov
and
xor
push
mov
test
test
xor
mov
jge
mov
pop
movl
lret
mov
stos
xor
int3
insl
add
cli
sahf
fsts
cmp
pop
cltd
mov
scas
mov
inc
add
or
dec
fcmovbe
es
sub
inc
add
adc
push
add
or
ret
inc
push
lret
xor
jb
or
inc
xchg
adc
sbb
and
jle
sti
mov
cs
push
inc
sbb
add
or
fadd
jge
inc
dec
and
and
pusha
call
nop
decl
cld
dec
add
sbb
or
dec
pop
arpl
or
adc
addr16
sub
shlb
fidivrl
jp
push
mov
sbb
movsb
sahf
fs
push
mov
add
jne
xchg
add
test
ss
push
cmp
sbb
ja
dec
adc
push
mov
and
mov
jl
add
js
mov
push
inc
decl
push
pop
test
jecxz
sbb
xor
ss
mov
sbb
cmp
or
or
js
je
push
mov
adc
lock
shlb
pop
aaa
pop
bound
out
jbe
pop
sbb
jmp
xchg
dec
push
movhps
aad
movsbl
sub
iret
add
dec
sbb
xor
and
call
fisttpll
push
je
ljmp
test
or
pushf
or
mov
inc
pop
add
push
pop
imul
aam
dec
sbb
pop
xor
jle
and
mov
adc
test
dec
enter
push
sbb
adc
rolb
jl
fmul
into
inc
xchg
enter
roll
mov
adcb
jge
sarb
or
inc
xchg
add
imul
jno
push
inc
xor
pusha
and
lea
or
loopne
lock
add
push
sbb
out
popf
dec
mov
cmp
aam
mov
inc
push
pop
jmp
inc
daa
testb
cmp
xlat
inc
xor
nop
cmp
repz
jbe
cwtl
jmp
or
clc
popa
fsubs
or
inc
lods
push
icebp
scas
nop
push
xor
nop
insl
mov
dec
gs
icebp
popa
rol
test
dec
lcall
fiaddl
cwtl
or
inc
push
jg
sarl
call
pop
cmpb
ss
lods
sbb
dec
cmpsl
cmp
mov
iret
out
imul
movb
jmp
data16
seto
sub
mov
mov
sub
pop
push
xchg
or
shll
sub
push
fisttpll
pop
decl
repnz
data16
jbe
mov
fsubrl
mov
adc
push
cmp
stc
sub
jp
inc
movsb
inc
pusha
testl
cmp
jmp
jmp
sbb
add
xor
sub
jg
fs
pop
movsl
insb
cwtl
push
mov
push
lret
leave
dec
adcl
push
outsb
inc
mov
cmp
mov
inc
adc
mov
push
cmpsl
sbb
xchg
add
pop
jbe
jge
xor
cmp
inc
leave
add
and
icebp
test
push
sahf
or
xor
push
mov
ret
aad
pop
rcrb
mov
add
push
sub
add
or
les
icebp
xor
pand
sbb
mov
lea
inc
xchg
clc
lods
push
ret
adc
adc
les
mov
add
sbb
frstor
movsl
pop
dec
mov
lock
sahf
mov
adc
les
mov
lock
or
decl
cmp
je
fsubrs
mov
aaa
imul
adc
add
adc
mov
je
cld
add
or
adc
inc
xor
sbb
cld
lods
mov
push
unpcklps
inc
adc
hlt
and
push
and
pusha
inc
lea
sti
aad
loopne
repnz
or
and
divb
insl
gs
dec
sbb
or
loopne
addb
sub
bound
mov
add
dec
adc
push
adc
sbb
mov
dec
add
xor
pop
adc
add
push
cmp
je
jge
inc
mov
bound
push
push
mov
mov
mov
push
iret
xchg
or
adc
mov
test
inc
push
lret
xchg
or
fs
push
stc
inc
add
out
mov
enter
mov
pop
daa
cmpsl
shll
jns
xor
mov
or
cmp
jbe
mov
sbb
mov
cli
push
mov
jo
mov
adc
stos
stc
repnz
call
jns
jl
jmp
je
xchg
sbb
jns
mov
jmp
cmp
sbb
and
jne
or
stc
inc
mov
and
das
icebp
je
test
dec
add
ljmp
jmp
clc
out
pop
jbe
push
push
clc
xor
cmpb
xor
cmp
or
repnz
stos
inc
sub
out
and
jb
add
or
sub
pop
add
je
inc
loop
cltd
sbb
push
call
mov
fcoml
test
rclb
inc
and
cld
mov
mov
push
xchg
cmp
in
pop
push
mov
push
adc
test
shlb
jmp
lods
mov
fisubs
push
movsl
adc
pusha
xchg
insb
popa
cmp
xor
xor
sbb
jl
fst
loopne
mov
cwtl
adcl
mov
add
stos
push
xchg
mov
xorl
xchg
lods
adc
add
icebp
std
aad
push
and
xor
add
dec
mov
xchg
mov
sub
les
mov
or
lahf
xchg
ret
ret
jne
add
add
pop
xchg
push
aas
pop
mov
pop
aaa
push
jne
add
loopne
jmp
sub
mov
push
orb
rcrb
enter
mov
test
fdivrs
jbe
push
or
xchg
jae
ffreep
loopne
call
push
sbb
xchg
dec
scas
mov
push
xor
xorl
sbb
in
cmp
js
sub
sbb
lods
call
add
js
inc
es
inc
inc
imul
ret
fdivr
push
inc
lds
rolb
fcmovnb
or
dec
adc
sbb
inc
fstpl
adc
and
outsl
dec
cmp
mov
test
andb
push
pop
fdivrs
dec
and
xor
or
aaa
xchg
js
data16
or
insl
pop
adc
pop
mov
add
pop
lea
int3
notl
adc
add
pop
test
faddl
inc
mov
mov
add
add
movsbl
sbbl
fsubr
xor
xlat
or
mov
inc
int
push
and
push
dec
ret
adc
lods
xchg
aaa
cmp
jae
mov
clc
fidivrl
hlt
jb
push
pop
cwtl
push
cmp
jbe
mov
push
icebp
outsl
jb
shlb
inc
mov
dec
dec
aad
push
test
cmp
push
jno
outsl
shr
cld
add
dec
test
mov
push
and
jne
mov
add
xor
sbb
xchg
jbe
and
add
testb
or
clc
mov
insb
add
or
adc
mov
lock
push
mov
xor
mov
xchg
cs
nop
mov
add
fiadds
or
cmp
adc
add
outsb
ret
mov
outsl
sbb
cmp
jb
stc
and
sbb
add
idivl
mov
dec
add
in
dec
mulb
or
and
sbb
adc
rclb
mov
pop
cs
roll
dec
dec
in
inc
add
mov
lods
leave
stos
rclb
ja
mov
or
push
push
push
mov
lret
jecxz
sub
jge
sub
addl
cs
add
cmp
inc
cmp
movsb
pop
push
cli
add
aam
pusha
or
insl
cmp
push
test
and
dec
mov
add
imul
jmp
leave
ds
sar
lea
loopne
adc
je
ret
push
fcomps
mov
pop
push
ret
out
orl
inc
mov
add
in
cmp
sub
cmp
mov
add
cmpsl
and
push
pop
pop
test
xchg
sarb
fadds
fsubr
or
test
popa
mov
dec
sub
cmp
or
jle
cmpsl
lcall
inc
or
subb
ret
rep
push
mov
pop
pop
shlb
mov
or
dec
loope
push
clc
pop
pop
add
sub
gs
ret
mov
lods
shll
push
add
lcall
pop
mov
cli
shrb
and
adcb
add
mov
mov
xor
jl,pt
sub
inc
cltd
or
repz
mov
sub
pop
add
fcomps
xlat
fcoml
test
cmpb
js
inc
adc
sbb
push
bound
or
out
aas
adc
push
jp
add
jnp
add
adc
aam
mulb
push
mov
cmpb
pop
sub
mov
xchg
or
mov
jb
pop
push
inc
xor
cs
mov
lock
pushl
and
xor
enter
sub
andl
rcrl
inc
dec
pop
mov
pop
push
dec
inc
push
add
adc
loope
cmp
sbb
imul
sub
aaa
addb
test
inc
stc
out
push
cmp
je
xor
cwtl
mulb
arpl
or
push
inc
sub
fisubs
add
fcoms
xchg
mov
test
mov
cld
mov
jge
add
inc
ret
lea
mov
test
repz
xchg
fadds
push
mov
ret
add
jmp
inc
lods
mov
popa
lahf
sbb
sahf
mov
rcrl
je
mov
cmp
or
and
inc
push
clc
push
push
cld
mov
cmpsl
or
cmc
inc
inc
pop
inc
loop
ret
ret
and
jl
add
rcll
push
mov
mov
jbe
jo
movsl
movsl
pop
mov
cmp
add
movb
dec
int3
pop
ret
push
push
jno
mov
cs
and
xchg
stos
add
cmp
adc
test
pop
jae
pushf
pshufw
mov
adc
mov
pushf
loopne
adc
jge
movsb
lret
test
pop
lcall
mov
push
mov
ljmp
cmc
inc
xchg
adc
cmc
add
out
xor
jb
adc
or
add
jecxz
add
mov
push
pinsrw
sahf
add
or
in
icebp
or
sub
test
jg
mov
js
jne
mov
jb
mov
movb
ret
push
push
repz
mov
push
sbb
push
fs
inc
xor
cmp
shll
rcrb
ds
xchg
lock
stc
cmp
popf
outsl
inc
std
cmp
push
push
repnz
sbb
cmp
xorl
mov
in
mov
fidivrl
add
push
pop
adc
nop
gs
sbb
xor
je
and
adc
andb
ss
add
jb
dec
ret
inc
add
ja
mov
in
outsl
pop
popa
xchg
ja
popf
cmp
and
loopne
pushf
subl
mov
lds
int
add
push
add
dec
lods
cmp
stc
pop
cmp
pusha
pop
push
jae
mov
xchg
push
and
rorb
sbb
add
aaa
andl
or
addl
xchg
sbb
mov
sbb
or
mov
hlt
test
cltd
mov
pop
ret
or
push
jmp
or
sub
out
sysret
sti
idivl
add
sub
loopne
lea
or
xor
xchg
in
add
mov
sarl
sti
jae
sbb
cmp
sbb
testl
cld
and
lods
or
jne
rorb
add
pop
and
xor
sub
test
mov
pop
dec
orl
sbb
or
cmc
subb
jbe
and
sbb
je
sbb
fst
ss
mov
test
or
pop
adc
or
into
mov
ja
sub
sbb
test
in
ss
dec
or
dec
cmp
add
mov
mov
pop
ret
test
or
pop
enter
pusha
sub
fbstp
negb
inc
clc
lods
test
fadds
arpl
adc
xorl
sub
outsl
fnstcw
pop
pop
xor
test
pop
enter
rorl
testl
call
sbb
push
add
or
out
out
shll
cmp
mov
lret
cmp
js
cld
out
mov
mov
es
dec
rol
mov
enter
push
add
or
push
jmp
jns
add
fimull
cltd
or
inc
clc
sbb
arpl
xor
cmp
pop
mov
mov
add
inc
jnp
xchg
push
sbb
leave
stos
sub
xchg
int
push
xor
jo
adc
data16
add
push
inc
inc
jmp
and
les
push
xchg
or
sub
mov
pop
enter
test
rorb
in
dec
lret
jmp
xchg
pop
pop
rorb
std
nop
or
adc
push
fisttpll
sarl
dec
sub
imul
repnz
inc
lods
orl
push
iret
and
inc
hlt
or
or
add
mov
mov
adc
or
dec
or
ss
jno
bound
xchg
dec
push
cs
fs
inc
cmp
mov
push
inc
cld
loop
and
or
sbb
into
fsubrs
or
popa
cmp
cmp
cmp
xor
cmp
and
add
test
pop
mov
push
push
pop
call
or
rcll
test
inc
push
sub
or
mov
cmp
push
ret
dec
add
add
fwait
aam
and
cmp
jne
sbb
out
or
cmp
sbb
sbbb
xlat
sub
and
or
fcoms
push
inc
adc
push
mov
mov
ds
or
xor
and
iret
add
adc
push
jmp
fwait
ret
mov
mov
push
push
inc
push
jo
cmp
aam
inc
xchg
ja
cltd
inc
test
mov
sub
icebp
add
push
cmpsl
mov
ja
xchg
and
cmpl
je
push
push
loope
std
dec
addr16
xchg
and
cmp
arpl
push
pushl
test
push
jne
pop
decl
dec
add
pop
filds
cld
aam
add
or
adc
and
jnp
add
jo
add
dec
cmp
cwtl
std
test
cltd
out
push
movsb
movzwl
push
mov
test
shl
scas
addr16
xchg
or
dec
xchg
cld
jp
mov
or
push
cmp
popf
insb
inc
scas
test
mov
inc
and
add
jp
fistl
add
sub
dec
add
and
shl
add
inc
dec
dec
push
mov
inc
inc
pop
aad
into
sbb
fwait
jmp
movb
jmp
cmp
mov
inc
mov
testb
mov
and
adc
jne
aam
mov
add
xchg
callw
dec
std
mov
mov
dec
add
arpl
push
push
incl
jmp
push
shl
outsl
inc
pop
jne
inc
inc
jmp
and
movsb
pop
sub
add
dec
test
or
adc
mov
sbb
pop
rolb
sbb
ret
cli
mov
shr
rcrl
pop
sti
aam
adc
push
pop
inc
bound
adc
dec
cmc
imul
adc
add
push
sbb
push
out
sbb
aas
aaa
jno
clc
aad
inc
call
sbb
pop
mov
andl
idiv
pushf
fsubs
mov
xchg
mov
mov
and
and
out
sub
xchg
testb
adc
add
inc
ja
repnz
lods
xor
adc
add
xchg
adc
rorl
pop
cmp
out
mov
ficoml
scas
push
stc
or
shrl
pop
mov
cmp
hlt
adc
je
push
jnp
shlb
and
push
fdivrs
mov
inc
andb
xchg
xorb
inc
push
push
cmp
ret
pusha
and
jmp
push
dec
dec
or
dec
arpl
mov
pop
fisttpl
cmp
sti
or
sub
inc
aam
popf
or
das
sub
or
dec
test
push
adc
push
jl
cmp
ret
jns
push
mov
mov
sbb
push
adc
int
mov
ficoms
xorl
not
mov
mov
aas
jmp
mov
mov
adc
add
adc
movsl
sbb
ficompl
mulb
cmp
fs
daa
mov
roll
cmp
pop
out
mov
imul
pusha
inc
js
dec
ret
int3
add
into
push
or
jl
add
dec
je
mov
dec
aam
add
or
inc
pop
xor
or
inc
or
nop
jno
into
js
xor
stc
push
fwait
add
and
and
addl
xchg
and
adc
inc
cmp
cmc
mov
add
or
cmp
hlt
jne
test
sbb
pusha
adc
and
negb
and
popa
test
push
js
andb
mov
je
iret
xor
ds
push
orb
xchg
cmp
test
cli
adc
clc
or
add
insb
pop
inc
jnp
pop
lds
and
shlb
in
mov
or
jae
push
jo
pusha
jo
fiadds
ret
add
in
lods
push
cmpsl
lds
pop
aam
and
inc
mov
pop
mov
add
lock
pop
lea
leave
rcrb
add
aas
fldenv
add
xchg
or
aam
mov
gs
mov
xor
push
outsl
xchg
add
pop
mov
dec
cmp
add
mov
mov
mov
and
sbb
mov
jge
sub
into
nop
pop
cmc
lea
mov
hlt
paddb
les
sbb
pop
mov
adc
jb
adcl
mov
nop
aas
xor
and
and
mov
popf
lock
in
bound
cmp
jl
cmp
jg
sub
les
pop
inc
cmp
jne
subl
sbb
fsts
or
jmp
push
and
in
int3
pop
sahf
and
and
test
jp
fisubs
ds
push
pmaddwd
push
std
mov
enter
cmp
cmp
cld
pop
into
mov
jmp
repnz
or
call
pusha
sbb
add
adc
push
pop
and
test
xchg
les
loop
movsl
popa
add
repz
insb
lock
je
arpl
xor
test
jnp
jmp
pop
out
sbb
out
loopne
pop
call
loopne
orb
mov
loopne
or
lock
push
mov
ret
es
out
ljmp
pop
adc
xor
sub
adc
xchg
xchg
fimull
loopne
jl
push
add
lods
cmp
test
xor
fbstp
or
testl
pop
pusha
adc
mov
xor
add
shrd
pop
fdivs
xor
lahf
cltd
ds
sbb
add
push
add
stos
pusha
pushl
push
push
sbb
cmp
pop
ss
and
pushl
sahf
fcompl
push
mov
mov
mov
mov
pop
jmp
jp
popa
jl
xchg
mov
push
xlat
ret
or
addr16
std
or
add
repz
add
adc
inc
push
fisubl
jne
xchg
insl
pop
les
cmp
imul
push
shll
or
rol
int3
sbb
lods
shr
jns
gs
add
xor
rclb
scas
and
pop
xor
mov
inc
mov
pop
add
push
adc
js
inc
repz
mov
xor
lret
jecxz
in
fbstp
popa
and
stc
xor
add
or
in
ret
dec
pop
cmpb
je
cmp
sbb
or
jle
mov
adc
fldl
in
jmp
sbb
lods
dec
xor
fdivs
add
mov
adc
xor
xchg
data16
adcb
pop
lcall
test
dec
loop
add
push
add
add
or
movsl
add
lret
rcrl
pop
js
push
loop
call
pop
test
clc
test
cmp
leave
xlat
or
or
mov
mov
ds
and
sbb
and
sbb
adc
push
movb
dec
dec
jle
xor
insb
lea
mov
rorl
loopne
push
test
fldl
dec
aaa
sbb
out
lods
enter
inc
das
xchg
mov
mov
add
test
mov
adc
loop
mov
or
or
add
sbb
add
inc
dec
ret
inc
hlt
out
inc
add
outsl
pop
adcl
pop
shll
xchg
loop
mov
decb
pushf
adc
mov
rol
dec
call
xor
adcb
pusha
test
xchg
xor
jmp
xor
adc
inc
das
mov
pop
pop
pop
jbe
inc
clc
jge
imul
push
or
dec
or
int3
dec
loopne
pop
adc
push
pop
adc
rcrb
sbb
pop
inc
push
dec
add
sub
adc
in
xor
add
dec
pusha
add
jp
es
mov
inc
test
call
push
cltd
jne
and
pop
sti
es
inc
or
and
aam
or
mov
or
adc
sbb
mov
add
jmp
and
sbb
out
adc
jne
add
mov
subl
and
mov
sbb
jne
fxch
fyl2x
jmp
and
in
fldl2e
fmulp
lock
ljmp
faddp
test
pusha
push
inc
push
sbb
and
ficomps
cli
aaa
popf
js
mov
test
std
xchg
sub
xor
int
adc
scas
sti
std
add
add
aad
loope
lahf
cmp
inc
shlb
loop
and
neg
cmp
add
fldln2
inc
in
fnsave
fwait
loope
jne
es
inc
popa
jae
scas
dec
or
or
push
pop
in
inc
gs
jnp
sahf
sbb
sub
fldenv
cmp
out
ja
xchg
xor
jmp
pop
mov
in
add
in
xchg
add
adc
pusha
sub
or
dec
push
dec
shr
push
fcompp
mov
jb
sbb
xchg
sbb
rol
daa
jbe
lock
mov
lret
orl
add
xor
or
inc
ror
add
push
lret
push
add
enter
or
int
frstor
push
push
shrb
shlb
cmc
out
xor
push
dec
mov
push
or
and
mov
jmp
mov
pop
subl
mov
sub
jno
jl
in
xchg
enter
sbbb
add
rolb
shll
sub
loope
ret
jb
add
xor
stos
mov
jmp
int
iret
stc
mov
and
rol
mov
or
or
in
or
pop
pop
call
jmp
clc
adc
imulb
ret
fstpt
sti
test
lods
or
mov
loop
dec
aad
pop
add
add
fwait
add
or
dec
pushf
test
dec
inc
or
sbb
add
sbb
sub
les
js
psadbw
jmp
sub
adc
and
or
adc
jp
jp
in
ret
jbe
inc
jecxz
hlt
xchg
aas
adc
dec
add
pop
add
insl
push
mov
icebp
add
xchg
call
or
popa
dec
outsl
hlt
jge
inc
pop
ror
in
push
fldcw
add
pop
dec
and
ret
fs
jnp
or
pusha
gs
or
fldl
and
or
mov
jl
sbb
or
movsb
enter
or
ljmp
sub
mov
test
insl
pop
lock
add
ret
outsb
cmp
pop
pop
lea
sbb
cmp
cmp
lock
jle
or
cmpsl
addr16
jecxz
and
gs
sbb
and
les
cmp
cmp
pop
mov
jne
je
pop
push
sbb
mov
push
lahf
fldl
es
dec
fcompl
sti
stos
mov
jae
lods
and
mov
sbbl
sahf
movsb
test
sbb
xchg
jae
icebp
sahf
movsb
jno
mov
jae
xlat
loopne
push
sarb
cmp
jne
cmp
loope
loop
jne
mov
cmp
add
jo
cmpsl
push
and
jp
and
dec
jo
cmp
rcrb
add
xor
adc
and
xchg
adc
sti
out
push
mov
lods
jmp
sub
cmpsl
fldenv
mov
bound
jns
push
xchg
sbb
adc
btr
inc
jmp
lahf
pop
cmp
xor
aam
dec
out
adc
sahf
push
push
dec
sbbb
push
les
nop
pop
jne
and
sbb
xor
ret
sbb
stos
push
dec
sbb
push
enter
dec
xchg
loope
pop
push
icebp
cmp
jl
push
mov
fimull
sbb
cwtl
je
in
fisubs
cmpsl
add
jo
sbb
fisttpl
scas
inc
daa
add
adc
pop
mov
ds
and
gs
push
ret
dec
pop
and
add
mov
push
jo
sub
cmpb
lcall
sub
xor
sahf
adc
add
push
adc
lcall
or
or
push
sahf
inc
xchg
dec
aam
add
xchg
fs
rcrb
pop
add
and
loope
sarb
test
xor
inc
xchg
xchg
dec
add
mov
xor
or
nop
cmpsb
test
cmpsb
and
adc
les
call
dec
clc
dec
mov
xor
mov
shl
xor
cs
shr
xor
mov
sub
add
mov
fwait
test
test
jle
or
test
adc
pop
roll
hlt
push
adc
jns
test
or
add
or
adc
or
je
cmp
mov
or
or
nop
or
sub
ss
loop
push
iret
jb
orb
lret
mov
jmp
andl
decb
movsl
add
jp
and
jecxz
sbb
in
fbld
or
jmp
sbb
and
aad
sbbl
addl
mov
pop
mov
movsb
or
icebp
dec
and
jecxz
jl
int3
leave
push
xchg
dec
add
cmp
mov
inc
and
pop
cmp
or
cmp
test
and
testb
jns
outsl
pop
mov
sti
add
out
lret
add
test
fisttps
push
jmp
loope
jmp
in
dec
je
add
dec
pop
dec
add
cmpsb
imul
sahf
push
and
or
or
divl
or
push
push
dec
jae
sbb
adc
gs
push
sub
push
and
inc
sbb
insl
push
dec
pop
adc
pop
fldl
fstpl
cmp
jno
push
jb
pop
bound
xlat
sub
je
test
mov
adc
pop
sub
jmp
test
pop
out
or
roll
jecxz
sti
test
cwtl
std
add
push
inc
mov
mov
jno
jmp
push
shrl
loopne
imul
pop
and
mov
add
cmp
fcomi
fnstsw
sbb
stos
subb
or
push
jb
dec
inc
js
dec
push
and
fildll
repz
jo
sbb
dec
cmp
sbb
xchg
es
out
mov
lods
test
pop
loope
and
mov
stos
ficoml
mov
push
scas
insl
cmpl
jge
lret
push
call
test
rcl
dec
jmp
orb
adc
cmpsb
or
mov
fists
sub
test
xor
add
pop
add
insl
hlt
sbb
bound
mov
out
push
clc
sahf
and
mov
xchg
lea
mov
inc
sbb
push
pop
pop
je
xor
std
lcall
pop
adc
push
sub
hlt
push
pop
or
jns
add
xchg
sub
or
les
xor
cmp
and
push
adc
and
mull
cmp
es
xchg
bsr
cmp
pop
push
xchg
pop
loopne
dec
je
push
aaa
push
push
lcall
scas
inc
std
mov
sub
mov
and
nop
mov
xchg
mov
lods
sub
add
xchg
outsb
or
pusha
mov
push
push
push
xor
push
test
inc
inc
and
test
and
loopne
inc
dec
sbb
push
push
sahf
add
jge
pop
jo
xor
cs
dec
inc
movsl
mov
je
imulb
push
mov
and
loop
jle
lds
xchg
mov
data16
add
stc
push
inc
push
pop
push
or
loope
mov
push
loope
ret
push
fimull
gs
sar
cmp
xorb
dec
jb
andb
jecxz
dec
lock
inc
scas
negb
shll
js
sub
adc
and
or
sbb
dec
jmp
cmp
and
adc
out
adc
and
push
faddl
jge
cmp
sub
sub
xchg
and
push
pop
jp
mov
cs
pusha
aas
cmpsl
jnp
fstsw
ss
sbb
fnclex
sbb
pop
inc
ror
mov
dec
cld
or
cltd
neg
insl
or
cld
fwait
lds
nop
or
sub
inc
clc
fistpl
fwait
clc
adc
and
pop
add
sbb
pushf
and
dec
daa
data16
fcomps
inc
or
jmp
mov
adc
xor
push
pop
pop
pop
adc
setnp
jge
mov
mov
add
cs
jge
inc
inc
js
xchg
jp
push
push
adcb
lcall
or
cmp
std
cmpl
test
mov
or
xchg
stc
push
push
cli
add
test
xor
test
jne
mov
test
cmp
cmp
pushl
je
push
xor
mov
inc
cld
jl
aad
mov
out
nop
outsl
cmp
movl
jp
lods
daa
ret
push
ss
or
dec
into
or
sbb
divb
jmp
push
jle
sbb
imul
in
sti
fdivp
xor
or
pop
add
jo
push
nop
add
movsb
dec
lock
inc
clc
xchg
jne
cld
lea
mov
jnp
pop
mov
adc
and
sbbb
push
cli
push
mov
rorl
push
call
ljmp
adc
mov
pop
jmp
or
popa
lds
cmp
inc
aas
adc
push
data16
push
fsubs
jne
js
lcall
xor
mov
mov
push
neg
insl
xor
leave
enter
jle
out
repnz
add
add
jae
push
enter
sub
cli
je
fdivrp
ret
pushf
sbb
mov
cmc
rcrb
lock
fldcw
or
in
xchg
xor
xor
in
push
sbb
fmuls
inc
in
cmovb
sub
addb
pushf
shrl
jmp
sbb
lock
xor
stos
adc
sub
std
test
jb
into
shlb
jae
ret
fwait
push
shl
ret
das
mov
movsb
insl
add
fs
pop
push
cli
dec
fdiv
mov
push
int
fdivr
adc
outsl
mulb
sub
ret
and
pop
mov
xchg
mov
nop
or
adc
mov
insl
iret
lea
pop
mov
cs
pop
lret
insb
leave
mov
or
mov
bound
jge
xor
subb
nop
lret
test
lret
cwtl
sub
or
mov
in
movsl
jge
xor
or
push
jb
nop
lret
lret
int3
mov
rorl
or
mov
mov
add
mov
xor
pop
jb
int3
int
fs
or
insl
mov
bound
rcl
xor
mov
int
xchg
dec
cmp
or
notb
adc
jge
fcomp
movsl
out
xor
adc
into
iret
xchg
imul
lds
fsts
jge
pop
mov
das
je,pn
lock
cmp
and
aam
stos
sti
push
sub
or
loopne
cmp
xor
rorb
outsl
sub
jne
mov
fcomps
and
xchg
sub
fs
fisttpll
fucom
or
imul
xchg
push
push
pandn
fildl
add
incl
jne
enter
jne
enter
jl
pop
dec
and
jne
sbb
dec
pop
xor
push
xchg
push
sub
adc
cmp
test
xor
call
pop
loope
mov
out
jl
dec
or
or
pop
and
sbb
dec
gs
stos
test
pop
adc
mov
sarb
mov
adc
inc
sub
ja
xor
enter
es
in
xor
sub
mov
ss
or
sbb
es
addr16
pop
fcoml
dec
inc
push
adc
jb
loopne
testl
cltd
jne
aaa
jno
inc
cmp
sbb
xor
lods
add
cmp
and
jbe
add
add
add
outsl
and
pop
insb
fcompp
loope
sub
shll
fadds
xor
pop
push
push
or
dec
pop
sbb
jns
shr
mov
sub
sbb
xor
imul
mov
or
dec
add
sbb
adc
push
pop
jg
mov
rclb
cmp
int
xchg
sub
sbb
scas
fnstenv
add
fs
or
adc
flds
pop
pop
mov
push
xor
xor
jbe
test
xchg
je
enter
jnp
cli
pop
ret
mov
jo
sub
jns
out
add
xor
repz
mov
or
dec
add
jb
fstpt
sti
sbb
fsubrp
and
xorb
pop
je
sbb
adc
into
nop
sbb
outsl
leave
adc
inc
and
cmc
jb
jb
lds
push
or
add
jne
popf
daa
test
repz
push
xor
mov
push
inc
xor
adc
adc
adc
sub
test
and
pcmpeqw
ds
xchg
sahf
clc
pop
test
mov
add
adc
inc
cli
lretw
add
iret
les
sbb
mov
jmp
stc
iret
aaa
sbb
pop
pushl
leave
and
es
ljmp
stos
sub
push
adc
inc
loopne
orl
xor
xchg
adc
out
pop
int3
or
pusha
or
xchg
add
and
mov
dec
sbb
imul
adc
lret
enter
je
das
cmp
mov
ss
xchg
adc
push
sti
inc
xchg
pop
push
jne
ret
and
sub
or
mov
aaa
jno
push
in
das
divl
mov
and
cmp
rcrl
add
jg
mov
aaa
adc
pop
push
push
xchg
xchg
xchg
and
dec
shrb
and
add
or
pop
lock
fisttps
into
addr16
xor
cli
mov
dec
int3
sbb
frstor
or
movsb
addr16
xorb
mov
stos
mov
push
sub
movb
mov
popf
or
je
int3
loope
jmp
jmp
pushf
add
jmp
leave
push
and
sbb
sbb
fimuls
dec
xorb
inc
adc
push
mov
fs
ret
call
dec
movsb
xchg
bound
pop
loop
iret
cs
sub
cmpsb
scas
xchg
inc
clc
lret
and
xchg
icebp
and
add
push
adcb
ljmp
sub
inc
push
push
jns
mov
mov
das
test
pop
push
test
mov
fsubrs
sub
ret
aas
inc
or
pop
hlt
pop
leave
loope
sub
sub
xor
cs
sbb
pop
rorl
add
mov
xor
pop
mov
shlb
and
clc
les
dec
add
xchg
aam
cmp
shr
push
mov
jmp
and
sbb
jns
or
jns
xchg
mov
jmp
add
push
mov
inc
cmp
js
out
jmp
daa
and
lahf
or
add
cltd
rorb
loope
cmp
dec
xor
adc
jo
lcall
insl
bound
sub
pop
aas
sbb
and
pop
aas
adcl
jle
cmp
inc
stos
sbbb
outsb
adc
xchg
push
cmp
push
cmpl
mov
pop
dec
pop
js
jbe
xchg
dec
aam
and
movzbl
push
cmpsb
mov
addr16
push
insl
rcr
xchg
xchg
fnsave
jmp
das
xor
scas
inc
push
inc
lock
adcl
inc
lock
jl
dec
inc
add
loopne
lcall
add
test
cmp
jle
fsubrs
jle
jne
adc
push
cltd
cld
and
sbbb
cmovo
add
movsb
pop
scas
jo
in
fisubs
cmc
mov
pop
ret
mov
test
fucomi
push
inc
imul
xchg
mov
imul
adc
pop
enter
js
fmuls
inc
push
popa
cmp
cmp
jg
loopne
xchg
fcompp
rolb
jle
dec
or
js
cmc
dec
loope
dec
and
jle
inc
aaa
div
cltd
into
jns
mov
sbb
dec
clc
inc
cmp
xor
fstpt
adc
xorl
jg
jmp
push
sarb
or
jnp
shr
push
push
inc
lds
loop
push
loope
jle
xor
xchg
pop
pop
dec
dec
ret
sub
xchg
mov
inc
or
jge
dec
sub
xlat
push
xchg
and
lcall
addr16
sbb
jg
inc
lock
jae
cmp
jl
fidivs
add
xor
mov
jae
jo
leave
push
sub
bound
lock
outsl
nop
pusha
mov
xlat
rol
adc
test
int3
scas
ljmp
js
lea
je
or
dec
pop
or
jle
dec
inc
loope
pop
and
push
js
pop
dec
lret
sub
sbb
or
test
or
inc
loope
fwait
pop
jne
cltd
inc
into
insl
mov
subl
add
sbb
sahf
pop
je
orl
mov
jle
cmp
mov
add
cmc
inc
xchg
lock
or
mov
mov
adc
and
jmp
mov
scas
into
fstpl
push
push
adc
xchg
or
test
sti
insb
xor
mov
cmpsb
mov
dec
push
stos
addr16
sub
leave
jne
repnz
roll
out
xor
movnti
add
jge
rolb
add
add
ds
push
sub
cmp
dec
icebp
out
fstl
inc
add
or
pushf
fs
jbe
cmp
dec
jbe
xchg
rol
sbb
inc
call
stos
enter
add
add
pop
jbe
push
fdivrl
fdivrs
adc
jo
xchg
test
xchg
ret
add
dec
jo
outsl
bound
fmull
scas
popf
pop
jb
aam
scas
xor
push
fldl
xorb
pop
lods
nop
repnz
or
xor
shl
icebp
in
jg
add
sub
jg
inc
adcb
shl
inc
imul
leave
adc
lret
popf
cmp
outsb
adc
and
enter
mov
stc
sbb
imul
ret
or
jl
adc
add
inc
mov
psubusb
jbe
das
pop
dec
xor
mov
push
cmpsl
inc
loope
jnp
adc
sbb
ss
adc
outsl
aam
push
je
push
push
cmp
and
add
ja
jp
pop
adc
push
in
mov
adc
mov
das
push
xchg
xor
add
jne
scas
mov
fsubs
sahf
std
cmp
jmp
jae
or
divb
dec
repz
sbb
shlb
add
outsb
lods
andl
out
pop
cmp
mov
movsl
mov
scas
jl
or
xor
dec
and
fdivrs
push
iret
sbb
xchg
xor
iret
jecxz
cmp
jo
ret
pushf
sbb
ret
ret
or
mov
test
or
add
sub
loopne
xor
lods
xchg
aam
aas
push
pop
dec
jmp
arpl
push
es
insl
outsb
or
popa
jl
rorb
or
es
jmp
jle
lea
pop
xchg
addl
mov
and
cmp
dec
pop
cmc
jo
je
gs
pusha
icebp
stos
ss
jmp
gs
dec
test
and
sti
int3
xchg
ffreep
add
mov
loopne
sbb
pop
inc
insl
rcl
fidivl
loopne
nop
gs
add
aam
inc
xchg
and
mov
pushf
mov
add
je
xor
mov
cld
inc
jmp
ds
jnp
hlt
inc
daa
pop
add
cmc
mov
je
test
adc
or
popa
in
sub
inc
nop
int3
sub
xchg
test
pop
ljmp
mov
push
push
daa
mov
xor
out
fmulp
xor
xlat
push
add
push
or
add
or
in
xchg
or
sbb
insl
add
push
dec
jecxz
jne
adc
mov
and
inc
addl
cmp
es
data16
jns
sbb
xchg
addb
sarb
pop
pop
insl
fucomp
loopne
jns
mov
paddb
aas
mov
and
insl
hlt
cmp
push
push
inc
mov
sbb
jno
pop
dec
xchg
mov
or
inc
sbb
ss
out
aaa
js
mov
add
adc
adc
cwtl
dec
test
mov
aam
sbb
xor
mov
xor
js
out
insb
adc
xor
push
push
roll
rolb
jbe
int3
nop
aam
mov
push
les
es
push
loopne
and
adc
flds
scas
jmp
jo
xor
pop
mov
testb
add
jl
jno
stos
jg
adc
gs
gs
insl
pop
lea
fsubl
inc
sbb
adc
mov
idiv
cli
fbstp
enter
pushf
push
ret
or
add
jmp
sbb
movsl
addl
and
sub
mov
and
push
sbb
or
rolb
movsb
jmp
mov
dec
push
repz
push
cmpps
mov
hlt
sbb
or
or
or
jmp
or
test
adc
enter
icebp
test
frstor
rorl
jmp
fldl
frstor
and
xchg
int3
adc
or
or
imul
sbb
adc
or
mov
inc
cmp
push
add
add
and
dec
push
sub
sbb
or
push
mov
loop
mov
dec
or
jmp
mov
jecxz
add
add
push
jne
loopne
pop
add
adc
call
call
xor
add
jns
adc
push
das
jo
iret
imul
insb
hlt
cmpb
cltd
test
int3
adc
clc
scas
out
mov
lea
stos
imul
pop
and
add
adc
jne
loop
cmp
jbe
push
pop
dec
adc
in
inc
mov
and
mov
mov
add
jecxz
sub
and
decb
hlt
or
sbb
and
arpl
pushf
mov
repnz
push
hlt
add
add
push
mov
ds
add
movsb
pop
and
push
je
addb
mov
ljmp
push
pop
hlt
cmp
and
xor
stos
xor
sbb
aaa
cs
pop
cmp
jbe
mov
cli
in
scas
sub
xchg
and
cmp
mov
es
jno
cmp
cmp
sbb
lret
shr
not
and
add
xor
xor
mov
fld
cmp
jae
xchg
or
and
dec
pop
add
nop
adc
aaa
or
xor
and
hlt
sbb
nop
ja
pop
roll
es
bound
push
mov
push
pop
outsb
or
in
sbb
inc
loope
pusha
mov
mov
rorl
adc
and
xor
test
fildl
cs
adc
dec
ds
repnz
push
mov
or
frstor
xor
lcall
add
lock
scas
xchg
cmp
xor
push
inc
loope
add
mov
sub
mulb
or
sbb
inc
jp
mov
scas
push
decb
adc
dec
adc
es
mov
js
imul
jo
mov
adc
sbb
xor
xor
cmp
or
cltd
mov
adc
push
xor
es
xchg
mov
jbe
cmpsl
cmpsl
int
or
jnp
cmp
sbb
rcr
in
adc
pusha
lret
mov
push
dec
pop
and
add
jb
lods
mov
and
adc
dec
call
jmp
loopne
je
pop
adc
shr
sbb
mov
iret
mov
adc
and
js
lods
or
cmp
je
push
jne
mov
cmp
dec
adc
clc
mov
xor
dec
jae
xor
fisubs
xchg
out
outsb
jmp
es
stc
pop
out
mov
daa
lret
je
push
sbb
xchg
xchg
js
popf
sub
sbb
dec
sub
mov
mov
stc
jl
inc
adc
mov
or
xor
inc
popa
mov
mov
add
loop
dec
dec
xor
cmpsb
cmp
pop
loop,pn
and
or
mov
cltd
ljmp
fdivrl
nop
dec
scas
into
cli
int
and
cmc
enter
shl
inc
jmp
mov
stc
push
notb
sub
pop
mov
pop
insl
and
add
aas
jle
pop
shll
rorb
sbb
push
jno
cmp
sub
iret
shrl
and
jmp
pop
mov
decb
jne
adc
and
sub
or
xchg
dec
sub
push
jo
sub
in
dec
mov
xor
arpl
rorl
add
dec
or
ljmp
xchg
push
fistpl
jle
inc
mov
push
inc
lcall
fs
jbe
test
subb
mov
les
mov
cmpl
cmp
imull
pop
jmp
push
or
push
jnp
or
or
or
and
or
inc
inc
inc
xchg
fnstenv
into
add
xlat
push
inc
jp
clc
addb
inc
add
xor
mov
and
mov
fnstenv
xchg
cmp
sbb
push
fbstp
loop
adc
push
fimull
sub
mov
mov
adcb
sub
loope
mov
xchg
cmpsl
test
jnp
push
sub
sub
popa
fs
test
dec
out
sub
and
enter
je
xor
test
jbe
repz
aad
stos
clc
dec
inc
mov
add
inc
cmp
ret
jno
cmp
mov
sbb
sahf
loopne
ret
outsb
imul
add
xor
in
mov
push
sbb
dec
cmp
or
out
dec
mov
push
ret
pop
mov
mov
xchg
add
cli
jge
stos
divb
lea
dec
in
mov
psubsb
loope
or
inc
cld
lock
cmpsl
jmp
xchg
xchg
add
sub
sub
adc
dec
dec
jecxz
jmp
pop
dec
and
outsb
or
lea
adc
inc
fs
inc
test
mov
push
roll
mov
jne
or
mov
and
push
inc
pop
ret
imul
cmp
test
mov
sub
mov
in
cmp
test
or
mov
idivb
xchg
fbstp
adc
push
jge
xchg
daa
clc
clc
xchg
inc
jg
loope
add
aas
sbb
pushf
pop
push
mov
lcall
jae
inc
adc
cmpsl
dec
add
loopne
mov
nop
sub
inc
dec
dec
adc
or
mov
enter
addl
lods
or
incl
mov
incl
leave
fdiv
pop
mov
push
scas
xchg
pop
jg
or
dec
pop
pop
pop
add
lcall
jae
int3
adc
mov
xchg
iret
lret
ja
jo
and
and
loope
test
in
aad
mov
aas
dec
cmpsl
ljmp
add
data16
cmp
loopne
mov
jecxz
lea
mov
shrl
dec
insb
pop
xor
and
push
pusha
push
shll
scas
pop
idivb
orl
xor
aaa
insb
ret
inc
cwtl
xor
pop
jne
push
ljmpw
jmp
in
xor
push
xlat
dec
push
ss
cmp
in
in
repz
lcall
and
jmp
push
push
sbb
mov
pusha
dec
sbb
enter
mov
ret
push
xchg
xchg
cmp
or
push
lret
pop
jb
xchg
jns
daa
xor
xchg
sbb
xor
jmp
cmp
and
push
data16
dec
jmp
mov
inc
and
fwait
cs
push
fldt
fs
sub
mov
popf
xor
push
dec
add
aam
lret
pop
xchg
mov
pop
lcall
sbb
mov
por
mov
jmp
xchg
push
insl
cmp
nop
sub
adc
pop
xorb
clc
xchg
add
adc
and
dec
inc
js
add
adc
sbb
fldcw
jecxz
or
pop
xchg
mov
clc
jae
orb
cmp
addb
rorb
lock
imul
test
push
jnp
cld
cmp
or
push
je
rcr
jne
pop
or
clc
cltd
add
cmp
add
out
andb
call
adc
push
mov
cmp
test
hlt
push
subl
cmp
popa
mov
aas
lods
aas
daa
sub
jae
ret
cltd
xchg
loopne
mov
or
ud0
or
pop
mov
nop
inc
or
in
cs
mov
pop
sub
xlat
orl
and
jns
jno
mov
and
or
jb
xchg
push
mov
dec
pop
cld
push
enter
cmp
or
add
loop
mov
sub
mov
lret
adc
or
and
pop
cmpb
arpl
lods
lock
sbbl
jb
fimull
or
sub
and
roll
push
stos
or
jge
cmpsb
aad
sub
stc
and
lock
fimuls
mov
add
andb
jnp
addl
mov
sar
hlt
lret
inc
sbb
adc
pop
sub
dec
push
mov
ds
mov
mov
mov
pusha
and
movsb
out
inc
pop
and
les
cmp
fidivs
pop
add
cmp
lret
add
lret
shrb
pop
call
jne
sub
movl
or
xchg
sbb
push
jle
test
in
pop
sbb
xorb
jl
cltd
adc
mov
in
and
popf
es
xorl
movsb
cmp
jb
mov
cmp
adc
adc
out
mov
sub
dec
or
mov
push
add
js
in
mov
aas
fisubl
inc
pop
psrlq
add
ret
sub
sub
out
aas
pop
inc
ja
cmp
adc
adc
add
pop
push
movl
push
sbb
movsl
cli
push
outsb
pop
adc
ficoms
xchg
rorb
pop
test
mov
leave
push
sbb
jno
cld
mov
inc
cmp
rolb
mov
test
ficoms
shrb
enter
jae
jb
jmp
sbb
outsl
xor
or
add
xorb
pusha
mov
cmc
or
je
addr16
mov
sbb
pop
xor
jmp
jmp
out
jo
sub
cmpsb
inc
shrl
push
sbb
test
and
push
int3
adc
lea
xor
dec
add
and
mov
test
pop
add
sub
inc
clc
sub
add
loop
sti
add
inc
rorb
push
ret
insl
sbb
or
sbb
cld
push
test
xor
add
cmp
add
pop
sahf
inc
inc
jmp
mov
add
inc
jmp
add
adc
cltd
sbb
jno
stos
aam
xorl
lea
divl
xlat
add
lods
hlt
push
data16
sub
subl
inc
inc
lea
bound
scas
pusha
or
push
sbb
mov
negl
ret
sub
jb
dec
jnp
mov
jmp
or
lock
outsb
push
add
add
ret
mov
shll
fsubrs
nop
roll
xor
pusha
adcl
add
or
pop
cld
xor
sbb
adc
mov
add
add
shr
jae
movsb
add
lock
lea
adc
adc
push
dec
sarb
push
fdiv
ja
inc
jbe
push
mov
push
xor
push
lret
dec
andl
cmp
mov
inc
shll
ljmp
mov
mov
loop
xchg
mov
ss
dec
adc
dec
fwait
mov
jbe
leave
push
or
dec
popa
pop
add
mov
in
decb
inc
or
lds
lock
inc
or
orb
inc
jo
mov
test
js
push
ret
mov
loop
pop
mov
test
cmp
mov
inc
cwtl
jp
sbb
cmp
push
jns
pop
roll
shlb
and
hlt
test
jae
inc
loope
push
je
cmpsb
mov
dec
je
sbb
enter
cmpsb
test
enter
add
addb
sti
sub
mov
nop
pop
ficompl
lea
jp
pop
mov
testl
inc
inc
shl
fcoms
jmp
jl
push
fwait
pusha
imul
es
outsl
dec
jbe
sub
jbe
insb
je
ja
jmp
adc
or
adc
ds
cmpb
jne
inc
inc
nop
std
adcb
les
daa
add
andb
rorl
test
shr
loop
push
sub
or
cli
clc
addr16
push
cmpsb
or
add
call
xlat
ret
in
push
insb
and
add
cld
xor
addl
add
push
mov
mov
cmp
or
sbb
sbb
sub
or
and
aam
add
das
rorl
lcall
inc
add
hlt
lock
sub
sbb
mov
push
dec
add
insb
add
gs
pop
icebp
lods
push
push
orl
adc
adc
sarb
outsl
sub
lock
add
push
enter
in
mov
or
cli
add
mov
sub
mov
add
inc
movd
xchg
sub
mov
push
fwait
cs
ror
popa
xchg
cmp
jo
loop
cwtl
push
sbb
into
sub
ds
out
xor
xor
xor
xlat
inc
mov
add
std
cmp
not
or
jecxz
into
dec
fnsave
ret
clc
icebp
je
add
xchg
mov
inc
xchg
mov
inc
test
mov
lret
add
and
out
add
rclb
adc
or
in
pop
adc
jnp
and
aas
sub
fcoms
cmp
imul
movsl
inc
or
je
cs
push
inc
mov
mov
shlb
jmp
int3
daa
sbb
or
inc
rorb
andb
dec
dec
and
rol
jnp
fneni(8087
inc
in
mov
mov
bound
jle
inc
ljmp
cld
test
mov
inc
addr16
or
cmpsb
arpl
sbb
or
std
adcl
pop
sarl
popf
cmp
jecxz
or
clc
jecxz
ds
je
jne
pop
jmp
jnp
and
inc
push
mov
icebp
leave
or
mov
jmp
cmp
shl
inc
or
loopne
xor
xor
lock
dec
jg
jl
jae
push
adc
adc
fcmove
fstp
sub
int3
jmp
sbb
divl
mov
addl
lock
cmp
fnstsw
inc
dec
cli
loopne
inc
in
jecxz
jbe
faddl
call
leave
adc
pop
divl
ret
rclb
cltd
mov
sub
insb
xor
ret
xor
xchg
sub
ljmp
xor
call
mov
jmp
lods
sub
add
add
pusha
cmpb
call
rorb
push
movb
xor
add
dec
out
hlt
mov
or
rcl
test
in
or
adc
adc
cmp
and
add
jge
sub
add
xor
cmpsl
or
jae
out
gs
and
mov
xchg
rolb
ljmp
pop
mov
test
inc
nop
xor
inc
mov
jle
xchg
js
std
jbe
pusha
add
mov
inc
sbb
jge
mov
jbe
mov
dec
mov
jmp
in
inc
xor
pusha
sub
dec
or
subl
and
cwtl
sarb
adc
cmpsl
dec
mov
clc
dec
sti
lods
pusha
ret
xor
jb
je
jmp
add
cmp
int3
scas
les
lds
dec
add
push
mov
mov
add
add
pusha
and
or
xchg
mov
xchg
push
lock
adc
xor
jbe
pop
gs
add
jns
sbb
mov
std
orl
pop
inc
addr16
rol
jg
ret
or
ret
dec
jo
push
imul
aas
push
or
dec
insb
loop
andl
test
data16
sbb
mov
push
cld
cmp
cmp
or
or
add
and
rolb
jl
jmp
test
inc
add
stos
insb
cmp
cmp
inc
jl
clc
push
sbb
mov
imul
xlat
nop
pop
add
cmpsb
pop
call
mov
xchg
cmc
mov
leave
les
test
sbb
imul
loopne
sbb
jne
sbb
add
sub
leave
dec
rclb
push
or
pop
lock
xor
push
shll
adc
add
and
pop
push
add
clc
shl
mov
das
add
mov
idiv
lret
add
call
sub
andb
dec
mov
mov
dec
sbb
bound
cmp
fsubs
add
or
sub
shrl
loop
sbb
or
fdivr
sbbb
insb
int3
or
test
outsb
inc
jmp
xor
cld
xchg
push
and
push
cwtl
jbe
push
lods
mov
xor
mov
add
test
jne
push
aas
mov
inc
mov
mov
mov
mov
cmp
xchg
mov
mov
mov
pop
and
cmp
push
or
jbe
cmp
dec
jle
fcoms
or
or
add
xchg
or
adc
lock
dec
aam
push
inc
add
aaa
scas
add
adc
lar
push
andb
inc
xchg
push
dec
ret
mov
or
arpl
dec
inc
add
jne
clc
pop
sub
mov
mov
mov
mov
or
mov
je
mov
sbb
jb
cmp
ja
add
cmp
adc
xor
inc
cmp
jne
dec
jne
adc
hlt
xor
fwait
mov
inc
out
fldenv
mov
fwait
sbb
adc
mov
jmp
add
dec
add
rorb
push
rcrb
out
push
mov
movsb
add
aad
outsl
inc
leave
int3
jmp
add
popa
sbb
push
xchg
clc
dec
mov
and
xor
test
jne
adc
mov
fidivs
mov
rolb
addl
add
lods
pop
sbb
pop
test
or
es
mov
inc
hlt
or
frstpm(287
dec
cmpsb
enter
or
ss
mov
in
int3
cwtl
push
dec
js
inc
adc
push
fistpl
lret
sub
nop
out
cmpb
lcall
pop
lret
push
call
and
ljmp
dec
xchg
daa
hlt
movb
sbb
lods
push
rorb
add
dec
js
js
xor
lcall
sti
dec
jg
push
or
cwtl
dec
imul
mov
mov
dec
or
dec
sbb
jmp
push
xorb
or
xor
inc
and
mov
mov
adc
lock
xor
bnd
pop
push
jbe
out
je
icebp
mov
push
sti
jmp
decb
inc
xor
icebp
test
push
adc
push
xor
pop
mov
mov
and
cmp
sti
mov
adc
js
cwtl
cmp
fdivs
lcall
mov
xchg
xor
out
add
sub
arpl
jnp
mov
push
es
loopne
jmp
rcrb
sahf
dec
in
ret
inc
pop
xor
dec
je
fsubrl
outsl
jg
out
rcrl
push
mov
sub
fs
mov
mov
addr16
or
sbb
mov
push
push
xor
and
sbb
clc
rcll
jle
ja
push
add
xchg
sti
sub
or
testl
mov
imul
push
mov
add
push
aaa
and
jne
test
dec
xchg
cmpsb
adcl
dec
pushf
or
cs
xor
jle
add
aas
add
inc
mov
roll
mov
mov
jne
push
pop
inc
push
sarb
push
inc
fistl
mov
roll
inc
inc
lock
sti
jbe
push
gs
inc
sbb
xchg
add
pusha
dec
push
push
and
and
push
bt
xchg
and
adc
or
test
loopne
push
daa
inc
mov
mov
ds
adc
subl
andb
addr16
mov
addb
aam
pop
popf
dec
mov
je
add
mov
cld
call
imul
add
and
cmp
xchg
or
addl
xchg
ret
sub
push
hlt
and
adc
push
jmp
ret
mov
mov
push
movsb
ret
adc
inc
sbbb
xor
inc
xchg
dec
jecxz
and
mov
xchg
mov
pop
xor
inc
and
je
jb
sub
in
xor
imull
xchg
mov
frstor
sbb
xor
xchg
mov
pop
add
mov
inc
sub
fcmovu
mov
aas
pop
jne
mov
inc
push
cmpsl
test
lds
mov
cmp
je
inc
xor
or
gs
adc
stc
push
ss
cmp
sub
outsl
cmp
sarl
shlb
mov
add
inc
lods
cmpsb
stos
and
ret
add
inc
xlat
pushf
or
inc
dec
in
mov
jmp
inc
enter
push
lods
sarl
add
loope
or
lcall
xor
pop
rorb
movl
mov
mov
add
pop
mov
adc
enter
call
mov
inc
fnclex
mov
xor
test
je
popf
jne
or
dec
push
das
loopne
and
test
gs
lcall
mov
bound
sub
sbb
negb
cmp
jbe
xor
and
adc
mov
add
aam
cmp
and
xchg
cmp
lret
or
test
add
fdivs
setl
jne
mov
fwait
mov
push
mov
into
out
add
jecxz
push
icebp
jecxz
jp
dec
rcrb
mov
pop
pop
aaa
enter
and
hlt
and
pop
aas
add
push
sbb
aad
add
push
xlat
pop
jl
aam
pusha
adc
xchg
jo
outsb
lahf
add
movsl
sub
scas
int3
cltd
xchg
cltd
add
test
aad
into
push
adc
push
movsb
daa
add
je
dec
faddl
roll
lods
neg
mov
mov
jbe
mov
aas
or
cmp
jbe
insb
shl
jmp
sub
js
mov
out
cmp
jb
add
sub
lea
mov
jbe
je
neg
push
inc
ds
repz
sub
pop
stos
rclb
movsl
jecxz
add
push
fs
cs
data16
jl
in
incb
push
or
inc
jns
mov
mov
nop
cmp
clc
cmpsb
adc
adc
dec
daa
sbb
call
enter
in
adc
push
loopne
pop
jp
xor
test
lock
push
or
xor
mov
ljmp
das
dec
mov
aam
int3
jp
push
pop
push
mov
push
jle
hlt
push
inc
jo
iret
nop
pusha
ret
orl
dec
jo
decl
js
mov
adc
mov
push
push
cmc
adc
inc
movsl
incl
add
testb
pushf
cmp
cmp
inc
clc
push
add
daa
xor
out
push
add
stos
std
or
ret
stc
adc
movsb
sbb
out
lahf
push
push
rol
outsl
cwtl
test
gs
sbb
loope
and
push
clc
lret
mov
out
or
pusha
aaa
sub
lock
outsb
xchg
mov
daa
cltd
fbstp
into
mov
dec
or
push
out
adc
dec
push
mov
mov
dec
sub
mov
and
pop
inc
sub
sub
push
jecxz
sbb
mov
sub
or
fidivrs
lahf
xor
je
sbb
fimull
or
imulb
pop
stos
cs
fs
insl
xor
xchg
or
out
popf
or
or
fistl
and
pop
enter
jle
cli
sti
inc
jl
or
xchg
mov
cli
cmpsl
popa
xor
xor
add
pop
nop
sub
fs
inc
cltd
shlb
xor
adc
adc
movsl
sub
cwtl
or
lock
mov
rcr
call
enter
outsb
inc
add
or
inc
add
jge
lea
addb
ret
mov
jmp
and
pop
jbe
aam
or
mov
sbb
dec
frstpm(287
adc
das
jecxz
push
add
push
movb
std
dec
and
sub
das
nop
pop
push
mov
addr16
dec
test
xorl
cmpsl
fmul
add
enter
mov
add
cld
dec
pop
push
cmpsl
aam
shll
cli
sbb
in
xchg
xchg
push
xor
mov
mov
imul
pop
sbb
add
test
insb
jl
xchg
sub
or
pop
sbb
push
pop
lret
adc
inc
scas
insl
sbb
nop
push
nop
int3
arpl
jecxz
adc
std
or
push
hlt
out
cwtl
and
js
dec
push
adc
mov
loope
movsb
and
push
and
lahf
ret
mov
test
push
xchg
inc
cld
test
xlat
mov
pop
inc
adc
dec
dec
nop
out
push
movsb
or
mov
mov
mov
inc
dec
or
dec
push
ret
outsl
add
push
jb
dec
dec
sbb
pop
pop
sub
push
fistl
pop
incl
aaa
ljmp
sbb
mov
fists
or
call
movsl
cs
or
lds
jno
std
subb
or
and
xor
mul
ret
and
cmp
mov
unpckhps
je
imul
daa
inc
jb
sbb
loop
inc
push
ret
jmp
mov
sub
ret
or
xor
push
xor
mov
xor
pop
sub
popa
inc
fwait
mov
lea
cld
add
cmp
idivb
adc
gs
dec
loopne
pop
mov
outsl
inc
adc
fiaddl
nop
arpl
pop
adc
xor
xchg
xor
filds
push
pop
mov
jo
cltd
popf
add
sahf
ss
pop
inc
call
add
rcr
les
repnz
ds
add
test
mov
test
adc
dec
inc
or
pusha
cmp
jl
loopne
or
push
xchg
cltd
push
notb
xor
enter
add
insl
push
and
sahf
adc
cmp
xor
insb
fidivs
sbb
jge
adc
add
and
jmp
sbb
aad
xor
call
pop
cmp
andl
or
andl
pop
movsb
add
push
mov
ret
ds
pop
mov
ret
sahf
push
or
cmp
jns
jl
jp
jne
shll
xor
sub
daa
push
sub
fdecstp
inc
push
mov
lods
and
pushf
out
ret
and
je
lods
pushf
and
sub
and
and
nop
or
popf
mov
inc
cmp
mov
jmp
mov
insb
sub
fiaddl
mov
push
in
pop
mov
pop
sbb
inc
je
sarb
mov
and
bswap
jle
enter
ret
adc
xor
jg
dec
push
or
adc
and
ja
dec
or
imul
jp
jne
xor
lock
inc
in
fldcw
jmp
sbb
out
movsl
and
adc
adc
sbb
mov
stos
or
sub
adc
adc
in
fsubrs
and
push
and
mov
cmpsb
cmp
or
notl
sbb
push
les
sbb
stc
movsl
aaa
push
fsubr
or
inc
call
jne
xchg
mov
push
or
cmp
jle
sub
jmp
adc
test
ljmp
push
jnp
adc
and
cmc
or
jne
sahf
or
pusha
pop
push
sub
call
outsb
enter
mov
cld
or
das
or
push
lret
pop
sarl
jns
ss
es
sbb
mov
mov
and
enter
test
sbb
push
jae
xchg
cmp
je
mov
adc
pop
les
or
pusha
test
mov
cltd
mov
mov
out
rcll
adcb
aaa
out
aaa
sti
test
cmp
adc
dec
add
outsb
mov
mov
adc
cli
pop
mov
add
adc
les
lea
aas
movb
adc
push
sub
adc
test
pushl
push
inc
dec
push
jle
cmp
je
in
adc
cld
mov
dec
nop
adc
and
cmp
dec
popa
add
pop
mov
xchg
test
fwait
rcll
lcall
fcmovb
pop
dec
xchg
test
cmp
jne
or
jmp
and
mov
scas
clc
pop
sbb
dec
mov
lret
popa
mov
cmp
push
inc
aad
data16
cmp
or
mov
test
dec
sub
sti
fwait
adc
inc
cmpb
data16
jmp
movb
inc
mov
pusha
xchg
loopne
jae
push
adc
pusha
mov
adc
cmp
cmp
fs
cmp
mov
mov
inc
int3
add
adc
pop
adc
sub
pop
mov
or
sbb
loopne
jg
xor
jle
wbinvd
jb
nopl
inc
enter
sub
ljmp
test
in
mov
test
add
xor
xchg
or
sbb
fcoml
lret
add
push
fucomp
ret
xor
mov
xor
movsl
cmpsb
push
rclb
or
xchg
pop
in
add
sub
adc
push
sub
or
or
adc
pop
add
push
sub
jl
add
jl
lods
and
ljmp
je
mov
add
add
jl
sub
push
insb
ret
mov
daa
jns
adc
push
les
inc
push
mov
dec
leave
clc
or
lea
mov
mov
mov
ret
mov
pop
pushf
or
pusha
add
into
xchg
jne
xchg
lock
add
jmp
popa
or
dec
lock
pop
inc
or
pop
fildll
sbb
push
pop
or
sbb
jmp
add
or
xor
mov
mov
mov
insb
dec
andb
cmpsl
add
loope
cmp
sbb
jae
enter
inc
imul
pop
int3
lcall
pop
pop
sub
sbb
lods
js
lods
fbstp
add
mov
jns
lods
adc
xor
sbb
jo
xor
dec
mov
in
lds
fs
je
xlat
and
jae
aam
sub
inc
xchg
lods
or
sbb
lds
add
and
jp
cmp
inc
ret
test
test
add
lcall
push
inc
sbb
inc
xchg
je
jp
insl
mov
data16
sti
inc
pop
mov
add
push
jg
and
jl
mov
gs
lock
xorb
push
movsb
into
test
insb
and
xchg
ret
or
insb
or
and
nop
pop
enter
inc
push
add
xor
sub
or
push
je
dec
and
mulb
push
mov
mov
cwtl
or
pop
fstpt
inc
jmp
shl
cwtl
and
xchg
cmp
hlt
mov
xor
clc
pop
or
cmp
fisttpl
adc
outsl
shlb
or
push
or
lcall
in
fldcw
in
mov
ss
pop
adc
mov
adc
mov
push
test
mov
movsb
or
bound
or
or
lock
repz
add
add
call
into
or
lret
shlb
mov
lret
mov
mov
scas
push
adc
call
jne
or
jmp
or
stos
int3
mov
pop
test
int
jnp
popf
jmp
insb
pop
pop
test
pop
mov
push
xchg
sbb
and
jb
ja
or
das
add
add
or
ret
sbb
lret
mov
repnz
sub
popa
sbb
pop
and
mov
clc
testb
or
or
xor
dec
or
sbbb
cmpl
add
dec
adc
pop
mov
push
sub
sub
mov
jg
loop
rolb
adc
mov
cwtl
mov
push
mov
and
dec
outsl
add
pop
out
pop
fs
cltd
adc
mov
and
insl
sub
pop
push
mov
mov
push
push
fcmovb
cmp
fisubrs
ret
jge
adc
popa
lea
lock
scas
pop
add
ret
pop
cltd
addr16
sbb
sbb
nop
loopne
mov
and
repnz
add
test
inc
push
xchg
mov
mov
scas
insl
pushf
or
sub
fsub
mov
push
dec
and
or
push
mov
push
inc
add
adc
adc
adc
insl
xor
add
fists
ss
cltd
ret
nop
add
adc
addl
lods
dec
or
dec
sbb
mov
subb
pop
mov
push
add
pushf
push
xor
mov
fnstsw
inc
jl
sub
not
stos
enter
and
or
add
pop
dec
push
repnz
fidivl
xchg
hlt
fadds
test
sbb
or
addb
cmp
adc
fsubs
mov
dec
bound
xchg
lds
popf
imul
mov
js
or
fwait
xchg
hlt
add
loopne
add
adc
sub
loop
push
add
sti
add
testb
xor
fnsave
jne
test
imul
pop
push
lock
xor
mov
mov
pusha
pop
add
cltd
ds
sub
loopne
mov
jmp
jg
sub
popf
imul
add
test
inc
xor
mull
cmp
jl
movsl
mov
fs
mov
test
push
out
out
cmp
aaa
inc
push
and
andb
inc
pusha
mov
fiadds
repz
movb
ss
es
aaa
sub
jge
or
or
xchg
push
cmp
inc
fsubrs
clc
add
adc
fmull
inc
hlt
ret
mov
jne
and
jb
jae
pop
das
aaa
lea
mov
jmp
hlt
adc
sub
or
add
and
ljmp
or
and
pusha
loopne
movb
mov
and
pop
xchg
fucomi
bound
lea
inc
xor
jne
insb
popf
outsb
cs
jl
adcb
fisttps
add
jmp
adc
push
incl
rorb
sbb
test
or
push
orb
push
xchg
nop
sbbb
push
jmp
push
adc
divl
aam
cld
xor
or
mov
sub
out
mov
mov
lods
add
push
pop
pop
inc
push
mov
push
xchg
mov
out
loopne
call
incl
dec
cmp
shlb
iret
ss
sbb
fldcw
mov
xor
sbb
rorb
xchg
je
or
xor
sub
or
outsl
cltd
ljmp
xchg
mov
data16
cmp
or
dec
dec
add
lret
fildl
inc
inc
push
cmpsb
test
insl
loop
adc
add
pop
dec
add
adc
mov
ficoms
fists
iret
pop
push
daa
pop
aam
add
cmp
mov
mov
inc
cmp
cli
push
dec
dec
je
dec
or
and
sbb
rcr
outsb
push
jmp
jo
xor
adc
bound
sbb
or
insb
push
out
push
push
out
les
push
adc
push
je
sbb
xor
inc
sbb
mov
jecxz
pop
rolb
addl
jle
lea
or
add
xchg
lea
aaa
sbb
pusha
loopne
adc
or
into
stos
push
ficoms
cs
inc
shrl
shl
pop
enter
jne
push
mov
mov
loopne
mov
cmp
inc
and
sbb
cld
movl
outsb
adc
stos
inc
or
sub
mov
mov
push
inc
in
xchg
cwtl
jge
popf
mov
test
cmpb
pop
xor
test
mov
inc
push
data16
jb
loop
ret
and
or
or
imul
adc
add
jb
cmp
cmp
sahf
aas
mov
push
add
ror
adc
add
lret
inc
adc
out
xchg
xchg
scas
inc
movsl
jnp
popa
movsl
popf
dec
fcomps
sbb
jbe
add
cld
xchg
or
imul
push
or
inc
inc
mov
scas
jle
add
cmp
xchg
cmp
nop
fs
sbb
jo
out
adcb
mov
xor
jg
loop
out
sbb
sbb
jle
inc
mov
sub
daa
dec
ficompl
sub
orl
cwtl
sub
pop
mov
xchg
pushf
scas
pop
add
mov
insb
and
shrl
or
push
add
test
in
insl
pop
pop
or
cmp
hlt
out
inc
in
mov
rcrb
call
insl
loopne
add
insl
in
mov
mov
or
dec
out
leave
insb
mov
inc
cmp
xchg
fwait
test
mov
xor
cmp
hlt
rclb
cmp
add
addr16
sub
push
movsl
mov
arpl
and
sbb
pop
jmp
push
inc
or
pushf
inc
or
gs
mov
into
inc
jae
imul
xor
xor
xor
sbb
notl
sarb
jg
aam
xor
push
cmovnp
dec
push
push
jo
insb
sbb
pop
push
lcall
jbe
push
xchg
dec
cli
cmp
sbb
shlb
clc
jmp
xor
lcall
dec
in
xchg
jae
ds
shll
test
hlt
add
cmp
jmp
adc
adc
sub
adc
add
loope
in
add
rcr
mov
lea
pop
ja
sub
mov
push
mov
mov
pop
hlt
pop
test
mov
sarb
dec
sub
sbb
loopne
ret
cltd
add
pop
fsub
popa
xlat
inc
mov
or
pop
dec
adc
jmp
jbe
lods
shll
mov
lods
adc
fdivr
sub
pop
pop
prefetcht1
sbb
or
mov
adc
outsb
or
push
push
mov
sbb
lea
sbbl
mov
subb
mov
pop
lock
repnz
std
mov
sub
cmp
ljmp
dec
insb
jbe
cmpb
jl
incb
hlt
sarb
push
pop
jbe
inc
dec
adc
int3
push
xchg
xchg
jp
and
xor
xchg
xchg
xor
mov
mov
sub
sbb
sub
cmp
dec
and
lock
push
dec
adc
xchg
mov
xor
dec
in
add
imul
imul
ljmp
push
push
test
ret
adc
les
mov
cvtps2pi
xchg
aam
or
pop
movsl
mov
push
push
inc
or
push
mov
stos
push
adc
movsl
je
repz
mov
or
sahf
out
sahf
cmp
gs
adc
mov
mov
inc
stc
cltd
lods
dec
push
inc
xor
or
dec
push
gs
mov
jbe
push
xchg
pop
sub
mov
xor
add
and
imul
scas
mov
mov
cmp
or
inc
sub
mov
fs
aam
lock
inc
cmp
sbbb
jp
inc
arpl
and
pop
out
popf
inc
dec
pop
mov
add
insl
inc
and
push
inc
mov
jmp
sbb
loope
fs
int
add
mov
sbb
fwait
les
sbb
pop
loop
lods
or
pop
cmp
sbb
mov
push
lods
cwtl
arpl
jmp
loop
aam
fsubl
push
cmp
push
xchg
leave
loope
les
lret
je
insb
sub
das
sbb
shll
jo
lds
jae
or
jne
push
jb
pop
jne
addr16
xchg
jge
enter
jl
jg
sbb
jmp
jg
and
jl
lret
pop
lea
adc
push
mull
or
push
cmp
jl
test
jne
imul
add
add
adc
and
inc
mov
insl
adc
push
lea
and
jbe
mov
nop
incl
and
mov
push
or
cmc
inc
daa
add
add
pushf
fadds
mov
cli
cmp
sub
add
sub
sahf
fistl
mov
or
inc
sbb
or
sbbb
xlat
inc
xchg
dec
rcrb
mov
jb
jmp
push
add
pop
push
es
pop
test
test
inc
arpl
push
and
xor
mov
popa
dec
add
das
mov
or
lret
mov
sbb
push
push
and
dec
push
jne
sbb
or
test
ret
inc
pushf
or
rcl
pop
shll
dec
pushf
push
push
iret
test
jle
fs
movsl
cmp
sbb
jl
popf
rorb
lcall
mov
cmp
adc
or
adcl
add
ss
notb
pushf
addb
push
mov
test
scas
mov
add
adc
mov
xor
sbb
mov
rcr
outsb
push
sbb
xor
lret
into
sub
lds
mov
add
push
adc
push
cmpsl
push
es
or
xor
into
xor
jb
inc
pop
mov
xor
or
cs
ljmp
xchg
sbb
push
sbb
aam
aas
cli
or
ss
jbe
loope
dec
shr
shl
fistpl
sahf
mov
jle
lds
into
mov
or
out
shr
or
aam
jne
push
mov
adc
lods
xchg
loop
push
inc
dec
inc
je
mov
jmp
xchg
push
or
push
pop
insl
mov
rorb
push
movsl
sub
push
dec
out
loope
push
pop
mov
pop
mov
mov
data16
pop
xchg
mov
pop
cmp
add
jne
mov
or
xchg
je
inc
out
adc
mov
jg
movl
test
lods
js
mov
lret
cmp
jmp
cmp
inc
or
sbb
jnp
mov
push
mov
clc
push
movb
push
in
out
cmp
repz
ljmp
stc
out
sti
out
aas
xlat
shrb
jge
jle
add
or
or
int
push
or
jne
and
imul
jo
xchg
data16
lods
mov
push
jp
push
out
push
mov
lds
clc
or
outsl
inc
ret
pop
push
test
and
adc
in
call
xor
and
sbb
out
or
xchg
imul
push
sarb
push
sub
movzwl
or
sbb
imul
or
call
cmp
leave
dec
mov
lea
ret
ljmp
insb
adc
neg
cmp
sbb
adc
aas
jb
aaa
sbb
xor
sbb
mov
je
adc
sahf
push
dec
push
pop
mov
mov
adc
je
pop
loop
xchg
clc
cli
insb
inc
and
in
aaa
add
push
mov
pop
jne
int3
pop
neg
mov
jle
cmp
mov
xor
dec
add
data16
xchg
sub
pushf
xchg
dec
iret
mov
adc
xchg
inc
ss
sbb
mov
fs
xchg
jo
out
xchg
push
adc
add
sbb
dec
mov
xchg
cmp
lea
jl
mov
push
push
dec
jmp
or
jg
movsb
inc
incw
incb
sub
sub
mov
xchg
add
add
aad
test
add
jne
pop
hlt
cmp
js
pop
add
andb
or
leave
dec
mov
mov
insl
push
call
and
or
mov
push
xor
push
lret
or
cmp
lea
and
cli
push
add
lods
cli
std
mov
mov
ja
cmp
inc
adc
mov
jmp
add
sub
movsb
xchg
daa
testl
hlt
das
add
in
push
cmp
adc
add
insl
mov
push
scas
mov
cs
push
or
inc
movsl
dec
push
pop
pop
push
mov
inc
sub
loopne
mov
or
call
add
cmp
or
es
andb
inc
xor
push
pusha
push
add
mov
push
or
sbb
adc
push
or
jg
cwtl
or
rolb
in
js
jle
mov
orb
rorl
cmp
or
outsl
sbb
cmp
insb
add
subb
add
jno
dec
ljmp
ss
and
jno
fdivrl
fmull
test
sbb
mov
fiadds
adc
sbb
push
xchg
es
or
pusha
dec
xor
cmpsl
sysexit
sbb
add
push
ret
dec
jae
js
mov
add
add
in
popa
adc
jmp
imul
xchg
in
mov
test
push
insb
andb
pusha
std
les
xchg
push
mov
and
dec
leave
mov
mov
push
adcb
or
adc
inc
inc
xchg
push
inc
insl
stos
or
fnstsw
fisubl
cmpl
pop
pop
push
cmp
sbb
stos
and
add
jmp
jl
mov
and
push
cwtl
dec
test
sbb
clc
push
movsl
daa
jbe
sahf
add
jb
add
add
cmpsb
dec
xor
rolb
div
and
inc
cmpsb
sub
mov
inc
add
sbb
addr16
xchg
xchg
and
test
mov
mov
pop
ds
jbe
pop
dec
mov
inc
les
and
and
add
sahf
outsb
adc
adc
fsubrp
mov
push
pop
orl
push
dec
or
lds
cmp
adc
aas
mov
std
push
cmpsb
mov
dec
cmpsl
dec
jmp
or
push
out
cmp
ja
add
orb
pop
mov
leave
adc
sbb
dec
pop
ret
test
push
fs
andl
cmpsl
sbb
or
pop
fwait
pop
sbb
sub
or
sarb
shrb
in
or
fldl
mov
adc
jo
add
cmp
or
in
fcoml
push
push
xor
mov
or
call
aas
xchg
pop
leave
flds
mov
or
xorl
adc
nop
dec
sub
sub
ffreep
mov
cwtl
mov
add
rcr
jmp
out
iret
xchg
jmp
shlb
sbb
xchg
bndstx
aam
fldl
mov
ret
lods
dec
rcl
fistl
jl
iret
movsl
nop
movsb
aam
fdivl
push
mov
add
in
cmpsb
imul
gs
imul
pop
das
or
pusha
insb
ret
cmp
jl
or
test
push
inc
cmp
add
dec
mov
xchg
dec
pop
scas
sub
push
push
out
or
test
pop
stos
gs
movsb
add
daa
jmp
dec
mov
inc
push
mov
add
xor
cs
cmp
mov
or
in
icebp
out
xchg
jbe
inc
mov
push
test
dec
inc
sbb
out
clc
jg
xor
sarl
and
pop
nop
ret
sub
addl
dec
xchg
xchg
or
subl
nop
inc
lea
push
ficompl
test
add
test
cmp
lds
les
lret
pop
adc
sarb
pushf
add
imul
or
cld
jmp
cmp
je
xchg
lods
flds
cmp
dec
cmp
ret
dec
add
cmp
add
push
enter
mov
icebp
add
dec
arpl
inc
cmpsl
xor
loope
lcall
and
add
or
jecxz
cld
push
mov
add
adc
test
jne
pop
cmp
jns
push
in
insl
jmp
xor
outsl
dec
xor
sub
je
fdivp
add
pop
js
adc
adcb
add
adc
add
or
arpl
mov
test
mov
adc
pop
sub
adc
xor
dec
xchg
xchg
lock
sar
pop
andl
lods
mov
nop
adc
xor
adc
and
add
or
decb
xchg
sub
je
lahf
dec
and
sbb
pushf
in
sub
js
cmp
dec
jmp
aas
test
add
sbbl
sub
fcoml
sub
movsb
pop
inc
gs
imul
movsb
cmp
andl
shrb
cld
jle
cld
sub
sbb
jmp
es
or
ret
push
fldl
mov
cmp
push
push
fs
cli
loope
sahf
xor
lods
inc
in
pop
mov
je
inc
mov
xor
add
lcall
inc
push
jmp
outsl
and
rclb
push
cmp
jl
mov
out
testb
ja
in
dec
les
imul
pusha
adc
push
stos
lods
push
rclb
pop
adc
add
or
test
mov
loopne
sub
pushl
push
lea
add
add
xchg
mov
inc
adc
mov
mov
cmp
add
stos
jo
xchg
pop
push
inc
stc
pop
arpl
lahf
sub
rep
repz
push
ja
sub
cmpsl
mov
add
call
cmp
or
sbb
filds
mov
inc
cmp
leave
xchg
popa
xor
lock
jmp
repnz
mov
sub
xchg
pop
push
push
lret
movl
push
rcrb
imul
std
push
mov
add
xor
sahf
pop
bound
cwtl
les
roll
or
push
aas
sbb
jecxz
mov
dec
sbb
adc
mov
roll
dec
add
jnp
ret
xor
pop
xor
pop
adc
lcall
ret
push
fs
cli
imul
inc
xchg
push
stos
push
jae
pop
xchg
insb
sbb
xchg
dec
or
popa
push
pslld
les
in
das
xchg
or
pop
pop
bound
mov
push
inc
prefetchnta
gs
dec
pop
mov
push
xchg
push
loope
add
cmpsb
js
dec
lcall
js
mov
orl
xor
pusha
push
repz
movsl
pop
fisubrl
lahf
inc
adc
inc
push
pop
cs
inc
pop
dec
pop
outsb
dec
fwait
adc
popa
testb
xor
jae
repnz
cmpl
jne
cs
jmp
or
js
arpl
xor
sub
sbb
aad
rcrl
inc
pop
fnsave
or
xchg
push
sbb
rcrb
add
xchg
mov
mov
or
shl
pop
arpl
rorb
jns
rcrb
xor
or
jp
or
jo
mov
fadds
subb
dec
and
leave
xor
jp
mov
shr
push
or
dec
jecxz
test
xorb
sub
mov
jo
mov
jl
ret
xchg
gs
mov
popa
sbb
js
js
add
aaa
aam
cmp
jle
sbb
xchg
cmpsb
push
jmp
orl
push
sbbb
ret
xor
sbb
jb
or
xor
into
xchg
scas
sbb
dec
mov
cmp
gs
xchg
lret
mov
or
cmp
jb
cmp
flds
pop
or
imul
sub
in
adc
sbb
mulb
aam
and
add
in
insl
jnp
mov
add
jmp
cmc
xchg
mov
aam
pop
cmp
jp
push
test
test
mov
mov
add
xor
or
dec
mov
hlt
add
mov
cmc
cmp
push
jmp
jle
push
push
repnz
add
cmp
movl
push
ret
cmc
inc
je
fnstsw
or
push
jo
cmp
dec
loope
add
dec
jo
push
test
and
pop
adc
adc
cmp
test
mov
inc
xor
rol
and
mov
les
mov
sbb
enter
jbe
jg
rcl
sbb
mov
lretw
call
xchg
dec
adc
add
xor
andl
clc
pop
xor
add
push
sub
pop
push
or
arpl
adc
add
add
sub
push
push
or
or
inc
mov
or
mov
js
add
cwtl
xchg
pop
sub
clc
mov
icebp
adc
mov
dec
adc
clc
and
fnstsw
pop
add
mov
mov
sub
mov
mov
sbb
and
jo
push
cs
repnz
shlb
sbb
mov
fcomps
lods
or
das
pop
mov
test
out
insb
or
jle
je
sahf
std
sti
mov
cmp
sbb
and
mov
mov
sbbb
aad
mov
pop
or
sub
pop
pop
inc
xor
test
sbb
movsb
and
sbb
add
and
pushf
mov
mov
inc
mov
and
mov
add
test
jl
shlb
mov
and
push
xchg
hlt
mov
sub
cs
xchg
sahf
sub
push
fisubl
jp
and
popf
rol
ss
dec
repz
push
popf
andl
adc
xlat
sbb
mov
adc
js
mov
rcll
lret
and
jg
xor
das
lret
outsb
jnp
sub
jp
pop
sahf
sub
test
push
cmp
out
adc
jmp
adc
xchg
hlt
fisttpll
rcrb
dec
push
sarl
aas
popa
lea
lcall
push
jno
sub
or
xlat
inc
mov
push
fcoms
mov
mov
push
addl
xchg
or
jmp
sub
mov
divb
inc
or
outsb
cmp
mov
gs
sub
add
scas
sub
rcll
ud1
lock
pop
pusha
imul
adc
shll
es
mov
add
push
fstl
sbb
sub
es
ds
sbb
cmp
mov
movsb
add
jge
repz
push
in
shr
enter
adc
test
xor
fcoms
sti
lret
or
sub
lock
fiaddl
ja
sub
and
in
push
test
or
jp
jne
mov
push
adc
ret
jge
ja
in
rcll
push
imul
xchg
push
in
movsb
imul
add
adc
push
adc
xorb
xorl
mov
dec
pop
adc
mov
test
adc
jno
cmp
adc
popa
mov
sbb
in
dec
outsl
pusha
leave
data16
imul
scas
insb
add
add
icebp
jo
mov
mov
lock
inc
sub
sub
dec
mov
shrb
aad
mov
pop
sub
inc
pop
or
adc
mov
pop
fiaddl
and
in
push
push
in
cmp
adc
fnstsw
dec
mov
adc
push
or
push
and
sbb
mov
orl
push
cli
adc
xchg
push
dec
add
jns
jns
imul
test
lss
jle
mov
lea
push
mov
clc
push
push
push
shrb
or
sbb
or
bnd
dec
sbb
test
gs
and
pop
pop
push
mov
sub
dec
imul
jb
pop
xor
adc
jne
lds
mov
inc
jg
push
loope
dec
mov
pop
rclb
add
add
pushl
subb
cmpl
add
sbb
xchg
fwait
or
adc
loopne
movsb
insb
arpl
rol
imul
inc
push
enter
lret
add
mov
popf
shlb
push
push
in
ret
mov
and
shlb
xor
sub
inc
js
or
rorl
mov
push
int
test
ret
stos
or
or
push
ja
jae
mov
hlt
xor
sbb
sbb
pop
mov
test
addb
sub
fistpl
loop
mov
sub
or
jge
rep
fisttpl
pop
jbe
jne
sub
clc
je
std
and
lret
or
mov
sahf
or
pop
daa
rcrb
dec
fdivrl
jp
dec
aam
mov
movups
push
add
pop
xchg
inc
bound
in
popa
outsb
popf
mov
inc
rol
or
mov
outsl
push
xchg
jecxz
xchg
sbb
dec
xchg
outsb
xchg
cmc
sahf
js
sub
inc
sbb
jbe
hlt
xlat
cld
inc
cmp
pop
or
and
sahf
add
cmc
sub
jns
aad
pusha
icebp
idivl
inc
push
adc
rolb
push
push
shlb
pop
data16
fiadds
outsl
lcall
and
or
test
dec
or
dec
push
xchg
out
push
aaa
cmp
sbb
aaa
adc
jl
adc
shlb
pop
inc
dec
push
jp
repz
xchg
ljmp
pop
lods
ret
inc
loope
out
rcll
and
pusha
and
cmp
hlt
dec
adc
adc
jmp
rolb
mov
shlb
adc
fstps
mov
add
cmp
shrb
in
mov
aam
adc
jge
fidivs
add
je
add
sub
test
jne
mov
iret
sbb
push
or
decl
inc
rcrl
mov
prefetcht0
push
pop
xor
mov
mov
add
add
movsl
mov
add
push
dec
push
insb
movsl
add
pop
jmp
xchg
je
jo
aam
icebp
test
inc
pop
cltd
add
add
pop
ljmp
jle
add
jecxz
xchg
mov
je
fdivs
stos
adc
rcll
xchg
jg
and
lret
shlb
scas
inc
imul
add
in
je
sub
test
int3
dec
js
filds
or
adc
sub
push
stos
les
sarb
int3
ret
test
dec
pop
out
mov
push
lret
sarl
jecxz
clc
orl
dec
xchg
mov
imul
sub
icebp
sbbb
seto
push
int3
lock
push
add
jg
mov
in
int3
push
ffree
pop
in
and
push
fs
adc
call
sbb
xor
movsb
xchg
subl
bound
push
mov
enter
sbb
ret
jb
xchg
rol
push
js
out
pop
insl
ss
pop
insl
push
adc
mov
jg
insb
inc
xlat
sub
push
push
jmp
jle
sub
push
and
push
enter
pop
and
adcl
sbb
les
xchg
and
add
push
and
enter
or
dec
stos
add
dec
and
pusha
cmp
rorb
enter
dec
mov
ret
lret
pushl
addb
sub
sub
testl
and
lret
enter
jo
xor
inc
pop
inc
pop
sub
loopnew
add
dec
mov
frstor
mov
push
and
jle
pop
or
rolb
or
fiadds
in
jmp
inc
cltd
lods
shll
jmp
das
inc
cmp
mov
cmp
push
and
jmp
pause
loop
cmpl
push
jge
cwtl
mov
in
call
loope
stc
xchg
sbb
arpl
or
out
sbb
and
arpl
out
sbb
stos
idivb
push
or
scas
or
inc
jo
fcomps
jl
and
mov
shrb
sub
imul
mov
inc
lock
dec
and
sub
pusha
or
mov
arpl
xor
fcoml
and
and
add
shl
add
adcb
add
add
loopne
ror
jg
shl
std
push
xor
sbb
test
lea
push
inc
pop
enter
sub
enter
nop
lock
js
jb
sub
jno
mov
sbb
dec
jo
xor
sbb
mov
jno
pusha
inc
xchg
lock
out
in
mov
ret
push
sbb
cmp
mov
aaa
inc
pop
jecxz
lea
dec
adc
mov
cmp
pop
lret
cmp
adc
add
add
push
mov
shr
lahf
stos
and
sbb
pusha
and
das
push
mov
sbb
dec
dec
ret
test
hlt
jl
inc
adc
je
mov
adc
sbb
or
push
clc
incl
or
sub
decl
inc
cmp
push
outsb
repz
les
add
cwtl
jmp
lods
mov
inc
sub
jo
rol
or
jp
bound
sbbl
fadds
jecxz
and
push
mov
adc
push
popa
ja
ljmp
or
xchg
adc
insl
mov
cltd
lea
add
cld
cli
push
lock
push
or
jne
add
adc
lret
add
sahf
mov
shlb
fisubrs
push
jl
mov
sbb
cmp
push
sub
xlat
adc
into
je
subb
icebp
stos
add
movsl
mov
and
inc
cli
mov
movsl
mov
and
xor
leave
sub
pop
rcrb
mov
pop
sub
ss
mov
int3
jp
pop
sub
test
mov
mov
or
inc
pop
fbstp
pusha
push
xchg
jbe
divl
dec
daa
pusha
mov
xchg
add
ss
lock
loopne
repz
sbb
add
add
nop
icebp
push
in
jae
xchg
sub
jp
fiaddl
pop
pop
mov
dec
jecxz
xchg
outsl
jnp
test
lcall
xor
das
lods
lahf
js
mov
loopne
int3
into
jle
das
mov
imulb
xchg
xor
mov
mov
add
adc
loopne
add
andl
clc
xchg
fs
mov
sbb
js
push
xor
xchg
jecxz
cwtl
and
imul
js
clc
and
adc
push
pop
ds
sub
addr16
repz
mov
inc
ret
sub
mov
movsl
lods
int3
pop
inc
rcrl
jo
inc
or
bound
pop
pop
adc
lret
insb
pop
mov
movsl
xchg
pop
int
imul
adc
call
inc
out
mov
adc
in
and
push
gs
cmp
pop
stos
mov
xor
outsb
or
and
icebp
or
jmp
inc
cmp
sbb
pop
iret
pop
cmpsb
cmp
or
add
repnz
or
and
outsl
xor
push
dec
sbb
sub
repnz
lock
inc
xchg
mov
mov
dec
adc
mov
mov
mov
movsb
cmp
testl
jl
ret
add
out
orb
mov
lcall
add
xor
sbb
call
jns
jae
adc
daa
dec
rolb
dec
or
sbb
inc
je
mov
enter
add
lea
or
addr16
mov
inc
or
pushl
jae
ficoms
mov
pop
fs
aad
sub
push
adc
mov
push
shrb
cwtl
loope
and
or
fidivs
adc
cmp
mov
loop
mov
rorb
mov
filds
cmpl
mov
in
add
inc
hlt
gs
ljmp
fninit
call
dec
mov
or
aaa
add
cwtl
int3
push
mov
aas
or
ret
push
rclb
jmp
push
fdivrl
ds
lret
cld
adc
lock
cs
inc
or
sub
shlb
jns
lahf
sbb
cs
mov
dec
enter
clc
sub
int
jmp
push
jp
andb
xchg
xchg
jb
or
inc
inc
sarb
pop
cmp
pop
inc
jmp
into
dec
lcall
add
stos
fdivrs
dec
jo
or
test
adc
xchg
cmpsb
add
lcall
ret
jge
je
arpl
ret
cmp
pop
stc
mov
iret
fdivrl
add
int
cmp
or
jp
push
adcl
adc
jmp
jle
test
push
push
add
dec
out
movsb
sahf
ret
sub
rorl
sub
push
push
inc
cmp
add
ret
push
mov
ret
rolb
or
pop
aaa
jne
xlat
sbb
sbb
lcall
js
jle
xlat
jo
out
in
js
xchg
sbb
rcrl
push
add
stc
les
xor
jnp
push
mov
add
and
in
pop
pop
pop
add
loopne
sbb
sub
mov
ret
xor
pushf
or
push
insl
jmp
push
roll
pop
jecxz
adc
sub
push
mov
jle
mov
xor
and
add
inc
test
fcomp
or
cwtl
xchg
lea
add
shrl
popa
aam
dec
cmp
xorb
and
movsb
push
andb
jns
sbb
rcll
lock
lods
fcomps
pusha
jecxz
or
xchg
stc
mov
pop
push
add
jnp
and
mov
leave
push
dec
pusha
addl
push
jno
ret
leave
popa
lock
add
xchg
clc
inc
and
mov
pop
lret
sub
loope
or
aas
add
loope
push
cmc
and
es
and
test
es
sbb
or
pop
push
inc
adc
push
pushl
mov
movsb
fs
pushf
addb
push
dec
dec
dec
mov
add
push
notb
hlt
push
cmp
push
pop
nop
or
fildll
inc
push
adcb
loop
mov
push
lea
jg
push
adc
cmp
jg
enter
mov
push
or
outsb
dec
adc
push
dec
lock
jl
push
fdivr
push
movsl
aas
cwtl
pushf
call
push
push
loop
enter
popa
dec
jnp
aaa
add
or
pop
mov
xor
add
mov
xchg
movsb
push
xlat
mov
lcall
push
xchg
xchg
mov
pop
xorb
mov
or
lret
xor
jno
mov
or
push
fsubrs
test
or
cmp
cmp
in
loopne
insl
push
sbb
js
testl
inc
outsl
cltd
cmp
leave
enter
ljmp
pop
push
push
push
sbbl
lods
popa
xor
sub
data16
and
add
add
and
adc
adc
mov
pop
xchg
inc
call
xchg
cld
cmp
inc
or
dec
rcr
or
lea
inc
mov
cwtl
jmp
cmp
or
jl
push
push
inc
pop
pop
cmp
jmp
push
xorl
push
sbb
adc
mov
jno
mov
xchg
inc
jbe
push
adc
aam
xchg
loopne
aaa
dec
xchg
loope
sbb
cmpsl
cli
jb
ljmp
xor
adc
adc
ret
fimull
fisubl
sbb
mov
jne
outsb
and
push
lcall
push
mov
and
xor
nop
xor
inc
cmp
cmp
push
jl
or
popa
imul
rorb
mov
lret
outsl
add
into
jl
push
jl
cmp
and
or
sbb
sub
jo
or
inc
inc
dec
pop
sub
mov
xor
je
or
cmpsb
mov
dec
dec
movsb
lea
rolb
mov
and
mov
pop
andl
leave
lcall
dec
jne
mov
insb
jmp
or
inc
cmpsl
or
and
jo
push
lods
mov
and
pop
or
xchg
loopne
sub
adc
sarl
cmp
pop
shr
and
aam
push
adc
or
xchg
add
jo
stos
mov
out
inc
inc
cli
add
push
hlt
add
pusha
mov
sub
shll
idivb
call
or
sub
xchg
mov
movsl
test
rclb
fimull
fstpl
sub
xchg
xchg
lret
fcoms
je
mov
dec
add
movsl
xor
or
pop
or
cltd
sbb
insl
in
data16
jno
push
prefetcht0
inc
inc
pusha
jne
or
dec
jl
movsb
dec
or
outsl
ret
pop
xor
in
sub
sub
pop
cmp
push
lea
add
ss
and
mov
adc
shll
push
popa
ljmp
inc
push
xchg
xchg
addb
lret
out
mov
cmpl
mov
or
or
cmpsb
push
in
mov
ss
or
fld1
sub
push
sub
cmp
cmpb
adc
add
mov
and
inc
stos
shrb
or
test
push
lahf
xchg
or
sub
mov
adc
sbb
orb
es
pop
add
lock
std
das
xchg
xchg
mov
lret
idivb
add
inc
add
test
sub
test
dec
mov
dec
aas
pop
ss
mov
cwtl
add
hlt
popa
sbb
jmp
sbb
xor
test
adc
push
popa
iret
jg
arpl
pop
cmc
mov
cmpb
push
push
sub
mov
loop
adc
fld
rcrb
mov
jmp
ljmp
xchg
out
pop
adc
or
out
pop
cmc
cmp
lea
or
xor
mov
popa
xor
int
xor
mov
out
subb
or
jo
push
mov
adc
shlb
add
iret
cmpsl
jb
scas
or
inc
or
or
hlt
or
pop
or
inc
ret
wrmsr
inc
lods
cmc
xorl
and
jnp
push
scas
cmp
xchg
shrb
or
addr16
fidivrl
mov
ret
stc
mul
cld
and
and
xchg
mov
add
js
mov
fdivr
add
jne
fdivr
sbb
dec
dec
sbb
stos
in
aaa
pop
dec
rorl
ds
in
sub
icebp
cmp
scas
push
imul
ja
loope
mov
dec
sbb
fdivp
andb
rcr
inc
sbb
andl
sbb
test
add
pop
push
or
out
lock
sub
jnp
lock
push
jbe
or
sbb
cmpsb
aas
sbb
mov
pop
adc
and
icebp
test
cmpsb
push
adc
jmp
out
mov
pop
mov
sbb
or
xchg
adc
add
cmp
xor
daa
roll
add
call
or
lea
ret
arpl
movsl
bound
in
mov
adc
ret
gs
dec
test
out
mov
aaa
fadd
stos
sbb
jecxz
or
lea
loopne
cmpsl
jae
dec
mov
loopne
xor
mov
add
or
divl
aas
xchg
push
push
addr16
inc
xor
in
mov
push
fsubl
dec
das
jne
ljmp
aad
or
jbe
cltd
imul
mov
adc
cmpsb
cmp
sbb
inc
ret
cli
jne
aas
dec
sub
push
add
ret
or
mov
stos
add
repz
push
pop
cli
es
cwtl
adc
mov
mov
jp
subl
dec
xchg
mov
push
inc
jl
adc
rorl
sbb
call
jle
mov
test
jo
out
movsb
inc
adc
inc
and
push
cmpsl
pop
add
in
pusha
bound
mov
adc
call
sbb
pop
pop
or
mov
or
shrb
xchg
or
mov
cli
mov
icebp
cltd
jo
sub
dec
addl
mov
or
fwait
inc
pop
xchg
int
jnp
mov
out
jnp
push
insl
arpl
xor
in
jbe
push
add
pop
ret
add
cmp
sbb
and
cmp
loopne
inc
or
add
xchg
or
rorb
adc
mov
xchg
inc
popf
or
or
jo
add
jo
push
inc
scas
mov
out
adc
sub
fsubr
jp
cs
loopne
lret
jmp
push
nop
ret
sbb
jmp
push
add
inc
loope
es
shll
mov
inc
xchg
pusha
xchg
pop
and
in
add
test
mov
cmp
je
jb
shrb
jb
jno
aas
jmp
test
in
dec
jmp
jmp
push
addb
pop
insl
gs
pop
add
or
inc
ss
xor
pop
mov
jno
iret
inc
sub
inc
or
xchg
js
imul
push
push
repz
ds
andl
ret
fldl
and
mov
pop
es
jecxz
push
dec
add
xchg
insb
jmp
push
dec
push
mov
and
sahf
inc
sub
jecxz
xor
mov
es
xor
repz
push
dec
add
nop
mov
push
mov
add
out
push
xchg
cmp
inc
mov
mov
mov
or
mov
push
fdivrs
in
test
gs
add
push
fidivrl
jo
mov
adc
mov
mov
xchg
xchg
or
popa
add
cmp
cltd
mov
clc
adc
and
and
outsl
in
imul
jbe
adc
mov
mov
testb
push
loopne
in
mov
loop
add
cmpw
push
pop
xorb
sbb
fs
outsl
out
or
test
fcomps
jno
jo
or
out
pop
in
or
cli
jne
ja
dec
je
fisubrl
lea
pop
push
pop
shl
pop
or
sbb
imul
test
call
leave
push
and
mov
in
ja
loope
fidivrs
adc
add
addr16
add
jbe
jl
orb
jmp
jge
das
idivb
lret
enter
jnp
xchg
insl
stos
mov
push
cmpsb
mov
sahf
stos
push
and
leave
mov
lock
jnp
pop
push
or
push
dec
test
in
adc
sub
jmp
cmp
pusha
mov
fistpl
adc
or
push
dec
xlat
enter
adc
mov
push
or
or
mov
push
inc
mov
mov
sbb
adc
push
push
add
xchg
dec
and
add
inc
mov
inc
js
ljmp
in
dec
mov
add
sub
jle
inc
pop
imul
fstpt
aam
fidivl
dec
adc
ja
aas
dec
inc
cmp
jne
leave
pop
incl
aaa
push
jns
add
popa
sub
js
addr16
jecxz
leave
stc
sti
or
sbb
cmpsl
cmp
out
jne
int
sahf
and
cmp
push
addr16
cmp
movl
sbb
jp
in
rol
adc
scas
outsb
out
shlb
mov
push
gs
lahf
cmp
pop
or
jne
loop
mov
ret
sar
pushl
jl
test
sub
js
or
or
test
popl
jmp
aam
mov
nop
cmpsl
dec
mov
push
jecxz
push
jp
lea
and
or
rep
mov
xor
mov
cmp
jae
add
cmp
sub
pop
outsl
int3
pop
outsb
lea
mov
shlb
mov
in
iret
fists
ss
mov
sbb
cmp
loop
xor
push
xor
notl
daa
fcomi
sbb
pop
hlt
or
mov
imul
and
call
mov
mov
stos
mov
pop
loope
enter
test
popf
xorl
dec
sub
sbb
adc
add
fbstp
add
les
data16
out
and
inc
enter
or
add
pop
cmp
out
mov
xchg
das
push
psraw
ds
jecxz
add
dec
xchg
stos
push
add
dec
jmp
and
clc
hlt
pop
sbb
dec
push
cltd
add
mov
test
mov
mov
push
jns
mov
dec
xchg
inc
cmp
xchg
or
rclb
push
shll
mov
cmp
sbb
mov
mov
in
xor
pop
or
cmp
sbb
xor
cld
lods
jp
jae
rclb
clc
loopne
cwtl
roll
xchg
sbb
das
push
xor
pop
xchg
call
je
ficoml
andl
sub
mov
inc
push
mov
es
inc
push
or
call
mov
or
aaa
or
jo
cmp
push
push
subl
js
fadds
xchg
mov
adc
sbb
mov
push
mov
jnp
fstl
jge
and
push
adc
shrb
mov
add
addl
dec
movsl
shrb
mov
stc
hlt
mov
mov
loopne
pushf
leave
jp
xchg
jmp
mov
mov
cmc
xchg
ret
lock
pushl
popa
push
sbb
add
pop
pushl
pushl
jge
jmp
cli
lea
add
clc
imul
nop
jmp
daa
push
sbb
cwtl
push
fsubrs
in
adc
mov
add
pop
popa
jo
fimuls
mov
repnz
adc
mov
test
cmp
shlb
aad
inc
adc
sahf
test
or
push
adc
inc
and
pop
adc
add
popa
xchg
dec
rorb
out
ret
add
inc
loop
push
cmovge
push
pop
pop
mov
nop
mov
data16
shrb
push
xchg
ds
cmp
jmp
pop
mov
inc
pop
add
js
push
int
clc
push
nop
sbb
popa
nop
push
pop
push
iret
lods
cmp
movsb
nop
mov
jg
dec
cmp
add
dec
fbld
lock
or
push
sarl
xor
hlt
xchg
push
sbb
loop
add
add
adcl
ja
jo
int3
sub
inc
filds
sbb
jmp
addr16
push
and
xor
add
jnp
or
pop
xor
leave
dec
pusha
cli
sbb
push
ja
std
adc
cmpsb
adc
xchg
cs
cmp
xchg
inc
loope
js
and
dec
jmp
cs
fld
rorl
add
add
loope
popf
outsl
xchg
lods
je
and
adc
cltd
js
shlb
jle
jne
aam
sbb
iret
ss
ret
add
shl
mov
repnz
sub
or
sbb
or
adc
ds
enter
ret
inc
mov
push
and
sub
push
pop
inc
xchg
xor
xor
hlt
inc
dec
sub
or
sub
ljmp
sbb
dec
xchg
es
pop
repnz
lcall
push
movsl
rclb
fsubrs
jp
popf
int3
mov
add
and
jmp
stc
insl
jp
push
xchg
dec
and
sub
mov
dec
or
call
add
xchg
push
das
add
cmpb
or
stos
inc
sub
add
imul
cmpsb
shlb
pop
mov
push
or
sbbl
adc
xor
stos
and
xor
xor
sbb
bound
jmp
pop
mov
popf
vxorps
cmp
inc
sub
sbb
jno
xor
cwtl
mov
sbb
js
hlt
clc
inc
je
jg
or
cmp
jne
pop
xchg
or
sub
hlt
or
sbbb
add
and
xor
push
and
jb
stos
lods
jge
in
call
and
test
rorb
jb
sbb
jne
mov
add
push
sub
inc
adc
loopne
lods
mov
and
mov
mov
push
sub
fmuls
push
cld
inc
mov
mov
fsubrs
aad
xchg
dec
inc
or
aaa
or
jg
testb
pusha
pop
call
mov
mov
test
or
mov
sub
imul
add
or
popa
dec
popa
cmp
push
pusha
mov
jne
xor
xor
imul
push
adcl
xchg
lds
mov
xorb
aaa
cmp
pop
rclb
or
and
bound
sub
and
test
fisttps
lea
leave
js
cmp
push
movlps
repnz
add
iret
addl
sub
or
int
mov
mov
add
ljmp
sub
out
clc
add
cmc
ret
sarb
mov
pop
jo
addl
dec
pop
xlat
or
jg
lods
lret
ret
cmp
movsb
pop
xchg
xchg
push
pop
push
xchg
loopne,pn
das
xor
or
push
inc
fsubs
adc
arpl
fiaddl
push
fs
jb
add
sbb
adc
xor
push
mov
sub
adc
push
testb
dec
mov
inc
sbb
mov
nop
push
fsts
inc
xchg
and
or
xchg
test
gs
mov
push
cmp
enter
xchg
or
mov
in
mov
rcr
jmp
inc
sub
mov
ljmp
ss
jmp
jne
pusha
pusha
sub
dec
add
lret
dec
push
sub
adc
ret
loope
adc
in
xlat
jl
adc
pop
jbe
jne
das
or
cmp
mov
les
xchg
add
and
ds
or
dec
ss
lret
and
and
pop
inc
xlat
add
add
imul
gs
lock
insb
jmp
dec
loopne
or
add
push
push
mov
stos
inc
pusha
jbe
pop
ficomps
xor
lcall
mov
js
ljmp
adc
sbb
mov
test
adc
enter
out
and
aaa
mov
fcoms
sbb
scas
ret
xor
fbld
add
add
ljmp
push
push
loopne
push
mov
arpl
or
lock
hlt
jae
pushf
ret
shlb
pushf
lock
aaa
or
nop
mov
add
mov
cmp
sub
shr
or
push
cs
testl
xorb
push
mov
dec
ja
stc
jb
test
outsb
hlt
je
mov
shl
mov
lret
fldt
adc
mov
aaa
fisttps
mov
mov
inc
or
movsb
cmp
lret
gs
xchg
and
push
mov
xchg
rclb
icebp
addl
mov
and
repz
ret
push
xchg
ret
push
push
jo
sub
add
mov
add
push
ret
sbb
push
add
notb
mov
dec
or
in
lret
xchg
lds
shrl
mov
sbb
je
pop
jmp
cmpsb
lods
nop
mov
stos
and
sbb
cld
dec
xchg
or
out
push
sbb
or
jnp
sti
lods
mov
jne
jge
popa
js
and
sbb
push
or
adc
pop
inc
adc
aas
pop
pop
gs
das
push
cmpsb
push
imulb
or
mov
insb
or
sub
pop
push
dec
mov
xchg
push
jecxz
push
add
jge
add
push
push
push
sub
mov
inc
mov
dec
loop
cmp
fs
fldpi
xchg
loopne
ds
cmp
hlt
into
scas
or
inc
or
pop
add
andb
cmpsb
daa
stos
pop
adc
push
je
jl
lds
ror
mov
das
inc
or
cmpsl
mov
pop
je
sub
movsb
mov
or
lret
popf
jo
aaa
lods
icebp
ret
add
insl
jmp
adc
sub
pop
add
cmpb
cmp
ja
push
divl
sub
rcrl
xor
sub
push
xor
mov
mov
or
jl
add
dec
movl
or
mov
xchg
lods
inc
pop
adc
cld
add
das
dec
mov
or
xchg
cmp
stos
inc
adc
adc
movsl
loope
incl
lods
xchg
sbb
loop
mov
jl
adcl
jmp
jbe
adc
sbb
sahf
add
or
pop
scas
insb
fldl
decl
sub
mov
in
push
pop
loopne
cs
adc
add
push
addr16
jo
mov
sbb
cmpsl
mov
mov
mov
mov
push
cmp
mov
cmp
aaa
adc
mov
push
pop
mov
and
ffree
sbb
popa
out
dec
dec
or
inc
bound
xchg
nop
cmp
stc
xchg
sbb
insb
xor
xchg
xor
arpl
jnp
inc
jmp
lock
inc
jno
hlt
into
stos
aas
mov
ret
fcmovne
imul
cmp
pop
add
movsb
or
ret
jbe
maxps
jmp
mov
mov
stc
in
movsl
out
out
jmp
sub
jne
or
mov
lods
hlt
cmc
cmp
push
icebp
xchg
dec
mov
or
inc
cmp
sub
dec
imul
adc
sbb
mov
cld
lds
subl
shlb
sbb
out
inc
lahf
jae
orb
nop
push
cwtl
mov
xor
imul
mov
adc
mov
mov
shl
cmp
fildl
pop
loope
decl
jns
sub
inc
pop
outsw
outsl
idivb
jns
leave
cmc
adc
mov
es
inc
adc
push
fmul
out
push
xor
push
push
adc
out
push
loope
loope
mov
fsubrs
inc
shrb
cwtl
mov
sbbl
cwtl
inc
xchg
push
or
push
adc
mov
sub
dec
data16
je
and
push
adc
icebp
pop
adc
fdivr
sbb
and
pop
ds
fadds
add
es
and
subb
mov
imul
addl
lds
push
pop
xor
sbb
rcrb
test
aad
lods
inc
es
adc
lods
lret
pop
outsb
push
les
or
leave
nop
or
sub
loopne
add
imul
sub
add
lock
push
iret
adc
in
push
or
xor
ret
test
or
int3
push
dec
add
push
fidivrs
push
push
dec
cmp
xor
dec
jp
cmp
add
cmp
movsb
push
xor
xor
pusha
adc
sbb
pop
cmp
or
dec
imul
sbb
inc
fidivrl
bound
mov
or
dec
push
or
pushf
pop
or
inc
popa
add
inc
fldt
add
pop
xlat
adc
sub
pop
sbb
jne
pop
xor
jmp
lahf
sbb
jno
arpl
outsl
mov
insb
lcall
shlb
jo
push
fbld
loopne
push
sbb
jae
imul
and
cwtl
push
adc
testb
daa
loop
mov
jl
push
je
jge
cmp
push
into
jmp
mov
popa
add
movsb
or
outsb
negl
dec
pop
mov
xor
xchg
fwait
add
or
push
fdivrs
and
sbb
mov
xor
shl
std
mov
push
loopne
sub
sbb
nop
inc
sbb
dec
add
movsl
outsl
push
sub
les
pop
inc
cmp
jmp
inc
or
and
cmpl
mov
inc
inc
test
jno
inc
inc
mov
jle
movl
mov
cs
ret
inc
push
or
sbb
test
xor
in
das
fwait
mov
xchg
and
std
mov
mov
pop
adcl
jno
xor
mov
scas
je
xor
mov
sbb
std
and
or
inc
inc
orb
ja
dec
jne
inc
xchg
adc
push
xchg
jge
mov
rcrb
fdivs
pop
jecxz
test
loopne
and
jbe
or
sbb
dec
jne
loop
add
mov
dec
sti
push
or
pop
inc
movsb
jg
adc
dec
mov
mov
add
scas
add
adc
push
inc
jo
into
pop
je
mov
fs
adc
inc
dec
imul
dec
dec
and
adc
pop
xchg
add
js,pt
jmp
cmp
sub
lods
andb
add
and
xor
outsb
ljmp
sbbb
data16
xor
in
add
or
mov
mov
pop
pop
adc
in
sbb
enter
psadbw
inc
jle
adcl
adc
sldt
xor
mov
mov
and
dec
sbb
add
push
and
or
sub
inc
test
shrl
adc
imul
sbb
adc
jecxz
and
and
cmp
data16
adc
mov
sub
sbb
sbb
or
loopne
push
inc
fisubrl
imul
inc
inc
pop
pop
pop
lahf
mov
add
jne
ja
insb
lea
jl
push
adc
push
sbb
mov
or
xor
test
cmp
pop
lahf
or
stc
js
push
or
test
inc
inc
and
jmp
mov
js
mov
add
add
aaa
push
jmp
mov
leave
pop
push
lods
adc
imul
push
cmp
push
js
mov
push
arpl
pusha
or
in
dec
push
or
inc
or
insl
loopne
adc
cmp
arpl
mov
int3
push
pop
adc
test
lods
or
pop
xor
pop
xchg
sbb
adc
loope
push
filds
nop
dec
jecxz
xor
dec
or
adc
stc
xor
mov
lcall
pop
mov
pusha
call
clc
test
adc
jo
ret
and
idiv
lea
scas
sub
or
push
test
jmp
mov
lea
icebp
push
xor
cs
inc
xchg
jge
cmp
sub
and
and
fidivrl
daa
jg
imul
sbb
push
xor
sbb
cmp
inc
incl
inc
cmp
add
dec
push
stos
adc
push
inc
inc
arpl
clc
mov
pusha
push
fcoml
xor
xchg
loopne
pop
rorl
jg
sbb
push
mov
pop
or
or
shrl
xchg
jne
adc
icebp
imul
sub
and
add
jl
push
or
mov
or
call
shll
or
or
sub
sbb
fisubrs
stc
orl
sbb
rolb
mov
sub
jge
add
mov
pop
sar
sbbb
adc
aaa
dec
cld
sar
rorl
fmul
add
int3
add
and
imul
sub
cmp
aaa
dec
cmp
adc
mov
addb
shr
data16
jne
xor
jmp
test
lds
cmp
jle
pop
sbb
add
push
and
dec
daa
in
mov
jb
jg
jae
or
ret
repz
adc
mov
mov
sbb
insb
imul
push
and
push
les
ret
bound
xor
lods
popa
enter
fsubr
daa
xchg
jo
sub
sbb
jmp
pop
cmp
rclb
xchg
add
cmpsb
cmp
cli
xorb
add
sarb
orl
idivl
inc
mov
fldenv
add
adc
push
or
sbb
add
pop
cmp
xlat
pop
test
pusha
xor
and
jo
xor
adc
push
xchg
shrl
inc
add
add
repz
add
and
aad
invd
push
loope
nop
sbb
into
xchg
pop
arpl
test
mov
add
jbe
adc
adc
mov
es
mov
jnp
dec
dec
fs
or
pop
sbb
int
lds
cmp
xchg
add
les
add
out
adc
jne
sub
iret
cmp
fwait
out
fidivrl
dec
xor
bound
jne
ss
push
jmp
xchg
incl
push
ds
sti
xchg
add
rorb
pop
mov
aaa
in
je
and
shlb
lea
loop
push
inc
imul
jge
jo
cmp
push
mov
xchg
push
xchg
jg
cmp
and
subb
lock
andl
test
add
test
pusha
mov
ficompl
adc
push
and
sbb
sbbb
mov
xor
and
je
sbb
fnstenv
lods
inc
sarb
pop
sbb
push
repz
insb
js
cmp
xor
jb
fidivl
mov
pop
movsl
scas
sub
push
xor
xchg
inc
sbb
xor
pop
mov
push
and
aas
push
add
lock
jne
cmpsb
xchg
inc
cld
or
jmp
call
dec
addr16
sbb
int
in
sbbw
mov
mov
sbb
ror
ds
sbb
fiaddl
fcmove
push
push
cld
and
push
fwait
lods
rolb
mov
negb
add
call
pop
add
ss
mov
or
xchg
addb
sarb
pushf
and
testb
jle
adc
call
fisubl
sti
cmp
out
sbb
jge
ljmp
jp
push
dec
ds
dec
fwait
stos
sarb
add
xchg
daa
lret
or
adc
sbb
rep
sbb
fsubrs
dec
push
dec
inc
jo
adc
or
rolb
xor
inc
push
aas
adc
and
xchg
xor
jns
es
pop
bnd
mov
nop
gs
mov
clc
repnz
xchg
arpl
add
push
jmp
add
pop
ss
cmp
movsb
cmp
jge
sbb
adc
pusha
cmp
adcb
add
inc
jge
test
mov
cmpsw
cmp
add
push
aad
aam
rorl
jno
inc
mov
fwait
rolb
and
cmp
add
adc
mov
and
sub
push
xor
repz
lods
or
sbbl
ret
lds
or
mov
les
or
inc
das
aaa
aas
xchg
lock
out
cwtl
cld
pop
jge
pop
adc
test
and
fwait
lahf
push
dec
cmp
aaa
iret
andl
cmp
mov
mov
cmp
or
sub
inc
cmp
cli
inc
add
dec
cld
jb
xchg
push
cmp
add
dec
cmpsl
sbb
pop
xchg
sub
rclb
stos
push
sub
jno
jo
popf
popa
push
sub
shll
sbb
fcompl
push
add
adc
or
dec
xor
outsb
rorb
pusha
jne
loope,pt
clc
xor
push
movb
sbb
xorb
pop
cmp
loop
and
cmp
andb
or
lock
fadds
pusha
ret
inc
bound
in
xchg
lock
je
cmp
out
pop
sub
mov
mov
dec
cmpsb
fcomps
addr16
movsl
or
in
jl
jnp
cmp
sub
or
outsl
xchg
dec
push
xor
aad
xchg
dec
or
or
add
mov
add
in
fstl
or
xor
mov
andl
sbb
xchg
xor
es
nop
or
add
or
xchg
add
inc
les
or
rdpmc
or
lock
add
push
sbb
add
stos
inc
pusha
scas
int
andl
add
aad
add
shlb
and
sub
popf
pop
sub
mov
test
aad
cmp
sbb
das
mov
nop
arpl
push
addr16
cmpsl
xor
add
adcb
and
cmp
pop
sub
addb
xor
jmp
and
add
lea
adc
push
rcrb
test
sbb
mov
or
push
sti
mov
pop
or
stc
enter
push
add
pop
nop
cmp
pop
arpl
or
fistpll
lock
in
inc
loope
decb
dec
and
cmpsb
jmp
iret
add
lea
fbstp
pop
fs
inc
pop
adcl
add
pop
adc
cmp
xchg
test
push
inc
and
cld
outsl
in
xor
or
jg
mov
dec
hlt
push
andb
push
inc
lock
je
mov
les
and
subl
rcrb
inc
or
call
mov
mov
pushf
inc
push
fisubl
mov
js
sub
sti
arpl
cmp
pop
aad
or
test
pushf
loop
imul
xchg
jp
out
pop
pop
push
into
add
test
std
fwait
sbb
dec
je
sub
je
rorb
fidivl
mov
mov
add
inc
loopne
and
fsts
xor
imul
push
push
add
stos
jmp
push
inc
and
xchg
or
ljmp
mov
fnstcw
cmp
je
xor
sub
pop
inc
sbb
push
xor
dec
adcb
mov
sbb
int3
add
shl
push
popa
pusha
mov
popa
or
gs
lea
jmp
fs
dec
push
mov
in
cmpsb
outsl
jo
rorl
aaa
iret
je
jbe
je
or
dec
imul
and
xor
imul
cmpsl
or
stos
rolb
push
adc
cmpb
cmp
mov
into
pop
into
push
mov
xchg
mov
mov
adc
push
rolb
mov
shlb
add
sbb
test
mov
jp
adcb
jnp
daa
rcr
cltd
push
mov
sub
fmull
push
or
mov
ds
into
jmp
loope
dec
dec
jne
out
pushl
jae
jmp
push
push
adc
shlb
mov
popa
inc
inc
pop
jmp
sbb
pop
push
das
les
je
or
cltd
fisubs
add
lahf
pop
out
test
sbb
adc
dec
adc
sti
gs
ret
and
pop
das
jmp
or
ror
mov
sbb
mov
push
js
push
push
mov
jecxz
push
sub
sbb
aaa
mov
jmp
inc
and
jnp
outsb
pop
push
jns
mov
outsb
pop
in
xchg
imul
and
inc
mov
mov
cs
cwtl
and
dec
push
and
add
mov
movsb
adc
mov
xchg
mov
push
xorl
add
insb
dec
movsl
lretw
cld
mov
and
sbb
pusha
cmpsl
lret
push
scas
adc
aas
adc
adc
mov
in
jo
mov
movsl
xlat
sub
mov
mov
xchg
rclb
jge
notb
jle
mov
sub
mov
inc
jl
lret
test
or
lret
adc
xchg
xor
int3
sub
fwait
xor
xchg
dec
sbb
mov
adc
ja
xor
sub
mov
or
sbb
adc
std
hlt
add
pop
inc
inc
jbe
jp
mov
dec
push
pop
or
rol
jle
xorl
ja
flds
mov
inc
dec
sub
xor
mov
lods
inc
es
adc
adc
and
or
das
and
or
je
lahf
fcmovnbe
add
ss
icebp
das
xor
inc
rol
pop
cmp
orl
jle
mov
push
xor
cmp
ja
push
scas
inc
enter
rdmsr
xchg
xchg
and
or
ja
cmp
fildll
push
push
push
push
cld
jbe
mov
and
mov
jae
sbb
cmp
inc
shlb
shl
xchg
test
jno
aad
mov
icebp
scas
xor
mov
in
leave
enter
loopne
addl
mov
add
pushf
push
fdivs
dec
cmp
ret
mov
pop
cmp
sub
outsb
xor
and
mov
test
decl
or
sbb
dec
and
orl
fnsave
sbb
or
sahf
fcoms
xchg
shr
sahf
arpl
or
push
xor
les
and
adc
mov
pop
cli
xor
dec
and
ljmp
loop
sbb
push
pop
jne
cmp
mov
jno
je
sub
mov
or
stc
ret
popa
jmp
insb
test
mov
loop
cmpsl
jns
mov
or
cltd
cs
das
adc
fimuls
push
xchg
push
push
push
sbb
add
sarb
add
or
push
add
mov
sar
cmp
je
je
cmp
jne
push
xor
out
popf
cmp
push
xor
fwait
js
adc
andb
cmp
push
xchg
loopne
mov
push
jmp
adc
push
adc
sub
cmp
jp
adc
xchg
sub
add
je
shll
ficoml
and
pop
popa
inc
pop
or
mov
dec
ja
pop
push
push
push
cmp
jne
ss
ds
push
push
das
je
or
or
dec
add
sub
dec
shlb
mov
loop
adc
push
mov
fs
shlb
rolb
test
mov
scas
and
dec
test
jmp
mov
inc
mov
sub
pushl
lods
add
das
sbb
mov
sub
shlb
add
fnsave
flds
xchg
lock
adc
bswap
xor
sub
lea
in
aaa
xchg
jne
mov
dec
mov
aaa
jmp
cwtl
jo
and
push
inc
dec
movsl
mov
jo
cmp
jns
test
aam
js
aaa
out
subb
jae
jg
bound
mov
addr16
pop
push
adc
push
popa
lcall
inc
inc
dec
sti
push
sub
loopne
les
cwtl
negb
hlt
sub
ficoms
ss
and
and
push
clc
mov
sub
xor
inc
cmp
je
lret
xchg
cmp
xor
dec
xchg
xor
stc
enter
sub
pop
cli
jmp
sbb
cmpl
cld
sbb
xor
push
lret
es
cmp
push
jmp
mov
sub
inc
jne
and
mov
clc
pop
and
add
fs
das
fadds
inc
mov
pop
add
loopne
movl
and
sbb
lahf
mov
mov
cmp
pop
push
jmp
adc
dec
inc
inc
or
orb
and
cmpl
loop
rol
push
add
or
sbb
pop
test
outsl
ss
repz
call
iret
sbb
sub
repz
add
sub
dec
and
or
stc
push
stc
sub
cwtl
insl
sub
jp
fldl
push
mov
fwait
insl
pop
xchg
or
ljmp
mov
dec
int
mov
inc
xor
adc
pop
and
push
mov
stos
call
push
fidivs
fstps
pop
cs
fiaddl
pop
iret
xchg
mov
mov
push
inc
push
sbb
aaa
pop
rcl
adc
push
shll
andb
pop
loopne
lock
cmc
cmp
jmp
dec
add
cld
or
dec
cmp
dec
sub
adc
push
xchg
insb
jns
adc
xor
pushf
mov
sbb
add
add
inc
jmp
dec
gs
push
ds
add
ja
je
sub
mov
out
cmp
mov
cs
add
or
cli
dec
mov
insb
frstor
ja
je
xor
shll
shlb
jo
ss
mov
push
jmp
inc
and
add
and
dec
ds
push
jmp
movsb
imul
mov
mov
rolb
ja
mov
in
inc
je
or
jbe
cmp
xor
es
pop
adc
xlat
gs
sbb
jbe
ret
lock
cltd
pop
and
mov
imul
in
repz
insb
je
popa
xchg
lcall
in
scas
push
jmp
push
jmp
cmp
outsl
or
sbb
and
mov
stc
sub
mov
je
sub
mov
rorb
cmp
bound
xor
out
je
jne
mov
in
jnp
sub
or
int3
jp
inc
nop
int3
or
inc
or
aad
sub
pop
jae
cmpsl
int3
or
mov
inc
cmp
mov
fucom
push
or
or
pop
movsl
rcpps
pop
fisttpl
pop
xchg
outsl
cld
insl
pop
scas
mov
call
add
movsl
icebp
xchg
es
sbb
xchg
pop
sub
das
jno
out
loope
sub
mov
xor
add
inc
or
shld
inc
rclb
adc
sbbb
in
ret
push
xlat
nop
cwtl
jl
add
sub
xchg
adc
dec
adc
icebp
push
xor
pop
push
xchg
sbb
notb
fdivrp
ljmp
cld
inc
imul
and
in
fildl
mov
xor
jl
xor
test
popf
scas
cmp
jp
addb
iret
fistpl
test
mov
inc
and
into
pop
addb
int3
xlat
adc
mov
sbb
add
adc
add
inc
add
mov
adc
imul
push
or
movsb
cmp
mov
xor
push
sbb
in
in
adc
sub
es
sub
imul
pop
push
popa
and
movsl
rcr
cmp
jae
cmpl
mov
push
inc
adc
pushf
push
pop
repnz
mov
pand
mov
jnp
push
jmp
je
sub
jnp
and
cmpsb
subl
push
cs
sbb
leave
add
mov
int3
aaa
and
iret
pop
mov
dec
or
push
int
popa
fsts
and
add
fiaddl
ss
enter
inc
subb
fsubrs
and
jbe
xor
push
add
loop
adc
add
and
in
push
icebp
out
add
jle
xchg
andl
ret
inc
insl
insl
cmp
movsb
test
sahf
xchg
push
fwait
xor
sbb
lcall
ret
add
inc
and
dec
aas
inc
push
or
push
inc
inc
fwait
add
aas
mov
fiadds
or
mov
and
shrl
mov
movsl
inc
mov
popf
shlb
dec
xor
jp
inc
test
addl
or
call
pop
push
dec
jo
pop
xchg
xor
xchg
icebp
push
shlb
sub
shrl
push
and
add
dec
push
shl
push
sbb
ret
popf
movsl
jb
xor
pop
sbb
add
mov
outsb
sarl
test
call
aam
jmp
mov
push
movsb
movsl
cmpb
add
ret
stos
or
mov
nop
fmuls
notb
mov
push
pop
mov
xchg
sub
sbb
pop
pop
dec
sbb
test
xor
or
das
mov
inc
lea
mov
mov
pop
subb
or
mov
pop
inc
adc
xchg
mov
push
adc
pop
roll
in
sbb
push
or
push
fdivrs
or
dec
fdivs
mov
dec
rcrb
ret
mov
inc
pusha
inc
sbb
jle
rol
loope
jl
addl
jbe
call
rcll
cmp
jge
les
sbb
cmp
pop
addb
push
mov
push
mov
in
rclb
outsb
stos
shlb
frstor
adc
inc
loop
je
jb
pop
adc
xchg
ret
inc
test
and
out
inc
shl
cmp
cmp
or
xor
push
hlt
push
cmp
and
inc
add
fsubl
inc
xor
fsubrs
push
testl
sbb
mov
out
pop
push
pop
cmc
inc
jmp
mov
jbe
test
js
fadds
pop
add
pop
add
push
cmp
push
ficoml
add
fnsave
and
jne
jge
dec
add
sub
jle
dec
add
cmp
sub
and
add
inc
mov
mov
mov
push
inc
xor
push
pmaddwd
mov
dec
push
push
mov
adc
das
and
push
fwait
rcrb
mov
andb
inc
shrb
insb
xor
xor
dec
loopne
rolb
and
lret
ret
dec
push
mov
cltd
inc
data16
and
popa
jle
test
das
xor
cmovb
xor
add
sub
sub
cmp
xor
xor
xor
loopne
jno
mov
cmp
and
gs
xor
movsb
add
scas
push
inc
xlat
pushf
push
lahf
and
jge
jmp
or
or
pop
sbb
or
push
sbb
outsb
nop
loopne
sbb
cmp
fwait
lock
push
movb
test
or
xor
lock
sbb
aam
pushf
test
ret
cmp
inc
dec
xor
xor
dec
test
adc
add
and
adc
add
cmp
and
mov
sbb
sbb
xchg
in
int
enter
add
dec
cmp
or
xor
and
pop
adc
mov
stc
push
scas
test
add
call
test
push
push
inc
cwtl
and
pop
mov
popa
and
xor
clc
add
and
pop
je
push
and
add
xorl
or
add
shlb
or
add
mov
sbb
jg
pop
adc
mov
add
in
pop
ja
pop
je
adc
test
pop
push
xor
xchg
fidivs
dec
add
and
notl
inc
adc
fcom
inc
rcrl
ja
stos
dec
and
adc
fstps
ret
mov
fldcw
arpl
outsl
addr16
test
add
xchg
xchg
cmp
std
sub
mov
imul
mov
and
sbb
rclb
pop
dec
add
ret
out
and
sbb
mov
insb
pop
and
and
cmp
fs
sbb
pop
je
sbb
or
sub
xchg
loopne
sbb
mov
test
in
sbb
xchg
adc
scas
add
lds
adc
push
add
mov
adc
add
and
add
nop
push
andb
mov
jne
jl
mov
pushf
inc
xchg
scas
push
or
inc
sub
pop
add
test
sbb
nop
mov
push
xor
and
jb
push
test
pop
lcall
push
mov
push
cmp
repz
cmp
xor
out
jbe
xchg
adc
inc
ret
ds
adcl
sbb
adc
mov
xchg
call
mov
mov
fs
sbb
push
inc
push
inc
adc
cs
xor
cmp
jo
inc
clc
testb
mov
movsb
dec
arpl
mov
xor
adc
loop
mov
and
mov
xor
dec
sbb
shlb
lock
enter
mov
and
push
sbbb
adc
sbb
pop
adc
push
dec
or
les
push
inc
sub
std
dec
sbb
mov
in
adc
jecxz
push
test
mov
les
into
popf
mov
loopne
adc
in
sub
dec
push
faddl
nop
enter
enter
or
and
mov
lcall
fs
addr16
inc
jl
push
cmp
jecxz
ret
int
or
adc
push
lret
js
xor
ss
mov
adc
leave
aam
and
inc
int
push
xchg
ret
sbb
aad
push
popa
xchg
xor
push
or
mov
sahf
int
jl
dec
jne
adc
pushf
mov
hlt
and
fadds
mov
enter
dec
push
pop
lahf
or
xchg
aam
scas
xchg
les
or
loop
cmp
mov
aad
jecxz
cmp
jo
out
dec
cmp
loop
inc
sbb
cli
ds
jge
and
jmp
fdivrp
inc
inc
add
sarb
mov
inc
ds
cwtl
xchg
sub
or
out
sbb
push
je
mov
sti
rclb
xor
adc
ja
dec
fcmovnu
cmpb
mov
stc
mov
push
jmp
das
cld
add
das
add
xor
cmp
sbb
sbb
add
fs
or
rclb
aad
push
xchg
test
push
fcoms
jae
sub
loop
push
outsl
jecxz
or
jmp
into
or
or
add
or
and
gs
lcall
and
push
or
ds
punpckhdq
xor
cmp
dec
adc
push
or
mov
adc
jb
sbb
or
sbb
shrb
int3
test
mov
and
jp
cmpsl
xor
pusha
adc
pop
push
cmp
pop
sbb
insl
adc
ljmp
xchg
add
movb
andb
jae
enter
adc
popf
shr
nop
daa
repnz
or
pusha
aaa
addl
cmp
imul
mov
inc
pop
sub
sub
add
ret
pop
enter
adc
cli
call
je
jbe
mov
lods
fildl
out
lea
xor
mov
lods
addw
sub
jle
in
adc
rorb
test
cwtl
mov
jno
fprem
in
data16
add
or
mov
pop
inc
dec
pusha
shrl
xor
rcr
jae
ret
mov
push
xor
lret
sub
and
insl
sbb
sbb
cs
sub
adc
sbb
movsl
mov
addl
add
sub
xchg
mov
fildll
pop
clc
push
pop
movsb
movsb
sbb
jg
or
fdivs
cmpsb
pop
sbb
add
clc
pop
xchg
mov
xchg
clc
mov
jbe
xchg
ss
push
rorb
pop
div
jmp
bound
enter
mulb
subb
adc
inc
xchg
pop
outsl
adc
and
push
inc
sbb
jp
jne
push
or
mov
lahf
xor
insb
mov
or
sbb
and
push
cmp
fcmovnbe
sbb
add
jl
rclb
and
add
xchg
movl
mov
push
sub
out
je
mov
ret
lahf
xor
cmp
push
sub
push
ss
and
or
xor
je
push
or
out
call
jmp
and
push
push
loopne
or
sub
push
push
pop
sbbl
daa
mov
sbb
jbe
pop
mov
sub
pop
sbb
loope
add
popf
fcomps
push
incb
push
vmovhps
and
sub
mov
mov
pop
xor
add
lds
mov
out
shlb
imul
push
lods
loop
lcall
pop
ja
dec
out
sbb
add
lods
and
pop
fs
and
je
leave
lods
inc
jo
pop
pop
jae
add
inc
pop
pop
test
test
push
pop
push
clc
scas
push
or
xchg
jnp
loop
movsb
add
adc
orb
xchg
jmp
xor
xchg
pop
jbe
repnz
sbb
or
xchg
dec
pop
mov
adc
xor
xchg
add
dec
pop
jb
sahf
push
or
sbb
sub
cmp
rclb
ret
xchg
adc
daa
inc
fwait
add
cmp
push
push
dec
imul
mov
orb
shl
sbb
cmp
add
fsubr
and
pop
loopne
and
scas
mov
and
or
push
cmpsb
add
mov
push
cmp
mov
das
aaa
dec
testl
sbb
push
sbb
inc
mov
or
mov
dec
sbb
or
push
add
mov
push
lods
inc
jecxz
and
jo
ret
mov
or
movb
scas
cmp
or
sub
push
add
daa
bound
sbb
pop
mov
daa
leave
mov
rol
clc
shl
cmp
xor
pop
sub
adc
xchg
adcb
push
push
clc
cmp
clc
pop
pop
jae
jne
mov
dec
mov
in
sub
enter
movsb
sbb
mov
js
cld
dec
jne
pop
push
adc
test
pop
rcrb
cs
sbb
sbb
nop
dec
dec
dec
pushf
pop
lahf
jne
pop
xor
rorl
std
inc
pop
pop
mov
cmp
mov
or
sbb
test
adc
shrb
inc
inc
and
arpl
scas
lods
in
mov
adc
enter
cmpsl
lcall
mov
mov
sbb
mov
jge
addr16
jbe
mov
out
push
cs
addr16
ret
mov
mov
xorb
jne
jp
sbb
push
adc
sbb
inc
jbe
push
xchg
iret
lret
outsb
sub
mov
pop
dec
pop
lar
pop
loopne
jo
xlat
popa
jl
xchg
or
adc
notl
movsb
inc
sbb
xor
nop
add
cs
ret
or
ss
addr16
xor
in
cmp
jbe
jmp
pop
xor
inc
xor
aaa
lcall
mov
add
or
mov
xchg
push
aaa
mov
sub
pop
inc
push
lret
cmp
rorl
jbe
insb
dec
adc
jae
ret
mov
mov
pusha
push
enter
testb
sub
sti
cli
rclb
jp
les
and
rorl
orb
sbb
xor
push
push
pop
push
int
add
outsl
stos
push
ret
lds
fidivrs
dec
xor
into
or
or
push
arpl
xchg
rclb
adc
in
orb
js
sbb
add
sbb
ficomps
mov
mov
pop
dec
pop
mov
mov
inc
mov
or
and
and
add
push
fs
setae
inc
nop
lret
or
jle
shlb
hlt
adc
jo
cltd
sbb
movsl
sahf
adc
push
cmp
cs
out
pop
push
push
adc
mov
pop
xchg
dec
enter
and
jmp
divb
popa
xor
call
out
inc
nop
sbb
add
dec
sub
repz
sbb
stos
test
xchg
add
push
jno
rol
xor
xchg
rolb
mov
and
cmp
jo
fists
fadd
xor
push
push
push
dec
or
push
not
and
push
adc
mov
jo
mov
mov
xor
lock
sbb
ret
xor
sub
test
ja
xor
stos
ret
cmc
jg
jmp
mov
pop
lea
cmpsb
sbb
hlt
or
xor
addl
cmp
mov
mov
mov
rcll
sub
fsts
and
and
adc
push
les
add
inc
and
popa
xchg
inc
rcrb
push
cwtl
and
or
dec
mov
jl
xchg
xor
xchg
jne
lds
jle
adcl
sub
adc
pop
jae
enter
push
jne
pop
mov
sub
lods
inc
fcmovb
inc
cmp
cmp
cs
sub
sahf
flds
adc
outsb
scas
sbb
mov
lahf
sub
inc
rolb
aas
dec
add
add
xchg
sub
push
add
dec
imul
xor
popa
push
and
jp
sbb
inc
shl
sbb
loopne
add
insl
xlat
or
test
adc
lods
and
int3
mov
add
push
lret
outsb
pop
sub
sbb
ret
dec
or
sbb
mov
in
or
xor
inc
lods
push
add
lea
sub
inc
jle
sbb
cli
or
push
movsl
cmpsl
test
adc
adc
loopne
repnz
or
pusha
or
addl
cmp
inc
push
pop
fdivrl
outsb
add
sub
jne
and
jmp
mov
lea
ja
inc
sbb
xchg
inc
and
mov
rcl
mov
sbbb
dec
add
lock
sub
and
xor
adc
xchg
rcrb
jp
jmp
jnp
add
cmpsl
sub
enter
adc
leave
cmpl
xchg
mov
push
add
mov
and
sar
pop
outsl
movsb
test
inc
cmpb
add
jg
cmpb
inc
jl
cmp
jg
push
out
push
lret
stos
rolb
xor
cmp
jge
push
or
testb
sub
and
add
inc
and
push
dec
cmp
pop
add
inc
loopne
adc
mov
sahf
outsb
mov
fisttpll
cmpsl
in
nop
inc
inc
cmp
inc
fsubrs
mov
pop
aas
inc
jmp
jmp
inc
push
mov
movsl
pusha
mov
inc
mov
or
lea
cmp
push
mov
fadds
jae
imul
loop
mov
push
lret
out
test
pushf
inc
enter
les
bound
pop
out
stc
inc
rolb
mov
pusha
ffreep
movsb
out
mov
add
push
pop
and
sbb
cmp
and
xchg
dec
dec
xchg
add
adc
or
jne
test
les
sbb
fwait
clc
sbb
and
push
add
push
dec
cmp
cmpsl
xchg
nop
cs
add
xchg
adc
lock
sbb
cmc
mov
sub
andb
add
in
adc
xor
insb
lret
pop
pusha
jns
aas
pop
xor
jns
add
mov
daa
lcall
in
in
add
repnz
ret
das
fsubs
inc
ja
inc
not
and
mov
jmp
or
adc
adcb
lahf
jmp
es
sub
outsb
xchg
push
test
mov
sbb
js
pop
andb
cltd
add
ds
xchg
adcl
adc
and
pusha
dec
sti
mov
cli
push
mov
jne
js
push
daa
subl
and
add
lcall
or
dec
pop
mov
push
add
loop
mov
sub
dec
push
push
cwtl
xor
je
mov
push
cmp
jne
sbb
add
cmpsl
jne
or
and
andl
rcll
sub
test
nop
cli
fcoms
dec
test
sbb
mov
call
mov
loopne
or
cmpl
movsb
enter
or
adc
mov
jmp
cwtl
adc
pop
fsubr
xchg
xchg
and
aaa
insb
xor
mov
pop
out
dec
sub
movsb
mov
jecxz
push
and
fwait
in
push
jne
mov
mov
mov
fmull
mov
imul
repnz
orl
popf
add
flds
aaa
mov
out
lahf
dec
nop
movsl
and
in
sbb
lret
stos
xor
aad
shlb
lock
mov
subb
jmp
fbstp
cmp
outsb
mov
xchg
adc
or
add
nop
test
mov
adc
fld
pop
ficompl
mov
dec
scas
mov
push
inc
add
in
push
push
mov
xchg
pop
insl
shll
jne
xor
fsubs
dec
fimull
adc
lock
dec
inc
outsl
xor
adc
pop
subl
pop
lods
and
leave
add
add
icebp
xchg
push
add
mov
add
sub
pop
mov
mov
add
xor
push
into
lock
rorl
adc
xchg
mov
and
sbb
scas
or
add
mov
les
mov
jbe
xchg
cmc
je
sub
xor
push
ret
pop
push
adc
movsb
popa
jmp
and
das
adc
lret
stc
jne
andb
dec
loop
or
pop
in
push
push
or
sbb
push
sbb
out
in
pushf
xor
add
or
test
push
ffree
sbb
lds
or
xchg
jae
dec
mov
xor
fst
fdivs
xchg
xor
movsb
rcrl
leave
or
sahf
nop
push
dec
xchg
dec
inc
push
mov
add
in
fldcw
ljmp
ja
push
mov
push
pop
dec
adc
shl
or
test
adc
fsubr
cld
cmpsb
add
sbb
scas
addr16
out
sbb
insl
or
les
add
lock
add
js
cmp
scas
push
pop
or
sub
mov
lds
or
dec
ret
push
stc
shr
add
xor
mov
js
push
mov
scas
dec
movsl
data16
push
mov
xor
mov
jge
mov
mov
fidivrs
sub
push
jmp
xchg
or
dec
jl
repnz
add
andl
push
nop
jno
sbb
adc
mov
cs
insl
andl
popa
and
xchg
xor
sub
mov
out
imul
adc
mov
inc
rcll
xchg
push
rorl
dec
jae
push
into
xor
pop
aad
add
sahf
lahf
lods
mov
inc
push
sub
mov
gs
push
clc
arpl
popa
subb
dec
adc
dec
aaa
jl
ret
pop
mov
dec
lods
lods
sbb
pop
jge
or
add
mov
ja
jmp
cmp
jmp
and
push
dec
mov
adc
mov
scas
sbb
sub
mov
push
pop
jo
mov
lods
push
scas
jmp
jns
inc
sbb
sahf
dec
sar
adc
cmp
or
add
pop
xlat
outsb
les
or
sbb
dec
and
ret
outsl
cmp
push
add
and
in
cmp
inc
loopne
imulb
outsb
mov
inc
jno
add
inc
hlt
xchg
data16
and
mov
mov
ljmp
mov
sub
movl
pop
xchg
aad
jmp
sbb
fldenv
mov
and
mov
orl
pop
imul
sub
idivl
sub
sbb
mov
das
inc
and
sbb
sbb
push
fs
cmp
push
js
es
arpl
test
sub
sahf
sub
icebp
sbb
imul
cmc
and
xor
mov
imul
lea
and
sbb
and
sub
mov
rorb
xchg
fadds
jb
lods
mov
rorb
cmc
sub
pop
adc
fisttpl
cld
and
xchg
gs
push
push
aas
adc
push
in
out
ret
sub
outsl
inc
rorb
jo
data16
lahf
pop
sub
cmp
and
inc
pushf
mov
arpl
xchg
pop
or
push
mov
pop
inc
lock
lret
xorb
cmp
mov
dec
and
lds
out
fidivs
ja
sub
pop
mov
and
cmp
jbe
or
and
test
push
nop
mov
push
mov
rcrb
sbb
push
pop
or
filds
cmp
adc
and
in
test
shlb
pop
push
mov
js
add
jnp
xchg
sahf
or
cmp
sbb
imul
push
cmp
dec
mov
cmp
xor
mov
ficoms
push
in
xor
mov
test
adc
mov
push
hlt
addr16
adc
ja
mov
imul
mov
in
cmp
dec
test
jg
movsb
or
mov
or
jg
add
ret
jnp
add
mov
ret
pop
cmp
push
or
jnp
sbb
sbb
or
push
mov
je
lret
mov
js
adc
xchg
pop
add
push
insb
xchg
je
mov
dec
jle
push
fstpt
push
popf
js
cmp
adc
lds
cmp
xor
mov
loop
push
ret
or
aam
sti
jl
mov
in
cmp
xor
and
ficoms
cmp
dec
jns
lock
movsl
pop
sub
outsb
mov
cmc
mov
cmp
and
mov
or
je
lods
add
jecxz
push
test
or
addr16
or
mull
adc
sbb
and
xor
push
filds
or
inc
sub
jbe
adc
sbb
imul
dec
pop
jp
hlt
mov
imul
pop
jno
lea
xor
and
lods
lods
add
rorb
or
cmp
or
and
lret
pop
mov
xor
cs
and
jge
push
adc
mov
movl
inc
push
cmpsb
push
jo
sub
jle
mov
push
adc
or
or
sbb
imul
ret
movsl
inc
push
mov
sub
xchg
movsl
pusha
pusha
push
add
mov
inc
mov
nop
add
sti
dec
test
mov
loop,pn
rolb
hlt
push
push
dec
and
sbb
sbb
lea
leave
and
pop
jg
in
add
lret
adcl
out
or
xor
push
xchg
sbbl
dec
adc
xchg
insb
ds
dec
pop
jl
decl
mov
punpckhbw
jl
ljmp
inc
inc
push
add
inc
or
dec
insl
jne
dec
xor
or
dec
jnp
adc
or
test
cmp
not
mov
push
xlat
push
xor
out
bound
push
xor
push
and
adcb
sar
mov
inc
insl
push
push
inc
in
rolb
xor
xor
xor
dec
cmp
ret
lods
clc
inc
dec
add
sub
cmp
andl
adc
adc
jnp
xlat
pop
repz
pusha
fadds
add
mov
js
sahf
adc
enter
inc
aad
push
lds
push
repz
adc
vmovsldup
adc
test
add
and
jp
push
sbb
adcb
dec
sbb
js
rorb
hlt
popf
in
test
dec
test
pop
dec
sar
mov
pop
mov
test
dec
in
add
aas
outsb
enter
pop
xlat
or
rcrb
sbb
add
or
or
addr16
pop
sub
cmp
sbb
adc
push
cmpsb
imulb
in
jl
adc
inc
xor
lds
shlb
sub
addr16
ret
xor
iret
and
cmp
lods
addr16
and
inc
sbb
bound
cmp
loope
jecxz
scas
shll
xchg
lock
adc
add
add
push
jmp
nop
sub
inc
lods
fidivrl
shr
imul
mov
clc
daa
or
inc
pop
rol
or
jno
cmp
mov
and
mov
and
jge
mov
or
insl
push
and
sbb
add
jne
imul
fdivr
fdivrs
popf
pushl
cmp
cld
add
shlb
pop
xchg
add
and
pushf
add
gs
sbbb
leave
andl
es
mov
dec
add
adc
sub
xor
sub
cmc
add
pop
lea
iret
push
repnz
xor
mov
push
inc
popa
bound
or
into
dec
inc
mov
js
xchg
repz
cmp
icebp
mov
mov
or
lods
in
xchg
jo
lds
mov
fstps
add
movb
es
stc
add
xchg
sbb
int3
cmp
mov
test
mov
jne
lea
push
adc
xchg
loope
push
lea
push
or
test
pop
or
lock
xor
xchg
in
sbb
xchg
push
cli
or
mov
push
cmc
test
push
add
aas
sub
dec
or
or
pop
push
repz
jp
pop
sahf
je
or
sbb
jb
shl
jge
push
sbb
xchg
adc
out
mov
leave
mov
and
mov
mov
loopne
pushl
add
or
test
fnsave
push
movsl
push
fcmovu
insl
jmp
test
ja
inc
dec
outsl
inc
adc
pop
add
ja
xchg
sbb
sub
pop
test
dec
pop
hlt
icebp
inc
mov
pop
adc
dec
jl
sub
add
fs
mov
adc
inc
xor
mov
adc
and
cmp
sub
or
add
lea
mov
push
xor
or
mov
mov
andl
fsubrs
inc
dec
inc
sahf
cmp
xchg
js
loopne
or
cmpsb
jbe
jge
sbb
mov
xchg
shll
sub
mov
fsubs
mov
sbb
pop
inc
popf
test
lods
pop
fucomi
fs
sub
jle
ret
adc
jle
sub
aaa
pop
stc
test
mov
or
mov
jo
lret
mov
dec
stc
or
mov
mov
test
adc
xor
or
ret
add
adc
inc
addb
add
cwtl
xor
testl
loopne
lds
aad
mov
inc
push
dec
clc
aaa
xor
jmp
mov
mov
cs
or
jo
imul
push
out
ret
push
cwtl
data16
and
cs
xor
mov
lret
pop
jge
or
add
adc
dec
js
ret
mov
out
bswap
sbb
mov
in
push
jl
outsb
push
and
xchg
nop
xor
fldl
lahf
dec
dec
orps
add
mov
out
sbbl
in
jle
xor
insb
inc
mov
adcl
mov
mov
push
pop
mov
xor
js
aad
inc
and
xchg
cwtl
dec
xor
lock
jno
mov
push
ja
test
mov
pop
repnz
mov
imul
inc
rorb
push
addr16
cmp
jb
call
or
test
sub
mov
sub
hlt
fsubp
fcoms
dec
icebp
cmp
dec
mov
frstor
clc
cmp
xor
mov
mov
pop
lea
setns
dec
jge
lret
sar
or
aas
fwait
add
sub
andl
pop
inc
pop
pop
xorb
jo
xlat
inc
lea
xor
add
nop
push
lcall
movb
sbb
add
fldl
jl
add
dec
inc
sahf
mov
divl
or
push
jp
stos
and
or
cld
lods
xor
rolb
cli
clc
push
cwtl
ret
aam
push
jl
pop
movsl
daa
lock
mov
mov
in
repnz
sub
and
inc
and
popa
adc
or
leave
js
cs
jle
xor
mov
loop
mov
jge
push
mov
adc
push
pop
pop
pushf
sub
pusha
clc
push
add
mov
xchg
jge
sub
test
rclb
adc
jns
and
jns
pop
cmpsb
lock
mov
sub
adc
mov
jne
push
fcomi
jns
cltd
sti
xchg
mov
aaa
jns
push
adc
xchg
xchg
inc
aaa
stc
lds
mov
fmul
push
mul
and
jb
cli
push
mov
nop
enter
jp
dec
ss
daa
jp
cmp
mov
push
sbb
mov
insl
pop
xchg
pop
outsl
inc
adc
lods
cld
imul
dec
push
fs
push
pop
add
pop
push
ret
enter
mov
fsubrl
ret
cmp
sti
sbb
inc
mov
adcb
test
xor
pop
cmp
test
cltd
jo
aam
insl
and
or
adc
inc
ret
cmpb
or
push
inc
jo
adc
jns
scas
push
cmp
add
jge
jae
into
pop
lock
push
and
jbe
push
addr16
inc
push
jmp
fucom
jle
enter
cld
dec
clc
cmp
push
add
cmp
aaa
adc
push
imul
add
pop
cld
xchg
ret
decl
loopne
popa
pop
sahf
sub
push
test
fildll
js
scas
mov
xorl
push
mov
fnstcw
andb
enter
sbb
and
nop
add
or
dec
movsl
push
test
movsl
lea
dec
xchg
pop
add
cmp
push
mov
xchg
lret
mov
and
flds
or
cmp
mov
adc
popf
jbe
jb
imul
adc
aam
lock
adc
shlb
mov
adc
orl
jp
mov
and
aam
push
imul
push
xor
fstl
and
pop
dec
jp
imul
in
mov
pop
inc
fwait
movsl
mov
push
jecxz
sub
sub
std
fsubrl
inc
adc
add
ret
mov
dec
ret
cmp
addr16
pop
sbb
add
and
popa
dec
lret
fidivrl
mov
pop
cmp
adc
call
sub
sub
sub
or
inc
xchg
mov
cmpsl
sub
pushf
cmp
test
into
js
push
sbb
ds
inc
mov
pop
enter
xlat
ds
cmp
mov
push
rolb
pop
setne
xchg
jp
pop
jae
rclb
xor
cmp
adc
or
cmp
bound
mov
lock
rol
jle
mov
add
adc
push
jne
adc
sbb
test
test
sbb
adc
adc
push
push
jnp
jmp
je
decl
adc
jne
sarb
mov
mov
or
add
pop
xor
xchg
gs
in
and
sbb
aaa
jne
jecxz
sbb
dec
test
xchg
jne
mov
mov
add
add
iret
mov
mov
incl
push
jmp
xor
pop
adc
adc
fsubl
jno
nop
pop
mov
dec
xlat
mov
ret
add
les
mov
inc
rcrl
jge
add
clc
rorb
pushf
pusha
andl
push
pop
mov
enter
jb
xor
cmp
xor
inc
inc
mov
xor
adc
rcrl
popf
popa
pusha
mov
ficoms
inc
mov
xor
loopne
inc
add
popa
pop
outsb
mov
jp
xor
xor
dec
adc
out
out
push
jae
dec
testl
ror
mov
pusha
bound
std
push
add
and
jle
call
adc
and
shll
and
or
data16
push
mov
out
inc
xchg
enter
popa
in
push
sbb
xchg
inc
clc
outsl
cmpsl
mov
orl
xchg
push
hlt
push
mull
mov
push
adc
in
jo
insb
or
lret
jae
push
adc
and
out
pop
sbb
sbb
and
repnz
ds
pop
and
sub
sub
fs
fldenv
sbb
jmp
jmp
mov
xchg
test
jge
jne
jl
push
xorb
nop
sub
mov
andb
inc
xchg
inc
sub
sub
inc
ret
push
pop
insl
adc
cmpl
cli
sub
sub
jecxz
adc
add
imul
add
mov
das
lea
xchg
in
adc
pop
or
add
inc
imul
mov
ss
das
sub
jne
incl
and
out
les
add
pusha
ljmp
rcrl
and
or
mov
fwait
mov
push
mov
jge
pop
insb
cltd
mov
mov
adc
cmp
cs
and
dec
xchg
dec
lods
add
lahf
cmpsl
sub
push
xor
pop
enter
push
loopne
xor
cld
dec
cwtl
data16
test
pop
or
das
inc
cmp
ret
push
nop
xchg
push
lcall
add
cmpsl
mov
dec
sarl
mov
xchg
or
xor
out
or
sbb
jmp
daa
pop
cld
push
adc
ds
or
dec
rcrb
push
or
pop
rclb
mov
shlb
mov
dec
pop
das
add
adc
cmp
push
ds
add
add
push
ret
add
adc
filds
test
jg
or
mov
loope
stc
add
inc
xorb
mov
cmp
xchg
push
add
dec
adc
or
mov
xor
fidivl
sarb
adc
inc
lock
ljmp
ds
dec
jmp
cmp
jmp
dec
ljmp
movsb
shl
mov
bound
es
in
xchg
adc
nop
xchg
mov
movsb
jmp
inc
js
add
xchg
adc
int
les
fs
mov
inc
add
xor
outsl
xchg
push
testb
sub
xor
sub
fstp
js
or
leave
loope
mov
xlat
sarb
dec
les
lock
iret
cmp
pop
hlt
ret
repnz
push
jp
xorb
decb
dec
dec
pop
jmp
shl
imul
jmp
jmp
xchg
inc
pusha
or
mov
insl
int3
and
push
mov
jmp
mov
arpl
push
xchg
lea
and
and
mov
loope
stos
rorl
xor
leave
int3
inc
lea
xchg
sbb
or
dec
scas
rcrl
jno
inc
aas
mov
or
push
cmp
gs
jge
jno
sbb
mov
pop
sub
fs
or
or
mov
jo
xchg
dec
xchg
ret
adc
scas
test
xor
dec
mov
enter
xchg
mov
pop
cwtl
pusha
int
push
xlat
lret
mov
add
je
and
mov
shrb
cmp
jbe
sbb
ja
sub
inc
and
daa
mov
out
mov
inc
or
inc
in
adc
cmpsb
or
inc
sub
xchg
inc
sbb
xor
inc
xor
mov
adc
ret
xchg
mov
out
orl
mov
push
ret
xlat
lock
add
cmp
jb
or
mov
addb
popa
adc
inc
sub
mov
dec
fmuls
subb
pop
sub
pop
push
jecxz
pop
or
int3
sub
xor
dec
clc
cmp
sbb
lea
pop
aam
or
push
xor
or
cmc
or
push
test
js
and
mov
insb
and
pop
add
or
rcrb
pop
dec
in
popa
add
push
add
push
aad
dec
and
fwait
nop
inc
cmp
lcall
mov
push
push
push
movsb
sub
add
popf
jo
fstl
ffreep
pop
mov
jmp
data16
sub
pop
push
mov
test
adc
mov
adcl
push
jo
adc
push
int
fmull
and
cmp
nop
loopne
incb
xchg
mov
es
jmp
xor
mov
lock
subl
fwait
call
pop
sub
and
jp
lods
xchg
jo
xchg
sbb
ljmp
std
hlt
enter
cmp
movsl
xor
cli
leave
add
adc
loop
push
push
jl
inc
and
lea
jo
scas
push
jns
and
pmullw
cmpsb
sub
or
insb
push
jne
cmp
add
in
popa
adc
jecxz
push
mov
add
and
dec
shr
inc
adc
sub
sbbl
adc
je
mov
pop
mov
mov
cli
dec
dec
int3
xchg
pop
add
push
test
cmp
inc
add
aam
dec
mov
ffree
sub
add
pop
inc
sahf
test
in
mov
ds
aad
repnz
popf
mov
adc
les
in
orb
and
xor
pop
push
mov
or
mov
mov
std
push
xor
and
cmp
adc
fadds
adc
and
or
pusha
xor
dec
pop
clc
pop
mov
add
lahf
mov
push
les
jecxz
daa
inc
xor
mov
cmc
pusha
into
andb
lods
jl
mov
mov
test
les
pop
inc
cmp
xor
int3
insl
testl
adcb
je
insb
xchg
push
cmp
inc
sub
daa
inc
xlat
shll
add
jnp
xchg
add
rolb
roll
andl
jmp
adc
xorl
push
sbb
or
imul
loope
or
sbb
or
xor
dec
popf
cmovb
mov
adc
mov
or
cmp
rol
inc
cli
je
lret
inc
mov
jge
jge
lods
sbb
movsl
mov
rolb
mov
inc
fiadds
rcrb
out
xchg
test
loope
mov
sbb
lock
sbb
fidivrl
scas
and
adc
dec
test
es
rorb
bound
push
sub
je
repnz
mov
out
call
sub
jg
imul
and
dec
or
incl
jbe
add
jle
mov
outsb
xlat
pop
or
add
add
mov
add
mov
sti
add
xchg
mov
mov
xchg
jg
mov
or
or
fldl
fstps
mov
imulb
fstpl
insl
imul
adcb
out
fisubrl
xor
xchg
mov
movsl
sub
ljmp
xchg
push
add
pop
dec
aaa
and
and
rorb
xlat
gs
xor
add
in
es
cmc
call
jbe
pusha
lods
es
inc
popa
or
sbb
adcb
pop
iret
fcmovne
xorl
movsb
nop
push
add
jae
jge
dec
or
ss
shrb
call
add
popa
or
jne
sub
and
shll
add
insl
lock
adc
mov
mov
ss
je
mov
ret
incb
or
jne
add
nop
in
xchg
add
dec
aam
push
adc
test
cltd
inc
loope
fnsave
lea
push
fidivs
divl
pop
or
je
sub
jp
stos
add
push
xor
sbb
adc
out
mov
fistl
dec
es
mov
push
fnstcw
add
je
or
lods
je
or
imul
jecxz
sbb
pop
jp
jb
mov
push
pop
pushf
mov
push
xor
mov
jle
test
pushf
xor
negb
sub
test
xor
std
or
movsb
push
mov
sbb
ljmp
mov
add
sahf
sahf
add
je
push
or
adc
push
push
xchg
lods
pop
push
pusha
inc
mov
push
fwait
repz
dec
sub
add
movsb
or
or
xorb
test
int3
xchg
push
jae
ljmp
inc
adc
cmp
fs
mov
adc
add
orl
pop
int3
cmp
fildl
add
fs
xchg
jnp
aam
cmp
hlt
lea
dec
pusha
fldt
mov
in
push
jo
outsb
mov
das
pop
xor
outsl
neg
pop
lret
mov
fldt
popl
pop
inc
mov
dec
xchg
push
bound
js
out
leave
mov
push
loop
mov
push
enter
jne
push
push
push
or
or
add
cmp
adc
add
jmp
push
dec
and
int3
subl
test
xorl
mov
inc
cmpsb
daa
push
cmp
sbb
jbe
outsb
mov
enter
loopne
jp
loope
add
mov
adc
dec
jecxz
fstpt
or
les
aaa
pop
pop
mov
add
pop
test
pop
or
pop
xor
movsl
test
or
adc
sub
or
adc
or
sub
je
adc
jb
jle
scas
add
or
orb
sub
outsb
fstl
push
xchg
movsb
cwtl
inc
sti
adc
jne
sub
clc
mov
inc
push
push
inc
lret
mov
and
or
fdivrs
push
lods
mov
out
or
push
outsb
sbb
push
imul
cwtl
negb
addb
outsb
mov
push
jae
addl
and
popf
data16
scas
add
or
lock
jp
mov
pop
in
scas
or
pushl
shlb
xlat
ss
push
cld
add
mov
jle
adc
mov
cmp
adc
outsl
lahf
jne
ret
scas
cmpsl
in
add
add
out
mov
mov
test
pop
push
or
shlb
push
jnp
or
lahf
loope
xor
push
mov
jmp
lods
rclb
out
popf
adc
add
imul
cmp
sti
xor
mov
add
insb
jp
loope
sbb
and
jge
add
repnz
in
cmp
push
xchg
xchg
push
mov
pop
jb
mov
stc
adc
mov
and
mov
out
push
icebp
inc
cwtl
inc
xchg
dec
pop
test
adc
aas
test
inc
lea
mov
pop
inc
rcrb
or
push
cmp
jg
mov
mov
andb
int
cmp
fs
dec
and
lea
jo
shl
xchg
xchg
jne
adc
adcb
mov
inc
sub
pop
xor
inc
es
mov
push
cltd
aam
addb
sub
std
insb
push
das
jo
xor
out
mov
loopne
mov
and
and
adc
inc
insl
inc
mov
add
in
popf
outsb
xchg
and
das
adc
push
imul
jmp
sbb
fstps
int3
stos
popf
lods
add
pop
jbe
inc
ficoml
cmp
sub
mov
mov
sbb
push
pop
ss
adcb
imul
pop
roll
lcall
fldt
mov
mov
mov
lock
movsl
xor
jge
add
shrb
fs
or
sbb
push
fisttpll
cmp
dec
ja
or
dec
inc
lea
xor
rolb
out
cmp
mov
inc
add
loope
int3
por
xchg
shrb
jo
push
inc
popf
xor
fcmove
repz
jnp
push
push
pop
push
outsl
popa
bound
out
ficoml
push
add
out
mov
or
add
sbb
adc
mov
pop
outsl
xchg
jl
adc
xchg
mov
hlt
sbb
lods
dec
subl
xchg
mov
adc
call
jp
inc
addps
and
adc
test
pop
int3
lock
mov
add
push
adc
cmpsb
cmpsb
fwait
xor
inc
mov
addl
sub
cmp
movsb
mov
call
test
push
sub
ja
push
xor
rolb
mov
jo
sbb
mov
inc
or
jmp
aam
adcb
nop
leave
out
je
push
push
or
and
or
into
aam
pop
sbb
jne
or
or
or
or
add
mov
les
mov
mov
scas
movsb
adcb
je
mov
ret
andb
sub
adc
adc
xchg
roll
push
push
fs
and
add
dec
rclb
std
lea
adc
or
mov
sbb
pushw
sahf
mov
sbb
add
dec
add
fs
pop
pop
jns
mov
cwtl
insl
and
dec
mov
and
loop
jg
incl
outsb
ljmp
and
movsb
je
fsts
mov
cmp
push
inc
pop
pop
pop
add
xor
and
mov
pop
call
cs
lret
add
shl
push
lods
dec
or
xchg
je
loop
sub
popf
jg
push
inc
mov
pop
add
leave
add
cmp
ljmp
repnz
cli
nop
mov
push
mov
rcl
pop
cmp
mov
repnz
pop
mov
and
cmp
insb
dec
cmp
jbe
jns
mov
lods
dec
call
push
clc
xor
das
or
loopne
jge
push
inc
mov
sbb
xor
icebp
xor
or
inc
jmp
sub
leave
shrl
inc
sub
cmp
popa
jg
adc
fisttps
push
imul
cwtl
test
dec
loope
or
adc
or
jge,pn
iret
pop
ret
repz
adc
in
adc
mov
loopne
pusha
dec
in
xchg
addb
add
inc
push
add
adc
clc
pusha
sbb
xchg
adc
clc
push
mov
out
jo
xor
or
mov
push
cmp
loope,pn
flds
xor
mov
clc
sbb
lock
and
aad
cmc
in
pop
add
sbb
and
push
popa
add
pop
mov
call
xor
add
fisubrl
pop
xchg
dec
ds
or
push
push
add
sbb
dec
les
je
movsl
xchg
push
or
or
es
pop
mov
mov
dec
cmpsb
push
mov
inc
dec
push
push
and
mov
push
push
aam
fldl
adc
inc
fsubrs
xchg
dec
cmp
ds
sbb
fdivr
outsb
inc
sti
fisubl
push
rolb
movsb
mov
jb
fmulp
add
movsl
das
add
out
fsubr
aas
nop
pusha
mov
loop
cmc
mov
movsb
fsubp
shl
aas
nop
nop
and
xchg
popf
movsb
push
mov
insl
in
scas
inc
mov
inc
scas
mov
cmp
fsubl
loopne
notrack
xchg
add
aas
jg
mov
pusha
aas
int
cwtl
jmp
pushl
aas
mov
or
scas
cwtl
jg
adc
sub
inc
adc
dec
jbe
leave
sarl
mov
xchg
add
cwtl
pop
ds
mov
mov
rorb
in
sahf
add
pop
cmp
adc
fs
mov
popa
cmpl
mov
sbb
mov
sarb
push
jb
lock
lcall
mov
in
cmpsb
push
sub
mull
adc
dec
mov
shlb
cs
arpl
ret
sysenter
fwait
jg
in
lods
sbb
xchg
mov
sbbb
test
mov
xor
test
arpl
mov
lea
in
sub
call
mov
mov
xchg
outsl
sub
mov
mov
dec
pushf
add
mov
jmp
out
pushf
aas
dec
cmp
nop
cltd
pop
ror
adc
dec
fcompl
je
inc
push
jae
inc
adc
enter
pushf
push
popf
sub
cmp
push
jno
mov
call
les
mov
sarb
aas
adc
add
adc
popa
sbb
xlat
cltd
xchg
jo
js
scas
lds
pusha
cmpsl
push
call
mov
adc
ffreep
pop
lahf
jb
push
sub
pusha
aas
mov
lahf
jg
push
mov
mov
cltd
sub
in
in
int3
fmul
paddq
cs
scas
cs
fistpll
js
xchg
xchg
dec
sub
rcrb
inc
or
mov
pushf
mov
scas
test
out
mov
movsl
pmaxsw
cwtl
pop
nop
cmovae
adc
lock
pusha
int
push
mov
mov
aas
mov
out
and
adc
mov
jg
fcomps
or
js
stc
xchg
or
decl
es
xor
fbld
push
rolb
sbb
fisttpl
fmul
in
sbb
inc
adc
cmpl
sbb
and
jb
pop
jo
jb
pop
test
and
add
push
sbbl
nop
add
fmuls
sbb
cmp
nop
add
dec
pusha
je
cmp
cltd
or
outsl
add
in
inc
jb
jl
ds
fs
mov
cmpsb
mov
push
push
nop
iret
sub
sbb
in
lods
lahf
ds
movsb
add
dec
and
movsb
lahf
sbbl
enter
in
in
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
stc
xchg
sbb
aas
cmp
cmp
push
or
sti
pop
or
inc
mov
movsl
testb
das
mov
cmp
lcall
pop
xchg
pop
lock
call
outsl
cmpsb
lahf
or
imul
adc
push
pop
fsubrs
cmpsb
aas
xor
inc
mov
jb
pop
subb
shlb
cmp
test
testl
cwtl
bswap
addr16
dec
sahf
add
push
lea
out
in
sub
arpl
leave
inc
pop
push
andl
and
lahf
adc
dec
repz
adc
test
pop
fs
pop
pushf
push
push
push
pop
and
mov
fisttps
stos
pop
push
loope
sub
cs
sub
xor
imul
icebp
aam
ret
xchg
les
jmp
or
imul
aas
mov
les
clc
stos
mov
xor
pushl
push
inc
stos
mov
mov
cmpsl
pop
mov
cmp
mov
outsl
jg
lods
rorb
dec
lods
incl
cwtl
mov
sarb
add
test
dec
or
stc
test
lahf
int3
sbb
inc
mov
push
jg
dec
adc
sub
dec
push
lea
mov
inc
pop
flds
sbb
fists
aas
into
in
roll
mov
mov
jle
pushf
mov
inc
sbb
dec
pop
mov
aad
pop
or
cmp
jb
les
fwait
ds
push
arpl
scas
adc
jp
jb
push
or
mov
mov
cmpsl
pop
sbbb
push
jmp
pop
stc
fimuls
jae
mov
shrb
fiaddl
test
and
aam
or
mov
adc
sub
movsb
mov
leave
hlt
adc
aam
xchg
data16
cmp
js
ss
cmp
pop
mov
jb
and
mov
mov
adc
adc
pop
aas
fbld
enter
out
mov
jmp
mov
mov
pusha
fwait
inc
fdivrs
int3
outsb
lahf
fsubrs
sub
push
imul
jg
adc
ret
fdivrs
iret
stos
add
inc
pop
pop
shl
push
inc
add
pop
dec
mov
jno
or
aas
test
or
and
xor
cmpsb
inc
mov
push
mov
and
or
mov
adc
push
sub
jno
in
mov
jmp
adc
pop
mov
test
mov
inc
imul
imul
adc
or
sub
add
js
aas
push
mov
mov
or
jle
dec
aas
pusha
leave
enter
loopne
insb
sub
sar
jl
lahf
imul
push
adc
xchg
arpl
imul
test
xchg
mov
sub
cmp
je
enter
mov
in
sub
adcb
std
pop
mov
cmp
sub
leave
int3
or
adc
add
push
ret
sub
cwtl
xor
test
push
stos
add
dec
sbb
sbb
add
add
add
in
les
sbb
add
nop
fbstp
cmp
js
pop
cmp
add
nop
add
push
roll
add
pop
add
in
push
ss
aaa
rcrb
or
sbb
pusha
pop
dec
add
les
pop
fmuls
fsubrp
pop
fsubr
leave
cmp
hlt
adc
or
inc
pop
xor
and
mov
mov
and
cmp
mov
and
mov
mov
xor
lock
inc
xor
aas
inc
push
sub
aas
mov
loopne
mov
xor
push
xchg
sub
sbb
adc
dec
loopne
rorb
pop
pop
and
jg
inc
and
pushl
sbb
sub
or
push
xchg
movsb
adc
add
ds
sub
mov
sub
dec
mov
filds
mov
leave
and
adc
pop
mov
jno
jb
mov
push
mov
mov
ret
out
push
mov
leave
mov
int3
add
fs
xchg
adc
mov
fisubrl
inc
aas
mov
lds
cmpl
push
xor
testb
inc
jmp
test
in
in
cmp
andnps
loopne
push
and
pop
les
rcll
sbb
aas
test
and
and
aas
and
xchg
xchg
mov
dec
push
lahf
mov
pusha
rclb
sarl
push
dec
filds
pop
test
scas
dec
movsb
lahf
test
dec
or
pop
mov
ret
mov
adc
adc
inc
mov
std
xor
inc
adc
sbb
mov
add
jecxz
mov
lahf
adc
lahf
testb
cmp
fdivrs
pop
and
push
and
mov
les
jbe
mov
call
dec
lds
fadd
mov
sbb
out
loope
and
lahf
add
and
insl
mov
push
jb
pop
js
insl
cmp
pop
enter
and
clc
in
add
add
enter
jg
adc
add
aas
test
mov
and
pop
cwtl
adc
jl
daa
inc
dec
scas
jno
enter
pop
jb
push
pusha
pop
xchg
xchg
bound
test
pop
sarb
or
aas
jb
inc
cmp
scas
les
jmp
mov
mov
ds
mov
lret
aas
dec
sti
adc
lahf
paddusb
sbb
js
mov
call
popa
rclb
mov
nop
pop
roll
ret
movsl
inc
lds
pop
adc
call
cwtl
mov
fcmove
aas
jbe
adc
mov
add
jb
int3
pop
sbb
add
sbb
mov
cmp
pusha
mov
popa
outsl
into
push
repnz
push
js
mov
mov
insb
das
adc
sbb
lahf
mov
pop
shlb
jno
xchg
xchg
stos
jg
fmuls
iret
aas
xor
pop
pop
ficoml
sbb
fstpl
fildl
dec
jle
imul
dec
jo
add
aas
movsb
cs
mov
iret
add
aas
das
and
and
rcrb
mov
adc
sbb
dec
jg
pop
lock
stos
mov
xorl
repz
cmp
or
popa
xchg
jne
add
shrl
pop
cmp
in
test
test
adc
xchg
ret
xchg
add
ffreep
add
sar
adc
sbb
pop
mov
mov
fdivrs
add
fisubl
sub
cmp
into
inc
xchg
fldt
dec
imul
jo
mov
mov
mov
in
or
add
and
and
imul
xchg
or
xor
imul
fs
push
inc
add
push
popa
mov
ljmp
clc
add
mov
das
xchg
in
inc
push
or
fwait
in
roll
sbb
repnz
lock
xor
xor
adcb
cmc
comiss
or
push
pop
pusha
aam
push
test
pop
ss
jp
comiss
aas
aam
movsb
popf
fmull
lahf
in
in
dec
pop
fwait
jg
lahf
test
push
cmp
popf
push
dec
aad
xchg
sub
sbb
lcall
inc
adc
and
mov
and
cltd
out
mov
test
push
or
popf
or
sub
xchg
cld
adc
ret
push
mov
test
adc
push
or
imul
mov
adc
push
loope
decl
xlat
lahf
les
adc
aas
mov
das
scas
push
add
jb
sbbl
inc
or
mov
mov
enter
mov
pop
sahf
nop
iret
fwait
add
cmp
aas
push
sbb
imul
dec
pop
iret
inc
push
push
and
aas
jo
pop
aam
mov
int3
das
cld
push
cwtl
pop
dec
and
xor
inc
sbb
lahf
pusha
jg
outsb
arpl
nop
incl
es
push
movsb
pushf
aas
fldt
ret
insb
xchg
mov
dec
and
sbb
jg
les
mov
jae
xchg
add
fdivrl
fmull
int3
xor
daa
daa
mov
js
sub
fdivr
bound
cmpsb
mov
scas
and
in
insb
adc
sub
mov
or
jg
fmull
insb
movsb
and
andl
out
cmp
or
sbb
imul
mov
daa
adc
push
insl
dec
test
push
push
fadd
test
and
fimuls
fwait
or
xchg
pop
rcll
faddp
fists
rorb
push
and
add
loopnew
das
sub
shll
xor
lds
pop
leave
aad
out
daa
enter
in
sbb
inc
pop
ss
lock
dec
mov
jmp
ja
aad
pop
dec
loopne
loop
imul
ffreep
xor
jo
jecxz
pusha
jecxz
mov
fdivp
jecxz
sbb
jge
scas
jg
out
adc
jp
jbe
sbbl
popf
pusha
pusha
push
scas
inc
mov
shlb
adc
sub
xchg
pop
sub
or
rcll
cmpsl
clc
dec
pop
jb
sub
out
daa
jo
jb
push
cwtl
shlb
cmpsl
callw
and
out
sbb
cwtl
pop
dec
sub
in
mov
out
out
or
aam
data16
push
pushw
or
inc
addr16
ss
and
mov
daa
repnz
push
inc
sub
enter
cmpsb
clc
push
pop
sub
mov
lahf
dec
andb
jmp
daa
mov
in
cmp
rcl
xor
ljmp
ljmp
je
das
xchg
push
rclb
jle
packsswb
in
pop
mov
dec
test
pop
mov
insb
stos
lahf
mov
in
outsb
enter
nop
ficoml
in
incl
adc
inc
or
fcomps
xlat
jne
pop
or
xor
daa
adc
or
addr16
mov
dec
inc
out
xlat
js
add
mov
data16
iret
ja
call
movsl
sbb
addr16
sub
js
inc
or
push
dec
ja
movsl
mov
imul
lock
adcb
gs
daa
in
push
xchg
movsb
and
fsubrs
sbb
jg
xor
aaa
or
sysret
cmp
dec
ss
mov
enter
icebp
mov
clc
icebp
pop
jb
sub
fsubs
repnz
test
bnd
rorb
pop
rorb
repz
adc
push
imul
mov
cmp
scas
add
mov
mov
pop
cmc
pop
js
mov
dec
cmpsl
pop
adc
jne
inc
notb
pop
sbb
pop
testb
addr16
inc
data16
mov
daa
movsb
ss
add
iret
sub
rorb
pop
add
push
mov
mov
or
and
es
in
lea
inc
jb
daa
nop
imul
icebp
clc
pop
pop
pusha
xchg
imul
stc
imul
pop
mov
mov
pop
nop
cli
cmpsl
divl
push
data16
or
sti
add
sbb
out
loopne
lret
sti
insl
lcall
sub
mov
cmp
mov
shlb
mov
shlb
add
out
or
cmp
cld
mov
cld
out
add
adc
jb
leave
dec
lods
insb
pushf
adc
xchg
or
lods
sub
dec
xor
add
fbstp
ja
pop
fs
ja
rclb
inc
std
dec
jb
nop
fldcw
push
dec
add
cmp
daa
pop
test
push
mov
pushl
iret
lret
pop
pop
jb
call
fdivs
jbe
jae
add
lahf
loopne
mov
dec
pop
sub
push
add
xchg
sub
sbb
daa
lock
inc
adc
add
rcrb
sarl
loop
repnz
adc
ss
into
add
add
in
pop
out
pop
cmp
jl
iret
sarl
cmp
cmp
repz
pusha
push
dec
cmp
jnp
repz
push
mov
push
sub
neg
repz
xor
mov
lock
mov
push
into
in
or
iret
repz
sbb
xor
push
cmp
repz
jbe
pushf
scas
out
cmp
fcmovu
mov
iret
repz
mov
out
jns
out
testb
sbb
xor
sahf
out
sahf
inc
pop
insb
jle
pushf
jge
out
lods
mov
iret
repz
push
xor
sbb
mov
add
adc
push
dec
push
jbe
and
and
jns
mov
cmpsb
repnz
push
aam
sahf
out
sahf
mov
jo
sahf
out
pop
dec
cmp
repz
out
cld
push
lock
iret
repz
mov
pop
popf
addr16
cmp
sbb
out
adc
out
sahf
out
shlb
out
sahf
jo
inc
sub
or
dec
repz
lock
enter
iret
rep
pushf
mov
iret
repz
push
inc
ss
add
sahf
out
lcall
jns
out
cmpsb
xchg
mov
jns
out
dec
cmp
sahf
out
int
or
mov
jns
mov
and
jns
notl
cmp
adc
iret
repz
clc
or
shlb
and
mov
mov
repz
repz
xor
jbe
repz
xchg
repz
and
push
and
iret
repz
push
data16
lcall
add
orb
push
adc
pop
add
adc
sahf
out
adc
add
mov
pop
push
movsb
add
mov
xchg
or
jle
push
popf
pop
and
outsb
jns
out
mov
sahf
out
fsub
hlt
add
iret
repz
adc
cs
pop
cmp
cmp
nop
sahf
lods
push
out
lcall
lock
dec
repz
les
je
iret
repz
pop
dec
inc
xor
iret
repz
add
adc
jnp
fsubp
into
push
cmpsb
and
into
push
sahf
out
fidivrs
push
jl
out
inc
and
cli
and
cmp
shr
rol
mov
cmp
jnp
mov
mov
cmp
repz
fs
dec
into
sti
cmp
ss
adc
repz
fmul
shlb
xchg
mov
pop
dec
ds
repz
sub
push
repnz
out
loop
mov
jns
push
mov
testb
and
xor
out
push
cmp
pop
sub
push
jns
testl
out
enter
xor
push
push
sahf
out
aam
mov
and
iret
rcr
out
add
push
out
sahf
out
sub
dec
push
je
sahf
mov
repz
add
push
and
out
cmp
repz
push
data16
sahf
ja
ficomps
push
nopl
push
xchg
enter
or
cmp
or
es
push
cmp
xor
cmp
push
or
imul
repz
je
add
jl
jae
shl
repz
rolb
in
daa
jl
int
jns
cs
mov
adc
ds
cmp
dec
cwtl
sbb
out
sub
cmp
jg
mov
insb
inc
jg,pn
pop
cld
pushw
mov
add
fdivs
ss
add
cs
dec
mov
mov
cwtl
or
pop
or
cmp
repz
pusha
popa
push
repz
iret
rcl
rcl
ds
repz
fucomp
testl
adc
sub
inc
out
sahf
out
pop
imul
insb
insl
outsb
outsl
jo
jns
out
jb
je
jbe
jns
out
js
jp
sahf
out
sahf
jl
jle
addb
addl
xchg
out
sahf
mov
jns
out
xchg
xchg
xchg
xchg
xchg
out
sahf
out
cwtl
cltd
lcall
popf
sahf
lahf
mov
jns
mov
jns
out
test
stos
stos
sahf
out
sahf
lods
lods
scas
scas
mov
jns
out
mov
mov
mov
jns
out
mov
out
sahf
aam
out
std
or
cmp
xor
cmp
repz
pushf
test
out
cmp
shl
out
sti
or
sahf
out
sahf
pop
and
cmp
out
data16
nop
lahf
out
sahf
out
leave
shl
repz
repz
add
aas
dec
cmp
repz
jo
mov
scas
mov
out
scas
enter
sub
jns
out
dec
push
popa
outsl
jge
jns
out
cwtl
mov
sahf
mov
loopne
lahf
out
jmp
sbb
cmp
repz
aaa
dec
pop
insb
iret
repz
jns
test
cmpsl
stc
cmp
add
mov
jns
out
cmp
out
sahf
out
test
jns
lret
fcomip
add
sbb
pop
std
out
cmp
add
gs
xor
push
or
popa
jo
cs
insb
into
fs
sub
mov
jge
in
loop
gs
call
not
sbb
cmpsb
scas
popl
jb
addb
push
outsl
outsl
insb
push
outsb
stos
fcmovnu
incl
int3
outsl
je
push
jb
arpl
jae
inc
imul
lods
loopne
outsl
push
dec
popa
outsb
pusha
gs
jge
mov
jne
dec
dec
jae
imul
pop
push
je
stos
dec
ret
inc
js
jns
je
arpl
fstp
into
outsb
inc
gs
outsl
es
sub
scas
pop
cwtl
fstps
xchg
sbb
mov
lods
jne
inc
dec
popa
sbb
outsl
jns
cld
push
popf
inc
gs
push
popa
jb
insl
and
outsb
jbe
mov
popa
add
cmp
and
or
sti
jecxz
ret
add
push
je
add
dec
gs
outsl
lds
pop
int3
hlt
sbb
je
popa
insb
inc
push
sbb
push
es
cmp
push
pop
fildl
or
fs
insb
mov
sbb
insb
orl
pop
push
movsb
or
mov
outsb
addr16
push
sbb
scas
fs
ror
inc
je
sbb
cli
xor
lds
jns
arpl
jns
pusha
fldl
add
pop
inc
inc
jbe
push
fidivl
xchg
jno
jo
adc
clc
jo
daa
inc
ret
add
push
push
imul
outsl
xor
jne
popf
push
mov
jp
addr16
jo
adcb
shrl
push
jne
adc
cmp
sbb
out
cmp
lcall
inc
ret
cmp
dec
dec
jb
aaa
pop
pop
outsl
aaa
dec
push
or
out
adc
xor
cmp
push
mov
xlat
into
arpl
jo
aad
sbb
fisttpll
ret
dec
sub
push
outsb
insl
pop
sbb
gs
popa
dec
sub
leave
dec
fs
mov
dec
fstpt
push
push
ljmp
add
fsubs
into
xor
inc
fst
cmc
stos
cmp
out
sti
push
mov
or
push
popa
imul
rcll
bound
mov
in
and
fisttpl
dec
shll
fisttpl
dec
arpl
insb
rclb
mov
mov
bnd
call
mov
mov
insb
ret
add
dec
movd
subb
sub
push
jo
test
dec
je
inc
mov
pop
in
lods
or
insb
lcall
lods
mov
mov
pusha
out
push
adcb
mov
gs
outsb
jmp
pop
repnz
push
ds
inc
adc
push
rclb
sahf
mul
fcomps
dec
dec
inc
pusha
push
daa
and
lea
fs
dec
div
xchg
pop
test
add
subl
pop
or
pop
and
xchg
pop
mov
jns
pushf
add
mov
pop
test
loopne
sub
lret
sub
scas
xchg
add
and
sbb
adc
fsubs
sar
call
add
xor
data16
xor
cmp
cmp
cmp
aaa
loop
ss
popa
data16
arpl
xchg
xor
mov
lret
rol
insb
outsl
pop
cmpsl
mov
mov
inc
mov
jp
mov
fsts
shlb
mov
ds
test
adc
bound
push
mov
shlb
pusha
jbe
je
ja
fnstcw
xor
mov
idivl
push
xor
neg
jnp
push
jo
jbe
nop
fiadds
mov
push
ja
sarl
lock
negl
sbbb
outsb
mov
sbbl
jns
addb
imul
xchg
cmpsb
pop
cs
outsl
fistpll
mov
aaa
inc
inc
xor
xor
inc
add
xor
test
xor
add
filds
pop
or
rol
mov
ret
mov
push
aaa
xor
arpl
aaa
stos
xor
out
or
xor
gs
xor
xor
add
test
int
imul
bound
fs
icebp
sub
inc
gs
bound
ss
std
dec
cmp
test
ret
out
sarb
inc
cmp
jne
clc
inc
ss
inc
inc
mov
mov
lcall
xor
add
mov
into
les
sarb
jecxz
daa
outsb
adc
out
mov
sbb
inc
movl
pushf
sub
sbb
inc
and
test
cmpsl
inc
pusha
lret
jbe
mov
repnz
add
adc
cmpsl
sub
clc
inc
jo
iret
ss
sub
out
mov
or
popa
add
xor
cmp
jno
push
test
cmc
dec
and
fwait
sbbl
or
and
inc
outsl
xor
sahf
mov
push
dec
inc
rorb
add
dec
mov
mov
add
sbb
daa
and
add
jmp
iret
push
repz
andb
dec
scas
fs
stc
icebp
ja
in
pop
add
nop
data16
mov
add
add
addr16
add
add
repnz
jmp
cwtl
stos
loopne
aas
jmp
pop
jmp
pop
decb
inc
or
add
gs
popa
xor
mov
and
daa
add
testb
push
mov
mov
cli
daa
cld
and
call
mov
add
sub
or
sub
stos
test
pop
roll
stc
lret
roll
xchg
orl
testl
push
jb
outsb
jae
add
fimull
cli
add
jmp
add
shrb
movl
pop
rolb
push
pop
jmp
inc
repnz
pop
clc
in
add
inc
idiv
inc
add
inc
divl
out
push
loopne
push
add
add
jo
fwait
test
xchg
mov
jae
data16
fwait
test
inc
push
gs
push
outsl
jb
fs
icebp
int
mov
adc
pop
imul
add
cmp
das
ja
arpl
imul
outsl
dec
push
jp
arpl
das
aas
ja
push
dec
push
dec
jae
dec
sbbl
push
or
xchg
push
push
mov
loope
call
out
pop
mov
int
mov
imul
insb
pop
sub
outsb
outsl
loope
mov
jne
and
inc
dec
push
and
jg
sub
cs
mov
pop
inc
roll
jg,pn
cld
push
sbb
cli
mov
clc
dec
sbb
repnz
imul
push
inc
shl
ja
es
push
sbb
push
push
push
imul
adc
add
popa
lret
jp
or
pop
mov
stc
adc
mov
adc
or
lock
cli
xchg
jns
pusha
add
bsf
fnsave
cmp
cmp
push
dec
ret
xchg
push
out
pusha
push
in
sub
sub
cs
push
call
je
dec
insb
test
jb
popa
and
into
add
dec
jb
mov
out
inc
cs
and
xor
fildl
jae
arpl
xlat
inc
inc
or
push
movb
push
pusha
inc
inc
add
pop
icebp
sbb
cmp
lcall
sub
jb
add
adc
adc
ret
mov
dec
aaa
cwtl
push
dec
inc
jb
test
out
push
and
fdivrs
outsl
aaa
cmpsb
inc
sbb
cmp
add
push
notl
jbe
xor
add
dec
mov
out
insl
jno
aas
add
fisubl
call
xor
jge
popf
xor
and
and
inc
incb
in
movsb
mov
xor
mov
andb
sub
pop
stos
cld
jg
cmp
fldcw
lock
mov
pop
das
mov
dec
inc
and
sarb
xor
in
cs
mov
sbb
aas
enter
xor
cmp
fstl
push
mov
sub
dec
xor
jne
add
mov
mov
je
in
loope
sbb
pop
or
sbb
scas
mov
mov
cmp
or
adc
cmp
jl
sbb
push
or
outsb
call
dec
push
jle
add
inc
xor
loopne
pop
sbb
notl
cmpl
add
or
and
lock
xchg
ret
xchg
insb
fs
rolb
pushf
add
fs
or
and
imul
mov
jne
add
adc
push
lahf
lahf
int3
int3
push
orb
or
clc
mov
mov
sub
ds
fs
dec
pop
ret
jns
inc
pusha
xchg
push
out
add
jo
or
jns
in
add
pop
push
xor
jns
out
lcall
cmp
xchg
push
xor
out
pop
or
jno
ret
leave
push
dec
icebp
adc
mov
fnstsw
cltd
imulb
or
pop
orb
rcrb
jle
rclb
lcall
add
mov
pop
imul
insl
add
add
lock
inc
js
dec
pop
popa
fs
jae
ficoml
shlb
dec
pop
inc
jo
fidivrs
pop
icebp
pop
arpl
or
icebp
and
arpl
fcoms
std
jb
ja
mov
bound
cld
outsl
mov
outsl
outsb
dec
mov
test
inc
imul
jno
lea
sbb
divb
dec
inc
push
dec
inc
dec
pusha
cli
add
dec
out
mov
and
fidivs
inc
cmpsb
rorb
inc
or
xchg
cmc
add
subl
push
push
xchg
out
cmp
outsl
mov
cltd
lcall
fcoms
clc
adc
scas
test
test
out
out
xchg
nop
dec
push
pop
nop
inc
mov
mov
push
repnz
pop
add
or
jb
popa
add
jnp
xor
push
sub
and
add
push
cmp
and
push
add
out
mov
jae
imul
imul
insb
ds
adc
imul
jnp
fldl
inc
pop
daa
into
and
outsl
sbb
neg
imul
insl
bound
jb
jae
jne
arpl
outsl
leave
fisubs
ret
sbb
pop
jae
inc
adc
fiadds
xlat
jo
je
push
fbstp
cmp
je
out
pop
jb
fnstsw
jl
jbe
aaa
insl
lahf
push
sahf
divl
arpl
mov
testl
out
pusha
sub
inc
jbe
ja
in
fs
ja
data16
and
cmpsb
sbb
insb
dec
sbb
mov
out
push
push
sub
jae
jb
cmp
lahf
gs
xor
lods
ss
out
sbb
aaa
stos
push
add
cmp
mov
daa
out
cmp
push
outsl
es
jle
push
or
rcrl
clc
sahf
adc
push
or
dec
sbb
add
dec
mov
cmp
dec
xchg
xlat
repnz
js
outsl
cmpsl
sub
xor
cmpsl
ja
add
xorl
daa
mov
mov
pop
inc
xor
sub
icebp
push
pop
pushw
imul
fldl
shl
xor
scas
ret
rcll
or
sub
fs
push
enter
cmc
mov
sbb
arpl
popa
scas
arpl
push
jnp
push
jmp
mov
and
jnp
or
jns
xlat
sub
shrl
xchg
je
lcall
popa
sbb
ret
jnp
sbb
adc
arpl
cmpsb
jp
outsb
mov
lods
jbe,pn
out
pop
stos
push
div
push
pop
mov
sahf
push
arpl
sti
insl
insl
jecxz
sarb
sub
or
adc
sub
cwtl
fcomps
sbb
das
mov
xchg
mov
es
or
inc
jae
hlt
scas
pop
xor
mov
or
shl
jg
jo
xor
sbb
sbb
mov
xor
xor
xor
xor
cmp
inc
xor
push
xor
data16
jge
mov
xchg
xor
mov
shll
xor
xor
movsb
xor
xor
jmp
xor
xor
xor
xor
xor
xor
ja
test
xchg
xor
xor
xor
jg
rcr
pushf
xor
inc
xor
push
xor
mov
xor
add
rol
iret
mov
mov
sar
pushl
sarb
rol
das
mov
enter
mov
mov
test
popf
std
mov
into
repz
jmp
fcom
ret
pop
inc
aam
pushf
std
mov
inc
mov
or
loopne
fistps
int
mov
xchg
mov
and
popf
aaa
and
and
mov
jo
add
mov
or
add
or
and
or
aaa
rcrb
dec
cs
imul
shl
pusha
cld
xchg
push
or
inc
pusha
aaa
add
nop
subb
mov
les
out
aad
mov
push
pop
add
orl
in
push
lea
aam
inc
aas
loope
sbbl
cld
repz
and
jge
mov
test
xlat
inc
pushf
jge
mov
xchg
push
mov
pop
aas
test
ret
imulb
push
lret
xchg
test
jle
xor
inc
pop
aaa
xor
adc
dec
sti
lret
cmp
push
inc
xor
test
ja
add
inc
es
push
push
or
lea
and
pop
mov
dec
xchg
push
add
jmp
cmpsb
mov
inc
adc
inc
pop
xor
adc
push
inc
sub
movsb
rcr
xor
jg
rcll
packssdw
cmpsb
add
dec
dec
push
jg
out
xchg
and
ret
dec
and
sbb
dec
sbb
mov
pop
orb
xor
jg
adc
adc
sub
pop
add
jle
in
push
in
pop
adc
out
mov
insl
xchg
test
add
adc
pop
aaa
push
fwait
adc
add
sahf
int3
das
cmpsb
test
dec
adc
mov
xor
adc
cwtl
or
and
pop
dec
push
and
enter
subb
sbb
cmp
push
enter
mov
test
sbb
adc
aad
ret
cmpsl
xchg
mov
cmpsl
push
repnz
imul
sub
rolb
and
leave
dec
loop
adc
cmpsb
jnp
sbb
and
call
loopne
sbb
dec
or
adc
mov
adc
call
je
add
movsl
movsb
gs
push
fwait
adc
push
fldenv
lock
lods
push
adc
and
mov
and
inc
or
outsb
rol
test
cmpsb
loopne
xchg
push
adcl
lea
imul
push
push
pop
pop
dec
or
or
shrl
mov
arpl
and
lea
rorl
mov
out
mov
movsb
fisttpl
aas
inc
dec
push
ljmp
cmpsb
test
jae
ret
mov
pop
cmp
outsb
rorl
cltd
push
mov
mov
push
arpl
pusha
or
lcall
jns
add
xchg
pop
test
sbb
dec
push
mov
pop
ds
fucomi
std
mov
mov
test
xlat
test
dec
gs
mov
pop
add
add
arpl
subb
dec
andl
add
add
ret
mov
ja
inc
addl
inc
dec
pop
add
arpl
dec
arpl
mov
psubq
mov
test
subb
push
jne
and
lahf
xor
enter
lahf
jmp
in
leave
mov
cmp
dec
cmp
loope
aam
subl
cmp
cmpsl
pop
stc
adcl
in
test
and
iret
popf
mov
mov
adc
push
push
aam
mov
test
lret
push
pop
mov
sub
in
push
add
div
jo
adc
arpl
jbe
add
or
or
add
cmp
pusha
arpl
pushf
xor
div
aad
ret
fadd
and
add
subb
mov
loope
and
xchg
xchg
aam
add
lods
jo
sbb
imul
push
arpl
lock
into
sbbl
stos
sub
or
arpl
xor
add
les
xor
add
inc
call
inc
daa
inc
repz
ret
inc
clc
data16
add
imul
jne
adc
sbb
or
das
or
lret
xchg
xchg
xchg
dec
xor
pop
aaa
ljmp
fmulp
gs
mov
mov
test
jl
mov
adcl
push
out
lret
repz
sbb
mov
adc
push
push
jg
sbb
addb
push
add
bnd
sub
inc
or
out
or
nop
out
negb
sbb
push
in
cltd
mov
enter
cltd
nop
sub
cltd
inc
arpl
push
jb
jae
sub
mov
cwtl
leave
sub
ficomps
test
cmpsl
xchg
or
push
xchg
inc
jge
sbb
movsb
inc
add
int3
jg
sub
inc
mov
adcb
mov
add
inc
pop
xor
xchg
sub
jle
mov
xchg
xchg
cmp
nop
add
repnz
xor
in
icebp
and
inc
rol
shlb
mov
and
dec
xor
xor
sub
clc
movsl
pushf
loope
add
mov
cmp
add
and
filds
or
mov
lods
adc
nop
pop
call
mov
sbb
jge
in
in
adc
lock
add
pushf
mov
lock
and
fs
lods
call
fdivrl
cli
xchg
out
iret
mov
and
or
repz
push
dec
xor
lcall
and
in
sub
push
adc
pop
imul
push
xchg
daa
test
out
adc
push
dec
xchg
or
fiaddl
adc
mov
fisubs
ds
int3
icebp
pop
enter
loop
iret
xchg
icebp
dec
adc
scas
out
adc
mull
push
and
add
xor
clc
out
bound
mov
push
and
sbb
leave
xchg
xchg
out
add
add
movsl
jae
add
mov
pop
mov
cmp
int3
or
xchg
xchg
and
jge
iret
je
xor
test
fs
shl
jb
xchg
adc
in
or
sti
xchg
dec
jb
mov
and
enter
fstl
push
xchg
xchg
hlt
xchg
adc
lock
or
or
push
dec
add
enter
xchg
xor
push
add
rorb
clc
adc
inc
xchg
cld
mov
inc
xchg
sbb
xchg
fistl
lahf
andl
add
cmpl
mov
dec
lock
ss
test
ds
xor
inc
xchg
sub
or
addl
in
in
das
movaps
movsb
test
sub
stc
popf
nop
iret
cld
mov
cmp
or
cmp
pop
mov
adc
mov
mov
lock
add
sub
jns
js
in
push
mov
mov
inc
movsl
fwait
dec
ljmp
std
cmp
sbb
xchg
or
bound
sbb
mov
enter
xchg
lea
push
fs
mov
in
dec
lret
lcall
mov
adc
movsl
lcall
pcmpeqb
mov
push
xor
jns
iret
jmp
pop
mov
xor
shll
pushf
call
inc
cmp
add
mov
in
and
outsb
mov
gs
enter
xchg
push
test
insb
adc
sub
jmp
enter
add
sbbb
mov
xchg
push
test
lahf
mov
pop
xlat
adc
add
or
jno
and
push
mov
daa
or
test
dec
cwtl
mov
xchg
decb
daa
jmp
push
mov
les
add
and
pushf
or
or
xchg
mov
cmp
sbb
or
add
clc
mov
leave
sub
add
mov
mov
add
movsl
pop
in
das
add
mov
daa
outsl
dec
fwait
push
pop
call
or
inc
aas
mov
xchg
pop
ss
dec
addl
cld
in
jle
sbb
lods
jae
sbb
and
adc
push
cmp
int3
dec
push
leave
dec
add
in
xchg
fsts
mov
in
or
xchg
xchg
add
in
int3
loope
sbb
nop
daa
cmpsl
stos
xchg
mov
fistps
jecxz,pn
and
adc
mov
inc
xchg
add
mov
xchg
arpl
imul
pop
in
xor
xchg
dec
loope
add
add
test
cld
jno
inc
es
test
cltd
push
daa
jae
clc
je
push
xchg
push
mov
dec
movsl
xor
punpckldq
montmul
cmpsb
xchg
adc
adc
daa
sbbb
sbb
mov
xchg
xchg
jg
or
cmp
dec
or
jns
loope
data16
int3
test
mov
push
mov
cld
pop
add
inc
inc
mov
fimuls
push
in
and
mov
pop
sub
and
mov
sbbl
int
jnp
scas
xorl
mov
xor
jbe
movsl
in
addl
addr16
mov
rcrl
lock
repnz
push
cld
cld
mov
jo
xor
and
xor
and
jo
adc
jae
mov
popa
cltd
dec
fpatan
or
mov
pusha
roll
cmpsl
push
sub
pop
push
in
jbe
push
jns
hlt
push
pop
hlt
inc
mov
fisubl
xor
dec
popf
aaa
clc
add
loopne
fs
jo
inc
sbb
sbb
adc
lock
orb
rolb
adcl
xor
daa
in
jno
dec
cmpl
sub
ret
add
nop
lret
dec
adc
sti
xor
jecxz
insb
out
std
lret
cwtl
pop
add
or
jnp
add
mov
cmpl
stc
xchg
dec
push
sbb
js
jae
call
sbb
shl
mov
inc
nop
dec
mov
adc
and
and
pop
dec
insb
mov
push
mov
pop
sbb
xchg
jl
inc
adc
cmp
enter
stos
jg
jg
lods
addl
adcb
dec
enter
testb
or
pop
in
or
ss
jl
inc
pusha
xchg
and
adc
inc
sub
test
sub
mov
ja
outsb
mov
xor
test
xchg
pushf
add
push
in
jle
dec
add
lods
jecxz
scas
or
repz
push
push
nop
js
adcl
cld
jge
jl
dec
enter
arpl
push
rcr
fcoml
insl
pop
es
sub
sub
dec
jne
and
out
addb
test
jl
cmpl
dec
add
jb
adc
dec
or
mov
fs
mov
and
les
or
stos
subl
fwait
push
das
in
popa
cmp
adc
sbb
inc
pop
cmp
xchg
xchg
ss
or
add
sbb
jnp
inc
movsl
adc
jae
iret
mov
or
lock
jnp
adc
dec
adc
in
jp
jecxz
pop
dec
add
pop
or
lods
inc
and
pop
jp
and
jns
stos
fwait
add
push
add
adc
addr16
adc
mov
ljmp
lret
add
loope
mov
pop
sbb
sbb
add
fnstcw
xchg
stos
dec
or
addb
inc
js
ja
enter
test
push
or
clc
sub
mov
push
pop
fcmovne
mov
xor
mov
cli
repnz
es
mov
mov
inc
cmp
outsl
jbe
push
push
nop
nop
jp
jl
dec
insb
xor
dec
push
cmp
subl
ret
inc
fbld
mov
lock
push
insb
inc
mov
fstpt
cmp
adc
push
push
in
pop
mov
push
push
xchg
cmpsb
in
pop
incl
fs
push
and
cwtl
cwtl
leave
sub
repnz
push
xor
pop
enter
pushf
push
daa
ss
sbb
repnz
add
or
pusha
push
mov
mov
pop
mov
mov
dec
pause
add
movsb
dec
jb
in
ret
jb
cmpb
cmpsl
jb
jb
add
movsb
test
lds
mov
xor
xor
ret
cmp
mov
mov
adc
jne
dec
mov
adc
mov
add
daa
dec
js
shr
es
int
sbb
adc
adc
enter
nop
popa
lahf
push
icebp
jo
test
js
fs
mov
or
sub
jb
sbbb
or
or
fadds
or
movsb
jb
orb
mov
xchg
xchg
cmp
jnp
shrb
cmp
outsl
xchg
stos
outsl
mov
dec
adc
xlat
dec
test
inc
add
push
pop
roll
leave
adc
xchg
xchg
popf
out
outsb
call
mov
stos
insb
add
push
ja
clc
les
scas
push
call
test
cltd
clc
push
pusha
push
or
xor
sbb
adc
fstp
jecxz
out
push
out
cli
jae
out
sbb
sbb
das
enter
cmp
stos
insl
ror
and
jp
enter
xor
scas
stc
cmp
mov
mov
in
push
addb
or
cmp
loope
insb
push
cld
adc
and
stos
pusha
add
add
pop
mov
ret
and
addl
jno
hlt
addr16
std
mov
out
jmp
and
inc
push
jb
imul
pop
jb
imul
add
dec
push
mov
push
nop
pop
and
cmp
arpl
dec
arpl
lods
sbb
jmp
push
ret
add
lods
pop
mov
cmpsb
imul
out
inc
mov
lret
ja
arpl
jno
add
cmp
mov
ds
push
pop
jns
jl
inc
xchg
pop
shl
ret
outsl
in
inc
xchg
push
sbb
in
in
in
cmpsb
dec
push
das
cmpl
aad
or
arpl
push
fs
xchg
scas
push
shlb
dec
pop
dec
movsl
push
lock
push
pop
jb
pop
inc
pusha
push
inc
popa
shr
mov
adc
in
pop
pop
insl
sub
adc
test
sbb
lds
adc
cmp
or
hlt
lret
enter
or
mov
cs
pop
jg
lret
fdivrs
push
rcll
mov
mov
mov
jb
dec
jno
or
jge
mov
add
push
loopne
imul
cmp
rcrl
or
insb
orl
jg
jne
sub
sbb
nop
push
sbb
addps
push
sub
call
or
sbb
sub
inc
jecxz
add
inc
nop
iret
add
gs
cmpb
gs
or
sbb
call
inc
sub
xchg
mov
or
ret
das
inc
add
fchs
dec
flds
push
fcoml
cmp
mov
or
or
sub
push
addl
mov
inc
push
outsb
add
hlt
js
or
pop
mov
ret
in
mov
clc
and
cld
mov
and
jg
adc
mov
cld
and
mov
mov
xchg
bound
inc
xchg
addl
movsl
insb
adcl
and
fs
sbb
nop
xchg
pop
aaa
inc
out
sbb
arpl
push
andl
mov
sbb
sub
sbbl
or
jmp
jmp
loope
or
fimuls
adc
push
adc
out
lret
and
adc
nop
hlt
cld
jmp
sub
pop
dec
pop
js
mov
aam
out
inc
push
sub
and
sub
andl
fld
cltd
nop
xchg
roll
mov
or
xor
fsubl
xchg
popa
shl
sbb
ss
addl
popf
pop
sbb
xchg
adc
jmp
inc
sub
test
pop
xchg
andl
add
adc
xchg
lock
or
push
sub
sub
or
push
push
xorb
push
mov
aas
xchg
sbb
push
sub
shll
pop
push
inc
std
adc
pop
adc
mov
in
testl
pop
push
out
test
add
push
pop
push
lret
sarl
pop
mov
pop
mov
adcb
pop
sarl
pop
xor
pop
shrl
lea
mov
or
pop
add
or
flds
push
fmuls
and
inc
rcrb
fld
sbb
mov
imul
iret
cmpsb
sbb
add
sub
in
mov
imul
pop
in
adcb
mov
jno
sub
mov
jge
add
es
lret
pop
enter
mov
andl
lock
pusha
lahf
insb
mov
pop
sub
xchg
orl
or
xchg
pop
adc
enter
ret
add
icebp
pop
scas
fs
dec
dec
mov
sarb
pop
mov
lea
cmpb
jp
pop
mov
dec
mov
std
lea
add
cmp
cmp
inc
es
and
adc
sub
out
test
test
pop
scas
sub
xorl
enter
gs
mov
fwait
outsl
jno
shl
fdivs
xor
inc
pop
mov
push
lcall
or
es
add
or
addb
xchg
dec
push
repz
or
pop
aaa
mov
add
pop
jg
leave
addr16
call
pop
push
in
sbb
sub
aas
and
mov
fcoms
jb
jmp
and
hlt
repz
movsl
insb
loope
and
xchg
mov
mov
mov
xchg
jbe
inc
cli
mov
sub
in
inc
xchg
mov
test
insb
pop
push
mov
sbb
in
jb
or
in
mov
loope
mov
cmp
insb
in
pop
mov
sbb
inc
sub
jge
in
subb
inc
and
xorl
and
pushf
xchg
push
or
andl
cmpsb
sub
or
xor
or
sbb
in
push
or
dec
in
mov
push
lret
in
xchg
or
push
or
out
sub
mov
sbb
jne
enter
dec
fisubrs
push
in
add
or
xor
mov
in
inc
xor
pop
shrb
inc
add
loopne
or
pusha
dec
mov
or
and
xor
fs
ret
pop
pop
cmp
dec
lods
int3
adc
push
sub
pop
lods
fwait
lcall
lds
ret
shr
cmpsl
and
dec
in
cltd
clc
sub
cmpl
aaa
inc
in
popa
pop
inc
push
adc
ja
mov
in
jnp
adc
ja
add
pop
jo
in
push
push
pop
xor
cmp
sub
or
sbb
sub
dec
push
jmp
sub
and
mov
jb
add
rcll
dec
fld
in
push
xchg
roll
mov
popa
push
push
out
popa
jno
add
rcrb
scas
xor
cld
and
in
rolb
mov
fld
fstpl
sub
hlt
xchg
orl
dec
rcr
inc
sub
das
sub
xchg
dec
sbbb
stos
xchg
in
xchg
mov
mov
test
out
dec
mov
mov
xchg
in
fsubs
bsf
mov
test
xor
test
sub
out
xchg
imul
das
ja
insb
mov
xor
dec
dec
dec
out
mov
mov
adc
pop
lea
dec
xor
xor
inc
movsb
cmpsl
xchg
xor
addr16
lcall
jmp
adc
pop
mov
and
adc
rorb
cmpsl
movsb
jb
xor
or
and
push
lret
andl
ss
daa
rorl
adc
inc
mov
sbb
xchg
jl
stos
cltd
cltd
sbb
movsl
adc
pop
mov
cs
mov
ds
cmp
or
dec
pop
xchg
mov
in
es
fld
test
sahf
add
insb
loope
in
and
cmp
movsb
jg
push
add
xchg
adc
push
mov
xchg
adc
sub
adc
pop
lahf
repnz
int
push
mov
add
mov
add
dec
add
adc
fs
dec
fxam
bound
das
sti
dec
mov
xor
cmp
sbb
dec
fld
out
in
daa
nop
pop
and
rorl
in
xor
mov
insb
loope
push
orb
mov
test
mov
jge
ret
xchg
in
and
jmp
dec
adc
test
mov
enter
or
adc
hlt
add
fld
jge
lea
dec
in
sub
xchg
inc
nop
sub
dec
in
bound
or
add
clc
ss
jne
test
inc
push
xchg
mov
in
mov
sbb
sarb
clc
mov
insb
loope
in
dec
mov
push
sub
lock
fxam
aaa
and
in
push
add
popa
add
add
cmp
xchg
mov
aad
sub
adc
flds
sbb
dec
in
and
ds
ds
test
add
dec
push
faddl
mov
int3
inc
insb
pushf
rorb
cwtl
add
and
je
push
jnp
data16
xchg
mov
in
add
cmp
add
xchg
insb
xor
stc
inc
pop
push
jecxz
in
cmp
inc
push
inc
push
mov
sbb
or
in
insb
loope
std
or
enter
ror
inc
fld
or
add
xchg
das
pusha
stos
push
mov
add
push
sub
push
stc
and
inc
xor
push
in
outsb
cwtl
lock
push
test
push
lret
add
fucomp
mov
in
inc
xchg
sub
sub
or
scas
mov
test
pop
ja
inc
adc
xor
inc
push
xchg
mov
xor
dec
rcll
repnz
inc
test
inc
enter
dec
fld
in
outsl
sub
sbb
test
xor
adc
sub
or
push
faddl
and
in
lcall
sub
lret
into
xchg
mov
pop
cs
mov
ret
lret
mov
add
in
push
js
ret
push
mul
ds
pop
or
fnsave
ret
sub
test
fxam
adc
dec
test
in
jnp,pt
ret
in
daa
orl
jae
rolb
dec
stc
mov
pusha
jp
nop
push
xor
cmp
pop
mov
or
mov
and
cmp
sub
cmp
ret
jbe
insb
loope
dec
in
pop
pop
mov
movsl
in
xchg
retw
sub
or
in
sub
mov
jp
cmp
inc
push
jg
adc
leave
add
sbb
or
test
mov
mov
sub
aaa
add
jae
popa
push
subl
push
add
cmp
push
pop
cmp
xchg
jns
filds
or
xor
jge
repnz
bound
test
xchg
dec
shrl
jo
sub
and
jmp
or
xchg
dec
cmp
stc
pusha
inc
xlat
xchg
or
in
xor
pop
out
aaa
jno
mov
mov
rcrb
push
sub
or
mov
xchg
mov
in
into
or
out
aaa
in
push
aaa
jns
fld
cmp
in
pop
mov
lock
dec
leave
mov
popa
inc
add
jp
movsl
in
ss
in
mov
fisubs
cmp
orb
ss
hlt
arpl
jecxz
ss
outsb
xor
in
mov
pop
add
and
push
push
cmp
cmp
push
in
xor
shrl
pop
jb
cmp
dec
xor
xchg
xor
xchg
movsl
in
xchg
sub
inc
sbb
xor
js
repnz
xchg
and
in
popf
ja
nop
inc
cs
hlt
test
imul
xchg
mov
inc
push
sbb
hlt
mov
pop
jb
xor
sbb
and
mov
add
dec
and
xor
and
inc
inc
xor
cmpb
movsb
in
int
xor
iret
xor
es
out
adc
insb
stc
repnz
pop
test
push
dec
lcall
pop
js
cmp
arpl
out
cmp
das
stos
push
lret
idiv
sub
add
pop
mov
xchg
sub
mov
xchg
pop
inc
pusha
nop
cmpsl
xor
xor
xor
pop
jmp
adc
pop
add
xchg
lea
movsl
insb
and
in
mov
jmp
xor
pmulhuw
and
inc
enter
xor
xor
push
dec
inc
jb
lods
adc
fstps
inc
repnz
popa
cli
ja
shlb
adc
movsl
sub
mov
in
mov
push
loopne
xor
ret
das
lods
popa
push
lret
and
and
xchg
mov
pop
imul
dec
fld
pop
cltd
fs
pop
mov
clc
mov
pop
das
cmp
test
test
xchg
mov
sbb
pop
xchg
mov
or
mov
fstl
in
cmp
add
mov
push
xchg
in
enter
inc
mov
or
push
lret
adc
imull
push
and
test
sub
or
in
or
fcompl
ret
mov
pop
mov
cmpsb
mov
or
inc
frstor
lea
mov
out
and
cmp
bswap
mov
stos
sub
xchg
sub
cmp
movsb
clc
jl
hlt
pop
pop
inc
push
cmp
xor
out
and
cmpsl
jg
ss
stos
mov
adc
mov
hlt
push
inc
add
or
sub
dec
mov
out
sub
out
rcll
lahf
cmc
pop
dec
or
jp
sbb
aaa
in
int
inc
xchg
push
mov
inc
adc
test
popa
sub
call
push
inc
push
dec
rolb
add
cmpsl
or
fbld
add
fiadds
aaa
dec
and
or
jno
inc
ss
lods
dec
sbb
pop
hlt
cmpsb
sub
xor
xchg
dec
sbbl
ss
and
push
lock
inc
push
adc
mov
int3
jno
cmp
inc
lret
dec
and
hlt
add
nop
sub
faddl
push
addb
mov
sub
push
and
aaa
je
in
icebp
mov
sub
pop
in
jecxz,pn
cmp
mov
add
jmp
mov
or
mov
cmp
scas
inc
out
repnz
sub
inc
andl
mov
movsb
imul
pop
dec
dec
mov
adcl
fstps
add
lret
or
adc
cmp
sub
push
push
std
sbb
and
sbb
dec
into
jmp
fcomps
adc
cmp
dec
pusha
clc
test
es
xor
hlt
lahf
or
sbbb
or
jae
scas
and
sub
popa
cmpb
or
fucomip
xor
ds
sub
jmp
and
in
movsb
pop
pop
in
adc
clc
adc
fldt
xlat
sub
ja
fcmovu
mov
push
jecxz
hlt
xchg
ljmp
lret
mov
sub
and
dec
cmp
daa
add
xchg
mov
js
add
jmp
div
dec
pop
lods
es
inc
mov
daa
xchg
es
mov
aas
push
or
ret
add
ljmp
xchg
jne
and
inc
lret
push
pop
sub
out
sbb
pop
jbe
les
adc
sbb
test
adc
sbbl
mov
movsb
sub
cmp
ja
and
sub
push
or
or
adc
dec
lods
imulb
xorb
mov
sti
add
popa
inc
jbe
pop
xlat
int3
dec
ja
and
xchg
fsubp
mov
mov
mov
les
repz
out
es
adc
jo
ss
mov
scas
outsl
pop
test
inc
es
jmp
aas
cltd
and
movsb
sub
call
push
xor
pusha
ljmp
sub
adc
adc
push
mov
fmull
push
cs
mov
mov
shrb
mov
jae
adc
fmuls
and
adc
insl
add
paddsw
xchg
sbb
mov
sti
shld
xchg
mov
dec
into
or
mov
movsl
aas
and
in
sub
cmc
and
fisubs
inc
inc
stos
loopne
cmp
jb
push
enter
and
test
push
push
and
in
and
mov
movsb
adc
sbb
inc
roll
pop
pop
cmp
out
jo
enter
xchg
inc
rcrb
sub
push
rcll
or
and
push
push
dec
ret
lock
arpl
xchg
or
sbb
enter
push
add
sarb
add
jbe
in
iret
pop
jb
outsb
add
and
push
mov
pop
cvttps2pi
xchg
inc
fldl
cwtl
lock
jae
mov
and
in
adc
rcll
adc
adcb
insb
or
je
sub
add
call
pop
mov
xor
lret
pop
pop
pop
pusha
jne
ret
lret
push
and
inc
je
inc
aas
ficomps
loope
test
push
push
push
stos
mov
add
jne
adc
jmp
pop
les
fists
fwait
push
mov
pop
pop
push
jne
imul
int3
dec
pop
adc
into
js
or
lock
xor
jp
and
sbb
and
pop
lock
pop
mov
or
sbb
out
lock
int
add
enter
cmpsl
sub
sbb
mov
add
js
fldl
push
add
sbb
mov
cmp
sub
dec
lods
push
loope
or
inc
js
or
xchg
test
repnz
sbb
insl
or
push
cmpsb
or
inc
into
add
inc
pop
cmp
sub
xchg
inc
jb
jecxz
xchg
sbb
or
cmp
xchg
outsb
or
push
push
or
es
jo
fstl
jl
aaa
jo
movsl
xchg
dec
adc
cmpsb
mov
add
subb
mov
mov
or
cmpsb
aad
in
imul
inc
into
push
fs
push
adc
aas
in
pop
inc
in
mov
add
out
add
mov
sub
sahf
pop
xchg
pop
loop
dec
push
hlt
jmp
cmp
cmp
inc
orb
and
icebp
lea
pop
cmp
add
mov
add
movsb
andl
mov
dec
sbbl
rcrl
mov
sbb
sbb
or
cld
insb
and
sub
sbb
shrl
add
push
jmp
dec
lret
dec
xchg
jl
xchg
and
test
push
sub
nop
or
outsl
loopw
mov
push
fcomp
loopne
pop
gs
or
mov
and
ret
scas
sbb
inc
or
sbb
test
jnp
sbb
add
pop
sbb
pop
add
sbb
scas
js
adc
hlt
sbb
je
sub
and
sbb
and
pusha
xchg
jl
or
pop
inc
dec
and
sub
inc
jb
cli
roll
add
call
hlt
call
lods
cmp
stc
inc
sub
addl
and
mov
adc
test
pop
mov
mov
xor
sub
pop
ret
and
stc
add
in
mov
mov
aaa
test
jnp
fistl
cmp
ret
clc
fdivl
or
in
mov
cmp
movups
sbb
push
pop
sbb
mov
push
add
xchg
xchg
aad
jb
mov
stc
sbb
es
adc
rcll
xchg
adc
lret
clc
add
dec
jno
jg
hlt
andb
je
mov
sbb
inc
bts
or
in
fwait
or
popf
or
and
fwait
jmp
pop
jne
and
xor
pushf
and
jnp
xchg
outsb
enter
pop
push
adc
adc
sub
adc
popf
inc
cmp
cmp
out
adc
jecxz
in
jmp
add
sbb
mov
push
and
push
ret
xor
cltd
bound
xor
in
cltd
adc
outsl
jbe
pop
repnz
adc
in
sbb
arpl
push
adc
and
xchg
lock
fcmovnu
fildl
inc
ret
mov
sbb
ss
and
mov
xchg
inc
cmp
stc
and
mov
pop
in
pop
and
pusha
dec
cmp
rclb
jecxz
scas
push
outsl
inc
js
addb
mov
cmpsl
push
outsl
fldt
das
inc
push
leave
pop
adc
cmp
adc
in
enter
les
and
or
fadds
fs
mov
leave
bound
fnsave
stos
or
scas
insb
fdivrl
sti
add
pop
and
mov
adc
pop
fcoms
mov
add
lret
adc
lcall
fscale
mov
mov
push
inc
sbb
and
and
xchg
adc
addr16
mov
inc
push
rcr
fcoms
dec
and
incb
mov
adc
out
add
dec
lcall
aam
adc
xor
int3
int3
add
push
leave
mov
les
adc
mov
in
fwait
push
push
out
mov
loop
fsubr
mov
ficompl
fs
sbb
adc
pop
or
inc
or
arpl
imul
fs
add
insb
or
test
push
in
dec
loope
loope
daa
jns,pt
lock
or
xchg
fiaddl
mov
xor
pop
ja
imul
call
add
lahf
pop
pop
lods
call
jge
fistl
bound
lret
and
fsubrl
lods
outsb
popa
push
and
shlb
sarb
cltd
pop
xchg
cmp
rorb
jmp
popf
push
mov
add
stos
xchg
imul
bound
push
cmp
push
push
sub
and
sub
fs
jne
adc
test
or
test
insb
mov
xor
mov
and
into
inc
outsb
add
leave
arpl
or
pop
leave
mov
sub
pop
dec
dec
aam
xor
test
adc
jnp
gs
je
mov
xchg
or
push
test
xor
std
mov
jns
sub
mov
inc
or
sub
push
jmp
jae
nop
and
cwtl
sbb
push
inc
lds
push
push
xchg
xchg
aam
movl
or
adc
bound
and
loope
in
add
xchg
int
adc
daa
xchg
inc
dec
or
xor
adc
ja
cmc
imul
fcmovb
mov
stc
or
and
adc
mov
mov
enter
jbe
jb
add
pop
test
test
dec
pop
sub
ret
insb
mov
mov
mov
ds
mov
js
pop
gs
sub
sub
movsl
push
push
jle
jo
mov
pop
sub
nop
mov
call
loopne
dec
and
xor
inc
sbb
mov
mov
andl
or
mov
mov
pusha
adc
cmp
xor
cmp
rcl
or
or
add
popf
adc
and
mov
dec
sbb
aad
cmc
pop
mov
pop
test
call
add
roll
call
add
add
cli
xchg
cmp
mov
shl
shrb
leave
cs
fadds
or
dec
mov
gs
add
add
int3
add
xlat
push
inc
push
addb
dec
popa
add
popa
jl
ja
dec
add
mov
adc
add
int
add
rol
cmc
es
sbb
inc
test
mov
in
in
or
push
adc
cld
daa
push
ret
ret
call
xchg
add
sub
and
mov
pushf
jmp
push
mov
add
cmp
dec
push
inc
jecxz
mov
nop
mov
sbb
inc
loope
dec
pusha
aas
pop
ficompl
add
faddl
shll
cmp
xchg
fnsave
call
dec
nop
add
jecxz
adcb
int
jb
jbe
mov
push
xchg
sub
dec
dec
gs
sub
lcall
or
add
pop
cmpsb
push
cmpsl
or
mov
inc
inc
cmp
sbbb
and
bound
jp
dec
ds
add
std
int3
pop
dec
add
push
cmpsl
call
nop
pop
sub
and
mov
repz
xchg
inc
add
call
cmp
add
and
mov
add
jmp
dec
cmp
push
jmp
xor
xchg
sub
and
arpl
call
insl
mov
call
movsl
enter
adc
ffreep
xchg
dec
mov
dec
sahf
push
mov
rolb
jne
inc
xchg
dec
je
sti
pop
jg
or
push
sbb
addb
mov
and
ror
mov
cs
lret
mov
int3
aam
push
xchg
dec
loope
pop
xor
jnp
pop
add
push
or
jns
sbb
dec
test
or
cmp
and
cmpsb
dec
cmpsb
mov
test
sbb
push
pop
inc
push
add
inc
pop
xor
inc
popa
sub
dec
inc
faddl
dec
inc
movsb
inc
and
xchg
sub
sarl
repnz
inc
mov
leave
adc
adc
add
and
pop
lahf
adc
test
or
mov
nop
sub
xor
xor
nop
sub
in
xchg
aas
fdivr
jne
nop
inc
pop
inc
inc
or
push
jle
cltd
sub
sub
rcrl
inc
mov
push
rolb
dec
in
cli
in
and
cmp
and
add
movl
cltd
jmp
add
popa
negb
fs
int
push
orl
push
xor
sbb
or
or
mov
dec
or
mov
push
aaa
dec
shl
add
inc
pop
pop
fdivl
popa
sbbb
push
andl
popa
push
cwtl
popa
mov
cmpsl
cmpsb
xor
adc
sbb
mov
popa
mov
jnp
ret
adc
fs
test
or
push
mov
popa
lcall
push
sbb
sub
and
add
lahf
xor
dec
adc
jbe
cmp
push
cmp
popa
add
mov
orb
push
lret
jge
and
mov
ds
xor
cmp
jns
gs
fstpl
call
xor
pop
fildl
push
xchg
mov
and
xor
dec
inc
imul
dec
loope
lods
rorb
fcomp
push
fstpl
cmp
mov
xor
sub
mov
aaa
fildll
mov
adc
outsb
rcrl
call
ljmp
adc
cmp
pop
mov
inc
dec
and
add
outsb
cmp
shrl
add
cmpsb
jo
sbb
mov
mov
test
int
call
xor
js
xchg
push
bound
stos
rcll
inc
mov
nop
push
mov
xchg
mov
subl
nop
mov
xor
dec
rcll
cmpsb
and
jno
cwtl
hlt
cmpsl
andb
loop
mov
or
sar
add
incl
inc
adc
cmpsb
lock
in
and
add
rclb
cmpsb
mov
push
mov
andb
jg
add
insl
mov
inc
add
loop
sub
dec
stos
sub
mov
test
cwtl
ret
inc
fstpl
add
jae
push
mov
and
inc
add
mov
xadd
and
adc
rclb
jo
add
mov
add
rorl
pop
mov
pusha
or
add
add
test
push
or
inc
insb
inc
movsb
and
mov
and
xor
and
add
jmp
add
roll
xchg
bound
les
sub
sbb
inc
idivb
or
xchg
adc
sbb
push
sbb
push
xor
ret
inc
lods
test
scas
add
pop
leave
xor
xorb
add
mov
loope
loope
dec
push
push
xor
cmp
mov
aad
roll
mov
cmp
fildl
lret
jecxz
call
jecxz
out
push
xor
loopne
dec
rcrl
jge
or
popf
dec
jo
push
xor
mov
fdiv
jo
mov
popa
lock
or
movsl
and
out
push
cmp
test
ljmp
movsl
pop
fisubl
add
xor
pop
arpl
sub
xchg
ret
xor
lock
sub
stos
and
repnz
xchg
pop
loopne
xor
push
jl
jp
repnz
add
jb
cmp
xchg
into
stos
and
ret
sub
sub
add
shlb
and
sub
adcb
mov
or
orb
add
push
cmc
fadds
pushf
inc
test
movsl
adc
addl
movsb
mov
mov
test
ret
int
cmp
or
push
cli
insl
pusha
addb
cmp
pushf
jge
mov
pop
xor
jo
sbb
push
add
sti
dec
enter
xorl
mov
adc
inc
dec
nop
push
rorb
push
js
xor
fadds
imul
loope
rorb
or
test
test
dec
loope
sub
xchg
loope
cmpb
xchg
inc
pop
mov
inc
imul
dec
shll
loope
addr16
adc
ret
inc
inc
add
mov
push
dec
sbb
out
aad
or
jl
sbb
loope
and
add
iret
cmpsb
je
mov
sub
dec
popa
sub
and
popa
hlt
add
dec
push
js
loope
ret
pushf
mov
fsubrs
inc
loope
icebp
inc
dec
inc
popa
and
push
sbb
push
and
mov
dec
pop
pop
adc
mov
adc
and
sub
xor
loope
movsb
push
mov
and
xor
cmp
dec
or
les
xchg
adc
pop
loope
dec
loope
movsl
mov
roll
push
or
sbb
loope
mov
loopne
dec
loope
or
sti
subl
mov
mov
add
addr16
jae
test
loope
inc
jnp
xchg
loope
add
movl
xchg
adc
push
lock
xchg
ret
loope
lods
push
mov
dec
popa
jo
dec
loope
xchg
adc
es
and
daa
roll
loope
ficoml
push
sbb
out
loope
adc
xchg
xlat
andb
cmp
cwtl
bound
loope
xor
sbb
aaa
sahf
and
mov
nop
xchg
in
adc
stc
ljmp
mov
inc
xchg
ret
and
fwait
in
mov
xchg
adc
inc
pop
inc
adc
pop
xor
lea
xor
loope
inc
dec
loope
or
lods
loope
and
aaa
add
and
pushf
mov
sub
loope
inc
xor
mov
adcb
sub
loope
xchg
ret
loope
movsb
pusha
xchg
mov
loope
and
dec
pop
add
rcll
sarl
or
and
adc
pop
adc
push
push
add
cmp
dec
mov
gs
adc
cmpsb
and
fnsave
sub
js
sub
push
xchg
mov
dec
xchg
mov
stos
xchg
movsb
mov
and
add
lods
cmp
pop
push
dec
push
mov
dec
shl
pop
test
mov
fsub
sub
ret
nop
in
outsb
mov
and
mov
mov
ficompl
fcoml
lcall
cmpsl
cwtl
scas
push
mov
movsb
rorb
and
mov
push
xchg
adc
ja
adc
les
rolb
in
adc
xchg
adc
rcrl
xchg
and
and
add
push
and
lea
adc
cmp
jg
and
faddl
ja
xor
sub
dec
lar
repz
test
and
push
cmp
loope
adc
inc
xchg
popa
cmp
or
dec
and
mov
sub
fcompl
dec
lock
bound
addb
lahf
xchg
in
cmp
adc
loope
xchg
iret
add
mov
cmp
mov
inc
xchg
ret
popa
and
faddl
iret
push
fs
in
and
lahf
cs
ret
mov
les
pop
mov
les
or
or
cs
sbbb
out
dec
pop
mov
inc
call
ljmp
loope
push
loope
pop
mov
sub
pop
mov
cmp
mov
jb
inc
push
xor
leave
fiadds
imul
roll
mov
push
aas
inc
outsl
pop
fldcw
push
sub
fidivrs
cwtl
test
sahf
stos
and
and
dec
or
add
dec
or
pop
fistps
lods
mov
mov
fiaddl
mov
and
mov
jbe
xlat
aad
fsubs
cmp
jbe
mov
push
mov
mov
xchg
sbb
jbe
mov
mov
dec
or
mov
mov
mov
les
mov
mov
test
cmp
mov
fisttpl
roll
mov
xchg
adc
insb
roll
pop
and
mov
add
clc
fisubrl
inc
loope
loop
mov
pop
dec
mov
pop
and
mov
adc
mov
push
jo
mov
sbbb
ret
push
xchg
out
or
faddl
cs
mov
ljmp
and
dec
or
jmp
fwait
lahf
enter
push
mov
mov
jbe
and
cmp
pcmpeqb
pop
mov
mov
sub
xchg
andb
insb
jl
shll
popf
adcb
dec
mov
cmpb
cmp
and
and
inc
push
mov
sub
lods
or
mov
pop
dec
mov
push
xchg
mov
sbb
lods
push
call
test
mov
push
and
cld
dec
inc
mov
addl
and
jmp
mov
and
ja
and
mov
xor
fwait
dec
push
xchg
ret
jmp
dec
loope
mov
push
pop
mov
ljmp
cs
mov
sub
mov
cs
adc
jnp
or
mov
rcrl
pop
pop
pop
mov
js
aas
push
push
xor
mov
adc
xlat
mov
roll
jnp
dec
pop
and
and
pop
and
shr
inc
mov
xchg
das
xchg
adc
cmpsl
mov
mov
jmp
repz
fs
aam
loopne
call
pusha
cmp
adc
cmp
mov
jno
mov
dec
mov
xchg
addb
xchg
sbbb
movsb
pusha
pop
jmp
dec
loope
andb
pop
mov
sbb
xchg
mov
or
xchg
jle
sarl
pop
shlb
sub
inc
or
and
pushf
push
mov
out
mov
int3
cmp
push
mov
and
mov
mov
insb
pop
cs
movsb
mov
adc
mov
xor
rolb
pop
test
push
mov
mov
pop
and
adc
pop
adc
rcl
call
mov
dec
loope
cmp
jle
pushf
pop
push
and
xor
movsb
pusha
ds
adc
movsb
xor
xchg
sub
mov
pop
sti
adc
sub
test
insb
cmp
xchg
sub
adc
adc
and
popa
xor
mov
and
sbb
cmp
mov
loope
mov
mov
mov
mov
or
pusha
add
mov
popa
xor
loopne
add
dec
loope
mov
inc
sub
add
mov
push
fs
add
xchg
shlb
inc
or
inc
push
and
roll
sbb
out
je
clc
popa
or
orb
sbb
stos
sub
dec
inc
addl
aam
loope
mov
inc
test
sti
add
xor
adc
outsb
adc
pusha
add
inc
add
inc
lea
test
aam
push
mov
dec
inc
or
xchg
inc
or
inc
nop
inc
mov
adcb
int
imul
and
jmp
sub
push
pop
or
inc
nop
ret
inc
and
xchg
xchg
inc
sub
jns
jo
mov
adc
imul
inc
mov
push
inc
xor
xor
cwtl
dec
leave
add
daa
rcl
push
inc
pop
mov
or
test
sbb
xchg
mov
inc
add
xchg
lret
lret
add
insb
adc
in
mov
push
addb
or
adc
inc
dec
adc
mov
or
xor
addb
cmp
inc
inc
testb
or
into
pop
out
push
mov
add
dec
fmulp
bound
cmpsb
sbb
sbb
jmp
jb
add
pop
out
push
inc
push
adc
mov
rorl
inc
mov
push
aaa
in
adc
sti
in
outsl
pop
adc
inc
or
adc
xor
and
push
inc
or
or
jb
dec
mov
inc
into
inc
test
inc
or
add
adcb
push
nop
ret
inc
dec
push
js
inc
inc
inc
mov
pop
mov
movsb
pusha
inc
inc
cmc
stos
adc
mov
push
and
adc
pop
lea
adc
xor
insl
xor
inc
mov
inc
jecxz
and
add
orb
inc
nop
ret
sub
fldt
hlt
int
lea
inc
or
rcll
adc
fsubl
pop
xor
popf
adc
add
push
pusha
pop
xor
inc
fwait
adc
mov
xchg
and
aas
mov
dec
sbbl
mov
mov
cmp
adc
sub
or
repz
mov
sbb
jns
out
jns
mov
dec
repz
ds
shll
sti
idivl
cmpsl
outsl
scas
iret
push
cld
inc
inc
or
jns
lea
call
push
aam
inc
std
out
sahf
push
mov
xchg
movsl
dec
repz
mov
sti
or
sbb
cmp
test
iret
repz
std
adc
test
aam
js
or
inc
adc
mov
or
adc
loope
out
adc
xchg
add
movsb
fdivrl
adc
and
fldt
inc
mov
push
mov
sub
dec
nop
and
inc
inc
sub
inc
push
pop
and
sub
adcb
jo
inc
adc
or
test
push
pushf
inc
or
inc
icebp
sbb
push
sub
mov
movsb
inc
and
dec
fstpt
movsb
inc
idivl
inc
nop
sbb
clc
sbb
xor
jae
push
aaa
add
xor
inc
push
jb
cmc
lods
shll
repz
xchg
pop
jmp
hlt
or
les
push
clc
aaa
inc
xchg
fucom
into
into
arpl
push
arpl
inc
or
lock
push
inc
fwait
mov
push
inc
inc
and
adc
inc
jecxz
dec
aam
pushf
inc
and
pusha
add
adc
add
push
cmp
sub
jns
or
inc
nop
inc
aaa
and
inc
or
enter
popa
dec
push
pop
loopne
and
inc
nop
adcb
push
cld
cmpsb
lods
sbb
insl
repnz
imul
add
sub
dec
inc
nop
ret
mov
inc
nop
sbbb
sub
mov
ret
inc
jge
inc
or
add
enter
inc
add
pop
lea
test
add
adc
and
or
mov
inc
nop
add
or
xor
push
adc
adc
cmp
nop
ret
xchg
inc
or
je
cmp
popf
ss
jmp
aas
push
push
add
inc
xchg
psraw
rolb
jb
in
adc
pop
add
in
inc
pop
stos
add
or
prefetchnta
data16
out
and
cmc
dec
cmp
add
or
add
popa
fsubr
in
push
pop
or
stos
dec
add
nop
add
fwait
push
mov
pop
xchg
push
loopne
cmp
and
sbb
adc
dec
shl
add
xchg
lock
and
mov
or
movsl
pop
inc
je
sbb
mov
popl
pop
inc
adc
push
mov
or
sbb
add
inc
add
add
add
movsb
and
cmp
add
mov
lock
inc
add
add
icebp
mov
dec
arpl
push
cld
dec
inc
nop
sbb
sahf
add
orl
mov
add
cmpsb
mov
add
jle
mov
lea
shll
or
imul
dec
add
sbbb
mov
adc
adc
rcrl
test
call
nop
add
sub
or
xor
adc
xor
inc
mov
dec
xor
movl
inc
nop
add
mov
inc
or
and
call
jo
add
shr
mov
add
xchg
int3
xor
adcb
adc
bound
jmp
inc
or
and
jo
jnp
add
mov
add
sbbl
mov
add
xchg
lds
xorl
mov
mov
mov
jecxz
dec
loope
push
ret
rolb
and
mov
and
aad
push
add
xor
and
push
xor
add
adcl
mov
add
push
add
inc
adcb
or
or
xor
pushl
sbb
inc
add
inc
nop
sub
xor
adc
sbb
aaa
repnz
add
push
xchg
inc
add
out
jmp
test
push
xor
movsb
loopne
add
adcb
cwtl
add
movsb
loopne
cltd
aaa
push
jo
add
sbb
out
cmpsl
add
sbb
sub
add
or
bound
xchg
inc
add
inc
fsubrs
mov
pusha
push
sub
pusha
lds
push
js
add
cmp
mov
add
and
lahf
mov
jle
pop
mov
and
xor
das
orl
mov
lret
xchg
inc
enter
add
cs
adc
adc
add
mov
mov
adc
loope
add
loope
add
loope
movsb
mov
ret
jne
sbb
mov
mov
sahf
popf
sub
popa
pop
add
mov
lcall
leave
mov
shll
add
das
xchg
add
int3
lahf
rorb
pop
popa
cmp
sbb
sarb
cmpl
popa
fcomip
adcb
andb
adc
in
lock
cmp
mov
popa
xor
sbb
push
mov
popa
pop
clc
and
adc
dec
popa
mov
addl
int3
popa
and
xchg
inc
outsb
lds
aas
outsb
adc
add
test
pop
movsl
loop
xor
mov
popa
mov
fadds
lods
bnd
add
popa
int
adcb
cmp
ja
popa
push
or
or
popa
xchg
push
mov
pop
sub
les
popa
loop
stos
or
popa
or
movsb
sbb
popa
sbb
dec
les
cmp
movsb
jns
call
or
sub
popa
cs
jmp
pop
cmp
data16
push
das
push
push
xor
adc
call
pop
pop
or
inc
dec
push
lea
test
mov
sub
and
dec
loope
push
sbb
adc
push
and
inc
or
cmp
popa
mov
popa
inc
mov
movsb
popa
mov
std
cmp
int3
stos
pop
xor
pop
adc
ret
mov
push
popa
pushf
sbb
or
sub
sbb
ja
mov
out
in
pop
loopne
aam
push
cmp
nop
ret
movsb
popa
and
mov
ret
popa
dec
and
faddl
data16
pusha
add
sbb
pop
xor
popa
mov
daa
mov
mov
inc
popa
xchg
push
aaa
xor
adc
jle
sbb
inc
or
sub
push
das
inc
nop
ret
sbb
hlt
popa
leave
enter
push
xchg
pop
add
xor
mov
xchg
pop
add
decl
add
mov
adc
pushf
inc
popa
nop
addb
adc
inc
popa
lds
and
dec
sbb
dec
inc
or
mov
and
cmp
arpl
popa
and
adc
jb
or
lock
mov
dec
orl
xchg
and
dec
loope
xchg
xchg
and
fiaddl
adc
fs
ret
je
test
inc
pop
inc
nop
and
push
and
sub
mov
and
dec
movsl
mov
sbb
cli
cmp
xchg
xchg
jno
sbb
nop
xorb
adc
lock
popa
icebp
movsb
lahf
add
add
in
adc
and
pop
movsb
fucomp
loop
lahf
out
sahf
out
div
rcr
sbb
xchg
pop
or
mov
clc
adc
jb
xchg
mov
and
and
inc
nop
ret
add
sub
and
mov
push
enter
xchg
jmp
adcb
sub
jmp
add
and
ss
mov
cmp
push
xor
shll
xchg
mov
out
mov
pushf
pusha
and
dec
adc
sbb
movsb
pusha
xchg
inc
into
sbb
js
jg
sbb
sbb
or
add
bound
fdivrl
shlb
or
daa
lock
push
mov
adcb
and
sbb
add
and
mov
lea
scas
es
add
sub
xchg
push
adc
and
rorl
and
and
jne
sub
nop
ret
adc
dec
shll
gs
jp
lahf
inc
cmp
add
and
aad
pop
and
push
mov
sbb
and
clc
sahf
and
sarl
adc
mov
and
xor
test
push
leave
mov
push
das
add
and
sarl
and
je
mov
movsb
and
xor
adc
and
push
js
or
in
scas
adcb
scas
pushf
xchg
mov
stc
or
mov
rorl
push
jo
and
sbb
dec
pop
push
jo
push
hlt
sub
lock
or
test
dec
add
pop
and
call
and
push
sbb
jae
mov
mov
stos
jno
and
dec
popa
out
and
sbb
repnz
jmp
or
dec
daa
xor
andb
loope
nop
ret
adc
movsb
jo
mov
mov
adcb
je
or
pop
and
adcb
and
push
sbb
lcall
mov
push
and
jp
cwtl
pop
mov
push
and
addr16
subl
and
jo
inc
or
outsb
sub
jg
nop
ret
xlat
mov
inc
and
sub
fwait
dec
and
and
test
int
sbb
sbb
inc
lea
jecxz
adc
fisttpll
and
sub
faddl
xlat
and
scas
pusha
add
cld
adcb
and
cwtl
jo
or
mov
filds
and
push
jo
bound
jecxz
adc
or
cmc
jo
adc
dec
inc
out
dec
push
scas
sbb
and
pusha
dec
and
xor
or
aas
aad
rcrl
and
and
or
sub
xchg
push
mov
inc
and
mov
add
add
cmp
jle
or
or
test
inc
or
pop
and
in
pop
scas
sub
inc
add
and
iret
and
test
pop
mov
and
nop
ret
jbe
sbb
adcb
lds
push
sbb
sbb
aaa
add
and
dec
mov
cmp
dec
and
or
and
and
add
faddl
cli
push
adc
xchg
pop
les
and
xchg
aas
dec
cmpsb
ficoml
xchg
lahf
stc
inc
or
fs
adc
pop
and
add
cmpsl
lods
adc
and
inc
xor
movsb
xor
and
outsb
imul
aaa
and
pop
and
sbb
add
and
cltd
sbb
pusha
or
and
sbb
sub
and
adc
push
xchg
adc
jo
jge
nop
ret
add
push
push
and
jo
rcr
inc
movsb
dec
rorl
and
ss
icebp
lcall
pop
jnp
sub
or
shr
add
jo
push
sbb
cmpsl
pop
test
and
and
adc
sbb
lret
push
inc
push
sbb
and
pop
and
mov
out
push
mov
and
push
call
and
bound
and
inc
nop
ret
outsb
add
fcoms
inc
and
dec
loope
and
movsb
jo
and
adcb
test
inc
or
pusha
mov
in
jo
adc
movsb
andl
and
inc
and
push
dec
out
xor
mov
and
mov
add
mov
mov
in
mov
xchg
inc
addl
add
fdivrs
add
fcoms
sbb
lea
test
xchg
add
sbb
inc
inc
lea
test
jb
inc
or
pop
inc
mov
movsb
pusha
xor
sub
aas
and
add
mov
xor
pop
and
xchg
and
popw
and
dec
and
lea
and
pop
push
ja
sbb
in
les
push
and
inc
or
push
and
fsubrs
push
xchg
pop
pusha
mov
pusha
and
stos
out
stos
adc
adcb
push
and
dec
and
add
cmp
sub
or
xchg
push
mov
jb
and
adc
ror
sbb
mov
mov
aad
mov
add
dec
and
stos
inc
pop
or
int3
inc
fnstsw
add
xor
fiaddl
aam
mov
add
and
add
adc
inc
pusha
leave
ret
add
add
or
popa
and
popa
add
adcb
push
aaa
and
cmp
sbb
or
inc
or
enter
sbbb
in
arpl
sub
add
mov
stc
push
mov
andb
fadds
repz
sub
mov
jmp
push
popa
push
sub
sar
mov
cmp
cmp
add
js
outsl
mov
push
cmp
add
dec
jo
sub
adcb
popa
jnp
test
inc
adc
sub
andb
xor
stc
xor
add
inc
xor
and
movsb
pop
xchg
xchg
xchg
lret
mov
jl
xchg
mov
icebp
into
xchg
xor
nop
mov
pop
cwtl
cltd
mov
mov
jb
mov
nop
mov
add
out
inc
add
mov
loope
jecxz
jo
lret
rolb
and
xor
mov
pop
xchg
into
inc
xor
popa
mov
test
xchg
test
dec
and
test
or
or
mov
dec
popa
stos
test
mov
gs
dec
or
pop
xor
mov
sub
xchg
pop
push
pop
sub
in
push
popa
mov
movsb
rclb
cltd
xchg
mov
in
lret
in
inc
call
mov
xchg
mov
or
xor
adc
lret
push
scas
mov
xor
pop
cmp
jge
xchg
inc
nop
popa
sbb
popa
fwait
adc
pop
sub
sbb
sub
inc
or
and
mov
lahf
inc
mov
and
repz
mov
add
dec
aad
push
popa
stc
sbb
data16
dec
popa
and
push
and
xlat
and
adc
adc
and
popa
leave
mov
adc
popa
aas
inc
ds
add
xor
fildl
mov
mov
aas
pushf
mov
sub
les
les
and
stc
and
les
fs
fadd
fs
add
xchg
test
fmul
pop
ret
setl
dec
and
cmpsl
adc
imul
sub
mov
pop
jl
pop
addb
xchg
xchg
sub
lahf
stc
ret
jnp
push
push
and
insb
jae
aas
pusha
or
leave
mov
jg
push
jbe
or
jnp
daa
add
cmpb
and
mov
xor
aas
dec
loope
sar
add
inc
test
sub
adc
or
pusha
out
push
adc
or
inc
leave
or
addb
orb
inc
inc
shrb
inc
push
adcb
mov
inc
jge
pop
sbb
adc
dec
loope
xor
and
mov
inc
cwtl
mov
dec
adc
imul
insl
lods
inc
adc
or
and
dec
nop
ret
test
sub
cltd
mov
pop
je
mov
rclb
movsb
inc
and
or
inc
cmp
leave
xchg
repnz
mov
jb
cld
mov
add
or
into
xchg
jbe
inc
jb
jp
pop
enter
cmp
add
adc
and
add
xchg
xchg
sub
add
je
test
push
mov
pmulhuw
pushf
pop
or
loopne
and
pop
sahf
sbb
and
cltd
or
xor
pop
mov
and
inc
and
mov
in
lock
movl
daa
jnp
jbe
cld
or
pop
push
add
cmp
push
test
adc
adc
and
xchg
xchg
scas
sub
xor
push
cmp
inc
dec
iret
enter
push
push
pop
mul
push
test
push
insb
cmc
add
outsb
push
mov
inc
je
js
idivl
pop
mov
dec
and
xchg
dec
mov
lret
xchg
cwtl
cmpsb
rorl
pushf
pop
mov
or
mov
test
mov
mov
cmp
or
or
jno
rorb
xor
mov
gs
push
cmp
insb
push
push
rorl
cmp
inc
mov
add
inc
inc
or
popa
je
and
sbb
inc
or
inc
dec
popa
sub
sub
pop
and
ds
dec
xor
adc
nop
ret
dec
inc
adc
adc
mov
jno
scas
and
xchg
outsb
pusha
add
inc
or
inc
sbb
push
fiadds
movsb
pusha
das
xor
sub
or
imul
add
adc
mov
add
mov
out
and
inc
push
xor
call
rorl
inc
test
or
xor
sub
jns
or
push
loopne
add
lock
out
mov
push
jmp
adcb
bound
mov
pusha
das
fyl2xp1
mov
andl
sbbb
sbb
inc
or
inc
and
rolb
xor
sub
movsb
pusha
daa
bound
insl
fs
or
sub
mov
fildl
add
push
xor
inc
nop
ret
xor
mov
es
adc
inc
or
addb
pop
sbbl
inc
nop
ret
sbb
inc
or
popa
pop
lret
cwtl
sbb
mov
scas
inc
nop
inc
and
pop
adc
add
loopne
mov
imul
inc
add
pop
mov
test
sbb
mov
inc
or
and
iret
xchg
pusha
dec
pop
lea
test
popa
add
inc
adc
add
lods
test
inc
mov
inc
mov
and
xchg
fstpl
adc
aaa
addb
or
xor
inc
or
scas
adcb
pusha
cld
inc
ret
lock
xchg
lods
mov
or
popl
test
rolb
mov
dec
lea
inc
testb
add
inc
add
sub
addl
or
inc
popa
pusha
ret
rol
pop
jge
clc
adc
inc
nop
inc
bound
cmp
inc
and
adc
mov
cmc
adcb
adc
inc
ds
and
inc
or
rorl
inc
in
int3
cmp
xlat
push
sub
shlb
push
sub
inc
cmp
pop
and
add
stos
pop
inc
nop
ret
fcomps
daa
das
or
push
pop
mov
test
and
dec
mov
les
or
pop
mov
jbe
pop
inc
inc
jo
cmp
data16
sbb
or
xorb
inc
sub
sbb
jl
mov
sti
push
test
mov
xor
jge
nop
or
jmp
xchg
scas
movsb
or
mov
scas
mov
sbb
cmp
xchg
lret
enter
fcmovu
loopne
aaa
pop
sub
call
movsl
push
mov
hlt
clc
lock
lret
cld
and
jge
cli
dec
add
or
jne
mov
pop
dec
adc
xchg
push
dec
sbb
xchg
and
add
or
xchg
lret
sub
xor
push
stc
inc
pop
cmp
inc
fxch
dec
movsl
dec
dec
push
push
or
data16
mov
popf
xchg
xchg
lret
mov
mov
pop
pop
pusha
test
jmp
je
movsl
jb
js
addb
nop
xchg
cwtl
in
sbb
mov
dec
test
mov
aaa
mov
mov
sub
fcomp
movsb
push
test
in
sub
clc
cld
add
in
cs
adc
pusha
xchg
lret
enter
adc
sub
sub
push
mov
cmp
inc
inc
inc
dec
mov
push
push
inc
nop
ret
inc
adc
mov
ret
inc
cmpsb
out
test
dec
jnp
or
icebp
arpl
and
dec
mov
add
add
cwtl
push
inc
and
test
hlt
inc
adc
jmp
inc
sahf
adcb
inc
inc
jno
test
or
out
inc
or
and
repnz
nop
sbb
pop
jge
lea
test
fisubrs
inc
inc
nop
ret
or
dec
loope
xor
push
pop
cmp
add
scas
pop
or
movsb
mov
lods
out
nop
andb
jno
xchg
movsb
pusha
daa
inc
inc
shr
adcl
inc
mov
test
adc
ret
sub
add
inc
sub
inc
js
add
inc
or
add
xchg
pushf
xchg
cmpsb
rorl
push
adcb
sub
or
push
push
sub
and
mov
xchg
mov
call
inc
or
push
push
xchg
sbb
mov
sbb
out
push
inc
sub
pushf
jecxz
loop
subl
pop
inc
int
adc
rorb
inc
inc
cmc
or
jmp
jb
or
inc
nop
inc
js
and
outsb
inc
outsb
loopne
pop
pop
out
and
push
mov
aas
add
or
inc
and
loope
mov
push
lea
in
rorl
xor
xor
inc
jp
mov
adc
inc
movsb
or
ret
das
jnp
sub
inc
nop
sbbb
inc
xchg
cltd
or
aaa
adcb
mov
icebp
jno
pop
mov
test
or
add
into
inc
adc
movsb
mov
push
popa
stos
adc
mov
lea
add
inc
add
sbb
cltd
out
mov
inc
adc
or
test
cmpsb
sbb
lds
loope
or
sbb
inc
jne
adc
dec
inc
push
sbb
or
shrl
js
mov
movsb
inc
sbb
arpl
jne
fstl
mov
ret
adc
mov
xor
psrad
js
sbb
or
dec
loope
xchg
test
sub
pop
pop
lret
cld
daa
popa
punpcklbw
out
push
aaa
adc
adc
inc
adc
add
ret
or
sub
jp
addb
pop
push
or
outsb
add
filds
js
and
sbb
insb
mov
pop
enter
pop
rorb
or
into
nop
inc
dec
push
dec
xor
pusha
js
ds
mov
clc
ja
push
push
arpl
pushf
loope
test
test
stos
jns
pop
gs
popf
pop
cmp
or
inc
sub
mov
rclb
std
or
cltd
push
cmc
std
inc
push
push
adc
rclb
or
pop
in
push
or
rorb
in
add
and
inc
inc
dec
pop
andl
shll
repnz
cmp
pop
fnstsw
inc
nop
ret
or
or
push
or
inc
enter
or
cld
push
lea
test
push
mov
movb
inc
inc
jmp
js
and
sub
sbb
jbe
add
lret
push
daa
sbb
lahf
sbb
out
add
dec
loope
cmp
inc
pushf
popa
push
and
aas
and
pusha
add
inc
shrb
aas
mov
jne
pop
xor
adc
pushf
addr16
xor
xchg
shll
cmp
adc
fdivrs
js
inc
fdivrp
cmp
lods
dec
bound
pushf
jl
movsb
jo
mov
rcrb
shlb
popa
aad
and
cmp
mov
and
inc
dec
and
jne
or
out
sbb
lods
sbb
out
ljmp
jmp
sub
inc
or
xor
add
sub
enter
nop
sbbb
or
mov
adc
sbb
data16
push
xor
inc
addr16
ret
or
mov
adcb
add
insl
xchg
and
xor
and
mov
and
push
lcall
and
movsb
pusha
scas
popa
add
cmp
cmpb
dec
loope
sub
and
add
popa
jbe
add
and
add
xchg
dec
testw
dec
loope
xchg
cmp
push
mov
ret
test
or
sub
adc
stos
popa
inc
xor
aaa
push
popa
sub
aaa
movsb
or
push
and
adc
popa
in
jne
adc
and
push
mov
push
arpl
popa
std
mov
push
and
push
popa
aam
sub
pop
jo
xor
lcall
pop
push
add
inc
add
test
outsl
sub
sub
add
xchg
cmp
add
pusha
jg
cmp
or
or
inc
add
popa
or
ljmp
and
add
dec
popa
or
push
mov
inc
or
popa
pusha
xor
mov
stos
popa
and
sbb
stos
add
popa
stos
add
lods
inc
popa
or
dec
cli
enter
inc
popa
push
add
fs
outsl
out
nop
xchg
int
int
sub
lods
test
or
adc
sub
add
fldl
jge
ret
adcl
loopne
push
popa
ja
test
sub
mov
push
popa
stos
add
fsubs
adc
rclb
add
nop
ret
inc
add
popa
adc
popaw
or
rcr
mov
lret
clc
push
cmc
jo
push
and
xor
or
icebp
andb
aad
lret
or
enter
and
stos
inc
popa
aad
push
add
pop
sub
push
popa
roll
outsb
imul
movsb
inc
fcom
push
adc
mov
mov
pop
xor
push
adc
add
or
popa
nop
orb
and
and
sub
lock
adc
pop
adc
push
push
adcl
fwait
loope
lret
push
push
add
popa
mov
mov
add
jns
mov
movsb
jo
popa
stos
inc
or
adc
scas
push
fisubl
dec
popa
ret
es
add
ret
lods
sub
inc
ret
mov
or
loopne
pop
popa
iret
leave
mov
or
lret
adc
test
popa
rorb
and
dec
leave
and
push
and
popa
adcl
cmp
xlat
push
inc
add
xor
cmp
dec
rorl
bnd
inc
or
sbb
mov
dec
jno
popa
out
jecxz
push
mov
mov
push
popa
add
movsb
lock
or
dec
push
adcl
rorl
dec
popa
inc
or
add
movsb
loopne
stos
popa
xor
shrl
mov
push
and
adc
or
add
lods
add
popa
in
push
push
adc
cli
insb
mov
loop
cmp
popa
insl
lock
cltd
add
mov
pushf
push
mov
and
aad
sub
push
popa
loop
dec
movsb
mov
mov
jecxz
or
lcall
sbb
dec
add
lret
adc
loopne
sub
push
push
cwtl
popa
adc
aam
popa
and
sub
movsb
pusha
cmpsl
popa
out
push
mov
popa
cwtl
xor
shll
inc
adc
dec
push
adcl
dec
and
test
add
repz
adc
pop
push
popa
dec
out
jns
dec
loope
jnp
inc
testb
daa
inc
adc
push
and
sub
adcl
jo
push
popa
add
test
popa
mov
movsl
mov
push
and
ret
popa
adc
or
add
pusha
call
adc
sbb
cmpsb
test
or
movsb
lock
xor
jmp
and
or
aam
and
pushf
pop
cwtl
insb
cli
push
pop
jo
aaa
add
inc
or
xchg
out
outsl
test
sbb
movl
dec
jb
xchg
pop
dec
hlt
dec
pop
and
jo
xor
enter
test
xchg
mov
enter
daa
adc
fadds
repnz
cltd
or
and
pop
and
or
call
pusha
test
je
dec
pushf
aad
test
and
pusha
aas
add
pushf
or
mov
pop
jo
test
popa
mov
pop
push
adcl
mov
push
mov
push
adc
lods
mov
or
fs
add
cmp
inc
or
or
popa
sbb
imul
cvtpi2ps
dec
inc
nop
lahf
pop
leave
and
pop
or
popa
or
pop
fisttpll
enter
stos
inc
popa
test
leave
dec
scas
adc
mov
pop
jb
outsl
aas
clc
and
pop
add
push
add
push
and
sub
cmp
lahf
shr
lock
enter
pop
sbbb
or
lea
popf
test
inc
or
pushf
fildll
sub
movsb
add
test
mov
add
or
and
xchg
dec
and
push
pop
testb
cmp
cmp
lods
or
dec
mov
xchg
pusha
cmp
dec
adc
push
adc
leave
in
in
adc
or
or
leave
adc
push
cmp
popa
sub
adc
push
add
fcoml
popa
cmp
jge
pop
mov
dec
in
jb
cwtl
sub
test
leave
in
or
xchg
lret
mov
dec
dec
cs
daa
or
pop
pushf
pushf
pop
dec
dec
and
xor
dec
loope
pop
add
div
add
pop
or
imul
out
dec
lds
aaa
push
loope
mov
ret
inc
popa
or
ret
nop
popa
cli
int3
push
test
ljmp
and
push
add
popa
xor
or
dec
add
add
push
stos
inc
or
adcl
jnp
popa
cld
jecxz
stos
xchg
push
popa
ljmp
aad
mov
inc
adc
inc
adc
add
jecxz
adc
push
dec
adc
popa
test
dec
push
cmp
xor
sub
push
and
adc
fisubs
and
imul
add
add
sub
adcl
ret
inc
popa
adcl
mov
sub
inc
pusha
daa
push
insl
push
add
lret
push
mov
jmp
mov
nop
ret
mov
popa
mov
fbstp
ja
in
jmp
pop
fwait
stos
popa
das
mov
adcl
test
or
push
popa
sub
push
popa
pop
fstpt
pop
adc
push
fiadds
cmp
push
and
loope
adcl
rorl
xor
cmp
jo
adc
rorl
inc
jo
mov
inc
or
add
pushf
shlb
push
cmp
movsb
jo
popa
jnp
or
movb
outsb
fisubrs
push
popa
sbb
push
mov
movsb
jo
test
or
in
popa
dec
ret
push
das
fstp
fsubs
sbb
popa
pop
add
popa
pusha
out
adc
pop
movsb
jo
xorb
mov
adc
mov
jge
call
add
mov
test
xchg
frstor
pop
test
adc
aam
push
stos
inc
or
stos
add
or
popa
adcl
xor
popa
in
scas
mov
inc
xchg
push
popa
add
faddl
ja
fidivrs
dec
jmp
or
xor
scas
jo
push
popa
addr16
mov
pushf
outsb
xchg
inc
les
mulb
inc
cwtl
test
sub
push
adcl
ret
test
mov
repnz
jo
add
fsubr
push
popa
adc
mov
pop
cmp
movsb
jo
pop
stos
push
pushf
cltd
push
cmp
push
push
adcl
dec
shrl
jge
aaa
xlat
sbb
push
fimuls
test
or
push
sub
sub
frstor
jae
push
sbb
push
push
adcl
insb
pop
stc
movsb
dec
in
inc
adc
inc
fcoml
popa
hlt
sbb
test
into
mov
push
and
sbb
sbb
andl
or
inc
sub
sbb
adc
sub
inc
rorl
popa
jne
cmp
adc
fwait
popa
jbe
inc
or
shll
or
pop
jmp
mov
dec
int
add
fcoml
dec
sbb
fisubs
loopne
adc
popa
jmp
add
jmp
outsb
mov
rorl
cmp
loop
outsb
add
scas
push
xor
lahf
jnp
cmpsb
or
inc
push
or
xchg
cwtl
pop
or
mov
and
sbb
fistpl
inc
xchg
adc
xor
xchg
push
negb
fimuls
push
popa
out
pandn
hlt
faddl
mov
push
add
in
ss
jae
or
xor
loope
mov
popa
test
or
inc
jne
and
add
sub
lock
movsl
scas
popf
push
ja
adcl
inc
or
add
push
adcl
inc
or
aas
sbb
xchg
add
fsub
ljmp
scas
mov
jno
and
les
and
cli
and
cmp
mov
adc
inc
add
popa
cwtl
pmaxsw
jecxz
pop
nop
jge
xlat
outsb
stos
add
popa
mov
adc
push
stos
inc
or
cmp
and
add
les
aaa
inc
popa
or
inc
or
stos
popa
cmp
sub
or
test
jnp
mov
lcall
dec
xchg
ret
sarl
mov
mov
dec
repz
pop
xchg
mov
push
lea
jae
test
pop
mov
repz
sub
fsubrl
imul
enter
addr16
jns
out
cmpsb
push
cmp
pop
jns
jnp
xchg
sub
inc
push
push
mov
jnp
outsb
xchg
xchg
push
movsb
push
fsubr
cld
pushf
data16
mov
xchg
popf
mov
adcl
jp
popa
jp
stos
add
fdivl
popa
or
cmp
inc
add
lock
jmp
push
and
sub
push
movsb
add
stos
push
adcl
push
inc
mov
ret
push
popa
and
subl
popa
jg
or
xor
dec
loope
dec
repz
test
adc
mov
dec
inc
test
jecxz
xor
hlt
and
xchg
push
into
dec
push
popa
addr16
ficoml
test
mov
arpl
jmp
and
adc
push
adc
inc
test
push
popa
ss
sub
sub
popa
push
enter
add
shlb
inc
or
stos
inc
or
push
popa
or
dec
inc
addl
aaa
rcrb
cmpsl
or
test
hlt
rorl
adc
or
mov
std
add
jns
add
add
in
adc
add
outsb
adcl
push
cs
pop
push
popa
pop
xchg
stos
inc
or
mov
movsb
xor
popa
nop
orb
mov
sub
into
pop
push
and
jl
cmpsb
out
cmpsb
and
popa
test
or
gs
add
inc
outsl
add
jnp
pushf
int3
push
cmp
in
popf
mov
pop
push
adcl
adc
leave
insb
pop
sbb
in
and
popa
dec
inc
andl
sahf
dec
roll
es
pop
adc
mov
andb
fsts
adc
xchg
sbb
inc
or
sbb
pop
fcomps
and
adc
jge
and
xor
orb
loopne
popa
movsb
jo
cmp
movsb
int
push
adc
mov
popa
faddl
push
add
push
push
adcl
dec
shll
adc
adc
sub
inc
pop
ret
mov
inc
or
popa
xor
shll
popa
inc
xlat
pop
cs
adc
stos
inc
or
add
sbb
and
and
sbb
push
push
popa
dec
int3
and
and
rcrl
mov
popa
and
push
adcl
adcl
mov
inc
and
test
popa
int
xchg
push
rcrb
mov
push
test
or
sti
cmpsb
sbb
push
dec
mov
add
mov
mov
les
popa
mov
decl
inc
or
inc
popa
lea
mov
push
push
add
ret
popa
pop
fimull
mov
popa
test
or
lret
dec
ret
dec
cmp
rorl
fadds
ja
sbb
mov
scas
stos
popa
sub
mov
rcrl
leave
push
popa
adcl
test
movsb
jo
or
leave
mov
popa
jae
imul
push
and
xchg
pusha
mov
mov
popa
adc
push
and
ret
clc
sahf
aaa
lock
loopne
scas
sub
data16
or
andb
jl
mov
flds
test
adcl
sub
in
dec
roll
add
inc
push
mov
movsb
popa
xchg
add
nop
ret
sub
push
sbb
dec
push
popa
addr16
dec
and
sub
push
add
add
adc
add
sbb
popa
xor
xchg
add
jns
add
popa
bound
pop
stos
inc
popa
add
fnsave
pushf
cs
mov
inc
adc
push
xor
pusha
int3
push
insb
enter
add
xlat
push
sub
push
sbb
push
fadd
repz
dec
jmp
mov
outsb
cmp
lds
adc
mov
adcl
loope
add
pop
dec
and
mov
cmp
popa
std
leave
dec
dec
jb
sub
xor
stos
inc
or
daa
sbb
xchg
xor
ja
and
push
in
lods
inc
popa
xor
in
sbb
inc
mov
push
lds
popa
mov
popa
in
or
add
push
xlat
push
dec
and
imul
push
adcl
or
push
popa
fucomip
and
inc
or
push
popa
pusha
sbb
jbe
popa
cwtl
xor
hlt
stos
popa
sub
dec
cmp
fisubrs
orb
pusha
inc
popa
pop
aas
or
int3
adc
popa
adcl
sbb
adc
inc
add
adcl
psraw
in
mov
shl
mov
cs
push
mov
movsb
pusha
and
sub
dec
inc
mov
push
adc
jo
andl
or
push
ret
adc
pusha
cmpsl
sub
ret
mov
movsb
popa
lret
or
lock
xchg
adc
adcl
adc
adc
cwtl
sbb
andl
popa
adc
test
mov
jnp
sbb
push
xor
jl
inc
stc
jne
jmp
inc
or
adc
push
adcl
nop
sbbb
cwtl
pusha
loope
sub
push
adc
aaa
rcrb
sbb
adc
popa
fsubl
call
push
add
mov
inc
add
into
test
xchg
add
loope
adc
jne
dec
popa
cwtl
js
push
and
dec
push
and
nop
ret
inc
or
adc
je
loop
popa
pop
nop
movups
push
sbb
popa
push
and
and
sub
dec
loope
mov
popa
fldenv
add
test
or
popa
nop
ret
les
movsb
sub
clc
and
popa
xor
sbb
or
inc
or
add
adcl
bound
push
stos
inc
popa
outsb
dec
sub
add
sub
mov
mov
and
push
inc
daa
test
scas
popa
adc
fcompl
push
and
mov
out
xchg
inc
push
ret
add
es
popf
sub
test
mov
clc
push
or
outsb
inc
push
and
lock
enter
mov
xchg
push
sbb
pop
insl
xchg
sbb
ret
push
adcl
or
dec
rcrl
adc
jmp
push
mov
popa
push
and
cmp
orl
bnd
cmc
mov
or
push
int3
rolb
mull
mov
cmp
mov
mov
inc
push
push
add
movsb
pop
shll
aad
jp
push
and
push
mov
pop
in
mov
icebp
mov
test
nop
ret
push
cmp
mov
sbb
shll
add
adc
or
dec
shll
jns
adc
inc
or
nop
jl
mov
imul
push
popa
add
or
jecxz
popa
cmp
push
xchg
pusha
popa
add
add
push
and
adc
bound
push
fwait
mov
sub
nop
addr16
rclb
lock
jno
push
add
push
and
pop
adc
or
inc
or
and
dec
loope
daa
sbb
fistpl
pop
enter
and
popa
add
mov
and
dec
popa
mov
jbe
dec
popa
lods
push
jp
in
mov
push
call
push
je
xchg
mov
inc
add
in
cmpl
nop
xorb
add
fdivrs
or
sub
mov
test
xchg
subb
rolb
and
add
fcoml
sbb
push
jo
mov
inc
add
mov
adc
repz
test
or
add
fsubrs
pop
popa
aam
arpl
push
adcl
push
test
inc
push
popa
inc
sahf
xor
push
and
test
adc
test
or
push
popa
sub
adc
stos
popa
sbb
test
push
push
popa
pop
or
imul
arpl
ret
aas
mov
lods
inc
or
dec
mov
or
cmc
cmp
lcall
mov
adc
fmuls
inc
jmp
push
push
call
sbb
test
inc
popa
cmp
or
mov
sbbb
cs
nop
ret
test
or
pushf
ret
dec
loope
into
aad
test
or
aad
push
popa
xchg
lret
rorl
xchg
fcomps
xor
jno
add
add
sub
or
lods
popa
sub
popa
add
enter
push
popa
xchg
stos
repz
mov
jo
jnp
add
pusha
pusha
mov
jmp
mov
movsb
popa
scas
cmp
popa
jmp
ret
sbb
adc
adc
push
or
loope
enter
fwait
test
popa
cltd
lahf
sbb
popa
js
dec
popa
or
sub
adc
test
cli
xor
add
inc
or
pop
push
stos
add
mov
push
xchg
js
add
mov
movsb
jo
popa
inc
or
pusha
mov
fnstcw
jae
popa
adc
pusha
test
adc
cmp
xlat
adc
push
popa
pop
adc
cmp
xchg
dec
testl
loope
sbb
fidivl
lods
in
cmpsl
or
push
repnz
xchg
mov
xchg
push
cwtl
mov
popa
stos
add
cmp
popa
push
adcl
mov
scas
sub
nop
xorb
add
test
dec
push
popa
add
sub
fs
add
cmp
inc
lds
bound
loopne
adc
lcall
orb
mov
popa
nop
sbb
lahf
shlb
das
sub
xchg
sbb
dec
add
fmull
scas
js
sub
mov
or
mov
mov
or
sbb
jo
add
or
or
inc
movsb
test
shll
addb
popa
testl
lea
popa
in
cmp
push
popa
dec
nop
test
popa
test
sub
pop
mov
popa
and
sbb
add
mov
adc
popa
imul
jle
push
cmc
and
add
pushf
out
adcl
mov
add
shrb
sub
and
out
orb
lock
and
push
sbb
movsb
pusha
cs
aaa
add
popa
sbb
ja
pop
sbb
push
xor
ret
and
pop
sbb
adc
test
or
or
shr
pop
pop
sub
cmpl
add
nop
cmpl
or
stc
jmp
jle
or
stos
inc
popa
and
mov
cmp
inc
movsl
jle
stos
loop
nop
andb
inc
or
sbb
nop
ret
clc
ds
mov
xor
inc
fwait
out
notl
adc
fimuls
popa
sub
popa
add
sbb
ret
stos
popa
sub
nop
popa
fildl
int
or
mov
push
dec
lock
popa
gs
cltd
addr16
adcb
push
push
adcl
in
add
jl
movsb
jo
mov
xor
and
in
popa
xor
jl
sahf
add
mov
movsb
cmp
jo
sub
and
popa
or
or
or
inc
popa
aad
inc
test
and
dec
push
and
adc
add
push
rclb
popa
push
push
or
adc
and
or
mov
mov
mov
push
scas
repz
mov
lds
or
or
or
out
into
push
sub
or
popa
and
adc
pop
push
popa
cmpsl
jl
dec
push
andl
adc
adc
test
add
mov
jnp
popa
cmc
add
ficoml
repz
je
ret
xor
adc
cmp
and
jmp
xchg
jo
adc
hlt
mov
psraw
jo
or
test
loopne
adc
push
popa
add
pushf
out
or
inc
or
dec
loope
stos
popa
mov
faddl
adc
inc
test
popa
push
mov
inc
sub
mov
popa
test
mov
inc
shll
popa
adc
popa
inc
bound
push
and
movsb
jo
popa
or
sub
ja
adc
mov
movsb
popa
add
push
pop
jnp
xchg
out
adc
push
cmpsl
stc
cmp
xor
mov
repz
push
mov
nop
pusha
ds
test
push
adcl
add
rcll
test
add
and
dec
loope
popa
sub
nop
ret
popa
adcl
push
mov
inc
pop
dec
sub
cmp
out
add
cmpsb
adc
sub
and
add
nop
ret
in
dec
shlb
iret
mov
sbb
push
push
andl
adcl
orb
sub
nop
cmpb
andl
scas
test
popa
sbb
cwtl
mov
leave
jmp
popa
push
cmp
or
sahf
pop
xor
xchg
lahf
ja
mov
outsl
jae
hlt
adc
cmp
repz
inc
imul
popa
movsb
pusha
mov
push
clc
cmp
outsl
dec
ret
or
jbe
popa
mov
icebp
test
adc
push
cmp
jg
or
popa
pop
jo
pop
cmp
mov
nop
popa
pusha
jb
add
dec
pop
push
cmp
dec
adc
or
xor
adc
sbb
popa
loope
push
inc
test
adc
and
in
inc
push
popa
test
pusha
xor
jno
loope
push
repnz
jno
add
cmp
pop
adc
and
push
mov
push
fsubs
pop
popa
xchg
cmp
mov
adc
imul
cmp
cmovae
adcl
inc
popa
jle
push
and
jl
sub
adc
mov
sahf
popa
cli
gs
sbb
push
int
repz
inc
stos
push
push
xor
pop
push
and
lcall
mull
and
outsl
outsl
inc
add
popa
in
or
sub
push
mov
popa
mov
outsb
add
faddl
mov
cmpsb
popa
xchg
adc
inc
or
push
fbld
test
scas
popa
jle
jno
fstl
and
jae
push
add
adc
and
addr16
imul
sub
mov
sub
test
or
popa
jbe
adc
adc
popa
push
outsb
call
dec
loope
popa
push
adcl
pusha
or
loop
adc
mov
add
popa
and
pop
mov
push
popa
pop
adc
and
xlat
sbb
nop
cmpb
mov
movsb
jo
popa
add
test
add
mov
cmpsl
jmp
lock
popa
nop
ret
fsubrs
push
add
sub
subl
add
or
inc
xor
outsb
stos
popa
ds
aaa
stc
or
movsb
and
cmp
push
push
inc
popa
sbb
movsb
jo
or
adc
test
xchg
sbbb
imul
xor
popa
sahf
out
inc
outsb
insl
xchg
or
inc
or
or
dec
xor
xor
sbb
add
adcl
jo
push
popa
push
mov
popa
ret
push
push
pop
push
and
push
mov
js
xchg
inc
or
mov
mov
popa
xchg
adc
adc
pop
hlt
add
fcoml
mov
xchg
fs
popa
inc
adc
sbb
xchg
mov
mov
mov
popa
dec
loope
pop
add
or
adc
xchg
das
jno
add
popa
xchg
imul
imul
jae
pop
insl
push
add
nop
ret
popa
sub
or
xchg
push
adcl
add
popa
test
sarb
push
imul
mov
push
and
loopne
nop
andb
push
and
popa
nop
ret
mov
xchg
popa
test
popf
imul
mov
nop
pop
bound
orb
mov
add
or
scas
or
adc
xor
out
mov
push
andl
addl
popa
sub
adc
xchg
cs
inc
or
push
and
sbb
repnz
jo
adcl
or
cmp
or
js
sub
popa
adc
sub
mov
inc
shlb
xor
cmp
sub
dec
jle
psubw
enter
push
and
das
bound
in
fs
xor
and
adc
adc
popa
inc
or
pop
mov
popa
pop
into
sbb
out
mov
fcmove
mov
add
popa
inc
or
adc
rclb
adc
push
popa
cmp
repz
xchg
aam
aad
xor
int
nop
rcr
ja
mov
int
loop
and
enter
scas
cmp
xchg
sbb
ds
repz
adcl
add
add
mov
dec
popa
imul
add
inc
lcall
popa
mov
push
xor
push
popa
mov
and
inc
add
cwtl
fistpll
or
or
rolb
sub
push
hlt
xchg
adcl
sbb
test
jo
push
and
inc
mov
or
sub
dec
rorl
in
add
lock
aaa
push
popa
jmp
fs
jb
repnz
mov
push
and
xchg
loope
dec
push
popa
stos
inc
or
popa
or
call
popa
sbb
ret
imull
sub
subl
adc
push
stc
sub
cmp
lods
push
in
xchg
jo
js
inc
add
add
fsubrl
push
and
test
or
sbb
and
sub
popa
lods
fistl
pop
pop
imul
xlat
sub
imulb
fstpl
sbb
cs
popa
or
mov
adc
fimuls
sub
loop
ret
andl
and
sub
pusha
enter
jnp
nop
sbb
push
add
or
sub
orb
push
xlat
loope
cltd
xchg
add
test
in
js
add
sub
jl
fwait
mov
push
nop
pop
enter
loopne
cmp
mov
mov
popa
ds
aam
inc
add
pop
inc
test
xchg
clc
jge
shlb
ror
lret
inc
push
sbb
mov
lret
inc
push
or
pushf
popa
pop
ret
xchg
mov
cmp
add
filds
dec
out
in
mov
sub
fisttpl
or
inc
or
sub
aad
and
xor
popa
or
sub
ficomps
scas
test
popa
add
cmpb
sbb
add
nop
popa
pushf
test
or
popa
mov
inc
mov
clc
movsb
sub
dec
popa
inc
les
inc
and
pusha
popa
mov
add
mov
sub
icebp
test
and
mov
mov
fwait
pop
add
sub
push
mov
mov
or
add
adc
or
pop
cli
sbb
push
or
adc
pop
sbb
jne
inc
or
repnz
adc
push
and
mov
push
roll
mov
push
and
sub
popa
imul
and
pop
push
andl
cld
popa
mov
sbb
arpl
js
fisttpll
dec
adcl
mov
push
popa
es
rclb
scas
mov
in
cmp
adc
aam
xor
mov
movsb
loopne
popa
adcl
cmp
test
cmp
push
add
popa
or
call
xor
into
repz
add
cmp
push
adcl
sub
loope
dec
es
movsb
and
inc
mov
pusha
mov
shlb
push
scas
push
adcl
movsb
jo
push
popa
call
or
test
mov
addr16
dec
popa
and
mov
popa
ds
push
and
and
ret
sub
cmpb
lock
sub
outsb
stos
inc
popa
dec
loop
push
push
andl
loopne
je
or
nop
popa
rolb
cmpsl
cltd
incb
nop
ret
popa
cmc
imulb
sub
popa
inc
push
popa
and
cmpsb
test
popa
xor
popa
push
and
add
mov
lcall
sub
pushf
inc
aad
add
xchg
popa
ja
dec
loope
popa
sbbb
push
and
xor
adc
adc
mov
inc
fisubrs
sub
and
push
adcl
add
aas
jmp
or
stos
inc
popa
inc
insb
push
adcl
into
mov
push
or
ljmp
dec
inc
insl
imul
popa
test
popa
sub
popa
inc
or
movsb
pop
sbb
aam
stos
add
popa
cmpsl
jge
mov
iret
js
xchg
inc
popa
arpl
add
lock
andb
mov
add
popa
xor
xlat
mov
scas
jns
movsl
push
xor
dec
sahf
out
cmp
xor
int
jns
jecxz
icebp
pop
repnz
jns
mov
jmp
repz
orb
sahf
out
out
fbstp
hlt
cli
ret
jnp
xchg
cmp
subl
inc
or
adc
adc
adc
pop
push
popa
and
push
andl
ss
push
push
addr16
scas
sahf
cmpsl
stc
cmp
push
negb
sub
sahf
out
jge
shl
sti
iret
repz
xor
and
into
repz
mov
pop
movsl
aam
add
fs
fisttpl
cmovs
stos
inc
popa
push
fmuls
test
pop
fidivrs
push
mov
movsb
jo
jge
push
inc
or
popa
out
jecxz
sub
xchg
cmp
sub
mov
icebp
mov
test
mov
jb
rcll
icebp
and
xlat
inc
rcll
stos
popa
mov
sbb
popa
movsl
push
aad
mov
fstps
popa
aaa
sbb
push
adcl
and
stos
inc
or
stc
cmp
add
and
adc
sub
adc
fcoms
push
add
popa
in
ds
fcomps
pop
call
cmpsl
jb
insl
add
inc
popa
incb
adcb
daa
adc
adc
or
popa
cs
push
cmc
rcl
mov
stos
mov
pushf
push
add
push
mov
nop
xchg
dec
leave
xchg
adc
popa
adc
aad
popa
adc
and
in
dec
sbb
xchg
lea
mov
mov
addb
push
filds
pop
enter
in
cmp
mov
das
pop
jo
add
add
mov
and
push
popa
pop
scas
cmpsl
mov
ljmp
aam
pop
int3
nop
fists
cmc
sbb
repz
and
or
xor
sti
fistpll
dec
adc
push
ret
add
adc
sub
and
repz
adc
xor
inc
pushf
add
dec
movsb
inc
add
or
push
popa
rcl
movsb
add
mov
dec
and
cmpsb
popa
mov
add
push
test
imulb
adc
stos
inc
popa
jge
inc
bound
popa
inc
adc
add
dec
inc
or
inc
popa
call
pop
enter
or
push
add
test
sub
nop
popa
or
jmp
outsl
dec
lods
push
pop
push
call
or
popa
dec
sub
and
or
popa
xor
push
popa
insl
repz
pop
adc
adc
pop
in
filds
call
pop
dec
fidivs
shlb
cltd
stc
inc
or
in
push
and
scas
popa
adc
push
popa
and
push
sbb
popa
nop
mov
popa
mov
and
lea
pusha
addb
imul
add
dec
push
adcl
inc
sub
push
js
lods
sub
inc
or
cmp
mov
dec
roll
mov
jo
add
adc
mov
iret
mov
jle
sub
mov
mov
sub
add
sub
test
mov
sub
add
inc
jb
adc
push
add
sub
add
sbb
mov
test
mov
movsb
mov
and
dec
shl
insb
push
mov
popa
pop
adc
add
movsb
loopne
leave
xchg
sub
mov
inc
adc
ret
add
test
or
dec
sbb
adc
test
les
jo
push
mov
mov
mov
adc
and
jo
aaa
inc
dec
pusha
adc
adc
pop
orl
mov
or
sub
data16
push
mov
adc
ret
add
sub
ret
movsb
mov
cmpsl
inc
shll
cmp
push
cmp
cmpb
das
add
jno
adc
cmp
jl
in
and
jbe
jbe
or
add
orb
mov
sbbb
add
add
mov
push
push
push
add
add
fsubrl
mov
testl
dec
loope
mov
dec
lcall
fnstcw
adc
push
and
out
lea
fisubl
clc
and
adcl
pusha
jmp
push
movsl
stos
inc
mov
sub
or
sbb
jmp
test
mov
mov
and
push
and
add
test
add
sbb
hlt
xchg
movsb
mov
adc
adc
sarl
ficomps
pop
jmp
idiv
inc
and
push
mov
divl
jle
push
mov
mov
js
mov
sub
nop
ret
pop
sbb
lds
xchg
fstl
test
test
xor
mov
pop
xor
xchg
and
mov
and
or
or
push
push
mov
jnp
andl
jno
sub
dec
inc
test
adc
push
cld
mov
dec
rcrl
mov
xor
sub
and
sub
sub
add
add
je
js
push
or
push
push
push
add
fcoms
shlb
xor
mov
xor
add
push
jl
fcompl
test
or
mov
repz
arpl
push
push
mov
jo
adc
les
push
jg
sub
lret
and
fcoml
and
int3
adc
push
and
or
mov
dec
xchg
pusha
sub
mov
xor
mov
xchg
adcb
es
adc
hlt
mov
mov
sahf
mov
adc
push
mov
test
push
mov
rorb
mov
fbld
loope
and
and
mov
scas
adc
sub
add
dec
mov
ret
pop
imul
outsl
sbb
pop
sub
mov
inc
xor
cmp
inc
mov
cmp
sbb
adc
mov
and
adc
testb
mov
cs
mov
add
mov
or
mov
sub
sub
stos
mov
stos
inc
mov
mov
addr16
js
sub
or
cmp
adc
mov
mov
push
andl
push
sbb
sub
fs
push
adcl
out
or
push
stos
ret
push
mov
nop
mov
adc
imulb
nop
orb
test
or
or
out
test
nop
ret
mov
or
mov
sbb
dec
mov
add
adc
adc
push
lods
cmp
insb
adcl
push
dec
popa
jo
mov
ja
cmove
test
test
push
and
or
dec
inc
mov
sub
mov
pop
push
mov
adc
mov
push
shll
icebp
shrb
jo
adc
cmpsb
mov
sbb
dec
pop
push
and
add
or
mov
repnz
mov
mov
movsb
xor
push
ret
mov
sub
mov
or
or
add
mov
push
andl
subl
mov
add
mov
add
sbb
mov
adc
inc
or
push
cmp
test
push
xchg
shrb
ret
inc
add
mov
insl
push
nop
ret
mov
cmpb
and
les
add
cmpsl
cmp
add
push
mov
movups
adc
test
cmpsl
mov
mov
sub
and
sbb
push
mov
mov
out
push
cmp
adc
inc
mov
push
mov
mov
mov
add
mov
test
sbb
or
incl
fs
mov
mov
sub
movsb
nop
xor
daa
jbe
nop
adcb
subl
int
or
inc
mov
jb
cmp
scas
inc
mov
sub
sub
push
add
push
adc
mov
iret
stos
inc
or
push
fmul
mov
loopne
mov
cltd
pushf
dec
add
pusha
mov
add
mov
or
add
scas
mov
xchg
mov
das
dec
ljmp
mov
push
mov
push
and
mov
aaa
push
jo
mov
testb
and
pusha
movb
mov
movsb
mov
add
push
lods
sahf
sub
pop
adcl
xor
dec
push
mov
jo
mov
push
and
adc
and
and
adcl
enter
mov
and
adc
call
mov
adc
push
sar
push
orb
push
mov
add
mov
sub
loopne
or
mov
mov
and
push
mov
xchg
std
out
clc
orb
mov
sub
push
adcl
sbb
inc
add
mov
movsb
mov
roll
fs
add
adc
push
jle
mov
push
call
and
nop
sbbb
into
mov
mov
add
and
nop
ret
inc
or
mov
sbbb
push
mov
mov
movsb
jp
aaa
push
add
ret
loope
lock
mov
adc
je
add
and
sbb
test
sbb
add
test
sub
inc
lock
out
jbe
out
mov
mov
push
andl
jmp
pushf
mov
dec
loopne
faddl
cmpsl
cmp
cmp
or
add
sbb
adc
push
adcl
inc
or
adcl
fimuls
add
sub
ficoml
push
add
mov
fwait
sbb
xchg
sbb
je
add
cmp
mov
push
and
adc
test
add
pop
push
mov
scas
and
adc
xchg
movsb
mov
punpckhwd
scas
sub
inc
orb
pusha
xchg
mov
clc
int3
or
push
sub
insb
sbb
and
call
mov
and
xchg
mov
add
pop
or
pop
fwait
call
mov
cmp
dec
je
add
and
push
adcl
mov
pop
sbb
ljmp
mov
test
adcl
sub
jae
nop
push
or
addr16
add
mov
pop
adc
jo
adcl
sub
push
cmp
loop
call
jb
push
add
push
adcl
sbb
in
and
add
mov
sub
sub
test
adc
in
xchg
xor
mov
pop
cltd
jmp
pusha
test
cmp
movsb
mov
or
mov
mov
movsl
push
dec
rclb
insl
or
mov
stos
inc
or
lock
aam
rcr
push
pop
sub
sub
mov
mov
into
faddp
aas
pop
pop
ret
andl
inc
call
mov
xor
and
scas
test
rcll
push
xchg
fstpt
int3
test
push
and
shrl
add
inc
sub
lods
xor
add
or
mov
adc
jb
push
or
inc
or
push
mov
daa
stos
mov
or
sarl
mov
xor
data16
subl
and
inc
or
sub
in
push
add
sub
push
and
push
mov
push
add
icebp
test
sub
jle
pop
mov
nop
ret
adcl
js
mov
jmp
add
mov
or
les
adc
push
mov
push
pop
push
mov
push
andl
mov
testb
mov
sbb
mov
and
mov
mov
jnp
mov
mov
push
mov
push
add
adc
xchg
mov
inc
scas
inc
lock
hlt
data16
pop
adc
add
dec
cltd
inc
xchg
nop
ret
push
mov
mov
adcl
or
movsb
mov
and
nop
ret
enter
loopne
mov
inc
mov
fsubs
mov
icebp
mov
loopne
in
mov
pop
cmp
loope
or
dec
mov
adc
test
mov
mov
push
mov
add
int
or
xor
add
xor
pop
ret
xchg
andl
mov
push
mov
jp
or
dec
mov
jg
ret
add
test
sub
lret
push
mov
inc
dec
jle
cmpl
mov
push
jo
inc
add
movsl
loopne
lcall
push
mov
sbb
ja
add
lods
test
mov
or
out
inc
or
push
cmpsl
addb
shrl
and
dec
mov
sub
ja
mov
mov
push
push
je
into
outsl
push
mov
sbb
dec
jmp
sub
in
pusha
push
push
adcl
mov
gs
jg
jb
test
or
cmpsb
bound
push
push
and
inc
mov
push
mov
mov
iret
xchg
xchg
push
aas
test
call
mov
jns
jmp
pushf
pop
jg
sbb
adc
inc
lock
addb
jl
das
push
mov
inc
or
rcll
mov
push
in
sbb
test
cmpsl
movsl
xor
je
cltd
add
dec
and
test
js
insl
cmp
dec
and
fmuls
test
jle
add
cmp
jmp
nop
ret
jg
roll
iret
jp
and
sbb
leave
add
xchg
add
lods
fwait
pop
test
cltd
push
push
rcll
dec
and
roll
adc
mov
aam
push
add
incb
dec
rolb
mov
nop
ror
je
mov
popa
call
inc
es
addb
and
movsb
loopne
dec
rcll
lods
or
pop
nop
mul
adc
test
jmp
inc
xor
dec
mov
add
cmp
add
fsubr
std
pop
loop
sbb
pop
vpsubusb
scas
es
ret
mov
dec
loope
shrl
inc
mov
mov
sarl
sarl
dec
jnp
inc
jp
rcrl
jne
push
sbb
jo
and
dec
popa
push
shr
add
or
pop
xchg
and
add
movsb
xchg
add
push
mov
and
push
roll
or
push
inc
inc
dec
and
movsb
jo
shll
mov
imulb
add
sbb
ret
sahf
pop
call
fcoms
es
ret
loope
sbb
jns
adc
shlb
push
mov
movsb
xor
adcl
movsb
nop
jbe
ror
add
stos
or
cltd
orb
loopne
rcll
inc
je
xchg
inc
add
fcoml
nop
cmp
mov
dec
popa
xor
sarl
adc
adc
sarl
insb
popa
jno
add
adc
and
and
dec
shll
adc
xor
push
andb
dec
push
sbb
adc
xchg
sub
jg
pusha
jo
push
shll
push
sar
add
sbb
shll
sbb
ficoml
dec
loope
pop
ljmp
loopne
nop
ret
mov
mov
shll
xor
loopne
test
loopne
or
inc
test
or
cmp
shll
shll
js
ret
push
sbb
lds
inc
test
ret
dec
sarl
es
sarl
nop
shrl
es
or
push
ja
sbb
lds
xchg
add
dec
loope
rorl
roll
push
jge
test
push
cmp
rcll
dec
popa
shl
sub
or
push
sub
test
sub
xorl
xchg
add
cmp
or
push
mov
pop
pop
or
aam
enter
ja
inc
jne
jmp
fnstsw
adcl
dec
and
nop
ret
or
and
imul
cs
inc
rcr
adc
mov
and
rcll
add
dec
loope
sub
adcl
xor
xor
push
call
push
jb
fmull
ss
nop
xlat
sub
xor
sub
rcl
cwtl
cwtl
inc
shl
movsb
mov
add
and
mov
leave
jnp
orl
aam
adc
add
popf
jno
cwtl
inc
rcrl
push
enter
pop
fldt
mov
push
push
pusha
adc
js
or
jo
shll
sub
adc
dec
rcrl
xor
pushf
dec
push
mov
pop
sub
cwtl
inc
or
roll
pop
push
shll
ret
pop
roll
sub
jns
rcrl
push
fsubrp
add
pushf
out
cli
adc
pop
stos
test
add
cltd
and
pop
dec
and
xorb
scas
es
shrl
dec
adc
jg
push
es
rorl
shll
inc
or
nop
ret
xchg
mov
or
fwait
orb
rorl
and
adc
test
add
sub
pop
or
pushf
push
or
adc
rorl
cmp
es
ret
pusha
roll
mov
sub
or
sub
add
nop
shll
or
pop
adc
roll
jnp
or
ret
imul
sarl
sbb
sbb
or
aaa
xor
cmp
es
ret
roll
sbb
sub
dec
loope
pusha
sarl
jmp
adc
je
push
loope
es
roll
rcll
or
addr16
add
int3
mov
inc
add
fcoms
sti
adc
push
call
xor
pusha
add
mov
add
ds
push
mov
add
test
rorl
cmp
test
cwtl
loope
or
adc
sub
and
add
fdivrl
add
mov
inc
or
rcll
loope
cltd
dec
shll
pop
daa
test
sarl
adc
or
dec
ljmp
roll
xor
rcrl
mov
lcall
rcrl
loope
mov
and
ffreep
add
mov
mov
movsb
ror
dec
and
nop
ret
nop
ret
mov
nop
cmpb
sub
and
rorl
stc
xor
inc
jbe
adc
sarl
xchg
xor
mov
sbb
mov
ret
ficoms
adc
roll
movsb
loopne
stc
test
or
int
out
dec
stos
or
xor
lea
cmp
push
push
sbb
andl
add
mov
and
mov
dec
shrl
adc
add
xor
add
or
in
or
push
dec
sbb
cwtl
inc
shll
nop
or
roll
fsubs
ret
roll
shll
out
lcall
inc
or
cld
sub
dec
loope
push
fsubs
add
inc
adc
int3
mov
nop
shrl
ret
xor
sbb
sarl
dec
add
mov
inc
sarl
nop
adcb
add
es
adcb
cmp
shll
add
xchg
andl
lcall
in
inc
repnz
jb
out
jns
sbb
adc
rolb
add
inc
or
or
cwtl
rcll
es
jmp
push
mov
and
push
xlat
add
scas
gs
loope
inc
cmp
adc
nop
cmp
adcb
mov
arpl
fdivl
rcrl
insb
push
rorl
dec
dec
and
inc
xchg
adc
sub
lcall
rorl
das
rolb
mov
pop
test
inc
adc
movsb
add
push
rorl
fisttpll
push
and
inc
or
sarl
or
cwtl
rcll
pushf
es
shll
push
shll
ret
rcll
jo
mov
rcll
orb
rcll
xchg
shll
xchg
dec
imul
mov
insb
xor
mov
sbb
add
out
sbb
lcall
adc
jl
add
inc
or
fistpl
cwtl
shll
cmpb
cmp
jo
add
xor
test
adc
imul
cmp
rcrl
fdiv
and
adc
xor
dec
inc
pusha
dec
shll
cmp
jo
adcl
adc
movsb
jo
sarl
pushf
scas
mov
scas
bound
sar
adc
xor
adc
movsb
mov
ds
js
mov
test
adc
cld
rcrl
rcll
adc
cmp
xor
rcrl
add
cmp
hlt
jmp
ljmp
bound
and
push
cmp
imul
daa
nop
cmpb
icebp
adc
adc
sub
or
mull
rcl
sbb
cmp
sub
mov
test
loop
lea
nop
cmpb
pop
sti
sub
pop
shl
testl
cs
adc
addb
pop
repnz
sbbb
jns
mov
sysret
mov
int3
shrl
mov
in
adc
and
sbb
pop
xor
sub
nop
rorl
or
mov
or
adc
hlt
mov
sub
mov
add
sbb
fidivrs
mov
shrl
dec
lcall
push
xor
adcl
or
sarl
shll
mov
imul
mov
cwtl
inc
or
jne
or
nop
andb
es
ret
push
roll
add
loopne
rcrl
and
push
xor
dec
rcrl
loopne
fwait
pop
dec
push
sub
cmpsb
leave
pop
into
notb
insb
adc
push
xchg
add
add
xor
andb
dec
and
jmp
shlb
mov
jne
or
mov
dec
popa
rcll
push
mov
xchg
jmp
movsb
and
pop
xchg
add
mov
lds
and
push
call
xchg
add
fsts
inc
jmp
or
xor
jb
lcall
adc
sarl
add
js
shll
fsubl
xor
or
inc
or
rcl
js
icebp
lcall
sbb
mov
shll
jmp
adc
lcall
es
shll
insb
lods
and
js
add
imul
inc
icebp
dec
popa
cltd
dec
pop
adc
add
rcrl
and
xor
imul
mov
sub
lcall
nop
subb
movsb
jo
or
jne
out
push
push
push
xchg
in
repz
lock
imul
imul
inc
or
sbb
daa
nop
ret
mov
shrl
cmp
adc
loope
insl
jmp
cmp
roll
dec
sarl
repnz
jo
clc
sbb
cmp
test
mov
sbb
pop
dec
and
push
dec
dec
loope
push
test
dec
sub
adc
sarl
ror
inc
movsl
mov
adc
and
nop
add
inc
or
mov
std
mul
pusha
shrb
test
jg
sub
aam
sub
in
pusha
shll
sub
roll
ror
and
cmp
adc
test
adc
divb
aam
push
rcll
shll
ret
and
out
icebp
add
push
or
mov
inc
or
adc
add
adcl
sub
jnp
dec
and
test
std
xchg
sub
xor
adc
cmp
mov
hlt
mov
ror
mov
dec
and
loope
shl
adc
roll
addr16
in
xor
ret
add
es
shll
push
adc
push
sub
or
daa
int3
mov
syscall
xor
movsb
xor
or
mov
repz
add
roll
shll
fmuls
inc
or
pop
test
es
inc
dec
and
dec
or
adcl
popa
dec
shll
in
enter
dec
and
rcll
popa
xor
inc
jmp
shll
and
inc
rcll
add
cmp
mov
push
rol
add
mov
rclw
popa
lock
adc
add
push
inc
ret
ss
shlb
rol
push
js
sarl
outsl
adc
imul
add
jb
xor
inc
shrl
lds
or
roll
sub
cwtl
adc
pop
dec
and
sub
sub
shlw
cmpb
popa
mov
or
clc
and
cmp
dec
and
cmc
and
shll
fcompl
cmp
les
mov
add
nop
ret
inc
or
mov
add
mov
xchg
jmp
imul
and
shlb
in
hlt
or
lcall
dec
mov
in
sbb
rorb
dec
and
movsb
jo
cmp
sahf
xor
shrl
push
pusha
push
shl
xor
cwtl
mov
dec
sub
movsb
pusha
add
sub
add
or
shrl
dec
loope
lcall
adc
mov
lcall
int3
jle
add
pop
jl
data16
pop
and
add
shll
les
sarl
add
mov
adc
or
add
adc
mov
movsb
loopne
rcrl
pop
ret
rcr
stc
pop
adc
incb
rcrl
rcll
adc
loope
cmp
sarl
adc
ja
and
jb
push
out
js
sarl
dec
inc
or
sub
add
rorl
shlb
sarl
xchg
popa
popa
in
lds
xchg
sub
aam
fcoms
cld
jae
pop
outsl
add
sarl
lock
pop
jle
and
call
adc
dec
shl
adc
mov
inc
add
xchg
dec
pop
sbb
pop
aaa
jmp
push
pop
test
push
mov
xor
out
xor
add
inc
mov
roll
push
jo
shl
mov
pop
outsl
es
cmp
imul
add
xlat
out
add
enter
and
xor
or
nop
ret
outsb
clc
pcmpeqd
shll
xchg
gs
ret
xor
nop
rorl
movsb
pusha
add
mov
enter
pusha
shll
addb
add
sbb
add
or
test
mov
or
and
rcll
adc
adcl
dec
xchg
adc
xor
faddp
adc
push
mov
sub
xor
lds
roll
es
shll
push
adc
mov
inc
sub
inc
shr
add
ja
decl
and
sub
inc
dec
sar
cmp
push
cmp
mov
rcll
xor
loopne
es
push
call
mov
jo
ss
fstpt
adc
fidivl
movsb
pusha
shll
xchg
push
xor
test
rorl
fstpl
jmp
push
adc
cmp
aam
loope
ret
xor
fisttpl
xchg
js
cwtl
inc
rcrl
outsl
test
ret
and
inc
cmp
test
nop
roll
push
push
hlt
dec
push
fstpl
inc
push
or
dec
and
adc
inc
add
rcll
add
fnstcw
fldl2t
or
adcl
ret
out
or
lock
pop
pop
or
cwtl
inc
or
cmp
and
push
dec
sar
loope
adcl
dec
rcll
fimuls
movsb
rcr
lea
ret
xchg
es
outsb
or
nop
rcll
adcl
adc
shrl
lea
jae
xor
rorl
mov
movsb
jo
rcrl
loope
sarl
adcl
sbbb
pop
jno
mov
jnp
sub
and
adc
js
nop
addb
sbb
push
pop
mov
shl
push
adc
pop
shrl
movsb
cmp
push
cmpb
push
push
loope
or
fdiv
jle
mov
shll
nop
ret
and
test
scas
cmpsb
mov
xor
or
sub
dec
and
adc
add
and
push
pop
or
add
sbb
ret
add
adc
roll
data16
roll
add
lock
push
call
es
rcll
loope
pop
ror
xchg
rcrb
shlb
clc
leave
add
pushf
mov
push
call
and
jo
add
shll
dec
mov
push
xor
or
inc
or
mov
call
lcall
cwtl
xor
or
bound
rorl
pusha
add
sarl
shrl
sarl
add
mov
loop
dec
and
inc
or
ja
sbb
shll
rcrl
data16
cmp
es
jns
mov
dec
pusha
add
pushf
stos
rcrl
gs
rcll
inc
cwtl
pop
loop
push
mov
inc
or
rol
inc
or
adc
sbb
dec
rcl
adc
movntps
cmp
mov
movsb
shrl
and
rorl
jo
dec
gs
stos
shll
or
dec
adc
and
cmp
rol
es
adcb
xchg
add
shl
or
or
dec
scas
rcrl
roll
adc
dec
loope
xor
adcl
adc
rcrl
roll
or
lods
push
mov
dec
and
or
push
mov
adc
test
ret
pop
jo
xor
rorl
mov
inc
dec
xor
es
ret
adc
sub
roll
add
pop
dec
mov
cwtl
rcll
in
imul
nop
rcrl
jmp
push
adcl
nop
ret
dec
cli
xchg
and
or
pushf
and
lods
movsb
jo
dec
roll
out
mov
shll
ror
or
mov
push
shll
cwtl
push
lcall
js
jae
movsb
inc
or
sarl
rorl
lds
dec
popa
cld
rorl
loopne
enter
sbb
pop
pop
andl
fadds
xor
adc
dec
and
sbb
add
inc
xchg
sbbb
fsubrs
es
shl
cmp
bound
sub
cmp
dec
loope
rol
nop
ret
shrl
sub
repnz
sarl
dec
inc
sbb
mov
xor
mov
mov
loope
mov
sbb
popa
add
cmp
roll
or
adc
xchg
adc
add
add
sub
mov
inc
or
nop
rorl
loopne
sbb
inc
rcrl
adc
xchg
roll
loopne
xor
sahf
mov
test
push
jp
scas
xchg
push
push
add
or
repz
ret
xchg
add
sbbb
lret
dec
shll
orb
jo
sbb
addr16
lds
shll
es
ret
cwtl
inc
or
cli
ret
adc
lcall
add
and
or
rorl
pusha
daa
jnp
pushf
add
push
mov
inc
or
adc
sarl
or
push
mov
inc
or
pusha
rcll
sub
xorl
sub
dec
and
fbld
rorl
xor
rorb
dec
and
rcrl
cwtl
inc
roll
cmp
sub
pusha
adcl
pop
xor
inc
or
add
js
mov
pop
adc
rcr
cs
add
shll
ret
xchg
and
dec
add
xor
sub
aas
push
dec
and
xchg
aaa
inc
or
lcall
lcall
push
inc
roll
mov
test
or
dec
and
sub
inc
stos
cwtl
inc
shll
ret
rorl
xchg
arpl
sub
inc
test
push
ret
nop
ret
push
sbb
js
jmp
out
or
int3
add
cmp
mov
sbb
mov
movsb
lock
mov
or
iret
clc
in
loopne
sbb
mov
add
push
roll
sub
cmp
popl
cmp
sbb
data16
es
ret
movsb
mov
test
orb
xlat
push
adcl
adcl
inc
leave
mov
rorl
xor
mov
adcl
inc
or
xor
test
sbb
mov
and
or
inc
or
push
cwtl
rcl
add
adc
aaa
int3
or
test
and
jbe
inc
outsl
and
sbb
ss
adc
cmpsb
es
ret
dec
sahf
xchg
mull
das
bound
sub
imull
xchg
movsb
pusha
movsb
shll
movsb
pusha
sbbb
out
mov
mov
inc
jne
nop
adc
aaa
add
xor
push
dec
adc
push
sarb
add
adc
mov
roll
push
adc
iret
leave
pop
push
add
push
rcll
loope
lcall
rorb
dec
shll
push
js
roll
sub
xor
int3
sbb
jo
push
fiaddl
cwtl
outsb
addl
shr
dec
and
rolb
adc
pop
xchg
lcall
add
mov
lcall
adc
lods
adc
pop
cmc
or
and
rol
jg
adc
adc
xchg
movsb
shll
push
adc
dec
lea
bound
sub
fadd
inc
or
ret
or
jo
add
loope
xor
dec
loope
cwtl
rcrl
mov
adc
or
and
or
add
lods
add
add
rorl
jo
xchg
push
leave
add
aaa
mov
sbb
and
push
pop
mov
push
sub
testl
push
adc
repz
ljmp
add
clc
fcmovb
aad
cmp
rorl
popf
or
dec
roll
sarl
dec
rorl
shll
stos
or
fbld
adcl
add
insl
es
adcb
roll
test
dec
and
xor
push
jo
inc
cmp
add
sub
pop
xor
cmp
icebp
movsb
mov
fdivr
or
dec
loope
or
or
add
mov
adc
nop
sbb
add
rorl
adc
clc
inc
or
shrl
rol
sbb
add
mov
cmp
mov
xor
sbb
sbbb
orb
push
stc
test
inc
push
adc
imul
push
std
scas
inc
adcl
sub
sub
xor
xor
and
repz
and
roll
inc
repnz
cmp
cmp
rcrl
cmp
into
inc
rorl
stc
add
stos
add
jmp
add
push
int3
sarl
movsb
nop
cmp
pop
test
pusha
sbb
jge
es
ret
outsl
push
sbb
fnsave
sub
mov
movsb
rcll
and
jg
scas
xchg
mov
jo
pop
add
leave
jg
scas
mov
fsubl
cmpsl
or
bound
rcl
stc
les
dec
shll
pop
mov
dec
shr
movsb
add
fs
xchg
xor
repnz
mov
pop
les
shrl
pop
stos
lods
loopne
movsb
jo
cmp
add
cmp
orb
inc
or
test
push
mov
xchg
inc
xor
pop
push
cmp
or
mov
push
fs
push
repnz
adcl
dec
aad
cmp
sbb
push
adc
mov
enter
push
rcll
rcrl
js
es
adc
inc
or
jo
imul
mov
or
xchg
pop
rorl
fstpl
cmp
fadd
repnz
hlt
lahf
add
pop
cmc
aas
test
bound
sub
and
push
dec
and
push
lods
mov
hlt
sbb
sbb
nop
roll
rcr
inc
jb
push
ljmp
in
add
into
repz
dec
cld
jbe
jo
cwtl
rcll
or
or
bound
sub
shll
jo
sahf
mov
or
nop
addb
mov
sub
movsb
jo
push
jl
push
mov
adc
faddp
lcall
xor
adc
cmp
mov
cltd
imul
adc
or
sub
jno
mov
icebp
movsl
add
nop
popf
push
mov
sub
or
inc
or
mov
ret
cwtl
rcr
faddl
push
shlb
shll
ret
rorl
push
lods
mov
test
movsb
jo
push
dec
test
mov
add
out
test
movsb
jo
repz
mov
and
orb
push
mov
add
sub
and
inc
mov
pop
xor
rcrl
push
js
or
shl
adc
mov
or
das
or
inc
or
stos
pop
rorl
adc
mov
movsl
and
sub
adc
inc
lods
arpl
ror
adc
adc
add
jo
mov
mov
aam
push
sarl
inc
lret
addb
push
mov
js
es
sbbl
adcl
jnp
rcll
dec
rcll
cmp
ja
adcl
inc
or
cwtl
inc
or
sbb
sbb
xchg
adcl
repnz
rorl
pusha
inc
in
fmuls
filds
push
loopne
sub
push
rol
xchg
xor
test
sarl
adc
dec
shll
or
xor
push
lcall
or
xchg
sbb
jg
lcall
mov
adc
test
adc
and
sub
adcl
sub
dec
loope
push
mov
add
sarl
mov
movsb
loopne
rorl
add
sub
push
mov
sub
xor
cmp
jo
adc
andl
add
mov
dec
sti
push
push
add
mov
rorl
xor
adcb
sbb
out
cwtl
lcall
adcb
roll
cs
pop
pop
fadd
outsl
push
mov
inc
test
lds
out
cmp
or
sub
nop
roll
adc
loopne
rol
test
out
sbb
rorl
dec
adc
adc
cwtl
inc
sarl
adcl
cwtl
xor
shll
pusha
vprotw
sti
cmpsb
or
adc
into
dec
rorl
shll
xor
dec
push
adc
cwtl
inc
or
shll
or
push
roll
xchg
dec
sbb
lods
cwtl
shrl
dec
es
dec
and
orb
nop
cmpb
mov
cmp
and
add
add
dec
loope
roll
dec
popa
jno
shll
roll
or
push
add
and
dec
and
inc
adc
mov
sbb
push
sbbb
lret
dec
and
cwtl
xor
bound
rcll
dec
loope
sarl
sub
in
add
push
sub
lcall
sarl
sbb
aad
rcrl
xor
push
nop
ret
push
shll
fwait
mov
in
sub
push
dec
roll
icebp
push
roll
pop
inc
adc
or
add
mov
mov
adc
ss
sub
adc
scas
mov
push
xor
subl
stos
or
incl
adc
int3
es
ret
rcrb
push
and
xlat
add
sbb
adcl
rclb
call
rcll
loop
mov
movsb
rorl
rcll
jecxz
or
adc
xor
dec
shrl
adc
rcll
push
add
and
shrl
movsb
pusha
and
add
sbb
adc
rorl
dec
inc
adc
sbb
imul
xor
mov
repnz
push
adcl
nop
sbbb
aas
push
push
andb
scas
mov
movsb
mov
sbb
pusha
roll
nop
ret
dec
and
test
or
pop
mov
shrl
andb
jns
fwait
and
dec
ret
nop
rcll
dec
or
sbb
subl
adc
scas
add
jns
xor
andl
popa
dec
and
dec
and
loope
cmpsb
pop
adc
sbbb
loope
jne
add
pop
loope
orb
inc
sub
clc
movsb
push
lahf
enter
pusha
loope
and
loope
in
xchg
lock
jmp
dec
loope
lcall
icebp
pop
xor
add
loope
or
dec
sub
sbb
lock
loope
add
pushf
jl
push
nop
ret
loope
add
cmp
rorb
add
pushf
push
outsb
loope
nop
ret
inc
loope
sub
mov
loopne
push
cmp
loope
mov
loope
sub
pop
fsubrl
sbb
loope
inc
or
loope
dec
popa
cmp
loope
inc
or
push
loope
nop
ret
mov
adc
or
mov
movsb
loope
or
loope
push
adc
adc
push
rolb
sbb
mov
loope
test
xorl
jmp
push
or
fcomi
in
xchg
movsl
arpl
loope
in
or
add
add
and
or
in
in
xor
ds
repz
sbb
lret
jno
add
movsb
lock
cwtl
in
push
nop
ret
loope
nop
sbbb
mov
sub
or
loope
add
add
or
loope
adcb
and
add
dec
mov
xor
add
mov
pop
push
orb
loope
jo
xchg
es
jbe
add
je
cmpsb
and
cmpsl
shrb
loope
clc
or
addb
std
arpl
out
sbb
jnp
and
fisubs
daa
and
orb
movsb
mov
enter
test
adc
movsb
jb
arpl
sub
cs
add
sub
or
loope
out
clts
nop
loope
bound
sbb
loope
sbb
aam
push
loope
out
cmp
sub
jnp
out
out
daa
mov
inc
add
push
loope
and
or
dec
inc
fs
or
aad
push
loope
js
add
ja
add
xchg
mov
inc
loope
add
loope
test
in
jns
add
sub
sub
push
loope
push
push
dec
push
or
fistps
sbb
loope
test
movsb
xor
movb
sbb
inc
sub
inc
or
roll
mov
nop
ret
pop
loope
cmpsl
movsl
sub
and
int3
xor
adc
lahf
inc
or
call
scas
sbb
jl
xor
mov
movsb
jo
push
sub
cld
sbb
or
test
xlat
dec
loope
add
sbb
movsl
in
mov
loope
sbb
or
adc
out
or
add
nop
ret
adc
addl
and
test
mov
pushf
and
bound
int
fimull
sub
lahf
test
sub
mov
add
mov
loop
add
ret
add
add
sbb
faddl
dec
fcoml
push
add
sub
aam
adcb
add
adc
dec
aad
movsl
out
and
test
dec
inc
push
adc
or
inc
or
dec
fcmovnb
add
test
sub
adc
data16
add
sub
pop
push
add
sbb
mov
add
push
adcb
sarb
add
aad
add
fstl
sarl
rorb
or
sub
add
sbb
adc
add
rcll
pusha
or
fsin
pop
cmp
add
icebp
push
cmp
fbld
rcrl
add
add
fsubrl
or
imulb
shll
scas
sub
add
xor
jmp
add
sub
add
xchg
hlt
xor
hlt
jo
mov
pop
mov
sub
adc
mov
push
adc
rorl
add
inc
add
ficoms
and
loope
sbb
add
cmp
or
jno
outsb
push
add
inc
add
add
add
imul
ret
inc
add
loope
jo
or
movsb
mov
movsb
add
add
sbb
out
bound
add
inc
or
add
test
nop
ret
add
out
add
movsb
jo
outsl
add
mov
pop
add
faddl
inc
adcb
add
es
or
add
movsb
xor
js
mov
add
inc
add
sbb
out
mov
es
adcb
es
fisubs
or
fisttpll
add
push
mov
adcb
daa
add
rorb
loope
adcb
cmp
pop
xchg
dec
xor
pop
cmp
push
push
addr16
fcmovnu
stc
rcl
xor
addr16
repnz
call
leave
xchg
call
repnz
call
movsb
jo
cmp
add
mov
daa
es
push
add
addr16
or
jmp
and
pop
adc
test
ret
or
mov
add
stc
shl
frstor
call
inc
repnz
call
mov
sbb
aas
nop
bswap
mov
fistpl
call
xor
movsl
mov
dec
loope
add
push
pop
adc
dec
lock
mov
add
add
fnstenv
call
nop
add
push
or
and
enter
sub
popa
clc
test
or
and
or
add
pop
sub
push
addb
push
push
mov
push
movsb
jo
add
leave
push
dec
loope
add
mov
add
test
inc
or
add
adcb
add
add
fcoml
imul
add
push
nop
ret
add
or
nop
push
mov
ja
cmpl
add
push
add
push
sbb
pop
lret
loopne
add
imul
lods
fldt
inc
or
js
and
adc
add
ss
xchg
cs
inc
mov
xor
and
sbb
xor
sub
cmp
ret
stos
add
lock
cmp
add
inc
loope
imul
lods
inc
or
nop
ret
push
mov
inc
push
fs
je
add
das
adcb
callw
sub
fists
adc
aad
es
stos
add
dec
insl
test
sbb
aaa
adc
adc
sub
nop
mov
pop
push
addb
ds
test
nop
add
lock
dec
mov
dec
dec
and
and
test
adc
test
adc
movb
mov
ficoml
shrl
add
xor
addb
inc
jl
mov
inc
in
adcb
sar
incl
and
inc
or
adc
mov
or
add
push
rcrb
add
adc
rorl
jns
psrad
inc
inc
dec
pop
enter
push
add
sbb
add
sub
inc
add
or
stos
add
add
test
mov
adc
adc
cmp
push
addb
iret
std
movsb
jo
sub
xor
cmp
add
pop
scas
andb
adcb
add
sarl
push
mov
inc
movb
add
addb
and
add
adc
ret
sub
fildl
adc
lcall
sbb
add
movb
or
add
push
rolb
add
cmc
into
addb
pusha
add
nop
ret
xor
or
mov
mov
sub
mov
add
adc
mov
movsb
jo
push
add
push
int3
cmp
or
adc
or
nop
cmpb
push
mov
inc
pop
inc
add
daa
or
outsb
sub
add
dec
push
adcb
pop
adc
push
xor
sub
push
lock
add
pop
lret
ret
xor
scas
mov
cmpsb
fisubrs
push
add
and
lret
push
push
adc
cmp
add
push
xchg
mov
add
mov
add
adcb
add
lock
push
sub
push
inc
adc
push
adcb
mov
add
push
xor
fimull
pop
push
add
mov
add
js
add
sub
gs
popa
cmp
cmp
pop
push
dec
adc
aad
loope
mov
jbe
cmpsb
bound
sub
push
pusha
add
pushf
pop
loope
mov
movsb
mov
add
sbb
add
in
sub
nop
or
push
nop
ret
loope
or
mov
inc
cmp
iret
aaa
adcb
movd
les
loope
dec
aaa
call
mov
loope
into
mov
lea
sbb
adc
and
xor
add
push
mov
ja
pop
push
push
enter
cmp
rcl
loope
mov
adcb
adc
stos
add
pop
nop
ret
adc
stos
mov
add
outsb
inc
xor
sbb
mov
addl
lods
popa
enter
push
jo
or
out
mov
jo
xor
mov
movsb
loope
std
push
add
loope
xor
loope
inc
or
std
sub
pop
inc
sbb
dec
jno
fsubs
adc
sbb
dec
xchg
orb
dec
jo
xchg
ret
daa
dec
pop
xchg
push
movsl
pop
pop
clc
add
add
xor
loope
sub
push
dec
dec
or
cwtl
loope
sbb
jg
fcoml
dec
loope
cmp
sbb
adc
fcmovbe
and
nop
loope
adcb
loope
adc
lds
mov
popa
inc
push
roll
loope
addl
inc
or
mov
xor
and
fsubs
sbb
sti
mov
mov
xlat
inc
pop
or
test
push
or
push
aam
mov
mov
popa
je
loope
mov
loope
lock
xadd
adc
sbb
mov
add
adcb
es
nop
loope
imul
les
dec
sbb
add
sub
fsubp
add
stos
es
dec
loope
and
push
nop
ret
loope
sbb
addb
loope
sahf
push
or
add
add
push
loope
mov
dec
ret
inc
or
sub
mov
xor
loope
stos
mov
test
test
or
arpl
sub
sbb
loope
pop
add
xor
roll
xor
jns
mov
subb
nop
pop
jb
ja
cmp
xchg
test
xor
nop
loopne
xor
test
add
mov
leave
sub
sub
aaa
dec
loope
add
xor
loope
cmp
addl
cmp
inc
loope
roll
js
loope
and
push
nop
ret
xor
add
or
add
loope
cli
xchg
push
mov
bnd
test
jae
push
in
ret
dec
mov
pop
sti
cmpsl
push
or
add
test
cmpsb
sbb
dec
or
ret
or
nop
loope
cmpsl
pop
dec
loope
in
out
sub
add
sbb
or
loope
cmp
test
add
or
lds
loope
lods
or
add
push
xchg
push
test
and
jae
xchg
inc
sbb
adc
xor
adc
in
ret
inc
lock
pop
nop
loope
js
or
loope
insl
pusha
adc
leave
out
xor
jg
add
push
outsb
push
sub
push
sub
xor
adc
ds
jmp
dec
inc
or
and
inc
and
rolb
push
push
shl
adcb
pop
mov
adc
xor
adcb
popa
leave
rcrl
mov
jg
jo
or
roll
push
loope
mov
xor
pop
mov
inc
or
mov
adc
test
pop
push
jns
jo
or
mov
and
sbb
xor
popa
pusha
add
loope
cmp
aaa
xchg
clc
call
scas
add
outsb
xor
aaa
roll
loope
mov
leave
lret
gs
not
fdivs
cs
fidivs
adc
loope
repz
add
loope
add
insb
add
call
push
cmp
sub
and
gs
stc
aad
mov
adc
sbb
inc
out
loope
lea
mov
pop
add
or
mov
sbb
cmp
push
inc
or
pop
adcb
loope
sbb
add
push
xor
loope
or
test
add
loope
ret
or
test
ss
mov
lods
push
sub
loope
sub
call
imul
dec
or
loope
dec
sub
cld
mov
shll
add
cmp
push
add
inc
xor
mov
add
loope
nop
and
mov
inc
add
jae
mov
push
nop
add
xor
and
xor
fldl
and
movsb
jo
fdivp
push
nop
sbbb
movsb
loopne
jbe
add
stos
loope
xor
lea
xor
aaa
lret
rorb
jge
loope
adc
loope
das
inc
call
movsb
loope
mov
movsb
loopne
loope
inc
add
sbb
mov
cmp
and
loope
imul
push
add
in
mov
movsb
jo
pusha
inc
or
loope
mov
sbb
fidivl
jo
add
ret
sub
pop
addb
dec
out
push
fsubs
mov
sbb
loope
push
subl
loope
xor
sbb
loope
add
adcb
scas
sub
xor
int3
js
mov
or
pop
roll
push
loope
lock
xchg
loope
add
ret
dec
jge
push
sbb
loope
adc
adcb
sub
mov
push
dec
addr16
pusha
jb
push
nop
andb
mov
dec
call
push
nop
ret
insl
xchg
addb
pusha
push
loope
popf
aam
test
jmp
sbb
pusha
out
sub
pop
sbb
mov
add
cmpsl
xor
add
add
loope
push
push
inc
ja
or
loope
adc
adc
xchg
jl
cs
xor
mov
mov
sbb
popa
pusha
out
push
sub
pop
adc
subl
js
xor
loope
push
push
jns
ja
fwait
dec
xchg
push
aaa
addl
jo
add
xchg
rcl
pop
loope
jecxz
add
aaa
in
push
out
out
add
dec
shl
dec
shrl
loope
add
and
sub
push
mov
pushf
popa
ffreep
loope
xchg
inc
cmp
pusha
add
loope
mov
sbb
loope
and
adcb
pushf
out
or
lcall
loope
push
sub
icebp
mov
loope
add
dec
loope
pop
add
cltd
xor
push
inc
outsl
pop
jmp
cmp
xor
push
xchg
cld
sbb
mov
inc
loope
cmp
hlt
ljmp
adc
iret
mov
jns
outsl
jbe
sbb
jo
fcoml
sbb
shrb
fbstp
xchg
xchg
cmc
call
and
sub
faddl
loope
test
add
loope
and
add
push
mov
or
and
xor
cmp
add
lcall
loope
ljmp
gs
loope
dec
rcrl
shrl
test
add
and
popa
xor
stc
push
add
adc
add
sbb
popa
xor
pop
or
inc
add
lea
mov
add
rcr
ret
and
mov
nop
loope
xchg
push
cmp
mov
xchg
loope
fwait
jne
shll
pushf
pop
loope
insb
inc
sbb
add
stos
push
jne
inc
ds
call
nop
ret
add
pushf
cwtl
mov
nop
ret
loope
push
add
push
sbb
loope
dec
shrl
aaa
push
and
add
mov
popa
mov
lea
loope
mov
loope
push
adc
jge
movsb
jo
shl
cwtl
push
sbb
js
push
roll
loope
fsubp
adc
mov
loope
movsl
cmp
popa
mov
adc
pop
xchg
dec
or
test
dec
cs
nop
ret
aaa
dec
add
es
les
push
pop
xor
add
mov
and
push
cmp
pop
and
test
add
movsb
and
adc
nop
pusha
add
jl
loope
nop
cmpb
adc
or
xor
enter
push
sub
aad
loope
xor
outsb
push
inc
ss
loope
mov
scas
push
nop
loope
xor
loope
addb
loopne
loope
lret
aam
xchg
adc
sbb
or
inc
or
mov
lahf
lds
push
jo
loope
add
fdivl
loope
push
xor
out
popa
xor
loope
jle
xor
sbb
or
mov
test
xchg
push
rorl
push
sbb
cmp
ds
cmpsb
pop
sbb
sbb
scas
out
add
adcb
dec
mov
je
loope
je
sbb
add
iret
lret
aas
lahf
sub
les
inc
nop
sub
add
mov
add
testl
loope
pusha
push
nop
movsb
push
xchg
cmp
adc
lods
xchg
push
nop
loope
add
add
loope
dec
popa
add
loope
cmpsb
fstpl
mov
add
fsub
mov
test
push
mov
mov
rorl
aad
outsb
movsb
jo
add
sbb
out
andb
popa
add
movsl
sbb
aas
push
mov
movsb
jo
loope
aaa
ret
pusha
in
xchg
lods
push
adc
xchg
push
clc
xor
adc
shl
mov
or
loope
and
fisttps
push
loope
pop
or
add
nop
adc
sub
and
add
push
loope
call
lret
adc
add
popa
loope
ret
fcmovnb
and
mov
loope
push
cmp
add
adc
sub
adc
nop
inc
pusha
cli
xchg
dec
sbb
or
test
loope
test
add
dec
inc
je
add
jne
lret
push
mov
add
loope
sbb
loope
mov
loope
push
push
sahf
ja
loope
inc
pop
or
inc
or
adc
mov
mov
pop
repz
or
jle
mov
xor
shl
rcl
sub
dec
loope
push
add
sub
and
xorl
xor
push
mov
dec
popf
daa
sbb
adcb
clc
nop
ret
loope
xor
addl
push
xor
ficoms
mov
add
jae
mov
or
inc
or
adc
mov
loope
inc
push
or
add
loope
mov
sbb
roll
dec
fdivs
mov
mov
cs
insb
fmulp
test
mov
imul
loope
push
add
add
mov
sbb
pusha
loope
xor
push
add
dec
loope
loope
test
test
nop
mov
dec
push
adc
adc
loope
scas
jl
ja
and
and
cmp
imulb
pop
movsb
push
nop
loope
test
inc
or
inc
add
dec
rcl
xor
or
or
aad
loope
add
or
fisubrs
jno
fwait
and
push
add
cmp
or
sub
add
pushf
out
push
lock
or
mov
mov
pusha
pusha
andb
add
xchg
mov
js
adc
or
add
loope
dec
movsb
jo
add
push
push
mov
loope
push
nop
ret
xor
adc
and
and
sbbl
lahf
pop
dec
into
test
sub
mov
nop
outsl
sbb
add
int
sbb
adc
add
stos
push
call
scas
push
loope
jmp
sub
mov
loope
jbe
push
sub
mov
loope
add
mov
rcll
loope
shl
repz
sub
xor
sub
sub
loope
loope
loopne
cmp
fcoml
dec
aad
add
ljmp
adcb
loope
add
or
mov
lods
push
nop
ret
add
xor
aas
lods
aam
xor
push
cmp
mov
dec
aam
loope
shrl
fs
cmpb
call
push
loope
dec
fadds
push
cmp
sbb
add
fsubp
or
sbb
inc
or
add
or
ss
loope
loope
mov
daa
pop
xor
add
add
jnp
nop
sbbb
repz
jecxz
flds
or
loope
mov
push
pop
je
jg
loope
aaa
push
dec
push
cmp
dec
loope
iret
add
and
lret
hlt
sbbl
or
push
rclb
aas
pop
mov
loope
stos
add
cmpb
adc
mov
xor
addl
loope
out
sub
push
cmp
jno
loope
push
nop
loope
cmpsb
outsl
and
or
jl
stc
xor
adc
add
jo
push
and
test
inc
add
mov
add
adcb
loope
cs
push
adc
or
jle
ret
rcrl
loope
cmpsb
rorl
dec
loope
int
sub
add
or
test
sub
sbb
loope
sbb
mov
add
add
roll
add
jmp
std
into
loope
push
mov
mov
fcom
loope
dec
loope
fsub
xchg
or
jnp
shrb
sbb
mov
loope
adc
rol
and
loope
lcall
pop
add
lcall
dec
and
jne
sub
inc
or
aaa
data16
bound
loope
je
in
sbb
incl
add
push
js
loope
imul
into
loope
outsl
or
loope,pn
and
mov
es
dec
sbb
lahf
stos
loope
sub
push
mov
loope
xor
or
loope
nop
ret
loope
lock
inc
mov
loope
add
shl
sub
or
in
sub
imul
pop
or
add
daa
fsubrl
sub
in
je
push
sub
adc
lock
add
add
push
cmp
add
pop
movsb
fwait
nop
ret
loope
push
mov
cmp
fadd
add
sub
push
inc
bound
loope
push
xor
in
add
or
add
fsubs
fdivs
and
lcall
add
andl
sbb
add
loope
add
and
xchg
add
sbb
sbb
and
nop
loope
add
mov
adc
inc
shl
pusha
movsb
pusha
aas
and
pop
adc
inc
addb
xchg
les
cmc
jo
push
pop
add
adc
addb
or
or
cmp
nop
loope
xchg
movsb
xor
stos
mov
loope
mov
loopne
or
push
nop
loope
rolb
push
xor
jp
leave
mov
add
or
loope
popf
xchg
movsb
pusha
mov
jb
add
sbb
or
adc
fsubrl
or
pusha
xor
push
sub
icebp
roll
adc
adcb
pcmpgtd
pop
or
loope
and
add
inc
or
dec
loope
pusha
adc
sub
insb
cmc
inc
add
push
mov
xor
add
cltd
add
dec
loope
loope
fldl
push
jo
loope
mov
loope
sub
outsb
aaa
ret
sbb
push
nop
ret
pop
loope
arpl
sbb
mov
push
nop
ret
icebp
sbb
test
push
nop
ret
loope
adc
cwtl
xchg
push
or
xor
jg
mov
addl
push
mov
cwtl
add
lcall
adcb
sbbb
das
jo
ljmp
push
nop
ret
mov
add
pushf
and
add
inc
or
loope
cltd
ds
mov
mov
loope
cmp
mov
rolb
push
cmp
inc
jne
pop
mov
aad
loope
popa
insl
fwait
sbb
loope
sub
or
cwtl
repz
mov
call
and
loope
add
sbbb
inc
mov
enter
push
cmp
loope
mov
adc
addl
test
and
or
faddp
dec
push
or
das
dec
movsb
jo
xchg
mov
and
and
adc
sub
xor
or
or
mov
adc
inc
loope
or
jns
add
mov
inc
xchg
out
int
push
adc
scas
movsb
sbb
hlt
lret
or
into
shl
movsb
pusha
jo
push
add
and
test
inc
dec
lods
inc
mov
mov
into
mov
daa
call
shlb
fstpt
fsubs
xchg
or
add
and
loope
mov
inc
or
cmp
add
or
jmp
dec
mov
pop
xor
add
bound
sub
loope
cwtl
pop
cmpsl
pop
mov
nop
xorb
test
mov
icebp
push
adc
sbb
xor
or
test
shlb
inc
call
in
popa
dec
call
sub
adcb
and
or
pop
and
adc
mov
adc
or
cmp
loope
mov
das
and
movsb
pusha
or
loope
pop
cmp
adc
push
aad
push
jo
loope
imull
xor
arpl
movsb
pusha
jmp
test
out
add
sbb
loope
add
push
inc
arpl
inc
pushf
mov
mov
nop
orb
mov
jb
push
pushf
push
jnp
pop
jnp
out
pop
in
push
jns
adcb
xchg
push
lret
inc
xor
loopne
dec
inc
jne
dec
cmp
add
xor
jno
add
lock
fldt
and
adc
or
adc
mov
sbb
subb
loope
adcb
sbb
leave
or
loope
bound
je
mov
fimuls
movsb
sbb
aam
sbb
loope
mov
cs
add
loope
movsb
mov
scas
jmp
add
ficompl
loope
inc
add
xor
or
es
mov
jo
ljmp
inc
or
loope
ret
xchg
aad
push
loope
fdivl
inc
loope
orl
jecxz
jnp
add
stos
loope
and
pop
bnd
or
mov
bound
sub
adc
and
sbbb
push
imul
add
or
mov
add
mov
adcb
inc
or
dec
loope
movsb
pusha
das
xchg
adc
or
mov
mov
push
push
or
cmp
mov
add
movsl
movups
jns
movsb
pusha
push
sbb
adc
test
adc
pop
add
mov
loope
push
mov
pop
xlat
jo
xor
movsl
add
dec
shl
rolb
push
mov
inc
or
pushf
inc
loope
sub
or
scas
pusha
loope
or
into
aam
sbb
js
add
fcoml
lahf
adc
test
push
loopne
or
repnz
loope
mov
ret
xchg
xor
or
lret
add
loope
pop
mov
addr16
add
es
or
xor
roll
push
loope
xor
add
xchg
loope
inc
or
pop
jl
push
inc
jo
out
inc
mov
mov
cwtl
les
cltd
data16
sub
and
loope
cwtl
pusha
sbb
cmp
sarl
adc
push
loope
les
xor
andb
push
sub
add
dec
xchg
and
or
sbb
add
cmp
movsl
xlat
add
sbb
xor
loope
sbb
ret
test
xchg
add
lahf
cs
and
jno
ret
push
loope
sbb
popf
push
nop
loope
pop
sbb
add
nop
loope
or
add
loope
sbb
or
loope
movsb
jo
icebp
pop
xchg
js
shlb
addb
lock
stos
rorb
pop
jle
mov
inc
add
nop
ret
adcb
or
pop
xor
sbb
add
pop
roll
loope
lods
cmp
movsb
jo
jnp
xor
and
add
mov
mov
dec
dec
int
inc
or
imul
mov
loope
pop
lahf
xor
movsb
and
in
and
xchg
outsl
addl
adc
adc
sub
adc
add
sub
aas
pop
and
xor
adc
push
and
jae
sbb
mov
test
and
loope
pop
or
and
movsl
push
nop
ret
inc
add
aaa
loope
mov
movsb
jo
loope
adc
adc
adc
aad
pop
daa
sbb
loope
add
movsb
mov
repz
dec
pop
sub
and
dec
loope
loope
xor
push
pop
daa
dec
les
add
pop
dec
insb
mov
adc
shl
ret
inc
les
stos
xor
sub
nop
loope
fs
add
je
adcb
js
sbb
xor
arpl
add
loope
add
pop
mov
imul
loope
or
imul
faddl
stos
jo
nop
ret
mov
and
cmpsl
push
loope
stos
and
or
sub
sbb
inc
popa
push
push
fwait
call
lock
ds
sub
adc
pusha
add
icebp
and
dec
xor
loope
push
nop
loope
jo
adc
dec
loope
outsl
mov
sub
mov
add
cwtl
hlt
test
lea
dec
pop
test
aaa
sbbl
loope
sbb
sbb
sbb
xchg
and
mov
loope
cmpsl
mov
pusha
add
fsubl
jle
jmp
dec
and
xchg
les
push
loope
cmpsb
out
adcb
sub
loope
incl
add
fmuls
lock
loope
stos
add
mov
ret
shl
and
mov
pushf
pop
addl
adc
mov
cmp
andb
repnz
loopne
add
fsubs
scas
dec
mov
inc
loope
xor
dec
xor
push
add
adc
add
add
and
rolb
mov
push
sub
add
loope
add
cmp
loope
and
loope
dec
shll
loope
loopne
add
mov
mov
or
fsubp
mov
mov
add
and
sub
ret
add
ficoms
mov
xlat
cmpsl
push
movsl
test
outsb
cmpsb
test
or
loope
adcb
loope
pop
adc
or
roll
cmp
std
adc
sbb
and
ss
mov
lock
es
mov
movsb
loope
and
xchg
lds
cmp
mov
subl
sub
inc
loope
mov
loope
cmpsl
in
pop
adc
fldenv
cmpsl
or
sahf
mov
push
and
or
addr16
adcb
mov
push
xchg
loope
in
es
and
adc
inc
lds
aam
fadds
or
push
nop
ret
sahf
loope
test
js,pt
loope
cmpsb
sub
jl
mov
movsb
loope
rolb
push
js
loope
adcb
loope
adcb
xchg
and
sub
inc
mov
loope
enter
pop
or
dec
shll
or
dec
adc
loope
sbb
xor
jbe
scas
add
sahf
jnp
and
inc
or
loope
loop
daa
xchg
rclb
call
sub
nop
loope
push
sub
dec
loope
adc
mov
bound
add
je
push
nop
ret
stos
loope
push
nop
cmp
insb
add
jne
loope
mov
and
cld
xchg
lret
daa
movsb
xor
inc
add
inc
add
mov
int3
daa
orl
push
addb
adc
cmp
daa
xchg
adc
daa
mov
adc
add
cwtl
dec
and
mov
mov
inc
or
pushf
or
stos
sub
add
add
add
test
mov
adc
sub
add
inc
insb
loope
adc
addr16
add
int3
xor
push
add
add
add
sbb
loopne
nop
ret
add
cmp
add
or
pushf
jne
add
dec
adc
ret
add
jbe
out
and
add
data16
addb
add
push
xor
dec
cmp
dec
rorl
add
jbe
add
nop
add
lahf
push
subl
int3
out
mov
jae
aaa
push
addb
sub
cmp
dec
inc
add
adc
in
and
jb
addb
dec
loope
add
test
jns
add
sahf
pop
add
and
leave
cmp
lock
adc
dec
in
add
dec
mov
divl
add
test
push
addb
fldt
dec
adc
add
sub
add
rorb
insb
iret
imul
pusha
sbb
or
add
dec
js
fcmovnu
add
nop
xchg
movb
pop
inc
lock
xchg
test
pop
mov
adc
popf
and
and
adc
jmp
add
mov
push
add
or
push
add
fistps
jl
mov
adcb
test
add
cmp
push
sbb
mov
popf
and
andb
add
test
pop
push
add
mov
lret
pop
mov
cwtl
inc
dec
filds
adc
push
push
fs
add
nop
ret
stc
cmp
pop
daa
or
mov
fists
das
inc
add
addb
cmpb
lods
iret
xor
lods
or
inc
xor
cmp
daa
cmp
in
push
addb
xlat
je
adc
add
or
sbb
inc
or
add
add
add
push
adcb
push
adcb
add
rolb
or
add
add
mov
add
pop
cs
or
xor
movsb
add
ja
adcb
sub
add
pop
orb
add
sbb
add
jl
lea
push
add
sub
and
add
xor
lods
scas
sub
push
jl
mov
add
adc
adc
cmovbe
push
addb
cmpsb
loope
mov
ja
adc
rcll
add
cmp
and
lods
add
add
pusha
js
mov
addb
hlt
or
int
dec
in
adc
sbb
fldl
mov
push
or
pushl
mov
cmp
movsb
jo
add
adc
imul
or
push
cmp
sbb
inc
add
dec
call
add
and
and
add
push
push
add
sub
or
adc
stos
add
mov
add
nop
cmpb
roll
push
add
cmp
push
xor
or
test
nop
cmpsb
sub
add
add
inc
adc
mov
lahf
fists
or
adc
dec
test
cs
add
cmpsl
and
inc
add
shlb
sub
add
sub
loope
test
cmp
xor
add
dec
add
testb
sub
pop
or
push
mov
mov
push
add
mov
add
rcll
adc
add
push
adc
test
adc
test
adc
or
add
loop
rorb
sbb
adc
add
test
inc
stc
add
sub
add
sub
test
mov
test
mov
roll
add
push
adc
test
adc
jbe
sub
or
loope
add
stos
add
mov
or
sarl
icebp
mov
push
add
cmpsl
add
push
adcb
adc
test
sbb
inc
aas
xchg
addl
or
inc
or
sub
mul
inc
fiadds
dec
roll
add
adc
sub
dec
add
fs
lea
cmpsb
or
add
mov
adc
push
mov
add
iret
sub
in
pusha
mov
sub
nop
ret
or
shll
jne
xchg
mov
int3
je
push
cmp
nop
and
inc
add
add
test
adc
int
add
sub
inc
and
add
es
loop
insb
loope
add
push
in
nop
ret
or
mov
test
mov
scas
sbb
add
push
adc
adc
and
fiadds
push
push
addb
sub
nop
ret
sub
rcrb
pop
gs
jle
adc
mov
push
push
add
and
decb
and
fwait
icebp
inc
addb
pusha
add
push
xchg
scas
dec
test
push
push
mov
sbb
rcll
xchg
push
fiadds
jo
adcb
push
add
or
push
adcb
imul
cltd
push
add
rclb
push
mov
add
loope
inc
add
add
add
leave
pop
adc
adc
add
pushf
das
in
inc
in
mov
addl
test
and
dec
call
cltd
mov
nop
ret
inc
or
or
popa
subb
int3
in
push
add
roll
or
repz
insl
movsl
push
cmpsl
fisubs
out
pop
xchg
lahf
pop
fisttpll
jo
mov
add
add
loope
test
adc
mov
add
add
jno
cld
out
push
xchg
outsl
adc
out
or
push
jns
inc
push
adcb
test
movsb
jo
add
je
es
loopne
add
scas
lods
mov
addb
int3
push
push
add
mov
mov
mov
xor
inc
add
push
inc
add
cmp
or
push
adc
add
adc
adc
adc
and
mov
or
mov
push
add
movsb
pusha
cmpsb
jno
cli
sub
addl
fdivl
add
out
add
adc
mov
repz
sbb
nop
xorb
or
and
xor
inc
add
in
ds
incl
out
jmp
mov
or
push
test
in
cmp
testb
add
add
pushf
sub
in
andl
jno
xchg
pop
adc
adc
xor
cmpsl
and
add
push
mov
testb
cmc
cmp
cltd
push
inc
pop
fdivl
ucomiss
xor
pop
adc
add
push
mov
xchg
push
add
or
mov
inc
add
add
mov
roll
mov
lock
adc
add
sbb
or
loope
dec
inc
adcb
add
nop
add
nop
sbb
int
add
jl
dec
cmpsl
loope
adc
add
dec
add
or
add
add
mov
lods
add
push
adc
mov
out
jne
and
sub
xchg
add
inc
shll
faddl
add
outsb
test
sub
aaa
sub
push
adcb
sub
out
add
jl
pop
add
pushf
xor
cmp
xor
sub
nop
add
inc
inc
add
lret
add
nop
cmpb
movsb
pusha
jle
mov
push
jo
stos
add
sub
add
mov
add
add
test
nop
ret
arpl
mov
jg
test
aas
inc
push
and
jg
in
dec
xor
leave
or
add
ret
add
add
sbb
push
xchg
push
push
push
adcb
movsb
mov
shl
add
and
aaa
adc
mov
sub
fsubl
test
test
fs
mov
add
cli
add
add
sub
jne
dec
movsb
xor
mov
jbe
add
repnz
inc
add
inc
add
mov
or
inc
icebp
mov
inc
or
inc
add
test
orl
jo
add
ficoms
sbb
or
push
add
sti
sub
add
add
add
add
shlb
add
sub
sti
sbb
or
adcb
stos
arpl
pop
imul
inc
add
or
sub
inc
add
inc
add
adcb
sub
add
or
pop
and
sub
add
push
stos
add
and
nop
ret
rol
pop
pop
gs
jmp
adc
sub
mov
jns
in
out
arpl
mov
je
xor
add
aaa
cmp
sub
add
inc
add
sbb
adcb
pop
hlt
push
cltd
pusha
push
add
add
arpl
xor
mov
adc
lock
add
nop
ret
cmp
dec
roll
or
xchg
xchg
pusha
iret
loop
add
jnp
outsb
jmp
lods
sub
sub
ja
int3
add
xchg
sub
sbb
inc
adc
add
stos
popa
mov
inc
add
or
and
push
add
sub
add
xor
adc
clc
push
pop
dec
mov
loopne
sub
push
add
enter
mov
mov
cmpb
loop
scas
or
pop
add
push
scas
push
adc
and
or
xor
mov
adc
add
push
add
cmp
test
lds
cmp
adc
test
add
mov
adc
push
add
out
faddl
add
and
sub
faddl
adc
fs
add
adc
clc
jmp
addb
pop
loopne
or
shll
pop
dec
and
mov
adcb
fs
dec
or
add
inc
mov
add
or
add
js
or
pop
in
and
sub
ret
cld
sub
add
adc
add
mov
mov
inc
mov
cmp
adc
add
mov
adc
add
ds
adc
test
addb
adc
pop
add
or
dec
pushf
or
add
pusha
sub
push
mov
and
inc
add
adc
add
mov
xor
pop
sub
inc
adc
pop
out
outsb
test
add
ret
addb
inc
jecxz
or
nop
ret
push
add
mov
add
movsb
lock
nop
ret
add
pop
lds
movsl
inc
sub
daa
addb
dec
loope
jne
add
push
pop
dec
out
add
fcoml
push
dec
push
mov
sub
in
add
movsb
jo
mov
lea
rcrl
add
in
nop
ret
add
cmp
subl
cpuid
add
add
add
or
loopne
cmpsb
lods
xor
pusha
mov
loope
or
jo
add
mov
ficompl
rcrl
sub
and
add
push
push
sbb
sub
add
popa
sub
add
sub
nop
ret
sub
andl
movsb
out
adc
add
add
push
je
add
xchg
adc
add
add
nop
sbbb
fistpl
and
hlt
add
nop
add
pop
add
das
inc
cs
test
das
xchg
je
or
add
push
mov
stos
js
add
out
cmc
adcb
xchg
dec
test
sub
add
adcb
mov
xor
add
pop
pushf
mov
add
adc
push
sub
add
imul
xor
adc
add
test
and
and
sbb
dec
adc
repz
xor
add
xor
add
in
dec
and
xchg
addb
hlt
repz
rorb
repz
fmull
addl
sub
push
add
fsubrl
sub
mov
lea
arpl
xor
loope
imul
adcb
stc
push
or
push
add
and
bound
push
push
mov
loope
sbb
scas
xor
push
add
xchg
nop
adcb
add
bound
jo
mov
mov
sbb
add
push
nop
adc
and
add
lds
cmp
mov
shlb
mov
or
sbb
mov
sbb
stos
add
or
jmp
cmp
xor
stos
aam
add
fiadds
adcb
and
sbb
add
ret
add
orl
nop
add
add
adc
push
mov
inc
or
sbb
ficomps
push
add
leave
adc
inc
lcall
push
addb
arpl
and
mov
nop
xchg
test
sub
mov
test
xchg
push
adc
test
xor
push
loope
movsb
and
lcall
add
sti
stos
add
sub
push
cld
xor
dec
loope
out
test
cmp
pop
and
add
fwait
repz
mov
scas
pushf
adc
add
dec
loope
add
sbb
inc
or
add
or
sub
xchg
mov
popa
mov
xor
add
add
add
add
dec
lea
dec
popa
add
mov
push
push
fiadds
cmp
sbb
jle
mov
xor
dec
test
add
push
js
add
push
sbb
add
inc
add
pop
pusha
adc
cmpsb
lock
addb
pop
scas
push
mov
push
or
jecxz
fistpl
or
sub
and
in
call
xchg
add
add
sbb
add
xchg
inc
pusha
sbb
lds
pop
push
ds
push
stos
push
push
mov
inc
pusha
add
movsl
sbb
pop
jge
sub
sub
add
and
mov
shll
mov
sbb
nop
add
or
pop
add
push
cmpsb
add
add
test
cmp
add
mov
and
mov
adc
pop
lahf
xor
pop
incl
sbb
cmp
and
pop
add
dec
faddp
inc
dec
addl
cmp
fcoml
adc
call
add
xchg
stos
cwtl
xor
mov
push
add
mov
dec
scas
and
jae
or
or
outsb
nop
ret
add
add
pusha
das
sub
or
rorb
movsb
add
add
and
test
or
sub
mov
add
mov
sti
sub
add
cmc
add
sub
inc
inc
or
add
add
add
push
add
adc
test
or
mov
add
mov
addb
ret
movsb
add
or
jo
add
mov
movsb
add
adc
mov
add
sbb
or
sbb
or
pop
add
dec
inc
add
fiadds
mov
popf
pop
xchg
roll
mov
add
movsb
xor
mov
add
inc
add
add
push
adcb
inc
push
xor
cs
test
scas
push
push
adcb
movsb
pusha
sbbb
pop
addl
fisubrs
nop
add
clc
push
loope
or
add
loope
xchg
add
and
adc
push
adcb
add
dec
imul
pop
outsl
jmp
push
inc
add
and
test
add
mov
movsb
pusha
les
push
adcb
mov
adc
inc
or
sub
xchg
add
adc
scas
add
adc
push
adcb
push
sbb
inc
add
mov
nop
add
add
and
add
pop
xchg
pop
incb
jb
negb
mov
push
add
test
das
imul
push
fs
enter
push
push
movsl
add
mov
sub
adc
pushf
outsb
mov
bound
stos
add
add
adc
adc
ja
inc
or
pop
mov
ja
sub
insl
jmp
add
test
add
mov
adc
push
push
addb
ficompl
adc
mov
and
call
dec
push
addb
xor
inc
add
adc
aad
int
sbb
sbb
test
xchg
lea
incl
jecxz
sub
pop
add
mov
mov
popa
sbb
stos
leave
inc
cmp
or
xor
stc
xchg
add
nop
ret
test
sbb
mov
nop
pop
enter
adcb
add
add
popa
sub
out
dec
addb
add
add
xchg
jne
push
test
and
push
adc
add
add
add
or
mov
add
add
repz
push
sub
add
jp
or
add
xor
sahf
jl
mov
add
or
sub
push
add
or
xor
push
mov
mov
add
daa
pusha
mov
adc
sub
jns
jno
xchg
mov
add
insb
add
sub
add
ljmp
rolb
test
movsb
inc
pop
add
add
or
inc
pop
sbb
mov
movsb
pusha
add
stos
outsl
cwtl
pop
jno
in
jle
push
cpuid
add
cmp
and
enter
shll
nop
and
icebp
add
rolb
add
add
fmuls
add
xor
push
adcb
movsb
jo
mov
add
add
popa
addb
add
inc
add
dec
add
push
mov
xor
or
cli
or
add
arpl
sub
push
add
stos
add
and
inc
or
adc
cmp
inc
jbe
sub
add
pop
stos
add
fs
add
test
dec
add
movsb
loopne
cmp
inc
test
pop
xor
push
adcb
add
fs
or
adc
movsl
sub
lds
add
ret
xchg
mov
or
shll
add
add
add
inc
or
dec
add
push
add
rolb
sbb
addb
add
adc
pushf
mov
push
add
mov
test
push
push
nop
add
sub
and
add
add
xorb
add
jne
sub
inc
or
sub
div
jp
add
or
pop
inc
or
add
movsb
pusha
xchg
sub
out
pusha
xor
addb
add
adc
testl
xchg
xchg
or
sub
add
push
cmp
push
push
inc
add
inc
push
adcb
dec
loope
pop
add
lds
lcall
push
xchg
jg
cmp
jae
xchg
lret
nop
inc
testb
fstps
cmpb
add
or
nop
ret
add
cmp
adc
add
and
push
add
sbb
adc
add
pop
scas
add
sahf
add
add
mov
push
or
mov
sub
test
add
push
cmp
dec
mov
ja
add
sub
xor
sub
mov
pop
add
inc
xor
and
add
adc
lods
stos
add
mov
xchg
mov
mov
add
add
fiadds
or
mov
push
adcb
add
adc
adcl
add
leave
mov
or
cmp
or
pop
ret
mov
loopne
push
mov
lock
mov
stos
add
add
mov
outsb
and
add
fsubl
and
mov
and
inc
add
sub
nop
sbb
lods
jg
and
movsb
jo
enter
cwtl
addb
bound
sbb
cs
or
mov
sbb
add
or
cmpsl
mov
and
dec
loope
lret
mov
push
add
stos
or
inc
cmp
aas
mov
dec
sub
adc
dec
pop
shrl
add
and
or
and
inc
daa
push
call
or
push
add
lods
push
add
add
fcoml
push
add
or
or
pusha
cmp
dec
shll
fs
add
jl
or
inc
add
jnp
test
sub
xchg
stos
add
pushf
addb
ret
sub
xchg
add
sub
aaa
add
or
repz
push
adcb
add
lods
dec
cmp
lock
fisubl
iret
mov
and
push
mov
inc
add
add
testb
add
addb
call
add
cs
sub
insb
sub
xchg
and
jae
sub
loopne
pop
push
call
fimuls
call
call
mov
dec
mov
add
xor
or
jmp
movsb
add
push
push
movsb
pusha
or
movsl
add
in
or
insl
add
inc
and
nop
ret
push
push
inc
xchg
pop
insl
cmp
nop
ret
sbb
sbb
or
adcb
pop
add
push
clc
dec
roll
cmp
add
sub
add
mov
cmp
add
ret
dec
add
ret
nop
add
or
nop
add
test
lock
lods
inc
mov
jnp
cmpsl
jmp
pusha
addl
jmp
or
and
add
mov
hlt
jecxz
sbb
mov
add
add
call
mov
add
jbe
adc
add
inc
and
pop
pop
addb
mov
pusha
jle
call
loope
add
add
add
adc
cmc
add
nop
inc
xchg
add
ret
or
pop
push
xchg
or
pop
or
adc
inc
cwtl
inc
or
add
nop
loope
es
ret
cli
cs
and
adcl
adc
xchg
and
cwtl
inc
or
dec
push
adc
mov
nop
jp
adc
loope,pn
and
adc
push
mov
movsb
jo
pop
inc
cwtl
and
aad
inc
and
mov
call
xor
nop
stc
out
aad
jo
nop
push
sbb
add
loope
jecxz
adc
shll
sub
rcrb
test
cmp
xor
pop
adc
sahf
lcall
cmp
into
out
mov
sbb
xor
add
dec
sbb
rolb
in
loope
add
and
orb
jo
loope
inc
or
dec
loope
movsb
jo
push
or
addb
xchg
or
inc
loope
mov
sub
inc
out
bound
sub
wrmsr
cmp
sub
cmp
add
fmul
xlat
es
or
rolb
cwtl
loope
popa
inc
imul
cld
mov
loope
es
addb
loope
movsb
pusha
cmpsl
movsb
lret
xchg
test
ljmp
test
adc
test
dec
addl
dec
and
out
in
pusha
aas
adcl
mov
movsb
loope
loop
lock
xchg
ret
xchg
loope
loope
inc
pushf
fistl
dec
push
adcl
loope
xor
jb
xchg
andb
adc
test
cmp
std
sub
dec
and
sub
mov
mov
pusha
cmpsl
jmp
sub
xchg
push
int3
loope
dec
mov
add
sti
dec
es
ret
loope
rolb
dec
and
fcomip
dec
xor
dec
shll
loope
or
inc
mov
enter
xchg
pop
or
inc
ret
xor
adcb
add
sbb
js
and
or
lock
lea
movsb
loope
aad
push
xor
aaa
enter
dec
loope
mov
fcoml
and
dec
movsb
jo
dec
loope
dec
xchg
or
je
xor
push
js
outsb
inc
or
aad
mov
dec
loope
lcall
adc
imul
dec
or
adcl
jno
xchg
and
cmp
loope
jl
loope
and
adc
mov
es
mov
fadd
adc
mov
mov
loope
and
or
mov
mov
dec
and
movsb
jo
loope
or
lods
sub
fadds
pusha
mov
pusha
add
jo
add
call
addb
or
inc
or
mov
pop
sbb
jbe
cmp
clc
fdivrs
inc
or
sbb
push
push
pusha
add
loope
adc
dec
loope
loope
dec
rcrl
loope
test
inc
jge
movsb
jo
dec
loope
xor
jo
or
sbbl
pusha
add
cwtl
pop
loope
and
es
movsl
mov
adc
dec
popa
test
test
add
push
dec
add
imul
xchg
or
push
xor
orb
lock
loope
add
loope
pop
and
nop
cmpb
mul
and
sbb
loope
adc
enter
ret
cltd
inc
or
nop
cmpb
es
ret
sbb
movsb
xor
or
or
aaa
adc
mov
loope
dec
adc
ret
loope
pop
sub
and
loope
inc
cmp
pusha
add
jmp
es
ret
xor
inc
lods
mov
adc
or
nop
ret
loope
pusha
outsb
loop
es
lret
inc
or
sub
test
out
push
or
hlt
inc
cmpsb
cwtl
inc
or
stos
cmpsb
or
add
or
loope
adc
mov
adc
inc
xor
jle
cmpsb
adcb
loope
inc
and
push
out
stos
js
loope
inc
popa
push
enter
adc
and
sub
aad
pop
lds
scas
es
ret
or
add
or
rolb
cwtl
addl
dec
and
in
push
repnz
sub
adc
xor
or
pushf
pop
cmp
es
xor
and
sub
insl
fisubrl
fstpl
mov
add
das
aam
les
lods
imul
sub
add
pop
mov
xchg
imul
jge
js
gs
sahf
xchg
dec
mov
dec
adc
cmp
lock
or
loope
das
push
or
jae
leave
in
push
loopne
aad
adc
loope
push
es
inc
sbb
loope
leave
in
movsl
pop
or
and
in
lcall
adc
loope
dec
sahf
fistl
sub
loope
repnz
adc
jp
push
xor
sahf
shlb
adc
mov
adc
or
and
cmpsb
push
dec
dec
loope
orl
pusha
push
loope
add
mov
add
fadd
and
lcall
lcall
pop
cs
out
mov
push
jl
xlat
add
loope
imul
push
loope
imul
loope
imul
lock
xor
loope
adcl
inc
or
mov
adc
in
and
cwtl
inc
or
and
es
ret
imul
nop
ret
imul
lret
in
movsb
imul
xchg
fidivs
imul
adcl
add
loope
and
adcl
icebp
fstpl
jo
or
nop
ret
loope
or
mov
mov
mov
pop
mov
add
push
js
loope
inc
or
mov
roll
clc
cmp
loope
mov
loope
and
add
fcoml
push
loope
mov
ds
call
es
cmpb
adc
pop
enter
xor
xor
fisttpl
hlt
inc
or
cmp
adc
das
cwtl
loope
xor
lea
and
sbb
add
sbb
dec
loope
push
negl
jnp
adcl
dec
and
adc
xchg
loope
test
mov
loope
aad
push
push
shl
add
and
loop
lea
sub
mov
movsb
xor
inc
or
mulb
loope
inc
jle
ja
adc
fs
mov
cmp
aam
push
loope
dec
mov
dec
adc
roll
outsb
jle
adc
loop
push
loope
dec
rorl
and
sub
jno
cwtl
aam
pusha
add
push
jb
cmp
add
mov
xor
push
in
shrb
add
dec
mov
add
mov
adcl
and
mov
add
loope
bound
mul
dec
add
cmp
mov
lret
js
rcrb
mov
mov
dec
and
adc
push
xchg
loope
cld
dec
aam
mov
add
loope
stos
inc
add
nop
loope
nop
add
push
adcl
loope
sub
push
and
es
ret
adc
jbe
adc
popa
cmp
add
cmc
sub
sbb
ja
or
stc
mov
loope
dec
and
pop
xor
cwtl
inc
or
add
dec
popa
xor
loope
aam
ja
adc
xor
loope
test
and
fadds
nop
add
inc
push
enter
push
mov
cmpsb
inc
repz
jo
sub
lret
rolb
or
lahf
push
shrb
xor
loope
test
lcall
outsl
fmull
fadds
test
inc
dec
loope
push
add
loope
or
pop
push
add
push
ret
and
xor
nop
loope
push
sub
sbb
es
ret
jbe
loope
or
or
mov
add
add
dec
roll
and
mov
dec
and
mov
lcall
mov
push
daa
add
mov
push
sbb
dec
shl
ja
push
push
dec
and
cmc
test
xor
es
ret
xchg
add
nop
ret
xor
pop
sbb
negb
popa
fldl2t
je
pop
pop
dec
loope
cmp
sub
dec
and
lds
dec
into
cltd
inc
or
loope
push
and
pop
sub
add
dec
loope
pop
pop
loop
push
jl
icebp
cmp
inc
or
dec
popa
adc
loope
sub
mov
loope
dec
es
orb
sbb
add
loope
stos
fwait
inc
nop
pop
jb
out
sbb
es
loope
stos
inc
enter
sbb
popa
loope
nop
adc
stos
out
cmp
cmp
sbb
pop
xchg
add
cmpsl
push
sbb
movsb
xor
push
call
outsl
and
xor
sbb
lcall
adc
repnz
or
xor
cmp
sub
aad
and
sbb
or
cmpsb
cmp
xor
popf
add
loopne
push
movsb
jae
lds
cmp
lcall
add
fadds
cmp
popa
loope
loopne,pn
jmp
sub
outsl
push
loope
dec
loope
int3
push
loope
popa
js
fcoms
je
and
xor
pop
js
adc
or
inc
ret
test
les
sub
and
mov
ljmp
or
add
nop
loope
or
add
fsubrs
add
in
and
add
lods
ret
sbb
or
push
ror
pop
mov
lea
sarb
or
outsl
sbb
test
jns,pn
ja
data16
fcomps
or
inc
mov
fldt
aaa
sub
outsl
mov
out
push
leave
push
jecxz
pop
sbb
cmp
adc
push
bound
dec
mov
jl
pop
mov
outsb
repnz
or
and
dec
jo
add
mov
hlt
or
aad
dec
inc
xor
loopne
add
mov
and
in
jo
pop
dec
loope
inc
enter
movsb
loope
cld
or
or
stos
loope
cld
movsl
jne
mov
jne
pop
loopne
lds
push
or
inc
inc
jmp
and
xorb
loope
out
dec
loope
int
or
sbb
adc
sahf
mov
sbb
add
push
jo
cmp
dec
rclb
sub
and
adc
jo
xor
mov
inc
push
pop
iret
imul
repz
stos
or
sbb
nop
ret
cwtl
inc
or
daa
imul
xchg
xchg
nop
loope
adc
out
lcall
xor
repnz
cmpsl
int3
ret
nop
lahf
bound
cmp
pop
ja
out
add
cmp
or
loope
cmp
xchg
aaa
nop
xor
sbb
inc
or
push
mov
mov
cwtl
loope
pop
into
push
in
inc
inc
or
aas
sbb
fs
mov
loope
xor
adc
cmpsl
cmp
loope
shrl
dec
rcrl
ret
ss
into
addl
mov
xor
movsl
sub
dec
and
dec
dec
and
popa
or
roll
add
add
movsl
shll
mov
adc
loope
add
jns
pop
mov
or
push
clc
dec
and
add
xchg
addl
pop
ret
pop
ss
aas
push
loope
dec
sub
cmpsb
movsl
adc
dec
popa
pusha
loope
movsb
xor
push
pop
add
fsubs
fidivrl
imul
pop
adc
pop
cmp
mov
movsb
jo
movsb
lock
cs
outsb
mov
mov
loope
dec
lds
loope
into
movsl
mov
add
and
imul
or
mov
js
add
and
loope
inc
or
fsubs
mov
cwtl
loope
lock
test
movsb
loope
roll
push
cmp
adcl
inc
xor
js,pn
or
mov
sbb
mov
sbb
es
loope
mov
mov
movaps
mov
insb
pop
loope
pusha
das
cwtl
inc
loope
imull
loope
mov
adc
xor
or
push
xor
xchg
add
jno
add
cmp
inc
add
loope
push
js
push
inc
add
loope
sub
cmp
loope
xor
adc
jb
dec
jns
mov
push
lret
pop
jo
xchg
out
dec
dec
rorl
jg
and
push
insb
xor
add
push
leave
repz
push
sbb
orl
cwtl
inc
or
adc
daa
sbb
ret
or
loope
shlb
jno
add
xor
cwtl
or
mov
outsb
pusha
add
cmpsb
and
dec
shll
or
nop
loope
nop
ret
loope
arpl
fdiv
test
es
and
mov
inc
xorl
or
rorb
cwtl
inc
or
ret
rcr
inc
lea
std
xor
divb
or
push
and
loope
mov
test
pop
jb
push
js
pop
push
rclb
call
sbb
inc
loope
ret
loop
or
es
dec
inc
fs
call
add
loope
andb
pop
les
shrl
mov
aad
add
mov
push
adcl
or
imul
add
and
add
loope
adc
imul
adc
xchg
cmp
sub
and
dec
popa
jns
xor
xor
xor
and
loope
adc
add
add
fdivl
dec
and
loope
outsb
xchg
inc
mov
das
dec
and
mov
lahf
adc
repnz
rcll
push
pop
cld
test
aad
rcrl
rorl
rcrl
dec
shrl
or
xchg
test
or
add
cltd
lcall
popf
inc
dec
adc
orl
pop
inc
outsb
mov
lds
rol
add
dec
shll
inc
insb
pusha
fnstsw
adc
and
shll
lods
or
inc
mov
xor
test
test
int
cltd
inc
ds
or
les
sbb
adc
cmp
cmpb
js
lahf
sbb
dec
loope
ror
pop
push
sahf
push
aas
cmpsb
push
mov
std
aas
push
roll
pushf
mov
inc
or
popa
roll
jo
shl
pushf
out
test
push
inc
ret
jmp
add
adc
clc
dec
dec
mov
mov
cld
addb
pop
jle
dec
dec
and
jo
lret
das
sub
push
dec
xor
orb
rorl
aaa
mov
adc
push
call
inc
inc
adc
xor
add
popa
aam
scas
and
ret
push
mov
cltd
rclb
pop
mov
add
pushf
push
shl
adc
dec
and
movsl
aam
fsubr
insl
dec
popf
ja
outsb
or
add
push
cwtl
iret
fisttps
dec
insl
sbb
inc
pop
nop
push
xor
cs
sbb
push
add
push
addl
pop
push
and
push
adc
or
adc
add
inc
push
mov
mov
add
cmp
inc
push
and
jmp
out
imul
add
pusha
xor
insl
and
push
pop
pop
sub
out
daa
xor
or
push
add
or
cmp
jecxz
clc
lcall
setae
test
mov
test
cmpsb
imul
loop
aas
shlb
sub
test
or
adcl
shll
add
add
adc
adcl
adc
push
add
sbb
ret
and
ret
and
xchg
add
inc
add
sbb
js
push
and
lock
sub
call
fadds
into
hlt
pusha
mov
adc
adc
xchg
dec
movsb
jo
adc
fwait
or
inc
inc
adc
or
pop
xchg
sub
jmp
push
loop
sub
lds
test
add
mov
andb
push
add
cmp
fsubrl
dec
lods
xchg
mov
mov
or
mov
dec
loope
inc
add
jo
or
adc
lds
nop
add
xchg
inc
adc
sub
dec
minps
pop
and
jo
inc
adcl
sbb
test
add
adc
push
push
add
inc
add
adcl
adc
or
sub
loope
stos
add
pop
hlt
xchg
adcb
and
mov
add
sub
pusha
or
aam
imul
sub
stos
inc
or
push
add
adcl
jo
add
nop
ret
add
add
sub
nop
add
loope
mov
aam
mov
add
mov
add
pop
xchg
jbe
mov
push
mov
or
xchg
push
nop
add
jne
sbb
sub
add
xor
aad
addb
enter
inc
or
add
add
stc
xchg
or
cmpsl
in
mov
pusha
or
pusha
adc
or
inc
pop
setge
adc
loope
jne
and
cld
or
and
sbb
scas
dec
enter
shll
dec
push
std
push
jg
or
inc
in
xor
jmp
bound
xor
nop
ret
pop
test
test
sub
cltd
jb
popa
out
mov
addb
dec
mov
call
sub
jle
das
add
sbb
ja
add
add
popa
add
sbb
dec
add
inc
or
lret
dec
inc
lock
push
add
xor
or
adc
loope
inc
arpl
or
xchg
sub
sub
push
add
xchg
in
xchg
pusha
inc
or
or
mov
or
in
jae
mov
orb
xor
inc
scas
cwtl
inc
or
test
add
push
or
add
inc
ss
jmp
add
int3
out
orl
sub
call
mov
inc
add
sub
push
loope
mov
es
push
and
and
inc
add
and
sbb
pop
inc
add
mov
push
push
add
sub
fcoml
jns
adc
add
push
jno
push
orb
add
inc
mov
pop
pop
and
fldl
add
mov
inc
add
or
inc
or
sbb
test
sub
bound
push
cwtl
dec
mov
fwait
test
sub
repnz
add
in
add
dec
popa
xor
clc
sbb
cmp
sbb
xchg
add
arpl
ja
and
cmp
push
mov
cmp
cmp
hlt
shll
add
inc
or
xor
dec
inc
mov
inc
into
sub
adc
add
add
cltd
sub
add
add
fisttps
add
arpl
fmull
mov
jo
push
js
wrmsr
call
dec
push
adcl
or
js
adc
push
add
cmp
aas
fsubrs
or
ret
add
sub
sub
mov
nop
rcll
inc
adc
repz
fsubrl
insl
loopne
add
adc
movsb
xor
push
xchg
mov
shll
dec
popa
and
adc
sbb
mov
jb
pop
lds
mov
inc
or
roll
sbb
mov
pusha
shr
fs
or
test
mov
cwtl
inc
or
push
jne
or
subb
lcall
cli
rorl
sbb
loope
cwtl
inc
sarl
adc
cwtl
inc
or
roll
and
dec
and
mov
xchg
sub
dec
rorl
es
add
roll
adc
mov
vpsllw
mov
in
dec
and
sbb
roll
dec
push
xor
lds
rcrl
nop
ret
rcll
shll
fsubs
ljmp
sbb
cwtl
inc
or
inc
adc
add
mov
add
pusha
shrl
fdivrl
shll
add
adc
or
in
popa
xor
add
adc
cmp
pop
dec
and
mov
or
ror
xchg
cmpb
or
and
nop
shrl
add
adc
shll
stos
or
or
cmp
cwtl
inc
or
adcl
xor
shrl
ret
and
dec
mov
and
roll
shrl
add
shr
fwait
es
xorb
bound
and
nop
ret
nop
ret
push
mov
les
rcll
or
lcall
test
or
and
loopne
xor
and
iret
or
xchg
rcrl
mov
nop
add
jne
push
inc
add
shl
test
xor
inc
pusha
test
ret
and
aam
push
mov
es
ret
in
adc
adc
int3
inc
or
or
popa
add
cwtl
rcrl
add
xor
pop
imul
rol
lcall
inc
or
in
cwtl
inc
or
shll
or
mov
movsb
sarl
scas
es
add
or
sub
shll
loop
lahf
dec
pusha
pop
and
and
popa
nop
or
roll
rcrl
fdivp
jp
add
push
cmp
pop
out
sbb
xor
adc
es
ret
roll
inc
sbb
dec
and
lock
push
sub
xor
xor
rolb
push
mov
mov
add
pop
dec
rorb
or
sbb
and
mov
or
adc
adc
and
call
rcll
sbb
sbb
jo
andl
inc
scas
bound
sub
push
loope
sub
cli
cli
cmp
jo
adc
pop
adc
rcrl
out
push
pop
out
push
movsb
push
sub
push
and
pusha
add
pushf
mov
adcl
push
xor
enter
test
roll
mov
fdivr
push
les
xor
es
ret
mov
rolb
jle
insb
inc
or
jb
fiadds
shlb
sub
rolb
inc
push
enter
add
or
push
roll
loope
imul
rcll
rclb
dec
and
mov
push
rcrl
add
add
test
mov
and
add
push
test
aaa
movl
and
js
jo
lahf
inc
enter
add
or
lret
addr16
mov
lcall
test
test
inc
or
mov
sbbb
cwtl
rcrl
or
nop
sarl
mov
jle
pop
adcl
or
aaa
xor
pop
sub
cmp
sub
and
outsb
shrl
or
push
enter
outsl
out
mov
inc
jno
cmp
insb
and
pop
xor
or
nop
test
and
dec
pop
dec
and
lds
cmp
dec
shrl
inc
adc
adc
cmp
adc
fcoms
dec
roll
roll
pop
push
adc
test
faddl
xchg
adcl
inc
or
xor
mov
push
push
roll
inc
xor
adc
addb
add
jo
shrl
fsubl
nop
ret
pop
mov
roll
push
shll
push
rcr
push
roll
add
mov
dec
and
xor
or
mov
out
pusha
jbe
es
push
dec
and
adc
ljmp
inc
dec
jge
or
mov
or
push
call
sub
cmp
and
add
sbb
inc
mov
pop
or
and
mov
and
inc
jb
push
jns
in
add
or
in
xchg
dec
or
les
xor
push
ret
add
es
shrl
rcll
ret
hlt
std
xchg
je
pop
jp
je
in
push
addr16
sub
nop
jns
repz
cli
popf
js
mov
iret
repz
fcoml
iret
repz
adc
xor
roll
shll
mov
add
xor
adc
adc
adc
adcl
or
bound
sub
adc
hlt
int
mov
ja
push
rcrl
jl
dec
push
mov
repnz
and
push
mov
mov
sbb
adc
sbb
push
scas
pop
stc
sbb
and
xchg
and
xchg
sub
orb
jo
nop
addb
testb
adc
or
cmp
mov
shll
cmpb
pop
mov
pop
adc
push
adc
ror
add
mov
dec
and
pop
sub
xor
shl
xor
cmpl
shr
adcl
or
cmp
negb
rcrl
or
and
lcall
pop
shrl
test
leave
jl
sub
shrl
adcl
inc
dec
loopne
and
nop
roll
scas
es
ret
bound
sub
rcll
and
add
cwtl
inc
rorl
mov
push
and
push
add
adc
lcall
adc
nop
shlb
push
xchg
push
orb
inc
mov
rorl
pusha
sub
bound
movsl
insl
aam
push
or
adcl
sub
xor
sub
popa
shrl
ds
and
add
add
add
pop
shrl
fmull
jb
data16
fsubrl
lcall
nop
ret
shll
sub
out
orb
roll
xor
adc
les
nop
adc
push
testb
jne
es
ret
rcrl
das
and
lcall
cmp
aas
inc
dec
and
cs
in
or
add
sarl
dec
and
roll
pop
mov
bound
flds
les
cmpb
adc
inc
shl
inc
or
sbb
pop
xor
xchg
and
or
push
push
adc
shrl
roll
ret
mov
stos
add
nop
rorl
fwait
inc
into
adc
lcall
add
shll
call
adc
test
dec
and
shll
push
jo
push
mov
rcrl
dec
rorl
stos
sbbb
roll
nop
ret
fdivrs
jbe
or
movsl
or
push
adcl
fdivl
push
cmpsl
lock
sbb
cwtl
inc
or
adcl
lcall
or
or
es
add
lods
adc
dec
popa
add
adcl
aam
pop
lcall
mov
dec
and
add
add
adc
add
cmp
movsb
test
dec
and
xor
dec
and
ja
lcall
mov
nop
mov
or
and
nop
ret
shll
and
mov
adc
sbb
dec
loope
push
roll
shrl
dec
shll
adc
jo
add
add
cmp
ja
push
stc
nop
sbb
or
inc
or
shll
or
adc
dec
sarl
adc
adc
add
or
mov
roll
mov
loopne
shll
rorl
push
sbb
inc
sub
or
rcl
add
sub
and
shlb
adc
jl
adc
rcll
jnp
lds
pop
adc
add
rcrb
add
mov
mov
rorl
add
xor
inc
dec
and
mov
cwtl
inc
or
cwtl
inc
or
imul
sbbb
or
mov
shr
push
dec
and
xor
inc
pop
mov
rcll
pop
xor
adc
ljmp
rol
es
adc
xchg
es
shll
cwtl
inc
or
aam
mov
xor
shrl
rclb
xor
adc
add
mov
push
adc
dec
inc
lock
rcrl
mov
add
pop
mov
les
imul
add
shll
lcall
and
rolb
rorl
dec
and
or
ljmp
adc
rolb
jno
add
sbb
or
inc
aam
or
adc
add
push
pop
repnz
shll
adc
pop
arpl
dec
rcrl
loopne
dec
sub
xor
xchg
xchg
or
rolb
test
xor
pushf
inc
rcl
inc
or
or
les
jo
rorl
adc
shll
orb
adc
cmpsb
push
mov
add
mov
mov
loop
dec
int3
or
rorb
repnz
add
lcall
mov
movsb
sarl
jbe
inc
or
movsb
jo
lcall
mov
roll
inc
inc
xor
mov
lock
sub
push
push
jo
add
shl
sub
jnp
add
shll
inc
or
fxch
xchg
adc
aad
loope
lcall
adc
nop
je
andl
rcll
stos
lcall
adcb
sbb
orb
ffreep
rolb
mov
add
mov
shll
scas
or
flds
js
or
push
rcll
push
in
mov
add
imul
mov
fiaddl
mov
and
shll
jb
loop
sbb
adc
rorl
or
add
cmp
xlat
and
lods
add
test
jo
or
jbe
or
loopne
or
cmp
fistps
push
orb
sub
push
mov
rcrl
add
sarl
mov
std
add
in
or
testl
fadds
push
adc
or
or
rorl
xchg
xor
push
roll
push
shll
inc
ljmp
lcall
pusha
add
fdivl
xchg
cmp
mov
movsb
roll
or
and
sub
loopne
push
mov
or
es
ret
roll
sbb
shrl
sub
inc
mov
inc
or
sbb
mov
scas
or
adc
add
ret
rol
mov
or
mov
adc
mov
sub
adc
xor
push
adc
jle
pop
add
add
push
sub
pusha
add
shll
dec
and
add
add
or
adc
xchg
pusha
daa
cwtl
inc
rorl
movsb
shll
or
cmp
or
xor
test
shll
sahf
sbb
and
repz
add
inc
or
adc
ljmp
add
adcl
mov
sub
les
mov
lcall
sbbb
push
gs
mov
nop
sarl
inc
adcb
add
roll
dec
jbe
adc
add
dec
mov
bndldx
and
mov
push
jo
sub
ffreep
inc
rol
inc
fsts
and
add
cmp
dec
and
inc
or
sbb
shll
mov
shll
jb
push
pop
ret
push
mov
shrl
mov
je
pusha
add
fcompl
test
movsb
jo
push
mov
dec
cmp
sub
sub
data16
add
testb
mov
mov
bound
stos
or
mov
rorl
add
or
lcall
shll
push
push
fsub
inc
pop
sbb
pop
subl
dec
movl
push
add
sbb
imulb
cmp
sub
fwait
loopne
cmp
add
add
push
cmp
scas
add
add
push
pushf
push
add
ja
lret
xor
mov
cmp
jno
adc
adc
or
add
mov
pushf
cwtl
mov
pop
jo
add
fadds
imul
inc
shll
add
mov
inc
cmpsl
add
dec
add
add
sbb
or
test
pop
or
cmp
jle
popf
push
test
and
imul
or
inc
add
cmpb
or
push
or
dec
sti
lahf
inc
dec
shrb
imul
cmp
mov
es
sub
jno
adc
fdivrs
or
add
cmpb
inc
loope
pusha
dec
add
mov
bound
roll
pop
cmpsb
sub
jp
call
dec
addl
shrl
dec
add
or
add
add
cwtl
cmp
mov
mov
add
add
or
lods
add
mov
addl
xchg
push
add
dec
sub
add
dec
ret
mov
movsl
mov
sub
and
aas
or
les
mov
adc
xchg
jns
pop
jo
addr16
xor
call
ret
inc
popa
test
cmp
xor
adc
push
mov
cltd
sahf
xchg
adc
aam
jo
sub
dec
push
stc
cmpsl
inc
andb
sub
in
popf
or
inc
loope
or
push
mov
dec
cmp
movsl
aam
sbbl
jae,pt
lods
cmp
shll
or
lret
xorl
or
insb
addb
or
add
push
jecxz
mov
mov
sbb
je
inc
or
add
pusha
adc
jg
or
ret
pop
adc
stc
aas
sbb
mov
clc
test
and
push
adcl
adcl
jg
pop
aam
subl
cmp
stos
filds
xchg
into
push
cmp
xor
pushf
insl
or
imul
cmp
or
push
lock
inc
mov
dec
adc
fwait
pop
and
imul
push
shll
sbb
addl
sbb
dec
sbbl
mov
or
push
shll
in
cld
out
add
sub
sub
imul
push
push
in
stos
or
add
cmp
es
pushf
push
test
adc
adc
add
shrl
sbb
mov
andl
dec
cmpl
add
rcl
mov
cltd
fs
inc
test
mov
mov
add
scas
fmul
icebp
pop
test
cwtl
dec
repnz
xor
out
sbbb
jne
adc
adc
mov
push
addl
push
and
xchg
jb
dec
leave
and
sub
sbb
push
movsl
sub
xor
addb
and
hlt
cltd
xor
mov
stos
sub
sub
xor
das
add
mov
loope
leave
es
test
xor
fisttps
shrb
fs
cmp
subl
inc
loope
rolb
jg
cmpsl
orl
rclb
push
call
or
inc
cmpl
add
in
xor
ds
ds
add
ss
add
add
mov
push
xchg
pop
fcoml
inc
add
pop
stos
loop
sub
inc
or
stos
dec
add
add
shll
mov
cmpsl
inc
andl
scas
adcl
pop
mov
pop
scas
je
adc
mov
shll
imul
jo
xor
cmpl
cmpl
dec
add
jge
xchg
jl
lods
fs
and
pop
es
cmpsl
cmp
or
lea
in
pop
loop
or
bound
ljmp
xorl
sbb
mov
and
pop
ja
pusha
fcomps
push
add
add
sbbl
adc
or
ffreep
cltd
jmp
cmpl
dec
addl
mov
outsl
ljmp
dec
ja
adc
push
push
mov
inc
in
xchg
xchg
fadd
imul
shl
xor
lods
lcall
enter
leave
or
inc
loope
sbb
sbb
frstor
or
sub
xor
out
push
test
pop
sub
push
popf
andl
repz
xorb
push
test
push
jecxz
xor
imul
js
xor
andl
xor
lods
test
or
mov
subl
movsb
rorl
pop
push
loop
sub
test
adc
add
xchg
cld
lret
pop
out
add
add
cmp
adc
inc
out
push
sarb
inc
cmp
scas
roll
push
pop
xchg
mov
push
add
dec
mov
cmp
cmp
mov
pusha
orl
addl
mov
and
aas
faddl
lcall
adcl
test
cmpsb
int3
orl
test
andl
adcl
mov
sbbl
cltd
push
inc
add
orl
jo
push
test
mov
fcoms
shlb
shlb
pop
add
jmp
stos
cltd
incl
adc
stc
sahf
ret
xor
lahf
call
lahf
enter
adc
add
ret
cwtl
adcl
cmp
stos
cs
or
xorl
inc
leave
test
add
repnz
popl
mov
loope
dec
mov
add
in
cmc
rcrb
shll
dec
push
mov
cmp
and
pop
push
add
or
mov
xchg
div
or
sti
inc
inc
and
sbb
xorl
adc
push
mov
movsb
test
add
push
adc
movsl
jl
xor
or
inc
stos
mov
ret
or
mov
test
insb
test
push
stc
mov
add
xor
xchg
daa
fs
enter
pushf
add
imulb
xchg
add
sets
jo
aam
pop
pop
and
inc
adc
mov
adc
xor
xor
lods
das
jmp
lretw
sarb
jo
imul
pusha
inc
stos
add
adc
pusha
push
mov
pop
call
outsl
and
xor
cmp
or
gs
sbb
push
cmp
adc
and
movsb
mov
jbe
sarb
jmp
fsub
call
adc
loope
cld
adc
pop
push
mov
or
or
icebp
lods
in
push
jne
call
push
mov
aaa
lcall
pop
loop
sbbl
scas
adc
cmpsb
xorb
lret
adc
mov
lret
inc
add
mov
sbb
ret
xchg
inc
inc
subl
aaa
pop
xchg
and
pop
or
adc
xorl
pop
fimuls
adcb
sub
loopne
pusha
and
add
xchg
and
xchg
sub
ret
mul
add
add
test
js
cmp
mov
mov
or
mov
mov
faddl
inc
xchg
mov
sub
notl
adc
add
mov
ret
xchg
jo
inc
andl
xchg
push
in
push
sbb
xchg
push
jo
or
les
push
mov
xchg
add
mov
inc
popa
in
mov
fadds
xchg
or
mov
adcb
or
jne
mov
scas
aam
mov
and
jns
addr16
sub
icebp
shl
xchg
iret
in
rcpps
inc
loope
test
add
adc
and
add
add
pop
enter
ret
cltd
lahf
enter
and
add
push
sarb
or
push
cltd
add
fcomps
dec
test
sbb
push
add
add
mov
add
mov
add
add
pop
sub
andb
mov
mov
fildll
stos
or
inc
rcrb
aam
cs
pop
add
adcb
test
sub
push
and
std
pop
je
push
push
lret
push
rcll
push
add
test
add
pop
cs
xor
cmp
orl
xor
sbb
adc
adc
orb
xor
sbb
add
add
push
pop
pop
inc
test
inc
add
adc
or
mov
or
test
vmovntdq
fs
inc
test
sub
test
or
inc
dec
adc
pop
pop
adc
test
jmp
mov
std
dec
add
aaa
push
sbb
nop
and
enter
add
cs
mov
ds
lods
inc
add
in
mulb
mov
je
cmp
jae
test
pop
add
dec
inc
add
and
inc
inc
sub
cmp
add
or
adc
rolb
out
daa
inc
lock
call
pop
jb
mov
cmp
in
test
or
and
inc
mov
out
and
fisubl
push
popa
adc
adc
inc
xchg
sub
fs
dec
insb
rcrb
out
xchg
sub
pusha
cs
fnsave
scas
sbb
dec
or
mov
testl
push
std
xchg
sub
and
scas
dec
xchg
loopne
ja
dec
mov
pop
sbbb
scas
aad
jo
cs
cmp
and
test
scas
mov
scas
adc
add
pop
pop
mov
pop
loope
push
fcmovb
mov
add
jle
inc
dec
jo
popa
cmp
sbb
fmull
rcrl
leave
and
andb
mov
add
jmp
add
lcall
jb
pop
mov
fisttps
mov
es
or
ret
add
xor
add
ja
cvtdq2ps
sub
or
pcmpeqw
shlb
fcmovnbe
jp
sti
push
call
shr
xor
mov
imul
or
add
xchg
and
and
cmpl
aam
or
mov
sbb
pushf
xlat
ja
dec
aas
adc
out
and
xchg
xchg
jno
cltd
inc
addr16
cwtl
cs
inc
ret
testb
imul
je
mov
js
cmp
dec
pop
cmp
popa
inc
add
cs
lock
inc
cmp
and
adc
mov
call
push
push
cmp
jl
jno
sub
inc
add
mov
dec
imul
in
adc
inc
mov
nop
mov
mov
jbe
or
and
push
sbb
out
push
or
inc
andb
aam
dec
mov
or
aaa
lcall
int3
xor
and
lea
test
repz
call
sbb
and
and
push
js
inc
pop
and
bound
pop
and
and
inc
test
fcoml
and
ret
and
loopne
lock
mov
and
mov
dec
xor
and
inc
mov
in
dec
jmp
and
or
and
add
inc
loop
cmp
and
shlb
cs
jp
jecxz
and
int3
fs
loope
and
adc
push
jecxz
and
pop
and
out
or
mov
jmp
cmp
and
add
arpl
and
mov
adc
push
inc
and
sbb
sbb
inc
add
jno
adc
sbb
push
inc
ret
in
and
cmp
push
rclb
jmp
pop
cmp
push
out
and
hlt
mov
adc
pop
daa
and
sbb
les
jno
and
adc
and
mov
fildl
pop
jmp
mov
and
in
cmpsb
push
inc
and
jle
push
pop
and
pop
loop
call
and
xor
and
or
orl
push
ljmp
sbb
push
pop
and
addr16
xor
and
push
push
sbb
lds
fdivl
cwtl
xor
nop
mov
mov
call
cmp
out
jmp
and
inc
dec
mov
and
shl
and
mov
pop
add
and
and
and
and
popa
xor
adc
in
push
pop
and
jo
and
popf
cmp
or
xchg
pop
or
inc
sbb
je
adc
pop
and
push
pop
jecxz
cmp
push
and
or
roll
and
mov
and
inc
cmpb
adc
stos
xchg
mov
sbb
jno
mov
inc
subb
outsb
subb
and
fsubl
sbb
adc
and
or
push
inc
jmp
adc
shl
inc
and
mov
fsub
and
in
or
and
cwtl
sbb
fdivrs
or
lahf
jo
in
ljmp
sbb
pop
test
addb
arpl
mov
and
test
pusha
sbb
or
add
push
enter
sbb
and
pop
and
and
and
outsl
xlat
aad
cmpsl
addb
inc
ret
mov
ret
mov
call
add
sub
les
and
inc
dec
jo
and
inc
ret
aam
pop
and
cs
and
jno
add
and
mov
loope
add
and
add
and
ret
jmp
call
jo
and
and
or
ja
mov
sbb
add
dec
and
or
adc
pop
and
and
or
outsb
ret
and
inc
add
and
pop
aaa
xchg
bound
pop
fdivl
and
and
adc
xor
and
adc
mov
cwtl
nop
test
repnz
sbb
faddl
add
mov
mov
and
aam
add
repz
fnstsw
or
push
fs
push
and
cmp
dec
inc
cmp
sbb
pop
and
call
into
repz
mov
push
jno
and
out
imul
lret
in
out
es
sub
pop
nop
cmp
cmp
push
pop
push
orb
cs
inc
push
dec
jo
cmp
push
ja
les
mov
cmp
push
in
hlt
cld
add
adc
out
cmp
push
and
xchg
aas
xor
cmp
dec
cmp
or
pop
and
inc
ret
ret
add
fbstp
add
fcoms
imul
or
loope
xchg
and
dec
inc
xorl
push
mov
loopne
mov
sahf
add
and
dec
jb
daa
adc
stos
test
test
pop
add
popa
dec
loope
out
std
ret
stos
jmp
jno
je,pn
dec
adc
loope
sbb
inc
dec
loope
mov
inc
and
les
pop
and
xchg
mov
xor
andb
dec
push
std
fisubrl
in
nop
mov
ret
xchg
mov
add
jle
mov
test
and
loope
inc
sbb
or
adc
loope
jle
mov
ja
insb
push
sub
pop
mov
jo
loope
xchg
dec
adc
clc
loope
inc
sbb
fadd
and
mov
xor
inc
adc
and
sbb
xor
adc
fistpll
fiadds
mov
ret
inc
loope
adc
inc
loope
sbb
mov
xor
push
and
nop
loope
push
out
pop
or
fildl
into
sti
or
adc
push
bound
pop
cmp
pop
jae
mov
dec
loope
mov
loope
add
cltd
jae
addb
clc
jl
xor
andl
adc
aaa
call
imul
stos
sbb
pop
pusha
adc
fcoml
adc
xor
loopne
adcl
scas
loope
cmp
pop
lods
stos
mov
loope
addb
rorl
pop
pop
sarl
cmp
sarb
and
push
out
es
inc
ret
mov
xor
cmp
and
adc
lock
inc
pop
push
add
lds
add
and
pop
adc
xor
adc
mov
jnp
aaa
int
mov
or
loope
jo
outsb
popa
sub
ret
loope
adc
pop
push
loope
inc
pop
and
mov
and
or
sbb
adc
loope
pop
pop
fildl
repnz
cmp
adc
loope
gs
xchg
pop
cld
xor
adc
loope
or
mov
scas
mov
test
and
adcl
and
mov
inc
sbbb
fisttps
addl
movsl
rolb
add
add
popa
leave
sub
loope
nop
loopne
daa
ret
test
xor
or
inc
loope
and
inc
pop
and
adc
lret
imul
push
mov
or
loope
adc
mov
inc
orb
loope
push
and
in
jmp
rclb
addl
inc
ret
loope
adc
and
xor
bound
adc
add
and
loope
jo
test
call
inc
loope
out
out
mov
imul
pusha
jmp
and
pop
or
add
xor
pop
inc
ret
cld
loope
add
int3
aas
test
lret
pop
shlb
push
cmp
sbb
mov
and
aam
sbb
aas
dec
jns
xchg
pusha
aas
jg
or
push
test
jns
out
je
fs
jne
ret
add
aas
adc
mov
xlat
loope
push
int3
loopne
aas
and
and
ljmp
pop
nop
pop
push
js
mov
xor
push
aas
pop
les
pop
push
aas
mov
out
mov
push
add
or
adc
add
aaa
ja
cmc
jns
xchg
push
or
push
add
aas
push
inc
stos
add
test
fs
dec
and
jmp
mov
adc
jns
jmp
jmp
mov
ret
sbb
addb
addl
and
push
lret
insl
mov
adc
mov
and
adc
and
imul
lds
dec
enter
or
sbb
and
xor
insb
adc
push
or
ds
jo
aad
and
inc
push
and
add
dec
mov
pop
push
lds
push
dec
dec
or
nop
lock
mov
dec
jo
cmp
lock
lcall
push
and
jmp
add
pop
pushf
and
push
push
xor
push
inc
test
nop
xor
mov
sub
fcoms
addb
adc
and
mov
sub
xor
adc
adc
leave
inc
jle
or
adc
pop
xor
and
inc
or
sub
xor
mov
push
pop
andl
adc
rcll
loopne
dec
jo
adc
ljmp
sbb
out
jns
lret
loop
adc
mov
pop
mov
push
pusha
jne
test
pop
add
test
pop
xchg
sbb
mov
sub
and
pop
mov
or
jp
mov
aas
cmp
mov
loope
mov
xor
inc
pusha
pop
xchg
adc
in
xchg
in
cmp
cmp
out
in
add
mov
sub
fldl
in
insl
flds
call
inc
push
loope
xchg
sub
xor
nop
mov
add
je
xor
xor
xor
sbb
xor
xorb
nop
pusha
jg
xor
addb
loop
and
jnp
fwait
or
cli
movsb
in
push
fisubs
sbb
and
add
repz
repz
js
rcrl
and
inc
xor
nop
jo
popa
dec
js
and
inc
dec
fdivl
sbb
sbbb
xor
push
inc
xor
es
xor
xor
je
cmpsb
ret
or
shll
loope
push
inc
xor
xchg
xor
adc
push
pop
lods
and
iret
fwait
loop
and
test
xlat
pop
lods
mov
lock
and
fdivl
lods
xor
push
inc
adcb
scas
or
xchg
xchg
push
call
popa
dec
pop
lcall
xor
pop
mov
adc
or
or
push
push
add
jno
add
mov
xchg
outsb
addr16
add
cmp
mov
inc
and
pusha
popa
fstpl
add
push
cltd
mov
xor
rolb
add
pop
lea
gs
mov
sub
cltd
or
and
loope
andl
adc
das
rolb
movsl
fisttpl
xor
push
add
fs
nop
sbb
or
cmp
mov
add
add
gs
mov
jne
lret
sbb
ret
adc
xchg
or
or
addb
ja
cmc
stos
iret
cmpb
add
dec
inc
add
test
and
gs
or
out
test
gs
mov
idivl
ljmp
cmp
and
in
adc
mov
test
inc
outsl
cmp
push
ret
add
xchg
mov
cmp
inc
ret
and
add
push
scas
xchg
pop
add
adc
sub
test
je
fadd
nop
jo
test
fmuls
dec
mov
add
add
pop
ds
or
je
add
and
push
inc
jns
repz
ret
lret
mov
rorb
inc
xlat
or
mov
add
add
add
xor
test
push
test
test
shll
pusha
adc
jbe
and
add
mov
inc
inc
aaa
or
sbb
repz
xorb
outsl
test
movsb
bound
repnz
pop
or
sbb
dec
cmp
adc
sbb
add
aaa
movsb
or
rorl
sub
nop
loopne
dec
add
adc
cmp
lods
test
and
dec
aaa
inc
inc
ret
add
inc
aam
add
out
adc
mov
adc
aaa
cmp
aaa
jo
cmp
and
aaa
daa
add
add
aaa
pushf
icebp
adc
or
xor
mov
jo
push
push
or
adc
rclb
add
aaa
add
add
dec
sbb
adc
mov
test
mov
divb
inc
or
mov
sbb
adc
or
lahf
addb
mov
or
and
cmp
mov
mov
call
jbe
rcrb
shll
mov
aaa
mov
cmpsb
adc
lea
add
mov
add
je
push
pop
jns
daa
adc
arpl
mov
or
aaa
or
ljmp
aaa
pop
and
shll
jp
hlt
adc
sub
mov
add
ss
or
adc
push
sub
jecxz
cmpl
push
movsl
lret
nop
ret
add
movsl
mov
nop
mov
lea
jl
inc
inc
mov
aaa
cmp
test
inc
inc
jbe
cmpsb
in
push
jo
fidivrs
and
mov
pop
sbb
add
push
ret
dec
aaa
xor
aaa
cmp
add
ja
dec
aaa
xchg
test
xorb
and
test
and
in
dec
cmpsl
js
add
sbb
pop
clc
and
test
or
push
call
inc
insb
or
ja
jnp
inc
mov
jo
dec
cmp
dec
mov
pushl
and
and
ja
pop
movsb
mov
cs
dec
or
or
call
popa
cmp
inc
leave
mov
sbb
cmp
nop
sbb
fcomps
es
push
cmp
cmp
sub
add
in
adc
and
or
mov
fs
fucom
fdivrs
sub
xor
fs
cmp
lods
inc
lahf
push
cmp
frstor
mov
or
mov
pop
xchg
inc
dec
flds
or
add
pop
mov
sarb
xchg
or
mov
iret
jge
mov
pusha
andb
outsb
ficoml
pop
inc
aaa
xchg
push
adc
rorb
or
sub
sbb
inc
int3
flds
ret
loope
or
mov
imul
xorl
gs
scas
icebp
xor
clc
jae
lea
cmpl
insb
rclb
inc
add
icebp
fwait
shlb
pushl
call
movsb
push
es
cs
stos
push
mov
and
adc
int
xor
addb
cltd
add
and
mov
movsb
icebp
xor
pop
cmp
or
xchg
jb
es
ret
or
ret
cmp
sub
loopne
in
daa
aad
sbb
or
les
cwtl
add
jnp
add
push
fwait
sti
mov
ret
xor
dec
sbb
or
dec
mov
add
push
rcrl
cmp
adc
pop
bound
xor
push
fmull
or
and
or
add
cmp
inc
orb
pop
mov
mov
pop
vpunpckhdq
and
xor
add
pop
adc
popa
inc
hlt
pop
es
ret
sbb
xor
nop
jo
mov
add
faddl
jo
pop
mov
lods
pop
aaa
add
push
dec
addb
jl
loope
mov
test
fs
inc
adc
pushf
rolb
xor
pop
mov
inc
pop
arpl
add
pop
inc
int3
pushf
cwtl
add
pop
out
or
gs
ret
pop
test
mov
or
movb
orb
adc
or
and
pushf
dec
or
or
xchg
add
add
or
call
add
or
add
add
add
test
xchg
jl
add
jo
inc
addb
push
adc
cwtl
sbb
pop
adc
or
sti
mov
je
call
cwtl
fmuls
add
or
add
roll
jge
pop
popf
lods
jne
add
or
jno
push
clc
jp
jne
scas
pushf
push
and
cltd
clc
xchg
lret
mov
add
or
add
and
pop
mov
aam
unpcklps
pmullw
lea
xorl
mov
daa
and
sub
idiv
xchg
inc
and
mov
add
push
push
ret
imul
add
mov
popa
sbb
add
lods
xor
and
xor
sub
push
popa
pop
dec
nop
loopne
add
addb
outsl
or
movsb
sbb
popa
loope
add
cltd
or
and
mov
add
inc
jo
or
and
les
and
lock
mov
dec
mov
dec
jl
das
and
xor
pusha
and
mov
cmpsb
sub
and
pop
or
add
js
add
adc
and
in
stos
rcr
pop
loope
sbb
mov
pop
add
pop
cmpb
add
ret
mov
or
pop
out
ffree
add
les
loopne
jb
ljmp
add
pop
cltd
arpl
and
fs
add
mov
add
dec
and
add
xor
xor
adc
nop
jo
pop
xor
adc
cmp
mov
popf
push
xor
add
dec
xor
sbb
or
add
enter
add
ja
dec
pop
addb
or
jbe
sbb
or
aaa
add
pop
rcrb
pop
js
add
aam
pop
nop
mov
xchg
add
jb
inc
sbb
sub
pop
aas
mov
stos
add
pusha
add
pop
pop
add
push
stc
xor
xchg
and
pop
rolb
or
pop
cmpsl
xor
adc
xor
inc
ret
inc
pop
cmp
aam
dec
pop
mov
add
addb
push
sbb
nop
lock
pop
add
pop
sub
lock
add
adc
inc
and
add
add
add
popa
jp
add
movsb
push
push
inc
cmp
sub
inc
lea
mov
and
test
cmpsb
dec
clc
cmp
ds
int
inc
ret
popa
add
outsb
and
pusha
or
sbb
inc
add
popa
mov
mov
add
or
loopne
or
insl
push
rorl
enter
popa
daa
ret
dec
popa
adc
add
inc
popa
adc
inc
add
popa
inc
ret
fcomi
and
xchg
popa
ret
mov
bound
popa
pop
push
test
add
or
andb
out
add
popa
mov
push
pop
xor
popa
push
dec
inc
xor
adc
and
lods
dec
dec
inc
sub
adc
and
popa
add
and
or
add
popa
jmp
adc
clc
mov
mov
add
scas
xchg
xchg
and
add
sbb
jmp
lret
test
outsb
sbb
popa
adc
loope
xor
add
sahf
mov
sbb
insb
add
sub
sub
popa
test
addr16
or
popa
sub
sti
xor
jmp
sub
les
popa
pop
jge
imul
aad
dec
popa
lahf
addb
add
or
repnz
inc
sbb
inc
stos
add
popa
dec
inc
bound
pop
add
in
xor
popa
or
or
pushf
add
test
and
int
add
in
or
inc
sub
sub
add
add
and
dec
lods
cmp
cmpsb
popa
icebp
rorb
test
sub
addb
fmull
push
imul
sbb
add
inc
xor
add
push
addl
push
call
jnp
pop
inc
ret
add
into
mov
popa
popa
xor
jmp
add
inc
shlb
inc
popa
dec
cmp
roll
push
repnz
pop
dec
inc
pop
pop
xor
daa
dec
push
xor
popa
xor
adc
mov
dec
fcoms
loope
adc
addb
popa
test
addb
and
lods
push
popa
add
ret
mov
out
mov
inc
popa
adc
nop
cltd
push
gs
and
cmp
test
add
add
add
or
popa
mov
pop
add
sbb
pop
addb
popa
jo
dec
mov
or
lods
inc
ret
popa
je
js
sub
popa
aaa
loopne
add
xchg
addl
aad
dec
jo
popa
dec
js
sbb
and
roll
popa
loopne
mov
mov
popa
and
jl
push
inc
ret
daa
or
ret
in
add
or
and
insl
popa
ret
add
popa
jns
call
and
push
inc
ret
popa
test
dec
sub
fmull
mov
bound
popa
lods
mov
jno
addb
or
pushf
js
andl
clc
add
inc
imul
addb
popa
mov
xchg
mov
loopne
dec
cmp
jbe
add
inc
shll
ret
dec
popa
shl
cmp
add
pop
add
mov
out
or
roll
dec
popa
nop
xor
popa
jo
or
in
push
sub
andb
test
dec
cmp
add
lds
dec
and
scas
push
faddl
popa
xorl
pop
jnp
pop
add
popa
dec
es
mov
lea
pushf
imul
bound
and
out
stos
add
fadds
jge
fcomps
mov
adc
fwait
test
inc
push
cmpsb
sbb
or
push
add
loope
popa
lret
insl
rcr
mov
or
fadds
imul
das
add
popa
cltd
loopne
add
add
outsb
mov
cmp
mov
popa
orb
jge
out
pop
push
movsl
pusha
bound
sbb
cmp
int3
add
add
outsb
mov
cmp
fmuls
popa
fdivr
dec
inc
jge
and
dec
les
out
pop
mov
pusha
bound
sbb
cwtl
push
int
and
cmpsb
inc
jle
popa
add
adc
cmp
sbb
inc
and
jge
out
pop
or
loopne
daa
ss
hlt
cli
push
into
add
loope
inc
fidivl
popa
add
adc
cmp
sbb
inc
and
jge
out
pop
push
ss
push
push
mov
and
sti
sub
xchg
rclb
mov
sub
dec
lds
popa
imul
sbb
xchg
rcll
das
pand
pop
fistps
addr16
cmp
sti
fcmovnb
add
out
popa
cmp
fnstenv
popa
jle
addb
adcb
inc
ljmp
and
stc
std
imul
test
rorl
imull
popa
nop
pusha
ret
or
mov
or
inc
ret
roll
mov
nop
jo
int3
mov
popa
fnsave
jmp
add
fmull
mov
roll
sbb
popa
inc
or
dec
outsl
xor
push
inc
popa
add
and
movsb
sub
outsl
push
fidivrl
call
dec
add
addr16
cmp
inc
popa
fs
insl
mov
adc
call
push
and
inc
push
xchg
daa
hlt
in
jge
sbb
and
push
jmp
je
push
and
adc
rclb
imul
pusha
or
pop
shll
fucomi
jbe
aad
cmc
xlat
aad
pop
or
flds
sidtl
pop
cmp
inc
cmp
xchg
mov
and
cmp
cmp
adc
loope
sahf
cmp
fists
adc
add
clc
pop
adc
test
loope
rcl
out
adcl
addb
and
cmp
xor
loopne
add
sbb
and
inc
cmp
add
cmp
test
pop
ja
sbb
adc
pop
mov
dec
and
pop
xor
add
das
shrl
jno
in
cmp
adc
mov
push
add
cmp
mov
sahf
testb
js
sub
or
popa
mov
cmp
sub
or
cmp
add
xor
cmp
mov
sub
or
cmp
inc
ret
inc
cmp
push
inc
cmp
and
xchg
adc
add
mov
inc
hlt
dec
jo
or
ja
loopne
add
pop
xor
mov
cmp
cmp
add
and
mov
cwtl
int3
inc
add
xor
mov
or
adc
or
inc
inc
add
nop
xor
sbb
mov
add
test
dec
inc
cld
leave
push
sub
rolb
add
mov
add
ja
inc
lea
and
subl
pop
xchg
fadds
cmp
test
leave
add
jo
push
or
imul
stos
add
bound
loopne
mov
jmp
jmp
rorl
inc
cmpsl
enter
adc
rorl
add
xchg
cmp
add
and
inc
ret
inc
inc
ret
std
test
hlt
orb
adc
and
and
xor
cld
inc
adc
add
out
add
add
and
add
sub
ja
add
cmpsb
sub
inc
mov
and
nop
jb
sub
or
orl
ret
sub
or
pop
inc
movntps
fsub
pop
and
and
sub
addb
and
pop
inc
xor
add
sub
out
push
adc
add
or
mov
and
inc
inc
cmp
cmp
rcrl
inc
xchg
orb
add
addb
fstl
adc
pop
sahf
adc
push
push
adc
cmp
adc
addb
dec
and
pop
and
loope
subl
or
mov
into
dec
jae
test
and
push
add
pop
xchg
or
inc
sbbb
test
in
jbe
mov
inc
cli
or
push
mov
call
and
imul
add
out
pop
sbb
add
inc
pop
lea
pop
xor
pop
add
cmpsb
jnp
inc
jmp
mov
add
rclb
int3
js
scas
addb
rolb
inc
mov
or
addb
mov
inc
data16
loope
or
and
jge
int3
inc
jg
pop
and
jo
mov
ror
add
dec
ljmp
in
orb
inc
dec
xchg
xor
or
adc
inc
sub
or
sbb
or
xor
push
or
adc
nop
aas
ds
or
mov
loope
inc
mov
loopne
and
sbb
nop
inc
mov
pushf
mov
nop
mov
aas
pop
adc
add
hlt
inc
faddl
cmp
push
add
inc
nop
inc
ret
cmpsl
popa
sub
or
rclb
mov
nop
pusha
cwtl
inc
add
pusha
mov
push
inc
scas
and
mov
inc
adc
inc
gs
add
add
sub
or
inc
add
das
test
inc
ss
pop
les
adc
sub
push
dec
mov
sbbb
add
mov
mov
pop
out
clc
add
negl
cmp
call
mov
popf
jmp
mov
imul
cmp
or
aaa
ja
and
and
mov
cwtl
testl
lock
push
adc
mov
nop
loopne
add
add
jo
sti
shlb
adc
pop
in
dec
jo
aad
aas
mov
add
push
inc
subl
adcl
mov
andl
mov
ret
xor
adc
cmp
orl
cmp
sahf
pop
jne
inc
mov
cmp
or
inc
xorl
lock
addb
sbb
and
ljmp
pusha
adc
flds
inc
or
add
filds
add
mov
test
jne,pn
popa
xorl
jnp
mov
push
andl
jo
adc
js
orl
addl
orl
sbb
add
dec
adc
add
inc
inc
sbb
add
dec
jo
inc
lock
ret
add
inc
xorl
pusha
mov
xchg
mov
dec
jae
jb
fsubs
add
fcompl
jno
adc
adc
ja
xchg
or
add
popa
cmp
je
popa
push
sbb
test
cmp
jge
adcl
addb
andb
sbb
and
dec
add
adc
test
inc
dec
adc
loopne
cmp
or
dec
addl
cmp
hlt
lret
and
or
mov
adc
xorl
cmpl
xor
add
pop
arpl
insl
je
jmp
aas
add
subl
dec
jo
addl
add
xor
sbb
inc
sbb
sbb
adc
les
add
jno,pn
mov
addl
or
int3
loope
jo
sub
aam
js
push
jo
push
fwait
adc
cmp
lea
rolb
mov
and
call
dec
test
inc
jo
enter
add
stos
or
loope
repnz
xchg
add
mov
and
jmp
addb
and
inc
inc
dec
addb
mov
add
or
adc
xchg
inc
inc
add
out
adc
add
in
adc
fcoms
and
iret
pop
or
dec
inc
mov
les
add
push
xchg
addb
dec
add
cwtl
add
cmpsl
nop
insl
inc
add
out
mov
mov
inc
or
aam
cwtl
add
inc
ret
inc
add
orl
adc
bound
inc
and
lods
add
and
push
push
je
adc
faddl
stos
or
inc
ret
incb
add
lcall
js
push
fldl
pusha
add
orb
xor
adc
nop
lock
add
outsb
addb
add
aaa
xor
and
mov
jmp
mov
js
stos
int
xor
ja
add
inc
test
add
inc
ret
je
add
addl
cwtl
inc
sbb
push
adc
bound
jmp
dec
inc
aam
jmp
call
adc
inc
jp
or
add
inc
cmpb
sub
add
inc
sub
out
push
sub
adc
add
pop
je
inc
sbbb
loope
es
jmp
and
adc
inc
int
or
push
inc
test
loope
lcall
inc
adc
inc
mov
add
cmp
ret
cli
add
cmp
iret
rolb
cmp
addb
adc
inc
nop
mov
test
insb
loope
dec
addb
es
inc
es
in
and
add
js
and
pusha
daa
inc
ret
das
shr
daa
inc
andb
out
or
and
test
lcall
dec
addb
and
in
shr
and
scas
cmp
nop
pusha
add
mov
nop
inc
lods
or
or
or
sub
nop
cmp
in
dec
addb
cmp
adc
loope
out
addb
dec
inc
cld
sub
and
inc
push
js
arpl
inc
mov
dec
inc
jecxz
test
shrl
inc
mov
out
adc
inc
dec
fisubrs
mov
add
and
sub
xor
sub
cs
jbe
or
adc
or
inc
andl
inc
movsb
xor
and
loopne
cltd
xor
adcb
jnp
or
or
or
add
xor
sahf
sbb
adc
xor
mov
or
and
xor
aad
mov
pop
and
mov
roll
mov
add
in
sub
sub
cmp
mov
test
pop
and
mov
adc
bound
and
and
sbb
test
pop
loope
cs
jne
mov
loope
inc
icebp
adc
pop
push
mov
loope
cmp
or
add
mov
add
inc
dec
xchg
push
jo
adc
mov
mov
push
dec
cmpl
jge
push
add
into
in
push
and
inc
push
inc
jne
iret
or
pop
xor
mov
xor
ret
stos
addb
je
pop
mov
add
jp
push
jo
adc
jo
mov
xor
lret
fwait
mov
mov
ret
cmp
cmp
dec
inc
mov
mov
lods
mov
sub
in
mov
add
mov
sahf
push
sub
add
pop
addb
mov
pop
addb
sub
sub
or
and
add
add
or
arpl
mov
add
shlb
xor
push
pop
out
add
cmp
std
add
or
addb
sub
pop
mov
test
add
ret
rolb
mov
cmp
lret
add
ror
mov
pop
mov
addl
add
jo
sbb
mov
mov
loop
pusha
test
push
pop
dec
les
adc
mov
cmp
xchg
push
out
mov
sbb
add
add
fwait
add
sub
xlat
stos
rorb
add
mov
dec
les
frstor
push
or
jmp
faddl
cmp
pop
mov
mov
andb
out
pushf
sbb
mov
and
mov
mov
loopne
pop
mov
add
sub
push
push
les
jne
mov
cltd
daa
sbb
test
stos
or
pop
andb
idiv
jae
mov
jmp
gs
jmp
push
testl
or
sbb
mov
mov
jno
add
mov
arpl
ret
bound
mov
nop
mov
inc
ret
add
mov
popl
negb
add
negl
mov
dec
stc
sbbb
and
rorb
add
push
dec
lock
fimull
dec
or
xor
jne
mov
sbb
or
popl
or
lea
inc
adc
popl
add
push
adc
pop
lea
inc
cltd
push
cs
ret
mov
addb
inc
dec
sbb
inc
push
lds
or
lock
mov
sub
xchg
add
jle
add
addl
inc
stos
and
pop
pop
inc
fildl
ljmp
popf
or
rcrb
adc
adc
xchg
cmp
jg
push
adc
test
das
in
and
and
jmp
add
push
adc
xchg
push
adc
ljmp
loope
inc
ret
int
or
sbb
nop
jo
jmp
push
fcomps
sub
nop
jo
fcomi
incl
fildll
or
or
or
adc
mov
call
aaa
adc
das
daa
nop
cmp
inc
and
test
das
es
or
outsb
jo
sub
cmc
add
push
adc
dec
das
daa
inc
or
mov
rorb
shll
das
repz
iret
cmp
inc
cs
or
fdivs
add
das
fwait
inc
inc
ret
mov
cmpsl
fisubrs
dec
stos
fmull
add
das
cmp
sbb
cltd
pop
and
das
shlb
add
sub
nop
mov
insl
rolb
adc
aam
adc
ss
les
das
xor
adc
loopne
add
das
aaa
pop
xchg
nop
das
in
sahf
cmp
fdivrs
call
sbbb
adc
add
fsubl
xor
faddl
or
sub
xchg
loope
or
push
pop
xchg
js
and
aas
dec
add
pop
adc
sbb
dec
mov
addb
das
xor
das
popf
call
and
outsb
test
sbb
in
mov
dec
fsubs
sbb
das
int
push
xchg
test
mov
orl
xor
push
outsl
dec
lock
or
mov
das
into
sbb
sub
sub
dec
jns
int3
push
lret
sbb
adc
pushl
inc
subb
push
ds
insb
sub
push
add
jmp
fadd
insb
push
dec
outsb
out
push
and
jbe
jne
cmp
notl
jo
xor
add
das
mov
insl
jmp
cmp
and
nop
pop
lock
xchg
pop
push
xchg
sbb
mov
adc
and
mov
loopne
inc
inc
ret
or
loopne
jbe
adc
dec
das
mov
fstl
das
jo
push
mov
add
das
or
testl
add
inc
das
insl
addb
das
mov
ss
test
icebp
jmp
push
fsubl
rorl
cmp
and
loope
das
sbb
sbb
adc
or
inc
inc
mov
or
pushf
lea
addr16
sub
push
je
pop
rcr
push
clflush
in
sbb
arpl
arpl
push
shrb
sub
mov
movsb
push
xchg
arpl
arpl
mov
and
repnz
push
pusha
adc
popa
cli
stos
mov
test
orl
repz
or
inc
adc
lret
ret
rorb
or
mov
repz
push
add
mov
ja
mov
repz
mov
insb
inc
adc
fs
insl
or
adc
xlat
dec
sbb
or
adc
push
mov
xlat
call
mov
call
mov
and
xlat
lds
test
test
ficomps
adc
scas
aam
or
mov
loope
xchg
mov
and
xlat
push
insb
inc
mov
cmpsb
fadds
inc
mov
loope
xlat
dec
stos
fadds
adc
inc
add
fstl
andb
insb
inc
insb
inc
cmp
or
add
add
bound
and
pop
test
xlat
adc
sbb
outsb
push
mov
insl
or
pusha
daa
mov
add
xor
testb
sbb
mov
shlb
or
xlat
adc
or
into
arpl
mov
xlat
push
popf
shlb
push
xlat
iret
and
cltd
or
insl
or
sbb
pop
neg
xchg
xchg
cmpsb
xlat
call
xlat
dec
out
bound
popf
jl
cmp
and
mov
xlat
inc
roll
push
mov
xlat
jecxz
or
inc
imul
mov
lds
test
and
lds
test
js
xlat
adc
jne
mov
and
clc
pop
xlat
pop
or
sub
fstl
or
insl
or
inc
jo
mov
js
inc
xlat
cmpsl
sbb
leave
mov
bound
xlat
jl
mov
test
in
sbb
sbb
or
nop
aaa
or
shld
push
call
call
push
push
sub
xchg
rorb
xchg
sbb
adc
cmp
sbb
jmp
or
iret
insl
or
sub
lcall
sub
push
test
ret
ss
sbb
push
add
cmpsl
or
cmp
int3
ss
inc
sub
subb
int3
sub
loope
out
and
sub
inc
enter
insb
inc
sbb
push
lds
adc
ja
jno
sub
loope
sub
sbb
dec
in
xor
sbb
adc
xchg
fwait
pop
lds
lahf
insl
or
xchg
push
sub
cwtl
insl
or
pop
push
je
push
add
sub
cld
xor
jl
loopne
and
push
js
lock
aam
sub
and
lahf
xchg
es
mov
nop
shl
movsl
mov
imul
xchg
bound
and
adc
sub
or
insl
dec
mov
rcl
cmp
sub
push
orb
or
ret
testb
ja
cmp
cmp
add
sub
add
mov
jmp
and
cmpsl
roll
ret
cmp
push
cmpsl
ret
sbb
inc
cmpsl
jo
dec
or
fdivrs
loope
ret
mull
dec
pop
cmpsl
xor
mov
call
or
cmpsl
fisubrl
adc
cmpsl
or
or
and
test
data16
fnstenv
dec
ret
push
sub
ja
mov
mov
sub
or
or
dec
adc
or
dec
sbb
and
insl
lods
jl
pop
push
and
js
pop
adc
sbb
push
xchg
adc
pop
pop
adc
or
stos
and
leave
popa
fisubrl
or
pushf
xchg
test
or
inc
test
sbb
sub
and
add
addl
sbb
adc
inc
orb
iret
cmp
test
loope
mov
sub
cmp
inc
popa
mov
or
mov
nop
xor
and
ret
or
sub
aad
addb
push
test
mov
and
insb
mov
pusha
inc
pop
test
push
xchg
pop
addb
mov
inc
ret
or
xor
push
or
movsb
or
add
mov
or
ss
out
add
test
add
addb
push
pop
roll
or
jnp
rclb
and
mov
orb
test
loope
fists
fistps
adc
cld
sub
adc
sbb
push
fildll
sbb
jecxz
push
test
fistps
xor
jno
pop
dec
movsl
in
ficomps
jmp
sbb
mov
or
sub
sbb
outsb
sbb
or
jno
sbb
or
push
or
or
aad
dec
mov
push
adc
iret
xor
movsb
cmp
add
mov
pop
push
jno
add
mov
or
inc
add
cmp
out
push
aaa
lock
push
xor
adc
and
int3
jno
add
out
mov
jno
jns
jbe
das
or
xchg
sbb
or
mov
call
sti
or
add
pop
mov
loope
or
and
rorl
mov
test
inc
mov
jno
popf
or
imul
add
jno
and
cmp
or
jne
inc
add
jge
jno
shrb
cmp
mov
adc
adc
jno
call
jno
or
rorb
sbb
or
jno
and
xchg
cmp
push
test
pop
fadds
adc
cmp
sbb
or
and
outsl
data16
jo
mov
stos
adc
orb
mov
push
and
jno
adc
and
mov
or
or
cmpsb
stos
xor
add
or
xchg
aam
bound
pop
stc
adc
sub
or
push
xlat
cmp
push
cwtl
or
add
cmc
add
add
repnz
pop
xlat
pop
cmp
add
and
adc
sbbb
subb
or
subb
in
adc
jge
loope
popa
lds
rolb
jge
je
adc
jge
loope
loope
pop
push
out
adc
das
adc
jge
pop
cmp
or
dec
cmp
pop
jge
sbb
cmp
jge
xchg
jo
sbb
iret
loopne
and
xor
jo
add
sbb
faddl
dec
sbb
lahf
test
and
inc
jl
or
jb
test
movsl
or
jle
inc
and
loope
movsb
xor
add
subl
jnp
flds
inc
addr16
and
pop
enter
xchg
mov
shr
xor
jbe
push
xor
push
add
js
out
inc
arpl
ret
add
push
dec
adc
outsb
out
fs
call
and
dec
fistl
add
out
and
pop
fildl
fldt
imul
insl
add
test
out
cmp
dec
mov
and
fstl
div
inc
test
and
movsl
nop
and
test
sub
aaa
out
jbe
mov
adc
and
nop
adc
mov
fldt
sub
jo
and
xor
fucomi
inc
or
inc
fistl
add
in
data16
bound
sbb
mov
pushf
mov
out
cmpsb
and
test
fildl
adc
xor
fcomi
sub
rorl
inc
mov
test
and
fmull
push
ret
adcb
adc
and
add
test
inc
adc
nop
mov
je
and
stos
sbb
fisttpl
mov
inc
adc
and
mov
das
ds
dec
inc
jge
adc
nop
mov
mov
inc
inc
pop
or
or
xor
and
loope
mov
adc
insb
add
adc
or
fildl
adc
or
or
or
loopne
or
adc
loopne
lret
dec
cli
nop
mov
pusha
push
pop
dec
inc
jbe
ret
mov
and
fistl
or
ret
int3
fistl
pop
mov
sbbb
roll
push
and
inc
mov
mov
adc
cmp
adc
fldt
pop
push
push
js
push
or
add
int3
push
inc
fisttpl
sti
pop
nop
jo
add
or
adc
push
jge
or
fisttpl
and
jne
fildl
dec
mov
sbb
cmp
jo
fs
rolb
inc
dec
test
and
adc
xlat
cwtl
shrb
popa
or
rolb
jle
lcall
nop
mov
or
js
cmp
push
adc
fistpl
movsb
lock
inc
sbbb
orb
inc
fcomi
rolb
pop
and
sbb
clc
ret
add
sbb
fisttpl
dec
mov
scas
inc
inc
ret
cmp
je
ljmp
and
fildl
sbb
and
test
rorb
fistps
xchg
inc
or
fwait
sbb
call
add
insb
daa
adc
adc
int
xor
push
and
lds
or
movsb
or
or
test
mov
scas
arpl
xchg
xchg
cmp
nop
jo
mov
sbb
and
lods
pop
call
inc
xchg
fistl
or
mov
or
push
mov
jp
inc
inc
adc
cli
movsl
in
pop
test
jbe
mov
push
inc
mov
adc
jecxz
into
fmulp
sub
adc
fcmovnbe
clc
fdivrs
push
sbb
cs
ret
call
pop
xchg
add
add
bound
popf
jl
bound
push
add
dec
clc
outsb
or
add
dec
lret
ret
sbb
pop
push
dec
in
mov
or
sub
and
or
clc
add
xchg
stos
add
ja
nop
adc
pusha
leave
mov
add
cmp
push
cmpsl
inc
xor
inc
cmp
jle
dec
add
and
inc
mov
dec
pushf
sub
sub
leave
test
add
lret
dec
or
pop
rorb
out
pop
loope
mov
or
scas
or
push
and
adc
add
sbb
call
add
pop
and
lds
add
push
mov
mov
or
and
xchg
mov
leave
sub
add
out
xor
or
mov
inc
sbbb
push
cwtl
push
xchg
das
cmp
lds
sbb
push
xorb
and
cmp
adc
adc
call
adc
cmp
jecxz
mov
adc
inc
inc
ret
xchg
inc
inc
ret
adc
dec
jo
xchg
lock
test
adc
adc
movsb
addr16
add
movsb
sub
mov
or
cmp
adc
ret
adc
ret
inc
adc
fadds
dec
clc
out
mov
sbb
adc
adc
adc
roll
add
adc
and
add
mov
adc
clc
dec
enter
or
xlat
add
adc
mov
xor
and
adc
sbb
add
adc
sbb
jnp
js
popa
and
push
loope
popa
enter
mov
add
pop
mov
stos
shll
insl
or
push
xchg
push
in
xchg
push
sbb
mov
nop
loopne
roll
adc
ror
cmp
es
jbe
rorl
fistl
mov
dec
xor
inc
add
cwtl
mov
push
out
call
xchg
sets
jae
add
and
jecxz
fnstenv
jo
sub
andb
cmpsb
sbb
xchg
fnstsw
dec
or
pop
ret
ret
push
or
bound
pusha
cmp
fidivs
or
and
fisubl
mov
jno
test
es
cwtl
or
loopne
sbb
push
test
add
add
jno
or
nop
mov
shlb
sarl
xor
fisubs
daa
jg
xor
push
and
inc
andb
push
addb
or
sbb
push
add
out
sbbb
add
mov
inc
orb
shll
loope
subl
arpl
inc
add
mov
inc
add
loope
add
pop
cmp
sbb
inc
push
adc
jo
add
rorl
nop
mov
inc
mov
jge
mov
mov
adc
rcll
shll
leave
enter
call
mov
and
nop
iret
cmp
ljmp
jecxz
dec
or
adc
outsl
fs
adc
add
out
ja
add
inc
and
or
xor
out
mov
push
popa
xor
add
push
xor
and
sbb
add
push
outsl
pop
and
push
xchg
sub
fldl
test
scas
cmp
outsl
jo
icebp
jns
xchg
inc
inc
or
jno
pop
and
sub
adc
femms
push
outsl
std
and
inc
subb
xchg
inc
in
lods
or
inc
icebp
mov
das
faddp
add
inc
push
insl
shll
xor
sbb
test
scas
add
push
pop
and
fisubrl
pusha
test
xlat
or
ds
or
add
sbb
push
nop
xchg
pop
shrb
inc
ret
mov
mov
sbb
outsl
aas
bnd
add
js
mov
inc
outsl
out
inc
loopne,pn
and
mov
mov
outsl
bnd
imul
int3
fiadds
adc
jns
xchg
jl
and
jl
xchg
push
mov
cmp
js
dec
dec
dec
ret
outsl
test
jo
add
outsl
or
add
mov
mov
adc
add
sbb
sbb
mov
mov
popa
clc
mov
and
test
pop
jp
push
or
jge
subb
sub
enter
or
pop
popa
and
filds
xchg
xchg
push
add
scas
sub
test
ljmp
sbb
push
sbb
test
sub
adc
lahf
outsl
adc
vmread
sub
push
push
fwait
sbb
sub
and
jns
mov
aad
xchg
inc
xchg
jo
adc
ficoml
jl,pt
adc
repz
add
inc
mov
movl
add
cli
fistl
shll
mov
push
push
or
aad
xchg
mov
xchg
push
movl
mov
aad
ret
xchg
or
push
cmp
mov
dec
cmp
xchg
inc
pop
stos
add
push
fistl
sub
inc
insl
inc
pop
xor
adc
sub
dec
fmull
test
and
sub
jnp
ss
sbb
cld
mov
sub
push
and
aad
inc
or
mov
mov
sub
add
and
inc
nop
inc
sbb
es
out
mov
dec
mov
cwtl
adc
shrb
jp
adc
xor
adc
sbb
jns
mov
mov
or
mov
rorb
mov
xor
mov
stc
loop
inc
jo
mov
or
dec
sbb
int3
test
inc
mov
inc
pop
dec
test
sub
mov
and
inc
mov
fwait
add
pop
jne
cmovb
sbb
jle
xchg
repz
cmc
ret
push
sbb
lock
mov
ds
mov
bound
cmp
xchg
mov
bound
add
xchg
dec
in
sbb
sub
add
xchg
cld
outsb
push
sub
test
int
flds
insl
or
mov
lcall
mov
int3
mov
add
mov
flds
mov
mov
sbb
or
ss
xor
sbb
int
mov
and
arpl
pop
adc
sbb
pop
add
push
mov
dec
insb
inc
sbb
movsb
sbb
shll
sbb
addb
sbb
sbb
rcll
push
jb
gs
sbb
ret
pop
or
and
ret
adc
insl
mov
xor
mov
mov
inc
cmp
mov
or
adc
adcb
out
loopne
mov
mov
pushf
movsb
or
ret
pusha
or
sbb
or
add
or
mov
adc
subl
or
xchg
jmp
jp
adc
and
push
pmaxub
mov
fsubl
cmp
adc
xchg
in
adc
mov
scas
cld
loope
or
pop
sbb
dec
mov
jnp
fldenv
or
xor
lds
or
add
dec
sbb
xchg
dec
mov
push
cmp
sbb
dec
insl
push
out
nop
add
cli
push
arpl
in
push
loop
or
bound
or
gs
xor
test
hlt
sbb
or
and
mov
loope
or
cmpl
imul
sbb
pop
push
or
ret
pop
cli
and
or
ja
sbb
cmp
insb
or
and
dec
xor
bound
mov
xchg
xor
adc
or
dec
and
mov
or
or
fistl
push
sahf
or
pop
mov
sbb
inc
or
or
test
jbe
sub
xchg
push
lock
arpl
rcr
adc
pop
mov
out
cmpsl
xor
or
push
int3
or
fbstp
dec
cwtl
les
stos
imul
int
sub
fistl
pop
xchg
sbb
mov
js
or
pop
xor
cmpb
test
xor
sub
or
mov
popa
cmp
push
and
add
or
and
outsl
adc
or
test
lods
bound
or
mov
sbb
or
mov
add
insb
or
lock
int
test
adc
or
sbb
xchg
push
ret
or
or
shrb
insl
or
or
xchg
jne
dec
insb
inc
mov
adc
mov
mov
fisttpl
jg
mov
insb
inc
or
inc
mov
or
xchg
push
inc
popa
mov
or
or
fwait
insl
or
or
mov
jnp
insl
flds
or
bswap
dec
dec
mov
sub
push
lock
test
or
mov
pop
push
je
andb
add
or
shlb
rcll
mov
sbb
sub
or
xchg
mov
jp
inc
mov
data16
rol
or
stos
imul
mov
pop
rcl
lcall
insb
or
cmc
mov
xorb
fwait
insl
or
cmp
cmc
adc
inc
int
test
outsl
mov
or
inc
or
insb
inc
mov
or
or
addb
int
add
xor
sbb
cmp
or
adc
sub
pop
push
xor
or
jnp
adc
inc
test
pop
hlt
gs
insb
inc
or
mov
rol
adc
cmp
mov
or
sbb
in
ja
enter
or
cwtl
clc
insb
inc
or
sub
xor
mov
mov
xchg
push
insl
or
or
xchg
repz
ss
sbb
out
xchg
insb
ds
pushf
sbb
or
adc
add
test
loope
adc
cmpsl
adc
adc
out
mov
or
jns
pusha
insl
or
mov
outsb
adc
or
addr16
rorb
pop
adc
bound
flds
or
fistl
push
push
inc
jp
mov
sbb
in
loopne
in
sti
sbb
test
aam
lds
ss
leave
push
dec
int
and
inc
loope
insl
or
or
or
ret
sbb
flds
or
sub
in
mov
and
adc
mov
xchg
adc
stos
fistl
xchg
xchg
sahf
mov
mov
flds
fs
test
mov
pop
ljmp
in
jge
sbb
pop
shrl
or
dec
dec
test
fwait
or
call
push
mov
or
jbe
test
or
test
or
test
cmp
ja
or
push
insl
or
inc
push
aaa
adc
lcall
or
test
push
scas
stos
bound
inc
into
faddl
outsb
mov
test
or
insb
inc
or
cmp
inc
or
dec
push
cwtl
insl
or
push
pop
inc
add
inc
fs
call
lret
insb
inc
enter
xchg
or
sub
xor
ja
xchg
and
pop
mov
or
ret
or
sbbb
mov
mov
hlt
clc
flds
in
or
or
adc
push
sbb
adc
xor
test
mov
fdivl
or
xor
jo
or
adc
lcall
xor
push
sbb
scas
pop
flds
or
sbb
pop
outsl
pushl
flds
das
jo
inc
xor
cmp
pop
adc
and
fildl
popa
in
mov
dec
push
pop
mov
or
sub
out
cmp
call
xchg
fisubs
or
xchg
fs
movsb
flds
insl
or
push
or
jge
or
pop
sbb
push
inc
out
push
adc
inc
cmpsl
or
fbstp
fistl
inc
or
fisttpll
stc
les
sbb
or
scas
or
add
sub
and
mov
sbb
add
ljmp
mov
imul
fiaddl
testb
adc
xlat
into
inc
dec
jnp
mov
loop
sbb
xchg
addr16
dec
movsl
repnz
movsb
sbb
xchg
lret
add
dec
push
jns
mov
mov
dec
in
and
or
jp
jl
xor
ret
insb
inc
or
add
decb
jle
pushf
das
bnd
xchg
xor
and
adc
int
test
jns
int3
ss
fistl
or
ret
call
cwtl
cld
mov
lcall
mov
or
xchg
sbb
sub
sbb
int3
ss
jo
or
stc
insb
xchg
mov
mov
popa
mov
int3
or
or
add
test
and
add
mov
and
pushf
cs
cmp
cmp
addr16
in
add
push
cmp
repnz
or
sub
mov
mov
ret
shrb
or
call
mov
mov
inc
lock
insl
js
cmp
add
jl
mov
repnz
int3
inc
inc
sbb
and
xor
insl
loope
mov
sar
xchg
iret
add
xor
or
jl
sbb
xchg
jecxz
mov
push
clc
jl
aas
pop
pop
cs
insl
or
sbb
or
mov
cmp
mov
mov
pusha
ljmp
inc
mov
or
and
or
insl
or
aas
fisttpl
bound
test
data16
int
or
adc
and
cmp
shlb
or
jo
pop
into
push
cwtl
insl
or
and
sbb
ret
or
cmpsl
nop
orb
or
loope
sbb
mov
or
sbb
adcb
or
insb
inc
xor
in
in
insl
or
or
in
int3
test
loope
or
adc
jo
sbb
push
clc
inc
pop
push
test
add
add
loop
adc
ss
cmpb
out
stc
call
xchg
mov
in
mov
mov
or
adc
push
sub
out
shrl
or
inc
clc
scas
flds
flds
psubsb
mov
mov
shrb
test
loop
out
push
call
or
insl
or
sub
sbb
or
mov
cmpsl
fwait
insl
or
fwait
insl
or
sbb
sub
rolb
insl
or
popf
or
jno
mov
fadd
or
subl
in
push
popa
ljmp
in
adc
scas
cs
fstps
inc
mov
push
or
pusha
sub
mov
jecxz
shrl
orb
jno
mov
inc
call
aaa
mov
inc
sub
or
xchg
xor
pusha
push
mov
sar
xor
adc
or
jmp
call
or
adc
push
je
adc
xchg
or
call
stos
xchg
and
lods
mov
test
or
or
je,pt
push
mov
jo
lea
or
dec
add
inc
mov
add
add
ss
les
xor
adcb
cwtl
or
sbb
cmp
mov
scas
movsb
or
mov
or
stos
cwtl
insl
or
loope
or
int3
push
push
rolb
or
ss
cmp
xor
scas
push
int
or
push
mov
xchg
scas
lcall
push
loope
fwait
mov
addb
loope
sbb
jmp
and
mov
insb
inc
pop
cmpsb
btr
adc
or
inc
mov
inc
mov
int3
ss
mov
flds
sbb
cmp
lret
sbb
push
outsb
add
inc
int3
sysret
fcoml
int3
ss
lea
and
xchg
cmp
mov
and
sbb
push
sub
mov
or
jne
fistl
movsl
mov
test
outsl
test
pop
int3
cmovge
xchg
scas
dec
and
flds
ss
inc
rorl
test
mov
aad
xchg
cmpsl
pop
or
ss
rol
insb
inc
andps
mov
das
das
sbb
ror
cmpsb
test
xchg
int3
ud2
jo
add
int3
ss
and
in
add
pop
xchg
loope
jo,pn
pop
shrl
movsb
mov
loopne
arpl
or
int3
repz
cmp
and
mov
add
andl
lss
loopne
xor
je
aam
adc
cs
test
add
flds
fistl
outsb
orb
xor
xchg
cmp
xor
flds
insl
sub
insl
or
mulps
xchg
and
insb
inc
or
mov
sub
movnti
push
imul
loopne
add
adc
stos
mov
inc
and
mov
add
sahf
dec
rolb
push
push
int
shld
mov
les
mov
pushf
outsb
getsec
sub
call
decb
int3
ss
stos
cmovg
inc
or
or
add
mov
inc
pop
or
btr
incl
rcll
call
fistl
into
and
flds
push
xchg
orb
xlat
sbb
sub
or
punpcklwd
sub
adc
mov
pmulhw
sbb
cmp
adc
test
mov
add
int
test
or
inc
or
cmovl
xor
or
fistl
andps
insb
inc
sbb
punpcklbw
or
sub
cwtl
rsm
or
int3
ss
xchg
cwtl
insl
or
mov
xchg
push
insb
adc
jmp
aaa
xchg
fstpt
push
xlat
add
pop
adc
dec
add
leave
flds
and
orl
ljmp
ds
ss
xor
stc
into
sub
ret
pcmpgtb
push
ljmp
imul
inc
js
pop
mov
and
rorl
cmp
push
jge
stos
out
orb
mov
aaa
ret
out
adc
imul
jne
jns
divb
call
cwtl
popf
sbb
lock
sub
xchg
ss
sbb
lds
push
pusha
xchg
xchg
lret
out
mov
xchg
stos
aas
xor
frstor
addr16
push
pop
mov
loope
test
sbb
push
xadd
fs
or
or
add
mov
addb
enter
int3
movsb
mov
ds
sub
pop
imul
sbb
push
popa
andb
push
sbb
fistpll
push
mov
mov
fstpl
enter
adc
cmp
jnp
push
sub
dec
push
jns
iret
leave
gs
xorl
sub
popf
xor
pop
dec
xchg
jg
mov
push
loopne
jmp
mov
mov
test
jb
xchg
adc
sbb
insb
inc
xor
mov
mov
mov
or
stos
flds
jo
or
xchg
sub
test
and
lds
lods
sub
mov
adc
flds
es
lods
out
aaa
xor
or
xchg
test
mov
rorl
inc
and
sbb
cwtl
or
or
mov
or
ljmp
int3
ss
sbb
or
es
inc
dec
or
cwtl
insl
or
or
mov
loope
inc
cmp
and
add
fimuls
not
imul
jmp
or
es
insl
or
mov
xlat
and
adc
bound
js
fisttpl
sbb
mov
arpl
add
mov
insl
or
inc
mov
ret
or
or
sbb
sub
cs
mov
pushf
pusha
or
ret
js
insl
or
outsl
test
lcall
enter
dec
pop
fcoml
mov
outsl
mov
or
out
shrl
push
and
pushf
rcrb
push
and
fmuls
subl
mov
sbb
fistl
out
arpl
or
fistl
out
pusha
or
inc
adc
xor
popf
adc
xor
or
or
sub
cmpsl
cli
adc
inc
or
xor
push
int3
ss
xor
mov
faddl
pushw
inc
or
or
fdivrs
in
or
mov
mov
shll
inc
in
lahf
mov
pusha
or
add
sub
ret
xor
or
sbb
and
dec
adc
cmc
test
jmp
or
loope
lods
or
ret
or
inc
add
jae
fsubs
lds
fsubrl
test
cmp
call
bound
mov
ss
add
sbb
or
mov
mov
call
xor
or
xor
ss
pop
pop
insb
imul
xor
adc
mov
flds
in
shll
or
mov
dec
repnz
mov
ss
xchg
mov
push
add
shrb
xchg
cmpsb
sbb
push
or
dec
jne
jo
xor
adc
and
or
xor
or
mov
push
cwtl
insl
or
and
ret
or
shlb
xchg
movsb
xor
and
loopne
pop
cmpsl
or
les
int
or
xor
or
mov
pop
inc
cwtl
fsubrs
les
repz
and
push
or
or
xor
ss
ja
int3
or
mov
cmp
or
adc
mov
cmp
push
push
xor
xchg
loop
add
ss
mov
sbb
stos
or
or
test
insb
inc
jo
add
or
or
or
adc
pop
push
xor
mov
pusha
mov
or
or
in
je
ljmp
add
dec
push
sub
flds
sbb
loopne
push
or
add
stc
pop
mov
loope
add
lcall
or
movsl
mov
mov
sub
mov
push
inc
add
ret
sbb
pusha
push
mov
push
dec
ret
inc
int3
add
add
int3
test
push
and
cmp
add
add
add
adcb
add
mov
cmp
add
xchg
and
mov
movsl
pusha
mov
scas
xchg
bound
int
add
mov
and
or
enter
sbb
inc
xchg
or
int
lods
nop
jmp
outsl
mov
movsb
xor
mov
fsubs
push
movsb
mov
or
jno
insb
inc
test
div
lock
adc
dec
movsb
pusha
xor
and
fdivs
and
notl
sbb
and
adc
adc
aaa
out
bound
xor
lods
xor
fistl
idivl
inc
mov
popa
pusha
negl
ret
mov
xchg
testl
add
testl
pop
push
pusha
push
cmp
adc
testl
or
testl
mov
ds
test
dec
sbb
pop
dec
or
call
add
out
sbb
jo
ret
pop
or
pop
sub
ret
inc
insb
inc
jo
test
cmp
bound
ret
xor
inc
cmp
inc
or
inc
insb
mull
mov
imull
notl
nop
fisttpl
cmpsb
bound
ret
or
adc
xor
xchg
test
mov
mull
mov
mov
pop
inc
mov
mov
fld
or
insb
std
test
insl
std
jns
and
mov
mov
dec
sbb
fistl
lods
les
inc
inc
add
push
fdivs
push
and
push
lds
and
xchg
mov
jo
xchg
insb
inc
sbb
fistl
mov
xchg
xor
jo
and
mov
loope
xchg
cs
or
cli
xchg
ficomps
pop
sbbb
js
fadds
loope
sub
popa
jo
mov
push
or
insb
inc
aaa
mov
dec
dec
aaa
and
adc
movsb
jecxz
sub
xor
jae
adc
pop
movsl
jp
imul
std
mov
mov
xchg
aam
inc
dec
adc
test
fstpl
sbbb
push
sbb
jg
jns
rcl
das
dec
mov
sbb
add
mov
add
fucomp
mov
jns
add
dec
jb
add
mov
add
jnp
loope
cmp
cmp
ret
dec
scas
jb
addl
adc
insl
dec
cwtl
push
popf
test
ss
ljmp
sbb
cmpsl
or
dec
inc
xor
aam
adc
shrb
and
fdivl
dec
mov
fistpl
pushf
dec
sbb
mov
je
lret
in
cmp
cmp
mov
xchg
or
mov
dec
test
push
clc
and
pop
je
adcb
xlat
adc
jo
daa
dec
dec
shlb
clc
adc
roll
inc
jo
dec
popf
ss
lods
xchg
and
push
mov
test
dec
rclb
adc
imul
or
cmpsl
or
inc
adc
pop
dec
clc
cmpsb
jno
imul
sbb
dec
mov
faddl
addl
mov
roll
cmp
dec
cmp
clc
fldz
mov
dec
loopne
inc
jno
adc
test
es
ret
dec
xchg
adc
sbb
roll
ret
dec
xlat
mov
and
cmp
imul
dec
mov
scas
cmp
pusha
dec
inc
pushf
ss
jb
imul
xchg
fistpl
mov
inc
push
cs
cmp
sbb
std
imul
push
dec
dec
push
xchg
pop
sbb
sbbl
enter
jo
out
loopne
sbb
cmpsl
or
or
and
loope
rolb
and
pop
mov
cmp
cs
pmaxsw
xor
ss
stc
idivl
mov
and
pop
lds
pop
jl
dec
sbb
mov
mov
pop
sbb
add
jo
rolb
or
xchg
mov
cmp
push
inc
cmpsl
pop
orb
jo
pop
test
mov
xchg
push
dec
sbb
mov
pop
subb
dec
mov
pop
lcall
pop
roll
mov
test
dec
jmp
mov
dec
push
sbb
fisubrl
cmp
into
imul
pop
mov
adc
and
dec
inc
mov
es
jbe
pop
sub
inc
or
adc
and
call
or
push
ss
dec
pop
xorb
add
popa
inc
mov
cltd
jno
icebp
out
out
mov
or
adc
stos
mov
mov
mov
xchg
pop
cmp
xor
insl
or
inc
or
mov
jno
adc
jne
adc
sahf
insl
or
mov
jne
loope
jmp
ljmp
xchg
sbb
mov
repz
or
cmp
lds
test
add
jno
jne
sbb
sbb
xchg
push
bound
jne
adc
ret
jne
xor
ret
loop
or
sub
xchg
xor
inc
mov
dec
dec
dec
push
jne
jmp
mov
es
ss
cmp
jne
repz
enter
rclb
jne
mov
into
sub
push
insb
inc
jne
adc
adc
es
sbb
bound
jne
add
ret
adc
inc
jb
lea
jne
ss
and
jne
and
sbb
and
das
adcb
push
sub
jne
push
push
lock
movsb
and
inc
mov
je
ret
mov
add
jne
insl
or
dec
ljmp
or
test
inc
mov
xchg
mov
and
add
mov
jne
ds
aaa
cmp
cmpsb
cmp
iret
in
pop
ss
inc
sbb
jb
test
inc
add
sbb
dec
pop
sub
xorb
in
je
mov
mov
sub
fadds
cmp
cmpsb
sbb
sub
mov
and
add
mov
or
and
fistl
sahf
adc
and
test
cmp
mov
shrl
push
insb
inc
js
jne
jbe
xchg
adc
mov
stos
and
lea
in
out
fchs
sub
int
arpl
ret
bnd
mov
jne
scas
mov
movsb
add
cmpsb
cmp
lock
or
stos
fcomps
fsubs
add
cs
mov
jne
lods
nop
xor
test
and
fistpl
jmp
cs
xchg
add
jne
or
mov
push
mov
fistl
jne
ja
mov
fs
inc
insb
inc
jne
inc
pop
mov
inc
ret
ja
jne
mov
mov
repz
in
push
pop
stos
out
in
das
sti
mov
les
fsubrs
pslld
in
outsl
mov
in
fnsave
pcmpeqd
pop
scas
call
push
into
ficoml
outsb
sbb
adc
movsl
lock
aam
inc
movsl
ror
mov
sbb
leave
je
call
mov
popf
es
sbb
inc
xchg
inc
es
sbb
adc
sbb
dec
xor
pop
inc
insl
or
movsl
sarb
sbb
test
sbb
pop
lea
in
shrl
sub
mov
xor
push
aam
mov
movsl
test
jp
movsl
adc
add
leave
and
and
inc
movsl
sbb
inc
sbb
inc
movsl
dec
or
dec
fcmovnbe
or
mov
inc
mov
pusha
pop
mov
cld
mov
fstl
inc
mov
pusha
mov
dec
addb
repnz
xchg
sbb
add
adc
add
and
adc
es
adcl
add
xor
add
mulb
adc
push
or
cwtl
or
cwtl
std
add
or
adc
adc
xlat
mov
loope
push
xlat
fimull
xlat
clc
add
adc
add
rcl
ss
scas
mov
enter
mov
pop
add
cld
xlat
mov
add
into
in
add
insb
inc
or
in
inc
imul
sahf
lea
adc
sub
test
add
lds
imul
imul
or
sub
mov
sub
ret
imul
add
adc
adc
push
fistl
dec
dec
imul
or
mov
xchg
imul
ss
arpl
or
adc
imul
imul
insl
imul
bound
imul
insl
or
push
mov
loope
imul
imul
roll
mov
mov
imul
imul
test
mov
fcoml
clc
inc
mov
loope
imul
or
xchg
and
push
mov
pushf
dec
or
and
mov
xchg
inc
pop
js
sub
inc
mov
or
popa
imul
cmp
inc
xor
data16
jge
add
xlat
pushf
repnz
add
and
in
insb
pushf
jne
inc
push
mov
add
jbe
sarb
ficoml
jge
pushf
jo
enter
pop
push
adc
jge
dec
mov
rcll
std
ret
cwtl
push
je
imul
sbb
push
jge
add
mov
sar
xchg
adc
adc
cmpsb
jge
push
addb
jno
push
sbb
pop
pop
jne
adc
adc
rolb
push
into
imul
or
jge
and
adc
ljmp
jge
mov
imul
add
jge
in
or
fcoms
pushf
ss
pop
nop
adcl
enter
int
cmp
cmp
sbb
dec
pop
add
add
xchg
inc
roll
or
add
or
add
lret
pop
xor
cmp
jge
test
popf
test
mov
mov
sbb
cmp
mov
jge
and
mov
xchg
call
call
jbe
jge
ja
fnstenv
mov
push
es
jge
loope
and
jge
pop
inc
mov
les
and
pop
adc
incb
fildll
call
imul
dec
inc
hlt
ret
rol
inc
loopne
lret
push
xor
mov
shll
dec
mov
sub
jmpw
imul
jo
adc
cmp
or
inc
xchg
push
jecxz
fucomip
or
push
inc
adc
rcl
cmp
add
aas
cmp
xchg
xor
xor
cmc
sbb
add
adc
cmp
repnz
xchg
xchg
nop
ds
shlb
inc
repnz
mov
movsb
jle
cmp
nop
rol
inc
jge
addr16
cmp
cmc
add
xchg
enter
mov
shrb
lock
add
shl
into
nop
lret
out
jle
mov
sub
dec
mov
dec
and
call
xchg
cmp
pop
in
sbb
lea
jge
pop
rolb
into
mov
rcr
adc
or
call
dec
movsb
inc
dec
pop
lcall
mov
inc
rcrb
sbb
enter
mov
or
test
hlt
xchg
mov
rorb
testb
test
and
aaa
popf
ss
inc
pop
call
ss
inc
enter
jge
xor
call
xchg
js
mov
fsubrs
insl
or
ljmp
push
cmp
fadds
es
ss
and
add
jge
or
dec
sbb
pop
mov
push
inc
cmp
xchg
shlb
lods
inc
and
loop
cmp
jge
ficoml
inc
pop
and
dec
add
loop
jge
cmp
ss
shrb
sbb
jge
es
push
cmp
adc
jne
jge
dec
sbb
mov
dec
sbb
loope
cmp
insl
or
mov
loope
cmp
repnz
add
sbb
add
cmp
xchg
jo
je
jge
je
mov
xchg
fs
cmp
jge
imul
and
mov
dec
jge
roll
movaps
jle
adc
mov
jl
cs
call
xchg
insl
or
jge
jg
nop
dec
ret
in
adc
scas
fs
sbb
sbb
and
rcll
or
mov
add
mov
imul
sub
pop
scas
mov
dec
sahf
adc
cmp
cwtl
test
add
mov
mov
cld
mov
mov
adc
cmpsl
jge
sbb
imul
add
mov
hlt
push
sbb
and
pop
inc
and
xor
mov
cwtl
mov
and
push
jmp
xor
insl
jge
ja
test
inc
lods
cmp
jge
adc
imul
ret
ss
dec
sbb
nop
jge
test
mov
and
jne
push
call
push
mov
cmp
sbb
imul
xorl
sbb
sbb
and
dec
jge
ret
mov
add
add
dec
sbb
cmpsl
or
add
sti
pop
daa
dec
sbb
ficoml
add
jge
or
int3
sbb
jge
mov
xorb
and
shl
fadd
test
mov
adc
sbb
jge
sbbl
adc
xor
push
stos
imul
push
xor
add
fiaddl
cmpsl
or
jo
adc
mov
jo
mov
add
cmp
cmpsb
bound
imul
add
xchg
data16
add
ret
imul
push
rolb
dec
sbb
sub
popf
ss
push
in
add
fwait
push
mov
rolb
adc
or
mov
add
fiaddl
mov
add
lock
call
ficoml
push
sti
add
aam
scas
ret
add
and
test
push
loopne
and
add
add
adcl
call
inc
popf
ss
in
add
xor
add
les
popf
add
mov
xchg
push
dec
sbb
test
adc
pop
sahf
mov
adc
sahf
pushf
mov
lea
test
test
sarl
mov
into
sti
ret
loope
jge
je,pn
imul
adc
add
shrl
adc
mov
add
or
inc
add
adc
insl
add
icebp
add
mov
je
arpl
sbb
add
mov
add
adc
or
enter
insl
add
sub
jns
clc
jmp
adc
mov
pop
cld
jp
jo
add
add
xchg
dec
sub
xchg
adcl
movsl
dec
mov
pusha
outsl
jb
test
inc
jb
fiaddl
sbb
cmp
add
add
cmpsl
add
mov
leave
mov
or
loopne
dec
in
cmpb
jbe
and
add
jo
add
mov
add
out
nop
cmp
sahf
lods
jmp
add
jmp
cmp
dec
sbb
add
cmp
add
xchg
add
mov
cmp
add
dec
loopne
test
bound
jae
dec
inc
in
adc
add
inc
cmp
dec
cmp
or
push
pushf
ss
pushf
ss
in
cmp
shlb
fisubrs
push
adc
imul
fmuls
sbb
or
fldt
adc
loop
jmp
test
jmp
add
sub
loopne
dec
sbb
add
aaa
xchg
add
daa
data16
push
cmpsl
or
ficoml
add
ret
ret
arpl
les
add
addb
or
sbb
mov
mov
pop
mov
adc
scas
movsb
cmp
add
out
ds
or
inc
pushf
ss
mov
inc
xor
insl
or
jo
imul
mov
add
or
add
xlat
and
add
aas
or
or
out
mov
cmp
or
mov
adc
or
js
dec
sbb
push
add
jne
add
xlat
lret
cmp
add
mov
sbb
jbe
insl
or
ficoml
sbb
cmp
inc
add
or
jo
ds
jo
sbb
ds
dec
dec
sahf
les
add
lds
insl
or
cmp
aaa
fnstenv
cwtl
or
add
sub
popf
test
pop
and
ret
push
add
mov
imul
sbb
jg
add
subl
mov
lods
xchg
int
inc
mov
cmpsl
or
sbb
sbb
add
mov
roll
pusha
push
add
pusha
add
adc
test
cmpsb
mov
insl
xchg
mov
sbb
cmp
jb
inc
mov
sub
add
les
imul
pop
rolb
insl
or
popa
jl
ficoml
xchg
ret
roll
adc
jle
test
push
bound
push
loope
outsb
mov
ret
je
push
xor
mov
mov
ja
ficoml
int
sub
pop
inc
test
test
sub
or
int
inc
or
mov
sub
jb
jo
cmp
ja
test
add
jg
or
aam
sub
pop
cmp
push
dec
mov
inc
sbb
leave
jle
or
inc
sbbl
insl
or
insl
dec
shlb
mov
insl
or
sbb
push
ss
test
sub
push
xchg
movsb
ret
cs
test
pop
clc
lods
mov
loopne
xchg
add
out
mov
sub
outsl
in
sbb
xchg
dec
shll
nop
jae
adc
cs
pop
cmp
dec
inc
pop
les
xor
popf
loopne
or
clc
ja
outsb
inc
and
and
in
xchg
xchg
ljmp
lret
lds
andb
iret
and
lahf
sub
cmpsb
lds
pop
sbb
add
rcll
jae
pushf
or
pusha
cmp
ljmp
jmp
arpl
lock
rclb
nop
push
mov
add
loope
push
cmp
aas
sbb
xchg
fisttpl
imul
shr
adc
mov
pop
ja
xor
mov
mulb
push
lea
sub
add
jp
sub
add
addb
stos
and
jo
push
and
inc
mov
jnp
xchg
js
adc
xlat
repnz
xor
jg
cld
push
mov
dec
jmp
loope
scas
mov
mov
or
push
adc
fisttpll
test
jge
adc
push
sahf
ss
push
mov
test
test
stos
xchg
sub
jns
mov
push
testl
push
lods
imul
out
xchg
mov
jle
jmp
out
push
dec
lea
scas
adc
xchg
rorb
and
mov
rclb
push
fcoml
inc
icebp
enter
jno
fldl
cmpl
push
sbb
pop
out
xchg
sti
jmp
xchg
sarb
dec
sub
push
push
out
or
cwtl
arpl
or
or
andb
sbb
push
xchg
or
popa
insl
and
or
push
cld
cmpl
add
push
test
sbb
ret
dec
mov
inc
and
arpl
add
ds
add
ja
cmp
inc
jmp
insb
or
loop
jno
adc
push
push
test
dec
addr16
add
fwait
push
push
in
andl
bound
pop
adc
mov
add
lahf
ljmp
addr16
mov
insb
insl
add
mov
dec
movsl
lret
aad
adc
pop
insl
xchg
bound
adc
lods
inc
sbb
cmp
mov
insl
ret
xor
pop
std
imul
xor
xchg
lods
pop
and
data16
stos
pop
test
out
jb
xlat
or
pop
adc
dec
adc
test
scas
dec
mov
insl
lret
xchg
xor
fwait
subb
leave
xor
pop
insl
cld
dec
mov
popa
dec
sub
test
mov
sbb
insl
out
inc
rol
insl
les
pop
loop
pop
popf
test
gs
insl
pusha
adc
pop
pop
ss
sbb
adc
sbb
cmp
add
and
fcoms
or
insl
js
sbb
lret
insb
or
insl
ret
clc
sub
sbb
adc
cld
push
or
scas
add
adc
pop
ss
mov
insl
mov
dec
jne
adc
ret
imul
xchg
addb
sbb
mov
std
jns
ss
rep
gs
xor
imul
and
xchg
insl
addl
insl
mov
gs
mov
mov
xchg
in
and
cmpsb
cld
inc
adc
scas
in
push
adc
cmp
jle
push
mov
add
enter
add
mov
add
push
add
cmp
loope
gs
mov
or
vmovntps
push
sub
mov
pop
mov
mov
out
xlat
xchg
add
out
and
out
repz
xchg
or
jae
adc
jbe
adc
push
out
jo
inc
in
aas
call
pop
jo
gs
out
add
mov
xchg
push
lock
notb
pop
or
jbe
pop
and
jp
xchg
add
jns
mov
shll
loop
push
sub
push
push
rolb
push
xchg
insb
xor
adc
dec
push
mov
adc
dec
sub
mov
push
or
push
or
incb
incl
or
adcl
push
arpl
and
and
xor
xor
cmpb
in
stc
mov
js
dec
ja
loopne
xorl
or
sbbl
inc
adc
cmp
cmp
jmp
push
pop
lcall
scas
sub
adc
adc
inc
pop
jo
adc
test
xorl
cld
inc
push
add
sub
mov
dec
pop
test
and
xchg
call
subl
or
sub
and
adc
xlat
adc
mov
mov
test
fiaddl
test
push
sbb
mov
test
xorb
pop
out
daa
or
adc
mov
push
cwtl
pop
mov
and
pop
andl
pop
scas
adc
and
ss
jo
cmpsb
push
sbb
test
push
and
jns
cmp
je
or
cli
shlb
push
repnz
mov
mov
pop
mov
push
xorb
mov
lds
inc
retw
movsb
pop
mov
mov
fs
hlt
pop
push
stos
pop
add
cmc
adc
pop
mov
adc
stos
adc
mov
sub
fisubrl
xchg
mov
sub
insl
and
insl
loope
sbb
aam
andb
ret
mov
daa
mov
push
add
inc
aaa
lods
pop
cmp
jl
inc
fildl
mov
popa
mov
push
lock
ss
inc
or
sbb
insl
or
mov
dec
add
add
pusha
xor
das
popf
cwtl
and
jle
dec
xor
in
pop
mov
inc
call
nop
out
jmp
push
jb
inc
mov
leave
fidivrl
inc
jae
jecxz
cmp
out
cltd
xor
xor
and
popf
jne
adc
fisttps
xor
push
pop
ja
mov
push
jo
adc
in
mov
xchg
push
test
lods
push
cltd
test
xchg
nop
mov
or
inc
xchg
jge
gs
enter
je
xchg
pop
std
imul
orl
pop
xchg
or
xchg
or
xor
cs
dec
push
das
test
mov
xchg
pop
ss
pop
adc
jne
adc
sbb
mov
or
or
mov
addb
lret
xchg
into
inc
xchg
or
adc
mov
or
das
xchg
jb
subl
insb
out
popa
fs
loopne
das
mov
push
xor
push
shll
jle
gs
pop
adc
inc
mov
das
ror
and
gs
mov
inc
adc
ret
decl
adc
ljmp
popf
test
push
push
sub
jnp
pop
mov
call
sbb
ss
or
lcall
fcoms
out
jnp
mov
or
adc
push
jmp
mov
mov
sbb
call
mov
sbb
xor
jo
ss
push
jno
ret
and
outsl
mov
push
push
mov
sbb
pop
xor
xchg
mov
fstpt
arpl
test
nop
fs
push
mov
ja
xor
xchg
andl
or
jnp
ret
shrb
cmp
inc
imul
aad
outsl
cmp
jno
cwtl
adc
inc
jmp
or
xor
sbb
ljmp
and
push
jo
lods
mov
and
xor
insl
mov
inc
adc
add
sti
fcom
mov
mov
inc
movsl
mov
inc
sbb
push
adc
ret
pushf
lods
sbb
cmp
insl
dec
adc
xor
adc
mov
clc
dec
and
fisubrl
adc
scas
add
mov
adc
je
and
dec
movsb
inc
push
popa
ljmp
sbb
xor
and
inc
sbb
sbb
sbb
push
loopne
cs
testl
sbb
push
fdivl
aad
cld
cmp
mov
call
rolb
jl
test
push
xchg
es
push
sti
inc
dec
jmp
out
inc
dec
pop
dec
and
scas
call
bound
cwtl
lret
cltd
xor
cltd
aam
roll
mov
add
mov
mov
cltd
push
call
aam
jns
aad
roll
ret
push
sub
ret
lret
inc
insb
clc
xchg
mov
mov
jmp
and
add
xchg
push
adc
ds
mov
test
pop
adc
lds
add
repz
cmp
fwait
cmp
push
jle
decl
mov
aas
push
test
sbb
jmp
dec
inc
dec
dec
sub
fists
incb
mov
mov
dec
mov
cmp
pop
nop
push
lahf
loop
mov
pop
inc
push
imul
mov
jg
mov
insl
and
mov
mov
jne
fdivrs
pop
mov
dec
fiadds
mov
mov
mov
xchg
dec
push
adcb
cs
push
mov
add
xchg
fdivrl
jne
add
aad
jmp
jmp
in
paddsb
subb
sbbl
bnd
adc
adc
jmp
jbe
sub
je
jb
arpl
std
push
dec
xor
clc
insl
aas
in
int
in
daa
cltd
in
push
inc
cmp
push
cmpsb
cwtl
lods
cmp
out
pop
mov
test
xor
into
movsl
mov
push
cli
decl
inc
mov
pop
push
xchg
push
mov
das
push
jle
sub
shl
inc
xchg
out
adc
dec
fldt
lahf
dec
or
sarb
lret
sub
call
mov
xchg
mov
testl
lea
inc
xorb
ret
fs
js
push
lahf
pop
lds
push
bound
jmp
into
mov
sub
push
add
cltd
pop
cmp
dec
in
pusha
xor
stc
push
sbb
incb
adc
insl
fistl
out
sbb
ss
mov
push
fcomps
std
dec
fsubr
jecxz
cmp
push
xlat
popa
push
je
rolb
popa
ja
xchg
fcmovnu
mov
stos
xlat
mov
pinsrw
sarb
xor
scas
push
test
std
inc
sbb
test
mov
lcall
enter
nop
sub
fs
push
lods
xor
lcall
inc
ds
lcall
call
mov
stos
cmp
lds
int3
and
xor
jle
scas
add
out
dec
jg
dec
push
aas
mov
nop
dec
in
lock
xor
push
jo
mov
dec
repz
jg,pn
pop
dec
out
jle
dec
aas
push
cmp
inc
push
sub
scas
movsb
push
mov
mov
inc
push
pop
cmp
xor
push
dec
sub
loopne
sub
jg
aaa
jecxz
jns
sbb
sub
scas
repz
dec
fmull
out
inc
ds
test
clc
sbb
jmp
out
cwtl
xor
mov
sti
negb
rorb
stc
pop
mov
xchg
scas
loopne
lcall
push
sub
in
pop
mov
enter
mov
or
js
std
cs
into
push
fisubs
push
aas
xchg
in
and
fimull
push
and
jo
push
mov
mov
mov
cmp
push
push
mov
dec
jo
addr16
jge
stc
inc
mov
push
outsb
xchg
xor
gs
push
mov
push
decl
loopne
inc
aad
lahf
in
xchg
cli
push
mov
loope
jmp
jb
movsl
dec
sbb
xchg
fcomps
test
pop
test
jns
and
xchg
xchg
sub
dec
gs
lret
pop
mov
movsb
xor
test
push
test
push
outsb
or
add
pop
fcomps
outsb
nop
lret
dec
fadd
clc
outsl
gs
ja
sbb
add
push
and
xor
cmp
mov
or
sbb
jmp
outsl
mov
push
cmp
sti
add
pop
jno
jl
fnsave
push
andb
jb
mov
fisubrl
push
mov
stc
in
xor
mov
jno
js
lahf
sub
sub
dec
das
adc
movsb
lret
aas
fsub
aas
dec
in
movsb
in
test
aam
pop
sbb
cmp
jnp
je
cli
push
inc
scas
int3
sbb
xchg
mov
xor
xchg
inc
sub
gs
lret
pop
test
movsb
xor
cwtl
inc
lods
adc
cmp
sub
mov
movsl
popa
aas
es
aas
out
sbb
loopne
shlb
pusha
mov
or
sbb
lcall
mov
outsl
fnsave
pushf
push
in
pusha
addr16
sbb
fstpt
es
adc
outsl
mov
xchg
cmp
and
aam
mov
inc
jbe
sub
pop
mov
cltd
adc
lret
dec
and
xor
add
xchg
out
inc
xor
add
push
lea
xchg
stos
cmp
subb
outsb
mov
or
xor
ja
rcrl
and
fcomi
lahf
outsl
push
andb
sahf
push
jge
insl
and
fisttpl
fsubrl
scas
call
mov
outsb
pop
out
arpl
sar
in
xchg
dec
clc
scas
shrb
call
jb
adc
outsb
inc
push
jns
push
mov
shrl
loopne
inc
ret
inc
inc
sub
out
inc
imul
pushl
fisubrl
inc
push
and
xlat
sbb
lahf
mov
xchg
dec
ds
jge
or
xchg
jle
add
mov
xchg
and
cmp
cltd
fs
xchg
int
push
scas
cmp
cmp
adc
dec
rorl
adc
inc
test
push
mov
popa
adc
scas
inc
fwait
je
enter
dec
pop
fs
aaa
enter
inc
sbb
ret
or
les
push
gs
ljmp
and
lods
jmp
push
loop
lods
std
je
or
fnsave
mov
cmp
ror
fisubs
vmwrite
inc
subb
test
cld
cli
cmpsl
out
mov
dec
aaa
jmp
lahf
dec
add
cmpl
out
sbb
xchg
clc
fucomp
pop
sub
inc
fisubs
jmp
frstor
vmwrite
lods
fildll
xor
ret
mov
movb
cmp
mov
push
lock
call
scas
and
dec
cmpsb
scas
dec
sub
push
sub
stc
adc
loop
dec
jb
cmpsl
subb
xchg
xchg
jnp
test
inc
sahf
mov
lods
pop
mov
pmulhuw
xlat
fimuls
push
mov
das
mov
pop
addl
je
xor
imul
lds
into
js
stos
stc
outsl
mov
ds
rclb
scas
bound
and
aas
jl
and
add
cmp
out
sub
out
inc
pop
mov
fstl
inc
rcrl
push
adc
ret
dec
mov
movsl
mov
jno
lods
lcall
sub
push
bound
inc
in
xchg
or
notl
call
lret
push
push
cmp
mov
inc
inc
jo
stc
jl
push
inc
dec
stos
adc
incb
rorl
pop
pop
daa
jge
xchg
iret
jg
inc
xadd
out
push
cmpsb
mov
fsubrs
add
add
inc
jo
outsl
mov
je
shld
add
cld
lcall
aas
inc
gs
push
adc
cmpsl
dec
jmp
ljmp
xchg
shrl
adc
push
enter
cmp
enter
adc
jge
jmp
push
mov
mov
adc
mov
aas
ja
push
cmp
sahf
inc
pop
imulb
iret
adc
jle
aad
push
enter
xchg
test
shlb
ja
scas
shlb
popa
mov
in
pop
push
ficoms
xor
dec
cmpsl
xor
mov
xor
aaa
push
cltd
adc
mov
adc
sub
les
add
mov
lret
inc
test
xchg
push
fisubl
or
and
xchg
add
lret
cs
pop
dec
in
cwtl
push
call
jbe
pop
aas
incb
jmp
lods
mov
cmpsl
decl
enter
and
iret
mulb
insl
out
dec
incb
cs
and
leave
mov
fisttpl
inc
scas
and
cmpsb
push
outsb
mov
sti
fsubr
push
dec
push
clc
and
jns
decb
lock
xlat
or
push
adc
outsl
xlat
popf
dec
call
sbb
ficomps
mov
jmp
incb
dec
xor
xchg
fneni(8087
fcomps
adc
pusha
dec
inc
push
cmp
mov
in
push
sahf
aas
adc
jle
push
push
jmp
pop
jbe
push
xor
mov
in
mov
add
xchg
shlb
jmp
sbb
jle
out
je
cmp
mov
ds
incb
mov
and
mov
fisubrs
inc
mov
xor
insb
jmp
xchg
imul
adc
or
mov
into
push
sarb
movsb
sub
jmp
orb
es
xorb
add
into
xchg
dec
pusha
pop
lahf
mov
cmpsb
inc
rcll
inc
jbe
in
call
aas
jb
pop
sbb
mov
dec
sbb
aas
dec
movsl
rolb
push
sub
dec
push
fcmovne
mov
ds
outsb
and
adc
lret
aas
xchg
testl
shrb
mov
jle
in
jge
mov
dec
roll
xchg
icebp
leave
test
movsl
addr16
es
adc
cli
push
cs
lret
pop
fcoml
rorb
sub
test
shl
push
fldcw
inc
mov
push
mov
adc
iret
dec
in
aam
std
leave
fs
mov
fsubrl
xchg
addr16
mov
and
push
int3
or
jmp
xorb
xchg
xchg
scas
inc
ljmp
repnz
mov
and
jns
jle
stos
mov
cmp
push
mov
enter
sbb
mov
les
repnz
xchg
mov
jns
inc
push
adc
insb
in
punpcklwd
push
pop
push
cmp
cmp
cltd
or
jns
inc
mov
sub
in
cmpsl
sbb
popa
adc
push
test
jge
adcl
mov
push
cmpl
push
sbb
jns
rorb
add
adcl
movsb
out
xchg
inc
loopne
sbb
fnsave
pop
jo
xchg
aaa
mov
rcrb
stos
or
outsb
pop
gs
popf
dec
add
fnsave
lret
out
shll
inc
jo
mov
fistpl
mov
adc
jmp
ss
lret
lods
dec
sub
jns
sub
stc
cwtl
push
aam
pop
jmp
mov
pop
ffreep
xor
sbb
andl
fists
sahf
mov
dec
xor
jno
pop
jo
xor
fstpt
jmp
jno
pusha
movsl
pop
outsb
cmp
iret
add
call
inc
sub
enter
lods
movsb
push
push
push
lods
or
mov
fisubs
xchg
lret
into
mov
sbb
sahf
jo
and
lret
cwtl
outsb
jne
movsl
push
xor
in
ja
das
sub
call
cs
enter
loopne
test
repnz
rorl
test
ret
lods
lods
mov
movsl
push
pop
mov
fisttpl
fdivl
std
adc
data16
xor
sub
adc
sub
jne
jge
pop
cltd
pop
sub
adc
icebp
test
adc
repz
lret
jne
adc
push
mov
adc
mov
js
push
mov
popf
int
rol
mov
testb
and
jbe
ja
js
enter
aaa
inc
fiadds
fdivrs
mov
scas
pushf
mov
cmp
lahf
mov
into
mov
ds
jle
nop
pop
push
pushw
xor
jg
cmp
test
inc
in
sbb
clc
fnstsw
stos
pop
aad
adc
or
adc
fldl
lods
insl
xor
adc
out
inc
insl
scas
out
test
loope
sub
push
call
sbb
mov
dec
push
inc
push
in
fisubrl
inc
push
dec
fnstcw
cmpsb
and
mov
ss
popa
sbb
inc
dec
mov
movsl
sub
pop
test
fisttpll
movsb
sarb
loopne
jg,pt
pop
push
in
aas
adc
es
mov
push
sub
outsb
lcall
hlt
stc
vmread
pop
or
add
push
jle
xor
in
lahf
mov
dec
dec
jmp
or
jg
dec
lods
movsb
mov
cltd
pop
push
nop
negl
fstpt
sub
mov
push
sub
add
push
ret
and
push
incb
out
push
fimuls
push
dec
addb
into
popa
loopne
lahf
in
out
das
test
or
fists
movsl
push
push
adc
jno
pop
scas
xor
dec
mov
cmp
pop
scas
subl
add
fbld
fnsave
pop
mov
pop
or
ds
xchg
je
inc
jns
aas
push
lcall
ds
cmp
mov
sub
xchg
jmp
mov
add
rclb
mov
sahf
pop
ret
push
ficomps
pop
fidivrs
adc
dec
aam
xchg
call
pop
dec
enter
dec
sub
inc
fistpll
sub
nop
jle
shr
lock
push
jg
add
push
fsin
xor
nop
fisubs
mov
call
cld
pop
cmp
or
fidivrs
je
jbe
sbb
lcall
push
jmp
pusha
testl
xchg
out
pusha
dec
jmp
loope
xor
out
add
xor
and
int3
es
loopne
aas
or
mov
loop
mov
sbb
fisttps
jmp
dec
loope
adc
jge
pop
cmp
jo
pusha
jmp
movsl
fldcw
pop
sub
outsb
xchg
inc
or
and
cld
add
loope
ds
dec
pop
loopne,pt
adc
in
xor
sahf
dec
dec
pop
mov
lcall
adc
les
sarb
imul
outsb
sub
nop
inc
popa
gs
jecxz
xor
mov
push
xchg
ds
jae
cmp
fcoms
sub
rcr
sahf
push
cmpsb
sub
in
sahf
or
jns
aas
sub
push
cmpsb
mov
sti
ds
out
das
lahf
rorb
push
jmp
sahf
inc
inc
xor
dec
pop
je
push
push
mov
hlt
xchg
stc
pop
and
fnsave
pop
pop
sbb
cld
push
adc
jle
and
into
cmp
or
pop
dec
cwtl
nop
das
xor
ss
xchg
aaa
leave
dec
pop
jb
stos
pop
stos
shrl
ret
test
repnz
xchg
mov
es
jns
dec
pop
push
stos
or
and
stos
shrb
les
das
jns
dec
sub
xchg
mov
bound
fidivl
out
sub
mov
xchg
out
add
sub
or
mov
sub
cwtl
push
test
repnz
incb
out
sbbb
sub
daa
fnstsw
das
push
mov
sbb
adc
mov
push
adc
or
subl
call
sbbb
out
inc
inc
inc
ret
call
inc
sahf
int
jo
sub
loopne
rorl
sub
out
wrmsr
sbb
sbb
lock
fcoml
insb
mov
lcall
test
dec
sbb
dec
frstor
xchg
or
aas
jle
jecxz
inc
mov
nop
cwtl
lods
mov
mov
push
sarb
into
in
fs
xor
cmpsb
push
rclb
mov
fwait
cmc
xlat
sti
cmp
lcall
mov
jecxz
cwtl
push
mov
lock
xor
pop
adc
cmc
xchg
add
ficoms
out
cwtl
sbb
adc
movsb
in
sahf
inc
ljmp
mov
mov
mov
jb
jns
mov
push
in
int
iret
lock
adc
xor
movaps
nop
cmp
dec
sub
loopne
sbb
aas
outsb
sub
nop
aad
leave
repz
dec
decb
ds
cs
sahf
and
adc
mov
inc
nop
jmp
aas
mov
pusha
or
js
fisttpl
cmp
sbb
dec
mov
push
mov
cmp
add
inc
and
push
in
rolb
aas
pusha
cwtl
push
lods
movsb
dec
pop
pop
divl
cwtl
xadd
decb
xchg
scas
cmp
aas
push
and
out
sub
or
in
lcall
scas
enter
xlat
mov
decl
arpl
or
lahf
inc
inc
les
daa
loopne
call
repnz
xchg
or
mov
insb
adc
sahf
dec
inc
fsub
adc
and
repz
movsl
push
cltd
in
mov
out
mov
mov
decb
nop
repz
movaps
push
shlb
stc
mov
scas
and
out
pushf
lods
shl
sahf
les
movsl
repnz
pop
hlt
sub
jno
and
es
daa
jecxz
sbb
and
add
and
add
mov
in
inc
test
jl
lods
push
xchg
sahf
xchg
inc
xchg
and
imul
aas
add
sub
faddl
subb
cmp
outsl
fstl
fisubs
addr16
imul
daa
mov
repnz
and
cmpsb
mov
mov
inc
mov
ss
rclb
cmpb
sub
sub
cmp
out
repnz
test
ja
sub
rorb
rcrb
lods
daa
cwtl
xor
push
inc
daa
push
pop
mov
pop
popl
hlt
or
pop
xchg
xchg
divl
jns
jl
pop
out
and
rcll
cmc
cs
and
cmpsl
sbb
adc
shl
jmp
mov
and
push
addr16
ja
out
and
ds
or
jo
sbb
cmpb
out
lahf
mov
push
push
loop
inc
pop
stos
mov
aas
rorb
mov
pop
ds
adc
cmp
inc
push
push
imull
sub
inc
pusha
inc
jb
jnp
mov
adc
adcb
push
dec
mov
or
cmp
out
and
sub
add
ficoml
sub
add
inc
sub
inc
in
js,pt
imull
lods
inc
inc
call
adc
push
sub
mov
shlb
mov
clc
popf
testl
push
xchg
repz
push
xchg
scas
aad
inc
xor
and
dec
ja
arpl
ret
xchg
test
jno
lret
mov
test
and
addr16
enter
and
add
mov
repnz
mov
xchg
nop
sbb
push
mov
pop
enter
inc
mov
out
push
pop
out
add
loopne
jns
js
pop
xor
and
and
lods
test
enter
sbb
stc
mov
and
test
push
lock
sub
xor
mov
cmp
in
sbb
sub
xor
lret
mov
cld
mov
xor
cmp
cmpsl
das
inc
popf
pop
dec
movsl
pop
pop
xchg
jno
push
lcall
in
add
popa
aam
xchg
divb
add
inc
cmp
iret
out
vmwrite
add
cmp
std
es
push
jae
daa
repnz
andb
xlat
jne
fdivrp
scas
lahf
test
lret
jmp
ss
xchg
xchg
and
rcrl
js
xor
scas
rcr
or
es
lret
enter
inc
jb
lret
cmpsb
push
xor
sbb
sbb
popa
push
and
xchg
xchg
add
mov
imul
je
icebp
nop
outsb
daa
ficoml
adc
punpckhwd
movb
mov
mov
out
sub
fnstsw
push
shlb
ror
enter
adc
pop
out
xor
popf
push
inc
cmp
scas
repnz
and
inc
push
adc
push
xchg
inc
mov
ss
cs
dec
rcll
add
sbb
jae
mov
daa
repnz
push
adc
sbb
repz
mov
sbb
test
lret
adc
add
or
cmp
fsts
pop
ret
mov
iret
subb
ss
out
cmp
or
push
loop
jns
out
les
jns
out
fs
dec
cmp
jns
es
lock
repz
mov
cmp
repz
inc
iret
repz
cmp
push
add
sahf
out
lcall
pop
and
sahf
mov
xchg
dec
jns
out
cmp
and
add
cmp
repz
and
fadd
mov
movsb
xchg
subb
ds
repz
push
push
add
and
popf
out
out
rolb
pop
pop
repz
aaa
fiadds
cmp
sbb
push
sahf
out
dec
call
cmpsb
xchg
jns
sarl
outsb
pusha
push
push
cmp
xor
out
push
in
sbb
cmp
mov
nop
xchg
cmp
repz
inc
sub
push
jns
out
add
sbb
rol
sahf
ja
out
sub
testb
out
bound
ss
out
decb
loop
iret
repz
ret
mov
cmp
repz
cmp
push
iret
repz
push
not
ljmp
repz
pushf
mov
repz
inc
xor
sahf
out
jbe
pop
dec
lahf
out
sahf
inc
xor
sbb
sbb
repz
int3
shlb
xchg
xorb
sahf
idivb
into
decb
push
in
loopne
mov
adc
cld
sbb
lock
cmp
fcmovb
lods
xchg
cmpsb
ds
jns
testl
dec
cmp
out
xor
es
sbb
mov
adc
cli
out
in
loope
ljmp
sbb
jns
push
cs
fcoms
inc
push
push
fs
cmp
repz
cmp
lret
repnz
sahf
out
sahf
adc
xor
push
data16
out
je
mov
iret
rcll
sub
cmp
mov
cmpsb
push
mov
repz
push
dec
out
cmp
cmp
adc
lock
mov
sahf
out
jb
dec
cmp
repz
out
push
cld
adc
call
fmul
shrb
cmp
push
ds
repz
or
adc
repz
rep
pop
jle
movsb
mov
repz
ror
ljmp
and
xor
inc
push
push
out
int
setp
cmp
repz
add
adc
xor
cmp
repz
pop
push
jnp
test
mov
fsubr
jns
cmpsl
stc
add
adc
xor
jns
out
jbe
lcall
ficoms
out
push
mov
sahf
out
test
lahf
out
sahf
dec
cmp
sbb
testb
iret
repz
mov
out
add
sbb
push
sbb
sub
out
sahf
cmp
pop
jbe
sahf
xor
out
mov
cli
mov
data16
data16
inc
nop
jl
out
fisubs
gs
mov
into
push
mov
popf
ja
sbb
and
and
aaa
dec
test
mov
adc
stos
push
and
ret
cmpsb
mov
mov
pop
push
aam
jns
data16
dec
push
lods
dec
lods
scas
scas
out
sahf
out
mov
lds
enter
jns
out
int3
int
iret
shl
jns
out
loope
jecxz
sahf
out
sahf
in
out
jmp
jns
in
in
out
out
out
sahf
out
icebp
repnz
sahf
out
sahf
cmc
div
clc
stc
cli
jns
out
sti
cld
std
dec
repz
xor
add
add
iret
repz
push
pop
or
repz
repz
or
push
iret
repz
movups
adc
adc
iret
repz
push
pop
sbb
out
fdivp
sbb
sbb
push
sahf
out
sahf
pop
and
and
and
sahf
out
and
out
sahf
out
insb
jp
xchg
sahf
out
sahf
lods
mov
repz
dec
push
xor
iret
pop
imul
repz
out
jns
out
decl
dec
and
xor
dec
pop
outsb
jl
sahf
out
sahf
lahf
scas
ror
in
cmp
repz
push
dec
adc
xor
cmp
repz
push
pop
iret
repz
outsw
js
mov
pushf
movsl
scas
mov
repz
std
or
out
sahf
out
dec
pop
gs
out
sahf
test
cmp
repz
push
dec
sbb
cmp
push
pusha
jae
aas
fs
insl
insl
dec
or
je
inc
xor
adc
push
or
lahf
sub
gs
gs
adc
adc
icebp
arpl
ret
outsb
jne
imul
jge
imul
bound
ljmp
insb
popa
jae
add
pop
rorl
inc
cmp
and
das
sarl
sbb
jb
inc
and
jp
cwtl
inc
or
cmp
test
and
push
add
adc
mov
and
dec
rcll
stos
adc
push
outsl
imul
fcmovne
push
lcall
mov
add
insb
jne
inc
inc
or
or
dec
test
insl
mov
push
dec
test
dec
outsb
outsw
aas
daa
invd
ret
outsb
or
cwtl
shll
leave
and
dec
jae
inc
or
or
test
test
inc
js
adc
push
mov
popf
test
or
inc
push
sbb
jno
test
mov
leave
and
arpl
mov
nop
inc
or
push
xchg
loope
and
fcoml
das
loop
xchg
push
popw
add
xchg
and
push
daa
mov
lods
push
cwtl
push
pop
pusha
adc
popa
loopne
and
cmpl
scas
add
sbb
aas
lcall
fld
and
xor
or
enter
mov
jo
mov
int
mov
mov
out
mov
cmpb
jns
or
data16
neg
neg
outsb
push
pusha
inc
push
cmpsb
adc
mov
scas
push
and
mov
push
imul
mov
flds
fs
test
xchg
cld
scas
loopne
sar
add
cmp
pop
adc
incb
xchg
lods
sbb
imul
out
add
mov
pop
jo
cmp
bound
push
xchg
lods
sbb
mov
out
mov
pop
adc
sbb
cmp
hlt
pop
addb
pop
and
inc
adc
stos
or
mov
add
xor
push
inc
andb
lock
nop
aaa
add
sar
out
mov
push
daa
inc
xor
add
movsl
add
pushl
mov
cmpsl
leave
call
mov
mov
shll
mov
push
xor
xor
cmp
xor
and
imul
shl
mov
xor
aaa
and
ljmp
mov
aam
rcl
xlat
lret
aad
ret
mov
mov
mov
mov
mov
jo
lds
jo
xor
arpl
dec
push
leave
iret
les
ret
notl
and
mov
ret
or
clc
aas
dec
lahf
sub
dec
int
mov
and
fcmove
adc
sti
mov
dec
rol
mov
shll
sub
clc
ret
mov
ja
jge
adcb
js
mov
cltd
mov
ret
dec
leave
stos
sub
stos
ror
mov
mov
jmp
icebp
mov
mov
mov
and
mov
jge
ret
mov
mov
shr
sar
int3
jge
sub
jmp
jb
insl
imul
jo
jo
imul
shrl
and
fdivs
mov
loopne
mov
ret
enter
mov
ret
mov
cli
aas
lods
dec
mov
sub
ret
rol
fildll
das
jbe
gs
jg
pop
add
test
aaa
xchg
pop
fdivrs
adc
add
ret
dec
rcl
mov
mov
cwtl
rcr
mov
lods
cld
fstpt
mov
out
mov
les
mov
pop
movsl
pop
lcall
lret
out
pusha
add
call
cli
adc
sub
fsubrs
and
test
lods
pop
popf
adc
push
jae
js
leave
mov
test
cli
pusha
xchg
add
cs
pushf
out
mov
mov
mov
mov
mov
mov
sub
dec
inc
inc
and
push
inc
push
insb
mov
std
inc
insw
je
adc
inc
test
popa
inc
ss
push
or
jl
movsb
sti
push
or
iret
idiv
cmc
push
add
lock
icebp
pop
sti
xchg
daa
out
fidivrs
push
out
sub
push
push
fdivp
ret
addr16
push
cli
add
add
add
fildll
or
cmp
or
xor
pop
add
add
cmp
pushl
inc
incb
push
add
jno
faddl
jae
push
cmp
jbe
adc
cld
std
and
int3
std
xor
add
lcall
jmp
push
nop
cld
aas
add
decl
enter
add
cld
lret
divl
or
std
addr16
mov
push
cli
add
std
fwait
add
inc
add
and
xor
xor
dec
lcall
xor
push
std
jo
call
add
add
mov
incl
movsl
stos
add
add
cltd
add
sbb
mov
pop
std
imul
cmp
xchg
lcall
ds
add
add
add
add
add
pop
dec
pop
add
call
or
or
add
dec
add
cld
dec
insb
pop
clc
mov
std
push
sbb
add
call
insb
out
cmp
aam
jbe
pop
add
add
add
clc
and
fcomip
scas
cmc
stc
pop
pusha
add
add
pop
sub
add
stc
cmp
clc
add
roll
jo
lods
pop
lock
das
push
inc
add
pop
ljmp
xor
scas
std
mov
dec
add
sub
jne
aad
jge
popa
std
adc
sub
xchg
mov
push
call
popf
xor
in
std
imul
cli
std
cmp
icebp
cld
mov
enter
mov
cmp
inc
ficoml
push
in
addl
add
decl
mov
pop
add
adc
add
arpl
add
loope
add
out
push
call
stc
jmp
clc
mov
cwtl
stc
pop
call
xchg
cli
mov
mov
daa
stc
sti
ss
movsb
cld
push
mov
ljmp
jnp
pop
add
je
or
xor
mov
or
or
dec
pop
iret
push
les
dec
push
mov
add
add
decb
cld
and
shl
mov
hlt
test
in
sub
ljmp
divl
cmc
inc
cmc
jo
mov
dec
add
add
adc
jmp
or
or
or
push
fimuls
push
icebp
lcall
adc
or
push
sbb
add
push
lcall
add
clc
sub
icebp
push
in
aaa
call
sub
add
add
mov
lcall
dec
testb
fcomi
jmp
lods
negb
xchg
cld
fldl
inc
pop
ret
or
pcmpeqd
dec
adc
adc
incl
xchg
adc
adc
adc
adc
adc
adc
push
jae
dec
sete
incl
enter
psubq
sti
imul
negb
repz
in
fsubrl
faddl
jge
push
xor
in
push
incb
sti
and
xlat
cld
test
or
adc
ds
lcall
popa
sbb
adc
adc
sbb
xchg
test
or
or
test
ljmp
cli
repnz
adc
ljmp
loop
iret
into
shl
fcomp
loopne
sbb
cld
sbb
lcall
jp
add
xor
test
decl
lcall
mov
pop
sub
outsb
push
bound
sub
pop
or
push
push
or
pushl
pop
fcomps
mov
repnz
out
lahf
in
jae
jmp
jecxz
adc
jecxz
fisttpll
and
out
adc
mov
or
pop
or
xor
sbb
cmp
sbb
push
dec
and
jmp
or
add
add
add
add
icebp
std
jmp
jmp
out
shr
mov
adc
pop
fidivrl
test
stc
mov
adc
adc
mov
push
xor
repz
xchg
adc
mov
sbb
add
incl
stc
jns
loope
lret
std
push
clc
jbe
add
inc
stc
inc
repz
ljmp
mov
cld
in
loope
in
in
call
hlt
daa
pop
sbb
fimuls
jecxz
into
adc
adc
ds
adc
adc
push
daa
adc
in
jg
adc
or
rolb
cld
enter
xchg
clc
imul
jne
es
lcall
pop
stc
push
clc
sbb
xchg
out
mov
pusha
call
mov
fldenv
cld
js
lds
cld
lcall
adc
lahf
adc
imul
adc
fcomip
pushl
adc
add
clts
sub
cli
in
xor
cld
idiv
loopne
cld
sti
add
repz
das
testl
fsubrp
xchg
out
insb
out
mov
clc
push
std
and
loop
xchg
icebp
add
adc
adc
adc
adc
incl
adc
lret
adc
adc
mov
incl
idivl
test
or
stc
sbb
push
sbb
out
jb
inc
mov
fsubr
stos
in
sub
jecxz
fcoml
rcr
stos
ljmp
adc
jmp
push
pop
pop
loop
popa
adc
xchg
adc
sbb
std
or
pop
ud0
lods
add
or
xor
inc
cmp
mov
xlat
sti
ljmp
lods
imull
out
shr
sbb
cmp
cs
or
movsb
fdivp
xlat
outsb
aam
fdivrl
jmp
ljmp
push
pop
sbb
adc
mov
mov
clc
jg
adc
push
adc
or
or
std
mov
test
aam
decl
cmpsb
sti
mov
repz
mov
xlat
loopne
fldl
aad
ror
push
sub
in
repz
or
adc
add
lock
xor
pop
sub
inc
sbb
push
xor
or
push
rclb
and
or
int3
pop
in
add
loopne
lcall
add
aam
jle
fcomip
inc
hlt
mov
jecxz
fisubl
ljmp
sub
mov
mov
and
or
stos
pop
aad
bound
call
adc
adc
jno
inc
btr
push
adc
orb
push
pusha
add
or
or
arpl
jg
xor
push
add
stc
and
out
out
loopne
fstps
push
push
ret
decl
fisubl
and
pop
ljmp
sbb
push
adc
je
jmp
sbb
scas
stc
push
inc
adc
pop
mov
ret
cmp
push
push
or
or
add
lock
mov
xor
int
mov
insl
lds
jp
or
adc
sbb
lcall
rclb
adc
xlat
or
push
mov
and
sbb
outsl
inc
scas
inc
call
add
test
xor
mov
lds
pop
or
add
stc
cmp
cmp
test
lds
jb
cmc
call
and
add
or
or
adc
sbb
sbb
adc
cmp
xchg
or
push
sub
mov
add
add
add
or
or
or
or
jmp
or
add
decb
in
loopne
fimull
lret
pop
loope
cmc
cmpsb
add
lcall
cmovge
stos
or
psrlw
adc
iret
or
packssdw
incl
sbb
add
pushf
add
add
or
pushl
or
or
add
ret
out
push
loope,pn
fscale
leave
dec
les
fimuls
adc
hlt
sbb
sbb
sbb
aaa
pop
pop
push
bound
hlt
add
decb
pop
call
add
push
add
add
pushl
cmp
jle
xor
jbe
adc
adc
adc
push
loop
xor
fwait
jecxz
fsubl
les
aad
icebp
cmp
adc
push
adc
sbb
xchg
add
ds
push
add
cli
pushl
or
xchg
movsl
add
std
pop
lcall
push
test
pop
adc
ljmp
call
or
lods
in
in
jge
xchg
fsts
int3
mov
incl
jmp
sbb
pop
push
and
and
add
loop
adc
sub
stos
dec
add
or
and
jg
add
std
idiv
mov
or
or
pushf
adc
das
or
out
sbb
cwtl
jecxz
loopne
fsts
div
mov
and
sub
push
sbb
int
test
mov
sti
jmp
in
inc
repz
rorb
gs
or
add
incl
push
push
add
rorb
or
or
push
or
add
imul
out
fdivr
dec
push
leave
pop
shlb
adc
stos
cs
pop
add
loopne
lcall
in
and
leave
add
pop
pop
push
inc
push
sub
sbb
add
jecxz
push
dec
push
into
push
mov
jmp
dec
sub
pop
hlt
add
cld
into
fistpll
ret
xchg
neg
test
jg
decl
arpl
xchg
ss
clc
adc
sbb
inc
loop
lock
call
stc
loop
and
out
faddl
cmpsl
add
pushf
inc
push
jmp
mov
out
dec
or
mov
push
add
fst
inc
sar
sub
ror
add
pop
sti
xor
scas
and
sahf
xor
and
sbb
dec
std
clc
aam
std
fsubrs
mov
clc
cli
mov
push
add
cmc
jmp
push
add
add
push
fmull
js
cmpsl
adc
push
and
or
add
ror
ret
push
iret
repnz
sbb
daa
mov
ds
xor
loope
push
add
loope
lcall
fistl
ljmp
rclb
imul
adc
adc
xor
mov
pushl
add
negb
jmp
jecxz
fnstcw
mov
cmc
jmp
shlb
out
cli
call
inc
mov
cmp
push
call
fstpl
fcoms
pop
cmc
call
add
and
mov
les
cltd
adc
adc
push
clc
and
les
xchg
push
inc
ljmp
sarb
icebp
fcmove
shrb
leave
push
mov
dec
fimull
incl
clc
adc
cwtl
es
xor
cmp
in
inc
xor
cmp
lds
or
mov
pop
add
mov
in
icebp
or
call
call
daa
in
xchg
and
and
sbb
adc
or
imulb
xchg
jecxz
stc
leave
les
popa
jmp
add
push
icebp
daa
loope
in
test
pushl
outsl
sub
and
adc
add
loop
in
fists
xlat
stc
fimull
add
cli
cld
pop
pop
sub
cmp
adc
sub
iret
adc
in
jno
gs
xor
incl
ja
pop
fiadds
arpl
or
das
ret
inc
inc
inc
inc
xor
sub
push
aas
or
call
adc
mov
fcmovbe
rcr
fldenv
and
sbb
mov
jmp
xor
jo
pop
or
sti
stos
call
ror
ret
aaa
mov
lods
in
std
push
adc
xor
xor
inc
aam
xor
pop
inc
call
xorb
fistl
lret
pop
iret
mov
incl
cld
jl
push
icebp
adc
jb
sub
xor
add
or
sub
push
dec
pushl
cmp
insb
ljmp
out
ret
or
into
lock
jmp
jle
adc
cmp
inc
mov
out
subl
sbb
jg
add
mov
roll
mov
add
adc
repnz
sbb
inc
aaa
das
xor
es
ja
int3
sti
sub
and
mov
adc
mov
incl
jne
sub
sahf
sbb
and
pop
ds
xor
push
xor
fldl
inc
decl
xorb
ljmp
jno
push
shlb
xlat
loopne
das
add
xor
in
xor
cmp
xor
mov
cmc
insb
in
aad
enter
mov
mov
mov
fldenv
push
sub
cmp
ret
or
cld
mov
ljmp
jo
dec
xlat
mov
mov
pop
test
xor
aaa
ljmp
xor
in
adc
ret
lcall
push
addb
cs
ds
dec
push
sub
shl
jmp
call
fiaddl
roll
outsl
mov
jge
inc
pop
jg
lods
sub
xor
mov
ljmp
jnp
xor
in
jns
ror
stos
ret
ds
in
lcall
add
push
and
mov
lret
xor
push
push
add
incl
cld
dec
out
push
call
in
shr
into
pop
iret
call
jmp
jp
sahf
ss
cmp
cmp
mov
repnz
dec
push
mov
aam
out
lcall
sarb
sbb
sbb
sub
and
fsubrs
ja
xlat
push
mov
cmp
ret
cmc
shl
mov
xlat
cwtl
aam
rol
into
movsb
iret
adc
aaa
clc
push
adc
cmp
ljmp
xlat
push
sti
or
cmc
es
int
mov
int3
or
sub
mov
pop
sub
stos
aas
scas
cmp
ficompl
ret
ljmp
stc
cmp
repnz
addr16
fiadds
loopne
fsubl
loope
stc
push
ud0
push
and
sub
pop
aaa
fildll
leave
sbb
dec
icebp
shl
sbb
scas
outsl
mov
shl
pushl
adc
aaa
std
inc
test
sub
sbb
or
cld
loop
pushl
fld
ljmp
inc
xlat
neg
lcall
fisubl
jo
or
push
out
dec
ss
push
cmp
adc
pop
out
lcall
decb
fstps
int3
mov
mov
jg
arpl
in
movsl
cmp
inc
je
decl
cmp
mov
test
jb
test
imul
fmuls
lret
rcll
push
aad
jmp
daa
add
sbb
sub
fidivrl
inc
xchg
mov
jg
icebp
adc
outsb
loopne
iret
xor
mov
scas
and
add
xor
inc
add
decl
dec
inc
xchg
jmp
pop
adc
add
out
jmp
filds
mov
test
fcmovne
insb
shlb
in
ljmp
es
inc
push
push
xor
mov
iret
pop
call
fisubrs
ljmp
xor
add
inc
mov
fcomip
popf
sub
mov
mov
cmpsl
jmp
arpl
cmp
push
shll
adc
inc
ljmp
out
add
aaa
sub
xor
aaa
out
ss
xor
or
cmp
adc
in
mov
mov
mov
cmp
das
xchg
sub
inc
fdivs
jg
in
dec
mov
daa
out
sub
repz
xlat
popf
flds
call
sarl
pop
push
in
xchg
push
call
cmp
inc
adc
std
or
or
lret
xchg
mov
pushl
mov
xchg
adc
adc
test
ss
push
mov
push
notb
in
fcompp
fmul
dec
loope
iret
add
xchg
fdivs
frstor
sub
daa
cmp
cmp
push
aas
dec
das
fcompl
repz
into
or
mov
test
pushl
sub
jns
repz
mov
cs
in
aam
int3
push
push
mov
or
into
aad
fnstsw
and
es
inc
dec
sahf
inc
es
pop
jmp
or
int3
roll
mov
cmpsl
les
ja
pusha
sbb
mov
jmp
pop
sbb
mov
fldl
es
fstl
jo
sbb
fs
sbb
cmp
data16
js
and
jle
sahf
inc
addr16
jo
xor
adc
incl
aad
int3
add
sarl
dec
fdivrl
sti
sti
mov
jb
mov
cmp
dec
out
lea
mov
repnz
jge
pop
lret
pop
shrl
mov
int3
jne
xchg
repz
call
xor
sub
inc
mov
repnz
sbb
or
aad
into
in
mov
call
push
dec
mov
pop
call
pop
xor
sbb
decl
pop
mov
loop
mov
jmp
ret
insb
rcll
ljmp
out
xor
popa
aaa
test
add
lcall
rcrb
fidivrs
test
cs
push
sti
push
jp
fcomip
inc
xor
and
cmp
cmp
dec
mov
js
aas
cld
loopne
decl
sbb
popa
sub
inc
cmp
daa
xor
mov
sub
loope
int
iret
outsb
leave
xchg
pushl
loope
test
mov
notb
outsb
inc
cmpsb
push
inc
lcall
push
add
fwait
sub
or
icebp
inc
stos
sarb
mov
ss
sar
lcall
xor
aaa
dec
dec
dec
iret
dec
jl
lret
sbb
pop
lock
loop
shlb
mov
decl
in
mov
imul
xor
fmull
stos
pop
aam
icebp
inc
cmp
pop
jmp
mov
stos
leave
ret
pop
loope
push
pop
lcall
shll
jmp
dec
xchg
inc
mov
scas
sub
adc
add
fldcw
icebp
cmp
scas
rcrb
test
lock
in
ret
popa
sti
mov
cmpsb
lcall
dec
sbb
rclb
dec
lahf
ds
insl
add
jecxz
lret
int
mov
loop
ljmp
mov
pop
bound
mov
cmp
pushf
sub
sbb
and
arpl
ljmp
popf
mov
lds
sbb
xchg
or
and
arpl
ret
inc
cli
dec
sbb
sub
imul
jae
pop
pop
mov
mov
lock
mov
push
xor
ss
fidivs
mov
jp
rcrb
adc
ds
xchg
sub
aam
pop
fdivrl
rorb
call
mov
es
mov
push
inc
ljmp
or
out
in
fimull
adcb
mov
insb
leave
in
add
cmc
sub
cmp
cmp
call
icebp
repnz
sahf
jmp
jg
call
loope
fsubp
rolb
adc
and
xor
roll
incl
ds
and
adc
cmc
clc
fsqrt
movsb
mov
mov
mov
lret
stc
leave
adc
es
sbb
xor
divl
enter
sbb
sti
adc
or
cmp
incl
fdivl
aad
pop
ficoml
nop
clc
adc
je
pushl
or
or
aas
inc
and
pop
xchg
cmc
sbb
cmp
test
iret
jg
push
aam
hlt
fwait
or
xorb
xor
ljmp
mov
rorl
jg
cmp
push
xor
xchg
jmp
jecxz
pop
loope
fnstsw
fcmovbe
aad
into
popf
jg
dec
push
jmp
add
mov
in
inc
es
jp
nop
and
fcmovne
das
cli
pushl
pop
rol
xlat
fs
aam
addr16
add
xor
sbb
test
dec
psubsb
push
or
hlt
clc
lock
out
je
clc
decl
and
ljmp
fistpll
sti
sahf
adc
das
adc
cmpsb
xor
add
push
or
jmp
fcmovnu
lret
inc
cmp
in
or
bound
call
cld
decl
sbb
pop
inc
push
mov
lret
add
ljmp
shr
fistl
mov
mov
fadds
stc
mov
add
mov
das
sbb
mov
push
sbb
or
loopne
xchg
cmp
pop
cli
stos
cld
les
clc
sbb
sbb
inc
or
or
or
ljmp
push
inc
push
mov
xchg
hlt
repnz
sahf
ficomps
push
cld
insl
rolb
loopne
aam
push
add
push
out
and
cs
incl
sub
das
jecxz
ljmp
mov
mov
sbb
sbb
and
xor
cmp
incl
mov
add
push
adc
or
xchg
cmc
push
ds
fidivs
aad
call
aad
in
repz
popf
push
aas
sbb
push
outsb
and
jo
jb
cmp
icebp
movsl
jmp
ljmp
mov
mov
pop
mov
xor
add
jle
mov
or
dec
or
adc
cld
dec
push
out
xchg
jecxz
fbld
xlat
fldl
fisubl
pop
jmp
cld
add
pushf
sbb
push
jbe
or
insl
adc
or
incl
cmpsb
icebp
enter
mov
xchg
loopne
mov
adc
pop
lods
add
call
bts
popf
adc
or
mov
jp
imul
cmp
out
loopne
loope
loop
fidivrs
sub
pop
lahf
jecxz
imul
push
dec
or
adc
shrl
and
pop
pushl
pop
test
inc
clc
repnz
out
in
ljmp
call
bswap
adc
push
push
adc
mov
add
cli
shl
lcall
sbb
push
loope
mov
dec
aad
enter
enter
pushl
cmp
mov
push
insl
sub
adc
dec
test
cmp
ljmp
lods
loopne
aad
into
and
add
cld
sbb
cmp
in
push
push
sti
pop
pop
mov
jmp
mov
push
sub
cmpsb
or
xlat
icebp
and
ljmp
aam
jbe
push
faddp
pushf
iret
inc
in
test
xchg
push
adc
jmp
dec
push
mov
inc
and
add
jmp
shr
ret
sbb
icebp
mov
and
add
sbb
and
out
imul
decl
dec
push
pop
cld
shr
fcomip
aam
leave
rol
cltd
mov
sbb
xor
popf
push
lcall
bound
jo
push
pop
xor
adc
out
imul
inc
sarl
or
es
ljmp
cmp
lret
out
clc
decl
gs
rorl
pop
mov
mov
cmpsl
and
sub
mov
decl
pop
das
jge
inc
pop
dec
outsl
push
jnp
jp
outsb
xor
push
or
out
into
dec
mov
das
sar
xlat
test
fsubrp
or
ljmp
xor
ss
outsl
ljmp
inc
xor
mov
or
pusha
ljmp
stc
mov
push
mov
aaa
inc
sar
mov
cltd
rolb
out
mov
lcall
popa
inc
addr16
fwait
pop
rcll
cmp
movaps
xchg
sub
cmpsl
jo
fwait
mov
lret
fcoml
hlt
int
mov
xor
cmp
xor
sub
and
adc
add
out
push
fcmovbe
pop
in
and
rcr
sbb
mov
cmc
inc
or
sub
mov
mov
jbe
mov
inc
add
lcall
jecxz
fdivrp
push
iret
fwait
jo
les
cmp
addr16
cmp
imul
dec
sub
sub
ljmp
push
fstl
incb
fnsave
int
insl
repz
sti
sub
adc
add
add
sbb
sbb
sbb
pop
repnz
xor
mov
pop
ss
lcall
or
iret
cmp
xor
pop
aad
in
lock
and
rcll
jne
xor
int3
pushl
sub
int3
push
or
sbb
js
decl
cli
lock
arpl
mov
push
sbb
sti
out
dec
jmp
repnz
jns
jecxz
imull
pusha
aas
test
jno
sbb
insb
call
ss
ret
sti
xchg
fnstenv
mov
mov
mov
enter
in
hlt
sti
fimull
fs
lcall
cltd
and
popf
cmp
sub
push
xor
clc
rdtsc
decl
hlt
dec
in
shll
dec
outsl
movsb
inc
dec
sub
xchg
shll
into
stos
ret
push
shrl
push
xchg
ret
incl
push
mov
bound
jnp
ds
xchg
push
and
test
movsl
test
sarb
dec
sub
add
or
cmp
dec
jbe
push
dec
jmp
dec
dec
inc
jle
je
loop
incl
pop
out
mov
mov
scas
imul
lcall
mov
std
and
in
cmp
lcall
dec
idiv
ljmp
mov
mov
mov
das
sahf
jno
xor
xor
shrl
popa
aas
fists
ret
jmp
popa
mov
dec
push
out
inc
cmp
pop
ds
nop
mov
jae
add
ja
or
std
adc
pop
insb
adc
add
out
clc
ljmp
sub
jmp
sbb
inc
leave
ljmp
lcall
add
and
sbb
mov
std
aas
loopne
aam
xlat
push
sbb
xor
and
mov
ljmp
cwtl
aad
inc
loopne
call
adcl
cmc
dec
push
xor
ficomps
inc
clc
jp
jno
sub
aas
cmp
cmp
in
ret
enter
rorb
flds
in
add
add
out
fadd
sub
and
faddl
or
clc
mov
cli
cwtl
out
clc
out
jo
sub
mov
inc
push
push
xor
pop
sub
ret
add
clc
shr
shl
iret
jl
sar
test
mov
xchg
fdivrl
xor
call
push
aaa
std
and
mov
xchg
rcrb
std
jmp
cld
decl
xchg
or
xchg
lcall
adcl
pop
jl
imul
sbb
add
pushl
sti
testb
sub
mov
mov
stc
rep
sti
push
cld
imul
jge
xchg
aam
aad
ljmp
notl
cmp
push
call
push
and
das
int
lds
rolb
clc
mov
and
xor
sub
ljmp
inc
xor
and
das
adc
shr
inc
loopne
decl
ljmp
cmpsb
rorl
mov
push
fmulp
sti
rcll
xor
pushf
imul
fcomip
jmp
sbb
mov
insl
popf
xor
inc
mov
lret
or
cmp
aaa
adc
push
ss
das
enter
xor
pushl
cwtl
aad
enter
sarl
lcall
loop
loopne
int
mov
pop
ljmp
cmpsb
push
bound
jg
jl
jo
inc
out
push
dec
jmp
push
xchg
call
decl
leave
mov
jmp
mov
dec
fiaddl
cmp
jmp
cmp
xchg
or
roll
sub
lea
lret
mov
fs
cld
mov
jmp
repz
or
inc
insb
dec
lcall
gs
sbb
pushl
jl
shll
test
shll
incl
inc
dec
cltd
ljmp
incl
inc
dec
xor
jb
mov
rorb
inc
ds
leave
and
xchg
lret
aaa
into
push
fildll
out
clc
icebp
shl
lods
mul
adc
ljmp
jmp
jmp
clc
adc
sbb
lahf
nop
inc
hlt
inc
nop
xor
sbb
dec
out
sub
hlt
xlat
lcall
sub
daa
push
daa
pop
es
pop
cmp
mov
pcmpeqd
push
or
sbb
scas
pop
jmp
loope
fimull
xlat
cld
fcom
ljmp
jmp
jmp
or
jae
or
and
sub
es
ljmp
daa
call
jecxz
je
nop
fistl
push
enter
loope
sti
mov
xchg
sub
mov
and
and
sbb
fwait
lock
cmp
out
fbstp
rclb
mov
outsl
mov
jl
call
inc
adc
or
aas
lcall
adc
mov
cltd
and
sub
arpl
inc
adc
add
in
dec
fcompl
int3
inc
lds
loopne
jmp
or
stos
sub
and
pop
stos
sbb
ljmp
incl
repnz
add
sti
cmp
sbb
roll
leave
daa
aam
lcall
rclb
sbb
and
adc
and
ds
jae
lods
repnz
cli
xor
ljmp
call
das
jle
cltd
pop
xchg
add
call
fsubl
dec
incl
movsb
push
daa
adc
adc
or
add
add
add
pop
test
or
sar
incl
mov
rcrb
hlt
mov
sbb
and
sub
sbb
call
call
inc
hlt
int
fsubr
jmp
push
adc
push
fimuls
xor
sbb
add
call
fstpl
into
sub
int3
xor
cwtl
out
stc
pop
push
pop
pop
or
pop
push
fimull
or
clc
call
mov
std
jno
out
ffree
loope
ljmp
sbb
fcomip
outsl
pop
sbb
add
test
stos
andl
clc
mov
std
jg
inc
sub
pop
shlb
lods
inc
aas
push
or
rol
ret
aad
aaa
adc
xlat
lock
incl
jg
out
adc
aad
mov
dec
cmpsl
pop
cmp
jle
fdivr
push
add
inc
stc
aad
push
out
sbb
jg
lock
out
mov
repnz
out
fistl
sub
imul
mov
mov
shlb
inc
mov
fs
push
cmp
daa
push
mov
xchg
out
aam
mov
mov
cmp
iret
fcoml
push
jg
sbb
sbb
and
es
sub
cmp
mov
dec
insb
add
jg
fs
repz
lods
hlt
cld
divb
cmc
in
dec
in
loop,pn
fsubr
fisubl
fnsave
enter
in
pop
adc
lea
pop
push
push
jmp
lcall
cli
shr
shrl
ret
jg
pop
int3
lret
mov
addr16
iret
add
mov
mulb
shlb
repnz
or
add
mov
loop
jb
lcall
in
push
push
std
cmp
jmp
mov
fistpl
pop
aad
in
cmpsb
pop
fdivr
call
scas
and
add
pop
out
push
dec
inc
pop
sub
adc
sti
je
cli
leave
divb
lcall
lret
mov
or
rcrl
push
lret
bound
jg
sahf
sbb
sub
adc
adc
push
fdivl
enter
lret
into
sarb
cmp
fstpt
push
out
in
mov
fisubrs
sbb
fwait
incl
push
cmp
sub
xor
sbb
ret
loop
lds
stos
mov
mov
fs
decl
mov
jbe
xor
push
add
cmp
push
cwtl
cmp
inc
clc
pop
jmp
cmp
or
mov
mov
mov
pop
and
into
push
repnz
jmp
xchg
iret
in
mov
xor
fwait
pop
and
cmp
aas
addb
inc
pop
cmovb
and
or
ljmp
add
call
pushl
clc
jb
jb
sahf
sti
jecxz
lods
sbb
mov
dec
aad
scas
sub
ret
sbb
data16
int
mov
mov
fucomp
divl
incl
add
int3
add
sbb
daa
in
xor
xor
dec
mov
cmp
aad
rcl
mov
mov
mov
mov
jns
sahf
ficomps
clc
jmp
into
xor
test
iret
inc
or
sbb
xor
push
cmp
lock
sub
ljmp
lds
lock
std
add
cmp
insl
or
push
add
not
cmc
incl
xor
ds
mov
inc
dec
sub
call
dec
add
jmp
fldt
mov
mov
int
out
mov
adc
clc
cmp
inc
inc
outsl
clc
decl
dec
repnz
test
sbb
add
pushf
loop
in
and
jecxz
lcall
jle
mov
cmc
mov
inc
add
push
mov
jmp
es
jmp
sub
and
loop
shl
mov
jecxz
lods
mov
shrb
ja
pushl
xchg
cmp
popf
inc
jge
fwait
sbb
sar
icebp
pop
jmp
lcall
mov
stc
jp
dec
cld
inc
stc
mov
repz
fdiv
movsb
std
stos
add
cld
incl
clc
call
cmc
add
jmp
clc
incl
jb
or
xor
cmp
ja
insl
or
icebp
mov
scas
cmp
xchg
loope
stos
call
xor
xor
decl
adc
add
out
aam
lret
cli
xlat
cld
orb
adc
add
jo
aaa
and
out
out
jmp
adc
cli
incl
cs
cmp
jbe
in
and
ffreep
incl
push
adc
dec
loop
stos
and
adc
lock
add
mov
decl
lock
inc
ljmp
pushl
adc
jmp
loopne
call
js
out
dec
add
or
adc
aam
cld
lahf
repz
lcall
clc
pop
add
add
add
cli
mov
mov
in
push
mov
add
lcall
or
sbb
sub
daa
dec
into
dec
mov
sbb
jmp
mov
ss
call
nop
loope
repz
adc
test
test
cmp
stc
cmc
repnz
in
test
popa
sti
xor
iret
call
xor
and
mov
imul
adc
mov
cli
mov
shl
xor
sbb
outsl
in
lcall
and
loopne
cwtl
into
movsl
lret
pop
idivl
movsl
sbb
or
mov
sbb
sbb
sub
sub
test
sub
push
fisubl
in
push
stc
stc
call
push
fiadds
movsl
stc
pop
cli
fs
sub
fprem
aas
lods
or
sbb
daa
pop
das
add
xor
test
stos
push
outsl
cli
add
dec
call
mov
imul
out
jmp
out
das
out
pop
repz
out
and
pop
loopne
loop
hlt
pop
add
push
push
enter
push
ss
xor
and
std
decl
sahf
test
das
out
pop
out
fdivp
fbld
fidivl
jecxz
call
pop
notl
push
test
or
mov
out
dec
and
sbb
sbb
jmp
mov
in
loope
in
in
in
xor
hlt
xor
test
dec
push
pop
icebp
dec
out
xlat
dec
shl
loopne
cmc
fiaddl
icebp
les
push
in
pushl
lock
jns
mov
add
mov
pop
enter
out
mov
add
or
mov
sbb
sbb
adc
decl
movzwl
mov
add
sti
push
cmc
adc
aaa
ljmp
jmp
out
jmp
push
fcmovne
fmul
dec
in
repnz
movlps
and
cmp
ljmp
push
inc
dec
inc
cmp
and
pop
inc
jmp
cmpsb
mov
mov
add
mov
jg
jle
lret
push
mov
adc
adc
adc
adc
xchg
out
add
push
and
mov
test
push
fsubs
call
out
into
mov
fstl
jmp
in
fnstsw
iret
out
iret
mov
ss
add
cmc
pushl
pop
dec
sub
jae
arpl
or
sub
lds
jmp
mov
add
pop
fsubp
sbb
setge
call
loopne
fdivl
sahf
and
and
daa
mov
and
clc
mov
cmc
cli
jecxz
xlat
nop
into
mov
and
iret
push
icebp
loopne
jmp
ljmp
repnz
dec
fcomps
incb
sbb
daa
cmp
call
outsb
sub
dec
cmp
ljmp
mov
ret
in
scas
sarb
test
dec
repnz
pop
nop
sbb
sbb
jle
jmp
cwtl
and
popa
sbb
jnp
adc
test
std
adc
ljmp
mov
push
ficomps
xchg
aam
shrb
or
jo
jecxz
popa
jmp
out
and
pop
out
sub
in
lods
repz
push
repz
jp
dec
sub
cmp
inc
push
inc
xchg
cmp
and
or
call
aam
enter
mov
mov
rolb
jno
imul
and
incl
in
xchg
jecxz
in
adc
adc
cs
jbe
xchg
pxor
clc
ljmp
out
xor
pop
pop
jmp
xlat
iret
fldcw
out
shl
out
out
icebp
add
or
pop
loopne
pop
repz
out
and
daa
cmpsb
es
sub
filds
ds
cmp
inc
flds
enter
incl
jmp
add
adc
sbb
and
hlt
jbe
out
adc
or
cmp
add
test
ja
sbb
hlt
sbb
loop
clc
jmp
call
cmpsb
loopne
ficomps
in
sahf
add
or
rcrb
fimuls
inc
or
mov
or
ljmp
int
jns
and
mov
pop
clc
int3
ljmp
sti
loopne
loopne
in
in
icebp
ljmp
and
pop
adc
mov
imul
testl
adc
adcb
or
mov
ljmp
rolb
jecxz
negb
mov
pop
pop
js
xchg
ljmp
and
push
jns
mov
in
loope
in
icebp
cmpsb
push
and
jmp
filds
es
xchg
add
out
mov
into
call
data16
in
roll
nop
adc
ljmp
and
lret
push
cli
sub
shl
repnz
mov
jmp
jg
add
pop
ljmp
into
and
lahf
loope
out
xchg
add
adc
sbb
mov
je
aad
loope
cmp
xor
out
sub
push
stc
push
aas
aas
shrb
push
hlt
lock
add
int
lret
fmul
sbb
push
decl
adc
push
xlat
and
push
jecxz
int
imul
andb
movsl
call
ret
push
testl
inc
daa
push
and
adc
sub
jmp
out
aad
mov
adc
dec
add
push
aas
sbb
adc
cld
add
ja
mov
cmpsb
mov
add
fldln2
push
add
mov
dec
test
lcall
rcll
cmp
xchg
repz
in
fnstsw
loope
in
xlat
clc
movb
add
add
lcall
add
jae
and
aam
add
push
adc
and
sbb
loop
aaa
or
inc
sti
cs
mov
adc
cld
sti
stc
xchg
sti
mov
out
cli
push
icebp
adc
fsubp
jbe
int
ljmp
ljmp
and
bound
cmp
sub
sti
cld
jmp
incl
test
gs
call
jb
into
push
fiaddl
jbe
pop
lret
add
scas
and
stos
add
or
scas
sub
lcall
rcrb
push
adc
lods
pop
and
loop
dec
cmc
push
out
xchg
out
pop
in
jnp
dec
out
dec
repnz
sub
fucomip
add
xor
dec
in
hlt
ftst
xchg
clc
add
lcall
mov
lret
inc
dec
inc
inc
xor
sub
cli
mov
pusha
aam
int
pusha
fscale
pop
lock
cld
sub
add
or
or
data16
ljmp
push
call
std
push
pop
sbb
nop
sub
rcrb
mov
jmp
fsubr
fcmovnu
xor
fcomip
call
gs
add
in
loop
decl
lock
stc
arpl
pop
cmp
mov
sbb
dec
add
incl
xor
rcl
shrb
or
pop
iret
js
lahf
fbstp
adc
pop
sub
testl
lods
fidivrs
out
fldl
mov
jg
inc
ss
lcall
repnz
cmp
mov
push
flds
mov
std
loop
incl
push
mov
push
push
lds
or
out
fisttpll
repnz
or
and
pushl
inc
stos
inc
mov
cld
mov
lret
sbb
xor
loope
mov
and
cld
lcall
fwait
hlt
dec
jmp
sub
or
sbb
or
ds
cmp
incl
jl
sub
and
adc
adc
stos
enter
into
inc
fldenv
aaa
jp
add
adc
sti
cmp
push
shl
loop
jp
or
inc
repz
or
and
cs
inc
sbb
pop
jmp
cmc
ret
jmp
loop
rcll
roll
fcomip
fdivl
push
lock
add
fcoml
fcoms
mov
lcall
mov
dec
sub
push
dec
or
add
ljmp
sti
mov
out
push
adc
hlt
cli
negl
daa
cmpsl
cld
push
add
cld
cmp
or
pop
testl
in
icebp
aas
loop
loope
lock
push
testb
pop
sub
pop
mov
add
imulb
mov
decl
filds
dec
or
sbb
mov
adc
dec
clc
sbb
push
lock
decl
testl
out
imul
sbb
hlt
sti
aad
sti
in
out
lock
insb
std
adc
sbbl
sbb
add
cld
push
repnz
iret
addr16
pop
mov
fcompl
add
adc
xor
sub
or
jbe
in
in
in
out
repnz
es
or
adc
or
std
fdivp
test
push
in
in
push
std
mov
mov
std
or
inc
and
rclb
and
add
call
stc
lahf
add
bound
or
aam
pop
cld
jmp
clc
outsl
icebp
daa
out
inc
in
shl
fcmovnu
xlat
mov
mov
xchg
pop
ja
cmp
jg
call
daa
sbb
push
sbb
add
sbb
sar
pop
cwtl
push
add
xchg
stc
in
hlt
jl
jg
fdiv
loope
pop
out
out
stos
sar
das
mov
std
dec
or
sbb
sti
sbb
push
cli
mov
nop
or
lods
or
add
lret
test
outsl
clc
cmc
mulb
jo
out
lods
out
mov
out
cli
mov
mov
loopne
loop
in
scas
cmc
push
imull
inc
add
incl
jmp
cs
xor
das
in
sub
and
xchg
pop
icebp
out
fists
cli
add
xlat
fcomi
out
repnz
or
or
sbb
incl
sbb
or
adc
inc
sbb
sbb
pop
fstps
insl
adc
lcall
in
je
cwtl
out
xchg
cmc
insb
stc
add
enter
inc
incl
cli
pop
repnz
shl
inc
ror
leave
in
out
clc
dec
or
sbb
inc
ret
inc
subb
mov
lock
mov
fldcw
inc
pop
stc
decl
adc
or
cld
mov
add
add
pop
xchg
sbb
jmp
test
or
std
xor
out
mov
div
xchg
hlt
xor
cmp
clc
stc
out
jmp
dec
out
shlb
jecxz
jmp
mulb
and
mov
xchg
sub
and
jp
loopne
push
sti
icebp
inc
ljmp
jecxz
jg
out
push
add
pop
mov
add
std
sbb
mov
repnz
clc
in
stc
cli
adc
lahf
sbb
push
sbb
sbb
xchg
mov
dec
cld
mov
xchg
std
in
dec
testl
ja
add
out
shr
jecxz
ffree
loopne
out
sar
add
add
add
xchg
push
int3
or
call
cld
adc
add
cli
imul
adc
sbb
push
adc
addr16
incl
fbstp
cmp
mov
pop
in
rep
add
orb
adc
in
jae
cltd
clc
or
add
jg
mov
cmpsb
add
fcoms
pop
out
pop
push
mov
out
pusha
out
add
clc
fs
outsb
in
loop
ficoms
in
repnz
pop
aaa
cmp
mov
push
sbb
or
add
sub
in
lds
aam
fstpt
in
stc
sar
pop
cmpsb
ljmp
clc
jg
pop
sbb
js
lock
call
insl
stc
inc
add
add
push
cwtl
adc
jg
popa
rcrb
out
push
out
dec
sbb
cmp
xchg
add
or
push
mov
das
sbb
pop
cmp
and
mov
fbld
jns
icebp
in
out
sub
cmp
add
push
or
or
fwait
out
clc
push
test
sbb
lcall
in
in
fistpll
fiaddl
fstpt
xor
js
xchg
push
push
dec
pop
pop
and
sub
sbbl
mov
daa
mov
ds
divb
pop
cli
mov
loope
mov
repz
jnp
push
repnz
repz
clc
addb
loop
movlps
sbb
sbb
in
or
mov
xchg
out
mov
adc
test
std
mov
fwait
or
and
or
push
std
mov
mov
iret
loop
loopne
out
jmp
adc
leave
clc
daa
push
push
decl
testl
dec
adc
sbb
push
pop
or
xor
out
clc
adc
out
jmp
rcrb
out
or
mov
repnz
clc
mov
movsb
lcall
sub
add
jp
or
pop
out
add
jmp
sub
xor
xchg
push
jo
data16
mov
pop
outsl
or
incl
jbe
push
out
add
clc
gs
ljmp
ja
cmp
cmc
cltd
clc
push
call
inc
fwait
add
add
cmp
push
add
clc
int3
jecxz
in
mov
dec
incl
inc
and
sbb
adc
add
std
mov
xchg
out
fyl2x
pop
repnz
decl
repz
hlt
push
jg
push
add
divl
clc
mov
clc
cltd
std
cmp
cld
jno
rorb
sub
ret
sbb
sbb
shl
adc
outsl
inc
adc
incb
cmc
mov
sub
pop
std
push
xor
repnz
out
aad
mov
int
xchg
cli
scas
stc
js
mov
sbb
push
inc
icebp
or
out
push
cmc
lcall
add
shlb
and
xchg
pop
xor
push
or
incl
pop
notb
out
ljmp
pop
clc
xchg
jnp
inc
add
add
or
jle
clc
and
mov
repnz
add
popa
add
sbb
pop
sub
and
pushl
push
jmp
in
loopne
loop
jecxz
in
ljmp
inc
decl
sbb
add
clc
add
test
xchg
fdiv
cmp
sarb
cmc
cmc
mov
cmc
movsb
cld
mov
or
adc
adc
adc
sbb
mov
rolb
test
inc
neg
bnd
hlt
out
imul
mov
jmp
insl
out
mov
cld
in
fbld
pop
pop
ret
cmc
dec
add
in
push
sbb
xor
pop
icebp
jmp
mov
sbb
adc
jle
jnp
loope
adc
ret
out
mov
mov
out
fucomi
fucomp
test
ret
std
inc
add
decl
or
adc
or
ljmp
in
repz
mov
lcall
lcall
push
push
sbb
into
add
adc
push
sbb
in
loop
fimuls
mov
sbb
clc
in
add
add
xchg
adc
movhlps
jg
das
rclb
mov
or
push
xchg
or
sub
aas
pop
loopne
iret
or
add
push
incl
repnz
lock
outsl
repnz
inc
testb
add
pop
inc
push
test
sti
or
jo
std
or
pop
lods
add
cli
push
icebp
and
jne
mov
hlt
jge
mov
inc
jmp
adc
adc
clts
cmp
fdivr
int3
mulb
in
dec
pop
jg
sub
imul
in
icebp
jns
or
or
push
es
bound
adc
push
add
sti
jl
lods
repz
lock
jnp
cld
std
repnz
aam
adc
adc
adc
orl
add
stc
negl
sar
jl
movsb
clc
sar
stc
stos
vprotd
or
push
pop
and
dec
push
mov
sti
popa
stc
das
test
jmp
sub
aad
ljmp
push
add
or
adc
fistpl
or
movsl
adc
jne
xor
sahf
mulb
mov
hlt
icebp
clc
repz
xor
pop
or
fwait
push
lock
cli
push
xor
xchg
lcall
aas
dec
cmp
shr
inc
cmc
add
pop
or
jbe
pop
adc
lds
cli
jmp
adc
pop
rolb
xor
push
je
xlat
pushl
out
xchg
pop
incl
cmp
jb
call
imulb
jle
jne
jg
repz
add
outsb
pop
add
cli
lock
mov
out
mov
and
mov
cmc
xchg
cli
cmpsb
clc
or
push
pop
xor
adc
std
dec
inc
jg
lret
pop
out
jge
pop
repz
hlt
ljmp
pop
cmp
sti
inc
sti
das
cld
icebp
cli
inc
divl
jp
insl
idivb
incl
in
or
or
sbb
pop
sbb
adc
out
ljmp
call
repz
sub
test
sbb
hlt
mov
jp
test
mov
jbe
sahf
pop
xchg
sar
cmp
int3
add
add
cld
lock
cmpsb
incl
out
in
out
xchg
testl
cmovae
fdivrp
decl
and
in
adc
dec
std
pusha
hlt
sub
out
in
in
call
push
movl
rolb
movb
ljmp
negl
clc
jae
insl
pop
add
out
cmp
lcall
mov
jmp
stos
and
sbb
inc
pmulhuw
insl
icebp
lock
loopne
lcall
mov
add
cmp
mov
stc
addr16
sbb
movsl
cli
std
test
mov
mov
testb
push
mov
add
xor
cld
pushl
imul
bnd
sub
in
pusha
icebp
outsb
cld
adc
or
prefetcht1
cmp
jecxz
jle
lcall
pop
leave
pop
jp
dec
imull
jle
out
aam
jecxz
insl
sti
sub
add
dec
adc
faddl
inc
cld
mov
out
sub
cli
idivb
aaa
std
lcall
cltd
or
sbb
ds
pop
lcall
call
cmc
sub
jge
repnz
in
cli
psubq
cli
xchg
stc
pop
mull
call
icebp
mov
repnz
or
decl
sbb
or
lods
test
out
test
fcomi
scas
cli
add
pop
adc
xchg
or
cld
dec
divb
repnz
add
cld
push
jmp
cli
inc
add
pop
or
rclb
jnp
rorl
leave
add
add
sti
lahf
mov
test
sar
add
adc
mov
femms
mov
or
decl
cli
dec
repnz
or
sti
in
lods
lock
adc
negb
mov
test
inc
cmc
iret
stc
push
cld
pop
es
lcall
push
push
ret
cmpsl
sbb
sbb
sbb
pop
das
stc
shr
pushl
mov
scas
ficoms
xchg
out
iret
or
push
adc
into
adc
push
dec
push
call
decb
clc
sub
add
je
lds
sub
push
testl
jg
shl
loopne
jecxz
jmp
hlt
push
std
or
adc
or
loopne
out
mov
roll
roll
push
imul
into
divl
cmc
das
bnd
mov
sub
cli
dec
stc
push
stc
incb
or
or
push
push
pushl
ja
dec
push
int
mov
push
repz
jmp
dec
fisubl
out
clc
out
clc
push
sbb
or
mov
pop
adc
pop
or
mov
out
iret
add
lods
push
and
incl
cld
mov
push
in
mov
jecxz
in
jmp
stos
clc
pop
add
or
pop
sbb
loop
lea
pop
ljmp
std
or
scas
repz
mov
cli
push
jle
sbb
outsb
cli
call
cwtl
cld
movsb
cli
cmp
mov
rorb
call
or
movhps
mov
push
cli
outsb
repnz
loopne
fiaddl
in
out
fs
mov
jmp
push
sti
adc
push
or
pop
daa
fisubs
and
sbb
andb
jge
stc
lock
cli
addl
mov
insl
mov
sti
jnp
xchg
jmp
movsb
loope
in
mov
inc
cmp
dec
push
and
mov
xchg
sbb
sbb
jno
xchg
setle
add
es
cmp
das
sar
pop
add
add
add
add
add
add
push
clc
inc
hlt
loope
jecxz
out
out
in
cwtl
out
push
hlt
sar
add
adc
adc
imul
call
mov
fnstsw
jno
lods
fmull
clc
cmp
push
setno
rcrb
xlat
mov
sbb
jno
cmpsb
add
std
std
push
and
push
clc
sar
std
insb
add
das
sar
and
dec
cli
shl
mov
in
or
inc
out
lcall
jmp
nop
add
adc
xchg
sbb
sbb
lcall
push
mov
or
sbb
sahf
divb
in
push
jmp
in
out
incl
enter
mov
cli
jno
pop
or
lock
or
or
jo
mov
in
ljmp
mov
hlt
inc
sti
mov
or
adc
call
adc
xsha1
cmpsb
or
or
add
pusha
cli
cmp
sar
rolb
adc
stos
or
or
jmp
or
or
add
and
jo
loop
movsl
aad
aad
fldt
sti
ret
add
cld
pop
in
daa
pop
sub
push
pop
push
decb
push
jl
idivl
add
sti
inc
std
jbe
loop
stc
pop
negl
mov
out
and
mov
out
mov
jg
pop
sbb
and
and
add
clc
jmp
cwtl
loop
fistpl
fisubrl
fcomip
mov
in
stos
mul
add
adc
sbb
pop
mov
jecxz
add
add
push
pop
or
decl
testl
loopne
in
jmp
hlt
dec
add
sbb
sbb
push
out
int3
sbb
or
movb
lcall
add
decl
cld
leave
clc
fdivp
aas
repnz
in
dec
ljmp
out
out
add
inc
add
jmp
sbb
pop
and
mov
sub
pop
fcoms
pop
push
pop
add
mov
jecxz
xchg
lock
loopne
fists
and
loop
out
hlt
sar
decl
sar
add
cmp
addr16
push
nop
push
fistl
sbb
inc
adc
pushl
rorl
add
or
fsubrp
dec
jmp
jmp
ljmp
icebp
lock
mov
fs
cld
ret
sub
mov
push
mov
push
adc
push
test
sbb
sbb
sbb
adc
push
cmp
shlb
jmp
out
pushl
add
repnz
test
pusha
dec
or
or
mov
insl
adc
ret
adc
cli
adc
fimull
ljmpw
incl
or
fcmovnu
xchg
in
push
add
pop
pop
xchg
push
js
ljmp
incl
sbb
mov
iret
or
mov
stc
inc
div
not
clc
in
push
sar
lods
std
xchg
lods
incl
sti
sub
push
pop
icebp
iret
in
inc
in
xor
aam
pushf
out
inc
repz
cli
mov
pusha
or
sbb
sbb
sbb
in
ljmp
adc
or
push
cmc
decl
imul
hlt
adc
inc
testl
push
sti
inc
std
add
add
addr16
incl
add
pop
fs
or
or
orl
or
aad
adc
jmp
sub
sbb
mov
hlt
daa
sti
in
js
std
xorl
sub
add
jb
pop
les
enter
das
cli
jg
mov
or
cltd
pavgb
pop
pop
add
decb
into
out
out
adc
shr
lds
cmc
cmp
pop
or
or
or
xchg
or
or
pop
or
or
mov
cmp
aas
addb
or
cli
hlt
jae
pop
mov
mov
xchg
dec
lock
icebp
sbb
mov
push
std
or
cmpsb
call
sub
popf
push
jns
sub
cs
sti
ds
mov
xlat
jg
notl
repz
repnz
ljmp
dec
imul
adc
incl
lock
sub
scas
sbb
aam
andl
and
sbb
lcall
and
push
div
repnz
lods
out
imul
add
dec
pop
mov
jmp
in
mov
cmpsl
in
pop
in
mov
out
cld
rclb
or
decl
mov
and
sbb
rorl
lcall
add
mov
insb
bnd
lock
mov
in
mov
cmc
aad
data16
incl
pop
hlt
or
adc
sbb
push
add
adc
xor
outsb
or
scas
and
insl
jecxz
mov
shll
ljmp
jno
iret
aad
fst
out
repz
adc
cmp
inc
and
jbe
test
sbb
adc
xchg
mov
mov
dec
add
call
jns
gs
ss
stc
fisttps
loop
in
jg
fildll
lret
in
dec
repz
movsb
adc
mov
outsl
and
test
xor
inc
sbb
or
ds
outsl
hlt
dec
out
and
pop
out
decl
lret
mov
hlt
xlat
clc
repnz
cmp
adc
sbb
push
sbb
sbb
repz
add
mov
adc
jmp
jecxz
frstor
loop
mov
out
in
jne
fdivrp
cmp
pop
or
or
ljmp
mov
pop
sbb
sbb
sbb
inc
push
out
sbb
or
dec
add
mov
fildll
fcoms
push
fcompl
sbb
icebp
mov
pop
cmp
cwtl
sbb
scas
sbb
sbb
sbb
push
sbb
adc
add
sar
cli
dec
cmc
jge
sub
xchg
call
sbbb
icebp
lret
testb
add
pop
hlt
pushl
bound
xchg
adc
unpckhps
enter
add
aas
or
mov
jg
lods
call
xchg
jmp
jmp
out
jmp
lock
icebp
and
xchg
cli
mov
or
sub
call
jbe
jo
jecxz
dec
sbb
pop
or
xchg
xchg
std
arpl
push
idivl
hlt
sti
out
daa
out
sbb
add
pushl
and
xor
pop
jmp
roll
or
in
cs
incl
outsb
pushf
push
mov
aad
scas
or
or
nop
scas
xchg
rolb
add
add
in
mov
fwait
std
sti
sti
xchg
sti
in
or
nop
sti
mov
imul
neg
shl
lcall
clc
ja
add
cld
std
ds
add
pushl
jne
add
or
or
or
pop
push
push
push
and
jg
movl
lret
mov
repnz
add
ljmp
push
jmp
out
sbb
cli
mov
cld
decl
rclb
stos
adc
lcall
adc
and
cs
sahf
or
or
lock
incb
mulb
cmp
sub
cld
in
or
ja
pop
notb
je
cmp
adc
pop
lock
sbb
sbb
sbb
push
mulb
out
out
cli
add
in
xor
cmp
std
jecxz
loop
loop
in
call
cs
int3
add
dec
sbb
and
jmp
decl
test
aaa
push
mov
mov
imulb
ljmp
incl
in
jecxz
loope
loopne
loopne
in
ljmp
cmc
call
sbb
and
and
inc
daa
les
cmp
push
rcrl
adc
or
stc
out
jp
cwtl
ljmp
inc
out
in
in
out
call
in
push
out
mov
clc
xor
mov
fmull
adc
sbb
mov
sub
daa
jge
dec
inc
push
pop
repnz
dec
int3
in
das
jp
decl
incb
loope
outsb
out
jmp
mov
std
sub
insl
mov
or
rclb
pop
adc
and
mov
dec
adc
clc
and
mov
xchg
jecxz
fisttps
jmp
ficoms
in
jmp
jg
das
push
jnp
sbb
rcll
sti
push
mull
mov
es
sbb
sbb
adc
add
lcall
mov
jecxz
loop
jecxz
loop
loope
in
call
xor
cmp
sbb
and
xor
adc
lcall
xchg
push
pop
xchg
sbb
sbb
add
jl
jnp
aad
jmp
mov
fistpll
loop
out
jmp
out
xchg
testb
add
sub
pop
cmpb
adc
adc
adc
adc
adc
lcall
fimuls
or
add
cli
xchg
bnd
push
sub
aad
inc
fnsetpm(287
add
dec
fsubrs
jmp
ja
jle
scas
out
pslld
dec
add
mov
popa
adc
mov
and
and
adc
ljmp
iret
add
cli
pop
rep
in
movsl
jecxz
loopne
loopne
loopne
dec
out
ljmp
push
xor
push
std
xchg
mov
add
incl
es
or
or
pandn
outsl
adc
adc
adc
ud0
jp
pop
add
xor
cmc
jmp
jmp
fcomip
xor
ljmp
lcall
or
or
jnp
add
adc
push
or
mov
or
or
or
or
or
add
dec
pop
icebp
inc
in
repz
clc
pushl
call
sbb
pop
in
mov
push
repz
pop
mov
clc
out
cli
stc
mov
mov
xchg
add
add
adc
sbb
incl
pop
adc
inc
add
cmc
jns
xor
inc
lock
incl
divl
dec
negl
dec
testl
xor
lret
sti
ljmp
test
sub
or
scas
adc
push
mov
xchg
sbb
pushl
sbb
sbb
adc
push
pop
or
push
add
clc
js
mov
cmc
div
jbe
cli
decl
hlt
jecxz
cs
sub
pushf
testb
stc
cmp
sbb
or
add
ljmp
ret
adc
push
bound
pop
xchg
add
std
jb
loop
push
out
cmc
in
icebp
shl
gs
icebp
out
jmp
mov
dec
in
fucomip
mov
out
or
es
add
xor
adc
jg
lcall
loopne
mov
es
sbb
shll
loop
xchg
clc
adc
lcall
jmp
pop
in
out
jmp
add
xchg
in
xchg
out
inc
repnz
and
idiv
inc
jg
or
cmp
pusha
pop
ret
les
add
add
cmp
clc
in
es
adc
std
in
cmc
mov
mov
jnp
incl
in
jmp
cmp
mov
push
xor
xchg
add
pop
test
nop
fisttpl
lea
paddsw
push
adc
stc
push
dec
push
nop
adc
les
mov
cmp
xchg
notl
repnz
out
in
in
in
out
shr
add
adc
mov
out
ljmp
ljmp
notl
sub
and
jnp
ljmp
add
cmpsl
hlt
or
in
jae
loope
push
fldl
add
pop
lock
enter
in
fdiv
xor
sub
lock
fldt
lods
jg
or
into
sbb
and
es
daa
jg
ljmp
lock
xchg
adc
mull
out
push
sub
jecxz
call
incl
loope
out
jmp
mov
xor
cld
test
jle
or
decl
inc
adc
sbb
push
mov
sbb
xchg
std
mov
mov
mov
adc
rcr
mov
mov
insb
repz
cmpsb
mul
clc
popf
stc
pop
sti
cs
out
xchg
jle
inc
or
adc
fistpl
and
xchg
daa
sub
sbb
rcll
pop
adc
or
lock
in
fildll
aam
cld
fstps
incl
stc
and
icebp
push
and
inc
adc
adc
adc
test
insb
adc
decl
adc
adc
adc
or
rorb
jecxz
sti
cmc
xor
bnd
cmp
jmp
mov
fdivl
insb
out
out
jmp
adc
mov
push
in
scas
popf
repnz
sbb
mov
lods
push
mov
std
sahf
sti
in
cli
scas
clc
outsb
cmc
outsl
repnz
jno
test
cmp
ljmp
mov
adc
cld
push
add
push
popf
or
or
or
imul
add
ss
inc
clc
sar
dec
ja
sar
div
stc
daa
add
add
add
add
sti
in
aaa
std
hlt
push
popa
lock
mov
clc
lock
or
mov
adc
clc
xor
aas
adc
out
testb
add
cli
in
hlt
sbb
fucomip
xor
cld
sbb
mov
push
cld
add
pop
inc
or
adc
or
jg
decl
sahf
push
sbb
adc
inc
cld
aam
dec
add
and
pushl
leave
or
push
add
cld
jecxz
add
inc
repnz
cmc
inc
jg
pop
sar
push
sub
repz
clc
repnz
adc
cmp
adc
mov
imul
push
sti
sar
xchg
negl
testl
inc
pop
inc
cmc
enter
lahf
repnz
out
aam
jmp
call
fbld
mov
div
sbb
sub
lock
or
in
std
lcall
and
and
and
and
and
inc
or
hlt
int3
in
mov
pop
xchg
nop
ret
out
jmp
add
cld
pop
cld
adc
sahf
cli
mov
adc
ljmp
fdivp
add
adc
pusha
sbb
sbb
test
fdivr
and
and
adc
call
decl
loop
loop
jecxz
out
ljmp
cmp
mov
or
icebp
ljmp
or
or
pop
or
or
cmp
or
adc
add
mov
push
stos
add
stc
adc
push
sar
lcall
enter
and
loopne
loop
in
jmp
shlb
cld
dec
stc
or
popa
std
inc
std
in
sti
cli
clc
push
neg
add
pop
test
call
push
xchg
cli
or
push
or
push
push
adc
adc
cmp
jg
sbb
pop
jl
cmp
aad
adc
xchg
cmc
push
out
mov
push
jle
ds
das
sti
jb
lds
fsubrl
jae
out
add
pop
mov
aas
sub
std
das
mov
add
add
or
pushl
or
or
or
mov
pushl
dec
pusha
push
lock
lock
icebp
xchg
cmc
pop
cli
outsl
mov
inc
add
int
dec
adc
adc
stos
or
in
add
add
call
cmpsb
cld
or
ret
cld
insb
jg
add
add
or
push
push
add
insb
data16
mov
in
fldz
sbb
adc
test
add
or
adc
mov
aam
add
xchg
ljmp
clc
lcall
into
notl
adc
adc
adc
push
push
cli
decl
ret
add
idiv
repnz
icebp
clc
mov
pushf
push
leave
or
push
cld
push
pop
fcoms
rorb
and
sbb
sbb
ret
cli
movsl
cmp
jmp
jmp
gs
lock
push
cld
inc
js
pop
xor
lcall
adc
push
jl
xchg
push
ret
push
mov
push
in
call
pop
push
jae
rorl
dec
or
or
lea
mov
enter
movsl
cmc
mov
mov
std
out
test
inc
out
pop
out
cmpsl
lock
repnz
cld
dec
add
call
pop
add
mov
sti
or
test
or
or
or
or
and
das
or
cli
sti
cmp
repz
inc
in
cli
call
lcall
in
in
in
out
ljmp
std
cli
pushl
jne
or
jg
sahf
sbb
sub
scas
and
push
stos
fcomip
out
sbb
add
lock
cmp
ljmp
mov
js
int
in
scas
repnz
negl
cli
push
stc
sub
mov
call
imul
cmpsl
or
lds
lcall
mov
sahf
pop
stos
push
add
pop
or
add
inc
imulb
jmp
jmp
icebp
loopne
mov
add
add
add
add
add
add
mov
sar
push
testl
fiaddl
repnz
adcl
sbb
adc
jg
out
push
popa
repz
out
imul
test
dec
jmp
in
mov
clc
push
pop
or
cld
stos
pusha
int3
lods
add
add
ljmp
out
add
hlt
adc
repnz
repnz
add
lahf
negl
idiv
add
push
mov
fbstp
adc
mov
or
or
push
mov
fdivr
clc
pop
icebp
jmp
cli
and
sti
pop
pusha
cld
mov
std
mov
push
jecxz
out
out
and
cld
inc
std
leave
cld
adc
mov
add
add
add
pop
adc
pop
or
or
fimuls
in
aaa
mov
mov
lahf
add
ret
ret
std
sar
mulb
cli
stc
pop
stc
sbb
cmp
aas
stc
mov
and
inc
notl
clc
xor
sar
fs
ss
jno
mov
add
stos
cmpsl
pop
dec
decl
push
push
or
mov
or
fildl
xlat
add
ljmp
cli
ja
sub
xchg
ljmp
push
aam
push
cld
sbb
dec
cli
mov
out
mov
clc
cs
sbb
std
test
mov
mov
push
pop
jl
dec
sbb
jg
add
ss
add
add
add
inc
decb
push
data16
cmp
mov
icebp
push
pop
add
xor
sbb
mov
mov
idiv
outsl
push
or
or
insb
add
sar
mov
sti
push
mov
jmp
add
push
jle
sar
mov
out
les
cmc
std
push
cli
pop
sbb
mov
pop
cmc
imul
sub
jmp
iret
add
or
jg
lock
out
or
incb
sti
xor
loop
dec
icebp
jns
fwait
cs
pop
lock
or
cmp
sti
stos
std
inc
cmp
mov
mov
cmp
insb
or
cs
add
jmp
shl
sbb
inc
jbe
push
std
std
cmp
scas
mov
mov
add
fldl
jp
lcall
sahf
add
add
add
dec
cli
jns
xor
clc
ljmp
inc
pop
rol
loope
dec
add
pop
icebp
jmp
or
add
jb
stc
adc
push
out
cmc
out
or
out
cmp
fucomi
aad
jmp
out
js
adc
sub
mov
or
test
decl
or
movsl
or
testl
dec
or
test
lcall
dec
sti
dec
clc
mov
xor
daa
lock
mov
cmc
cmp
push
adc
push
sbb
ds
pop
mov
incl
add
adc
fiaddl
cmp
pop
data16
outsl
add
dec
loop
add
add
call
add
das
std
dec
cld
stos
sti
pusha
sti
sar
xchg
incl
pushl
add
sub
int3
pop
adc
addb
mov
add
pop
in
dec
dec
cli
gs
adc
jp
adc
pop
cld
xor
sub
out
xor
add
add
add
add
add
add
roll
add
jmp
push
mov
cmpsb
mov
lcall
inc
cli
xor
pop
clc
ss
hlt
or
jle
mov
je
mov
js
mov
ljmp
add
mov
mov
jp
push
stos
or
out
loop
mov
mov
push
dec
std
pop
sti
clc
inc
notl
mov
cmc
xchg
addr16
testl
stc
int
in
decl
sti
lods
cld
hlt
std
js
dec
add
push
sub
aam
xor
mov
pop
push
dec
or
or
add
fdivr
inc
cld
psubw
int3
hlt
arpl
xchg
hlt
adc
cmp
enter
sub
inc
incb
mov
add
cli
std
xchg
std
cwtl
std
or
pushl
add
or
or
or
or
pop
scas
mov
aad
std
xor
stc
insl
stc
add
mov
cmp
std
pop
jmp
add
decl
add
cld
test
subl
mov
test
xchg
test
es
push
add
add
add
dec
or
push
or
rorl
or
add
mov
mov
sbb
jo
std
ds
mov
lods
fidivrs
push
testb
repz
repnz
bnd
js
push
lock
xchg
clc
fcomps
mov
loope
or
or
fimuls
jg
or
roll
dec
push
dec
add
add
mulb
inc
sahf
in
xor
not
divb
fidivrl
hlt
idiv
mov
jmp
stc
pop
cli
push
sti
xchg
mov
add
movb
movb
or
decl
or
or
aad
mov
or
or
mov
add
add
decb
sbb
cmp
pusha
add
mov
cli
or
cld
inc
adc
std
test
sar
fscale
scas
std
jg
test
arpl
dec
std
inc
std
or
push
std
dec
bound
mov
into
loop
sbb
decb
cmp
lcall
cmp
popf
add
rolb
call
xchg
xchg
popl
add
jo
and
mov
fs
jg
sti
add
add
xchg
cld
cli
push
cli
sbb
jmp
testl
negb
clc
mov
xchg
cli
kmovd
push
xor
xchg
push
sar
fcomip
mov
or
lret
or
push
mov
add
ljmp
out
ljmp
mov
aaa
sti
pushl
shll
cli
xchg
cli
out
mov
xor
inc
add
or
out
cli
sbb
mov
sbb
or
or
les
add
mov
add
sti
xor
gs
cmp
lcall
std
pushf
std
add
xor
sub
xchg
data16
mov
mov
cltd
add
inc
add
add
call
cld
pop
sti
aad
xbegin
inc
div
jbe
divl
clc
jmp
das
repnz
fdivr
lods
ljmp
add
and
mov
add
call
and
std
ret
cli
mov
idivl
inc
test
stos
outsl
mov
stc
jno
nop
sti
js
cmp
inc
add
add
sti
add
stos
lods
push
add
add
mov
lahf
add
dec
add
add
pop
and
add
ds
shll
sub
cld
outsl
cld
push
std
pop
pushl
mov
add
push
movsb
add
add
add
add
dec
add
hlt
cmp
push
add
ret
pushl
add
loope
lcall
sub
sti
cmp
out
add
mov
call
mov
add
test
add
add
fs
lsl
add
inc
add
cs
clc
out
clc
sbb
sti
pop
sti
mov
sti
imul
lcall
jae
fiadds
std
jp
in
xchg
daa
lret
jmp
cli
push
or
dec
cli
es
call
sarb
and
jmp
add
add
into
pop
mov
adc
mov
sbb
push
add
mov
mov
push
push
push
mov
cmp
in
notb
std
jge
mov
and
push
incb
aam
xchg
xor
rolb
push
lods
es
aas
push
sub
gs
add
mov
and
test
in
push
fwait
jmp
aas
mov
dec
pushl
cmpsl
push
jecxz
scas
xchg
dec
stos
push
and
add
pop
decl
test
outsb
add
jmp
add
inc
add
call
add
add
daa
add
add
and
mov
std
add
add
sub
sarb
add
xchg
add
push
pop
xor
ds
jg
std
sub
jns
cltd
sti
int
xlat
stc
idiv
push
clc
cwtl
testl
mulb
test
push
mov
fincstp
mov
sti
sbb
stc
xchg
add
shll
cld
dec
mov
xor
or
jg
pop
movl
insl
add
add
nop
std
movsl
cld
idiv
push
sti
push
sti
cmp
ds
inc
lock
push
lret
pusha
std
or
incl
add
cmp
outsl
push
aaa
add
mov
clc
add
sub
add
loop
inc
add
das
adc
push
sub
xchg
add
out
jnp
fisttps
std
pop
cld
push
sti
cli
jp
cmp
inc
cli
cmpsl
cli
pusha
sti
cmp
std
repnz
cmpsb
mov
cmp
add
add
and
mov
je
add
outsl
das
push
jno
add
add
mov
add
add
test
jmp
add
add
mov
cmc
pop
jg
mov
cmp
std
jb
in
adc
pop
add
and
pushl
add
cs
cld
mov
stos
cli
leave
stc
xor
stos
clc
jb
insl
clc
ja
jmp
lcall
and
clc
cmp
stc
inc
cli
jo
mov
cld
std
cld
out
cli
loope
inc
jmp
xchg
add
push
outsl
pop
mov
jge
stos
or
add
decl
call
add
sub
out
mov
jmp
mov
sti
ficomps
lcall
sti
or
lock
cld
inc
std
xor
push
xchg
add
inc
lcall
push
xchg
push
add
inc
push
out
add
pusha
jo
cmc
jbe
mov
cmpsb
sbb
cld
jmp
ret
cld
add
push
sti
iret
cli
pop
cli
daa
dec
jae
pop
inc
sti
mov
sti
sub
std
enter
add
add
add
add
add
hlt
add
faddl
mov
push
scas
add
lcall
pop
aad
add
pop
jnp
cmp
xor
push
sub
rorl
dec
mov
out
call
stc
decl
lods
shrl
std
xor
sar
cld
in
sti
jl
sbb
sahf
mov
cli
and
push
std
jg
sti
inc
sti
cmp
cld
nop
cld
sub
stc
push
inc
push
lock
jg
xchg
push
add
add
add
mov
flds
fiadds
add
xor
push
add
decl
lcall
jns
idiv
jno
or
cmc
sti
pop
mov
std
or
outsb
fnstenv
sar
and
cmp
lcall
add
ja
sub
mov
pop
add
add
out
pushl
xchg
add
add
add
fiadds
popa
loope
add
sbbb
decl
stos
pusha
pop
and
paddd
arpl
mov
cmp
push
add
fwait
or
push
out
add
mov
ljmp
sarb
inc
add
add
or
add
add
ret
add
pop
dec
push
mov
fdivr
pop
sarl
jecxz
dec
lret
push
mov
fimuls
add
add
getsec
in
mov
neg
lcall
incb
out
inc
iret
std
mov
std
fs
xchg
add
push
jb
mov
mov
sbb
xorb
lods
push
jnp
stos
mov
ljmp
dec
pop
mull
pusha
hlt
xlat
sbb
sbb
xor
loop
or
shrb
add
push
add
insb
cmpsl
add
xor
or
aaa
pop
sbb
xor
mov
fdivr
mov
add
add
add
iret
ljmp
out
cmpsb
mov
jl
stos
std
stc
or
inc
add
sar
xchg
mov
sbb
nop
mov
add
add
add
cmc
inc
test
movsb
add
jbe
cs
ret
ret
or
sub
pop
add
inc
out
outsb
stos
jmp
dec
adc
repnz
mov
sahf
push
call
loop
call
cmp
test
sub
add
incl
xchg
outsb
cmpsb
pop
add
add
add
add
or
pushl
aaa
loope
mov
std
fdivr
stos
cld
xchg
cld
mov
cld
lds
js
insb
call
push
mov
pop
push
mov
ljmp
loope
add
sti
es
sub
test
rorl
std
sar
mov
idiv
xchg
decb
loop
adc
ret
outsb
push
add
stos
lret
add
add
sub
jo
sbb
push
add
pushl
inc
add
pop
lret
push
add
jp
addl
add
clc
push
cld
adc
decl
push
mov
daa
pushl
mov
or
xchg
add
add
rcrb
push
push
mov
mov
cmpsb
mov
cmp
testb
bnd
push
cmp
ficoms
mov
ljmp
scas
cmp
popl
adcb
add
je
ret
sbb
xchg
add
push
mov
mov
jg
pop
test
fldl
in
dec
out
mov
ljmp
ret
cs
int
sahf
cld
push
cld
inc
cld
arpl
lcall
sahf
mov
sub
stos
ret
cli
rcll
fildl
mov
int
aad
lcall
das
incb
mov
into
test
std
inc
mov
ss
pop
pop
pop
loopne
cld
out
push
xchg
stos
out
std
sub
pop
into
divb
add
test
lret
jp
mov
add
cltd
add
and
add
pop
or
add
mov
incb
and
fisubrs
sub
iret
ja
and
pop
cld
pop
inc
dec
or
add
es
sub
ja
add
icebp
test
jbe
lea
inc
ljmp
ljmp
pushl
push
sub
ret
call
aam
sub
add
add
test
vmovntps
mov
add
adc
push
mov
add
aaa
popa
sti
into
add
adc
dec
or
or
mov
cmpb
push
aad
idiv
sbb
pop
std
mov
cmp
out
dec
pushl
add
xchg
loopne
fldl
ficoml
pop
movw
bound
inc
decb
lret
mov
shlb
or
mov
ds
pop
sti
sti
std
adc
xchg
cld
sbb
loope
sahf
lcall
call
loop
inc
add
add
shlb
add
add
add
test
lds
ret
lret
xchg
fiaddl
adc
push
adc
leave
push
pop
push
sar
cs
stos
add
pop
mov
sar
pop
pop
es
inc
ud0
ja
pop
add
call
add
add
add
aad
mov
mov
pop
add
jmp
call
shll
pop
mov
add
ja
jecxz
xchg
mov
loope
outsb
lret
mov
jge
cli
and
inc
sahf
loop
add
xor
mov
imul
or
lods
ret
pop
sub
decb
lds
mov
popf
ret
jmp
and
je
mov
push
cmp
lds
or
jecxz
out
inc
mov
mov
addr16
jle
dec
std
or
hlt
cld
enter
loop
xor
and
insl
jb
push
fisubl
outsl
and
xor
push
lods
bound
mov
cli
into
xchg
add
add
mov
call
add
jne
jg
icebp
ret
add
ret
decl
decb
les
jnp
movsl
dec
jg
arpl
mov
push
in
mov
pop
dec
pop
inc
jle
push
ret
add
push
or
and
inc
adc
aad
mov
push
add
add
loope
stos
jno
push
outsb
nop
push
xlat
add
add
add
push
mov
loopne
rcll
inc
xchg
fsin
cmpsl
decb
push
lcall
pop
sbb
movb
scas
xchg
out
sub
hlt
jecxz
cmp
bound
cmp
or
imul
add
addl
mov
std
jp
cmp
push
rcr
addb
adc
pop
cs
mov
mov
fildll
push
inc
jp
push
pop
add
ss
add
sbb
out
add
add
lcall
cmpl
inc
fisubrl
mov
addb
repnz
mov
adc
xchg
stos
pop
or
jnp
jl
jle
aam
out
inc
or
aas
rol
movl
push
mov
sarl
rol
stos
mov
ret
jbe
orb
xchg
add
sub
cmovge
sub
pop
inc
ret
jecxz
mul
add
add
dec
ficoml
cmpsb
sbb
mov
mov
out
xchg
mov
idivb
aad
or
xor
xor
pushl
jno
test
rclb
fdivr
add
xor
call
pop
incb
out
lcall
mov
loop
sbb
mov
or
jb
outsl
lcall
iret
jp
push
scas
or
or
push
cmc
sbb
out
cmp
data16
decl
hlt
add
add
add
pop
or
test
inc
cmpsl
mov
aam
xchg
cmpsb
mov
mov
xor
add
sbb
cmp
jno
and
push
mov
xor
jae
sub
and
add
sbbb
lock
inc
add
out
pushf
push
ja
mov
inc
ss
pop
sbbl
push
fnsave
into
divb
add
test
scas
cltd
add
push
iret
push
pop
popa
into
pushl
decl
pop
or
hlt
fbld
decl
push
fsubrp
scas
cltd
decb
sahf
out
adc
std
ss
std
cmpsl
std
xor
sub
sub
dec
jp
test
jl
mov
jp
ret
cmp
pop
test
es
xor
arpl
adc
push
pop
jmp
mov
push
and
cli
pop
ljmp
dec
mov
add
add
push
hlt
jo
hlt
out
lgdtl
or
loop
es
mov
popl
sahf
rcl
cli
cmova
mov
roll
mov
lcall
mov
xchg
jecxz
test
add
inc
out
sti
sbb
mov
pxor
xchg
ret
lret
cmc
push
addl
jge
inc
mov
rcrl
gs
xchg
mov
in
or
sbb
popf
icebp
imul
cmp
and
bound
dec
mov
sbb
rcll
adc
mov
fldl
inc
cli
mov
roll
push
divb
out
incl
pop
outsb
xchg
stos
inc
add
lea
pop
loopne
cmp
repnz
imul
pop
out
ljmp
aam
mov
scas
jnp
inc
pop
sub
pop
ss
dec
cmpsb
outsb
xor
cmp
bound
in
iret
add
mov
push
dec
pop
xor
mov
lret
aad
push
mov
lock
sahf
jns
insb
lret
adc
out
mov
mov
movl
stos
mov
cmpl
loopne
jmp
or
notb
dec
ret
mov
adc
outsb
cmc
jp
std
sbb
push
adc
pop
andb
xchg
dec
test
inc
shrl
push
xor
cmp
out
test
or
push
inc
mov
add
add
dec
sbb
push
mov
inc
xchg
sbb
shlb
in
test
outsb
mov
or
sahf
mov
mov
loope
int3
push
test
or
push
jb
add
dec
pop
shlb
imul
ds
pop
mul
cli
mov
push
loope
inc
scas
inc
movsb
xchg
xchg
jb
jge
shl
data16
es
aam
js
outsl
lret
out
adc
xor
jbe
ret
test
sub
jbe
mov
mov
mov
fcomi
inc
xchg
bound
pop
fidivrl
je
mov
pop
mov
pushl
test
and
mov
cs
rcll
repnz
cld
sbb
inc
mov
cli
lods
lret
fmull
adc
rcll
outsl
push
inc
mov
iret
andl
push
xor
andb
inc
mov
jo
add
cmp
xor
lods
xchg
jns
cld
hlt
hlt
jno
jbe
push
push
daa
repnz
cs
dec
push
push
xchg
mov
jmp
loope
out
xchg
lcall
dec
push
push
dec
fimull
dec
std
mov
inc
jp
add
adc
add
sub
ds
mov
cmp
cmp
dec
ficomps
push
pop
stos
lock
add
outsb
lock
rol
fcoml
aam
in
push
lret
outsb
mov
out
xchg
push
repnz
bound
or
popa
ss
push
mov
adc
cs
mov
mov
add
push
mov
push
mov
push
xchg
lods
push
mov
faddl
or
jecxz
mov
subl
outsb
test
outsb
cli
lock
hlt
mov
hlt
jno
shlb
cli
jbe
ret
addl
into
xor
cs
push
push
mov
mov
outsb
pop
dec
ljmp
int
mov
add
pop
add
stos
fadd
xchg
lret
ret
fidivrl
and
dec
push
or
or
mov
fiadds
jb
xlat
test
jg
cmp
push
push
je
js
imul
into
pop
pop
fs
adc
lcall
or
mov
cld
adc
ds
mov
cmp
test
mov
addl
dec
sbb
scas
inc
xchg
fidivrl
mov
jbe
inc
mov
pop
out
push
or
mov
in
mov
xor
push
pop
push
into
push
cmpb
shll
outsl
pop
addr16
push
push
insl
add
pop
add
cmp
jecxz
jl
addb
cmpb
cmp
mov
xor
sub
fistpll
cli
xor
adc
adc
add
repz
xchg
mov
add
add
mov
or
push
sahf
cmpsl
scas
cmpsl
and
or
fldcw
push
sahf
lcall
sarl
loop
push
into
mov
sbb
jecxz
into
add
inc
lods
push
xchg
faddp
mov
rcrl
fbstp
mov
sub
jbe
cli
dec
out
sbb
fists
fiaddl
cmp
push
inc
rcrl
dec
mov
push
jp
ss
mov
ret
sbb
out
xorb
xor
sub
aaa
fidivrl
push
jo
ljmp
mov
sub
idivl
inc
jbe,pn
mov
or
roll
ljmp
es
vpslld
divl
cmp
or
adc
fcmovu
js
lods
mov
pop
jbe
ds
add
jbe
mov
loopne
jge
add
mov
out
rcr
ss
and
jle
arpl
icebp
dec
jmp
or
xlat
je
xor
scas
ret
enter
dec
mul
fbstp
subb
xchg
fmuls
cmp
or
repnz
sbb
into
add
lcall
pop
out
jp
add
into
iret
negl
pop
pop
inc
push
faddl
and
push
cmp
push
cli
ljmp
push
scas
fsubrp
ret
das
jle
jb
xchg
cmc
lret
mov
jnp
out
mov
adc
jb
add
mov
sbb
shr
add
adc
je
sbb
sbb
movb
or
mov
push
mov
in
aad
out
mov
jbe
outsb
clc
mov
add
add
sahf
jmp
mov
push
aad
hlt
inc
sti
out
xor
and
mov
in
mov
lock
scas
lret
adc
adc
inc
repz
fisubrs
divb
in
in
out
inc
add
lock
mov
push
sbb
dec
cs
loopne
out
imul
mov
lret
push
mov
je
testl
stc
out
mov
bound
incb
sub
data16
out
fidivrs
in
sub
clc
dec
xor
stc
cmp
imul
xchg
mov
jnp
push
daa
pop
inc
fiadds
outsb
addr16
lcall
in
or
mov
in
mov
push
pop
hlt
lock
push
fsubrp
loop
out
xor
inc
idivl
sbb
mov
ret
mov
out
sub
sbb
imul
out
ds
inc
sbb
sarl
sbb
sbb
add
mov
adc
cmp
ss
loope
mov
push
out
pop
or
lock
sbb
sub
push
cli
out
push
clc
jmp
out
dec
loopne
not
cmc
add
add
or
pusha
mov
or
push
pop
loope
xor
out
loope
repz
adc
adc
push
loope
jae
push
xor
out
loope
mov
adc
xor
mov
fistpl
frstor
mov
push
cmp
jo
push
pop
arpl
adc
ffree
testl
es
cmp
loopne
out
iret
add
lret
jnp
fcompl
fcomi
push
idivb
sti
mov
call
inc
mov
fst
fwait
add
sti
aas
testb
inc
and
add
inc
dec
pop
adc
adc
aas
sbb
sub
xchg
sub
or
sbb
adc
cmpsl
jo
dec
jb
inc
addb
and
push
je
jl
add
jge
jns
jnp
addb
imul
insb
testb
add
es
sub
popf
jle
inc
push
aaa
xlat
fdivrp
faddl
jp
stos
addl
in
jge
cmp
sbbb
fistpl
js
dec
test
jnp
inc
cmpl
cmp
addl
jl
mov
xor
and
jle
jp
test
in
pop
xor
rolb
shrb
bound
jge
aaa
call
add
int3
pop
inc
jl
jns
xchg
xchg
jo
xchg
sbb
xchg
mov
outsb
push
clc
lcall
push
test
lea
cltd
mov
decl
inc
inc
cmp
stos
cmpsb
popf
mov
pop
pop
data16
mov
mov
pop
incl
cmp
push
andb
push
dec
inc
dec
pop
ja
movsl
mov
mov
mov
jbe
std
call
cmp
xor
xchg
lods
mov
pusha
dec
dec
dec
pop
jno
cmpsb
ds
mov
jecxz
testb
push
outsb
lea
jge
inc
push
bound
out
clc
mov
sahf
xchg
xchg
xchg
lea
inc
ds
outsl
xchg
stos
mov
stos
cwtl
jns
push
call
imul
test
jns
dec
dec
push
inc
dec
test
test
pop
ljmp
andb
popf
stos
cwtl
stos
notb
cmp
outsl
xchg
ljmp
jne
push
pop
bound
cmpsb
mov
lods
mov
pop
dec
inc
dec
inc
dec
popa
jg
sbbl
pop
pop
arpl
xchg
mov
xchg
xchg
xchg
jg
jg
incl
dec
inc
dec
bound
xchg
subl
mov
mov
insl
add
dec
data16
push
pop
popa
jb
imulb
clc
test
cltd
xchg
inc
cmp
jne
cmpsl
lods
movsb
sahf
mov
pusha
push
divb
pushf
scas
mov
test
cmp
ljmp
inc
popa
sbbb
pop
push
pop
addr16
movsb
mov
lods
mov
mov
inc
dec
inc
push
jne
movsl
lods
cmpsl
popf
ja
jo
mov
lcall
lcall
mov
pushl
push
push
data16
movsl
mov
cwtl
xchg
xchg
cmp
add
pop
jle
scas
ljmp
pop
pop
jae
lcall
dec
cmp
inc
push
je
mov
adc
pop
cmpsb
insl
adcl
lcall
dec
push
pushf
test
test
pushl
sbb
mov
mov
inc
cmp
std
ljmp
movsl
lods
cmpsb
sahf
mov
pop
pop
gs
xchg
test
cltd
mov
cmp
or
dec
pop
jp
mov
imul
or
movsb
popf
nop
outsb
dec
ds
cmp
xchg
mov
scas
cli
jge
pop
pop
in
jle
mov
mov
add
dec
push
outsb
mov
subl
jl
fwait
stos
or
sahf
sahf
xchg
andb
dec
dec
push
adcb
gs
int
mov
movsl
mov
jae
dec
dec
push
dec
pop
jne
popf
mov
decl
sti
scas
bound
jbe
mov
push
dec
push
push
pop
mov
adcl
or
insb
jp
cltd
mov
clc
decl
pop
push
pop
jne
xchg
lcall
imul
movsb
decl
ficoms
pop
push
pop
pop
pop
push
lea
imul
mov
push
jp
xchg
lahf
movsl
mov
push
pusha
pusha
orb
insl
insb
insl
jb
xchg
sahf
mov
mov
pop
pop
bound
jb
mov
insl
outsb
jo
notb
jne
lea
jg
push
gs
xlat
pop
cld
mov
add
jb
test
mov
loopne
push
jnp
mov
jbe
jl
lea
cwtl
xchg
lea
jg
push
sub
sub
mov
xor
jge
lea
cmpb
push
push
outsl
insl
adc
mov
scas
mov
xchg
nop
mov
xorl
add
sbbl
imul
jg
jns
jae
push
outsb
mulb
scas
jbe
xchg
loopne
imull
xchg
jno
cs
mov
push
mov
xchg
ror
decb
jo
pop
mov
jge
lods
mov
adc
xchg
js
adc
cld
push
imul
mov
addb
int3
jle
imul
jne
mov
loopne
xchg
or
pushl
and
arpl
jbe
nop
cwtl
popf
fwait
xchg
lea
add
into
adc
jnp
jne
fidivl
jle
nop
xchg
xchg
mov
or
jbe
jl
cli
mov
push
jge
loopne
outsb
outsl
je
mov
xchg
nop
mov
mov
addl
jle
fistl
add
cmpl
sub
jbe
or
cmp
jae
cmpsb
pop
fsubl
sbb
mov
roll
ja
ja
lods
xchg
stos
jb
jp
ds
xor
jl
fidivrl
add
call
mov
xor
mov
or
jnp
jge
push
cmpsb
adc
push
mov
jb
adc
mov
xor
jg
lcall
push
push
jo
pushf
cmp
aas
dec
jnp
jae
mov
lahf
ds
aas
add
jo
lcall
ficomps
cmp
fwait
pusha
lock
pusha
add
jle
xchg
arpl
fmulp
cmp
out
gs
popf
mulb
scas
and
pop
lock
jnp
repz
fnstenv
xlat
and
test
add
clc
loopne
push
jl
test
adcl
mov
pop
inc
mov
fimuls
pop
in
sbb
popf
js
mov
xorb
pop
xchg
sub
sbb
push
mov
add
jne
push
add
sub
ss
scas
aas
mov
mov
fcom
sub
mov
inc
pop
out
mov
pop
cmpb
inc
mov
aaa
cmp
mov
ss
insb
in
pop
mov
adc
jno
jae
or
add
push
insb
dec
mov
outsl
pop
and
insl
cmpb
push
or
inc
and
in
imul
scas
sub
jle
push
test
rolb
sub
lds
sbb
xor
inc
shll
repz
and
and
and
push
ss
pusha
fcmovnbe
push
sbb
fstpt
outsb
xor
cltd
fwait
lods
jge
jbe
mov
das
je
cmp
adc
nop
pop
push
inc
andl
imul
mov
insl
fcmovnbe
mov
push
push
adc
popa
aad
mov
cmp
loope
lret
xor
insl
add
pop
pop
xchg
pop
or
scas
outsb
push
xchg
fwait
xor
mov
or
mov
or
pop
mov
cmpb
pop
andb
iret
push
xchg
add
or
or
pop
or
jno
adc
outsb
mov
iret
ds
inc
sbb
xor
sbb
xor
mov
mov
sub
ficoms
inc
cmpsl
push
fdivp
fdivrl
cmp
mov
test
lahf
jge
loop,pn
into
xor
adcb
inc
fstl
imul
test
dec
test
adc
js
je
je
jp
addl
test
mov
mov
insb
imul
jl
sbb
sub
test
rcr
decb
xchg
xorl
mov
pop
lea
adc
jne
jnp
xchg
lea
jmp
gs
lea
ja
je
jae
jp
mov
jnp
add
pusha
pop
inc
arpl
xchg
xchg
xchg
nop
mov
jae
mov
pushl
jno
jns
test
push
pushf
mov
pop
bound
addr16
nop
push
jg
and
sbb
jo
push
outsl
jbe
mov
xchg
lock
mov
mov
data16
pusha
jb
mov
jo
lcall
cld
pop
jl
orb
xchg
mov
popa
pusha
push
nop
dec
std
div
xchg
cltd
cltd
xchg
xchg
jns
imul
jno
test
test
mov
pop
pop
imul
popf
popf
ret
outsl
push
pusha
push
pushf
jge
cwtl
mov
outsl
jmp
js
jle
pusha
dec
pop
imul
cmpsb
lahf
and
fildl
push
imul
mov
cmpsb
xchg
mov
mov
cmp
imul
pop
push
push
pop
popa
test
mov
movsb
stos
scas
lods
mov
lcall
bound
test
jmp
lcall
dec
push
pop
pop
data16
mov
scas
movsl
lcall
idiv
sub
ds
jge
mov
shll
inc
dec
push
pop
inc
mov
movsb
stos
stos
mov
stos
mov
xchg
inc
and
outsl
mov
stos
xchg
adc
bound
inc
dec
pop
fs
xchg
cmpsl
mov
mov
cwtl
in
call
xor
mov
mov
jne
dec
ds
push
pop
fs
xchg
lcall
mov
xchg
fwait
xchg
dec
pop
sub
xor
mov
lahf
andb
aaa
inc
incl
pop
je
xchg
stos
mov
mov
fwait
cltd
cwtl
pushf
jne
adc
xor
jns
leave
fmul
mov
jg
call
xor
loopne
mov
mov
mov
jg
mov
and
push
sub
ret
fst
lds
sub
aaa
dec
pop
ja
movsl
mov
sar
inc
mov
mov
sbb
pop
push
xchg
mov
mov
inc
xor
aaa
dec
pop
pushl
movsb
mov
rol
mov
test
and
sbb
mov
mov
imul
daa
sub
stos
ds
lods
lods
jge
or
lcall
sbb
pop
lcall
sbbl
and
xchg
scas
mov
jg
sbb
sbb
lods
int3
fsubp
fcmovnb
cwtl
jae
aaa
daa
sbb
cmp
ret
call
mov
leave
mov
and
sbb
ljmp
mov
lods
andl
sbb
xor
popf
mov
enter
scas
lods
test
decl
sbb
cmovns
loopne
xchg
jo
xor
push
sub
push
outsb
scas
ret
ror
ret
mov
decl
adc
sbb
pop
xor
out
into
mov
push
and
dec
jmp
movsb
mov
enter
mov
bound
adc
or
and
in
fnstenv
in
ljmp
push
cs
popa
jge
mov
into
dec
lret
mov
push
push
pop
nop
shrl
mov
jecxz
mov
push
xor
dec
inc
pop
jns
mov
sub
lock
jg
lret
sarb
sbb
pop
add
pop
mov
dec
out
decl
sbb
xor
jp
mov
fimuls
mov
and
sbb
mov
lret
sbb
xor
jl
mov
into
rcl
int3
mov
push
and
sbb
add
push
loopne
lods
mov
xor
xor
jl
mov
incl
mov
sub
add
das
arpl
scas
outsl
pop
lock
dec
pusha
jge
leave
into
ror
xchg
mov
jmp
sub
add
cmp
scas
lret
int
mov
xor
sub
xchg
scas
rol
into
lret
ljmp
mov
and
mov
test
insb
push
xor
das
inc
push
arpl
mov
mov
dec
sub
cmp
aad
mov
call
enter
push
cmp
ss
push
data16
mov
sub
xor
add
aaa
pusha
xorb
sub
inc
sub
inc
ss
inc
push
js
cmpsl
aam
enter
ljmp
mov
push
xor
and
xchg
mov
aam
mov
andb
cmp
inc
pop
outsl
test
jg
pushf
scas
iret
into
mov
xor
and
jno
lods
ror
mov
jg
cld
decl
cmp
push
push
fwait
scas
mov
mov
dec
cmp
and
negb
push
jno
stos
mov
je
xchg
ds
lcall
addr16
stos
mov
shll
or
ss
insl
xchg
les
dec
inc
inc
dec
fs
test
mov
int
in
scas
mov
sub
sbb
push
insb
xchg
movsl
xchg
jnp
push
inc
inc
inc
dec
arpl
cmpsb
cld
stos
insl
ret
mov
in
enter
and
imul
cmpsl
cwtl
andb
inc
inc
dec
pusha
jne
movsb
dec
or
mov
mov
push
or
push
sbb
cwtl
lods
mov
cld
incl
inc
dec
pop
outsl
xchg
or
jg
incl
sbb
xor
jbe
movsb
jp
lods
mov
inc
inc
dec
pop
insb
test
push
ror
shlb
and
xor
je
lahf
mov
mov
mov
mov
inc
inc
push
addr16
cmpsb
mov
mov
sbb
inc
push
lock
adc
test
dec
sub
pushl
mov
mov
dec
cmp
and
scas
add
xchg
mov
jne
push
dec
inc
dec
pop
xchg
lcall
sbb
je
adc
sarl
xor
sub
sub
popf
xchg
push
dec
dec
dec
je
lcall
push
int3
in
cltd
addr16
dec
inc
and
decl
rcrb
xchg
jnp
pop
push
dec
dec
push
fs
mov
ror
mov
cmp
into
pushl
jae
popf
scas
mov
loopne
js
pop
push
dec
dec
pop
push
xchg
mov
or
mov
jle
dec
dec
xor
push
addr16
mov
add
insl
push
xchg
dec
push
pop
outsb
fdivs
fistl
sarb
das
and
imul
xchg
stos
cmpsb
xchg
test
pop
push
dec
push
popa
outsl
adcl
popf
insl
dec
push
dec
sub
dec
pop
insb
jle
movsb
xchg
test
hlt
sti
pop
sub
jb
pop
push
push
pop
arpl
xchg
ret
push
std
mov
dec
sub
push
xchg
mov
xchg
xorl
gs
jg
sti
mov
enter
pushf
insl
push
push
dec
sub
mov
xchg
add
cld
incl
pop
pop
data16
mov
pop
lock
in
sahf
jbe
push
dec
xor
cmp
jp
pushf
mov
test
gs
pop
mov
dec
sahf
lods
fadd
mov
pop
push
or
cmp
pop
or
dec
pop
push
lahf
xchg
xchg
pop
pop
dec
pop
sbb
stc
lea
lahf
jbe
pop
adc
cmp
ja
adc
incl
mov
addr16
pop
pop
cs
scas
mov
lods
outsl
das
ret
jno
push
dec
xor
push
cltd
lahf
lahf
mov
push
pop
pop
pop
push
mov
nop
insl
pop
pop
dec
xor
testb
imul
xchg
mov
pop
imul
incl
sarl
pop
push
inc
xor
mov
cltd
fwait
sahf
mov
call
pop
arpl
xchg
test
mov
push
cmp
clc
or
lcall
jg
rcrl
jge
pushf
mov
nop
outsl
pop
push
dec
cmp
call
push
test
xchg
mov
arpl
orl
test
std
orb
pop
insb
jp
xchg
loopne
lcall
imul
xchg
xchg
add
ds
jle
xchg
sub
add
nop
outsl
addr16
mov
mov
push
test
dec
cmp
ret
jb
xchg
js
lcall
adc
gs
jg
fwait
lods
mov
cmp
insl
popa
pop
inc
cmp
push
pusha
push
lcall
loopne
fists
mov
mov
sarb
inc
aaa
outsl
aas
dec
push
bound
mov
popf
pushf
xchg
mov
gs
mov
cmp
ret
mov
pop
push
inc
inc
jp
imul
pop
xchg
xchg
dec
fwait
xchg
insb
mov
out
or
scas
mov
cmpsb
stos
lcall
jge
decl
xchg
cltd
lcall
pushw
addb
dec
pop
ljmp
ja
js
shl
cmp
pop
addr16
dec
xchg
xchg
les
outsl
push
push
push
roll
ja
loop,pn
mov
jbe
jbe
js
dec
xor
xchg
popl
je
xchg
push
js
xchg
cmpsl
scas
cs
je
dec
cmp
dec
pop
orb
dec
outsb
insb
imul
outsl
or
movsl
dec
addr16
dec
cmp
dec
ds
mov
xchg
xchg
xchg
xchg
mov
push
jb
mov
lods
mov
add
dec
aaa
cmp
jae
loopne
mov
cs
lea
je
xchg
mov
mov
aas
dec
push
jl
fildll
add
test
jge
dec
push
jb
xchg
movsl
stos
jp
bound
inc
dec
push
cmp
xchg
cs
push
push
jb
mov
rcr
mov
mov
pop
dec
cs
pop
fs
adc
xchg
lea
push
xchg
xchg
mov
pusha
jp
mov
out
bound
inc
dec
in
cmp
push
pop
fdivrl
nop
ficompl
xchg
loopew
adcl
mov
mov
xchg
js
push
fcomps
outsb
or
mov
xor
mov
push
xchg
mov
test
mov
mov
cltd
subb
ds
push
pop
push
test
and
xchg
ljmp
inc
mov
ficompl
lods
popf
xchg
and
dec
cmp
dec
xor
subb
inc
pusha
push
lahf
into
mov
jg
jp
lcall
xchg
je
pusha
push
inc
inc
dec
in
outsl
cmp
icebp
sarl
cltd
xchg
shlb
insl
jbe
call
push
inc
mov
movsl
xchg
jl
bound
inc
in
pop
cli
sbb
test
insb
lods
jecxz
das
pop
xchg
lahf
cmpsl
scas
mov
mov
popf
mov
pop
dec
aas
rclb
dec
mov
bound
jle
xor
mov
lods
mov
inc
mov
mov
in
pusha
insb
inc
xchg
in
xorl
jbe
outsb
jbe
mov
cltd
mov
pop
repnz
dec
ds
push
push
pop
pop
cwtl
pushf
popf
mov
in
push
dec
js
imul
mov
mov
inc
push
popa
pop
cmpsb
insl
ret
insl
jnp
xchg
popf
cwtl
nop
mov
insb
pop
mov
xchg
popf
movsb
adc
outsl
sub
outsb
cmp
aas
inc
dec
cwtl
rcrb
mov
jae
mov
clc
jg
shlb
pop
dec
inc
dec
push
push
pop
int3
xchg
call
or
adcl
mov
fwait
fs
push
inc
inc
dec
push
nop
outsb
jl
cwtl
sahf
cwtl
mov
push
orl
mov
test
pop
push
inc
inc
add
push
mov
jo
jo
sbb
outsb
jne
lea
sahf
xchg
sbbb
mov
dec
push
push
pop
lock
lcallw
cmc
mov
adcl
mov
cwtl
ja
pop
add
dec
inc
out
push
ds
int3
xchg
mov
mov
mov
push
lcall
dec
into
outsw
jle
subl
xchg
jle
stc
xorl
push
inc
inc
outsl
cli
repz
mov
outsl
je
pop
insl
dec
xchg
popf
push
mov
movsb
fwait
test
loop
pusha
xor
mov
icebp
dec
mov
jbe
mov
stos
lcall
cwtl
jg
gs
dec
inc
dec
dec
sahf
cli
xchg
rcrl
jno
dec
push
call
test
xor
dec
inc
inc
dec
push
pop
inc
icebp
mov
imul
je
dec
mov
cmpsb
pushf
mov
arpl
inc
dec
push
mov
push
xchg
js
xchg
push
jae
push
jp
ja
sub
xchg
addb
insl
or
inc
dec
dec
outsl
scas
xchg
add
fidivl
cmp
outsw
jne
fdivrp
push
sbbb
pop
push
inc
out
pop
gs
mov
cwtl
popf
cmp
mov
insl
jno
adcl
out
outsb
add
push
mov
sbb
or
call
mov
loopne
mov
lods
mov
push
inc
inc
into
push
or
dec
lcall
cmp
mov
sbb
mov
inc
jns
push
inc
dec
dec
and
mov
dec
xchg
out
jb
mov
fwait
test
lea
push
inc
inc
dec
cmp
and
mov
and
xchg
push
ret
mov
cmpsb
cltd
subl
dec
inc
sbb
or
js
push
jne
xchg
fwait
lahf
xor
jg
mov
out
into
or
push
andb
jno
add
insb
jp
fwait
xor
sti
pop
int3
xchg
lea
mov
mov
cwtl
js
inc
dec
dec
xor
mov
mov
popf
push
mov
adc
push
mov
mov
shrl
jne
pop
dec
inc
xor
mov
xor
sarl
popf
mov
js
cwtl
jge
jmp
cmpsb
nop
cltd
mov
test
dec
inc
inc
dec
out
ret
dec
arpl
mov
dec
std
das
push
movsl
cmpb
gs
inc
inc
lock
xchg
mov
je
fwait
xchg
popl
ja
fwait
jp
xchg
fwait
cmpsb
cmpsb
mov
rolb
outsb
fs
inc
inc
inc
les
mov
int
mov
cwtl
jno
lock
scas
call
mov
subb
inc
test
insl
mov
insb
push
mov
jno
xchg
jg
dec
xchg
cltd
cmpsb
mov
mov
movsl
xchg
jge
mov
push
scas
aaa
lcall
popf
cltd
xchg
push
mov
outsb
dec
jb
xchg
call
mov
push
pop
lds
push
inc
dec
push
pop
insb
push
adcb
dec
xchg
mov
jo
sub
out
ljmp
push
inc
inc
inc
dec
inc
jns
fdivr
mov
cwtl
xchg
stos
ja
jo
mov
mov
jo
push
sub
call
mov
jb
jno
repnz
lods
mov
mov
dec
inc
fwait
insl
jl
es
xchg
cwtl
xchg
xchg
inc
lcall
outsl
dec
cltd
movsb
mov
mov
mov
inc
inc
inc
icebp
xor
fdivl
dec
ss
scas
cli
cli
cmpsl
mov
cmpsb
lcall
dec
dec
fisubl
jg
xor
adc
jl
ret
test
fcompl
jg
scas
movsb
cwtl
mov
pop
dec
inc
dec
inc
dec
jb
mov
cwtl
data16
loop
cmpsb
das
jbe
mov
mov
dec
inc
lcall
mov
lcall
js
dec
stos
insb
mov
nop
xorb
stos
pop
mov
xchg
dec
xchg
movsb
orl
pop
ljmp
jle
inc
stos
mov
cmpsl
sahf
lea
fs
dec
dec
repnz
fwait
lds
dec
xor
xchg
movsb
inc
fisttpll
lods
mov
cmpsb
fwait
clc
pop
dec
dec
push
sub
xchg
adc
or
das
test
xchg
test
adcl
dec
dec
mov
push
cltd
mov
jbe
je
orl
test
mov
dec
dec
dec
out
scas
aaa
rcrl
dec
jne
test
movsl
cwtl
stos
movsl
xchg
sub
dec
cwtl
dec
dec
push
and
push
ljmp
popa
xchg
jne,pt
aam
cli
jmp
mov
push
jo
push
mov
jg
xchg
xchg
into
mov
inc
cmpb
or
movsb
cltd
mov
dec
out
sahf
test
cltd
orb
jmp
orl
nop
add
push
push
cwtl
mov
push
imul
mov
js
sbb
in
ljmp
push
dec
cwtl
pop
enter
xchg
sub
dec
cmp
call
shlb
xchg
lods
stos
xchg
mov
imul
scas
mov
xor
add
orl
andb
dec
push
pop
imul
mov
outsl
pop
pop
jns
int3
xchg
mov
push
sub
pop
push
add
dec
add
push
orb
push
cwtl
sbb
int3
ficompl
stos
sbb
xchg
pop
mov
fs
test
xchg
hlt
test
movsb
dec
movsl
lock
scas
dec
cwtl
lea
cwtl
out
pop
syscall
or
xor
mov
pop
mov
subb
pop
push
inc
data16
dec
inc
insb
js
sarb
cmpl
test
shl
dec
sahf
xchg
mov
pop
push
dec
or
xchg
mov
mov
js
aam
dec
orb
xchg
cmpsl
stos
aaa
std
test
pop
dec
inc
cmpsb
dec
pop
gs
cltd
hlt
and
outsb
jbe
push
sbb
lcall
inc
stos
jae
lds
add
je
mov
add
inc
dec
insb
xor
mov
pusha
push
fimull
xchg
dec
inc
inc
dec
mov
call
scas
nop
jae
mov
test
adc
mov
pop
in
lahf
lahf
mov
jle
cli
outsl
scas
adc
rclb
pushf
jle
bound
mov
dec
jo
movsb
popf
mov
adc
jns
je
fwait
mov
mov
movsl
popf
cmpsb
jb
fiadds
dec
movhps
jle
mov
sbb
or
lock
cwtl
and
pop
cld
push
cli
lahf
xchg
test
push
inc
inc
inc
push
pop
imul
cmpsl
cmpsb
orb
mov
data16
mov
fs
imul
dec
pop
push
outsl
out
js
sarb
insl
jno
jg
jg
cwtl
mov
cwtl
or
push
inc
aas
ds
dec
push
gs
pop
push
cmp
pushl
imul
dec
inc
inc
inc
dec
mov
lret
pushf
lods
scas
lods
cmpsb
cmp
outsl
or
push
mov
mov
mov
pop
fwait
xchg
xchg
pop
dec
inc
inc
dec
push
pop
insb
jnp
mov
add
stos
jb
pushf
jp
outsb
insl
aad
push
shll
mov
bound
loop
xchg
push
dec
dec
scas
pop
addr16
xchg
push
adc
fwait
inc
stos
add
js
outsl
jo
ja
xor
cwtl
movsb
sbb
dec
ret
fbld
fs
and
test
movsl
mov
ret
and
xchg
xchg
xchg
or
pushl
pop
push
pop
pop
arpl
push
sbb
mov
xchg
adc
call
add
mov
pop
pop
pop
fs
jl
and
adc
popa
mov
cmp
pop
cmp
xchg
mov
jns
insl
push
push
add
pop
pushf
jb
add
test
jne
and
jle
jae
or
sarl
jne
xchg
xchg
jb
xchg
pop
jns
aam
or
add
xchg
jne
adcb
cmp
fs
add
ds
xchg
xchg
add
xchg
cmp
outsb
dec
ja
jns
dec
and
mov
mov
lock
test
mov
sub
sub
into
jle
jns
jl
adc
fsubs
mov
lcall
mov
push
jle
jp
sbb
jg
and
jno
adc
pusha
add
das
add
adc
test
add
mov
test
sbb
mov
pop
dec
fs
and
mov
push
popa
test
int
fnstsw
inc
or
popa
in
sub
jg
arpl
fisubl
jne
add
bound
and
nop
add
sbb
inc
subb
jnp
sub
pop
xchg
or
add
adc
and
jno
seto
xchg
cmp
mov
je
sar
or
gs
inc
inc
mov
mov
addb
pop
daa
pusha
add
ds
mov
push
jge
data16
push
imul
sahf
out
insb
insb
insb
insl
push
stos
mov
outsb
mov
outsb
outsl
jne
into
sub
js
int
jnp
dec
mov
or
fldcw
mov
push
mov
insb
ss
mov
push
adc
scas
inc
notb
push
add
mov
in
sarl
in
fistpl
mov
mov
cmpsb
cltd
test
ret
outsl
ss
stos
pop
mov
mov
mov
and
mov
mov
mov
mov
shr
movsb
sub
in
mov
out
outsl
adc
mov
aam
inc
sbb
mov
mov
loop
cmp
push
jns
adc
xor
xchg
and
je
pop
xchg
adc
inc
or
int
in
pop
mov
xchg
addr16
data16
jne
bound
fidivrl
sub
orl
ds
orl
das
imul
jae
adc
sbb
aas
xor
fsubrs
push
outsb
addr16
jne
jno
test
out
js
push
test
outsl
mov
clc
pushl
addr16
mov
idivl
mov
int3
shlb
fdivrs
mov
mov
in
inc
and
leave
ljmp
imul
xlat
not
fbld
rcl
sbb
and
sti
mov
adc
cld
enter
addb
mov
mov
call
loope
leave
into
stos
xchg
mov
cs
mov
sar
push
imul
mov
lret
lods
adc
repz
fisubs
in
popf
cltd
frstor
outsl
aaa
push
and
repnz
into
mov
into
bound
arpl
std
ror
sar
sti
mov
fmul
mov
fldl
inc
mov
ret
mov
mov
lret
lock
add
in
push
xlat
aam
mov
mov
jne
nop
gs
or
rol
or
enter
in
test
jmp
shlb
shrb
sbb
fidivl
mov
sub
pop
sbb
lahf
into
in
sti
jl
loopne
popf
inc
push
imul
mov
loop
rorb
push
mov
mov
out
mov
icebp
aam
and
mov
mov
es
lock
cmp
mov
fidivrl
lret
mov
clc
adc
ja,pn
in
xchg
pop
mov
mov
ret
das
rcl
stos
mov
les
fbstp
mov
insl
outsl
jbe
fmul
aad
sar
aam
iret
enter
adc
fisubrs
or
push
sahf
jb
sar
iret
in
mov
cmp
std
add
ljmp
mov
iret
mov
inc
inc
int
fsub
enter
jno
ret
filds
shr
mov
leave
iret
shrb
movsb
mov
clc
push
fdivs
fildl
shll
lahf
sarl
clc
sub
ds
cmp
pop
ret
ds
int
imulb
imul
xor
ja
and
clc
pop
shll
insb
xor
fs
push
push
mov
sarb
fdivrl
xor
das
jno
mov
insb
or
imul
add
jb
hlt
and
cwtl
inc
and
mov
into
xor
out
imul
cmovge
int
adc
jbe
nop
popa
fidivrs
scas
pop
int3
push
and
outsb
arpl
and
mov
add
imul
and
push
es
push
and
sbb
and
pop
sub
rcll
xchg
add
sarb
jnp
imul
gs
cmp
gs
sub
dec
outsb
out
popa
loopne
jae
data16
bound
aaa
jbe
xor
es
xor
inc
adc
inc
popa
neg
or
fldt
addr16
or
mov
dec
fs
fwait
cmp
sbb
adc
jb,pt
outsb
or
inc
nop
seto
xor
inc
xchg
or
mov
fisttpl
add
inc
inc
add
inc
cmp
inc
xor
aaa
xor
inc
xor
das
nop
xor
inc
xor
push
inc
dec
dec
add
xor
xor
mov
cmp
inc
inc
sub
mov
inc
fidivl
gs
and
repnz
les
cmp
xchg
test
sub
sar
gs
mov
add
sbb
addr16
orb
fimull
or
add
adc
pop
sbb
mov
stos
adc
push
roll
and
pop
icebp
incl
scas
mov
ds
addr16
add
rcrb
push
stc
js
test
bound
add
inc
jno
cmp
popf
ljmp
sbb
ljmp
or
adc
or
lods
mov
stos
adc
stc
lods
stos
add
inc
sbb
xchg
mov
xchg
sub
push
sub
nop
jo
or
sarl
aam
repz
mov
mov
mov
repz
mov
mov
mov
data16
addr16
push
xchg
push
and
in
dec
mov
ds
sahf
jl
inc
and
mov
lds
mov
pop
or
mov
les
dec
sbb
ja
call
mov
inc
dec
push
ss
fidivrs
mov
adc
das
mov
adc
ljmp
andb
das
xchg
push
adc
mov
add
mov
push
push
xor
das
add
and
add
or
lret
adc
sub
mov
dec
rcrl
repz
enter
adc
push
and
or
enter
hlt
enter
scas
mov
call
call
in
mov
add
adc
std
jg
pop
mov
and
jle
add
pop
sub
nop
inc
inc
add
nop
inc
popa
or
mov
and
xor
mov
leave
jo
xchg
add
or
pop
insl
roll
jge
aaa
or
xchg
or
sbb
xor
leave
enter
xor
add
and
add
inc
sahf
xchg
and
sbb
scas
cwtl
mov
in
addb
and
xor
xor
pop
scas
jmp
push
mov
dec
pop
cmp
and
mov
dec
test
pop
dec
loopne
and
and
or
mov
mov
into
mov
sti
inc
fdivrs
or
and
nop
rcrb
dec
insb
push
cmpb
pop
push
sahf
cltd
insl
insb
push
and
pop
push
xchg
pop
pop
jnp
scas
push
lods
fstps
pop
pop
push
outsb
lock
xchg
out
mov
addr16
push
es
add
ret
shlb
mov
es
scas
push
loopne
sbb
add
add
sbb
and
or
jmp
jmp
xchg
pusha
sbb
jp
jo
fistpll
iret
jae
inc
adc
cmpsb
jb
call
jb
push
jns
addb
in
shlb
jb
and
fimuls
shl
shrb
pop
rolb
pop
icebp
cmp
and
mov
and
adc
and
sbbb
jo,pn
pushf
mov
push
mov
fdivrs
repnz
inc
inc
fsts
call
fwait
cmp
mov
push
lock
cs
out
jbe,pn
pop
jnp
loopne
cmp
adc
adc
das
and
jae
sbb
mov
bound
shlb
fcoms
adc
or
movl
add
xchg
ss
icebp
loopne
add
jo,pn
push
sarb
rcrl
das
pusha
pop
cwtl
incl
mov
adc
sub
pop
nop
cmp
and
adc
sbb
cmp
sarb
mov
mov
cmp
sahf
imul
pop
nop
mov
loopne
repnz
push
xor
cmpsb
adc
add
jae
mov
jmp
or
dec
adc
xor
mov
add
adc
enter
nop
cs
add
push
pop
inc
aas
loopne
or
pop
js
aas
or
add
clc
inc
stc
pop
sbb
test
and
dec
pusha
pop
scas
in
and
jo,pn
inc
shrl
cltd
adc
popl
inc
adc
pop
pop
inc
aas
xor
add
or
das
add
test
ret
dec
jae
outsl
mov
add
pop
subb
das
and
dec
fildll
pop
jo
daa
sbb
shlb
nop
inc
xor
pusha
and
sbb
shrb
pop
subb
loope
adc
sub
sub
enter
cmp
inc
or
sub
mov
in
subl
call
add
mov
daa
xchg
add
xor
inc
mov
sbbb
nop
xor
rorl
outsl
push
cmp
frstor
cs
rorl
sbb
call
adc
adc
scas
sarb
add
mov
push
and
addps
or
adc
mov
add
xchg
xor
cmp
jb
cmp
adc
pusha
cmp
cmp
sub
mov
loopne
or
inc
or
add
push
lahf
pop
addb
sbb
inc
das
jo
mov
dec
push
nop
aas
pop
pushf
mov
inc
jg
cmp
pusha
cmp
push
repnz
cmpsl
inc
out
or
add
mov
inc
dec
and
nop
inc
adc
add
mov
loopne
jb
addb
subl
inc
mov
dec
scas
push
dec
xchg
test
pusha
dec
pop
add
or
pop
inc
pushl
inc
pop
dec
aas
push
add
imul
mov
pop
or
mov
enter
pop
dec
rolb
popa
jmp
iret
loopne
shlb
or
bound
pop
clc
iret
adc
xor
push
test
rorb
in
jo
incl
bound
int
in
arpl
fs
add
jg
sbb
out
adc
fistps
loopne
mov
push
adc
dec
scas
add
sarb
inc
push
outsl
jmp
dec
punpckhbw
cmp
imul
jg
outsl
push
or
js
test
enter
shrl
adcb
jg
mov
das
je,pn
push
xor
imul
push
cmp
test
push
xor
stos
fwait
push
ds
pusha
loopne
pop
rclb
push
shlb
add
loopne
jecxz
jge
das
das
and
push
mov
adc
es
add
ss
insl
jnp
sahf
push
and
repz
jg
jmp
idivl
mov
test
xor
xchg
out
sahf
jns
aaa
jne
in
repz
and
jne
xor
incl
fistl
push
xchg
pop
sub
mov
dec
notl
cmp
xchg
push
dec
jge
sbbb
adc
ds
push
fnstcw
pusha
data16
xchg
cmpsl
xchg
movq
adc
mov
mov
mov
shlb
pushf
dec
jbe
loopne
adc
mov
xchg
push
and
xor
iret
pusha
jl
push
mov
xchg
mov
sti
jo
push
pusha
mov
fs
idivl
in
hlt
loopne
add
pushf
inc
mov
aaa
rorb
push
rclb
cmpsl
push
in
imul
or
jl
cmpsl
jge
aas
rolb
sub
push
push
xchg
iret
mov
cmpsl
fnstenv
pop
mov
push
xchg
pushf
dec
push
loopne
js
pushf
mov
addb
inc
push
mov
adc
jbe
inc
dec
xchg
push
lret
outsl
jmp
jle
jle,pn
cwtl
push
stos
adc
add
int
lods
int
push
pop
add
pop
enter
cs
jl
mov
and
add
and
loopne
xor
and
shrb
sub
dec
pusha
das
add
lock
lahf
test
push
add
xchg
fiadds
out
jnp
rclb
fs
mov
mov
xor
outsl
sbb
aad
and
adc
xchg
sbb
stos
jle
nop
xlat
repnz
enter
rolb
mov
andb
pusha
push
add
mov
cld
fists
in
inc
icebp
push
in
aam
daa
loope
clc
mov
inc
enter
repz
cs
jne
push
fucomip
inc
cmp
adc
lock
adc
call
push
mov
push
mov
sahf
stos
das
lock
add
into
inc
roll
aas
call
verw
into
test
ds
insb
add
and
push
dec
pop
and
pop
push
insb
iret
daa
xchg
push
rcrl
bound
push
or
fisubrs
das
cmp
das
add
das
dec
mov
pop
das
mov
xchg
in
mov
pop
das
sarb
pop
aaa
popf
inc
pop
aas
js
in
mov
fsts
inc
cld
popa
add
ret
sar
arpl
repnz
push
sti
lcall
sarb
push
loopne
in
mov
pop
cmpb
pop
sub
add
push
int
push
lods
push
sahf
cs
addb
jge
int
roll
lock
push
pusha
int3
cmp
popf
and
mov
inc
ss
enter
filds
outsl
and
inc
js
xchg
loopne
jns
and
pop
loope
lahf
adc
outsl
jl
sarb
add
stos
cmpsb
and
loopne
xchg
sbb
outsl
pop
aad
add
add
wrmsr
or
add
aad
sbb
iret
inc
push
add
add
iret
pop
cs
add
call
add
push
jo
or
bound
in
adc
add
jae
or
scas
test
push
xchg
mov
or
imul
mov
ss
addl
pusha
pop
add
rcrb
ds
xor
es
mov
dec
xor
aas
jo
add
sarb
sbb
clc
mov
subl
pop
or
add
lock
in
out
out
push
and
das
mov
jg
nop
mov
xchg
ja
dec
ja
add
loopne
add
pusha
les
pop
jo
pop
loopne
push
popf
notb
jg
pop
movsl
adc
or
lret
popl
leave
call
lret
jl
pop
dec
ja
call
nop
inc
jmp
add
ret
stos
outsl
test
pop
add
xchg
cmp
jle
pop
add
pop
pop
xchg
out
fisubs
popa
inc
inc
pop
leave
xor
mov
inc
inc
inc
leave
mov
jo
pop
dec
jns
in
dec
cs
push
push
pop
dec
sahf
sub
out
std
lret
ds
add
out
sbb
inc
inc
add
dec
cmp
pushf
cmp
xor
pushf
cmp
pushf
pusha
dec
dec
nop
xchg
pushf
cmp
pop
pop
rclb
pushf
cmp
lock
push
dec
sahf
dec
sahf
and
pop
pop
xorb
dec
pusha
pusha
push
xchg
adc
sbb
dec
sub
or
or
mov
mov
inc
and
cltd
add
or
incl
aas
aas
stos
push
popl
push
fdiv
xor
fbld
cmpsl
jo
popa
cmp
jmp
aaa
rcl
mov
jl
xor
out
cmpsl
dec
aaa
fnstcw
cmpsl
push
lret
mov
inc
mov
insb
std
mov
movsb
aas
mov
daa
rcl
push
mov
lods
lock
jo
jnp
scas
inc
loope
test
jmp
add
cmp
add
ds
xchg
mov
adc
pop
pop
cs
mov
in
subb
das
mov
mov
aad
shrb
imul
xchg
in
mov
pop
mov
pop
push
loope
pusha
dec
sub
jo
or
add
nop
xor
cs
sarb
inc
test
test
add
loop
in
fsubs
add
or
inc
das
sbb
das
sbbb
loopne
mov
mov
movb
incl
test
mov
cmp
jg
push
inc
jne
cmp
cmp
das
adc
inc
sbb
dec
pop
mov
mov
iret
and
push
jb
inc
push
inc
inc
dec
nop
pushf
and
inc
ret
add
iret
sbb
loopnew
push
sub
lahf
test
repz
push
xor
lock
mov
das
movsb
mov
pop
add
ret
dec
loop
mov
cmpsl
mov
out
add
push
sub
push
sub
rorl
fbstp
or
sbb
pop
lock
and
push
inc
imul
inc
pop
push
nop
push
imul
inc
cmpb
cmp
stc
ja
adc
xchg
or
mov
adc
dec
xor
or
out
pop
xchg
add
sbb
and
out
sahf
xor
and
adc
cmp
jns
or
sbb
ss
mov
mov
sbb
iret
repz
push
push
and
cmp
repz
cmp
daa
cs
iret
repz
aaa
ds
in
sbb
add
mov
mov
add
paddw
stc
xchg
out
sahf
icebp
loope
addl
cmp
clc
lock
call
repz
lds
push
inc
dec
fistpll
add
and
cld
jae
push
xor
jle
mov
sbb
push
bound
mov
inc
sub
and
jle
push
and
mov
mov
or
ss
andb
sbb
or
data16
push
push
sbb
cmpsb
mov
data16
push
ss
add
mov
out
popa
dec
mov
xor
aas
lret
xchg
scas
out
aas
stos
adc
shl
aas
aas
aaa
cmp
jmp
jnp
push
loope
pop
stos
jb
push
test
shlb
decl
cmp
add
xor
bswap
aas
incl
dec
mov
jae
dec
mov
sar
ljmp
sbb
and
adc
das
out
pop
fbld
insb
pushf
pop
mov
outsl
lahf
pop
or
cmp
incl
xor
or
cmp
pop
aaa
testl
dec
mov
ja
call
jmp
adc
sub
sbb
daa
out
xlat
test
cwtl
pop
movsb
fs
push
stos
imul
add
xor
decl
into
incb
shll
or
inc
mov
mov
jle
inc
mov
lea
jge
loop
sar
ljmp
out
push
fisubs
loope
shrl
bound
pop
mov
insl
popf
pop
or
mov
testb
cmp
add
dec
mov
pushl
dec
mov
jne
ljmp
sub
sbb
and
push
pop
cmpsb
xchg
and
test
gs
push
popf
add
out
fisttps
aam
mov
jne
daa
inc
pop
sub
repz
aas
cmp
or
adc
pop
add
mov
das
data16
nop
push
inc
inc
pop
enter
outsb
pop
pop
xor
and
jg
pop
sub
add
wrmsr
out
ffreep
pop
int
jg
mov
das
adc
add
sbb
mov
jle
outsl
push
add
push
daa
mov
outsl
clc
mov
and
into
nop
and
pop
dec
das
xor
negl
sub
jo
ss
std
pop
lret
mov
sub
enter
sahf
shlb
inc
jno
out
inc
outsb
or
es
arpl
sub
mov
nop
fwait
and
das
xchg
popf
pop
enter
mov
sub
mov
xchg
and
jns
adc
xchg
adc
mov
mov
decl
pop
push
imul
cmp
jmp
lahf
ja
or
pop
jne
inc
mov
mov
sub
adc
mov
sub
fsub
test
icebp
ljmp
or
mov
mov
cltd
add
and
cld
mov
orl
mov
xor
cld
mov
add
idivb
and
add
add
inc
jmp
sub
sub
dec
ss
movsb
das
movsb
outsl
call
dec
loope
inc
je
inc
xchg
xorl
dec
outsl
je
lods
inc
or
outsl
jb
gs
cli
adc
sub
add
xchg
xchg
mov
xchg
push
int
adc
or
out
pop
dec
in
xor
nop
out
sbbb
inc
test
scas
clc
adc
jbe
adcl
in
add
lahf
scas
cltd
ret
xchg
movsbl
push
jge
daa
xchg
test
pop
jb
sub
and
dec
jbe
es
int3
cmp
xchg
ds
add
into
push
cmp
int
xchg
out
jge
mov
into
lods
sub
out
add
sahf
cmc
push
pop
inc
sub
shl
jns
cmp
adc
lcall
cmc
dec
loopne
imul
mov
inc
mov
fcompl
push
addr16
sbb
xchg
cmpb
popa
call
loope
pop
dec
inc
imul
jo
enter
xor
call
push
add
sub
imul
loopne
into
pop
pop
and
lock
push
push
lahf
mov
adc
shrl
jg
addl
in
inc
in
fcoms
dec
inc
insb
imul
enter
add
cwtl
fiadds
ja
push
or
lcall
imul
mov
mov
xor
out
push
hlt
stc
das
mov
cmp
out
shrb
mov
out
std
dec
mov
out
in
repz
xchg
jp
mov
lret
add
sub
imul
jae
leave
repz
into
mov
push
add
mov
jnp
sbb
push
subl
and
ljmp
jbe
mov
in
push
mov
out
mul
cs
movsb
call
dec
or
pop
sub
xor
adc
aad
pop
inc
scas
sbb
orl
push
jg
mov
mov
fidivrs
mov
xchg
add
pop
mov
fwait
adc
cmp
xor
inc
outsl
pop
mov
stos
sub
clc
add
mov
push
repnz
mov
bound
pop
popa
push
int3
inc
add
xchg
jmp
in
adc
lods
push
sub
pop
xchg
dec
mov
decb
and
outsb
jae
loop
popw
push
ss
and
out
jge
cmp
sbb
and
outsb
fs
cmp
in
adc
xor
out
es
inc
cmp
jnp
nop
or
das
xor
inc
xor
jge
in
aad
cli
js
sub
jp
jo
pop
xor
sub
push
aas
add
rorb
aaa
jns
and
in
and
loop
push
shrl
ja
push
or
mov
das
das
push
subl
cmpb
jbe
add
int
bound
orb
iret
sbb
iret
jae
int
mov
ljmp
dec
push
push
cmc
push
icebp
jne
outsb
lods
in
push
jge
jle
mov
pop
sub
xchg
mov
inc
jg
out
inc
data16
insb
fs
push
xor
xor
and
jae
ficoms
adc
inc
popa
jb
cmp
dec
inc
dec
inc
jb
and
es
push
sbb
and
lods
fldt
gs
push
mov
into
outsl
jb
add
add
testb
das
dec
adc
push
outsl
imul
push
rcrb
scas
and
mov
dec
sar
adc
inc
push
mov
arpl
insb
jb
pop
inc
dec
addr16
mov
shrb
xlat
mov
addb
dec
add
xlat
dec
push
xchg
xchg
xchg
cmp
push
add
cmpsb
movsb
psrlq
sub
push
pop
dec
je
rclb
push
test
jae
js
add
dec
repz
adc
cmpsb
and
ret
jle
pop
out
lahf
popa
adc
jbe
dec
jle
sbbb
adc
cmp
inc
jb
jns
movsl
pop
and
movsb
inc
xlat
mov
test
aas
div
xchg
mov
test
nop
pusha
inc
jne
je
cmpb
pop
lods
adc
mov
jb
call
sub
loopne
add
ds
inc
enter
sbb
xor
inc
mov
fistps
jle
cmpsb
dec
adc
and
sbb
sbb
js
mov
mov
cs
xchg
push
pop
cmp
es
push
sbb
cmp
add
fistpl
dec
in
addb
cli
bound
mov
sarb
jns
iret
xchg
mov
sbb
sub
movsb
lcall
sbb
cld
cwtl
call
inc
test
and
rorb
inc
mov
mov
outsb
add
fwait
inc
ja
lcallw
es
cmp
jae
cmp
andl
test
sbb
in
in
jnp
scas
cmpsb
ret
cmp
mov
push
sarb
sarl
push
test
pop
fbld
push
mov
sahf
test
and
std
xchg
mov
jnp
jo
pop
sbb
ficomps
repnz
aaa
mov
dec
cmpsl
dec
lock
jo
dec
loop
iret
mov
dec
loope
and
xor
cmpsb
leave
enter
outsb
adc
pop
sub
push
rol
jns
outsb
das
pop
add
out
jb
sub
outsl
or
add
add
pop
adc
mov
rorb
pop
lock
dec
inc
icebp
mov
dec
repz
lret
inc
pop
movsl
push
sbbl
loopne
scas
mov
mov
cmc
fimuls
mov
dec
sub
mov
cmc
lahf
inc
add
push
pusha
das
mov
mov
mov
loop
inc
lock
push
push
or
push
push
out
inc
repnz
outsl
nop
ljmp
add
in
add
xchg
push
fdiv
adc
dec
test
mov
pop
mov
stos
outsb
xor
and
push
sbbl
sub
popa
aad
arpl
test
enter
dec
xchg
js
cld
iret
mov
fisttps
jne
popa
cwtl
shlb
jle
pop
loop
ja
push
iret
jno
xchg
loop
scas
lret
push
iret
lret
loop
jle
dec
and
aad
inc
insl
fs
and
add
movsb
test
sldt
out
and
cmpsb
fadds
dec
ds
pop
ja
pusha
sbb
sbb
inc
insl
xor
pop
daa
js
push
pop
loop
out
outsl
ja
outsb
call
fsubrs
outsl
shrb
rorb
ret
inc
pop
push
mov
ret
out
push
mov
push
lahf
into
add
and
idivl
mov
sub
pop
mov
jo
fistpll
fdivr
aaa
add
mov
mov
sub
enter
outsb
jne
mov
dec
je
inc
mov
mov
sub
pusha
idivl
mov
das
cli
and
push
inc
fisubs
adc
int3
fs
enter
inc
sub
scas
ljmp
dec
xor
subl
sar
inc
push
dec
das
js
lahf
hlt
lcall
dec
sub
aas
bound
loopne
test
outsl
lahf
sub
es
xchg
dec
pop
fsubrs
das
clc
xorl
aam
adcb
stos
jno
iret
dec
inc
testb
jl
iret
jns
xlat
inc
push
adc
aaa
shrb
cmp
outsb
movsl
add
and
sub
jo
je
out
pop
inc
inc
sbb
fisubl
pop
xchg
add
inc
and
push
adc
xor
mov
push
lahf
fnstcw
adc
cmpsl
sbb
scas
leave
cmp
xchg
jnp
pop
cmp
nop
inc
in
xchg
cmp
dec
lods
dec
mov
mov
aad
es
dec
dec
fildll
dec
dec
push
pop
pop
add
mov
mov
or
or
enter
lods
adc
lcall
pop
xor
and
pop
daa
pop
fcoms
dec
lret
push
dec
dec
pop
jne
adc
out
inc
and
lods
push
xchg
fisubl
push
cmp
insb
push
jle
push
sbb
jae
sbb
je
pop
iret
cmc
mov
sub
or
push
push
rcrl
sti
push
js
push
imull
push
add
in
dec
imul
add
fwait
and
and
std
jmp
pop
add
dec
and
jns
add
fs
sub
sti
or
push
dec
push
inc
inc
adc
gs
loopne
das
mov
pop
dec
pop
ss
push
outsl
adc
jne
jne
mov
jne
orb
incl
rolb
jo
inc
fdivl
sti
movsl
loopne
xor
jb
push
inc
cmp
out
sbb
into
mov
jae
xchg
popl
ja
ja
cmp
push
jne
xor
aas
adc
jae
push
adc
mov
push
jne
and
cmp
pushf
insl
jbe
ret
orl
flds
dec
sub
lcall
pop
xchg
inc
dec
dec
inc
inc
dec
pop
dec
add
inc
push
mov
inc
inc
push
inc
inc
ss
xor
das
addr16
push
mov
scas
and
sub
jle
push
push
sbb
mov
mov
insl
aas
int
jbe
dec
inc
and
push
xor
cmp
sub
orb
adcb
sbb
negl
repnz
sbb
jp
in
ss
sti
and
popa
arpl
out
push
ja
jno
and
mov
outsl
ss
adc
xor
push
push
jmp
arpl
insb
push
mov
or
das
mov
mov
and
cmp
outsl
jo
mov
mov
mov
in
arpl
mov
inc
mov
xor
inc
aaa
insl
jl
pop
shrb
sub
imul
sub
pop
add
ret
inc
inc
jb
add
dec
jmp
xlat
je
roll
pop
xor
lahf
and
fadds
push
cmp
adc
push
jae
scas
adc
xor
fdivr
mov
cmp
and
int3
xor
decl
rclb
xchg
push
inc
sub
and
addl
fdivrs
pop
sub
andb
push
test
in
ror
lea
dec
inc
outsb
ds
push
out
mov
xchg
pop
test
gs
sbb
ret
inc
inc
mov
sub
mov
pop
sbb
jg
xor
fimull
leave
ds
leave
fldenv
mov
jg
sets
out
insl
fildl
aas
push
pop
jns
xor
dec
pop
insb
mov
jb
es
outsl
fs
dec
inc
xlat
lock
inc
bound
jmp
testb
aas
cmp
aas
sub
clc
and
jb
gs
add
xor
scas
sbb
daa
popa
sub
insb
imul
insl
nopl
dec
loopew
jae
inc
outsl
cvttps2pi
loopne
into
jbe
xor
jo
cs
jbe
add
pop
mov
enter
mov
fstpl
imul
int3
push
inc
xchg
push
outsl
and
sub
or
aaa
jb
into
hlt
cs
push
das
pop
out
mov
popf
dec
push
dec
pop
outsl
hlt
rclb
je
out
push
pop
test
lods
push
cs
mov
push
push
add
testl
sub
mov
int3
add
cld
push
push
pop
push
outsl
xchg
out
out
and
jmp
pusha
add
jo
add
ja
mov
xor
xchg
mov
xor
outsb
nop
insb
push
jb
adcb
out
pop
lock
pop
dec
hlt
push
pop
push
dec
das
add
loopne
fiadds
inc
push
jo
add
bound
pusha
test
sbb
lcall
push
pusha
or
mov
outsb
jl
and
mov
sbb
ret
es
shlb
ror
dec
out
je
cs
or
daa
pop
sbb
ret
inc
jmp
or
dec
mov
sbb
push
es
xor
or
xor
push
dec
inc
out
xor
out
push
dec
dec
inc
add
dec
jl
incl
dec
sbb
scas
sub
adc
lds
pop
or
mov
mov
sbb
jb
rcl
in
xchg
ja
cs
add
imul
jae
push
test
add
mov
lock
xchg
or
jns
scas
xor
jbe
xchg
pusha
daa
pusha
sarl
mov
xchg
js
das
inc
fiadds
fcomps
pop
and
lahf
cwtl
sub
inc
lahf
inc
lahf
mov
push
daa
mov
js
shrb
xchg
aas
enter
push
repnz
aas
loopne
lock
sub
add
mov
insl
leave
xor
lahf
push
jb
pop
push
jmp
nop
daa
adc
jg
aam
enter
sarb
outsb
and
sub
mov
outsb
mov
mov
lds
andb
bound
or
or
xchg
daa
js
clc
fstl
xchg
dec
dec
jo
daa
loopne
das
dec
mov
pusha
scas
xchg
js
or
nop
stos
add
mov
shlb
sub
jg
orb
dec
aad
clc
cmp
clc
mov
inc
inc
mov
in
sub
ja
outsl
dec
pop
sbb
repnz
js
dec
nop
jo
pop
add
shrb
mov
dec
call
mov
xchg
mov
cmp
push
daa
enter
add
js
jg
frstor
test
xchg
push
popf
pusha
lahf
loopne
psubb
sbb
lahf
xchg
movsl
pop
and
fsubs
dec
xchg
cmp
xchg
stos
in
mov
pop
mov
and
dec
clc
xchg
and
cmpsb
scas
push
dec
dec
push
cmpsb
xchg
push
inc
cs
cmpsb
lahf
or
sub
iret
mov
daa
loopne
clc
lahf
jns
int3
jbe
or
jbe
jb
dec
cmpsl
xchg
jns
add
fcoms
add
cs
cwtl
outsb
addb
outsl
fldl
push
out
mov
shlb
sbb
cmpsl
nop
adc
clc
cmpsl
adc
xchg
daa
cmp
dec
test
nop
or
xchg
pop
cwtl
outsb
fldl
mov
rcrb
add
inc
mov
test
test
cmp
push
lahf
xchg
loopne
adc
sbb
test
pop
mov
mov
fcomps
and
xchg
stos
mov
and
inc
add
sub
mov
mov
jo
pop
scas
lds
mov
fidivrs
fsubrs
stos
outsb
dec
dec
and
stos
xchg
mov
xor
daa
cwtl
das
cmpsl
sub
pop
xchg
and
or
fcoms
push
cmp
clc
loopne
ja
loopne
ja
push
dec
push
ljmp
push
add
cmpsl
xor
das
loop
push
xchg
inc
inc
daa
pop
cmc
pop
enter
push
adc
mov
fwait
mov
inc
fxch
adc
lods
add
sbb
pop
fcos
push
pop
and
lods
lods
lahf
jns
jo
xchg
mov
nop
lods
sub
mov
in
loopne
and
scas
lahf
loopne
pushf
inc
pop
xor
xchg
xchg
fcmove
subb
scas
xchg
mov
or
mov
scas
cmp
lods
lahf
xchg
scas
outsl
add
test
pop
sub
inc
scas
cmpsl
pusha
daa
pusha
xlat
mov
add
pop
enter
daa
sbb
adc
cmpb
scas
call
mov
clc
das
inc
fcmovnu
bound
and
nop
out
or
daa
movb
fadds
mov
inc
add
adc
sub
xchg
sub
leave
adc
xchg
addb
mov
add
pop
dec
dec
mov
enter
ss
dec
jg
call
jl
stc
aad
enter
nop
mov
pop
jb
pop
call
inc
ds
xchg
out
sbb
xor
scas
or
pop
sub
and
incl
pop
mov
pop
inc
dec
cmpb
subb
inc
shlb
inc
shlb
mov
xor
mov
popf
addr16
add
add
js
xor
in
adc
test
or
andb
bound
mov
inc
movq
pusha
packssdw
sub
jnp
xchg
cs
mov
pop
mov
sarl
jg
inc
fmull
pop
push
fidivrs
mov
fistps
push
add
addr16
iret
insl
push
enter
dec
xor
rcrb
jo
or
mov
iret
or
shrb
fidivrs
mov
daa
cld
pop
add
adc
pop
cmpsl
loop
in
sub
xor
sbb
pop
pop
pop
jae
bound
das
pop
jo
or
daa
push
enter
cmpsl
leave
repz
mov
mov
les
iret
dec
ficompl
in
in
adc
dec
add
and
scas
nop
out
inc
add
or
scas
push
pop
subps
das
cwtl
test
mov
jb
push
call
daa
call
cmp
or
or
jg
push
cmp
push
mov
dec
enter
es
enter
dec
scas
nop
dec
scas
jo
nop
and
mov
enter
push
enter
mov
dec
mov
or
incl
dec
jo
daa
mov
pushf
push
mov
lds
pop
decl
jbe
pop
or
iret
cmp
push
add
pop
mov
xor
clc
str
sbb
xchg
or
cwtl
jg
or
call
test
dec
movsb
leave
adc
mov
xchg
dec
nop
lcall
leave
mov
enter
and
pop
xchg
sbb
insb
or
sub
scas
cmp
pop
sub
cmpsl
outsl
daa
push
enter
push
pop
cmpb
data16
dec
jno
iret
orb
push
iret
repz
add
mov
or
or
or
iret
repz
repnz
sahf
push
push
sbb
out
sahf
cvtpi2ps
cmp
inc
jns
out
adc
adc
jns
out
adc
out
sahf
pop
lcall
out
sbb
sbb
sbb
jns
out
sbb
cmp
mov
mov
dec
add
push
dec
and
dec
jo
cmp
or
js
xchg
xchg
or
or
jb
enter
or
or
or
inc
mov
or
or
or
jb
enter
or
or
or
mov
data16
or
or
or
enter
or
or
or
sbb
jb
or
or
or
or
jns
inc
add
sahf
out
sahf
pop
sub
cmp
dec
dec
or
out
jne
dec
pop
push
push
in
or
je
sbbb
fs
add
add
sahf
add
fists
mov
pop
jle
mov
cltd
inc
cmp
mov
pop
fsubrs
mov
mov
mov
mov
mov
rcr
fmuls
int3
or
leave
loopne
jg
jg
cmpsb
sub
iret
js
pop
ja
jae
movaps
fidivrl
push
iret
mov
push
enter
shrl
xchg
sub
shlb
jo
xchg
cmp
push
rorb
mov
cmp
mov
xchg
out
or
pop
loopne
mov
or
sbb
pop
ja
push
inc
es
das
bts
jmp
jns
aaa
mov
add
out
sahf
pop
roll
cmp
jns
insl
sbb
inc
jg
outsb
or
out
sahf
out
gs
insl
movq
jge
decl
repz
adc
adc
out
mov
ret
mov
add
add
and
psubq
push
adc
enter
adc
outsl
enter
sub
popl
dec
adc
das
pop
punpckhwd
add
repz
jnp
into
jg
xchg
sub
movsl
leave
pop
iret
mov
adc
dec
rclb
mov
xchg
adc
das
stc
nop
iret
in
add
or
enter
and
sub
xor
ja
jns
inc
push
add
dec
gs
sahf
out
sahf
push
jo
jnp
xchg
iret
leave
jnp
out
xchg
add
pop
mov
bswap
mov
iret
popl
mul
in
jg
clc
add
psadbw
in
push
sbb
adc
imul
cmp
inc
outsb
mov
pop
pop
jg
outsl
add
outsl
mov
adc
push
les
jb
out
mov
adc
nop
imul
rorb
and
dec
scas
lock
das
jb
dec
fwait
adc
xor
bound
das
loope
scas
mov
adcb
scas
in
popf
xchg
mov
mov
iret
leave
add
fucomip
adc
sub
adc
pop
jb
dec
push
and
stos
js
inc
adc
iret
sub
pop
or
aam
push
cmp
inc
jnp
mov
cwtl
mov
add
jno
pop
adc
dec
add
mov
imul
xor
or
push
arpl
je
xchg
out
jle
jo
lahf
mov
por
idiv
jp
cmp
push
add
pop
adc
ror
adc
adc
pop
adc
iret
or
dec
xor
adc
pop
dec
xchg
xchg
or
mov
xchg
fsubrp
pop
mov
lock
pop
sbb
jg
mov
and
fadds
cmp
cmpsl
mov
fdivs
jbe
or
xlat
scas
mov
pop
and
loopne
and
fs
pop
push
loopne
clc
lret
call
mov
adc
lret
iret
mov
mov
iret
push
pop
pop
add
mov
jo
js
cmp
sub
enter
test
mov
outsb
bswap
jg
int3
out
jbe
add
pop
and
pop
sub
dec
pusha
inc
ds
pop
and
in
mov
leave
xchg
push
icebp
imul
int3
or
dec
dec
sbbb
int
cmp
shrl
lahf
add
xchg
stos
fs
mov
mov
pop
enter
shl
xchg
adc
iret
mov
mov
adc
mov
enter
aas
test
dec
in
and
and
cmp
ror
xchg
push
leave
inc
sbb
into
cwtl
mov
or
nop
scas
and
sbb
inc
outsl
push
jo
jb
fwait
cmpsb
out
js
sub
mov
loopne
pop
rol
dec
cmc
or
sbb
or
pop
pushf
inc
scas
ljmp
bound
cmp
pop
push
dec
pop
jb
pop
pusha
jo
test
nop
mov
test
fcom
xchg
sbb
imul
dec
and
in
sbb
sbb
rcrl
add
push
xchg
adc
sbb
mov
mov
xor
rcl
scas
sbb
stc
pop
filds
push
sbb
jns
jns
sbb
jge
mov
jns
jns
xchg
sbb
sbb
jns
mov
sbb
sbb
jns
jmp
negb
add
sbb
jns
jns
sbb
sbb
sbb
sbb
pop
daa
js
sbb
dec
sbb
push
push
sahf
out
sahf
sbb
insb
sbb
jns
sbbb
and
jns
out
and
jns
and
jns
out
fisubl
in
repz
out
sub
sub
sbb
sub
sub
sub
cmp
xor
cmp
repz
xor
jo
jl
rcrl
mov
sbb
inc
mov
sbb
xlat
sbb
add
repz
sbb
push
or
or
iret
push
cmp
inc
adc
iret
repz
arpl
jno
repz
repz
lea
iret
push
test
add
call
iret
rcrb
cmp
enter
push
icebp
push
cld
push
lds
sbb
pop
lcall
and
inc
xor
aad
dec
xor
xor
pop
ljmp
ror
nop
fwait
pop
js
jb
mov
dec
mov
ror
lock
mov
jb
dec
dec
sbb
inc
cs
inc
xor
inc
cs
mov
mov
mov
loopne
dec
pushf
sub
cmpsl
and
enter
and
mov
jb
and
and
and
inc
sub
xor
ds
in
loopne
and
push
and
in
pop
in
and
icebp
orb
outsl
fsubrl
fistl
iret
mov
ret
jns
bswap
push
add
mov
add
mov
call
mov
inc
and
fdivrs
dec
fistl
subb
add
pop
mov
test
mov
dec
scas
fdivs
fmul
adc
clc
lock
jnp
clc
verr
ud2
push
fisubrs
iret
add
sub
aaa
cmovb
xchg
push
fldcw
fisubrs
pop
push
mov
pop
jg
movsl
inc
js
and
dec
adc
mov
mov
jb
leave
rcr
xor
clc
pusha
cmpsb
push
dec
and
nop
mov
xor
ss
in
popw
pop
push
cmovo
fmuls
jo
and
or
or
adc
scas
loopne
pop
fstpt
and
and
mov
mov
cltd
xorb
and
mov
xor
scas
xchg
dec
js
push
pop
and
stos
test
jno
fcompl
in
adc
scas
pop
mov
aas
jo
rorb
das
mov
mov
es
push
leave
xchg
es
fstpl
inc
add
call
jns
addb
in
xorl
push
jne
loopne
scas
mov
push
adcb
or
inc
lock
pop
seto
testl
add
frstor
das
cltd
inc
pusha
or
and
and
cmp
xacquire
xor
mov
lret
sbb
fistpll
ret
xchg
mov
jl
push
mov
in
mov
fisttps
shlb
xchg
enter
xlat
xchg
popf
adcb
out
xchg
iret
pusha
fildll
js
iret
outsb
and
nop
filds
iret
sbbl
mov
seto
incl
daa
or
rol
sbb
loopne
jmp
dec
mov
adc
pop
sub
xchg
scas
jge
aas
fdivr
pop
xchg
add
and
or
fdivs
test
push
mov
xchg
dec
sar
dec
scas
nop
imul
nop
test
scas
or
xchg
mov
sub
xlat
dec
cmpsb
nop
loop
dec
pop
xor
sahf
pop
and
sub
mov
orb
xchg
pop
sahf
sub
xchg
xchg
sub
or
lock
das
mov
iret
leave
adc
xor
jno
or
jbe
mov
pusha
push
mov
adc
call
shrb
in
loopne
fimull
psubsb
mov
mov
adc
dec
jo
pushf
out
cmp
or
jb
jg
push
dec
imul
das
xchg
xchg
out
je
orl
jae
jns
popf
jnp
cmpsl
aam
inc
jb
in
cli
add
cltd
in
jb
mov
and
in
sub
in
incb
les
and
iret
call
push
adc
and
movntq
out
outsl
popa
les
push
add
shlb
pop
mov
bound
push
out
outsl
popf
pop
sub
call
sub
in
in
sub
sub
in
in
sub
jne
subl
in
in
sub
sub
in
in
sub
sub
sub
sub
jns
gs
push
adc
adc
sub
cmp
push
inc
sub
push
enter
sub
adc
pop
adcb
xchg
sub
push
enter
dec
enter
jb
lock
ret
verw
movsl
cmp
mov
test
test
sub
mov
mov
nop
ljmp
pushf
pop
mov
outsl
ret
bswap
mov
adc
sub
outsl
sub
xchg
fistpl
pop
or
sbb
mov
push
lock
cmp
lcall
or
jo
loopne
js
sahf
adc
fisubs
and
cmpxchg
pop
repnz
add
pusha
ljmp
cs
push
sbb
lahf
or
sbb
enter
or
jb
dec
das
push
das
pop
das
insb
movsl
icebp
jbe
jp
mov
nop
das
pushl
test
cmp
pusha
in
jb
lock
xor
in
cltd
mov
push
dec
ja
nop
fcoms
pop
hlt
jbe
loope
xor
push
xor
push
in
fbstp
in
mov
dec
pop
pop
mov
in
adc
test
in
subb
pop
clc
scas
fmuls
cmp
adc
in
lock
xor
repnz
push
in
push
mov
rcll
jle
shrl
add
scas
loopne
cmp
cwtl
mov
mov
out
mov
cmp
xor
out
out
sub
pop
xor
test
inc
dec
xor
rclb
jp
xor
scas
cmpb
daa
mov
nop
and
mov
pop
mov
or
fadds
hlt
in
mov
cmp
or
xor
xor
das
cmp
lock
pushf
dec
and
inc
jmp
pop
and
daa
rcrb
add
push
dec
xchg
aas
push
mov
andb
add
nop
cmpsl
pop
add
jo
mov
lock
leave
mov
xor
in
jo
push
ret
adc
test
fmul
pop
and
jbe
pop
scas
fdivr
dec
dec
and
xor
dec
scas
nop
sub
scas
nop
dec
scas
cmp
dec
scas
nop
dec
mov
nop
enter
enter
sbb
pushf
and
mov
and
nop
push
enter
mov
and
lahf
mov
inc
repnz
aam
repz
push
or
or
hlt
lods
mov
dec
negl
adc
xchg
xor
in
lcall
loopne
shrl
aam
fs
insl
and
lock
stc
in
or
or
jb
and
fdivrl
cmc
out
push
xor
pusha
sbb
insl
push
leave
adc
sbb
cmc
pop
cs
dec
mov
mov
rolb
jno
repnz
sub
adc
jl
testb
imulb
fs
iret
les
jnp
or
xchg
pushf
add
inc
fs
in
push
add
aam
idivl
and
lock
add
xchg
pop
dec
fs
pop
xchg
sub
mov
test
test
or
jb
adc
or
adc
or
mov
insb
cwtl
nop
out
or
ja
xchg
pop
pushf
shld
mov
cmp
mov
call
fisubrl
add
jmp
adc
enter
sub
xor
leave
adc
and
pop
dec
cli
in
enter
cli
jo
bound
icebp
mov
mov
rcrb
scas
daa
push
mov
aaa
pop
add
adc
sub
adc
cld
dec
dec
lock
dec
sbb
dec
adc
sahf
pop
and
pop
test
cmp
mov
or
fsubrs
in
sub
add
jl
sub
xchg
sub
xchg
movsb
js
out
js
adc
out
fdivrl
addb
mov
xor
cld
xchg
push
xlat
cmp
ds
sbb
out
sub
xor
stc
add
incl
sbb
jb
pop
jb
mov
pop
enter
jb
in
lock
add
sbb
inc
push
rcll
push
dec
dec
jb
cs
je
dec
mov
pop
cwtl
pushf
rolb
cltd
inc
pop
jb
adc
fsubrs
inc
cs
mov
pusha
dec
add
jg
cmp
leave
mov
xor
jo
nop
daa
push
insb
xchg
fsubr
sbb
jno
andb
cmp
add
iret
js
pop
dec
dec
cmp
cs
insb
pcmpeqb
nop
mov
mov
aaa
dec
ja
clc
vmread
push
daa
push
enter
add
xlat
adc
and
mov
das
es
add
scas
enter
dec
jl
shll
and
dec
out
mov
add
in
in
add
daa
lret
out
adc
adcb
xchg
int
inc
mov
inc
dec
mov
leave
je
dec
sbb
inc
mov
mov
jbe
fsubl
lahf
out
fwait
sub
cld
push
push
sbb
sahf
imul
dec
pop
neg
mov
jo
lahf
jp
sbb
iret
mov
daa
scas
and
lods
sbb
testl
add
shlb
into
add
mov
add
and
in
arpl
outsl
ret
loope
mov
push
call
xor
push
jecxz
imul
or
clc
pop
add
es
add
mov
pop
es
imul
insb
and
clc
dec
je
insl
jecxz
or
mov
loope
fldt
pushf
jb
ss
fnstsw
mov
or
xchg
imul
fiadds
data16
xchg
add
sub
xchg
xor
insb
dec
fcmovu
rclb
push
mov
xor
sbb
dec
xchg
push
data16
xor
add
out
xchg
cmp
inc
data16
sub
data16
lret
rcll
xchg
ret
push
dec
dec
or
add
add
hlt
xor
enter
push
sbb
js
cmp
add
mov
xor
out
add
inc
cltd
add
jo
imul
mov
mov
aas
lahf
sbb
or
aaa
popf
xor
pop
xor
xor
sub
or
sahf
imul
add
dec
insl
pusha
or
adc
inc
mov
mov
stc
push
bound
lods
mov
jmp
nop
fs
dec
lcall
les
add
je
stos
add
dec
bound
pop
aad
pop
shlb
and
pusha
ficompl
mov
or
xor
fs
jmp
add
inc
and
test
notl
imul
ret
fistps
dec
dec
in
push
push
jbe
xor
mov
adc
lret
sub
and
pop
adc
loopne
fadd
sub
jae
pusha
cmp
movl
ss
push
push
test
popf
lods
add
add
add
xor
xchg
or
cmp
mov
push
test
add
dec
and
xlat
mov
xchg
inc
adc
and
jnp
outsl
add
add
pop
movsl
push
pop
scas
pop
fsave
cmp
sbb
mov
xchg
adcl
out
outsb
inc
lods
xchg
addl
sti
add
sbb
aas
xor
pop
outsl
pop
ja
jne
lock
mov
or
cs
jp
cmp
sahf
and
lcall
pop
xchg
add
sti
insb
ret
mov
rorl
jno
inc
cmp
sbb
pop
xor
rcl
inc
lea
sbb
or
jl
xlat
xchg
cmc
loopne
jp
sub
loope
mov
rorl
sub
imul
or
adc
pop
mov
out
das
push
and
add
xor
subb
pop
or
pop
xchg
add
rolb
xor
shrd
ljmp
xor
mov
xor
inc
or
adc
data16
icebp
inc
mov
push
fldt
push
arpl
dec
pop
mov
mov
dec
movhps
in
popa
mov
cmpsl
mov
rcll
xchg
sbb
dec
adc
femms
cwtl
sar
cmp
xor
cmp
mov
cmpsb
or
inc
xchg
mov
andb
sbb
shll
push
push
sub
cltd
pop
xchg
and
inc
mov
popa
push
adc
dec
out
push
and
ret
inc
xor
jb
add
cmp
mov
and
or
lcall
xor
pop
sti
sbb
adc
xchg
pop
add
loopne
test
add
pop
push
in
xchg
pop
inc
and
ficomps
in
dec
sbb
andl
pop
push
jne
leave
ss
add
inc
rcrl
popa
mov
xor
push
dec
nop
adc
push
clc
loop
add
sbb
popf
push
es
pop
dec
gs
inc
movsb
sub
sub
mov
mov
jne
movl
push
outsb
dec
inc
mov
inc
push
xor
adc
aad
adc
shll
mov
add
cwtl
sbb
xor
lea
scas
outsb
jmp
jno
push
pop
push
aas
pop
rorl
xor
stos
outsb
imul
loopw
push
clc
or
dec
imul
inc
mov
inc
xorb
arpl
sub
insl
sub
sbb
add
push
inc
mov
movsl
pop
sub
fs
test
push
insl
or
and
mov
mov
cmpsl
inc
mov
jne
insb
insb
test
cmp
jnp
dec
js
imul
pop
inc
movsb
outsb
cmpsl
lcall
mov
push
mov
pop
or
mov
loopne
jecxz
popa
ds
repz
rcrl
dec
push
sub
mov
scas
add
jle
inc
insb
xor
je
push
mov
add
mov
fildll
cmpsl
ljmp
dec
jb
xor
pusha
repnz
pop
inc
push
push
imul
pop
cmpsb
sub
pop
jnp
test
aaa
mov
dec
les
pop
xlat
je
or
pop
push
dec
xchg
outsl
roll
loop
push
jb
std
xor
insl
bound
sti
inc
addr16
test
adc
or
ret
les
push
ret
mov
xchg
lahf
inc
adc
sub
or
inc
dec
pop
xchg
or
inc
scas
inc
jns
sarb
loopne
pop
cmpsb
add
pop
push
dec
testb
ret
filds
flds
or
mov
mov
fdivrs
out
movsl
adcl
xchg
lock
push
push
lar
not
and
adc
dec
pop
add
jb
dec
inc
mov
jns
pusha
testl
dec
mov
inc
loopne
and
dec
loopne
lods
push
and
mov
xchg
mov
add
or
add
arpl
adc
and
xor
mov
outsl
shll
pusha
mov
jmp
orb
sar
addr16
cmp
mov
out
adc
add
int
adc
das
inc
or
and
imul
imul
and
jne
sbb
inc
dec
mov
sbb
dec
into
add
xchg
arpl
movsb
push
add
insb
in
or
repnz
jb
sbb
add
sub
jecxz
jge
lahf
jg
outsb
jo
mov
mov
mov
xor
push
cs
adc
rorb
jns
mov
ja
pop
test
aas
shll
movsb
pop
popf
ds
adc
dec
dec
dec
lahf
inc
cmp
mov
push
rclb
cmp
xchg
mov
imul
or
dec
inc
jg
push
dec
dec
dec
cs
push
push
sbb
test
pop
add
ret
pushf
pop
sbb
pop
ficompl
rcrb
cmp
imul
inc
icebp
inc
push
inc
push
lds
jb
xchg
jbe
jns
pop
loopne
ret
outsl
push
dec
mov
out
movb
push
xchg
pop
xchg
inc
and
jp
mov
pop
add
and
shll
outsl
sbb
inc
inc
push
push
divl
dec
push
push
and
popf
pop
fildl
or
adc
lahf
sbb
push
push
xor
mov
lcall
adc
jae
lods
adc
rolb
and
and
add
jo
dec
add
add
mov
pop
rol
add
add
stos
jnp
inc
pop
pop
push
inc
fdivs
xchg
add
jmp
insb
loopne
push
xchg
je
divl
stos
push
push
sahf
outsl
mov
fisubrl
inc
jne
data16
inc
es
cmpsb
imul
cmp
popa
jle
mov
jnp
dec
popw
incl
add
imul
mov
test
mov
pop
jbe
lcall
mov
sbb
scas
je
dec
dec
mov
enter
ja
mov
fcmovne
xor
mov
xchg
sti
mov
add
nop
out
pop
lret
add
push
xchg
xor
imul
xchg
pusha
icebp
mov
xchg
xor
popf
mov
mov
add
pop
inc
dec
inc
cmpsl
mov
je
ja
add
or
popa
pop
inc
bound
ja
push
or
aas
sarb
mov
pop
test
out
mov
lds
shlb
xorl
xchg
shll
popa
clc
test
cmpsl
adc
cmp
jo
cmp
dec
jge
clc
lahf
mov
inc
imul
xor
push
mov
fadds
jbe
jae
add
xor
xor
xor
popf
mov
xchg
scas
lret
fwait
sbb
imul
fldenv
xchg
ds
shlb
rcrb
mov
pop
xchg
movsl
add
push
sub
mov
mov
push
dec
jne
sub
and
pop
xchg
mov
add
sti
push
and
mov
in
pop
jl
fildl
pop
test
add
or
frstor
pop
dec
gs
je
jmp
add
add
xchg
inc
je
leave
push
fmull
fldt
xlat
jle
sbb
add
sub
jae
xor
xchg
xchg
mov
sbb
jb
dec
fldenv
push
add
iret
data16
jge
mov
mov
and
jae
sbb
out
ja
xchg
cmp
xor
or
pop
pop
push
and
dec
inc
flds
pop
in
xor
adc
sbb
add
adc
sub
xchg
mov
scas
insl
or
and
or
xor
jae
dec
lret
addb
and
clc
inc
dec
inc
out
mov
or
insl
push
rcrl
insl
daa
ss
pop
pop
movsl
ljmp
nop
and
push
mov
and
jne
loopne
aas
dec
jecxz
dec
cmpsl
sahf
insl
fcmovnb
cmp
popf
add
or
pushf
aad
ja
and
add
rcll
jbe
dec
rolb
and
push
xor
imul
mov
out
sbb
push
or
mov
sub
jb
out
push
cwtl
add
sbb
push
jmp
fwait
lcall
add
je
inc
pop
ret
lds
pop
mov
enter
cmpsl
daa
mov
push
ja
add
lods
mov
push
dec
xchg
xor
into
sub
rorb
xchg
sub
outsl
repz
rcr
rcrl
fmuls
idivb
lds
out
pusha
pop
cmc
push
ret
sarl
gs
push
mov
stc
and
bound
push
push
daa
sbb
roll
sub
jne
testl
xchg
icebp
mov
inc
test
push
dec
popf
je
push
cmp
aas
mov
stos
jbe
scas
dec
xlat
imul
or
xchg
sbb
add
andb
sbb
sbb
and
xchg
pusha
mov
mov
xchg
cs
cmpsl
push
pop
mov
clc
push
arpl
dec
xor
xchg
rcrl
icebp
sub
pop
enter
and
sbb
scas
sbb
push
push
cld
push
add
hlt
xor
push
ret
and
loope
pop
adc
fs
inc
or
mov
ds
hlt
loop
adc
inc
pop
in
fwait
int
repz
push
call
push
insl
aaa
and
push
bnd
push
mov
imul
test
pop
push
lock
mov
inc
jbe
push
add
add
jo
lahf
out
int
ljmp
cli
scas
imul
popa
loope
insb
scas
gs
mov
stos
scas
in
mov
adc
shrl
mov
insl
lds
das
mov
das
addb
aaa
orb
add
xchg
or
add
aaa
add
mov
es
andb
sub
add
cmp
add
mov
add
stos
fsubp
out
ret
scas
mov
cmpsl
int
psrld
pop
rol
jecxz
mov
mov
enter
into
in
stc
fbstp
data16
fcmovnb
stos
pushl
pop
addr16
lret
ror
ljmp
inc
mov
mov
mov
sti
enter
lret
fnsave
loopne
int
mov
into
sbb
mov
inc
int
adc
int
ljmp
lret
mov
cmp
xor
ret
jmp
pop
xchg
or
rorl
push
inc
push
cmpsl
or
stos
jge
inc
add
cmpsl
mov
in
lods
push
dec
rcll
mov
xchg
outsl
mov
mov
leave
iret
stc
pop
pusha
add
jo
outsb
add
dec
jge
mov
and
sub
sub
xor
xchg
sub
inc
adc
fcmovbe
mov
mov
imul
mov
aam
dec
insb
sahf
out
or
movsb
test
dec
repz
in
imul
jmp
test
fsubs
add
inc
jnp
mov
out
scas
in
cmp
dec
idiv
lods
pop
enter
pop
jmp
jae
sbbb
pop
pop
push
pop
xor
dec
or
push
fwait
or
daa
mov
inc
inc
add
or
cli
andb
cld
add
jo
je
push
test
aas
xor
xlat
push
sbb
jno
jmp
add
xchg
jg
inc
push
sbb
iret
arpl
sbb
jg
daa
xchg
adc
sbb
icebp
sbb
dec
add
add
out
lahf
sbb
mov
subl
sbb
add
inc
add
decl
add
test
adc
pop
add
dec
pop
jne
push
pusha
pop
icebp
push
adc
shlb
jg
addr16
decl
bound
dec
das
xor
adc
xchg
add
das
pop
push
jecxz
call
add
add
pop
xchg
test
xchg
and
mov
and
pop
cmp
pusha
inc
mov
dec
daa
cmc
lods
andb
jg
or
iret
in
sbbb
paddsb
add
mov
lods
jbe
daa
dec
add
dec
push
and
mov
mov
dec
lods
or
mov
movsb
and
jne
cmc
pop
add
and
add
cmp
dec
test
roll
add
ja
adc
adc
xchg
scas
adc
add
inc
out
push
sub
add
add
nop
add
mov
addr16
movsl
sbb
xchg
push
and
jg
sbb
adc
aas
xor
sub
add
aam
iret
mull
and
mov
sahf
add
inc
add
out
push
les
subb
add
pop
push
add
ret
or
pop
push
sbb
xlat
add
out
cmp
add
test
adc
dec
or
sbbb
push
ret
sbb
mov
call
add
mov
add
enter
daa
or
loope,pn
push
adc
xlat
or
sub
push
push
or
sub
push
inc
xchg
iret
cmpsb
add
add
std
add
incb
btc
dec
pop
repnz
push
mov
jns
cmp
push
or
inc
push
adc
outsb
mov
scas
and
lldt
add
add
or
idivb
arpl
out
mov
cmp
mov
cwtd
jl
add
add
or
sub
jecxz
sbb
neg
clc
xor
and
add
push
shrl
rsm
add
pop
subl
cltd
add
jae
addr16
ds
xchg
lock
clts
jg
notl
jl
jb
sbb
xchg
lcall
test
ss
lahf
arpl
or
mov
lcall
out
out
jns
jg
cld
cmp
add
rcr
add
aad
push
push
mov
add
add
jno
into
jecxz
jg
pop
push
emms
mov
ja
repz
jbe
add
pxor
shlb
jle
add
flds
roll
mov
in
cmp
add
ud1
int3
ja
cmp
mov
fiadds
frstor
ret
mov
jecxz
orb
stos
mov
pop
xor
pop
adc
mov
add
das
pusha
mov
cmp
cmpl
add
mov
incl
and
mov
imul
push
or
xchg
dec
xchg
mov
daa
xor
and
push
add
sub
sti
jb
push
jne
out
sahf
je
jbe
stos
nop
adc
mov
sub
push
sub
mov
testb
push
push
add
loopne
mov
clc
daa
mov
add
inc
call
out
inc
jno
or
pop
sub
or
mov
mov
cmp
jmp
xor
and
or
out
sbb
pop
mov
xor
sbb
mov
xor
or
int3
loope
test
decl
bound
iret
shrb
mov
add
cld
fdivs
and
fstpl
dec
push
into
lods
sub
and
clc
mov
rcr
shl
repnz
xor
mov
mov
and
ffreep
xchg
lahf
in
out
popa
or
shrb
shlb
negb
lret
sbb
pop
mov
xorb
mov
xor
mov
xor
scas
pop
inc
setnp
sti
int
dec
xlat
rcl
out
mov
mov
mov
inc
insb
outsb
aad
pop
scas
mov
pushaw
push
incl
mov
orl
enter
aas
mov
stos
or
dec
mov
mov
mov
aad
xor
pop
xor
outsl
xorb
and
jbe
ret
int3
fldl
ds
inc
loopne
andl
es
jbe
stos
xor
rolb
adc
fwait
jno
cmp
mov
out
add
and
outsb
jp
pop
xor
mov
sub
dec
out
xor
mull
push
add
dec
push
sahf
or
sbb
xor
pop
cs
push
inc
mov
daa
and
jp
sub
pop
jae
pop
mov
jo
into
mov
aaa
sub
cmp
movaps
outsl
cmp
push
aam
push
push
dec
inc
pop
pop
shrl
inc
aam
inc
sbb
loopne
out
bound
pop
sti
mov
and
push
push
cmp
outsb
outsb
cmp
daa
or
inc
rol
shl
not
scas
adc
aam
enter
mov
into
pop
nop
hlt
mov
mov
fdivrs
mov
mov
or
xor
lret
push
leave
sarb
imul
hlt
mov
inc
lret
xor
fdivl
sarb
sbb
jae
shlb
pop
js
adc
and
mov
push
subb
and
and
mov
ja
fbld
test
pop
add
mov
add
adc
inc
add
daa
xor
ss
and
outsb
dec
icebp
cmp
add
adc
dec
jbe
push
and
or
inc
push
dec
push
pop
dec
inc
dec
dec
add
hlt
cltd
movsl
pusha
sti
add
sar
mov
adc
test
and
mov
sbb
mov
mov
lret
das
dec
pop
push
jbe
jle
cmp
aaa
das
fcmovbe
stos
mov
int3
call
xlat
insl
sbb
add
jge
sahf
adc
call
hlt
push
xchg
and
push
stos
aas
daa
add
enter
pop
push
mov
clc
add
nop
add
daa
add
outsl
scas
nop
xchg
push
outsb
and
imul
stc
push
aas
jg
or
fnsave
aas
and
aas
pushl
jbe
mov
sbb
aas
fwait
jnp
mov
das
stos
push
adc
pusha
ret
imul
ja
or
mov
mov
aas
inc
and
xor
or
daa
pop
dec
cltd
sbb
arpl
push
push
pop
push
or
addr16
adc
push
xor
add
int3
dec
pusha
data16
xchg
push
pop
or
inc
std
sub
sbb
adc
stos
cmp
push
insl
mov
mov
test
dec
pop
and
sub
push
add
mov
and
pminub
sub
xor
gs
adc
mov
xor
sbb
addr16
sub
mov
push
cli
jae
fldt
sub
or
fbld
int3
in
mov
hlt
push
mov
test
sbb
fiadds
mov
push
adc
cmp
fnstenv
inc
cltd
cmp
or
dec
mov
pushw
jb
push
inc
cmp
pop
cmp
pop
jbe
ljmpw
push
lret
clc
insl
ret
loopne
add
mov
cwtl
pop
and
rcll
out
inc
popa
and
sbb
insb
xor
xor
scas
sub
pop
xchg
sbb
add
fistpl
js
pushf
cmp
mulb
or
add
into
scas
lock
or
outsl
mov
jecxz
push
add
cmp
mov
xlat
int3
fstp
jae
arpl
xchg
decl
neg
jnp
arpl
out
ja
mov
das
pop
repz
lods
divb
negl
jp
or
and
push
pop
push
int
pop
data16
sahf
xor
addr16
sub
and
or
lret
or
push
and
inc
pop
push
or
sbb
jnp
xchg
and
scas
push
pop
or
es
into
pop
outsl
data16
fwait
push
mov
push
xlat
es
data16
ss
inc
lret
cmpsl
loopne
adc
push
stos
pop
movups
inc
or
mov
dec
test
push
cmc
daa
movsb
lahf
mov
dec
push
push
pop
mov
pop
add
mov
mov
mov
pop
cwtl
out
push
mov
sbb
setnp
add
iret
repz
add
add
repz
addl
repz
pmaxub
ss
push
xor
adc
mov
jb
call
aad
push
mov
pop
dec
in
jns
ja
inc
mov
add
jns
out
add
out
sahf
pop
sub
sub
and
sahf
out
or
or
out
sahf
out
or
out
sahf
adc
adc
lahf
out
adc
adc
mov
repz
adc
repz
pop
in
sbb
sbb
cmp
repz
loopne
fcompl
cmp
repz
repz
pop
int3
and
and
cmp
repz
shlb
and
cmp
repz
lods
movsb
iret
repz
daa
mov
cmp
repz
xchg
sub
repz
repz
das
xorb
xor
iret
repz
je
jo
repz
rep
xor
cmp
iret
aaa
pusha
pop
bound
jle
push
addr16
inc
inc
popa
mov
pop
add
lret
push
inc
or
adc
pop
or
add
or
int
mov
pop
adc
popa
pusha
fs
outsl
sub
jae
push
jb
cmp
and
pop
sbb
sbb
sub
and
sub
xor
sub
xor
xor
sub
and
ret
jg
imul
jp
outsl
sbb
sbb
sbb
push
pop
and
and
sahf
add
inc
dec
sbb
sbb
or
and
add
jbe
shrl
orb
add
sbb
push
daa
pop
leave
mov
add
sbb
syscall
addb
sbb
orb
mov
mov
adc
and
and
ss
mov
or
or
orb
sub
sub
xor
and
adcb
aaa
adc
aaa
add
and
sbb
addb
insl
lods
lea
adc
sbb
push
and
xchg
int
adc
and
adcb
in
addr16
sbb
sbb
sbb
aaa
in
sbb
sbb
sbb
sbb
sbb
cmp
fidivrs
sbbb
and
pop
outsl
and
pop
inc
sbb
and
mov
stc
mov
pop
add
and
insb
fisubl
pop
sub
sbb
mov
aaa
add
add
pop
imul
and
push
and
sub
xor
pop
jb
add
sbb
in
cs
sub
xor
subb
add
lret
sub
sbbl
add
rcrl
xor
add
mov
orb
xorb
sub
cmp
and
pop
sub
xor
cmp
add
push
daa
add
add
ds
or
aaa
cmpb
adc
imul
add
adc
cmp
add
sub
cmpb
mov
and
add
sbb
inc
pop
jb
sub
add
and
ss
sbb
adc
pop
enter
and
nop
pop
pop
sbb
mov
mov
pop
aaa
inc
aaa
add
mov
dec
dec
add
add
mov
dec
orb
add
add
xchg
sbb
orb
imul
orb
dec
subb
pop
repnz
enter
aaa
push
enter
sbbb
add
sub
push
or
add
sub
push
xor
xor
push
and
sbb
scas
or
push
sbb
mov
push
push
pop
pop
daa
add
push
mov
pop
add
sub
in
insl
pop
dec
sbb
repz
xor
xor
pop
adc
in
mov
sub
pusha
sub
popa
push
add
test
insl
pop
xor
bound
fs
xor
add
ss
add
add
mov
add
push
imul
fisttpl
adc
add
gs
orb
add
outsb
ss
sub
jnp
repz
jo
adc
jb
push
je
sub
push
leave
insl
add
jbe
sbb
outsl
in
lret
ja
cmpb
xor
data16
add
das
add
aaa
imul
sbb
nop
jl
add
jge
xchg
xor
jg
sbbb
sbb
or
sbb
lods
jb
mov
sbb
jl
sbb
test
imul
add
xchg
sub
sbb
aaa
xor
add
iret
sub
mov
add
and
mov
push
sbb
push
jb
push
sbb
xorb
not
push
nop
adcb
jl
repnz
xor
sub
add
and
sete
add
dec
push
xchg
add
cs
mov
add
sub
cltd
sbb
and
and
jnp
out
lcall
or
fisubl
inc
sbb
in
imul
or
sbb
imul
orb
and
mov
sbb
pop
sbb
outsb
add
movsl
push
cmpsb
adcb
sti
dec
repnz
test
sub
orb
add
xor
jbe
mov
cs
and
push
add
shrb
sbb
aaa
add
and
ds
or
add
scas
or
mov
and
pop
or
or
outsb
pop
imul
sub
and
in
sub
add
or
divb
in
mov
aaa
mov
xor
loop
push
enter
and
sbb
jl
sbb
and
fstp
mov
cmpb
jae
sbb
dec
outsb
dec
mov
sub
fldt
jns
daa
mov
mov
and
rolb
add
ret
ds
adcb
add
movb
mov
leave
lret
aaa
and
sub
or
add
orb
into
sbb
push
daa
and
sub
out
mov
das
roll
mov
xor
daa
es
jns
aaa
xorb
imul
or
fdivs
add
push
xor
adc
sbb
iret
in
and
sbb
push
repnz
sbb
out
sub
xor
mov
or
add
sbb
fidivrl
and
and
addb
add
or
and
lcall
add
push
nop
sbb
and
sbb
loop
and
pop
mov
cmp
jecxz
pop
sbb
in
in
pop
ss
jb
push
out
call
or
jmp
jbe
mov
in
andb
mov
out
out
pop
xor
xchg
lret
repz
lock
sub
sub
xor
ds
orb
ss
fiaddl
repz
sub
sbb
aaa
cmc
orb
add
xor
mov
filds
or
testl
clc
jle
add
les
add
orb
fcmove
in
and
sbb
ss
cs
xchg
sub
daa
xchg
and
dec
sub
aaa
sub
jbe
or
std
xor
xor
jmp
jns
notb
and
sbb
mov
orl
or
and
andl
mov
add
add
and
sbbb
aaa
add
xchg
adc
pop
orl
jnp
imul
or
add
or
pop
sub
push
push
add
inc
jno
xorl
add
add
push
adc
xor
nop
pop
daa
adc
mov
dec
push
cs
push
pop
aaa
or
mov
dec
in
add
and
add
lods
or
xor
sbb
testb
add
and
sbb
popf
sbb
sbb
cmpsl
and
sbb
and
fistpl
adcl
add
dec
add
xchg
pop
mov
and
add
jbe
xchg
jl
push
sub
adcl
movl
in
bound
mov
add
and
or
sub
daa
sbb
sub
xor
add
adc
sbb
subl
mov
sub
fisubl
sub
and
and
pop
adc
sub
das
addl
and
xor
xor
sbb
leave
adc
sbb
xor
add
fnsave
and
sbb
xchg
and
dec
cs
mov
pop
sbb
mov
cmp
xor
sub
add
push
aaa
inc
sub
sbb
popf
jbe
addl
push
jbe
mov
cmp
add
cmp
add
mov
aas
and
mov
inc
insb
bound
stos
cmpsb
add
sub
out
mov
inc
orl
orl
out
sub
test
mov
lar
add
aaa
pop
aaa
or
pop
add
add
add
orl
sbb
add
incb
xor
push
ret
or
fbld
sbb
jbe
push
adcl
adc
sbb
xor
aam
push
inc
add
sub
or
push
push
push
rcrb
or
and
and
in
push
fimull
adc
push
jb
mov
inc
and
or
or
mov
or
sbb
aaa
adc
mov
lcall
sbbb
or
or
pop
mov
or
dec
or
mov
sarb
sbb
or
add
movntps
sub
iret
or
int3
or
inc
cs
mov
add
dec
addl
xor
or
pop
and
loopne
sbb
das
push
push
stos
or
sbb
or
xor
add
jp,pn
sub
sbb
xor
adc
ret
push
fidivl
push
sub
mov
loopne
adc
ret
add
adc
add
stos
or
mov
mov
push
andb
push
repnz
adc
loopne
push
daa
push
das
add
sbb
imul
andb
mov
mov
and
outsb
push
orl
adc
xor
mov
adc
push
xor
xchg
imulb
popa
adc
out
and
inc
push
adc
hlt
xchg
incb
xchg
test
sbb
bound
inc
into
pop
ljmp
lcall
push
fisttpl
xchg
adc
into
or
mov
sub
out
push
and
push
push
sbb
fiadds
sbb
push
sbb
es
cs
inc
or
adc
stos
aaa
jp
das
push
pop
mov
sub
xor
jp
pop
pop
pop
or
adc
cmp
sub
mov
js
popa
adc
into
push
sub
sbb
insb
add
scas
add
mov
sbb
sbb
in
das
adc
dec
pop
rorl
adc
and
sub
sahf
add
bound
pop
mov
cmpsb
push
mov
push
sbbl
icebp
sub
sub
and
pop
addl
and
inc
or
pop
orl
add
xor
ficoml
jbe
sbb
adc
mov
sbb
cmp
sbb
pop
or
cmpsb
sbb
pop
pop
push
ljmp
mov
cmpsl
ret
sbb
cmp
sub
adc
and
mov
into
pop
push
pop
sub
ds
sbbl
adc
adc
xor
cmpb
and
mov
repnz
jp
mov
and
scas
adc
mov
orb
sub
and
mov
mov
andl
push
bound
adc
or
sub
ljmp
push
jbe
arpl
xchg
in
sub
sahf
ds
ds
pop
or
out
fiadds
push
enter
repnz
push
and
cs
gs
test
sub
andl
out
xor
jle
cmp
cwtl
shlb
and
xchg
or
push
push
test
push
sbb
mov
pop
xor
es
mov
mov
outsl
lret
add
push
shll
pop
cli
adc
rcrb
es
mov
add
add
dec
sub
sbb
or
or
mov
ret
adc
xor
mov
out
subl
ds
rol
sub
es
roll
xchg
mov
cmpsb
xchg
sub
sbb
scas
push
ficompl
mov
push
dec
cs
incl
aad
sub
mov
insl
orl
add
push
pop
or
scas
sbb
subl
pop
cmp
std
xor
pop
sbb
or
push
add
push
dec
das
mov
sub
jb
js
add
mov
sub
sub
sub
adc
mov
add
pusha
stos
sbb
shrb
mulb
and
sub
sbb
jno
sub
inc
adcl
mov
push
and
ljmp
pop
je
and
fisubrs
adc
xor
daa
or
or
pusha
xchg
push
jbe
sbb
inc
add
pop
xor
rcrl
push
jbe
or
push
cs
movb
jo
dec
push
mov
inc
lods
pop
push
add
fimull
sbb
dec
rcrb
and
ret
sub
and
xchg
imul
loop
cs
add
push
push
or
lcall
jp
jle
mov
mov
push
and
out
ss
fidivrs
or
ds
lcall
or
xchg
xorl
rolb
jle
negb
pop
bound
mov
and
adc
add
or
jmp
or
mov
lods
in
shll
jg
and
xchg
inc
push
divb
divb
xor
bound
add
mov
xchg
add
sub
xlat
addb
test
bound
push
sub
push
push
test
subb
pop
or
ret
xchg
push
push
or
lea
lret
xchg
xchg
or
push
sub
or
xchg
ljmp
mov
sbb
add
xor
loop
mov
add
scas
mov
andl
sbb
xorb
push
and
mov
sub
or
insb
push
xchg
cmp
push
pop
and
sub
mov
outsb
out
or
pusha
and
adc
dec
es
sub
mov
xor
out
or
cmp
pushf
cltd
inc
sub
lret
mov
cmp
add
ljmp
sbb
sbb
xor
adc
xchg
and
fadds
add
mov
repnz
mov
aas
fiaddl
mov
inc
ss
inc
gs
mov
mov
inc
cs
push
sbb
mov
ds
sbb
fimull
push
adc
dec
and
sbb
cmpsb
mov
push
jmp
shrl
mov
mov
sub
rolb
xchg
jecxz
xchg
mov
sbb
pop
pop
rorb
pop
lea
orb
push
add
mov
mov
cmp
outsb
or
inc
scas
or
fimull
xlat
ss
adc
scas
cmp
inc
mov
xor
push
or
xor
and
add
sub
cmpl
push
data16
dec
gs
xchg
jbe
or
out
fimull
addr16
jb
iret
add
dec
das
cmp
adc
ljmp
test
xchg
xor
adc
dec
push
mov
mov
outsb
push
dec
bnd
pusha
cs
rcr
adc
add
sub
xchg
scas
xchg
adc
push
cli
and
add
rcl
and
sbb
cmp
out
stos
mov
sub
adc
mov
mov
push
rolb
daa
jp
add
ss
adc
cwtl
negb
inc
pusha
pusha
jle
mov
fldenv
pop
sub
sub
pop
cwtl
mov
mov
push
lcall
push
cwtl
dec
dec
cmpsb
pop
sbb
loopne
push
xchg
sub
stos
lea
add
loop
rorl
fiadds
or
sbb
rcll
push
mov
sti
sbb
mov
push
rcll
outsb
adc
prefetch
jo
es
into
jbe
add
push
bnd
lcall
clc
jmp
push
push
add
cwtl
inc
push
pushl
lcall
mov
and
sbb
sbb
lods
push
cltd
lret
and
mov
pop
jbe
pusha
je,pn
or
inc
and
push
jbe
or
mov
subb
daa
scas
sar
mov
bound
xchg
and
imul
or
data16
or
inc
jnp
add
xor
adc
push
adc
pop
test
repnz
pop
push
xor
sahf
cltd
test
ds
fidivs
xor
pushf
mov
mov
shl
into
push
dec
popf
mull
bound
ds
add
rolb
es
or
aaa
fisubs
sub
dec
stos
xchg
sahf
pop
xchg
shlb
jo
sbb
into
mov
push
mov
jb
sub
negb
xor
sub
sub
adc
adc
and
jbe
jbe
push
fcomps
adc
mov
xor
adc
pop
add
sbb
sti
loopne
push
push
push
mov
mov
insl
inc
mov
add
or
sub
dec
or
and
xchg
or
push
xor
xchg
or
xchg
cs
mov
mov
and
outsb
out
jecxz
dec
xor
xorb
push
add
cs
lret
adc
repnz
push
shll
push
sbb
add
shlb
mov
add
daa
int3
push
pop
and
push
lret
adc
inc
add
bound
cwtl
sbb
adc
dec
ret
adc
sub
sbb
cmpsl
sbbl
add
push
dec
sahf
or
add
andl
mov
jp
push
or
adc
js
enter
stos
scas
xor
adc
test
cmp
adc
stos
and
mov
or
inc
ret
cmp
pop
and
sub
daa
into
adc
or
inc
pop
adc
and
jge
push
push
lods
adcl
pop
mov
rclb
sbb
lcall
daa
pop
mov
mov
dec
or
aad
adc
add
mov
scas
ret
mov
inc
xor
push
or
inc
and
pop
push
adc
bound
data16
sbb
lcall
adc
and
sub
xor
bound
xchg
cmpsb
inc
leave
add
repnz
sbb
sbb
in
mov
sbb
mov
push
or
or
dec
mov
call
xchg
xor
mov
push
add
and
inc
sub
add
xchg
ficoml
push
rcr
nopl
imulb
sbb
push
and
repnz
rorb
inc
out
bound
cmpsl
or
cmpsl
inc
push
jle
aaa
add
pop
or
cmpb
mov
and
mov
xorl
mov
push
ret
sub
jne
ficoms
fimuls
rcl
add
mov
xor
cmpsb
xor
jbe,pt
push
mov
add
sub
out
mov
adc
cmp
xor
push
mov
push
stos
sub
sub
insl
or
pop
adcb
or
cmp
jbe
sub
or
loop
sub
push
mov
or
sub
mov
xchg
or
inc
inc
test
cli
mov
push
lds
adc
push
or
out
add
or
mov
cmp
mov
adc
mov
xchg
mov
xchg
sub
pop
push
sbb
addr16
sbb
xor
into
xor
jp
jle
es
dec
lods
pop
fiaddl
pop
mov
sub
int
lcall
xchg
push
jecxz
lods
mov
pmaxub
or
test
xor
mov
and
cmpsl
jecxz
divl
repz
xor
js
mov
xor
mov
xchg
xchg
fidivs
mov
xchg
pop
repnz
sub
sub
mov
pop
add
sbb
mov
xor
bound
mov
cmpsb
adc
sbbb
mov
push
xchg
aad
xor
and
pop
push
or
sbb
add
les
ret
sahf
sbb
sub
fwait
add
lret
and
push
add
bound
mov
adc
and
aad
push
adc
sbb
fildl
lret
xor
decb
outsb
xchg
adc
cli
xor
add
es
xchg
enter
or
sub
dec
sub
xchg
faddp
push
je
pusha
cmp
xchg
and
xor
pop
push
sbb
or
cs
dec
push
adc
jle
push
add
push
test
sub
push
add
add
add
fs
mov
dec
push
mov
push
sbb
xor
or
les
pop
xorb
cmpsb
lds
in
out
mov
add
sbb
push
daa
fisubrs
jbe
ret
push
or
scas
out
push
jbe
es
sub
push
cmp
add
adc
xor
or
ss
push
das
ret
inc
inc
xor
or
inc
add
and
dec
or
dec
cmp
xor
sub
ret
das
dec
fisubl
mov
sub
sbb
ret
fs
ret
push
iret
sub
xchg
xchg
sub
repnz
cmp
jb
adc
xchg
xorl
push
and
movsl
int3
mov
push
pop
xchg
rolb
adc
cmp
mov
pop
sbb
adc
adc
loop
cmpsb
jle
adcl
xor
ss
pop
repnz
sub
outsb
xor
out
mov
adc
or
pop
shlb
and
int3
test
test
mov
mov
or
fisubs
add
push
add
sub
cmp
shl
dec
add
fiaddl
push
jbe
lret
addr16
add
xorl
bound
pop
pop
mov
bound
push
sbb
fstl
inc
add
add
pop
mov
sbb
push
xchg
add
and
subb
adc
xchg
push
shll
aaa
int
aam
js
ds
adc
and
and
jbe
pop
push
std
es
lret
sub
adc
sbb
int3
bound
add
jp
stos
ret
rol
xchg
mov
mov
cmpsb
sbb
sahf
or
or
roll
cmp
adc
aad
mulb
outsb
test
inc
sub
shlb
push
adc
cwtl
adc
xor
das
lcall
cmpsb
dec
dec
xor
outsb
xchg
xchg
mov
das
or
or
xchg
cmp
fwait
push
push
add
ljmp
sbb
mov
inc
jp
push
or
mov
into
out
adc
push
dec
test
and
into
pop
add
call
arpl
sbbb
push
pop
cmpsb
test
int3
icebp
out
fiaddl
adc
loop
and
push
xchg
inc
jb
sbb
sub
mov
dec
and
mov
add
pop
call
and
out
sub
push
cli
sub
cmp
sbb
push
popa
fisubs
loop
rolb
out
mov
cmp
sbb
ficoml
fwait
push
cmpb
sbb
or
pop
adc
sub
inc
inc
inc
sbb
out
dec
dec
sub
push
mov
movsl
push
push
rcrl
xchg
pusha
mov
adc
bound
bound
or
or
fs
xchg
mov
or
xchg
cmpsb
ss
pop
push
sar
push
pop
cmpb
or
xor
sub
mov
push
push
pushf
enter
or
fisubrs
fimuls
adc
xor
and
addl
repnz
lods
loopne
test
outsb
adc
adc
lret
pop
inc
adc
add
js
cli
movb
adcb
fadds
sub
aam
push
jle
jb
pop
xchg
stos
data16
adc
arpl
push
xchg
into
aad
jo
shlb
push
add
in
cmp
ljmp
cwtl
je
push
add
xor
and
push
neg
inc
and
adc
jb
das
fiaddl
aas
cwtl
roll
cs
lcall
loopne
or
rcrl
dec
xchg
and
lret
cmpl
or
add
xor
adc
sub
bound
mov
push
or
or
into
outsb
mov
push
add
xor
mov
jb
mov
adc
mov
frstor
test
or
inc
or
inc
add
out
push
shlb
pop
jge
scas
sbb
add
dec
and
xor
add
and
mov
xor
notb
mov
out
cltd
pop
outsb
adc
pop
or
push
adc
nop
ret
jb
movsl
shrb
divb
or
and
inc
or
out
or
lods
bound
sbb
jbe
add
sub
mov
test
and
xchg
mov
push
push
and
add
xor
es
add
pop
out
ret
gs
into
push
subb
ljmp
sub
outsb
pop
mov
push
outsb
xor
push
rorl
rclb
push
dec
mov
adc
pushw
sub
sahf
mov
jb
push
aaa
push
inc
out
push
adc
push
call
xchg
ss
sub
dec
xchg
xor
jp
push
add
xchg
pop
ss
jno
adc
out
add
add
aam
sbb
es
push
mov
push
ss
pop
mov
cmp
push
add
sbb
dec
pop
popf
cmpsb
or
add
cs
mulb
push
push
ss
sub
and
push
int3
xchg
push
pop
aaa
or
cmp
cmpsb
add
scas
fld
or
loopne
push
shlb
or
adc
inc
sbb
or
cmp
insb
pushf
push
out
mov
or
or
out
popf
dec
jnp
add
and
mov
adc
jnp
xor
mov
jae
mov
out
out
sahf
adc
push
and
jbe
or
sbb
sub
pop
mov
mov
cmp
jb
sbb
or
mov
lret
loop
push
add
or
inc
or
and
or
cs
call
and
jbe
sbb
rorb
aaa
iret
stos
inc
xor
xlat
fisubl
or
or
xchg
and
or
push
and
mov
push
lea
out
or
add
or
mov
or
movb
or
or
lret
mov
adc
xchg
jno
mov
push
loopne
mov
or
cmp
or
ds
sbb
pop
or
dec
push
cs
push
bound
xchg
xor
mov
enter
xor
das
pop
aaa
les
push
or
inc
jmp
data16
data16
mov
or
xor
lcall
dec
test
push
cmp
adc
sahf
jmp
bound
cmc
loopne
addr16
or
pop
or
xor
xor
push
dec
imul
xor
dec
mov
or
jo
testl
or
in
mov
mov
mov
cmp
and
push
xor
les
or
and
add
push
or
int3
mov
mov
data16
or
push
mov
test
sbb
xlat
adc
sbb
xor
or
sub
pop
inc
sahf
shll
or
jle
out
dec
loop
out
or
or
and
xchg
loopne
xchg
testb
cmp
or
cli
sub
push
aaa
or
add
sbb
ss
das
daa
mov
into
dec
xchg
imul
testb
push
aad
cmp
stc
adc
fnsave
adc
shrl
or
adc
cmp
popf
or
or
lret
movsb
xor
scas
je
cs
loope
mov
add
cmc
or
rcrb
xor
or
mov
or
adc
add
cmp
and
inc
add
or
addr16
mov
jmp
les
jb
jbe
add
test
lcall
daa
add
in
pop
pop
das
xchg
cs
pop
adc
in
jg
aaa
add
outsb
xchg
aaa
add
sub
sbb
int3
shr
sub
sbb
adc
or
enter
xchg
xor
cmp
sub
jno
sbb
push
dec
popf
add
or
add
ret
jno
push
pop
xchg
out
xor
mov
or
in
inc
adc
or
inc
aaa
in
and
or
outsl
lock
or
fisubs
push
pop
and
mov
and
mov
adcl
popa
lock
pop
test
push
pop
or
add
cmp
lods
cmp
or
and
adcb
in
or
sub
or
ds
jp
neg
or
and
push
out
mov
jle
push
adc
leave
adc
sahf
pusha
test
in
ljmp
push
add
cmp
ds
jae
xchg
mov
push
out
cmp
add
cmp
or
sub
loope
rorb
push
jbe
mov
stos
adc
mov
adc
cmpsb
inc
ret
add
xchg
and
xchg
push
lcall
and
adc
cs
or
ret
cmp
ss
mov
or
cmp
sub
xchg
mov
push
xor
pop
adcb
ret
add
addb
mov
into
pop
sub
push
push
push
sub
add
es
imul
mov
loope
push
xchg
je
sbb
and
rol
add
sbb
and
scas
inc
mov
xor
inc
test
xchg
int3
iret
jp
rorl
or
pop
adc
pop
cmp
out
jo
ret
sbb
test
mov
rol
mul
and
pop
jae
jl
dec
stos
xchg
pop
hlt
rcll
or
rcll
fidivs
repz
and
daa
add
dec
lea
adc
pop
push
push
jb
mov
sub
and
ret
or
aas
ret
sbb
jb
stos
cli
mov
loope
mov
rol
add
or
sub
cmp
adc
xor
jmp
add
mov
pop
sbb
push
or
popa
push
xor
addr16
sbb
ret
jg
das
out
jp
and
or
lock
cs
adc
or
mov
ret
push
aas
addr16
jnp
test
cmpsl
pop
cmpsl
ficomps
lock
incb
cmp
cmpsl
adc
push
push
xor
xor
xchg
sub
insl
pop
jo
shlb
das
scas
ret
adc
divb
sub
pop
ret
jbe
sbb
and
mov
out
add
xchg
or
push
cmp
loope
xchg
dec
mov
add
loop
cmp
xlat
mov
pop
lods
add
adc
mov
push
imul
fnstsw
outsb
outsb
gs
jne
imul
outsl
dec
outsb
push
and
dec
push
adc
aas
pcmpeqw
inc
push
popa
pop
jle
outsb
xchg
addr16
es
mov
es
out
dec
out
pop
mov
jae
out
sahf
arpl
js
push
jne
jns
imul
push
outsb
rol
jp
je
data16
repnz
repnz
pop
mov
arpl
jp
jnp
fmul
push
or
aaa
pop
adc
mov
mov
or
sarb
sub
sub
aas
and
pop
pop
enter
notl
sub
mov
std
and
cmpxchg
mov
mov
jl
xlat
mov
fisubrs
mov
incl
mov
cmp
lods
aam
shlb
mov
call
mov
pop
lods
inc
or
push
pop
push
add
xor
leave
stc
shl
aaa
outsb
fcmovu
or
or
inc
inc
sbb
in
fst
inc
aaa
jl
dec
sub
negl
push
jae
sbb
xor
add
test
mov
pop
xor
jns
cmpsl
xchg
scas
push
and
adc
xor
out
add
shl
iret
repz
loopne
ror
sarb
test
cwtl
nop
repz
xrelease
repz
pusha
pop
pop
push
push
dec
cmp
repz
inc
inc
cmp
repz
repz
sub
sbb
or
clc
mov
sahf
call
lods
jns
out
mov
out
sahf
out
pop
dec
inc
xor
repz
and
add
mov
repz
mov
xchg
test
cmp
repz
insb
xchg
iret
repz
or
inc
push
inc
inc
inc
inc
inc
cmp
repz
dec
dec
dec
dec
repz
repz
dec
dec
dec
push
iret
repz
push
push
push
push
push
push
dec
iret
repz
pop
pop
pop
jne
jno
jae
jne
ja
ja
push
jnp
fwait
jnp
pop
or
jns
out
or
or
sahf
out
sahf
or
or
or
sahf
out
add
add
add
jns
out
add
add
sahf
out
sahf
add
or
or
jns
out
or
or
or
xchg
popf
out
or
and
push
mov
jg,pn
popa
or
sub
imul
je
inc
xor
test
add
inc
cs
aaa
ss
cs
xor
pop
and
sub
pop
push
xor
das
xor
pusha
pop
pop
cmp
jb
and
mov
xor
add
sub
sbb
das
xor
xchg
xchg
xchg
xchg
ss
fdivl
mov
add
stos
fwait
mov
cmp
add
fs
out
pop
dec
dec
dec
outsb
mulps
push
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
push
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
and
outsl
dec
inc
mov
test
cmp
rorl
inc
cmp
cld
fmull
inc
dec
push
inc
dec
inc
stos
pop
mov
jle
inc
push
push
add
jl
ja
fdivl
xchg
mov
push
sub
mov
into
insl
sub
jbe
lea
iret
popf
mov
or
and
ljmp
or
lret
movsb
sub
pop
or
and
rcl
fs
outsl
sub
ja
int3
aam
rcrl
push
add
pusha
ret
addb
jbe
push
ljmp
pop
push
pop
dec
jge
arpl
sbb
xor
or
inc
and
xlat
add
mov
mov
and
jg
outsb
decb
sar
ror
cmp
cld
mov
movsb
cli
nop
cmp
repz
cmp
div
cmp
repz
testb
repz
hlt
adc
add
hlt
jnp
jns
lret
icebp
in
fisttps
out
fistps
out
dec
in
cmp
jl
out
and
adc
clc
lret
iret
shr
call
iret
jae
cmp
outsl
push
in
imul
loop
leave
push
loope
jns
out
loopne
fists
je
pop
fdivl
jmp
jnp
jg
fidivrl
push
repz
cmp
mov
cmp
cmp
mov
insb
aam
push
shl
cmp
repz
sarb
shrl
cmpsl
stc
cmp
rclb
cld
into
sahf
out
sahf
in
ror
mov
jns
lret
pop
out
sahf
out
inc
xor
cmp
lds
ret
out
dec
repz
movsb
xor
loopne
push
aam
out
sahf
rol
mov
pushf
jnp
out
mov
out
sahf
out
sahf
push
mov
repz
jns
mov
lds
mov
fdiv
cmp
mov
mov
mov
repz
repz
mov
mov
mov
pop
add
or
jmp
inc
mov
mov
lret
cld
rol
xor
jo
push
loop
pop
popa
fsts
shlb
fnstsw
out
dec
dec
push
dec
pushl
mov
out
rolb
mov
idivl
mov
std
xor
add
cmc
add
addr16
popf
add
mov
idivb
lret
jecxz
xchg
inc
push
dec
pop
lock
iret
in
mov
xor
clc
pop
xor
mov
ja
adc
sar
mov
aad
rol
roll
cmp
pop
or
xorb
jg
stos
jno
or
iret
loopne
enter
adc
add
les
insb
dec
xor
push
sbb
pop
fdivrs
ret
jecxz
adc
adc
inc
jae
outsl
inc
add
mov
daa
mov
enter
pop
paddw
sbb
das
inc
lcall
mov
addr16
and
mov
push
mov
xchg
inc
arpl
insl
dec
dec
iret
out
rcl
sub
pop
sbb
pop
mov
mov
dec
add
adc
ljmp
xlat
jecxz
aas
cmpsb
insb
ret
cmp
fimuls
repz
or
ret
pop
push
mov
sarb
outsl
adc
mov
mov
nop
or
mov
cmp
pop
daa
shll
daa
or
sub
rcr
scas
pop
or
out
or
in
aad
in
inc
fildll
sbb
xor
fcmovb
outsb
mov
add
inc
daa
push
push
lret
into
stos
inc
mov
sbb
lahf
ja
inc
lock
xchg
das
mov
clc
aam
int3
stos
mov
das
jg
ret
lcall
fwait
data16
pop
push
push
dec
pusha
mov
lret
lock
aaa
mov
sub
leave
in
sbb
adc
mov
int
inc
xor
mov
mov
mov
pop
xchg
mov
cmpb
fildl
imul
popa
sbb
je
mov
sub
dec
push
sub
getsec
aam
int
xor
bound
test
inc
dec
lret
mov
ret
sti
mov
out
and
std
xchg
enter
mov
sub
push
mov
data16
mov
push
test
mov
shrb
add
mov
pop
adcl
mov
shll
bound
mov
jecxz
jnp
push
in
fdivrs
lahf
rcrl
pop
inc
pop
aas
mov
adc
or
fwait
mov
and
enter
xor
and
sbb
out
cmp
jl
addb
cwtl
or
pop
daa
cs
ret
mov
add
idivb
adc
scas
pop
mov
cli
leave
in
sar
cli
ret
int
das
shll
aaa
lret
cs
into
mov
mov
dec
pop
sub
or
std
push
mov
sub
cmpl
das
pop
fisubrl
dec
daa
aas
addr16
mov
pop
subl
xor
daa
or
lret
mov
cmc
aam
cmp
cld
rcl
leave
stos
mov
hlt
inc
testl
addb
sti
test
mov
xchg
rorl
push
mov
js
xor
daa
add
xor
dec
mov
jo
add
sti
daa
scas
aad
and
jne
std
packuswb
jo
add
iret
mov
xlat
repz
add
loope
mov
mov
iret
ret
sub
mov
popl
negb
out
sub
lds
stos
mov
adc
cmp
push
int
fdivp
lock
pop
das
imulb
cmp
fistpl
jg
add
pop
pop
pop
repz
repz
pop
pusha
popa
bound
mov
ss
iret
repz
enter
and
cmp
mov
cmp
pop
enter
in
inc
rol
cmpsb
cmc
push
push
lds
out
ja
unpcklps
pop
cmp
out
pop
push
push
pop
dec
iret
aad
sbb
cltd
std
pop
inc
das
inc
mov
adc
insb
inc
mov
inc
xor
fcoml
cmpsb
jnp
mov
outsl
iret
push
aaa
sub
jno
and
mov
lock
jecxz
cmpsb
mov
mov
jno
jle
mov
movl
leave
jo
adc
sbb
or
jae
lar
and
fidivrl
or
pop
and
incl
cmp
fidivrl
inc
movups
push
sbb
fidivrl
mov
mov
movups
cmpsl
xor
jg
push
pop
xor
lock
cltd
scas
jge
ljmp
push
shlb
int
fcomps
fcomps
fcomp
shrb
jnp
in
add
enter
rcrb
mov
lods
mov
ds
cmp
mov
pop
mov
pop
cs
testl
mov
in
sete
fs
shlb
loopne
mov
ljmp
in
pop
xlat
iret
mov
pop
jbe
in
mov
inc
into
out
gs
jg,pt
fdivrs
mov
jp
pop
shufps
or
rcr
orb
pop
sub
jb
outsb
pop
rol
mov
fiaddl
das
insb
lock
fstps
idivb
stos
pop
mov
sbb
inc
outsl
dec
and
push
ret
cmp
out
adc
push
lret
jle
clc
xlat
stos
dec
lods
mov
add
cs
and
sub
insb
fs
inc
dec
inc
dec
adc
dec
push
fisubrs
cmpl
cmpsb
test
popa
hlt
push
mov
jnp
adc
xchg
jns
out
push
cmp
xchg
mov
idivl
xor
dec
insl
xor
jbe,pn
pop
pop
cs
dec
test
pusha
mov
jge
aas
aas
scas
aas
mov
inc
adc
aas
out
sub
pop
aas
shrl
aad
aas
mov
xchg
sti
pushl
in
popf
fsubrs
inc
inc
pop
pop
sbb
sbb
add
add
and
pop
xor
adc
pop
or
callw
in
int
xlat
pop
and
push
in
inc
add
lds
mov
ret
es
mov
push
ret
adc
das
push
int3
das
andb
cmc
jnp
lock
sahf
push
dec
pop
jae
aaa
inc
aaa
pusha
pop
lahf
pop
xchg
sbb
jecxz
mov
scas
pop
inc
inc
pop
pop
xor
inc
pop
push
push
inc
push
inc
jg
je
mov
dec
lods
push
jo
push
jg
xchg
fidivl
mov
adc
pop
dec
comiss
inc
mov
mov
out
and
jmp
add
inc
cmpsl
push
addr16
xor
sti
sub
insb
cmp
push
dec
push
inc
inc
jle
pop
sbb
cmp
dec
inc
mov
mov
std
push
inc
inc
push
inc
fwait
mov
lret
mov
dec
jmp
sub
mov
push
inc
sti
sahf
add
popa
cmpb
add
out
inc
xchg
lea
bound
das
aad
push
pop
inc
jmp
sbb
shll
sub
xor
push
stos
daa
mov
incl
outsl
xor
mov
aaa
and
pushf
aas
clc
jb
sbb
fbld
inc
outsl
insb
dec
sub
adc
add
lods
xchg
inc
pop
addr16
pop
or
ja
dec
dec
dec
push
sbb
xchg
sub
mov
adc
aas
xchg
xor
call
cmpsb
jne
repnz
adc
sub
mov
inc
loopne
push
push
and
mov
mov
xor
add
push
push
mulb
pop
lea
mov
sbb
pop
in
idivb
aas
pop
and
jbe
jg
or
insl
sub
outsw
mov
push
or
orl
xchg
adc
pop
add
add
sub
call
lock
cmp
pop
sub
sub
sbb
lcall
hlt
xchg
call
loopne
ror
enter
out
sarb
mov
lods
test
pushf
nop
jns
leave
xrelease
out
sahf
out
push
dec
cmp
dec
out
sahf
xor
sbb
les
ds
add
cmp
repz
sbb
pushf
cmp
pop
or
or
in
sub
or
fwait
mov
push
adc
and
leave
leave
in
xor
addr16
das
push
xorps
cmp
jae
insl
push
and
jb
cs
orl
mov
xchg
sub
in
in
sahf
mov
loope
shll
sbb
stc
scas
popl
add
push
movsb
add
jns
and
fisttps
mov
cld
inc
add
subb
and
cmp
and
mov
iret
mov
in
call
std
dec
jle
adc
push
ficompl
push
pop
fisubrl
pop
mov
xchg
xor
fcomp
loopne
jb
jle
jo
adc
or
fildll
push
adc
dec
push
in
out
mov
jne
push
inc
cmp
repz
adc
jns
cmpsl
stc
call
mov
jns
out
push
sbb
sbb
repz
lock
js
jns
jp
cmp
jmp
xor
mov
add
and
aas
testb
cmpsl
xlat
mov
or
pop
and
divl
inc
or
sbb
xchg
std
xlat
inc
imul
dec
sti
xchg
mov
push
bound
inc
add
inc
mov
movsb
or
push
scas
jns
nop
pop
pop
outsb
aam
sbb
repz
int3
sbb
pop
repz
repz
iret
repz
push
movsb
or
iret
repz
mov
iret
repz
and
repz
or
or
pusha
cmp
repz
pop
sbb
repz
repz
sbb
cmp
repz
pop
xor
sub
sub
xor
and
out
stos
xchg
cld
inc
out
clc
ljmp
movups
jp
mov
popa
sub
mov
mov
pop
mov
out
filds
cmp
iret
repz
jg
mov
ljmp
data16
push
push
or
out
sahf
out
xor
push
out
sahf
jp
sahf
mov
repz
add
cmp
repz
xchg
mov
or
sub
jbe
jns
out
stos
scas
leave
into
out
repz
repz
iret
repz
insl
jb
cmpsb
mov
cmp
notl
mov
hlt
jns
bound
insb
dec
inc
add
in
mov
inc
aam
sahf
idivl
jge
lods
int
in
pop
mov
inc
sub
dec
push
xor
inc
push
add
addl
fdivrs
add
stos
bound
ja
mov
add
and
or
ss
pop
or
push
push
and
rorl
adc
test
push
inc
sbb
add
movsb
sub
mov
fisubs
or
incb
sarb
jle
xorb
xor
push
push
push
push
and
jg
aad
add
mov
leave
jbe
pop
add
add
iret
and
mov
and
leave
and
pop
ret
sub
pop
movsb
and
jns
aaa
sub
cmp
pop
ja
sarl
mov
repnz
das
add
push
iret
dec
insb
inc
test
les
pop
out
jp
mov
scas
add
subl
sub
dec
xchg
es
push
mov
scas
jo
or
pop
sbb
cmp
sbb
mov
leave
arpl
enter
inc
pushf
nop
psubw
and
adc
cmpl
push
and
sbb
sub
ret
inc
and
sahf
mov
sub
inc
rcrb
and
lcall
mov
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
cmp
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
divl
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
ljmp
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
incl
gs
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
cmp
pop
cmpsb
lock
mov
popa
ljmp
and
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
call
add
int3
jg
lahf
add
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
call
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
incl
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
inc
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
jmp
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
dec
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ljmp
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
jg
lcall
dec
dec
gs
std
orl
pop
ficomps
frstor
mov
jb
sub
and
loopne
add
xchg
dec
adc
push
cwtl
dec
adc
in
scas
std
add
dec
add
fwait
dec
adc
je
popf
dec
jmp
mov
dec
add
push
adc
scas
adc
push
adc
jbe
push
adc
mov
mov
pusha
mov
stos
in
je
loop
lcall
insb
xor
jns
add
cmp
cmp
std
movsl
adc
sub
sub
jg
add
mov
cmp
sub
jl
push
cmpb
push
mov
or
xchg
push
jno
or
push
adc
enter
cld
pop
scas
adc
inc
data16
xchg
loope
mov
adc
push
jbe
jns
lret
outsb
push
adc
jg
stos
adc
into
xchg
outsl
add
in
jle
sbb
adc
pop
movups
sbb
ficomps
sahf
add
popa
add
imul
push
mov
xor
data16
and
inc
mov
cmc
add
push
add
sub
xchg
dec
and
add
and
mov
loopne
cmp
add
daa
and
mov
lock
movaps
pop
inc
andl
lock
sub
mov
sub
mov
fcompl
mov
bound
inc
mov
fisubs
lods
outsb
inc
xor
dec
and
les
sub
ds
add
sysenter
daa
pop
inc
jecxz
or
or
jbe
and
scas
popa
icebp
cs
push
cmp
or
pushf
push
or
and
test
insb
int3
pop
or
inc
and
push
sbb
pop
xchg
push
jmp
sbb
jo
xchg
sub
cld
addl
sbbl
cmp
test
shlb
jae
dec
bound
cmovb
sbb
jne
push
xor
mov
js
test
xor
mov
add
test
xchg
mov
adc
loopne
adc
mov
mov
mov
pop
adc
add
push
add
or
andb
push
pop
push
inc
repz
imul
dec
js
add
push
into
clc
dec
add
into
repz
push
push
adc
outsb
outsl
nop
scas
enter
fcmove
loopne
clc
dec
or
adc
mov
daa
inc
sub
add
pop
mov
ljmp
mov
jns
out
push
mov
out
jns
shlb
jno
push
jbe
cmp
repz
js
repz
addr16
jns
ljmp
sbb
rorl
outsl
sub
xchg
and
outsl
fadds
add
add
and
jg
push
add
in
cmp
or
js
push
rcrb
or
inc
enter
fs
outsb
int
imul
add
sbb
cmp
pop
push
mov
cmp
imul
mov
adc
sahf
cmpsl
stc
cmp
add
sbb
sbb
jns
sbb
sbb
aaa
push
decl
adc
or
nop
icebp
jo
xchg
lahf
dec
add
repnz
ret
mov
jg
fmuls
xor
sbb
mov
push
lcall
xor
pop
enter
add
sbbb
nop
mov
add
pop
loopne
or
add
adc
xor
or
add
add
or
cs
or
or
das
loopne
xor
adc
pop
enter
add
push
pop
and
enter
enter
nop
mov
mov
pop
enter
loopne
rorb
dec
das
pop
enter
and
jb
pop
and
lods
pop
leave
add
add
nop
mov
mov
in
push
sbb
stc
pop
repnz
xor
test
pushf
nop
xchg
xor
mov
and
sahf
mov
push
insb
out
fwait
xlat
aas
inc
repz
add
xchg
inc
int3
negb
pop
and
test
cli
cmp
daa
in
cld
test
fdivr
repz
xchg
xor
pop
mov
push
rcrb
mov
pop
enter
or
fmuls
xchg
xor
fnstcw
call
call
push
pop
adc
pop
clc
adc
push
dec
pusha
sbb
pop
insb
notb
lock
cwtl
mov
notb
push
ds
add
push
jae
out
ljmp
jnp
jnp
mov
sub
int3
sbb
aas
xor
jns
rcrb
loop
sub
sub
sub
imul
mov
out
in
and
and
out
xchg
notb
inc
lods
push
fs
movsb
loope
adc
fdivs
rcrb
push
adc
xor
cmp
pop
xor
and
jns
pop
insb
xor
pop
les
shrb
mov
push
xor
dec
aam
and
push
push
dec
das
pop
adc
fidivrl
and
push
sbb
and
inc
fidivrs
pop
inc
push
push
jp
mov
addr16
lcall
jbe
mov
imul
js
imul
and
xor
incl
out
pop
dec
dec
pop
jb
push
push
inc
push
pop
push
inc
push
sub
push
push
inc
or
jle
cmp
cmp
dec
sbb
movsb
xor
cmp
pop
inc
mov
notb
dec
imul
cmp
mov
sub
jl
and
divl
clc
push
inc
push
inc
mov
in
add
sbb
inc
dec
inc
push
inc
inc
inc
and
shl
sub
and
insl
popa
fst
into
add
pop
jo
sub
dec
out
cmp
ss
das
das
sbb
xor
outsl
inc
insb
arpl
pop
push
add
add
lahf
adc
insl
jo
jge
shrb
cltd
cwtl
pop
clc
cli
movsl
inc
dec
pop
inc
adc
aaa
ret
mov
aaa
in
jnp
add
dec
nop
xchg
movsl
add
push
jb
push
das
aas
sbb
dec
lds
inc
out
jl
out
data16
jg
ss
jns
outsb
pop
jl
js
pusha
out
pop
xchg
inc
add
push
clc
lock
and
mov
clc
mov
insl
sti
fdivl
das
and
adc
imul
imul
lcall
pop
nopl
add
add
popf
out
add
cmp
shlb
push
push
mov
sbbw
push
out
pop
pop
repz
popa
sub
push
or
cmp
jnp
out
std
add
insb
push
pusha
add
sub
add
out
jo
xchg
clc
or
repnz
xchg
lock
mov
mov
add
pop
jg
insl
inc
cld
out
es
repnz
test
rclb
sbbb
adc
sub
add
pop
sbb
imulb
push
or
incb
pop
cmp
stc
mov
add
push
push
dec
push
repz
out
push
add
add
push
sarb
imul
push
add
fsubrl
clc
sar
sub
imul
movl
and
stos
aaa
adc
pop
int
test
mov
clc
xchg
enter
test
js
sbbl
fs
rcrb
subl
cmp
mov
mov
pop
dec
xchg
out
push
mov
testb
xchg
xchg
pop
add
js
jb
dec
sbb
dec
xchg
xchg
das
add
pop
jmp
addb
rolb
iret
popf
add
and
mov
add
clc
mov
sub
sub
or
xchg
imul
vmread
daa
mov
ret
lcall
xchg
dec
push
es
sbb
jns
mov
lock
call
js
cmpsl
inc
andb
inc
mov
loopne
add
push
fwait
enter
fmuls
jnp
cmp
jnp
ds
add
jbe
insl
outsl
mov
mov
push
fdiv
sbb
mulb
lcall
mov
cmpb
cltd
test
push
jg
in
out
pop
or
jg
inc
sbb
pop
sbb
movq
mov
insl
mov
mov
pop
divps
mov
pop
js
lea
fldz
fcompl
jle
movd
fldl
sahf
or
mov
xor
cwtl
dec
mov
mov
setle
stos
ja
and
pusha
adc
sub
mov
or
push
repz
add
out
and
dec
daa
pop
xor
cmp
cmp
add
jnp
daa
lahf
daa
out
jmp
pop
add
adc
daa
daa
aaa
or
pop
xchg
push
nop
addb
les
out
add
out
sub
cmp
insl
pop
inc
ds
int
js
or
data16
shrb
add
dec
insb
pop
aaa
lock
scas
add
xor
pop
add
addb
popa
rol
roll
push
pop
pop
in
insl
das
sbb
sbb
pop
mov
xchg
pop
pop
test
mov
fstpt
pop
adc
push
pop
scas
adc
enter
lret
push
mov
and
sbb
imull
and
adc
xor
sbb
sbb
pop
inc
ret
push
pop
bound
mov
adcb
sub
adc
or
adc
scas
iret
in
mov
cmovbe
add
mov
cmp
clc
sbb
dec
mov
js
jp
hlt
ss
inc
mov
lcall
mov
inc
pop
xlat
pushf
hlt
inc
faddl
out
fiaddl
pusha
inc
mov
xchg
shll
or
maxps
mov
add
into
mov
fistps
mov
add
mov
jle
jo
adc
fdivl
mov
mov
sub
pop
in
push
mov
sbb
lret
orl
xchg
sbb
mov
lret
popl
or
fildl
add
jmp
les
inc
ja
mov
xorl
xchg
or
jae
jg
or
cs
mov
mov
mov
cmp
or
xchg
mov
xor
or
fs
and
movsb
jae
xor
or
or
or
sti
idiv
inc
jp
jp
dec
or
sbb
out
xchg
fisubrl
mov
in
push
push
pop
xlat
pop
or
js
data16
aam
jnp
or
divb
xor
xchg
pusha
mov
push
or
sbb
xor
push
or
or
xor
or
mov
shl
add
adc
or
mov
cmpsb
inc
adc
lahf
xor
dec
push
rolb
add
bound
push
fcmovb
iret
xlat
into
mov
nop
mov
sub
ja
or
mov
xchg
sbb
jge
and
pop
test
xorl
jae
stos
or
push
mov
dec
add
out
rorb
cld
clts
pop
in
movsl
mov
sysret
pop
vmresume
or
andb
xchg
mov
jae
daa
sbb
in
pop
adc
add
movsb
dec
int3
inc
cmp
add
adc
mov
lahf
adcb
out
aas
je
andb
fadds
add
imul
or
sahf
or
inc
pusha
daa
cmpsb
es
daa
clc
es
daa
push
pop
lret
push
mulb
lock
in
pop
loopne
sbb
lock
adcb
xchg
cld
mov
xchg
addb
test
roll
inc
or
jo
xchg
pop
in
sbb
movswl
xlat
add
or
sub
adc
jo
ja
jo
pop
add
mov
pop
sti
add
or
add
int
in
pop
or
into
jg,pt
adc
mov
add
or
jg
or
fld
call
pop
addb
add
cli
sbb
and
adc
adc
jae
addb
add
dec
clc
aas
and
gs
ror
or
and
iret
add
jl
or
ljmp
in
pop
add
out
out
in
and
aad
dec
jle
push
xorl
push
rorb
mov
add
pop
nopl
or
add
dec
sti
pop
xor
add
fnstcw
sarl
push
decl
push
and
jge
xchg
data16
decl
sbb
out
push
out
inc
add
testb
scas
dec
and
negb
xchg
mov
data16
out
xorb
lods
mov
rorb
outsl
addr16
and
mov
sbb
pop
mov
mov
xor
into
lock
jg
sbb
pop
in
xchg
clc
xchg
add
push
pop
add
pop
ja
cmp
lret
xchg
faddl
jno
push
test
inc
pop
fistps
push
mov
pop
ja
mov
fiadds
lds
cmp
jno
pop
ja
pop
sbb
sahf
adcl
xchg
sarl
sub
loop
or
js
push
jg
cltd
jns
sbb
ds
ja
nop
inc
fisttps
sub
mov
movsl
pop
and
pop
rorl
aaa
clc
mov
sub
insl
fistpl
and
test
xchg
fimuls
in
int
pusha
add
ja
add
aas
negl
fcomp
out
pop
sbb
mov
xchg
insl
xor
sbb
jae
in
lods
mov
and
pop
das
insb
das
and
mov
mov
insl
dec
in
es
jg
add
aad
dec
outsl
mov
mov
addr16
dec
push
leave
mov
out
das
mov
jbe
popa
mov
outsl
popa
das
repz
dec
das
addr16
popa
das
out
add
fstl
add
outsl
popa
das
jg
sub
pop
das
arpl
jg
out
mov
jae
das
pushl
movups
sub
addl
das
lods
jg
add
mov
das
mov
test
add
pop
push
xchg
int
lea
popf
shll
or
sti
jo
push
sbb
ret
add
negb
icebp
dec
jb
xlat
loope
arpl
xor
xchg
negl
das
mov
mov
clc
pushf
and
xchg
fs
xchg
inc
test
das
jg
jbe
cwtl
rclb
pop
int
cmp
fisubs
dec
mov
jnp
mov
mov
mov
icebp
das
out
jmp
fstpt
push
or
repnz
insb
incl
sbb
dec
push
lret
jg
out
mov
pop
or
cltd
daa
or
and
and
cmp
xchg
cs
in
add
xchg
aaa
aaa
inc
push
push
dec
ds
push
popa
movsb
xchg
outsb
pop
sbb
push
or
dec
xchg
and
iret
roll
dec
or
or
daa
or
jns
inc
jo,pt
out
outsl
pop
arpl
xchg
pop
mov
sub
cmpb
dec
mov
ret
dec
jbe
pop
orb
fs
sub
invd
orb
push
xchg
je
push
in
movsl
popa
andb
sbb
xchg
out
fildll
xchg
je
jb
or
outsb
loop
dec
mov
xchg
xor
xchg
sub
cmp
repz
adc
insl
mov
fbld
jae
fcoms
fs
mov
repz
push
inc
dec
or
add
outsb
inc
inc
bound
stos
mov
and
out
xor
xchg
arpl
rorb
stos
jecxz
add
or
mov
dec
push
jbe
cli
js
xor
ss
mov
xor
xchg
insl
jnp
jmp
xchg
aas
ss
ficomps
aaa
dec
add
outsb
cmc
inc
or
sti
aaa
add
das
jnp
fidivs
and
out
sub
mov
out
pop
add
mov
nop
xchg
adc
adc
in
add
push
or
jge,pt
dec
fwait
out
adc
lods
sub
sub
sub
dec
dec
pushf
pop
pop
push
bound
push
push
push
popf
ret
rcrb
push
push
lret
dec
inc
cld
jb
and
add
pop
gs
xchg
xchg
and
leave
and
inc
int
mov
pop
pop
rclb
enter
cmpsl
fcoml
push
mov
insb
js
inc
push
inc
idiv
add
and
pop
pop
add
push
adc
out
mov
jmp
or
mov
mov
sbb
xchg
add
mov
inc
jbe
pop
incb
and
cltd
mov
add
stc
add
mov
mov
pop
cld
xchg
adc
outsb
js
mov
dec
movsl
dec
pushl
xor
sub
sub
pop
cmpsl
mov
popa
or
adc
out
add
xchg
add
or
in
push
pop
outsl
sub
mov
jo
mov
iret
inc
ss
jo
xlat
xchg
lahf
insb
aad
and
xor
shl
jo
mov
pop
fisttpll
fisttpll
and
pop
cmp
js
fists
and
jbe
add
or
das
loopne
sbbl
test
add
xlat
sub
add
mov
into
inc
dec
iret
xor
testb
inc
jmp
xchg
dec
mov
mov
and
adc
add
test
outsb
dec
and
xor
dec
fisttpl
jle
xchg
jne,pt
mov
push
push
dec
dec
lret
loopne
dec
ret
jae
cmpsl
add
testl
hlt
lods
bound
ds
mov
inc
add
jae
js
movsl
xlat
insb
push
pop
jo
cmp
fcoms
aas
jbe
pop
jb
mull
imul
mov
lret
xchg
dec
ljmp
testl
out
pop
dec
add
mov
dec
dec
leave
dec
mov
push
imul
nop
outsb
push
testl
jbe
jg
gs
or
lcall
pop
add
inc
mov
sti
in
sub
pop
sbbb
fimull
mov
push
pop
loop
popa
cmpsb
arpl
pop
ljmp
movsl
push
push
push
cmpsb
das
push
pop
out
jle
push
push
aam
lock
das
and
repnz
sbb
pop
idiv
das
pusha
add
and
mov
cltd
and
push
dec
inc
popa
push
push
out
xchg
cmpsb
outsl
inc
imul
jmp
maxps
mov
stos
data16
or
sysret
fdivrs
pop
xchg
cltd
or
add
add
dec
sbb
jns
inc
push
cmp
mov
mov
ret
fisubrl
or
lret
pop
mov
fisttpl
mov
andb
jnp
iret
push
lret
movsl
sub
nop
lret
add
sarl
addr16
push
pop
test
push
mov
dec
push
cmp
or
ds
fists
or
dec
jo
inc
shll
xor
je
pop
inc
inc
sti
mov
inc
inc
stos
add
cmp
outsb
jg
lahf
sub
cmp
jmp
ret
mov
or
xchg
mov
iret
add
mov
and
aad
pop
test
int
or
mov
and
inc
push
push
sbb
call
in
push
inc
add
push
lock
mov
insl
mov
iret
imul
cld
outsl
dec
xor
push
lods
sub
fbstp
push
sahf
and
xor
xchg
mov
ficomps
lock
mov
adc
push
and
cmp
pop
push
mov
addl
ret
repz
mov
mov
aas
adc
mov
and
jle
daa
adc
inc
ds
adc
add
lcall
andb
icebp
outsl
icebp
out
insl
packsswb
push
das
or
testl
das
xlat
add
fistps
jno
push
adc
imul
dec
sbb
inc
orb
enter
pop
push
outsl
dec
jb
push
pusha
xchg
xchg
addr16
jbe
mov
jmp
mov
push
push
outsl
lcall
aaa
xor
mov
lods
bound
bound
push
xchg
push
or
and
ljmp
jle
cs
mov
mov
cli
testb
adcb
mov
aaa
mov
insb
es
jb
leave
test
cwtl
lahf
outsl
push
dec
sarl
mov
xchg
lahf
mov
jbe
mov
push
xchg
inc
xchg
and
aas
pop
xchg
in
pop
xchg
inc
loope
cs
test
dec
dec
or
or
cli
mov
mov
xor
and
mov
add
or
pop
cld
pop
dec
sbb
push
mov
loope
pop
out
adc
inc
xchg
test
jbe
jbe
inc
fisttpl
mov
mov
imul
shll
mov
fs
inc
lock
cli
push
arpl
jg
mov
mov
outsb
add
add
jbe
mov
outsb
icebp
cmpsl
cmp
aaa
shll
into
push
insb
movsl
cmpsb
in
or
dec
and
test
call
out
push
loopne
pop
push
lock
dec
sub
push
ret
loop
xor
iret
test
jg
mov
adc
push
cli
push
sbb
add
or
bound
loope
mov
sti
jl
jle
das
push
add
cmpsb
ss
sbb
lea
jbe
sub
data16
sbb
add
lea
sahf
fsubs
outsb
xchg
mov
xchg
in
dec
cmpsb
out
mov
arpl
es
sahf
dec
gs
cmpb
ficoml
pop
pop
sbb
xor
mov
mov
pop
dec
pop
cmp
push
sub
arpl
ficompl
movsl
fxch
jp
dec
jp
cmpsl
sub
cmp
shll
pop
addb
lret
cmp
das
push
cmpb
pop
aad
xor
aaa
ja
mov
nop
xchg
pop
sbb
jl
or
pop
and
push
in
lret
mov
pop
fs
adc
inc
das
mov
push
call
cwtl
push
stos
mov
in
mov
jbe
adc
clc
jbe
push
and
leave
jle
mov
incl
sbbb
mov
mov
dec
fildl
mov
int
repz
xchg
push
push
bound
sarb
data16
xchg
das
jle
xor
popa
jae
orl
jle
fimuls
fadds
in
xor
xchg
lcall
pop
cmp
push
out
cmpsb
cmpb
ret
stos
rcrb
jl
mov
dec
jb
addr16
ja
cs
imul
cmpsl
mov
mov
jo
inc
sbb
and
pop
fstps
or
push
or
push
dec
hlt
xchg
xchg
je
test
imul
dec
bswap
fmull
xchg
sbb
dec
lahf
scas
mov
es
and
nop
jmp
xchg
loopne
dec
add
xor
mov
or
das
adc
stc
sarl
pop
addr16
add
mulb
mov
jae
lea
pop
das
aam
rcr
pop
outsb
cwtl
jp
jb
adc
cmp
sbb
int
xchg
addr16
xchg
mov
mov
push
push
out
lea
add
es
sub
inc
and
js
jbe
lcall
fsubp
outsb
xchg
pop
jp
lret
hlt
stc
pop
xor
mov
mov
mov
xor
or
push
push
dec
mov
dec
pop
pop
pop
cltd
push
loopne
jo
cltd
add
data16
push
cmp
cmp
sbb
fneni(8087
mov
push
pop
jne
pop
in
push
sti
pop
jecxz
arpl
arpl
nop
mov
xor
lahf
push
pop
rorb
jns
daa
mov
sbb
dec
xchg
sbb
mov
mov
mov
das
xchg
arpl
pop
aaa
negl
sbb
and
nop
cmp
cmp
add
ja
andb
add
sub
jmp
push
xchg
test
rcrb
pop
popa
lock
addr16
outsl
push
add
sub
xor
das
mov
mov
xor
and
cs
aaa
cmp
jns
gs
push
xor
fnstsw
add
and
inc
add
les
dec
push
xor
mov
push
addb
lret
mov
pop
cmp
sbb
ret
adc
and
aas
out
push
cli
pop
cmp
jl
pusha
in
lahf
pop
xor
xor
cmp
pop
insb
js
cwtl
sahf
adc
cmp
sub
pop
movsl
bound
pop
seto
out
xor
fisttpll
rorl
lgdtl
lea
xchg
jnp
out
jbe
or
xchg
out
jp
mov
fiadds
scas
sbb
and
or
push
xor
pop
add
subl
ds
pushl
and
js
fisubl
xor
jmp
fmuls
mov
and
jmp
add
jge
aam
inc
inc
mov
icebp
xchg
inc
mov
jb
xchg
add
add
or
sbb
mov
sub
and
sbb
fldz
call
sbb
addr16
inc
out
ja
mov
daa
xchg
xchg
inc
add
push
lcall
daa
xor
fcmovb
adc
pop
call
push
add
lidtl
fwait
add
or
out
fldenv
icebp
fwait
inc
xchg
mov
xor
outsl
inc
jl
cmp
fucom
push
xor
or
or
pop
outsl
fstl
mov
mov
lea
divl
inc
dec
arpl
jo
imul
in
mov
mov
data16
mov
push
in
sbb
or
push
push
xor
mov
xchg
xchg
dec
and
jne
inc
jbe
nop
add
clc
inc
cmp
add
cs
std
mov
xchg
jbe
jg
sub
imul
shlb
push
mov
xchg
loop
lock
pop
jbe
cs
dec
push
jg
movsb
testb
into
das
add
mov
push
jne
popa
jp
arpl
sub
add
jb
jne
test
cmp
xor
popa
xchg
add
mov
add
jbe
inc
inc
insb
pop
pop
adc
rorl
inc
inc
fbld
loop
jo
daa
xor
xor
xor
pushl
aam
loopne
ljmp
xor
xor
xor
xor
xor
xor
pushl
inc
xor
jge
xchg
cltd
xor
xor
xor
xor
xor
xor
inc
xor
xor
xor
pushl
cmpsl
aaa
adc
ds
ds
ds
aas
and
jne
aas
aas
incl
dec
mov
aaa
xor
cmpsl
xor
xor
xor
xor
incl
xor
xor
push
xor
xor
xor
xor
xor
dec
aaa
cmpb
out
jg
clc
xchg
aam
sbb
cwtl
xor
cli
pushl
scas
xor
xor
xor
enter
outsl
push
jbe
pop
aaa
push
pushf
aaa
lods
aaa
fnstenv
jmp
fistpl
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
jns
cmp
call
cmp
cmp
fdivrs
in
out
cmp
cmp
cmp
jae
mov
mov
int3
cmp
cmp
decl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pushf
cmp
lods
popl
sbb
add
pushl
shlb
fbstp
jmp
xor
push
xor
fcomip
call
xor
xor
xor
xor
xor
xor
xor
shll
xor
sub
ss
ss
in
ss
ss
pushl
cs
inc
aaa
outsl
aaa
xchg
xchg
aaa
mov
aaa
lds
iret
aaa
jmp
cmc
lcall
cwtl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
movsl
cmp
cmp
cmp
cmp
cmp
mov
or
cmp
cmp
adc
pop
jg
cmp
cmp
cmp
cmp
cmp
cmp
jle
or
and
cmp
inc
ds
call
jle
mov
sahf
ds
loope,pt
jmp
and
aas
cmc
aas
dec
cld
add
xor
ja
mov
fidivl
jo
cmpsb
sub
ds
call
outsl
xor
iret
xor
xor
xor
nop
xor
xor
xor
out
bound
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pushl
insb
ss
ss
sahf
out
aaa
and
sahf
cmp
cmp
jg
fs
xchg
pushf
cmp
cmp
cmpsl
mov
mov
adc
jmpw
cmp
ret
cmp
adc
ds
aas
data16
jns
mov
lahf
aas
mov
hlt
ret
sete
ret
add
cmp
cmp
pop
cmp
mov
pushl
scas
xor
daa
xor
xor
jl
xchg
divb
pop
xor
jns
xchg
xor
xor
pushl
and
inc
xor
movsb
xor
xor
xor
xor
xor
lahf
xor
xor
xor
xor
xor
lock
xor
loopne
data16
sarl
fidivrs
mov
arpl
outsb
cmp
cmp
cmp
cmp
cmp
cmp
ds
idiv
inc
aas
dec
aas
cwtl
aas
mov
aas
stc
push
xchg
std
lcall
xor
mov
xor
xor
xor
xor
push
and
das
ss
ss
inc
aaa
pusha
sbb
outsb
aaa
cwtl
sub
cmp
cmp
ret
inc
mov
xchg
cmp
cmp
fdivrp
pushl
jnp
nop
cmp
cmp
cmp
cmp
mov
pop
mov
jb
xchg
xor
pop
mov
cmp
cmp
cmp
pop
cmp
cltd
xor
xor
adc
sub
or
cmp
ss
mov
mov
cmp
mov
cmp
cmp
jmp
cmp
ljmp
cmp
clc
lock
mov
aas
pop
aas
jbe
mov
js
loope
or
xor
xor
inc
push
aas
pop
ljmp
sub
mov
cmp
cmp
pop
sbb
cmp
mov
rcl
lcall
mov
cmp
cmp
cmp
sub
mov
pop
cmp
aas
mov
sbb
cmp
cmp
cmp
cmp
jb,pt
cmp
cmp
xor
clc
inc
pop
adc
addb
xor
sar
inc
jbe
jge
in
cmp
cmp
jecxz
cld
and
pop
push
lock
push
push
mov
rorb
push
xor
mov
xor
xor
xor
xchg
sbb
xor
decl
mov
xor
xor
cmp
divb
aaa
cmpl
sub
jecxz
cmp
jp
cmp
or
ljmp
mov
sub
dec
xor
xor
jl
push
xor
xor
aas
jb
xor
xor
stc
xor
imul
aaa
das
cmp
cmp
in
dec
lock
cmp
cmp
xor
inc
cmp
cmp
cmp
orl
ds
ds
aas
mov
nop
pop
lock
mov
std
pop
cld
icebp
xor
xor
xor
xor
ss
aaa
adc
and
cmp
nop
cmp
cmp
insl
cmp
jmp
xor
dec
xchg
jl
cmp
cmp
aas
bound
cmp
cmp
cmp
cmp
push
clc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
pop
hlt
cmp
cmp
data16
cmp
cmp
mov
cmp
adc
sbb
sub
xor
xor
jmp
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
mov
aas
pop
aas
pusha
aas
fs
push
fbld
sbb
aas
cmpl
aas
test
mov
push
testb
pushl
and
aaa
xor
ja
test
xchg
xor
xor
xor
xor
mov
inc
into
adc
jb
xor
xor
mov
je
js
cld
or
xlat
xor
std
aaa
pop
cmp
cmp
cmp
pop
icebp
pop
lret
fwait
cmp
cmp
cmp
xchg
cmp
cmp
pushf
cmp
inc
cmp
cmp
scas
mov
ds
scas
add
arpl
add
xor
xor
xor
mov
int
hlt
xor
daa
adc
xor
cmp
shlb
out
ss
aaa
jno
pushf
fisubl
mov
and
adc
jp
jecxz
mov
scas
add
or
cmp
inc
and
aaa
mov
jbe
cmp
insb
cmp
js
jl
cmpb
dec
sbb
jg
dec
xor
xor
xor
repnz
incl
arpl
jecxz
cld
xor
push
ss
shll
aaa
sub
push
aaa
mov
adc
pop
xchg
data16
cmp
cmp
jg
jg
dec
arpl
jae
xchg
ds
ds
aas
xor
ds
cld
ret
aas
push
cli
mov
loop
ljmp
stc
into
add
and
dec
xor
xor
xor
xor
xor
out
xor
push
sub
push
xor
xor
xor
ss
cli
ss
jg
test
xchg
aaa
cmpsb
out
leave
aaa
add
adc
iret
cmp
adc
incl
cmpsb
jecxz
idivl
cmp
into
push
mov
mov
ss
add
inc
xor
ss
mov
inc
cmp
cmp
cmp
pop
jecxz
mov
mov
add
ja
jbe
into
xor
ret
out
mov
dec
cmp
insl
cmp
cmpl
cmp
fwait
cmp
scas
cmp
mov
cmp
fdivrs
call
into
add
sahf
push
jo
mov
push
es
jmp
incl
dec
ds
ds
ds
cs
addb
inc
sub
add
imul
fldcw
retw
repz
pusha
nop
add
push
xor
adc
lcall
xor
xor
push
mov
xor
xor
xor
xor
jg
sub
xor
fidivs
out
pushl
push
aaa
arpl
int
or
scas
ret
adc
cmp
inc
cmp
push
or
aas
std
cmp
jb
jl
cltd
cmp
cmp
and
fwait
adc
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
adc
jbe
cmp
dec
dec
push
stos
mov
data16
jne
jp
jg
test
mov
clc
lcall
cmp
cmp
cmp
cmp
loopne,pn
pop
mov
idivb
std
cmp
or
hlt
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
push
cmp
lcall
pop
cmp
cmp
jbe
cmpb
cmp
push
cld
ja
dec
or
cmp
add
loop
cmp
push
fstpt
loop
into
pop
lods
push
or
cmp
mov
cmp
sub
cmp
stos
and
cmp
sub
dec
cmp
ss
cmp
cmp
cmp
subl
cmp
cmp
cmp
cmp
cmp
cmp
stos
cmpsb
cmpsl
inc
cmp
push
mov
mov
ret
sbb
mov
cmpsb
xor
lahf
cmpsb
lods
ds
push
add
push
daa
and
xchg
push
xor
shll
xor
xor
inc
xchg
jle
xor
xor
nop
xor
xor
cs
xor
xor
sti
jg
pop
pop
shlb
cmp
cmp
sahf
aad
xor
jo
jg
xchg
xor
xor
xor
jg
data16
dec
aaa
repz
adc
lea
mov
or
icebp
adc
cmp
fcomip
jg
ret
repz
cmp
cmc
out
ds
jecxz
out
push
loope
aas
in
ds
adc
das
dec
adc
xchg
xor
xor
xor
outsb
xchg
hlt
xor
push
inc
inc
xor
hlt
inc
push
ret
ja
mov
mov
jb
xchg
xor
int
out
xor
test
jmp
mov
xor
xor
cmp
pop
xor
aaa
ss
mov
arpl
jns
movsl
ss
pop
aaa
sub
pop
aaa
pop
push
test
lcall
cmp
cmp
cmp
and
test
filds
jne
les
or
xor
xor
xor
xor
call
or
xor
add
movb
pop
lret
adc
aaa
loope
dec
shlb
ss
sub
xor
xor
push
call
cmp
inc
ss
ss
ss
into
mov
incl
sbbl
ss
js
jl
adc
test
mov
mov
nop
ss
ss
ss
mov
lods
pop
jmp
pop
jo
ss
cs
and
cmp
into
mov
aaa
cld
sbb
cmp
cmp
or
add
js
lods
xor
lds
mov
lock
mov
mov
push
xor
outsb
adc
jno
mov
push
mov
mov
aaa
popa
cli
ret
cli
mov
aaa
icebp
aaa
cld
repnz
sbb
cmp
out
cmp
loop
cli
mov
loope
sbb
sbb
cmc
cmc
or
cmpl
jg
jl
test
mov
sarb
ret
push
or
push
cwtl
lahf
xchg
mov
jmp
call
jg
mov
xor
xor
xor
xor
xor
xor
inc
push
inc
pushl
sahf
xor
out
xor
icebp
pop
jmp
aaa
jg
fnsave
sub
mov
cmp
pop
jge
imul
inc
rcll
cmpsl
out
pop
clc
aas
test
into
cmp
cmp
cmp
mov
in
or
or
jae
push
aas
sub
pop
repz
rolb
xor
adc
sbb
popa
mov
xor
fwait
jno
xchg
mov
nop
sub
xor
inc
xor
xor
xor
xor
xor
xor
xor
mov
sbb
and
and
sub
sub
xor
mov
aaa
cmp
sbb
pop
add
cmpsl
mov
scas
inc
cmp
test
mov
aad
push
nop
cmp
sarb
cmp
sarb
fdivrs
jmp
cmp
outsl
cmp
mov
ds
rolb
fdivrs
fdivrl
loopne
in
call
pop
popa
cmp
ds
ds
fdivrl
or
or
pop
js
adc
adc
sbb
sbb
and
sub
pop
or
sbb
mov
rolb
and
fdivl
jb
into
xor
xor
out
xor
xor
cld
xor
jb
or
stos
call
cmp
pusha
cmp
lods
cmp
cmp
cld
pop
mov
cmp
mov
ds
nop
and
ds
mov
or
js
scas
pop
loopne
ljmp
mov
lcall
cmp
cs
cmp
cmp
cmp
cmp
cmp
cmp
mov
inc
adc
outsb
cmp
mov
ret
inc
sar
cmp
adcb
dec
mov
xor
push
xor
mov
inc
aad
sbb
mov
pushf
xor
xor
xor
xor
inc
and
xor
xor
xor
fmulp
outsb
je
push
std
shlb
xor
bound
xor
xor
ss
clc
push
add
pop
or
aaa
decb
dec
aaa
shlb
aam
fdivs
fdivl
loopne
in
call
aaa
hlt
aaa
clc
add
add
hlt
cmp
or
adc
mov
mov
cmp
test
mov
cmp
cmp
push
loopne
or
inc
cmp
cmp
pop
mov
std
cmp
sahf
out
add
sub
xor
fimull
adc
lds
add
or
aas
les
or
xor
test
mov
jecxz
ljmp
cld
xor
into
xor
xor
xor
mov
pop
imul
cmpsl
stos
scas
xchg
sbb
jmp
pop
sub
cmp
cmp
ss
cmp
aas
mov
and
cmpsb
cmp
push
aas
insl
aas
repnz
aas
xchg
jp
jbe
add
stos
xchg
data16
stos
xor
arpl
lcall
jl
xor
xor
mov
test
fnstsw
or
sbb
adc
and
dec
ret
lock
dec
push
cmp
cmp
push
cmp
scas
scas
sarb
ds
push
mov
aam
push
jp
hlt
xor
xor
add
mov
testb
cmp
inc
cmp
movsb
pop
subb
cmp
cmp
cmp
sbb
scas
into
push
cmp
mov
in
push
cmp
cmp
cmp
out
cmp
sarl
and
mov
mov
stos
xor
xor
push
frstor
dec
inc
aaa
test
lods
ds
add
cmp
mov
hlt
xor
xor
xor
sub
jbe
xor
aaa
pop
aaa
jnp
subb
aaa
xlat
adc
fidivrs
inc
cmp
xchg
out
les
into
ljmp
cmp
imulb
cmp
testb
xor
inc
cmp
mov
cmp
scas
cmp
clc
jmp
sub
cmpl
sahf
adc
and
add
sub
inc
xor
cli
push
xor
mov
xor
nop
out
lods
ss
jp
xorl
jge,pn
mov
cmp
cmp
test
les
lea
leave
cmpsb
xorl
or
inc
pop
mov
lods
pop
movsb
cmpsl
cs
mov
ret
cmp
cmp
pop
stos
jno
cmp
cmp
inc
pop
and
aad
stos
jp
cmp
mov
cmpsb
sarl
ds
aas
pop
aas
xchg
daa
push
pop
jae
clc
cs
push
xor
xor
inc
pop
aaa
popf
push
lock
bound
cmp
xor
xor
cmp
cmp
dec
jne
mov
jae
xor
mov
test
subl
adc
xchg
mov
xchg
out
pusha
pop
cs
outsl
jp
xor
mov
xor
cld
push
call
out
movsb
and
mov
lock
les
rclb
xor
shrl
ds
ss
aaa
push
cmp
cmp
cmp
jno
sub
lea
lret
mov
aas
repnz
jno
add
adc
ja
jo
cli
rorl
push
in
xor
aad
ficompl
fimuls
push
xor
xor
add
scas
pop
xor
sub
jmp
aaa
inc
cmp
cmp
jmp
push
daa
jbe
push
push
cmp
mov
mov
shll
es
inc
orl
xchg
fnstcw
out
ds
jb
add
aas
leave
out
add
movsl
pop
mov
fidivs
call
call
xchg
xor
xor
push
and
sar
xor
xor
xor
dec
xor
sub
movsb
out
into
xor
xor
inc
pop
loope
push
gs
aaa
inc
jle
dec
jecxz
add
pop
mov
ret
aaa
ds
ds
fistpll
xor
xchg
xor
loop
clc
cwtl
xor
sub
or
push
cmpsl
jg
ret
pushl
mov
nop
aaa
add
movsbl
cmp
lret
dec
cmp
pop
mov
pop
sarb
adc
cpuid
cltd
or
push
or
loope
scas
jl
scas
shlb
aam
out
test
xor
xor
scas
test
lods
xor
ret
pop
xor
xor
mov
xor
xor
xor
xor
push
add
sbb
mov
push
loope
sbb
movsl
sar
subb
cmp
cmp
xchg
cmp
cmp
sbb
cmc
aas
mov
cmp
movsl
push
jb
fwait
cmp
fidivrl
mov
cmp
xor
xor
xor
xor
xor
sub
bound
outsb
xchg
xchg
mov
push
jecxz
cmp
cmpsb
sarb
aam
stos
cmp
sub
jle
add
loop
push
js
add
add
and
pop
xor
lds
lock
outsl
mov
mov
xor
xor
xor
cmp
xor
into
xor
xor
icebp
ss
test
std
outsl
jb
insb
aaa
jo
je
js
rolb
hlt
dec
loopne
filds
push
xor
inc
xor
test
xchg
mov
out
xor
es
test
xor
cmp
push
xor
push
aaa
jne
sbb
fwait
aaa
lahf
or
stos
aaa
scas
push
mov
jecxz
cmp
mov
and
sbb
decl
xchg
xor
xor
mov
xor
cmp
pop
cmp
dec
filds
cmp
cmp
js
pop
mov
mov
cmp
cmp
leave
or
dec
ret
xor
xor
and
mov
ss
xchg
cmp
bound
fs
fnstenv
pop
mov
mov
das
push
jmp
cmpsb
les
xor
xor
mov
xor
fs
fidivrs
ja
inc
sahf
jbe
mov
je
dec
cmp
jg
ds
pop
cmp
adc
jo,pt
mov
ret
cmp
pop
add
adc
push
aas
pop
aas
mov
mov
xor
mov
pop
xor
jp
or
mov
ss
mov
and
cmp
aam
call
pop
cmp
ds
repnz
ds
add
jmp
xor
test
xor
rolb
xor
xor
xchg
add
xor
fwait
sbb
bound
or
sub
fwait
cmp
jbe
cmp
hlt
test
cmp
cmp
lcall
outsb
xor
xor
mov
sahf
lret
test
aas
sbb
imul
aas
push
add
cmp
je
mov
push
cmp
push
cmpsb
bound
pusha
repnz
cmp
sub
arpl
out
addr16
xchg
sbb
mov
sub
mov
xor
push
imul
test
push
cmp
sahf
mov
andl
das
adc
ds
cmpsb
aas
xchg
mov
add
hlt
xor
in
and
test
add
push
mov
xor
push
inc
repnz
add
loope
inc
xchg
aaa
mov
dec
clc
sub
cmovle
cmp
mov
add
xchg
cli
dec
aas
gs
xchg
add
fwait
xchg
test
loopne
stos
jb
aas
iret
ja
dec
xor
mov
mov
lret
pop
sub
xor
xor
xor
cmp
xor
xor
xor
cmp
mov
xor
pop
lock
add
outsb
mov
cmp
jle
cmp
pop
lods
bound
mov
gs
push
out
cmpb
xor
jo
sub
push
xor
jmp
sub
xor
cmp
lds
aaa
add
mov
cmp
xchg
aas
movb
jecxz
xchg
nop
mov
xor
xor
pop
mov
jo
xchg
xor
cmp
inc
cmp
mov
push
cmp
cmp
mov
orb
jmp
add
cmp
dec
stos
cmpl
outsb
sub
mov
xor
imul
xor
dec
pop
push
or
lcall
jae
fstpl
stos
push
lock
movsl
cmp
mov
push
scas
push
mov
add
cmp
sub
cmp
cmp
cmp
out
movb
push
lcall
loop
js
hlt
cmp
inc
cmp
pop
cmp
sbb
scas
ljmp
aam
inc
and
push
xchg
cs
add
inc
lods
ds
jbe
mov
xchg
stos
adc
dec
mov
xor
jg
loopne
cli
pop
xor
clc
xor
xor
dec
scas
cli
popf
xor
xor
inc
xor
xor
xor
and
xor
jo
pushl
xor
pusha
ss
push
mov
call
pop
loope
or
inc
mov
jno
call
pop
push
mov
in
cmp
adc
fsubs
push
stos
mov
pop
mov
ds
inc
aas
jne
sti
arpl
sbbl
daa
mov
popf
xor
xor
xor
inc
test
inc
fwait
out
cmp
stos
lock
sub
idiv
and
push
js
add
fisubl
adc
sbb
xor
aas
std
cmpsb
cs
xor
xor
xor
xchg
in
xor
xor
add
mov
jo
and
mov
aaa
jb
scas
aam
xchg
mov
in
call
sub
add
add
and
daa
inc
adcb
cmp
push
test
inc
mov
mov
push
sub
inc
xchg
xchg
or
stc
data16
test
cltd
sahf
lret
push
add
and
dec
ds
leave
mov
ds
xchg
ds
jbe
push
aaa
mov
aas
outsl
dec
cltd
aas
mov
xor
cmp
and
xchg
push
mov
xor
dec
pop
push
mov
jne
xor
filds
sub
jae
xor
xor
push
in
xor
xor
mov
dec
xor
pop
xor
xor
cmp
cli
xor
push
dec
loop
ss
xchg
inc
out
ss
test
sbb
adc
pop
xor
dec
mov
js
ja
mov
repnz
ja
add
cmpsb
loop
icebp
inc
xchg
sti
cmp
cmp
adc
cmp
test
dec
scas
lret
fisttpl
add
ss
jno
mov
fildll
aaa
cmp
repnz
cmp
fstl
int
repnz
adc
mov
xor
mov
leave
or
loope
stc
xor
xor
xor
pop
xor
mov
mov
iret
add
push
lret
xor
xchg
inc
pop
or
xor
sbb
sub
data16
push
mov
std
fildll
cltd
cmp
cmp
int3
cmp
stos
sti
xor
rolb
add
lcall
scas
push
sub
fidivrl
ds
insl
aas
xchg
lea
cmp
cmp
cs
push
adc
and
inc
inc
xchg
sbbb
push
popf
mov
add
rolb
pop
repnz
xor
popa
mov
mov
test
clc
shll
fidivs
jmp
or
test
clc
jp
inc
sahf
pop
push
js
add
jne
xchg
scas
lods
jb
cmp
cmp
pop
jne
cmp
xchg
push
lock
cmp
orb
cmp
ffree
scas
and
adc
adc
sbb
sub
sub
add
push
scas
xor
cmp
cmp
inc
cmp
inc
pop
aad
add
negb
adc
mov
jae,pt
cli
movb
lcall
xor
mov
ficompl
clc
push
xor
jl
xorb
xor
xor
cmpsb
jge
mov
cli
stc
cmp
jae
inc
xor
sbb
rolb
pop
out
mov
dec
sarl
adc
push
xor
mov
jne,pt
mov
mov
das
cli
aas
inc
add
dec
xor
outsb
xor
push
xor
xchg
mov
xor
mov
and
xor
xor
jmp
jne
lock
dec
xor
xchg
aam
add
fdivr
lcall
mov
pop
mov
cmpsb
sbb
cs
mov
and
push
dec
jge
lcall
cmp
sbbb
cmp
sub
arpl
test
cld
movb
jo
xchg
xor
std
pop
js
call
xor
sbb
or
loopne
pop
push
adc
es
or
cmp
loop
stos
cmp
popf
mov
add
fisttpll
aam
jg
jo
stos
mov
and
mov
xor
loop
pop
jge
mov
cmp
int3
jb
cmp
divb
rcrb
mov
jge
sub
dec
xor
or
lock
loopne
cmp
pop
or
cmp
mov
int
outsb
jl
lcall
mov
mov
xchg
dec
xlat
add
xchg
jg
mov
xor
xor
outsb
pop
adc
out
push
xchg
or
adc
sub
mov
push
cmp
cmp
cmp
cmp
adc
push
xchg
inc
and
addb
push
mov
push
cmp
ret
and
sub
mov
insb
cmp
push
add
or
les
enter
shlb
imul
outsl
jle
mov
shlb
mov
push
popa
xor
ficomps
outsb
xor
mov
sub
aaa
cmp
cmp
popf
and
aas
xor
outsb
push
inc
jg
testb
push
cmp
sti
cmp
or
cmp
jle
inc
push
lods
cmp
cmp
jle
out
add
adc
mov
push
loope
mov
xor
xor
jge
mov
xor
xor
push
insl
cmp
add
xor
cmp
les
cmp
sarb
aam
pop
ds
inc
insb
dec
loopne
cwtl
bound
or
outsb
int
in
xor
rcrl
aaa
mov
rorb
xchg
cmp
add
cmp
pop
mov
cwtl
xor
cs
mov
mov
sub
add
pop
cmp
jmp
das
xchg
gs
ss
add
pop
push
sbb
xor
incl
mov
xor
xor
xor
imull
popf
cmp
jle
test
inc
movsl
xlat
xchg
jbe
push
test
jbe
add
adc
xor
adc
stos
ljmp
or
sub
xor
cmp
jg
push
add
aam
es
push
ret
stos
xor
add
push
sbb
incb
mov
sub
inc
aaa
jbe
inc
add
inc
xchg
push
shll
repnz
push
cmp
lret
push
popf
jb
push
push
sarl
pop
xchg
mov
cmp
in
jbe
inc
test
aas
push
xchg
cld
das
test
push
xchg
add
mov
add
cmpsb
xor
push
add
rcr
je
adc
inc
push
gs
sub
mov
lret
ss
aaa
push
sbb
lahf
mov
stos
mov
add
lahf
call
fiadds
andb
shlb
lock
loopne
lods
imull
sbb
inc
xor
clc
mov
dec
ret
pop
jbe
push
in
cmp
jo
jo
push
push
cmc
test
inc
hlt
aaa
add
xchg
or
dec
adc
xor
ds
xor
or
xor
ja
jle
test
dec
cmpsb
push
push
es
mov
imul
lret
adc
dec
sbb
fistpll
pop
sub
sbb
xor
cmp
aas
inc
mov
jb
xor
out
or
sbb
push
xor
inc
rol
add
divb
push
aaa
ljmp
sub
jg
sbb
or
jg,pt
add
mulb
cmpb
outsb
je
outsl
sarb
mov
cmp
mov
dec
adc
jbe
clc
sahf
cmp
mov
sub
jo
js
xchg
shrb
jl
dec
movsb
xor
arpl
js
inc
sbb
and
xorb
shlb
cli
sbb
xor
push
aas
push
xor
sbb
jle
stos
push
aaa
loop
sbb
pop
cmp
leave
fimull
cmpl
enter
push
mov
cmp
cmp
add
cmp
cmp
cmp
adc
cmp
cmp
xor
lcall
lcall
jbe
xchg
cmp
add
mov
cmp
rcrb
cmpsl
push
push
shll
jo
cs
adc
mov
mov
xlat
cmc
xor
xor
xor
dec
xor
push
add
mov
cmp
cli
add
cmp
fdivs
fdivl
loopne
mov
aad
call
inc
jp
out
push
cs
aaa
dec
fimuls
cmp
cmp
rcrl
sub
das
mov
push
add
cmpsb
fdivrl
pop
cmp
cmp
xchg
mov
dec
dec
xchg
mov
cmp
push
ds
push
pusha
sub
aas
popa
scas
fcoml
subl
mov
push
repz
jp
test
mov
int3
movsl
dec
mov
mov
push
cmpb
xor
jae
jg
movsl
outsl
xlat
cmpsl
xor
xor
mov
push
inc
xchg
push
cmp
inc
mov
mov
shlb
bound
push
add
inc
or
cmp
pop
fmull
sbb
or
rcr
push
xchg
cmp
cmp
lret
mov
pop
or
cmp
xor
pop
xchg
ljmp
add
out
mov
mov
stc
cmp
add
sub
xor
adc
les
jmp
addr16
jae
xchg
aas
mov
adc
lcall
nop
push
dec
pop
loopne
repnz
mov
ja
mov
test
sbb
inc
cmp
insb
out
xchg
mov
dec
xor
imulb
add
lods
inc
cmp
mov
sub
dec
xor
sahf
icebp
inc
adc
icebp
xor
xor
mov
adc
mov
adc
push
add
scas
lahf
rorl
fsubl
push
cs
inc
pop
pushf
pop
or
sub
or
sbb
pop
das
inc
xchg
cmp
cmp
arpl
popf
inc
roll
lcall
std
or
sbb
outsl
ret
mov
mov
ror
orb
xchg
inc
cmp
jb
xchg
scas
add
scas
mov
push
sub
es
cmp
scas
and
ljmp
scas
je
mov
mov
sub
dec
jmp
xor
xchg
fnsave
push
add
sub
inc
ss
ss
ss
stos
mov
shlb
ss
ret
cld
push
sbb
cmp
cmp
xchg
or
dec
cmp
push
sub
push
cmp
inc
aaa
or
fdivrl
repnz
clc
repz
stos
out
dec
adc
push
fs
stos
outsb
leave
aas
ds
call
sahf
mov
clc
loopne
in
sub
xchg
outsb
inc
cmp
clc
mov
icebp
pop
out
outsb
mov
rolb
pop
xchg
insb
ja
cltd
les
js
xchg
xor
mov
mov
push
ljmp
cmp
xor
fisubrs
xor
orl
popf
xor
xchg
test
fnstenvs
fwait
or
rolb
push
rcrl
cmp
das
cmp
ds
idivb
add
cli
popl
mov
xor
inc
inc
xor
lea
movsl
sahf
sbb
outsb
data16
mov
insb
or
mov
xor
dec
jge
mov
xor
shrb
xor
push
jp
cltd
mov
scas
ss
inc
test
push
loop
sub
add
push
mov
xor
mov
lods
subb
pop
cmp
inc
ffree
cmp
jno
xor
sahf
fcmovbe
mov
sub
cmp
cmp
cmp
add
and
out
outsb
ljmp
adc
adc
push
adc
sbb
std
cmpsb
xor
shlb
add
xchg
scas
inc
xor
ljmp
cmp
inc
or
xor
jne
ss
push
aaa
mov
inc
ss
inc
sbb
cmp
push
ds
dec
popa
je
push
mov
addb
xchg
out
sahf
push
out
cmp
mov
add
roll
push
mov
add
mov
sub
add
xor
out
add
and
aaa
cmp
adc
push
test
test
or
or
fldcw
jae
mov
add
sahf
daa
mov
hlt
pop
scas
add
popf
ds
dec
loop
jo
sarb
inc
add
lock
jo
mov
mov
inc
add
mov
fdivr
adc
mov
push
dec
jmp
repnz
xor
dec
xchg
jbe
mov
dec
xor
xor
pop
ja
xchg
push
movsl
pop
mov
ret
and
andl
ja
dec
sub
sbb
js
cmpsb
mov
int
cmc
push
sbb
and
xchg
mov
jb
jp
pop
pop
push
rcl
in
inc
dec
pop
imulb
sbb
xchg
clc
or
jns
mov
mov
lock
test
lods
cmp
push
or
cmp
cmp
and
pop
pop
movsl
sbb
push
cmp
insb
cmp
jnp
mov
xchg
sbb
test
xchg
inc
and
adc
cmp
cmp
mov
push
cld
test
pop
push
mov
pusha
ds
xor
xor
xor
add
xor
inc
mov
in
call
loope
mov
xor
cs
xor
push
ss
ss
das
inc
js
push
aaa
sbb
add
aad
lds
cmp
aam
cmp
movsl
push
lods
dec
mov
mov
or
cmp
xabort
cmp
scas
add
rolb
inc
cmp
push
sub
add
cmp
cmp
push
cmp
call
ds
inc
aas
iret
mov
pop
ss
dec
or
inc
pop
testl
mov
xchg
inc
ss
add
hlt
dec
sarb
mov
xor
or
xor
bound
inc
pop
lret
jl
aaa
or
xor
xor
sbb
loopne
jge
and
pop
testl
cmp
in
xor
pop
ja,pt
mov
mov
lretw
aas
inc
aas
dec
aas
inc
stos
push
loopne
aas
ret
jecxz
es
sub
movsb
cmp
and
push
or
inc
add
pop
xorl
push
rol
or
xor
movsl
orb
jg
push
mov
cmp
push
imul
stc
ss
inc
dec
loopew
dec
dec
cmp
data16
daa
mov
cmp
addl
daa
push
push
jb
cmp
aad
sarl
nop
dec
push
test
sbbb
inc
into
hlt
mov
inc
push
and
popf
inc
cmp
add
adc
inc
mov
push
mov
push
mov
xor
pop
push
xor
pop
xor
add
jb
xchg
xor
into
xor
xchg
xor
dec
aaa
test
adc
sahf
push
xchg
inc
xor
mov
mov
push
sar
pop
call
adc
xor
xchg
test
mov
xor
sub
sahf
es
add
or
pop
test
xor
fiadds
es
aas
frstor
jp
cmpl
adc
push
movsl
sub
pop
loop
ss
ret
dec
inc
movsl
scas
aad
scas
cmp
adc
or
ret
pop
shrl
dec
push
cli
fucom
mov
cmp
cmp
jg
cmpb
repnz
sbb
pop
push
cwtl
subl
push
in
sbb
sar
cmp
aas
ja
mov
jmp
aas
loop
pusha
enter
push
inc
adc
pop
push
pop
adc
pop
dec
rcrb
cmpsb
mov
fadd
jne
xor
mov
xlat
mov
cmp
xchg
mov
mov
ds
push
push
in
jle
sub
mulb
dec
out
sub
push
lcall
mov
repnz
dec
xchg
outsb
cmp
inc
adc
push
add
or
xor
dec
sub
lcall
les
mov
sbb
mov
sbb
xchg
sub
add
aad
fistpll
in
sbb
out
sti
mov
jbe
xor
mov
ljmp
cmpsl
push
test
insl
pop
scas
pop
mov
xor
jb
xor
xor
dec
push
movsb
ljmp
inc
cli
stos
or
jecxz
mov
repnz
fisubrl
sub
mov
aad
adc
cmp
test
push
cmp
cmp
sarb
or
pusha
dec
jl
mov
popf
sub
push
hlt
sbb
int
or
pop
ds
xor
and
pop
inc
dec
push
inc
inc
cmp
sub
push
xor
ret
ffreep
insb
xor
je
js
jl
mov
pusha
scas
inc
adc
stos
shlb
aam
lock
add
xor
ret
push
mov
cld
ljmp
leave
jbe
xor
xor
repnz
xor
xor
sbb
mov
imul
sub
loop
and
sub
lret
in
dec
inc
xor
dec
or
pop
sub
mov
jae
js
add
or
push
je
cmp
inc
ds
jno
shlb
hlt
jp
aas
int
mov
sahf
scas
nop
jl
sub
lcall
xorb
sbb
es
cmpsb
push
sbb
xor
xor
push
pop
mov
jmp
or
divl
dec
aaa
pop
repnz
cmp
xchg
xchg
push
inc
adc
jmp
sub
inc
lahf
push
and
or
sub
or
push
cmpl
int
mov
mov
cmpsl
cs
xor
nop
push
in
jecxz
adc
inc
pop
ljmp
pop
stos
out
xor
xor
ret
pop
mov
mov
les
pop
mov
dec
addr16
add
ss
cltd
ss
cmpl
push
mov
cmpb
cs
sbb
jno
cwtl
out
or
pop
jl
fstpt
push
push
inc
xor
scas
pushf
and
pop
ljmp
loopne
outsb
ss
lahf
or
ds
scas
jo
insl
adc
mov
cmpsl
dec
xor
cmpsb
dec
into
xchg
jbe
push
and
ss
outsb
jnp
mov
xor
or
fstl
mov
shlb
ljmp
ss
outsb
cwtl
cs
popw
mov
cmpsl
cmp
stos
xor
pusha
outsb
rolb
xchg
mov
cmp
push
cmp
push
adc
pop
mov
out
outsb
mov
xchg
push
in
aaa
xor
mov
fwait
jmp
sbbb
mov
test
sub
loopne
cmpsb
mov
xor
loope
test
bound
xor
dec
scas
xor
push
loope
xor
cmpsb
shll
cmp
cmp
inc
cmpsl
push
scas
xor
sbbb
loop
jp
cmp
aas
cmp
push
add
mov
test
divl
sub
repnz
jp
dec
rorb
movsl
mov
notb
xor
jnp
fdivs
fidivs
push
sbb
add
jb
xchg
mov
cmp
jmp
push
xor
push
sub
mov
loop
sbb
test
lahf
out
ret
test
lcall
jnp
mov
add
pop
sarl
and
inc
cmp
dec
mov
hlt
cmp
cmp
and
cmp
mov
loop
ds
push
cmp
push
test
push
and
cltd
loopne
or
or
xor
jge
mov
push
ret
add
or
lcall
inc
inc
xchg
cmp
scas
jmp
or
ljmp
push
xor
xor
xor
xor
cmp
ss
push
sub
add
sub
ret
jne
mov
sbb
cmpsb
adc
fdivl
es
pop
pop
sbb
sahf
cs
lds
es
xor
movsb
dec
push
push
ret
fidivl
cmp
sbb
scas
lret
jno
sar
mov
cmp
loopne
push
jns
mov
xor
pop
cli
imul
repnz
add
push
push
push
pop
cmpl
mov
test
sub
and
mov
adc
mov
fstpt
sbb
sub
and
aas
mov
stos
ficoms
xchg
push
mov
add
sbb
dec
xor
bound
xor
cmpsb
mov
ja
dec
dec
xchg
int
out
pop
mov
pop
jle
sub
lcall
ja
inc
sub
ret
xor
mov
out
xchg
pop
and
mov
sbb
idivb
dec
or
lods
dec
out
ss
cmp
ffree
push
push
push
test
adc
aad
shr
aaa
cli
aaa
push
cmp
mov
mov
dec
bound
cmp
jp
jle
cmp
jo
mov
inc
jle
sbb
pop
pop
dec
ss
shlb
pop
jp
in
clc
shr
push
bound
add
add
push
inc
and
mov
sub
test
push
ret
xchg
cmp
cmp
add
xor
fcmovbe
stos
test
mov
adc
sub
cmp
mov
scas
adc
adc
cmp
inc
movsl
scas
rorb
aas
ds
and
test
push
pop
push
dec
push
aas
es
dec
jecxz
adc
lcall
or
lods
xor
xor
mov
xor
outsb
test
sub
xlat
dec
ds
mov
or
jg
add
aas
stos
jns
or
pop
mov
xor
cmp
jns
mov
data16
push
push
push
push
jns
rcll
stos
push
aad
or
pop
inc
push
mov
xchg
mov
mov
jns
aaa
add
ljmp
mov
cwtl
sub
cwtl
sahf
lcall
dec
imul
sar
cli
int3
jo
sub
mov
adc
cmpsb
addl
and
sti
xor
lea
leave
dec
or
orl
lock
inc
sub
jne
mov
ds
aam
add
jp
add
push
mov
xchg
jp
cmp
xchg
adc
or
rclb
fnstcw
stc
outsb
sub
mov
test
cltd
sahf
adc
sub
xchg
xor
cltd
mov
roll
in
ljmp
decb
mov
loop
ss
outsl
mov
jns
inc
rcll
dec
aaa
imul
adc
dec
push
rcll
inc
push
inc
stos
cmp
mov
cmp
cmp
decb
shrl
cmp
cmp
jno
sub
or
nopl
in
and
test
adc
int
call
mov
out
xor
xor
push
rorb
or
push
dec
mov
push
xchg
cltd
mov
cmp
push
or
repnz
lock
xor
push
jecxz
inc
sbb
jge
sbbb
movsl
stos
loop
mov
or
addr16
push
insl
jl
movsl
data16
incb
mov
jne
test
xchg
lods
dec
lcall
lahf
gs
pushf
add
fstl
je
pop
out
ds
mov
cmp
scas
imul
mov
loope
add
push
dec
rorl
mov
jecxz
call
jle
or
ret
xchg
addb
outsb
sbb
mov
imul
and
mov
fildll
aaa
push
jo
adc
pusha
ljmp
jl
xorb
add
adc
lods
aaa
mov
mov
mov
daa
mov
sub
xor
inc
xor
inc
xlat
ss
aad
cmpsl
push
xchg
push
and
fiaddl
ss
inc
dec
js
cmp
mov
push
sarb
aam
inc
adc
xchg
dec
cmp
fldl
pop
es
lcall
cmp
cmpb
cmp
stos
xor
cwtl
mov
imulb
mov
call
scas
push
je
or
and
mov
loopne
in
in
pop
sub
scas
push
xor
xor
xor
jle
xor
test
add
xor
rcl
inc
aaa
jb
xor
xor
mov
out
xor
dec
jb
push
add
pop
xor
into
shlb
push
adc
mov
sub
jg
push
or
cmp
push
push
mov
or
push
push
add
pop
movsl
mov
adc
mov
mov
mov
shll
aad
fstl
in
in
jb
cli
shrl
out
xor
xor
push
pop
mov
and
mov
inc
inc
rclb
dec
mov
pop
js
push
gs
cmpsb
jne
add
xor
mov
fdivrs
jo
cs
mov
push
imul
jle
rcll
addr16
fs
xchg
out
adc
or
cmpsb
and
jl
jl
push
dec
test
mov
in
insb
pop
or
fs
test
call
and
inc
push
jecxz
mov
je
mov
data16
es
mov
cmp
insb
lea
aam
and
test
mov
sbb
push
mov
cmp
mov
xchg
cli
adc
xor
add
inc
xchg
sbb
ja
mov
call
scas
jl
lea
adc
leave
mov
pop
push
cli
movsl
mov
aam
in
loope
aad
xchg
sub
xor
push
add
scas
jo
cmp
ds
mov
xor
addr16
add
add
push
mov
push
mov
pop
sbb
jbe
inc
lea
push
movsb
sbb
out
or
loopne
fsubl
je
mov
les
popf
mov
inc
add
les
hlt
xor
xchg
push
sub
mov
je
mov
mov
ljmp
fs
sbb
shl
pushf
inc
add
sub
pusha
add
ljmp
mov
mov
add
push
adc
lcall
sub
pusha
out
jl
or
dec
cld
cmp
add
subb
inc
sub
js
stc
inc
sbb
dec
cmp
mov
jecxz
fistps
sub
sbb
les
les
hlt
stos
sub
dec
sbb
or
ret
mov
mov
stos
xlat
das
or
cmpb
aas
dec
nop
jne
pop
clc
dec
cwtl
aas
pushf
scas
movsb
pop
lods
add
pop
inc
cs
push
shl
or
enter
fcoms
scas
cmp
aas
in
ds
mov
mov
sub
push
add
or
adc
sbb
into
xlat
imulb
xor
add
inc
ljmp
push
xchg
pop
mulb
push
dec
xor
push
sub
stos
pop
addb
mov
mov
mov
lret
sahf
test
out
xor
add
fdivs
and
pop
inc
jg
push
push
xor
xorb
mov
inc
nop
scas
pushf
xor
das
adc
xor
enter
es
call
jmp
ds
xor
push
repnz
fs
inc
adc
sbb
sbb
push
fidivs
mov
jp
shll
test
fcmovu
push
and
push
movsl
sbb
push
xor
mov
lcall
sbb
mov
xor
dec
mov
pusha
push
sub
adc
push
push
out
int3
push
push
sub
or
and
lods
rolb
jp
mov
add
out
dec
repz
int3
incl
xor
roll
imul
lods
cmp
push
rcl
cmp
mov
xor
push
mov
aad
dec
stos
test
loopne
sub
pusha
inc
addr16
je
pop
cmp
push
dec
inc
cmpl
lods
lret
loope
outsl
call
sub
pop
pop
frstor
mov
cwtl
push
jmp
in
roll
js
sbb
cli
adc
adc
push
and
loopne
ds
xor
cmp
test
testb
sub
pop
mov
pusha
ds
js,pt
or
push
mov
daa
mov
daa
cwtl
test
xor
aaa
jl
jo
ljmp
shll
cld
loop
sbb
add
in
xor
scas
mov
arpl
insb
adcl
add
xor
mov
cmp
dec
jl
or
test
rorb
daa
je
adc
aam
and
inc
mov
enter
aas
fsubrl
fcomps
push
inc
push
dec
call
lahf
dec
inc
ss
das
insb
push
pushf
cmpsb
xor
int3
repnz
mov
bound
mov
inc
cmp
jb
les
sub
add
inc
rorb
xchg
int3
out
adc
adc
stos
sub
pop
repnz
mov
outsb
mov
add
xor
xor
add
adc
sbb
rcll
and
ret
push
cmpl
cmp
rclb
mov
push
into
jo
pusha
jbe
xchg
sbb
xor
inc
inc
xor
call
je
ds
mov
inc
js
sbb
lea
push
add
adc
mov
pusha
sub
xchg
ljmp
lahf
aas
add
cmp
or
mov
and
pop
out
push
lea
js
subb
or
mov
imul
xor
fmuls
jo
jno
and
adc
subl
lds
clc
dec
add
and
add
inc
mov
dec
mov
cmp
cmpsl
jo
je
adc
push
push
nop
sbb
add
testb
dec
or
sub
jp
imul
mov
orl
int
xor
hlt
adc
daa
mov
add
out
adc
data16
mov
xor
inc
cmpsl
jg
loopne
dec
and
xor
add
cmc
aad
dec
adc
xor
pop
adc
je
js
pushf
xor
repz
lcall
enter
fdivs
fsubl
mov
inc
addr16
popf
call
xor
ds
adc
out
adc
sbb
cmp
xchg
push
push
pop
test
mov
push
sub
js
xorb
add
xchg
cli
xorl
nop
and
xor
rolb
sub
fsubl
or
cmp
arpl
insb
stos
pushf
mov
call
xlat
test
es
test
jle
cli
lcall
clc
ljmp
mov
push
fsub
adc
pusha
adc
aam
scas
mov
repnz
dec
push
mov
push
lcall
lcall
sbb
inc
outsl
clc
cmp
jno
add
fcmove
add
push
fs
mov
fcmovne
mov
sbb
mov
pusha
jp
lods
arpl
and
aad
mov
dec
mov
inc
xor
test
adc
lahf
and
mov
cwtl
test
add
fcoml
xor
jg
lea
enter
inc
fstl
stos
or
jo
adc
push
dec
subb
inc
pop
inc
and
push
sub
fwait
scas
push
sub
or
push
adc
ds
push
rcrb
cmp
xor
or
mov
into
fdiv
lcall
fistps
rcll
mov
mov
mov
icebp
cld
add
sbb
inc
int
push
mov
into
inc
and
inc
dec
add
push
xchg
lcall
test
fdivrl
mov
sub
or
test
inc
ja
pop
fdivrl
das
mov
cmp
push
dec
push
pushf
daa
add
adc
jp
cmp
ret
pop
mov
sub
les
xchg
jp
pop
adc
xor
insb
xchg
insb
xchg
xor
sbb
add
jecxz
sbbb
nop
jmp
out
mov
add
xor
fs
xor
add
movsl
fcoml
add
sub
outsb
sub
dec
jnp
add
inc
int3
int3
insl
hlt
ss
lahf
sbb
fsubr
insl
cmpl
stos
cmpl
xor
dec
jle
mov
jnp
pop
cwtl
sbb
and
or
mov
repnz
jae
or
jecxz
or
sbb
loopne
sbb
pop
bound
dec
pop
add
je
test
mov
push
xlat
lock
and
add
push
cmp
into
pop
pop
mov
iret
pop
je
cmp
arpl
pop
mov
mov
aas
xchg
adc
sub
pop
clc
adc
inc
mov
pusha
and
adc
sbb
and
pop
push
mov
ds
lret
movsb
mov
int3
fsubp
data16
inc
iret
xchg
sub
and
nop
cmpl
loopne
or
push
push
xor
push
inc
push
mov
cli
mov
fsubrp
testb
or
cli
sbb
xor
or
fs
mov
call
push
dec
cli
sub
repnz
inc
negb
ds
scas
out
pushf
ljmp
mov
push
in
jmp
je
stos
add
and
stos
hlt
aad
je
test
push
sub
inc
movsb
ljmp
mov
cmp
pop
mov
insb
fiadds
jmp
aaa
cld
out
or
and
orb
ljmp
test
shrb
clc
ss
cmp
test
xor
fs
mov
or
out
push
adc
sbb
cmpsb
and
dec
es
push
jecxz
sahf
test
es
lea
in
cmp
ljmp
inc
xchg
mov
clc
js
xchg
mov
dec
xchg
adc
push
subb
mov
pushf
bound
jno
mov
xchg
in
cmp
bound
ljmp
lcall
push
cmpsb
mov
lcall
xor
enter
cld
movb
mov
sbb
sub
add
lcall
push
jmp
jl
mov
mov
les
aam
in
hlt
call
or
ljmp
push
movsb
mov
es
movsl
cmpsb
push
popf
dec
push
into
adc
inc
xchg
mov
cmp
pusha
xchg
mov
sbb
inc
cmpsl
loop
into
inc
push
jmp
mov
mov
jno
push
in
hlt
ret
or
cmp
pop
negb
and
inc
cmp
loopne
mov
xor
push
test
add
stos
mov
cli
hlt
out
add
sub
xchg
push
push
cmp
sti
pop
cmp
xor
insb
xchg
add
xor
mov
sub
loopne
adc
xor
jecxz
lcall
inc
mov
in
sahf
cld
dec
cmp
pop
dec
aad
andb
mov
mov
call
mov
aam
in
in
dec
dec
push
xor
cld
pop
into
jl
push
or
mov
and
pop
xor
inc
sub
test
cmp
test
xchg
adc
push
fmull
lock
push
sub
test
jbe
push
shlb
add
mov
lods
sub
outsb
push
cmp
mov
adc
in
adc
mov
mov
fs
pusha
cmp
shrb
cmp
ds
and
jo
cld
js
mov
sar
sbb
sbb
loop
xchg
add
and
xchg
hlt
pop
pop
loop
xlat
inc
lret
lock
mov
cmpsl
lock
add
outsb
adc
sub
and
pop
bound
cmpsl
mov
inc
fadd
lock
mov
adc
mov
push
push
fs
mov
add
mov
jl
jl
cwtl
push
lods
xor
mov
xor
insb
cmpsl
and
loop
sbb
push
add
call
mov
jo
andb
add
rol
shr
into
cld
out
adc
cmpb
push
jo
repnz
clc
loop
test
push
sbb
dec
fisubl
addb
mov
fmul
sub
inc
fcoml
mov
ss
jne
add
sbb
popa
scas
xor
inc
mov
inc
push
add
jl
mov
jmp
ret
cwtl
or
sbb
inc
cmp
es
jo
movsb
cmp
ljmp
push
inc
sub
cmp
push
jmp
lods
and
test
push
aam
test
jmp
bound
or
jbe
or
dec
test
jne
lock
sahf
xor
es
sarb
or
cld
or
inc
xchg
pop
clc
push
ljmp
sarb
adc
inc
aaa
cmp
push
out
je
movsb
pusha
ret
jbe
fcomi
jp
sbb
or
xor
pusha
idivb
add
push
outsb
inc
cmp
lahf
xor
or
roll
mov
add
add
jae
sub
lea
js
fwait
xor
dec
cmpsl
es
push
addr16
lds
mov
mov
jle
jne
inc
add
negl
fdivl
aas
jmp
fisttps
add
lock
sbb
add
test
dec
clc
icebp
xchg
rorb
xor
push
imul
dec
clc
inc
push
add
addr16
inc
pop
pop
mov
fdivrp
rorl
sbb
dec
sub
inc
and
mov
mov
imul
mov
push
ja
mov
jg
or
imul
shrb
xor
stos
xchg
mov
in
hlt
jg
js
add
jle
add
xchg
cs
lahf
loopne
jg
jae
lcall
pop
aam
push
adc
jg
out
inc
cli
clc
fidivrl
dec
jle
push
ffree
add
pop
in
cmp
inc
and
or
test
jle
jae
callw
cmp
pop
adc
push
inc
aas
lcall
les
loopne
sub
adc
dec
clc
call
adc
inc
sti
push
and
lcall
mov
in
push
or
sub
je
inc
aam
sub
dec
push
sbb
bound
and
cmp
jo
add
pusha
dec
mov
fdivrs
mov
push
dec
jge
adc
mov
xor
test
push
pop
aas
inc
enter
mov
ja
inc
xor
aaa
fdivs
clc
sbb
jno
cs
out
adc
sbb
add
inc
and
jae
ds
insl
les
sub
pop
arpl
or
cmp
je
xor
inc
mov
push
loopne
sbb
bound
push
neg
int3
push
sub
out
inc
xor
lret
inc
adc
aaa
dec
cmp
pusha
ds
add
mov
scas
inc
add
cmp
pusha
bound
jl
xchg
inc
and
pop
fiadds
pop
clc
and
pcmpgtb
or
shlb
test
adc
pusha
scas
adc
scas
rolb
les
sub
pusha
scas
pushf
push
xor
push
adc
jnp
aad
xor
pop
add
sahf
adc
or
shll
repnz
cmp
or
xchg
mov
pusha
out
loop
pusha
add
setae
or
add
mov
add
push
popl
jg
push
orb
jae
push
negl
test
ja
pop
xchg
adc
xchg
lock
dec
divl
adc
ljmp
ljmp
pop
add
push
push
inc
push
dec
push
or
insl
pop
add
cmpsl
lahf
lods
addl
mov
shlb
inc
mov
orl
imul
rcrl
xor
cmc
push
or
push
adc
mov
ds
scas
cmp
jbe
mov
xchg
mov
sub
movsl
mov
cli
pop
add
out
push
add
pop
les
inc
jl
sbb
sahf
andl
je
mov
mov
xchg
push
rclb
jmp
lock
out
out
add
xor
mov
testb
or
test
push
sbb
rcll
imul
stos
fimull
xorb
mov
out
shl
rclb
test
inc
cli
add
repnz
rol
or
into
ret
add
stos
lahf
pop
or
pop
add
mov
and
jp
cmp
cmp
mov
push
cmp
ljmp
mov
sahf
test
jmp
js
jmp
cmp
dec
pop
mov
xchg
dec
ret
scas
and
mov
lods
push
sarl
jbe
or
cmp
dec
cli
jae
aas
cmpsb
pop
cmp
outsb
bound
in
push
loopne
hlt
inc
ss
jle
loopew
js
pop
or
dec
sbb
pop
sbb
fimuls
inc
aaa
subl
mov
adc
cli
pusha
fists
mov
pop
sbb
xchg
cmp
ds
mov
adc
ret
mov
xor
mov
pusha
sti
js
lods
mov
outsb
arpl
mov
xor
jb
xor
push
insb
mull
or
push
inc
adc
add
cs
and
das
pusha
or
cli
or
add
jmp
push
add
fiadds
mov
lea
ss
mov
jmp
cmp
inc
jmp
and
test
mov
pop
addb
xchg
lock
jb
push
ret
test
jle
adc
dec
ret
add
ljmp
dec
bound
out
jp
icebp
dec
jl
lret
ret
and
les
mov
icebp
cmpsb
xchg
fwait
aam
add
add
adcb
nop
js
dec
inc
cmp
lahf
and
and
les
and
push
daa
popa
inc
bound
les
dec
push
loop
sbb
bound
mov
loope
js
sub
cli
push
sahf
test
mov
pop
aam
cmpb
or
sahf
jp
aaa
lock
outsb
bound
arpl
push
aad
xor
movups
rcr
push
xor
add
and
rolb
jo
lods
shrb
call
sbb
ljmp
lods
scas
push
mov
cmpsb
add
push
push
daa
push
scas
push
or
loopne
lods
dec
dec
pop
shll
mov
add
scas
subb
push
daa
fildl
push
rclb
sub
fwait
add
lret
push
add
sbb
sbb
cs
negb
cmpsb
pop
adc
push
adc
loop
cmpb
add
mov
xchg
cmp
dec
pop
bound
inc
dec
pop
les
cmp
xchg
sbb
iret
outsl
push
xchg
push
pop
jae
or
lods
outsl
fcomps
pop
icebp
and
pop
mov
add
mov
add
data16
mov
fisubrl
adcb
repnz
test
dec
mov
mov
mov
adc
jb
adc
add
shl
loop
rclb
or
fildll
daa
jbe
jl
xchg
and
cmpl
add
ficompl
test
movsl
add
cmp
sub
xor
rolb
jo
data16
xlat
add
shl
rcrb
ret
jl
push
repnz
rcl
dec
daa
xor
in
or
and
mov
cmp
test
xor
or
pushf
or
adc
add
push
test
mov
mov
fidivrl
cmp
inc
pop
jnp
lock
or
test
popa
xchg
inc
aas
or
sbbb
loopne
out
loop
pop
rclb
scas
filds
inc
dec
pop
sub
adc
out
push
cwtl
and
test
jmp
bound
inc
pop
rclb
ret
xorl
aaa
push
push
push
push
fwait
xorb
lcall
jbe
xor
push
push
je
or
or
les
dec
pusha
mov
sub
and
scas
inc
lret
push
fwait
ret
or
and
or
xchg
xchg
mov
pop
xchg
mov
lahf
icebp
lock
out
out
cli
or
icebp
div
iret
and
mov
push
mov
mov
fwait
dec
scas
fwait
movsb
and
mov
dec
mov
dec
loopne
sub
sub
push
dec
or
das
testl
sub
xor
ret
jbe
mov
xchg
pop
loop
mov
arpl
pop
pop
pinsrw
lret
cmp
ficoms
sub
les
sbb
nop
sub
push
mov
les
pop
pop
roll
adc
sbb
bound
mov
add
dec
dec
mov
cmpl
scas
mov
stos
dec
lods
es
movsb
fwait
mov
mov
sbb
xchg
sti
repz
mov
arpl
mov
mov
xlat
les
dec
pop
das
sub
sbb
or
push
add
fucomip
sbb
push
lea
pop
mov
movsb
and
lods
push
subb
sbb
arpl
sub
add
xor
dec
in
jae
push
add
sbb
test
add
movsb
mov
lods
xlat
sbb
dec
ret
push
imul
mov
sbb
mov
cs
xlat
inc
rolb
sub
xor
scas
movsl
rorl
mov
fwait
push
addb
add
mov
es
out
js
mov
xor
adc
dec
loope
lds
js
rorb
test
cs
lcall
mov
ljmp
push
sahf
sbb
pop
fisubrs
scas
mov
pop
adc
xlat
push
cwtl
fmuls
and
pop
jp
xorl
daa
add
inc
xchg
and
arpl
ja
mov
pop
push
adc
cmp
sub
cmp
or
into
rolb
or
mov
or
leave
sbb
stos
bound
sub
cs
divb
and
stos
movsl
cli
adc
xor
xor
mov
jmp
sbb
xor
loop
add
cmp
shlb
addb
jl
push
and
ss
xor
xor
sub
push
jbe
push
push
and
xchg
stos
xchg
sub
ss
cmpsl
aam
mov
dec
or
push
push
scas
push
mov
mov
push
ret
out
mov
loop
out
ljmp
xor
or
add
push
faddl
adc
or
push
adc
dec
push
test
pop
dec
cmp
and
add
test
test
or
mov
inc
xlat
mov
push
mov
imul
enter
aad
enter
and
insb
nop
into
mov
mov
mov
and
sub
sbb
xor
pushf
shrb
mov
imul
cs
cs
adc
jl
popa
xor
std
or
dec
add
cmp
bound
fs
mov
arpl
xor
xor
popa
push
mov
leave
dec
outsb
sbb
add
out
dec
inc
outsl
les
xor
push
into
rcl
sarl
roll
movb
xchg
xchg
mov
into
movsb
mov
xor
jbe
mov
inc
sbb
push
xchg
push
dec
ret
cmp
test
xor
sbb
mov
sbb
or
loop
sarl
fcmovbe
adcl
mov
adc
psubq
fldenv
mov
mov
lahf
push
jne
mul
fucomip
mov
cltd
daa
fwait
push
fildll
pop
aas
jecxz
stc
divl
mov
sahf
pusha
mov
pop
mov
ss
xor
shrb
xchg
or
stos
testb
rolb
or
lret
xor
xor
ds
xlat
pop
adc
dec
cwtl
jle
aam
enter
sub
mov
cs
roll
xor
or
inc
jo
adc
ret
rorl
xor
lcall
add
icebp
cmp
subl
inc
add
lcall
xor
cmp
add
or
dec
sahf
or
orl
pusha
push
dec
or
inc
xchg
lcall
addb
pop
call
xor
xchg
dec
filds
fstps
xchg
add
iret
mov
jmp
insl
pop
lds
push
xchg
incl
stc
inc
fidivl
mov
pop
dec
fnstenv
fbstp
roll
push
fs
push
rclb
sbb
out
popa
or
cmp
mov
call
bound
stc
orb
or
jbe
mov
and
ljmp
adc
ret
mov
call
ret
push
adc
int3
dec
cmc
add
or
call
dec
adc
cmp
mov
dec
sbb
fs
sar
rclb
mov
cmp
sbb
jmp
cmp
xor
push
incl
incl
xor
sahf
sbb
jg
mov
fimuls
dec
sahf
sub
add
push
fadds
add
mov
pop
lcall
clts
popa
aam
push
pusha
sub
jp
push
push
decl
pusha
sti
outsb
mov
enter
call
in
sub
cmpsb
sbb
xchg
inc
mov
scas
lret
repnz
push
jle
xlat
add
cmp
cmpsl
inc
dec
push
pop
sti
sbb
ljmp
dec
xchg
sub
adc
pop
adc
inc
xchg
and
fucomip
and
cld
das
sar
shlb
lds
inc
sub
lock
jnp
call
ljmp
lcall
dec
imul
xchg
pop
cmp
ljmp
mov
mov
mov
xchg
pop
pusha
pop
fmuls
mov
adc
decl
mov
mov
bound
aas
adcl
fists
mov
insb
inc
jne
ljmp
cmpsl
imul
int
jb
xorl
insb
adc
iret
mov
inc
loope
data16
in
jmp
adc
mov
ss
mov
push
rcr
or
and
cmp
sbb
pop
xor
pop
jecxz
iret
rorl
sahf
jns
and
jmp
cli
xchg
out
movsb
fimuls
mov
cld
mov
pushf
imul
pushl
pop
sbb
mov
push
mov
mov
shl
and
cltd
xchg
enter
clc
enter
jmp
push
pop
mov
add
mov
push
jecxz
jmp
add
lcall
inc
and
pop
adc
xadd
movsl
aad
fwait
ret
sarb
lcall
pop
lahf
add
les
es
dec
xchg
movsl
sti
ret
sbb
jno
out
mov
incl
jge
xor
cltd
mov
in
out
mov
popl
or
ljmp
mov
js
jecxz
lret
jbe
adcb
ja
bsr
pushf
jo
clc
jb
adc
lcall
and
aam
daa
aas
push
scas
inc
imul
fisubs
into
outsl
data16
jle
mov
sbb
and
outsl
sti
imul
stos
scas
push
in
sbb
add
mov
rorl
xor
std
iret
mov
mov
inc
ret
mov
rcr
in
jbe
into
movsl
cmp
pop
inc
repz
ss
mov
dec
sbb
jp
inc
mov
sub
dec
mov
push
loopne
mov
test
mov
jo
push
insl
jb
cmp
dec
lret
adc
ret
in
fst
leave
push
xchg
mov
lcall
sar
fiaddl
and
mov
mov
into
mov
xor
jmp
push
jmp
xor
aaa
ror
cmc
sbbb
push
outsb
or
ljmp
jae
mov
divl
in
rol
and
into
int3
ret
cmp
jecxz
divl
dec
idiv
pushl
fidivs
lds
mov
fmuls
icebp
mov
pop
test
mov
pushf
mov
decl
hlt
jge
dec
mov
jge
sbb
jle
sbb
add
inc
sbb
repz
insl
fisubrl
cmp
or
sub
lcall
enter
dec
pop
fwait
push
fiadds
mov
jmp
cmp
adc
xor
mov
dec
sti
pop
or
cwtl
push
mov
sub
stos
arpl
rorl
mov
add
mov
rcl
mov
ds
int3
icebp
shrb
fld
cltd
fwait
cmp
add
adc
and
loope
dec
cmp
fistps
mov
sbbb
movb
outsb
pop
loope
lcall
dec
cmp
mov
xchg
inc
or
jp
enter
fisubrs
xor
and
jmp
movb
push
add
test
jno
jg
mov
add
inc
ljmp
dec
popa
and
repz
fcomip
jecxz
dec
das
sahf
add
ret
lcall
push
jns
icebp
aam
fnstsw
out
dec
cmpsb
into
sbb
arpl
repz
ljmp
orb
movsl
mull
test
push
push
push
shr
dec
outsl
or
cli
fistl
sti
out
push
mov
mov
pop
xor
sub
pop
clc
mov
push
jmp
les
adc
in
pop
test
loopne
sub
and
imul
ljmp
jge
cmpsl
push
xchg
sbb
inc
jbe
push
add
adc
sub
jmp
xchg
in
out
cmp
mov
cmp
loop
push
cld
incl
notb
inc
xor
add
repnz
das
pop
int
gs
aaa
les
pop
test
decl
mov
and
and
std
dec
cwtl
jbe
sbb
jns
xor
incl
dec
xchg
repz
xor
mov
cli
add
push
mov
in
and
ret
aaa
movl
pop
fs
inc
out
fmuls
bound
push
push
push
adc
cmpsl
sbb
clc
out
sub
jl
mov
ss
clc
lds
sub
inc
test
ss
xor
jne
icebp
xorl
scas
xchg
xorb
ret
cltd
out
ret
call
lcall
fdiv
inc
cmp
or
repz
das
ljmp
push
push
xchg
imul
aad
sbb
xchg
or
das
shl
xor
mov
fcomip
incl
and
push
es
add
adc
js
cld
and
or
pusha
lods
lret
xor
imul
das
adc
adc
pop
jno
sbbl
int3
push
lock
call
stos
xor
xchg
pop
mov
out
add
mov
lahf
push
pop
push
cmpsb
lods
movsl
mov
incl
test
push
jns
orl
sub
jp
notb
push
pop
dec
cs
fdivs
xor
ret
in
std
imul
imulb
pushf
std
cmp
std
bts
or
or
pop
mov
imul
cmovle
mov
aaa
lret
movsl
cld
xchg
adc
push
and
call
imul
adc
test
rcrl
std
inc
bound
xchg
cmpsl
out
test
repnz
push
rolb
xchg
jno,pn
dec
pushl
aaa
jl,pt
rcrl
sub
jle
int
sub
shl
incl
les
inc
out
cmp
out
les
xor
sbb
xor
sub
jmp
xchg
adc
arpl
sub
loop
insb
cs
add
push
push
movl
call
inc
sub
or
cwtl
push
dec
or
lret
lods
es
and
add
push
fimuls
adc
mov
add
out
movsb
adc
mov
call
inc
out
mov
in
mov
scas
idivb
dec
and
ja
rcr
pop
fstps
outsb
push
fs
loop
mov
and
jp
ret
js
ret
lcall
mov
push
jmp
ret
and
xor
cmpsl
decl
in
and
sahf
jecxz
ss
repnz
adc
ds
fs
mov
mov
or
inc
stos
mov
mov
jge
loope
cmpsb
xor
call
or
xchg
inc
inc
shlb
std
cmp
bswap
lret
push
cmp
sub
xchg
fisttpl
nop
jmp
mov
movsl
mov
jns
sbbb
push
push
bound
sub
test
sbb
lds
inc
mov
ljmp
cltd
pop
inc
dec
sbb
pushl
inc
push
popa
push
xlat
adc
jmp
shrb
into
test
iret
loop
jmp
jge
je
lds
jne
pop
rcrb
xchg
roll
call
insb
mov
aas
mov
imul
pusha
nop
pop
fwait
js
test
push
jno
sti
pushl
js
out
dec
mov
movsb
mov
out
incb
or
xchg
jae
add
ja
inc
fildl
inc
or
and
dec
shrb
mov
rorb
mov
in
xchg
outsl
adc
lret
insl
scas
test
fs
call
in
inc
cli
dec
lcall
fs
inc
pop
pop
adcl
rcrl
ret
aad
xchg
je
incl
push
inc
in
insb
clc
and
xchg
enter
push
sbb
add
out
lock
inc
les
or
pop
jmp
or
fs
incl
jae
bound
mov
test
jbe
aad
cmc
gs
test
cs
add
pop
pushl
mov
lock
cmp
fsubrl
mov
sub
mov
incl
jg
aaa
or
iret
sti
loope
scas
rcrb
mov
js
in
test
decl
mov
out
ja
push
leave
dec
xchg
dec
insb
xchg
lds
cmp
inc
jno
push
adc
mov
xchg
mov
pop
push
inc
cmp
jne
loope
or
push
mov
dec
lcall
mov
mov
xor
sahf
in
fisttpll
xchg
sbb
incl
out
std
or
jne
mov
mov
test
push
pop
sub
pop
mov
outsl
and
inc
mov
xlat
data16
jns
outsl
addb
and
dec
xchg
das
mov
jmp
lahf
nop
dec
cmpsb
and
add
mov
or
hlt
cwtl
dec
call
call
mov
push
mov
cmpsl
push
pop
mov
push
and
push
add
pop
jg
push
mov
call
ja
enter
mov
data16
hlt
push
fcomip
push
push
ljmp
jp
push
mov
add
sub
faddp
call
jle
xchg
fisubrs
inc
dec
xchg
mov
jb
cltd
outsb
add
jl
sub
nop
sub
add
fadd
xor
mov
sbb
lret
add
adc
daa
iret
adcb
fsts
psubsb
xchg
xchg
cltd
mov
mov
or
jmp
mov
push
sbb
out
movsb
shlb
add
add
mov
call
dec
loopne
mov
cs
js
mov
mov
repnz
jge
sbb
jns
aaa
sub
xchg
daa
out
clc
lcall
lock
ret
push
addr16
inc
pusha
push
xchg
cmp
adc
sti
cmp
dec
and
ljmp
jmp
pop
push
insb
outsb
fwait
mov
ret
orl
fstpl
insb
movsb
popf
sarl
push
out
xchg
rep
call
pop
jb
mov
dec
cmp
adcb
imul
pop
xor
xor
cli
movsl
pop
cltd
push
lods
ret
shl
xchg
push
mov
pop
fsub
cmp
inc
push
mov
cmp
push
xchg
popa
xor
filds
jbe
ljmp
mov
add
lds
pop
or
cmp
aad
lret
jmp
push
inc
out
fbstp
cmc
push
push
xor
icebp
mov
in
call
sub
scas
jmp
or
pop
mov
into
lock
xor
icebp
insl
xor
lcall
dec
xlat
mov
in
data16
sub
ret
call
loop
mov
aaa
xchg
cs
in
xor
loope
push
push
and
and
fidivl
cmp
lcall
out
dec
call
adc
jge
nop
inc
pop
outsl
mov
lds
je
pushw
cld
inc
das
shrb
bound
cmp
push
data16
adcb
call
rcll
dec
cmovo
and
std
cmp
xor
dec
cli
adc
dec
incl
imul
mov
hlt
add
ljmp
fisubrl
jbe
jg
aad
or
int
xchg
cmpsl
pop
stos
loope
and
rcr
cmp
mov
jmp
and
add
jb
xchg
movsb
pushf
mov
dec
pop
jmp
pop
xor
mov
outsl
aas
lods
jns
test
adc
pushf
test
mov
mov
and
pop
lahf
lret
les
push
sbb
movsb
push
decl
jns
or
insl
mov
testl
sarb
pop
ja
out
push
adc
xchg
lods
xchg
adc
pop
movsl
sti
js
push
mov
out
jle
jge
lahf
and
call
adc
and
iret
stos
sbb
pop
dec
dec
push
xchg
dec
cmp
xor
pop
mov
call
aad
mov
and
leave
mov
add
xchg
int3
fstl
jnp
orl
lcall
inc
scas
xchg
aaa
jns
pop
movsl
sub
prefetch
std
cmp
cli
fmull
push
mov
call
mov
fildl
dec
js
loopne
cmc
popa
imul
incl
cmp
pop
sub
xchg
sub
push
idivl
call
mov
subl
daa
adc
fildl
and
repnz
scas
sbb
call
jle
inc
adc
lret
or
stos
aad
mov
mov
and
jmp
sbb
bound
lea
ljmp
movsb
fildl
ljmp
jmp
jae
mov
dec
or
mov
out
add
clc
js
shrl
decl
out
imul
inc
mov
add
insl
xchg
inc
pop
aam
ljmp
ret
xor
je
in
ret
insl
sub
out
lcall
sbb
sub
fcomps
or
stos
ss
add
lods
js
dec
rol
mov
jmp
dec
repz
ljmp
ss
mov
in
push
mov
cmpsb
mov
fmuls
xchg
pop
sahf
push
push
cmpsb
aaa
sbb
inc
imul
mov
pushf
fcom
sbbl
jecxz
ja
dec
mov
lcall
xor
shl
stos
test
ficoms
repz
cmp
sar
sar
out
inc
das
into
es
cmp
xchg
dec
int
pushf
jecxz
movsb
arpl
lods
jmp
ror
push
sub
decl
xor
outsb
in
ljmp
pusha
xchg
fdivr
push
pop
mov
push
jnp
adc
sub
call
test
or
sbb
or
clc
and
arpl
test
insl
fnstenv
ss
jnp
insl
int3
pop
imul
push
dec
outsl
cwtl
and
sub
xlat
mov
jg
incl
mov
cmp
ret
cmc
stos
fwait
popf
dec
addr16
cmp
mov
xchg
data16
dec
mov
das
jmp
dec
xchg
daa
sub
call
xchg
push
xchg
das
loope
xchg
cmp
xlat
in
pop
jnp
or
sbb
lods
aam
mov
adc
out
sbb
or
jmp
jmp
imul
jmp
push
mov
pop
rorb
mov
test
pushl
call
push
pop
mov
mov
imul
mov
shr
dec
push
pushl
lahf
test
add
mov
xor
push
xchg
rorb
dec
cmpsl
mov
mov
sub
lods
jmp
jg
pushf
mov
jbe
sub
bnd
inc
jne
lret
pop
pop
test
pop
aas
pop
cs
call
push
lret
ror
xchg
mov
fwait
xor
mov
mov
call
cli
lret
incl
stos
je
inc
mov
mov
pop
and
bound
mov
fldt
in
add
fcom
or
nop
fcmovne
push
pop
outsl
jg
imul
pop
or
ja
call
jmp
or
push
inc
lcall
adc
xor
adc
pushf
mov
inc
jno
fldenv
cmpsb
outsb
push
mov
loopne
pop
inc
mov
pop
mov
cld
cmc
fs
out
loope
and
or
fidivrs
out
mov
mov
xchg
pop
or
cs
lahf
mov
xchg
inc
jmp
dec
gs
inc
sub
adc
pop
xor
fs
lock
insl
popa
rcll
adc
popa
push
incl
jl
inc
scas
xchg
lret
mov
and
cmc
les
jp
data16
lods
data16
sahf
xchg
jg
decb
mov
adc
xlat
push
xchg
fistl
and
dec
out
sar
sub
std
xor
add
cs
adc
stc
and
insl
mov
notl
cmc
ljmp
add
loop
push
xchg
xor
out
sbb
sbb
into
scas
jbe
fcomip
sti
in
cmp
movsb
xor
dec
repz
adc
dec
fmuls
aad
das
ljmp
scas
jge
pop
aas
mov
cmp
lret
mov
or
push
ljmp
inc
jecxz
or
sbbl
xchg
jo
fistpll
xorb
cli
test
mov
ljmp
gs
rcrl
inc
mov
dec
jle
iret
rorb
les
sbb
call
std
push
mov
out
inc
jb
dec
or
fwait
xor
stos
jg
outsl
in
stos
rcrl
mov
push
fistpl
pop
mov
sub
gs
dec
ljmp
add
and
in
mov
and
call
mov
es
arpl
push
das
out
pop
out
xor
sbb
jmp
sbb
orb
sbb
mov
cmpsl
scas
mov
in
pop
or
sbb
inc
popf
movsb
jge
add
fiaddl
push
or
xor
push
arpl
or
lcall
lds
ret
inc
stos
call
outsb
fbld
pop
je
mov
xorb
cmpsl
cli
insb
inc
sbbl
decl
xchg
lea
cmp
push
call
dec
mov
adc
jmp
mov
std
fidivrl
negl
pop
mov
pop
or
bound
mov
dec
sarl
lods
or
mulps
push
mov
ret
xor
adc
ljmp
mov
loop
sbb
mov
das
push
out
xor
repnz
int
mov
jg
fwait
xchg
dec
out
aaa
scas
scas
mov
mov
outsl
outsb
jmp
fidivl
decl
mov
inc
dec
or
lods
pop
negl
lahf
lea
inc
icebp
ljmp
popl
mov
or
addr16
sbb
shrl
call
dec
and
xor
cmp
mov
push
into
lea
sarl
inc
and
add
jg
sbb
mov
xchg
shlb
mov
xchg
mov
add
inc
inc
loop
fwait
pop
movsl
lret
ljmp
pushl
scas
shll
push
lods
cmpsl
pusha
mov
mov
in
cwtl
cli
movsb
int3
sub
xor
lcall
addr16
ljmp
sub
jno
push
mov
xchg
inc
in
xchg
fnstsw
call
data16
inc
jo
mov
cmp
mov
lcall
add
cmp
jp
ljmp
xor
cmp
push
add
ret
es
cmc
pop
pushl
std
jo
jecxz
incl
push
cmp
mov
lret
push
xchg
mov
ja
decl
and
push
push
faddp
push
in
es
adc
xchg
mov
cld
loope
fwait
adcl
mov
repz
jnp
xchg
and
mov
dec
inc
cmp
sbb
inc
xchg
in
add
inc
outsl
xchg
add
cmc
stos
mov
inc
mov
aad
xchg
daa
arpl
sbb
data16
jp
jp
xchg
je
incl
xchg
lods
icebp
xor
dec
dec
mov
xor
and
cvttps2pi
pop
jmp
lret
xchg
clc
jbe
mov
cli
inc
push
clc
xchg
mov
iret
rolb
and
jp
lea
addr16
pusha
bound
lods
sub
pop
les
xchg
sub
inc
movsl
lcall
cld
inc
rcrl
xor
into
popf
xchg
xchg
cmp
xchg
inc
pushf
shll
mov
push
ds
pushl
shl
pop
jb
cmpsl
adc
push
lock
aaa
ret
icebp
add
outsw
call
pop
sbb
sahf
adc
or
fsubp
insb
mov
stc
repnz
test
push
mov
mov
pop
dec
xor
imul
inc
lock
pushl
pop
dec
mov
int
sbb
add
shll
pop
pop
add
decl
jo
sbb
jge
fnstcw
mov
jnp
pop
lods
lods
adc
mov
je
xlat
sar
jmp
inc
out
cmp
ffreep
inc
fnstenv
xchg
es
add
pop
pop
inc
cmp
decl
mov
and
mov
jnp
inc
push
ret
push
mov
fnclex
and
js
pop
push
in
call
aaa
pop
pop
push
das
xlat
nop
mov
lcall
add
mov
or
jg
incl
add
push
pop
jb
push
cwtl
cmp
push
in
jg
mov
addb
in
mov
test
push
inc
xchg
jl
mov
cs
ljmp
jb
mov
stos
sbb
or
jnp
xor
in
mov
pusha
cmp
mov
ljmp
mov
les
sub
pop
orb
xor
mov
mov
pushl
sbb
out
adcl
sbb
dec
xchg
xchg
mov
push
je
mov
jnp
inc
mov
sbb
fcomip
sbb
cmp
in
jno
sarb
cwtl
xchg
inc
or
xor
jmp
adc
test
pop
xchg
jno
push
xchg
stos
pushf
xchg
fwait
jle
fidivl
hlt
idivb
jns
jns
aad
js
sub
lret
xor
or
call
xlat
add
lcall
jmp
jo
stos
sbb
imul
ss
fcom
jg
sub
sar
jl
and
jnp
pop
push
pop
clc
lcall
inc
shlb
test
mov
push
and
clc
ljmp
fmul
lahf
out
vpsraw
int3
jl
sbb
leave
push
test
decl
pushf
mov
data16
mov
int3
jo
rep
or
lcall
dec
negl
inc
mov
mov
imul
jg
fsub
add
int
inc
jnp
cmpsb
mov
aam
inc
sbb
ljmp
push
pop
push
pop
mov
add
or
mov
ret
scas
mov
mov
sub
xor
cmp
incl
or
pop
in
or
ljmp
dec
lods
add
incl
push
shr
pop
jge
push
fcompl
out
sbb
test
cmp
aad
addr16
fstpl
push
repz
fldcw
testb
xchg
filds
mov
add
xor
insl
mov
sbb
add
or
int3
sub
cmp
rcrl
es
lods
fcomp
ret
inc
mov
xor
test
pop
push
inc
jns
pop
jecxz
cmp
cwtl
jno
mov
xor
add
cmp
mov
sbb
mov
fisttpll
sbb
inc
pushl
sbb
xchg
push
sub
hlt
test
and
fbstp
xchg
fldenv
repz
inc
jno
inc
out
xor
inc
mov
jg
pop
in
cmp
lret
mov
pop
dec
inc
adc
jo
dec
popf
popl
outsl
test
cmp
pushf
push
cmp
jne
decl
lock
imul
add
sarl
lahf
shrl
loope
cmp
bound
or
pushl
fiadds
dec
imull
out
push
in
in
jae
sar
add
cmp
fwait
test
xor
lods
mov
mov
sti
incl
test
mov
call
dec
cmpsb
mov
xor
das
push
popa
pop
fidivl
and
out
fiadds
jno
fwait
aaa
adc
add
sarl
call
cmpsb
xchg
lds
ret
jp
push
mov
xor
dec
int3
outsl
add
loop
clc
outsl
pop
icebp
ljmp
aaa
dec
sahf
stos
pop
push
sahf
inc
mov
mov
mov
mov
arpl
push
cli
lcall
les
popf
dec
inc
daa
push
fdivr
fcompl
mov
rclb
cmp
outsl
lods
and
cltd
nop
xchg
cmp
sbb
int3
fs
outsb
mov
imul
testl
aas
mov
loope
jne
push
mov
incl
dec
cmp
rclb
inc
pop
or
pop
push
lret
pop
stos
mov
movb
lcall
push
inc
insb
shlb
cmp
imul
xchg
sub
ljmp
lds
iret
push
nop
sahf
fsubrp
pop
or
push
adc
sbb
cs
movsl
lcall
and
inc
idivl
stc
mov
jns
jbe
orl
call
push
push
fs
fnstsw
push
mov
push
and
fisubl
in
jmp
pop
push
lods
shrb
pop
ret
aaa
je
hlt
inc
or
sub
inc
xchg
enter
mov
cmp
dec
sahf
xchg
push
gs
cmp
mov
or
inc
cmpsl
jge
das
loopne
ljmp
mov
xor
pop
xor
cmp
dec
mov
fdivrp
pushl
mov
or
popf
sbb
dec
es
inc
jns
and
mov
sub
cmpsb
or
push
xchg
pop
push
inc
push
lcall
shll
insb
xchg
sub
in
jmp
mov
outsb
mov
testl
out
ljmp
inc
mov
shl
out
mov
sub
addl
or
mov
nop
xlat
scas
leave
ljmp
lds
mov
out
lds
inc
mov
imul
sbb
push
call
jmp
out
ljmp
adc
stc
ljmp
or
xor
sub
fcomip
inc
jo
aam
stc
inc
fsubs
subb
into
insb
mov
fwait
push
pusha
xchg
cli
call
xchg
fs
in
mov
addr16
pushf
rol
dec
push
mov
lcall
pop
and
mov
push
pop
sub
jbe
lock
sbb
stc
test
js
int3
mov
bound
movsl
pop
pop
inc
cmp
mov
push
dec
dec
mov
sbb
jl
cmp
mov
mov
mull
and
adc
sbb
ljmp
imul
loop
cld
jecxz
rorb
test
lahf
in
imulb
mov
fcomip
jmp
adc
jp
gs
or
das
lret
sub
lods
sahf
fcoml
ret
aad
mov
cmpsb
je
aam
les
xor
repnz
jbe
mov
mov
push
ret
jmp
negl
icebp
pop
in
fs
cmc
decl
jb
cmp
out
adc
sub
mov
xor
outsl
push
cmp
push
add
faddp
aad
push
out
js
cltd
push
inc
rcl
ljmp
in
xchg
vpshlb
outsl
sbb
mov
test
xchg
sub
xor
test
call
mov
mov
adc
xor
push
mov
jge
lds
pop
test
pushl
cld
and
out
fwait
iret
push
jle
fldenv
lock
faddl
jmp
push
aaa
fstpl
gs
aas
icebp
ljmp
xchg
dec
lret
insl
pop
push
mov
adc
je
lcall
ss
stos
push
jl
enter
sub
push
adc
xchg
stc
pushl
push
hlt
int
sbbl
pop
adc
lock
jmp
and
jl
aaa
test
ret
sbb
jle
mov
lret
gs
hlt
jg
iret
daa
pop
cmc
inc
adc
and
sub
xchg
outsb
jmp
dec
iret
lods
xor
fwait
fwait
jnp
or
xchg
mov
in
and
imul
sub
je
push
push
add
call
inc
xor
mov
dec
fstpt
test
imul
sbb
xor
hlt
mov
sub
sub
or
test
pop
sub
orb
fstl
ja
pop
mov
mov
pop
cmp
xor
addr16
cmp
aas
hlt
push
pushl
add
rcrl
xor
aas
pop
ds
mov
sbb
out
std
xchg
mov
out
jg
jge
sbb
mov
mov
insb
inc
sbb
sbb
add
test
incl
mov
mov
lock
xlat
pop
pop
fadd
mov
daa
pop
lret
fcoml
add
or
out
cli
pushl
xchg
out
mov
aam
push
les
push
les
pop
stos
ds
and
push
outsl
push
push
std
mov
cmp
or
ss
or
sub
push
sysret
adc
lcall
incl
movsb
inc
pop
dec
mov
cmpsl
pop
loope
xchg
jb
sub
push
mov
push
dec
incl
lods
adc
scas
sti
lret
loop
and
in
int
cmp
fisubrl
pop
stos
out
inc
sub
jg
jmp
adc
dec
gs
cmpsb
and
stos
popf
dec
fmull
cmp
jnp
add
out
cmp
pop
lock
ror
sub
dec
inc
sarb
movsb
mov
lret
pop
call
jl
or
xor
subl
mov
sahf
sbb
ljmp
inc
pop
push
xchg
pushf
cmp
jle
cli
cmp
mov
scas
repz
mov
icebp
pop
pop
cmp
xchg
ljmp
pop
or
daa
mov
xchg
lea
jle
adc
jecxz
decl
inc
fldenv
icebp
aam
push
pop
stos
mov
mov
dec
popf
jb
and
mov
lcall
pop
cwtl
add
std
decl
outsb
notb
push
push
mov
cld
pop
rclb
jge
jg
or
out
xchg
and
mov
mov
jl
push
es
mov
lret
push
inc
pop
movsb
xchg
push
mov
leave
hlt
je
test
cmp
std
incl
pop
push
cmp
test
cmp
sbb
lret
jnp
adc
mov
jne
cmp
shll
jns
dec
sub
iret
pop
loop
inc
in
pop
xor
cld
pop
insl
xchg
lods
add
push
mov
cmp
adc
lahf
call
and
fnsave
ret
inc
sub
jb
sar
in
out
ljmp
add
icebp
mov
lret
mov
add
jge
fstl
cmp
xchg
repnz
mov
call
mov
xchg
jb
pop
mov
add
sbb
mov
nop
in
lock
jg
jne
xchg
xor
and
lds
mov
sub
repz
mov
lods
pushf
cld
test
or
rcll
out
fiadds
ds
shlb
out
clc
incl
mov
ds
pop
push
xchg
mov
enter
xor
lods
ds
lcall
jns
or
sub
fidivs
imul
stos
push
mull
imul
sti
and
mov
iret
popa
call
jne
cs
jns
in
adc
shlb
cmp
sarl
popf
mov
fnstenv
xor
mov
aas
inc
shl
add
call
das
adc
pushl
xorb
daa
xlat
lea
out
fldenv
fsubr
in
int3
xlat
jno
js
xor
add
push
mov
add
aas
cmp
pop
lods
cmpsl
xchg
sub
nop
cmc
movsb
and
pushl
mov
test
sahf
out
repnz
daa
mov
ret
lahf
mov
leave
ljmp
mov
push
xchg
dec
icebp
ljmp
mov
cmp
stos
sub
xor
push
decl
inc
out
ja
xor
push
lret
mov
imulb
incl
mov
es
outsb
lea
mov
mov
int
pop
mov
xchg
add
out
jae
push
mov
sbb
push
aam
mov
jg
call
aaa
lea
shlb
data16
ljmp
xchg
testl
aas
fcoml
pop
mov
call
pop
out
in
fwait
sub
dec
mov
cmp
mov
mov
fistpll
sbb
bnd
daa
shl
dec
jmp
ja
out
xchg
jge
cld
fmull
xlat
pusha
rcll
loope
add
test
in
sbb
lcall
cmpsb
aam
nop
cli
mov
xor
mov
popa
or
add
insb
std
filds
cmovle
pop
test
test
jg
dec
xlat
adc
pop
lods
stos
in
iret
icebp
adc
out
movsb
call
out
mov
add
jg
dec
add
rcrl
mov
stc
cltd
xchg
jle
jl
dec
or
mov
cmp
stc
and
popa
and
mov
pop
in
xchg
xor
sbb
mov
inc
repz
fwait
data16
sbb
and
adc
xor
push
and
cmovb
jmp
adc
dec
jo
int
dec
and
push
jl
fcomps
sbb
jns
lock
mov
decl
jle
ds
cmp
addr16
inc
mov
cli
pop
xchg
outsb
sbbl
xchg
mov
cmp
in
cltd
adc
and
mov
xchg
or
cmpsl
dec
xor
fsubl
das
and
xchg
mov
jo
jl
je
mov
shrl
pushf
xor
lods
pop
mov
scas
data16
cmp
dec
test
icebp
cmc
out
adc
cltd
jmp
ffree
mov
test
sub
or
dec
xor
inc
dec
insb
add
repz
call
mov
test
sarb
xor
in
repz
and
hlt
xchg
adc
ljmp
mov
sub
in
mov
sub
lds
inc
out
test
mov
call
pop
or
inc
mov
loope
mov
out
mov
fsts
cmp
mov
cmp
adc
pop
addr16
push
movsb
mov
lock
fisttpll
std
ljmp
pcmpgtd
adc
push
and
xchg
inc
shr
jmp
nop
movsb
call
push
addr16
cmp
sahf
hlt
jmp
in
data16
mov
add
sahf
lods
lock
xchg
push
ljmp
sbb
shrl
imul
scas
scas
mov
leave
or
inc
push
lock
aas
mov
and
sbb
jmp
test
xchg
clc
lahf
jl
mov
call
cmp
sub
ljmp
add
int
testb
daa
mov
scas
sbb
icebp
xchg
xor
mov
jmp
dec
jmp
jmp
xor
or
and
fcmovu
pushf
lret
mov
decb
push
mov
or
lret
xlat
divb
adc
lods
push
lret
mov
decl
std
sub
jns
sub
fbld
sub
push
call
lea
lret
fists
pop
jecxz
outsb
shll
push
dec
inc
jns
mov
ja
shll
push
push
ret
pushf
sub
mov
or
cli
mov
das
push
push
dec
nop
loop
and
add
dec
scas
push
cmp
add
data16
movsb
fs
fbld
pushl
shr
adc
fwait
lret
into
cmp
xchg
popf
cs
loop
ja
pmulhw
jge
jmp
push
lret
cltd
inc
jmp
adc
pop
fsubr
dec
popa
addb
lods
mov
cmc
jbe
mov
in
pop
jns
mov
pop
pop
test
rcrl
mov
aam
scas
push
push
in
lea
std
cli
jle
dec
call
xor
or
test
pop
xlat
mov
jl
adc
lods
cmp
jmp
flds
test
out
scas
mov
push
jp
mov
lcall
sbb
xor
out
lods
sub
les
push
icebp
add
mov
incl
sub
out
and
jle
sub
fistpl
test
and
jnp
in
out
pusha
cmp
add
mov
das
clc
inc
mov
enter
push
stc
dec
stos
adc
lcall
adc
aaa
insb
ljmp
adc
sub
scas
mov
aas
jle
fs
ljmp
push
je
inc
jns
push
aam
mov
test
mov
and
pushl
mov
jg
mov
push
cmp
decb
in
daa
push
std
loopne
mov
cmp
add
gs
mov
mov
pop
jge
mov
mov
jg
sbbb
pop
or
xor
gs
fistpl
pop
xor
scas
fsts
outsl
call
sub
ljmp
inc
mov
lock
cmp
fnsave
insb
fs
decl
mov
mov
sbb
popa
and
mov
stos
jne
mov
ljmp
int
cld
test
cs
addr16
xchg
xchg
mov
stos
add
push
mov
scas
push
cltd
pop
jmp
mov
push
mov
mov
or
jg
jg
inc
lret
sub
call
adc
sub
loop
nop
add
inc
xchg
and
and
nop
mov
dec
pop
in
movsl
adc
ja
call
dec
cmp
push
sub
mov
mov
rclb
lock
cmp
fwait
outsb
js
sub
dec
ljmp
sti
adc
xlat
pop
inc
je
jae
add
push
jne
mov
mov
push
inc
add
cmp
push
mov
pop
xchg
jns
cmp
incl
fldl
jecxz
and
movsb
dec
and
mov
xchg
out
scas
sar
cli
jne
shlb
xchg
dec
int3
movl
lock
movsb
das
mov
ds
leave
in
mov
jnp
xor
stos
fadds
sub
cmc
sbb
es
out
cmpl
xor
fwait
scas
cmp
movsl
inc
daa
inc
hlt
mov
sti
ret
adc
call
sub
cmp
push
repz
add
insb
scas
pop
cmp
jns
pop
sbb
push
das
cld
cs
ljmp
and
jae
xor
in
dec
pop
adc
cmp
or
lds
lds
ljmp
inc
inc
pushf
sub
xchg
fcoms
mov
test
push
cli
jns
out
ljmp
jg
leave
jge
push
popa
fadds
dec
pop
cmpsb
jae
pushf
mov
cmp
inc
inc
ljmp
or
adc
xchg
leave
push
cs
arpl
push
push
mov
fsubrl
inc
mov
icebp
sahf
adc
stos
mov
dec
outsl
std
dec
je
lods
clc
lds
hlt
popf
push
je
scas
dec
outsb
sar
jmp
xchg
imul
jno
test
cli
pusha
xchg
pop
push
loope
pushl
dec
fldcw
scas
cltd
inc
cmc
outsb
cmpb
jae
out
es
pop
xor
or
int3
mov
dec
out
adc
dec
in
push
push
into
mov
outsb
mov
incl
movsl
call
sbb
mov
lcall
mov
test
int3
loopne
out
mov
test
bnd
or
pop
xor
push
jmp
jnp
add
inc
lds
and
into
cmp
add
pop
daa
fcoml
lcall
std
mov
or
mov
pop
pop
dec
cmpsl
cwtl
es
out
inc
mov
inc
inc
fdivrs
stos
and
lret
mov
cmp
in
pop
mov
jb
fcoms
enter
jp
inc
mov
lea
es
lock
imul
scas
jle
mov
and
dec
hlt
mov
jnp
dec
outsb
or
hlt
fst
and
jp
enter
jne
adc
add
scas
sbb
jecxz
jo
adc
lods
adc
lret
ss
les
jge
pop
scas
rcrl
cmpsb
int3
push
ljmp
popa
aas
loope
or
xchg
fiaddl
sbb
jmp
dec
or
lds
decl
sub
stos
mov
add
mov
pop
aam
and
pop
add
pusha
xchg
pop
adc
sub
lcall
movsb
inc
push
hlt
push
bound
cmp
mov
imul
aas
jne
test
je
popa
mov
cli
dec
movsl
je
cs
mov
or
inc
xchg
test
mov
iret
mov
jno
adc
ljmp
or
stos
jns
fdivrp
mov
inc
lea
jge
daa
adc
xor
test
stc
mov
fidivs
clc
pop
mov
dec
xchg
pop
hlt
sub
push
test
inc
sub
mov
jno
arpl
data16
call
arpl
push
movsl
bnd
mov
inc
or
sarb
sbb
decl
adc
testl
mov
mov
out
push
cld
test
xor
outsl
pop
cmp
inc
cli
cld
inc
pop
outsb
gs
ss
jnp
je
pop
into
jg
cmc
mov
sbb
cmp
das
div
or
mov
inc
cmpsl
into
jle
ljmp
clc
xchg
mov
xchg
loope
mov
inc
mov
ffree
in
lods
or
inc
push
fists
cwtl
jnp
xlat
adc
das
mov
or
lods
push
ds
cmc
xor
jge
inc
xor
lret
rorl
decl
inc
pop
cmpsb
mov
inc
in
sub
stc
lret
push
arpl
xchg
lods
flds
add
push
xchg
aam
in
inc
data16
movsl
and
pop
movsl
ljmp
jno
enter
add
fsubs
xchg
lds
mov
int3
adc
test
xor
test
or
test
pushl
sti
outsl
dec
cs
pop
mov
sbb
push
or
pop
jne
cwtl
mov
movsl
xchg
xchg
pushl
jl
xchg
ss
xor
ds
cmc
push
push
sub
dec
push
mov
call
decl
dec
mov
xorb
jg
mov
pop
fcoml
sbb
add
es
push
pop
mov
ret
add
nop
aam
mov
in
test
sub
mov
fcmovnu
mov
popf
hlt
add
imul
mov
add
cmc
mov
push
icebp
jl
lcall
cmc
out
mov
xor
loope
fsubrs
jno
iret
jmp
out
clc
pushl
test
push
test
mov
dec
sbb
loop
xor
std
adcl
jg
ljmp
ds
adc
mov
push
pop
cmpsl
xchg
or
decl
das
bound
iret
pop
jo
cmp
sbb
popa
std
cmp
shr
pop
mov
mov
inc
jno
add
cld
sbb
fisttpll
mov
mov
cmp
pop
lea
mov
pushf
aaa
xchg
mov
rcrb
ds
or
add
sbb
cmc
fsubl
dec
xchg
push
mov
movsl
mov
das
xor
lods
cmc
stos
mov
inc
lods
loopne
lods
hlt
pushl
cmp
jg
cltd
mov
mov
test
xchg
inc
push
test
cmp
ljmp
xorb
cld
sub
fadds
jo
push
xchg
int
repz
cmp
test
repnz
iret
stos
pusha
sub
inc
inc
jecxz
add
popf
mov
xor
mov
sub
dec
add
das
incl
jl
outsb
xchg
out
jmp
scas
mov
push
mov
arpl
inc
aas
out
test
leave
sarl
mov
mov
clc
push
push
ret
sahf
add
jmp
shrb
cld
xlat
test
in
xor
aam
cmp
or
xor
push
mov
aaa
stc
repnz
adc
int3
fisttpl
shlb
fisubl
sbb
decl
mov
mov
ljmp
mov
test
das
xor
xor
iret
dec
sbb
push
shrl
mov
jmp
je
jg
xlat
aas
push
sarl
test
lds
insl
sub
dec
add
sti
mov
mov
std
fnsave
jl
bound
jge
or
dec
dec
sti
push
subl
mov
push
adc
xor
cmp
push
inc
dec
test
mov
jmp
rcll
sub
pop
sbb
and
cmc
cli
dec
mov
loopne
sub
decl
or
daa
or
movsb
loop
fbstp
fdivp
push
aad
cmp
ret
nop
repz
cld
mov
and
mov
or
inc
push
int
in
push
and
hlt
xor
adc
dec
fcmovnb
icebp
xor
inc
cmp
adc
jno
add
xor
cli
lcall
jnp
cmpl
inc
ljmp
push
aaa
cmpl
or
subb
call
lret
add
inc
xor
insl
xchg
and
loope
or
and
or
shlb
jae
cmpsl
inc
es
cmc
push
cmp
or
filds
mov
call
outsl
adc
sbb
cmp
fsubl
mov
mov
dec
jg
call
xor
jbe
dec
mov
pop
leave
cli
xor
push
cli
lcall
repz
mov
pusha
sub
je
mov
jmp
in
es
adc
mov
and
jl
xor
test
xchg
stos
lock
or
jno
insl
loope
movsl
mov
mov
in
mov
stos
mov
outsl
rcll
rcrb
outsb
nop
stos
mov
jle
pushl
cld
pop
and
fs
and
dec
insb
rclb
xchg
daa
call
call
adc
inc
push
repnz
movsl
pop
out
cld
push
xchg
sub
mov
js
mov
pop
and
push
mov
dec
mov
add
push
or
addr16
pop
std
scas
ret
lret
add
mov
hlt
push
jo
imul
ljmp
mov
cltd
or
mov
cmp
push
mov
inc
mov
incl
and
mov
and
cmpl
lahf
adc
mov
pop
mov
dec
mov
icebp
fxch
inc
daa
arpl
imul
jb
mov
in
push
mov
sbb
je
push
clc
ljmp
idivb
and
mov
and
mov
cmp
sbb
xchg
hlt
mov
xor
add
gs
push
out
sub
ja
mov
cwtl
out
xor
mov
fcmovnb
pushf
fdivr
ljmp
jp
cmpsl
dec
insl
repnz
sbb
das
es
aas
lds
cmp
call
and
dec
sub
xlat
popa
pop
inc
jo
dec
sub
xor
inc
push
push
jb
ss
push
hlt
sbb
movsb
xor
mov
push
jno
stos
aam
or
icebp
out
mov
adc
outsb
xchg
mov
inc
data16
and
inc
das
cmp
ret
add
decl
lock
pop
mov
cmp
inc
movsl
jbe
pop
or
xor
fmul
out
roll
mov
sbb
out
int3
mov
out
mov
xlat
lea
pop
jg
sub
clc
scas
mov
jns
jg
ficoms
inc
push
icebp
js
mov
mov
or
lret
mov
incl
xchg
lds
dec
call
outsl
pop
sbb
les
dec
adc
sbb
decl
ffree
aad
xchg
jns
jmp
or
cmpl
sbb
je
cmp
mov
sbb
jns
sub
sub
out
insb
cmpsb
and
mov
in
fisttpll
out
push
lea
loope
test
xchg
or
add
in
andl
leave
pusha
lock
incl
xor
mov
shl
pop
lea
jg
xchg
sbb
sbb
std
xchg
jae
test
roll
xor
dec
and
mov
push
cmc
pushf
loopne
mov
decl
decl
pop
insb
xchg
dec
jg
daa
xor
cltd
inc
cmp
sbb
push
cltd
xor
xchg
shrb
and
hlt
sbb
cmovne
add
clc
add
cmp
shll
mov
mov
int
adc
in
or
das
test
aas
lcall
lods
test
loope
and
mov
lret
aaa
adc
or
or
add
call
adc
dec
lea
std
xor
mov
mov
pop
sbb
adc
idiv
jmp
dec
sbb
mov
add
shll
inc
xor
std
xchg
dec
cmc
pushl
test
popa
sub
or
mov
sahf
push
jno
jne
xchg
in
jno
int
xorb
pop
pop
je
xor
pop
cmp
sahf
jg
or
cmp
in
aad
rorb
cld
mov
mov
jl
fwait
cmpsl
dec
fsubrl
cmp
or
jl
popa
pop
popf
cmp
and
inc
mov
ljmp
rcr
arpl
xchg
xchg
jbe
mov
test
mov
push
arpl
cli
lcall
out
lcall
adc
push
lods
adc
lret
ljmp
adcb
int
stos
mov
and
inc
fbstp
js
cs
incl
cmc
adc
inc
and
mov
dec
lods
stos
jo
mov
loope
decl
mov
add
jnp
mov
das
out
add
and
jg
decl
popf
mov
mov
push
les
inc
int3
cmpsb
jne
icebp
xor
dec
jno
out
das
clc
jmp
mov
mov
in
mov
jo
and
cmpsb
ret
orb
pushl
xlat
jecxz
ja
lahf
cmpb
cmpsb
inc
loop
call
iret
js
mov
xlat
fnsave
sub
jge
or
sub
outsb
outsb
xchg
mov
or
sub
mov
enter
lcall
mov
add
call
push
xor
test
dec
popa
daa
dec
out
into
inc
ret
aas
or
loop
leave
xorb
cltd
cmp
inc
mov
xchg
push
fsubp
vpsllq
lahf
xchg
cmp
cltd
push
adc
sbb
push
mov
decl
inc
cmp
out
dec
gs
or
cmp
mov
jl
cltd
call
sbb
dec
mov
rorb
movsl
mov
or
das
mov
jmp
push
gs
inc
lcall
scas
fdivl
scas
loope
push
int3
pop
enter
loope
aam
xchg
imul
lods
sub
add
std
mov
dec
lcall
fildl
lods
push
loope
mov
jge
sub
and
jb
jb
ficoml
fimull
call
ja
data16
out
mov
mov
outsl
xor
mov
add
push
dec
stos
test
inc
dec
dec
outsb
xor
call
int3
std
out
sub
jb
fwait
adc
rcrb
sbb
push
in
xchg
mov
pushl
je
add
or
and
inc
stos
mov
mov
decl
sub
mov
inc
mov
push
dec
adc
hlt
in
xor
aam
ret
mov
lcall
repnz
push
pop
cli
daa
or
sub
sub
outsl
clc
xor
call
fcoml
or
dec
outsb
dec
and
push
jns
test
sub
sti
addb
mov
push
push
or
xor
and
ljmp
and
in
jl
repnz
notl
ret
xchg
cmp
into
inc
push
mov
into
pusha
testl
lcall
fsqrt
mov
jne
leave
adc
xor
enter
in
cmpsb
fists
decl
cmp
push
in
jbe
lret
dec
or
testb
cmp
mov
jecxz
pop
add
scas
imulb
cwtl
enter
int3
mov
ljmp
fstps
dec
aaa
inc
pop
mov
icebp
jmp
xchg
in
xchg
mov
xchg
pop
mov
lea
jmp
adc
ljmp
test
sub
sbb
mov
das
xor
icebp
xchg
cmpsl
ret
fs
cli
cld
ret
jb
and
jnp
int3
or
clc
incl
xchg
test
test
lret
pop
lret
jmp
push
cmp
nop
or
mov
push
loop
mov
adc
pop
pop
addb
and
call
sbb
ret
cmpl
and
inc
mov
sbb
add
jp
or
xchg
leave
push
fcoml
repz
lea
std
pop
sub
movl
sub
sbb
fwait
sub
imul
aaa
and
pushl
lock
mov
imul
inc
iret
cltd
fstl
lods
push
jg
pop
outsl
mov
sub
mov
sbb
add
mov
adc
dec
adc
aas
sar
incl
mov
pop
andb
adc
pop
push
cmpsb
leave
loop
outsb
xchg
and
mov
add
ljmp
dec
ret
cmp
sbb
add
call
pushf
mov
test
cmp
push
insl
int3
jl
decl
hlt
call
fldcw
sub
shrb
popf
fs
stos
cmc
sbb
pushl
insl
push
movsb
lret
push
sbb
jecxz
ss
pushf
mov
stos
rcrl
call
push
out
pushf
dec
add
notb
sbb
dec
rclb
sbb
lea
or
std
stos
pop
loopne
xor
rcl
ds
xchg
and
enter
xchg
or
sbb
jg
adc
into
loopne
cmp
mov
hlt
andl
sub
fcomip
in
push
ss
xchg
and
into
inc
cmpl
je
das
insb
pop
lcall
jge
sbb
mov
and
mov
xor
cmc
insl
leave
test
xchg
jbe
pushf
sub
cwtl
in
decl
mov
in
testb
or
jp
insb
adcl
sbb
mov
pop
lcall
negl
out
cs
mov
bound
aam
sahf
adc
decl
xchg
xor
pusha
mov
add
shl
inc
mov
lock
lret
push
mov
mov
std
mov
pop
xor
inc
add
push
xor
rol
mov
lds
decl
stos
add
dec
test
ja
out
idiv
lcall
dec
adc
dec
pop
in
addr16
lahf
fbstp
in
outsl
fisubl
jle
fs
stos
dec
leave
mov
sub
dec
loop
bnd
sbb
cld
sub
je
lcall
fs
mov
jbe
push
jg
rolb
xor
xchg
popa
add
push
push
stc
incl
andl
adc
add
fwait
pop
jge
sahf
add
mov
ljmp
push
cld
jbe
mov
push
cmpsl
rcll
je
pop
imul
add
fs
int
out
xchg
xacquire
in
test
push
or
repnz
pop
sarb
sbb
xlat
xchg
xchg
xchg
incl
pop
and
daa
iret
xor
aaa
dec
loopne
aad
xor
int3
cmp
cmp
aas
cmp
pushl
push
pop
std
addl
pop
sarl
push
in
enter
adc
test
dec
mov
aad
cltd
out
lret
lahf
xchg
das
xchg
or
dec
sub
mov
ds
jno
lock
loope
fldt
pop
addb
add
mov
push
mov
push
iret
jmp
mov
call
cmpsl
decw
and
dec
xchg
mov
ret
and
ljmp
test
frndint
pop
jecxz
mov
push
fs
pusha
rorl
xor
incl
cmp
inc
inc
dec
cmp
das
enter
mov
outsb
fisttpll
subl
test
or
and
sbb
fsubp
jne
push
cld
dec
pop
inc
in
xor
cs
jo
fwait
xchg
scas
repz
jmp
outsl
mov
pop
imul
and
pop
out
loopne
mov
jae
imul
jbe
mov
pop
loop
fisubrl
xor
mov
or
testb
xchg
dec
mov
es
clc
jmp
iret
shrl
xchg
pop
lock
cli
outsl
adc
dec
push
pop
or
jecxz
ret
xchg
cli
xor
dec
jp
dec
out
adc
mov
lahf
ljmp
fdiv
adc
ret
scas
pop
jle
sbb
sbb
cmp
jmp
dec
das
ds
mov
jmp
idiv
sti
adc
shll
movsb
push
daa
test
loop
js
repnz
add
insb
fsubl
arpl
dec
dec
jle
rcl
add
imul
ljmp
jns
push
test
xchg
and
jmp
xchg
divb
out
roll
jl
out
push
and
xor
les
incb
mov
sbb
outsb
inc
pop
xor
add
xchg
or
je
jp
mov
xchg
test
inc
xchg
mov
into
cmp
sub
lcall
xor
out
incb
in
jne
xchg
mov
ljmp
xchg
dec
inc
mov
pop
mov
test
cmpsb
int3
cmp
inc
lods
add
call
sti
mov
mov
add
push
xchg
iret
push
add
jns
or
sar
ljmp
scas
imul
cmc
add
xor
mov
xchg
sbb
jl
arpl
mov
mov
aaa
sub
adc
fcoms
pop
cs
jmp
cmc
fisttpll
rolb
loop
les
leave
cmc
bound
and
xor
decl
push
aam
out
jbe
pop
inc
in
push
cmc
cmpsb
inc
pop
mov
sbb
or
aaa
nop
aam
pushl
jmp
lret
loopne
fidivl
mov
mov
std
inc
adc
rorl
aas
xchg
and
std
in
mov
mov
pop
push
out
xchg
xor
lret
pop
mov
ret
mov
mov
inc
cs
sub
ja
mov
mov
dec
jo
and
cmp
jl
decl
inc
push
pop
push
test
clc
cs
das
xor
ss
test
dec
mov
in
call
xchg
xor
cmpl
xor
add
call
cmpsb
lea
enter
imul
es
in
out
pop
and
je
pop
imul
aas
int3
popl
or
imul
push
scas
fisubs
jmp
add
push
push
insb
dec
hlt
es
jmp
mov
je
pop
cmp
loop
mov
aam
insl
test
fistps
jg
xlat
xlat
stc
push
pusha
pop
cmpsb
adc
sbb
inc
nop
xor
dec
mov
popf
jg
insb
insl
cmp
imul
loop
movsl
adcb
mov
xchg
jae
cmpsb
scas
mov
adc
mov
adcl
icebp
call
ficomps
out
mov
shll
mov
lret
sbb
incl
int
xor
mov
js
mov
sub
scas
pop
pop
jp
incl
popa
in
jns
das
mov
sub
and
in
push
pop
mulb
jmp
pop
jmp
sub
sbb
push
addr16
cwtl
ret
lcall
pop
push
jp
test
shlb
test
ds
pop
pop
jno
scas
mov
mov
push
pop
push
jne
test
mov
bound
mov
adc
add
call
in
pop
rcrb
ds
inc
iret
int
cmpsb
sbb
das
jecxz
adc
in
jne
in
xor
in
repz
hlt
sti
fistps
lea
jbe
and
lea
dec
incl
jg
hlt
pusha
xor
xor
scas
cmpsl
rcrl
or
cmp
data16
in
dec
jp
aam
out
sbb
shrb
nop
xchg
jbe
push
mov
popa
or
je
dec
dec
inc
daa
xchg
gs
stos
add
ljmp
loop
ja
inc
fst
loopne
pop
shlb
or
sar
stc
scas
sub
lock
in
sbb
jmp
filds
aam
sbb
xchg
test
mov
xchg
movsb
xchg
outsl
lret
dec
add
std
mov
pop
xor
mov
subb
cmc
sbb
jnp
xor
inc
les
das
add
add
jg
jg
dec
sbb
repz
jae
and
and
lret
pusha
xor
mov
adc
jmp
loopne
scas
push
es
or
aaa
xor
or
or
jns
inc
bound
add
pop
in
jns
jmp
ljmp
clc
call
sub
jp
mov
mov
ret
sub
movsb
and
lods
out
in
popf
imul
cmp
pop
push
std
push
sbb
mov
js
push
or
sti
xor
insl
scas
push
xor
dec
daa
hlt
and
out
bound
inc
cmp
addr16
jl
das
sar
nop
scas
jecxz
inc
push
in
js
cmp
aad
lods
mov
outsb
idivl
call
dec
mov
enter
pop
xor
xor
pop
ret
ret
jg
or
inc
fbstp
test
stos
insb
add
jle
decl
mov
xchg
cli
fs
inc
es
orb
in
jp
lcall
or
jnp
sub
jg
adc
xchg
mov
mov
test
fdiv
es
aam
sahf
in
rclb
loope
lock
js
mov
incl
jo
les
and
sbb
sbbb
adc
in
xchg
scas
or
icebp
call
ds
mov
test
into
sbb
into
ljmp
jne
pusha
call
pop
pop
xor
rorb
pop
pop
and
aad
mov
sub
ljmp
sbb
mov
lock
push
insb
rcll
rcll
pop
jp
lret
push
std
jbe
pop
std
mov
mov
dec
ljmp
loop
xchg
lcall
ljmp
sahf
shll
inc
xor
pop
cmp
lock
ja
addr16
shl
outsl
add
inc
add
ljmp
cmp
mov
rorl
lock
neg
loope
xchg
sbb
cmp
cmp
incl
pushf
hlt
cmp
xor
push
shrl
scas
cmp
sub
jp
inc
pop
cmp
inc
subl
lret
mov
jg
fcomp
pop
testl
or
out
cltd
lods
call
adc
inc
call
add
in
xchg
mov
sbbl
incl
lret
cmc
sbb
xor
popf
int
imul
ja
pop
in
decl
in
add
sub
xor
xchg
sub
clc
add
mov
outsb
rcrl
pushf
or
ret
sti
mov
nop
push
lock
stc
pusha
jmp
sub
loop
jmp
arpl
mov
and
mov
inc
shlb
in
sub
int
or
test
or
inc
pop
cli
clc
mov
bound
ja
push
scas
push
scas
pop
into
leave
jbe
scas
inc
jle
or
cltd
frstor
test
jae
sarl
scas
jnp
sub
aad
pop
adc
jp
mov
or
cs
and
xor
xchg
out
das
into
outsl
cli
ljmp
xor
fisubs
mov
ret
xchg
and
jg
mov
jmp
hlt
loopne
mov
mov
xchg
lcall
add
addr16
mull
aam
sbb
stc
mov
incl
rclb
dec
xorb
push
jnp
fs
xchg
rolb
lcall
ljmp
push
or
inc
scas
cs
jns
test
sahf
movlps
push
call
or
clc
push
push
sbb
ds
dec
pop
lods
push
jl
dec
and
repz
dec
lret
pop
leave
arpl
cld
pushl
in
and
imul
add
xor
lcall
mov
nop
fcompl
ret
inc
pop
enter
push
addr16
jg
hlt
bound
decl
jns
movsl
cmpsb
add
pop
inc
movl
add
incl
mul
das
mov
add
xor
jle
movsl
mov
jmp
rorl
mov
addr16
xchg
cld
mov
pop
push
mov
sarb
and
lock
jmp
and
push
push
rcr
dec
insb
aad
adc
push
mov
ss
cli
mov
or
mov
xchg
rcrl
mov
jge
lret
movsb
mov
fdivl
nop
scas
sub
push
cmpb
pop
or
pop
pushl
or
mov
cwtl
fistpl
sbb
dec
xor
dec
repnz
aad
pushl
mov
pop
xchg
repz
cmpsb
movsb
push
sub
mov
outsb
outsb
mov
ljmp
mov
out
or
call
sbb
popa
nopl
mov
daa
mov
subl
cmp
jno
scas
lcall
mov
mov
push
ret
xchg
mov
outsl
push
les
mov
jecxz
lods
loop
push
xor
loope
inc
mov
xchg
or
repz
mov
mov
stc
mov
dec
ja
fcoml
cmpsl
xchg
pop
lock
aad
ficoml
call
push
ljmp
jmp
adc
pop
or
jle
sbb
ds
lcall
or
push
mov
mov
fldcw
mov
imul
out
xor
sbb
je
xor
xor
decl
sbb
ret
jp
or
aaa
mov
inc
push
adc
xchg
out
xor
enter
in
jmp
xor
jnp
imul
ret
pop
stos
aad
mov
cmp
and
add
jnp
mov
lahf
cmp
xchg
fs
ret
push
xchg
mov
add
sbb
call
pop
sub
xor
add
lds
mov
gs
jbe
cwtl
cmc
jns
ljmp
cli
mov
ljmp
fs
idivl
popa
mov
pop
mov
pop
mov
mov
fiadds
push
dec
mov
leave
pop
stos
pushl
mov
inc
mov
aaa
adc
push
push
mov
or
sarb
ror
push
call
call
and
xchg
mov
sti
mov
movsb
jne
mov
fsub
inc
call
dec
test
pop
jg
scas
push
loopne
in
rolb
addb
js
dec
sbb
ss
std
cld
pushf
nop
arpl
cmp
xchg
lcall
ljmp
mov
jecxz
mov
subl
lret
xchg
cmpsb
inc
fs
jl
hlt
call
cld
fsts
insl
lcall
test
ds
dec
cmc
lcall
decl
xchg
push
popf
push
shrl
pusha
dec
out
jg
inc
sbb
jmp
lods
push
mov
cwtl
call
lcall
adc
sbb
decl
gs
jbe
xchg
popa
xchg
in
out
or
jno
jmp
push
movsl
mov
pushl
cmpsb
jecxz
adc
gs
pop
ficomps
xchg
test
mov
enter
jbe
mov
ja
lods
or
dec
pushl
mov
out
mov
jb
jle
xchg
push
adc
xor
add
into
int3
mov
inc
pop
inc
adc
pop
mov
pop
pop
push
mov
sub
addr16
faddl
rorb
mov
shlb
xor
arpl
in
out
jecxz
mov
call
add
inc
dec
clc
sbb
test
adc
int3
jmp
popf
push
daa
jg
cmpl
sbb
scas
or
sub
mov
stos
cmc
subl
inc
xchg
jmp
rcrl
lret
jl
ret
mov
ffreep
jecxz
clc
mov
ja
inc
call
push
popa
inc
es
cmpsl
adc
and
movsb
cmpsl
das
inc
sbbl
movsb
fisttps
dec
ljmp
sub
aaa
aas
push
test
mov
dec
dec
xchg
sbb
adc
and
jnp
dec
add
and
ret
call
jb
mov
jle
stos
xor
mov
jmp
cmp
inc
cwtl
loop
lock
jle
les
mov
mov
and
ja
cmp
test
lret
xchg
or
or
mov
adc
out
outsb
and
popa
loopne
js
dec
jo
js
lock
mov
mov
into
dec
lods
lahf
pop
mov
lcall
imul
fnstenv
add
pusha
jp
xchg
scas
cmp
mov
call
xchg
icebp
inc
ss
es
jbe
stos
mov
in
add
pop
and
out
or
dec
nop
pop
pop
pop
fsubrl
fsubrs
push
and
lret
mov
call
repz
jno
std
clc
dec
mov
mov
movsb
ljmp
incl
repnz
pop
ljmp
mov
add
hlt
jg
sti
movsl
ror
cwtl
mov
imul
sub
and
adc
dec
push
xchg
push
cmp
mov
addr16
xchg
inc
xchg
cmp
push
clc
cmpsl
inc
jb
push
repnz
fdivrl
mov
repnz
mov
mov
aam
inc
sbb
mov
call
lret
lods
push
mov
ds
jmp
push
jb
push
popa
mov
mov
sbb
ss
mov
mov
fs
call
jge
mov
jle
or
mov
adc
ret
sbb
add
mov
pop
or
imull
lret
aas
and
outsl
cli
out
in
repz
outsl
mov
dec
leave
in
jns
sti
sbb
sub
mov
incl
ror
andb
insl
testl
adc
jbe
out
cmp
sbb
jle
jg
sti
inc
add
fistps
push
fnstcw
sub
lcall
movsb
ss
sbb
jns
sub
or
push
outsb
mov
xchg
push
das
clc
incl
sub
jno
int3
sub
sahf
arpl
xchg
mov
scas
mov
fcompp
adcl
cmpsl
mov
jmp
jg
push
out
mov
mov
mov
pushf
or
xor
mov
test
jmp
xchg
mov
iret
mov
or
pop
cmpsb
cmp
mov
xor
mov
pusha
filds
jne
out
xor
movl
rorb
cmp
sbb
incl
into
stc
mov
dec
daa
aad
ds
call
popa
stos
ret
incl
mov
aad
inc
call
int
xchg
fcmovnu
pushf
ds
inc
gs
dec
cli
ds
mov
pop
ja
mov
outsl
mov
je
adc
incl
push
pop
aas
call
push
mov
cs
testb
push
std
out
icebp
jg
rclb
sub
mov
xor
or
jb
sub
dec
xchg
inc
or
pushl
fwait
xchg
icebp
popf
push
sbb
add
dec
out
inc
cli
mov
adc
dec
mov
pop
stos
into
push
push
inc
jg
fcompl
dec
mov
into
xlat
add
xlat
in
cltd
jo
pop
or
jecxz
lock
clc
cmp
lret
jo
ljmp
lock
fdiv
sbb
dec
clc
aad
fidivs
fidivrl
mov
push
fstpt
sub
idivb
test
pop
xor
pop
sbb
popa
imulb
divb
fmull
popa
jae
divb
imul
inc
lea
lods
and
sti
loope
dec
xchg
rcl
xchg
jns
lret
movsl
mov
sahf
mov
call
pop
test
aas
push
mov
push
nop
test
out
leave
js
jge
repz
jmp
xchg
rorl
mov
out
jp
lcall
fwait
aaa
ljmp
mov
incl
jg
fiaddl
sbb
sahf
adc
and
jbe
and
fbstp
incl
daa
fs
bound
push
js
scas
xor
mov
mov
add
mov
pushl
in
sub
mov
andb
jle
cli
in
iret
add
in
mov
incl
mov
mov
ss
scas
fwait
in
inc
jg
jp
lret
adc
mov
pop
aas
shlb
mov
mov
arpl
fwait
dec
std
dec
dec
sbb
loope
int3
jl
mov
or
xorb
lcall
cmp
imul
in
xlat
subb
fidivs
out
imul
mov
xor
push
push
imul
arpl
pop
cmc
mov
pusha
pop
lock
loopne
lea
mov
iret
insl
ss
jge
int3
add
mov
xor
sar
je
xor
fadds
enterw
clc
push
push
mov
cmp
cmpsl
call
ret
jo,pt
mov
lret
ljmp
rorb
fisubrl
nop
aaa
push
mov
jmp
testl
mov
dec
lods
lods
call
or
movsb
loopne
mov
mov
inc
push
popf
dec
pop
aas
mov
push
mov
roll
and
add
decl
es
adc
adc
adc
mov
cltd
adc
push
daa
incl
in
outsb
testb
xor
sub
ror
or
mov
jnp
shrb
push
jno
ds
dec
jb
fsubs
mov
jmp
add
cmp
jg
addr16
sbb
jb
push
clc
dec
ret
push
sbb
addr16
movsb
or
cmp
call
jmp
fs
sarl
inc
or
ds
jmp
sub
xor
dec
ljmp
jne
mov
inc
es
jb
push
mov
jmp
in
je
sub
dec
ja
and
in
cltd
pop
scas
xchg
sbb
loop
imull
mov
mov
pop
fldl2e
pop
jge
call
rcl
sub
mov
adc
test
xchg
imul
dec
pop
mov
je
or
fsubr
movsb
insl
jns
fadds
loopne
push
sub
test
jg
mov
ljmp
sti
fisubs
dec
mov
xlat
xor
mov
pop
stos
push
push
adc
leave
jbe
imul
inc
frstor
loope
bound
fs
pop
mov
leave
or
mov
adc
arpl
call
lcall
sarb
leave
int3
sbb
out
mov
stos
andl
scas
cli
inc
loopne
lret
xor
jp
ret
lods
add
test
cs
xor
insl
xchg
clc
cwtl
rorb
mov
dec
pop
lods
fsubrs
push
jns
stos
fldt
sub
test
pop
call
pushf
sarb
dec
pop
push
mov
addr16
jns
dec
call
xor
incl
dec
mov
ret
push
sbb
lock
lret
dec
mov
loop
dec
enter
pushl
push
js
loop
push
mov
ror
test
fsts
scas
pop
cmp
xorb
pushf
inc
inc
fstp
xchg
inc
xor
gs
clc
fdivl
out
call
movsl
jl
dec
mov
nop
xchg
imul
pusha
sub
daa
stos
sub
pop
movsb
cs
repnz
jg
inc
xor
js
sahf
in
mov
out
add
neg
push
fs
out
mov
jmp
incl
cwtl
int3
les
xchg
loop
add
stos
push
mov
leave
ds
fildl
pop
int
call
mov
lcall
mov
pop
push
mov
and
pop
repnz
out
and
call
cmp
xor
sbb
jne
cmp
ljmp
ret
lret
loop
in
jg
lods
fs
pop
out
sub
mov
jp
repz
cld
jmp
xchg
inc
or
sub
push
int
imul
fwait
mov
cmp
adc
push
sub
rcr
arpl
push
out
mov
outsl
xchg
insb
cmpsb
cmp
add
call
ljmp
mov
sub
pop
rcl
lcall
mov
add
sbb
mov
aad
and
dec
lods
fsubl
fidivrs
jecxz
jmp
and
neg
sbb
jno
cli
add
mov
or
hlt
lock
mov
jge
ficoml
and
mov
or
rclb
mov
cs
incl
add
stos
mov
lret
test
ljmp
adc
jg
fidivs
or
aas
or
jbe
mov
decl
les
sub
lock
addr16
mov
xchg
mov
movsl
push
sub
das
clc
inc
rcrl
pop
insl
and
add
push
sarl
push
dec
push
sbb
cmp
dec
outsl
add
mov
lds
scas
xchg
or
mulb
add
mov
jl
lock
xchg
add
int3
insl
xor
incl
daa
es
outsb
bound
add
mov
jle
fwait
lcall
lea
inc
aas
std
dec
enter
mov
insl
push
dec
and
xchg
jae
adcl
pop
cmpsb
xchg
ret
int3
mov
mov
pushl
dec
ja
fldcw
add
sub
xchg
stc
rcll
cmc
cwtl
iret
xchg
dec
push
sub
dec
jns
cmc
cmpb
add
sub
lds
fistps
decl
or
and
fsubs
sbb
sbb
pop
lcall
jmp
push
outsb
adc
cmp
enter
sbb
or
mov
fcompl
ljmp
icebp
dec
mov
pop
mov
mov
xor
dec
xchg
out
jmp
les
jno
lahf
stos
mov
or
xchg
lods
lahf
test
add
mov
dec
shlb
mov
roll
out
rorl
mov
and
jmp
xor
addr16
subl
fidivrs
aad
adc
ret
lcall
mov
mov
add
cli
lret
mov
fdivs
stc
mov
add
mov
fisttpl
mov
ljmp
inc
daa
in
push
pop
jnp
push
cmc
cmp
test
fstpl
adc
outsl
out
call
lahf
or
stc
xor
pusha
loopne
mov
sub
scas
adc
mov
repz
cmp
or
pop
idiv
jbe
sahf
lret
and
incl
rorb
jno
int
cmp
lcall
cmp
jmp
cmc
sub
jnp
in
pop
or
pop
lcall
shlb
cmp
lods
dec
add
stos
insb
xchg
adc
test
pop
aaa
outsb
lcall
push
push
mov
mov
mov
push
or
add
call
inc
inc
and
imul
sarb
fnstcw
loop
cmp
pop
enter
js
decl
mov
and
or
inc
test
shrb
insb
push
test
push
lret
push
subb
jo
sub
lods
pusha
dec
les
jg
xor
jnp
inc
xchg
ret
dec
fisubs
mov
xchg
jmp
stc
out
or
es
cmp
push
popf
pop
inc
mov
sbb
sub
in
stos
cmpsb
lcall
push
pushf
jg
or
sbb
xor
hlt
popa
aaa
ja
nop
jne
jbe
jg
imul
mov
stos
call
adc
dec
fidivrl
mov
test
cmp
push
xchg
lcall
int3
pushf
jnp
adc
es
jns
push
adc
adc
and
imul
stc
add
popa
fstpl
xor
decl
jmp
loop
iret
in
pop
jecxz
and
pop
sbb
aaa
sbb
mov
outsl
enter
add
pop
push
add
xchg
sbb
es
inc
mov
mov
and
popa
call
inc
mov
js
jp
and
ss
sbb
out
loope
pop
jnp
xchg
inc
dec
mov
jecxz
sbb
pushf
cli
pop
jo
jle
add
lret
xchg
and
idiv
mov
cmp
cwtl
adc
jmp
and
cmpsl
sub
and
mov
or
incl
pop
cmp
xor
std
lahf
jb
fstl
dec
addr16
pop
jno
nop
xor
jbe
add
incl
add
dec
jnp
idivb
or
icebp
mov
cs
arpl
jo
ljmp
mov
xchg
xchg
bound
daa
mov
xchg
lods
cmp
popf
fcmovnbe
repz
mov
aad
fidivrs
adc
dec
roll
push
pop
xchg
in
fcomip
push
ret
xor
icebp
rol
loope
mov
fcomp
sarb
mov
les
cmp
add
into
jno
outsb
push
ficompl
insl
jns
lcall
jo
or
dec
iret
mov
cwtl
nop
add
dec
out
push
lods
adc
dec
add
ljmp
push
shlb
cmpsb
psadbw
and
fnsave
addr16
cmp
jg
mov
mov
movsb
mov
or
or
mov
cld
stc
sbb
fadd
xchg
movntq
or
or
sbb
dec
fs
mov
in
outsl
dec
imul
and
int3
pop
fidivrs
jno
pop
jp
mov
cwtl
or
cmp
and
out
add
ret
pop
adc
in
outsb
pop
jecxz
cmp
jg
xor
bound
inc
mov
call
pop
sub
lcall
repz
fs
pusha
push
out
fldenv
fbstp
sbb
inc
inc
incb
xchg
jle
jmp
stos
xor
insl
push
out
rorb
add
jo
xchg
fildl
aaa
push
mov
cmp
loop
pushl
push
scas
mov
sarb
in
add
or
das
ficompl
ljmp
test
pop
adc
popa
movsl
ljmp
inc
xor
test
sbb
mull
xchg
std
decl
push
or
jp,pt
push
pop
subl
add
dec
adc
push
mov
or
jg
loop,pn
scas
nop
dec
fistps
mov
inc
gs
sub
pop
out
mov
inc
and
cmp
loopne
mov
sbb
jmp
pushl
movb
jae
push
dec
add
gs
ja
inc
sub
mov
lock
dec
push
mov
leave
imul
or
and
cmp
cmpsb
add
cmp
repnz
xor
ljmp
test
call
jns
sub
jl
testl
ljmp
addr16
loopne
fcomps
loop
popf
popa
lcall
dec
jg
mov
jmp
cs
jb
cli
pop
gs
sahf
or
shlb
lret
fistpl
adc
jmp
leave
pop
test
call
sbb
or
in
out
mov
imul
movsb
clc
lcall
in
in
out
dec
scas
cmc
mov
fcomip
lds
out
jle
cmpsb
push
and
aad
cld
mov
xor
arpl
mov
jmp
lret
clc
int
adc
xor
dec
shrb
outsb
or
sbb
add
stos
jae
call
mov
adc
mov
lock
lret
push
or
jmp
and
je
jmp
add
cltd
dec
out
jo
fwait
cmp
sbb
adc
lods
jb
adc
mov
stc
ret
adc
pushl
int3
jge
inc
scas
cmp
jno
iret
jno
sbb
pop
es
incl
rcr
inc
inc
clc
aaa
push
les
xlat
push
cli
xchg
xlat
cs
pop
cmp
popa
sub
lahf
stos
and
out
lock
popa
push
sub
mov
fidivs
into
mov
aad
sbb
pop
dec
leave
shrb
sarb
sbb
jmp
push
xchg
mov
incb
hlt
mov
inc
dec
mov
add
jne
sbb
fcmovb
push
ja
and
imul
jp
sahf
adc
std
fisttps
lcall
or
out
js
popa
loop
push
mov
push
push
decl
xchg
fnstenv
inc
imul
sub
xchg
imul
pop
mov
incl
mov
pop
bt
fadd
fs
lods
jp
sub
fldlg2
mov
jmp
push
adc
divb
cld
pop
std
xorb
add
lcall
mov
leave
jmp
test
aam
std
sub
fldt
push
cli
incl
sub
imul
jmp
dec
fisttpl
dec
pushl
faddl
popa
ja
jb
cli
mov
jg
xchg
mov
out
pop
jg
pop
push
add
push
push
push
push
dec
movsb
sbbb
fisubrl
out
int
aaa
pop
icebp
stc
and
loop
and
call
add
fcomp
pop
sbb
decl
test
or
out
jae
fwait
jmp
dec
in
test
push
test
push
cltd
sbb
xlat
in
icebp
cwtl
jae
push
lods
shll
fmulp
popa
lock
filds
inc
dec
inc
insl
mov
test
mov
shll
jb
push
cltd
sub
nop
stos
ret
jbe
fcomp
loop
fdivl
cmp
mov
jmp
sbb
sub
pop
dec
pop
inc
movsb
aas
jbe
xor
or
inc
stos
adc
decl
out
xor
xor
pop
in
push
in
cmpsb
inc
dec
fldt
fwait
clc
push
mov
out
clc
pushl
jae
jo
sub
cmp
dec
int3
cs
inc
pop
xchg
pop
sti
push
xchg
lcall
test
and
and
hlt
ficomps
test
add
cld
cmovne
push
mov
mov
cs
mov
mov
clc
inc
xor
mov
push
ds
insb
scas
filds
and
push
sub
ret
sub
cltd
mov
addb
lea
pop
jl
cmp
test
sti
cli
test
jno
mov
jg
lret
lods
xor
jo
mov
xor
in
cmp
aad
stc
inc
bound
xchg
add
jmp
xor
incl
sub
in
ds
xlat
loopne
decl
stos
shr
push
popf
lcall
out
fidivs
mov
jmp
or
in
mov
int
xor
int3
sbb
mov
push
lret
add
dec
add
decl
lock
hlt
push
fisubrs
insb
cmp
mov
sar
cli
stc
xchg
mov
mov
mov
addr16
mov
mov
or
lock
add
ljmp
pop
mov
add
ja
lods
sti
cmp
cmp
hlt
nop
xchg
pushl
add
mov
mov
pop
sti
sub
aas
mov
adc
cmpsb
sub
cmp
das
inc
mov
incl
push
sbb
mov
and
cmp
push
mov
in
dec
stc
ja
fdivrp
ljmp
adc
cmc
movsb
stc
scas
aam
int3
lret
xchg
ret
dec
shlb
mov
aam
inc
xor
xlat
fcomip
jmp
popl
xchg
fwait
fs
mov
in
into
jle
repz
ja
jg
add
jnp
dec
cmp
sbb
lds
inc
leave
cli
mov
testl
sbb
xchg
xchg
sub
dec
movsl
mov
add
xchg
mov
sbb
incl
adc
inc
movsb
dec
jnp
fldl2e
xor
inc
xlat
cmp
mov
pop
cmc
and
shrl
dec
js
stc
mov
fbld
inc
jmp
in
insb
dec
sub
pop
push
adc
test
or
rorl
idivl
pop
mov
pushl
cmp
jge
and
mov
mov
pop
or
pop
fcom
outsl
mov
lret
decl
call
sbb
data16
and
jnp
dec
fwait
add
mull
adc
jmp
aad
or
call
jl
pop
gs
mov
sbb
ficompl
fwait
jno
mov
adc
movsb
inc
lock
aas
push
jmp
mov
sbb
mov
imul
jg
dec
jecxz
shlb
pushf
shlb
push
mov
pop
mov
push
mov
push
test
jmp
cmpsb
jl
pop
dec
pop
jmp
inc
into
popf
xchg
jae
pop
mov
cmp
mov
pop
push
out
incl
or
outsb
adc
add
dec
in
mov
sbb
mov
iret
ljmp
out
add
xor
pop
pop
and
jmp
aas
scas
sbb
ljmp
dec
mov
and
scas
decl
hlt
fistl
pusha
xchg
sub
pop
dec
pushf
stos
add
decl
adc
mov
adc
dec
mov
sub
stos
pop
idiv
decl
test
and
into
xchg
jns
repnz
lret
push
cli
or
inc
sti
hlt
int3
mov
cltd
ret
in
incl
into
jle
sub
or
cli
add
ds
sar
jns
rclb
mov
mov
lods
push
and
push
mov
and
xchg
inc
stc
loopne
fmull
mov
cltd
mov
pushf
inc
hlt
pushl
cmp
pop
popf
sub
inc
repnz
push
std
or
insl
shrl
fisttps
mov
popf
or
nop
inc
cmp
jae
jmp
sbb
jg
movsb
insl
or
pop
fwait
xor
ret
mov
les
outsl
fstpl
jmp
fs
movsl
xchg
or
adc
jnp
mov
cmp
les
pop
in
jg
pushl
outsl
ljmp
sub
in
cltd
out
lea
in
mov
push
push
cli
jmp
cs
sti
inc
aam
sbb
fcoms
jmp
mov
xchg
pop
jnp
sbb
adc
enter
incl
inc
sahf
push
adc
pop
dec
das
jb
andl
scas
mov
xor
sub
inc
lods
in
incl
cmp
insb
lret
xor
insb
call
mov
lret
and
aas
aas
dec
stc
push
mov
add
push
push
xor
insb
jmp
cld
inc
decl
sbb
pop
add
pop
test
fdivrs
in
icebp
es
incl
je
inc
outsb
and
fnstsw
mov
int
cmp
into
mov
sbb
decl
push
add
jbe
sub
pop
push
lcall
rol
bound
in
sub
daa
in
call
pushl
scas
push
mov
popf
dec
aaa
pop
jl
mov
fildll
pop
out
or
pushl
cwtl
lods
test
icebp
sbb
xor
lret
xor
pushl
stc
dec
addr16
cmp
data16
mov
xchg
add
ret
mov
aas
pop
cmp
dec
js
inc
int3
fldcw
sahf
lea
imul
adc
push
mov
adc
dec
into
std
xchg
push
push
rorb
decl
idivb
aam
mov
xor
addr16
inc
inc
add
outsb
mov
lock
negb
pushf
cmp
js
or
mov
icebp
insb
lcall
cwtl
cmpxchg
mov
lds
movsb
cmpsb
xchg
testb
movsb
js
dec
call
and
sub
mov
mov
imul
xlat
out
and
xchg
mov
dec
cmpsb
stos
test
sbb
stos
xor
add
mov
jno
ljmp
xchg
or
jp
je
cmp
lock
ret
xor
pushf
hlt
jbe
cmp
incl
dec
mov
xor
xchg
mov
dec
mov
call
pop
jle
cmp
aaa
mov
ret
ja
cmp
push
rcrb
shlb
pop
hlt
inc
stos
std
add
and
stos
fs
jns
aas
push
lret
lock
call
out
lock
sub
dec
stos
and
pusha
mov
clc
outsl
push
adc
push
loop
mov
fadd
and
pop
adc
shlb
add
or
push
outsl
clc
incl
insb
xchg
stos
fistpll
stos
sbb
clc
in
mov
ss
inc
cwtl
mov
pop
xlat
out
int3
ljmp
inc
lea
in
push
dec
mov
xor
leave
jp
sbb
scas
dec
fimuls
lea
and
cld
or
cmp
pop
add
addr16
sub
inc
fs
out
clc
inc
and
cmpsl
insl
into
and
mov
out
or
add
sub
sbb
pop
jmp
out
hlt
or
pop
aaa
fnstsw
sub
sbb
cmp
dec
xchg
in
in
xor
aas
jmp
pop
mov
cmc
push
add
and
xor
mov
xor
rcll
push
mov
cld
cld
dec
loopne,pt
pop
loopne
popf
fldt
imul
fsubp
insl
movsb
ss
inc
sub
sbb
in
cli
je
aad
jo
test
ss
xchg
mov
sbb
clc
clc
mov
pop
gs
in
mov
xchg
xchg
aas
xchg
mov
push
xlat
sub
cmp
stc
mov
push
ficomps
mov
mov
mov
and
mov
adc
ljmp
jb
cli
and
mov
sti
mov
je
jnp
loopne
or
mov
ds
jmp
push
push
ret
iret
rcrb
shlb
mov
or
adc
push
outsl
xlat
in
ljmp
and
cs
fdivrp
fcomps
movb
lods
dec
lds
mov
cmp
adc
add
iret
pop
dec
ja
andb
mov
fimuls
loop
ljmp
std
clc
adc
fwait
mov
sub
mov
fcomip
sub
add
xchg
shrl
in
loop
mov
aaa
xchg
mov
sbb
xor
mov
sub
push
movsb
jp
xchg
sub
das
loop
test
stos
notl
xor
mov
ljmp
mov
adc
repz
call
aas
adc
repnz
daa
aad
dec
xchg
and
fimull
mov
mov
mov
sbb
jmp
repnz
lods
jl
or
pop
xchg
cmp
pop
sub
jmp
pop
sub
ljmp
out
cmp
lahf
mov
out
hlt
inc
pop
hlt
xlat
adc
sbb
xchg
cmpsb
lods
jge
sub
lcall
imul
sbb
mov
insb
inc
insb
mov
adc
add
and
incl
mov
mov
shrb
inc
xlat
outsl
rsqrtps
repz
push
cmp
jg
and
xchg
fiadds
mov
and
test
js
pop
es
xchg
lcall
iret
js
lea
mov
adc
scas
mov
bound
cmp
push
jge
pop
dec
add
fxch
pop
pop
xor
adcl
cwtl
pop
cmp
decb
xchg
sub
cld
ja
bound
adc
cmp
mov
jp
movsb
push
repnz
cmp
scas
lahf
pop
jle
cmp
xchg
cmp
pop
mov
mov
lret
inc
add
cmp
xor
inc
sub
pop
cmp
sar
sub
cmp
stc
adc
les
xorb
mov
cmp
xchg
out
dec
in
scas
cli
xor
incb
mov
jg
out
sub
popa
jo
mov
ret
test
pushf
mov
cltd
and
mov
lcall
add
ljmp
cltd
scas
movsl
fwait
pop
xor
shlb
loopne
mov
cmp
fists
div
inc
sahf
cmp
dec
sbb
ljmp
and
in
aaa
push
mov
fiadds
mov
push
sbb
scas
push
and
int3
jg
sbb
mov
outsb
jmp
lahf
jg
inc
push
jno
int3
divl
cmpl
test
inc
lcall
out
push
mov
dec
jle
insl
scas
mov
xchg
pop
cmp
inc
xchg
xchg
mov
sti
inc
and
xchg
fldl
jecxz
xchg
adc
dec
push
shrb
enter
in
mov
enter
jmp
xlat
xor
mov
inc
test
in
test
and
shrl
mov
jmp
pop
nop
mov
push
ficompl
into
cmp
leave
lcall
mov
inc
outsb
mov
insb
dec
push
lcall
call
cmp
inc
mov
je
adc
ss
inc
icebp
outsl
or
mov
outsb
pushl
add
cmp
adc
call
mov
cltd
sahf
daa
and
push
stc
dec
adc
mov
fisttpll
imul
filds
lds
shrl
inc
push
test
push
mov
lret
imul
das
pushaw
les
mov
mov
xchg
je
fldcw
fcomip
call
ret
xchg
or
dec
jae
cmpsl
ret
icebp
cmpsb
aaa
xor
pushl
rorb
rorb
iret
iret
add
js
mov
icebp
mov
rcrb
sbb
call
xchg
outsl
pop
lahf
adc
cmp
xchg
in
xchg
jo
arpl
dec
jne
mov
incl
clc
movsb
cmp
arpl
push
lahf
dec
push
cld
xor
loope
fisttps
int
mov
mov
mov
ret
mov
test
imul
incl
xor
jno
jo
mov
and
inc
adc
add
mov
ljmp
aad
roll
sub
push
sbbl
cmp
mov
cmp
cmp
cmpsl
aad
add
sahf
inc
and
or
je
into
fdivr
and
incl
sti
push
outsb
fisubs
lret
lret
fwait
inc
mov
test
ljmp
es
sbb
sbb
hlt
cmpsb
pop
pop
xchg
or
ret
iret
in
lcall
jle
inc
xor
sahf
add
sbb
push
jbe
adc
cld
jg
pop
out
cmp
sbb
inc
jne
out
loopne
and
bound
decl
lea
outsb
and
cs
movb
decl
out
sbb
scas
cmpb
aaa
pop
mull
add
xor
outsb
and
hlt
mov
mov
out
fwait
mov
enter
fdivrl
jnp
or
xor
cmp
jb
inc
or
xor
adc
pop
lret
call
scas
aad
int
push
lcall
or
mov
in
ret
fmull
push
pop
inc
inc
inc
mov
inc
sar
fistpll
push
inc
test
mov
mov
int3
leave
adc
mov
mov
cmp
or
icebp
roll
and
fiadds
jg
movsl
sar
ljmp
pushf
ret
xchg
or
scas
in
push
sahf
xor
push
cmp
jg
or
sbb
jecxz
and
cmc
and
push
push
inc
iret
and
incl
jnp
aas
mov
shrb
cld
adc
pop
mov
jne
mov
sub
add
xchg
cmp
pop
jg
pop
or
add
mov
sbb
mov
xchg
cmp
push
mov
call
jne
lret
iret
fistps
sub
fwait
adcl
ljmp
out
imul
std
push
or
and
cmc
jne
ss
push
push
sbb
mov
dec
adcl
or
xor
popa
xor
cmp
and
rclb
call
push
xchg
mov
popf
cmp
xor
mov
mov
mov
mov
push
push
inc
dec
sbb
sub
push
imul
xchg
dec
add
ljmp
fistl
sub
sbb
sbb
leave
mov
int3
int3
adc
pop
daa
test
jb
jg
sar
fbstp
mov
test
cmc
cmpxchg
push
loope
fsin
sub
xor
lods
lock
ret
inc
xor
mov
jle
ja
jmp
pusha
cmp
lock
sub
xor
xlat
dec
pushl
andw
ss
adc
and
or
js
pop
adc
xchg
push
jnp
shll
add
jo
mov
cmpsl
cmp
push
jno
mov
incl
pop
cmc
out
adc
addr16
ljmp
cmp
jne
push
iret
inc
add
pushl
loope
and
adcb
lret
fdivrl
cli
or
jl
incl
out
jnp
xor
and
sti
xchg
jmp
pop
ds
adc
cltd
lds
lcall
and
lods
or
rep
inc
mov
jg
push
in
stos
outsb
cltd
loopne
xchg
mov
push
jbe
pusha
ljmp
add
imul
vmread
fs
jns
pop
scas
scas
xchg
shrb
pop
out
lcall
adc
mov
pop
pop
add
pop
dec
rcl
fwait
push
mov
fistpl
ljmp
jnp
leave
mov
inc
movl
mov
cmpsl
or
inc
push
cwtl
lcall
cwtl
lock
dec
je
jmp
pop
xor
popa
adc
adc
sbb
addb
ljmp
vmwrite
lods
rorb
pop
xor
and
jge,pn
cmc
pop
cmp
pushf
lahf
mov
daa
sbb
and
stos
push
mov
aaa
sbb
dec
inc
lods
fstpl
cmp
fcomip
and
mov
mov
lret
insb
adc
enter
mov
mov
ss
add
lcall
sub
push
outsl
addr16
dec
repz
call
mov
and
aas
cmp
push
pop
ljmp
outsb
pop
addr16
jbe
mov
enter
call
or
jb
inc
jge
lds
sbb
push
xor
inc
pusha
movsl
jbe
fistl
lcall
jns
pusha
mov
outsl
cli
decl
and
insl
mov
bound
in
outsl
cmpsb
jne
hlt
into
jle
rolb
popa
mov
or
sbbl
cmp
int
jle
movsb
push
out
fbld
sbb
lods
dec
mov
das
and
scas
lcall
cltd
push
dec
int
enter
and
lds
das
cmp
hlt
enter
testb
jmp
mov
pop
adc
out
sbb
mov
mov
mov
cli
aas
fldl
sar
call
movsb
in
das
and
push
add
xor
loope
cli
mov
fistpll
mov
pushf
popf
pop
call
aas
mov
dec
aad
ret
pop
fmull
jg
lcall
orb
lcall
jp
and
mov
loopne
in
mov
lret
fcmovb
pop
test
xchg
fisttpll
sti
mov
pusha
fldt
mov
pop
rcl
and
xchg
scas
scas
cmp
mov
mov
mov
jmp
jnp
iret
cmpsb
leave
jns
sub
decl
mov
jge
jmp
cwtl
mov
cmpsl
lock
loopne
call
xchg
cmpsl
and
aam
mov
mov
out
in
jle
cmc
nop
subb
stc
jnp
inc
pop
xlat
cmpsl
sbb
loopne
dec
xor
pop
pop
jg
cmp
jecxz
test
xor
push
mov
jnp
addl
xchg
xor
mov
adc
pop
scas
push
ja
lods
or
hlt
cmpsl
inc
cld
call
xchg
add
es
mov
jg
jg
push
shl
inc
cs
cmp
xor
and
mov
scas
decl
addr16
aam
repnz
mov
jb
arpl
cmc
mov
nop
insl
lret
jp
fldcw
fs
jecxz
out
mov
jg
cli
cmpsl
mov
out
xchg
fidivrl
mov
push
rep
int
and
add
clc
out
or
inc
adc
inc
push
xor
fdivrs
int3
inc
add
inc
js
mov
or
sti
xchg
jo
jmp
pop
jp
add
adc
test
add
mov
xor
gs
push
gs
call
je
int
mov
dec
mov
ds
push
mov
xor
in
add
jmp
call
and
lahf
in
sbb
jg
cmp
and
orb
fstps
jns
fidivrs
jmp
adc
and
fdivs
js
pop
inc
int3
mov
push
sbb
pop
daa
jae
pop
imul
das
cmp
js
inc
aam
adc
sub
push
adc
push
inc
add
out
daa
mov
rol
hlt
test
and
cmc
movsl
sbb
incl
mov
push
loopne
pop
add
xchg
iret
mov
in
fwait
out
mov
add
xor
sar
ljmp
test
inc
pusha
jne
andb
pushl
lret
push
xchg
jb
adc
mov
ja
xchg
andl
push
xor
sub
jns
decl
pop
aam
mov
out
jae
sbbl
movsl
or
and
or
sarb
xchg
push
mov
push
dec
sahf
leave
push
cld
aaa
dec
push
pop
fdivrs
nop
sub
dec
fwait
iret
fcompl
clc
sbb
jo
dec
test
mov
andl
cmp
push
fisttps
dec
in
add
push
ds
cmp
das
lea
repnz
add
ja
dec
xchg
loopne,pt
call
and
fninit
test
xor
and
xchg
adc
ljmp
rclb
fistl
dec
pop
mov
loopne
pop
call
sbb
imul
call
sarb
mov
cmp
mov
lret
repnz
ljmp
sub
pop
stos
cli
and
dec
int
ljmp
jge
test
mov
scas
and
ret
mov
sbbl
mov
xchg
pop
cli
stc
stc
mov
pop
xchg
lcall
push
xchg
fildl
push
mov
pop
fsincos
fstpl
test
nop
inc
jecxz
adc
push
addr16
dec
or
movl
or
lahf
mov
dec
rcrl
lods
lock
push
jp
call
add
pop
sbb
xchg
test
jns
cmpl
ret
dec
or
push
push
in
adcb
aad
jae
ljmp
fcoms
lods
lret
push
lcall
fimuls
orl
ret
jle
std
dec
cmpsl
inc
xchg
jno
cli
mov
adc
enter
xchg
in
mov
call
cmc
fstl
push
sub
repz
jge
xlat
shrl
add
pushf
bound
sarb
jmp
dec
out
decl
out
js
ds
mov
inc
jg
inc
popa
or
incb
imul
incl
hlt
add
sub
rcl
lds
cmp
mov
scas
loopne
call
int
notl
cmp
or
stos
aaa
das
std
insl
xchg
call
dec
mov
xchg
mov
shll
sti
outsl
ror
or
stc
mov
mov
mov
jmp
test
clc
gs
cmp
pop
xchg
xor
jae
int3
iret
leave
xchg
jnp
pusha
lea
inc
fistl
filds
add
inc
sub
inc
fs
ret
fbld
movsl
xor
int
sub
pop
adcb
bound
lods
inc
add
popa
xchg
loope
fcomip
jmp
jbe
sub
cmpsb
ds
sub
movb
decl
add
sbb
cmp
adc
cmp
xor
enter
jecxz
and
call
outsl
xor
fidivs
push
popf
jg
and
addr16
and
rcr
in
incl
loope
sub
lods
mov
jbe
mov
ret
ss
xlat
pop
cltd
leave
lcall
ds
push
call
gs
mov
push
push
sub
jecxz
xor
jmp
imul
out
and
cwtl
out
andl
daa
pushl
insl
or
xchg
push
aaa
ljmp
fwait
cli
adc
testb
dec
cmpsl
dec
enter
add
mov
lods
mov
fimull
push
sbb
pushl
xor
repz
negl
xorb
pop
jns
into
xor
std
jae
lods
int3
and
adc
add
xchg
jo
or
aaa
hlt
adc
xchg
push
lock
lea
insl
sbb
jo
xchg
aaa
xor
roll
adc
sar
jmp
and
enter
push
and
adc
addr16
and
divl
popf
nop
mov
cli
shl
ljmp
loope
iret
xchg
lods
add
pop
fwait
sti
inc
ret
imul
push
pop
out
jb
push
push
cmp
into
inc
jmp
sarl
gs
mov
in
dec
cld
mov
push
or
ja
adc
mov
test
test
ret
in
shl
ljmp
mov
add
dec
jno
xor
push
xchg
test
or
in
xchg
lds
xorb
rcll
or
xor
mov
cld
call
imull
incl
lds
or
loope
cs
ljmp
xor
lea
push
icebp
pop
outsl
push
jecxz
mov
mov
movsb
mov
push
arpl
aas
push
icebp
mov
xchg
imul
lcall
sahf
xchg
nop
addr16
in
push
and
loopne
xor
or
cli
mov
orb
test
ljmp
pop
lret
in
popf
pop
outsb
hlt
inc
sub
outsl
insl
in
pushf
add
fstl
push
std
and
repz
inc
movsb
cs
mov
rorb
dec
xor
jp
negb
inc
pushl
xor
popa
cmpl
ja
fs
scas
outsb
lods
leave
add
xor
fsubrs
fs
xchg
sub
gs
push
bound
popf
mov
sub
cmp
cmp
dec
cltd
pop
std
xor
loop
lahf
pop
sbb
call
mov
jae
lock
les
xor
in
pop
push
jmp
inc
stos
iret
cli
mov
xor
ss
cltd
jg
add
dec
or
add
test
scas
fiaddl
clc
mov
mov
inc
loopne
dec
into
lahf
and
decl
dec
roll
cmp
out
mov
mov
jne
sahf
xlat
dec
jo
xor
cmp
decl
cmc
dec
xchg
ds
xchg
loopne
and
pop
fnstenv
icebp
iret
sbb
movsb
sub
fists
test
adc
jecxz
leave
ss
xchg
or
jmp
or
sbb
mov
jmp
scas
cs
daa
jns
sbb
sbb
es
xor
dec
mov
insl
inc
inc
add
mov
pushl
daa
es
adc
push
arpl
pop
lods
or
mov
movsl
jnp
sahf
imul
ljmp
rolb
loope
movsb
bound
dec
call
mul
ret
pop
mov
in
fwait
sub
call
jmp
inc
mov
inc
sbbl
adc
mov
cwtl
out
lock
dec
and
xchg
decl
scas
add
lret
pop
sbb
inc
inc
out
call
sub
cltd
or
mov
mov
cwtl
stos
xchg
or
mov
or
lcall
cs
mov
add
jo
fildl
jbe
mov
mov
mov
pop
jge
jmp
mov
inc
cmp
dec
push
xor
mov
mov
pop
loopne
mov
das
or
push
je
clc
pop
pop
rolb
popa
pop
or
xor
lcall
es
data16
pop
js
hlt
rcrb
jbe
sub
cmpsl
pop
adc
decl
jge
jle
ljmp
pushf
insb
xchg
xchg
pop
pop
in
sbb
fmul
xor
cmp
mov
stos
notb
lods
adc
cld
push
dec
lret
xchg
outsb
fcomip
lcall
aam
push
dec
repnz
xor
add
push
cmpsl
sub
incl
cld
mov
dec
call
fistpl
cmc
fldl
ljmp
and
sub
sub
lods
addr16
loop
dec
rclb
shlb
or
ljmp
shlb
or
jmp
cmc
out
loop
in
js
adcb
cmpsb
insl
filds
pop
pop
jmp
les
push
mov
dec
js
loope
sub
xor
fbld
loopne
notb
ror
pop
jmp
rcrl
inc
xchg
cmp
jecxz
sahf
cmp
pushl
jne
pop
es
loop
and
mov
mov
subl
lds
sub
add
inc
rcrb
sub
js
jbe
mov
xor
rcrl
outsb
xor
incl
ds
fildl
mov
out
pop
lods
add
mov
sub
enter
xchg
or
incl
in
icebp
out
mov
leave
das
xchg
jnp,pn
push
test
leave
inc
sbb
mov
jg
mov
lcall
test
dec
notl
mov
adc
out
ja
cmc
mov
incb
dec
or
lret
idivl
sbb
stos
pusha
inc
ret
pop
je
call
push
cmc
cmp
pop
lods
inc
xor
mov
mov
cmpsb
xor
ret
dec
lods
into
bound
mov
pop
pushf
add
in
lock
call
mov
ret
popa
add
inc
xor
int3
adc
stos
jne
or
mov
incl
ret
lds
ljmp
test
mov
cmp
jg
iret
sbb
and
mov
fimull
jg
cmp
inc
inc
and
add
or
incl
ds
psubusb
cli
ljmp
push
test
lret
ret
lea
call
outsl
inc
cmp
mov
push
pop
pushl
dec
cmpsl
jns
xor
int
jecxz
inc
sbb
cmc
incl
fistpl
xchg
shrl
pop
cmp
les
push
std
ljmp
sub
inc
lret
jg
leave
std
fldenv
rolb
xchg
and
cmpl
fs
lods
xchg
sbb
dec
fxtract
out
cld
ret
aam
incl
push
imul
mov
jae
nop
repz
out
mov
pop
pop
cwtl
xchg
dec
pop
dec
popl
xchg
inc
jo
jne
aas
shr
fucom
sbb
pop
daa
mov
in
std
add
push
jmp
sbb
sbb
mov
jne
cmp
fcompl
cld
out
adc
and
cld
lock
dec
jno
out
aas
pop
sbb
lcall
repz
subb
push
out
xor
add
inc
mov
jg
xorb
je
push
pop
add
gs
rcrb
ja
call
push
xor
pop
xchg
lock
lods
add
cwtl
mov
icebp
pushl
or
pop
mov
push
ret
mov
mov
mov
and
out
inc
sbb
pusha
test
jp
movsl
pusha
pop
cltd
jo
jl
mov
ds
mov
inc
jb
xorl
mov
mov
cmp
outsb
xor
ljmp
aad
fwait
push
fwait
and
pop
or
std
jne
push
push
les
dec
mov
mov
push
sbb
test
int
movsl
fs
mov
call
inc
stos
sbb
adc
xchg
stos
fistpl
je
popf
pop
repnz
fldt
outsl
clc
jmp
je
dec
jae
push
div
aas
sub
sub
in
aad
hlt
repnz
jmp
pop
dec
daa
lods
pop
and
cmp
das
aam
daa
pop
divb
inc
arpl
jno
daa
out
jg
incb
sub
mov
jge
out
outsl
in
sub
adc
inc
adc
xor
fadd
jno
xor
lret
pop
ret
xchg
jae
lret
call
pop
fmull
sbb
dec
es
pop
incl
dec
xchg
dec
out
sub
sub
cmpsb
dec
lods
movsl
ror
fdivrp
jmp
and
jge
xor
cmc
out
je
jae
pop
fcmove
add
das
stos
xchg
test
jnp
sub
mov
hlt
xchg
add
jg
mov
insb
add
shl
stos
xor
cmp
ljmp
test
jmp
dec
adc
or
fs
inc
inc
sub
push
incl
xchg
in
push
inc
stos
push
movsb
xor
jg
arpl
ljmp
mov
fcoms
dec
inc
and
fucomp
adc
cltd
adc
out
call
shr
in
out
test
js
stc
cmpsb
stos
lahf
pop
push
repz
fisubrs
adc
inc
repz
loop
pushf
inc
fisubs
call
adc
ljmp
pop
fld
test
inc
cmc
je
aad
sbb
fldcw
cli
mov
or
mov
aam
xlat
imul
je
pop
cmc
mov
rcrl
ljmp
fdivrs
mov
stc
and
push
aas
cmp
test
nop
sahf
and
mov
sti
sbb
pop
movsl
cmp
testb
pop
jne
sub
pushl
xchg
fsubrl
dec
and
push
sti
out
fildll
inc
xchg
in
mov
jmp
adc
fdivr
push
dec
jl
je
cli
daa
push
stos
jnp
pop
xorl
outsl
cli
repz
adc
addr16
enter
jecxz
orb
mov
aas
lcall
add
cmpsb
mov
dec
ror
sub
xor
or
orl
call
mov
cmp
or
loope
outsl
movsl
test
mov
mov
loopne
incl
ljmp
addr16
mov
jp
loope
lret
rcr
and
incl
inc
push
push
mov
stos
jmp
add
jl
test
daa
push
xor
pusha
clc
repnz
or
stos
out
mov
or
in
popa
push
test
inc
outsl
repnz
jo
xorb
xor
jg
cld
andb
xchg
lods
sahf
mov
movl
in
dec
jp
sti
stos
pushl
lahf
or
cmpsl
pop
stos
mov
mov
negl
mov
xchg
sub
sbb
enter
add
add
in
shlb
ja
cwtl
sbb
int
das
outsb
testb
jle
cmp
sbb
mov
add
xchg
sbb
mov
ret
std
xchg
cld
dec
inc
add
jae
leave
or
aad
cwtl
or
decl
lock
adc
nop
xchg
lock
shll
lea
popa
das
sarl
call
push
aaa
sub
and
jge
and
test
aad
mov
leave
mov
cltd
jg
xlat
incl
sbb
and
and
clc
push
loop
aaa
jmp
mov
ficompl
lret
adc
inc
cld
call
mov
stos
cmp
pop
sub
cli
aaa
mov
add
test
ds
push
push
xchg
sbb
aas
aad
decl
das
xchg
aas
xor
pop
stos
xor
repnz
xor
mov
sbb
push
mov
fst
imulb
pushl
pop
mov
sub
sti
inc
fildll
dec
outsl
push
and
out
jnp
decl
jne,pn
jb
add
gs
je
decb
hlt
cmp
nop
gs
addr16
mov
ljmp
mov
cmc
das
and
divl
sub
mov
mov
pushl
xchg
jb
cmp
insl
inc
or
mov
jne
jge
mov
pop
or
testb
push
add
and
mov
imul
jno
out
push
jns
nop
imul
ljmp
into
or
xor
or
jb
xchg
and
stos
adc
push
ret
mov
dec
lahf
int
mov
cmp
lret
push
bound
and
jle
movl
push
xchg
add
push
xor
lods
xor
xorb
xor
ljmp
es
cmc
add
shlb
cmp
pop
and
inc
mov
sub
cwtl
cmp
mov
push
mov
lock
std
mov
mov
or
xchg
mov
inc
out
dec
lahf
decl
stc
mov
jp
push
fnstsw
out
test
xor
loope
adc
repz
clc
cmp
pop
shlb
bound
add
push
mov
mov
aaa
cs
cmp
mov
or
jns
in
movsb
es
int
pop
loopne
mov
das
fcomip
lcall
out
and
and
push
into
pop
jmp
sbb
clc
xchg
xor
jl
test
xchg
pop
cmp
cmp
movsb
or
test
incl
pop
push
cmc
jns
les
cmpsb
mov
and
jbe
jl
xor
fisttps
jmp
nop
lret
push
js
mov
mov
pop
mov
pop
cwtl
aad
pop
cmp
and
xchg
loopne
pop
lods
sub
and
lcall
jae
cs
fcmovnu
mov
cmp
nop
mov
xor
and
orb
sub
sbb
push
test
xchg
push
mov
scas
pop
out
movsb
popa
cli
testl
sub
repnz
pop
fdecstp
mov
adc
push
fldl
hlt
dec
ret
pusha
lcall
sub
jecxz
fisubs
je
inc
cs
jp
lret
xchg
push
xchg
fidivrs
xchg
test
add
decl
ljmp
es
bound
lods
cmp
mov
out
insb
pop
xchg
jmp
in
sbb
rolb
xchg
rolb
lcall
test
jnp
push
or
outsb
je
and
loope
movsb
fdivs
das
mov
mov
and
out
ss
xor
lock
stc
lock
jne
decl
andl
push
movsl
or
xor
cli
cmpsb
in
popf
adc
loope
lock
add
jmp
push
push
ds
hlt
inc
fs
lcall
incl
mov
aam
movsl
pop
mov
test
pop
nop
dec
mov
into
jbe
out
sbb
mov
gs
sbb
in
lods
add
orb
adc
jno
test
sub
ret
call
call
imul
mov
jge
aad
mov
rolb
xchg
clc
js
pop
ret
jbe
insl
and
dec
xchg
cld
test
or
push
dec
xchg
lret
inc
pop
loope
pop
xchg
mov
hlt
scas
xchg
jge,pn
lcall
add
rcll
jmp
cltd
mov
mov
dec
adc
arpl
sub
push
enter
xor
jge
loop
xchg
mov
mov
mov
cmc
dec
push
mov
into
ja
adc
xchg
mov
pop
and
gs
insb
scas
xchg
sub
sahf
xchg
cwtl
jecxz
cmp
data16
sub
dec
jno
fldt
mov
inc
pop
push
jmp
aam
les
inc
fdivr
pop
out
xor
dec
int
jns
addr16
adc
cld
add
jle
add
scas
dec
inc
inc
stos
rep
or
std
pop
jno
xor
mov
fucompp
repz
js
xchg
and
in
fnstcw
test
xchg
dec
movsl
mov
adc
push
ljmp
dec
cmpsb
popa
push
sahf
and
flds
sbb
aas
dec
rcl
cmpl
pusha
lcall
lods
adc
jb
push
pop
xor
aam
push
jbe
dec
adc
pusha
mov
mov
jbe
ljmp
jmp
mov
lods
and
mov
adc
fisttpl
cmp
lcall
and
in
add
sahf
popf
and
fisttpl
fistl
push
pushl
pushl
nop
pop
imul
insb
jle
inc
and
sub
test
jle
incl
stos
push
mov
inc
das
sti
flds
jnp
push
jns
je
mov
jmp
cmp
sub
iret
push
notb
mov
int
add
and
in
in
ljmp
pushf
adc
inc
jecxz
xchg
in
pop
mov
or
pusha
adc
add
or
jg
leave
in
xor
mov
fmull
mov
jb
and
xchg
test
scas
sbb
or
and
jne
loopne
shl
js
mov
ds
add
sbb
mov
out
mov
incl
std
cmpsb
dec
fimuls
cmpsb
push
mov
pop
pop
cwtl
xor
data16
cmc
adc
mov
incl
rorl
in
sub
popa
xor
pop
push
mov
xor
minps
jmp
ds
hlt
inc
and
jle
mov
and
lea
inc
cli
pushl
sbb
add
rcrb
mov
out
push
pop
and
inc
call
xorb
or
inc
inc
mov
add
insl
imul
jecxz
jno
adc
or
push
aad
sbb
mov
jp
xor
lds
movsb
nop
push
jle
jg
lcall
loop
mov
dec
into
mov
sub
mov
pop
ja
mov
jmp
add
cwtl
into
push
inc
sub
sbb
lret
mov
push
xchg
dec
jmp
push
gs
scas
stos
add
sbb
aaa
sub
mov
mov
jp
scas
and
pop
call
adc
add
dec
sub
and
out
ljmp
lcall
sub
aas
push
mov
mov
inc
mov
xchg
and
mov
incl
arpl
mov
add
and
sbb
addr16
fsts
xor
jno
movsb
gs
loopne
mov
jmp
pop
sbb
mov
dec
subb
mull
lcall
mov
fwait
mov
sbb
movsb
xlat
dec
pop
stos
lods
sub
nop
es
xchg
ljmp
push
ret
mov
cltd
sahf
sbb
mov
popf
mov
outsb
fildll
dec
loopne
arpl
mov
push
jg
cmp
xchg
xor
std
cmc
push
jb
mov
fs
mov
cmp
lods
inc
dec
sar
pop
add
inc
push
lods
cwtl
hlt
pop
imul
pushl
cmp
add
push
testl
inc
jnp
xchg
imul
lcall
lock
mov
mov
shll
iret
insb
cli
and
addr16
decl
fdivs
stos
bound
adc
inc
in
and
adc
sub
decl
pushf
cmp
add
pop
xchg
bound
clc
movsl
mov
mov
ret
lock
push
shld
xchg
rorl
arpl
add
mov
and
jns
sbb
push
pop
pop
push
pop
mov
ds
test
push
pusha
clc
lret
movsb
and
stos
insl
mov
mov
push
imul
cld
jg
std
repnz
pop
sub
jmp
je
in
mov
fmull
jno
xor
sbb
adc
pushl
rcrl
int3
movsb
popa
xchg
in
out
mov
jge
dec
pop
cld
in
add
loop
adc
jmp
dec
xchg
cli
and
ja
imul
cmp
or
je
inc
decl
add
test
dec
pop
pusha
ja
das
pop
cmp
repnz
call
or
ja
mov
fnstsw
xlat
push
inc
ds
jb
xchg
add
cmp
jmp
push
fwait
in
in
xor
and
push
pop
ljmp
jg
out
pop
shll
ds
xlat
mov
ltr
ds
mov
jmp
lret
jae
xchg
xchg
xor
decl
decb
cld
and
inc
xlat
inc
lahf
lods
lea
popf
ret
iret
test
jb
scas
and
ljmp
and
mov
arpl
pusha
jmp
leave
jnp
outsl
inc
and
add
jnp
push
orl
push
fwait
mov
addr16
adc
or
mov
sub
cmp
stc
lahf
sub
pushl
cli
icebp
pop
jbe
pop
sbb
pop
jo
decl
shl
dec
not
test
push
outsl
sbb
ret
int
icebp
fistps
sbb
ja
adc
out
iret
fcoms
call
fbstp
pop
inc
clc
arpl
add
or
mov
or
xchg
push
popa
lahf
push
sbb
ss
dec
stos
mull
lock
or
movsl
pop
pop
ret
push
jnp
mov
adc
clc
jmp
pop
fidivrl
mov
jl
jmp
jmp
adc
fwait
test
add
or
xchg
cmpsl
das
cmp
pop
loopne
test
xchg
fisubl
or
or
lcall
or
popf
or
mov
xchg
push
das
xor
rclb
loope
mov
repz
pop
iret
jo
xchg
pop
aam
push
fsubrl
decl
xchg
mov
jecxz
test
inc
sub
test
decl
imul
push
mov
das
dec
jp
mov
enter
xor
leave
fwait
cs
incl
sahf
das
addr16
xchg
mov
cmp
push
mov
and
xchg
xor
push
jmp
cmpsl
lods
or
mov
dec
and
lret
xor
sbb
xlat
js
adc
in
scas
cmpsb
sahf
fiadds
mov
aas
dec
or
mov
mov
and
popa
clc
call
mov
and
jb
ret
loope
push
pop
lret
outsl
rorl
push
aad
cmpsb
add
call
je
cmp
push
stos
inc
mov
lock
cli
xorl
push
mov
sub
mov
jbe
jg
sbb
fldl
ljmp
pop
xor
push
pusha
popa
out
rorl
mov
or
lea
inc
push
ljmp
cwtl
add
rclb
fs
xchg
sbb
stc
add
jle,pt
int
sbb
inc
std
loop
shll
dec
les
or
jg
dec
dec
ja
add
dec
push
mov
es
je
jle
jge
fldenv
cmc
inc
pop
imul
xchg
scas
add
sarl
add
in
imul
cld
dec
fidivs
and
into
iret
leave
jge
nop
jbe
jno
cmp
rclb
call
inc
fwait
adc
cmpsb
popf
add
pop
adc
and
dec
xchg
aas
fwait
jl
fwait
mov
dec
push
inc
cmp
incl
or
and
mov
adc
pushf
movswl
pop
xor
jge
rorb
popa
les
or
cmp
mov
add
andb
dec
inc
adc
jne
inc
mov
xor
fs
adc
sbb
dec
xchg
test
jnp
sbb
decl
inc
or
test
adc
imul
movsl
jmp
pop
rcll
pusha
divl
test
jae
cmp
xchg
push
test
inc
cmp
notb
push
add
mov
ret
pushf
xchg
loopne
mov
stc
pop
jmp
push
xor
loope
mov
cltd
imull
mov
jp
das
in
scas
or
sbb
fmull
inc
pop
pop
lcall
dec
xchg
ror
sub
addr16
ucomiss
rcrl
jge
sbb
mov
out
clc
pushl
or
pop
adc
fs
mov
pop
insl
adcl
jge
pushl
adc
mov
push
xor
cmp
mov
inc
sub
jmp
je
inc
xchg
pop
and
pop
sub
fsubrs
fistps
pusha
sub
hlt
or
insb
or
xchg
je
add
mov
dec
push
lret
pop
sbb
fisttpl
pop
scas
and
mov
fstl
mov
cmp
pop
jmp
cmp
add
jae
gs
int3
dec
aad
aam
inc
inc
cld
jmp
xor
xor
test
lahf
lods
scas
xchg
and
decl
add
addr16
sub
jbe
addr16
mov
cmp
outsb
inc
test
ljmp
adc
lds
or
cmc
pop
pop
fs
jp
subps
adc
mov
lds
lcall
lock
dec
mov
inc
cmc
faddp
out
jmp
inc
xor
lahf
lret
inc
cs
in
out
fsubr
in
adc
xchg
rclb
stos
add
fdivrl
jl
xchg
jl
stc
xchg
fcomip
call
jmp
or
or
sti
mov
xor
fcomip
pop
loopne
addr16
add
mov
fwait
push
jno
dec
sarb
inc
fiadds
pop
scas
gs
sbb
leave
fs
and
xor
inc
sub
sbb
rcl
and
inc
loopne
push
mov
stos
mov
stc
dec
data16
pop
sbb
scas
cli
pop
jbe
ffreep
mov
shll
movsb
cmpsb
mov
arpl
xor
mov
sub
les
dec
cmp
or
decl
adc
mov
inc
arpl
mov
rcrl
out
icebp
addl
pushl
je
daa
mov
adc
hlt
jl
jae
cmpsb
fidivs
lcall
test
or
cmp
frstor
fmulp
mov
jmp
push
cld
xchg
in
adc
cmp
and
dec
int
cmpsb
push
xor
dec
cli
mov
inc
cmc
les
inc
scas
and
je
cmpsb
xor
sbb
mov
mov
mov
flds
dec
iret
lods
inc
cmp
xchg
test
or
aaa
jg
rcr
xchg
fxtract
int
cli
jmp
movsl
xchg
loope
sar
fcoml
shrb
lret
notb
sub
incl
clc
js
and
push
pop
mov
into
xchg
movsb
xchg
rolb
adc
and
lret
and
cmc
lea
fbstp
sti
nop
lods
adc
cld
pushl
add
enter
mov
mov
js
incl
cmp
insl
movsb
add
loope
cmp
sub
sbb
and
cmp
push
popf
dec
sbb
dec
nop
inc
sti
mov
sbbb
sbb
xor
pop
lahf
add
jno
incl
jp
xor
mov
lcall
daa
sub
aas
out
cli
mov
inc
imul
inc
pop
std
aaa
std
push
xor
push
bound
sbb
outsl
ja
pop
lcall
mov
mov
mov
mov
in
mov
insl
xor
stc
or
fisubrl
int3
shrb
push
outsl
repz
call
fldl
inc
mov
mov
mov
mov
jnp
xchg
add
int3
mov
xchg
ds
jbe
jmp
cmpsl
cmpsb
repnz
shll
pop
daa
ja
das
in
mov
mov
movsb
lret
mov
sbb
cli
shlb
outsb
fistpll
cwtl
test
rcll
add
sbb
incl
and
push
faddp
sbb
jge
out
pop
adc
addr16
cmpsl
xor
shlb
push
jo
cmp
xchg
push
add
lahf
cld
ficomps
add
dec
cmpsb
cltd
loope
pop
push
xor
inc
fcomps
pop
aas
incl
scas
ss
mov
xchg
dec
daa
movb
flds
es
popa
push
decl
sub
loopne
mov
fildll
shll
xchg
mov
lcall
test
jno
xchg
ret
and
cmp
sub
push
jbe
mov
adc
loop
lret
mov
mov
std
adc
push
jns
pop
data16
pop
imul
pushl
in
subb
test
rcll
outsb
push
fstps
xchg
push
xor
bound
lea
jp
iret
js
mov
adc
lds
shlb
decl
jp
mov
mov
rorb
jo
mov
dec
lret
or
jmp
mov
sbb
sbb
int3
mov
out
repnz
into
add
out
lods
mov
cmpsb
lods
pop
cmpsl
xchg
mov
dec
fwait
fs
stos
daa
dec
push
or
mov
jmp
aad
cmc
adc
and
filds
lods
adc
push
ret
popf
mov
cli
mov
adcl
push
mov
call
imul
inc
mov
orb
sbb
sub
sbb
ljmp
mov
mov
shlb
jge
jnp
test
ljmp
lods
jl
js
arpl
cmp
scas
icebp
or
dec
push
in
dec
sahf
es
ljmp
jp
cmp
mov
lds
jle
mov
fldcw
dec
call
orb
push
std
outsl
cmpsb
mov
jb
cmpsb
xor
cwtl
mov
jge
lcall
insl
dec
addr16
xchg
int
adc
adc
ds
imul
push
jnp
idiv
insl
push
sti
jmp
test
cs
fnstenv
lcall
xor
lods
mov
hlt
push
adc
stos
mov
sbb
pushl
lock
imul
scas
hlt
mov
mov
mov
loope
int
leave
xor
cld
stc
sub
xchg
dec
call
dec
push
adc
mov
fnstenv
or
or
insb
iret
xchg
repz
cli
push
adc
insl
sbb
jmp
bound
clc
movsb
les
jp
mov
jbe
pop
mov
xchg
mov
jmp
mov
and
out
jno
mov
mov
push
bound
nop
rcll
arpl
push
pop
jbe
mov
out
jb
popf
cs
xchg
insb
idiv
adc
dec
dec
les
lcall
jns
push
sarb
scas
sbb
stc
sahf
dec
or
aas
fistpl
xchg
lock
test
dec
repz
xchg
sub
sar
pushl
adc
mov
cmp
paddw
adc
in
outsb
icebp
or
cwtl
je
call
add
xor
shl
mov
fmul
xor
cmp
xor
add
test
ljmp
gs
and
shlb
adc
lret
into
fwait
nop
out
sub
and
jmp
xchg
cmp
imul
sbb
and
imul
aaa
jno
add
mov
ljmp
adc
fcmove
dec
mov
adc
dec
test
scas
sti
add
sub
out
addr16
call
jmp
aad
pop
inc
inc
cmp
mov
das
push
pop
xor
and
insl
into
cwtl
cmp
mov
and
das
fstl
enter
addl
cs
mov
outsb
cltd
mov
fidivl
out
push
loop
sub
pop
sbb
je
mov
cmpsb
pushl
xchg
lret
jl
dec
cltd
mov
lods
hlt
sbb
insb
cld
jmp
adc
ljmp
mov
cmp
test
xchg
clc
adcl
push
xor
les
pop
call
ret
xchg
aaa
jbe
inc
adc
popf
mov
int
xchg
jle
lcall
ret
push
xor
repz
xlat
in
and
mov
jmp
push
test
push
popf
inc
lcall
xchg
sbb
xor
call
cmp
inc
sbb
jl
ljmp
mov
addr16
adc
push
faddl
xchg
jg
add
fistpll
rcrb
fimuls
out
cli
pop
rclb
fwait
add
cmpsb
loopne
popf
rorb
mov
popa
decl
scas
xchg
xchg
gs
ficomps
or
popf
mov
add
jb
call
push
mov
mov
or
loopne
stc
pop
out
orb
in
mov
aad
jg
arpl
outsb
test
pop
push
stc
dec
cmc
xchg
mov
dec
mov
pushl
sahf
dec
loopne
push
push
insb
cwtl
push
mov
jns
mov
bnd
and
sub
out
mov
adc
cmp
dec
cmp
and
in
test
gs
pop
gs
jmp
adcb
test
movsl
and
out
sub
fcmovb
insl
lock
mov
adc
stos
xlat
or
aad
cli
or
mov
push
lea
cmp
aad
frstor
push
lret
loope
or
or
cli
call
popw
xchg
cli
cmp
aaa
sub
jecxz
jo
push
sbb
adc
push
mov
mov
cmp
jl
data16
not
sbb
mov
es
mov
insb
fistpl
dec
xlat
sbbb
call
pop
add
jno
or
negb
sub
cmc
jge
xchg
pop
xor
lret
xchg
inc
loope
inc
leave
scas
call
jl
jb
lcall
sub
xchg
jae
mov
pop
loope
jb
jnp
push
xorb
addl
xchg
xchg
jl
adc
mov
sub
shll
push
xchg
testl
xchg
pop
call
mov
incb
push
push
test
mov
div
sbb
inc
jae
addr16
incl
int
jnp
xor
data16
popf
add
cmpsl
push
js
dec
push
mov
call
lods
leave
pop
xlat
mov
adc
in
mov
cld
mov
sub
lcall
cmpsb
sub
mov
addb
mov
mov
das
push
inc
aam
mov
stc
insb
pop
addr16
dec
ror
mov
jmp
pop
aam
cs
ds
pop
pcmpeqd
in
mov
push
mov
outsl
sbb
or
addr16
inc
jmp
cmp
mov
xchg
push
xor
pop
xchg
ss
mov
frstor
stos
notb
sarb
or
xchg
cmp
call
add
pop
aam
xchg
pop
jmp
faddl
mov
jmp
cmp
pop
push
pushf
repz
nop
pushf
mov
js
mov
mov
call
or
ljmp
clc
xor
lea
inc
adc
lock
xor
arpl
adc
aaa
cld
call
sbb
xchg
test
xchg
mov
xor
mov
cmp
dec
push
cs
pushl
xchg
mov
xchg
fsubl
in
xor
xchg
filds
add
rcrb
pusha
es
xlat
fsubs
decl
roll
ret
cmp
add
jge
mull
mov
out
clc
decl
add
push
stos
pop
fimuls
test
in
xlat
add
incl
add
sub
sahf
int
lods
sti
fdivs
insl
push
pusha
dec
mov
mov
jmp
mov
sub
mov
push
push
xchg
or
ljmp
jne
test
jle
in
and
jnp,pt
lds
push
mov
pop
das
pslld
test
jns
adc
jg
ljmp
rcl
aaa
pop
cli
add
mov
jbe
enter
nop
xchg
jle
cmp
int3
pop
sbb
jns
jg
call
es
sbb
mov
mov
adc
ds
fs
call
sub
mov
bound
in
pushf
popa
or
add
xchg
lods
movsl
clc
push
jle
out
cli
cld
addr16
jl
push
cmpsb
jecxz
cmp
add
mov
mov
les
xor
call
jae
ljmp
into
movsl
lods
cs
xor
cltd
xchg
cld
adc
sbb
push
mov
ret
ljmp
stc
cmp
jmp
lock
mov
inc
add
inc
pop
testl
xor
jmp
push
cmpl
mov
incl
pop
dec
xor
push
xchg
loope
lcall
loope
xchg
xor
jmp
lea
mov
outsl
add
cli
outsl
int
pop
in
mov
push
jns
mov
push
lods
ss
sbb
cli
data16
sahf
das
imul
push
ret
decl
adc
aam
in
fcmove
adc
loope
shlb
mov
out
mov
jle
push
mov
movsb
cmp
adc
and
sub
lcall
leave
iret
xchg
dec
xlat
popf
cs
fs
ret
mov
pop
js
mov
dec
idiv
jmp
inc
mov
mov
inc
pop
std
mov
inc
sub
das
test
push
dec
or
cmp
dec
jnp
sbb
mov
dec
cmp
mov
jne
add
lods
dec
jmp
inc
dec
sbb
mov
inc
out
pop
pop
es
and
inc
sarb
inc
or
jmp
dec
in
ret
in
push
add
jno
fists
les
sbb
daa
add
repnz
repnz
rol
fmul
es
adc
lock
mov
or
sub
lahf
sahf
pop
pop
mov
loopne
push
hlt
push
fcomip
je
aam
push
int3
and
sbb
dec
xchg
out
icebp
push
push
lock
call
ljmp
dec
fstl
pop
movb
outsb
roll
cli
jb
cltd
imul
iret
push
insb
aam
inc
jg
xchg
pop
cmp
mov
or
jge
add
std
jb
mov
or
cmpsb
adc
imul
sub
repnz
jg
aaa
jge
mov
mov
and
and
fisubrs
xlat
les
mov
jbe
mov
fldcw
cmpsl
cli
ds
jmp
test
leave
stc
xchg
mov
pop
mov
rorb
insb
movsl
andb
push
aas
lock
xchg
lret
daa
cmc
xchg
das
push
mov
fimull
outsb
jb
pop
mov
les
xchg
push
dec
ljmp
xchg
mov
jecxz
stos
add
xor
pushf
jns
ljmp
push
inc
or
lret
push
jne
xchg
xchg
and
inc
scas
jnp
ljmp
sub
ja
cltd
adc
cld
test
cli
hlt
mov
idivb
inc
test
add
pushf
subb
lcall
outsl
adc
push
fstpt
add
ljmp
fbld
mov
lods
add
cmp
pop
ret
mov
cmpl
mov
int
push
mov
call
xor
pop
mov
mov
pop
cmp
jo
ja
out
adc
cmpsl
jno
stc
cwtl
adc
test
mov
mov
test
cmp
mov
enter
into
les
pop
nop
mov
push
in
and
push
lret
pop
enter
xor
rclb
nopl
xor
stos
inc
repz
pop
mov
jbe
dec
or
mov
mov
movsb
movsb
pop
add
aam
mov
shlb
sbb
jno
pushl
loope
adc
cmp
pop
ret
les
push
dec
pop
pop
adc
ret
outsb
jbe
call
push
jecxz
imul
jmp
bound
ss
cmp
out
push
sub
in
sub
stos
cltd
rcl
push
xchg
repnz
jne
sub
fucom
mov
ljmp
xchg
jbe
cli
lods
in
out
jo
stos
sarl
imul
pop
add
decl
fnstcw
mov
fstl
pop
add
jle
dec
mov
aad
out
push
lods
mov
bnd
sbb
pop
out
xlat
xchg
in
dec
dec
add
incl
cmp
push
mov
mov
imul
xor
gs
mov
dec
cs
xchg
lds
push
jbe
leave
cltd
inc
ja
sbb
and
jecxz
je
jmp
decb
mov
rorb
mov
sbbl
lea
mov
lcall
push
xchg
xchg
inc
sbb
loope
jecxz
in
add
repnz
stos
addr16
dec
push
add
lock
push
cld
loopne
jno
repnz
dec
mov
push
cld
mov
add
inc
mov
pop
aad
in
jecxz
mov
push
movl
mov
xor
sahf
cmp
mov
icebp
push
ret
add
scas
ljmp
js
sub
ret
std
bound
int
lret
push
adc
ljmp
mov
xchg
dec
jne
icebp
repz
rol
push
xchg
lock
insl
test
jmp
sbb
ljmp
mov
and
xchg
push
push
push
lods
sub
pop
mov
jb
sub
cmpl
out
decl
jle
mov
fistpll
mov
xor
imul
lea
sbb
add
je
xor
popa
pop
stc
lcall
mov
flds
dec
into
loop
jle
push
sbb
adc
lods
shrl
and
loope
test
int
mov
aad
cmp
imul
cmp
push
inc
adc
inc
out
dec
call
lods
sti
fcomip
nop
jecxz
hlt
sarb
imul
xchg
lcall
in
push
nop
jg
xchg
push
sub
out
mov
sub
and
lods
xor
dec
jno
aad
mov
icebp
scas
sbb
out
aas
jg
pushl
enter
xor
repnz
fwait
or
push
clc
xchg
cmpsl
sbbl
aam
cmpsb
mov
mov
jmp
or
xchg
in
mov
call
rol
adc
and
popa
mov
cmc
mov
mov
mov
pop
sub
mov
repz
cmp
adc
pop
ret
out
std
call
enter
dec
xor
pop
push
cmp
decl
inc
loopne
and
js
std
jp
out
call
cld
lcall
mull
inc
insb
das
fidivrl
sub
jle
jl
es
fwait
out
daa
addr16
repz
fwait
arpl
pop
jp
into
dec
sti
add
jmp
nop
test
repz
mov
mov
mov
mov
loope
lock
xchg
cli
ljmp
mov
or
add
or
ret
mov
in
fnsave
out
in
dec
pusha
xchg
sub
adc
ljmp
pop
loop
xchg
adc
divb
les
int
cmpsb
les
mov
dec
inc
cmp
lcall
repnz
pushw
sbb
jne
adc
jno
mov
ret
and
dec
sbbb
mov
ljmp
jge
adc
loopne
jge
loope
arpl
cmp
sub
inc
push
pop
cmp
push
adc
aam
imul
mov
push
std
add
pusha
mov
push
sub
or
lcall
sub
shl
cli
loope
jp
xchg
test
imul
lcall
or
jle
add
cmp
pop
mov
les
rcl
mov
dec
pop
in
nop
pop
cs
ljmp
xchg
std
sbb
sub
mov
outsb
pop
jl
add
call
push
xrelease
push
frstpm(287
test
dec
outsb
es
es
sbb
ljmp
add
sti
mov
lahf
movsb
and
jbe
rcll
data16
pop
push
scas
lcall
or
jg
adc
add
out
or
pop
cld
ljmp
pop
hlt
in
ljmp
incl
xchg
cmp
incl
int3
por
fidivl
je
sbb
mov
and
es
ljmp
mov
fwait
jb
adc
push
jns
mov
inc
sbb
shlb
push
pop
lea
inc
cld
incl
shrl
inc
jg
pop
aam
xor
xchg
std
push
xor
mov
cltd
mov
xor
hlt
fsubl
jg
incb
in
clc
or
and
mov
outsb
mov
dec
std
faddp
lea
pushl
mov
repz
xlat
out
inc
push
pop
xor
hlt
fdivrp
lcall
dec
loopnew
fimuls
inc
add
pop
out
out
int3
xchg
lret
aaa
popf
dec
insl
data16
fdivs
cld
incl
jg
cmpsl
and
call
jecxz
idivl
add
insb
dec
push
daa
movsl
sub
es
lcall
lock
xchg
jo
sub
sub
mov
popa
sbb
out
sbb
mov
jp
push
rcrb
fisttps
mov
ljmp
push
icebp
or
int
mov
inc
nop
addl
adc
hlt
jbe
cmpsb
mov
or
mov
xchg
ret
repz
mov
mov
addr16
mov
stos
adc
cltd
repz
mov
pushf
push
lret
jg
stos
shll
mov
mov
sub
add
insb
outsl
sbb
pop
pop
inc
mov
jg
insl
das
dec
inc
inc
sahf
addl
aad
mov
cli
mov
mov
std
call
and
jmp
jb
arpl
jmp
push
loop
cwtl
xlat
fidivrs
mov
mov
xor
or
leave
lahf
jp
jmp
pop
testl
mov
mov
sbb
sahf
jae
xchg
hlt
mov
jnp
outsb
jb
filds
adc
xorb
in
mov
push
adc
ss
sbb
xchg
sub
lcall
orb
ret
ljmp
xchg
or
push
popf
test
icebp
in
dec
xchg
mov
dec
xchg
dec
push
pop
adc
jmp
stc
or
icebp
xchg
out
arpl
adc
stos
inc
add
pop
movsb
pop
insb
stos
mov
outsb
scas
rcl
mov
mov
fimull
pushl
push
sti
jge
add
inc
stc
mov
fs
mov
test
fldenv
inc
sub
mov
cs
sbb
mov
aaa
lds
mov
or
pop
push
cmpsl
cmc
clc
icebp
xor
js
push
mov
cs
xor
dec
out
scas
rcl
leave
sar
outsb
mov
test
fidivrs
pushf
insl
sbb
bound
jg
jl
mov
adc
arpl
lahf
es
aas
push
popa
jge
and
jmp
cli
rorb
aam
inc
div
or
sbb
stc
into
icebp
lret
sarl
jbe
mov
cld
stc
pop
lods
fcompl
or
dec
into
shrl
add
mov
add
jmp
or
ljmp
mov
dec
xchg
push
pop
pop
sub
and
and
lock
mov
ret
movsb
insb
adc
mov
addr16
js
out
sub
insb
adcb
or
roll
or
inc
mov
push
add
ljmp
clc
shlb
popf
leave
push
popa
sbb
xchg
sti
cmp
jne
cmp
inc
loope
enter
ljmp
sub
mov
xor
sti
push
xchg
sub
shrd
pusha
jb
icebp
inc
fnstenv
adc
das
clc
call
push
xor
adc
fnsave
aam
cli
jnp
sub
nop
jmp
call
mov
call
sub
pop
lcall
pop
mov
xor
mov
ljmp
cmp
shll
aas
sub
mov
mov
int3
cld
push
cmpsl
in
into
lods
mov
jns
cmp
es
popa
jno
popa
test
out
jg
jp
or
into
xor
shl
dec
lods
add
test
pop
jmp
or
sbbl
sbb
sub
mov
push
mov
pushl
pusha
cmp
jle
mov
sub
sub
push
xchg
push
or
jb
nop
ljmp
mov
ljmp
jbe
call
repz
push
loop
in
xchg
ror
cmp
cmpsl
repnz
cld
jp
inc
sbb
mov
sar
push
loope
pop
jmp
push
stc
xor
loopne
push
movsl
or
clc
insb
adc
xor
loopne
lcall
cmp
jno
test
decb
sub
int
stos
pop
jp
mov
imul
sub
xchg
pusha
mov
popf
out
stc
int3
dec
lfs
xchg
push
sub
arpl
dec
dec
mov
es
jns
jbe
pop
sbb
movsb
rol
xchg
sub
xor
sar
pushl
jmp
lret
adc
fs
mov
inc
sti
sbb
ret
scas
clc
jg
test
movsb
testl
xchg
mov
mov
pusha
dec
dec
jp
out
fldcw
jmp
int
lahf
pusha
xor
push
popl
mov
ds
sbbb
and
aam
cld
push
pop
out
call
clc
scas
es
iret
or
dec
jp
ret
adc
loope
test
call
aam
push
push
sub
inc
lahf
push
mov
dec
sbbl
mov
cld
xchg
cmp
stos
jle
call
add
gs
decl
lods
loop
das
push
xor
lods
ds
ret
add
testb
shrl
pushl
shr
mov
push
mov
test
sub
jb
stos
dec
pushl
in
in
idivb
jmp
repnz
and
je
cmpsb
pop
pop
mov
push
sbb
inc
jp
adc
icebp
push
imul
rcrb
jp
out
mov
les
idivb
and
loop
scas
mov
sub
sbb
pop
and
push
push
enter
inc
ret
incl
pop
push
push
lret
ja
inc
pop
dec
hlt
int3
nop
fmuls
in
jns
lock
jl
test
loope
int
push
lret
pop
mov
decl
in
xor
sbb
test
cwtl
leave
jb
sti
mov
xor
jns
stos
popa
ljmp
jmp
and
sub
inc
xor
mov
add
hlt
sub
inc
call
mov
ror
lret
testl
pusha
xchg
lahf
add
xor
icebp
call
in
inc
mov
iret
addb
xchg
xchg
xor
push
jno
call
cld
fbstp
aas
add
andl
adc
arpl
jmp
ffreep
and
lahf
mov
leave
aad
loopne
sti
fnsave
repz
dec
lea
cmp
pushl
pop
sbb
xor
lret
push
and
sub
xor
mov
mov
aad
and
mov
je
adc
adc
cmp
adc
inc
sub
lahf
test
cmp
xchg
pop
nop
arpl
dec
int3
cmc
call
sub
cltd
ficomps
nop
mov
sub
test
jb
data16
ljmp
lods
sbb
sub
inc
fucomp
mov
iret
cmc
iret
leave
push
mov
push
jmp
adc
jle
shl
loope
mov
clc
call
je
ljmp
imul
aad
push
jg
xchg
scas
sbb
or
ljmp
push
stos
loopne
scas
mov
cwtl
and
pop
roll
sbb
cwtl
mov
jg
sbb
pop
pop
sbb
fbstp
je,pn
push
in
rorb
cmp
ficomps
or
decl
pop
xchg
push
mov
add
cmp
loop
jns
insl
push
dec
sbb
jg
dec
or
sub
mov
xchg
in
cmpsl
add
jg
dec
mov
xchg
inc
enter
ljmp
pcmpeqd
push
inc
mov
inc
inc
adc
mov
mov
pop
jge
pop
ljmp
sub
push
or
mov
cld
nop
fimull
clc
sti
rclb
and
ret
xchg
mov
adc
out
mov
out
out
inc
inc
push
mov
insl
sahf
xchg
lock
mov
jbe
mov
adc
inc
push
pop
pop
adc
popf
mov
ljmp
clc
cmp
fistl
dec
jns
bound
cmc
lahf
sbb
int
out
cmp
jmp
and
pop
aas
ret
push
cltd
push
inc
jmp
cltd
xchg
jnp
inc
xchg
jg
push
arpl
dec
in
cmp
pop
shlb
js
ljmp
int3
push
pop
pop
int3
lods
decl
scas
pop
add
sbb
or
out
mov
dec
inc
cmp
pop
lahf
ja
xor
pop
lock
incl
repnz
and
imul
lds
shrl
out
inc
je
xor
cli
jno
sbb
adc
popf
adc
lret
xchg
popa
mov
pusha
and
in
adc
dec
pop
test
out
or
aaa
xchg
fnstenv
xor
sar
call
pop
dec
jb
inc
xchg
popf
sarl
inc
ds
pop
xchg
je
out
cmp
pushl
xchg
and
stos
cs
arpl
icebp
loope
cmpsl
dec
adc
cltd
loop
jl
mov
fcomip
decl
lcall
inc
aaa
sub
je
push
pop
imul
scas
incl
mov
leave
in
aad
sbbb
loopne
cmp
aad
cmp
call
xor
xchg
out
test
ret
addr16
sbb
and
div
pop
incl
mov
fstl
fdivl
sti
sub
imul
fcomip
int
out
or
xchg
lods
or
sahf
adc
xlat
mov
push
ljmp
pop
out
xor
shlb
mov
mov
shufps
add
jo
call
xor
push
out
loopne
in
and
out
incl
and
aam
or
decl
mov
jb
mov
pop
ds
jecxz
inc
cmp
pushl
xchg
xchg
fisubrl
gs
loope
int
addr16
rolb
push
sub
pushl
cmp
sub
ljmp
jmp
dec
lods
inc
mov
in
ret
inc
push
inc
hlt
popa
push
cmc
jl
xor
xchg
jb
test
mov
inc
add
iret
cmpsb
cs
popa
xchg
ljmp
pop
aas
aaa
insl
mov
pop
and
jg
imul
into
mov
incl
dec
cld
pop
enter
mov
and
pushl
mov
mov
lret
fucomp
push
cmp
sbb
xor
adc
lock
xchg
int
mov
sub
lret
adc
jnp
mov
push
xlat
pushl
enter
jge
flds
push
xchg
adc
push
jle
mov
outsl
clc
jg
outsl
xorl
adc
pop
push
int3
sbb
mov
pop
xor
nop
pop
xchg
add
xchg
fldl
push
mov
arpl
xorb
inc
xchg
test
call
loopne
xchg
jle
das
push
cmpsb
int3
aaa
adcl
lret
ljmp
xor
push
lret
sbb
adc
add
dec
icebp
jmp
mov
int
dec
jmp
mov
roll
inc
mov
fldcw
jmp
cmp
adc
cmp
xchg
add
mov
and
dec
xchg
lcall
pushl
sbbl
into
lea
jo
out
sub
add
daa
sub
js
fisttps
jecxz
inc
xchg
inc
jg
daa
lahf
lds
jns
fisubrl
jbe
movsl
out
sub
push
stos
and
pop
or
cmp
cmpsb
pop
mov
incl
adc
dec
std
push
mov
sub
rcl
pop
and
adc
imul
jg
jecxz
mov
shll
and
or
mov
sysret
cmpsb
fucomi
lcall
xchg
ffreep
xchg
adc
out
mov
jmp
mov
test
inc
mov
mov
push
lret
test
mov
pop
vmptrst
inc
insl
sub
incl
push
and
into
cmp
jb
mov
jae
loope
dec
dec
add
jmp
push
mov
ss
pop
std
test
mov
sub
ljmp
and
fldenv
call
dec
add
mov
mov
pusha
loop
mov
fbld
decb
mov
dec
push
lea
insb
ljmp
xor
test
pop
push
loopne
xchg
aad
ret
push
mov
pop
xchg
xchg
enter
push
pop
mov
movsb
push
insb
fst
pcmpgtd
mov
cmp
roll
stos
dec
mov
jns
leave
pop
xor
and
mov
xchg
jo
xor
and
pop
adc
in
aam
fadd
fs
dec
cwtl
stos
cmc
pop
cmc
fnstsw
lahf
push
mov
dec
push
jl
cwtl
jmp
jnp
icebp
sbb
or
std
ljmp
ret
lds
pop
into
jg
in
pop
repnz
cmp
call
mov
aaa
inc
or
mov
cs
fcmovnb
icebp
pop
inc
mov
and
decl
mov
pop
insl
jle
dec
int
into
and
arpl
xor
sbb
lret
cmpsl
les
out
out
es
jle
jmp
into
pop
cmc
dec
dec
jg
scas
imul
xor
cmp
cmc
cmp
loopne
lcall
mov
scas
mov
push
and
pop
dec
jge
loop
scas
push
push
fisubrs
cmp
xor
enter
jp
pop
repz
inc
outsl
push
pop
enter
mov
add
aad
xchg
mov
and
ficoml
int
mov
fs
fcomps
incl
cld
mov
xor
xchg
cmp
dec
or
push
stos
rorl
lcall
pop
sub
mov
sbb
and
fistpll
jmp
pushf
jb
mov
pushl
jl
bound
fsubrl
roll
test
sub
popf
hlt
imul
incl
add
lahf
stos
sub
pop
incb
push
lcall
mov
sbb
cmp
in
fs
stc
jnp
mulb
ljmp
push
pop
jmp
stc
jmp
xchg
cmc
xlat
outsl
inc
cltd
mov
les
mov
rorl
cs
shlb
push
mov
cmc
lods
into
cltd
fidivrl
jg
test
inc
insb
scas
push
gs
inc
jmp
inc
testl
sub
or
loopne
hlt
cmp
mov
aam
ret
aam
cmp
fmuls
test
jg
push
or
mov
into
ss
decl
add
ret
rclb
ret
push
xor
push
pop
mov
mov
sar
and
into
sub
bound
pop
movsb
cld
jns
ficompl
cmp
cmp
pusha
arpl
fsubrl
jp
jmp
push
push
push
push
cli
mov
and
testb
push
iret
ljmp
repz
and
inc
mov
roll
jge
xor
lret
cltd
filds
push
int
into
insl
fnstcw
pushl
inc
fnstsw
sub
shrb
ss
pop
js
xlat
push
inc
push
or
mov
call
xor
ret
jge
repz
jbe
xchg
les
test
inc
jle
jge
enter
pushl
arpl
in
and
push
mov
movsl
jns
bswap
fwait
fcomip
pushl
xchg
pop
pop
roll
loop
imul
or
cs
sbb
orb
lret
or
pop
mov
call
jmp
mov
je
imul
jnp
pop
enter
jmp
mov
inc
push
adc
xchg
aad
jle
push
hlt
mov
rcrb
mov
adc
add
ljmp
decl
dec
adc
sub
fadd
inc
fcomip
mov
cmp
cs
inc
jmp
dec
and
ret
insb
xor
cmp
jns
push
int3
pop
or
mov
cmp
incl
xor
ja
push
in
pop
fldcw
push
jnp
lahf
xchg
xor
dec
xlat
dec
aad
neg
lret
cld
adc
call
xor
lcall
repnz
jg
shrb
dec
cmp
dec
dec
movsl
and
imul
jg
incl
xor
xor
int3
dec
and
lods
pop
sbb
sub
test
mov
xchg
lcall
call
mov
add
mov
popf
les
and
das
adc
sub
pushl
iret
push
mov
ljmp
popf
in
push
mov
leave
scas
mov
out
push
push
fstpl
shrl
stos
cltd
push
stos
mov
lahf
int3
fdivrs
mov
dec
lock
sbbb
insb
das
dec
push
sarb
incb
out
ja
call
popf
xchg
out
insl
lds
add
sub
xchg
andl
fcmovb
mov
mov
pop
dec
and
jmp
mov
xor
adc
cmp
in
xchg
aaa
imul
ss
and
add
outsb
ljmp
mov
aam
std
mov
sbb
pop
mulps
scas
sbb
inc
lcall
in
jmp
ja
int
mov
fcoms
xchg
mov
movb
lcall
notl
sbb
dec
dec
scas
into
ds
dec
cmp
mov
lea
add
mov
enter
fmull
dec
int3
mov
shrl
stos
scas
fcoml
lret
add
push
jmp
gs
add
or
dec
imul
ret
ljmp
into
adc
xchg
push
hlt
fcompl
dec
data16
orl
adc
or
add
imul
fisttpll
jmp
sti
sbb
insb
mov
or
insl
push
dec
sbb
dec
mov
outsb
sbb
pop
cld
xchg
rclb
xchg
xchg
push
push
aaa
push
add
in
ret
test
mov
fisubrs
mov
sub
mov
call
push
dec
aas
sbb
shlb
je
dec
cli
push
loop
movsl
test
add
insb
cmp
je
pop
jg
mov
add
repz
mov
iret
push
cmpb
and
pop
jg
mov
or
mov
cmp
shlb
jnp
fldt
mov
push
or
push
aaa
cmpsb
les
sub
stos
sahf
test
fs
and
mov
in
jmp
es
dec
sub
adc
mov
xor
jns
adc
cld
or
out
xor
mov
dec
repnz
inc
pop
stos
div
inc
ja
into
shlb
inc
xchg
inc
orl
or
jne
sbb
call
mov
in
push
adc
xchg
cmc
ljmp
gs
cmc
jbe
sub
iret
icebp
clc
cwtl
pop
jbe
sub
ss
xlat
add
loopne
jno
and
dec
maskmovq
mov
call
add
or
mov
jb
call
rorl
out
push
pop
cmc
call
sub
fs
ret
mov
mov
fld
xor
fildll
aaa
mov
inc
push
cmp
repz
imul
ret
mov
or
xchg
incl
fbstp
mov
loop
lods
adc
inc
pop
out
jg
insl
hlt
xchg
pushf
add
loope
cmp
in
inc
mov
mov
mov
mov
dec
lock
add
je
ljmp
sbb
out
sbb
pop
ljmp
sub
idivl
iret
jne
inc
cmp
push
call
add
bound
mov
je
mov
andl
mov
pop
adc
fwait
or
imul
inc
push
and
loope
push
setns
add
ljmp
mov
adc
dec
push
jb
push
push
test
rorl
ret
rcrb
fdivp
jmp
dec
test
movsl
dec
inc
mov
push
dec
outsb
mov
sbb
leave
or
filds
and
icebp
or
mov
gs
or
cltd
ret
lcall
xor
jns
fsubs
sub
cld
mov
fistpl
mov
mov
ljmp
scas
dec
out
jp
dec
mov
lcall
add
dec
pop
adcl
mov
push
les
pop
jp
hlt
outsb
fpatan
jo
incl
into
fdivp
shll
inc
cli
cmp
push
mov
pop
and
cld
popl
cmp
mov
sub
sbb
jecxz
mov
fcompl
push
cpuid
xor
fsubs
pushl
arpl
ftst
loope
jae
xchg
int3
repz
mov
jo
ds
xor
ljmp
ss
xchg
lahf
xchg
push
and
or
imul
dec
jmp
outsb
decl
repnz
jl
in
mov
mov
jne
jecxz
cs
hlt
add
loopne
mov
out
incl
sahf
aas
test
in
das
inc
aad
negb
cmp
dec
inc
es
das
data16
aam
jle
pop
icebp
mov
lcall
int3
loopne
fwait
mov
imul
xor
xor
js
es
xchg
xor
add
cmp
popa
pop
add
out
clc
call
push
xchg
jns
jo
sbb
mov
push
ds
jg
decl
ss
scas
test
pusha
mov
movsl
xchg
lret
in
decb
fimuls
clc
lret
dec
cmp
inc
push
or
in
cmp
sbb
or
xchg
push
in
add
mov
mov
call
rorb
loopne
js
es
cld
decl
loopne
pop
clc
mov
mov
mov
call
insl
sbb
call
lcall
pop
pusha
cmc
sar
cmp
enter
or
push
xchg
push
and
ljmp
xchg
dec
sbb
cmc
inc
into
dec
push
pop
pop
insb
adc
push
mov
out
clc
call
in
mov
sbb
insl
mov
out
ret
mov
xlat
adc
jmp
imul
js
nop
movsb
cmp
ljmp
lods
xchg
mov
insl
movsl
xor
xchg
pop
shlb
mov
sbb
jno
cmp
mov
sub
loope
loop
lea
rorb
bound
fs
cmp
lret
pushf
jmp
jb
lock
jmp
dec
push
in
scas
sti
int
mov
scas
fs
movsl
clc
dec
fisubrs
loop
lcall
rorl
mul
xchg
pop
pop
dec
lcall
push
stos
in
mov
push
push
xor
cmp
mov
out
shl
shll
mov
decl
test
or
orb
xor
loope
jno
sarb
add
inc
mov
add
mov
pop
pop
dec
notl
enter
sbb
imul
decl
xchg
push
das
sbb
jg
pushf
push
out
mov
aam
push
fdivrs
jnp
lea
push
repnz
mov
sub
lock
jo
add
in
dec
dec
inc
xor
adc
testb
popa
ret
adc
xchg
pusha
hlt
popa
repnz
pop
pop
pop
in
decl
sub
inc
xchg
xorb
aas
jecxz
pop
cmp
cmp
push
jmp
mov
leave
in
xorl
lahf
subl
repz
outsl
les
push
mov
cmp
mov
int3
xor
mov
not
jae
sub
pop
mov
inc
pushl
xor
and
xchg
jge
lds
sub
stc
scas
fisubs
mov
aaa
std
decl
call
inc
mov
fisttpll
in
lods
scas
pop
mov
lcall
int
js
push
js
lods
jnp
pop
adc
enter
das
les
and
mov
push
out
jne
insl
in
mov
test
scas
mov
add
jl
sub
loopne
je
pop
lods
jno
fs
repnz
pushf
hlt
sbb
inc
sbb
jb
gs
cli
pushl
and
ds
xchg
notb
cmpsl
jle
out
push
stos
push
mov
adc
call
call
cmp
loope
pop
outsl
cmp
mov
pop
sbb
icebp
shrl
adc
test
sub
lods
pushl
std
xor
enter
fs
mov
mov
pop
in
inc
push
pop
aam
call
sub
pushf
es
sbb
inc
cmp
pusha
cmp
fistpl
xchg
aad
mov
pop
and
rcll
lods
adc
popa
pushl
jecxz
adc
adc
push
push
inc
inc
aad
bound
lcall
lcall
clc
inc
push
and
adc
lock
xor
out
push
pop
jmp
mov
rolb
dec
mov
cmc
mov
add
adc
lea
into
mov
imul
jmp
lds
or
push
xchg
xchg
and
ss
fs
add
insb
fdivrp
fldenv
jmp
push
cmp
js
test
mov
and
mov
jle
or
das
xchg
rorb
xchg
pop
dec
xchg
inc
fdivr
jbe
jae
mov
into
mov
incl
xor
xor
sahf
cmp
arpl
adc
bnd
lcall
pop
ljmp
sub
sub
mov
or
lahf
mov
decl
inc
dec
adc
outsb
std
push
cmpsb
mov
dec
leave
mov
in
inc
mov
lcall
mov
jle
lods
loope
adc
mov
fdiv
mul
sbb
lcall
jle
incl
cs
hlt
in
sbb
subl
sub
rcll
decl
and
jg
ja
sarl
stos
xor
sbb
in
mov
daa
ja
mov
mov
push
out
mov
or
cmp
pop
jl
cmc
decl
es
mov
xchg
mov
cmp
fsubr
mov
test
add
loop
jg
mov
inc
cmp
dec
inc
call
inc
in
mov
cmc
into
sub
mov
inc
test
test
gs
pop
mov
push
outsl
mov
enter
dec
lret
sbb
shr
sbb
fisttps
xor
dec
fstl
pushl
lods
jbe
lcall
cmpsl
and
or
out
push
out
mov
incl
lcall
add
mov
jge
inc
decl
jp
xchg
push
sbb
sbb
movsl
push
cltd
dec
leave
call
xor
cltd
lret
incl
out
mov
inc
in
bound
rolb
push
dec
test
mov
aaa
scas
test
decl
sub
push
xor
stos
rcrl
into
and
hlt
mov
or
dec
adc
or
pop
sub
lahf
rcll
jb
add
sub
lahf
push
pop
cwtl
ret
call
es
cmp
or
shrb
push
sbb
idiv
jmp
pop
or
addr16
cmpsb
js
aaa
lods
mov
adc
test
mov
gs
iret
bound
mov
lock
inc
mov
mov
lds
jb
es
decl
inc
pop
loope
enter
shl
mov
enter
into
pushf
inc
push
inc
sub
cmovae
outsl
ljmp
subl
js
and
cmpb
mov
xor
mov
or
cmp
leave
lcall
dec
in
fstpl
orb
int
cmp
adc
int3
dec
movsb
imul
mov
jg
gs
shlb
xchg
out
in
sbb
rorb
sbb
lods
shlb
sub
inc
stos
pop
adc
test
stos
sar
decl
lods
hlt
in
push
add
jnp
out
cld
jg
pop
sub
ret
repnz
and
and
popa
std
pushl
mov
mov
push
mov
pop
jl
imul
or
lret
jg
pcmpgtd
stos
sub
dec
xor
cmp
nop
xchg
orl
xor
cmp
push
add
xchg
xchg
mov
test
or
or
jbe
push
lds
dec
pusha
mov
and
jne
sbb
rclb
mov
lcall
test
dec
add
cwtl
cmp
push
dec
leave
lds
in
out
test
xor
rolb
pusha
sbbb
movsl
xchg
mov
sti
pushl
das
rol
dec
lcall
and
jmp
jecxz
sbb
pop
cmpsl
insl
movsl
inc
ja
clc
cmp
daa
cmpsb
inc
sbb
call
jnp
es
cli
iret
out
std
es
jb
adc
fwait
jmp
out
dec
jmp
push
testl
fs
bound
loope
sub
enter
call
fisubrl
fwait
leave
insl
xchg
out
mov
sbb
call
loopne
cmp
push
stos
out
pop
repz
sub
loop
test
xchg
mov
incl
cld
pop
cltd
stos
cmp
jle
addr16
addl
jmp
cmpsl
jb
scas
bound
lret
scas
xchg
or
pop
push
mov
pop
test
flds
sti
lcall
ljmp
push
mov
arpl
xchg
xchg
leave
jp
jg
out
cwtl
sets
xor
add
cmp
add
pop
data16
fiaddl
or
xor
dec
call
jl
sub
fistps
addb
jb
sub
fs
clc
stos
in
call
dec
mov
push
fwait
pop
push
jmp
lods
int
xor
and
out
and
cmpsl
imulb
push
aaa
fst
and
add
call
dec
push
out
pusha
or
ja
inc
pop
jbe
mov
pushl
mov
xchg
out
inc
cltd
jle
outsb
fwait
cmpsb
mov
in
cld
push
dec
pop
daa
dec
or
aas
push
test
push
arpl
popf
sbb
pop
xchg
mov
mov
call
inc
add
rcll
sbb
push
incl
push
fwait
and
nop
mov
mov
dec
rol
push
out
fmuls
daa
aam
sar
ljmp
and
and
in
imul
cmp
daa
mov
lods
mov
pop
lcall
incl
popl
sub
fs
loop
sti
jp
mov
push
test
jmp
mov
sbb
inc
pop
push
adc
dec
mov
push
out
les
cmp
cmp
cmp
cld
ss
mov
in
std
mov
shll
les
insb
push
push
in
mov
cwtl
out
negb
jnp
mov
cld
add
xchg
out
decl
je
stos
lahf
add
nop
fidivrs
push
out
mov
xchg
out
ss
jg
push
incl
inc
call
xor
out
fwait
push
or
repnz
mov
nop
adc
enter
lcall
ss
jl
add
loope
xlat
inc
lahf
mov
mov
adc
push
push
xlat
pop
mov
pop
mov
cld
lea
adc
enter
std
aam
jg
incl
mov
popf
insl
push
and
ss
faddl
sbb
jge
sbb
jecxz
pop
into
pop
fistpll
test
loope
decl
cwtl
sub
jmp
push
scas
adc
insb
ljmp
insb
mov
jmp
in
sti
mov
nop
add
imul
inc
dec
pushf
pop
or
pop
jle
xlat
sub
mov
jmp
cld
test
scas
and
test
outsb
outsb
mov
mov
roll
inc
pop
adc
push
in
repz
cmp
xchg
arpl
push
mov
add
lcall
shrb
mov
mov
in
mov
loopne,pt
nop
jp
addr16
mov
dec
repnz
inc
sti
jmp
xchg
sbb
iret
ja
rol
xchg
xchg
push
pop
popl
inc
pop
pop
sbb
pop
ret
pusha
dec
out
xchg
testb
call
push
pusha
adc
movsb
xchg
mov
jne
mov
cli
mov
sub
xchg
sahf
mov
xchg
sub
stos
cmp
xchg
stos
mov
in
jecxz
xchg
pop
xor
pushl
jecxz
inc
imul
inc
push
loope
mov
jb
es
mov
lds
lret
mov
sbb
outsb
lcall
jbe
insl
and
mov
insb
fildll
lcall
aam
push
pop
jle
imul
pushl
mov
cmp
cmp
mov
or
sub
xlat
clc
mov
dec
sub
xor
lock
arpl
xor
icebp
call
xor
lret
pushl
mov
and
fsubrp
add
in
pop
popa
jno
inc
shlb
int
decl
insb
or
push
xchg
sub
subb
adc
xor
outsb
pop
roll
pushl
cld
xchg
sbb
neg
sbb
insb
test
lods
fwait
cwtl
add
sbb
or
dec
outsl
fadd
sahf
lods
std
lds
je
pop
cmp
movsb
mov
fsts
add
icebp
or
dec
or
mov
xchg
dec
fstpt
and
push
add
pop
sub
cmp
adc
mov
jmp
or
sarl
sbb
or
xchg
sub
adc
incl
les
shlb
or
jmp
mov
jno
dec
dec
add
push
pop
xchg
das
inc
jp
xor
loope
out
dec
pop
mov
imul
in
stc
add
jo
repnz
pop
pop
inc
insb
push
jnp
pusha
insb
push
loopne
push
cltd
dec
shrb
clc
mov
ljmp
pop
hlt
cmp
add
shlb
add
jno
mov
cmp
lcall
insl
adc
cwtl
in
pop
aaa
fwait
push
cld
fldl
nop
mov
sub
inc
out
sarb
incl
push
lret
xchg
or
jmp
inc
sub
xchg
addl
das
jp
mov
push
ljmp
mov
sbb
popa
xchg
cli
lods
pop
in
mov
push
out
dec
jo
call
adcb
sub
sub
inc
in
xchg
repz
shll
ljmp
mov
and
cmp
fadds
xchg
fbstp
rcl
inc
sahf
fidivrl
adc
adc
lcall
sub
cmp
pop
fnsave
xor
pop
aaa
sub
mov
jl
std
and
pushl
lods
xchg
loope
les
iret
jp
repnz
leave
mov
loope
add
lea
test
jmp
inc
lret
push
push
xchg
fbld
mov
xchg
push
in
adc
fiaddl
out
push
lods
jle
imul
push
push
push
mov
jnp
cmp
add
cmpsl
fildl
cmpsb
push
sbb
and
lock
pushl
insb
shl
roll
mov
mov
sub
mov
cmp
fistps
adc
mov
out
cs
sbbb
js
push
add
sarl
add
fbld
jle
mov
out
and
pusha
insb
imul
decl
push
inc
push
jge
nop
dec
fiaddl
jne
or
mov
ljmp
mov
leave
inc
mov
or
mov
push
and
call
pushl
pop
int
add
fs
jae
fdivrs
inc
xchg
incl
sbbl
pop
pop
fbstp
xchg
xchg
leave
aam
jns
aaa
std
or
imulb
mov
inc
andl
nop
and
bound
mov
ja
ret
jno
cs
dec
sub
xchg
pop
mov
rcrl
repnz
enter
cli
pushl
movsl
xchg
jmp
in
xor
push
and
xorb
pop
popf
fcmove
dec
iret
addr16
pop
jmp
jle
jle
cmpsb
cmp
sahf
movsb
fimuls
loope
leave
mov
std
push
jae
xor
and
dec
sbb
leave
in
sbb
test
pop
clc
push
incl
cld
sub
dec
sub
fdivr
leave
rcll
sub
ret
shr
lcall
inc
cmpsl
hlt
mov
call
inc
gs
lods
sub
test
movsb
call
lods
out
jmp
test
test
and
mov
int
push
mov
lret
pop
xchg
cmp
das
lret
cmp
dec
or
jle
sbb
in
push
stos
or
arpl
xchg
jp
fs
mov
sbb
lcall
sub
ljmp
jge
imul
cli
xchg
loop
sub
mov
mov
jae
mov
repz
adc
movsl
push
ret
lods
inc
rorl
xor
sbb
and
push
sub
adc
xchg
dec
sub
cmp
cmc
jmp
in
xchg
xlat
popa
and
sub
incl
nop
push
xchg
adc
sbb
mov
xchg
xchg
jg
mov
incl
inc
xor
pusha
popa
lcall
add
push
popl
jp
and
ljmp
fstps
ss
push
pop
orb
cmc
push
or
enter
lcall
aam
mov
pop
mov
xchg
out
out
jg
fldenv
push
stc
pop
shlb
pop
out
loopne
call
dec
xchg
add
repnz
sub
xor
dec
jecxz
and
es
gs
mov
lcall
push
dec
enter
dec
push
out
push
rcrl
add
mov
orb
cmp
popf
dec
mov
jo
dec
pop
mov
adc
out
scas
fidivl
sbb
and
xchg
lcall
adc
jmp
dec
add
out
sub
jnp
movsl
jmp
or
dec
hlt
repz
add
into
and
incl
sbb
and
xchg
mov
xor
mov
adc
or
jmp
jmp
inc
push
rorb
mov
mov
xor
sub
adc
dec
jmp
lods
cmp
outsl
adc
incl
adc
loop
sbb
lahf
inc
clc
test
push
and
mov
sti
cs
jnp
in
inc
in
jmp
xor
stos
and
jbe,pt
xor
cmpsb
add
enter
ja
mov
pop
mov
xchg
test
pop
jmp
add
jmp
sub
imul
pop
stos
jle
mov
das
jmp
lea
adc
pop
sbb
cwtl
cmp
xlat
icebp
pusha
mov
lcall
jmp
ret
mov
scas
outsb
gs
into
adc
xchg
repz
mov
add
add
shll
jae
inc
mov
inc
das
imul
insb
jbe
sub
jg
mov
mov
fsubrs
sub
das
mov
stos
cwtl
movsb
mov
and
stos
cmp
daa
int3
sbbb
xchg
jmp
idiv
mov
or
int3
jecxz
jno
jo
test
lds
mov
sbb
outsl
rolb
mov
xchg
jno
lret
mov
sbbb
inc
shrl
das
mov
gs
pop
fdivs
cmpsb
xor
das
lds
pop
jg
add
xlat
fdivrs
out
push
test
push
pop
cld
sarl
cmpsb
dec
fbstp
rcl
and
push
adc
out
jo
cld
add
adc
adc
or
xchg
mov
test
jecxz
insl
xor
je
xchg
xor
push
mov
inc
inc
sbb
mov
mul
test
mov
sub
leave
mov
cmp
xchg
xor
hlt
add
sti
xor
imul
incl
das
xchg
sbb
mov
fadds
les
inc
out
outsl
lcall
xor
sbbl
and
inc
mov
inc
xor
inc
aad
hlt
mov
xor
fistpl
mov
outsb
test
lret
jb
mov
mov
movsb
mov
and
cmp
cmp
decl
xchg
sub
lock
jne
mov
or
cld
decl
cltd
cmc
pop
mov
xchg
push
out
fisttps
loop
push
add
aaa
fcomps
jge
cmp
mov
pop
filds
sbb
sub
lea
repnz
clc
mov
or
out
lods
addw
push
int
mov
cmp
and
cwtl
pop
and
or
je
call
mov
fidivs
push
int
iret
mov
xlat
shrb
inc
cmp
mov
out
aaa
or
mov
sbb
sbb
fs
mov
or
mov
jmp
shl
jnp
fidivl
push
outsl
dec
loop
mov
jmp
lods
std
ljmp
cli
adc
movsb
cmp
push
movl
mov
cmp
decb
and
ret
in
pop
cmc
push
add
pop
gs
mov
jg
addl
and
test
inc
rol
lcall
mov
fistl
cltd
insl
bnd
std
outsl
xchg
test
jmp
lds
gs
jg
inc
imulb
lds
cwtl
mov
test
out
call
in
scas
jmp
inc
push
mov
in
daa
movsb
inc
cwtl
add
ss
das
jp
cmp
lcall
sahf
cltd
push
sub
les
sahf
ljmp
ljmp
push
push
cmpsl
int
outsb
mov
mov
imul
dec
and
mov
mov
sub
jecxz
mov
lcall
ljmp
pop
mov
mov
mov
xchg
inc
iret
shl
clc
cs
add
lcall
orb
adc
adc
popa
and
push
mov
sahf
jp
insl
lret
enter
jmp
cmp
sbb
popa
jno
pop
ror
nop
fldcw
loop
sbb
and
orb
ljmp
mov
inc
inc
pushf
mov
outsb
pop
or
int
mov
pop
push
dec
xchg
fs
jmp
push
cmp
pushl
fbld
enter
repz
lcall
jnp
pop
cmp
jns
outsl
movsb
bnd
add
sbb
push
stc
shl
push
dec
mov
orb
push
shll
mov
shr
dec
mov
lods
bound
or
div
inc
adc
movsl
xchg
jg
mov
int
pusha
lods
fstpt
mov
xchg
pop
pop
leave
push
mov
adc
jb
jmp
pop
push
mov
mov
or
dec
fbstp
or
sbb
in
lds
sar
decl
shll
stos
ret
push
sahf
or
inc
mov
out
imul
mov
push
das
cmc
inc
xchg
rclb
jmp
xchg
or
or
out
mov
outsb
xor
jge
mov
mov
cltd
sub
and
ljmp
in
dec
pushf
add
cli
les
out
dec
sub
cmpsl
cmp
test
adcb
inc
idiv
pushl
aaa
mov
mov
or
inc
and
les
and
mov
push
xor
outsb
fucomi
outsb
mov
cmp
or
int
mov
pop
icebp
push
add
cli
into
mov
dec
mov
lret
sbb
sub
stos
lds
jns
mov
das
sar
mov
dec
mull
fcompl
imul
lcall
decl
iret
ret
xorl
mov
mov
test
push
mov
das
dec
scas
sub
mov
xchg
xchg
xchg
filds
jbe
mov
inc
subb
and
repz
jo
sub
fbld
jecxz
dec
ljmp
repnz
mov
or
jg
ljmp
scas
mov
std
fists
jae
mov
iret
ja
outsb
mov
dec
call
or
stos
js
popa
dec
mov
aaa
call
xchg
das
or
adc
sar
dec
out
in
pop
or
inc
push
jmp
incl
mov
inc
sbb
out
cmc
lock
cmp
lcall
cmp
and
mov
hlt
icebp
jo
movsl
out
popa
movsb
ljmp
fiadds
push
xchg
aam
pop
fnstcw
mov
xchg
pop
pop
aam
faddl
jg
call
mov
lock
js
push
or
xor
inc
push
loope
notb
int3
add
jg
sub
xchg
decl
ret
mov
jae
fbld
gs
adc
lret
sbb
daa
cmpsl
push
jecxz
mov
pop
jmp
mov
xchg
out
mov
sub
sbb
and
lcall
lock
cs
imulb
adcl
and
adc
leave
outsb
out
ret
int
and
fstpl
repnz
ljmp
inc
insl
dec
aas
inc
loop
push
shlb
rcl
push
xchg
sbb
xor
add
pop
dec
add
ljmp
aas
xchg
pop
mov
xchg
sbb
loope
scas
popf
dec
popf
arpl
lods
sub
je
cmp
push
jl
jne
jnp
add
stc
ljmp
inc
jecxz
in
push
insl
pop
lds
or
lds
loop
test
lock
xchg
incb
jmp
and
sbb
das
popf
cmpsb
or
test
shll
pop
adc
add
data16
rolb
dec
xchg
jp
insl
loopne
call
lret
or
dec
shl
jns
movsl
dec
push
mov
adc
ljmp
add
pop
lret
jns
push
and
mov
adc
push
test
outsb
mov
sbb
jo
inc
lcall
dec
stc
enter
jnp
lods
push
sbb
test
add
rolb
ds
ljmp
dec
mov
adc
arpl
jge
idiv
iret
dec
loope
jp
pop
out
loop
call
sub
cld
jo,pt
in
sarb
push
pushf
jb
call
dec
cs
mov
aaa
cmp
and
pop
sub
gs
dec
mov
out
jae
dec
loopne
sub
stos
mov
out
push
leave
dec
sub
cmp
cmp
or
dec
push
mov
lret
sub
fs
in
adc
mov
loop
out
mov
jg
incb
lahf
xor
stos
dec
jns
cmpb
scas
jbe
daa
xchg
ret
add
and
pop
lea
shr
push
jno
mov
imul
pop
jmp
add
cmp
iret
popa
mov
and
adc
call
jnp
repnz
mov
cmpsl
push
outsl
movsl
cwtl
jl
repz
sbb
mov
mov
lods
notb
xchg
pop
mov
aam
repnz
lcall
lret
xchg
lret
ror
loopne
out
loop
scas
aam
fnsave
adc
popa
or
fistpl
dec
adc
fisttps
add
shr
jb
dec
xchg
mov
mov
in
pop
ss
add
lcall
add
xchg
subb
insb
out
mov
dec
dec
popa
mov
add
and
cmp
sbb
inc
ss
das
sub
dec
aam
xor
stc
pushl
fcom
mov
push
fcoms
mov
jge
dec
movsl
mov
mov
dec
dec
imul
aam
adc
outsb
push
ret
clc
decl
outsb
loope
mov
lods
adc
jl
ds
cmpsl
mov
jmp
dec
fcomps
sbbb
sti
mov
xor
ficompl
mov
pop
mov
mov
loopne
call
mov
mov
lcall
or
mov
inc
cmp
call
mov
or
shll
sbb
in
sbb
and
inc
pushl
or
clc
loopne
mov
inc
adc
out
in
sbb
je
aad
jb
lcall
pop
aaa
lahf
mov
stos
mov
xor
mov
insl
cwtl
and
icebp
jge
mov
cmp
cmp
lods
mov
es
in
test
push
inc
addr16
or
sub
hlt
mov
lahf
negb
dec
mov
imul
mov
fidivrl
mov
pop
sbb
setns
fwait
repz
test
in
fistps
jnp
sbb
mov
xchg
jmp
xchg
mov
test
mov
aad
dec
jge
lcall
xchg
inc
xchg
ja
ret
push
mov
jnp
clc
push
pusha
in
cmp
packssdw
jmp
adc
lods
nop
jnp
repz
sbb
sub
dec
pushl
inc
frstor
adc
cs
iret
xchg
jmp
xchg
int
mov
dec
insb
rol
jae
inc
mov
jl
and
rol
mov
push
xor
and
call
lock
cld
sbb
sbb
arpl
inc
xchg
dec
dec
xchg
dec
test
jmp
xchg
mov
push
out
pop
repz
push
xor
xchg
mov
std
or
push
jne
ljmp
adcl
xor
mov
gs
mov
xchg
lret
jmp
adc
pusha
out
int3
test
push
push
mov
jge
mov
sbb
inc
add
call
mov
sub
xchg
idivb
adc
aaa
lret
bsf
mov
movsl
daa
std
mov
fs
iret
xchg
mov
ret
pushf
lcall
adc
cld
mov
shrb
fnsetpm(287
xor
arpl
icebp
sti
decl
pop
cmpsb
shll
push
rcrb
jo
jo
and
cli
sbb
xchg
hlt
into
sti
push
dec
cmp
les
xlat
out
out
inc
push
sub
sbb
mov
adc
cmp
or
lcall
loopne,pn
dec
lcall
or
and
daa
movsb
outsb
mov
mov
inc
insb
movsb
lods
xorl
add
pop
daa
out
lods
in
pushl
sub
lods
insl
movb
push
loop
cmp
repnz
mov
jnp
fxch
negb
pop
jp
pushl
dec
mov
repnz
pop
fadd
lds
sbb
jae
fwait
pop
stos
out
xchg
push
push
fistl
mov
jle
inc
shrb
add
mov
pop
popa
push
outsl
lcall
stos
ds
aad
ja
lret
sbb
decl
xchg
shl
mov
xchg
cmp
aam
pop
enter
out
inc
int3
mov
popf
push
mov
decl
test
jge
popa
jbe
jecxz
and
dec
sbb
popa
and
add
mov
fisttpll
xor
or
lock
andl
or
addl
xor
mov
testb
or
cld
pusha
mov
mov
jg
xor
push
pop
mov
cli
dec
rcrl
adc
mov
lods
les
lret
je,pt
mov
lcall
gs
cmp
ljmp
sub
test
sbb
add
ljmp
dec
std
pop
scas
sbbb
xor
and
mov
cmpsl
inc
push
lret
add
sahf
xchg
and
decl
fcompl
or
rclb
aaa
inc
push
enter
cmp
lcall
xchg
mov
cmpsb
leave
pop
mov
sub
mov
in
or
stc
lret
aaa
std
incl
lds
sub
call
push
and
cmp
xlat
or
sbbb
decl
arpl
xor
mov
hlt
xor
push
mov
cli
jmp
pop
xchg
sar
pushl
cld
fs
adc
mov
test
stos
inc
in
xor
jmp
push
mov
pop
or
rorb
in
loop
mov
call
sub
ljmp
sub
mov
rorb
scas
and
dec
xchg
enter
mov
add
call
sub
sbb
inc
sbbb
fnsave
or
cld
sub
push
loope
repz
sbb
dec
xlat
out
jbe
outsb
stc
and
in
inc
xor
call
push
push
aam
pop
jg
jno
loop
lret
test
and
adc
rcll
loope
push
or
adc
sub
aad
test
mov
mov
mov
aaa
gs
dec
imul
inc
push
sbb
xchg
inc
or
push
or
cltd
xchg
or
inc
or
adc
cs
call
loopne
pop
cmp
cmpsb
pop
ss
pop
decl
sbb
lret
sub
in
insb
test
pop
mov
out
and
mov
mov
addl
cmp
or
mov
lock
lahf
dec
and
cld
jg
jl
mov
cs
dec
dec
fwait
je
xor
push
or
pop
icebp
jmp
pop
icebp
call
sbb
push
int
sbb
push
mov
lret
sub
ss
or
in
jg
pop
or
cmp
fbld
call
add
mov
fwait
or
sub
insb
inc
js
mov
fists
repz
test
aas
hlt
xchg
iret
fcomi
or
testb
dec
mov
jl
sbb
call
jp
jecxz
push
xchg
in
mov
push
mov
imul
xchg
test
lcall
mov
in
mov
add
push
push
or
mov
dec
cmp
decl
repz
test
add
adc
jb
call
call
push
cmp
push
push
inc
movsb
in
sarl
mov
idiv
loopne
adc
enter
inc
pop
fmuls
dec
shl
imul
mov
dec
ret
sbb
and
ret
push
dec
mov
fidivrs
out
inc
frstor
lcall
roll
fs
pusha
test
or
insb
call
jmp
pushf
into
xor
js
outsl
jnp
ljmp
cs
pop
add
movsb
or
jnp
inc
incl
jg
movsb
lods
xchg
sbb
push
imul
sbb
push
and
daa
mov
push
and
mov
faddl
add
shll
add
pop
xchg
push
in
decl
sarl
dec
cmp
mov
adc
mov
pop
mov
cmp
cmp
in
inc
adc
sub
adc
push
sub
mov
ret
cltd
iret
scas
mov
jo
xchg
lods
bound
mov
decl
sbb
xchg
push
dec
sub
pop
popa
fmul
mov
add
jg
pushl
js
mov
jp
bound
xor
test
xor
push
inc
mov
in
push
aas
xchg
push
hlt
cld
stos
aas
xchg
xchg
scas
mov
ja
std
jp
lret
xchg
mull
call
or
mov
mov
icebp
mov
or
das
cmc
jge
ja
into
dec
hlt
lret
dec
mov
jmp
adc
divl
pushw
push
aad
repnz
stos
test
add
cwtl
cmpsb
mov
les
call
push
mov
inc
frstor
cmpl
cmc
jnp
lahf
or
and
cmp
pushl
out
xchg
bswap
cwtl
call
stc
mov
insl
ffree
mov
decl
mov
and
sub
jge
sbb
fwait
pushf
cmp
shll
mov
call
icebp
ljmp
xchg
and
jo
in
sub
mov
cmp
pop
adcb
push
ret
stos
icebp
lcall
lahf
sub
ret
cmp
mov
cmp
jmp
aas
fbstp
lods
jb
aam
cmp
jns
out
mov
test
sbb
add
mov
fwait
dec
loop
mov
pop
je
dec
gs
dec
mov
pop
or
sbb
testb
lret
notl
xor
ljmp
cli
jns
cmp
pop
les
push
mov
lahf
mov
and
cmp
sbb
mov
negl
xor
inc
mov
cli
inc
pop
cld
mov
aas
add
cmp
jg
stc
mov
out
push
stos
push
sti
and
fistps
hlt
or
inc
out
mov
push
stos
sbb
and
in
sub
or
std
dec
out
xor
iret
adc
or
nop
sbb
or
mov
in
pop
addr16
mov
fsubs
and
pop
stos
mov
mov
flds
pop
ljmp
incb
xchg
push
lods
and
inc
fldl
test
loopne
cwtl
adcl
ljmp
adcl
and
gs
sub
jecxz
push
push
ret
out
shll
xchg
faddl
out
rolb
pusha
jae
fstpt
sub
test
mov
jg
and
mov
sub
decl
lret
je
and
ret
mov
xchg
jno
int
cmp
insb
inc
lcall
lods
fwait
jmp
xor
lods
xchg
sub
add
das
mov
xor
cmp
pushf
sub
lret
cs
out
enter
cmpsl
scas
jg
pop
mov
cld
mov
lea
into
fidivrl
sub
loopne
mov
jne
add
jno
inc
fnstcw
sbb
dec
cmp
scas
clc
dec
lds
lret
js
xchg
arpl
mov
add
add
inc
add
fsts
jnp
and
xor
call
out
dec
std
scas
mov
pop
cmp
and
shrb
insb
jle
dec
xor
jns
cmp
jno
clc
in
ljmp
rolb
add
cwtl
and
out
inc
mov
ljmp
ljmp
sbb
inc
aas
sbb
enter
or
cmc
cmp
cmp
out
mov
ret
mov
xchg
cmpsb
aam
lcall
decl
cs
adcb
inc
notb
cmpsl
inc
mov
out
mov
lret
jbe
ljmp
cmp
mov
cmp
xchg
dec
ljmp
cmc
mov
lret
push
mov
cld
sub
mov
out
jg
push
jp
add
fwait
pusha
xorb
pop
enter
mov
ja
pop
adc
jmp
cmp
sub
fs
dec
xchg
stc
dec
inc
mov
dec
mov
xor
incl
fsubl
out
xchg
ret
stos
push
aaa
loop
popf
incl
testb
ds
adc
jae
sti
jg
jge
push
sub
andb
cmp
rcrl
add
and
jmp
mov
fildll
mov
mov
imul
loopne
cmp
call
rcrb
push
sti
in
add
mov
mov
lahf
pop
inc
lock
pop
cmpsl
mov
push
out
stc
sub
fs
incl
outsb
xor
mov
mov
xor
data16
in
inc
push
xchg
push
mov
jb
mov
mov
pop
push
fwait
decb
jns
add
xchg
sbb
aam
add
call
mov
dec
lods
sar
push
and
decl
loop
inc
cwtl
xchg
inc
or
rclb
fsubrs
mov
fs
mov
or
cmp
cmp
push
sbb
push
scas
push
fcoml
sub
inc
jg
mov
or
mov
mov
add
mov
inc
jnp
out
je
mov
fistpll
ds
sbb
pop
ja
in
movsl
inc
js
adc
xor
fmull
repnz
sbb
lods
xchg
das
rorb
jnp
sbbl
int
push
hlt
jo
jle
ljmp
pusha
imul
push
and
insl
xor
lods
pop
jnp
leave
dec
cmc
mov
lcall
inc
into
insb
inc
mov
xchg
ret
lcall
sbb
loop
leave
cli
dec
ss
cmp
sub
dec
sub
mov
call
loopne
dec
sbb
aam
xchg
or
insl
into
stos
sbb
aas
loopne
mov
pop
push
pusha
test
cs
inc
add
ret
roll
push
ljmp
outsl
scas
out
scas
lock
sub
pop
mov
pop
int
dec
fcomp
stc
ja
push
mov
incl
popf
imul
nop
stc
daa
mov
cld
push
test
cmp
pop
push
loop
inc
or
cmovns
adc
push
mov
dec
and
cmpsl
mov
test
or
ds
aam
lret
addr16
mov
add
push
loopne
adc
mov
call
pop
or
mov
jle
cli
jp
outsl
insb
and
and
dec
cld
rorl
mov
jg
mov
add
lcall
and
xor
out
pop
sub
ja
roll
das
dec
mov
xchg
add
cli
cmc
scas
stos
mov
cmp
xchg
jle
xor
and
pop
cs
scas
mov
jl
out
out
or
push
xlat
cmp
cmpsl
xor
mov
jmp
cmp
cmp
mov
jnp
xchg
enter
popa
icebp
jg
and
push
mov
mov
ret
sub
aam
pop
pop
stos
inc
lret
push
mov
sti
jmp
xor
mov
lahf
and
mov
std
push
or
in
nop
gs
pushf
popa
cmp
push
iret
shrl
cli
jl
sub
pop
pop
cwtl
and
loope
sub
inc
mov
jp
pop
cmp
ljmp
insl
aas
push
fsubr
cmpsb
sub
les
mov
sbb
and
and
pop
std
dec
iret
cmc
and
sub
lcall
pop
sbb
cwtl
xchg
sbb
pop
cld
mov
rol
fimuls
sub
mov
stos
daa
inc
test
xchg
icebp
mov
in
fildl
fs
sbb
lcall
stc
xchg
adc
inc
clc
mov
jmp
mov
pop
repz
mov
pop
outsl
jl
ljmp
inc
cmp
xchg
pusha
std
arpl
jecxz
gs
dec
sbb
push
or
push
pop
fstl
cld
decl
sbb
or
sub
pop
and
mov
lahf
jmp
dec
jp
pop
mov
adc
insb
sub
mov
gs
or
fdivrl
pushf
mov
jne
xor
and
cwtl
pushf
add
jmp
ljmp
cmpsb
jno
outsl
dec
xchg
adc
repz
cmp
mov
cld
pop
mov
fistpl
push
xor
stos
ds
fsts
jbe
lods
jnp
dec
in
les
mov
jle
lcall
sub
xorl
in
pop
mov
xchg
inc
mov
aas
out
ret
jb
pop
leave
cmpsb
pop
nop
pushf
mov
inc
jle
es
cmp
fbstp
add
cltd
lods
push
dec
push
inc
call
and
sub
add
sbb
xchg
pop
or
fstl
inc
lret
les
sbb
cmp
movsb
inc
inc
mov
sti
jmp
stos
std
pushf
and
push
push
scas
addr16
cltd
push
or
xor
mov
cs
jg
je
fidivl
ds
and
mov
or
sub
mov
call
dec
jae
and
mov
sub
sbb
cli
inc
cmpxchg
sub
mov
call
shlb
pop
repnz
les
je
out
dec
push
cli
dec
mov
loopne
xchg
ljmp
xorb
jnp
das
lds
imul
dec
jge
push
and
mov
jp
pushl
std
call
adc
pop
pushl
inc
mov
cmp
fildll
stos
or
pop
lock
push
test
mov
enter
jne
lock
leave
aad
imul
mov
movsl
je
xchg
jmp
cmp
aad
call
xchg
stc
aas
jl
jbe
loopne
in
lret
push
ljmp
adc
inc
mov
jl
ljmp
mov
out
sbb
cmp
push
clc
out
fsubl
hlt
cld
lret
mov
xchg
dec
leave
ljmp
fsubp
mov
jge
sub
jle
pop
in
mov
outsl
add
movsl
jmp
or
mov
in
andb
cmp
inc
cltd
dec
ja
out
outsl
test
das
sar
xchg
cmp
fcom
nop
inc
jecxz
js
roll
push
pop
mov
jnp
bound
jle
pushf
cmp
push
bound
aaa
pop
mov
mov
rclb
pop
mov
loop
mov
decl
js
xor
xchg
dec
sub
imul
and
pushl
std
jmp
sub
sub
dec
into
and
outsb
jg
xor
or
incl
out
pop
ljmp
and
aad
and
cmp
das
shlb
sub
sub
dec
adcb
leave
call
lock
inc
lcall
out
inc
test
sbb
scas
mov
mov
decl
out
test
sbb
imul
fwait
repz
dec
incl
out
loope
lcall
rorl
ret
jmp
repnz
xchg
xchg
cmc
adc
inc
mov
sbb
ret
sub
jg
add
cmpsl
cmpsl
cvttps2pi
jmp
leave
cmp
mov
cmpsb
add
mov
add
mov
rorl
and
divb
jo
sbb
mov
call
cmc
mov
xchg
fs
andb
es
in
addl
scas
sbb
jne
jb
ss
dec
mov
sbb
adcb
ljmp
add
add
rclb
ds
mov
xlat
fcomip
inc
popf
sbb
pop
pop
imul
lret
and
sahf
mov
adc
lcall
rclb
pop
testl
jns
ficomps
insl
jns
ljmp
incl
insl
and
push
mov
fildl
push
es
xor
push
sub
shll
rcrl
sub
stos
inc
sub
push
pop
adc
testb
out
and
dec
enter
cld
decl
inc
ret
mov
jge
push
mov
rorl
mov
lods
mov
clc
push
adc
xor
mov
fwait
add
and
outsl
fdivrl
fdivrs
fmuls
fbld
repnz
mov
enter
xor
cmp
movsb
mov
popa
add
mov
nop
ret
xchg
xchg
std
sbb
into
stc
dec
pop
inc
sahf
dec
push
pop
lcall
inc
or
xor
and
pop
lds
pushf
xchg
dec
gs
sti
push
scas
dec
rcrl
sahf
pusha
iret
adc
lock
sbb
sbb
push
pop
jae
lcall
adc
movsb
push
xchg
in
es
cs
imul
mov
call
scas
in
in
fwait
mov
push
push
das
cmpsl
sbb
cs
fsubl
dec
mov
pop
jbe
ljmp
mov
lods
inc
jp
sub
sbb
adc
popl
jns
push
jecxz
jmp
jg
dec
fwait
inc
push
cmpsl
lea
push
enter
sub
test
dec
adc
mov
mov
add
sub
push
xor
jb
test
push
out
out
xor
pop
test
sbbb
outsb
jp
lods
and
negb
push
popf
call
mov
js
stc
inc
fcomp
enter
cs
in
pop
loope
sarl
imull
cmp
je
fisubl
ret
fldl2t
jg
xchg
mov
je
pop
mov
pop
outsl
jmp
gs
mov
dec
mov
pop
sub
call
pop
adc
adc
xchg
nop
decb
xchg
mov
dec
sub
test
xorb
cmp
inc
out
insl
imul
or
jp
das
test
inc
sub
stos
sar
cli
decl
or
dec
jle
iret
add
cwtl
nop
in
and
lods
in
mov
push
dec
lcall
inc
dec
jno
addr16
mov
xchg
sbb
adc
iret
nop
and
cli
jns
mov
add
idivl
mov
cmp
inc
mov
cmp
imul
gs
and
mov
stos
jnp
push
sub
pop
sahf
push
jnp
ljmp
sahf
movsb
cmp
rcll
hlt
sub
pusha
js
mov
std
in
mov
aaa
jl
out
jmp
cmp
xchg
push
movsb
dec
lods
or
cmpsb
sub
sub
ret
mov
xor
incl
pop
fcompl
popf
fdivrs
mov
jg
shl
or
cmp
test
incl
popa
push
outsb
cs
ss
call
inc
lret
pop
movsl
cltd
jge
cli
cld
decl
popa
lcall
mov
lcall
xlat
and
ficoml
or
lcall
push
rcrb
aam
popf
inc
xchg
push
push
jge
adc
mov
incl
fdivr
lods
call
loope
pushf
or
inc
mov
mov
jae
je
adc
cmp
mov
or
and
sub
addb
idivb
mov
in
push
adc
lcall
adc
cli
mov
jo
fsincos
je
cmp
xor
push
mov
mov
scas
stc
inc
das
test
fpatan
bound
stos
lock
inc
adc
scas
inc
sub
jno
es
leave
mov
pop
add
xor
fisttps
clc
lcall
ret
loopne
inc
lret
adc
adc
push
sahf
jle
pop
sub
pop
pop
fidivrs
leave
push
shlb
mov
scas
lret
bound
sbb
decl
push
sub
scas
push
and
mov
xchg
decl
aam
or
cs
cmc
sti
xchg
stc
or
mov
ljmp
add
ficompl
movsb
fldcw
push
jle
mov
push
inc
mov
adc
jmp
repz
cli
cmpsl
les
shll
mov
inc
lret
leave
jg
dec
jns
sbb
popf
popa
inc
mov
xor
cmp
nop
add
push
and
add
xchg
das
incl
dec
pop
sbb
adc
out
ja
stc
ret
mov
xor
pop
addr16
loope
push
in
mov
or
negl
jbe
push
jecxz
dec
push
gs
out
into
lods
jmp
lods
ret
pop
std
jg
fwait
push
pop
push
repnz
das
add
xchg
pop
fcompl
int
mov
call
dec
sub
dec
dec
out
mov
ficompl
inc
push
mov
or
imul
cmp
lea
addr16
cli
xchg
movsb
lods
scas
and
sahf
out
int
jo
nop
jno
ljmp
and
dec
cltd
and
stc
mov
mov
or
ljmp
jg
jle
inc
push
stc
jl
ret
mov
ss
push
mov
sbb
ja
decl
mov
sub
cs
add
dec
shl
xor
jl
add
and
pop
loopne
jg
fstp
jmp
mov
lods
cmp
push
push
or
and
sub
icebp
lcall
imul
mov
negl
bound
jge
mov
lret
mov
lret
push
call
clc
xchg
popf
jle
je
dec
mov
push
popa
xchg
aad
sbb
jmp
cwtl
inc
cmp
inc
mov
bnd
sub
or
shll
ljmp
mov
push
add
xchg
in
lret
stos
xchg
jmp
jno
outsl
mov
out
mov
leave
clc
fadds
push
pop
mov
dec
sub
add
lds
ss
cmp
mov
js
pop
out
repnz
sub
faddl
gs
jns
call
call
pop
and
movsb
push
fcomi
cs
inc
pop
adcb
adcl
js
mov
add
hlt
mov
cmpsl
dec
lcall
or
inc
dec
xchg
xchg
mov
mov
inc
pushf
and
or
jmp
jno
jo
sahf
ret
lret
jnp
popa
push
xor
test
add
sbb
pop
mov
add
popw
mov
in
cmp
sbb
xchg
negb
add
cld
call
faddl
gs
push
sub
sti
xchg
das
sbb
xlat
sar
call
into
cmpsl
jae
in
int
clc
pop
mov
sub
xchg
xchg
push
pop
adc
jno
adc
xor
xchg
arpl
sub
pusha
ffree
jle
cmp
test
decl
inc
adc
pop
js
rol
and
xor
test
aam
test
ds
shl
xchg
jg
jl
call
cmp
mov
add
test
or
decl
push
cmp
pop
test
mov
sbb
lods
cs
mov
fstpt
lods
push
lods
mov
ljmp
mov
cmc
mov
aas
mov
adc
add
sar
incl
inc
fistpl
in
dec
rclb
push
jg
pop
dec
orb
xchg
cmp
arpl
mov
lret
jg
loopne
xor
sub
mov
in
out
vcvtps2dq
jg
or
xchg
dec
xor
add
ljmp
lcall
shr
ret
and
ja
xchg
insl
xchg
shll
add
dec
leave
mov
ljmp
repz
fdivr
lret
mov
inc
sahf
or
pop
adc
mov
mov
xchg
sub
push
scas
lea
dec
mov
mov
xchg
in
jmp
or
loop
faddl
inc
xor
pusha
arpl
xchg
dec
in
imul
in
jmp
mov
or
iret
push
pusha
cltd
pop
in
jae
push
stos
addr16
or
inc
or
loop
lret
call
shrl
rcpps
or
jge
jg
cmp
mov
leave
fwait
leave
adc
xchg
cld
ljmp
les
and
add
xor
sti
incl
pop
dec
adc
inc
or
mov
fisubrs
aas
cmp
xchg
pop
sarb
pushl
push
xchg
jg
xor
add
hlt
mov
jo
fstp
inc
xchg
test
decl
aam
loope
aas
clc
xor
adc
icebp
sub
decl
ror
cmpsb
dec
jns
int
ficoms
or
cmpsb
dec
xchg
rorb
jge
mov
mov
cltd
mov
loopne
cli
xchg
test
frstor
inc
dec
jne
push
arpl
sub
scas
and
jecxz
fidivs
mov
mov
fisubrl
pop
sahf
adc
lea
or
mov
lods
daa
push
rcrl
and
jnp
call
out
dec
adc
in
xchg
push
xlat
and
cmpsl
jge
lods
adc
jle
dec
dec
jmp
cmpsb
call
shlb
cmp
jne
add
dec
fcompl
dec
aaa
gs
cwtl
pop
adc
incl
or
mov
dec
xlat
test
fcomp
mov
add
or
js
incl
repz
repz
out
lds
sub
mov
aas
push
loop
inc
mov
inc
test
xchg
pop
cmpb
data16
sbb
dec
mov
push
jns
xchg
andb
add
inc
bound
xor
inc
push
leave
xchg
das
cmpsb
icebp
scas
les
lds
sub
mov
aaa
loopne
lcall
xor
cli
xchg
dec
test
inc
or
test
pop
scas
cmpsl
lret
decl
adc
jl
pop
push
add
xchg
jo
std
fldl
mov
and
out
fcomip
adc
int3
add
repz
or
sbb
cmp
icebp
lcall
pop
shrl
dec
push
sbb
pop
pop
xchg
xor
enter
pop
pop
je
dec
push
inc
mov
mov
cmp
test
mov
dec
fiadds
cli
jmp
sub
gs
push
sti
shl
push
xorb
add
sar
sub
fs
inc
add
dec
ss
push
fcmovb
out
xor
mov
incl
inc
mov
cmc
cmp
or
mov
sbb
sbb
es
inc
icebp
decl
inc
mov
pop
out
loop
mov
test
cli
mov
lcall
sub
sub
les
push
pushf
cmp
mov
in
nop
movsl
lret
lcall
cmpsl
test
dec
mov
lea
mov
sub
mov
pop
repz
cs
insb
inc
scas
push
add
aam
mov
roll
incl
jno
xor
cmp
aad
and
stos
jp
out
jb
adc
jmp
stos
dec
inc
sbb
aaa
mov
mov
jmp
test
mov
xchg
add
lock
fst
push
push
out
insb
into
lods
icebp
dec
shlb
xor
cmp
cld
sub
jmp
cmp
int3
xor
ret
push
sbb
out
pop
dec
lock
int3
sub
jle
rolb
incl
jo
jae
mov
mov
nop
cmp
lcall
lahf
call
add
movsl
inc
hlt
lds
push
mov
mov
pop
jg
out
sbb
lcall
pusha
jbe
jl
sbb
cwtl
sub
loop
xlat
gs
add
push
sbb
and
push
pusha
mov
out
ret
dec
mov
stc
rol
sbb
cmp
mov
in
jp
jnp
dec
mov
xchg
or
pop
lret
fdivs
ljmp
loope
mov
push
enter
jne
call
mov
loope
rclb
fisttps
sbb
in
mov
pop
xchg
push
decl
mov
sahf
dec
jl
jo
push
notb
in
jmp
or
or
je
pop
push
jg
and
repz
pop
popa
addb
decl
push
lea
xlat
add
mov
xchg
cmp
cmpl
mov
push
cs
in
scas
popf
sbb
dec
les
out
sbb
iret
negl
fsub
test
cmp
inc
push
mov
in
and
mov
jecxz
mov
outsl
add
sbb
sbb
cmp
movsl
incl
outsb
fs
leave
mov
mul
inc
xchg
stos
jne
imul
ljmp
loope
lock
decl
jg
out
mov
mov
mov
inc
lahf
cmpsl
shrb
bnd
pop
stos
jo
push
mov
or
inc
lret
icebp
pop
or
cmp
push
sbb
call
xchg
lcall
lea
shlb
popa
iret
mov
adc
ljmp
mov
push
mov
jb
pop
sti
sub
out
decb
jle
into
adc
mov
dec
pushl
add
inc
xor
pusha
jecxz
faddl
ljmp
scas
sbb
adc
or
ljmp
dec
mov
mov
mov
cmpsb
mov
xchg
out
jbe
in
jno
adc
lret
push
cld
jnp
cmp
cwtl
mov
aaa
lds
mov
xchg
insl
pop
lods
pushf
push
or
lds
xchg
es
mov
pushl
and
pusha
xor
cltd
sub
aad
cli
movsb
and
aam
pop
adc
fdivrp
jmp
ret
lcall
sub
or
inc
pushl
enter
ja
sub
push
add
xchg
xchg
rcr
inc
fldcw
cmp
ljmp
pop
scas
in
jns
fwait
inc
ffreep
pop
testb
jge
das
cmpsl
outsl
insb
or
sbb
jno
sbb
inc
cwtl
xchg
call
xchg
stc
jecxz
jns
in
in
fwait
jecxz
pop
mov
push
and
sbb
fwait
leave
sub
call
inc
xchg
insl
pop
call
pop
jns
add
mov
sub
pushl
push
cli
pop
xor
call
lret
or
dec
repnz
das
sar
ja
fwait
mov
push
cli
into
in
push
add
adc
cmp
mov
sub
shrb
stos
mov
daa
cmp
repnz
inc
enter
decl
dec
add
dec
dec
arpl
fwait
stc
mov
pushf
mov
add
ljmp
lods
nop
mov
addr16
pop
enter
push
mov
leave
xchg
lods
cmc
mov
stc
jb
push
cmp
jnp
imul
loope
js
rcrl
push
out
pusha
fwait
add
gs
stos
push
das
sar
mov
sbbb
adc
and
pushf
push
test
out
incl
xchg
xchg
shrl
stos
outsl
in
sbb
adc
adc
mov
pushf
sub
adc
pushl
and
cld
add
out
cmp
jge
push
nop
sub
out
adc
or
cmp
inc
push
stos
adc
mov
sub
dec
xor
outsl
xchg
ja
dec
sub
clc
lods
sbb
cmp
inc
aad
pushl
imul
std
cli
loop
rolb
adc
rclb
cmp
int3
dec
add
jge
jg
cs
push
jle
dec
js
jmp
scas
aas
popf
mov
movsl
mov
jg
xchg
pop
scas
daa
mov
xchg
popa
pop
pop
push
lcall
mov
and
jmp
enter
jnp
dec
inc
inc
sbb
jno
fwait
iret
jo
mov
sarl
xor
cmp
test
aad
dec
test
mov
je
xor
jecxz
xchg
jp
mov
fldt
lcall
mov
adc
push
movsl
clc
or
cmp
xchg
fsub
mov
mov
dec
ret
jge
mov
test
popf
sub
lds
out
xchg
or
inc
sbb
cld
jg
mov
pop
mov
cli
cwtl
and
push
adc
dec
out
imul
out
push
lcall
out
jle
add
mov
sbb
xchg
jnp
xchg
fxch
dec
cmp
movsl
aad
adcl
lcall
shl
mov
imull
sti
mov
arpl
das
shlb
stos
push
cmpsl
lcall
ds
inc
jno
jmp
xor
or
iret
mov
loope
dec
testl
lcall
sub
push
jae
and
leave
sbbb
pop
mov
les
mulb
ss
daa
dec
inc
shrb
jnp
push
fcmovnbe
in
jecxz
popa
test
sbb
sub
lcall
fcmovnu
xor
lea
sbb
js
adc
lds
shl
push
cs
jmp
es
mov
in
mov
fs
loopne
mov
decl
mov
xor
cmp
sub
push
clc
jge
arpl
adc
xchg
imul
call
mov
xorb
mov
mov
idivb
jmp
out
mov
orb
movsb
mov
out
jno
dec
jnp
dec
testb
in
sub
and
mov
sbb
sbb
loopne
incl
out
push
repz
dec
xor
scas
pop
ret
aam
repz
xchg
icebp
fcomip
int
or
push
sub
addr16
lea
sbb
ljmp
shrb
filds
fisttpll
mov
lret
xchg
mulb
gs
dec
or
dec
int
cmp
inc
xor
into
enter
repnz
xor
call
sbb
cmp
pop
lock
in
mov
pop
mov
add
pop
xchg
add
aad
push
pushf
pop
xchg
cmp
in
push
sahf
jnp
jg
bnd
mov
mov
sub
jl
or
xchg
icebp
pushl
fcompl
pop
mov
jae
out
push
out
out
cmp
mov
call
addr16
xchg
aaa
lods
jno
cltd
out
mov
xchg
xchg
or
ljmp
pop
fisubl
mov
pusha
adc
jbe
scas
lods
sarb
inc
jp
incl
imulb
test
ljmp
sub
rclb
addr16
fiaddl
add
cs
add
and
fstps
mov
fistpll
push
loop
in
das
cwtl
in
stos
call
or
fnstsw
subl
or
add
add
aad
mov
mov
xlat
sub
mov
movb
popa
jo
cmp
and
mov
fisubl
jmp
leave
xor
sub
cmp
adc
jle
in
cs
into
rcr
and
stc
push
popf
lods
lea
mov
xlat
daa
push
ret
push
or
mov
fcmovbe
lcall
xlat
call
push
push
nop
dec
test
test
int
repnz
mov
inc
out
incl
push
gs
xor
mov
push
icebp
xor
xor
mov
enter
mov
int
cld
pusha
mov
call
pop
cmc
cmp
aam
inc
push
push
mov
lret
pop
mov
inc
ljmp
fistl
out
inc
pop
and
jbe
mov
ficoms
je
pop
subb
adc
mov
xorb
lcall
mov
scas
jae
repnz
es
sub
mov
xlat
mov
push
mov
repnz
andb
mov
lcall
inc
dec
jmp
pop
aas
leave
mov
aaa
or
and
push
fisubrs
hlt
xchg
incl
cld
and
jbe
push
pop
outsb
aaa
adcb
jecxz
ja
pop
scas
shll
cltd
or
inc
ljmp
inc
jae
mov
fwait
loopne
mov
dec
mov
mov
lods
lock
das
clc
in
rorb
je
popf
pop
adc
pushf
push
xor
pushl
shll
dec
iret
testb
sub
push
lea
ss
lcall
es
jl
leave
adc
mov
rolb
mov
jp
adc
mov
mov
jl
mov
stos
mov
dec
lahf
xchg
jb
ror
in
clc
sub
mov
inc
xor
jmp
mov
pop
movsb
or
out
push
lods
jbe
dec
mov
or
and
dec
imull
push
mov
jmp
lret
imul
lds
loop
lahf
xchg
cmc
sti
mov
lret
mov
add
int
icebp
decl
sbb
movsl
stos
cld
fbld
pop
inc
or
lock
xchg
scas
inc
cmp
cmp
cli
jp
inc
add
xchg
hlt
pop
pushl
add
sahf
push
test
pop
cs
cwtl
call
lock
jmp
mov
or
jno
push
add
mov
hlt
rorl
decl
dec
jl
jns
inc
push
out
xlat
xor
cmp
aaa
sarl
pop
xchg
lahf
jg
pop
add
fdivr
inc
out
adc
cli
dec
add
call
clc
out
xor
push
frstor
incl
or
or
or
or
push
xor
and
mov
bound
inc
fcomip
incl
movsl
outsl
dec
fildl
repz
adc
cld
outsb
push
adc
pop
jnp
or
adc
dec
or
std
jecxz
push
leave
fwait
or
sbbl
pop
mov
call
adcb
stc
mov
push
out
xchg
and
aad
pushf
sbb
jnp
xchg
mov
aas
rcl
jo
je
ss
addr16
bound
add
incl
adc
insl
lods
sub
fwait
mov
out
push
push
iret
mov
mov
pop
icebp
ljmp
test
xchg
sbbl
rcr
rorb
iret
dec
sbb
xor
ljmp
adc
cltd
mov
cs
sbbl
mov
nop
fcomp
and
outsb
inc
stos
test
push
insb
inc
inc
aaa
push
and
call
cmpl
mov
mov
hlt
dec
xor
aas
lods
mov
sar
cmp
and
leave
ffree
mov
mov
jmp
pop
pop
jb
popa
arpl
or
pop
mov
stos
xor
call
lcall
jmp
imul
xchg
test
sbb
jbe
push
cli
adc
fs
lcall
sub
insb
fxtract
mov
test
fmul
push
push
inc
ljmp
jg
inc
cltd
cmpsb
sbb
xchg
les
arpl
shrl
mov
cmp
fmull
dec
out
inc
aad
sub
jno
inc
mov
in
pushf
faddl
sbb
jg
cmc
xchg
testb
loopne
mov
xor
test
call
adc
enter
cli
mov
jg
and
dec
inc
or
sub
push
jl
fwait
inc
mov
int
pop
mov
push
mov
xchg
lahf
push
addr16
adc
sbb
lcall
outsb
cmp
enter
pop
pop
mov
stos
mov
or
out
test
sub
dec
aam
es
or
ljmp
imul
lock
pop
mov
arpl
scas
test
dec
mov
lcall
jl
xchg
cs
xchg
sbb
mov
push
add
lcall
incl
repz
fwait
cmp
ss
mov
loopne
jae
lods
jecxz
loop
cld
lcall
js
stc
test
cltd
jmp
mov
aaa
gs
inc
dec
xor
adc
lcall
test
ja
adc
pop
lahf
sub
sbb
stos
cli
and
add
ljmp
shlb
adc
cs
in
jne
jl
or
pop
hlt
sbb
xor
pusha
arpl
push
dec
jmp
push
pop
mov
or
cmp
testb
inc
pop
cli
lret
clc
enter
add
xor
icebp
stos
mov
fwait
lock
or
fistps
incl
xchg
mov
scas
inc
pop
jl
shll
call
inc
cmp
or
test
add
xchg
cwtl
mov
test
xchg
mov
jp
pop
dec
ljmp
fs
mov
pop
into
sub
mov
cld
paddsw
call
add
inc
sub
mov
mov
xchg
mov
ljmp
xor
xor
jns
jo
aas
pop
pop
cli
mov
or
sti
inc
mov
or
cmp
push
sub
jl
mov
mov
push
mov
cld
in
inc
mov
or
sbb
call
jp
loopne
lock
pushf
shll
sub
sub
ret
aas
adc
ja
iret
add
jns
push
mov
aas
cmpsl
loope
leave
aad
push
xor
rcll
jecxz
sbb
loop
cmc
jp
hlt
incl
sbb
popf
xchg
xor
in
push
fsubrs
sbb
shr
in
in
jg
xor
pop
sbbl
fisttpll
fsubs
cs
push
pushl
push
mov
jecxz
adc
fnstcw
insb
mov
add
pop
mov
xor
jg
mov
sub
inc
in
cltd
fs
scas
cmp
mov
sub
xor
push
rolb
mov
xchg
out
mov
rcrb
in
xchg
and
inc
popf
and
mov
daa
ret
or
jmp
popf
and
or
lcall
push
sbb
push
fwait
rolb
xorb
cld
loope
jb
jg
popf
insl
mov
leave
sahf
dec
mov
push
jb
call
ds
mov
inc
icebp
aad
movl
push
jle
or
jmp
inc
imul
lcall
inc
cmp
push
cmpb
mov
cmp
cmp
out
lcall
jno
and
pop
cmp
push
mov
jbe
push
stc
adc
lods
in
mov
ret
sbb
jl
call
xchg
lahf
pop
jl
push
jle
jno
cld
ljmp
jbe
push
push
subl
pop
cld
jmp
add
mov
in
and
imul
pop
jge
mov
insb
outsl
jecxz
mov
in
stc
movsb
pusha
insl
xchg
cli
and
jg
and
sub
add
cmpsl
xchg
sub
push
movsl
pop
lock
loopne
jg
subb
add
js
sbb
xchg
and
xor
sub
call
jmp
gs
add
adc
inc
mov
mov
push
mov
dec
loop
ud0
xlat
scas
inc
or
cmp
add
mov
add
cli
ljmp
int
insb
mov
push
adc
loopne
push
pop
imul
ljmp
out
jg
ds
loopne
inc
sbb
xchg
ja
mov
test
jge
push
ficoms
push
fwait
push
in
cld
gs
or
js
out
jg
hlt
aad
mov
mov
call
jae
testl
int3
jb
insb
pop
mov
stc
roll
mov
push
mov
dec
lcall
cmpsl
xor
cmp
fnstsw
sti
pop
jo,pt
jmp
xlat
pop
lea
aam
mov
jmp
push
mov
nop
cli
out
sbbl
roll
jnp
mov
lcall
dec
sub
pop
sbbl
out
fld
jne
mov
mov
int3
inc
xchg
mov
pop
jnp
lret
dec
rclb
dec
add
inc
and
xlat
int
and
dec
ret
ljmp
ficoml
jg
or
mov
lcall
stos
xor
push
xchg
neg
mov
sub
cmc
loope
imul
dec
inc
and
aam
jg
pop
pop
out
sbb
xchg
add
std
push
xchg
jl
push
mov
cmp
test
sbb
ljmp
ret
mov
mov
mov
test
xor
les
out
scas
pop
out
daa
push
push
sar
incl
xor
adc
cmpsb
jle
mov
mov
scas
lock
mov
repnz
es
jecxz
incb
sarl
in
popf
jbe
xor
lcall
loope,pt
sbb
out
inc
sti
lods
lock
jmp
int
cmpl
addr16
imul
jg
or
adc
sbb
cmp
push
cmp
mov
adc
jg
lcall
test
push
push
aaa
mov
fs
subb
incl
ret
mov
lods
cmc
cmp
lods
fdivrl
shll
dec
push
jmp
add
clc
mov
jb
les
enter
inc
jp
jmp
dec
lahf
inc
mov
jmp
dec
mov
jne
orb
dec
stos
ud0
push
xor
xchg
aam
lret
inc
inc
cmp
fbld
rclb
sbb
xor
rolb
mov
mov
lret
xchg
js
push
xor
cld
inc
imul
sbb
cmp
fcomps
shrl
loopne
mov
adc
out
bound
pop
out
mov
and
idiv
lcall
hlt
in
jmp
je
addl
or
push
mov
iret
mov
push
dec
adc
mov
shl
int
jp
outsl
sub
push
lock
sub
sbb
in
jecxz
incl
nop
pop
test
xchg
cmp
dec
jg
fsubrl
sub
pop
and
fdiv
hlt
insl
adc
std
jno
jb
fildl
ret
ja
incl
stc
cwtl
mov
enter
leave
xor
sbb
inc
les
mov
cmp
into
adc
dec
hlt
ljmp
xlat
mov
sub
fisttps
scas
sbb
mov
add
out
jg
pushl
mov
rorl
jg
push
or
in
je
sub
adc
fstpt
inc
fistpl
inc
jg
add
jns
xor
testl
call
cld
out
int3
or
and
enter
pop
ss
ljmp
fnsave
roll
rcrb
adc
scas
fists
xchg
leave
enter
mov
xchg
mov
cmc
push
fwait
jmp
lcall
rcrb
imul
aad
es
mov
pop
stos
mov
into
cmp
jb
or
mov
xchg
movntps
jmp
loope
pop
inc
xor
in
js
dec
xlat
or
outsb
ljmp
cmpsb
adc
jp
imul
sbb
pop
leave
adc
cmc
jp
ja
pushl
and
in
jns
push
pop
lcall
xchg
ljmp
mov
fiaddl
and
lods
add
lock
lcall
jb
cmp
mov
adc
dec
test
scas
negb
aam
cwtl
icebp
cs
lods
push
and
xor
add
ljmp
sub
cmp
sar
jecxz
daa
adc
je
in
cld
jg
cwtl
out
rcrl
pop
adc
pop
mov
mov
repz
popf
jg
fmulp
bound
repnz
add
pushf
flds
testb
stc
fcompl
and
cli
jmp
sti
and
cmpsl
repz
ljmp
lret
enter
popf
aad
decl
lock
test
lea
fisubrl
or
mov
incl
cmp
mov
in
and
and
xchg
sbb
xor
lret
loope
jecxz
es
stos
xor
adc
fcomip
in
insl
inc
mov
and
mov
insb
nop
in
pop
cmp
pop
out
repz
mov
xor
cmp
mov
push
cmpsb
push
pop
popa
lahf
pop
out
mov
jmp
add
fs
outsl
outsl
dec
inc
mov
stc
icebp
push
int3
xor
das
mov
xor
lcall
and
mov
push
sbb
fiaddl
adc
or
imul
stos
add
lret
inc
inc
popf
sub
jae
fcoms
fstp
inc
add
out
cmp
faddl
jae
inc
dec
pop
xchg
fs
xchg
pop
test
aaa
call
ljmp
stc
fldt
mov
fs
jae
shufps
ljmp
xchg
cwtl
popa
xchg
mov
arpl
mov
das
movsl
inc
add
sbbl
sahf
jg
andb
repz
fcompl
lods
cld
pop
das
cmp
jl
dec
inc
loop
xchg
lds
ret
jge
lret
xor
cmpsb
out
adc
decl
orb
ret
mov
dec
jle
pop
orb
mov
aas
jmp
xlat
push
ljmp
in
mov
test
dec
mov
in
sub
scas
jp
mov
lret
xchg
cli
push
jge
imul
and
dec
mov
jns
adc
test
push
out
pop
jmp
pop
bts
cmc
push
lahf
inc
and
inc
popa
and
lcall
push
leave
cwtl
mov
movsl
pop
mov
dec
cmpb
jg
add
jmp
sub
jg
ret
decl
mov
out
jg
mov
push
fidivrs
pmulhuw
fbld
shrb
mov
adc
lcall
add
jp
in
insb
cmp
lock
in
int
cmc
test
decl
and
add
aaa
push
das
sub
lahf
push
out
iret
fldl
sub
inc
cs
pop
push
mov
lcall
jge
jp
out
pop
ret
and
pop
insl
imull
aad
loop
mov
xor
fildll
mov
mov
add
decl
rolb
add
sbb
jmp
je
cmpsb
or
xor
mov
dec
ljmp
sar
push
stc
pop
ljmp
xchg
xor
cmp
cmp
cmp
push
inc
xor
mov
data16
and
in
mov
jg
imulb
sub
cmp
popf
jno
test
bound
sub
xchg
pop
pop
cld
fcomip
jmp
mov
scas
enter
inc
pop
das
add
rorl
mov
sbb
fsubrs
dec
insl
les
loop
das
xchg
sbb
pushf
and
ljmp
cmc
shrb
pop
aas
inc
lods
jo
xor
movsl
sbb
sub
mov
ljmp
enter
mov
dec
insl
rolb
pusha
clc
push
rcrl
fwait
mov
dec
or
sub
jge
or
adc
jo
mov
sti
ljmp
imul
jo
adc
adcl
xchg
movlps
in
or
add
popa
out
mov
ja
or
adc
mov
sub
decl
mov
mov
movsb
sub
dec
mov
add
ja
sbb
inc
jmp
cmp
cli
test
lock
push
test
jbe
std
xchg
pop
fisubrl
push
pop
lcall
int
lods
mov
xchg
movsl
pusha
pop
loopne
mov
pop
fcomp
mov
push
stos
dec
aad
jl
inc
jne
dec
dec
cli
sarl
rolb
cltd
jmp
cmc
sbb
es
xor
aad
cmp
jmp
dec
stos
xchg
add
hlt
pop
jl
loopne
sbb
rclb
shrl
jecxz
mov
push
fistpl
mov
sahf
or
adc
les
cmp
lods
test
or
stc
pushf
sar
mov
int
mov
add
xlat
ljmp
repnz
mov
stos
fiaddl
fnsave
sbbb
out
mov
aaa
sub
xlat
shll
lcall
or
pushf
cmpsb
xor
loop
gs
push
movsl
adc
pop
jg
lcall
rorl
xchg
stos
push
aad
pop
cwtl
fnstcw
cmpsl
test
popa
inc
test
lods
mov
push
xor
sub
fwait
stos
cmp
mov
push
outsb
test
jne
shl
decl
sbb
clc
pop
ficompl
sub
mov
int
sub
jle
mov
fnsave
xor
mov
sub
xorl
jns
add
inc
cmpsl
call
int3
mov
out
and
inc
lret
js
jp
add
mov
lock
sub
test
pushf
inc
loop
sti
loope
adc
mov
mull
push
fisubs
ss
pop
and
incl
scas
ret
fstps
mov
jmp
bound
ret
and
js
fbld
fsts
lcall
cmp
mov
mov
xor
subb
pop
inc
mul
incl
xchg
out
dec
loope
sbb
arpl
or
or
aaa
int
sti
mov
lea
loopne
ljmp
das
imul
mov
inc
mov
dec
inc
push
mov
sub
push
push
jp
sbb
xor
mov
out
daa
in
mov
movsl
int
dec
cmp
sub
popw
add
sub
or
mov
mov
xlat
or
xchg
cmp
inc
sbb
dec
scas
cmp
add
loop
nop
jl
out
jmp
push
cwtl
xlat
mov
nop
or
mulb
sbb
out
sarb
pop
or
adc
bound
jecxz
or
dec
dec
cmp
mov
inc
adc
mov
mov
mov
adc
leave
push
call
pop
xlat
stc
or
sbb
fisttps
ret
dec
sub
sub
adc
cmp
ja
jmp
mov
into
in
aaa
jge
fwait
xchg
sub
dec
cmpb
loopne
adcb
fimull
or
cmp
bound
fiaddl
add
push
sub
mov
push
imul
sub
inc
decb
decl
shlb
in
cmp
push
movsb
dec
xchg
cmp
sbb
aam
cmp
xchg
lds
mov
mov
sarl
adc
sbb
mov
mov
into
sti
das
mov
imul
test
dec
cli
lcall
je
pop
cltd
push
insb
int3
incl
mov
cmp
adc
fstl
or
rcrb
push
or
cmp
incb
shr
mov
popa
inc
xlat
lea
add
jl
add
lock
loope
fists
fstps
sub
ljmp
jecxz
ret
sbb
mov
push
jmp
jg
loop
in
aas
ljmp
outsb
sbb
xchg
icebp
jmp
sub
mov
push
adc
imul
xchg
push
cmpsl
jle
hlt
inc
or
sti
fwait
mov
adc
adc
jg
andb
hlt
jne
jb
xor
loop
sbb
mov
mov
pop
insb
cmp
jmp
scas
popf
aam
aam
mov
mov
pop
adc
push
inc
ret
add
mov
mov
push
jnp
cwtl
lahf
fiaddl
lods
repz
dec
roll
icebp
or
add
or
test
hlt
hlt
mov
adc
or
int3
call
sub
pop
push
and
decl
sub
sub
mov
mov
xchg
lahf
fbld
push
popf
pop
je
sub
js
add
decl
fbstp
icebp
je
shl
dec
sub
notb
mov
pushl
aas
outsb
out
sbb
mov
mov
jnp
xor
lahf
dec
call
mov
lcall
pop
rcll
mov
sub
mov
aam
fadd
jecxz
mov
mov
loopne
inc
into
xchg
push
adc
orl
dec
icebp
lock
repnz
dec
ds
inc
pop
std
incl
pop
xor
add
lcall
mov
push
pushl
inc
cmc
or
jge
adc
in
pusha
jne
out
push
pop
aaa
inc
pop
inc
push
enter
lcall
add
jbe
or
iret
adc
std
popf
pusha
jecxz
gs
clc
pop
imul
call
or
cli
xchg
aas
inc
mov
inc
sahf
cmp
js
aad
ret
fwait
adc
incl
xchg
sub
addr16
rcl
jno
mov
push
lods
pop
dec
lret
adc
cmp
scas
xor
dec
dec
mov
fsubr
jg
in
xchg
cmp
sbb
xchg
lods
jge
mov
mov
mov
jmp
repnz
stos
add
jle
xor
and
js
pushl
loop
imul
jb
js
cmp
push
push
xchg
xchg
xchg
jno
in
jle
lcall
push
popf
insw
add
cmpsl
mov
xchg
jns
mov
std
stos
inc
repz
jle
les
shrb
std
sbb
xchg
jl
or
fdivrl
pop
rcrb
pop
adc
push
xchg
dec
adc
cmp
jge
xchg
clc
ljmp
shll
fbld
xor
gs
pop
testb
call
jl
pop
mov
sbb
and
mov
cltd
int3
mov
decl
add
dec
mov
cld
in
insl
dec
xchg
or
std
negb
or
call
add
pushl
xor
sbb
je
stos
subb
and
movsb
mov
sbb
rol
pop
out
imull
hlt
add
test
cmpsb
mov
outsl
sub
std
in
push
addb
fs
add
xchg
addr16
cli
jns
jae
loop
fwait
repnz
test
lcall
pop
push
fs
add
into
and
xchg
adc
iret
cmp
jl
mov
pop
mov
lods
adc
inc
push
push
fnstenv
sbb
inc
sbb
fdivp
filds
jecxz
and
adc
mov
scas
lret
test
jmp
lea
inc
movsl
rcrl
fmuls
aas
mov
mov
mov
sar
std
cmc
les
jp
xchg
pop
popf
ss
cli
cmp
push
cli
bound
push
in
inc
fnstsw
pushl
stos
cli
lods
cmp
add
mov
aas
and
and
daa
leave
sub
decl
or
out
shlb
lcall
lret
push
pop
add
adc
push
test
lahf
pusha
repz
push
lcall
pop
add
mov
push
arpl
mov
cmp
mov
xchg
fldt
sbb
or
sbb
iret
movsl
lcall
lcall
xchg
add
mov
jp
gs
mov
adc
mov
mulb
pushl
xor
jl
das
idivb
mov
lahf
and
lcall
repnz
sbb
lcall
or
aaa
inc
pop
fldl
dec
out
sar
cmp
lcallw
call
ss
xorl
gs
icebp
test
jno
mov
pop
mov
adc
push
je
push
push
xor
xchg
clc
mov
data16
insb
add
ds
pushf
shlb
xor
lcall
int3
adc
mov
ret
outsb
pop
push
int
mov
xor
lods
clc
ljmp
mov
and
arpl
dec
mov
std
xchg
sub
mov
jle
sti
shll
jno
ljmp
cmp
xor
mov
hlt
mov
arpl
loope
movl
pop
push
scas
ja
sbb
mov
ffree
mov
cmp
movsb
cmp
cmp
push
adc
add
inc
or
add
pop
insb
loopne
inc
jl,pn
sbb
inc
xorl
ljmp
lods
pop
push
mov
in
fisttpll
cmp
inc
dec
xchg
cmp
jge
push
push
fcoml
stc
sahf
cmp
mov
inc
ficompl
xchg
insl
repz
mul
incl
cmp
sub
xchg
and
rorb
bound
subl
aas
add
das
xchg
outsb
outsl
rcll
mov
mov
jns
mov
loope
pusha
and
xchg
add
mov
xchg
out
lods
xor
jb
push
add
xchg
cmp
jnp
and
lcall
je
ror
inc
outsb
gs
imul
or
push
cmp
xor
cmp
sub
inc
pop
xchg
int3
aad
sub
xchg
daa
lcall
pop
mov
aad
pop
push
ljmp
mov
outsb
cmc
push
out
xchg
aas
fs
mov
mov
fcmovu
xlat
in
leave
movsb
or
dec
mov
cli
jno
in
pop
test
movsl
int3
mov
outsb
jo
popf
push
xchg
cmp
xor
dec
xor
out
in
int
and
nop
push
lahf
or
test
add
or
jl
das
adc
out
dec
pop
cmp
xchg
lock
test
push
pushl
push
mov
fucomi
mov
jnp
ja,pt
pushl
test
jecxz
sub
inc
mov
not
sbb
test
and
ljmp
std
dec
mov
dec
stc
iret
mov
add
incw
mov
xchg
jg
jmp
add
pop
test
sub
jb
aad
sub
aam
sahf
das
lock
inc
cmp
push
decl
cli
xchg
add
xor
insl
xchg
pop
inc
push
mov
mov
loop
decl
push
mov
jmp
mov
add
pushl
cmp
ja
shl
pop
popa
cld
push
mov
dec
add
push
aas
add
jnp
test
and
lret
mov
call
fsub
scas
jno
out
jmp
dec
pusha
mov
popf
pop
lock
inc
xchg
call
and
sbb
push
or
cmp
jmp
clc
enter
std
les
mov
decl
pop
sub
leave
add
add
or
sub
cmpsb
rcrl
stc
pop
rcrb
rcr
test
cmpsb
push
add
rcll
lret
pushf
push
mov
lcall
jecxz
lock
xor
sub
iret
mov
xor
mov
xor
lcall
sbb
in
or
fs
adc
push
enter
test
cmpl
ret
inc
into
ret
das
pop
inc
cwtl
push
push
adc
out
adc
mov
xor
lcall
subb
testl
dec
add
and
mov
cmp
mulb
lcall
test
mov
cmp
bound
gs
fisttps
mov
mov
insl
repnz
loop
mov
scas
or
ror
sahf
xor
push
roll
ljmp
mov
mov
and
push
xchg
cmp
jb
dec
mov
call
aam
cmpsb
ret
add
push
fisubrl
mov
outsb
mov
jae
leave
cmp
into
lea
not
xchg
xor
push
jl
fwait
jl
incl
lahf
fwait
cmpsl
das
mov
jb
and
mov
adc
es
or
sar
jbe
lahf
iret
addr16
add
filds
adc
es
jecxz
cmp
out
das
mov
cmpsb
das
stos
in
ret
lock
mov
mov
mov
push
inc
cmp
mov
or
add
push
incl
pop
jmp
fadd
push
xor
jb
int
mov
out
nop
jae
dec
jne
pop
std
mov
or
cltd
add
cwtl
out
pushl
mov
sub
ds
jno
xchg
sar
sbb
adc
push
mov
ja
daa
gs
jo
and
jg
movb
pusha
cmp
jo
and
decl
in
or
sbb
adc
xor
or
daa
bound
mov
ljmp
lea
jge
jp
sbb
ja
arpl
add
es
lcall
stc
dec
mov
popf
fwait
pusha
in
sti
push
sbb
popa
cmp
xlat
sbb
fsubs
cmp
stc
cmp
sub
sub
adc
neg
push
jbe
shll
data16
int3
arpl
faddl
jge
rorl
fwait
add
inc
loopne
popf
cmp
sub
fwait
jle
inc
ljmp
mov
ja
and
pop
lahf
inc
stc
cmc
imul
insb
push
fcomps
icebp
mov
decl
lahf
and
roll
enter
cmp
cld
enter
roll
rep
inc
cmp
fmull
dec
ret
adc
xchg
fists
sbb
pop
rcl
jae
mov
iret
pushf
xor
push
xchg
andl
cmp
js
fcomip
loop
xchg
es
pop
add
push
ret
jb
mov
mov
and
mov
xchg
push
jecxz
and
icebp
and
xchg
pop
idiv
call
pushw
testb
adc
adc
adc
pop
jmp
ja
dec
cltd
insb
jmp
pop
scas
ret
pop
out
mov
cli
mov
mov
mov
jl
ljmp
in
lcall
xlat
mov
sub
daa
jge
jg,pt
mov
incl
imul
ret
int
and
test
decl
mov
leave
jg
sti
popl
mov
jle
ret
pop
out
clc
inc
xlat
outsl
daa
cwtl
and
cmp
xchg
aas
cmp
jae
or
inc
ljmp
mov
mov
int3
jno
arpl
xchg
adc
and
cmp
mov
sub
cmp
xchg
add
andb
lods
testl
xchg
mov
decl
addr16
push
xor
scas
jae
and
addr16
je
push
addr16
out
mov
lcall
imulb
xacquire
jbe
sbb
jle
push
xor
cmp
subb
mov
sarb
pop
add
mov
addl
mov
cmp
push
pop
or
pop
pop
jne
and
jb
pop
out
push
mov
dec
int
test
call
fdivrs
push
xlat
test
sbb
sub
lcall
aad
imul
icebp
pop
in
add
or
inc
jns
filds
jmp
xchg
adc
jle
popf
pop
sbbb
xor
push
xchg
adc
xor
pop
mov
xchg
inc
or
fadds
or
xchg
mov
fistpll
andb
pop
jbe
sub
lret
add
mov
sub
rcr
fbstp
lcall
dec
cld
out
cmp
jecxz
cli
sbb
or
adc
loopne
sbbb
int3
cmp
pop
fs
lcall
pop
xor
dec
loopne
or
pop
sub
xchg
mov
dec
lcall
loop
stos
in
into
fiaddl
xchg
mov
mov
aam
cmp
imul
mov
clc
lcall
adc
adc
negl
inc
jg
jb
ljmp
dec
xor
ret
in
out
insb
push
cmpsb
aaa
inc
inc
mov
and
xlat
pushl
dec
out
stc
lret
jno
push
loop
in
pop
jp
sub
icebp
cli
mov
fdivrp
pop
lock
clc
outsl
ret
sarl
inc
fidivs
sub
dec
mov
sub
pop
cltd
test
decb
iret
rorb
sub
add
pop
add
in
mov
or
mov
jl
cmp
std
out
and
stos
clc
mov
lcall
lods
lea
pop
fs
hlt
inc
addl
sub
frstor
dec
mov
xchg
out
pop
jle
cmp
fs
mov
lcall
add
cmp
inc
dec
pushf
pavgb
xchg
test
push
or
xchg
dec
and
std
in
ret
loope
jmp
in
adc
pushl
fwait
sahf
fs
fdivrp
mov
mov
jb
and
icebp
les
mov
rcl
cmp
lret
jg
fists
ffreep
mull
mov
adc
pop
ja
mov
sbb
mov
enter
xor
into
sbb
popf
pop
sar
or
xchg
out
lcall
dec
lret
mov
inc
jecxz
out
dec
int
cmc
jg
inc
sub
sbb
pop
aam
inc
jg
nop
sbb
pushl
cmp
popf
subb
xor
scas
mov
fdivrs
dec
lock
lds
lcall
decb
call
xchg
incl
mov
in
push
xchg
sbb
or
xchg
aaa
or
pushl
call
lock
cs
jl
outsb
xchg
test
fwait
rorl
adc
ljmp
iret
jg
andb
lcall
sbb
popa
flds
icebp
or
pop
icebp
mov
into
push
adc
bound
pop
sub
add
mov
sub
xchg
dec
test
lods
outsl
arpl
jb
mov
jmp
xor
jg
popa
sbb
or
mov
popa
out
mov
test
push
cmp
mov
out
cmpsb
push
mov
rclb
mov
cmp
cmp
fdivrp
sbb
mov
cmp
in
xchg
mov
imull
sub
xchg
lcall
mov
dec
mov
sbb
adc
sub
mov
lea
dec
adc
mov
lret
lahf
fcomi
adc
dec
mov
rcrb
xchg
jmp
add
xchg
xor
mov
lock
stos
pop
pop
inc
pop
push
cmp
popf
xor
ret
insl
mov
adc
add
lods
bound
in
inc
enter
lcall
add
sti
mov
imul
push
sub
lock
inc
arpl
pop
cmp
repnz
pop
fisubrs
pushl
ds
sub
push
out
inc
movsl
lcall
adc
jns
pushf
cmpsl
push
mov
jg
sti
and
rcll
incl
inc
adc
inc
iret
cli
lret
jg
xchg
stc
das
and
outsl
ret
and
out
ds
mov
gs
jg
std
sarb
cs
dec
cmc
movsl
and
xor
adcb
cmp
adc
in
pushl
std
xchg
jno
or
and
pop
sub
hlt
jae
and
mov
ljmp
jl
pop
jbe
pop
outsb
inc
sub
inc
sbb
push
mov
ds
jg
xor
cli
orl
jecxz
push
inc
cmp
pop
or
out
testb
outsl
xor
xor
pop
stos
orb
gs
imul
or
adc
mov
or
je
inc
stos
idiv
jg
mov
sbb
movsl
add
mov
push
jp
push
mov
jg
push
inc
clc
mov
psubb
dec
decl
pop
push
or
lret
stos
fwait
lock
adc
rcrb
inc
pop
fistpl
jmp
pop
xor
sub
stc
stos
sbb
jmp
test
fnstcw
push
dec
xchg
mov
mov
jmp
jbe
dec
shrl
movb
js
test
sbb
lods
fs
jmp
jne
mov
inc
mov
lcall
lcall
ljmp
div
repz
inc
add
clc
lret
jno
popa
xchg
push
mov
mov
mov
mov
negb
jne
dec
jmp
cmp
sub
movsb
pop
push
call
cmpsl
shrl
sbb
ss
js
sahf
pop
test
fbstp
mov
and
adc
mov
sub
sbb
incl
jne
and
aam
jbe
arpl
das
sbb
sub
dec
push
call
push
adc
mov
sbb
mov
inc
scas
jns
pop
mov
add
ljmp
outsl
insl
push
pop
ret
sub
xchg
rorl
movsb
andb
xchg
mov
sbb
dec
mov
out
insl
jmp
and
sub
push
dec
xor
cwtl
and
in
mov
or
sbb
xor
sbb
ss
icebp
fs
rol
mov
push
outsl
xchg
sbb
loope
pushl
or
cmp
add
jg
out
rclb
dec
roll
pushl
lcall
jge
jp
or
jle
pop
mov
adc
lret
jae
xor
jp
ljmp
and
xchg
mov
movsb
sbb
mov
and
jne
adcb
lds
decl
pop
scas
xor
add
xchg
cs
in
movl
aas
jg
push
fmull
mov
insb
lret
hlt
xchg
cmpsb
fwait
stc
jp
shll
js
or
cmp
fwait
push
jne
jl
push
or
push
test
int3
std
xchg
test
pop
inc
hlt
sbb
fiadds
gs
fisttps
inc
jecxz
lds
pop
subl
call
pushf
ret
sahf
dec
inc
test
loopne
xchg
xor
push
adc
lcall
mov
ds
xlat
icebp
icebp
imul
jge
jo
out
adc
adc
inc
lods
pop
rep
fisttps
mov
dec
out
nop
in
pop
pop
int3
lods
mov
sbb
cltd
mov
cmp
or
sti
mov
jecxz
adc
popa
dec
push
sahf
mov
int
inc
shll
jae
adc
jmp
jbe
mov
mov
aam
shll
ret
mov
js
mov
call
bound
aaa
xor
xchg
fdivrs
pop
mov
scas
adc
shrb
in
fisubs
dec
je
inc
sti
lcall
jnp
fiaddl
ljmp
shlb
pop
inc
ljmp
cli
mov
inc
sub
icebp
ds
scas
je
aad
inc
sub
xlat
clc
fmuls
stc
and
jne
cmpsl
imul
cmpsl
xchg
std
cmpsl
mov
lods
dec
push
pop
nop
testl
fs
ss
call
gs
add
icebp
mov
int3
mov
out
jno,pn
xor
test
mov
sar
jns
and
cwtl
cmp
pop
fsub
mov
jle
les
add
ljmp
jbe
pop
sahf
pop
pop
fwait
ss
adc
lods
jno
sub
lcall
adc
mov
and
pop
icebp
pop
test
mov
arpl
mov
dec
mov
test
ffreep
inc
cli
mov
dec
stos
sub
pop
cmc
stc
cmp
pslld
xchg
xor
add
add
push
jmp
jle
ljmp
xchg
pusha
and
mov
sti
jp
aad
cmp
xlat
push
jmp
call
adc
jg
sub
cmp
iret
ljmpw
data16
fldcw
pop
call
das
ljmp
mov
call
stc
mov
addb
testl
mov
outsb
sbb
xchg
roll
sahf
xchg
add
ds
ret
into
mov
into
imul
mov
xor
sbb
mov
xchg
fcomip
ljmp
adc
leave
int
or
cmc
jp
pushf
icebp
clc
insb
nop
mov
aad
pushl
nop
in
outsb
ja
add
rorb
jb
test
enter
in
shll
or
loop
sar
stc
addl
pop
mov
movsl
sub
adc
xor
cmp
lcall
inc
stc
fsub
jge
mov
mov
test
jo
shrl
psrlq
outsl
cli
js
push
xchg
mov
mov
cmpsl
add
and
lods
sbb
pop
inc
mov
btl
push
sub
mov
sbb
fbstp
ja
sbb
ja
cmpsb
sub
out
cmpsb
xchg
scas
test
stos
push
dec
jmp
xchg
lock
cmp
out
stos
ret
push
pushl
fcompl
mov
pop
les
jno
test
outsb
mov
and
popa
adc
decl
pop
cmpsb
jg
push
icebp
mov
add
loope
xlat
lcall
pop
pop
mov
jg
mov
adc
lahf
std
insl
ljmp
dec
push
xchg
add
mov
xor
lea
rcr
pop
cltd
sarl
call
or
push
inc
cmpsb
lea
pop
rorb
push
push
or
cmp
test
pop
pop
out
clc
incl
pop
repnz
cmp
test
sbb
mov
sub
iret
jg
lcall
jg
mov
cli
dec
aad
jo
mov
lret
inc
xchg
xchg
je
lcall
ljmp
cmp
and
or
mov
ficoms
pop
imul
out
cmpb
cld
out
clc
push
xor
test
push
jne
sbb
jg
push
in
inc
jl
cmp
jb
xor
scas
pop
jmp
cmp
scas
inc
cmp
mov
in
les
jmp
xor
lds
aad
incl
pop
stc
roll
popa
aam
mov
fnstcw
movsb
xlat
stc
jmp
das
into
scas
jl
and
sarb
or
inc
and
mov
icebp
and
mov
cmp
ljmp
dec
filds
xor
std
js
icebp
out
mov
sar
mov
dec
out
jae
push
outsl
mov
cmp
decl
lds
cmp
mov
mov
sub
cmp
ljmp
pop
push
xchg
and
or
add
rolb
pop
mov
ja,pt
pop
or
mov
cmp
aam
dec
stc
jae
adc
fcmovnu
push
ja
clc
fidivrs
push
mov
mov
decl
aam
andb
xchg
jne
fdiv
ret
shlb
xchg
out
push
cmp
sti
call
daa
or
int
nop
mov
fcomip
jmp
mov
lcallw
pop
fcmovu
outsb
inc
fdivs
decl
orl
pop
xor
push
pop
pop
add
or
inc
frstor
aad
jg
insl
mov
pop
cmp
jge
and
js
std
push
daa
mov
in
adc
incl
fldl
mov
shrl
imulb
inc
loopne
add
nop
lea
das
lods
pop
push
lds
xor
gs
push
clc
data16
negl
jecxz
dec
clc
pushl
test
sbb
mov
cwtl
ret
fidivs
mov
mov
sub
jne
fwait
push
movsb
in
pushf
call
mov
les
xchg
rclb
xchg
mov
push
shll
call
jle
es
es
into
add
cs
sbb
adc
ljmp
cmp
sub
out
mov
sub
in
mov
pop
addb
std
pushl
out
outsb
pusha
ljmp
dec
mov
inc
insb
push
out
ds
das
decl
sbb
fsts
and
movsb
mov
decl
mov
or
or
mov
mov
ss
mov
das
adc
push
mov
clc
mov
mov
call
loopne
notb
and
in
les
lea
in
dec
xor
pushf
sbb
in
enter
gs
lcall
jle
fsubrl
lahf
push
cmpsb
fldenv
scas
testb
jmp
decl
jns
loope
pop
xor
pop
outsb
lcall
fmull
mov
sub
jb
incl
and
push
cli
adc
lock
movsb
je
fxam
test
pop
cli
push
lcall
pop
jns
pop
icebp
mov
jg
jg
stos
das
cld
fwait
or
scas
adc
test
inc
addr16
sub
call
stc
pop
dec
das
rclb
int
push
xchg
and
fwait
jl
mov
inc
push
movsb
fs
xor
jg
add
cmp
mov
imul
and
roll
jne
sub
fbstp
push
mov
add
mov
in
lods
sub
dec
mov
mov
fisttpl
mov
outsl
inc
cmp
cwtl
jne
es
inc
mov
push
lods
sbb
pop
push
push
in
aas
xchg
and
decl
mov
jnp
stos
rcl
jge
xchg
push
mov
mov
jne
ret
das
and
decl
testb
sbb
call
adc
cmp
mov
aam
jg
xor
cmp
jb
incl
cltd
xlat
xor
inc
stc
loop
decl
lock
cmpsl
push
cmp
jle
shlb
addr16
pop
popa
xor
jmp
std
push
mov
or
jl
scas
mov
sbb
xchg
loope
popf
decl
sti
mov
xchg
cmp
mov
mov
ror
cli
ljmp
push
mov
int3
mov
lcall
call
call
mov
lds
add
sarl
jecxz
testl
das
ficoms
sub
into
shll
mov
push
or
sub
push
jbe
incl
sbb
sar
or
dec
lahf
outsb
cmp
pop
pop
rcll
negb
push
push
jne
add
mov
ds
fwait
imul
pop
dec
sbb
sub
mov
jmp
movb
std
pop
jp
js
into
push
xor
movsb
mov
or
push
std
mov
sub
loopne
movsb
mov
pushf
mov
dec
ret
inc
jp
jg
cmc
fnstsw
sbb
and
rol
xlat
push
and
jmp
add
mov
das
ljmp
movsl
dec
sub
fdivrs
or
push
jbe
dec
les
out
push
lcall
loop
int
stc
pop
sbb
mov
je
mov
xor
orl
sti
lea
outsl
movsl
cmp
or
lcall
xchg
or
xchg
ret
scas
fldt
mov
cmp
xor
sub
mov
push
loope
sbbl
inc
popa
or
mov
mov
cmpsl
and
mov
repz
test
mov
mov
jo
sub
sub
lods
call
add
mov
lods
mov
lds
xor
and
xor
mov
mov
out
movsb
push
or
fstpt
lret
daa
add
jbe
pop
cwtl
and
adc
bound
test
and
icebp
popf
xor
fdivrl
je
and
ds
pop
popw
stc
out
mov
jle
mov
arpl
cltd
sbb
push
push
xor
mov
dec
cmp
jp
call
inc
lea
insb
push
and
jecxz
mov
test
clc
fildll
pop
andl
int
hlt
and
scas
jg
jle
adc
es
adc
mov
std
push
jge
ljmp
test
lcall
jbe
inc
dec
push
dec
and
adc
cli
cltd
int
rcrl
int
dec
test
sbb
and
add
xorb
hlt
cli
jl
jnp
popa
lret
and
mov
mov
pushl
push
xchg
aad
mov
ret
ljmp
jnp
xchg
inc
cmpsl
xlat
xchg
outsb
pop
ret
loope
sbb
mov
inc
adc
cmpsl
mov
dec
cmpsb
loope
hlt
dec
xor
sbb
mov
enter
inc
idivb
xor
sbbl
nop
loope
aas
adc
lcall
jo
mov
inc
insb
repnz
loope
push
mov
and
loop
jmp
incl
xchg
stc
aam
mov
pop
test
lods
mov
push
testb
movsl
cmpl
std
fcomip
mov
xor
adc
push
fisubrs
mov
dec
in
clc
pusha
mov
stos
dec
js
push
lds
mov
repz
adc
popf
lcall
sti
pop
test
add
cmp
aam
ds
sbbb
adc
cmp
dec
fiadds
sti
jge
pop
cmp
repz
insb
adcl
mov
cld
mov
jmp
sub
xchg
sbb
imul
inc
test
pop
sub
push
mov
push
fdivrl
inc
imul
insb
and
dec
jle
sub
lods
js
mov
add
dec
lahf
push
add
repnz
in
mov
decl
adc
imul
out
push
adc
daa
sub
xchg
fldl
push
push
addr16
insb
rcrl
mov
ds
and
cmp
call
push
pop
mov
xchg
cmp
ja
fcoms
cmpl
mov
mov
lds
cwtl
dec
imul
push
mov
pushl
lcall
xchg
iret
stos
and
jbe
sbb
mov
push
mov
dec
incl
arpl
adc
in
sub
pop
popa
mov
outsb
mov
push
pop
push
push
xor
sbbl
mov
mov
insb
push
and
imul
mov
bound
inc
cmp
ret
decl
push
xor
inc
push
mov
lret
call
mov
cli
aaa
outsl
push
jg
leave
xchg
ss
rolb
push
or
in
cmpsl
dec
mov
pop
jae
scas
dec
mov
sbb
mov
fs
mov
in
inc
fldcw
test
fdivs
mov
ds
lret
fdivr
jg
imul
fcmove
jl
or
mov
lcall
sub
scas
test
fistl
popf
in
push
xor
pop
outsl
sbb
and
dec
jmp
das
mov
dec
bswap
xor
imul
mov
pop
or
sbb
lock
call
mov
roll
add
dec
inc
adc
aaa
lds
mov
inc
push
inc
cld
jmp
faddl
xchg
inc
dec
orb
je
stc
lahf
orb
xchg
push
mov
push
sbb
jg
sub
xlat
xchg
lods
jnp
or
dec
pop
fistl
push
mov
push
into
test
mov
nop
xlat
pop
push
mov
ja
sbb
insb
inc
xor
jmp
andl
lret
cmpsb
jle
dec
loope
imul
ljmp
lock
xchg
movsl
ja
push
mov
stos
or
mov
xchg
jns
pop
repz
gs
fcoml
aad
pop
pop
rol
lret
incl
inc
lds
cli
push
shrb
jne
or
stc
hlt
xchg
std
jl
movsl
bound
add
inc
cmp
xor
ror
imul
or
sub
out
js
ds
fisubs
lods
add
inc
fstps
pushl
jb
out
subb
ret
mov
mov
mov
push
jb
fdivrs
rcl
lds
sbb
pushl
adc
and
mov
add
or
clc
mov
or
xor
cmp
notl
sub
sub
add
mov
data16
imul
push
enter
ficoms
rorb
jmp
xchg
mov
decl
xchg
hlt
aad
mov
adc
mov
shl
cmp
pop
and
cmpsl
scas
pop
cs
cmp
sbb
sub
jmp
sbb
adc
xchg
add
lret
mov
mov
xor
repnz
cmp
es
call
scas
lods
cmpsl
shlb
dec
and
pushf
lcall
jmp
pop
or
out
xchg
cwtl
xlat
adc
pushf
xchg
mov
push
decl
sub
fs
cmpsl
test
sbb
fstl
testb
imul
jmp
push
pop
xor
mov
stos
pushf
and
lods
inc
cmp
jmp
xorl
add
adc
cmp
and
hlt
xchg
fwait
mov
std
aam
sbb
xchg
mov
and
outsw
mov
scas
or
sahf
and
dec
decl
pop
adc
pop
stos
call
jmp
mov
sbbl
test
adc
das
int3
cmp
cs
roll
and
jg
dec
iret
xor
retw
jmp
pop
mov
lret
or
ss
stc
and
jmp
adc
jno
clc
sbb
in
dec
sub
sbb
cmpsl
jae
cmp
xorl
mov
pusha
aam
or
jns
and
test
out
xor
insl
movb
lcall
and
push
push
inc
mov
in
dec
mov
mov
mov
pop
and
in
test
pop
jg
adc
lods
add
add
inc
ds
mov
out
cld
dec
pushl
jns
clc
or
loop
push
daa
mov
sub
insb
pop
je
shlb
les
lcall
outsl
jp
js
daa
mov
ja
mov
jae
pop
test
and
push
adcl
or
cs
cmp
ja
add
and
outsl
or
fldl
mov
cmp
sbb
jae
roll
mov
imul
call
test
add
ljmp
ljmp
push
lcall
xor
mov
add
enter
cmp
push
lods
add
decl
mov
add
cmp
sbb
dec
repz
into
push
pop
addr16
pusha
mov
mov
or
mov
inc
cmpsb
xchg
call
jecxz
daa
fstl
jo
push
push
mov
mov
aas
lret
test
or
dec
pop
stc
jle
dec
or
leave
rorl
jg
dec
lock
popf
cmp
mov
sub
inc
or
and
lcall
cltd
loop
jno
fs
lods
std
movsl
sub
sub
sub
inc
mov
jmp
dec
sbb
adc
inc
mov
jbe
sahf
into
xor
lret
jmp
vpminsw
fcompl
push
pop
xor
jp
inc
xchg
cld
mov
test
push
xchg
jge
mov
out
call
cld
mov
mov
dec
fsts
ret
cmp
mov
std
decl
cli
xlat
insl
add
xorb
jb
push
add
sub
lret
inc
mov
mov
loope
xchg
push
lcall
mov
fldenv
jg
cltd
push
ss
mov
mov
inc
loopne
and
mov
jmp
ret
push
cmc
push
scas
mov
cmp
xor
pop
call
enter
sar
mov
call
repnz
jne
pushl
cmpsb
sub
sub
loope
mov
push
dec
xor
xor
sub
push
cmp
mov
jmp
mov
jnp
mov
testl
xchg
cmp
rcrb
adc
push
stos
pop
outsl
mov
add
inc
scas
dec
cltd
inc
faddp
jmp
les
lods
lds
cltd
mov
xchg
mov
pop
dec
dec
addb
pop
pop
push
shlb
adc
mov
adc
imul
adc
into
bnd
fisttps
push
xchg
sub
cld
lcall
stos
iret
and
jmp
add
push
mov
jg
fidivl
std
jmp
fsts
hlt
and
mov
lods
nop
dec
aam
push
push
mov
cli
es
out
rcrl
enter
call
das
add
cltd
repz
call
adc
outsl
pop
sub
nop
stc
out
mov
aas
push
out
jo
or
incl
cmp
iret
pop
jle
cmp
call
add
je
cmpsb
test
add
enter
mov
pushl
adc
push
jecxz
js
pop
mov
sbb
sub
lcall
or
pop
mov
sbb
mov
nop
mov
sarl
add
mul
jmp
and
aaa
inc
iret
ret
aam
andl
int3
mov
ds
dec
daa
push
je
cmp
jmp
ds
add
ds
push
jae
jae
sub
add
mov
add
lock
inc
das
mov
sbb
mov
sar
push
insb
fisubrs
ficoms
inc
mov
sar
call
xchg
dec
add
adc
sub
fisttpl
mov
js
mov
add
mov
dec
negl
outsl
mov
lods
push
repnz
inc
mov
mov
aam
mov
cmc
sub
out
dec
test
test
xor
add
mov
rclb
ljmp
or
loopne
mov
mov
inc
ds
mov
std
decl
movsl
xlat
adc
int3
nop
cli
iret
mov
xchg
or
cmp
icebp
adcb
jne
adc
xorl
and
in
jnp
test
cs
cmp
mov
jne
push
sti
mov
int3
jne
mov
add
mov
lea
cmp
rclb
jne
inc
inc
push
push
push
push
mov
in
push
adc
decl
mov
es
push
push
push
push
addl
in
jl
adc
add
inc
insb
mov
mov
push
xor
dec
add
fincstp
imull
dec
insb
sbb
shl
dec
cmp
pop
nop
mov
inc
xor
add
sbb
inc
loop
mov
aaa
imul
sbb
ret
add
icebp
test
mov
neg
inc
xchg
jle
je
push
mov
data16
insb
dec
inc
loop
lret
dec
ret
xor
shrb
clc
and
fiaddl
jp
push
icebp
and
pop
cld
jg
adc
xchg
add
out
inc
inc
or
cmp
jle
sti
cmp
andl
xchg
mov
and
mov
or
sbb
jnp
sti
inc
add
cmpl
lahf
sub
fbld
shll
cmpsb
push
mov
xlat
das
ret
outsb
movzwl
scas
sarl
lods
fstl
inc
fldl
sub
mov
xchg
add
cmp
int
lret
mov
inc
imul
sub
les
sar
add
imul
notl
add
lea
mov
insl
sub
ret
mov
shll
mov
mov
xor
xchg
add
mov
jb
or
fwait
data16
jae
xchg
lock
sub
cmp
nop
sub
nop
add
mov
sub
mov
lea
jbe
sub
dec
insb
push
cli
flds
je
cmp
jo
jle
sbb
jns
jg
xchg
add
push
add
dec
aaa
les
jb
dec
and
sbb
scas
jmp
sbb
jbe,pn
xchg
mov
lahf
mov
add
inc
lret
add
sarl
pop
jmp
jg
subl
idivl
or
adc
jmp
sahf
insl
pop
jb
mov
rol
ret
test
mov
mov
cmp
sbb
icebp
push
shl
lds
inc
pushf
stos
xchg
adcb
lcall
cmpsl
movsl
sbb
push
insb
imul
push
das
push
js
andb
aam
sub
aas
push
daa
mov
pop
setg
and
bound
pusha
jmp
movsb
rorl
sub
push
jl
pop
decb
outsb
xchg
popl
out
xchg
iret
xchg
shr
cwtl
rol
or
xlat
jecxz
mov
sub
pop
call
aad
mul
arpl
add
push
fwait
jmp
jecxz
add
sbb
jns
lahf
jae
xor
sbb
jb
push
iret
xchg
lds
loop
jmp
jo
cmp
xchg
add
mov
sbb
lock
punpckhwd
push
scas
icebp
sub
jmp
rolb
lea
jo
aaa
bswap
sub
sub
sbb
mov
jns
pop
sub
dec
lock
mov
push
sbb
xchg
and
or
test
je
mov
test
fdivl
nop
push
lahf
mov
pop
je
enter
imul
push
jmp
cmpsb
fisubrs
cmp
aas
jp
jb
or
mov
out
out
clc
xor
and
xorl
or
and
and
repz
push
cs
dec
das
xchg
call
repnz
add
sbb
add
rol
add
inc
mov
jb
and
cmpsb
push
pop
and
jnp
add
cmp
test
push
or
inc
test
mov
add
out
xor
das
idivl
cwtl
cmp
cmp
inc
xorl
sbb
push
inc
fwait
add
adc
out
in
dec
adc
roll
push
adc
fmull
push
stos
xchg
mov
fadds
jmp
mov
xchg
lea
shrb
dec
mov
sub
mov
adc
add
jg
pop
aad
mov
rcrb
jl
ret
pop
and
push
test
popf
loopne
sbbb
mov
dec
nop
dec
add
shlb
add
add
and
mov
mov
mov
daa
sbb
cmc
das
or
sar
and
push
xor
xor
jne
hlt
out
sbb
sub
mov
sbb
sbb
pmaxub
add
jmp
test
cmc
nop
sbb
add
orb
cmp
pop
cmp
mov
add
clc
stos
add
and
jns
xchg
imul
mov
shrb
mov
xor
push
dec
push
mov
arpl
mov
pop
sbb
pop
inc
sub
xor
fidivl
adc
popa
jo
mov
sar
pusha
inc
or
je
cmp
je
roll
ret
pop
mov
pusha
jmp
stc
mov
mov
inc
dec
add
inc
sbb
outsb
dec
je
test
fcomp
mov
jmp
insb
sbb
test
bswap
adc
adc
pop
adc
pop
test
cmp
sub
xchg
jg
add
pop
pop
pop
pop
add
add
dec
call
imulb
mov
jne
or
leave
pop
mov
mov
imul
xor
xorb
ja
cmpb
je
pop
jne
ljmp
cmp
ja
cmpb
jne
mov
sub
rclb
les
or
add
mov
mov
xlat
adc
jg
inc
jo
call
or
add
divl
mov
dec
les
add
push
inc
or
xchg
call
or
fmull
scas
push
sub
pop
sbbb
loope
inc
cld
adc
iret
fistps
and
ja
add
mov
lock
testb
loop
push
sub
sarl
lock
lock
add
inc
popa
push
push
fdivr
xchg
xchg
aad
xchg
pop
and
andb
pop
sub
pop
popa
jb
inc
mov
cmp
jne
sub
jmp
addl
add
das
testb
add
add
adc
es
add
int3
add
jecxz
lock
adc
aas
nop
or
inc
add
cltd
and
adc
add
arpl
sti
int3
dec
adc
cmp
bound
notl
inc
repz
adc
jo
insb
adc
into
inc
jle
mov
pop
add
xchg
add
adc
imul
push
cmp
sub
arpl
movsl
inc
repz
add
mov
daa
icebp
xor
xor
jecxz
xchg
add
jnp
aad
mov
inc
adc
in
add
adc
push
iret
ss
pop
or
push
dec
xchg
inc
addb
add
sbb
fdivrl
push
and
adc
jnp
fisubrl
add
data16
mov
push
insl
out
pop
jae
fdivr
icebp
xor
or
orb
xchg
push
pop
mul
fisttpl
ja
scas
and
push
xchg
fistpll
fdivl
sbb
cmp
mov
fwait
xchg
inc
adc
addl
or
rorl
out
dec
dec
outsl
sbbb
push
es
adc
add
sub
xchg
mov
inc
ds
mov
daa
cmp
nop
addr16
or
or
pusha
sbb
adc
daa
repnz
negl
nop
push
mov
in
jbe
paddusb
hlt
add
repnz
or
call
push
fnop
mov
std
adc
dec
push
dec
dec
inc
pop
inc
pop
adc
mov
imul
xorb
dec
sbb
xchg
sbb
add
fs
inc
loope
out
mull
xor
outsb
pop
pop
inc
fstl
test
inc
lahf
ds
sbb
xlat
xor
call
cmp
xchg
push
lock
xor
push
push
mov
shl
push
inc
jns
cmpsl
stc
push
push
pop
pusha
jo
xor
mov
andb
xor
loopne
ss
nop
shlb
iret
repz
out
cmp
dec
pop
push
repz
cmpsl
mov
imul
cld
psubusb
sub
mov
cmp
add
xor
dec
add
push
mov
adc
jmp
ljmp
loopne
ficoms
xor
inc
xor
inc
gs
sarl
jno
mov
mulb
xor
inc
js
je
xor
rcrl
into
pop
arpl
pop
jnp
gs
sbb
mov
sub
fs
and
adc
or
sbb
jg
mov
mov
xchg
and
inc
sbb
pop
add
movl
push
out
lods
das
mov
add
push
sub
or
std
pusha
push
mov
push
push
jns
imul
mov
adc
and
or
inc
push
js
inc
sti
add
shll
fstpl
aas
pop
outsl
clc
pop
fwait
int3
push
cmp
cmp
adc
jnp
in
mov
std
icebp
andb
pop
sbb
lret
insl
ljmp
mov
sbb
test
aad
push
in
lcall
cwtl
cmp
jbe
xchg
int
inc
or
push
pop
add
clc
mov
cli
incl
cs
cmp
dec
shr
xlat
adc
ss
inc
mov
movb
out
push
in
cmpsb
jle
mov
data16
pop
inc
inc
js
mov
call
incl
or
sub
daa
cmp
inc
test
mov
inc
leave
fdivrp
call
or
sub
mov
cmp
sbb
pop
mov
in
imul
mov
jnp
jne
stc
cli
pop
inc
fldl
add
cmp
jmp
xor
cmp
and
mov
adc
mov
xchg
mov
fists
leave
int3
pushl
out
pop
or
sbb
xor
cmp
add
push
or
rcrb
push
call
push
movsl
cmp
int3
dec
insb
mov
daa
push
inc
pop
mov
movsb
mov
inc
fcos
lcall
jb
xor
push
inc
push
movsb
push
mov
jnp
sbb
mov
or
mov
incl
inc
xlat
mov
sub
mov
lcall
test
jb
cmp
cld
mov
lods
mov
cmp
cmp
jg
push
push
cs
sub
decl
je
cld
addb
sbb
in
in
test
push
push
fwait
pop
cs
dec
pop
icebp
imul
and
push
jno
inc
mov
xchg
xor
jecxz
adc
ficomps
inc
test
outsb
push
adc
cmp
adc
mov
jae
insl
inc
fisttpl
mov
ret
sbb
mov
pushl
xchg
ffreep
mov
sti
cmp
pop
ljmp
mov
repz
and
push
mov
or
repnz
jmp
jmp
lret
cmp
add
pop
adc
pcmpeqw
mov
push
rolb
or
jecxz
xor
decl
add
pop
sahf
lds
popa
dec
add
incl
mov
adc
lahf
roll
adc
ficomps
decb
jg
inc
mov
xchg
fmuls
inc
dec
sar
pop
jb
mov
aaa
fistps
scas
in
incl
jmp
inc
enter
sbb
cmc
aad
adc
fld1
mov
mov
jb
dec
lds
cmp
ret
out
jae
test
ror
adc
cmp
dec
shll
xchg
out
inc
jl
inc
test
mov
jnp
xchg
clc
jle
pushl
fcompl
imul
scas
jecxz
dec
mov
test
or
mov
mov
lea
mov
jnp
xor
in
fsubr
aas
xor
cs
shr
push
xchg
push
mov
mov
mov
sti
std
call
test
lea
dec
dec
iret
jle
xor
call
and
mov
dec
pop
adc
test
clc
icebp
or
cld
pop
into
movsb
add
call
in
insb
mov
out
xchg
lock
and
movsb
movsl
in
and
pushl
or
jmp
lret
out
nop
and
mov
call
sbb
test
jb
repnz
mov
add
daa
push
orl
lds
push
cmp
ljmp
xchg
adc
add
nop
cwtl
cmc
ss
addr16
jle
sub
loopne
lcall
sbb
jo
testl
repnz
sub
sub
push
js
or
mov
outsb
push
test
mov
jle
adc
adc
cmp
mov
scas
cmpsb
jle
pop
into
lods
and
pushf
and
or
push
pushf
scas
or
in
mov
cmp
scas
add
mov
xor
ljmp
in
out
inc
stc
mov
out
outsl
sbb
pop
lret
cmpsb
stos
cmp
mov
imul
jmp
mov
add
sahf
cltd
dec
cwtl
lea
mov
xchg
outsl
test
es
lcall
js
jne
lods
mov
push
pushf
iret
sub
mov
das
push
adc
jno
insl
shlb
decl
add
inc
jb
cmp
hlt
arpl
subb
mov
push
dec
lods
ret
jae
insb
pop
shl
pop
mov
xchg
jno
and
cmc
andb
mov
jg
incl
jle
xor
xor
jns
inc
cli
mov
pop
stos
inc
mov
aad
dec
mov
pusha
xchg
in
out
pushl
mov
add
mov
arpl
pop
ljmp
decl
dec
or
dec
xor
jecxz
leave
bound
gs
pop
test
cmp
cmpsb
jmp
sub
mov
or
cld
in
lahf
sahf
insl
stos
aaa
test
push
lds
xor
pop
dec
hlt
into
js
and
adcb
mov
pop
add
jmp
fldl
sbb
mov
pop
fldenv
fisttps
aas
fwait
jmp
adc
xorl
ror
push
mov
sahf
adc
sbb
icebp
push
andb
incl
sub
rclb
outsl
or
xor
xchg
push
fmuls
add
inc
test
sahf
das
ss
popf
push
push
test
fcmovnu
jo
and
fs
out
rcrb
outsb
pop
add
pop
loop
inc
incl
ljmp
rorb
movsl
inc
pop
out
add
adc
arpl
jge
loope
imul
call
in
das
jg
loope
push
fiaddl
scas
xchg
push
fs
mov
incl
imul
xlat
or
sbb
fs
cmp
or
inc
jb
stos
pop
in
sbb
push
sub
sbb
jg
ss
iret
popf
mov
les
xor
mov
cmc
or
xor
fildll
or
sub
xchg
jmp
pop
xchg
sub
inc
mov
aad
hlt
leave
mov
jle
jge
xor
incl
and
test
pcmpeqb
fsubl
push
cmp
es
out
inc
inc
decl
cmp
cltd
mov
sub
dec
loope
stos
sbbb
call
jnp
mov
push
lods
in
cmp
dec
xchg
mov
imul
mov
scas
incl
mov
hlt
std
lret
xchg
jbe,pt
mov
xchg
loop
call
or
pushf
xchg
ljmp
mov
or
push
scas
or
mov
adc
pcmpgtw
lcall
sbb
push
dec
lods
xchg
stos
orb
scas
adc
mov
fsubrl
jg
mov
add
dec
fisubrl
push
call
mov
es
int3
int3
mov
dec
out
cli
filds
jecxz
jle
mov
sub
outsb
es
sub
and
ljmp
dec
mov
push
ljmpw
fdivr
mov
mov
lcall
sbb
mov
cli
je
pop
das
insl
pop
cmpsl
dec
int
push
mov
and
incl
ret
pop
int
mov
es
fidivrs
lcall
and
or
cmc
and
push
cli
int
repnz
push
dec
es
repz
lret
mov
push
aaa
loope
mov
repz
fstpt
int3
repnz
les
loope
out
sti
mov
test
xchg
outsb
mov
aas
pop
dec
fmulp
and
and
mov
dec
arpl
pushf
lret
bnd
lea
std
and
dec
cmp
call
test
popf
loop
ljmp
stos
cltd
fwait
adc
pop
rorb
pushl
sbb
hlt
dec
inc
xchg
sbb
jge
enter
repz
data16
mov
dec
stos
dec
pushl
cmp
and
mov
loop
sub
dec
test
push
aad
lret
sbb
ljmp
test
dec
mov
pop
cld
xor
inc
out
ljmp
call
stos
mov
push
dec
outsl
xlat
mulb
xchg
movsb
ja
movsl
add
mov
push
sarb
decl
call
add
pop
cmc
out
aaa
push
adc
mov
pop
mov
xchg
jbe
sub
lcall
stos
sub
jno
xor
add
les
fldl
jg
xlat
xor
add
mov
mov
xor
or
lods
push
hlt
mov
loop
aas
repz
das
pop
pusha
in
aaa
cmpsl
flds
pushl
cmpsb
and
lcall
insl
adc
fnstcw
scas
aas
std
cmp
cmp
mov
xor
xor
sub
decl
outsb
or
xchg
pop
sbb
sbb
scas
xchg
push
mov
pop
sahf
movsb
xorl
xchg
in
fcmovnbe
or
cmp
pop
int
inc
dec
push
mov
jp
enter
sub
repz
xchg
ret
pop
mov
mov
ljmp
les
leave
sahf
ja
es
sub
in
rcrl
cmp
pushl
stos
sti
test
and
xorl
fsubrp
jne
fimull
adc
pushl
jmp
out
sub
fmull
dec
mov
in
dec
js
sti
filds
test
jns
lcall
jne
out
adc
out
out
sti
test
fstl
call
xor
incl
test
stos
not
cmpsl
mov
cmp
pop
mov
mov
jecxz
fildll
xchg
cmpsb
aam
xor
push
jo
and
sbb
loopne
arpl
mov
and
sub
sbb
push
fnstenv
stos
mov
in
dec
dec
cmp
cmp
jmp
mov
loope
pop
fbstp
sub
call
test
mov
dec
adc
stos
std
stc
icebp
lds
imull
hlt
push
mov
js
lahf
jae
sbb
fcomps
frstor
push
dec
sbb
dec
subl
call
adc
decl
in
and
inc
push
mov
mov
loopne
or
rcll
jp
mov
fwait
dec
addr16
push
dec
loop
sbbb
jb
or
sbb
xor
jno
loop
adc
adc
cltd
ret
mov
jb
and
mov
mov
or
jbe
aad
fdivr
nop
fisttps
shlb
enter
aam
pusha
xchg
insl
cmp
aaa
std
xchg
cmpsb
mov
sbb
loopne
std
pop
sub
cmpb
mov
call
or
cwtl
or
inc
outsl
lahf
push
mov
scas
add
frstor
mov
in
dec
add
ljmp
leave
and
rolb
decl
test
add
mov
push
xchg
xchg
movsb
and
or
shrl
mov
hlt
sbb
ret
repz
mov
xchg
addb
insl
push
fisttps
mov
mov
pop
int3
or
lcall
fisttps
fldt
cmc
test
sbb
mov
mov
cmpsb
mov
add
jp
aad
mov
sbb
ret
jmp
test
subb
pusha
jge
outsl
movsb
fwait
inc
inc
mov
das
mov
push
add
add
sub
mov
mov
or
pop
sbb
incl
cmp
pushf
mov
or
xchg
inc
jge
jge
popa
fucom
push
add
loope
mov
or
push
rcrb
xorl
sbb
xor
dec
cmp
mov
dec
lcall
les
sbb
mov
hlt
add
sarb
adc
lock
xchg
call
xchg
movsb
in
dec
icebp
cld
ja
mov
xchg
fstpl
add
roll
pop
call
sbb
mov
xor
in
ss
push
sbb
fstp
or
or
loopne
call
mov
scas
mov
and
fcoml
pop
cmp
sbb
sub
cmp
sbb
mov
jne
jnp
stc
xor
ret
mov
lock
push
ror
call
mov
scas
jae
ss
pop
push
push
sarb
xor
dec
subb
call
push
hlt
cltd
cmc
sti
lret
xchg
addr16
push
push
mov
pop
ret
mov
das
adc
out
cli
incl
cmp
pop
mov
sti
stc
das
xor
xchg
arpl
jne
bound
jbe
jmp
mov
fs
outsl
cmpsb
rclb
loopne
jnp
and
ljmp
out
sbb
sbb
push
cmp
cmpsb
ja,pt
and
or
lcall
mov
fwait
mov
pop
or
jle
xor
mov
enter
mov
jle
sub
cli
mov
insl
out
repz
add
mov
lret
mov
jmp
loopne
jbe
mov
das
or
aaa
pop
sbb
imulb
push
incb
in
ret
pop
fiaddl
imul
fcomip
lcall
popa
push
fprem1
and
push
mov
test
ffreep
add
cltd
mov
jmp
call
lods
push
mov
cmp
xlat
adcl
out
or
pop
call
add
jge
ljmp
bound
lcall
pop
mov
adc
int
jmp
insl
xchg
sbb
test
jns
fisubl
dec
dec
pop
sbb
dec
loopne
lock
push
daa
cmpsl
movsb
mov
cmpsb
mov
push
icebp
icebp
ljmp
sub
push
dec
cmp
and
jle
or
xor
xor
js
dec
add
xchg
icebp
popf
pop
jbe
in
lock
div
call
inc
sbb
mov
call
std
decl
xor
adcl
pop
add
xor
stc
fs
pop
mov
call
xor
ds
lret
dec
jp
mov
mov
data16
pop
jmp
repnz
sbb
jns
cli
dec
rcll
out
sbb
int
movsl
out
xchg
push
sub
or
inc
inc
hlt
mov
mov
sub
incl
cli
enter
data16
sbb
mov
inc
xchg
daa
je
or
enter
sub
push
adc
mov
shlb
mov
jns,pt
push
cmp
in
push
repz
mov
pop
mov
sub
filds
adc
popa
mov
sub
xchg
stos
push
dec
pop
lock
incl
push
xchg
mov
in
gs
pop
sqrtps
leave
jp
sbb
cld
jmp
lods
xlat
jp
stos
dec
pop
lret
dec
gs
and
dec
hlt
call
imul
call
adc
aad
xor
push
add
mov
test
shlb
fbstp
cmpsl
aaa
push
fldenv
dec
int
xchg
ja
mov
jmp
push
repnz
cmc
lcall
incl
in
adc
ret
dec
jle
inc
pop
mov
shrl
jecxz
mov
decl
xchg
lahf
and
xchg
data16
mov
jno
or
xor
lds
or
lds
sub
imul
call
xlat
pop
sets
cmp
or
inc
mov
jmp
fldt
cmp
lcall
adc
mov
mul
ret
xchg
mov
lds
xchg
ljmp
xchg
fwait
sub
add
repz
pop
loopne
cmc
lcall
outsl
sub
fidivs
or
xchg
inc
xchg
sbb
call
cld
jmp
jge
test
inc
es
in
sub
lock
cmp
jmp
fnstsw
pop
out
jns
aad
icebp
loopne
xor
or
icebp
add
shld
pushl
sub
mov
mov
cs
ss
xchg
lret
test
in
dec
push
cmp
call
mov
loopne
lock
aad
dec
inc
dec
jl
push
es
stos
sarl
sub
inc
xchg
sarb
test
aam
das
ffreep
std
fsubrs
inc
mov
test
xor
loopne
jg
int3
push
test
xor
cli
jae
fldl
or
out
or
mov
iret
aam
clc
stos
cmpsb
mov
addb
lret
mov
cmp
shr
in
cmpsb
mov
dec
incb
pop
hlt
sub
cmpl
cwtl
inc
jecxz
and
in
and
push
in
mov
push
ljmp
dec
shll
inc
adc
push
mov
mov
test
sub
inc
cli
xchg
pop
mov
mov
imulb
inc
push
dec
cltd
lock
cmp
mov
inc
adc
pusha
loope
push
inc
inc
pop
popf
sahf
pop
ds
dec
push
mov
lcall
lret
mul
and
dec
in
cs
ficoml
iret
pop
sbb
dec
inc
xchg
pop
hlt
sbb
cs
hlt
and
fisubrs
xchg
loopne
jbe
out
jbe
pop
mov
or
int3
loopne
lds
rcrl
and
test
pushf
add
pop
shrb
push
aam
cmp
imul
les
mov
ja
stos
xlat
jle
bound
clc
and
loope
decl
lret
pop
add
mov
dec
dec
cmp
or
inc
outsb
jge
push
out
decl
adc
test
mov
in
adc
lret
cmp
inc
jmp
fsub
sti
fildl
ficomps
pop
sahf
dec
fcompl
ljmp
jle
mov
jecxz
mov
ljmp
orb
pusha
and
push
cltd
and
jne
mov
stos
sti
and
push
push
jg
cmp
sbb
inc
sbb
sti
mov
lock
dec
add
dec
std
call
jmp
inc
jle
sbb
loope
je
inc
cmpsl
xchg
add
incl
sub
pop
lods
or
lea
push
mov
mov
stos
cld
ret
pop
push
and
mov
adc
sbb
ss
ljmp
mov
mov
push
cs
inc
push
inc
in
adc
adc
incl
inc
jne
mov
mov
movsb
mov
sub
xor
xchg
pushl
ret
jne
inc
push
mov
xchg
push
clc
jp
lock
aad
rcrb
jmp
repz
scas
push
and
mov
push
mov
inc
test
sub
fistl
jmp
sbb
fs
xor
lret
sub
adc
loopne
rcr
mov
jns
mov
inc
data16
fnstcw
mulb
lcall
outsl
push
sub
xchg
je
cmp
and
int
gs
neg
inc
or
mov
lret
in
inc
cmpsb
or
imul
mov
or
ss
in
incl
xor
pop
or
mov
aad
xchg
imul
sbb
mov
in
jne
shl
jmp
loopne
jg
mov
xchg
push
nop
or
fdivp
fists
push
loope
ficoml
in
adc
lcall
incb
adc
adc
std
or
pop
mov
in
call
pushl
xorb
loope
call
jbe
sbb
inc
movsl
add
scas
jmp
or
add
dec
push
dec
or
jp
mov
adc
shll
scas
adc
add
into
xchg
mov
out
push
sub
sub
and
fsubrp
out
ret
out
jnp
movsl
lods
into
inc
shlb
out
ja
call
ljmp
pop
mov
push
sub
cmp
arpl
shrl
decl
loopne
mov
xor
out
mov
jp
add
lods
xchg
push
pop
mov
leave
cmpsb
subb
and
cmp
sub
push
cmp
mov
subl
jle
scas
ljmp
rcll
sbb
dec
or
rcll
sub
bound
add
lahf
xor
lea
mov
fldt
sbb
xlat
test
pop
aas
xor
sbb
xchg
shlb
inc
and
rcrb
aaa
ds
decl
add
lods
push
inc
call
fistpl
push
or
add
pop
xchg
jnp
jno
mov
scas
test
cltd
lods
xor
das
push
call
and
and
fwait
ljmp
inc
and
adc
rorb
loopw
incl
into
mov
jno
fiaddl
or
imul
incl
cli
pop
xor
adc
aas
decb
xchg
mov
iret
sub
cld
sub
ds
fisttps
pop
push
add
mov
aad
pusha
test
hlt
cmp
push
insl
test
lret
arpl
cmc
xchg
sbb
xchg
mov
push
xor
insl
xchg
mov
fwait
into
incl
mov
xor
or
add
int
jb
jns
out
push
scas
movsb
fwait
call
cld
stos
filds
cmp
int3
outsb
int
and
mov
push
std
xor
fcos
clc
mov
mov
pop
mov
adc
fsubp
adc
popf
nop
mov
fidivs
xor
mov
cltd
mov
dec
out
negl
push
jge
jne
aas
in
loope
addl
push
pop
jae
cwtl
sbb
ret
add
sbb
sub
inc
and
fsubrs
mov
popf
pop
sar
incl
cmp
cld
rolb
adc
scas
sub
std
sar
call
hlt
leave
addr16
daa
test
stos
stos
add
mov
add
cmpsl
inc
lcall
in
mov
add
lcall
add
mov
add
or
pop
decl
mov
shl
not
jle
pop
pop
popa
movsl
hlt
and
cltd
nop
ja
sbb
sti
dec
decl
sbb
and
add
jecxz
cmp
push
dec
lcall
jg
xor
ret
cmp
das
inc
pop
rcll
fadds
or
sub
dec
lds
jmp
ret
push
sub
mov
repz
mov
mov
or
clc
fcoml
sub
or
out
inc
les
cs
incl
movsb
sub
test
sub
lahf
xor
mov
ljmp
mov
repnz
mov
adc
fwait
dec
push
add
push
jmp
xor
cmpsl
xchg
ret
daa
fstpl
ret
loope,pn
leave
call
lock
push
stos
inc
inc
mov
jge
pop
add
fadds
or
gs
push
and
fsub
push
test
fists
pop
ds
nop
pusha
pop
fdivs
cmpsl
repz
je
outsl
and
lods
sub
call
adc
inc
ds
mov
pop
sbb
push
aas
and
mov
daa
push
jno
sub
cmc
mov
pushl
mov
pop
mov
pop
out
sbb
fst
aaa
or
sbb
mov
pushl
or
xchg
add
ret
add
mov
and
dec
sub
push
enter
mov
mov
int
pop
mov
push
cltd
push
das
addr16
sarl
push
aam
hlt
dec
dec
clc
ljmp
pop
fsts
test
dec
mov
pushf
loop
push
jmp
scas
mov
std
incl
add
pop
imul
pop
aaa
popf
xchg
add
outsl
insl
dec
jne
rorb
test
les
pop
xchg
fstpl
inc
popa
xor
lret
aad
adc
xchg
loopne
iret
mov
xchg
call
xor
add
adc
outsb
and
jge
jb
or
mov
jne
sub
ljmp
aaa
sbb
ret
xchg
sub
sbb
sbbb
fnsave
cld
testb
xlat
incl
lods
movhlps
mov
xchg
fsubrl
jge
add
lcall
mov
xchg
pop
push
adc
dec
cltd
sub
add
sub
xlat
inc
das
ss
lcall
lock
testb
mov
add
jmp
xchg
les
sahf
inc
sahf
xchg
jp
adc
js
or
mov
scas
out
notl
les
and
xchg
leave
jns
mov
mov
sbb
scas
adc
loopne
push
int
out
out
mov
pushl
push
lret
add
xchg
lods
fs
jl
popf
div
ja
test
or
lock
out
enter
repnz
inc
jmp
xchg
mov
out
xlat
pop
fisubrl
shl
fcomip
ljmp
mov
inc
fwait
xor
out
push
or
pushf
std
fcomip
push
nop
out
pop
jecxz
aam
fdiv
aad
mov
mov
mov
popa
loope
mov
loope
adc
insb
shll
cmp
adc
in
cltd
inc
movsb
jmp
xchg
and
add
cld
in
das
xchg
outsl
push
outsl
lds
pushl
push
inc
or
inc
imul
cmp
stos
das
std
jne
fmull
jg
repz
mov
jns
inc
mov
pop
int3
jns
nop
sbbb
mov
pop
dec
or
add
and
andl
insb
pop
hlt
lea
mov
out
sub
repnz
or
in
xor
push
stos
in
jg
outsb
rorl
mov
mov
lcall
add
jae
inc
inc
mov
add
jno
je
push
sti
push
jl
lcall
dec
out
fs
mov
mov
js
jp
lea
test
ret
cld
ljmp
and
addr16
enter
mov
sbb
adcb
jle
xor
push
cld
incl
call
fldt
adcb
jbe
das
cli
pushl
inc
sahf
mov
jle
sahf
in
lcall
push
test
insl
aas
adc
xchg
push
out
repz
pop
inc
movsl
jb
ljmp
mov
xor
mov
jmp
sarl
popf
fisttps
cwtl
xor
pusha
cmpsb
mov
setno
es
popa
hlt
mov
sub
fwait
int
sub
push
leave
ss
imul
jge
push
inc
mov
ss
jg
mov
inc
je
test
mov
js
test
push
out
out
and
test
push
lret
mov
cmp
xor
adcb
xchg
xchg
add
out
stos
push
in
jne
adc
dec
mov
clc
aad
jl
push
test
in
imul
inc
insb
out
push
ljmp
dec
imul
pop
je
sbb
jle
test
fdivs
jmp
mov
hlt
decl
xor
add
sbb
iret
hlt
mov
bound
call
loopne
dec
daa
mov
subb
push
xorb
test
ljmp
cmp
dec
mov
mov
sub
inc
daa
pop
pop
popf
xchg
cmp
xchg
pop
enter
adc
mov
add
mulb
loope
stos
adc
push
fbld
lock
jge
scas
incl
sub
cmp
imul
in
enter
dec
lods
xor
jecxz
call
sub
into
add
adc
mov
xor
mov
inc
subl
lahf
repz
inc
xchg
pop
dec
sbb
lahf
popa
pop
xor
call
dec
je
fisttpl
push
stos
mov
cld
inc
xlat
icebp
jno
lock
pop
lret
ljmp
or
pop
sahf
fmuls
lahf
dec
push
les
push
stc
cmpsl
push
mov
inc
pop
pop
rcl
pop
jbe
ljmp
fldl
lahf
and
adc
sbb
and
mov
shll
adc
out
shlb
cmc
shrb
xchg
mov
jp
aam
adc
stos
test
out
movsb
inc
inc
sbb
decl
pop
stos
adc
xchg
stos
idivl
lea
sbb
lcall
std
lock
pushf
mov
pop
xor
push
cmp
mov
mov
cmp
lret
xor
js
cmp
ss
jns
mov
inc
cmc
int3
call
sbbb
cmpsb
mov
shrb
mov
dec
jae
adc
mov
ffreep
int
jl
pushl
scas
lahf
inc
popa
jge
cmpl
jo
push
cmp
inc
mov
pop
mov
mov
xchg
push
incl
fisubs
pop
jp
popa
cmp
cmp
lea
aam
mov
xlat
inc
imul
jmp
add
mov
inc
sub
scas
pop
add
cmc
cmc
out
js
iret
outsl
cld
mov
js
dec
or
lret
push
push
dec
stos
add
iret
xor
dec
add
sub
pushl
pop
push
loop
stc
or
fwait
aas
xor
mov
aam
mov
decl
je
xor
das
mov
adc
push
push
std
adc
call
mov
repz
push
aaa
xor
pop
pop
sbb
mov
sub
pop
push
or
xor
adcb
mov
xchg
subl
lret
or
cmpsb
loopne
jmp
cli
js
inc
repnz
pop
pop
sbb
out
int3
ret
xchg
jbe
jl
cmp
cmp
add
dec
cmp
lret
inc
fs
jo
mov
fstl
test
push
in
sub
mov
sbb
into
mov
add
fidivs
and
jae
out
xor
leave
xor
pop
push
pop
sbb
incl
xchg
xchg
test
inc
xchg
xor
shlb
arpl
add
cmp
add
stc
lcall
stos
push
sub
ss
stos
in
sbb
mov
inc
push
lret
xor
sbb
push
xchg
xor
hlt
jmp
inc
jae
jge,pt
push
mov
fimuls
shlb
ljmp
es
outsb
ja
sub
mov
cwtl
push
pop
inc
fwait
cmp
jge
int
add
movsb
decb
loope
mov
leave
xor
xchg
incl
aaa
xor
in
mov
iret
iret
mov
ficompl
mov
inc
mov
test
clc
dec
addr16
lods
aaa
xor
cmp
dec
mov
mov
fildll
mov
ljmp
cmp
ja
xchg
mov
fstpl
scas
call
jge
lret
push
sysexit
into
xor
lock
decl
cmp
jno
sub
rcr
cmp
dec
repz
sub
add
push
sbb
jp
icebp
ljmp
add
pop
pop
sub
stc
push
push
sbb
call
out
outsb
ss
jge
xchg
cmp
call
push
jae
push
subb
scas
inc
push
mov
xor
cmp
gs
and
pop
es
leave
lcall
pushl
xchg
xor
mov
mov
push
push
sbb
xor
adc
cmpsl
clc
inc
decl
xor
jge
xor
inc
cmpsb
imul
xor
mov
call
fcmovb
call
xchg
scas
or
jecxz
rclb
mov
sub
pop
in
fwait
inc
push
mov
inc
add
sti
pusha
inc
cmp
out
jmp
push
jnp
jns
jne
dec
jle
lcall
pop
adc
jns
lock
mov
loop
adc
sbb
or
fnstcw
dec
dec
lock
jg
andb
mov
dec
adc
jmp
cmp
jmp
repnz
dec
repz
insb
call
sub
jmp
cltd
mov
test
pop
or
xchg
cmp
lock
inc
rorb
cli
jmp
es
adc
mov
lahf
jecxz
cmp
fiaddl
pop
std
outsl
mov
pop
cmpsl
cmp
or
lcall
ljmp
push
outsl
dec
mov
enter
mov
shrb
adc
hlt
mov
cmpsl
mov
call
jns
mov
ror
push
mov
xchg
xorl
sbb
cs
inc
xchg
push
mov
mov
or
lea
dec
adc
jne
mov
xor
rcrb
fimuls
aas
jne
lods
inc
pop
and
test
in
pextrw
adc
cmp
adc
sub
sbb
xchg
js
xchg
es
jmp
loopne
insb
jle
mov
mov
cli
inc
dec
mov
pop
sbb
rol
icebp
xchg
sti
sar
mov
xchg
pop
xor
cmp
pop
mov
xlat
std
add
fildl
call
out
addr16
roll
jb
mov
cmpsl
fidivrs
inc
or
jge
add
rcrb
pop
pop
lcall
in
rcrl
pop
scas
int
lcall
fs
scas
pop
nop
in
fisttps
lods
in
mov
jmp
push
test
mov
push
std
jge
cmp
cli
push
popa
cmpsl
lcall
negb
data16
gs
dec
push
xor
loopne
scas
call
ss
lock
call
call
jp
add
cmp
adc
pop
repz
lds
movq
dec
jnp
cwtl
cmp
call
mov
push
pushf
mov
mov
dec
cs
mov
out
adc
add
fs
ss
xorb
pop
movsb
sub
sti
cs
call
sbb
jge
frstor
jg
pop
mov
dec
cli
add
xchg
mov
dec
dec
js
inc
into
cmp
lret
xor
or
inc
bnd
test
jb
loop
outsl
mov
mov
sbb
mov
pop
mov
or
push
mov
xchg
dec
scas
mov
sbb
addb
jmp
dec
xchg
and
shll
inc
adcb
sbb
mov
cmp
xchg
or
add
or
dec
cld
or
and
add
dec
in
pop
sbb
jmp
std
inc
push
ss
loope
aam
pop
int3
pop
mulb
mov
loop
xor
or
cmpsl
mov
sbb
mov
mov
push
mov
sbbb
mov
leave
cwtl
xor
rcrl
push
stc
jecxz
movsl
cltd
in
pop
sub
mov
daa
and
fiaddl
pushl
mov
in
lcall
push
mov
jno
cs
push
scas
pop
decb
pop
cld
xor
das
mov
je
push
or
shlb
sarb
xlat
jmp
cmp
movsl
dec
clc
jge
shrl
arpl
mov
inc
sub
and
stos
decl
jmp
add
les
inc
push
fadds
mov
add
xlat
aam
ljmp
aas
pop
or
push
insl
shlb
mov
jnp
fistpll
pop
inc
push
push
jne
inc
call
cltd
rcll
les
inc
add
daa
movsb
push
adc
sub
scas
in
aad
jmp
out
aad
out
ret
sbb
mov
rcr
push
add
jg
out
out
sbb
jbe
push
mov
push
dec
out
cltd
out
in
outsl
or
out
jb
or
inc
jge
ljmp
cwtl
es
cwtl
nop
cmpsl
sub
dec
dec
push
cmp
shrb
pop
cmpb
test
pushl
mov
add
adc
push
push
test
aam
aam
mov
push
rorl
mov
cmpsl
xor
dec
push
or
cmc
cmpsb
adc
xchg
mov
sarl
mov
mov
mov
jmp
adc
cmpb
insl
bound
loope
xor
lds
sub
jg
xlat
dec
inc
das
out
clc
pop
std
daa
gs
repnz
pushf
cmpsb
mov
pop
sahf
ficoms
sahf
enter
stos
int3
incl
mov
sti
lcall
ret
sub
sbb
gs
insl
mov
xor
xor
fs
jg
and
jo
inc
js
sbb
call
xchg
adc
sub
lods
insl
fcoms
xchg
xchg
sub
or
lret
or
and
pop
mov
cld
lcall
daa
pop
inc
or
pop
int3
mov
xchg
mov
lds
pop
ljmp
orl
mov
rcr
decl
fisttps
lret
sub
rorl
nop
std
dec
adc
mov
repnz
pushl
call
xchg
sbb
adc
xchg
mov
aam
mov
pop
sarl
xchg
mov
call
pop
ret
daa
push
iret
imul
out
cs
pop
or
dec
pusha
push
push
xor
lcall
lret
mov
sub
imul
out
clc
mov
roll
jmp
lods
loop
leave
daa
mov
test
and
xchg
push
cmp
xorb
sbb
decl
sub
push
scas
call
movsl
xlat
fnstcw
loop
out
mov
xchg
jne
add
add
push
add
pushl
bound
push
xor
pusha
out
push
and
mov
mov
fidivrs
xchg
sbb
fisttpl
xor
es
pop
and
xor
add
cmpsb
lcall
popa
icebp
lcall
enter
adc
and
aam
fistpl
or
jo
dec
lret
int3
ret
ljmp
adc
movsb
xor
movsb
mov
xchg
insl
push
fdivr
mov
cmp
pop
jns
jmp
hlt
mov
js
mov
lcall
push
frstor
dec
add
mov
addr16
into
jge
icebp
mov
lcall
pop
leave
cmp
mov
pop
xchg
jb
cmp
mov
lods
icebp
das
cmpsb
add
mov
inc
pop
je
cmc
test
sub
push
fyl2x
ljmp
mov
loope
and
fldenv
mov
cmpsb
out
scas
fadd
mov
push
call
add
cli
cmp
mov
in
outsb
fiadds
and
arpl
pop
sub
xchg
dec
std
ljmp
and
mov
iret
adc
cmp
jg
jnp
faddp
notl
inc
jg
jb
inc
xor
jle
push
ljmp
subl
or
int3
call
or
mov
mov
sub
mov
sub
jl
mov
dec
cmp
push
les
xchg
imul
pop
mov
ret
lods
mov
cmp
sub
gs
sbb
call
lock
push
outsl
inc
dec
adcl
jg
sbb
xchg
xchg
cltd
shlb
dec
test
jg
lcall
inc
cmp
mov
mov
xchg
jae
sarb
incl
loopne
aam
testl
les
mov
cmp
das
pop
rorb
clc
mov
jno
nop
int
out
shlb
cmp
stc
int3
stos
mov
jo
mov
cmpsl
inc
scas
inc
sarl
insb
mov
ljmp
dec
jo
ds
movsl
xchg
pop
call
loop
jp
mov
dec
dec
inc
addr16
scas
xchg
mov
pushl
dec
jno
mov
dec
lods
stos
movsl
aas
push
lret
sahf
mov
inc
adc
mul
lret
filds
outsl
decl
out
movsl
lods
fwait
aam
xor
or
aas
mov
inc
test
jno
sbb
jmp
sbb
negb
xor
aam
vcmpss
mov
or
cli
and
mov
dec
aad
jb
mov
cltd
dec
sbb
ficompl
cmp
incl
and
sub
fdivrp
push
cmpsl
insl
ret
or
pop
adc
dec
fs
clc
jmp
mov
or
popa
dec
sarb
xchg
or
loopne
idivb
jmp
dec
ss
ljmp
mov
les
loop
cmp
dec
addr16
les
xlat
mov
lcall
hlt
dec
fbld
test
jg
or
inc
int3
hlt
mov
push
out
js
cmpsl
dec
gs
or
out
mov
cmp
adc
insb
arpl
imulb
outsl
dec
push
lcall
cmc
mov
push
jb
sub
push
inc
sbb
ljmp
sbb
sti
mov
and
xchg
jo,pt
cmpsl
les
push
sub
test
jae
in
movsl
inc
xchg
jmp
inc
inc
mov
stos
sbb
add
cmp
lret
icebp
lcall
loop
push
sbb
jae
pop
push
or
jle
xor
stos
in
fldl
or
inc
ljmp
sbb
ss
out
jge
cld
mov
xchg
xchg
pop
cmp
mov
cmp
jno
jg
mov
lcall
xor
pushl
dec
cmp
jbe
sub
test
aad
jg
push
pop
adc
adc
sti
aas
test
fisttps
out
add
jno
xor
cmp
sbb
pop
adc
inc
add
sub
popf
jae
cmpsl
jnp
dec
das
jmp
lea
incl
stos
ljmp
mov
inc
das
adc
or
inc
lods
std
movsl
sbb
test
mov
call
cmp
adc
pop
fsubs
lcall
mov
notb
jl
ds
and
pop
inc
sub
loop
test
pusha
pop
icebp
cmp
iret
mov
rcr
aam
adc
sti
or
lods
roll
out
clc
and
and
mov
pusha
cli
adc
shr
testl
cmp
add
mov
push
in
cmp
subl
jmp
jg
scas
dec
out
cmp
test
arpl
and
mov
filds
cmpsb
sub
fcmovu
repnz
repnz
call
movsb
ds
push
or
icebp
outsl
xor
pop
aaa
inc
push
add
cmp
lcall
mov
cmpsl
stos
jae
or
pushf
push
xor
cmp
out
cli
jne
repz
std
push
cwtl
std
xor
mov
xor
aam
xor
rcrl
incl
xor
push
mov
in
cmpsl
jle
sbb
out
or
test
dec
es
incl
pop
stos
stos
fsubrs
xchg
out
fs
in
inc
and
movzbl
lods
xchg
cli
cmp
ljmp
pop
shr
xor
inc
cmpsl
fldcw
mov
inc
into
ljmp
sub
cmp
push
dec
lds
in
xor
std
loop
jne
sbb
cmp
push
in
mov
stos
or
popa
gs
fdivrs
roll
lcall
ljmp
push
sbb
cmpsl
enter
mov
outsb
push
mov
scas
jbe
sub
adc
icebp
jg
dec
aas
xchg
test
mov
addl
mov
jl
add
testl
dec
cwtl
icebp
xchg
outsb
mov
xchg
xor
cmpb
aas
lret
add
sar
pushl
sub
add
popa
mov
insl
rcl
stos
es
xor
mov
incl
mov
jo
repnz
int3
jno
xchg
xor
jmp
sbb
inc
pop
daa
imul
mov
xchg
bound
arpl
stos
fs
sub
push
mov
push
les
xor
dec
rcl
jmp
sbb
pop
add
int3
cli
mov
jg
jbe
mov
xchg
dec
outsl
push
pop
out
inc
jb
dec
bound
rcll
xor
push
test
ds
adc
outsl
jbe
out
incl
mov
sub
add
call
jmp
incl
mov
cmc
adc
xchg
scas
adc
pop
in
aaa
mov
jl
scas
lea
mov
decl
mov
dec
cmp
mov
insb
test
outsl
push
loope
push
cmpb
dec
cmc
jo
les
pop
cld
out
gs
shlb
sbb
nop
iret
aas
lods
incl
jmp
pop
in
aad
sbb
push
lret
stos
insb
das
mov
dec
lret
shll
incl
or
rolb
fs
cmp
int
cs
ret
mov
mov
call
pop
mov
pushl
xor
mov
jno
aam
bound
xchg
jmp
mov
xchg
or
push
mov
dec
es
dec
std
jg
mov
dec
add
inc
adc
loope
mov
xchg
cmpsb
incl
jbe
add
jecxz
inc
ja
sbb
out
cli
and
call
enter
call
jno
cmp
sbb
lods
mov
mov
or
and
frstor
int
imul
push
inc
bound
pop
mov
out
lcall
lock
dec
movsl
mov
mov
inc
push
les
push
push
xor
jnp
xchg
iret
sub
lock
repnz
inc
test
mov
cmp
test
xchg
cmc
inc
addr16
jmp
sub
std
aas
xor
outsl
lret
insb
cwtl
pusha
incb
subb
into
popa
loopne
out
mov
and
add
outsb
pusha
pop
into
int
lds
jl
xchg
ljmp
push
int3
dec
jae
lret
out
int
movsb
out
xor
rclb
bound
jmp
das
xor
push
xchg
shll
xor
mov
xchg
je
cmp
into
imul
into
loop
aam
cmc
repnz
mov
pushl
lcall
aaa
icebp
es
mov
pop
lds
inc
jl
push
test
incl
dec
cmp
call
sub
jp
and
scas
pop
xchg
int
repz
ret
lea
pop
jmp
repz
pop
in
jne
cmc
aad
mov
push
es
dec
aaa
jae
mov
mov
cli
dec
and
push
and
sarl
mov
test
or
lds
imul
mov
adc
push
push
std
incl
movl
ja
test
ret
mov
pushl
inc
push
fcompl
mov
pop
sbb
dec
dec
mov
int
mov
dec
mov
dec
jnp
dec
mov
pop
pop
sub
outsl
outsl
aad
clc
xchg
xchg
pop
daa
andl
push
sarb
fs
decl
stos
cmp
add
cmp
dec
jb
mov
imul
flds
cmc
pushl
loop
lret
in
insl
mov
push
lods
add
sbb
ss
in
xchg
jg
jmp
cmp
push
rcll
in
or
aaa
hlt
push
in
mov
adc
inc
mull
pop
call
push
inc
cmc
fidivl
lahf
mov
sub
sub
call
add
dec
sbb
repnz
adc
stos
jmp
inc
sbb
aaa
das
pop
add
or
cmp
sub
iret
mov
out
scas
inc
xor
test
push
les
sbb
xor
xor
lcall
mov
pusha
lcall
iret
cltd
and
mul
stc
pushf
fnstsw
mov
dec
sar
lcall
cmp
imul
inc
adc
aas
aas
add
adc
into
push
fcomps
or
fbstp
xchg
mov
sub
xchg
ds
lcall
lret
decl
movsb
push
mov
neg
adc
lock
ret
sub
sub
clc
lods
pop
in
mov
incl
pop
xchg
push
xchg
pop
out
stc
or
push
push
xorl
mov
pop
mov
lcall
rol
int
push
inc
sarl
jecxz
aam
mov
fistl
cwtl
ret
jg
mov
jl
push
std
pushf
lods
xor
rclb
frstor
int
xchg
pop
enter
and
decl
lods
stc
sub
dec
ds
jl
jle
jge
mov
mov
fidivrs
xchg
gs
ljmp
sub
cld
mov
mov
push
adc
rcl
lcall
aaa
and
call
sarl
sub
add
dec
test
in
mov
out
lret
clts
pusha
shrb
andb
incl
xor
mov
test
lds
dec
add
sahf
les
push
adc
cmpsl
push
fcos
inc
ret
or
pop
xchg
inc
out
jmp
pop
inc
insl
imul
into
sub
add
jg
jg
stos
mov
cmp
dec
push
movsb
jmp
and
pushl
jp
movsb
sbb
imul
or
mov
aad
es
in
push
inc
sahf
pop
xlat
ljmp
scas
jl
in
hlt
cmpsl
pushf
push
pop
andl
mov
out
dec
adc
hlt
jg
jbe
js
xor
mov
faddl
mov
sarl
sbb
fmull
xchg
inc
cmp
jb
call
fidivl
rcll
iret
outsl
std
dec
jg
add
sub
or
ljmp
jp
lcall
xor
xor
jle
push
inc
dec
iret
pusha
and
dec
loopne
mov
call
push
pop
mov
xchg
in
xchg
inc
inc
movsb
lahf
jge
out
mov
fs
in
sbb
ja
cli
ljmp
cld
sbb
hlt
enter
lock
jmp
adc
xchg
pop
pusha
into
dec
int3
fiadds
lock
lret
loop
movsl
fidivs
out
lcall
push
jo
cmp
jge
inc
jo
orl
jg
push
jnp
int
sbb
mov
out
jns
and
and
outsb
scas
push
fidivs
mov
call
fcmovb
and
xlat
in
lahf
mov
call
sub
jg
fsub
adc
scas
data16
mov
xor
lods
mov
ret
mov
in
mov
inc
pusha
jns
loop
push
jl
mov
int
call
push
mov
sbb
inc
sub
pop
or
cmp
call
adc
int
ds
sub
orl
adc
lret
jns
lods
push
xor
jo
sub
add
jp
dec
scas
and
dec
test
mov
or
call
mov
jg
shlb
fstps
sub
xor
iret
jbe
xchg
jbe
and
add
push
js
sbb
in
pop
xchg
lcall
insb
gs
fcomps
rcrl
mov
sub
add
xchg
dec
cmc
adc
inc
adc
decl
push
pusha
testl
sub
push
fcmovbe
dec
lahf
xchg
xchg
push
jp
sub
aas
push
pushl
cs
jbe
add
dec
in
dec
std
popa
dec
sbb
aas
inc
cmp
sub
cmp
fucomi
cmp
jge
nop
dec
push
push
daa
adc
test
jb
xchg
in
cmpsb
loop
lds
aaa
cld
incl
in
jmp
mov
jne
test
stos
jp
in
dec
and
into
cli
jmp
arpl
fnstsw
les
test
aam
gs
test
and
in
outsl
mov
push
nop
adc
std
pusha
mov
mov
cmpsl
cmp
xor
push
push
mov
shrb
icebp
popa
adc
cmp
stc
add
pop
mov
push
cs
incl
cmpb
das
ret
jmp
xchg
add
sbbb
push
xchg
jmp
pop
test
or
xor
icebp
icebp
popl
or
rcll
sar
inc
mov
nop
jecxz
or
sbb
xchg
addr16
pushl
rorb
adc
mov
es
pop
adc
sub
cli
incl
pop
out
mov
rcr
xor
push
sbb
and
lcall
inc
shl
or
cmp
sub
lret
neg
inc
ds
lcall
cmpsl
lock
jmp
jno
and
in
data16
cld
fidivs
jnp
xchg
int3
push
sub
cmc
or
xchg
int
or
int3
int
sbb
mov
sbb
decl
xchg
adc
add
stos
push
test
pop
push
in
sbb
pop
or
dec
fldl2e
lahf
pop
push
in
out
cli
imul
out
pop
fcmovnbe
mov
xor
es
incl
lea
pop
adc
mov
mov
aam
sub
jecxz
idiv
incl
dec
pop
fldcw
pop
test
daa
xchg
xchg
and
xor
out
scas
ret
jae
lcall
cwtl
cli
je
loopne
sub
xor
inc
or
pop
pop
dec
cmp
fistpl
pop
add
fwait
arpl
mov
in
lret
arpl
in
js
loope
mov
je
mov
ja
int3
popa
mov
and
mov
lcall
lret
pushl
ret
mov
test
shrb
inc
out
push
sub
popa
sbb
inc
xrelease
sub
jg
cli
pushl
push
inc
pop
sub
push
pop
rorl
sbb
and
xchg
test
pushl
fsubrl
daa
jnp
sbb
jl
unpcklps
shr
test
loop
push
fld1
push
push
add
mov
imul
sbb
xchg
mov
sti
insl
mov
and
xlat
out
clc
pushl
mov
or
pop
fsubrp
pop
cs
lods
es
decl
int
mov
cmp
inc
or
mov
mov
lret
std
or
addr16
stc
adc
lcall
sbb
pop
hlt
xor
repz
into
fldenv
fwait
pop
xchg
mov
mov
js
jmp
dec
outsb
lods
int3
scas
out
cmpb
mov
and
les
hlt
mov
outsl
xor
mov
incl
mov
stos
push
or
push
out
int3
inc
fldl
shrl
jnp
pop
sub
dec
adc
into
xchg
movsl
out
mov
pushl
adc
std
jno
int3
cli
dec
cs
jnp
movsb
jnp
test
mov
incl
adc
sbb
sub
push
push
cmpl
xor
bound
incl
xor
adc
pusha
aas
out
inc
sbb
inc
movsb
aad
jns
mov
push
mov
xchg
mov
js
xchg
pushl
fildll
mov
push
popa
dec
xchg
ss
sub
or
mov
movsb
cmc
lcall
xor
or
push
movsl
adc
pushf
sarb
imul
lods
stc
sahf
inc
xor
ds
fdivr
lret
test
gs
dec
lcall
mov
cmc
mov
jle
xor
std
inc
repz
xor
pushl
ret
ret
mov
and
inc
xchg
pop
and
mov
mov
pushf
or
pop
push
fnstcw
mov
pop
dec
cs
push
jp
pushl
jbe
ljmp
push
js
dec
add
mov
fs
or
sub
filds
sar
sub
sub
repz
js
inc
je
sbb
testl
push
nop
mov
xlat
arpl
lcall
cld
jg
in
pusha
rol
loop
loop
insl
sbb
hlt
jns
aam
into
call
cmpsl
test
and
insb
push
ss
jge
cltd
repz
push
jmp
lods
ljmp
and
cs
sbb
sub
jmp
fistpll
sahf
mov
xor
add
incl
mov
enter
insl
sub
ds
nop
xchg
cmp
jmp
push
fidivrl
sbb
cwtl
jae
push
lret
sub
jg
push
mov
jnp
ljmp
fildll
or
insb
pop
and
sahf
ret
pop
out
adc
cmp
jg
add
je
pushf
jge
or
insb
or
or
aad
icebp
or
and
lods
in
fbld
cmpsb
scas
jmp
adc
stos
mov
sahf
dec
jae
js
push
and
or
ljmp
lods
punpckhwd
mov
mov
pop
mov
ljmp
xchg
mov
adc
sub
dec
lcall
lcall
imul
scas
inc
jnp
leave
xor
pop
roll
dec
and
mov
sub
pop
fldln2
stc
jbe
mov
lock
dec
jb
fnsave
push
cmp
in
jno
test
xchg
mov
cwtl
mov
es
xor
loopne
cmp
jmp
lock
ljmp
sti
cmp
pop
int
outsl
dec
cmp
or
jns
add
sbb
int
push
and
jb
data16
dec
push
test
bound
icebp
jmp
out
mov
sti
push
test
adc
xchg
test
xchg
shrl
push
int
and
jp
mov
gs
shl
repnz
adc
les
notb
rclb
adc
incl
jne
cmp
add
cmp
xor
cli
xor
cmp
inc
xlat
cmp
add
sbb
cwtl
cmpl
xchg
xchg
das
shl
into
repz
popa
js
xor
imull
lcall
into
in
push
inc
or
push
fsubr
sbb
js
stos
pushf
cmpsb
int3
push
add
xchg
sbb
cwtl
lds
jecxz
mov
cmc
enter
lock
data16
mov
inc
shl
and
ljmp
cmpsl
pusha
pop
push
mov
mov
dec
scas
jne
test
andb
fdivl
jp
in
mov
add
clc
sub
mov
dec
bound
mov
xchg
out
jg
call
xchg
xor
aam
pop
fdivs
pop
stc
call
xchg
mov
push
inc
test
inc
pop
cli
insl
lea
jl
add
lcall
pop
sbb
jo
js
movsl
mov
xor
ror
stc
aam
fistpll
jp
out
jmp
ret
jo
dec
cmp
inc
lret
jg
push
mov
outsl
mov
fs
out
clc
jp
xor
jo
xchg
pop
outsb
orl
aas
test
sar
in
jle
cmp
jle
sub
movl
scas
clc
ljmp
loop
lret
nop
and
icebp
loope
add
jo
mov
pushl
mov
push
lret
sub
mulb
iret
jge
push
cltd
jp
mov
cmp
std
mov
xor
inc
test
add
push
pop
xor
pop
add
pusha
mov
push
sbb
fdivl
fs
xor
decl
jb
sbb
cmpb
ret
push
test
call
push
push
jp
or
rcrl
xchg
mov
in
shl
dec
test
jg
pushl
jo
mov
out
push
fwait
sub
cmp
jg
push
cwtl
pop
dec
sub
mov
hlt
aam
in
roll
testl
notb
lret
pop
adc
pop
adc
aam
mov
rcrl
in
test
push
add
xor
dec
inc
adc
cwtl
insl
lods
adc
xchg
sub
pminub
jg
scas
syscall
inc
xchg
jb
mov
outsb
lcall
jg
or
stos
pop
das
arpl
mov
test
in
addr16
pop
in
jg
mov
or
inc
pop
sbb
ljmp
mov
repnz
mov
scas
lcall
push
imul
sub
mov
ds
mov
or
pop
xchg
cmp
pushl
cld
incl
jbe
pop
pop
pusha
lods
lahf
outsb
and
cltd
es
inc
sub
adc
repnz
popa
cmp
js
or
sub
ror
sub
mov
pop
loope
dec
xchg
std
xchg
push
cli
incl
push
fdivrp
mov
jae
push
fildll
out
cmp
div
sahf
cli
scas
pop
adc
mov
cmp
inc
js
ror
cwtl
inc
sbb
fsubr
in
push
dec
std
mov
xor
adc
mov
sbb
jo
sub
mov
sbb
lock
test
orb
push
cmp
push
ret
or
cld
and
loopne
cmp
out
data16
jp
fbld
mov
jmp
ret
pop
mov
aam
cmpsl
and
push
loope
dec
dec
sub
fscale
aad
push
aad
mov
inc
jg
das
dec
sub
nop
arpl
push
dec
repz
test
mov
fidivs
and
ljmp
or
add
lock
push
sub
or
dec
or
and
mov
and
cmp
pop
mov
stos
cmp
sub
jbe
jne
xor
mov
cli
decl
mov
xlat
sbb
or
int3
xchg
add
jg
xor
mov
cmp
inc
xchg
mov
into
jg
xchg
sbb
and
dec
and
sbb
mov
lahf
jmp
xchg
xchg
std
xor
sub
hlt
jmp
inc
enter
cmpsb
adc
ret
cmp
jmp
xchg
adc
dec
lret
mov
test
or
pop
add
and
mov
pushl
popf
dec
das
mov
repnz
scas
pusha
inc
shr
scas
sbb
mov
inc
push
sti
test
out
fcos
adc
cmp
fsub
insb
sub
mov
mov
adc
mov
stc
dec
push
push
xchg
dec
sbb
jne
xchg
push
ljmp
jns
out
mov
sbb
or
loope
mov
adc
lcall
mov
push
push
or
sahf
mov
scas
and
cld
nop
pusha
call
lcall
mov
je
xchg
fsubl
and
cld
sub
int3
test
push
cmp
cltd
jl
pop
mov
subb
pop
movsb
mov
sub
push
js
rorl
pop
loop
xor
jmp
jmp
xchg
imul
pop
xorb
pop
icebp
decl
daa
loopne
dec
mov
adc
sbb
xor
les
outsl
or
pushl
xor
xor
or
fldcw
in
push
insl
push
push
es
outsb
inc
mov
test
loope
in
ret
inc
orl
dec
cmp
iret
lcall
loop
fists
insb
fwait
pushw
movsl
mov
test
jno
addl
aad
add
jmp
fwait
es
and
pop
mov
xor
adc
jle
imul
mov
dec
aaa
nop
rcrl
xchg
lcall
cmp
in
inc
push
mov
mov
shrb
add
mov
imul
sub
mov
adc
adc
fildll
orb
std
inc
push
pop
add
fcomps
push
movsb
je
aad
pushl
cld
cli
sbb
ds
jbe
dec
or
dec
dec
sbb
repnz
call
fcoml
jns
push
cmpsb
sbb
cmp
inc
push
data16
bound
movsl
std
push
cld
cmp
and
ljmp
in
call
cmp
xor
mov
stos
mov
xchg
push
popf
and
mov
and
fwait
dec
std
dec
orl
mov
push
incl
jae
je
gs
fstpl
jge
or
lcall
pop
repnz
mov
icebp
lret
lds
shlb
pop
clc
hlt
jg
sbb
mov
sbb
jb
inc
pop
scas
aam
pop
pop
jns
mov
in
icebp
insb
lret
movl
add
cmp
icebp
test
adc
inc
shll
nop
dec
mov
pop
mov
mov
std
jmp
inc
mov
aaa
test
int3
add
xor
movsb
mov
pusha
call
std
testl
lods
mov
xlat
popa
cmp
roll
in
mov
insb
lret
out
or
lea
pcmpgtb
add
test
loopne
pop
dec
outsl
add
decl
sub
push
cli
pop
cltd
sub
loope
les
dec
in
sahf
gs
mov
decl
mov
pop
cltd
das
aad
nop
stc
sahf
mov
dec
lea
int3
out
cli
incl
pop
add
out
push
cmp
lcall
adc
cld
cld
pop
mov
or
fbstp
xchg
jno
jae
lds
cmp
xchg
test
cmp
call
xor
or
sbb
push
movsb
cmpsb
cmp
cli
int
daa
sub
call
mov
cmp
mov
out
test
pushf
cmc
pop
fidivs
je
or
sub
mov
js
ret
orl
dec
or
jno
fbstp
repnz
aam
mov
inc
adc
aam
mov
jmp
and
scas
not
loope
clc
shll
mov
mov
inc
sub
pushl
xor
test
mov
sarb
dec
pop
add
daa
out
decl
push
mov
jnp
sahf
fisubrl
adc
or
mov
push
inc
sub
pop
mov
call
mov
inc
xor
and
pop
push
adc
sbb
decl
ret
andb
in
adc
popa
xor
inc
mov
pusha
pop
push
out
in
je
inc
leave
out
xchg
xchg
mov
dec
cmpl
dec
dec
imul
mulb
rclb
sub
jle
dec
pop
lea
jg
call
dec
test
loop
inc
jmp
mov
cmpsl
adc
rorl
cmpsl
push
int
sbb
sti
mov
aaa
lcall
icebp
pop
sub
mov
mov
call
pop
icebp
out
addr16
outsb
push
in
sbb
icebp
push
mov
ljmp
aas
out
xchg
js
fcmovbe
testl
int3
cmp
mov
inc
fidivl
jmp
popf
movsl
imul
xor
ret
xorb
xor
fmuls
gs
call
ss
lcall
sti
in
js
adc
mov
dec
mov
adc
jo
cmc
pushl
fbstp
fnstsw
sub
cmp
inc
rcrl
jecxz
lahf
popa
or
mov
sub
lcall
or
stos
fadds
test
scas
out
mov
inc
adc
cltd
iret
scas
cmpsb
or
hlt
sub
xor
mov
and
ret
cmp
mov
lea
mov
aam
mov
aas
push
imul
push
or
shrl
sub
inc
cld
ret
jne
repnz
pushf
aaa
dec
lcall
add
rcrb
daa
rorl
adc
addr16
cmp
mov
jmp
jle
sbb
std
in
jb
pop
sti
loop
ficomps
add
xor
push
cld
fisubrl
test
das
mov
xor
add
inc
stc
aaa
cmp
jne
and
cltd
push
inc
jns
adc
and
mov
fwait
roll
repnz
fwait
xchg
insl
xchg
add
call
aam
lea
mov
arpl
inc
aas
sub
ds
jmp
stc
lret
sbb
cmp
xchg
push
add
jl
inc
jb
pop
in
adc
fstpt
pushf
stos
loop
into
pusha
daa
imul
cld
inc
shlb
mov
ljmp
inc
out
lea
popa
lods
stos
push
out
daa
lods
and
iret
mov
bound
cmc
or
pop
lock
jl
fiadds
mov
jmp
insl
xor
jnp
sbb
sbb
or
ja
push
adc
cmpsb
xchg
sub
icebp
pushl
clc
decb
pop
and
xchg
and
push
add
mov
sbb
ljmp
adc
out
pop
inc
ret
dec
xchg
jle
movsl
test
pushl
mov
scas
imul
push
imul
and
xchg
sbb
out
add
dec
push
sbb
lcall
in
push
mov
cwtl
shll
pcmpeqd
mov
jbe
sub
inc
add
pushl
cld
or
out
pop
lcall
scas
jmp
call
arpl
pop
cmp
and
lcall
test
inc
or
gs
lret
mov
lods
mov
mov
enter
out
or
add
sti
push
pop
leave
jns
mov
js
sti
jge
outsl
andb
add
in
loopne
ljmp
enter
aaa
in
lahf
addr16
push
mov
xchg
cmp
ja
ljmp
call
mov
pop
or
subb
xorb
ss
lcall
ljmp
cld
fimuls
inc
cmpb
push
add
jb
jecxz
notl
push
imul
cmp
call
jl
lret
lock
mov
push
pop
jecxz
and
std
ret
and
ljmp
inc
mov
sbb
rorb
and
mov
movsl
ret
hlt
mov
repnz
mov
or
test
stos
outsl
sub
dec
lock
in
int3
into
popf
stos
adc
ja
js
pop
sbb
fs
jmp
jne
add
jg
sub
ja
popf
pop
inc
pop
jp
rcrb
cmp
in
cmp
pop
inc
stos
idivl
mov
stos
into
int
lea
mov
ret
mov
adc
outsb
clc
mov
aam
or
gs
pop
mov
sbb
cld
jl
imul
push
repz
sub
call
or
and
sbb
in
adc
cmp
fs
cmp
std
daa
sub
shlb
cmp
mov
fldcw
shrb
fsubr
shr
dec
pop
test
in
ja
jg
aaa
mov
jb
mov
mov
xchg
mov
sbb
loopne,pn
jmp
imul
int3
out
scas
dec
or
imul
xorb
pop
sbb
push
jmp
ja
pop
imul
or
mov
es
dec
dec
jmp
push
in
push
stc
into
push
repnz
out
xlat
inc
xchg
leave
fwait
mov
mov
gs
lea
xchg
pusha
in
cmp
jg
cmc
out
in
clc
jns
sub
int
shrl
mov
leave
clc
mov
pop
xchg
cmp
adc
cmp
sbb
sbb
xchg
pop
cltd
dec
cltd
push
nop
pushl
push
pop
xchg
jmp
daa
scas
clc
cmpb
incl
mov
add
add
in
fsubrs
pop
xor
mov
movsb
push
push
mov
jl
cmp
push
xchg
xorl
add
lock
movsb
pusha
rclb
decl
mov
ror
ljmp
or
mov
push
in
ljmp
dec
ret
lds
int
pop
xor
rorb
or
xchg
fwait
mov
inc
inc
xchg
sbb
xchg
dec
xchg
incl
push
cmpsb
mov
add
mov
inc
sbb
cmc
lret
scas
sub
std
mov
mov
pop
mov
cmp
mov
mov
xchg
add
mov
and
aam
shr
popa
add
ret
mov
and
std
mov
mov
or
pop
pusha
pop
xchg
cs
insb
pop
aam
cmpsl
mov
sbb
add
out
pop
xor
xor
xor
inc
adc
inc
adc
jne
rolb
and
xchg
repnz
int
push
sub
xchg
jbe
xor
add
jb
jbe
js,pn
or
les
add
gs
fwait
nop
add
in
outsb
or
lcall
add
sub
pop
push
int
lcall
add
dec
add
xor
insl
adc
sbb
push
icebp
lds
cmp
inc
xor
inc
cld
int
pop
xor
push
jb
adc
inc
and
xor
hlt
into
xor
in
rorl
jg
xor
xor
xor
add
inc
adc
rorl
rcrb
mov
int3
xor
xor
mov
ss
test
pop
adc
outsb
mov
xor
inc
cmp
add
cmp
inc
sti
mov
push
and
sub
sbb
fldenv
enter
cmp
enter
dec
xor
into
nop
cmc
inc
addb
jle
xor
test
adc
adc
pushf
inc
adc
inc
jmp
imul
mov
mov
inc
xor
or
ds
adc
cs
mov
dec
jl
or
je
outsb
push
lock
jo
inc
or
adc
insl
or
mov
addb
movsl
mov
add
xor
and
inc
mov
dec
cmpl
add
les
inc
mov
and
pop
xor
jo
xor
xor
and
add
arpl
pop
cwtl
xchg
clc
xchg
call
cld
scas
add
ss
fcompl
xchg
adc
inc
mov
and
sub
push
and
sbb
inc
adc
test
ror
mov
cmp
scas
inc
outsl
xchg
js
and
pop
dec
xor
hlt
xchg
addb
inc
loop
add
and
jl
jno
and
ror
inc
adc
mov
sub
mov
add
or
addb
xor
les
xor
stos
dec
mov
mov
sbb
shll
xor
sbb
add
shll
mov
inc
ret
or
loop
pop
inc
mov
mov
lock
cmpsl
inc
je
adc
faddl
inc
pop
mov
fadds
movsb
push
push
jnp
popf
mov
dec
adc
roll
or
cld
cs
or
insl
ss
mov
pop
inc
mov
adc
das
push
or
aad
inc
dec
cwtl
pop
aad
xor
cmp
inc
addl
fadds
dec
adc
mov
add
cmp
xor
insl
mov
adc
xor
cmp
pusha
push
sbb
sub
ds
push
imul
mov
adc
add
call
ds
dec
adc
xchg
enter
cmp
dec
mov
mov
lock
adc
sub
sub
dec
fdivrl
bound
adc
jp
xor
shlb
outsb
lcall
jo
cmp
mov
sbb
mov
push
daa
aam
fwait
inc
loop
cmpsl
sub
xor
xor
mov
in
adc
sub
dec
xor
inc
adc
adc
mov
stos
cmp
dec
arpl
jne
cmpsl
popa
inc
push
mov
decl
inc
cld
mov
xor
movsb
mov
call
jae
xor
call
shr
and
mov
jg
pop
ja
shlb
aas
stos
jmp
call
std
sbb
lret
jne
inc
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
mov
inc
add
sub
jge
jg
jp
cmp
jae
cmp
ja
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
mov
shlb
mov
inc
adc
ret
call
fbstp
test
out
jb
ret
sub
xor
popa
ret
popf
cld
push
add
movsb
dec
push
cmp
add
pop
sysret
sbb
mov
loopne
loope
cmpsb
sbb
mov
fmull
pop
out
jge
addr16
adc
pop
mov
insl
pop
jmp
inc
lock
pop
fs
loope
push
cli
jl
jb
orb
mov
scas
aam
popa
or
rcrb
sub
adc
loopne
mov
loopne
lret
mov
sbb
inc
xchg
adc
push
dec
push
rcrb
adc
ljmp
into
or
loopne
loope
sub
sbb
jp
pop
jo
mov
push
push
lcall
push
insb
push
add
scas
add
sbb
decl
mov
xchg
push
pusha
pop
or
incl
call
jb
push
rolb
movsl
or
and
pusha
xchg
or
add
sub
hlt
xchg
lcall
dec
inc
jle
jb
cmpb
outsl
clc
fldt
mov
mov
out
adc
inc
outsb
inc
add
jb
mov
fcomip
mov
push
mov
std
pusha
jmp
xor
cmp
clc
enter
negl
xchg
mov
jb
jg
scas
sbb
and
and
xchg
call
jb
sbb
or
mov
push
call
mov
idiv
jmp
je
push
movzwl
mov
cmp
pop
jmp
sub
cltd
xor
dec
fisttpl
mov
and
js
fs
mov
push
cmp
jne
push
xchg
lcall
push
call
or
cmpl
lcall
add
jmp
mov
pop
ljmp
cmp
add
sti
dec
add
inc
loop
decl
cmpsl
mov
push
or
fcoms
inc
pop
incl
lahf
shrb
outsl
jp
jl
movsl
testb
push
or
out
aas
es
xchg
push
addr16
push
clc
ja
xchg
fsubr
pop
addb
jg
jg
jmp
mov
push
xchg
inc
subb
or
or
mov
xchg
sub
ljmp
pop
xchg
push
outsb
pusha
fdivs
pop
enter
std
push
fsts
dec
movsb
mov
movsl
cmc
or
jmp
call
ficoml
pop
mov
push
cmp
lock
cld
sbbb
pop
xchg
add
pop
sbb
iret
pop
dec
push
xchg
pop
lret
add
inc
ljmp
sub
mov
nop
mov
decl
mov
add
push
out
push
or
shlb
aas
inc
jno
xor
scas
jmp
inc
call
test
dec
icebp
mov
pop
mov
mov
lock
adc
pop
or
mov
jb
xor
ds
popa
jp
fbstp
push
mov
scas
test
push
add
add
sub
enter
jg
dec
int3
lock
jmp
xor
cmp
add
adc
mov
jge
sub
mov
or
jge
dec
lea
mov
lods
adc
sbb
call
push
adc
or
cmp
out
xor
adc
lret
mov
incb
call
add
mov
std
push
pop
js
out
mov
add
jg
or
je
xchg
push
inc
xorb
cmp
sbb
mov
fdivr
pop
push
inc
call
cmpsb
inc
add
scas
mov
adc
sub
lods
movsb
inc
or
or
sbb
inc
or
call
cld
push
adc
sub
dec
mov
inc
ja
and
cld
mov
call
call
mov
push
cli
in
or
and
fs
adc
dec
mov
push
or
fwait
cmp
pop
mov
mov
into
jp
cmp
ja
daa
or
jg
int3
inc
push
incl
hlt
insb
lcall
add
jmp
movl
std
or
pop
fisttpll
cmp
pop
lret
decl
je
iret
xor
adc
or
fs
mov
out
lock
lea
rorl
js
jmp
jg
add
xchg
sbb
cmp
ret
and
loop
adc
popf
adc
aaa
cld
sub
mov
pop
pop
pop
mov
add
inc
adc
pop
adc
lods
xor
hlt
jmp
nop
popf
test
pop
and
sub
sub
es
sti
jge
je
jmp
sbb
fnsave
stos
rorl
or
add
insb
pushl
add
inc
pop
pop
pop
jae
mov
mov
daa
and
and
mov
jmp
cli
push
mov
sub
and
add
dec
inc
mov
sub
hlt
pushl
cmpb
pop
or
xor
dec
test
sub
pushl
mov
orl
pop
adc
out
mov
incl
inc
inc
shrl
sti
add
ds
jns
pop
das
jne
xor
ljmp
cmp
es
lea
push
and
sti
mov
xor
add
mov
cmpsl
and
lock
mov
push
push
and
dec
push
call
jg
test
je,pn
dec
or
adc
out
cmp
fwait
adc
mov
dec
xlat
sub
data16
lods
cmp
and
xor
decl
sahf
xor
mov
rcrb
cltd
lret
or
hlt
xor
rorb
adc
lcall
out
sti
inc
les
sub
jg
call
enter
push
mov
stos
fnsave
cltd
mov
jmp
dec
repnz
lea
cmp
test
or
xchg
push
adc
incl
push
xchg
test
cwtl
lea
xchg
dec
push
add
aad
or
push
sbb
decl
pop
sub
push
sub
mov
add
call
mov
inc
in
pop
mov
clc
inc
outsb
and
call
and
jnp
add
cmp
test
sbb
push
sub
push
stos
jmp
sbb
pushl
out
jnp
push
mov
mov
cmp
incl
pop
sbb
inc
clc
adc
push
push
cmp
adc
mov
inc
mov
mov
add
pop
mov
inc
push
sar
jmp
xor
and
jne
movl
push
int
ljmp
adc
add
cmp
aas
add
add
jg
push
stc
and
and
in
inc
cs
pop
and
fdivs
push
sbb
test
incl
out
inc
sbb
xor
inc
aam
adc
ljmp
cmpsb
xchg
or
data16
lods
sbb
inc
clc
jmp
xchg
xchg
sbb
ljmp
add
or
dec
fstpl
and
xchg
sub
int3
mov
out
iret
sub
and
cmp
mov
inc
sub
cli
mov
xchg
clc
jg
sbb
cs
and
and
adc
fistpl
fwait
aam
test
clc
nop
inc
jne
pushl
addr16
or
jg
inc
insl
jne
test
jns
push
jae
or
cli
add
decl
or
mov
and
adc
fld
cmp
call
dec
xchg
mov
sbb
sbb
pop
pop
int3
rclb
int3
cwtl
add
mov
adc
incl
inc
cmp
jb
lahf
sbb
push
or
adc
mov
sti
mov
add
push
inc
pop
pusha
mov
jg
or
test
nop
repnz
sbb
jl
mov
jmp
dec
adcb
insb
dec
inc
jl
call
or
movsb
popa
or
incl
rolb
adc
mov
decb
pop
add
adc
insb
shll
decl
jl
xchg
lret
mov
add
pop
push
sub
or
add
andl
inc
push
push
push
ss
xor
inc
loope
push
stc
push
je
cmc
les
fiaddl
xorb
rcrl
push
add
push
sub
mov
mov
cmp
lods
and
push
mov
pop
fsubp
pop
call
sarb
fdivs
mulb
or
and
mov
and
add
sbb
ljmp
andl
jmp
repnz
shrb
sbb
icebp
repnz
test
push
dec
out
js
push
sub
shlb
cs
dec
sbb
push
lock
cmc
insb
jmp
jmp
jmp
jge
push
sub
jmp
and
flds
pandn
in
mov
pushl
and
int3
cmp
aad
fistpll
xor
pop
pop
nop
not
jbe
lcall
or
jnp
and
push
cwtl
sub
xor
mov
cmc
ret
sub
popa
sub
fstps
fidivl
add
call
sti
cltd
shll
pop
test
scas
mov
adc
mov
mov
add
movsb
cmpl
mov
pop
cmp
incl
sub
cmp
fs
std
cmp
jl
loop
das
cwtl
sbb
inc
mov
lcall
pop
pop
enter
cmp
cmp
inc
dec
or
sub
dec
in
adc
enter
call
mov
lds
pop
adc
mov
es
sahf
lods
lock
test
sar
call
xlat
mov
pop
mov
inc
push
lock
sub
dec
jnp
pushl
push
inc
add
popf
or
dec
je
add
insb
mov
incl
cmp
jne
inc
loop
fs
out
push
pushf
into
lahf
outsl
je
aaa
cmpb
cmp
outsl
xchg
sar
adc
loopne
push
gs
push
lods
or
xchg
cmp
fisttpl
mov
cli
push
stc
jl
mov
nop
sub
and
pop
testl
es
pusha
sar
shlb
push
mov
int
cltd
adc
ret
decl
adc
cmpl
adc
insb
lea
out
add
and
out
or
mov
jmp
xor
subb
stos
mov
dec
comiss
lcall
inc
fimuls
aaa
xchg
cmp
imul
int
jbe
enter
pop
pop
out
sbb
cmpl
pusha
xchg
sbb
pop
jbe
jmp
pop
push
jecxz
adc
jb
call
pop
sub
push
mov
inc
pop
cwtl
add
xor
cli
lods
jg
iret
fcomip
decl
js
imul
sub
jl
ret
ret
sarl
or
adc
jmp
movsl
jne
cmpsb
test
into
pop
adc
pushl
push
or
rcrb
out
nop
dec
xchg
xchg
ret
push
sub
jg
mov
jle
in
inc
cld
loop
add
test
sub
jmp
adcl
inc
pop
out
jbe
dec
sti
or
stos
dec
push
jg
test
incl
xlat
cwtl
dec
sbb
in
and
in
adc
jg
xchg
std
lock
jne
cmp
icebp
jmp
dec
inc
dec
pop
lock
int
mov
movsb
fildll
cmpsb
movsb
clc
cs
in
xor
stos
sbb
pop
inc
aad
pop
or
xchg
lcall
decl
adc
sbb
testb
rcll
add
push
cmp
jmp
dec
pop
fiadds
cmc
xor
inc
adc
and
pop
icebp
in
mov
mov
incl
je
in
imul
subb
jmp
cmp
push
je
or
mov
pop
jmp
inc
and
jg
aad
pop
clc
sub
das
pop
call
sarb
ret
pop
mov
or
jmp
decl
into
dec
pop
sub
popa
push
add
cmp
mov
pop
test
call
aas
or
loope
fcoml
sub
les
pop
ret
sbb
aam
ljmp
xchg
imul
adc
sub
outsl
add
dec
xorl
mov
ds
stos
mov
popf
fsubrl
add
mov
add
xchg
enter
add
orl
sbb
aaa
outsb
lock
jecxz
jg
test
adc
loopne
or
cmpsl
xor
sbb
sub
call
ficompl
shll
mov
loop
pop
sbb
test
sbb
movsb
test
jmp
lret
push
call
xor
sub
out
cmp
loopne
mov
and
mov
pop
call
sbb
adc
sub
test
adc
xor
ret
ud0
decl
sbb
or
sbb
jmp
sbb
daa
mov
add
call
call
popa
cmp
frstor
stos
or
cld
int
add
sub
and
jmp
or
cmc
sti
sub
test
cmpsb
test
add
pop
js
lock
jmp
mov
nop
outsl
xor
mov
and
fdivr
mov
push
mov
cmpsb
sub
dec
imul
cmp
mov
and
mov
xchg
and
cli
out
movsb
aad
push
jne
aad
aas
inc
cli
jmp
jg
pushl
inc
jmp
int3
daa
dec
rolb
inc
popa
gs
push
sbb
or
inc
xor
push
push
mov
jmp
jmp
ret
xchg
jmp
adc
add
call
sbbl
or
mov
xchg
stos
inc
mov
jmp
shr
cli
add
pop
cmp
inc
xor
cmp
jge
scas
cmp
je
dec
insl
lret
xchg
jbe
xchg
mov
adc
mov
lcall
daa
mov
jmp
js
pop
pusha
inc
fadds
xchg
call
call
std
adc
adc
lock
call
dec
lods
fcoms
stos
adc
ljmp
inc
cmp
or
sub
fdivr
outsb
ret
inc
cmp
decl
push
xor
shr
sbb
push
mov
push
sub
pop
or
ret
push
jmp
mov
test
xor
in
jo
adc
rclb
and
test
adc
scas
mov
jb
jecxz
and
and
sub
data16
mov
and
adc
xchg
cwtl
nop
das
jmp
adcb
sbb
mov
inc
test
mov
call
addb
jg
adc
jmp
stos
call
mov
jecxz
test
xlat
incl
clc
add
das
sar
js
rep
mov
loopne
loope
add
inc
xchg
je
xor
sbb
adc
sbb
incl
xor
cld
inc
mov
sahf
fwait
hlt
pop
enter
popf
mov
enter
mov
push
mov
sbb
cmp
mov
adc
jmp
xor
lods
lahf
ficoms
decl
vunpcklps
sub
push
dec
pop
fbstp
jl
and
mov
jle
popa
dec
and
arpl
dec
dec
pop
fs
mov
push
dec
xchg
mov
sub
xchg
adc
inc
and
xor
jo
data16
mov
sbbb
push
inc
mov
xchg
adc
mov
inc
stc
in
inc
jl
test
mov
pop
out
in
xchg
sar
lcall
ljmp
fucomi
jmp
add
fisubrs
add
push
cmp
mov
mov
inc
orl
jmp
sub
jmp
ljmp
xchg
xlat
push
push
or
jg
fadd
or
dec
jmp
lods
or
test
fsubrl
dec
sbb
or
adc
loopne
das
or
in
ja
sub
and
fisttpl
sbb
incb
mov
je
and
stos
std
add
adc
dec
movsl
pop
mov
std
adc
data16
popl
nop
pop
adc
mov
push
les
shll
push
or
sar
rep
adc
push
subb
ljmp
inc
fstpt
sar
ljmp
je
mov
popf
push
sub
icebp
pop
add
js
pop
add
push
add
sub
ljmp
sbbl
sub
and
ja
cmp
mov
add
imul
dec
je
or
jge
jmp
ljmp
jle
dec
js
pop
sub
lock
inc
fldl
pushf
mov
jge
inc
sub
sbb
add
or
pushl
add
or
push
adc
je
add
pop
xor
mov
and
or
lcall
pop
jne
jl,pn
sbb
lcall
jo
mov
cli
pop
in
sarb
test
movzwl
xor
call
ss
sbb
sub
lods
mov
pop
push
adc
nop
int
ljmp
movl
fsts
clc
xor
sub
addr16
or
sub
movsb
ljmp
pop
incl
jmp
out
jle
in
push
sar
movq
inc
and
loope
ret
inc
adc
dec
add
push
inc
push
inc
pop
inc
add
insb
sbb
roll
push
pop
sub
mov
ss
push
dec
popa
jae
imul
jg
mov
fldcw
sub
mov
invd
call
ret
cmpb
adc
jg
lcall
cli
in
push
test
fdivr
inc
sbb
in
fistps
cmpsb
push
cmp
call
or
push
mov
loopne
sbb
add
pop
sbb
fmul
loope
sub
ljmp
clc
incl
cmpb
jmp
jne
movsbl
rol
popf
push
cwtl
xor
add
lcall
iret
imul
loope
inc
sub
sub
adc
inc
lcall
and
ret
jbe
into
aad
mov
pop
imul
pop
testl
pop
cmp
test
enter
popa
fidivrs
int3
dec
adc
je
cld
call
push
sub
fwait
adc
icebp
push
and
adc
sub
xchg
sub
lock
mov
out
push
je
fcmovu
pop
loopne
pop
add
dec
das
sub
aad
decl
mov
pop
xchg
js
pop
mov
xor
dec
or
mov
add
mov
call
incb
mov
je
orb
mov
mov
lcall
fs
frstpm(287
push
push
fstl
mov
call
mov
outsb
adc
scas
incl
pop
mov
mov
add
inc
int
adcl
cmp
jecxz
and
pop
ljmp
adc
mov
jmp
add
pop
sub
lcall
jno
cmc
dec
xchg
lcall
add
mov
push
sarl
cld
mov
xlat
push
call
pop
or
inc
inc
or
pusha
and
std
js
je
or
jmp
jb
or
lock
in
pop
lahf
test
push
push
dec
cmp
loope
call
je
mov
fs
sub
dec
and
and
ret
xor
ljmp
leave
cmp
nop
movsb
gs
or
aaa
sbb
cwtl
xor
jg
outsl
clc
ljmp
pop
in
inc
or
mov
xchg
push
cmp
sarb
xchg
aas
sub
cld
xor
call
cmp
cmp
inc
popa
adc
and
cmp
std
inc
comiss
push
cmp
pushl
leave
push
mov
ds
xor
and
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
clc
scas
jmp
or
call
sub
cmp
add
cwtl
testl
ljmp
mov
xchg
sbb
lea
fists
jno
dec
scas
cmp
decl
adc
xor
pop
imul
sbb
rcll
cli
shlb
insb
aad
out
sbb
call
add
dec
movsb
push
sub
in
mov
adc
pop
push
jmp
bound
lcall
into
push
mov
outsl
mov
push
jge
and
dec
arpl
dec
cmp
jne
insb
or
cmp
pushl
add
and
adc
rclb
and
inc
or
push
cmp
inc
inc
or
add
call
xor
dec
sti
cmp
neg
rolb
add
je
call
ss
dec
in
inc
jmp
jmp
je
les
sub
xchg
pop
int
fcomip
lcall
mov
xor
adc
cmp
jle
push
insl
add
fnstenv
lcall
jo
xor
out
jo
scas
sti
and
adc
mov
pop
fimull
mov
repz
decl
and
sub
and
xor
in
inc
ss
scas
in
ja
mov
dec
mov
lds
jecxz
push
inc
or
call
inc
or
mov
mov
adc
sub
cmp
add
push
adc
push
and
dec
xor
inc
movsl
ljmp
adc
jl
cmpl
sbb
add
dec
cmp
mov
dec
jbe
and
imul
lock
enter
mov
mov
jmp
adc
mov
scas
push
add
rcl
mov
push
sub
dec
aas
sbb
xorb
mov
push
bndldx
push
push
jg
shr
inc
shlb
int
mov
add
sbb
cwtl
ret
push
xor
pushl
ja
push
mov
pop
jne
mov
pusha
adc
lods
sub
rcll
add
lret
cmp
pushl
mov
xor
or
fcompl
push
adc
into
jg
clc
rorl
incl
or
xchg
pushf
or
dec
push
xchg
or
mov
stc
adc
pop
add
mov
push
xchg
cmpb
outsb
push
andl
ds
setbe
test
loope
fiadds
mov
bound
push
adc
scas
xchg
push
push
lea
add
jo
stos
jbe
out
inc
mov
loop
incl
cld
xor
jbe
cmp
jmp
jo
pop
sbb
sbb
cld
imul
jne
mov
mov
push
push
call
xorl
jne
mov
or
lcall
fwait
lods
push
jne
xchg
and
pusha
and
movsb
adc
jmp
mov
jmp
stos
xchg
mov
and
nop
bound
lods
jmp
or
mov
dec
jl
outsl
add
or
push
lea
call
push
lcall
dec
cmp
mov
push
adc
mov
sbb
inc
sub
and
jg
scas
dec
cld
fcmove
xlat
nop
push
and
inc
inc
jg
push
push
lock
mov
das
dec
adc
cmpsb
pop
scas
dec
addr16
push
pop
fs
jmp
outsb
xchg
jl
dec
lock
icebp
movsb
movsb
nop
push
push
jle
push
subl
decl
ljmp
movl
mov
mov
aas
xor
xor
incl
iret
mov
incl
xlat
stc
hlt
xchg
dec
or
dec
lock
outsl
jecxz
call
xchg
rcr
ljmp
hlt
sbb
pop
push
and
and
cmp
xor
mov
pop
mov
push
push
sub
les
mov
pop
icebp
xchg
nop
clc
push
mov
and
jg
jmp
lea
outsb
add
stc
jge
sub
call
loop
pusha
mov
lods
dec
xchg
lds
and
or
call
sub
fldl
fildl
sar
dec
push
mov
xor
push
pop
cmp
mov
mov
cld
aaa
sub
push
and
sbb
pop
or
mov
ljmp
or
decb
addl
stos
jmp
pusha
inc
add
jmp
sar
push
add
xor
bound
or
push
fildl
mov
push
xor
data16
add
lock
or
rclb
or
scas
add
xchg
inc
sub
out
sub
mov
cs
cld
cmp
xor
mov
pushl
shll
add
or
dec
or
cld
sbb
add
push
or
incl
and
iret
xchg
dec
dec
test
test
cld
adc
cmp
mov
mov
es
cld
ss
inc
pushf
sbb
leave
dec
or
mov
rclb
cwtl
and
int
add
mov
test
lcall
mov
xchg
hlt
loopne
hlt
add
cmp
ljmp
loop
sub
dec
add
aaa
and
jne
push
pushl
js
xor
enter
lret
in
add
jo
dec
inc
pop
jmp
mov
test
xchg
adc
xor
adc
jl
push
call
xor
loopne
cmc
lcall
sub
mov
jb
cmp
and
cmp
test
mov
inc
or
push
cmc
mov
notl
ss
mov
jb
dec
sub
mov
jge
dec
mov
in
call
and
cmpb
sub
xchg
inc
mov
or
xor
cmpsl
cmpsb
xchg
and
xor
ds
jmp
mov
xchg
mov
ret
jmp
dec
scas
fs
mov
mov
lock
sub
je
mov
cmp
pop
jg
adc
push
push
test
pop
repz
lock
ljmp
and
cltd
xchg
test
adc
or
icebp
pop
fcoms
test
fwait
or
and
inc
es
sti
orl
or
call
loopne
cmp
mov
hlt
call
xor
sar
jmp
lea
in
fisttps
mov
icebp
hlt
popa
clc
cmpsb
nop
subl
lds
incl
decb
test
add
out
cmp
adc
call
aaa
or
pushl
fs
mov
cltd
data16
adc
pushl
arpl
call
mov
inc
or
adc
cwtl
mov
call
jmp
mov
lods
jbe
test
xor
and
call
jb
jns
push
or
adc
jne
cmc
pop
or
loope
sbb
mov
sti
xor
ret
jo
inc
clc
add
outsl
cli
mov
out
add
mov
or
lcall
xchg
pop
cwtl
mov
cmp
sbb
mov
movsb
ret
jbe
inc
xchg
sbb
call
push
or
and
sub
ss
dec
xor
pop
dec
call
call
sbb
adc
pop
mov
and
pop
push
fwait
insl
lret
filds
push
addr16
rcr
jp
cmpb
sbb
lret
sub
add
mov
shrb
dec
jne
es
sbb
roll
jg
idivb
fbld
ret
mov
sbb
lret
stos
inc
outsb
clc
dec
mov
adcl
decl
lret
add
dec
mov
movsl
inc
or
call
inc
popa
mov
cmp
ret
cmc
push
adc
ja
aam
mov
and
les
pusha
nop
cwtl
push
pop
imul
lahf
nop
cmp
and
lock
pusha
sbb
cmpsb
or
fs
pusha
enter
jb
cmp
dec
pushl
dec
and
enter
jb
cmp
sbb
and
and
and
sbb
sbb
inc
sar
sbb
or
repnz
icebp
push
sbb
in
mov
rolb
test
push
icebp
les
scas
scas
pop
pop
ret
gs
xor
and
xchg
xor
inc
dec
enter
or
incb
fists
cmp
lcall
add
pushf
cmp
lock
test
pop
and
ljmp
in
loope
cmp
pushf
fs
sbb
mov
adc
subl
incl
jo
call
and
lahf
push
cmp
loop
arpl
daa
cld
or
lcall
rcrb
lcall
pop
js
inc
outsb
imul
jg
add
shll
sbb
mov
push
push
mov
lret
jg
lcall
push
loopne
repz
cmpsb
mov
mov
pop
pop
mov
jae
repnz
sti
mov
decl
xchg
cmp
ret
cld
outsl
outsl
gs
js
or
cmp
dec
sbb
push
push
sar
jmp
add
ret
sbb
movsb
jnp
shlb
nop
movzwl
pop
imul
jecxz
fisubrs
jns
inc
call
cmp
xchg
fdivl
adc
xor
cmp
inc
xor
push
jne
and
inc
cmp
mov
psadbw
dec
add
add
ja
ja
ret
mov
int3
push
xchg
pop
fs
jmp
inc
adc
push
shr
adc
icebp
sbb
sbb
push
sar
mov
cmp
and
cmp
xor
jecxz
sub
and
jae
shl
pop
inc
cmc
out
or
test
mov
testb
ret
inc
add
mov
mov
or
int3
sub
das
std
decl
lahf
das
add
xchg
dec
mov
xchg
jne
push
aam
xor
ret
jecxz
testb
bound
xor
ret
xchg
push
enter
sbb
dec
push
sub
into
sbb
push
pushl
mov
sub
hlt
das
leave
xchg
fisubl
movsb
mov
test
enter
jmp
les
andb
test
loop
pop
push
dec
loopne
inc
ds
into
icebp
or
adc
clc
inc
add
rclb
lea
xchg
sbb
int
push
push
or
icebp
mov
jmp
sahf
adc
adc
inc
cwtl
adc
or
ret
jecxz
xchg
jle
dec
jne
mov
fldl
dec
shll
dec
decb
mov
incl
movsb
fsubl
in
sbb
jae
jns
or
sbb
test
adc
and
js
or
decl
adc
xchg
add
sbb
lods
jmp
pop
sbb
lret
xor
incl
ret
sarb
xchg
and
mov
insb
pop
inc
int
mov
jg
nop
movsl
shld
mov
inc
mov
movsl
adc
xchg
leave
push
sbb
incl
rcl
mov
push
js
test
daa
cmp
movsl
sar
incl
and
push
fsubr
je
adc
lcall
subb
mov
add
sbb
data16
push
sarb
out
cli
xchg
jb
inc
cmp
shlb
mov
ret
or
xacquire
lret
testb
loop
movsb
xchg
aam
fs
les
and
stos
ret
push
mov
fst
mov
adc
adc
fcomip
divb
or
cvtpi2ps
sub
cwtl
sub
cltd
ljmp
arpl
add
pusha
cmpsb
or
je
in
xor
push
sub
mov
decl
xchg
xchg
dec
stc
push
or
mov
test
dec
js
je
add
lcall
or
push
test
pop
ret
push
inc
push
incl
jmp
jae
push
pop
inc
jno
adc
rol
xor
lds
icebp
add
out
lea
mov
adc
js
mov
and
pop
fs
add
inc
lea
frstor
xchg
das
sbb
cmp
pushl
jmp
push
xor
out
jmp
aad
scas
jmp
adc
sub
add
or
or
loopne
test
inc
sub
inc
lret
mov
decl
ljmp
aaa
call
cld
cmp
inc
mov
jae
decl
ss
mov
mov
pop
and
sub
mov
pop
add
pop
xchg
fists
call
sbb
dec
xor
ljmp
xor
ja
fwait
cmp
sub
cmp
jbe
filds
dec
jne
xchg
cmp
in
lcall
and
push
cmp
xchg
test
inc
mov
mov
jnp
cmp
inc
add
call
pusha
add
fidivrs
cmp
cli
or
or
dec
fwait
sbb
cs
adc
cli
andl
push
pop
loopne
call
notl
push
je
inc
sub
jmp
xor
je
sbb
daa
and
push
cli
pop
mov
test
mov
fildll
test
lahf
and
int3
les
jnp
in
cmc
incl
mov
lock
clc
daa
icebp
adc
push
ja
ljmp
bound
dec
mov
adc
push
fcomi
inc
test
push
push
ja
cli
pop
cld
pop
mov
roll
push
icebp
pop
adc
cltd
mov
jno
incl
outsb
les
arpl
call
out
jl
add
lcall
pop
xchg
mov
hlt
push
inc
ja
xor
incl
push
sbb
loop
mov
mov
js
jle
adc
mov
inc
les
or
and
loop
inc
adcb
ret
jmp
jmp
mov
cmp
add
pushl
mov
sbb
ret
jl
adc
daa
fld
jo
add
movsl
jmp
mov
xor
pushl
test
dec
and
pusha
das
push
cmp
and
in
out
jns
aaa
and
or
dec
sarb
and
cltd
or
and
lea
inc
and
cmp
or
sub
imul
sub
inc
adc
sbb
call
mov
add
incl
hlt
push
add
mov
jg
mov
sbb
xor
push
pushf
test
and
call
sbb
lock
int3
push
enter
lahf
or
fcomp
fxch
add
fstp
fnstsw
loope
shl
lcall
jb
outsl
sbb
add
cld
call
ds
je
xor
add
add
or
jg
and
pop
xchg
dec
cwtl
leave
sbb
sub
cmp
ljmp
mov
push
cmp
mov
add
addr16
or
or
mov
add
or
jb
int3
jge
decl
adc
cmp
inc
stos
mov
push
xchg
int
mov
dec
adc
or
clc
js
lret
adc
mov
jae
fcomps
and
enter
and
popf
insb
add
lock
adc
xchg
xchg
jl
test
iret
cltd
push
sub
pop
cmpb
rclb
mov
movsb
repnz
push
outsl
repz
roll
mov
decl
adc
adc
popa
push
or
aas
xchg
xchg
inc
jl
xor
cmp
add
shrl
clc
pushl
pop
aad
mov
shl
inc
adc
bound
daa
insb
js
gs
orb
rcrl
aas
cs
add
movsl
nop
adc
or
sub
xchg
and
xor
aaa
int
push
mov
cmp
scas
add
add
or
cwtl
xchg
fimuls
ret
xchg
movsb
decl
mov
and
sub
and
movsb
fs
imul
test
pusha
jmp
or
xchg
cmp
je
mov
repnz
jne
call
outsl
outsb
xor
cld
jbe
pop
outsb
push
inc
fstps
sbb
dec
jle
push
jp
mov
sti
jb
pushl
and
rorb
mov
or
cmp
dec
push
cmp
sbb
lret
sbb
jae
bound
sbb
add
lcall
push
push
imul
dec
mov
loopne
jns
xchg
sub
and
push
das
jns
ja
xchg
inc
mov
movsb
adc
xchg
movsl
decl
fs
inc
imul
data16
ljmp
jp
insl
xor
lcall
sbb
xor
pop
cli
das
clc
inc
lock
out
or
nop
inc
push
push
sbb
cld
decl
es
jae
flds
jo
or
push
jg
cmc
lahf
ja,pt
cmp
loopne
add
adc
sbb
pushl
dec
jb
out
jae
sbb
outsl
cld
fs
out
jo
push
or
pop
enter
fisttps
mov
ljmp
sbb
pushl
jo
dec
cmp
pop
jmp
dec
loopne
cmpsb
adc
dec
mov
test
leave
and
jg
movsb
and
jl
dec
jae
std
out
xchg
cmc
and
lea
pop
in
call
inc
je
bswap
insl
adc
jns
add
lahf
cmp
pop
dec
xchg
push
pop
adcb
dec
sub
adc
mov
jae
or
pop
dec
adc
push
jge
adc
or
mov
and
adc
out
or
mov
xor
imul
and
fwait
repnz
pusha
in
or
outsb
mov
mov
mov
shlb
push
incl
mov
sbb
xchg
sbbb
or
push
or
cli
inc
pushl
std
add
ss
add
and
inc
mov
or
decl
ret
inc
loope
mov
addl
loopne
push
xchg
mov
loopne
loopne
loopne
loopne
mov
or
or
push
stc
fadds
in
add
pushl
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
mov
jle
jle
jle
jle
jle
jle
jle
jle
jle
sbb
imul
push
dec
jl
int3
jbe
sbb
xchg
jp
loop
mov
negb
lcall
cmp
inc
lahf
push
pop
data16
insb
lahf
jp
lahf
test
scas
lahf
mov
lahf
fcompl
out
sti
xchg
sbb
addr16
pushf
out
out
out
out
icebp
call
out
out
out
out
out
inc
cmp
xor
and
mov
jl
test
orb
out
sub
jne
mov
mov
jecxz
repz
out
repz
lock
call
in
jmp
cmpsb
in
je,pn
jbe
js
jp
push
loope
or
sbb
movsl
cmp
ljmp
jo
orb
dec
mov
mov
iret
into
iret
in
iret
repnz
cli
fwait
lcall
push
mov
ret
roll
repz
repz
in
stos
call
mov
mov
ret
cld
leave
cld
sar
cmp
xor
push
cmp
and
cmp
ds
dec
loop
ficomps
sbb
cs
rorb
fwait
ret
xchg
xor
lahf
ror
jecxz
lock
call
cmp
lcall
xor
mov
dec
loopne
push
mov
dec
mov
insb
je
iret
loop
out
ret
xchg
pop
mov
aad
inc
test
mov
shlb
xchg
mov
pop
cld
pop
pop
adc
int
lock
or
and
inc
cmp
in
sub
mov
aaa
lods
cmp
pusha
iret
stos
cmpxchg
mov
iret
fcmove
in
call
mov
movsb
iret
cld
ret
cmp
ljmp
jg
stc
ret
stc
icebp
stc
sti
clc
add
xor
jp
jl
jle
jle
pop
dec
je
jle
jle
jle
sbb
popf
cs
dec
pop
add
mov
idiv
lock
cmp
jge
inc
in
dec
lock
hlt
mov
stc
cld
sbb
adc
cmp
cmp
ja
orb
and
in
cltd
lahf
les
lahf
aad
filds
xor
sub
ss
dec
push
out
out
out
out
out
out
out
jmp
out
loope
xor
flds
pop
jmp
mov
xchg
stc
mov
xlat
cld
jg
jecxz
add
cmp
sub
inc
lahf
dec
pop
push
lahf
pop
lahf
bound
or
pop
fadds
lcall
mov
jg
ror
fisubl
push
ljmp
cmp
inc
pop
std
les
inc
lcall
pop
ljmp
cmp
dec
and
jo
je
js
jl
mov
test
jle
add
decl
cwtl
mov
push
jo
sbb
das
cli
stos
inc
popf
sub
mov
lods
cmp
mov
push
cmp
lcall
add
sub
das
adcb
adc
and
pop
or
mov
and
stos
dec
sub
sbb
and
loope
sbb
inc
or
mov
mov
sbb
push
sbb
dec
dec
adc
push
and
scas
jmp
push
push
inc
dec
scas
or
push
adc
sbb
pushf
incl
inc
sbb
sbb
sbb
sbb
es
xorb
repz
add
fwait
cmp
jmp
push
sbb
or
add
adc
decl
clc
stos
xchg
in
dec
hlt
xchg
insb
pop
or
jecxz
int
dec
in
xchg
clc
pop
xor
or
mov
jo
or
lods
popa
aad
lods
repnz
fwait
outsb
fwait
push
insl
mov
je
lcall
popf
adc
insb
gs
data16
lret
and
xchg
and
sub
repnz
mov
dec
insl
adc
popa
popa
jns
mov
sbb
add
push
sub
jle
lret
pushf
push
or
mov
dec
or
push
add
arpl
or
mov
rcrb
push
sub
jae
push
push
adc
or
je
rclb
loopne
insb
out
add
push
adc
mov
addr16
and
mov
fwait
dec
push
xchg
adc
cmpsl
es
adc
mov
mov
sbb
mov
add
ljmp
nop
mov
in
sbb
aam
push
mov
inc
incl
pop
je
incb
or
ds
jo
mov
pop
add
add
xchg
lcall
fistl
dec
mov
test
sub
std
fildll
pop
sarl
adc
aam
test
or
push
and
or
or
inc
popa
cmp
into
int3
mov
pop
sub
xor
sub
movsl
divl
pop
adc
jmp
imul
and
push
mov
dec
sbbl
cli
mov
sub
movsl
or
mov
pusha
mov
popa
sub
lds
insl
jmp
sub
inc
cmp
imul
pop
fsts
dec
xchg
cmpsl
sub
push
inc
push
cmp
xor
add
or
or
js
fwait
bound
dec
sub
sub
leave
inc
inc
push
cmp
test
xor
inc
ljmp
ret
sbb
adc
inc
outsl
in
fdivl
mov
jne
aam
adc
test
dec
push
daa
xor
das
lds
sbb
jns
movsb
adc
mov
das
jmp
xor
sbb
add
roll
push
sbb
sbb
pop
push
pop
cs
or
and
lock
fmul
sbb
and
mov
push
repnz
xor
jl
dec
out
xchg
mov
sbb
xchg
out
mov
push
mov
push
mov
lea
xchg
fsubrs
mov
out
repz
in
es
xchg
int
insb
mov
into
pop
xchg
dec
cwtl
fwait
push
mov
ss
mov
jg
in
test
inc
and
loop
push
or
ss
in
roll
shr
ret
ret
jns
loope
fwait
int
jnp
push
lret
out
lock
int
mov
pop
loope
push
xchg
add
or
sbb
xor
cwtl
push
pop
inc
or
mov
mov
repnz
add
fisubs
push
jnp
sub
xor
cmp
fxch
push
or
xor
xor
xor
dec
inc
mov
xor
sub
and
adc
cs
jp
jo
xchg
lcall
mov
add
cltd
rcrb
inc
mov
call
test
and
and
cmp
and
data16
pop
add
in
jnp
xorb
enter
imul
sbb
pop
dec
ss
jo
or
popa
or
hlt
mov
pop
cs
push
mov
inc
jge
and
pop
xchg
loopne
mov
sbb
and
subb
repz
add
lea
lcall
xchg
sub
add
jmp
invd
inc
jle
add
and
push
push
dec
dec
dec
loope
sti
sbb
dec
or
inc
and
jp
cwtl
sbb
jg
mov
xor
mov
faddl
dec
insb
mov
sub
out
mov
loop
push
pop
push
inc
and
sbb
mov
or
dec
inc
dec
sub
inc
dec
jl
mov
adc
cmp
sahf
jl
inc
xor
int
sti
cltd
xor
push
inc
dec
push
nop
and
inc
adc
sub
mov
aas
and
mov
jno
out
inc
and
call
push
pop
push
ret
or
pop
into
rol
fidivl
dec
sub
gs
mov
fisubl
je
mov
enter
imul
mov
lcall
fs
je
mov
mov
inc
loopne
mov
dec
ja
shll
ja
push
leave
push
mov
ret
xchg
or
sbb
outsl
jecxz,pt
push
sbb
xchg
add
inc
addl
add
sbb
add
jecxz
out
inc
jl
add
test
add
inc
leave
sub
int3
and
roll
outsl
mov
add
insb
ss
aad
dec
xchg
and
sub
data16
cmp
push
cmp
shrl
cmp
icebp
pop
repnz
ja
fistpll
cld
fdivrl
or
jo
insl
xor
adc
mov
sub
jg
dec
dec
dec
dec
dec
dec
dec
dec
enter
call
push
pop
pop
pop
push
push
push
sbb
or
jne
sub
add
push
mov
adc
add
add
insl
inc
aaa
sub
push
push
mov
dec
or
add
std
push
sub
mov
mov
imul
and
add
cwtl
insl
sub
scas
shrb
or
lea
inc
imul
adcb
add
jne
movsb
out
push
mov
ret
faddl
inc
lcall
sbb
add
push
insl
push
jno
jo
ja
iret
outsb
enter
cs
xchg
out
aam
rcll
xchg
or
jle
dec
mov
insb
push
mov
push
sahf
sbb
ds
mov
mov
and
xor
mov
in
in
push
outsb
add
add
sub
pop
daa
sub
or
gs
rolb
pop
jns
test
lods
mov
inc
sub
xor
cmp
dec
cmp
sbb
lods
jb
mov
subb
fucomi
pop
jp
add
sub
xor
inc
pusha
or
add
enter
jl
out
fadds
nop
out
mov
adcb
test
add
nop
cmp
add
jmp
enter
mov
pop
mov
iret
sti
lret
cmove
lock
dec
add
ss
loop
sub
mov
mov
xor
loopne
pop
das
add
pusha
fs
sub
hlt
and
xor
mov
pusha
jbe
xchg
or
in
ljmp
js
idiv
faddp
sarb
cld
and
sbb
in
jg
aam
mov
mov
fidivs
xlat
stc
std
inc
test
cmpsb
jo
bound
mulb
inc
bound
fbstp
add
lods
jmp
les
and
mov
xor
out
jg
divb
or
outsl
imul
insb
imul
insl
arpl
cs
sub
jbe
outsb
or
inc
gs
push
xor
pop
popa
popa
notl
sbbb
pop
mov
pop
and
pop
orb
lock
out
jo
dec
imul
cs
cmp
and
lea
popa
jecxz
mov
dec
das
data16
xor
js
mov
inc
jns
sti
sub
mov
out
in
jmp
test
imul
add
push
and
xchg
or
push
loope
shrb
add
insl
cmc
pop
jns
lods
imul
push
push
mov
out
ret
les
mov
repz
add
add
add
loope
xchg
repnz
or
pop
push
lds
lods
or
add
lahf
rorb
mov
sbb
mov
sbb
cmp
or
sbb
sub
cmp
add
stos
out
xchg
mov
ss
push
adc
lock
insl
ret
in
adcb
cmp
ret
xor
and
or
dec
dec
inc
mov
inc
nop
mov
ret
add
xor
ljmp
jnp
sub
scas
nop
jp
sub
add
mov
xchg
xchg
push
inc
stc
push
ret
and
inc
stc
and
stc
push
inc
lds
aaa
lods
xor
jbe
and
leave
std
push
inc
stc
and
lds
xor
lods
cwtl
scas
ret
leave
dec
imul
or
xor
mov
sbb
push
add
xor
testl
dec
ds
and
or
add
imul
pop
in
jecxz
mov
test
add
add
fcoms
aam
bound
fs
cmp
and
mov
dec
push
inc
add
push
adc
add
ficompl
push
sahf
xor
daa
jmp
mov
push
leave
out
mov
divb
cmc
in
push
and
push
sbb
mov
mov
sahf
jnp
subl
inc
ds
popa
pop
aaa
in
aas
push
es
add
mov
aad
rcrb
cmp
sub
outsl
lock
int
mov
popf
fisubs
std
adcb
cmp
inc
fisubrs
inc
and
fcoms
add
daa
add
cmpsb
add
insl
int
insl
push
out
test
mov
and
add
jae
pusha
pop
cmpsb
and
adcb
popf
jns
adc
nop
jo,pn
adc
sub
mov
pop
xor
pusha
mov
sub
jns
fcomps
mov
lods
mov
jbe
add
insl
adc
inc
add
dec
pop
iret
aad
push
sbb
cltd
xchg
sub
loop
adc
pop
sbb
pop
add
shl
mov
add
or
int
ror
push
jnp
pop
jne
inc
add
lods
adc
pop
dec
and
fdiv
push
call
inc
xor
pop
inc
jo
cmp
rcr
push
xor
inc
sbb
outsl
mov
inc
jo
test
loop
dec
mov
inc
clc
shll
push
test
jns
sub
dec
jae
popf
lock
pusha
cli
adc
add
pop
push
inc
in
out
test
add
add
in
leave
xor
jmp
adc
or
sti
push
aas
fadd
add
cmp
ficoms
sub
out
pop
stos
outsb
cs
add
add
mov
cld
mov
ljmp
leave
test
stc
xor
inc
add
add
call
outsl
adc
jo
cltd
and
or
ljmp
js
nop
jmp
std
add
pushf
loopne
inc
in
and
in
das
add
xor
jbe
pop
add
call
cmp
sub
dec
mov
or
sub
mov
repz
sbb
daa
sub
in
das
shlb
daa
push
dec
hlt
sbb
xor
shrb
add
mov
add
hlt
das
mov
shlb
stos
dec
mov
shrb
mov
inc
roll
ljmp
adc
outsb
das
dec
push
xor
fiaddl
outsb
pushf
mov
outsl
inc
cmpsb
jne
lock
inc
add
xchg
cs
shrb
outsl
repnz
and
jo
push
cmp
in
add
add
add
push
loopne
rolb
bound
faddl
or
pop
lahf
loopne
add
inc
push
dec
shrl
pop
jle
adc
adc
nop
adc
cmp
push
lock
clc
rorb
inc
scas
cs
insb
test
or
das
pop
fcoml
jo
adc
das
pusha
das
das
sub
das
add
pushf
mov
or
push
jno
cmp
adc
or
nop
add
dec
add
pushf
inc
pop
nop
or
or
push
out
subb
addb
iret
jo
out
aaa
xchg
jo
scas
mov
stos
add
and
adc
aad
xor
pop
loopne
pop
jo
push
xor
wrmsr
pop
adc
ud0
lahf
sbb
mov
add
sbb
cmp
sbb
push
loopne
mov
inc
pushf
inc
push
shlb
inc
pushl
fadds
jo
iret
pop
pop
or
jnp
adc
outsl
nop
mov
xor
pop
and
enter
sbb
pop
jo
pop
sub
ljmp
sub
cmp
inc
sub
sub
xchg
jno
cs
jb
int
subb
fmuls
clc
push
and
pop
loopne
aas
lahf
or
pop
sbb
roll
and
add
push
das
lar
mov
outsb
or
pop
daa
sbb
xor
or
pushf
bound
xor
sbb
mov
orb
lock
adc
or
jae
je
xor
sub
filds
mov
xor
pop
mov
dec
push
lock
or
inc
sub
out
mov
mov
inc
test
jmp
push
jge
dec
push
mov
ds
insb
fistpl
out
das
pushf
and
xor
xor
xor
push
jno
in
jge
cmp
mov
div
mov
mov
add
dec
and
fidivrs
ss
pop
cmp
jbe
js
inc
dec
fistpl
inc
out
mull
js
mov
push
test
cmpsl
cltd
push
lock
jae
inc
xlat
push
xchg
jo
or
pushw
pop
js
nop
lret
fimull
inc
adc
shrb
inc
pusha
xchg
pop
pop
dec
sbb
lock
pusha
lret
jle
int
fiaddl
cmpl
inc
andb
mov
add
add
cmpb
adc
ja
imul
push
cmp
inc
push
mov
loopne
push
sarb
adc
mov
inc
push
pusha
nop
dec
xchg
jb
cmp
push
dec
aas
xor
dec
insl
fidivs
add
dec
lods
sub
mov
in
outsb
jb
dec
xor
push
push
sub
push
ss
sti
fisubrs
mov
pop
bound
inc
imul
mov
aad
xchg
iret
xchg
cmp
shrb
pop
lock
cmpsl
push
pop
repz
inc
mov
adc
cmpb
add
push
xor
repnz
call
adc
add
mov
fmuls
inc
xor
mov
loopne
cs
lds
scas
push
in
out
add
cmc
adc
test
out
add
or
lock
mov
nopl
imul
lock
add
add
testl
loopne
gs
inc
adc
scas
lret
lahf
lock
ss
stos
stos
sahf
subb
inc
enter
lret
and
adc
inc
add
fisttps
and
mov
inc
and
or
aas
xor
push
and
shrb
inc
jg
add
mov
outsb
push
push
and
inc
and
jae
push
cmp
das
pusha
outsl
das
loopne
cmp
mov
lock
cwtl
jno
jg
adc
and
pusha
outsb
jg
add
push
shlb
popl
aaa
inc
adc
add
enter
cmp
outsb
lahf
iret
das
jns
lea
dec
xor
aaa
ljmp
push
add
lcall
dec
mov
add
xchg
frstor
das
nop
inc
pop
pop
les
jbe
das
and
iret
ja
jb
insb
pop
cmp
sbb
inc
test
and
sarb
mov
and
pop
mov
lock
out
inc
shll
pop
sbb
push
fildl
outsb
cmp
add
addb
dec
xchg
jo
int
xchg
push
pop
cmpb
sbb
push
rcrl
ja
mov
pop
push
push
inc
push
mov
push
mov
push
mov
lahf
and
mov
scas
pop
adc
pusha
push
js
lods
inc
in
jb
outsl
cwtl
pusha
lods
push
xchg
sahf
mov
jns
scas
sahf
inc
push
mov
lahf
shrb
repz
mov
mov
sbb
pusha
mov
jae
call
pop
cs
loopne
inc
add
add
mov
inc
rorb
iret
lock
mov
add
sub
loopne
dec
stos
loopne
jo
mov
xor
add
cwtl
push
pop
cs
in
imulb
lods
cmpb
add
jne
mov
dec
xor
sbb
andl
clc
ds
cmp
pusha
test
dec
xor
adc
cmpsl
or
aas
pusha
mov
int
cmp
pop
add
xchg
mov
fcomps
das
test
adc
pop
sub
inc
outsl
mov
jg
mov
jns
movsb
cs
shr
mov
inc
mov
adc
xor
and
push
addb
nop
inc
addps
rol
testl
mov
je
mov
notl
pushl
inc
inc
xchg
add
out
loope
push
mov
inc
outsl
and
insl
adc
inc
ficoms
pop
popa
pop
popa
leave
xchg
out
inc
inc
pusha
loopne
pop
leave
xor
inc
cs
pop
leave
mov
dec
dec
sub
in
dec
push
push
add
dec
sahf
push
push
jns
mov
das
inc
inc
cmp
cmp
cmp
cs
dec
adc
dec
cmp
pushf
cmp
inc
pop
pop
pushf
cmp
pushf
jo
push
mov
push
push
rcrb
dec
sahf
cmp
xor
pusha
pusha
scas
sbb
add
sbb
inc
xchg
sbb
aas
pusha
inc
nop
pop
xor
mov
data16
jmp
push
out
mov
jo
cs
jo
das
add
pop
test
lcall
scas
dec
and
xor
push
das
pop
sbb
clc
aas
mov
in
lahf
cmp
das
loopne
pop
dec
sahf
dec
jbe
pusha
negb
adc
and
pusha
cmp
sar
jg
and
sbb
js
adc
cmp
aas
lock
test
xor
add
push
and
inc
das
imul
das
loopne
add
push
sub
pop
out
adcb
inc
scas
or
andb
test
push
rorl
xchg
jg
or
jmp
popa
xor
or
push
inc
dec
shlb
jo
orb
push
inc
iret
mov
jle
lock
mov
mov
or
mov
add
inc
ss
movb
or
iret
mov
insl
hlt
mov
dec
sgdtl
das
into
add
push
adc
add
lahf
sbb
adc
add
sbb
lods
loopne
mov
and
mov
push
and
mov
rcr
or
loopne
outsl
sub
icebp
or
pop
fists
cmp
ss
adc
shlb
push
mov
adc
int3
lods
mov
mov
mov
ss
mov
loopne
push
adc
xchg
pop
inc
jns
repz
add
inc
add
clc
mov
sbb
orb
das
clc
daa
in
test
data16
mov
sbb
and
movd
enter
imul
inc
sbb
adc
mov
inc
mov
push
out
outsl
mov
mov
das
xor
inc
outsl
subl
jle
or
push
add
sub
pop
adc
dec
test
sbb
lock
jecxz
adc
adc
dec
pop
adc
add
pusha
pop
stos
cmp
stos
sbb
dec
inc
mov
xor
aas
out
mov
in
inc
push
mov
jns
nop
sbb
pushf
pop
enter
fwait
add
xchg
inc
pop
shrb
mov
sbb
nop
sbb
lock
jg
daa
nop
adc
sbb
test
dec
and
mov
pusha
sub
inc
sub
sahf
bound
mov
jbe
popf
ljmp
and
mov
sbb
inc
dec
inc
lds
mov
iret
xchg
inc
xor
cli
ljmp
cmp
add
aaa
inc
pop
mov
pop
jecxz
sbb
pushl
call
sub
mov
imul
fistps
or
dec
jmp
jle
dec
insb
inc
push
enter
imul
push
dec
xor
adc
jno
xchg
out
pop
rorb
cmp
nop
cmp
nop
out
inc
jo
adc
enter
sub
add
mov
add
or
imul
pop
movsl
mov
shll
aas
xorb
dec
dec
and
add
and
sahf
xchg
aaa
addb
inc
aas
mov
ds
inc
inc
shlb
push
adc
fistl
add
push
cmp
add
xor
inc
pop
push
lahf
add
lahf
lea
adc
push
cmp
inc
push
or
jno
push
in
lret
mov
pop
add
insb
mov
inc
jo
popa
push
or
scas
int
adc
loop
popa
stc
push
mov
xor
test
cld
xlat
add
and
push
ss
add
adc
pop
adc
fnsave
pop
or
inc
push
mov
test
and
push
repnz
push
cs
add
in
scas
or
adc
rclb
fstpl
jbe
popf
jbe
in
ljmp
ja
sub
mov
imul
std
cmp
aaa
sub
pop
dec
cs
jbe
out
and
dec
and
pop
push
push
jnp
pop
mov
push
sbb
rolb
idivl
jae
mov
xchg
repz
pop
sub
out
add
push
cwtl
in
cmp
leave
sbb
adc
and
xchg
shrb
dec
mov
popl
dec
and
sub
fnstsw
sub
fdivrs
enter
dec
jle
clc
cmp
dec
cmp
dec
mov
jno
into
pop
pop
insb
pop
repnz
mov
test
add
mov
xchg
add
fldl
adc
mov
xchg
orl
shl
nop
and
cmp
adc
dec
pop
mov
dec
mov
xlat
cmp
xchg
imul
cmp
cmp
inc
int3
push
fneni(8087
fnstcw
adc
mov
sarl
gs
fildll
dec
ja
jge
out
dec
addr16
repz
out
repnz
push
dec
imul
fwait
pop
out
cmp
repz
test
mov
adc
out
clc
dec
fs
pop
push
mov
outsb
mov
mov
into
enter
lock
call
pop
cmp
fidivrs
adc
nop
adc
push
mov
inc
push
mov
cmpsl
cmp
mov
out
pop
dec
inc
dec
sbb
adc
incl
arpl
add
mov
psrlq
pop
push
add
pop
in
mov
mov
add
cltd
xchg
int
divb
add
scas
sub
fldl
dec
add
xchg
rolb
and
inc
jns
inc
roll
daa
es
pop
popa
testl
add
fisttpll
aas
push
cmp
notb
jbe
fnsave
fnstcw
lock
inc
loop
xor
inc
rcl
stos
outsl
cmc
or
das
pop
enter
xor
jb
pop
and
aaa
mov
adc
inc
movsl
movsb
cs
or
loopne
ds
sbb
push
mov
add
in
adc
dec
adc
jp
and
jae
das
das
push
lcall
sub
frstor
out
dec
ficompl
sbb
jae
mov
aad
push
sbb
das
cmc
pop
add
or
push
fists
leave
out
jle
mov
or
xchg
add
push
cld
mov
fstpl
test
add
dec
mov
clc
stc
inc
and
or
push
xchg
add
lods
xor
mov
mov
inc
or
lock
ss
push
aaa
lahf
jno
push
and
jle
inc
add
cmp
jbe
push
and
jns
rcll
into
or
inc
pop
and
adc
dec
aas
fwait
test
add
jo
push
add
test
nop
aas
nop
fwait
adc
push
pop
jns
xor
sub
adc
stos
cmpsb
push
and
xor
data16
cmpl
movsl
in
popw
aaa
dec
adc
jo
pop
or
dec
sbb
push
dec
push
mov
xor
dec
mov
movups
cli
imul
cmp
add
sbb
int
jns
andb
jae
orb
or
out
jo
mov
cmp
jo
push
testb
test
jbe
mov
movsl
ds
mov
push
mov
test
add
add
je
mov
mov
sub
xchg
and
mov
or
cmpsl
stc
jle
out
imul
ljmp
ret
cmpsb
fmuls
leave
jp
cmpsl
fldcw
js
js
jge
push
or
loopne,pn
insl
lahf
dec
push
shll
aad
sbb
cmpsl
add
mov
push
jecxz
xchg
and
iret
rolb
add
add
push
add
or
stos
test
sub
push
push
adc
dec
mov
cmpsl
sub
rclb
jge
dec
or
pop
adc
nop
xlat
mov
dec
mov
mov
add
sub
xchg
ds
dec
jg
add
mov
movsl
dec
js
add
mov
lret
inc
leave
or
sub
outsl
or
add
pop
enter
inc
cmp
mov
outsl
xor
inc
stos
nop
inc
punpckhwd
mov
pop
cmp
xchg
orl
jecxz
lret
push
stos
pop
sbb
scas
push
add
fsubr
or
lcall
jmp
outsb
cmp
scas
add
inc
adc
add
push
sub
js
xor
mov
pop
pusha
repnz
cmpsl
js
xorb
dec
mov
aaa
ja
test
push
jae
stos
sahf
or
ror
mov
mov
shrl
das
shrb
push
int
add
cmp
push
lods
out
add
test
sbbb
lahf
outsb
cmp
incl
outsl
mov
xor
outsl
enter
aad
sbb
test
mov
fidivl
push
xchg
jmp
push
push
push
sbb
cmp
mov
mov
repnz
scas
daa
xor
fsubrs
lret
xor
shlb
push
mov
add
dec
aas
push
das
add
and
add
ds
xlat
cs
sub
call
inc
jno
mov
add
mov
test
sbb
push
das
repz
imul
cmpsb
dec
xor
push
ss
outsb
fadds
push
sbb
adcb
daa
inc
add
test
aas
adc
add
int
sbbb
xchg
ljmp
pop
iret
mov
push
cmpsl
pop
sub
push
insb
mov
mov
mov
ja
inc
out
iret
cltd
cs
cmp
bound
mov
cmp
stos
add
ja
cs
or
hlt
mov
add
pusha
push
nop
lcall
mov
int
pop
lock
es
lahf
or
in
les
lds
cld
cmp
jle
scas
ret
dec
mov
add
sbb
lret
cli
mov
cmpsl
lahf
mov
add
icebp
out
mov
push
dec
lock
call
sahf
int3
push
dec
dec
dec
dec
dec
push
inc
cwtl
movsb
aam
int3
push
sbb
push
push
outsb
mov
xor
push
push
xchg
mov
mov
nop
ss
outsb
push
xor
test
cmpsb
xor
outsb
cli
mov
inc
cs
test
sub
movsb
push
mov
js
dec
inc
repz
push
push
lahf
sbb
outsb
out
pop
inc
loop
push
push
aaa
jne
jno
faddl
mov
cmpsl
push
imul
mov
push
push
lods
pop
gs
jns
jp
fdiv
insb
iret
imul
into
mov
mov
mov
cmp
loope
enter
data16
idivl
fwait
stos
data16
pop
mov
mov
daa
mov
in
pop
cs
js
lcall
loopne
inc
or
cmp
xchg
daa
cltd
mov
idivb
divl
push
sub
int
jns
jecxz
imul
jl
leave
cmp
rcrl
stos
outsl
dec
int3
pop
mov
add
subb
add
or
cmpsl
xor
lahf
mov
push
lods
inc
fiadds
mov
addb
mov
sbb
into
pop
shlb
inc
pop
jle
shlb
test
insl
loope,pn
push
push
fsubl
int
push
rcrl
outsb
pop
and
insb
fldl
push
daa
xorb
adc
shll
iret
mov
mov
dec
adc
and
inc
cli
pop
js
push
dec
out
sti
lock
pop
ds
pop
adc
pop
pop
inc
cmp
aaa
call
and
lahf
push
adc
test
dec
sub
jmp
je
out
add
in
inc
pop
pop
pop
loopne
sub
cmp
jbe
aas
mov
enter
test
xchg
lcall
adc
in
mov
inc
and
les
and
mov
daa
ljmp
repz
add
add
or
and
inc
subb
xor
out
lock
jo
mov
mov
iret
jmp
scas
les
add
dec
lcall
push
and
shrb
aas
and
fnstenv
daa
nop
je
jns
jg
ss
xor
cmpsl
mov
pop
test
cmp
jl
iret
lea
stos
cmp
in
sub
push
jbe
push
fidivrl
repz
push
mov
mov
jmp
mov
jp
divb
mov
sub
ss
fwait
int
sarb
xor
out
push
or
or
jne
jns
sti
mov
insb
cwtl
addl
xchg
insb
lahf
ja
cmp
inc
nop
nop
sbb
jnp
js
loopne
int
into
push
mov
bound
push
dec
xchg
js
in
loopne
push
xchg
xchg
cmpsb
mov
addl
xchg
push
mov
push
sar
lea
pop
cs
sahf
fcomi
cmp
ret
fisubrl
out
add
and
cmpsl
js
in
imul
push
cmpsb
iret
nop
rcrl
mov
jp
mov
scas
inc
xchg
dec
lea
ja
xchg
ds
jnp
clc
test
mov
cltd
mov
out
movsl
mov
lods
arpl
insb
and
dec
js
and
and
or
pusha
hlt
dec
daa
mov
mov
pop
das
and
imul
or
lods
mov
and
mov
insl
idivl
pop
fs
gs
mov
arpl
adc
stos
xlat
cli
jbe
outsl
test
data16
xchg
and
push
out
or
outsb
ss
pop
dec
push
inc
cmp
xchg
and
or
lds
cmpsb
test
cmp
stos
fwait
push
out
ds
scas
mov
repz
mov
push
push
gs
sbbb
xor
aaa
jle
imul
aad
ja
cs
mov
adc
pusha
xchg
out
xchg
xchg
push
or
fists
mov
jne
xor
aaa
popa
mov
jnp
xor
in
lcall
outsb
cltd
and
inc
jl
aaa
cli
sbb
arpl
pop
push
je
add
cmpsl
in
negb
fldl
xor
es
dec
lcall
cmc
rcrl
sub
pop
std
xor
das
or
or
mov
out
add
mov
mov
push
xor
test
cmp
aaa
mov
add
xor
aaa
loop
andl
das
inc
jne
mov
cli
pop
xor
xchg
data16
xor
imul
mov
inc
sub
aaa
aaa
adc
mov
inc
and
idivl
lahf
xor
nop
fadds
adc
testb
lahf
jae
and
int3
addr16
sub
and
push
out
sahf
out
arpl
les
sbb
add
rclb
push
mov
mov
xor
popf
push
pop
cld
arpl
xor
mov
pop
daa
adc
ja
inc
rol
outsl
xor
mov
mov
push
cmp
sahf
out
push
js
pushf
add
jb
daa
fisttpll
push
mov
loopne
pop
mov
out
push
into
inc
inc
add
fiadds
fildl
clc
es
inc
pop
dec
es
out
pop
xor
cld
xor
cmp
pop
call
push
inc
add
popa
das
sbb
or
in
scas
das
or
adc
add
xchg
lea
sbb
in
js
shll
idivb
jo
push
xchg
mov
mov
jbe
push
push
repz
dec
inc
pop
inc
pop
inc
dec
in
fwait
mov
mov
sahf
xchg
popa
testl
lret
out
push
fistl
outsl
je
push
push
pop
sub
or
xlat
sub
fldl
jp
pop
jnp
int
mov
outsl
mov
or
jo
fstpl
mov
cmp
sbb
into
inc
push
push
jno
pop
xor
cmc
adc
add
std
push
xchg
add
frstor
cmp
inc
push
test
cmovno
into
adc
dec
push
and
fldcw
mov
pusha
mov
fmul
loopne
loop
and
incb
ja
int
cmp
sbb
or
lahf
out
nop
mov
insb
push
fisttpl
pushf
daa
or
pushl
icebp
out
sbb
test
lods
adc
or
mov
sbb
test
sbb
jg
bound
mov
adc
push
iret
lds
add
add
or
loop
loopne
sbb
push
inc
add
cs
das
jbe
pop
test
lcall
mov
popf
jecxz
mov
shrl
pop
nop
push
ljmp
insl
sbb
inc
sub
aas
xchg
nop
stos
gs
das
add
add
mov
cs
or
add
push
in
mov
cs
or
or
in
mov
cs
or
in
adc
add
cs
or
adc
push
in
mov
cs
or
sbb
mov
das
add
pop
and
add
pop
enter
add
push
mov
pop
fbstp
pop
pop
pop
add
iret
cltd
fsubr
jp
das
push
add
add
int3
ret
loopne
pop
dec
sahf
sub
add
cs
xor
sbbb
jns
add
je
cmpsl
fsubr
mov
dec
jne
xchg
pusha
daa
mov
mov
xchg
mov
lahf
outsb
and
add
or
clc
das
xor
insl
dec
subl
cmp
enter
sbb
and
push
jb
cwtl
xchg
js
loope
shlb
shrb
clc
aas
dec
add
jge
and
cmpsl
aas
fsubr
mov
cmp
dec
daa
pusha
lahf
or
in
mov
js
pop
mov
sub
xchg
daa
pop
mov
xchg
js
cmp
js
or
xchg
enter
fldl
nop
xchg
lds
enter
and
fsub
jg
jns
mov
adc
jns
sub
sub
add
jns
mov
mov
lahf
xchg
pusha
loop
bound
or
inc
outsb
fstl
jbe
repnz
jp
sub
add
shl
loop
enter
andb
sbbb
test
cwtl
xchg
mov
mov
ljmp
loopne
jae
call
cmp
push
adc
sub
adc
push
fwait
inc
inc
das
xchg
xchg
pushf
and
jecxz
js
lock
sub
test
dec
jecxz
add
call
and
jl
adc
sbb
mov
sub
pusha
daa
mov
pop
mov
cs
pop
mov
mov
or
jge
jns
int3
scas
sarb
jge
jbe
jb
jge
push
xchg
or
fstl
mov
jle
xchg
enter
daa
sub
iret
cmp
frstor
push
lahf
xchg
inc
in
mov
out
sub
push
add
jnp
repnz
add
dec
mov
out
or
xor
outsb
cmpsl
sub
cwtl
iret
push
jg
push
fwait
inc
push
push
enter
mov
and
jns
pop
lock
xchg
daa
in
inc
inc
fiadds
sarl
add
fldl
scas
nop
mov
test
xchg
lahf
pusha
loopne
jbe
cltd
clc
xchg
sbbl
addl
ret
cmc
shl
cwtl
outsb
addb
mov
xchg
enter
or
scas
lock
adcb
test
pusha
add
pop
mov
js
adc
pop
outsb
mov
in
cmpb
mov
lahf
xor
lock
aad
cmpsl
iret
or
in
sbb
jo
inc
aas
jne
lods
pop
enter
push
loopne
out
lds
sub
daa
out
test
out
adcb
xchg
rolb
sbb
daa
dec
sbb
incl
sub
mov
or
and
incl
xchg
daa
lock
sbb
mov
xchg
test
aas
bound
or
pop
lahf
mov
push
sub
mov
in
ror
mov
xchg
mov
xchg
mov
scas
xchg
js
call
incl
pop
xchg
daa
and
call
xchg
frstor
incl
lahf
xchg
call
add
insb
sbbb
xchg
lahf
stos
cmp
enter
jbe
xor
decl
in
and
iret
clc
mov
dec
sbb
pop
lock
cmp
inc
xor
aas
add
mov
jmp
cmpsb
or
in
sbb
jo
mov
mov
test
enter
lock
dec
mov
jne
pop
or
in
xor
mov
mov
call
sbb
add
inc
and
sbb
in
xchg
in
mov
fcoms
cmpb
test
xchg
lahf
js
and
add
fldt
and
ror
fcoms
add
mov
pop
mov
jo
lock
outsb
and
cwtl
mov
mov
daa
adc
dec
xor
out
cs
adc
mov
sub
xchg
fadds
fisttpl
push
lods
pop
enter
mov
daa
adc
and
jmp
mov
fcom
lahf
xchg
daa
loopne
add
inc
out
or
cmpsb
sbb
mov
mov
and
xchg
rcrb
adc
loopne
vandps
outsb
nop
lea
add
mov
in
out
adcl
orl
xchg
inc
daa
pusha
in
scas
shll
orb
outsb
push
fadds
iret
xchg
nop
mov
call
rolb
popl
adc
in
iret
and
or
and
iret
mov
mov
push
lahf
fs
pop
mov
in
sub
xchg
cmp
ret
pop
or
xchg
daa
mov
out
add
inc
nop
outsl
ret
mov
mov
iret
xchg
sub
add
nop
rcrb
shlb
xor
dec
nop
adcb
iret
adc
and
cmp
sub
insb
addb
pusha
addr16
sub
andb
lahf
or
sbbb
test
mov
xchg
adc
push
fsubs
ja
sbb
xor
bound
sbb
sbb
xchg
lahf
js
and
cmp
iret
add
iret
mov
outsb
mov
adcb
loopne
mov
daa
mov
add
push
test
call
test
pop
out
xor
mov
daa
enter
xchg
lods
pop
in
or
push
jb
jecxz
lock
enter
insl
frstor
ja
daa
sub
or
mov
xor
jnp
dec
dec
xchg
dec
jae
add
and
pop
add
fucompp
into
mov
lock
pusha
dec
dec
pop
aaa
add
jmp
xor
sbbb
das
lock
push
mov
mov
nop
push
enter
cwtl
jg
pusha
mov
scas
nop
imul
nop
dec
scas
nop
mov
fcomps
or
add
in
xor
inc
dec
cmp
inc
and
jb
mov
enter
mov
clc
jmp
mov
popa
ja
jo
push
pop
add
nop
cwtl
decl
mov
dec
pop
in
mov
dec
repnz
test
xor
sbb
jb
add
cwtl
cmp
aad
xor
lds
pop
cltd
inc
push
shrl
jo
sub
xchg
dec
mov
inc
scas
pop
pop
fcom
cmpsb
fsubrs
cmp
iret
or
dec
ja
clc
add
lds
dec
xchg
dec
fwait
adc
adc
mov
pusha
push
iret
add
das
mov
loopne
cmp
bound
xchg
push
jb
adc
sub
cmpsl
inc
lcall
adc
jo
loopne
mov
jge
dec
add
into
rep
dec
push
add
xchg
jae
cmp
mov
add
inc
mov
fdivrl
popa
jg
outsb
daa
push
insb
and
push
in
in
jns
mov
jb
mov
mov
pop
mov
dec
fistps
adc
mov
movaps
imul
or
dec
or
fdivrl
jbe
leave
repz
jle
mov
cmpsl
dec
mov
pop
mov
enter
xorps
clc
scas
loopne
int3
pop
and
mov
or
popf
into
adc
xor
push
repnz
jmp
inc
push
add
pop
mov
in
jbe
das
outsl
dec
jp
test
mov
iret
mov
in
rol
nop
out
loopne
call
faddl
or
jg
rcl
add
sbb
mov
lods
nop
sahf
dec
pop
sub
cmp
out
in
subb
xchg
push
add
test
rcrb
call
mov
add
inc
push
nop
sub
dec
adc
mov
leave
xor
jb
jo
or
adc
or
sub
or
fcoml
pop
dec
adc
daa
mov
mov
jbe
lds
push
pop
pop
daa
push
enter
mov
mov
mov
dec
outsb
aaa
inc
nopl
adc
mov
sbb
rcr
mov
mov
dec
fmuls
mov
mov
cmovo
fistl
pop
push
push
mov
mov
mov
ror
jns
frstor
dec
icebp
in
lock
push
mov
jo
push
out
push
lahf
push
add
ds
dec
pop
pop
out
sahf
out
push
out
sahf
test
xchg
or
or
scas
push
mov
sahf
out
fcoms
out
iret
sarl
adc
mov
iret
repz
push
sub
cmp
cmp
repz
push
sbb
repz
sbb
sbbb
push
pushf
pop
ds
mov
and
lods
fcomps
pop
js
cmp
lock
and
adc
lcall
mov
sbb
jb
inc
mov
insb
mov
jp
mov
in
movsb
mov
into
mov
fdivrl
push
iret
repz
adc
adc
cmp
repz
ds
dec
pop
repz
repz
sbb
jbe
repz
sbb
iret
repz
scas
push
mov
repz
add
js
mov
ja
fsts
push
call
imul
fcoml
xorb
in
add
xchg
pop
xchg
sahf
arpl
inc
pop
fcomp
dec
push
pusha
mov
cmpsb
aas
sub
sub
xchg
leave
in
xorb
jo
test
mov
lods
mov
mov
fmul
push
jg
sub
dec
js
shll
xor
call
lock
push
and
jo
and
jno
inc
test
ds
push
nop
pop
js
xor
mov
push
inc
in
outsl
fisttpll
das
into
cmovnp
call
adc
imul
scas
pop
add
in
in
cmp
push
or
cli
or
jns
push
or
repz
dec
mov
ret
ret
adc
loopne
iret
cmp
mov
dec
test
fcomp
xor
test
sahf
add
add
add
outsl
rorb
jmp
and
jmp
decb
or
adc
pop
cmpsl
jecxz
xchg
ret
daa
ret
das
ret
mov
pop
and
decl
cmp
sub
scas
js
add
cs
pop
movsb
lahf
or
leave
adc
cmp
leave
shl
push
add
std
dec
iret
repz
les
or
enter
or
xor
add
nop
stos
push
les
push
pop
iret
mov
iret
cmp
push
add
scas
mov
adc
fcmovb
mov
lock
add
iret
int
push
insb
clc
outsl
cmp
scas
lds
loop
outsl
sub
xor
fildl
lds
pop
jb
mov
push
adc
mov
mov
rcrb
or
lds
cmp
ljmp
xor
lods
out
push
sahf
out
jmp
push
divps
imul
dec
jg
xadd
in
adc
rclb
lahf
mov
push
ljmp
iret
insb
pop
or
mov
out
push
jne
iret
cmpsl
push
add
jns
out
fisttps
pop
push
arpl
outsb
or
in
imull
mov
iret
mov
xor
adc
cmp
pop
je
outsl
je
mov
or
imul
push
aas
lods
scas
fdivs
jg
lahf
shlb
daa
mov
lahf
jecxz
cld
jnp
push
test
decl
js
dec
enter
xchg
and
push
enter
enter
cltd
bound
btc
or
dec
jo
loopne
add
xchg
sbb
roll
dec
or
push
pop
and
iret
mov
inc
dec
add
pusha
sub
pop
jb
push
mov
or
js
nop
mov
loope
xor
test
mov
fisttpl
out
fdivs
fs
lock
xor
lret
lret
adc
insl
adc
sbb
das
cmp
dec
add
fstpl
into
in
push
scas
pop
fisttps
push
jg
jg
pop
and
mov
dec
clc
sar
mov
sub
and
cwtl
andl
xchg
inc
repnz
lret
mov
cwtl
mov
imul
dec
loopne
xchg
xchg
mov
sub
mov
pop
mov
test
inc
jmp
test
lret
mov
mov
mov
icebp
push
aas
xchg
jg
aas
lock
enter
sbb
scas
inc
mov
pop
mov
leave
stos
fs
mov
xchg
mov
int3
nop
popa
pop
sbb
push
outsl
fmuls
dec
dec
scas
xor
inc
int3
xchg
cmp
cmpsb
pushl
jbe
dec
cmpb
jae
pop
mov
push
enter
mov
jb
jg
lock
cmp
sub
clc
adc
and
xor
or
sub
mov
pop
cwtl
mov
mov
inc
dec
enter
int
mov
movsl
jmp
ror
test
mov
test
mov
test
mov
in
pand
int
int
in
in
int
into
adc
sbb
in
into
xor
ds
dec
into
in
in
push
into
pop
into
push
jne
in
in
or
into
xchg
into
mov
in
into
mov
ret
into
imul
into
jmp
fistpll
in
test
iret
or
sbb
out
and
sub
sahf
cmp
inc
and
jns
out
pop
and
and
out
jp
test
sahf
out
sahf
nop
sub
sahf
out
mov
mov
sahf
out
shrb
fnsave
xor
adc
dec
sbb
test
in
mov
enter
and
xor
aas
rorb
rcrb
imul
and
rclb
cmp
scas
sarb
rclb
shl
rolb
sarl
repz
adc
adc
cmp
dec
pop
push
jno
inc
mov
dec
rorl
add
and
xchg
rcrl
cmovl
lahf
shlb
inc
scas
dec
and
dec
and
push
test
rcl
lds
mov
ljmp
add
rorb
fimull
dec
cmp
pusha
nop
in
sub
mov
sub
fmuls
xchg
lock
scas
nop
dec
sub
jns
scas
nop
push
push
sbb
or
movsb
aam
sbb
jb
shrl
pushf
rcll
shll
jb
enter
rcr
shr
sarl
stc
add
hlt
sar
rorl
aam
dec
sahf
pop
push
adc
sub
outsl
ss
addr16
scas
dec
aam
push
aam
bound
add
repz
push
insl
push
inc
ds
roll
add
dec
sbb
inc
mov
xchg
psubusb
loopne
decl
add
pop
lock
and
lds
stc
xchg
ljmp
aad
pop
jno
jae
inc
dec
pop
push
push
in
lcall
or
daa
js
or
nop
cwtl
aaa
setge
leave
stos
mov
ror
pop
jo
das
xlat
psrad
cmp
jl
mov
sbb
movsl
inc
js
jg
jmp
mov
mov
xchg
xchg
sub
enter
sub
xchg
sub
jmp
dec
and
fcomps
mov
out
loopne
rcl
adc
lahf
xlat
xlat
pop
mov
xor
xor
inc
enter
mov
mov
xlat
pop
xchg
xlat
inc
movsb
rcrl
inc
fistl
dec
loopne
mov
xchg
mov
out
rol
jns
cltd
inc
fdivrs
fadds
pop
dec
and
or
dec
xor
pop
ret
vmwrite
adc
add
ret
add
out
inc
mov
fisttps
pop
out
jns
js
std
pop
loopne
into
cmpsb
ljmp
and
dec
add
fs
push
repz
pop
je
cmp
out
nop
adc
fwait
in
push
mov
scas
test
scas
and
out
fstps
mov
sub
shll
shlb
and
pop
push
pop
push
fisttps
in
adc
sub
inc
clc
test
pop
imul
fbstp
pusha
push
stos
dec
mov
aas
leave
xchg
sub
pop
iret
clc
adc
sub
dec
subb
repz
dec
enter
pusha
push
pop
push
scas
fbld
jo
test
pop
rorb
inc
loopne
sub
pop
enter
pop
out
jnp
mov
push
mov
inc
xchg
mov
xchg
dec
loopne
inc
es
add
cwtl
mov
rolb
mov
enter
fisubrl
and
mov
scas
test
rcrb
call
pop
enter
sub
pop
lock
xor
and
leave
jg
pop
stos
lock
jae
ljmp
fimull
nop
cwtl
pop
das
pop
sub
ficoml
adc
lock
test
dec
nop/reserved
xlat
push
or
dec
outsl
dec
pop
and
adc
fdivr
dec
pop
cmp
into
orb
nop
mov
test
into
jae
rorb
xor
popf
sbb
jg
clc
add
cmp
dec
fisttpll
or
mov
push
str
leave
dec
sub
sbb
jp
dec
in
cwtl
lret
pop
mov
inc
dec
fs
inc
inc
int3
pop
dec
and
mov
in
iret
xor
loop
mov
xchg
inc
leave
add
sub
mov
pop
fnstenv
add
inc
sbb
add
das
test
das
das
das
jg
mov
rcr
fstp
das
das
das
jmp
stc
fldl
ficoms
das
and
xor
aas
fimuls
das
das
das
das
pop
fisubrs
ja
test
iret
repz
xchg
fimuls
adc
cmp
adc
and
lock
push
out
ror
stos
mov
cmp
push
insb
into
pop
and
scas
pop
xchg
xchg
fildll
adc
pusha
jo
outsb
daa
push
enter
push
pop
pop
and
outsl
rol
lret
push
mov
scas
loopne
lds
iret
clc
insl
mov
loopne
push
out
leave
adc
sbb
push
cmpsl
arpl
outsb
das
jns
mov
nop
pop
cwtl
lock
mov
xor
scas
pop
mov
lock
js
arpl
mov
loope
lahf
inc
cmpsb
nop
int
test
loope
jns
mov
jg
sahf
add
imul
loope
loope
nop
iret
leave
leave
lods
mov
dec
dec
cmpsb
loopne
repz
loop
push
add
loop
mov
push
dec
shlb
push
enter
in
sub
and
mov
inc
sahf
xchg
sub
push
jo
daa
fnstsw
jecxz
push
paddd
jecxz
adc
scas
call
js
dec
shl
lock
jecxz
inc
cmpsb
inc
call
jo
dec
push
adc
pop
mov
jb
ror
mov
jb
test
sti
push
in
push
sub
ljmp
dec
lds
add
iret
sbb
pop
pop
xor
push
inc
in
dec
push
iret
leave
in
mov
iret
mov
sbbb
mov
repz
adc
add
repz
xlat
add
mov
add
dec
or
adc
mov
sbb
decl
mov
aad
jmp
fisubrs
push
sub
pop
mov
dec
test
mov
xchg
xchg
xchg
cwtl
mov
lock
iret
adc
stos
out
ret
sub
clts
cs
leave
repz
sbb
fildl
into
leave
xor
xchg
xchg
push
pop
imul
or
shrl
fisubs
outsl
sbb
adc
call
and
iret
out
mov
push
push
out
xchg
or
leave
adc
sub
pusha
pop
mov
call
sbbb
dec
andb
test
pop
enter
pop
mov
push
enter
dec
sub
xchg
xchg
call
fadds
jbe
cmp
call
add
pop
inc
fadd
insl
jb
out
call
jbe
pop
call
test
mov
mov
decl
pop
mov
pop
nop
fldcw
dec
ror
jmp
jbe
xor
js
mov
punpcklbw
insl
inc
xor
fimull
leave
mov
leave
adc
ror
jb
lret
mov
sub
xlat
leave
call
jo
xchg
xchg
ljmp
in
addr16
outsl
push
xchg
xchg
xchg
sub
push
xor
xchg
pop
imul
fcmove
adc
pop
adcb
pop
dec
scas
nop
out
fdiv
clc
xor
inc
pop
mov
mov
fcompl
jbe
fisttps
mov
fwait
punpcklbw
push
mov
mov
fdivl
fwait
call
in
inc
aad
mov
mov
call
outsl
dec
pop
push
dec
mov
lock
scas
jo
adc
daa
in
mov
inc
in
decl
mov
push
pop
clc
test
fiadds
lods
pop
test
fsubr
mov
sbb
in
sbb
mov
aaa
add
aam
test
ds
xor
pop
subl
adc
cmpsl
jne
fiadds
fdivrs
mov
js
pusha
sbb
jae
orb
pop
stos
je
in
decl
aad
scas
inc
iret
dec
in
jmp
or
dec
in
mov
mov
mov
or
enter
pop
jb
pop
cmp
pusha
inc
es
add
mov
mov
das
mov
add
and
and
call
loop
faddl
loop
ds
jmp
push
enter
rorb
dec
mov
loopne
test
push
and
add
scas
dec
add
aam
repz
jmp
adc
lret
dec
femms
cmp
scas
xchg
dec
ds
aam
cmpb
adc
inc
jle
loopne
inc
fsub
enter
scas
add
adc
or
pop
scas
cmpsb
fcoms
and
jmp
jmp
mov
dec
repnz
or
cmpsb
or
add
jmp
or
xor
dec
sbb
mov
sub
outsl
enter
cmp
mov
mov
pop
inc
mov
scas
lods
sbb
jg
cltd
addb
sbb
enter
negb
lock
xor
inc
test
cwtl
push
lods
nop
rcrb
mov
jno
call
addr16
cmpsb
cld
add
lock
and
mov
decl
jb
in
dec
call
leave
adc
jl
push
int3
js
call
push
nop
cwtl
pop
mov
or
push
enter
call
pop
mov
shll
call
in
in
sbb
mov
scas
jmp
lds
icebp
lcall
dec
mov
push
cwtl
and
or
rolb
pop
cmpb
shrb
cmp
ljmp
dec
in
mov
dec
repnz
test
and
dec
mov
jp
repnz
jmp
push
nop
psllw
mov
test
dec
mov
xlat
and
jb
inc
out
insb
jne
mov
jo
ljmp
das
mov
test
in
and
pop
and
xchg
pop
and
dec
pop
and
fcoms
dec
scas
and
in
xor
push
enter
jb
push
enter
outsl
cwtl
out
mov
inc
pop
in
js
filds
jo
pushl
push
insb
dec
test
scas
mov
inc
jb
cmp
mov
out
out
mov
test
loopne
mov
fsubl
push
add
decl
lock
cmp
ret
sbb
pop
adc
adcl
out
rcrl
aad
push
lcall
xor
jmp
fnstsw
dec
push
imul
hlt
mov
leave
adc
and
jo
test
lock
jb
sbb
imul
mov
enter
mov
pop
clc
or
rclb
and
xlat
pop
inc
inc
or
inc
aas
push
icebp
addps
pop
fwait
adc
cld
add
out
cmc
pop
enter
adc
pop
icebp
sarb
inc
call
inc
push
and
push
xor
test
movsb
dec
repnz
mov
pop
jo
outsl
ja
inc
repnz
out
jo
mov
add
or
leave
adc
dec
fucomi
xchg
test
mov
xchg
outsl
adc
rorb
repz
sbb
xor
enter
movsb
cmp
cmp
xadd
lret
cmc
outsl
mov
repz
cmc
fdivs
clc
jg
push
add
cmp
aad
dec
hlt
scas
dec
hlt
and
loope
out
jb
mov
dec
hlt
ds
jb
adc
shl
call
clc
adc
dec
and
jnp
rolb
inc
cmc
push
cmc
pop
jb
adc
cwtl
loopne
test
add
shrl
dec
jno
insb
divb
adc
daa
sbb
mov
or
xchg
testb
mulb
daa
push
add
cwtl
mov
maxps
in
int3
clc
xor
div
test
or
fistpll
dec
sbb
and
cmpsl
in
or
test
dec
jb
adc
jo
adcb
cmpsb
sbb
dec
dec
clc
xchg
pushf
or
pop
clc
jo
adc
or
jnp
inc
iret
mov
lods
cwtl
scas
setbe
xorb
out
paddsb
xor
xchg
pop
sub
cmp
popa
cmp
scas
push
ds
scas
test
sbb
fcomps
in
sbb
pop
mov
clc
xchg
mov
cli
enter
jno
adc
cli
inc
repnz
push
and
in
mov
mov
jb
scas
in
ljmp
adc
clc
dec
xchg
sub
xchg
sbb
xor
dec
sub
andb
dec
pop
add
nop
imul
mov
xchg
cld
pushf
nop
cmp
in
movsb
pop
or
call
outsb
pop
mov
mov
leave
sbb
mov
mov
pop
xlat
in
pop
add
pop
enter
das
mov
std
sbb
mov
pop
scas
data16
adc
jnp
dec
xor
cmovns
push
push
mov
add
sub
sbb
adc
mov
leave
ds
imull
jp
lods
daa
mov
packuswb
push
sbb
stc
lcall
ror
xor
fisttps
mov
jmp
pop
hlt
decl
fs
or
cli
pushl
xor
and
incl
xor
inc
enter
scas
mov
leave
enter
aaa
adc
pop
dec
add
fwait
ds
cs
mov
jle
incb
mov
pop
rolb
mov
pop
cmp
pop
and
mov
sub
cli
pop
dec
ja
decl
push
xchg
cli
outsl
daa
rcr
mov
pushf
mov
jb
lods
loopne
jb
pop
inc
popf
iret
adc
in
sarl
adc
dec
pop
sbb
dec
clc
or
jb
dec
scas
fs
int3
cltd
xchg
push
repnz
push
movsb
or
xchg
dec
leave
sub
sbb
aam
leave
pop
mov
dec
data16
pop
scas
pop
scas
or
imul
aaa
sub
add
dec
push
add
push
pusha
aaa
or
dec
test
iret
or
inc
inc
xor
test
push
pop
xor
mov
lahf
mov
sbb
fs
inc
inc
int
push
in
loop
scas
data16
push
js
inc
jp
jl
icebp
xchg
xor
int
mov
and
insl
repz
mov
loopne
ret
push
jo
inc
push
fwait
lods
push
and
inc
cld
jo
jbe
aad
mov
push
adc
mov
pusha
int
or
inc
call
ds
push
and
or
push
push
jne
ds
mov
enter
out
cmpsb
fiadds
sbb
pop
cwtl
jg
and
jge
int3
mov
jmp
xchg
fistl
lahf
out
int
xchg
inc
mov
gs
test
sub
insl
cmp
xor
add
push
and
sbb
pop
mov
jmp
inc
add
sub
pop
repz
pop
add
cmp
jl
add
ljmp
sti
mov
dec
cmpsl
and
pop
repz
pop
jo
add
mov
xchg
add
in
add
pushf
adc
insb
or
xchg
mov
ljmp
or
ss
xchg
or
push
sbb
insb
in
mov
mov
jns
sub
imul
insb
daa
pop
lds
add
movsl
pop
leave
adc
stos
pop
xor
xorb
mov
imulb
daa
cmc
pop
shrb
dec
inc
sbb
jae
in
push
mov
dec
ja
mov
add
daa
xor
and
mov
or
cmp
push
jb
cld
addr16
add
pop
add
dec
jmp
inc
cmp
add
or
cmp
jg
or
imul
daa
xchg
adc
xor
inc
jne
cmpsl
icebp
xor
adcb
mov
mov
sbb
dec
jb
add
loope
sub
adc
decl
sub
test
or
mov
scas
mov
sub
les
mov
mov
or
rcll
and
dec
pop
add
mov
add
inc
das
push
or
fs
jp
outsb
push
add
add
add
inc
add
addb
clc
mov
inc
out
mov
pop
mov
cmp
sub
jg
cmp
es
orb
daa
out
lods
jbe
xlat
push
in
daa
pushf
or
dec
mov
mov
add
mov
adc
mov
and
mov
inc
add
loopne
jg
sub
push
out
mov
out
es
push
sbb
ja
mov
jo
pusha
dec
out
inc
or
add
jg
mov
inc
daa
testl
or
andb
add
jne
testb
sub
mov
mov
cwtl
mov
adc
inc
enter
jmp
incl
sbb
gs
daa
fisubs
sub
mov
add
sahf
add
add
add
dec
sub
or
add
xor
pusha
push
xor
jg
inc
or
add
pop
jne
add
adc
xlat
out
inc
mov
adc
add
mov
push
into
movb
insb
jg
imul
jmp
pmaddwd
fs
dec
daa
test
inc
daa
inc
xchg
jo
push
adc
xlat
mov
ja
cmp
popa
add
adcb
adc
pop
mov
cmpsl
out
mov
add
filds
add
add
scas
loop
add
roll
aas
or
mov
adc
inc
nop
sub
bound
or
add
dec
insb
xchg
add
stos
sysret
mov
das
jns
inc
adc
inc
add
sub
inc
subb
test
mov
add
cli
notb
shlb
pop
pop
adc
add
in
sbb
push
xchg
lcall
push
shrb
xor
dec
stc
andl
lds
dec
push
adc
xchg
or
adcb
test
pushf
add
repz
test
inc
jo
lods
mov
in
sub
xchg
or
hlt
xchg
pop
test
aas
daa
add
or
xchg
pop
add
push
adc
dec
clc
mov
adc
mov
out
cmp
outsl
mov
and
or
addb
fistl
inc
add
adc
les
add
mov
add
mov
lods
push
repz
repz
movsb
or
or
iret
repz
nop
or
iret
xrelease
test
or
cmp
adc
adc
repz
jo
insb
push
repz
repz
iret
repz
sbb
sbb
repz
push
sbb
iret
repz
pop
inc
and
repz
and
cmp
xor
iret
repz
sub
and
repz
repz
sbb
adc
repz
sub
sub
or
repz
add
add
jns
cmpsl
stc
cld
mov
out
sahf
out
lock
xor
xor
xor
out
fdivl
fcom
or
adc
lods
push
inc
leave
add
or
test
ror
cmp
outsb
push
cwtl
nop
mov
js
push
iret
repz
dec
inc
cmp
iret
repz
sub
sbb
or
sahf
out
ds
shl
loopne
jns
out
aam
int3
enter
sahf
out
mov
out
sahf
lods
test
cwtl
nop
mov
out
cmpb
pusha
out
sahf
out
dec
cmp
and
repz
sbb
hlt
mov
repz
les
iret
repz
dec
out
cmp
cmp
sbb
cld
mov
in
call
push
lods
popf
add
ja
push
jns
testl
mov
aam
sti
mov
jo
sahf
incl
jns
adc
out
sahf
out
cmp
sub
int
jns
sbb
or
clc
int3
clc
cmp
repz
not
idivb
movsb
hlt
mov
iret
repz
jl
insb
icebp
pop
lock
fdivl
push
out
fisttps
out
ror
out
sahf
in
mov
pushf
jmp
jnp
out
ljmp
idivl
out
push
in
repz
outsl
push
in
jecxz
loop
cmp
jae
push
loope
loopne
cmpsl
stc
cmp
fisttps
in
leave
fnstsw
jns
aam
lods
fstpt
fidivrl
out
jns
push
fsts
push
xlat
out
sahf
out
add
mov
enter
xchg
aam
rol
shlb
shll
repz
je
pop
int
int3
ds
repz
lret
or
fadd
jns
out
leave
ror
mov
out
nop
lds
out
fs
and
ret
jns
test
mov
sub
mov
out
in
mov
jns
out
mov
mov
jns
mov
mov
push
mov
adc
stos
cmp
lds
mov
mov
cmp
pause
mov
fs
lds
lods
inc
cmp
out
sahf
out
push
push
dec
inc
cmp
add
sahf
out
and
out
mov
pop
paddsw
lret
addb
or
call
xlat
fidivs
sbb
fmuls
add
mov
stc
imul
push
rolb
pop
and
negl
fisttps
test
adc
divps
mov
nop
mov
movups
rorl
js
jo
pop
movsl
jne
loopne
push
pusha
pop
cmpsl
stc
lcall
fmuls
testl
imul
jg
outsb
sub
dec
mov
sbb
push
adc
imul
push
lods
pop
adc
sub
fs
je
adcb
jo
ret
mov
and
mov
and
fcoms
mov
push
mov
nop
pop
jmp
cld
dec
mov
sub
lods
or
sub
sahf
test
add
mov
and
imul
aas
xlat
sub
aas
inc
aas
xor
push
push
int
pusha
xor
and
add
mov
push
add
and
data16
sub
xchg
add
cmp
dec
clc
out
mov
ss
dec
dec
dec
inc
sub
mov
push
push
and
push
and
dec
popa
push
outsb
cmp
arpl
push
push
and
mov
js
push
sarb
js
bound
clc
insb
push
jns
and
push
dec
inc
inc
push
pop
and
pop
inc
jnp
push
gs
jb
sub
add
sbb
dec
jo
popa
es
push
inc
arpl
sub
popa
sub
fs
insl
fidivs
dec
cmp
sub
xor
out
out
push
inc
push
push
dec
push
leave
push
dec
push
push
ror
mov
icebp
divl
test
sub
enter
iret
in
shll
ss
add
clc
ret
inc
mov
or
lock
pusha
add
lret
add
sbb
sbb
ret
push
aam
nop
fisubs
out
mov
xchg
je
out
sbb
aam
pop
mov
push
fs
aaa
and
rolb
es
fsub
push
fsubs
lahf
cmp
push
mov
fisttpl
mov
js
push
das
cld
fisubl
xchg
and
movb
addr16
outsb
adc
setl
xchg
push
pop
enter
mov
mov
js
push
pusha
pop
in
push
dec
pop
repnz
pushf
jmp
cmp
repz
pushf
cmp
repz
jns
xor
call
int3
push
rolb
jns
ja
mov
test
jl
lahf
out
cmp
clc
xlat
test
outsb
push
lods
test
jl
je
adcl
fisttps
push
rol
xlat
not
fiaddl
add
xor
es
rclb
decb
ljmp
cli
push
inc
popa
cmp
and
pop
lods
add
mov
lods
int3
cmc
jae
pop
scas
or
das
sub
fwait
add
fcmovbe
mov
add
mov
pop
fwait
lea
insl
cmp
insb
sub
nop
loopne
add
xor
fcmovne
decb
mov
mov
mov
out
out
popa
dec
push
dec
jne
mov
xor
hlt
rcl
cs
add
dec
stos
aad
mov
mov
mov
xchg
shr
fwait
stos
xlat
aam
inc
neg
mov
mov
push
fs
aas
sbb
xchg
mov
pop
mov
xchg
sub
mov
mov
out
out
mov
enter
andb
data16
or
cs
in
stos
fidivrs
out
shlb
mov
idivl
or
shlb
add
pop
pop
sbb
mov
loop
lods
push
or
or
pop
nop
test
or
add
sub
aam
jbe
mov
stos
pop
adc
pop
sbb
pop
inc
add
mov
add
int
ja
fs
mov
aas
or
mov
mov
pop
test
andl
psllq
sub
dec
push
push
rol
mov
daa
adcl
cmpsl
adc
scas
push
loopne
das
dec
shlb
out
or
mov
outsb
mov
and
ret
mov
pop
mov
mov
mov
mov
adc
and
dec
or
or
push
ds
adc
pop
cmp
out
dec
push
sti
shll
push
int
push
xchg
shr
adc
xorb
lds
mov
pushl
or
mov
sbb
xchg
adc
dec
out
outsl
adcb
dec
jnp
aas
sbb
mov
stos
in
fcmove
xchg
adc
xchg
lcall
sub
orl
mov
hlt
or
add
xor
xor
inc
mov
xchg
orb
mov
cwtl
out
int
notl
inc
dec
daa
out
fcmovbe
stos
xlat
and
add
stos
ds
ret
fld
add
out
mov
mov
add
push
scas
and
out
xchg
aas
mov
fcoml
testl
push
loop
add
in
push
ljmp
gs
push
mov
vpsubq
cltd
sub
dec
mov
into
mov
mov
aaa
push
dec
fildll
mov
sub
xchg
add
fsts
pop
inc
inc
into
lock
bound
popa
cltd
mov
repz
xor
pop
lret
rclb
or
xchg
repz
popa
ret
fisttpl
lret
outsl
pop
into
movsl
and
das
lahf
jae
dec
adc
sub
cmp
loop
mov
adcl
sbb
dec
rcrb
dec
jecxz
mov
xlat
xchg
cs
xor
faddl
cmpsl
mov
pop
cs
pop
pop
mov
loop
xchg
ds
push
dec
cmp
roll
jae
mov
into
sbb
iret
ret
mov
push
scas
shlb
and
mov
sbb
adc
scas
pushl
pop
mov
movl
mov
addr16
outsl
cwtl
sbb
push
dec
dec
push
or
push
dec
je
mov
add
add
scas
add
add
jo
loop
or
fisttps
mov
pusha
sub
add
mov
das
dec
add
int
add
aas
ss
popa
loop
aas
out
add
bound
mov
add
sti
pushl
in
cwtl
add
push
lahf
rorb
mov
das
das
xchg
mov
inc
mov
mov
outsl
gs
das
push
andl
xor
add
insb
xlat
aas
pusha
mov
xor
or
add
sub
xor
das
js
addb
data16
incl
das
fimull
stos
mov
data16
mov
outsl
mov
jg
xchg
test
push
sarl
dec
in
cmpsl
das
daa
cltd
add
fimull
mov
test
inc
mov
mov
add
cmp
mov
bound
add
data16
push
aas
mov
dec
mov
insb
dec
dec
adc
xor
sbb
adc
or
add
pusha
mov
aas
mov
aas
inc
jo
pop
push
add
xor
push
add
incl
or
xchg
add
jg
adcb
sub
push
int3
in
lahf
and
shlb
iret
ficoms
add
mov
aaa
sub
addb
scas
dec
int
in
dec
outsl
fmull
aas
in
pop
dec
add
pop
cmp
xor
xlat
and
push
mov
or
aad
aas
add
pop
or
jge
mov
dec
add
sub
dec
and
jg
outsb
or
push
jo
mov
ret
rclb
out
dec
cs
lock
push
add
outsb
ret
push
push
or
lods
sbb
mov
pop
aas
push
xor
inc
cltd
or
jo
jb
inc
xor
sub
push
mov
aam
add
sbbl
rcrl
or
test
sbb
mov
scas
adc
and
jbe
inc
pop
orl
add
push
lds
cmpsb
outsb
dec
jb
mov
outsl
out
inc
dec
shrl
sbb
out
mov
mov
outsl
push
sub
outsl
das
rorb
push
jno
nop
loopne
mov
and
mov
add
inc
xorb
pop
jmp
das
std
andb
pop
push
add
pop
inc
pop
cmp
or
aas
das
lds
push
sub
das
jnp
imul
mov
lahf
repz
inc
dec
lods
addl
aas
movsb
cmpsb
aad
test
addr16
lahf
aas
add
pop
sub
insl
pop
cmp
lahf
or
pop
push
push
xchg
sbb
add
loopne
fists
das
ret
adc
add
pop
pop
dec
mov
out
shrl
insl
bound
jae
or
mov
lahf
mulb
inc
xor
xchg
add
popl
adc
scas
mov
aaa
sarb
dec
dec
das
test
pop
das
ret
and
mov
and
cltd
inc
ud2
or
aas
adc
out
and
loopne
cmp
mov
dec
sbb
gs
fwait
dec
add
add
add
insb
add
dec
ja
jnp
rcrb
xor
lds
imul
out
push
int
sbbb
add
pop
xorb
hlt
push
adc
pop
rorl
dec
aas
pop
cmp
negb
shr
aam
jg
inc
pop
add
es
fsubs
sahf
out
out
aam
ror
enter
sahf
out
mov
iret
repz
nop
mov
js
jo
cmp
rep
push
repz
pop
push
push
dec
inc
cmp
sub
push
sbb
cmp
repz
cld
data16
push
cmp
sarb
in
adc
inc
sbb
in
adcb
inc
push
xor
insb
inc
test
popf
out
fidivrs
push
or
imul
shrb
lods
sahf
out
sahf
adc
cmp
repz
call
repz
xrelease
jns
mov
cmp
xor
jle
xlat
dec
push
cmp
mov
std
fsubs
stos
dec
xor
push
subl
nop
std
sahf
out
cmp
insb
outsb
sbb
jns
out
sbb
adc
jns
out
and
xor
out
sahf
or
sbb
sahf
out
add
out
sahf
out
and
or
iret
repz
or
imul
repz
loopne
fcomps
repz
repz
enter
repz
and
insl
add
std
mov
inc
outsb
fiaddl
fcomip
cmp
repz
lock
out
sahf
out
inc
push
and
ds
out
sahf
pop
push
mov
jns
shl
push
inc
outsb
push
sahf
out
sahf
xor
jno
xchg
jns
out
stos
ret
sti
repz
repz
iretw
repz
jp
lahf
mov
sti
cmp
or
ds
iret
repz
pop
bound
out
cmp
out
inc
push
es
adc
jns
push
and
cmpsb
fadds
push
aas
push
mov
cmpsl
sub
sti
pop
pop
add
mov
mov
movsl
aas
push
aam
or
std
sbb
add
sub
popf
add
adc
pop
and
subl
dec
std
pop
pop
pop
fwait
add
pop
add
or
dec
add
adc
bound
lcall
jge
test
sbb
jge
adcl
xchg
adc
or
xchg
add
push
and
test
pop
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
and
mov
nop
sub
mov
mov
orb
add
inc
int3
nop
add
mov
and
or
inc
sub
mov
add
sub
inc
bound
dec
popa
add
sub
or
add
push
add
mov
inc
jnp
push
add
rorb
nop
fsubrs
nop
leave
outsl
lret
sub
sub
dec
insb
pop
mov
add
pop
and
and
lcall
lds
push
inc
sub
nop
push
xchg
and
std
add
and
lds
mov
jo
outsb
xor
xor
mov
test
inc
nop
cmp
xchg
sub
xor
dec
outsb
xor
add
lods
lods
and
push
addl
fs
add
add
add
fs
adc
add
add
cwtl
or
shrb
add
add
or
or
ss
ja
mov
mov
mov
ret
mov
xor
insl
je
adc
addr16
arpl
adc
jae
jbe
add
xor
sbb
jbe
push
sub
mov
arpl
and
orl
mov
pop
pop
add
mov
and
mov
mov
jge
or
adc
mov
aad
cmp
pop
sarl
fildl
xchg
dec
rcll
int3
add
sub
mov
mov
fistl
xor
rcll
adc
pop
cltd
cwtl
and
adc
rep
cmp
pop
push
sbb
mov
pop
daa
ss
adc
sub
rcrl
xchg
sbb
mov
ss
sub
jno
stc
pop
pusha
pop
test
fcomi
arpl
test
mov
and
adc
inc
mov
jmp
sbb
and
or
loopne
test
add
add
push
or
leave
add
pop
aaa
pop
addb
leave
and
jge
daa
jnp
and
adc
xor
adc
mov
icebp
jnp
xor
add
sub
nop
dec
dec
dec
add
adc
and
aaa
dec
loopne
mov
aad
pop
mov
xchg
inc
nop
sub
fcoms
inc
adc
mov
and
nop
mov
mov
repz
and
or
xchg
lods
imul
dec
add
mov
stos
sub
xchg
add
sbb
cmp
sub
mov
inc
and
sub
and
call
cmp
adc
sub
or
je
or
adc
add
les
mov
jns
add
push
or
xor
push
dec
int3
dec
add
add
dec
mov
bound
les
nop
dec
add
push
cltd
or
mov
add
test
aad
int
mov
adc
int
cmp
and
add
roll
std
or
push
arpl
and
mov
cmp
or
sub
or
adc
or
fwait
inc
loop
or
add
and
add
or
jns
inc
nop
sbb
and
rcrl
fs
jg
movsl
mov
dec
or
push
lahf
add
test
test
rolb
xchg
gs
cmpsl
inc
stos
vunpckhps
dec
adc
inc
loope
mov
jnp
test
ja
mov
js
aad
aas
nop
pop
inc
add
add
inc
inc
outsl
mov
dec
inc
mov
mov
pop
dec
and
mov
and
push
mov
bound
xor
sbb
push
cmpl
push
push
rorl
pop
lods
jg
and
cmp
and
and
adc
inc
aas
sbb
mov
xor
xor
and
repz
rcrl
sbb
sub
jae
xor
pmulhuw
xchg
cmp
lahf
xor
int
or
push
outsb
aad
inc
sbb
js
add
js
or
pusha
inc
inc
xchg
and
dec
sti
lds
push
hlt
or
outsb
fisubs
dec
pop
pop
or
mov
and
xor
imul
adc
popa
lods
dec
loopne
outsb
sbb
or
xlat
dec
jae
sub
xor
jo
insl
jno
adc
imul
insl
outsl
sbb
mov
add
out
push
sbb
lcall
pop
jmp
adc
pop
pop
lods
repz
or
or
xor
adc
xor
shll
adc
add
lcall
movsb
add
mov
rorl
add
push
xchg
jbe
dec
hlt
int3
movsb
addr16
pop
push
and
cmp
or
sbb
mov
mov
mov
dec
inc
sbb
xchg
cwtl
and
add
mov
adc
dec
jecxz
xchg
add
insl
add
pop
adc
or
push
pop
or
dec
and
movsb
clc
jne
inc
and
adc
xor
xchg
push
mov
sbb
adc
add
and
inc
xor
and
inc
bound
nop
xor
and
and
push
sub
daa
xchg
cmp
repz
and
xlat
and
cmp
or
fsts
xchg
pop
push
cwtl
and
dec
pop
jno
pusha
xchg
ss
mov
adc
iret
xchg
pop
rorl
or
and
push
aaa
sub
xchg
inc
xchg
les
dec
shr
pop
bound
je
call
jo
push
jecxz
cs
jo
fisubrs
add
mov
cmc
sbb
xor
fldl
xchg
mov
movsb
pop
pop
inc
add
pop
adc
cmp
sub
outsl
dec
dec
dec
push
aas
add
lret
rcll
and
dec
dec
add
pop
add
jne
and
gs
pop
mov
fldl
and
and
push
int
lds
mov
popa
push
inc
mov
les
xchg
inc
cs
sbb
pop
inc
push
imul
add
xchg
cmp
dec
and
mov
mov
outsb
push
mov
sub
sbbb
lea
inc
leave
push
and
stos
mull
jns
imul
mov
shr
popa
arpl
inc
fucom
inc
xchg
sub
push
test
add
add
sub
scas
dec
inc
inc
mov
inc
sarl
dec
xchg
push
sbb
or
mov
push
cs
dec
fs
adc
mov
aaa
add
lea
xor
bound
addr16
mov
add
xchg
mov
dec
xchg
les
cmp
cmp
adc
jnp
bound
and
inc
mov
xor
xor
adc
sub
mov
bound
cmp
jmp
add
xchg
imul
pop
mov
adc
inc
cmp
push
pop
mov
xor
mov
jecxz
dec
insb
jns
dec
sub
dec
test
add
adc
xchg
mov
xchg
cmp
sbb
mov
stos
jmp
push
aad
xchg
cmp
out
adc
insl
jno
and
out
in
dec
insb
outsb
pop
xor
fbstp
push
fstpt
and
xchg
popf
sbb
pusha
imul
int3
cmpsb
adc
imulb
das
inc
inc
jns
cmp
adc
xchg
xor
dec
and
test
add
imul
mov
add
push
and
ss
and
and
sub
dec
xor
popf
inc
popa
jne
dec
add
push
jb
addb
pop
cmp
in
bound
mov
and
add
insl
lret
andb
lea
mov
cmpsb
cmc
adc
add
adc
mov
cld
loop
add
and
pop
inc
and
nop
adc
int
push
fldt
mov
sbb
or
inc
pop
pop
or
and
fiadds
outsb
cmp
punpckhwd
push
dec
pushf
pop
sub
ljmp
jmp
inc
sub
divl
psubq
inc
add
add
add
xchg
dec
jmp
sti
push
lahf
add
sbb
sahf
jmp
add
add
push
incl
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
