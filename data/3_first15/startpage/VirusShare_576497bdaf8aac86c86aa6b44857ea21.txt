test
add
add
add
add
mov
stos
jle
jb
fiaddl
mov
daa
ds
pop
lea
je
cltd
xchg
push
js
xchg
mov
mulb
and
add
or
inc
sub
daa
jl
and
lret
es
jb
fwait
aaa
add
imul
inc
outsb
daa
add
test
js
xlat
rcrb
imul
sub
pusha
inc
inc
pusha
pop
push
push
sbb
ljmp
sbb
mov
fwait
das
dec
subl
mov
inc
add
mov
subl
rol
js
cli
jo
jge
push
ret
enter
shlb
jnp
cmp
aas
jge
xor
ss
arpl
fimull
cmp
cwtl
push
addl
je
mov
gs
mov
sub
pop
lcall
push
sub
shr
jb
push
and
ret
daa
loope
inc
insl
cmc
testb
dec
mov
cwtl
jb
out
dec
in
sbb
dec
ljmp
and
cmp
mov
mov
cmpsl
adc
fdivrl
mov
jle
insl
inc
lahf
enter
cmpsl
cmpsb
mov
ss
test
ror
cli
push
movsl
and
mov
addr16
es
add
loop
negl
push
and
mov
mov
cmp
and
sub
test
lahf
outsb
mov
mov
stos
int3
mov
pop
inc
mov
mov
inc
add
mov
out
sbb
or
adc
jl
xor
mov
cmp
push
mov
sar
ret
add
cli
push
test
adc
jnp
xor
and
aad
push
xchg
cmp
stos
push
sub
out
inc
stc
xchg
cmp
xlat
std
sub
fistpl
xor
imul
std
out
scas
ss
push
mov
mov
adc
sar
shll
rcr
pop
cltd
fsubl
add
push
imull
sub
xor
shlb
arpl
mov
xor
mov
arpl
adc
add
push
mov
outsb
sarl
pop
jo
mov
mov
cli
lods
lods
sti
push
out
pusha
xor
divl
adc
in
pop
js
addr16
inc
cmp
fildll
lret
push
dec
inc
sub
push
test
mov
insl
leave
or
dec
xor
out
mov
dec
in
xchg
mov
jo
fwait
imull
xchg
std
leave
jecxz
jb
imul
add
rorb
xchg
add
jle
lahf
or
sahf
sarb
test
xor
aaa
dec
lods
push
or
flds
into
popf
aam
inc
lods
xor
mov
jnp
xchg
mov
xchg
daa
lahf
and
xor
bound
inc
push
xlat
add
pop
lcall
leave
push
mov
and
fnstenv
out
loope
les
sti
push
fidivl
arpl
jb
sbb
jns,pn
in
sbb
sbb
jnp
jg
sbb
pop
sub
and
pop
jns
bound
in
lret
rcrb
xchg
mov
mov
xchg
popf
mov
mov
dec
mov
incb
add
aaa
pop
daa
pop
and
repnz
imul
js
hlt
xchg
jp
test
insb
loop
pop
and
in
pop
sbb
std
adc
out
ficoms
jae
mov
and
mov
fstpl
popa
lea
outsb
imul
dec
mov
aaa
popf
xchg
cmp
repz
mov
lcall
mov
sarl
and
ljmp
jmp
nop
imul
add
jmp
pop
test
push
push
xor
jmp
pop
fdiv
aad
cmp
lock
addr16
lods
out
shrl
add
movsl
loop
xor
ljmp
popa
sbb
and
ret
push
scas
rcll
or
test
les
push
push
imul
or
add
or
sahf
mov
mov
xlat
jge
dec
shrl
adcl
pushf
xchg
fs
out
mov
xchg
and
stos
inc
inc
das
push
pop
mov
test
stc
push
in
lods
sti
and
pop
roll
cli
orl
daa
xor
add
jnp
add
lods
outsb
arpl
cs
jnp
rcrb
popa
sbb
je
and
xchg
sti
mov
rcr
lods
push
pop
mov
fldl
ss
and
mov
add
dec
fistpl
test
lds
in
add
and
ret
call
pop
aas
sbb
mov
xchg
sub
mov
and
clc
mov
fcoml
jl
mov
dec
adc
pop
ret
and
rorl
std
push
mov
pop
fs
xchg
inc
jle
xor
scas
sti
mov
dec
les
repnz
stos
mov
movl
lods
rcl
jns
nop
ret
dec
shrb
inc
pavgw
sbb
fsts
in
cld
xor
pop
and
mov
js
and
lods
iret
jmp
fnsave
rcll
cwtl
mov
out
jae
dec
cmpl
fidivrs
xchg
repnz
cmp
icebp
push
jg
mov
imul
or
or
dec
les
popa
popf
scas
lcall
inc
std
adc
cmpl
fcmovnb
push
int
xor
stos
pop
int
sub
ret
jne
pop
push
cld
xchg
dec
aad
gs
outsb
xlat
bndstx
icebp
mov
xlat
sti
aam
xchg
insb
imul
adc
aas
cmp
testb
fst
xchg
das
lods
jnp
imul
dec
inc
icebp
sbb
lcall
clc
insl
fimuls
lret
mov
loopne
pop
jne
enter
pop
xor
int
out
out
jns
test
fnstsw
enter
jecxz
loope
popf
jg
enter
push
lock
mov
pop
jne
xchg
sub
pushf
mov
pop
cwtl
arpl
in
stos
cmp
pop
jno
lret
fldenv
sub
decl
sti
push
ret
dec
xchg
dec
sbb
or
cmp
gs
outsl
loopne
mov
fcoml
mov
cmpsb
mov
fisubrl
daa
shll
jle
cli
lods
notb
mov
pop
add
aaa
sbb
mov
xor
adc
rcrl
and
lret
sub
es
add
lock
aas
add
nop
pop
rcrl
outsl
and
js
xchg
jb
mov
rcl
jle
dec
jg
or
mov
in
outsl
loop
xor
aas
lock
leave
mov
jae
xchg
fadd
subl
adcb
sbb
enter
lds
xchg
inc
jbe
jle
movsb
sbb
stos
ret
scas
jecxz
mov
inc
nop
dec
rorl
imul
mov
or
or
imul
int
sahf
mov
and
push
sub
inc
xor
int3
dec
outsb
sbb
movsb
pushl
jne
sub
lahf
fildll
fisubl
jmp
cmpsl
sub
dec
jae
loopne
daa
cwtl
stos
test
daa
jns
fdivs
stos
rcrb
pop
insb
mov
fxch
jge
dec
test
pop
push
cmpb
dec
fwait
push
inc
frstor
movsb
cmc
sub
inc
sarb
xor
push
icebp
mov
hlt
mov
and
pushl
push
and
push
push
outsb
xchg
jnp
add
gs
sbb
out
or
inc
add
mov
jae
dec
clc
cmp
jae
adc
je
sahf
mov
popf
mov
lret
inc
jecxz
mov
mov
lahf
out
hlt
sbb
cwtl
ficoml
sti
mov
push
pop
jbe
mov
xor
jae
fcomps
out
stos
add
int3
mov
cmpsb
mov
in
pushf
or
in
sub
dec
ds
mov
int3
in
fnop
in
std
or
mov
jb
out
xor
pushf
push
fs
out
pop
jbe
mov
jne
aad
icebp
adc
das
aaa
cmc
sbb
movsb
xchg
decb
pusha
pop
lods
mov
mov
mov
test
cmpsb
std
mov
fcmovbe
out
mov
sbb
hlt
xor
mov
mulb
cli
loope
in
pop
adc
jbe
xchg
xor
push
shr
mov
repz
dec
adc
pop
mov
addr16
xorl
insl
cmp
xchg
outsl
inc
dec
sub
push
pop
icebp
pop
sub
movswl
mov
xor
mov
add
adc
out
sbb
test
add
cmpsl
pop
inc
pop
or
lahf
ficomps
pop
les
jb
sub
fists
cs
cmp
jmp
add
mov
mov
xchg
jb
sub
sahf
nop
mov
pop
add
sbb
dec
pop
mov
jno
and
in
sbb
add
xchg
mov
inc
mov
mov
add
dec
mov
inc
sarl
fwait
pop
stos
push
lods
cs
jb
push
lcall
or
mov
movsb
and
js
dec
insl
mov
sbb
xchg
mov
jg
and
sub
sarb
inc
add
lods
cs
das
fstl
adc
sub
cwtl
pusha
cmpb
inc
mov
inc
xchg
mov
xor
and
cmc
shl
lock
mov
aam
in
orb
dec
in
and
sbb
shl
mov
leave
or
cmpsb
push
daa
aaa
cmp
sub
daa
mov
jns
sub
scas
repz
xchg
jle
cmp
mov
fldcw
fsubs
loop
in
popf
mov
xlat
hlt
lock
xchg
dec
sub
dec
mov
mov
xchg
inc
dec
and
movsb
popf
push
sarl
test
in
pusha
ret
ja
out
scas
or
icebp
daa
lods
inc
enter
push
divl
cmc
dec
in
and
sbb
bound
cmp
jle
lods
xchg
sub
in
fldt
xchg
cmpb
call
jl
push
pop
rcll
pop
jnp
mov
ja
divb
das
add
stc
daa
jb
scas
fisubs
jae
dec
and
jp
jo
es
out
xor
dec
xchg
pop
or
fptan
call
sti
in
xchg
inc
jl
sti
inc
and
popa
sbb
cld
mov
fcompl
inc
mov
xor
jp
pop
jl
movb
mov
pop
mov
std
pop
repz
rol
or
lcall
adc
pop
adc
int
pop
fistpll
call
mov
dec
dec
cmpsb
subb
pop
mov
pushf
mov
lcall
mov
incb
sub
add
mov
jle
inc
xchg
cmp
cld
jle
or
jo
out
inc
or
push
push
pop
out
xor
stos
inc
stos
cmp
fstpl
lcall
aad
and
mov
push
and
xchg
mov
aas
mov
lods
ret
lcall
shl
lods
jg
and
and
jge
lock
in
test
sbb
cmpsl
xlat
xchg
mov
sbb
std
sub
scas
jno
push
rcrb
adc
andb
mov
push
insb
test
cmpl
and
xchg
push
in
xchg
pop
test
xor
lea
subb
adc
push
push
mov
test
loopne
push
movsl
mov
xchg
jp
arpl
sub
shrl
sbb
in
pop
sbb
daa
xchg
inc
push
loope
pop
jl
mov
sbb
jo
gs
loopne
idiv
aas
dec
add
stc
lret
or
pop
inc
jnp
pop
lds
in
xchg
test
fs
xchg
fisttps
pop
call
in
push
test
stos
rorl
lods
imul
sbbb
test
dec
pop
dec
scas
fistpll
shll
add
mov
clc
or
push
xchg
aad
lock
inc
popa
shrb
popf
sub
bnd
pop
aas
mov
aad
add
iret
stos
add
push
dec
nop
mov
cmpsb
jb
out
xchg
sub
dec
or
in
adc
inc
sub
dec
lods
mov
pushf
notb
mov
mov
lock
pop
or
test
lret
and
gs
adc
bound
mov
out
sbb
sub
jp
mov
popa
shl
out
cmpsl
ds
mov
sub
pushf
iret
out
and
repnz
pop
jmp
jmp
das
imul
lods
roll
xor
lret
mov
jno
gs
shrl
fwait
lods
or
shll
xlat
nop
addl
xor
mov
jb
pop
arpl
hlt
in
sub
sub
in
mov
jmp
std
test
or
inc
js
add
inc
popf
push
xorb
dec
rorb
sahf
outsl
ja
shr
loope
in
popf
sbb
jno
loopne
pop
out
mov
bound
aas
in
mov
mov
jge
pop
popf
xchg
sbb
daa
popf
xbegin
jno
stos
push
and
xchg
cmp
dec
cmp
fists
and
sub
push
scas
js
arpl
arpl
or
lea
fsubs
mov
inc
into
xor
add
sbb
dec
lock
sahf
add
gs
lods
push
test
stos
std
or
cs
das
mov
fistpl
dec
pop
inc
cmp
ret
stos
scas
sbb
mov
xchg
xor
rcrb
push
jbe
rclb
pop
jb
call
dec
mov
adc
sub
xor
mov
pop
stos
test
jne
ja
sub
out
fsubrl
push
cmp
or
sbb
sbb
outsb
mov
xchg
mov
ret
inc
hlt
inc
loop
push
sbb
cwtl
pusha
or
adc
pop
insl
mov
test
mov
and
gs
ret
push
or
fsubl
js
movsb
call
add
aaa
pop
sbb
push
cmp
loope
loope
adc
mov
sbb
xchg
js
addr16
popa
pop
clc
jnp
stc
pop
popf
add
mov
push
push
bound
xchg
sub
lret
sub
imul
in
lods
dec
arpl
xor
shr
sahf
dec
sub
and
les
inc
loop
sbb
ds
add
daa
mov
adc
jg
dec
adcb
sub
sbb
jo
lcall
mov
je
cmp
cmpsl
mov
cmc
shlb
test
mov
inc
data16
lahf
mov
inc
fldt
lret
pop
lea
data16
dec
aaa
repz
lcall
sbb
adc
in
scas
cmc
sub
pop
fs
jae
repnz
ret
add
fidivrs
jne,pt
xchg
pop
sbbl
xchg
arpl
pop
jg
push
inc
cmp
xor
imul
aaa
lea
pop
fcoml
mov
sub
mov
mov
rorb
call
inc
xor
rorb
and
subb
lods
pop
daa
cmc
out
xchg
dec
into
cmp
adc
mov
fsubs
sti
adc
or
mov
test
sbbl
inc
rclb
test
lea
sub
fbstp
xchg
out
hlt
jno
cmp
les
dec
add
pop
bound
add
mov
loopne
ja
ret
test
rolb
pop
add
fsubrs
pop
fs
push
mov
cmc
cld
cs
pusha
jne
jg
out
int3
pop
mov
mov
mov
rolb
inc
and
dec
sbb
pop
adc
rcrb
bound
pop
dec
jmp
jl
xchg
inc
cmpsb
mov
push
inc
movsl
jp
mov
out
insl
mov
and
xor
movsb
fucomip
sahf
lret
rcr
xor
dec
jp
pmaxub
xor
sarb
xchg
cltd
stos
cli
dec
and
jge
dec
out
jp
incb
mov
fwait
test
adc
movsl
mov
dec
add
aas
cmp
lret
aam
in
mov
movsl
inc
clc
shll
repz
ret
rcrl
or
out
aaa
and
cmp
hlt
dec
jle
ja
and
dec
pop
leave
or
test
int
sbb
sub
pop
xchg
cmp
push
into
sub
push
adc
or
ds
flds
pop
in
add
or
mov
mov
in
ljmpw
test
xor
outsl
fiadds
rol
scas
aad
leave
dec
sbb
add
mov
sar
hlt
cmpsl
es
ret
stos
sbb
insb
int3
pop
repz
stc
pop
jae
push
inc
adc
je
movsb
mov
xchg
jp
adc
fnstsw
psrlq
push
test
and
lods
xor
stos
andb
aas
negl
cmpsl
or
aam
jecxz
mov
xchg
sti
cmp
popa
xchg
xor
sbb
pop
out
subl
jg
mov
subb
xchg
out
xchg
or
add
mov
fucomp
dec
pop
movsl
ja
insb
xchg
dec
ret
mov
mov
pop
add
mov
add
not
inc
adc
adc
nop
fidivrl
cld
push
scas
mulb
add
fistps
lods
imul
insb
pop
ret
mov
pop
inc
xlat
fwait
xchg
lock
fldl
loopnew
jge
es
push
jge
inc
jl
cmpsb
and
stos
inc
and
mov
clc
les
cmp
jb
mov
hlt
test
mov
imul
rorb
mov
stos
iret
adc
add
dec
or
jmp
mov
ljmp
push
pop
push
jno
outsl
lods
cs
pop
movsl
out
dec
cltd
fstpl
repz
push
lcall
jl
sbb
pop
faddl
jno
xchg
add
dec
cmp
outsl
jo
into
loopne
cwtl
mov
mov
out
sbb
loop
sar
sub
lret
ret
decl
and
or
out
test
ficoml
xlat
loopne
mov
cs
lea
into
out
aas
rol
fcmove
je
clc
add
mov
outsl
jl
lods
fimuls
subl
xor
or
outsl
jns
mov
xchg
inc
jecxz
xor
int3
cmp
es
and
sahf
mov
jnp
or
or
xor
push
mov
inc
pop
jne
add
ret
repnz
lea
arpl
inc
cli
xchg
faddl
outsl
dec
or
insl
shll
fs
push
int3
movsl
ds
pushf
std
and
fwait
pop
jp
sub
xchg
mov
adc
lds
add
xchg
xchg
sbb
loopne
cltd
pop
mov
dec
in
xor
mov
push
xor
ds
gs
jg
je
add
push
push
lret
mov
jmp
fsubl
sbb
je,pn
mov
sub
ljmp
xchg
lds
fiadds
jp
push
jmp
cmp
dec
lods
mov
aas
xor
fsubrs
mov
mov
pop
pop
mov
xor
dec
pop
mov
les
mov
pop
ret
jg
xor
xor
rcll
loope
movsl
mov
popf
lods
sbb
mov
lods
mov
inc
movsl
in
vxorps
in
jle
int3
addr16
test
inc
js
cltd
xchg
std
test
xchg
enter
outsb
pop
or
xchg
sbb
rorl
cmpsl
jmp
push
testb
out
repnz
sub
push
mov
icebp
rorb
fstl
test
jmp
adc
push
je
sub
popa
inc
mov
mov
cli
out
mov
out
subb
cmp
sub
xor
scas
mov
jmp
adc
adc
je
jge
cli
movsb
xor
mov
cld
bound
adc
push
lock
jp
dec
int3
push
mov
testb
fcmovu
lea
jmp
or
mov
dec
les
popf
out
std
pop
push
das
push
jmp
add
cmp
mull
leave
sbb
xchg
pushf
cli
xchg
xchg
orl
or
outsl
push
adc
repz
xor
push
shll
fisubrs
movsl
in
in
into
pop
scas
mov
mov
daa
in
ret
into
mov
dec
cmp
rol
adc
mov
push
daa
fldcw
push
cmpsb
sti
jbe
xchg
pavgb
outsb
or
push
pushf
fldl
int3
hlt
sub
jmp
out
rorl
mov
push
and
neg
addl
ret
mov
out
scas
mov
inc
push
arpl
incl
fcoms
adc
adc
lea
jecxz,pt
adc
jns
xchg
lret
sbb
mov
stos
test
scas
int3
dec
cmp
mov
bound
mov
jle
je
stos
mov
mov
arpl
test
sub
sub
mov
jne
dec
xchg
rcrl
les
xor
cmp
movsl
fsts
sbb
lret
and
cli
add
or
push
add
andl
lea
in
mov
test
mov
pop
in
xchg
xchg
dec
cmp
xchg
sub
push
lods
or
outsl
mov
mov
loop
add
fstpt
int3
adc
fucom
scas
pop
stos
jo
cmp
lahf
fcmove
jge
outsb
pop
xchg
mov
xorl
or
in
aaa
dec
movsb
jmp
push
jg
lock
adc
test
dec
cld
push
add
std
and
sub
shll
push
popl
push
shll
sub
lret
out
mov
arpl
or
sti
ja
add
push
in
push
sub
pop
sbb
add
mov
mov
sub
jne
lock
and
into
cmp
cmpsl
leave
push
mov
and
adc
aas
cmp
cmp
jle
stos
inc
inc
pop
lods
jp
scas
sub
cld
jo
mov
cmc
or
out
insl
pop
xchg
dec
mov
cmp
jae
js
xchg
imul
ret
adc
shll
loopne
mov
inc
adc
mov
cwtl
cmp
cmp
inc
fnstsw
pop
int
mov
cmc
pop
sahf
push
std
mov
or
sarl
dec
add
pusha
mov
add
stos
sbb
xchg
movsb
imul
add
sti
or
mov
dec
jmp
jmp
xchg
test
mov
enter
mov
add
ja
dec
orb
cmp
jecxz
or
push
adc
andl
jle
dec
cmp
push
adc
inc
push
mov
cmpsl
and
inc
ficomps
sub
sahf
jl
push
test
mov
scas
mov
inc
dec
ljmp
stc
inc
neg
das
clc
adc
testl
cmp
in
and
pop
cmp
scas
test
test
stos
es
mov
xor
sbb
push
repz
pop
repz
loop
xchg
test
mov
popf
insb
push
stos
and
fdivp
pop
decl
xchg
fisttpl
jbe
mov
push
outsl
lcall
imul
ds
mov
test
mov
ljmp
mulb
cmp
xor
or
inc
imul
cld
push
xchg
repz
and
es
mov
ds
mov
addr16
fucom
gs
nop
iret
lret
out
push
ret
jp
cmp
repnz
movsb
xor
sub
push
inc
lret
arpl
mov
lock
movsl
scas
cmp
cmc
testb
insl
inc
push
mov
fcmovnbe
int3
subb
enter
jmp
mov
or
push
adc
pop
lods
or
popa
pusha
iret
inc
mov
scas
sub
dec
pop
out
mov
dec
xor
sahf
cmp
push
jmp
repz
lods
mov
mov
daa
add
adc
int3
sbb
hlt
aaa
cld
cmp
sub
jne
leave
js
xor
xor
daa
xchg
xor
test
jl
pop
into
fildl
add
popf
rorb
mov
sbb
std
stc
lret
nop
ljmp
fcoms
cmc
and
push
int
sbb
inc
cmp
lcall
push
popa
test
pop
or
pop
pop
call
xor
adc
add
jno
in
jp
call
jo
cmp
ficoms
jge
outsb
scas
jmp
adcl
ljmp
iret
push
push
mov
sub
dec
mov
out
sahf
push
push
cmpsl
imul
fdivrl
mov
sti
pop
mov
mov
fldcw
ds
dec
dec
or
lds
jle
loope
addb
push
fsts
aam
mov
sahf
jmp
pop
jecxz
mov
test
into
sbb
push
or
add
les
inc
mov
aas
ljmp
xor
stos
faddl
jl
or
mov
inc
mov
add
pop
lret
sbb
mov
mov
inc
sbb
xor
inc
cmp
orl
dec
mov
jg
cmp
bnd
jl
jmp
rol
aaa
dec
out
or
leave
imul
jb
insl
testl
cltd
sbb
pop
in
fisubs
fstpl
clc
pop
cmp
sbb
cmpsl
xchg
xchg
adc
xchg
adcb
or
xchg
adc
rcrl
lods
imul
jg
xchg
and
mov
mov
cmp
inc
mov
jge
cmpsb
insb
dec
shl
xor
int
pusha
sahf
push
std
lret
rclb
add
scas
lea
cli
xor
stos
aam
cltd
ds
mov
mov
sbb
dec
sti
aam
fmul
test
je
lahf
adc
call
xchg
iret
mov
xchg
call
stc
in
xchg
ljmp
in
inc
test
movsl
push
js,pt
mov
cmp
lret
mov
or
pop
add
loop
add
xor
fisttps
jg
cmc
cmc
mov
mov
clc
cmp
arpl
and
push
arpl
cli
xchg
dec
and
push
pop
xor
je
add
push
pop
popf
imul
fadds
dec
xor
and
loopne
mov
mov
in
dec
sarb
cmp
cld
xchg
cltd
jae
in
adc
mov
js
xor
cmpsb
insb
fsubs
or
aaa
jnp
add
shlb
iret
mov
sub
les
sahf
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
xchg
in
imul
push
aad
fcomps
mov
jnp
pop
cmpsb
add
jno
sbb
shr
ja
cmp
call
xchg
ret
or
and
push
xchg
pop
adc
and
xchg
inc
mov
mov
loopne
int
mov
mov
fld
mov
mov
sbb
cmpsl
hlt
cli
inc
aaa
jne
xlat
inc
push
int3
out
inc
sub
sbb
add
jge
add
pusha
mov
sbb
pushf
push
push
jno
inc
lret
popf
lea
pop
cmp
clc
jb
cmp
cmp
scas
aam
fbld
fcomps
adc
xchg
or
mov
sub
clc
cmovbe
add
and
ret
loop
mov
lods
pop
mov
and
ss
andl
movsb
cmp
xor
inc
jg
andb
insl
sub
test
mov
sub
dec
or
scas
stc
aas
les
shl
repz
test
sbb
fstpt
in
xlat
or
dec
mov
push
inc
push
fcoms
mov
fcmove
or
aas
into
and
push
fidivs
mov
and
add
fwait
adc
adc
dec
xchg
mov
adc
rcl
mov
gs
adc
and
andl
xchg
test
aam
xor
jnp,pt
or
or
jno
push
push
sti
sbb
cmp
push
jne
mov
mov
inc
arpl
adc
mov
sahf
jbe
repnz
out
pop
xchg
loop
pop
scas
jae
mov
xor
xchg
adc
sbb
mov
add
and
xlat
ret
mov
test
rcl
pop
es
mov
stos
out
ljmp
jns
orb
jo
mov
xchg
int3
leave
fsubrp
insb
jne
mov
and
jle
fstl
loope
shrb
mov
lds
icebp
push
mov
ja
push
inc
sbb
das
adc
loope
imul
mov
xchg
or
inc
in
loopne
bound
loopne
lea
adc
push
daa
or
rcll
hlt
incb
outsl
mov
push
and
icebp
add
dec
dec
sahf
lahf
daa
xchg
pop
inc
and
mov
jmp
xchg
and
orl
pop
inc
inc
shlb
stos
iret
add
or
sbb
adc
jb
cmp
mov
mov
or
jns
pop
aam
mov
ljmp
mov
call
mov
data16
dec
fs
or
insb
mov
jl
hlt
push
aad
add
aam
push
enter
rorb
aad
adc
pop
fcompl
lods
out
clc
call
fwait
sbb
lock
xchg
mov
jnp
lahf
jo
int3
adc
sub
mov
leave
or
ds
push
mov
inc
inc
outsl
add
ja
add
js
inc
mov
pop
pop
sbb
mov
shlb
out
ret
push
jb
sub
movsl
movsl
jmp
and
jb
xchg
pop
adc
jns
xor
paddw
ljmp
sti
test
inc
xor
sti
leave
daa
stos
sub
xor
pop
pop
movsb
mov
pop
pop
fildl
xchg
pop
xchg
fucomp
cwtl
js
xchg
imul
or
xchg
fmuls
cltd
sub
mov
xorl
mov
sbb
jae
popf
mov
xchg
aam
inc
push
mov
mov
out
gs
adc
jnp
pop
cmp
mov
subl
sub
psubb
mov
cs
jns
mov
cli
scas
arpl
cmp
mov
pop
xchg
nop
mov
adc
gs
mov
or
lahf
fnsave
sbb
divb
xchg
jae
and
lea
jecxz
mov
xchg
pop
test
dec
xchg
in
lret
push
cmp
sbbl
mov
sbb
xchg
pop
or
loopne
push
dec
inc
push
pop
pushf
cld
jp
xor
or
lods
enter
pop
xorb
inc
ret
test
pusha
out
add
rorl
push
test
cltd
out
and
clc
push
and
shld
lods
xchg
mov
divl
push
and
jecxz
rcrb
jecxz
mov
repz
lods
rcll
andl
jp
dec
cmp
add
push
icebp
sbb
xchg
leave
push
cmpsl
mov
int
ja
aad
adc
shlb
xor
test
in
mov
push
cmc
sub
imul
mov
cwtl
add
mov
aaa
nop
scas
mov
stos
test
fsubrs
fdivrp
in
int3
xor
stos
cmp
add
dec
and
aaa
cmpsl
pop
push
and
pop
push
popf
jae
adc
mov
mov
sub
fistpl
lds
cmp
arpl
cmp
mov
or
cmc
mov
fwait
sbb
lods
roll
mov
sbb
xor
and
inc
in
jns
mov
dec
enter
scas
rclb
shl
lahf
fisubs
iretw
aam
test
push
jb
or
pop
and
aas
rorl
clc
sub
push
xchg
mov
pop
add
xor
pusha
test
push
add
test
sti
cmp
pop
cmc
push
adc
jno
add
jge
lock
ret
es
cltd
pop
push
jo
je
mull
fucomp
in
mov
data16
mov
adc
std
stos
lahf
mov
movl
mov
loop
lahf
sbb
mov
cmp
add
pusha
test
leave
hlt
and
fcom
ja
pop
repz
lock
adc
xchg
loop
xor
loopne
mov
mov
xchg
int
sub
repz
sbb
sarl
cmpsl
adc
daa
test
mov
lds
loop
sbb
paddsb
sub
test
push
lock
insb
and
ljmp
mov
push
sub
bound
mov
cmp
mov
shlb
and
mov
mov
les
rep
ret
or
movnti
dec
jp
aaa
iret
cmp
jae
les
dec
inc
leave
call
in
or
dec
mov
addr16
fwait
xchg
add
pop
and
dec
mov
mov
jo
push
xor
outsb
cli
push
xor
cmpsb
add
lea
sti
ret
addr16
xchg
dec
daa
into
pusha
imul
cmp
jb
stos
jbe
lahf
xchg
ss
fidivs
imul
enter
push
cmp
repnz
push
xchg
insl
jge
xchg
dec
stc
mov
addr16
add
testb
xor
out
mov
push
push
aas
xchg
lret
addr16
cmp
xchg
xchg
push
sbb
aam
ljmp
push
sbb
sub
testl
fcoms
adc
loopne
mov
aas
int
adc
shl
mov
cmp
and
lahf
gs
imul
dec
or
push
pop
pop
stos
dec
inc
lret
cs
je
push
dec
fcmovne
pop
xor
mov
sub
testl
and
mov
inc
push
mov
ja
dec
and
test
sub
in
lock
push
and
roll
cwtl
jb
mov
dec
sarl
call
in
sbb
jo
dec
pop
insb
or
push
aad
add
cld
sahf
pushf
inc
rcrb
pusha
ret
xchg
int
inc
shlb
mov
aaa
scas
rcrb
movsb
shlb
ja
roll
notl
popw
mov
mov
xchg
imul
cmpsl
push
pop
pop
fistpll
test
lods
addr16
leave
int
pusha
sahf
fcompl
dec
or
cmpsl
mov
jmp
scas
or
movsl
jnp
out
xlat
mov
in
adc
xchg
outsl
mov
jne
faddl
popf
movl
adc
push
popa
push
jl
imul
adc
cmpsl
outsl
ret
jo
testl
xor
pop
aad
lret
in
inc
ret
push
clc
popf
mov
xchg
dec
adc
fs
imul
dec
xor
dec
pop
roll
mov
fs
add
les
dec
mov
xor
lret
shl
push
jne
loopne
aad
pop
xchg
ficoms
sbb
es
ffree
and
xor
lret
sbb
pop
push
sbb
pop
cmc
or
push
stos
pop
test
popf
cmp
and
fwait
lahf
ret
pusha
test
xchg
stc
repnz
mov
mov
dec
add
and
pushf
push
xor
jae
mov
daa
jg
xchg
xor
mov
and
daa
out
lret
cmp
mov
or
xchg
cmpsl
cmpl
enter
xchg
fistpl
push
sbbl
stc
ds
popf
cmpsb
loopne
cmp
fidivl
xchg
stc
push
pop
sub
loop
out
push
notl
insl
mov
pop
dec
jne
cmp
cli
fwait
inc
sub
and
xor
testb
shrd
bound
jne
ror
sbbl
mulb
add
pop
xor
mov
fidivrs
dec
loope
mov
lcall
dec
lock
jmp
lret
hlt
bound
rorb
out
fidivs
popa
jg
cmpsb
xlat
cmc
xor
fwait
adc
loop,pn
mov
push
lock
int
adc
jnp
and
into
mov
insl
sbb
cwtl
inc
mov
repnz
jl
mov
scas
pop
mov
cmp
cmpsl
adc
inc
mov
and
rorb
xchg
fwait
jle
loop
pop
loop
cmc
cmp
jnp
imul
fbstp
pop
inc
dec
mov
jle
test
out
sahf
fs
and
ret
jg
mov
sbb
jae
cwtl
mov
mov
inc
aaa
mov
push
adc
mov
push
mov
icebp
push
and
or
repz
in
push
dec
pop
cmpsl
mov
mov
add
and
stc
jbe
cmp
pop
incb
sbb
das
add
cwtl
and
cmp
cld
xchg
fimuls
popf
push
cltd
inc
stc
shr
fdivs
cs
push
call
cmp
sbb
add
icebp
gs
test
ljmp
dec
xorl
xchg
std
or
gs
or
fdivl
mov
enter
lret
jmp
adc
inc
push
aad
xchg
sbb
mov
leave
arpl
jo
sbb
cmp
insb
and
push
mov
mov
push
xchg
sarl
lretw
out
mov
cmp
adc
mov
rcrb
nop
sbb
sub
ret
ret
les
fisubrl
pusha
in
xor
testb
sub
rclb
cltd
repz
lods
ljmp
addr16
adc
dec
js
js
rcll
ss
mov
invd
inc
cmp
fisubrl
sub
jg
push
daa
or
data16
dec
icebp
xchg
cld
add
fisttpll
sub
test
pop
pop
cmp
popa
fstps
mov
enter
js
sbb
inc
popf
bound
in
imul
aam
loop
outsb
sbb
add
in
repnz
pop
inc
int
jecxz
dec
rclb
xchg
cmc
mov
push
cmp
mov
cltd
fwait
or
aad
cwtl
jno
push
pop
adc
adc
inc
inc
ljmp
jg
inc
xchg
pop
cli
xchg
pop
aaa
push
push
mov
pop
sub
jo
or
mov
stos
fidivl
ss
insb
into
sub
jae
fisttps
fsts
jo
imulb
int3
lods
test
imul
into
ds
jno
pop
sbbl
add
clc
jge
gs
mov
stos
pop
jg
imul
mov
jp
lods
adc
inc
data16
xchg
cwtl
jle
push
mov
and
and
imul
push
xor
mov
adc
sar
push
xchg
iret
ret
mov
xchg
shrb
jmp
jge
arpl
mov
lock
xor
cmpsl
test
push
push
cmp
in
mov
pop
or
in
jecxz
ret
xchg
in
mov
inc
xor
das
jmp
aad
sbb
mov
ljmp
cld
ret
add
lds
xchg
mov
shlb
xchg
xor
test
jb
push
push
loopne
cmp
push
loop
inc
daa
ljmp
and
hlt
inc
imul
movsl
push
and
lret
adc
mov
jle
ljmp
sbb
addl
insb
or
enter
fisubs
sbb
mov
insb
int
test
xor
test
inc
inc
cmp
add
xchg
ret
mov
add
movsb
xchg
xchg
sbb
ss
xchg
sbb
nop
fnop
adc
lock
jecxz
jmp
mov
jnp,pn
push
jg
gs
adc
push
mov
dec
lret
sbb
enter
jbe
xchg
cmc
dec
and
mov
outsl
add
and
push
in
aam
and
dec
push
inc
xor
pop
push
xchg
out
jno
scas
decb
or
ret
aad
outsl
or
andb
or
jo
test
test
test
in
cmp
mov
dec
outsb
cmp
xor
xchg
pop
sbb
cmp
repnz
dec
lock
fwait
mov
fs
subb
push
jnp
insb
iret
xchg
pop
and
jo
stc
mov
push
push
js
roll
push
jnp
mov
test
lds
cli
ficompl
cmp
sub
test
jl
sbb
mov
dec
jno
clc
adc
cmp
sahf
roll
rclb
cmpsl
pop
push
imul
push
sub
lcall
scas
arpl
js
mov
mov
clc
adc
pop
fwait
outsb
sbbb
sbb
xchg
les
imul
cmp
out
test
addr16
daa
inc
int
xor
es
rclb
ss
popf
stos
mov
fwait
adc
outsb
or
inc
cs
roll
inc
pop
pop
out
jne
ret
repnz
dec
jp
mov
sbb
push
and
mov
rorl
shlb
mov
push
push
and
mov
inc
aad
mov
add
sub
ja
mov
ret
cmp
out
push
aas
sbb
or
aas
cmp
aam
je
lea
bound
filds
test
fucomp
lds
mov
daa
loopne
sub
xchg
jns
mov
adc
jne
ret
sbb
jmpw
stos
and
pop
xor
xchg
ss
int3
pop
mov
ljmp
jle
push
or
ja
adc
dec
jp
push
test
jmp
mov
inc
aas
test
dec
lods
repnz
loop
int
pusha
push
mov
xchg
ljmp
lock
popa
fisttpl
xor
sbb
xor
fmuls
jo
jmp
jecxz
mov
mov
adc
enter
rcrb
cmp
xor
jle
and
mov
icebp
repz
adc
mov
xor
sbb
out
push
mov
cmp
cmpsb
push
das
outsl
test
hlt
mov
in
subb
inc
fwait
jne
jnp
ljmp
fs
cltd
pop
or
fcom
dec
inc
lret
jb
push
xchg
mov
mov
or
adc
insl
rclb
cmp
data16
adc
push
cmp
push
pop
pop
lock
mov
repz
inc
mov
cmp
insl
andb
sub
jb,pn
xor
dec
repz
test
pop
and
ds
and
mov
dec
mov
in
push
add
movsl
clc
xor
ss
test
fwait
add
lea
arpl
cwtl
daa
cmp
call
test
mov
daa
adc
cmpl
xchg
sub
loop
adc
lret
or
repnz
push
repz
push
sarl
sub
pusha
lret
cmc
pushf
mov
cmpb
dec
adc
pop
ret
orl
ret
cmp
pop
addl
add
xchg
stos
add
sbb
adc
inc
xchg
or
mov
push
or
push
dec
pop
sub
repz
mov
dec
push
add
push
inc
lds
inc
mov
adc
jne
mov
in
sub
ret
test
xor
daa
lods
fwait
xor
bound
les
pop
jnp
in
push
nop
mov
xchg
adc
xchg
pop
in
sbb
jge
pop
imul
jbe
inc
les
push
cmp
or
dec
xor
in
push
repnz
shll
dec
loop
jp
test
mov
stc
jae
push
sahf
fsts
rcrb
out
cltd
sbb
fdivs
adc
ds
mov
jb
dec
xchg
ret
sub
jnp
mov
pop
jo
pop
pop
xorb
out
repz
jge
mov
repz
dec
mov
clc
mov
jo
and
sarb
lahf
out
in
das
into
stc
cmpb
sahf
in
inc
fcomps
sbb
icebp
rolb
jecxz
jg
in
int3
popf
fabs
imul
inc
bound
shll
jl
push
jp
pop
loope
cmpsl
std
xlat
fnstsw
cmpl
jecxz
aad
cld
and
jl
push
gs
shl
je
out
pop
das
push
and
jne
lea
jecxz
jae
lock
lea
cmp
xor
pop
icebp
ss
icebp
dec
stos
xor
icebp
dec
or
nop
fidivs
les
in
mov
dec
sub
es
sbb
xchg
cs
or
xchg
mov
cmova
and
sub
enter
pop
hlt
push
pop
movsl
mov
mov
dec
push
sahf
mov
and
ret
mov
in
inc
add
iret
jnp
pop
pop
ds
xor
shl
sbb
push
lret
mov
xchg
xor
add
icebp
popf
sahf
xchg
mov
out
dec
jp
rorl
push
outsb
adc
out
xor
testl
and
push
into
fsubs
mov
movsb
mov
das
cmp
sti
dec
rclb
lods
adc
sti
xor
pusha
push
ds
imul
ja
fdivrs
popf
sub
jl
out
add
or
std
fwait
call
lods
inc
jbe
mov
sub
push
int
cli
push
cmp
pop
in
cs
inc
cmp
sub
xor
data16
testl
mov
push
imul
add
and
je
ret
pop
data16
mov
dec
dec
add
mov
cmp
push
xchg
sti
xchg
sbbl
xchg
pop
mov
push
fsubrs
arpl
push
stos
pop
mov
dec
push
sbb
fnsetpm(287
int
cwtl
lcall
pop
pop
xchg
cmpsb
iret
cmp
xor
mov
roll
adc
pushf
jae
icebp
or
ljmp
add
shrb
mov
cld
ficoml
cmp
arpl
add
adc
push
lahf
jne
test
scas
add
xchg
add
in
push
test
sub
sbb
push
mov
int
pop
and
enter
pop
fidivrs
mov
mov
lret
loop
or
lods
call
fstpt
lret
cli
inc
xor
adc
mov
hlt
aad
and
jp
jmp
repnz
add
rcrl
cmp
xchg
lea
cmpsl
add
mov
jnp
add
dec
adc
stc
and
subl
and
and
dec
ficoml
lods
add
mov
rdmsr
jge
sub
or
jnp
xor
jns
fstpt
add
in
enter
and
test
add
mov
jnp
or
add
sbb
mov
jnp
mov
add
xchg
adc
or
adc
pop
pop
sbb
push
mov
popf
push
imul
leave
mov
push
test
leave
or
pop
adc
push
lcall
sbb
sub
test
xchg
inc
or
loop
cmp
das
les
cld
mov
dec
fdivs
in
imul
jns
xor
fcoms
mov
cmp
lret
pop
push
jle
lret
cmp
jae
ja
clc
shll
in
push
cmpsl
sti
pop
cld
jg
mov
inc
stc
sub
ret
ljmp
pusha
leave
es
pop
cmc
mov
jmp
leave
xchg
jge
jae
mov
push
push
push
insl
and
pop
add
adc
enter
lock
daa
inc
cmp
js
push
mov
gs
daa
xor
adc
repnz
sbbl
shlb
loopne
push
mov
imul
xchg
pop
filds
insb
xchg
sbb
call
mov
add
lock
scas
mov
aas
lock
sub
adc
push
xchg
jg
jnp
sbb
cli
aaa
ret
add
dec
sbb
popa
and
shr
popa
lods
fildll
loopne
aas
push
dec
data16
ja
sub
arpl
addb
iret
fwait
mov
mov
and
or
scas
xor
outsl
nop
mov
dec
push
call
inc
pop
sub
add
fucomi
adc
lahf
xchg
icebp
inc
ret
cmp
out
xorl
push
les
loope
push
in
addr16
jl
jne,pn
lds
mov
insb
mov
cmp
xchg
sub
xor
test
insb
cmpsb
jns
aam
dec
or
xadd
lea
gs
fidivrs
pop
push
aam
push
xor
out
repz
fwait
imul
mov
and
sbb
sti
in
out
loop
jg
cmp
xor
jo
and
xlat
ret
ss
add
mov
psubw
xor
aad
loop
test
xchg
int
xor
adc
lods
cmc
std
in
cmpsl
sub
xor
and
dec
dec
test
cs
fwait
xor
test
lods
in
add
mov
cmpsb
mov
jnp
push
mov
push
movsl
cs
and
cld
mov
fidivrl
mov
sarb
jmp
inc
enter
orl
or
adc
pop
mov
in
xchg
shlb
mov
push
jno
sbb
movsb
test
cmpsb
xchg
mov
mov
mov
mov
jl
fiadds
sub
and
dec
mov
xchg
xor
sub
push
cmpsb
dec
add
and
lds
adc
mov
dec
stos
in
popf
das
in
pop
fwait
pop
gs
lahf
jl
aad
push
repz
and
pop
adc
push
xchg
push
sahf
cmp
jl
popf
lcall
pop
sar
pop
mov
add
pusha
inc
add
adc
mov
sbb
jae
je
or
or
or
jecxz
push
or
adc
jb
out
xchg
cs
ds
mov
and
loopne
pop
ja
dec
je
add
push
jo
cwtl
dec
jp
bound
movsl
stc
xchg
push
ret
push
mov
mov
je
pop
inc
sub
leave
scas
pop
push
stos
or
out
inc
mov
and
iret
add
add
pandn
imul
loope
mov
cwtl
xchg
mov
mov
cs
ja
stos
pop
into
xchg
or
mov
cmp
mov
pop
cmp
and
dec
and
arpl
sub
test
cmp
xadd
add
sub
sbb
lock
rcrl
in
or
inc
ljmp
and
and
adc
cmp
sahf
mov
cmpsl
insb
data16
mov
inc
or
inc
xchg
or
sbb
pop
xchg
mov
mov
out
mov
fisubrl
in
pushf
fldt
int
or
dec
or
and
push
and
mov
dec
lcall
jp
xchg
jo
cli
sub
rorb
sarl
sbb
movsl
jp
outsb
ret
stos
xchg
loopne
incl
dec
sub
mov
inc
cwtl
cmp
repnz
and
aam
mov
pop
and
in
scas
or
cmp
nop
xchg
lcall
adc
sub
outsb
mov
dec
insb
in
fnsave
xchg
es
fnstenv
data16
pop
stos
or
mov
xchg
movsl
and
xchg
adc
sub
inc
and
inc
cmp
pop
iret
jle
fildll
mov
mov
sbb
pop
xchg
push
data16
outsb
dec
add
inc
sbb
adc
push
push
fs
rcrl
in
pop
flds
out
adc
mov
jbe
cwtl
hlt
cmp
xchg
xor
iret
push
jns
adcl
xchg
sbb
enter
xchg
sbb
sub
lcall
out
aas
stos
idivb
fcmovnbe
mov
pop
xchg
fnstcw
icebp
mov
jmp
mov
fcmove
or
xor
xchg
mov
call
ss
lret
pop
sbb
fisubrl
xchg
popa
or
gs
inc
mov
and
mov
fnstsw
imulb
jb
xchg
cmp
inc
in
imul
mov
pusha
fs
mov
addl
lock
cmp
adc
lea
enter
or
pop
jmp
mov
lock
push
imull
add
out
sub
pop
sbb
pop
sub
in
insb
xchg
out
adc
jle
shlb
in
xor
out
in
sbb
movsl
jbe
cs
icebp
dec
scas
test
aaa
sbb
arpl
lcall
pop
or
insl
cmc
cs
es
rcl
sbbb
inc
out
int
and
xchg
cmpsl
subl
xchg
inc
dec
xchg
imul
in
orl
ja
lock
dec
mov
mov
jmp
aad
pop
dec
xor
pop
push
out
test
lds
loope
push
jne
test
jne
jle
push
and
xchg
fsubl
mov
sbb
and
pop
dec
xor
pop
jl
jno
pop
sub
jmp
jp
add
sub
ret
push
jge
addr16
push
mov
ror
inc
adc
lret
fdivp
xor
pushf
lahf
mov
lods
adc
xlat
push
mov
pop
out
push
inc
dec
adc
push
sub
das
xor
or
mov
jl
push
test
xchg
popa
or
dec
stos
mov
popl
push
and
cmp
fs
sub
test
inc
mov
out
add
mov
fdecstp
pop
mov
xor
shrl
jae,pn
cmpsb
pop
push
xlat
jbe
cmp
pop
repnz
int3
jl
call
add
in
sbb
imul
push
lods
sub
pusha
jp
loopne
ret
mov
les
cmpl
cmp
jle
sub
arpl
jle
shlb
jbe
call
mov
cmp
inc
test
push
fs
inc
test
in
jecxz
inc
jne
push
shrl
sti
std
leave
or
data16
pop
push
jae
outsb
pop
xor
lahf
pop
js
adc
call
ja
mov
jp
or
subb
jne
int
xor
xchg
jne,pt
and
add
adc
fwait
sahf
daa
push
cwtl
js
fldcw
jb
jbe
mov
jp
sub
mov
andb
clc
fstpl
decl
arpl
inc
testb
mov
hlt
sbb
pop
hlt
jb
push
and
mov
pop
mov
movsl
push
add
inc
inc
add
int
add
fldz
sbb
call
mov
mov
cmp
jne
lret
add
test
push
mov
push
repnz
cmpsl
mov
add
jmp
dec
sbb
xor
loopne
in
test
rorb
daa
notl
inc
jno
xchg
aaa
mov
dec
push
or
aam
cmp
aas
popf
push
aam
popa
sub
mov
lret
or
lcall
cmp
ja
dec
enter
mov
sbb
and
cmp
and
sub
jae
mov
loopne
cltd
lock
mov
rolb
sbb
popa
ljmp
add
jg
shrl
mov
icebp
add
dec
xor
lret
adc
fldt
fcompl
push
repnz
das
dec
and
hlt
xchg
inc
jecxz
push
dec
outsl
push
addr16
fimull
dec
mov
popf
xor
mul
or
hlt
stos
mov
push
in
out
sbb
and
xchg
in
add
cmpsl
into
xchg
bound
ljmp
push
stos
pop
stos
sbb
pop
jo
pop
adc
outsb
inc
xor
push
add
pop
loopne
cmp
xchg
sbb
push
imul
out
call
testb
lret
shl
mov
or
jns
pandn
inc
push
sub
loop
sub
ficompl
dec
jno
sub
ret
dec
jno
mov
in
xor
xor
lret
jle
ret
push
pop
jbe
shll
or
clc
pushf
mov
push
mov
jge
push
or
aam
mov
lods
or
lods
addr16
popf
and
adc
pop
loopne
aas
out
imulb
sar
ret
stc
and
sahf
xchg
nop
daa
cmpsb
cmp
js
adc
loop
ss
jb
les
pushf
sarb
sub
push
push
and
xor
popa
add
in
pop
add
rcll
xchg
or
mov
test
or
sbb
out
jno
jl
data16
xchg
push
jb
push
jns
jle
ret
push
mov
adc
imul
out
and
pop
or
sub
stos
imul
jle
loope
pusha
mov
out
xor
push
fcmovb
fwait
call
jecxz
add
addr16
jo
inc
inc
push
inc
or
movsl
add
sbb
sbb
adc
mov
sbb
ljmp
lds
mov
and
addl
loop
sub
mov
fwait
mov
jns
pushf
loope
cltd
pop
pushf
or
inc
push
xchg
fistpll
sub
xchg
inc
dec
clc
je
jge
rcr
icebp
mov
add
and
insl
fdivp
loope
xchg
jg
in
mov
pop
inc
xchg
sub
mov
repnz
stos
aad
jae
out
ficomps
imul
sbb
push
mov
pop
inc
test
je
add
mov
mov
mov
fstpl
in
mov
and
push
add
add
aad
push
adc
shlb
das
in
add
pop
adc
cmp
push
jp
mov
cmpsl
mov
ss
mov
jne
mov
jge
jecxz
or
cmc
pop
xchg
das
das
push
inc
imul
fcmovnbe
call
imul
bound
call
pop
clc
mov
out
jge
mov
xorl
sub
hlt
add
imull
mov
push
je
ret
push
enter
pop
mov
movsl
push
mov
xor
lock
inc
punpckhbw
sub
inc
clc
hlt
sbb
pop
push
xor
xchg
mov
jae
cld
pop
in
inc
inc
fs
sbb
movsl
sbb
fldt
or
scas
jl
fimull
lods
mov
mov
jmp
xchg
pop
ss
xchg
sbb
cmp
lret
mov
iret
inc
pop
lahf
jmp
call
jp
adc
mov
hlt
negl
addr16
test
das
fs
jmp
fstpt
sbb
pop
adc
jl
sub
mov
js
lcall
fdivrs
and
repnz
or
sbb
subl
cwtl
sbb
dec
pop
fs
inc
jecxz
shrb
in
call
data16
test
sub
mov
les
mov
jbe
or
dec
mov
push
add
cmp
cmp
xor
fdiv
push
test
fcoml
adcb
aad
fbstp
xor
js
lds
enter
push
mov
insb
je
sbb
dec
sub
imul
xor
aaa
jle
and
repnz
call
test
jb
or
lret
sbb
movsl
xor
adc
jecxz
sti
rorb
cmp
fadds
and
cmpsl
sub
imulb
fs
shrl
arpl
jo
into
repz
outsb
rolb
mov
xor
push
inc
arpl
push
ret
inc
lret
fists
mov
push
adcw
lea
push
jg
pop
jge
or
gs
repnz
inc
leave
jecxz
xor
sub
add
xchg
xchg
loop
loopne
sbb
cmp
decl
cmp
out
js
addb
inc
sub
out
call
pop
jae
fstp
movsl
aam
ds
dec
adc
out
pop
in
or
pop
ds
les
popa
cmp
les
jge
mov
lahf
xor
inc
and
rclb
pop
adc
xchg
pop
scas
cwtl
jg
push
aas
outsl
push
sbb
push
push
fstpl
hlt
rcrl
cmp
mov
cmp
push
pop
and
mov
rorl
mov
outsb
stos
dec
add
rolb
repz
xchg
arpl
mov
out
jmp
in
les
add
and
jbe
loope
arpl
fadds
es
xlat
and
push
pop
rcll
push
pop
jbe
cmp
movq
and
xlat
cmp
lret
or
pmuludq
fldl
cmpsl
imul
dec
aaa
rclb
xchg
mov
cld
bound
sub
cmp
and
push
and
orl
or
mov
and
push
incl
aas
or
mov
idivb
in
clc
pop
lret
add
mov
enter
rolb
xchg
pop
test
adc
mov
sbbb
loop
cld
xlat
jno,pt
sbb
loopne
dec
sahf
aam
cwtl
xor
ret
push
xchg
mov
jno
mov
test
mov
xor
xor
movsb
and
test
push
jae
out
cwtl
dec
xorb
and
aas
std
out
sti
inc
repz
jmp
pop
inc
enter
cmpsl
sarb
push
or
lods
dec
bound
mov
jne
cmp
jmp
unpckhps
and
clc
sbb
dec
sub
enter
xchg
pusha
xor
fdivrs
imul
out
cmpsb
imul
mov
data16
xor
mov
bound
inc
rcr
adc
loope
cmp
xchg
in
sarl
sub
dec
stos
popa
adc
adc
scas
or
icebp
cmp
arpl
dec
xor
sti
in
push
popf
or
inc
pop
mov
ret
lea
std
sub
insl
xchg
jae
xor
ja
sbb
push
add
enter
addr16
mov
push
lods
fwait
push
std
mov
and
test
xor
pop
inc
sti
shrb
mov
pop
js
mov
push
movl
addr16
lods
add
fdivs
push
mov
push
mov
mov
ret
daa
rolb
data16
aad
adc
sbb
adc
cld
adc
mov
push
jmp
jno
lret
jle
jg
imul
imul
cmp
int3
icebp
jo
sbb
insb
inc
sub
or
push
jp
fs
xlat
sub
xchg
push
push
int3
lcall
jo
add
push
xchg
pop
cwtl
out
aad
inc
out
mov
std
adc
mov
int
push
jne
or
mov
loopne
insl
lea
adc
sub
lods
and
xchg
dec
testl
jno
hlt
imul
mov
into
dec
xchg
lahf
jg
mov
test
test
xchg
dec
test
out
or
test
popa
jb
lret
cmp
push
pop
mov
and
xrelease
mov
or
cmp
pop
mov
pop
js
cmp
pop
jle
dec
stos
dec
dec
pop
outsl
ret
std
ljmp
mov
mov
pop
xchg
push
jo
cli
jo
gs
loop
in
and
call
mov
xchg
pushf
aam
or
les
mov
neg
mov
sarl
out
xor
sbb
xchg
dec
jecxz
mov
mov
cmp
and
or
decb
pusha
mov
stos
mov
popa
nop
push
xor
mov
push
je
punpckldq
or
mov
add
pop
into
in
dec
rcr
in
sbb
lds
movsb
lret
mov
pop
jb
push
jmp
movsl
mov
push
shl
push
decb
cmp
mov
xor
mov
stc
fisttps
sub
pop
outsl
rcrb
loop
loope
sub
xor
adc
adc
std
negl
rcr
jae
imul
sub
shlb
push
rcll
push
pop
dec
push
addr16
icebp
xor
mov
leave
sub
sub
cmp
adc
pop
pop
roll
in
je
add
js
mov
movsl
nop
lret
push
enter
xchg
push
fdiv
out
stc
stos
rcll
fcmovne
in
push
cmp
stos
mov
mov
lods
adc
jmp
adcb
sbb
jbe
push
sti
insb
pop
inc
adc
jmp
pop
cld
cs
outsb
pop
pushf
pop
jg
es
in
xor
xchg
aaa
push
lods
ljmp
scas
cmp
inc
or
ret
in
pop
pop
add
sub
mov
pushf
fisubl
push
int
pop
pushf
icebp
stos
mov
xor
push
frstpm(287
mov
fidivrs
int
push
mov
pop
lods
sbb
and
xor
push
mov
shld
pop
xorb
addr16
or
cmp
sub
out
pop
or
hlt
sarb
lcall
rcrl
mov
adc
into
ret
xchg
call
and
lods
sub
arpl
scas
mov
test
sub
add
sub
or
subl
mov
jge,pn
mov
pop
cmp
inc
jecxz
loope
dec
mov
loopne
nop
ja
pop
fstpt
xchg
adc
ds
ret
xchg
roll
sub
out
dec
jne
xchg
xor
mov
gs
mov
js
std
jne
rcrl
mov
roll
cld
roll
jmp
loope
test
arpl
mov
mov
scas
add
cli
insb
pop
sti
filds
xchg
imul
js
cmp
mov
mov
int3
jmp
cmp
out
loop
in
dec
xchg
jmp
jecxz
mov
inc
andl
fwait
lret
pop
jo
add
push
add
add
add
add
loopne
add
and
add
pusha
add
orb
add
mov
add
add
add
addb
add
add
add
push
add
add
add
add
add
add
add
addb
add
or
call
add
add
add
test
add
cmp
add
add
add
rolb
add
add
or
sub
add
insl
add
add
add
addb
add
add
add
adc
add
sub
or
dec
add
add
add
cmp
add
add
add
add
add
push
add
add
or
repnz
add
add
add
add
add
add
add
add
add
add
nop
add
add
or
pop
add
add
add
mov
add
add
add
rolb
add
enter
adc
add
imul
add
add
subb
sub
add
add
add
add
add
sbb
add
pusha
push
or
and
add
add
add
inc
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
lock
add
lock
lock
ud0
lock
lock
ud0
lock
lock
ud0
lock
lock
push
lock
add
decl
lock
lock
ud0
push
lock
lock
push
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
lock
add
lock
push
lock
sldt
add
sub
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
sldt
lock
sldt
add
lock
lock
lock
ud0
push
lock
add
add
lock
push
lock
lock
lock
lock
lock
lock
lock
lock
ud0
push
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
add
xor
or
inc
pop
or
push
pop
or
fs
or
add
add
adcb
add
add
add
add
or
add
nop
push
or
add
add
jmp
pop
or
nop
push
or
movsb
push
or
add
add
pushl
add
or
add
add
call
push
or
mov
or
add
add
dec
pop
or
mov
or
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
inc
push
xor
cs
insb
add
add
dec
outsl
popa
fs
jne
jae
jb
add
add
xor
cs
insb
add
add
add
dec
popa
jb
push
je
jb
push
dec
outsb
je
jb
popa
arpl
outsb
push
je
gs
insl
add
add
add
inc
inc
push
push
xor
cs
insb
add
add
pusha
and
shll
ljmp
or
inc
pop
mov
jmp
push
mov
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
push
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
or
jmp
cwtl
sub
popf
jno
sub
jo
lods
adc
repnz
adcb
jmp
adc
xor
dec
jp
in
nop
mov
xchg
pop
repnz
dec
out
jne
out
pushl
push
add
sbb
push
loope
sti
and
sbb
adc
fcmovb
outsb
and
repnz
pop
jecxz
and
insl
add
or
jmp
lods
and
add
adc
adc
popa
adc
mov
les
sub
jmp
in
test
leave
or
es
shl
int
push
sti
fcoms
and
add
idivl
andb
sbb
xor
xchg
jmp
repz
mov
insb
movsb
cs
mov
sbb
add
cli
xchg
ljmp
out
incb
mov
and
outsl
addr16
sbb
out
insl
add
jb
js
std
sub
cmp
push
adc
outsb
dec
xchg
mov
mov
and
shlb
mov
jne
sub
out
nop
jo
fimull
mov
shl
lret
stc
es
adc
add
ret
jge
pop
sti
popa
add
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
jb
inc
aad
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
adc
clc
push
push
jno
hlt
add
fidivs
and
sub
add
mov
pop
dec
hlt
mov
inc
xchg
mov
inc
sahf
mov
push
sbb
mov
sbb
subb
xor
inc
ret
lcall
out
jne
mov
inc
add
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
xchg
cltd
mul
jge
mov
in
movsb
daa
or
xchg
add
add
push
call
xchg
push
mov
cld
lea
ds
ror
xorl
or
call
addb
or
pop
mov
cmp
push
dec
rcll
jo
inc
add
addr16
or
push
nop
push
nop
and
or
jecxz
push
je
les
push
pop
and
arpl
cltd
push
adc
jmp
push
nop
pop
add
dec
xchg
adc
mov
and
sbb
adc
adc
sbb
adcl
inc
dec
sbb
sbb
push
imul
fsubl
push
cs
push
movsb
and
push
pop
sub
lea
add
add
sub
mov
fidivs
xor
lea
mov
stos
movsb
add
nop
cmpl
je
es
cmp
and
inc
sbb
in
sbb
das
aam
add
popa
out
push
sbb
push
call
add
dec
sub
xor
and
and
jnp
xchg
aaa
and
push
call
jb
sbb
fwait
xchg
shrl
pop
or
push
sti
nop
sahf
add
lcall
dec
test
or
inc
inc
push
sbb
jnp
mov
lea
mov
cmp
sub
jl
adc
loope
xchg
jg
lea
test
xor
push
aas
pop
inc
mov
sbb
enter
push
aas
rcr
push
rclb
test
dec
inc
xor
jmp
mov
adc
and
ss
inc
jo
add
test
ret
ds
rolb
mov
pop
xchg
jl
imul
mov
cltd
cmpsb
cmp
and
add
add
ret
mov
cmp
inc
pop
or
aas
pop
loopne
push
add
push
and
xchg
test
sub
adc
ret
cmp
sub
dec
cmp
add
out
mov
loop
xor
inc
stos
pop
add
sub
in
xor
leave
push
add
jp
hlt
push
ror
inc
shll
pop
adc
pop
add
loopne
or
hlt
cmpsb
cltd
inc
or
push
push
and
loop
push
sbb
pop
cmp
or
and
xor
jmp
pushf
mov
push
clc
movzwl
test
jge
out
xor
insb
pusha
xchg
cld
movl
jne
iret
jge
and
rolb
push
push
cld
sub
iret
shll
enter
arpl
cmp
mov
sarw
or
push
push
add
movb
pop
pop
nop
mov
xor
mov
pop
ret
std
lock
xor
cmp
add
in
add
jbe
adc
or
sbb
mov
dec
push
out
mov
in
inc
pop
pop
fistpll
fimuls
int
in
sub
inc
je
es
pop
sbb
dec
or
stc
add
movsl
add
jnp
inc
push
cli
cmp
sbb
lret
pop
sarl
push
add
ret
add
and
push
mov
push
lock
push
push
lea
inc
mov
mov
push
sub
adc
mov
pop
cltd
and
add
mov
inc
mov
hlt
push
leave
dec
or
dec
jb
sbb
push
addr16
in
addr16
enter
dec
mov
inc
push
adc
push
adc
mov
pop
lods
sbb
xor
stc
jmp
mov
push
movl
loopne
sub
pushf
dec
mov
fiaddl
stos
inc
or
lret
testb
shlb
orb
mov
push
je
and
or
mov
push
dec
or
ror
jle
test
and
push
push
push
push
daa
call
sbb
mov
test
pushf
mov
insl
jae
in
gs
sbb
inc
or
adcl
scas
sbb
inc
inc
mov
scas
jae
rolb
test
loope
dec
int
mov
cmp
ror
gs
jge
mov
adc
shr
add
fdecstp
mov
mov
jle
mov
jg
cmp
and
jmp
push
add
iretw
adcl
mov
and
imul
mov
in
xchg
push
sub
mov
lods
popf
and
push
outsl
jnp
repz
xor
icebp
mov
shr
nop
adc
dec
dec
or
or
repz
popa
imul
insl
dec
sub
adc
sbb
add
mov
jl
sbb
shr
pusha
jae
xor
jbe
fisttpl
cmpb
push
add
add
rorl
push
out
in
movsl
inc
gs
movsl
lcall
or
nop
xor
iret
imul
mov
js
push
adc
mov
inc
jo
insb
imul
outsb
and
push
fdivr
push
adc
ljmp
add
out
mov
in
fs
fistpl
adc
jae
lret
insb
out
outsb
addr16
bound
mov
imul
xor
popa
outsb
insb
and
xor
daa
popf
arpl
ss
jne
fwait
cmp
xor
dec
js
popa
jnp
push
inc
outsl
js
emms
je
arpl
data16
adc
cmp
or
je
movsb
dec
dec
roll
push
fs
rorb
loop
sbb
je
cmc
inc
les
pop
jl
imul
jle
sub
fs
mov
int3
cmp
or
mov
cmp
dec
xor
jp
dec
pushf
lea
movsl
sbb
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
clc
pop
or
pusha
push
add
or
add
and
add
push
or
add
inc
add
push
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
or
add
add
add
jmp
push
mov
sub
mov
mov
andl
andl
xor
inc
push
push
mov
push
mov
shl
mov
mov
mov
shl
mov
add
mov
shl
dec
dec
mov
add
movb
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
rep
mov
andl
push
mov
or
pop
mov
mov
movzbl
shl
or
incl
dec
mov
jne
cmp
ja
xor
pop
pop
pop
leave
ret
mov
and
mov
mov
shl
add
lea
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
movzbl
mov
and
push
pop
sub
xor
shr
mov
shl
mov
inc
add
imul
cmpl
lea
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
lea
lea
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
mov
test
jne
jmp
sub
sub
mov
shr
sub
mov
mov
lea
test
je
cmp
jl
jmp
mov
lea
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
mov
mov
lea
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
mov
mov
mov
lea
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
mov
add
shl
mov
mov
add
mov
lea
cmp
jae
mov
shl
mov
mov
movzbl
shl
or
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
je
mov
mov
xor
cmpl
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
lea
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
lea
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
xor
movl
jmp
sub
sub
mov
shr
sub
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
push
movl
jmp
sub
sub
mov
shr
sub
mov
add
push
movl
pop
mov
mov
mov
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
shll
mov
jmp
sub
mov
sub
mov
shr
sub
mov
mov
lea
mov
decl
jne
mov
xor
inc
mov
shl
sub
add
cmpl
jge
addl
cmpl
jge
mov
jmp
push
pop
mov
shl
lea
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
mov
lea
decl
jne
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
lea
shl
movl
xor
inc
mov
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
shr
sub
mov
sub
or
mov
lea
shll
decl
jne
inc
mov
je
mov
addl
cmp
ja
mov
mov
sub
add
mov
decl
mov
inc
inc
cmpl
mov
mov
je
cmp
jb
mov
cmp
jb
jmp
xor
inc
jmp
push
mov
sub
push
push
mov
movzbl
push
cltd
push
pop
idiv
push
pop
push
push
movzbl
mov
cltd
idiv
mov
mov
mov
mov
mov
add
mov
shl
add
shl
push
push
call
mov
mov
lea
push
push
pushl
add
push
push
lea
push
call
push
push
pushl
call
pop
pop
mov
pop
leave
ret
add
push
add
add
add
add
inc
add
add
add
push
or
test
add
add
add
add
add
add
aad
or
add
or
cltd
push
add
jmp
add
add
add
add
add
outsl
dec
xchg
add
incl
mov
add
and
add
add
add
add
add
outsl
dec
xchg
add
incl
addb
bound
add
add
add
add
add
add
outsl
dec
xchg
add
incl
adc
add
adc
add
add
test
add
adc
add
adc
add
add
add
add
add
xchg
add
faddl
add
push
push
push
push
call
pop
sub
lea
mov
add
sub
cld
mov
mov
mov
add
lea
lods
stos
lods
stos
lods
stos
lods
stos
nop
cmpl
je
mov
test
je
mov
add
mov
add
rep
mov
lea
add
add
add
lea
push
call
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
push
call
mov
push
call
lea
test
jne
push
call
push
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
add
push
push
call
test
je
mov
mov
test
jne
lea
jmp
test
je
push
and
push
lea
push
lea
push
call
jmp
mov
add
inc
inc
push
push
lea
push
lea
push
call
lea
push
lea
push
push
push
call
push
call
mov
mov
cmpl
jne
mov
mov
mov
add
movb
add
sub
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
nop
nop
nop
nop
nop
nop
push
call
push
push
pushl
call
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
push
push
call
pop
sub
mov
mov
add
push
call
mov
mov
mov
add
add
xor
add
je
push
mov
add
push
pushl
call
stos
pop
add
jmp
add
add
jne
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
lods
test
je
add
mov
jmp
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
movzwl
test
jne
test
je
push
push
mov
xor
mov
movzwl
mov
add
cmp
jge
mov
inc
movzbl
add
sub
mov
je
dec
mov
jne
mov
cmp
jne
shr
rol
xchg
sub
mov
add
add
add
inc
jmp
pop
pop
xor
add
je
cmp
je
call
pop
sub
lea
jmp
jmp
push
mov
mov
add
sub
pushw
push
push
call
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
mov
mov
movzwl
test
je
push
mov
mov
mov
add
mov
sar
rep
add
and
rep
mov
mov
add
xor
push
mov
sar
rep
add
and
rep
pop
mov
mov
add
mov
mov
sar
rep
add
and
rep
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
movzwl
mov
push
push
push
movzwl
test
je
push
mov
mov
mov
mov
sub
mov
add
mov
sar
rep
add
and
rep
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
mov
mov
dec
mov
push
push
pushl
call
lea
push
pushl
pushl
call
mov
inc
je
xor
add
je
dec
mov
pushl
pushl
popl
popl
jmp
pop
push
mov
add
cmp
jne
add
jmp
mov
mov
sar
rep
add
and
rep
mov
add
shr
shl
sub
mov
xor
push
mov
sar
rep
add
and
rep
pop
pop
pop
pop
pop
add
dec
jne
xor
pop
pop
pop
leave
ret
pop
pop
pop
pop
xor
inc
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
xor
cmp
jne
cmp
je
add
je
add
mov
add
mov
test
je
add
push
push
push
push
call
inc
jne
dec
pop
pop
pop
leave
ret
add
jmp
insl
jae
bound
add
in
add
push
push
push
call
pop
sub
mov
mov
xor
mov
xor
inc
inc
mov
pushl
call
mov
mov
test
jne
dec
jne
xor
dec
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
jne
mov
test
jne
mov
movl
mov
test
je
push
mov
test
je
and
push
jmp
mov
add
xor
mov
push
inc
inc
push
pushl
call
pop
test
je
mov
mov
add
add
jmp
xor
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
mov
mov
mov
sub
mov
xor
lods
test
je
cmp
je
inc
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
add
xor
mov
lea
add
mov
shr
shl
push
lea
push
push
push
push
call
mov
test
je
sub
mov
pop
lea
push
pushl
push
push
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
mov
add
lea
mov
shr
shl
push
lea
push
push
push
push
call
mov
mov
pop
lea
push
pushl
push
push
call
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
jo
insb
imul
and
jb
jb
inc
jo
insb
imul
and
jb
jne
je
add
and
outsl
arpl
jne
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
add
add
arpl
add
jne
gs
xor
dec
gs
popa
addr16
outsl
js
add
jo
imul
gs
gs
xor
add
imul
jae
inc
insb
outsl
jae
dec
popa
outsb
fs
add
outsb
push
jb
arpl
jae
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jb
jne
insb
push
jb
je
arpl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jbe
add
lcall
adc
push
add
insl
push
add
rcrl
add
jmp
add
push
push
add
cmp
add
dec
push
add
add
add
jp
add
pushf
sbb
adc
