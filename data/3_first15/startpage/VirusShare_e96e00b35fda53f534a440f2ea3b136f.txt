mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
scas
jle
push
inc
scas
clc
int3
jmp
and
or
pop
pop
mov
adc
add
mov
loop
fistpll
inc
movaps
add
and
iret
or
or
dec
lret
in
mov
dec
rcrb
call
mov
cltd
push
pop
xchg
xor
inc
jl
inc
adc
jp
push
lods
lret
sub
sbbb
xchg
lock
push
sub
and
cltd
popa
popf
mov
fidivl
xor
cmp
pop
and
inc
lret
pop
push
dec
jg
jmp
popf
aaa
rcl
int3
daa
jg
sti
cli
js
sbb
ja
mov
scas
cmp
mov
outsl
in
repz
mov
loop
xchg
mov
mov
sub
dec
lret
mov
add
out
mov
pop
jnp
jmp
xor
fidivl
fldt
inc
pop
cmc
in
pop
roll
lret
dec
lods
xor
jae
xor
outsl
cld
inc
cmpsl
or
jl
mov
cwtl
mov
test
push
push
dec
dec
lods
loopne
andl
into
add
pop
jo
cmp
inc
jg
sbb
mov
mov
repz
int3
inc
ficomps
cld
adc
mov
into
sbb
push
sbb
divl
jp
jmp
cmp
sbb
insb
cmc
sbb
iret
and
ficompl
push
pop
and
sti
nop
sub
in
push
push
outsl
test
mov
push
les
jl
daa
pop
outsl
loopne
leave
or
jae
inc
or
or
popf
pop
or
movb
adc
scas
xor
in
in
jns
sub
das
mov
push
mov
ret
insb
sbbb
or
bound
xor
sbb
xchg
sbb
stc
jmp
pusha
ss
mov
fistpl
stc
pshufw
or
mov
xor
jbe
mov
cs
push
or
xchg
and
insl
and
xchg
xchg
lret
leave
jp
into
pop
test
dec
add
insl
ds
test
rcrl
mov
ljmp
stos
in
xchg
jne
mov
fcomps
jno
test
cmpsb
mov
mov
push
scas
xor
les
push
mov
push
mov
or
dec
loope
add
jbe
aad
cmp
pop
cmp
out
notb
jo
inc
nop
jge
pop
cmp
dec
fisubrs
cwtl
test
mov
xlat
jecxz
cmc
sti
jns
sub
mov
jno
sub
sbb
rorb
test
inc
aaa
repnz
add
adc
push
nop
push
popa
inc
mov
push
mov
push
arpl
adc
imul
inc
push
push
data16
test
pushw
fs
cmp
jg
mov
js
das
mov
sub
ret
pushf
ja
mov
lcall
pop
or
mov
push
sbb
dec
data16
push
shll
fsubr
outsl
test
stos
loope
subl
ret
pop
sub
fmull
pop
iret
popf
pop
xor
mov
mov
cmp
pushf
mov
stos
testb
arpl
adc
dec
repz
arpl
or
negb
sahf
push
and
inc
sub
arpl
aam
notl
ficoms
cld
dec
jge
add
pushf
inc
popf
mov
ret
sub
stos
ficoml
mov
cmpsb
jbe
mov
fmuls
dec
xor
dec
push
imul
aas
ficompl
or
lcall
add
adc
in
sub
pop
pop
push
shlb
rcll
repz
push
pop
add
sub
mov
fstpl
fstpt
push
lds
jle
icebp
imul
sub
cmp
add
and
sarl
cmp
loope
or
in
iret
xchg
shll
fbld
lds
cmpsb
insb
xchg
pop
movl
fsub
jne
mov
pop
inc
or
aad
and
testl
loopne
adcb
dec
push
testl
addb
cmc
pop
mov
das
cmpb
adc
jl
fwait
inc
int
enter
xchg
stc
inc
xchg
mov
mov
scas
cmp
test
pushf
icebp
js
lea
or
add
addr16
nop
adc
negb
shll
jge
divb
xchg
daa
pop
jo
mov
rolb
xchg
jnp
xchg
add
xchg
jbe
mov
jns
cmp
mov
xlat
jl
or
es
xchg
jg
lock
add
xchg
pop
mov
adc
or
in
xor
mov
lret
mov
xchg
pop
dec
daa
mov
mov
shll
sbb
jns
ficomps
pusha
mov
pop
mov
movsl
loop
pop
mov
andb
daa
cld
fs
xlat
popa
jecxz
xchg
and
pop
cmpsl
and
jnp
out
fnsave
aam
pop
cmp
inc
fsubp
mov
call
aam
repz
lods
iret
xor
icebp
hlt
rolb
mov
sub
mov
repz
xor
popf
fildll
dec
pop
sub
scas
repnz
ja
and
rorb
test
inc
dec
es
popf
jo
mov
sub
or
insl
add
int3
mov
add
sub
add
outsb
add
lret
int
jmp
dec
mov
push
lret
pop
cmp
cmp
and
sti
sub
pop
mov
push
rcll
mov
mov
mov
stc
and
mov
inc
jne
fistl
pop
test
repnz
frstor
mov
ficoms
data16
sub
rcr
sbb
xor
dec
imul
or
ds
pop
jb
jmp
sbb
mov
xor
or
sub
fisttpll
not
pop
ljmp
jg
dec
mov
sbbb
rep
adc
scas
cmp
or
cs
push
mov
js
hlt
inc
lahf
add
bound
sub
fidivl
sub
mov
mov
cmp
cltd
inc
decb
fs
jp
push
xor
jg
sbb
push
inc
push
test
imul
sbb
jmp
mov
js
testb
lea
adc
in
std
loop
mov
xor
adc
push
sbb
int3
sub
sahf
add
cmpsl
movsb
or
jle
fnstcw
insl
xchg
filds
adc
arpl
cmp
inc
push
xchg
push
divl
push
inc
push
adc
or
push
jmp
push
cmc
cmp
cmp
cld
xor
arpl
mov
mov
loopne
loope
and
dec
popa
mov
or
jns
cmp
test
js
xchg
mov
xchg
mov
cmp
fldl2t
inc
insb
loop
jecxz
into
and
dec
push
cmp
outsl
adc
xor
test
stos
cmp
dec
push
stos
sbb
adc
repz
movsl
mov
xor
and
xchg
stos
iret
js
sub
cmpsb
notb
test
adc
lock
jno
repnz
dec
aam
imul
imul
jae
stos
movsb
cmp
aaa
adc
je
cmp
cld
aas
scas
movsl
pop
jb
cltd
adc
xor
dec
es
insb
jecxz
sbb
pop
divb
insb
and
adc
nop
cmp
jl
iret
mov
sub
ljmp
cld
pop
daa
inc
das
jb
repz
inc
or
and
jns
loope
xor
dec
adc
stos
dec
repz
jbe
leave
lods
pop
sbb
inc
scas
decl
sti
out
sbb
sahf
arpl
in
inc
xchg
shrb
add
ja
movsl
pushf
fmuls
add
shrl
push
mov
daa
inc
out
aam
dec
jl
sbb
adc
push
inc
out
lods
bound
jecxz
and
stos
call
out
xlat
lods
sub
mov
fcmove
fisubl
adc
clc
pop
sti
cmp
jbe
and
inc
xchg
xor
out
cmp
cmp
jl
sarb
cmc
in
pop
in
push
mov
pop
sbb
inc
jecxz
js
dec
pop
cwtl
ss
cmp
jns
xchg
movsb
ud0
in
pop
cmp
cld
inc
lods
sub
cmpl
mov
xor
cmpl
push
negl
pop
push
stos
int3
xor
dec
ja
jns
sub
insl
insb
push
mov
ljmp
loopne
sub
jb
push
nop
add
push
call
fsubrs
pop
mov
jb
ljmp
repnz
mov
pop
aas
aad
xor
adc
cmp
fnstenv
pslld
mov
xor
xor
imul
xchg
xchg
cmpsb
push
sbb
test
and
pop
das
mov
out
fdivrs
in
mov
mov
sub
push
clc
pop
push
scas
xchg
or
pop
mov
outsl
sti
adc
cmpsb
sbb
rorb
sub
xor
sahf
dec
imul
xchg
outsl
adc
cmpsl
in
pop
aaa
and
fldt
fwait
hlt
push
in
pop
in
mov
xor
bound
mov
pop
dec
in
xor
imul
and
clc
outsb
pushf
mov
insb
add
subb
xchg
sti
lahf
sbb
out
xor
push
sti
mov
jno
or
pop
mov
enterw
cli
das
leave
sub
in
mov
jp
loop
and
pop
sahf
sub
mov
pusha
mov
mov
pop
push
clc
popf
repz
test
movsl
xor
cmpsb
iret
add
mov
dec
mov
adcb
mov
aam
fcoms
mov
xor
xor
jns
cmc
lret
andb
pop
pop
add
mov
inc
inc
test
imul
jge
push
or
add
loop
sbb
pop
lret
out
bound
arpl
jo
mov
pop
rol
aam
cwtl
test
adc
test
lret
mov
jb
and
push
aad
rolb
ljmp
arpl
jne
icebp
add
mov
js
fidivl
xor
notb
jb
xchg
adc
icebp
andb
and
mov
push
adc
cmc
mov
gs
lods
jnp
movsb
mov
decb
adc
cmp
hlt
iret
xchg
cmpsb
xchg
scas
xchg
dec
xchg
pop
add
fmuls
jg
push
mov
jne
xchg
pop
rorb
pop
cli
jno
push
or
mov
imull
mov
jne
fs
fs
int3
jl
bound
mov
push
fcoml
xchg
pop
lret
cwtl
pop
pushf
xchg
push
out
notb
repnz
pop
movsb
dec
aaa
mov
jnp
dec
icebp
push
mov
out
pop
bswap
mov
dec
hlt
nop
test
pusha
enter
xchg
mov
push
sub
iret
jns
or
in
rolb
inc
out
adc
pusha
arpl
icebp
nop
loope
popa
repz
mov
std
aad
cmp
mov
xor
xor
push
xchg
test
cmp
loop
in
and
or
or
inc
and
push
and
push
arpl
dec
fwait
or
pop
lcall
popa
cmc
push
pop
push
aas
stos
sbb
push
push
mov
lret
lock
movsb
loopne
dec
mov
sub
mov
mov
mov
insl
jge
mov
xchg
fdivrs
insb
lret
stc
mov
in
inc
push
jmp
cmp
mov
xor
mov
addr16
adc
cmpsb
movsb
out
sub
orl
dec
js
cs
adc
fstpt
mov
aam
xchg
pop
xchg
mov
cmp
jle
dec
fs
stos
jecxz
cmp
cmp
mov
add
in
mov
fstp
hlt
mov
pop
in
stos
lahf
je
jns
lcall
and
fadds
daa
push
dec
out
mov
dec
add
jecxz
or
xlat
and
xor
imul
cmpsl
sbb
and
xchg
jb
aas
dec
clc
inc
testl
jp
cmp
cmp
cmp
push
push
and
cmp
cmp
push
cmc
dec
in
push
xor
lret
push
test
add
movsl
iret
lods
fldenv
adc
pop
shrb
and
pusha
mov
outsb
ret
mov
inc
xchg
call
and
mov
dec
and
aad
jo
add
imul
aad
movq
andl
in
in
sub
pop
negb
push
sbb
mov
jae
add
fldcw
xchg
data16
pop
scas
or
mov
cmp
mov
faddl
add
out
and
push
mov
xor
cltd
pop
das
dec
jb
pop
pop
data16
inc
adc
imul
inc
aad
stos
mov
mov
xchg
outsb
mov
sti
cmp
push
dec
mov
lret
and
mov
scas
popa
insb
dec
std
xorl
mov
mov
out
add
mov
icebp
push
in
mov
dec
sbb
xchg
fimuls
lods
repnz
into
dec
aaa
xor
insb
xchg
stos
add
stos
mov
ret
mov
push
push
dec
xlat
je
push
pusha
jns
push
ljmp
loope
or
mov
xchg
adc
std
test
add
cs
sub
cwtl
ret
dec
enter
std
or
imul
loop
js
pop
std
push
inc
cmp
inc
and
dec
inc
mov
mov
cmp
xor
xor
sbb
jne
xchg
or
dec
popa
divb
insb
lcall
cs
lahf
je
daa
dec
xchg
je
roll
in
dec
stos
or
loop
sbb
mov
xlat
daa
and
adc
gs
mov
inc
dec
mov
xchg
xchg
adcb
add
jl
rcrb
out
ret
lret
xor
pop
data16
sub
loope
sub
cmp
fistpll
mov
xchg
dec
mov
lahf
negb
push
imul
pop
jl
fmul
lret
xchg
add
lahf
jns
jne
daa
cmp
inc
adc
add
fsubl
inc
push
push
mov
push
cmp
mov
adc
and
rep
stc
andb
mov
lret
test
jns
bound
mov
enter
ljmp
mov
movb
loope
and
mov
stos
rcrl
xchg
int
cmp
lods
inc
in
and
movsb
aam
mov
test
inc
xchg
adc
pop
popa
out
stos
jg
xchg
and
add
fs
inc
js
test
ficomps
repz
sub
push
fbstp
push
cmc
leave
ds
xchg
scas
mov
adc
fs
mov
cmp
fsts
mov
inc
jns
or
insl
dec
mov
mov
test
fistps
sbb
fimuls
and
mov
add
cmp
mov
fbstp
fnstenv
fadds
adc
mov
mov
inc
pop
mulb
xlat
sub
icebp
fcomps
jecxz
jne
xor
aaa
mov
and
dec
push
mov
lods
add
cmpsb
xor
or
dec
sbb
lret
push
repz
popf
bound
out
jnp
dec
rorl
pop
int3
mov
loop
adc
mov
jecxz
cltd
jnp
imul
dec
test
sub
mov
adc
call
mov
mov
sub
xchg
add
out
rcr
and
inc
fildll
add
pop
mov
sub
fisubrl
dec
mov
jmp
adc
je
add
mov
add
jp
fidivl
pop
and
xor
lods
into
cmc
orb
pop
cld
dec
outsl
out
inc
fbld
ret
test
push
in
lock
in
inc
fnstenv
sub
xorl
sbb
pop
pushf
insl
arpl
lahf
mov
sbb
add
cmp
or
push
sbb
inc
loop
jb
test
add
push
cmp
adc
pusha
pop
aad
xchg
jbe
scas
mov
jne
out
nop
test
out
add
xor
push
fisubrl
xchg
adc
mov
cmp
das
into
fs
sbb
jl
lahf
stc
sub
stos
sub
aaa
int
adc
mov
dec
loop
aas
movsl
int
divb
sbb
add
pushf
lods
subl
sbb
out
ds
cmpl
fwait
ret
sub
mov
jl
test
nop
lahf
push
cmp
mov
jbe,pn
pop
jae
adc
mov
mov
andb
dec
mov
popa
popl
xchg
mov
xchg
cli
adc
pop
ret
popf
pop
xchg
sbb
fs
xor
push
int
sub
cmp
xchg
pop
popl
imul
iret
cmp
mov
xchg
cltd
mov
fcomps
add
call
push
and
xor
test
fwait
in
sub
stos
add
pop
outsl
cmp
push
xor
adc
fnstenv
cmpl
push
or
inc
dec
xchg
lret
pop
or
push
sbb
inc
adc
int
ror
scas
mov
cmp
imul
lods
arpl
and
and
les
lods
insb
in
aaa
cmc
cwtl
mov
pop
mov
adc
aam
loop
pop
lahf
jbe
vprotw
jne
adc
int
stos
mov
pop
cmp
mov
data16
rolb
les
arpl
pop
push
in
push
sbb
pop
pop
jae
xlat
sti
jg
dec
enter
or
movsl
gs
or
jnp
popa
stos
mov
jg
mov
hlt
mov
enter
fdivs
lea
cmp
push
jae
mov
push
fnstcw
mov
adc
dec
lods
add
sbb
das
push
mov
mov
push
les
dec
xchg
sarb
fildll
sub
inc
sub
stos
mov
lds
mov
out
add
lods
adc
push
adc
mov
mov
sbb
jl
and
cwtl
fwait
add
cltd
adc
sti
sub
loope
mov
in
shll
faddl
popl
sub
xchg
mov
scas
or
dec
cmp
jae
or
xlat
push
push
mov
push
xchg
inc
add
jg
fnstsw
bound
orb
cltd
cwtl
xor
add
xchg
sub
orl
scas
fidivrl
xor
aas
cmp
subl
push
stc
inc
dec
xchg
shlb
mov
popf
add
sbb
out
ret
pop
lahf
jb
lods
or
mov
xchg
pop
pop
mov
dec
addr16
shrl
bound
cmp
testb
cmp
add
and
mov
or
adc
and
mov
daa
push
leave
jae
and
dec
bound
mov
jp
ljmp
push
sub
std
add
pushf
mov
push
or
mov
loope
hlt
sbb
mov
add
imul
leave
or
mov
arpl
mov
inc
fistpl
in
ljmp
repz
adc
dec
out
test
xchg
or
add
jmp
in
sbb
rorl
fsubrs
and
jnp
movsl
dec
mov
icebp
adc
mov
xor
sbb
addl
lret
hlt
or
mov
pop
jp
mov
aaa
loope
in
fisubrl
inc
push
xor
lret
sub
int
or
sbb
insb
out
bound
mov
insb
sahf
mov
call
test
scas
mov
xchg
pop
xchg
add
push
cmpsb
stos
adc
in
add
mov
aaa
or
adc
mov
pushw
mov
or
sub
imul
icebp
call
push
es
int3
mov
mov
daa
mov
push
xchg
push
adc
negb
aam
mov
or
mov
adc
lret
gs
leave
cmp
stc
push
jmp
fstpl
add
xor
pop
xchg
sub
sbb
lods
and
sbb
add
jp
mov
adc
adc
popf
imul
jae
pop
int3
add
arpl
mov
xchg
ds
mov
imul
mov
push
ss
sub
clc
pop
fucom
mov
xor
pop
loopne
mov
dec
fs
out
push
outsl
cs
sub
sbb
shlb
mov
mov
subb
xchg
xchg
lds
lods
xchg
pop
inc
loop
lahf
adc
add
mov
cmp
scas
fsubrl
fs
xlat
jge
leave
aam
emms
jno
jl
std
push
sbbb
in
test
hlt
dec
xchg
lahf
dec
and
in
cmpsb
jecxz
insb
jl
enter
cwtl
xor
push
cwtl
or
push
mov
pop
outsb
mulb
pop
sbb
pop
xchg
or
fs
xor
jle
push
and
cs
aam
xlat
lods
fnsetpm(287
push
inc
pusha
pop
les
xchg
cld
ljmp
or
pop
xchg
xchg
lods
jl
jno
lfs
cmpsl
je
mov
pop
lods
fdivrl
aaa
push
lods
std
xchg
mov
or
cmpsw
mov
in
sarl
call
sbb
mov
push
mov
ljmp
rcrl
subb
fsubrs
mov
in
in
or
xor
xor
nop
pop
ficoms
and
lds
out
cmp
roll
pushf
pusha
sub
add
in
in
sub
push
cmp
dec
adc
movsb
adc
push
inc
or
xor
pop
or
pop
fmuls
mov
adc
sub
or
pop
cmp
xorl
pop
add
out
jo
xchg
stos
cmpsl
lock
std
stos
clc
jae
pop
je
dec
bound
je
dec
xor
add
pop
xor
repz
add
shlb
movsb
ja
fdivr
or
mov
lods
jnp
inc
mov
sub
ljmp
fimuls
sbb
mov
enter
xchg
cmpsb
scas
push
mov
xor
mov
in
js
jmp
lds
push
mov
inc
fldt
push
pop
cwtl
out
sbb
icebp
xor
aad
lret
push
mov
imul
dec
jle
lahf
shrl
pop
idivl
rdpmc
mov
aad
sbb
cmpsl
gs
sub
jae
adc
cltd
jb
movsb
in
addr16
jbe
jbe
mov
push
mov
in
xchg
push
xchg
xchg
mov
popf
enter
iret
fs
jb
cltd
test
cmp
pusha
je
outsb
xchg
clc
jno
sbb
or
sub
in
cmpl
push
sub
xchg
repnz
loop
or
ret
sub
fdiv
nop
inc
out
scas
notl
insb
das
pop
loope
sti
mov
mov
sub
clc
fnstcw
mov
add
mov
mov
es
dec
shrb
rcrl
and
lock
pop
push
cwtl
pop
push
xor
pusha
cmp
imul
je
fs
and
rcr
jmp
movsl
xlat
lret
gs
int3
push
or
mov
inc
and
mov
divl
adc
and
cs
cld
mov
jne
insl
and
ds
cs
lods
or
outsb
out
sbb
cltd
adc
inc
sahf
mov
sbb
and
in
stos
dec
jp
mov
in
mov
jg
sahf
and
or
lds
insb
cmp
cwtl
lods
dec
out
adc
mov
insb
lock
mov
push
cmp
xchg
sbb
mov
dec
sub
adc
mov
aam
popa
or
cs
das
mov
ret
outsl
sti
leave
sbb
shrl
mov
hlt
scas
adc
mov
gs
dec
dec
xchg
sub
lods
or
arpl
dec
cltd
and
pop
mov
adc
int3
xchg
jge
jnp
les
push
out
dec
jle
cmc
sbb
imul
cmp
push
cmpl
pop
xor
lds
bnd
sub
fnstenv
shll
dec
into
cmc
and
std
dec
outsl
fs
xchg
push
shl
jl
push
inc
xchg
out
test
add
movsl
sub
sub
xchg
loopne
loop
ficoml
mov
xchg
push
leave
cwtl
or
sub
adc
fdivrp
in
loope
sub
mov
lcall
lret
sub
pop
out
outsl
data16
mov
dec
jo
dec
mov
lret
bound
jns
add
inc
and
shlb
lods
insb
lahf
xchg
jbe
out
in
nop
out
sar
xor
out
in
sbb
mov
cmp
mov
outsl
dec
outsb
xchg
das
loop
pop
imul
adc
mov
test
push
jmp
rorl
lret
mov
dec
es
xchg
data16
ss
xchg
pusha
std
pop
xchg
xorl
cs
jp
pop
lds
or
jo
inc
mul
arpl
rcl
adc
jg
mov
ja
mov
cmp
pushf
inc
jp
xor
sbbb
push
lods
dec
test
out
lea
idiv
sub
or
out
es
mov
popf
loope
jne
shl
push
push
sbb
fimull
das
js
call
mov
loop
mov
xchg
sbb
dec
jo
leave
or
stos
jnp
mov
mull
add
add
out
xchg
fistpl
test
jns
sbb
jecxz
mov
and
mov
sub
add
inc
js
adc
dec
in
ret
and
sbb
cltd
jecxz
out
inc
int
pop
xchg
pop
ljmp
mov
int3
adc
repnz
mov
pop
fbstp
push
gs
jmp
xchg
sub
dec
push
aad
in
jb
sbb
hlt
mov
and
mov
adc
add
addr16
mov
bound
testl
push
mov
push
jne
ss
mov
add
sbb
jecxz
pop
test
arpl
outsb
call
in
mov
int3
call
cmc
or
outsl
es
pop
or
lock
addr16
inc
pop
add
je
add
test
data16
push
ficomps
sbb
stos
inc
sbb
mov
stos
bound
shr
xor
or
aaa
cmovg
or
inc
and
mov
xchg
shlb
adc
inc
das
pop
outsb
ja
out
inc
stos
shlb
mov
clc
jle
add
fisubl
inc
subb
rorl
cmp
mov
xchg
push
call
add
xor
cmp
sahf
jge
add
mov
add
outsb
enter
gs
stos
insl
fcmovbe
and
xor
dec
ljmp
push
imul
arpl
fnsave
fs
xchg
and
lea
dec
mov
out
add
sub
xchg
test
je
cltd
sbb
adc
mov
call
hlt
js
or
sbb
dec
repnz
mov
jae
mov
push
lret
sbb
mov
test
js
loopne
in
fidivl
xchg
pop
lods
das
in
push
dec
cmp
jo
outsl
popf
iret
sbb
ja
idivb
ror
out
mov
jno
inc
gs
inc
frstor
in
scas
loope
mov
test
push
fxam
xchg
push
mov
inc
or
add
push
xorb
xor
stos
in
aaa
mov
subb
jle
jle
div
divl
aas
add
add
call
cmpl
popf
insl
xor
pop
push
cwtl
mov
xor
sar
loope
mov
and
pop
nop
in
jbe
cmp
push
pop
scas
popa
fstpl
lret
mov
jl
jne
faddl
inc
icebp
fisubl
jle
add
in
lds
aaa
test
arpl
out
pop
in
mov
mov
mov
xchg
or
fdivrl
and
ror
ret
mov
jle
aad
push
ret
ljmp
and
arpl
into
mov
push
imul
imul
fsts
clc
jns
cmp
lods
mov
jno
icebp
fs
hlt
sbb
mov
adc
div
cmp
ljmp
call
jno,pn
js
and
pop
test
jns
xor
ss
add
ljmp
loop
or
sub
out
mov
rcrb
nop
or
jnp
mov
inc
and
jge
push
and
movsl
rclb
sub
pop
lds
sete
orb
sub
xchg
dec
and
repnz
in
cmp
mov
int
mov
add
xor
inc
or
push
cmp
cmp
loop
icebp
loop
subb
mov
mov
push
mov
pop
aad
cmc
xchg
jbe
in
ljmp
test
fsubrs
and
inc
xchg
pop
mov
es
adc
lods
cli
movsb
stos
jbe
or
xor
movsl
sbb
test
scas
cwtl
mov
insb
cmp
stos
jae
inc
push
mov
lock
add
mov
inc
add
mov
in
divb
mov
push
jne
or
stc
sbb
insb
and
loope
push
jmp
cmpsb
pop
insb
daa
movsl
adc
out
dec
je
mul
out
shlb
xor
sti
cmp
mov
out
mov
adc
dec
push
out
loopne
and
push
mov
int
mov
mov
lret
sarl
push
cwtl
mov
and
push
mull
or
arpl
cld
sub
mov
xor
out
dec
mov
aaa
nop
jbe
ret
sbb
mov
test
es
leave
fbstp
pop
dec
pop
jno
hlt
pop
dec
mov
iret
adc
stc
popf
arpl
lar
fbstp
in
sbb
ljmp
adc
mov
icebp
mov
test
mov
sub
outsb
jae
cmpsb
dec
xor
enter
inc
out
and
incl
stc
and
jg
daa
pushf
sti
pop
pop
adc
inc
loop
jg
push
add
call
ficoml
and
imul
mov
and
jle
or
fwait
cmp
xor
lret
loop
push
and
mov
daa
cmpsl
aad
out
rorb
jne
enter
fisubl
cld
inc
or
jnp
sbb
xchg
rolb
sar
sbb
sbb
jne
ja
repnz
mov
mov
cs
mov
or
out
push
lcall
sti
mov
sti
cmpsl
aas
mov
sbbl
fildll
shll
in
and
lock
test
push
sbb
mov
dec
xchg
repz
sbb
inc
fs
cmp
out
jnp
push
pop
sub
cmc
jg
jmp
adc
fists
aam
movsb
js
mov
mov
bnd
lret
mov
cmp
imul
je
inc
gs
adc
fsubl
pop
adc
xchg
stos
int
into
shll
xchg
int
push
lret
cmp
mov
std
inc
mov
mul
ret
adc
push
inc
push
push
mov
ljmp
cld
stos
pop
xchg
xchg
mov
out
je
mov
sub
dec
push
pushf
add
stc
iret
pop
loop
mov
dec
mov
pop
or
push
mov
sarb
push
add
mov
jbe
cmp
xor
sahf
jae
nop
dec
inc
pop
es
sahf
pop
shrl
das
or
idivl
sub
test
lock
arpl
loopne
xor
and
shl
cwtl
pop
incl
mov
cwtl
mov
sbb
cmp
mov
fstl
loop
xchg
popa
cmp
push
jecxz
add
sub
jnp
test
popf
lods
idivb
leave
ret
ret
mov
cmp
sbb
sti
pop
outsl
stc
or
jmp
loopne
inc
mov
repz
nop
addl
add
pop
aaa
mov
das
jb
sub
cmpb
fwait
fwait
shl
jge
inc
jns
shr
pop
ret
nop
mov
stos
insb
sbb
loope
pop
cmpsb
jne
stc
enter
or
mov
adc
xchg
xchg
or
mov
add
mov
shrl
addl
jl
inc
xchg
call
in
adc
icebp
sub
xor
mov
cmp
movsb
scas
stos
and
cmp
adc
inc
out
stc
dec
rolb
cltd
push
push
mov
sbb
cmp
cwtl
pop
lret
cmp
and
jno
mov
sbb
pushf
pop
inc
bound
inc
loop
or
test
mov
push
mov
mov
lods
cltd
jmp
push
shrl
mov
lret
lds
xor
idivl
sub
jge
xor
jbe
cltd
xlat
mov
outsb
sub
pushf
call
push
dec
daa
pop
push
and
orb
sub
lret
test
repz
aas
fwait
lcall
popf
roll
iret
outsl
data16
push
js
int3
fistpl
orb
inc
pop
into
repz
mov
js
fldl
in
xchg
lahf
cmpsl
stc
mov
test
push
push
and
sub
sub
call
shll
arpl
dec
call
pop
mov
fildl
cmp
fdivrs
rcr
sbb
stc
int
out
pushf
int3
ja
es
test
insl
in
xor
dec
mov
xchg
fs
clc
daa
push
sub
bound
cs
inc
cwtl
stos
sub
enter
subl
movsl
push
cs
lret
xor
jmp
pop
jns
gs
dec
xor
jbe
mov
imul
mov
test
into
xor
sub
ret
stos
fstpl
xchg
ljmp
xchg
xor
imul
leave
xor
sbb
sbb
jb
scas
clc
jge
sbb
jg
pusha
or
addb
sbb
fimull
mov
loope
loopne
add
jp
dec
jle
dec
sub
push
sbb
js
or
and
dec
fnsave
pop
loopne
mov
cmp
insb
xchg
leave
push
push
dec
dec
adc
das
fidivrl
jnp
aam
call
jbe
out
push
sub
imul
xor
pop
test
sbb
js
nop
bound
mov
out
xchg
inc
test
mov
and
call
jmp
xor
scas
jecxz
mov
push
mov
mov
int3
inc
xchg
jg
int
adc
lds
arpl
int3
xchg
pop
dec
pushf
lock
push
bound
and
and
mov
mov
loop
xor
push
popw
test
xchg
xchg
xchg
mov
out
out
enter
dec
lret
jg
movsl
jg
jmp
jp
iret
pop
add
aam
popf
cmpsl
adc
inc
jb
inc
call
mov
lret
and
pusha
dec
xor
fwait
je,pt
out
test
sarl
inc
pop
test
or
jo
mov
int3
adc
adc
incl
mov
outsb
jbe
add
testb
mov
lods
push
mov
fsubs
test
lea
pop
lcall
mov
stos
sbb
fisubs
push
sub
sbb
mov
xor
call
jne
dec
lock
xchg
cmp
sub
bnd
mov
mov
jg
jo
jge
cld
mov
sub
imul
movsl
into
add
cmp
or
daa
xlat
leave
out
leave
das
pushf
pop
rcll
add
movsb
jno
fs
jne
movsl
pop
sbb
lock
xchg
movsl
mov
fmuls
rorb
xlat
jl
enter
shrb
dec
and
pusha
popa
xchg
push
and
xor
xchg
shrl
fstps
pop
cli
in
and
sub
pusha
adc
mov
push
ret
enter
mov
fmuls
mov
orl
xor
ret
orb
mov
lea
xchg
ror
jnp
in
pushf
xor
mov
ja
sub
popf
xlat
pop
cmp
xor
daa
jmp
sub
clc
lods
ss
cmp
lret
fdivrs
inc
xor
xchg
push
out
pop
dec
adcl
cmp
sub
cmp
mov
mov
nop
and
pop
push
mov
push
rcl
nop
pop
cltd
jle
xchg
clc
pop
imul
je
push
ljmp
vpmulhw
mov
pop
pop
lcall
jmp
mov
popa
arpl
pushf
cmpsb
inc
cmpb
dec
sahf
in
leave
nop
sbb
test
and
adc
das
mov
lcall
and
ja
jp
xor
cli
scas
outsl
cmc
clc
adc
mov
mov
add
data16
sbb
je
je
lahf
cmp
rorl
int
or
movsl
pop
icebp
pop
adc
shll
xor
xor
mov
mov
cmc
pop
sbb
lock
mov
imul
or
in
divb
lods
jmp
add
jp
rorl
mov
push
sub
mov
imulb
loop
mov
cmp
xlat
inc
adc
out
push
pop
loopne
fs
repnz
dec
fucomi
lods
pop
pop
call
test
fistps
jle
stos
in
sahf
pop
pop
roll
iret
fists
ds
imul
sub
inc
pop
addr16
scas
fdivs
loope
pop
dec
pop
push
movsb
scas
push
sub
push
shlb
sub
les
repz
adc
mov
push
xchg
mov
jge
mov
jg
jne
int
ret
shlb
sarl
test
adc
int
xor
dec
xor
test
xchg
fistl
sbb
xor
adc
push
aam
xor
pushf
mov
mov
pop
lock
mov
push
ficoms
ljmp
nop
ret
es
and
xchg
mov
cmp
into
loopne
pop
sbb
sub
jle
insb
push
xchg
mov
sub
inc
sub
mov
mov
pop
mov
mov
push
addl
inc
dec
pop
lahf
xchg
add
movl
xorb
loopne
adc
xchg
jbe
sbb
mov
aam
push
sub
test
in
sub
sbb
inc
out
mov
adc
pusha
lock
out
cmpl
push
popf
int3
enter
hlt
out
int3
dec
mov
jno
incl
push
cmp
adc
add
lfs
and
or
stos
jae
sti
fsubrl
cltd
mov
out
test
call
int3
neg
imul
pop
and
add
xchg
stc
aad
out
xchg
inc
insb
aas
sbb
sub
shrl
pop
mov
shlb
ss
sahf
mov
pop
andb
xchg
add
scas
mov
add
jecxz
fidivl
std
insb
sbb
aaa
ret
mov
shr
int
mov
ljmp
pushf
movsb
jbe
xor
jmp
scas
push
es
jl
lret
gs
sub
fyl2xp1
pop
clc
xorl
dec
pusha
sti
adc
sbb
nop
dec
mov
jo
dec
leave
mov
test
push
add
fdivrl
push
lock
stos
push
inc
fwait
pushf
test
je
rol
push
push
xorl
shr
xchg
and
mov
and
adcl
xchg
jo
dec
pusha
sbb
mov
lea
xchg
mov
test
or
xchg
test
int
js
sub
mov
lret
cmp
fadd
adc
mov
push
aam
mov
jmp
add
pop
cmp
loop
sub
orl
dec
dec
xchg
cmp
inc
loopne
mov
out
dec
mov
cmpsb
xchg
pop
xor
pop
jne
lods
pop
aaa
push
inc
cmp
inc
cmp
sbb
jmp
jne
add
stc
fstpt
jmp
sti
or
cmc
loope
dec
or
mov
mov
mov
jmp
inc
cmp
fdiv
mov
dec
movups
das
out
dec
stos
cmp
incl
add
movsl
mov
or
add
pop
mov
mov
or
les
pop
cmp
jp
dec
popf
movsb
sbb
fisubl
mov
mov
std
mov
out
jae
push
iret
adc
cmp
adc
sbb
adcl
int
inc
and
rolb
dec
cltd
cltd
ss
stos
imul
daa
cmovo
xlat
jl
dec
clc
loopne
pop
adc
adc
add
fisubl
sub
lods
test
movsb
pop
mov
push
test
repnz
or
or
mov
jne
mov
dec
addr16
or
insb
scas
push
xchg
sub
bound
in
loope
xor
outsb
mov
mov
mov
pop
mov
lods
push
sbb
cmp
sahf
testl
add
cwtl
mov
inc
jecxz
stos
cmp
jmp
pop
xor
sbb
aad
xchg
xor
sbb
lds
movsb
sysenter
nop
jecxz
sbb
loop
frstor
scas
xor
add
scas
in
xor
loope
jge
cs
jo
push
lods
in
cmp
shrb
sub
sub
xor
cld
outsb
fsubs
ja
test
roll
adc
pop
xor
xchg
roll
repz
notl
or
sti
mov
mov
adc
in
dec
jecxz
and
jle
into
mov
imul
sub
jg
imul
lods
add
sbb
push
inc
or
cmpsb
mov
cmp
shr
cmp
scas
loopne
les
pop
fistl
rorl
cld
xor
jae
mov
xlat
je
pop
shlb
xchg
xorb
mov
lds
lret
cmpsb
test
das
xchg
orl
dec
addr16
fcoms
jl
lahf
push
in
dec
mov
add
es
xor
test
cli
lahf
test
shrl
xchg
or
xor
add
and
jb
test
and
loop
fwait
or
jno
dec
cld
loopne
shrl
pop
aam
pop
mov
cs
pop
out
xchg
sbb
mov
cli
fucom
fisubrl
sar
aad
iret
scas
and
xor
add
inc
repnz
aam
xor
dec
repz
int
cltd
in
repz
push
lds
fbld
aad
mov
dec
int
leave
xchg
mov
int3
or
jmp
lret
sar
xor
es
lds
int
lods
call
nop
push
inc
jb
push
popa
fwait
mov
mov
outsl
rorl
lret
mov
pop
addr16
inc
mov
shrl
adc
add
cmpsb
push
cltd
add
stos
and
out
addr16
sbb
in
in
repz
xlat
add
int
rcr
xor
out
dec
ljmp
sbbl
jl
int3
and
and
mov
call
stos
sub
scas
movsb
popf
mov
pop
inc
push
andb
addr16
adc
pop
push
push
pop
pop
out
imul
js
push
dec
jp
daa
daa
adc
imul
mov
xchg
lock
sbb
sub
push
push
aaa
aas
loope
mov
jo
sbb
cmpsl
mov
jns
and
push
testb
add
or
push
dec
cmp
jge
filds
loop
in
popl
pop
xor
dec
loop
addr16
data16
outsl
shrl
xlat
adc
lods
ficompl
mov
xchg
xor
and
icebp
jae
insl
in
pop
into
cmp
aad
outsb
mov
mov
xchg
and
lret
adc
lea
adc
sub
sub
loop
mov
or
mov
mov
cmc
add
test
cmp
test
enter
in
add
xor
es
jae
add
lock
xchg
mov
cmpsl
test
xor
pop
inc
push
xchg
jbe
out
cmp
into
mov
ret
insl
imul
xor
dec
inc
imul
pinsrw
push
add
mov
and
adcb
stos
cmp
loop
xor
mov
jo
mov
arpl
sbb
ja
fidivrl
push
push
cmp
xchg
mov
inc
lods
mov
cmp
mov
mov
cmpsl
xchg
push
std
push
inc
jns
aas
call
or
inc
out
xchg
cmpb
test
mov
mov
outsl
cli
push
xchg
mov
adc
jne
cmp
jne
fisttps
in
cmc
sahf
cmpl
dec
movsl
pop
je
push
aad
cmpl
pusha
aas
ljmp
pop
xchg
sbb
loop
in
daa
loopne
ret
or
scas
lret
sub
dec
sarb
stos
nop
aad
xchg
sahf
lea
movsl
mov
icebp
dec
xchg
loop
xor
mov
push
mov
dec
idivb
push
adc
lods
je
cmp
adc
ja
outsb
jns
ja
fidivrs
pop
lcall
push
push
push
mov
pusha
mov
jecxz
push
lods
cmp
cmp
lock
sbb
cmpsl
push
push
in
xchg
je
call
lods
mov
es
popf
push
mov
mov
pop
inc
sub
cwtl
jl
and
cmp
adc
cmp
pop
mov
push
outsb
mov
push
jg
jmp
and
test
mov
in
dec
daa
xchg
imul
outsl
shlb
mov
cmp
sbb
sbb
dec
cmp
das
cmp
js
adc
popa
fiadds
shll
push
shll
loopne
shl
jecxz
dec
or
clc
ficoml
test
js
jb
add
iret
fdivr
mov
push
sbb
mov
cltd
jae
fsts
lock
cmp
loopne
fs
ljmp
shll
fiaddl
jnp
jl,pn
mov
jg
adc
add
mov
cmc
inc
push
mov
adc
clc
out
mov
clc
fwait
dec
dec
out
repz
pop
inc
or
lret
mov
inc
lret
adc
dec
in
xor
int3
xchg
scas
pop
pop
cmpsb
add
stos
popa
inc
sub
loop
mov
mov
int3
jge
adc
push
mov
push
add
sahf
add
inc
in
and
test
loop
gs
pop
xchg
mov
sub
mov
out
dec
out
aam
stos
or
fucomi
adc
lods
sbb
repnz
dec
outsb
mov
xlat
pop
stos
adc
imulb
mov
push
movsb
adc
leave
xor
aaa
push
lds
jnp
add
std
add
fwait
lret
aam
nop
data16
scas
clc
pop
icebp
or
and
mov
and
dec
mov
outsb
loopne
push
xor
das
jle
test
neg
sub
mov
sbbl
stc
popa
push
insb
jecxz
push
pop
xor
mov
insl
jecxz
std
cmpsl
mov
lods
sbb
pusha
add
bound
and
pop
inc
bound
push
enter
pop
and
cmp
add
loopne
push
adc
adc
loope
jl
adc
es
mov
mov
aad
lret
mov
jns
sbb
clc
lahf
mov
mov
aam
fmul
fs
cwtl
push
mov
stos
mov
rclb
and
iret
jecxz
sbb
xor
cmp
push
xchg
mov
aam
test
mov
jle
lcall
cmp
adcb
repnz
pop
push
pop
dec
lods
sbb
ljmp
sti
repz
dec
andb
test
add
xchg
mov
inc
pusha
push
fistl
gs
push
roll
pop
scas
sub
sub
sub
xor
add
sub
leave
imul
sbb
or
cmpsl
lcall
add
push
pop
mov
mov
jb
sarb
mov
jge
xchg
jp
jo
push
mov
pop
out
lods
dec
xor
push
mov
mov
push
jbe
adc
and
popa
add
adc
lret
jp
sub
add
inc
or
xchg
mov
cmp
ja
fwait
add
daa
push
shrl
dec
mov
outsl
sub
cmp
rcll
pop
ds
test
cli
sub
jb
cmp
bound
mov
cmpsl
push
and
addb
cmp
jmp
mov
rclb
test
in
mov
je
pop
popf
cmp
rorl
adc
and
push
lahf
gs
push
jae
scas
mov
in
jecxz
das
mov
in
push
mov
das
add
icebp
mov
mov
addl
add
mov
nop
cmp
mov
loop
test
ja
inc
dec
clc
rclb
scas
subb
pushf
je
outsl
pop
imul
jmp
lret
xchg
je
outsb
pop
movsl
sub
ja
or
cltd
jecxz
out
sarb
lret
movsb
movsb
idivb
lret
sub
dec
mov
push
mov
cmp
and
xlat
rcl
ret
or
xor
adc
pop
mov
test
ljmp
inc
mov
jae
ja
stos
mov
xchg
push
cmp
xlat
adc
adc
mov
lcall
stos
leave
insb
stc
add
mov
push
loopne
xchg
add
mov
cmpb
enter
push
jp
test
ljmp
mov
mov
jp
and
call
or
int3
lods
scas
lret
aaa
adc
and
mov
jmp
mov
std
ficomps
dec
xor
out
mov
rcr
je
push
push
cmp
ret
sub
push
adc
sub
imul
cmp
repz
mov
js
adc
jbe
xor
xlat
push
jae
into
jns
test
dec
inc
cmp
shrl
mov
rcrl
sbb
pop
mov
arpl
testl
xchg
add
cmp
cmp
sar
sarl
stos
stos
fnsave
xchg
repz
cwtl
mov
dec
sbb
mov
push
aas
cmp
jmp
or
pop
jbe
dec
jle
sbb
movsb
sbb
imul
mov
adc
xchg
inc
mov
jp
into
fnstsw
cmp
loop
mov
stc
faddl
cmpsb
dec
call
rorl
push
jnp
pop
jp
xchg
push
add
jne
sub
pop
xchg
pop
or
fwait
inc
pop
lock
push
repz
arpl
xchg
xor
mul
in
or
out
jb
sub
in
das
movsl
scas
or
pop
ret
and
xchg
cmp
sbb
inc
and
shll
ja
adc
es
mov
sbb
cwtl
pop
mov
jo
pop
add
aas
lret
and
cwtl
pushf
xchg
pop
pop
leave
xchg
adc
mov
push
sar
popa
push
fmull
adc
mov
jle
or
mov
leave
es
dec
stos
lods
imul
movups
sub
lcall
lret
aad
add
sub
ds
jp
and
mov
adc
lods
dec
ja
repz
inc
je
ret
jb
js
mov
cs
jae
nop
rolb
test
gs
sbb
mov
lds
dec
sbbb
test
stc
nop
ds
xchg
jl
inc
std
int
jl
push
in
inc
test
insb
inc
push
mov
fisubl
cmc
and
push
jecxz
add
sti
rorb
les
push
daa
cwtl
stos
adc
xchg
aaa
jg
push
daa
mov
sub
or
loop
xchg
insl
lcall
xor
fidivrl
scas
sub
gs
push
mov
jb
cmp
bndstx
in
jnp
and
xchg
inc
in
les
pop
aad
rdtsc
popf
push
jb
bound
jb
imul
xchg
jg
pusha
inc
ja
dec
mov
pop
cwtl
xchg
mov
into
scas
inc
pop
imul
mov
mov
js
dec
and
and
mov
loopne
jg
or
outsb
insb
pop
xchg
test
pop
clc
int3
lods
std
test
cwtl
lahf
inc
subb
push
inc
dec
insl
jbe
jmp
jbe
out
cmp
cmpsb
sarl
mov
jb
out
sarl
dec
xor
shrl
jb
xor
mov
jg
shr
pop
sub
in
dec
jns
inc
je
sarl
fidivrs
push
xor
fs
xor
sub
mov
movsl
jp
xchg
roll
jbe
and
addb
pop
push
pop
pop
xchg
imul
fadd
sbb
adc
insb
push
in
dec
popf
data16
fistl
insl
es
sbb
lahf
rcrb
mov
cs
mov
bound
mov
lcall
lret
xchg
rcrl
xchg
mov
int
leave
push
cmp
test
outsl
sarb
aad
in
bndstx
mov
out
push
and
nop
and
or
in
dec
xchg
mov
inc
adc
adc
lahf
mov
scas
je
add
adc
mov
sub
xchg
mov
je
sbb
jb
mov
mov
es
dec
jno
sbbl
sub
push
mov
inc
dec
and
lahf
loope
cmp
add
andl
jb
fucomp
fs
pop
mull
xchg
jbe
and
pop
and
mov
lret
js
sbb
sarl
adc
and
sbb
fwait
or
popf
pop
mov
mov
and
lret
nop
iret
xchg
pop
pusha
mov
lods
push
out
mov
pop
xchg
loop
push
and
inc
jl
jno
andb
sbb
push
pop
or
mov
cmp
fmuls
jnp
push
inc
sub
arpl
popa
jl
mov
loopne
ss
sbb
jae
jmp
or
sbb
pop
incl
xchg
mov
and
pushl
cmp
jb
out
sbb
iret
xchg
push
mov
inc
cli
inc
gs
std
cwtl
and
xchg
mov
jle
cs
cs
lret
nop
loop
sub
in
add
js
cmpb
push
ja
or
jl
pusha
xchg
mov
xchg
adc
ret
cltd
imul
fcoms
sbb
push
test
stos
and
sub
shl
jb
mov
sti
pop
scas
fidivs
pop
sbb
push
insb
lahf
mov
push
pusha
or
out
mov
sahf
mov
insl
mov
mov
push
sub
jno
sub
lret
sbb
jmp
shlb
push
cs
out
inc
cwtl
inc
xor
sbbl
cmp
pop
push
enter
imul
xchg
pop
or
xchg
sbb
out
pop
pop
ficomps
cltd
scas
jge
pop
sub
inc
sub
push
adc
in
jecxz
cli
icebp
das
jbe
mov
lcall
inc
ss
xchg
sub
cmp
xchg
pop
and
pusha
movsb
xchg
push
testb
fildl
or
cmpps
call
nop
sbb
jecxz
cmpsb
xor
add
scas
adc
push
repz
push
lret
cli
push
fnstcw
repz
jmp
sbb
sub
ss
arpl
add
mov
nop
pop
in
lcall
pop
fadd
lahf
lods
mov
jmp
cmp
lahf
leave
pushw
cmc
outsb
jne
andl
mov
cmovl
sahf
lret
rclb
inc
jp
mov
test
test
scas
or
ja
fisubs
pop
sbb
mov
add
cmp
icebp
lahf
adc
aad
cmp
lcall
inc
and
popfw
jmp
sbbl
test
pop
fnstcw
mov
dec
pop
xor
gs
testl
addr16
push
xchg
aaa
aas
jae
jle
aam
inc
dec
and
dec
pop
ror
adc
dec
mov
in
out
js
imul
fst
ss
inc
scas
je,pn
dec
and
push
lods
test
popa
jge
and
pop
lcall
inc
aas
sbb
cmp
sbb
lcall
adc
push
out
rclb
repz
mov
ds
je
loop
rclb
push
inc
mov
mov
push
cmp
dec
lods
das
and
add
pop
out
push
adc
cmc
ss
sbb
jno
in
pop
pop
adc
filds
push
push
push
lea
repz
inc
cltd
lods
lret
inc
mov
aam
adc
dec
dec
sahf
data16
and
or
push
fxch
mov
add
xor
stos
jns
mov
test
ja
outsl
cmc
adc
ja
pusha
or
sub
jne
stc
into
mov
cltd
out
sbb
or
in
mov
xor
jne
pop
inc
inc
inc
hlt
in
call
in
dec
sarl
lods
sbb
cmp
push
rcrb
pop
cmpb
repnz
xchg
in
dec
cmc
cmp
clc
out
mov
push
aam
pushf
out
dec
mov
xchg
lods
nop
test
jg
subl
ret
push
in
iret
insb
sub
jmp
cmp
dec
bound
scas
push
inc
fisubl
test
pop
fwait
cmp
loopne
fisubrs
jns
xchg
mov
ljmp
mov
adc
dec
adc
mov
iret
daa
or
pop
les
sahf
insl
inc
jmp
add
cwtl
sub
insl
pop
and
loope
mov
mov
movsl
mov
adc
test
repz
ss
ss
mov
xor
cltd
push
inc
sbb
loopne
cwtl
lock
xchg
fisttpl
xchg
ds
adc
or
mov
pop
das
les
push
mov
insl
popf
pop
das
sub
mov
sbb
pop
fists
adc
lods
or
sub
aaa
fldcw
arpl
cmp
pop
jo
test
adc
lret
xchg
orb
jge
lock
mov
rcrb
jecxz
cwtl
jp
fs
scas
fs
push
and
lods
mov
xchg
sbb
mov
xchg
pop
jo
dec
mov
mov
ds
int3
hlt
sbb
and
mov
push
or
inc
lahf
in
rorl
xorl
out
inc
cs
fists
mov
mov
push
cmpsl
ja
loopne
mov
sub
inc
adc
aaa
loopne
test
cmp
lods
imul
mov
xlat
stc
addr16
inc
arpl
in
add
aam
add
loope
jp
das
sub
and
dec
data16
jno
sti
and
fidivrs
or
pop
cli
jp
rclb
sti
mov
jp
clc
push
push
or
out
dec
push
push
test
mov
insb
inc
movsl
outsl
fdivr
les
test
jnp
and
mov
cmp
push
sub
sub
mov
mov
push
jbe
lahf
add
cmp
pop
flds
idivb
lods
daa
xlat
or
mov
pop
mov
jg
sub
sbb
xchg
mov
mov
jns
sbb
daa
add
jmp
nop
cltd
test
inc
sub
fsubl
test
xor
mov
pop
pop
addr16
lock
popa
inc
jo
or
loop
push
xchg
cmp
xchg
lock
test
sub
rep
cmp
or
enter
jne
or
stos
push
je
lahf
adc
faddl
scas
jb
sbb
movsb
xchg
mov
cmpb
ljmp
mov
dec
gs
scas
mov
into
aam
mov
gs
or
adc
lods
pop
add
je
imul
jecxz
lahf
mov
dec
out
pushf
loopne
and
shrb
xor
add
inc
push
adc
jecxz
mov
cld
push
outsl
faddl
adc
mov
mov
data16
test
mov
adc
and
adc
cld
enter
ret
inc
xchg
cmpsl
nop
adc
arpl
outsb
xchg
addl
adc
jne
rcll
mov
mov
aaa
mov
or
jb
mov
ss
mov
aam
mov
cltd
jbe
rcrl
push
mov
mov
push
cmpb
incb
push
je
out
mov
pop
in
mov
call
loopne
or
sbb
cmpb
lea
mov
sub
jecxz
rorl
mov
jne
popa
pop
mov
ds
cmpb
addr16
call
int
hlt
mov
pop
test
sub
jbe
loop
scas
das
out
pop
push
ror
and
pop
adc
push
cmp
xchg
pop
xor
out
pop
cmp
fildll
mov
xchg
aad
jle
mov
cs
jmp
sub
loopne
inc
cmp
xor
sub
jmp
mov
rcl
pop
addr16
xchg
cmpsb
jge
pop
push
aas
jg
sbb
stos
adc
scas
jge
pop
xchg
lret
mov
push
cmpsl
shll
repz
sub
sub
push
and
sarb
push
mov
xchg
repz
mov
jo
ja
and
jmp
dec
xor
jo
xlat
int3
jb
adc
and
stos
sbb
push
out
xchg
mov
loopne
movsb
fsubs
aaa
dec
clc
cmp
sub
out
inc
rol
mov
cltd
add
inc
pushf
jae
lods
jnp
leave
divl
in
outsl
mov
xchg
dec
jl
fidivrl
inc
cmpsl
cmp
mov
stos
fdiv
push
jecxz
mov
in
cmp
dec
mov
movsb
push
hlt
dec
mov
test
adc
andl
cmpb
int3
inc
xchg
cwtl
pop
mov
adc
or
lods
sahf
cmp
add
lret
cwtl
jge
in
adc
jne
stos
push
jno
movsb
or
push
mov
lods
xor
lea
xchg
sub
lods
and
sub
xchg
lret
pop
ja
push
mov
lahf
cmc
or
faddl
mov
int
fcmovnbe
shl
mov
add
xor
adcb
mov
in
imull
xchg
rclb
mov
pushf
pop
inc
lods
mov
xor
mov
jp
inc
loop
cld
pop
test
loope
popa
fs
pusha
xlat
sub
mov
pushf
testl
je
icebp
jg
out
inc
adc
mov
ljmp
icebp
repnz
push
std
fistpll
mov
inc
pop
fdivrl
adc
jp
bound
mov
push
xchg
cmp
dec
leave
scas
stos
xchg
cli
lea
mov
jmp
xor
push
add
rcrb
jns
push
cltd
nop
mov
jmp
pop
inc
mov
inc
jmp
bound
ljmp
fldl
pop
imul
xor
cmpsl
or
adc
mov
cmpsb
lds
stos
mov
cmp
test
or
xor
pop
incb
add
mov
popf
lock
inc
loope
cmp
sbb
pop
out
lock
test
imul
adc
scas
xor
enter
outsl
mov
mov
movsl
out
dec
imul
mulb
scas
pop
fidivrs
xchg
enter
xchg
push
icebp
les
xchg
shrl
dec
clc
cmpsb
outsb
push
jne
mov
dec
mov
mov
inc
xchg
adc
movsl
es
cmpsb
push
imul
pop
add
test
jle
inc
stc
popa
mov
push
jnp
repz
scas
cmpsb
notb
push
jnp
mov
or
jl
xor
adc
push
flds
aam
lahf
mov
mov
idivl
xchg
shr
int
sbb
sub
pop
jno
js
cs
xor
xor
jns
or
pop
out
iret
mov
les
popf
icebp
mov
ret
sti
sub
lods
mov
out
rclb
stos
cmp
add
jo
fcmovbe
outsl
lret
inc
fstl
mov
cmp
ret
jg
mov
insl
repz
mov
sbb
aad
jb
test
icebp
adc
mov
in
icebp
mov
push
mov
cmpsb
mov
iret
push
xor
and
jmp
xorb
pop
jmp
arpl
push
dec
imul
mov
xchg
push
push
xor
xor
push
cmp
pop
jecxz
mov
mov
and
iret
inc
mov
cld
test
out
jbe
or
sysexit
lods
push
xchg
lock
sub
mov
push
add
ss
inc
push
je
pop
pop
sub
outsl
jg
add
mov
outsl
push
gs
int3
lock
dec
xlat
int
inc
adc
leave
xchg
pushf
jae
sti
jmp
js
lret
pop
mov
ficoml
mov
adc
in
push
add
fwait
add
fcomps
push
pop
dec
push
cmp
cmpsb
ret
jecxz
dec
out
callw
mov
add
mov
enter
cmp
adc
jl
dec
sbb
mov
ds
stc
sub
imul
jno
hlt
jg
inc
mov
inc
imul
stos
mov
cmp
aaa
pusha
mov
push
addr16
jecxz
adc
icebp
dec
jns
fdivrl
push
or
div
dec
sub
push
jo
and
or
dec
pop
in
jb
cmpsb
shl
je
jle
aaa
mov
jmp
xlat
ja
push
or
push
push
icebp
clc
pusha
xchg
sbb
rol
inc
cmpb
inc
lods
cmpsb
stc
sub
sub
pusha
add
insl
push
adc
cmpsb
adc
and
popa
lcall
cmp
outsl
sbb
repnz
mov
or
cltd
pop
cmp
adc
push
and
xor
mov
inc
jle
pop
scas
sti
test
call
push
mov
dec
aas
iret
xchg
movsl
sbb
push
cld
out
dec
sub
push
mov
cmp
shll
mov
cltd
lahf
xchg
inc
pop
mov
and
inc
jge
jno
das
insl
xor
push
or
stc
mov
add
pop
jecxz
push
in
adc
add
rcrl
movsl
sbb
loop
fwait
dec
enter
push
aaa
arpl
std
xchg
or
stc
out
push
xor
fidivs
in
push
xor
daa
aad
lods
xchg
pushf
stc
test
push
or
mov
jb
mov
cltd
xchg
cld
adc
cmp
rep
pop
fistpll
sbb
cmp
mov
fwait
cmpsl
adc
lods
sbb
xchg
popf
push
inc
or
lods
mov
and
popf
dec
fisubrl
adc
mov
xchg
push
int
mov
jne
jl
jl
pop
loope
xchg
fisubl
cltd
ret
es
dec
call
push
ret
sahf
and
jne
adc
push
loope
push
and
rorb
in
cmp
push
rolb
inc
pop
loopne
sti
jl
sub
push
push
mov
sbb
inc
mov
mov
movsl
pop
aas
jo
lods
jne
mov
mov
repz
mov
push
daa
arpl
rcrb
mov
push
mov
add
pop
mov
jo
cli
xchg
insl
and
jbe
cmp
push
adc
pusha
or
push
lods
jns
mov
jb
mov
and
push
xlat
fiadds
in
sahf
repz
mov
fidivl
xor
push
or
and
jl
insb
jbe
dec
int3
pop
or
out
leave
ljmp
shl
iret
bound
sbb
out
mov
and
lods
jmp
cwtl
out
jge
into
jp
insb
dec
cmp
or
or
popf
hlt
or
aaa
jbe
loop
dec
jecxz
or
jp
pusha
sub
repnz
jb
insl
ljmp
test
cltd
lret
jecxz
stc
sub
pop
sub
fs
xor
aam
mov
cmp
stos
add
cmpsl
into
data16
addb
divl
les
movsb
movsb
xchg
test
mov
ret
lahf
cld
ja
mov
test
pop
inc
lret
js
in
xor
mov
or
pop
xor
nop
dec
mov
lea
push
pop
mov
mov
insl
cmp
dec
mov
sahf
ror
xchg
int3
cwtl
fistps
popf
mov
jnp
and
mov
es
fs
xchg
aas
jp
out
sbb
loopne
pop
out
sbb
jnp
sbb
test
jbe
fistpll
and
sub
mov
sti
fwait
sahf
or
sti
pushf
jge
add
xor
jp
pop
sub
and
aaa
xchg
mov
push
pop
dec
xor
xchg
xchg
movsl
call
mov
jnp
add
es
mov
mov
pop
jp
xchg
xchg
adc
arpl
test
xchg
dec
mov
test
inc
ja
test
mov
ss
outsb
nop
push
push
bound
adc
movsb
or
icebp
xor
fwait
popf
or
repz
fists
jno
push
sbb
testb
std
xchg
out
pop
test
sbb
sahf
ret
loope
mov
subb
pop
mov
and
jg
push
fcomps
cltd
xor
pushl
jo
das
fstpl
mov
scas
fdivrs
ljmp
or
inc
fidivrl
pop
jb
repz
out
imul
cld
mov
pushf
mov
or
pop
jle
jp
fs
stos
push
out
imul
pop
jns
negb
shrb
add
sub
lea
aam
stos
xor
add
jp
adc
pop
cmp
loop
pushf
jns
xchg
faddp
ds
pop
popa
xchg
jmp
hlt
in
or
or
mov
lods
mov
xchg
arpl
loope
sbb
ret
add
sub
pop
jmp
shlb
bound
aaa
cli
and
inc
jns
mov
pop
mov
fisubs
or
add
xchg
mov
roll
cwtl
ret
out
adc
xchg
comiss
dec
ret
mov
xchg
cmp
add
test
or
ret
out
pop
call
mov
mov
int
repnz
mov
adc
cmpl
divb
mov
dec
mov
and
inc
movl
mov
xchg
out
js
mov
xchg
pushl
fistps
mov
push
pop
add
outsb
mov
shlb
push
shrb
lret
jbe
xchg
seta
push
popa
inc
mov
add
sti
mov
stc
mov
orb
sbb
and
cmp
orl
sbb
jne
xchg
mov
pop
fucomip
repnz
sbb
add
mov
or
sar
fisubrl
mov
frstor
popa
jle
mov
jo
add
test
and
fisubl
std
icebp
dec
outsl
or
mov
js
mov
out
movsl
xchg
stc
xchg
js
pop
add
pop
cli
ljmp
adc
mov
add
xorl
mov
pop
xlat
das
jmp
and
push
mov
add
lcall
sarl
adc
mov
pop
pop
daa
push
mov
cmpsl
pushf
popa
movsb
bound
jl
and
or
pop
jg
aaa
push
xchg
shr
in
std
jne
jle
outsb
inc
lret
mov
jne
orb
fdivs
or
or
pop
aaa
iret
cmpsb
daa
movsb
push
mov
inc
cmp
ja
repz
imul
cmp
cltd
jmp
pusha
dec
lods
jo
int
and
adc
pushf
ficoms
dec
pop
adc
gs
aas
pop
push
popa
fisubrs
pop
push
xchg
leave
outsl
fldenv
add
dec
fs
jo
data16
and
mov
loope
hlt
sub
imul
popf
gs
arpl
and
stc
sub
iret
push
and
adcb
mov
inc
sub
inc
out
rol
flds
sbb
adc
cwtl
inc
mov
sbb
jns
fadds
sbb
inc
dec
jge
xor
pop
loop
mov
movsb
sub
pushf
xlat
and
movsl
xchg
in
fbstp
mov
mov
xchg
ss
gs
into
sti
cmp
push
fistpll
outsb
mov
pop
jmp
pop
lods
cwtl
push
pushf
jnp
or
movsb
xchg
cmpsb
jg
sbb
mov
test
scas
sub
jmp
in
push
loop
mov
cmc
add
jge
inc
imul
mov
test
sub
cwtl
insb
adc
sbb
mov
fidivs
push
ret
data16
rcr
icebp
inc
incb
dec
xchg
or
add
filds
push
add
or
jp,pn
hlt
in
testb
xchg
mov
mov
mov
out
fldl
pop
xchg
jo
out
cmp
movl
pop
pop
jne
ja
dec
sub
in
aad
pop
sarl
loope
lea
dec
sbb
pop
jo
sbb
pop
pop
mov
test
sub
mov
or
xorb
xchg
icebp
fadds
insl
and
mov
adc
or
sbb
fimull
dec
das
cmp
lahf
inc
out
int3
arpl
insl
add
js
xchg
scas
shl
push
or
inc
sbb
xchg
add
repnz
cmp
popa
mov
mov
jne
cmp
add
mov
dec
mov
adcl
sarl
aas
clc
xorl
jnp
xor
jp
pusha
scas
dec
or
mov
jecxz
jne
adc
in
lods
mov
jl
test
jge
sti
test
sbb
test
add
xor
rorl
lret
sub
fucomi
ret
icebp
push
out
rolb
xchg
cs
mov
inc
sbb
sbb
dec
cmp
inc
mov
adc
rorb
in
int
inc
adc
add
loop
insl
adc
add
scas
andb
ljmp
pop
push
fnclex
insl
andl
clc
mov
jle
aaa
add
mov
rcll
inc
jmp
hlt
cltd
loopne
ds
sahf
or
pop
sarb
fildll
gs
push
test
push
cs
imul
stos
jo
rcl
adc
jp
xchg
call
sub
popa
cmc
adc
sub
pusha
aam
push
shrl
pop
stos
pop
sbb
mov
or
adc
cli
dec
out
repnz
repz
in
add
mov
je
shrl
lahf
in
lods
adc
cmp
xchg
inc
mov
es
xor
push
adc
lahf
out
inc
insb
out
adc
aaa
lods
cmpsb
shl
dec
sub
das
xchg
fcomip
cmp
mov
xor
data16
bound
testl
adc
adc
mov
fimull
mov
dec
iret
and
mov
test
aaa
push
inc
ds
fldz
push
mov
arpl
jno
hlt
pop
push
shrl
fxch
dec
fdivrl
lea
and
mov
or
loope
dec
push
rorb
push
add
adc
cmp
adc
in
mov
aas
lods
add
loopne
adc
pop
ficoml
cmp
xchg
adc
add
xor
mov
inc
mov
repnz
mov
cmp
jge
jl
pop
cmp
mov
xor
dec
adc
nop
testb
push
int
jne
xor
jns
push
mov
std
add
scas
iret
pop
mov
outsb
cmpb
sbb
pushf
inc
mov
mov
sbb
ljmp
xchg
lock
or
push
xchg
push
pop
out
js
jne
push
fsub
jne
sub
sbb
push
out
jecxz
sbb
ljmp
sub
sub
shl
cmpsb
push
pop
jmp
decl
inc
jb
popl
ja
mov
lock
add
movsb
push
std
adcl
adc
fcoml
xor
mov
jns
pop
outsl
sub
imull
jl
imull
pop
jmp
cmp
jp
mov
scas
xor
cltd
out
cli
test
aam
imul
adc
shll
sti
test
cmp
movsl
adc
inc
outsl
lock
clc
jecxz,pn
jb
dec
daa
mov
vpsubq
fcoms
or
shlb
or
ja
cmpsb
fbstp
adc
hlt
mov
cmpsb
xor
inc
inc
cmp
inc
imul
mov
hlt
push
mov
fldt
lahf
nop
mov
cltd
inc
inc
xchg
push
fcoms
inc
je
dec
mov
mov
arpl
sub
jp
xchg
nop
negb
iret
adc
sbb
pop
popa
pop
mov
jns
jne
push
push
bound
jl
xchg
into
sub
int
xchg
insl
cmp
leave
pand
sub
orl
add
dec
ror
adc
clc
mov
cmp
xlat
clc
push
add
jl
fimuls
testb
int
iret
sub
push
xchg
push
into
push
cld
xchg
stc
mov
sub
loop
sub
adc
sub
divl
insl
inc
test
fs
push
xor
push
cs
mov
test
addr16
mov
sub
leave
adcb
or
cmpl
xchg
lods
push
mov
rcr
mov
ljmp
mov
adc
push
mov
jge
sbb
outsl
push
les
sarb
inc
aaa
lods
mov
push
pop
mov
inc
lahf
cltd
or
lret
test
xchg
cmp
sbb
add
inc
cmp
inc
and
adc
push
mov
mov
aam
mov
mov
cltd
aad
cmp
sbb
wbinvd
mov
cmp
cld
lret
mov
ss
mov
shll
stos
mov
and
leave
mov
adc
sbb
jle
sbbb
jl
jmp
sbb
insb
jo
inc
adcb
cmp
xor
push
sub
cmpsl
jno
pop
loop
xor
pop
mov
pop
sub
add
dec
sub
repnz
arpl
ret
sbb
xchg
mov
pop
push
aas
sub
bound
jmp
sbb
das
dec
cmc
fmull
iret
movsl
pop
daa
lock
in
xor
xor
outsl
jbe
sbbb
push
adc
sbb
cmp
ljmp
shlb
inc
loope
mov
stc
mov
or
xor
inc
add
je
sahf
mov
outsl
test
outsl
arpl
or
adc
and
rol
rolb
in
fwait
cs
dec
push
mov
test
mov
adc
enter
or
rorb
cltd
mov
aas
pop
sbb
gs
xorl
sub
sub
jl
lahf
insl
sbb
xchg
sbb
sub
xchg
cmp
and
xchg
jb
fcomps
cld
pop
cmp
bound
imul
into
mov
rcrl
stos
das
mov
add
pop
jb
jg
lret
fs
ret
ret
jns
dec
sub
jae
into
or
mov
es
aas
pop
imul
mov
cs
xchg
sub
popf
jmp
lret
into
ss
js
mov
push
sbb
cmp
xor
mov
push
in
jmp
sub
cli
mov
sbb
jb
das
lea
mov
sub
aad
test
adc
adc
xor
push
imul
call
dec
or
cmp
cmp
jg
mov
adc
jno
lret
jbe
push
mov
and
mov
push
fwait
rcl
jo
add
rcll
cs
add
sub
dec
push
fmull
je
mov
pop
sbb
xor
adc
push
adc
jo
fwait
icebp
cmpsb
jg
jle
movsl
xlat
icebp
iret
je
test
and
adc
pushf
sti
xchg
and
mov
mov
test
imul
pushf
aas
xchg
insb
mov
out
push
sbb
mov
cmp
xchg
ja
pop
or
enter
cmp
sub
movsb
lea
mov
scas
mov
mul
shlb
inc
sub
addr16
cmpsl
sub
fiaddl
add
call
xchg
push
sub
sub
push
movsb
arpl
icebp
addl
movsb
ret
xor
xchg
dec
lock
ret
and
adc
fs
dec
mov
lret
out
mov
sbb
push
dec
jl
mov
repz
jge
andb
lahf
inc
mov
sbb
pop
cmp
xor
repz
adc
mov
or
dec
adc
arpl
inc
or
insl
insb
mov
mov
shll
stos
std
lods
sub
lahf
idivb
movsl
in
dec
cmpb
sub
inc
mov
not
dec
adc
cld
popf
pushf
pop
cwtl
leave
push
and
adc
jbe
dec
inc
sbb
cltd
xlat
jno
ds
or
out
popf
dec
mov
xchg
repnz
idiv
mov
into
push
jg
jp
push
xchg
fistl
jae
mov
aam
pop
fdivr
inc
ret
add
scas
xchg
aaa
cmpsl
push
xchg
push
pop
test
mov
rcrb
lcall
mov
es
fistpl
daa
cld
mov
adc
mov
iret
addl
lcall
out
mov
adc
jnp
shrl
pop
cs
js
scas
dec
and
xchg
pop
fwait
lret
repz
or
adcl
filds
jecxz
sbb
cmc
std
test
add
loopne
inc
ret
push
rclb
mov
xchg
and
and
mov
or
xor
adc
push
cmpb
cmp
sub
push
lods
mov
and
cwtl
mov
fldt
add
jmp
xor
or
je
cmp
xchg
sbb
pop
pop
add
xor
add
fidivs
pop
cmp
rorb
jnp
dec
lds
lret
imul
fs
loopne
rclb
push
popf
mov
dec
cmp
mov
push
lods
push
out
sub
mov
or
mov
lds
and
nop
push
test
das
sarl
xchg
sbb
push
lret
mov
fs
inc
sar
mov
imul
cmp
js
jbe
xchg
mov
or
add
sbb
sub
add
roll
xchg
mov
cld
add
pop
cld
xor
stos
inc
mov
pop
jge
out
mov
int
pop
mov
shl
lods
jb
mov
popa
or
in
mov
add
mov
jns
pop
cld
jbe
mov
pop
test
or
imulb
fcmove
or
push
mov
or
movsl
fsubrs
outsb
les
inc
xlat
pmaxsw
xchg
les
jo
mov
lods
fwait
pop
pop
sbb
and
mov
rclb
imul
jle
mov
cmp
outsl
and
cmpb
or
pusha
leave
mov
or
test
sbb
push
fmul
mov
sar
add
sub
lea
and
xor
loop
dec
es
push
in
in
pop
and
subb
loope
mov
mov
xchg
lods
fwait
or
lea
lret
rclb
std
push
ret
sub
xor
and
add
push
push
lahf
iret
push
dec
nop
push
push
leave
dec
sbb
pop
gs
cltd
mov
xor
pop
sub
push
jo
cmpxchg
jmp
in
push
mov
and
jne
xor
jnp
mov
popf
pop
xchg
push
mov
outsl
aam
mov
pusha
in
lds
jg
pop
gs
sbb
dec
call
inc
daa
gs
mov
cmp
bound
imul
sbb
repz
inc
mov
push
push
add
stos
bound
js
div
cmp
les
adc
std
shll
nop
clc
inc
push
icebp
ret
mov
mov
int3
sbb
xchg
mull
lds
imul
and
cmp
sub
xor
inc
push
push
aam
les
stc
mov
mov
rcr
jb
inc
push
stos
push
stc
pop
cmp
fwait
aaa
jo
mov
pop
dec
lods
sub
jl
sub
sub
mov
and
sub
mov
lock
push
jmp
dec
ds
mov
fcmovu
leave
jb
lods
jae
leave
loop
sub
sub
jge
out
cmp
stos
fstl
int
and
push
or
sahf
std
pop
xchg
inc
push
pop
lods
loope
push
es
xchg
shlb
xchg
dec
pop
and
mov
ja
aaa
mov
iret
loopne
les
xor
ja
and
loopne
xor
lcall
sbbl
cmpsl
dec
inc
xchg
in
shll
add
lods
mov
shr
dec
addr16
xchg
and
sbb
xchg
push
mov
dec
dec
test
jp
sahf
add
lret
idiv
inc
mov
mov
flds
mov
xor
pop
or
andb
jg
dec
shll
outsb
pop
dec
xchg
push
push
xchg
adc
std
je
cmpsl
lea
notb
addr16
loop
adc
xchg
dec
sahf
or
dec
jg
shl
into
out
pusha
xchg
push
xchg
int
hlt
mov
into
addr16
mov
lret
repnz
imul
cmp
call
mov
xor
sarl
sbb
jle
or
mov
rcrb
fadd
and
mov
mov
jp
jl
xlat
ljmp
sub
mov
cmp
jmp
negl
jns
gs
inc
cwtl
sbb
inc
jb
push
lahf
popa
lret
movsb
outsb
or
data16
fs
mov
scas
pop
jne
pop
scas
out
filds
mov
test
mov
in
mov
int
jecxz
cmp
inc
dec
addr16
jnp
icebp
xchg
cmp
cmp
fldl
push
adc
mov
ja
gs
stos
nop
mov
sbb
ja
fildl
popf
xchg
cwtl
hlt
cmc
mov
movsl
and
cmp
push
sub
call
shr
scas
mov
lock
or
dec
pop
sub
fnstenv
out
movsl
repnz
mov
pop
in
shlb
inc
addb
cmp
cld
xchg
repnz
mov
in
pushf
mov
pop
loopne
lahf
ljmp
xor
loop,pt
adc
mov
pop
mov
fmull
jns
xchg
or
out
cmpsb
out
push
outsl
mov
push
push
je
out
jns
pop
imul
lock
sbbl
jecxz
call
test
repz
adc
scas
ja
ret
int
in
pop
adc
stos
mov
push
pop
mulb
mov
rcrl
cmp
and
cs
jmp
inc
push
and
mov
sub
sti
inc
ss
xchg
sub
cs
movsl
or
shr
ret
dec
lods
adc
fistps
test
testl
std
or
mov
gs
mov
mov
dec
daa
in
inc
cs
int3
fstpt
xor
lcall
aaa
jno
nop
pop
incb
in
mov
lods
les
adc
popf
jmp
jo
in
push
jg
fistpl
test
lret
cmp
xor
test
mov
cmpsb
psubb
scas
pop
fdivrl
daa
jbe
pop
pop
dec
in
cwtl
addr16
enter
mov
mov
cmpsl
ds
js
and
jmp
or
movsl
punpckhbw
rorb
add
dec
shrl
fwait
cmpsb
push
lods
xor
insl
ficompl
sub
shlb
sbb
fnstenv
push
add
sub
mov
mov
test
dec
in
xchg
repnz
xchg
push
sbb
pop
adc
mov
mov
movsb
hlt
in
jne
insb
int
cmc
iret
addr16
push
xor
add
lret
or
lods
shll
or
outsl
pop
adc
adc
fstpt
movsb
sub
push
push
out
or
xchg
call
mov
nop
push
and
addr16
fsubrs
les
cwtl
push
and
mov
jno
mov
loopne
jge
faddl
movsl
xor
stos
pop
dec
cmp
add
jle
data16
insb
cld
dec
sbb
xchg
push
dec
mov
add
jo
outsl
adc
popa
in
xor
or
sbbl
sbb
and
leave
pminsw
add
cmp
jno
push
cli
aam
shl
mov
push
cmp
cwtl
fwait
shlb
jnp
inc
mov
arpl
push
push
inc
push
push
gs
lds
mov
mov
mov
andl
les
mov
lods
mov
cmp
or
stc
or
test
or
mov
sbb
test
popf
add
rcrl
stc
inc
lret
pop
inc
push
imul
out
test
mov
mov
cmove
mov
int3
cmpsl
pushf
loope
jg
add
inc
mov
cmp
pop
fstl
cmp
pop
push
adc
ds
jge
cmpsl
jg
or
scas
adc
jbe
push
add
inc
add
aam
jmp
dec
cs
cmc
int
push
sub
in
loope
add
or
imull
add
pop
fstpt
mov
mov
ss
mov
add
scas
icebp
dec
dec
inc
sub
inc
std
loope
push
roll
pop
mov
xchg
jg
mov
int
pusha
and
repz
mov
mov
lret
gs
mov
push
out
loope
cld
test
clc
leave
insb
ret
xchg
jge
mov
stos
loopne
mov
dec
push
or
add
cs
mov
cmp
push
pop
mov
push
sti
fdivrp
fsubrl
js
orb
push
leave
mov
push
inc
inc
push
xor
ret
sub
mov
xor
inc
or
cmp
std
test
cmp
adc
ret
cwtl
inc
repz
das
mov
push
push
dec
pop
add
sbb
cmpsb
sbb
cmp
shlb
push
inc
jo
test
inc
sub
in
addl
push
fsubrs
mov
das
push
out
iret
dec
lds
insl
xor
out
jbe
lahf
pop
dec
adc
mov
jp
inc
std
mov
rcrl
jmp
test
push
adc
mov
sahf
addr16
jae
out
jb
mov
sti
add
xor
imul
sbb
data16
popa
jne
clc
sub
lcall
add
fs
cltd
iret
push
mov
inc
sbbb
aas
bound
mov
inc
test
in
adc
pop
ret
mov
fs
jne
push
fdiv
jne
test
jnp
mov
mov
das
ficomps
add
dec
add
shrd
es
push
lahf
test
lods
out
and
test
stc
jbe
stos
out
out
popa
sub
sahf
shlb
cmp
in
xor
daa
push
aaa
sbb
sahf
mov
jne
mov
mov
push
xor
push
mov
insb
dec
lahf
cld
scas
rorb
mov
push
push
sbb
test
call
ficomps
int3
mov
daa
leave
dec
jg
rorb
xor
mov
xchg
rcll
loope
adc
mov
inc
push
cmp
push
add
adc
cs
scas
xchg
push
mov
mov
mov
push
sbb
dec
pop
es
or
repz
jnp
lds
cmp
out
lret
stos
dec
lods
in
xchg
xlat
mov
push
mov
push
cmp
mov
sub
sbb
add
fld
fwait
inc
inc
push
mov
mov
cmp
jp
iret
roll
sbb
mov
jns
mov
je
ja
dec
test
mov
imul
mov
xchg
mov
adc
rcrb
pop
test
and
dec
lahf
mov
clc
cld
in
loop
nop
pop
sub
sub
mov
dec
cmpl
add
add
jg
cmpsl
pushw
inc
mov
jne
in
iret
sub
xchg
into
jmp
testl
cmp
inc
cmp
lcall
sbb
jge
jbe
cmpsb
fs
push
mov
xchg
fwait
enter
cmpsb
imul
test
xchg
aas
cmpsl
lods
cmp
fisubrs
ret
test
dec
js
pop
sub
sbb
incb
int3
xlat
xchg
dec
ret
scas
mov
jle
sub
pop
mov
mov
xchg
icebp
stc
and
mov
cli
dec
push
mov
lar
out
pop
push
sahf
inc
push
in
pop
add
mov
ljmp
sbb
test
cs
jecxz
mov
iret
mov
in
scas
scas
cmpsb
add
fisttpl
inc
mov
jp
jno
xor
xor
mov
fcom
popf
jl
insl
jae
stc
js
loope
mov
mov
or
int
xchg
adc
adc
jne
jp
mov
in
jp
adc
in
std
push
shll
popf
jo
xor
fiadds
mov
sbb
add
cmp
mov
bound
push
mov
loop
xchg
out
es
mov
insb
jae
jae
xor
lods
fs
xchg
xor
and
mov
adc
jno
push
dec
mov
mov
mov
scas
lea
mov
mov
aaa
in
insb
std
imul
ss
lea
cwtl
decl
or
enter
pop
sub
xor
cmp
jns
adc
mov
mov
push
push
in
dec
ljmp
loop
pop
adc
adc
sbb
jle
out
fs
cs
and
mov
ret
pop
lret
ror
mov
or
and
mov
mov
sti
enter
push
jne
arpl
cmp
loope
sub
cmp
add
or
mov
cvttps2pi
loopne
ss
loopne
jmp
inc
shll
loop
nop
xor
loopne
sti
xor
ja
cmpsl
jb
icebp
mov
test
adc
cmp
test
xchg
or
pusha
imul
sub
mov
push
int
int3
jb
pop
out
push
mov
repz
arpl
ja
dec
lock
fnstcw
jnp
repz
cmp
in
inc
adc
repz
add
shrl
add
lds
xchg
and
iret
std
add
rorl
push
xchg
pop
scas
mov
mov
jp
add
sbb
sbb
jo
xchg
es
and
mov
xchg
adc
xchg
ret
xchg
jo
out
fwait
xorb
jne
call
sar
inc
jne
xchg
xor
xchg
jp
pop
add
call
jo,pn
add
jb
sahf
or
js
fnstsw
sar
leave
pop
mov
sets
xchg
leave
int
mov
in
mov
or
fwait
mov
mov
mov
xlat
inc
add
sub
data16
jl
out
adc
aaa
cwtl
push
dec
adc
pusha
adc
in
adc
outsl
hlt
sbb
xchg
xchg
shr
out
jo
xor
inc
push
fsubl
out
xlat
aad
or
ja
jnp
fdivl
cltd
and
mov
push
xchg
nop
cmp
cmpsl
jae
push
in
push
sarl
pop
aam
push
hlt
cmp
xchg
cmc
cmp
loop
push
xor
cmp
cli
jl
stc
sub
outsb
daa
test
ja
jo
movl
ss
or
test
and
add
movsb
or
movsl
out
cmp
rcrb
adc
mov
push
subb
dec
aad
pop
pop
movsb
popa
sbb
mov
lods
ljmp
xlat
inc
push
adc
out
xor
and
xor
jecxz
mov
jmp
lds
push
nop
or
xchg
pushf
stos
mov
fsub
pop
fistps
sub
ja
lods
cld
cmpsl
cmp
pop
and
jne
or
ss
arpl
dec
or
xchg
mov
pop
les
cwtl
imul
cwtl
inc
pop
sbb
cmp
fs
push
loope
mov
fisubs
lcall
push
mov
aas
jb
cwtl
imul
xor
sahf
out
add
insl
js
test
xchg
imul
insl
pop
mov
loop
outsl
xchg
mov
in
cltd
push
pop
insb
movsb
xchg
call
push
arpl
imul
inc
jle
insb
pop
xchg
xchg
aas
lock
in
mov
popf
popa
cli
xchg
and
dec
es
lea
sbb
adc
xlat
fs
sub
testl
hlt
cmp
ret
lds
test
cwtl
jecxz
scas
push
pop
adc
sub
push
mov
test
mov
cmpsb
outsb
mov
out
pop
popa
js
jg
imul
stos
mov
xor
ds
add
nop
dec
jmp
lds
pop
repz
inc
sbb
call
lods
mov
sub
fists
icebp
arpl
addr16
andb
jae
push
cmp
and
das
insl
ret
clc
out
js
rcrl
jle
sub
dec
xor
repz
enter
or
ja
push
xchg
or
mov
addr16
jb
mull
xor
xchg
cmpb
inc
shl
inc
iret
es
out
lea
xchg
sbb
js
int
ja
popf
scas
inc
pop
sar
inc
sub
fistl
loope
outsl
maxps
cmp
mov
sbbl
in
jns
ficoms
iret
sbb
insl
mov
cmp
dec
xchg
fwait
ds
stc
xor
pop
mov
sub
inc
jmp
cmp
mov
inc
pop
mov
mov
xchg
mov
jb
xchg
lds
inc
gs
jnp
adc
call
or
out
insl
and
xchg
xchg
mov
jl
or
and
mov
imul
xchg
mov
shrl
pop
pop
rcrl
inc
decl
pushf
sbb
jge
xchg
iret
ret
mov
pop
mov
jns
dec
addr16
in
push
xchg
adc
add
call
cmp
inc
sbb
jb
hlt
bound
pusha
cmpsb
adc
adc
jo
mov
repz
stos
in
mov
cmp
xor
xchg
push
sbb
mov
shr
fdivrp
js
rcrb
add
fsubl
mov
mov
mov
sarb
or
je
cmpsb
icebp
adc
or
cmp
push
rcll
push
mov
jae
xchg
mov
std
mov
pop
ja
mov
int3
in
or
mov
sbb
leave
lcall
adc
std
lds
data16
test
aas
popa
int
cld
orb
rcrb
mov
rcr
jp
inc
add
cmc
fdivrs
jg
jns
outsl
bsr
push
pusha
int
pop
clc
mov
mov
jnp
jp
jo
fdivr
mov
jno
inc
dec
xchg
sbb
aaa
push
add
sub
cltd
inc
inc
add
push
or
enter
in
sub
and
ss
stos
sub
xor
add
testb
test
loop
out
push
pop
xor
push
and
fildll
mov
test
imul
lea
test
pop
jecxz
sub
mov
fsubl
mov
std
outsb
add
sbb
mov
xlat
jno
lods
xlat
xchg
or
je
dec
daa
pop
aam
mov
daa
push
fldt
inc
repnz
ja
lcall
ds
pushf
mov
or
mov
xchg
movsl
es
stos
push
lahf
cmp
push
and
or
jecxz
or
mov
mov
out
cmp
add
test
cmp
mov
out
push
fidivrl
xchg
js
and
pushf
cmpsb
fcomi
stc
sub
sti
xchg
and
push
fsub
push
loope
out
xchg
sub
mov
jmp
hlt
jo
add
inc
aam
mov
xchg
mov
add
gs
and
adc
cmp
loop
imul
hlt
testl
adc
xor
add
popa
mov
inc
xchg
and
pusha
pushf
add
ss
jmp
xchg
mov
in
repnz
ret
inc
pop
adc
cmp
ficompl
pushf
int
jae
pop
fidivrs
sbbb
mul
mov
fldcw
mov
sub
cwtl
add
push
orb
and
sahf
jp
leave
je
cmp
mov
dec
sub
mov
xor
lret
mov
and
je
pop
or
push
inc
lahf
sub
dec
xor
sub
dec
xchg
pop
jb
mov
inc
fst
adcl
mov
mov
inc
es
mov
and
push
xchg
addr16
sahf
sub
sub
push
mov
data16
cmp
lret
pop
ret
into
inc
arpl
or
aad
or
icebp
shll
addl
or
cmp
push
xchg
stos
push
or
add
dec
shll
mov
sahf
popa
dec
adcb
incl
cmp
dec
fs
int3
andb
ja
mov
sarl
sub
pop
add
rcl
mov
ret
pop
out
lcall
subb
mov
cmpsb
lds
add
out
mov
add
cmp
icebp
mov
push
pop
out
cld
jae
les
shll
fsubs
dec
mov
hlt
xor
xchg
sbb
sahf
pop
cld
int
push
test
loop
loop
leave
push
inc
gs
xchg
jnp
sbb
or
cli
popf
push
and
sub
cwtl
test
fdivrl
bound
stos
inc
imul
add
je
lahf
mov
scas
and
mov
xchg
cs
stos
push
cld
mov
cltd
pop
mov
fsubrl
negb
push
dec
repnz
dec
xchg
test
mov
mov
jp
jge
outsl
xchg
fnsave
fdivrs
dec
stos
nop
es
nop
nop
inc
inc
mov
push
mov
pop
into
aaa
jmp
jns
daa
aad
pusha
xor
mov
scas
mov
adc
pop
inc
stos
test
sub
cmc
pushf
fcom
dec
mov
fcoml
gs
adc
mov
xchg
test
je
pusha
cmpsb
ljmp
sbb
jns
adc
xor
daa
enter
xlat
sti
sub
ret
je
pop
out
cmp
xchg
or
icebp
popa
sbb
xchg
aad
mov
sbb
cmp
mov
ret
sbb
stos
adc
xchg
ja
xor
dec
dec
jnp
roll
add
add
push
imul
test
pop
inc
inc
sub
mov
fdiv
ja
clc
xchg
pop
xor
mov
jl
push
pop
mov
repnz
push
ljmp
testb
bound
sub
or
lea
cli
mov
adc
sbb
ret
movsl
je
in
sti
inc
cwtl
xor
mov
adc
ja
movb
xor
test
inc
jbe
sbb
and
int3
and
adc
ja
lods
jge
push
sbb
adc
popa
int3
cmpsb
sbb
jp
lods
sbb
out
jl
gs
push
scas
movsl
mov
cmp
xor
mov
dec
and
int
imul
cwtl
mov
and
xorl
adc
sub
fidivrl
inc
cltd
movsl
repnz
nop
mov
addr16
aaa
fdiv
gs
and
cmc
lds
mov
das
push
add
dec
mov
push
lods
test
sbb
xorl
jmp
sbb
pop
das
insl
mov
stos
int3
pop
cs
mov
adc
push
lret
adc
test
pop
sub
xlat
std
in
call
hlt
dec
push
xchg
or
and
xchg
mov
jns
add
or
out
in
xlat
cmpb
dec
arpl
add
jl
mov
push
pop
loope
stos
sub
fnstenv
inc
inc
push
or
arpl
mov
cmp
fldcw
pop
inc
jge
jno
std
or
in
out
stos
and
push
dec
or
in
loopne
inc
icebp
and
xor
mov
ror
les
adc
or
test
pop
xor
dec
imul
sub
adc
lock
dec
test
sub
push
sub
push
pop
adc
push
mov
testl
mov
lods
shl
inc
and
out
das
out
addr16
ret
enter
add
jecxz
lret
mov
mov
std
mov
mov
es
xor
or
loope
xor
int
mov
mov
in
shl
ds
jp
les
or
push
std
inc
add
jecxz
aam
testl
outsl
adc
add
lret
cmp
push
add
enter
adc
dec
jp
mov
push
cmp
push
mov
jno
mov
or
push
xor
jo
lcall
call
jns
xchg
or
dec
mov
push
mov
sub
xor
mov
pusha
in
and
icebp
pop
cmp
push
xchg
mov
pop
outsb
or
sti
pop
repnz
or
test
and
cltd
xor
stos
adc
out
jb
adc
push
les
pop
in
mov
shlb
add
jne
cmp
sbb
and
das
add
or
ret
lods
push
xchg
mov
push
sahf
inc
leave
ret
aas
xor
mov
ss
ljmp
xchg
push
cmp
icebp
xchg
xor
cld
push
and
mov
les
orl
mov
cmpsl
lea
push
jl
test
sbb
sbb
lret
or
cmpsb
enter
sbb
les
pusha
aaa
cmp
scas
xchg
imul
cmpsb
push
push
repz
or
jns
cmp
arpl
dec
xchg
in
into
addr16
xor
add
shrb
fdivrs
stos
or
jmp
fbstp
cmpb
fs
pop
mov
mov
xchg
in
addr16
cmp
sbb
loop
or
cwtl
cwtl
mov
sub
inc
mov
ds
js
push
ffree
arpl
shll
ret
cmp
sub
lret
pushf
push
shlb
mov
in
nop
test
lods
cmpsl
mov
sub
das
xor
xor
rorb
hlt
sbb
mov
xor
rcll
jmp
mov
sbb
inc
std
mov
ss
out
fidivl
push
push
push
jns
jne
call
out
inc
sub
cmpsb
sub
xchg
imul
xchg
das
and
iret
sbb
push
test
and
dec
out
adc
push
loopne
xor
imul
cmp
mov
test
pop
sub
dec
and
enter
sub
subl
jo
pop
orl
popa
or
fwait
in
and
out
mov
cmp
or
into
fstl
movsb
aad
int
jb
enter
adc
inc
inc
insb
pushf
mov
jge
gs
jge
and
mov
mov
out
cmp
popl
rclb
cmpsb
dec
xchg
inc
int
in
ljmp
cltd
movsb
fnsave
or
shll
pop
movsl
xor
jne
add
out
addb
int3
jle,pt
sub
aam
addr16
jae
aam
ds
out
imul
clc
andl
insl
fnstsw
imulb
push
fbld
pop
mov
mov
sub
jnp
bound
sbb
hlt
mov
mov
and
adc
mov
jle
call
ja
fmulp
dec
ja
bound
xchg
push
cwtl
xor
insb
shlb
dec
jno
mov
mov
dec
cmp
mov
pop
lea
jno
push
test
rcrl
cmc
mov
pop
dec
sub
dec
inc
jg
mov
enter
xor
jp
divb
cmp
fxch
mov
sub
push
sub
hlt
mov
and
sarb
mov
pop
movd
mov
push
cwtl
xor
daa
dec
cmp
fiaddl
js
rcrb
and
loope
icebp
test
lret
popf
push
stc
cmp
xor
add
xlat
inc
sbb
push
push
lea
or
xor
add
push
nop
xchg
and
insb
orl
mov
enter
ljmp
cld
mov
mov
loopne
mov
jp
ljmp
adc
mov
xor
mov
call
cmc
sub
inc
cwtl
sub
scas
mov
fistpll
inc
dec
cli
xchg
nop
add
jae
xor
lret
sub
addr16
jnp
push
add
xor
movsl
add
jns
sbb
arpl
mov
xor
cwtl
jmp
mov
ret
jg
mov
and
adc
out
mov
adc
cltd
mov
hlt
cmpb
adc
test
adc
into
pop
cmp
push
sbb
or
cmc
enter
jp
mov
dec
sbb
sbb
and
js
inc
fmulp
shlb
mov
je
and
xchg
and
xor
imul
inc
pop
in
xor
iret
frstor
mov
call
leave
fidivs
mov
push
add
sub
pop
cwtl
jns
ret
and
inc
xchg
inc
lret
sbb
mov
lea
adc
std
mov
inc
fiadds
pop
out
add
cmp
inc
mov
xchg
scas
sbb
fnstcw
jp
lea
mov
pop
lods
mov
aam
push
negl
pop
pop
imulb
or
rcr
imull
xor
jmp
mov
adc
hlt
or
ds
arpl
push
movntps
lret
jg,pn
cwtl
pop
testl
sub
mov
lds
mov
mov
jne
xor
pop
sarl
mov
movsb
mov
xchg
jecxz
push
clc
mov
icebp
dec
push
sub
and
andb
outsl
pop
sbb
mov
popf
js
iret
xor
fcoml
xchg
es
xor
iret
and
dec
ror
cs
imul
outsb
xor
out
and
jbe
mov
add
into
bound
pop
sarl
addl
ja
enter
test
ret
inc
pop
mov
cmp
or
loop
push
jmp
push
lods
andb
ret
jmp
mov
jno
or
and
or
mov
mov
pushf
stc
inc
push
cmpsl
daa
and
inc
test
out
aad
dec
ret
and
push
out
es
push
jmp
mov
mov
jl
pop
ret
es
mov
mov
sti
pop
mov
js
xor
ljmp
loopne
aam
sub
or
into
jb
jge
shlb
aam
push
dec
or
pop
mov
addr16
arpl
inc
gs
inc
jne
xchg
dec
int3
or
ftst
inc
je
insl
les
cmc
sbb
pop
and
mov
lods
cmp
mov
pop
jb
andb
test
lds
enter
jge
mov
rolb
dec
aad
hlt
cmpsb
jmp
sub
repz
add
pop
mov
gs
xchg
shll
popa
leave
pushf
test
outsl
lods
fldl
jns
icebp
inc
shll
movsl
and
xchg
std
fcomp
mov
sub
jbe
nop
decl
mov
cmp
pop
leave
dec
lahf
outsl
fldt
and
sub
sub
push
or
pop
xchg
int
and
cmp
lods
ja
xchg
popf
imul
test
lods
mov
mov
pop
aam
xor
cmpsl
aas
cltd
aad
sub
cmpsl
lds
jae
sahf
shl
add
jb
das
pop
xchg
movsb
lods
pop
maxps
stos
jb
add
testb
sub
mov
hlt
or
push
mov
sbb
mov
mov
ror
aad
clc
test
aaa
sahf
mov
pop
ja
fwait
sbb
xchg
dec
mov
stos
popl
mov
jmp
mov
xchg
lret
insl
imul
dec
and
pop
pop
pop
sub
mov
mov
sbb
test
mov
movsb
out
fcoml
fs
jle
xchg
xchg
shrb
int3
push
outsb
dec
lret
lahf
xor
push
fcoml
fsub
js
outsl
mov
out
aaa
push
mov
mov
adc
aad
dec
das
lcall
add
dec
in
pop
fiaddl
aad
je
xchg
sbb
lahf
in
and
loopne
push
fisubrl
out
fdivrl
into
ja
jl
jmp
aam
mov
loope
insl
xchg
mov
cli
and
sarb
cmp
inc
pop
addr16
sbb
in
mov
hlt
pop
sarl
mov
dec
jl,pn
push
xchg
sub
repnz
inc
mov
call
sub
inc
jge
adc
mov
and
mov
fucomip
iret
mov
mov
jmp
loopne
inc
or
bnd
xchg
movsb
rcrl
xchg
mov
icebp
sub
dec
dec
ficomps
adc
dec
insb
out
adc
in
repnz
out
sbb
or
out
mov
ds
daa
inc
jg
dec
dec
ret
out
out
mov
mov
cmp
jl
jbe
jp
aaa
rcrl
xor
iret
js
push
je
xlat
xchg
xchg
fsts
sub
sub
fimull
pop
mov
fwait
ljmp
dec
lods
xchg
test
cmp
sbbb
arpl
imul
in
add
xchg
sbb
imul
xchg
pop
push
stos
insl
fsubs
xlat
mov
jge
cmp
add
cmpl
cmc
stos
stc
jmp
jecxz
in
push
rcl
or
pop
dec
into
lock
std
dec
fildl
bound
rolb
in
xchg
lret
hlt
loopne
ja
nop
ss
cmp
cmpsl
push
lock
and
sub
das
cmpsl
cmp
daa
addl
xor
cmp
push
add
sahf
pmovmskb
aaa
xor
mov
adc
mov
jno
xchg
repnz
jnp
es
repnz
jmp
push
and
fsubs
jp
or
push
sub
xchg
sub
mov
pop
pop
mov
inc
dec
gs
add
xor
in
cmpsb
pusha
xor
orl
inc
clc
fdivrs
je
push
cmp
or
stos
cmp
xchg
add
push
movsb
jb
jmp
gs
test
in
outsl
inc
mov
shrb
fsubrp
dec
lcall
out
adc
add
idiv
clc
cmpsl
cmp
ljmp
push
and
bt
mov
lret
ds
xchg
add
pop
mov
notl
gs
xor
cmpsl
imul
jle
inc
mov
or
mov
mov
mov
sar
out
sahf
push
push
or
cmp
and
xorl
sub
sahf
dec
xchg
pop
mov
icebp
jno
es
cmp
addr16
and
ret
lock
xchg
or
xchg
xchg
or
and
dec
and
and
push
push
sbb
call
xchg
stos
jmp
and
cmp
pop
scas
daa
jns
jecxz
imul
add
imul
fistps
mov
cli
das
lret
ss
or
inc
fcoms
mov
lcall
std
not
movsl
ror
dec
dec
pop
nop
cli
mov
sbb
pusha
ficomps
cwtl
pop
js
xorb
mov
cld
mov
mov
inc
fistpll
xlat
inc
xor
nop
jle
aad
into
cmp
mov
shrl
pop
aas
stc
sub
nop
iret
enter
push
or
adc
mov
loope
repz
pop
mov
cmp
jge
xchg
cmp
test
jmp
push
movsl
int
arpl
pop
inc
dec
push
out
test
xchg
aaa
int3
pop
es
in
les
jae
xor
add
adc
popf
and
shrl
jnp
mov
fadds
mov
ds
jg
pushl
jg
mov
sbb
int3
mov
adc
cmc
mov
and
popf
xor
rcrb
test
gs
sarl
lods
or
fnstenv
inc
divl
int3
adc
aam
sbb
push
sub
stos
sbb
es
subl
xchg
popa
push
rcll
repz
fs
ret
or
andl
pop
aaa
popa
lods
ret
testl
out
jecxz
pop
or
xchg
pushf
mov
mov
xchg
loop
inc
out
xor
repnz
mov
insl
or
mov
jmp
push
sbbl
pop
jl
pop
mov
outsl
aaa
push
fs
cmp
adc
xor
inc
push
cs
sti
pop
jl
not
mov
adc
movsb
cmp
cwtl
and
ljmp
jge
inc
push
pop
xchg
stos
std
addr16
sub
push
mov
scas
mov
lahf
jne
movsl
mov
pop
movsl
testl
loop
jmp
ror
xor
sub
add
popa
lcall
sbb
movsb
jge
cli
mov
inc
stos
or
push
jecxz
inc
inc
adc
pop
xor
pop
popf
inc
mov
push
clc
xchg
imul
jg
xchg
cld
sbb
mov
loopne
add
cmpsb
in
xchg
sub
xor
test
lret
inc
imul
push
jo
test
pop
xchg
insl
mov
inc
test
xor
or
pop
mov
and
xor
hlt
fs
outsl
fs
adc
fwait
enter
sbb
mov
jae
push
lea
and
cmp
jmp
dec
cmpsb
iret
mov
jbe
dec
repz
pop
cmp
pop
xlat
push
or
and
pusha
sub
push
std
sub
mov
fistpl
cmp
mov
add
jmp
das
loope
clc
dec
dec
add
mov
jle
stos
loopne
cmc
cmpb
stos
xchg
nop
pushf
pop
jne
and
rolb
mov
outsb
mov
fldenv
mov
sub
or
xor
imul
cmc
in
sbb
add
jno
sub
sub
xor
sub
inc
xchg
mov
push
les
dec
mov
bound
enter
adc
push
mov
dec
hlt
call
inc
enter
cs
adc
mov
push
mov
rorb
iret
mov
add
sbbb
ds
iret
mov
fyl2x
jnp
pop
movsb
or
ret
mov
mov
or
lahf
out
in
push
add
mov
mov
jp
dec
dec
rcll
out
scas
pop
inc
arpl
push
cmc
xor
loop
sub
sbb
das
mov
cmpsl
mov
inc
xchg
cli
jo
sbb
loope
pop
aas
nop
in
iret
cmpsl
mov
loope
pop
or
sub
cmp
xchg
jbe
mov
lcall
adc
repnz
mov
mov
dec
mov
adc
pop
push
lock
jne
sbb
lcall
sbb
mov
mov
addb
bound
test
xchg
arpl
dec
out
shll
mov
and
sub
lret
aaa
cmc
cmp
mov
aad
test
push
dec
ss
mov
out
shlb
pop
jmp
mov
jb
sahf
dec
mov
bound
push
pop
cwtl
push
fidivl
mov
movb
popf
iret
das
dec
and
fs
inc
jp
add
pusha
das
hlt
imul
push
cmp
mov
dec
adc
push
aaa
pop
repnz
push
pop
push
xchg
repnz
mov
and
add
std
sbb
out
inc
pop
lds
and
mov
dec
dec
xor
xor
mov
inc
mov
pushf
roll
psadbw
outsb
add
movsl
enter
out
fcomi
mov
push
xchg
mov
fisubrs
pop
sbb
mov
ja
jns
jns
in
sbb
ficoml
or
sti
cltd
das
adc
scas
cld
mov
test
outsl
popa
add
hlt
int3
ja
lahf
test
loopne
rorb
sub
scas
insl
jbe
cmp
add
sbb
and
push
sahf
and
shll
cs
insl
mov
sub
shll
cltd
lea
jno
out
xchg
test
pop
ret
and
adc
jb
out
repnz
mov
lret
xor
xor
cltd
cmp
ja
insb
mov
fwait
add
ret
add
into
jp
sar
push
mov
cwtl
sarl
cmp
and
ss
xchg
cld
mov
sbb
push
jge
sub
sub
mov
fnstcw
pop
fstl
add
jb
stos
mov
adcl
out
pushf
js
mov
repnz
divb
xlat
in
adc
lret
leave
je
dec
sbb
outsl
jmp
aad
adc
lods
sbb
mov
aad
jne
add
mov
xchg
loope
jb
and
xchg
idivb
jge
sub
int
pop
jo
daa
push
andl
loop
mul
cltd
es
lods
cltd
icebp
jb
push
inc
test
inc
stos
imull
and
popf
stos
xorb
test
sahf
xor
jo
iret
push
aas
jbe
imul
pusha
mov
aaa
loope
dec
xlat
push
ficoms
jle
imul
mov
lahf
cmpsb
xor
xchg
mov
cld
les
rorb
fbld
or
xchg
jge
sti
je
dec
xlat
add
out
cmp
and
pop
test
and
inc
jb
cmp
test
in
dec
test
stos
cmp
faddl
outsb
in
lods
mov
popa
testl
shlb
adc
insl
dec
jmp
xchg
fs
and
out
shrl
mov
sub
push
leave
xor
sbb
ror
outsl
repz
inc
jb
and
stos
mov
and
addr16
call
outsb
pusha
xor
enter
xor
mov
mov
adc
stos
arpl
adc
cmp
rol
insl
ficoms
aam
jg
mov
adc
dec
fsubl
and
jecxz
or
push
movsb
movsl
xchg
daa
lcall
les
xchg
imul
lock
jmp
inc
or
inc
pop
loope
insl
mov
imul
xor
out
xor
inc
subb
lds
mov
hlt
insl
loopew
add
pop
stc
inc
subb
les
xor
iret
aas
jge
pop
into
rol
mov
icebp
pusha
inc
test
gs
xorb
xchg
in
leave
pop
and
hlt
mov
push
fwait
inc
mov
subb
in
cmc
test
jmp
inc
dec
mov
cmp
cmp
push
stos
stc
mov
dec
xchg
adc
test
in
adc
not
dec
movsl
leave
insb
or
lcall
stos
hlt
mov
xchg
inc
adc
jmp
into
int
fmull
stc
cmp
jo
stos
imull
ja
xor
mov
int3
xchg
lea
jmp
movsb
inc
jns
aas
sbb
jmp
mov
in
and
js
jae
xor
mov
lods
cltd
outsb
pusha
pop
push
int3
cmpsb
and
xchg
ljmp
in
out
or
jg
insb
in
mov
sti
jnp
movsb
xor
jl
out
cltd
dec
and
stc
dec
cmp
leave
lods
das
rcll
xchg
ds
imul
in
lret
mov
jno
sbb
mov
mov
shl
sub
inc
aaa
cmp
hlt
xchg
mov
mov
sahf
sub
popf
pop
pop
orl
dec
shr
push
ret
hlt
xchg
imul
aad
xchg
mov
sbb
aad
sbbl
adc
cmp
pop
popf
call
int
adc
dec
and
bound
aaa
cmp
sbb
xchg
cmp
jl
jmp
lret
mov
loope
insl
jnp
add
dec
adc
adc
mov
sbb
shrl
ljmp
stc
sub
notb
enter
repz
aad
xchg
inc
fisubrl
push
lcall
add
es
rcr
mov
xchg
lds
xor
gs
mov
addb
mov
cltd
negl
jge
sub
cwtl
pop
mov
push
xor
out
je
xchg
movsb
addr16
shufps
jecxz
mov
push
mov
add
loope
orb
mov
dec
jle
dec
pop
imulb
xchg
out
mov
lret
cmc
outsl
adc
outsb
pcmpeqd
ffreep
setns
cmpxchg8b
sbb
mov
dec
je
or
into
adcl
xlat
jmp
in
dec
cld
pop
jne
pop
pop
in
sbb
xor
add
lahf
pop
aaa
adc
sub
cmp
lret
inc
stos
jg
pop
movb
push
mov
lret
mov
xchg
cltd
xor
inc
lcall
push
adc
and
nop
dec
ja
adc
inc
dec
and
xor
mov
adc
stc
sti
andl
pop
in
std
testl
or
hlt
pop
int
sbb
fldz
adcl
push
mov
or
insb
xor
or
sahf
pop
mov
pop
sahf
push
sub
xchg
and
cld
shll
pop
push
sarb
xchg
in
lahf
lcall
mov
push
ret
inc
shlb
mulb
insl
xchg
xor
leave
adc
pushf
jb
mov
outsb
outsl
xchg
in
daa
pop
ljmp
fdivr
rcr
adc
mov
repz
ds
pusha
pop
in
outsl
in
sbb
addr16
jo
mul
mov
jmp
scas
in
out
popa
or
ja
stc
and
pop
bound
out
pop
or
stc
mov
or
in
daa
or
and
xchg
dec
into
sbb
pop
cwtl
push
add
cmpsb
jecxz
xchg
shlb
sbb
mov
loope
mov
jno
shll
or
pop
dec
push
sbb
ja
mov
insb
mov
sub
pushf
popa
jecxz
mov
xor
aaa
mov
gs
lea
outsb
in
fwait
push
rcrb
inc
loopne
and
cmp
js
xchg
mov
jge
shl
mov
aam
out
jecxz
in
mov
dec
movsb
or
adc
jns
rorl
lods
add
inc
fstps
mov
imul
xor
in
insl
mov
or
sbb
sahf
into
jmp
clc
fcom
jne
dec
in
shll
call
pop
push
mov
inc
cmp
movsb
outsb
aaa
jl
insb
jp
push
aad
jb
jg
repnz
je
pusha
leave
ret
mov
and
mov
fldcw
lcall
cmp
xchg
mov
xor
and
lods
fsts
sbb
scas
or
sbb
pop
fwait
add
gs
je
repnz
mov
cmp
mov
ja
daa
adc
push
mov
and
inc
add
push
push
mov
mov
cmp
push
jno
test
fistpll
push
clc
adc
out
mov
inc
sbb
adc
xchg
aaa
mov
in
sub
jns
lds
dec
sbb
add
mov
je
cmp
xor
mov
pop
insl
xchg
pop
enter
lret
daa
sbb
ret
clc
sub
pushf
inc
jo
adc
sbb
fidivl
inc
xchg
inc
push
aas
jo
pop
sbb
inc
pushf
ja
mov
dec
push
adc
movsl
add
add
jge
inc
les
aad
mov
int3
jbe
inc
xor
fidivrl
popa
push
xor
ss
fmull
mov
inc
arpl
imul
xchg
insl
xor
jecxz
inc
sahf
push
xchg
cmpsb
faddl
cmp
xchg
dec
lock
and
into
rclb
lret
dec
and
and
ret
sti
loop
loope
lods
jp
imul
in
add
mov
shl
dec
cmc
std
pop
adc
xor
mov
sbb
cli
pushf
sbbl
xchg
shlb
add
daa
mov
xchg
mov
inc
ljmp
mov
sub
in
xchg
jecxz
inc
int3
cmc
out
into
cs
sbb
icebp
fsubrl
and
ss
jle
push
dec
sbb
fimuls
mov
aas
mov
movsl
cmpsb
test
xor
cmp
addb
icebp
out
jl
shlb
pop
and
and
pop
stc
subb
aad
jbe
inc
mov
jle
mov
ret
lods
popa
ret
fsubrs
imul
adc
imul
sahf
pop
mov
sbb
ret
rcl
test
loopne
xlat
pop
xchg
out
add
and
xchg
fcmovnb
jnp
or
pop
data16
test
test
sub
jb
sub
lret
sbb
push
ds
pop
iret
or
sahf
mov
les
jo
fs
mov
bound
mov
sti
mov
inc
addb
jne
jbe
inc
or
add
in
into
notl
adc
cmpsb
cmp
mov
add
pop
fldcw
lahf
movsl
repnz
and
stc
je
push
pop
adc
es
dec
cmp
lods
jg
xchg
bound
ds
xchg
fdivrl
pushf
cmp
inc
sbb
jmp
ja
mov
stc
shl
adc
lret
cld
or
dec
popf
jg
and
in
sbb
cli
pop
out
jmp
test
movsl
lret
or
scas
ret
int
ja
cli
je
cmp
sbb
mov
and
push
mov
jbe
push
adc
xchg
and
pop
sbb
dec
and
test
add
or
shl
sbb
mov
ss
shrb
push
movsb
stos
xor
pop
sub
ror
dec
mov
notb
and
xor
xchg
inc
ljmp
mov
add
repz
in
sub
fdiv
aaa
outsl
dec
ret
sbb
nop
popf
pusha
imulb
es
nop
lea
ljmp
fidivrl
rcll
and
xchg
rorl
stos
aas
xchg
mov
xor
decl
popf
pop
inc
test
int
sub
ficompl
scas
bound
dec
dec
push
repz
sbb
ret
in
mov
push
stos
lock
loop
mov
adc
mov
mov
arpl
cmp
stos
dec
int3
fnsave
and
add
mov
pushw
stos
mov
jno
or
div
lcall
fimuls
push
adcb
xlat
cmc
bound
and
lcall
pop
dec
adc
lods
mov
outsb
mov
jmp
push
push
cmc
xchg
xchg
call
inc
or
cwtl
xchg
lret
cmc
test
rcrb
xor
je
cli
cmpl
imul
pushf
lods
sbb
mov
cmp
lods
fwait
or
dec
sub
rol
push
arpl
pop
or
pop
or
fwait
ret
xchg
jno
push
aas
sbb
gs
push
jnp
ret
movl
or
lcall
call
cmp
xchg
push
xchg
outsl
lret
arpl
sbb
lret
ljmp
xchg
icebp
insl
js
push
dec
icebp
inc
pop
sarl
ja
clc
add
fldenv
sbb
inc
dec
push
gs
xlat
mov
jle
pushf
adc
scas
inc
jle
adc
aad
xchg
shll
addr16
fwait
movsl
loope
cld
lea
push
popf
and
jecxz
or
ds
xchg
mov
cmp
hlt
aas
fwait
rorl
fs
push
and
sub
or
data16
dec
mov
mov
cmp
fs
stos
ret
add
jae
sbb
imulb
aaa
dec
dec
xlat
adc
xchg
mov
pop
out
outsb
scas
ja
sahf
cltd
cmovbe
mov
jb
push
int
xchg
xor
add
fsubrl
stos
in
mov
jbe
pushf
in
dec
ja
or
lret
inc
cli
cmc
ficompl
iret
sti
push
push
shrb
add
jl
sbb
mov
imull
ror
fnstcw
add
mov
cmc
push
aaa
in
push
inc
into
ret
lods
popf
in
neg
ja
add
inc
adc
divb
mov
arpl
xchg
and
ret
add
add
jge
add
faddl
jnp
jg
sbb
push
add
repz
int
test
pop
adc
in
lds
flds
cmc
push
insb
mov
dec
rclb
xchg
jae
shl
test
cmp
pop
jecxz
pushf
orb
dec
mov
in
loope
aam
outsb
lea
jae
sbb
jp
test
dec
or
dec
stc
adcb
xor
inc
xchg
in
push
mov
rcrb
push
icebp
popa
pushf
ror
int
sbb
shlb
add
lcall
int
cmp
std
xor
sti
mov
loopne
addl
lcall
loope
test
mov
ret
cmc
dec
mov
and
or
fiaddl
or
jo
push
iret
jmp
repnz
call
pop
inc
stos
push
fsub
adc
into
lret
std
xor
xchg
enter
insl
fucomip
stos
aaa
js,pn
push
cltd
push
in
xchg
add
fsub
or
adc
scas
xchg
fdivl
pop
dec
addl
xor
or
out
fsts
or
xchg
shrb
sbbl
pop
jno,pn
xchg
or
movsb
mov
inc
push
xchg
xchg
rcrl
dec
lcall
test
push
sbb
dec
adc
cmp
inc
insb
xor
sarl
leave
or
mov
ss
dec
inc
jne
movsl
adc
imul
push
ret
orl
lahf
test
sbb
dec
mov
mov
xorb
pop
aam
pop
jl
mov
sbb
daa
xchg
test
jp
mov
insl
jmp
push
xor
adc
prefetchwt1
or
andb
movsb
push
and
cmp
and
add
push
lea
repnz
xor
roll
mov
les
jo
adcb
mov
dec
sub
mov
aam
test
scas
jp
aas
lret
pop
pop
jns
hlt
pop
lret
cmp
lea
out
inc
inc
mov
sbb
sbb
pop
fidivrl
jl
jae
push
mov
inc
stos
mov
dec
dec
cmp
add
stos
negb
lock
push
outsb
push
jne
shl
xor
clc
sub
dec
cltd
stc
push
inc
inc
push
lcall
push
lock
mov
lahf
out
int3
cltd
push
cmpsl
sahf
ss
in
sub
xchg
sbb
mov
or
aas
ret
jl
in
pop
jb
aam
jecxz
ja
int
insb
rclb
test
outsb
int3
outsl
xchg
stos
pop
add
jnp
stos
add
sbb
sub
dec
mov
ja
and
scas
lods
frstpm(287
not
lahf
mov
outsb
xor
dec
sarl
rorb
out
adc
sub
outsl
ret
dec
push
sub
jns
push
inc
pop
mov
push
arpl
push
cld
or
int
cli
shll
jmp
mov
popa
stos
adc
jnp
xor
arpl
mov
bound
mov
ficompl
xor
mov
pushf
test
pop
jle
adc
mov
pop
pop
xor
xchg
jg
or
mov
mov
xor
xor
mov
push
stc
dec
pusha
mov
adc
mov
mov
rclb
mov
jmp
mov
or
jle
imul
aam
adc
xor
fistpll
orb
xchg
cmc
or
xchg
repnz
imul
std
dec
xchg
cmp
mov
lcall
popf
daa
sub
shrb
cmp
in
xlat
mov
dec
mov
in
pusha
test
mov
xchg
or
movsl
or
lods
jle
lods
fwait
push
mov
cmovb
sub
or
scas
jle
ss
int
je
ja
mov
push
xor
or
test
pop
into
ret
in
inc
call
adc
lds
fs
lods
mov
mov
into
xor
sbb
inc
movsb
mov
inc
push
lods
stc
add
sub
push
add
push
sbb
add
loope
cmp
pusha
jo,pn
dec
xor
sbb
cld
mov
cmpsl
andl
pop
jae
pop
clc
repz
push
push
dec
out
mov
push
cmp
push
cmp
loopne
adc
je
pop
adc
mov
sub
jge
jle
pushf
or
test
lcall
push
aam
nop
jno
cmp
scas
cwtl
scas
and
mov
fisubrl
shll
nop
ret
lock
outsl
ffree
hlt
add
xchg
and
pop
or
adc
jmp
js
sahf
mov
mov
inc
sahf
ljmp
rolb
scas
push
mov
cmp
add
xor
out
bound
std
cmc
xchg
xor
out
shr
pushf
cmp
sahf
inc
cs
lea
cs
pusha
fisubrs
scas
dec
dec
jb
push
push
mov
mov
dec
mov
sbb
loop
mull
cmp
jecxz
arpl
rolb
jne
scas
push
jnp
sbb
xchg
jmp
sbb
or
push
js
push
cmp
outsb
dec
cmp
mov
rcrl
inc
in
xor
lea
jle,pn
scas
pop
adc
mov
or
jnp
aad
cli
cmc
pop
shr
addl
sbb
mov
loop
fmuls
lahf
test
pushf
sar
jno
push
jge
push
adc
mov
adc
daa
rclb
ret
in
or
mov
dec
jnp
jno
push
and
stos
lret
rol
leave
xchg
dec
js
inc
xor
std
filds
mov
cmp
popa
push
lds
mov
mov
andl
pop
enter
repz
cmp
or
push
pop
or
ss
outsl
outsl
ja
push
pop
fisttps
mov
enter
jle
or
cmp
push
into
stos
jg
xchg
adc
mov
or
test
pop
ret
adc
mov
icebp
fdivrs
loopne
and
js
repnz
add
cmpsl
aas
mov
mov
mov
mov
cmp
pop
add
std
das
sarb
fnsave
gs
pop
dec
or
push
aam
pop
outsl
ds
cmp
iret
add
and
and
xchg
dec
mov
and
out
jle
inc
pop
inc
jnp
aas
mov
inc
aaa
inc
push
and
sub
cli
jns
sub
popa
or
sarl
pop
movsl
pop
jbe
outsl
ljmp
or
ret
pop
dec
outsb
call
and
xchg
sub
jl
xlat
jnp
mov
fcomps
dec
xor
add
or
jg
cltd
jns
sub
xchg
xchg
cmc
hlt
push
mov
shrb
sete
mov
push
xchg
sub
pop
or
loopne
and
call
mov
xor
mov
pop
pop
push
jmp
jnp
std
jge
cmp
scas
mov
push
rorl
out
ds
jmp
mov
cs
mov
addr16
daa
rorl
jle
xchg
iret
pop
outsb
sub
push
pop
fildl
mov
lret
jbe
or
cli
cmp
or
imul
cmp
fcmovnb
add
sbb
xchg
mov
fyl2x
cmp
adc
jmp
push
das
movsb
sbb
js
mov
lret
fwait
push
ds
sbb
cld
flds
pop
mov
inc
or
outsl
jns
pushf
lods
std
lds
cs
andb
xchg
nop
shl
aam
jmp
dec
xor
mov
push
mov
dec
or
mov
mov
xchg
ja
shll
pushf
test
sbb
adc
addr16
out
lcall
sbb
jno
rol
ret
jns
shr
adc
out
ficomps
mov
andb
sub
push
into
sbb
test
push
icebp
lods
inc
into
iret
daa
push
rorl
jnp
outsl
dec
test
jle
sbb
sbb
sub
ret
adc
dec
mov
es
hlt
aaa
pushl
dec
lahf
and
jg
jmp
jecxz
xlat
ja
jnp
mov
lcall
cwtl
cwtl
pop
icebp
in
xor
or
aad
and
adc
imulb
je
fdivrs
lds
cltd
rcl
pop
push
and
das
inc
pop
aaa
add
pushf
cwtl
out
inc
inc
mov
int3
inc
shlb
pop
xchg
xor
sub
adc
jne
inc
push
cli
or
mov
xchg
call
xchg
rdmsr
mov
cmpsl
into
sti
movsb
xchg
lcallw
mov
or
pop
mov
scas
cmc
jnp
in
mov
outsl
pop
out
mov
int
mov
in
sarb
push
push
mov
jge
add
jae
sbbl
pop
enter
ret
xchg
std
xchg
push
into
test
sbb
into
xchg
xor
cmp
scas
pop
push
ret
mov
inc
push
mov
push
cmp
ret
or
adc
sub
jne
lret
loope
add
pop
arpl
pushf
flds
sti
or
pusha
and
cmc
shll
pop
jle
inc
inc
test
cmpsl
or
push
fisubrs
sub
mov
jns
aam
shlb
test
test
xor
ret
inc
mov
mov
rclb
std
or
pop
pop
addr16
adc
loope
arpl
insb
adc
test
jae
ljmp
clc
ja
jmp
cmp
pusha
mov
ror
xor
push
adc
mov
test
push
xchg
lret
cmpsb
imul
adc
mov
jp
rcrb
xchg
call
clc
sub
add
scas
mov
mov
dec
cmp
add
and
dec
fcom
cmp
xadd
xor
jae
mov
pop
pop
rorb
fcomps
jle
jg
stc
cmpsl
dec
loopne
dec
cmp
jne
call
outsb
gs
orb
sbb
cmpsb
mov
sbb
add
out
lahf
test
add
jg
repz
mov
cmp
popf
xlat
add
sahf
cld
sbb
push
test
mov
cmp
lahf
xor
andl
out
jmp
and
jle
lcall
inc
insl
jns
cmpsl
sti
mov
ret
fwait
lods
notl
insb
xchg
je
cltd
xor
mov
push
add
lcall
inc
push
mov
arpl
ret
gs
repnz
or
mov
sbb
pop
mov
or
insl
xchg
out
mov
push
mov
cltd
lea
xor
das
mov
adc
add
sbb
sbb
iret
inc
in
lea
inc
mov
mov
scas
mov
bound
stos
lcall
dec
push
mov
mov
mov
lret
add
inc
imull
xchg
cmc
and
scas
or
loop
jae
aaa
int3
sub
add
sbb
xchg
loop
ficoms
xor
jmp
xchg
pop
add
dec
sbb
mov
int3
out
adc
and
lcall
add
scas
dec
and
mov
adc
mov
rorb
jg
xor
inc
pop
pop
sbb
test
jnp
lret
dec
mov
insl
or
pop
ss
jle
cmp
xor
xchg
scas
jbe
iret
lock
lcall
loope
addl
xchg
push
or
mov
push
mov
push
push
iret
in
cmpsl
push
or
es
pop
fnstsw
push
xchg
pop
sarl
lret
rolb
cmpsb
int3
dec
push
outsb
pop
cs
test
sbb
dec
insl
insb
aad
stos
leave
mov
mov
lret
mov
cmp
lods
in
xchg
test
pop
mov
push
clc
and
jo
cmp
or
jnp
pop
sub
ficoml
push
aas
cld
jne
mov
xchg
add
out
mov
inc
xchg
fptan
xor
jbe
into
idiv
push
sub
aas
xlat
inc
adc
mov
cmp
jo
loop
jae
add
inc
sbb
dec
fcomps
push
ss
dec
sbb
jbe
xor
push
inc
mov
jb
push
sub
lods
lret
cs
loop
or
mov
mov
sarb
pop
mov
cmp
cmpsb
mov
lds
sbb
int3
stos
jo
scas
dec
push
push
dec
dec
jl
or
mov
in
enter
lock
into
push
push
inc
lcall
push
push
jg
lcall
cmpsb
imul
inc
daa
jp
jg
sub
push
mov
mov
addr16
ljmp
jecxz
sbb
xchg
lret
sub
mov
movl
fsubr
xchg
hlt
mov
enter
sbb
fistpll
xchg
in
mov
pusha
fstl
movsb
in
xchg
pop
adc
and
leave
push
xor
es
push
sar
or
shl
dec
or
jp
xchg
es
cli
push
lds
mov
test
daa
or
int
push
add
inc
cmp
mov
loope
mov
xor
ss
test
or
shll
cwtl
inc
xchg
stos
sub
repnz
and
dec
pusha
pop
std
lods
jge
inc
mov
leave
andb
jl
es
mov
jae
lahf
mov
nop
lock
mov
xor
aaa
push
lods
loopne
jb
fidivs
push
push
or
sahf
dec
popf
pushf
push
sub
push
outsb
adc
dec
insb
rcrl
sub
push
ret
dec
mov
ja,pn
dec
jae
daa
jge
out
call
pop
jl
adc
jle
lea
cmp
cmc
pop
inc
fucomip
fwait
movsl
leave
in
pusha
fstps
ds
test
or
enter
rcrl
jl
xchg
scas
aam
pop
push
cmpsb
mov
push
cmpsb
les
sbb
rcl
sbb
call
adc
mov
cmc
inc
adcl
and
stc
out
pushf
in
push
fldcw
popa
int
insb
dec
lahf
test
sbb
fs
stos
ja
fsubrl
sub
imul
sbb
aas
sub
sbb
cld
xor
mov
cmc
mov
shrl
mulb
ss
and
ss
sbb
fsts
sub
mov
nop
jo
rclb
imul
mov
ds
vpcmpeqb
push
xchg
pop
insb
lahf
pusha
ret
int3
and
cmp
stos
push
in
scas
dec
xor
es
xor
jg
flds
stc
push
push
cmp
ret
jnp
mov
cmc
iret
fwait
and
mov
mov
js
lock
jecxz
xor
mov
sbb
xchg
mov
mov
sub
nop
inc
or
and
mov
fcomip
scas
rorb
outsl
sbb
jg
fstp
xor
pop
jle
mov
lret
inc
or
test
or
cli
test
sub
adc
mov
in
fsub
mov
and
add
adc
push
and
cmp
and
mov
mov
dec
shlb
cmp
pop
repz
mov
jmp
sahf
push
inc
sbb
cld
jge
imul
testb
xor
push
shrl
cmpsb
mov
sub
xchg
add
lods
adc
sbb
mov
xor
inc
mov
out
add
shll
addr16
jge
cmp
xor
jg
and
mov
xlat
pop
add
pop
inc
rcrb
jp
or
mov
lock
and
or
pop
insb
push
movsl
lods
pop
mov
jp
call
cld
mov
mov
mov
fcoml
cmp
xchg
fs
xchg
dec
or
xchg
and
icebp
adc
stos
ljmp
mov
jb
and
sbbb
test
fadds
js
imul
jecxz
sub
inc
fstps
and
mov
push
inc
popa
aas
loopne
push
call
mov
cmp
mov
fcompl
icebp
add
xchg
adc
in
xor
aaa
inc
mov
test
adc
in
inc
push
xor
outsb
mov
shlb
movsl
cmp
movsb
and
sahf
adcl
push
dec
cli
rclb
pop
shrb
inc
or
mov
mull
push
std
hlt
dec
xor
push
lret
jge
adc
xchg
shl
sbb
stos
adc
btc
dec
lret
roll
popf
shl
mov
jne
sub
insb
loope
push
bswap
add
xchg
jns
out
js,pt
mov
repz
mov
jmp
ljmp
pusha
mov
pop
es
test
fdivrl
and
mov
jns
add
inc
scas
mov
mov
lret
arpl
xchg
inc
movsl
fisttpl
test
testb
xchg
popa
imul
insl
mov
xor
adc
orb
pop
dec
dec
mov
insb
test
leave
js
xlat
sbb
sarb
imull
out
adc
adc
add
outsl
bound
mov
aaa
and
xchg
adc
aam
xchg
mov
lret
cmp
lahf
sub
es
sti
outsl
mov
hlt
or
mov
shrb
push
mov
outsl
mov
call
add
adc
movsl
jl
out
jnp
in
cltd
inc
or
xchg
xchg
pop
iret
loop
jmp
mov
mov
push
adcb
mov
sti
push
mov
pop
fsubrl
mov
aaa
cld
push
pop
out
inc
and
xchg
sbb
fldenv
loope
push
and
mov
push
stc
adc
inc
mov
push
xchg
mov
shll
std
into
mov
xchg
pop
out
enter
cs
in
out
mov
ret
mov
aam
fcmove
jmp
mov
sbb
lods
add
imul
pop
mov
fdivrs
int3
and
ds
jne
cwtl
push
cmc
xor
call
push
sarl
xchg
mov
push
pop
inc
xchg
xchg
movsl
sbb
mov
add
int3
lret
mov
sub
and
cmpsl
lret
lods
inc
pop
inc
push
lock
xchg
mov
jl
mov
mov
repz
sti
push
or
sub
shrb
incl
sub
xchg
sbb
in
mov
mov
sub
xchg
fsubrs
adc
adc
pop
xchg
mov
call
hlt
lods
mov
pop
push
mov
out
pop
and
pop
xchg
cs
jl
xorl
sbb
xchg
xlat
stos
test
mov
sub
cmc
lret
jp
xor
adc
addl
inc
xor
mov
mov
mov
imul
xchg
loopne
push
adc
pusha
mov
into
cmp
addb
xchg
xor
sub
in
pop
gs
in
jmp
test
fwait
cmp
mov
inc
ss
sahf
mov
movsb
xchg
or
pushf
xchg
dec
loopne
add
les
filds
or
lcall
lods
pop
xor
adc
pop
cld
inc
stc
mov
mov
or
fs
push
or
add
xor
aad
push
enter
ja
loop
or
es
sub
adc
ficompl
inc
outsl
xchg
push
ss
fwait
cmpl
divl
lods
call
loop
jp
xchg
repz
mov
dec
mov
push
dec
xor
aas
lods
mov
add
mov
test
leave
addr16
popa
stos
add
ss
and
loope
cmp
jmp
movntq
out
pop
xlat
jno
aam
ljmpw
xor
push
test
jmp
stos
pushf
jae
cmp
cmpsb
gs
popf
int3
into
pop
adcl
fcompl
lods
dec
push
lods
das
icebp
mov
lds
int3
js
dec
cwtl
or
xorl
jp
pop
jp
lds
fdivrl
xchg
shlb
mov
icebp
and
les
lea
icebp
insl
sub
xor
fs
cmp
mov
outsb
aam
or
ja
sbb
xor
lea
add
xchg
enter
mov
cmpsb
imul
js
scas
mov
sahf
xor
xchg
movsb
mov
test
dec
pop
ss
dec
repnz
test
mov
cs
add
and
mov
std
aas
in
add
mov
das
jno
mov
push
xor
into
fisttpll
cmp
test
or
imulb
test
xor
xor
rorl
mov
pushf
add
adc
push
enter
pcmpeqd
pop
lods
pop
data16
sbb
es
or
lret
mov
xor
xor
xchg
testb
inc
adc
shll
dec
cld
je
mov
lods
jnp
mov
or
stos
scas
inc
pause
fstpl
pop
add
push
mov
xlat
out
cmpsl
dec
pop
int
inc
mov
sbb
mov
pop
clc
xor
add
jae
pop
mov
imul
movsl
scas
nop
mov
add
je
mov
jns
pop
inc
cs
jnp
add
xchg
lock
sbb
cwtl
addr16
and
mov
fcmovu
dec
xlat
push
push
mov
int3
and
jmp
adc
js
lock
test
std
das
pop
and
mulb
adcb
cmp
dec
cs
ss
mov
inc
int
pop
push
outsb
dec
rep
push
test
cmp
sti
daa
mov
insl
xchg
loop
xor
shr
cwtl
cmpsl
and
push
sti
outsl
sbb
add
aam
lcall
jp
mov
mov
mov
lcall
or
add
jmp
out
fwait
mov
cmpsl
in
sbb
test
xchg
movsl
test
dec
sahf
outsl
xchg
loopne
xor
push
xor
dec
mov
jno
mov
mov
mov
xor
aas
xchg
inc
out
lods
clc
loop
push
sub
stos
push
dec
xchg
push
sbb
xchg
push
repnz
push
inc
push
mov
fdivrs
sub
fiaddl
out
inc
mov
cmc
mov
aad
xor
ret
hlt
test
xor
sub
test
fsubrp
ja
clc
dec
lods
mov
roll
lahf
dec
pop
es
mov
scas
es
in
mov
cmc
ret
push
pop
cli
cld
push
inc
cmp
push
lock
mov
pop
imul
cmp
lahf
fdivrl
mov
popa
out
inc
iret
jge
inc
shr
stos
sbb
mov
add
mov
mov
and
popa
subb
jo
arpl
cmpsl
cmpsl
add
loope
add
in
sti
ret
loopne
loop
jle
push
andl
dec
inc
pop
lock
and
mov
sub
popa
sbb
push
outsb
fwait
jle
jmp
sbb
idivb
push
add
or
fiadds
mov
fwait
imul
cmp
imul
mov
adc
jns
popf
shr
mov
sbb
dec
icebp
nop
and
adc
adc
repnz
pop
ss
scas
lret
push
sarb
mov
jmp
test
cmpsb
test
adc
mov
ljmp
sti
dec
stos
fsubs
rol
lcall
popf
jl
xchg
aam
fistpll
add
sbb
sub
mov
or
cmpsb
inc
roll
sub
sbb
repz
xadd
mov
and
xchg
xor
sub
and
rorl
call
xchg
int3
arpl
inc
lods
cmp
lcall
scas
mov
and
pop
cmp
fmuls
test
xor
movsb
sbb
fcoml
sub
leave
lret
mov
out
cmc
int
pop
out
ret
shlb
loopne
pop
or
pop
jp
adc
inc
jecxz
jmp
std
xlat
jne
pop
repz
adc
lea
int3
jmp
adc
shll
adc
das
xchg
cmp
inc
mov
pop
movsb
lods
aam
and
mov
pop
fdivl
sub
lret
jmp
push
repnz
push
repz
pushf
xor
lret
push
in
clc
push
addr16
xchg
aad
addb
pop
jg
stos
insb
dec
jecxz
pop
mov
cmp
int3
loop
dec
xor
in
inc
call
adc
icebp
out
pop
and
mov
jmp
sbb
fmuls
sti
nop
and
test
xor
jno
jl
pop
popf
aad
push
dec
stos
sti
jp
ja
xor
adc
jmp
mov
cmp
outsb
mov
push
dec
inc
call
adc
ret
call
pop
popa
jp
test
pop
fwait
xchg
cltd
mov
push
xchg
pop
cmp
stos
es
mov
pop
adc
inc
sete
add
mov
xor
fdivr
mov
cmpsb
sbb
pop
or
mov
notl
popa
xchg
leave
cmpsb
adc
push
push
sub
xchg
je
pop
add
push
testb
repnz
clc
adc
xchg
adc
mov
dec
movsl
movsl
inc
test
in
push
push
pop
xor
push
test
sbb
push
fcomps
gs
sbb
jb
xor
add
mov
mov
lret
pushf
mov
and
test
sbb
xchg
push
mov
mov
xor
mov
and
cmp
add
out
and
arpl
ja
fdivrl
cmp
pop
lahf
out
mov
stos
ljmp
ja
pop
sbb
mov
cmc
test
stos
mov
testl
dec
aad
pop
mov
lret
mull
sbb
mov
mov
jl
cmp
ficompl
mov
pop
outsl
push
cmp
xchg
xchg
popf
jmp
outsb
iret
insb
dec
mov
bound
mov
mov
ret
sub
lret
je
inc
daa
outsl
js
hlt
and
jge
cmp
push
std
cltd
push
or
sbb
andb
or
pop
xchg
cmpb
xor
cld
inc
fistpll
test
mov
andl
adc
dec
jno
mov
lcall
fs
or
jb
faddl
movsb
xor
push
mov
bound
mov
push
pop
cmp
shl
and
mov
xchg
out
add
vmread
mov
mov
ficoms
gs
cmp
adc
outsb
das
dec
out
add
out
xor
add
push
xor
xlat
fwait
imul
mov
jnp,pt
daa
out
aad
cmpsl
repz
xchg
dec
jns
icebp
les
inc
inc
ljmp
ror
mov
jmp
jmp
jbe
jne
xlat
leave
push
inc
scas
inc
lods
fidivrs
and
insb
xchg
adc
push
pop
dec
out
test
lret
pushf
or
test
push
push
or
and
movl
movsb
ljmp
or
sub
xchg
lods
xor
sbb
jbe
push
xor
cmp
dec
inc
jnp
sbb
sub
jecxz
or
mov
pop
push
dec
mov
mov
jae
push
mov
push
xchg
mov
fdivs
fisubs
in
cli
lods
insb
daa
movsb
dec
mov
mov
cmovg
bnd
cmp
pop
clc
test
cmp
mov
shl
or
jne
cmp
add
ud1
and
jp
mov
aam
fidivrl
movswl
lahf
jae
pop
jge
pop
push
jle
cmc
xorb
push
and
xchg
test
shrb
xor
and
xor
mov
ja
roll
cld
push
sbb
arpl
lahf
push
xlat
mov
rcll
mov
sub
or
pushl
pop
cmc
and
cmpsb
mov
je
testl
outsb
into
dec
lret
sub
pusha
int
mov
aas
push
cmpsb
cmpsb
xlat
xor
dec
enter
add
int
decb
mov
lcall
icebp
lahf
imul
pop
icebp
sarb
sbb
stos
sbb
fstps
pop
push
shl
jo
test
sahf
idivl
xchg
dec
arpl
dec
pop
stc
in
ss
ret
int
sbb
pop
xchg
pop
xlat
int
jbe
xchg
gs
xchg
push
nop
or
push
add
mov
fildl
fldenv
in
push
jmp
stos
inc
mov
sbb
in
cli
mov
or
lods
jo
push
fwait
cmp
and
enter
pop
in
mov
inc
inc
repz
leave
add
add
ds
mov
fnstenv
or
xchg
pop
push
mov
in
insl
test
insl
and
popfw
in
addr16
cmpsb
cwtl
sub
ret
movsl
fsubr
push
cmpsl
jb
xor
push
mov
sbb
scas
rcrl
fadds
mov
or
push
in
lret
cltd
shl
sbb
fsubl
repnz
push
jp
movsb
inc
inc
leave
out
cmc
pop
sub
in
xor
jmp
mov
adc
push
lods
lcall
mov
ds
je
fistpl
mov
fcmovnu
in
add
test
mov
cmp
roll
das
pop
and
cli
mov
dec
jmp
add
sub
push
lcall
inc
push
fsubrl
jecxz
inc
xor
shlb
adc
sub
int
outsb
cmovno
nop
cmp
dec
out
xor
popa
aaa
insb
fisubl
sub
out
inc
mov
out
ds
in
ficomps
or
sbb
sbb
popf
clc
movswl
jmp
cmp
sbb
mov
pop
dec
ds
iret
mov
lret
mov
pop
out
mov
push
dec
outsb
fdivs
cmpsl
mov
jbe
xor
das
jg
sti
mov
ret
add
out
push
call
lock
xor
sbb
xorb
dec
shlb
mov
add
out
xor
lss
push
les
or
in
or
xlat
int3
jp
jmp
inc
sbb
dec
inc
scas
std
arpl
cmpsl
adc
cwtl
mov
test
xorb
stc
stos
aad
push
fcmovbe
es
es
decl
repnz
scas
lea
loopne
mov
xorl
jp
jmp
mov
pop
cmp
mov
in
ret
push
mov
sahf
out
shrl
daa
icebp
push
inc
inc
mov
pop
jb
and
sub
insl
pusha
adc
pushf
jns
add
imul
pop
mov
scas
call
movsb
aad
sbb
jl
cmpsb
sub
mov
rcl
lea
clc
mov
dec
inc
inc
mov
cmp
add
push
arpl
push
das
mov
fcmovb
xorl
stos
negb
sbb
sbb
add
push
insb
int
ret
cmpsl
stos
fisttpl
push
pusha
test
sub
insb
dec
ss
mov
jmp
imul
sub
cmpsl
push
fstl
repz
out
dec
pop
xchg
sub
sub
cld
inc
mov
std
mov
rorl
mov
fbld
cwtl
pop
lret
das
mov
xchg
xor
stos
fisubs
jmp
bound
sub
scas
dec
pop
popf
into
loop
sbb
leave
daa
jnp
push
and
cmp
xor
test
pop
mov
sbb
es
insl
sti
imul
or
cmp
in
inc
mov
test
lret
cmc
mov
push
lcall
cmpsl
adc
sbb
sub
pop
in
lds
xchg
adc
sbb
aad
xchg
jecxz
clc
jno
imul
nop
jae
test
xor
cld
lea
icebp
mov
sub
aad
subl
scas
je
or
push
scas
push
sbb
adc
popa
test
inc
loop
mov
lret
out
adc
sub
ss
out
repz
test
cmp
or
mov
pop
stos
test
ds
aaa
sbb
add
aaa
mov
in
shll
pop
mov
test
dec
pop
adc
add
in
inc
dec
lock
cmpsb
inc
sbb
mov
and
test
ret
ret
out
lret
pop
pusha
shr
xor
jno
int
movsl
ret
push
adc
clc
test
in
lret
jecxz
pop
sub
mov
or
aam
add
cs
cmc
cmp
push
mov
fidivs
test
negl
dec
ficomps
imul
outsl
xchg
ficoms
in
mov
shll
mov
inc
or
push
outsb
insb
packsswb
addl
jecxz
pop
cmp
bound
aaa
fcoml
loopne
lret
sbb
and
out
cmpsl
adc
les
xchg
jge
lock
outsl
sarl
clc
mov
xor
lods
xor
xor
inc
xchg
or
jo
popf
adc
mov
push
in
ss
mov
fnsave
insl
mov
pop
and
adc
hlt
mov
test
icebp
xchg
mov
cmp
add
outsl
js
scas
stc
lahf
sbb
cmp
mov
andl
lds
test
arpl
insb
push
mull
adc
cmp
jle
popa
ret
pop
add
in
mov
sbb
lock
lods
mov
push
out
jns
inc
icebp
push
cltd
dec
mov
pop
pop
stos
xchg
xchg
push
mov
mov
adc
rcll
cli
cli
inc
dec
out
clc
sub
sub
popf
test
jmp
or
sarl
in
pop
lahf
add
lea
int3
mov
pop
inc
incl
mov
hlt
pop
inc
and
mov
mov
inc
mov
cmp
ret
mov
les
dec
mov
and
dec
fsubrs
lock
enter
mov
or
pop
pop
adc
cmp
sahf
xchg
or
adc
inc
out
insl
stos
mov
insb
pop
bound
lahf
xor
jbe
cmp
std
dec
enter
xor
mov
push
fsubs
mov
aaa
cmc
dec
cmc
test
movsb
and
leave
insb
xor
scas
xchg
jge
popa
pusha
lds
jmp
xor
pop
lods
decb
push
pop
sub
andb
sarl
mov
xor
cltd
ja
adc
gs
xor
jns
sarb
test
mov
js
dec
adc
adc
mov
test
je
int3
push
mov
dec
push
adc
or
inc
sbb
xchg
jnp
mov
mov
ds
inc
pop
jmp
daa
or
scas
xchg
fistpll
shlb
outsb
xchg
loopne
or
push
push
sbb
sbbl
pop
dec
fwait
xchg
push
aaa
sub
js
sbb
push
in
add
filds
cmp
out
mov
push
push
mov
lds
andb
sbb
xchg
cmpsl
inc
inc
mov
mov
adc
in
jno
fcompl
sbb
sahf
aas
mov
cmp
test
mov
dec
adc
imul
sbb
push
lcall
or
jb
push
into
xor
mov
test
and
push
movsb
popf
inc
mov
inc
loop
mov
push
push
inc
clc
pusha
xchg
movsb
or
inc
mov
inc
push
sti
enter
lock
movsb
xor
xor
mov
std
jg
sub
mov
xlat
dec
cmpb
xor
das
clc
rorb
xchg
add
mov
sub
call
push
int
mov
fwait
pop
sbb
mov
ss
add
mov
insb
xchg
mov
xchg
inc
sbb
iret
aas
sbb
out
loope
dec
stos
repnz
cmp
xor
leave
out
lret
lea
jecxz
bound
sub
aad
insl
rclb
imul
mov
movsl
ss
sbb
inc
jno
les
jnp
mov
out
cld
int
cmp
and
or
mov
out
inc
fnsetpm(287
jmp
outsl
loope
lods
sahf
pop
mov
mov
inc
fnstcw
and
pop
fcoms
xchg
push
or
lret
mov
jecxz
cmp
mov
and
inc
lock
lahf
lret
pop
jns
lahf
shl
mov
jb
sahf
lahf
inc
scas
sbb
roll
out
mov
inc
sbb
int
repnz
adc
lods
xchg
jmp
popa
or
pop
jp
add
mov
jb
jle
movsb
and
das
mov
cs
imul
addr16
cmp
push
pop
jae
in
sub
cld
pop
jne
js
dec
call
lcall
repz
outsl
movsl
test
sti
fadds
shll
cmp
push
out
cmp
dec
mov
mov
mov
mov
add
pop
outsb
cltd
cld
cmp
nop
push
mul
adc
in
iret
push
loop
inc
push
das
inc
and
dec
xchg
mov
paddd
jg
stos
pop
cmpsl
mov
mov
xchg
mov
daa
lods
sub
fsubl
test
or
pop
push
or
bound
and
pop
int3
inc
cwtl
xor
adc
insl
mov
push
ja
xchg
add
and
sti
subb
stos
or
and
pusha
fnstcw
xchg
push
mov
push
in
out
pop
and
sbbl
rorl
imul
mov
orl
cmp
call
jne
push
ret
sbb
xor
imul
sbb
ss
xor
cld
insb
enter
in
sbb
jmp
fwait
push
test
push
and
call
testb
mov
xchg
dec
push
add
sahf
jmp
and
test
adc
arpl
repnz
ficomps
adc
mov
repz
mov
push
cmp
neg
fmuls
push
mov
xchg
aam
xchg
out
mov
adc
fcoms
out
iret
mov
adc
clc
add
popf
jg
imul
dec
push
cld
aaa
je
adc
and
mov
iret
dec
jp
mov
add
lahf
loopne
pop
orb
xor
pop
ljmp
stos
xlat
cmpsb
mov
xchg
flds
daa
pop
sub
xchg
lret
xor
stos
insl
cwtl
arpl
push
movsb
push
fldcw
sbb
mov
shl
inc
pop
inc
sub
scas
cli
xor
rcrb
pop
sub
fbld
outsb
xchg
lret
cmpsb
daa
inc
xchg
sbb
popa
adcb
jg
loope
sub
fs
das
mov
pop
lock
je
int
insl
or
xchg
clc
into
mov
ficoms
test
xor
sbb
cmp
inc
mov
into
mov
mov
jnp
test
outsl
mov
sbb
js
cli
cmp
dec
sahf
enter
cmpsl
and
movsl
ret
push
mov
mov
push
bound
bound
inc
xchg
test
jp
mov
push
xor
ljmp
lock
decb
adc
xchg
in
adc
xchg
dec
xor
pop
lock
in
popf
xor
gs
sub
pushl
lods
fsub
cmp
in
repz
dec
cmp
sub
jl
fsubl
adc
ret
sub
jo
lret
mov
push
cmp
roll
mov
dec
and
out
das
jp
jge
pop
outsl
jo
sar
pop
aad
pop
add
cmp
lock
xchg
inc
mov
shlb
rorl
adc
nop
cltd
inc
pop
je
xor
sbb
dec
sarb
and
inc
sbb
cwtl
leave
imul
add
mov
loopne
testb
test
dec
cmp
loop
fildll
sub
push
mov
cmp
xor
pop
cmp
mov
rcl
fdivr
xchg
add
in
cli
inc
aas
sub
rcll
pushf
es
sub
mov
rcrl
and
xorb
inc
mov
cmp
jbe
mov
out
xchg
inc
inc
inc
out
cwtl
mov
int
negl
shl
mov
or
pop
push
push
and
cmp
fcmovnu
mov
push
inc
mov
pop
das
sbb
inc
or
push
mov
mov
sbb
aas
test
dec
nop
jno
mov
movsb
mov
inc
in
cmp
lret
scas
imul
outsl
cs
sti
in
push
das
mov
xor
sub
cmc
sub
and
mov
loopne
add
mov
or
out
jae
jle
outsb
je
test
daa
adc
mov
mov
and
adc
fnstenv
mov
cmp
jb
xor
cmp
in
add
es
addr16
xor
test
push
movsl
adc
mov
out
lods
scas
scas
insb
iret
mov
cmp
sbb
mov
adc
test
mov
jl
inc
mov
inc
inc
mov
add
out
and
ljmp
pop
xchg
ds
imul
add
es
popa
jecxz
lods
dec
pop
sbbl
popf
in
xchg
loopne
bound
push
jo
call
jo
or
dec
decb
lahf
dec
mov
imul
ret
in
ja
lods
xchg
push
fs
je
lea
mov
movsl
dec
rolb
gs
mov
adc
fcoms
dec
daa
push
out
jge
adc
xor
jbe
xchg
add
les
jl
mov
loope
jle
js
mov
push
fwait
outsl
cmovle
add
sbb
mov
addb
fwait
jp
lods
lret
ffreep
xchg
dec
test
mov
xor
dec
cwtl
mov
inc
or
inc
add
addr16
mov
pop
out
orb
loopne
insb
fwait
pop
in
adc
mov
adc
inc
add
ds
mov
repz
rcll
sbb
mov
push
push
pop
jmp
jecxz
imul
inc
lahf
and
jle
xor
cli
aad
inc
je
inc
push
rorb
push
mov
fstps
dec
adc
cmp
sahf
lds
dec
rolb
sbb
roll
je
int
push
jg
pop
add
pop
adc
jmp
mov
fcoms
cmp
sbb
stos
push
movsb
callw
mov
scas
xchg
mov
stos
mov
shll
ret
sbb
add
push
adc
sbb
or
jmp
inc
or
stos
xor
dec
fwait
out
divl
popa
jle
dec
and
mov
pop
mov
adc
ljmp
insl
adc
xlat
mov
mov
mov
add
pop
cmc
push
imul
fs
add
xchg
ja
lea
std
sbb
xlat
loope
clc
test
repnz
call
pop
inc
mov
gs
fwait
mov
fs
imul
data16
xor
icebp
in
test
cmc
mov
push
int
stos
adc
xor
and
xor
jecxz
jb
mov
sbbb
xchg
push
pop
cmp
lods
movsl
cmpsb
loope
roll
cmpsl
jecxz
pop
rolb
jle
dec
imul
mov
pop
jae
arpl
mov
das
push
je
sub
jecxz
lds
repnz
push
sarl
xchg
daa
sub
xor
sbb
mov
dec
decl
shrl
dec
xor
ret
repnz
mov
pop
or
xchg
jp
xchg
test
cmp
mov
dec
into
jmp
xor
and
push
inc
add
rcll
roll
or
sbb
cld
cmp
cmp
ja
cmc
jbe
xor
in
mov
out
mov
hlt
adc
push
repnz
and
xchg
popf
fstpt
xchg
jge
repz
mov
jae
cltd
into
jb
cli
iret
push
cmp
xchg
cmp
inc
pop
outsl
arpl
pop
repz
gs
mov
mov
arpl
test
enter
ja
das
cmc
sbb
mov
cmp
lret
xor
in
nop
test
filds
sbb
sbb
mov
fildl
imul
roll
sub
xchg
insb
sbb
orl
add
sbb
and
sub
adc
fmuls
lods
inc
push
and
mov
pusha
inc
or
jge
mov
or
jns
jb
and
xor
bound
fwait
dec
pusha
inc
fucom
js
push
pop
notl
dec
jae
xor
sub
or
out
adc
and
pop
clc
mov
sbb
call
push
sub
add
pop
jbe
jns
mov
push
fwait
xchg
or
inc
push
adc
xor
cwtl
in
mov
push
or
mov
fisttpl
popa
sbb
aas
push
dec
rcll
xor
jg
xor
in
hlt
lods
sub
sub
xchg
fs
cmp
aam
sub
pop
mov
adc
movsl
xchg
cmp
shl
cmc
xlat
je
subl
mov
mov
stos
pop
daa
mov
mov
push
shrl
aam
sbb
cmpsl
arpl
inc
movsl
or
pop
divl
sbb
jge
xor
push
js
out
jne
pop
jge
mov
cld
lcall
pop
lcall
lahf
scas
add
xchg
mov
test
jg
fildl
jmp
mov
fucomip
cmpsb
mov
pusha
xchg
or
popa
dec
scas
xchg
push
test
in
in
inc
sti
dec
mov
vminss
inc
jmp
adc
mov
arpl
cli
cwtl
mov
mov
std
popa
lds
jae
subl
outsl
push
jecxz
stc
test
aas
dec
jle
cli
and
fbld
mov
icebp
rorb
int
insl
mov
mov
or
das
incb
add
inc
stc
pop
xor
fistl
push
or
push
cmp
loop
ljmp
inc
xor
mov
xchg
pop
pop
mov
sub
push
je
and
test
adc
push
loope
mov
add
shr
or
sbb
push
sub
ss
pushf
vmovaps
out
jmp
test
mov
pusha
gs
mov
repnz
scas
xor
mov
push
imul
fisttps
popf
cmp
rcll
jl
dec
sbb
pop
cmp
jle
cli
add
pop
sbb
and
mov
or
call
shrl
clc
xchg
jae
ljmp
push
mov
lods
mov
data16
pop
fcmovnu
or
inc
cli
dec
loopne
adc
shlb
inc
sti
jno
jno
or
rorl
fldl
xchg
pop
mov
mov
cmpsl
lods
mov
mov
and
dec
popf
test
data16
popa
fisubrs
out
push
dec
and
push
imul
dec
imul
cmc
pop
jp
pop
jb
aam
cmp
rclb
leave
sbb
or
imul
inc
mov
mov
jnp
out
fisubrs
push
dec
mov
movsl
pop
fcmovb
sub
xchg
stc
out
fmulp
mov
js
inc
scas
outsb
adc
js
add
roll
jnp
stc
fistpl
xchg
mov
fwait
std
adc
loope
gs
jg
xchg
test
mov
mov
lds
dec
lcall
push
mov
push
fwait
jmp
sbb
std
daa
mov
lds
push
pop
push
gs
stc
jle
xchg
xor
gs
dec
ret
mov
dec
sar
fs
popa
and
lods
test
mov
pop
lods
inc
cmp
mov
and
lret
mov
mov
fsubl
sahf
jne
mov
ljmp
addb
das
adc
ret
or
cmp
inc
leave
mov
aaa
mov
cmpsb
daa
sub
cmpb
push
adc
imul
add
cltd
das
mov
fwait
stos
pop
lods
push
jbe
cmc
loop
insl
cmp
into
bnd
enter
scas
xchg
add
inc
xor
push
adc
xchg
pop
test
iret
jbe
sub
cmp
cmp
mov
lods
lcall
ljmp
pop
mov
mov
xchg
pushf
lret
adc
push
lods
aam
fcmovnu
test
lods
movsb
mov
data16
fxch
pop
xchg
ljmp
cmp
popa
sub
mov
and
xor
dec
sahf
aad
fstp
pushf
aad
xor
dec
loopnew
xchg
sbb
stos
pop
push
fstps
lret
pushf
lock
xor
and
add
mov
mov
pop
mov
gs
mov
imull
jne
jo
fsts
out
fcmovnb
jp
scas
and
jmp
push
xor
mov
pop
test
js
les
scas
lret
fisubrl
in
sbb
xchg
push
leave
jo
fisttpl
daa
adc
cltd
adc
call
jo
xorb
jb
lods
enter
add
das
lret
push
stos
inc
jg
into
push
dec
int3
andnps
xor
push
rcrl
je
cmp
push
jmp
mov
xchg
leave
jmp
xchg
scas
jmp
scas
pop
out
iret
call
add
sub
push
repnz
fbstp
fs
imul
pushf
mov
idivl
loopne
lret
ljmp
pusha
add
lcall
jmp
aaa
push
dec
out
lock
sub
xchg
push
lods
adc
pop
jmp
or
rorb
jecxz
sbb
sub
icebp
lret
lcall
int3
adc
stos
jg
loopne
mov
push
cmc
int
dec
fcmovnu
pop
mov
mov
test
aam
mov
in
loop
and
clc
jno
pusha
xchg
pop
stc
pop
andl
jae
je
jns
xchg
ret
inc
and
lea
mov
sarl
xchg
orb
add
lods
test
andb
out
sbb
inc
xor
js
lcall
adc
jae
or
movb
dec
lcall
inc
pusha
xchg
cmp
out
outsb
and
lock
push
and
xor
inc
enter
int3
pop
xor
xchg
xlat
popf
shll
cs
push
loopne
fstp
jecxz
jp
imul
fildl
aam
in
push
mov
bnd
rdtsc
pop
jae,pn
pop
aas
js
lds
sahf
push
add
dec
adc
jl
push
call
mov
stos
xor
nop
notb
push
inc
mov
stos
xchg
sbb
add
xor
and
sub
lret
pop
xor
fisttpll
pop
pop
bnd
add
aam
sub
inc
insb
jl
jno
sub
add
testl
int3
inc
xor
add
ljmp
cmc
inc
pop
shrl
cmp
cwtl
icebp
jo
mov
cmpsb
addb
ss
or
xchg
rcrb
jl
test
mov
insl
adc
inc
sti
or
push
loopne
ret
inc
aaa
adc
sbbb
aas
jmp
xor
add
mov
xchg
adc
jbe
addb
push
or
inc
scas
adcb
pop
addr16
lret
inc
push
ds
mov
out
call
insl
push
data16
cs
scas
dec
adc
xor
xchg
dec
lods
push
out
push
in
gs
add
mov
stos
pop
shrl
cld
mov
adc
inc
pop
ret
or
mov
mov
test
jl
clc
lods
jb
pmovmskb
jge
stos
mov
or
pop
aaa
push
push
push
pop
cmp
fdivrp
lahf
daa
adc
mov
stos
mov
movsl
shrb
test
cli
test
es
mov
sbb
nop
orl
fcmovnu
sbb
push
call
fisubl
rcl
fwait
add
mov
cwtl
mov
push
mov
mov
push
cmp
sbb
and
add
or
stc
enter
pop
sub
mov
mov
mov
or
repz
jo
cmc
imul
inc
mov
push
jo
mov
push
mov
sub
push
mov
fldenv
inc
pop
mov
or
fs
push
xor
mov
mov
pop
icebp
lret
arpl
push
scas
setp
inc
adcl
mov
les
jbe
fdivs
sbb
mov
xchg
and
xchg
mov
lahf
daa
pop
fwait
mov
ret
mov
mov
in
cmpl
fwait
arpl
fbstp
xor
scas
cmp
pop
int3
ja
daa
int
aam
or
pusha
movsb
pop
mov
xchg
ljmp
inc
jmp
mov
xlat
dec
sbb
inc
xchg
or
inc
lret
sbb
mov
inc
sub
je
ja
fldl
mov
lahf
push
es
push
sti
mov
int
fnstcw
mov
xchg
lcall
pop
fsts
insb
mov
dec
mov
jnp
mov
pop
jp
jo
xchg
pushf
xchg
enter
mov
dec
xchg
cmp
adc
das
mov
es
test
jle
adc
xchg
or
xlat
xor
fstpl
int
jg
dec
jecxz
ja
adc
jno
fildl
icebp
pop
xchg
jge
sarl
pushf
mov
inc
mov
inc
scas
push
push
aam
dec
jno
sub
ss
jg
mov
jne
std
das
je
mov
popa
inc
lds
xchg
push
int3
es
inc
repz
push
adcb
push
mov
sbb
mov
add
sahf
mov
add
xchg
dec
sub
stos
jae
fbld
mov
jbe
ret
shr
cmp
inc
lret
and
push
pop
dec
sbb
movsl
sbb
and
sbb
mov
js
mov
push
movsl
clc
imul
mov
pop
je
mov
push
fstps
call
cli
jle
fcmove
xchg
sbb
popf
cmp
xor
ret
insl
inc
std
mov
aaa
loope
mulb
jle
data16
mov
mov
xchg
fcomps
cmpsl
bound
adc
das
pop
mov
adc
inc
mov
adc
or
adc
adc
inc
ljmp
or
sti
push
std
xlat
push
mov
int
dec
lds
pop
movsl
cmpb
push
adc
xor
std
sbb
push
dec
fstpl
cltd
fdivrs
aam
push
push
dec
cmp
xor
pop
lcall
push
jecxz
movsl
push
shlb
mov
pop
jae
fidivrl
push
mov
mov
jbe
adc
call
dec
aaa
pop
ds
mov
into
leave
sahf
inc
xchg
push
xorb
sub
lcall
pop
jg
ja
lock
mov
popa
std
les
imul
cmp
inc
dec
repnz
sti
enter
mov
xchg
test
cmpsl
icebp
mov
push
sahf
fs
mov
cmp
add
cmp
and
mov
push
movsb
out
mov
mov
fldl
and
fnsave
adc
mov
cmp
pop
adc
adc
push
add
nopl
lcall
out
sbb
jo
push
jle
addb
lcall
jo
popa
mov
inc
mov
ss
sti
adc
in
hlt
push
cwtl
sub
es
aas
jno
fildl
pop
sbb
pop
dec
sub
cmp
ja
sub
bound
testl
sti
test
pop
inc
or
adc
push
stos
lock
lock
addr16
or
pop
outsb
imulb
clc
mov
inc
dec
scas
mov
nop
jp
iret
scas
dec
pop
mov
xor
xchg
aad
add
fbstp
in
in
xor
mov
pop
test
insl
and
jae
jge
mov
das
int
aaa
mov
push
and
pop
call
jnp
or
and
bnd
out
sbb
fcomps
mov
mov
repz
movsb
sbb
ret
pop
cmpl
int3
lret
push
mov
xchg
fmuls
mov
in
ljmp
lea
inc
sub
inc
test
das
or
imul
in
in
clc
lcall
out
pop
inc
aam
loopne
add
mov
cwtl
sbb
cld
mov
pop
cmpsl
or
jno
icebp
nop
xchg
imul
jno
enter
pop
lea
ret
sbb
sbb
hlt
pop
popa
push
xchg
cmp
das
stos
cmp
addl
sbb
lods
arpl
scas
dec
shll
pushf
not
insl
fsubr
mov
add
dec
and
hlt
scas
or
cmp
jmp
and
or
xor
add
or
popa
push
cwtl
mov
push
sarl
dec
inc
ljmp
xchg
and
andb
movsl
stos
test
mov
call
fsubrl
mov
mov
out
dec
add
addr16
fsubrs
dec
xor
outsb
mov
adc
sbb
xor
or
jge
stc
in
scas
cld
es
bound
and
mov
ds
sbb
mov
out
pop
or
mov
sbb
mov
stc
sub
cmp
mov
outsb
jo
push
pushf
inc
loop
pop
call
mov
stc
jge
jne
xor
rcll
fsubl
push
lock
mov
dec
add
dec
pop
scas
stos
push
add
les
cmpsb
lods
sub
frstor
clc
xchg
pop
cmp
adc
sub
fs
cmpl
push
hlt
or
es
subb
aad
lods
jecxz
jle
jge
call
mov
mov
sub
hlt
out
dec
lea
ss
out
insb
test
repz
xchg
loopne
daa
push
jnp
push
icebp
stc
sub
loopne
dec
xchg
dec
adc
out
cmc
lret
stos
xor
rcrl
clc
movsl
iret
idivl
push
push
ret
cltd
mov
jg
mov
jae
xor
shr
outsl
jmp
add
arpl
push
mov
pop
add
dec
outsb
in
cwtl
inc
mov
jp
ss
jmp
imul
scas
and
call
xor
mov
sti
mov
or
sbb
push
inc
test
cld
pop
mov
rorl
lcall
lret
idiv
pop
js
aaa
push
cmp
adc
add
fbld
dec
mov
les
push
das
xchg
pop
add
cmc
push
jge
jbe
and
or
push
mov
roll
fildl
xor
adc
sti
imul
pop
mov
mov
cld
roll
call
scas
adc
cmp
xor
fbstp
sahf
rcll
aam
cmc
jns
outsl
gs
stc
sbb
notb
insb
stos
sbb
cmpsl
cmp
xchg
in
pop
mov
stos
push
mov
and
and
ror
aad
out
unpcklps
subl
mov
stos
cli
mov
enter
jmp
lock
pop
fistl
andl
int
fsub
les
mov
into
xchg
icebp
jecxz
pop
and
mov
sahf
in
add
push
or
stc
push
mov
pop
xlat
popa
test
pop
push
ljmp
js
or
adc
ds
pop
pop
push
sbb
inc
stc
cmc
fs
add
lock
xchg
mov
call
or
jge
mov
or
stc
jne
std
push
scas
das
jmp
jmp
pop
shll
in
aad
jl
and
ds
cmp
push
test
outsb
fisubrs
adc
dec
mov
jecxz
mov
ret
jle
fidivrl
dec
insb
sub
sub
xchg
xor
inc
movsl
and
popa
sahf
mov
add
and
inc
outsb
cmp
fistpll
das
ds
ret
mov
lods
ficomps
dec
outsb
jle
fdivr
xor
mov
jo
test
sbb
xacquire
movsb
lret
nop
stc
in
shl
sarb
lods
sbb
cmpsb
cmp
mov
outsb
adc
push
lods
xor
mov
and
inc
inc
or
xor
cmp
pop
mov
cli
repz
mov
cmc
lcall
mov
insb
mov
rcrl
in
stos
mov
xchg
inc
roll
jno
maxps
inc
and
inc
and
cmp
push
mov
fninit
icebp
xchg
sar
push
sbb
cwtl
das
or
push
cwtl
add
pushf
std
inc
push
sbb
jae
and
dec
out
cmpsb
sbb
push
ljmp
gs
hlt
push
inc
cmp
nop/reserved
add
test
jno
test
lock
stc
mov
in
add
fisttps
jle
call
int
inc
and
lea
pop
ljmp
mov
jge
call
add
mov
cmc
pop
daa
sbb
jb
sbb
loope
lds
ss
mov
mov
orl
in
outsb
lret
mov
adc
xchg
shr
pop
fcmovnb
add
clc
mov
cmp
or
pop
inc
sub
shrl
mov
push
shrb
js
in
jl
xchg
mov
movsl
iret
jnp
cltd
dec
or
cmpsb
cwtl
dec
mov
push
aaa
mov
mov
popa
mov
js
jno
call
xchg
sub
lods
push
je
inc
nop
mov
cmp
int
mov
out
adc
popa
fs
test
rorb
pusha
jne
jp
jge
mov
xor
rorb
mov
arpl
imul
sub
daa
mov
dec
dec
cld
mov
insl
fistpl
inc
pusha
imul
xor
in
cmpsb
xor
mov
push
fiaddl
mov
xchg
std
jbe
cmp
out
lret
cltd
pop
std
or
pop
leave
or
dec
mov
in
push
ja
roll
jecxz
out
inc
or
xorl
out
pushf
dec
mov
lret
xor
jns
xor
push
inc
sahf
pop
jae
out
ja
fisttpl
test
or
outsb
test
and
mov
scas
push
insb
push
es
imul
inc
sub
inc
mov
mov
cmp
das
imul
mov
pop
mov
jg
xchg
fsub
adc
dec
scas
pop
adc
idivb
xor
out
pushf
mov
dec
inc
xchg
sbb
in
sub
repnz
dec
mov
popa
scas
test
jne
xor
xorb
repz
test
sbbl
fninit
dec
push
xchg
call
int
fidivrs
jmp
rcll
jo
sbb
push
ds
push
aam
or
xorb
ret
mov
jb
adc
icebp
sbb
jne
sub
cmp
inc
into
bound
loopne
mov
in
stc
fwait
scas
outsb
adc
call
mov
pushf
int
lret
cmpb
clc
stos
mov
push
iret
mov
jg
cwtl
loop
data16
imul
adc
push
pop
ss
mov
cmp
fbstp
ret
push
aaa
jae
ret
jo
add
enter
sbb
aas
shll
pusha
outsb
stc
cmpsb
jns
sti
xchg
jecxz
enter
int3
xchg
pop
out
cmp
pop
cmc
addr16
je
test
leave
dec
add
and
test
cli
or
imul
das
das
ss
cli
mov
movsl
ret
sti
sub
out
cmc
dec
dec
push
jne
jne
add
lahf
les
nop
inc
out
jmp
pop
and
adc
daa
jnp
ss
lds
lahf
mov
lret
test
sub
mov
xor
mov
lds
loope
dec
outsl
je
stc
mov
sub
and
subl
mov
mov
test
or
push
in
or
pushf
xchg
mov
shr
sub
add
ret
lcall
das
xchg
clc
loopne
fs
movsb
fisubs
pop
cmp
ret
jecxz
imul
mov
fisttps
in
stos
fwait
xor
in
out
aam
inc
dec
pusha
pop
xor
xor
sub
and
xor
mov
aas
shlb
push
pop
sbb
addr16
mov
in
mov
cmp
xor
pop
xor
jno
adc
dec
rol
jmp
fwait
lret
inc
sbb
ret
inc
rclb
lcall
adc
jmp
add
fildl
fnsave
mov
add
imul
pop
in
dec
xor
rorl
in
cmp
cmp
lret
sbb
movsl
inc
xlat
push
push
cli
negb
add
push
xor
cli
cmp
lahf
jo
mov
and
movsl
mov
lcall
addr16
repz
movsb
aaa
push
xor
sub
pop
aam
jnp
sbb
adc
push
mov
rclb
sub
cmp
dec
xchg
aas
ja
dec
out
or
inc
and
jnp
push
push
inc
idivb
jmp
adc
xorb
and
lods
flds
pop
mov
xor
cmp
movsl
mov
sub
xchg
stos
aad
jae
scas
pop
adc
sub
adc
add
add
sub
outsl
and
je
lahf
xor
insl
fwait
gs
clc
aas
fsts
push
inc
mov
jmp
dec
pop
or
jne
js
test
sub
pop
push
add
jae
inc
pop
mov
mov
cmp
mov
andb
and
movsl
push
repnz
scas
push
gs
inc
clc
push
pop
add
adc
repz
xor
bound
xor
adc
sahf
aam
rorb
clc
xchg
xchg
mov
das
mov
test
rolb
or
mov
pushf
mov
shrb
push
fistpl
sbb
push
lea
ss
pop
cmp
jno
cwtl
scas
adcl
sahf
cs
adc
ret
fs
jecxz
cmc
pop
xadd
inc
sub
insb
rcll
dec
insl
add
or
add
mov
add
js
pop
pop
mov
pop
xor
push
dec
out
add
dec
sub
mov
incb
mov
fbstp
in
fs
imul
or
xchg
pop
ja
js
adc
pop
popa
pop
mov
addr16
push
fs
xor
ljmp
ljmp
call
filds
nop
scas
hlt
imul
lret
pushf
jno
les
jns
cmp
out
mov
test
lds
push
cmp
arpl
xchg
into
and
pop
xor
push
jge
mov
data16
in
jbe
es
pop
sub
xchg
mov
movsb
xchg
ds
jmp
mov
outsl
in
out
jmp
outsl
add
sbb
xchg
pushf
pop
sarl
fdivs
aas
and
adcl
dec
sub
sub
jae
lahf
jle
mov
sbb
or
aaa
out
nop
add
pop
mov
pop
test
cmp
add
xchg
inc
push
mov
push
aaa
and
and
lret
jl
ret
mov
push
test
fadds
or
jo
cmpsl
nop
adc
pop
pop
sbb
inc
xchg
in
cs
jp
and
rcrl
in
cltd
sbb
mov
mov
mov
daa
mov
out
adc
sbb
mov
mov
pop
movsb
icebp
mov
sti
adc
ret
into
cmp
nopl
jnp
pop
lock
cmp
in
xor
xor
das
lahf
into
and
repnz
or
xchg
movsl
std
jne
adcb
adc
lret
les
test
lcall
xchg
or
movsb
xor
cmp
sahf
push
ljmp
push
fldt
mov
cmp
lret
cmpsb
and
pop
cli
or
inc
mov
xor
pop
mov
sti
outsl
es
mov
sti
sub
xchg
std
xchg
dec
xchg
jb
adc
lret
mov
mov
dec
stos
out
add
jnp
insl
mov
mov
imul
mov
xchg
pusha
dec
pop
and
or
aas
ret
pop
popf
or
lock
or
push
mov
icebp
dec
mov
stos
orl
cmp
inc
sbb
xchg
sub
mov
lods
cmpsb
shrl
add
xchg
jae
fwait
mov
cmc
stos
push
mov
leave
mov
lods
push
xor
cmp
and
cmp
sbbl
and
cmc
add
andb
xchg
xchg
cmp
clc
sbb
movsb
and
jg
push
pop
adc
movsl
popa
jge
cmp
cmc
dec
add
out
pop
js
je
clc
enter
inc
fwait
cmpsb
inc
js
scas
shufps
sub
cmpsb
xor
ja
mov
jle
data16
xor
aaa
jp
dec
inc
cld
test
pop
dec
jns
dec
je
dec
popf
dec
fldt
pop
ret
aaa
inc
xchg
mov
pop
mov
aaa
popa
inc
loope
jns
adc
sar
out
push
fstpt
outsb
cwtl
arpl
jp
pushl
lahf
das
test
popf
mov
add
xchg
xor
iret
dec
xchg
pop
in
sbb
push
test
in
ret
xlat
loop
or
and
mov
sbb
sbb
loope
shl
add
push
cli
add
outsl
xchg
out
push
inc
xlat
lds
aaa
iret
dec
sub
mov
jmp
sti
mov
faddl
leave
mov
cltd
lret
orl
arpl
fwait
mov
inc
cld
xor
pop
cmp
add
add
push
mov
pop
cli
sbb
jg
adc
mov
ss
or
and
divl
push
dec
push
out
fildl
iret
dec
lahf
push
mov
out
jbe,pn
lods
push
fmuls
cltd
mov
push
jle
fdiv
xchg
sbb
jns
ret
test
dec
add
push
insb
cmp
lods
pop
push
push
and
das
into
insl
and
lcall
lahf
and
movd
mov
mov
cmp
dec
xor
xor
divl
fldz
jno
push
in
push
or
dec
clc
dec
rol
popa
ds
sub
sub
pop
pop
sbb
push
js
inc
fadd
mov
xchg
mov
and
ja
mov
clc
dec
mov
sarl
lahf
mov
arpl
mov
cmp
mov
sub
add
aas
jbe
or
adc
test
in
adc
add
sub
mov
adc
ret
jmp
add
fcomps
sarl
push
mov
mov
cmp
cmpsl
or
mov
fsub
ret
push
pop
clc
das
mov
fmuls
jp
in
mov
addr16
jo
nop
mov
cmpsb
xchg
test
rclb
ljmp
add
mov
sahf
fists
ret
xorb
aad
idiv
fcompl
dec
ja
test
sub
fwait
mov
jmp
stos
lret
push
cltd
xchg
les
movsb
jne
rcrb
rol
mov
xor
filds
mov
movsb
dec
lret
or
stos
arpl
sbb
iret
inc
add
sti
imul
and
mov
jg
hlt
cmpb
imul
dec
pop
mov
inc
test
imul
mov
jnp
ret
lods
out
xor
or
jae
xchg
dec
push
xchg
xchg
aaa
dec
mov
mov
loope
jne
push
jp
popf
dec
cmp
call
push
jle
cmp
xchg
dec
adc
xchg
mov
shrb
jo
in
stos
aad
cs
and
mov
mov
lret
dec
jns
bound
les
invd
mov
xchg
sub
test
fs
push
cmp
push
push
dec
clc
loope
cmpsb
test
sub
loopne
clc
add
sub
add
lock
sub
and
mov
inc
rol
int3
sbb
xchg
out
jno
pop
mov
outsb
xchg
arpl
jae
or
cvtdq2ps
or
xchg
aaa
aas
testl
mov
xchg
adc
jnp
xchg
negl
inc
xchg
xor
js
shlb
and
sbb
pop
push
decl
cmp
ficomps
pop
mov
cmp
ds
lock
push
mov
shll
jno
js
pop
dec
cmc
dec
lcall
or
xchg
sub
xchg
or
sub
call
adc
sbb
push
fistl
jae
xorl
xlat
mov
sbb
xchg
add
sub
sub
sub
cli
sbb
xor
mov
jb
mov
xchg
add
dec
sbb
push
shl
mov
jmp
cmp
lock
nop
insb
sarb
decl
test
fadds
out
pop
mov
jne
stos
ds
cmp
stos
dec
std
lods
and
ljmp
out
sbb
mov
mov
lret
push
adc
jmp
shrb
push
mov
jl
cld
fsubp
mov
in
inc
hlt
mov
sub
xchg
sbb
js
cs
mov
mov
sbb
lods
cs
jp
insb
cltd
les
sahf
pop
aas
cmp
cmp
popf
push
rorb
cmp
mov
pop
pop
sub
movsb
mov
push
xor
popa
adc
mov
inc
hlt
cs
xor
pop
jge
xor
inc
xchg
xor
pop
mov
inc
clc
and
leave
dec
jge
jge
dec
mul
xchg
fcomp
jne
or
arpl
xor
daa
aad
rclb
movntq
fdivrs
sahf
or
or
leave
insb
mov
xchg
jnp
xchg
mov
xor
mov
movsl
loope
jmp
cmp
leave
mov
jmp
clc
mov
or
jecxz
inc
xor
das
mov
mov
mov
add
xor
insb
jae
sbb
mov
sub
sub
testl
mov
rcrl
mov
andb
popf
int
push
jns
imul
ljmp
and
leave
scas
lock
movsb
insl
push
mov
arpl
or
sbb
adc
xchg
into
add
scas
xchg
pop
lcall
enter
sbb
outsb
push
pusha
push
jmp
fmulp
rcl
js
add
test
mov
int
rclb
pop
inc
jo
ss
aaa
ja
insb
pop
movsl
jge
push
sahf
rcrl
aam
push
xor
in
jmp
loopne
fistpll
notl
inc
mov
mov
pop
push
stc
mov
lahf
test
mov
mov
mov
aam
stos
ret
jne
in
sbb
fstpt
cmp
das
pushf
or
daa
pop
pop
icebp
dec
arpl
jnp
cmp
scas
inc
cmp
push
data16
rolb
and
mov
fdivrp
int
inc
ja
dec
add
xchg
int3
mov
pop
mov
arpl
xor
popa
or
andl
movups
cmp
mov
addl
rorb
ret
popa
out
repz
ja
inc
insl
cmp
xchg
jno
rcll
or
and
jno
stos
sarl
push
test
setl
psrad
xchg
xchg
pushf
adc
fnstsw
sbb
mulb
pop
sub
rcll
rcrl
pop
inc
push
pop
xchg
pusha
mov
jnp
xor
aam
sbb
pop
sub
add
sbb
sub
int3
dec
sbb
pop
mov
popl
pop
sbb
fnstcw
dec
sub
xchg
cmp
mov
add
leave
ret
rorl
leave
sub
push
out
rcrl
mov
push
out
je
lcall
shrb
jg
inc
stos
push
lahf
adc
movsl
or
jecxz
fimuls
or
dec
or
pop
fwait
mull
or
mov
push
in
int3
add
les
jbe
insb
jp
cmp
xor
dec
mov
dec
data16
or
push
ret
mov
gs
addr16
adc
mov
jmp
adc
fnstcw
ffreep
std
jae
add
inc
in
pop
pushf
push
push
push
stos
xor
out
mov
push
xchg
outsl
bnd
testl
dec
cmp
add
sbb
fildl
movsl
pop
sub
aaa
inc
mov
xchg
sahf
mov
imul
pop
hlt
shlb
and
jecxz
sets
insl
popa
ljmp
inc
cwtl
insl
add
cld
jnp
or
sti
inc
js
push
add
sbb
rorb
sub
das
mov
fisubrl
sbb
mov
jg
mov
mov
out
jg
and
loopne
cmpsb
add
inc
push
js
xlat
xchg
adc
cmc
cmpsb
cmp
scas
pusha
jmp
push
cmp
lds
push
jno
mov
loop
sub
stos
addb
cwtl
inc
imul
inc
outsl
ljmp
jp
aas
jecxz
sub
rclb
orb
clc
xchg
nop
cmp
sub
cltd
fidivs
lahf
andb
cmp
nop
and
out
pop
insb
jmp
cld
dec
xchg
xchg
mov
fidivl
stc
mov
roll
rcrl
lcall
mov
sbb
orl
sbb
mov
and
sbb
and
lods
ljmp
inc
xor
cmp
jg
pop
pop
lods
std
iret
dec
pop
cltd
or
cld
movsb
mov
push
sub
lcall
shl
xor
mov
scas
rclb
shr
mov
push
js
daa
mov
cmpsb
inc
xchg
add
test
push
adc
dec
pop
dec
dec
fsts
push
cmp
or
dec
shlb
sbb
inc
mov
xor
pop
dec
fidivs
fnsave
or
stos
lret
xchg
mov
fisubs
xchg
rcll
sti
jge
out
jecxz
cmp
dec
mov
mov
mov
lret
mov
stos
insl
push
clc
pop
jmp
outsl
lea
cltd
leave
lods
lods
xchg
mov
sbb
out
in
mov
sub
movsb
cmp
lds
push
inc
inc
jno
dec
sub
dec
shlb
jg
jecxz
push
loope
sub
jmp
sahf
sub
pusha
adc
pushf
imul
push
movsb
stos
mov
gs
sbb
xchg
push
hlt
shrb
sbb
push
xor
mov
jo
add
push
inc
lds
add
gs
cmpsb
pop
inc
xchg
cmp
test
fnstcw
int
sbb
movhlps
sub
pop
pushf
dec
jns
shrl
jne
rcl
push
das
fldcw
fdivrl
fildll
sahf
push
pop
fs
cmc
jge
dec
pushf
sbb
sub
wbinvd
cwtl
fisubrs
add
sbb
xor
xor
sub
dec
jmp
ret
mov
fisttpl
fisttps
movsbl
jb
mov
ljmp
loope
lock
dec
add
inc
jmp
gs
bound
jp
cmc
call
ror
mov
push
mov
test
or
jp
cmpb
insl
rolb
sbb
outsb
aam
ds
cmp
subb
mov
movsl
cmp
rcl
xchg
fsubrl
cwtl
cmp
fistps
and
jmp
shlb
clc
imul
sti
loopne
xchg
nop
pop
jl
ret
push
push
enter
cmp
and
or
jg
xor
addr16
dec
and
out
das
push
repnz
imul
fst
push
push
sub
lcall
sub
fildll
das
mov
push
iret
xor
dec
and
aaa
xchg
jl
mov
ret
mov
in
dec
loopne
inc
pop
inc
addr16
cmc
bound
cmpsb
xchg
adc
sub
mov
daa
inc
inc
in
inc
lahf
sub
sub
rcrl
add
push
push
dec
daa
ret
lods
mov
clc
lcall
or
mov
xchg
push
fwait
js
nop
je
or
mov
fs
cs
push
les
mov
xchg
push
sub
lcall
cmp
imul
xor
aam
jo
sub
shlb
test
add
out
xchg
or
sub
lcall
or
pop
cltd
xchg
lock
mov
cmp
cmp
ret
ret
push
and
popa
mov
jnp
mov
cmp
pop
and
sbb
or
fwait
ret
dec
ret
dec
clc
push
adc
dec
out
xchg
notb
fdivrl
mov
outsl
jnp
fwait
cmpsl
and
dec
sbb
gs
push
iret
push
lods
cmpsb
pop
mov
rcl
js
sbb
push
ds
rol
xchg
dec
shlb
lods
jle
add
inc
inc
fadds
xchg
sbb
pop
adc
stos
int3
inc
xor
mov
jmp
pop
xchg
push
div
xor
jge
adc
arpl
jecxz
lret
add
xor
loop
iret
jg
ficomps
sub
mov
push
stos
fst
add
sbb
ljmp
cmp
adc
dec
pop
jmp
lret
xchg
ds
dec
fwait
dec
insl
jecxz
int3
dec
data16
inc
mov
in
das
push
xchg
push
fldl
scas
dec
pop
push
loop
pusha
mov
jge,pt
nop
test
dec
mov
jl
cwtl
nop
iret
insl
adc
push
popa
push
fimuls
add
stos
leave
adc
mov
dec
mov
cli
js
mov
adc
dec
lods
aam
call
fnsave
decl
stos
loope
fcmovne
xchg
mov
mov
xchg
popf
inc
data16
or
pop
fldt
daa
das
push
sub
push
cmp
aaa
or
lret
xor
enter
push
cmpsl
mov
movsb
js
aaa
stos
adc
outsl
js
add
in
popa
cmpsl
stos
loop
adc
and
lcall
sub
push
test
pop
mov
test
call
outsb
pop
jg
add
cmp
mov
xchg
jp
xchg
popa
test
mov
stc
mov
test
adc
lahf
test
ret
lock
xchg
movsb
pop
iret
lock
add
push
xor
jmp
dec
mov
mov
test
sbb
cld
leave
out
add
cmp
clc
dec
aam
in
mov
out
push
fucomp
xchg
shrl
decb
push
dec
xchg
add
lds
repz
fwait
adc
icebp
cmp
std
ret
pop
dec
jae
lods
fiaddl
mov
sbb
pushf
sbb
mov
cld
and
andl
ja
and
inc
cmp
mov
push
and
arpl
and
inc
sahf
pop
xlat
mov
mov
sahf
mov
jl
or
call
mov
or
imul
push
in
xor
loopne
add
xor
add
inc
sbb
lods
cs
cs
pop
jecxz
sub
push
lds
cli
jp
fwait
sbb
push
notl
int
jno
pop
or
cwtl
aam
pop
push
inc
push
fsubs
aam
bound
adcl
dec
cld
daa
push
iret
inc
ret
xor
cmp
xchg
pop
mov
sub
xchg
cmc
mov
cmpsb
mov
xchg
sub
sbb
adc
arpl
mov
daa
clc
test
push
rorb
inc
leave
push
xchg
cmp
insl
xchg
rorb
sub
out
outsl
push
jns
imul
pop
mov
hlt
mov
pushf
ss
aam
adc
out
mov
es
cmp
loop
inc
xchg
in
adc
ss
ds
imul
movsl
pop
inc
inc
xchg
sub
adc
imul
daa
imul
lea
xor
jne
mov
scas
add
or
cmp
or
outsb
inc
arpl
adc
xlat
adc
mov
sub
sub
push
testb
lock
repz
bndldx
lcall
push
push
pop
ffreep
pusha
popf
mov
add
data16
xchg
fsubrs
test
mov
outsl
movsl
int
mov
and
cld
data16
arpl
nop
loopne
sbb
mull
out
push
mov
out
cmc
test
jne
neg
push
sbb
push
pop
pusha
dec
mov
insl
sub
sub
cmp
loop
arpl
repz
out
sbb
shrl
xor
xorl
sub
loop
dec
xchg
mov
movsb
push
ss
mov
dec
cmp
or
pop
sub
xchg
sub
sbb
jb
push
dec
adc
test
mov
and
mov
movsb
sti
pop
add
mov
mov
adc
inc
and
dec
cltd
test
arpl
mov
iret
sbb
and
add
xlat
test
or
jp
std
jns
iret
jo
fistpl
repnz
cli
fnstenv
cmpsl
xchg
pop
iret
xlat
mov
in
mov
aam
rcrb
push
pop
movsb
push
loopne
ss
repz
lea
cmp
pop
rcl
lret
sbb
cmovp
andl
push
stos
pop
daa
and
push
dec
popa
mov
xchg
stos
mov
lret
pop
inc
push
gs
add
add
cld
test
adc
mov
popa
cmp
lods
dec
iret
cld
repnz
enter
cwtl
movsb
pop
sub
decl
aas
dec
leave
dec
xor
and
rcrl
xchg
mov
in
das
dec
mov
enter
sbb
test
xchg
imul
lret
jge
sub
sbb
imul
pop
in
cmp
cmp
test
xchg
fucomip
sbb
and
pop
fnstsw
or
ret
mov
mov
push
stc
push
add
int
push
lret
mov
fs
dec
jp
cli
popa
adc
imul
xchg
inc
loopne
jmp
xor
and
pop
add
shlb
aam
frndint
pop
sub
cmp
push
nop
dec
out
sbb
pop
aam
enter
mov
mov
sbb
push
test
pop
repz
dec
push
push
das
mov
ds
push
mov
jb
and
mov
mov
ss
mov
hlt
icebp
cmpsl
xchg
test
xor
fsub
cmp
repnz
popl
mov
sahf
out
mov
cmp
arpl
or
xchg
enter
imul
push
cld
dec
cmovns
fldenv
fdivrp
addr16
lods
push
mov
pop
mov
enter
dec
lea
pop
in
push
andl
movsb
hlt
sahf
cli
jp
scas
jno
insl
ja
push
and
pop
in
or
inc
push
and
adc
inc
pusha
xchg
jl
daa
sub
cmp
inc
outsb
adc
lds
call
loop
movsb
xlat
mov
lea
dec
xchg
mov
pop
insl
sub
inc
xchg
mov
adc
pop
scas
sub
stos
and
mov
mov
aaa
pop
scas
loopne
fbstp
std
pop
mov
test
pusha
or
xchg
cltd
xchg
pop
sbb
movsb
enter
lock
bound
mov
shrb
rcrl
push
lret
pop
adc
sarl
outsl
cmp
and
add
push
and
enter
bound
mov
mov
xchg
pop
xor
sar
call
push
lcall
dec
clc
loop
pop
ret
push
add
add
xor
sbbb
sti
and
pop
vcvttpd2dqx
addb
loop
ret
jae
pop
or
mov
jno
xchg
sub
or
jb
xchg
push
cld
sub
lea
pop
sti
or
inc
cmp
mov
adc
xchg
and
pop
scas
dec
dec
push
jnp
sub
sbb
add
in
jb
rcrl
ret
pop
ja
pop
inc
arpl
sub
push
sub
lods
or
pusha
imul
xor
repz
add
xchg
push
cld
or
push
mov
inc
shrl
pop
rcr
out
lock
rorb
jge
jno
std
ljmp
inc
dec
cmc
lods
jb
cmpsb
push
mov
xchg
bound
push
push
adc
imulb
xchg
imul
rol
test
jne
add
lods
cmp
sbb
enter
add
lds
in
repz
xchg
push
xor
sbb
push
or
xor
fs
fdivrs
outsb
std
xchg
sub
mov
adc
lods
jbe
jecxz
mov
xor
ja
cmp
fwait
mov
mov
jp
pop
pusha
jle
js
sbb
mov
adc
incb
fidivrs
rcrb
xchg
lahf
cmp
lret
rorl
mov
push
and
clc
mov
mov
cmp
stos
jno
leave
add
imul
add
dec
repnz
mul
icebp
adc
out
adc
xor
mov
stc
mov
or
jb
cmc
ficomps
fisttps
test
fs
lahf
push
cmp
lds
xor
out
sub
or
rcrb
nop
pop
adc
popf
pop
cli
lods
mov
stos
xchg
sub
jmp
lock
xlat
mov
add
cmpsb
mov
mov
icebp
cmp
mov
fstl
ret
stc
dec
mov
dec
xor
xor
out
inc
mov
mov
cmpsb
sahf
push
aam
sub
mov
mov
adc
mov
sub
push
inc
lea
jns
icebp
cltd
xor
sub
std
rorb
cmp
shr
mov
add
int3
lods
and
cmpsl
push
sub
dec
mov
add
mov
std
xor
cmp
pop
xchg
out
sbb
icebp
cmp
jmp
sub
imul
stos
mov
push
fs
outsl
dec
xor
fsubl
addr16
mov
int3
xlat
ja
aam
add
int3
jne
pop
mov
sub
and
cmp
imul
push
into
iret
outsb
mov
push
add
or
int
fwait
cmp
bndldx
mov
jo
fsts
mull
aas
pop
imul
pop
mov
movsb
dec
sbb
lods
pop
jns
jnp
xlat
inc
mov
and
je
mov
xor
push
cmp
dec
jmp
pop
rorb
pop
mov
mov
mov
cmp
testb
and
call
dec
or
dec
shlb
cltd
mov
out
cmp
dec
daa
stos
pop
xor
dec
in
in
and
sbb
jmp
repnz
lcall
pop
sub
div
adc
xchg
mov
mov
mov
lea
pop
loop
leave
sub
sahf
push
movsb
inc
negb
jnp
jp
and
sahf
jle
push
call
mov
lcall
hlt
std
andl
cli
rcrl
in
insl
into
int
xchg
dec
ja
dec
and
sbb
movsb
pop
test
pop
in
mov
scas
cmp
dec
dec
leave
mov
aas
jnp
adc
jl
jno
or
dec
adc
and
dec
mov
xlat
ret
add
mov
dec
pop
xchg
mov
push
sbb
dec
in
sub
cmp
pop
fbstp
bound
mov
push
test
dec
cvtpi2ps
bound
test
add
stc
mov
xor
mul
je
push
adc
ds
sub
jg
dec
fidivl
mov
fdivl
or
pop
leave
outsl
popf
pop
xchg
jecxz
lods
mov
lods
cmp
add
push
lret
adc
or
cltd
pop
add
cmpsl
mov
pushf
cmpsb
jmp
inc
adc
mov
inc
fisttpll
out
cmc
nop
cwtl
xchg
jne
int3
xchg
daa
xchg
sbb
test
push
add
xchg
push
push
push
push
test
push
and
pop
cmpsb
call
xchg
cmp
cwtl
lods
icebp
ljmp
repnz
call
and
fstpt
inc
adc
xor
sub
push
xchg
cmc
cmp
xchg
push
xor
add
idiv
and
cltd
pushf
pop
dec
and
jnp
int
inc
lds
xor
and
fucomip
lods
adc
lea
fbld
out
mov
pop
rcpps
add
std
cmp
insb
neg
je
sbb
inc
mov
xchg
mov
int
mov
scas
movsb
cmpsb
pop
les
mov
fwait
xchg
ja
inc
dec
jmp
xchg
mov
jle
sub
enter
push
arpl
cmp
add
and
dec
cli
cld
scas
xor
jecxz
pop
loop
cld
lds
out
inc
sbb
jp
lret
pop
test
xor
jecxz
loopne
in
repz
sbb
push
lret
hlt
jmp
ss
cmpb
flds
rcrl
push
inc
inc
jo
outsb
cwtl
lods
push
push
mov
fsubs
mov
xchg
sub
mov
and
lods
or
jno
pop
ret
push
pop
scas
fcompl
pop
dec
rcl
mov
daa
mov
imul
ret
leave
das
shr
pop
scas
iret
mov
insb
mov
inc
je
aad
mov
outsb
popa
les
ja
fnsave
imul
pop
in
lcall
les
and
cmp
pop
in
xchg
cmpsb
add
jae
sarl
stc
pop
cld
jle
mov
jmp
xchg
ljmp
jb
xchg
and
xchg
mov
in
outsl
pop
jbe
mov
fstpl
mov
mov
ja
fmul
xchg
fcoms
xor
xor
fnstenv
pop
ret
repnz
sub
and
push
rcll
jmp
imul
stos
and
les
gs
imul
sbb
lcall
mov
test
xchg
jns
hlt
xor
inc
add
cmp
inc
stc
stc
setno
dec
push
lahf
ja
dec
xor
add
mov
inc
test
mov
inc
leave
cltd
jp
aam
jmp
hlt
xchg
imul
and
jge
xorb
gs
int
mov
pop
inc
add
shrl
iret
mov
mov
iret
out
shlb
les
fbld
xchg
xorl
jmp
ljmp
lcall
pop
sub
sarl
mov
xchg
add
nop
push
mov
sub
scas
cs
bound
ficoml
mov
andb
mov
ret
or
sub
fmull
dec
sbb
mov
mov
aam
mov
adc
stc
push
pcmpeqd
mov
lods
mov
sub
inc
xchg
jo
push
loop
movsl
scas
push
cmc
mov
mov
push
xor
inc
xchg
xor
push
icebp
mov
sbb
pop
pushf
xchg
dec
repnz
popa
push
push
aam
mov
adc
sarb
fcmovb
xor
gs
cld
movsl
data16
and
pop
fildll
sbb
pop
adc
mov
test
mov
loop
pop
mov
outsb
sbb
sub
or
loop
fistps
loope
mov
lods
sarl
and
fidivs
fists
test
or
leave
push
push
or
adcb
or
mov
lds
and
daa
jno
and
dec
xchg
sbb
lret
cmp
test
out
ljmp
dec
jmp
push
ja
cld
push
lea
xor
into
ret
xor
dec
mov
insb
nopl
or
pop
mov
lcall
out
jb
inc
repz
test
adc
jnp
xchg
insl
mov
xchg
xchg
dec
inc
xlat
mov
cmp
shll
andl
subb
cwtl
sbb
lret
sub
test
rolb
and
pop
dec
imul
divb
sub
pop
jp
sub
mov
sbb
sbb
cmp
mov
cmp
cmp
push
push
mov
int
and
xchg
mov
jp
push
loope
dec
shrb
leave
push
mov
insl
lods
test
fstpt
cmp
or
ret
data16
adc
rcl
loope
das
addr16
pop
div
pushl
frstor
fsubl
ret
int3
lret
mov
cmc
pop
subl
mov
lds
xchg
stos
sub
push
add
xchg
mov
jo
push
sub
inc
jle
push
sub
aas
cmpsb
lret
imul
xchg
lods
inc
addl
mov
or
imul
push
mov
test
ret
xor
fisubrs
ror
xor
call
out
fwait
test
add
insb
dec
bnd
dec
fwait
imulb
jmp
dec
sub
mov
push
cli
mov
mov
insl
add
stos
fcomps
scas
sub
jae
jne
xchg
call
jbe
pop
and
imulb
aas
inc
dec
mov
jmp
ficomps
in
lcall
subl
imul
xchg
andl
enter
dec
push
scas
pop
mov
xor
pop
loopne
es
mov
lea
add
stc
mov
lock
mov
in
dec
in
bound
add
xchg
addr16
inc
xor
jl
cmpsb
push
sub
lock
or
push
shl
mov
nop
jae
adc
xchg
sbb
push
jecxz
insl
outsl
mov
add
je
leave
movsl
inc
sbb
dec
clc
imul
mov
mov
jb
out
frstor
jno
jae
outsb
or
cmpsb
adc
inc
repnz
and
hlt
loope
jmp
stc
por
mov
repz
js
adc
or
ret
xlat
test
push
xor
inc
fists
pop
cmp
mov
and
hlt
or
or
fwait
cli
jnp
mov
push
int3
push
and
mov
loope
test
fmull
outsb
sub
fstps
popf
nop
mov
ja
mov
enter
mov
mov
pop
je
jb
sub
fbld
movsb
ljmp
das
testb
adc
jne
xchg
push
jb
xor
pop
mov
fsubr
insb
fcomps
jns
cmpb
sbb
xchg
out
outsb
test
iret
xchg
lods
push
jb
popa
sub
sbb
jl
mov
cltd
nop
sahf
push
push
xchg
mov
stos
aad
test
mov
xchg
loop
inc
fistl
xor
pop
lds
pop
push
mov
xorl
mov
fwait
jecxz
jmp
leave
inc
ret
sub
lods
push
adc
xor
mov
and
pop
sub
mov
mov
xor
dec
pop
sbb
das
fsubr
push
mov
ds
pop
in
and
mov
out
insb
imulb
pop
push
push
loopne
sub
mov
fdivrl
mov
js
out
scas
pop
cmp
jle
shlb
mov
pop
mov
inc
lea
cmp
pushf
or
rcr
hlt
fsubl
sub
ficoms
lcall
addb
mov
xchg
push
aaa
loop
sbb
jne
pop
add
popa
outsb
and
xlat
jns
arpl
loope
sbb
xchg
gs
out
inc
lret
test
ror
adc
into
ljmp
jo
pop
inc
jg
popa
xchg
fisttpll
adc
jg
les
and
pushf
xchg
lret
out
or
cmp
jns
push
popa
adcl
fdivrs
inc
clc
in
call
je
subb
fs
cmp
xor
lds
addr16
add
or
cmp
sbb
ret
pop
lret
cli
push
xchg
pop
sarb
inc
inc
inc
xor
jns
xchg
loope
mov
dec
fwait
xor
loope
fld1
loopne
sbb
adc
mov
out
xchg
testl
mov
and
push
js
add
aaa
cwtl
sti
cli
aad
lods
ds
cli
aad
mov
rorb
mov
bound
mov
daa
outsl
sbb
lret
fdivp
repz
xor
mov
fwait
and
int
xchg
lock
pusha
xchg
ret
insb
push
lods
ds
mov
and
je
xor
jno
mov
mov
jg
pop
shr
fnstsw
pop
and
stos
pop
mov
pusha
xchg
jae
dec
xlat
inc
nop
aas
in
ljmp
outsb
push
pop
jecxz
out
jo
das
jnp
or
cmp
mov
sub
repz
xchg
rolb
leave
mov
mov
mov
leave
mov
outsb
mov
faddp
push
aam
mov
and
fdivrl
jbe
xchg
test
stos
movsl
xor
sbb
jge
ljmp
add
xor
pop
adcb
out
rcrl
or
xlat
jmp
add
rcll
aad
push
out
jo
cmp
and
mov
push
add
pop
or
jno
add
pop
xor
popa
repz
sub
dec
aam
lea
das
xchg
imul
outsl
pop
xchg
xchg
stc
out
orl
aam
adc
das
push
je
add
push
jle
or
mov
inc
jl
scas
andl
dec
cmp
rcrb
daa
fnsave
xor
inc
cltd
andl
dec
negl
inc
xchg
repnz
les
xchg
mov
iret
mov
dec
push
adc
ret
cmpl
inc
sbb
pop
sahf
jmp
push
in
cmp
divb
stos
insb
xchg
dec
jnp
cltd
sbb
popf
cld
xchg
out
in
js
sbb
fwait
outsb
add
cmp
ljmp
in
incb
and
mov
dec
int
addl
std
dec
insl
loop
pushf
movsb
sbb
adc
mov
mov
mov
ret
ja
in
pushf
pusha
and
pop
insb
insb
mov
and
cmc
into
xchg
pop
xlat
enter
or
rep
jno
add
xchg
xor
add
and
sub
inc
sub
mov
idivb
sbb
test
mov
fiaddl
jecxz
and
sti
mov
mov
xorl
mov
or
and
pop
test
fwait
xchg
xor
mov
lret
loop
and
xchg
push
repnz
inc
xor
mov
sub
fistps
push
fwait
add
loope
dec
add
insl
lods
lahf
pop
jmp
data16
stc
mov
adcb
add
sub
inc
adc
cld
push
xor
pop
ret
mov
popf
out
fimull
cmc
mov
add
mov
or
cmp
mov
dec
pop
push
in
pop
out
sub
jb
push
inc
pop
pop
cwtl
xorb
inc
out
out
icebp
mov
xchg
pop
dec
sbb
clc
or
jbe
add
inc
cmc
es
lret
pop
xchg
mov
inc
sbb
daa
fs
xchg
add
xchg
rcll
arpl
or
arpl
push
sub
repz
loop
xchg
pop
mov
fstpt
std
pop
cmpsl
adc
iret
jne
loop
jecxz
sub
popl
cmpsb
fcmovnbe
mov
fs
add
push
dec
mov
pop
inc
shl
out
dec
dec
imul
dec
cwtl
out
mov
and
ljmp
xchg
and
push
xchg
cli
xchg
push
fwait
jo
jo
xchg
sbb
jp
lret
lret
out
int3
js
xchg
jo
insl
mov
sbb
mov
stos
out
jge
pop
adc
stos
je
jmp
xchg
inc
fidivl
fisttpll
ficomps
xchg
mov
pop
and
adc
mov
lcall
out
or
xor
dec
push
jnp
icebp
je
or
ljmp
aam
or
test
sbbb
inc
xchg
mov
sub
pop
sub
insl
xchg
fbld
pop
jle
push
sahf
pop
add
xchg
loop
out
inc
leave
inc
xor
aas
push
sbb
jno
test
cmp
sti
aam
xchg
adcb
add
je
inc
sub
ljmp
inc
stos
mov
je
addl
mov
jae
add
stos
cmp
or
arpl
negl
ja
push
mov
imul
nop
leave
rcrb
mov
adc
dec
inc
xchg
push
popa
xor
mov
vpsrlq
jno
pop
popf
xchg
jnp
popf
imul
lcall
pushf
sbb
add
mov
cmpsl
inc
lock
xor
aam
je
bnd
cmpsl
pushf
push
insb
adc
stos
test
jge
xchg
mov
push
push
mov
push
cmpsb
scas
ret
icebp
adc
push
pop
call
inc
push
aam
jg
jo
adc
into
jmp
push
shrl
stc
in
popa
or
add
clc
sbb
imul
icebp
fwait
mov
cli
xlat
xchg
call
mov
xor
into
inc
cmpsl
lret
ja
dec
push
dec
push
dec
cmc
aam
call
imul
rorb
fidivs
ss
enter
ret
sbb
sub
mov
xor
in
dec
jge
and
in
xchg
mov
and
lcall
xchg
cwtl
into
rorl
loop
mov
loop
cmp
cltd
cld
adc
add
lods
push
mov
sbb
inc
xor
testl
enter
pop
maskmovq
imull
cld
mov
and
cmpl
sbb
shll
insl
ds
fcompl
cmp
push
sub
out
pop
sub
jp
mov
mov
mov
repnz
jb
mull
test
lcall
addr16
xor
int3
dec
lahf
adc
xchg
out
mov
daa
pop
push
dec
inc
adc
cli
sarl
out
int3
mov
cmpsl
fsubl
lahf
dec
test
cmp
cwtl
nop
mov
adc
test
sar
shrb
add
nop
xlat
fldt
leave
xchg
pop
sbb
es
xchg
ljmp
mov
divl
inc
dec
in
mov
adc
xchg
pushf
dec
sbb
add
push
add
icebp
popa
cmc
jecxz
push
leave
pop
insb
std
dec
mov
dec
mov
jo
xchg
pop
dec
jecxz
shl
pop
jae
jo
jae
fcmovnb
jp
loopne
push
addl
int
ss
lret
mov
ficoml
sbb
repz
in
mov
mov
mov
outsb
mov
rclb
xor
mov
cmp
orl
fldt
and
fwait
divb
xchg
fldl
mov
and
lahf
shrb
ret
ret
fidivrs
orl
pop
rcl
jno
out
shll
xchg
pop
and
push
add
je
push
out
xor
ret
lahf
fisubl
pop
das
pop
xchg
test
pusha
dec
bound
cmpb
cmpsb
into
frstor
jae
clc
int3
mov
imul
scas
adc
xchg
add
daa
or
mov
jle
fs
imul
mov
sub
insb
dec
xchg
ret
adc
sbb
adc
mov
testb
ljmp
sbb
push
in
mov
in
bound
orb
ja
add
pop
adc
inc
lahf
xor
shll
and
loop
call
pushf
pushf
fdivr
popf
lcall
or
pusha
aad
mov
sub
loopne
test
loop
xor
arpl
mov
add
or
js
mov
push
push
mov
sbb
jmp
inc
cltd
jge
leave
popa
lods
test
mov
cmp
push
lret
out
xor
xchg
xor
add
insl
pmullw
into
daa
mov
and
mov
mov
rcll
push
leave
jae
adc
push
or
ss
mov
cmpsl
popl
xchg
mov
aas
das
xchg
inc
sub
aaa
fs
mov
fisubs
stc
imul
outsb
gs
repz
or
fisubrl
fcoms
mov
int3
sbb
imul
inc
cmp
ljmp
test
mov
icebp
hlt
lret
xor
mov
in
sahf
loope
jp
fdivr
sti
mov
jmp
inc
test
jmp
jmp
jo
leave
and
mov
into
xorl
ljmp
mov
jmp
cmpsb
mov
pusha
mov
mov
enter
xor
cmc
jae
js
subb
or
bound
push
fsub
decl
pop
cs
pop
sub
std
std
mov
mov
jno
xor
add
dec
xor
nop
movsl
xchg
xor
and
sub
sub
xchg
mov
into
movsb
pop
nop
in
inc
cmp
cmp
nop
mov
cmp
jl
sbbl
push
shll
push
fsubl
pop
mov
stc
cmp
adc
gs
sbb
cmp
dec
adc
jns
and
loop
dec
push
stc
jle
pushf
stos
mov
call
notb
out
mov
dec
pop
dec
or
push
push
xor
xor
loope
loope
xchg
popf
arpl
mov
jnp
nop
push
add
int3
dec
pop
or
loopne
data16
sub
sub
sub
imul
jnp
iret
insb
sub
or
movsb
xor
cli
movsb
imul
mov
sbbb
repz
fdivs
movsl
stc
mov
outsl
push
aas
mov
imul
pslld
lcall
mov
imul
xor
test
inc
xlat
adc
jmp
lods
cmp
mov
in
out
sub
movsl
mov
cmp
push
pop
les
mov
fnstenv
adc
and
adc
wbinvd
and
loope
imul
inc
in
sbb
ret
fcmovnu
jno
mov
push
icebp
stos
jnp
adc
stos
mov
xchg
cltd
stos
xchg
mov
test
and
imul
ret
pop
fcom
aam
xchg
out
mov
xchg
dec
leave
mov
sub
jp
jmp
mov
jae
add
jne
lods
sub
mov
push
aam
cmp
popf
lds
and
nop
int
mov
push
mov
aam
movsl
fimull
leave
insb
push
xchg
mov
pop
scas
dec
sub
sbb
mov
cli
enter
push
in
xchg
shlb
loop
dec
loop
pushw
ds
fs
ja
jb
or
xor
add
jmp
or
or
fcompl
aam
push
sub
test
dec
cli
out
cvtdq2ps
sbb
cmc
sti
ret
add
xlat
in
xor
or
push
dec
jg
repz
fsubp
dec
inc
fisubl
icebp
inc
insl
inc
xchg
outsl
ljmp
ss
add
in
cmp
ds
test
sbb
dec
mov
inc
add
inc
mov
xchg
push
js
cmp
jp
sbbb
cmpsb
inc
xor
jnp
adc
inc
data16
xchg
sub
jl
jmp
push
lcall
fisubrl
fdivr
add
xchg
call
pop
bswap
xchg
dec
aam
dec
out
into
arpl
imul
in
pusha
inc
mov
and
xchg
adc
js
aas
inc
insb
aas
hlt
sub
fisubl
loope
aad
pop
jnp
call
das
movsb
loopne
je
add
mov
push
test
jne
and
mov
arpl
fs
and
mov
inc
in
enter
adc
data16
sarl
das
fwait
mov
rol
push
mov
cmc
scas
mov
pop
sarl
mov
cmp
jnp
cli
dec
jo
aas
repnz
ss
add
xchg
addl
and
jb
gs
add
ljmp
rolb
fs
inc
cmp
mov
scas
stc
pop
and
sti
push
xchg
rcrb
cmp
neg
push
fcomps
mov
repz
into
nop
jl
push
mov
das
lods
fnsave
sub
sub
les
push
pop
and
cmpsl
icebp
inc
xlat
mov
enter
jnp
lahf
fmuls
fdivr
dec
cmpsb
jl
jno
movsl
jle
movsb
sar
or
pop
adcl
aaa
movsb
push
fcompl
ret
movsl
std
stc
ds
and
mov
das
stc
sub
mov
test
mov
mov
mov
jg
jl
fwait
ds
fbstp
loope,pt
mov
push
xchg
push
adc
or
in
pop
xor
inc
fs
rolb
dec
sbbl
pop
or
aam
insl
jnp
jnp
ss
repnz
shlb
jno
fists
pop
clc
inc
inc
js
aam
mov
jo
push
popf
nop
adc
xor
cmp
sub
and
dec
push
and
xchg
sub
fs
fs
lret
jo
out
mov
je
push
sub
mov
and
scas
push
ljmp
dec
mov
pop
sbb
xchg
shlb
sub
mov
xchg
mov
xchg
push
mov
rorb
fstps
scas
mov
xchg
jnp
insl
dec
cld
push
loop
dec
inc
sub
inc
dec
scas
icebp
mov
out
mov
xor
inc
mov
sar
ljmp
data16
sbb
fldt
and
in
mov
mov
adc
int3
jae
dec
popf
xor
pusha
sbb
xor
mov
lods
jle
je
mov
dec
push
xchg
mov
das
scas
int3
mov
or
jmp
add
loope
jl
jg
pop
dec
dec
and
ljmp
inc
jb
mov
or
pop
sbb
loop
push
and
cmp
cmp
cmpsb
test
sub
sbb
cli
and
dec
cwtl
jno
ss
hlt
lods
xor
ret
popf
mov
out
loope
push
roll
lods
rorl
pushf
dec
cmp
sub
dec
ret
lea
imul
cwtl
ficompl
sahf
mov
call
cmp
xlat
cmp
aaa
cmp
cmpsl
cmc
mov
movsb
cmp
aad
shll
xor
repnz
mov
inc
icebp
xor
in
or
mov
cmp
pop
shrl
add
mov
cmp
fiaddl
and
clc
aaa
xchg
and
lret
mov
cmp
sbb
jno
mov
stc
loop
sbb
or
mov
test
dec
pop
sbb
insb
dec
popa
loope
inc
ficompl
mov
sbb
movsb
jecxz
jb
pushf
lahf
cli
adc
and
scas
scas
push
push
add
scas
aaa
jmp
add
scas
jl
adc
es
das
mov
je
cwtl
pushf
popa
jno
push
dec
cmp
sbb
sbb
fcmovnu
out
xor
xchg
mov
sbb
sub
pop
in
jle
pop
add
push
stos
mov
push
push
stos
popf
xchg
cltd
add
cmp
fildl
adc
adc
int3
shll
sbbb
push
cmp
cltd
ficomps
clc
push
pop
cmp
das
push
loop
lret
pop
xor
add
or
aad
stos
mov
stos
sbb
push
mov
pop
and
out
mov
dec
mov
int
jbe
sbb
add
frndint
fbstp
arpl
xor
insb
int
pop
sbb
mov
push
outsl
ret
lret
cmp
sub
mov
jae
mov
sbb
pushf
jb
hlt
out
dec
jns
sub
ja
popa
push
mov
push
add
pop
or
shlb
pop
fdivr
outsl
mov
shrb
xchg
fwait
in
jae
cltd
insl
das
loop
clc
sub
popa
aad
jns
xchg
adc
jae
ds
test
fs
jmp
mov
push
mov
hlt
push
ljmp
pop
lret
jnp
scas
pop
push
pop
cwtl
retw
aaa
sbb
cmp
and
and
push
pop
scas
pop
push
inc
push
inc
sti
sahf
mov
es
into
cmp
aas
fistpll
lock
or
fwait
std
nop
bound
imul
rorb
xchg
inc
pop
pop
js
mov
xor
dec
xchg
leave
inc
fbld
ss
jle
mov
scas
inc
jns
or
adc
lods
pop
psrlq
fldl
mov
jp
sahf
out
decb
add
pusha
push
pop
cmc
mov
mov
lock
in
es
int
jns
les
pusha
xabort
hlt
xchg
cmpsb
push
xor
or
dec
cmpsl
rolb
aaa
xlat
push
outsl
ja
or
mov
aas
jecxz
in
mov
loop
mov
pushf
dec
jb
or
das
sbb
sbbl
lods
imull
pop
movsb
call
mov
dec
mov
in
out
mov
xchg
or
ret
push
in
inc
cmp
sbb
inc
aam
add
mov
push
inc
outsb
sbb
lret
cmp
aas
stc
cmpsb
cmp
jg
sbb
pop
leave
cs
adc
dec
xchg
ljmp
dec
or
push
mov
mov
push
pop
test
out
ret
pop
push
push
xor
sti
xor
xchg
inc
and
adc
pop
insl
or
adc
jno
pop
adc
sbbl
mov
xor
ja
or
lods
adc
test
test
pop
outsb
xchg
fcom
push
pop
insl
loopne
mov
jp
fiadds
cwtl
pop
iret
pop
sbb
mov
addr16
ret
cmpxchg
in
or
cmpsl
or
xchg
jle
jnp
pushl
int
aad
mov
roll
popa
jns
add
xchg
xchg
data16
push
imul
push
push
roll
hlt
or
or
outsb
jge
cmpl
pop
jae
cs
add
xchg
aad
add
imul
bnd
jl
add
test
push
add
sbb
or
sub
xor
push
popl
xlat
cmc
mov
aam
es
jmp
mov
push
pop
fldt
jo
sbb
or
int3
add
cmp
mov
movsb
testb
push
inc
es
dec
and
fdivrs
jmp
int3
mov
lods
sub
lock
stos
sbb
xor
ficomps
loop
mov
movsl
pushf
test
jge
jecxz
inc
adc
adc
or
cmp
mov
inc
lahf
lods
les
out
jo
or
mov
addb
xchg
xchg
fwait
inc
cld
jmp
in
inc
jo
cwtl
enter
aam
inc
test
stos
inc
js
push
mov
mov
mov
hlt
lcall
shlb
pop
mov
inc
mov
sub
fs
add
in
cli
orl
jb
shrl
cmpsb
sub
aaa
and
lret
fwait
and
pop
in
jns
arpl
xchg
test
add
mov
popa
add
inc
mov
in
ss
sbb
scas
test
sub
pop
mov
sbb
ficompl
inc
lret
jmp
inc
xchg
leave
mov
cmc
mov
or
mov
mov
push
xor
jae
mov
or
enter
sbb
cmp
lret
cmp
pop
sub
pop
xor
mov
movsb
int
daa
sub
cmp
jg
cmp
bound
cltd
jne
pop
add
in
mov
add
mov
jne
mov
dec
dec
dec
ja
imul
test
movsl
andl
out
cltd
int
ljmp
xchg
pusha
lods
jbe
iret
mov
and
pop
pop
jns
arpl
jb
mov
das
cmp
jno
fincstp
or
mov
hlt
inc
jbe
js
stos
jns
push
ja
ret
iret
repz
ljmp
test
mov
cmp
pop
int3
mov
mov
sti
lret
test
mov
popf
aad
mov
int
inc
xchg
add
arpl
jae
xchg
mov
fwait
pushf
push
outsl
cld
testl
jns
movsl
push
sub
stos
pop
xor
ss
add
and
data16
js
movsb
adc
mov
ds
sub
add
scas
push
fidivs
push
pop
in
dec
int3
int
loop
sub
popa
fdivs
adc
test
inc
xchg
leave
cmova
orb
icebp
and
movsb
add
xor
out
jge
ret
add
mov
add
out
fidivrs
add
mov
pop
je
jecxz
jae
repnz
xor
ds
add
insb
cli
push
ret
jp
sub
out
cmp
mov
lock
jbe
or
cs
test
pushf
into
xor
pop
ret
mov
dec
fmuls
shlb
leave
in
xor
outsb
sub
cltd
push
xchg
push
sbbl
loopne
clc
xchg
and
ffreep
push
dec
shl
rolb
lret
iret
mov
xchg
adc
cmpsl
das
fs
imul
inc
sub
sub
dec
cmp
pop
mov
stc
mov
pushf
mov
lds
inc
dec
mov
mov
push
mov
flds
scas
dec
stc
lds
or
ret
cmpb
sbb
jecxz
dec
mov
push
loope
xchg
lcall
xchg
loop
lea
mov
pop
push
fwait
adcl
repz
out
insl
mov
push
aaa
lret
pop
or
clc
lahf
call
sahf
and
jle
jl
mov
dec
out
aaa
mov
mov
adc
xor
or
psrld
or
adc
daa
fcmovnu
or
add
in
test
cmpsb
pushf
aas
xchg
inc
in
incb
push
dec
jbe
fs
jae
mov
or
fsubrl
out
scas
mov
xchg
insl
jmp
sub
faddl
into
cwtl
inc
sub
es
sbb
pop
rorb
mov
aam
ja
push
push
int3
jmp
sar
push
add
iret
inc
loopne
in
stos
add
sahf
scas
jbe
xchg
fstps
mov
inc
xchg
push
inc
xchg
fildll
mov
sub
add
int
cmp
mov
sti
imul
or
or
cmp
mov
mov
in
cmp
arpl
xchg
repnz
nop
test
adc
cwtl
cwtl
push
mov
js
inc
xlat
mov
ret
imul
jg
ja
cmp
mov
mov
mov
or
cmp
mov
es
cmp
push
mov
push
icebp
gs
int
das
mov
fbstp
ja
popfw
ret
inc
push
stc
hlt
popw
in
push
jb
fsqrt
dec
clc
xorb
and
cmp
loope
mov
or
jle
sbb
shlb
inc
xlat
aad
cs
and
pop
mov
xchg
es
mov
pop
push
push
mov
or
xchg
mov
sbb
adc
outsb
mov
jae
stc
xchg
lret
adc
sbb
mov
mov
cmp
orb
add
and
sbb
xchg
mov
pusha
push
cmp
cli
testl
cmp
xchg
lods
int3
stos
jg
enter
pop
jno
into
adc
cmp
into
mov
arpl
jbe
pop
daa
imul
out
pop
mov
mov
and
jge
jmp
test
xchg
mov
mov
jmp
aam
push
push
add
das
pop
in
ljmp
inc
lds
pop
lock
push
rolb
test
outsl
call
mov
ja
cmpsb
test
sbb
leave
imul
pop
xchg
inc
adc
xchg
pop
je
adc
pop
pop
loopne
push
xor
shll
mov
fnstcw
add
dec
scas
js
les
mov
gs
bound
mov
clc
sbb
inc
dec
int
jl
mov
cmp
add
push
cmovae
sbb
adc
cmp
lahf
cli
pop
mov
std
inc
and
push
rep
push
movsb
fists
or
sbb
mull
mov
in
mov
rorl
push
jne
sbb
icebp
mov
xchg
jae
adc
clc
mov
icebp
jb
push
add
sub
and
cmp
sbb
sbb
and
repnz
es
clc
ds
push
cmpsl
rcrb
mov
inc
mov
pop
jns
loop
outsb
outsb
push
xchg
xchg
nop
dec
shll
fidivrl
adc
jae
rcll
and
outsl
push
push
imul
sbb
rorb
clts
jmp
adc
and
pusha
dec
mov
ficompl
jmp
enter
mov
sbb
xlat
lds
sbb
adc
pop
push
sub
clc
adc
push
dec
repnz
xchg
bound
dec
dec
js
into
sub
aad
subl
lock
fsubrl
jo
or
sub
mov
add
fwait
movsl
adc
orb
bound
lock
dec
adc
cmp
pop
mov
cwtl
jnp
sahf
jne
sub
xor
mov
xchg
xor
aaa
cmp
lret
ffreep
js
dec
cmp
scas
mov
push
ljmp
rep
clc
sub
jge
push
mov
std
rclb
insb
dec
stos
das
and
in
iret
pop
test
push
ds
test
push
jge
repnz
test
or
inc
jb
or
loop
adc
loope
adc
fwait
mov
xor
jg
cmp
pop
xchg
sub
adc
sbb
loop
hlt
jns
in
add
aas
inc
pushf
add
jl
adc
rcll
rcrb
mov
sbb
pop
push
insb
mov
imul
std
addl
adc
pop
fisubl
test
or
cmpsl
lret
dec
addr16
ja
pop
mov
std
xchg
mov
xor
cli
lret
dec
dec
add
movsl
pushf
addb
stc
xor
inc
loopne
inc
aaa
daa
incb
mov
lds
fstpl
mov
arpl
and
push
xorl
mov
loop
xor
xchg
xor
cs
jne
pop
dec
mov
fbstp
mov
cmpl
and
inc
stc
out
inc
cmp
jne
push
pop
rorl
les
test
ffreep
push
aam
hlt
gs
jmp
sbb
mov
pop
jecxz
add
mov
scas
mov
adc
nop
mov
xchg
rorl
inc
filds
fwait
mov
imul
mov
push
xlat
xchg
in
out
mov
mov
jbe
cld
xchg
adc
ret
push
addb
pop
or
xor
cmc
std
xor
add
loop
mov
pop
inc
out
js
push
dec
sbb
mov
jae
fildll
rcr
enter
js
stos
and
cwtl
leave
pop
stc
push
inc
arpl
inc
xor
dec
arpl
mov
or
push
pop
or
mov
jg
xchg
rorb
sub
jl
popf
or
decl
insb
int
push
dec
into
mov
lcall
xor
out
add
clc
pop
mov
push
xor
sub
cwtl
pop
xchg
mov
popa
xor
pop
mov
and
enter
jb
inc
xor
into
aas
mov
sbb
dec
andb
sub
rorb
cmp
push
std
hlt
lock
xchg
push
outsl
outsb
xor
mov
out
cmpsl
leave
into
sahf
jb
cmc
dec
pop
jns
add
fistps
out
cli
xor
cmp
adc
mov
lods
adc
in
adc
xchg
and
outsb
stos
fildl
lcall
xchg
das
mov
cltd
in
cmc
inc
pop
shr
jbe
inc
mull
hlt
lret
repnz
pop
hlt
sbb
and
aas
adc
stos
ds
neg
jl
jne
fcmovu
jle
enter
lret
jle
push
incl
popa
xchg
shll
lea
inc
iret
ja
test
cmpsb
lret
ret
insb
ljmp
roll
icebp
movsb
adc
movsl
mov
aas
std
idiv
adc
je
jp
or
scas
mov
dec
pushf
aaa
arpl
aad
push
popf
pop
out
inc
mov
inc
xor
cmc
xchg
outsl
cmp
sub
test
adc
jns
int
push
es
into
sbb
xchg
pop
call
xor
jo
mov
pop
sub
mov
adc
sub
fistpl
loope
daa
push
add
and
jle
pop
out
inc
sub
push
xor
push
loop
lahf
pop
insl
loopne
out
xchg
cmp
cwtl
cld
mov
adc
aam
pop
rcl
or
xchg
and
out
push
push
lcall
iret
hlt
pop
test
mov
dec
rcr
jge
xchg
ljmp
inc
inc
sbb
cmp
fimull
adc
pushf
sub
sub
cli
lcall
mov
adc
dec
test
mov
out
test
fwait
sbb
frstor
inc
mov
push
ds
inc
pop
ret
jo
test
call
mov
fidivl
push
sub
push
fwait
sbb
psubd
xor
nop
sub
fldcw
jl
leave
and
enter
mov
fsubrs
fwait
add
or
into
add
jno
dec
and
pushf
mov
fdivrl
jo
dec
push
sbb
sarl
and
imul
adc
nop
jle
mov
push
shrb
rol
jns
lock
pop
insl
adc
xchg
pop
add
or
jecxz
in
lods
repnz
shll
out
mov
xchg
and
sbb
popa
pop
pop
stos
mov
mov
or
cmp
orb
cmc
fists
mov
jne
sbb
cmp
or
xchg
jae
push
xor
sub
and
dec
mov
inc
mov
add
fstpt
sbb
loop
and
mov
add
xor
je
cmpsl
call
jp
ss
add
jne
and
popf
jno
scas
out
inc
lock
inc
loope
mov
cmp
in
imul
iret
cmp
int3
jo
adc
push
mov
movsb
fadds
mov
xchg
mov
faddl
rcl
mov
xchg
sub
xchg
or
test
jo
ret
je
xchg
jle
xor
imul
xor
cmpb
jg
int3
push
xchg
fwait
or
adc
jmp
clc
add
mov
mov
sbb
add
lds
test
adc
mov
scas
mov
stos
cmpsl
scas
fmul
mov
push
jb
sbb
mov
add
dec
sbb
inc
sub
in
fs
push
and
xchg
stc
or
rcrl
aad
mov
push
into
lods
int
sub
test
inc
aam
jae
repz
and
or
mov
and
iret
mov
jbe
xor
sbb
js
repz
fcoms
ret
call
fadd
xchg
fwait
add
imul
xor
and
pop
jle
shlb
inc
imul
mov
or
push
pushf
push
lea
imul
repnz
cmp
sub
ret
jbe
pop
shll
lock
mov
xor
cs
or
pop
call
lds
loopne
subb
sub
fildl
mov
lret
pushf
es
pop
bound
pushf
fucomip
out
ljmp
xchg
mov
ds
jns
sbb
pop
push
and
xor
lret
adc
cmp
movsl
sbb
mov
pop
mov
jne
pop
jae
and
lcall
mov
test
adc
insl
xchg
out
xchg
inc
pop
dec
fsubrl
fsubrs
outsb
movsb
lcall
adc
inc
repnz
mov
sbb
jne
jbe
scas
mov
inc
mov
sbb
in
or
cmp
das
outsl
cmp
mov
lcall
xchg
das
mov
fstp
xchg
scas
mov
lea
int
mov
xchg
sub
in
mov
mov
sbb
fistps
xchg
enter
mov
fnstsw
and
ret
ss
rcrb
outsl
push
fcomps
in
push
mov
jns
push
pop
push
fs
popa
mov
xchg
rclb
loopne
addr16
lret
inc
sub
or
push
mov
fidivrs
fldl
in
jmp
or
hlt
nop
ficompl
and
mov
xchg
adc
push
pop
xlat
fsubp
pop
loopne
fcomi
mov
and
mov
lea
push
pusha
scas
mov
ret
xlat
pop
xlat
or
mull
lea
shl
out
stos
lcall
xchg
push
mov
int
pop
je
mov
fucomp
icebp
bound
je
add
mov
fisubrl
mov
loope
cmpsb
and
fstps
jae
cld
imul
in
or
dec
mov
es
dec
insl
or
js
pop
in
int3
ljmp
outsb
movl
xlat
push
xor
pop
pop
adc
sbb
push
jne
sub
enter
inc
lods
jb
icebp
mov
sbb
stc
arpl
cwtl
cmp
jg
xlat
and
std
ret
sbb
movsb
test
fcmovu
sbb
sbb
xor
sbb
pop
mov
test
lods
nop
jbe
sbb
sbb
lods
out
dec
pop
cmp
cmp
movsl
shrb
nop
fisttps
inc
sub
push
lods
popl
sti
lea
push
mov
fnstenv
pop
jns
popf
jge
ss
dec
xor
rol
sbb
mov
jmp
dec
add
pop
js
inc
xor
leave
fwait
and
lods
pop
pop
adc
lret
mov
add
arpl
in
xlat
or
xchg
in
jecxz
dec
xor
es
scas
loop
test
add
imul
xchg
js
xor
cmp
inc
sub
pop
call
stos
dec
lods
cmpsb
pop
loope
in
daa
mov
pop
mov
rorb
andl
inc
cltd
xor
fnstcw
out
xor
loop
aas
dec
mov
pop
jns
test
dec
ja
mov
add
inc
add
pop
test
enter
pop
test
mov
lock
outsl
add
rcl
pusha
stos
lahf
cmp
lret
loopne
and
mov
dec
out
in
nop
jnp
jp
and
idiv
cmp
cs
ret
cmp
aaa
pop
leave
sub
lods
popf
mov
fidivs
mov
dec
into
and
out
subb
test
push
jle
mov
dec
repnz
dec
scas
imul
pushf
push
ret
mov
mov
rclb
insb
enter
jne
aad
cld
cltd
add
pop
mov
faddl
sbb
in
iret
dec
mov
and
pop
sbb
adc
fstl
xlat
lds
scas
and
in
cmc
jge
mov
xchg
cmp
mov
and
xchg
add
cmp
dec
pusha
xchg
test
inc
data16
cmp
and
or
dec
xchg
xchg
int3
jo
mov
shll
sub
lods
adc
lods
push
pop
ljmp
sub
mov
sbb
hlt
push
add
loope
add
cltd
inc
sbb
lds
fbld
sbb
call
dec
data16
push
mov
lock
clc
notb
pop
mov
sbb
mov
pop
dec
or
xchg
sahf
lds
mov
adc
xor
cmp
mov
inc
dec
mov
push
xchg
and
cli
jge
dec
imul
scas
jae
ljmp
lds
jno
fisttpl
xchg
cmp
mov
cli
mov
cs
inc
inc
pop
jo
mov
add
pusha
nop
pop
mov
sub
inc
call
mov
lahf
sbb
fsts
or
xchg
fwait
imul
xchg
cmp
gs
mov
or
aaa
add
cmp
jg
xchg
loop
sub
call
cmp
pop
lods
rcrb
test
mov
xchg
out
cmp
pop
or
and
push
enter
stos
ret
dec
mov
jmp
inc
pop
fdivs
sarb
cmp
mov
add
or
jg
in
xor
sub
imul
je
pop
pop
leave
addl
leave
lock
xor
dec
mov
or
lods
shll
test
jecxz
loop
das
xor
push
add
inc
das
fistps
leave
cltd
test
mov
jns
push
bswap
aas
imul
xchg
push
test
add
or
mov
lcall
sub
inc
ret
das
ret
outsb
ds
aas
or
daa
stc
sub
jp
pop
fidivrs
iret
frstor
xor
lods
fsts
loope
in
xchg
mov
adc
sbb
ror
xchg
or
inc
es
jmp
add
xchg
push
xor
or
in
fwait
loop
mov
inc
xor
jbe
xor
test
sti
loope
into
es
lret
cld
pop
push
ja
enter
bound
lock
leave
mov
jle
mov
and
jle
or
inc
sbb
pop
adc
sub
push
sbb
pop
std
rol
push
or
sub
xorl
push
jo
pop
sbb
ret
lods
pop
mov
shr
stos
test
jno
or
cmp
mov
les
push
dec
repnz
addb
je
xchg
test
clc
loope
add
mov
lds
dec
data16
ret
pop
cmp
inc
and
aas
lcall
int3
xlat
mov
loop
adc
push
aad
in
mov
les
adc
pop
sbb
in
dec
out
push
shrl
fists
xchg
push
jl
repnz
inc
xor
sahf
hlt
fisubrl
dec
iret
jne
pop
orb
or
add
frstor
popf
jg
out
mov
xchg
lcall
cmp
popa
dec
aaa
push
repz
mov
inc
mov
sub
dec
stos
icebp
jae
pop
mov
xlat
mov
in
adc
adc
fildl
mov
sub
xor
int3
test
or
dec
mov
mov
push
ljmp
mov
or
jae
loope
call
iret
sahf
rorb
iret
mov
pop
pushf
mov
mov
mov
xchg
mov
stos
loopne
mov
xchg
les
shl
mov
pop
or
push
cmpsb
sub
mov
mov
pop
push
nop
dec
sub
mov
push
jmp
out
outsl
push
mov
add
cwtl
inc
mov
loope
xchg
cmpsl
lret
fcmovbe
ljmp
int
imul
mov
inc
repz
icebp
xchg
in
pop
pop
loope
lret
fldt
xchg
out
lahf
push
scas
imul
fadd
jbe
repnz
cmp
out
test
and
pop
or
test
fcoml
jmp
or
mov
fisubrl
leave
and
sub
mov
test
xor
incl
push
pushf
arpl
repz
jb
cmc
add
out
pop
shlb
mov
ret
sbbl
pushf
leave
dec
mov
addl
mov
xor
pop
jp
push
test
gs
int
movsb
pop
aad
int3
adc
adc
cwtl
inc
push
loope
xchg
pushf
ljmp
lret
sub
mov
lahf
bound
call
adcl
rorb
cmpsb
mov
cli
add
popa
or
ljmp
fcomp
adc
imul
jle
insl
aam
fdiv
fcmovne
cli
pop
addb
dec
insl
test
pop
aas
and
sahf
cwtl
bound
sbbl
bound
lock
xchg
pop
in
and
xor
outsl
scas
mov
xchg
jae
mov
fcomps
dec
xchg
mov
xchg
loopne
add
pop
or
out
xchg
mov
push
icebp
pushf
cld
jg
push
ja
ret
inc
sahf
mov
mov
mov
rclb
andb
mov
lea
and
out
fidivl
cltd
mov
frstor
dec
adc
push
sbb
cmp
push
cmc
jno
divl
popa
sbb
fs
popf
xchg
xchg
jmp
rorb
pop
or
loope
or
popf
and
insb
les
in
sub
cmp
stc
push
cmp
shl
fisttpll
pop
icebp
lret
mov
push
xchg
gs
push
jge
sbbb
int3
jo
repz
jl
jl
jnp
mov
mov
outsl
mov
adc
jbe
fstl
push
xchg
push
jo
pop
xor
xchg
jge
in
cmp
popf
jmp
jl
adc
aas
pop
insl
mov
imul
sbb
inc
iret
pop
xor
in
arpl
sti
inc
adc
push
pop
and
sbb
iret
sbb
lahf
push
dec
cli
push
in
and
xchg
je
call
loope
sahf
dec
je
pusha
jg
or
xchg
clc
inc
jo
mov
xchg
out
es
stc
pop
push
xor
adc
nop
cli
icebp
bound
sbb
pop
clc
push
lock
xchg
mov
cs
lret
inc
loop
std
xchg
jb
and
in
scas
mov
iret
mov
or
mov
mov
roll
push
or
cli
adc
fimull
jb
ds
add
mov
sub
mov
int
aaa
int
push
sbb
dec
out
daa
adcl
inc
rolb
insb
jo
pop
add
hlt
pop
aas
daa
dec
lret
cltd
popf
mov
stc
cmp
mov
sbb
xchg
rol
and
loop
lret
fldl2e
pop
imul
jp
xchg
mov
adc
and
inc
dec
adc
adc
movsl
insb
adc
jmp
sub
mov
pop
xor
adc
lret
and
int
loope
jp
outsb
jge
push
lock
xchg
test
fwait
aaa
clc
outsl
scas
rolb
sarb
insl
bound
push
popf
pop
pop
test
push
xor
sub
xlat
push
addb
lods
into
jbe
jge
push
push
cld
sub
mov
out
repnz
or
pop
orl
xchg
xor
jle
mov
shll
into
js
push
andb
or
shll
out
dec
lcall
fldl
jg
ficoml
push
repnz
jl
data16
and
adc
inc
or
xor
dec
enter
push
lahf
test
in
jmp
jns
xchg
imul
loope
fildl
push
push
rcll
out
repnz
mov
or
pop
ss
icebp
sub
mov
mov
lret
fmul
outsl
cmp
xor
repz
jnp
or
jno
out
das
push
jp
fs
enter
sub
xor
nop
lret
out
inc
dec
leave
push
rcrb
mov
pop
js
shlb
mov
int
rcrl
fdivrl
push
push
inc
push
insl
test
lret
jae
scas
pop
shll
lret
or
sbb
jmpw
pmulhw
add
repz
fsubrl
divps
sub
sarb
cmp
push
lea
and
mov
pushf
mov
push
loopne
imul
pop
lds
shl
insl
aad
clc
mov
dec
xchg
pop
jle
xor
sbb
in
jge
scas
addl
inc
fimull
ljmp
xchg
cmp
dec
inc
and
sarl
sub
jecxz
xlat
push
jnp
lock
mov
cltd
lods
mov
sub
movsb
mov
lods
push
fcmovnu
lock
and
leave
jno
adc
fbld
in
and
mov
inc
sub
dec
pusha
cld
or
std
cmpsl
scas
cmp
sahf
lods
pop
arpl
sbb
pop
fisttps
test
push
sub
leave
jmp
mov
jne
loopne
adc
adc
fstl
adcl
ss
xor
xchg
sbb
mov
or
nop
jbe
mov
mov
or
ret
push
xchg
xchg
loop
leave
scas
scas
pusha
xor
xchg
stc
fistpll
subb
jb
loop
in
movsb
xchg
sub
in
test
mov
loopne
inc
add
and
mov
in
fisttpll
sbb
xor
jge
fisubrl
jl,pt
sahf
stos
sarb
dec
or
outsl
clc
mov
push
sub
cmp
out
pop
cwtl
stos
scas
out
xchg
test
cmpsb
xchg
or
mov
cld
fisubrl
scas
mov
popa
mov
shll
add
movsb
xchg
jo
cmpsl
loopne
out
clc
sbb
sbb
mov
cmp
inc
aam
sbb
push
imulb
inc
cld
mov
shll
inc
ret
je
cmp
push
repnz
rclb
fstl
sbb
cmc
xchg
xchg
mov
dec
push
and
les
gs
aad
lcall
imul
add
je
xor
enter
xor
daa
xor
mov
push
clc
fucom
fs
pop
lds
cld
inc
or
xor
shrl
aaa
cmp
xor
arpl
fs
repnz
or
enter
push
daa
pop
orl
inc
xchg
inc
mov
pop
add
and
push
sub
pop
adc
ljmp
mov
movsb
fmul
and
negl
loope
in
xor
xor
pop
ds
hlt
test
pop
push
cmp
aam
mov
pop
inc
testl
cmp
pushf
lret
cmp
jne
dec
mov
daa
mov
or
xchg
ret
xor
mov
cmp
das
push
jns
arpl
mov
xchg
push
and
sti
mov
pop
clc
push
fstl
sbb
call
mov
dec
nop
xor
adc
inc
pop
je
ror
divl
je
dec
add
test
sti
roll
push
aaa
lcall
ret
into
in
sbb
mov
sti
insl
jg
fldl
insb
cs
out
test
cmpsl
aad
xor
cmp
mov
lock
ja
fbstp
scas
push
dec
sbb
iret
xor
shlb
or
pop
int3
rcll
mov
fstpl
dec
push
das
xlat
sub
loope
sbb
sahf
push
xchg
rolb
movsb
lret
jmp
ljmp
test
mov
or
int3
sysenter
cld
and
inc
cltd
int
gs
cmpb
cwtl
push
rorb
jg
ret
movsl
decl
mov
mov
mov
inc
jl
dec
mov
ja
xor
mov
cmpsl
cld
movsb
lods
xor
mov
add
sub
scas
lret
xchg
test
test
sub
insl
arpl
cmp
xor
mov
sbb
lahf
test
mov
add
jmp
nop
sbb
int3
ljmp
and
add
insl
cltd
xchg
jo
test
mov
push
xor
je
out
test
into
out
ret
es
and
dec
cltd
mov
aam
imul
je
mov
mov
adcl
xor
xchg
sbb
out
nop
xchg
cmp
sarb
xchg
shl
sub
ds
mov
and
jns
mov
push
filds
mov
lods
mov
pop
cmp
das
pop
test
sbb
test
jg
xchg
stc
fnstcw
roll
sbb
movsl
mov
inc
ds
dec
das
test
or
jecxz
mov
out
outsb
std
lods
aam
in
dec
call
out
dec
hlt
mov
pop
xchg
ljmp
pop
xor
popa
and
idiv
cmp
dec
xchg
mov
fistpll
push
mov
xor
lods
fwait
sbb
jno
cmp
and
ficoms
and
pop
mov
mov
mov
subl
cmp
jno
fsubl
xchg
push
idivl
push
push
mov
cmc
call
add
jns
push
arpl
ss
mov
mov
imul
or
je
mov
movsl
jl
aad
lds
nop
or
test
movsl
je
cmpl
daa
or
stos
dec
in
imul
sub
ljmp
cmc
sti
xor
insl
jecxz
aas
shlb
jl
or
sbb
add
dec
xlat
add
xchg
mov
sbb
mov
gs
jl
dec
mov
mov
bound
fists
add
rcll
add
out
mov
js
mov
pushf
or
movsl
bound
mov
xor
jnp
outsb
std
cltd
sub
gs
xchg
mov
xchg
fcomps
dec
std
rcrb
neg
loopne
and
pop
data16
lahf
rolb
mov
mov
cmp
pushf
std
inc
adc
push
add
mov
or
aad
and
xor
or
fsubrp
cmpsl
popa
cmp
in
or
mov
jp
add
xchg
add
pop
je
mov
lret
xor
sub
and
pushf
test
inc
insb
sub
xchg
test
stos
inc
xor
andl
and
cmc
lods
enter
xchg
pop
arpl
mov
push
fisubl
adc
sub
xchg
loop
cmp
test
cmp
iret
fistl
sub
aas
xchg
not
or
adc
movsl
adc
into
into
jnp
pop
jmp
sub
mov
flds
clc
adc
pop
jp
xchg
xor
or
or
pop
add
mov
mov
loope
arpl
mov
or
or
xor
add
insl
out
jge
cwtl
andl
and
xchg
nop
fnsetpm(287
lods
pusha
scas
mov
stc
mov
imulb
pusha
js
mov
mov
mov
in
cmp
jne,pn
int
aam
and
leave
push
xor
push
or
je
lea
cmp
dec
dec
icebp
sbbl
aad
cmp
jp
mov
adc
dec
jp
popf
mov
lock
mov
sbb
out
adc
subl
stc
call
cwtl
mov
xorb
xchg
loope
sbb
cmpsl
or
dec
pop
jg
test
or
cmp
adc
pop
mov
inc
sbb
ja
insl
outsl
pushf
push
push
mov
enter
xorb
pushf
xchg
pop
add
or
or
pop
jp
jnp
jecxz
cmp
mov
int
loop
int3
popf
mov
stc
shll
dec
sub
jo
mov
lock
fistpll
loop
and
adc
sbb
cmp
lret
pop
cmp
sbb
mov
sub
daa
ss
sbb
ds
pop
inc
mov
xchg
sbb
and
mov
fidivrl
jmp
fisubrl
sub
sbb
sti
mov
inc
xchg
mov
mov
adc
push
xchg
int3
jle
std
sub
pop
outsb
test
test
shlb
loope
enter
or
adc
pop
pop
adc
aaa
cmp
cltd
lods
shl
push
xchg
xor
and
pop
cmp
jge
xor
fbstp
dec
cltd
adc
hlt
push
mov
adc
leave
gs
and
je
subl
sub
loope
xchg
movsb
and
aas
mov
mov
fisttps
push
shlb
jb
cmc
iret
add
ret
jae
xchg
mov
push
push
mov
aas
cwtl
or
arpl
adc
xchg
xchg
xor
mov
xor
xor
mov
adcb
dec
jbe
test
ds
add
xchg
test
jmp
dec
movlps
outsb
mov
pop
ret
outsl
mov
scas
sbb
cvtpi2ps
loope
jo
xor
ja
loopne
pusha
cmc
xchg
xchg
scas
cld
int
pop
je
fdivs
fs
sbb
and
outsl
dec
or
adc
lock
and
outsl
pop
stos
movsl
loope
roll
adc
sbb
cs
sbb
mov
into
fildll
sub
mov
adc
mov
int
mov
dec
fmuls
fmull
cmp
lds
daa
clc
jge
fstps
loope
add
clc
sub
lods
movsl
imul
xorl
push
and
sub
scas
jge
insl
adc
andl
add
loopne
add
jp
mov
rcrl
dec
aad
mov
inc
hlt
push
bound
rclb
movsl
insl
xchg
pop
fidivl
sub
cmp
fidivl
gs
and
mov
sahf
imul
mov
fwait
and
jmp
dec
test
cld
xchg
or
push
jnp
in
jae
sub
mov
mov
sbb
dec
leave
xchg
outsl
push
xchg
sub
mov
mov
mov
mov
in
test
fsubs
lret
shrl
inc
or
mov
dec
ja
lret
mov
repnz
xchg
mov
cmpsb
inc
push
out
pop
inc
popa
je
and
push
cs
push
cs
xchg
jge
lret
in
sub
sub
movsl
int
movsb
push
outsl
and
pushf
cmpsl
fimull
xor
cmp
add
fcomp
imul
insl
xchg
loop
lahf
int3
jp
inc
push
xchg
and
jmp
fistpl
ret
in
fcmovnbe
xor
push
mov
out
mov
int
iret
xor
push
clc
push
mov
fists
sahf
jno,pn
popf
vmptrst
inc
fs
sahf
js
rolb
xchg
jae
jg
dec
mov
pop
xor
lret
les
add
mov
repz
faddl
xchg
xchg
insb
jl
push
jb
loope
movsl
push
fistl
sub
mov
out
dec
pop
mov
repnz
pop
aaa
and
xor
pop
mov
mov
mov
aaa
mov
lock
lcall
push
test
cmp
push
pop
les
xchg
cmpsl
xchg
decl
movb
jp
mov
mov
sub
adc
pop
mov
filds
pop
add
enter
mov
in
rorl
pop
leave
and
test
pop
out
pop
inc
int
jbe
cmp
sub
sbb
les
pop
rcrl
imul
pop
or
notb
cmovno
adc
xchg
adc
iret
jns
sub
rorb
test
dec
or
outsl
jg
lds
push
sti
fists
mov
gs
sbb
loopne
push
dec
fisubl
mov
divb
daa
rcll
stc
insl
push
scas
jne
cmp
mov
fnstcw
dec
xor
adc
inc
test
sbb
sahf
mov
pop
push
rorb
or
outsb
cli
ljmp
lret
imul
fstps
incl
jae
int
lods
cmp
cmpsl
inc
hlt
pop
and
xchg
jmp
in
add
fistps
outsl
outsl
popf
daa
icebp
cmp
dec
test
data16
ja
dec
xorb
pop
lret
push
int
repz
rolb
push
inc
clc
scas
pop
flds
test
fistps
insb
mov
jp
jecxz
lahf
ror
ss
aaa
lods
cmp
loop
ljmp
sub
insb
dec
jmp
mov
sub
testl
and
fwait
daa
pop
push
adc
mov
push
roll
pushf
leave
mov
push
pop
or
cmp
ds
push
lds
test
jg
scas
stos
cli
sub
rolb
jne
cmp
xor
push
inc
or
inc
dec
mov
add
je
mov
ror
and
adc
mov
push
ficompl
int
push
sti
and
lea
push
hlt
gs
outsl
and
mov
push
xchg
mov
mov
mov
cltd
icebp
sahf
and
bound
inc
xor
scas
pusha
imul
and
xchg
mov
rcll
lds
mov
xor
xor
push
pop
dec
adc
adc
stos
rorl
jbe
or
mov
inc
or
lret
xchg
dec
mov
mov
repz
fisubl
andb
out
and
into
and
cmp
hlt
in
xchg
loope
pusha
mov
in
xchg
inc
pusha
lret
cmpb
fcoml
mov
cmpsb
test
inc
out
adc
mov
jbe
daa
xor
pop
out
loopne
lock
push
ja
pop
addr16
mov
cld
gs
es
repnz
fisubs
mov
fdivp
les
jb
fisttps
lea
fidivs
push
mov
or
aam
jle
stc
fmuls
push
jge
sbb
or
push
xchg
rolb
mov
loopne
outsl
pushf
cmp
adc
scas
rol
adc
cmp
add
aam
sub
mov
jno
int
or
jae
insb
jno
aam
mov
pushf
xorl
inc
rcl
pop
xor
ds
leave
pop
jno
inc
aaa
sbb
arpl
dec
jg
mov
mov
rolb
jns
xchg
jne
inc
xchg
aaa
sbb
fiaddl
xor
out
fbld
jae
cmp
sbb
bound
mov
call
cld
ret
fstpt
jmp
xchg
dec
mov
push
jns
push
dec
loopne
cmpb
daa
sub
dec
lds
xor
pop
push
push
je
out
inc
loop
mov
imul
mov
and
js
mov
xchg
push
mov
xor
test
cmpsl
add
pop
adc
popa
cs
push
push
test
fs
push
arpl
movsb
and
mov
mov
es
mov
dec
out
ret
mov
jl
lret
stc
shlb
cmpsl
adcb
or
aaa
pop
and
imul
stos
cmp
mov
cmp
in
push
pop
fs
xlat
adc
mov
outsl
jecxz
in
shlb
pop
bnd
push
test
ficompl
ss
push
pop
pop
aad
stos
xchg
pusha
bound
cmp
in
filds
sahf
dec
mov
rcrb
xchg
mov
push
fs
pop
imul
mov
or
fdivp
cmpsl
insb
out
xchg
and
pop
xchg
roll
jle
jl
ficoml
dec
gs
sbb
inc
lret
cli
imull
cmpsb
pusha
sub
std
adc
push
mov
int
jne
mov
scas
popf
mov
int
cmpsl
jmp
dec
mov
mov
clc
mov
xchg
push
mov
cmpsl
sbb
jl
push
jle
out
pop
inc
lods
mov
sarb
xor
out
in
cmpsl
outsb
sub
mov
pop
pop
sbb
push
sub
shrb
out
mov
int3
pusha
ffree
mov
mov
sub
pop
sub
adc
loope
je
sub
jp
cmp
sub
in
arpl
fsubl
sahf
inc
xchg
stc
iret
rcl
jmp
cmp
cmp
inc
mov
ljmp
clc
out
cmovno
jle
xchg
add
cmc
leave
inc
dec
xchg
dec
mov
test
inc
cmp
andb
jg
inc
sbb
fmuls
fndisi(8087
push
movsl
jle
sbb
sbb
mov
ja
cmp
cld
inc
nop
inc
test
aam
andb
cmp
sahf
mov
or
out
sub
xchg
pop
inc
or
sbb
cmp
clc
adc
out
adc
nop
sbb
add
mov
jns
sub
dec
mov
into
adc
out
adc
push
pop
pop
pop
rolb
adc
loopne
add
jp
ds
fdivrl
dec
gs
add
push
inc
cmp
sbb
in
sub
cwtl
lods
push
or
faddl
fwait
ret
cwtl
scas
or
jle
mov
pop
lret
loopne
xor
jbe
lahf
mov
xlat
and
or
mov
sbb
adc
insb
popa
leave
or
jne
jo
push
movsb
mov
xchg
lds
or
cmc
in
push
in
adcb
mov
test
repz
and
out
and
testb
mov
add
rorl
les
loop
add
std
repnz
out
sub
mov
cmc
pop
arpl
or
pop
pop
repnz
arpl
pop
push
into
lock
imull
lods
mov
movsl
sub
push
fisttps
sbbb
jbe
xchg
in
pop
xor
dec
xor
bound
cld
adc
inc
insb
stos
xchg
xor
shll
mov
icebp
out
lcall
cmc
sti
sbb
push
aad
shl
movsb
das
xor
out
leave
mov
xchg
mov
mov
cmp
sub
sti
lahf
sbb
pop
rorl
rclb
mov
mov
rolb
push
and
and
orl
cmp
insl
mov
jg
divl
xor
pop
xchg
movsb
or
rorl
in
outsl
iret
sbb
pavgw
xorl
xchg
bound
push
dec
ss
ret
enter
push
mov
pop
ljmp
rcll
test
repnz
and
inc
pop
mov
shr
and
cs
sbb
xchg
or
and
test
sbb
loope
pusha
jp
sar
sahf
mov
mov
and
pop
jecxz
or
pop
sti
jbe
in
loop
xchg
sbb
xchg
scas
test
test
inc
lods
pop
dec
mov
imul
push
xchg
lret
pop
andb
pop
sub
inc
cmpsl
and
icebp
xor
mov
stos
in
dec
movsb
inc
push
inc
cmp
arpl
std
jb
pushf
or
dec
mov
shll
shrb
dec
mov
push
mov
aad
fidivrs
int
xor
lods
loopne
and
lock
pop
gs
ljmp
int3
hlt
mov
out
into
jno
pop
pushf
cmp
mov
je
idivb
adc
stos
xor
sub
fldl
mov
sub
es
jle
dec
pop
ret
push
pop
fbstp
xchg
xor
mov
jp
out
sbb
adc
inc
cmp
fdivrs
sbb
and
mov
xorl
or
sahf
rcrl
cmpsl
scas
cld
push
mov
mov
push
fstpl
dec
sub
jbe
inc
pop
test
mov
jae
mov
mov
or
and
dec
ljmp
icebp
jmp
jno
cmp
test
cli
iret
sub
inc
fisubrs
lea
push
sbb
imul
push
notl
insl
bound
imul
test
repz
and
sbb
or
test
jae
ret
or
pop
arpl
xchg
jnp
es
imul
mov
dec
fdivrs
aaa
adc
in
ret
inc
fdivrs
les
sub
push
lcall
std
mov
jns
popf
subb
push
mov
test
adc
shl
addr16
and
pushf
mov
xchg
ret
mov
pop
pop
imul
adc
idivb
mov
push
movsl
push
ret
fidivrl
mov
iret
push
in
imul
mov
les
push
js
sti
xor
pop
lods
and
sub
pop
addr16
pop
xor
lahf
mov
sub
pop
and
jae
and
inc
pop
repnz
pop
inc
nop
lds
outsb
insb
mov
mov
jnp
aad
repz
clc
cwtl
daa
das
mov
xchg
sbb
pop
mov
imul
popf
lahf
sbb
jl
sahf
dec
stos
pop
repnz
loope
xchg
gs
cwtl
push
sub
jp
jae
sbb
add
xor
cmp
fwait
adc
pop
dec
movsl
popa
out
mov
sahf
xchg
pop
mov
dec
outsb
jbe
sbb
sub
jae
pop
dec
fwait
shlb
rorb
cs
xor
xor
scas
mov
or
sarl
scas
ret
push
test
mov
sbb
mov
sbb
icebp
sbb
mov
icebp
sbb
pop
sub
and
dec
push
divl
add
sub
aaa
lea
in
mov
stc
jb
xchg
ljmp
test
adc
mov
add
lds
insl
or
testl
outsb
jg
imul
xchg
or
pop
rcrl
adc
testl
lds
addr16
and
test
jecxz
adc
xor
mov
imul
hlt
fsub
sahf
hlt
jb
ficoml
gs
xor
jbe
mov
dec
push
test
add
out
push
movsl
ds
jmp
mov
sub
pop
stc
sub
mov
or
push
push
iret
jp
movnti
hlt
xor
adc
mov
add
sub
adc
push
xor
mov
addr16
in
sahf
mov
xchg
jne
mov
cwtl
adc
fldl
sti
pop
pop
lret
sbb
movsb
xlat
or
cmpsb
out
arpl
scas
push
pop
in
das
adc
push
mov
cmp
push
nop
add
cld
nop
and
ret
add
push
ljmp
fcmove
mov
cltd
jecxz
inc
test
jbe
jmp
mov
xor
int
add
jmp
and
xor
add
test
dec
lret
sub
mov
lds
aas
add
mov
or
insb
cmc
cmp
enter
push
mov
leave
shrb
mov
xor
cli
dec
je
mov
inc
cmp
xlat
loopne
dec
pop
je
mov
dec
cmc
std
jmp
cld
stos
push
outsb
arpl
xchg
add
xchg
pop
or
mov
pop
fadds
notl
mov
push
pop
sbbb
out
mov
clc
out
out
pushf
dec
pop
call
ret
jle
mov
sbb
scas
lcall
adc
movsb
in
pushf
sub
cwtl
xchg
bound
push
mov
cmp
cs
fistpl
sbb
or
xchg
jp
sbb
push
lret
dec
xchg
sbb
test
rorl
pop
out
scas
xchg
addr16
xor
push
rorl
rcr
add
fmul
adc
xor
dec
scas
cmp
dec
jecxz
jl,pt
jp
xor
je
dec
mov
push
lods
jno
jnp
int3
add
adc
push
ficoml
xchg
fnstsw
adc
lock
and
fidivs
dec
shrb
mov
daa
and
fnsave
ljmp
mov
or
inc
add
test
lods
imul
push
fidivl
jmp
daa
lods
jmp
xchg
popa
dec
xchg
mov
stos
in
iret
daa
jp
xchg
cmc
arpl
stos
cmp
and
das
jb
pop
pop
fsts
lds
pop
sub
adc
mov
fsubrs
in
cmp
fdivrl
repz
pusha
cmp
and
sub
sub
inc
mov
test
jg
clc
lock
jl
fidivrs
xchg
jmp
and
es
inc
and
or
dec
cmp
mov
inc
lock
push
lcall
xorb
lods
insb
addb
jg
pop
pusha
push
xor
push
jno
sbb
mov
mov
aas
inc
aad
leave
cltd
sti
sub
jecxz
mov
sbb
push
sbb
mov
xor
data16
jns
and
jns
hlt
xchg
js
push
pop
hlt
mov
gs
scas
inc
push
lods
jmp
rcll
mov
or
outsb
dec
or
or
push
enter
mov
fstl
neg
push
in
sub
xchg
frstor
fucomp
xor
fmuls
sub
lods
lods
dec
cmpsb
push
in
add
and
fwait
sbb
scas
aam
add
xchg
aam
movsl
sub
repnz
vmread
rorl
xchg
ljmp
dec
mov
push
adc
lret
and
or
out
test
and
and
mov
push
scas
fsubl
cmp
lods
push
mov
and
dec
fcoms
gs
out
jnp
and
sub
inc
jle
stc
jge
jge
loopne
inc
and
jmp
sahf
fsubs
jmp
movsb
ret
inc
lahf
aad
pop
mov
ss
jl
sbb
rorl
adc
imul
cmp
mov
xor
pop
int3
adc
popf
dec
icebp
imul
repz
cli
push
push
insb
push
mov
sub
in
aaa
add
or
and
xchg
leave
and
iret
push
xchg
aad
or
or
sahf
out
popf
cmp
inc
cltd
sbb
out
movb
repnz
mov
aas
push
add
sti
outsb
push
cwtl
lcall
mov
mov
sub
and
mov
jl
inc
adc
in
mov
mov
mov
push
fst
jle
out
neg
clc
in
sub
fs
jle
xchg
adc
movl
pop
xor
and
leave
jmp
repnz
mov
jae
mov
lret
loope
push
sub
xchg
movsl
cmp
add
add
scas
adc
lods
std
mov
push
inc
mov
rcrb
out
push
inc
pop
in
loope
adc
int
adc
scas
xchg
cs
iret
cmp
xchg
mov
cmp
xor
in
mov
dec
cmp
mov
jecxz
fistpll
adc
push
scas
je
pop
jl
pop
test
int3
out
push
inc
stos
xchg
test
adc
addr16
ror
lea
push
lock
pop
adc
call
add
push
shrl
out
ret
mov
iret
fsts
js
sbb
shll
pop
hlt
stos
cmpsb
mov
mov
into
add
jmp
add
or
sbb
push
inc
dec
daa
fsubl
xorb
sbb
es
cs
clc
inc
pop
int3
in
mov
inc
jne
outsb
mov
and
push
daa
mov
mov
push
mov
mov
pop
bswap
ficomps
xchg
mov
push
push
test
mov
dec
add
add
icebp
aas
push
mov
and
jne
pop
in
sti
pop
xchg
push
inc
cmp
push
jmp
pop
mov
cmpsl
push
cmp
mov
sbb
adc
lock
add
sbb
sub
ds
add
repz
pop
pusha
std
or
addr16
push
xchg
xorl
rorl
jl
hlt
orb
sbb
sarl
shll
pop
mov
add
jb
arpl
cmp
aas
add
xor
pop
pop
or
sub
jmp
bound
and
pop
push
adc
mov
out
xchg
cmpsb
adc
in
mov
out
fisubl
and
iret
sbb
dec
popa
cmp
lea
pop
sbb
cld
and
adc
add
scas
arpl
mov
dec
xor
xchg
and
test
adc
pop
adc
or
repnz
pop
push
mov
jle
test
xor
inc
movsb
adc
fildll
rcll
or
or
cmp
xor
lods
fwait
mov
mov
mov
pop
inc
or
xor
or
add
mov
xor
rcr
dec
jl
pop
jo
inc
mov
imul
out
mov
int3
jne
pop
fdivp
inc
push
addr16
or
mov
leave
cmp
push
mov
push
lahf
clc
or
je
cmpsl
inc
cmp
repnz
ficoms
imul
dec
cmp
iret
pusha
ljmp
mov
data16
pusha
jecxz,pt
pop
shlb
xor
and
test
xor
xor
xchg
add
ds
and
test
int
pop
pop
mov
cmc
daa
mov
xchg
test
adc
push
jecxz
imul
cmpb
fwait
dec
mov
xchg
pop
movsl
sub
jne
pusha
sbb
loopne
inc
add
out
rcll
sahf
sbb
cmp
ds
push
mov
push
stc
add
int3
jae
in
inc
inc
notl
mov
xchg
and
imul
mov
jmp
adc
pop
and
or
aam
stos
in
les
out
ds
jmp
in
cwtl
xor
adc
cmpsb
fwait
pop
jb
xchg
icebp
jl
mov
sbb
mov
bound
ret
loope
mov
clc
mov
and
rcrb
pop
mov
add
mov
mov
iret
mov
imul
rclb
xchg
leave
sbb
push
push
mov
arpl
jmp
test
loop
add
stos
outsl
pop
pop
in
sub
jnp
sqrtps
or
ja
mov
data16
add
mov
fnsave
and
xor
enter
or
jno
test
xchg
mov
xor
ja
lock
sbb
xor
mov
stc
mov
rcl
add
loope
cmp
push
subl
push
inc
movsb
lret
je
leave
sub
pop
jg
subb
les
aas
jnp
clc
sbbb
loop
xchg
mov
add
cmp
mov
pop
cs
lods
dec
xor
adc
data16
jne
jp
das
inc
mov
xchg
ret
stos
cld
add
ret
mov
add
and
and
rolb
push
mov
mov
pushf
sub
mov
xchg
outsl
jnp
lods
sub
cmp
push
testl
imul
sti
sub
and
es
push
repnz
mov
push
addr16
jle
inc
push
inc
stos
pop
cmpsl
lret
pop
test
fimuls
xchg
push
clc
cmp
gs
clc
inc
pop
lcall
insl
inc
fistpll
lcall
cmp
leave
fidivl
stos
insl
ret
jno
xacquire
in
idivb
inc
mov
in
jbe
jmp
push
popa
xorl
xchg
pop
dec
sub
dec
or
xor
cmpsb
clc
int3
repz
or
push
testb
insl
orl
sti
xchg
fs
mov
push
outsb
push
lret
stc
pop
xchg
mov
aas
popa
add
mov
and
test
add
and
test
sub
or
and
roll
cmp
fs
cmp
addl
and
lahf
scas
icebp
arpl
cmp
test
add
leave
jnp
mov
add
adc
add
test
xchg
cld
pop
push
fstps
or
xor
fldt
in
aad
ss
sub
push
push
ficompl
stos
in
jg
xchg
decb
fsub
jecxz
sbb
xor
and
mov
lret
mov
mov
jge
int
fs
add
mov
ret
fs
push
sti
inc
test
and
je
in
rclb
inc
mov
lret
lahf
imul
cltd
mov
jbe
jno
add
fdivrs
out
div
loope
lcall
pop
es
fistpll
cmpsb
out
cmp
int3
movsl
hlt
scas
push
lods
push
lods
mov
jle
jecxz
outsl
jmp
adc
pop
inc
mov
mov
cs
add
psubusw
sbb
std
shr
sub
or
mov
pop
adc
or
ljmp
pop
sbb
push
mov
mov
cvtps2pi
mov
sbb
xlat
popf
lods
ret
cli
jo
xchg
xlat
lret
pop
xchg
sub
push
icebp
in
orl
lcall
sbb
jle
sbb
jne
lds
lcall
push
add
loope
lock
add
out
xchg
fxtract
jns
shrl
add
or
scas
fmuls
lcall
pop
mov
repnz
aas
adc
or
jg
or
sti
or
int3
cmp
inc
sub
cli
int3
lods
lods
inc
jnp
stos
xchg
or
scas
jmp
inc
fs
loope
and
outsb
adc
bound
popa
xlat
es
out
add
or
addb
in
adc
jecxz
and
xor
enter
ja
std
xor
jo
dec
jnp
outsb
cmp
addr16
sub
adc
sbb
pop
leave
inc
stos
shl
ret
loope
inc
add
dec
xchg
mov
mov
push
std
xchg
xchg
lods
push
into
or
call
add
cmp
pop
dec
fisttpll
or
and
dec
hlt
adc
vmread
es
notb
or
es
sti
sbb
jge
into
mov
jae
je
cmp
cmp
pusha
mov
inc
pusha
jge
or
cmp
cltd
dec
test
cs
arpl
or
add
jb
cli
or
jae
int3
lret
shll
push
mov
or
mov
sbb
and
lret
movsl
scas
sub
popa
fisubrl
mov
and
dec
mov
inc
rcl
lcall
xchg
out
or
and
inc
pop
sub
insl
es
sub
fcmovu
xchg
xor
enter
mov
dec
dec
or
dec
mov
mov
xor
cmp
mov
or
iret
sbbb
pop
sti
adc
in
daa
cs
sbb
sub
aaa
jg
jmp
pop
adc
shrl
scas
cmpsl
xorb
outsb
mov
into
fldenv
push
nop
or
mov
jl
jno
add
data16
fsubl
incl
dec
out
mov
stc
test
or
inc
adc
cmpsb
mov
cli
jg
mov
jo
xlat
pusha
into
shlb
and
push
push
adc
pop
sbb
iret
pushf
jo
push
and
repnz
scas
dec
lcall
mov
dec
xor
mov
xchg
gs
pop
outsb
jnp
mov
dec
hlt
and
stos
cmpsl
mov
nop
movsb
xchg
lret
dec
and
iret
insl
or
sbb
lods
ds
popa
pusha
add
cmp
cmpl
jp
lods
jae
pop
clc
je
test
pop
out
adc
lcall
shrb
jbe
sub
loopne
xchg
adc
fcmovu
xor
nop
adc
je
stos
cmp
jecxz
or
in
jge
pop
aad
js
mov
test
lret
adc
adc
gs
lods
in
loop
leave
cltd
xchg
stos
ss
push
ret
mov
aad
jae
or
pop
cmp
jle
dec
scas
mov
mov
aas
sbb
add
sbb
aaa
cmp
adc
in
jg
nop
les
clc
gs
xor
fildll
xchg
pop
add
mov
repnz
sub
and
xchg
mov
test
add
push
shl
rcrb
push
mov
bound
cwtl
int
push
mov
mov
dec
xor
addl
repz
loope
xchg
fs
dec
mov
or
sbb
adc
loopw
inc
adc
loopne
mov
push
ljmp
inc
mov
xor
sub
mov
cmp
les
push
push
jecxz
es
xchg
into
push
add
push
xchg
ficoms
lods
mov
add
mov
adc
aad
inc
adc
and
lea
jns
inc
dec
sbb
xor
sbb
aas
pop
fstp
nop
mov
and
push
loopne
in
insl
int
sbb
test
fnsave
shl
jp
insb
mov
stos
lods
xor
cltd
xchg
push
aaa
cmp
icebp
lret
dec
ljmp
filds
in
les
mov
imul
inc
je
mov
or
and
aam
negb
push
xor
xchg
mov
push
mov
in
es
movsl
pushf
xchg
loop
xchg
fiaddl
lahf
lret
xchg
outsb
mov
aam
xchg
mov
sbb
add
mov
and
push
cmp
lods
xor
xchg
pusha
stos
or
clc
xchg
aad
mov
inc
lret
xchg
mov
sbb
mov
lea
shrb
sbb
jo
sarl
int
cmpsl
mov
mov
mov
or
leave
add
push
mov
les
xchg
xlat
ret
sub
nop
pop
gs
xor
mov
ds
in
sti
push
push
sbb
push
lods
add
loope
jmp
stos
imul
mov
add
xchg
insl
pop
mov
mov
gs
cmp
xor
dec
jno
add
dec
mov
loopne
shlb
into
data16
add
sub
xchg
sub
mov
loope
insl
mov
stos
cmp
cmp
push
mov
jle
pop
dec
and
sarl
dec
lcall
inc
cltd
scas
loope
insb
inc
push
std
xchg
repz
les
cmpsb
cmpl
pop
jge
cs
out
or
pop
cmpsb
out
repz
add
es
dec
adc
sub
mov
in
xchg
push
sbb
or
inc
clc
mov
aas
xchg
and
movsb
loopne
add
inc
sbb
jb
adc
ret
dec
pop
aam
pop
mov
dec
flds
dec
aaa
xchg
mov
arpl
test
cs
mulb
lret
inc
jnp
inc
mov
fwait
add
and
aam
jns
xchg
ret
test
scas
dec
mov
pop
lret
jns
into
pop
cmpsl
dec
push
mov
leave
mov
xor
dec
js
imul
or
mov
lcall
cmp
js
fildl
cmp
das
inc
dec
imul
repz
and
std
xor
cmp
in
jne
test
repnz
test
add
cmc
pusha
fildl
and
cmc
into
mov
ret
jg
and
enter
js
pxor
mov
xor
ret
jb
movsb
leave
dec
xchg
or
mov
enter
sub
mov
xchg
mov
cmp
out
push
xor
out
int
jp
jne
pop
sbb
push
mov
sbb
fdivs
mov
xchg
sub
lcall
inc
jb
jle
add
jae
out
mov
imul
call
sub
jae
jae
push
dec
mov
aam
or
sbb
mov
push
icebp
xlat
sbb
or
mov
mov
inc
xchg
pop
sbb
aam
add
call
test
inc
dec
fidivl
ret
je
xor
sbb
popf
jge
hlt
jne
aas
addr16
int3
push
push
test
or
test
adc
jg
or
mov
push
push
enter
out
xchg
adc
in
das
in
mov
outsl
sbb
mov
xor
sub
in
jle
push
rclb
and
cmpsl
or
test
mov
sbb
jl
out
and
test
mov
clc
sub
jge
sub
fsts
nop
or
dec
pusha
push
pop
test
push
imul
cmp
clc
iret
out
ss
xlat
pop
cmp
hlt
loopne
pop
into
loop
mov
or
pop
and
fnstenv
pop
pop
pop
mov
sub
fdivs
out
mov
or
mov
mov
jae
outsb
add
imul
jno
popf
xchg
cmp
jo
jp
mov
push
js
mov
mov
mov
inc
jnp
sbb
jne
sub
test
mov
ds
pop
pop
nop
pop
xchg
or
jmp
dec
sub
cltd
cmp
mov
mov
pop
ljmp
stos
sbb
lods
loop
mov
lret
hlt
xlat
call
mov
movl
or
sub
mov
shlb
int
sbb
ljmp
orl
and
and
pop
fs
fmull
hlt
xchg
fists
and
pop
bound
cmp
jne
sbbb
mulb
mov
cmp
ljmp
nop
push
xchg
ret
mov
ret
scas
sbb
into
pop
fcomip
lcall
movsl
cmpsb
jb
fistpl
sbbl
int
mov
int3
iret
scas
lahf
scas
enter
pop
nop
push
push
sbb
push
out
jne
leave
mov
es
inc
adc
push
fsubl
imul
jno
mov
es
dec
dec
sar
insl
aas
dec
data16
and
sbb
aas
dec
push
daa
dec
cmp
mov
cwtl
add
dec
inc
int
out
inc
sahf
pop
arpl
or
adc
jmp
lds
inc
test
aad
mov
pop
clc
and
mov
aam
add
int3
mov
pushl
lcall
jg
outsl
pusha
push
insl
loopne
in
push
in
pop
movsl
aas
fs
in
inc
adc
mov
stos
fdivrl
pop
jg
push
push
dec
and
pop
mov
cmc
aaa
scas
lea
dec
fs
dec
lcall
sbb
push
xchg
fs
and
repnz
out
cmp
and
es
imul
adc
mov
lds
or
mov
cli
das
and
jp
mov
xchg
add
xchg
jl
insb
sbb
jno
push
fidivs
dec
jno
dec
stos
sbb
leave
test
lock
out
push
mov
mov
xor
xchg
add
push
repz
xor
cmp
stc
sub
mov
inc
mov
mov
outsl
mov
add
push
pop
or
inc
lret
adc
cmp
push
test
pop
jecxz
popf
and
fstpl
inc
cmc
pop
stc
push
cmpsl
popa
icebp
push
sub
xchg
mov
mov
dec
insb
and
fildl
ds
neg
mov
lcall
adc
movsb
jb
lcall
lea
outsb
jle
mov
ret
xchg
fwait
loop
into
xchg
cmpsl
or
sbb
pusha
scas
repz
fsubl
cmp
out
inc
movsl
inc
or
mov
in
pop
jecxz
pop
sbbb
xor
sbb
pop
data16
fmull
sub
int
pop
ds
jmp
xor
stos
subl
mov
mov
dec
xchg
test
inc
dec
mov
outsb
adc
ror
dec
mov
xchg
or
push
es
mov
sbb
mov
mov
mov
jbe
push
sub
mov
enter
testl
inc
pop
pushf
ficoms
pop
fdivr
aaa
pop
clc
fadds
sbb
lcall
jmp
fistpl
jmp
xchg
lahf
insb
sbb
jo
inc
or
mov
mov
sub
lods
ljmp
cmpb
xchg
push
push
out
loopne
in
ljmp
sbb
sahf
and
aad
ja
xchg
pop
or
xor
fwait
jae
mov
pop
in
sahf
sub
inc
dec
xor
sbb
aaa
push
lret
decl
fs
dec
jno
dec
and
xchg
xlat
push
shl
lock
fsub
aad
cmp
and
xchg
mulb
enter
inc
in
mov
add
out
push
sub
jge
ret
pop
inc
test
idivb
mov
jae
inc
outsl
shrb
xchg
jbe
test
xchg
mov
dec
clc
inc
clc
in
lahf
mov
mov
imul
in
dec
lds
iret
js
cmpsl
mov
dec
imul
adc
xchg
lods
stos
add
sti
fisubrs
dec
jns
xchg
insb
out
test
fwait
mov
imul
lock
outsb
lods
push
cmpsb
gs
jo
or
cmp
aas
mov
add
add
xor
jne
fcmovu
imul
arpl
cli
pop
sahf
mov
insb
add
shlb
cmp
roll
pushf
mov
jp
mov
stos
das
insl
jae
pop
mov
cmp
dec
inc
int3
repz
pop
sub
pop
push
dec
call
rclb
ret
jge
data16
lock
rorb
ss
repnz
jae
jl
call
push
mov
scas
pop
inc
xlat
xor
bound
aas
cmpl
sub
inc
repnz
lea
xchg
fcomps
cmp
push
mov
lods
int3
lock
push
xor
outsl
addl
mov
in
mov
movsb
add
jmp
pop
shll
icebp
testl
lret
lret
insl
push
mov
fiadds
mov
adc
insb
lret
mov
outsb
das
adc
repz
sbb
sub
push
out
cmp
std
cmp
inc
cmpsb
ret
addr16
ja
loope
ds
adc
jmp
sbb
pop
repz
sub
clc
rcrl
movsl
mov
mov
insb
cli
pop
imulb
les
add
dec
add
movsb
mov
mov
pop
push
clc
mov
sub
jl
mov
push
in
sbb
mov
cltd
addr16
push
aam
pop
clc
cli
adc
dec
inc
sbb
dec
fiadds
test
lret
loopne
test
mov
xchg
loopne
mov
loopne
lds
cs
inc
add
mov
jle
dec
mov
daa
dec
dec
pop
icebp
jge
popa
mov
ja
and
ds
repz
lahf
imul
sub
aam
insb
pop
jmp
adc
lahf
pushf
enter
push
push
loop
jns
mov
pusha
fcomps
dec
imul
cli
rorl
mulb
xlat
push
mov
mov
ret
sbb
icebp
mov
insb
dec
mov
push
mov
adc
iret
mov
and
cmp
cltd
jg
sub
xchg
add
lcall
int3
push
iret
js
mov
xchg
add
dec
dec
jp
in
fistpll
dec
outsb
bound
rcl
mov
push
push
push
outsb
dec
fcmovu
jnp
jp
and
je
popa
paddsb
xchg
lea
inc
mov
xor
icebp
push
or
jle
cmpsb
cmp
les
enter
enter
push
inc
out
push
gs
sbb
and
repz
push
movsb
cmp
or
cmp
or
mov
gs
jns
pop
dec
dec
or
pop
mov
jmp
mov
insl
data16
cmp
movsl
mov
pop
stos
sbb
fmuls
cmc
xchg
sbb
lret
fildll
mov
lcall
jge
mov
or
test
push
add
popa
andb
fnstenv
fs
dec
xor
sbb
rorb
cmp
cmc
shlb
aas
nop
cld
mov
stos
mov
test
xorl
in
xchg
push
push
pop
sbb
pop
test
add
fcompl
sub
and
gs
pusha
pop
ljmp
push
loope
sub
xchg
jno
std
subl
inc
push
outsb
push
sub
loope
cld
push
jmp
fistps
nop
dec
dec
cld
addr16
pop
test
gs
fcoml
sbb
push
push
fistpll
ret
jle
lret
mov
fs
xchg
sti
mov
ss
push
ror
popf
and
mov
pop
sub
xor
or
sbb
xor
push
push
dec
cmpsl
shl
nop
sbb
cmp
mov
jbe
xchg
add
xchg
adc
pop
or
sbb
fisttpl
push
adc
filds
and
dec
or
sub
xchg
jns
loop
bound
push
mov
pushf
sbbl
or
add
dec
mov
jb
dec
enter
mov
lahf
and
mov
cmp
ret
ss
mov
mov
sahf
test
jnp
xor
cmp
gs
push
or
out
rcr
clc
dec
scas
les
xlat
ja
jb
int
cltd
mov
mov
lcall
stos
popa
dec
mov
cwtl
mov
sub
push
inc
adc
pop
and
cmp
lahf
ficoml
mov
lcall
inc
cwtl
jl
xchg
pusha
hlt
push
shlb
mov
ja
sbb
mov
ror
push
sub
mov
outsl
adc
outsl
int
fcoms
pop
xor
jg
fbstp
cwtl
enter
mov
dec
lahf
or
lcall
repnz
outsb
adc
stos
subb
mov
xor
add
movsl
shr
es
rep
arpl
fldcw
xchg
jo
inc
push
jne
and
cmp
or
inc
scas
push
mov
and
cmc
rclb
rcrl
xor
mulb
and
addr16
insb
loop
push
jne
cs
cli
sub
test
and
ss
int
ror
scas
dec
cwtl
jg
sti
ss
into
cltd
aaa
xor
adc
cmc
jb
dec
test
fiaddl
mov
mov
inc
imull
xor
cs
daa
or
hlt
repnz
in
mov
jp
mov
jnp
dec
test
pop
loope
add
popa
mov
xor
push
jae
and
dec
stc
inc
jle
or
call
add
and
mov
mov
test
jo
in
js
imull
lahf
les
jb
sbb
pusha
fcmovu
rolb
int
mov
xchg
add
cmc
out
xorl
imul
inc
mov
ret
ds
sbb
xor
imulb
shr
leave
xchg
je
aas
sub
es
push
add
jecxz
push
cwtl
lret
popf
mov
insl
add
pop
xchg
imul
movsb
ljmp
bound
leave
fsubl
push
pop
push
mov
pop
adcl
add
sbb
mov
gs
aaa
mov
inc
call
sarb
or
and
data16
outsl
mov
test
or
cwtl
xor
psubd
stos
loope
rcll
xchg
and
and
flds
jbe
icebp
dec
fld
cmp
mov
sbb
out
pop
mov
sub
pop
fldenv
sti
cwtl
aad
jno
ljmp
clc
pop
scas
dec
cmp
aam
push
insl
ljmp
dec
frstor
out
jno
in
xchg
xchg
rol
mov
lods
addl
and
and
movsb
cmp
sti
jns
arpl
jmp
sti
repz
or
add
sub
pop
out
sbb
js
fdivr
shr
repz
inc
addb
hlt
add
dec
rolb
in
mov
imul
push
fsubs
cwtl
dec
xor
int
mov
daa
cli
add
repnz
or
and
add
ds
loopne
jne
stos
data16
sub
dec
or
sub
rorb
dec
mov
js,pt
pop
jmp
dec
xchg
mov
mov
fbld
int
movb
and
xchg
loop
cmpsl
vmovq
pop
es
inc
or
aad
sbb
jae
pop
pop
cli
fdivl
pop
push
into
xchg
dec
iret
ljmp
xchg
mov
jns
stc
xor
push
imul
add
cmpb
icebp
push
push
mov
pop
mov
xchg
jp
fwait
xor
mov
mov
outsl
or
lret
fildl
push
add
add
add
dec
aas
xchg
daa
jle
mov
jg
clc
mov
bound
sub
rcrl
pop
sub
push
xchg
mov
das
cmp
imul
mov
sub
test
lea
cmp
xor
jp
dec
fldenv
fcoml
jne
inc
cmp
out
xor
in
mov
ja
xchg
mull
xor
sarb
and
mov
mov
or
popf
sbb
and
clc
repz
roll
mov
jge
movsb
xor
jmp
and
jp
push
jl
mov
push
mov
cmpsb
imul
inc
out
and
daa
xor
push
into
out
ljmp
lret
cmp
or
or
hlt
xchg
mov
divl
dec
movsl
xor
das
and
xor
pusha
pop
cmp
sbb
push
mov
outsb
ficompl
ds
mov
insb
cmovl
and
stos
or
inc
test
cld
faddl
lret
cltd
add
mov
adc
loop
xchg
push
jge
scas
dec
stos
sarb
xchg
mov
pop
cmp
ds
adc
sahf
testl
mov
cmpsl
ja
dec
cmpsl
mov
adc
sub
mov
xlat
imul
adc
lret
leave
fistpl
pop
insl
aaa
push
pop
ficompl
je
add
mov
jecxz
cli
gs
fsubrp
lret
mov
and
or
icebp
sbbl
jl
mov
inc
loopne
les
mov
data16
jecxz
jg
add
push
xor
insl
lock
sbb
adc
stc
mov
in
mov
icebp
mov
or
lods
adc
add
addl
add
cli
shl
repnz
repnz
lods
mov
mov
enter
push
pop
les
sbb
jns
fildll
repnz
push
aaa
push
bound
div
jle
sbb
ret
cli
insl
pushf
test
dec
dec
push
rorl
ret
into
int3
xchg
sub
xchg
popf
mov
mov
es
mov
ds
push
popa
jg
rcrl
pop
addr16
aad
loop
xchg
ljmp
xor
push
xor
int3
add
fcomip
fiaddl
fsts
test
lea
gs
rorb
and
in
scas
or
inc
adc
pop
inc
pop
je
pop
enter
ljmp
aam
and
pop
shll
mov
insb
mov
adc
adc
orb
sub
jbe
adc
xchg
or
mov
cmp
jp
in
dec
mov
cmp
leave
sbb
sbb
adc
lret
bound
hlt
pop
adc
xor
sbb
pop
cld
out
dec
xchg
clc
jmp
push
jns
mov
outsb
js
push
and
xchg
push
pop
fcompl
insl
insl
xor
pop
mov
mov
xchg
je
movsl
adc
sub
ret
inc
xchg
sti
dec
fwait
xor
pop
fwait
ret
movsl
cwtl
adc
cwtl
cwtl
aad
lret
add
xor
stos
je
repz
lock
xchg
cs
fsubrl
mov
jno
rorb
outsl
xlat
jns
mov
icebp
jg
push
nop
test
sub
pop
xor
movsb
mov
xchg
adc
outsb
das
pop
mov
into
scas
mov
lret
inc
insb
mov
mov
mov
pop
dec
or
nop
sti
jmp
and
scas
cmp
pushf
or
aad
repnz
icebp
pusha
sbb
mov
flds
mov
fsubl
pop
mov
adcb
or
pop
shrl
ljmp
cli
and
sbb
lahf
pop
clc
adc
inc
mov
fdivrl
and
out
out
jo
insb
sub
mov
rcr
dec
inc
insb
sbb
xor
push
inc
push
dec
test
cwtl
rolb
pop
mov
adc
cltd
ficoms
xor
fnsave
pusha
inc
jmp
mov
lcall
and
pop
inc
add
fwait
cwtl
push
roll
mov
repnz
into
add
sarb
jmp
lods
scas
dec
bsf
idiv
lods
addr16
scas
mov
xor
pop
pop
insl
cmp
inc
inc
test
and
mov
out
mov
mov
push
mov
add
loop
dec
mov
cmc
jne
dec
mov
dec
int3
mov
mov
jae
sbb
out
push
rcll
jnp
lea
inc
sbb
iret
jle
data16
into
mov
addl
inc
decl
data16
addr16
adc
jge
lods
stc
imul
movsb
repnz
daa
and
adc
push
decb
imul
fidivl
cmp
cmp
sbb
xchg
outsl
push
rol
hlt
cmpsl
dec
jae
add
mov
stc
fsts
sub
push
cmp
js
cmp
push
into
add
sbb
jnp
lahf
negl
adc
or
mov
lcall
mov
out
es
sub
push
push
dec
outsl
jb
sarb
popa
jp
xchg
popf
je
ror
rcrl
or
and
and
lea
test
out
mul
sub
push
mov
out
xchg
mov
lahf
fwait
xchg
mov
mov
sub
in
mov
jp
loope
push
out
shlb
add
scas
push
clc
jne
lods
popa
lds
dec
loope
xlat
xchg
adc
xor
fisubs
bound
fisubrs
sub
mov
mov
pop
mov
mov
pop
mov
inc
mov
inc
icebp
sbb
xorb
pop
mov
pushf
sbb
sahf
aaa
jle
call
imul
xor
mull
std
push
mov
dec
mov
lock
and
sbb
push
mov
inc
movsb
push
xor
push
sbb
idiv
scas
iret
js
cmpsb
xchg
sarb
cwtl
decl
out
mov
rorl
aad
bound
push
test
std
jae
cmp
jb
xchg
cmp
cli
xchg
imulb
mov
mov
cmp
jle
int3
lcall
comiss
cwtl
pop
and
sti
test
cmp
sti
frstor
or
cmpsb
inc
inc
imul
cltd
arpl
lods
ficomps
hlt
adc
mov
inc
insb
mov
mov
andl
lea
lret
sub
sbb
cmp
pop
movb
cmp
or
out
ss
int
cli
mov
cmc
shr
mov
adc
stos
in
es
addr16
ljmp
fcomip
sbb
fnstenv
pop
outsb
ss
ja
cmc
test
lods
and
xor
pop
push
xchg
sbb
push
mov
add
lret
nop
roll
js
nop
adc
enter
out
sub
push
stos
xchg
in
adc
push
jns
xchg
push
out
sahf
mov
mov
add
leave
loope
or
test
add
jno
int
cmpsb
push
or
xor
sub
aad
hlt
mov
idivl
jg
ficompl
sti
inc
xor
or
imul
shlb
imul
hlt
aam
push
cmp
daa
or
jge
mov
xor
shl
dec
cmp
sbb
imulb
fisubl
lds
push
inc
gs
shrb
sub
dec
call
jle
cmp
nop
incl
push
fsubrs
dec
jle
incl
mov
movsb
push
push
arpl
mov
movsl
int3
fucom
and
push
push
int3
jnp
cmpsb
push
aas
ja
outsb
ret
jecxz
xor
xor
xchg
adc
add
pop
imul
pop
loop
jmp
test
outsl
pop
or
popa
lods
mov
xlat
fisubl
pop
inc
lcall
fscale
addb
popa
jge
out
mov
mov
sbb
push
inc
in
aaa
xchg
xor
sahf
xor
frstor
jne
mov
add
out
mov
xchg
jle
in
hlt
std
cld
std
movl
jns
jmp
push
rclb
sbb
or
pop
leave
push
adc
test
or
dec
loopne
daa
xchg
dec
jle
sub
pop
pop
sub
push
nop
std
sub
sbb
jecxz
out
jo
xchg
ljmp
push
shrl
inc
aad
jmp
mov
or
adc
mov
out
pop
mulb
test
push
jg
cmp
imul
loopnew
adc
xor
fcmovnb
sub
and
fnsave
fcompl
jge
add
ss
inc
adc
adc
jle
jbe
stos
add
adc
stos
jp
or
lret
jecxz
pop
pushf
push
dec
inc
ret
dec
fldl
jae
clc
jmp
mov
sub
add
pushf
jmp
sti
pop
fimull
mov
in
in
and
inc
test
cmpsb
add
pop
mov
movsb
test
mov
jl
mov
adc
inc
outsb
movsb
pop
and
push
dec
pop
ja
and
adc
sub
repz
mov
pop
push
enter
pop
or
mov
xlat
xchg
lahf
pop
xlat
inc
jbe
xchg
hlt
xor
xchg
pusha
inc
mov
pop
lock
mov
or
xor
dec
sub
insb
outsb
and
iret
test
push
fstpl
dec
mov
sbb
int3
test
popa
cmp
push
int3
push
dec
int
mov
jbe
cmp
pop
inc
fsubs
xchg
test
popa
adc
ror
sbb
jmp
imul
jge
dec
jne
mov
fstl
fadds
sbb
fadds
sbb
mov
inc
cmpsb
and
pop
je
and
pushf
and
add
cmpsb
jbe
test
dec
xlat
fdiv
pop
xchg
push
pop
inc
ficoml
jnp
adc
hlt
ljmp
frstor
jp
sbb
lret
sarl
lcall
cmovnp
inc
push
inc
pop
jno
jle
ror
jmp
int
jl
mov
gs
jbe
fdivrs
mov
stc
pushf
mov
outsb
jnp
push
orl
fstps
cmp
jne
and
mov
out
jp
ret
ss
outsb
xor
gs
in
sbb
xor
mov
xchg
mov
mov
cmpsb
and
jmp
xor
loop
adc
mov
inc
mov
shlb
dec
cmp
xchg
lock
mov
shrb
cs
std
mov
cmp
dec
lret
add
mov
mov
cmpsb
mov
dec
fildll
fldenv
lret
adc
sub
mov
sar
fisubrl
les
push
or
repz
adc
cltd
mov
cltd
jne
push
out
sbb
sahf
adc
lock
lds
cmc
cmp
repz
call
and
xchg
sahf
out
popf
outsb
inc
adc
cmp
inc
or
and
pop
in
daa
push
lahf
inc
std
imull
fwait
clc
pop
inc
popl
into
in
dec
pop
lret
lock
mov
jecxz
stos
aas
fsubp
arpl
shlb
sti
mov
pop
sub
xchg
popa
sub
js
cwtl
daa
jle
cltd
jmp
lods
mov
les
out
mov
in
imul
add
sti
lods
and
inc
push
mov
pop
ret
inc
adc
mov
push
jbe
dec
popa
fdivrl
sub
dec
cmp
je
jne
mov
pop
sbb
mov
fadds
ret
scas
out
adc
shl
movsb
jge
jge
je
cmp
jno
mov
popa
add
fimuls
sub
sbb
jl
mov
cmp
inc
cmp
xlat
inc
aaa
pop
inc
add
inc
stos
cli
sub
mov
data16
lods
idivl
push
iret
jl
cli
int
cmp
out
ss
clc
sbb
enter
jl
repz
lods
jnp
pop
mov
and
pop
scas
jne
adc
mov
cmp
sbb
mov
lock
ret
push
sub
sbb
push
and
xor
cmc
in
xchg
das
mov
cmp
pop
pop
jle
ret
fisubl
lret
add
outsb
enter
or
jle
add
xor
or
jle
std
sub
jl
adc
sub
insb
adc
inc
push
fucomp
out
lods
orl
enter
xor
pop
data16
and
cmp
in
cmp
jl
in
xchg
xchg
jg
lcall
sub
xchg
sub
mov
inc
lods
es
xor
sarl
mov
aam
lds
test
fnstcw
stos
mov
imul
inc
mov
cmp
adc
add
mov
test
dec
pop
cmpsl
add
inc
dec
mov
mov
mov
cld
fnstenv
xchg
add
sbb
scas
inc
xchg
sbb
pop
es
xchg
mov
pop
ds
repz
fwait
movsl
ljmp
xchg
jns
xor
leave
push
push
cmp
mov
iret
jo
ljmp
mov
dec
pop
mov
mov
mov
add
jge
pushf
and
fwait
inc
mov
shl
cmc
jb
ret
push
and
dec
jle
subl
cmc
stos
inc
test
jbe
arpl
adc
pop
test
dec
and
call
out
push
repz
push
mov
pop
adc
popf
fdiv
sbb
les
fstps
scas
cwtl
mov
std
int
in
inc
mov
pop
clc
daa
mov
sbb
mov
gs
cmpsb
jmp
stos
negb
xchg
cmpsb
lods
adc
repz
dec
push
repz
mov
and
or
inc
out
aaa
jae
adc
fcompl
fmulp
insb
arpl
jp
mov
sbbb
paddsb
test
cmpsb
aas
dec
pop
push
add
xchg
xor
and
loop
arpl
loope
mov
xchg
cwtl
ljmp
cltd
test
aas
cmpsb
push
sbb
test
push
es
ljmp
popa
bound
cmp
mov
mov
dec
test
inc
pop
sbb
arpl
and
mov
out
or
cmc
lea
jo
repnz
and
repnz
and
xchg
adc
push
shrb
sbb
dec
aaa
ficomps
scas
adc
es
addl
mov
lods
clc
loop
fs
cmp
call
jg
mov
out
arpl
loope
mov
imull
in
or
adc
leave
mov
out
xchg
je
scas
pop
int
or
jae
test
movsb
sahf
pop
cld
arpl
dec
call
pop
xor
mov
jne
iret
pop
lds
xor
dec
pop
scas
scas
lahf
dec
or
push
xchg
xor
mov
and
int3
or
mov
aam
test
push
add
movsl
cwtl
pop
push
jns
adc
adc
sbb
dec
cmp
loope
insb
leave
mov
inc
xor
mov
ficoml
and
out
push
jge
jp
mov
enter
pop
mov
and
xor
loop
adc
fildll
cmpb
hlt
lods
jbe
mov
push
fcmovu
jno
insl
insb
jge
and
out
ficoms
mov
in
add
or
sbb
xchg
subl
mov
inc
cmpb
jmp
fwait
push
or
outsb
push
cmp
aaa
sub
mov
sbb
pop
mov
fmulp
xchg
stc
pop
xchg
xchg
int3
inc
xor
sbb
add
sti
mov
rolb
outsb
enter
adc
enter
cmpsl
add
mov
inc
lahf
lods
cmc
mov
aaa
mov
cs
or
test
repnz
scas
repnz
movsb
hlt
sbb
ss
dec
je
mov
stos
int
mov
jp
mov
fisubrl
pop
jle
fsubl
and
jg
jo
fdivs
mov
std
sbb
cmp
sarl
xchg
mov
nop
cmp
bound
popf
push
lods
test
and
rcrl
cmp
mov
in
xor
mov
inc
js
jo
dec
push
aam
xor
xchg
ljmp
repnz
enter
xchg
adc
out
or
xor
ss
sbb
or
rorl
cmp
pop
jne
xor
in
int3
fimull
xor
pushf
in
jae
out
pop
ret
out
sub
cs
rcrb
dec
int3
inc
mov
cmp
push
sbb
scas
test
mov
sub
fisubl
push
dec
push
mov
cmpsl
sub
mov
roll
in
inc
scas
movsl
in
cwtl
cmp
lds
add
movsl
jl
shrl
fdivs
mov
xchg
adc
mov
test
inc
pop
lods
mov
xor
in
xor
pop
test
and
xor
sub
outsl
out
movsb
mov
mov
insl
adc
adc
or
push
insl
dec
pop
xor
sti
mov
sarl
push
out
leave
xchg
cmpsb
mov
aas
out
fldcw
movb
jb
inc
shl
fsubs
shrb
iret
sbb
mov
push
cld
cmc
push
lds
sub
or
mov
ret
aad
mov
subl
ret
sub
pop
push
push
xor
mov
sbb
inc
pushl
adc
ds
in
insb
inc
lea
cmc
push
inc
jbe
and
roll
or
jno
arpl
outsb
sahf
or
lods
jo
xchg
sub
leave
cmp
push
popa
xor
push
ljmp
push
out
outsl
pop
sbb
fucompp
jp
jecxz
push
mov
sub
mov
adc
push
cs
rcrl
fucomi
sub
jo
cmp
dec
das
das
cmp
xor
and
stos
push
lds
bound
fists
aaa
test
out
aam
mull
outsb
and
pop
mov
addl
mov
loop
rol
inc
scas
notb
mov
movsl
sbb
jge
movsl
adc
repz
in
mov
movsl
dec
pusha
mov
dec
leave
repnz
lods
or
ret
jnp
inc
jnp
or
xchg
fdivrl
dec
dec
sbb
push
cmpsb
loop
jg
mov
lea
movsb
pop
js
cld
popa
andl
add
jl
pushf
mov
stos
xor
inc
icebp
xchg
mov
outsb
sbb
jns,pn
mov
mov
jne
add
xor
jns
mov
sahf
cli
cld
push
ss
out
notb
pusha
cmp
test
stc
mov
xlat
es
inc
add
ljmp
jl
inc
mov
les
mov
imul
popa
push
add
cld
mov
mov
mov
decb
cmp
cmp
in
xchg
out
push
inc
inc
cmp
inc
hlt
xchg
icebp
jmp
ds
lcall
add
xor
lret
fwait
sub
das
pop
lea
loopne
push
das
mov
popa
test
sub
imul
pop
xchg
out
xchg
xorb
mov
adc
sbbl
loope
les
push
pop
das
xor
cwtl
cmp
out
lock
outsb
pop
push
arpl
xchg
pop
iret
outsb
or
fisttpl
mov
aad
stos
sub
out
cmp
fcomps
mov
imul
sub
imul
mov
imul
push
dec
adc
xor
aaa
and
imul
rcrl
pop
aad
jle
pop
sub
push
pop
js
inc
mov
inc
xchg
add
push
movsl
scas
fists
xchg
nop
cmp
or
incb
adc
jmp
and
ret
xchg
scas
sub
pop
xchg
mov
pusha
dec
mov
iret
push
mov
xchg
jp
jle
ljmp
mov
lds
mov
jns
xchg
popf
loope
and
pop
add
and
mov
or
sbb
popf
rcrb
in
fwait
jmp
dec
es
mov
xchg
loopne
xchg
mov
sahf
cli
jns
fwait
cwtl
dec
jae
mov
loope
ljmp
or
pop
xchg
mov
test
and
shll
stos
jno
jle
inc
lcall
scas
lds
mov
aaa
mov
stos
mov
mov
mov
lock
out
and
dec
xlat
std
std
lds
push
mov
lret
into
cmpb
jp
dec
aas
repz
adc
push
loope
lods
lods
xchg
mov
insb
sub
adc
cmp
les
mov
xchg
cmp
adc
add
jnp
fidivs
dec
subl
js
xor
mov
or
mov
movsl
imul
ret
dec
les
xor
push
sbb
xor
sbb
mov
dec
mov
or
sbb
sub
in
imul
in
jmp
stos
push
lahf
lcall
or
jae
mov
rclb
pop
jmp
dec
fcmovnu
ja
lods
es
int
loope
lahf
add
jnp
jg
or
in
sahf
mov
mov
adc
jno
sub
adc
imulb
inc
and
in
adc
daa
dec
sub
push
ds
push
nop
rcll
pop
inc
jl
push
test
jl
aaa
inc
int
add
mul
shrl
stos
call
sub
or
dec
jmp
cmp
push
test
push
mov
and
xlat
movsb
repnz
pop
daa
mov
inc
pop
sbb
inc
and
and
pusha
push
fsubrl
daa
cltd
movsb
decb
push
int3
arpl
adc
cmp
inc
pop
leave
mov
jmp
sub
cmpl
test
sbb
call
sbb
pop
aaa
sub
sarb
ljmp
jp
lds
add
sbb
cmp
cmp
clc
lcall
fcmovne
sub
adc
xchg
lahf
push
adc
push
cmpl
push
les
fdivrs
fcmovnbe
push
mov
add
jne
pusha
mov
fcmove
loopne
lods
fs
jne
dec
push
cld
addl
rcrl
pop
or
pop
add
xor
loop
lock
sub
out
xchg
mov
jl
adc
jo
addr16
and
rcll
leave
and
add
lods
sbb
or
mov
add
orb
pop
add
mov
andb
sub
cmp
mov
mov
sub
xor
pop
xchg
mov
fisubl
repz
mov
push
sbb
xchg
push
ss
stc
xor
mov
or
dec
rcrb
cmc
insl
adc
xor
cli
push
jp
jg
insl
push
xchg
insl
xor
xor
pop
pop
shlb
ljmp
in
mov
adc
ficomps
pop
inc
jp
jns
jle
pushf
sub
push
and
mov
sub
adcb
mov
xchg
stos
fdivr
mov
cmp
push
add
shll
test
or
dec
lods
pop
jb
xor
push
mov
xor
movsl
sbb
mov
xchg
out
mov
iret
xchg
imul
xor
mov
loopne
fucomp
movsl
xchg
jmp
cwtl
or
xor
int3
lock
dec
add
repnz
fmuls
mov
xchg
stos
push
popa
enter
cli
ja
cmp
insb
ja
mov
jno
arpl
adc
es
dec
fbstp
xchg
out
adc
out
bound
repnz
dec
in
cmp
jne
loope
adc
pop
inc
jle
iret
mov
imulb
inc
lahf
cmp
std
rorb
repnz
int
ja
mov
cld
push
push
mov
and
cmc
sbb
or
dec
xor
aad
pop
lock
cli
xor
out
into
add
inc
insl
sub
fnstcw
push
stc
dec
and
clc
leave
push
mov
pop
repz
int3
paddusw
xchg
mov
and
shrb
lret
cld
gs
loopne
xchg
pop
cmpsl
xor
adc
fcom
jmp
movsb
sbb
push
stos
cmp
push
testl
jns
pusha
aam
xchg
pop
sahf
pop
jl
insb
mov
xchg
mov
das
sti
inc
idiv
sbb
test
sub
dec
popf
andl
add
push
lods
cmpsb
xchg
push
adc
stos
mov
das
push
mov
and
test
test
mov
sbb
push
outsb
xchg
mov
cmc
sub
inc
dec
mull
test
loope
movsl
hlt
ljmp
imul
stc
repz
out
test
scas
adc
adc
in
xchg
jb
rcl
js
movsl
test
dec
adc
sbb
mov
fs
ret
xor
and
mov
and
outsb
call
add
ror
inc
icebp
inc
sbb
insl
xor
std
inc
dec
mov
ret
testl
mov
enter
inc
out
sbb
outsl
pop
hlt
xor
movsl
aam
dec
lret
push
adc
insl
test
mov
lods
jp
or
in
jno
pop
icebp
mov
test
repnz
xchg
adc
imul
mov
stc
repnz
outsb
push
cltd
jg
xchg
test
ss
add
fwait
les
cld
aaa
fnstsw
scas
pushf
scas
ss
adc
xchg
icebp
push
movsl
les
leave
push
sbb
push
lods
jbe
adc
pop
cld
mov
xchg
mov
mov
scas
ret
add
cmp
fsubrl
xchg
repnz
fcmovb
mov
iret
or
daa
mov
movsl
mov
dec
dec
out
in
add
add
mov
int3
loope
insl
ret
stc
roll
fisubs
fwait
xor
push
fldenv
fdiv
xor
sarb
leave
cld
pop
daa
stos
test
jb
imulb
jmp
adc
adc
cmp
add
flds
sbb
gs
nop
mov
popl
bound
mov
jno
sarl
es
mov
js
dec
mov
mov
mov
lea
lret
fcmovnb
xchg
push
pop
popf
fists
mov
dec
push
addr16
loopne
pushf
dec
add
test
rcll
inc
mov
jl
scas
sub
inc
jns
jbe
out
pop
xchg
js
imul
xorb
jecxz
scas
loope
xorb
and
inc
xor
jmp
int3
fwait
lret
mov
or
sbb
jecxz
and
lret
jns
in
adc
push
and
adc
lea
add
out
xlat
push
mov
push
sahf
in
ljmp
jmp
arpl
jne
stos
mov
call
into
xor
addr16
push
aas
and
jo
int3
mov
mov
lds
mov
xor
cmp
jae
int3
mov
stos
inc
bound
add
fs
xor
mov
xor
xor
pop
fidivrs
xor
jge
xchg
lock
fs
jg
or
bswap
out
cli
ljmp
aad
arpl
xorb
mov
xchg
sub
dec
mov
mov
fcmovu
dec
sub
inc
mov
inc
mov
adc
adc
push
ret
xor
mov
sbb
scas
repz
or
cltd
jnp
scas
adcb
mov
jecxz
andl
in
or
push
clc
inc
imul
jg
popa
bnd
cmpsl
sti
pop
andb
mov
out
outsl
in
push
push
icebp
mov
lahf
mov
inc
cmpsl
or
push
cmp
adc
xor
mov
xor
fcomip
jno
cmpsb
sbb
mov
lds
cmp
dec
ss
das
iret
jns
popl
ret
bound
sahf
call
cltd
loopne
jecxz
xchg
push
sub
add
dec
cmp
inc
or
pop
das
je
or
cltd
cmp
add
ja
sbb
xlat
int
add
loopne
push
scas
pop
mov
arpl
into
aas
lcall
xchg
or
push
lock
jno
dec
insl
or
mov
stos
mov
mov
xlat
pop
xchg
lds
lods
mov
xor
nop
adc
insl
mov
clc
pop
loope
pushf
ficoms
pop
inc
ret
mov
sub
movsl
shlb
add
icebp
adc
in
std
inc
int
test
add
mov
out
aaa
push
aam
popf
cmp
lahf
push
push
bnd
xchg
inc
fimull
loop
pop
mov
hlt
push
mov
jo
sbb
dec
js,pn
lret
push
test
dec
cld
aaa
js
das
enter
mov
push
stos
xchg
jae
push
dec
xchg
ljmp
in
mov
cmp
push
lds
pop
pop
xchg
and
pushl
add
mov
mulb
jno
les
popl
in
sub
popa
inc
in
fmulp
imul
xsha1
cmpsb
mov
sbbl
pop
cwtl
lcall
pushl
idivl
dec
nop
cmp
lret
xor
add
adc
adc
cmp
jne
clc
jmp
imul
xorb
in
push
pusha
movsl
hlt
bound
cld
outsb
dec
sbb
jbe
lods
push
push
jg
jmp
jmp
fs
adc
jnp
test
push
pop
xor
inc
dec
int3
mov
pop
mov
add
push
and
mov
push
out
mov
jo
push
add
int
pop
dec
insb
bound
lds
les
jle,pt
js
fildl
je
cmpsl
or
lahf
gs
pop
idivl
lock
js
mov
inc
dec
inc
clc
test
inc
xchg
mov
inc
adc
scas
pop
lods
dec
loopne
or
lret
fwait
mov
xor
ret
xor
mov
lods
arpl
aad
push
ja
ljmp
adc
push
fdivrs
mov
arpl
xchg
shl
cmpsb
pop
movsb
pop
xlat
dec
jecxz
dec
xchg
and
and
aaa
mov
fs
repz
test
dec
mov
mov
inc
cmp
and
in
add
test
or
xchg
ja
scas
xor
out
sub
pop
push
fnstenv
and
adc
fs
mov
mov
pop
icebp
out
leave
movsl
call
jmp
popf
jge
or
or
test
dec
adc
and
je
jl
xchg
dec
fstpt
mov
add
call
repnz
jnp
jno
cmp
das
inc
sbb
mov
aaa
push
xchg
add
loopne
mov
loopne
das
sbb
cmpsl
mov
stc
ret
and
xor
sub
into
mov
or
shlb
adc
mov
mov
mov
andb
mov
js
push
jne
xchg
je
cmp
cmc
adc
int3
decb
es
and
cmpsb
or
dec
dec
pop
hlt
push
xchg
mov
adc
push
fmuls
push
scas
ja
push
mov
cmc
sbb
cwtl
mov
orb
xor
jo
adc
push
xorb
arpl
or
mov
pop
and
je
inc
pop
icebp
gs
dec
out
inc
repz
repnz
jno
adc
fdivs
popa
sbb
mov
daa
dec
mov
ja
xor
mov
cs
jecxz
jbe
cmp
add
push
push
lds
push
dec
mov
inc
cli
xchg
jns
repz
xchg
lds
fisttps
jne
or
mov
mov
dec
mov
int
bound
and
cmp
popa
out
sbb
enter
mov
cmpsb
nop
jle
add
loop
inc
jl
lret
inc
pushf
adc
daa
mov
fsubrp
mov
mov
in
xor
cld
jecxz
call
addr16
and
leave
in
cmpsl
mov
insl
insl
fsub
test
pop
movsl
mov
icebp
cmpsl
ss
cmp
push
cli
jl
mov
test
imul
insl
cmp
in
loope
push
pushf
adc
dec
mov
fwait
movsl
dec
mov
cmpl
arpl
sbb
mov
xor
test
stc
aad
xor
add
outsl
lods
dec
lret
jge
stc
cmp
pushf
call
dec
popf
xor
xchg
ret
dec
or
sub
and
mov
outsb
jp
test
dec
mov
stos
or
shl
push
in
cmp
push
inc
push
inc
pop
cmpsb
in
cmp
xlat
out
cmp
mov
or
and
jbe
pusha
sbb
xor
repnz
cmp
or
push
enter
cs
adc
dec
loopne
xor
outsl
inc
rorl
ljmp
roll
ret
aad
jl
sbb
pushw
mov
dec
imul
mov
fisubs
cmp
xor
fsubr
sub
pop
sbb
push
call
bound
fimuls
jnp
dec
in
dec
xlat
dec
dec
jge
movsl
mov
insb
addr16
sbb
jbe
ficomps
fwait
pop
dec
notl
xchg
int3
pop
ljmp
cmp
jg
mov
out
push
fstpl
insl
mov
mov
rclb
out
je
mov
rolb
dec
loopne
push
cld
xor
and
sub
mov
jge
imul
xchg
mov
mov
cmc
sub
jnp
fcoml
int
stc
mov
mov
jbe
daa
xchg
dec
mov
push
mov
pusha
jne
jl
insb
pop
pop
cmp
out
dec
leave
or
popf
ss
adc
dec
orb
pushf
mov
jg
cmp
mov
fisubrs
push
pop
dec
test
xchg
pusha
int
sbb
loopne
fsubl
fnstenv
cmpsl
sahf
ud1
lods
push
nop
ds
mov
dec
aas
in
dec
fnstenv
mov
fdivrs
repz
mov
sti
xchg
xor
loope
add
mov
inc
jbe
out
cld
adc
gs
sarb
cmp
mov
sbb
fwait
in
test
adc
test
jle
xchg
push
sub
sbb
push
xchg
push
hlt
adc
jae
fsubl
mov
mov
mov
push
or
lods
and
lahf
fwait
aad
mov
add
int3
push
mov
mov
push
push
movl
and
adc
xlat
push
fildll
push
cmpsl
add
pop
sbb
push
sbb
inc
cmp
jne
or
add
xchg
push
xor
mov
cmp
inc
repnz
cmp
shl
daa
adc
push
adc
add
mov
mov
adc
mov
sub
cmp
mov
nop
jle
iret
adcb
insb
popf
popa
lea
mov
inc
gs
imul
push
jp
xchg
outsl
push
add
fimuls
mov
out
iret
lahf
pushf
dec
pop
and
push
sub
jb
cmpsl
inc
push
movsb
mov
xor
out
out
rorl
lods
inc
ret
rorb
sbb
rol
into
mov
call
ficompl
xorb
adc
cmp
mov
cli
mov
pop
dec
or
sub
cmp
mov
push
hlt
cmc
fwait
mov
test
xor
cmp
shll
sub
add
mov
rcrb
mov
or
rcrl
test
or
fwait
cmp
mov
and
repnz
lods
repz
adcl
pop
mov
popa
or
iret
and
xor
cmp
pop
lea
and
push
insl
jp
pusha
jge
add
xchg
je
mov
cmp
mov
js
xchg
sub
inc
sahf
enter
rcrb
push
cwtl
mov
mov
sub
dec
xchg
les
dec
and
stos
sub
lods
mov
mov
mov
jl
lret
testb
lahf
hlt
mov
mov
scas
into
pop
ds
and
cmp
aam
mov
testb
fnstcw
es
cli
iret
push
sub
jecxz
cmp
adc
sub
mov
add
adc
jl
pop
movsl
dec
xchg
aad
out
sub
xchg
inc
rorl
ret
lods
icebp
inc
loop
lret
dec
sbb
mov
push
lahf
mov
mov
jg
es
pusha
inc
out
or
scas
jnp
imul
mov
add
sbb
jle
in
cmpsl
aaa
rorb
adcl
stos
sub
sarb
and
rorb
repz
and
dec
insb
add
xor
mov
push
lock
fptan
jmp
sti
inc
add
fadds
mov
pushf
int
fwait
jb
push
in
cmp
inc
dec
fsubrl
inc
sub
mov
mov
add
mov
loope
lcall
xor
andb
cmp
push
xor
xchg
pop
jg
out
mov
or
xchg
xor
ret
sbb
test
clc
fstpl
enter
sub
shll
push
sub
sbb
or
adc
xor
xchg
pop
test
or
push
add
inc
dec
repz
mov
xor
xchg
scas
iret
and
sub
jmp
sub
outsl
xor
add
cmpsl
push
je
lret
push
cmp
mov
dec
shll
jbe
pop
inc
gs
mov
and
cmp
mov
xor
mov
add
ds
imul
lock
sbb
cwtl
in
std
fisttpll
mov
cmpsb
mov
add
in
pop
repnz
mov
leave
jne
mov
lds
dec
jno
adc
jge
mov
push
push
xor
mov
adc
mov
movsl
jno
insl
cli
adc
pop
cmpsl
push
sub
jl
adc
push
hlt
pop
xchg
repnz
enter
dec
and
xor
jno
loope
sub
vorps
jb
push
xor
pop
lret
sbb
out
imul
enter
fiadds
lcall
jb
les
jb
loope
dec
stc
or
xchg
push
cld
fildl
push
mov
int
cli
adc
mov
or
sti
lahf
pushf
data16
inc
test
cs
or
add
mov
pusha
cmp
stos
int
scas
jmp
rorl
cmc
aam
jbe
aad
xchg
jmp
imulb
jmp
push
in
mov
xor
pop
cmp
fcomip
mov
push
aad
out
insl
stc
add
outsl
xchg
cmpsl
fimull
sti
pop
or
jge
hlt
xor
test
lods
cmp
pop
xchg
sarl
and
push
add
jb
loop
into
xchg
or
mov
mulb
pop
shlb
inc
lahf
arpl
xor
test
cld
mov
push
mov
das
add
popa
leave
mov
and
pop
addb
mov
add
nop
sub
push
sbb
iret
jne
loope
sub
xchg
mov
sub
cmp
sub
addr16
adc
push
add
popa
repnz
mov
or
fs
add
jmp
cld
mov
push
add
fstps
icebp
mov
sub
das
cmp
mov
fwait
mov
dec
out
repnz
fcmovnu
rcrb
adc
xor
jle
fstl
xchg
cmp
into
or
lret
jecxz
mov
pop
arpl
cmpsb
lea
mov
scas
xchg
inc
fsubs
xchg
setp
dec
into
xchg
in
or
dec
mov
outsl
shlb
lret
out
mov
xchg
loopne
add
aad
cmp
sub
cmp
mov
mull
mov
popa
shlb
into
pop
and
stc
inc
into
outsb
mov
pop
jnp
mov
sub
jno
pop
inc
xchg
mov
fcomi
pop
out
inc
xor
into
ficoml
xor
and
sub
adc
icebp
andb
lret
hlt
inc
mov
clc
sbb
mov
lods
mov
pop
loopne
ret
pop
sbb
lock
push
cmc
fs
sub
dec
or
js
cmp
adc
out
hlt
fistpl
sbb
jno
adc
ljmp
adc
cli
cwtl
push
loop
mov
fidivrl
adc
mov
dec
or
popa
int3
xchg
push
xchg
fucomi
jp
dec
test
sbb
cmpsl
add
xor
call
dec
pop
psrad
or
jb
fdivs
or
imul
dec
mov
popf
ficompl
jns
mov
xchg
ss
sub
dec
and
aaa
imul
sbb
scas
inc
stos
repz
mov
mov
sub
xchg
pop
mov
ljmp
sti
repnz
fists
sbb
addl
mov
and
in
jae
test
mov
adc
sahf
xor
les
mov
cmp
std
movsb
negl
sbb
jns
push
adc
dec
test
pop
dec
aad
out
dec
ss
adc
lods
cmpsb
push
out
mov
lahf
add
scas
inc
es
add
stos
xor
xor
movsl
add
cmp
inc
sub
adc
or
leave
rcrb
mov
mov
gs
jp
adc
js
xor
xchg
jl
sub
ss
sub
lret
push
add
aaa
push
dec
pop
jns
mov
mov
add
add
sbb
sbb
jle
dec
or
mov
andb
lea
jnp
sub
int
sub
stc
jb
stos
sahf
aas
push
jo
xorb
movsb
jecxz
stos
push
imul
cmp
lds
jns
mov
cmp
insb
jecxz
aad
pushf
inc
stos
loop
adc
insb
addl
sub
dec
push
fsubs
jmp
rclb
or
int
adc
or
pop
mov
enter
fdivl
fldt
arpl
ret
outsl
adc
lcall
pop
and
mov
aaa
mov
or
push
jmp
jno
popf
cmp
inc
fwait
das
stc
and
scas
ja
ljmp
or
mov
mov
mov
or
and
ret
cmpsb
push
jne
push
idiv
fwait
dec
sbb
xchg
psrlq
cmc
and
adc
repz
xchg
mov
popa
lahf
or
dec
and
fdivl
cmpsl
es
sarl
add
dec
sbb
xchg
outsl
adc
jbe
mov
cmpsl
stos
pop
push
mov
xchg
dec
cmp
inc
mov
add
lods
out
jg
xchg
les
jno
shrl
and
movsl
cmp
jl
mov
lods
icebp
mov
loope
pop
rolb
test
lret
iret
inc
cmpsl
mov
jl
out
dec
jbe
fs
add
cld
in
sub
mov
jmp
fisubl
ja
jmp
mov
mov
in
scas
jle
dec
mov
outsb
pop
movsl
mov
fcmove
jns
jmp
push
lret
jne
dec
sti
jl
xchg
push
add
lods
mov
sarl
push
loop
cmp
dec
xor
popa
movsl
orb
shr
out
xchg
jb
rclb
xchg
or
in
lods
outsl
mov
push
ret
lret
inc
sbb
test
push
int3
jmp
inc
mov
mov
jg
mov
or
lods
and
mov
andb
cmp
daa
pop
or
popf
arpl
and
rclb
jb
pop
aas
mov
pop
cmp
neg
decl
pop
das
repz
shlb
cmpsl
insl
inc
dec
mov
push
cs
lret
ds
dec
sbb
jnp
sub
fmull
add
inc
dec
movb
sti
xchg
lahf
add
outsl
dec
xor
inc
mov
popa
in
push
inc
aad
add
mov
mov
imul
movsl
push
fdivp
jnp
ds
test
sbb
test
imul
mov
into
mov
loop
mov
fcomi
xchg
aam
jns
sub
in
pop
or
add
cs
cli
pusha
aaa
cs
fistps
xor
xor
or
es
jnp
pop
test
xchg
mov
and
dec
in
mov
dec
int
pop
frstor
pop
stos
insl
shl
mov
lea
mov
adc
pop
dec
call
mov
ss
xchg
test
rolb
cmp
call
insb
sub
fisubrs
mov
lahf
xor
mov
mov
sahf
cmpsl
shlb
aam
je
enter
cmp
fucomi
ror
addr16
lods
xchg
push
stc
jl
push
jge
mov
sti
out
sub
test
mov
dec
das
xchg
int3
daa
inc
roll
pop
mov
mov
daa
sar
in
icebp
call
cli
or
xor
jge
cmpsl
mov
ljmp
sub
cmp
iret
in
push
leave
sbb
sub
dec
push
and
adc
popa
mov
cmpsb
jb
cmc
dec
mov
in
pop
cmpsl
and
xorb
add
adc
call
add
mov
cmp
dec
xor
sbb
xorb
fistpl
cmpsl
mov
xor
imul
int3
scas
lds
and
cmpsl
jbe
scas
jmp
xchg
cltd
imul
icebp
cwtl
lds
pop
xor
mov
dec
jg
and
lods
mov
and
pop
inc
cli
push
or
aad
push
or
or
hlt
xor
mov
ljmp
cmp
adc
repnz
cmpsl
inc
xorl
or
sti
jnp
cmpsb
pop
shl
shl
sbb
lret
cmp
int3
push
jns
sub
data16
inc
inc
repnz
push
stos
scas
xor
add
in
call
mov
push
jl
pop
inc
repnz
add
cwtl
sub
xchg
fisubs
push
push
mov
int3
test
jl
insb
aam
addl
pop
mov
mov
jl
aam
arpl
sbb
cmpsl
insl
fmull
adc
fidivs
cmpsl
xlat
roll
ja
loope
fisttpl
push
xor
test
rorl
sub
adc
fnstsw
shl
pop
xor
push
bound
or
mov
sub
mov
cmp
mov
std
ret
das
test
movsl
icebp
add
out
pop
out
xorb
test
jo
lods
adc
xchg
fcmovnu
jg
mov
lahf
xchg
mov
jge
sbb
push
test
test
xchg
shll
inc
in
mov
popa
xchg
adc
bound
insl
cmpsb
or
fiaddl
pop
sti
decl
cmpsl
pop
scas
lret
insb
leave
idivb
scas
jmp
cmpsl
mov
cmp
pop
and
inc
fs
and
mov
sub
test
pop
aaa
sbb
pop
clc
std
mov
pop
int3
and
ret
repnz
rcr
push
fiadds
cmp
mov
dec
gs
test
mov
pop
inc
cs
ja
mov
push
movb
push
clc
test
lret
pop
enter
xorl
mov
and
rclb
popa
clc
mov
lods
pop
imul
repz
pushf
cmpsl
cmp
aaa
or
orb
sbb
scas
pop
out
sub
in
mov
jecxz
xlat
ljmp
js
lods
out
mov
and
xchg
adc
inc
lahf
outsl
shrb
inc
ret
and
test
or
and
ret
ja
es
xlat
aam
fcompl
mov
mov
repz
outsl
aas
dec
jae
out
mov
vfrczss
add
cmc
std
js
mov
sbb
xchg
inc
lods
jnp
inc
imul
cmpsl
mov
push
push
gs
aaa
daa
fs
or
cs
mov
sub
or
mov
leave
sbb
in
fimuls
jnp
stc
imul
ret
and
inc
outsl
push
sub
lret
fisubs
fldcw
dec
pop
faddl
and
test
std
pusha
push
adc
cmc
add
mov
int3
xor
insb
xlat
mov
andl
adc
pushf
jmp
xorl
mov
xor
sbb
pop
push
movsl
push
and
mov
mov
jo
jle
loopne
rolb
jb
push
xor
hlt
mov
out
lods
mov
out
int3
pop
pop
and
jg
pop
inc
mov
mov
popf
js
dec
js
ljmp
iret
add
insl
push
sti
adc
dec
scas
xor
mov
imul
push
ss
sub
call
inc
push
xchg
jae
xchg
sbb
loop
jb
das
dec
pushf
lea
fcmovnu
fisubs
mov
mov
jbe
pop
push
xchg
ds
mov
sbb
imul
mov
jg
cmp
jo
daa
pop
lahf
or
rolb
cwtl
les
mov
xchg
jne
dec
pop
mov
adc
hlt
stos
loope
dec
sbb
inc
push
adc
pusha
in
inc
inc
testl
and
ja
add
xchg
push
into
mov
inc
sbb
into
or
or
sbb
dec
mov
jp
mov
fisubl
fcoms
fildl
push
pop
lds
hlt
in
mov
ffree
and
inc
clc
fwait
dec
add
int3
lods
in
in
adc
xlat
mov
insb
mov
jl
pop
das
mov
dec
pop
mov
add
aad
stos
mov
enter
sbb
adc
cld
inc
addl
enter
cli
insb
movsl
shll
add
mov
sub
bound
mov
popa
out
je
loopne
mov
cmpsb
ret
xchg
loopne
addl
push
sub
mov
jecxz
mov
sahf
je
arpl
iret
stos
pop
bound
mov
fnsave
mov
stc
or
jl
mov
mov
mov
xor
add
enter
enter
mov
pop
fcomps
lods
mov
imul
pop
sbb
sbb
pop
pop
xchg
iret
dec
enter
or
xchg
outsb
cltd
out
hlt
fiadds
inc
out
or
enter
cli
mov
dec
pop
std
leave
pop
mov
into
or
outsb
cli
dec
inc
fsubrs
js
div
mov
dec
jle
sbb
jp
scas
icebp
sub
cmc
adc
add
les
mov
std
add
in
aam
sbb
jne
fwait
push
mov
or
add
pop
mov
test
xlat
sbb
ljmp
pop
lods
fisttps
js
pop
sti
jecxz
and
sbbb
stc
pusha
pop
out
aas
test
cld
adcb
pop
pop
sbbl
mov
and
or
mov
fcomps
loopne
fistps
sbbb
xorl
pop
ljmp
in
or
cwtl
nop
or
aam
mov
movl
jne
ret
xor
es
adc
jecxz
lea
scas
dec
stos
and
rcrl
clc
ret
dec
icebp
push
add
in
jno
pop
adc
sbb
and
repz
mov
inc
mov
adc
push
or
sahf
outsl
lcall
jbe
or
dec
push
jp
out
push
rorb
lcall
adc
mov
in
lret
jb
imul
stc
push
int3
xor
lahf
ja
test
xor
je
jecxz
daa
pop
jbe
cmp
dec
inc
or
enter
inc
inc
sub
dec
inc
and
clc
jne
mov
daa
lahf
sti
xor
jp
loope
lock
lcall
or
and
out
clc
pop
adc
mov
mov
or
jmp
or
lret
and
sahf
in
jo
push
and
jecxz
push
mov
sub
lcall
sub
je
iret
std
jmp
add
dec
sahf
and
cli
sub
arpl
frstor
outsb
loope
lret
adc
mov
jecxz
movsb
ror
xchg
jae
sub
xchg
daa
or
inc
stc
cld
lahf
test
ljmp
sar
pop
and
fisttpl
lds
nop
int3
ljmp
push
sbb
and
sbb
loop
jecxz
testb
push
scas
dec
arpl
pop
cmp
aam
and
or
mov
clc
enter
stos
pop
in
repz
jae
fs
dec
xchg
int
push
add
clc
aas
jo
mov
add
js
mov
mov
arpl
jae
test
scas
xorl
lret
imul
jnp
lret
cmpsl
ss
int3
add
pushf
adc
or
sbb
add
jne
in
mov
cmp
js
or
xor
sbb
lock
add
jmp
sti
ds
jbe
icebp
add
fists
adc
jns
push
clc
push
cmp
insb
popa
out
dec
mov
orl
xchg
ret
aad
aad
orps
test
dec
cltd
mov
push
jmp
xor
in
pop
fildl
idiv
pushf
repnz
cs
in
mov
testb
mov
sub
mov
dec
ss
add
repz
lahf
pop
mov
mov
xor
mov
loopne
lcall
dec
jg
lock
sbb
div
dec
scas
mov
hlt
push
mov
mov
mov
push
lods
push
sub
jl
bound
dec
jg
cs
jp
sub
pop
dec
add
rcr
add
iret
xchg
mov
sub
mov
insb
and
ja
jnp
int
sub
push
icebp
rcrl
sti
dec
les
sub
mov
mov
js
add
xchg
fnsetpm(287
mov
sbb
int
push
int
shlb
cmp
mov
ds
cmp
xchg
outsl
and
add
jl
and
js
xchg
sbb
into
mov
fstps
loope
lds
mov
xchg
cmp
rol
cwtl
jecxz
aas
cmp
add
call
sub
mov
inc
pop
xor
cltd
fs
xor
test
and
aad
loope
add
cmp
dec
xor
pusha
mov
imul
mov
mov
popa
sbb
xor
add
push
loope
mov
je
std
pop
push
cmpl
add
sahf
popf
and
rcl
mov
lcall
mov
loope
fildll
mov
insb
dec
and
fadd
jl
sbb
push
lods
fwait
out
iret
arpl
jecxz
inc
dec
push
hlt
pop
mov
sub
dec
jns
subb
mov
scas
insb
aaa
and
fs
pop
out
in
test
push
xorb
push
clc
inc
sub
mov
arpl
mov
mov
jno
gs
je
or
mov
dec
xchg
dec
cli
cld
mov
xor
push
movsb
jg
jle
jno
mov
sub
jnp
loop
xor
jo
cwtl
leave
sub
push
push
jmp
adc
dec
xchg
cli
out
push
repnz
xor
dec
pop
dec
call
and
pop
jp
or
sub
jno
mov
sub
cmp
je
lock
adc
adc
icebp
lret
repnz
mov
adc
insb
fnsave
les
mov
mov
cmp
push
jbe
cmp
sbb
lds
cwtl
adc
pop
ret
jno
jecxz
mov
dec
fs
je
movsb
mov
test
inc
dec
mov
movsl
xor
mov
jo
hlt
mov
dec
push
push
jne
ss
sub
aas
ja
leave
xor
adc
xor
sbb
push
cmp
mov
pushf
fimuls
cmpsb
or
dec
cmp
mov
loopne
pop
and
flds
enter
dec
jb
push
sbb
xchg
mov
daa
mov
add
xchg
decb
fucom
into
mov
sbb
xor
dec
shl
jp
xor
movsb
rep
dec
cmp
roll
call
mov
pusha
dec
outsl
dec
or
aam
jne
adc
dec
dec
pop
push
inc
fists
mov
fisubrl
or
sarl
repnz
xchg
scas
jnp
test
push
test
test
push
inc
popa
lea
orl
repz
ja
pop
imul
pop
jmp
inc
gs
pop
xor
stos
int3
inc
push
xchg
jno
pop
cmc
sub
adc
adc
fistpll
out
add
mov
and
mov
icebp
dec
sbb
jmp
fdivl
mov
lcall
xchg
mov
mov
cmp
push
push
std
imul
sub
movsb
nop
add
mov
xor
mov
out
adcl
push
add
pusha
imul
mov
cmp
dec
xchg
add
pop
sub
jbe
out
scas
xlat
jmp
sub
or
movb
ss
xchg
sahf
addl
jae
ljmp
cltd
fildll
push
mov
int3
sbb
sub
sbb
dec
pop
pop
call
cmp
repnz
pop
mov
repz
enter
or
lods
loope
mov
or
nop
int3
add
fisubs
push
fsubl
sarb
fyl2xp1
enter
cmpsl
mov
ja
ret
sbbl
ljmp
and
cwtl
iret
lret
or
or
pop
mulb
pop
xchg
out
sub
xor
jns
dec
test
pop
sub
ret
dec
call
add
sbb
mov
ret
xchg
mov
dec
xchg
inc
jmp
adc
mov
stos
lret
cwtl
mov
imul
test
fmulp
lods
cmp
mov
stos
add
jo
cmp
popf
push
sti
pop
pop
scas
inc
cs
in
mov
aaa
inc
mull
gs
mulb
stos
inc
out
xchg
jns
clc
ss
mov
popf
push
lds
nop
add
xor
push
in
jecxz
into
pop
loopne
jnp
jnp
fnsave
stc
jmp
inc
or
ss
pop
dec
fcompl
hlt
mov
push
inc
pop
gs
popf
clc
mov
sbb
inc
sbb
mov
pop
xchg
jo
mov
fisubrl
popf
call
xor
lahf
testl
sbb
shlb
setns
pop
add
call
test
xchg
fcmovu
xor
jns
sahf
dec
mov
push
aad
xor
imulb
rcll
xchg
lock
sub
jmp
add
sbb
bound
adc
cmpsb
repnz
inc
cmpl
xchg
xor
xchg
jg
and
mov
cmp
ss
insl
mov
outsl
test
fistps
xchg
sti
sub
sbb
loopne
aam
leave
mov
mov
add
cmp
inc
push
sub
idiv
in
lock
in
or
jns
jmp
dec
adc
mov
adc
push
sbb
loope
and
loopne
adc
and
pop
outsb
mov
mov
popa
push
pop
fcoml
fbstp
and
add
and
hlt
xchg
pop
test
jp
fnstsw
mov
fcomp
xor
dec
push
lret
fcomi
mov
mov
mov
sar
pop
in
mov
cmp
js
pop
jl
cli
test
jmp
inc
xchg
mov
rcrb
mov
adc
dec
pop
scas
inc
mov
pop
std
imul
lods
xor
mov
fwait
lret
cs
and
movsl
fnstenv
ja
mov
sbb
ficompl
rcl
or
and
or
lret
mov
pop
into
js
mov
mov
ret
test
adc
cmc
push
xor
in
mov
sti
mov
arpl
mov
push
xchg
test
mov
sub
fsubl
push
adc
cmp
xorl
push
in
loope
xchg
cmpsb
notb
xchg
fndisi(8087
loopne
es
repz
mov
adc
jecxz
pop
sub
pop
pop
test
xor
sbb
cmpsl
jae
enter
int3
faddl
int3
ds
or
fldlg2
dec
or
rorb
add
enter
pop
xchg
pop
ret
inc
or
sbb
add
push
push
lcall
push
inc
mov
jo
jo
xlat
pop
sbb
int
stos
inc
inc
lcall
sbb
jo
mov
pushf
sbb
adc
jo
or
aas
repnz
xor
loopne
ljmp
sbb
push
je
xor
nop
popa
push
fadds
dec
shl
inc
mov
mov
cwtl
enter
pop
push
rolb
push
popf
lea
sahf
ja
jl
test
mov
push
insb
cmp
stos
push
mov
jns
std
mov
xor
mov
jge
leave
push
dec
and
inc
dec
in
pop
ljmp
aad
dec
dec
popa
or
test
mov
sbb
cli
adc
insl
shr
sub
jecxz
outsb
add
mov
filds
and
ret
adc
pop
test
inc
inc
jnp
xor
mov
sbb
aam
outsb
mov
and
loopne
dec
ret
into
addr16
xlat
nop
das
mov
inc
and
imul
cmpsl
jg
mov
dec
insl
cmc
stos
cs
inc
aas
mov
fs
sub
cmp
jns
jmp
repz
and
xchg
push
inc
or
push
mov
sub
cmp
or
pop
xchg
fidivs
pop
mov
daa
and
jnp
push
loop
mov
mov
mov
adcl
ds
dec
out
lahf
push
mov
stos
in
pop
adc
ret
and
xchg
sub
cmpsb
xchg
pop
dec
out
mov
mov
push
andl
cmpsb
dec
aaa
enter
pop
jns
pop
xchg
or
sub
xchg
xchg
adc
repz
scas
insb
insb
xchg
test
adc
cmp
sti
adc
cmp
nop
sbbb
mov
cli
sub
nop
loope
jg
sub
shr
mov
inc
mov
sbb
and
lahf
push
and
xchg
hlt
pop
push
or
aaa
xchg
jge
mov
mov
fisubrl
jg
mov
icebp
scas
jg
cwtl
or
or
les
jae
push
inc
jno
js
cwtl
xchg
xor
test
cwtl
mov
add
xor
enter
in
mov
mov
movsb
fildl
out
ret
sbb
push
jmp
aaa
inc
dec
mov
pop
int3
push
or
sbb
imull
inc
int3
push
cmp
std
mov
add
adc
mov
into
push
or
jmp
xchg
cmp
mov
roll
jecxz
jl
leave
fldcw
clc
out
add
ljmp
imul
jbe
ret
movsb
adc
subb
dec
pop
fsubrl
fwait
jne
and
insb
pop
add
mov
int
pop
push
push
adc
sbb
outsl
je
cmp
scas
cmp
cmp
mov
mov
stos
push
xor
cmpl
lea
stc
fidivrl
popl
int
test
adc
adc
popa
or
es
inc
adc
sbb
mov
jo
mov
push
aas
lods
inc
aaa
add
sub
sbb
mov
movsl
gs
rorl
inc
mov
adcl
pop
inc
fcoml
pop
push
adc
xchg
cmp
sub
and
scas
or
xchg
and
dec
lods
mov
push
xchg
and
cwtl
scas
mov
sbb
imull
xchg
dec
stos
aam
fnstcw
inc
dec
xor
stc
ja
push
jp
loope
adc
xchg
popf
dec
jb
pop
and
or
pop
xor
mov
sub
imul
pushf
push
adc
jae
jecxz
lock
fistpl
jmp
ss
mov
std
mov
inc
xchg
jecxz
mov
pushf
jbe
mov
inc
push
std
repnz
jns
lahf
add
mov
cmp
pop
sbb
enter
xor
sub
mov
mov
inc
adc
dec
imul
lcall
inc
pop
jmp
fbld
sbb
test
xchg
bound
inc
test
push
push
je
cmpsb
pop
cmp
push
jo
adc
cwtl
jns
push
fdivs
push
push
test
mov
int
pop
fcomps
lds
jbe
aad
es
shlb
adc
aaa
cli
cmp
std
imul
mov
and
pop
lods
jmp
lret
cmp
repnz
sub
ret
mov
push
and
xor
ret
jmp
ret
popa
call
lock
jae
xchg
cmp
fsubs
xlat
int
and
std
sub
jae
and
sbb
jo
or
mov
test
pushf
cmp
jp
xrelease
es
push
push
insb
mov
ss
int3
fdivl
xor
xor
test
pop
mov
dec
shrl
dec
mov
mov
cmp
jmp
xor
es
mull
fs
call
lds
xchg
lods
or
sub
mov
jno
inc
outsl
mov
idivl
pusha
jle
push
dec
push
inc
jge
adc
push
push
mov
xor
xchg
pop
fsubp
inc
push
ret
pop
sahf
aas
push
xchg
imul
xchg
js
inc
fsts
xchg
ja
cmp
loope
sahf
inc
nop
pop
or
mov
lods
jl
idivb
mov
jp
adc
pop
push
cmp
inc
push
adc
mov
mov
ret
inc
xchg
notl
popf
scas
cmp
inc
mov
addl
or
out
ds
mov
jge
movsl
add
ja
xorb
test
fidivl
adc
mov
xchg
scas
addr16
hlt
pop
mov
enter
call
inc
outsb
enter
popf
popf
sbb
outsl
mov
or
std
xchg
arpl
es
in
or
sub
stos
dec
inc
clc
imul
mov
xchg
sbb
dec
add
mov
push
cli
mov
aaa
scas
xchg
jne
lods
js
push
dec
push
faddl
fnstsw
clc
sub
sbbl
and
mov
jae
addb
adc
orb
cs
int
mov
in
scas
adc
cltd
into
push
xor
daa
mov
pop
push
pcmpeqw
jmp
aam
and
inc
and
int
push
mov
adc
dec
in
sbb
mov
es
mov
call
pop
mov
push
mov
mov
nop
sahf
push
cmp
inc
add
pop
mov
in
in
sub
jecxz
addr16
cld
mov
xchg
xor
mov
scas
mov
dec
hlt
imul
cmp
pushf
mov
adc
dec
inc
sub
sbbl
rorb
arpl
jg
cmp
mov
push
popf
xchg
lret
dec
insb
dec
mov
ss
and
shl
cmp
sarb
adc
xchg
cmpsl
inc
pop
mov
push
mov
test
add
push
outsl
sub
in
adc
pop
out
cwtl
add
xchg
pop
cmc
movsl
stc
push
jmp
pop
hlt
cmp
mov
les
int
repnz
jne
xchg
add
ja
cltd
arpl
mov
adc
and
in
in
jecxz
or
nop
out
in
mov
je
pop
loop
cld
jns
testl
cmp
test
and
push
dec
cltd
mov
icebp
es
std
jbe
popa
fildll
js
dec
inc
pop
cmp
out
mov
pushf
sbb
les
imul
int
sahf
adc
or
mov
add
push
jae
fsubl
cmp
lcall
fwait
inc
sbb
jle
xor
and
std
cmp
mov
mov
leave
cld
repnz
int
ljmp
repz
sbb
das
dec
inc
jg
pop
mov
ret
xchg
pop
scas
mov
dec
popl
rorl
pop
inc
cmp
lahf
repz
je
mov
push
lods
stos
xchg
std
pushf
push
mov
into
shr
pop
fildl
fwait
lods
cmpl
and
iret
lods
repz
andps
pusha
dec
adc
dec
add
sbb
dec
push
test
pop
jp
jns
or
in
mov
pop
xchg
mov
sbb
mov
mov
shrl
orl
arpl
lahf
imul
jns
ds
lcall
in
ljmp
adc
mov
mov
add
stos
ret
movsb
shlb
mov
add
je
adc
sbb
adc
add
enter
push
ret
sub
loop
adc
addr16
orl
roll
mov
lcall
adc
lret
clc
mov
gs
push
and
pop
cltd
and
call
lea
jo
sbb
xor
pop
sub
jl
push
js
cld
add
loope
popa
sub
push
pop
mov
dec
add
scas
sub
mov
push
insb
mov
daa
pop
fsts
repz
pop
mov
and
pop
test
or
stos
int3
pusha
aas
push
nop
movsb
cltd
push
cmpsl
pop
jp
jl
fcomps
cmp
jb
xlat
cmp
test
mov
mov
sahf
cmp
int
dec
mov
es
leave
pop
movsb
adc
and
cli
adc
pop
mov
cmpsb
adc
loope
mov
or
faddl
flds
xchg
mov
movsl
xchg
addr16
lret
mov
jne,pt
sbb
mov
aaa
fstpt
out
add
xchg
shll
pop
push
cld
pop
xor
loopne
push
lods
imul
rolb
pop
pusha
outsl
movsl
repnz
ret
int3
movsl
push
pop
xchg
cmp
fxch
cltd
jo
jne
rcrb
stos
cwtl
dec
pop
pop
mov
in
inc
lret
repz
insb
inc
sub
loope
inc
fs
push
xchg
leave
dec
mov
sub
and
mov
lret
add
scas
stc
xor
pop
jp
mov
call
jb
movsl
cld
and
lods
dec
mov
mov
cmp
xor
shrb
std
inc
out
iret
xchg
mov
xchg
add
cld
sub
les
mov
call
in
jne
sub
pop
jbe
mov
popf
aam
dec
test
pop
adc
ja
imul
stos
fcomip
fdivrl
adc
inc
out
std
data16
rcrb
lds
arpl
and
add
insb
lock
mov
add
loop
out
cli
out
push
dec
add
xor
jecxz
push
inc
sbb
xchg
and
mov
pop
leave
mov
add
mov
mov
icebp
ret
mov
imul
push
cmc
mov
ljmp
ss
pop
aam
fs
mov
mov
sbb
xchg
mov
shlb
daa
sbb
sbb
push
popf
shl
sub
clc
inc
jmp
repnz
jle
cmp
mov
push
pusha
push
and
dec
jmp
xchg
push
aaa
cmpsl
push
add
jp
adc
cmp
mov
cmpsb
jp
orl
lret
dec
mov
pavgb
mov
hlt
mov
jo
cld
insl
andl
aaa
dec
jl
inc
cmp
xchg
sti
and
add
shrl
sbb
sbb
insb
mov
decb
dec
inc
sub
adc
dec
sbb
pop
pop
push
cmpsl
dec
or
dec
inc
sahf
arpl
jae
inc
mov
aam
jne
scas
mov
cmp
lret
push
cmp
jb
jle
cli
lock
push
xchg
es
gs
inc
inc
add
insb
adc
nop
imul
mov
pop
aaa
lock
push
jae
les
dec
xor
test
push
pop
mov
jg
addb
jp
negb
push
clc
or
lret
mov
shlb
pop
push
sbb
dec
popf
mov
xchg
fcmovb
lea
sub
scas
ljmp
xor
or
inc
pop
sbb
dec
push
cmp
cwtl
sbb
lea
sbb
fisubs
inc
and
push
sbb
imul
dec
xchg
cli
in
lock
pop
add
lret
add
inc
rorl
neg
xchg
out
xchg
mov
loope
push
mov
jb
sub
scas
loope
aaa
js
mov
xchg
dec
iret
mov
das
cmp
stc
mov
mov
or
jbe
movsl
cmpsb
jno
imul
dec
lret
in
insl
mov
add
cwtl
xor
mov
adcb
add
stos
push
and
pop
clc
stos
inc
jmp
aas
mov
cwtl
fistpll
push
sbb
mov
mov
cld
cltd
ljmp
mov
aaa
dec
popf
cltd
out
pop
dec
in
dec
xor
dec
stc
sbb
push
gs
fcomps
arpl
mov
jnp
out
or
loop
and
dec
xor
out
fnstenv
cltd
mov
sbb
push
dec
loope
add
ficomps
aaa
inc
mov
mov
push
jge
into
sarl
dec
inc
dec
inc
jo
xchg
push
or
cli
lods
mov
int
xchg
add
jg
jle
jg
out
inc
stc
fs
js
fld
cmp
xor
mov
mov
imul
aaa
mov
cmpsl
mov
idivl
dec
mov
mov
adc
rclb
mov
in
fwait
stos
out
sbb
dec
inc
out
adc
inc
and
xchg
cld
lret
les
jne
mov
mov
inc
fs
adc
idivl
jp
aas
xchg
jge
cltd
popa
out
rcll
int3
jg
test
mov
mov
add
cmc
xlat
mov
sub
and
repz
mov
xor
imul
push
outsb
cmp
push
sbb
mov
lret
icebp
pop
shl
pop
mov
int3
mov
mov
jge
int3
lcall
iret
mov
xor
pop
imul
push
mov
mov
mov
push
mov
in
fstp
dec
mov
mov
push
jno
out
mov
std
pop
xor
xchg
mov
jo
sbb
mov
sub
and
and
ret
cmp
imulb
lret
and
mov
mov
xchg
mov
cmpsb
enter
cmpsb
out
data16
call
stc
lea
in
pop
adcb
mov
cmp
add
adc
jno
or
xchg
jl,pt
lahf
inc
mov
inc
pop
pop
add
shrb
jge
jmp
mov
xchg
js
rcl
cwtl
das
add
loopne
leave
int3
subl
xor
mov
stos
xchg
sub
fwait
push
or
ret
push
lcall
jg
add
jo
mov
lods
out
stos
es
fldt
push
pop
mov
jnp
jg
and
or
sbb
mov
ret
sub
push
test
js
xchg
jbe
xlat
lods
mov
dec
push
ficoml
cmp
dec
cmp
movsb
or
cli
lret
icebp
cmp
shrb
push
mov
clc
es
cmp
sbb
nop
mov
xchg
xchg
cli
stc
out
test
imul
dec
out
sbbb
sub
int
xchg
cs
lret
mov
jmp
mov
sub
lods
inc
dec
popf
enter
xor
stos
cmp
dec
or
push
jno
fcompl
sub
xchg
add
mov
dec
jle
push
xchg
push
or
adc
push
add
das
in
sub
ss
cmpsb
ljmp
into
mov
daa
xchg
xchg
xchg
pop
in
gs
xchg
sahf
and
hlt
pop
loopne
mov
in
lock
in
mov
cmp
pop
insb
adc
add
xchg
pop
mov
mov
subb
jl
sbb
out
adc
cmp
out
inc
popa
push
negb
ds
push
sbb
mov
mov
outsb
int3
dec
fsubr
xorl
popa
adc
shrb
icebp
out
sbb
lahf
std
jmp
testl
pop
mov
lcall
jno
pop
shlb
mov
sbb
xor
pop
js
in
xor
mov
dec
movsl
icebp
movsb
outsl
and
pushf
jae
lret
imul
cld
jmp
inc
or
mov
mov
jns
ffreep
sub
sahf
jmp
mov
aam
sbb
mov
xchg
add
jae
rcll
xchg
aas
and
fwait
lds
sub
mov
adc
adc
bnd
rcrb
enter
daa
push
jns
or
test
and
call
push
sbb
in
jns
mov
sbb
jns
aam
sub
int3
push
sbb
inc
mov
xorb
pop
ret
arpl
in
dec
or
outsb
lea
sub
sub
es
pop
and
test
scas
jecxz
clc
popf
outsb
daa
fs
dec
add
sarb
push
mov
cmp
andb
addr16
les
ljmp
sub
jp
mov
pop
popl
xchg
mov
addr16
mov
xorb
xor
scas
adc
mov
inc
and
lret
into
divl
dec
std
mov
pop
outsl
inc
test
rorw
pop
repz
ss
cmc
sub
hlt
sbb
jle
dec
inc
mov
loopne
pop
push
leave
ljmp
push
mov
rolb
lock
sub
cltd
test
sbb
dec
xchg
mov
cli
adc
cmpb
icebp
push
cmp
sub
stc
aas
sbb
roll
lea
mov
outsl
loopne
add
or
pop
les
dec
fcmove
push
sub
je
enter
or
hlt
pop
stos
subb
outsb
scas
lods
dec
sarb
mov
jle
jg
cld
jo
sbbb
mov
pop
lcall
jmp
shrb
popa
xor
xor
dec
hlt
jae
dec
adc
popa
fldl
xor
nop
mov
xor
stc
pop
test
mov
popa
xchg
inc
je
fisttps
dec
sbb
lds
aam
loopne
adc
mov
lret
fcoms
xchg
rorb
fidivrs
ret
and
xchg
pop
fisubrs
imul
jecxz
sbb
fwait
sbb
dec
push
loope
bound
call
xchg
loope
lcall
adc
xchg
sbb
xor
xor
int3
out
xorb
icebp
lds
insl
inc
xchg
scas
push
aam
pop
hlt
test
call
lods
fcomps
sbb
push
mov
mov
lret
lcall
ret
add
mov
cld
push
inc
insb
dec
sub
lea
mov
sbb
xchg
ds
dec
or
and
out
push
out
aad
mov
sbb
cmp
pop
iret
pop
dec
add
lret
add
jb
cmc
pusha
adc
sbb
sti
cmpb
jl
push
test
mov
sbb
imul
in
out
cmpl
fcomps
fwait
mov
cld
push
xchg
adc
lea
push
or
add
inc
cmp
int3
lock
push
and
test
sub
add
adc
jno
mull
lcall
mov
add
outsl
or
xchg
addr16
xchg
jp
dec
decl
lahf
pusha
lahf
sub
pushf
fsubp
sbbl
push
jmp
adc
push
or
iret
fwait
insl
cwtl
jge
pop
loop
mov
cmpsb
test
xor
mov
loopne
insl
xor
das
push
cmp
insl
jb
xor
jns
adc
push
aam
sbb
rep
scas
sbb
mov
jo
outsl
cmpsb
cmp
rcr
xchg
pop
les
xchg
dec
arpl
neg
sbb
inc
jcxz
cli
je
scas
xchg
jmp
sbb
push
jge
arpl
outsl
push
or
lock
adc
lahf
push
push
je
push
sub
js
mov
xchg
outsl
or
imul
inc
rcrl
outsb
inc
les
adc
adc
out
xor
sahf
jne
scas
jp
int
lcall
cmpsb
xchg
ds
or
loopne
push
loop
sub
pop
mov
add
mov
cmp
movsl
in
mov
stc
mov
gs
scas
aad
stos
mov
inc
cwtl
bound
sub
sub
xor
mov
sbb
or
test
testb
mov
cmp
inc
in
or
fcoml
pop
inc
pop
mov
mov
add
shll
lods
popa
arpl
in
sub
or
mov
mov
push
sti
mov
mov
adc
adc
adc
cmp
push
inc
cmpsl
in
in
mov
or
jno
outsl
xor
test
test
pop
mov
lods
mov
hlt
mov
cltd
iret
pop
fiaddl
mov
inc
xchg
mov
mov
cmpsb
pop
mov
dec
sar
out
cli
inc
add
inc
repnz
popf
mov
rolb
jle
mov
int3
in
push
out
sahf
xor
sbb
arpl
fcom
faddp
insb
test
movb
mov
decb
arpl
inc
lock
movsb
ljmp
push
cli
xchg
int3
mov
mov
out
jmp
movups
fs
add
hlt
dec
test
or
inc
in
test
pop
mov
pushf
pop
add
fs
pop
add
sub
test
cld
cltd
lcall
rcl
sub
ficompl
into
test
push
lea
outsl
jb
nop
hlt
cmp
mov
cmp
fs
and
cmp
dec
and
test
xor
loopne
pop
repnz
dec
hlt
popa
cld
xchg
je
jne
repnz
pop
arpl
aas
push
and
or
inc
xchg
jns
sbb
sub
pop
ss
add
sbb
push
adc
addl
lods
cmp
xchg
into
pop
inc
jb
cmp
jbe
cmp
in
cmp
push
dec
into
les
data16
cwtl
outsl
pop
sti
and
aaa
test
cmp
jnp
push
cmp
cmp
inc
ficompl
pop
jle
fisubl
push
ds
imul
sub
jp
stos
jle
cmp
sti
scas
push
jae
je
jg
fildll
fnsave
push
int3
cmp
adc
addr16
push
sub
mov
mov
pop
lahf
aad
test
leave
fiaddl
mov
sbb
int
cmpsb
out
icebp
ds
jb
lea
pop
adc
pushf
jecxz
dec
insb
sti
mov
jnp
ss
das
add
inc
fisttpll
sbb
pop
les
outsb
fsubs
insl
pand
inc
cmp
addb
jge
daa
fs
sub
clc
shll
fcompl
jge
add
jge
cmp
jbe
and
dec
inc
stc
rorb
xchg
mov
dec
mov
mov
scas
pop
test
mov
xor
sbb
xor
shll
popa
jmp
jne
push
repz
testl
inc
mov
jg
inc
mov
jp
lret
mov
xor
add
dec
dec
lods
mov
add
sti
pop
cltd
mov
pop
mov
imul
xchg
outsl
in
inc
jo
fwait
push
test
and
cmp
loopne
ljmp
insl
scas
in
xchg
dec
addr16
xchg
insl
mov
in
and
add
shr
jae
and
aad
mov
inc
pop
pop
adcb
add
pop
ss
or
add
out
mov
inc
addl
ljmp
inc
and
repnz
rcr
dec
clc
xor
xor
or
sbb
cmpsb
stc
aaa
cmp
adc
sub
jno
adc
mov
lea
je
rorl
call
shll
xchg
popf
cltd
and
fs
push
fwait
movsb
xchg
test
jno
pushf
mov
stos
outsl
inc
mov
mov
or
leave
ffree
xchg
pop
sbb
aad
popf
xchg
sub
ljmp
mov
mov
mov
cmpl
leave
mov
mov
hlt
rclb
scas
cld
outsl
sub
mov
xor
inc
xchg
mov
pop
aaa
mov
imul
fmuls
and
mull
ljmp
adc
rorl
in
cmp
sbb
push
lcall
idivb
adc
or
mov
pusha
les
add
inc
xor
cmp
and
lret
cs
add
pop
imull
jb
jns
mov
push
jmp
sub
fwait
dec
and
sbb
sub
mov
stc
push
jae
mov
pop
xor
inc
jns
mov
sbb
mov
xchg
insb
gs
push
das
jecxz
and
loop
nop
pop
sub
adc
ret
or
stos
dec
jb
cmp
insl
popf
xchg
adc
pusha
cmc
jge
mov
fimuls
nop
ss
jmp
xchg
and
and
imul
and
subl
xor
cmp
sbb
add
out
cmp
test
push
pop
add
mov
gs
adc
std
mov
icebp
out
mov
adc
pop
icebp
mov
mov
loope
mov
or
mov
pushfw
xor
movsl
iret
out
and
cmp
hlt
xchg
push
cmp
fsubrl
ja
stos
push
es
out
mov
cmc
jmp
mov
ret
fstpl
cmp
or
aam
stc
data16
int
mov
xor
mov
test
dec
add
mov
mov
push
or
icebp
inc
or
jg
mov
mov
js
insb
ficompl
sbb
add
fwait
aaa
cmpsl
hlt
xchg
mov
inc
in
xacquire
lcall
cwtl
jnp
popf
ljmp
nop
inc
hlt
pop
fisubs
or
lock
les
cld
nop
dec
jnp
cmp
data16
inc
cmpb
loopne
xor
xchg
loope
add
dec
or
sahf
ja
pusha
cmp
mov
and
pop
pop
dec
aaa
or
in
insl
repz
and
push
pop
xchg
scas
push
xor
mov
idivl
fistpll
mov
std
movsl
or
arpl
in
call
mov
std
push
jmp
loopne
mov
clc
ficoml
jmp
ds
pop
popf
xchg
jl
fwait
or
cwtl
comiss
sub
fidivrs
inc
jb
fbstp
mov
cmp
cli
add
adc
mov
ret
fcmovne
inc
xor
fistpll
jp
test
lret
pop
add
test
add
rorl
sahf
outsl
inc
imul
xchg
imul
lcall
lret
and
mov
xchg
cmp
lods
call
scas
add
adc
in
sbb
xchg
stos
int3
shl
pop
sarb
imul
shr
push
mov
adc
jle
sub
mov
sub
movsl
ja
in
ret
xor
int3
icebp
in
mov
dec
lret
push
or
inc
stos
stos
mov
fnstsw
out
mov
pop
mov
dec
out
adc
pop
jg
sub
or
sub
xor
mov
inc
and
int3
ja
aad
xorb
fst
ds
divl
adc
test
sbb
mov
cltd
mov
cmp
inc
push
mov
shll
bound
movsb
jb
shll
pop
sbb
daa
push
lods
push
out
adc
or
dec
enter
fsubl
movsb
lods
inc
push
iret
add
mov
mov
jp
sbb
fdivs
jne
bound
dec
jne
sbb
inc
pusha
dec
repnz
sbb
movsl
into
sbb
je
push
and
pop
in
mov
add
xchg
mov
sahf
jge
push
out
cmp
sbb
jae
mov
xor
push
cwtl
mov
sti
out
lahf
sti
jmp
cmp
adc
lret
jnp
jo
xor
lahf
cltd
std
sahf
push
repz
push
sahf
lret
ja
outsb
and
xor
mov
add
pop
in
and
repz
jbe
fprem
out
push
pop
push
mov
pop
in
in
test
cli
sbb
fs
push
cmp
xchg
mov
cwtl
ljmp
sbb
into
lret
ljmp
lds
mov
fldl
arpl
jo
xor
inc
scas
adc
sub
and
cmc
lods
into
jb
inc
ljmp
adc
jbe
fdivrs
das
and
cmpsb
rcrl
lods
jp
fs
adc
lds
mov
jg
test
mov
jns
xchg
push
xor
cltd
cmp
jns
arpl
dec
mov
rorb
and
divl
or
clc
sub
jno
mov
popa
mov
ss
inc
test
scas
jmp
dec
add
jmp
mov
lds
filds
out
outsl
pop
sub
mov
sub
leave
lods
lods
lods
sbb
jae
adc
fisttpl
rcr
jg
jno
mov
ljmp
insb
cmp
rcrl
fnsave
outsb
push
or
stos
das
aad
in
popl
xchg
je
ja
fsubrl
pop
test
iret
push
pop
out
mov
rorl
aas
pop
loop
loopne
fimull
lcall
dec
test
icebp
mov
lods
mov
movups
das
sub
pop
mov
and
inc
mov
aaa
insb
cs
push
mov
cmpsl
jmp
xor
lock
push
xor
ljmp
push
js
push
and
pop
dec
hlt
or
sub
adcl
fisttpl
pop
and
cmc
sub
mov
fs
jo
mov
adc
and
cmp
sbb
adc
and
jae
mov
pop
fs
in
pop
add
mov
insl
shrb
into
ljmp
aam
push
popa
xor
loopne
xchg
leave
jnp
xchg
cmp
sarl
ret
lock
jg
sub
xchg
and
pop
dec
xor
nop
loopne
xchg
cmp
scas
xlat
jns
pop
in
xchg
xchg
adc
icebp
icebp
mov
stc
and
sub
sbb
mov
xchg
pmulhuw
xchg
out
add
inc
sub
inc
lock
lea
stc
xor
test
xor
frstor
push
xchg
jmp
mov
sti
cltd
pop
push
dec
cmp
sub
mov
pushf
or
inc
cltd
pop
jbe
jmp
pop
sbb
push
jp
adc
xchg
dec
lret
sahf
roll
mov
push
shll
cltd
rolb
in
inc
mov
test
bound
ljmp
lods
ss
jae
adc
sbb
divl
mov
aam
clc
xchg
sbb
ja
jo
cs
or
and
mov
js
cmp
in
sub
xor
hlt
stos
mov
adc
mov
jg
jmp
mov
pop
pop
dec
mov
cmp
mov
daa
pop
imul
xor
mov
or
xchg
je
addr16
pusha
pop
mov
std
cmp
mov
and
ja
lret
sbb
jbe
test
fwait
dec
pop
popf
nop
lret
cmp
jnp
sub
lea
mov
mov
cmpsb
inc
loopne
sub
loope
pop
push
cmp
mov
mov
shrl
arpl
mov
push
daa
dec
push
cmp
mov
repz
push
popa
fwait
adc
testb
sbbb
dec
mov
mov
out
popf
cmp
into
fwait
xlat
cmp
push
mov
orl
adc
ret
ja
cmp
cmc
cmp
cmp
jge
mov
subps
sub
cwtl
add
bnd
and
mov
mov
cmp
arpl
arpl
add
jnp
pusha
lahf
stc
idivl
adc
cmp
pop
xlat
cltd
call
jno
std
sahf
cmc
popa
enter
test
pop
sub
cmc
jb
dec
fisubl
sub
inc
and
inc
cmp
scas
in
outsb
mov
inc
in
lahf
inc
add
arpl
pushf
cmc
jb
in
jno
sub
out
daa
sbb
data16
mov
inc
es
lcall
hlt
mov
cmpsl
cmp
push
or
in
imull
mov
xor
xor
movsb
pop
lcall
xchg
gs
sbb
push
add
inc
mov
in
dec
mov
inc
mov
enter
xchg
mov
imul
mov
popa
shll
mov
sbb
jg
or
test
or
add
insl
js
in
jae
fdivrp
pop
aam
cmpb
repnz
or
jb
loopne
push
es
mov
ljmp
xchg
addr16
aaa
ds
or
insl
dec
pop
or
inc
xchg
jl
or
jecxz
jnp
mov
pop
rcr
les
dec
int
pop
push
jno
popf
mov
push
sub
dec
inc
mov
ficoml
into
pop
repz
pop
mov
mov
dec
inc
ja
jp
dec
adc
sub
roll
sub
mov
cmp
clc
jnp
dec
gs
push
jno
mov
repz
dec
test
xor
iret
insb
jge
or
or
pusha
push
popf
push
mov
addb
cmp
add
xor
pusha
jle
ret
ja
xchg
enter
lret
inc
sub
ds
fisubrs
cld
push
les
adc
cmp
aas
mov
xor
mov
sbb
add
ds
xchg
fsts
data16
or
fnsave
mov
shlb
lock
lret
int
cli
mov
mov
popa
data16
scas
mov
rcrb
xor
leave
mov
adc
sarb
pop
jno
push
ror
lret
cmp
in
push
xor
and
add
scas
mov
mov
push
mov
dec
in
sub
int
cmp
xor
sbbb
or
mov
loope
inc
jno
ljmp
in
xchg
lret
push
fbld
outsl
in
jg
das
sar
dec
fists
popf
pop
dec
movsl
stc
sbb
mov
out
jle
adc
dec
push
cmp
add
leave
lods
sbb
sahf
mov
jbe
mov
cltd
pushf
inc
repnz
xor
imul
pop
cli
sbb
inc
fidivl
pop
add
xchg
pop
shrl
push
cs
jo
add
and
sbb
mov
repnz
scas
jnp
cwtl
rcrl
ret
dec
push
jge
xor
leave
fidivl
ret
fistpl
push
push
jge
mov
mov
ret
sub
int3
cmpsb
xlat
nop
dec
fwait
les
test
insl
aam
dec
rclb
xchg
loopne
dec
pop
test
into
sbb
jecxz
fsubs
jo
aam
into
ss
fs
cld
cmp
fmuls
stos
add
rolb
sbb
cld
loope
in
sbb
addr16
inc
enter
cmp
std
push
lds
fsubrs
or
movsl
and
in
lods
push
stos
mov
mov
out
xor
shrb
popa
add
cli
je
push
pop
push
incb
rcrb
push
out
std
imulb
addr16
cltd
test
xchg
mov
push
leave
scas
mov
adc
or
add
fucomi
sbb
shll
pop
cmovns
mov
sbb
dec
lods
sub
popa
sbb
cs
mov
pop
jns
dec
or
or
push
mov
lret
mov
stos
testb
orl
jnp
sbb
loope
rcll
lock
cli
fistpl
mov
mov
dec
adc
sub
add
pop
mov
sahf
mov
cmp
xchg
scas
sbb
clc
ss
pop
adc
pop
pop
hlt
das
or
es
cs
pop
hlt
call
sub
in
loopne
imul
in
lret
dec
and
mov
pop
andb
je
roll
ljmp
ret
inc
pop
mov
push
shlb
mov
data16
nop
and
xor
loop
jge
std
mov
mov
imul
jae
addr16
sahf
mov
add
dec
xchg
scas
jecxz
xor
popa
mov
mov
fucom
rorl
in
push
xchg
mov
cwtl
sub
sub
fwait
jmp
inc
aas
sbb
xchg
sbb
xor
daa
push
addr16
jmp
orb
movsl
or
cmp
mov
add
scas
sahf
and
push
xor
sarl
ret
fwait
adc
pop
lea
xchg
lcall
sbb
pushf
scas
adc
jo
ret
ffreep
inc
lcall
xchg
loop
pop
fisttpl
inc
xchg
daa
adc
mov
frstor
lods
bound
mov
dec
or
lea
scas
or
xorb
ret
jmp
fistpll
imul
gs
pop
pop
mov
aaa
xchg
ja
inc
mov
add
test
and
xchg
xor
lods
andb
sub
jecxz
jo
mov
xor
rcrb
jge
xor
mov
test
xor
add
out
and
scas
addb
mov
dec
xchg
inc
or
fistpll
mov
mov
or
jmp
loope
fdivrl
mov
das
imul
rcr
dec
xchg
ss
and
ret
pushf
push
and
arpl
jmp
dec
jo
or
jmp
sbb
push
test
das
and
lods
sbbb
dec
in
icebp
movsb
dec
xchg
out
inc
cld
into
mov
stos
add
xor
inc
lcall
in
mov
cmp
in
dec
aad
xlat
stos
je
xchg
xchg
loopne
cmp
pop
sub
mov
or
push
lods
cmpsb
inc
out
repz
jg
adc
inc
push
push
movsb
mov
data16
es
or
ja
inc
xor
in
dec
push
push
and
testl
das
lret
imul
xor
mov
int
call
out
mov
inc
std
out
inc
test
mov
mov
mov
mov
lds
movsl
pop
cwtl
cmpb
jns
data16
mov
sahf
int
push
mov
in
std
movsl
cwtl
or
dec
adc
les
xor
push
roll
nop
push
mov
sub
jge
xchg
pop
push
mov
mov
xorb
cwtl
mov
jbe
int
or
xor
test
mov
mov
lds
mov
push
xchg
fldl
push
fwait
es
das
mov
sbb
cld
rclb
in
xchg
pop
adc
out
cmp
gs
lahf
adc
push
push
jnp
mov
jb
loope
cmp
jns
and
adc
sub
add
daa
into
negl
cli
adc
sub
mov
fldenv
sub
mov
adc
adc
inc
adc
in
jns
cs
pop
aas
out
mov
inc
jge
adc
test
incl
push
jns
out
addr16
cmc
add
pop
dec
adc
push
jns
jne
xchg
dec
push
cs
mov
adc
call
push
roll
xor
mov
pop
in
cmp
mov
or
cld
loop
ja
mov
gs
push
mov
jle
int
stos
mov
cmp
clc
push
push
sbb
pop
mov
push
push
inc
dec
bnd
push
js
cmp
pop
roll
out
dec
jl
iret
dec
xchg
jbe
xchg
decl
mov
bound
pop
mov
fisttpll
out
in
mov
xor
or
les
nop
insb
in
or
mov
std
popa
cli
or
push
pop
ret
xor
cmp
jno
icebp
std
inc
mov
ja
subl
pop
jns
jmp
aad
cmp
pop
inc
pusha
push
pop
mov
sahf
fwait
mov
sub
sahf
xchg
mov
popf
dec
leave
cmp
pop
dec
pop
push
aad
scas
cld
xchg
sub
mov
test
mov
or
sub
sbb
imul
es
fs
in
leave
pop
movsb
push
jmp
out
mov
sbb
xor
mov
addr16
xchg
insb
sbb
lock
inc
ds
jge
jne
adc
mov
mov
loope
inc
and
ljmp
or
mov
movsl
mov
aam
push
jmp
repz
sbb
es
dec
daa
inc
pop
fldl
jb
loope
repnz
fisubrl
mov
pop
sbb
repnz
xchg
xor
pop
vmwrite
or
xchg
int
jne
pushf
pushf
popf
imul
rcl
nop
cmpsl
outsl
and
sub
mov
lret
lret
xor
xchg
aas
jae
jne
lcall
mov
pop
sub
fdivs
lret
ficomps
call
in
out
xchg
mov
sbb
push
incl
jne
mov
xor
shrb
into
clc
data16
js
in
stos
aad
insb
scas
or
dec
psrad
push
and
daa
shrb
jge
notl
lods
push
mov
mov
das
fcoms
popf
daa
cli
movsb
lahf
loope
pop
mov
fs
inc
add
sbb
in
movl
dec
adc
and
ja
lods
sub
std
enter
pop
in
clc
call
aas
sbb
xchg
cmp
mov
mov
enter
mov
mov
test
imul
add
and
pop
fucomi
dec
cmp
lahf
mov
lret
cmpsl
sbb
iret
into
inc
dec
test
fcompl
mov
mov
aam
addr16
push
mov
xchg
pop
xor
add
nop
cmp
hlt
loop
inc
unpcklps
push
mov
sub
jg
jbe
jb
push
mov
ljmp
add
std
insb
sub
adc
push
ja
mov
pop
xor
std
arpl
in
cmp
sbb
test
cmp
testb
fisttps
cwtl
inc
inc
and
inc
lock
mov
adc
xchg
mov
mov
inc
cmpl
in
repz
lcall
mov
loop
movsl
xchg
cmc
cld
js
int3
mov
insl
cmpsl
test
mov
call
xchg
fldcw
clc
lret
lds
mov
icebp
fwait
lock
jns
sub
test
mov
rclb
cmp
scas
rcrb
adc
xchg
stos
pop
sbb
mov
cmp
in
or
sti
cmp
movsb
xchg
mov
sbb
ucomiss
xchg
add
mov
adc
cmp
loop
and
cwtl
jb
mov
jp
and
cli
push
pop
push
cmp
fcom
mov
pusha
xor
gs
not
bound
cmovle
jecxz
rcrb
cmp
mov
cmp
dec
pop
pusha
xchg
jns
fadd
xor
jne
or
daa
mov
icebp
ljmp
and
mov
mov
cmp
iret
mov
push
fwait
adc
xchg
xchg
sbb
jecxz,pn
sbb
jnp
shlb
jne
pusha
scas
add
mov
xor
pop
cmp
mov
repz
xchg
jne
adc
aam
and
test
popf
adc
sub
jne
lcall
vphaddubw
lds
ret
aas
sbb
jne
aad
sbb
xor
scas
inc
aam
dec
push
rcrb
cwtl
cmp
inc
jno
mov
mov
or
cmp
adc
mov
lds
lcall
in
jne
mov
xor
aam
cmp
mov
dec
push
xchg
add
cmp
mov
scas
jbe
and
rol
lods
out
jb
adc
loop
push
cmp
popa
aad
popw
xchg
rolb
sbb
ljmp
mov
mov
xor
or
and
lea
jae
jnp
mov
inc
cltd
inc
mov
dec
jnp
test
pop
or
call
bound
sub
adc
jo
add
data16
loopne
daa
cmc
push
icebp
sub
push
sub
xor
dec
mov
xor
aad
sbb
lahf
ljmp
dec
push
xchg
dec
jl
ds
inc
flds
xchg
clc
lods
daa
lock
stc
push
pop
addr16
ljmp
loope
add
mov
les
mov
or
imul
dec
ja
int
loop
push
iret
sbb
jle
jmp
add
into
xchg
lods
cltd
pop
xor
outsl
mov
push
adc
pop
arpl
lods
pop
shrb
inc
sbb
jbe
or
scas
push
push
jmp
movsl
notb
mov
inc
and
mov
pop
xchg
jle
aad
out
cmc
xchg
push
stc
orl
mov
pop
std
sahf
inc
xor
add
sbb
xor
jge
sbbl
adc
push
aas
arpl
test
scas
in
decb
sub
dec
jo
mov
in
int3
mov
lcall
push
mov
loopne
out
pop
xor
fisttpl
pop
push
aas
pop
scas
es
test
xchg
cmp
jmp
lock
xor
idivl
mov
ljmp
lock
cli
dec
cmp
cmpb
movsb
imul
lea
stos
mov
pop
sahf
pop
pop
js
cltd
repnz
cltd
cmpb
stos
jne
pop
mov
mov
jp
jne
leave
cmp
dec
clc
cmp
cli
lahf
mov
mov
stos
andl
add
lcall
adc
mov
repnz
dec
jns
cwtl
xchg
in
aaa
test
dec
rorl
fisttpl
mov
mov
ja
and
xor
ljmp
les
mov
mov
dec
das
loope
inc
push
les
xchg
inc
mov
jge
push
cmp
mov
setl
mov
pop
loopne
shrb
add
inc
cmp
inc
fs
pop
fistpl
loopne
fcomps
pop
icebp
mov
mov
adc
ljmp
sbb
push
push
mov
cltd
xchg
fwait
sub
push
mov
add
fwait
mov
pop
mov
ss
inc
aas
daa
loop
fadds
or
sub
mov
daa
lods
ds
test
push
arpl
hlt
fistpl
adc
push
or
jl
xor
jp
mov
mov
dec
mov
cmpb
and
imulb
orb
sbb
jns
andb
lock
cltd
movsl
dec
sub
sbb
and
mov
adc
xchg
adc
xchg
cmp
repz
push
xor
outsb
or
sarb
fistl
scas
push
loopne
mov
jnp
mov
in
lds
outsb
insl
pop
pop
in
sahf
or
jno
mov
cmp
jge
pop
aas
movsl
rcrb
hlt
or
cwtl
insb
and
push
or
jg
rcrb
fldenv
push
mov
inc
jbe
dec
jmp
cmp
loopne
enter
dec
aad
aaa
insl
rcll
adc
push
mov
mov
push
mov
js
cmp
jg
ficoml
jo
test
jae,pn
inc
or
add
xchg
imul
inc
clc
pop
mov
sbb
pop
mov
popa
sub
cmc
cmpsl
ret
lods
mov
neg
cmpsb
adc
decl
pusha
idivb
mov
hlt
or
mov
enter
jmp
nop
lret
cmc
dec
or
xor
hlt
jg
pop
loope
jp
lahf
push
or
adc
adc
jge
jg
pop
xchg
mov
in
insl
cmp
mov
pop
loop
loopne
push
push
and
add
ret
lds
and
dec
cmp
dec
pop
scas
lea
cmp
gs
out
gs
fiadds
cs
jecxz
arpl
dec
subl
cmpb
bound
jb
ja
dec
jnp
mov
cmp
int3
loop
push
cmp
xor
cltd
dec
enter
andb
lret
lock
push
out
add
or
adc
jo
popf
gs
push
lock
pop
rorl
jmp
adc
sub
int
inc
jo
jae
loop
pop
movsb
inc
test
call
sub
xor
in
xor
xchg
sbb
lods
cmp
push
jmp
cmp
push
fisttpl
mov
aaa
mov
push
inc
cwtl
xor
lret
cmp
mov
xor
add
out
pop
fistps
dec
stos
mov
push
fidivrl
aas
lret
pop
xlat
int
mov
and
mov
push
outsb
clc
and
int3
sbb
fisttpl
lret
add
std
mov
fs
lock
cltd
pushf
enter
hlt
cmp
int
leave
push
jge
les
dec
dec
fsubrs
mov
daa
test
adc
adc
jle
rcr
std
adc
fisubl
inc
test
testb
sahf
sbb
push
clc
mov
xchg
mov
mov
jp
jns
add
adc
fidivrl
es
inc
das
sarb
jg
jmp
sub
hlt
je
push
ret
repnz
inc
iret
inc
int3
jb
inc
xor
and
adcl
pop
cltd
mov
insl
les
fnsave
push
dec
fstpt
xor
bound
pusha
mov
xadd
movlps
nop
daa
int
fldl
js
clc
ljmp
ss
fimull
add
mov
ret
fiaddl
jg
mov
dec
inc
pop
nop
cmc
add
scas
sahf
mov
and
lcall
stos
cmp
scas
pop
cltd
inc
sbb
mov
push
iret
mov
xchg
out
adc
pop
mov
push
rcll
lds
cltd
add
hlt
test
test
dec
scas
mov
sbb
sub
jo
dec
int3
pop
push
mov
loop
cld
and
pop
imul
inc
dec
pushf
push
mov
out
lock
sbb
into
jle
jmp
inc
sahf
shlb
mov
cmp
test
cmp
pop
and
scas
loop
sahf
jecxz
in
ljmp
repz
cmp
test
call
loop
inc
jmp
pop
lret
mov
mov
ss
dec
xchg
xchg
and
dec
cmpsl
add
loop
aad
mov
or
das
das
les
push
mov
ds
push
hlt
ret
pusha
bound
addl
add
dec
jns
jo
jle
dec
xor
jl
inc
mov
imull
cld
xchg
mov
add
jl
pop
mov
jl
cmp
cmpsl
xchg
xor
ds
jg
hlt
mov
mov
pushf
aad
adc
pop
frstor
insb
jnp
stc
test
out
cltd
inc
mov
dec
mov
out
dec
add
sub
data16
jecxz
insb
jge
lcall
pop
mov
es
inc
adc
mov
fisubl
jb
je
xorl
imul
xchg
add
mov
lods
lret
outsl
sbb
push
in
roll
pop
mov
xor
push
aaa
push
cmp
add
loopne
popf
mov
fdivs
movsb
mov
cmp
pushf
stos
mov
int3
jb
add
gs
in
leave
and
jns
cmpsb
xchg
rcl
push
test
andl
push
xchg
dec
pop
sub
cmp
sub
das
sbb
xchg
push
lods
mov
inc
mov
ss
neg
std
sbb
mov
lock
loop
in
sbb
mov
push
sbb
test
ja
mov
sub
stos
icebp
scas
dec
mov
scas
in
rcrl
nop
leave
or
dec
or
std
fstps
jae
inc
std
mov
pop
into
mov
filds
add
cmp
jp
pop
sbb
scas
in
cmp
lock
frstor
xchg
outsl
int
mov
push
popf
jmp
bound
inc
shrl
dec
mov
inc
inc
add
roll
pop
fnstenv
jmp
xchg
xor
xlat
fwait
pop
inc
jae
shll
sbb
arpl
jns
mov
pop
out
cwtl
jbe
xchg
ss
cmp
scas
sti
and
push
mov
xchg
int
jmp
cmpl
mov
mov
dec
jl
fidivrl
adc
inc
inc
push
jns
dec
jmp
daa
push
rorl
sti
fimull
int
lret
fisubrs
setle
movsb
push
aam
js
fdivr
cmpsb
xchg
sub
xlat
pop
mov
es
xchg
xor
les
mov
mov
sbb
mov
cmpb
push
enter
sbb
mov
sbb
daa
mov
std
mov
xchg
cld
cmp
std
nop
call
sahf
lods
pop
jo
mov
push
cmpsb
xchg
sbb
repz
cmpsb
xchg
mov
sub
out
mov
sub
leave
add
mov
popf
sbb
cmpsl
jo
xor
adc
inc
and
es
shl
pop
out
push
add
lock
popf
mov
lret
in
test
jp
mov
aad
fisttps
mov
xlat
sub
aam
pop
stos
pusha
push
aas
xchg
pop
jg
in
int3
in
mov
sub
sub
aam
mov
es
loope
aam
bnd
pushf
outsb
cmpsl
or
pop
pusha
dec
mov
test
fstpl
add
aaa
xchg
mov
push
fs
ss
mov
push
sbb
addr16
mov
lods
rorl
xchg
jmp
push
popa
test
iret
mov
xchg
sarb
pop
cmp
sub
scas
xor
lock
xlat
addr16
sbb
lcall
enter
add
cmpl
cli
xchg
pop
sbb
nop
jge
cmpsb
stos
push
xchg
add
cmp
push
xchg
jmp
aam
cmp
xchg
sub
xor
aad
sahf
mov
add
xchg
ljmp
xchg
ds
ficoms
or
daa
mov
add
shrb
pushl
push
dec
or
push
xchg
push
push
enter
test
jge
jmp
fildll
gs
pop
dec
xor
pop
pop
jno
jecxz
fsubrl
in
mov
jno
aaa
mov
inc
fcompl
sbb
mov
and
or
or
jge
mov
mov
cmc
out
imul
int3
divl
clc
mov
mov
adc
in
xchg
mov
insl
testl
add
mov
adc
cmc
and
repz
inc
jne
lret
lock
jne
or
dec
in
test
stos
adc
or
sbb
imul
outsb
shrb
dec
enter
sbb
nop
les
hlt
push
cmp
jno
sub
mov
lea
inc
das
sahf
popa
cmp
cmpsb
fsubl
dec
jno
cmp
int
mov
sub
scas
out
aas
jle
cltd
jp
repz
inc
jnp
inc
call
push
out
ret
add
das
paddw
lods
sarb
push
clc
mov
pop
je
inc
pop
jne
out
or
dec
dec
dec
das
xchg
sahf
rol
into
dec
push
leave
nop
es
lret
icebp
movsb
adc
pop
cmp
pop
pop
adc
sub
add
lods
fwait
movsl
pop
mov
inc
into
and
mov
inc
pop
outsb
and
fisttps
fs
adc
adc
ret
aaa
std
fnsave
push
addr16
repz
fsts
movsb
sub
jge
add
xor
inc
gs
into
js
imul
xchg
sub
orb
pop
mull
push
or
jle
xchg
mov
add
out
jae
aas
or
adc
adc
jae
fsubs
inc
dec
les
pop
js
mov
dec
scas
js
repnz
rolb
push
js
jg
push
inc
push
in
int
roll
test
lds
iret
mov
fwait
adcb
push
je
sbb
lods
fnstcw
ss
rol
mov
sbb
mov
sbb
shlb
adc
jle
xchg
daa
rclb
pushf
fbld
popa
mov
lock
lods
cmp
push
insb
scas
iret
rcrl
mov
and
mov
fdivrl
jae
inc
push
aaa
int
and
fdivrl
fwait
jnp
ds
repz
jp
cli
xchg
icebp
mov
movsb
jne
or
mov
push
push
dec
xor
jg
xor
lcall
push
arpl
stc
xchg
mov
inc
test
xchg
jb
jb
pusha
jb
outsb
push
pop
test
lea
inc
lods
out
imul
aaa
pop
or
out
mov
mov
cli
lock
das
adc
mov
out
out
cwtl
add
pop
inc
gs
idivl
dec
scas
jecxz
push
enter
or
cmp
leave
ret
test
in
int
ds
mov
pop
pop
ja
nop
dec
mov
movsb
pop
icebp
sarl
xchg
inc
and
hlt
arpl
push
pop
arpl
jbe
or
scas
aam
xor
sbb
pop
lret
and
imul
mov
push
lahf
jecxz
xor
jno
mov
int
add
je
rcr
aaa
push
fsubr
mov
in
fmul
movsb
cli
cmc
decl
and
stos
pop
inc
xor
neg
scas
int3
fs
pop
shll
xor
mov
xchg
pop
jecxz
leave
scas
cwtl
es
xor
adcl
repnz
popf
or
bound
mov
aam
loopne
xor
jge
in
pop
lcall
pop
mov
xchg
imul
scas
mov
fucomi
add
repz
push
jp
pushl
sub
sbbb
or
pop
jnp
call
imul
rolb
xorb
sub
stos
data16
jp
jp
leave
lods
jne
movl
movsl
xor
mov
arpl
ljmp
pushf
cs
xchg
scas
fs
push
out
jp
in
scas
std
das
mov
pop
fwait
sub
mov
and
aas
popa
inc
scas
mov
cmc
xchg
push
push
xchg
mov
gs
roll
mov
sbb
arpl
mov
mov
or
inc
data16
lods
and
ljmp
aad
mov
iret
mov
cmp
pop
call
test
add
jb
push
movsl
stos
es
cs
clc
cmpsl
push
ss
dec
scas
cli
cmp
add
cmp
add
push
pusha
push
push
lret
daa
adcl
push
xchg
sub
nop
adcl
add
lcall
stc
pop
jmp
fnstcw
test
dec
inc
mov
mov
jge
mov
lret
pusha
ja
or
sbb
ja
sub
aaa
jmp
arpl
mov
roll
mov
dec
icebp
push
imulb
test
push
dec
scas
scas
mov
push
ss
or
lock
mov
mov
repz
loop
lcall
imul
movsb
mov
jmp
bound
popf
fwait
arpl
lcall
lret
mov
mov
or
and
jae
sbb
notb
push
icebp
mov
sbb
lods
pop
lret
scas
pop
jge
mov
or
in
dec
jbe
mov
mov
mov
je
add
mov
inc
sbb
mov
pusha
dec
rol
or
stos
or
adc
pop
mov
mov
test
adc
cmpsl
mov
popf
pop
pop
xor
adc
in
stos
cmp
push
mov
shll
cmp
pop
push
mov
mov
sub
mov
push
sub
cmpl
push
repnz
icebp
adc
adc
rcrl
xor
lret
add
adc
iret
cli
xchg
add
mov
in
out
xchg
push
mov
mov
push
scas
inc
and
push
xor
and
repz
cmp
jmp
in
mov
out
push
cld
decl
dec
jge
pop
es
xchg
jmp
popa
cmp
popf
stc
incl
int
mov
inc
dec
cmp
dec
mov
mov
repnz
enter
push
fldl2t
cmp
pop
jg
or
in
movsb
mov
dec
dec
sub
in
fidivs
mov
out
jb
and
mov
sbbb
dec
cli
mov
aad
lret
scas
fs
sub
mov
bound
nop
dec
fs
imul
push
pxor
ljmp
mov
mov
cwtl
into
mov
ja
enter
push
mov
shrb
pop
add
push
test
push
xor
xor
mov
xchg
and
push
imul
cltd
cmp
pop
mov
imul
adc
mov
lret
dec
dec
rcll
pop
insl
jo
cmp
sub
mov
sub
mov
repz
in
and
mov
outsl
orb
aam
mov
sub
fbld
pop
jge
nop
cmp
push
and
pop
xorb
clc
popf
xchg
dec
rcll
pop
mov
pop
fs
cmp
jno
ficoms
cli
fadds
xor
icebp
cmp
pop
into
push
std
dec
fsubs
mov
lcall
repz
sarb
sbb
lcall
xor
adc
vcmpps
sub
addr16
shlb
pop
jp
fucomi
shrl
push
mov
cmp
popf
inc
rcrb
dec
repnz
mov
das
add
cmp
incl
cmp
imul
aas
pop
pop
cmc
inc
jnp
test
sbb
xchg
adc
mov
xchg
xor
out
hlt
inc
ror
jno
dec
adc
movsl
out
arpl
daa
repz
pop
and
push
lea
das
rcl
sbb
sbb
pop
jmp
scas
sbb
cmpsb
pop
xchg
scas
add
mov
pop
mov
aam
lahf
cli
push
sub
shr
js
and
leave
jno
jmp
adc
pop
cmp
xchg
cmpsb
test
dec
xor
or
js
ljmp
popf
sbb
lahf
mov
xor
iret
lods
movsl
rcrl
popf
mov
push
mov
cmp
stos
xchg
push
sbb
jmp
push
pop
xor
push
mov
fwait
icebp
sub
push
xchg
daa
lock
xor
inc
adc
out
pop
xchg
cmp
mov
add
fstpl
sbb
aaa
ds
fists
add
daa
ja
rcr
imul
sbb
fadds
enter
cmp
data16
fimull
xchg
xchg
mov
push
mov
pop
fnstcw
cmp
xchg
mov
pop
push
icebp
sub
scas
mov
lea
js
mov
xor
out
push
xchg
dec
mov
in
popf
or
bound
repnz
outsl
clc
add
aad
sub
mov
nop
jbe
sahf
push
dec
cmc
sbb
inc
fwait
mov
sahf
mov
jp
and
xchg
or
xchg
inc
sbb
stos
or
pop
jge
sub
icebp
pop
mov
int
add
jg
mov
mov
scas
xlat
adc
cmp
aaa
mov
push
stos
lcall
or
ret
mov
jnp
jae
dec
lods
ljmp
xchg
aaa
dec
sti
jge
and
shrl
dec
jmp
sti
nop
insl
sbb
mov
aaa
xor
push
sub
repnz
mov
jne
sub
lahf
mov
stos
shrl
fs
sbb
movsl
xor
cld
xor
lret
jecxz
hlt
in
out
popa
lret
lods
pop
lds
sbb
or
or
rorb
xor
std
ret
xor
xor
mov
in
mov
inc
inc
jge
jne
xchg
xchg
mov
mov
popf
scas
repz
lds
fimuls
sbb
in
sarl
pop
stos
push
fidivrl
jnp
ljmp
sbb
xchg
dec
cs
push
roll
xchg
lods
outsl
ret
hlt
inc
imul
sub
add
imul
push
mov
xor
jmp
add
and
push
pusha
scas
cwtl
dec
dec
pushf
pop
test
aaa
cld
cmpsl
cmp
push
push
lret
pop
mov
cltd
pop
adc
jns
mov
std
call
in
mov
test
cmp
jno
sub
fbstp
ljmp
and
sub
push
xor
cmpsb
ljmp
jbe
popa
dec
lret
cmp
popa
ret
push
sub
mov
iret
dec
aaa
arpl
jge
inc
or
pop
add
mov
fcom
push
mov
rolb
mov
fs
and
mulb
pop
push
je
je
push
adc
and
push
out
cli
xchg
call
aas
repz
add
movsb
testb
and
lret
mov
lock
mov
xchg
sub
inc
in
jo
dec
add
pushf
in
leave
std
mov
jmp
repnz
jl
imul
ret
fcomp
cwtl
sub
pop
bound
mov
loopne
test
push
sbb
call
mov
hlt
int
in
ret
cmp
pop
mov
insl
or
mov
shrl
xchg
lds
push
test
and
sbb
add
mov
outsl
aas
je
scas
push
and
sti
cmp
mov
mov
pop
xchg
sahf
xchg
mov
ret
stc
push
adc
adc
xchg
mov
movsl
enter
mov
cld
inc
leave
movsb
shlb
mov
stos
and
pop
icebp
in
divl
in
sbb
mov
xor
cmp
sub
call
sbb
mov
pop
stos
insb
dec
push
pop
mov
jl
daa
repz
pop
inc
loop
xchg
gs
icebp
cmp
clc
icebp
mov
aaa
add
add
cwtl
inc
rcll
lock
jle
dec
stc
pop
sbb
nop
ja
add
sbb
pop
push
push
jo
push
mov
hlt
and
sub
test
mov
push
push
or
scas
push
ficoml
push
enter
add
insb
pop
pop
push
jl
ds
sub
mov
jae
mov
test
pop
leave
and
insl
dec
cmp
lods
adc
jnp
test
mov
aad
cmp
shrb
push
pop
adc
mov
data16
mov
mov
xchg
jbe
stos
or
jg
in
cld
dec
sub
enter
gs
je
xchg
jns
or
push
cltd
dec
mov
dec
pushl
mov
and
lea
and
das
mov
sub
xchg
dec
pop
insl
rorl
pop
jg
mov
push
int
dec
out
push
aas
jp
test
cld
cld
cmp
in
adc
jb
xchg
rcrl
lahf
cs
push
mov
cmpsb
mov
stos
sbb
test
ljmp
jae
pop
adc
rclb
rclb
sbb
cli
xor
dec
push
add
fidivrs
xchg
mov
fidivrl
jb
cmp
in
dec
pop
and
ljmp
ret
loopne
pop
jg
inc
jle
cmp
and
aam
add
pop
cli
jbe
xlat
js
adc
and
jne
bound
push
js
lock
inc
cmp
iret
xchg
rolb
and
ja
sahf
stos
push
sbb
ja
std
es
and
pmullw
jl
pop
cmp
cmp
inc
inc
loope
clc
xchg
mov
pop
stos
jno
stos
adc
mov
xor
rol
push
lcall
rclb
pop
fstpl
and
cmp
adc
leave
pop
or
and
dec
dec
sub
outsb
psubq
sbb
xor
mov
popa
lods
inc
lahf
inc
jecxz
ret
mov
shlb
fcmovne
jb
popa
das
fbld
inc
adc
or
mulb
lock
inc
movsb
xor
sub
out
sti
mov
out
xlat
mov
xor
out
sbb
fisubrl
xchg
jne
add
inc
xchg
and
sbb
pop
ljmp
cltd
adc
rorb
sbb
repnz
and
iret
fsubp
ljmp
jecxz
lods
subb
inc
push
scas
test
fwait
push
jle
into
xchg
mov
pop
xchg
xchg
sub
mov
and
inc
mov
jo
sti
xchg
xor
iret
mov
mov
xor
shl
xlat
call
sub
gs
das
cmpsl
mov
in
mov
faddl
test
aam
xchg
jg
in
arpl
pushf
call
cmpsl
jae
addr16
pop
push
add
loope
jbe
adc
sbb
sahf
xor
mov
jle
stc
hlt
in
aad
and
adc
or
mov
cmp
or
cmp
aam
xor
dec
iret
rolb
test
or
pop
ds
loop
outsl
add
xchg
popa
fdivl
mov
push
xchg
or
or
loope
lea
mov
aam
sahf
jns
mov
out
jnp
bound
std
and
cmp
cmp
sbb
or
xchg
test
pop
std
shrb
jmp
out
jmp
hlt
inc
mov
push
nop
xlat
mov
stos
out
sbb
lods
sbb
pop
mov
in
test
xchg
or
jmp
hlt
adc
mov
push
mov
ficoms
js
aad
jae
push
cmp
add
inc
imul
adc
imul
sub
lahf
mov
xlat
jl
enter
cmp
call
cmp
pusha
sub
xor
pop
jo
dec
pop
addr16
jbe
adc
popl
jne
scas
nop
js
jmp
test
jle
dec
add
loop
test
movsl
jns
mov
cmc
flds
fdivrl
mov
xchg
mov
push
test
cmp
rcrb
fidivrl
fidivrs
xchg
out
divb
aas
stos
ficoms
dec
sbb
xlat
shrb
jnp
jl
mov
dec
jecxz
rcr
movsl
or
push
pop
rcl
inc
addl
xchg
push
dec
push
jle
out
out
lock
mov
xor
and
adc
loope
aad
jmp
dec
mov
pop
sub
ret
mov
jae
inc
dec
data16
pop
pop
and
lock
xor
and
xor
cmpsl
fidivl
pavgb
outsl
enter
lret
mov
mov
dec
stos
daa
push
and
dec
add
fdivrl
je
movsl
repnz
and
std
js
notl
mov
xchg
cmp
addl
stos
dec
scas
std
mov
mov
adc
insl
mov
inc
add
pop
addr16
add
add
stos
cmpsl
mov
cmpsl
aaa
push
pop
cmpsl
cmpsb
mov
push
mov
and
lea
mov
fs
xchg
out
outsb
mov
loop
rolb
ljmp
push
xchg
mov
adc
jbe
jge
sbb
daa
inc
xlat
daa
in
cmpsb
push
sub
faddl
fcoml
push
mov
cli
data16
les
rclb
out
daa
jnp
call
jmp
jae
push
pop
inc
imul
push
lock
mov
mov
add
xchg
stos
cmp
test
ds
insl
ss
mov
xchg
dec
popa
add
push
xchg
xor
shrb
stos
mov
data16
mov
out
pop
mov
add
movsb
inc
push
mov
int
mov
adcl
lret
cltd
pusha
test
xchg
cs
mov
xchg
inc
inc
inc
mov
push
xchg
testl
lea
xchg
dec
sub
fidivl
fadds
adc
loop
mov
pop
inc
arpl
les
xlat
imul
jae
add
mov
mov
mov
ljmp
pop
outsb
xchg
xchg
adc
icebp
mov
cli
insb
stos
imul
mov
mov
xor
inc
add
sbb
loopne
mov
adc
aam
pop
pop
sub
xchg
xchg
repz
mov
pop
mov
push
enter
js
cmp
pop
push
adc
hlt
fcmovnu
jl
fiadds
enter
sbb
aam
stos
movsl
mov
add
add
sub
in
lcall
mov
push
popa
xor
inc
jge
add
in
xor
mov
cmp
shll
sarl
xor
cld
mov
roll
adc
cmpsb
clc
hlt
sbb
push
aad
pop
aaa
mov
add
orb
inc
add
mov
adc
or
sbb
out
xchg
push
xchg
xor
insb
mov
mov
mov
pop
test
arpl
fidivrs
pop
cmpsl
inc
shlb
sti
push
cmc
inc
lret
sub
mov
ja
add
ficoms
jl
hlt
andl
fcoms
push
bound
dec
jo
pop
jne
sub
push
adc
xchg
xor
jmp
lock
xchg
cltd
sbb
idivl
jecxz
ja
push
mov
lcall
loop
shl
mov
mov
push
aam
jle
sarb
and
dec
cwtl
jae
int
mov
xchg
xchg
cli
out
dec
push
xor
add
and
mov
cmp
xlat
xor
xor
xchg
or
xor
rol
nop
mov
fldl
cld
jo
pop
push
sub
ss
cli
pop
pop
jb
sbb
cmc
fs
add
inc
mov
jnp
ss
jb
inc
mov
xor
sbb
scas
imul
pop
icebp
cmp
dec
test
mov
cmp
pop
jb
or
leave
pop
sub
jnp,pt
popf
push
pop
jo
je
iret
ficomps
adc
sub
mov
fiaddl
fmull
shrl
into
ljmp
fisttpl
push
mov
or
mov
out
cmp
fdiv
and
shrb
movsl
adc
inc
push
in
mov
xor
push
scas
jmp
stos
sub
mov
mov
nop
and
repnz
movb
or
add
mov
scas
jo
stos
inc
les
out
xchg
mov
movsl
pushf
dec
or
adc
pusha
push
gs
movsb
sub
jmp
or
inc
jg
in
dec
push
mov
repnz
xor
pop
rcrl
mov
jp
mov
je
jmp
movsb
adcb
mov
out
daa
mov
lret
test
sub
js
loopne
push
repnz
xchg
cmpl
jns
mov
in
pop
stos
inc
push
call
xchg
stos
jbe
iret
sub
cmc
out
push
out
call
lods
jns
mov
lret
mov
pop
inc
cmpsb
int
in
rclb
sar
push
adc
pushf
sbb
inc
ficoml
repz
dec
clc
lret
xchg
xor
xor
addr16
pop
bnd
dec
jo
mov
jne
push
arpl
cwtl
out
aad
ss
cmp
sub
mov
jle
inc
xchg
les
sub
lods
aam
ljmp
push
or
xchg
add
mov
repz
or
or
dec
xlat
inc
fisubrs
dec
fdiv
cwtl
cwtl
and
jb
leave
sbb
adc
outsb
inc
shrl
ljmp
iret
pop
popf
rorb
or
mov
out
ret
dec
stos
outsb
jae
enter
std
xchg
mov
out
cld
repz
lahf
negb
loopne
inc
xchg
adc
pop
subl
mov
pusha
arpl
cli
jecxz
xor
mov
pop
and
add
dec
push
mov
sub
sbb
and
xchg
adc
pop
sub
pop
aas
jnp
add
sbb
push
dec
xchg
scas
mov
sub
xchg
lods
mov
mov
push
jnp
pusha
roll
divl
fldl
mov
mov
aam
and
jo
xchg
das
repnz
xor
pop
jb
xor
mov
pop
movsb
pop
pusha
or
xchg
int
add
cmp
adc
push
iret
jle
cmp
shlb
shrl
push
pop
movsb
outsb
mov
cltd
pop
pop
pop
or
dec
dec
lods
fcom
mov
xchg
jo
mov
inc
sub
pop
cmpsl
xchg
in
push
xor
pop
pop
in
add
or
xchg
inc
inc
popf
or
jno
push
jae
out
mov
lods
mov
or
mov
pop
call
mov
int3
sub
jp
scas
pop
aas
or
adc
push
push
cmp
shrb
fldenv
es
lcall
fimull
pop
movsl
xlat
jl
mov
fadds
mov
into
push
xchg
je
jbe
outsb
cs
orl
pop
mov
fistps
mov
adc
fnstenv
sbb
pop
dec
dec
xor
pop
outsl
xchg
das
faddl
out
jle
lods
sub
loop
inc
xor
cld
lcall
mov
or
imul
sub
subb
imul
imul
in
push
jno
cmpsb
ja
jg
pusha
adc
pop
fcompl
daa
push
and
es
jecxz
adc
scas
sub
shll
notb
scas
inc
lds
jg
outsl
sub
adc
mov
inc
loopne
lret
xchg
out
int
cli
inc
outsb
ljmp
xor
push
jmp
push
bound
mov
dec
push
jne
push
dec
jg
and
shlb
out
push
inc
jle
cwtl
out
cmc
xchg
or
les
sub
mov
cmpsl
loope
cmc
push
mov
pop
jp
shrb
push
std
shrb
push
rcrb
push
mov
sub
and
or
pusha
inc
jl
out
mov
sbb
in
lea
in
mov
jl
mov
pop
inc
clc
scas
addr16
imul
mov
push
test
jb
jp
mov
push
sub
mov
sub
outsb
xor
mov
push
or
lahf
nop
dec
jmp
push
leave
pop
sbb
push
adc
or
adc
push
push
call
movsb
testl
xor
cli
outsl
mov
lock
in
xlat
adc
mov
lret
dec
lock
jno
pop
sbb
fcmovne
xor
or
roll
xlat
pop
fwait
stc
ss
mov
adc
dec
inc
or
sahf
cld
mov
addb
iret
loope
leave
jae
in
out
hlt
sahf
mov
ljmp
pop
add
sbb
in
mov
push
add
add
lret
shrb
and
test
mov
jg
xor
aad
cmp
xchg
sahf
dec
sub
add
adc
and
lods
jno
fdivrs
xchg
jg
push
inc
sbb
sbb
and
cmp
sbb
and
sbb
shrb
xchg
and
cli
enter
ds
imul
inc
cmp
cmp
mov
inc
setl
xchg
push
loope
fldcw
test
and
fcomps
xor
cmc
pop
push
fdivl
jno
mov
jge
into
jp
imul
inc
dec
lret
icebp
in
scas
mov
mov
or
dec
cs
clc
pop
add
inc
imul
mov
pop
in
repnz
inc
adc
adc
xchg
push
add
jl
jno
por
stos
cmpb
xchg
outsl
sbb
adc
loopne
pop
xchg
pop
dec
outsl
pop
dec
jmp
add
aas
jmpw
jbe
je,pt
insl
insb
orl
ret
pop
lds
jb
sbb
sti
scas
cmp
insb
jge
push
lods
lods
fldt
mov
sbb
cmp
rorl
add
pop
adc
or
mov
cmp
mov
lods
test
test
dec
das
jb
push
es
sbb
ss
xor
pop
cmp
lea
adc
xchg
mov
mov
mov
mov
and
push
fs
daa
lods
pop
mov
nop
rcrl
jmp
decl
inc
xorl
test
repz
sub
cmp
add
jge
xor
cmc
mov
outsl
mov
inc
pop
das
jne
sub
dec
cmp
sbb
nop
ja
or
xchg
ret
cmp
xchg
cmp
scas
lcall
xbegin
or
or
cmp
bound
fs
sarl
add
xorb
nop
scas
mov
enter
pop
push
popf
fbstp
ds
fwait
and
mov
enter
lds
and
mov
pop
push
inc
or
xor
mov
ljmp
adc
iret
and
pop
in
sbb
xchg
ja
push
cmpsl
pop
xorb
iret
jnp
jns
ss
notb
mov
lea
in
aaa
sub
out
outsl
popf
mov
xlat
sbb
dec
cmpsl
ljmp
and
xor
inc
mov
jp
rolb
lea
cmp
scas
cmp
es
mov
nop
fwait
push
sub
push
pop
mov
ficoms
and
and
or
cmp
xchg
hlt
ror
cld
inc
ret
sbb
cmp
scas
addr16
or
xor
test
js
out
test
mov
negb
lods
ficoml
out
aas
lcall
push
fmuls
js
icebp
jnp
cmp
sbb
sub
mov
cmp
add
repz
icebp
js
push
popa
push
bound
fstl
mov
aas
or
add
dec
pop
cmp
outsl
cmp
gs
lods
sub
insb
hlt
arpl
jb
xor
loope
pop
fsubr
and
mov
inc
jo
jae
mov
in
dec
imul
into
xchg
dec
sub
xor
fmull
jge
out
cli
or
inc
std
add
sbb
out
push
stos
and
pop
leave
mov
pop
je
out
cmp
adc
cmp
jnp
jge
cltd
nop
adc
pop
jnp
xchg
lcall
imulb
or
mov
sub
mov
fmuls
sbb
mov
push
inc
cmp
push
xchg
ficompl
mov
fldl
cmpsl
or
jmp
mov
pusha
daa
in
add
dec
ror
push
lret
lret
jge
xor
push
bound
movsb
inc
insb
stos
sub
and
pop
mov
lahf
cwtl
or
out
add
aad
jae
sub
in
add
jno
rorb
or
jb
lret
daa
fcomps
sub
mov
cltd
and
mov
outsl
cmpsb
clc
mov
popf
cld
ja
and
mov
nop
lods
data16
lods
push
pop
add
in
int3
call
out
lcall
enter
test
jp
push
iret
sbb
mov
and
stos
pop
cmp
in
jnp
cmp
out
dec
outsl
ljmp
and
cmc
out
inc
jecxz
into
push
int3
nop
daa
pushf
repnz
outsl
sub
jle
inc
xchg
shl
pushf
ds
sub
jnp
stos
push
lret
das
and
or
jb
js
add
jbe
aas
fisttpl
fld
fildl
push
fnsave
xchg
loopne
jae
lea
xchg
clc
int
fidivrl
pop
xor
bound
out
sbb
or
mov
inc
dec
loope
mov
inc
mov
push
test
add
push
push
jne
mov
in
xor
pop
jecxz
stos
push
pop
sbb
icebp
pushf
push
cmp
mov
jne
push
xor
fnsave
ret
pop
and
fs
jb
sub
lods
dec
pop
pop
popl
fbld
sub
aas
push
push
push
push
insl
mov
cmc
cs
or
lds
pop
cmpsl
pop
imul
xchg
daa
in
and
sbb
cmpb
and
xor
lods
or
push
dec
stos
sarb
adc
std
fcmovb
pop
add
lret
pop
bound
push
aad
lret
cmp
mov
mov
and
dec
hlt
lock
push
xor
pop
and
jmp
stos
out
insl
xchg
or
sub
dec
ljmp
je
pop
cmc
ss
pop
mov
push
aaa
sub
inc
jne
mov
jmp
cmp
sub
roll
or
popf
mov
ficompl
test
mull
sub
out
xor
push
jnp
jg
pop
movb
pushf
sbb
mov
bound
adc
push
push
mov
aad
jle
mov
imul
imul
dec
ja
xlat
mov
das
cmp
push
xor
aas
inc
int
cmp
sub
fs
stc
xchg
push
cmp
jae
push
ret
jbe
inc
cmpsb
fwait
inc
test
test
sub
loopne
lea
push
fdivrl
cmp
cmp
out
loop
inc
jle
or
jge
insl
jp
call
aam
jmp
out
mov
jae
iret
cld
or
lea
adc
loop
xor
dec
push
js
aaa
das
xchg
dec
or
dec
int3
xlat
es
sub
pop
mov
lret
push
mov
push
in
out
dec
or
pop
shrb
fwait
or
test
cmp
scas
mov
test
jno
call
sub
mov
into
push
shll
mov
push
les
cli
addr16
sub
stos
sbb
test
in
mov
sbb
test
mov
mov
inc
lock
cli
hlt
jbe
add
test
xor
pushf
push
add
adc
xchg
mov
push
inc
outsl
mov
mov
inc
iret
lds
dec
stos
push
xlat
das
or
pop
pushf
scas
mov
popa
hlt
inc
inc
pop
test
xorl
sbb
and
sbb
movsl
cmp
mov
orl
xlat
out
sub
push
push
or
repnz
filds
out
inc
mov
pop
add
ds
cmp
cmp
sbb
adc
movups
sar
xchg
leave
out
int3
pop
jmp
or
add
clc
scas
insw
xorl
inc
stos
std
jp
or
dec
jb
xchg
add
mov
cmpb
adc
fstpt
in
pop
pop
lahf
enter
mov
or
stos
sti
ds
and
incl
fwait
mov
out
jne
push
addb
call
dec
xchg
div
js
sub
pop
pop
add
push
mov
mov
sti
push
push
fwait
mov
andl
xchg
adc
adc
loope
and
sahf
jecxz
pusha
popf
aaa
inc
xchg
mov
cmp
sbb
add
xor
push
mov
inc
and
std
sbb
or
mov
subl
aaa
xchg
imul
cmp
xchg
outsb
mov
sub
daa
cld
xchg
inc
dec
pop
testb
push
cmp
pop
sub
push
cs
sbb
adc
adc
push
pop
lcall
cld
push
push
inc
inc
cmpsl
inc
out
mov
test
adc
pop
aas
cmpsl
mov
imul
pop
pop
cmp
je
test
inc
xchg
push
cltd
mov
int3
cmp
mov
fsubl
repnz
sbb
pop
adc
xchg
push
popf
and
das
mov
in
mov
pusha
pop
and
pop
in
jne
and
mov
sub
sti
insb
outsb
lret
orl
fsubrp
sbb
pop
lds
insb
and
or
loopne
inc
lret
insb
fs
dec
xorl
movsb
sub
dec
sbb
dec
hlt
dec
mov
cmp
or
leave
dec
jbe
les
sub
sbb
scas
scas
inc
orb
jmp
std
jae
adc
pop
sub
push
ret
or
mov
or
push
into
es
mov
lds
pop
xchg
or
leave
dec
out
cmpsl
or
pop
jbe
int
pop
sbb
mov
dec
xchg
imul
out
or
scas
enter
subl
mov
sub
cmp
test
inc
push
jno
ds
push
jnp
fwait
mov
cmpsb
adc
cmp
xchg
into
int3
loopne
icebp
and
and
popf
inc
repnz
shll
lret
cmp
mov
out
idivl
js
popf
inc
lds
sub
mov
lods
clc
test
cli
pop
xchg
mov
clc
stc
cmc
dec
pop
inc
and
pop
jb
pushf
or
in
in
fldcw
jb
sti
movsl
adc
fs
mov
and
lods
lods
out
and
jo
mov
push
mov
ficompl
inc
scas
fwait
sahf
in
sub
in
add
ja
addr16
mov
sub
in
rorb
ret
scas
push
in
int
add
dec
aaa
lret
shrl
sub
sbb
or
pop
jnp
adc
or
mov
mov
daa
mov
sbb
inc
dec
lods
jno
inc
or
ret
ret
cmp
mov
lock
addl
out
ljmp
repz
les
inc
inc
js
negb
fs
das
jle
push
ds
scas
cmpl
es
pop
adc
pop
dec
jmp
pop
mov
cmpsb
out
jg
je
mov
enter
dec
into
repz
jmp
popl
adc
shrl
sbb
push
iret
fists
dec
cmp
js
fidivrs
movzwl
out
mov
fdivrs
test
orb
inc
push
mov
adc
xchg
mov
jmp
mov
lahf
lret
fbld
mov
fwait
test
jmp
test
mov
push
sub
jae
cmpl
add
or
pop
jmp
adc
or
sub
std
inc
xchg
xor
pop
dec
inc
mov
cmp
fwait
pop
xor
mov
pop
cmc
and
sbb
call
dec
rol
or
outsl
mov
sbb
std
iret
xchg
scas
cmpsl
adc
in
mov
rcrl
ret
std
popa
push
and
pop
cmp
mov
ficoms
cmp
sbb
outsl
leave
movb
out
insl
sub
imulb
out
mov
test
cmc
sbb
dec
lret
cmc
jge
into
pusha
int
in
xchg
xchg
movsl
test
adc
arpl
call
push
dec
push
jge
shll
mov
mov
cwtl
xor
cmpsl
mov
sub
mov
lock
rol
mov
lret
or
cld
clc
xchg
out
sbb
leave
icebp
notl
cmpsb
js
lahf
test
mov
insb
push
and
fsubrs
cs
mov
xchg
pop
fsubl
mov
addr16
cmp
and
pop
pop
js
jecxz
push
fistl
sbb
bnd
outsb
cmp
inc
lods
xchg
mov
aad
mov
add
in
xchg
jbe
mov
and
aaa
jbe
ds
cs
inc
repz
jle
pop
adc
not
insl
sbb
jno
xor
ret
adc
pop
push
jmp
bound
cmp
pop
ja
jg
jmp
insb
push
mov
hlt
push
pop
stos
push
xlat
fs
mov
and
push
out
inc
std
loope
add
outsl
bndldx
stc
xchg
mov
subl
in
fsts
ret
inc
add
rcrl
adc
test
dec
fisubrl
cmp
outsb
adc
xlat
jne
dec
mov
xor
push
dec
pop
mov
mov
fwait
pop
jmp
sbb
cmp
mov
outsb
clc
push
andb
jmp
fldcw
push
sub
into
in
xlat
cli
cwtl
fwait
pop
push
dec
mov
add
pop
shlb
int3
sbb
icebp
bound
inc
nop
adc
dec
movsl
inc
lods
bound
xlat
mov
aam
or
stos
jne
ret
mov
cmp
je
fs
insl
negb
mov
aad
and
sbb
sbbl
js
jp
jnp
adc
sub
dec
mov
scas
xchg
inc
xor
lahf
fimull
sbb
popf
repz
add
les
add
jno
lahf
gs
push
testl
rcll
push
adc
outsb
aam
out
jno
movsl
clc
lret
pop
lret
cmc
mov
cmp
and
rcll
mov
cltd
push
addr16
jle
fninit
dec
sbb
pop
idivl
icebp
call
icebp
adc
lods
xchg
pusha
mov
out
sbb
cwtl
andl
test
mov
cmpsb
push
les
and
mov
in
popa
cmp
mov
out
mov
add
fbstp
int3
lea
ficoml
lahf
adc
ret
movb
xchg
popf
fidivl
jle
mov
cmp
inc
xor
lret
std
notl
pop
sbb
mov
push
xor
or
sbbl
pop
push
mov
jb
outsb
inc
jg
push
pop
cltd
mov
push
test
adc
adc
jbe
scas
subb
scas
adc
rcrl
fwait
mov
cltd
dec
fistl
icebp
test
insl
nop
sarl
cli
mov
mov
xorl
pop
pop
jp
jb
sbb
sti
push
jl
pop
lahf
xchg
mov
test
addr16
sahf
lods
clc
inc
bnd
push
cmp
ss
addl
inc
jg
cwtl
sbb
push
mov
mov
mov
int
cwtl
gs
sarl
jo
cld
addr16
mov
incl
fwait
lret
xchg
ja
jle
mov
mov
es
sbb
test
imul
fisttpl
ret
add
mov
js
fwait
push
push
push
out
push
insb
lret
inc
and
mov
xchg
jg
xchg
cltd
push
cmp
pusha
aam
addr16
mov
push
repz
xchg
scas
mov
mov
lret
loopne
xchg
movsb
in
fstpl
arpl
out
xchg
mov
daa
xchg
adc
aad
inc
mov
outsb
call
out
inc
call
mov
push
jns
nop
lret
cmpsl
sub
das
gs
arpl
in
insb
fdivl
in
insl
pop
popa
mov
out
call
dec
call
xor
push
mov
and
push
jns
insl
pushf
sub
mov
scas
insl
pop
arpl
sbb
mov
jmp
imul
jb
cmpsb
clc
call
aas
mov
aam
push
ret
push
addr16
dec
aas
mov
cltd
pushf
mov
xor
pushf
push
xchg
mov
push
out
mov
dec
mov
inc
insb
fimull
fnsave
movb
dec
popf
fwait
adc
stos
sbb
jb
ja
sub
mov
mov
pop
adc
ljmp
adc
xchg
xchg
fs
shl
orl
mov
push
bnd
fiadds
mov
insb
cmpl
push
adc
int3
cli
imul
into
xor
in
stos
andb
mov
fs
mov
xor
sahf
pop
inc
dec
lock
pop
stos
dec
add
enter
xor
and
outsb
movsl
ss
sub
jp
and
or
sub
out
out
cltd
sbb
or
loop
addr16
or
xor
loopne
aad
xor
fs
out
and
scas
popa
leave
add
add
les
outsl
xchg
mov
mov
leave
shlb
pop
cwtl
sub
mov
imul
and
mov
adc
lahf
or
outsb
push
sarb
mov
fisttpl
scas
scas
or
jne
insl
adc
lock
out
ret
push
sar
sar
daa
lea
xlat
cmp
push
mov
add
lret
loop
je
rcl
lret
pop
stos
jle
mov
mov
call
jnp
xchg
xchg
sahf
push
jb
inc
dec
xor
cmp
in
cmp
pop
mov
mov
adc
mov
inc
data16
xor
pop
ljmp
loope
lds
jge
nop
mov
sbb
pop
sbb
nop
sub
mov
mov
mov
jecxz
mov
int3
mov
push
gs
jnp
movsl
sbb
or
cli
popf
enter
repz
rolb
cli
fldl
sbb
jns
test
mov
cmp
mov
mov
cmp
orl
movsl
xor
push
pop
stc
nopl
jg
dec
in
push
sar
mov
in
int
xchg
enter
clc
or
ret
fstl
cmp
push
ss
jmp
test
iret
jns
mov
add
pop
in
or
xchg
push
dec
inc
fs
sti
or
jbe
lret
pop
mov
mov
imul
sbb
les
cmpsb
test
test
xchg
ret
mov
rolb
jl
aaa
stos
mov
sbb
test
in
adc
sbb
sti
jb
cmp
pop
sbb
push
ja
xor
or
and
int3
test
dec
addl
scas
mov
scas
push
cmp
mov
jecxz
fstpl
icebp
bound
cmp
rorl
popl
rcr
mov
loop
adc
fistps
or
rcrb
rol
movsb
or
inc
xchg
mov
pop
stc
inc
jmp
adc
mov
in
in
push
xor
add
xorl
pop
roll
mov
xchg
mov
nop
mov
push
cmc
mov
fsubrs
gs
mov
mov
or
clc
add
test
xor
lret
lods
push
test
inc
dec
test
sbbb
fadd
xchg
ret
push
inc
movsb
gs
in
call
insl
dec
test
outsb
imull
mov
call
add
test
pushf
prefetchw
mov
dec
sub
data16
enter
scas
in
js
addr16
mov
out
fldl
test
push
mov
mov
pop
adc
pop
pop
stc
int3
inc
mov
sbb
arpl
dec
and
decb
xor
or
jb
lcall
fcmovnb
jo
in
adc
adc
das
cwtl
jae
adc
and
lock
enter
mov
iret
loope
sbb
cs
arpl
jne
je
and
adc
pushf
sub
adc
rcrb
ds
movsb
cmpsb
sub
and
jecxz
stc
mov
sub
clc
jne
dec
or
scas
notl
sbb
mov
pushf
cltd
inc
movsl
or
jecxz
inc
fdivrs
mov
pop
les
dec
dec
lea
push
jb
sub
insb
shrb
enter
out
loop
cwtl
fimuls
test
cmpsl
add
push
in
push
dec
mov
xchg
fsubs
pop
jbe
ss
sbb
call
fcomip
int3
jmp
outsb
xchg
and
or
and
lahf
bound
rol
mov
insl
subb
push
ss
shlb
xchg
ret
fxch
stos
jmp
cmc
icebp
icebp
test
sub
fmull
ret
pop
stos
push
dec
xor
mov
out
xchg
insb
sbb
ljmp
int3
push
scas
in
jno
sub
movsb
das
dec
and
out
orl
popa
cmp
adc
cmp
add
pop
jp
movsl
cmpsb
fistpl
mov
test
jl
sub
negl
mov
mov
btc
daa
fstps
xlat
cmpsb
test
mov
pop
push
leave
gs
cwtl
jmp
ds
pop
and
sti
adc
insl
lods
push
jecxz
shll
outsb
mov
xchg
sarl
mov
out
dec
aam
fimull
outsb
sbb
lock
ss
sub
mov
jecxz
dec
scas
mov
push
mov
out
rcll
lea
xor
test
sahf
pusha
sbb
jmp
pop
mov
repz
xlat
inc
fiaddl
xchg
push
fsubrl
xchg
xor
or
xchg
xchg
push
or
ljmp
aam
or
lea
xchg
mov
jecxz
lods
mov
rcrb
xchg
mov
in
jge
roll
mov
lods
test
jecxz
add
push
dec
sub
mov
or
jl
scas
xchg
inc
mov
and
in
lock
addr16
dec
and
xchg
push
xchg
imul
jecxz
and
lds
push
push
gs
xlat
xchg
mov
or
xchg
sub
les
mov
cmp
mov
outsb
icebp
cltd
out
enter
mov
stos
pop
out
inc
lds
aaa
ror
std
cmp
test
into
add
int3
jmp
lret
cltd
sbb
jne
pop
pop
mov
xchg
xchg
xor
outsb
dec
test
ret
dec
cmpsb
mov
inc
das
jge
xor
sbb
fdivrl
jae
mov
mov
cmpsb
and
xchg
mov
sub
mov
ja
dec
or
dec
test
inc
sti
xchg
hlt
pop
cld
test
aas
in
pop
pop
jne
pusha
mov
shll
fs
xchg
mov
dec
inc
jne
xorl
sub
fcmove
lock
jnp
fstps
jb
int
mov
ret
cmpsl
outsl
push
arpl
cmp
cmp
sub
hlt
push
adc
pop
mov
out
rcr
and
xor
in
push
pop
mov
and
cmpl
movsl
and
loope
scas
aaa
rolb
imul
outsb
mov
test
pop
int
pushf
leave
adc
xchg
inc
std
adc
lret
cmp
and
pop
insb
pop
insl
mov
add
inc
pop
cwtl
addr16
pushf
cltd
hlt
inc
mov
inc
mov
jno
lcall
fwait
and
dec
adc
int3
or
xor
into
notb
nop
jge
dec
xor
test
mov
mov
call
sub
xchg
sub
mov
scas
call
pop
dec
cwtl
dec
scas
icebp
mov
stc
xor
ljmp
loopne
lea
mov
pop
fwait
icebp
jnp
push
retw
push
or
lods
push
cmp
xor
sbb
out
mov
jle
pop
cmpsb
cli
cwtl
or
sub
cmpsl
jg
mov
mov
loop
inc
mov
inc
jge
dec
imul
cmp
mov
loop
mov
and
ljmp
mov
shl
mov
pushf
in
sub
mov
sar
xchg
lret
es
sbb
sbb
jge
clc
sbb
ret
sub
mov
popa
gs
jmp
xorb
movsl
scas
ja
mov
aas
xor
add
imul
in
in
ds
jb
xor
push
mov
push
mov
arpl
fwait
pop
push
stos
test
xorb
sti
inc
pop
jp
and
jl
add
xchg
aad
cli
inc
mov
in
mov
fildl
in
out
pop
aas
adc
in
cmp
sbbb
ja
add
insb
stc
jl
lret
js
jne
or
adc
scas
lret
mov
test
int3
in
inc
pop
cmp
pop
in
dec
lret
push
jns
push
clc
push
mov
pop
cmp
push
push
lcall
cmp
daa
push
pop
add
in
and
push
jg
movsb
xchg
stos
inc
jle
mov
add
divb
jl
addb
adc
loopne
adc
bound
in
sub
pop
sbb
insl
repz
mov
cltd
push
xor
call
cmp
ret
inc
add
roll
rcll
insb
fwait
stos
adc
pop
sahf
push
lods
or
int
dec
mov
sar
insl
lret
jmp
sub
mov
outsb
into
add
scas
ret
sub
dec
cli
movb
pop
rol
inc
or
dec
mov
or
add
pop
cmp
inc
ja
mov
lods
sbb
jle
hlt
test
cmp
pop
adc
call
mov
or
cs
movzbl
les
xchg
jle
fiaddl
cmp
add
loopne
iret
cmpsb
ficompl
cmpsb
mov
loope
pushf
int3
outsl
cmp
push
or
sbb
les
js
xchg
out
notl
loop
clc
and
fisubrs
fs
xchg
roll
test
ja
lods
lret
pop
sub
mov
and
mov
call
add
jg
ljmp
adc
jae
faddp
stc
aad
mov
imul
inc
adc
and
pop
cmp
jle
dec
out
adc
mov
outsl
mov
push
int
xchg
out
or
ja
mov
xchg
jb
mov
push
test
adc
adc
es
call
pop
adc
adc
mov
adc
sbb
repz
outsl
sub
sub
mov
xor
mov
nop
sbb
push
cmpsb
lcall
sub
push
add
sbb
gs
xchg
int3
mov
lods
sub
xchg
sarl
add
mov
dec
into
and
push
xor
mov
rolb
les
mov
into
loope
cmp
lret
mov
mov
add
cltd
dec
aaa
loope
repz
dec
xchg
ret
mov
and
mov
into
stc
vpminub
push
ret
fildl
xor
sbb
push
push
dec
imul
xchg
adc
fisttps
aad
or
mov
inc
mov
mov
and
mov
dec
insl
mov
jmp
xchg
push
push
mov
call
push
out
imul
insb
pop
mov
orb
mov
lcall
aad
ja
call
add
mov
add
mov
popa
push
arpl
dec
aam
mov
pop
dec
cmp
xor
xchg
jbe
mov
mov
icebp
lea
cwtl
js
adc
mov
repz
xchg
jo
gs
or
loope
stos
dec
bswap
ja
sbb
and
xor
jge
xorl
add
mov
mov
iret
inc
mov
inc
sbb
cmp
push
sahf
jle
mov
rcll
nop
in
mov
or
or
mov
adc
orl
mov
pop
cvtps2pd
push
movsb
adc
cmp
or
mov
xchg
std
dec
in
mov
pop
repnz
jno
dec
and
xchg
and
ret
loopne
add
filds
add
xor
bound
push
fisubl
cwtl
jb
das
lahf
mov
xor
imul
dec
mov
inc
cmpsl
xchg
push
leave
fs
addl
sarb
fdivrl
movsl
xor
test
in
incl
xor
xchg
popf
mov
testb
addb
mov
loopne
aaa
inc
mov
scas
cld
in
fsub
cmpsl
mull
and
jnp
and
jecxz
test
pop
jl
addr16
ret
dec
xchg
cmp
jmp
fidivs
push
dec
loop
pop
jbe
dec
or
cld
sti
shl
repz
mov
push
cli
mov
cmp
outsb
test
dec
lret
xchg
sub
mov
hlt
out
inc
js
sbb
out
mov
jl
test
xchg
adc
cmp
aam
fnstsw
jl
adc
xchg
arpl
push
int3
or
cli
pcmpgtw
lahf
and
fs
in
inc
jno
call
xchg
pop
push
add
sbb
dec
pop
inc
aas
dec
movswl
mov
les
das
mov
mov
inc
out
inc
or
cmp
sbb
jle
outsb
cmp
sub
icebp
jg
rolb
mov
in
lea
push
cmp
add
fcomp
enter
lret
fcomps
inc
leave
mov
repz
ret
loop
addl
push
pop
fs
stos
pop
xchg
mull
loop
adc
sahf
add
popa
dec
movsb
aam
xor
int3
and
jae
adc
test
jmp
das
or
sub
and
loop
lret
push
mov
dec
inc
ss
cmp
add
xlat
movsb
xor
mov
lahf
clc
mov
mov
add
lahf
repnz
fwait
addr16
jb
jmp
sub
cmp
loopne
inc
aaa
imull
sbb
fidivs
add
dec
push
dec
add
dec
stos
mov
cmpsl
outsb
cld
jp
mov
mov
daa
nop
enter
int3
sbb
cli
xchg
adc
loop
pop
mov
push
popa
or
push
inc
mov
or
movsb
jge
int
jge
xor
adc
pop
mov
movsl
shll
push
sub
cli
add
lahf
mov
jne
data16
cmpsl
xor
dec
mov
mov
test
arpl
nop
in
jo
inc
sbb
mov
xchg
pop
stc
andl
lret
loopw
inc
jle
mov
arpl
int
cltd
xor
gs
and
cmpsb
push
or
in
fldenv
mov
daa
out
jp
xor
cs
neg
jb
sbb
in
inc
jg
testl
fwait
jg
jno
cmp
sub
sub
in
sbb
test
xor
cmp
push
xor
sub
loope
add
repz
bnd
fsubrl
pslld
es
aam
add
xchg
dec
dec
adc
push
in
and
test
adcb
xor
xchg
add
mov
or
ss
mov
dec
imull
bound
mov
shr
cli
fsubr
xchg
xor
in
dec
xchg
in
pusha
icebp
push
mov
movsb
jmp
pusha
cmc
xlat
dec
inc
cmp
aaa
lret
xor
and
pop
add
jg
mov
push
mov
imul
shll
add
repnz
rclb
cmp
enter
fstps
popf
nop
mov
enter
jp
cmp
rep
push
xchg
xor
cmp
inc
scas
cwtl
sahf
mov
lods
or
xor
aas
mov
mov
jo
or
sub
movsl
sub
lods
hlt
in
mov
adc
add
sbb
aam
sub
or
or
mov
stos
mov
cmp
push
scas
leave
jae
jns
in
dec
xor
aaa
adc
repz
sub
mov
insl
cltd
cmpsl
scas
add
ret
xor
aaa
jnp
shl
sbb
adc
shll
jne
jno
adc
jb
jl
jg
aam
push
hlt
rcrl
sbb
mov
mov
movsl
lea
mov
test
push
or
cs
mov
xchg
jns
imul
out
inc
mov
mov
inc
outsl
inc
xorl
xchg
mov
xchg
mov
fisubrl
imul
xor
sarb
mov
ret
dec
sbb
pop
and
jl
je
add
sub
or
adc
sbb
add
xor
fadds
aas
cmpsl
addr16
test
sub
cmp
cmp
pop
pop
shlb
scas
mov
mov
inc
sbb
or
dec
mov
fucom
mov
sub
adc
sbbb
push
repnz
sub
add
scas
add
in
aam
mov
mov
dec
add
push
xor
imull
pop
mov
pop
outsb
and
sahf
sbb
in
jo
je
mov
movsl
in
in
push
xchg
adc
lahf
repnz
leave
fdivs
pop
mov
push
jo
and
lret
add
dec
enter
loope
cmp
pop
inc
adc
in
test
sbb
xor
jp
xlat
mull
and
stos
push
rolb
mov
sub
cld
fidivrs
fists
push
pop
add
cwtl
test
mov
stos
push
mov
out
mov
aad
or
and
dec
arpl
inc
jns
pushf
jne
xchg
inc
insb
addl
pop
pop
push
rcrl
add
cltd
or
fadd
sub
orb
pop
and
mov
add
sbb
sub
cltd
or
js
pop
nop
mov
and
pop
enter
outsb
out
icebp
mov
fidivrs
cwtl
jle
dec
push
pushf
add
clc
hlt
idivl
in
insb
xchg
dec
jp
and
notb
cmp
stos
jo
jle
idiv
pop
cmp
mov
push
das
and
mov
ja
sbb
ret
pusha
adc
into
and
test
cli
sahf
icebp
pop
inc
ss
mov
mov
jle
ret
mov
ja
dec
lea
insb
add
mov
push
test
sub
addl
pop
in
test
adc
stos
dec
lahf
cwtl
adc
ja
xor
or
xor
shll
or
jl
push
lock
xchg
mov
imul
sub
cs
mov
loope
mov
xor
sbb
in
in
stc
bnd
push
mov
dec
lods
scas
cmp
ja
mov
icebp
sub
cmp
mov
dec
xor
sti
sub
dec
xchg
adc
adc
add
dec
ja
pop
add
das
shrl
data16
mov
dec
cltd
daa
push
push
adc
rolb
xor
xorl
in
out
xor
aaa
loop
xor
pop
sub
cmp
xor
add
jg
mov
xor
lea
aam
rol
adcb
out
sub
add
lret
or
sbb
cmp
cmp
nop
fnsetpm(287
filds
xor
arpl
mov
lock
in
pop
jmp
or
cmpsl
push
and
fs
test
dec
add
lock
xchg
aam
movsl
jno
sahf
adc
popa
cld
jnp
flds
dec
in
pop
xlat
std
int
scas
adc
in
dec
inc
push
or
rcrl
sub
int3
fsubrs
inc
mov
xor
pop
push
cmp
pop
sbb
imul
lea
jae
sbb
iret
mov
mov
xchg
or
sbb
dec
sub
shl
das
lods
sbb
add
neg
or
popf
xor
mov
add
lahf
aaa
mov
fdivrl
lds
mov
and
sub
in
dec
cli
push
into
pop
fsubl
fbstp
int
sub
push
cmc
jns
or
iret
and
scas
sbb
mov
dec
mov
scas
cmp
mov
rol
and
push
jno
xor
das
jg
lods
test
push
sti
aaa
call
mov
and
rolb
and
out
fistpl
sbb
adc
or
movsb
std
sahf
and
mov
push
into
daa
imul
js
movb
test
sub
ja
sub
sti
pop
push
addl
or
stos
mov
popa
mov
test
xor
xchg
push
mov
lret
jns
inc
mov
std
lret
fidivrs
popf
sbb
popf
sbb
in
or
mov
adc
sub
imul
lahf
das
jmp
jl
ja
leave
lcall
add
mov
lods
jmp
dec
les
cmpsl
push
xor
shlb
and
sbb
call
pop
or
inc
xchg
dec
cmp
sbb
in
push
inc
add
sub
movsl
repnz
mov
adc
enter
xor
or
ret
pop
jmp
jmp
mov
inc
icebp
daa
addb
cmp
popa
and
push
nop
fisubrs
ret
and
mov
cld
not
xor
jne
aaa
std
pop
stos
sbbb
orl
dec
push
dec
ret
fxch
xchg
or
sub
dec
pop
cmpsb
mov
sub
mov
dec
mov
cs
and
cli
jb
lods
adc
addl
adc
fists
lock
pop
cmpsb
int
out
and
xchg
jno
call
sub
push
mov
pop
jp
mov
in
int
pop
leave
sub
mov
out
mov
int
pop
test
sahf
je
sbb
fs
mov
stos
aas
clc
mov
adc
mov
sarl
out
push
test
fdiv
imull
push
sub
adc
test
push
jno
test
jnp
jns
xor
mov
ja
jp
repz
push
jge
lret
mov
pop
xor
mov
pop
test
xor
lods
inc
push
jmp
pcmpeqd
inc
xchg
pop
sub
mov
pop
repz
mov
aas
inc
fcmovne
aaa
das
shlb
pop
cmp
add
inc
inc
push
dec
jo
popf
test
mov
int
dec
or
cs
test
xor
pushf
pop
das
shll
inc
sbbb
xchg
xchg
xchg
add
cmc
jge
mov
mov
sbbb
roll
pop
nop
pop
add
dec
jmp
js
rcl
pop
and
sti
sbb
mov
sbbb
andb
loopne
bound
dec
xorl
jle
loope
inc
sbb
add
pop
dec
and
mov
pop
push
leave
orl
cmp
lods
cmpsl
xchg
leave
jmp
stos
adc
stos
scas
aam
mov
ja
push
std
or
mov
mov
adc
add
imul
ret
mov
pop
loope
xor
faddl
cmp
jns
cmpsl
jns
cli
mov
fidivrs
loope
and
test
popa
test
mov
sbb
jmp
xchg
addl
imul
imul
cld
scas
sub
dec
mov
sarb
mov
arpl
aas
mov
scas
xchg
sahf
push
pop
push
inc
ficoms
and
inc
or
mov
je
pop
lods
fxch
lock
xchg
sar
and
stc
fwait
cs
bound
test
jnp
mov
pop
adc
cmpsl
cmp
in
fimuls
cmp
adc
jbe
push
into
jno
call
test
stos
gs
mov
aaa
out
out
int3
pop
jg
xchg
int3
mov
xorb
data16
sub
pusha
push
cs
adc
inc
dec
adc
clc
fidivrl
mov
cmp
popa
shrb
xor
popf
add
out
sub
mov
mov
jge
mov
nop
add
pushf
xchg
add
cld
and
mov
out
or
lods
xchg
stos
xchg
push
daa
pop
test
cltd
test
outsb
cmp
out
dec
push
push
aam
shl
or
mov
addl
loop
jge
shll
lret
fisubl
fs
je
mov
xor
loopne
addl
imul
pop
dec
sub
adc
outsl
mov
aam
lock
outsl
pop
ret
jg
jo
sbb
sub
lahf
push
ljmp
jo
push
mov
testb
jo
mov
xor
hlt
test
lahf
int3
cmp
push
mov
dec
mov
xor
inc
add
fmul
outsb
icebp
int3
sbbb
xor
mov
aam
cltd
pop
inc
sub
movsl
push
jb
push
or
lock
push
or
fidivl
fsubl
imul
stos
stc
out
mov
insl
cwtl
push
aad
in
mov
add
les
cmc
daa
sub
stos
movsl
daa
loop
rcr
xchg
xchg
in
lahf
mov
shrl
xchg
mov
jnp
jae
pop
lds
and
sub
push
push
inc
mov
xor
lret
mov
scas
xor
enter
lret
add
lcall
sbb
pop
rcll
sub
mov
iret
push
sub
sahf
and
je
fidivs
std
mov
js
jp
push
mov
jo
add
mov
sbb
les
cmp
pop
cmp
rol
dec
movsl
inc
lods
mov
jmp
sub
leave
movsb
fadds
adc
xor
notb
sbb
test
and
xlat
addr16
mov
ljmp
ljmp
push
add
pop
mov
jns
push
push
test
mov
stc
mov
mov
and
js
adc
dec
sbbb
rcrl
fwait
movsl
cmp
xor
pusha
add
push
enter
lret
sub
mov
jp
sub
pop
xor
xor
jne
repz
loop
pop
adc
or
mov
xchg
inc
push
insl
adc
mov
sbb
cmp
cmp
ret
xor
mov
pop
movsl
scas
jecxz
dec
xchg
push
ja
mov
mov
dec
jmp
fstpl
scas
lret
cld
stos
jp
mov
pop
outsl
or
adc
rolb
or
andb
jne,pn
xor
jge
or
add
ret
pusha
adc
loop
in
push
in
sub
loope
push
mov
hlt
push
mov
int3
add
dec
cmp
jb
xchg
and
jb
or
jns
pcmpeqd
mov
gs
pop
das
popf
mov
adc
jns
daa
pop
fldenv
or
jae
repnz
add
stos
adc
cld
repz
sbb
jecxz
data16
jns
xor
lcall
push
leave
scas
fdiv
imul
filds
mov
inc
imul
subl
add
imull
shrl
mov
or
in
imul
scas
and
jae
adc
jmp
mov
rcl
xor
bound
sub
sub
lcall
mov
xchg
daa
sbb
mov
push
or
xor
and
incl
jae
inc
das
mov
mov
cld
push
sub
ds
sub
lret
dec
into
aas
into
mov
cwtl
cli
sarb
mov
dec
call
push
cmp
filds
insl
jb
adc
mov
cmpsb
cmp
repz
lret
aam
mov
sub
push
dec
jb
inc
or
rolb
movsb
xlat
fistl
dec
stos
cmc
out
ja
clc
fistps
cmp
xchg
push
sarl
mov
nop
add
ja
leave
or
nop
or
rcr
pop
lahf
sub
fucomip
psubusb
fmuls
lahf
mov
jnp
mov
cmpsb
mov
jmp
cmp
lcall
jle
stc
or
packsswb
test
push
mov
sub
dec
addl
cld
sbb
mov
cmp
xorb
sub
dec
push
mov
xchg
pop
jg
orb
in
rclb
or
and
mov
xor
mov
lods
lock
scas
loope
fistps
stos
rolb
cld
test
test
dec
clc
fldt
dec
mov
pusha
pop
xchg
jne
xlat
testb
push
hlt
push
cmp
insl
sti
or
sub
mov
loope
pop
inc
push
xchg
xchg
pop
mov
adc
push
cmp
aad
mov
push
xchg
jnp
movsl
mov
repz
cmp
fwait
add
mov
sub
xor
xor
xchg
ja
loop
bound
pop
clc
dec
mov
push
mov
and
outsl
sbb
shll
xor
sbb
pop
dec
push
mov
es
xchg
xor
inc
pop
dec
les
xchg
cmc
arpl
inc
cltd
scas
or
inc
movsb
lcall
sti
dec
lret
mov
push
test
mov
jle
adc
movsb
pop
lea
fwait
inc
mov
push
jns
fcoml
fwait
ret
enter
filds
jbe
mov
movsl
fneni(8087
hlt
dec
mov
mov
cmp
inc
sarl
jl
mov
push
sbb
mov
lahf
or
repnz
mov
mov
and
jecxz
lock
insb
sti
and
mov
mov
pushf
movsl
sub
sub
push
std
mov
cmp
mov
and
cmp
pop
xor
cmp
add
fwait
fwait
movsl
lds
in
aam
rorb
push
pop
push
cmp
add
shl
cmp
cmc
stc
and
sar
into
jnp
and
out
sbb
mov
popf
in
lcall
pop
clc
xor
xchg
aaa
mov
sbb
xchg
adc
lods
or
std
mov
adc
mov
repz
dec
daa
xchg
insb
adc
and
push
sub
mov
and
cmp
cmp
and
mov
in
pop
mov
mov
lret
inc
cwtl
mov
push
jnp
mov
addl
cmp
sti
mov
mov
pusha
rcrb
pop
push
mov
ret
lret
or
adc
sub
jg
sbb
subb
jl
mov
push
jmp
sbb
mov
cmpsl
mov
dec
cwtl
cmp
sub
push
push
xor
sbb
or
mov
fwait
xor
fwait
stos
fisubl
scas
inc
xor
fdivl
inc
mov
xor
cmc
imul
call
data16
and
push
xchg
insl
ss
xor
dec
stc
jns
icebp
in
sub
pop
stos
xor
dec
cmp
aad
inc
mov
lret
add
cmpsb
ja
mov
cmp
push
test
pop
out
sub
aam
or
pop
jbe
fsub
xchg
sub
cmp
rclb
ret
or
test
out
xchg
pop
push
push
pop
add
xchg
xchg
jp
fbstp
insb
and
jae
cmpsl
add
dec
lods
dec
lods
push
push
jecxz
jae
adc
into
xor
mov
decb
into
push
sub
xlat
pop
sub
or
mov
pop
pop
ss
sub
stos
shrb
outsl
leave
notb
xlat
and
insb
pop
imulb
push
call
jnp
and
lock
lods
test
cli
pop
mov
lods
or
into
or
ljmp
sub
pushl
add
jecxz
dec
out
inc
xchg
xor
adc
js
jge
pop
lret
add
insl
sbb
mov
or
mov
in
push
or
sub
jg
out
push
lds
shrb
jb
xchg
inc
cli
loopne
icebp
xchg
testb
push
jge
cmc
and
mov
push
stc
pop
pop
iret
lret
aad
sbb
dec
xor
pushf
daa
inc
cli
push
scas
es
inc
jbe
daa
je
push
pop
imul
inc
ss
mov
aas
bound
lods
jno,pn
movsl
ss
sahf
add
das
add
pop
das
imul
add
adc
jecxz
push
pusha
rclb
enter
adc
rcrl
addb
int
sbb
xor
int3
cli
nop
dec
add
push
rcr
test
mov
shlb
dec
mov
sub
sub
popa
scas
or
mov
or
adc
leave
xor
inc
mov
inc
icebp
add
imul
mov
cmpsl
cmpsb
pop
jle
inc
and
fidivrs
add
xchg
insl
in
mov
rcr
aam
cmp
pop
xor
loope
cltd
mov
push
lods
xchg
nop
hlt
fldt
dec
pop
aam
sbb
push
cs
and
fs
mov
ficompl
mov
hlt
jbe
adc
cmc
push
ja
sbbb
out
inc
daa
imul
add
xchg
mov
xchg
pop
sbb
mov
lcall
cmpsl
sbb
sbb
dec
test
rorl
xor
outsl
int3
inc
mov
pop
in
xlat
sbb
stc
cmp
shll
xchg
insb
fisubs
popa
test
addb
adc
imul
dec
fmuls
sbb
jge
in
mov
mov
xor
fdivl
enter
push
negb
popa
mov
mov
scas
ljmp
lods
mov
out
cmc
inc
and
mov
dec
int3
icebp
jecxz
cmpsl
into
push
imul
call
pop
push
divl
mov
fsubrp
jg
mov
jae
sti
out
sbb
shr
cmp
cmp
test
testb
push
mov
dec
sbb
int
in
jns
fwait
dec
aaa
push
push
test
outsl
movsb
cmc
imul
xor
jmp
and
repz
cmp
out
in
and
pop
fimull
dec
cmpsb
popa
hlt
rolb
inc
cmp
xor
hlt
lret
jl
dec
outsb
mov
jne
movsl
adc
adc
mov
popa
and
xchg
dec
out
fsubs
jge
add
xorb
or
or
fisttpl
xchg
out
loopne
and
dec
lock
jmp
cld
je
hlt
call
adc
insl
aam
jecxz
dec
loopne
add
mov
sbbb
mov
xchg
dec
imul
icebp
or
shll
subl
in
les
mov
lods
mov
push
dec
dec
sub
push
call
cmpsl
sti
fimuls
aad
lahf
pop
xchg
aam
call
xor
inc
mov
sub
jl
add
push
and
jg
fsubl
add
fmuls
out
fadds
mov
jge
mov
mov
push
in
pop
out
or
test
sub
push
popa
xor
in
insl
jnp
mov
fcmove
fdivrs
and
sbb
lret
pop
sbb
push
loop
and
pop
push
outsl
jecxz
mov
sub
je
daa
push
xor
test
xchg
sub
cmp
jle
pop
mov
dec
jge
inc
push
pop
lret
in
fisubs
nop
popf
aas
je
into
stc
and
lods
add
cmpsb
shl
hlt
sub
test
outsl
pop
icebp
ja,pt
mov
int3
or
and
lock
jp
cmc
lahf
mov
int
jp
dec
clc
mov
sbb
out
push
out
mov
lret
xor
lcall
aaa
cmpsb
jp
lock
repnz
sub
xorl
xor
test
into
out
cltd
aaa
repnz
add
clc
cwtl
mov
push
or
adc
xor
inc
mov
sbbb
lahf
cmc
xor
mov
inc
inc
push
aam
or
or
adc
cmp
scas
jge
out
cmp
push
pop
leave
pop
jbe
mov
ja
shll
pop
dec
clc
mov
je
sbb
mov
scas
pushf
mov
dec
push
jbe
sarb
adc
push
mov
and
in
mov
jbe
shl
jmp
cld
negb
and
ss
hlt
loope
adc
sbbl
push
xchg
and
pop
aad
push
sub
push
addr16
gs
lmsw
add
lahf
inc
mov
clc
daa
ljmp
xchg
cmpl
sbb
mov
loopne
inc
loop
pop
aad
cmpsb
loopne
push
xor
and
lret
in
std
jnp
sbb
mov
pop
cmp
mov
push
hlt
dec
push
jno
cmp
pop
adc
xchg
inc
mov
xor
pop
jg
adc
mov
addr16
ss
adc
aam
jae
add
jp
xor
jbe
mov
and
adc
push
in
dec
lret
mov
or
push
idivb
inc
push
pusha
out
pop
nop
push
or
adc
mov
cmpsl
xor
fdivrl
pop
out
fcmovu
mov
inc
xchg
sbb
xchg
pop
sbb
mov
mov
jo
mov
insb
adc
call
mov
daa
pop
pop
scas
cld
mov
aaa
or
stos
jg
mov
ds
pop
aaa
inc
add
xchg
fcoms
mov
adc
daa
shl
mov
addr16
push
jno
addr16
sbb
dec
push
push
rclb
xor
fistl
pop
jne
xlat
push
int
rcrb
repz
push
repz
fstps
mov
insb
ret
cmpsb
jns
jnp
repz
or
jg
pop
aam
pop
mov
sahf
or
loop
push
scas
mov
stc
xor
lods
adc
cltd
mov
stos
jmp
rorb
pop
push
fcompl
rol
or
add
push
fstps
fdivrl
and
push
out
mov
pushf
into
in
test
adc
ss
mov
pushf
lds
or
mov
cmp
adc
loop
mov
cmp
in
ss
adc
mov
or
cmp
lods
xchg
inc
adc
popf
pop
stc
xor
icebp
in
pop
adc
inc
xor
lret
sbb
mov
xchg
and
pop
lret
test
imul
push
jno
jp
fdivrl
test
mov
add
push
js
daa
stc
outsb
stc
lods
ljmp
data16
jl
mov
cmpsl
stos
loop
mov
mov
rorb
imul
call
jb
cmp
pop
out
lods
inc
das
orb
in
pop
add
and
cli
jb
bound
cwtl
or
mov
jo
cmp
cmc
ret
push
ljmp
push
push
adc
popf
jg
loope
mov
loope
xchg
data16
dec
ljmp
xor
xor
andl
push
inc
in
pop
mov
sti
inc
ja
inc
cvtps2pi
idiv
xchg
sub
push
mov
pop
aaa
sub
cmpsl
and
add
inc
pop
inc
jnp
add
cltd
out
aam
iret
imul
js
stc
imulb
movsb
mov
icebp
test
pop
adc
mov
adc
sub
and
testl
int3
sbb
mov
fstps
mov
cmp
jle
add
dec
adc
push
jmp
icebp
js
out
insl
or
push
mov
mov
mov
aam
pop
pusha
imul
push
mov
adc
loope
fisttps
stos
mov
adc
pop
test
aad
incl
add
mov
fdivrl
mov
sub
arpl
dec
dec
cmpsb
mov
add
popf
pushf
popf
fsubrs
pop
insl
stos
emms
outsl
jns
add
adc
and
repz
hlt
dec
loope
scas
push
jle
lock
mov
insb
jge
ret
ret
mov
sub
jg
dec
sti
daa
mov
mov
scas
dec
mov
sahf
jno
arpl
mov
test
inc
inc
fbstp
and
xchg
stc
sbb
lcall
movsb
and
cmpsb
cmpsb
pushf
leave
ss
mov
aam
mov
pop
nop
icebp
xchg
fidivrs
push
sbb
movsl
add
jge
sub
sub
in
leave
mov
or
std
ss
mov
cs
sbb
stos
fcoml
out
cltd
add
cmpsl
inc
lock
adc
mov
inc
ficompl
push
cmp
or
mov
lock
fisubl
scas
pusha
dec
out
cmp
inc
cmp
imul
sbbl
test
daa
mov
ficomps
fcmove
pop
lahf
mov
jbe
and
sbb
jo
rolb
xchg
jmp
ljmp
stc
adc
mov
lds
jbe
lret
les
imul
cmp
addr16
sub
mov
push
jo
sub
pop
stos
cli
inc
out
shr
imul
mov
xor
lds
aad
adc
sub
lods
stos
mov
dec
mov
jle
arpl
scas
out
hlt
andl
jne
adc
arpl
adc
jne
sbb
daa
fcom
or
fisubl
pop
sbb
mov
mov
push
xor
sub
mov
jae
gs
xchg
fldenv
cmp
lds
mov
sub
push
jbe
shrl
mov
fs
xlat
stos
and
icebp
or
add
xchg
outsl
in
lret
popa
imul
jl
pop
shll
push
or
mov
inc
add
aam
push
jge
inc
sub
repnz
outsl
mov
pop
xchg
push
orb
loopne
and
pop
mov
popa
out
xchg
rolb
ror
and
mov
jmp
movsl
xor
mov
jge
loopne
add
rcrb
jb
sti
in
push
inc
test
or
testl
repnz
add
in
scas
inc
inc
dec
pop
insl
push
push
mov
stos
ja
leave
push
popa
inc
mov
sarl
aaa
mov
jge
pop
cwtl
dec
jb
idivb
jecxz
ds
lcall
fisubrs
mov
mov
mov
pushl
loop
leave
rcrl
xchg
inc
or
or
cmp
data16
lcall
stc
jne
ljmp
inc
jg
inc
adc
xchg
push
or
stos
outsb
fisttpll
ret
ss
in
fsubrl
cmp
enter
push
pop
pop
rcr
xor
movsl
xor
cwtl
cmp
sub
adc
scas
mov
dec
jmp
pop
bound
mov
jb
cmpsb
pop
or
imul
sbb
sbb
dec
pop
pop
fcomps
ja
lods
push
push
nop
xor
sub
les
cs
scas
jbe
loope
mov
jge
push
cwtl
xchg
ret
xchg
mov
lret
ja
test
jge
mov
fidivrs
or
add
hlt
mov
adc
pop
aas
adc
cli
filds
xchg
push
js
sbb
sti
int
mov
mov
xlat
lds
dec
mov
inc
and
mov
xchg
inc
push
push
sub
bound
xchg
or
rolb
fsubr
loope
cmp
mov
lea
in
sub
mov
mov
sub
sub
out
jecxz
and
pop
add
pusha
fildl
inc
mov
xchg
push
push
push
pop
data16
mov
popf
lahf
repnz
add
or
jno
enter
das
pop
scas
jnp,pt
das
jno
mov
icebp
mov
test
cmp
cmp
jmp
xor
cltd
and
jge
pop
mov
push
sbb
rcrl
xor
dec
scas
mov
lcall
push
adc
je
inc
popa
pop
jmp
dec
cwtl
cmpl
mov
lahf
lods
push
insl
jp
shlb
adc
pop
and
cld
je
sahf
scas
cmp
pop
mov
je
cld
mov
ljmp
adc
cmp
leave
lahf
nop
clc
push
rolb
or
jo
fwait
cltd
dec
ret
xchg
push
insl
mov
fsub
test
test
sub
and
lea
lods
jnp
or
data16
sbb
lock
fistps
rcl
in
mov
cmpsl
icebp
ficoml
push
or
dec
or
cmp
pop
push
aam
xor
mov
adc
gs
add
aas
inc
add
jbe
test
jbe
in
cmpsb
xchg
or
pusha
inc
test
gs
jns
stos
push
out
lcall
mov
sbb
iret
add
jbe
ljmp
jl
jns
add
adc
loopne
repz
sub
clc
inc
mov
sbb
pop
add
sar
pusha
clc
pop
add
push
xor
popa
mov
cltd
sbb
pop
push
js
loope
inc
mov
and
jo
dec
jae
jo
xchg
gs
cmp
dec
jmp
fnstenv
cmp
or
dec
pop
and
adc
xor
cmp
xor
repnz
psrld
sub
or
dec
sbb
leave
imul
aas
jmp
shr
inc
push
mov
repnz
pop
in
out
leave
fnstsw
out
rolb
push
testb
mov
sub
popa
in
es
push
stc
jno
out
ds
mov
jle
iret
dec
sub
mov
pushf
mov
dec
xor
pop
pushf
int3
mov
mov
iret
ds
sub
mov
paddq
cmpl
cs
push
jne
inc
imul
fidivrl
mov
xor
sbb
xchg
adc
ja
jae
repnz
je
movsl
and
icebp
mov
jl
shlb
lock
clc
test
jns
imul
and
pcmpgtw
jge
sub
push
cmp
cmp
xor
daa
lock
outsb
mov
mov
mov
out
ja
sub
push
push
xor
in
xchg
mov
clc
ljmp
dec
xor
fmull
inc
fcoml
sti
add
adc
jecxz
and
movsb
test
add
sbb
movsl
dec
adc
xchg
pop
or
and
mov
mov
push
inc
stc
bound
mov
lcall
lds
stc
push
leave
in
lods
mov
jb
pop
adc
aaa
shll
inc
xchg
cmpl
mov
fcmovnbe
push
flds
pop
loop
mov
cltd
mov
jnp
imul
outsl
push
mov
inc
push
in
inc
adc
jl
push
jae
mov
icebp
mov
loop
mov
sbb
je
push
outsb
ja
jle
test
jno
mov
rcr
cmc
sbb
dec
movsb
mov
or
fdivs
in
addr16
adc
pop
and
push
push
outsl
sbb
aad
and
add
or
or
loope
in
int
or
rcll
mov
loope
push
sarb
ja
fld
fwait
mov
xor
aas
mov
mov
cmpsb
repz
sub
push
jg
outsb
push
enter
in
nop
mulb
bound
movsb
addr16
imul
fwait
jae
fisubrs
jno
add
xlat
loope
cmpsb
shl
loop
mov
add
dec
rcrl
cmc
fcompp
inc
fs
push
fistpl
inc
aas
push
clc
inc
and
filds
enter
fnstenv
pop
imul
adc
jle
je
mov
sub
stc
dec
xchg
insb
xor
sarb
sub
mov
sub
aas
repz
ret
jns
sub
mov
or
xchg
stc
sbb
stos
mov
test
jecxz
in
jg
cmpsb
repz
jg
popa
mov
cli
mov
lahf
sub
xchg
mov
inc
scas
sar
stos
inc
es
xor
jbe
ret
xchg
inc
xchg
cmp
scas
pushfw
dec
aas
lods
mull
xchg
jo
bound
or
push
fistps
push
ljmp
fstpt
mov
mov
jp
call
push
je
jmp
cwtl
push
pop
sub
xchg
int
ljmp
pop
push
and
and
xchg
addb
jnp
sbb
push
jno
out
push
hlt
jecxz
mov
psubd
jne
cmp
add
xchg
insl
push
dec
jne
loop
mov
decl
sbb
addr16
cmp
adc
mov
jns
sub
daa
adc
jb
dec
xorb
xor
aad
mov
ja
cmp
add
cmp
push
jno
and
mov
xchg
mov
dec
jne
sub
mov
jbe
sti
mov
mov
into
out
in
add
xchg
ds
dec
repz
xor
xor
mul
push
repz
lods
sub
xchg
movsl
rorb
mov
xchg
pop
and
push
sub
jp
jnp
aas
push
outsl
jne
dec
pop
adc
int3
lods
iret
call
pop
pop
bound
lret
inc
arpl
cli
pusha
mov
aaa
ljmp
stos
ret
xchg
cmp
adc
mov
xchg
in
test
enter
adc
mov
inc
push
gs
je
mov
pop
sti
icebp
jmp
add
pusha
jle
filds
xchg
icebp
sbb
push
pop
cmp
jb
movsb
rcrb
inc
inc
xchg
jp
into
jb
jae
mov
test
popa
mov
mov
testb
call
test
sub
mov
push
mov
lahf
lods
into
mov
mov
in
das
or
mov
xchg
push
xor
pop
and
cwtl
add
dec
cmp
add
mov
push
push
faddp
mov
shll
movsl
dec
mov
repz
pop
xor
or
psubsb
fcompl
je
pop
mov
movzwl
jp
adc
pop
adc
movb
inc
xchg
cmp
aaa
ficomps
data16
enter
shll
pop
mov
bound
xchg
movsl
xchg
shll
cmp
shrl
leave
cmc
out
xor
cmp
and
sub
mov
mov
jmp
lds
test
pop
jbe
lock
mov
les
mov
addr16
lock
push
scas
jns
push
xchg
aas
lcall
sub
imul
mov
jno
adc
jmp
gs
out
out
jg
lds
xchg
rol
popf
adc
int3
outsl
pop
movsl
mov
cmp
and
jno
data16
call
adcb
push
bound
inc
lret
xor
test
pop
cwtl
cli
sub
sbb
mov
scas
push
pop
movsl
fcomps
icebp
push
cmp
or
adc
fisubrs
mov
insb
xor
jg
js
sub
std
loopne
and
xchg
dec
jp
add
ja
jne
outsl
mov
call
push
mov
iret
movsl
outsl
mov
jg
cli
movsb
mov
sub
and
out
add
test
xchg
and
stc
rorl
mov
push
jle
cwtl
lahf
cmp
test
jg
or
popa
mov
xor
hlt
lret
adc
nop
fisubrl
add
sub
shlb
rcr
inc
ljmp
pushl
xchg
insl
loop
fs
push
sbb
mov
lods
dec
cmpsl
out
lahf
sbb
add
xchg
or
mov
add
xorl
cltd
jae
in
push
jb
and
xchg
addr16
mov
pop
dec
fisubrs
dec
mov
test
sbb
jno
ljmp
xchg
xor
fmuls
outsl
pop
out
xor
jmp
inc
pop
cs
sbb
mov
out
sbbb
js
mov
mov
dec
lock
aad
mov
cs
mov
adc
sub
rclb
adc
sub
mov
fcoml
push
ret
lcall
popl
adc
mov
in
mov
sub
inc
inc
cmp
outsb
xchg
stos
adc
cltd
sub
xorl
sub
jmp
bound
xchg
das
jnp
int
and
outsb
fldcw
out
repz
mov
or
xlat
push
lret
add
inc
leave
in
test
aas
ret
push
incl
stos
or
mov
jle
stos
dec
add
scas
xchg
in
mov
pop
stos
add
mov
push
jle
daa
cmp
fsubrl
call
or
int3
ja
jmp
test
dec
je
add
mov
aam
stos
mov
shrl
sub
push
imul
inc
loop
cmpsl
vpslld
mov
jle
mov
mov
hlt
hlt
and
sub
loope
fidivl
mov
fldenv
hlt
mov
cmpsl
out
movsl
stos
dec
mov
rolb
ret
add
pusha
jle
pop
push
and
jbe
cmpl
cmpsl
repnz
int
aad
into
ret
out
sahf
or
ljmp
adc
cbtw
sub
arpl
mov
xchg
int3
dec
pop
adc
jge
add
int
push
outsb
mov
or
inc
test
aad
sbb
data16
push
dec
sub
mov
xchg
ficompl
jb
fldcw
jg
xor
adc
mov
andb
test
mov
cmp
inc
in
add
push
pop
sub
fwait
in
mov
or
sti
or
stc
lds
pop
and
dec
cmp
add
sar
in
add
push
aam
pop
ljmp
fisttps
sub
in
pop
fcompl
cmpsb
test
movsb
es
mov
mov
int3
and
inc
mov
mov
xchg
cmp
cmpsb
adc
and
sbbl
mov
aaa
enter
mov
push
add
xlat
ljmp
add
sarl
and
ljmp
es
out
cmpsb
enter
xchg
sti
cmp
je
stos
mov
icebp
in
add
jmp
pusha
cmp
js
sub
add
shl
jbe
lret
jecxz
into
jno
adc
lcall
xor
xor
call
cmp
sbb
scas
push
jle
jp
and
movsb
or
ja
out
stos
sbb
pop
inc
enter
push
mov
push
lea
fdivrl
and
xchg
fsts
addr16
jno
imul
or
repnz
test
pop
hlt
insb
lods
cmp
xchg
lds
xchg
jp
jp
push
out
mov
xchg
push
push
ds
and
or
ljmp
xor
popa
add
adc
adc
clc
les
jb
js
jbe
push
in
or
repz
aad
arpl
inc
pop
in
loop
lret
xchg
imul
add
xchg
stos
cli
mov
mov
cmpl
sahf
inc
insl
hlt
mov
jne
adc
fisttps
flds
sub
mull
sbb
jnp
jl
test
loopne
push
call
stos
jnp
cmp
pop
sub
popa
push
add
mov
bnd
repz
inc
fmulp
cmp
lret
sbb
bswap
stc
mov
popf
lock
andb
dec
dec
xor
movsb
add
push
mov
pop
mov
test
movsl
mov
lahf
and
jl
xchg
cmc
mov
sub
or
inc
and
add
out
int3
loopne
sub
out
and
ret
jae
pop
cltd
or
add
pop
dec
ljmp
cmp
sbb
cmp
mov
inc
daa
xchg
mov
jno
pop
pop
shl
in
lret
sub
sbb
iret
sub
xchg
out
mov
in
int3
mov
cli
adc
cmp
movsb
adc
lock
cmp
mov
sub
arpl
xor
ss
jo
xchg
sti
push
lock
adc
rcrl
pop
dec
inc
addr16
push
rcl
rcl
scas
dec
jne
jmpw
inc
daa
ds
pop
lods
in
mov
repnz
aad
push
std
call
mov
xchg
or
ljmp
out
push
add
or
sub
inc
jnp
jb
mov
dec
imul
movsl
mov
dec
lret
int
sub
or
outsl
imul
inc
xor
push
xchg
ret
add
icebp
add
and
and
cmp
mov
sub
lret
sub
sub
das
dec
dec
ds
addr16
sbbl
fs
pop
cmpsb
in
mov
sbb
mov
insl
sbb
lret
loopne
jb
add
fadd
popa
pop
xchg
movsl
mov
shl
mov
inc
sub
mov
cmpsl
pushf
scas
rcrb
add
std
jnp
andl
sti
jecxz,pn
popf
hlt
test
jb
stos
cmpsl
xor
shl
or
ret
mov
pop
lret
jno
or
cmpsl
mov
pop
mov
jle
cld
or
inc
xor
movsl
ljmp
mov
out
mov
jno
test
mov
mov
enter
mov
ljmp
lret
ja
xchg
shl
add
pop
jg
test
cmc
jbe
ret
and
popl
stos
lahf
inc
mov
push
in
lret
sbb
imul
xor
mov
fucomip
pop
push
fnstenv
adc
pop
fnstsw
cmp
pop
mov
pop
sbb
mov
fbstp
sti
xchg
dec
xchg
cmp
jl
inc
sub
pop
fnstenv
mov
xor
pop
sbb
mov
int
cwtl
imul
add
arpl
lret
inc
cmpsl
push
push
or
lea
nop
lret
out
insl
jnp
hlt
jg
in
aas
xchg
mov
xor
adc
mov
adc
xchg
scas
loop
imul
popa
pop
fdivr
adc
push
mov
orb
data16
mov
adc
cmp
pop
inc
je
rcrb
jp
stos
mov
lahf
cmpsl
mov
push
xlat
insl
repz
in
add
int
cwtl
xor
cmp
xchg
cld
iret
sarl
mov
dec
xlat
pusha
inc
rcl
push
push
lahf
loop
loopne
orb
jo
push
cmpsb
pusha
mov
lea
stos
mov
ret
jns
call
push
bound
es
mov
aaa
rolb
xchg
and
pop
mov
test
adc
push
mov
sub
in
cmp
orl
shll
sar
xchg
or
movsl
mov
push
mov
adc
cmpsl
push
outsl
mov
jno
xchg
adc
ficoml
xchg
sbb
and
rcrb
leave
in
jns
adcl
sub
jno
xchg
outsb
pop
frstor
inc
lret
lahf
adc
lret
lahf
imul
push
jns
jmp
sub
jmp
pop
cltd
test
lods
xchg
sbb
jge
cmc
fdivrl
xchg
aad
inc
mov
fisttpll
jbe
pop
lods
mov
enter
inc
dec
lret
jo
test
pop
repnz
ds
cli
sub
insb
xchg
xchg
and
xor
add
data16
lods
dec
xchg
jl
push
ljmp
mov
lcall
inc
je
mov
call
xorl
sahf
mov
cmpl
into
mov
mov
insb
enter
arpl
fcoml
aaa
mov
cmp
jns
in
inc
fidivl
add
dec
push
in
xchg
repz
pop
dec
loopne
loop
cmp
out
lret
mov
pop
xor
pop
mov
ret
aaa
movsb
out
dec
xchg
pop
lds
jns
xchg
and
lahf
pushf
inc
pusha
sub
mov
dec
adc
sub
pop
mov
movsb
into
sbb
jl
mov
subb
es
lods
add
test
mov
mov
mov
fwait
mov
jnp
popa
or
cltd
popa
cmpsl
addr16
inc
adc
inc
add
inc
and
aad
iret
shlb
jbe
sub
ret
mov
scas
mov
sbb
test
or
movsl
aaa
cmp
or
and
sbb
xlat
and
push
xor
insl
adc
adc
leave
pusha
or
repz
mov
sub
icebp
popa
add
pusha
dec
mov
rcl
test
stos
out
cld
xchg
popa
pop
cmp
outsl
bound
xor
pop
jne
xor
or
pop
sbb
sub
push
out
ret
in
add
jae
pop
sbb
add
jne
icebp
mov
push
lods
inc
jnp
xchg
lock
fstps
sbb
cmp
jecxz
lea
filds
arpl
dec
push
ljmp
mov
xchg
jns
mov
pop
loop
fbld
and
movb
pop
mov
aam
mov
sti
cmp
cltd
daa
jle
jns
fwait
xor
sbb
inc
mov
lods
mov
pop
fcompl
xchg
jb
inc
mov
scas
mov
lcall
shlb
sub
cli
filds
push
adc
dec
push
lds
ja
and
mov
fistpll
cmp
jge
add
cmp
push
push
jg
movsl
and
mov
mov
mov
xor
movsb
push
hlt
pop
mov
push
popf
pop
dec
enter
cmp
cli
pop
sarl
and
shrl
sub
hlt
cld
fistpll
lea
xor
adc
or
hlt
cmpsl
or
pop
cld
into
pop
fnstsw
fldcw
out
jnp
pop
sub
das
fildl
or
lods
push
jmp
xor
inc
ret
adc
adc
out
cmp
pop
inc
aam
jmp
repnz
add
lods
mov
sbb
jecxz
cmp
jg
scas
les
or
mov
mov
out
aaa
mov
pop
outsb
xchg
fcmovnbe
push
sbb
mov
je,pn
push
imulb
pop
jbe
mov
xchg
mov
xchg
incb
push
sbb
lods
dec
mov
inc
inc
cs
lds
dec
iret
inc
lret
test
ds
outsb
adc
divl
scas
adc
jecxz
sbb
dec
and
lds
pop
cld
mov
mov
dec
daa
inc
mov
fcomps
xor
mov
push
cli
xchg
cmp
and
mov
mov
mov
imul
mov
fisttps
jp
xor
rclb
stos
cld
ror
dec
jmp
fucomip
push
inc
rcll
inc
repz
push
cwtl
add
xor
arpl
pushf
ret
cmp
xchg
out
fldenv
fsubs
subl
stc
cmp
and
movsl
pop
subb
mov
ret
xor
mov
insl
mov
xlat
mov
or
adc
repnz
jmp
movsb
nop
pop
adc
or
clc
jl
pop
add
int
xchg
dec
sti
das
pop
ja
pop
das
sbb
std
push
cs
pop
dec
out
sbb
jno
stc
push
or
not
repz
adc
ror
cmp
dec
dec
add
stos
nop
or
mov
mov
xchg
outsl
adc
jb
or
mov
and
movsl
cmp
sti
jle
add
xor
cld
in
lods
mov
pop
sbb
lds
outsb
jge
jbe
cmp
int3
cmp
xor
je
xor
das
shrb
cltd
rclb
push
add
inc
js
fstpt
mov
push
test
out
scas
incl
fdivrl
adc
test
lret
push
inc
inc
shrl
inc
or
sub
stos
daa
xor
jns
dec
mov
out
mov
cltd
test
xchg
mov
pop
faddl
inc
inc
xor
lcall
mov
pop
scas
lea
mov
outsl
fs
bound
xchg
or
pushl
push
pop
pop
sub
pop
lods
inc
xor
cmp
and
ss
sbb
divl
dec
xchg
popa
std
jae
add
xchg
jne
jg
call
or
or
shlb
and
aas
shrb
insl
negl
dec
push
cmpb
insl
xchg
sbb
in
xor
xchg
or
add
pop
push
mov
shl
fwait
jmp
aam
cmp
lods
gs
sbb
cmp
pop
mov
notl
ja
push
shr
lahf
add
adc
dec
out
pushf
aas
push
data16
mov
pop
ss
sti
jge
ljmp
mov
xor
fists
push
movsb
inc
aaa
jns
dec
jbe
shll
sti
mov
sbb
in
dec
or
lods
divl
cmp
mov
xor
jp
adc
insb
mov
inc
xchg
sbb
xor
cld
mov
jns
scas
in
adc
sub
sahf
popf
or
scas
imul
xorl
sub
push
roll
pushf
add
sub
shll
add
pushf
dec
or
jnp
jae
sbb
pop
xor
add
jp
dec
ret
push
cmpsb
sahf
pusha
push
mov
push
loope
call
imul
inc
es
loope
mov
in
mov
nop
add
dec
stos
xor
fnsave
and
mov
or
fsubs
jg
inc
shl
lods
loopne
xor
pop
ja
fwait
xor
inc
sub
es
data16
mov
mov
insb
imul
fsubl
mov
in
cwtl
xlat
adc
push
aaa
in
dec
int
fdivr
iret
aas
jb
or
ja
and
imul
divb
cmp
push
lock
int3
dec
lcall
dec
mov
push
jne
add
adc
mov
lock
addl
mov
std
test
cmpsl
push
dec
mov
xor
subl
insl
cltd
stos
mov
mov
and
aas
ror
xor
leave
cmp
ficompl
mov
js
test
lds
xchg
xor
rcll
dec
pushf
out
data16
cli
pop
addb
hlt
xchg
adc
iret
test
loopne
xchg
lcall
add
hlt
adc
mov
pop
imul
xchg
popf
cmc
mov
jp
dec
scas
xor
outsb
loope
xchg
sbb
xor
test
jmp
adc
call
cmp
sbb
xchg
int3
sub
addb
sbb
jae
in
orb
repz
inc
adc
js
sub
push
mov
lods
scas
sbb
pop
mov
jl
and
ss
pop
xor
push
jae
inc
push
in
loop
sub
jno
fwait
jns
adc
dec
scas
xchg
lods
fisttps
roll
fldcw
xor
in
sub
sbb
arpl
std
inc
mov
lret
inc
cs
ja
inc
push
dec
cmp
cmp
enter
pushf
sbb
fnstenv
sub
frstor
dec
cltd
ds
int3
and
cs
dec
aad
in
int
adc
adc
jnp
xchg
xchg
int
jb
sbb
inc
add
push
dec
mov
xchg
mov
xor
jmp
sub
and
cmc
push
nop
ret
mov
mov
dec
jno
outsl
call
pop
pop
xchg
or
mov
or
fistpl
das
dec
xor
mov
pop
mov
subb
jno
mov
mov
aas
xchg
out
xchg
int
ljmp
mov
add
out
or
lcall
inc
addl
inc
out
mov
ljmp
pusha
jp
xchg
repnz
xor
mov
inc
jle
push
popf
xchg
sub
fcmove
call
popf
clc
fdecstp
pop
out
insl
push
or
shlb
mov
popa
pop
xor
sahf
and
fsubrs
int
stos
scas
aas
xor
xchg
mov
push
and
add
lcall
rclb
std
popf
lret
ljmp
sub
mov
jg
aam
aaa
shll
push
mov
cmpsl
fisubrl
cld
call
adc
mov
ja
jecxz
mov
rolb
xchg
scas
hlt
sub
lcall
jp
mov
loop
or
mov
sub
rorb
negb
arpl
test
jmp
std
loopne
and
repz
lahf
add
jnp
lock
add
sbb
xchg
out
ret
cltd
mov
ror
xchg
inc
ret
cs
pop
push
mov
adc
cmp
ja
xlat
icebp
xor
fs
out
inc
jbe
jecxz
outsb
add
pop
push
je
aaa
add
pop
or
pop
dec
imul
lret
or
push
out
sbb
adc
mov
outsb
insl
push
mov
fsubr
cmp
stc
nop
sbb
fdivrl
mov
inc
addr16
inc
xor
pusha
xor
mov
inc
pop
mov
pop
and
js
es
or
ja
andb
mov
fwait
jae
inc
or
out
adc
scas
addb
jae
mov
dec
shlb
pop
mov
sbb
mov
ret
sti
jae
push
mov
and
js
mov
shlb
fiadds
add
in
outsb
fidivrs
inc
xchg
mov
hlt
int
aad
sbb
dec
fwait
psubusb
jl
testl
imul
mov
push
lods
dec
sbb
inc
in
xor
out
dec
sar
andb
les
ljmp
push
mov
inc
add
loop
push
shrb
decb
in
lds
xchg
lods
dec
incl
jno
jb
mov
pop
leave
icebp
push
out
sub
cmp
fwait
pop
adc
or
inc
inc
jl
movsl
and
or
icebp
dec
jns
lods
aas
daa
jecxz
stos
in
jnp
mov
mov
insb
push
mov
call
push
fbld
xor
mov
push
daa
mov
arpl
shll
inc
cli
add
or
xchg
sub
pusha
cmp
rclb
call
divb
pop
push
pop
jns
pop
mov
lds
dec
arpl
sub
in
adc
push
jnp
jmp
je
mov
bound
js
fwait
loop
xorl
sahf
mov
lods
jnp
dec
push
cli
andl
jo
add
dec
out
or
fmul
inc
fisubrs
je
pop
sahf
mov
pop
adc
test
xchg
jo
and
jge
jle
push
and
in
dec
lods
push
pop
jmp
filds
push
int3
and
daa
mov
lret
mov
mov
adc
aaa
test
ss
and
xchg
ds
sub
je
push
addr16
movsl
out
insl
sub
and
fs
push
mov
mov
pushf
xor
mov
push
push
inc
shlb
lret
mov
jb
push
jae
loop
xlat
mov
jecxz
xor
loop
and
insl
push
and
imulb
int3
mov
popf
call
insb
push
pushf
aas
xor
jae
inc
cwtl
and
pcmpeqw
sbbl
lock
inc
adc
xchg
dec
lock
mov
lds
inc
rcrb
jl
popa
in
jo
call
mov
idivb
aad
test
sub
mov
bound
lods
jb
and
pop
jp
mov
sarl
scas
aad
cmp
jb
add
mov
jle
push
xchg
repnz
xor
sti
scas
sub
fmul
mov
incl
push
inc
push
adc
dec
lds
cmp
outsl
and
xor
pop
push
mov
loopne
pop
hlt
pushl
cmp
lcall
addl
imul
mov
xor
mov
icebp
jge
mov
bound
rcll
sub
add
cmc
fwait
lods
pop
repnz
xchg
mov
ret
jle
imul
lock
shlb
jo
ffreep
pop
and
sub
shll
fsubr
out
in
xor
push
outsl
aam
cmp
js
imul
mov
sub
xchg
repz
mov
mov
mov
insb
sarb
out
jge
rcrb
xchg
dec
cmp
cmp
pusha
call
mov
xchg
mov
xchg
mov
imul
jge
cmp
shrb
xchg
iret
mov
or
sub
shll
in
nop
test
hlt
es
je
push
pop
mov
mov
movaps
iret
jg
sarl
enter
push
fs
lret
aad
ficoms
jnp
jns
or
insl
cmc
adc
add
xor
sarb
scas
pop
mov
das
jg
imul
or
xchg
fcmovne
shll
or
mov
jne
sbb
lret
sub
push
xchg
dec
pop
and
mov
out
and
adc
mov
mov
mov
jbe
xchg
jb
popf
and
repnz
cmp
inc
xchg
adc
daa
add
das
sbb
cmp
push
jl
sbb
xchg
dec
lock
inc
pusha
cmpsb
mov
and
shll
or
xor
jno
inc
lcall
add
and
pop
inc
push
xchg
jbe
adc
cmp
pop
stos
leave
movsb
mov
jmp
scas
or
pop
notb
jns
dec
std
mov
sahf
and
and
clc
movsb
jl
push
mov
es
ror
pop
fisubl
loop
xchg
cmp
cmp
and
ret
inc
jg
xchg
dec
out
push
in
xchg
loop
fnstenv
and
arpl
dec
adc
clc
sub
outsl
ja
or
sarl
inc
filds
mov
xchg
out
test
sub
andb
addr16
add
adc
mov
andb
rol
pop
cli
cmp
jecxz
jp
frstor
xor
shlb
mov
pushf
xchg
mov
mov
jnp
push
stos
mov
dec
push
fidivl
addb
lret
in
out
jp
and
sub
pushf
data16
mov
lods
jecxz
movsb
shufps
mov
jnp
mov
ja
and
negl
mov
xchg
call
ja
popa
push
dec
push
dec
ja
es
test
dec
xlat
out
or
mov
jo
test
push
mov
stc
jecxz
mov
or
xchg
in
arpl
stos
movsb
mov
loop
inc
int
gs
aaa
fadds
jge
pop
mov
and
xchg
std
fsubl
fxch
jne
sub
xchg
lods
test
mov
or
vandnps
enter
cmp
sahf
push
pop
outsl
popf
xchg
scas
testb
xchg
xchg
shrl
fadds
cmpsl
incb
or
adc
scas
outsl
cltd
mov
rclb
jae
jo
xchg
lret
cmp
call
jno
bound
arpl
inc
ss
stc
aas
ljmp
mov
xchg
push
mov
addl
mov
sarl
out
add
cltd
push
sub
xor
mov
into
xor
add
sbb
stos
xor
cmp
xor
sbb
or
fdivrl
sub
sub
pusha
jb
mov
mov
outsb
cmp
inc
inc
scas
rcr
pop
test
dec
shlb
aad
sub
out
arpl
dec
mov
and
sub
icebp
pop
or
mov
inc
outsl
aam
cmp
loop
mov
in
jb
movsb
adc
sub
or
sub
mov
adc
test
loope
xchg
daa
or
push
sbb
pop
jne
jg
xlat
pop
push
mul
leave
mov
mov
mov
push
mov
fcmovnu
outsb
stc
loope
ljmp
inc
pushl
inc
jns
inc
test
lods
fnstsw
test
dec
nop
daa
and
call
pop
xchg
cwtl
repz
fstps
jp
js
xchg
ljmp
jge
jne
or
call
arpl
pop
dec
int
jle
arpl
mov
stos
leave
ret
pop
je
ret
inc
daa
cltd
loop
or
das
jnp
inc
xor
mov
sbb
pop
sub
pushf
ds
dec
ds
mov
in
or
lods
mov
cmp
inc
lret
jecxz
xor
cmp
push
mov
jae
fists
cmp
push
out
jg
or
inc
outsb
jp,pn
adc
ror
xchg
jbe
cld
mov
pop
inc
mov
ret
xor
data16
fsubrp
ja
pusha
outsb
jno
adc
xchg
jge
push
sbb
loop
mov
jmp
adc
pushf
sub
dec
iret
pop
movsl
fnstsw
xor
dec
pop
in
test
test
movl
out
add
add
jl
mov
mov
mov
jnp
xchg
and
or
add
xorb
push
cmp
fimuls
loop
adc
xor
les
das
arpl
xor
mul
pop
mov
mov
inc
imul
ror
loopne
mov
in
xchg
cmp
aad
dec
and
movb
arpl
cmp
sbb
dec
mov
dec
lret
mov
or
mov
subl
ficomps
fs
icebp
nop
adc
fwait
outsb
xorb
clc
fsubr
mov
push
jae
es
sub
mov
bound
lret
mov
in
loop
push
and
jp
and
icebp
inc
cmc
dec
test
cld
or
lds
push
cmpsb
sti
clc
sti
xor
lea
dec
lahf
ljmp
sbb
fs
dec
dec
call
out
leave
mov
and
mov
mov
sub
mov
xor
pop
mov
lret
or
mov
sbb
test
mov
sbb
push
fists
pusha
inc
adc
rcll
inc
into
lods
inc
mov
push
fcompl
ja
dec
test
pop
mov
xchg
or
mov
jg
imul
push
xor
out
dec
test
inc
out
adc
orb
mov
jge
xchg
xor
mov
enter
jno
stos
jb
aas
inc
stos
mov
outsb
jae
and
mov
jb
cmp
rcrb
adcb
and
and
pop
leave
leave
or
das
jg,pt
mov
pushf
icebp
fisttps
mov
mov
rcr
and
push
jg
movsb
mov
adc
cwtl
in
mov
cmp
dec
js
fs
mov
mov
ret
push
dec
mov
lods
push
test
fsub
arpl
stos
js
cmc
xchg
addr16
pusha
pop
mov
fwait
mov
sbb
xor
iret
lods
popf
test
dec
movb
or
andb
mov
sub
ret
clc
data16
xor
sub
test
fdiv
inc
jp
pop
clc
pop
mov
cmp
roll
rcrl
shl
cmp
cmp
cmp
cmp
out
adc
loope
mov
add
cmp
xchg
pop
lahf
mov
jne
shrb
sbb
pop
xchg
add
push
push
jecxz
cmp
popf
jge
xchg
pop
fsts
sti
jp
pusha
lea
dec
rolb
out
adc
arpl
xorb
movsl
lahf
sbb
shlb
mov
sub
pop
sub
sub
adc
or
aam
pop
cmp
cmp
mov
mov
lcall
outsl
pusha
fistpl
iret
add
cmp
imul
mov
es
xchg
sbb
add
fucom
test
pop
jae
mov
xor
add
mov
int
es
lea
aam
push
cltd
inc
insb
jge
adc
in
out
dec
mov
fisubs
lret
or
icebp
cmc
gs
js
inc
add
lock
dec
cli
and
test
aaa
ja
sbb
xchg
pop
dec
or
call
and
jmp
in
xor
js
xor
popa
cld
xchg
enter
push
clc
inc
ja
adc
icebp
add
push
inc
inc
xor
pop
add
cmp
lea
jmp
mov
xchg
test
dec
and
out
aas
int
dec
mov
inc
lea
inc
mov
fnstcw
jnp
mov
mov
cwtl
outsb
or
xchg
rolb
sub
cltd
aas
jmp
ja
imul
cmp
sbb
rcll
out
mov
shlb
outsb
clc
loope
sbb
adc
mov
xchg
or
nop
add
stos
jnp
mov
pop
test
rclb
sub
pop
cmp
xor
movsl
jmp
ret
pop
push
ds
stos
add
outsl
sub
addr16
cmp
xor
lds
icebp
mull
xchg
neg
ds
cltd
jnp
mov
xchg
fisubs
jl
and
push
loope
test
dec
add
and
aas
ficoml
sti
popa
adc
dec
js
sub
psubsw
pop
push
xchg
lcall
lret
push
in
pop
ds
mov
mov
pop
adc
cmp
insb
pop
insl
lds
jmp
mov
outsl
sahf
cmp
fbld
push
and
pushw
roll
jnp
scas
rolb
mov
pop
stos
lret
jge
xchg
mov
pushl
xor
pop
jecxz
and
lret
xor
cmpsl
fisttps
in
cmp
adc
in
or
and
or
mov
dec
jns
cmp
xor
sbb
loope
sbb
sub
test
cld
jbe
jns
imul
enter
xchg
xchg
incb
daa
movsl
fadds
out
xor
xchg
mov
leave
or
jno
mov
lock
xor
testl
add
and
imull
xor
popa
mov
sbb
inc
add
and
out
stc
push
or
cmpsb
sti
mov
js
mov
pop
pop
stos
int
mov
push
mov
lods
test
add
mov
inc
sbb
ja
call
aam
inc
sti
push
and
rorl
mov
and
fistl
jb
mov
daa
xor
fcoml
sbb
dec
xchg
mov
mov
pusha
inc
stos
repnz
cs
repz
lret
addr16
test
jb
sar
out
rcll
mov
push
jp
movsl
icebp
dec
cmp
jno
mov
push
jno
pop
sbb
lods
sub
scas
xor
or
sbbl
xchg
lods
fsubrl
cs
hlt
sub
push
push
lsl
cmp
and
add
add
movsl
and
add
add
cwtl
push
add
add
add
mov
add
add
add
orb
add
cwtl
add
orb
add
add
add
movsl
and
add
add
add
add
xorb
add
movsl
and
add
add
add
add
jo
add
add
pop
add
adc
add
add
add
add
add
add
add
cwtl
add
add
xor
add
cmp
add
add
add
add
add
inc
add
add
add
add
pop
add
add
add
add
addb
add
sub
add
push
add
addb
add
add
mov
add
add
add
addb
add
lock
addb
add
movsl
and
add
add
add
add
add
add
add
push
add
add
movsl
and
add
add
add
add
add
add
sub
xor
add
movsl
and
add
add
add
add
add
add
pusha
insl
pop
add
add
movsl
and
add
add
add
add
add
outsb
pop
add
add
movsl
and
add
add
add
add
add
outsl
pop
add
add
movsl
and
add
add
add
add
add
add
add
jno
add
add
movsl
and
add
add
add
add
add
add
add
pop
add
add
movsl
and
add
add
add
sldt
mov
sldt
loopne
add
or
add
xor
add
pop
add
cmp
add
addb
cmp
add
test
add
rolb
add
clc
add
cmp
add
and
cmp
add
dec
add
addb
add
jo
add
movsl
and
add
add
add
add
add
jae
add
add
add
add
add
add
add
add
add
rolb
add
pusha
jbe
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
add
and
add
pusha
js
add
add
add
add
add
add
add
add
add
dec
add
add
jl
add
add
add
add
add
add
add
add
add
jo
add
call
add
add
add
add
add
add
add
add
cwtl
add
add
pop
add
add
add
add
add
add
add
add
add
rolb
add
pop
add
add
movsl
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
cmp
add
pop
add
add
add
add
add
add
add
add
add
pusha
add
add
popl
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
or
add
loopne
add
movsl
and
add
add
add
add
add
add
add
xchg
pop
add
add
add
add
add
add
add
add
add
clc
add
add
xchg
pop
add
add
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
movsl
and
add
add
add
jg
add
jg
add
jg
add
add
add
clc
add
add
and
add
dec
push
add
jo
add
movsl
and
add
add
add
add
add
xchg
pop
add
add
movsl
and
add
add
add
add
add
add
pop
add
add
movsl
and
add
add
add
add
add
add
pop
add
add
movsl
and
add
add
add
add
add
push
add
fcoms
add
movsl
and
add
add
add
add
add
push
add
lock
pop
add
add
movsl
and
add
add
add
add
add
add
or
add
movsl
and
add
add
add
add
add
cwtl
pop
add
add
add
inc
add
add
add
cmp
add
movsl
add
mov
add
or
add
sbb
add
add
cwtl
and
add
add
sbb
add
pop
add
dec
jbe
add
flds
add
loop
add
incl
add
add
sbb
add
dec
int
add
add
add
add
jo
add
loopne
add
add
add
add
pop
add
add
pop
add
pop
add
add
add
add
add
add
aam
pop
add
add
add
test
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
cmpsl
pop
add
add
add
ljmp
pop
add
cmpsl
pop
add
pop
add
add
add
incl
cmpsl
pop
add
pop
add
add
add
jmp
pop
add
pop
add
add
add
dec
test
add
pop
add
pop
add
add
add
call
cmpsl
pop
add
add
add
add
decl
test
pop
add
add
add
add
ljmp
test
pop
add
add
add
add
decl
pop
add
add
add
add
add
ljmp
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
jne
xor
cs
insb
add
add
add
push
jns
inc
jb
gs
je
imul
add
jbe
jo
xor
cs
insb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
jne
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
imul
insb
add
add
add
jb
popa
insb
imul
arpl
add
jb
imul
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
outsl
insb
xor
cs
insb
add
add
add
push
outsb
imul
imul
arpl
arpl
xor
fs
insb
add
add
add
pop
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
add
gs
insb
xor
cs
insb
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
std
mov
add
add
add
mov
add
add
add
add
mov
push
or
add
loope
add
pusha
mov
mov
dec
add
mov
shl
sbb
push
lock
or
sub
mov
cmp
cmp
dec
sub
enter
jge
sbb
xor
xor
sbb
inc
xor
je
adc
and
sbb
mov
fs
adcl
je
mov
jae
cmp
stos
mov
mov
add
shlb
push
add
decl
std
push
loop
or
aaa
push
decl
repnz
roll
mov
sbb
clc
aad
cmp
add
cmp
jno
xor
push
adc
adc
out
insl
loopne
mov
mov
clc
jg
pop
imul
cmp
push
subl
ret
sub
sbb
mov
push
pop
fdivrs
xor
mov
out
stos
mov
add
imul
std
pop
push
lea
jle
mov
push
test
test
mov
push
push
xor
inc
mov
adc
mov
mov
cmp
cmp
pushf
mov
test
cmp
mov
into
sub
fwait
sbb
lea
mov
nop
pop
xor
lds
mov
xchg
push
enter
cmp
xchg
mov
ss
xchg
testl
push
adc
je
xchg
push
mov
incl
jmp
push
and
mov
jl
xchg
xchg
adc
addr16
in
and
add
imul
and
jl
add
jge
sti
add
gs
or
mov
mov
shr
loope
stos
in
adc
imul
std
sbb
mov
sahf
fcmovbe
push
in
cmp
jae
dec
and
mov
shlb
sahf
xchg
and
or
xor
ret
sub
adc
adc
adc
call
loop
inc
dec
mov
cmc
adc
mov
repnz
lret
or
push
adc
xor
into
xor
enter
mov
es
jl
test
or
lea
bswap
cwtl
ret
push
stc
dec
mov
lea
or
in
and
lds
cmp
inc
int
popf
ret
inc
xorb
or
fs
sub
adc
xchg
cmp
inc
mov
dec
push
mov
lock
jmp
out
mov
mov
sbb
sarb
jmp
and
jmp
push
and
ja
push
or
bound
mov
dec
ss
lods
pop
adc
cmp
inc
and
push
loopne
xor
movsb
mov
adc
sbb
jne
in
loope
sahf
sbb
sub
lret
ficoms
inc
push
pop
adcl
push
adc
into
dec
inc
cli
sub
sub
fxch
mov
and
fildl
add
mov
enter
sti
adc
arpl
jne
enter
mov
jmp
and
mov
xchg
inc
adc
fiadds
jb
sub
cmpsl
mov
test
cmpsl
jo
pop
lea
dec
jmp
cmpsb
xchg
in
int3
dec
loop
sub
add
xorl
mov
pop
or
add
jl
mov
sbb
jecxz
lea
pushf
or
push
test
mov
sub
adc
enter
dec
in
hlt
cli
mov
inc
out
add
sar
sti
out
enter
add
push
mov
shl
and
xchg
xchg
adc
and
mov
inc
sub
arpl
iret
jb
and
lea
mov
inc
lods
sbb
repz
roll
call
jb
sbbl
xchg
repnz
mov
pop
scas
jo
je
jmp
pop
and
adc
mov
aam
jmp
sbb
cltd
lahf
inc
pop
or
or
sbb
xchg
fwait
je
je
sub
and
lds
add
lret
lea
lock
add
stos
test
dec
or
mov
push
pop
jb
loope
push
jb
add
addb
pop
orl
sub
sbb
sub
push
add
and
gs
push
adc
mov
push
add
inc
add
sub
stc
push
mov
add
adc
es
idiv
mov
xor
fdivs
loopne
add
dec
mov
sbb
mov
add
push
jo
cs
push
dec
mov
lds
rolb
push
push
in
dec
xor
int3
adc
sbb
out
test
data16
or
push
cli
sar
mov
mov
push
add
out
lcall
cmpsl
xor
adc
jo
std
pushf
push
shlb
mov
loop
or
and
and
andl
sbb
and
xor
punpcklbw
or
or
inc
cmp
je
sbb
xor
fisttps
sub
add
add
test
push
sbb
add
jo
add
xor
or
rclb
add
out
inc
sub
mov
add
add
dec
adc
xor
das
push
push
push
push
push
call
in
dec
adc
mov
push
add
sbb
lahf
push
or
lea
lods
stos
dec
add
adc
test
fmull
mov
stc
jnp
sti
cli
cmp
movsb
repz
add
inc
outsl
add
mov
jmp
sbb
call
add
mov
mov
inc
data16
push
prefetcht1
popa
daa
or
mov
sbb
ss
ror
inc
mov
push
dec
xor
xor
leave
movaps
push
inc
inc
push
addl
je
mov
lea
movsb
mov
inc
jmp
test
adcb
rorb
jg
lea
push
aas
pop
sub
sbb
enter
ds
rol
cmpsb
xchg
orl
lcall
or
aaa
ficoms
inc
or
dec
inc
shl
test
insb
sub
or
and
or
pop
push
push
icebp
aaa
movsb
sbb
loop
mov
bswap
cmpsb
cmp
add
add
pop
pop
pop
push
pop
ret
push
in
or
cld
daa
mov
sub
loopne
push
mov
xchg
and
push
mov
shl
sti
mov
in
add
je
push
mov
jne
cld
inc
xor
pop
sarb
ret
lods
push
jne
xor
leave
push
adc
inc
int
shll
lods
nop
mov
jo
jmp
hlt
cltd
and
icebp
pop
push
or
rcrb
or
xor
pop
dec
add
inc
adc
jge
and
cltd
xchg
test
insb
testb
inc
pop
adc
add
clc
cmp
jge
shr
movzbl
rolb
push
cld
sub
je
dec
or
xlat
jne
sub
jbe
pop
or
xor
adc
push
add
scas
pusha
inc
jmp
pop
pop
xchg
mov
xor
mov
inc
notl
sub
std
push
adc
push
mov
sbbl
add
jbe
push
push
call
pop
mov
dec
aas
adc
out
shl
lods
inc
inc
pop
imul
test
inc
int
mov
adc
jae
pop
jge
sub
or
pushf
roll
rep
shrb
jnp
add
cli
iret
movsb
push
push
sbb
stos
adc
xchg
cmp
mov
adc
adc
jecxz
push
sub
lock
push
aaa
xchg
sub
mov
adc
bound
jecxz
push
outsb
dec
sub
push
ss
pop
gs
and
add
xor
dec
mov
hlt
push
daa
dec
or
dec
enter
das
push
push
std
xchg
push
in
rcl
inc
je
and
adc
adcl
push
test
lret
sbb
sbb
stc
jmp
adc
out
inc
test
add
adc
loopne
sub
test
pushf
pushf
fimull
mov
or
and
in
sbb
pop
fwait
mov
cmpb
pop
inc
mov
push
je
add
or
es
push
cmovle
inc
into
jle
test
sahf
and
push
push
push
push
call
sbb
dec
aaa
mov
add
jae
insl
jae
bound
sbb
pop
mov
rclb
scas
or
jno
adc
addl
rol
cmp
pop
pop
test
push
xor
jmp
or
xchg
jmp
or
into
jge
andnps
int3
testb
mov
idivb
jg
test
and
jmp
mov
pop
inc
cmp
clc
cmp
lret
xor
es
push
dec
push
mov
enter
mov
xchg
test
push
outsl
mov
shrb
sub
insl
mov
call
cmp
andb
repz
cmpsb
imul
je
mov
mov
cmpb
add
daa
call
pusha
cmp
cltd
push
lea
insl
rclb
mov
test
testb
mov
pop
mov
jb
movsl
and
test
or
enter
dec
and
scas
and
xor
in
add
sub
push
xor
pop
cmpsb
ficomps
jo
insb
imul
outsb
and
outsb
jl
adc
sti
and
add
test
fs
lea
repz
outsb
mov
ljmp
imul
dec
movl
sub
popa
insb
and
push
pushf
sub
push
dec
daa
arpl
jae
sbb
xor
popa
xchg
js
pop
ja
xor
data16
adc
cmp
ss
aas
add
push
movsb
dec
loopne
fadd
push
fs
dec
jp
icebp
pop
sbb
je
dec
mov
cmpl
je
sbb
test
xchg
xor
dec
stos
mov
insl
cmp
or
mov
dec
cltd
xor
dec
pushf
or
ja
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
mov
pop
add
test
add
aas
mov
add
cmpsl
pop
add
pop
add
add
adc
pop
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
clc
mov
add
mov
add
mov
add
mov
