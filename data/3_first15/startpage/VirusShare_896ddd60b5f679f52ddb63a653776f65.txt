xchg
out
mov
call
xor
mov
mov
push
test
and
iret
out
cmpsl
sbb
notb
jp
sbb
clc
dec
movsl
shlb
cmc
or
repz
ds
icebp
lock
sbb
add
add
add
or
ret
push
mov
and
sub
push
push
add
inc
and
push
mov
adc
add
inc
in
shl
adc
inc
or
pop
add
or
pop
test
je
push
mov
jnp
push
push
ss
fucom
mov
mov
push
pushl
fcomip
loopne
or
xchg
mov
push
in
push
add
arpl
push
fs
jne
fs
sti
or
jo
cmp
fldt
mull
mov
lea
push
pop
je
adcb
xor
jne
rorl
fidivrs
and
test
or
idivl
mov
jnp
jl
adc
jne
in
ja
imul
push
mov
xlat
and
push
rcr
add
push
add
sbb
cmp
sbb
out
push
mov
push
lret
out
and
mov
lcall
bound
repz
xor
adc
test
push
fucomi
dec
popa
loopne
jmp
mov
inc
shl
add
insb
pop
mov
adc
dec
test
adc
cli
lcall
pop
mov
pop
ret
ret
add
hlt
push
shr
adc
jg
xor
mov
push
call
mov
mov
push
loope
jno
push
and
sbb
lcall
jne
push
pop
jmp
cmp
out
out
or
cld
mov
dec
loopne
dec
cld
daa
xchg
pop
sti
into
pop
clc
sbb
sub
lea
push
movl
divb
pop
fadds
mov
or
and
lock
icebp
lods
sbb
aam
push
inc
add
loopne
movd
dec
mov
add
leave
ret
bound
cmp
push
inc
mov
lods
push
push
push
push
or
sub
mov
mov
or
and
push
push
sti
inc
jne
pushf
fmuls
xor
sarl
ret
xchg
decl
or
push
lods
scas
adc
insb
mov
ficoml
dec
imul
enter
sbb
ds
rolb
lcall
popa
dec
iret
loopne
mov
jge
divl
lea
mov
push
sbb
rcl
mov
cmpsl
out
cmp
mov
push
ret
dec
idivl
out
int
or
je
fs
jae
fdiv
in
mov
sub
xchg
jne
clc
push
xor
jo
dec
rcrb
hlt
pop
and
or
inc
outsb
mov
or
call
or
push
out
out
cmpsl
icebp
cmp
pop
jne
decl
inc
inc
mov
add
push
nop
add
pop
jle
rcrb
jne
and
stos
push
push
sub
ror
dec
add
or
leave
pop
sub
fildl
sub
out
sbb
mov
dec
push
inc
test
jbe
out
or
inc
mov
cmp
enter
dec
cmp
add
fildl
pop
clc
inc
mov
push
mov
stc
lcall
imul
cmp
jle
push
inc
push
aas
pushf
jge
mov
rorl
scas
cmp
fsubs
lds
rcl
fildll
cld
imul
lods
add
fadds
and
pushf
rcll
leave
mov
ds
xchg
cs
je
cmp
jne
mov
pop
std
cmp
ja
mov
mov
dec
je
add
sub
xlat
lcall
and
push
hlt
xor
pop
fs
push
loopne
std
add
xlat
jmp
mov
cmp
fldt
push
movsb
shr
push
movzwl
push
push
in
add
mov
cmp
xor
dec
sti
add
int
dec
push
jb
loop
sbb
xor
out
dec
inc
pop
push
fisubl
push
cmp
push
in
sahf
testb
dec
mov
or
and
rolb
loopne
mov
pop
mov
lcall
adc
jge
loopne
out
movsb
aam
mov
std
and
inc
sub
cmp
shl
jp
testb
pusha
addl
ret
sub
mov
pop
jl
sbb
or
jle
push
xor
mov
mov
pushf
cmp
neg
aaa
je
mov
add
add
xor
in
add
sub
pop
testl
test
ljmp
pusha
ret
mov
sarb
xor
xor
add
js
mov
lods
and
cmp
sbb
mov
mov
or
or
pushf
test
push
xor
lods
test
je
loope
cld
mov
insb
cld
jne
mov
mov
pop
jle
sbb
mov
test
enter
cld
adc
cmp
bound
in
xchg
std
push
ds
fadds
cmp
jne
sbb
push
push
pop
mov
call
xor
push
push
mov
push
popa
add
nop
adc
fidivl
cld
lock
lret
gs
push
dec
adc
ret
mov
mov
inc
and
add
mov
pop
leave
in
jno
jle
cmpl
push
xor
mov
je
push
in
mov
sbb
cmp
setne
es
xor
std
jl
stc
lea
mov
push
jge
loope
fmuls
pop
shrl
shlb
push
hlt
mov
add
and
rcr
fidivl
cmp
push
or
in
add
out
inc
sarl
sub
add
cmp
in
jl
lea
and
add
inc
imul
jge
cmp
xor
movl
inc
push
mov
rorb
clc
jmp
pop
add
hlt
lcall
nop
or
cs
dec
test
repnz
sbbl
sbb
mov
push
cld
out
pop
add
loop
test
mov
jne
sti
push
or
loop
lea
jmp
ljmp
mull
xchg
inc
xlat
adc
out
cmp
jge
inc
and
and
mov
incl
test
jl
mov
push
push
jbe
xor
jmp
lea
mov
ss
js
hlt
sub
mov
add
push
mov
push
or
out
push
cmp
mov
sbb
push
lahf
popf
loop
mov
push
movsl
jbe
lret
pop
ret
mov
pop
mov
or
inc
add
dec
jne
movl
dec
incb
rolb
call
leave
push
pop
mul
seto
neg
or
push
sbb
mov
je
pop
jbe
mov
or
stos
mov
orl
or
andl
sbb
fidivs
or
idiv
jae
mov
push
jne
sbb
and
lock
cwtl
pop
shr
mov
mov
mov
add
incl
push
dec
cmp
in
data16
sbb
test
pushw
xchg
push
mov
aad
hlt
in
add
dec
jb
pop
andl
ret
enter
and
pop
mov
jmp
xchg
sub
negb
xor
js
cmpsl
rorl
in
and
jo
repz
out
or
push
jle
xor
sbbl
inc
call
sub
mov
sar
cmp
testb
in
in
sar
xadd
shl
inc
daa
inc
or
mov
inc
pop
cmp
cmp
lret
pop
mov
clc
add
add
pop
lret
add
add
dec
or
jge
iret
push
cs
or
int
cmpsl
push
cmp
inc
jl
mov
popa
es
sbb
add
sub
subb
cmp
jmp
cld
cmp
jne
push
xor
xlat
cmp
or
and
lcall
fs
xchg
enter
mov
or
sub
outsb
clc
push
xor
cmp
add
cld
into
int3
jle
inc
push
and
loop
push
push
js
xchg
mov
out
stc
shl
or
cmp
push
jge
sub
jnp
xor
push
xor
push
inc
or
in
rclb
and
inc
add
mov
pop
mov
cmpsl
stos
xchg
or
aas
sbb
jne
shlb
test
out
movsbl
fmuls
nop
test
je
fcmovu
mov
push
add
or
xor
aaa
adc
es
xorb
cmp
push
dec
jno
add
inc
sbb
push
sbb
sub
mov
add
cmp
push
sbb
adc
cmovnp
lock
sbb
hlt
push
mov
add
xor
cmpsl
enter
xchg
rclb
je
mov
xchg
push
cli
sbb
rorb
add
dec
xchg
cltd
mov
cmp
cmp
loope
or
repnz
nop
push
jo
lds
sbb
sbb
xchg
mov
inc
dec
or
clc
dec
add
xchg
flds
jge
repnz
dec
xchg
fadds
push
ljmp
mov
dec
or
lock
inc
push
ss
std
add
jecxz
mov
ret
jmp
leave
adc
out
sbb
push
out
add
mov
adc
dec
adc
mov
std
pop
adc
add
sbb
fimuls
in
jne
sbb
iret
push
pop
and
sbb
cs
mov
push
or
dec
clc
push
push
hlt
push
push
mov
out
cmp
adc
push
lock
xor
test
or
sub
xchg
or
popa
pop
lea
sub
lea
jne
outsl
jbe
movsb
clc
cmp
je
pusha
mov
fistpll
andl
ret
add
push
lcall
pushf
stos
jmp
pusha
daa
pop
sub
push
jo
inc
push
pop
xchg
cmp
pop
lock
cld
mov
ljmp
hlt
hlt
lret
add
pop
mov
xor
push
pop
or
out
ss
dec
push
rclb
loope
adc
out
adc
pushf
fxch
test
dec
into
add
add
fcmovbe
xchg
dec
faddp
movl
dec
sbb
lock
lea
add
test
mov
fadd
movhps
jo
enter
loope
and
jbe
xchg
mov
scas
or
neg
mov
into
test
push
jg
clc
sub
fcom
mov
cmpb
lea
push
int3
or
jmp
mov
lcall
shll
imul
inc
cmp
sub
inc
cmp
jle
jmp
jnp
movsb
movsb
clc
sbb
or
imul
jecxz
addb
jle
push
dec
sub
aas
jmp
pop
rclb
je
add
pop
scas
lock
jl
sbb
sti
add
es
sbb
add
ret
aad
or
rcrl
mov
mov
push
fadds
cmp
or
adc
in
aam
sub
ja
loope
stos
call
jae
sub
testl
sub
orl
add
xor
fstpt
push
inc
xchg
dec
pop
pop
icebp
sbb
or
or
cmp
jne
loope
ljmp
add
clc
pop
adc
inc
cmp
jl
jmp
push
cmp
or
add
sbb
imul
dec
cmpb
je
imul
ja
jo
pop
add
or
add
movsl
loop
pop
aad
int3
pop
jecxz
mov
push
add
xchg
repnz
outsl
lds
mov
fcomip
xor
fcom
xor
sbb
das
or
or
add
jle
mov
push
or
mov
inc
push
xor
and
or
mov
mov
cmp
test
outsl
inc
pusha
xchg
push
add
ret
adc
fcmovb
sbb
jp
scas
xor
sbb
repz
cld
std
push
sub
bound
test
or
gs
push
push
push
subl
sbb
push
cmp
hlt
sub
and
scas
sbb
push
adc
inc
xchg
cmp
sub
outsl
mov
pushf
nop
cmpsb
dec
jp
pop
sbb
inc
fs
es
jmp
jp
add
sbb
pop
or
sbb
dec
outsl
pop
push
or
insl
popf
pop
or
and
and
aaa
in
jmp
sbb
xor
into
ret
push
sbb
pop
add
andl
lock
icebp
pop
mov
push
sbb
mov
push
jb
fisubrs
lahf
pushl
adc
sbb
sub
fwait
or
xor
scas
sbb
mov
test
shl
cli
ja
lea
and
test
xchg
mov
insl
push
pop
shrb
pop
mov
cmp
jb
cmp
lock
mov
jae
je
call
cmp
sbb
stos
shl
sub
push
and
push
or
or
bound
pop
int3
cmp
add
add
subl
hlt
fcoms
cmp
imul
lea
addr16
cmp
jne
cmp
jne
push
pop
push
stc
sbb
jne
xor
das
jmp
adc
adc
insb
pop
lods
je
or
data16
aas
adc
push
mov
mov
dec
mov
dec
jnp
je
sbb
je
pusha
jbe
xchg
mov
cmp
adc
ljmp
jp
enter
pop
add
add
imul
inc
cmp
sbb
jne
dec
idiv
leave
adc
xor
rorb
in
lock
push
in
mov
pop
movsl
cmp
into
incl
lea
movb
jb
fucomi
jmp
push
inc
push
in
xor
in
aas
aas
iret
and
add
test
mov
push
enter
push
lret
inc
and
cmp
add
or
mov
mov
dec
shlb
mov
inc
ds
sbb
xchg
loop
sub
pop
arpl
lea
mov
gs
mov
adc
incb
cmp
je
push
jg
lock
push
mov
adc
cmp
mov
xor
pop
mov
add
cld
filds
movb
mov
mov
inc
movl
add
inc
scas
stos
out
cmpsl
push
icebp
mov
or
or
or
cld
add
lock
imul
jle
fsubrl
push
pop
into
dec
pop
clc
andl
xorb
clc
sub
push
mov
add
sbb
lcall
pop
fs
fstl
sbb
repz
je
push
sbb
mov
clc
mov
incl
jbe
xor
mov
mov
or
ja
pop
sbb
mov
jmp
fiaddl
cmp
inc
fcoms
adc
dec
lods
lcall
sub
add
xor
push
inc
xor
fdivr
cmp
jne
xchg
data16
int3
push
mov
ret
subl
pop
pop
jns
add
cmc
xor
push
jmp
push
push
mov
aam
loope
test
push
insb
icebp
std
and
xor
dec
jne
jnp
ja
mov
sahf
popa
pop
lods
push
jbe
xchg
push
mov
clc
cmp
lea
mulb
pop
faddl
push
sbb
or
addr16
insb
xchg
aaa
push
fwait
lock
les
cs
addl
pusha
pop
dec
cltd
add
xorb
sub
add
adc
adc
push
popf
add
jg
mov
std
and
inc
and
mov
or
repz
inc
cmp
cmp
stos
out
mov
or
lock
je
cmp
pop
push
gs
hlt
mov
pop
clc
cmpsl
bsr
jbe
and
jmp
hlt
add
cmpb
mov
cmpsb
push
icebp
xchg
test
pop
dec
adc
sub
push
jbe
lock
lock
movsb
scas
and
loope
adc
sbb
ret
push
jbe
push
or
pop
out
mov
and
outsb
ss
push
insl
aam
adc
xchg
clc
lahf
cld
inc
test
jne
pop
pop
les
int3
adc
das
mov
ss
xor
inc
lret
ds
es
pusha
cltd
adc
roll
imul
xchg
push
pop
dec
movsb
push
lahf
jbe
repnz
add
test
xchg
sbb
das
mov
push
inc
push
mov
insb
dec
movsb
out
inc
inc
adc
les
gs
xchg
outsb
fadds
lret
cltd
data16
mov
mov
push
push
int3
dec
cli
je
fdiv
sti
or
mov
cmp
sub
insl
add
mov
dec
add
sub
pop
js
push
push
adc
and
shr
sti
add
add
mov
inc
pusha
pop
ja
clc
mov
in
push
sub
jp
sbb
or
ret
push
xchg
add
push
mov
fwait
pop
adc
push
lea
fisubrs
pushl
ja
sub
sarb
jge
push
enter
iret
pop
outsl
and
stos
add
subb
sarb
je
sub
mov
or
and
and
adcl
pop
pop
push
push
xchg
das
movsb
fincstp
pop
push
cmp
rclb
popf
loopne
push
faddl
in
nop
lods
cld
push
inc
push
icebp
mov
pop
push
into
push
xchg
mov
sub
or
dec
lea
test
add
daa
dec
addb
jbe
subb
and
or
loopne
push
int
test
pop
inc
pop
inc
mov
push
mov
dec
push
aaa
test
testb
fcoms
jne
cmp
aaa
aas
aas
add
sbb
and
jmp
pop
pop
jmp
fdivs
and
push
and
enter
mov
pusha
roll
lock
insb
jne
sub
mov
cs
jne
je
mov
scas
mov
adc
out
insl
inc
imul
sub
shrl
adc
shrb
sbb
dec
insb
sub
inc
pusha
jnp
adc
rep
lcall
inc
or
mov
loope
add
jo
dec
cmp
jge
mov
fucomp
mov
pop
imul
push
frstor
sbbb
pop
sbb
or
inc
and
xor
sub
add
add
lds
and
inc
xchg
stc
enter
hlt
lea
call
fdivr
pop
daa
pop
je
mov
cmp
je
mov
fimull
jns
movsl
push
jmp
test
scas
adc
pop
adc
clc
jmp
push
dec
push
repz
push
and
ret
es
mov
xor
test
and
mov
stos
pusha
or
jmp
push
jo
idiv
les
jg
pop
push
jecxz
cmp
inc
mov
lcall
fwait
icebp
sbb
aad
popf
mov
or
jo
cmp
data16
pusha
adcl
add
jo
cmp
pop
jle
add
subb
xor
adc
jo
jne
and
or
cmp
mov
lea
lods
ja
test
push
xor
je
cmp
sbb
sbb
sub
inc
add
dec
dec
loope
sub
jmp
bound
aam
and
fnstsw
mov
push
cmpl
ja
daa
ret
scas
pop
cld
mov
push
pushl
outsl
sub
push
push
pop
sub
fcomps
xchg
xchg
pop
sbb
pop
cmpb
mov
inc
cmp
data16
mov
data16
test
sbb
icebp
push
lea
jo
add
add
and
fcmovnu
rorb
cmp
jne
and
insl
fistpl
xor
sbb
sti
push
dec
jne
pushl
push
gs
jmp
and
mov
lds
jmp
push
mov
mov
xor
push
inc
xor
adc
pop
loopne
jae
lea
inc
dec
ljmp
cmp
cmp
shrb
iret
hlt
jbe
das
xchg
subb
inc
icebp
jl
cltd
push
and
inc
adc
push
sbb
test
jo
adc
out
je
movsl
jo
cmpsb
loopne
adc
sub
pop
or
out
inc
clc
inc
mov
inc
pusha
pop
jne
andb
movsl
clc
les
dec
push
sete
add
push
sbbb
mov
aaa
pusha
cld
push
add
pop
pop
or
add
cmp
mov
mov
cmp
dec
push
inc
add
or
jnp
push
sbb
adcb
add
mov
sub
stos
or
inc
testl
mov
mov
mov
rorl
mov
pop
pop
jg
xor
inc
cmpsb
rorb
cmp
jle
xorps
aas
mov
push
insb
repnz
or
inc
insb
add
lds
xor
dec
mov
js
sbb
incb
xor
sub
pop
jb
add
inc
lea
mov
jl
imul
or
es
pusha
adc
hlt
ljmp
add
add
dec
add
repz
arpl
push
insl
mov
loope
clc
cs
xchg
and
pop
leave
mov
ss
pusha
cmp
add
dec
push
rcr
in
add
test
inc
divl
and
inc
add
rorb
push
fwait
aam
push
divb
fdivr
adc
jle
data16
inc
sbb
and
jnp
arpl
xorb
cmp
xor
add
mov
push
or
fdivs
adc
aas
incl
test
je
jge
or
mov
imull
mov
movb
adc
add
add
add
outsb
push
xor
mov
cmpsl
or
jmp
cmp
adc
notb
adc
pop
sbb
andl
xor
xchg
adc
sbb
mov
and
push
clc
pop
mov
fdivrs
ret
mov
stos
ljmp
push
adc
fistps
add
mov
dec
sbb
push
adc
jmp
fidivrl
enter
or
mov
lea
push
jmp
dec
dec
push
adc
jl
das
dec
testl
mov
jle
or
inc
add
push
push
ds
push
sbb
adc
add
push
sub
fcompl
sub
ds
cmp
and
jae
mov
add
adcb
add
fisttpl
cmp
cmp
adc
data16
fisttpl
or
or
xor
pop
cmp
jmp
sbb
or
and
cmp
je
mov
inc
mov
xorb
lods
out
xor
orl
pop
cmp
mov
or
pop
inc
int
or
test
movb
fsub
dec
sub
jmp
mov
adc
push
int
shr
adc
mov
push
and
sbb
and
movsl
jbe
xor
push
adc
jp
and
cld
pop
push
faddp
sti
lock
setnp
loop
cli
add
fisttpl
mov
bnd
repnz
je
clc
mov
sub
sbb
push
pop
lea
push
jmp
ds
pop
or
sbb
popf
inc
push
jnp
mov
mov
punpckhdq
add
pushl
sbb
xor
cmp
lret
mov
sub
sbb
ss
push
cwtl
sbb
xchg
push
and
add
bnd
je
add
sub
sbb
aam
aaa
ret
pusha
xchg
mov
mov
ret
int3
je
add
sub
loopne
aad
or
adc
dec
imul
pop
ds
push
repnz
mov
mov
add
outsl
int
xor
pop
cmp
adc
je
test
cmp
adc
shl
jns
jo
fimull
sahf
insb
dec
dec
sbb
es
in
shrl
mov
adc
push
push
xor
repz
out
add
icebp
or
popa
push
jge
mov
push
lods
loopne
outsb
stos
fstl
sbb
je
dec
mov
into
mov
add
sbb
sarb
mov
inc
or
add
or
rcrb
xor
pop
mov
popf
fs
xchg
subb
fcom
inc
xor
or
push
mov
mov
or
lea
push
and
sbb
xchg
or
sbb
decb
push
push
mov
aaa
call
jg
adc
push
pushl
push
push
or
testl
rorb
je
or
pusha
mov
lock
inc
xor
aas
push
pop
sbb
push
lods
xchg
or
clc
cmp
jge
inc
push
push
inc
imul
xchg
faddl
shl
sbb
shl
sbb
inc
xchg
add
in
jnp
mov
xor
pop
clc
add
push
sbb
jmp
mov
sbb
pop
std
mov
je
inc
push
jo
add
push
ja
rolb
sbb
jecxz
and
xor
sahf
outsb
ret
in
sbb
mov
pop
int3
add
shrb
push
xchg
imul
inc
sbb
cmp
mov
pop
mov
sbb
xor
test
or
push
sbb
jle
fsubl
test
pushw
pop
in
movl
scas
xor
sub
xor
xor
sub
sub
cmp
push
cli
cmpsb
out
pop
sub
mov
sbb
ss
pop
xor
dec
add
sub
test
in
ljmp
jmp
push
push
lahf
xor
xchg
push
mov
or
xor
int3
in
jne
mov
mov
mov
ret
test
and
pop
add
movsl
ljmp
les
sub
mov
or
pop
loopne
js
sbb
andl
or
movb
push
mov
adc
xchg
cltd
cs
cmp
rorl
or
mov
dec
mov
leave
add
je
xor
cmp
mov
je
cmpb
jne
mov
inc
add
inc
popf
lock
je
cmp
jne
cmp
jne
add
aaa
lea
mov
or
rcl
jne
jmp
arpl
daa
sti
push
cwtl
push
in
packuswb
mov
pusha
jle
popa
push
enter
lret
stos
outsl
loop
ret
pusha
or
mov
rcr
sub
push
or
or
push
call
pop
and
fildll
cli
lods
lret
subl
lret
dec
cmp
dec
dec
data16
pop
or
jns
mov
add
sub
adc
fstpl
inc
or
imul
mov
or
adc
loop
dec
lds
inc
cmp
pop
pop
inc
pop
push
add
push
xchg
xor
mov
add
xor
ja
xlat
popl
sub
in
fildll
outsl
jo
sbb
mov
push
mull
or
cmp
mov
push
xor
xor
mov
and
jp
mov
jle
adc
rclb
ficoml
and
cmp
sub
mov
test
testl
in
fmull
loopne
sar
icebp
inc
pop
inc
sub
mov
lock
xchg
mov
adcl
lods
cmc
sti
pop
pop
stos
add
adc
mov
or
pop
in
push
aam
inc
call
push
pavgw
push
push
hlt
xchg
loopne,pn
bound
sahf
in
loope
xor
pop
cmp
push
adc
roll
sub
add
jl
nop
fwait
repz
hlt
test
jns
lods
rolb
ret
fdivrs
sub
and
push
mov
test
push
cmpsb
add
lahf
out
or
push
dec
enter
pop
sbb
loopne
les
jp
fldl
fmull
sbb
mov
or
and
add
ljmp
jae
mov
sahf
jo
pushf
sbb
mov
add
lods
cmp
jle
test
push
mov
in
sbb
xlat
dec
pop
lock
in
fildl
cs
jmp
sub
sub
sahf
push
push
cmp
mov
mov
push
lret
das
clc
ja
enter
and
add
stc
sar
add
push
imul
dec
or
rorl
or
pop
in
sbb
rcrl
testl
cmp
push
adc
into
push
dec
fwait
dec
inc
enter
loope
push
mov
sti
pop
sub
lea
jb
lock
push
add
mov
stc
add
push
add
push
dec
push
push
lock
aas
aaa
dec
mov
insl
inc
jbe
popa
pusha
or
jmp
ljmp
je
push
mov
nop
cwtl
sahf
cs
jno
mov
adc
mov
inc
xor
sti
adc
mov
sub
js
aad
pusha
sub
sbb
lret
pop
adc
mov
and
daa
and
lret
sub
dec
pop
push
je
mov
and
je
sub
je
dec
dec
mov
popf
loop
sub
jp
jecxz
add
add
pusha
push
pop
sbb
sahf
pop
addr16
push
dec
add
adc
fucomip
cmp
jle
bound
pop
in
mov
sub
xor
sbb
sub
mov
add
iret
addb
movsb
leave
push
and
cmp
aas
cmp
insb
and
mov
lds
and
or
xor
pop
les
sub
add
mov
mov
or
orl
popl
insb
mov
cli
mov
jle
ret
subl
enter
and
bswap
enter
adc
enter
sbb
enter
adc
sbb
lret
enter
pop
mov
push
fstps
xchg
cmp
stos
add
push
fidivrl
outsl
int3
sahf
mov
cmp
or
sbb
pop
jecxz
sbb
aas
rorl
js
call
cmp
jg
xor
outsl
fcmovu
mov
jle
es
inc
jbe
lock
inc
or
pop
pop
push
nop
cwtl
clc
test
lret
movsl
mov
adc
ja
adc
inc
adc
aaa
addb
movsb
jne
test
mov
aaa
add
adcb
pop
or
shlb
lods
mov
insl
gs
sti
or
stos
or
sbb
pop
jne
xor
pop
jg
lahf
loop
jbe
sub
add
enter
adc
jge
and
xchg
pop
je
push
mov
jns
mov
inc
or
sub
lret
xlat
andl
and
cmp
cmp
fiadds
stos
mov
shlb
and
outsb
addr16
add
lea
into
inc
mov
out
sub
xor
shlb
adc
xlat
jmp
aam
fmuls
push
add
pop
xchg
movl
cmp
and
inc
in
cmpsb
sbb
lcall
and
cmc
popf
lods
ret
pop
add
mov
in
sub
mov
push
pop
imul
dec
push
scas
add
dec
jne
xchg
push
data16
jnp
orl
inc
inc
sbb
inc
jo
cli
or
rclb
inc
jl
or
lcall
shrb
pop
sbb
mov
imul
ja
out
or
icebp
fistpll
add
jecxz
cld
out
fistl
ss
pop
lock
fwait
hlt
jne
dec
or
mov
pop
les
cmp
sahf
aaa
rorb
inc
mov
stos
cmpl
in
adc
push
popa
sbb
jb
jg
into
jbe
clc
jne
cmp
je
addl
xor
add
fs
ret
out
ror
fisttpl
cmp
xor
or
add
cmp
pop
popf
mov
jb
jg
xor
out
xchg
or
movsb
clc
mov
loope
loope
mov
pop
incl
inc
ret
adc
jl
fisttps
push
incb
lods
out
cmpsl
pop
push
inc
jmp
shl
sbb
sbb
inc
mov
cmp
pushf
jge
mov
add
ret
jne
dec
cmp
pop
sub
jae
cltd
rclb
sub
idivl
adc
or
mov
pop
push
sub
xchg
xor
add
add
xchg
hlt
push
mov
lret
pop
and
lret
inc
sbb
inc
or
adc
xchg
mov
loopne
pop
loopne
fstpl
sbb
loope
mov
addb
adc
mov
mov
orb
sbb
arpl
mov
or
or
mov
lods
in
popf
xchg
dec
dec
je
add
dec
lods
je
dec
mov
pop
xchg
loop
jmp
loopne
cld
push
out
jmp
imul
aas
ret
adc
sbb
fs
push
fucomp
push
sbb
sbb
xor
jo
and
pop
jb
add
xor
ds
add
in
rcr
mov
sub
dec
in
or
cmp
pop
inc
lock
xorb
mov
sbb
inc
or
mov
adc
fcoml
push
cli
mov
add
loopne
loope
push
sbb
popf
aam
ret
sbb
jp
jbe
adc
or
aaa
imul
xorb
lcall
and
sbb
adc
rclb
xchg
dec
cmc
ds
test
or
push
jg
push
sub
data16
or
push
rcrb
pop
xor
push
adc
and
insb
icebp
repnz
bound
or
mov
xchg
or
dec
movsb
inc
xchg
mov
push
or
push
push
inc
bound
push
dec
dec
shl
jne
mov
lea
out
enter
jo
js
inc
or
xor
push
mov
testb
adc
adc
push
fs
add
mov
outsl
aam
sbb
mov
or
je
add
jbe
adc
rolb
mov
roll
fmull
test
push
add
mov
adc
push
xchg
inc
inc
pushf
sbb
movsb
jmp
clc
add
loop
test
jg
xor
xor
pop
jmp
mov
pop
or
ds
mov
inc
cmp
jl
and
mov
sbb
lret
in
jmp
add
call
sbb
pop
in
mov
xchg
xor
xor
stos
lock
rcrb
outsl
clc
mov
xor
fsubl
jp
adc
sbb
ja
or
decl
aam
sbb
es
mov
in
mov
iret
or
xor
and
mov
sti
push
lods
js
jo
adc
add
push
push
clc
mov
jl
xor
pop
test
push
xchg
sub
adc
pop
aam
push
or
rorb
dec
loope
xlat
or
lcall
mov
lock
jo
ss
cs
stos
loopne
add
push
push
or
xchg
and
lea
dec
mov
and
out
xor
lods
xchg
ja
push
aaa
add
mov
and
pop
jne
in
cmp
imulb
xchg
xchg
aaa
je
sbb
popa
xchg
pop
imul
fs
dec
jp
mov
insl
dec
xor
dec
imul
sub
cmp
sbb
in
in
jo
shlb
andb
sbb
jns
imul
inc
mov
dec
idiv
rcr
gs
loopne
jge
and
push
ljmp
push
cltd
sbb
cmp
cmp
test
lea
cmp
fdivrl
test
xchg
push
jge
sub
push
cmpl
inc
or
add
cmp
mov
or
mov
adc
xor
sub
inc
push
mov
cmpb
cmp
push
cmp
jl
aas
xchg
je
jle
test
test
rcrb
and
add
and
adc
sbb
cld
cld
inc
xchg
mov
int3
sub
lods
jne
in
and
pop
addl
cmpsb
sbb
push
inc
arpl
add
xor
add
push
xchg
mov
ret
lret
int3
jo
cs
rcl
fadd
add
xchg
ja
in
lock
or
std
and
mov
ljmp
and
jnp
jbe
push
fdivr
or
stc
cmp
or
aam
push
xor
fwait
pop
lret
sub
mov
mov
mov
adc
add
sbb
movb
mov
jp
sbb
xor
push
sbb
notb
popl
cmp
jbe
stc
std
push
daa
lcall
push
cmp
es
out
shrl
add
mov
fsubrp
fcompl
sbb
sub
add
cmp
mov
push
pop
bnd
cmp
pop
xor
push
pusha
mov
orb
insl
sub
adc
jnp
adc
sub
add
sbb
es
and
push
xor
pop
in
or
rolb
sbb
or
movsl
pop
sbb
jecxz
xor
sub
jl
mov
mov
cmp
test
ret
xor
outsb
test
js
push
mov
fucom
push
enter
clc
imul
incl
push
mov
or
fcomi
ficoms
jg
aad
dec
ret
push
call
popa
enter
adc
add
add
leave
scas
xchg
or
incl
icebp
jle
int
mov
mov
sbb
add
in
cmp
mov
xlat
sub
pusha
jb
adcb
and
jp
and
xchg
sbb
push
dec
jecxz
fstl
pop
fimull
addb
push
inc
or
enter
test
push
mov
or
fstpt
or
outsb
pop
or
or
mov
sbb
test
push
mov
mov
and
scas
outsl
and
cmpb
and
push
and
mov
test
jmp
adc
xchg
adc
lock
jne
sub
mov
or
mov
dec
jge
shrb
or
cmp
dec
or
mov
into
xchg
mov
popa
pusha
cmp
adc
data16
inc
or
popf
cmc
hlt
stos
sbb
push
pushl
cmc
pop
clc
xchg
jle
jle
add
leave
inc
add
ret
out
mov
push
ret
loope
clc
dec
les
and
cs
outsb
cmp
cmpsl
pop
test
nop
pop
xchg
in
cmp
and
test
push
push
xchg
push
xor
pop
fs
cmp
mov
mov
mov
lock
fdivr
mov
ja
jb
jno
lret
cltd
fucomi
ja
pop
dec
jecxz
push
cld
and
and
pushf
sbb
jecxz
sub
and
int
push
sub
cvttps2pi
mov
out
incl
jb
adc
or
dec
adc
jne
sahf
ret
into
ret
test
push
jo
js
sbb
sbb
sub
push
cltd
or
lea
pop
imul
xchg
or
loop
je
push
and
mov
jg
hlt
cmp
in
repz
pop
mov
cmp
je
lea
cmp
lcall
jmp
movsb
sbb
adc
fsubrl
mov
outsl
sbb
outsl
add
or
jo
sub
sbb
adc
ja
aad
pop
jb
sbb
clc
dec
adc
push
and
pop
ret
mov
cmpl
add
popa
add
xor
lcall
test
rorb
or
sar
and
or
inc
jmp
dec
les
pop
data16
or
pcmpeqw
cli
sti
mov
push
jmp
inc
cmp
test
loope
and
add
pop
push
inc
lret
sti
idiv
inc
inc
pcmpgtd
fwait
pop
in
cmp
push
loope
and
aam
cli
mov
stos
je
int3
mov
mov
push
push
pop
out
ds
cmpsb
push
jmp
roll
or
sub
jle
ja
jmp
fnstenv
das
push
pushl
push
pop
inc
adc
sbb
leave
sub
imul
loop
jbe
jnp
jb
out
jle
mov
jb
jmp
push
pop
mov
jo
jl
mov
add
addr16
or
and
mov
fs
pop
ret
xor
push
mov
fucomi
add
lock
inc
add
inc
sub
and
pop
ret
fildll
jg
pop
test
jb
aas
and
push
fs
ljmp
std
mov
pop
add
jmp
jle
cmp
je
or
je
fimuls
or
jne
and
incb
jne
neg
data16
add
add
jne
inc
jmp
push
ja
mov
pop
push
add
pop
inc
inc
rolb
mov
xor
shrl
das
mov
mov
ret
aaa
out
mov
add
xchg
sub
xor
adc
push
test
call
addb
adc
cmpl
sub
pop
sub
xchg
push
mov
roll
xchg
or
cmpb
pop
mov
dec
cmp
lea
sarl
push
add
add
or
stos
jo
js
out
sub
xchg
adc
push
inc
mov
xor
dec
cmp
pop
out
mov
rclb
pop
add
push
push
mov
pop
mov
dec
cmpl
inc
lret
lods
adc
jg
pop
leave
mov
sub
push
mov
test
sub
add
push
cld
and
cmpsl
imul
fdivrl
int3
call
adc
call
pop
andl
scas
inc
or
cmp
sub
dec
stos
adc
adc
xchg
imul
in
mov
jle
pusha
xchg
sbb
movb
mov
jmp
call
dec
andl
push
and
in
lret
loopne
mov
add
xchg
fucomip
jo
cwtl
test
enter
sbb
mov
adc
ss
out
mov
lods
stos
and
push
push
cmovge
ficomps
les
jno
mov
hlt
sbb
jmp
push
scas
adc
sub
jl
pop
aad
mov
loopne
jl
add
cmp
adc
mov
jl
or
xchg
mov
out
out
adc
dec
mov
add
push
jg
add
sub
add
frstpm(287
test
xor
push
scas
sbb
mov
mov
mov
lds
fwait
pop
mov
pop
subb
inc
js
fucom
sbb
xor
popf
das
and
or
les
mov
frstor
test
adc
scas
gs
and
sub
add
leave
jecxz
cmp
sbb
xchg
and
xor
test
in
lods
test
pop
mov
mov
stos
jo
out
or
dec
cmp
pusha
xor
ret
mov
sub
jle
cmove
push
call
and
push
pop
mov
adc
push
pop
inc
cld
push
dec
insb
sahf
jo
add
lahf
pop
dec
sbb
cmp
push
xlat
xchg
push
clc
movsl
repnz
push
dec
sbb
inc
loopne
daa
sbb
jo
and
add
jle
add
add
arpl
mov
xchg
aam
vmovupd
popf
sbb
add
fsubl
rorb
jmp
out
push
add
bound
or
adc
inc
push
mov
mov
aam
push
pop
jmp
push
push
call
pop
mov
leave
jge
bound
or
inc
add
jmp
or
cmp
bound
cmp
pop
mov
mov
xor
jb
jmp
or
cmpsl
lea
xchg
push
sub
incb
xorl
sahf
rorl
add
add
sbbb
jg
jl
lea
push
mov
cwtl
add
xor
pop
xor
popa
push
sub
fdiv
pusha
rcr
cwtl
adc
lock
ss
push
dec
push
or
clc
push
push
cmp
movsb
daa
push
call
dec
xor
push
mov
add
dec
leave
aad
das
mov
je
sub
lds
mov
dec
adc
mov
push
adc
ror
clc
add
mov
and
test
dec
sub
hlt
lods
xor
loopne
xor
push
aad
mov
add
test
pop
xor
xchg
mov
jae
add
lret
mov
dec
lea
push
cmpsb
cld
cli
push
mov
stc
push
int3
dec
std
aaa
push
cmp
jl
pop
adc
add
in
loopne
paddusb
add
add
add
loop
inc
add
jle
sbb
sbb
addr16
movl
xchg
and
imulb
adc
and
mov
fcoml
mov
imul
aam
fdivr
cmp
xor
mov
add
enter
loope
dec
test
std
xor
cmp
xor
and
repnz
add
or
push
add
ljmp
shl
jl
arpl
das
mov
sbb
lcall
int3
push
leave
fst
ds
in
aam
emms
adc
push
or
xor
int3
in
imul
mov
inc
inc
rclb
loopne
adc
jg
inc
fstp
pop
int3
jmp
lea
pushl
push
fldenv
arpl
xchg
pop
lret
cmp
inc
pop
hlt
pop
fcoml
or
addr16
jbe
jnp
fst
js
jne
sbb
imul
test
xor
das
mov
pop
jg
mov
ljmp
push
dec
lahf
sub
xor
mov
push
call
or
pop
inc
add
push
lock
add
cmp
sub
fstl
fincstp
sub
dec
popf
leave
push
add
cs
xlat
mov
icebp
lcall
cld
push
sbb
add
inc
add
cmp
mov
sub
pop
jg
jo
adc
push
ror
lods
add
popa
pop
inc
scas
and
sar
sub
fbstp
repz
ja
cmp
jae
adc
dec
xor
mov
xchg
test
mov
sub
xor
or
fsubrs
imul
imul
dec
and
out
inc
cmp
jb
pop
push
je
sub
push
xor
add
fsubs
adc
add
outsb
push
and
in
dec
mov
loopne
add
cs
cmp
je
add
jb
dec
in
xor
faddl
and
cmp
fldt
sub
push
and
xor
fst
fnsave
jb
adc
jbe
jne,pn
test
in
mov
fsubr
or
ret
shlb
mov
in
iret
ret
int
add
add
push
popa
jp
int3
movsl
imul
dec
add
xchg
and
jge
rcrl
pop
add
cmp
dec
add
push
pop
data16
cld
shlb
cmp
jl
jne
jp
popf
jg
fwait
dec
add
data16
jmp
push
das
push
xchg
movzwl
imul
mov
enter
sub
jle
mov
add
shr
ss
je
push
add
in
cld
mov
sub
dec
pop
cmovs
dec
in
and
add
cmp
cmp
mov
fstl
in
push
or
insl
pop
mov
cmp
enter
push
test
mov
xchg
mov
sbb
pop
addr16
pop
incl
ret
jmp
sbb
mov
cmp
push
jns
cli
xorb
fst
adc
mov
faddl
ss
push
fwait
mov
push
fnop
lock
xlat
jmp
mov
push
les
or
push
loopne
lret
ret
xor
mov
dec
mov
xor
nop
adc
loopne
jno
add
cmp
outsb
out
pop
push
je
push
sub
inc
jmp
xor
js
mov
add
pop
fstpt
inc
jns
or
test
dec
test
loop
pop
inc
jmp
push
jmp
push
dec
mov
call
enter
dec
fs
ret
popl
adc
jmp
loopne
into
dec
jne
push
loop
arpl
and
mov
js
sahf
loopne
es
mov
inc
push
adc
xor
mov
call
sbb
scas
dec
push
jmp
push
dec
pop
mov
push
or
out
lcall
into
test
dec
mov
shrl
or
sbb
xor
aad
mov
inc
or
add
mov
add
dec
adc
mulb
jmp
rorb
xor
repz
pop
pop
dec
add
sub
fwait
pop
jmp
xor
inc
add
and
outsl
cmpsl
push
mov
dec
add
or
js
xor
popf
cwtl
lar
stc
mov
fisubl
dec
insb
cli
js
mov
lods
mov
bnd
xor
jbe
push
popa
data16
or
jb
inc
ja
add
pop
out
adc
leave
sbb
dec
mov
filds
sti
fstl
jg
push
loop
data16
dec
cmp
push
pusha
sub
pop
int
xor
dec
push
rcll
sub
sub
int
int
pop
das
jle
cmp
inc
je
gs
popf
les
fadds
add
dec
jp
fisttps
es
or
stos
jmp
and
mov
clc
insb
pop
inc
jl
jle
sti
pop
jne
notl
shr
push
inc
pushl
inc
adc
into
mov
mov
and
scas
test
scas
or
and
outsl
push
mov
dec
fsts
andl
js
outsb
ret
cmp
pop
test
stos
sti
inc
cmp
pop
in
daa
call
pop
jmp
adc
mov
sub
xor
test
ret
push
rcrl
pop
jb
stc
lock
decl
orl
push
adc
add
pop
add
in
inc
das
adc
lds
xor
js
push
movb
cmp
cmp
push
popa
jp
adc
mov
inc
fs
dec
add
jge
pop
bound
pushf
cld
jl
lahf
lahf
pop
ret
dec
push
xor
or
je
cmp
lahf
pop
sub
je
ds
xorb
out
test
and
jne
cmp
popf
stc
mov
mov
ret
pop
aaa
pop
cld
rorb
push
outsl
jne
outsl
pop
inc
shll
in
cld
inc
rorb
adc
dec
popa
sbbl
shrb
xor
mov
cmc
jge
lea
and
incl
add
fistpll
push
jg
push
shlb
pop
push
adc
nop
outsl
das
pushf
outsb
mov
inc
inc
add
je
sub
cwtl
fs
aam
adc
xor
add
cmp
mov
push
jg
jg
jl
neg
push
push
mov
inc
add
pop
jg
sbb
and
mov
xchg
in
into
outsb
push
adc
and
sti
mov
repz
mov
adc
mov
inc
hlt
xor
add
mov
inc
je
mov
and
ss
outsl
push
ss
movb
cmp
pop
add
loope
jle
xchg
mov
sub
adc
push
mov
or
mov
push
mov
and
sbb
jmp
jmp
xchg
lret
xchg
fdivrl
cli
push
movsb
jnp
je
daa
in
sub
or
mov
sbb
push
es
sbb
push
push
cmp
ret
sbb
or
add
hlt
cmpsl
sbb
inc
lock
mov
hlt
sub
xor
fsubr
das
pop
cmpb
int3
jbe
pop
jge
inc
mov
mov
push
jo
dec
pop
sub
push
mov
mov
call
push
xor
outsb
outsb
or
je
sbb
sub
pop
subl
das
out
mov
inc
xor
jge
sbb
dec
in
cmpb
insb
pusha
inc
sub
ss
fmull
jns
andl
jns
pop
add
adc
jmp
adc
pop
adc
aaa
sbb
and
mov
test
clc
loop
sub
pop
pop
sbb
test
mov
cmp
pushf
cltd
loopne
xor
js
adc
adc
and
add
push
sbb
lea
mov
lea
clc
into
jo
loope
mov
adc
jl
push
clc
pop
pop
pop
cmp
mov
jb
into
inc
f2xm1
std
push
roll
jne
mov
fidivrl
jns
aas
arpl
mov
mov
cmc
xlat
xchg
ret
push
pop
push
sub
dec
jge
lods
in
hlt
daa
ljmp
xchg
push
scas
add
imul
je
jmp
pushf
mov
jnp
xor
sub
enter
mov
push
or
mov
add
hlt
xor
rcrb
clc
jne
std
sub
mov
add
push
jne
adc
xchg
loope
into
icebp
je
and
in
mov
add
add
adc
addr16
movsl
push
fmull
add
cmp
pop
push
or
cli
insb
cli
rep
mov
push
lock
adc
loop
mov
ljmp
add
rolb
arpl
insl
mov
rcl
pop
jmp
scas
mov
mov
aaa
or
sub
stc
ds
push
sub
add
test
xor
jl
inc
std
les
insb
inc
pusha
mov
test
pop
jle
push
aas
gs
sub
add
ds
mov
jmp
add
icebp
imul
lcall
mov
lahf
inc
outsb
pop
pushl
sbb
mov
add
push
repnz
jne
adc
rol
jg
dec
fwait
dec
push
sbbl
and
out
adc
enter
sub
mov
and
pusha
dec
inc
in
mov
pop
push
ja
cmp
jl
into
sar
mov
add
mov
add
cmp
dec
sub
pop
push
lret
std
lea
jnp
in
and
xchg
inc
adc
jmp
cwtl
jge
mov
lock
push
and
adc
push
mov
xor
and
push
push
mov
lcall
and
add
mov
mov
rolb
je
test
xor
out
testb
add
add
xchg
out
add
add
xchg
out
jge
je
loopne
xor
cmpl
fs
sbb
pushf
push
xchg
jbe
jl
adc
and
fsubr
add
aam
iret
std
mov
add
cld
xor
clc
sti
into
icebp
jo
mov
call
scas
sti
cmp
or
adc
sahf
iret
and
xchg
orb
leave
js
cltd
mov
pop
push
adc
mulw
enter
cmp
adc
cmpsw
or
popa
adc
imul
add
mov
inc
jbe
mov
gs
cmp
or
daa
pop
jb
xchg
inc
pop
adc
test
maxps
add
aam
mov
pushf
push
xchg
xchg
pop
xchg
or
jne
movsb
orl
push
and
rol
fimull
adc
sbb
mov
push
dec
incb
mov
and
outsl
sahf
ss
je
inc
sbb
outsl
fs
add
test
sbb
add
pop
arpl
not
jne
in
mov
jo
in
push
jo
sahf
mov
jecxz
add
or
inc
lock
adc
adc
data16
dec
adc
insl
das
jle
add
adc
and
pop
sbb
adcb
mov
adc
push
pop
or
add
es
ds
pop
push
int3
enter
addb
mov
cmp
and
adc
lcall
add
icebp
xchg
out
pop
and
int
mov
and
dec
jae
outsl
mov
pop
lcall
sarb
adc
subl
or
cmp
push
gs
push
cmp
in
cmp
inc
cmp
xchg
sub
xor
mov
cmp
pop
mov
mov
cmp
or
inc
add
add
pusha
add
mov
sbb
pop
push
cmp
aaa
inc
addr16
mov
pop
daa
in
push
mov
and
mov
inc
or
mov
add
mov
cld
test
iret
add
cltd
in
fs
or
xchg
cltd
xor
jo
les
in
mov
std
sbb
hlt
add
rclb
jno
loopne
clc
add
addl
mov
push
ret
imul
jge
cmp
pop
lret
xchg
in
jno
in
and
cs
adcl
clc
dec
push
pusha
enter
pop
add
inc
hlt
adc
add
mov
inc
or
rolb
or
repnz
into
mov
mov
inc
sbb
stc
movsl
adc
jne
cld
adc
or
cwtl
in
mov
sbb
mov
push
push
cs
push
cltd
push
in
cwtl
sbbl
cs
adc
add
fmuls
mov
jns
pop
repnz
in
aas
pusha
pop
push
cmp
ret
and
shlb
sahf
imul
xor
pusha
sub
add
pop
and
shlb
in
add
dec
aaa
adc
adc
hlt
je
pop
cmp
in
inc
cs
in
push
adc
in
dec
adc
push
pop
cmp
adc
xor
cmp
sub
sbb
orb
and
xor
xor
mov
xor
sbb
fs
lcall
jmp
sub
jne
sahf
jnp
and
inc
fistl
sub
mov
sub
jge
push
cltd
adc
ret
mov
aas
ds
in
adc
cmpsl
rolb
and
aaa
call
sbb
cmpl
mov
adc
fs
xor
cltd
xchg
lea
mov
cmp
sbb
mov
push
inc
or
cmp
xchg
xor
stos
sahf
sub
fbld
sti
jmp
mov
cmp
jne
or
pop
mov
test
mov
enter
fists
hlt
jne
test
push
shrl
and
push
xchg
adc
mov
and
jmp
aam
lret
sbb
inc
cwtl
and
lcall
fimull
add
xchg
cs
pushf
nop
inc
addb
push
ds
sbb
pushl
out
mov
push
add
add
add
call
loopne
lret
adc
std
daa
xchg
inc
jle
xor
jmp
xchg
add
jo
add
aas
daa
lods
jbe
push
push
scas
movsb
inc
sarl
std
mov
cwtl
dec
adc
adc
push
inc
adc
mov
es
lcall
mov
add
fidivs
loopne
sbbl
add
or
cmc
jge
jecxz
cli
dec
xor
inc
push
push
push
push
xchg
mov
push
hlt
add
mov
push
fadds
jecxz
insl
mov
or
xor
jne
inc
or
push
push
pop
xor
mull
sahf
or
push
jmp
mov
inc
sti
and
sub
aaa
subl
call
cmp
cmpb
jne
mov
js
pop
xchg
dec
add
add
adcb
push
adc
push
mov
insb
sub
cmp
add
push
je
xor
cmp
mov
ds
js
popf
subl
sahf
cmpb
movsl
jnp
add
enter
jp
xorb
and
jg
cmp
in
pop
mov
lock
lcall
lret
jg
xchg
xchg
icebp
or
xchg
icebp
and
mov
pop
int
rolb
jmp
out
scas
mov
xor
mov
xchg
cmp
es
or
or
jbe
fisubl
cwtl
or
out
xchg
push
mov
arpl
push
mov
mov
inc
mov
mov
into
lods
sarl
cmpb
mov
repz
rclb
inc
cwtl
xchg
sti
add
jmp
cmp
and
add
adc
push
sti
xor
sbbb
and
js
or
or
outsb
inc
je
data16
iret
test
push
inc
mov
cs
ret
or
iret
jae
adc
rorb
imul
push
push
push
es
test
or
ss
pop
jb
shl
cld
pop
and
xor
jnp
out
push
lods
push
daa
push
into
mov
push
out
ds
shr
adc
cmp
hlt
mov
ss
mov
push
rorb
pusha
test
sbb
enter
mov
pop
inc
incl
mov
mov
test
jne
neg
movb
pop
mov
movsl
in
sbb
and
push
in
hlt
or
mov
loop
pop
stos
push
mov
loopne
mov
cmp
jae
mov
and
cmp
or
int3
xor
mov
cmp
int3
or
push
mov
sbb
jle
push
mov
push
sbb
insb
push
and
stc
push
hlt
sub
cmp
jb
adcb
sbb
xchg
push
dec
xchg
add
push
add
adc
push
mov
add
mov
push
and
pop
mov
sbb
adc
fldcw
les
add
cmp
je
cmp
je
cmp
lcall
notl
xor
jmp
and
pop
dec
ja
xor
inc
adc
push
inc
lods
jg
add
pop
add
ret
cmp
mov
scas
jne
add
pop
add
and
in
pusha
inc
add
ja
pop
mov
loope
cmpsl
je
pop
aad
adc
inc
stc
add
add
adc
xor
mov
cmp
sub
add
cmpsb
jnp
push
test
pop
add
mov
add
andl
mov
fdivr
mov
push
dec
fcomip
adc
mov
inc
sahf
inc
push
pusha
sti
sbb
xor
cmp
repz
movsl
std
leave
sub
jmp
and
aaa
jmp
pushl
popa
jl
data16
push
imul
add
dec
shl
inc
cmp
add
lods
xchg
xchg
hlt
mov
ret
sbb
outsl
adc
and
push
inc
imull
push
push
push
je
data16
mov
and
cmpsb
adc
sbb
in
sub
xchg
cmp
inc
or
pop
loopne
xor
add
jno
jo
out
mov
mov
xor
push
mov
pusha
idiv
sbb
adc
sahf
add
adc
adc
insb
pusha
icebp
ret
adc
fdivrp
dec
notb
cli
mov
mov
add
jmp
sub
fnstsw
push
fucomi
push
notl
mov
pop
js
add
jmp
push
xor
mov
out
cltd
mov
mov
push
add
les
mov
add
movsl
icebp
dec
adc
and
test
or
xchg
mov
cmpb
push
mov
push
test
push
outsl
dec
lea
pop
leave
je
push
lock
int
les
test
or
xlat
pop
xor
bound
mov
jmp
xchg
dec
or
in
rorb
add
sbb
orl
call
xchg
push
je
or
or
adcb
xor
jne
mov
xchg
xchg
jne
push
sbb
push
fadds
pop
pop
dec
jmp
cmp
mov
dec
add
push
mov
jbe
imul
or
jle
xchg
je
and
xor
jmp
aam
jge
push
push
xor
insb
mov
add
lock
dec
xchg
inc
test
lcall
fdivs
dec
mov
inc
add
add
cmpl
sbb
sub
mov
popf
or
sbb
mov
or
test
or
dec
rcrb
fcoml
pop
lea
mov
cmp
push
ret
mov
add
push
mov
or
push
mov
incb
icebp
outsl
inc
or
jns
mov
cmp
in
add
int3
inc
les
fstl
add
cmpsl
pop
adcb
inc
testb
push
inc
jne
gs
adc
and
ja
mov
stos
xchg
lahf
xchg
leave
mov
je
sub
test
mov
js
pop
jne
in
or
jae
mov
lods
mov
mov
shrl
or
loop
jmp
clc
sbbb
mov
xlat
pop
cmp
jmp
shrl
jl
pop
sub
aaa
aaa
dec
pop
jns
sbbl
jbe
mov
loopne
push
adc
push
cmp
pop
push
ret
and
xlat
mov
jno
mov
xchg
mov
mov
add
inc
je
adcl
or
sub
mov
mov
bound
xor
or
add
mov
or
push
mov
jg
sbb
cmp
dec
mov
adc
addr16
xor
push
cmpsl
mov
sbb
ja
inc
or
or
out
sub
push
incl
stos
movzwl
je
mov
xchg
sub
xor
stc
add
rol
and
mov
push
jne
dec
inc
add
pop
andps
push
mov
std
xchg
cli
test
mov
or
or
jne
add
cwtl
or
jmp
adc
add
push
imul
hlt
jo
jmp
shr
sbb
xchg
sub
or
and
pop
sbb
push
and
popa
fidivrl
pop
push
out
in
push
test
xor
loop
inc
add
std
push
incb
insl
or
mov
add
ljmp
push
fcoms
inc
cmp
jl
jo
add
pop
hlt
cmpsl
xor
shll
in
dec
mov
dec
in
push
cmp
cmp
inc
in
je
push
sub
orb
inc
call
addb
dec
outsb
pop
jo
fucomp
jne
shlb
outsb
add
inc
adc
push
push
mov
test
cmp
mov
testl
cmp
push
adc
push
shl
dec
sbb
movsb
add
xchg
or
mov
push
inc
loop
lret
jne
mov
orb
daa
mov
sbb
mov
adc
ret
mov
cmp
in
adc
xrelease
and
dec
clc
loopne
mov
lret
push
xchg
jne
or
cmc
add
sbb
pop
fdivl
es
pop
cld
scas
rorb
insb
movsl
cmp
adc
mov
push
subl
and
push
xor
jecxz
aam
push
mov
sbb
pop
js
orl
mov
insl
shlb
pop
push
aaa
sub
push
test
je
add
movsb
or
jbe
mov
mov
jns
jp
jge
jl
lods
add
rorb
ret
jl
cld
sub
mov
jne
je
iret
add
mov
sub
lock
sbb
mov
xchg
dec
pop
push
adc
lods
and
js
pop
push
mov
and
jbe
dec
cmp
mov
jle
cmp
lret
mov
push
insb
xor
movsb
pop
sub
ja
sub
bound
insb
mov
or
xchg
pop
shrb
add
lods
xchg
nop
mov
xadd
cltd
or
addb
adc
imul
jnp
pushf
aaa
pop
int3
in
nop
cld
cs
push
mov
add
push
adc
sbb
and
mov
push
push
lcall
dec
dec
dec
add
push
outsb
mov
mov
in
sbbb
sbb
sbb
jg
mov
pop
inc
outsl
ret
popa
adc
mov
push
pop
mov
in
pop
inc
pop
push
mov
arpl
pusha
movsl
mov
add
je
imul
aas
jmp
pushl
rdtsc
lret
jl
or
sub
push
sbb
cmp
pop
cmp
mull
push
pop
jge
cld
and
cmp
lea
lret
ja
sbb
les
cmp
add
lock
rcrb
enter
cld
ja
xchg
push
out
push
loope
sub
adc
mov
jg
xor
pushf
and
rcll
out
sbb
aam
cs
mov
test
push
lret
and
sub
test
or
jbe
lock
cmp
je
in
sbb
mov
adc
dec
add
cmc
push
dec
xor
cmp
add
fstpt
das
sub
push
iret
lea
add
add
rep
les
and
pop
dec
xor
xchg
daa
dec
or
scas
xchg
into
outsb
dec
es
push
test
and
mov
fmuls
and
cmp
cmp
pop
or
popa
je
add
imul
sbb
jl
lea
mov
scas
xchg
adc
push
jge
rorl
sub
pop
clc
adc
and
push
je
or
sbb
jnp
cmp
jnp
lds
or
sub
mov
add
clc
sahf
mov
add
jmp
inc
cmc
mov
xchg
and
dec
sti
stos
jl
jne
test
sbb
test
out
fadds
js
mov
push
inc
push
mov
aas
ret
sti
cmp
sbb
lea
mov
jle
add
jno
sub
add
and
mov
add
mov
pusha
imul
inc
cmp
add
fcmovbe
or
push
add
jo
pop
imul
loop
sub
push
ret
loop
cld
push
insl
loope
cmpsb
scas
nop
pop
loope
pushf
add
subl
mov
push
xchg
or
mov
xor
ret
cmp
add
inc
frstor
sub
lea
clc
pop
movl
sub
in
pop
xor
inc
mov
mov
stc
jg
dec
push
xchg
dec
xchg
or
add
jle
sub
mov
fadds
loopne
sbb
inc
dec
shl
lcall
pop
sbb
jo
rorb
push
lea
dec
mov
fcoml
jae
push
push
ret
or
push
cmp
push
inc
cld
jl
out
mov
sub
sbb
or
xchg
mov
inc
add
jl
dec
scas
jge
mov
wbinvd
pop
cld
roll
adc
lea
std
xorb
inc
js
xor
cmp
dec
pusha
jo
pop
add
jmp
sar
mov
and
mov
adc
push
jmp
cmp
lcall
pusha
pusha
loopne
cmpl
add
adc
daa
and
add
cltd
rolb
dec
add
testb
lret
pop
cld
xor
add
jne
mov
shl
inc
add
add
shrb
push
ror
cmpsl
imul
imul
pushf
cmp
mov
cmpsl
lea
dec
push
mov
sbb
je
addr16
popa
test
std
jmp
sub
mov
rclb
or
push
jmp
push
or
test
cmp
cmp
jbe
lods
in
lods
mov
or
adc
cmc
je
dec
pop
ljmp
dec
sub
inc
ret
movl
scas
out
aam
stos
mov
add
clc
lea
fsubr
inc
stc
cmp
xor
or
adc
jmp
mulb
mov
lea
rcrb
push
mov
in
push
in
das
push
xchg
xchg
mov
dec
or
push
pop
pop
pop
push
bound
dec
imul
pop
add
je
dec
jne
mov
sar
test
loop
mov
insb
add
jmp
mov
mov
jl
jmp
mov
or
xor
adc
addb
or
sub
sub
int3
cmp
jne
push
idiv
stos
dec
inc
cld
adc
lea
inc
cmp
jle
les
adc
dec
add
mov
ja
push
and
jbe
mov
stos
adc
mov
insb
movsl
xchg
mov
mov
mov
decl
imul
pop
jl
pop
test
or
subl
adc
jne
test
add
orb
lret
or
enter
ret
outsb
cmp
cmp
add
and
push
cmp
jne
cmpb
add
push
xchg
das
xchg
insl
jmp
mov
add
negl
and
les
into
fidivrl
decl
mov
xchg
cmp
int
movb
sbb
lret
lods
cli
sub
js
lret
add
repz
sub
fiadds
or
movsl
cmp
int3
popf
adc
adc
jp
or
add
push
sarb
rcl
gs
test
lret
outsb
or
test
ret
repnz
nop
ret
xchg
stos
push
dec
andb
pop
clc
hlt
rolb
pop
xlat
aam
loop
test
pushf
xor
inc
pop
mov
xor
jne
enter
or
ret
xchg
scas
push
inc
test
stos
dec
cltd
adc
fsubrl
sarl
das
fcmovbe
xor
jle
fwait
movsl
inc
loope
pop
cmpsb
outsb
mov
sub
or
je
call
push
cmp
mov
xchg
push
cli
lea
out
test
in
movsl
rcl
rorb
ror
rol
dec
push
cltd
and
mov
pop
je
jb
les
pop
lock
dec
push
dec
jo
and
mov
je
testb
cmp
sbb
cmp
add
inc
adc
ficompl
cmp
xchg
fisttpll
clc
push
jmp
pop
adc
sub
cmp
jne
add
rcrb
dec
push
sub
adc
push
mov
in
and
xor
ror
test
push
cmpsb
lock
xor
lods
mov
das
fcom
add
fmul
popa
pop
loop
aad
lock
add
negb
xlat
jge
jo
and
and
mov
imul
mov
dec
xchg
hlt
xchg
shlb
push
test
jns
es
test
mov
dec
or
add
xchg
lret
movsb
and
fiaddl
pop
adc
and
add
add
fdivrs
jecxz
sub
jb
cmp
add
dec
or
and
jbe
je
cmp
mov
jmp
test
ja
jmp
push
and
xlat
lds
lahf
hlt
or
bnd
iret
push
adc
popl
testl
add
mov
and
sub
sbb
icebp
bound
mov
sbb
or
adc
xor
and
adc
loop
add
inc
mov
mov
sbb
xor
push
fdivrs
dec
addb
and
cmp
inc
addl
mov
xchg
add
shlb
mov
xlat
popa
mov
sub
jmp
test
sub
sbb
dec
cmp
cmp
movsb
mov
mov
mov
negl
mov
mov
push
add
dec
das
fld
test
lock
negb
call
shll
sub
jbe
jp
push
and
test
jne
shll
lret
popa
addl
dec
sbb
or
add
pop
popf
pop
push
add
cmp
xor
jg
je
mov
push
clc
fildll
and
mov
inc
fcoms
xchg
adc
xor
and
jne
test
enter
inc
cmpsb
fcomi
inc
ret
sbb
jns
cmp
push
add
xchg
sbb
pop
dec
add
imul
adc
push
add
push
push
rolb
loopne
movb
je
adc
pusha
push
xchg
xchg
add
daa
fisubrl
js
fdivrs
add
or
mov
cmp
jb
add
mov
or
jne
sbb
cld
stc
pop
and
jne
pushl
mov
push
cmp
pusha
mov
fbstp
sub
jne
mov
mov
jnp
pop
pop
scas
cmc
andl
add
int3
aam
jecxz
cmc
loopne
pop
push
setge
jmp
push
fdivrs
fadd
and
push
pop
sbb
dec
pop
mov
ret
shrl
push
cmpsb
insb
push
mov
lock
mov
test
jl
push
pop
subb
cmp
lock
ljmp
rclb
pop
add
mov
inc
inc
inc
inc
imul
pop
cmp
jo
push
sub
mov
jbe
into
rolb
push
clc
je
mov
fs
adc
pushf
fcompl
mov
cmp
pop
sbb
mov
xor
jmp
sbb
xchg
jle
sub
ja
pop
push
pop
fs
ret
push
aaa
dec
jecxz
aam
lahf
sahf
pusha
mov
or
push
cmp
fdivrs
add
adcb
add
lea
test
movsb
scas
inc
sti
das
mov
fcomp
lahf
inc
push
jbe
cld
je
cmp
fdivrs
sbb
sbb
or
push
pop
jle
loop
mov
dec
cmp
pop
inc
cmp
jl
push
pop
mov
push
pop
adc
sub
out
xchg
lret
push
and
mov
xor
xchg
add
lds
shll
and
push
pop
pop
dec
lock
ja
outsl
cmp
xor
xor
ret
enter
mov
pop
jle
cmp
inc
dec
and
mov
pop
jl
mov
adcb
inc
pop
jne
pop
gs
xchg
roll
sub
les
adc
ret
scas
adc
adc
push
xor
and
enter
lcall
fstps
lahf
jg
push
pop
call
sbb
sbb
lea
inc
subl
cmp
xchg
and
inc
add
cmp
cmp
push
dec
pop
jle
aas
xchg
jo
das
or
je
fbld
cmp
jl
jmp
inc
or
cmp
mov
fisttps
outsl
push
mov
or
lcall
lock
dec
push
clc
js
ja
dec
or
add
add
pop
cmp
jne
cmp
jne
call
add
sub
shlb
jnp
mov
loope
mov
es
adc
mov
push
push
add
hlt
sub
inc
xchg
addb
jns
mov
andl
sub
cmc
xor
pop
jne
sbb
push
in
push
nopl
inc
mov
push
lcallw
inc
xor
mov
sbb
idivb
push
je
jg
or
pop
shll
fisttps
mov
rorb
or
inc
pop
cmp
jle
loopne
shll
sbb
xor
pop
adc
mov
xor
cwtl
inc
push
gs
jb
jecxz
add
pop
jns
movl
and
sub
xchg
jbe
fsub
and
sbb
or
mov
push
fstpl
es
push
add
test
popa
repz
ds
imul
mov
xor
mov
mov
jge
je
shrl
and
in
xor
push
jo
rcrb
pmaddwd
js
cmp
mov
das
push
mov
nopl
scas
clc
push
fstpt
loope
xor
cmp
mov
cmp
sbb
in
jecxz
inc
mov
jge
mov
jg
and
inc
pop
jmp
xchg
aad
jne
add
in
and
sbb
dec
xor
mov
mov
movl
and
outsb
test
push
xchg
idivb
and
add
lea
or
pop
movsb
pop
addl
mov
xchg
jbe
xor
fcoml
xor
inc
or
mov
adc
push
test
int3
dec
loope
xor
icebp
xchg
pusha
mov
aaa
daa
cwtl
mov
pop
loopne
sbb
and
mov
cmp
mov
cmp
push
jo
push
in
bound
rcll
ret
add
sahf
sub
in
in
out
jmp
mov
je
inc
xchg
fwait
sarb
sbb
lock
adc
jnp
dec
jb
shll
and
push
hlt
loopne
test
cmp
pop
in
in
shrb
ret
and
andl
or
sbb
test
cmp
scas
xor
pop
mov
loopne
adc
shrl
aam
js
pop
outsl
fs
push
int3
sahf
stos
shr
mov
mov
cmc
push
clc
push
mov
jne
fcomp
sub
xor
jb
jp
inc
or
decb
pop
xchg
cmp
add
dec
dec
shll
shlb
sub
sub
mov
enter
loop
sub
movsb
mov
aas
push
cwtl
testl
std
js
sub
and
xorl
mov
jge
pop
mov
shlb
imul
sbb
push
inc
stos
adc
shlb
jge
adc
shlb
and
inc
xlat
xlat
add
in
mov
push
mov
loopne
cmc
inc
loopne
sbb
add
jne
aad
mov
add
dec
mov
fdivs
cmp
sti
mov
popf
add
adc
daa
cmp
cmp
into
mov
call
mov
sbb
or
mov
roll
push
xor
push
or
cmpb
xlat
sub
cmp
insb
mov
xlat
cmp
jae
sub
dec
bound
cmp
jae
jg
lods
add
jne
test
cmp
dec
mov
push
dec
out
mov
rorl
xor
cwtl
mov
jo
add
mov
bound
cmp
xor
add
mov
loopne
add
test
int3
leave
and
cmp
adc
push
sbb
sub
and
and
xor
add
fisubs
mov
add
pusha
out
subb
mov
loopne
cmc
xlat
lods
notb
lock
lea
jbe
add
or
or
xor
rclb
stos
dec
test
inc
or
in
je
dec
gs
jb
and
add
sahf
and
add
add
adc
or
pusha
jmp
add
je
popa
sbb
jmp
and
xorb
sub
loopne
lcall
out
into
and
stos
push
push
push
adc
adc
pop
mov
mov
cmp
push
xchg
ret
and
add
pop
mov
dec
cmp
adc
ficoml
das
fisttps
xorb
add
popa
mov
lds
fildl
sub
lods
mov
pop
and
sbb
dec
pusha
rclb
and
xorb
jmp
push
xor
jmp
push
aaa
frstor
cmp
push
and
and
xor
aam
sbb
and
sub
scas
mov
popa
int
filds
jl
sub
dec
or
mov
push
shr
movsl
pusha
pusha
mov
push
ss
mov
lock
sub
or
scas
or
push
pop
inc
repz
sbb
out
xor
test
clc
test
add
jo
clc
cmovle
xchg
rorl
ficoms
loopne
xor
lret
mov
and
and
dec
or
sub
xor
inc
sub
scas
ljmp
fsts
test
fistl
mov
sub
xchg
pop
add
std
mov
push
stos
mulb
rcll
mov
inc
popf
xor
cmpl
add
mov
shll
push
lock
xchg
push
xorl
xor
jo
cld
push
bound
sub
jo
and
mov
lods
or
lahf
fdivrs
add
pop
test
jns
mull
sbb
repz
aas
mov
fst
ds
sub
push
and
cmc
rclb
nop
data16
or
js
cmpsl
jmp
pop
mov
sbb
jb
xchg
rcrb
dec
push
add
cmp
mov
mov
rcr
repz
sbb
push
cld
icebp
mov
jb
movsb
repnz
add
push
mov
and
pop
cmp
adc
dec
mov
add
test
sti
add
idivb
enter
mov
mov
xchg
mov
sub
lods
pop
mov
jnp
fnstenv
lods
sub
xor
sarb
je
lea
and
add
xor
inc
mov
por
and
cmpsb
inc
fsubrl
push
sbb
mov
pushf
lret
inc
jbe
inc
dec
pop
pop
dec
mov
push
lods
or
pop
push
pusha
mov
inc
cmp
in
popa
xchg
add
adc
ficomps
push
test
pushf
popf
popf
nop
push
fcoms
xlat
lods
or
rorb
inc
mov
push
dec
aad
pop
adc
mov
or
dec
mov
add
lds
add
scas
cmp
xor
sub
add
cld
jmp
mov
in
add
sbb
fmuls
jnp
enter
or
movsb
or
subb
cmp
fistl
lock
fists
jno
fnsave
push
je
movsl
icebp
mov
mov
sub
or
ret
test
pop
push
sub
and
in
and
or
imul
insl
sbb
and
and
push
cmpsb
mov
mov
mov
jbe
lret
xor
sahf
xchg
sti
pusha
adc
xchg
add
add
mov
lret
sbb
gs
jle
test
inc
loope
mov
dec
jle
and
stc
inc
lods
icebp
adc
jae
mov
jne,pn
test
add
fdivr
fucomi
gs
ficomps
sti
mov
aaa
leave
sbb
push
into
pop
mov
mov
xor
loope
dec
daa
push
lds
push
push
and
xor
mov
outsl
rolb
hlt
push
imul
push
xor
test
popa
pusha
rcll
sbb
sbb
test
jmp
pushf
dec
pop
add
sub
adc
mov
push
fmull
mov
add
add
out
mov
pop
cmp
inc
inc
push
add
sub
mov
jmp
xor
xchg
add
or
xor
ret
ja
push
scas
lock
pop
inc
jne
and
push
push
popa
adcb
aam
push
push
push
mov
imul
mov
sahf
push
nop
cmp
push
pop
add
sub
add
push
lahf
nop
adc
out
push
mov
and
test
and
mov
push
or
cs
add
add
push
add
mov
lea
pushw
jns
enter
sbbb
or
mov
cmp
inc
outsb
xor
cwtl
test
imul
loopne
push
xchg
and
push
ds
jnp
push
imul
dec
or
push
mov
push
jns
push
mov
arpl
and
fwait
xor
ror
int3
adc
jbe
mov
add
aas
repz
gs
fldl
sbb
sbb
jp
or
in
add
jle
add
pop
testb
and
adc
mov
adc
data16
clc
xor
and
pop
mov
shlb
cmpsl
xchg
mov
ds
xor
push
pop
add
mov
jae
xor
pop
xchg
adc
jmp
subb
dec
cwtl
test
jecxz
push
push
mov
fdivrl
aas
xchg
enter
sub
pop
nop
push
lahf
shlb
movsb
out
pop
dec
scas
xchg
fucomi
pop
lds
and
cmp
test
mov
lods
pop
pusha
fidivl
out
pop
or
mov
push
fs
inc
pop
mov
addb
sbb
clc
pusha
cld
and
jae
lret
mov
pop
shlb
add
inc
inc
jb,pn
pop
insb
into
xchg
insl
lcall
and
or
imul
fcoml
xchg
pop
and
mov
movl
mov
inc
movsl
adc
mov
push
fs
dec
wrmsr
in
and
fstpl
pop
ret
and
jp
jl
add
pushf
push
clc
lahf
test
idivl
bnd
push
into
orb
jmp
adc
inc
stos
lea
je
sub
enter
in
pop
and
mov
sbb
jmp
les
push
fndisi(8087
sub
popa
push
popa
mov
ret
push
movsl
push
push
or
push
pop
or
and
inc
leave
adc
fildll
mov
push
cmp
or
mov
cmp
jbe
adc
push
sub
push
mov
inc
push
cmpsl
out
sbb
dec
cmp
fistpll
fisubrs
sub
sub
je
bound
jo
outsl
stos
sbb
or
adc
mov
and
mov
mov
arpl
shlb
mov
and
hlt
adc
xor
lock
jnp
or
xor
add
push
vcmpps
jno
add
int
cmpb
dec
jmp
data16
in
and
cmp
sbb
push
push
aad
inc
and
add
cmp
das
jecxz
int
or
or
movsb
or
sub
scas
sub
popa
add
add
dec
add
push
in
add
mov
and
add
jbe
fwait
mov
and
push
or
mov
jmp
pop
pop
pop
and
mov
loope
rclb
sub
xchg
push
push
sbb
push
inc
push
clc
pop
pop
sub
loopne
and
ja
jmp
adc
int
inc
stos
jmp
push
jmp
push
jmp
or
xor
push
xor
dec
and
inc
inc
orl
das
push
out
push
add
mov
and
jns
jnp
and
sub
sub
push
mov
incl
rcrl
fdivr
ds
adc
lahf
cmp
incl
add
jmp
push
inc
rol
addl
rorb
adc
and
fidivrs
cmp
nop
les
enter
shll
mov
jns
call
push
add
orl
ret
push
and
add
je
inc
repnz
addb
add
pop
stos
stc
test
rolb
xchg
dec
movsb
rcll
sarb
jb
jo
loop
sub
ret
xor
cmpsl
pop
inc
adc
shrl
mov
gs
inc
dec
sub
adc
mov
dec
lcall
les
dec
and
mov
add
inc
mov
jl
and
push
mov
sbb
cwtl
xor
push
movsl
lds
mov
mov
adc
inc
push
jo
movzwl
inc
dec
xlat
or
pusha
out
mov
movsl
and
sub
mov
mov
fnstsw
push
mov
jne
sbb
cmp
shrl
push
push
push
inc
rcll
loopne
lods
or
push
fisubrs
push
cmp
jb
jmp
enter
push
test
xor
sub
pop
jg
dec
sbb
adcl
xchg
dec
ljmp
enter
es
dec
inc
jno
call
or
or
add
mov
pop
inc
and
movsb
clc
inc
mov
int3
inc
and
jl
mov
mov
inc
mov
notl
inc
mov
pusha
fstl
push
fwait
cmp
sahf
movsl
fwait
rcll
push
dec
and
loope
or
pop
call
fcomps
ljmp
or
psraw
dec
imul
inc
inc
hlt
mov
push
push
sub
cmp
out
jne
sub
scas
mov
hlt
pop
mov
lods
inc
sbb
inc
push
mov
movsb
push
cmp
jmp
xchg
push
addb
out
or
mov
inc
enter
daa
pop
push
xor
xchg
pop
test
mov
nop
adc
fs
cmc
push
loopne
out
push
int
cwtl
inc
mov
and
xor
fwait
or
sub
in
sub
mov
loop
cmp
adc
arpl
jg
jmp
jno
pop
pop
mov
push
adc
dec
ret
push
pop
sbb
sub
fmuls
call
cmp
pop
aas
or
inc
cmp
daa
push
jne
fdivr
inc
add
int3
xchg
inc
ret
stos
ficomps
inc
andl
jmp
dec
jne
addl
push
jle
sti
adc
imul
pop
lea
mov
pop
out
xchg
rolb
mov
add
mov
pop
mov
push
cmpsl
mov
mov
and
or
dec
push
lea
aaa
mov
fwait
lods
stos
cmp
movsl
jl
icebp
inc
mov
pop
and
je
fsubl
dec
jns
push
mov
lock
ficompl
push
fildl
xor
je
mov
add
in
add
sbbb
inc
js
add
lea
mov
out
add
clc
mov
and
dec
or
inc
call
imul
add
cmpsb
and
xchg
clc
push
dec
je
mov
out
xchg
inc
sbb
xor
adc
xchg
adc
fwait
cmp
adc
clc
and
adc
push
jg
jne
sahf
in
pop
stos
add
data16
cmc
push
mov
pop
xchg
cld
or
sahf
sbb
repnz
dec
pop
aaa
icebp
je
mov
lcall
inc
int3
clc
mov
jl
jmp
cmpsb
jo
sahf
shlb
arpl
adc
push
cmp
xlat
push
jb
mov
fildl
daa
aaa
jmp
mov
sbb
movsl
jae
ja
stos
scas
cmp
or
xorl
jle
xchg
sbb
pop
rcrb
add
and
jne
mov
sub
popa
stos
pop
fimull
lock
xchg
dec
mov
pop
jb
mov
or
lock
mov
xchg
xchg
clc
mov
or
pop
icebp
fcomps
mov
adc
jb
push
pop
nop
flds
cmp
inc
add
jnp
or
xor
pop
sub
sub
xorl
or
outsb
in
pop
cmp
sub
add
out
dec
add
jno
add
jo
dec
push
popa
test
jp
lds
imul
sbb
and
test
mov
lock
shrl
inc
andl
loopne
jo
in
and
gs
xor
fucomip
loop
mov
inc
add
roll
fs
adc
lahf
push
test
insb
xchg
pop
ficoml
cmp
pusha
pusha
in
pop
pop
inc
mov
sahf
test
es
mov
or
cmp
cmp
lea
les
push
push
repz
fisubrs
push
push
rcrb
pop
ret
push
adc
ja
rclb
dec
and
mov
popf
jns
ss
xlat
pop
ret
movsl
ret
push
jo
push
add
jb
stc
test
std
sbb
add
shrl
loopne
cmp
out
push
or
push
push
std
xor
clc
jg
mov
je
mov
adc
es
sbb
je
dec
je
jge
mov
push
jmp
test
leave
sub
push
push
jnp
or
jae
fs
int
push
dec
dec
rol
cs
mov
jo
test
inc
mov
sbb
rcr
xor
sbb
add
mov
cmp
pop
fstpl
or
mov
bound
data16
out
xchg
push
fimuls
mov
movb
pop
jnp
aad
shlb
xor
and
and
icebp
push
xchg
je
imul
pop
cmp
xor
shlb
js
lock
jge
xchg
jo
mov
andl
add
inc
shlb
xchg
orl
lods
xor
dec
mov
outsb
pop
sub
add
inc
pop
sub
pop
pusha
lea
push
in
inc
fstps
mov
test
or
ret
or
mov
mov
lea
cmp
jae
popf
cmp
lods
push
shr
jnp
mov
pop
fdivs
push
ja
ljmp
addr16
sarl
pop
xchg
inc
inc
sub
sbbb
test
inc
or
adc
mov
jae
add
jle
dec
hlt
leave
les
and
mov
es
adc
and
ret
aam
inc
adc
push
xchg
mov
bound
clc
ljmp
les
pop
cs
imul
dec
pushw
pop
pushf
je
pusha
add
dec
jns
mov
fmul
cmp
mov
inc
inc
loop
pop
xchg
and
push
insb
mov
lret
jns
pop
add
push
mov
aas
push
and
or
ss
aam
mov
rorb
xor
inc
ja
inc
push
push
adc
mov
fildl
sbb
mov
mov
adc
int
adc
daa
shlb
mov
sti
push
fwait
dec
push
inc
mov
lea
push
sub
pop
js
mov
inc
sub
mov
add
or
push
jne
fcoml
xor
dec
bound
ret
jbe
rol
cmp
mov
call
xchg
jo
out
dec
packsswb
mov
movsl
xchg
ret
pop
xor
cmp
jbe
sub
inc
inc
sbb
add
push
cmpsb
pop
add
or
es
lahf
pop
add
test
ret
or
pop
pop
mov
sub
cs
sub
into
lcall
fmuls
xchg
or
mov
xchg
ss
and
repnz
cmp
out
mov
aaa
int3
sub
sub
fbld
loopne
add
push
mov
mov
lret
inc
push
adc
insb
jg
sbb
push
pop
and
lock
jne
inc
adc
mov
pop
cld
jb
pushf
jg
or
mov
jle
fisttpl
mov
ss
or
call
adc
inc
cmp
jb
test
cmc
shll
add
subl
xchg
out
mov
adc
jg
dec
call
mov
sbb
and
repz
neg
sbb
and
push
cmpsl
lret
ret
or
xor
sbb
jo
inc
sub
adc
orb
insb
es
and
inc
shr
mov
push
lret
call
jmp
inc
pushl
fcoms
jge
jl
jae
out
jmp
jge
mov
jne
dec
loopne
add
lds
outsb
pop
adc
jle
cs
fld
punpckldq
add
mov
or
rorb
dec
jmp
or
xor
and
mov
adc
jbe
nop
ds
loopne
or
pop
mov
aaa
lret
inc
pop
shr
imul
xor
sub
fcomp
sub
nop
push
push
xor
clc
es
xor
add
out
push
popf
push
rorb
nop
subb
mov
cmp
lret
fidivs
pushf
ret
dec
xchg
sbb
inc
test
out
inc
pop
jmp
or
pop
or
bound
jb
insl
inc
push
loopne
cmpb
dec
mov
push
push
mov
loopne
icebp
cld
jno
add
repnz
in
and
mov
cmpsb
xchg
test
push
popa
lcall
xchg
in
lret
sbb
add
pop
sarb
cmp
xor
add
test
sub
pop
jns
xor
jg
sbb
lahf
shr
mov
push
push
push
jl
add
mov
or
je
add
pop
sbb
aas
jg
jl
mov
roll
adc
inc
inc
inc
movsb
add
roll
add
or
xlat
push
incb
enter
cmp
pop
and
mov
pop
add
bound
push
lea
movl
mov
ss
imulb
pop
or
sub
sub
fadd
cmpsl
insb
dec
push
push
xor
gs
xor
sub
sarl
les
es
and
adc
test
sub
ret
add
jecxz
jmp
push
movb
ds
clc
enter
nop
inc
cmp
xor
je
pop
push
mov
cwtl
cmp
sub
aaa
je
test
sub
adc
in
ljmp
subb
or
pop
arpl
fisttpl
sub
push
test
cmpb
sub
or
push
js
sbb
js
push
cmpb
stos
aam
push
jb
add
ljmp
cmp
push
pop
pop
dec
sub
lods
or
inc
and
je
push
lds
jmp
add
sarl
inc
fadd
inc
sub
pushl
sbb
pop
cmp
or
sub
dec
cwtl
cmp
in
insl
sub
ret
movsl
or
lret
sbb
lret
push
or
sbb
negl
ja
mov
shlb
mov
inc
jne
push
test
inc
xor
mov
inc
push
xchg
clc
rorb
roll
sti
cld
std
push
add
sbb
inc
push
loopne
cmp
dec
repnz
jecxz
data16
out
inc
sub
stos
push
jmp
fldt
xchg
in
in
mov
outsb
out
xchg
fsts
push
clc
dec
enter
inc
xor
push
dec
and
loopne
int
rcll
mov
xchg
add
ljmp
ss
add
in
and
sarb
jne
movsb
xchg
clc
test
sub
inc
pop
jne
fldcw
push
jbe
test
mov
rorb
mov
pop
push
and
aad
add
addb
cmc
mov
mov
or
sbb
inc
cwtl
add
mov
dec
ret
in
ficomps
dec
int3
push
daa
xchg
je
cli
mov
inc
icebp
ljmp
pop
aam
inc
xlat
or
push
mov
lea
repnz
lret
dec
cwtl
adc
ja
je
movb
mov
int3
or
pop
cmpl
cmpsb
sahf
callw
mov
xchg
call
sbb
inc
sub
or
pop
push
sbb
jmp
insl
push
mov
or
das
cs
mov
rcl
cli
inc
jmp
add
jmp
or
sub
shll
dec
jmp
js
push
add
scas
test
test
mov
sbb
inc
sbb
xor
sbb
pop
push
or
inc
shl
int3
jmp
add
and
icebp
mov
pop
sub
loop
lea
js
and
add
mov
or
adc
xor
lahf
rcrb
and
nop
or
sahf
out
sahf
dec
pop
push
push
popa
push
popf
out
outsb
jbe
addl
in
lock
lock
or
shrl
mov
jbe
mov
cmp
mov
pop
sbbb
push
not
decl
inc
xchg
nop
add
rorb
sbb
sti
cmpsl
out
in
jae
mov
aas
shl
mov
add
fbstp
jge
out
inc
int3
dec
inc
add
push
pusha
push
adc
inc
push
sbb
loopne
pop
or
cmp
mov
imul
mov
and
jns
push
jmp
ss
cmp
and
cmp
add
cmp
mov
rcrb
shlb
test
sub
test
sbb
push
mov
mov
push
or
arpl
xorb
push
inc
mov
imul
dec
and
loopne
mov
jns
xchg
xlat
xchg
inc
or
sbb
mov
jmp
inc
or
fstps
push
in
out
dec
xor
inc
dec
xchg
inc
and
xor
inc
xchg
les
and
out
cs
ret
pop
fsubr
pop
sbb
xchg
push
dec
or
and
shlb
rorl
fildll
or
inc
arpl
je
mov
sub
cmp
sbb
out
mov
add
mov
add
not
and
dec
xor
and
sub
insl
cmp
push
inc
or
fwait
and
stc
sub
lods
rorb
inc
gs
fldt
fsts
sbb
xor
popa
push
jp
jne
fldl
fstpl
jmp
sub
add
sbb
aad
jmp
pushf
add
insb
and
mul
movsb
and
lods
push
mov
fisttpl
lcall
cmp
push
add
ficomps
int
ret
out
out
mov
cmp
inc
jbe
jl
aas
jg
mov
xchg
mov
aad
je
xchg
js
sbb
jno
aam
mov
jae
and
add
cwtl
jae
and
lsl
and
ljmp
xchg
fiaddl
sbb
adc
hlt
shrl
hlt
push
std
sbb
fidivs
jmp
repz
mov
dec
xor
lock
popa
js
sub
adc
inc
lock
or
mov
or
mov
stos
or
int3
or
pop
mov
jmp
adc
aas
push
jl
mov
mov
dec
sbb
jle
stos
or
inc
test
jl
push
push
sbb
push
js
pusha
push
inc
orb
lea
loop
mov
ficompl
add
mov
inc
push
test
mov
cli
adc
jg
jl
cmpsl
mov
push
hlt
jb
fs
clc
mov
js
jno
add
aam
ror
cmp
jl
stc
nop
push
lods
pusha
inc
sti
add
imul
adc
lcall
pop
iret
sbb
and
push
les
sub
sub
add
jmp
inc
fimuls
cmpsl
fiaddl
jbe
aad
lcall
fnstsw
aaa
fistpl
rcr
mov
push
js
adc
pop
cld
mov
adc
push
inc
ja
int3
andl
sbb
fisubl
push
pop
adc
dec
std
xor
push
push
xlat
movsl
outsb
movsb
sub
iret
out
addr16
arpl
sub
or
fs
outsl
adc
and
inc
cmpsl
enter
xor
sbb
jo
add
fsts
out
icebp
push
sbb
dec
or
pop
fidivrl
popa
mov
into
add
mov
roll
iret
mov
jmp
mov
mov
add
jne
jmp
jnp
mov
aam
sbb
ret
es
imul
push
or
push
aas
mov
out
and
mov
daa
jg
test
fcomp
call
sub
xchg
out
pop
out
mov
inc
xchg
out
push
fimuls
mov
jg
out
std
push
popf
inc
or
push
sahf
clc
push
mov
sbb
js
adc
rcr
cmpl
push
or
cs
insb
jge
jne
cmpb
xor
std
fdivl
loop
mov
or
lock
and
nop
lret
bound
mov
ljmp
pusha
dec
cmp
pop
push
xchg
adcb
mov
mov
jmp
push
adc
adc
flds
or
pusha
add
adc
in
jmp
icebp
fcomps
jo
pop
rorb
rolb
add
add
and
or
ss
sub
jno
and
aad
adc
mov
add
ret
scas
popa
sub
dec
add
aas
iret
leave
repz
dec
add
clc
cmp
add
idivl
add
dec
jg
int3
inc
cli
test
mov
ret
fwait
sar
mov
push
sbb
mov
sub
cmp
inc
push
test
or
cmp
xorl
adc
or
pop
gs
mov
mov
daa
sarb
cmp
lds
fcoml
jecxz
and
test
sbb
ds
stos
lret
lods
shlb
ja
or
pop
xlat
push
jmp
sub
outsb
mul
or
mov
sbb
inc
jge
add
movl
mov
je
add
notb
push
shll
sbb
lock
mov
add
inc
dec
cld
jle
push
lcall
push
pop
push
pop
add
sbb
pop
and
dec
xchg
jg
push
lods
outsb
pop
inc
ds
jg
or
aaa
shll
cmc
sahf
stc
pop
int3
cmpsb
adc
push
je
adc
pop
adc
xchg
je
dec
jne
or
mov
cmp
xor
loop
and
and
cmp
ret
lods
xor
pop
or
lcall
cld
hlt
je
pop
icebp
mov
or
add
fildll
inc
fstpt
nop
add
dec
stc
pop
jg
je
dec
roll
fidivl
inc
cmp
push
xor
add
fdivl
stc
js
pop
jae
adc
insb
aam
mov
jecxz
mov
adc
loop
lods
std
xorb
je
sahf
adc
adc
sbb
and
adc
insb
or
cmp
iret
jo
and
daa
push
adc
jnp
shlb
insl
xchg
mov
popf
adc
jmp
push
inc
pusha
lds
je
inc
rorb
and
popa
jo
adc
loope
or
cmp
xor
mov
sti
pushw
push
scas
sbb
mov
fiaddl
or
scas
pop
xor
push
popa
dec
adc
mov
cmpsb
add
lcall
cltd
inc
dec
cmp
cmpsb
loop
imul
es
push
pop
and
sub
and
inc
js
insl
hlt
movsl
dec
je
clc
dec
jmp
push
sbb
inc
jp
or
or
mov
icebp
imul
inc
call
mov
movsb
repz
cwtl
sub
cmp
aaa
mov
jecxz
js
jle
das
ja
xor
pop
mov
test
fnstcw
push
call
jnp
ficoms
hlt
scas
cmpb
sub
cmp
xchg
inc
or
inc
pop
sbbl
inc
jmp
xchg
scas
inc
xlat
adc
lock
dec
scas
mov
inc
fdivs
push
add
rcll
cmp
aas
jo
dec
jae
push
jae
push
lea
cmp
cmp
pop
movsl
fbld
lea
sbb
mov
mov
lret
pusha
popl
stos
outsb
repz
mov
push
cli
push
pop
adc
sub
xor
xchg
xchg
cmpsb
lds
test
sub
and
dec
outsl
movsl
push
lds
js
inc
pop
add
orl
in
push
adc
adc
orb
inc
jae
sub
js
pusha
ret
pop
inc
dec
lock
sub
leave
push
adc
imul
popf
je
mov
sub
mov
divb
test
stc
mov
repz
hlt
sbb
sub
repz
iret
pop
push
mov
mov
dec
sub
mov
sub
pop
mov
pop
dec
test
cmp
cmp
mov
pushf
loopne
add
rorl
jo
or
mov
bound
push
xor
repnz
and
pop
fnsave
fstpl
bound
iret
sub
cmp
daa
in
inc
or
cwtl
inc
out
adc
push
repz
imul
adc
mov
inc
daa
pop
pop
inc
mov
or
jg
jmp
push
add
fmuls
jle
xchg
push
or
xchg
out
jmp
mov
movzbl
clc
psubq
inc
mov
fdivrs
lahf
fildll
fdivl
movswl
call
fldcw
jo
rclb
cli
or
in
inc
mov
bound
out
sub
and
imull
movsl
movsl
adc
jge
push
movsl
xchg
int3
push
fldenv
mov
fdivl
pop
xchg
jb
sub
sarl
adc
add
xor
pop
test
mov
jbe
sbb
rcrl
or
jo
add
lahf
xor
fcompl
sbb
movsb
push
loope
and
loope
jae
xorl
jmp
adc
or
andb
fisttpll
sbb
shlb
add
pop
nop
xor
sbb
mov
xorb
filds
and
cmp
sbb
fwait
subl
inc
clc
aas
xorb
fucomip
outsb
cmp
jne
ret
out
jno
push
cmpsl
testl
and
pushf
or
and
mov
jl
add
add
push
inc
adc
mov
adc
mov
loopne
add
add
jl
nop
pop
nop
rorb
jbe
rorb
dec
addb
rolb
pop
sub
inc
addl
movsl
add
stos
lods
roll
shlb
or
dec
or
ja
adc
xlat
and
mov
mov
add
push
shrb
mov
cmp
sbb
mov
mov
mov
enter
dec
test
or
inc
mov
mov
xor
pop
roll
adc
mov
xorb
movb
mov
or
lock
jmp
add
or
lea
add
mov
xchg
inc
out
mov
pusha
addr16
imul
jle
leave
ficompl
or
leave
push
cmp
xchg
sbb
les
cmp
out
lret
pop
leave
add
inc
pop
mov
fs
out
iret
repz
xchg
enter
pop
stc
inc
push
pop
fcoml
dec
push
lret
mov
fwait
pop
cmpsb
push
mov
aas
push
mov
fnstsw
or
adc
clc
jnp
clc
jg
sets
jl
cmp
sbb
lods
lcall
pop
ret
jecxz
mov
les
or
dec
ja
insl
push
dec
lods
inc
insb
mov
lds
push
cli
and
lods
dec
lahf
mov
add
and
or
in
rcrb
add
sub
ja
push
add
or
ljmp
iret
test
cmp
fdivr
push
cmpsb
lahf
lods
cmpsl
movb
push
pop
dec
leave
adc
sbb
test
push
add
aas
insl
loopne
enter
test
add
push
scas
popa
es
push
aam
adcb
in
lret
cli
push
sbb
loope
push
adc
subb
fldpi
imul
cs
in
mov
push
add
insl
mov
adc
fs
shl
jle
ret
in
mov
jmp
mov
push
pop
mov
mov
adc
pop
mov
faddl
fstpl
sub
sub
cmp
jmp
loop
je
mov
mov
pcmpgtd
jle
pusha
jg
sbb
inc
xor
mov
sub
sbb
cmp
or
mov
mov
enter
imul
cli
ficompl
enter
dec
leave
rcrl
mov
jmp
enter
roll
sbb
out
push
test
cld
dec
je
add
adc
cltd
or
rolb
jge
lcall
jge
rorb
mov
jg
leave
int3
sub
aas
call
scas
iret
in
xchg
or
adc
ds
or
cwtl
xor
jno
lcall
push
inc
or
push
movsb
add
lock
jle
cli
jle
or
pop
cmp
xlat
adc
orl
jmp
or
aaa
mov
out
cmp
sub
sbb
in
jmp
jb
cmpl
inc
add
inc
fwait
ret
mov
adc
outsl
xchg
pop
jmp
dec
arpl
imul
fisttps
stc
cmp
ret
inc
out
add
andb
jle
add
xlat
lock
adc
ret
sub
mov
pop
inc
xchg
sub
push
mov
mov
clc
in
cmp
add
xor
adc
fidivl
mov
mov
cmp
popf
fstpl
into
adc
fucompp
jnp
data16
gs
stc
sbb
jmp
and
pusha
hlt
ljmp
rclb
cmp
jmp
cmp
jne
cmp
cmpb
sbb
mov
sbb
lock
xchg
and
sbb
sbb
imull
dec
dec
and
or
dec
in
rclb
scas
in
fwait
in
adc
scas
jns
mov
push
in
ret
pop
push
pop
loopne
mov
or
data16
or
mov
inc
xor
fldt
mov
popf
mov
pop
xchg
lret
fnsave
jbe
add
into
push
daa
iret
repz
popf
aas
mov
loope
iret
rcl
out
imul
lret
je
popf
xor
notb
data16
sahf
arpl
or
mov
pop
inc
inc
mov
lret
cltd
mov
adc
sbb
adc
xchg
jg
fmuls
jl
mov
xor
jge
xor
push
sub
nop
ds
and
aad
nop
xor
and
push
adc
orl
jle
push
or
push
popf
sbb
mov
cmc
mov
fldl
cmc
sub
dec
clc
test
jb
jo
cmp
mov
cwtl
fildll
fcompl
fstl
push
mov
add
mov
push
out
nop
pusha
inc
or
je
or
testb
daa
inc
inc
insl
lock
add
and
test
and
popf
test
js
add
push
xchg
jle
loopne
popf
inc
add
push
je
inc
and
or
sub
mov
sub
or
xchg
xor
out
adc
or
clc
or
out
dec
jns
add
movsb
cmpsl
mov
or
adc
cmp
and
jle
pop
xor
sub
std
adc
xor
xor
ja
sbb
insb
pop
cmp
jae
inc
sbb
dec
jnp
mov
adc
fiadds
sub
outsl
push
ja
mov
ret
inc
fs
inc
je
cmp
pop
or
xchg
xor
inc
fisubrl
cmp
mov
je
mov
adc
inc
shrb
je
add
add
mov
sub
adc
ds
mov
pop
dec
add
xor
or
add
push
add
add
jns
shr
js
pop
jb
push
mov
xchg
add
adc
ja
inc
cmc
mov
add
jne
loopne
cmp
mov
mov
dec
sar
push
popf
lret
inc
jmp
push
add
fiadds
mov
pop
loopne
and
popa
add
adc
or
mov
push
push
test
add
loop
popa
outsb
inc
or
push
sbb
ds
sub
int
cltd
push
mov
push
enter
jb
or
mov
push
fwait
push
cmpb
sbbl
sahf
adc
lock
sub
mov
cmp
mov
addr16
lea
cmpsl
jnp
scas
clc
out
es
nop
dec
push
popl
lahf
push
popf
xor
out
add
test
push
mov
add
adc
dec
inc
test
and
mov
je
je
sub
fcomps
lds
pop
inc
and
or
push
or
iret
pop
pop
in
mov
out
add
mov
popa
fisttpl
sub
out
inc
xor
fcmovne
daa
xor
xchg
outsb
or
adc
adc
push
jne
into
push
cli
add
adc
adc
add
fwait
xchg
mov
sbb
add
nop
adc
fiaddl
add
mov
mov
outsl
cmc
dec
mov
jbe
cmp
push
nop
adc
lock
cmp
jne
fcomps
loope
push
fsubl
shlb
mov
sbbl
pop
pop
xchg
dec
in
mov
cwtl
xor
into
cwtl
push
lds
xor
je
sbbl
push
ret
jo
jae
xor
call
out
xchg
fsub
pop
lock
stc
dec
shl
add
cmp
xlat
mov
mov
pop
loop
ja
push
loopne
sarb
nop
and
push
dec
rorb
mov
cs
shrb
fimull
imul
jo
xorl
jge
inc
mov
inc
shlb
sarb
jl
mov
jb
add
insb
cmpsl
leave
cmp
push
mov
clc
add
mov
cmp
jl
dec
mov
fwait
test
cli
adc
push
mov
hlt
xchg
jae
mov
jle
add
mov
loopne
or
rolb
cli
dec
jne
scas
xor
outsl
js
jne
and
in
aaa
mov
inc
stc
dec
sbb
je,pn
cmp
adc
out
lods
das
xor
fwait
push
in
rclb
jmp
push
roll
mov
lock
cmp
je
rcrl
pop
andps
outsb
lock
sahf
jl
cmp
pop
sbb
xchg
xor
ljmp
xor
scas
mov
es
adcb
cmp
jg
adc
mov
fbld
mov
test
push
loopne
ss
adc
mov
ljmp
push
jle
clc
add
cmp
or
pop
push
pusha
mov
and
mov
sbbl
xorb
andl
aas
scas
mov
mov
or
xchg
mov
mov
incb
push
mov
cmp
dec
lods
je
add
shlb
cmp
popa
push
sbb
or
out
xchg
fld
push
out
ret
fucom
push
fnstsw
fstp
xor
mov
rorb
mov
or
jge
or
fmuls
insl
es
dec
xchg
fcompp
jle
sbb
fsubl
ret
dec
clc
sub
sbb
icebp
sbb
jmp
sub
or
adc
sbb
jg
jb
gs
std
fdivrp
adc
jmp
faddl
xor
push
add
in
fnstcw
mov
fs
sbb
push
inc
mov
pop
jb
mov
test
stc
shr
xor
imul
mov
jg
sub
adc
jecxz
movsb
out
jle
mov
sbb
sub
cmp
jge
clc
call
insl
pop
aaa
movl
push
cmp
jecxz
mov
sbb
fbstp
pop
mov
frstor
es
mov
mov
add
jmp
fstps
leave
and
xor
sahf
mov
push
clc
mov
push
in
dec
push
je
pop
mov
mov
and
xor
and
lods
cld
fists
neg
sbb
and
xor
xor
sbb
loope
or
pop
or
ret
mov
cmpps
or
repz
pop
cmp
shl
pop
mov
call
or
into
adc
rcl
and
cmp
add
shr
or
loope
loope
cmp
mov
sbb
xchg
or
fildl
jge
ret
cmpsl
cmpsb
pop
jle
pop
rorl
je
movzwl
push
or
aaa
je
icebp
dec
xor
jecxz
popa
test
icebp
out
call
mulb
icebp
xor
loopne
jl
add
add
adc
into
mov
push
xor
adc
ret
or
shll
dec
rcll
sbb
pushw
and
pop
frstor
jg,pn
push
add
lea
adc
pop
lea
jae
pop
cwtl
outsb
add
sbb
mov
mov
sbb
sbb
inc
dec
movb
shrb
and
sbb
pop
pop
shlb
add
js
mov
push
mov
jl
inc
inc
pop
dec
push
mov
ja
or
imul
xchg
push
lret
cmp
push
mov
mov
pop
subb
sti
adc
add
xchg
or
jno
mov
dec
sub
or
or
add
pop
jmp
in
and
adc
out
mov
das
shlb
or
mov
popa
adc
aaa
fs
adc
xchg
pop
or
sub
fcomps
pop
sbb
adc
mov
incb
lret
xchg
and
cmpb
add
sub
cmpsl
sub
je
push
pop
xchg
aam
mov
mov
xor
fadds
mov
xor
movsb
test
fs
or
mov
sbb
push
divb
xchg
insl
repnz
mov
add
fadds
mov
call
push
push
in
icebp
xor
push
push
cmp
mov
or
jbe
popf
or
add
incl
test
and
sub
xchg
lods
aaa
inc
imul
test
cmp
add
mov
mov
jle
push
lret
cmp
setbe
int
ret
sub
imul
cmp
rcll
cmp
andl
roll
daa
lods
movsl
imul
adc
sub
enter
imul
adc
orl
ss
in
jmp
mulps
in
xor
fmuls
push
pop
push
lods
pop
jne
push
pop
dec
repz
adc
and
jne
push
or
mov
js
mov
cld
jmp
std
sub
jl
inc
rolb
ret
jmp
mov
pop
xchg
jecxz
dec
mov
inc
and
aas
test
fdivrs
sbb
cmpl
xor
and
add
pop
xor
imul
dec
notl
inc
movsl
jl
cltd
fldt
pop
std
out
movb
sbb
pop
mov
mov
mov
test
jb
mov
mov
mov
mov
jle
sbb
dec
scas
enter
out
push
scas
add
arpl
xchg
cltd
call
xchg
xlat
inc
push
add
jo
sub
or
xchg
sub
cmpsb
xor
shrb
and
jbe
notl
add
xchg
daa
decl
push
cwtl
rorb
add
jne
inc
and
jbe
call
aaa
fildll
test
hlt
and
or
mov
fsubrl
cwtl
inc
jbe
xor
iret
dec
inc
call
cmp
lea
shl
and
inc
shl
aas
cmp
mov
jae
push
dec
orb
mov
sbb
sub
ret
push
cmc
or
add
cld
movsl
pop
add
aas
jmp
cwtl
fldl
dec
sbb
sub
and
inc
xor
nop
cmpl
push
push
sti
inc
push
sub
push
add
push
xchg
bsf
pushf
pop
inc
pop
jl
ljmp
int3
mov
adc
push
add
and
jb
js
jbe
and
inc
addr16
and
mov
mov
jle
jb
inc
jo
add
push
xor
in
xor
push
and
pop
ds
pop
call
xor
cld
push
fisubrl
cld
fst
popf
xchg
or
adc
mov
adc
sarl
sbb
loopne
add
jo
or
shll
adc
dec
and
fmull
cmp
dec
mov
xor
not
mov
stc
mov
and
or
add
mov
lea
rol
add
icebp
out
pop
mov
xor
push
mov
call
push
or
stc
sub
mov
inc
fdivrp
mov
lea
ror
add
and
mov
cmp
jae
in
out
xor
out
into
mov
repnz
negb
jg
jge
not
and
or
mov
push
scas
cmc
mov
mov
flds
int3
loopne
movb
rclb
inc
xor
sub
loope
add
cld
jmp
fcomps
cld
cmp
ret
fsubrl
inc
repnz
loopne
pop
jmp
loopne
xlat
pop
mov
sbb
call
ret
adc
adc
test
repnz
fimuls
xchg
jno
std
mov
and
lret
push
in
add
push
mov
cmpsb
addb
adc
int3
lock
fists
push
clc
push
and
mov
std
stc
lds
fisubl
push
idivb
or
add
sarl
mov
rorb
clc
imul
mov
rol
clc
sub
int
xchg
fcomp
int3
aaa
stos
mov
or
fisubrs
fldl
aaa
cli
aad
pop
adc
lret
and
xlat
loopne
adc
add
or
out
fcom
stc
imul
enter
iret
imul
mov
call
out
loope
mov
mov
aaa
ret
les
repnz
xchg
fsubr
adc
inc
in
sbb
das
add
clc
mov
out
aam
add
call
mov
push
in
cmp
fistpll
inc
cmp
incl
xor
mov
aas
xor
sub
hlt
mov
popa
popf
insl
adc
xor
add
aas
popf
jns
fdivs
or
in
mov
ret
nop
movsb
enter
test
mov
xor
xor
add
andb
jg
mov
xor
jo
mov
int
leave
lret
les
repnz
jle
jno
fwait
sub
icebp
stos
shll
repnz
mov
jmp
enter
pop
test
out
aam
orl
jo
xor
inc
outsl
outsl
lret
mov
add
roll
push
fcompl
mov
mov
shll
xor
cltd
jg
mov
mov
hlt
clc
jl
pop
popa
inc
xor
push
lods
les
or
xor
stc
repz
ret
mov
sub
divl
inc
scas
or
sub
mov
push
xor
mov
cmpsl
and
cli
addr16
in
mov
call
ret
pop
pop
les
jg
cltd
mov
mov
jge
out
lcall
rcrl
test
dec
jle
pop
enter
loopne
sub
mov
fdivs
adc
add
xor
in
ret
or
iret
fs
or
push
mov
cwtl
enter
jle
idivl
adc
sub
xor
in
adc
loop
iret
sub
cmc
shlb
lea
dec
lods
pop
xor
fdiv
rol
or
xor
mov
pop
movsl
and
roll
inc
cmp
fnstsw
and
or
inc
add
push
push
mov
mov
movsb
xor
push
mov
mov
inc
add
inc
mov
mov
or
mov
mov
adc
pop
inc
movsl
add
add
bound
loope
push
adc
iret
push
inc
lock
add
pop
adcb
lock
mov
sbb
invd
movsb
pushf
leave
sbb
push
xchg
pushf
enter
or
arpl
push
push
push
xchg
xchg
test
mov
pop
sbb
mov
jl
or
ljmp
push
pop
jns
mov
decl
jns
out
icebp
mov
dec
dec
jne
push
push
pop
xor
outsb
or
push
push
movsl
jae
dec
pop
add
data16
mov
mov
xor
sbb
jge
inc
mov
in
xor
shl
pop
mov
or
inc
jae
subb
js
lock
testb
fstp
adc
lods
fdivrs
sti
mov
add
mov
lock
push
or
imul
mov
mov
js
mov
jo
add
lret
jmp
push
sahf
cld
push
push
iret
mov
and
push
and
loope
pushf
adcb
lcall
jne
add
and
xor
insl
fistpl
test
adc
add
or
mov
cmp
ret
adc
jnp
add
andl
add
movzbl
in
xor
sbb
jl
shll
dec
je
test
pop
std
add
sub
push
fwait
pushl
sbb
sub
mov
add
mov
jnp
repnz
fisubrl
mov
xchg
dec
jge
test
dec
dec
lret
and
addr16
mov
xrelease
pusha
lock
rolb
jle
pop
cltd
mov
in
shlb
mov
fiadds
mov
adc
call
mov
push
rcrb
jbe
clc
push
push
ja
pop
shr
xor
pushl
xor
insl
add
inc
sbbb
push
jbe
fmuls
mov
lea
cmpsb
push
add
les
pop
sbb
pop
mov
cmp
scas
pop
clc
jle
cmp
jl
or
inc
push
cmp
mov
fdivr
in
mov
pop
in
pop
pusha
sbb
push
xchg
lcall
pop
sbb
mov
dec
pop
cli
test
add
inc
pop
jecxz
in
negl
roll
insl
inc
add
sbb
mov
jbe
or
dec
ficoml
jg
xor
jb
or
sarl
or
loope
lahf
mov
cmp
ret
jae
dec
xor
sub
cmp
inc
ja
cwtl
or
dec
les
add
push
cld
insb
xchg
nop
adc
pop
jl
push
push
ret
adc
pop
push
and
ret
xchg
test
push
xor
mov
pop
dec
cmp
movsb
pop
jnp
push
fiadds
xor
jbe
adc
inc
pop
sbb
push
push
mov
pop
xchg
fdivs
repnz
sbb
cmp
insb
call
sbb
push
pop
stos
fldt
fcoms
sub
ja
sarb
push
div
cmp
mov
mov
mov
in
into
add
lds
aam
sub
lods
rorb
and
sbb
shlb
or
push
xor
sub
jge
cmp
inc
adc
jbe
loop
pop
lods
or
mov
mulb
jo
push
mov
and
pop
nop
push
lds
add
dec
sub
cmp
pop
jo
andb
iret
pop
test
or
ss
mov
add
sub
icebp
ficomps
push
or
inc
je
mov
pop
cmp
lahf
jne
and
andl
or
push
dec
sbb
pop
push
sub
jl
cmpsb
pop
adc
sbb
jae
push
jle
xchg
mov
sbb
push
push
pop
imul
out
xor
cmp
je
sti
mov
inc
mov
test
cmpb
adc
lods
pop
adc
insl
pushl
xchg
push
lods
mov
mov
mov
ret
cmpb
fwait
scas
xor
inc
pop
adc
inc
lds
aas
adc
jecxz
xor
mov
or
adc
lock
stc
mov
inc
push
jmp
sbb
push
push
xchg
or
xchg
mov
inc
std
and
pop
hlt
mov
cmp
fmuls
ret
mov
adc
mov
mov
fstpl
push
addr16
jmp
mov
mov
pop
or
and
sbb
std
das
push
push
inc
aad
mov
out
sbb
lock
loopne
call
push
inc
xchg
lock
or
addr16
jl
mov
xor
pusha
push
inc
fdivr
mov
add
insl
xorb
xchg
subb
sub
pop
in
push
and
jmp
lock
adc
and
and
lsl
popl
pop
dec
movl
and
outsl
je
sub
jl
mulb
cmp
mov
scas
cmp
jbe
jo
dec
js
repnz
mov
mov
and
in
inc
push
sbb
cmp
pop
cmp
push
adc
out
cmp
movb
or
in
pusha
pop
fs
push
js,pn
addb
jno
push
or
movsb
cmp
adc
addl
sti
mov
or
movl
lret
mov
or
in
enter
pop
mov
fsubr
and
jb
clc
add
push
sbb
mov
mov
pop
test
stc
mov
imul
test
mov
fcomip
imul
or
or
or
sti
adc
pop
mov
push
mov
notl
dec
orb
pusha
mov
sahf
lret
sbb
into
jl
int3
jl
stc
jle
enter
sarb
xchg
imul
or
popf
iret
enter
and
in
rcl
aam
push
mov
pcmpeqd
mov
repnz
jge
push
and
pop
mov
orb
test
lds
xchg
cld
jnp
mov
sbb
cli
add
jns
rcrb
aad
pop
fs
push
push
fsubl
adcl
cmp
xor
and
inc
pop
andb
jl
call
jl
jl
loope
in
out
push
add
call
cli
loopne
pushf
fs
adc
pop
lods
inc
cmp
cmp
insl
int3
jl
cld
cmp
push
cmp
adc
adc
sbb
test
cmp
ja
and
cmp
lret
lret
test
cmp
les
addl
out
gs
fsubrl
pop
mov
mov
inc
sahf
lret
ja
jmp
jb
xchg
pushf
push
lods
mov
outsl
in
or
mov
test
xchg
les
jns
bswap
fsub
cld
in
pop
push
enter
cld
add
xchg
ljmp
or
add
xchg
add
xchg
pop
repnz
jmp
sub
into
repz
sub
xor
jno
mov
and
out
pop
dec
lea
and
in
pop
cmp
pop
xor
test
jl
push
jns
test
pop
mov
mov
xchg
cmp
jle
fisubs
jecxz
or
addl
enter
inc
sahf
aam
fsub
inc
inc
jae
mov
jno
cld
and
cmp
pushf
add
mov
pop
pop
pop
jns
enter
enter
daa
sbb
jb
cmp
dec
sbb
or
sahf
lret
gs
mov
lea
je
imul
jo
jl
push
mov
fimull
nop
fsubrs
pop
pushf
ficoml
or
jmp
aaa
or
fdivp
mov
in
les
je
or
fs
out
in
in
adc
fabs
sbbl
mov
or
jno
leave
and
leave
mov
and
stc
or
lea
leave
and
in
cmp
inc
aaa
enter
push
leave
pop
leave
pop
pop
xchg
xchg
fs
xchg
dec
sub
insb
into
aaa
fidivrl
mov
and
ja
test
mov
and
pop
pusha
movsb
xchg
nop
out
into
test
lods
mov
pusha
inc
sahf
fs
enter
jge
aam
fdivrl
inc
dec
xor
pop
adc
hlt
and
out
mov
clc
cld
jno
lret
enter
lret
sbb
and
jnp
or
jno
cwtl
jb
mov
xor
inc
dec
dec
inc
jb
out
mov
mov
jl
insb
jo
nop
out
je
lods
test
lret
bound
test
xchg
pushf
movsb
mov
push
in
ds
mov
enter
aam
arpl
stos
call
sbb
test
arpl
jns
or
adc
adc
push
jns
pop
sbb
add
out
stc
push
cmp
and
pop
dec
push
mov
jo
dec
lret
cmp
add
jne
pop
jns
in
mov
insb
inc
imul
je
test
in
out
orb
sahf
xchg
pusha
pushf
sti
mov
jl
or
mov
jno
nop
xchg
or
add
jo
in
cmp
fcomp
in
add
dec
xchg
in
push
add
add
or
or
test
adc
and
iret
in
dec
lea
push
sub
fadd
jns
xchg
or
jb
cs
push
push
pop
nop
dec
mov
jno
in
cltd
je
jl
sbb
jb
xchg
xchg
mov
pushf
in
pop
mov
and
sbb
lret
in
int3
aam
jae
adc
int3
lock
xchg
iret
xchg
hlt
dec
cld
jo
mov
jae
int
adc
pop
in
mov
sbb
sbbl
subb
add
int
mov
out
mov
inc
dec
mov
nop
xchg
sbb
cmp
inc
insb
je
jl
mov
xchg
mov
repnz
fisubrl
nop
jo
pushf
fadd
test
scas
in
jl
int
mov
ss
inc
fsub
or
inc
push
jns
pop
in
call
int3
mov
hlt
int
add
inc
out
sub
or
push
or
test
adc
stc
nop
xorl
into
mov
inc
pop
mov
xor
cmp
es
or
inc
inc
jns
outsl
gs
lea
pop
jno
and
nop
roll
insb
jecxz
loopne
jl
jae
lods
xchg
addb
xchg
jmp
cmp
out
test
lods
mov
mov
mov
into
jg
xchg
ds
pop
fcompl
or
dec
sbb
jmp
sbb
and
lret
gs
clc
cld
add
insb
lret
in
or
jno
sbb
lret
iret
and
sub
sub
jb
xor
and
in
cs
push
loop
pop
pop
cmp
daa
stos
and
insb
xchg
jo
nop
out
je
rolb
xchg
cwtl
jno
cwtl
or
pop
movsb
loopne
out
sub
iret
push
int3
imul
xlat
and
jecxz
jl
ror
mov
or
pop
hlt
sub
cmpsl
iret
xchg
movl
rcl
jno
rolb
cmp
and
adc
cs
cmp
insb
dec
mov
enter
nop
out
fs
mov
mov
loope
test
pop
xchg
test
or
rcrb
mov
pop
enter
mov
mov
cmp
aam
fcom
repz
add
fcoml
nop
dec
mov
int
mov
add
jno
shl
cmpl
leave
ds
dec
in
shrl
sub
or
push
enter
mov
lea
pop
push
lea
pop
sub
sbb
js
jl
stc
into
repz
test
test
and
rcl
or
mov
nop
mov
xchg
jbe
mov
enter
xchg
pushf
fs
sbb
sbb
repz
jns
jb
out
mov
lret
push
rorb
xor
sub
shlb
shlb
dec
xor
cmp
inc
xchg
inc
sahf
lret
inc
dec
rclb
imul
inc
push
push
lods
inc
xor
mov
popa
mov
out
xchg
jecxz
loopne
jno
pop
push
in
adc
jae
lock
pop
jecxz
lret
in
and
loopne
jb
inc
sahf
in
clc
hlt
jns
imul
faddl
shll
push
cmp
cmp
cmpl
sbb
daa
rcrb
arpl
ja
fs
dec
lret
nop
xor
int
fs
out
push
test
popf
mov
jno
pop
test
push
jns
cld
in
lods
iret
mov
mov
mov
and
ja
jno
movsb
in
xchg
add
add
hlt
clc
or
xchg
stc
jno
aam
or
jbe
lods
cmp
fcompl
and
and
ss
test
cli
pop
cs
inc
dec
dec
push
add
cmp
adc
fnstsw
xchg
jo
jl
xchg
jl
and
mov
out
pop
cmp
cmp
inc
lods
jecxz
fdivp
pop
cs
mov
cmp
mov
inc
sahf
lret
ja
jno
hlt
test
add
xchg
cld
mov
xor
lahf
or
test
call
arpl
pop
cmp
mov
pop
ficompl
adc
pop
cs
fs
mov
jno
fistps
lods
in
test
mov
sbb
in
pushf
cwtl
cmpsb
lahf
lret
in
lods
mov
mov
and
les
mov
in
pop
push
fcomp
in
clc
cmp
in
int3
cmp
out
sahf
out
dec
test
xor
mov
cmp
xchg
stos
out
mov
fildll
or
test
lock
push
sub
mov
jno
fs
out
fs
xchg
lret
lret
popf
js
test
and
cmp
mov
mov
pop
cs
test
sbb
mov
nop
lret
enter
jb
sahf
aam
mov
sahf
lret
in
lock
cld
in
cmp
lods
add
sbb
push
enter
xlat
sbb
sbb
mov
js
and
sahf
pop
jno
cld
push
in
scas
cmp
inc
xlat
or
cmp
inc
jns
sbb
dec
enter
lea
jno
leave
and
je
jl
adc
xchg
lret
orb
jns
movsb
mov
pusha
xlat
xlat
jno
and
sbb
xlat
loope
sbb
pop
in
insb
sahf
jo
and
mov
cmc
xchg
xchg
cwtl
outsl
fcoms
dec
add
adc
repz
jns
xchg
xchg
sbb
and
nop
out
in
xor
pop
fwait
fs
cmp
nop
out
jns
pop
pop
fs
xchg
or
addb
and
xchg
xchg
arpl
test
fbld
lods
pop
mov
lahf
rcrl
jns
fdivs
push
into
repz
push
sub
in
inc
gs
test
icebp
clc
cld
pushf
add
lahf
xlat
or
jbe
rolb
jns
xchg
and
jno
mov
dec
scas
push
inc
pop
dec
fstps
in
xchg
dec
jns
les
inc
es
jo
jns
xchg
add
ja
movsl
dec
rclb
xchg
movsb
sbb
pop
fnstenv
rcr
mov
les
test
out
pop
in
popf
out
in
in
cltd
hlt
fs
dec
bnd
sti
or
mov
sbb
adc
sbb
jns
cmpl
xor
iret
in
cmp
mov
adc
leave
dec
and
cmp
inc
fs
fdivl
adc
adc
mov
ret
out
push
mov
mov
ficoml
mul
repnz
enter
mov
inc
push
jns
xor
inc
fimull
aam
fadds
jns
cmp
xlat
sbb
ja
xchg
add
add
add
pop
jns
popa
dec
or
jns
fistpl
in
lret
fldt
sub
leave
and
xor
cmp
xchg
inc
adc
pop
sbb
fcmovne
je
clc
jl
out
push
jl
test
mov
rcll
xchg
mov
dec
mov
cmpsb
cmp
push
adc
enter
fs
out
push
fdivrl
in
lock
jb
inc
sahf
cld
je
fmul
push
sub
outsb
fsubl
sbb
sub
sbb
jmp
faddl
inc
jns
fs
out
int3
push
xchg
lret
insb
je
lret
and
mov
lret
in
nop
out
mov
ja
pushf
sub
clc
cli
cs
xchg
add
dec
push
jns
int3
xor
out
mov
in
sbbb
mov
mov
test
adc
cmp
mov
in
jnp
sub
lea
xor
mov
test
aad
inc
pop
fldl
pop
test
shlb
dec
cmpsl
jmp
jg
andb
mov
jno
pop
lods
fisttpll
mov
mov
movsb
dec
pop
mov
enter
jge
or
out
jl
jmp
inc
dec
repnz
inc
jno
dec
icebp
int
in
hlt
clc
cld
add
fs
loope
or
inc
sbb
push
and
mov
fisubrs
test
popf
inc
mov
mov
push
clc
dec
xchg
dec
push
loop
and
enter
gs
sub
rcr
jno
pushf
fs
out
enter
dec
ds
sub
ficomps
in
jns
call
out
and
jl
int3
or
aam
lret
jae
nop
clc
in
add
cmpl
hlt
sub
ret
pop
pop
stc
jns
fists
sbb
jne
repnz
movsl
scas
lock
mov
nop
sbb
cmp
test
in
inc
jo
mov
loope
nop
xorl
in
xchg
jns
mov
in
dec
fcomip
test
mov
mov
jb
sbb
xchg
sti
lods
mov
cltd
fs
out
aam
jmp
aam
fcomp
in
in
jge
movsl
popf
fisttps
or
or
cmpsb
jbe
and
mov
cmpsl
cmp
sbb
clc
loopne
loopne
ja
dec
xchg
xor
jno
xchg
lret
cmpb
inc
dec
push
push
dec
push
jns
pop
dec
fs
sbb
jecxz
jl
leave
and
test
add
xchg
lret
sbbb
jns
mov
in
cs
popf
or
aam
pop
ret
jns
cmp
out
stc
xchg
ss
lock
cld
fs
shlb
loope
lds
inc
sbb
push
ret
repz
inc
sub
and
enter
cmp
in
mov
or
in
orl
and
ja
push
sbb
cmp
jl
in
test
daa
lahf
dec
test
cmpsl
movsb
in
shlb
push
mov
mov
iret
les
dec
push
jmp
ja
xchg
ret
jno
fsub
in
adc
insl
leave
ljmp
inc
push
jb
mov
dec
in
or
loop
pusha
cmpsl
aaa
nop
sbbl
clc
jno
sahf
lret
gs
xor
js
push
jbe
inc
mov
jecxz
popf
pop
sbb
mov
insb
mov
nop
daa
dec
adc
jl
lea
test
test
iret
lods
push
or
mov
mov
jb
cmpsl
jecxz
sbb
shlb
in
or
push
in
or
pop
clc
loop
dec
mov
std
jecxz
jmp
cmpsl
jecxz
push
in
sbbl
jno
in
xor
lret
mov
jmp
jecxz
jecxz
and
aaa
dec
jns
cld
pop
jl
add
inc
lahf
add
cs
jo
jl
test
popf
or
fwait
sbb
cs
cwtl
pushf
movsb
sub
mov
jecxz
les
dec
mov
int3
cmp
rclb
or
jecxz
jecxz
hlt
jb
out
cmp
jno
lret
out
movsl
add
in
enter
in
subb
cmp
mov
cmp
inc
movsb
dec
dec
cmp
mov
push
fs
mov
je
and
mov
cmp
lods
inc
sbbl
xchg
lods
cltd
mov
jae
cmp
mov
in
nop
cmpl
lahf
push
cmp
in
in
pop
in
sub
or
sub
or
add
push
push
dec
sub
in
or
inc
in
sub
dec
fwait
or
adc
push
dec
aas
jl
xchg
push
push
pop
sub
cmp
and
jno
jns
and
adc
jl
xor
jae
cmp
gs
gs
mov
dec
push
jns
mov
or
mov
int3
aam
dec
xor
push
xchg
lret
in
lock
cld
js
repnz
addl
or
xchg
xchg
xchg
out
out
out
out
jb
xchg
inc
sub
cmp
in
iret
in
dec
xchg
stos
arpl
nop
roll
fs
in
push
pop
jb
jl
sbb
mov
movsb
in
and
sub
mov
xchg
inc
sahf
lret
mov
cs
jb
adc
loopne
daa
sbb
mov
pop
pop
pop
jns
add
or
or
add
pop
adc
in
out
jb
fisttpll
sub
test
xor
nop
inc
repnz
test
out
jbe
repnz
push
xchg
lea
nop
fwait
lock
out
cld
push
jb
xor
out
enter
test
sbb
imul
and
pop
sahf
test
lods
mov
orl
sbb
mov
aam
fcoml
sub
sbb
insb
xor
mov
clc
cld
add
jo
xor
sbb
pushf
cmpsl
sti
cmp
and
pop
sub
in
cmpb
xlat
xor
popf
dec
add
js
xchg
xchg
les
xchg
dec
dec
push
pushf
pop
jb
xlat
sub
out
sub
jl
lret
test
xchg
lret
lea
mov
lds
shl
mov
int3
inc
jle
in
in
sti
inc
popf
in
dec
mov
in
hlt
aam
test
jno
jmp
cli
push
in
adc
sbb
call
scas
mov
push
movsl
inc
mov
jmp
nop
cmpsl
jo
dec
pop
xchg
lea
insb
enter
or
je
dec
jae
mov
mov
pushf
fisubl
xchg
lret
in
mov
mov
add
aam
in
iret
gs
in
stos
mov
cs
xchg
xchg
jecxz
xor
sbb
dec
add
add
inc
je
rcrl
or
repz
ja
in
mov
nop
sub
or
jo
dec
push
jns
xor
cmp
or
cmp
enter
push
pop
push
sbbl
dec
jns
dec
jns
ljmp
in
push
mov
incl
enter
mov
cmp
dec
ljmp
arpl
int3
cmp
xchg
pushf
fucom
incb
xchg
lret
ljmp
call
or
sub
jmp
or
outsb
loope
lods
stc
jmp
stc
xchg
lret
cmp
jmp
dec
inc
es
sub
mov
push
inc
sbb
dec
push
jl
cmp
mov
gs
movsb
sbb
mov
mov
sbb
mov
or
idivb
jmp
cmp
repz
in
xchg
lods
jmp
ss
in
paddsb
in
cmp
stos
in
jno
in
lods
sbb
repnz
cmp
xor
and
in
cmp
inc
lret
cmp
cmp
in
or
pop
jbe
test
insb
push
add
in
xchg
jl
roll
dec
xchg
jno
movsb
test
jb
jge
mov
lods
add
xor
mov
push
jecxz
xor
nop
int3
shl
jb
rcl
fcoml
lods
sbb
inc
cs
loop
in
pop
clc
add
in
mov
popa
in
add
add
push
jns
in
jno
xor
xor
jmp
in
in
leave
and
pop
jns
cmp
iret
test
pop
jo
pop
or
dec
push
xor
test
fldenv
jns
cmp
sub
negl
movsb
pop
add
inc
lods
dec
pop
inc
in
cs
mov
push
aam
in
cmp
gs
call
cld
xchg
add
and
or
out
adc
jno
out
sbb
xchg
and
es
out
inc
xor
cmp
inc
sahf
out
bound
cmp
inc
mov
jb
xchg
dec
pop
pop
pusha
and
ret
repz
insb
aam
pop
or
adc
mov
repz
fwait
test
iret
movsl
popf
mov
mov
pushf
jno
dec
lods
mov
nop
out
or
lret
sbbl
in
in
xchg
popf
push
enter
out
arpl
out
add
xchg
scas
imul
ds
push
in
out
jno
fwait
or
pop
xor
cmp
das
dec
adc
push
out
pop
adc
ja
pop
push
mov
sbbl
aaa
in
jl
out
jmp
test
dec
dec
sbb
iret
ja
mov
test
and
test
aam
add
inc
fdivrl
cs
in
lock
cld
mov
add
fnstsw
mov
lock
imul
out
xor
and
les
in
push
inc
test
inc
lahf
dec
fsubrl
in
dec
cmpsb
jecxz
jg
mov
insb
je
jno
push
push
in
imul
mov
pop
xchg
pushf
or
pop
xchg
add
lock
lock
repz
sbb
lret
in
dec
add
loopne
mov
xchg
in
xor
sub
push
icebp
icebp
and
fwait
sbb
scas
repnz
js
popa
cmp
stos
sub
xor
loope
repz
pop
xor
cmp
movsl
dec
and
jns
sub
pop
pop
cs
aaa
push
cltd
pop
add
fs
dec
mov
jae
dec
daa
adc
icebp
or
mov
lret
in
movsb
test
mov
and
cmp
mov
pop
push
int3
rcl
fsubrl
xor
fsub
pusha
xor
sub
repnz
sbb
mov
bnd
adc
push
nop
mov
dec
nop
and
pushf
adc
adc
in
xchg
inc
dec
jno
dec
push
jns
push
sub
sbb
cmp
jo
je
leave
and
jl
test
jae
jl
xchg
jno
pushf
movsb
test
pusha
lods
push
jge
xchg
lret
mov
mov
pop
in
div
push
call
in
hlt
pushf
test
inc
xchg
cmpl
mov
stc
lea
repz
outsl
repz
in
jl
cmp
inc
enter
sbb
pop
inc
sahf
lret
in
fs
loopne
lods
bound
cs
jb
repz
xchg
hlt
pop
rorl
pushf
dec
pop
mov
lahf
outsl
nop
xchg
repz
mov
mov
es
les
xchg
ja
fcomp
pop
in
mov
nop
roll
pause
inc
xorl
cld
div
hlt
enter
pop
or
mov
hlt
xchg
lret
adc
hlt
hlt
daa
sbb
stc
jno
insb
cmp
dec
in
jb
dec
xchg
push
push
cmp
and
pop
test
lret
cmpsl
sbb
out
jno
jb
inc
sahf
test
gs
lea
sahf
lods
mov
fildll
pop
enter
dec
into
lock
ja
cmpsl
movl
hlt
cld
cld
jno
cmc
ret
jns
dec
adc
sbb
je
cmc
or
loope
add
enter
gs
fs
out
jno
dec
xor
xchg
lret
sbbl
je
jl
lret
lret
mov
enter
test
jno
adc
in
mov
mov
mov
les
cmp
xchg
cmc
inc
push
xchg
lret
push
add
mov
addr16
div
jno
notb
dec
push
cmp
sbb
ret
lret
cmpsl
sbb
loopne
jno
jbe
inc
sahf
cmp
inc
das
imul
push
pop
jno
fs
insb
shl
xor
dec
push
test
sbb
cmp
out
jnp
movsb
test
sbb
imul
mov
mov
add
leave
in
jbe
adc
cmp
incl
in
lcall
mov
daa
mov
xchg
pop
gs
jno
imull
xor
and
xor
popa
push
stc
out
shrb
dec
imul
dec
jns
sahf
xor
in
pop
pop
das
dec
paddw
insb
imul
imull
nop
ja
jl
lret
push
stc
es
xchg
xchg
movsb
jl
adc
sbb
xchg
testl
aam
sbb
jmp
jno
leave
and
in
hlt
mov
xchg
xchg
adc
pop
or
adc
adc
inc
lcall
clc
pop
adc
xor
cmp
sbb
mov
cli
pop
cs
pop
pusha
fs
sbb
dec
or
push
iret
fwait
arpl
xchg
lea
jae
inc
jno
fcoms
mov
mov
push
mov
fsub
orl
mov
in
cld
popf
add
add
or
aas
dec
movsb
adc
stos
test
cmp
iret
or
sub
mov
test
mov
pop
fsubrl
lods
fs
lret
in
xchg
xchg
js
cltd
mov
lahf
test
mov
jno
cs
xchg
or
dec
push
jns
mov
out
stc
les
int3
aam
pushf
fs
cmp
in
dec
jcxz
stos
in
stc
add
movl
add
in
pop
movsl
adc
adc
aas
cli
cli
push
and
leave
ja
cli
pop
mov
outsl
jno
out
nop
sub
cmp
je
ret
nop
jb
xchg
dec
insb
mov
enter
cli
inc
jno
enter
push
and
dec
xor
fptan
pop
ds
jno
pushf
pushf
cmp
insb
mov
out
pop
xchg
mov
cmp
xchg
dec
jns
cli
jno
in
mov
hlt
cwtl
pushf
imul
testl
adc
aam
sub
push
iret
sbb
pop
cs
adcb
lock
sti
mov
or
pop
pop
and
jae
adc
push
in
push
sti
jno
leave
and
mov
xchg
xchg
imul
mov
and
cmp
mov
pop
push
int3
rcl
fsubrl
insl
xor
dec
in
hlt
clc
adc
pop
cld
add
pusha
mov
add
cld
xchg
fldl
xchg
and
and
adc
xchg
cld
sub
mov
cld
filds
loop
pop
dec
cld
ss
dec
jns
mov
in
pushf
push
test
cmpl
jno
test
lret
outsb
xor
adc
and
cmp
pushf
movsb
enter
insl
enter
rol
or
mov
mov
in
in
hlt
leave
nop
mov
lock
cld
sub
std
xchg
adc
adc
enter
sbb
sbb
and
cs
add
mov
cmp
or
pop
inc
cmp
jb
nop
insl
pop
pusha
fs
and
insb
push
je
mov
mov
push
into
lock
cs
cmpb
insb
in
insb
dec
les
fcoms
fsub
nop
mov
nop
cmpl
stc
subb
xchg
enter
or
mov
mov
and
sub
or
jl
imul
jns
xchg
test
push
xchg
inc
sahf
out
push
jno
in
pop
cs
jb
imul
fwait
lock
pop
jecxz
sbb
pushf
mov
cld
clc
jl
lods
sbb
std
cmpl
push
filds
xor
jbe
push
fsubl
insl
gs
jns
xchg
jbe
lock
cld
dec
pmulhuw
pop
add
mov
sub
sub
lcall
and
fs
in
subl
pop
inc
inc
dec
jl
orl
cmp
lret
push
or
sti
daa
mov
mov
or
jle
in
imul
pop
fistps
fnstenv
adc
pop
or
sub
hlt
mov
cmp
aam
mov
cmp
add
xor
jle
lea
push
out
divl
mov
cvtdq2ps
jle
jl
or
repnz
out
inc
sbb
sub
and
loopne
mov
and
cmp
pop
inc
xor
or
pop
and
xor
out
adc
and
pop
test
loopne
in
dec
and
shrl
jbe
loope
call
xchg
sti
jnp
cmp
cmp
mov
sbb
pop
or
and
add
lret
dec
outsb
int3
xorb
inc
dec
jl
icebp
mov
and
clc
mov
mov
adc
insb
les
cmp
and
pop
and
pop
mov
or
inc
popa
rcll
inc
test
push
cltd
add
mov
mov
lcall
mov
enter
push
aas
cmp
ds
sbb
cli
mov
rclb
in
sbb
mov
ljmp
sbb
fs
adc
nop
mov
sbb
mov
cmp
les
mov
xlat
and
sub
cwtl
sbb
int
inc
add
push
js
inc
xor
dec
repz
jae
mov
call
cmp
sub
in
jnp,pt
mov
mov
clc
xorb
adc
andb
loopne
enter
or
out
mulb
popf
pop
inc
jmp
js
mov
fs
fnstenv
adc
dec
xor
and
sbb
cmp
and
add
jl
or
dec
mov
xor
jge
jns
js
rcll
push
adc
sub
dec
jbe
mov
cmc
push
outsl
inc
or
cld
rol
sub
cmpl
mov
repz
mov
adc
mov
push
pop
xchg
lret
rcrb
xchg
and
mov
cmpl
cmp
cld
lea
add
int
push
imul
stos
in
jg
popa
insb
cmp
push
cmp
bound
pop
jge
push
xchg
mov
push
in
addb
lea
shlb
jns
fcomip
lods
hlt
popa
jmp
mov
cmp
pushf
add
jge
sbb
mov
mov
pop
fstpl
xchg
imul
lock
int
cmpb
rorl
adcl
add
sti
lock
jg
or
mov
jb
mov
and
xchg
clc
mov
vpsubb
cmp
lahf
push
adc
jno
ja
fistl
push
daa
and
xchg
pop
hlt
push
xchg
xor
outsl
in
out
adc
push
lds
inc
jmp
outsl
inc
adc
adc
into
or
fwait
xor
dec
mov
clc
push
xchg
mov
leave
enter
pop
pop
rolb
adc
es
call
push
xchg
clc
add
jne
aas
push
jmp
rol
cmp
mov
inc
movsl
sbb
add
cmpsl
rcll
pop
repz
mov
jbe
and
mov
add
lahf
movsb
sahf
and
call
jne
mov
cmp
in
mov
jo
in
es
incb
or
sub
call
test
test
xchg
push
xchg
adc
adc
mov
loopne
or
push
push
push
push
dec
arpl
hlt
xchg
outsb
testl
adc
mov
sahf
or
dec
nop
adc
cs
into
mov
jbe
aad
mov
fistpl
addb
sarb
cmp
sbb
cmp
ret
sub
cmp
aas
or
pop
popf
sub
jl
push
mov
sbb
arpl
add
jl
push
ret
loope
ffreep
add
js
negl
pop
inc
jbe
mov
xor
shlb
adc
and
xchg
mov
subl
inc
or
mov
lock
jne
jbe
jnp
int
mov
ds
and
dec
js
sub
fidivl
cmp
adc
cmp
ret
outsl
pop
sti
add
stos
sub
mov
mov
cmp
and
dec
pop
jmp
je
dec
jno
pop
mov
addb
hlt
cmpb
or
push
fimuls
ffreep
xor
sub
adc
push
add
jg
pop
sub
xor
imul
mov
in
push
loopne
lock
cmpsb
mov
push
shrb
mov
mov
lods
add
nop
xlat
mov
xorl
shll
or
je
sbb
jmp
gs
xor
loopne
sbb
ror
push
bound
sub
rcrl
shll
mov
jecxz
mov
mov
mov
adc
xchg
xor
icebp
xchg
lahf
jg
push
lods
sub
jne
push
dec
mov
jae
fwait
jne
std
jge
lods
jnp
out
sub
ficoms
sbbl
fcomip
adc
stos
ret
std
pop
jne
dec
call
pop
push
add
jp
mov
mov
lock
and
movsb
mov
pop
sub
in
add
mov
test
mov
sahf
enter
pop
jnp
test
adc
add
mov
jns
rclb
leave
or
nop
mov
test
mov
lock
mov
dec
mov
mov
push
imul
add
cmp
jne
cmp
push
scas
push
mov
jnp
add
xor
aaa
orb
sub
iret
cmpsb
or
or
adc
shl
push
push
out
mov
cmp
mov
lock
imull
cmp
jne
jl
xor
jns
fidivs
lcall
mov
call
hlt
imul
or
push
cmp
pop
or
mov
jnp
pop
dec
test
cmp
mov
inc
jl
xchg
and
or
ljmp
add
jmp
jge
lods
ds
rorl
enter
lock
mov
jne
and
mov
or
sub
xchg
mov
mov
dec
or
xchg
addr16
cmp
adc
push
pop
mov
test
addb
pop
inc
inc
push
and
and
and
sub
cmp
jle
out
xor
pop
daa
xor
loope
aaa
insb
je
fwait
xor
pop
mov
sub
sarl
fmuls
shr
mov
pop
gs
inc
xor
or
jge
or
rol
pop
mov
mov
jne
lahf
outsb
sub
dec
je
sbb
mov
mov
sub
in
dec
mov
sbb
adc
pop
jle
shrl
mov
adc
int
xchg
stos
jmp
sbb
push
stos
or
roll
adc
dec
sbb
jne
push
mov
fwait
insl
xor
les
xor
loopne
xchg
js
jle
hlt
sub
mov
cmp
sub
popf
pop
test
mov
pop
dec
add
jne
and
jne
inc
fisttpll
xor
mov
int3
jne
push
xor
fdivrs
mov
or
lcall
mov
mov
out
addr16
mov
xchg
mov
push
test
add
mov
in
xchg
test
jmp
lds
lock
ficomps
sbb
daa
push
imul
inc
pop
aam
pusha
cmp
imul
minps
xor
mov
leave
into
push
sbb
xchg
mov
adc
inc
or
mov
mov
push
clc
aaa
mov
mul
imul
dec
sbb
pop
bound
inc
pop
adc
xchg
xchg
out
sub
or
cmp
jae
dec
cmp
mov
mov
push
lock
mov
sbb
sbb
jbe
jmp
push
push
outsb
inc
jno
cmpsb
or
add
xchg
xchg
xor
scas
hlt
ds
add
add
pop
pushf
addr16
addb
xor
nop
orb
or
daa
sbb
adc
or
and
push
dec
mov
pop
add
add
stos
sub
lcall
jmp
xchg
cmp
jmp
xchg
test
inc
in
lret
stos
push
cmp
enter
lret
movups
cmpsb
inc
add
or
inc
sub
mov
add
pusha
or
sbb
pop
cld
sahf
shll
push
inc
cld
pop
xor
or
push
push
cli
pop
mov
or
iret
loopne
arpl
mov
out
cwtl
mov
rorb
int3
sahf
and
push
dec
mov
pop
popa
fbstp
cwtl
mov
fmuls
or
icebp
adc
xchg
mov
ss
push
jo
lahf
adc
jg
out
push
xchg
inc
push
lods
fmul
loopne
inc
dec
int3
xor
popa
inc
pop
mov
mov
xchg
pop
mov
and
add
sbb
dec
test
test
sti
das
mov
ficoms
ret
inc
add
dec
rorb
mov
cmp
or
or
add
mov
push
aas
xchg
cmpl
stc
stos
and
jecxz
jp
fisttpl
inc
lods
jne
add
lea
pop
enter
dec
inc
clc
in
nop
sbb
xchg
sbb
xchg
adc
xchg
push
in
lahf
adc
shlb
mov
gs
subb
in
adc
fcomp
pusha
add
and
add
inc
ja
sahf
cmp
and
rorl
and
fimuls
adc
push
out
mov
popa
and
and
je
mov
add
mov
sbb
mov
clc
xchg
pop
sbb
xchg
push
loop
mov
sbb
push
inc
js
out
addr16
cmp
in
and
jbe
cltd
mov
in
sub
movsbl
dec
cmp
cmp
mov
cld
cmp
dec
jmp
adc
lret
mov
adc
adc
mov
loop
test
sbb
cmpsb
les
mov
lret
iret
push
daa
mov
in
cmp
stc
test
test
shrl
popf
popa
jne
mov
dec
xor
sarl
xor
aam
cs
les
mov
lea
inc
ficoml
gs
jno
aas
xor
adc
push
int3
sub
xchg
sarl
shlb
inc
cmp
xchg
pop
dec
push
faddl
cmp
jle
pop
or
daa
sahf
inc
call
mov
mov
les
inc
xor
push
xor
mov
in
jmp
cmp
xor
inc
loopne
mov
xchg
push
sbb
lock
popa
stos
dec
into
inc
cwtl
rorb
cmp
jge
add
movsb
mov
lret
jge
or
dec
jo
xor
in
add
dec
test
pushf
xor
jmp
add
xchg
jne
icebp
pop
sub
mov
adc
je
sub
sub
out
fidivrs
jne
lcall
loopne
pusha
cmp
pop
adcb
xchg
xchg
mov
mov
and
sub
les
add
sub
shrb
scas
ja
in
dec
cmp
rol
fcoms
pop
sub
cmc
xchg
mov
les
mov
sbb
clc
xorps
lcall
inc
mov
add
mov
xor
jmp
mov
jnp
call
sbb
xor
or
movsb
mov
hlt
shrl
xchg
ss
dec
je
jg
inc
imul
adc
push
hlt
in
add
sbb
add
add
aad
test
add
ret
fcoml
xor
pop
call
test
xor
out
adc
scas
push
or
ret
mov
test
test
mov
gs
imul
icebp
jbe
add
push
fmulp
rol
stos
dec
mov
mov
push
ss
sarb
dec
movsl
inc
bound
jge
xchg
add
pushf
xchg
jne
mov
inc
sub
push
test
push
lods
adc
shr
pop
add
jno
das
mov
bound
js
inc
jg
lea
and
cmp
sbb
mov
cmp
fistpl
xchg
sbb
cmpsl
jne
loopne
pop
nopl
js
loope
out
lea
and
cli
adc
lahf
adc
dec
fwait
push
insb
sarb
adc
xor
xor
add
pop
repnz
cmp
lea
outsl
icebp
dec
aam
lea
add
daa
out
cli
cltd
frstpm(287
jbe
cmp
mov
clc
int
mov
xor
cmc
add
sahf
out
push
cltd
sbb
sbb
sbb
ljmp
mov
pop
out
mov
sbb
adc
adc
ret
adc
movsb
lea
xor
aam
sbb
sub
mov
mov
push
cmp
lea
pop
mov
movsl
lods
xchg
and
adc
add
xchg
scas
mov
movsb
or
orw
add
adc
test
les
jo
addr16
int
imul
fdivs
ror
or
in
gs
je
or
mov
aam
sarb
cmp
cmp
pop
pop
mov
adc
pop
sbb
sub
and
xchg
lock
ja
movd
mov
test
pop
roll
test
test
mov
cmp
jmp
pop
add
cmp
xchg
add
inc
decl
mov
xor
add
sub
mov
add
mov
mov
cmpl
sub
mov
es
enter
mov
and
sub
xorl
pop
cmp
sbb
push
adc
add
or
adc
je
scas
add
cs
das
dec
and
and
add
shrb
sbb
pop
xor
call
mov
fiadds
cwtl
xchg
movnti
sub
xlat
push
inc
inc
cwtl
ret
add
push
fimull
loop
ljmp
add
roll
iret
or
cmovbe
sbb
stos
test
pusha
xchg
inc
inc
dec
pop
push
push
adc
std
and
mov
nop
fcoms
cwtl
and
jne
mov
loopne
add
leave
pusha
add
sub
and
insb
lahf
insl
or
das
adc
or
jmp
or
sub
shll
push
sub
data16
enter
pop
xchg
fwait
mov
or
xor
inc
or
push
push
mov
xchg
mov
sub
push
jg
js
rcll
push
jg
sbb
mov
add
mov
nop
mov
add
cmp
fnstsw
sarb
jns
aam
rolb
lcall
aam
jns
mov
addr16
xor
dec
loope
mov
xor
out
mov
sub
or
pop
push
mov
push
rolb
pop
movsb
pop
xlat
add
inc
jl
cmp
pop
jg
jne
cmp
dec
inc
add
push
inc
vpsllvd
mov
cmp
je
xor
inc
mov
cmp
pop
adc
inc
adc
or
cwtl
mov
add
test
pop
jl
push
add
testl
fildl
mov
push
add
stc
lcall
mov
popa
add
fdivl
loopne
mov
shlb
and
loopne
add
sub
add
jmp
inc
lret
mov
pusha
xchg
iret
xchg
fcmovnbe
lret
aam
jg
inc
pop
dec
fimull
orb
sbbb
push
mov
xchg
leave
pushf
push
jb
test
test
push
xchg
arpl
sbb
xchg
lods
jmp
xor
push
inc
inc
stos
mov
sbb
roll
dec
scas
stc
sarb
scas
cmpsb
sub
xchg
pop
mov
mov
mov
and
pushf
lcall
cmp
inc
push
mov
push
das
push
mov
cmpl
lock
add
addr16
insb
loopne
lock
xor
roll
inc
sbb
ljmp
dec
mov
and
dec
pop
mov
test
pushf
inc
add
cmp
fmull
jl
mov
outsb
xlat
sub
and
sbb
mov
or
mov
adc
jp
jmp
pushf
mov
pop
mov
add
inc
push
out
push
push
xor
cmp
or
xor
inc
xor
or
das
push
je
jg
add
add
add
jp
lods
sbb
es
add
ficoml
mov
add
cmp
je
adc
fs
xor
popa
push
cmp
adc
iret
in
xor
inc
jmp
daa
push
popa
ficoms
add
aam
pop
push
sbb
jns
insb
dec
push
sub
mov
popa
sub
lods
jne
js
add
and
add
loopne
loopne
mov
ljmp
addb
into
das
loopne
test
les
inc
pop
inc
and
push
fisttps
hlt
js
and
jge
pop
aam
mov
mov
or
lea
sub
mov
jne
aad
sub
or
dec
lods
popa
cmp
loop
inc
add
xchg
pop
pop
mov
push
pop
pop
push
dec
in
sahf
add
pop
jb
and
sbb
in
push
mov
pop
inc
stos
or
cld
sbb
stos
test
test
push
push
mov
sbb
inc
jge
or
loopne
mov
push
mov
ret
or
sbb
xor
imul
popf
xor
push
lahf
and
pop
aam
cmpsl
adc
scas
jo
push
jne
sbb
pop
or
push
sbb
adc
push
test
or
bound
les
out
mov
cwtl
insb
orl
sbb
fistpl
cltd
cmpsb
sti
add
xor
enter
lea
clc
push
mov
in
xchg
fs
mov
add
repnz
add
jl
pop
mov
mov
jmp
repz
mov
inc
lea
pop
or
and
xchg
add
sti
add
or
push
sub
jbe
inc
push
pop
and
push
pop
std
roll
not
and
mov
xor
xor
repz
repz
xacquire
add
mov
pop
shl
and
xchg
inc
add
xchg
clc
mov
jmp
insb
xchg
inc
mov
inc
subb
mov
icebp
cmp
addl
nop
push
ja
or
dec
cwtl
test
mov
add
sub
pushf
and
cld
scas
repz
call
fucomp
outsb
ror
and
adc
jne
sub
shrl
jne
jns
push
inc
js
jle
pop
or
sti
ficoms
pop
jge
fimuls
lock
js
mov
pop
lods
and
mov
jge
aam
lret
mov
cmp
mov
mov
inc
data16
and
or
and
jnp
mov
outsl
mov
scas
xchg
cmpsb
std
jmp
ret
or
jne
xchg
dec
ret
sub
lcall
mov
pop
push
or
and
js
std
adc
test
and
inc
mov
imul
sbb
out
mov
popa
pusha
in
sahf
xchg
push
add
imul
xchg
push
jno
push
gs
stos
mov
pop
das
adc
and
movsl
add
adc
mov
lret
mov
insb
rcpss
aad
js
adc
ljmp
out
add
mov
mov
xor
or
sbb
test
sbb
loopne
adc
cmp
jle
adc
adc
jmp
testb
pop
or
mov
js
stos
xor
inc
xlat
and
sub
out
jmp
ss
lcall
xchg
sbbl
sub
sbb
pop
je
sahf
or
add
xor
arpl
push
mov
mov
add
mov
pusha
hlt
push
outsl
cmp
movsb
cld
mov
pop
lea
insl
or
bound
cmpsl
shr
jge
pop
out
dec
out
xrelease
lock
aam
incb
test
cwtl
repz
add
mov
adc
fcomi
fistl
das
shl
dec
or
inc
dec
mov
orl
or
sahf
pushf
daa
add
pop
pushf
xor
movsl
xchg
inc
sbb
or
cld
loop
push
fcmove
xor
push
inc
push
es
mov
xchg
pop
repnz
neg
pop
orl
scas
add
and
cmp
cmp
sbb
aas
cmp
or
pushf
mov
jne
and
adc
add
push
mov
std
and
inc
add
test
cmp
jl
enter
inc
pop
cmpsb
dec
rcll
xchg
dec
push
cli
mov
add
xchg
call
sbb
or
and
insl
sub
lret
insb
jne
lock
fs
cmpsl
push
cld
xchg
dec
addr16
adc
jecxz
pop
sbb
andl
adc
test
aaa
pushf
les
and
loopne
pop
lods
cmp
push
cmpsl
mov
mov
stos
pop
push
sbb
jns
out
pusha
and
test
jns
xor
test
jno
inc
ja
jbe
xor
loopne
xchg
sub
cmp
enter
inc
bnd
jmp
sub
xor
adc
and
push
int3
push
and
rcr
inc
rorb
cmp
jne
movzwl
or
sbb
dec
sbb
inc
sub
push
cmc
push
in
cmp
test
adcl
cmp
jecxz
insb
dec
push
and
cmp
push
push
push
mov
xchg
inc
push
push
adc
pusha
insl
popa
movsb
pop
dec
push
sub
inc
mov
sbb
or
nop
add
add
and
sbb
mov
ficomps
mov
lahf
lret
mov
mov
xchg
sahf
or
pop
dec
add
jb
setne
lahf
fadds
cmp
jg
or
addb
cmp
and
or
sub
scas
xor
mov
pop
sahf
ret
push
xchg
in
jecxz
fsubl
pop
in
insb
push
sub
push
loopne
or
jno
jnp
nop
test
cmpsb
sub
mov
mov
popa
push
mov
ja
nop
nop
dec
cmp
xchg
sub
dec
xchg
or
call
fs
xchg
jb
ss
js
mov
mov
inc
inc
pop
pushaw
xchg
or
ja
adc
or
insb
pop
je
add
decb
shlb
inc
cmp
mov
sbb
sub
ret
cmpsb
jo
cmp
int
add
je
xlat
or
les
gs
scas
out
sub
and
mov
imul
push
pop
xor
test
mov
call
xchg
fistl
inc
stos
fisubrs
xor
dec
stos
xor
movb
xor
xchg
sub
dec
cmp
push
or
xor
sub
insb
ret
add
imul
inc
scas
and
js,pt
mov
aaa
and
add
js
inc
ds
sub
and
adc
fwait
mov
ficomps
addr16
popa
cmp
or
mov
xlat
icebp
movsl
loope
addl
sbb
xor
push
cmp
jne
mov
and
xchg
push
movsb
enter
mov
ret
add
pop
inc
jns
jnp
xchg
clc
rcll
push
jno
push
ret
jge
cmpsl
cmp
add
add
push
add
push
jle
pop
stc
mov
test
bound
sub
adc
sub
mov
psubusb
sbb
cmp
xchg
adc
mov
ja
int3
inc
mov
jmp
inc
ficompl
add
stc
bound
std
decl
data16
stc
into
push
xchg
movsb
or
push
push
pop
push
nop
cld
out
pop
pop
dec
cld
notl
push
out
push
sbb
xor
movsl
push
addr16
insl
aaa
mov
int
and
sbbb
ret
out
mov
lock
xor
push
sub
push
dec
push
sbb
nop
xchg
rcl
dec
push
dec
imulb
cld
mov
jne
fstpt
xor
xor
in
test
pop
pop
out
add
shll
sbb
sub
jmp
mov
inc
adc
pop
adc
add
aaa
inc
int3
inc
dec
sub
xchg
mov
insl
push
fmul
and
movsl
lock
push
pop
popa
dec
mov
in
push
pop
hlt
add
mov
xlat
push
jge
mov
adc
dec
add
dec
in
mov
movl
mov
outsl
push
ret
jns
pop
sbb
and
xchg
mov
mov
xor
push
fcoms
inc
lcall
push
mov
or
leave
enter
add
into
enter
add
jne
mov
mov
mov
cli
jne
pop
jp
add
imul
shlb
mov
push
pop
notb
sub
fadds
mov
mov
add
or
mov
adc
mov
mov
and
leave
sub
mov
and
lds
jbe
in
xor
mov
aaa
dec
popf
dec
out
sti
xor
cmpsl
push
mov
cmpsl
aam
aaa
mov
loop
sbb
dec
loope,pt
insb
inc
dec
pop
sub
test
xor
je
test
dec
sub
jp
adc
pop
jle
ja
xchg
aam
jge
inc
es
dec
mov
sub
in
mov
add
enter
push
xchg
push
xor
cmp
cmp
rorb
nop
je
sbb
sbb
mov
shr
nop
sbb
pushw
mov
sub
adc
push
scas
jbe
push
mov
lods
lea
out
sbb
pop
inc
jmp
xor
adc
push
mov
ret
popa
sbb
je
inc
dec
or
js
adc
lock
sbb
add
push
je
jle
mov
cli
mov
adc
mov
adc
xor
out
adc
orl
dec
or
mov
push
adc
mov
adc
cmp
xor
jno
mov
sub
sub
lods
aad
cmp
repz
add
xchg
and
and
ret
popa
inc
ret
test
push
orb
jb
nop
xchg
inc
lods
cs
jne
sub
bound
je
rolb
orb
jb
sub
ds
jne
scas
and
inc
inc
jnp
lret
cmp
and
je
push
mov
mov
scas
jge
in
jge
mov
and
ret
mov
andl
pop
pop
pop
rolb
pop
push
cmp
je
cmp
push
mov
neg
rclb
jmp
xor
sub
push
movl
and
mov
adc
lret
lods
sbb
adcl
and
ds
shlb
push
add
cmp
push
and
dec
add
push
pop
outsl
push
push
sub
cmpsl
je
data16
sbb
add
and
or
or
inc
pop
out
sbb
xor
inc
loopne
mov
push
shlb
xor
dec
sbb
popa
rcrl
sub
mov
adc
clts
stc
clc
add
test
mov
adc
push
xchg
mov
xor
and
jl
fs
insl
into
mov
push
mov
sbb
sbbb
jg
sti
jecxz
push
jl
mov
jmp
push
and
sub
inc
stos
jge
add
push
inc
adc
imulb
pop
lea
test
mov
jnp
bound
xchg
pusha
out
or
enter
jne
lret
add
in
rolb
aas
xchg
ss
xchg
pop
inc
or
orl
mov
pop
ja
push
jp
mov
sbb
jnp
cmp
idivl
or
mov
js
aam
aas
mov
xor
sub
jle
mov
test
mov
aas
inc
or
cwtl
adc
into
sub
dec
sbb
and
xchg
aaa
cmp
xchg
jl
cmp
sbb
lock
or
jae
or
faddl
push
inc
dec
mov
int3
in
sbb
outsb
cmc
leave
push
push
cmpsl
shlb
outsl
cmp
je
clc
fmuls
insb
and
dec
cs
push
je
mov
test
rorb
dec
or
jmp
loopne
mov
or
dec
pop
ja
ret
mov
pop
lock
mov
push
mov
fistpl
jmp
dec
push
push
rolb
data16
mov
pop
je
push
inc
adc
push
push
and
mov
pop
jg
xchg
ror
ret
cwtl
push
mov
push
clc
dec
jp
add
arpl
xorb
cmp
xchg
loope
inc
xor
add
dec
sub
adc
mov
out
jle
jmp
push
movsb
adc
or
pop
ljmp
pop
add
dec
pop
add
inc
mov
popl
sbb
adc
and
shl
or
dec
add
call
fiadds
adc
aam
aas
in
and
push
push
call
dec
jecxz
mov
push
fildll
jmp
cltd
test
sarl
clc
mov
nop
adc
adc
andb
ficomps
fildl
cmp
cmp
xchg
nop
dec
mov
test
int3
adc
int3
mov
aam
mov
xchg
cmp
aad
fsubr
roll
mov
jb
push
in
call
push
mov
xor
xchg
mov
cmp
jb
sti
or
jp,pt
and
mov
xor
dec
je
jp
dec
add
mov
xor
push
sub
or
in
xchg
push
push
and
and
into
subl
lea
lcall
xchg
dec
xchg
test
jno
jne
addb
hlt
push
mov
sbb
rorl
fsubl
sti
imul
push
rolb
dec
sub
cmp
mov
fisttpll
xlat
cmp
inc
add
sbb
insl
push
aas
popa
push
rorl
pop
enter
mov
adc
loop
fwait
and
add
call
mov
movsb
adc
adc
call
aad
jae
pop
pop
fdivrs
dec
mov
sub
lret
mov
cmpl
fisubrs
sbb
xor
rsqrtps
push
jecxz
fsub
inc
mov
sbb
push
jo
mov
and
pop
and
lea
dec
or
mov
sub
pop
leave
rcrl
psrlw
out
sbb
push
jmp
sbb
stos
adcb
daa
mov
and
dec
movsl
imul
es
test
and
fwait
sub
cmp
fcmovnu
negb
sahf
cs
aaa
sub
cwtl
inc
cmp
pop
push
xchg
mov
dec
pusha
movsl
pop
pop
bound
push
add
and
add
xor
mov
mov
adc
pop
and
daa
test
add
test
push
dec
push
in
leave
add
mov
test
les
push
or
out
cltd
sub
or
inc
daa
or
jl
dec
iret
rclb
jne
lea
adc
adc
cmp
fnstcw
ffreep
xor
gs
and
rcrb
daa
es
sub
sbb
mov
sbb
add
int3
inc
rclb
cmp
shrl
push
imul
or
jne
jge
push
push
cmpsb
jecxz
les
jno
mov
add
jecxz
adc
add
jbe
loopne
inc
leave
pop
leave
add
add
add
xchg
lret
pop
sbb
add
push
hlt
push
jbe
test
mov
inc
enter
insb
xor
repz
adc
repnz
or
movb
aam
insb
inc
jo
xchg
add
inc
lret
movsb
add
pop
out
xchg
repz
fmull
sbb
dec
sbb
push
and
or
push
movsb
push
xor
pop
mov
adc
sbb
jnp
or
xor
mov
cmp
sbb
push
xor
enter
cmpsb
sbb
flds
orb
cmp
sub
ud2
sbbl
xlat
inc
pop
lods
push
add
xorl
push
dec
pop
push
fs
inc
dec
push
nop
mov
in
in
lock
addb
in
fwait
sbb
mov
sub
adc
push
mov
inc
or
jb
adcl
add
rolb
xor
sbb
xchg
sbb
or
fcoms
sub
les
inc
add
push
push
push
sar
pushf
xor
icebp
lea
repnz
add
leave
imul
dec
push
test
int3
sti
push
repnz
inc
sub
int3
sti
mov
xor
lcall
pop
add
push
pop
pushf
repz
push
xchg
sub
dec
pushf
repz
ja
movsl
test
in
jo
xor
in
sarb
cmp
jnp
xchg
adc
ja
rcll
jno
pop
push
inc
lods
mov
inc
jne
jp
daa
pop
orl
add
mov
pop
mov
xchg
cmpsb
retw
jg
loopne
out
sub
cmp
push
sbb
push
xchg
je
dec
shrb
fstl
scas
mov
div
xchg
je
jo
sbb
sub
inc
sub
sar
xadd
pop
pop
xlat
sbb
or
jge
add
lods
int3
inc
lock
cmp
mov
and
mov
clc
mov
js
jne
mov
mov
mov
repz
stos
sarb
in
aad
cmp
jne
jne
imul
jl
mov
fwait
mov
iret
and
sbb
and
cli
cmp
and
test
mov
andl
adc
stos
inc
pop
inc
add
aaa
sbb
dec
push
ja
push
mov
test
mov
jne
push
push
adc
les
jb
popa
pop
enter
adc
dec
xchg
sbb
and
aam
xchg
jmp
imul
loopne
push
fs
mov
or
add
push
add
jl
shlb
mov
dec
push
jbe
jns
jbe
sbb
inc
dec
jl
ror
add
outsb
dec
cs
inc
pop
cmp
adc
xchg
cld
push
aam
push
outsl
cmpsl
sbb
leave
sbb
sub
sahf
insl
pop
ljmp
ds
iret
cmpl
and
pusha
test
jns
jns
movsb
inc
adc
test
add
insb
or
dec
cs
sub
push
movsl
jno
pop
cld
pop
push
xorb
sub
jge
sbb
or
mov
mov
cmp
inc
cld
add
movl
xor
mov
shlb
test
push
cmp
filds
movsl
jge
jmp
adc
fiaddl
xor
shll
jb
inc
fs
xor
shll
push
push
jae
shll
cmp
dec
xor
dec
sbb
xor
push
or
fsqrt
add
enter
int3
dec
or
push
mov
test
add
inc
inc
lock
cld
adc
add
dec
add
clc
sbb
push
mov
add
adc
dec
adc
sub
std
scas
xchg
scas
inc
dec
dec
test
xor
pushf
imul
xchg
fsubrs
imul
aad
jne
call
mov
push
mov
push
loope
pop
jae
in
dec
in
pop
push
xchg
rcl
push
and
push
std
inc
or
not
and
fnstcw
arpl
mov
and
cmp
sbb
inc
inc
xlat
adc
jne
cmpsb
pop
or
mov
adc
push
fadds
mul
add
pop
loope
cwtl
addb
test
and
and
lds
movsl
inc
popa
cmp
dec
adc
nop
mov
imul
inc
ret
jnp
fnstenv
mov
adc
aad
movsl
adc
xchg
inc
andl
stos
push
lahf
fs
add
mov
scas
cmp
stos
push
insb
push
dec
je
add
es
adc
in
test
ret
cltd
mov
sub
cmp
add
in
or
add
and
test
cld
jmp
leave
icebp
test
sub
pop
or
cmp
adc
dec
push
pop
clc
test
xor
mov
cmp
jo
orb
mov
mov
icebp
pushf
sbb
push
inc
adc
push
test
mov
jne
rcll
and
cmpsl
and
lea
outsb
std
lret
insl
in
dec
jae
mov
les
push
xor
mov
jecxz
arpl
push
lock
inc
ret
out
or
xchg
dec
inc
lret
xor
push
cmp
push
mov
and
rorb
in
cld
add
add
xor
dec
push
mov
mov
cmp
je
cmp
mov
repnz
mov
push
push
in
xchg
lcall
xor
ds
fcoms
jge
or
push
shll
ljmp
add
jbe
loope
push
mov
lock
pusha
fildl
xchg
test
and
std
push
mov
inc
push
cmp
sub
lock
adcb
add
loopne
or
jmp
aaa
xorl
or
push
mov
jle
mov
idiv
add
mov
inc
or
jne
sub
sub
sub
daa
pop
pop
mov
sbbb
std
xchg
add
push
in
or
repz
xor
adc
scas
mov
or
pop
xor
outsl
movsl
adc
cwtl
sbb
lods
shlb
das
test
sub
mov
inc
xchg
fsubs
adcb
mov
rcr
sbb
adc
in
lock
mull
or
pop
bound
cmp
inc
icebp
mov
xor
fisubl
jb
lods
shll
mov
add
adc
mov
int
addl
push
popa
cmpsb
mov
push
sbb
test
int
pushf
xchg
mov
out
es
push
insl
cmp
sarb
notb
push
inc
sbb
fcmovnbe
push
movsb
cs
push
mov
add
jns
fcomp
push
sub
int
cmp
xor
ja
mov
js
push
ret
sub
pop
scas
cmp
push
and
sub
dec
les
mov
mov
and
cmp
sub
or
xor
insl
and
xchg
lods
aad
xor
adc
divb
inc
xor
shll
xchg
fistps
loope
outsl
pusha
and
or
jb
jmp
sub
add
add
es
popa
sahf
mov
pop
xchg
lock
lea
aaa
sub
and
push
sub
inc
ds
push
add
cwtl
loope
push
or
push
xchg
cmpsb
sub
inc
inc
push
xor
inc
cwtl
mov
push
add
push
inc
inc
pop
jmp
rorl
rcrl
xchg
in
jecxz
dec
mov
fsts
mov
cmp
cld
and
popf
aam
test
ret
push
rclb
pop
add
sbb
push
pop
push
sbb
sahf
sbb
or
dec
mov
xor
std
rcl
jmp
jnp
xchg
lods
or
ljmp
test
add
adc
cmpb
arpl
mov
add
in
add
sbb
pusha
mov
sti
or
lods
adc
pop
jle
sbb
imul
inc
es
sub
add
jbe
aaa
adc
jge
lahf
inc
cmp
inc
mov
xor
add
out
fwait
mov
out
add
stos
in
loope
je
movsb
xchg
fistpl
gs
ja
imul
sub
jns
and
push
adc
push
and
stc
mov
inc
enter
mov
jb
setl
subl
rorb
shll
add
xor
mov
or
xchg
outsb
adc
xor
orb
aam
pusha
dec
imul
jo
xchg
pushf
mov
inc
rolb
add
pop
mov
mov
inc
in
lret
repnz
jnp
pop
sub
out
adc
xchg
outsl
mov
movsl
xorb
out
add
jbe
adc
dec
sarb
into
sub
xor
xchg
repnz
mov
call
test
jmp
sbb
and
aam
popa
mov
loope
push
les
sub
sub
mov
mov
std
in
cli
pop
cmp
add
push
jbe
jecxz
sub
xor
xor
stos
or
jb
sub
push
dec
mov
add
push
add
push
aam
sub
add
push
or
cs
mov
or
ret
or
xchg
xchg
xchg
sbb
dec
mov
movsl
mov
push
or
fcoml
aam
mov
mov
jbe
in
int3
inc
sub
icebp
adcl
add
aaa
mov
stos
aam
add
sbb
aas
and
ret
movsl
rorb
mov
jne
addl
unpcklps
mov
cmp
scas
push
xchg
cmp
add
mov
push
xor
sub
lcall
add
shll
je
xor
dec
and
lcall
cltd
sub
xchg
cltd
fadd
pop
lds
push
push
aam
pop
call
mov
sbbb
jp
dec
adc
sub
adcl
loop
pop
iret
iret
call
or
xlat
mov
sub
idiv
jo
adc
pop
adc
add
xchg
cmc
dec
sbb
nop
push
push
and
xor
les
pusha
mov
sbb
ret
pop
or
shll
and
cmp
mov
xchg
and
daa
clc
inc
fidivl
pop
jne
fisubl
insl
mov
fdivs
xor
push
adcl
add
push
cli
ljmp
pop
inc
sub
bound
cwtl
js
pop
addb
ds
call
mov
and
leave
repnz
in
mov
push
rclb
xorb
add
cmp
and
inc
push
ds
sarb
subl
ret
inc
pop
cmpsb
jae
pop
inc
xor
push
lods
inc
or
xor
adc
or
cmp
xor
orl
adc
jno
shl
jno
sbb
xorl
inc
or
add
clc
jecxz
inc
cwtl
and
pop
adc
xor
pop
push
push
mov
sbb
inc
andl
sbb
mov
mov
push
inc
dec
fnstsw
push
or
mov
add
jle
rcrl
pop
cmp
inc
push
push
inc
cmp
bound
push
orl
push
inc
pusha
insl
je
mov
adc
enter
aaa
imul
dec
out
mov
push
ret
mov
xlat
movb
push
mov
push
repnz
dec
jmp
inc
cmp
xchg
divb
adc
xorb
xlat
out
and
cs
ss
add
std
shrl
inc
lods
inc
and
adc
pop
insb
icebp
js
sub
push
inc
mov
xor
jp
or
pop
sbb
rcl
xchg
and
inc
es
adc
clc
mov
pop
inc
ljmp
test
mov
shll
cs
jecxz
dec
sbb
out
out
or
jg
xor
sbbl
mov
imul
xor
and
jg
divb
add
jmp
insl
add
mov
push
xor
jmp
inc
push
notb
inc
lahf
iret
dec
xor
add
xorb
add
xor
dec
add
add
push
cs
xchg
out
fldl
lods
clc
push
inc
dec
push
and
rclb
mov
rcl
pop
or
or
adc
or
xchg
ss
mov
and
iret
repz
push
scas
sbb
sub
push
adc
sahf
out
ds
add
fnstcw
add
add
add
add
add
pop
or
in
fmulp
or
push
add
enter
or
loop
and
fs
sbb
fs
cmpsb
fs
sbb
fs
cmpsb
add
add
cmpsb
fs
pop
add
add
adc
fs
cmpsb
push
clts
dec
cmpsb
fs
or
fs
cmpsb
sbb
or
adc
dec
cmpsb
fs
adc
add
adc
add
and
mov
jle
inc
push
test
adc
xor
inc
loop,pt
mov
test
inc
pop
and
push
lods
pop
push
andb
or
shrb
adc
push
add
stos
stos
bound
sbb
jbe
and
cmp
adc
pop
ret
or
pop
mov
fwait
add
xchg
and
cmc
pop
mov
mov
adc
out
lock
mov
adc
jge
add
fs
sbb
scas
test
addl
scas
mov
test
mov
mov
inc
xchg
sbb
aaa
test
das
stos
js
and
mov
pusha
inc
xchg
popa
push
sub
dec
push
inc
hlt
push
push
sbb
jo
in
sbb
pop
clc
inc
pop
cli
mov
push
push
add
sarb
cmpsb
imul
rcrb
sbb
rorl
sub
add
inc
xchg
ret
jae
adc
inc
sbb
mov
rcll
addr16
in
dec
xchg
dec
in
aas
pop
leave
rcl
and
shr
clc
cmpsb
jb
das
pop
xor
xor
dec
hlt
push
jg
xor
insl
lcall
js
adc
andps
adc
test
cltd
xchg
adc
add
mov
or
pop
adc
addb
pop
addl
daa
gs
inc
mov
cmp
pop
pop
jbe
lds
rcrb
and
cmpsl
sbb
jb
xchg
cmp
subb
leave
and
das
lretw
lahf
shr
xor
sub
jecxz
jae
xor
dec
arpl
aad
inc
xor
lret
ja
sub
xorl
ret
fidivs
mov
add
cltd
adc
push
adc
into
mov
add
adc
cwtl
mov
leave
add
outsb
lods
jmp
dec
or
push
sbb
lods
add
or
scas
cmp
mov
add
test
test
push
jae
sbb
xchg
dec
sbbl
fs
sub
sub
push
xor
sbb
push
aaa
dec
jo
dec
faddp
mov
lock
push
add
xchg
or
ss
imul
test
fimull
xor
jge
scas
rcrl
out
push
fistps
mov
pop
inc
roll
add
dec
and
call
sub
pop
mov
shlb
pop
shll
adc
iret
adc
mov
cs
adcb
mov
adc
sbb
jmp
lret
lods
add
add
repnz
cltd
mov
pop
shl
fists
sbb
inc
add
or
pmaddwd
orl
inc
jo
push
je
pop
push
iret
and
add
iret
mov
jo
xor
fildll
sub
sbb
pusha
xchg
mov
insb
ret
add
cld
and
sbb
jo
clc
dec
ficoml
daa
lock
movsb
adc
push
addl
mov
test
mov
pusha
mov
ret
inc
add
lods
pop
xor
sar
test
sub
push
cmc
add
fldt
shlb
xor
lds
hlt
loope
jmp
mov
call
idiv
cmp
add
mov
jne
add
push
pop
xor
and
xor
xchg
mov
pop
adc
lcall
mov
jge
cli
push
push
jo
sbb
imul
loopne
sub
test
pop
mov
sub
sub
ret
test
movsb
and
test
clc
call
xor
sub
lea
or
adc
xor
pop
mov
xchg
mov
sbb
ss
push
cmp
pop
adc
and
dec
xor
test
mov
jecxz
push
fdivrs
add
sbb
ljmp
bound
lods
add
mov
ja
sbb
out
mov
shlb
push
enter
nop
sarb
mov
xor
psadbw
xchg
jmp
ja
fs
or
sbb
add
or
daa
adc
mov
jle
mov
push
sub
je
and
negl
inc
lods
inc
dec
movl
dec
and
in
sbb
push
cmp
or
pop
jb
rcrb
sub
sbb
mov
sub
jb
pop
movsl
sub
add
add
push
imulb
or
or
xor
je
add
inc
xchg
mov
mov
call
icebp
and
nop
jl
push
jnp
test
lcall
movb
adc
outsl
mov
add
or
clc
outsl
jbe
xchg
bound
pop
jge
sbb
sbb
xchg
or
pop
push
mov
push
fsubs
or
lods
lds
or
inc
or
scas
push
dec
or
loope
adc
add
shr
icebp
push
push
mov
xchg
and
hlt
je
mov
pop
loopne
movsb
cmp
mov
ret
push
xor
les
addb
jg
clc
or
rcrb
and
or
outsb
adc
or
test
daa
andl
data16
or
adc
addb
sbb
jo
add
clc
lcall
inc
test
sbb
aaa
cmp
mov
dec
movsl
sub
push
mov
rolb
pop
sub
clc
je
fidivl
insl
sbb
jge
jns
cmc
cs
jg
push
leave
pusha
shlb
and
outsb
xor
loope
je
shll
roll
or
hlt
dec
push
repz
daa
add
push
stos
into
pop
divb
add
add
add
cmp
cmovne
xchg
rcr
pop
cmp
pop
clc
inc
test
add
andb
jne
xchg
sub
imul
jno
shlb
popa
mov
and
outsb
sti
pop
gs
rolb
clc
add
adc
lods
jecxz
add
stos
xchg
add
adc
jmp
and
sub
ja
aas
sub
sub
test
imul
outsb
jg
push
inc
pop
and
cmp
sub
arpl
add
xchg
xlat
fmul
inc
push
dec
cmp
cmp
jo
jmp
pop
dec
out
sub
movsl
and
mov
xchg
daa
xorb
in
push
jmp
lret
fsts
popa
adc
mov
jbe
outsb
das
stos
jmp
add
and
fbstp
cmp
fwait
or
fwait
not
test
or
xor
sbb
imul
pop
cwtl
data16
add
inc
sub
push
pusha
sub
shlb
push
sar
arpl
ret
cmp
dec
sub
movsl
movsb
cs
call
in
out
adc
je
sbb
je
sbb
xor
cmc
or
push
mov
jne
lahf
and
lods
mov
iret
clc
sub
cmp
cmp
lods
jge
or
shlb
mov
aad
xor
rorb
jge
add
sbb
jmp
sub
add
clc
das
je
imull
xchg
int3
mov
push
pusha
testl
jecxz
pop
fimull
mov
and
push
and
sub
dec
add
in
dec
mov
mov
aas
or
clc
cmp
ret
and
or
arpl
insl
mov
in
sbb
pop
fcoms
jmp
neg
and
dec
loopne
mov
inc
ret
nop
pop
add
adc
dec
xor
je
inc
or
dec
push
mov
insb
movsb
adc
arpl
in
cmp
jp
in
inc
xor
pop
out
cltd
nop
adc
dec
mov
pop
fisttpl
enter
bound
fimuls
pop
cmp
jg
lods
out
jle
inc
pop
cld
fistps
std
inc
sub
inc
cltd
idiv
adc
xlat
push
and
mov
dec
dec
jnp
sbb
fstl
xchg
scas
dec
fmull
jnp
adc
fdivrl
fmulp
fdivr
jmp
inc
pusha
pop
lock
mov
xchg
je
fmull
push
add
ljmp
sub
xchg
dec
add
push
ficoml
pop
pop
imul
inc
cmp
das
inc
xchg
add
inc
lret
inc
and
scas
xchg
mov
or
arpl
add
repz
add
enter
ret
insl
lods
std
mov
xchg
mov
adc
enter
call
dec
pusha
std
ds
add
dec
inc
dec
jo
mov
sbb
sub
mov
mov
mov
and
push
roll
das
push
fdivl
push
gs
adc
shll
arpl
sub
and
les
xor
das
mov
outsl
or
sbb
data16
lcall
add
add
push
inc
add
adc
insb
and
or
pop
jmp
jmp
pop
mov
test
xor
mov
sbb
loopne
rorb
xchg
xor
add
rcll
cmpl
xor
call
aas
adc
fld
fxch
adc
dec
fdivl
fld1
add
cmp
loope
loop
fldcw
inc
pop
push
push
dec
cmp
push
in
js
je
fyl2x
imul
fidivrs
mov
or
inc
ret
cli
push
cmp
fstp
enter
xor
adc
mov
dec
adc
cwtl
aas
inc
add
jbe
sahf
std
lods
insl
enter
fsubrl
leave
fmul
fsubrp
jmp
push
sbb
or
sub
fpatan
jg
cs
adc
mov
leave
or
fdivrp
dec
call
in
sbb
jae
push
icebp
sbb
and
cmp
fmulp
test
adc
inc
arpl
es
push
adc
adc
fmull
iret
adc
jo
das
or
out
shrb
mov
or
add
pusha
data16
imul
cmp
cld
leave
ret
movb
int3
dec
push
inc
test
mov
or
xchg
adc
mov
and
mov
cmp
lret
dec
dec
loopne
mov
or
jne
jnp
loop
lds
pop
add
es
cli
call
popa
adc
addb
xor
cmpb
je
xorl
test
xchg
sub
inc
or
je
or
push
xchg
adc
in
cld
in
sub
lcall
add
rorb
and
imul
in
pop
adc
test
push
fisubl
jb
xor
fwait
cmp
outsb
outsb
dec
mov
cmp
push
xchg
adc
and
sbb
pop
push
sub
push
and
test
rolb
and
icebp
sbb
xchg
cmc
xchg
outsl
xor
imul
pop
orb
mov
xchg
and
sub
nop
or
lock
pop
sbb
call
jmp
add
inc
push
je
outsl
je
out
bound
dec
dec
hlt
dec
mov
ja
inc
push
nop
neg
lock
push
cltd
lods
sbb
andb
push
pop
pop
pop
dec
sub
push
dec
enter
cmp
lock
push
jo
add
pop
add
push
adc
std
std
fldt
push
adc
in
mov
int3
addr16
pusha
movsb
mov
in
clc
xchg
lea
rol
xchg
add
fsubs
jmp
jb
ss
pop
dec
sub
xor
pop
jmp
loopne
lods
add
xchg
lods
sub
lret
jo
sarl
pushf
fs
pop
fstps
fdivrp
sbb
adc
jmp
push
pop
inc
adc
loope
xor
insb
jg
repz
pop
or
push
push
or
dec
sbb
push
imulb
fwait
clts
mov
int
popa
adc
or
rcr
rep
enter
dec
and
or
and
daa
xchg
jo
cmpsb
inc
adc
pop
sbb
out
xorb
push
fs
dec
fadds
sbb
mov
adc
mov
add
or
hlt
xchg
sbb
jns
add
loopne
dec
test
cmc
or
sbb
add
xchg
dec
adc
and
fsubs
and
sub
mov
push
rclb
sub
pop
push
lock
add
test
adcb
sbb
aam
or
mov
push
movb
or
and
sbb
sbb
or
xchg
jge
mov
pop
inc
cmp
hlt
sub
push
outsb
or
push
or
mov
mov
pushl
fstl
movsb
adc
pop
jnp
adcb
repz
jae
popa
mov
pop
ja
mov
movb
and
xor
fcoms
push
jmp
adc
addr16
ss
int
xchg
add
lds
pmuludq
fs
cld
mov
mov
cmovle
shll
and
or
ret
imulb
push
pop
pushf
ret
dec
sub
sbb
or
js
dec
add
int3
inc
mov
adc
pusha
dec
pusha
aaa
mov
push
clc
loop
jb
iret
mov
pop
cs
and
pop
rcrb
pop
adc
dec
push
imul
xchg
call
push
mov
sahf
and
sbb
sbb
in
add
add
cmp
and
test
jmp
and
or
xor
cmp
jo
pusha
sub
dec
cmp
loope
mov
jo
adc
xchg
out
ret
or
sbb
sbb
sbb
adc
jge
inc
mov
je
js
js,pt
push
and
insb
sub
push
adc
pop
pop
nop
and
test
dec
add
adc
xor
mov
push
dec
push
in
jne
nop
cmp
hlt
cltd
xlat
jecxz
mov
adc
adcb
and
add
pop
test
add
lret
sbb
test
jo
push
inc
cmpsl
jl
cmp
jge
or
pop
cli
and
jle
inc
mov
or
add
popf
or
incb
fildll
mov
inc
add
and
push
cmp
adc
push
push
xchg
push
push
jno
mov
push
push
int3
pop
inc
or
test
sub
je
push
push
andl
mov
adc
rcrb
test
inc
adc
push
jne
or
inc
xchg
push
cmc
mov
sbb
and
cs
push
pop
mov
cmp
pop
jne
std
in
inc
and
gs
pop
push
pushf
addl
shr
xchg
sahf
faddl
and
push
movsl
lods
sti
lea
push
cld
jmp
xchg
push
sbb
adc
inc
sub
mov
repz
adc
add
mov
in
xchg
hlt
jecxz
cmp
negb
clc
pushf
push
jb
sahf
fs
in
mov
sbb
in
sahf
test
push
loop
in
add
dec
sub
fsts
sbb
dec
sub
or
js
sarl
clc
in
add
pop
in
movsb
add
cmp
popa
add
add
out
mov
or
ljmp
mov
pop
push
in
dec
push
aaa
push
hlt
ret
stos
and
adc
add
fisttpl
xor
je
pop
inc
jp
jbe
push
inc
xchg
inc
lea
push
lea
ljmp
sbb
sbb
ficoml
jle
adc
add
cmpsl
dec
jbe
xor
mov
shll
aam
adc
sub
xor
and
sub
addr16
notl
or
jne
push
adc
mov
add
pop
psrlq
nop
out
in
mov
jge
push
je
jmp
aas
dec
push
xchg
inc
inc
add
or
rolb
jo
mov
pop
inc
xchg
loopne
shlb
fbld
pop
mov
nop
push
sub
jl
das
data16
les
push
pushf
les
mov
push
mov
add
pop
lock
std
push
testl
mov
cmpsl
outsb
aam
aas
push
mov
stos
cmpsb
fadds
outsl
dec
ficoms
xchg
dec
cli
bound
or
leave
inc
rorl
or
push
push
push
aam
mov
xor
les
sahf
cmp
mov
inc
dec
insb
add
mov
inc
jge
cs
rorb
fpatan
call
outsb
adc
imul
jecxz
fidivs
call
add
cmpsb
imul
sldt
fiadds
inc
mov
cmp
rolb
mov
add
lret
jl
test
dec
push
and
popf
push
xor
push
adc
mov
xor
les
enter
test
adc
add
sub
les
scas
lret
mov
inc
add
loopne
xor
sbb
push
jbe
push
shrb
cmp
popa
repnz
pusha
jge
js
xchg
mov
stos
test
aaa
adc
xor
and
movsb
cli
cld
sub
dec
push
inc
ficoml
lock
inc
pop
fildll
or
jmp
jae
cmc
or
dec
mov
sbb
fmull
shrl
dec
mov
inc
in
rclb
mov
sbb
xor
and
pop
dec
jbe
mov
sbb
mov
push
xchg
pop
fcomps
mov
add
fsubl
mov
inc
push
stos
sub
cmp
inc
call
xchg
insl
movsl
jns
jne
lock
xchg
add
xor
cmp
add
adc
mov
add
push
mov
enter
bound
ret
insb
push
and
test
xor
stos
push
clc
stc
add
jne
xor
sbb
xor
pop
and
xorl
movsb
add
cmp
notb
cwtl
add
push
and
faddl
adc
jbe
enter
mov
cmpb
mov
mov
ret
cwtl
call
outsb
test
and
arpl
or
or
in
or
pop
sbb
clc
bound
jb
fidivl
jle
daa
aam
sbb
and
mov
aaa
outsl
ja
mov
add
mov
sti
jmp
movzbl
jle
add
add
out
in
dec
sub
cmp
and
sub
test
sub
or
fsincos
sar
mov
imul
subb
jmp
sahf
out
sub
ret
add
adc
sub
mov
push
sub
je
ss
int3
sub
cltd
cli
subl
inc
sbb
mov
mov
aaa
xlat
movl
or
dec
or
inc
mov
adc
xor
jne
and
dec
nop
jl
hlt
movsb
mov
xchg
sub
cwtl
jns
lods
sbb
or
outsb
dec
test
xchg
push
popf
mov
push
mov
adc
inc
pop
fidivrs
push
les
mov
sti
clc
sbb
shl
out
push
xor
in
mov
bound
in
scas
jnp
push
push
arpl
imul
push
out
sub
or
adc
lods
into
lock
sub
popa
add
mov
jle
mov
push
in
mov
imul
in
mov
mov
inc
sahf
or
outsl
sub
or
inc
push
add
pop
jb
or
ja
cmp
jb
mov
insl
jno
ja
lret
jb
or
jbe
mov
and
in
push
add
xchg
and
jl
sbb
dec
sti
sub
data16
jmp
inc
rorb
inc
jo
add
jmp
and
dec
cmp
dec
cmpl
in
jmp
stc
adc
sbb
fstp
pop
adc
gs
or
dec
cmc
dec
imul
push
int3
hlt
je
shr
fdivrl
push
lock
jmp
rcrl
inc
daa
cmpb
inc
adcb
jbe
xor
add
lret
aam
mov
and
push
neg
xor
push
inc
ret
and
pop
xchg
push
aad
jge
mov
sbb
push
addb
clc
inc
loopne
stos
mov
loopne
testl
loopne
push
push
jmp
pop
add
cs
popa
mov
adc
sub
in
repz
dec
and
cmpsb
dec
sub
add
enter
push
pop
jge
mov
shlb
adcl
xor
pop
aam
push
pop
push
fcoms
insb
push
add
sbb
mov
neg
lods
cmp
push
lcall
ds
cmpsl
fistpl
mov
jge
mov
cmp
jb
je
adc
ds
mov
rolb
out
mov
push
mov
gs
mov
outsl
push
jmp
adcl
dec
push
stos
movzwl
imul
and
mov
cld
inc
ds
inc
inc
cmpsl
ljmp
mov
cmp
xchg
lock
imul
jae
shrb
add
add
mov
stos
inc
push
mov
ret
outsb
add
jae
sbb
scas
adc
jle
mov
clc
dec
or
cmovge
adc
test
or
aam
cltd
es
subl
add
pop
xchg
pop
vmovaps
or
shl
mov
add
in
mov
or
pop
add
inc
pushf
daa
subb
cmp
or
or
mov
add
mov
jo
addb
push
xchg
adcb
push
dec
xor
push
cltd
push
pop
test
cmp
nop
pop
adc
cmc
push
pusha
cmp
mov
add
and
cwtl
icebp
cwtl
xor
pop
lea
cmpb
fmull
and
and
mov
or
rclb
stc
cmp
movsl
add
lock
jo
cmp
push
cmp
call
push
out
inc
icebp
adc
inc
xor
pop
jmp
xor
aaa
xor
add
fists
je
pop
outsb
or
inc
jle
add
stc
jne
inc
nop
sbb
jae
pop
out
mov
or
lds
and
jne
mov
add
clc
xor
mov
add
movsl
cmpsl
add
lret
adc
inc
push
bound
add
inc
mov
imul
add
sbb
add
pop
sbb
fwait
leave
mov
fistl
dec
add
das
adc
jbe
xor
addl
shrl
andl
inc
or
dec
adc
add
or
les
mov
dec
inc
inc
sahf
push
mov
pop
sbb
add
xchg
sbb
adc
lods
xchg
jg
pusha
inc
sub
shll
sarb
or
les
cwtl
and
jbe
jb
dec
jb
adc
or
rolb
xchg
mov
sbb
push
or
adc
inc
jns
jge
loopne
jo
pop
push
cmp
inc
enter
mov
cmpb
xchg
cmp
or
mov
inc
lods
popa
and
enter
insl
and
mov
nop
faddp
cmp
lret
add
push
adc
outsl
inc
add
cltd
idivl
sub
cmc
jp
inc
sbb
mov
dec
mov
adc
daa
add
jno
push
loopne
rcrb
pop
das
lahf
jl
adc
mov
sbb
or
mov
ss
fcompl
test
int3
dec
test
daa
inc
dec
cltd
sub
add
divl
xor
shrl
xor
aaa
clc
and
push
add
pop
addr16
outsb
ja
jmp
or
ret
sub
sub
mov
jge
flds
lock
outsl
xor
jmp
jp
sub
cmp
or
jp
sub
jmp
or
xchg
or
andb
pop
dec
movl
adc
jg
jo
add
testl
jne
sbb
es
push
pusha
addl
sub
scas
mov
push
push
push
lahf
or
mov
or
fadds
call
roll
pusha
stos
mov
subb
and
lahf
into
pop
mov
or
imul
lods
push
shrb
mov
dec
and
add
push
int
aam
mov
lcall
sbb
cmp
out
hlt
push
sbb
insb
adc
fidivrs
cmp
push
adc
mov
out
dec
shlb
mov
xor
mov
mov
and
sbb
mov
mov
repnz
or
add
pusha
inc
sbb
adc
and
ds
dec
add
add
adc
leave
xchg
mov
push
add
or
fisttpl
add
mov
add
jno
push
sub
in
dec
pop
daa
mov
adc
into
or
add
aaa
sbb
and
or
mov
mov
mov
mov
jp
orb
add
test
insb
add
shlb
add
add
or
mov
and
sub
movsb
mov
push
sub
add
jecxz
insb
sub
insl
out
loop
xor
add
push
and
adc
stos
pushf
cmp
pop
push
mov
repnz
jle
cmp
mov
dec
cmp
mov
mov
xor
int3
sarb
inc
dec
pop
mov
inc
lock
push
sbb
inc
adc
mov
jo
ljmp
sub
mov
push
push
je
xor
sub
mov
mov
pop
add
ret
je
out
adc
sbb
dec
or
adc
cmp
dec
push
outsb
arpl
out
xchg
shl
in
add
cmpsl
std
dec
cld
imul
adc
and
andl
pop
pop
jnp
fisubs
jb
mov
xor
adc
inc
sub
sbb
cmp
push
xchg
sub
sub
lock
mov
or
xor
out
xor
mov
mov
sbb
jb
push
push
stos
hlt
pusha
dec
bound
rcrb
orl
inc
push
inc
fcompl
adc
push
imul
pop
jp
sub
push
adc
cmp
pop
cmp
ja
pop
or
push
cmpsb
or
sub
push
cwtl
jbe
or
push
jl
sub
mov
cmpsl
out
jb
mov
jl
and
push
sub
scas
shr
xchg
test
scas
push
js
pop
lds
push
lods
lods
sub
push
pop
idiv
push
in
aam
rcll
add
sbb
icebp
fwait
ret
divb
je
adc
xchg
mov
adc
dec
pop
nop
ret
inc
mov
ret
out
sbb
iret
sarl
das
add
cmpsl
out
lret
inc
cltd
out
add
inc
sub
push
inc
add
add
pop
or
leave
mov
xlat
cs
mov
in
cmp
xor
je
push
and
lods
dec
addr16
inc
jl
das
xor
inc
inc
inc
bound
mov
into
test
or
and
and
aas
ficoml
push
sub
push
push
push
in
inc
popa
imul
or
jecxz
sub
lods
add
push
inc
hlt
fmull
les
adc
subl
xor
jl
mov
fnstenv
adc
dec
add
push
sub
std
inc
add
adc
cmp
sbb
test
cli
les
or
jb
or
stc
mov
push
insl
inc
xor
je
pop
gs
xor
xorl
pushf
cmp
add
xor
xor
xchg
adc
lret
pushf
ljmp
push
or
lock
pushf
adc
xorl
jnp
aam
hlt
or
sbb
cmp
pusha
cmp
jne
sbb
jne
pop
sbb
icebp
and
dec
in
sub
fadds
sub
pop
mov
and
pusha
adc
push
or
adc
mov
xchg
mov
push
xor
rclb
scas
jle
inc
mov
shl
and
push
fldcw
push
dec
aad
cltd
fninit
nop
loopne
aad
loope
mov
mov
push
cltd
push
shlb
aaa
push
pop
stos
fs
jmp
mov
push
mov
stos
xor
xor
cmp
ss
pop
push
sub
adc
or
sbb
sub
mov
popf
fisttpll
jge
scas
push
inc
into
movsl
je
inc
lds
add
sub
pop
test
and
and
sbb
jmp
push
inc
cmp
jmp
xchg
addb
call
pop
int
adc
in
push
mov
jg
xorl
inc
call
adc
cmp
iret
enter
mov
mov
mov
orb
adc
enter
aam
fadds
add
add
leave
sub
in
repnz
jecxz
test
pop
push
adc
sbb
int
cmpsl
jmp
clc
and
xor
clc
adcb
test
mov
or
mov
xchg
cmp
sbb
xchg
fadd
mov
aaa
or
lahf
or
mov
push
push
mov
adc
add
lock
aaa
popa
insl
mov
fildl
out
fcomp
jmp
sar
xchg
adc
xorl
xor
and
cmp
pop
push
or
xor
mov
xor
cmp
dec
and
sub
dec
sbb
movsb
add
dec
lea
adc
xchg
cli
xchg
lods
cld
fs
add
pusha
subl
dec
sub
loope
psubq
mov
push
aam
adc
insb
imul
popa
inc
add
fsubrl
xor
mov
adc
insl
jne
test
sub
jmp
loope
dec
jg
xorb
jmp
jmp
hlt
inc
pop
in
iret
ds
dec
add
lea
addl
rorb
jne
sbb
pusha
inc
lods
cltd
xchg
data16
rcrb
jbe
add
sub
ljmp
sbb
adc
cwtl
adc
push
dec
addl
and
ja
test
adc
push
call
imul
sub
or
js
fmuls
mov
mov
outsl
inc
jl
cmp
push
ja
pop
shlb
adc
je,pn
or
mov
cli
cmp
pop
sbb
push
testb
mov
xchg
adc
es
push
push
sti
lock
outsl
incb
push
dec
inc
push
inc
mov
cmp
inc
clc
push
pop
scas
fs
xor
cs
loope
add
pop
daa
call
jmp
push
cmp
lods
and
mov
sbb
stos
rclb
in
and
je
fcoml
loopne
adc
nop
fldcw
insb
in
cmp
gs
imul
pusha
in
sarb
inc
sub
sbb
ret
add
and
out
cltd
dec
shrb
rolb
cmp
push
mov
dec
lret
test
xchg
or
and
cmp
push
sbb
sbb
jl
shlb
mov
sub
push
rolb
loope
mov
subb
adc
jbe
inc
xor
das
xor
dec
rcrb
inc
repz
push
iret
mov
adc
dec
xlat
pusha
push
es
inc
mov
jnp
xor
sub
jb
cwtl
xcrypt-ofb
cmpsl
outsb
add
xor
and
xchg
fs
arpl
cs
loopne
add
dec
or
push
xchg
mov
mov
add
add
cmc
push
or
inc
in
ret
inc
jo
inc
neg
jl
leave
mov
mov
cs
mov
sub
lods
pop
js
jge
in
mov
lcall
call
or
mov
inc
insb
mov
mov
ds
dec
cld
mov
cmp
mov
andps
pop
push
pop
push
out
push
and
ds
je
sbb
and
jl
rorb
popf
out
adc
and
fidivrs
and
mov
dec
addr16
xor
mov
ja
xchg
push
xchg
enter
mov
aaa
repnz
faddp
sub
enter
ror
sbb
cmp
rcl
jp
push
push
and
fmuls
xorl
adc
and
jnp
inc
mov
xchg
lock
sarb
mov
push
or
out
push
mov
or
inc
or
into
mov
xchg
mov
fstl
insb
mov
das
push
inc
inc
adc
test
mov
jge
dec
daa
js
and
daa
pushf
and
xchg
fld
or
and
pop
sbbl
movsb
pop
pop
scas
jne
in
pop
or
sbb
and
fs
pop
je
xchg
imul
je
movsb
sbb
in
addl
out
clc
pushf
add
lods
adc
enter
int3
sbb
and
repnz
shrb
xor
and
enter
dec
mov
and
and
shl
inc
scas
mov
and
jo
clc
int
lret
aaa
jl
adc
test
in
cmp
jns
aas
and
jo
iret
enter
mov
cmp
mov
xchg
call
loopne
push
ja
enter
xchg
and
fsubl
sub
sbb
sahf
in
call
addr16
hlt
nop
ret
or
ljmp
test
shrb
xorl
orb
jbe
sub
or
lods
sbb
imul
push
sub
filds
and
and
lea
mov
cmp
and
enter
in
ret
add
inc
dec
jmp
jle
lea
ja
fnstsw
jge
jl
ret
or
fiadds
jl
pop
movzwl
xor
scas
add
fdivl
sub
fstl
nop
enter
outsl
add
pushw
jne
mov
mov
adc
pushf
inc
add
jbe
and
jns
sub
inc
imul
addl
lock
fistpll
add
addr16
in
sub
xchg
mov
jge
mov
or
jg
imul
xor
mov
xor
sub
je
dec
mov
add
push
xor
loope
out
xor
and
xchg
stos
sub
imulb
adc
adc
dec
add
bndstx
inc
inc
mov
mov
dec
sub
add
mov
inc
xor
push
pushl
pop
push
mov
lock
lock
fcomps
xchg
mov
ret
lods
icebp
mov
mov
test
add
les
sub
jle
push
add
mov
ficomps
loope
mov
hlt
inc
pop
pop
ja
orl
push
lods
sub
cmp
sbb
inc
insb
das
clc
ret
inc
pop
add
sub
test
mov
je
or
jp
test
push
loope
pop
mov
aas
or
or
or
and
add
or
sub
mov
add
lods
jne
dec
push
adc
sub
jne
loope
popa
mov
pop
movd
or
stos
mov
jnp
pop
pushl
dec
add
push
in
adc
pop
in
fisttpll
insl
je
or
adc
jbe
imul
xor
jb
pop
lea
sarb
and
je
nop
pop
jle
cmp
mov
push
or
pop
mov
cmp
cmp
pop
lret
in
dec
xlat
sbb
adc
mov
xlat
sbbl
add
daa
cs
push
out
sub
or
or
add
aas
cmp
pop
push
and
lods
jae
jae
sub
out
adc
aas
mov
sub
inc
push
inc
fisttpl
jmp
repnz
in
jge
andl
cmpsl
add
jecxz
add
lods
xor
lock
in
dec
enter
rorb
std
call
out
mov
push
les
inc
jle
mov
repz
adc
xor
cwtl
lock
sahf
movsl
mov
sbb
xchg
xor
adc
dec
push
xchg
add
test
add
jl
fsubrs
sbb
call
clc
push
inc
mov
or
jo
pushf
sub
inc
aas
lret
icebp
adc
sub
insb
push
daa
lock
dec
fistpll
pop
cmpb
inc
stos
pop
jne
mov
mov
lods
add
cwtl
inc
jbe
inc
aas
icebp
fmul
or
jmp
and
cmp
or
mov
sub
xor
fsts
in
jmp
cmp
add
and
out
out
addr16
xor
add
lahf
and
cmp
jne
xor
jnp
mov
inc
mov
sub
lods
and
cmp
rcrl
xor
xor
add
sti
cmpsb
test
js
xor
mov
pop
or
mul
ret
pop
movsb
not
adc
push
mov
sub
sub
adc
mov
cmp
pop
push
sti
loopne
rcrb
push
mov
sub
inc
aaa
push
icebp
inc
enter
rolb
xor
xor
pop
fisttpl
pop
hlt
insb
mov
data16
push
add
insb
and
add
or
inc
xchg
sub
fs
add
inc
add
inc
push
add
add
pop
cmp
xchg
repz
fdivs
jns
or
jnp
xor
das
add
xchg
dec
cmp
cmpl
add
iret
and
enter
inc
cmp
pop
and
jb
push
mov
or
adc
mov
shll
mov
fisubrl
mov
stos
clc
lods
rcr
xor
jnp
push
sub
mov
dec
xor
mov
test
pop
sub
stos
cwtl
rcl
adc
icebp
sub
cli
sarl
in
ror
mov
push
pusha
pop
cmp
xchg
and
cli
das
lods
fnstcw
mov
and
sarl
add
xchg
popa
xor
jne
mov
adc
add
adc
out
xor
mov
std
fwait
add
mov
inc
adc
sbb
and
outsb
cmp
jne
inc
bound
sbb
push
imul
add
push
jmp
jl
or
leave
mov
das
orw
mov
xchg
adc
xchg
dec
jae
pop
inc
jbe
push
dec
inc
imul
fiaddl
rcll
sub
adc
or
or
into
loop
and
mov
xchg
push
or
mov
mov
mov
push
add
rcrl
dec
ss
lea
nop
sbb
jo
add
fisttpl
inc
cmp
sub
xchg
mov
mov
add
cmpsl
and
divb
ret
arpl
jne
cmp
es
dec
cltd
pop
pop
xchg
lcall
push
or
push
int
aas
sbb
das
or
inc
cmp
sarl
jle
dec
stc
add
mov
dec
clc
jl
ljmp
add
into
jne
inc
dec
les
mov
mov
sbbb
xchg
outsl
adc
mov
inc
enter
and
divb
or
or
out
sub
push
and
icebp
ret
movb
xor
lahf
cmc
test
jbe
xchg
leave
inc
adc
jbe
js
push
lea
cld
ret
adc
ret
jae
rcll
sub
sub
outsb
push
push
cmp
jb
cbtw
xchg
push
jns
daa
dec
push
jle
aam
sarb
push
mov
xor
push
sub
mov
xchg
js
add
adc
aaa
cs
fnstsw
and
lock
cmpsb
sub
iret
xor
jmp
cmp
or
rcll
sbb
sub
and
or
inc
adc
ret
push
rolb
sbb
xor
lret
jmp
iret
lock
sub
mov
push
orb
pop
inc
mov
add
movsb
pop
inc
rorl
lret
or
xchg
add
fwait
and
stos
hlt
or
inc
fisttps
test
ret
in
pop
jmp
or
mov
ljmp
xorb
sub
or
and
add
nop
test
push
push
jp
xchg
xchg
movsl
loope
test
dec
or
sbb
lods
sbb
adc
test
clc
add
cmp
out
lock
jo
adc
mov
cmp
loopne
ja
pop
inc
push
push
push
or
mov
mov
jne
leave
test
clc
add
pop
fdivrp
sub
adc
mov
lods
adc
testb
jne
cmp
je
and
test
test
xor
add
add
aam
cmp
or
jle
mov
pop
addr16
hlt
pop
stos
dec
or
add
in
push
push
sub
jmp
inc
jne
xor
jp
dec
scas
mov
and
or
inc
push
dec
add
ret
mov
cmp
pop
mov
mov
push
pop
popa
hlt
push
cmp
mov
out
xlat
sub
push
and
and
and
jne
inc
inc
mov
adc
sub
mov
sbbb
adc
mov
push
dec
dec
outsl
adc
icebp
les
mov
and
unpcklps
push
xchg
js
and
mov
adc
and
push
ds
xor
ret
testl
je
pop
je
sbb
gs
repnz
and
dec
outsl
pop
enter
sub
xor
push
sbb
push
push
inc
add
add
xchg
pop
mov
cmp
mov
and
test
mov
jae
pop
adc
mov
andl
adc
pop
xchg
shll
sbb
sub
sub
ret
sbb
dec
push
cmp
rolb
and
pop
mov
pushl
jmp
push
sub
pop
push
rcl
fwait
cmp
int3
jl
inc
xchg
add
fcmovu
sbb
les
jae
xchg
jg
jmp
and
sbb
lahf
rolb
iret
cmp
jmp
clc
jmp
jo
lea
mov
or
inc
gs
call
into
xor
test
dec
or
aaa
movsb
xchg
mov
add
in
nop
xchg
inc
hlt
adc
nop
xchg
test
lock
inc
sbb
roll
pop
push
mov
xchg
lret
jp
inc
or
cpuid
push
inc
aas
clc
push
sub
ds
in
mov
jne
sbb
mov
or
aaa
and
inc
xorb
xchg
cmp
test
gs
add
or
add
aaa
push
and
add
out
lock
inc
add
loopne
or
pusha
or
into
jg
mov
cli
pop
and
cltd
mov
gs
mov
es
fisubrl
sub
push
or
lock
sbb
adc
jno
adc
push
in
mov
cmpsl
out
data16
cmpsl
mull
inc
jmp
xor
fimuls
in
nop
dec
test
ret
sahf
cmp
push
dec
and
add
xor
lods
test
add
roll
int
jecxz
pop
clc
mov
sub
mov
rorl
add
roll
cmp
fcmovb
push
es
and
int3
add
test
sbb
push
je
sbb
or
fstpl
cld
xor
nop
imul
cli
nop
mov
or
cmpl
pusha
dec
mov
push
push
out
rcrb
adc
or
push
adc
add
fwait
rclb
dec
cmp
mov
or
xor
cmp
pop
or
bound
pop
hlt
mov
sbb
pop
dec
gs
aaa
in
add
or
adc
adc
ret
or
add
mov
adc
push
mov
push
clc
hlt
clc
clc
ds
jb
hlt
cld
ds
rcll
sarb
cmp
mov
sub
data16
sub
das
push
mov
nop
loope
sbb
xchg
lods
sub
bsr
sahf
adc
test
in
push
pop
mov
mov
sarb
test
add
fsubs
roll
popf
call
aam
pop
frstor
push
stos
add
cmpsl
cmpb
movl
push
shll
arpl
push
clc
pop
stc
decb
add
mov
sbb
mov
out
adc
sbb
push
xor
insb
xor
push
xchg
xchg
push
inc
inc
dec
fcoms
stos
mov
in
loopew
pop
fcomps
sub
mov
je
push
pop
arpl
xchg
pushl
adc
xlat
jne
jmp
ja
jge
cwtl
xchg
lret
mov
xchg
rcrb
and
sbb
push
xchg
repnz
sbb
dec
pusha
push
ret
push
push
inc
xorl
std
mov
adc
push
pop
repnz
adc
pop
lock
mov
pop
aas
jg
loopne
push
push
std
or
aaa
jg
stos
dec
fmuls
lret
add
or
mov
faddl
lcall
aam
shrl
push
call
add
fadds
das
iret
pusha
push
mov
sbb
cmp
mov
and
mov
int3
jo
jmp
mov
movsl
clc
cmp
sub
lret
js
xchg
hlt
je
pop
or
mov
and
rol
aaa
lret
dec
xchg
dec
cmp
ja
dec
ret
fidivl
les
in
inc
cs
mov
addr16
in
or
mov
push
leave
add
clc
push
movb
lds
add
test
and
movsl
xchg
sbb
movsb
cwtl
call
hlt
xchg
popa
aaa
push
push
dec
movb
arpl
push
dec
lea
push
adc
adc
cs
inc
leave
cwtl
mov
push
iret
fwait
ss
pop
mov
jge
in
jo
jne
jae
add
mov
xor
mov
hlt
mov
mov
adc
and
fcoms
add
xchg
or
ss
add
adcl
nop
sbb
test
add
mov
sub
xor
movsl
dec
add
sbb
adc
test
mov
cmpsl
push
test
aad
xchg
pushl
notb
lcall
icebp
lods
ljmp
inc
jp
xor
mov
cwtl
xor
push
scas
or
and
sub
or
adcl
sbb
push
test
mov
leave
ret
dec
sbb
pop
lds
add
pop
lea
jmp
les
mov
cmp
std
adc
gs
dec
inc
xor
pop
les
sbb
sbb
and
mov
ret
ret
je
cltd
mov
push
add
jo
add
xor
push
or
notl
cli
lcall
add
les
xor
pushl
sub
mov
cltd
add
pop
lock
sub
aaa
lea
add
add
mov
xchg
mov
pop
mov
loop
xor
add
xchg
imull
movsl
ret
cwtl
and
or
or
or
sbb
js
add
or
or
inc
pop
clc
enter
fadds
pop
mov
or
push
inc
jmp
jp
shlb
fistl
dec
cmp
cld
bound
mov
pop
or
or
subb
arpl
cmp
ja
lea
inc
into
push
or
inc
ret
loope
ret
adc
fisubrl
add
jne
push
jge
mov
sbb
jmp
loope
adc
fs
adc
dec
mov
adc
cmp
sub
fldl
cwtl
mov
cmp
xchg
or
mull
xchg
daa
xchg
sar
loopne
shl
andl
pop
inc
or
or
and
xlat
ss
add
rol
mov
mov
adc
in
and
popf
movsb
mov
enter
inc
rolb
dec
mov
or
cld
inc
int
enter
clc
dec
xor
aam
mov
and
cltd
dec
shlb
mov
adc
test
cwtl
call
adcl
test
mov
into
mov
out
les
loopne
in
pop
jge
and
xor
shrl
mov
pop
sub
mov
cltd
inc
mov
cli
aam
mov
jbe
mov
xchg
mov
dec
sub
negb
sub
push
mov
leave
mov
movsb
sub
sub
sub
loope
or
inc
imul
add
imul
jmp
sbb
pop
jns
iret
jae
mov
js
in
xor
adc
add
sarb
xchg
mov
hlt
add
sub
inc
add
jns
xor
sar
mov
xor
jo
mov
xchg
adc
mov
loope
gs
xchg
lods
jae
push
mov
sbb
sbb
ror
cmpsl
test
cltd
cmp
cmpsb
test
jmp
incb
loop
push
dec
cmpsl
imul
add
sti
out
pop
stos
test
imul
push
inc
arpl
shlb
test
in
adc
push
jo
addl
sbb
pop
imul
cmp
cs
and
stos
pushf
xor
gs
loopne
imul
fstpl
mov
sbb
adc
pushf
shll
xchg
gs
out
lock
and
mov
and
iret
push
leave
pop
data16
push
push
lds
add
insb
pop
rorb
std
les
rol
inc
adc
mov
lcall
mov
movsl
call
push
shll
mov
jae
pop
mov
cmp
lods
enter
add
xchg
je
mov
jbe
push
pop
mov
cli
push
mov
into
ss
dec
lock
shlb
test
mov
and
adc
enter
xor
push
mov
pop
lock
cmp
or
mov
les
add
sub
cs
mov
rolb
sub
into
adc
xor
call
inc
and
aas
pop
je
or
or
push
ja
aaa
push
adc
fidivs
and
push
inc
adc
ror
clc
adc
mov
push
mov
mulb
xor
sbb
js
mov
jle
pop
hlt
pusha
add
rcrb
aaa
cmp
icebp
jbe
sbb
dec
sbb
mov
setle
mov
jnp
leave
in
clc
inc
xor
inc
test
int
shlb
or
aas
push
jnp
bound
fisttpl
shlb
loopw
xchg
mov
push
mov
pop
hlt
mul
mov
inc
aad
loope
push
dec
invd
vmovups
lea
sbb
adc
push
inc
sbbb
jg
cltd
pusha
fcomp
scas
shr
fbstp
imul
add
popf
push
frstor
fimull
addl
sbbl
ss
mov
into
fsubr
or
push
mov
test
add
inc
adc
fstpl
adc
add
addr16
cmp
push
xchg
xchg
mov
mov
js
pop
les
or
cs
push
push
insl
cs
mov
add
push
pop
pushf
or
sub
daa
sbbb
sbb
mov
inc
loopne
mov
add
push
icebp
loopne
sbb
testb
stos
mov
jmp
add
xchg
icebp
add
in
in
pop
inc
test
dec
push
daa
mov
daa
mov
push
cmp
add
or
jno
xor
xor
int3
bnd
push
push
push
dec
inc
xor
add
mov
test
out
xor
adc
lds
movsl
sub
movsl
sub
xchg
mov
movsb
mov
push
call
inc
jmp
orl
and
incb
fstl
cmp
insl
out
adc
cmp
jmp
inc
mov
pop
loopne
sub
mov
imul
jno
sub
xchg
push
or
mov
or
bound
sbb
or
mov
sub
das
push
push
popf
dec
push
cmp
jmp
inc
in
inc
xor
lods
push
test
mov
cmp
mov
stos
jl
sub
sbb
outsb
cs
push
sbb
dec
pop
or
pop
das
and
test
add
test
jmp
push
ret
fadds
or
jne
orl
dec
push
out
dec
jge
scas
test
and
sbb
jl
fbld
xchg
cmp
int3
aaa
mov
push
or
hlt
mov
sub
adc
cmp
sbb
aam
mov
jl
lcall
push
cmp
push
rep
xchg
sub
pushf
shlb
popa
rorb
xor
scas
shrb
and
ret
adc
sarl
loopne
enter
add
adc
sbb
out
popa
cmc
push
js
jecxz
mov
or
fwait
loope
aas
sub
and
jne
sbb
sbb
imul
sbb
lods
cmpb
jb
insb
pop
subb
fwait
mov
xor
add
data16
cmp
or
xor
add
adc
test
dec
addl
stos
add
out
add
xchg
cmpsb
jno
adc
test
add
and
pop
inc
daa
dec
int
xchg
or
ja
pop
dec
jnp
jmp
push
mov
push
push
mov
cmp
push
mov
sbb
push
mov
push
pusha
into
push
mov
ficoms
loop
or
sbb
mov
mov
jp
and
and
mov
sbb
insb
or
or
int3
leave
fadds
sbb
dec
dec
jmp
popf
ja
or
and
mov
xchg
xor
adc
sbbl
arpl
adc
test
add
push
sar
pop
mov
enter
and
pop
sbb
sub
add
jmp
cmpsb
imul
jnp
cmp
hlt
arpl
mov
je
jb
sbb
test
data16
inc
cmp
and
fldenv
add
dec
jne
cld
push
xor
pop
adc
add
jmp
jp
lea
shr
fisttpl
popf
sbb
mov
aam
popf
inc
cmp
pop
jbe
or
and
jl
or
mov
add
xor
sbb
push
mov
and
in
dec
std
insb
or
jbe
sub
push
or
imul
mov
add
mov
mov
push
add
push
inc
cmp
ret
orb
movsl
inc
loop,pn
stos
jmp
call
mov
test
test
andb
add
loop
inc
cmc
fs
sub
aas
add
outsb
mov
mov
xor
cmpl
insl
icebp
mov
inc
pop
jne
push
push
outsb
daa
cwtl
arpl
push
sbb
lock
adc
mov
js
pop
xor
pop
std
adc
push
push
stc
xchg
add
and
faddl
lcall
stos
xor
inc
movsl
add
shl
cmp
inc
or
and
xor
push
adc
push
sbb
add
pop
shrb
and
les
mov
aam
je
pop
dec
aas
xchg
iret
push
lcall
pusha
push
mov
cmc
or
xor
loopne
jle
es
mov
or
adc
lds
xchg
pop
sub
sbb
sbb
push
pushw
mov
loop
aas
adc
sbb
lret
into
push
jmp
stos
cmp
sub
xchg
lret
pop
push
cmc
inc
cmp
cmpsl
or
leave
popf
mov
or
push
and
call
out
sub
mov
cmp
iret
ljmp
push
xor
repz
mov
adc
mov
adc
jmp
test
push
add
mov
push
ret
cmpsb
testb
jns
xor
inc
mov
enter
sbbb
cmp
addl
rorl
lea
push
lods
dec
repz
das
cwtl
push
mov
dec
pop
push
jmp
mov
out
mov
outsl
cmp
sub
mov
mov
mov
pop
sbb
js
sbb
movsb
sbb
dec
pop
adc
push
add
sbb
adc
mov
push
cmpb
sub
xchg
stos
fistpll
cmpl
je
cmp
loope
xor
pushl
mov
xor
jmp
xor
lock
add
incb
pop
fldcw
mov
mov
notb
je
or
inc
and
imul
mov
movzwl
jne
xchg
add
cmpsb
cmpsl
sbb
push
mov
rcll
and
movl
push
or
test
xchg
mov
push
push
adc
adc
xchg
jne
xor
push
cmp
push
cmpl
sub
xor
push
enter
push
or
into
push
sbb
jp
push
mov
inc
push
sub
mov
xor
addr16
xor
out
adc
je
ret
jns
mov
dec
out
jns
rcrl
push
inc
push
icebp
or
pusha
and
enter
and
in
adc
add
add
in
movb
lods
imul
out
jmp
in
data16
sahf
and
ss
loope
cmp
shl
leave
adc
sbb
jmp
or
and
pop
les
inc
enter
cmp
addb
ret
sahf
in
xor
push
jnp
inc
push
daa
dec
fcoml
or
xor
orb
mov
mov
ljmp
cmp
sbb
sarl
mov
sub
mov
scas
jne
mov
sbbl
or
fsubs
push
outsl
inc
xchg
push
test
push
jp
notb
push
push
loopne
pushf
or
ret
mov
cmp
push
jne
jb
adc
dec
or
push
or
sbb
movsl
das
test
or
aam
nop
jmp
je
mov
or
xchg
mov
xlat
je
mov
sti
dec
les
mov
cli
jge
inc
pusha
cmp
inc
adc
hlt
cmp
mov
in
arpl
sbbl
dec
or
adc
sbb
sbb
xchg
or
push
mov
pushf
xlat
xor
int3
add
aam
xor
inc
loop
stos
or
pop
int
jge
pop
xchg
add
adc
jecxz
dec
ret
fmul
scas
movl
pop
imull
push
adc
mov
movl
cmp
or
push
dec
hlt
push
push
adc
pop
bound
fisubrs
sbb
popf
ds
mov
adc
inc
je
rclb
sbb
push
loop
loope
sbb
stos
ret
fsubp
mov
push
inc
subb
push
ljmp
insl
in
mov
mov
sbbl
or
jbe
dec
lahf
and
dec
sub
inc
arpl
pop
cmp
push
and
je
icebp
push
inc
daa
fdivr
rolb
mov
test
test
lahf
cmpsl
push
pushf
mov
jne
push
hlt
xchg
push
xchg
lock
jbe
aaa
shlb
imul
js
cld
not
xor
and
xor
push
outsl
inc
jg
sbb
jge
mov
mov
imul
push
cld
js
mov
mov
ja
mov
cmp
test
int
add
sbb
cmp
add
inc
jnp
sbb
xor
fldl
loop
push
push
mov
adc
lret
xor
jb
das
aam
push
insl
arpl
or
inc
mov
xor
dec
push
and
in
mov
push
call
out
mov
inc
adc
sub
or
push
icebp
push
xor
clc
je
add
mov
add
mov
pop
add
adcb
and
pop
addb
jmp
xor
push
cltd
ret
or
mov
sbb
push
std
mov
add
pop
add
push
orl
andb
push
xchg
push
xchg
jle
mov
sarb
mov
inc
mov
mov
lock
dec
sbb
incl
andl
pop
cmp
dec
pop
popw
test
adc
addb
mov
in
xlat
nop
outsl
cwtl
pop
clc
push
sub
adc
jmp
inc
pop
push
aaa
je
jmp
dec
sbb
cltd
inc
and
dec
mov
pop
call
movswl
adc
je
inc
movsl
pop
push
xchg
cmp
inc
loop
inc
sub
jno
cmp
lret
adc
loope
int
sub
add
in
jb,pt
loope
in
fdiv
mov
inc
cmp
test
or
movsl
xchg
add
adc
inc
shll
popa
dec
pushf
mov
or
call
lea
mov
fprem
dec
repz
leave
in
jae
adc
imul
and
and
cmpsb
nop
and
loope
je
xchg
cmpsb
xor
jecxz
push
or
inc
popf
ss
addr16
sbb
movl
mov
xor
outsb
inc
sub
sti
int
mov
push
fstps
sub
sbb
sbb
cmp
xchg
movsb
test
dec
scas
xor
jmp
fwait
jbe,pt
sbb
stc
lock
mov
or
push
jmp
lea
in
cmp
adc
jae
cmpsl
sub
enter
cltd
sysenter
xchg
xchg
lods
js
int
mov
stos
lods
data16
mov
adc
push
sbb
inc
iret
push
lcall
adc
push
jmp
dec
xor
shrb
pop
das
sbb
xchg
adc
fsts
faddl
push
mov
push
fbstp
mov
cltd
jmp
icebp
loope
test
test
mov
push
cmp
lods
imul
rcll
add
mov
in
sbb
push
sbb
mov
shrl
or
mov
xor
mov
or
push
pop
add
int
pop
mov
push
es
ss
fimull
xor
pop
loopne
pop
mov
fwait
movsl
xchg
cld
mov
je
pop
adc
lods
rorl
push
dec
cmp
shll
daa
inc
cmp
fisubs
or
popa
add
es
es
into
pusha
pop
jmp
outsb
mov
pop
stos
inc
orl
jge
fbstp
incl
jecxz
loope
cmpb
and
mov
cwtl
adc
lret
ret
push
pusha
cmpsl
mov
adc
sbb
pop
or
jmp
scas
jmp
add
cmpb
sti
xor
add
xor
jne
xor
push
dec
jg
xor
dec
push
js
jmp
mov
jmp
inc
cwtl
cmc
mov
pop
adc
mov
ljmp
sub
inc
xchg
fdiv
or
and
or
adc
or
inc
adc
dec
sbb
mov
popa
xchg
faddl
jmp
mov
scas
or
in
push
dec
or
ret
adc
test
je
sub
mov
mov
aad
push
xchg
dec
mov
mov
or
xchg
sub
sti
push
addr16
add
loopne
and
test
cmp
stos
gs
sub
repz
movsb
push
dec
dec
xor
addr16
pop
mov
mov
mov
sub
ljmp
js
lock
lret
xor
adc
push
sub
jno
nop
dec
dec
pop
jo
mov
shlb
and
xor
lret
loope
pop
add
push
jl
repz
mov
cmp
mov
mov
loope
push
out
adc
ja
dec
cmp
pop
mov
leave
rcr
fldl
dec
add
sbb
leave
pop
dec
cmpsb
lods
pop
xchg
bndstx
out
dec
inc
xor
add
dec
mov
xor
std
push
and
lcall
lock
lret
ret
lcall
es
mov
out
divb
imul
or
push
shrb
int
add
cwtl
jo
rorb
add
cs
add
and
test
or
or
sbb
or
push
xor
into
inc
rcr
adc
aam
pop
push
cmp
popf
stos
push
rolb
cmp
sti
fidivs
inc
std
ds
push
les
fimuls
xor
mov
add
insl
cltd
xor
dec
addr16
ja
add
fcomps
mov
xchg
fldl
mov
jl
fcompl
cmp
lret
mov
adc
mov
add
add
movsl
adc
dec
ret
sbb
orl
mov
nop
rorb
jo
xchg
sahf
aaa
je
js
mov
jae
int3
lret
fst
scas
jecxz
addr16
out
mov
pop
cmpsl
inc
xchg
inc
jno
or
jmp
jg
pop
jnp
pop
jns
sub
jno
sarl
xlat
push
cmp
xor
and
xor
aas
das
subb
test
xchg
inc
push
arpl
push
inc
xchg
ret
dec
jo
addl
inc
xorb
lret
adc
xchg
sub
or
xchg
cmp
pushf
xor
pop
fcmovne
xchg
push
bnd
subl
cmp
fdivs
add
mov
sub
mov
push
cmp
repnz
jno
lcall
test
cmpsl
push
mov
xchg
mov
mov
sub
lahf
or
xchg
push
loope
sub
imulb
add
or
mov
imul
sub
jno
add
adcl
loope
pop
scas
data16
jne
mov
movb
add
scas
adc
lods
cmpsl
add
and
mov
das
fidivl
imul
inc
ret
dec
jo
loope
adc
mov
xor
sub
jl
movsl
outsb
and
push
jns
dec
mov
jp
negb
and
xchg
subl
sbb
addr16
imul
xchg
jecxz
aaa
or
mov
lds
dec
mov
popa
or
aad
add
ja
sbb
jns
adc
in
idivb
sub
lods
mov
jmp
mov
jb
push
fistl
fs
pop
popa
pop
cmc
inc
in
xor
mov
mov
mov
nop
pop
cmp
cmp
jo
les
push
jl
jns
repnz
xor
rolb
or
adc
mov
pop
inc
mov
mov
pop
or
insl
sub
push
jl
and
cltd
xchg
jno
je
lods
mov
xchg
cld
mov
das
mov
mov
add
insb
jg,pn
mov
cmp
pusha
adc
mov
mov
es
jne
repz
movsb
pushf
loopne
aad
pop
mov
jo
add
aad
push
nop
shlb
jmp
cltd
and
or
dec
fsubrl
xchg
out
mov
cli
in
lahf
or
sbbb
imul
loope
jne
mov
sub
jne
pop
push
sbb
sub
sbb
xor
iret
inc
push
incb
loop
or
in
rcll
mov
xchg
sub
jnp
mov
and
pop
in
push
pop
hlt
cmp
add
cs
pop
call
aas
xlat
imul
jmp
mov
je
dec
sub
sti
dec
jnp
cmp
dec
adc
inc
mov
mov
test
pop
push
ja
push
add
dec
int3
popa
mov
sbb
in
mov
adc
mov
and
loop
out
cmp
nop
fidivl
out
sti
in
cmovno
je
dec
je
add
aam
push
sub
adc
pushf
push
cli
jmp
jnp
ja
adc
leave
pop
xor
jns
pusha
jmp
in
fsubr
sbb
mov
push
ret
mov
dec
stos
cmp
iret
jg
cwtl
and
loopne
add
push
or
add
fs
dec
xchg
test
aam
push
xor
and
jae
pop
cmpsl
test
insb
mov
push
fcomp
iret
jne
cmp
int3
jg
or
and
pop
pop
cltd
ret
lea
test
push
call
xchg
cmp
enter
mov
xor
xchg
mov
mov
repz
jne
sub
dec
sbb
jle
bound
sbb
daa
mov
loopne
jl
cs
daa
and
sbb
frstors
xor
sbb
lea
lcall
enter
adc
xchg
out
cmpl
popa
add
ret
mov
inc
add
dec
mov
adc
cli
fildll
jg
push
loopne
aam
lds
mov
test
xor
sub
jmp
lcall
mov
lcall
or
dec
xor
rcrb
add
xlat
xchg
sub
inc
sub
insl
mov
sbb
jl
inc
push
stc
ljmp
orl
xchg
push
fnstcw
cmpsl
test
pop
ljmp
les
loopne
pushf
shrb
sub
xor
fidivs
jno
lods
lods
sbb
dec
or
pop
daa
mov
or
add
and
xor
imul
lea
mov
add
jl
jecxz
mov
pop
mov
mov
rcl
inc
mov
add
or
cwtl
sbb
jo
das
mov
and
mov
push
ljmp
cmp
xor
push
movsb
rorb
cld
cld
xchg
iret
sti
stos
inc
add
pushf
je
icebp
push
pop
lahf
mov
jle
mov
sbb
nop
into
mov
xor
stos
cmp
cmpsl
sbb
mov
fsubrs
movsl
adc
aam
popa
cmp
rolb
in
adc
push
pop
mov
jne
loop
mov
in
lea
rolb
jb
arpl
and
sahf
sbb
pop
fisubrl
in
mov
jmp
movsl
rorb
out
mov
mov
out
cld
inc
mov
mov
test
rclb
adcb
or
jmp
cltd
push
fstps
ret
xorl
cmpb
test
shll
stos
repz
jmp
dec
push
fdivp
cmp
arpl
out
lcall
into
dec
repz
jecxz
std
xor
addr16
iret
repz
jle
mov
testl
mov
pop
incb
decl
push
jle
xor
push
fisubl
xor
pop
xor
sbb
xchg
inc
ret
sub
sub
scas
ljmp
jo
aam
cmp
inc
shlb
loopne
in
inc
loopne
call
fsubr
push
sti
outsb
mov
push
and
dec
dec
pop
and
shrb
add
lahf
lods
shlb
fmull
add
mov
jno
push
jge
icebp
jbe
and
jge
add
mov
add
pop
test
inc
adc
imul
mov
xor
jno
mov
clc
adc
fadds
sub
pop
push
xchg
pusha
mov
xor
mov
and
add
or
sbb
mov
cmpsl
popf
data16
push
mov
jge
jne
decl
or
testb
jp
and
jmp
mov
add
dec
mov
dec
cmp
fdivrs
rcll
xor
sbb
and
movsl
js
sub
lock
xor
or
dec
lock
lock
jo
add
jne
ss
sti
nop
divb
aas
iret
push
jne
in
jne
sub
adc
je
lods
inc
sub
xchg
or
xchg
stos
push
jbe
arpl
testb
mov
hlt
rclb
push
dec
aas
jmp
mov
add
adc
adc
mov
add
push
out
enter
mov
std
repz
jnp
jmp
stos
testl
push
sub
dec
dec
jo
xor
cmp
add
jo
pop
push
cli
push
mov
and
and
or
adc
ret
popl
rcl
push
mov
sbb
and
mov
push
cmp
or
add
push
add
inc
pop
cs
pop
fildl
hlt
fmuls
fcoml
jno
lcall
stos
push
and
xor
sub
testl
cmpb
add
fdivrs
subb
je
mov
mov
push
sub
or
rclb
pop
jbe
dec
cmp
fcompl
adc
test
mov
rolb
add
popa
sub
mov
adc
push
mov
mov
addb
loope
inc
push
cmp
xor
mov
jo
pop
push
ds
stos
das
cmp
call
mov
mov
call
mov
sarl
pop
add
cmp
jnp
shlb
ret
jle
sbb
fisubrl
jnp
or
arpl
adc
pop
mov
jne
inc
pop
out
loope
fisubrs
fstpt
scas
jl
jmp
repz
nop
or
sub
add
cld
clc
push
jb
int
mov
clc
leave
cmpl
ss
adc
push
movups
sbb
cld
jl
push
dec
out
and
pop
push
lods
cmp
pop
add
adc
call
xchg
fs
mov
adcb
xor
je
mov
scas
cld
cmpsb
adc
lods
jmp
xchg
add
sub
mov
inc
sar
sahf
cld
inc
pop
movsl
addl
movsb
jmp
call
mov
fsubrs
clc
ror
jmp
jne
mov
jge
ja
mov
inc
add
xor
jo
or
or
mov
xor
movsb
jp
sbb
fwait
aam
les
mov
cmp
cwtl
mov
push
lods
mov
xchg
clc
xchg
add
sahf
cmp
or
adc
cmpsl
mov
loopne
mov
iret
add
in
hlt
xchg
lcall
js
xchg
mov
jo
pusha
repz
add
out
movsl
ds
add
xchg
xchg
dec
mov
movsl
push
add
ljmp
insb
into
in
inc
and
or
scas
pop
pop
or
aam
xchg
call
push
adc
stos
cmpl
jne
mov
imul
test
pop
dec
sub
out
lds
je
jbe
sbbl
push
movsb
dec
insl
mov
mov
aaa
cs
cli
push
sbb
push
add
xchg
dec
iret
pop
scas
insl
push
inc
adc
movsb
mov
mov
cmp
andl
jmp
fdivp
ss
sub
pusha
cmpsl
fsts
xor
and
lods
popa
sbbl
mov
dec
lahf
jnp
shll
jne
cltd
add
jns
add
xor
pop
jg
sub
adc
xchg
cmp
ret
aad
mov
test
stc
cmp
mov
daa
stc
mov
out
je
adc
push
add
inc
adc
xor
mov
push
repnz
lret
or
xchg
mov
xchg
push
cltd
out
mov
mov
sti
insl
sbb
xorb
sahf
aaa
jg
out
loopne
rcrb
add
scas
add
push
icebp
push
inc
ja
mov
test
xchg
mov
sbb
cmp
sbb
jne
mov
and
orl
add
dec
and
into
xorb
xor
lock
and
scas
sbb
mov
repnz
jmp
and
dec
mov
in
mov
shll
dec
sbb
shlb
pop
int
std
xlat
cwtl
inc
cmp
sbb
les
adc
in
mov
ljmp
jnp
and
fsubrs
or
jge
jbe
xor
cld
mov
xor
mov
cmpl
dec
mov
inc
sti
stos
fildl
shlb
pop
jle
enter
mov
lea
pushf
pop
inc
push
adc
add
push
adc
add
pop
xchg
pop
frstor
call
pop
jmp
mov
mov
pop
xchg
xchg
fcoms
es
ret
scas
jmp
ficoml
jle
out
inc
push
sbb
adc
cmp
inc
dec
mov
adc
add
inc
js
or
and
imul
sbb
leave
pop
add
iret
or
and
add
adc
mov
orl
jb
aam
sub
lahf
imull
inc
imul
mov
shrl
call
stc
outsl
loopne
mov
jne
dec
jb
mov
xlat
je
and
jne
mov
ss
fists
push
push
insb
dec
mov
sbb
std
adc
inc
xchg
mov
pop
push
mov
push
push
sub
sub
or
mov
stos
pop
xor
rclb
or
loop
or
mov
and
movsb
lods
pop
aas
push
inc
ljmp
add
sbb
nop
shll
pop
xlat
lret
lcall
or
lods
mov
lcall
int3
shlb
fwait
cmpsb
imul
sbb
outsb
pusha
add
mov
insl
call
push
mov
js
mov
jmp
int3
add
popa
call
mov
or
mov
call
xchg
into
sbb
add
adc
sub
push
cmpsl
fldenv
loopne
cltd
sbb
aam
ret
jne
mov
jne
inc
movsb
scas
cwtl
sbb
mov
sub
sbb
sti
pop
pop
add
or
stos
xchg
hlt
nop
pop
push
xchg
mov
jmp
xorb
mov
jnp
or
mov
mov
mov
mov
shll
lods
push
cli
stos
movsb
sbb
dec
fcompp
das
fcoml
pop
pusha
aad
scas
dec
mov
xor
lds
cmp
scas
xchg
push
xor
xchg
xor
mov
pop
pop
jg
fwait
scas
popa
mov
jmp
mov
cmp
lea
xchg
dec
ds
imul
mov
xor
cmpsb
imul
faddl
dec
push
mov
ror
das
ss
xor
repz
xor
inc
or
dec
fmul
sbb
adc
cmp
je
and
dec
mov
or
jge
add
aam
outsl
nop
aaa
adc
push
loopne
inc
mov
push
and
adc
jmp
pop
addb
ret
fstps
lods
sub
mov
je
add
mov
mov
imul
add
dec
lods
mov
jmp
sbb
lea
ffree
mov
inc
mov
mov
xor
inc
movsl
push
aas
add
lret
bound
loopne
pop
mov
jmp
inc
xchg
cs
add
mov
movsl
inc
test
dec
sub
push
sub
mov
inc
or
and
js
cld
xchg
sar
cld
or
enter
fadds
popl
arpl
lret
cmp
mov
imul
jae
mov
das
push
add
push
xchg
clc
sub
add
loope
test
mov
mov
and
and
pop
in
subl
fs
push
pop
sbb
push
inc
dec
pop
sub
enter
inc
and
cmp
mov
ss
cmp
punpcklbw
ja
adc
jmp
pushf
int3
arpl
lsl
mov
mov
dec
js
ret
push
js
popf
out
ds
add
movsb
xor
lret
add
cltd
testb
mov
push
and
test
cmp
jno
sub
pop
inc
arpl
mov
pop
cmp
pop
mov
pop
sbb
js
mov
into
mov
jns
add
addb
cmp
shll
sbb
or
sahf
sbb
jnp
in
inc
jg
pop
popa
adc
clc
test
mull
je
pop
orb
fwait
negl
popf
pop
dec
sub
mov
dec
ss
call
or
fadds
xchg
mov
xor
add
aam
add
xor
sub
enter
and
jl
inc
popf
mov
adc
lahf
test
xor
xchg
or
and
adc
inc
lcall
lock
xchg
js
lock
ds
xor
icebp
sub
and
aaa
sbb
daa
dec
lock
sub
ficomps
jg
inc
mov
rcrl
cmpsl
jge
cli
lcall
cmp
jae
imul
dec
je
movups
add
je
sub
pop
push
mov
das
call
inc
pushf
loop
adc
mov
xchg
fcoml
in
stc
rep
adc
adc
or
add
pop
cmp
popf
jecxz
repnz
in
mov
lret
enter
push
jb
sahf
movsb
std
add
xchg
inc
je
aad
lret
mov
xor
js
rcr
inc
pop
push
jne
in
and
jbe
or
jbe
in
jg
cmp
or
mov
sbb
rcr
test
jmp
daa
push
mov
cld
xor
rcrb
mov
push
push
adc
push
jle
mov
jb
push
mov
push
sub
ja
push
outsb
call
lret
pop
in
mov
push
sbb
add
lods
enter
fwait
and
pop
fdivl
sbbl
cmp
jne
cmpsb
add
imul
iret
inc
sub
push
loopne
xchg
or
dec
cmp
lock
sub
inc
mov
nop
fidivl
xchg
aaa
xchg
pusha
scas
std
dec
aam
sbb
adc
mov
pop
inc
pop
cmpsb
add
or
push
fcomps
fcompl
xchg
push
sbb
xchg
test
das
xchg
sahf
add
pop
cli
sub
jle
push
mov
xorl
lahf
lock
jmp
test
fldt
cs
pop
inc
adc
or
inc
andb
aaa
add
out
sbb
adc
mov
pop
loopne
enter
mov
fadds
aas
pushl
lods
hlt
push
push
pop
mov
pop
hlt
add
dec
pop
sti
dec
movsl
push
test
pusha
add
cmp
sbb
leave
add
mov
lret
xor
push
addr16
pusha
hlt
or
lock
xchg
mov
sbb
addb
clc
mov
xor
enter
jg
mov
push
mov
jb
clc
insl
cmp
cmp
cmp
rol
push
gs
xor
add
mov
dec
add
mov
or
loop
bound
dec
in
repz
lock
enter
mov
adc
jp
adc
or
xchg
cmp
insl
repz
jg
bound
pop
or
pop
jge
int
jmp
push
push
jmp
dec
sbb
cmp
jl
xor
sub
les
sub
lcall
adc
jp
je
add
xor
or
add
xlat
push
scas
lods
mov
icebp
xorl
sbb
mov
inc
sub
rorb
rclb
cwtl
xchg
pop
jmp
orw
sub
cmp
mov
dec
es
imul
xlat
jmp
mov
iret
adc
in
or
or
pop
push
out
or
adc
pop
sub
mov
aam
mov
jmp
addb
sbb
sbb
adc
aam
clc
adc
pusha
mov
xor
mov
mov
mov
add
mov
mov
mov
int3
mov
outsl
ficomps
mov
mov
movsb
mov
rcr
inc
xor
adc
xor
vaddsd
sub
jle
fdivl
iret
cmpsb
mov
clc
in
or
xor
dec
rorl
pop
push
notb
xor
xchg
test
mov
sub
dec
sbb
jo
imul
roll
call
sub
hlt
ret
xor
ret
inc
ss
xchg
ds
push
lock
cmp
jne
sbb
mov
add
dec
iret
xchg
or
mov
dec
dec
lcall
mov
dec
dec
mov
out
ret
in
clc
sub
aam
xor
aad
shlb
inc
or
inc
xchg
dec
repz
mov
mov
sbb
jle
push
pushf
rcr
lods
jge
push
xchg
jmp
pop
inc
mov
cmp
xor
cmp
mov
mov
lods
pop
ret
test
call
adc
nop
ficoml
xchg
xchg
gs
push
xchg
in
add
and
in
push
jge
mov
mov
ret
add
and
jne
xor
je
and
add
in
sbbl
cmpsb
and
xchg
in
pop
call
xor
rorb
dec
inc
leave
inc
sti
sarb
mov
add
enter
repnz
les
jb
xchg
loopne
add
in
or
jp
adc
dec
cmp
pop
lcall
je
mov
mov
cwtl
or
in
push
push
imul
xchg
dec
xor
lock
in
jbe
sarb
or
dec
fiadds
mov
je
push
adcl
jge
add
sbb
fs
test
loopne
add
cmp
js
xchg
cmpsl
loope
call
mov
loopne
jmp
mov
aam
cmp
pop
scas
mul
jl
cmp
nop
test
cld
fists
idivb
nop
adcl
ror
xchg
inc
js
mov
push
inc
stos
jb
pop
fildl
and
addr16
xchg
aaa
mov
jp
iret
roll
xchg
rcll
cmpsl
stc
cmp
lods
iret
adc
jg
or
jg
rolb
sub
push
and
pusha
xor
je
dec
ja
out
adc
mov
cmp
and
sbb
outsb
xchg
dec
push
lret
mov
mov
jmp
cmp
movsl
or
mov
mov
cltd
push
inc
rorl
inc
fsubl
mov
sarb
or
xor
xorl
int3
sarb
jge
push
pop
jae
js
add
lcall
ljmp
inc
pop
fmuls
rcl
rorl
je
out
bound
inc
cmp
or
lea
shlb
or
xchg
sbb
push
fld
cmp
xor
jns
repz
mov
inc
jne
jl
insb
sub
mov
sbb
cmp
xchg
and
and
push
aam
movsl
pusha
lret
mov
out
cmp
xchg
cmpsl
jne
xchg
leave
jge
pop
sbb
in
fsubr
or
mov
mov
pushf
sbb
out
addr16
subl
inc
adc
sub
sbb
xor
xchg
popf
loope
fsubrl
and
or
adc
adc
pusha
mov
cmpsb
sbb
xor
inc
pop
jae
lret
and
lahf
jle
jge
push
xor
ja
adc
mov
shll
sbb
and
sub
and
lcall
xor
jle
inc
psubusb
movsb
xor
cli
sbb
adc
inc
mov
adc
mov
push
push
mov
mov
test
pop
out
sub
imul
inc
aas
decl
pop
sub
mov
sbbb
imul
fisttpll
inc
orl
sub
insb
pop
mov
hlt
inc
cmp
pop
jp
mov
add
xor
ficomps
mov
sbb
mov
enter
ret
jmp
rcrl
sbb
or
jle
jbe
push
fmuls
sub
imull
fucomip
inc
pusha
jnp
xor
adc
test
or
outsb
outsb
aam
int
and
imul
imul
add
or
mov
mov
inc
mov
jo
push
cmovl
inc
dec
outsb
cmp
fs
push
add
add
gs
addr16
ja
and
inc
inc
dec
fwait
dec
inc
ret
mov
in
xor
jo
mov
sub
xor
not
pop
in
mov
cmp
lea
insl
pop
sbb
clc
mov
cmp
xlat
imul
in
addb
mov
or
sarl
lock
adc
mov
push
mov
mov
mov
lods
add
mov
cmp
jecxz
add
and
add
das
add
fdivs
inc
adc
call
sbb
cmp
aas
cmp
jnp
addr16
and
mov
cwtl
mov
pop
lcall
imul
stos
sbb
or
add
mov
mov
xor
pop
clc
in
scas
add
add
push
pop
pop
adc
jns
sub
xchg
dec
test
push
pusha
jne
push
sbb
enter
push
lea
mov
jne
cmpsb
andl
inc
mov
and
cmp
mov
lret
ja
cmp
out
xor
int
inc
shlb
add
jnp
fdivp
lret
mov
cwtl
shr
pop
pop
test
adc
add
mov
shrl
outsb
lcall
and
jae
call
inc
mov
rcl
rep
jne
cltd
mov
and
lea
cmp
xor
or
adc
mov
jmp
je
in
rcrb
pop
push
sub
push
add
pop
inc
xchg
inc
push
adc
outsl
pusha
movl
dec
sti
inc
je
hlt
adc
idivb
sarb
xor
inc
xor
or
xchg
scas
mov
push
jbe
push
jmp
sbbb
inc
xlat
daa
inc
pop
pminsw
lret
and
adc
mov
clc
push
loopne
aad
or
jp
pop
push
in
jo
nop
add
fcompl
push
imul
mov
fldl
jae
sbb
jg
orb
cmp
je
cmpb
xor
and
xchg
cmp
push
pop
adc
dec
jne
add
nop
int
fsubrl
es
outsb
std
js
xor
subb
mov
lock
xchg
test
rcrb
lock
pop
je
lock
loopne
arpl
or
outsl
or
jne
add
cmp
xchg
dec
mov
jb
pusha
in
incl
fcoml
add
test
repz
jle
inc
clc
fadds
mov
mov
mov
inc
jp
dec
and
ret
pop
xchg
in
loopne
push
imul
inc
shr
xor
in
jl
mov
cwtl
and
push
sub
frstor
lcall
inc
mov
xor
add
cli
imull
push
fstps
and
mul
pop
mov
nop
and
push
mov
xchg
pop
jl
or
inc
jp
add
orb
test
mov
dec
aaa
cmc
jnp
bound
push
sbb
inc
add
adc
adc
call
pop
jmp
fs
ja
sub
es
loope
shl
lahf
xlat
repnz
sahf
adc
or
outsb
inc
loope
push
mov
aas
xor
xchg
cmp
ds
into
inc
popa
call
inc
mov
push
fsubr
fimuls
loopne
push
and
pop
out
aam
inc
xchg
jo
sub
or
add
mov
test
sbb
xor
push
sub
mov
es
loopne
inc
imul
movsl
fucomp
dec
mov
int3
pop
ficoml
add
add
test
out
jo
test
pop
in
stc
test
mov
shlb
push
les
or
test
and
aam
xchg
clc
nop
daa
outsl
jae
sbb
push
xor
mov
mov
adcl
fs
add
and
nop
or
mov
pop
rcrb
add
ret
in
cltd
cmp
pop
push
int
movsb
xor
or
pop
inc
mov
test
inc
add
rcrb
sub
xor
fs
push
push
or
fs
scas
gs
push
pop
lods
dec
dec
mov
xchg
push
push
fsubrp
in
mov
xor
lret
gs
or
cmpsb
inc
mov
jo
dec
je
mov
je
push
pop
xchg
xchg
push
in
xor
insl
aaa
in
dec
je
add
or
aad
popa
push
fists
and
adc
test
cmp
adc
aas
jne
push
ljmp
dec
lock
out
insb
and
in
nop
leave
enter
movsb
pop
hlt
mov
sbb
xor
aam
mov
add
in
adc
enter
mov
mov
and
mov
rorl
lods
mov
scas
or
jno
mov
es
mov
jbe
adc
iret
sbb
ss
popa
jmp
and
test
imul
flds
inc
lea
ret
test
in
fwait
es
push
dec
pop
fnsave
cs
pop
inc
sbb
sub
lds
repnz
in
cmpb
push
add
and
mov
sahf
sub
ja
pop
sub
jmp
adc
jmp
jmp
rolb
loopne
jmp
mov
adc
fidivl
mov
add
ss
and
mov
imull
pusha
jmp
jge
js
pop
je
iret
jne
fmul
inc
fwait
mov
subb
add
adc
icebp
adc
mov
xor
pop
sub
pop
or
push
and
js
adc
pop
arpl
mov
je
mull
dec
jo
addb
repz
xor
mov
jns
sbb
mov
push
push
cmp
cmp
fsubrs
adc
test
out
data16
movsl
xchg
pop
xchg
mov
in
pusha
sub
add
cmpsl
das
dec
mov
sub
js
dec
loope
repz
inc
push
pop
jge
xchg
mov
sahf
out
jecxz
loop
jge
repz
out
clc
xor
repz
xchg
mov
sahf
cmpsl
stc
cmp
adc
sbb
daa
popf
mov
jge
test
jge
out
inc
dec
push
in
out
push
xchg
repz
repz
pop
jb
movsb
scas
out
imul
in
push
loope
into
cmpsl
cmp
outsb
inc
out
iret
repz
out
and
out
ds
xor
push
out
dec
cmp
fimull
repz
out
std
pop
call
repz
mov
loopne
testl
jmp
je
pushf
xor
sbb
fs
mov
or
add
je
lods
punpcklbw
fldcw
jo
roll
ss
inc
fcomp
imul
jno
sarb
rorb
and
mov
sub
mov
jns
xlat
or
and
jb
sub
es
sub
pop
popl
push
cmp
mov
cwtl
mov
out
daa
mull
test
fwait
jbe
mov
xor
or
inc
add
sbb
sub
dec
repz
push
movsb
add
push
push
fstps
or
inc
jmp
push
out
test
push
js
test
loop
pop
lea
inc
out
sarl
sbb
mov
sbb
test
xchg
js
ret
sbb
aas
adc
add
adc
movsl
push
test
aaa
pop
pop
fnstcw
mov
pop
sub
lret
push
adc
cmp
das
ffree
cwtl
shr
mov
or
ds
or
movsl
push
frstor
and
pop
and
pop
xchg
pop
scas
test
pop
mov
ret
je
xchg
ja
loop
push
js
test
das
stc
loop,pn
mov
jmp
jge
dec
adc
sub
mov
call
xor
jg
das
or
into
fs
aaa
sub
sti
push
movsb
add
pcmpeqd
fcoml
inc
sbbl
notb
mov
or
loope
xchg
popa
loop
sahf
or
pop
lcallw
adc
rcl
and
hlt
pop
xchg
inc
cs
and
loop
fwait
cmp
clc
cmpl
fcomps
add
or
push
jbe
clc
daa
sub
clc
fdivs
or
in
popa
fsub
push
ss
jmp
and
mov
mov
mov
jb
mov
lcall
aam
je
push
sarl
push
jecxz
das
mov
shr
pop
push
stc
sub
cmp
loop
or
push
mov
xchg
xchg
xchg
mov
mov
pop
and
cmpsl
in
inc
xor
test
vphaddwq
add
push
and
pop
jl
adc
roll
jmp
jns
pushf
pop
jb
test
pop
ja
inc
xchg
mov
inc
add
sbb
test
xchg
cmpb
pusha
inc
push
cmpsl
push
mov
insb
add
sbb
or
cltd
loopne
lock
dec
test
fst
scas
pop
xor
js
insb
and
add
mov
ret
cmp
add
pop
jg
inc
add
push
js
call
leave
push
fwait
test
hlt
xor
cmp
repz
mov
xchg
pop
leave
leave
aam
aam
lock
mov
das
test
xchg
das
add
jmp
adc
loop
push
ret
cmp
inc
rorb
mov
shr
testb
push
jmp
adc
shrb
xchg
dec
movsl
add
push
mov
push
mov
push
je
or
jmp
aas
or
adc
xlat
adc
bnd
and
mov
push
sbb
xor
add
adc
adc
cmp
outsb
and
adc
subl
mov
inc
lods
jecxz
jne
popw
outsb
xor
xor
adc
popa
enter
dec
stc
push
cmpsl
add
cltd
flds
push
jnp
pop
pop
es
jle
test
add
sbb
sub
pushf
testb
mov
dec
dec
adc
movsb
lods
les
sbb
enter
xchg
je
or
push
push
fs
loop
idivl
cmp
lea
out
xchg
insl
mov
stos
inc
xchg
jne
dec
in
adc
adc
or
testl
inc
sbb
pop
stos
mov
xor
test
test
inc
and
adc
cmpsl
orl
sti
and
inc
mov
insb
or
add
fs
imul
cmp
inc
inc
dec
movsl
sbb
loopne
xor
es
mov
xchg
mov
aam
push
mov
or
and
or
insl
test
cmp
nop
xor
cmp
repz
sub
rcrl
jae
cmp
stos
mov
or
scas
test
int
dec
pop
cwtl
sub
adc
dec
cmpsl
mov
mov
cmpl
xor
ret
xor
ja
push
add
mov
psraw
pop
pusha
pop
cmpsl
inc
clc
repz
imul
mov
fnstenv
fcmovne
jmp
push
xor
test
repnz
rcll
lea
cmpb
mov
xor
out
mov
jnp
imul
int3
jecxz
dec
js
aas
daa
cmpl
jno
sahf
or
adc
inc
or
add
inc
outsb
jmp
mov
add
dec
xor
popf
shll
or
enter
xchg
in
pusha
rcll
gs
push
mov
cmpsl
adc
cmp
mov
in
sub
insb
or
inc
movl
flds
inc
pop
jne
repz
mov
sbb
je
fnstenv
jns
adc
mov
mov
bnd
divl
add
ret
test
fldl
adc
imul
fldz
and
lahf
testb
jne
popf
fwait
shlb
mov
adc
test
je
or
mov
jl
clc
or
pop
fcom
pop
dec
mov
lcall
repz
fcompp
cld
sti
popa
adc
jmp
addl
repz
pop
cmp
mov
pop
cmp
sbb
push
pop
lahf
jmp
adc
fwait
test
roll
push
adc
add
pop
mov
jb
fnsave
push
mov
or
fldl
mov
jecxz
fcoml
ja
sbb
lock
jmp
adc
jl
outsb
mov
sub
inc
andl
pop
dec
mov
les
push
fbld
sahf
push
aad
aad
sbb
and
and
jge
mov
push
jmp
sti
sahf
out
pop
inc
insb
push
call
je
repz
ja
push
mov
lea
push
sub
in
nop
cwtl
and
dec
dec
js
add
test
cmp
push
fisubs
push
pop
sub
ficompl
iret
mov
mov
int
jbe
je
add
sbb
add
or
adc
pop
pop
or
mov
sub
push
add
push
xor
push
adc
fcoms
dec
enter
inc
adc
xor
adc
inc
imul
pop
adc
push
lret
push
push
inc
add
loopne
jecxz
pop
mov
xor
and
sub
xchg
frstor
in
fadds
and
movl
addb
mov
jl
cmpl
add
in
mov
aas
sbb
shl
sarl
mov
add
jb
rcll
imul
fcmovb
push
add
cltd
es
mov
shlb
pushf
mov
mov
insb
add
ficompl
xor
jb
jmp
xchg
jb
add
add
mov
or
bound
sub
pop
dec
test
push
jo
daa
mov
push
sbb
xor
inc
lahf
mov
addr16
cmp
ret
inc
cmpsl
or
inc
pusha
xchg
push
xchg
push
mov
push
xor
mov
ss
push
mov
movb
shrb
inc
loop
and
jmp
pushl
out
jg
add
xchg
int
mov
movl
sub
add
xchg
mov
movsb
add
adc
jne
in
push
mov
xchg
insb
jmp
mov
pop
xor
add
bound
pop
mov
or
push
popf
sbb
or
add
jle
and
movl
mov
pop
push
add
mov
clc
xchg
add
into
pushl
add
fs
call
mov
lock
call
addr16
mov
mov
cs
leave
fucomip
dec
mov
gs
in
sbb
lods
or
pop
xchg
add
arpl
or
adcb
and
cmp
mov
adc
pop
nop
out
cltd
sub
sub
and
xor
test
push
popa
popf
imul
add
push
push
cwtl
dec
or
or
jp
dec
sub
xor
enter
add
subb
push
xor
sbb
arpl
adc
imul
dec
add
push
pop
pusha
pop
mov
adc
mov
lahf
and
divl
sub
push
mov
xchg
mov
xor
mov
fdivrs
dec
sub
imul
imul
jmp
ds
lock
cmc
xor
mov
imulb
lahf
rorb
inc
dec
lahf
inc
je
push
lea
push
je
aaa
test
push
or
std
add
add
xchg
cmpsl
push
jno
out
pusha
add
adc
imul
cmp
js
jnp
sbb
orl
das
cwtl
and
ds
ss
push
gs
sbb
sub
fmuls
xchg
stc
mov
mov
dec
or
sub
je
dec
loopne
incl
push
xchg
and
push
popa
push
aaa
nop
decl
rclb
push
cmp
enter
or
popa
adc
xor
and
cmp
xor
push
and
sbb
sahf
mov
addr16
sbb
mov
and
dec
cmp
cmp
sbb
scas
loopne
insb
push
xor
dec
sbb
inc
es
sbb
and
sbb
rsqrtps
inc
je
movsl
ja
aad
mov
pop
jb
dec
jno
sbb
inc
dec
fcomip
fisttps
ljmp
or
mov
aas
mov
rolb
xchg
aas
leave
dec
push
loope
push
iret
out
and
push
call
lds
inc
xchg
cwtl
into
dec
push
mov
push
ficomps
out
sbb
aam
bound
xchg
enter
xchg
dec
and
outsb
sub
in
xorl
fwait
sub
pop
lret
sub
sub
add
rorb
mov
in
inc
mov
sarb
inc
pxor
pop
push
hlt
xchg
inc
out
push
add
das
cmp
and
sub
adcb
jecxz
push
addr16
ret
adc
cmpb
push
mov
xchg
inc
subl
sahf
add
jno
inc
sub
dec
fisttps
jne
mov
mov
insb
inc
cmpsb
mov
inc
pusha
sbb
out
push
sbb
and
xor
push
mov
jnp
call
sub
dec
adc
cmp
insb
loopne
xor
pushf
jo
pusha
and
pop
jnp
adc
xor
xchg
xchg
jo
add
fdivrs
aaa
in
popa
add
jl
xor
popf
push
rorl
jg
pop
add
pop
push
lret
outsl
or
pop
push
xchg
les
xchg
sub
mov
mov
push
cmp
mov
cwtl
or
in
pop
pop
call
jmp
popa
inc
sbb
cmp
and
xor
aas
flds
cmp
mov
cmp
sub
xor
xlat
fs
push
insb
mov
inc
push
pop
stc
sub
lods
mov
xchg
and
push
add
sbb
push
outsl
inc
imul
jle
mov
push
pushf
or
sbb
gs
inc
fs
lea
mov
faddl
js
jo
enter
js
pop
sarb
in
cwtl
fcoms
push
mov
jne
les
cmp
mov
mov
dec
loop
sbb
inc
pop
or
out
push
popf
or
fcom
movsl
push
sub
jnp
or
add
sub
push
je
int
mov
cmpsb
imul
push
iret
test
pop
test
adc
shl
and
sub
sbb
xchg
sarl
sbb
xchg
divl
movsb
cltd
adc
rolb
mov
jae
test
lods
notb
je
add
jbe
fwait
cmp
push
sbb
lods
xlat
cmpsb
or
mov
femms
idivb
cmp
and
xor
sbbb
out
out
bound
outsl
xchg
push
xchg
addl
inc
mov
fisubrs
or
add
bnd
inc
xor
sub
in
out
mov
aas
cmp
and
adc
ret
cmc
adc
lcall
sub
xlat
or
jb
xor
and
fisubl
adc
sub
test
out
add
test
gs
adc
mov
adc
iret
add
mov
hlt
mov
daa
addb
xchg
pushf
cld
fidivl
leave
push
inc
sub
xor
out
stc
pop
xor
sbb
stos
arpl
adc
sub
imul
adc
jmp
scas
and
stos
inc
test
xor
dec
in
adc
or
enter
mov
sarl
adc
mov
jnp
mov
xchg
and
loopne
in
dec
xor
adc
push
test
push
pop
ljmp
jno
cmp
mov
js
or
addr16
inc
push
cmp
stos
rcrb
mov
int3
push
mov
dec
dec
inc
push
movb
mov
sbb
insb
fs
adc
test
sbb
in
lea
xchg
sub
and
jg
lret
in
sub
pop
push
in
mov
ret
sbb
hlt
lcall
repnz
sub
xchg
push
in
add
js
lret
push
cmpsb
add
pop
cmpsl
dec
inc
inc
mov
popa
push
loopne
mov
jl
into
inc
dec
push
pusha
and
push
movsb
js
push
lods
add
or
push
cmp
and
xor
loope
add
les
add
push
testl
adc
shlb
jo
mov
es
fisttpl
pop
add
js
mov
dec
and
dec
test
inc
fildl
adc
jno
mov
stos
push
jmp
push
xor
cmp
sbb
push
push
push
insb
movsl
lahf
ret
push
sub
insb
pop
and
loopne
mov
add
adc
fdivrp
pop
les
add
or
add
fisttps
daa
sbbb
mov
and
xchg
std
bound
xor
push
pop
mov
mov
imul
xchg
push
or
xchg
dec
mov
andl
bound
callw
pushf
je
imul
test
lea
filds
nop
xchg
lcall
or
js
mov
mov
imul
add
xor
pop
std
std
pop
xchg
out
repz
lock
cld
sahf
int
add
inc
push
pop
adc
faddl
in
mov
push
decb
push
xchg
popa
lret
xor
inc
push
pop
push
incb
fsts
insb
xchg
out
cltd
pop
push
add
je
pusha
pop
xchg
inc
jo
or
mov
mov
jl
push
mov
mov
nop
testl
jmp
inc
sbb
lret
push
cmpl
rclb
stc
and
and
cmp
pop
push
lcall
jmp
mov
or
jl
repnz
push
fcos
dec
dec
mov
pop
in
dec
xchg
push
or
cmp
sub
dec
sbb
movsb
lret
ret
nop
xlat
sbb
xor
out
sbb
movsl
push
mov
jecxz
xor
add
shrb
sub
into
popa
pop
ss
pop
loopne
insl
test
push
jne
int
dec
insl
popf
add
mov
pop
mov
pop
xchg
shlb
int3
mov
jbe
adcl
gs
mov
xchg
in
push
nop
imul
mov
lcall
pop
mov
jge
dec
andl
loope
push
lahf
sbb
mov
mov
inc
jmp
add
or
and
mov
popf
ret
ret
cli
test
push
push
gs
mov
pop
jb
lret
mov
jl
jle
call
subb
adc
gs
leave
and
mov
mov
cmp
test
imul
inc
pop
mov
je
add
lret
arpl
add
mov
dec
or
cmp
sub
sub
cmp
pop
jne
lret
es
jbe
pushf
or
sbb
dec
mov
daa
or
dec
inc
lahf
aam
and
add
sub
into
jmp
lock
and
loopne
cmpsb
popf
xchg
add
and
nop
bnd
mov
push
cmp
and
pop
insl
and
xchg
aaa
cmp
mov
and
mov
nop
adc
sub
cmp
adc
mov
insl
pop
mov
dec
mov
adc
inc
inc
pop
mov
int3
or
test
stos
inc
shrb
ret
xchg
fimuls
sbbl
sbb
push
inc
ret
add
loopne
add
and
adc
and
pop
mov
stc
pop
xchg
ret
das
cmc
inc
sbb
ret
mov
pushf
cmp
aaa
call
fmuls
rcl
xor
dec
adc
jae
mov
js
xchg
push
std
mov
and
sarl
les
lret
adc
mov
mov
je
jne
les
xchg
call
jge
popa
fmull
push
and
orl
fwait
pop
adc
jmp
sub
jne
cmp
daa
inc
movsb
loope
int
iret
pop
aad
mov
xchg
adc
or
test
push
add
pop
pop
lock
push
stc
std
pusha
mov
in
fmull
and
test
mov
and
or
test
out
dec
leave
push
or
and
push
push
xor
gs
aam
sub
cmc
ja
push
mov
or
mov
jnp
sbb
pop
dec
jne
cmp
aas
rclb
js
fstpl
lea
pop
adc
js
cmp
xchg
and
or
or
or
into
dec
js
lods
lods
inc
mov
add
adc
cmp
ds
inc
test
jl
add
test
mov
push
stc
in
pushf
iret
lret
lea
orb
dec
add
les
xor
adc
mov
daa
sbb
dec
emms
movswl
fadd
cmpsl
adc
jp
cltd
push
fwait
pop
xchg
movzbl
adc
pushl
aaa
pusha
inc
insl
imul
xor
dec
cmp
mov
adc
xchg
or
push
mov
xor
mov
mov
out
xor
or
cmc
pop
adc
add
cmp
cmp
xchg
roll
mov
xlat
sbb
pop
inc
push
repnz
notb
fwait
es
xor
jae
sub
mov
sbb
jns
xchg
out
cmpsl
je
and
push
out
frstor
pop
push
xor
ja
jno
lods
or
push
cmp
nop
test
add
or
jb
pcmpeqw
mov
mov
push
arpl
mov
inc
sbb
jge
call
inc
push
adc
xchg
or
lds
or
mov
jg
fmull
pop
and
fmuls
ds
pop
jmp
xchg
cmc
aas
andl
mov
popa
cmpsl
lods
data16
sbb
adc
adc
push
daa
push
cmpsl
inc
out
dec
mov
insb
pop
pop
popl
xchg
js
popa
andb
dec
xor
test
fldcw
shrb
cwtl
insb
lcall
test
xor
call
dec
mov
jb
cs
mov
imul
xor
movsl
imul
orb
popf
hlt
clc
inc
sar
in
call
adc
sbb
sbb
call
or
in
sbb
sub
scas
scas
xchg
pushl
mov
rcrb
xchg
cmp
popf
inc
push
or
lock
je
dec
mov
inc
mov
divl
push
xchg
pushl
js
jo
insb
sub
dec
jl
test
aaa
iret
jge
sub
and
out
cs
xor
xor
imul
in
repz
pop
dec
clc
add
imul
cmpsb
fmuls
push
push
sarb
je
or
xlat
sbb
mov
stos
pop
movlps
sbb
inc
and
mov
xor
sub
lret
jmp
adc
fnstsw
or
les
push
stc
cmp
inc
inc
outsb
dec
or
mov
js
mov
cld
cmp
cmp
sbb
sub
hlt
into
push
add
push
sbbb
test
sbb
push
nop
add
and
out
sbb
xor
or
scas
sub
je
and
dec
outsl
lds
inc
cs
jne
jmp
into
scas
std
sbb
aaa
jmp
jge
xor
into
cmp
fucomip
decl
pop
insb
int
sbb
pop
pop
sub
outsb
test
add
add
ficomps
daa
scas
push
into
outsb
jne
data16
daa
scas
test
adc
push
pop
and
sbb
aam
mov
or
inc
xchg
jecxz
dec
nop
xor
in
mov
loop
sbb
je
lds
daa
cmp
add
or
or
push
popa
inc
cld
add
out
les
sbb
adc
fcomps
push
jg
flds
es
mov
sub
pop
fldt
xor
and
pop
enter
outsl
lock
daa
mov
out
xchg
xlat
pop
add
push
mov
dec
mov
or
mov
add
imul
cmp
ss
adc
push
inc
mov
ret
xor
sbb
cltd
push
xor
add
xor
shlb
in
inc
adc
in
in
sbb
jbe
pop
add
clc
lahf
xchg
push
add
xchg
popa
xor
jle
pop
les
cmp
nop
ret
cmpsl
push
push
dec
popa
add
xorb
sub
pop
pop
push
xchg
outsb
int
cld
push
xchg
xchg
add
insl
add
sub
ret
inc
lsl
dec
mov
push
test
sub
jne
add
mov
pop
jne
jo
push
out
daa
cmpsl
mov
xchg
cmpsb
push
rcrl
pop
jne
pop
or
fwait
mov
sbb
push
or
pushf
aas
test
add
xchg
js
adc
inc
mov
loope
sbb
lahf
jmp
xor
out
sbb
stos
sbb
mov
inc
lock
std
mov
fisttpll
cmp
jg
xchg
outsb
inc
pop
call
cmp
mov
and
add
cmp
jmp
jecxz
xor
pop
movsb
into
popl
jecxz
cmp
add
cld
add
jae
push
dec
sub
and
push
jl
jne
mov
hlt
add
ss
iret
cmp
ret
xchg
ret
xchg
sbb
add
xchg
imul
sbb
loopne
imul
jle
lea
ret
fs
add
imul
sahf
adc
jge
mov
jne
mov
push
or
pusha
add
and
shlb
inc
push
icebp
addr16
cli
aam
add
xchg
cwtl
cmp
jno
js
ss
inc
test
sti
mov
clc
mov
sub
leave
cli
push
imul
arpl
adc
dec
jle
pushf
test
sbb
dec
cwtl
arpl
and
cmp
sbb
and
pop
pop
cmpsb
mov
movsl
or
fcmovnbe
push
rolb
cmp
add
or
cmp
or
mov
cmp
je
sbb
fcomps
fldl
jmp
and
push
flds
sbb
xorl
inc
push
sbb
or
loope
lods
pop
xchg
das
repnz
pop
int3
cmp
or
dec
loop
cmp
rcr
mov
cmp
mov
daa
out
sbb
push
sbbb
mov
leave
je
inc
adc
mov
or
loope
xchg
cwtl
inc
mov
or
adc
adc
sub
sub
xchg
mov
stos
sahf
push
mov
mov
inc
lods
mov
lds
push
push
sbb
ret
pop
sbb
cmp
jl
or
dec
pop
inc
jno
jo
sub
xlat
sbb
dec
testb
push
clc
pop
mov
add
sbb
push
xchg
scas
popa
sub
sbb
add
mov
or
jbe
mov
pop
and
add
pushf
ss
clc
add
add
push
clc
sub
sub
sub
cmpsb
push
adc
cmpsl
fwait
aam
sub
sbb
in
cld
adc
add
jo
dec
or
ret
sub
jbe
sbb
add
stos
mov
sbb
pop
js
pop
rorb
es
or
push
pop
sub
mov
inc
sbb
int3
mov
mov
and
jge
lea
add
jns
xchg
add
jo
ja
out
or
nop
pop
cmp
add
mov
leave
andb
xor
les
ja
or
adc
pop
leave
or
insl
or
xorb
push
or
arpl
or
les
mov
sub
cmp
mov
hlt
lret
fsubs
enter
sbb
mov
mov
pop
add
mov
sbbb
ret
adcl
sbb
or
loopne,pt
xchg
daa
or
or
xlat
xchg
add
flds
xchg
xor
pop
adc
adc
push
or
test
and
fsubrl
push
xor
js
sbb
lea
sub
inc
adc
stc
sbb
xchg
test
sbb
call
orb
ss
inc
jae
aad
push
mov
and
sub
mov
and
push
and
mov
lock
cmp
repz
add
xchg
sbb
push
cld
and
es
outsb
jg
sub
push
or
and
in
mov
movsb
xor
sbb
and
int3
add
push
sbb
jo
imul
cwtl
adc
xlat
adc
pop
leave
adc
sub
or
insl
cmp
nop
testl
bound
push
ret
cmpsb
fs
test
sbb
in
and
adc
nop
and
out
add
cmpsb
inc
and
sub
adc
stc
les
leave
xor
jg
std
inc
and
sbb
mov
out
sarb
mov
lock
test
or
add
repnz
je
std
mov
add
cmp
inc
add
mov
push
icebp
in
mov
imul
dec
bound
xor
add
dec
aaa
lods
fdivrl
mov
mov
hlt
push
lahf
inc
int3
jo
jge
pop
or
add
xchg
test
cmp
xor
and
add
addb
sub
aaa
lahf
sub
sbb
jns
ret
jno
or
lea
movsb
jge
enter
dec
push
pop
inc
push
xchg
cs
sub
or
scas
add
nop
push
dec
pop
xchg
lcall
adcl
sub
or
xchg
xor
sbb
mov
xor
adc
rorl
xchg
inc
pusha
popf
pop
add
mov
je
push
cmp
pop
sahf
test
jne
fcoml
imul
adc
inc
adc
jne
shrl
into
neg
inc
push
or
and
jne
ljmp
enter
rorb
and
add
adc
out
data16
push
lret
xchg
clc
or
add
and
jo
push
cmp
sbb
push
jo
inc
inc
xor
dec
and
dec
dec
inc
sbb
dec
stos
flds
nop
cmpsl
sar
incl
leave
add
adc
sti
add
push
mov
loope
jecxz
add
vandnpd
mov
cmp
adc
test
rol
xor
in
pushf
stos
xor
sbb
and
push
push
in
rcll
jne
or
jle
push
test
sbb
adc
sbb
push
mov
adc
clc
xor
mov
shr
sbb
test
gs
mov
adc
jno
add
sub
dec
mov
ret
jns
popf
push
mov
in
aas
add
aam
adc
adc
dec
aas
push
jmp
xor
or
xchg
test
shll
or
push
pop
or
pop
adc
mov
or
cld
and
push
cmp
mov
adc
dec
push
xorl
leave
push
sbb
mov
jge
or
cmpsb
outsb
clc
jge
add
cld
filds
mov
inc
push
xchg
mov
jnp
popa
cmp
test
jae
inc
push
cmpsl
pusha
xor
mov
pushf
inc
push
test
or
mov
repnz
ss
and
or
pop
leave
push
loopne
repz
mov
cld
pop
lcall
dec
add
jmp
cmpps
xchg
xlat
mov
pop
cmp
inc
fiadds
jno
xchg
je
inc
mov
xchg
push
xor
call
add
nop
int3
int3
add
jge
dec
pop
or
int
sti
or
jne
or
lea
aas
mov
insb
jne
mov
cmp
push
adc
cli
aad
mov
test
and
pop
lea
mov
inc
aam
xor
cmc
xchg
test
loopne
je
xor
add
aam
add
fmul
ror
adc
cwtl
or
add
add
add
test
in
and
or
pop
cmp
fidivrl
daa
mov
mov
sbb
cmp
jne
or
adc
arpl
daa
sbb
insl
gs
mov
adc
xor
mov
rcrl
sub
inc
and
jnp
xchg
inc
pushf
sbb
pop
jo
cmc
or
aas
sbb
into
fidivrl
dec
add
lea
sub
jb
sarb
xchg
out
fmul
in
cltd
mov
mov
in
inc
xorb
sbb
out
push
roll
fdivrl
mov
inc
lock
or
mov
mov
mov
jo
mov
mov
shrl
jge
push
jo
cmp
jne
adc
adc
push
filds
adc
dec
sbb
push
pushf
rcl
mov
fisttpll
cmp
adc
orb
or
or
adc
test
push
jl
aas
popf
adc
mov
mov
pop
xor
mov
in
sub
inc
mov
lcall
insb
gs
xor
fiadds
iret
inc
inc
and
jb
and
adc
inc
add
mov
sbb
shlb
inc
hlt
mov
sbb
inc
sub
rol
mov
lcall
mov
in
inc
adc
gs
dec
jne
arpl
je
jge
or
mov
jmp
mov
test
stos
int
pusha
xor
dec
mov
sbb
inc
subb
and
jnp
pop
mov
addr16
fdivl
in
jb
jns
orb
in
nop
fwait
cld
enter
int3
add
or
fsubr
in
sbb
in
clc
lcall
cld
in
dec
push
sbb
in
mov
xor
inc
fadds
xchg
cld
add
add
mov
mov
int
add
and
shrb
cmp
push
cmp
xchg
xchg
xchg
xchg
dec
dec
sub
call
test
push
and
clc
add
test
inc
sub
or
imul
test
mov
jmp
or
dec
ss
or
or
xchg
icebp
das
add
movsb
push
jb
out
sbb
mov
adc
push
mov
push
or
ret
test
mov
sarb
hlt
je
xchg
scas
mov
mov
adc
leave
mov
fisubl
lret
movsl
mov
adc
fidivrl
lock
test
test
jne
pop
inc
xor
push
inc
dec
je,pn
mov
cli
inc
mov
sbb
movsb
mov
xor
pop
addl
jbe
add
add
mov
inc
or
les
inc
shll
popf
or
jno
mov
push
inc
add
sub
hlt
sahf
xchg
movsb
jnp
push
cmp
roll
jl
jp
or
setne
push
push
jge
pop
lds
test
std
cwtl
clc
jne
or
mov
je
push
push
lods
mov
inc
cmpl
movsl
adc
push
mov
cmp
cmp
add
das
lea
jmp
jnp
jmp
mov
clc
push
dec
mov
sbb
test
mov
mov
clc
clc
push
jge
inc
clc
push
xchg
int3
sbb
imul
fsubrs
push
add
cmc
pushf
imul
icebp
inc
outsl
jle
adc
inc
loope
mov
push
pop
mov
gs
xchg
mov
in
inc
mov
adc
inc
mov
xor
xor
or
sbb
mov
incb
or
add
lret
cmp
call
idivl
jmp
cmp
shll
push
out
and
xchg
popa
lds
cs
mov
add
iret
jnp
jne
lret
add
scas
sub
sub
push
pop
and
adc
or
cmp
ret
cmp
rclb
pop
lcall
sub
out
jp
addb
test
or
fs
xchg
adc
ret
jge
adcb
fdivrl
push
and
movsb
lret
cs
inc
aam
sub
inc
mov
pop
pop
push
ret
cld
adc
push
arpl
push
nop
sbb
dec
push
enter
jae
sbb
fdivrs
adc
inc
sbb
adc
mov
sub
mov
das
xor
add
add
inc
notb
and
or
add
or
xor
rcll
sbb
sbb
sub
dec
and
imull
adc
loopne
cwtl
popa
lea
mov
lahf
push
mov
push
clc
pop
or
fldl
insl
push
test
int
ss
pop
lods
inc
mov
inc
mov
xchg
fdivr
in
mov
sbb
mov
sub
stc
sub
mov
roll
stc
add
mov
inc
rorb
outsl
cmp
jg
mov
add
fisttpl
fidivs
sbb
bnd
sub
cmp
add
and
leave
push
jae
adc
push
mov
shll
push
lods
loop
mov
clc
into
inc
aaa
lods
xchg
stos
jb
rcll
xor
rorl
sti
mov
xor
into
or
inc
adc
outsl
or
xor
mov
xchg
mov
in
lods
adc
dec
adc
adc
xor
imul
pop
or
or
idiv
lea
js
cmp
cmp
xchg
dec
imul
or
mov
lret
mov
js
inc
mov
push
mov
test
sub
sbb
sbb
push
add
inc
inc
test
insl
mov
add
nop
outsb
dec
pop
xor
in
insb
loop
pushf
inc
pop
inc
push
mov
pop
push
xlat
imul
jb
hlt
sub
outsl
mov
push
ljmp
and
clc
test
adc
push
in
jne
sub
in
dec
cmp
jp
xchg
fmuls
rol
adc
movsl
cmp
add
cmp
sbb
mov
fs
loope
sbb
cmp
push
xchg
pop
xchg
jmp
xor
test
sbb
lret
stos
ss
mov
sbb
mov
mov
inc
inc
inc
inc
cmp
jmp
xchg
test
fs
push
add
cmp
add
jo
push
adc
lahf
mov
dec
cmp
test
xor
or
adc
push
mov
dec
and
inc
adc
mov
jb
loope
stos
fwait
jo
fdivs
cmpsb
ficomps
sahf
ljmp
inc
xlat
movsl
test
andb
sar
cmp
mov
sub
sub
in
adc
mov
fdivs
lods
push
sbb
nop
sbb
pop
xchg
add
adc
adc
cmp
outsl
and
or
dec
add
es
or
les
frstor
push
add
sahf
push
sbb
test
loopne
push
push
adc
add
sbb
mov
pop
rolb
aam
push
fs
stos
loopne
ret
or
pop
sbb
js
jno
daa
lods
aad
push
and
lret
lret
std
into
sti
fldt
push
or
adc
das
aaa
jmp
imul
add
push
inc
xchg
fbld
sub
inc
roll
jne
push
jbe
ja
pop
adc
push
test
enter
mov
jp
or
decl
or
inc
inc
inc
cmp
cmp
mov
movsl
and
mov
inc
lods
inc
inc
xor
clc
mov
es
jne
cwtl
cmp
out
lea
jno
or
lock
sbb
sbbb
xor
add
or
mov
mov
ret
rol
jne
cmp
dec
pop
inc
and
mov
cmc
xchg
push
xor
in
xor
dec
rcl
fsubr
cmp
addr16
jbe
inc
sub
pop
adc
and
imul
imul
repz
add
adc
jne
and
xor
mov
clc
jb
add
xor
and
xor
fwait
test
or
mov
arpl
dec
sbb
aas
inc
sub
sub
add
cmp
or
sahf
cli
rolb
mov
and
jl
xchg
rcll
mov
ret
mov
sub
push
xchg
jbe
dec
xchg
adc
mov
push
jmp
or
add
mov
mov
pop
push
mov
nop
insl
rolb
int
dec
jns
xor
jbe
pop
arpl
sbb
add
lods
aad
add
sbb
in
or
faddl
enter
shlb
and
jp
loope
test
insl
adc
adc
pop
push
clc
add
inc
jb
mov
add
jb
data16
hlt
test
push
jae
xchg
jmp
and
jbe
dec
add
lock
lds
xchg
xchg
jnp
push
rolb
movsl
jle
mov
lock
mov
inc
rolb
orl
ret
lods
pop
inc
lods
pushf
sahf
lea
adc
or
add
sub
fstpt
jle
push
and
push
push
inc
mov
add
addr16
pop
js
push
gs
and
mov
push
and
pusha
clc
js
adcl
movsb
subb
test
add
pop
push
add
pop
gs
scas
pop
decl
mov
movsl
mov
mov
ret
fs
imul
xor
es
lret
cmp
in
sub
imul
in
fistpll
dec
jg
push
mov
push
outsl
rcrb
jb
dec
sub
add
xchg
jbe
fmull
dec
push
sbb
sub
scas
xor
rcr
pushf
push
fdivl
out
in
lods
inc
cmp
inc
nop
push
test
dec
shl
pop
mov
sbb
inc
mov
or
dec
and
push
dec
lods
sbb
inc
jno
sub
ret
sbb
pop
xor
lock
push
adc
and
push
xchg
sub
test
mov
add
popa
add
fisttps
jnp
mov
cwtl
adc
popa
shll
andl
pop
cmpb
call
sbb
and
pusha
pop
xor
sbb
stos
or
inc
and
jo
mov
test
jge
inc
lods
popa
pop
sbb
add
jge
adc
and
aad
in
cld
or
test
mov
jnp
sbb
or
fmull
in
andl
jp
rorb
inc
inc
outsl
inc
in
sub
sbb
nop
push
addb
add
in
jecxz
lock
fwait
popa
jns
fcompl
jo
jle
imul
add
lea
rcrl
aam
push
dec
arpl
mov
pop
xor
out
xchg
add
popa
pop
xorl
rorl
adc
adcb
fnstenv
rolb
inc
roll
mov
imul
lock
mov
push
xor
jp
push
cmc
mov
push
movb
mov
cmp
xor
scas
and
fisttpl
pmulhuw
jne
adc
popa
lea
js
lea
and
pop
sbb
xchg
sub
aas
push
fidivrs
das
stos
add
int
loop
jne
xor
cs
je
or
outsl
mov
rcl
or
jmp
jb
pop
cmp
mov
jmp
mov
inc
outsl
sub
nop
sbb
mov
cwtl
dec
cmp
iret
in
pop
push
sub
push
in
les
sbb
andl
jp
jbe
cmp
loopne
sbb
sub
dec
and
cmp
pop
ret
pop
xchg
xchg
xchg
sub
mov
push
and
add
mov
adc
je
xor
jnp
cltd
jge
js
and
loop
popa
jecxz
push
sub
sarb
lret
lea
push
add
xchg
addr16
loopne
insl
mov
bound
push
sub
in
scas
pop
lret
ljmp
add
xor
dec
je
or
je
out
arpl
cli
adc
je
pop
pop
movsb
out
je
fwait
sahf
ja
inc
mov
xlat
and
insl
loopne
rol
xchg
push
mov
sub
je
cmp
mov
adc
jne
jnp
enter
outsl
xor
adc
add
xor
jle
sub
cmp
sub
add
push
cmp
sub
lcall
aas
fisubrs
jmp
decl
imul
imul
and
pusha
inc
ret
adc
jne
xchg
sarb
in
adc
out
adc
or
add
and
fcoms
rorb
jns
or
mov
es
push
lea
inc
jl
jge
in
mov
sub
or
xorl
movsb
shlb
movsb
jo
pusha
popf
popf
xlat
inc
inc
sub
movsl
inc
pop
fidivs
popf
push
and
or
sbb
add
or
xor
pop
addb
aaa
add
xor
pusha
ds
mov
jo
scas
fadds
jmp
fstpt
xchg
sub
out
movsb
and
xchg
lret
daa
cmp
and
or
out
inc
clc
add
add
lock
xchg
int
cmpb
test
pushf
dec
scas
es
sbb
inc
inc
mov
push
sub
dec
or
lods
inc
stos
mov
imul
sbb
pop
dec
sub
loope
sbb
scas
int
subl
lret
mov
add
xchg
out
ret
outsl
sahf
lods
popl
test
lea
adc
jno
jl
stos
andl
sub
pop
xor
and
mov
sub
sub
jmp
mov
div
sbb
pop
xor
jne
fs
mov
pop
sbb
xor
nop
xlat
ja
inc
jb
mov
das
push
hlt
dec
movsl
shlb
adc
popa
inc
loop
in
mov
dec
adc
add
sbb
loop,pn
mov
or
orps
add
adc
pop
daa
inc
cmp
jmp
jp
mov
imul
xorb
sbb
sbb
fsubs
cmp
push
and
cs
imul
xchg
and
mov
inc
cmp
in
inc
sbb
fbld
popf
daa
dec
pop
dec
lea
cmp
sbb
adcl
in
jmp
sub
leave
adc
test
xchg
mov
cmp
fldenv
cwtl
xor
daa
js
adc
cmp
test
addr16
sub
or
mov
out
inc
inc
pusha
dec
sbbb
push
pop
lock
jg
rcrl
pop
out
pop
shrl
pusha
xchg
pop
jbe
dec
or
inc
add
inc
sbb
hlt
push
int3
push
or
inc
xor
pop
icebp
jne
push
xchg
jae
cmpsb
pusha
jns
roll
dec
or
ljmp
inc
add
and
jno
jb
scas
mov
loope
cmp
xlat
sub
inc
jge
in
push
pusha
leave
xor
adc
in
sbb
sbb
push
mov
sbb
jp
std
pop
add
cltd
mov
mov
je
pop
cwtl
adc
lea
xor
mov
jmp
xlat
push
mov
inc
add
js
adcb
mov
cmp
xor
xchg
sbb
sbb
sbb
dec
imul
dec
and
je
inc
inc
or
lock
jl
mov
clc
lock
test
push
jbe
jnp
add
imul
add
or
add
mov
icebp
push
inc
inc
in
shll
xor
jne
nop
or
xchg
pop
push
mov
cmp
add
pop
bound
mov
sahf
sub
jo
cmc
movsb
or
mov
sbb
cltd
jbe
xchg
add
push
movsl
add
pop
mov
mov
and
leave
push
sbb
mov
adc
xchg
xchg
mov
xchg
push
adc
insl
sbb
and
inc
pusha
dec
jmp
mov
xchg
mov
loopne
aam
sti
out
inc
ficompl
repz
rclb
shlb
mov
adc
cld
push
in
stos
push
jno
cld
fmuls
inc
sbb
or
sbb
push
outsb
lods
in
pop
mov
popf
add
inc
mov
xchg
dec
mov
sbb
and
mov
mov
or
lcall
jle
xor
sbbl
addr16
jle
andl
pushf
xchg
inc
add
adc
push
xchg
adc
push
inc
and
movsl
and
xchg
inc
daa
adc
mov
and
mov
aaa
lret
lds
test
adc
subl
xchg
mov
dec
adc
imul
clc
jne
mov
mov
xchg
push
sbb
arpl
inc
fsubrs
sbb
icebp
pop
push
adc
xor
mov
cld
pop
adc
xchg
pop
shlb
jmp
pop
sarb
mov
pop
lea
cmp
ja
xor
push
add
lock
lock
push
orb
sbb
add
add
shrb
or
adc
jl
xchg
push
add
imul
inc
push
jbe
jb
js
cmp
call
mov
sub
in
xchg
mov
call
mov
mov
negb
add
fdivrs
fnstsw
pop
jmp
and
adc
insb
add
out
dec
jge
push
sbb
xor
sbb
mov
dec
arpl
jb
add
popa
or
add
cltd
divb
jb
inc
aaa
sarb
pop
jmp
std
lea
or
add
inc
dec
sbb
adc
and
out
js
clc
xlat
mov
out
lea
mov
clc
pop
jne
lea
inc
in
push
sbbb
mov
aaa
sbb
sub
fistps
inc
movzbl
pop
xchg
mov
pushl
push
push
fwait
xchg
mov
push
cwtl
mov
sbb
mov
jae
movsl
gs
sbb
orb
loopne
xor
iret
cmpsl
lea
iret
ret
movl
andl
rcl
mov
pop
inc
cmp
add
xlat
adc
inc
inc
push
push
inc
push
pop
ret
ret
adc
dec
adc
cmp
or
rcr
test
mov
sbb
mov
outsl
sbb
lock
and
adc
movsl
xor
mov
fsubrl
inc
mov
rdmsr
or
daa
xor
pop
loopne
pop
or
jbe
and
inc
mov
xor
sbb
ss
jl
pop
sbb
sbb
cmp
or
fsubrs
xor
mov
mov
repz
ret
add
cmp
jg
push
std
sub
pop
dec
mov
int
sbb
dec
dec
push
cli
adc
push
repz
and
repnz
lock
add
js
sub
pop
push
inc
dec
or
jmp
add
dec
test
and
imul
xchg
sbb
rolb
neg
cmp
pop
inc
sub
push
inc
add
inc
mov
adc
push
aaa
es
jno
cmc
sbb
sub
lds
xchg
cltd
push
push
push
mov
inc
or
int3
mov
into
inc
jno
or
loopne
outsl
das
push
mov
aas
scas
push
push
pop
fdivr
jle
dec
cmp
mov
push
pop
xorb
push
arpl
fisttpll
mov
loope
or
and
lahf
enter
jns
shlb
xor
loope
addb
xchg
pop
cltd
sbb
xchg
mov
xlat
and
sbb
jno
aad
lock
adcb
ljmp
jne
push
xchg
enterw
add
es
clc
pop
pop
pop
scas
popa
sbb
push
rcr
imul
outsb
mov
inc
das
sbb
or
sbb
push
lea
inc
adc
out
add
loopne
cmp
add
out
push
sbb
add
xor
fildl
push
jle
fisubrl
push
mov
jge
add
and
imul
sbb
lock
adcb
jmp
int
mov
add
dec
andl
sub
iret
out
push
push
das
add
hlt
xchg
lea
fwait
add
cmp
mov
pop
aam
mov
mov
mov
pushl
sahf
jecxz
pop
mov
and
aam
cs
xor
or
push
bound
fwait
ja
mov
cs
rcr
add
je
cli
hlt
cmp
jb
clc
sub
out
sahf
push
add
sub
inc
cld
incb
push
adc
enter
ss
test
sub
xchg
dec
mov
rorl
in
sub
mov
or
mov
mov
or
stc
or
pop
add
ret
dec
roll
xchg
push
xor
mov
loopne
mov
adc
daa
sbb
in
stc
cmc
jno
xchg
xor
jb
fs
cmp
xchg
inc
cmp
add
push
or
adc
int
aaa
or
pop
sbb
xlat
mov
shlb
clc
sahf
pusha
adc
cmp
pusha
repnz
xchg
jp
lock
mov
sub
lock
mov
sti
pop
test
adc
pusha
lcall
aaa
pop
sbbl
roll
cs
xor
shlb
rolb
xchg
adcb
add
js
mov
push
dec
pop
dec
and
nop
aaa
and
lock
push
lea
xor
mov
and
lock
jne
cs
stos
lds
test
dec
arpl
popf
or
jae
fdivs
rorb
mov
loopne
inc
loop
dec
inc
lret
popl
mov
cwtl
and
inc
testl
xchg
xlat
cmp
sarb
xchg
push
les
pop
cmp
lahf
push
cli
test
mov
push
lea
pop
xchg
movsl
mov
fisttpl
push
dec
lret
sub
lea
loopne
or
je
fldlg2
movsb
jo
les
fsubrs
and
push
xchg
sub
push
adc
mov
xchg
loopne
cmp
cmp
push
jnp
push
xor
or
push
dec
subl
mov
push
push
push
fcmovbe
int
lahf
dec
mov
push
nop
sub
and
push
adc
fiadds
xchg
aaa
inc
lea
and
cmp
scas
dec
pop
add
inc
xor
sub
or
mov
mov
mov
adc
xchg
aam
fldt
aas
aam
leave
push
test
push
jl
xor
and
dec
pop
test
pop
aam
cmp
insb
inc
push
xchg
and
xor
adc
mov
mov
bound
test
adc
insl
or
nop
pop
and
pop
daa
add
test
adc
jno
aad
xchg
mov
add
pop
daa
dec
mov
dec
push
cmpl
adc
data16
xor
mov
and
das
mov
cld
pop
js
sarb
cmp
push
mov
sub
out
mov
mov
and
adc
jne
push
subb
adc
lcall
ss
mov
test
inc
push
gs
sti
mov
and
sub
adc
daa
mov
aaa
mov
pop
clc
pop
popa
imul
add
push
addr16
repnz
shll
bound
enter
cmp
in
cltd
fsts
xchg
mov
outsb
or
ret
jb
jnp
push
fs
or
sub
imul
mov
or
cmp
and
jb
push
sbb
adc
pop
push
jno
push
popa
or
and
dec
test
sarl
push
push
adc
adc
sub
aaa
imul
rorl
sti
lea
dec
mov
or
mov
adc
pusha
sbb
adc
inc
in
outsl
xor
cmp
push
add
push
sti
call
mov
shrl
push
and
shrl
or
and
or
jo
push
or
push
les
adc
adc
inc
shlb
mov
andb
js
sbb
jb
loopne
in
push
mov
or
nop
push
push
and
scas
lds
mov
arpl
outsl
jno
xor
inc
xchg
ljmp
pop
push
std
adc
imul
mov
and
imul
xchg
and
test
and
imul
imul
cmp
or
aad
adcl
and
ret
adc
push
add
pusha
inc
jp
xchg
sbb
pop
push
icebp
jae
sbb
incb
adc
push
pop
push
mov
mov
nop
je
or
inc
cmp
or
je
out
inc
or
jb
xor
rolb
jge
dec
movsl
mov
rorb
notb
nop
xchg
jbe
push
subl
hlt
sarb
or
inc
dec
loopne
jmp
push
call
or
pop
mov
cli
mov
xor
imul
mov
mov
mov
fildl
les
xorb
lods
add
jge
lcall
add
test
subl
jg
push
sbb
stos
cmpb
popf
jmp
icebp
adc
jae
jecxz
movl
or
jl
adc
mov
xchg
out
or
lock
ret
test
xchg
xchg
push
cmc
pop
imul
xor
jns
push
cltd
ds
or
inc
out
dec
mov
dec
dec
xchg
jmp
popa
dec
adc
mov
fwait
push
xor
dec
dec
pop
loope
add
inc
rorb
xor
sub
add
sbb
dec
sbb
roll
add
add
fnstenv
outsb
sbb
add
sbb
inc
aad
and
out
or
enter
inc
test
dec
inc
inc
add
add
push
idivb
jg
push
pop
pop
mov
sub
ret
add
pop
sarb
add
lods
arpl
sti
pusha
push
dec
lds
push
std
mov
imul
push
push
inc
or
out
fstps
pushf
jmp
mov
inc
popa
push
push
sub
jne
lea
mov
push
add
jo
push
ja
inc
or
push
push
inc
shr
inc
mov
pop
fmuls
or
int
or
mov
arpl
dec
adc
outsl
xchg
mov
ret
test
adcl
adc
or
shrl
xchg
inc
add
mov
in
and
mov
in
sub
jno
mov
jo
inc
cs
dec
mov
rolb
gs
or
jnp
jge
push
sbb
push
jmp
adc
add
pop
sbb
iret
add
nop
out
popf
dec
push
sbb
xor
xor
ljmp
push
push
cmp
lea
cmpsl
shll
pop
jle
add
jo
or
subb
push
xor
jmp
orl
xchg
sub
jne
or
cmp
mov
xchg
data16
inc
repnz
pop
push
jb
push
inc
mulb
imul
or
adc
push
xor
cltd
es
jbe
or
push
sub
cmpsb
mov
out
or
mov
cmp
inc
pop
push
je
cltd
out
dec
ljmp
insb
jnp
push
xor
or
icebp
sub
sbb
xchg
mov
sub
pop
add
sbb
jb
pop
mov
pop
add
daa
pop
cmp
adc
lock
call
xor
push
je
test
push
jmp
or
cmp
cltd
fsubl
mov
add
ret
push
xorb
push
add
call
loop
lea
cmp
jge
js
push
call
cmpsl
sbb
sbb
jmp
in
ds
pop
cmp
pop
push
mov
ja
jp
inc
fcmovnu
sbb
daa
push
pop
mov
inc
adc
movsb
mov
js
daa
and
lahf
stc
push
mov
mov
mov
icebp
push
mov
push
inc
inc
inc
pop
jp
cmp
sbb
sub
xor
test
mov
jns
sbb
out
out
ret
insb
push
xor
or
mov
je
xor
js
add
xor
jl
xchg
push
xor
arpl
imul
cwtl
fcmovu
fstp
lcall
pop
jle
imul
sbb
jl
mov
and
inc
dec
aaa
sbb
xor
fucom
sub
cmp
cmp
add
ljmp
orb
lds
icebp
cmp
push
or
mov
push
mov
cmp
icebp
pop
movsl
dec
loope
cltd
mov
imul
lcall
icebp
mov
cli
testl
jle
out
xchg
add
notl
sbb
add
fdivs
in
push
adcl
jl
pop
insl
loope
adc
xor
xor
cwtl
xor
sbb
pusha
lods
stos
aam
xor
in
rolb
add
cli
or
sbbb
bound
jp
mov
add
filds
fcoml
test
imul
push
adc
stc
xchg
mov
imul
or
ja
jbe,pt
lret
push
sbb
sub
jbe
inc
pop
cld
inc
and
pusha
push
ret
jne
adc
pop
add
dec
stc
push
daa
andl
pop
test
pop
jl
and
push
mov
dec
cmp
lahf
fsubl
inc
insl
or
add
iret
hlt
or
subb
lods
adc
or
cmp
xorb
flds
mov
aaa
out
sbb
sub
clc
mov
sub
sub
filds
jmp
cmpb
or
push
sbb
or
jecxz
lods
and
jp
pop
push
loope
ret
scas
adc
hlt
push
xor
adc
movsl
mov
in
idivl
shlb
add
out
pop
lea
push
mov
lods
jmp
lahf
mov
dec
jne
xchg
and
mov
fists
and
pop
push
xor
or
mov
fldenv
pusha
or
cmp
xor
jecxz
fildl
or
sub
movl
sub
cwtl
jno
shr
imul
adc
push
xlat
ds
test
shl
stos
xor
out
mov
fdivrl
and
mov
jp
jno
jb
jg
ret
cmp
jge
mov
mov
adc
mov
sarb
pushw
inc
sub
cmp
mov
loop
ret
push
push
add
cmp
fcoml
push
cmpsl
sarb
jno
insb
push
pop
arpl
jle
inc
dec
and
xchg
jbe
rol
jo
jb
test
incl
add
add
mov
dec
adc
stc
add
push
mov
xor
ud2
cs
mov
xchg
arpl
mov
push
or
inc
adc
xlat
and
in
add
mov
mov
jmp
pop
pop
mov
mov
inc
cmp
or
imul
hlt
and
mov
inc
clc
scas
pop
push
cmpsb
imul
sub
out
fwait
xor
dec
cmp
pop
inc
inc
dec
data16
outsl
sbb
jae
mov
mov
jl
lds
sbb
pop
xor
jnp
push
add
movl
call
add
decb
aaa
sbb
dec
lret
test
mov
sub
pop
adc
sbb
insb
les
addl
or
movsb
add
sub
rcrb
insb
or
add
or
fidivl
adc
pop
adc
or
push
adc
and
add
mov
fsubl
sti
pop
ret
mov
xor
xchg
movsb
xor
inc
clc
inc
xchg
sbb
pusha
mov
out
adc
inc
int
adc
add
add
push
fisubrl
mov
dec
mov
imul
sbb
cmp
push
ss
fst
xchg
loope
mov
push
fisubrs
aas
movsl
sbb
lock
pop
subl
subl
test
inc
subb
sbb
in
cmpsb
jns
rcrl
movsl
pop
sbbb
mov
or
arpl
cli
repz
filds
cmpsl
or
sub
sub
clc
clc
or
cmp
or
or
mov
imul
insb
push
dec
adc
lods
in
int
adc
test
ret
andl
mov
pop
sub
and
bound
jge
mov
add
rcrb
jns
or
dec
mov
sbb
jb
jg
push
fs
sbb
popa
leave
pusha
mulb
sub
cmp
outsl
push
inc
pop
sub
scas
jl
test
sbb
xor
lock
fidivl
or
adc
cld
stos
inc
jmp
push
or
pop
push
shl
orb
insl
add
adcl
ret
gs
daa
add
push
inc
clc
push
xchg
sbb
and
enter
jne
inc
mov
adc
xorb
bound
dec
jg
nop
loopne
xor
dec
shll
sbb
jecxz
insb
lods
and
insb
sbb
enter
and
orl
pop
jmp
mov
aad
sbb
and
xabort
and
dec
in
inc
and
add
es
xchg
mov
and
insl
mov
xlat
cwtl
enter
shll
roll
inc
adc
sbb
inc
cld
add
dec
sub
push
or
adc
pushf
pop
sbb
push
add
enter
dec
std
adcb
cmp
adc
or
push
mov
inc
add
sub
and
xor
das
or
rclb
pop
inc
xor
jle
pop
adc
push
dec
or
cmp
xor
add
enter
insb
mov
outsb
xchg
enter
loopne
or
adc
pusha
push
push
jp
fisttpll
fistl
movsb
xor
push
jmp
or
js
in
cmp
loop
ss
bound
cmp
cmp
inc
inc
or
sub
test
mov
jg
cmc
shlb
adc
adc
sahf
add
inc
rolb
push
dec
jo
addr16
xor
pop
sub
shll
outsb
mov
jle
lods
subl
movsl
mov
push
sub
iret
add
pop
push
ret
cltd
push
sbb
add
addr16
pop
and
mov
inc
popa
insl
popa
mov
mov
push
push
arpl
cmp
shrb
mov
jo
xor
lods
popa
cltd
loope
sbb
imul
or
dec
cmp
sub
mov
fidivl
repnz
cmp
sbb
xchg
cmp
pop
cwtl
inc
dec
or
dec
jb
adc
sbb
or
orl
int3
pop
push
aaa
test
sbb
rolb
sbb
adc
cmp
rcrb
push
aas
mov
push
adc
ja
or
cwtl
into
mov
sbb
or
sub
insb
pop
mov
jns
pushf
add
bound
mov
adc
jmp
push
aaa
pop
mov
inc
in
sub
in
rcrb
jmp
inc
je
jae
add
add
rcll
movsl
cmpsb
dec
fwait
insl
mov
incb
pop
imul
mov
jmp
das
fiadds
dec
int3
add
insb
xchg
test
pop
ficomps
or
add
rolb
add
std
add
jg
divb
out
push
loope
push
pop
and
xor
xor
push
push
test
movsl
imul
xchg
jno
aas
dec
add
cld
imul
movsb
pop
sbb
arpl
leave
sub
push
ja
addb
int
test
dec
in
dec
sbb
and
lahf
or
outsb
ret
cmp
jle
inc
push
testb
pop
incb
push
mov
sub
movzbl
cmp
dec
imul
push
fsubl
push
push
cmp
andb
testb
inc
in
mov
add
mov
sub
xchg
push
and
cmpl
mov
push
jl
lea
and
into
incb
mov
sbb
mov
sbb
jmp
add
pop
insb
dec
xchg
add
or
xchg
mov
jns
pushf
push
xchg
adc
lods
cmp
cmp
push
cmp
roll
cmp
cmp
gs
or
xchg
inc
adc
inc
cmp
sbb
ljmp
pop
clc
flds
or
mov
dec
ret
dec
add
push
mov
adc
push
add
xchg
add
sub
dec
xor
or
mov
fistps
fsubrl
mov
mov
fs
jmp
push
call
inc
dec
and
cs
icebp
add
mov
cmp
mov
mov
fstpl
sarl
lahf
dec
fbld
and
fsts
imull
notb
adc
jae
jmp
jbe
lahf
or
shlb
pusha
push
sub
lea
add
jl
pop
je
inc
std
lock
cmp
add
sbb
es
sbb
add
or
repnz
mov
sbb
fdivr
roll
mov
jle
fcmovb
imul
and
ss
cwtl
enter
lock
pop
call
push
mov
arpl
adc
inc
adc
jle
orl
xchg
cmp
or
xchg
popf
dec
xor
fsts
mov
xor
sub
pushf
mov
inc
or
xchg
sub
or
push
inc
mov
mov
push
sub
test
push
scas
pop
and
test
push
cmpsl
lods
xchg
add
push
adc
lahf
xor
mov
mov
lods
mov
nop
daa
lock
xchg
iret
mov
push
pop
pop
data16
iret
rep
je
andb
dec
adc
inc
cmp
je
add
inc
mov
or
push
jb
pop
mov
push
add
push
mov
in
or
mov
outsl
push
enter
mov
mov
das
cs
cmp
mov
pop
or
jnp
cltd
pusha
dec
shrb
xor
add
cmp
xorl
in
mov
jne
aam
jo
stc
adc
je
or
inc
pop
mov
bound
or
xchg
ss
push
add
mov
mov
sbb
pop
je
adcb
fwait
rorl
sar
sete
push
sub
and
dec
push
cmp
inc
mov
cmp
jne
push
cmp
in
xor
xchg
sub
scas
mov
push
pop
and
sbb
out
add
xor
dec
jne
jl
cmp
fmuls
js
rorb
subb
jbe
popf
and
and
mov
adc
cwtl
cmp
fsubrl
sub
or
pusha
adc
call
jo
pop
outsb
adc
stc
xchg
mov
cwtl
inc
loope
sub
test
mov
inc
ss
out
xor
pop
movsl
stos
xor
aaa
push
jo
icebp
aas
pusha
jmp
mov
jge
das
pusha
cmp
jge
scas
loopne
ds
sbb
lret
dec
or
negl
fstps
inc
movsl
movsb
mov
sbb
inc
pop
mulb
add
pop
aad
and
test
aam
push
or
sbb
test
repnz
and
cmp
or
lret
push
add
and
cmp
add
mov
pop
data16
adc
and
call
add
push
add
adc
mov
inc
rcl
call
adc
adc
xchg
pop
test
or
sub
outsl
repnz
xchg
adc
inc
jnp
sub
xchg
fcmove
insl
push
add
pop
adc
fdivs
sbb
pop
popa
xor
ret
add
insb
adc
sbbl
add
xor
sub
ds
mov
outsl
xchg
jne
add
sahf
xor
mov
adcb
push
jecxz
lahf
in
and
adc
mov
jl
add
inc
mov
add
aas
push
xchg
sub
sbb
add
cmp
fdivr
mov
inc
cmp
mov
add
movb
add
loope
sbb
sbb
and
mov
cmp
jo
stc
push
cs
inc
mov
lret
out
jb
pop
or
mov
jge
movl
cmpsl
push
and
mov
or
insb
je
jl
ja
mov
xor
cmp
test
jb
inc
subb
push
sub
ss
lcall
mov
push
pusha
nop
xchg
xor
add
roll
fwait
adc
cwtl
jne
or
push
mov
xor
popf
add
add
push
add
clc
or
dec
shlb
lods
and
push
mov
out
mov
mov
jmp
or
test
inc
rorb
rorb
sub
sar
jmp
je
jp
mov
push
pop
je
std
or
loope
jo
or
movb
out
dec
jae
es
ret
pop
pop
xor
cmp
cmp
push
hlt
mov
test
imul
mov
add
jmp
pop
jmp
mov
test
inc
mov
cmp
mov
inc
mov
incl
push
or
sbb
mov
pop
sub
arpl
and
inc
sbb
sub
test
call
inc
ret
iret
lds
lcall
pop
inc
mov
sub
push
xor
xlat
sbb
fldenv
pushf
mov
ret
addr16
jb
es
adc
jmp
cmp
pop
insb
inc
mov
lret
pop
adc
mov
mov
test
divb
cwtl
movsl
mov
or
push
je
jp
lea
and
adc
rolb
jnp
cmp
jmp
testb
cli
ljmp
hlt
pop
mov
mov
test
out
inc
sub
push
jmp
xor
jb
les
mov
mov
inc
xor
lock
gs
cmp
dec
adc
push
pop
pop
mov
mov
fcomip
and
sub
mov
or
adc
adc
jl
adc
mov
mov
jne
adc
or
inc
inc
jle
loope
fcomip
mov
or
jb
dec
sbb
xchg
fwait
push
push
jl
xor
push
push
nop
pusha
sub
add
bound
push
dec
mov
ds
fsubr
add
sahf
mov
add
sbb
test
test
sbb
sbb
or
sub
jle
sbb
sub
push
sbb
ret
in
incb
mov
in
add
incb
cmp
add
pusha
jmp
mov
sub
or
inc
faddl
popf
add
outsl
mov
push
cmp
pop
lea
xchg
cmp
or
pop
xchg
lods
dec
jge
iret
mov
sub
jmp
int
push
mov
and
dec
push
add
or
push
mov
cltd
inc
mov
outsl
je
mov
cmpb
add
insl
mov
loope
js
fs
add
adc
cmp
cmp
mov
imul
jae
sti
mov
pop
loop
xchg
dec
test
or
xchg
movsl
xchg
mov
decb
pop
mov
inc
je
loopne
ds
jb
adc
mov
lahf
sbb
and
jge
addr16
push
cmp
das
dec
jmp
add
lods
push
bound
aaa
and
fldenv
or
xor
adc
inc
orl
lods
adc
sbb
dec
adc
negl
arpl
pop
push
and
push
jle
inc
inc
push
push
and
jb
stc
sbb
or
jo
mov
dec
mov
fwait
lret
add
xor
fcompl
adc
or
push
test
fimull
dec
repz
inc
adc
xchg
mov
jno
jne
sub
aaa
loope
mov
and
mov
subl
inc
out
mov
insb
loop
pop
lret
xchg
mov
and
jmp
inc
add
add
and
inc
rolb
pop
pusha
or
sahf
mov
dec
pop
mov
test
xor
sub
test
mov
sbb
clc
jg
mov
das
push
add
adc
jg
inc
addr16
jg
push
or
adc
sbb
addl
in
bnd
out
adc
mov
mov
faddl
and
rcrl
popf
push
jno
adc
loop
or
xor
mov
cmp
xchg
jno
outsl
cs
movsl
xor
pop
in
inc
adc
stos
add
mov
add
test
mov
dec
dec
js
cmp
in
orl
push
clc
mov
or
jne
or
adc
ret
push
push
pop
jo
sbb
add
fistps
jmp
sti
loop
pop
inc
mov
and
mov
add
nop
jns
mov
imul
xchg
push
mov
jg
mov
xor
shlb
je
dec
jne
mov
mov
push
call
add
sub
add
hlt
sbb
pop
inc
xor
jno
cmp
dec
shrb
dec
xor
sbb
xchg
or
fdivrs
or
or
add
jg
mov
lods
cld
je
dec
rcrb
incl
push
push
mov
mov
mov
ret
jo
mov
mov
ficomps
sarb
add
sub
je
dec
lcall
push
out
lcall
fstpl
dec
mov
sub
sub
push
popa
sub
fimuls
cmpsl
mov
fcmovnb
or
rolb
xchg
inc
rcrb
inc
or
or
pusha
add
cmp
jge
cmp
pop
enter
cmp
test
pop
xor
adc
sbb
and
aaa
and
test
dec
add
push
rclb
cltd
add
sub
aaa
push
or
testl
mov
mov
loop
out
dec
test
loopne
add
inc
xchg
fadds
push
mov
and
xchg
ret
aaa
sbb
bound
shlb
lcall
imul
cmp
xor
fsubl
xchg
and
or
or
xchg
lods
rcl
insb
sub
ds
lea
adc
mov
jp
jb
sbb
jne
loope
in
loopne
lock
add
bound
sub
pop
or
or
loope
neg
ds
and
or
andl
leave
pop
xchg
jns
leave
leave
add
mov
jbe
cwtl
loope
jbe
and
lds
or
mov
lock
cli
lock
jnp
aam
das
popf
cmp
mov
xchg
les
rol
ljmp
aaa
ret
std
or
adc
push
or
or
jb
out
int3
xchg
adc
jb
add
pop
stos
cmp
jg
adc
fsts
xor
int
adc
pop
test
cld
lds
jle
or
xor
add
sub
jp
adc
dec
ret
shr
or
or
fbld
sbb
std
jmp
bound
inc
push
sub
add
int
loope
test
cld
and
push
sbb
push
es
clc
hlt
test
add
int
mov
mov
adc
inc
or
jmp
dec
imul
mov
popl
in
inc
adc
movsb
inc
sbb
or
sbb
mov
push
xchg
push
add
push
xorb
aam
push
add
inc
pushf
mov
pushf
jle
adc
fstl
loopne
sbb
and
shr
pop
std
cli
adc
mov
cmp
repnz
shlb
fisubrl
mov
jle
fldenv
ret
rorl
or
pop
mov
and
iret
mov
mov
adc
int3
mov
lea
pop
mov
fmuls
or
push
or
movsb
fmull
mov
pop
add
lahf
rorl
mov
xor
or
push
xchg
sahf
add
adc
and
push
out
js
lcall
aam
popa
jmp
test
roll
or
test
add
jmp
addb
lea
arpl
jae
std
mov
imul
or
xor
je
jg
jne
lea
push
cwtl
sub
pop
es
dec
add
js
shll
je
mov
loopne
cmp
inc
das
js
sub
jle
or
jle
or
mov
popf
mov
adc
insb
dec
pusha
shrl
popa
or
lods
arpl
test
shlb
adc
orb
ds
mov
sti
mov
xor
sbb
adcl
add
sub
clc
jl
pop
mov
add
loop
movsb
mov
xor
pop
std
inc
adc
ret
pushf
xchg
pop
fisubrs
arpl
popl
jp
add
das
sub
push
je
test
mov
cmpsb
xchg
insb
sub
rolb
mov
out
lods
xchg
repnz
mov
orl
lea
mov
xchg
pop
int3
ret
popf
rorb
shl
pop
outsb
mov
dec
aaa
testb
sub
in
adc
push
pop
inc
inc
mov
jae
gs
mov
insb
and
aam
mov
arpl
adc
cmpsl
sub
movsb
pop
xchg
loopne
pop
and
xor
lock
dec
adc
and
cmpl
push
stos
pop
das
imul
add
mov
xor
addr16
rolb
xor
sti
adc
js
push
push
rorb
mov
je
and
pop
mov
cs
dec
cmp
inc
jge
aaa
fsubl
pop
outsb
out
mov
sbb
dec
fmuls
call
mov
lods
add
mov
sti
mov
add
lods
add
xchg
sub
push
add
aas
insb
mov
jne
or
roll
push
lods
cmp
pop
test
aaa
mov
adc
cmp
jne
cmc
mov
pushf
cmp
push
mov
cwtl
xor
cwtl
mov
je
pushf
xor
aaa
mov
adc
pop
mov
cwtl
cmp
mov
xchg
mov
mov
cmp
loopne
inc
test
jp
jbe
loopne
mov
test
fidivrs
shr
add
xchg
cwtl
adcb
push
fcomps
push
adc
adc
cmp
lock
cmpsl
xchg
xlat
push
jbe
vmwrite
cmp
lahf
sbb
gs
outsb
fsubr
dec
hlt
add
mov
js
pusha
mov
push
lods
cmp
or
or
loopne
mov
jae
repnz
fnsave
test
push
jl
pop
icebp
andl
ja
mov
js
rcrb
rcl
icebp
cmp
sbb
xor
or
arpl
jp
push
adc
jecxz
inc
enter
and
dec
pop
mov
ja
push
jne
fmuls
das
or
inc
lock
mov
rorl
dec
xchg
or
mov
orb
push
sbb
pop
fimuls
and
jbe
or
or
mov
std
inc
inc
sub
jne
xchg
cmp
and
or
cltd
adc
cmpsl
and
pop
push
adc
push
pop
shll
pop
cmpsb
adc
push
dec
inc
jl
movsl
clc
and
jge
jg
sarb
aaa
cmpsb
pop
repz
adc
lods
mov
xchg
cmp
mov
xchg
scas
inc
mov
inc
inc
cmpsb
jle
mov
lods
scas
imul
sub
and
test
or
mov
mov
dec
arpl
cmp
xlat
cmp
inc
mov
je
push
popf
or
movaps
lea
leave
test
push
lret
mov
gs
sub
mov
push
push
fstpt
sub
enter
jmp
and
lret
add
lea
or
inc
pusha
mov
add
test
push
jge
or
cmp
js
mov
pop
pop
cmpb
or
mov
ret
or
lret
es
dec
adc
or
sbb
rorb
mov
jbe
orl
hlt
jne
adc
jne
or
fiaddl
cmp
repz
lahf
dec
imul
pushf
mov
mov
cld
xchg
cmp
cmp
orl
lock
std
adc
mov
movsb
cmp
jne
sbb
int
jne
push
insb
insb
sbb
inc
pop
movsl
jo
jno
push
popa
outsb
or
cmp
mov
or
fsub
push
xchg
cmp
cmpsb
adc
cmp
lea
pop
mov
insb
xchg
dec
and
adc
push
mov
enter
pop
vorps
ret
pop
idiv
daa
jbe
into
cmpb
cmpsb
ret
js
lock
add
and
andb
repz
aas
inc
lea
mov
pop
xor
sbb
adc
jno
dec
jo
sti
push
sub
sub
je
push
sbb
stos
mov
or
fwait
jge
mov
or
push
lock
or
jmp
push
pop
loop
add
add
jbe
ds
cmp
inc
outsb
iret
add
les
cmp
add
clc
dec
xor
add
outsb
xor
and
add
xor
enter
jae
cmp
ss
sarb
addb
jne,pn
aas
or
fdivs
fisttpll
add
push
add
xor
inc
or
push
push
inc
or
inc
mov
fdivs
sbb
sbb
adcl
cli
jecxz
or
mov
push
les
xor
sbb
aaa
jmp
pop
pop
sub
inc
sbb
lea
add
and
cli
aaa
cmp
add
mov
je
mov
mov
dec
jb
nop
add
xor
aad
cmp
test
jnp
movsl
loop
cmp
and
add
mov
lock
dec
aad
add
rorb
sbb
inc
and
call
sbb
inc
ror
or
inc
jno
xor
pop
inc
mov
push
add
jnp
ds
loopne
pop
or
push
push
add
jmp
fldl
jnp
adc
push
pushl
cmp
mov
adc
sbb
sbb
sbb
enter
xor
mov
mov
and
adc
in
les
push
mov
dec
cltd
mov
popf
inc
or
xor
or
mov
aaa
pop
pop
cld
daa
xor
jp
push
out
sbb
lods
sbb
adc
or
pop
xchg
jo
movsb
adc
fxch
idiv
and
push
test
add
and
push
lea
aaa
xchg
dec
into
or
jl
dec
push
push
push
pushf
dec
mov
cmp
mov
dec
and
cld
and
push
xorb
ljmp
sbb
lods
nop
test
lds
arpl
add
sub
pop
cmp
cmp
adc
dec
push
push
in
cwtl
and
add
add
iret
outsl
push
sbb
sbb
rcrb
and
pop
dec
mov
mov
inc
xor
enter
pop
and
inc
out
lret
adc
mov
dec
or
sbb
dec
and
sarb
inc
sub
dec
cli
int3
cwtl
pop
lock
cmp
ss
or
js
addr16
inc
sbb
movsb
lds
sbb
cmp
dec
out
mov
xchg
mov
push
cmpsb
xchg
aaa
sti
cmp
or
cmp
mov
je
sbb
or
adc
or
pusha
test
pusha
lahf
frstor
adc
pop
mov
xor
cmp
add
cmp
push
ret
es
lock
aam
or
push
das
push
jmp
dec
mov
sub
inc
invd
inc
inc
loope
pop
dec
iret
orl
decl
adc
cmp
repz
testb
add
xor
int3
dec
cmp
ret
lods
mov
inc
cmp
push
inc
adc
cld
xor
pop
mulb
sub
xchg
jmp
push
jae
dec
or
pusha
cwtl
xor
rol
jle
pop
mov
mov
push
cmc
add
mov
xchg
fs
add
test
add
ror
or
lcall
js
sub
rcll
loop
mov
hlt
mov
add
arpl
int3
enter
xchg
mov
lock
subb
jmp
or
mov
add
pop
inc
ds
adc
add
sub
inc
scas
xor
cmp
insl
xchg
inc
leave
mov
jl
int3
push
mov
cmp
dec
xorb
loopne
cmpsb
leave
push
lock
pop
xchg
into
jmp
xchg
push
stc
mov
and
aam
bound
mov
daa
add
inc
cwtl
out
add
popa
inc
int
xchg
push
inc
push
and
jns
mov
in
cmp
loopne
sbb
outsb
rcll
inc
testw
add
lea
sub
test
adc
and
cwtl
rcrb
jmp
pop
pop
dec
sti
or
shll
cmpsl
cwtl
cli
xchg
rcll
loopne
fistl
movl
out
out
leave
push
sbb
xchg
jo
sti
fimuls
cs
push
mov
push
and
jp
or
add
add
or
add
push
or
xchg
mov
or
add
push
sub
insb
in
scas
pop
movsb
icebp
inc
lods
repz
sar
outsl
test
dec
les
lods
daa
push
movsb
pop
pop
pop
rcrb
sub
jo
in
inc
or
xchg
cli
lea
add
mov
mov
fdivs
into
jmp
test
inc
xchg
cmp
or
arpl
inc
adcb
mov
lea
out
gs
movb
addb
arpl
add
jmp
add
aad
mov
pop
add
push
xor
rclb
or
insb
add
and
test
sbb
xor
add
insw
push
dec
xor
add
inc
mov
adc
sub
sti
outsl
addr16
jle
dec
cmp
jg
sub
pusha
scas
pop
inc
bound
icebp
add
dec
dec
jne
repnz
or
bound
or
inc
mov
dec
jle
leave
or
daa
jno
sub
pop
inc
movsb
push
add
xor
rolb
in
aaa
jle
dec
mov
add
cmp
dec
sbb
out
mov
add
jns
negl
add
add
mov
insb
adc
xchg
mov
popaw
gs
pusha
dec
add
cmp
mov
test
add
outsb
sbb
jo
roll
cmpsl
pop
add
bound
sbb
add
es
add
cld
rorl
jle
lahf
gs
addb
lret
xlat
movsb
lret
loopne
movsb
orb
cmc
push
out
insl
pop
mov
jmp
adc
stos
sub
clc
das
inc
aam
pushf
push
sbb
leave
push
cld
je
cmp
mov
inc
cli
or
adc
jg
mov
cmp
lahf
adc
jne
and
je
das
into
in
testb
mov
jbe
decb
cmp
dec
rcl
adc
sbb
sarb
xor
pop
add
decl
or
add
sbb
mov
shlb
push
adc
jns
pop
lea
filds
or
inc
insb
imul
adc
xchg
mov
jne,pn
inc
ret
ds
add
jbe
xlat
and
mov
decl
rcrb
sbb
inc
test
pop
adc
sub
mov
add
push
push
adc
jmp
insb
add
lcall
ficoms
or
insl
stos
movb
aad
popf
pop
xor
repz
or
mov
in
lea
daa
mov
into
mov
jo
lds
cmp
adc
mov
adc
nop
push
dec
lock
push
xor
jl
push
pusha
notb
or
push
inc
gs
mov
push
int3
xchg
incl
ss
movsl
xor
push
sbb
xor
inc
or
pop
and
das
mov
dec
adc
add
pop
cmp
pcmpeqw
jo
inc
loopne
sbb
sub
jne
lds
sbb
and
lea
rcrb
and
or
sbb
push
sbb
rorl
in
pusha
adc
orb
call
neg
xor
or
add
push
and
inc
jecxz
add
cmp
sub
sbb
xor
bound
jmp
imul
dec
adc
push
xlat
shll
and
inc
and
inc
add
add
sub
in
pushf
jb
jnp
cmp
insb
or
inc
inc
push
add
xchg
in
js
aaa
cmc
je
pop
and
sbb
push
ds
jle
lret
push
lcall
adc
jmp
xlat
or
rol
jne
enter
push
sub
pushl
inc
adc
adc
inc
xchg
mov
pop
jne
lret
add
cmp
pop
je
adc
inc
dec
xor
pop
dec
js
sti
cmp
testl
and
sbb
and
adc
addr16
adc
jmp
dec
sub
cmp
lea
ret
or
rcrl
mov
cltd
inc
and
sub
shlb
fldl
add
xor
cmpsl
push
mov
xor
inc
or
aam
or
and
add
test
or
or
gs
xchg
ljmp
sub
add
push
cli
jb
mov
jne
data16
dec
pusha
or
add
cld
or
loopne
add
scas
xor
jo
mov
fmuls
pop
adc
sbb
sub
push
out
pop
dec
adc
push
xchg
mov
sub
dec
cmp
icebp
jne
pop
jae
inc
mov
ss
loopne
rcrb
push
insb
orb
pop
sbb
in
mov
or
mov
data16
mov
add
xchg
test
mov
pop
add
hlt
cmp
fidivl
jle
xor
les
leave
mov
inc
xlat
fdivs
cmpsb
or
inc
mov
adc
fistpl
test
sbb
popf
and
adc
jbe
popa
dec
pop
mov
xchg
inc
jle
in
xchg
cmp
subb
jecxz
add
inc
mov
rcl
push
aaa
push
push
add
enter
daa
pop
in
mov
and
push
daa
fbstp
in
clc
or
iret
out
and
pushf
fsts
sub
roll
std
push
out
mov
and
push
pop
sub
std
push
push
jb
dec
mov
data16
mov
mov
hlt
add
lahf
and
fisubl
dec
lcall
inc
jmp
jge
mov
clc
add
jmp
lods
scas
mov
add
in
cmpsb
jmp
ja
push
cmpsl
mov
bound
pand
or
dec
mov
and
icebp
mov
mov
jecxz
mov
aad
cmp
ret
data16
inc
jo
or
test
push
jno
cli
or
rcr
xchg
sbb
rclb
cmp
sub
adc
mov
or
and
dec
and
pop
fucomip
in
scas
push
push
push
pop
mov
test
mov
sub
and
pushf
or
push
clc
movsl
repnz
inc
rclb
push
xor
popa
insl
pop
cld
add
and
dec
mov
mov
add
jo
pop
out
fwait
pop
xor
pop
mov
sbb
push
pushf
dec
mov
and
jl
daa
xor
push
ljmp
adc
fiaddl
out
xor
and
push
addl
cmp
xchg
into
loopne
mov
cmpl
jae
insb
dec
test
cs
adc
adc
int3
adc
addb
loop
mov
insb
ficompl
ret
mov
loope
test
and
jg
lea
sub
xor
pop
aam
jns
cmpsl
cli
push
pushf
mov
cmp
inc
aad
fwait
xlat
adc
sahf
inc
outsb
push
mov
push
jg
lcall
aad
xlat
xchg
cmp
cmpsl
stc
add
in
adc
xor
test
push
clc
fadd
faddl
push
dec
out
pop
adc
add
push
adc
push
push
aas
in
mov
jo
shlb
and
test
mov
lahf
sub
int3
or
push
push
stos
mov
int3
ss
or
pushf
mov
lods
neg
mov
sbb
jnp
in
jae
xchg
lock
push
call
inc
call
add
test
incb
mov
mov
dec
inc
push
outsb
js
jne
push
push
inc
add
movsb
dec
repz
push
and
clc
fwait
mov
out
dec
clc
sbb
enter
outsb
xchg
shrb
ret
loopne
fld
ja
int
stos
in
loopne
rcrl
cmpb
mull
mov
ds
clc
mov
jecxz
out
in
outsb
xchg
fidivrl
adc
inc
test
cs
insb
jne
repnz
aam
inc
adc
cmpsb
mov
mov
sub
xor
and
sbb
ds
pop
fadd
shrl
add
push
imull
mov
testb
in
jne
sbb
mov
push
mov
in
fsubs
mov
inc
rcll
in
lock
test
xor
jle
loop
adc
lods
mov
push
xchg
sub
push
dec
or
dec
hlt
lret
cmp
lods
je
ficomps
cs
daa
push
sbbl
push
sbb
es
push
in
cmp
pop
enter
outsb
push
mov
adc
rclb
jns
andl
inc
sub
je
push
add
arpl
insb
pop
adc
in
daa
nop
xor
pop
sub
adc
imul
xor
jl
cmp
je
add
fadd
or
ljmp
dec
ret
add
or
or
mov
sti
movb
jge
je
test
lcall
leave
adc
pop
adc
int
xchg
ss
push
in
inc
mov
dec
add
mov
adc
jo
or
lea
or
mov
fs
bound
gs
rolb
adc
insb
or
and
jne
add
pop
test
imul
xor
mov
inc
repz
adc
pop
addb
or
push
arpl
lcall
cpuid
fstp
or
je
sbb
dec
repnz
sbb
into
xor
push
fs
inc
call
cli
mov
jg
popa
sahf
dec
ret
mov
sbb
iret
pop
je
ds
test
adc
inc
jo
sbb
mov
xor
jl
mov
daa
in
cmpb
ljmp
arpl
xchg
dec
mov
mov
mov
mov
iret
xlat
pop
dec
les
addb
lock
out
jns
cmp
sbb
pop
mov
outsl
sbb
and
aas
jl
mov
clc
add
cmp
mov
jo
ret
push
fsubr
es
pop
je
push
jmp
jle
fstpl
ret
xorb
inc
ficoml
xlat
sahf
es
dec
mov
jnp
pop
repz
push
push
add
cmp
cmp
jno
dec
popa
add
arpl
data16
xchg
repnz
hlt
inc
cmp
pusha
jo
cmpsl
insb
inc
xor
xchg
push
sub
push
push
imul
xchg
mov
jge
add
or
and
je
lcall
nop
cmpb
dec
insl
sub
push
ret
cmpsl
jo
ret
cmp
ss
dec
cmp
sub
adc
add
mov
pop
dec
push
cmp
or
test
adc
add
cmc
adc
and
xchg
xor
inc
or
dec
js
add
add
dec
dec
adc
add
dec
add
iret
xchg
adc
vcvtsd2si
add
or
popa
insb
cmpsl
push
lods
add
jae
push
sub
mov
movsl
lods
loopne
sbb
popa
enter
push
cs
jecxz
add
mov
jae
push
sbb
cmp
lods
lods
loop
clc
test
adc
push
or
add
test
sub
pop
subl
adcl
or
mov
cmp
xchg
loopne
aad
push
add
bound
sub
and
loopne
pusha
or
mov
jp
dec
popf
out
inc
jl
mov
sub
in
rcrl
adc
mov
push
gs
mov
stos
push
imul
push
test
add
clc
movsb
pop
js
addr16
xchg
loopne
or
add
or
outsw
sub
fsubs
xchg
add
test
movsl
sbb
arpl
test
call
mov
dec
adc
test
xor
in
cmp
loope
sbbl
mov
mov
pop
sbb
add
adc
jp
add
push
pop
dec
dec
xorb
mov
pop
mov
pop
sbb
jge
adc
add
movsl
popf
mov
mov
add
push
mov
push
push
adc
das
dec
inc
xorb
ret
jae
loopne
insl
pop
add
test
aad
dec
ret
pop
lock
push
pop
mov
xchg
push
push
sbb
and
pop
or
xchg
ss
inc
fistpll
add
add
stos
iret
jmp
ror
mov
adc
lea
mov
dec
inc
and
or
stos
imul
add
jle
inc
scas
jb
test
jne
test
stos
aad
xchg
cmpb
popf
pop
push
mov
loopne
add
adc
loop
fisubl
add
mulb
xor
mov
inc
scas
adc
ds
dec
inc
lods
add
into
add
lods
stc
jo
sub
and
jp
mov
fiaddl
fiadds
pusha
pop
stos
adc
sti
adc
add
adc
shlb
or
or
mov
inc
lret
ss
mov
mov
cmp
mov
and
mov
pop
sbb
stc
add
lds
push
mov
xlat
fs
dec
pop
jae
xor
push
push
push
or
mov
xchg
mov
divl
jge
scas
and
push
jnp
jle
sahf
push
lock
int3
cwtl
pop
jne
test
adc
jle
jne
cmpl
data16
xor
ss
sbb
pop
pop
in
add
jne
das
pop
and
or
sbb
jae
xor
das
inc
mov
outsb
add
inc
rclb
xchg
rolb
mov
or
ret
sti
cmp
out
xchg
sub
push
sbb
enter
mov
add
rorl
push
sbb
and
pop
inc
loope
stos
and
sahf
push
imul
mov
inc
loopne
adc
adc
in
xor
sbb
add
in
pop
cmp
and
xchg
pushf
mov
fbstp
sbb
insb
push
adc
sbb
pop
inc
pop
jne
cwtl
filds
add
fimuls
aad
mov
mov
or
and
push
dec
int3
sti
pop
std
sub
cmovb
sahf
mov
adc
xor
add
test
sbb
cmp
sbb
push
rcrl
je
ret
test
and
push
dec
lret
lods
xchg
and
add
xor
add
add
mov
pop
mov
enter
push
add
or
pop
pop
imul
cmpsb
pop
ret
add
mov
lds
int3
leave
orb
and
cmp
or
jne
adc
mov
cmp
mov
ret
shll
inc
fildl
sahf
pop
arpl
stc
imul
cmp
ljmp
mov
dec
sbb
dec
push
orl
push
mov
push
insb
add
push
je,pt
adc
rcrl
pusha
sbb
mov
push
fmuls
cwtl
enter
add
add
movsb
and
sbb
lcall
push
mov
add
add
mov
rcrl
cmp
pop
or
test
sarb
xchg
cmp
stc
lea
and
push
sahf
adc
cmp
enter
add
daa
data16
or
add
shlb
xorl
jb
shlb
jne
adc
pop
or
ret
mov
inc
and
mov
adc
ror
add
push
shrb
sbb
cwtl
mov
jns
sub
and
push
dec
add
push
bound
xor
clc
adc
push
push
fwait
andb
imul
insl
fisttps
aam
outsl
inc
in
mov
clc
insl
push
std
and
xchg
lret
imul
push
push
mov
es
sbb
add
fiaddl
pop
add
lcall
inc
hlt
xchg
cwtl
test
sbb
ret
int3
das
and
jno
mov
jne
xchg
push
aam
adc
fadds
mov
push
mov
mov
add
clc
push
push
push
insl
and
outsb
sub
xor
lret
js
xor
jb
mov
or
sbb
push
imul
cli
icebp
mov
push
push
je
xor
cltd
fidivrs
fwait
jle
cmp
push
pop
xchg
mov
adc
sbb
loop
repz
push
push
push
adc
adc
pop
jnp
sub
enter
add
xchg
shrb
fidivrs
and
push
mov
and
sbb
or
jne
sbb
dec
pop
and
xchg
bound
shrb
pop
loopne
dec
hlt
push
rcrl
adc
or
lock
push
loopne
sbb
fimuls
clc
mov
dec
pop
nop
push
sbb
dec
inc
mov
mov
ds
mov
cmpsb
adc
push
rol
add
sbb
dec
test
and
xchg
cmc
mov
into
push
out
lcall
fwait
pop
jmp
jne
xchg
scas
and
ficompl
sbb
arpl
jne
dec
jne
popf
shl
push
cmp
inc
jge
sti
adc
cmp
or
ss
cmpsl
cmp
jbe
or
jl
int
dec
je
push
jo
inc
gs
jge
dec
cmp
daa
xor
jle
or
mov
or
push
out
lret
inc
fucomi
jg
adc
jmp
push
inc
jnp
hlt
push
loopne
ret
decb
mov
push
push
push
jle
dec
dec
inc
jle
sbb
sbb
jo
or
pop
arpl
test
das
pop
push
xor
cmp
into
arpl
add
xor
ret
pop
jbe
jns
popa
adc
xor
and
inc
mov
push
outsl
insl
jl
stc
es
or
push
adc
dec
add
fdivs
cmp
or
or
pop
clc
push
pop
fisttpl
pop
and
loopne
roll
add
fdecstp
xchg
sub
mov
adc
shrb
push
push
inc
enter
icebp
add
fisttpl
cmp
mov
bound
lahf
push
js
dec
ja
add
jg
scas
gs
cs
lcall
or
xorl
mov
inc
cmp
or
insl
in
test
jno
xchg
jecxz
loopne
jbe
sbb
sbb
push
add
xchg
xorl
xor
in
push
insb
inc
push
enter
adc
pop
jp
addb
outsb
adc
mov
adc
push
fadd
xchg
in
xchg
pop
mov
adc
add
and
pop
mov
pop
add
cld
add
mov
add
xor
ljmp
mov
adc
call
inc
pop
adc
popa
and
push
daa
cmpsb
mov
push
nop/reserved
int
stc
das
fldt
loopne
sbb
mov
sti
push
xchg
les
push
push
adc
test
xor
sahf
dec
aas
mov
filds
add
sbb
imul
adc
ficoms
mov
insl
inc
push
or
cld
mov
and
push
xor
in
add
repz
aam
mov
xor
xor
inc
mov
and
dec
push
xchg
movsb
xchg
lahf
mov
add
cmp
mov
and
je
mov
inc
fstl
adc
mov
cmp
sub
add
adc
push
push
shll
mov
sbb
xchg
sbb
daa
jne
shll
xchg
test
enter
add
or
loop
sub
dec
popa
sbb
shl
push
pop
enter
or
push
adc
lds
pop
js
cmp
cld
gs
xor
fs
add
scas
xor
mov
popa
push
add
xor
xlat
inc
or
or
out
xchg
xchg
dec
push
xor
or
inc
mov
rcl
mov
jno
push
std
xchg
inc
arpl
inc
mov
sbb
pop
xchg
add
sub
adc
loopne
dec
insb
dec
adc
lret
jae
sbb
sbb
mov
add
enter
pusha
test
jo
cmpsb
cmc
andl
or
jne
and
sbb
dec
mov
pop
sub
pushf
pop
cmc
adc
inc
aam
cmp
cmp
inc
add
into
daa
or
inc
in
push
dec
push
mov
inc
jnp
inc
aaa
pushf
fsubrs
pusha
sub
js
aaa
or
dec
gs
sbb
cmp
into
mov
sbb
fidivrl
push
sbb
mov
lcall
dec
aam
loopne
xchg
loope
xchg
cli
outsb
aas
repnz
in
adc
push
push
je
les
in
je
push
push
sbb
mov
adc
or
inc
sbb
push
sbb
popa
and
add
sbb
cmp
pop
test
lds
add
aad
aaa
add
sub
fcoml
pop
mov
mov
add
rclb
daa
or
call
incl
aaa
sbb
mov
popf
or
sbb
shl
movsb
lods
push
push
rep
mov
xorb
xchg
push
mov
mov
pop
push
outsl
mov
push
repnz
insb
jo
push
mov
mov
jne
or
add
push
pop
fwait
add
mov
cli
lock
push
adc
dec
mov
mov
push
push
and
xor
js
mov
fsubs
call
sub
and
sub
pusha
popf
mov
sbb
pop
mov
xchg
aam
fldenv
and
jb
pop
stos
lods
andl
push
add
xchg
leave
and
sbb
push
loopne
sub
in
mov
pop
lock
bnd
dec
sbb
dec
lods
and
into
fsubs
mov
jle
fisttps
test
sbbb
fbstp
adc
fmuls
inc
ret
jmp
xor
aas
sbb
or
or
and
movsl
bound
mov
mov
jle
sbb
inc
mov
sbb
aas
gs
push
xchg
jge
xchg
fsubrs
jno
xor
jnp
pop
jp
jbe
inc
enter
je
and
inc
push
add
addr16
adc
loope
insb
repnz
xchg
adc
je
cmp
mov
push
cmp
and
inc
je
adc
add
mov
movswl
sub
mov
add
call
movsb
test
orl
dec
fcompl
imul
pop
dec
push
mov
add
cmp
inc
andl
xchg
sub
std
push
jmp
mov
add
or
mov
add
push
push
or
fs
xor
xchg
add
sbb
mov
out
cmpl
xchg
cmp
sub
push
int3
test
push
je
jle
adcb
inc
loop
add
xchg
pop
or
dec
mov
inc
cmpb
or
jge
push
sub
test
xchg
sar
adc
cmpb
clc
mov
xchg
in
mov
pushl
adc
and
mov
andb
or
push
rol
roll
mov
loop
je
pop
mov
xchg
push
or
js
in
scas
mov
mov
je
fcmovb
movsb
push
fstp
or
je
add
add
mov
hlt
dec
fdivs
inc
xchg
and
xchg
aad
movsb
jns
adc
lock
out
lock
lea
sbb
push
jo
push
incb
mov
mov
shlb
cltd
push
or
cli
add
add
jne
subb
mov
test
hlt
jo
cwtl
add
sub
mov
mov
repnz
pop
sbb
mov
rcll
mov
sbb
test
loop
add
repnz
adc
push
xchg
icebp
fldcw
cmp
aad
orl
mov
push
iret
ret
adc
fsubrl
or
mov
and
sub
sub
and
push
rorl
push
xor
ljmp
pop
pop
xchg
shlb
test
push
jo
push
popf
jmp
xor
jp
lar
out
jne
jmp
add
lock
cmp
lea
fiadds
push
mov
xchg
test
add
push
add
movsl
xlat
dec
xor
repz
iret
out
pusha
or
or
es
add
and
add
or
xor
adc
sub
jno
dec
dec
xchg
or
add
imul
aaa
xor
xor
mov
push
dec
js
jecxz
jb
mov
je
and
adc
dec
pushf
psllq
test
inc
insb
sbb
jmp
and
mov
or
and
push
jmp
nop
xor
adc
jbe
push
push
cmp
mov
ja
repz
or
movsl
cs
in
repnz
add
add
add
jo
add
sbb
fidivl
adc
jo
hlt
pop
test
repnz
adc
sbb
or
sub
dec
inc
push
stos
pop
mov
cli
jg
or
aaa
call
test
cmp
inc
sbb
adc
xchg
and
outsl
xchg
or
inc
mov
xor
lret
rorb
and
popf
add
add
in
adc
cmp
ror
rclb
xor
pushf
xchg
adc
pop
sbb
and
push
outsw
in
ljmp
jmp
sub
orb
lea
add
sbb
les
add
push
pop
and
add
push
add
ret
push
test
mov
imul
inc
inc
ret
loopne
or
jg
jecxz
push
mov
xor
jne
mov
cmp
fucomp
and
mov
ja
xor
jge
pop
sarl
pop
ljmp
jo
push
aas
arpl
xchg
or
push
adc
ret
adc
dec
cmp
or
cli
push
test
mov
push
push
inc
inc
mov
decb
cmpl
adcl
mov
cwtl
lock
mov
arpl
dec
jmp
xor
inc
inc
sub
or
xlat
ret
fisubrl
in
push
xor
pusha
adc
bound
xor
std
ss
cwtl
orl
rol
aam
cltd
or
lock
lcall
rcrb
jae
or
xor
out
pusha
xor
and
jl
mov
dec
lea
dec
mov
fldl
sbb
or
sub
fs
ljmp
xchg
cmpsb
xor
aaa
nop
add
pop
dec
dec
in
mov
jge
xor
inc
sub
sbb
jae
add
movsb
push
lcall
and
lock
loopne
jg
mov
xlat
and
push
mov
aad
loop
mov
fiadds
cs
enter
jl
jo
fwait
insb
adc
ror
adc
in
mov
jnp
out
or
push
jp
sbb
and
ja
mov
cmp
ds
cmpsb
xor
xor
incb
inc
push
mov
pop
sbb
jle
and
jmp
push
add
in
out
add
leave
dec
shr
mov
mov
xchg
inc
xchg
push
pop
sbb
inc
adc
scas
clc
push
pop
nop
cmp
push
aam
adc
sub
cmp
cmp
add
jbe
dec
icebp
or
movsb
cmc
ss
sbb
adc
ret
outsb
mov
pop
rclb
rcrl
pushf
pop
lcall
movsb
sarb
pop
inc
mov
js
scas
andl
inc
lea
push
mov
push
sbbb
jns
or
or
test
adc
sub
sbb
in
insb
pop
adc
and
mov
xchg
or
ds
mov
test
xchg
mov
add
sub
or
jne
pop
js
sti
and
faddl
add
jmp
test
xor
or
add
test
xchg
leave
cmpsl
jb
push
orl
sti
dec
decl
xchg
xchg
and
jp
ljmp
loop
mov
lods
lea
add
mov
gs
sbb
xchg
mov
adc
mov
les
cltd
ljmp
rorb
data16
add
gs
movsl
xor
dec
adc
sar
adc
test
idiv
cmp
adc
pushl
dec
shrb
fs
xor
dec
dec
pop
loop
sarb
sbb
out
push
sub
out
insb
in
fs
cmp
jns
outsl
and
pop
jg
lcall
cmpb
frstor
loop,pt
push
iret
js
dec
out
push
call
je
repnz
add
outsb
adc
mov
xor
call
add
xchg
sbb
adc
cmp
cmp
bound
popa
ds
mov
or
in
push
repz
hlt
call
or
push
sbb
out
and
mov
mov
jb
xadd
out
shll
and
adc
cmp
int3
xchg
push
and
adc
sub
aad
orb
out
cld
rcll
mov
hlt
sbb
mov
sbb
cmp
jge
and
xor
sub
jne
mov
pushf
inc
cmp
in
pop
sub
pusha
lods
sub
add
cmp
push
dec
add
cmovg
mov
das
cmp
mov
or
inc
arpl
and
or
mov
sbb
das
mov
ss
frstor
mov
mov
sbb
dec
cmp
fmull
cmp
andl
rolb
add
add
andb
out
mov
pop
pop
popa
pop
fistl
add
jae
inc
das
lea
pause
lock
or
mov
jne
xor
dec
add
insb
mov
xor
push
add
cmp
movsl
rclb
or
movb
popl
imul
adc
sar
xor
ja
sbb
cwtl
xchg
sub
sbb
lods
add
aam
or
mov
xor
loopne
les
lea
mov
int
sbb
lods
xor
sbb
push
add
sahf
ja
xchg
pop
and
cmp
sub
ds
sbb
sbb
sarl
or
dec
xor
dec
pop
sbb
push
cmp
add
ficoml
jl
enter
xchg
addr16
rolb
movsl
mov
cmpsl
mov
mov
xchg
repz
loope
insb
lds
adc
or
insl
cmp
gs
and
sbbl
pop
push
outsb
sub
mov
out
add
sbb
xchg
pop
aam
test
cwtl
pop
push
test
mov
mov
mov
or
fdivrl
lock
push
jno
lds
test
xor
push
ret
and
xor
or
popa
inc
cmp
jnp
jo
aas
dec
push
jne
xchg
roll
xor
or
inc
inc
inc
cmp
xor
sbb
pop
lea
push
mov
es
sti
or
aaa
push
ficomps
loop
pop
fildll
aas
aad
popa
mov
and
xor
hlt
lcall
sti
pop
add
and
insl
pop
adc
xor
cwtl
add
sub
pop
xlat
add
lock
xchg
cmp
jb
mov
add
jle
neg
adc
mov
mov
test
push
sbb
icebp
lcall
punpckhdq
inc
fwait
jl
fimull
push
add
mov
insb
jo
push
loope
mov
repnz
fildll
or
mov
xor
inc
js
xchg
push
sub
push
sahf
pop
pushf
mov
push
adc
pop
pop
mov
add
xchg
ret
test
movsb
lods
pop
mov
cmp
jo
mov
add
xor
dec
dec
pop
jno
lret
pop
cmp
out
adc
add
adc
sub
lret
adc
sub
jnp
adc
push
scas
inc
mov
add
aad
cmpl
dec
jo
decb
fimull
cmp
sub
pusha
sbbb
pop
stos
clc
adc
je
xchg
inc
subl
add
xorl
mov
mov
and
out
or
test
rolb
bound
xor
mov
add
roll
fisttpll
or
or
pop
test
out
mov
inc
je
orl
mov
jbe
sub
fcompl
lcall
adc
or
pop
push
dec
sub
stos
inc
lods
add
push
js
jo
sbb
push
xchg
inc
sub
sbb
push
rorb
push
cmp
jbe
mov
cmp
movl
rorb
and
xor
mov
xchg
sub
xor
call
push
fsts
or
sbb
stos
int3
aas
push
mov
test
push
xor
xchg
mov
and
and
push
shlb
sbb
addl
imul
std
pop
in
cmp
or
cld
mov
das
adc
lods
testb
insb
sti
and
xor
and
daa
cmpb
shlb
mov
pusha
sbb
pop
bound
xor
lds
add
test
and
addl
add
push
call
cmp
inc
lock
sub
add
push
sub
push
lods
andb
adc
xlat
lahf
xchg
push
sti
jmp
cmp
xchg
shrl
jne
cmp
jne
inc
enter
mov
push
add
pusha
sbb
das
add
adcl
enter
cmp
and
je
shll
into
arpl
sub
and
stos
test
sbb
xor
push
dec
cmp
rolb
scas
cmp
mov
push
call
inc
mov
xchg
mov
lcall
inc
mov
les
daa
sub
xor
or
rcrl
mov
popf
shrl
out
sub
add
jmp
cmovb
jg,pn
or
jmp
jo
lods
inc
push
pop
in
jl
ds
movsb
loopne
pop
js
add
fcomi
adc
dec
and
hlt
shrb
test
ss
sar
or
test
mov
pop
jp
in
gs
and
rolb
std
inc
cmp
pop
js
jle
arpl
cmp
das
cmpl
pusha
ret
lock
imul
imul
rcrb
sti
and
cs
cmp
movd
gs
xor
adc
and
inc
loopne
rolb
and
add
ja
icebp
pop
cmpl
mov
lahf
and
push
mov
sub
mov
mov
mov
push
pop
cmpb
mov
and
and
push
pop
add
or
mov
pop
dec
mov
sti
shl
push
inc
shlb
pop
jp
and
mov
fistpll
jbe
cmp
cmp
cmp
add
or
mov
fwait
aam
push
movsl
sahf
push
xchg
add
adc
data16
xchg
addb
sbb
in
sub
test
sar
outsl
add
mov
stos
push
push
adc
push
ret
lock
into
notl
insb
add
add
fucomip
nop
scas
into
xchg
push
ljmp
mov
ret
and
and
xchg
push
popf
insl
xor
rolb
jbe
sahf
lret
rorl
jle
jp
sbb
jne
jl
es
fiaddl
sub
or
bound
dec
cmp
jo
das
xor
lcall
cmp
insl
pop
add
cmp
fidivrl
cli
scas
popf
pop
aas
adc
fsubl
or
icebp
pop
pop
and
fisttpl
add
loope
cmp
add
mov
or
pushf
add
pop
and
sub
or
test
cmp
mov
dec
dec
inc
lret
inc
sbb
add
cmc
sbb
sbb
push
pop
inc
add
dec
mov
push
add
push
ret
outsl
mov
mov
fwait
sbb
test
fmuls
mov
xchg
push
shlb
push
cmp
pop
cltd
repz
popf
scas
or
inc
stc
test
mov
add
orb
add
sahf
lahf
sub
sbb
test
xor
icebp
dec
cmp
jl
test
test
sbb
or
or
cmp
mov
cld
inc
push
dec
inc
xchg
adc
jae
cmc
adc
xor
arpl
repz
mov
mov
xor
mov
xchg
xchg
je
pop
std
add
jno
xchg
jle
xchg
imul
pop
sbb
in
mov
mov
mov
hlt
sti
inc
jmp
xor
and
sub
mov
jmp
inc
dec
fwait
mov
xor
fistps
std
gs
cmp
or
add
sbb
sbb
mov
push
aaa
xor
add
or
fistpl
arpl
fbld
outsl
inc
mov
dec
jo
lods
push
and
sbb
fs
dec
adc
sbb
lock
mov
cmp
or
pop
inc
mov
xor
inc
push
and
xor
rorb
lea
cs
pusha
hlt
movb
fnstenv
mov
adc
sub
mov
push
outsl
bound
dec
call
adc
adc
cmp
ja
pop
lods
popf
cmp
out
popa
inc
inc
adc
loopne
or
dec
loop
adc
pop
mulb
push
or
lahf
fisttpl
push
add
testl
mov
repnz
cs
in
mov
jge
sub
dec
insb
call
push
stos
sbb
sbb
stos
mov
sbb
ljmp
sub
xchg
aam
xor
jge
mov
or
test
mov
sub
add
pop
in
nop
fsubs
or
cmpsl
push
mov
adc
add
push
push
jne
and
xor
test
add
inc
inc
adc
push
push
fs
dec
cmp
dec
nop
hlt
adc
or
inc
call
insl
decb
sub
incl
jo
xor
fnstenv
rorb
cld
nop
loopne
fcompl
imul
jno
arpl
adcl
fcomps
or
mov
subl
call
clc
jge
clc
in
dec
inc
or
in
push
push
in
dec
mov
sub
fsubrs
aad
mov
push
mov
ret
inc
xchg
inc
adc
mov
flds
lock
es
inc
mov
sbb
cwtl
notl
adc
inc
add
and
leave
xadd
or
cmp
sbb
add
push
iret
push
andb
xor
out
push
cmp
pop
or
add
jbe
sbb
dec
inc
std
movsl
cmp
fwait
das
mov
int3
sub
push
jne
xor
jmp
mov
xchg
std
leave
add
hlt
mov
xchg
push
push
mov
icebp
or
cmp
dec
add
xchg
flds
push
inc
lock
add
jo
faddp
ja
pop
rorb
pushl
ret
cltd
push
sarb
jp
iret
aaa
and
js
add
call
or
jl
push
data16
aaa
fcmovb
dec
push
cwtl
mov
cmp
inc
adc
xor
pop
inc
out
sbb
push
je
outsl
and
push
enter
pop
push
add
and
inc
and
and
popa
dec
insl
lea
push
adc
or
inc
cmp
jb
js
and
cmp
or
or
and
mov
fwait
cs
ret
arpl
and
rdmsr
icebp
xchg
test
lock
mov
lret
ret
sbb
movsl
ds
pop
sbb
fcomps
adc
xor
jl
nop
add
push
fdivl
adc
or
out
push
jl
pop
lods
or
fldt
cmp
enter
dec
add
inc
xchg
cmp
insb
and
and
imul
js
add
ficomps
xor
adc
ret
or
add
ret
sub
notb
push
add
and
insl
cmpsb
adc
and
andl
adc
sbb
pop
or
call
in
pop
imul
push
pop
and
adc
inc
or
dec
ja
test
mov
xlat
dec
push
adc
inc
ret
xor
out
sub
rolb
push
dec
fstpt
repz
adc
scas
fdivr
test
push
jle
push
inc
bound
sub
clc
testb
mov
inc
es
xor
dec
inc
ljmp
add
dec
test
in
inc
test
and
pop
fs
dec
loop
add
ror
sar
add
shlb
stc
cmp
jle
sub
sub
sub
cld
pop
jb
shr
push
dec
test
fdivl
push
test
adc
jl
xchg
add
jmp
leave
cld
push
lcall
clc
call
pop
cmp
xchg
stos
insl
ret
mov
jecxz
dec
insl
add
add
dec
mov
clc
shlb
add
divb
sbbl
add
inc
sbbb
pop
or
movswl
pop
adc
and
adc
sub
cltd
xor
data16
jae
jmp
sbb
inc
daa
clc
adcb
add
jp
mov
mov
orl
jmp
outsb
adc
and
and
push
popa
ljmp
rorb
jmp
movsb
and
pop
aam
push
aas
cmp
hlt
jne
shlb
jno
mov
push
stc
and
mov
mov
jo
clc
adc
add
xchg
test
xchg
int3
cmp
aam
mov
add
sbb
rorb
addr16
jecxz
out
adc
aas
or
paddusb
sub
mov
xchg
mov
dec
cltd
and
mov
sub
sub
push
mov
push
inc
push
outsb
jne
and
inc
jl
jmp
pop
mov
aas
mov
inc
ret
fidivrs
lea
scas
xchg
mov
push
lods
jae
xor
push
je
mov
adc
xor
les
fcomps
sbb
mov
or
sbb
or
inc
pusha
push
inc
jp
sti
cmp
or
fstpl
xor
add
xchg
call
pop
or
inc
rorb
mov
test
out
add
fsts
add
cmp
adc
mov
xchg
cld
xorb
adc
lea
mov
fmul
push
cmpb
or
cmp
andb
std
je
and
aam
xor
or
into
push
add
pop
xchg
test
lahf
loopne
inc
mov
sar
pop
cmpsb
clc
stos
repz
inc
mov
adc
inc
roll
roll
xchg
mov
push
cwtl
jp
push
cmp
and
lock
xchg
or
add
test
adc
adc
add
stos
or
push
push
push
xchg
dec
mov
lock
pop
adc
loopne
lea
dec
or
mov
and
push
dec
pop
ret
loopne
shlb
out
sbbl
insl
or
lea
push
mov
sub
pop
add
mov
pop
dec
pop
lds
jno
and
add
iret
add
sub
push
adc
mov
and
dec
subb
mov
sub
lea
shlb
movsb
lea
sti
add
push
hlt
inc
shlb
and
jbe
or
movsb
shlb
clc
jl
stc
shl
add
je
jp
or
jg
sbb
mov
and
cmp
addr16
add
jge
clc
in
or
loop
push
cmp
into
push
xor
jae
mov
sti
gs
jo
pop
push
sahf
popf
push
inc
and
div
or
mov
arpl
push
adc
push
ja
jmp
clc
test
mov
jo
outsb
xchg
cmp
and
dec
xor
mov
sahf
loope
loope
test
jl
lahf
and
sub
dec
mov
add
in
and
inc
and
sahf
xor
add
add
cmp
xstore-rng
cmpsl
ret
sub
sbbl
fwait
xchg
xchg
push
adcl
cmpsl
sub
ret
sbb
daa
dec
call
cmp
jno
clc
add
out
in
popf
mov
inc
inc
jp
in
or
cmp
jge
jns
test
inc
mov
push
sub
add
mov
out
mov
fstps
sbb
std
les
fnstcw
jp
pop
clc
fstps
or
fstps
push
nop
je
lods
jns
jnp
add
mov
mov
fsubp
jp
pushf
add
push
jo
test
jecxz
and
lahf
daa
add
sbb
hlt
lods
pop
sbb
pop
movsl
jl
out
scas
sbb
ja
lods
jbe,pn
mov
push
mov
lds
repnz
les
insl
pusha
jmp
jnp
andb
shl
sbb
xlat
mov
sbb
cmp
push
or
add
js
push
icebp
clc
push
sub
fcoml
sbb
adc
push
mov
adc
adc
repz
xchg
lds
in
sub
sub
std
fcomps
pop
push
movsb
mov
popa
inc
dec
mov
outsb
enter
dec
addl
es
add
jecxz
dec
jns
andb
pop
je
and
sbb
inc
cltd
xor
je
enter
fimull
cmp
add
sub
outsl
out
cmp
add
push
push
jnp
in
ss
push
push
xlat
mov
dec
push
push
add
je
jae
mov
mov
je
ss
xor
fimuls
push
cmp
test
push
adc
adc
inc
test
in
inc
push
fsubr
out
xor
mov
mov
fmull
jnp
ja
cmp
mov
push
jbe
popa
mov
imul
pop
and
and
icebp
push
push
xchg
test
push
dec
loopne
dec
mov
mov
push
cmc
pop
jp
arpl
adc
fs
inc
decb
mov
lock
mov
jae
jg
pusha
inc
and
jge
cld
jle
loopne
and
cmpsb
mov
add
cmp
jb
and
fisttps
xor
jne
pop
and
xor
lretw
xchg
into
popa
xchg
add
addr16
cmp
int3
jmp
xchg
sub
lcall
mov
sub
in
xchg
pop
pop
or
jge
dec
out
pop
shr
fcomps
fnstsw
inc
sbb
fidivl
xorl
lahf
roll
cmp
inc
sbb
icebp
jmp
or
adc
push
fdivrs
fsubrp
inc
stos
push
push
push
sbb
in
fadds
data16
cli
cld
dec
pushf
daa
cmp
fmuls
lds
sub
je
add
xor
inc
mov
fistpl
insb
xchg
jnp
sbb
adc
inc
xchg
mov
popa
in
sbb
test
xchg
push
dec
jge
pushf
sbb
jmp
nop
xor
orb
xchg
sbb
add
fwait
xor
dec
or
pop
dec
ja
mov
sub
loop
loope
fmul
fdecstp
jge
or
fisubrl
aaa
cld
movl
test
push
or
cmp
and
or
clc
adc
cmpsb
fldcw
cmp
push
jns
fstl
fcompl
adc
sbb
sub
rcrb
xor
js
push
pop
mov
cmp
mov
orb
loop
dec
mov
repnz
mov
push
xchg
call
cmp
filds
cmp
pop
and
movsb
daa
cmp
jmp
dec
insb
or
aam
lret
in
ror
mov
pushf
jb
pop
mov
cs
mov
mov
mov
mov
jae
xchg
xchg
adcb
xchg
orl
mov
shlb
pop
or
mov
jbe
jmp
and
arpl
or
inc
xchg
xor
xchg
orl
cli
xor
fstpt
sub
mov
clc
pop
push
and
shl
sbb
sub
inc
sbb
or
jbe
jg
dec
aad
shlb
adc
lods
icebp
mov
and
mov
ja
sbb
jge
and
subl
ss
shlb
fcmovbe
sti
in
mov
sbb
je
jle
adc
mov
dec
je
dec
je
jp
fidivrs
jne
lods
pushf
pop
fildl
jmp
mov
decl
dec
es
or
or
or
orl
or
jle
or
int3
mov
jl
sub
push
pop
sub
adc
decl
out
xor
inc
cmp
jb
cmp
ja
stc
add
xor
in
daa
out
movd
inc
ret
mov
push
pop
xor
push
out
cmp
sub
out
in
mov
inc
lahf
push
sbb
mov
push
xlat
cs
in
adc
nop
or
movsl
imul
enter
insb
adc
fdivrp
roll
add
jnp
push
dec
and
jp
mov
sub
or
xor
data16
add
out
and
sub
inc
stc
sbbl
sbb
mull
add
orb
movl
hlt
push
neg
sbb
loope
and
or
and
les
shlb
ret
sub
or
and
test
jns
cmp
call
dec
and
aaa
ljmp
add
subb
mov
jo
xchg
cmpsb
jmp
nop
adc
testb
dec
add
sbb
cmpl
das
pop
add
cmpb
and
or
or
lds
xchg
prefetcht1
xchg
roll
push
je
cmc
mov
out
xchg
icebp
lret
leave
cmp
inc
sub
cld
hlt
mov
cmp
inc
sub
sub
loopne
je
add
sub
jo
insl
add
imul
sub
jle
jge
mov
clc
and
mov
pop
test
movsl
and
inc
test
mov
je
imul
inc
xchg
push
shlb
in
xchg
ds
das
push
push
cmp
jg
subb
std
inc
jp
xor
adc
inc
inc
stc
in
cmpl
rclb
add
xlat
jg
cmp
mov
ss
negl
jmp
or
add
mov
lock
ljmp
sub
push
mov
cmp
xor
std
out
int
xor
cmc
push
sub
ds
jne
pop
cmpl
dec
and
add
xchg
addr16
lock
dec
or
or
and
sub
in
in
out
push
mov
cld
pop
sub
cmp
push
andb
jle
aas
outsb
push
push
inc
dec
push
jne
push
out
test
out
cmp
or
mov
jne
push
add
sub
sbb
inc
add
mov
jmp
and
cmp
jne
inc
je
shlb
sbb
addl
cltd
je
sub
sbb
orl
or
xor
inc
jl
movsb
loopne
jg
je
push
jp,pn
or
and
jne
xor
cs
mov
and
shlb
add
xorb
jmp
and
add
pop
push
jl
or
or
mov
pop
jle
pusha
jg
es
push
xlat
adc
add
rcrb
sub
hlt
mov
add
jmp
or
adc
xchg
sbb
mov
dec
ret
or
mov
sbb
jl
jbe
jg
or
adc
dec
adc
or
adc
pop
mov
xchg
sub
rolb
jmp
push
fildll
lods
mov
adc
sub
xor
xor
adc
sbb
incb
clc
test
pop
dec
pop
cmp
mov
cli
nop
sub
ret
repnz
mov
pusha
sahf
and
cmp
je
dec
mov
aaa
jge
add
lahf
mov
add
in
inc
lock
movsb
pop
inc
loopne
lods
push
add
data16
cmp
sbb
loopne
lock
das
pop
jge
sub
cmp
dec
jecxz
or
andb
sbb
mov
jo
jbe
push
pop
insl
aam
xor
jg
push
or
and
jb
cmp
loop
std
pushl
cmp
jbe
cmp
jbe
cmp
ja
fs
add
shll
test
dec
push
stos
and
gs
inc
push
lock
add
xchg
sahf
out
pop
scas
mov
jp
imul
out
jns
add
push
push
add
add
add
push
and
jmp
inc
dec
jne
inc
push
push
pop
jne
add
or
cmovnp
scas
or
or
aaa
aaa
aaa
imul
or
jle
sbb
and
push
inc
push
lret
or
clc
jo
sub
mov
ds
dec
dec
je
jmp
mov
scas
test
or
fldl
pusha
inc
push
sub
es
mov
push
dec
inc
das
sbb
xor
addb
sub
xchg
cmp
dec
push
rorl
inc
inc
adc
outsb
outsb
outsb
add
inc
jbe
inc
jbe
inc
jbe
sbb
dec
popa
dec
push
mov
subl
push
add
xor
dec
ret
mov
imul
dec
cltd
inc
test
scas
cli
pop
and
adcb
cmc
mov
call
gs
mov
pop
sub
or
repnz
add
adc
out
cld
pop
js
data16
adc
out
faddl
or
pushw
cmp
jns
sub
roll
add
ret
pop
or
add
push
jnp
and
aas
sbb
pop
and
andl
xchg
or
outsb
jb
pop
rclb
or
or
mov
outsb
mov
ss
clc
pop
ja
add
pop
gs
xor
add
add
xchg
lret
cmp
pop
sub
outsb
mov
aaa
test
into
aad
jne
or
mov
imul
dec
in
and
and
and
loop
roll
or
mov
xlat
sbb
cmp
jae
pop
add
aaa
sbb
add
and
push
in
or
xor
adc
push
dec
orb
add
sbb
push
add
or
dec
lcall
fiaddl
and
add
add
mov
sub
inc
sar
mov
sub
call
mov
and
clc
es
nop
jno
mov
xchg
jle
mov
push
and
inc
sbb
mov
ret
mov
cmpsl
and
mov
pop
les
imul
mov
add
and
sbb
and
pop
inc
rclb
sysexit
add
sbb
xchg
xchg
push
shlb
adc
outsl
push
xchg
mov
fisttps
icebp
dec
bound
in
dec
dec
in
rcrb
jae
popf
out
pop
or
push
dec
push
push
push
push
push
out
inc
add
ficompl
dec
or
mov
sbb
bnd
cmp
jo
inc
inc
test
xchg
mov
je
dec
test
push
jne
pop
rolb
pop
testb
inc
out
dec
aam
or
cmp
pop
imul
or
fcmovbe
jecxz
inc
loop
sar
xor
loop
or
sbb
jbe
hlt
in
cmp
hlt
sbb
add
ss
daa
mov
aas
je
mov
dec
inc
mov
dec
ret
jp
or
mov
cmpsb
adc
cltd
mov
std
mov
or
imul
adc
jne
jne
shrl
add
jg
mov
test
pop
stos
add
nop
xchg
sbb
sub
jo
mov
ljmp
jne
push
loop
lahf
je
je
dec
pop
dec
add
sbbb
pop
or
and
push
and
cmp
jmp
jmp
or
sub
mov
fadd
icebp
mov
jne
xor
out
lods
xchg
xchg
xor
je
gs
in
and
or
jns
jb
and
sbbb
hlt
hlt
inc
or
jg
dec
mov
data16
outsb
cmp
add
adc
push
push
pop
shll
cmp
jl
mov
or
and
push
jle
adc
cld
mov
ss
in
ret
aas
incl
pop
or
pop
outsb
enter
mov
clc
and
mov
or
xor
shr
mov
add
dec
shlb
push
lods
and
mov
imull
cli
inc
stc
xor
test
movsl
pop
cli
adc
mov
bound
aaa
cmp
sbb
inc
or
xchg
fsubs
pop
sbb
add
out
sub
jo
fwait
cmp
xchg
or
std
inc
add
push
stc
movsb
or
push
mov
fs
cld
sub
xchg
inc
cmp
add
push
dec
sbb
jle
rorl
shlb
xchg
shlb
stos
push
xor
pop
mov
or
imul
sub
or
fmuls
mov
icebp
sbb
mov
andl
and
pop
jmp
or
test
rolb
gs
fwait
imul
push
push
xor
fisubrl
fcoml
ja
inc
dec
je
sbb
ds
xchg
push
push
xchg
dec
xor
sub
mov
push
aam
mov
in
add
inc
aam
jne
sub
dec
push
popf
int
adc
and
push
mov
fdivrs
jmp
mov
adc
and
mov
pop
test
leave
inc
inc
push
sbb
adc
cli
inc
jne
inc
aam
adc
xor
sub
nop
lahf
add
fwait
add
leave
je
mov
add
dec
and
add
outsb
mov
out
bound
inc
ja
fdivrs
ja
sub
sub
out
fsubrl
je
jnp
or
orl
push
mov
mov
dec
fsubrl
push
jl
loop
sbb
or
mov
inc
mov
cmc
sbb
ss
pop
xor
and
mov
ds
mov
cld
xchg
loope
fwait
mov
je
mov
add
int
ljmp
ss
mov
dec
dec
aam
push
or
out
jge
pusha
push
or
xlat
pop
inc
enter
loopne
int3
adc
outsb
sahf
or
fs
pushf
add
pop
dec
adc
dec
cmpsl
push
in
pop
test
test
jmp
xchg
cwtl
push
or
addr16
lock
lahf
push
pop
inc
cmp
sbb
jo
sbb
add
add
movsb
pop
dec
pop
push
xor
mov
nop
and
mov
inc
data16
test
cmp
jle
push
mov
inc
es
ss
das
daa
mov
mov
ja
cmp
mov
fimuls
xlat
cmp
test
mov
cmp
add
cmp
loop
cmp
inc
lods
mov
movb
push
pop
pop
out
dec
pop
push
bound
fadd
iret
adc
lock
cmp
ds
pop
stos
lods
js
jmp
mov
test
ds
sarl
lods
or
daa
inc
pop
popa
adc
sbb
or
push
cmp
repnz
pop
ss
outsl
push
sub
add
add
loopne
test
jl
movsl
add
test
lea
xchg
dec
add
inc
arpl
in
sti
mov
add
cmp
cmp
sub
cmp
je
in
in
inc
test
sub
xchg
fwait
lods
repnz
cld
add
ja
xchg
mov
jle
fdivrl
pushf
inc
movsl
clc
jmp
add
push
xor
cmp
jl
fwait
adc
push
test
xor
mov
subl
lods
add
and
xchg
cmp
jl
ret
js
iret
push
cmp
mov
mov
mov
adc
mov
faddl
push
lret
insb
pop
sbb
cmp
push
lret
xor
loop
add
pop
into
rcl
sar
loope
mov
stos
and
push
and
push
notb
and
inc
sub
push
dec
vfrczsd
and
test
clc
push
mov
pop
xor
mov
jo
pop
je
sbb
ret
xor
push
pop
fldl
jae
jle
mov
mov
inc
mov
fiadds
pop
mov
mov
add
pop
sarl
add
and
das
inc
loopne
sbb
ret
icebp
mov
push
cmp
outsl
adc
sub
adcb
out
adc
int3
pop
jne
adc
call
out
add
jnp
dec
push
ret
sub
jge
adcb
call
loop
sub
jmp
push
jl
test
outsl
clc
jb
cli
add
inc
mov
push
add
inc
inc
iret
add
pop
insb
sbb
sbbl
or
shld
ja
or
cltd
lcall
pusha
test
xchg
pop
jmp
inc
cli
clc
mov
lea
cmp
dec
add
imul
add
das
or
sbb
push
pop
sti
pop
call
fs
sbb
sub
fisubl
pop
test
push
jmp
pushf
inc
sbb
and
gs
imul
js
sbb
mov
or
add
or
jne
xchg
inc
or
xchg
addl
cmp
mov
test
outsb
fcoms
adc
add
fldenv
cmp
inc
les
push
mov
xor
inc
pusha
sarl
aam
dec
xchg
pop
je
push
icebp
out
mov
adc
pop
loopne
decb
or
or
mov
les
jp
pushf
ret
xchg
sarb
fcoms
ret
mov
push
shrl
mov
jns
fwait
dec
pcmpeqw
repnz
test
sbb
mov
or
je
scas
ds
nop
into
adc
sub
cmp
and
jb
cmpsl
rolb
pop
add
inc
or
into
testb
jmp
imul
push
add
int3
inc
call
pop
xchg
cli
jmp
cmp
sub
inc
inc
or
add
sbb
stos
sar
fcoml
and
push
jo
sbb
push
cmp
push
push
cmp
cmp
fldl
dec
xchg
ljmp
sbb
push
pop
pop
ja
or
pop
dec
rcll
push
daa
aas
and
movsl
popf
mov
push
sbb
pop
mov
adc
jmp
cmp
add
sub
pop
or
fmul
lock
test
adc
xchg
icebp
sbb
dec
sub
fistpl
stos
cmp
data16
jae
inc
xor
xchg
test
or
bound
pop
fiadds
movl
outsb
mov
adc
fiaddl
jne
das
rorl
es
push
dec
cmpb
decb
nop
out
jne
cmpsl
sub
js
incb
testb
push
dec
cmp
call
stc
jmp
sbb
dec
mov
roll
push
add
jl
jo
jge
pop
add
add
push
xor
push
mov
cwtl
push
daa
cmp
inc
push
subb
shlb
xchg
or
outsb
popa
cmp
mov
add
add
dec
ret
sahf
scas
push
push
inc
sbb
jp
aam
lock
ret
cmp
push
into
incl
ss
xchg
adc
into
xor
push
or
rorl
subl
push
lahf
call
sub
push
cltd
and
fdivrs
jne
sub
sub
in
or
lea
mov
rdmsr
or
jge
or
mov
jmp
pusha
mov
insb
mov
xor
mov
aaa
pop
ja
jne
xor
out
loope
dec
dec
adc
dec
sub
or
add
inc
or
aas
jo
cmp
sub
mov
insl
enter
fs
cs
scas
xor
and
adc
dec
xchg
cmpsb
push
jo
pusha
outsl
mov
mov
shrb
call
push
mov
and
fadds
cmp
adc
test
mov
mov
mov
xor
ja
xchg
shrb
lahf
movsb
out
and
jecxz
aas
xchg
or
push
fiadds
add
pushf
add
lock
sub
mov
in
test
xor
in
cmp
gs
xchg
rcll
add
int
out
dec
enter
jne
sahf
addr16
stos
pop
sub
scas
add
or
lret
sbb
sbb
scas
sub
sti
push
je
or
jge
sbb
gs
add
jo
add
outsb
fs
pop
push
je
daa
es
rolb
add
leave
les
aad
push
mov
dec
and
daa
pop
in
stos
mov
lret
adc
sub
inc
cwtl
and
xchg
jnp
mov
xchg
jle
aad
stos
adc
loopne
fstps
jo
pop
icebp
es
mov
dec
jmp
fwait
loop
inc
sbbl
xor
push
and
push
movhps
add
inc
cli
pop
lea
sbb
inc
cwtl
push
sub
jecxz
xchg
lods
test
pop
pop
inc
mov
push
pushf
arpl
leave
cmp
out
dec
mov
adc
cmpsl
push
add
cmp
enter
adc
pop
in
fwait
rorb
mov
sub
pushf
add
jmp
jmp
xchg
push
fcompl
dec
mov
movsb
sub
pop
sbb
cld
sub
pop
insl
adc
fmulp
add
test
test
or
dec
pop
xlat
mov
stos
push
decl
and
push
or
jo
jo
xlat
pop
stc
or
inc
lock
stos
dec
mov
ljmp
jl
sbb
insb
push
push
mov
mov
inc
xchg
pop
aaa
movsb
inc
and
shl
or
cmp
xchg
pop
mov
mov
xor
push
out
mov
xchg
clc
adc
mov
repz
dec
neg
test
pop
cmp
jo
in
aaa
je
mov
adc
mov
and
cmp
shlb
or
push
push
push
loopne
push
fcmovnb
lock
cmp
clc
pop
jne
jecxz
add
sbb
xorb
mov
sahf
and
lods
scas
and
lea
rep
xchg
add
adc
adc
mov
push
add
jg
lret
clc
imul
and
ficoms
addr16
mov
xor
push
inc
mov
ja
mov
sub
or
push
inc
cmp
mov
mov
stos
xchg
adc
inc
xchg
sbb
add
test
dec
mov
pop
push
ds
inc
add
or
popa
fldenv
ret
mov
enter
insl
scas
cmpsl
jge
or
pusha
and
adc
adc
mov
or
pop
enter
jbe
dec
loopne
out
fsubrl
rolb
adc
add
jg
and
or
lret
add
mov
inc
cs
fisttps
cmpsl
mov
and
lds
jl
xor
add
pop
je
adc
mov
or
jl
jbe
mov
jmp
not
and
out
dec
lcall
and
movsl
pop
and
iret
mov
or
loopne
pop
and
adc
not
or
inc
mov
fwait
js
jmp
sub
and
pusha
or
movsl
mov
js
scas
mov
insb
mov
pop
lock
lock
addr16
mov
js
loopne
pop
xchg
inc
add
fcmovnb
pushf
pop
jmp
adc
push
bound
mov
and
into
stc
xor
push
and
addl
clc
push
sbb
mov
push
cs
pop
cmpsb
mov
xchg
xlat
lcall
mov
mov
xor
jae
jnp
das
adc
add
or
lods
cmp
or
mov
fadds
cmp
xchg
mov
orb
mov
repnz
or
lock
int3
lcall
in
mul
xchg
out
pop
neg
clc
roll
enter
bound
xor
insl
sub
sbb
dec
nop
aam
psllq
mov
pop
movsb
dec
int3
inc
or
sub
push
xchg
mov
adc
sub
daa
pop
lret
mov
je
sbb
push
jne
inc
adc
clc
nop
or
jmp
pop
add
adc
fwait
pop
adc
das
mov
add
clc
je
adcl
jne
mov
xlat
test
push
or
pop
cmpsl
iret
xor
out
add
pusha
pop
add
or
mov
add
popl
ss
dec
xor
fdivs
clc
xor
cmp
inc
in
xor
pusha
cld
push
or
mov
or
icebp
stos
mov
pop
cmp
jo
push
sub
pop
cmpb
push
jle
dec
add
jg
cltd
inc
pop
lcall
add
dec
bound
push
or
cmp
sub
clc
cwtl
rolb
adc
decb
add
add
jg
push
and
rorb
jmp
cmp
dec
fimuls
pop
pop
inc
inc
jmp
and
cld
pop
add
lods
mov
dec
mov
loope
mov
shl
sar
push
mov
mov
divl
adc
push
dec
dec
pop
mov
inc
cmpsb
jle
xchg
scas
xor
addb
or
sarl
adc
repz
loopne
pop
mov
xor
push
jmp
cmpsl
test
clc
or
fs
outsb
test
ds
xor
cmpsl
adc
xchg
jge
mov
xchg
jnp
sbb
cmp
out
je
andl
dec
aad
sub
pushl
mov
loopne
testl
push
or
cmp
pop
pop
les
jecxz
lcall
push
xor
or
mov
outsb
and
push
jle
int3
in
jno
sti
inc
cmp
jl
cmpsb
mov
mov
mov
ja
shrb
adc
inc
jns
xchg
or
mov
rolb
sti
data16
or
jmp
sub
insl
sete
xlat
inc
or
adc
repnz
je
push
or
inc
sbb
sbb
push
jle
or
test
insb
std
ds
sub
cli
and
mov
sbb
mov
xchg
mov
add
lods
xchg
daa
andb
dec
add
in
pop
loop
lock
add
add
and
mov
push
rep
pop
mov
xor
mov
inc
dec
jne
jmp
ds
cmpsb
loopne
cwtl
cmp
jne
or
pop
mov
int3
arpl
or
inc
inc
in
add
push
pop
inc
in
and
inc
sub
add
dec
and
insl
repnz
mov
adc
push
lcall
aas
ss
pop
enter
int
mov
cmp
inc
mov
rorb
sbb
push
pop
pop
pop
adc
sub
cmpsl
add
cmp
add
xor
jle
pop
rorb
insb
jb
xorl
repnz
movsb
jp
nop
inc
fmulp
jae
sarl
rcl
test
inc
or
testb
cmp
dec
sub
adc
pop
addb
lock
xor
jl
pop
xor
sub
sub
jne
jp
pusha
mov
pop
cmc
mov
sarb
push
jecxz
ret
icebp
inc
popa
push
rcrb
jge
pop
cltd
add
shrl
pop
xor
fninit
adc
push
data16
inc
lea
cmp
movsb
jo
pop
or
push
sbb
add
mov
nop
mov
dec
add
ss
mov
pop
inc
pop
mov
rcll
sbb
xor
xor
fcoms
or
movsb
bound
pop
ljmp
push
mov
outsb
xor
cmp
pop
scas
cmp
jmp
mov
fsubrs
jnp
dec
xchg
sub
mov
enter
push
xchg
sbb
push
sbb
sub
add
mov
add
imulb
and
dec
push
jne
jb
mov
push
and
and
add
add
sbb
daa
pop
xor
cmpsl
cmc
add
pop
inc
rolb
mov
lcall
sbb
dec
ja
adc
mov
add
sub
and
and
ss
pop
inc
das
mov
shll
add
mov
mov
sbbl
int3
jae
xor
test
jle
and
inc
xchg
sbb
leave
pop
xor
dec
push
inc
shlb
push
dec
and
into
add
jne
jmp
jmp
sbb
xor
push
dec
iret
inc
inc
cmp
inc
jge
int
shlb
jns
and
ss
pop
jl
fsubrs
into
inc
loop
cld
or
repnz
sub
mov
or
bnd
loope
pop
sbb
adc
testb
addb
stos
sti
sub
mov
mov
inc
fs
add
js
add
jmp
dec
push
shl
adc
insb
inc
and
inc
les
inc
std
mov
je
mov
push
add
shr
jg
ficompl
dec
pop
inc
lds
sbb
lret
add
sbb
aas
pop
stc
jne
sbb
push
xchg
and
jne
adc
psubb
push
jbe
inc
adc
aam
sub
xchg
sar
push
pop
fistl
fadd
mov
inc
repz
and
testb
jne
call
or
or
jne
add
adc
jne
dec
and
jge
pop
xchg
sbb
sbb
fmuls
clc
lods
xor
rcll
mov
mov
or
cmp
movsl
movb
je
cmp
lcall
dec
jmp
dec
pop
and
push
loop
mov
loope
dec
dec
lock
mov
sbb
pop
xor
dec
je
push
sub
hlt
add
je
js
js
jle
pusha
mov
mov
mov
rcr
and
inc
dec
lret
add
jb
shl
scas
movsb
mov
popf
cmp
jmp
add
add
sub
mov
add
mov
push
jge
sub
sbb
lods
push
push
and
scas
inc
cmp
mov
test
jge
mov
pusha
shrl
sbb
pop
push
int
imul
cmp
fsubrp
push
push
xchg
leave
icebp
pop
test
jl
mov
sbb
jmp
mov
aad
add
outsb
je
xchg
push
ss
cmp
or
push
inc
adc
mov
mov
add
xor
xchg
jmp
sbb
and
jecxz
xor
and
leave
pop
pop
ret
dec
lret
cmp
shlb
call
loope
adc
jo
movl
test
movsb
das
adc
je
fdiv
divb
and
es
dec
add
movb
and
xchg
das
and
jmp
and
je
mov
outsl
xor
push
sub
bound
shl
xchg
push
inc
cmp
sbb
cmp
and
add
and
loopne
dec
xchg
inc
lock
sub
pop
and
mov
dec
push
divb
aaa
mov
jmp
scas
aas
jmp
or
jmp
cmp
add
push
sbb
sbb
inc
inc
xchg
push
andb
adc
jno
out
and
inc
ficoml
pusha
femms
jbe
pop
cmp
dec
push
in
sub
in
inc
ficompl
sbb
sbb
sbbl
roll
or
or
xchg
add
rcrb
push
stc
sub
dec
pop
push
adc
imul
pop
inc
or
mov
mov
adc
or
inc
ret
enter
sub
push
leave
ret
test
xor
pop
call
adc
sub
push
sarl
dec
adc
cmpsb
pop
and
push
movb
pop
ret
or
jno
add
sbb
lea
je
push
and
subl
movsb
adc
inc
and
mov
add
jb
jl
sbb
test
popl
sahf
scas
or
cmp
push
xorb
xor
lds
sbb
or
xor
mov
ret
cli
mov
in
int
cmp
dec
mov
cmp
or
push
inc
jmp
and
push
outsb
adc
xor
int
fistl
xchg
cmp
and
push
xor
add
push
or
and
add
int3
or
fadd
rcll
push
cmp
je
adc
or
or
punpckhbw
lock
cmpb
jne
push
or
mov
dec
mov
sbb
fadd
roll
pop
fcoml
fistl
mov
xor
cli
push
pop
decb
or
rclb
lcall
cmp
mov
les
xchg
clc
adc
add
into
fcmovb
jg
cmp
cmp
push
loopne
fcmovbe
andb
sbb
adc
stos
adc
cmp
sub
lds
mov
push
add
mov
push
xor
stos
cld
sysenter
and
add
sub
or
pop
sbb
cmp
or
and
les
push
and
sbb
push
dec
lcall
data16
sbb
add
push
je
insb
imul
andb
or
push
push
lcall
adc
je
xor
mov
or
cmp
adc
mov
or
fsub
jbe
out
xor
je
add
add
sub
repnz
ss
add
push
sub
repz
ljmp
sbb
lods
dec
jbe
or
dec
push
sbb
xor
aas
add
xor
dec
or
push
or
jp
movsl
push
test
adc
mov
jae
lock
push
dec
in
push
push
dec
jl
jecxz
dec
jno
or
adc
add
mov
les
mov
jg
je
fcomi
pusha
sbb
or
jle
sbb
clc
sub
fwait
pop
and
inc
inc
shll
xor
adc
pop
lds
or
push
xchg
loop
add
mov
imull
insb
lock
lock
and
sete
push
push
ja
xchg
aad
jecxz
jl
scas
mov
cmp
mov
push
xchg
insb
mov
leave
pop
inc
push
lods
dec
inc
lock
xchg
cld
arpl
pop
cwtl
in
add
sbb
mov
lods
push
in
adc
mov
or
or
and
add
dec
clc
dec
mov
clc
cmpsb
js
jl
push
jmp
fisubl
test
cwtl
sbb
ds
jne
push
dec
mov
pop
add
sbb
pop
cmp
cwtl
push
push
or
ret
rcrb
mov
fwait
test
pushf
je
cmp
mov
xor
mov
inc
push
xor
jmp
mov
fcoms
cmp
jmp
aam
cmp
or
pop
jmp
push
or
in
or
jmp
push
xchg
in
dec
out
loopne
push
mov
cli
movsb
add
mov
cmpsb
sbb
int3
les
bound
inc
mov
cmc
test
jne
xchg
insl
clc
add
in
cmp
loop
call
push
add
stos
inc
loopne
dec
test
jp
push
clc
outsl
pop
daa
cmp
cmpsb
jle
ljmp
push
adc
int
sarb
lahf
fiadds
mov
call
cs
pop
xor
xchg
inc
push
inc
cli
shlb
adcb
data16
lcall
adc
data16
sahf
lods
rorb
sbb
push
mov
jne
inc
push
xchg
shlb
rcr
sub
lock
stos
mov
jl
cli
fsts
negb
push
adc
add
xor
adc
push
pushl
add
lock
mov
clc
push
loope
cmp
test
push
clc
loope
les
push
enter
cmp
jns
xchg
fmuls
dec
cmp
and
cltd
rolb
das
push
xchg
out
ret
nop
bound
fwait
ret
loop
pop
and
add
shll
dec
push
test
lods
mov
xchg
clc
xor
jo
sub
xor
pop
cld
push
mov
push
cmp
dec
imul
shrb
or
lock
mov
je
jmp
shlb
cmp
cmp
shr
test
xor
xchg
mov
add
cmpsb
cmpsl
jmp
add
xchg
and
enter
or
push
mov
inc
sbb
or
fldt
jge
cmp
aam
sub
mov
testl
add
jno
add
fmull
nop
adc
sbb
test
xlat
inc
sbb
and
sbb
pop
xor
sub
add
negl
xor
mov
pop
add
add
push
fwait
mov
xor
js
leave
mov
push
push
jl
lret
outsb
dec
pop
loope
push
cwtl
or
fldenv
cltd
xor
lret
insb
cmp
inc
mull
adc
add
cmpl
outsl
je
mov
shll
movsb
add
cld
pop
mov
xchg
iret
mov
or
or
xchg
loopne
outsb
inc
jl
jg
lcall
ret
push
gs
or
movsb
xlat
mov
or
data16
xchg
mov
inc
int3
and
cmp
dec
dec
push
shr
or
dec
nop
loopne
pop
inc
pusha
push
testb
cmp
jmp
inc
mov
cmp
pop
and
jmp
test
rorl
sti
adc
jmp
or
nop
mov
mov
daa
bound
xor
sbb
pop
stos
sub
cmp
push
dec
dec
push
outsl
sahf
out
sahf
test
andb
je
clc
or
incl
add
mov
add
sub
cmp
jle
adc
dec
loope
testb
xor
pop
ds
and
add
std
sub
dec
inc
inc
cmp
jne
fdivrl
mov
cmpsb
jmp
ret
mov
mov
sub
std
or
push
sub
jmp
jle
addl
jo
and
inc
jae,pt
sub
jnp
and
and
push
add
mov
jl
xorl
dec
jo
stc
call
data16
into
outsl
inc
insb
lea
inc
mov
in
mov
repnz
xorb
adc
or
and
or
add
jo
inc
ret
xchg
mov
je
cmp
jb
or
or
test
dec
lds
push
push
movsb
sti
ss
mov
scas
mov
call
mov
dec
pop
out
jmp
xorl
add
xchg
cmp
add
push
jne
cs
pop
jne
fcoms
inc
add
push
adc
pop
or
cmp
add
jmp
cmp
dec
fisubl
aas
sub
adc
mulb
pop
push
and
dec
adc
push
xorb
jno,pt
test
je
jno
orl
mov
lock
add
subb
adc
adc
xchg
add
addr16
mov
push
push
inc
lods
add
push
adc
or
cmp
outsl
inc
add
inc
inc
cmpsl
shll
jo
cmpsb
int3
mov
jo
inc
push
push
je
dec
ret
fidivl
insl
lret
or
call
pop
xchg
add
mov
and
pop
icebp
pop
add
rcll
scas
mov
jmp
scas
shrl
idivb
jecxz
cld
out
pop
xor
dec
cmp
jb
dec
mov
and
out
fnstsw
je
cmp
jmp
sub
cmp
sub
cmpl
aas
jb
rcrl
adc
or
nop
cmp
inc
sti
test
jbe
cwtl
sub
cmp
int
sti
add
mov
ret
mov
dec
adc
andb
jo
nop
shrb
inc
dec
lods
rorb
xchg
push
and
jge
inc
pushf
dec
ret
inc
rorb
and
lret
push
and
and
daa
das
add
mov
cli
aam
lcall
dec
add
adc
push
inc
dec
insl
inc
in
add
lret
xchg
jo
push
xorl
insb
xor
xchg
push
push
inc
lock
mov
inc
inc
push
stos
mov
mov
mov
in
imul
fsubrp
inc
xchg
or
xlat
xchg
jb
cwtl
mov
cmc
adc
adc
push
sbb
test
faddl
cmp
enter
int
push
push
jno
imul
push
pop
lock
and
xchg
xchg
ljmp
xchg
push
add
or
push
or
dec
lods
fdiv
fs
mov
adc
sub
sub
call
sub
mov
mov
mov
test
in
aam
mov
fdivrs
mov
push
iret
je
cmp
sub
mov
pop
lods
push
into
enter
test
dec
icebp
je
mov
xor
cmpsb
push
mulb
rorl
sbb
bound
hlt
jb
fwait
dec
dec
xchg
and
push
je
inc
inc
cmpsl
imul
jge
cmc
and
xchg
sbb
mov
mov
push
push
mov
leave
mov
out
and
xor
enter
jecxz
incl
cmp
repnz
and
or
lock
cmp
inc
jb
inc
and
cmc
cmp
jmp
js
add
fsubr
in
inc
add
subl
enter
in
xchg
push
or
cs
shll
push
sahf
sbb
imul
add
fsubl
jmp
or
push
enter
adc
or
cmp
and
xorl
fs
arpl
add
int3
pop
addr16
lock
xchg
test
fsubl
sbb
sub
in
enter
jnp
enter
push
mov
cmp
in
mov
icebp
xchg
and
in
add
jbe
push
test
add
popf
movsb
jmp
adc
or
inc
add
dec
shl
stc
lahf
test
mov
popa
repz
and
cmp
inc
sub
xchg
xor
pop
clc
mov
rcrl
lret
mov
cmpsl
in
push
in
jl
push
ret
lcall
lret
cmp
or
dec
ret
fisttpll
mov
inc
adc
sub
je
cmp
shlb
mov
inc
cmpl
xchg
orb
cwtl
loopne
push
or
sbb
notl
shlb
mov
sbb
lock
mov
add
jle
clts
mov
xor
jmp
push
dec
adc
and
push
or
add
pop
pop
mov
pop
inc
cmp
xchg
or
sbb
pop
ret
pop
sub
adc
aad
dec
arpl
outsb
dec
jo
xor
push
and
mov
cmpsl
push
fs
pop
daa
call
sub
sbb
mov
ret
mov
or
cmp
pop
mov
push
sub
dec
scas
push
mov
push
xor
test
data16
loop
inc
in
ret
sbb
pop
fisubrs
push
and
inc
and
sub
ret
mov
cmp
sbb
jmp
xchg
mov
nop
jecxz
stos
std
lret
xor
fdivrs
insl
clc
push
mov
jno
adc
out
inc
push
and
push
jg
xchg
es
add
outsb
mov
sub
int3
and
repz
xchg
lret
cmp
sti
sub
and
out
fcomps
in
cmpl
cmpl
sub
in
jg
repz
mov
in
mov
pop
sbb
orb
adc
xchg
sub
test
imul
push
daa
and
sub
aaa
xor
sbb
cmp
or
mov
das
adc
jns
inc
call
or
adc
outsl
or
mov
push
sub
into
ret
pop
fsubrl
cmp
push
cmp
xlat
sbb
adc
sarb
insb
add
pusha
or
sub
mov
adc
fiadds
xor
pusha
fldt
or
pop
sbb
sub
outsl
inc
popf
test
mov
jl
call
mov
sub
push
stos
mov
mov
pop
repnz
test
sbb
fdivl
call
insb
stos
pop
and
jnp
rcrl
dec
decb
and
push
lea
and
clc
xor
cltd
mov
in
cmp
pusha
push
or
test
sub
mov
insl
dec
mov
push
jl
pop
imul
sbb
inc
inc
mov
push
enter
je
sbb
xchg
inc
mov
pop
dec
cmp
adc
cli
fdivrl
dec
mov
push
fmull
adc
mov
inc
shl
xor
out
lods
loop
sub
loop
jp
add
or
loopne
cmp
jl
cmc
and
mulb
jg
xor
jge
shl
inc
test
jle
push
in
and
mov
push
loopne
dec
dec
cmp
aam
push
mov
aam
inc
sbb
lds
push
dec
xchg
je
push
or
mov
push
sbb
inc
cmp
faddl
and
js
or
cmp
adc
xchg
cltd
mov
insl
fsub
sbb
cli
mov
call
cmp
movsb
ljmp
mov
jno
push
mov
xchg
ret
push
xchg
cs
pusha
add
inc
inc
inc
jb
mov
or
nop
inc
aad
loop
fadds
loopne
xchg
pushf
dec
pop
cmp
dec
lods
jnp
add
mov
xor
es
ret
insb
mov
jl
inc
pusha
xor
clc
pop
pop
add
gs
sub
mov
sbb
xor
icebp
outsb
xorl
cltd
push
les
add
pop
mov
add
mov
add
loope
test
sahf
push
xor
rcrb
add
ss
movsb
lock
pop
jmp
adc
pushf
cmp
gs
adc
adc
inc
jno
in
test
mov
sbb
pop
cmp
dec
inc
add
loopne
orb
inc
clc
rorb
sbb
mov
adc
xor
sahf
add
insl
mov
jo
pop
and
cli
add
jo
test
call
hlt
inc
adc
ret
test
mov
fistl
ss
push
cmp
mov
jmp
sbb
mov
icebp
sbb
jmp
mov
adc
sbb
lret
jmp
push
loop
sbb
cmp
insb
pop
sarb
xchg
cmp
in
push
add
lock
sub
jl
rcr
pop
icebp
cmpsl
dec
add
je
or
in
fimuls
sub
or
push
inc
adc
inc
push
inc
scas
sbb
lret
fsubrs
xchg
cmp
ret
sub
push
cwtl
pop
nop
sbb
repz
cmpsb
xchg
and
in
push
dec
test
sub
cmpsb
ljmp
in
test
adc
mov
sub
sub
ja
lret
cli
fiadds
inc
push
jl
mov
add
mov
cmpsb
add
and
sbb
mov
in
inc
insb
and
stos
popa
aaa
mov
and
and
imul
loopne
subb
xchg
mov
push
out
push
mov
outsb
adc
add
jno
pusha
inc
inc
in
inc
fimull
aaa
mov
sub
cmpsl
inc
push
push
and
xchg
push
inc
xor
mov
add
clc
pop
jae
popa
xor
mov
push
dec
es
pushf
mov
in
ljmp
inc
pop
push
jns
sub
loopne
cltd
sub
enter
les
jno
cmp
push
xor
clc
clc
sub
dec
or
js
jg
xor
dec
mov
or
fadd
cmc
push
stos
add
mov
jp
je
ljmp
stos
lret
mov
ds
stos
out
sti
push
xchg
jbe
xor
xchg
gs
adc
or
fcoms
dec
cmc
dec
aad
xor
and
jmp
jnp
aaa
in
pop
pop
xchg
xor
jo
mov
jne
stos
ja
outsl
ds
scas
mov
jns
cmp
shl
jecxz
xchg
lahf
jmp
xchg
mov
xlat
sbbl
mov
movl
adc
jo
jmp
pushf
stc
jl
mov
mov
lcall
jle
cmp
int
out
mov
sarb
cmp
adc
out
push
add
mulb
and
sub
nop
push
popl
fs
in
clc
in
push
and
js
sub
lcall
adc
filds
lahf
xlat
bound
cmc
out
aas
lock
xchg
add
dec
std
into
push
arpl
inc
cmp
enter
xchg
aaa
imul
mov
enter
data16
jl
int
sbb
and
clc
fmull
add
movsb
fdivr
jg
lea
pop
outsb
cwtl
adc
out
cmp
cmpl
cmp
lahf
das
pop
add
sarb
push
lret
inc
or
add
dec
push
loop
and
pop
or
ss
mov
and
out
add
inc
xchg
fwait
adcl
dec
cmp
pop
mov
scas
inc
sbb
push
loop
mov
xor
jns
push
mov
jbe
leave
cmp
push
roll
bound
dec
lods
mov
sbb
xlat
add
jno
jae
scas
and
sbb
inc
xor
aaa
pop
stos
inc
cmp
test
scas
add
and
rcrl
mov
les
cmp
dec
test
add
or
jmp
loope
lcall
adc
pop
push
sbb
push
push
data16
pop
mov
sbb
and
stos
or
sbb
jecxz
daa
rcr
cli
lret
and
lret
inc
dec
adc
dec
sahf
jp
push
xor
out
lss
pop
pop
xchg
mov
clc
adc
or
xor
in
dec
cmp
push
mov
lret
in
or
mov
push
jbe
mov
sbb
push
jp
jmp
xor
sahf
and
test
shll
jo
ret
and
leave
xorl
aad
push
mov
aaa
cwtl
adc
test
dec
jno
or
mov
add
addl
sub
cltd
testb
mov
and
inc
or
leave
add
add
adc
push
xchg
sub
sbb
clc
xor
inc
xor
mov
sbb
add
dec
and
push
jb
or
or
es
cld
add
in
mov
sbb
ja
adc
or
jae
popa
and
xlat
inc
cmpsb
insl
das
or
test
add
outsb
cmpsl
repnz
leave
or
adc
push
clc
in
aaa
leave
push
or
push
inc
add
loopne
fsts
outsb
mov
xchg
cmp
or
sbb
push
cmp
pop
sarl
sarl
and
jmp
fisttpll
push
inc
xor
insb
cmp
cmpl
jbe
mov
sub
add
mov
dec
test
dec
mov
imul
xchg
adc
or
push
leave
enter
mov
subl
dec
xchg
cmp
xor
les
dec
lahf
adc
cmpb
das
fisttpl
adc
movups
jbe
out
int3
adcb
jle
mov
fs
sub
test
add
outsb
sub
cmc
jnp
popa
and
jo
imul
hlt
push
dec
movsl
or
sbb
inc
loopne
fnsave
leave
leave
subl
or
nop
out
jmp
and
gs
add
add
or
pusha
enter
faddl
adc
das
insb
push
addb
cmpsb
xchg
push
in
and
add
cmp
xchg
jmp
into
testl
jmp
sbb
or
je
or
jns
push
adc
and
sub
or
inc
hlt
sbbb
ficoms
xchg
rolb
loopne
popf
mov
arpl
shll
push
adc
aas
outsl
and
and
test
cmpsb
mov
xchg
mov
test
add
and
jb
inc
leave
testl
fwait
inc
push
inc
pop
add
push
add
dec
push
and
mov
scas
add
dec
dec
rorl
addl
mov
repz
dec
add
into
cltd
xchg
aam
lock
mov
or
stc
cmp
or
mov
sbb
fwait
addb
frstor
xchg
pop
push
outsl
cmp
xchg
push
lcall
add
loope
push
jne
inc
and
add
add
sbb
sbb
aam
jae
mov
or
or
loopne
push
push
mov
into
sarb
sbb
adc
jle
cmp
mov
loope
sahf
pop
jno
dec
test
dec
imul
arpl
jne
inc
jmp
push
push
cmp
push
je
inc
cmp
enter
adc
pop
cwtl
pushf
movsb
sbb
je
xchg
pushf
pop
cmpsl
lds
fcomps
sub
xor
imul
add
adc
push
push
es
push
sbb
les
loopne
cmpsb
mov
imul
add
inc
pop
add
inc
mov
pop
add
jno
push
add
and
cmpb
push
lcall
and
push
in
test
inc
sbb
and
pop
sbb
push
mov
xchg
jo
xchg
sbb
push
add
pusha
fs
sbb
mov
and
clc
mov
mov
aam
push
mov
lock
aad
scas
shl
cmpb
jp
xor
push
lret
xchg
arpl
fmuls
lea
fidivl
and
jmp
add
add
mov
or
clc
pop
repnz
xchg
fldcw
or
inc
arpl
shl
or
pushf
dec
cmp
dec
inc
fmuls
aam
or
shlb
dec
pop
mov
pop
xchg
ret
sbb
xor
pop
push
cwtl
in
or
sbb
movsb
sbbl
add
sarl
mov
mov
es
mov
inc
pusha
pop
loopne
dec
dec
pop
add
sub
adc
adc
rcll
xchg
clc
xchg
repz
pop
pop
push
cmp
mov
or
aaa
pop
dec
mov
dec
cmp
mov
push
mov
call
and
xchg
mov
arpl
pop
adc
sbb
int3
jg
lea
jmp
add
and
mov
enter
sbb
xchg
adcl
sbbl
inc
pop
dec
fstl
pop
lock
cmp
adc
inc
cmp
ljmp
dec
push
xchg
cmpsl
pop
push
or
ret
aas
aad
icebp
rol
cmp
jg
mov
or
js
mov
adc
and
push
adc
xchg
cmp
aad
push
inc
ret
nopl
xchg
mov
mov
push
ss
add
addb
xor
push
pushf
cmp
xorl
popa
mov
jge
cltd
push
and
loopne
lds
xor
test
insb
and
pusha
push
mov
std
adc
jo
cltd
rclb
push
and
jb
adc
adc
ljmp
test
lret
arpl
fstps
xor
mov
rorb
sub
stos
cmp
loope
mov
test
ja
mov
leave
mov
enter
iret
jb
in
movl
sbb
enter
rcrl
cmp
inc
and
test
rorl
insb
mov
and
dec
and
cld
mov
outsl
add
pusha
nop
or
push
ret
or
mov
inc
mov
adc
scas
dec
or
and
adc
push
adc
dec
inc
fstl
adc
push
aaa
xchg
pop
mov
inc
dec
arpl
inc
call
jle
jae
sub
sahf
sbb
andb
loop
fists
or
pop
adc
fcomps
adc
sbb
inc
cli
fists
orl
aam
mov
aas
shr
xor
add
test
mov
rcrl
stc
stc
dec
sbb
scas
dec
adc
mov
sub
pop
loopne
lcall
jb
sahf
and
jo
addr16
ljmp
or
aam
adc
aaa
addr16
mov
or
enter
test
clc
mov
jbe
add
cmp
cmp
movsb
push
popa
xchg
mov
mov
ret
ss
pushf
inc
repz
dec
or
inc
test
mov
cmp
adc
or
mov
push
push
clc
nop
mov
popa
aaa
loopne
gs
push
popf
arpl
inc
ret
or
idivl
mov
divl
rclb
xchg
and
push
sbb
imull
and
push
jb
add
out
fs
cmp
notb
testb
add
and
repnz
call
jle
aam
push
rolb
lcall
aaa
sub
jp
push
or
jg
icebp
outsb
add
inc
cmc
jmp
xor
push
js
push
xlat
cmc
sarl
push
dec
and
or
dec
shlb
subb
adc
adc
mov
je
xor
addl
jns
dec
push
sub
pop
sbb
test
add
jl
aas
adc
jmp
inc
mov
sub
pop
add
adc
push
add
in
jbe
xor
add
rorb
in
dec
push
fdivp
sub
and
or
adc
lods
mov
cld
stos
hlt
inc
inc
mov
adc
sub
mov
inc
lret
pushf
in
lds
jne
hlt
sbb
cmpb
mov
sar
jae
cmpl
clc
stc
in
add
pop
pop
push
adc
dec
xchg
inc
inc
fcomi
loope
lea
push
sbb
fldpi
and
add
out
adc
aam
sbb
shl
xchg
mov
adc
imul
adc
into
push
jl
cmpb
jne
adc
lcall
jns
push
jp
out
mov
cs
roll
rclb
dec
dec
ja
out
push
cmc
jbe
je
jno
pushw
out
lcall
add
sahf
idivb
aas
inc
adc
xchg
xchg
sti
cmp
repz
int3
repnz
fimull
add
mov
jl
lcall
arpl
add
jge
int
int
jb
cwtl
push
pop
jo
adc
push
hlt
cmpsb
inc
filds
imul
or
or
push
movups
adc
adc
add
push
pop
sbb
sbb
sbb
sbb
xchg
jmp
and
and
and
cmp
sub
sub
cs
xor
ja
xor
add
xor
ss
add
cmp
nop
xlat
mov
dec
cmp
mov
mov
fmulp
data16
mov
mov
mov
xor
negl
mov
cmp
testb
lea
push
fcoml
dec
mov
lcall
xchg
mov
mov
push
or
fmuls
xchg
cmp
sub
into
pop
cmp
mov
push
push
or
push
and
dec
pop
jbe
repnz
mov
movsb
push
iret
repz
pop
cmpsb
addr16
orb
push
xor
popa
xor
add
test
push
jg
jge
test
jo
dec
push
incl
dec
or
pop
shrb
incl
outsl
xchg
push
add
xchg
and
cltd
cmpsb
adc
fiaddl
inc
and
xor
lahf
add
mov
cmp
dec
add
cmp
jne
test
xchg
divb
jbe
jl
push
icebp
mov
sub
inc
ljmp
movsb
dec
pusha
jle
ret
adc
test
push
scas
inc
adc
pusha
data16
repnz
push
add
or
sahf
test
or
or
push
inc
mov
je
cmc
xchg
cmpl
dec
test
dec
push
enter
cmpsl
mov
stos
divb
inc
popf
aam
scas
pusha
in
fimull
sub
and
push
adc
add
jnp
lock
adc
mov
sbb
pop
add
ret
inc
sbb
scas
enter
xchg
dec
lret
insb
insb
xor
aam
loop
inc
or
leave
xor
mov
adc
xor
or
xchg
and
jmp
add
push
test
aam
or
setnp
je
in
loopne
mov
cmpsb
sbb
or
les
add
ds
adcl
lods
aaa
out
xlat
and
scas
cli
lcall
and
loope
rclb
push
xor
mov
sbb
mov
es
ljmp
lea
push
rorb
or
jns
mov
push
adc
push
inc
shlb
repnz
xchg
push
jb
lods
xchg
push
inc
mov
push
mov
or
jo
and
pop
jo
mov
and
mov
std
sub
je
cmp
xchg
cmc
aas
add
inc
imul
outsb
stos
cltd
push
imul
cli
data16
lods
insl
mov
sub
cltd
pop
idiv
push
add
adc
and
cli
cli
xor
xchg
imul
movsl
adc
mov
push
test
pop
sub
call
or
nop
decl
sar
inc
lea
sub
popa
pop
or
xchg
cmp
jle
jae
mov
inc
je
stos
bound
xchg
movsl
cmpsb
dec
outsl
add
mov
mov
sbb
lods
nop
rorb
or
mov
es
divb
dec
lea
push
adcb
jp
lret
mov
xchg
sbb
test
add
shlb
fmuls
or
sbb
xchg
stc
jae
sub
dec
mov
adc
pop
cmp
cmp
test
sub
jae
add
dec
inc
mov
popa
outsl
jno
push
dec
jne
lods
std
fildl
hlt
sub
cmp
ja
mov
cmp
push
fs
xor
push
mov
cmp
jb,pn
jmp
fists
jl
cmp
xchg
mov
adc
addr16
and
mov
xchg
sahf
test
js
stos
inc
mov
push
icebp
jbe
adc
and
jbe
push
lock
cs
inc
sti
jne
push
and
int
xor
cmp
jb
mov
sub
pop
adc
cmp
jne
pushl
push
pop
dec
add
jle
or
jne
stos
jle
add
sub
cmpb
in
push
inc
in
test
and
sbb
and
dec
or
mov
push
jg
or
jl
insl
dec
sbbl
jge
push
in
or
les
add
lret
inc
sbb
mov
push
int3
xchg
inc
fcoms
dec
je
or
pop
shrb
sub
clc
aaa
or
sub
call
icebp
push
push
adc
inc
xor
xor
push
pop
push
cmpb
mov
and
loope
clc
mov
jbe
jle
je
or
pop
pop
xchg
addl
js
inc
cmc
lods
aad
fwait
xchg
orb
jg
call
inc
sarb
lret
insl
sub
inc
out
push
jmp
mov
mov
push
push
pop
add
mov
add
adc
fidivl
fimuls
ret
xchg
insb
sub
ffreep
popf
inc
xor
cmp
aad
inc
divb
add
push
rorb
or
mov
ljmp
cmp
dec
add
jbe
push
xor
xchg
test
xchg
and
insl
xchg
add
sub
dec
js
push
adc
lret
push
add
imul
callw
jmp
cli
movsl
je
cld
add
inc
data16
js
jp
mov
jl
insl
sbb
lea
push
sub
or
adc
cli
out
je
sbb
xorb
popf
add
push
ja
xabort
outsl
push
adc
stc
addr16
mov
test
pop
add
or
inc
jb
int3
and
xlat
cmp
insb
xchg
cmp
lret
sarb
shl
cmp
cmp
mov
add
in
lock
push
ss
mov
and
pop
xor
mov
cmpsb
incb
pop
fimull
fisubrl
xor
in
add
mov
movsb
or
jmp
dec
adc
fstpt
or
out
je
add
sbb
daa
and
sub
dec
popf
and
movl
pusha
aas
push
dec
inc
jmp
fidivs
test
mov
ja
leave
pop
xchg
inc
push
add
sub
inc
clc
sbb
flds
jns
xchg
cltd
push
sahf
mov
stc
mov
into
jecxz
lock
mov
jl
xor
in
clc
inc
cmp
jle
cmp
cmp
in
inc
ja
mov
push
xchg
dec
sub
shll
flds
leave
rcrl
add
nop
sbb
jp
or
ja
add
push
and
mov
call
sbb
jle
add
jbe
jl
fwait
add
mov
in
dec
jle
push
mov
and
or
mov
dec
sar
dec
pop
jg
pop
mov
incb
inc
or
sbb
mov
jge
cmpb
add
roll
inc
orb
mov
add
test
cwtl
inc
loopne
popa
data16
mov
inc
push
sub
jmp
mov
out
rol
shll
addr16
xor
dec
push
imul
daa
sub
dec
cld
jne
test
cli
sbb
das
je
imul
xor
dec
movsl
lods
add
jmp
and
adc
adc
add
jmp
inc
test
dec
std
es
push
mov
je
inc
stos
and
in
scas
das
or
cmp
dec
push
ret
mov
js
test
js
and
adc
dec
test
repnz
pop
ret
mov
mov
mov
je
xchg
pop
ss
cmpsb
cmp
int3
dec
add
pop
sbb
dec
out
add
or
and
dec
adc
push
pop
ljmp
iret
adc
push
and
and
push
sbb
sbb
mov
roll
mov
int3
scas
je
sub
inc
xor
or
push
or
inc
dec
add
adc
inc
popa
add
addr16
push
and
cmp
test
fmull
cmpsb
incb
add
inc
add
cmp
jmp
add
xchg
xchg
dec
fiadds
inc
mov
scas
inc
push
add
push
and
push
xor
inc
jne
inc
or
and
cmp
jl
iret
sbb
jecxz
je
mov
jmp
mov
ret
dec
or
sbb
pop
inc
pusha
jmp
jmp
aaa
and
mov
jbe
add
mov
lret
addl
xor
pop
loopne
inc
add
rorb
mov
dec
mov
cmp
mov
cwtl
adc
rorb
push
jle
push
or
dec
jmp
jmp
and
into
xchg
fimuls
and
popf
adc
and
out
dec
shrb
dec
sub
mov
sub
jo
pop
dec
push
hlt
fcomps
out
jbe
inc
into
add
sub
jg
aam
pushl
jo
push
sarb
add
adc
cli
mov
add
orb
sti
sbb
jp
push
lret
fdivl
pop
push
out
int3
movaps
movl
cli
push
push
mov
pop
pop
xor
or
loop
jo
and
cmpsl
in
or
push
dec
adc
jg
push
cmp
pushf
dec
mov
cs
or
cmp
lock
xchg
add
inc
inc
hlt
testl
enter
lret
mov
push
jbe
in
push
imul
dec
inc
and
adc
add
lcall
add
cmp
xchg
jne
jne
enter
orb
test
pop
in
dec
add
je
push
int
sub
adc
pop
adc
inc
or
sbb
in
cltd
jb
rolb
sub
mov
cwtl
xor
push
mov
loop
push
shlb
adc
sub
mov
lods
cmp
mov
and
inc
out
and
dec
push
or
mov
dec
xor
subl
fimuls
mov
jl
icebp
cltd
insb
movl
push
xchg
lea
sub
or
inc
fsubrl
xor
leave
notl
test
mov
or
lods
in
sbb
cltd
out
mov
add
add
jne
orl
stos
test
push
mov
pop
sar
sbb
or
mov
jle
adc
call
in
adc
paddusb
outsb
out
daa
pushl
or
mov
faddp
push
jmp
push
push
jnp
ret
cmp
cmp
pop
adc
data16
adc
adc
pop
ret
adc
mov
nop
pusha
jb
inc
insb
loop
adc
mov
sti
or
out
pop
adc
jns
push
or
rorl
jmp
in
sub
push
xchg
into
jne
bound
xchg
push
pop
dec
mov
in
lods
fiaddl
push
in
inc
mov
je
lock
cmpsl
sub
push
mov
ja
pop
inc
sub
push
add
add
mov
sub
cmpsb
pusha
and
or
stos
push
push
push
sub
and
mov
mov
mov
cmp
ud0
jb
shl
into
push
shll
mov
sub
test
test
or
push
sub
and
clc
loopne
lret
adc
movsb
dec
dec
jp
ds
jg
jo
sbb
sbb
adc
inc
add
lods
in
into
dec
and
inc
ss
mov
inc
faddl
fisttps
dec
in
out
add
cmp
jb
mov
jge
sub
mov
inc
inc
outsb
xor
pop
jle
push
mov
pop
lods
int3
dec
mov
cmovns
mov
call
mov
test
movsb
ret
rorl
cwtl
fwait
nop
out
and
add
add
sbb
push
imul
mov
sbb
or
push
mov
pop
inc
pop
jmp
dec
push
fsub
cmp
mov
sbb
mov
ss
adc
pop
dec
movsb
sub
std
arpl
push
lods
in
scas
push
subl
adc
inc
inc
test
dec
sub
dec
nop
mov
mov
pop
adc
fsubrl
fadds
neg
fdivrs
push
and
roll
xor
mov
inc
test
ja
dec
dec
data16
push
mov
dec
outsl
adc
in
pop
imul
loop
subl
or
or
xchg
add
pop
aas
sub
mov
jle
push
mov
add
fildl
shr
insb
leave
push
xor
pop
js
jae
inc
mov
sub
sub
lahf
lahf
lret
push
inc
inc
jb
jns
cs
dec
out
mov
pop
dec
inc
inc
cmp
in
iret
xor
push
out
or
cmp
jg
add
or
push
loopne
mov
mov
sbb
sub
xchg
fimuls
sub
mov
add
stc
sub
je
mov
add
jmp
jle
loop
add
xchg
call
and
pop
mov
inc
dec
sub
lret
decl
jo
ret
testl
cmp
jmp
and
incb
outsl
add
sub
pop
loope
or
lods
imul
sar
dec
ret
and
pusha
sub
push
or
sub
fcoml
and
xor
jmp
dec
mov
loope
mov
loop
jmp
jb
and
add
adc
mov
js
mov
lcall
push
push
and
and
xor
fwait
cmpl
add
sbb
xchg
fdivrl
insl
les
pop
je
les
sub
pop
aas
es
cmpsl
inc
decl
fdivrs
sub
jmp
or
add
test
xlat
push
xchg
pop
pop
pop
in
or
je
test
into
xor
inc
add
movsb
sti
rol
loop
adc
testb
sub
cmp
dec
inc
lods
fmuls
adc
pusha
sbb
shrl
scas
lahf
outsl
sbb
adc
pop
mov
fwait
dec
call
insb
aad
lea
push
shrl
ret
adc
sarl
sbb
push
je
push
sbb
sub
sub
mov
jne
inc
add
test
mov
lret
xorl
stc
cmp
aaa
sub
sub
hlt
sbb
fildll
fimuls
insb
out
jb
cs
push
cmp
pop
jae
inc
or
mov
mov
ljmp
inc
dec
icebp
add
or
dec
js
inc
adcb
sti
idivb
add
sbb
mov
or
sbb
lcall
dec
and
adc
and
xchg
adc
mov
xor
dec
dec
cli
inc
pop
test
mov
sbb
loope
scas
rclb
jno
hlt
lock
dec
js
mov
pop
and
and
or
sbb
std
mov
ds
mov
pop
subl
fs
stc
add
test
adc
dec
lods
mov
or
lahf
cmp
push
mov
mov
cmp
je
int3
xor
sub
pushf
lahf
ret
lea
mov
adc
imul
jo
push
pop
add
inc
sahf
xchg
dec
add
daa
xor
out
add
adc
dec
mov
xchg
dec
add
test
je
lcall
flds
add
cmpb
push
xchg
in
jb
pop
push
pop
jb
add
dec
or
or
push
nop
addr16
or
sub
add
or
pop
sub
loop
or
nop
ja
or
lcall
cs
sbb
iret
push
push
ja
out
test
rsqrtps
in
mov
pusha
adc
adc
inc
or
jae
cmpb
out
adc
add
and
enter
adc
adc
adc
sbb
pop
push
push
push
pop
lcall
sbb
lcall
sbb
call
pop
enter
push
sbb
push
push
and
jb
xor
je
add
jge
sbb
inc
sahf
push
push
inc
push
pop
std
decl
in
jne
add
add
sub
cmp
jae
lahf
add
jmp
fiaddl
mov
sti
mov
imul
adc
fisubl
in
repnz
lea
iret
add
sahf
aad
cmp
mov
cmp
fwait
out
dec
test
push
outsl
in
loopne
add
call
adc
dec
dec
cwtl
jmp
cmp
ljmp
jmp
jmp
imul
in
in
nop
ja
rcrb
add
push
sahf
out
out
and
pusha
in
out
sbb
and
lock
mov
icebp
icebp
push
and
enter
out
std
in
repnz
repz
std
mov
dec
dec
hlt
hlt
rorl
pusha
hlt
fwait
add
mov
cmc
cmc
inc
cmp
xchg
jg
negb
or
idivl
cmp
pop
insb
nop
cmpsb
clc
clc
clc
cltd
adc
add
stc
inc
stc
lock
inc
push
nop
out
cli
iret
sti
test
sti
stos
cld
cld
leave
sbb
push
rdpmc
and
mov
xor
sbb
cmpl
add
pop
pop
cs
inc
or
push
add
and
jmp
inc
in
sbb
add
pop
cmpsb
enter
invd
push
imul
enter
in
in
adc
inc
mov
stc
daa
xchg
sti
out
orb
outsb
inc
repnz
add
xor
sub
sbb
out
jmp
cltd
fists
in
add
das
popf
cli
sbb
js
out
out
out
cltd
push
jno
sbb
lock
cli
or
sbb
jmp
in
jns
cltd
sar
push
dec
xchg
xchg
inc
pop
fstpl
div
enter
negl
fwait
xor
add
stc
jb
popa
leave
out
clc
cmp
nop
cmpsb
sti
sti
sti
cltd
mov
cld
inc
cld
orl
and
sbb
je
out
inc
push
add
cwtl
or
loop
jns
push
loop
icebp
mul
repnz
pop
shl
scas
imull
mov
out
rolb
sbb
out
bound
jns
xor
sbb
pop
repnz
sbb
movsl
test
mov
shl
pop
mov
inc
mov
inc
xchg
negb
insb
out
out
jno
scas
in
inc
negb
xchg
pop
leave
and
add
sbb
repnz
lret
and
jno
cmc
pop
and
cmc
jae
lcall
div
out
jns
idivb
and
pop
add
clc
clc
shr
add
hlt
stc
popa
xchg
cmpsb
repnz
scas
in
pop
jno
hlt
pop
xchg
pop
leave
and
push
hlt
xor
adc
sbb
add
push
pusha
in
cmp
jbe
hlt
idivl
jo
mov
lahf
pusha
adc
xor
dec
fnstsw
xchg
or
repz
xchg
inc
pop
subl
xchg
pop
pop
lcall
mov
repz
add
pop
push
sbb
xchg
bnd
and
mov
xchg
repnz
and
mov
in
in
cmc
mov
repnz
andl
and
aaa
xchg
mov
mov
mulb
xchg
pop
dec
jo
icebp
jb
ret
xchg
pop
pop
test
cmp
sub
cmc
cmc
adc
and
add
jecxz
ljmp
test
popf
lock
cmp
lea
jns
jne
push
lock
mov
push
lock
push
leave
xlat
and
test
add
ret
dec
fs
xor
ret
cmp
push
sbb
sbb
cmovno
enter
push
add
add
fmuls
add
push
jnp
xor
or
mov
dec
add
xchg
mov
sahf
and
jmp
aam
xor
add
or
clc
sbb
lret
inc
add
push
imul
xlat
int
mov
or
push
ror
std
popa
fwait
iret
repz
dec
outsb
ror
mov
iret
shrl
rcr
aad
and
data16
cmp
mov
xchg
int3
lahf
ror
repz
rcl
add
xor
cli
out
mov
lcall
xchg
ja
jns
lcall
adc
adc
aad
leave
nop
es
pop
push
repnz
aam
and
xchg
rclb
das
loope
shrb
std
jne
dec
mov
push
dec
xor
mov
pop
mov
dec
jg
push
cmp
cmp
jmp
mov
push
xor
push
fisttps
dec
mov
cmp
es
vmread
lock
or
cmp
mov
pop
je
push
out
mov
lock
jmp
adc
mov
sub
ret
frstor
lcall
add
shrb
add
dec
decl
lahf
and
add
and
add
add
lods
dec
rcl
xor
pop
cwtl
in
imull
inc
add
cld
jb
test
mov
xchg
mov
sbb
jbe
lea
lret
inc
push
imul
mov
int3
add
jmp
or
push
inc
adc
add
pop
and
xchg
mov
push
jns
jmp
or
outsl
or
std
jmp
add
sbb
xchg
adc
je
mov
call
jnp
add
fisttpl
adc
loope
xor
divb
ret
psubq
jo
pop
ret
adc
aam
xor
into
sbb
push
nop
mov
shrb
stos
sbbl
inc
xor
scas
adc
dec
cmpb
cmp
cmp
dec
bound
or
mov
jecxz
jne
push
xor
adc
jne
in
mov
xor
mov
add
pop
mov
or
push
add
push
jbe
or
inc
xor
mov
fs
push
pop
push
push
out
dec
pop
sub
add
pop
lods
cmp
test
mov
mov
repnz
hlt
jb
rep
int3
hlt
ffree
gs
mov
fisubrs
inc
loopne
add
xor
out
out
popf
fimuls
mov
or
or
mov
mov
out
mov
imul
mov
int3
xchg
notb
dec
add
sub
push
movl
or
add
out
or
push
rorb
enter
cmp
jns
mov
mov
call
repz
in
lock
mov
clc
clc
cld
mov
push
add
roll
lock
fnstenv
xlat
inc
cmpsb
jmp
sbbl
inc
subl
pop
sti
and
jbe
or
sbb
lea
and
fmul
jl
cld
or
scas
cld
out
nop
fcomip
fsts
xor
stc
sub
pop
nop
movsb
push
enter
add
insl
data16
mov
add
sahf
inc
push
out
push
outsb
in
xchg
lret
nop
dec
dec
imul
add
aaa
mov
add
mov
or
iret
repz
fs
je
repz
sbb
sbb
cmp
repz
adc
adc
cmp
repz
or
out
sbb
inc
mov
movsb
test
aaa
push
add
andl
adc
adc
lods
testb
aad
sarb
arpl
pop
lock
lock
jmp
pusha
or
cwtl
test
sub
push
add
mov
mov
adc
jns
in
into
push
jo
inc
sub
iret
loope
sahf
pop
and
push
divl
pop
test
inc
inc
xor
out
inc
sar
ljmp
stos
adc
data16
push
js
arpl
ss
mov
adc
inc
pop
add
sbb
pop
ss
mov
push
pop
jecxz
andb
out
lea
sub
xchg
mov
push
or
xchg
jecxz
pop
push
in
mov
sbb
xor
adc
cwtl
add
lock
imul
push
repnz
ss
inc
pop
mov
mov
xor
loope
push
xlat
imul
inc
xor
sahf
out
fldl
add
or
push
popf
sahf
push
je
ss
dec
test
add
leave
pop
inc
sub
dec
xor
cwtl
inc
mov
push
lds
rol
pop
out
jno
sbb
xor
or
or
and
ss
loopne
xchg
test
clc
xchg
std
dec
dec
pop
shll
in
jmp
int
mov
or
sbb
sbb
pop
rclb
and
inc
jmp
sub
icebp
adc
xor
ja
in
test
aaa
movsb
or
ret
push
fidivs
pop
mov
add
mov
movsl
lock
cmp
add
xor
cmpl
xchg
rol
insb
add
aad
shlb
inc
insb
inc
and
cld
mov
mov
or
fsubs
bound
imul
push
jne
mov
sub
push
cs
call
notl
mov
clc
jg
or
mov
pusha
iret
jmp
inc
lret
dec
ret
fcmovnb
lods
pusha
lods
mov
shll
xchg
in
je
jns
jbe
jno
jb
or
jbe
inc
sub
sar
fst
es
lods
jbe
inc
cld
mov
and
xchg
ficompl
dec
and
lret
shlb
in
ss
sbb
xchg
lods
gs
sub
fiaddl
push
pop
fisttpll
popa
mov
xor
jb
push
xchg
inc
jmp
ss
rcrl
jne
lahf
xchg
das
adc
movsb
inc
jecxz
rcrb
les
fs
sbb
imul
pusha
xor
iret
and
jo
mov
and
adc
gs
shlb
data16
lahf
add
fcmovb
outsl
test
clc
pop
mov
fwait
jo
aam
lahf
adc
adc
mov
jmp
cmpsl
mov
add
data16
inc
add
sub
mov
jne
cmc
or
mov
adc
push
adc
hlt
sub
xor
mov
add
jbe
add
inc
mov
xchg
inc
lods
stos
push
sbbl
and
or
inc
lods
nop
dec
sti
leave
and
adc
or
inc
movsb
cmp
shl
push
lret
int3
add
inc
rorb
push
xchg
adc
cs
insl
add
popa
adc
sarb
add
sub
add
adc
testb
js
rorb
shl
add
ret
pop
pop
gs
add
xor
add
xor
ret
shlb
lea
fldenv
test
pop
inc
imul
xlat
or
push
jb
lea
pop
jbe
xor
fcmovne
int
outsl
adcb
cld
jne
mov
push
cmp
jne
incb
jne
pushl
push
sbb
pop
push
out
aad
cmp
jb
jmp
stos
jmp
adc
repz
cmp
jmp
std
std
jmp
cld
lock
scas
pop
sub
jmp
fimuls
bound
out
inc
inc
xlat
in
es
ret
cs
sub
rorl
lahf
test
or
outsl
inc
pop
jnp
mov
fwait
pop
subl
lret
jg
daa
dec
or
orb
ror
dec
xor
stc
sub
cs
add
jle
lret
aad
push
repz
cmp
cs
ljmp
inc
dec
dec
pushf
inc
push
xlat
jb
imul
add
or
sbbl
pop
sub
out
lret
jae
cmp
cmp
mov
scas
pop
sarb
mov
aad
mov
cld
xchg
sub
enter
or
xchg
jo
mov
aas
dec
push
dec
cltd
arpl
or
leave
not
dec
push
adc
or
bnd
in
or
xor
jb
or
xchg
clc
rclb
loopne
pop
xlat
adcb
cmp
out
fmuls
cmp
xor
jo
sbb
mov
pop
stos
pop
lods
cmp
sbb
adc
mov
adc
lods
push
add
add
mov
loop
inc
cwtl
xor
iret
add
pop
roll
sbb
and
mov
shl
ja
lret
ds
scas
test
or
dec
adc
adc
je
js
mov
pop
adc
mov
je
sub
movsl
mov
jl
and
add
dec
mov
xchg
pop
insb
js,pt
filds
in
push
shlb
dec
add
clc
push
mov
or
mov
push
adc
sbb
inc
cli
cli
cmp
stos
jo
xlat
je
pop
rorb
fmulp
ja
add
insl
add
stos
xchg
movsl
dec
inc
hlt
or
adc
mov
lods
shrl
or
and
cwtl
pusha
jl
push
add
add
inc
imul
subb
mov
fmull
and
jmp
inc
loop
xchg
fnstcw
cmp
jl
sub
inc
adc
and
xor
adc
sbb
dec
pushf
in
ret
cltd
dec
arpl
jmp
addr16
adc
ljmp
mov
ret
jmp
imulb
je
xchg
lret
movsl
insb
fdivs
jp
sub
adc
xchg
push
inc
mov
pop
iret
adc
lret
in
add
sysenter
test
pop
out
cmpsl
xor
xor
xchg
and
sbb
minps
shlb
pusha
xchg
das
cmp
xchg
fcmovnb
sti
inc
lods
mov
aad
push
fistpl
xor
dec
and
mov
mov
dec
sbb
lods
test
shlb
scas
or
leave
pop
mov
je
adc
fs
fwait
in
and
or
mov
rclb
test
push
hlt
ja
lock
test
hlt
hlt
jmp
inc
je
in
xor
and
xchg
call
lock
ret
cld
add
clc
push
sub
jo
ret
faddp
push
outsb
hlt
jb
inc
pop
mov
insb
rcr
jbe
xchg
js
mov
sub
or
adc
ret
xor
mov
lret
xchg
xor
cmp
xchg
inc
loopne
outsb
add
scas
add
fdivrl
ljmp
lret
xor
inc
test
xchg
mov
rorb
ljmp
daa
and
out
lock
and
mov
push
mov
sub
and
inc
sub
pop
push
dec
pop
dec
cmp
mov
aad
adc
in
popf
cmp
aaa
loop
lock
add
sbb
sbb
or
mull
adc
and
push
pop
das
push
popa
pop
stc
adc
ficoms
movsl
sbb
stos
add
clc
ss
les
pop
les
cmpsl
dec
repnz
hlt
ret
push
and
loopne
jne
sub
push
mov
aaa
arpl
fdiv
fldcw
cs
sub
je
sar
lea
cmp
jno
add
pop
imul
add
shlb
scas
mov
and
jne
mov
fcom
popa
aaa
sub
cld
pop
rorl
imul
mov
in
add
add
inc
sbb
loopne
add
cmp
xchg
ret
movsb
sub
rorb
or
mov
mov
or
xchg
adc
push
or
aad
scas
repz
jno
push
xor
imull
push
cli
cld
insb
jne
xchg
fnstcw
and
push
or
fildl
cmp
arpl
xchg
add
int
xor
adc
adc
jnp
lret
lret
and
test
cmp
fs
jb
push
loopne
repnz
adc
outsb
sub
push
adc
xchg
iret
repz
lock
call
pusha
add
enter
jns
into
adc
jmp
repz
pop
adc
in
xchg
inc
enter
repz
nop
les
sbb
adc
aas
mov
mov
jns
imull
fs
push
je
test
add
hlt
aas
jns
xchg
push
fcomps
add
lock
hlt
aas
pop
jb
adc
push
outsl
dec
adc
or
data16
add
or
mov
mov
loopne
mov
jo
call
movsb
pop
and
add
stos
in
js
push
mov
gs
sbb
fnstcw
pop
ss
push
mov
or
mov
sbb
stos
loopne
daa
or
dec
pop
inc
loopne
out
ret
and
push
jmp
adc
shrl
pop
pop
add
or
mov
or
pop
mov
and
dec
pmaxub
cmp
int3
dec
xchg
inc
cmp
cld
adc
adc
mov
pop
push
push
jne
sbb
cmpsl
lods
shlb
ficoml
addr16
cmc
aam
addb
xor
xchg
xor
jne
ds
shl
in
push
nop
dec
xchg
push
adcb
mov
es
push
inc
imul
test
add
enter
fidivs
fnstcw
bound
rorb
lret
sbb
and
sahf
testl
adc
bnd
mov
add
aaa
sub
mov
pop
cwtl
pop
sbb
inc
pop
jne
sbb
rorl
cwtl
je
insl
jne
xchg
imul
rcl
push
inc
inc
push
sub
into
cld
jb
jne
bound
sub
push
dec
hlt
ljmp
neg
inc
or
movsb
vpaddusb
mov
pop
and
sarb
lea
popf
push
into
or
je
out
inc
inc
add
mov
adc
cli
and
rorb
add
push
outsl
xchg
je
imul
add
add
push
add
jmpw
add
cmp
push
adc
xor
daa
sub
add
call
jmp
xor
or
insb
movsl
or
scas
sub
pop
addb
sub
adc
sbb
mov
je
cmp
mov
jae
cmp
and
mov
jb
jo
daa
test
xchg
ret
xor
jecxz
rcrl
nop
into
add
call
push
aam
mov
and
idivb
jp
dec
in
mov
shlb
jbe
rcll
dec
das
mov
xchg
aad
adc
out
inc
xor
pop
and
loope
repnz
jmp
pop
mov
shrl
inc
sub
and
mov
sub
lahf
and
add
ljmp
sbb
add
das
popa
fwait
fwait
cmpsb
mov
push
leave
inc
je
cltd
push
loop
ret
cmpsb
mov
jne
test
arpl
dec
or
ljmp
pop
bound
adc
mov
push
jl
cwtl
inc
pop
sbb
xor
hlt
and
xchg
mov
mov
jns
movsb
aaa
ds
lret
js
dec
xlat
sbb
mov
gs
sub
ficompl
pop
test
mov
jne
lar
adc
daa
jae
cmp
in
and
inc
icebp
adc
inc
in
jno
push
push
fimuls
movsl
rorb
and
lea
loop
test
dec
inc
pop
loop
addl
and
aad
insb
leave
add
mov
push
sbb
jp
data16
push
decl
or
sysexit
out
stos
add
sbb
ljmp
inc
jmp
push
loopne
pop
or
andb
imul
repnz
push
das
add
nop
mov
sub
dec
or
push
imul
jp
jmp
xorl
ret
mov
adc
rclb
cmpsl
mov
adc
inc
adc
cli
sub
sbb
sub
test
iret
insl
push
mov
movsl
fistpll
fnsave
jge
ss
mov
stc
fmuls
sub
ret
push
sbb
adc
pop
sub
pushw
inc
dec
fs
aaa
sbb
mov
pop
jle
movsl
pop
pusha
mov
test
dec
add
and
pop
dec
sbb
dec
cmpsb
sbb
repz
pop
jne
sub
loopne
into
aaa
mov
roll
mov
test
add
stos
mov
mov
add
push
jae
xchg
push
cmpsb
cmp
cmp
rcrb
hlt
movsb
pop
sub
xchg
in
push
and
mov
js
out
and
subb
mov
mov
add
push
nop
lock
fwait
sub
outsb
add
xchg
push
inc
or
xchg
add
xchg
xchg
enter
test
cmp
aam
xorb
cli
out
dec
arpl
out
fnstcw
xor
mov
sarl
pop
addb
loopne
movsl
roll
fsub
into
add
lcall
clc
decl
cmp
xchg
cwtl
add
in
fwait
xor
mov
ret
mov
mov
sarb
and
sbb
jp
mov
pop
lods
inc
jne
lock
push
and
mov
push
cmp
data16
test
push
imul
mov
aam
inc
add
jg
mov
sub
test
shlb
adc
add
jo
leave
sar
arpl
add
negb
push
dec
cli
shll
outsb
pop
cmpb
movsb
hlt
mov
inc
cmp
jb
adcb
sub
dec
test
js
dec
daa
inc
sub
mov
andl
xchg
cmp
pop
inc
fistpl
shll
add
sbb
cmp
in
xor
dec
mov
inc
fcompl
jmp
jmp
or
dec
sub
push
push
repz
and
aas
popa
clc
lds
sub
mov
pslld
aam
lods
and
call
out
mov
fldenv
in
mov
rorl
in
push
push
sub
mov
adcl
adc
mov
addb
xor
mov
cmp
adc
cmp
jbe
test
pushw
scas
jmp
and
or
and
pop
ljmp
test
cmc
mov
mov
xchg
mov
push
pop
push
lods
rorl
test
jae
push
mov
pop
xor
mov
push
and
mov
xor
sbb
aam
cwtl
scas
jo
xor
out
add
pop
addl
sub
outsb
cmp
push
pop
inc
push
pushf
cli
and
cmp
fcomps
jg
add
add
inc
cs
lock
negb
nop
mov
jl
js
and
pop
sbb
pusha
fidivl
inc
aam
push
mov
ret
xlat
mov
lock
and
sbb
and
lcall
xor
dec
xlat
mov
xchg
inc
inc
xchg
test
adc
push
shlb
imull
dec
push
cmp
movsl
sbb
fldenv
cmp
or
jo
or
sarb
imul
dec
stc
adc
jge
pop
orl
jbe
push
pop
lods
and
mov
cmp
pop
jb
je
rclb
inc
ss
pop
jmp
push
leave
repz
jns
in
rorb
ja
and
mov
js
out
and
hlt
hlt
loopne
adc
push
jne
mov
add
push
inc
ljmp
mov
or
or
shlb
imul
push
fdivrs
sub
outsb
lahf
mov
adc
push
cmp
cld
fstps
js
add
mov
xchg
pop
imul
sahf
jp
fstp
rcll
in
pusha
jp
imul
imul
mov
addb
jmp
add
pop
test
fs
repnz
jg
jle
jae
mov
jmp
push
sub
mov
outsl
inc
xchg
jbe
lahf
sbb
lret
dec
repz
mov
orl
in
cld
testl
dec
xor
sarl
addb
fs
push
sbb
mov
pop
mov
push
xchg
and
sahf
push
mov
mov
sbb
ret
popf
imul
cltd
sub
sbb
push
imul
cmp
popf
aam
or
xor
push
mov
cltd
pop
or
data16
lret
fsubrs
fcomps
rorl
mov
push
mov
pop
add
rcll
cmp
push
mov
loopne
std
es
cmp
ret
les
jno
dec
or
cmp
lret
jp
shrb
xor
outsl
sbb
sub
jb
or
or
cmp
sbb
or
cmp
sbb
sub
jbe
clc
insl
xor
pop
mov
idiv
add
push
sbb
sbb
inc
ret
dec
jg
add
repz
popa
out
dec
lea
fisttps
xor
dec
lcall
insl
mov
in
push
add
pop
clc
jbe
insb
xor
adc
mov
sub
jmp
push
cmp
rcrb
pop
cmp
push
push
push
or
cmpb
sbb
adc
data16
and
cmp
adc
cmp
cmpb
je
sub
or
out
pop
nop
mulb
jae
orb
aaa
test
sahf
out
push
fchs
jmp
sbb
sbb
test
ficoml
fisubrs
dec
sub
push
je
push
xor
dec
push
outsl
cli
or
scas
pop
dec
sub
xlat
sbb
pop
and
cmp
test
aaa
adc
jg
fs
mov
movsb
adc
jg
xor
xor
add
adc
mov
fcoms
cmpsb
xor
stc
lea
fistps
movsl
icebp
push
fwait
jo
push
orw
sub
mov
sub
int3
cmp
lret
je
test
mov
and
or
cmpsb
push
fldt
cmc
pop
clc
and
inc
inc
mov
jmp
test
repnz
repz
fstp
pop
adc
outsb
adc
inc
pop
test
jb
push
pop
ret
pop
cmpsl
mov
or
inc
cmpsl
pushf
cli
xchg
in
and
mov
enter
pop
insl
inc
bound
movsl
and
loope
lods
shl
and
dec
pop
jne
mov
sbb
sub
movsb
ss
jge
mov
jbe
push
jecxz
repnz
adc
ret
pop
mov
lret
mov
enter
ret
cmpsb
lods
xchg
mov
or
adc
sub
ret
pop
inc
es
rorb
adc
and
jbe
pushf
scas
or
imul
push
sub
fsubrp
push
push
cmp
rcll
mov
lock
or
jle
and
dec
push
inc
cmp
or
testb
lods
push
sub
sub
jge
das
adc
or
pop
mov
dec
mov
add
sarb
or
stc
mov
adc
in
xor
nop
xor
jge
test
js
daa
mov
mov
dec
das
repnz
and
in
clc
xor
into
stos
mov
inc
scas
test
xchg
dec
jge
mov
pop
add
or
add
mov
jmp
and
imul
inc
stc
aam
aam
inc
sub
adc
push
aas
int
lcall
sbb
mov
inc
adcb
mov
fisttpll
orb
les
sbb
stos
in
mov
cmp
pop
xchg
js
fisttps
jo
sub
sub
ficoml
lea
mov
or
movl
adc
xchg
ja
or
movsl
mov
add
push
loopne
nop
je
sbb
sub
add
popa
mov
and
adc
outsl
and
imul
mov
sub
testl
bound
add
xor
lods
and
movsl
adc
push
or
mov
and
jmp
fadds
arpl
push
cmp
mov
clc
mov
fisttpll
bound
js
jae
hlt
mov
fildll
ffree
test
and
pop
mov
mov
add
nop
gs
ja
push
ret
push
push
lea
test
inc
mov
rcpps
cwtl
enter
fiaddl
add
ja
nop
cs
ss
or
mov
add
add
dec
subb
test
popa
jl
loopne
dec
push
sbb
iret
fisubl
and
dec
fmuls
test
scas
adc
xchg
pop
outsl
inc
scas
sbbb
ret
xor
push
sub
shrb
std
imul
sti
sbb
mov
and
push
pop
adc
cli
and
and
and
and
das
out
shlb
mov
mov
rorl
pop
inc
mov
add
mov
push
mov
xor
inc
jo
jg
sbb
ja
sub
and
push
or
or
fs
dec
or
stos
xchg
dec
inc
jno
test
das
mov
push
mov
push
js
add
push
shrl
mov
jae
ret
inc
sub
mov
add
push
movl
sub
sbb
push
std
jne
inc
pop
jmp
test
imul
or
dec
pushf
jmp
mov
push
push
imul
test
in
sbbl
dec
push
aaa
std
mov
jbe
mov
popf
adc
mov
push
mov
jle
shlb
lock
fsubrp
std
lea
in
sbb
pop
mov
mov
out
xchg
adc
cmovne
outsl
and
push
inc
or
mov
sahf
mov
movsl
xchg
push
pop
jnp
scas
xor
clc
xchg
out
movsb
iret
mov
add
jne
mov
cmpsl
test
bound
inc
push
lds
in
leave
xor
lea
inc
cmp
sub
add
mov
add
pusha
loopne
subb
sbb
add
shlb
jbe
xchg
push
mov
adc
dec
jg
cmp
lcall
movsl
or
or
std
cmpsl
push
mov
adc
mov
mov
xor
addl
jne
call
sub
add
sub
add
jbe
mov
sbb
int3
xchg
cld
xor
push
mov
test
sbb
inc
dec
jne
add
movsb
mov
sbb
mov
jae
sbb
mov
xor
scas
outsb
cwtl
adc
repnz
or
adc
rolb
xchg
cmc
mov
sub
or
lret
sbb
dec
adc
clc
push
adc
cmp
sub
pop
loope
lahf
testb
mov
add
and
sarl
push
xlat
out
add
aas
jne
cmp
mov
mov
pusha
push
jne
addr16
push
cmc
imul
insb
ljmp
xor
mov
ss
or
mov
popa
and
add
dec
mov
ja
int3
mov
inc
je
inc
jmp
xor
jg
or
mov
add
fwait
xlat
add
mov
pushl
add
inc
insl
adc
insl
fldl
sbb
cli
push
jg
or
or
cmp
sub
push
test
xor
add
mov
into
dec
push
and
lods
pop
movl
cmpsl
and
mov
je
cmp
es
add
pop
push
pop
sbb
pop
adc
mov
dec
and
mov
mov
fstpl
data16
mov
inc
sbb
sub
xor
imul
xchg
and
jecxz
sub
mov
fidivrs
mov
test
push
sbb
push
mov
fbstp
pop
cmpl
pop
cld
or
into
or
cmp
mov
inc
add
cmp
add
pusha
dec
jne
out
icebp
push
lds
jg
aad
push
and
pop
push
lcall
mov
mov
sbb
ficomps
stc
pop
push
pop
cmpl
jnp
pop
ss
dec
jne
je
sbb
cmp
add
cmp
pushf
sub
adc
adc
ds
aaa
dec
xor
mov
aam
mov
pop
add
adc
sbb
push
sub
pop
mov
xor
fs
add
test
lock
xor
lods
stc
jo
and
insb
xchg
xchg
lea
add
jmp
sub
pop
pop
jmp
push
mov
enter
xchg
push
test
sbb
jns
jne
and
dec
or
pop
jle
inc
push
clc
fildl
cmp
lock
lret
adc
jbe
push
push
out
mov
xor
test
test
je
movsb
jecxz
es
mov
sub
aam
add
pushf
or
and
cmpb
pop
push
cmp
jb
sbbb
clc
add
push
scas
roll
and
mov
push
mov
or
mov
inc
int3
je
fdivr
pop
in
dec
and
leave
cld
lods
xor
out
mov
adc
and
sbb
mov
push
lret
or
inc
jo
lock
dec
mov
xchg
mov
xchg
push
push
ss
mov
pop
aas
push
and
add
fadds
mov
pusha
movl
insl
rcll
adc
rep
shl
or
or
mov
push
xor
pop
cld
push
fistl
rolb
dec
add
mov
dec
popa
test
add
insb
jge
sbb
mov
insb
jns
and
sbb
push
pop
pop
add
inc
clc
stos
repnz
add
push
shlb
add
dec
add
push
push
jmp
fistpll
jnp
cmp
xor
or
lahf
or
and
dec
dec
mov
pop
clc
xorb
clc
mov
nop
add
nop
sub
cmp
nop
add
inc
dec
pop
cmp
cmp
mov
icebp
add
sbb
ljmp
push
movsl
or
stos
repz
out
fisubs
inc
jbe
test
cli
add
cmp
xor
mov
mov
imul
call
pop
push
pop
loope
pop
push
sti
je
fimull
es
adc
mov
dec
lock
adc
rorl
jmp
push
ret
push
cltd
mov
mov
fidivrl
in
pop
frstor
rorb
mov
mov
sbb
mov
mov
jb
dec
mov
pushf
int
es
adc
mov
add
jbe
test
mov
or
ja
fdivl
popa
jo
mov
test
sub
sub
cmp
mov
mov
mov
and
cmp
xor
lock
mov
or
dec
pop
xor
add
sbb
jl
lock
iret
pop
pop
and
dec
ds
leave
inc
pop
std
sub
and
xchg
in
scas
in
int3
push
or
pop
mov
dec
test
data16
xchg
pop
jo
jle
flds
inc
insb
gs
test
cmpsb
lea
repz
add
cmp
push
mov
addb
jno
jns
shrl
push
and
cmp
in
add
or
cld
adc
cmpsl
rcrb
mov
stos
lahf
rorb
out
jge
fisttps
sti
roll
mov
dec
aaa
cmp
mov
lock
sbb
rclb
stos
adc
add
loopne
and
loope
adc
or
cmp
sti
dec
cld
sub
in
push
adc
nop
pop
hlt
add
adc
js
test
loopne
push
sub
loop
dec
adc
call
mov
enter
int3
jmp
push
push
mov
pop
lret
in
les
add
add
add
mov
lods
inc
fimuls
pusha
adc
mov
lahf
adc
and
sub
push
je
jo
pop
cli
or
push
arpl
add
inc
sahf
push
push
mov
push
test
xor
ror
sub
dec
inc
in
xchg
add
pop
pop
jne
inc
jge
mov
bound
jo
sbb
lods
mov
data16
shrl
adc
cmp
in
push
jge
rep
mov
mov
xchg
flds
or
loope
xchg
push
xchg
inc
cltd
add
mov
sbb
adcb
int3
pop
cld
imul
dec
push
inc
cmp
pop
jg
cli
or
subl
add
push
mov
mov
scas
and
inc
cmp
test
push
sti
cld
add
loope,pt
push
push
mov
enter
ds
push
jae
addl
add
add
add
in
cmp
sti
adc
xlat
pushf
cmpsl
orl
outsb
sbb
ret
xchg
jle,pn
sub
adc
sbb
daa
adcb
out
out
jl
sbb
pop
mov
sbb
dec
or
cmp
mov
lds
xor
hlt
inc
inc
mov
add
nop
inc
mov
push
push
xor
call
inc
and
mov
push
popf
mov
and
push
and
cmp
xchg
loope
adc
push
add
sbb
mov
loopne
cmpl
pushl
cmc
test
mov
push
lods
xchg
add
sbb
test
and
rorb
es
sub
scas
cli
icebp
adc
xor
mov
or
add
call
in
loope
popf
inc
xchg
push
cmc
push
jo
fcoml
or
jne
push
aas
out
jo
sbb
cwtl
lds
mov
dec
cwtl
nop
rclb
dec
arpl
cmc
pop
push
adc
sub
cwtl
outsb
push
inc
enter
or
pop
sbb
push
mov
adc
sub
pop
div
adc
xchg
pop
clc
xorb
pop
xor
call
lods
jecxz
mov
or
mov
mov
rorb
sbb
movsb
adc
fstps
outsl
fwait
jb
mov
or
test
sub
inc
add
leave
out
jecxz
jecxz
add
call
dec
movl
rolb
jb
cmp
jg
adc
sbb
cmp
clc
nop
xchg
mov
sub
rcll
push
nop
cs
xor
or
sbbl
dec
inc
add
add
pop
fwait
test
jno
dec
push
or
fsubl
jbe
shl
or
in
or
cmp
ret
fdivrl
add
sub
fistl
cmpsb
xlat
mov
push
mov
add
cwtl
add
jns
mov
notl
inc
lds
pop
jo
scas
adc
loopne
dec
out
jl
push
lret
int
dec
fbstp
lods
or
pusha
ret
mov
shr
divl
loopne
inc
mov
sahf
mov
pop
jno
frstor
mov
call
je
mov
je
popf
pusha
push
int3
arpl
xor
insl
pop
insb
push
lea
loopne
xchg
sahf
and
mov
cltd
and
add
sub
ret
scas
mov
inc
xchg
and
sbb
cld
adc
sub
push
and
mov
mov
and
jbe
sub
dec
dec
add
or
push
mov
cmp
rcl
pop
push
sub
jne
pop
xor
imul
xor
ss
inc
adc
push
push
cld
je
add
push
nop
insl
inc
xchg
push
xor
cltd
adc
sbb
pop
mov
inc
jg
ret
adc
loopne
push
int
and
push
loopne
or
rorl
jns
jmp
push
sbbb
sub
arpl
loopne
sub
andl
or
mov
adc
test
rclb
cmp
push
push
push
or
das
in
jb
and
aaa
or
push
cmp
or
jmp
lret
sub
push
push
mov
mov
shrl
lsl
inc
jnp
js
or
jp
adc
inc
add
sub
daa
test
dec
movsl
inc
push
mov
sbb
xor
sbb
sub
mov
push
cmp
push
pop
or
hlt
fsubrs
data16
inc
dec
jp
cmp
jb
imul
ret
imul
sbb
popa
cld
push
cmp
add
bound
and
aam
stos
ret
imul
mov
push
loopne
test
ljmp
roll
stc
add
and
leave
push
subl
fldl
cmp
and
loop
insb
adc
hlt
add
push
mov
sbbl
and
orl
and
sub
sbbb
movsl
cmpsl
jb
xchg
cmp
es
mov
lret
mov
sbb
add
outsb
ds
xor
mov
jmp
jae
jge
ret
push
cmp
mov
or
popa
stos
mov
push
stos
and
in
sbbb
sbb
out
inc
out
push
cmp
test
push
mov
mov
fcomps
lret
xor
ret
adc
out
in
push
or
leave
pop
adc
push
inc
cmp
rcrl
mov
ja
mov
push
sbb
mov
push
add
add
cmp
or
mov
add
mov
mov
cmp
cmp
mov
push
adc
dec
loope
scas
loop
pop
push
pop
and
mov
movsb
push
in
jo
pushf
fsubrs
inc
xor
or
sti
or
push
pop
sbb
mov
aam
cmpsb
jge
inc
jne,pn
sbb
inc
fs
mov
fsubr
jle
cmpsb
or
lret
jge
shll
push
pop
mov
inc
push
and
jmp
xor
dec
rorl
mov
sbb
push
call
pop
xchg
jbe
dec
push
or
add
lds
xor
sub
dec
sbb
adc
fs
xchg
adc
clc
add
movsl
mov
mov
arpl
inc
sub
lds
out
negb
addb
jne
loop
xor
jo
pop
cmp
xchg
sbb
dec
add
fnstcw
out
cmp
hlt
push
jo
mov
xchg
push
push
sbb
test
pop
les
sub
jp
or
cmp
mov
jge
pop
mov
push
adc
fldenv
mov
leave
push
inc
push
in
add
push
sub
test
icebp
jo
sar
rorl
lock
jnp,pn
int3
cmpsb
xchg
lsl
jmp
push
pop
push
fcos
out
int3
push
inc
shr
rcr
shr
rcr
or
jne
div
pop
fnsave
out
dec
adc
inc
mul
pop
jb
cmp
or
cmp
idiv
push
jbe
dec
sub
sbb
adc
or
fisubl
leave
push
or
iret
or
sarl
pop
call
and
or
mov
sub
lock
add
push
in
push
cli
insl
inc
or
and
rclb
aaa
lock
enter
inc
and
ret
push
inc
pop
sub
push
push
sub
loop
gs
cmp
fsts
adc
mov
or
dec
test
sahf
pop
out
add
jmp
imul
cmp
adc
jno
push
pop
push
push
jp
push
mov
mov
fstl
fcomps
ljmp
inc
aaa
and
sbb
ja
inc
fidivl
ja
mov
leave
cmp
jae
push
cmp
jbe
add
or
sbb
cli
dec
dec
test
loope
sub
and
jmp
dec
add
add
lods
rorb
jmp
test
mov
cmpsb
cwtl
mov
or
stos
adc
adc
sub
lds
jbe
pop
inc
sbb
mov
jbe
mov
and
jno
sub
js
pop
push
sub
into
jno
nop
add
addb
hlt
aam
inc
in
dec
mov
mov
push
in
push
popa
cmp
sbb
pop
xchg
or
mov
rcrb
loopne
mov
cmp
adc
cs
popa
enter
fiaddl
cmp
adc
je
jo
sbb
lea
shlb
add
dec
push
sub
sbb
adc
mov
and
shlb
push
pop
jne
mov
adc
and
pop
adc
inc
or
lods
sub
dec
add
xor
in
and
hlt
xorl
mov
sahf
stos
push
icebp
push
pop
cmp
lods
mov
mov
jb
cmpsb
adc
jb
test
inc
ja
dec
adc
mov
in
jb
ja
pop
call
rcl
and
xchg
xor
imul
testl
add
adc
aas
push
pop
shr
das
dec
and
mov
xchg
outsb
es
or
aas
inc
adc
jb,pt
ja
or
ja
pushl
aas
or
push
popf
xchg
inc
push
adc
lds
ds
fdivrs
mov
xor
roll
neg
and
or
fucom
jge
push
jp
insl
sbb
push
arpl
mov
cmpsb
es
pop
adc
test
jnp
js
mov
pop
repz
dec
rcrb
and
test
add
xchg
xchg
push
push
xchg
sub
mov
addb
push
nop
pop
das
sub
enter
dec
ljmp
sub
or
or
xor
fcoml
inc
jne
dec
fadd
lock
push
lods
pop
test
jno
loope
add
movsb
mov
pop
lret
clc
dec
jp
fbld
dec
add
sbb
mov
mov
jne
pop
and
fidivrs
jl
mov
stos
lea
mov
dec
add
inc
or
push
add
je
jge
lods
or
mov
and
or
sub
mov
bound
sbb
pop
or
add
test
outsl
test
push
addr16
xor
aas
inc
inc
pop
dec
lock
sub
loop
push
inc
jne
mov
inc
imulb
test
mov
dec
cmpl
je
cmpsb
mov
pop
pop
xchg
inc
movsb
xchg
jo
pop
push
cmc
or
mov
xor
push
sbb
popa
aaa
loop
add
jb
xchg
or
add
jno
mov
fildl
mov
shl
int3
pushf
into
inc
sub
xor
addr16
je
lock
addr16
mov
add
movsb
sar
push
pushl
mov
or
fldcw
imul
push
aam
push
xor
jne
sbb
test
inc
stos
adc
stos
sub
pop
iret
or
mov
mov
push
incb
jecxz
imul
add
mov
or
lea
xchg
fildl
ja
push
sub
movsbl
cli
sbb
pop
rcl
cmp
bound
loop
pop
xlat
cmp
lcall
xchg
add
enter
inc
shr
int3
or
add
mov
loop
sub
xchg
push
jns
cmp
add
xchg
enter
pop
or
or
inc
js
imulb
ret
in
cld
cmp
jno
sbb
sub
dec
or
inc
adc
sub
ficompl
nop
fneni(8087
insb
push
mov
sbb
xchg
cmp
push
xor
insb
je
pop
test
mov
push
mov
mov
fs
lods
adc
and
call
add
sub
imul
pusha
cmp
add
outsl
dec
in
jns
jne
add
jp
pop
jmp
cwtl
lds
and
inc
sbb
sub
test
mov
loopne
cld
rcl
js
jg
mov
test
push
xlat
negb
repz
sub
or
pop
adc
and
rol
inc
into
mov
test
jno
movsb
push
sub
pop
int3
daa
adc
or
in
xor
pushf
sub
mov
add
and
js
insb
fs
divb
addr16
push
push
sub
sbb
lcall
mov
xor
in
je
ret
shlb
jecxz
orl
push
movb
loopne
sbb
ljmp
test
dec
test
or
in
adc
adc
lcall
int3
dec
inc
nop
cwtl
mov
fidivl
cld
mov
movb
mov
fwait
sbb
xchg
inc
mov
in
repnz
or
scas
insb
inc
orb
xchg
mov
rclb
clc
js
pop
aas
mov
mov
lods
push
push
movsb
xor
rcll
adc
imul
pop
jo
js
push
jns
add
call
sub
mov
outsb
rol
jns
cld
outsl
jne
pop
cmp
movsl
lods
dec
repz
ss
xor
dec
jo
add
or
sbb
lds
ss
js
sahf
xchg
or
bound
add
mov
jo
addr16
add
sub
jmp
cmp
mov
int3
and
jle
fiadds
push
shrb
loope
pop
loope
dec
mov
or
fwait
push
inc
pop
pushf
pop
jnp
mov
sub
mov
mov
inc
xchg
dec
ret
jbe
fs
mov
dec
mov
loopne
xor
xor
je
and
es
mov
mov
in
mov
roll
fcoml
mov
enter
sub
or
sub
inc
inc
shrb
xor
jbe
jmp
mov
aas
cmp
loope
add
add
adc
jl
mov
repz
es
pop
mov
cld
stos
out
adc
inc
mov
out
dec
pop
je
or
push
push
ja
cmp
mov
adc
cmp
pop
and
scas
jecxz
adc
and
adc
outsl
rcrl
shlb
add
add
fidivl
push
int
jmp
pop
fistpl
push
xchg
lods
xchg
testl
dec
mov
or
jne
and
xchg
adc
mov
jno
mov
or
test
push
xor
movb
loopne
test
cmc
shll
incb
mov
jp
and
lea
jae
movb
sub
inc
test
pop
add
push
add
js
je
movb
enter
xchg
mov
shlb
sbb
jmp
dec
fldt
inc
inc
mov
push
push
outsb
sar
nop
mov
test
inc
pushf
sahf
sub
jp
movsl
or
lods
push
test
sub
or
push
je
and
stos
push
sbb
sub
and
loop
add
pusha
or
les
or
outsl
pop
xchg
sub
jge
lea
mov
dec
or
add
mov
inc
lods
push
push
xor
pop
scas
gs
jle
data16
add
fcoms
dec
pop
mov
ret
inc
nop
push
aas
js
jle
xchg
icebp
scas
mov
jne
dec
add
xor
jmp
push
mov
mov
pop
dec
add
pop
divl
or
mov
out
push
sbb
movsb
mov
push
aam
fcoml
jnp
loopne
xchg
je
shrl
and
mov
stc
mov
cmp
add
xor
sti
dec
xor
test
lock
lea
cwtl
ljmp
add
xor
xchg
push
testb
xchg
xchg
cmp
cli
push
aam
movsb
lods
lock
xchg
cmp
xor
pop
mov
dec
hlt
ret
lcall
xchg
shll
cli
jbe
mov
lods
sti
sarb
roll
xor
dec
lahf
adc
pop
xchg
adc
rclb
pop
fists
xor
andb
fsts
and
push
or
lea
les
mov
pop
cs
popf
add
inc
mov
xor
add
pop
or
add
repz
imul
pop
mov
test
jecxz
cmpsb
or
es
in
sub
or
mov
or
or
mov
dec
jmp
test
or
jb
pop
aaa
and
mov
rolb
xor
test
std
or
sub
cld
shr
jl
out
ret
add
mov
in
jle
lock
dec
mov
ret
push
mov
mov
dec
mov
pusha
add
xchg
add
sbb
loop
or
je
cli
add
cmp
or
pop
adc
pop
subb
ljmp
sbb
mov
shr
lea
aas
clc
stos
add
pop
mov
and
and
jmp
ficomps
loopne
pushf
mov
ficoml
push
pop
add
push
scas
sub
lods
dec
pop
adc
pop
pop
pusha
xor
shll
push
or
call
es
testl
sub
and
sub
sar
xor
or
lods
mov
loope
in
clc
imul
and
cmp
je
scas
jno
das
fists
jno
cmp
mov
out
not
and
add
pop
dec
add
and
xor
mov
loopne
mov
fdivr
dec
stc
xor
insb
mov
pop
add
lret
shlb
hlt
and
cmp
sbb
mov
inc
adc
negl
into
pop
dec
or
adc
xchg
pusha
mov
mov
inc
mov
rorb
jl
lahf
loope
push
or
pop
mov
pop
dec
or
jmp
dec
adc
push
mov
or
pop
movsl
pop
sar
mov
lock
pop
push
popf
push
repz
sbb
xchg
xchg
rolb
mov
and
add
scas
jp
sub
gs
inc
mov
or
pop
testl
adc
inc
call
jl
and
lods
jb
gs
adc
or
and
adc
daa
loopne
push
lea
leave
mov
push
inc
dec
es
jp
pop
inc
lds
stos
push
mov
jmp
pusha
negl
mov
push
inc
rolb
xchg
scas
and
aam
inc
addb
movsb
xor
imul
andb
sub
sahf
mov
js
ljmp
jg
shll
les
or
sub
mov
je
imul
xchg
repnz
sub
sub
mov
int3
je
push
jmp
mov
movsl
add
das
gs
adc
add
add
sub
mov
jno
xchg
lods
or
jno
add
inc
dec
stc
ljmp
rolb
cli
inc
clc
pop
mov
add
dec
test
sar
sahf
adc
add
out
jns
push
mov
xchg
add
cmp
mov
ja
ret
addb
pop
jne
fmuls
jmp
int3
inc
cld
mov
sbb
call
dec
jne
xchg
inc
cmpsl
pushf
push
adc
adc
dec
or
jb
outsb
or
adc
fs
inc
dec
hlt
cmp
pop
mov
mov
in
lods
mov
mov
out
js
adc
ljmp
enter
or
jno
pop
sub
adc
sub
pop
shr
pop
push
add
lock
cmp
push
lods
icebp
cwtl
mov
and
pop
test
testl
sbb
cmp
mov
sar
stc
imul
push
xchg
pop
loopne
jb
sbbb
inc
cmp
push
cs
add
pop
add
cmp
pop
dec
or
adc
jmp
movsl
or
add
adc
cltd
out
adc
xchg
sar
enter
cld
jmp
jg
aad
mov
lea
clc
pop
jg
mov
jle
sbbb
imul
imul
or
and
and
ffree
test
test
xchg
movsl
push
movl
out
scas
inc
call
inc
je
pop
int
sub
js
int
or
dec
push
mov
mov
inc
clc
loop
inc
dec
insb
pop
xor
push
sar
or
scas
xor
movsl
pop
dec
imul
jmp
cmp
xchg
sets
into
je
fists
push
or
cltd
dec
push
add
fbstp
orb
sarl
dec
ja
in
adc
fimull
or
loope
mov
mov
mov
dec
add
jns
adc
push
sub
out
cmp
push
mov
dec
sub
xchg
dec
or
and
cld
popf
add
jecxz
lods
xchg
and
add
je
and
lock
dec
or
push
bound
or
shr
sbbl
lcall
rorb
mov
and
or
and
jmp
cmp
jb
jae
test
cmpsb
sbb
enter
jne
jmp
sbb
int3
and
in
pop
lock
or
arpl
and
lock
fdivs
in
push
jns
or
mov
sub
pop
xchg
sbb
dec
adc
dec
insl
pop
jg
in
sbb
mov
pop
mov
jl
and
iret
jne
addb
mov
dec
and
or
push
ss
cmc
fisubrl
loopne
inc
jmp
shlb
dec
mov
and
jne
mov
cmp
test
data16
cmp
leave
inc
test
inc
push
pushf
mov
mov
icebp
cmp
jp
sub
pop
jb
dec
stos
sbb
cmp
int3
iret
pop
lock
je
adc
cmp
jle
dec
std
jge
pop
mov
decb
jne
push
pushf
xor
mov
sub
dec
mov
fidivrs
lret
dec
bound
dec
push
and
inc
clc
into
sub
ss
cmpsb
imul
adc
das
inc
mov
mov
or
pop
das
or
inc
ret
and
or
out
or
inc
cld
or
das
or
inc
or
mov
mov
clc
out
or
mov
mov
popf
stos
or
adc
lock
xchg
test
test
mov
bound
lea
loop,pt
xchg
ret
cmp
add
or
xchg
xor
mov
dec
inc
in
pop
xchg
cld
adc
stos
decl
xchg
adc
jne
jp
dec
sbb
dec
jge
or
add
cmp
stc
test
fs
cmp
mov
popa
test
jo
push
test
icebp
mov
sbb
cmpb
pushf
mov
fst
mov
adc
mov
int3
push
pop
mov
and
ljmp
sbb
pop
jmp
lea
repz
mov
or
pop
xor
push
dec
out
stc
jl
jg
jg
outsl
inc
or
out
mov
jo
addr16
jg
popa
add
jg
jo
mov
adc
nop
mov
nop
sbb
jp
or
push
and
lret
prefetch
aam
xor
cli
sub
prefetchw
sahf
pop
dec
call
sarb
in
dec
mov
push
test
insl
jp
add
shr
ja
rolb
shrl
lcall
dec
lock
pop
sar
in
lock
rep
push
jmp
mov
mov
push
push
aaa
or
in
bound
or
ret
xchg
out
add
hlt
jmp
insl
adc
add
loopne
mov
adc
in
xor
je
nop
mov
add
push
or
jb
fmul
dec
mov
pop
jmp
inc
mov
pop
hlt
rcl
sub
push
add
push
inc
sbb
ret
or
and
jbe
jmp
roll
mov
xchg
sub
push
subl
inc
jns
mov
divl
cmp
jmp
xchg
mov
mov
stos
push
in
jecxz
mov
jnp
dec
daa
rclb
movsl
movzwl
pop
andl
add
pop
and
dec
jne
cmp
test
push
call
jne
push
cltd
je
cmp
push
es
pop
or
mov
push
in
test
add
xor
mov
sub
into
fdivrs
daa
adc
test
sbb
lods
ljmp
andl
sbb
or
popf
inc
out
mov
or
out
inc
dec
mull
inc
adc
and
inc
push
pusha
jo
push
mov
adc
pop
in
cmp
push
sbb
and
out
adc
mov
and
and
pop
sub
add
mov
ret
clc
and
int
sbb
movsl
jmp
sub
or
jg
adc
enter
mov
add
andw
xor
jmp
shlb
sarb
push
pop
in
xchg
mov
inc
data16
adc
jle
pop
sbb
dec
insl
and
and
in
leave
and
fdiv
cmp
hlt
outsl
push
arpl
push
test
shrl
mov
mov
push
pop
add
add
sbb
xchg
and
pusha
test
call
add
add
idivl
test
add
cmpb
in
add
xchg
adc
and
sub
or
dec
lods
movsb
lock
shrl
loop
jne
inc
xor
leave
mov
pop
push
ror
cmp
add
insb
push
pop
jo
fcomip
movsb
iret
fmuls
out
jmp
daa
or
imul
xchg
add
mov
cmp
jp
test
push
sub
sbb
pop
call
sbb
dec
je
mov
cmp
push
xor
lcall
pop
arpl
dec
push
addr16
or
inc
mov
cld
mov
shll
pop
je
or
pop
cmp
lods
pop
push
dec
jbe
rolb
add
add
imul
xchg
aaa
cmp
jbe
orl
into
sti
out
loop,pn
xchg
out
into
mov
or
outsl
negl
push
jae
test
jmp
sahf
push
stc
imulb
dec
ja
add
jmp
sbb
in
xchg
add
cli
je,pn
push
jb
iret
and
jno
xor
in
sub
imulb
cmp
mov
inc
and
cltd
push
lods
ficoml
in
sbb
pop
mov
add
or
repz
inc
inc
test
popa
mov
add
pop
ficoml
and
movsl
pop
dec
test
add
mov
add
pop
push
or
lret
mov
mov
inc
insl
lcall
pop
jg
movsb
and
ret
mov
cmp
mov
iret
sti
or
inc
adc
cs
stc
cs
jae
fsub
pop
fsub
xor
in
pop
sahf
dec
push
in
in
pop
in
cwtl
mov
loop
cmp
lock
div
mov
out
and
loope
rorb
rorb
cli
test
mov
loopne
and
popa
call
add
push
movsb
xchg
mov
sbb
rorl
pushf
jbe
or
inc
push
fisubrl
loope
lods
pop
stos
and
imul
fildl
sbb
jmp
and
pop
inc
adc
addr16
mov
inc
add
mov
insl
pop
fcompl
push
lods
xchg
or
mov
add
adc
aad
cmpsb
jmp
sub
je
sub
mov
je
dec
sbb
orl
rolb
xchg
test
stos
movsb
jbe
mov
cli
lods
dec
es
and
mov
shrb
fimuls
xchg
rolb
pushf
mulb
pop
sub
lock
jmp
xor
or
inc
sbb
pop
cmpsb
sbb
cs
loopne
mov
outsb
inc
and
popl
cli
ja
scas
xor
mov
dec
dec
test
inc
mov
ret
or
mov
mov
or
fsubrs
int
adc
gs
shll
xor
pop
sbb
and
and
ja
out
fucom
repnz
dec
bnd
or
rcl
mov
aas
ret
adc
mov
cld
jno
sub
bound
sub
fucom
imul
mov
adc
pop
dec
fmull
and
inc
xor
or
not
iret
mov
mov
sub
jge
or
jge
inc
mov
lahf
je
enter
dec
xorb
nop
or
mov
jl
mov
cwtl
adc
add
divl
pop
ss
dec
lcall
xchg
or
cmp
call
in
sbb
push
push
pop
mov
stc
push
mov
sbb
adc
dec
mov
loopne
in
cwtl
jmp
pop
adc
aas
loope
mov
int3
jmp
adc
and
adc
add
movsl
pushf
adc
pop
popa
js
push
cwtl
lock
imul
dec
adc
pop
sbbb
cmpsb
sbb
add
or
dec
inc
in
jb
mov
adc
adc
loop
mov
cwtl
lods
fldln2
xor
and
jge
jle
add
sub
cmp
frstor
xor
outsb
loopne
fldt
les
inc
xchg
inc
push
ret
sarl
rclw
pop
rorb
mov
sub
jne
cmpl
sbb
mov
lea
jg
shll
insb
mov
test
push
js
mov
cmc
dec
jns
mov
inc
call
and
and
ret
data16
and
sbb
ds
int
out
std
mov
aas
ja
rolb
push
mov
pop
inc
mov
fists
ss
repnz
lret
mov
sbb
jne
dec
inc
or
cmp
iret
and
inc
or
push
dec
fwait
les
xchg
dec
lret
lea
add
add
stos
jle
push
ret
mov
clc
mov
lods
mov
adc
loopne
dec
movsb
inc
scas
lret
popf
in
decl
jb
cmp
jae
xchg
outsl
adc
incl
addl
subl
cmp
xorl
add
mov
pushf
and
jg
add
cmp
sahf
fdivrl
lcall
jmp
lret
mov
rorl
cs
ljmp
mov
sub
adc
dec
and
inc
es
div
push
outsb
in
inc
inc
js
fildll
or
fcom
insl
mov
pop
shr
or
mov
sahf
add
pop
inc
dec
les
jne
cmp
xor
dec
pop
loopne
mov
dec
push
dec
icebp
fists
or
bound
sub
add
fiaddl
fiaddl
pop
fiadds
cli
fsubp
xchg
or
inc
jmp
ljmp
rcrl
cmp
xor
pushfw
or
or
pushf
into
jmp
data16
inc
lds
add
int
sbb
cmp
shrb
sti
mov
lods
jl
jbe
lret
mov
mov
xor
mov
into
stos
cmp
add
adc
and
inc
mov
or
loopne
jg
les
mov
ljmp
cmpsl
std
daa
in
push
inc
add
push
movsl
fnstsw
ds
repz
fwait
cld
loopne
push
push
out
push
or
inc
aas
icebp
pop
inc
sarb
hlt
dec
add
or
adc
adc
add
inc
cmp
and
fsts
pop
dec
push
out
inc
sub
xor
sub
js
enter
mov
push
adc
aas
xor
sbb
inc
dec
rorl
js
sahf
push
ds
hlt
add
add
dec
clc
sbb
jbe
mov
ret
or
dec
imul
call
and
les
pop
adc
mov
dec
dec
sub
push
push
andb
jo
mov
hlt
icebp
cld
push
je
inc
lcall
dec
cmp
push
inc
xor
and
mov
add
sbb
mov
orb
fimuls
test
mov
mov
pop
add
rcrb
cs
imul
mov
mov
sub
cmp
push
inc
sub
stos
adc
mov
jle
ja
out
movsl
popa
idivb
mov
sahf
scas
mov
dec
cmp
adc
addw
or
nop
sub
inc
les
subb
xor
mov
insb
xor
adc
lock
scas
shlb
push
sbb
fs
mov
adc
jge
ret
add
insl
dec
je
or
cmpsb
pop
inc
cwtl
cmp
flds
dec
push
mov
cmp
xchg
mov
adc
fsubl
and
fstps
adc
int3
test
xor
adc
push
jno
jo
in
imul
xchg
cmpsb
shl
jne
js
push
add
test
cmp
in
push
movsl
test
dec
ret
cmpsb
out
rorb
mov
jns
lods
pop
jg
jb
in
pop
jmp
stos
pop
sahf
adc
test
pop
repz
orb
mov
in
push
sbb
adc
ret
loopne
pushf
dec
decb
push
lcall
lods
clc
insb
and
adc
nop
cmp
mov
fdivrs
push
sub
fidivs
xchg
dec
pop
ret
andps
adc
cmp
pop
jo
pop
or
sbb
outsb
lahf
je
mov
cld
inc
sub
psrld
rcl
cmpsl
cmp
loop
push
push
add
dec
cmpsb
aad
jnp
xchg
mov
dec
mov
jecxz
out
cmpsl
or
pushf
cmp
pushf
sbb
jbe
mov
and
je
add
sahf
dec
xorl
test
fcoml
xchg
jb
je
mov
sub
fsubr
sbb
adc
mov
pop
aam
pusha
and
ret
imul
jnp
or
je
mov
jb
mov
pop
fstps
jno
sbb
addb
xchg
pop
inc
xor
adc
incl
loope
jle
push
pop
push
out
int
mov
lods
fmull
adc
loopne
pop
jge
push
xchg
dec
jae
mov
mov
js
inc
and
sbb
and
call
inc
push
adc
cmpb
mov
mov
rorl
out
pop
cmp
inc
push
mov
nop
rcll
movsb
loopne
cld
jno
mov
jne
jecxz
test
mov
or
leave
mov
add
leave
mov
leave
loopne
add
push
rclb
mov
cs
adc
or
push
inc
inc
adc
adc
mov
mov
push
push
cmp
cmp
mov
sbb
xchg
and
inc
das
push
call
loopne
les
dec
loopne
leave
xchg
pop
fcomps
enter
mov
je
adc
incb
dec
fmull
data16
cmpsl
or
repnz
fmull
jmp
gs
je
call
inc
cmc
mov
push
sti
loope
cmpsb
lcall
std
movsb
sub
sub
or
jl
mov
repnz
sub
mov
les
push
rorb
test
dec
popf
les
lea
cmpl
rorl
int3
jle
adc
pop
clc
fdivs
xchg
test
call
jg
xchg
jo
add
dec
nop
inc
push
and
sahf
scas
inc
push
jne
cmp
mov
mov
inc
int
jb
cld
nop
pop
jne
pop
int3
fiaddl
adc
rol
dec
jl
inc
sbb
in
and
lods
sbb
inc
cld
and
jg,pt
mov
imul
int3
mov
cmp
cmpsl
std
push
pop
inc
add
pop
pop
fs
add
repz
xchg
ss
adc
sahf
adc
mov
dec
dec
jae
xor
or
cmp
jg
dec
ja
lret
leave
push
in
push
mov
push
and
clc
sub
pop
push
inc
adc
mov
mov
inc
aaa
xchg
xor
or
add
ja
rorl
cmp
add
add
dec
or
xor
aaa
fs
inc
add
xor
rolb
cmp
das
or
adc
or
lahf
add
jbe
pop
testb
add
pop
add
je
mov
stos
pop
dec
in
sub
lret
dec
or
sub
sub
and
sbb
cli
xor
cmp
mov
xchg
jmp
cmp
jae
mov
cld
sahf
cmp
jbe
or
ret
insl
cmpsl
and
and
pop
adc
or
and
out
mov
orb
jge
sbb
popa
push
or
mov
push
dec
jne
adc
jmp
xchg
push
repnz
test
push
push
lret
adc
sbb
pop
push
lret
mov
je
jb
sub
je
push
add
ss
lahf
pop
ja
add
sbb
add
mov
fstps
lds
mov
xchg
cmp
sbb
test
sbb
call
inc
lret
repz
testl
mov
dec
mov
ja
enter
pop
xchg
mov
or
push
xchg
fists
sub
adc
lret
xlat
jle
aaa
inc
notb
add
cld
inc
divb
jne
jg
jne
mov
jmp
lock
mov
push
push
je
das
das
adc
xchg
icebp
mov
add
cmp
inc
or
jmp
sbb
jne
adc
bnd
movsb
mov
or
jmp
mov
mov
adc
cmpsl
inc
popl
pop
fdivs
jo
or
pop
and
jp
add
sub
mov
in
aam
shrb
gs
jl
adc
jecxz
or
add
cmp
cs
push
out
rolb
jb
push
aas
sub
cmc
cmp
ss
xchg
addb
push
adc
ljmp
xor
pop
sti
aas
testb
mov
or
add
xchg
push
daa
inc
adc
or
movsb
inc
rcrb
fldl
xor
dec
pop
and
and
dec
lock
pusha
sub
cmp
js
push
sti
cmc
inc
lea
dec
ja
push
adc
jl
test
testb
rorb
shll
mov
rcrb
leave
or
incl
xchg
and
pop
push
and
fwait
sbb
push
arpl
or
arpl
inc
lar
inc
repnz
mov
inc
std
xor
push
sbb
insb
inc
add
pop
add
aaa
out
mov
push
les
or
adc
addl
or
dec
push
pop
pop
cmpsb
mov
jge
jecxz
fsubs
ljmp
push
fwait
jmp
push
into
push
push
shrb
insl
les
inc
jge
mov
fcomps
push
pop
arpl
sbb
jge
xor
xchg
cli
adc
scas
adc
insb
jbe
lea
lea
and
pop
in
ljmp
mov
jmp
mov
mov
popl
sub
movl
cmp
push
or
push
enter
sbb
jo
mov
lock
xchg
fstpl
mov
xchg
dec
adc
dec
lea
add
sub
rorl
mov
aas
test
call
pop
lock
movsl
loope
icebp
mov
xor
cmp
xor
out
loope
mov
pop
jmp
insl
dec
loopne
dec
push
sbb
xchg
insb
lret
add
sbb
or
and
push
jne
pop
lods
or
arpl
xor
outsb
adc
add
iret
rolb
xchg
test
bound
pusha
mov
or
pusha
mov
and
adc
cwtl
fdivrl
hlt
push
inc
cmp
cld
test
stc
pop
pop
inc
negb
bound
cmc
and
cmp
add
mov
jmp
inc
push
in
sbb
repnz
mov
push
pop
push
int3
aaa
sbbl
and
jmp
xor
pop
and
lock
inc
pcmpeqd
adc
cs
movsl
jmp
bswap
test
push
push
or
je
shlb
sbb
mov
inc
dec
jecxz
jle
cwtl
jg
push
or
adc
jl
or
pop
adc
sbb
rorb
pop
mov
add
sar
sbb
mov
jne
dec
or
rcr
add
add
mov
jge
pop
fldt
or
ret
repnz
pushf
pop
push
dec
in
add
mov
xchg
sbb
pop
fwait
rcll
inc
mov
mov
addl
call
pop
nop
pop
fwait
shlb
add
pop
test
cmp
adc
ret
inc
push
or
mov
jbe
les
cmp
inc
ja
outsb
push
fwait
mov
jg
cmp
xor
addb
insl
loope
loop
mov
stc
ds
out
add
push
or
test
or
xchg
dec
xor
jae
jo
cmp
mov
sarl
inc
ljmp
shlb
dec
movsb
sub
adc
or
or
push
xorb
inc
inc
and
sub
and
repz
xchg
or
sbb
pushf
dec
test
js
mov
cmp
push
and
adc
adc
push
pop
add
dec
sub
aaa
imul
fldt
leave
sahf
jne
cmp
sbb
and
lock
xor
mov
cmc
testw
ret
add
test
into
addb
adc
fcoms
mov
out
fcomps
sub
xor
or
outsb
mov
jne
shr
sub
xorl
loop
insl
pushf
enter
sbb
sub
push
aam
test
outsb
cwtl
mov
sbb
gs
hlt
popa
subl
mov
roll
insl
hlt
push
add
repnz
call
add
xchg
mov
mov
lods
pop
les
dec
aad
loopne
daa
lcall
and
push
mov
cmpsb
scas
and
push
rorl
fcmovnb
pop
push
add
cmpsb
jg
pop
add
pop
add
pop
stos
sbb
inc
lea
repz
nop
lds
sbb
aad
lds
rcll
stos
test
xor
cmc
cli
add
popf
out
sbb
jne
mov
test
push
inc
pushl
icebp
or
out
movsb
xor
rclb
stos
add
clc
dec
or
sbb
cwtd
popa
out
jp
jbe
jle
movsb
fisttpll
add
jl
mov
pusha
add
or
mov
ss
pop
test
push
sbb
lods
pop
sbb
mov
test
xchg
sbb
movb
lds
add
addr16
jge
orl
clc
push
inc
lods
or
lods
add
mov
ss
push
xor
leave
dec
mov
xchg
or
dec
loopne
in
call
aam
xor
xor
enter
outsl
fsubrs
cltd
jno
jae
adc
in
cmpb
sbb
lcallw
fs
jb
adc
and
clc
addl
ret
cmpl
addb
inc
push
fwait
xor
cmp
lods
jecxz
lods
imul
mov
push
sbb
sahf
aas
gs
pop
in
rorb
icebp
jecxz
sub
xor
push
popf
outsb
loopne
mov
lret
negb
ss
int
enter
mov
mov
inc
mov
adc
das
adc
mov
fmuls
add
in
mov
add
mov
je
or
outsb
rol
sub
mov
in
push
mov
add
sbb
jb
test
sbb
cmp
xor
sbb
and
add
xor
jae
repz
adc
cmp
int
addl
inc
inc
pushf
push
xor
adc
add
enter
and
ja
outsl
movsb
sub
sub
lret
dec
js
aad
data16
inc
xchg
movsb
add
inc
or
or
ds
add
and
cmp
add
push
push
mov
xchg
or
or
sub
push
inc
pop
cmpb
mov
push
je
xchg
mov
sub
pop
arpl
xor
push
shrb
lods
mov
mov
push
jg
jmp
sbbb
xor
mov
jmp
arpl
sbb
push
pushf
pushl
lods
fstl
or
and
cmp
mov
lret
xor
sbb
lods
je
mov
subl
adcb
adc
hlt
and
popf
pushf
cmpb
test
fstl
xchg
sbb
xchg
or
pop
cwtl
push
lea
cmp
add
sbb
leave
xchg
sbb
mov
leave
or
pcmpgtd
dec
dec
sub
dec
add
pop
sbb
or
sbb
cmp
in
and
adc
xchg
fld
lods
sbb
pop
add
sbb
inc
or
sbb
lcall
pushf
push
pop
lcall
mov
or
xor
pop
sbb
shlb
ret
pop
je
adc
mov
mov
jbe
idiv
ljmp
sub
movsb
cmp
sahf
push
jge
cmc
push
in
rcrb
inc
clc
ficoms
stos
mov
add
and
jne
or
adc
sub
adc
add
push
rol
loop
fwait
idivb
pushl
jo
fmuls
dec
das
cs
incb
or
shll
pop
sub
cmpsb
fs
inc
add
cmpb
test
add
repnz
mov
or
fs
dec
mov
adc
sub
cmp
shrb
add
in
mov
ss
adc
push
sbb
adc
adc
ds
test
cmpsb
adc
cmp
popa
xchg
fsubs
mov
ret
adc
dec
test
shl
jne
pop
data16
push
les
xor
adc
sbb
sub
dec
or
mov
incb
push
jbe
adc
xor
sbb
inc
sub
rcr
push
xor
and
jnp
in
xor
shr
aam
adc
add
jb
xor
jmp
dec
xor
xchg
xor
mov
addb
push
xchg
xchg
pop
mov
adc
push
ret
and
push
push
push
sub
add
testb
je
mov
bound
je
mov
fidivl
fidivrl
pop
aam
add
ficomps
insb
add
dec
push
and
push
push
cmpb
add
jne
sbb
loopne
pop
dec
add
or
aam
mov
xchg
call
adc
push
xchg
pop
add
popf
pusha
inc
push
inc
add
jbe
adc
out
add
pop
sbb
imul
nop
or
imul
nop
fadd
int3
cmp
jae
andl
adcl
adc
or
inc
fwait
lods
mul
mov
imul
dec
and
lea
fistpll
or
movb
jmp
out
jmp
mov
fsubrs
or
mov
mov
sub
inc
loope
popf
imul
xor
sarb
jno
mov
xor
in
mov
jne
xor
pop
adc
xor
add
add
addb
add
pushf
adc
sbbb
push
inc
mov
sbb
pop
hlt
add
test
jmp
rolb
or
xchg
inc
es
cmpsb
xchg
jle
jle
pop
pop
add
adc
jb
dec
push
or
mov
sahf
pop
call
sbbl
leave
jecxz
pop
dec
sbb
inc
es
jmp
sti
jno
and
mov
or
divb
sub
jne
es
sub
push
aad
adc
cltd
push
insb
sub
sub
dec
mov
push
test
jne
adc
or
or
sub
push
subb
xchg
and
cmp
xor
sarl
leave
test
ja
xchg
lods
ret
add
jmp
dec
je
sub
subw
adc
mov
pop
xor
adc
mov
or
insb
adc
sbb
sar
and
stos
cs
movw
xchg
outsb
adc
sub
push
add
fwait
aam
xchg
pop
push
daa
shl
stos
sbb
clc
scas
mov
cmpsb
leave
cmp
adc
and
lods
jmp
jge
push
cmpl
gs
pop
inc
xchg
pusha
sub
scas
sbb
push
push
addb
enter
dec
shlb
push
hlt
outsb
call
out
inc
add
xor
pop
fisubrl
mov
test
sub
iret
dec
loopne
cld
pop
sbb
inc
cmpl
mov
gs
add
mov
pop
int3
lock
adc
cwtl
inc
push
cmc
dec
xchg
ficoms
push
or
shll
lahf
cs
push
push
mov
push
aas
add
push
jmp
lods
scas
pop
mov
push
sbb
frndint
dec
cld
inc
mov
cmp
pop
push
jb
lea
mov
and
push
mov
jbe
lea
stc
out
pop
dec
or
or
int3
mov
add
and
sub
add
jne
sub
sub
xchg
cmpb
repnz
sub
adc
cmp
ja
jl
test
jmp
or
push
or
add
addl
sub
lock
add
scas
andb
or
add
inc
jb
inc
cmp
nop
hlt
and
insl
loope
ret
cli
or
pop
fmuls
or
sub
jge
jae
xchg
xchg
add
int
shll
mov
xor
lea
inc
gs
xchg
mov
js
inc
loopne
push
add
xlat
jne
ret
repz
push
mov
dec
loop
push
sti
add
jmp
xchg
sbb
iret
xor
and
aam
shl
sbb
cmpb
in
inc
test
aas
push
aaa
xor
ds
mov
mov
push
sarl
adc
sub
mov
dec
movl
jl
and
scas
adc
pushf
add
xor
mov
mov
adc
jno
xchg
cs
daa
int3
adc
mov
dec
sbb
out
pop
and
xchg
inc
push
loope
sub
xor
jg
pop
inc
mov
add
and
and
cwtl
out
js
ficoms
lahf
call
cmp
dec
pop
add
push
or
iret
je
inc
mov
mov
sahf
cmp
push
or
push
or
adc
ret
ret
push
adc
loopne
add
ds
shl
jle
and
mov
xchg
mov
sub
inc
and
dec
add
add
pop
cmpsl
cmp
int3
data16
and
mov
loop
push
pusha
jle
call
imul
xor
sbb
add
aad
push
jnp
scas
cltd
inc
in
cmpl
adc
adc
add
fs
push
or
daa
xchg
popa
adc
clc
je
mov
or
jmp
mulb
sbbb
jo
jo
add
cmpsl
mov
mov
pop
cmp
push
mov
cwtl
push
adc
std
mov
or
movsb
xor
lcall
dec
mov
or
pushl
sub
or
enter
dec
popa
mov
sbb
add
mov
add
sub
and
mov
call
dec
cmp
cli
add
mov
xchg
sbb
loopne
mov
adc
clc
adc
loop
pop
inc
stos
jp
sbb
jp
pop
sbb
jbe
or
adc
xor
test
or
push
and
xchg
insb
xchg
mov
outsb
add
mov
call
jno
out
or
inc
ja
daa
add
inc
cmp
aad
inc
and
add
dec
stos
orl
add
jno
sub
inc
ret
stos
pop
cmp
inc
sbb
push
daa
sbb
add
adc
adc
ja
push
push
pop
cmpb
je
push
xchg
rcrl
mov
add
xor
fcom
sti
popa
or
fucom
dec
xchg
les
cltd
push
xchg
test
add
jp
faddl
xor
sbb
or
lods
jbe
imul
pop
shrl
popa
lea
and
adc
mov
jmp
shl
cmpsb
pop
xchg
mov
sbb
mov
push
xor
ucomiss
add
ja
sbb
cmp
or
sub
sbb
adc
cwtl
sub
sbb
push
mov
sub
movb
aas
jne
xor
sub
inc
or
inc
sub
pop
cmp
xchg
or
stc
or
add
pusha
pop
movsb
loopne
cmpl
lods
xchg
xor
add
add
adc
mov
mov
stos
arpl
add
adc
mov
in
js
or
sbb
cmp
add
and
sbb
test
test
test
sub
mov
push
rcrb
ds
frstor
cmc
xor
fsts
mov
test
and
sahf
mov
aad
adc
cmp
push
fbld
xor
pusha
ljmp
daa
mov
jle
and
paddd
xor
pop
div
adc
lea
add
push
sbb
sbb
les
bound
ror
int3
jp
nop
jo
dec
stos
and
in
and
incb
lock
add
lods
rclb
push
adc
add
add
out
inc
scas
dec
lock
pop
divb
lea
and
push
loop
mov
mov
xchg
rolb
xor
dec
xor
push
inc
add
test
dec
in
int
xor
adc
int
jo
inc
outsb
inc
outsl
jle
push
jmp
jno
fs
jnp
cmp
into
pop
in
fadds
fidivs
inc
pop
xor
jb
mov
or
adc
insl
adc
jge
xor
lea
adc
dec
ljmp
or
add
and
mov
cmp
push
mov
fiaddl
lock
test
orl
cltd
and
loop
and
mov
popa
dec
dec
les
ret
inc
cwtl
insb
adc
rcrb
pop
add
roll
test
repnz
push
paddsb
or
push
out
mov
loop
and
fs
dec
lods
xlat
sbb
pop
cmp
or
dec
and
outsb
adcb
out
gs
out
inc
xchg
pusha
orb
xor
inc
ja
lock
in
andb
push
push
shr
mov
pop
add
ljmp
adc
mov
and
push
and
test
sbb
cli
outsl
dec
mov
or
nop
mov
pusha
bound
mov
orl
and
test
xor
rolb
and
lret
mov
adc
adc
std
in
shlb
js
xor
adc
or
pop
mov
add
test
test
add
or
out
lcall
enter
mov
add
adc
xor
xlat
xchg
adc
mov
cmp
je
or
or
dec
pusha
push
adc
mov
or
mov
clc
decb
insl
and
lret
jmp
inc
and
mov
dec
fisubl
and
jecxz
sbb
lods
ret
fdivrl
je
xchg
jmp
xor
sbb
xor
sbbb
jp
sub
or
and
mov
or
loope
cmpsb
sbb
fldenv
mov
dec
cmc
mov
pop
sub
cwtl
dec
and
cltd
push
inc
jecxz
pop
fstp
cwtl
out
and
pusha
pusha
sbb
cmpsl
ret
xchg
inc
pop
mov
mov
inc
or
sub
test
out
test
push
mov
adc
or
ret
mov
xchg
ret
out
or
orl
ror
push
and
mov
adc
testl
out
and
adcb
je
jb
sbb
jmp
outsl
stos
push
and
inc
add
fstpt
inc
flds
fstps
jmp
fisttpll
dec
out
push
pop
lods
xchg
into
scas
jbe
mov
and
loopne
add
test
rcpps
fcomps
testl
movups
pop
xchg
or
add
cmp
imul
sub
or
xor
xor
cltd
and
bound
cmpsb
addl
push
dec
jmp
sub
pushf
sbb
pop
sub
jmp
sub
push
mov
fmuls
fldcw
inc
test
int
popa
fs
pop
xchg
sbb
subb
imul
nop
xchg
push
jl
jb
insb
mov
pop
in
movsl
add
jnp
into
outsb
jge
aas
inc
ret
lock
jmp
add
loop
xchg
sub
cs
or
mov
or
push
push
cmp
jge
dec
inc
mov
test
shrl
sbb
sub
rcrl
int3
loopne
subl
or
mov
adc
pop
sub
out
push
popa
inc
loopne
jg
dec
pop
xchg
and
je
push
ljmp
xor
es
stc
loopne
dec
cmp
adc
outsb
push
and
mov
mov
pop
ret
lret
ret
inc
cmp
push
js
in
push
filds
add
pop
xor
movsl
mov
lds
xor
ret
add
mov
mov
icebp
cmpsb
je
out
inc
mov
sbb
add
inc
scas
dec
and
and
mov
sub
out
sub
and
lock
scas
add
adc
test
ret
bound
add
add
rorl
sti
fsubrp
fwait
jno
mov
scas
inc
and
cmp
es
sub
pusha
movsb
mov
inc
lods
dec
lret
or
cmp
out
dec
adc
stos
adc
mov
pop
pop
dec
add
mov
in
in
xorb
add
and
fwait
add
or
and
out
inc
push
xor
shll
cmc
xchg
ret
sub
pusha
sbb
push
pop
adc
pop
rolb
lcall
and
pop
sub
faddl
lcall
fnstsw
movswl
adc
fnclex
pop
sub
std
dec
ftst
jle
and
and
insl
outsb
out
inc
popf
or
insl
or
inc
cld
leave
push
mov
inc
or
nop
or
sub
pop
hlt
fistpl
mov
aam
fs
xor
ss
sbb
es
mov
and
clc
scas
nop
and
or
icebp
fstp
fucomp
jbe
sbb
orb
cmp
leave
push
inc
aas
out
je
xchg
inc
je
sbb
xor
inc
les
addb
cmpsl
sarb
out
pushf
xchg
andl
and
mov
inc
add
pop
add
shll
push
sbb
adc
pop
subl
addb
and
adc
pusha
mov
push
jbe
dec
cwtl
push
ret
jbe
adc
filds
or
jae
shld
shl
cmp
lods
ret
push
sbbb
sbb
test
aas
lods
rcl
ljmp
shr
arpl
and
push
xchg
add
addb
cmp
loop
or
in
lret
inc
pop
inc
int
add
pop
movaps
int
call
loope
fidivrs
mov
push
cmp
jmp
sbb
xchg
and
test
and
icebp
push
rolb
fwait
mov
jp
shl
sub
push
xchg
je
scas
mov
scas
push
push
andb
cmp
sbb
movsl
or
rolb
nop
cmp
inc
xor
insb
or
xlat
sbb
jno
xor
ffree
add
push
cmpsl
cmpsb
jg
dec
mov
ret
jo
cmp
and
je
push
xor
mov
stos
mov
or
and
mov
je
fldcw
mov
jnp
lcall
jmp
das
test
sti
pop
and
add
xor
push
into
pop
sbb
push
adcb
pop
inc
pop
data16
xor
or
pop
add
pushf
out
test
jbe
lock
or
popf
jbe
testb
jne
cld
out
scas
movsl
repz
dec
loop
cmpb
jne
lea
sahf
insl
lock
pop
mov
push
push
orl
dec
inc
shll
fstpl
sub
add
in
andb
mov
pop
xchg
adc
or
sar
push
and
add
movsb
or
mov
xor
push
neg
insl
imul
add
lcall
xor
sub
mov
mov
sub
mov
or
sub
fxam
rcrl
fidivrs
shlb
lcall
mov
loope
stc
rol
mov
and
xlat
and
orb
pop
cmpsb
pop
aad
sub
cmp
stc
mov
icebp
in
std
rol
mov
mov
nop
or
add
les
xchg
jge
insb
mov
jmp
mov
ret
or
test
mov
out
fldt
inc
lcall
ret
stgi
add
mov
daa
add
jmp
pop
faddp
test
and
sub
mov
cmpb
add
je
fchs
dec
fstpt
cmp
outsb
push
add
add
mov
lods
sub
mov
or
sbb
mov
add
sbb
imul
or
and
pop
movsl
or
jns
xchg
mov
sbb
mov
sub
fmuls
inc
sbb
and
push
push
into
stos
popf
fsubrs
sub
jmp
rorl
adc
stos
adc
mov
ret
in
sub
or
jb
push
add
cmc
fldt
jmp
fwait
inc
test
pushf
mov
stos
xchg
jle
loopne
jbe
dec
fcoms
sub
push
int
fdivr
adc
and
ret
jmp
push
cli
adc
arpl
jno
or
sbb
adc
adc
scas
insl
iret
pop
push
daa
pop
movsb
shll
lret
xchg
add
in
movsl
cwtl
adc
jge
or
das
jb
nop
and
lret
fsubl
pop
lret
sub
mov
jge
fcomp
movsl
out
xor
adc
lret
int3
dec
outsb
xchg
add
cmp
data16
jge
insb
in
shr
xor
or
int3
int
mov
or
adc
adc
jge
mov
imul
pop
jb
inc
int
into
xchg
fnsetpm(287
inc
int
or
pop
mov
adc
jge
pop
mov
das
xchg
or
addb
iret
leave
insl
jb
into
cmp
insb
adc
jge
lods
pop
xor
js
cmp
and
or
sub
jg
or
loopne
cmp
fnstenv
dec
nop
add
pop
mov
outsl
sub
sub
pushf
nop
call
mov
or
in
xchg
or
lock
and
fsubl
inc
pusha
or
mov
or
fldt
sbb
add
decl
add
adc
xchg
adc
jl
lods
and
adc
mov
pop
sub
sub
mov
rorb
test
xorb
cmpb
clc
dec
dec
in
dec
mov
es
cs
into
dec
xor
stos
cs
flds
das
fidivrl
cli
xor
ja
xor
pop
in
js
jnp
sub
mov
ss
or
mov
mov
es
sbb
or
es
adc
jb
loopne
fstp
jmp
pop
sahf
sti
inc
push
jne
aaa
es
xor
cmp
xor
cmp
add
cmp
aas
aaa
adc
pop
add
add
repnz
sub
shll
xchg
add
gs
fmull
scas
sti
dec
loopne
and
fldt
sub
data16
xor
je
fchs
jmp
push
clc
xorl
cmp
add
enter
add
mov
insb
xor
subb
push
sbb
fs
adc
xor
andl
or
dec
shl
mov
sbb
pop
xor
xor
mov
dec
cmp
je
call
xchg
push
xor
mov
inc
and
jb
jns
or
cmp
out
add
repz
cmp
dec
add
mov
sub
sti
sbb
fsubrp
and
or
shll
movsb
loopne
and
sbb
outsl
inc
and
ret
adc
inc
jb
cmc
daa
mov
jne
or
jns
and
adc
xchg
adc
add
pop
cmpsl
jle
ret
push
push
aam
mov
fsub
push
adc
adc
or
sub
pop
add
push
or
xchg
xor
add
sub
mov
lock
insb
dec
lock
cmp
mov
adc
mov
icebp
inc
adc
test
movsb
ja
jl
push
je
mov
xor
notb
mov
inc
popa
xchg
adc
ret
push
pop
pop
mov
cmp
sbb
loope
pushl
jo
aas
add
jmp
mov
mov
or
and
xchg
inc
xor
and
jge
dec
or
sarb
add
push
ja
addl
add
sub
lahf
push
sbb
sub
popa
outsl
sbb
and
pop
cmc
and
xor
mov
and
mov
stos
mov
cmp
sub
jmp
adc
outsl
jo
in
mov
loopne
adc
mov
outsb
fldl
imul
xchg
xchg
out
lods
cmc
aaa
mov
adc
push
sub
dec
sbb
jno
lcall
mov
fidivl
xchg
sub
and
jmp
or
or
cwtl
clc
mov
inc
mov
pop
imul
jle
xchg
sub
push
aaa
xor
cmp
inc
jmp
js
add
dec
cli
sbb
cmp
adc
ret
add
add
out
pop
inc
jo
jge
aas
sbb
mov
stos
and
jo
pop
and
jo
addl
adc
in
add
inc
and
pop
xor
loop
sar
js
cmpb
test
mov
or
dec
jp
push
sub
xor
fs
cltd
cmp
mov
ret
fildl
mov
jmp
sbb
jo
sub
lea
or
mov
inc
aas
dec
cltd
push
xorb
int
cmc
cmp
lock
pop
inc
fimuls
movsb
pushl
jp
imul
loopne
sahf
ret
adc
xchg
fisubl
add
jbe
pop
sub
fidivrs
push
sbb
imul
or
into
add
push
sahf
pop
fcomps
and
sbb
and
repz
roll
outsl
push
inc
sub
jmp
icebp
xchg
mull
leave
sbb
mov
pop
adc
mov
lahf
jo
jne
imul
dec
and
and
leave
call
mov
jmp
cmp
push
jmp
out
push
add
mov
cltd
ret
mov
xor
jmp
std
out
out
pop
adc
adc
add
xlat
fnstsw
sbb
or
ud0
add
mov
mov
push
aam
push
jnp
and
addr16
mov
js
push
lods
in
xor
adc
mov
out
cmc
and
pop
push
cld
scas
xor
out
sbb
mov
cs
mov
push
sbb
cvtpi2ps
adc
in
xchg
out
push
and
or
push
push
push
push
lret
mov
jns
lea
addr16
adc
int3
dec
mov
dec
dec
ds
and
dec
pop
rorb
out
mov
in
ss
push
sbb
mov
cs
adc
push
or
idivl
adc
push
andl
dec
mov
outsl
fsubs
jge
cmp
dec
sarb
add
push
push
jle
adc
fnstenv
fcmovne
out
jl
jg
push
jle
xor
inc
xchg
inc
call
push
add
or
xchg
jecxz
sub
pop
cmp
and
movsl
mov
sarl
sub
jmp
inc
nop
cmp
cs
js
insl
jno
andb
add
or
push
and
mov
adc
add
enter
dec
dec
adc
mov
imul
pop
rorl
mov
inc
cmpsb
fsubr
je
cli
mov
lock
sub
mov
xor
and
loope
jmp
ret
push
inc
lea
lods
sbb
fstps
mov
clc
cld
mov
sbb
scas
lea
push
scas
cmp
fisubrs
sub
sbb
push
mov
and
and
adc
loopne
pop
ficompl
jae
mov
or
adcb
xchg
jmp
jmp
push
pop
add
push
mov
outsl
jmp
ss
nop
or
jae
inc
jo
sub
add
dec
push
movups
add
sbb
xor
sub
imul
lret
mov
and
shlb
or
pop
outsl
push
sbb
jl
mov
inc
mov
add
test
xor
mov
and
xor
push
mov
cld
fcmove
and
mov
sbb
lock
aaa
enter
in
push
dec
inc
inc
sahf
sub
lret
sub
test
push
ret
mov
mov
inc
scas
inc
mov
lret
movsl
or
mov
scas
mov
std
or
pop
out
adc
or
fdiv
fiaddl
or
sbb
sbb
jo
sbb
sbb
sub
sbb
adc
das
test
xor
jmp
fsts
or
sbb
and
test
pop
or
push
ret
push
mov
fs
mov
or
xor
sbb
sbb
adc
incb
dec
jns
jmp
popa
emms
and
add
enter
popa
mov
add
mov
push
or
lcall
xor
jno
dec
xchg
sub
add
and
inc
inc
jne
inc
in
sbb
sub
sub
inc
loope
rcrb
mov
jne
sbb
mov
adc
data16
add
sub
lea
cmp
mulsd
push
adc
cwtl
sub
sbb
loopne
imulb
adc
leave
cmpl
rclb
loopne
cmp
mov
shl
in
and
xchg
mov
xchg
sahf
js
js
insb
and
loop
call
pusha
cld
out
cmp
push
rcr
adc
dec
repz
pop
sbb
sar
repnz
inc
outsb
dec
ja
pop
rorb
fdivp
fdivr
push
xor
outsb
pop
or
iret
out
jge
jns
jecxz
cmc
mov
in
jge
jl
dec
adc
adc
push
int
add
lahf
lret
into
unpckhpd
push
or
mov
adc
les
jg
mov
les
bnd
pop
dec
test
ja
stc
pop
lea
or
mov
and
fsub
f2xm1
fld1
les
rclb
lcall
ss
cld
mov
jbe
push
ret
mov
mov
sub
arpl
shrl
add
dec
or
fldl
and
or
filds
sbb
or
movsb
enter
or
add
mov
pop
movsb
sub
or
pushf
dec
out
add
ret
adc
test
pop
pop
ret
jl
pop
imul
sbb
shlb
adc
call
dec
in
in
mov
jmp
daa
je
inc
push
mov
xlat
pop
mov
jne
daa
xchg
sbb
mov
xor
dec
and
mov
xchg
jo
push
jae
fmull
push
jl
mov
jbe
dec
xchg
loopne
and
je
add
sub
xor
pusha
pop
rcr
push
in
lea
adc
orl
or
in
aad
cltd
aas
cmpsl
mov
imul
in
imul
add
in
arpl
add
add
pop
pop
inc
jb
dec
and
call
ret
or
push
cld
add
mull
call
fcomp
fmuls
mov
jp
mov
outsl
add
xchg
shrl
mov
and
out
ss
and
pop
sbb
push
rcrb
lret
dec
push
jl
pop
adc
xor
cmp
aam
and
or
daa
aam
add
sbb
jne
pop
pop
sbb
pop
mov
or
lock
imul
cmc
jne
or
stos
mov
int3
sahf
inc
jle
jge
add
jne
push
mov
ss
or
pop
ds
addr16
fs
jmp
imul
pop
cmp
cmpsb
lods
lahf
andb
dec
dec
fisttpl
enter
leave
xchg
jno
add
xor
aas
inc
ljmp
jmp
and
add
adc
xchg
xor
dec
inc
or
in
xchg
lock
icebp
xor
add
dec
cli
lcall
cmp
cmp
and
pop
sahf
add
mov
cmp
pop
cs
je
adc
dec
and
adc
add
inc
push
icebp
sub
sub
bound
jmp
dec
dec
jmp
pop
shl
aas
mov
inc
mov
adc
or
int
add
cwtl
lock
xor
out
mov
pop
and
or
mov
add
add
into
fdivrp
shr
jmp
add
dec
orl
push
pop
add
and
pop
mov
sar
jne
adc
or
imul
faddl
push
cli
add
add
stos
inc
movsb
ret
and
mov
or
andl
or
js
xchg
dec
push
sub
js
dec
add
cmp
add
push
sbb
and
cld
imull
iret
jb
bound
lea
or
fs
add
lea
jne
es
in
fidivrs
lea
push
xchg
and
mov
xor
movsl
add
imul
mov
push
es
sub
loope
ss
mov
fsubrs
in
sbb
pop
test
xlat
add
xchg
push
dec
add
insl
mov
scas
sbb
addr16
sub
insb
call
fwait
sar
add
addr16
or
and
out
and
adc
insb
ret
lahf
dec
je
cmp
cmc
je
dec
ret
sub
push
xor
pop
lods
insb
mov
clc
jg
dec
fistl
mov
inc
xchg
repz
ljmp
xor
jle
inc
sbb
std
or
cld
orb
insb
mov
add
sti
hlt
sbb
mov
cs
mov
xchg
loope
push
jl
pop
cmpb
roll
icebp
out
jne
sbb
mov
inc
or
and
pop
ret
jo
hlt
inc
jne
cmp
and
sub
push
pop
nop
gs
addl
push
int3
pop
xor
xchg
sub
sbbb
mov
push
sahf
rolb
out
movsb
add
jl
add
cmp
mov
jae
push
mov
ljmp
inc
sbb
mov
push
or
test
xchg
pusha
movsb
cmp
shl
in
jns
repnz
xor
rcr
pop
dec
and
mov
pop
lret
lcall
lock
xor
in
div
push
shll
jl
loopne
push
adc
cld
aam
push
icebp
jne
ljmp
inc
inc
xor
pop
je
or
inc
jbe
nop
push
and
sbb
movsl
insl
jl
notb
add
push
dec
and
cmp
jge
ds
aam
adc
pop
jae
add
push
inc
fstl
test
add
movsl
add
lods
adc
dec
add
mov
add
push
push
enter
mov
jo
lahf
mov
xchg
add
orb
stos
aas
xchg
inc
xchg
hlt
fstp
xchg
dec
int
cmp
add
xorb
adc
iret
xchg
jle
mov
add
and
call
into
mov
sub
cmpsl
insb
lahf
add
jno
mov
jbe
inc
cmp
adc
cmp
push
push
add
pop
hlt
cmp
je
movl
enter
insl
mov
cld
add
lods
movl
push
movsl
push
push
dec
push
jp
cmpsl
jo
push
hlt
cmp
inc
mov
and
xor
dec
mov
test
xchg
inc
dec
push
sub
fisubrl
xor
fsubrl
dec
ds
push
clc
les
xor
imul
cmp
ret
fcoms
xor
in
lret
jle
mov
ja
enter
scas
push
cld
sub
movl
cmpsb
inc
lods
push
mov
icebp
push
dec
mov
push
add
adc
hlt
jecxz
jmp
add
ds
inc
and
imul
sub
lock
loope
or
push
inc
or
mov
pop
imul
lock
adc
dec
dec
sti
lea
push
cmp
xchg
cld
add
les
mov
popf
stos
mov
nop
mov
int
ljmp
push
xor
in
mov
add
add
movsb
bnd
xor
movsl
xor
adc
cmp
sbb
cmp
adc
stc
imul
into
or
rcr
es
sub
xor
aam
ret
jmp
xchg
jne
xor
movsb
sub
mov
je
add
push
arpl
push
cltd
aas
ss
sarl
cld
fmull
pop
imul
inc
int
push
in
pop
pop
cmp
push
mov
cmp
adc
movsl
repz
repnz
pusha
pop
mov
daa
in
cmp
icebp
push
or
outsb
and
daa
adc
ss
fmull
and
sub
pushf
pushf
pushf
pushf
xor
cmp
inc
and
inc
cmp
cmp
push
dec
dec
cmp
pop
pusha
fs
dec
dec
dec
push
inc
dec
dec
js
cltd
movsb
cmp
test
mov
cltd
cwtl
pushf
mov
movsb
test
sub
adc
xor
dec
adc
lahf
lret
pop
dec
fwait
add
sbb
or
xor
xchg
push
jg
push
adc
movsb
andb
sub
int
xor
sbb
xor
push
xor
xor
cmp
and
test
aad
icebp
add
mov
mov
pop
dec
adc
add
jne
je
adc
push
mov
imul
pop
mov
insl
jl
mov
jl
or
std
decl
sbb
dec
jne
out
mov
mov
inc
inc
cmp
je
cs
and
add
outsl
push
and
mov
loope
add
add
fsubrs
xchg
testb
ja
cmp
and
and
cmpsb
stc
push
or
mov
sbb
jae
mov
pushf
pop
mov
imul
pop
repz
jge
movsl
aad
sahf
loope
test
push
jmp
mov
adc
or
or
test
ds
js
jmp
sbb
test
call
mov
scas
je
js
add
fdivrs
xor
fbstp
push
mov
popf
sbb
add
ret
xor
nop
dec
sbb
and
pop
sarb
push
sbb
icebp
pop
mov
pusha
jbe
or
enter
dec
mov
das
mov
or
adc
sub
call
dec
add
xor
pop
or
fs
sub
mov
lds
add
adc
daa
adc
sahf
mov
mov
lock
cmc
jne
adc
test
inc
jns
enter
in
push
jne
daa
call
das
mov
lahf
cmp
pop
insb
adc
push
or
pop
dec
jge
add
dec
and
cmp
imul
push
and
add
mov
xchg
shr
jns
or
sbb
sahf
adc
sbb
clc
push
lcall
inc
addb
loopne
mov
xlat
xchg
lahf
push
dec
or
sub
mov
sarl
fldt
cmp
inc
adc
mov
xor
inc
in
pop
xchg
shlb
daa
cld
je
mov
sub
adc
rol
mov
jo
dec
push
jo
imul
push
xchg
movsl
add
sbbb
add
negb
pop
push
dec
enter
sbb
fadds
push
adc
aam
ret
xor
lahf
and
and
dec
in
dec
inc
jl
sbb
pop
xor
xchg
inc
adc
or
es
enter
adc
add
inc
jae
loopne
and
data16
push
add
aam
fimull
je
cmp
loope
adc
and
jle
and
pusha
push
sbb
xchg
inc
push
jae
sub
dec
lock
jb
das
cli
push
jb
mov
jo
jb
mov
and
mov
jl
lock
jb
daa
fmull
xchg
dec
or
or
sub
cmp
or
or
mov
pushf
cs
into
push
pop
or
mov
xchg
cmp
jb
es
push
es
dec
jae
rcrb
xchg
data16
rclw
jb
sldt
ss
xchg
adc
dec
adc
loopne
scas
mov
mov
ljmp
int
fwait
adc
sbb
fcompl
inc
dec
daa
mov
pop
or
or
or
insb
sub
pop
das
mul
and
lods
add
je
sahf
adc
add
ret
in
and
jl
jo
adc
js
iret
xor
cli
xor
or
dec
push
and
pop
mov
faddl
aas
dec
ret
ret
inc
pop
jg
adc
iret
xor
xchg
js
or
aam
push
or
loopne
sbb
imul
movsb
mov
sub
leave
inc
enter
jne
sbb
subl
and
mov
xor
loopne
sbb
ljmp
mov
daa
loopne
into
add
sub
or
mov
aas
dec
pop
and
movl
or
lea
xor
inc
sbb
push
popa
add
aam
xchg
out
test
push
adc
xchg
adcl
xor
lret
sbb
loopne
ss
popa
rorb
cmp
js
imul
xor
jno
mov
lods
andb
xchg
test
clc
push
pop
cmp
jbe
inc
pop
enterw
pop
push
xor
fmull
or
or
notl
hlt
fwait
jge
mov
and
mov
xchg
push
push
cwtl
pop
inc
mov
ret
xchg
and
gs
cltd
xor
addb
dec
jo
jecxz
push
add
inc
enter
add
adc
sbb
cmp
cld
rol
push
mov
add
add
jl
fucomp
mov
insb
pop
out
xchg
or
mov
iret
jbe
push
pop
les
sbb
and
or
fcoms
movnti
aam
pop
cli
nop
sahf
adc
push
mov
repz
ja
aaa
dec
add
xchg
mov
subb
add
adcl
inc
or
mov
mov
mov
mov
and
push
jg
inc
push
cmp
jno
xchg
sbb
cmp
repz
mov
test
lret
xorb
jl
sub
add
sub
or
mov
or
pop
lahf
mov
leave
sti
enter
pusha
or
mov
or
jmp
insb
xchg
sbb
add
fstl
ja
jge
inc
fld
and
mov
adc
add
cld
cmp
xor
dec
push
xorb
sub
mov
pushf
jnp
pushf
mov
add
cmp
jne
es
sbbl
hlt
pop
jl
mov
xor
and
loopne
test
lock
sbb
test
clc
icebp
xor
sbb
xchg
cmp
xor
movsb
cld
cmpb
sub
mov
subl
add
les
loopne
xchg
push
jmp
jae
test
jne
sub
dec
pop
cmp
xor
pop
sbb
push
icebp
push
movsb
data16
and
xchg
and
cmpsl
mov
rorb
orb
sub
pusha
adc
or
ljmp
imul
test
and
pop
pop
and
push
xchg
rcl
fidivs
into
mov
inc
mov
and
push
cmp
jmp
xchg
mov
mov
sub
sbb
addr16
jb
mov
xor
cld
push
popf
pushf
pop
sub
push
popf
ds
cmp
inc
pushf
add
inc
mov
push
data16
pop
divl
inc
lahf
xchg
test
dec
insl
arpl
loop
xchg
iret
and
clc
insb
jge
jne
jg
leave
pop
subb
or
inc
pop
mov
lahf
inc
sahf
xlat
jp
xchg
sbb
mov
adc
fnstcw
cmpsl
outsb
mov
ljmp
pop
inc
add
test
pop
out
adc
jne
sbb
xchg
sbb
mov
add
push
clc
sub
mov
cmp
lods
ss
insl
cmp
mov
cmp
push
sub
clc
sub
push
sbb
outsb
pop
lcall
jle
cmp
leave
cmp
out
sbb
js
mov
decb
roll
xchg
ret
std
jo
rolb
cmp
in
out
das
cld
add
pushf
clc
lea
orw
lods
inc
rorl
and
add
mov
out
adc
cmp
mov
inc
movb
ret
jne
test
cmpb
outsb
cltd
jo
call
fs
std
jnp
pop
popa
cmc
and
mov
flds
dec
xor
dec
push
or
rolb
mov
aas
jae
pop
sub
sti
add
bound
mov
jno
jne
repnz
rcll
add
aaa
xchg
xor
into
pop
jb
stos
stos
aam
xor
stos
pop
pop
insb
subl
xor
sub
xor
sub
call
mov
and
push
adc
mov
mov
cmpsl
loopne
lea
pop
adc
fisubl
sub
shr
mov
imul
loop
rolb
push
cmpb
insb
or
jae
fisttpl
cltd
insb
pop
and
mov
out
mov
dec
or
inc
or
xor
mov
pop
or
pop
andb
pop
xchg
ss
sbb
sub
adc
cmp
add
mov
adc
adc
jns
sub
sbb
pop
mov
sbbb
and
add
fsts
ja
push
sbbb
rep
das
add
je
insl
mov
ljmp
dec
dec
or
cli
jo
inc
int3
stc
lock
mov
xor
xchg
dec
xor
cmp
push
sbb
or
inc
adc
sbb
out
sub
inc
lock
ret
outsb
pop
popf
je
pop
mov
cld
ds
sub
or
and
shl
add
cwtl
add
and
jl
inc
mov
push
aas
or
adc
xchg
push
insb
xor
aam
data16
popa
sub
mov
imul
hlt
test
inc
jb
jno
push
inc
xor
loope
push
lea
cmp
inc
cli
or
mov
adc
fs
push
pop
push
push
mov
repnz
mov
nop
sarb
dec
jns
inc
add
add
ret
jecxz
pop
aam
loope
mov
jae
cmp
cmp
add
xchg
inc
mov
or
mov
ret
xchg
sbb
pop
andl
mov
and
adc
mov
lea
into
push
out
xorb
js
or
sub
loopne
insb
cld
mov
jge
sub
rcl
movsb
test
jle
pop
scas
shl
mov
or
sbb
or
inc
faddl
in
mov
jmp
and
jne
mov
pop
pop
cmpl
orb
shll
mov
jb
nop
xchg
sub
and
lahf
cmp
test
mov
lahf
mov
nop
add
xchg
xlat
inc
rolb
mov
xor
or
pop
test
or
adc
cmp
lock
mov
mov
out
test
push
adc
mov
repz
cmp
pop
adc
mov
add
push
push
sti
scas
sbb
xchg
xchg
adc
inc
das
jne
push
mov
or
ss
or
or
inc
xor
and
xor
mov
push
mov
cmp
pop
jne
outsl
push
sbb
or
movsb
imul
lret
dec
cmp
or
lret
cmp
and
lret
testl
fiaddl
mov
negl
xor
or
ljmp
test
push
add
push
imul
lods
fsubrs
aam
loope
fnstsw
sub
xor
lock
mov
push
das
sub
int3
or
cmp
cmp
fildl
loop
jbe
or
add
pop
enter
jl
les
mov
sbbl
pop
lahf
shlb
cmp
jne
lret
fimull
inc
stos
cmpl
ret
sbb
movb
lea
push
sub
fwait
mov
xchg
cmp
and
rolb
and
andl
jecxz
mov
cmpsb
jne
add
inc
aaa
in
inc
sbb
fs
lea
movb
mov
ss
inc
sub
int3
neg
inc
outsl
xor
es
cltd
dec
sub
aaa
add
incl
push
mov
push
or
add
orb
testb
or
sub
adcb
lea
sbb
or
mov
loop
inc
sub
test
punpcklbw
fisttpl
les
aam
xor
mov
test
cli
pop
inc
outsl
ds
jbe
xchg
inc
or
inc
and
roll
sbb
xchg
adc
in
pop
cs
xor
push
enter
orb
jg
add
pop
jmp
sbb
adc
mov
lods
js
jp
das
add
xchg
mov
push
fdivs
scas
cs
incl
les
rcrb
xor
inc
cwtl
fisubrl
fmull
or
sub
and
xchg
lret
push
cmp
call
int3
aas
fildl
jge
mov
or
orl
push
lock
push
ss
lods
imul
adc
test
xlat
add
lret
dec
jecxz
rol
test
insl
add
js
and
cltd
adc
pop
add
sbb
push
call
mov
rorl
inc
ljmp
pop
fstpt
sarl
sub
push
xor
mov
enter
js
jnp
imul
dec
je
dec
or
shll
adc
ret
pop
xchg
out
adc
popf
sbb
lds
rolb
dec
faddl
js
add
loopne
lock
decl
xor
or
jne
pop
cmp
xor
inc
and
adc
xchg
sbb
cmp
test
mov
push
aaa
loopne
loope
jmp
les
add
jg
ja
test
xchg
xor
not
add
adc
andl
mov
and
and
xchg
mov
add
adc
mov
add
ret
mov
cld
add
dec
shrd
push
ret
sub
jle
data16
mov
jge
sbb
loope,pn
les
nop
daa
test
stos
data16
or
xlat
inc
xor
xor
out
movsb
adc
adc
in
xchg
pop
add
test
inc
adc
push
or
push
xchg
xor
jp
add
add
mov
sub
mov
mov
cmp
fsubl
shrl
jp
pop
sbb
js
fistps
or
ret
jb
push
sub
or
cmp
shl
fidivrl
rorl
mov
cmp
jb
push
push
leave
cli
dec
add
mov
mov
cld
push
lock
or
jg
in
roll
lock
push
jae,pt
inc
inc
inc
pop
dec
pop
or
dec
lea
push
dec
daa
adc
dec
imul
test
pusha
inc
sarb
xor
popa
xor
fdivl
jbe
cmc
mov
shll
adc
cmp
inc
xchg
in
enter
and
mov
and
sub
je
push
add
push
jo
dec
xchg
mov
inc
test
xchg
add
in
popl
jge
mov
test
loopne
and
mov
push
xchg
mov
mov
ja
or
jo
sbb
into
xchg
dec
or
dec
sbb
adcl
mov
cmp
inc
or
sbb
add
pop
push
nop
dec
ds
shl
jne
cmp
or
ret
fstpt
fimuls
addl
rorb
adc
pushf
lods
sub
or
push
inc
push
push
imul
xchg
jmp
cld
jl
and
mov
and
or
dec
or
das
rol
push
cmpl
xor
scas
pop
gs
ds
clc
gs
or
pop
data16
cmp
sbb
mov
int
ret
dec
inc
popa
je
inc
cmpb
bnd
xor
xchg
cld
xlat
shr
pop
cmp
adc
scas
fucomp
push
add
mov
mov
lret
sti
sub
jae
push
pop
push
fldl
loopne
ficoml
mov
fldl
fdivl
fmull
insl
nop
les
or
std
and
push
sbb
adc
adc
fidivrs
leave
pop
jge
jecxz
sbb
pop
sub
pop
popl
daa
fs
add
pushf
push
pop
push
add
cld
in
out
push
cmp
adc
add
repz
int3
xor
cli
mov
shr
shr
or
notb
rol
lock
add
or
bound
cmp
lods
push
rcl
xor
sti
in
pusha
xchg
xchg
xchg
in
aam
xchg
inc
and
out
jg
inc
xchg
push
cwtl
inc
push
dec
mov
push
les
call
fnstcw
inc
not
testb
inc
or
dec
mull
pop
or
lea
mov
shr
cmp
mov
adc
or
loopne,pt
outsb
mov
cld
pop
dec
jp
adc
icebp
or
xor
adc
cmp
ret
mov
sub
mov
cmp
adc
rolb
inc
fdiv
test
mov
jbe
adc
add
in
or
add
aad
pop
mov
mov
push
cli
mov
notb
aaa
and
out
adc
adc
or
cmp
add
mov
adc
ds
decb
ret
add
aas
or
test
or
test
adc
je
stos
stos
sbb
icebp
cs
or
test
mov
jbe
lds
or
and
adc
popa
xor
aas
push
mov
sbb
jne
push
enter
and
sbb
push
push
cltd
popf
test
mov
test
repz
orl
or
insl
and
lea
movsb
je
add
mov
push
mov
and
add
mov
and
mov
jbe
mov
cmp
scas
test
sti
jbe
pusha
je
popf
and
pop
pop
loopne
adc
xor
ljmp
inc
in
or
mov
je
or
cmp
sbb
aam
cmp
cld
lahf
push
push
add
or
rcrb
lods
mov
mov
mov
or
xchg
sub
dec
call
ret
mov
jno
mov
dec
xor
dec
adc
movhps
stc
push
jmp
lret
adc
add
jnp
or
sub
jb
pop
and
and
sbb
push
inc
jne
inc
clc
add
nop
xchg
jmp
inc
test
adc
or
xchg
jmp
pop
xchg
les
sbb
ret
pop
mov
jg
je
push
sub
nop
push
or
push
jno
cltd
add
negb
add
iret
sbb
mov
or
clts
gs
pusha
rdmsr
into
idivb
push
hlt
subb
test
cli
cmpsb
or
push
sarb
inc
mov
orl
or
add
filds
add
add
lock
jmp
hlt
or
dec
cmp
add
mov
or
pusha
xor
pusha
sahf
fildl
add
lret
inc
mov
add
mov
ret
jmp
mov
insl
push
xchg
and
sub
push
dec
mov
stos
sbb
clc
jno
push
or
loop
jno
mov
adc
add
test
xchg
adc
ss
xor
mov
dec
sub
cmp
test
sbb
mov
or
imul
dec
call
push
sbb
je
shl
xor
aad
icebp
dec
or
into
xchg
add
lods
subb
imulb
mov
andb
or
xorl
cmp
mov
dec
loope
dec
test
push
int
daa
shlb
dec
icebp
jmp
pop
jmp
cmp
sbb
mov
push
pop
push
jo
mov
in
dec
and
aam
cli
cmp
pop
sti
xchg
push
int3
hlt
mov
outsb
mov
add
push
mov
pop
test
sub
sbb
ror
addr16
into
jge
adc
pusha
inc
jnp
cmovns
or
and
cmp
enter
add
or
scas
pusha
bound
sub
pop
out
jnp
int3
add
adc
add
mov
sahf
dec
je
add
enter
sbb
arpl
mov
xchg
adc
mov
push
insb
ficoml
rolb
add
pop
stos
add
shrb
mov
xor
and
xor
ret
mov
pop
lcall
or
loop
or
cmp
sub
xlat
mov
sbb
dec
and
xor
out
roll
sbb
mov
icebp
adc
jb
call
jmp
popa
sbb
mov
jb
jo
pop
vcvtpd2dq
push
pop
or
inc
pop
adc
test
sbb
ret
push
sub
xor
adc
add
pop
xor
or
jecxz
dec
test
mov
out
test
fwait
pusha
inc
rcrl
andb
je
add
jns
and
pop
push
enter
xchg
out
xor
sub
jne
pop
pop
test
cmp
mov
imul
xor
sub
adc
mov
mov
into
mov
loope
mov
cmpl
xchg
dec
xchg
movsl
xchg
push
lock
adc
in
jg
ret
inc
pop
xchg
push
mov
into
mov
sub
andb
xchg
jl
mov
push
loopne
cltd
jge
cmp
ss
mov
pop
mov
jns
dec
aas
subl
add
je
adc
sbb
outsl
pop
xchg
pop
inc
jb
mov
stc
xchg
cmp
sarb
mov
stos
add
cwtl
push
xchg
cmp
push
sub
loopne
pop
ret
ret
fcmovne
leave
aaa
sbb
lea
or
cmp
mov
xor
les
test
mov
cli
inc
add
mov
add
out
pop
xor
dec
cld
pop
pop
fsubr
rclb
push
and
adc
adc
les
ret
push
rol
push
inc
xor
cli
js
decb
and
mov
imul
cmp
jae
xchg
or
cmp
lea
mov
sub
sbb
cmpsb
pop
inc
mov
popa
push
test
or
insl
or
test
cmpl
pop
lcall
or
push
scas
ja
mov
lea
mov
xlat
aas
dec
push
dec
ljmp
pop
pop
pop
pop
or
jne
mov
lret
shrl
ret
inc
cmp
cmpb
sbb
shl
clc
push
jmp
mov
cs
adc
pop
js
cmp
ja
jne
loope
mov
sbb
jmp
push
out
or
test
clc
inc
push
leave
sahf
mov
mov
push
add
pop
mov
and
fs
mov
movl
sbb
ret
dec
push
js
adc
orl
inc
add
xlat
inc
mov
add
xor
xchg
jg
add
jecxz
sub
test
add
cmp
int
sbb
push
adc
sub
loopne
test
jmp
cwtl
aaa
movsb
add
or
jecxz
cld
xchg
or
js
sbb
push
xchg
pop
xor
arpl
gs
jno
push
pop
sbb
fidivs
imul
add
or
mov
jns
lcall
push
or
enter
adc
xchg
adcl
xchg
ss
and
dec
xchg
cmp
call
dec
imulb
fldcw
jge
pop
cmc
pop
adc
pop
add
inc
add
sub
add
inc
popa
fsubrs
and
pop
cmp
and
mov
cmp
sub
dec
sub
adc
out
cld
dec
in
add
jb
inc
pop
push
ss
sub
pusha
mov
pop
jg
int3
push
jo
and
cmp
inc
cmp
fcoml
lcall
sub
dec
fwait
cmp
mov
inc
jge
or
je
inc
push
dec
sub
fwait
mov
sti
or
and
xlat
mov
xchg
cwtl
dec
add
add
mov
sti
pusha
cld
fcom
aas
or
enter
sbb
add
sbb
or
mov
mov
pop
inc
adc
jb
mov
inc
dec
sbb
dec
push
cs
sarl
add
pop
pusha
stos
mov
push
cmc
stos
sub
push
sub
sbb
ss
ljmp
push
pop
inc
and
dec
call
sbb
push
push
fdivrl
xor
loope
push
xor
dec
jno
or
and
dec
mov
push
orl
xorl
mov
ds
jl
push
mov
add
loopne
jl
mov
xchg
sub
test
ds
nop
xor
dec
push
popl
inc
xchg
pop
jle
je
cmp
outsb
dec
inc
mov
sbb
ss
sub
dec
and
loop
mov
pop
push
test
and
and
xor
enter
xor
popf
and
ret
sbb
bound
insb
hlt
lcall
rol
jnp
mov
jmp
inc
inc
call
xchg
push
cmc
fdivrs
jmp
rcl
add
sahf
sbb
xlat
sbb
mov
or
cmp
sbb
xor
adc
mov
lret
mov
adc
or
out
iret
cmp
test
or
iret
lret
lret
add
insb
pushf
popl
adc
lods
xchg
mov
fistl
sbb
sub
mov
sahf
jbe
mov
movsb
sarb
repz
decl
adc
mov
ljmp
or
sahf
mov
xor
or
jne
add
or
xchg
sub
push
es
ret
je
xchg
or
inc
sbb
lea
inc
add
inc
cmp
and
sub
pop
sub
pop
add
push
or
mov
out
andb
lret
lea
dec
imul
add
into
imul
repz
push
cs
stc
movsb
pop
dec
jp
mov
mov
cmpsb
xchg
mov
add
inc
arpl
cld
shrb
sbb
push
lret
pop
lods
push
jno
mov
cmp
sahf
push
lock
push
pop
sbb
adcb
and
movsl
adc
dec
adc
push
xchg
aad
push
or
sub
jnp
fmul
std
pop
je
mov
sub
scas
ss
inc
add
dec
cmp
pusha
cmp
push
inc
cmp
sub
int
addl
xchg
jecxz
and
imul
ret
bound
add
scas
pop
adc
std
sbb
add
pop
clc
sub
mov
add
popa
popf
sbb
push
add
test
inc
fwait
adc
cld
dec
sub
push
xchg
call
or
scas
add
popa
movsb
and
sbb
mov
xchg
daa
int3
sbb
xor
inc
or
adc
adc
movb
mov
push
push
xchg
push
nop
push
lods
push
sbb
and
mov
std
mov
aaa
nop
pop
add
dec
stc
mov
add
mov
pop
lahf
sahf
lods
push
xor
pop
lods
cs
shlb
cmp
ret
xchg
lods
in
insb
jge
fdivr
fidivs
ljmp
or
js
push
inc
leave
pop
sub
les
sbb
adc
call
cmp
mov
pusha
xchg
ret
add
call
inc
inc
fimull
ss
cmpsb
dec
push
mov
arpl
mov
push
dec
cli
in
scas
or
jne
push
loopne
mov
xchg
clc
sti
fsubl
jmp
shlb
push
mov
jle
push
adc
jle
in
ja
mov
nop
dec
les
inc
cli
lds
mov
cmp
stos
xchg
ss
mov
orb
pushl
shl
sbb
aas
xor
ja
xchg
inc
cmpb
je
out
xor
andl
mov
cmp
aam
mov
into
movzwl
push
mov
loop
or
or
pop
outsl
xor
pop
iret
popa
and
fstps
inc
jp
into
adc
cmpb
jg
and
test
decb
add
or
cmp
cmpsl
jge
outsl
jmp
dec
add
incl
add
loopne
or
or
inc
loopne
mov
or
adc
fcmovu
add
subl
roll
leave
pop
test
or
mov
loope
or
insb
mov
or
adc
int3
xor
pop
mov
or
lods
inc
stc
push
fstpl
stos
movsb
and
ret
or
je
pop
mov
or
in
add
mov
pop
dec
dec
add
and
and
add
nop
push
xchg
push
or
shlb
call
in
adc
and
adc
adcb
push
pop
add
enter
lret
xchg
add
ficompl
sbb
pop
imul
sbbb
imul
cmp
sbbl
mov
lock
push
je
imul
or
push
adc
adc
ret
dec
test
inc
add
sbb
addr16
or
mov
dec
sbb
imul
pushf
fcomi
inc
add
movsl
sub
mov
je
outsb
sub
fwait
rcll
test
cmp
fs
js
sahf
xchg
loop
xchg
mov
jl
or
sub
xor
nop
pop
or
dec
xchg
arpl
or
in
or
repz
adc
pop
cmp
mov
add
mov
sti
js
jg
fidivl
mov
rorl
and
das
addr16
cmp
cmp
mov
es
or
inc
lods
fistpll
sti
jg
jl
jae
push
xor
xchg
mov
jbe
jae
adc
cmpb
lock
dec
dec
cltd
push
or
ja
hlt
jne
mov
mov
sbb
and
pushf
dec
lcall
in
call
fnstcw
cmp
and
push
cmc
add
add
pop
jge
mov
jl
lock
pop
add
mov
dec
xor
add
pop
mov
loopne
and
pop
sbb
adc
mov
or
jle
cmp
or
int
and
test
jbe
jns
sub
hlt
ret
mov
pop
sbb
adc
push
or
mov
or
push
push
fnsave
mov
adc
and
lods
std
xchg
and
es
pop
push
add
and
cmpb
js
mov
xor
xchg
push
js
fadd
sbb
xchg
je
jl
mov
ss
cmp
aaa
adc
ss
pop
mov
push
dec
push
sbb
dec
pop
or
jl
xchg
test
and
testb
pop
pop
push
mov
push
xor
aam
ret
je
cmpsb
sub
and
std
pop
dec
es
mov
je
xor
repz
pop
or
jb
cmp
ja
add
cmp
adc
std
dec
inc
hlt
cmp
enter
leave
call
sbb
cld
rcrl
adc
dec
leave
lods
sbb
xor
inc
push
push
jno
sbb
push
mov
pop
mov
test
mov
pushf
mov
and
roll
test
movsb
mov
cmp
insl
rcll
jge
or
mov
jg
and
xor
inc
add
enter
cmp
ja
push
pop
dec
jmp
cmp
mov
jl
jnp
cli
lahf
xchg
pop
sbbb
adc
subb
or
mov
jmp
and
jbe
mov
jnp
xchg
sub
es
cmp
cmp
js
std
cmp
jle
cmp
push
xor
sbb
jge
dec
jp
add
pop
dec
orl
sub
jo
inc
loopne
daa
push
add
add
sbb
shrl
inc
sbb
arpl
out
fistl
pop
jge
pop
cmp
jno
xlat
cmp
add
add
xchg
sub
in
negb
mov
or
sarl
push
fs
push
cmp
xchg
fdivl
sbb
jecxz
cmp
add
mov
cwtl
push
and
and
aas
addl
sub
jbe
sub
mov
cmp
mov
je
test
mov
inc
push
adc
mov
add
enter
and
xchg
sahf
dec
pop
mov
mov
and
add
call
mov
or
jecxz
mov
inc
or
cwtl
pop
nop
icebp
pusha
mov
sti
mov
aas
in
cmpb
cwtl
jb
enter
orl
inc
leave
push
push
add
orl
movsl
test
mov
pushf
movsb
jb
daa
scas
mov
mov
pop
cltd
in
movsb
pushf
cmpl
add
cwtl
decl
cmpl
jb
enter
jb
sbb
xchg
xchg
lret
and
xchg
mov
cmp
and
sahf
out
push
jecxz
adc
push
cmpsl
into
jnp
out
adc
insb
popa
push
adc
nop
push
xchg
adc
mov
inc
je
test
add
lret
loopne
push
and
and
cmp
sti
movb
push
rcl
rcl
iret
repz
aad
xlat
fcomp
fisubrl
fstpt
jge
in
jge
mov
add
and
sbb
xchg
or
cmp
outsl
mov
or
enter
push
add
push
add
add
push
push
push
fcmovnbe
jmp
sbb
mov
es
jno
les
je
notl
lea
mov
mov
cmp
mov
jo
or
push
cmp
push
inc
sub
fcomps
std
add
push
add
dec
mov
push
in
fldcw
adc
adc
ljmp
and
dec
lea
or
mov
icebp
or
mov
add
mov
and
sub
adc
roll
mov
jo
inc
cwtl
hlt
scas
mov
testl
add
adc
sbb
add
loop
sti
add
fdivrs
sub
cmp
test
jb
test
push
bound
add
mov
out
lock
xchg
into
imulb
insl
jmp
mov
xor
popa
adc
push
pop
cltd
and
insb
xlat
pusha
add
xchg
int3
add
in
int
adc
and
add
adc
xchg
dec
inc
outsb
cld
or
jg
jne
inc
imull
mov
scas
loopne
jbe
jne
loopne
ljmp
fcomps
adc
xor
rcrb
insl
cwtl
jne
andb
mov
and
lcall
jae
sub
jle
lea
test
pop
mov
xchg
and
cmp
popa
or
shrb
add
nop
js
and
shlb
push
nop
cmp
leave
fisubrl
mov
adc
shrl
mov
and
inc
inc
sbbb
xor
jle
sar
jg
add
movsb
clc
lcall
call
cli
add
xchg
cmp
rorb
add
inc
xor
sub
rcrb
sub
divl
or
shlb
add
rcr
or
lock
add
xor
out
ljmp
mov
in
lret
lock
lock
cli
repnz
jb
dec
sub
cli
inc
cli
add
xor
cmp
push
adc
or
loop
mov
push
out
ljmp
sarb
lret
add
cmpsl
jno
call
sbbb
call
mov
jnp
jb
mov
jecxz
or
rorl
repz
rcrl
shlb
ret
dec
mov
xor
arpl
gs
cmpsb
jecxz
adc
rolb
jae
imul
jne
cli
and
call
shlb
popa
ret
lods
lods
push
mov
mov
push
mov
fwait
fwait
shrb
xchg
mov
cmp
cmpsb
cld
fsubs
xchg
fidivrl
sarb
mov
lods
or
js
xchg
adcl
mov
cs
fisttpl
fimull
test
pusha
push
adc
adc
cmp
xor
outsb
neg
pop
add
lahf
test
dec
mov
fimull
lock
push
cltd
xor
loopne
sub
pop
dec
xchg
adc
xchg
inc
jo
jp
xorb
das
push
addb
pop
pusha
ss
inc
inc
inc
push
mov
loopne
add
sbb
xchg
fs
fnsave
and
mov
leave
add
xchg
daa
and
xchg
pop
add
js
inc
add
fwait
inc
add
daa
incb
xchg
inc
into
and
or
adc
adc
lods
and
or
out
sbb
and
cmp
scas
test
shr
enter
sahf
adc
push
dec
ss
jge
pop
out
dec
jge
neg
xchg
jle
loop
mov
inc
insl
push
loopne
data16
cld
lods
sbb
push
imul
inc
jmp
lea
push
ds
repz
xlat
into
xor
mov
or
jg
add
add
lret
lock
push
sub
cmpsb
xor
sub
sbb
cmp
and
testl
repnz
shlb
jmp
movsb
enter
cmp
loop
shlb
add
pop
or
and
jb
xchg
jne
jae
add
add
sbb
dec
lahf
lcall
jl
mov
and
hlt
jg
cmp
test
xor
cmpb
in
push
mov
dec
cmp
add
jmp
incb
sub
subb
mov
scas
inc
mov
adc
jns
xor
dec
mov
mov
jno
mov
inc
ret
and
add
jo
sub
test
sub
add
inc
imul
add
lcall
and
ret
and
add
sbb
lret
mov
and
push
mov
push
xchg
into
ror
sbbb
or
or
outsl
or
pop
xor
dec
or
jne
or
sbb
addl
lods
cmp
je
enter
adc
ret
and
imull
lds
movsl
shlb
add
fiadds
ret
pop
outsb
lret
jbe
sub
roll
lret
into
pusha
mov
inc
inc
inc
and
cmp
and
dec
cs
pop
pop
adc
sahf
dec
rol
cvtpi2ps
out
ret
or
dec
stos
add
xchg
sub
pop
nop
aas
push
pop
outsl
test
or
or
add
mov
lahf
push
or
in
xor
stc
mov
or
rorb
aad
shl
mov
add
jp
je
out
mov
sbb
jo
hlt
js
push
sbb
cmpb
fistpll
ret
mov
add
xlat
shlb
imul
or
adc
insb
push
xchg
adc
add
dec
xchg
xchg
jae
xorl
pop
adc
or
add
andl
and
push
movsl
jae
dec
jmp
xchg
or
in
push
xor
add
add
test
push
jns
sub
dec
into
or
add
lock
sahf
lret
adc
add
mov
pusha
into
mov
fisubs
sub
mov
add
loopne
mov
jne
dec
sbb
push
xchg
xchg
into
into
mov
out
fldl
sub
push
pop
add
push
outsl
mov
pop
add
loope
jl
or
inc
mov
and
jl
test
adc
lret
cli
cs
in
mov
xor
sub
xor
pop
mov
and
cmp
popf
lret
inc
add
and
mov
lcall
xlat
cmp
and
jg
lret
je
lret
dec
xchg
jecxz
xor
jbe
pop
add
call
test
es
cwtl
xchg
in
sub
mov
or
dec
add
mov
mov
or
popl
stc
or
in
push
lcall
inc
sub
sbb
inc
cld
sub
jne
push
icebp
fstpt
fildll
push
sbb
xlat
jle
dec
adc
es
das
push
clc
data16
adc
aam
faddl
jle
add
out
mov
stc
mov
or
xor
and
pop
into
or
imul
xchg
xlat
xlat
dec
pusha
jns
xor
sub
pop
insl
add
or
or
sbb
je
cmp
and
jb
repnz
xlat
mov
rorb
add
es
movsl
add
add
mov
das
rcll
mov
test
lds
call
sub
xchg
fstpt
xor
loope
into
push
or
inc
outsb
sbb
cmpl
sbb
cwtl
adc
push
mov
xchg
mov
sub
cld
das
repz
test
imul
rorb
loopne
or
add
test
mov
inc
fsubl
jb
sbb
xchg
inc
xor
xlat
out
or
inc
pushl
leave
and
int
test
je
test
push
fdiv
sbb
push
push
mov
push
cmp
pop
popf
lret
push
add
addb
or
cld
rorl
add
cwtl
or
lods
add
sbb
mov
mov
je
mov
faddl
pop
or
xor
in
subb
inc
sbb
xor
in
ljmp
inc
pushf
sahf
push
adc
inc
cwtl
lea
inc
xchg
fldenv
sub
movsl
adc
ror
popa
sbb
bound
dec
int
adc
adc
sahf
orl
roll
sbb
nop
dec
mov
adc
dec
xchg
shlb
enter
push
adc
add
cs
add
sub
jge
stos
adc
test
daa
lea
cmp
in
dec
call
push
sub
cmpsb
das
out
sbb
pop
fmuls
dec
add
pop
sar
sbb
stc
test
add
test
xchg
inc
add
cmpsb
mov
aam
inc
cltd
push
dec
sbb
xchg
push
xchg
push
data16
mov
sbb
mov
pop
add
daa
inc
jl
jmp
jle
adc
movsl
shrl
push
push
roll
cmpsl
movsl
subl
insb
bound
mov
adc
lea
pop
sbb
inc
xchg
push
mov
push
inc
ss
xchg
push
aaa
cmp
mov
cmp
sbb
jmp
pop
icebp
cmc
pop
bound
cmp
mov
sbb
dec
dec
pusha
adc
out
mov
out
push
clc
add
insl
xor
sar
mov
sbb
out
jg
xor
inc
or
push
in
je
push
sub
andl
sub
pop
ljmp
push
das
mov
ja
dec
lea
jns
pop
push
xchg
adc
ret
jle
sbb
sbb
dec
ret
inc
dec
mov
jae
sbb
sub
sub
push
je
jmp
push
loop
mov
push
out
mov
push
push
cmp
xor
push
sub
js
add
inc
jl
movsb
sete
adc
sbb
les
pop
lret
dec
js
push
pushf
cmpl
fnsave
jp
push
das
push
sub
out
mov
mov
inc
sub
adcb
cmp
push
sub
mov
sbbl
and
pop
or
pop
and
sbb
jg
rcrb
rolb
aaa
mov
push
push
addl
sbb
cmp
push
sbb
push
lea
adc
pop
stos
fcmovnu
inc
loope
add
add
lods
and
sub
mov
pop
cmp
aam
push
outsb
mov
ficomps
sbb
adc
shrl
mov
rol
loope
or
add
jle
xor
dec
jmp
scas
xlat
ds
or
data16
and
push
test
or
mov
jmp
pop
mov
scas
mov
mov
gs
lret
or
sar
adc
sub
das
cmpsb
adc
stos
lret
iret
movsb
push
sub
sti
inc
adc
ret
shl
push
adc
aaa
mov
rorl
insl
mov
call
rcl
xor
ljmp
xchg
mov
shll
and
jne
test
inc
std
add
push
out
cmp
je
daa
add
insl
adc
call
sahf
adc
xchg
pop
addr16
sbb
inc
outsb
or
cld
jmp
pusha
mov
jae
test
pop
or
jl
cvttps2pi
and
push
push
sub
test
pop
add
adc
inc
pop
and
adc
push
or
fbld
lea
fildll
sti
mov
fsubrp
test
jns
fstps
mov
xor
add
test
sub
push
xlat
mov
das
fcomp
adc
xchg
aam
push
test
sbb
aas
add
cs
xchg
cmc
ja
ret
push
mov
dec
repnz
and
stc
ljmp
or
adc
daa
stc
andl
mov
nop
xchg
cld
dec
xor
sub
pop
inc
mov
cltd
or
inc
clc
in
dec
adc
add
xchg
lcall
push
scas
push
xor
jno
xchg
jo
loope
sub
pop
add
jl
js
pop
cmp
xchg
mov
loopne
add
or
mov
and
and
orb
mov
mov
mov
or
int
mov
notb
les
repz
pop
mov
divb
testl
jp
mov
jl
jg
pop
pop
mov
mov
and
aam
mov
shlb
mov
jo
das
fdivr
rorb
push
js
sbb
sbb
mov
adc
add
sahf
out
jno
sub
sti
cmp
sarl
sbb
xor
push
push
ret
fwait
int
and
hlt
movsl
mov
inc
aas
insb
or
add
decl
inc
bound
addr16
jb
jae
outsb
je
pop
and
and
je
data16
jmp
insb
insb
outsl
ja
and
and
and
outsl
jo
imul
mov
arpl
sub
jp
outsl
adc
bound
negb
ja
imul
pushf
and
push
dec
dec
or
jne
aas
shlb
popa
sbb
popa
and
insl
fldl
cmp
jne
jmp
jmp
xorl
je
inc
insl
outsl
jle
je
jae
mov
or
lods
mov
and
pop
jb
and
jbe
jne
push
mov
jae
sub
xchg
data16
daa
clc
mov
pop
adc
jne
jo
arpl
mov
push
sti
jne
xchg
adc
hlt
insl
jo
mull
subl
imul
add
je
sbb
jbe
jne
insb
inc
mov
add
pop
xor
aaa
push
mov
and
add
clc
loopne
sub
sub
add
jle
outsl
sub
add
or
adc
mov
outsb
mov
js
insl
lret
xor
lcall
pop
xor
fcomps
add
sub
jae
push
sbb
adc
imul
outsb
and
roll
pop
je
loop
jns
push
in
mov
cmp
jo
jl
data16
xchg
sub
gs
jge
jo
jnp
into
shll
push
or
sub
pop
and
test
outsl
xchg
cmp
daa
push
imul
jb
das
je
imul
adc
push
jae
movsb
clc
fdivrs
add
cmp
jmp
add
dec
and
imul
out
push
outsb
imul
sbb
sub
push
inc
inc
jne
add
jb
in
arpl
je
insb
fs
stos
cmp
xchg
dec
shlb
imul
dec
arpl
lds
sti
js
jo
addb
nop
sahf
lret
xor
add
xor
clc
push
inc
push
xchg
outsl
gs
sbbl
insb
dec
push
sub
rcl
shll
inc
or
add
imul
sub
imul
aas
arpl
add
shr
mov
mov
lods
cmp
test
lods
cmp
outsl
data16
loop
cmpsb
push
cmpsl
adc
push
test
movsb
cmp
pop
dec
fldcw
gs
insl
or
and
lods
sarb
or
insb
mov
xchg
pop
pop
rol
and
mov
shr
xor
loopne
xchg
stos
and
sub
pusha
mov
rcrl
imul
or
mull
imul
add
cmp
imul
stos
ret
mov
pop
js
arpl
data16
sub
push
pop
add
popaw
sbb
mov
jns
cmp
lahf
addr16
sub
xchg
fisttps
pushw
outsb
aas
call
ds
adcl
addr16
push
scas
push
ret
push
sub
pop
outsb
jne
pushw
inc
push
mov
sbb
dec
dec
add
pop
int3
xor
cli
inc
mov
out
push
pop
mov
lea
cmp
stos
and
cmp
les
fisttps
ja
push
mov
cmpsb
lcall
sub
sbb
bound
pop
dec
arpl
jns
loop
or
rcrb
xor
mov
into
orl
lods
lret
aam
je
add
pop
xchg
fcmovbe
das
pop
scas
xchg
xor
mov
addr16
jnp
mov
int
sub
xor
jae
and
xchg
mov
sub
arpl
dec
stos
pop
inc
xchg
mov
sub
push
jmp
rcrl
jb
cmpsb
call
rsm
int
mov
das
xchg
loopne
sub
push
cmp
lock
imul
mov
jno
das
jl
test
adc
add
and
pop
dec
inc
and
pop
push
and
push
lcall
mov
repz
in
push
stc
das
idiv
out
lcall
lock
xchg
pop
add
pop
push
sti
push
stc
ja
add
push
lcall
add
pop
or
mov
or
das
imul
or
lods
push
movsb
pushf
out
sahf
out
mov
sahf
insb
fs
push
dec
add
add
fst
push
enter
fidivl
pusha
pop
mov
dec
popa
add
fidivrl
inc
rclb
xchg
xchg
pop
loopne
add
push
insb
dec
mov
and
fdivs
jb
or
or
or
xor
fistpll
repz
out
adc
push
jo
es
imul
inc
push
cmpsb
stos
insb
aad
cld
addr16
out
dec
fs
ret
popa
outsb
popa
cld
popf
jmp
gs
jne
jne
push
mov
imul
lods
bound
inc
pop
xor
cltd
pop
mov
mov
mov
sbb
pop
dec
sub
out
mov
push
insl
imul
out
push
ret
push
push
imul
xor
push
sub
push
outsl
imul
lcall
sti
fists
push
gs
dec
jge
insl
mov
cmp
in
push
insb
fs
test
js
dec
in
iret
fcmovne
jbe
dec
addr16
mov
outsl
push
insb
imul
sbbl
jne
es
mov
fmuls
jb
push
sub
cmp
inc
mov
outsb
push
gs
sti
mov
dec
push
dec
jne
out
sahf
je
insl
insb
gs
mov
inc
cmp
insl
bound
fsubrl
outsl
add
dec
push
fwait
push
pop
outsl
jae
or
dec
popa
imul
mov
fs
je
addr16
add
ljmp
shll
push
push
mov
imul
aas
adc
jne
insl
jne
mov
outsb
jnp
sar
bound
ud0
or
out
push
xchg
iret
je
outsl
jb
jnp
out
add
add
outsl
jo
inc
gs
or
popl
mull
insb
aas
push
shrb
and
adc
jae
repnz
push
subb
push
mov
pushf
outsl
imul
pushw
inc
mov
negb
bound
cltd
fsubl
push
inc
jne
dec
rcr
mulb
cwtl
notb
mov
mov
loopne
jp
pop
and
insb
inc
outsb
cmpsb
cmp
pushf
pop
popa
bound
inc
pop
dec
xor
mov
or
add
add
pop
mov
or
jnp
add
lret
and
mov
scas
add
push
lcall
ja
stos
inc
mov
rolb
repz
cmp
clc
cld
pop
push
pop
push
or
into
pcmpeqb
xor
add
add
pop
cli
cmp
addb
push
add
jl
repnz
add
pusha
cmp
dec
lret
xchg
das
pop
add
inc
add
cmp
jns
jb
jle
sbb
pop
add
movsl
mov
sahf
add
mov
add
cld
inc
add
hlt
inc
or
in
jg
decb
or
call
ds
ud2
add
in
xchg
das
or
rorb
mov
add
mov
add
adc
je
add
add
repnz
add
push
sbb
dec
sbb
inc
xchg
das
pop
mov
add
add
sbb
add
add
add
add
sub
pop
pushf
push
jmp
sub
pop
out
mov
lock
in
mov
or
add
pop
add
out
cmp
rorb
add
add
shrb
xchg
and
mov
add
test
and
pushf
outsl
addr16
aas
or
orl
rclb
inc
sub
stc
xor
add
add
pop
mov
inc
movups
inc
rcl
jl
add
xor
bound
inc
adc
sbb
mov
fxam
adc
scas
sub
loope
push
or
jle
cs
cld
pop
cmp
comiss
hlt
add
lock
in
aas
ret
push
mov
fdivrl
xor
xor
repnz
xchg
int3
xor
shlb
mov
dec
movsl
loope
dec
inc
ss
add
cmp
nop
cmp
test
add
cmp
je
add
dec
insb
out
call
push
push
imul
add
or
sub
mov
andl
or
cmpl
cmp
cmp
arpl
subb
addr16
outsb
xchg
jno
jae
jne
stos
xchg
jbe
js
jp
pop
mulb
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
adc
cld
dec
decb
icebp
push
inc
inc
inc
mov
dec
dec
dec
dec
dec
stos
mov
pop
pop
add
ds
mov
incl
jle
jle
push
fiaddl
iret
push
mov
inc
sbb
aas
in
sbb
clc
push
js
pop
jb
pop
dec
addb
add
add
lea
addb
sbb
jge
add
pusha
adcb
xchg
out
test
add
shlb
enter
add
sbb
jb
pop
adc
adc
adc
adc
inc
cs
sbb
push
repnz
or
add
pop
enter
mov
sbb
mov
test
stos
add
jo
dec
aas
jg
daa
in
add
or
jnp
mov
pop
xor
mov
jmp
mov
mov
mov
sbb
cmpsb
stos
fcmovne
adc
or
dec
mov
mov
icebp
sti
jmp
adc
lods
dec
ret
ljmp
out
scas
or
bound
loope
popa
pop
pusha
ljmp
das
dec
adc
inc
into
jb
js
fstp
push
in
je
jb
gs
jae
je
inc
test
fsubrs
fs
insl
add
xor
insl
add
jmp
insl
imul
testb
push
outsl
mov
fiadds
dec
test
cs
dec
insb
lea
insb
jae
xorb
mov
push
gs
push
sarb
pop
rclb
inc
inc
and
mov
inc
push
pop
gs
lods
sub
ds
add
pop
jb
xchg
aad
sbb
insl
roll
or
or
push
push
and
inc
rcrb
dec
inc
and
lods
push
xor
into
xor
jo
add
add
cld
push
or
cs
pop
xorb
xchg
push
inc
and
fs
mov
les
movsb
je
jns
or
andb
jp
fldenv
arpl
jo
mov
dec
insl
rcll
jl
fldl
aas
fwait
addb
xor
or
inc
rorl
mov
adc
aad
insl
jmp
or
test
mov
jbe
dec
mov
popa
xor
movsl
add
or
lods
cmc
add
sbb
bound
jns
jnp
mov
je
and
push
inc
loopne
and
pop
imul
add
popf
push
jne
ret
shl
or
push
daa
sbbl
sub
arpl
jo
or
xor
adc
outsb
mov
sbb
add
inc
xchg
dec
popa
imul
lret
sub
rcrl
and
sarb
push
sbb
inc
mull
push
xchg
test
push
stc
cmpsb
cs
out
or
or
xor
shll
mov
adc
in
dec
add
add
imul
nop
ss
fs
jo
cli
jbe
add
dec
imull
inc
xchg
push
mov
inc
pop
pop
mov
or
addr16
mov
jae
cmpb
sarb
in
adc
outsl
push
or
arpl
stos
xchg
imul
mov
aaa
insl
in
pop
sub
or
adc
push
stos
cs
push
nop
pop
or
or
jb
mov
adcl
push
leave
nop
sbb
ss
call
pop
xchg
cmp
xorl
lods
xchg
cmp
ja
rclb
push
sbbb
add
dec
cmp
xorb
gs
xor
mov
jo
roll
outsb
add
test
aam
dec
imul
lock
sub
pop
dec
or
negl
addb
add
sahf
insl
dec
or
sarl
gs
dec
and
mov
add
sub
push
push
gs
push
adc
outsb
inc
outsl
js
sub
and
pop
inc
outsb
add
insb
add
push
or
out
cmp
push
adc
add
add
add
add
not
dec
add
and
push
pop
mov
push
push
push
bound
push
add
pusha
push
jmp
or
pushf
lock
ret
or
sbb
inc
jne
shll
push
call
push
bound
xor
mov
inc
dec
add
daa
jo
add
je
push
cmp
add
bound
jns
push
xor
sbb
push
cld
push
ret
pop
push
pop
push
push
and
es
cmp
out
popf
pop
sub
push
xchg
pop
add
inc
loope
adc
add
xor
dec
test
sub
mov
mov
cmovs
out
popf
add
jno
xor
jo
add
dec
js
arpl
or
lock
dec
dec
inc
dec
inc
aas
xchg
xchg
fistps
aas
out
adc
lea
inc
lock
or
pop
fdivrl
add
cmp
sub
fwait
sbb
out
fadds
bound
jb
jo
dec
cmp
dec
dec
add
inc
ficompl
dec
cwtl
and
sbb
and
incl
insl
pop
cs
sub
loopne
in
pop
in
ds
push
lods
xchg
mov
mov
vmwrite
sbb
pop
and
mov
push
xchg
sar
incl
mov
xchg
imul
test
fdivr
inc
mov
jns
cli
jae
cmp
cmp
fdivrp
jg
scas
and
jns
pop
addr16
lds
cmp
jg
xchg
loope
and
push
decb
or
lret
dec
in
pop
push
jns
lret
cmp
lcall
stc
in
mov
mov
and
int3
xor
aas
inc
pop
incl
cmpb
out
mov
lods
aas
mov
mov
ljmp
aas
dec
pushf
nop
jg
dec
popf
mov
mov
xor
cmp
xorb
gs
pop
in
mov
iret
imul
sub
repnz
xor
push
inc
lahf
out
mov
xchg
aas
aad
pop
aas
div
decl
pop
sbb
test
pop
bound
push
das
pop
psllw
lret
jmp
fwait
mov
fadds
jge
inc
aas
mov
add
pop
enter
aas
mov
jg
mov
enter
aas
pop
enter
mov
adc
enter
mov
enter
aas
mov
jg
mov
enter
aas
pop
enter
aas
mov
jg
mov
push
jg
cmp
or
mov
or
dec
mov
jg
mov
mov
mov
mov
jg
cmp
popf
pop
jo
mov
fwait
pop
mov
fsub
mov
xchg
fwait
es
mov
aas
jg
jmp
pop
jb
cmp
mov
mov
adc
jg
adc
pushl
jg
mov
jg
mov
push
jg
adcl
mov
jg
mov
jg
mov
push
test
call
mov
jg
ljmp
jg
mov
push
add
fistpll
subl
add
mov
pop
insb
rcll
mov
jecxz
ds
cli
ds
insl
xor
outsl
daa
les
dec
cmp
pusha
sbb
nop
cmp
inc
push
sti
and
jae
add
mov
arpl
pusha
inc
pop
and
and
cmpb
sbb
mov
clc
jg
aas
jg
xor
fimull
leave
ds
xchg
adc
inc
repz
and
and
sub
and
add
test
and
add
add
bound
ja
xchg
test
adc
and
push
mov
add
add
mov
incl
adc
mov
in
pusha
aaa
add
pop
pop
inc
mov
shr
and
push
inc
lods
stos
pop
pop
and
dec
and
aas
push
xor
pop
dec
dec
cmp
out
popf
test
sbb
fs
dec
jmp
idivb
add
das
das
adc
mov
dec
call
cli
sub
pop
sbb
jb
popa
popf
je,pn
dec
iret
or
xchg
daa
mov
xchg
fs
add
imul
jne
jae
fnstsw
adc
xchg
into
mov
outsb
jns
jg
out
push
jae
inc
popa
mov
xor
js
mov
daa
js
es
lods
clc
sbb
into
mov
lret
sahf
and
jbe
jae
pop
dec
inc
aas
sub
sub
sti
push
pop
push
outsl
ja
je
cs
or
bound
dec
fdiv
fnsave
inc
into
ss
popa
add
mov
jmp
jne
daa
pop
loope
aas
lret
lea
inc
outsl
js
push
push
inc
push
jle
sti
push
sub
add
sarb
clc
sub
call
jae
add
out
adc
pop
imul
addb
add
add
dec
test
orb
sub
mov
cltd
cmp
push
mov
sub
jb
jg
addr16
add
or
js
jo
add
push
add
mov
nop
jo
roll
dec
cld
xor
xchg
inc
sbb
loope
sarl
push
arpl
jo
ds
insb
dec
xchg
fmuls
imul
pop
test
xchg
call
gs
pusha
sbb
jecxz
mov
cmp
jbe
sbb
push
ficompl
or
xor
cmp
jnp
jbe
inc
jbe
push
push
lahf
push
sub
push
fs
and
arpl
dec
mov
inc
inc
inc
adc
pop
cmp
push
push
lock
and
push
es
dec
lahf
jnp
sub
popa
sbb
xchg
mov
pop
pop
and
jbe
aas
cmp
fcomp
pop
adc
in
jae
addr16
subl
xchg
das
push
ja
mov
add
ret
iret
or
sbb
push
push
push
dec
testl
push
jne
repnz
inc
aam
enter
push
jnp
filds
dec
jge
pop
jno
aas
jg
inc
sbb
inc
call
sub
jg
sbb
insb
in
nop
roll
xchg
jg
pop
roll
rorl
stos
mov
or
ljmp
outsl
data16
test
mov
aaa
daa
xchg
mov
cmp
mov
pop
pop
cmp
cmp
add
jnp
negl
push
sub
xchg
addr16
mov
sub
sub
jle
add
add
add
sub
sub
mov
sub
push
xchg
add
inc
cmpsl
repnz
cmp
jne
loope
xchg
scas
pop
jne
cmp
addr16
push
jb
imul
jo
ss
in
cmp
sbb
out
ret
pop
mov
cmp
int3
jl
xchg
aam
push
out
fs
enter
repz
add
mov
pushf
nop
iret
out
iret
test
fs
jbe
sahf
out
push
mov
cmp
jnp
cmp
push
push
push
dec
push
dec
sahf
out
sahf
inc
inc
cmp
sub
jns
out
and
sbb
adc
jns
out
or
add
iret
repz
cld
jp
hlt
lock
call
in
aam
cmp
repz
enter
repz
mov
xchg
jns
repz
jo
push
xor
jns
push
mov
jo
lahf
out
dec
sub
call
out
sahf
aam
mov
sahf
out
je
cmp
call
rol
xchg
js
xor
xor
jbe
inc
dec
dec
dec
push
push
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
xchg
sub
in
push
andb
or
sbb
xlat
out
es
cmp
dec
push
dec
mov
cld
fdivp
push
inc
outsl
inc
adc
add
aaa
mov
push
dec
bound
or
jnp
in
inc
mov
push
outsb
inc
pop
and
shrl
dec
xchg
inc
mov
ds
call
adc
fdivrp
sbb
dec
outsb
inc
dec
bound
and
mov
loop
cwtl
push
xor
jne
xchg
pop
inc
ljmp
and
jo
out
mov
push
insl
add
cltd
jg
popa
push
jae
xchg
xchg
cs
and
into
mov
jp
add
inc
andb
or
push
stos
push
jns
inc
push
imul
ja
scas
fcomi
jp
idivb
das
push
inc
scas
jb
jne
popf
sbb
jbe
dec
mov
das
out
jge
or
xor
inc
fisubl
addr16
push
mov
es
in
sahf
dec
outsb
push
dec
push
adc
out
mov
push
iret
imul
sub
rorl
xchg
mov
and
mov
sahf
sti
sub
insl
inc
sbb
addr16
int3
insl
scas
arpl
push
pop
scas
idivl
call
cmp
cmp
pop
pop
push
dec
jo
mov
jae
rcrl
mov
outsl
mov
js
imul
je
jl
orl
inc
jmp
xchg
data16
push
ja
jnp
dec
push
out
push
arpl
outsb
mov
insb
mov
jae
xlat
dec
insb
out
pop
sti
mov
xchg
push
pop
dec
jp
or
push
lods
imul
xchg
test
mov
jne
fs
cmp
xchg
push
inc
lock
scas
push
xchg
pop
and
scas
subl
mov
cmp
push
inc
and
push
pop
scas
push
dec
stos
pusha
push
mov
xor
imul
aad
jg
pop
mull
add
lock
fwait
cs
scas
sub
pop
xlat
jl
cs
repz
cmp
repz
pop
imul
jg
movntq
push
inc
aas
dec
push
push
pop
inc
cltd
fsubs
mov
lcall
add
sahf
testl
mov
sarl
ds
dec
sti
rorb
xchg
push
inc
xlat
xchg
ja,pt
daa
adcb
inc
inc
out
fidivrs
fcomps
cs
aaa
pop
outsl
pop
imul
out
popf
push
imul
insb
sub
push
sub
das
push
outsl
ja
xor
mov
jb
testl
adc
push
push
xor
in
inc
cmp
mov
imul
lcall
mov
jmp
data16
and
test
push
sti
je
mov
pop
sub
divl
cmp
and
pusha
fisttpl
dec
mov
fnstsw
or
jae
sub
out
repnz
add
jg
add
and
arpl
xlat
inc
dec
insb
xlat
xlat
add
aaa
aas
and
imul
addb
imul
jbe
jnp
add
jae
sbb
sbb
xor
popa
pop
out
sub
sbb
mov
icebp
push
js
aaa
cmp
sbb
cli
xchg
sub
adc
jnp
mov
or
push
sub
fimuls
dec
jp
push
jae
insl
mov
gs
popa
xrstor
jnp
ja
pop
arpl
jbe
out
dec
inc
cwtl
jae
outsl
gs
arpl
stos
loope
scas
comiss
cmp
ja
loopne
sarl
xor
imul
xchg
xchg
xor
addr16
loopne
repz
jno
xlat
jae
sbb
fldt
out
rorl
pop
jae
cmp
mov
aas
jae
addr16
stos
mull
jne
and
and
mov
pop
ds
adc
add
cs
push
add
sub
cmp
fstps
mov
fs
cs
dec
dec
push
xor
inc
dec
push
dec
notl
dec
push
dec
dec
inc
push
sub
sahf
jnp
movaps
and
and
push
dec
aaa
jmp
ja
movq
xor
inc
fs
mov
push
push
push
dec
dec
xor
xor
or
add
pop
sti
pop
loopne
mov
inc
push
push
xor
xor
cmp
orl
dec
pop
inc
dec
out
pop
sti
mov
and
or
cmp
lods
frstor
push
test
pop
push
push
inc
push
fildl
pop
push
clc
push
dec
dec
push
dec
pop
mov
outsb
pop
lods
pop
dec
es
inc
push
and
in
mov
dec
dec
scas
pop
inc
inc
dec
dec
mov
jge
push
dec
inc
push
daa
push
inc
push
es
pusha
add
add
pop
imul
bound
inc
inc
fadds
cli
mov
cld
shrb
mov
inc
inc
mov
push
dec
vpunpcklwd
sub
rsqrtps
insb
jg
pushf
pop
punpckhbw
inc
pop
xchg
xchg
adc
hlt
pop
dec
push
push
or
outsb
enter
pop
hlt
daa
daa
mov
stos
pop
cmp
cmp
ss
daa
daa
daa
xor
sbb
daa
xor
outsb
sub
sub
adc
dec
push
testb
lret
sbb
out
xor
inc
pop
addr16
outsb
popa
xchg
push
inc
and
push
inc
inc
pop
ja
int
nop
inc
xor
dec
push
inc
inc
xor
inc
ja
aas
jb
xchg
jnp
push
lldt
xor
data16
add
aaa
cmpb
xor
xchg
loop
cmp
add
push
cmpsb
or
fisubrl
andb
scas
xor
aas
dec
xor
lret
jge
mov
pop
out
mov
out
mov
ljmp
cltd
adc
pushf
jb
mov
test
push
add
jo
je
mov
jb
adc
adc
pop
jg
lods
out
pop
sbb
filds
pop
mov
nop
dec
sar
push
sbb
pop
iret
jle
pop
push
push
and
mov
bound
cmp
cmpsb
imul
pop
push
lock
push
outsb
mov
push
in
and
or
inc
push
jne
dec
push
or
fsubp
fwait
cmp
decb
or
outsb
sahf
bound
sub
and
in
ja
inc
cmp
sbb
inc
loopne
add
test
sahf
scas
mov
pop
sbb
pop
pop
push
pop
xor
inc
push
stos
push
popf
notl
or
mov
push
cmp
inc
out
add
add
scas
loopne
out
push
dec
jae
mov
popa
push
add
or
iret
adc
loope
in
adc
xlat
cs
add
jnp
xchg
dec
imul
rcll
iret
push
sbb
push
push
jne
mov
lea
sub
negb
jae
imulb
addl
pop
jg
lds
mov
jp
out
gs
jne
outsl
data16
outsb
mov
jbe
addr16
lcall
cmovb
adc
sub
push
sbb
sti
pop
outsl
cmp
inc
add
inc
or
sbb
aaa
mov
cmovle
inc
pop
pop
out
ficoms
pop
aaa
loop
dec
test
push
dec
call
cs
xchg
pop
pop
jae
jo
movsl
xchg
lcall
lahf
cwtl
add
dec
outsl
fs
sub
push
incl
push
outsl
outsl
insb
push
push
outsb
jle
push
bswap
push
sub
jo
lea
push
pop
dec
gs
sahf
andl
cmp
xor
ss
jp
jp
cmp
mov
ja
nop
xlat
pop
cli
testl
cmp
and
xor
imul
idivl
aad
cmpsl
pop
dec
xchg
push
push
test
jmp
adc
dec
sub
push
cmp
push
pop
push
sti
push
lcall
pop
pop
cmp
dec
xchg
push
inc
adc
pop
inc
mov
dec
sbb
add
inc
aad
into
jmp
inc
ret
movups
negl
push
outsl
mov
inc
arpl
sbb
idivb
inc
push
lods
xchg
fistpll
push
lock
mov
add
jb
add
fisubrs
das
push
mov
insl
mov
or
dec
ret
sub
divl
pop
mov
dec
mov
and
negl
dec
repz
inc
lcall
out
add
push
shl
sahf
out
jl
loop
adc
xlat
mov
cmp
inc
pop
cmp
xor
idivl
incb
dec
pop
popa
inc
addr16
fs
pop
mov
push
xor
push
inc
inc
xor
push
int
das
xor
pop
xchg
jg
int
loopne
ja
dec
rcrl
lret
aaa
loop
pop
addr16
setnp
cmc
ds
sti
inc
mov
pop
mov
jmp
inc
cmovo
out
lea
pop
sbb
xchg
js
adc
pop
add
push
ljmp
jno
inc
xor
out
aaa
fiaddl
fiadds
jmp
pop
les
mov
dec
daa
daa
fsubs
dec
andl
push
ds
cs
pop
ret
pop
loopne
fdivrl
shll
push
push
pop
jnp
mov
or
ja
insl
imul
dec
out
push
repz
dec
jle
in
fldl
dec
es
and
imulb
roll
imul
jbe
aas
push
rcrl
ficompl
fisttpl
cmova
das
push
aaa
sbb
pop
or
pop
dec
jmp
add
loope
push
or
xlat
aas
xchg
pop
sub
aas
out
ret
rcll
aaa
inc
mov
xchg
outsl
and
les
lods
pop
xchg
or
jp
mov
ja
inc
addr16
call
mov
aas
dec
or
push
adc
bswap
test
inc
dec
iret
push
xchg
sub
mov
idivb
pop
dec
mov
xlat
imul
sub
push
je
neg
pop
jae
fldt
jo
pop
ret
pop
sub
ljmp
pop
or
pop
push
sbbb
in
jl
test
inc
inc
inc
inc
adcb
push
and
mov
iret
push
xor
jnp
push
jg
aaa
push
scas
insl
push
mov
dec
popf
jo
rolb
push
test
ja
in
loope
add
aaa
pop
jne
push
jmp
das
inc
xlat
jb
mov
push
ret
adc
inc
ficomps
add
jge
push
push
jbe
mov
lcall
call
pop
push
pushf
mov
push
inc
pop
je
in
pop
out
push
jmp
adc
sbb
add
pop
fiaddl
mov
ret
lods
imul
lds
call
xor
dec
push
push
ja
fiaddl
inc
dec
insb
scas
xorl
aaa
cmp
aas
pop
mov
mov
inc
cmpsl
das
jo
arpl
mov
add
lahf
jg
aaa
pop
push
shrl
pop
aas
stos
mov
les
cmp
mov
out
sbb
jmp
push
stos
xorl
imul
mov
sub
inc
lgs
mov
daa
mov
push
popa
push
aaa
inc
in
dec
clc
pop
pop
aas
das
dec
sbb
add
sbb
or
push
pop
jbe
jo
cmovbe
mov
xor
mov
pop
pop
pop
daa
js
lea
lret
inc
stos
jg
and
push
mov
insl
dec
xlat
rcl
daa
sbb
pusha
and
dec
or
adc
push
xorl
mov
pop
xchg
push
pop
mov
ret
orb
out
mov
xchg
mov
push
inc
inc
push
loopne
jge
ret
add
push
inc
cmp
ficompl
mov
adc
push
xorl
and
sub
fisubl
out
jg
imul
das
or
xchg
stos
mov
push
rol
arpl
pop
jecxz
push
jae
test
ret
in
jb
icebp
fcmovnbe
push
add
push
push
jnp
or
sub
jp
push
aas
adc
insl
push
and
jno
xlat
inc
sbb
xchg
das
push
push
jb
sub
aas
inc
mov
rcrl
sti
outsl
mov
fisttpl
push
leave
add
dec
out
out
push
lds
inc
rcrl
aas
ss
fsubrs
fmul
aas
aas
adc
xchg
aas
add
or
dec
inc
dec
and
cmpsl
xor
cmp
pop
jle
out
sub
push
push
xor
cmp
dec
xchg
adc
movsl
aas
mov
sbb
sbb
push
aaa
mov
test
and
add
pop
shlb
mov
xchg
lcall
and
mov
das
inc
lds
and
das
scas
inc
adc
mov
pop
fistpl
sti
aaa
fiadds
pop
cpuid
fcmovnu
andl
push
push
stos
dec
xor
aaa
push
pop
fidivl
sub
mov
and
pop
shrb
daa
das
pop
mov
cmp
mov
scas
inc
notl
sub
adc
bound
pop
lock
jecxz
out
push
sub
aad
mulb
pop
push
sbb
inc
mov
add
daa
dec
adc
mov
inc
xchg
mov
das
push
mov
inc
inc
pop
aaa
push
aas
ret
push
pop
lcall
or
out
orl
dec
mov
faddp
out
das
lcall
xorl
inc
dec
inc
aas
dec
les
fisubl
pop
test
fildll
cmp
pop
pop
daa
das
pop
push
cmp
outsl
jae
mov
fs
daa
xchg
daa
cmp
aad
dec
nop
imull
xor
mov
scas
pop
pop
pop
repz
push
sub
shrb
aaa
inc
mov
jle
jle
insl
pop
jp
dec
jp
ret
fildll
loop
adc
dec
test
aaa
mov
mov
das
xchg
cmpsb
je
xorl
pop
mov
xorb
movsl
adc
shrb
pop
push
jmp
push
dec
add
mov
dec
dec
daa
mov
mov
das
sub
mov
aas
das
scas
mov
xlat
xor
andb
adc
inc
cmp
insl
xchg
pop
ret
aaa
xor
subb
jg
xchg
xlat
dec
mov
lods
jnp
jmp
adc
dec
inc
sub
pop
jp
mov
fiaddl
ds
scas
fcomi
daa
inc
dec
ffreep
cmp
insl
or
ja
addr16
mov
push
imul
pusha
mov
out
mov
push
push
lret
andb
ret
mov
mov
mov
and
js
lahf
das
iret
push
pop
add
pop
in
cmc
cmpsl
cmpsb
das
pop
and
adcl
lock
push
lahf
aaa
mov
pop
dec
dec
mov
and
aaa
bound
popa
mov
sbb
adc
sub
adc
lock
jnp
aaa
adc
arpl
lods
addb
rolb
aaa
xchg
push
outsl
mov
aas
insl
sbbb
aaa
nop
and
aaa
pop
pop
xchg
xchg
fsubs
add
sbb
mov
push
subl
daa
pop
adc
pop
pop
push
mov
push
xlat
aaa
test
and
les
or
adc
adc
pop
outsl
mov
push
popa
dec
iret
js
cmp
and
sub
lahf
fdivs
inc
aas
packssdw
popa
in
addr16
das
inc
mov
pop
testb
xor
mov
push
insb
pop
or
cs
fwait
out
lret
push
sbb
adc
push
inc
daa
mov
mov
pop
sub
dec
mov
mov
sbb
sub
fcomp
das
xchg
ret
fsubr
shrb
jecxz
shlb
inc
test
nop
stos
mov
dec
xlat
push
sub
getsec
or
das
pop
fiaddl
stos
push
push
xorl
aaa
mov
lea
cmp
rolb
push
push
pop
aaa
aas
push
mov
inc
fistpl
iret
lods
mov
lahf
iret
dec
lods
stos
call
dec
add
jbe
addr16
outsl
pextrw
js
cmp
sub
arpl
daa
pop
daa
data16
in
ret
dec
outsl
rcl
roll
aas
pop
insl
lds
shll
inc
pop
mov
jmp
aad
lods
sbb
aaa
stos
sub
inc
mov
insb
roll
decl
pop
mov
pop
xlat
sub
roll
addl
push
mov
lahf
mov
push
das
arpl
das
mov
xchg
stos
sbb
jbe
push
test
dec
out
add
insl
lods
ss
in
outsb
and
add
sbb
insl
push
inc
pop
xlat
aam
inc
shll
dec
aas
xor
push
sbb
sbb
dec
das
movsl
mov
sti
lahf
outsl
insl
inc
orb
dec
add
ret
daa
fwait
pop
adc
pop
mov
push
das
mov
and
add
pop
dec
lret
cs
xor
or
ja
fbstp
pop
sahf
insl
daa
insl
mov
cmp
call
js
imul
xchg
lret
pop
icebp
pop
inc
out
dec
jae
jne
push
xchg
lret
imul
pop
ja
sarb
add
jns
and
mov
and
mov
je
lret
ja
pop
add
xchg
stos
loopne
xchg
inc
mov
ljmp
dec
andnps
pop
mov
mov
ret
xor
mov
dec
jmp
sbb
sar
dec
pop
lahf
and
ret
pop
aas
add
sti
js
insb
sti
pop
pop
sub
add
add
jmp
lret
inc
outsb
or
aas
inc
imul
mov
je
js
pop
dec
shrl
imul
loope
and
inc
jae
jg
dec
push
arpl
call
xor
out
inc
fisttpl
outsb
dec
or
outsb
inc
ljmp
cmp
mov
xchg
and
cli
out
push
aaa
xchg
push
je
cmp
fiadds
jo
addr16
push
jae
jmp
sub
imul
sbb
mov
xor
mov
ss
dec
xor
push
sub
add
xchg
ret
movsl
mov
sbb
js
adc
movb
mulb
sti
inc
inc
mov
xor
inc
jns
sarl
mov
dec
push
das
aaa
mov
scas
popa
out
dec
push
jb
pop
sti
sbb
pop
xor
arpl
ja
sbb
jbe
dec
outsb
mov
getsec
das
jae
xor
iret
pop
add
punpckhwd
or
xchg
mov
imul
out
imul
das
ret
pop
out
push
insl
add
fcomp
aad
xor
add
test
addr16
or
outsl
loope
and
fdivl
icebp
jecxz
push
sub
je
add
inc
or
xchg
dec
daa
mov
xor
call
insb
testl
in
adc
insb
xlat
fdivrs
es
push
ss
dec
jo
dec
xor
dec
push
jns
lds
jae
xor
push
lock
inc
lret
mov
inc
push
sub
pop
mov
push
jne
pop
sbb
push
inc
jmp
scas
pop
js
aaa
aaa
dec
mov
out
inc
outsb
jmp
mov
vpavgb
jne
dec
xor
adc
inc
jecxz
mov
add
jecxz
push
push
js
popa
out
js
push
pop
in
mov
cmp
into
push
jb
repnz
mov
je
fisubl
xor
rcrb
test
imul
xlat
push
xchg
push
mov
adc
imul
out
lea
adc
mov
cvtps2dq
lcall
push
out
push
inc
push
imul
gs
jl
in
cmpsb
into
inc
imul
js
and
inc
js
or
cmp
push
bound
dec
cli
popa
pop
push
cmpsl
data16
mov
dec
inc
dec
push
rcll
mov
mov
arpl
out
mov
add
arpl
pop
inc
ficomps
dec
jo
push
jb
push
daa
inc
outsl
outsb
outsb
arpl
imul
mov
xchg
daa
and
or
xor
pop
sub
and
inc
insl
sbb
and
pop
sbb
push
and
mov
daa
sub
movsb
or
jb
pop
imul
or
adc
call
rcrl
inc
or
dec
mov
xor
push
pop
cmpsb
adc
jb
jae
xchg
daa
mov
cs
out
iret
pop
mov
loop
dec
dec
dec
pop
add
pop
cli
test
and
mov
adcl
pop
js
out
subl
scas
pop
sahf
xchg
jbe
xor
pusha
push
sbb
push
jmp
add
cmp
or
xchg
cs
add
loopne
or
mov
stos
aaa
xchg
mov
fisubl
add
or
jns
jmp
jecxz
outsb
jae
push
and
jecxz
das
stos
outsl
pop
mov
xchg
xchg
fs
imul
jecxz
inc
cmp
cmp
mov
dec
jecxz
push
lret
or
fdivs
dec
testl
push
jne
fnstsw
dec
out
bound
cmp
xor
daa
xor
inc
jo
aas
gs
mov
push
jbe
sub
lds
mov
in
subl
jae
out
insl
adc
sbb
das
rcrl
sub
dec
pusha
movsbl
ljmp
mov
cmp
xchg
cmpl
and
rolb
das
pop
inc
and
or
cmp
es
mov
pop
xchg
pop
fwait
sbb
xor
pop
pop
outsb
mov
or
jmp
shrb
aas
dec
data16
mov
mov
mov
add
push
sti
arpl
add
shll
rcrl
or
dec
push
dec
nop
add
cmpsl
bound
mov
mov
sti
and
es
push
push
and
mov
out
fwait
addl
inc
mov
dec
adc
test
movsl
repz
sub
cmpsl
lock
jp
sub
stos
mov
pop
fcmovu
fidivrl
xor
push
sbb
xchg
pop
adc
and
xchg
dec
sub
lods
sbb
daa
sbb
xchg
push
xchg
out
push
mov
das
xor
faddp
dec
mov
adc
lahf
shll
scas
inc
pop
jne
fcoms
out
outsb
js
scas
mov
jecxz
ror
aad
sbb
aaa
push
ja
ljmp
iret
dec
mov
xchg
adc
fcoms
ss
xor
add
mov
jp
scas
out
lret
or
fwait
or
sbb
scas
shrl
jl
pop
cli
or
sub
sbb
cmp
add
sahf
daa
add
loopne
sub
pushl
xlat
mov
mov
lret
inc
das
push
push
xchg
mov
lds
jmp
inc
jae
mov
fimull
push
mov
iret
sub
xor
xor
add
dec
xlat
pop
pop
lret
lea
scas
sbb
sbb
mov
test
dec
inc
inc
bound
push
rolb
in
jbe
inc
inc
add
outsl
adc
imull
imul
pop
sub
xchg
inc
fisubrl
xchg
das
pop
adc
ja
fldt
push
psllq
xchg
add
push
xor
or
popa
pop
or
aaa
xchg
adc
fcmovbe
inc
push
jnp
fbstp
adc
das
push
pusha
xchg
inc
fisubrl
pop
sub
mov
mov
xchg
inc
push
in
jbe
xchg
push
dec
push
mov
or
inc
neg
ret
inc
mov
mov
xchg
xchg
aas
imul
and
inc
je
push
leave
mov
inc
rcr
insl
out
xchg
add
push
aas
ja
mov
add
sbb
mov
stos
adc
dec
lahf
lahf
push
outsl
xchg
and
inc
es
es
pop
cs
pop
xor
popa
add
imul
mov
xor
adc
pop
sbb
add
jne
es
or
sti
insb
xchg
insl
sbb
push
mov
mov
pop
ds
clc
add
pop
xlat
inc
mov
pop
jae
fmull
add
add
ds
jbe
push
aas
push
push
fxsave
testl
stos
jne
add
div
loopne
jbe
imul
or
sarl
or
stos
and
mov
mov
inc
sub
jo
ja
mull
test
pop
or
shl
testl
adc
fsubrs
in
jmp
sahf
pop
or
pop
insl
xchg
adc
sub
xchg
jno
lret
daa
xor
xor
orl
lods
dec
cmp
jb
pop
dec
jne
adc
and
add
or
sub
pop
jp
sti
add
sub
mov
mov
cs
ret
mov
push
push
outsl
sub
jp
cmc
push
dec
push
mov
repz
xor
fcoml
ficoml
das
or
stos
xchg
scas
push
inc
ja
jne
pop
mov
repz
jae
in
sbb
notl
mov
packuswb
cmpps
pop
fs
js
outsb
lods
sbb
insl
pop
insb
jnp
daa
lahf
dec
dec
pop
cmp
insl
cmp
adc
imul
ja
pop
cmp
pop
lock
adc
cmp
jo
shrl
daa
or
out
adc
and
arpl
and
imul
xlat
aas
outsb
pop
add
imull
jne
jb
mov
ja
pop
cmp
push
sub
pop
add
add
int
push
sub
pop
pop
cmpl
out
shl
fisttps
fisubrl
xchg
mov
jns
out
les
push
out
ret
pop
incl
inc
mov
push
jno
fadds
push
das
push
dec
dec
or
lcall
lods
cmp
pop
aaa
stos
pop
jne
sbb
dec
cmpsl
dec
aaa
adc
lea
mov
xor
sub
add
push
imul
jae
or
xchg
fsubs
pop
and
lret
add
push
nop
lds
or
mov
mov
inc
bound
sahf
out
fwait
xchg
xchg
inc
push
inc
inc
and
lods
and
daa
test
xchg
in
or
addr16
inc
pop
lret
insl
out
addr16
jo
mov
mov
dec
push
aas
subl
xchg
lret
fadds
ret
xlat
pop
mov
mov
pop
notl
mov
or
inc
push
dec
sub
adc
jo
add
or
inc
sti
daa
mov
dec
dec
out
sub
scas
lods
cltd
or
mov
stos
xchg
test
adc
sub
icebp
and
sub
add
je
push
js
fidivs
imul
test
imul
icebp
and
or
mov
test
in
fs
iret
add
in
imul
lock
mov
cmp
jae
fstp
movsb
adcl
and
popa
or
xor
bound
jo
pop
jecxz
jns
jecxz
xchg
jo
xchg
inc
clc
ret
inc
dec
negl
out
test
mov
cs
shrb
gs
fs
movsb
pop
clc
sti
push
dec
push
add
ret
dec
incl
add
movzwl
mov
xor
lcall
push
xchg
aas
jb
sbb
gs
jae
mov
jg
inc
sub
ret
out
and
sub
push
sub
in
adc
sti
and
inc
pop
loopne
mov
fisttpl
loopne
dec
push
xorb
add
inc
popf
insl
fs
jo
inc
pop
mov
sarb
ret
push
aas
cltd
mov
sbb
and
add
insl
out
sbb
fs
inc
add
pop
loop
xlat
cwtl
outsl
sbb
ss
lods
pop
dec
add
mov
jg
daa
fsubrs
dec
sahf
mov
xchg
pop
int
out
add
mov
inc
cmpsl
and
inc
jecxz
or
or
adc
and
mov
inc
daa
ror
rcrl
inc
aas
aam
pushf
dec
pop
mov
xchg
flds
cmp
fdivl
loope
leave
mov
xor
push
jmp
xchg
jmp
in
daa
out
and
fs
shl
lock
push
dec
sbb
add
cmp
and
stc
aas
lods
cli
aas
outsl
jns
adc
sub
add
inc
in
clc
sti
inc
jle
iret
mov
adc
aas
popf
add
mov
ja
mov
stos
push
pop
cmp
lahf
adc
and
adc
or
rcrl
bound
aas
and
cmp
mov
inc
pop
into
fldt
in
fldenv
mov
fstps
daa
dec
and
xchg
sub
mov
xor
lods
ds
mov
inc
jb
imul
jno
adc
ja
sub
jle
iret
mov
inc
repnz
sub
inc
add
andb
aas
pop
in
dec
enter
pop
push
sbb
cmp
enter
adc
dec
pop
xchg
jnp
cmc
xchg
leave
or
stos
mov
adcb
scas
iret
dec
aas
and
lcall
bound
or
sarl
mov
jge
lcall
push
inc
push
or
push
adc
or
or
sub
repz
adc
aas
enter
sahf
out
cmp
adc
ds
jge
out
pop
push
sub
cmp
ds
mov
cmp
repz
clc
cmp
mov
repz
cmp
das
cmp
push
xchg
jge
out
jl
sub
cmp
push
movsb
insb
inc
sub
cmp
jns
ja
push
mov
push
xor
cmp
mov
pop
xor
jnp
fistpll
popf
flds
fildl
xor
gs
inc
jg
aas
inc
push
pop
data16
aaa
pop
cwtl
insb
or
aaa
cmp
add
mov
sgdtl
adc
mulb
add
add
add
jge
pop
jns
add
add
push
mov
daa
jbe
cltd
pop
mov
es
sub
aas
mov
xor
repnz
jge
ss
dec
adc
nop
sbb
xchg
add
add
mov
add
aas
leave
aad
add
loop
adc
and
add
movsb
add
cmpb
in
inc
sahf
cmpsb
fbld
cld
das
fdivrs
test
shll
mov
mov
inc
adc
cmp
mov
call
fucomip
jle
adc
push
ficompl
mov
xor
and
dec
rcr
fsubp
stc
jb
jle
outsb
inc
and
xchg
inc
mov
mov
pop
rcrl
add
push
sbb
lock
jno
jb
mov
jo,pn
pop
push
xlat
dec
and
push
mov
out
sahf
mov
add
jns
or
or
or
aaa
or
in
outsb
scas
adc
adc
adc
and
outsb
daa
xor
in
jbe
frstor
das
push
xorps
sbb
das
insl
push
and
jbe
in
in
push
pop
andb
jae
leave
in
cmpb
test
xchg
outsb
daa
daa
iret
sub
daa
mov
dec
mov
into
aas
xlat
sbb
xchg
xchg
data16
jp
mov
mov
pop
out
les
add
jbe
pusha
push
inc
out
fdivr
push
xor
or
or
lahf
out
sahf
adc
adc
push
cmp
repz
les
mov
stc
cmp
repz
hlt
push
out
sahf
cmpsl
sbb
push
lods
pop
lcall
and
sahf
sarb
js
jns
sahf
out
out
jp
push
cld
inc
pushl
mov
xchg
fisubl
aas
inc
ds
mov
pop
int3
inc
leave
cmp
push
add
push
add
leave
jae
xchg
lea
mov
nop
xchg
push
pop
jb
xchg
xchg
add
mov
mov
cwtl
push
jae
loopne
cli
cmp
push
stos
mov
sbb
mov
dec
or
pop
xorl
jecxz
clc
jmp
push
adcb
inc
push
pushf
repz
repz
iret
jae
mov
pop
push
and
repz
repz
push
cmp
adc
push
push
dec
repz
jp
adc
pop
inc
push
or
repz
cmp
xor
sub
cmp
repz
sbb
adc
cmp
repz
add
cmp
sbb
mov
pop
clc
push
and
and
cmp
repz
push
sbb
outsl
xorb
sub
pop
ja
pop
call
fstl
or
pop
add
or
or
pop
mov
movsl
addr16
aaa
jae
inc
xchg
jne
inc
xlat
sahf
push
cmc
sub
jg
fwait
bound
jg
jns
out
mov
jns
out
ret
cli
iret
repz
or
cmp
repz
xchg
cmpsb
mov
repz
popf
push
ss
sahf
out
bound
fwait
int
jns
mov
push
sahf
sbb
repz
aas
pop
pop
jle
cmp
repz
stos
mov
lcall
dec
sahf
out
sahf
bound
inc
inc
out
pop
in
adc
lods
jns
ja
icebp
daa
dec
or
push
push
dec
jle
xor
rolb
int
adc
repnz
push
and
cmp
repz
adc
or
jns
out
add
je
in
out
sahf
out
sarb
mov
test
movsb
mov
pushf
cwtl
xchg
mov
js
push
out
sahf
dec
inc
cmp
and
ret
sbb
jae
add
loop
imul
adc
push
fistpl
jg
adc
jns
ss
mov
push
test
test
mov
mov
sbbl
orl
jl
xchg
push
ret
cmovno
enter
adc
xchg
aas
repnz
sbb
into
sbb
rorl
jmp
lock
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
ljmp
scas
sahf
inc
stc
mov
adc
mov
decl
js
inc
outsl
jmp
mov
or
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
call
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
out
clc
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
xchg
dec
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
and
push
movsl
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
dec
sar
fwait
xchg
and
and
out
xor
sti
aas
jno
or
mov
pop
fs
dec
lea
push
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
frstor
mov
imul
cmp
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
dec
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
cmp
popa
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
jg
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
pop
call
cmp
jp
and
cmp
mov
cmp
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
mov
dec
nop
pop
cmp
andb
pushl
loop
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
sti
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
inc
call
ror
add
cmpsb
fmuls
outsl
test
mov
xchg
es
out
sahf
imull
cmp
pop
js
mov
sarl
repz
xor
out
fidivs
ja
dec
repz
mov
repnz
das
dec
mov
or
pop
repz
xchg
sbb
jle
punpcklbw
push
iret
repz
add
add
sahf
cmpsl
stc
cmp
cld
jge
call
aaa
jbe
jge
jge
jge
in
jns
mov
or
loope
enter
lods
movsb
cmp
repz
mov
repz
inc
and
out
sahf
cmpsl
mov
iret
repz
clc
shl
enter
cmp
repz
inc
sub
or
cmpsl
stc
lock
fadd
mov
idivl
out
fs
sbb
into
sahf
jns
out
push
mov
fidivrs
out
sbb
in
int
push
mov
sahf
out
mov
fidivrs
out
and
jns
out
test
mov
out
cmp
add
lret
iret
repz
shlb
cmp
push
cmp
add
sahf
cmpsl
stc
loopne
les
popf
out
push
call
or
mov
mov
adc
jg
test
sub
pusha
or
jge
add
or
in
call
push
push
sub
roll
sbb
jg
dec
add
call
xchg
dec
jge
dec
dec
mov
subb
scas
or
pop
mov
cmp
add
or
and
inc
inc
pop
or
push
or
cmpsl
sti
inc
add
shrb
dec
mov
push
pop
push
inc
cmp
repz
repz
or
out
sahf
out
xchg
rol
mov
sahf
out
sahf
nop
jl
pop
dec
inc
jge
out
xor
or
nop
sahf
out
fidivrs
loopne
les
jns
nop
jg
popa
jecxz
and
cmp
jno
push
jbe
jmp
xor
xor
xor
xor
das
xor
std
cmp
xor
push
outsb
bound
je
lock
js
and
enter
jns
out
mov
sahf
out
sahf
cwtl
xchg
mov
out
jl
je
insb
out
sahf
out
fs
pop
push
sahf
out
sahf
push
dec
inc
cmp
sub
out
and
or
repz
repz
mov
call
cmp
int3
les
repz
xchg
mov
jo
pop
dec
inc
iret
repz
cmp
sub
sbb
sahf
out
cmp
add
mov
aam
sahf
out
les
sahf
out
push
out
sahf
cmp
or
mov
cmp
repz
rol
mov
repz
repz
mov
iret
push
cmp
aam
cmp
mov
xchg
sub
sahf
out
stc
pop
sub
or
dec
jo
jb
je
sahf
out
jne
ja
jns
jns
out
jnp
sub
out
and
and
sahf
out
sahf
es
pop
xchg
nop
jns
out
add
adc
popa
out
sahf
out
arpl
sahf
out
sahf
addr16
jns
out
outsb
outsl
pop
mov
out
movsl
mov
jns
or
jp
out
stos
lods
lods
scas
scas
dec
shll
mov
xor
ret
mov
add
xchg
out
add
aaa
sub
or
and
outsl
sbb
das
mov
add
repz
xor
leave
xor
es
rcl
push
sub
fdivrl
xor
jmp
popa
aad
std
incl
inc
imul
pop
outsb
dec
and
les
inc
push
inc
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
xchg
nop
adc
xor
cwtl
test
or
es
add
movhps
addb
pop
dec
out
subl
sbb
loope
xor
outsb
xchg
clc
sti
dec
or
addb
add
ret
cmpsb
dec
jo
and
inc
ret
or
mov
loope
leave
push
dec
add
and
ljmp
push
sbb
divb
cld
mov
cmp
jmp
insl
pop
add
push
adc
xor
push
push
aas
jae
movsbl
js
pop
sub
add
leave
leave
push
add
push
mov
push
data16
push
add
dec
sub
or
sbb
dec
std
adcb
divl
sbb
xchg
dec
add
aaa
cmp
maxps
dec
and
and
out
pop
lock
push
data16
jecxz
nop
addr16
mov
mov
std
dec
xchg
bound
repz
in
notl
daa
and
and
rolb
int
pop
dec
sub
shl
mov
addr16
jno
push
das
or
out
pushf
dec
iret
std
push
jo
inc
aaa
jmp
ljmp
jnp
push
sub
ret
inc
adc
inc
adc
ja
std
jg
mov
dec
sub
push
les
push
iret
xchg
mov
ss
in
jg
xchg
aad
or
sbb
aaa
addb
push
dec
xchg
mov
push
data16
inc
and
pop
rorl
push
sbb
lahf
sbb
sub
pop
xor
std
nop
jae
sahf
mov
add
push
out
mov
sbb
push
xor
sbb
addr16
or
push
mov
lods
sub
lret
pop
sub
jge
out
sbb
orb
lea
jne
xchg
jae,pn
mov
push
mov
dec
das
das
es
aam
incb
or
mov
shl
cmpsl
push
shr
jle
xor
jecxz
dec
lea
fnstcw
je
les
movsb
fnsave
bound
cmp
das
adc
je
add
lods
mov
pop
dec
fsubl
lret
popa
xchg
sub
outsl
aaa
jg
pop
adc
sbb
outsb
shrl
push
gs
pusha
jb
sbb
rcrb
inc
xchg
xchg
cs
int
stos
lds
push
pop
adc
sub
addr16
pop
fcmove
sub
dec
clc
jbe
push
mov
or
mov
sub
ja
add
pop
fimull
bound
push
pop
call
es
data16
pop
xchg
pop
stos
rorb
mov
pop
aad
push
xchg
cmp
pop
arpl
inc
add
or
mov
outsb
push
jge
gs
loopne
jns
push
jg
fists
pop
or
adc
xor
and
roll
push
in
pop
movsl
bnd
lahf
xchg
aas
or
es
lcall
mov
repz
repnz
inc
les
out
xor
outsb
jne
jb
and
xchg
je
fstl
pop
mov
dec
xor
lahf
pop
mov
pop
das
outsl
mov
lret
daa
cltd
shlb
push
pushf
fisubrl
jae
xor
jae
inc
mov
pop
in
push
insb
inc
das
jmp
jne
xor
loop
outsl
ljmp
dec
and
das
dec
das
and
cmpb
adc
mov
jo
jecxz
pop
push
js
pop
ja
arpl
sub
rcrl
xchg
sub
sti
imul
push
pop
scas
sbbl
adc
scas
std
sarl
filds
xor
xor
mov
jg
dec
push
push
pop
or
outsb
dec
or
cmpsl
mov
xchg
cmp
mov
pop
push
jge
outsl
add
pop
notl
or
dec
push
orl
inc
mov
cli
and
popl
pop
mov
jmp
pop
push
push
pop
adc
ret
push
icebp
nop
pusha
sub
test
lds
cwtl
sahf
scas
xor
add
xor
sti
out
xchg
dec
cmp
cmpsl
or
das
adc
cmp
or
xor
pop
popa
mov
pop
jl
fisttpll
mov
add
push
mov
push
add
inc
xchg
movb
push
inc
mov
pop
adc
mov
pop
or
bound
xchg
orl
test
aas
loopne
add
insb
jle
dec
pop
xor
or
gs
cmp
sldt
add
lock
mov
cli
dec
dec
pop
out
mov
aaa
mov
adc
loope
and
ret
cmp
daa
and
outsb
sbb
iret
sub
cs
jmp
imul
pop
test
jb
inc
ja
and
add
jns
add
int
pushw
push
stos
outsb
sbb
call
mov
ss
or
aaa
add
jns
mov
push
adc
sub
mov
jnp
or
mov
cmp
push
data16
xor
out
mov
push
mov
mov
and
or
bound
bound
sub
jae
xorb
jae
or
add
ret
and
mov
nopl
push
and
loopne
das
push
mov
int
rcll
sti
push
daa
pop
dec
inc
cmp
xchg
mov
aad
sub
adc
test
inc
es
mov
dec
add
decl
fcmovnu
dec
pop
jne
push
call
inc
loop
add
adc
add
adc
stos
and
shll
push
popa
imul
jb
sub
gs
sub
xor
idivb
push
sbb
sti
fwait
and
pusha
sub
imul
adc
jae
mov
xchg
in
aaa
inc
addl
outsl
popa
inc
notl
dec
sub
and
pop
les
data16
shlb
sub
add
inc
adc
add
xchg
ja
fldcw
pop
sbb
divb
fcoms
jne
or
mov
xchg
mov
inc
outsl
jo
inc
fwait
dec
or
inc
les
dec
inc
pop
ficoml
jns
add
and
or
fisubs
sbb
dec
jo
jns
out
jg
into
push
imul
rolb
int3
es
rol
inc
or
sbb
arpl
mov
and
inc
gs
insb
inc
push
cmpb
push
sbb
sbb
ret
subb
in
and
mov
xchg
inc
xor
inc
imul
jns
xlat
andb
es
mov
dec
cwtl
cmp
mov
adcb
je
movsl
inc
xor
outsl
sub
sahf
bound
xor
outsl
inc
cmp
xor
xor
inc
out
or
pop
test
push
sub
imul
insl
cmp
and
or
push
push
mov
nop
xchg
xor
xchg
sub
pop
lds
mov
pop
push
jno
jne
jo
push
inc
inc
ret
pop
sbb
movsb
lods
xor
je
imul
pop
fstp
jns
popa
pop
push
outsb
insb
sbb
leave
inc
cmp
mov
mov
inc
repz
push
push
pop
dec
mov
or
dec
fs
cmp
mov
mov
and
xor
fs
sbb
mov
dec
jne
lea
jno
and
je
push
mov
sbb
jecxz
sbb
sbb
push
aad
inc
imul
push
stos
xorl
sti
dec
dec
les
or
repnz
or
in
inc
negl
adc
inc
xchg
push
mov
push
cmp
pop
dec
or
xchg
loope
sbb
fstp
fildll
dec
inc
dec
adc
push
mov
jp
enter
mov
sub
sbb
fwait
lea
iret
add
pop
push
enter
inc
divl
pop
scas
dec
jmp
cmp
popa
int3
sub
xchg
sti
sub
loope
and
jmp
cmp
add
nop
jge
mov
sbb
jae
jns
pop
insl
adc
mov
sub
fstpt
mov
daa
dec
nop
pop
das
mov
call
test
jo
ret
jbe
mov
imul
arpl
sarb
inc
adc
rcrb
outsb
bound
adc
xor
leave
mov
nop
xchg
mov
shll
cmpsl
sbb
insb
outsl
mov
in
outsl
imul
xor
inc
ss
divb
xchg
jbe
dec
jno
sbb
push
pop
fnstsw
push
popa
fbld
insb
inc
insb
jne
pusha
push
sub
sub
jne
pop
dec
push
sbb
enter
repnz
enter
aas
popa
jl
imul
mov
inc
inc
outsl
mov
mov
push
data16
push
dec
jo
push
push
add
or
add
inc
sbb
fstps
icebp
pusha
xchg
or
pop
jae
mov
push
icebp
pop
orl
inc
push
and
ficomps
add
inc
pop
jmp
lea
insb
dec
mov
icebp
jne
inc
cmpb
mov
pop
fs
popa
add
jnp
nop
jmp
imul
and
mov
push
loopne
push
das
addr16
rcll
or
sbb
jns
loopne
and
dec
xchg
push
cmp
push
jae
ficoms
dec
mov
test
xchg
arpl
inc
cmp
sbbl
sub
popa
js
pop
in
jp
sub
addr16
sahf
cmp
popa
or
cli
push
outsl
imul
mov
fldenv
pop
and
rorl
test
gs
mov
sbbl
scas
mov
insl
decb
push
mov
jb
and
test
mov
sub
outsb
movsl
scas
jecxz
push
or
add
sub
mov
adc
arpl
fisubl
les
push
sbb
loopne
and
dec
mov
mov
outsl
dec
and
xchg
xor
dec
enter
adc
shlb
push
mov
outsb
ja
ds
push
cmp
jecxz
mov
jnp
aas
add
dec
jb
add
push
divl
jp
aam
fs
sbb
inc
push
insb
test
cwtl
clc
adc
jb
fwait
inc
fisttps
push
push
test
lret
addr16
mov
in
jb
fs
mov
inc
ror
lods
mov
mov
cmp
pop
inc
lock
shlb
add
sbb
add
push
std
mov
and
popa
enter
popa
movb
cmp
fsubs
enter
imul
cmp
je
adcb
movsb
inc
js
jae
mov
pop
dec
inc
mov
loope
insb
jne
mov
fimull
pop
mov
scas
add
lahf
mov
pop
xchg
loopne
xchg
and
stos
mov
sti
mov
xchg
mov
mov
daa
xor
inc
mov
das
inc
in
or
dec
ret
hlt
stos
out
mov
imul
xor
jns
push
sbb
inc
mov
in
rorl
sbb
xor
pop
xchg
inc
lock
test
outsb
dec
mov
cmp
inc
lods
negb
mov
push
pop
sbb
in
test
scas
cmp
jecxz
add
xor
mov
cmp
pop
pop
js
mov
push
pop
scas
stc
or
popa
jae
js
pushf
nop
imulb
pop
jp
in
xor
repz
mov
dec
imul
add
add
sbb
add
mov
or
or
add
cmp
movsl
cmp
enter
sbb
adc
mov
push
test
dec
pop
sbb
sahf
insl
dec
xor
insb
xor
cmp
push
add
test
loopne
fcmove
inc
xor
jl
imul
jns
dec
popa
cmp
sti
pop
dec
outsl
mov
add
movsl
push
push
inc
cmp
jl
push
push
popf
mov
test
dec
cmp
sbb
loope
or
nop
add
aam
mov
movsb
dec
sbb
arpl
addr16
add
mov
ret
xchg
add
xor
sahf
out
jo
or
rorb
cmp
fs
test
movsb
popa
mov
or
data16
movsl
popf
sub
lock
jne
and
dec
cs
or
mov
ja
inc
insb
addr16
bound
add
imul
flds
jmp
fs
push
cs
xchg
lea
je
pop
pop
jmp
fstl
and
cmp
pusha
push
jb
andb
into
push
int
xchg
fs
mov
jnp
sbb
subb
xchg
inc
jno
imul
jg
sbb
cmpb
adc
lods
andl
cmp
pop
gs
movsb
inc
inc
mov
imul
mov
ficoml
mov
mov
imul
inc
jns
fstl
lods
mov
sub
and
jo
or
popa
jae
out
pop
jecxz
ret
or
push
in
push
jge
adc
jmp
gs
cmp
mov
es
push
inc
loope
and
daa
sbb
shll
sub
popa
xchg
mov
movsl
mov
dec
outsb
mov
or
adc
xchg
bound
popa
jns
je
jecxz
dec
in
fiaddl
loopne
mov
cmp
push
cmpsl
push
inc
pop
and
imul
sub
in
mov
icebp
sub
mov
mov
dec
pushw
or
mov
jmp
ss
pop
xchg
icebp
test
int3
or
and
inc
push
fstpt
orb
adc
sbb
loope
and
mov
inc
or
popa
push
pop
lcall
in
sbb
pusha
pushf
and
mov
xchg
xor
adc
xor
sbb
sahf
dec
ret
stos
jg
lods
sbb
mov
dec
cmpsl
in
shrb
push
sub
mov
or
mov
div
ss
sub
scas
and
subb
add
or
mov
adc
mov
inc
push
xor
imul
pop
outsl
outsl
push
pop
xchg
inc
pop
out
jae
add
pop
inc
loop
stos
adc
popa
add
mov
mov
sbb
in
jge
mov
mov
push
sbb
pop
ja
xor
add
scas
ret
imul
push
leave
lret
mov
push
jnp
jmp
push
adc
or
or
jb
ret
scas
add
iret
imul
leave
push
pop
loopne
xlat
sbb
or
imul
xchg
sub
add
rol
inc
mov
ds
jae
mov
push
imul
popf
inc
cs
adc
mov
xchg
jns
sahf
je
pminsw
shll
outsb
aad
mov
aaa
stc
jg
push
jne
cmp
scas
dec
shll
push
or
lea
sbb
jne
xor
gs
cltd
push
jecxz
mov
and
push
aaa
xor
je
je
and
flds
xchg
inc
pop
xchg
lock
mov
dec
sbb
sarb
push
jns
xor
mov
ja
add
and
andb
test
cwtl
int
push
cwtl
jmp
cmpsb
jge
xchg
add
adc
cmc
inc
add
adc
mov
roll
movq
je
or
jae
sub
enter
and
js
jmp
mov
add
add
aam
mov
mov
daa
insl
or
fs
push
inc
pop
push
out
fstpt
or
cmp
xchg
jbe
prefetch
cld
jmp
fsubl
mov
pop
cmp
je,pn
push
jne
xlat
push
lods
outsl
add
cmpb
and
add
loopne
loop
iret
xor
push
and
inc
cs
jo
repnz
lock
pop
shlb
dec
push
jae
mov
int
out
scas
dec
add
mov
lock
fs
xchg
add
mov
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
