push
add
add
add
add
sub
inc
icebp
fwait
sub
mov
mov
fnstcw
fadds
inc
xchg
or
dec
adc
ja
popf
les
cmc
mov
pushl
test
test
les
repnz
and
cmp
sub
xor
inc
inc
shlb
mov
jg
xor
xor
xlat
rcrb
imul
bnd
pop
cmp
aaa
insb
leave
inc
mov
sub
cmp
xchg
loopne
cmp
sahf
xor
fimuls
mov
in
cwtl
sbb
sarb
inc
and
push
repz
jne
adc
push
cmpl
add
notl
dec
cmp
mov
outsb
and
cmp
cwtl
xchg
jno
out
dec
cmp
jae
test
pop
push
test
mov
pop
xchg
mov
loope
mov
cli
movb
xor
xor
jne
add
push
pop
xor
stos
outsl
sub
xchg
test
jnp
lahf
fwait
jne
ja
ret
pushf
fsubrs
sarl
into
imul
or
cmp
repz
mov
aaa
std
mov
out
push
int
sbb
cmp
and
jge,pt
repz
push
adc
ret
int
mov
mov
test
je
rcrl
push
pop
cvtpi2ps
notl
push
add
mov
cmp
xchg
pop
test
xlat
in
xchg
movsb
call
cwtl
outsb
or
cmp
aas
push
inc
push
ret
push
fildl
xchg
out
mov
repz
mov
aad
adc
mov
pusha
in
adc
loopne
mov
repnz
jge
mov
cmp
jmp
pop
xor
dec
mov
mov
mov
or
ja
lods
pop
jp
int3
popa
dec
inc
xor
lahf
push
sub
xchg
jg
outsb
add
cmpsb
imul
outsl
test
or
rcl
cwtl
cmc
fidivs
mov
fsubp
in
data16
xlat
dec
mov
inc
cmpsl
es
scas
cmp
and
enter
dec
jmp
int
cmp
lret
test
cmc
xor
inc
popf
notl
gs
ficoms
cwtl
stc
out
ljmp
push
push
and
xlat
and
mov
fwait
sub
iret
pop
cmp
arpl
int3
add
add
mov
test
inc
fsubrs
rcll
xor
mov
jb
inc
cmp
xchg
imul
mov
mov
or
mov
mov
ss
stc
sti
fimuls
xor
fimuls
inc
lods
dec
lods
lahf
imul
add
outsl
adc
jecxz
std
push
ss
lret
dec
adc
fidivl
inc
call
aas
shll
mul
or
pop
insb
mov
mov
dec
jge
pop
xchg
inc
imul
cmpsb
pop
dec
push
stos
cld
jno
roll
bound
adc
lcall
dec
xor
jno
jne
inc
cwtl
xlat
int3
jae
xlat
negb
inc
lahf
stc
pop
mov
scas
ret
fs
loop
bound
mov
mov
sbb
mov
mov
sub
mov
push
push
cmp
scas
outsl
push
jno
cmp
lea
lcall
cltd
sti
mov
outsb
cld
push
xchg
arpl
xor
adc
mov
out
shrb
push
lea
xchg
pop
xchg
insl
push
fwait
scas
jno
inc
sbb
popf
mov
repnz
jo
clc
or
repnz
pop
jl
repz
out
loopne
inc
lret
adc
xor
jne
push
iret
sbb
sub
ja
and
sarl
pop
repnz
sbb
sub
ret
out
pop
adc
xchg
xchg
data16
jno
xor
sbb
js
sbb
mov
out
dec
je
fdivrs
ss
mov
mov
dec
sbb
fs
sub
and
push
and
jmp
jbe
movl
push
ret
loope
add
lcall
push
out
mov
jecxz
dec
int3
out
mov
jmp
test
push
fistps
or
pop
inc
xchg
filds
push
loop
xor
pop
push
sarl
scas
adc
insb
pop
arpl
push
mov
sbb
cli
pop
sbb
mov
and
sbb
inc
mov
fwait
mov
cmp
inc
jne
fs
push
fcmovu
pop
icebp
sub
sub
sub
mov
lock
xchg
jne
mov
ror
inc
mov
icebp
mov
xchg
into
jns
mov
add
sbb
rcrl
into
or
push
sbb
pop
scas
fildl
repz
lods
out
fs
inc
adc
sbb
test
fbstp
out
pop
lahf
subl
dec
in
daa
jbe
iret
xchg
xchg
cld
pushf
or
std
decb
lock
cmp
push
enter
sbb
call
jp
pushf
js
mov
dec
jae
push
adc
mov
mov
fldln2
add
inc
push
cltd
adc
pop
mov
cltd
in
movsl
xor
jp
xor
push
popf
fisubrl
rclb
lods
in
nop
lret
loop
xchg
imul
sahf
popf
out
fbld
daa
iret
fistl
ds
cmp
adc
fs
in
fldcw
js
inc
adc
xlat
adc
mov
dec
add
popf
gs
fbstp
cltd
ljmp
xor
sub
int
push
or
out
cmc
add
movsl
push
jb
das
ss
fdiv
ljmp
ficompl
stos
jl
stos
mov
cmp
lret
in
fwait
gs
fwait
inc
mov
insl
adc
xor
int3
cmp
push
xor
lods
testb
test
je
push
inc
ss
ljmp
xchg
std
and
add
into
dec
fmuls
cld
in
cmp
stos
mov
sub
and
push
pop
out
and
in
jle
lods
stos
add
xor
cld
and
stos
arpl
stos
rclb
shr
dec
pop
jo
xlat
sbb
test
xor
sbb
ds
stc
mov
movb
pop
xor
fsubl
xchg
lahf
lods
or
push
cmp
lcall
xor
xchg
sub
lea
shrl
jp
mov
xor
xchg
imul
pusha
stc
add
enter
inc
ljmp
std
pop
mov
lea
jne
jg
pop
in
stc
mov
cmp
sub
mov
xor
xor
push
mov
xchg
and
into
popa
imul
inc
cld
mov
push
les
push
repnz
stos
test
test
pop
dec
faddl
ja
sbb
sbb
xor
add
addr16
jmp
sub
cmp
mov
xchg
mov
and
cld
fwait
ss
push
les
push
cmp
add
mov
aad
out
pop
jp
sbbl
sbb
push
jne
push
clc
push
cmp
test
jge
repnz
jp
negl
dec
jle
jp
xor
gs
mov
push
leave
xchg
loop
cmp
or
clc
xchg
ja
or
lret
pop
or
cmp
and
sub
or
and
inc
sub
pop
jle
daa
lods
xor
and
dec
pusha
test
xlat
dec
fldl
jecxz
stos
lds
dec
mov
xor
loopne
jns
sub
inc
and
cmc
cmp
mov
and
ret
rolb
inc
lods
ss
shrl
in
inc
cmpsb
negb
push
cmp
stc
xchg
leave
scas
mov
sub
pop
jmp
scas
lds
lods
cmp
es
cmp
cltd
and
shl
imul
pop
ret
and
dec
std
sbb
ljmp
fdivs
xlat
cmp
pop
jge
xchg
aam
loop
test
in
out
sbb
xchg
add
push
addr16
pop
pop
sub
adc
mov
or
jmp
stc
nop
iret
insl
rcrl
fwait
cmp
inc
bound
out
mov
scas
fsubl
fldt
mov
gs
ja
and
xlat
adc
notl
inc
gs
jg
enter
cmp
adc
js
cltd
xchg
repz
lret
push
shl
dec
inc
imulb
ja
or
and
fistps
das
icebp
gs
pusha
add
xor
test
stos
daa
push
in
push
je
dec
cmp
lcall
clc
jl
jbe
push
push
shrl
push
xor
mov
sbb
cld
dec
repnz
push
scas
and
dec
xor
xchg
and
cmp
cmc
mov
stc
rep
bound
pop
fdivl
jecxz
aaa
dec
adc
push
jns
dec
jg
jmp
stos
je
mov
xor
popl
jo
xor
bound
mov
push
data16
xor
test
adcl
push
mov
mov
and
push
xchg
iret
out
in
imul
loopne
imul
dec
and
addl
mov
test
push
mov
jmp
addr16
test
mov
insl
fmuls
and
iret
fnstenv
addb
and
cmp
mov
aad
dec
xchg
mov
xchg
add
jecxz
data16
pop
aad
aaa
mov
add
sbb
out
cmc
loop
aam
in
aam
mov
mov
mov
je
push
pop
test
and
dec
mov
cmp
or
cmp
push
imul
jo
hlt
loop
jmp
push
pop
sbb
mov
repnz
cmp
cmpl
cmp
jae
xchg
or
in
rorb
fmul
sbb
pushl
arpl
ret
inc
in
popa
cmp
roll
outsb
inc
lds
outsb
push
vpmullw
add
pop
xchg
jno
repz
push
scas
add
in
cs
rorb
xchg
pop
inc
inc
pop
fs
scas
lods
jno
push
fidivrl
hlt
in
cmp
scas
jl
jne
push
dec
sub
aam
pop
mov
cld
or
adc
dec
paddq
dec
scas
cs
movsb
or
mov
and
test
lret
push
mov
jmp
jno
repz
sub
sub
repz
or
push
movsl
dec
leave
fnstenv
push
repnz
ficoms
outsl
xlat
mov
ds
adc
inc
fsubrl
cmp
jge
outsl
mov
ret
xor
mov
xchg
ss
push
in
cmc
jmp
lahf
inc
insb
jns
outsl
ljmp
cli
sub
clc
xlat
call
fdivrs
pop
pop
xchg
fisubl
dec
mov
push
fadds
jne
cli
add
fcoms
test
dec
sahf
push
mov
xorl
jmp
xchg
mov
pop
sahf
aas
fisubl
mov
dec
dec
test
outsb
pop
xor
dec
clc
cmp
fcmove
jle
je
pop
inc
jnp
out
nop
dec
cs
ret
lret
mov
stos
xchg
lahf
xchg
scas
popa
lret
insb
ds
and
icebp
xlat
mov
int
pop
pushf
repz
loopne
fistpll
xor
sbb
and
mov
subb
inc
aam
xchg
cltd
xchg
sub
inc
xor
outsb
xchg
sbb
mov
pop
add
mov
or
dec
in
push
lret
add
leave
loop
imul
pop
inc
and
mov
stos
out
cmpsb
scas
pop
mov
stos
mov
xor
xchg
roll
fst
int3
jo
jne
mov
repz
scas
stos
or
pop
dec
adc
jns
popa
mov
mov
dec
mov
in
scas
inc
dec
sti
sub
push
pop
add
ucomiss
clc
cltd
lret
inc
inc
inc
fmuls
jne
test
dec
jb
mov
mov
jbe
push
jmp
xlat
pop
aaa
or
push
mov
repnz
clc
adc
hlt
dec
es
cmp
mov
sbb
popa
lahf
mov
out
push
cmp
sahf
std
push
rorb
jmp
nop
cld
lret
add
sub
mov
cld
or
leave
push
jmp
push
pop
aas
sti
clc
mov
inc
stc
cld
lcall
in
or
sbb
insb
ret
add
aas
xchg
dec
enter
push
call
insl
test
ljmp
scas
insl
and
arpl
test
pop
sub
or
aam
jle
fbstp
fnstenv
shll
cmpsl
pop
imul
imul
clc
xor
in
mov
cmp
sub
sub
sarl
sti
rolb
popf
imul
pop
fstl
xchg
std
in
fwait
jle
stos
or
pop
or
out
push
or
xchg
push
cmp
aad
cmp
pop
outsb
incl
lock
rcrb
xlat
mov
scas
jl
push
addr16
mov
adc
shlb
mov
lret
mov
ja
ficomps
or
sub
push
inc
gs
pop
js
sub
and
popa
mov
negb
arpl
xorl
dec
mull
inc
cmp
mov
push
push
popf
out
mov
inc
xlat
and
jmp
inc
cmp
je
mov
cmc
inc
pop
insl
adc
add
in
movsb
xor
pusha
cmpsl
cmpsb
or
inc
jecxz
mull
out
lds
xchg
sub
jb
cmc
and
add
mov
iret
les
dec
xchg
rorl
or
sar
cmpsl
cmp
push
fs
dec
pop
mov
mov
ss
mov
dec
add
repz
cwtl
mov
movl
push
inc
fstp
xchg
sub
stos
lea
aam
adc
push
fstps
rdpmc
sub
out
aad
add
push
js
cltd
xor
mov
les
sbb
imul
in
out
inc
notl
mov
clc
jo
and
leave
ficoms
or
leave
jecxz
cld
jge
sub
icebp
xchg
jo
xchg
sbb
jne
dec
hlt
jge
test
out
nop
lahf
pop
hlt
mov
push
imul
jle
dec
jge
xor
into
lret
std
mov
mov
add
subb
inc
insl
mov
mulb
or
sub
aaa
push
call
cmp
pop
fdivs
pushf
sbb
insl
test
rorb
add
cmpsl
popf
divl
fadds
or
jmp
movzbl
inc
sarl
shlb
ss
insb
idivb
xchg
jl
xchg
or
lret
stos
out
pop
int3
call
push
cmpsl
lret
fnstsw
push
iret
inc
sbb
mov
rorl
ljmp
adc
cltd
icebp
push
xorb
mov
xchg
sbb
dec
jg
ds
jl
jp
aas
int3
mov
sub
das
xchg
mov
or
xor
cmc
cs
mov
lcall
ja
and
push
jbe
clc
mov
adc
jle
mov
and
mov
scas
sahf
call
jbe
mov
adc
and
push
movsb
push
mov
clc
rorb
push
dec
aam
jmp
dec
mov
push
jb
test
sub
mov
addr16
sbb
sti
loope
into
mov
pop
adc
ret
cmpsl
lock
push
mov
jns
cs
cmp
lods
popf
xchg
add
mov
push
xor
pop
sub
sub
gs
jecxz
lea
or
scas
clc
mov
jo
notb
notb
push
lahf
leave
or
idivb
xchg
xchg
mov
cmpsl
leave
iret
mov
xchg
enter
loop
xchg
cmpsl
rcrl
pop
cwtl
nop
fisttps
and
or
sti
mov
mov
fstps
inc
dec
lea
enter
adc
push
add
xor
pop
vandpd
lret
icebp
push
mov
fistpll
test
adc
jecxz
add
or
mov
aad
jb
jnp
xchg
mov
sub
push
jb
outsl
repnz
fmuls
mov
hlt
jge
in
add
or
push
xor
cli
push
enter
or
jp
in
shll
repnz
jo
nop
cwtl
mulb
or
inc
inc
sarl
scas
imul
fdivs
xor
mov
ficoms
cmp
sbb
adc
cltd
push
sub
out
aas
int
add
fwait
test
stc
cmpsb
push
repz
pop
cmp
les
dec
stc
and
mov
jo
cmp
cmp
pop
mov
dec
sbb
add
sub
aaa
shll
add
mov
mov
lods
inc
jb
aad
jb
test
add
inc
sbb
sub
mov
or
jne
xchg
mov
push
mov
or
in
xchg
xchg
sar
jnp
lods
fsubp
clc
int3
mov
hlt
int
and
sbb
push
or
iret
es
subl
mov
mov
mov
test
or
cmp
add
stos
push
sub
xor
bound
jecxz
nop
mov
jl
test
cwtl
outsl
xor
movsb
xchg
mov
in
popf
in
jg
xchg
lods
neg
mov
xor
mov
shl
push
push
adc
push
xor
or
loopne
jns
sbb
add
mov
dec
lret
in
mov
pop
sbb
push
or
ljmp
mov
stos
lock
and
mov
enter
lods
pop
enter
sti
scas
test
cmp
ljmp
and
out
sti
stos
dec
sub
mov
int3
adc
mov
mov
add
push
sub
push
lcall
adc
lods
or
in
nop
push
and
mov
or
jns
mov
pop
es
jne
daa
adc
xor
mov
dec
std
out
ljmp
stos
cmp
addb
adc
scas
aad
dec
mov
int3
int3
pop
lret
xchg
jns
mov
int3
sub
addb
fildl
loope
mov
push
mov
mov
negb
aam
push
sbb
sub
ss
or
mov
adc
or
jb
cmp
sbb
xchg
stos
adc
hlt
sbb
cwtl
cmpsl
push
mov
push
js
das
imul
js
cmp
pop
sbb
adc
pop
pop
sub
sbb
rcrl
mov
inc
sbb
hlt
jne
leave
dec
lret
jmp
in
stos
inc
jne
sub
out
loope
clc
adc
inc
pushf
xlat
mov
rorl
and
hlt
xchg
cmp
fmulp
loop
mov
sub
pusha
rorb
mov
cmp
mov
divl
enter
cwtl
sbb
lret
mov
lahf
jp
mov
cwtl
sub
cmp
fcoms
arpl
aas
mov
test
add
adc
aas
jo
xchg
lret
aaa
out
xlat
sub
mov
js
ja
mov
cmpsl
push
mov
jo
fimull
idivb
push
sub
mov
outsb
ret
inc
push
inc
shl
xchg
inc
lahf
mov
jg
mov
std
xor
cmpsb
andb
sub
out
mov
mov
push
and
jl
mov
movsb
pop
adc
add
hlt
pop
inc
mov
sbb
sub
jbe
int3
xor
adc
sahf
jae
xlat
lods
and
rol
jge
fstps
repz
repz
enter
inc
shl
sub
sahf
pusha
sahf
lock
push
lret
test
es
ret
test
repz
fcomip
or
stos
repnz
sbb
adc
fnstcw
push
addl
push
sub
inc
xor
xlat
iret
aam
out
clc
sbb
sub
sbb
cmp
wbinvd
outsl
sti
fbld
enter
jp
jle
inc
pop
xor
pusha
pusha
dec
cmpsb
fnstsw
sub
jp
pop
mov
mov
push
fidivrl
mov
sub
sub
movsl
mov
mov
aaa
out
jbe
xor
xchg
sbb
sbb
add
loope
lret
add
enter
in
xchg
and
int3
xor
cli
jecxz
xor
fcmove
xchg
lds
std
insl
icebp
adc
sahf
dec
lods
cli
loop
notl
repz
pop
ja
mov
lret
inc
imul
ja
subl
pop
jecxz
and
xchg
mov
xchg
xchg
sub
push
mov
jle
jecxz
sbb
dec
aam
ret
cltd
xchg
jae
lods
pop
adcb
std
bnd
or
sub
dec
popf
aas
xchg
cld
cmp
push
sub
fadd
aad
testb
or
xor
dec
rol
gs
lds
and
jle
ds
rorl
adc
mov
int
push
rcrb
je
and
movsb
sti
mov
sub
out
andb
adc
xchg
decb
mov
les
scas
nop
iret
fldenv
and
pop
mov
mov
lcall
and
add
movb
ljmp
int3
jmp
movsl
ficoml
shll
pop
in
cmp
scas
imul
leave
lahf
dec
pop
add
loopne
jle
push
fwait
and
pop
fnsave
les
and
orb
in
in
dec
push
ret
inc
mov
in
inc
and
in
xor
and
inc
in
lcall
cmpsl
adc
es
dec
sti
sub
xchg
fs
ror
adc
xlat
aad
imul
push
inc
sbb
fxch
je
mov
jbe
icebp
xor
sarl
mov
jns
into
lret
push
cmp
xor
lcall
inc
enter
or
xchg
sub
jmp
xor
xor
add
sub
fdivrl
jle
dec
mov
orl
and
in
dec
idiv
xchg
out
sbb
add
pop
mov
stos
dec
rolb
sbb
js
mov
mov
es
push
les
gs
jnp
inc
repz
dec
rcrl
mov
aas
repz
sbb
std
inc
sub
inc
fs
loop
gs
cmp
push
xchg
ss
out
xchg
popf
cmp
roll
bnd
outsb
mov
arpl
adc
imul
or
mov
inc
jp
in
mov
and
lret
arpl
add
add
cmp
dec
std
ficomps
jbe
xor
sbb
clc
xor
scas
or
push
ret
pusha
push
add
scas
stc
sub
xchg
stos
inc
mov
sbb
jg
push
mov
mov
lock
lahf
or
or
insb
mov
inc
outsl
cwtl
fisttpll
lea
cmp
mov
add
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
push
add
mov
addr16
loopne
jge
mov
outsl
adcb
sub
int3
mov
int3
sub
jecxz
lods
out
mov
lahf
dec
mov
pop
cs
xchg
les
test
rclb
frstor
test
jnp
or
mov
jns
push
mov
test
mov
ret
outsl
aam
dec
data16
jmp
aam
cwtl
lods
add
mov
xor
cmp
mov
imul
jno
out
lods
test
arpl
or
mov
ljmp
aam
rep
xor
out
je
repnz
xchg
jp
xchg
sti
xchg
cli
xchg
rcll
pop
test
ret
loop
shll
mov
pop
sbbl
es
lods
mov
lret
stc
pop
inc
sub
lcall
js
push
add
mov
add
into
and
pop
rcrl
push
pusha
fnstenv
ja
jb
inc
lods
inc
mov
dec
sbb
in
insb
fcomps
jno
fnstcw
scas
icebp
jne
xchg
jnp
test
aam
push
push
lods
mov
scas
xor
mov
sub
out
cld
adc
adc
jmp
std
fstpl
push
arpl
imul
je
add
mov
pop
cld
into
push
ret
inc
mov
mov
mov
mov
in
push
leave
jno
scas
int3
not
jo
dec
sbb
adc
jecxz
add
enter
imul
out
aam
das
push
rolb
mov
or
jecxz
sbb
push
xchg
mov
sub
je
aad
in
pop
and
pop
mov
ja
ss
daa
cmpsl
push
dec
movsb
mov
xor
mov
xor
leave
fdivr
or
jne
add
xorl
adc
adc
cmpb
pop
clc
and
lods
jp
fstpt
nop
arpl
mov
cwtl
xor
test
fisubrs
mov
mov
and
mov
jno
push
jp
decb
pushf
cmp
pop
jg
cmp
hlt
inc
cmp
push
jg
inc
fwait
mov
nop
xor
ss
out
bound
out
lods
ret
icebp
hlt
lcall
bound
loopne
or
std
mov
or
sub
stos
mov
dec
xor
fcoms
and
push
xchg
in
and
pop
clc
or
outsl
pop
popf
cmp
xchg
mov
mov
repz
xchg
xor
rolb
adc
cli
sub
cs
xlat
hlt
setl
sar
mov
aaa
scas
xor
pop
and
pop
and
fmuls
mov
cmp
cmovns
scas
sub
and
fimull
cmp
je
leave
outsb
sub
pushf
lods
adc
cwtl
xor
subl
incl
popf
mov
jecxz
lcall
leave
xor
mov
mov
imul
test
repnz
sbb
mov
test
test
jo
test
movsl
gs
mov
repz
mov
xor
int3
sub
andl
push
mov
pop
movswl
add
add
sub
cli
sbb
add
lds
sti
aad
and
or
mov
and
sti
push
ljmp
xor
stos
add
out
les
mov
outsb
hlt
inc
nop
push
inc
adc
mov
mov
pop
fcompl
adc
jb
pop
cmp
pushf
lret
dec
loopne
lret
in
pop
pop
mov
test
xor
dec
and
pop
pop
test
dec
cmpsl
cli
clc
popa
seto
out
push
filds
push
sub
or
pop
outsb
xor
fistl
test
add
test
pop
lea
aam
mov
push
adc
add
lcall
xchg
jb
mov
fisubs
jecxz
inc
test
int3
mov
shl
arpl
nop
push
sti
cmp
jle
roll
stos
iret
out
push
sbb
sti
popa
mov
mov
push
out
sub
stos
int3
test
movsb
imul
lock
adc
data16
insb
popf
jmp
xor
mov
cmpsb
popf
jmp
scas
cli
aaa
loopne
stc
or
xchg
jae
jp
cmp
in
or
mov
negl
pop
dec
pop
cltd
sbb
insl
push
xchg
add
add
cmpb
loopne
mov
ss
js
push
ret
out
pop
sub
sbb
in
call
xor
fs
fwait
shl
sbb
and
pop
push
or
mov
mov
adc
inc
jg
jbe
or
int
pop
dec
lea
push
or
xor
je
xor
cmp
negl
scas
ds
dec
mov
icebp
or
popf
mov
sbb
adc
cmp
adc
lcall
adc
nop
mov
or
or
sbb
push
int3
sub
mov
adc
sbb
xchg
xlat
test
xchg
inc
push
mov
mov
outsb
jge
pushf
sub
push
mov
sbb
cmp
xlat
xor
sbbb
jns
or
stos
sbb
mov
mov
push
sahf
sub
cmp
push
lea
rorb
sti
mov
mov
cli
dec
icebp
ret
fmuls
jg
add
imul
sbb
std
scas
mov
sbb
jns
add
pop
loopne,pn
xchg
nop
xor
test
es
fnstsw
sbb
lods
pop
shrl
push
dec
cmc
cmpl
mov
fcompl
xchg
lea
and
inc
xor
fdivr
add
aad
sti
ljmp
xor
dec
ret
lret
pushf
add
cld
sub
sbb
sbb
pop
int3
jp
mov
push
jge
push
cwtl
out
adc
xor
jb
mov
lret
aas
icebp
in
repnz
push
pop
sub
loop
mov
shll
sub
outsl
scas
rol
lcall
pop
dec
int
jecxz
jnp
jl
add
gs
sbb
aas
lds
imul
push
jno
fdivrs
aad
jge
call
dec
and
mov
inc
pop
fdivrl
pusha
outsl
push
cmp
xchg
fistps
push
or
push
fbld
pusha
xchg
idivl
xchg
xor
pop
je
xchg
scas
std
push
jp
and
inc
jo
adc
inc
jnp
leave
xchg
mov
pushl
pusha
and
out
shll
sbb
jg
add
out
jge
and
jno
xchg
arpl
jno
clc
mov
pop
xor
xor
cmp
into
pop
push
movsl
adc
push
stos
mov
lahf
jnp
pop
mov
les
jnp
xchg
data16
cli
adc
test
arpl
enter
aas
pop
repz
pop
repz
loopne
imull
int
push
inc
ret
es
lods
fcoms
xchg
sub
pop
and
pushf
stos
push
jnp
jb
mov
cmp
mov
jge
adc
jp
mov
ja
cmpsl
shrl
mov
push
sbb
mov
pop
push
add
fsubl
inc
int
mov
mov
add
ja
dec
loope
push
or
jno
mov
push
lds
in
lahf
movsb
aad
lahf
fadd
mov
lods
adc
popa
mov
out
mov
aam
sub
negl
test
push
push
movsl
jge
aaa
sub
pushf
movsb
xchg
pop
push
and
add
test
sbb
es
xor
aam
xchg
cmp
inc
pop
enter
mov
pusha
outsb
cwtl
js
jp
and
sub
out
mov
mov
xchg
jnp
pop
sub
inc
pushf
mov
arpl
popf
lods
push
je
cmp
mov
mov
insl
xchg
cmpsl
pop
dec
xchg
inc
mov
jmp
icebp
sbb
push
pop
push
dec
incb
fimull
je
xor
mov
lahf
in
mov
cmp
pop
nop
mov
mov
sbb
out
shr
dec
jo
jb
cmpsb
inc
outsb
xorb
mov
add
fcmovnb
dec
jnp
jmp
movl
jne
jmp
add
insl
in
aad
ljmp
cwtl
sahf
sbbb
aam
mov
sbb
lcall
shl
pop
test
cld
mov
out
and
or
sbb
push
popf
mov
js
cmp
xchg
rclb
repnz
clc
mov
lea
fldenv
add
cli
sbb
mov
xchg
outsl
push
inc
divl
jae
push
pop
mov
add
les
dec
xchg
nop
enter
cwtl
ljmp
test
mov
push
js
rol
sti
inc
jns
ds
and
xor
sarb
mov
xchg
add
loope
xchg
dec
call
push
cmpsb
cmp
dec
call
cmpb
std
or
adc
loope
adc
les
cmc
mov
cmp
jge
cmp
in
mov
lods
leave
mov
in
dec
sbb
sti
sub
push
or
push
into
xor
lods
test
das
add
std
hlt
mov
xor
mov
dec
xchg
mov
negb
pop
mov
movsl
scas
inc
dec
sar
sbb
insl
mov
dec
cld
test
sub
lods
andb
adc
adc
adc
iret
adc
inc
push
lret
inc
cmc
pusha
imull
fwait
cmc
popf
jg
sti
cmp
adcl
and
into
xchg
and
xchg
xlat
adc
in
pop
fcoms
insb
sbb
rcrl
popa
shll
leave
push
xchg
and
cmp
lahf
and
hlt
pop
jg
test
jnp
pop
pop
mov
jle
ja
cmc
mov
call
or
xor
outsl
into
lret
into
addr16
popf
lea
shrl
test
aam
and
push
sbb
aas
push
mov
inc
mov
stc
leave
jl
mov
shl
add
cmp
or
add
xor
dec
xchg
jns
movsl
or
outsl
repnz
sbb
and
scas
mov
mov
ljmp
scas
outsl
jbe
lds
push
rcrb
ficoml
mov
cmpsl
lods
mov
repnz
jns
inc
imul
jnp
mov
add
shlb
sahf
cli
push
das
insb
dec
cmp
in
dec
fwait
cwtl
shl
fwait
sub
add
out
pop
in
push
arpl
sbb
mov
sbb
xchg
adc
shr
addr16
adc
push
fstps
jno
outsl
outsl
lods
mov
int
inc
ret
inc
ss
lret
int3
or
int3
pop
mov
sbbl
inc
jecxz
mov
orl
sahf
sti
icebp
xchg
std
pop
push
stos
negb
or
lret
cmpb
lds
je
sub
xor
in
push
pop
repnz
iret
test
imul
pop
adc
adc
dec
mov
and
lods
push
into
in
mov
jg
xchg
mov
iret
add
ret
std
push
inc
jbe
icebp
cs
push
call
sub
insl
cmpsb
popf
inc
sub
loopne
jle,pn
rcrb
iret
adc
test
movaps
sbb
pop
call
adc
cmp
or
cmp
and
subl
ss
cmp
cltd
jns
cmp
in
jp
repnz
bound
iret
fmulp
jno
sbb
stos
sub
cwtl
pop
scas
cmpsb
sub
out
xchg
mov
fwait
cmp
fcomip
in
popa
add
aaa
inc
mov
js
lods
sub
sub
pushf
and
into
mov
cltd
or
cwtl
enter
mov
fisttpl
xchg
pop
imul
rcr
mov
jl
popa
xor
and
mov
stc
xorb
push
inc
shl
adcl
nop
dec
sbb
xchg
aad
rcl
xchg
and
es
push
and
mov
add
pop
jae
fnstsw
dec
push
lods
mov
ror
cmp
add
pop
push
out
stc
inc
inc
scas
popa
mov
cwtl
or
sbb
push
rorl
fs
scas
lods
or
xor
out
and
scas
sub
aas
sbb
cmp
or
cmp
arpl
in
mov
xor
icebp
andl
xchg
stos
js
mov
mov
pop
fwait
out
or
add
cmp
sub
in
in
pop
inc
xor
cli
jns
dec
jno
jg
inc
xchg
xchg
sahf
mov
mov
in
jl
lret
in
xchg
out
push
in
addr16
sub
adcb
cmp
dec
xchg
movsb
xchg
outsl
adcl
call
mov
mov
push
add
or
call
std
mov
call
pop
test
loopne
test
adc
or
faddl
jo
jae
and
dec
xchg
push
cmpsb
mov
pop
push
shll
mov
sub
adc
cmp
sub
jae
dec
mov
ss
mov
cld
call
push
shl
mov
dec
loop
shrl
mov
in
decb
and
bnd
shl
push
adc
cmp
xchg
push
inc
add
je
add
pop
jno
mov
cmp
in
lds
movsb
mov
outsl
push
dec
outsb
mov
loopne
mov
xchg
fdivp
lret
mov
aad
fadd
cltd
popf
add
add
and
sbb
loope
sti
inc
mov
sub
mov
lea
jmp
pmaxub
xchg
stos
add
pop
xor
loop
test
mov
jne
arpl
mov
pop
mov
dec
pop
in
aad
fxch
pop
and
in
adc
mov
sub
lods
jmp
cmp
xchg
popf
inc
adc
xor
mov
lds
stc
mov
andb
fstpt
cltd
ret
pop
test
sbb
or
push
cltd
mov
js
addl
push
hlt
dec
and
into
mov
fcmovnbe
inc
adc
dec
in
dec
enter
mov
test
mov
mov
pop
dec
jno
or
or
int3
test
mov
loopne
mov
xchg
xor
push
xor
mov
mov
mov
shrb
mov
and
sub
sub
add
push
add
sarl
shll
xchg
aad
addb
pop
adc
ss
cwtl
aad
push
movsl
popf
scas
fstpt
rcl
sbb
or
fsubl
sub
push
push
lret
xor
dec
or
xchg
scas
loopne
mov
dec
mov
fistpll
rorl
adc
fnstcw
mov
or
popa
push
leave
xor
xlat
push
test
rcll
cmp
lret
sub
sub
mov
adc
das
int3
add
cmpsl
cmp
popa
in
ja
out
ljmp
mov
loope
loope
fildl
pop
and
outsl
push
xchg
jle
aas
xlat
lock
jbe
fists
push
into
inc
mov
jle
inc
daa
sub
push
sarl
mulb
add
or
cmp
pop
cmp
or
icebp
add
fldl2e
push
stos
out
mov
rcll
imul
loope
mov
stos
cwtl
out
js
sub
aam
sub
aaa
dec
cmp
mov
popa
leave
fldl
pusha
adc
push
cs
mov
gs
mov
imul
mov
test
xor
mov
sub
jne
dec
pop
imul
and
jge
cmp
adc
fwait
ljmp
dec
push
xor
hlt
cltd
sub
cmp
jbe
loope
lret
push
std
bound
dec
mov
mov
test
jecxz
mov
xorl
sub
inc
aaa
vcvtdq2pd
xor
shl
mov
clc
ret
test
xorl
inc
sub
push
jmp
pop
push
dec
scas
lds
cmc
mov
cld
dec
lds
aaa
je
incl
pop
sbb
cmpsl
or
xchg
js
loopw
movb
add
cmp
mov
push
rorb
int3
xchg
mov
out
out
lock
in
movsb
aam
push
rorb
cmpsb
das
int
and
add
sub
fildll
jmp
push
sbb
aaa
aam
jmp
push
fstps
push
std
push
mov
sbb
xor
rorb
test
testl
mov
fisttps
or
ficoms
pop
jae
aaa
push
or
out
pop
pop
notl
fsubl
pop
adc
rorl
insb
sub
out
flds
shr
lock
pop
mov
push
xor
inc
mov
inc
push
imul
bound
xorl
mov
cld
xchg
lods
cmp
cmc
jl
cmp
inc
test
xor
fucomip
iret
push
sbb
or
not
loop
mov
jnp
les
dec
loop
cmp
inc
dec
test
repz
adcb
xchg
mov
sbb
leave
xorl
test
stos
cmp
ss
add
popa
push
pop
sti
outsl
jns,pt
in
dec
fcmove
sbb
mov
std
fptan
iret
call
insl
jecxz
loopne
fwait
mov
cli
cwtl
les
pop
clc
push
scas
cmpsb
cmp
test
sbb
jecxz
and
stc
pop
popa
inc
mov
cmp
cmp
and
mov
xchg
add
arpl
mov
inc
shrl
incb
ljmp
loopne
enter
repnz
and
xchg
and
xchg
aam
xchg
and
pop
xchg
test
push
es
repz
divb
mov
rcrl
push
aad
xor
test
pop
dec
into
lock
jge
call
fildl
repz
inc
fwait
push
lods
xor
lds
in
jecxz
js
add
jbe
sahf
jne
add
jne
pushf
mov
add
mov
mov
lea
dec
cmp
fwait
dec
jecxz
cmpl
sub
and
add
sub
xlat
jne
fndisi(8087
pushf
xor
sar
stos
cli
push
stc
and
iret
imul
push
push
jmp
test
gs
cmp
xor
dec
mov
cmp
ret
cmp
orl
mov
xchg
add
out
frstor
pop
mov
push
sbb
xchg
inc
popa
cmp
sbb
mov
enter
sbb
mov
xchg
call
test
in
jg
pop
lret
lret
and
pop
xor
dec
push
jge
mov
dec
mov
pop
call
cmp
das
xchg
dec
xlat
cmp
push
lds
mov
mov
push
adc
js
dec
xor
mov
mov
push
pop
push
jmp
mov
inc
aaa
xchg
test
sub
sub
cmpsb
dec
imul
fadds
lea
jle
fistl
jge
inc
adc
pushf
sbb
mov
jb
mov
mov
lahf
fs
jle
sti
andb
push
clc
push
adc
movsb
mov
loop
push
cs
ss
test
sub
test
cmpsb
neg
aaa
and
fimull
lret
insb
or
mov
jnp
out
cld
mov
stos
in
outsl
fidivrl
xchg
scas
enter
jb
mov
pop
pop
mov
sbb
leave
movsb
clc
pop
or
std
ss
push
lods
stos
insl
pop
jno
filds
ret
js
cltd
out
adc
sahf
lcall
mov
iret
mov
mov
orl
xchg
lea
push
rcr
cwtl
and
push
lcall
fwait
push
cmp
idiv
push
scas
pop
mov
ss
inc
push
adc
out
inc
xchg
push
in
mov
loopne
lret
cmp
pop
mov
xor
sbb
sbb
in
pop
add
jae
dec
mov
and
mov
sub
rorb
mov
push
adc
xchg
pop
and
popf
insl
xchg
jp
cmp
loop
addl
fdivr
mov
jmp
cs
dec
adc
push
je
dec
scas
and
lods
dec
sub
pop
sbb
pop
push
addr16
stc
adc
sub
or
aaa
mov
mov
add
cmp
lock
pop
adc
loope
dec
inc
cs
clc
into
dec
outsb
or
outsl
and
ja
fidivs
insb
loopne
ds
push
jge
pmullw
nop
clc
ja
cs
fsubrl
pop
adc
ret
icebp
and
adc
cs
cmc
jmp
iret
jnp
xor
in
xchg
pop
lahf
adc
sbb
sub
adc
xchg
dec
ret
dec
clc
ja
outsb
jno
test
mov
push
pop
or
jno
dec
daa
inc
xlat
mov
insl
iret
pop
jecxz
pop
mov
xchg
mov
xchg
mov
cmc
dec
call
mov
and
add
sbb
pop
sbb
adc
out
in
pop
push
mov
test
repz
jbe
div
sbb
dec
std
cli
lods
fadds
movsb
mov
fnsetpm(287
inc
jle
out
xchg
movsl
nop
xchg
sub
scas
jns
shrl
iret
clc
data16
test
popa
std
test
arpl
mov
push
push
inc
xchg
or
das
push
ljmp
xlat
push
sbb
in
push
jno
loope
and
sahf
jne
or
test
fists
push
dec
adc
in
mov
jg
add
sbb
icebp
xchg
jp
into
push
add
insb
int
mov
mov
shrl
sbb
mov
jo
mov
int
cwtl
cmp
hlt
mov
roll
mov
cmp
shr
movsl
push
inc
lcall
lret
inc
sbb
scas
dec
dec
movsl
nop
mov
jns
data16
inc
and
xchg
dec
mov
cmp
aad
in
mov
mov
add
aaa
insl
and
lods
cmp
stos
cld
cmp
mov
and
fbstp
jp
insl
stc
push
mov
les
adcb
stc
pop
xchg
mov
mov
adc
xor
ja
push
sub
jbe
int3
push
inc
iret
cmpl
sub
xchg
hlt
movsb
inc
and
ss
cmpsl
test
out
call
inc
lret
jo
loopne
aaa
stc
outsb
shll
cwtl
movsb
sub
or
or
add
test
popl
xlat
in
addl
cmp
stos
stos
call
outsl
mov
mov
xor
int
les
and
cmpsb
das
jg
xlat
daa
icebp
xchg
fst
pop
adc
mov
sub
jge
sti
mov
adc
cmp
sbb
add
mov
inc
sahf
fdiv
loop
mov
jecxz
sub
mov
mov
xchg
test
fwait
dec
sub
xor
out
xchg
pop
dec
dec
xchg
sbb
inc
push
test
icebp
fstpl
mov
pop
and
lret
daa
xor
sti
xor
das
fstl
push
rol
sbb
add
insb
into
xchg
sub
inc
inc
jg
les
shll
cmpb
cmp
sahf
push
lock
mov
xor
pop
fdivp
and
addb
xchg
jns
js
dec
cltd
lahf
dec
test
mov
in
cmp
push
and
outsl
xchg
hlt
das
inc
sub
cmpsb
jnp
pop
push
jge
cli
cwtl
mov
mov
push
mov
ficompl
scas
mov
pushf
in
in
mov
mov
adc
mov
std
aam
std
aam
pusha
loop
and
das
jnp
mov
out
adc
sub
jle
adc
imul
daa
movb
or
hlt
fs
or
jmp
out
add
insl
lea
jno
xor
lods
ret
dec
cmp
xor
mov
std
add
adc
insl
inc
xorb
pop
shr
mov
mov
stos
xor
dec
xlat
sub
mov
ret
clc
test
mov
fs
subb
and
jp
clc
lock
mov
in
xor
and
adc
inc
cli
ror
adc
loop
aaa
mov
jnp
sbb
fcmovb
xchg
pop
sub
insl
out
fcomps
vmread
sbb
cmp
mov
mov
sbb
stc
imul
xor
pop
in
scas
pop
sub
into
dec
add
das
add
fldl
aas
xchg
insl
aad
dec
xor
cmc
loopne
fildll
xchg
mov
imulb
in
ficoml
inc
movsl
jge
test
or
add
clc
in
mov
call
jge
ret
xchg
push
ljmp
lcall
out
movsb
stos
fcoml
mov
sub
and
test
jo
add
xchg
leave
roll
mov
out
or
insl
xorb
xchg
loopne
ljmp
xor
and
out
jl
pop
scas
push
sbb
test
mov
xchg
or
pop
cmp
jl
mov
sub
mov
jno
repnz
fisubrs
dec
mov
sbbl
jb
rol
out
push
das
inc
push
xchg
jbe
bound
arpl
mov
call
pop
push
mov
or
lret
push
out
stos
lahf
add
scas
inc
xchg
scas
leave
or
jne
or
mov
xchg
nop
hlt
add
outsb
jno
vcvtss2sd
test
ss
cmp
jae
pop
mov
push
jae
lods
movsb
stos
stos
leave
fwait
outsl
iret
inc
sti
xlat
xor
jo
adc
fldz
mov
popf
sbb
out
iret
imul
lahf
cmp
lcall
fidivrs
aam
sub
sbbb
out
inc
cmp
insl
testb
or
int3
bound
es
imul
adc
sbb
inc
adc
xor
xorb
test
fcoms
push
dec
push
push
or
test
mov
addl
sub
pop
insb
incb
mov
mov
aaa
jns
mov
mov
in
mov
mov
loopne
adc
clc
outsb
inc
sub
adc
adc
adc
in
add
cwtl
loopne
loopne
adc
ror
loopne
push
popa
mov
jecxz
push
pushf
ret
push
cmpsb
mov
lahf
and
stc
aad
enter
pop
divl
xchg
sub
les
push
jge
push
pushf
jg
xchg
push
jo
jo
cmp
inc
xchg
inc
push
xchg
mov
cwtl
addr16
shll
roll
sbb
jno
jne
movsb
push
cmp
lret
inc
sbb
pop
mov
sub
or
fdivp
sahf
sub
and
mov
pop
scas
loope
jo
cmp
lret
sbb
sub
mov
inc
push
adc
push
stos
inc
fidivrl
dec
loop
lcall
xchg
pop
or
pop
popf
adc
adc
imul
popl
jae
xchg
adc
pop
fcomps
lahf
cmp
mov
xchg
mov
sahf
iret
stc
xchg
movsb
xchg
cs
mov
insb
jecxz,pn
push
xor
pushf
jp
jb
adcl
and
jae
add
add
sub
xchg
cwtl
xchg
or
mov
lea
movsb
cs
sbb
cmpb
mov
xchg
in
hlt
ret
inc
mov
xchg
cs
in
rorl
push
mov
das
mov
dec
mov
fsubrp
ds
mov
jb
sub
and
les
scas
sbb
sub
imul
test
out
ret
cld
and
push
aaa
rcl
movsl
xor
sti
mov
inc
inc
push
inc
lds
movsl
cltd
ror
or
das
xor
insb
mov
mov
scas
lret
sbb
mov
xchg
sub
inc
pop
std
aaa
sarl
xchg
mov
lods
xchg
ficoms
icebp
sub
xor
divb
mov
and
or
mov
in
out
inc
mov
test
jge
pop
add
loope
das
xchg
lock
push
es
loop
test
rcrl
mov
movsl
fstpt
fdivrs
lahf
bound
xchg
popf
xor
or
or
insb
test
ret
xchg
sub
add
xchg
xchg
lock
pop
rcr
je
dec
push
js
jae
push
out
pop
jb
jo
aam
push
xor
test
mov
stos
dec
push
lcall
pop
dec
xor
iret
test
and
repnz
mov
xor
sub
cs
stos
pop
xor
stos
clc
add
jecxz
shlb
and
imul
add
ljmp
mov
shrb
xor
in
pop
xchg
sub
and
ret
cmpsb
aaa
ss
push
dec
sbb
lret
stc
cmpsb
fiadds
jbe,pt
xchg
adc
push
fs
imul
jb
inc
mov
mov
jbe
sbb
dec
push
fnstenv
movsb
push
pop
xor
outsb
loopne
xor
xchg
mov
xchg
popl
sub
push
dec
or
push
gs
lea
sub
push
sarb
add
cs
jecxz
adc
pop
gs
in
add
hlt
or
dec
popa
jns
mov
cli
lahf
imul
jnp
in
mov
fnsave
push
pop
dec
cmpsb
xchg
jno
jecxz
dec
es
in
ss
mov
mov
arpl
mov
mov
sbb
xchg
xor
inc
fidivrl
es
xor
push
add
add
push
cmpsl
mov
fcomps
pop
bnd
in
stc
je
cmp
gs
cmp
lea
sub
in
pop
and
pop
or
sbb
add
orl
sub
inc
xchg
sub
enter
cs
outsb
les
and
pop
xchg
adc
mov
cmp
or
ret
xor
xchg
cwtl
ret
sub
scas
lods
add
outsb
adc
std
jp
mov
xor
lcall
fiadds
std
mov
loop
mov
fbld
dec
popf
push
xchg
inc
fs
roll
jl
xor
cmp
sub
sub
xor
and
add
jnp
ret
insb
add
xchg
adc
push
dec
ror
mov
sub
iret
aas
mov
leave
out
outsb
inc
jg
fbstp
mov
inc
gs
xchg
movsl
insb
pusha
nop
les
addr16
inc
pop
in
cmp
adc
ss
rolb
mov
and
jmp
insb
mov
lret
pop
aad
lahf
ja
add
jns
cmp
xlat
mov
jo,pt
mov
jge
push
push
xchg
gs
xchg
pop
push
mov
in
leave
push
loop
xlat
shrl
or
jge
mov
pop
loope
cmpsb
add
lea
mov
add
hlt
sub
loopne
or
out
inc
cmc
cmp
xchg
cmp
xlat
or
sub
fs
clc
inc
and
js
sahf
out
test
mov
inc
addl
cwtl
lcall
lahf
xchg
pop
push
cmp
xchg
and
cmp
sub
andl
testl
sbb
mov
aad
fdiv
or
loope
adc
jp
stos
enter
fisttpl
pop
jp
lds
push
inc
in
lds
loop
data16
cmp
jno
in
xchg
bound
and
dec
push
imul
lret
aaa
popa
lea
test
adc
push
jle,pn
stos
scas
insb
in
sbb
ja
ja
std
xchg
lret
aas
mov
adc
pop
xor
xchg
fiadds
inc
pusha
push
cli
cmpl
aas
ficompl
push
ret
xor
inc
mov
sub
mov
xor
adc
xchg
je
lahf
xor
mov
das
jmp
inc
nop
jp
add
cmpsb
rorl
mov
pslld
mov
inc
xor
int3
stc
inc
js
xchg
mov
rolb
cmp
pop
mov
fstp
jae
and
adc
dec
push
lcall
xor
mov
mov
lahf
or
daa
dec
jae
pop
mov
insb
inc
add
inc
pop
ret
scas
stos
mov
adc
pop
mov
inc
sbb
in
lret
lahf
cmp
add
shlb
sbb
outsb
leave
dec
inc
and
rcl
leave
xor
jge
mov
pop
jne
adc
loopne
andl
xchg
ja
addl
lock
mov
fimuls
mov
int3
pop
and
xor
pop
aaa
ret
mov
pop
enter
xchg
sub
fcompl
imul
adc
and
sbb
dec
or
xchg
icebp
or
cmp
lahf
cmp
add
mov
jl
into
add
lcall
adc
jns
lock
leave
jle
add
test
push
scas
cmp
scas
mov
ja
ja
xlat
ret
ja
xor
mov
pop
jecxz
loope
mov
call
test
dec
adc
testb
icebp
popf
xor
scas
rorl
jmp
imul
xor
jecxz
lods
push
test
movsb
mov
enter
popl
bound
int3
push
std
mov
sub
enter
out
mov
mov
les
clc
sub
mov
xchg
imul
mov
mov
fld1
cmpsb
std
pop
dec
sarb
andl
push
vprotw
add
and
add
stos
nop
push
inc
sbb
inc
jmp
xchg
cmp
jge
lcall
mov
mov
in
add
fmuls
sub
ss
or
enter
push
jle
out
pop
arpl
fisubl
push
insb
inc
add
xchg
push
mov
sbb
fisttpll
fdivs
sub
dec
icebp
cs
scas
pop
mov
outsl
popl
dec
mov
mov
loopne
loop
gs
sub
ja
notb
dec
lea
and
lock
mov
cwtl
retw
call
mulb
filds
sub
jp
shll
aaa
loope
jmp
in
fdivrl
aas
lret
push
leave
ret
daa
cmp
adc
push
push
cmp
enter
lds
fwait
inc
cmpsl
sbb
add
add
xlat
fiadds
stc
push
lret
pop
mov
mov
pop
add
push
xchg
and
xlat
ffreep
lcall
sub
repnz
sub
sbbl
dec
push
dec
mov
xchg
push
or
iret
jle
gs
sub
addr16
or
cmp
jnp
dec
add
mov
add
adc
fs
push
repz
out
mov
lret
icebp
mov
clc
and
insb
adc
xor
jo
or
mov
xor
adc
adc
mov
enter
sub
mov
ja
incb
call
mov
mov
fwait
cld
and
cs
sub
mov
xchg
xor
push
leave
add
jae
jmp
mov
aad
cld
roll
lock
and
leave
pop
push
push
fdivrs
ja
mov
pop
xchg
and
jo,pn
add
scas
and
mov
add
imull
ljmp
cld
or
loop
push
scas
shrb
sub
aas
popa
mov
cmp
enter
imul
or
mov
push
ror
or
sbb
insl
sbb
sbb
mov
and
push
sti
cs
xor
shr
fmuls
pushf
pop
push
test
shl
xchg
gs
js
sbb
mov
jb
adc
lcall
xchg
leave
dec
cmpsl
add
std
push
add
daa
repz
xor
xor
int3
xchg
movsl
insl
mov
cli
cmp
mov
mov
aad
mov
lods
stos
jb
mov
xor
std
repnz
or
ss
mov
outsl
idivl
stos
push
push
sbb
add
loopne
movsl
gs
and
xor
and
jecxz
sub
mov
lock
js
dec
fwait
mov
ljmp
push
stos
ss
push
mov
icebp
cmp
push
fsubp
gs
cld
imul
add
aaa
jle
push
lds
or
jo
mov
cmc
dec
jmp
stos
inc
xchg
add
inc
dec
in
loop
in
addr16
cmp
dec
fstp
add
sar
dec
dec
xlat
int
int3
jg
mov
ljmp
andb
pop
lods
in
sub
dec
ret
dec
sub
pushf
popa
pop
cmp
cwtl
mov
arpl
push
dec
sbb
adc
cld
mov
pushf
lods
lcall
mov
and
clc
and
pop
stos
inc
test
cmp
sarl
sub
mov
fcoml
shlb
mov
mov
xor
aam
push
sbb
aaa
aas
dec
pcmpeqw
dec
iret
sti
jmp
insb
imul
push
lea
mov
mov
jmp
push
popf
mov
movsb
xchg
dec
adc
cmp
inc
sub
add
add
mov
test
pushf
sub
fsubrs
lret
fiadds
int3
movsb
jno
sarl
les
sbb
adc
aas
enter
push
popa
add
int
mov
ror
pop
push
imul
insl
mov
adc
loope
dec
int3
cltd
popf
bound
mov
nop
mov
cmp
mov
mov
data16
push
or
lcall
lods
mov
outsb
mov
mov
sub
xchg
aaa
add
mov
iret
mov
daa
test
jb
adc
std
ret
outsl
orl
jae
mov
fldt
repnz
lods
outsl
jge
add
mov
mov
movsl
nop
jae
xor
push
jmp
pop
mov
xchg
bound
adc
popf
push
xchg
mov
and
inc
xchg
aaa
adc
mov
push
pop
test
push
lahf
jb
xchg
leave
repnz
cmp
lret
addr16
mov
nop
push
iret
sub
out
in
sbb
mov
test
mov
mov
clc
push
ret
in
mov
jecxz
gs
lahf
aad
push
cmp
pop
push
dec
arpl
push
push
daa
in
adc
push
call
lods
outsl
sbb
mov
mov
fidivrl
sbb
push
ja
insb
push
addr16
lret
push
and
jno
jge
mov
addb
out
or
imul
jle
pop
and
js
in
pop
fcmovbe
pop
nop
aam
rorl
xlat
jnp
mov
mov
adc
jo
jp
daa
or
daa
and
repnz
lea
int3
les
cwtl
xchg
js
test
push
sub
push
jmp
aas
xlat
orl
xor
out
and
repz
dec
xchg
xor
xchg
add
fldenv
mov
jno
js
mov
dec
cmp
push
pop
adc
push
imul
cwtl
or
int3
lock
loopne
insb
loope
xor
pop
cmpsl
sar
mov
cld
arpl
sbb
xor
mov
xor
jne
int
push
xor
push
repz
pop
fsubrp
ljmp
or
fstps
out
add
sbb
adc
push
scas
mov
mov
mov
xor
aad
sub
mov
xor
fistl
push
stos
stc
xchg
or
jge
jle
jmp
dec
push
jg
ds
push
or
xor
scas
sar
adcl
cmp
ret
jns
cmc
cld
loopne
in
test
or
add
es
mov
sub
xchg
outsl
sbbb
call
xor
push
mov
push
xchg
inc
inc
and
and
or
xor
jmp
popf
pop
xor
adc
adcb
into
test
cltd
xor
fsubr
movsl
pop
test
fisttpll
push
jle
xor
and
cs
pop
push
dec
popa
mov
inc
and
sbb
mov
nop
inc
pusha
out
stos
mov
jmp
mov
ja
sub
cmpsb
fstpt
lock
jnp
leave
mulb
jle
inc
test
or
cli
and
lcall
mov
cld
and
mov
dec
jne
and
sbb
inc
mov
hlt
mov
mov
icebp
inc
nop
adc
mov
jns
incl
int3
mulb
jle
sahf
lock
int3
aas
push
xlat
mov
jae
jg
ss
pop
xor
movsl
sbb
add
sbb
stc
add
js
mov
dec
dec
xchg
mov
mov
mov
ss
loop
and
mov
adc
xorl
xor
call
cs
xor
in
data16
cli
int
lea
repnz
testl
popf
adc
push
push
hlt
dec
push
lea
out
ret
outsb
repz
lret
addr16
inc
pushf
dec
push
insb
mov
insw
dec
pop
jecxz
cmp
fwait
mov
or
loopne
cmc
cmp
dec
shrl
test
jno
test
aad
out
mov
lods
pop
add
push
repnz
out
mov
icebp
push
xchg
mov
mov
mov
cltd
arpl
dec
sahf
pop
lods
pop
ffreep
out
add
int3
pop
add
aad
daa
mov
push
or
repnz
enter
setb
pop
mov
in
cmp
dec
lock
iret
jnp
add
jmp
and
loopne
sbb
sub
pop
call
jnp
mov
mov
jge
test
pop
inc
pop
mov
addl
filds
popa
xchg
xor
and
aas
popa
mov
fimull
cmp
jg
iret
dec
gs
movsl
or
fsts
test
out
out
sbb
js
cmp
insb
push
and
test
bound
repnz
mov
add
movsl
cmp
pushf
push
inc
rcrl
mov
repz
int
int3
or
xor
in
and
cmpsb
outsb
jb
in
in
push
insb
paddq
fldln2
xchg
mov
xor
les
jecxz
jl
dec
or
rclb
mov
subb
lods
sub
les
add
jmp
sbb
loopne
out
mov
movsb
mov
sbb
addb
and
imul
nop
dec
movsb
mov
adc
dec
adc
add
jbe
stc
in
sbb
dec
sbb
and
std
cltd
sarl
or
or
add
sarb
pop
add
cmpsb
rep
jb
cmpsb
push
in
dec
cmp
xchg
stos
dec
inc
or
pop
cmp
jle
mov
pusha
sub
or
ja
jo
popf
mov
mov
pop
ret
loopne
xor
fcomps
je
sti
xchg
cli
ror
jne
cmc
jnp
add
jl
mov
scas
fst
std
clc
ret
inc
cmp
pop
jno
movl
or
mov
push
cmp
mov
fistpll
lds
daa
cmp
lcall
dec
cmp
out
popa
jb
cmp
dec
push
fsts
cmpb
push
outsb
pusha
adcb
push
and
scas
fldl2t
rolb
dec
pop
or
xchg
dec
movsb
jge
mov
pop
popf
sbb
daa
iret
mov
jne
inc
jns
cmp
jnp
pop
dec
jno
sub
aaa
mov
xor
outsl
jbe
sbb
mov
sarb
out
jbe
jp
pop
mov
fstpl
ret
push
xchg
mov
inc
xor
xchg
addr16
xor
ljmp
arpl
addr16
lcall
jle
cmc
mov
inc
cmp
bound
dec
xchg
jae
xor
fildll
movsb
mov
inc
sub
insl
push
daa
stc
aam
out
push
inc
shr
jnp
das
adc
and
movsl
jne
add
xchg
cmp
sbb
push
cmp
mov
fnstenv
jno
dec
les
loope
insl
sub
dec
or
mov
inc
push
ja
sti
mov
shl
xor
sbb
and
sarl
xlat
add
pushf
pop
loopne
jnp
mov
mov
iret
mov
lea
mov
sbb
mov
lret
test
jg
out
or
xchg
cltd
xchg
jp
xchg
sahf
sbb
adc
jae
sti
xchg
jo
in
shlb
daa
xchg
mov
jbe
aas
cmp
push
fistpll
daa
xchg
test
pop
mov
loopne
cmp
dec
mov
sarb
notl
js
sub
das
mov
movl
scas
or
add
inc
inc
mov
pop
into
push
mov
aas
scas
jnp
cltd
mov
loopne
icebp
add
test
je
jg
pop
push
or
xlat
out
or
cmp
adc
pop
or
dec
test
jmp
jb
loope
ffreep
movsb
mov
lds
ss
xlat
xor
frstor
mov
in
outsl
pop
mov
sbb
push
xchg
fisubl
jbe
jecxz
pop
enter
sbb
and
popa
mov
adc
xchg
jb
xchg
jne
inc
cmp
test
mov
icebp
jl
lea
inc
outsb
xor
add
inc
inc
test
pushf
sub
rclb
into
inc
sbb
mov
cmc
xor
sbb
push
or
movsl
cmp
clc
pop
mov
sub
cmp
das
daa
arpl
insb
fcmovnu
mov
push
adc
mov
es
mov
adc
ffreep
ljmp
pop
inc
dec
dec
or
das
jno
test
mov
sarl
cmp
in
sbb
sbb
add
push
clc
pop
sub
xor
jbe
int
cld
push
and
sbb
jns
aad
pop
jo
and
dec
xor
jp
outsl
pop
push
cmp
push
cmp
test
cmp
ds
sbb
ds
rorb
inc
or
movsb
adc
jp
sbb
jecxz
cmp
jl
push
xchg
xor
les
aad
jo
pop
mov
and
mov
std
xchg
xchg
sbb
pop
cmp
and
in
cmp
cwtl
fbstp
in
jmp
sub
and
inc
pop
cmp
daa
sub
lret
or
jbe
jnp
mov
cmp
sub
and
ror
dec
sarb
inc
fs
std
cmp
enter
sbb
test
hlt
fnstcw
pop
mov
xchg
insb
and
pop
sbb
out
pop
or
jns
xchg
cld
dec
aas
and
dec
xlat
sbb
cmpsb
repnz
jne
and
mov
jns
dec
sbb
adc
adc
mov
sarb
fldt
out
bound
movsb
ljmp
ret
push
adc
hlt
jne
lea
push
sub
push
mov
int
jg
mov
icebp
cli
mov
stos
jno
lds
pushw
push
mov
clc
lret
leave
mov
push
mov
pop
loopne
cmp
mov
adc
sub
push
mov
mov
cs
jno
pop
fimull
loopne
movsb
dec
and
cmp
dec
xchg
mov
cmpsl
rclb
mov
mov
jbe
rcr
lcall
in
inc
jns
inc
inc
aas
mov
arpl
and
popa
sub
mov
ja
xor
jge
jbe
pop
push
cltd
mov
xor
mov
stc
lea
sbb
mov
xchg
ljmp
cmpsl
adc
roll
cmp
or
lods
outsl
adc
jl
int
inc
cli
jl
outsl
jbe
imul
jge
in
or
bound
inc
test
mov
bound
and
popa
mov
fdivr
subl
xor
mov
dec
mov
sbb
mov
cld
or
mov
clc
jb
mulb
push
cmpsl
clc
push
dec
popa
mov
mov
or
dec
jle
xor
in
push
sbb
cmp
ja
gs
aam
adc
push
out
adc
inc
stc
inc
leave
sub
lods
sbb
in
fisubl
imul
add
out
stos
es
xchg
and
clc
popa
lods
push
xchg
stc
push
and
push
stc
jne
fcompl
mov
dec
insl
lret
sti
ljmp
or
pop
mov
push
inc
das
dec
hlt
or
mov
push
out
xchg
jb
pop
pop
pop
out
cmpsb
into
lret
xchg
test
ja
enter
jb
dec
xchg
lea
mov
lcall
push
jmp
fs
clc
stos
push
mov
adc
ret
push
dec
pop
cvtps2pd
jg
addr16
adc
pop
mov
push
movsl
in
pop
fs
push
pushw
js
orb
jno
sbb
popa
pushf
insl
icebp
cmp
pop
push
add
pop
popa
inc
xchg
pop
dec
cmp
dec
hlt
ror
dec
dec
adc
xchg
inc
fcmovnu
es
sub
imul
sbb
or
jnp
xchg
push
pop
loope
dec
push
scas
scas
int3
pop
sub
les
dec
pop
clc
jl
pop
xchg
pop
push
call
adc
lods
dec
sahf
aad
jl
aas
jle
or
mov
push
pop
dec
jmp
ja
movsb
out
jle
xchg
xchg
shl
jmp
push
push
pop
ret
les
pushw
popa
fwait
out
fsubs
cmp
imul
push
loopne
mov
add
es
push
lret
inc
ja
je
dec
mov
ljmp
cmp
cltd
shr
ja
xchg
push
ljmp
pop
into
mov
movsl
rcr
mov
xlat
lret
dec
inc
mov
ds
xchg
cmc
dec
cmp
imul
mov
jo
psrlq
xchg
mov
sub
js
sti
aas
aad
sahf
adc
fcomps
mov
test
add
std
pop
int
and
call
sub
cli
mov
jle
inc
xchg
jl
and
loope,pn
or
imul
dec
and
xchg
imul
paddb
enter
lea
aam
xchg
cld
jle
out
ret
fists
lds
jmp
loop
add
xchg
lea
dec
ss
jecxz
cmp
adc
or
mov
sbb
jge
xchg
sbb
std
arpl
dec
add
dec
pop
idivb
sbb
fsts
or
jae
inc
push
sti
and
lahf
je
push
and
les
inc
sbb
imul
outsl
xchg
cmp
xchg
mov
sbb
fwait
fs
mov
fs
sbb
mov
add
popf
or
notl
fildl
push
add
xor
scas
dec
test
repz
mov
cmp
xchg
cmpsb
mov
pop
fs
repz
pop
enter
leave
pop
mov
inc
xor
icebp
inc
aaa
mov
les
push
lock
cmpb
test
mov
stos
and
xor
dec
mov
hlt
xchg
sbb
div
int3
sub
out
jmp
xchg
fs
dec
push
or
mov
mov
mov
int3
arpl
movsl
cmc
pushf
sub
sbb
jmp
push
test
mov
xchg
les
sub
xor
pop
jge
lods
icebp
adc
mov
adc
add
jle
push
sbb
adc
sbbl
jl
or
loop
fs
sub
js
sbbb
mov
enter
fdivrl
push
mov
mov
xorps
out
inc
cmp
aas
jmp
out
fsubr
loope
adc
or
and
or
aad
stc
outsl
clc
jl
add
sub
rclb
cmp
imul
or
mov
out
data16
std
scas
mov
pop
ljmp
loopne
jge
sarb
mov
out
push
fidivrl
repz
mov
daa
jne,pn
xchg
dec
sbb
xor
mov
addr16
mov
jmp
xor
inc
push
std
and
xchg
jp
call
cmp
pop
sbb
out
das
or
xchg
insl
out
xchg
mov
xor
mov
pop
js
adc
pop
xchg
cltd
nop
mov
xlat
imul
sub
jle
mov
dec
lods
xor
aaa
cmpsb
add
daa
push
sbb
pop
mov
xchg
lret
std
iret
xchg
aad
fistps
clc
jmp
lret
std
ja,pn
add
jl
leave
lcall
mov
add
jnp
aad
mov
ja
jo
inc
mov
ja
scas
xchg
and
jbe
inc
arpl
adc
imul
sbb
bswap
xchg
out
sub
dec
mov
into
inc
in
mov
and
mov
sub
int3
sbb
add
add
mov
lret
dec
pushf
mov
lret
mov
cltd
addr16
icebp
mov
popf
jno
mov
or
imul
fwait
cmp
cmp
sbb
cmc
test
inc
pop
insl
lahf
mov
cmp
jge
jl
ficompl
pop
lret
mov
push
mov
mov
incb
mov
add
jbe
aam
push
movl
xor
dec
cs
sub
mov
jbe
lret
xchg
cltd
int3
mov
pop
or
mov
iret
cmpsl
test
xchg
mov
enter
dec
sbb
loope
mov
jo
sub
hlt
idivb
mov
ret
aas
movsl
addr16
cmp
fistl
mov
adc
sbb
lret
ret
xor
repz
mov
sub
xchg
mov
outsl
and
dec
cwtl
xchg
adc
inc
mov
shrb
out
pop
push
mov
outsb
mov
sbb
add
adc
lahf
cltd
scas
xchg
dec
das
xchg
outsl
std
jg
adc
lret
adc
ljmp
add
jno
push
mov
jg
fdivl
andl
mov
or
mov
inc
mov
stos
adc
ror
arpl
dec
inc
pop
enter
iret
push
mov
push
mov
mov
outsb
mov
repnz
lahf
add
lea
or
jnp
sub
mov
lock
notl
rclb
adc
cli
jmp
leave
pop
adc
popf
aas
inc
mov
pop
std
and
mov
dec
jp
xchg
lods
mov
push
leave
addr16
loopne
test
cli
mov
push
loope
lret
outsb
call
jbe
or
jl
incl
scas
jmp
lcall
lods
fld
or
test
js
dec
mov
rcrb
lods
inc
les
inc
mov
push
cmp
add
scas
in
add
iret
cwtl
icebp
ja
loopne
jge
jmp
stc
pop
mov
push
jne
mov
cmp
push
ja
je
jbe
ret
or
jg
sahf
mov
clc
push
stos
and
mov
mov
jmp
add
sbb
mov
into
cli
adc
mov
pop
lcall
cli
les
jmp
and
jp
dec
mov
cmp
dec
sbb
stos
rclb
push
mov
jl
popa
pop
aam
push
mov
clc
cmpl
add
repz
mov
lds
jp,pn
add
and
decl
das
push
jge
cmp
enter
pop
cltd
mov
jo
mov
movsl
or
loopne
mov
jne
or
sub
inc
cmp
test
test
stos
ret
xchg
push
insl
stos
xor
pop
mov
inc
fnstcw
xor
inc
adc
cld
cld
sbb
adc
rorl
pop
addr16
sbb
ja
dec
clc
fldt
out
nop
in
in
push
cmp
ds
pop
dec
and
ss
xchg
mov
pusha
jae
testl
inc
jge
mov
shl
mov
mov
mov
out
les
lods
dec
andb
mov
jne
fistpl
stos
rcr
mov
stos
out
adc
sub
je
jae
xor
mov
cmpsl
aad
add
addr16
sbb
ss
rorb
sub
sbb
xor
fstps
cmp
xor
sbb
xchg
or
shrl
jl
jmp
jbe
jg
mov
dec
stc
push
pop
lahf
xor
or
sbb
bts
fucomp
das
imul
in
pop
dec
sysexit
pop
jecxz
arpl
sbb
mov
xchg
mov
sbb
mov
lock
ret
nop
test
arpl
adc
jae
shll
arpl
jmp
push
inc
rorb
pop
pusha
or
jmp
ficoms
push
push
push
enter
xchg
leave
stos
mov
fcomps
sbb
leave
xor
add
cmp
lahf
iret
repz
cmpb
roll
push
cmc
add
and
push
sti
jp
lcall
lds
test
clc
in
lahf
sarl
lcall
stos
addb
popf
jg
sahf
enter
addr16
pop
ret
xchg
push
lods
sub
fisubrl
cld
jecxz
cmc
and
sub
and
out
push
dec
lods
push
addr16
add
xor
add
add
cmp
add
add
add
xor
add
mov
add
add
add
addb
add
add
add
nop
add
sub
add
mov
pop
add
loopne
add
or
add
add
add
or
add
push
add
push
add
add
add
add
add
add
push
add
cmp
add
or
add
add
add
and
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
add
add
ret
les
add
add
add
push
add
addb
add
js
add
add
add
or
add
add
dec
adc
add
add
add
add
add
sbb
add
add
add
add
loopne
add
add
add
or
add
add
add
add
and
add
or
dec
add
add
dec
add
dec
add
add
add
add
adc
add
add
add
or
add
add
add
add
add
add
dec
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
add
ljmp
add
ljmp
xor
add
add
mov
add
add
ljmp
pop
xor
lahf
inc
add
in
mov
add
ljmp
pop
xor
lahf
lahf
lahf
inc
add
mov
imul
add
out
out
pop
pop
mov
lahf
repnz
add
mov
imul
out
out
out
out
pop
mov
repnz
in
mov
imul
ljmp
add
repnz
out
out
inc
in
mov
imul
mov
add
add
in
in
in
out
out
inc
in
mov
imul
ljmp
add
add
lock
in
in
inc
in
mov
imul
repnz
lahf
pop
pop
add
out
idiv
lock
out
inc
in
incl
imul
ljmp
jae
out
testl
in
incl
in
imul
ljmp
mov
incl
in
incl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
add
add
in
incl
div
div
ljmp
mov
add
add
pop
out
in
add
add
incl
div
div
add
jmp
loope
mov
in
in
in
in
in
pop
pop
in
add
add
incl
div
div
add
in
in
in
in
jmp
in
add
add
in
in
in
in
add
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
add
add
ljmp
div
add
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
in
in
in
ljmp
incl
in
add
add
add
add
ljmp
in
incl
add
add
add
add
add
add
pop
in
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
add
incl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
add
in
in
in
in
in
add
add
pop
jp
xor
xor
dec
add
pop
in
add
cld
cld
add
add
cld
cld
cld
add
add
in
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
add
cld
cld
add
cld
cld
cld
cld
cld
cld
add
add
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
add
cld
cld
add
cld
cld
add
cld
cld
add
add
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
add
cld
cld
add
add
add
cld
cld
add
add
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
add
cld
cld
add
add
cld
cld
cld
add
add
in
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
add
cld
cld
add
cld
cld
cld
add
add
add
in
incl
add
add
add
add
add
add
pop
in
add
cld
cld
add
cld
cld
add
cld
cld
add
add
incl
in
add
cld
cld
add
cld
cld
cld
cld
cld
cld
add
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
js
add
cmp
add
cmp
add
cmp
add
js
add
clc
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
incl
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
cld
add
in
in
in
outsl
in
jp
xor
in
add
cld
add
add
in
outsl
jp
in
push
in
add
cld
add
add
in
outsl
dec
dec
dec
dec
dec
in
add
cld
add
add
in
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
or
test
add
add
adc
add
add
or
push
add
add
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
or
and
insl
gs
jo
and
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
and
jb
imul
xor
xor
xor
or
and
gs
xor
and
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
in
and
add
and
add
and
add
and
add
add
add
add
add
fsubl
add
mov
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
stos
add
cmc
add
cs
mov
xchg
jne
pop
jae
pop
inc
sub
test
add
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
push
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
or
jmp
cwtl
sub
popf
jno
sub
jo
lods
adc
repnz
adcb
jmp
adc
xor
dec
jp
in
nop
mov
xchg
pop
repnz
dec
out
jne
out
pushl
push
add
sbb
push
loope
sti
and
sbb
adc
fcmovb
outsb
and
repnz
pop
jecxz
and
insl
add
or
jmp
lods
and
add
adc
adc
popa
adc
mov
les
sub
jmp
in
test
leave
or
es
shl
int
push
sti
fcoms
and
add
idivl
andb
sbb
xor
xchg
jmp
repz
mov
insb
movsb
cs
mov
sbb
add
cli
xchg
ljmp
out
incb
mov
and
outsl
addr16
sbb
out
insl
add
jb
js
std
sub
cmp
push
adc
outsb
dec
xchg
mov
mov
and
shlb
mov
jne
sub
out
nop
jo
fimull
mov
shl
lret
stc
es
adc
add
ret
jge
pop
sti
popa
add
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
jb
inc
aad
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
adc
clc
push
push
jno
hlt
add
fidivs
and
sub
add
mov
pop
dec
hlt
mov
inc
xchg
mov
inc
sahf
mov
push
sbb
mov
sbb
subb
xor
inc
ret
lcall
out
jne
mov
inc
add
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
xchg
cltd
mul
jge
mov
in
movsb
daa
or
xchg
add
add
push
call
xchg
push
mov
cld
lea
ds
ror
xorl
or
call
addb
or
pop
mov
cmp
push
dec
rcll
jo
inc
add
sub
js
add
and
cmp
xlat
or
push
xor
mov
xor
and
sub
aam
rolb
dec
pop
add
out
or
adc
xchg
xchg
sbb
adc
sbb
sbb
inc
xor
or
push
and
adc
pop
push
mov
and
clc
and
push
mov
sbbl
lea
inc
cld
orl
add
lock
rclb
push
jbe
add
lea
lods
stos
add
cmpl
add
jae
test
mov
addl
inc
push
cli
rep
fistps
jmp
push
pop
jge
ljmp
sbb
and
inc
and
sub
lea
dec
jecxz
push
xchg
xchg
xchg
aaa
xchg
mov
call
mov
jae
insb
xchg
shrl
mov
or
add
test
sub
push
cmp
addl
je
mov
lea
mov
cld
mull
push
xorb
and
lea
push
and
das
orl
fs
loop
les
shrb
sbb
test
lret
mov
inc
or
aaa
ficoms
and
push
dec
inc
mov
movb
add
pop
int
and
inc
and
push
call
lods
and
cmovl
or
add
pop
pop
pop
pop
ret
les
and
cld
mov
pop
sub
loopne
push
add
adc
xchg
and
aad
push
mov
sbb
xchg
sti
sbb
push
push
negl
ret
push
enter
xor
pop
add
add
in
and
leave
push
loope
pop
clc
sub
pop
sarl
je
hlt
ja
xchg
out
push
add
inc
shrl
fadds
mov
ficompl
bound
xchg
enter
inc
pop
leave
in
data16
nop
dec
in
lods
icebp
popa
idivl
add
fiaddl
out
setae
or
cmp
mov
mov
roll
dec
enter
movsl
jbe
jae
shll
adc
add
orb
hlt
push
and
nop
mov
push
sbb
call
push
xor
add
je
les
dec
xor
push
jmp
mov
ud2
mov
adc
out
cmp
dec
xchg
insb
push
scas
cld
inc
ds
adc
testb
cmp
jge
xchg
push
inc
loopne
rolb
or
sub
pop
dec
je
dec
mov
xor
sub
ret
and
or
rclb
xchg
inc
push
push
add
pushf
jae
cmc
int3
inc
jmp
enter
mov
cmp
sub
sub
pop
or
js
shlb
aam
cmp
ret
in
add
jbe
push
loopne
cmpsl
incb
dec
add
push
aad
imul
pop
std
sti
ljmp
inc
mov
je
loopne
popa
push
jge
sub
daa
clc
rcll
add
movsl
mov
ds
call
add
xor
movsb
push
fcmovbe
xchg
stos
lret
pop
sub
cmp
inc
ret
jne
mov
dec
pushf
mov
push
lock
push
dec
push
xchg
fsubl
sub
lea
outsb
inc
dec
sub
loope
dec
mov
pop
xchg
and
jl
dec
add
mov
sub
push
dec
lahf
or
and
push
push
testb
in
pop
rclb
inc
je
mov
inc
jne
adc
adc
fildl
mov
lret
sbb
nop
cli
cmp
jne
push
stc
jmp
fidivrl
inc
icebp
movl
sub
pushf
dec
mov
fiaddl
stos
inc
or
push
nop
dec
add
xchg
dec
andb
pop
sub
and
or
dec
or
push
test
and
push
push
push
es
call
sbb
mov
ret
adc
dec
mov
or
adc
mov
adc
mov
push
mov
hlt
in
test
cmp
jmp
and
fdivrl
mov
push
adc
rcrb
testb
mov
in
mov
jg
test
and
jmp
mov
add
cmp
clc
cmp
lret
xor
pop
es
push
dec
push
stos
dec
add
enter
mov
xchg
jne
cld
push
pusha
mov
rcrb
sub
insl
mov
call
cmp
adcl
xor
pop
movsl
xchg
or
adc
add
inc
cmp
mov
jl
sbb
rcrl
cmp
cltd
push
lea
cmp
sti
or
add
sbb
and
inc
jbe
sub
shlb
mov
and
xchg
out
testl
push
insl
jae
bound
sbb
jo
insb
imul
sbb
gs
jae
adc
fsubrl
pop
push
push
arpl
pushl
xor
outsb
iret
je
bound
sti
imul
sbb
andb
frstor
jmp
jbe
mov
dec
in
sti
stc
popa
addr16
inc
outsl
cmp
cmp
je
data16
cmp
int
cmpl
push
dec
nop
mov
push
fs
mov
push
sbb
inc
sahf
je
test
push
insb
sbb
jl
imul
iret
hlt
arpl
hlt
mov
jbe
sbb
cltd
bound
xchg
inc
xchg
pop
pop
mov
ror
or
xchg
cmp
mov
imul
mov
movsl
sbb
push
aam
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
add
add
test
add
lods
and
add
add
mov
and
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
