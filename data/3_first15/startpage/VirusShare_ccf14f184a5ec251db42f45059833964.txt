push
add
shlb
dec
lock
sbb
shl
icebp
clc
fmul
adc
ret
cld
fs
xor
dec
or
add
jmp
xor
pop
and
shll
je
jbe
add
or
jne
div
mov
dec
adc
inc
inc
cld
out
pop
jb
cmp
push
ja
push
wrmsr
pop
jbe
dec
sub
sbb
sbb
fistl
fdivs
mov
je
push
fldcw
cmp
adc
rol
mov
mov
adc
inc
test
ret
inc
add
test
stc
jg
dec
test
cmpb
pop
shlb
loope
shlb
into
cmpsb
jp
inc
dec
negb
ret
mov
imul
shll
mov
jg
push
ret
fistl
test
dec
adc
pop
rcll
jmp
movsl
inc
xchg
and
out
movsb
addr16
nop
push
lock
push
push
push
dec
push
sbb
add
add
jb
or
push
push
pushl
sub
inc
mov
int
fsts
xchg
decl
mov
or
roll
cmp
in
adc
jb
test
rcrl
ret
mov
add
test
jbe
xlat
lret
adcl
or
xlat
mov
iret
or
rorb
xor
lods
push
jle
push
push
pop
pop
aad
push
ss
cmpsb
and
inc
sub
in
or
lock
clc
mov
cltd
adc
pop
xor
mov
pop
inc
decl
jne
pop
add
or
jns
push
sub
incl
push
push
inc
adc
rolb
mov
push
andb
push
xor
add
movsb
push
mov
or
sarb
mov
leave
ret
xor
mov
adc
jo
or
cmp
and
mov
and
nop
popa
mov
dec
jne
out
rcrb
inc
fiadds
mov
mov
and
push
xchg
js
push
cmp
je
sbb
mov
movsb
jmp
mov
les
ja
inc
cmpb
fisttps
dec
sbb
in
std
mov
add
idivl
pop
adc
orb
call
mov
cmpl
or
call
add
push
push
dec
aad
sub
adc
inc
push
test
dec
sub
add
ret
push
push
push
mov
adc
aam
sbb
and
lock
sbb
adcl
sub
lea
cltd
push
xor
inc
add
and
or
push
loope
pop
push
ret
or
test
add
int
push
pop
mov
jge
push
bound
sbb
push
call
inc
push
sub
and
push
lea
out
xchg
pop
cmp
rorl
test
repz
loope
sub
push
add
and
or
test
and
xchg
push
test
ljmp
jecxz
xor
push
mov
in
xor
push
and
pop
rorl
inc
add
add
inc
cld
orb
imul
and
or
inc
daa
mov
add
push
aaa
xchg
xchg
xchg
popf
lahf
repz
or
jl
and
add
jne
and
and
and
xchg
jno
sbbb
or
ret
and
pusha
inc
pop
mov
adc
fs
push
xor
call
cmp
and
push
inc
dec
inc
clc
frstor
push
xchg
aad
xor
cmp
push
dec
pop
jle
adc
pushf
pop
sbb
xor
or
add
outsb
sti
mov
shrb
punpckhdq
addl
and
popa
cmp
push
adc
adc
pop
xchg
pop
mov
hlt
add
add
and
je,pn
andl
mov
lods
inc
push
push
in
add
push
add
jmp
pop
mov
insb
test
mov
adc
mov
push
pusha
adc
adc
add
cltd
push
sub
mov
cmp
cs
adc
daa
mov
adc
testb
xor
push
mov
jmp
je
adc
cli
ficoms
lea
push
push
movb
sub
addb
insb
hlt
lcall
push
pop
sahf
push
into
daa
jle
jo
movsb
xchg
cwtl
lcall
add
sti
xchg
cwtl
ja
loope
in
mov
cmpl
mov
jmp
mov
lret
mov
or
mov
add
or
or
outsl
fisubrl
cltd
pop
adcl
xchg
and
or
jnp
lcall
and
lcall
push
cmc
ss
push
into
lock
orl
fisubl
xor
push
jecxz
loop
ret
sub
jl
or
jl
mov
adc
and
xchg
push
test
cmp
mov
mov
mov
jbe
or
push
and
push
adc
scas
dec
stc
dec
inc
mov
arpl
sbb
push
in
mov
inc
std
mov
aaa
xor
int3
xor
and
clc
and
and
addr16
lcall
int3
sbb
and
js
pop
cmpsb
dec
sub
pop
aam
call
and
adc
dec
and
add
dec
dec
push
push
inc
mov
and
pusha
and
bound
mov
rolb
push
loop
add
cmp
popa
jb
adc
xor
push
mov
imul
sbb
addr16
sarb
sub
and
xor
cwtl
dec
ds
push
es
outsb
mov
jae
enter
push
outsl
loopnew
data16
insl
fists
cmp
xor
imul
iret
enter
pop
jne
cmc
insb
les
xor
mov
push
jmp
test
fnsave
arpl
cmp
das
cmp
int
mov
sarb
xor
aaa
cmp
ss
mov
mov
fiadds
insl
je
clc
cmp
jno
rclb
in
ja
jo
enter
cmp
jb
xor
add
sub
add
add
or
sarb
cld
out
shlb
adc
pop
mov
int
mov
push
push
jb
adc
push
loopne
arpl
fs
aas
sahf
bound
add
inc
dec
jle
and
outsl
push
or
or
dec
mov
mov
enter
fwait
pusha
add
dec
sar
ret
pusha
xchg
fsub
test
mov
fs
inc
lret
inc
or
xchg
test
into
adc
arpl
push
nop
imul
dec
inc
popa
or
shl
sub
inc
adc
loopne
add
or
pop
cmp
sub
ds
or
lret
bsr
xchg
inc
xchg
or
shlb
ficompl
or
cmpsl
mov
mov
mov
mov
movsb
add
or
cwtl
xchg
push
dec
adc
xor
dec
aam
lret
xchg
and
insb
push
sub
fs
cmp
push
paddb
pop
lods
sub
inc
pop
cs
daa
add
or
into
mov
in
lret
test
push
dec
sub
push
push
dec
add
push
mov
push
add
mov
mov
adc
shlb
dec
ret
adc
sbb
shl
icebp
jecxz
xor
ret
repz
or
shr
inc
sbb
push
push
add
jmp
fcomp
or
leave
jne
div
pusha
int3
dec
adc
inc
xor
or
jb
cmp
js
js
rcrl
dec
sub
xor
or
neg
xchg
fadds
leave
rcl
flds
pop
ret
int3
movsl
add
cmp
orb
add
test
xchg
pop
mov
lods
add
sbb
daa
inc
in
sub
add
inc
loope
or
push
pop
in
push
dec
sbb
inc
adc
or
push
push
push
out
or
or
adc
jmp
lea
push
push
adc
adc
loope
test
mov
je
push
sbb
xor
jmp
pop
pcmpeqd
scas
adc
inc
das
add
or
leave
cmp
imul
sbb
ret
addl
mov
fimuls
inc
adc
call
dec
or
std
or
xchg
call
ret
push
push
push
xchg
pop
add
mov
inc
sar
je
sbb
lss
mov
test
mov
mov
ret
push
mov
pop
fcomi
jl
jb
or
xchg
xchg
and
inc
sbb
mov
or
inc
test
shlb
pop
inc
pop
xchg
push
adc
cmp
adc
xor
xchg
add
rolb
dec
in
add
fwait
fwait
or
jnp
sub
push
adc
cmp
je
mov
into
inc
out
and
pop
pop
xchg
pop
add
push
clc
adc
xor
je
xchg
sub
or
and
sub
flds
in
mov
and
xchg
inc
mov
xor
or
negb
or
pushf
inc
lret
mov
in
jmp
arpl
push
push
clc
push
in
mov
push
call
sbb
cmpb
and
cmp
sbb
mov
aaa
int3
sbb
push
sub
lea
aas
add
cmp
in
inc
jo
mov
ds
xor
or
jne
pusha
push
outsl
adc
jns
stos
enter
push
adcl
cmp
pop
xchg
je
dec
cmp
inc
lds
mov
push
call
fsts
adc
sbb
xor
push
adc
mov
ss
and
push
daa
xorb
and
hlt
cwtl
ss
push
jb
sub
cmp
mov
sub
mov
or
or
or
lahf
lods
ret
push
jl
or
incb
mov
lea
cmpsb
cli
pop
jae
dec
test
lods
push
jo
push
mov
mov
jg
add
negl
adc
sub
rol
jmp
mov
je
test
push
mov
jle
jo
mov
cmp
pushf
or
or
inc
cld
push
or
clc
add
lods
pop
push
adc
leave
and
decl
sub
cmp
or
cld
out
sbb
call
psadbw
incl
xor
mov
and
sub
cmp
cld
shrb
pop
leave
xchg
loope
adc
fsubr
bound
jns
mov
aam
sub
shrl
cmp
outsl
and
add
inc
cmp
jbe
cwtl
sbb
cld
and
clc
lods
mov
negb
stos
data16
clc
dec
jmp
andl
test
pop
arpl
add
je
out
or
push
and
and
mov
movsb
pop
imul
dec
mov
mov
fdiv
or
or
adc
xor
pop
call
pushf
push
jae
in
sahf
sub
stc
sar
add
out
and
sub
pusha
jmp
push
enter
mov
push
mov
or
outsl
lock
fwait
in
jo
enter
cmpb
mov
inc
or
adc
shll
pushf
es
sub
xchg
sbb
divb
dec
ja
or
push
adc
gs
or
jnp
cld
pop
sbb
sbb
sub
push
push
loope
sub
cmp
ficoml
sub
push
cmc
inc
cmp
add
cmp
clc
jg
stc
loop
cmp
cltd
das
adc
inc
cmpsl
fcoms
mov
push
das
leave
dec
lock
loope
stc
or
xchg
outsl
stos
pushl
cmp
add
test
pop
sahf
mov
aam
pop
sub
fucomip
jb
pop
fldt
mov
mov
jno
jb
mov
sub
add
dec
or
and
cmp
mov
mov
mov
stc
sbb
push
sub
pushf
sub
test
sbb
stos
sub
jp
or
lods
and
pop
sbb
sub
cmp
xor
jge
fildl
orb
mov
popf
sbb
je
and
imul
cwtl
add
pop
movb
clc
adc
adc
push
or
dec
cmp
jmp
xor
mov
test
leave
push
push
sub
mov
jg
pop
fisttpl
and
roll
push
dec
sub
fmul
les
nop
cmp
hlt
enter
push
in
push
add
xchg
fdivrl
icebp
inc
popa
jbe
vunpckhps
sub
inc
or
scas
pop
cmpsb
fisubrl
sahf
or
mov
and
out
cmp
shr
dec
jne
push
test
ljmp
sbb
push
fstpl
sbb
add
sub
add
fcoms
xchg
or
adc
fbld
in
adc
daa
in
inc
jmp
jne
dec
pop
inc
xlat
rcll
ja
sub
xchg
inc
dec
xchg
cmovs
aaa
xlat
and
lds
push
mov
push
cltd
add
andl
pop
sbb
lcall
jne
sbb
inc
adc
cmp
add
xchg
jmp
push
lcall
adc
mov
dec
lods
adc
and
or
pop
cli
testb
push
pusha
ds
ret
adc
je
popf
es
nop
es
out
in
pushf
mov
movsb
aaa
cmc
or
mov
jecxz
adc
std
cmc
fcomps
and
or
cld
loope
and
cmpsl
dec
loope
int3
xor
lea
or
dec
or
fisubl
iret
and
adc
call
lahf
push
mull
adc
pop
dec
inc
mov
adc
add
in
mov
and
cld
in
jo
in
imul
test
push
dec
xor
in
mov
pop
pop
pushf
out
mov
mov
jl
push
and
adc
jne
lea
frstpm(287
mov
mov
subb
jmp
or
or
nop
or
jecxz
lret
mov
and
push
addl
das
adc
add
repz
sub
inc
jb
insl
dec
mov
into
adc
repz
gs
xor
sbb
cltd
mov
int
ret
arpl
call
add
adc
sub
or
add
mov
orl
jbe
daa
andl
gs
mov
mul
cld
and
sub
sub
pop
cmp
and
inc
sbb
pop
sub
and
andl
bound
mov
cmp
fcmovu
or
add
test
lods
mull
sbb
subl
pop
xchg
test
mov
fldcw
outsl
add
push
sbb
mov
dec
repz
inc
insl
or
testl
add
enter
lret
mov
lods
mull
pushf
mov
hlt
in
adc
inc
sub
inc
call
sti
sub
adc
sbb
xlat
cmp
sub
mov
mov
out
pop
stos
and
adc
fs
addr16
adc
sarb
cmp
orb
mov
add
jae
and
jo
repnz
je
outsb
and
icebp
les
sub
xor
pop
mulb
mov
dec
dec
pop
pop
test
pop
das
jmp
jbe
adc
mov
xor
and
test
cwtl
pop
pop
cltd
cmp
fbld
sub
in
cmp
icebp
lret
or
ja
and
add
jb
sbb
cmp
push
enter
push
stc
xor
xor
mov
adc
push
cmp
mov
and
pop
in
xor
inc
dec
push
sub
roll
sti
lret
call
inc
icebp
adc
push
adc
pop
icebp
enter
mov
push
sub
inc
out
les
das
jns
lock
pushf
adc
mov
adc
es
push
cli
jp
dec
adc
pop
dec
dec
iret
nop
push
sahf
loope
outsb
fistps
bound
hlt
mov
sti
sar
pushf
dec
push
fwait
in
mov
push
cmpsl
mov
mov
loop
out
adc
dec
mov
gs
out
addr16
adc
movsl
popf
cmp
mov
push
xor
mov
mov
dec
mov
lret
out
mov
jnp
int3
mov
repnz
sahf
or
cld
scas
jge
repz
push
das
inc
mov
sub
gs
mov
cld
mov
push
fnstcw
clc
pop
mov
xchg
jl
dec
sub
xchg
add
sub
fsubrl
push
dec
add
cmp
test
mov
add
mov
add
aaa
sub
pop
lea
push
push
pusha
adc
ret
notl
push
fwait
adc
lock
mov
rcrl
xorl
mov
mov
in
jmp
push
cmpb
jg
cmp
jae
inc
fcoml
jne
mov
cmp
jl
cmp
and
incb
mov
cmp
jl
mov
cmp
jne,pn
lea
push
cmp
jae
sahf
cwtl
cld
jbe
or
inc
inc
jmp
rclb
jge
je
mov
xchg
stos
or
fs
int3
inc
es
inc
out
cltd
std
add
lcall
sbb
mov
out
jno
push
shlb
cmp
add
pop
and
mov
add
jl
and
loopne
push
pop
pop
aas
sbb
sbb
adc
add
jne
jne
subb
jmp
cmpb
je
outsb
fs
lret
outsl
jmp
lahf
loop
jmp
xor
or
lock
sbb
mov
lahf
or
or
sbbb
adc
push
pop
mov
and
push
xchg
hlt
xchg
mov
rolb
push
les
or
push
push
aad
mov
aaa
les
and
or
lock
repz
shr
sub
loope
leave
nop
ret
adc
lret
arpl
sbb
mov
cmpl
and
add
insl
push
movsl
adc
hlt
not
imul
fsubs
adc
jmp
add
or
adc
inc
push
movlps
sub
daa
rorb
mov
sub
rorl
jno
jo
inc
cmp
test
mov
decb
jbe
push
cmpsl
test
inc
sbb
ret
mov
push
pop
inc
insb
pushf
lret
ljmp
dec
nop
mov
pop
sbb
int
cwtl
jno
lods
sbb
int3
push
mov
cmp
xchg
xor
mov
mov
in
arpl
cld
lea
notl
mov
xorl
jae
xor
adc
jae
lods
fdivs
ret
xor
mov
test
test
mov
loopne
mov
call
pcmpgtb
jmp
or
xor
pop
inc
add
call
cwtl
orb
adc
outsb
xchg
push
cmpsb
fwait
sub
rcrb
jmp
sub
jmp
sbb
mov
fdiv
dec
add
ljmp
push
xor
sub
xchg
dec
push
stos
or
cmp
fs
pop
test
push
xchg
xchg
loopne
or
inc
pop
inc
dec
in
xchg
cmp
sub
sbb
push
push
jnp
imul
adc
adc
cmpl
mov
insb
in
imul
mov
or
out
mov
pop
lock
jne
adc
stos
push
adc
push
add
mov
add
push
test
inc
sbb
xor
cli
mull
dec
adc
jno
xor
call
daa
cmpw
popa
and
sbb
jmp
mov
daa
pop
sub
sar
fisubs
jg
jp
into
jecxz
rolb
jmp
popf
dec
or
je
dec
and
jbe
ljmp
sti
shl
push
push
pushl
mov
cmp
push
or
fstpt
push
test
or
adc
add
sub
or
rorl
sbb
push
sub
stos
add
jne
jmp
push
call
pop
lds
mov
add
inc
lret
and
fnstcw
push
dec
fistpll
inc
inc
mov
inc
jne
xor
in
mov
rcll
pop
sbb
inc
out
iret
lret
imul
lret
cld
lret
adc
cmp
sub
cs
es
adc
or
bound
das
mov
mov
mov
es
fdivs
cmp
xchg
inc
jns
sti
xor
sub
sub
add
js
and
jbe
adc
or
cld
or
mov
adc
loopne
orb
cmp
mov
xor
repnz
das
lea
inc
adc
or
xchg
push
xorl
cs
push
dec
mov
stos
js
mov
fiadds
jmp
or
push
and
or
xor
pop
movb
hlt
mov
or
lahf
mov
push
mov
jo
or
adc
arpl
aas
pop
adc
mov
call
and
cli
out
or
mov
enter
je
mov
imul
ss
add
nop
cmpsb
or
inc
mov
dec
jne
loop
test
cld
xor
fcoml
imul
subl
xchg
adc
js
dec
or
sbb
push
mov
and
mov
test
mov
mov
sub
push
call
and
in
mov
dec
sub
push
xor
cmp
and
xchg
jge
pop
xor
leave
xchg
jge
sbb
or
pop
adc
and
pop
and
or
pop
xor
add
sbb
push
inc
loopne
jecxz
loope
stos
stos
add
cmp
jb
push
leave
ljmp
cmp
lcall
outsl
add
sbb
movsb
dec
mov
cmp
inc
jne
jo
add
adc
mov
push
and
mov
mov
push
or
pop
test
xor
fisubs
lods
dec
fwait
inc
inc
and
jns
sbb
sbb
adc
adc
jbe
ror
ret
dec
loop
loopne
cmpl
add
test
xchg
cld
inc
sbb
mov
pop
enter
jo
ficoms
decb
call
test
out
loope
jecxz
push
cld
mulb
adc
andb
mov
and
adc
push
cld
push
xchg
lea
cmp
popf
jb
std
shlb
sub
enter
pusha
fcmovnu
adc
adc
push
add
mov
pop
fimuls
mov
movsl
ret
loope
scas
ret
jbe
and
mov
je
fists
sbb
mov
lahf
adc
repz
daa
lret
dec
jle
dec
add
lahf
and
push
xchg
scas
xor
movsl
add
scas
push
mov
mov
stc
pop
ret
jns
in
adc
jmp
xchg
cmp
ja
roll
enter
sbb
icebp
fdivs
dec
dec
inc
loop
mov
mov
or
into
call
jb
inc
negb
pop
cmpb
and
in
mov
imul
das
jne
inc
in
mov
jo
xor
add
mov
mov
pushf
movsb
rcll
mov
xchg
ljmp
cltd
inc
push
or
outsl
je,pn
addb
jl
das
dec
cmc
inc
repz
fisubrl
sbb
inc
inc
and
jecxz
shl
std
mov
fisttpll
enter
add
lock
not
popf
or
push
push
and
mov
or
call
mov
pop
xchg
loop
in
add
inc
ja
roll
jnp
loopne
add
push
and
or
popa
stc
add
lahf
pop
adc
dec
sub
inc
cmp
cmp
jl
adc
neg
lea
sbb
and
pop
push
fmull
or
adc
push
fstps
bound
or
cmp
and
adc
xchg
test
cmpb
je
or
push
test
cmp
adc
pop
cli
push
scas
adc
inc
cwtl
dec
arpl
cmp
sbb
pop
adc
push
stos
lret
push
loope
sbb
adc
or
jmp
xchg
data16
push
sub
repnz
sbb
sub
jno
adc
mov
ret
adc
sub
sbb
sbb
leave
and
mov
hlt
pop
adc
ret
outsb
inc
xor
cmp
mov
mov
and
fdivrl
add
stc
jae
sub
mov
jb
sti
rolb
clc
push
add
pusha
push
insl
mov
call
movl
xchg
stos
dec
pop
lock
mov
pop
adc
pop
xchg
xchg
loop
mov
inc
subl
cltd
loop
adc
jle
stos
ja
dec
rcll
adc
xlat
aaa
mov
xor
xchg
inc
lahf
adc
cmp
icebp
lret
push
cltd
jmp
push
ja
jmp
jg
popl
adc
xchg
mov
pop
mov
and
ficoms
std
dec
jp
dec
int
ss
sub
sti
pushf
test
loop
enter
les
push
sub
or
push
call
dec
loopne
int3
sti
mov
inc
test
pop
jbe
inc
jp
pop
add
orb
out
subb
movsb
lock
dec
sub
cmpsl
scas
test
jmp
xor
push
add
and
imul
iret
insb
mov
mov
mov
push
stos
xchg
mov
xchg
test
add
cmp
dec
fsubrl
lret
sbb
jp
xor
sub
dec
push
call
test
ja
mov
ret
add
jge
testl
ficompl
shl
xchg
and
push
daa
scas
sbb
push
je
cmp
or
cmp
and
pop
cmp
jnp
push
add
push
dec
in
out
push
push
sub
shl
aaa
popa
adc
adc
rcr
and
sbb
sub
cli
jne
inc
cmp
shr
pop
push
cmc
inc
inc
dec
hlt
xlat
xchg
int3
insl
inc
cmpsb
arpl
xchg
push
mov
je
test
mov
and
add
dec
jne
cmp
scas
es
outsb
stos
xchg
out
dec
stos
cmc
out
mov
arpl
mov
inc
mov
shll
fs
jbe
jae
or
jp
xor
and
pop
les
adc
sub
and
add
std
adc
mov
push
xor
dec
or
dec
cli
cli
mov
cwtl
mov
dec
mulb
inc
mov
xchg
movb
inc
or
out
add
or
xor
push
jno
xchg
or
icebp
push
lret
inc
rorb
push
in
mov
inc
cmp
jb
sub
adc
fs
jmp
dec
dec
mov
lret
jmp
push
loop
add
cmp
sbb
pop
roll
xchg
inc
push
mov
push
xchg
cltd
xchg
aaa
test
call
into
ss
lcall
leave
cmp
or
or
push
add
rorl
mov
call
stc
or
ret
rcrl
fdivs
popf
fistpl
mov
in
ja
xchg
mov
cmp
shll
or
push
or
in
add
xor
stc
imul
mov
insl
pop
or
adc
push
inc
dec
rcl
test
mov
std
pop
inc
cmpl
sub
ret
mov
mov
call
mov
nop
dec
and
fsubl
sbb
int3
rcll
or
adc
adc
cwtl
xchg
pusha
mov
sbb
sti
adc
cmpsl
ret
push
loopne
data16
or
jno
xor
dec
pop
inc
adc
jmp
adc
xchg
sub
jmp
mov
lea
pop
inc
aaa
je
sbb
mov
cmp
in
dec
xor
or
xchg
cmc
pop
lcall
xor
sub
add
add
mov
mov
div
ss
pop
push
frstors
pushf
xchg
xchg
inc
jmp
inc
movsl
inc
push
mov
pop
aam
push
lea
pop
clc
sub
inc
cmpsl
inc
out
xchg
or
jl
inc
jb
and
fdivrs
ficomps
sub
sub
lods
push
lret
inc
mov
fistps
cmpsl
out
xchg
mov
cmp
je
clc
push
mov
mov
int3
pop
push
movsl
add
add
mov
inc
adc
sub
adc
test
pop
mov
and
or
sub
aas
sahf
mov
push
popa
ret
dec
fbstp
dec
inc
insl
outsl
sahf
sub
cltd
mov
jbe
out
rorb
cmp
clc
imul
or
mov
sbb
arpl
add
lods
xor
mov
addr16
outsl
adc
mov
dec
rol
jle
inc
andl
call
pop
add
into
jo
icebp
and
sub
push
adc
adc
xor
xchg
orl
or
cmp
xor
adc
rcrb
and
iret
incb
mov
loopne
jge
or
and
fadds
in
in
add
hlt
fcoms
and
stos
mov
pushf
sgdtl
sub
and
pop
dec
xor
or
jne
ret
dec
xor
loopne
push
fdiv
cld
repnz
enter
into
or
lds
aam
mov
jne
adc
pop
add
mov
add
loopne
cwtl
and
jl
sbb
cmp
or
add
inc
sbb
pop
xor
jge
andb
jne,pn
inc
and
incl
test
sbb
jl
js
push
das
fidivrl
sbb
pop
push
push
sbb
loop
das
fldenv
jns
movb
add
lock
cmp
addr16
adc
lods
and
gs
lea
loope
adc
and
lea
adc
movsb
adc
scas
adc
or
je
or
ljmp
or
cmp
add
push
push
mov
add
jae
add
lret
mov
repnz
mov
mov
aam
jmp
add
jge
je
xchg
test
sbb
dec
or
add
xor
sbb
imul
dec
adc
adc
dec
cli
xchg
add
divl
dec
sarb
mov
pop
jmp
inc
mov
inc
dec
xchg
test
cmpsb
adc
movsb
xchg
lods
mov
fsubr
pusha
cltd
jmp
call
bound
inc
cltd
inc
add
inc
ficoms
scas
mull
hlt
mov
pop
int3
stos
shl
add
push
or
test
and
or
or
mov
push
and
les
stos
push
mov
inc
cmp
and
add
andl
xchg
mov
push
inc
push
and
xchg
mov
xorl
mull
xchg
mov
lock
sbb
or
push
adc
call
mov
pushf
xlat
les
testb
pushf
push
pop
pop
jmp
push
dec
sbb
repz
adc
inc
or
gs
cmp
jle
sub
mov
faddl
or
push
ljmp
mov
rorb
cmp
jle
movsb
es
pop
mov
ror
and
inc
dec
jne
mov
add
cmp
lahf
push
or
pop
in
cmpl
inc
in
sub
dec
add
leave
pop
xor
and
mov
adc
sbb
pop
aaa
push
test
clc
je
jmp
lock
xchg
aad
xor
inc
fsubr
and
test
pushf
ret
sbb
sub
sub
aas
xor
jno
xor
inc
dec
and
sbb
sbb
fdivs
jl
or
aam
js
mov
hlt
sub
inc
sbb
jbe
aas
mov
adc
jle
lcall
out
aam
je
clc
push
call
sbb
sub
mov
clc
xor
js
jp
jne
jmp
inc
xor
mov
insb
add
and
mov
adc
js
dec
mov
jle
pop
mov
push
push
mov
xor
jmp
sti
cmc
adc
jno
dec
hlt
xor
mov
aas
xor
or
sub
or
push
inc
and
add
mov
cli
inc
inc
shrb
nop
or
leave
ret
xchg
iret
adc
popf
imul
scas
lcall
mov
cmpsl
and
xlat
cmpl
adc
mov
pop
pop
sbbb
ret
add
divl
mov
jge
sbb
dec
jne
fsub
add
pop
jecxz
xor
pop
or
jno
push
not
cmpsb
and
es
pop
xchg
add
shr
test
cmp
sbb
dec
mov
fnstcw
nop
js
call
inc
jb
ja
xchg
lea
shll
mov
popf
mov
test
cmp
jb
clc
pop
cmc
mov
xor
arpl
dec
sbb
mov
add
mov
mov
lea
xor
adc
inc
cmp
mov
pusha
xorl
sub
push
mov
jl
fildll
lea
sbb
push
lret
mov
or
pop
sbb
pop
shrl
xor
loope
inc
mov
jne
fnop
daa
and
mov
push
add
fbld
lock
inc
cli
push
inc
inc
mov
in
push
movb
shl
ret
mov
imul
mov
mov
test
sub
mov
cmpsl
aas
inc
and
lret
adc
ret
or
sarb
mov
and
data16
daa
in
mov
rorb
mov
movsb
imul
mov
adc
push
cwtl
cwtl
push
mov
mov
inc
call
dec
jae
es
into
dec
inc
shr
inc
push
lea
mov
adc
loop
or
cmpsl
adc
adc
es
mov
and
jmp
inc
mov
xor
mov
dec
add
out
clc
leave
subl
repnz
xor
pop
into
pop
in
mov
sub
dec
or
jmp
and
test
into
mov
aam
cwtl
adc
sti
push
loope
xchg
lcall
adc
and
enter
in
or
jb
mov
mov
nop
sub
mov
sub
lret
mov
incl
lea
ss
lea
icebp
adc
add
cmp
addl
mov
stc
mov
loopne
pop
clc
lods
mov
jmp
loop
and
inc
pop
sbb
mov
and
xor
cmp
insl
int3
add
orb
inc
das
js
gs
imulb
jno
test
clc
xor
shl
inc
jne
js
mov
dec
dec
jns
cmp
out
adc
jp
loopne
and
xchg
dec
jl
sub
in
cmp
mov
sbb
stc
data16
mov
out
sub
iret
ja
xor
aaa
sub
sub
mov
mov
call
notl
mov
sub
cmp
fidivrl
mov
add
jae
pop
lret
movsb
repnz
jbe
lods
and
mov
xorl
or
pop
jge
mov
fdivl
inc
or
cld
mov
cwtl
out
dec
pop
or
jmp
arpl
xor
mov
push
mov
test
dec
adc
and
lcall
xor
push
push
mov
xchg
add
mov
sub
rcll
xchg
lcall
cmp
xchg
dec
sub
icebp
fimull
es
dec
pop
mov
imul
mov
hlt
sbb
sub
fisttps
jecxz
aam
or
jmpw
dec
into
jmp
sub
mov
je
push
cmp
xchg
fbld
inc
or
xchg
lcall
data16
cmp
push
pop
jp
orl
nop
cli
dec
cmp
je
stos
fmull
or
mov
clc
xchg
andb
cmp
and
test
push
pop
rclb
cwtd
or
cli
add
inc
push
mov
inc
pop
jne
mov
jmp
pop
ret
loope
lahf
or
aam
push
sbb
jb
jle
shrl
fmull
repz
test
pop
pop
push
sub
pop
jl
jo
cmp
addr16
jge
adc
jne
in
push
lahf
ss
and
push
cmp
add
or
push
pop
push
ret
inc
xchg
or
imul
xor
add
sti
and
jmp
sub
rorl
icebp
das
mov
outsb
out
lds
xor
stc
sub
xchg
and
and
incl
into
cmpsb
pop
xor
xlat
mov
xchg
sbb
pop
xor
leave
push
shrb
pop
cmpsb
add
loop
or
in
dec
and
icebp
adc
xor
xchg
lods
addl
mov
sbbb
sbb
shlb
pop
xchg
inc
xchg
cld
lock
imul
inc
orl
mov
dec
push
xchg
xchg
pop
sub
cmp
int3
aam
fst
int3
mov
sub
sbb
movsl
mov
mov
mov
das
push
add
aas
and
sbbl
jl
cmp
jle
es
inc
pop
sbb
sub
gs
inc
xor
notb
lahf
addl
cld
lds
push
xor
mov
clc
ficompl
es
pop
mov
sbb
jle
xchg
sub
mov
dec
add
sbb
add
mov
inc
lea
iret
or
jle
jbe
mov
dec
fildll
inc
xor
enter
insb
xor
xchg
int3
mov
mov
add
mov
js
das
dec
or
mov
or
xchg
push
lcall
mov
or
shl
shrl
dec
adc
adc
xor
sub
mov
add
add
sbb
ljmp
nop
pop
dec
je
or
test
outsb
xor
lcall
add
subl
xor
aaa
nop
ret
sub
ret
jge
push
popa
dec
adcl
push
inc
arpl
ds
testl
jae
cs
roll
jmp
sbb
and
call
or
push
jo
add
shrb
loope
fs
or
sub
divb
andb
sub
xchg
std
jae
mov
loope
iret
mov
add
insl
pop
mov
enter
aas
jb
pop
cmpsb
pop
and
jp
js
push
jmp
shrw
fsts
inc
and
xor
mov
test
stos
mov
jmp
pusha
mov
dec
es
sarb
aam
and
cmp
icebp
jne
dec
and
push
loop
call
jno
adc
bound
inc
and
mov
adc
data16
lret
xor
jne
sbb
pop
pop
subl
or
mov
xchg
call
nop
fistps
nop
insb
push
add
out
dec
mov
ret
imul
insb
add
rolb
pop
xchg
imul
mov
test
in
cld
pop
jne
lods
add
addl
das
pop
push
fsubrs
call
sbb
pop
pop
arpl
movsb
jo
in
mov
xor
sub
dec
dec
loope
mov
bound
add
je
mov
cmc
push
xor
lock
pop
pop
xchg
hlt
push
jne
pop
push
and
push
jl
jmp
push
inc
mov
adc
xchg
mov
loope
inc
add
arpl
leave
push
push
and
pop
sbb
pop
sub
xor
mov
mov
add
adc
mov
adc
sub
sti
pop
pop
pop
negl
add
pop
xor
mov
dec
fmuls
into
dec
data16
push
pop
fcoml
ret
and
fiaddl
shrb
or
mov
inc
cwtl
lahf
add
jae
movsl
dec
adc
hlt
dec
mov
lods
jle
dec
add
add
dec
pop
sbbb
shrb
cmpsl
push
add
push
pushf
lods
sti
and
lahf
jbe
jmp
fwait
call
fdiv
push
in
inc
cld
add
xor
ficomps
lea
repnz
mov
adc
add
sbb
sub
push
test
jne
push
mov
cli
adc
out
outsb
ret
inc
jl
dec
adcb
push
xchg
pop
adc
inc
adc
out
call
pop
loop
dec
loope
push
sbb
xchg
dec
and
pop
or
stc
ret
push
mov
enter
and
jmp
popf
repnz
or
shlb
ret
dec
loopne
loopne
pop
cmp
xchg
sub
aam
out
leave
pop
cld
push
dec
and
sub
data16
push
imull
in
push
and
pop
lret
or
lret
push
lahf
push
cli
clc
and
jg
mov
add
pushf
les
inc
push
pop
sahf
mov
cwtl
push
std
adc
inc
in
and
fcmovbe
popa
and
xor
add
jge
xor
or
xchg
das
les
cmp
mov
arpl
ret
push
lock
movsb
add
es
mov
xchg
dec
adc
jae
xchg
jmp
xchg
or
sbb
push
test
pop
nop
xchg
repz
js
movsb
addl
push
aad
stc
enter
or
rorl
adc
aam
and
xchg
hlt
dec
daa
sbb
xchg
gs
xor
mov
loopne
mov
push
int3
fcomps
mov
stc
and
aad
push
inc
pcmpeqw
push
push
pop
mov
test
mov
dec
icebp
fsubrs
pop
imulb
push
inc
popf
notb
pop
or
fisttpll
or
jmp
sbb
push
loopne
insb
dec
mov
mov
cmp
mov
and
sbb
xchg
movsl
pop
pusha
mov
mov
out
lock
adc
inc
pop
dec
aas
xchg
pop
dec
repnz
les
sbb
inc
push
or
call
mov
pop
mov
loopne
div
mov
out
inc
enter
push
faddl
push
pusha
mov
ljmp
enter
add
xlat
aad
adc
movsl
sbb
imul
cmp
and
dec
mov
xor
mov
adc
and
xor
sub
cmp
pop
jne
inc
or
add
iret
cmpsl
sbbl
cmp
sbb
push
orb
pop
sub
stos
adcw
dec
push
ret
mov
adc
mov
dec
popf
icebp
sub
inc
or
mov
repnz
test
or
pop
pop
dec
pop
jg
out
stc
or
or
inc
mov
push
pop
pop
cmp
or
loope
mov
inc
add
push
ja
add
cmp
in
lret
les
or
mov
loope
int3
in
add
pop
enter
mulb
dec
sbb
lea
xchg
addl
test
pop
dec
pop
cs
inc
cld
add
fidivrs
fdivs
ja
dec
add
dec
jecxz
pop
pop
mov
mov
xor
fistpl
inc
add
data16
gs
dec
push
mov
dec
pop
jmp
cwtl
cmp
xor
dec
xor
cmp
or
dec
pop
lcall
loop
pop
cmpsb
inc
push
and
inc
add
push
call
fwait
aad
pop
mov
and
push
lods
add
push
dec
or
push
jecxz
inc
mov
mov
cwtl
sbb
je
mov
adc
mov
test
insb
xchg
xor
bound
shl
adc
adc
or
nop
and
js
xor
jmp
inc
imul
gs
stos
es
or
cli
or
add
add
adc
or
dec
mov
paddsb
xor
adc
sub
mov
cmp
adc
pop
cmp
stc
loope
shll
jmp
mov
je
lcall
mov
and
scas
xor
iret
dec
fiadds
lock
cmp
cmp
adc
mov
dec
push
jecxz
mov
notl
in
aad
and
pop
sub
push
add
or
js
loope
sti
aaa
xor
xor
xchg
in
or
sub
adc
ds
and
int3
add
or
cmp
in
cmpl
add
orb
jne
lret
mov
ret
addb
sbb
fstps
mov
or
xor
fmull
jle
or
add
rolb
inc
sbb
mov
push
push
add
inc
testl
mov
xchg
arpl
sub
sbb
add
cmp
sbb
cs
push
sub
dec
enter
std
or
repz
mov
icebp
pop
add
test
xchg
arpl
fwait
push
ljmp
push
push
sub
mov
ret
push
icebp
sbb
scas
sub
jmp
add
or
or
push
pushf
xor
sbb
neg
sbbl
cmpsb
repz
mov
popf
xchg
in
mov
and
fwait
inc
and
dec
cmp
in
and
xchg
popf
out
mov
bound
lret
add
into
insl
lahf
movb
movsl
or
xchg
mov
les
movsl
lcall
popf
pusha
inc
xchg
pop
sbb
inc
adc
mov
push
pop
es
jns
stos
push
and
push
inc
mov
ja
push
add
dec
sbbb
rclb
mov
rclb
push
inc
xor
or
inc
cmp
jmp
mov
and
dec
push
push
movsl
adc
pop
dec
scas
push
and
adc
inc
dec
jg
test
cld
cmp
pop
je
mov
cmp
jne
popa
out
inc
add
pop
pop
mov
and
sub
mov
dec
stc
loope
je
and
adc
les
inc
roll
jbe
daa
jo
lahf
notb
adc
pop
stos
cmp
sarb
repnz
loopew
bound
movsl
iret
bound
push
clc
push
shll
xchg
or
mov
xor
dec
or
andb
mov
mov
add
std
into
pop
mov
mov
cld
in
jge
adc
shlb
pop
ret
pop
leave
pop
push
push
add
and
push
jbe,pn
sub
jns
xchg
iret
call
push
jb
mov
call
and
mov
int3
xchg
xchg
xchg
shlb
push
lahf
mov
out
cmp
jle
pop
push
pop
add
xor
mov
lret
les
xor
sbb
cmp
imull
mov
push
sbb
cmpsl
jns
jns
dec
add
mov
call
les
xor
or
lds
leave
pop
outsb
or
push
and
add
fisttpl
xor
jbe
xchg
pop
lea
cmp
jne
lret
aaa
test
gs
je
push
push
jnp
pop
dec
inc
cmp
pop
loope
or
and
sbb
pushf
fbstp
xchg
repnz
aad
cmp
in
inc
or
shlb
push
test
mov
loop
lcall
test
xchg
xchg
push
and
mov
dec
aam
inc
sub
je
sbb
adc
ja
sahf
outsl
and
push
adc
cmp
sub
fdivrl
jl
sti
sbb
cmp
arpl
mov
push
push
push
mov
lods
cmp
int3
cmp
adc
fistl
test
and
dec
push
mov
and
les
sub
or
mov
mov
push
xchg
call
and
scas
sbb
and
inc
and
cmp
out
jg
sbb
out
mov
cli
push
push
xorb
js
adc
pusha
pop
cmp
pop
sbb
cmp
xor
inc
fildl
mov
std
sub
fmuls
push
add
mov
scas
fisubl
pop
std
adc
or
hlt
leave
imul
sub
addr16
arpl
push
es
mov
and
xor
inc
je
adc
je
push
lret
int3
cld
adc
out
jo
pushf
fimull
das
inc
jne
pop
push
fwait
scas
xor
enter
add
push
add
jg
and
or
adc
icebp
or
adc
sub
mov
rclb
dec
and
jmp
dec
cmpsl
lock
repz
and
in
sub
dec
cmp
add
sub
push
mov
sbb
jne
arpl
or
inc
pusha
mov
clc
push
js
enter
and
xor
shll
or
lret
cs
orl
adc
add
test
or
stos
pop
rorb
or
push
cmpl
hlt
fdivs
and
or
mov
xor
jb
test
xor
cltd
push
or
inc
xchg
pop
clc
repz
sahf
or
push
sbb
dec
sbb
push
rclb
dec
ljmp
jne
add
pop
mov
push
mov
xchg
sbb
aam
mov
add
xorl
ds
or
push
or
cmp
add
inc
movsl
mov
lea
pop
loopne
mov
rclb
movsb
xor
scas
mull
pusha
dec
mov
push
shlb
lods
push
ret
pop
push
inc
xor
pop
dec
jge
inc
push
imul
or
cmp
add
dec
jle
jp
mov
mov
jnp
sub
les
popa
cmp
jne
push
jge
or
mov
pop
push
push
cli
imul
divb
pop
mov
adc
cmp
jnp
dec
or
mov
mov
add
fcoms
femms
dec
push
xor
jmp
mov
pop
cmpb
add
pushf
inc
inc
adc
cmpsb
inc
jno
pop
pop
in
push
in
mov
test
fadds
push
leave
or
pminsw
and
add
bound
lods
aaa
test
pop
mov
add
popa
jnp
testl
pop
fsubl
orb
mov
daa
shlb
mov
mov
cltd
xor
pusha
jo
adc
popa
sub
mov
stos
xchg
mov
push
mov
adc
cld
inc
outsl
xor
push
adc
ret
cmp
or
mov
sbb
cmpl
mov
int
fisubl
add
mov
mov
jmp
cmpsb
or
inc
xor
pop
mov
dec
movsl
jmp
xchg
pop
cltd
test
pop
sbb
pushf
rorl
add
out
popa
mov
pusha
inc
pop
cs
xor
fistpll
cmpsb
push
dec
lods
inc
mov
imul
pop
or
lret
inc
lods
sub
sahf
sbb
inc
inc
arpl
xlat
jbe
fnstsw
pop
mov
rolb
fiadds
mov
mov
sti
and
add
jle
cmp
incb
out
push
sbb
clc
dec
testb
jmp
or
push
sbb
or
int3
je
or
in
or
gs
cmp
or
inc
sub
ljmp
pop
adc
dec
add
addb
fdivs
in
lsl
and
jae
testb
xorb
mov
pop
cmpsl
lret
je
shl
sub
cmp
jg
pop
sarl
sbb
cwtl
cmp
cmp
nop
add
dec
sub
test
jg
add
jne
push
pop
cmp
imull
js
and
dec
and
inc
cmp
mov
mov
roll
pop
inc
lret
push
gs
popf
pop
lds
adc
mov
test
jp
sub
jo
cmp
cli
mov
add
jns
testb
cmp
push
mov
add
dec
inc
push
nop
sbb
cli
add
test
xor
sbb
push
insb
arpl
add
loop
jle
ret
and
inc
lcall
add
and
jp
testb
jnp
mov
dec
and
dec
insb
xchg
jp
mov
mov
dec
out
negb
or
jns
or
inc
ds
int3
mov
adc
mov
lret
xor
dec
cli
mov
jge
adc
adc
and
dec
pop
xchg
push
lods
mov
dec
cld
xchg
or
xor
push
cmp
mov
out
or
inc
jp
movsb
cltd
jae
xor
or
inc
adc
dec
dec
add
push
cmp
or
push
push
push
push
or
inc
xor
dec
or
pop
sarb
xchg
xlat
mov
fildll
mov
push
jb
and
add
push
push
movsb
sbb
or
mov
pop
arpl
das
jl
repnz
movsb
sbb
sahf
sbb
hlt
add
arpl
out
add
adc
loopne
out
loope
sbb
inc
popf
movsb
rolb
or
stc
out
cld
sbb
inc
push
xchg
and
mov
xchg
add
addl
mov
cltd
leave
cmpsb
sub
adcb
in
stc
add
pop
pop
add
std
ret
add
out
add
adc
mov
int
mov
pop
pop
test
aam
popa
xchg
popa
xor
dec
or
mov
fdivs
pop
or
sahf
add
test
jo
aad
pop
add
push
jmp
mov
sbb
call
and
mov
or
ljmp
jb
inc
or
int
aad
fstpl
outsb
outsl
dec
mov
add
orb
orb
inc
addr16
popf
cmpsl
loope
inc
add
outsl
out
maskmovq
testl
insb
daa
pop
cwtl
adc
add
push
fcompl
stos
mull
cli
jecxz
push
pusha
cmp
cmp
in
add
jg
and
lock
or
adc
mov
divl
xchg
scas
cli
add
addl
mov
add
xchg
rcrb
add
inc
xchg
xorb
add
jae
add
lock
hlt
aam
push
mov
xor
ss
icebp
or
stc
or
mov
xchg
popa
bound
outsl
jne
cmp
adcb
adc
loop
jns
push
and
jecxz
and
out
push
pusha
pand
fcoml
in
mov
rorb
adc
testl
xlat
add
mov
sbb
add
into
les
add
fwait
lret
pop
mov
mov
sarb
enter
dec
push
and
lock
in
orb
and
in
test
dec
ret
jnp
jbe
sahf
out
int3
add
adc
add
jns
dec
stos
mov
in
sti
add
sbb
leave
or
out
mov
lahf
mov
sub
sbb
mov
test
or
add
cwtl
rorb
je,pn
jo
jl
pop
add
jle
arpl
ds
push
adc
adc
mov
add
fstps
in
out
jb
fs
ds
add
fisubl
scas
out
mov
push
outsl
mov
mov
xchg
lods
dec
and
add
adc
sbb
pop
jg
push
lock
loopne
inc
in
mov
into
int
das
push
add
sub
xchg
mov
bound
or
scas
lock
push
loopne
dec
cs
aaa
test
test
pop
adc
shrl
add
mov
loope
lock
adcb
in
inc
hlt
outsl
adc
sbb
mov
sti
jg
add
and
in
add
add
out
pop
cmpl
inc
int
call
and
mov
add
dec
ja
lods
orl
pop
movsl
add
fistps
push
jbe
testl
mov
mov
addl
nop
mull
ss
insb
leave
cli
inc
pusha
test
add
test
outsb
mov
in
and
xchg
mov
and
dec
mov
popw
cltd
loope
fists
addl
sbb
or
add
pop
repnz
add
xchg
loope
or
gs
ljmp
in
addb
in
or
jg
les
cmp
addb
rolb
rcrb
inc
dec
jge
shl
jb
dec
nop
icebp
jns
add
or
push
and
push
inc
stc
mov
sub
mov
cwtl
roll
add
mov
inc
xor
push
sbb
out
cld
sti
or
rcrb
jmp
push
repnz
pop
mov
add
sbb
jno
add
out
mov
in
jmp
std
inc
jp
push
mov
mov
sub
rorb
loop
fisubrl
insl
frstor
fs
add
sub
gs
test
xor
adcb
or
hlt
fcomps
or
push
mov
outsb
pop
pop
and
fisubrs
fnstsw
bound
mov
idivl
jae
sub
mov
outsb
lret
mov
dec
push
ja
aaa
pusha
aad
je
sbb
mov
arpl
inc
outsb
je
mov
adc
add
jb
sub
cmp
in
add
shrl
mov
or
subb
add
add
push
jmp
sbbb
or
sub
popa
inc
mov
xor
js
jne
lods
add
cmp
dec
add
or
push
xchg
xchg
mov
pop
mov
mov
imul
or
mul
sbb
sbb
and
sbb
jo
sbb
sub
js
sbb
das
xchg
xor
inc
std
ss
xor
inc
xor
and
dec
mov
cltd
or
cmp
adc
and
dec
push
popa
sub
or
xchg
dec
and
and
or
or
fsubrs
outsb
jne
insb
popa
sub
bound
filds
je
add
cmp
enter
xor
inc
or
xchg
add
je
inc
adc
je
inc
insb
mov
adc
inc
push
repz
sub
movsb
dec
add
mov
pop
loopne
or
test
push
jne
loope
push
add
movsb
cmp
pop
imul
adc
add
gs
add
lods
adc
stc
mov
or
stos
lea
adc
and
pop
les
dec
lock
bound
sbb
cwtl
sbb
jno
subb
mov
clc
jo
pushf
jns
adc
jle
sbb
or
mov
cltd
fisubrl
in
cmp
adc
sub
sbb
push
xor
mov
lahf
dec
mov
jae
inc
ljmp
insb
inc
inc
mov
add
jae
popa
addr16
outsl
js
xor
push
fbld
and
or
aaa
fs
outsl
pop
push
insl
mov
sbb
test
fs
xor
or
or
jb
je
or
loopne
add
int3
outsb
push
or
popa
pop
outsl
xor
push
outsb
popa
addr16
mov
push
push
cmp
dec
call
add
jbe
or
inc
lcall
jae
outsl
outsb
pusha
aad
push
fisttpll
addb
dec
inc
cmp
push
cmp
xchg
adc
push
add
test
cltd
xor
cmp
jns
mov
adc
lds
sbb
push
lock
divb
push
imul
cmp
dec
shlb
sub
aaa
xor
and
adc
jp
dec
xchg
jns
ret
and
imul
mull
sub
adc
daa
mov
pop
pop
xorl
mov
in
sub
sub
mov
mov
daa
xchg
pop
jne
inc
sti
fs
stos
imul
mov
push
push
idivl
dec
mov
push
adc
push
sub
xor
push
outsl
dec
iret
outsb
je
inc
jns
xchg
cs
or
lods
enter
dec
push
dec
cwtl
les
add
mov
or
xor
stos
dec
push
inc
push
or
push
movsb
sub
shr
mov
push
or
or
inc
mov
or
jae
xor
adc
adc
inc
xor
filds
inc
repz
push
sub
sbb
and
and
sbb
lods
test
jns
nop
ret
nop
pop
push
jmp
sub
dec
xor
aas
inc
jne
cld
outsb
movsl
in
or
mov
dec
cmp
dec
sbb
dec
popa
or
cmpsb
movsb
imul
gs
push
jp
rorb
leave
add
jmp
loope
ror
push
lea
loop
adc
adc
stc
or
adc
push
cld
xchg
out
out
arpl
adc
sub
int
repz
dec
pop
je
adc
push
jne
pop
rclb
insl
sub
jns
inc
push
push
mov
mov
mov
xchg
sbb
dec
push
xchg
dec
sbb
jnp
xor
movb
rcrl
arpl
push
sbb
cmp
sub
add
enter
and
or
jo
adc
adc
scas
and
roll
cmp
jl
or
and
push
sub
hlt
outsb
mov
ret
adc
dec
repnz
inc
dec
bound
add
and
mov
nop
push
jbe
adc
add
icebp
fwait
ror
movsl
adc
or
aad
add
fstpt
xchg
fcomip
sub
jo
mov
mov
xor
lock
dec
pop
sbb
and
or
inc
pop
push
push
mov
xor
roll
dec
cmp
xcrypt-ctr
cmpsl
pop
push
mov
sbb
push
add
push
cs
out
std
dec
add
decb
dec
jo
sbb
ret
mov
and
icebp
out
cmpl
add
test
aas
or
mov
mov
popf
std
xchg
add
jge
pop
mov
add
aas
outsl
fisubs
ljmp
lahf
test
rcll
loope
lock
push
pop
mov
cmp
cmp
int
sbb
imul
add
jmp
out
out
cmp
add
push
mov
add
mov
mov
sti
loope
jno,pt
add
xor
add
xchg
push
sbb
jnp
xchg
int
loope
icebp
popa
stos
pop
mov
push
sti
jb
add
lret
push
pop
add
add
movb
outsb
mov
movsl
sbb
pop
fmuls
dec
daa
add
and
sarb
add
cltd
sahf
mov
cmpsl
inc
mov
xor
push
loopne
in
add
dec
xchg
in
and
pop
dec
add
push
xchg
in
pop
pop
mov
add
out
add
movsb
dec
jle
cmpsl
mov
jg
in
sahf
lahf
dec
push
or
add
rolb
hlt
add
adc
mov
xor
sub
jae
push
insl
push
out
mov
dec
push
sahf
stos
lds
sub
add
xor
rolb
adc
fstpt
cld
std
sub
pop
xor
data16
popf
fwait
in
cltd
jne
add
mov
add
scas
xor
cmp
cwtl
sbb
fdivl
addl
cltd
mov
addr16
cmp
test
pushf
mov
xor
lahf
cmp
jo
fldcw
inc
push
stc
mov
js
add
mov
fdivr
dec
add
aam
adc
push
push
mov
dec
and
sub
or
and
push
add
mov
popl
in
inc
cmp
or
in
daa
jne
push
rolb
and
sub
repnz
inc
xor
mov
add
stos
sub
scas
hlt
ret
jo
push
sbb
sbb
sbb
dec
es
jp
and
aas
add
into
repnz
adc
popa
mov
pop
pop
leave
insb
sbbb
mul
lahf
cmp
loope
push
mov
add
jle
cwtl
lds
test
adcb
push
dec
jbe
add
mov
lea
sbb
and
add
int3
cmc
jl
adc
ss
add
jge
mov
push
mov
stos
aam
push
addr16
sub
pop
and
cmp
sbbb
push
iret
push
lret
add
and
jns
pop
andl
jo
cmp
adc
loop
mov
xchg
rcl
pop
ds
repnz
jg
or
shll
mov
push
test
xchg
inc
add
pop
pop
adcl
shlb
add
inc
jp
imul
add
or
aas
stos
ror
aam
imul
xorb
add
dec
es
dec
test
jo
popa
mov
pop
mov
and
aad
in
xor
and
or
ja
add
std
aad
add
cwtl
jno
add
dec
cmp
add
sti
sub
ds
add
imul
cld
bound
mov
hlt
js
push
shl
mov
andl
es
add
in
xor
push
loope
rorb
enter
add
or
mov
add
clc
jne
add
int
and
aas
addr16
and
andb
push
add
mov
jl
nop
cmpsb
jns
dec
in
sub
rolb
aad
jecxz
pop
dec
xor
push
jbe
jb
push
arpl
stos
inc
lock
mov
add
xor
adc
pop
call
jecxz
pop
mov
scas
add
mov
and
aad
arpl
clc
mov
loope
mov
sub
and
arpl
add
roll
jns
mov
mov
out
mov
sbb
pop
mov
in
sub
mov
lcall
dec
pop
arpl
insl
lock
mov
add
add
int3
jbe
jle
add
aaa
addb
fnstsw
add
sub
add
jp
mov
in
pop
sbb
aaa
cmpsb
adc
sub
cld
sbb
push
add
iret
mov
push
neg
testl
out
jecxz
repz
clc
sarl
add
les
call
fcmovbe
xchg
mov
pop
cmp
gs
fsubrl
sahf
out
jmp
xchg
pop
jo
pushf
sbb
dec
out
jmp
cmp
scas
subb
add
push
jae
mov
add
xchg
push
cltd
sbb
add
test
sbb
pop
fadds
adc
mov
mov
mov
lret
insb
pop
dec
push
fimuls
and
dec
sbb
add
insl
inc
mov
cmp
cmc
push
aas
mov
inc
xor
xchg
repz
clc
aam
and
mov
cmp
xor
add
and
adc
outsb
mov
inc
push
aam
push
mov
repz
mov
jnp
or
xor
mov
add
mov
adc
ja
add
adc
sub
arpl
add
sub
add
jge
sbb
or
imul
fildl
lcall
or
lock
imul
insl
arpl
filds
fmul
dec
jnp
pop
lahf
add
fadd
insb
aas
lods
xchg
add
add
pop
sub
xor
adc
dec
and
in
sub
and
jae
cmp
outsl
sub
mov
mov
popf
and
add
add
imul
out
movsb
or
add
jp
sub
ja
add
push
sbb
and
icebp
mov
add
cmpsl
sbb
cli
sbb
adc
roll
or
sti
sbb
lock
and
add
aaa
rorl
add
push
fsubl
mov
mov
sti
jbe
inc
cmp
in
inc
addb
add
imulb
gs
mov
push
add
dec
sti
in
stc
add
pop
nop
ret
mov
push
imul
sbb
mov
lds
out
out
jns
loopne
inc
in
jnp
cmp
add
icebp
xor
mov
jecxz
pop
or
insb
into
add
hlt
mov
pop
pop
add
inc
test
cmp
add
pop
test
mov
fs
add
testl
add
shl
jb
mov
imul
stos
adc
pop
fsub
mov
fs
dec
jbe
ja
add
pusha
inc
mov
dec
roll
dec
push
and
push
xchg
push
add
popa
je,pt
mov
stos
dec
push
add
call
enter
in
jle
out
insl
mov
push
add
dec
bound
fwait
mov
jns
mov
imul
shlb
jmp
or
in
in
cli
mov
repz
xchg
jne
pop
jae
or
lcall
imul
jmp
scas
enter
arpl
test
ljmp
xor
mov
or
mov
xor
nop
das
add
cmp
outsb
add
fnstcw
add
insl
sub
xchg
loop
shl
inc
sbb
cmc
mov
and
shlb
mov
inc
scas
and
lret
int
mov
xchg
cli
pop
shrl
dec
adc
rcr
sbb
sbb
pop
cmp
jp
ret
add
xchg
or
inc
xor
mov
mov
aad
pusha
push
cwtl
lods
jne
addb
popa
adc
add
dec
les
pop
add
movsl
adc
movd
cwtl
pop
mov
cmp
cmc
adc
fwait
test
push
dec
neg
xchg
add
fs
pop
xor
xchg
in
xchg
mov
and
bound
movl
dec
jns
add
fdivs
lods
js
add
cmpsl
enter
add
dec
push
pop
mov
ljmp
rcr
mov
add
dec
jb
add
mov
int
pushw
jno
sub
loop
or
pop
inc
add
loopne
add
add
xor
push
repnz
add
aad
mov
mov
arpl
jg
jbe
xor
cmp
call
test
and
mov
mov
mov
shrl
push
jno
sbb
cmp
push
cmovg
popf
dec
xor
jecxz
lods
insl
lock
mov
js
mov
fs
inc
or
jp
push
clc
xchg
sbb
loopne
add
hlt
inc
mov
iret
dec
dec
addr16
outsb
dec
test
inc
mov
pop
jmp
int
push
repz
add
push
sub
add
sub
add
out
pop
add
into
cmpsb
xor
shr
scas
mov
jp
add
mov
cmp
loop
jne
in
call
jg
add
xor
data16
sub
push
xchg
fdivrl
nop
push
fwait
cmp
mov
jno
xorl
sbb
jae
inc
shl
xchg
jp
or
icebp
negb
xor
pop
in
rolb
or
or
enter
mov
pop
add
jne
jge
sub
cmc
in
cmp
pop
xor
cltd
sub
pop
jp
add
scas
loop
addr16
bound
or
add
add
or
fnstcw
or
add
lods
cmp
inc
pop
rolb
pop
mov
imulb
add
mov
push
mov
inc
pop
and
mov
subl
repnz
jno
sbb
inc
sbb
aas
ret
push
pop
sbb
jp
add
xchg
add
addr16
dec
sti
test
cmpsb
adc
fistl
mov
fisubs
jle
jae
cld
popf
mov
and
int
rol
jns
jne
loope
adc
fsubrs
xlat
add
xor
add
pop
mov
cli
inc
lahf
push
push
add
cmp
mov
jae
ror
jl
and
push
int3
dec
fistpl
sti
and
clc
add
aad
bound
ret
add
lahf
and
cmc
xchg
rcr
inc
adc
fldl
std
mov
int3
lods
ljmp
jmp
jns
out
cmp
int3
push
add
xchg
ds
sbb
xlat
sbb
and
iret
add
mov
fs
rclb
aad
js
ror
jnp
add
lret
call
hlt
add
cmpsb
lock
setle
test
add
stos
sbb
mov
scas
cmpl
idiv
add
idivl
rcll
ljmp
sete
lods
mov
das
push
fcomip
js
adc
mov
aam
add
fsubs
repz
orb
cmp
mov
jl
add
mov
ds
pop
push
sti
insb
pusha
cmp
imul
jmp
xor
fcmove
jge
push
xor
aad
scas
mov
cwtl
dec
add
inc
jae
popa
jo
add
outsl
xchg
mov
sub
or
push
inc
jae
sarb
adc
das
xor
and
and
jnp
test
cmp
mov
xchg
daa
add
sarl
movntps
pop
bound
cmpsb
call
clc
movsb
add
insb
lds
mov
add
arpl
pop
xchg
mov
xor
enter
data16
lods
loop
fldt
rclb
movl
cmp
cmp
data16
nop
mov
or
dec
sti
imul
push
jnp
or
ret
pushf
cmp
xchg
in
mov
mov
insb
dec
leave
pop
test
cs
mov
fsubrs
or
stos
add
andb
mov
test
pop
and
dec
outsl
xchg
lret
arpl
jmp
cltd
sti
mov
adc
lock
insl
inc
outsl
sbb
sub
leave
cmp
push
pop
mov
shrb
add
cvtps2pd
jecxz
cltd
insl
shlb
das
sbb
icebp
dec
pop
and
xchg
sbb
add
je
lahf
sbb
or
adc
jno
push
push
xlat
sbb
fimull
push
add
jl
jb
or
pop
hlt
cmp
add
addr16
pop
sbb
cmp
neg
pop
add
sbb
mov
sub
cmpsl
xchg
mov
out
or
mov
int3
jo
cmp
je
add
es
lds
in
pop
pop
int
mov
aaa
add
mov
push
add
xchg
rolb
dec
jmp
ret
loop
push
clc
adc
scas
loopne
adc
pop
push
into
lea
xchg
pusha
daa
stc
inc
and
pop
fcmovb
dec
xchg
sub
sahf
pop
movsb
cwtl
xchg
mov
lea
add
lahf
or
mov
pop
test
inc
sbb
sub
shlb
scas
sub
jbe
add
sbb
rolb
or
xor
bound
and
fstl
lret
adc
jl
sahf
jno
hlt
sub
data16
push
and
jmp
add
or
outsb
add
fnstenv
add
ret
adc
pop
or
ss
add
add
mov
jo
sbb
stc
fisttps
inc
cmp
or
add
fistps
lods
sub
pop
add
dec
push
cmp
lcall
mov
sbb
add
mov
mov
sub
jb
in
xor
xchg
add
repnz
add
ss
fimull
clc
scas
js
gs
jp
xchg
cmpsb
push
dec
add
arpl
sbb
sahf
lock
lds
inc
cmp
add
sbb
fstpl
add
outsb
jge
push
int3
fs
add
pop
or
adc
jp
add
lods
imul
in
add
push
insb
xchg
add
das
pusha
cmp
add
ret
bound
add
popa
pop
mov
mov
pushw
orl
or
scas
testb
outsb
cltd
or
sahf
rorb
mov
pop
icebp
and
popa
push
dec
addr16
flds
cld
nop
cmc
test
jp
dec
pop
iret
jno
pop
pop
out
incb
xchg
popa
push
xor
pop
mov
sti
nop
subl
push
and
mov
pop
add
and
ror
add
add
and
cmp
jae
gs
jb
push
pop
dec
lock
insl
shll
lods
lock
cmp
imulb
adc
sahf
mov
push
add
aas
xchg
push
jbe
in
and
mov
dec
dec
aad
cmpsb
push
xlat
fdivr
adc
jp
and
add
inc
push
mov
insl
rclb
jge
rclb
imul
xchg
faddl
idivl
add
loop
repnz
mov
ja
repz
sahf
notl
add
pop
mov
fcomip
hlt
rcl
mov
jmp
mov
dec
xor
gs
xchg
add
cmp
or
enter
add
adc
stos
mov
mov
icebp
lock
cmp
push
sub
call
inc
clc
repnz
inc
idivl
and
popl
jl
cmpsb
cld
scas
add
addr16
std
fnstsw
aaa
fisubrs
adc
pop
mov
cmpsb
add
out
out
ficomps
add
pushf
dec
jno
fmul
pop
shrb
xchg
add
mov
mov
xchg
dec
inc
sahf
fwait
adc
fnsave
fildll
fnstcw
add
lods
mov
add
fimuls
loope
inc
xchg
mov
add
clc
fdiv
push
js
pop
add
pop
iret
mov
mov
jge
outsl
add
jnp
in
adc
dec
fldt
pop
imul
cmpsl
xlat
lds
add
addr16
sahf
add
in
lods
pop
ja
xor
jne
hlt
add
pop
mov
pop
inc
leave
es
insb
add
pop
je
add
in
add
pop
testl
adc
fwait
adc
pop
out
inc
comiss
inc
ret
pushf
push
cmpsb
add
call
out
gs
inc
rolb
sbb
movsb
jnp
cmpsl
inc
xor
push
sbb
incb
dec
stos
out
push
cli
jmp
mov
xchg
add
ss
rcrl
and
addl
stos
stc
addl
add
lcall
sbb
roll
mov
movsb
mov
pop
scas
jg
int3
test
lcall
ja
subb
push
xlat
xchg
test
inc
inc
mov
test
bound
rcrb
cmp
cltd
sbb
add
mov
sub
dec
add
add
xchg
lods
lcall
adc
mov
stos
push
jecxz
ds
outsb
dec
pusha
fbstp
dec
add
fwait
cmpsb
frstor
aaa
rcl
andb
add
jns
aas
lods
shrb
js
add
mov
cwtl
ret
mov
pop
jecxz
in
out
fisttpll
sbb
mov
outsb
sahf
addb
popf
jnp
cmp
and
sarb
add
enter
add
je
test
dec
shrb
inc
dec
push
or
and
cli
xor
lods
pop
mov
cmc
sbb
inc
out
fildl
add
mov
push
xor
dec
add
inc
and
scas
dec
dec
mov
rorl
push
add
imul
cmpb
in
pop
mov
add
movsl
jb
add
outsl
push
xor
lret
cmc
adc
dec
mov
cmpsl
std
push
in
mov
inc
bound
and
scas
dec
and
arpl
add
pop
jb
js
pusha
xchg
sub
and
inc
hlt
add
push
push
pop
cli
les
pusha
fs
int
fsubl
nop
mov
or
push
outsb
cmp
mov
pusha
push
or
mov
xchg
add
xor
sub
mov
push
add
jmp
sbb
sbb
rclb
or
xchg
push
arpl
insb
mov
shlb
and
out
xor
rcr
mov
pop
xor
jb
add
popf
flds
int3
jnp
add
iret
test
mov
shll
add
adc
in
cmp
mov
add
dec
mov
fisubrl
cmp
and
pusha
push
or
xchg
pslld
xor
orb
pop
fldcw
dec
fwait
push
scas
pop
add
jl
stos
sysenter
adc
jle
ljmp
data16
xor
adc
rolb
or
or
mov
push
retw
mov
adc
fnstcw
mov
xorb
sbb
cmp
mov
divl
add
fisttps
add
test
inc
mov
or
mov
push
add
les
or
add
push
dec
addr16
and
add
repz
cwtl
add
rorl
jo
mov
arpl
inc
rcl
enter
sbb
rorl
or
jl
add
jle
push
mov
jmp
add
xchg
cmpsl
jne
add
push
mov
lods
imul
add
or
ficoms
inc
lock
sub
call
push
cmp
fcomps
int3
sahf
aad
in
int3
adc
lods
xor
xchg
mov
push
sbb
push
test
dec
and
mov
add
or
adc
push
mov
sub
add
add
clc
xchg
in
fcomp
add
push
pop
stc
sub
and
dec
jnp
mov
add
mov
mov
and
adc
sub
roll
pop
push
rcll
xor
cmp
jae
pushf
cltd
inc
out
pop
pop
add
arpl
and
push
bound
jno
mov
je
add
sbb
cmp
xchg
add
push
lcall
xchg
mov
clc
lods
sti
repz
sahf
mov
mov
outsb
inc
xchg
xor
loopne
push
mov
lock
inc
add
push
icebp
dec
inc
test
movsl
sbb
test
mov
mov
sub
push
aas
test
add
iret
aam
pop
fcmovne
lock
and
push
out
cmp
pop
ljmp
test
fsubs
test
aas
cmp
popl
pop
cmp
inc
and
dec
popa
add
into
xor
mov
mov
mov
lret
je
ljmp
mov
jb
xchg
jae
sub
sbb
mov
add
pop
add
mov
rcr
fs
add
xchg
lea
mov
sub
int
add
mov
leave
xchg
inc
dec
add
rcrl
scas
jg
fistl
cmpsb
mov
cli
push
and
xor
jno
aas
mov
call
fs
mov
stos
inc
cmpsb
out
pop
push
stos
lods
jl
add
clc
andl
ss
stos
add
es
nop
icebp
add
push
pop
xchg
xor
test
dec
sarl
js
mov
dec
xor
mov
and
adc
add
fstpt
je
sahf
gs
das
xchg
lcall
outsl
xchg
sbb
pop
fsubrl
aaa
cmpsb
shl
sbb
outsl
and
adc
xchg
out
fs
sahf
pop
dec
stos
cmp
lret
jnp
arpl
loop
movl
dec
sti
push
dec
xor
arpl
dec
fldenv
enter
dec
std
cmp
stos
mov
push
add
dec
test
mov
xor
or
pop
insb
inc
push
xor
pop
or
sti
ja
mov
ret
xor
jne
fistpll
adc
mov
in
adc
aad
mov
cmp
pop
in
inc
inc
add
into
cmp
pop
sub
sbb
adc
in
jns
adc
pop
add
ss
pop
add
push
adc
bound
stos
arpl
loope
aam
std
add
out
test
dec
add
push
pusha
hlt
sbb
out
add
stos
mov
dec
sbb
ja
pop
loopne
push
pop
lret
mov
add
sbb
cwtl
xor
rorb
sub
fcomps
gs
xchg
rep
scas
add
nop
sbb
push
add
cltd
and
mov
xorb
mov
jnp
push
int
imul
push
in
test
mov
push
sbb
lods
out
jl
je
int
icebp
adc
addr16
adc
scas
jge
cmp
push
loop
add
xchg
fldt
out
sbb
fwait
pop
repnz
aas
jp
addb
mov
sbb
xlat
cld
sbbb
xor
cld
icebp
cmp
adc
jmp
push
xchg
test
adc
xchg
sbb
jb
and
or
and
jno
lock
in
fsubs
int3
inc
shlb
dec
push
add
arpl
addr16
insb
insl
outsb
outsl
jo
jno
jecxz
add
js
jp
xor
xor
xor
cmp
daa
push
loope
add
pop
stos
ret
lea
into
sub
lds
pop
int3
and
inc
and
add
loop
xchg
sub
sbb
shrl
lahf
outsl
xchg
sbb
jbe
test
mov
enter
movsl
xor
or
or
push
loopne
loopne
mov
test
adc
or
aaa
dec
cmovno
sub
or
dec
or
push
pop
push
push
push
push
and
ljmp
push
shll
push
addl
dec
test
add
add
add
push
mov
lcall
sbb
sbb
sbb
sbb
sbb
sbb
inc
insl
push
sahf
fiaddl
push
add
push
pop
or
sbb
jle
jle
push
pusha
je
fnstcw
push
aam
push
fcomp
rcr
cltd
add
adc
inc
rcpps
aas
cmpl
cmp
cmp
cmp
cmp
aas
aas
jg
and
lea
hlt
xchg
push
cld
push
sbb
adcb
pop
lock
adc
add
fwait
mov
jl
or
outsl
and
mov
xchg
dec
dec
adc
push
sbb
mov
call
lret
test
adc
adc
clc
out
mov
add
sbb
sbb
out
jo
add
add
or
push
cmpsb
add
sub
push
xor
jo
add
push
aaa
pop
sbb
inc
pop
dec
push
cs
fistpl
lret
add
es
adc
pushf
add
inc
push
daa
inc
dec
adc
mov
into
or
sbbb
iret
scas
sbb
test
rol
pop
ret
cmpsb
int3
ret
shl
bsr
mov
inc
outsl
loopne
pusha
dec
loopne
jo
jnp
into
enter
xor
xor
subb
int
out
rorl
ret
fnsave
int
mov
lea
je
cld
into
add
sti
add
add
lret
add
enter
or
or
addb
ret
or
ret
out
push
loop
adc
mov
fistpll
mov
enter
das
ret
ljmp
dec
add
add
adc
push
test
cs
or
pusha
dec
or
add
enter
lock
add
inc
aad
cli
and
jo
sbb
scas
fucomi
add
in
xchg
clc
push
insb
add
cmp
xor
sub
mov
clc
or
add
sub
sub
jno
cmp
mov
incl
sub
cmp
clc
lsl
or
inc
sub
sbb
sbb
jns
pop
sub
mov
xor
adc
inc
adc
xor
mov
sbb
sbb
mov
aas
in
sbb
inc
push
aaa
das
sub
out
and
push
sbb
sbb
cmp
cmp
inc
addb
sbb
inc
mov
jae
popa
cmpl
lock
cmp
les
mov
mov
adc
add
mov
imul
mov
jnp
in
ret
mov
andb
and
addl
adc
ss
push
sbb
sbb
repnz
and
test
icebp
imul
add
add
adc
sbb
add
sub
aam
add
cmp
fcmovbe
ret
add
iret
fsubl
push
mov
jmp
sbb
data16
stos
inc
lret
or
daa
nop
fwait
cmovo
cmp
add
pop
leave
mov
xor
cmp
cmp
cmp
cmp
rdpmc
xchg
mov
ret
pop
xor
mov
shr
out
jb
je
jbe
js
sbb
aaa
adc
fwait
push
stos
lahf
lds
testb
inc
data16
stos
cmpsl
mov
loope
cmp
cltd
shll
call
je
jbe
js
jp
sbb
cmp
popf
dec
sbb
sarb
cmp
mov
mov
rcr
jecxz
lock
mov
xchg
lock
hlt
leave
clc
cld
or
dec
in
call
or
aas
imul
jmp
xchg
hlt
dec
or
cmp
je
xchg
in
mov
out
clc
adc
xor
cmp
mov
cmp
fdivrs
in
push
pop
xor
push
loope
jmp
mov
lret
cld
mov
daa
popf
xor
mov
xor
push
mov
lds
mov
xchg
fsts
test
repz
lock
dec
in
call
cmp
ret
insl
mov
or
ds
sarb
cmp
cmp
imul
fstpt
clc
push
or
pop
dec
aaa
mov
iret
push
punpcklwd
popl
mov
ret
and
xchg
decb
insl
dec
cmp
cmpsb
es
jg
mov
cld
in
or
aas
popa
cmp
jp
cmpb
aas
enter
je
mov
jns
adc
inc
xchg
dec
cmpsl
fcoms
mov
pop
xor
test
fstps
mov
mov
jl
jle
jle
jle
sbb
aaa
setge
pop
sbb
sub
dec
inc
pop
mov
mov
mov
cmp
je
jbe
push
sbb
rorl
ds
aas
jmp
mov
sub
cmp
jge
dec
dec
pop
pop
dec
mov
in
xchg
pusha
cld
lock
xor
call
add
xor
cmp
cmp
jo
jl
jle
sbb
xor
popf
addr16
or
inc
cmpsb
dec
push
push
lahf
mov
ss
xchg
insb
xorb
loopne
cmp
cmp
dec
inc
push
cmp
cmp
cmp
push
or
cmpsl
adc
subl
add
hlt
pop
shll
dec
fsts
addr16
cld
stos
cld
and
xor
cmp
pop
cmp
cmp
rorl
add
mov
cmp
pop
bound
xor
iret
out
incl
xor
cmpsl
pushf
xchg
mov
out
out
out
loope
xor
dec
ss
je
jbe
js
jge
jg
je
dec
out
cmp
cmp
and
xor
and
xchg
cli
add
ror
jecxz
repz
repz
sbb
and
in
shl
add
call
hlt
push
push
cmp
adc
jmp
outsb
stc
cmpsb
stc
mov
sar
cmc
clc
es
jbe
js
jp
jl
jle
jle
sbb
sbb
sub
xor
daa
pop
inc
lahf
dec
lahf
push
lahf
push
xchg
cmpb
and
jl
test
and
jb
je
jbe
js
jp
jl
sbb
xor
dec
adc
test
push
mov
push
mov
ss
ja
js
cmp
incb
adc
sbb
popa
enter
jmp
xor
xor
cmp
cmp
inc
stc
inc
stc
dec
stc
dec
stc
push
stc
push
stc
pop
stc
pop
stc
pusha
stc
fs
push
stc
je
or
jb
je
jbe
dec
sub
jp
cmp
inc
jle
jle
jle
push
fcoms
shll
js
jp
jl
push
rcrb
cld
loopne
in
call
je
sub
pop
fidivl
push
inc
lahf
inc
pop
dec
lahf
push
lahf
pop
lahf
push
lahf
je
js
jl
sarb
fsubs
in
in
xchg
cs
mov
xchg
rorl
pop
bnd
xor
lods
sti
test
add
dec
mov
pop
mov
adc
cmp
lahf
dec
shl
insl
out
cs
add
xchg
adc
inc
push
adc
inc
or
mov
or
and
inc
lock
addl
add
and
push
dec
inc
push
dec
pusha
dec
xor
cs
loopne
call
dec
popa
outsb
sbb
add
xchg
je
int3
imul
fidivs
orl
push
shlb
outsl
cmp
outsb
lock
ficoms
mov
cmp
xor
es
insl
xor
subb
inc
outsb
jbe
cmp
insl
mov
push
popa
mov
orl
jne
inc
pop
dec
popa
insl
xchg
adc
aaa
mov
add
xor
push
push
pop
jp
insb
jne
dec
outsb
data16
mov
inc
dec
sub
jae
inc
mov
jns
sub
fidivl
sbb
lea
jae
scas
leave
xor
or
inc
dec
rorb
push
xchg
dec
jbe
push
fs
dec
push
out
mov
lahf
inc
mov
sub
add
sub
cs
jp
jo
leave
iret
or
cld
push
jmp
xchg
adc
dec
xchg
int3
outsb
jb
sahf
and
and
adc
adc
jne
push
push
js
inc
add
das
inc
jb
insl
mov
push
sbbl
cmp
addr16
lret
je
cltd
insl
dec
.byte
.byte
xchg
jmp
mov
push
jmp
or
add
and
loop
add
push
sub
pop
jmp
jnp
add
and
mov
add
and
xor
adc
sub
jmp
int
xor
neg
add
jmp
incl
xor
add
add
out
negl
or
add
and
dec
jmp
sub
shlb
out
add
pop
xor
inc
or
inc
and
sub
sub
jp
sbb
sbb
cld
mov
jns
shrl
mul
xchg
out
push
push
or
or
test
enter
les
jo
add
lahf
xor
fimuls
cwtl
outsb
xchg
adc
aad
movzbl
jmp
aad
out
in
push
cwtl
inc
in
push
lds
jmp
pop
and
or
scas
les
pop
in
int3
push
xchg
jp
int3
mov
outsb
and
dec
sti
pop
leave
xchg
xor
ret
inc
jl
test
cld
sbb
or
shlb
fimuls
mov
cmp
addr16
mov
pop
cmp
rolb
lods
cmp
fistl
push
inc
imul
add
add
shlb
into
popa
add
add
add
shlb
into
popa
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
