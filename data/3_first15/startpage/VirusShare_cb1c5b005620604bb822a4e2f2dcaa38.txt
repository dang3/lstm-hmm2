mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
cmpsl
jle
pop
imul
xchg
sbb
or
sub
jbe,pt
stos
adc
jno
mov
aas
push
xchg
add
std
adc
pushf
cwtl
cmp
mov
jmp
pop
daa
test
dec
and
mov
xor
mov
inc
inc
in
push
mov
pop
dec
ficoms
fdivr
cmp
mov
dec
cmp
cld
mov
cmp
mov
aaa
cmc
ja
mov
inc
sub
je
push
cli
imul
test
add
ljmp
fcmovnu
in
mov
and
mov
or
dec
push
fcomi
repz
repnz
js
mov
js
fmulp
aam
daa
jno
and
dec
inc
mov
push
sar
aaa
outsl
mov
jne
add
sub
jl
and
loope
jge
dec
mov
cwtl
adc
cmpsb
out
out
and
jbe
xor
add
fcom
or
daa
repz
jb
std
jns
xor
xor
into
std
jg
sub
push
fwait
sub
das
dec
scas
cmpsl
shrb
imul
fdivl
pusha
insl
test
cmovle
and
mov
insl
lods
push
mov
mov
sahf
stos
push
dec
pop
pop
dec
sbb
stc
mov
sbbb
sbb
shl
insb
mov
or
es
mov
aaa
xchg
xchg
lock
push
cmp
cli
in
and
imul
jns
mov
leave
roll
push
fs
into
pop
xchg
repz
loop
int
mov
jle
or
pop
pop
adc
out
jl
loope
xor
inc
dec
mov
repz
stos
imul
mov
inc
out
scas
push
jb
push
xchg
mov
dec
mov
pop
xchg
xlat
gs
add
in
test
xor
dec
inc
repnz
outsb
or
dec
jecxz
test
sbb
insb
cs
into
xor
inc
out
loope
jo
rcll
ret
xchg
lret
ljmp
jmp
and
rol
add
inc
lods
out
lea
sbb
or
fcoms
jo
dec
mov
add
mov
jbe
inc
icebp
pop
cmc
ss
add
cmp
mov
xor
or
push
movsb
jecxz
jmp
sbb
jns
pushf
cwtl
xchg
cmp
call
xchg
or
inc
call
test
lret
push
mov
or
pop
jmp
pop
mov
pop
add
repnz
pop
mov
ror
cmp
xchg
push
mov
ficompl
sub
sub
mov
je
pop
negb
cmp
fs
mov
repz
pop
adc
loop
mov
daa
mov
lock
test
inc
insb
outsl
ficoml
cmp
mov
add
and
lret
test
pop
or
cltd
shlb
faddl
xchg
add
mov
mov
jecxz
or
xchg
xchg
sbb
push
andb
inc
dec
xchg
inc
das
xchg
gs
fisttpl
or
and
fldcw
xor
test
mov
les
fidivrl
mov
pop
data16
sub
imul
pop
lock
arpl
sub
out
sbb
cmp
mov
scas
popf
outsl
stc
sub
and
pop
mov
adc
jnp
mov
rcll
push
notb
js
test
xchg
pop
mov
xor
mov
jne
sti
push
cmpsb
pop
imul
jp
mov
loopne,pn
pop
or
add
fisubl
cmp
add
xchg
lret
lea
lds
xchg
and
les
cltd
mov
incl
orl
fwait
cmc
hlt
push
loop
mov
cld
adc
inc
lahf
or
cmp
jp
inc
cmp
adc
paddd
jl
sub
frstor
movsl
jb
fwait
outsl
inc
scas
mov
addb
or
cmp
cmp
xchg
ds
repnz
mov
fcoms
cmp
insb
mov
lods
in
dec
testb
inc
imul
xchg
fsubrs
je
jl
push
sbb
xorl
into
lret
outsl
ret
repnz
aam
cvtps2pi
jg
or
xchg
mov
dec
mov
rcll
xchg
aas
lcall
xchg
xor
mov
push
sub
xor
inc
inc
outsl
cmp
loopne
out
imul
pop
out
xor
test
pusha
mov
stos
mov
and
rcrl
ljmp
cmp
xchg
stos
xchg
aaa
mov
cmp
sbb
mov
outsl
and
cmp
imul
inc
mov
sti
sub
mov
cmpsb
mov
sti
cmp
imul
dec
xchg
cmpsb
daa
jne
cmp
sub
mov
outsb
fnstcw
imul
mov
cs
cltd
cs
fisttpl
cltd
jb
js
inc
flds
hlt
cwtl
fs
ss
imul
stos
outsl
and
fistpl
sub
fs
add
dec
mov
and
ficomps
xor
and
inc
mov
pushf
outsl
out
popa
js
pop
and
mov
push
jg
jle
xchg
dec
push
pop
push
cli
fstp
lods
repnz
stc
les
xchg
jp
insl
in
outsb
leave
iret
clc
dec
js
dec
jb
icebp
lods
mov
clc
insb
pop
rcr
push
mov
shll
testl
addb
fstpl
lret
mov
ds
jmp
push
mov
out
and
cmp
mov
daa
lods
push
ljmp
push
ret
sub
daa
notb
inc
jne
lock
mov
inc
push
mov
pop
inc
bound
sahf
push
lcall
lods
test
push
cmp
out
jbe
dec
or
jp
xor
or
iret
mov
inc
mov
push
xor
lahf
jge
dec
mov
arpl
sub
data16
inc
inc
pop
cmpsl
mov
ret
stc
loop
pop
or
mov
imul
hlt
mov
loop
loopne
xchg
xchg
push
ja
or
mov
ret
push
sbb
test
cwtl
out
xchg
mov
and
loop
fists
jle
push
stos
dec
movsb
rcl
sbb
dec
lcall
js
mov
and
push
popf
push
jle
outsl
movsl
or
pop
pop
fnsave
inc
inc
pop
les
pushf
test
dec
xchg
cmpsb
movb
fisubrs
out
pop
outsb
mov
ret
mov
out
enter
sbb
jge
test
pop
dec
cmpsb
jge
bound
cltd
lds
jle
sbb
mov
push
dec
ret
and
mov
bswap
js
add
cs
pmaddwd
sarb
adc
or
stc
movsl
testb
adcl
xor
sti
and
or
mov
test
mov
ret
fcomip
test
out
mov
inc
mov
call
sub
cmp
cld
and
adc
loope
rolb
sub
sbb
push
push
call
xchg
outsl
sahf
adc
shlb
dec
sub
fwait
pop
jmp
xor
in
push
insb
sub
movsb
cwtl
inc
sahf
push
sti
adc
push
stos
xchg
xor
and
push
jae
ja
lea
insb
popf
add
nop
xorb
cmc
je
das
lea
mov
fimuls
adc
aaa
and
mul
dec
movsb
mov
cli
iret
icebp
mov
loope
popf
adc
or
pop
sbb
inc
lahf
aad
in
mov
test
int3
jle
push
inc
mov
shlb
jecxz
xchg
aad
pop
je
cmp
sbb
bound
movsl
ret
or
shlb
lea
js
shll
dec
mov
iret
sbb
push
stos
decb
push
fucomi
inc
dec
adc
das
jo
imul
stc
dec
jecxz
shl
lcall
fisubrl
pop
into
les
pop
xor
cmp
lahf
rcr
fimull
sbb
mov
ljmp
adc
mov
fidivrs
aam
cltd
call
mov
add
add
mov
pop
repz
call
mov
fmull
xlat
data16
cli
adc
or
jb
mov
mov
fs
xchg
pushl
rcrb
je
rcll
sbb
fsubl
sbb
mov
test
pop
adc
jb
out
clc
and
cmp
mov
outsb
jecxz
jmp
xor
push
push
jecxz
into
inc
and
mov
aas
bound
adcb
and
pop
cld
idivl
shr
stos
pop
ljmp
popa
daa
mov
adc
shrb
nop
mov
ja
jbe
test
pop
out
enter
cmp
and
jb
aam
pop
adc
push
fwait
mov
into
call
mov
xchg
xlat
fs
or
dec
andl
dec
ss
cli
xchg
scas
mov
and
stos
inc
cld
movsb
xorb
movsl
insl
push
push
push
roll
cld
test
mov
sub
pusha
cmpsl
pop
movhps
sbb
imul
inc
fisubl
hlt
movsl
and
das
cmp
push
outsb
add
add
es
mov
xchg
addr16
cmp
cmp
adc
pop
and
mov
push
cmp
nop
bound
dec
nop
jne
mov
dec
dec
repnz
and
and
xor
mov
pop
scas
mov
test
cmpsb
aad
and
add
mov
add
iret
cmp
inc
loope
ror
jp
jo
int
dec
sub
iret
push
fcomps
sbb
dec
xchg
fistpll
cmp
mov
pop
sub
mov
loop
or
jns
jnp
pop
ret
xchg
arpl
jl
aas
test
ret
popf
data16
add
loope
pop
sbb
lock
xchg
dec
sub
pop
and
sub
daa
out
shlb
bnd
lds
mov
mov
cli
out
into
xchg
mov
sbb
dec
mov
dec
jae
pushl
xchg
dec
and
and
les
bound
jle
inc
test
pushf
cmp
out
sahf
insb
sub
cmp
ja
dec
iret
in
mov
and
jmp
push
mov
imul
jl
or
push
pop
rep
into
fstl
pop
bound
dec
or
std
out
inc
mov
outsb
mov
mov
push
xchg
lods
aad
sub
add
xchg
mov
cmpsb
or
stc
outsl
mov
pop
xchg
xor
mov
outsb
test
mov
cmpsl
xchg
repnz
add
ret
mov
cmp
sbb
rcll
insl
mov
repnz
jge
popa
ldmxcsr
loopne
ss
pop
aaa
add
jecxz
shlb
sbb
mov
xor
movl
sub
in
cmc
jbe
shlb
or
mulb
test
inc
or
mov
or
xor
sbb
inc
lahf
aaa
pop
jae
call
pushf
bound
scas
inc
iret
jmp
aaa
clc
nop
fwait
pop
repnz
push
pop
lahf
inc
mov
mov
orb
cmp
stos
mov
sbb
cmp
dec
mov
rcll
insl
dec
mov
push
insb
outsb
in
clc
in
or
ljmp
fsubrp
fwait
sahf
xchg
std
lods
mov
loope
insb
sti
xor
sbbl
sub
pusha
negl
mov
cmpsb
sbb
adc
decl
imul
in
ds
rclb
dec
cmc
andb
movsb
sbbl
es
mov
popf
xchg
lods
enter
fcomps
xchg
sbb
loopne
add
jnp
adc
mov
imul
inc
pushf
pop
div
jns
pushf
cmp
mov
stos
popf
lods
fnstsw
sub
movsb
ja
pop
add
je
mov
push
xchg
mov
loope
mov
push
mov
divb
pushf
adc
fsubrs
test
jnp
test
pusha
pop
cs
int
jbe
inc
inc
and
push
sub
dec
mov
fisttpl
xor
add
mov
into
test
fcmovu
stc
repnz
out
mov
dec
push
push
cmp
cmp
push
insl
in
mov
pop
dec
and
aad
sub
mov
fldenv
mov
sub
mov
sbb
push
inc
daa
fisubrl
inc
push
sbb
fsubs
sub
xor
sbb
enter
sub
outsl
std
sbb
dec
fstpl
or
cmp
sahf
adc
out
ret
sahf
sbb
gs
jge
test
das
push
add
mov
push
mov
or
cmc
test
or
push
adc
fbld
cmp
sbb
clc
sarb
xor
pop
or
mov
pusha
push
ret
xchg
push
loop
push
movsl
mov
push
sbb
jp
into
jns
jae
dec
and
enter
cmp
aad
negb
lock
pop
rclb
mov
jns
mov
clc
je
inc
mov
cmpsl
adc
pusha
outsl
xor
neg
inc
inc
in
pop
fwait
cmc
jp
test
and
dec
cmp
jb
mov
movsb
stos
inc
lret
es
and
adc
aam
sti
inc
sub
pop
push
fnsave
jne
inc
push
gs
addr16
es
add
int
sbb
clc
dec
ret
sarb
in
test
daa
je
cmp
fisttpl
ret
xchg
repz
mov
addr16
jle
mov
sbb
fwait
xchg
or
shr
dec
iret
mov
dec
sbb
mov
out
mov
sti
ljmp
idivb
clc
cmp
loopne
outsl
test
push
rcrl
mov
mov
xchg
mov
dec
push
pop
jge
mov
push
cs
cmc
lods
xor
xorb
aad
loope
mov
mov
or
adc
scas
jle
out
adc
bound
jns
in
mov
std
rclb
movsl
xor
call
and
pop
lods
hlt
push
jae
cmp
push
outsl
fidivs
gs
rcrl
jne
insb
dec
mov
into
and
in
push
or
pop
jo
movsl
loopne
mov
je
sub
cltd
xor
inc
aas
fs
scas
imul
test
std
scas
repnz
ss
fldl
lock
das
or
test
mov
arpl
aad
scas
mov
test
scas
sbb
stc
ds
jae
sub
mov
mov
inc
inc
idivb
xchg
iret
std
call
mov
mov
cwtl
mov
lahf
sbb
sbb
ds
insb
fdivrl
lea
out
or
aad
jns
cmp
lcall
fmull
mov
inc
inc
mov
lcall
leave
or
mov
inc
test
imul
inc
mov
lock
xor
dec
mov
jl
lds
mov
addr16
fcmovb
or
xchg
lret
adc
outsl
jecxz
xchg
js
push
sub
pop
insb
aam
int3
push
jnp
mov
dec
pop
imul
std
out
rclb
xchg
sub
ljmp
test
jg
and
dec
mov
xchg
cld
cmp
cmp
dec
mov
push
and
xchg
repz
push
push
pop
xor
inc
inc
into
lods
scas
call
xchg
fists
pop
iret
adc
in
push
repz
addr16
fsubs
daa
add
push
add
mov
fisubrl
push
adc
ljmp
push
sbb
mov
arpl
loope
pop
mov
mov
das
jle
insl
insl
push
pop
mov
jge
and
xorl
sub
in
int3
fs
mov
jmp
test
aam
pop
sub
jle
mov
dec
leave
insl
mov
mov
mov
pop
or
mov
psraw
mov
adc
pop
inc
dec
sub
sub
push
lods
je
dec
mov
fdivl
dec
popf
mov
mov
jae
mov
aas
in
mov
push
pushf
adc
ja
and
je
mov
sahf
cli
or
ds
mov
jmp
mov
jg
pop
mov
jp
cwtl
pop
jle,pn
xchg
sbbb
sub
mov
and
stos
ror
andb
mov
jae
lods
mov
adc
arpl
jp
aas
or
test
jmp
mov
push
enter
test
fisubrs
pop
mov
push
inc
xor
mov
fnsave
mov
ds
jae
int
or
outsl
scas
shrb
adc
test
lds
addr16
mov
aam
push
es
jecxz
dec
xchg
outsb
and
fwait
aaa
stos
lcall
cmc
jbe
fpatan
sahf
aad
pop
adc
adc
faddl
pop
fisttps
add
jl
enter
push
add
jmp
outsb
das
repz
xchg
sbb
jo
test
clc
rcll
inc
idivl
jbe
mov
inc
loope
idiv
call
xor
icebp
mov
jae
loopne
fwait
cld
lahf
add
fldenv
dec
sti
fisubs
xchg
pop
inc
mov
lock
inc
addr16
sub
pop
xor
inc
gs
cmp
cmpsl
bound
enter
jge
sahf
cmpsb
sub
xchg
jp
xor
push
popf
das
dec
jb
xor
jne
xchg
cmp
fbld
das
xorb
in
jg
mov
add
sti
shl
fbld
cmc
push
rcrl
hlt
in
mov
push
ja
pop
sbb
sysret
xchg
jnp
std
outsl
inc
cwtl
mov
gs
jb
stos
cmp
scas
decl
push
xor
add
rcl
cltd
ficoml
aas
sub
clc
or
jmp
xor
push
jne
jbe
mov
adc
clc
mov
xor
inc
popf
sub
push
fsubs
stos
sbb
jnp
incb
sub
movsb
stos
in
lret
dec
into
dec
pop
aad
sbb
imul
or
pop
xor
ljmp
nop
push
inc
sub
iret
cmp
ja
dec
inc
pop
into
jl
cwtl
pop
lahf
adc
sub
pop
sub
cltd
mov
sub
sbbl
add
stc
inc
stos
and
jns
push
mov
push
jno
adc
pop
loop
shlb
or
lret
in
push
pop
scas
jnp
in
orl
xchg
in
ljmp
test
add
pushf
cmc
mov
push
fildl
xor
push
or
xchg
or
movl
fistps
or
or
out
mov
in
xlat
test
adc
lds
pcmpeqb
mov
jl
incl
add
mov
sti
decl
jecxz
adc
gs
test
and
adc
jecxz
add
test
xor
lds
push
mov
sbb
xchg
in
sub
jle
icebp
mov
imul
ret
and
cmc
mov
cmpsb
aad
call
bound
insl
mov
adc
sub
add
mov
or
in
loopne
call
rorl
fwait
pushf
movsb
shl
mov
hlt
sbb
mov
dec
fildl
or
leave
mov
fwait
jg
xor
cltd
mov
lods
dec
cs
and
and
ja
xor
imul
stos
jmp
or
push
inc
and
jl
cld
push
popf
out
cwtl
pop
xor
inc
inc
ret
or
bound
roll
enter
add
bound
daa
pop
sub
xchg
loopne
mov
test
mov
mov
pop
push
arpl
popa
sahf
jb
imul
mov
jae
orb
cmp
adc
sub
lds
pushf
cmp
pop
sub
mov
cmp
sti
loope
data16
xchg
cwtl
or
imul
cli
mov
js
and
fmull
mov
sti
fdivrp
scas
ljmp
mov
or
xor
xchg
aas
xchg
call
pop
mov
nop
adc
mov
subl
mov
jmp
gs
loop
jb
mov
adc
jbe
dec
aas
xor
push
loopne
mov
push
cmp
fcmovb
cltd
and
incb
sbb
movsl
add
and
pop
inc
ljmp
mov
shr
and
dec
mov
mov
sub
flds
pop
rolb
mov
dec
jl
pop
add
mov
out
adc
sub
xchg
fdivrl
pushf
push
clc
cmp
mov
pop
xchg
test
into
sub
cmp
pusha
mov
add
xor
loop
push
add
imul
push
pop
enter
in
mov
xchg
bound
mov
test
out
into
lods
push
outsl
imul
pop
mov
adc
mov
movsb
cmp
lret
push
or
leave
pushf
fisttps
xor
or
cmp
mov
test
push
sahf
inc
loope
out
lods
sti
add
fadds
and
or
lcall
divl
fsubp
cld
insb
inc
fbstp
scas
xchg
pop
ret
ret
xchg
jb
test
sarl
inc
les
daa
aam
cmp
xchg
nop
cltd
sbb
jbe
insb
mov
and
mov
data16
or
data16
dec
pusha
ret
or
repnz
xor
leave
fwait
mov
mov
mov
or
lret
loop
and
pmaddwd
cmp
jge
sub
ljmp
push
lods
mov
push
adc
fwait
mov
xchg
fsubrl
cltd
mov
fldt
and
push
xchg
cmp
repz
mov
sub
cmp
test
addr16
pushf
dec
jle
sbb
popa
and
inc
addr16
sbb
xchg
pop
ret
je
add
jmp
xchg
test
jae
dec
test
push
mov
mov
jmpw
jmp
out
aaa
sbb
sub
mov
in
dec
lret
add
in
jge
cmpsl
loop
and
push
mov
pusha
sbb
mov
in
gs
out
and
in
int
fcoms
jmp
scas
sahf
imul
sub
push
and
mov
pop
call
nop
jo
cltd
pop
scas
jge
add
cmp
jmp
ds
popf
cmp
jg
push
or
cltd
push
mov
in
xchg
add
fmuls
popa
mov
fnsave
jp
push
inc
scas
adc
jmp
mov
or
mov
stos
je
popa
cmpsl
js
push
pop
jg
pop
divb
cs
sub
cmpsl
adc
test
lcall
dec
mov
or
push
jne
fnstcw
xor
cmpsl
or
fldcw
inc
push
mov
enter
stc
mov
sbb
cmc
rolb
rol
mov
sbb
jae
icebp
mov
pop
cmp
cwtl
int
pop
adc
jnp
jg
pop
mov
xor
popa
sahf
mov
push
iret
stos
testb
mov
je
aas
jb
lcall
loope
sub
fidivrs
js
jge
ljmp
lods
movsl
mov
pushf
fidivs
mov
mov
lds
push
jmp
ljmp
les
jmp
loopne
sub
in
jae
dec
xchg
mov
ja
mov
pop
sub
out
adc
inc
jecxz
in
out
loope
jo
jae
sub
aas
add
inc
std
mov
pop
testl
cmpsb
gs
push
xchg
jb
jb
cltd
test
lea
and
push
or
lahf
fisubl
sub
stos
sbb
mov
jmp
inc
movsl
test
mov
xor
mov
mov
sub
jg
scas
test
push
lret
xor
sbb
xchg
and
das
and
xchg
jbe
xor
mov
es
pop
sub
lock
mov
or
lds
lods
mov
cmp
xchg
fucomp
sbb
cmp
popf
call
mov
jo
cli
sbb
out
mov
fucomip
adcl
sbb
xor
dec
js
js
in
clc
loop
dec
aas
adc
lods
adc
ja
mov
cs
cwtl
in
lret
into
push
psrad
inc
and
lods
fwait
stos
lock
dec
pop
jne
jg,pn
pop
jb
and
lds
cwtl
outsb
sbb
and
sbb
int3
push
loopne
jo
adc
jecxz
scas
movsb
push
mov
add
pop
jg
pop
sar
nop
add
js
add
out
imul
mov
cmp
in
mull
decl
in
sti
mov
lods
cli
sub
mov
into
xchg
outsb
fnsave
sbb
sbb
repz
inc
dec
inc
call
mov
fwait
xchg
test
or
lahf
dec
push
push
cmpl
imul
fistpll
fdivl
jno
and
mov
push
fistps
mov
mov
mov
xor
sub
jne
unpcklps
shlb
mov
jmp
dec
addr16
mov
lea
ficompl
jno
or
stos
mov
test
mov
das
push
clc
andb
aad
stos
mov
and
hlt
inc
shl
cmpsb
xchg
mov
adc
inc
stos
add
xlat
cmc
pop
cmp
xchg
mov
adc
fldenv
xchg
mov
xor
ret
push
mov
add
mov
scas
call
dec
mov
mov
jnp
imul
add
mov
xor
adc
sub
xchg
call
lods
sbb
fdiv
cmp
subb
and
pop
lahf
stos
xchg
push
fwait
lcall
inc
cli
fnstsw
popf
adc
mov
jns
je
enter
cli
ror
in
leave
jp
jmp
es
mov
clc
mov
imull
insl
ja
xor
out
mov
ljmp
outsb
add
xchg
adc
and
sub
jbe
push
sbb
int
out
sahf
mov
icebp
adc
or
jp
pop
lea
dec
fdivp
leave
mov
int3
lret
sarl
loop
xchg
icebp
cmp
in
dec
cmpsb
test
and
jmp
push
push
ret
shr
lret
jbe
pop
mov
dec
lea
daa
xor
mov
xor
sub
inc
ret
push
jns
aad
push
shll
and
and
mov
aad
imul
inc
xchg
push
jnp
test
cmp
scas
xchg
pop
mov
sbb
in
push
pop
dec
cmpsl
data16
daa
jmp
cmp
xor
sti
mov
mov
ljmp
shl
sbb
or
sub
dec
adc
rclb
dec
loope
pop
lock
jnp
push
dec
cmp
inc
mov
jo
cmpsb
mov
mov
cli
aaa
cli
inc
xchg
or
and
in
mov
andl
jl
xchg
xor
lahf
mov
inc
and
pop
and
xor
aaa
cs
das
cmp
in
sahf
in
mov
pop
in
cmc
mov
into
lea
dec
sti
xor
popa
mov
arpl
xor
push
leave
adc
lods
lods
add
call
mov
adc
push
lods
arpl
insl
cmp
jl
lret
lods
out
mov
sub
pxor
adc
push
xchg
sub
cmp
out
ljmp
movsl
dec
xchg
mov
pop
or
loope
pop
adc
sub
xchg
test
scas
xor
fisubl
mov
push
out
dec
mov
mov
inc
sahf
cmc
dec
scas
int3
push
push
aam
jp
xlat
and
sub
test
popf
cmc
cmp
sbb
and
dec
dec
ss
les
sbb
sahf
xor
out
ljmp
and
outsl
cltd
sub
sbb
or
lods
push
sbb
andl
add
jnp
xor
ljmp
setns
xor
loop
xchg
mov
ja
or
dec
and
xor
push
subl
paddq
adc
rcr
lods
je
into
stos
pop
scas
mov
repz
fwait
inc
cmpsl
inc
aam
aaa
sti
mov
je
aam
aam
adc
xchg
mov
mov
and
fwait
jb
cmc
and
dec
xchg
pop
push
cmp
fwait
xchg
lea
xchg
sbb
jge
outsl
rolb
mov
aaa
push
inc
lds
xchg
add
xchg
fsubp
jge
cwtl
mov
push
dec
pop
lahf
cmp
cs
nop
stos
xor
xchg
xor
in
or
sub
and
clc
xchg
jns
and
xchg
xchg
jmp
or
xchg
mov
into
int3
lock
frstor
or
and
bound
pop
lahf
or
lret
or
mov
mov
jo
iret
out
add
mov
cmp
cld
jo
test
rcrb
cmpsl
mov
push
jnp
cmp
add
push
jo
xchg
add
je
mov
shlb
cltd
xchg
xorl
imul
subb
add
imul
add
movsl
mov
jp
lcall
sbb
mov
inc
cwtl
xor
add
lret
jecxz
dec
out
push
out
xor
inc
push
cmpsb
test
sarl
jb
popl
fwait
lds
stos
sbb
pop
xchg
out
mov
cmpsb
shlb
xchg
xorb
mov
aaa
mov
rcrb
lret
sbb
mov
dec
and
xchg
push
aam
push
sbb
inc
pop
cltd
sub
daa
jae
mov
call
fmulp
sub
in
lret
loopne
push
inc
dec
ror
aaa
mov
inc
add
int
loope
int3
pop
and
stos
pushf
jle
int
sahf
inc
out
lret
test
mov
sbb
sub
push
jl
out
out
into
xor
push
push
push
xchg
fsincos
testb
dec
call
add
mov
andl
fsub
popf
push
clc
xchg
je
mov
rcrl
ret
fimull
sbb
popa
sub
cmp
ljmp
cmp
dec
add
addr16
fnstsw
repz
call
jns
jno
xor
jo
and
rol
aas
shr
push
inc
popa
out
mov
aad
jns
jge
pop
xor
call
sbbb
jo
pusha
push
add
dec
pop
pop
addr16
cld
xchg
sahf
add
inc
pop
outsl
lock
fstl
mov
aam
dec
and
xchg
inc
pushf
lock
or
dec
lret
popa
xchg
xor
jbe
xchg
into
enter
inc
in
js
jo
leave
stos
push
les
xor
lret
inc
or
mov
xchg
pop
and
mov
out
loopne
int3
orl
mov
leave
sbb
and
mov
mov
xchg
adc
outsl
adc
pop
pop
mov
adc
push
add
dec
mov
mov
cmp
das
or
push
sti
jb
xlat
fimull
push
rcrl
or
dec
daa
sbb
mov
das
rcl
insb
push
sub
sub
test
add
sahf
mov
jl
mov
sub
mov
jno
hlt
dec
add
lahf
outsb
push
mov
add
sub
cltd
adc
sti
jecxz
test
push
fs
pop
jl
into
test
add
inc
bound
ja
addr16
ret
rorb
jmp
inc
in
loop
adc
dec
fldcw
adc
fdivl
mov
or
insb
ljmp
stc
bound
loope,pn
outsb
pop
and
shrl
xor
cwtl
mov
jmp
in
push
mov
outsb
or
test
repz
mov
mov
addl
fs
xlat
fisubs
out
jg
sub
pop
inc
mov
cmpsl
out
sbb
jle
repnz
xorl
scas
mov
xor
clc
ss
out
in
jle
push
addl
sbb
les
int3
push
push
push
mov
adc
xor
lret
flds
mov
push
lahf
sti
stos
adc
addl
dec
bound
enter
cltd
mov
sbb
jmp
addr16
xor
daa
popa
popa
mov
cltd
bound
pop
jns
add
cmpsb
jnp
arpl
cmp
sub
pop
push
lcall
adc
xor
addl
in
in
leave
mov
out
shll
mov
call
add
out
ja
sub
out
je
mov
incb
jmp
push
jb
pushf
jecxz
imul
sbb
das
sub
mov
xchg
mov
data16
mov
fisubs
mov
jg
aaa
push
aad
or
push
push
je
cmp
negb
je
loope
test
jg
arpl
mov
popf
xor
lock
sub
inc
add
sbb
fcmovb
xchg
lds
sbb
shll
mov
adc
cmp
std
inc
pop
imul
int3
inc
mov
sbb
in
mov
jne
mov
stos
mov
xchg
xchg
mov
daa
jmp
mulb
test
fidivl
test
aas
fdivrs
dec
push
adc
mov
adc
lret
enter
pop
mov
sahf
dec
mov
int
mov
hlt
stos
out
pop
sub
rorl
ret
xchg
xchg
fisubs
gs
pusha
xchg
adc
xchg
dec
inc
jg
jp
mov
icebp
pop
push
ds
or
xchg
and
push
push
push
loopne
clc
cwtl
mov
test
sbb
xlat
inc
cmpsl
ds
popa
bound
arpl
std
mov
add
aad
cmc
shrb
sub
enter
out
je
cltd
or
adc
cli
cmp
ret
nop
adc
daa
push
addb
lds
sbb
mov
xchg
lcall
dec
cmpsb
mov
push
aaa
and
add
es
into
mov
js
in
and
int3
jmp
ficoms
lret
or
clc
jno
sbb
mov
mov
fdivrs
pusha
sbb
ljmp
pop
out
testb
pop
push
nop
mov
sub
outsb
jmp
jp
imul
push
add
sub
jnp
leave
xor
cmp
loope
div
andb
inc
sbb
in
aaa
jne
and
mov
enter
and
mov
cs
mov
add
stos
fs
mov
add
inc
add
pop
mov
rcrb
adc
cmp
push
fldz
loope
xchg
adc
push
repnz
enter
mov
push
pushf
das
in
push
addb
stc
mov
subb
jbe
cmp
push
mov
add
mov
pop
pop
data16
or
dec
inc
jns
outsb
fisttpl
mov
movsb
das
ss
arpl
out
out
dec
enter
push
insl
cmp
jne
jnp
fidivl
imul
lods
mov
pop
sbb
out
sub
jg
mov
les
into
test
dec
mov
rolb
je
inc
or
dec
or
sti
repnz
xor
jae
cli
push
xchg
enter
fdivr
mov
imul
jmp
rep
lds
je
pcmpgtd
lahf
or
imul
jg
cwtl
mov
adc
mov
inc
push
xchg
xchg
or
jl
sub
sahf
jb
int
mov
push
fcmovu
and
push
adc
jp
dec
ljmp
out
inc
push
xchg
fstpt
xlat
cmpb
sahf
insl
dec
cmp
inc
out
dec
fistpll
pusha
test
mov
outsb
lret
pushf
and
jge
aad
test
sarb
push
dec
push
xchg
mov
fldl
adc
mov
fcoml
dec
and
pop
sti
es
iret
shlb
loop
inc
cwtl
xor
cmp
popa
vpmulhw
pop
ds
jmp
jge
outsb
xchg
push
jle
enter
mov
cmp
adc
jle
cmp
and
ljmp
aad
push
fxch
xlat
cwtl
push
test
popa
mov
jb
fisubs
mov
jge
mov
mov
push
push
in
popa
push
push
xor
in
loop
pushf
fdivrp
mov
inc
sti
pop
xchg
push
pusha
mov
je
cld
mov
push
pop
xor
add
mov
fucom
fs
adc
xchg
out
stos
mov
push
cmpsb
adc
pop
mov
mul
mov
repnz
jbe
jl
cmp
cmp
mov
sub
mov
enter
sbb
lea
es
jecxz
xor
pop
mov
mov
fisubrs
int3
or
adc
dec
fbld
push
popa
dec
dec
add
or
jp
scas
pop
add
je
jge
jg
add
sub
fidivs
call
loope
das
adc
push
dec
sbb
xor
mov
sbb
movsl
mov
ds
xor
sahf
loopne
mov
shl
test
push
fldt
xchg
fisubl
cmp
cmp
sub
repz
jge
inc
pop
enter
inc
movsl
cmp
pop
sub
inc
daa
ja
cmpsb
call
insb
out
neg
push
movsb
loope
push
inc
sbb
dec
xchg
stos
scas
jnp
rclb
adc
mov
jmp
loop
sbb
lds
xchg
inc
inc
arpl
lds
fbstp
adc
arpl
xor
push
inc
leave
shrb
mov
pop
dec
jbe
daa
add
jmp
xorl
sub
inc
push
jle
hlt
clc
fldl
pop
cwtl
int3
fsubl
mov
bound
ss
push
and
sub
mov
mov
sub
adc
mov
fimull
push
mov
mov
movsl
sti
sar
push
or
test
lcall
sub
out
mov
inc
movsb
pop
push
insb
adc
pusha
push
xchg
in
mov
pop
scas
sub
mov
test
cmp
les
loop
mov
divb
sub
jmp
or
adc
and
mov
xlat
imul
data16
xor
pop
int3
mov
mov
push
pop
cwtl
arpl
in
xor
scas
daa
mov
addl
sbb
mov
dec
out
popf
add
mov
fs
jge
pop
gs
mov
pop
stos
lods
imulb
ss
mov
xchg
xor
push
out
add
imul
cmp
ljmp
cmc
xchg
mov
nop
adc
dec
cmp
insl
mov
mov
insl
mov
lcall
dec
sub
ret
je
ss
pop
xor
xor
lods
xor
xchg
fistl
cmp
lret
fucomp
sub
jns
sbb
fwait
movsl
jae
mov
mov
stos
mov
push
mov
inc
mov
sbb
jnp
pop
cmp
test
sbb
add
ljmp
outsb
ret
pop
data16
test
je
adc
sbb
push
fisubrs
and
mov
inc
xchg
cmp
outsl
aam
dec
cmovae
das
rolb
mov
dec
in
incl
pop
xlat
xchg
ja
xchg
push
jl
adc
lcall
lea
loop
push
jmp
fwait
push
mov
push
jns
mov
jb
xchg
cmc
inc
filds
adc
mov
cltd
jne
cmp
imul
jb
andl
pop
js
aam
and
xor
scas
mov
pop
push
xor
dec
adc
addr16
enter
cmp
mov
outsb
pop
in
lahf
out
test
pop
imul
dec
pop
mov
push
loop
and
mov
test
mov
jne
xchg
out
lods
loopne
mov
jno
jg
jp
daa
mov
jp
sub
dec
lahf
and
ljmp
aaa
cld
aas
addb
adc
mov
pop
aaa
test
add
repnz
loop
xchg
adc
adc
mov
mov
cmpsl
push
sbb
insb
lds
outsl
stc
mov
xor
lret
nop
push
cmp
callw
mov
pusha
iret
notb
js
mov
loopne
or
push
pop
sbb
push
stos
icebp
movsl
jbe
ss
jbe
xlat
andl
pop
leave
fnstcw
into
pop
les
es
lock
sub
mov
scas
sahf
and
lahf
fstpt
fisubl
daa
mov
pop
mov
fcomi
push
ret
push
mov
popa
dec
fs
sub
push
mov
out
fcmovne
sbb
pushf
fwait
sub
pop
enter
pop
xchg
rcr
lods
push
cmpsb
pop
mov
jecxz
addr16
mov
jle
stos
aas
mov
push
cs
test
jle
jae
shlb
push
sbb
hlt
test
add
test
or
div
add
xchg
xor
ret
cltd
call
xchg
or
xor
rorb
por
mov
push
mov
pusha
lahf
scas
add
test
xorl
gs
add
inc
pop
add
int3
movsb
jge
add
pop
aas
fisubs
movsl
insl
lock
dec
int3
hlt
js
mov
in
lods
pushf
dec
in
xchg
mov
pop
lret
xor
add
mov
movsb
mov
outsl
rol
fistpll
jne
je
add
mov
inc
xchg
add
test
movsl
stos
xchg
popf
das
mov
sti
mov
je
imul
dec
sbb
adc
xchg
add
testl
pop
das
in
call
or
push
or
cmp
mul
into
mov
rcr
sub
adc
dec
rorb
stos
xchg
decl
aad
push
jge
inc
fldl2e
pop
xor
testb
outsl
push
movsb
mov
cmp
xchg
lret
pop
fisubrl
outsb
cmp
add
jnp
call
xchg
sub
loopne
dec
sbb
ret
add
iret
push
xchg
inc
das
outsb
lds
incb
leave
lods
dec
pop
mov
subl
and
pop
imul
mov
jle
sbb
clc
fildl
push
lcall
mov
movsl
outsl
popf
lods
sbb
lret
scas
jp
ret
xor
adc
lret
mov
bound
inc
jo
or
and
and
inc
xchg
mov
jl
jo
inc
int
lods
sbb
sbb
das
movsb
iret
mov
xchg
stos
xchg
or
ss
sub
shll
sar
xorb
sti
std
aam
xorps
mov
sbb
insb
sbb
jae
cmp
xchg
loop
mov
ret
mov
xchg
cmp
mov
outsb
into
mov
mov
cmpsb
loope
jg
and
lods
dec
adc
sahf
adc
add
or
inc
adc
dec
mov
ret
lock
add
adc
adc
sbb
out
mov
mov
cli
jne
outsw
lods
mov
cmp
mov
cmc
fstpt
aad
or
test
mov
and
sbb
pop
and
mov
sub
or
xchg
push
ror
or
push
cs
add
mov
lret
lds
dec
cmp
and
ja
adc
sub
out
xchg
insb
sbb
pop
xchg
mov
sahf
fsubrs
inc
add
mov
pusha
mov
pop
lea
push
adc
pusha
mov
xchg
test
mov
lret
push
or
int
aaa
loope
dec
sbb
inc
cli
push
pop
test
and
inc
ss
jbe
iret
pop
mov
ss
pushl
mov
notb
stc
dec
xor
xor
fimull
add
xchg
faddl
icebp
mov
inc
aaa
ja
jmp
inc
lods
xchg
lret
cs
fnsave
adc
mov
pushf
int
outsb
gs
or
outsb
or
pop
std
mov
pop
mov
jbe
lea
or
js
sbb
daa
out
fs
in
xchg
jae
sub
inc
data16
clc
cmp
xchg
cmp
std
jge
or
sub
cmpsb
and
sti
nopl
in
or
rcrl
fistpl
or
inc
rcr
mov
rcll
cmp
jae
movsl
daa
and
jecxz
adc
dec
mov
pop
mov
scas
or
cmp
sub
faddp
jnp
add
pop
xchg
loop
adc
push
inc
rolb
pop
xor
fistpl
push
outsl
sbb
fwait
sub
out
push
das
mov
stos
addr16
ret
jl
mov
dec
loop
pop
cwtl
cwtl
jecxz
sub
int3
sub
dec
pushf
mov
jl
nop
mov
sbb
repz
mov
rcrb
aad
ret
adc
mov
fidivrs
push
cmp
pusha
pop
hlt
dec
inc
cmp
addb
push
pushf
orb
lahf
cmp
inc
das
sbb
sbb
xchg
movsb
jbe
and
push
test
lea
scas
add
gs
pop
mov
cwtl
xchg
mov
mov
adc
jle
cmp
sub
mov
push
inc
mov
fadds
or
mov
adc
test
pop
cwtl
dec
addl
mov
mov
in
aad
rcrl
add
mov
sbb
cwtl
pop
mov
inc
adcb
imul
aas
jge
sub
inc
hlt
inc
lret
ret
and
add
cs
loop
mov
mov
pop
xor
call
mov
pop
ss
insl
cltd
int3
lods
scas
add
mov
jo
adc
repz
xchg
fnstenv
sub
notb
ds
mov
sub
inc
cmc
out
sub
xor
aaa
mov
ss
sbb
adc
xchg
sahf
fidivs
bound
jle
mov
leave
cmc
gs
inc
rclb
mov
xor
call
mov
xlat
test
pop
ret
jl
rcll
popf
xor
add
cltd
out
in
or
inc
cli
fistpll
cmp
loopne
stos
loop
adc
mov
in
push
add
jmp
test
gs
lret
ds
push
cmp
xchg
fucom
gs
jmp
push
in
mov
in
xchg
jp
jo
lcall
fcoms
push
jno
cmpsl
push
sar
cmc
sbb
jle
insl
push
fsubr
iret
dec
fistl
sbb
loope
mov
fwait
inc
das
push
jle
push
daa
insb
loopne
pop
dec
cmp
les
xor
enter
pop
jp
nop
sbb
cltd
cli
dec
pop
stos
add
jns
sbb
jecxz
lcall
cmp
test
aam
sar
aad
jge
ror
jnp
cmp
add
nop
mov
data16
push
jo
ss
test
cmp
dec
jno
pop
adcb
cltd
and
aam
dec
jns
and
sub
push
ss
sahf
pop
gs
das
inc
lods
or
pop
mov
xchg
jge
ljmp
in
rclb
and
mov
push
push
dec
mov
mov
fwait
js
push
mov
lret
fdivr
jmp
div
mov
imul
sub
stos
push
je
arpl
and
dec
popf
std
popf
inc
xchg
cs
jb
mov
adc
or
sti
or
lret
cmp
enter
dec
mov
adc
and
ret
cmp
mov
pushf
fsubrl
jmp
loope
stos
pop
test
mov
sub
bound
iret
or
arpl
loope
nop
mov
aas
jnp
lea
nop
jmp
repnz
mov
and
jo
and
add
leave
adc
stos
or
dec
ficoml
push
push
out
bndldx
sub
sub
aad
scas
int3
push
and
adc
adcb
ds
test
fwait
sbbb
inc
or
and
orb
jo
imul
ds
lea
xchg
mov
data16
fstl
jb
test
mov
add
mov
push
sub
out
jg
addb
insb
sub
ficoms
jne
mov
xor
or
mov
add
insb
int3
in
fstpt
mov
ret
mov
mov
or
jns
mov
dec
jge
mov
es
sbb
fbstp
dec
xlat
repnz
outsb
sbb
movsl
pop
out
cmp
addr16
aaa
mov
mov
cmpb
jge
sub
rcll
scas
aas
cld
jo
jb
in
pop
adc
xlat
jbe
mov
mov
xor
loope
push
mov
fs
adc
daa
push
jne
mov
mov
cmpsb
mov
sbb
cli
cltd
or
lock
ljmp
dec
adc
pushf
imul
das
stos
insb
add
mov
pop
jb
cltd
xor
movb
inc
std
repz
jae
fwait
or
test
push
shl
dec
mov
jge
jmp
in
jl
in
leave
int3
pop
dec
imul
fistpl
xor
push
xor
filds
mov
xchg
xor
mov
cld
fs
pop
leave
movsl
std
fisttpll
ljmp
or
sahf
mov
cmpb
iret
ljmp
mov
cltd
sub
stos
inc
jae
mov
jnp
push
inc
ja
pushf
push
inc
xor
push
adc
sbb
dec
push
lea
mov
repz
inc
mov
push
popf
das
icebp
add
add
inc
pop
ret
scas
jp
ljmp
shll
pop
inc
pop
cli
xchg
in
repz
ds
sarl
xor
inc
push
xor
mov
out
test
pop
aas
push
push
movsb
sub
mov
sarb
sbb
add
xchg
sbb
roll
adc
cwtl
cs
adc
mov
sub
leave
fistps
das
and
fisttpl
jae
mov
fucomip
cs
sub
jp
ret
mov
aad
gs
aas
outsl
mov
sbb
jmp
cmc
das
cmp
lret
lods
pop
sbb
sbb
add
insl
jnp
andb
outsb
and
add
shl
jo
out
int
push
cltd
lea
mov
jp
jno
mov
and
or
stos
inc
lea
insl
mov
fs
mov
or
xor
cld
sub
std
gs
ss
dec
cmp
stc
dec
push
mov
in
cmp
push
mov
sub
inc
orl
mov
out
push
inc
fwait
mov
mov
frstpm(287
inc
outsl
xorb
scas
pop
ret
mov
popf
sbb
dec
xchg
sub
in
arpl
dec
pop
repnz
rcll
inc
das
ja
cmp
dec
cltd
or
loope
and
pop
es
mov
fsubrl
mov
xchg
movsb
jecxz
pop
pop
int
add
push
inc
dec
mov
jg
and
mov
mov
cmc
inc
or
arpl
mov
scas
pop
in
adc
jns
add
mov
or
dec
jae
sbb
popf
mov
fwait
push
lds
cmp
ljmp
xchg
mov
push
mov
into
mov
and
ds
std
jge
hlt
lcall
add
add
pop
xchg
subb
movl
cli
jae
push
dec
cmp
ficomps
and
cmpl
loop
sub
rolb
out
in
mov
out
pop
mov
mov
jge
sahf
inc
xchg
pop
jbe
addr16
int3
fildl
dec
adc
cmpsb
orl
pop
mov
xchg
cmpsl
jno
outsl
cli
insb
roll
mov
ja
sub
fmulp
arpl
inc
sub
pushf
pop
jg
sub
bound
aam
in
lock
xchg
mov
sub
addr16
in
fdivr
popl
out
es
stos
or
cld
pusha
lds
or
pop
cs
or
lret
enter
jno
pop
je
push
std
arpl
mov
cmp
xlat
jnp
jp
aad
inc
adc
cmp
int
jg
imul
xor
adc
stos
mov
ja
xlat
sub
iret
pop
pop
or
clc
movsl
loopne
pop
mov
insl
ss
jae
push
ljmp
adc
add
iret
xor
dec
or
xchg
je
jl
sti
adc
in
cli
jns
mov
pusha
jne
dec
xorl
mov
test
loopne
mov
push
in
lock
xchg
dec
cmp
inc
int3
cmp
jp
xor
and
test
in
sub
mov
jl
nop
adc
divb
add
dec
enter
push
mov
iret
jle
enter
loop
or
pop
fnstenv
test
jecxz
dec
addr16
pop
xor
test
fidivrl
dec
mov
mov
mov
add
jecxz
and
jecxz
push
bound
sbb
mov
jo
out
add
out
clc
sub
inc
out
xor
push
enter
mov
iret
es
jmp
dec
outsl
pop
and
lahf
loopne
jmp
sub
call
xchg
data16
and
sub
pop
fwait
cmp
hlt
sbb
adc
inc
add
fwait
sub
mov
sbb
repz
movsb
inc
test
xchg
scas
pop
jmp
cmpsl
daa
sbb
incb
inc
ss
mov
scas
clc
iret
push
mov
cmpsl
test
andl
pop
out
or
fdiv
xchg
in
sbb
push
and
fwait
add
fs
xor
mov
mov
aaa
adc
dec
dec
fistps
ret
aaa
and
lret
inc
or
insl
mov
dec
xchg
jbe
cwtl
push
pop
cmp
cmp
push
mov
std
es
rcpps
jo
pop
inc
xchg
mov
or
in
jne
in
cmp
mov
add
out
push
pop
sub
cmpsb
jmp
js
out
push
cltd
imul
pop
push
xchg
and
xor
imul
fwait
mov
jl
and
cli
add
hlt
decl
xor
movsl
mov
mov
xor
daa
test
adc
inc
push
sub
hlt
pop
call
dec
out
mov
xchg
repz
testl
xchg
inc
ret
nop
lods
insb
call
out
test
jbe
mov
out
or
push
xchg
mov
sbb
orb
xor
jb
shll
sbb
and
in
xchg
jle
sub
mov
jle
jo
jl
arpl
or
add
ss
cs
ds
adc
and
or
icebp
mov
pop
aas
push
mov
cmp
out
scas
ljmp
pop
sub
enter
inc
mov
popf
xor
xlat
popf
aas
inc
sub
or
stos
jb
test
xlat
inc
push
dec
js
push
or
mov
cmpsb
test
push
stos
jmp
adc
les
std
push
in
decl
fbstp
and
pop
pop
adc
pushf
popa
mov
inc
addr16
fstl
sahf
das
mov
pop
scas
sub
and
into
ljmp
aad
or
or
mov
fldl2t
imul
mull
aad
testb
mov
inc
leave
adc
mov
in
out
xchg
icebp
ret
movsb
in
mov
sbb
fcompl
jne
mov
pop
sub
outsb
je
mov
nop
adc
mov
loop
nop
lock
or
xchg
mov
orl
lret
cmc
jae
nop
es
popf
ds
jo
addl
or
in
cmpxchg
push
mov
mov
push
dec
cmp
mov
xchg
inc
loopne
push
subl
icebp
jo
jge
sbb
mov
xchg
xchg
arpl
sahf
inc
dec
icebp
push
sub
cmp
in
inc
stos
iret
mov
sub
loope
es
inc
cld
xor
sub
sub
and
add
cmp
xlat
mov
fwait
adc
xchg
aad
lcall
mov
ds
xchg
in
icebp
imul
sahf
nop
lods
jg
mov
jecxz
xor
jmp
mov
mov
lcall
push
mov
leave
int3
test
cltd
hlt
in
sbb
jle
mov
ret
aam
icebp
lahf
notl
je
test
mov
inc
negb
pop
mov
jmp
leave
movsb
in
fcompl
push
imul
inc
jmp
sub
ss
dec
out
popf
mov
aaa
enter
in
addr16
jno
xchg
push
dec
pop
xchg
in
xchg
lock
divl
pop
cmp
out
movl
test
xchg
rep
or
outsl
aas
stos
orb
bound
mov
push
push
jb
mov
pop
stc
sbb
xor
sarl
mov
cmp
psadbw
and
cmp
push
or
push
or
cmpsb
gs
mov
and
in
cmpsb
insl
jns
fst
inc
adc
mov
sub
push
mov
out
sahf
add
les
sbb
xor
sbb
ret
or
mov
or
pop
scas
xor
push
popa
es
sbb
popf
out
adc
push
out
scas
mov
insl
mov
jle
push
xchg
mov
dec
pop
dec
popl
rorb
lock
pop
hlt
cmp
and
scas
aam
cmp
test
movsb
push
and
mov
push
lret
or
sbb
lods
xor
sarl
add
stos
mov
lret
jns
sub
and
rcl
insb
xor
leave
mov
icebp
dec
int
xchg
cmp
inc
inc
push
repnz
enter
cmpsb
push
jb
adc
inc
lret
xor
movsb
add
jbe
cmpsl
repz
mov
mov
lods
mov
idivb
xor
xchg
hlt
bound
cmpsb
inc
pop
mov
test
cmpsl
and
dec
xor
mov
cmpsl
scas
test
lods
and
push
adc
fisttpll
mov
mov
sbb
inc
mov
sbb
les
pop
inc
inc
mov
and
imul
sbb
iret
inc
jmp
jge
pop
incb
mov
adc
outsl
pop
fdivrl
mov
out
mov
xor
out
cli
xor
xchg
and
dec
nop
add
addr16
pop
sub
xchg
dec
xor
add
mov
int
xchg
adc
adc
add
mov
mov
xor
fadds
nop
arpl
or
es
sbb
pop
fwait
sbb
movsl
in
repnz
mov
mov
and
mov
lock
int
inc
adcl
and
fiaddl
test
xchg
push
xor
sbb
jbe
popf
adc
mov
scas
jg
stc
or
test
fnsave
outsw
and
xchg
mov
or
decl
add
lds
outsb
inc
push
cmp
nop
cmpsb
mov
lret
inc
pop
cmp
shll
mov
xor
nop
shlb
push
jp
fcomps
daa
xor
das
inc
push
jns
popa
shll
cmpsb
and
sub
or
and
out
aam
and
adc
mov
mov
dec
test
xchg
adc
sub
mov
inc
pop
int
stos
lds
fwait
lods
jl
nop
mov
data16
fiaddl
cmp
js
or
js
mov
add
sub
inc
loope
shl
xchg
pushf
dec
in
mov
aaa
add
mov
inc
cmp
push
lahf
stos
cltd
mov
pushf
and
mov
test
mov
dec
push
js
ret
inc
jb
aas
and
jbe
inc
pushf
adc
in
lahf
movb
push
or
nop
inc
mov
mov
mov
xchg
scas
scas
pop
pop
pop
jmp
insb
lods
cmp
ss
cmc
movsb
inc
lods
ja
push
inc
imul
cmp
cmp
mov
xor
insb
cmpsl
mov
aas
es
ficoms
dec
jns
sub
ror
pop
xor
lahf
push
lret
inc
xchg
push
repz
imul
rclb
inc
rcl
arpl
cmp
pop
fwait
scas
pushf
clc
inc
xor
jbe
lcall
test
mov
pop
movsl
sti
push
jecxz
adc
sbb
or
mov
push
xchg
inc
push
popf
add
sub
mov
hlt
sahf
and
stos
pop
pusha
xchg
jl
insb
test
jbe
fwait
pop
andb
xchg
aad
das
lods
insb
or
test
mov
sub
push
imul
and
repnz
fs
enter
repnz
pop
in
adc
adc
call
scas
gs
inc
sbb
and
jg
lret
pop
arpl
repnz
or
cmpsl
dec
jnp
jnp
pop
cltd
lods
sahf
push
ds
mov
mov
mov
xor
pop
ljmp
test
fbstp
lock
dec
hlt
in
mov
leave
mov
sub
jge
andl
xchg
loop
bound
cmp
jmp
test
adc
subl
jne
test
sub
fwait
out
clc
rorb
aaa
sbb
lahf
fcoml
pop
xor
xor
pop
ret
push
jne
xchg
or
adc
lea
repz
popa
clc
push
popf
xor
xchg
das
loop
addr16
jge
push
rcl
adc
sti
add
lods
xor
pop
out
mov
out
jnp
adc
test
lods
aas
dec
lret
pop
dec
fwait
dec
out
addr16
cli
cli
lea
adc
incb
adc
in
fisttpll
loope
jg
insb
in
sbbl
inc
mov
xlat
lods
lods
cli
mov
lods
sbb
pop
lods
cmp
push
leave
insb
push
jle
cli
jns
dec
clc
movsl
gs
jb
fbld
or
xor
push
jl
push
lods
mov
sub
push
sbb
or
adc
xor
sub
mov
inc
fyl2xp1
jae
jg
sti
inc
call
sub
or
out
cmpsl
jbe
sub
cmpsl
push
ss
mov
ljmp
aam
movsb
enter
sbb
xchg
xchg
mov
repnz
gs
test
jnp
sub
arpl
std
xchg
jmp
lcall
inc
lds
pushf
push
mov
or
scas
jae
inc
rcl
std
leave
cmp
mov
fsubs
insl
loope
dec
cmp
std
aas
xchg
loopne
scas
cmp
sub
lds
inc
stos
cli
rcrl
incl
pop
divl
pop
call
inc
aad
cmpsb
push
push
imul
xchg
adc
sarb
aam
ficompl
nop
mov
dec
aaa
xor
enter
push
mov
cmp
and
outsl
jae
lock
test
lods
mov
mov
lret
jno
adc
test
pusha
imul
or
js
icebp
js,pn
mov
adc
test
daa
sub
push
dec
cmp
aas
cmc
and
ds
add
outsl
xorl
sub
jne
mov
and
int3
test
fwait
ret
test
enter
ficoml
das
shll
adcl
push
cmp
pop
cmpsb
les
sbb
jae
mov
sub
xchg
add
mov
xor
sbb
scas
push
xor
nop
inc
mov
push
loopne
jl
in
insb
out
xor
ficoms
call
sub
xchg
mov
mov
idivl
jae
fcomps
lock
pop
xor
mov
addr16
jns
xor
mov
cli
mov
cmp
popa
adc
adc
jge
clc
lret
mov
lret
movsl
jp
jo
iret
cld
lea
std
negb
xor
mov
cmp
in
fcoml
cmpsl
subb
popa
sbbb
ret
or
shlb
pop
adc
sub
sbb
and
aas
pop
inc
ret
pop
mov
mov
inc
popf
xor
sti
sbb
stos
imul
and
out
mov
pop
inc
jp
cltd
out
push
xor
sbb
inc
mov
fucomi
fcomi
repz
stos
cmp
test
sub
movsl
and
pop
repz
mov
jecxz
sbb
or
or
outsb
stc
imul
cmp
adc
mov
lods
test
push
xchg
cmp
les
jg
cmc
insb
push
mov
aad
sti
stc
in
je
xlat
mov
xorl
xchg
fisubs
in
sub
addl
mov
xchg
inc
shll
adc
fistpll
cs
jmp
cmp
dec
movsb
pop
add
mov
xchg
pop
js
mov
jp
xchg
cmc
adc
fs
mov
fildll
lcall
ljmp
ret
or
cli
or
scas
jae
fmull
roll
pop
push
std
mov
xchg
dec
out
fistpl
jno
in
sahf
mov
movsb
jle
pop
push
adcb
mov
dec
loop
lahf
ret
scas
or
ret
xchg
inc
push
dec
mov
imull
ss
mov
cld
xchg
bound
cmp
ror
jno
dec
inc
dec
ficoml
pop
xchg
mov
cltd
stos
inc
inc
jae
sarb
push
sbb
pop
dec
movsl
mov
dec
push
popa
sub
fs
clc
mov
sahf
icebp
mov
push
pusha
push
mov
or
push
iret
or
xchg
and
jnp
cmp
in
pop
lock
in
pop
sbb
movsb
iret
sub
ret
jge
dec
dec
push
inc
cmpsl
js
popa
inc
or
mov
test
push
jg
jno
pushf
xlat
neg
jg
iret
loopne
sub
pop
mov
stos
arpl
out
push
push
or
loopne
dec
ja
push
idivl
test
mov
push
lcall
push
mov
movsb
dec
jo
xchg
cmp
cmp
mov
pop
inc
cli
in
test
sub
xchg
mov
mov
mov
cld
mov
out
sub
add
cwtl
push
mov
adc
or
shrl
adc
and
fists
mov
dec
sti
repz
cmp
xchg
or
add
xchg
xlat
sahf
scas
dec
mov
mov
outsl
push
xor
jnp
inc
push
clc
cmpsb
pop
data16
test
pop
repz
lds
mov
ja
push
daa
dec
ret
ret
jmp
sub
insb
jns
loopne
imul
and
ret
loop
sahf
inc
and
shrl
pusha
cmc
sub
sbb
int
cmp
and
jbe
mov
push
stos
dec
inc
sbb
jp
dec
push
pop
shlb
call
xchg
repz
aas
mov
xlat
xor
enter
scas
dec
pop
sbb
jb
or
inc
icebp
mov
sbb
mov
aam
ret
fiadds
mov
lea
or
lcall
mov
jbe
out
imul
loopne
sbb
xor
call
out
jp
push
mov
cmp
aad
mov
gs
mov
ljmp
lock
outsb
insl
fucomip
sub
xor
lock
pop
jo
pop
cmp
popa
dec
cmp
ss
sub
xchg
stc
ret
lods
push
insb
sub
lcall
lds
or
cs
pop
pop
negl
int
f2xm1
cmpsl
cltd
dec
sti
in
mov
push
push
fs
mov
jne
std
or
mov
adc
inc
mov
das
aaa
mov
push
lods
dec
leave
ret
insl
add
frndint
pushf
nop
aaa
push
and
lret
push
adc
cli
dec
inc
xchg
icebp
and
push
push
xlat
inc
cmp
repz
and
and
mov
mov
loope
mov
outsb
add
sub
es
add
dec
sti
adc
loopne
aad
or
dec
jb
fidivrs
fwait
cld
add
add
jb
adc
test
imul
xchg
mov
add
andl
mov
outsl
add
mov
push
imul
mov
aaa
pop
mov
xor
jo
jb
mov
into
mov
cmpsl
and
and
sbb
cmp
lret
clc
testb
xchg
adc
lds
cmp
add
popa
add
and
xchg
movsb
clc
add
jge
adc
push
add
test
add
ss
xchg
test
fstp
sbb
sbb
pusha
mov
lods
mov
jle
add
enter
jne
pusha
xchg
sub
mov
push
jecxz
add
push
push
jo
and
cmp
mov
cmp
orl
movsb
es
cmp
cmpsl
lods
mov
and
cmpsb
je
icebp
or
mov
mov
mov
clc
mov
loope
inc
jp
iret
outsl
test
adc
jg
cmp
scas
inc
cli
lret
cmp
roll
lahf
rolb
orb
decl
pop
push
jo
fistpl
pop
loope
xchg
pop
out
mov
cwtl
push
and
push
mov
dec
or
xchg
cmpb
adc
jp
scas
jno
xor
test
ret
gs
mov
dec
fs
popa
lcall
jge
fbstp
cmp
nop
fmuls
xchg
pop
arpl
es
pop
clc
data16
xchg
test
add
inc
sub
pusha
dec
jnp
mov
inc
jmp
fcmovnu
jecxz
cmp
movsl
jmp
lock
adc
add
push
mov
jge
icebp
mov
xor
sub
dec
aad
push
jnp
lock
insb
bound
jae
testl
repnz
adc
mov
sub
sbb
popa
push
xchg
pushf
daa
or
mov
ljmp
dec
or
bound
cmpsb
inc
out
movsb
sub
sbb
pop
in
or
jbe
movsl
push
shll
aas
or
push
test
mov
mov
scas
and
and
xor
pop
adc
push
or
lds
outsl
loopne
aam
xchg
repnz
xchg
and
jecxz
lock
xchg
push
push
pusha
dec
insl
stc
bound
out
cmc
cmp
and
adc
ret
inc
test
pop
mov
mov
call
ret
sbb
test
push
insl
jmp
inc
andb
bound
dec
pop
mov
add
mov
test
out
aas
pop
sub
in
xchg
inc
pop
dec
inc
scas
addr16
and
pusha
movsl
je
adc
push
js
data16
std
sub
outsb
mov
rcr
mov
pop
inc
lock
es
add
iret
mov
dec
and
test
add
mov
int3
clc
lds
pop
or
jne
jle
push
xor
out
mov
xor
imul
and
shll
shr
punpckhbw
lock
cmp
fwait
inc
xchg
rcll
ja
cwtl
mov
fsubl
push
jnp
das
jp
dec
push
call
add
jo,pt
jle
int3
mov
jecxz
and
jno
pop
out
ds
lcall
fdivrl
fcmovnu
sub
stos
sbb
test
mov
sbb
cltd
imul
sbb
insl
xchg
lods
data16
push
ds
out
imul
jne
mov
jge
xchg
ret
fwait
xchg
jl
test
xor
inc
push
stos
aas
and
fxrstor
cs
xchg
in
andl
xchg
dec
and
jnp
lret
fnstcw
xchg
nop
je
lret
ljmp
mov
stos
mov
mov
dec
add
sub
mov
js
scas
sub
cmpsl
inc
push
aam
xchg
xchg
shrb
pop
stos
int
pop
sbb
mov
in
sub
cmpsb
std
mov
sahf
decb
inc
fsubs
scas
das
and
or
push
xchg
fwait
mov
adc
jae
mov
lods
stos
push
sbb
cmp
repz
mov
jns
or
loopne
xchg
adc
fs
mov
dec
fprem1
inc
jae
jl
aas
ficompl
stos
fildll
jae
push
std
or
mov
lcall
iret
mov
cmpl
outsb
repnz
paddw
lret
mov
and
into
mov
lods
cld
repnz
inc
jne
xor
fldcw
jp
sahf
inc
add
outsb
mov
test
idivb
movsl
dec
sahf
xlat
jp
scas
in
and
fdiv
and
sqrtps
adc
scas
mov
in
and
mov
jno
popf
push
ret
cmp
repnz
xchg
jge
lods
fwait
push
cmp
iret
ret
imul
sbb
inc
inc
lcall
je
and
xor
nop
cli
imul
shlb
push
dec
mov
out
stc
in
fcmovb
roll
cmp
cmp
push
cmpsb
out
lret
push
adc
jp
push
rcl
adc
test
dec
loop
sub
sub
push
std
mov
lds
addr16
cmp
cwtl
lea
xchg
and
push
nop
xchg
ljmp
fildl
in
sbb
xchg
sub
cmp
insl
repnz
mov
std
fwait
je
sarl
ja
fdivrl
mov
inc
imul
xor
push
sti
xchg
mov
or
sub
mov
fst
out
lret
test
jge
adc
cmp
sti
shlb
fwait
xor
repz
adc
loopne
push
cwtl
cmc
and
shll
jo
pusha
addr16
loop
jno
mov
sub
pop
es
dec
mov
push
mov
sub
pushf
sbb
fstpt
fnstsw
add
outsl
and
addr16
pop
loop
sub
mov
cs
nop
pop
repnz
cmp
xchg
mov
pop
mov
sbb
sbb
fildll
pop
lret
or
in
fimull
pop
jecxz
lods
das
sbb
loopne
cmp
dec
addr16
sbb
lret
sub
or
shll
add
stos
jbe
add
loope
dec
fnstenv
push
pop
ret
sub
add
sbb
loope
or
test
pop
mov
xor
dec
clc
mov
lods
out
xchg
mov
fsubl
into
iret
xchg
repnz
add
lret
xor
pop
outsb
mov
adc
jl
jg
cmp
shrl
ljmp
cmp
sti
adc
decb
test
dec
push
sarb
and
fimuls
mov
cld
or
aaa
icebp
test
sbb
outsb
mov
out
decl
mov
and
std
cmpsl
adc
push
into
testl
push
cmp
xor
roll
sub
pop
insl
fdiv
clc
outsb
push
stos
mov
in
lret
popf
nop
and
inc
test
sub
mov
inc
push
insb
pushl
inc
mov
pop
fcomps
pxor
out
xchg
enter
or
or
daa
mov
add
lret
push
enter
push
mov
jmp
mov
icebp
jb
dec
sub
sbb
jle
xchg
dec
mov
ret
std
mov
jl
scas
xchg
in
bound
lahf
lret
daa
dec
adc
pop
orl
fwait
lock
sub
cmp
loope
repnz
mov
inc
lods
or
add
repz
scas
mov
mov
sub
test
push
push
repnz
xchg
add
jecxz
in
call
imul
ret
jmp
lret
das
mov
je
push
jno
daa
pop
out
dec
xchg
out
pop
mov
iret
cmp
into
insb
gs
jae
fnstsw
ret
lock
arpl
icebp
sbb
out
rcrb
sti
sbb
xchg
je
cmp
out
orb
push
mov
loop
call
outsb
decb
fsubl
je
imul
pop
xorl
gs
popa
mov
ljmp
aas
imul
mov
cmpsb
popa
mov
push
mov
push
pop
mov
test
or
enter
lods
jo
fidivs
adc
fcoml
sub
cmp
mov
lods
pop
flds
imul
mov
adc
das
sbb
aas
ficompl
jbe
shlb
fs
and
sub
cli
pop
push
or
lahf
sub
jmp
or
out
add
jno
ss
mov
rcrb
mov
dec
push
rcl
lret
dec
and
shr
gs
aas
stos
jno
repnz
stos
mov
stos
jo,pn
pop
test
rcl
ljmp
jl
or
in
movsb
loope
ret
dec
mov
xchg
mov
stc
push
add
mov
inc
in
orps
pop
sbb
repnz
aaa
xlat
mov
aam
popf
mov
inc
add
pushf
iret
fnstcw
clc
sar
fs
mov
mov
and
or
ds
xchg
pusha
cmp
mov
in
lcall
dec
rclb
iret
jbe
push
jg
std
or
icebp
cmpsb
out
sbb
ds
dec
sbb
xor
out
sub
cmc
xchg
push
or
mov
jl
cwtl
jmp
mov
les
cmp
sbb
lea
xor
cwtl
add
scas
adc
ret
scas
sub
out
inc
and
push
fdivrl
sbb
in
xor
arpl
in
outsl
pop
jo
ja
mov
dec
jno
jae
testb
cld
and
and
mov
rolb
push
dec
jno
sbb
mov
cs
push
jle
xchg
push
and
cwtl
mov
pop
mov
jbe
mov
inc
cmpsl
sub
imul
or
test
aas
scas
inc
push
xor
adc
dec
mov
lret
test
cmp
cmp
mov
inc
push
frstor
jmp
cwtl
jno
into
or
mov
inc
mov
lea
mov
jge
xchg
mov
and
push
cmp
addl
aaa
pop
hlt
add
push
lcall
sahf
or
insb
jmp
ja
dec
mov
xchg
in
inc
add
mov
fwait
mov
sbb
sbb
xchg
aad
lods
xor
jecxz
shlb
add
jecxz
pop
es
ss
movsb
mov
inc
mov
dec
movsl
mov
cmc
push
rcr
stos
rorb
mov
mov
adc
imul
xor
adc
lods
lods
adc
mov
mov
fldt
adc
jge
fwait
pop
dec
xor
or
popf
and
sbb
or
cmp
inc
mov
insl
ds
popa
jns
xchg
in
nop
dec
stc
mov
cmp
call
sbb
xchg
xchg
je
xor
cld
lock
dec
mov
sti
jnp
pop
dec
xorb
lahf
and
mov
notl
pushf
iret
in
xchg
jo
cmp
and
gs
pop
cwtl
inc
lahf
mov
xorl
inc
and
inc
ud0
adc
dec
push
pop
lea
addr16
js
adc
pop
gs
add
mov
test
je
xor
repz
mov
mov
rolb
sti
pop
cs
cmc
lcall
pop
dec
sbb
fsubrp
out
insl
push
cmp
inc
sbb
push
sub
jecxz
mov
xor
dec
roll
add
sbb
adc
jb
add
sub
dec
cmp
leave
xor
inc
push
hlt
ret
mov
out
rorb
call
in
mov
jbe
and
adc
xor
iret
or
xor
in
int3
jne
nop
dec
sarl
push
dec
adc
add
imul
push
jns
incl
bnd
cmp
movd
clc
hlt
xor
sbb
call
lock
scas
xor
rol
sub
std
cmpsl
mov
std
ljmp
mov
aam
xchg
mov
ror
std
mov
es
out
inc
call
cmpsb
ss
add
mov
pusha
push
cmc
jae
mov
mov
faddl
jns
movsb
mov
inc
or
jb
dec
mov
ret
pop
insb
jne
push
lods
push
adc
ja
add
in
cwtl
jnp
cmp
fwait
sbbl
std
inc
pop
jbe
sub
outsl
push
and
mov
gs
adc
mov
insb
arpl
sbb
test
mov
adc
stc
int3
jno
xchg
popa
jge
icebp
lea
loopne
cmp
mov
in
or
and
pushf
jbe
mov
adc
inc
sbb
xor
jp
mov
inc
int3
js
sub
fstp
push
iret
shrb
mov
mov
cmp
or
add
shrl
jl
xor
adc
mov
daa
insb
jb
mov
mov
imul
lods
and
sub
xchg
or
push
pop
and
or
mov
add
iret
lea
insl
out
aad
inc
add
repz
jb
and
mov
mov
xchg
in
adc
mov
arpl
adc
ds
xor
add
insl
push
pop
sbb
xor
xor
pop
inc
sub
sar
cmp
adc
scas
fildl
shr
notl
sub
loopne
adc
push
adc
xchg
out
cmpsl
sub
mov
cmp
sub
pop
out
sbb
xor
sub
lret
mov
inc
jne
jbe
lea
jo
pop
xlat
outsb
mov
insb
arpl
xor
pop
aaa
mov
dec
dec
cmp
mov
cmpsb
mov
mov
pop
rclb
adc
jmp
mov
pop
or
daa
mov
and
dec
es
jge
rcl
loopne
inc
jb
clc
je
pop
or
popa
mov
fadds
stc
andb
push
fs
sbb
enter
push
jl
inc
js
divl
mov
data16
rclb
and
fldl2e
insl
push
mov
jnp
jae
pop
jne
pop
jnp
xchg
jge
mov
lcall
mov
imul
jnp
add
dec
cmpsb
jge
xchg
shlb
pop
lahf
repnz
sbb
add
in
scas
xchg
test
std
xor
les
xchg
in
ret
out
out
sub
pop
push
fs
push
sub
mov
or
leave
inc
and
jle
jno
push
cs
pop
loop
fstl
subb
bound
cmp
stos
mov
inc
test
or
mov
aas
divb
xchg
andb
cmc
lret
andb
mov
pushf
and
mov
in
sbb
cld
inc
inc
xor
js
scas
xchg
loopne
out
and
inc
push
sbb
pop
pushf
xor
push
xchg
push
add
rcrb
mov
push
mov
cs
dec
loope
pop
xchg
mov
pop
push
addr16
mov
cmpsl
das
xor
mov
stos
push
insb
add
dec
mov
xor
sub
in
decb
rclb
sub
push
in
adc
push
movsl
in
cmp
ljmp
nop
std
incb
test
inc
in
pop
jns
xorl
repz
sbb
ljmp
ljmp
inc
or
into
mov
mov
enter
shll
daa
bound
out
or
scas
cmpsb
repnz
mov
inc
rolb
sbb
xchg
addb
xchg
andl
and
jmp
imul
mov
xchg
cmpsl
or
sahf
outsl
mov
data16
repnz
arpl
xchg
fstpt
shlb
pop
sti
gs
test
roll
and
cli
jae
mov
in
cmp
sbb
mov
dec
pop
sbb
mov
xor
jg
pop
xlat
xlat
mov
inc
ficompl
xchg
cmpsl
clc
push
add
fsubrs
loope
push
sahf
and
dec
out
xor
sbb
dec
cmp
or
shl
icebp
mov
mov
push
pop
setp
sahf
jge
popf
jecxz
and
jns
pop
dec
push
mov
das
bound
hlt
adc
mov
data16
jne
jg
lret
data16
lods
sub
test
fstl
bound
ja
jmp
sbb
jmp
dec
or
fstp
inc
xchg
inc
and
ficomps
xlat
aaa
cmp
and
les
pop
mov
rcll
sbb
inc
fdivrl
clc
cwtl
les
je
push
push
inc
xchg
and
mov
push
xlat
xchg
or
mov
icebp
scas
mov
imul
sub
xchg
or
ds
in
divb
les
sbb
lret
cmp
rorl
daa
mov
mov
inc
es
jne
fldenv
loopne
test
mov
movsl
xchg
pop
imul
sub
out
cmp
outsb
gs
dec
mov
mov
dec
adc
push
fwait
and
adc
cmp
jp
lods
enter
dec
mov
cld
inc
cmc
or
aad
lcall
sarb
call
sub
lods
xchg
or
ss
and
jb
out
inc
mov
or
dec
addr16
cmp
sahf
xchg
xchg
lret
jecxz
inc
mov
ret
cmp
mov
pop
and
add
lds
or
cmp
xchg
push
or
xor
push
addr16
inc
jecxz
les
out
stc
insb
inc
scas
fists
sub
test
pop
dec
xchg
inc
andb
lds
or
lret
cltd
call
cwtl
fidivrs
stc
outsl
mov
loopne
cmc
xchg
je
iret
addr16
jns
push
daa
or
sub
dec
ficoml
or
xchg
xor
adc
xchg
dec
cltd
movsl
or
mov
mov
xchg
insb
mov
out
dec
push
aad
cmpsl
in
jmp
cmc
cmpb
inc
pop
add
fmull
aas
sub
call
mov
mov
mov
lods
and
imul
cltd
cld
inc
lock
insb
or
ss
shr
in
outsb
leave
dec
fistpl
call
mov
in
cmp
iret
hlt
int
in
std
popa
insb
push
rcll
ret
sub
mov
and
add
pusha
je
into
mov
cwtl
jg
std
test
sti
jnp
dec
aad
repnz
xor
loop
stos
xchg
xchg
outsb
mov
mov
out
stos
je
insl
xor
mov
loop
inc
divb
rorb
lret
sbb
push
sarl
imul
mov
out
orb
sub
mov
insb
push
dec
jnp
out
int
shrb
push
mov
adc
jmp
cld
insb
lods
repz
add
das
xchg
mov
gs
xor
pop
pop
or
sub
inc
ret
inc
pop
jle
int
adc
movsb
xorb
xchg
test
loopne
stc
mov
pop
call
push
lret
and
cltd
cmpsb
in
lds
and
jns
cmp
and
jmp
jo
dec
rol
fstl
fldt
inc
fidivs
mov
lahf
pop
jg
shl
sub
push
imul
mov
dec
cmp
sbb
into
or
and
rorb
jno
outsb
loop
lods
mov
mov
push
jmp
adc
sub
mov
pusha
cmpsl
inc
sub
inc
xor
mov
dec
shlb
hlt
movsb
fimuls
jbe
lahf
inc
add
test
in
dec
dec
xchg
mov
jl
or
and
mov
or
popa
or
imul
dec
imul
aaa
dec
mov
xchg
sbb
sub
filds
inc
iret
cmp
inc
call
cwtl
cmpl
xor
xor
xchg
or
ficomps
sub
mov
loope
jns
rcrb
iret
rcrb
or
dec
aad
dec
cmpsl
push
cltd
mov
loop
jbe
into
popa
mov
jmp
repz
xor
and
xrelease
out
sbb
fsubrl
aaa
jp
adc
jle
bound
add
cmc
dec
in
loopne
mov
dec
outsb
cwtl
fadds
jb
jmp
hlt
push
jp
out
push
sbb
out
daa
leave
mov
fldt
mov
notb
test
push
pusha
stc
mov
aaa
jnp
pop
sbb
mov
nop
popa
jge
or
test
or
gs
adc
ret
data16
sbb
push
or
cmp
push
push
mov
in
inc
ja
jg
shrb
iret
lahf
cmpb
xor
rorb
es
lret
jnp
mov
out
popf
fistpll
push
jle
push
sub
mov
push
add
mov
sahf
idivl
inc
daa
movsb
add
sahf
push
lods
push
shr
xchg
daa
add
cmc
pop
lds
das
mov
mov
mov
pushf
push
or
add
xchg
insl
scas
xchg
inc
cltd
sub
xorl
mov
and
or
mov
sbb
dec
int3
int3
mov
rorl
xchg
lock
idivl
push
gs
cmovl
fnstcw
div
in
mov
int3
sbb
pop
mov
push
scas
ljmp
adc
mov
mov
and
jnp
rol
pop
leave
insl
or
jge
pushl
add
dec
dec
aad
xchg
ficompl
clc
hlt
ds
lock
and
cld
xchg
fwait
mov
push
dec
repz
mov
pop
dec
dec
test
stc
xchg
fistps
int3
inc
push
cwtl
mov
mov
movsl
cmpsb
jg
dec
push
roll
icebp
mov
jnp
out
iret
inc
repz
push
daa
rcrl
in
adc
push
push
and
loope
push
pop
mov
cmp
movsl
and
flds
dec
cmp
dec
jo
pop
cmp
mov
sti
lock
push
les
xchg
adc
movzbl
lods
addr16
mov
adc
test
in
sti
dec
or
jo
scas
mov
js
pop
lds
jno
xchg
mov
mov
or
test
pop
and
pop
mov
lds
cmpsl
lahf
sbb
push
insl
movsl
jae
mov
inc
clc
mov
adc
sub
mov
dec
stc
shl
sub
push
xor
or
aad
xor
iret
iret
mov
cltd
nopl
addl
push
testl
xchg
kmovw
mov
sub
inc
or
and
and
or
xchg
mov
rorl
jl
sbb
popa
jne
jns
imul
mov
orb
in
mov
dec
cmp
mov
push
sbb
xchg
fsubrs
add
mov
add
dec
subb
pushf
repz
mov
jmp
jmp
push
fsubl
fildll
inc
mov
xor
jbe
sub
aas
or
sbb
add
inc
cs
into
pop
in
jns
hlt
aas
push
dec
sbb
ja
pop
dec
jge
jno
or
stos
xchg
out
mov
or
sar
and
lahf
repz
sbbl
and
gs
sbb
jmp
mov
stc
sbb
aad
cwtl
mov
fdivl
js
outsl
mov
les
xor
sub
adc
jg
out
cmp
cmp
pop
popa
add
mov
dec
pusha
jae
xor
call
cmpsl
out
bound
jg
push
pop
inc
inc
sub
lds
cmpsb
je
xor
push
in
clc
cli
pop
lods
and
ror
in
cs
xchg
ljmp
aad
xor
mov
or
cmpsb
lea
enter
mov
adc
pushf
xor
mov
or
jnp
mov
adc
dec
lret
daa
sub
pop
movsb
rol
out
outsb
dec
push
outsl
push
xchg
negl
adc
in
fmuls
cmpsl
mov
and
mov
cmc
outsb
in
cli
gs
lea
xchg
inc
dec
es
mov
add
xchg
inc
and
push
jbe
mov
pop
inc
icebp
and
mov
jns
aas
dec
and
pop
adc
dec
add
xor
inc
stc
mov
sbbb
insl
hlt
add
mov
dec
lcall
mov
shlb
sbb
xor
ret
inc
lahf
inc
pop
pop
cmpsb
imul
dec
nop
pop
in
push
cli
call
aas
cmp
pushf
push
movsl
pop
fdivrs
xor
repnz
push
fistpl
add
mov
pop
mov
mov
dec
mov
or
mov
ret
movsb
pmullw
popf
dec
stos
mov
cmp
div
sub
mov
in
push
aam
push
popa
imul
adc
dec
scas
into
xchg
dec
imul
int
sub
testl
add
adc
movsb
cmp
cld
rorl
inc
dec
pop
fisttpll
movsb
jmp
mov
js
out
mov
jg
adc
frstor
out
or
push
adc
jg
or
nop
arpl
adc
movsb
mov
ror
icebp
test
dec
ss
lock
pop
and
out
imul
adc
lret
test
imul
mov
jle
xor
sub
or
iret
xchg
movsb
pop
fimull
nop
gs
loopne
inc
push
jge
out
aam
je
add
mov
or
xchg
in
xor
xorl
inc
pushf
out
popl
out
ja
adc
in
sbb
je
xchg
and
push
pop
out
or
add
jmp
jae
lods
ret
jl
hlt
push
jb
imul
dec
and
and
mov
lock
push
jge
sbb
jnp
outsl
call
mov
xor
cmp
ljmp
pop
leave
jae
clc
jbe
repz
sti
xchg
sub
add
ja
mov
into
and
mov
dec
jno
scas
stc
sbb
add
mov
fwait
das
lds
mov
xchg
jge
sbb
idivl
xchg
js
shrl
pop
lret
sbb
sub
or
mov
gs
mul
mov
add
jno
push
mov
out
fdivrs
and
jo
pop
xor
cmpsl
mov
fucomp
xchg
sub
repz
cmp
lock
pop
je
clc
and
punpckldq
fwait
sub
and
ss
in
lcall
and
jle
and
pop
and
addl
pop
ds
outsb
inc
cli
mov
scas
or
xor
xchg
cs
nop
xchg
mov
cmp
scas
sbb
call
not
jle
sbb
pop
addr16
inc
push
dec
push
mov
mov
xchg
or
popa
jmp
ja
js
aad
pop
nop
shl
jle
mov
outsl
icebp
or
nop
mov
inc
push
xchg
cmp
rclb
pop
imul
cmp
inc
mov
mov
into
les
inc
lahf
mov
scas
stos
mov
mov
mov
xchg
sub
xchg
mov
jne
mov
sub
cmp
sub
adc
xchg
add
in
xbegin
cld
ds
xor
xchg
popa
dec
sub
rcrl
ljmp
in
hlt
push
dec
mov
inc
inc
pop
and
std
add
test
adc
push
mov
cmp
jbe
sbb
adc
lock
ds
insl
jg
out
xchg
dec
cmp
nop
mov
inc
xor
sub
out
loopne
and
gs
push
lds
jb
out
pushl
nop
mov
inc
dec
loopne
xchg
lret
mov
andb
mov
cmpsl
dec
jnp
sub
lods
add
push
dec
sub
xor
lcall
xor
inc
mov
test
mov
sub
inc
mov
shll
aas
ja
hlt
imul
add
out
or
dec
adc
mov
aad
mov
outsl
out
cmp
or
sub
dec
mov
ljmp
out
in
in
ss
ret
fidivrl
jp
and
xor
stos
sbb
xchg
repz
out
lcall
loope
push
out
test
sub
aaa
push
outsb
adc
stos
add
xchg
in
xchg
push
andl
inc
cmp
pop
adc
shlb
shll
mov
aam
xchg
js
pushf
mov
jbe
mov
mov
sbb
out
popf
mov
mov
xchg
mov
and
sbb
cld
xor
pop
dec
cmpsl
fsubrl
ret
mov
ret
js,pt
mov
test
mov
out
lcall
xor
js
fisttpl
add
scas
add
inc
mov
jae
xchg
pop
cmpb
dec
mov
adc
fstpl
mov
mov
movsb
fstpt
sbb
divb
sbb
js
icebp
out
push
pop
mov
sbb
sbb
mov
adc
fs
mov
fistps
pushf
add
neg
les
sahf
push
xor
jp
sbbb
jbe
mov
add
lret
incb
adc
fdivl
sub
hlt
push
out
add
mov
inc
xchg
cmpsb
fcoml
imul
lcall
and
inc
pusha
and
cli
lahf
mov
hlt
fcompl
jg
mov
fdivrs
and
popf
cmp
dec
into
sarb
sbb
sub
mov
or
ucomiss
mov
xorb
xlat
add
je
pop
insb
outsb
test
rolb
sub
mov
mov
and
out
sti
or
lret
pop
adc
mulb
sbb
lds
push
mov
jle
sbb
cmovbe
jge
jnp
cmp
push
in
push
out
mov
jmp
jbe
pop
dec
lahf
insl
pop
lcall
inc
add
pop
and
stos
and
fldcw
ljmp
rcr
push
inc
data16
mov
xor
and
jmp
fwait
enter
push
jle
cmp
cmc
movsb
xor
mov
xchg
dec
test
pop
mov
push
repnz
add
cmp
jle
xor
dec
lods
and
mov
xor
pushf
outsl
loopne
dec
loop
mov
add
sbb
mov
add
push
or
scas
outsb
aam
loopne
mov
xchg
xor
push
or
cwtl
out
into
adc
test
jns
pop
dec
in
xchg
popf
aaa
ds
fs
mov
inc
out
xchg
sete
stc
clc
cmpl
ds
sarb
fxch
lock
cmp
push
lods
mov
movsl
xor
xchg
push
jbe
push
mov
cmp
adc
mov
and
fmull
stos
ret
mov
movsb
lods
pop
das
inc
inc
dec
mov
out
sbb
mov
pop
lahf
ror
lds
sub
add
adc
mov
hlt
les
push
into
das
hlt
scas
outsl
add
xchg
mov
cmp
test
and
or
insl
stos
in
dec
popa
pop
pop
ja
xchg
mov
cli
push
jno
sahf
mov
pop
jl
mov
sub
jl
lods
push
mov
jbe
mov
mov
mov
xchg
imul
add
lds
push
sub
aas
ret
imul
fld
out
mov
enter
outsb
testl
pusha
mov
ss
pop
sbb
jl
sbb
incl
notb
rcll
fsin
stc
xor
mov
aas
sub
mov
leave
push
sahf
pop
lahf
dec
adc
shl
jno
int3
cmp
sbb
mov
or
frstor
inc
rcll
inc
xchg
incb
lret
jo
or
mov
out
test
inc
test
std
add
stos
cmp
lock
stc
and
mov
pop
loope
call
imul
pop
cwtl
sar
orl
shl
add
lods
xchg
icebp
adc
xchg
xchg
jnp
sub
popa
mov
into
adc
or
mov
mov
out
sbb
jb
stos
std
or
repnz
push
jns
mov
push
dec
xor
mov
mov
outsb
mov
js
pop
test
xchg
and
repnz
mov
cmp
mov
fisubl
sahf
std
xchg
insb
xchg
mov
jnp
ror
sar
cmpsl
mul
jae
shl
dec
add
movsb
shll
scas
pop
push
dec
dec
jle
cwtl
in
dec
out
gs
pusha
dec
mov
push
lret
fldl
icebp
adcb
bound
nop
lret
push
mov
int3
xchg
mov
in
xor
iret
scas
adc
and
repnz
subl
cmpsl
pop
stos
lods
test
pop
xchg
sbb
mov
mov
insl
inc
fdivrs
xchg
jp
insl
sub
mov
pop
adc
fs
jns
push
jo
loope
sbb
loope
or
dec
jecxz
lahf
aas
fistpll
je
jo
fsubrs
bnd
mov
cmp
das
aas
insl
cmpsl
jecxz
sub
inc
sbb
jl
xchg
lret
ds
dec
pmaddwd
in
outsb
adc
jmp
mov
in
sahf
or
lret
dec
in
dec
imul
gs
adc
enter
add
rcrb
and
pushf
or
fisttpl
adc
xor
xor
rorl
je
add
in
adc
in
aam
or
add
mov
mov
cltd
movsl
scas
test
gs
inc
lea
or
jmp
insl
cwtl
ret
add
sbb
mov
icebp
pop
aaa
mov
push
imul
fbstp
sub
insb
outsb
mov
dec
push
xor
ljmp
jmp
das
dec
xchg
xchg
arpl
shr
sub
jne
lods
mov
movb
test
push
mov
movsl
xlat
cmp
mov
in
cmpl
xchg
ss
mov
lea
mov
xchg
pop
pop
lods
cmp
mov
out
scas
cmp
notb
and
lods
xor
call
lods
mov
movsl
ljmp
add
popf
dec
fdivr
dec
xlat
jl
repz
rcrb
xor
je
push
nop
cmp
sbb
bound
push
mov
adc
xchg
mov
arpl
popf
imul
fists
pop
int3
lods
test
es
xchg
repz
aam
mov
lods
ss
mov
daa
dec
pop
jg
ficompl
mov
pop
lods
fwait
rorb
pushf
mov
jns
add
xchg
mov
icebp
fsubl
push
push
sbb
outsl
inc
xor
or
mov
push
popf
push
xlat
jb
add
insl
adc
inc
sub
shll
fs
push
dec
fs
pop
lcall
stos
pop
scas
insb
sub
mov
aam
inc
xor
daa
push
push
stc
mov
push
xor
inc
pop
cmp
dec
repz
dec
and
scas
mov
repz
push
ret
aas
push
and
mov
push
hlt
push
imul
stc
shlb
int
lods
rcrl
pop
ljmp
pop
cmpsb
and
mov
shlb
bnd
loop
inc
adc
mov
jmp
sete
addr16
push
jno
mov
jle
addr16
jg
in
test
mov
lds
lahf
xor
ret
stos
fsts
test
fimuls
dec
jb
jmp
call
and
stos
std
test
std
std
dec
xor
lret
fsts
aas
sbb
pop
fbld
bound
stos
add
sub
cmpsl
xchg
pop
sub
add
push
sbb
cltd
pop
push
push
and
mov
cmp
pop
cmp
in
stos
mov
out
loop
into
loop
in
cmc
pop
mov
gs
cmp
dec
jmp
fistpl
lds
aaa
cmp
push
push
out
sub
push
sbb
xlat
sbb
mov
xor
fistps
int
mov
cmp
mov
lods
out
inc
adc
imul
fisttpll
jae
incb
xor
xchg
call
repz
es
add
movsb
pop
andl
cmp
xchg
inc
jecxz
jl
lahf
fistps
test
or
ja
movsb
in
sahf
sar
in
xchg
add
iret
jo
lahf
cmc
jno
pop
cmc
ljmp
popf
daa
ja
push
add
pop
mov
imul
fdivs
cmp
mov
sti
dec
jae
fcmovb
repnz
push
mov
outsb
lea
lea
adc
add
movsl
lret
jl
out
mov
mov
jecxz
xlat
inc
jge
cmp
dec
lea
jae
shrb
mov
xchg
test
add
popf
jns
imul
sti
test
movl
cmp
cmpsb
xor
xor
pusha
inc
mov
xlat
movsb
popa
movsb
xor
jecxz
movsl
lods
adc
jns
cld
xchg
jae
mov
and
addl
pop
mov
movsl
mov
push
insb
lock
jmp
cltd
cmc
mov
mov
rcl
leave
repnz
xor
mov
add
fistpll
arpl
adc
ss
out
loope
cli
sar
cld
pop
dec
les
xor
mov
mov
jl
cvtps2pi
sahf
subb
cwtl
cmp
jno
cmp
insl
popa
jecxz
xchg
push
fnstsw
cld
movsl
into
fwait
and
dec
pop
adc
sahf
pusha
loope
mov
imulb
jle
leave
ds
hlt
dec
data16
fistpll
arpl
imul
call
jmp
mov
inc
adc
or
test
gs
stc
arpl
aam
cmp
mov
cmp
push
mov
fstps
outsl
sub
add
ret
sbb
mov
cwtl
mov
mov
mov
adc
sub
and
les
outsl
int
push
mov
sub
xchg
mov
inc
xor
inc
pop
sbb
js
mov
mov
insb
mov
dec
arpl
dec
mov
push
loope,pn
push
mov
movl
js
xchg
cmpsl
mov
std
mov
sub
sub
and
sti
mov
jmp
or
mov
mov
cmp
popa
sbb
cmpsb
jne
xchg
xchg
push
cmp
test
fwait
mov
in
aam
mov
fdivr
stc
adc
add
fwait
push
mov
sbb
and
dec
mov
mov
das
add
sub
stos
pop
nop
shlb
ficoml
or
add
push
outsb
outsb
pushf
int
les
fmull
fsts
xbegin
mov
mov
pop
sub
cmp
bound
rcll
imul
xor
lds
sbb
adc
inc
popa
inc
scas
insl
out
jmp
mov
xchg
bnd
jno
adc
sar
mov
jae
push
push
out
mov
xor
and
insb
mov
roll
add
add
fstl
xor
imul
xlat
xor
outsb
jmp
repnz
lds
test
imul
dec
cmp
mov
js
pop
mov
dec
cmpsl
addr16
inc
jmp
jl
enter
cmp
into
lods
lea
fpatan
in
dec
cmp
loop
addr16
into
mov
jmp
pop
fidivl
mov
xchg
add
fisttpll
inc
add
inc
jno
pop
ljmp
ret
adc
insb
movb
or
movsb
mov
aam
insb
cmp
inc
stc
jecxz
push
movsb
jbe
xchg
dec
jecxz
or
mov
cmp
ds
mov
mov
call
aas
ss
lds
dec
adc
mov
stc
enter
push
push
pop
sbb
mov
dec
scas
jecxz
mov
addr16
test
jne
jg
rorb
pop
jl
jo
adc
jge
xchg
or
pusha
jl
sbbb
dec
sti
push
sbb
mov
mov
lret
scas
ret
fsubrs
into
shr
sbb
ja
adc
sbb
mov
ljmp
jmp
push
push
icebp
ds
insl
fisttpll
push
das
push
notl
fistps
jno
cmp
xchg
mov
sbb
iret
inc
xor
mov
imul
sub
outsb
imul
add
mov
andb
sbb
int3
inc
sbbl
push
sub
mov
stos
ds
push
lret
popa
jl
mov
mov
sbb
inc
pop
sar
xchg
cmp
hlt
lea
add
iret
adc
subl
ret
pop
insl
and
faddl
cmp
ret
hlt
push
notl
stc
push
movsl
jb
shll
into
mov
add
jno
push
sahf
add
hlt
mov
sbb
and
sbb
mov
lahf
cmp
test
notl
fstl
lds
mov
gs
pusha
ror
lahf
sub
and
inc
xchg
out
sbb
pop
pop
pop
pop
sbb
push
int3
imul
ss
mov
mov
pop
pop
fadds
rorl
push
dec
mov
dec
mov
movsb
in
inc
into
loopne
out
call
xor
xchg
push
cwtl
pop
dec
sarb
mov
cmp
idivl
xor
and
dec
arpl
outsb
je
push
adcb
push
rolb
ret
mov
in
jae
push
loop
or
or
or
mov
fsubl
dec
lea
add
cmpsb
mov
add
repz
xchg
pop
push
push
or
pushf
xlat
lds
cmpsl
sub
add
insb
jl
repz
push
xchg
jge
test
out
arpl
jne
pop
pop
jo
sbb
or
add
or
and
fiadds
and
popf
lahf
pop
rorb
test
push
in
jecxz
adc
sub
into
xchg
stos
bound
mov
dec
out
adc
shlb
mov
mov
and
push
push
mov
loopw
jo
sub
xor
lahf
jne
mov
imul
loop
xchg
imul
jnp
dec
movsl
gs
cmp
fisubrl
ret
insl
jg
push
push
xor
push
sbb
int
xchg
sbb
ror
movsb
jne
loopne
nop
sub
xor
out
test
mov
pop
jmp
ljmp
mov
xlat
pop
ret
nop
mov
hlt
ljmp
and
xchg
lret
rcrl
fldcw
fisubrl
inc
outsb
mov
nop
pop
aam
pop
daa
test
push
cs
mov
add
add
cmp
cmp
test
sub
es
imul
lods
mov
jle
lock
sub
and
or
mov
in
dec
jns
int3
loope
or
jbe
cltd
fucomip
sbb
in
push
jnp
mov
sbb
mov
out
add
pop
or
js
adc
jnp
pop
adc
push
and
faddl
cmc
sub
inc
pop
jge
sub
insl
test
arpl
idivb
pop
js
mov
lret
mov
gs
xchg
iret
pop
pop
aas
out
outsl
cs
fimuls
and
fldt
and
mov
inc
cltd
sbb
cltd
clc
pop
cmpsb
ret
and
sti
xlat
ds
mov
scas
add
xor
cmpsb
and
and
aam
insl
push
mov
jl
aaa
mov
call
rcrl
inc
hlt
mov
jns
and
ljmp
loope
push
iret
cmp
xlat
cmp
cmp
lea
orl
lea
cs
dec
add
mov
ljmp
sbb
xchg
xor
mov
aam
mov
lret
pop
call
jb
jl
pusha
roll
stc
ffree
lods
cltd
adc
test
ret
fsubrl
leave
mov
cmpsl
in
loopne
push
cli
scas
sahf
mov
mov
out
mov
mov
int3
mov
xlat
test
jmp
arpl
xchg
out
lcall
filds
cld
movsl
hlt
sbb
out
mov
out
dec
test
dec
pop
shrl
pop
fdivrs
int3
les
mov
dec
scas
mov
add
inc
xor
rorb
inc
lock
dec
lret
test
sub
xchg
in
pop
testl
lret
sub
roll
or
jmp
sub
mov
add
js
shrl
nop
fisubrl
scas
cs
xor
movsl
fists
xor
xchg
lds
jbe
int
sub
cmp
test
cltd
ret
dec
sahf
out
push
fstl
into
movsl
pushl
fisubs
hlt
mov
add
adc
dec
add
mov
fsubs
push
das
rorb
repz
das
add
mov
mov
bound
fldt
pushf
les
insb
adc
sbb
mov
fsubl
pop
mov
pop
inc
sub
xorl
inc
cmp
test
orl
sub
test
dec
xor
pop
jno
lock
dec
dec
mov
or
dec
cld
mov
test
out
cmp
je
push
les
in
shll
mov
lds
popf
test
cli
fldl
jnp
and
es
push
aas
xor
inc
shlb
nop
sbb
cld
test
dec
sbb
mov
xchg
insl
push
xlat
push
mov
loope
xchg
jbe
fnstenv
in
push
shr
mov
mov
dec
jno
call
pop
aaa
xor
cmc
dec
jmp
pop
gs
out
mov
cs
xchg
xchg
stos
fistpll
fistl
jp
sarb
or
xchg
pop
cmp
mov
faddp
adc
lods
mov
lock
cmpsl
sbb
sti
ljmp
or
addr16
jne
dec
or
out
ret
stc
nop
pop
xchg
popa
add
mov
jl
lods
inc
cmp
push
fnstsw
and
cld
mov
aad
or
imul
das
iret
les
sti
mov
lcall
rolb
cmpsb
ja
aam
pop
movsb
inc
jle
lods
ror
out
mov
fsubrs
fsts
mov
and
xor
xor
mov
loop
push
ja
fsubl
mov
adc
out
scas
pop
leave
jl
xor
test
add
arpl
jne
es
lds
push
call
push
arpl
xor
jne
bound
bound
into
incl
cld
sbb
idivb
mov
mov
push
mov
jns
jle
shrb
mov
dec
inc
add
aam
test
rcll
adc
cli
mov
sub
int
pop
and
rorl
fimuls
mov
stos
jg
ret
xchg
xor
rolb
or
call
jmp
adc
mov
repnz
sti
icebp
fdiv
xchg
cmp
pop
xor
mov
clc
out
add
ret
mov
aas
sahf
xor
ljmp
jle
cmpsl
jmp
imul
add
mov
mov
rolb
fwait
stc
insb
and
jp
xchg
cld
mov
xor
cmpl
jg
xor
xchg
ja
jl
int3
cmc
ja
dec
mov
ja
add
mov
nop
mov
gs
dec
mov
sti
mov
jns
adc
and
pop
inc
stos
push
std
ds
mov
pop
jg
aaa
sub
leave
mov
das
rcrb
jecxz
ss
pop
xor
pop
sub
sbb
rolb
cwtl
mov
mov
xor
out
cmp
inc
out
aas
jecxz
pop
shl
dec
inc
adc
lea
loopne
in
cld
jns
push
sbb
aas
cli
pop
jl
adc
xlat
mov
mov
adc
cli
fbstp
or
test
pop
jecxz
mov
fs
insb
mov
xor
cmpsb
mov
inc
dec
xlat
xchg
sub
xchg
inc
add
gs
xor
cmp
adc
out
push
xlat
outsb
in
dec
lock
push
dec
mov
lahf
or
daa
mov
pop
or
pop
xlat
repz
xor
cmpsl
fcomp
jg
mov
mov
sub
shr
xchg
lods
xchg
mov
sub
xor
jmp
mov
pop
add
sbb
jb
iret
push
xchg
cmp
and
xchg
adc
add
xchg
sub
or
xchg
aad
xchg
hlt
repz
pop
xor
lods
call
xor
ret
mov
fsubs
sbb
inc
mov
js
pop
pop
ret
sahf
push
push
sbb
in
adc
shlb
ficoms
imul
cs
int3
jb
dec
pusha
movsb
lock
cmpsl
inc
jne
or
lahf
out
sub
lcall
sbb
std
xchg
sub
add
mov
loope
jae
add
cld
push
fisubl
sub
inc
add
outsl
stc
jae
and
xor
mov
adc
fs
ficoms
arpl
jns
in
fdiv
add
lahf
sub
xchg
mov
scas
cltd
add
ficompl
in
pop
imul
or
inc
call
cld
pop
repz
fistps
or
and
xchg
jbe
lret
and
or
push
pop
cwtl
fwait
add
cli
test
xlat
es
push
push
jnp
iret
fwait
xor
fwait
xchg
xchg
sub
mov
das
mov
sarb
cwtl
lahf
jmp
cli
sub
rcrb
or
sbb
pop
jmp
dec
pop
inc
fisttpl
push
stos
inc
mov
xor
enter
adc
mov
call
aad
adc
rcr
cmc
cmp
std
notb
inc
jecxz
idivb
sbb
shlb
cld
jmp
push
jmp
xor
mov
jl
js
daa
push
js
std
popa
push
and
mov
mov
stc
aas
pop
jmp
cmp
mov
mov
cmp
jb
bound
mov
sbb
sub
stos
loop
inc
fld
imul
push
filds
pop
pop
das
loop
sahf
mov
fstpl
cwtl
sbb
stos
dec
jns
mov
sub
add
push
xor
pop
scas
rol
test
push
lea
test
and
iret
lret
inc
dec
or
ds
mov
btrl
mov
dec
loope
out
or
fsts
jp
out
cltd
lret
mov
xchg
and
inc
js
enter
test
push
cmp
test
je
addr16
pop
pop
jns
cmp
out
jle
js
pop
sbb
or
jmp
je
mov
sbb
cmp
cs
add
mov
outsb
jge
or
pop
mov
or
fidivrl
xchg
jecxz
push
add
add
lcall
insb
addb
add
fnstenv
sub
sbb
or
pop
jae
jl
add
inc
into
push
pusha
rorl
push
sbb
stc
or
inc
lahf
add
shll
sbb
mov
pusha
outsb
xchg
cmp
imul
out
xchg
cmp
cwtl
pop
cmp
lcall
pusha
pop
test
out
ret
mov
inc
pop
adc
call
aaa
add
out
loopne
push
pop
fists
stc
push
icebp
int
mov
into
ficompl
jmp
or
lods
jl
orb
dec
dec
push
add
add
inc
cmpsb
popa
lds
in
xor
shll
mov
mov
aas
mov
sub
repz
inc
adc
mov
sarl
mov
test
sti
enter
inc
mov
and
inc
mov
insb
mov
dec
ss
cmp
jns
push
stos
or
sti
iret
shll
test
and
add
fsubs
stos
push
mov
ret
sti
iret
pop
mov
in
cmp
cmp
leave
aaa
sub
mov
and
cmpsb
mov
daa
pop
dec
pop
mov
cmp
sarl
dec
pushf
mov
pop
add
xor
add
icebp
rcll
test
cmpsl
pop
test
imul
aam
adc
popa
ret
xchg
bnd
jg
jp
jle
repz
jmp
aaa
pusha
fwait
lcall
movsl
and
repz
sub
pushf
and
lods
dec
test
mov
aas
lcall
sbb
ret
orl
mov
lahf
fstpt
jae
xor
pop
addr16
inc
popa
pop
fs
mov
imull
sbb
sub
push
outsb
xchg
lret
sub
sub
cwtl
loope
push
pop
jge
mov
in
shlb
push
mov
inc
repnz
pop
incl
jp
sbb
inc
test
repz
mov
sti
add
mov
ds
xchg
mov
jle
xor
sub
sahf
dec
adc
sbb
push
je
ljmp
or
sub
idivb
cmc
sub
xor
fbstp
in
push
xchg
mov
sub
test
xorb
rcrl
pop
xor
adc
fisubrl
cli
adc
mov
or
aad
mov
pop
gs
loopne
cmp
insb
dec
inc
inc
jnp
dec
leave
jns
cli
pop
sub
jnp
out
inc
out
dec
xchg
movsl
sbb
xor
xchg
addr16
adc
sar
in
test
es
inc
cld
lds
ss
mov
idivl
cmc
and
or
iret
aam
pop
bound
mov
fwait
ret
pop
adc
fwait
adc
add
and
jmp
cmpsb
mov
outsl
into
inc
dec
ds
xor
and
jnp
inc
mov
cmpsb
dec
test
cmpsl
loop
sarl
xor
aas
jbe
mov
incl
ljmp
movsb
mov
sbb
andl
cmc
add
test
cmp
mov
adc
push
in
or
and
rorl
xchg
dec
inc
pusha
xchg
sbb
test
cmpsl
repnz
and
mov
inc
hlt
test
mov
dec
stos
or
sbb
in
stc
aas
lcall
ja
insl
lcall
ljmp
mov
and
fs
ljmp
xor
push
jne
pusha
add
aam
jno
fcmovnb
fwait
xlat
or
push
orb
fbstp
imul
js
push
cmp
mov
gs
dec
xchg
jmp
and
cli
mov
scas
pop
cmpsb
div
out
pop
push
pop
mov
sub
fwait
dec
cmp
jb
pop
fistpl
jno
testl
pop
ds
push
xchg
lret
loop
repz
mov
sbbl
xchg
cmovnp
cwtl
mov
sahf
loopne
stc
test
adc
sbb
push
add
xor
or
push
add
cmp
stos
gs
adc
sti
mov
mov
fldcw
pop
jl
or
je
data16
sub
test
arpl
mul
and
ret
or
jle
in
inc
mov
inc
test
in
jbe
cwtl
dec
xor
movsl
sub
cmp
mov
xchg
out
jp
mov
jp
sub
ret
ss
jge
sub
stos
xor
pop
mul
push
adc
fwait
jle
xchg
dec
ret
cmp
xchg
xchg
cmpb
clc
mov
pusha
push
dec
push
rcrb
aas
pop
inc
sbb
ljmp
inc
mov
inc
pop
inc
shl
lret
lea
rcrl
std
fisubrs
or
aaa
pop
pop
out
cs
push
push
lret
pop
sti
shrl
adc
push
cmc
sbb
cmp
pop
adc
xor
pop
pushf
ja
ljmp
xlat
mov
in
arpl
pop
add
or
out
into
addb
mov
loop
mov
nopl
inc
sub
push
fadds
ret
pop
test
pop
adc
lahf
and
fs
sub
sbb
popf
fcoms
scas
divb
ds
push
jne
or
dec
das
lahf
mov
lods
xchg
mov
adc
or
add
cld
adc
cmpsb
xchg
cmp
xchg
popf
add
adcb
jmp
or
ret
fistl
push
lods
mov
and
cmpsl
push
mov
pop
imul
sub
sub
rcr
inc
push
sarl
push
and
aas
push
dec
cmc
xor
mov
push
ja
call
dec
out
pusha
cmc
xor
pop
fdivrs
and
sbb
or
xchg
sub
xchg
push
mov
dec
scas
stos
out
push
das
ror
stos
cmp
pop
int
shr
dec
mov
pop
jo
repz
xchg
push
xor
cmp
ja
dec
test
jp
icebp
push
pop
enter
push
pop
inc
mul
cmp
cld
xchg
insl
loopne
addl
fbstp
mov
negb
push
pop
cli
ljmp
pop
cwtl
dec
and
out
adc
insl
xor
cwtl
adc
inc
pop
cli
jp
sbb
outsl
push
jmp
cmp
adc
dec
xor
push
pop
incl
mov
pusha
pop
out
xchg
xor
mull
sub
into
sub
push
jge
movsl
xlat
jge
pop
pop
cltd
mov
or
mov
cmpsl
in
aad
loope
dec
out
roll
das
aad
lods
ret
jb
mov
out
imul
inc
push
adc
jae
adc
cld
sbb
aad
xlat
xchg
divb
xchg
lcall
test
xchg
mov
inc
insb
jmp
ds
in
sub
adc
and
jno
cmpsl
push
mov
sbb
clc
out
dec
repnz
int3
roll
imulb
repnz
mov
sub
ja
mov
stos
loop
daa
mov
clc
std
xchg
filds
mov
dec
ja
int
and
adc
mov
push
movsb
cmc
lahf
mov
mov
ljmp
mov
jmp
ret
mov
shll
dec
jae
pop
sbb
lea
jmp
movsl
test
sub
inc
dec
jmp
inc
icebp
sbb
sbb
orl
jp
mov
or
mov
xchg
lahf
cmpsb
mov
hlt
mov
and
cmp
and
out
cmpsl
movsl
inc
add
mov
cmpsb
mov
push
xor
push
pop
int3
jmp
sub
lea
push
push
mov
pop
inc
fsubs
icebp
nop
push
scas
loope
sbb
loopne
lds
or
jle
mov
jae
call
dec
adc
inc
sub
jecxz
pusha
es
inc
popf
std
cltd
ficoms
pop
das
mov
mov
repnz
aaa
inc
or
cmp
cld
scas
jne
lods
pop
jo
adc
cmp
xor
mov
jae
or
jnp
adc
xor
xor
outsl
adc
mov
mov
call
xchg
sub
xchg
sub
out
addr16
cmpsl
adc
cli
mov
test
cmp
mov
sub
test
lcall
sbb
scas
mov
sub
mov
sti
in
pop
js
bound
add
ret
push
int
out
cmpsl
pop
xchg
test
mov
cmp
xchg
outsl
inc
fistpll
add
insl
out
sti
pop
mov
into
xor
mov
xchg
mov
add
pop
sbb
cmp
jnp
cmp
out
data16
cmp
out
call
xchg
clc
jecxz
push
add
stos
or
xchg
pop
loopne
stos
arpl
ret
sahf
gs
mov
in
add
xchg
imul
dec
lods
and
cmp
pop
ljmp
cmpsl
out
adc
and
inc
enter
aaa
cmp
or
mov
test
add
jge
xchg
push
cs
pusha
push
cmp
mov
aam
mov
xor
cmp
aaa
sbb
push
aam
xlat
out
mov
stos
push
cmp
dec
aam
pop
arpl
dec
hlt
mov
in
dec
enter
js
mov
enter
jae
imul
dec
push
loopw
xchg
pop
addr16
pop
sub
adc
pop
push
mov
scas
hlt
movsb
fldenv
jge
sbb
popa
popa
lock
jb
mov
or
cmp
inc
scas
and
mov
push
fisubrs
nop
aas
loop
pop
or
mov
sbb
outsb
mov
addl
mov
xorl
ret
mov
imulb
or
or
jae
jb
add
mov
push
jbe
jg
test
pop
push
push
sbb
bound
das
rclb
lret
cwtl
push
sub
mov
xchg
fisubs
mov
addl
dec
jo
enter
out
fstl
xchg
inc
rol
out
add
sbb
into
lret
call
in
std
push
fwait
xchg
xchg
mov
adc
enter
imulb
cmp
rcrb
sub
test
out
imul
in
sbb
xor
in
call
mov
neg
xor
push
push
inc
inc
es
sbb
jl
imul
add
pop
andl
sarb
add
mov
faddl
cmc
stos
sahf
mov
pop
ja
add
sub
dec
in
into
add
imul
fdivl
ds
fsubrp
cmpsb
and
shrl
ljmp
jmp
and
ss
cli
stos
mov
jnp
push
icebp
inc
inc
mov
roll
push
xlat
fimuls
push
cmp
add
add
leave
sbb
xchg
cmp
subb
lahf
in
add
jp
sbb
iret
push
in
pop
jecxz
ljmp
xor
dec
adc
mov
in
sub
test
inc
mov
les
divl
fcomps
jmp
jb
pusha
push
enter
mov
jle
jle
xor
mov
sub
bound
mov
mov
pop
jg
addr16
cmc
mov
sbb
sub
bound
mov
hlt
xlat
cli
and
ds
inc
out
push
adc
mov
sahf
stc
out
outsb
addl
jae
adc
sub
xchg
dec
pop
lea
or
test
mov
pop
xor
pop
and
lret
cli
push
jbe
gs
pop
pop
dec
jp
cwtl
xchg
and
dec
into
das
cld
xor
insl
xchg
test
fwait
rorl
cmp
cmp
mov
inc
mov
jo
es
jno
or
in
xchg
outsb
ret
pop
xchg
popf
xor
les
mov
icebp
push
insl
ss
jge
jns
cmp
loopne
mov
in
mov
pop
push
sub
sahf
dec
jae
pop
dec
adc
sub
mov
loopne
mov
mov
je,pt
lea
inc
into
popf
cmpsl
mov
aaa
xchg
and
mov
push
and
imul
sub
mov
dec
pop
mov
or
xor
mov
push
cmp
mov
cmpsl
jne
or
movsl
sbb
pop
add
inc
loopne
orl
inc
jmp
mov
or
fisttpll
lods
lock
sbb
mov
jnp
dec
std
xchg
int3
jne
inc
adc
cmp
inc
or
sub
ss
push
loop
mov
aas
xorl
pop
mov
in
mov
pop
mov
scas
cmc
lds
in
sbb
mov
and
mov
adc
test
sarl
jmp
negb
repz
cmpsl
mov
mov
call
cmp
ja
cld
sbb
in
mov
push
sub
mov
aaa
leave
imul
push
repnz
or
insb
jle
jle
and
mov
mov
ret
js
ja
lods
lret
pop
lahf
mov
jmp
popl
adc
cmc
shll
sbb
out
mov
mov
mov
scas
sub
aad
cwtl
addr16
scas
outsl
mov
mov
jno
add
xchg
sahf
dec
push
mov
or
add
cmp
fdivrl
arpl
mov
in
stos
stc
mov
push
sti
cmc
xlat
pop
jmp
jae
pop
je
cmp
mov
add
jne
ret
pushf
inc
mov
xor
ror
jg
lds
mov
xor
inc
push
addr16
cmc
shlb
mov
lea
cmp
idivl
sbb
mov
ljmp
cs
cwtl
jge
lret
gs
popf
int3
xor
pop
imul
popl
sbb
mov
dec
mov
mov
pop
or
dec
adc
xlat
xchg
jb
dec
mov
lahf
xchg
es
dec
divl
cli
pop
mov
arpl
cmp
ljmp
mov
dec
add
fwait
mov
clc
rorb
lcall
fmull
icebp
adc
mov
scas
add
test
inc
adc
pop
jmp
repz
cmp
mov
add
fwait
mov
mov
push
lock
xor
add
ljmp
cmp
shr
stc
dec
imul
aad
sbb
jbe
jl
mov
add
mov
ja
in
outsb
dec
adc
xchg
mov
push
mov
sbb
mov
fdivs
out
sbbl
orl
mov
inc
aam
xlat
sbb
sarb
adc
test
jnp
mov
push
mov
dec
xchg
mov
cltd
pop
add
xor
pushf
fwait
ret
lods
and
movsb
pop
dec
in
xor
in
ret
jne
arpl
jmp
in
mov
nop
jmp
cmp
mov
popa
pop
ss
aaa
stc
pop
add
faddl
aad
aam
cmp
ljmp
out
inc
into
rol
jge
fisttpl
dec
bnd
push
scas
push
lahf
fidivrs
scas
inc
pop
shrl
fs
int3
test
stos
push
xor
push
push
js
daa
out
mov
int3
mov
xor
fsts
out
fistpl
jo
das
push
sub
hlt
mov
in
pop
push
jae
xchg
and
sbb
lahf
ret
and
adc
stos
sub
pop
test
daa
xor
cmp
in
pop
jp
xchg
lods
pop
cltd
std
add
data16
lret
sahf
cmpsl
inc
in
iret
sbb
sbb
dec
mov
stos
stos
xchg
pop
cwtl
loop
fcoms
mov
hlt
hlt
mov
pop
cmp
iret
push
sbb
dec
adc
loopne
xor
cmp
sbb
jae
xor
push
mov
xor
or
xor
jne
mov
leave
fdivrl
pop
push
cmp
cltd
lock
out
int
loope
mov
aas
ds
in
aas
jg
mov
scas
outsb
into
jmp
pop
mov
mov
je
fisttps
pushf
pop
and
mov
dec
inc
mov
ret
insl
sub
jp
pop
je
sub
insl
sbbl
mov
mov
repnz
jno
insl
jl
pusha
insb
cmp
ret
movb
inc
stc
mov
dec
loope
js
and
daa
bound
add
in
xchg
in
insb
clc
sub
pop
or
imul
and
mov
push
jg
out
mov
cmp
adcb
xchg
mov
or
stos
add
out
gs
dec
jae
inc
fs
mov
arpl
xchg
push
xchg
out
adc
xor
stos
mov
int3
cld
test
push
mov
jnp
mov
pop
mov
je
outsb
dec
or
add
lahf
push
lods
add
dec
jl
aaa
out
inc
xlat
stc
pop
pop
jne
sbb
imul
sub
mov
mov
das
call
pop
sub
push
mov
push
pusha
test
in
xchg
or
call
mov
fwait
int
je
hlt
loop
idiv
lcall
dec
push
dec
cmpsb
int3
mov
lcall
rcrl
popa
or
push
outsl
xor
arpl
xchg
xchg
stos
pop
mov
xor
cs
shlb
lds
loop
push
dec
pop
in
jno
bound
into
xor
les
push
in
andps
enter
dec
mov
inc
push
inc
pop
cmc
call
or
setb
pop
adc
xor
popa
lret
xlat
pop
mov
lock
fisubrs
outsb
incl
adc
leave
pop
movsb
and
mov
jecxz
shl
xor
rdpmc
push
mov
pusha
repz
cmp
cmp
xchg
cmp
shlb
or
pop
adc
and
cs
xor
test
cmpsb
jns
sub
out
mov
jmp
stos
std
jle
xor
aas
jp
cltd
mov
mov
js
int
xor
jge
lods
xchg
lret
aam
inc
ljmp
lods
cmpsb
mov
mov
sbb
mov
mov
scas
cmp
out
push
test
cmp
add
pop
popl
fwait
std
xchg
pop
hlt
pop
int
lock
pop
xchg
loop
jbe
or
jp
inc
inc
stos
sub
cli
imul
fwait
sub
mov
xchg
dec
xor
std
aad
push
push
jnp
out
dec
mov
loop
adc
ss
jns
ja
mov
daa
xchg
pop
nop
lret
lods
mov
adcl
fwait
add
cmp
enter
xchg
andb
jbe
jg,pt
fdivl
jns
fmulp
jb
xchg
mov
add
sub
cltd
cmp
or
scas
jne
push
xchg
mov
mov
repz
mov
lea
mov
pop
and
testb
push
aas
mov
pop
shll
xchg
fldt
call
cltd
ds
mov
mov
add
jb
pop
arpl
push
ret
cmp
pop
pop
outsb
push
lock
movsb
push
push
in
and
adc
in
and
mov
xor
repz
rorb
shr
fmul
hlt
fadd
popa
mov
jle
idivl
jae
stc
popf
push
aas
push
lahf
js
into
cmc
fisubl
sahf
flds
and
popf
pop
pop
fisubl
cmpsb
fsub
or
incl
mov
repz
fcmovbe
pushf
cmpsb
mov
xor
jl,pn
les
daa
push
lock
mov
ret
sbb
cltd
rcl
lods
push
jae
aaa
adc
flds
test
push
rcr
mov
push
cli
ret
fstp
mov
mov
test
mov
leave
pop
int3
push
in
stc
bound
out
subl
xor
mov
inc
fldl
mov
push
mov
stc
test
je
push
xchg
repnz
loope
mov
add
inc
imul
loopne,pn
test
lock
adc
sbb
inc
pusha
stos
cld
mov
aam
in
fsubrl
fimuls
fiaddl
adc
fldenv
lcall
dec
pusha
call
mov
loopne
bound
push
out
jo
sub
xlat
iret
push
mov
dec
outsb
test
mov
push
pop
cmc
push
nop
xchg
mov
subl
jo
negb
inc
fcmovbe
insb
push
mov
push
pop
mov
stos
mov
mov
stc
pop
mov
or
jmp
test
or
mov
ja
xor
push
push
sbb
mov
push
xlat
sti
cmp
int3
sub
mov
clc
pop
mov
mov
cmpsl
jns
test
out
inc
push
mov
imul
sub
jge
mov
mov
mov
xchg
loopne
mov
push
std
dec
loopne
adc
cli
aas
out
mov
cwtl
inc
popa
cltd
loope
data16
out
mov
sbb
cld
add
aad
dec
test
cmpsb
popf
mov
fs
jnp
push
addl
pop
clc
rclb
lods
test
mov
inc
bound
fsts
add
cmp
push
sbb
les
ret
push
cmp
cs
jl
add
stc
movsb
call
test
daa
clc
sti
mov
add
hlt
shl
into
fwait
xor
std
mov
popf
aam
stc
popa
inc
call
and
mov
mov
imul
jnp
test
rcrl
pop
add
add
pop
iret
mov
and
fcmovnbe
popa
cwtl
mov
cmp
cs
xor
jnp
sbb
mov
fistps
mov
add
pop
shlb
inc
adc
jl
mov
jmp
in
adc
lds
test
jnp
popf
in
jo
divb
dec
pop
mov
mov
adc
mov
fnsetpm(287
jmp
dec
pop
inc
mov
push
mov
stc
notb
pop
sbb
ja
pop
cmc
into
xor
loope
int3
pusha
adc
daa
lret
adc
inc
and
dec
pusha
inc
mov
dec
imull
mov
sub
pop
jnp
pop
push
add
and
dec
jge
andb
sbb
or
mul
dec
dec
gs
sbb
fs
fildl
cmpsb
sahf
sahf
push
aad
adc
mov
inc
mov
ljmp
sub
outsl
fisttpll
int3
stos
leave
fcomps
or
jmp
sbb
xor
out
test
adc
daa
ucomiss
test
les
call
rol
sbbl
leave
cwtl
and
and
lds
stc
in
dec
push
mov
rcll
inc
fst
mov
inc
lods
xchg
jne
stc
or
out
add
lret
lret
xchg
addr16
push
popf
jmp
dec
out
ljmp
mov
aad
in
js
repnz
pop
and
rcrb
rorb
xchg
jmp
sarl
add
fdiv
fnstsw
mov
stos
imul
dec
jbe
adc
push
mov
sub
adc
pusha
and
pop
mov
mov
loopne
lcall
xor
shr
jne
cmp
inc
inc
and
dec
push
push
jge
cmp
shll
push
je
and
sub
nop
leave
adcb
std
int3
fldl
cmp
inc
push
sbb
les
aaa
jle
mov
stos
mov
rcr
cmc
paddd
test
inc
bound
movsl
fisttps
cmp
call
rcrb
push
pop
xchg
mov
enter
mov
data16
addl
roll
jecxz
push
xchg
rcrl
push
sbb
jne
pop
dec
pop
cld
add
aad
sbb
add
mov
repnz
dec
fistl
or
insb
les
dec
push
xchg
xor
sahf
test
xchg
imull
pusha
loope
push
lahf
jnp
ljmp
aam
mov
jmp
mov
shll
mov
add
push
repnz
mov
int3
xchg
sahf
pop
xlat
test
xchg
or
andb
xchg
jns
jge
jg
xchg
push
or
loop
pop
or
add
scas
sbb
movsl
mov
xchg
sub
push
fldt
stos
sbb
pop
nop
shlb
add
mov
pushf
pushf
rorb
sub
or
and
cs
aas
pusha
sub
test
add
or
stc
andl
nop
jg
rcr
add
test
sahf
push
sahf
sbb
push
push
andl
sbb
lods
ljmp
dec
or
jb
daa
mov
aas
dec
jnp,pt
mov
mov
nop
test
icebp
ficoml
lret
sahf
pop
add
in
aam
cmp
ret
pop
mov
jns
outsl
lcall
pop
popa
imulb
adc
cmp
push
test
mov
jne
jns
dec
jl
pop
inc
mov
ds
shrb
adc
push
cmp
add
sub
movsl
add
adc
lret
addr16
xchg
pop
shlb
int
dec
ds
mov
add
add
xor
cmpsl
sti
andl
xor
xor
inc
pusha
xor
lahf
jns
ljmp
jno
jns
lahf
mov
arpl
and
dec
jno
xchg
pop
ss
aaa
xchg
fsubrs
xlat
ja
pop
test
and
dec
ja
pop
xchg
jg
mov
inc
les
call
mov
add
add
ss
cmp
add
add
add
add
push
add
add
add
orb
add
push
add
addb
add
ss
cmp
add
add
add
push
add
sldt
pusha
add
cmp
add
mov
add
mov
add
fadds
add
add
add
sub
add
ss
cmp
add
add
add
add
add
add
js
add
add
add
nop
add
add
insb
cmp
add
add
add
add
add
add
mov
xor
add
add
add
insb
cmp
add
add
add
add
add
add
enter
pop
xor
add
add
add
insb
cmp
add
add
add
add
add
add
lock
add
add
add
insb
cmp
add
add
add
add
add
add
sbb
add
push
add
cmp
add
ss
cmp
add
add
add
add
add
add
inc
add
add
add
add
insb
cmp
add
add
add
add
rolb
xorb
adc
add
add
add
ss
cmp
add
add
add
add
add
add
mov
add
and
add
add
add
insb
cmp
add
add
add
add
add
add
mov
add
xor
add
add
add
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
loop
add
mov
inc
add
loopne
add
lock
add
add
add
adc
add
add
add
add
add
add
push
inc
add
add
add
je
add
add
add
add
add
add
add
ljmp
add
adc
add
add
add
incl
inc
add
adc
add
sbb
add
add
add
jmp
add
sbb
add
and
add
add
add
decl
add
and
add
sub
add
add
add
ljmp
add
sub
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
jne
xor
cs
insb
add
add
add
push
jns
inc
jb
gs
je
imul
add
jbe
jo
xor
cs
insb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
jne
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
gs
insb
xor
cs
insb
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
cmpsb
addl
pop
add
add
cmpsb
addl
add
add
add
add
mov
lods
xor
nop
nop
push
sahf
test
add
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
xchg
rolb
icebp
pop
or
clc
repnz
push
add
xorps
cli
inc
out
inc
aam
cmp
mov
loopne
dec
jecxz
call
add
sbb
ss
pop
in
hlt
jne
in
jge
int3
es
mov
je
mov
pop
jno
rep
in
dec
or
push
sub
enter
jge
mov
shl
or
inc
outsl
dec
mov
sbb
orb
xchg
or
xchg
int3
pop
hlt
iret
data16
and
and
roll
inc
stos
add
pop
sub
fwait
int
adc
popf
or
loopne
incl
js
or
setg
dec
out
or
scas
icebp
cmp
cmp
jg
icebp
cmp
mov
icebp
xor
xchg
push
hlt
and
dec
aam
mov
call
inc
add
imul
add
pop
lea
dec
cmp
repz
ds
sub
call
or
push
sub
shll
nop
pop
push
jne
and
or
pop
outsb
mov
and
movsb
cmpsb
pop
or
sbb
out
repz
or
js
pop
scas
mov
rolb
addps
sub
mov
jbe
xor
mov
push
add
add
cli
mov
or
incl
jmp
popa
andb
pop
xchg
and
bound
adc
je
cwtl
lock
cmpsl
outsb
or
or
lahf
test
adcl
add
mov
or
cmp
cltd
or
insl
std
add
je
sahf
adc
push
imul
rol
ljmp
or
adc
outsb
lods
and
inc
inc
jns
fldl
push
cltd
dec
fmull
pop
cwtl
and
sbb
adc
jge
dec
xchg
jmp
pop
movl
add
lea
or
pop
daa
push
mov
test
cmp
push
mov
clc
adcl
es
cmpsb
sub
cmpsb
mov
mov
jae
mov
sbb
bound
inc
pop
sub
mov
add
xor
in
mov
lea
push
clc
test
adc
push
jmp
mov
pop
jmp
sbb
dec
js
pusha
fmull
test
jp
dec
jae
mov
pop
lea
mov
dec
fstp
jne
out
imul
je
add
pop
push
sbb
loope
out
mov
inc
sbb
mov
mov
loop
enter
enter
sub
adc
or
mov
or
xor
xor
jmp
mov
inc
bound
mov
or
popa
jno
or
les
sub
andb
push
pushf
bound
test
sbb
das
xor
pop
rorb
fsubs
lock
cwtl
adc
sbb
inc
inc
mov
sbb
repz
jl
movsb
cs
sar
inc
jecxz
pop
decl
push
push
nop
or
incb
mov
sbb
gs
sbb
out
insl
add
jb
js
cld
in
xchg
lock
lea
mov
adc
shlb
push
imul
or
sub
inc
dec
cli
jo
fimull
mov
shl
lret
stc
xchg
jecxz
push
adc
add
push
mov
decb
jo
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
push
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
xchg
test
lock
lret
add
mov
pop
inc
dec
addb
dec
cmp
sbb
jb
xchg
pop
adc
mov
mov
sbb
mov
stos
add
push
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
mov
xchg
fstpt
enter
fs
loop
xchg
leave
fldl
fildl
push
call
cld
add
mov
lea
sbb
sbb
jo
adc
lea
test
orb
or
dec
test
push
inc
add
mov
roll
or
scas
sbb
orl
inc
or
sbb
mov
fwait
imul
or
xor
sbb
movsb
jo
shll
mov
or
lods
xor
pop
test
adc
or
les
inc
test
cmp
mov
mov
scas
cmp
imul
mov
lock
les
add
call
push
cs
push
icebp
and
dec
adc
mov
cld
add
sub
mov
fidivs
sbb
push
lea
mov
stos
movsb
add
nop
cmpl
je
jae
inc
cmp
and
inc
sbb
in
sbb
das
and
dec
push
scas
jg
lcall
sbb
call
add
dec
sub
xor
xor
and
iret
mov
test
or
push
les
sbb
fwait
xchg
shrl
pop
or
push
rcll
xor
leave
je
cwtl
xor
inc
inc
push
sbb
jnp
mov
lea
mov
cmp
sub
jl
adc
loope
fidivrl
lea
test
xor
push
aas
pop
inc
mov
sbb
lahf
jno
addr16
aas
rcr
push
rclb
test
dec
inc
xor
jmp
mov
adc
and
movsl
dec
inc
jo
add
test
ret
mov
and
repnz
xchg
jl
imul
mov
cltd
cmpsb
cmp
and
add
add
ret
mov
dec
cld
mov
or
aas
pop
loopne
push
add
push
and
xchg
test
jo
jle
ret
ror
sti
popa
mov
push
push
jne
ret
pop
push
xchg
pop
add
jmp
popa
pop
xchg
leave
push
andl
xlat
mov
shll
adc
jmp
and
pop
aas
add
pop
pop
adc
hlt
cltd
enter
push
fs
push
ds
leave
xor
sub
or
inc
incb
xchg
cs
add
mov
adc
inc
add
jge
inc
and
leave
or
mov
pop
adc
add
cmp
jge
xor
add
mov
add
cmp
je
dec
mov
jne
sub
ret
shr
or
rclb
les
mov
out
or
enter
mov
outsb
cmp
stos
xor
and
push
cltd
pop
test
js
loopne
pop
push
mov
adc
add
in
add
jbe
push
push
push
call
pop
mov
sarl
xor
in
inc
pop
jg
cli
daa
fwait
push
xchg
fmulp
sub
mov
or
dec
loopne
cwtl
pop
bound
dec
or
clc
rol
add
movsl
sub
inc
jnp
or
cli
movsb
push
not
mov
or
cmp
mov
adc
adc
jecxz
push
sub
lock
push
aaa
xchg
sub
mov
adc
bound
jecxz
push
outsb
dec
sub
push
ss
pop
gs
adc
lds
push
hlt
push
daa
dec
or
dec
enter
das
push
push
std
popf
push
in
lahf
rolb
sub
inc
sub
adc
push
in
jmp
lret
mov
cli
cmp
jne
push
stc
jmp
fidivl
jl
sbb
adc
push
pushf
dec
jecxz
cmp
fimull
push
inc
scas
or
sub
lret
fidivl
dec
inc
ret
dec
cmpb
pop
inc
mov
push
je
add
or
es
push
cmovle
inc
into
jle
test
sahf
and
push
push
push
push
call
sbb
dec
aaa
mov
add
jae
insl
jae
bound
sbb
pop
mov
rclb
scas
or
jno
adc
icebp
push
int
bound
test
xchg
dec
ss
test
adc
out
inc
leave
xchg
into
jge
pop
push
adc
shlb
testb
mov
sti
or
inc
test
and
jmp
insb
inc
pop
add
ds
push
inc
xor
dec
pop
mov
push
ret
mov
mov
sub
lods
popf
lea
push
outsl
in
repz
xor
sub
mov
dec
call
dec
or
inc
sub
repz
insl
sub
test
inc
sbb
add
cmp
orb
jl
prefetchnta
shr
pusha
loope
push
lret
jbe
insb
mov
push
add
testb
mov
inc
push
xchg
cmp
mov
xchg
jp
and
cmpsl
sub
scas
jno
or
push
lea
loopne
push
xor
push
pop
cmpsb
hlt
lret
sbb
jo
insb
imul
sbb
gs
jae
dec
adc
and
std
mov
gs
ljmp
outsl
jae
das
insb
sahf
pop
outsb
lahf
je
bound
mov
imulb
out
mov
dec
cmp
xor
popa
insb
mov
sub
push
xchg
daa
je
mov
mov
dec
in
jecxz
popa
addr16
inc
outsl
cmp
cmp
js
data16
fidivrs
cmp
imul
dec
push
inc
rol
dec
popa
outsb
fs
add
xlat
mov
movl
les
jl
pop
imul
mov
jbe
xchg
lcall
stos
mov
xor
rorl
jmp
push
dec
cmp
dec
xor
jp
dec
pushf
or
mov
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
mov
dec
add
or
add
add
add
inc
add
inc
add
add
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
fs
inc
add
add
add
inc
