mov
add
add
add
add
add
add
xor
jle
add
and
incb
add
sbb
add
add
dec
add
add
pop
add
cwtl
push
movsb
add
loopne
loopne
in
add
add
add
les
mov
notb
xor
mov
add
pusha
hlt
mov
mov
push
cwtl
add
add
add
jbe
out
cmp
add
add
dec
add
add
adc
add
add
add
add
sbb
add
add
add
mov
adc
add
add
sarb
add
add
add
call
push
sar
add
aam
add
add
or
add
add
add
add
cli
xor
ds
add
add
add
add
add
add
add
push
add
in
add
mov
sbb
add
push
add
add
push
stos
add
ljmp
add
push
dec
add
lods
push
sahf
add
add
push
mov
add
in
bound
add
add
cmpsb
pop
add
push
add
add
cwtl
adc
xor
mov
add
add
add
xchg
dec
adc
add
add
add
xor
mov
es
add
clc
add
sbb
add
and
in
add
nop
add
inc
int3
add
mov
add
add
add
add
pop
add
add
add
add
xor
add
add
add
insb
add
cmp
mov
mov
add
sub
mov
lock
out
mov
add
add
xor
mov
add
adc
add
add
add
cs
add
testb
fsubrl
add
dec
add
inc
inc
outsb
add
add
ret
add
add
add
add
in
add
add
or
loopne
add
add
add
add
add
lcall
add
add
add
add
add
adc
dec
add
add
add
loop
add
add
add
add
test
add
add
add
xchg
mov
add
xor
clc
add
add
add
add
add
add
add
add
add
ret
incb
rolb
int3
push
jbe
xchg
add
jo,pn
add
add
push
jb
adc
add
fadds
mov
add
add
add
add
cwtl
add
add
es
add
xor
add
add
add
and
fcoms
add
add
rol
add
sub
add
adc
add
add
add
aam
stos
mov
mov
xor
add
add
xor
add
into
inc
mov
mov
fadds
add
out
into
call
dec
push
add
add
add
add
int3
xchg
outsb
pop
lods
add
add
adc
mov
ljmp
mov
add
add
pusha
add
outsb
add
add
add
push
add
add
add
add
mov
add
add
add
inc
insb
inc
dec
add
movsb
out
ds
add
add
mov
int3
pushf
cmpsb
add
add
js
add
int3
add
add
add
mov
add
add
add
add
xchg
add
xor
add
in
jb
repnz
test
add
ret
mov
mov
add
add
add
add
stos
add
add
add
add
sbb
add
add
add
add
add
cmp
inc
add
jb
jle
add
sahf
add
outsb
test
add
add
add
into
add
cwtl
add
add
bound
in
add
lret
add
add
mov
add
add
add
pop
add
add
pop
add
add
add
push
add
add
addb
add
dec
call
mov
add
sbb
lods
out
add
add
add
add
add
add
sbb
add
sub
add
add
sub
nop
push
push
lock
add
mov
pop
mov
add
lcall
lret
add
je
test
inc
add
and
add
add
fiadds
add
add
xor
add
in
add
sahf
add
xchg
add
add
add
add
mov
loopne
pusha
mov
sub
mov
add
sbb
ljmp
sbb
add
dec
dec
les
addb
movb
add
scas
loopne
add
incb
pop
add
movsb
add
add
add
xchg
add
add
xor
add
add
scas
inc
add
add
push
add
push
xchg
add
add
push
mov
add
add
cmp
add
cmpsb
add
push
cmp
add
pop
add
xchg
add
stos
add
cmpsb
subb
add
add
add
cmp
add
xor
add
scas
push
hlt
dec
add
add
jb
add
dec
aam
add
mov
test
add
enter
xor
js
push
add
pop
add
add
add
add
cmpsb
inc
add
add
push
clc
add
add
add
adc
pop
add
outsb
mov
add
add
cli
add
sub
add
add
dec
mov
add
add
push
add
mov
add
lods
jo
push
sbb
sbb
xor
add
cld
add
mov
add
add
loopne
add
add
add
add
add
add
inc
out
add
cmp
push
push
inc
add
add
push
pop
xchg
in
add
addb
add
push
add
adc
cmpsb
push
sbb
add
jo
xor
add
inc
pop
add
add
push
add
bound
add
add
pushf
add
sbb
add
mov
cli
add
add
sub
pusha
jo
pop
jp
add
add
fadds
sbb
add
add
out
cmp
cmp
add
add
jl
cli
add
call
add
hlt
ljmp
add
jbe
pop
rolb
pop
add
add
add
enter
pusha
add
add
add
add
add
clc
test
add
add
add
add
jp
add
cld
fadds
add
fs
add
add
test
add
add
add
cmpsb
add
push
add
add
les
pusha
mov
adc
add
push
add
add
add
out
pop
les
sbb
js
add
les
testb
add
add
pop
cli
add
add
xor
add
lock
add
add
add
add
add
ss
cmp
add
add
sub
mov
dec
xor
add
add
add
add
add
addb
add
add
add
lcall
add
ret
add
add
add
add
push
and
add
add
lret
push
jb
push
rolb
add
add
and
xchg
sbb
add
cwtl
pop
add
add
aam
add
addb
aam
add
add
add
sub
add
add
add
addb
aam
inc
add
add
sub
mov
add
sub
mov
add
dec
add
add
add
or
dec
loopne
jb
add
in
cmp
cmp
pop
add
add
add
push
add
clc
push
add
movb
add
pop
aam
xchg
add
scas
in
xchg
mov
add
add
push
add
add
xor
push
mov
add
add
add
add
add
push
mov
add
in
add
mov
push
add
test
lock
add
les
cmpsb
add
add
lock
loopne
add
add
add
xchg
pop
push
clc
add
push
clc
ljmp
add
sub
and
add
and
add
sbbb
add
sub
add
nop
outsb
add
add
mov
movsb
add
sbb
add
add
add
add
add
sub
push
add
add
mov
add
dec
sbb
add
add
fdivl
add
add
add
lock
int3
add
lcall
push
add
push
and
push
add
add
add
add
xchg
mov
add
push
add
add
push
add
data16
faddl
add
add
add
add
mov
add
add
loop
add
insb
add
je
pop
cli
add
add
xchg
add
add
add
add
mov
pop
mov
add
add
cmp
add
add
clc
dec
push
add
add
add
or
add
add
add
add
pusha
fsubp
outsb
add
add
add
add
add
push
add
push
add
add
mov
add
add
push
mov
add
push
add
add
and
add
add
sbb
add
add
add
lods
add
add
add
add
sbb
sbb
or
add
add
cmpsb
inc
fadds
add
mov
add
add
into
mov
mov
add
nop
mov
lock
add
add
add
out
sub
incb
add
sbb
add
jb
add
add
xchg
and
add
add
dec
add
cli
add
pusha
test
mov
add
add
xor
add
add
add
add
add
rolb
bound
sahf
data16
and
inc
cmp
or
dec
add
add
mov
shlb
addb
adc
add
add
add
add
sbb
add
add
add
push
sub
clc
add
insb
jl
movb
fcoms
aam
add
inc
add
add
call
pusha
adc
push
add
add
rolb
jb
add
enter
enter
add
into
mov
add
sahf
add
rolb
cld
sbb
ficompl
add
add
out
add
dec
add
add
add
add
add
fmuls
add
mov
add
rolb
or
pusha
add
add
add
add
add
add
add
insb
add
add
add
add
add
outsb
in
push
repnz
adc
add
mov
mov
cli
add
outsb
adc
add
push
inc
add
add
add
sub
stos
xor
jle
add
add
adc
add
add
cmpsb
add
add
add
sahf
stos
test
add
dec
add
add
test
cmp
add
add
add
add
dec
add
nop
add
mov
add
jbe
sbb
out
sbb
inc
bound
add
add
je
add
add
ds
add
pop
js
mov
add
add
add
int3
add
pop
cmp
add
clc
ljmp
mov
or
sbb
xchg
push
adc
add
movb
add
add
add
add
add
insb
add
bound
add
add
sahf
pop
add
add
mov
add
add
addb
add
scas
cli
add
add
jb
add
loopne
add
add
fsubl
mov
add
push
movsb
test
dec
cmpsb
add
add
mov
add
or
rolb
add
add
add
add
stos
add
add
lock
jl
sub
add
into
add
add
xor
faddl
add
add
add
add
test
je
nop
xchg
add
add
add
pusha
js
in
mov
add
add
outsb
add
mov
dec
into
add
pop
xchg
add
add
add
add
faddl
add
faddl
add
add
and
add
push
cmp
repnz
add
sahf
add
jle
add
push
add
insb
pop
add
add
lret
cmp
mov
add
xchg
add
test
bound
add
in
add
jo
add
lcall
mov
dec
mov
stos
add
add
add
xchg
add
add
add
add
add
je
add
inc
add
mov
add
add
stos
add
add
add
movb
test
data16
add
add
add
add
ret
add
add
or
xchg
in
pop
mov
add
test
add
and
add
add
add
add
call
testb
mov
add
dec
jp
xchg
add
add
jle
sub
cmp
add
testb
add
add
add
add
add
add
fmul
add
outsb
fsub
jp
dec
xor
add
add
jp
push
add
mov
jbe
inc
add
sub
xchg
add
add
cmpsb
cmp
add
add
fimuls
add
adc
add
add
add
cmp
sbb
add
sahf
les
add
add
and
add
nop
add
fiaddl
mov
add
add
add
push
add
add
add
add
add
add
in
add
pop
add
nop
out
addb
pushf
add
lock
add
add
add
mov
add
sub
dec
add
add
add
cmpsb
add
add
test
je
add
enter
les
add
jbe
inc
fadds
mov
add
and
add
add
loop
add
add
add
add
mov
hlt
xor
add
loopne
nop
nop
add
test
add
and
insb
faddl
add
add
add
add
add
add
cs
add
add
jl
add
add
add
add
inc
add
jbe
add
add
add
rolb
jp
add
jl
add
add
out
jle
es
insb
dec
mov
aam
push
add
add
add
cli
add
add
add
cmp
add
cs
sub
add
dec
push
add
add
sbb
rolb
add
pop
xchg
js
inc
dec
es
add
add
add
and
in
inc
testb
add
add
or
test
sbb
add
xor
add
add
add
loop
add
add
add
add
add
cmp
add
add
sbb
add
add
add
loopne
add
adcb
inc
es
add
add
add
lock
cmpb
add
add
add
add
add
add
dec
add
add
movb
add
add
add
add
xor
add
push
je
jb
loopne
and
add
mov
mov
add
add
add
incb
add
add
add
sbb
les
add
enter
clc
add
lret
fdivrl
add
add
add
add
add
add
je
divb
cmpsb
les
and
add
add
add
add
add
add
repnz
add
add
push
add
add
or
add
loopne,pt
add
add
add
test
jo
mov
add
lock
add
pop
add
les
add
add
push
add
and
add
out
add
aam
xor
mov
xchg
add
add
add
add
jo
add
sub
inc
shl
add
ss
add
add
add
jbe
add
add
add
add
outsb
xchg
add
add
add
adc
add
add
data16
add
cmpsb
add
add
cmp
push
scas
add
add
add
mov
add
push
add
xchg
sub
add
and
add
or
add
add
testb
add
add
je
add
sub
cmp
add
scas
add
add
add
add
add
add
add
jb
add
add
xchg
mov
rorb
add
mov
add
add
mov
add
xor
and
pushf
push
add
add
add
add
test
enter
add
push
add
incb
add
push
int3
add
add
add
add
xchg
mov
add
add
add
pusha
nop
call
add
add
add
add
add
call
add
add
add
mov
add
in
shrb
add
add
add
add
out
add
mov
add
add
add
lret
cld
add
add
add
jp
js
pushf
and
faddl
jb
add
add
add
add
cmp
add
add
add
add
adc
add
sub
or
add
add
sub
add
cmp
aam
add
add
movb
add
jl
add
add
dec
add
add
inc
add
add
add
jp
mov
add
add
out
enter
pop
pop
xor
add
mov
in
add
add
fiaddl
add
add
add
fiaddl
add
mov
lret
add
mov
in
add
add
js
mov
add
enter
mov
loop,pt
add
add
add
add
add
add
mov
and
add
add
add
add
add
cs
mov
add
add
add
fiaddl
faddl
add
add
loop
or
add
hlt
add
add
add
add
add
cwtl
add
add
add
bound
fadds
inc
pop
lcall
add
add
cmp
add
add
xchg
faddl
add
sbb
add
xchg
add
add
and
add
add
movb
rolb
add
add
add
cmpsb
add
pop
js
add
add
adc
add
es
add
add
enter
add
add
sbb
add
add
add
add
sub
mov
add
mov
add
add
insb
add
add
or
add
add
add
dec
adc
call
add
cs
add
mov
add
add
pop
add
add
cmp
pusha
add
add
add
lcall
xchg
mov
add
fs
mov
add
enter
add
add
dec
push
add
scas
mov
push
rclb
add
clc
push
add
dec
fiaddl
add
add
rolb
mov
add
add
add
add
add
ljmp
add
add
ret
add
add
add
add
add
and
add
add
repnz
add
jbe
add
add
jp
and
add
mov
mov
or
mov
add
pusha
add
add
inc
add
jle
pop
add
jo
add
sub
add
lods
add
inc
push
fiaddl
dec
add
add
add
add
add
add
add
mov
fadds
add
add
add
adc
or
add
add
add
add
enter
add
loopne
add
testb
add
add
and
add
pushf
xchg
add
add
inc
loopne
sbb
push
nop
jbe
sahf
add
add
add
add
add
add
mov
lods
add
cmp
cli
sbb
add
add
add
fdiv
push
add
mov
xor
add
add
add
clc
dec
add
lods
sar
je
add
add
xor
dec
add
add
add
add
cwtl
test
add
add
pushf
add
add
out
or
add
outsb
xchg
pop
add
pushf
push
aam
add
add
and
fiadds
add
add
add
je
cli
add
add
add
add
sahf
add
add
add
add
add
addb
add
mov
push
out
cli
xor
add
add
ljmp
mov
or
xchg
dec
add
cmp
add
add
cmp
add
rorb
and
add
add
add
js
add
add
cwtl
or
rolb
fiaddl
push
add
outsb
mov
sub
aam
xor
add
add
lods
add
add
add
add
add
push
add
add
lods
add
add
add
add
push
jo
into
add
add
mov
add
in
pop
xchg
add
push
add
into
xchg
or
add
add
add
aam
or
add
add
add
add
cwtl
dec
out
add
fsubrl
add
add
cmp
add
dec
mov
data16
add
out
add
add
add
add
add
add
add
mov
data16
sbb
sbb
sub
mov
lods
test
add
adc
add
add
add
sahf
add
add
cli
into
mov
add
scas
push
add
add
add
adc
add
add
add
rolb
add
add
add
add
xor
and
add
xor
add
add
add
and
add
add
sub
scas
les
add
add
and
add
add
add
rolb
mov
add
add
mov
add
je
add
add
push
add
add
add
clc
mov
add
add
add
fs
sbb
xchg
add
add
add
out
loop
add
add
add
add
add
add
add
add
push
mov
add
mov
add
add
mov
bound
add
sub
mov
dec
sub
add
push
add
add
rolb
and
add
mov
add
add
mov
aam
ds
add
or
push
subb
add
in
je
add
sbb
inc
add
cmp
mov
loop
out
jl
add
add
lret
add
add
add
add
ss
test
add
nop
add
mov
cwtl
jo
or
xor
add
push
add
add
nop
xchg
dec
lock
xchg
add
add
ret
add
xchg
add
inc
add
inc
add
xchg
add
lods
movsb
add
pop
add
add
add
movsb
mov
push
add
add
js
add
fiadds
add
fcoml
add
add
add
fadds
add
jl
and
cs
scas
add
inc
add
add
shlb
cmp
or
push
add
dec
cmp
add
add
add
nop
jo
push
add
xchg
add
cmp
repnz
add
jle,pt
dec
bound
add
add
add
add
add
add
add
pop
in
mov
nop
add
add
add
add
and
add
add
loopne
int3
sahf
add
dec
adc
test
add
inc
add
add
sahf
xor
add
add
add
pop
enter
xchg
dec
test
mov
push
aam
add
bound
rolb
movb
add
add
add
adc
ljmp
or
add
ret
into
add
mov
push
add
add
repnz
add
add
test
add
sub
add
add
add
add
xchg
add
adc
add
add
stos
add
add
add
add
add
int3
repnz
in
add
into
add
ret
add
add
add
add
sbb
add
nop
xor
sbbb
into
add
int3
add
loop
jp
add
add
add
add
or
add
adc
add
add
adc
jbe
add
in
nop
xor
dec
add
or
add
sbb
add
add
or
add
add
add
pop
add
sbb
clc
les
fdivrp
or
cmpsb
add
add
add
add
movb
testb
or
inc
xchg
testb
add
add
add
add
add
add
push
add
add
add
add
jp
add
add
add
cwtl
add
aam
cmp
js
add
add
inc
add
add
cmp
mov
add
adc
int3
add
adc
pushf
add
add
rolb
add
add
add
add
pusha
push
inc
pop
add
add
adc
add
jo
add
add
pusha
add
add
xchg
push
add
into
add
sub
sub
ds
ret
add
mov
xchg
add
add
out
xor
add
mov
inc
mov
mov
add
add
add
sbb
jl
add
add
add
add
add
add
add
test
cmp
add
add
scas
add
and
test
cwtl
add
add
pushw
add
or
adc
add
add
add
add
add
jle
out
add
add
push
mov
add
add
mov
add
xchg
mov
fcoml
pop
add
cmp
add
add
jl,pn
js
push
add
pop
add
dec
fadds
mov
pop
add
int3
mov
add
fiaddl
push
add
add
add
test
hlt
dec
add
add
outsb
test
add
fiaddl
add
cli
sbb
add
clc
jbe
enter
add
push
xchg
add
add
add
pusha
add
adc
mov
add
add
add
push
add
add
ds
xchg
cld
and
subb
add
addb
inc
incb
lock
add
add
xor
rolb
add
add
mov
push
add
in
add
add
add
add
add
add
add
pushf
and
add
add
add
add
outsb
out
push
add
add
dec
add
sub
cld
add
loopne
add
aam
or
add
add
add
add
add
cmp
pop
add
cmp
sub
out
add
add
repnz
fiaddl
add
add
add
nop
in
add
push
add
add
add
add
pusha
add
add
add
fs
xor
add
enter
add
add
add
out
mov
cld
or
add
mov
js
call
add
or
rolb
push
sbb
add
add
add
xchg
add
push
rolb
add
xchg
add
insb
jl
xor
mov
and
add
push
xor
add
add
push
add
add
es
data16
add
pushf
bound
xor
rorb
add
xchg
repnz
lret
add
loopne
add
push
add
mov
add
sub
sarb
push
add
add
data16
push
add
add
lods
add
add
scas
add
add
jle
in
and
add
insb
add
add
lock
add
add
inc
add
add
add
add
out
dec
loop
add
add
push
add
add
loopne
add
add
or
cwtl
and
fiaddl
add
add
push
add
add
add
cmpsb
sbb
inc
add
add
add
add
add
dec
add
add
jle
add
add
clc
and
push
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
sbb
add
in
add
add
add
add
add
add
add
addb
add
add
in
add
add
add
testb
add
insb
addb
in
dec
add
inc
fcmove
jbe
add
add
add
add
add
add
add
rcr
mov
add
cwtl
repnz
add
sbb
add
add
inc
add
add
cmp
add
in
je
add
push
add
add
add
mov
add
dec
shrb
sbb
add
add
dec
js
test
je
add
repnz
aam
add
add
add
add
add
fisubl
add
cmp
xor
jl
add
add
dec
mov
add
push
add
out
add
nop
add
add
inc
add
bound
add
add
add
lock
add
mulb
add
outsb
add
add
inc
add
pop
add
cwtl
lock
lret
add
in
fimull
add
add
xchg
fadds
add
rol
mov
add
loopne
scas
add
add
add
add
add
sahf
add
add
add
aam
ljmp
add
sbb
add
test
and
add
cwtl
add
add
mov
add
xchg
add
xchg
add
mov
add
movsb
ljmp
and
add
ljmp
add
add
add
or
inc
add
add
mov
pusha
add
cs
push
add
add
cmpsb
dec
fcmovu
add
and
cmp
loop
add
add
add
adc
add
add
pushf
add
add
add
add
add
add
sub
push
movsb
pusha
sbb
push
add
add
push
add
inc
rcrb
in
jo
push
fcoms
add
add
rolb
and
ret
and
mov
rolb
add
add
add
add
add
add
mov
in
adc
add
add
inc
pusha
inc
data16
lret
jle
add
add
add
add
js
add
cli
sbb
je
add
nop
sahf
mov
add
add
add
add
push
pop
js
mov
add
add
push
mov
movsb
add
add
add
add
add
add
add
add
nop
add
push
sub
add
add
add
lods
push
add
cmpsb
dec
add
lret
pop
jp
add
mov
out
add
and
xchg
pusha
ss
add
xor
add
push
add
adc
add
jbe
bound
add
mov
add
add
push
lcall
rclb
outsb
add
add
push
add
add
sub
add
loopne
pop
int3
add
add
add
xor
sbb
mov
add
jl
add
add
jo
inc
add
add
enter
add
clc
add
add
add
add
add
repnz
sub
add
add
add
inc
add
add
and
add
add
cmpsb
add
inc
mov
loop
jp
add
pop
jbe
test
add
cld
add
add
bound
xchg
add
add
push
mov
add
pop
test
add
xor
add
add
mov
cwtl
push
sahf
add
add
andb
jbe
test
add
nop
add
add
add
add
add
add
xchg
add
mov
inc
add
movsb
add
ljmp
add
cmp
mov
push
add
cld
add
add
jl
add
add
add
mov
adc
sub
ficoml
add
add
inc
faddl
add
repnz
add
mov
inc
adc
add
add
add
add
add
add
add
add
add
fadds
add
add
add
les
sub
add
add
pop
add
add
sub
add
and
push
add
add
add
in
clc
test
add
add
scas
add
mov
add
add
pop
add
inc
dec
pop
add
inc
add
or
add
add
add
add
add
add
add
add
lock
push
add
add
add
add
nop
add
add
rolb
add
jbe
mov
add
add
faddl
push
add
adc
dec
add
out
add
add
add
mulb
adc
add
add
pushf
add
add
add
ds
push
add
add
add
mov
add
inc
add
xor
add
add
add
fs
aam
addb
add
xor
add
push
cmp
add
fdivs
add
enter
add
xchg
lock
mov
and
cmp
add
add
add
inc
add
add
mov
add
xchg
add
add
add
incb
nop
add
add
inc
push
add
add
add
in
xor
stos
add
add
add
dec
and
add
push
add
add
pusha
add
add
mov
data16
push
incb
movb
mov
add
add
add
add
fiadds
add
add
and
fiadds
add
mov
sub
add
add
nop
add
lock
mov
add
dec
add
add
pushf
add
inc
add
repnz
add
add
add
dec
add
add
add
add
ljmp
add
add
fiadds
add
mov
add
add
push
mov
rolb
addb
add
mov
test
loopne
add
and
add
add
jbe
add
add
add
fiaddl
outsb
add
add
pushf
add
add
add
add
add
mov
ljmp
add
add
loop
add
add
add
add
sahf
add
jbe
add
xchg
add
mov
or
data16
add
add
adc
add
cmp
xchg
shr
add
add
add
dec
push
add
add
lcall
add
add
lret
add
mov
add
add
movb
push
fcoml
jp
call
testb
add
add
mov
add
mov
nop
and
add
add
lret
add
add
add
add
nop
add
cmp
add
in
adc
add
add
adc
add
add
aam
add
add
ret
add
add
add
data16
and
add
adc
and
dec
add
add
pop
add
mov
add
add
push
ds
js
add
add
sahf
add
add
push
jo
ljmp
add
cli
push
insb
add
add
add
add
add
adc
cli
jbe
add
inc
add
add
int3
add
add
mov
add
add
add
sbb
or
add
add
add
add
in
add
add
add
add
add
add
js
mov
add
mov
shrb
je
out
jo
pushf
add
sahf
pushf
add
add
pop
inc
add
add
add
add
add
dec
ss
add
add
bound
add
add
add
push
outsb
add
add
add
add
add
lret
add
add
rolb
add
add
add
or
add
loop
add
sbb
add
mov
inc
add
add
mov
add
add
data16
data16
add
push
add
add
add
and
into
scas
add
add
lock
add
add
inc
mov
add
add
sarb
add
add
rolb
lock
add
add
add
in
add
ljmp
add
add
add
push
push
add
add
add
add
jb
add
add
add
xchg
add
add
add
jle
loop
add
pop
add
add
add
add
outsb
add
mov
ret
add
push
add
rolb
into
add
add
add
dec
add
xor
add
add
fiaddl
add
sub
add
add
cmp
add
add
xchg
add
add
add
xor
call
add
mov
les
mov
add
add
add
push
add
add
add
add
add
add
add
call
jo
pop
add
add
add
add
add
aam
repnz
add
add
add
cld
add
ss
ret
sub
add
add
add
add
add
add
add
add
sub
add
xchg
add
sbb
add
cmp
mov
add
add
add
add
loopne
add
adc
js
nop
add
add
insb
sar
add
cmp
add
add
nop
add
add
add
add
add
add
add
cli
pushf
add
xchg
add
xchg
fs
shlb
shrb
add
sbb
push
cli
push
add
add
add
cmp
pop
rorb
add
add
add
les
add
call
mov
add
add
rolb
and
fiaddl
add
xor
incb
add
add
add
jbe
add
sub
adc
jb
lret
add
and
add
add
add
cmpsb
les
add
test
xchg
ss
sahf
add
loopne
add
mov
push
push
cmp
mov
add
add
movsb
add
add
add
add
add
add
add
add
add
add
clc
fcompl
push
add
add
loopne
add
add
pop
add
add
inc
mov
add
add
add
outsb
jl
add
add
add
add
add
add
xchg
sbbb
ret
cmp
add
jle
stos
add
xor
add
loopne
hlt
inc
mov
add
sbb
add
pop
adc
mov
add
push
in
add
add
add
enter
xor
or
add
sahf
clc
fcompl
add
add
add
int3
int3
add
cmpsb
mov
add
add
add
jbe
add
or
add
add
push
and
add
add
add
push
inc
jl
add
add
mov
cld
mov
inc
add
add
add
add
insb
fiaddl
add
out
rolb
pop
add
ret
adc
add
and
add
add
adc
add
add
loopne
add
add
jp
cwtl
rolb
mov
add
jo
xchg
add
add
sbb
add
sbbb
add
hlt
pop
cli
es
pop
add
add
je
add
scas
loop
add
aam
add
dec
add
incb
dec
push
adc
cld
add
mov
add
mov
add
mov
add
out
mov
loopne
add
add
add
es
movb
test
add
dec
sub
lcall
pop
add
add
add
add
pusha
in
repnz
mov
jp
add
mov
add
add
test
add
add
add
add
add
add
add
mov
add
add
in
add
push
xor
add
lret
and
add
add
lods
add
add
push
movsb
jp
add
add
test
add
add
jle
add
insb
fsubl
loop
or
add
jb
dec
lcall
add
sbb
clc
add
addb
add
dec
mov
add
add
add
push
add
jbe
add
cmp
add
repnz
inc
ljmp
add
call
add
add
add
add
add
jl
add
add
mov
add
add
mov
testb
add
dec
dec
add
add
add
out
add
addb
incb
add
add
add
add
add
mov
xchg
insb
add
add
rolb
out
les
add
dec
add
add
add
cmp
add
or
jp
add
test
add
jo
movb
xchg
add
inc
rolb
add
push
mov
add
sbb
dec
add
add
lret
add
push
add
add
mov
data16
add
add
add
les
add
dec
hlt
fidivs
add
add
add
add
pop
mov
add
add
adc
add
add
add
add
add
mov
add
test
testb
add
add
add
aam
xchg
add
mov
data16
add
jl
add
add
add
add
dec
add
fs
add
mov
add
add
add
push
add
xchg
sbb
add
xor
add
add
js
add
xchg
add
addb
add
jp
sub
add
add
mov
add
pusha
add
add
add
or
add
adc
mov
add
mov
adc
les
outsb
add
add
cld
add
call
add
xor
jo
add
mov
add
mov
add
add
out
jp
add
add
mov
pop
or
add
add
add
sub
add
and
add
add
add
add
sub
add
mov
add
add
add
jp
sub
jbe
lret
add
call
les
add
pusha
add
sub
jb
add
cmpb
add
add
xabort
add
add
add
add
pushf
pop
add
jle
fadds
mov
divb
add
stos
fiadds
add
add
add
aam
push
add
lret
in
jp
mov
add
add
add
mov
add
xchg
add
add
add
js
ljmp
and
add
add
sub
in
mov
add
add
add
push
add
rolb
push
dec
add
add
loopne
add
ret
pop
add
jl
nop
incb
xchg
nop
sub
add
add
add
shrb
fs
add
hlt
add
add
add
add
add
fiaddl
dec
mov
add
les
add
add
add
out
sarb
scas
add
add
xchg
es
add
add
ret
pop
add
add
add
add
and
add
les
je
xchg
add
add
sbbb
inc
mov
add
add
scas
xor
add
add
xor
mov
add
or
scas
sbb
cmp
jp
fs
aam
add
add
add
and
add
add
add
add
inc
fiadds
add
sub
add
add
add
cmpsb
add
mov
add
sbb
add
add
add
add
add
push
add
add
cwtl
cmp
add
pop
add
cli
into
add
jp
inc
je
add
pushf
add
push
lods
and
add
push
add
add
add
add
add
add
push
add
add
add
movsb
cmpsb
add
lcall
add
data16
add
add
sub
ss
rorb
cmpsb
push
add
add
or
sub
add
cli
add
add
add
pusha
je
add
insb
xor
mov
dec
add
add
add
add
push
add
into
add
inc
add
add
add
add
dec
add
sbb
add
add
add
add
loop
je
mov
add
add
add
add
add
bound
add
mov
js
loopne
add
push
cmpsb
add
add
out
nop
rorb
lods
cwtl
add
add
push
add
add
add
add
bound
adc
add
cwtl
bound
add
jo
add
sbb
add
add
or
add
add
sub
nop
push
add
add
add
or
xor
or
add
add
add
insb
jb
dec
add
add
enter
lock
ret
add
add
add
sub
lods
and
call
adc
add
sbb
bound
add
mov
testb
add
add
insb
add
and
add
lock
add
add
add
add
adc
les
add
inc
bound
add
sub
add
add
and
sbb
add
add
mov
add
insb
add
jl
mov
add
sub
add
add
sbb
sub
add
jb
add
ds
scas
add
cmp
xor
add
push
add
or
add
mov
add
into
cld
dec
adc
pop
ret
and
add
mov
add
add
add
add
add
add
xchg
add
add
add
push
lods
add
sbb
sbb
stos
add
add
add
scas
mov
add
clc
push
mov
es
mov
add
test
cwtl
add
add
jp
mov
add
add
add
ror
add
out
xchg
add
jp
call
js
add
sub
mov
add
cmpb
jb
add
ds
rolb
add
add
add
add
sub
add
add
add
add
add
sub
call
push
add
add
out
incb
add
add
add
add
xchg
add
add
add
add
sahf
fdivrl
inc
add
add
add
pusha
add
add
ss
add
rolb
fiadds
mov
or
add
add
add
sub
add
xchg
push
add
mov
add
push
add
add
dec
add
call
add
add
and
add
add
cmp
add
repnz
jo
add
data16
xor
out
add
add
in
cmp
add
add
add
inc
add
add
add
push
pop
add
add
add
add
add
nop
add
add
aam
push
inc
add
add
add
rolb
add
pushf
scas
add
sbb
add
into
fiaddl
add
add
pop
add
dec
mov
dec
mov
pop
pop
lods
scas
cli
mov
add
add
add
add
add
add
sahf
in
add
add
mov
subb
add
insb
cmpsb
dec
out
add
add
inc
mov
add
cmpsb
pop
add
mov
and
add
and
add
add
dec
fiadds
xor
push
mov
test
add
sub
add
add
add
add
call
add
add
add
add
cmpsb
push
add
add
sub
add
add
adc
add
add
out
add
loop
nop
cmp
pop
add
cwtl
add
es
pushf
add
mov
add
add
sbb
add
imulb
add
add
in
add
push
add
add
mov
add
add
add
xchg
add
add
add
push
je
push
add
add
push
pop
add
add
aam
xor
push
add
insb
adc
sub
add
add
add
add
cli
add
add
add
add
add
add
add
and
add
add
add
sbb
add
add
add
cli
and
hlt
add
jbe
add
inc
call
add
inc
add
mov
xchg
dec
add
mov
add
dec
out
je
push
add
add
mov
adc
push
add
dec
push
jp
add
add
add
add
add
add
cli
add
enter
add
push
add
add
add
add
add
mov
cmp
push
push
in
cmp
adc
xor
push
add
add
xor
add
add
idivb
add
add
add
add
add
add
add
stos
push
add
push
add
add
cwtl
add
pop
add
add
subb
dec
mov
bound
js
add
add
pop
test
add
add
xchg
out
add
add
add
lret
repnz
add
mov
sbb
mov
add
add
inc
add
sub
fisubrs
add
cld
add
je
add
add
add
les
add
faddl
mov
inc
aam
add
add
xor
nop
add
les
stos
les
pop
add
xor
add
add
repnz
add
add
andb
add
add
shlb
pop
add
pop
sub
add
mov
and
add
je
lcall
add
pop
push
add
add
add
sub
mov
notb
add
add
add
push
add
push
add
add
add
data16
add
test
mov
add
push
add
mov
inc
add
add
add
movsb
pop
add
mov
enter
or
add
add
je
lock
xchg
ret
mov
add
mov
js
add
jle
add
hlt
mov
add
add
ljmp
add
cmp
add
movsb
add
in
push
add
add
jbe
test
add
or
cmp
add
clc
mov
add
jl
fiadds
or
add
add
add
add
add
or
cmp
jb
rolb
add
adc
inc
add
add
add
cwtl
push
add
sbbb
add
add
ljmp
add
push
rcl
add
add
add
xor
add
add
pop
fsubrs
mov
mov
add
add
mov
add
add
add
add
add
add
add
add
add
add
dec
add
add
mov
and
or
add
add
add
add
decb
mov
add
add
fadds
add
enter
add
push
add
xchg
push
mov
in
addb
ds
add
add
dec
add
or
add
mov
pop
cwtl
add
mov
add
mov
mov
jl
add
ss
add
ds
add
mov
pusha
add
push
mov
add
add
sub
jle
fiaddl
add
add
ljmp
add
sub
add
add
add
add
push
add
add
add
add
cwtl
adc
jb
and
add
lcall
add
add
add
add
adc
inc
jle
add
aam
add
mov
add
ds
mov
add
add
scas
add
add
add
clc
inc
insb
ret
bound
add
dec
add
sub
add
xchg
add
add
je
add
inc
add
mov
add
sub
add
add
xor
add
add
add
rclb
dec
lcall
add
add
add
sbb
add
pop
add
add
add
mov
add
add
add
add
add
add
pusha
and
pop
jb
add
add
add
jle
add
add
sub
add
add
mov
mov
add
add
cmp
add
add
add
aam
add
fadds
add
mov
add
add
push
add
add
add
add
scas
mov
push
add
add
add
add
add
add
add
add
add
and
add
add
add
add
xor
add
add
out
add
add
add
add
add
add
add
ss
inc
mov
add
insb
add
add
outsb
add
add
add
add
add
les
add
add
add
test
add
push
mov
add
jle
add
addb
les
add
test
and
add
add
add
ss
add
add
loopne
add
add
data16
add
add
stos
add
dec
nop
add
add
add
add
dec
and
add
add
add
addb
add
and
add
test
add
add
add
int3
add
lods
add
add
add
and
data16
dec
nop
add
add
and
ljmp
je
push
adc
bound
mov
push
movsb
add
add
add
cli
add
in
fsubrl
pop
inc
add
hlt
add
add
add
lcall
mov
add
add
add
add
add
cs
add
add
add
data16
add
add
adc
dec
add
nop
fiadds
jle
add
add
add
lock
or
add
add
add
add
xor
addb
add
fadds
push
aam
add
add
pop
add
push
add
add
rcr
shlb
add
mov
add
add
add
add
cmp
add
push
add
fs
sbb
ljmp
call
add
add
add
mov
inc
add
add
add
add
dec
add
add
sub
push
add
add
add
cmp
add
add
add
add
add
cmp
add
out
add
push
ret
add
pop
add
add
add
add
sub
jp
add
add
pusha
rolb
insb
add
add
add
add
dec
pop
add
add
add
add
add
scas
add
add
add
push
push
add
add
mov
add
cwtl
scas
add
add
add
add
add
mov
add
test
outsb
add
add
pushf
add
add
es
add
cmp
pushf
add
jle
lcall
add
sub
lods
add
pop
add
add
xchg
sub
ficoms
mov
out
add
or
sbb
add
add
add
sbb
mov
add
lods
lcall
add
add
jo
add
inc
add
add
inc
add
outsb
add
add
add
adc
add
add
dec
scas
add
cwtl
add
or
movsb
push
add
push
xchg
xchg
add
add
add
fiadds
int3
add
add
in
and
add
test
add
add
add
pop
add
add
add
add
add
fcmovbe
add
xor
add
add
add
addb
and
pushf
add
add
add
add
add
inc
pop
inc
add
add
add
push
hlt
js
add
add
add
or
mov
enter
lcall
add
add
rolb
add
jo
add
add
adc
add
add
into
nop
inc
call
cmp
add
dec
add
rolb
test
add
loopne
add
mov
add
mov
hlt
les
add
add
mov
je
add
loop
dec
add
add
testb
pop
add
movsb
add
add
add
add
lcall
add
ds
add
clc
add
add
jl
add
pusha
add
inc
data16
add
add
push
mov
dec
add
mov
add
cs
add
dec
add
add
add
add
mov
add
add
adc
add
cmp
add
mov
lcall
clc
add
clc
nop
es
add
add
nop
fiaddl
inc
lock
ljmp
xchg
mov
add
xchg
add
add
add
add
fcom
add
mov
les
push
add
jp
add
add
add
addb
add
add
jl
add
add
adc
cmp
mov
add
add
pusha
cs
mov
pop
push
add
add
add
add
mov
mov
cld
add
adcb
nop
add
add
add
add
add
add
movsb
add
fiaddl
push
add
out
add
addb
add
add
add
add
add
add
test
add
cmp
inc
add
jo
sbb
dec
mov
in
add
add
add
lcall
add
add
add
add
or
mov
add
add
add
add
movsb
jle
outsb
mov
add
jb
imulb
add
add
push
loop
pop
add
mov
js
add
add
add
add
add
push
push
add
js
add
add
xchg
test
or
add
test
add
outsb
hlt
add
add
add
push
add
push
in
add
add
sub
orb
add
add
add
add
add
add
pushf
add
add
xor
add
add
push
add
xchg
mov
dec
xchg
add
add
addb
fmuls
sbb
add
mov
add
add
lock
add
add
mov
data16
add
ss
addb
into
bound
rolb
pop
add
in
add
add
push
add
add
cmp
add
adc
add
dec
inc
add
mov
add
add
and
ljmp
add
xor
test
test
nop
add
add
mov
lcall
jo
add
cmpsb
add
add
add
loop
add
pushf
cmpsb
xor
xor
add
add
add
cmp
jle
and
add
add
add
mov
add
add
test
add
and
sbb
add
sbb
dec
inc
add
add
add
nop
add
dec
ljmp
rolb
add
add
ljmp
outsb
or
test
faddl
add
cli
loop,pt
into
sub
add
mov
add
add
add
or
add
add
add
add
sahf
add
mov
push
inc
xor
ss
repnz
add
mov
add
fiadds
add
push
add
add
xor
add
sub
add
add
add
add
add
movsb
je
push
cmpsb
add
add
fadd
add
pop
add
shrb
pusha
add
add
fiaddl
xchg
add
loop
sub
fiaddl
add
cli
add
push
add
mov
add
add
add
add
add
add
add
add
add
or
add
sub
je
lcall
and
add
cli
inc
add
nop
add
mov
rolb
add
push
add
test
ss
pop
add
add
loop
add
add
add
add
add
add
sbb
ljmp
push
or
add
out
add
bound
add
add
add
add
out
pop
add
add
pop
sub
add
add
add
add
add
xor
add
push
pop
add
add
mov
push
add
add
add
adc
add
add
add
add
add
add
add
nop
add
add
add
add
lock
adc
add
add
mov
add
add
add
mov
or
add
or
in
add
add
mov
xorb
add
add
test
add
dec
add
add
add
rolb
mov
add
add
or
push
add
mov
js
add
inc
mov
int3
add
add
add
into
pusha
sub
xchg
insb
data16
add
into
inc
xchg
add
out
loopne
add
add
add
pusha
add
add
add
adc
add
add
add
ret
rcr
add
out
add
pop
mov
jbe
add
cmpsb
aam
and
add
scas
repnz
add
add
add
data16
mov
mov
add
add
out
lock
or
add
add
add
add
in
addb
and
add
add
add
in
loopne
pop
add
add
add
add
add
add
jle
add
add
mov
add
add
add
add
add
jbe
loop
add
cld
add
add
add
in
mov
add
dec
insb
add
faddl
add
sbb
add
add
add
add
and
in
add
sahf
add
lock
out
add
add
add
dec
add
add
pop
rclb
add
mov
mov
add
mov
call
adc
add
add
add
push
add
or
xchg
add
xor
push
add
repnz
push
add
add
add
scas
add
add
add
add
xchg
jle
outsb
add
cmp
add
sbb
add
add
add
mov
add
inc
jle
push
sahf
add
add
add
mov
add
add
add
add
add
cmp
jl
sub
add
add
add
add
jbe
mov
xor
faddl
add
mov
add
enter
add
clc
add
add
add
addb
add
add
add
rorb
ret
adc
jbe
inc
add
pop
mov
add
mov
add
add
pop
fs
mov
add
mov
add
add
inc
add
add
add
add
add
jp
lret
xchg
add
je
cmp
add
out
push
and
and
add
add
sahf
add
add
dec
add
add
dec
adc
add
add
or
dec
add
fadds
movsb
push
test
xchg
add
lcall
add
and
push
pop
add
add
add
fcomps
add
xor
add
add
add
add
ss
mov
add
xchg
push
fiadds
add
xchg
add
cli
add
add
call
add
fadds
add
add
add
ret
add
rolb
add
add
add
add
add
add
bound
add
add
add
mov
jb
add
add
add
add
clc
fiaddl
sub
add
add
add
add
add
add
and
out
add
pusha
jbe
sub
add
add
lcall
add
add
sub
mov
add
add
je
add
mov
add
in
int3
add
add
add
add
push
aam
add
add
add
in
xor
sub
addb
add
add
add
add
add
add
call
add
add
cmp
rolb
xchg
xchg
jp
jl
sub
mov
dec
add
add
add
movsb
pop
add
add
jo
push
add
add
add
add
add
add
add
add
or
mov
add
add
mov
add
add
add
pusha
or
xor
add
add
mov
adc
rolb
add
je
add
cld
add
xor
mov
add
pop
add
add
add
rolb
add
push
out
mov
out
jle
add
add
add
add
add
cmp
add
add
add
out
add
push
add
add
lock
ror
jle
incb
add
add
add
mov
in
test
lcall
add
add
add
add
add
add
cwtl
mov
add
out
pop
add
cmp
add
add
sbbb
add
add
add
incb
sub
lock
lret
clc
je
lods
sbb
add
add
faddl
xchg
add
sub
dec
cmp
ret
fisubl
add
add
or
repnz
add
data16
add
add
xchg
add
adc
add
adc
add
inc
add
aam
xchg
add
rorb
add
lret
faddl
mov
stos
movsb
add
scas
add
add
jle
add
add
add
es
cld
mov
bound
add
add
lock
add
fdivrl
add
add
repnz
inc
adc
add
sbb
or
add
add
push
push
mov
fisubrl
dec
add
add
add
add
scas
add
add
add
les
add
mov
jo
push
add
cld
je
add
add
add
mov
rorb
inc
or
add
sub
test
add
add
add
sub
add
bound
dec
es
add
es
add
add
add
add
mov
pop
add
add
cld
add
movsb
ljmp
add
add
mov
stos
jbe
add
out
dec
clc
cmp
add
outsb
add
add
add
add
scas
mov
add
sahf
jb
add
loop
xor
cwtl
add
add
pop
into
add
add
out
add
pushf
or
testb
int3
add
cwtl
jle
add
add
push
add
add
add
add
dec
add
add
add
sahf
cmp
sbb
test
add
jb
and
enter
add
add
lock
add
add
je
dec
ret
add
jl
rcl
inc
adc
add
add
add
add
add
bnd
xchg
cmpsb
out
les
cwtl
add
add
add
ficoml
mov
call
add
add
push
push
add
push
fiaddl
loopne
add
mov
add
add
outsb
add
add
add
add
sahf
add
cwtl
add
loopne
add
add
add
add
add
add
es
push
add
add
jl
mov
add
add
and
add
add
pop
cmp
hlt
and
and
add
scas
xchg
loopne
jbe
add
add
into
add
push
jle
add
add
add
test
add
add
adc
add
sahf
inc
add
lods
add
add
add
add
cmp
add
add
nop
add
xor
add
add
add
add
add
add
add
push
and
fisubrs
fs
and
add
add
stos
sub
add
add
fiaddl
lcall
test
add
push
add
add
add
push
add
test
jo
sbb
add
fadds
xorb
add
rolb
lcall
add
add
add
add
xchg
cld
add
add
or
push
add
add
add
mov
add
and
cmp
add
cmp
sahf
mov
add
add
addb
add
adc
inc
add
nop
or
add
mov
push
add
add
add
add
add
repnz
out
add
add
add
add
sub
out
mov
add
push
nop
add
add
add
add
jbe
mov
add
mov
add
add
jo
add
adc
add
add
add
mov
inc
add
xchg
add
add
add
cli
add
add
add
add
add
enter
add
add
add
push
add
add
lods
add
add
add
add
mov
cwtl
fiadds
push
add
add
push
add
mov
add
add
push
ss
add
add
add
add
add
push
pop
sub
add
ret
or
add
pusha
mov
add
add
in
add
pop
add
adc
xchg
stos
pop
add
add
rcrb
or
int3
mov
add
sub
add
int3
add
push
add
add
add
push
add
add
jbe
rolb
add
add
mov
add
add
add
out
add
add
sbb
add
adc
add
test
jb
sub
sbb
jb
push
add
es
aam
add
jl
add
add
pop
add
mov
add
add
fiaddl
add
in
add
jl
inc
call
add
mov
add
add
add
scas
ficompl
add
push
add
aam
cli
add
push
nop
add
add
test
add
adc
add
add
loopne
inc
rclb
add
in
lock
test
add
lret
add
add
add
je
mov
insb
add
add
rolb
cmp
add
nop
mov
addb
lods
add
lcall
add
add
add
sub
jo
add
fsubr
enter
mov
jbe
incb
cld
push
add
add
in
test
jp
add
incb
push
add
js
add
push
loopne
add
push
les
js
add
xor
int3
cld
sub
add
in
cmpsb
bound
add
add
inc
add
add
add
insb
add
push
add
add
fsubs
add
add
add
cmp
or
add
mov
add
jl
add
add
add
sbb
add
add
add
add
push
add
add
and
add
add
inc
add
add
testb
add
add
add
add
add
nop
loopne
xchg
push
xabort
jle
faddl
mov
add
add
add
xchg
out
add
push
add
add
add
add
test
dec
add
fadds
cmpb
or
add
add
add
add
add
pop
add
add
add
add
sbb
add
add
inc
mov
add
add
add
int3
add
add
inc
insb
mov
mov
fidivs
add
add
test
add
and
add
add
add
add
sub
add
push
pop
add
push
add
into
add
xchg
add
repnz
add
xor
add
add
add
add
add
add
bound
add
add
int3
test
add
or
sub
mov
xorb
add
dec
add
into
add
add
add
add
inc
push
push
cld
sub
add
xchg
add
add
add
add
hlt
add
les
mov
inc
or
add
add
add
ret
es
bound
add
add
cwtl
pusha
scas
fmuls
add
add
add
add
add
cwtl
sbb
add
push
add
jp
test
add
push
add
or
add
add
add
or
push
add
mov
add
scas
ljmp
or
sbb
add
add
add
add
add
dec
add
je
call
push
add
lods
pop
add
add
stos
add
add
add
add
lock
je
add
add
fimull
add
add
add
add
push
pop
add
add
add
hlt
addb
pop
push
add
or
fcompl
add
rolb
add
stos
add
pop
add
add
pop
rolb
add
push
add
add
sbb
add
sbb
inc
add
add
add
pop
add
mov
add
add
dec
add
add
add
testb
add
add
add
pop
add
add
into
add
aam
add
add
inc
add
add
movsb
clc
mov
add
xor
add
and
add
cwtl
add
in
add
lcall
add
jp
and
add
pop
push
add
add
push
bound
outsb
add
jo
add
bound
lock
add
cli
add
data16
push
push
cmp
call
add
stos
popa
push
dec
addl
jns
mov
movsb
add
or
add
mov
push
adc
jecxz
mulb
mov
xor
lcall
push
loopne
sub
mov
sub
cmpsb
pusha
adcb
fs
mov
dec
insl
rol
call
xlat
cld
ret
cmp
pop
xchg
inc
dec
in
imul
dec
fisubl
rcll
add
ror
addb
mov
pop
and
js
pop
stos
mov
jns
push
lods
add
xor
fdivrp
cld
and
mov
mov
rorb
and
imul
bound
out
add
loop
mov
mov
add
mov
mov
pop
aad
js
dec
fcompl
cs
mov
aad
pop
das
add
inc
mov
lods
pusha
add
lods
and
arpl
leave
adc
stos
add
sbb
inc
push
add
pusha
insb
add
test
and
loopne
mov
cmc
inc
adc
pop
arpl
stos
inc
and
aaa
jg
mov
add
pop
fs
addb
add
fcoml
pop
aad
scas
inc
add
adc
inc
add
call
fcmovb
pop
aad
scas
out
add
cmp
mov
rolb
insl
das
xchg
fcompl
add
jecxz
xor
cmpsb
and
outsb
cmpsl
push
insl
dec
and
mov
mov
push
ret
push
push
leave
adc
sar
movsl
and
add
pusha
adcb
loopne
add
and
movsl
push
sub
loopne
or
push
out
mov
cmp
hlt
push
cmp
dec
mul
out
push
mov
enter
sub
push
test
jae
and
and
das
mov
dec
aas
loopne
and
loopne
xchg
imull
jle
mov
out
and
add
jmp
xor
mov
or
mov
test
add
mov
add
xchg
scas
loopne
jg
pusha
shlb
xchg
int
mov
add
inc
push
push
jg
jo
shlb
cltd
sub
sbb
pop
loop
add
adc
cmp
xchg
and
and
mov
or
mov
cmovbe
mov
pop
xor
pop
rclb
jae
pop
sahf
arpl
and
loopne
ret
jno
fisubl
xchg
ss
pusha
inc
xor
int
addb
push
sbb
inc
clc
rorl
sarb
and
jmp
mov
loopne
sbb
ljmp
mov
cmp
lock
outsb
adcl
sbb
xchg
mov
pusha
orb
fisttps
ret
imul
jo
cmp
pop
inc
push
pusha
add
lret
aad
add
cltd
cld
popa
out
insb
add
adc
andb
add
sub
pusha
sbb
std
push
sbb
push
jge
ljmp
sbb
leave
mov
xchg
mov
lods
in
insl
cltd
jmp
dec
add
loopne
out
test
sbb
add
mov
into
lret
and
rolb
shlb
loopne
or
add
add
fisubs
imul
and
movsb
shl
pop
in
sti
push
push
add
mov
fcompl
and
xor
cmp
xor
fists
ret
xor
in
and
or
mov
add
andb
xor
rol
andb
pop
dec
lahf
into
xchg
neg
outsl
iret
cmpsl
outsb
adc
lret
call
cld
mov
inc
add
in
pop
mov
inc
loopne
les
mov
mov
jns
iret
fs
pusha
and
sahf
push
scas
jg
mov
cmp
xor
mov
pusha
and
jmp
pop
pop
mov
dec
ds
sarb
pusha
inc
jbe
and
jne
push
fst
jns
push
out
loopne
push
push
add
imul
dec
je
adc
pop
add
andb
pusha
and
mov
sbb
popa
cmp
mov
clc
loope
aam
pusha
pusha
scas
mov
xchg
pusha
sbb
jg
sbb
fwait
mov
add
cmp
sbb
jmp
decb
mov
mov
mov
addb
aad
and
les
shl
mov
sbb
rcll
inc
jbe
loop
jnp
xor
orl
sub
subb
repnz
js
cmpsb
loopne
jnp
stos
add
push
mov
inc
js
ss
pusha
mov
adc
and
shlb
pusha
sub
jns
jns
inc
adc
fldenv
jp
add
inc
loopne
or
rol
shlb
fstpl
sti
add
clc
pusha
add
loop
bound
jp
dec
rolb
cltd
mov
and
lcall
pusha
aaa
aam
cld
mov
and
add
cwtl
push
pop
insb
and
stos
inc
rolb
andl
mov
mov
out
sbb
mov
rolb
data16
sub
mov
mov
add
adc
cld
lahf
sub
popa
pop
addr16
mov
in
cld
je
pusha
subb
mov
jns
xchg
mov
dec
dec
adc
add
loopne
bound
rolb
scas
gs
pop
out
fisubl
shl
aad
fildll
movsb
shlb
shlb
adc
idivl
fdivr
and
jno
insl
inc
push
insl
jge
mov
add
bound
shlb
bound
jl
and
ds
fnstcw
pusha
xchg
lea
mov
pusha
rcrb
mov
and
and
fidivrl
pusha
mov
and
shlb
push
or
loop
and
fists
or
jg
or
sarb
insl
xor
mov
fistl
lods
out
out
mov
ja
or
loopne
push
and
add
pusha
inc
add
cmpsb
addb
mov
mov
into
or
fcompl
fisttpll
rolb
fisubrl
loopne
xor
xchg
pop
dec
sub
sbbb
adcb
inc
xchg
push
shlb
push
sarb
stos
and
inc
xor
loope
and
in
das
aaa
dec
cmp
iret
dec
or
add
push
push
lock
mov
or
loopne
add
loopne
mov
in
pop
cmp
mov
fwait
xchg
les
fwait
outsb
lcall
pop
scas
mov
clc
jg
adc
mov
and
outsb
sub
loopne
pop
sub
bound
xor
dec
sbb
call
and
mov
loop
mov
mov
jl
ja
or
cld
sahf
mov
int3
test
mov
mov
xchg
push
mov
shrb
inc
scas
rolb
addb
inc
add
push
mov
sbb
out
xchg
add
mov
xor
ret
les
or
pusha
push
mov
add
inc
or
loopne
out
inc
lret
ja
addb
adc
cld
ror
into
xchg
cmpsb
add
pusha
add
fwait
mov
sahf
or
xor
jecxz
adc
cmp
movsb
mov
test
imul
and
rorb
insb
dec
mov
or
add
inc
adc
mov
loopne
jb
pop
shll
subb
mov
mov
inc
xchg
jecxz
pop
xor
shlb
and
pusha
sarl
sub
aas
xchg
les
pop
divb
leave
in
int3
pop
loop
push
test
mov
add
in
addb
movb
loopne
ss
mov
fcoml
lret
dec
scas
lret
cltd
fidivrl
inc
rol
mov
pusha
mov
pop
or
mov
andb
mov
add
sbb
cmp
mov
inc
mov
repnz
mov
roll
int3
mov
adc
xchg
or
rclb
mov
test
xchg
and
rcl
mov
aam
out
cld
ret
inc
std
testb
das
in
or
loopne
fwait
inc
nop
fisubs
pusha
pusha
gs
mov
loopne
and
mov
adc
enter
inc
xchg
popa
xchg
into
loop
add
add
jne
jae
or
loope
rolb
add
add
fstps
pop
dec
cmp
clc
pusha
dec
fwait
xchg
or
add
jo
fsubs
mov
add
daa
xor
gs
push
fcom
mov
push
std
testb
mov
mov
in
popf
test
add
sbb
pusha
add
xchg
mov
loop
insb
mov
shlb
pusha
xchg
push
and
into
adc
mov
dec
arpl
pusha
mov
jp
xchg
dec
test
xor
add
mov
or
dec
push
loopne
mov
or
flds
insl
xchg
inc
mov
sbb
clc
or
leave
pop
test
test
and
ds
lret
sbb
scas
shlb
and
out
lret
mov
inc
sub
mov
addr16
ss
mov
lods
loopne
daa
rcrl
rcrl
pop
push
mov
popf
pop
pop
push
addb
loopne
adc
fwait
mov
bound
loopne
clc
sti
add
add
pop
inc
pushf
ficoms
rolb
and
loopne
dec
icebp
cld
js
loopne
cmp
mov
lahf
lock
and
adc
inc
pop
lea
adc
push
popf
ljmp
arpl
orb
add
in
decb
cli
and
sbb
das
cli
mov
sbb
dec
jge
mov
andb
or
inc
jge
mov
xchg
cmpsb
rolb
insb
pop
stc
clc
imul
and
push
mov
fiaddl
les
into
jo
fdivl
jo
popf
pop
adc
bound
andb
mulb
shlb
lahf
dec
push
lret
mov
imul
dec
mov
loopne
scas
inc
inc
fdiv
clc
imul
and
sbb
sub
pusha
mov
lret
mov
push
jo
mov
xorb
jg
add
push
and
and
and
addb
sub
sar
add
out
arpl
rolb
rcr
add
insb
out
inc
dec
pop
xchg
loop
insl
sub
xchg
movsb
shl
andb
inc
inc
in
scas
mov
in
fs
xor
mov
mov
insl
int3
mov
loopne
add
test
and
int
ficoml
xchg
cltd
movsb
andb
and
loopne
dec
and
mov
pop
iret
pop
sub
inc
xor
test
cmp
xchg
mov
mov
and
std
mov
daa
icebp
and
push
jns
inc
and
xor
mov
or
inc
pusha
mov
jnp
lods
xchg
lcall
mov
into
iret
frstpm(287
pop
xchg
pop
pop
fcmovbe
dec
iret
fxch
mov
retw
cmpsl
push
loopne
pop
mov
sbbb
pusha
push
outsl
loopne
ds
mov
in
jge
call
xor
cltd
sbb
shl
fidivl
add
pusha
loopne
push
and
mov
shr
mov
fucomi
xchg
and
sbb
imul
add
ja
xchg
inc
jb
ss
cmp
add
popa
adc
dec
push
mov
add
rcll
mov
out
leave
add
fdivl
adc
test
mov
cmp
pop
inc
les
mov
and
add
jg
mov
adc
and
loopne
in
mov
sbb
pop
xorl
mov
in
xchg
jns
cmp
jecxz
cmc
sti
lds
addb
and
pusha
repnz
sbb
je
fstps
mov
cmpsb
mov
xchg
int3
or
mov
loopne
stc
fbstp
rcrb
inc
pushf
add
add
addr16
pushf
mov
loopne
adc
inc
ss
push
dec
mov
xchg
shr
push
jbe
addb
clc
std
mov
add
adc
mov
mov
fs
lahf
dec
loop
add
mov
fistpll
dec
push
inc
subb
dec
aas
mov
xorb
jo
test
pusha
shlb
iret
push
sbb
and
stc
aaa
xor
stos
inc
ret
jle
test
test
and
jle
lds
insl
cmp
jb
pop
xor
add
inc
jl
sbb
mov
push
push
jb
es
and
and
fcmovnbe
ljmp
shl
stos
and
cmp
test
mov
pushf
xor
adc
mov
and
add
jecxz
cmp
fnstenv
cli
add
pusha
pusha
jnp
stos
fmull
inc
out
xchg
dec
add
mov
insb
dec
insb
mov
test
insl
push
pop
fisubrs
scas
mov
adc
shl
nop
fimull
push
adc
mov
arpl
test
mov
xchg
mov
lds
rorb
add
imul
adc
lret
mov
or
inc
shl
sahf
sub
mov
pusha
lret
cmpsb
shlb
aam
in
inc
gs
cwtl
stos
loopne
sbb
push
fnstenv
sbb
loopne
inc
scas
mov
aaa
xchg
mov
shl
out
cli
dec
mov
dec
cltd
int
or
scas
cltd
sbb
and
jp
inc
inc
lahf
imul
mov
pushf
push
fwait
test
and
inc
shlb
scas
rolb
jecxz
fnstsw
sub
aas
jp
push
imul
xor
out
xor
pop
mov
loopne
mov
inc
xchg
dec
lret
sub
loopne
clc
scas
pusha
add
shlb
and
push
test
loopne
pop
ja
addb
rol
mov
loopne
test
inc
dec
push
fcoms
pusha
push
js
dec
cmpl
inc
add
xchg
mov
fs
nop
lods
and
xor
in
std
dec
xor
movsl
mov
orb
mov
stos
mov
sbb
cmp
xor
rclb
mov
mov
lcall
add
arpl
loopne
jmp
iret
push
out
sahf
push
shlb
std
les
mov
add
int3
fwait
inc
lds
add
icebp
in
inc
mov
sarb
sbb
loopne,pn
ret
and
faddl
pop
fwait
and
sbb
pop
movsb
add
mov
pusha
and
fistl
xor
jbe
push
lcall
loopne
aaa
mov
push
insl
adc
mov
push
mov
pusha
add
orb
cwtl
ss
pop
testb
pusha
sub
fs
shll
loopne
inc
sub
and
loopne
xchg
mov
pusha
leave
les
inc
loopne
and
adc
jne
and
mov
subb
cmp
les
sti
in
cmp
fs
clc
push
jb
add
sbb
jecxz
jg
ret
pop
fadds
dec
jne
int3
push
pusha
inc
push
popf
mov
pusha
adc
sub
add
aaa
jo
mov
jnp
inc
inc
sbb
or
inc
inc
mov
adc
les
pusha
ret
mov
testb
shr
mov
inc
mov
push
and
sbb
aas
outsb
sub
lret
jle
xor
imul
aad
sqrtps
addb
fstp
inc
popf
es
scas
sub
jecxz
push
call
js
push
pop
shr
lcall
xor
jne
rol
rcl
sub
dec
mov
rolb
iret
montmul
mov
sub
pusha
aam
clc
cmp
cwtl
jg
push
fildll
stos
and
into
data16
mov
or
and
cmp
test
andb
add
and
out
adc
cmpsb
andb
call
popf
cwtl
and
mov
add
dec
sub
andb
shll
cmp
loopne
data16
push
daa
testl
add
loop
mov
je
inc
and
xor
stc
xchg
sub
adcb
add
jns
cmp
mov
mov
lcall
shlb
imul
or
sahf
or
loopne
cmp
jnp
sar
filds
mov
add
inc
mov
enter
inc
add
dec
outsb
mov
out
aas
pop
push
andb
mov
sub
inc
stos
sahf
popf
pop
push
cmp
jmp
outsl
je
mov
add
aas
lret
and
idivl
xor
xchg
or
xorb
loopne
cmp
fwait
in
adc
pusha
loopne
jg
popf
cmp
cmpsb
add
mov
ficomps
pusha
and
lods
dec
xchg
hlt
cmpsb
mov
mov
mov
mov
pusha
imul
add
cmp
jae
push
mov
std
fidivrl
bound
loop
addr16
push
push
inc
inc
xor
inc
rol
pusha
add
ret
loopne
cld
add
inc
or
mov
and
push
push
add
mov
xchg
and
pusha
loopne
popa
xor
clc
loop
inc
mov
pop
and
push
shlb
sub
mov
lret
ja
push
mov
add
inc
xor
pop
push
dec
cmp
scas
and
sbb
stc
ja
add
jb
mov
gs
data16
xchg
ljmp
and
mov
xor
sub
pop
jp
lds
loope
and
mov
pop
sub
mov
icebp
push
and
or
out
sbb
rol
mov
xchg
inc
xchg
loopne
pop
xchg
outsl
movsb
add
clc
outsb
push
and
addb
add
stos
and
lret
push
pusha
loopne
mov
test
addb
ret
sbb
mov
or
cmpb
pop
icebp
addb
xchg
inc
cmp
and
and
mov
xchg
ret
and
mov
adc
scas
mov
loopne
inc
mov
xor
das
add
mov
and
data16
pusha
dec
pop
or
sub
popa
dec
es
cmp
iret
mov
sarb
mov
jno
popf
outsb
cs
stos
xchg
std
mov
push
mov
add
push
push
push
push
xor
mov
call
cld
sub
inc
add
imul
nop
push
pop
and
cmp
je
push
push
push
push
push
push
push
bnd
mov
cmp
jne
es
add
cs
add
stc
mov
push
push
clc
call
test
jne
push
ret
jmp
lea
movl
push
push
call
test
lea
jne
movzbl
or
mov
cld
not
imul
and
es
call
jmp
sbb
add
pushl
ret
pop
pop
add
pop
push
sub
push
push
inc
or
xchg
lea
cld
lea
lea
mov
cld
add
mov
mov
mov
sub
xor
repz
test
stc
jne
cld
jmp
xchg
je
xor
mov
jmp
cmp
push
scas
mov
pop
jmp
push
fstl
fimuls
push
inc
setg
pusha
shlb
aas
ret
outsl
or
shlb
mov
divb
shll
notb
inc
test
cmpsl
les
pop
pop
std
stos
lods
pusha
pusha
imul
leave
into
in
adc
push
xchg
pusha
ljmp
daa
std
pop
out
mov
fstl
lea
pop
call
jns
push
jmp
mov
dec
and
inc
xor
sub
pusha
xor
rolb
andb
outsb
lods
rolb
mov
xorb
fdiv
adc
mov
popa
and
and
addb
loopne
cmp
ja
lods
loopne
outsl
lock
pop
adc
mov
mov
mov
lahf
loopne
jg
mov
lret
fcoms
sbb
pop
mov
sahf
imul
loopne
adc
jnp
lods
xchg
cltd
or
lret
push
pop
xchg
sbb
sbb
inc
jecxz
push
cmpsl
push
pop
inc
fcoms
add
and
movsb
and
cmpl
and
mov
mov
pusha
mov
add
mov
lods
pusha
rorb
pop
mov
and
cwtl
lods
push
cltd
push
in
cmp
shll
subl
cli
or
loopne
pop
dec
sahf
insb
dec
pop
xor
sti
push
pusha
xorb
add
add
pusha
cmpb
jne
in
inc
test
and
add
mov
test
andb
out
cmp
fwait
mov
and
shlb
data16
inc
fmuls
inc
rcrb
ss
and
and
cmp
sub
pusha
nop
pop
movsb
andb
pop
pop
cmpsb
loopne
mov
addb
sar
mov
pop
rorl
xor
or
add
popa
shrb
jecxz
adc
adc
mov
jb
and
movsb
add
addr16
mov
inc
push
push
mov
mov
pushf
push
shlb
mov
add
dec
rolb
movsb
inc
and
sti
dec
sub
inc
adc
scas
cmpl
mov
gs
outsl
cmp
divb
inc
cwtl
jle
pop
sahf
in
xor
cmp
rcll
mov
inc
inc
sbb
sbb
cmp
jnp
or
and
fmull
jb
rorb
mov
scas
push
loopne
push
rol
frstor
sbb
xchg
pushf
jns
pop
xchg
xlat
xchg
pop
mov
int3
lret
pop
loopne
mov
aas
add
push
loopnew
push
add
dec
jle
xchg
aaa
push
xlat
dec
xor
shlb
loopne
mov
add
repz
rorb
aam
cmc
cs
loopne
mov
nop
int3
xor
lcall
pusha
and
and
pop
add
test
add
mov
jg
sarl
adc
fs
aad
ljmp
sub
cmpb
in
into
and
sbb
bound
sarb
imul
add
addb
add
into
sti
jl
and
add
loop
mov
inc
cmp
int3
sub
aad
inc
int
in
mov
lock
loope
mov
or
shl
jns
leave
addr16
dec
inc
mov
ljmp
fnstcw
inc
test
test
mov
ret
lahf
or
add
imul
je
mov
push
sub
rclb
pusha
pop
dec
sahf
fwait
xor
mov
mov
pusha
inc
lods
mov
inc
fsubs
push
les
mov
push
dec
inc
jle
pushf
dec
dec
lret
das
cmp
sub
mov
pusha
loopne
imul
andb
and
xlat
lahf
or
adc
mov
clc
ljmp
pushf
aas
js
xchg
pslld
add
je
push
or
mov
in
xchg
data16
mov
icebp
inc
jns
sbb
or
call
adc
push
mov
out
call
imul
adc
xlat
jl
xchg
and
lahf
xor
and
sub
sbb
pop
out
fs
adc
fs
inc
and
cli
sbb
bound
pop
faddl
add
dec
andb
lods
mov
loopne
push
sbbl
mov
sbb
pushf
jg
stos
psubb
mov
test
loopne
xor
es
inc
sbb
ret
pop
pop
sbb
jne
dec
push
or
inc
push
sar
push
and
mov
mov
pusha
pusha
mov
mov
addb
mov
mov
add
arpl
sbbl
mov
shr
mov
add
sarb
fadds
ret
movsl
scas
add
lret
nop
inc
sbb
xchg
push
mov
pop
sub
mov
cmp
cmpsb
mov
jne
mov
shrb
cmpsb
mov
test
addb
mov
pop
stos
daa
push
mov
add
arpl
pusha
add
ss
sub
mov
loopne
sbb
andb
push
pop
int
ja
in
push
jns
push
imul
ds
jge
xor
pusha
and
std
xlat
mov
pusha
hlt
cmp
out
shlb
stc
sti
xor
cmp
xchg
mov
addb
je
insb
ret
pop
xor
test
in
mov
mov
sar
shlb
xlat
mov
rcr
fcompl
int
xlat
jg
popa
movsl
sub
loopne
shrb
add
pusha
daa
ljmp
in
xchg
pop
inc
jnp
jb
dec
iret
push
pop
arpl
xchg
movsl
test
shl
loopne
fiadds
ss
mov
inc
cmp
mov
inc
mov
outsl
mov
mov
and
repnz
out
add
out
fsubrl
mov
aaa
add
sub
loopne
rolb
and
sbb
push
inc
sbb
jg
dec
sbb
in
inc
inc
dec
pop
out
stos
fisubl
mov
inc
and
xchg
push
and
inc
daa
mov
mov
enter
ret
in
mov
rolb
test
addb
xchg
xor
add
lret
iret
imul
add
out
loopne
and
fisttpll
jb
lock
mov
jmp
push
push
xchg
push
add
sub
addb
lret
cld
adc
pusha
mov
xchg
sub
add
inc
hlt
mov
sahf
add
mov
ljmp
push
aad
dec
pop
push
mov
add
mov
push
jp
add
mov
sbb
pushf
dec
cmp
xchg
repnz
cwtl
mov
mov
jbe
mov
das
dec
sub
loopne
hlt
aam
push
stos
push
cmp
imull
addb
std
shll
add
loopne
jnp
stos
js
cmpl
stos
lahf
adc
pusha
mov
pusha
arpl
repz
imul
data16
lods
pusha
and
fldt
stos
push
loope
add
push
fistpll
jnp
lock
mov
xor
jnp
cltd
add
jg
xor
pop
and
and
outsb
popf
push
jns
push
shlb
cmp
xchg
or
mov
xor
push
pusha
add
mov
sbb
push
mov
mov
mov
rolb
cmp
shl
xchg
fimuls
loopne
addr16
inc
sahf
subl
dec
das
jne
add
inc
cmp
mov
sbb
pop
or
and
stos
and
and
jbe
nop
repnz
test
mov
jno
inc
lock
loope
inc
mov
jno
dec
push
inc
scas
mov
xor
and
call
push
mov
dec
or
and
inc
mov
clc
jbe
fnstenv
rorl
es
sbbb
insb
push
pop
ret
inc
adc
shlb
insl
aam
add
xchg
cmp
xchg
pop
add
and
sbb
and
test
xchg
inc
sti
test
and
mov
lds
fisttpll
outsl
mov
add
sar
inc
add
andb
sub
mov
shrl
lds
adc
sub
and
and
lcall
insl
cmp
stos
and
and
mov
cmp
aas
repnz
push
push
mov
push
pop
push
mov
rolb
mov
pop
xor
and
loopne
mov
sub
add
push
adc
xchg
xor
push
addr16
inc
add
push
aaa
inc
in
and
addr16
in
or
inc
mov
push
pop
xor
sub
and
jo
enter
add
pusha
andb
sub
inc
rcll
adc
push
add
shlb
fcmovnb
jmp
call
inc
addb
pop
jo
movsl
mov
dec
imul
leave
dec
jmp
jmp
or
andb
inc
shl
jae
jno
clc
andb
mov
mov
test
add
lods
inc
inc
adc
fdivl
and
mov
dec
mov
loop
lods
mov
jns
inc
fadds
mov
jl
dec
mov
js
andb
add
add
pushf
inc
mov
rolb
inc
jmp
shlb
mov
andb
mov
rcrb
and
fiaddl
pop
shlb
pushf
clc
icebp
adc
mov
sbb
sarl
hlt
jno
mov
pusha
mov
lods
rolb
and
loopne
cmpsb
loopne
push
jmp
iret
mov
push
aad
add
inc
xor
fwait
call
movsl
repnz
inc
loopne
xor
int3
jne
mov
mov
pop
fdivrl
and
in
andb
and
repz
sub
sub
in
pusha
mov
mov
ljmp
cltd
in
in
bound
xchg
mov
add
in
mov
pop
ret
cmp
or
add
add
inc
jbe
jmp
inc
sbb
mov
loopne
outsl
mov
fwait
cmpsl
dec
jp
leave
xor
inc
and
in
and
pusha
outsl
mov
jmp
test
and
pop
push
push
jne
push
adc
mov
push
sbb
roll
andl
add
jae
sbb
das
mov
rolb
add
mov
inc
pusha
push
sub
in
scas
adc
aas
mov
jae
jecxz
and
inc
adc
in
jne
cmp
mov
outsb
push
xchg
mov
ds
and
arpl
out
shlb
addl
add
loopne
cmp
and
cmpsl
popa
js
mov
xchg
push
mov
out
adc
loopne
xor
sub
fdivrl
jle
jge
xor
shl
addb
neg
and
mov
dec
cmp
hlt
push
sub
pop
nop
ffreep
pop
inc
sbb
mov
ror
push
jae
subl
loopne
cmp
adc
ds
mov
sbbl
dec
test
imul
jmp
lods
jae
xchg
dec
andb
pushf
add
out
popf
push
rol
arpl
xor
and
xchg
push
inc
loopne
outsb
scas
loopne
inc
cmp
loopne
mov
rol
rolb
pop
mov
sub
push
shl
sbb
mov
mov
shrl
pop
pop
es
or
pusha
inc
and
inc
stc
cmp
sarl
js
xchg
imul
pusha
jecxz
clc
xchg
fcmovne
jg
and
push
jns
or
loopne
jns
sub
xor
sti
add
and
lods
loopne
pop
add
pusha
stos
xor
aas
dec
jl
pop
sbb
shlb
sbbb
dec
xchg
ss
test
mov
fstps
loopne
test
pusha
roll
add
sub
addl
js
sub
adc
push
loopne
dec
xor
test
push
pop
jg
xor
cmp
ret
mov
or
cmpb
xchg
pop
cld
loopne
inc
xor
pop
or
subb
sarb
imul
dec
jl
in
inc
pop
into
aas
int3
push
cmp
or
ljmp
mov
push
add
loopne
xchg
jmp
inc
stos
add
ja
rol
cltd
and
and
sbb
rolb
cltd
loope
addr16
mov
pusha
pusha
out
ja
shlb
add
mov
cwtl
and
fs
ljmp
pop
mov
and
inc
pop
mov
add
shlb
inc
cmpsl
jmp
bound
and
inc
sbb
loopne
push
dec
pop
mov
rorb
sub
pusha
jo
sahf
pusha
imul
sbbb
cmp
and
mov
out
mov
loopne
in
sarb
and
mov
int
mov
roll
pusha
push
and
mov
rcl
cmpsb
and
add
lds
lods
push
addb
xchg
dec
lea
add
int
mov
inc
adc
in
jb
or
add
push
pushf
and
cmpsb
pusha
sbbb
adc
mov
push
and
xor
pop
gs
fsubrp
imul
mov
mov
mov
dec
mov
pop
addb
sub
pop
jmp
int
or
stos
jmp
pop
jne
pop
sbb
pop
mov
ret
lods
pusha
andb
cmp
in
xchg
es
inc
hlt
add
lret
mov
sbbb
and
pop
fwait
and
mov
pusha
loopne
bnd
inc
movsl
add
inc
add
in
nop
leave
nop
jmp
dec
add
jnp
movsb
clc
repnz
nop
cld
jae
std
add
add
roll
adc
mov
add
repnz
nop
cld
jae
mov
pusha
and
mov
fld1
clc
repnz
nop
cld
jae
xor
in
aad
jle
and
inc
jmp
mov
and
lret
add
add
aad
sbb
push
mov
add
sub
add
add
jne
add
push
push
mov
nop
leave
nop
jmp
mov
std
add
clc
aam
fistpl
push
mov
xchg
ret
cwtl
add
push
lds
mov
add
movsb
mov
mov
xchg
ret
rcl
add
add
add
add
or
sub
push
mov
xchg
ret
add
add
lret
ds
negl
mov
xchg
ret
xlat
add
out
mov
fld1
push
mov
nop
leave
nop
jmp
add
popa
add
jns
add
dec
popl
xchg
ret
pop
add
sub
adc
inc
add
add
out
add
mov
push
clc
repnz
nop
cld
jae
ss
add
xlat
rcrl
dec
push
mov
nop
leave
nop
jmp
add
add
aaa
dec
push
mov
nop
leave
nop
jmp
add
add
pop
xlat
add
xor
clc
repnz
nop
cld
jae
ror
roll
ret
or
add
clc
repnz
nop
cld
jae
push
pop
lea
mov
nop
leave
nop
jmp
mov
ret
or
loopne
icebp
push
clc
repnz
nop
cld
jae
lea
add
add
repnz
nop
cld
jae
test
test
add
push
mov
nop
leave
nop
jmp
add
push
fadds
fnstsw
jne
push
mov
nop
leave
nop
jmp
lea
stos
jne
clc
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
nop
jmp
add
lds
lcall
nop
nop
cld
jae
jle
je
add
or
mov
push
mov
xchg
ret
add
ljmp
shrb
push
jmp
add
repnz
nop
cld
jae
add
ljmp
add
clc
repnz
nop
cld
jae
xor
jno
data16
ljmp
cld
jae
lret
add
add
dec
shl
clc
repnz
nop
cld
jae
lcall
fistpl
clc
repnz
nop
cld
jae
add
add
add
mov
repnz
nop
cld
jae
aad
lea
repnz
nop
cld
jae
add
fadds
in
add
rcrl
lea
clc
repnz
nop
cld
jae
add
mov
mov
lcall
add
add
add
add
add
mov
clc
repnz
nop
cld
jae
add
lret
mov
orb
push
mov
xchg
ret
add
into
add
add
add
push
loopne
lea
clc
repnz
nop
cld
jae
flds
xor
add
xchg
jb
mov
in
nop
leave
nop
jmp
xor
add
test
into
adcl
jae
add
push
add
add
cmp
nop
nop
cld
jae
mov
add
add
cmp
push
mov
nop
leave
nop
jmp
add
add
add
lcall
jbe
clc
repnz
nop
cld
jae
add
add
adc
inc
je
clc
repnz
nop
cld
jae
test
jle
mov
nop
cld
jae
add
add
add
leave
pop
mov
clc
repnz
nop
cld
jae
mov
add
mov
clc
repnz
nop
cld
jae
xor
out
add
push
mov
xchg
ret
xor
test
add
adc
add
push
mov
nop
leave
nop
jmp
add
add
push
mov
nop
leave
nop
jmp
ljmp
push
add
repnz
nop
cld
jae
dec
add
lds
xor
push
clc
repnz
nop
cld
jae
test
xor
mov
add
add
push
mov
nop
leave
nop
jmp
movsl
add
jno
push
push
mov
xchg
ret
jle
cwtl
popa
repnz
test
idiv
repnz
nop
cld
jae
fstpl
sub
add
mov
clc
repnz
nop
cld
jae
into
lea
rep
push
mov
nop
leave
nop
jmp
ja
add
add
mov
push
mov
xchg
ret
add
fnstenv
inc
add
add
clc
repnz
nop
cld
jae
add
pop
pop
jns
mov
add
add
add
popa
add
call
nop
nop
cld
jae
add
add
aam
jne
clc
repnz
nop
cld
jae
into
inc
imul
add
sub
add
add
in
jle
mov
clc
repnz
nop
cld
jae
dec
repnz
add
aaa
xor
clc
repnz
nop
cld
jae
mov
push
add
clc
repnz
nop
cld
jae
add
add
popa
f2xm1
lsl
jmp
lcall
add
fscale
cmpb
add
pusha
adc
cmpw
clc
repnz
nop
cld
jae
test
xor
push
mov
xchg
ret
mov
out
add
fwait
clc
repnz
nop
cld
jae
add
add
add
add
jl
mov
clc
repnz
nop
cld
jae
mov
add
add
add
mov
add
add
clc
repnz
nop
cld
jae
add
rorl
nop
nop
cld
jae
std
add
in
pop
push
cmp
pusha
push
mov
xchg
ret
test
add
mov
xchg
mov
clc
repnz
nop
cld
jae
out
add
movswl
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
add
pop
popa
add
add
inc
and
clc
repnz
nop
cld
jae
pop
pop
sub
mov
repnz
nop
cld
jae
into
movl
push
push
mov
nop
leave
nop
jmp
add
add
jle
add
fimuls
jg
clc
repnz
nop
cld
jae
add
fldl
ret
jle
subl
push
mov
xchg
ret
dec
lret
add
mov
add
out
stos
inc
add
xor
out
pop
in
xor
in
nop
leave
nop
jmp
dec
lret
inc
add
add
repnz
nop
cld
jae
bnd
ret
add
or
nop
nop
cld
jae
leave
test
jbe
mov
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
fldl
jle
jle
rorl
cld
jae
jle
add
lea
and
clc
repnz
nop
cld
jae
add
add
mov
add
clc
repnz
nop
cld
jae
fmull
mov
mov
xchg
ret
jno
add
add
add
adc
repnz
nop
cld
jae
add
xor
sbb
insl
add
clc
repnz
nop
cld
jae
out
ss
repnz
nop
cld
jae
add
add
add
ja
add
repnz
nop
cld
jae
fadd
inc
out
add
pop
cmpsb
mov
inc
adc
repnz
nop
cld
jae
ljmp
je
clc
repnz
nop
cld
jae
lds
add
add
push
mov
nop
leave
nop
jmp
jle
lret
pop
add
jle
dec
jecxz
mov
push
clc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
add
dec
out
add
add
ljmp
jae
movsl
add
pop
clc
repnz
nop
cld
jae
je
test
mov
mov
clc
repnz
nop
cld
jae
inc
add
bnd
popf
ja
clc
repnz
nop
cld
jae
popa
popa
mov
nop
nop
cld
jae
add
pop
add
add
ja
mov
sar
nop
nop
cld
jae
fucomp
out
test
loopne
roll
cmp
mov
nop
leave
nop
jmp
mov
popa
add
push
clc
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
ret
add
dec
movl
nop
cld
jae
add
add
add
jne
clc
repnz
nop
cld
jae
xor
ja
pop
add
push
push
mov
xchg
ret
pop
lcall
aas
mov
push
mov
nop
leave
nop
jmp
fldl
ja
inc
add
fldt
inc
xor
clc
repnz
nop
cld
jae
test
dec
push
and
mov
xchg
ret
push
add
mov
add
push
mov
xchg
ret
add
fstps
popa
es
scas
andb
xor
add
jmp
add
pop
add
out
add
fldl
add
clc
repnz
nop
cld
jae
add
vpextrw
lds
bnd
out
xor
push
mov
xchg
ret
ja
add
pusha
and
dec
push
mov
xchg
ret
add
shl
add
sub
mov
clc
repnz
nop
cld
jae
lds
popa
add
cli
pop
push
push
mov
xchg
ret
add
lret
add
lock
cld
jae
ret
leave
add
pop
lea
pop
clc
repnz
nop
cld
jae
add
add
sbb
add
call
push
mov
nop
leave
nop
jmp
cwtl
xor
push
mov
add
add
add
adc
jbe
xchg
scas
push
add
call
clc
repnz
nop
cld
jae
repnz
jg
clc
repnz
nop
cld
jae
popa
add
add
add
pop
stos
pusha
pusha
add
mov
xchg
ret
add
ret
cld
loope
push
mov
xchg
ret
xor
ljmp
sbb
fmull
jno
add
mov
add
add
andb
clc
repnz
nop
cld
jae
push
add
pop
pop
add
push
mov
xchg
ret
roll
add
add
rorl
nop
nop
cld
jae
roll
leave
add
shll
fld1
clc
repnz
nop
cld
jae
add
add
movl
add
clc
repnz
nop
cld
jae
in
add
mov
repnz
nop
cld
jae
add
decl
push
mov
xchg
ret
ljmp
mov
mov
xchg
ret
mov
fldl
add
jne
clc
repnz
nop
cld
jae
ljmp
push
add
repnz
nop
cld
jae
add
add
add
xor
add
fmull
cs
mov
nop
leave
nop
jmp
add
add
mov
mov
xchg
ret
add
rolb
movl
clc
repnz
nop
cld
jae
add
in
add
add
mov
in
jno
clc
repnz
nop
cld
jae
add
rcrb
jge
clc
repnz
nop
cld
jae
add
push
add
add
mov
rclb
inc
add
into
movsl
std
add
add
cmpsl
rep
clc
repnz
nop
cld
jae
add
aad
inc
lret
jmp
ret
add
pop
add
add
ror
pop
clc
repnz
nop
cld
jae
pop
add
fdiv
sub
loopne
scas
mov
jb,pt
push
mov
nop
leave
nop
jmp
add
fadds
fldcw
sub
repnz
nop
cld
jae
in
add
push
push
mov
nop
leave
nop
jmp
add
lds
xorl
push
mov
nop
leave
nop
jmp
add
xchg
lea
push
mov
xchg
ret
or
movsl
add
nop
repnz
loopne
pop
cld
mov
mov
xchg
ret
add
add
popa
add
add
add
push
mov
xchg
ret
xor
andb
add
inc
push
mov
xchg
ret
pop
add
rolb
ja
pop
add
inc
or
repnz
nop
cld
jae
push
mov
mov
push
mov
xchg
ret
mov
xor
testl
add
repnz
nop
cld
jae
add
rcll
mov
xchg
ret
add
popa
mov
mov
add
push
push
mov
xchg
ret
roll
add
push
dec
pop
clc
repnz
nop
cld
jae
std
xor
add
push
mov
cltd
pop
clc
repnz
nop
cld
jae
add
add
out
ja
add
subb
inc
push
mov
xchg
ret
add
add
cwtl
out
sbb
shlb
pop
mov
fwait
inc
add
add
mov
add
push
clc
repnz
nop
cld
jae
add
add
rorl
ret
pop
rcl
add
cwtl
add
sub
add
and
test
add
clc
repnz
nop
cld
jae
mov
add
push
mov
xchg
ret
add
addb
add
call
aad
sar
repnz
nop
cld
jae
addb
ret
add
add
xor
clc
repnz
nop
cld
jae
pop
ljmp
je
push
mov
nop
leave
nop
jmp
add
add
cs
clc
repnz
nop
cld
jae
pop
jno
add
push
repz
repnz
nop
cld
jae
add
jle
repnz
xor
clc
repnz
nop
cld
jae
sub
fisttpll
popa
inc
jmp
add
lcall
lds
sub
in
nop
leave
nop
jmp
add
add
pop
mov
clc
repnz
nop
cld
jae
add
add
leave
addb
stos
push
mov
xchg
ret
push
inc
push
iret
pop
push
mov
nop
leave
nop
jmp
xor
add
mov
adc
lea
push
mov
nop
leave
nop
jmp
xor
add
call
clc
repnz
nop
cld
jae
test
add
xor
add
clc
repnz
nop
cld
jae
add
add
popa
add
in
nop
leave
nop
jmp
add
add
cwtl
ljmp
lahf
inc
add
add
je
add
sbb
enter
mov
clc
repnz
nop
cld
jae
add
faddl
out
push
push
mov
nop
leave
nop
jmp
add
add
add
nop
nop
cld
jae
fmuls
add
add
clc
repnz
nop
cld
jae
out
test
push
xor
inc
pushfw
sbb
je
clc
repnz
nop
cld
jae
add
shll
add
in
nop
leave
nop
jmp
in
add
jmp
sub
add
and
and
pop
cwtl
rcl
mov
pop
mov
clc
repnz
nop
cld
jae
add
add
xchg
add
ljmp
rorl
ret
push
mov
xchg
ret
rol
add
aad
and
pop
mov
clc
repnz
nop
cld
jae
add
jle
push
clc
repnz
nop
cld
jae
add
push
add
add
int3
inc
pop
jmp
pushl
pop
add
add
inc
sbb
popa
mov
in
add
push
mov
nop
leave
nop
jmp
add
add
add
fmull
clc
repnz
nop
cld
jae
add
add
leave
filds
push
mov
and
lcall
insb
cmp
nop
nop
cld
jae
cwtl
jle
xor
frstor
loopne
out
and
clc
repnz
nop
cld
jae
add
push
mov
repnz
nop
cld
jae
add
add
inc
jno
clc
repnz
nop
cld
jae
add
add
add
movsl
test
mov
push
mov
xchg
ret
mov
add
add
lret
sar
repnz
nop
cld
jae
lret
add
add
jne
push
mov
xchg
ret
add
test
push
mov
inc
pusha
push
push
mov
repnz
nop
cld
jae
add
pop
add
add
cwtl
add
add
pop
push
mov
xchg
ret
cwtl
popa
add
jno
add
add
mov
clc
repnz
nop
cld
jae
rcl
add
clc
repnz
nop
cld
jae
add
add
add
sbb
adc
xchg
inc
add
out
add
jno
push
mov
nop
leave
nop
jmp
lcall
ljmp
add
repnz
nop
cld
jae
dec
std
fcomps
xlat
add
push
clc
repnz
nop
cld
jae
add
ja
leave
lea
in
nop
leave
nop
jmp
out
enter
pop
jle
cmp
xor
and
add
fnstsw
pop
jae
push
mov
xchg
ret
add
add
out
fwait
push
mov
xchg
ret
popa
push
cwtl
pop
lret
adc
clc
repnz
nop
cld
jae
mov
add
ljmp
repnz
nop
cld
jae
add
pop
jno
add
pop
ret
push
mov
nop
leave
nop
jmp
lds
inc
xlat
add
nop
nop
cld
jae
push
pop
cwtl
test
cmp
nop
cld
jae
test
add
lea
stos
push
mov
icebp
pop
shrd
add
add
xchg
add
pop
push
push
mov
xchg
ret
rcl
sbb
add
mov
clc
repnz
nop
cld
jae
add
add
dec
mov
clc
repnz
nop
cld
jae
mov
inc
je
push
mov
nop
leave
nop
jmp
popa
test
pusha
pop
mov
adc
add
clc
repnz
nop
cld
jae
mov
pop
add
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
add
flds
ret
movb
out
mov
and
add
ljmp
mov
clc
repnz
nop
cld
jae
add
popa
add
flds
jnp
call
cld
jae
add
jno
mov
clc
repnz
nop
cld
jae
sbb
add
sbb
pop
clc
repnz
nop
cld
jae
add
add
test
add
add
clc
repnz
nop
cld
jae
add
add
xor
fld1
clc
repnz
nop
cld
jae
ljmp
popa
add
clc
repnz
nop
cld
jae
add
jle
push
fstps
adc
repnz
nop
cld
jae
dec
add
add
mov
xchg
ret
add
addb
add
add
push
mov
nop
leave
nop
jmp
add
add
fsubl
mov
sar
nop
nop
cld
jae
add
fucomp
xor
clc
repnz
nop
cld
jae
mov
ja
dec
adc
pusha
into
adc
jl
leave
clc
repnz
nop
cld
jae
add
add
fsubr
movsl
push
or
in
nop
leave
nop
jmp
add
out
add
dec
cmp
repnz
nop
cld
jae
enter
add
arpl
nop
nop
cld
jae
je
add
lea
inc
stos
rolb
push
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
mov
fadds
into
out
push
jns
leave
push
mov
nop
leave
nop
jmp
test
add
push
es
jecxz
mov
nop
leave
nop
jmp
pop
xor
sub
mov
xchg
ret
add
mov
add
pusha
mov
nop
nop
cld
jae
add
rcrb
repnz
stc
mov
push
mov
nop
leave
nop
jmp
roll
fimull
cltd
push
push
mov
xchg
ret
add
ja
cwtl
add
add
div
clc
repnz
nop
cld
jae
add
lret
mov
gs
repnz
nop
cld
jae
out
lcall
in
mov
add
pop
add
add
rcr
inc
loopne
mov
xchg
ret
into
addb
test
mov
nop
cld
jae
rcrl
cwtl
mov
mov
clc
repnz
nop
cld
jae
add
test
movsl
lret
testl
push
mov
nop
leave
nop
jmp
leave
into
add
jne
clc
repnz
nop
cld
jae
in
sub
add
push
mov
xchg
ret
xor
add
subb
fistpl
push
mov
nop
leave
nop
jmp
xlat
mov
add
sub
add
repnz
nop
cld
jae
push
add
jle
mov
push
mov
nop
leave
nop
jmp
add
add
jle
in
push
mov
nop
leave
nop
jmp
add
into
cwtl
fldl
pop
into
dec
xor
repnz
nop
cld
jae
add
add
and
loop
push
shl
push
mov
xchg
ret
ljmp
add
pop
adc
clc
repnz
nop
cld
jae
add
lds
mov
rep
push
mov
nop
leave
nop
jmp
push
std
add
mov
bnd
repnz
nop
cld
jae
add
ljmp
rolb
mov
push
ja
clc
repnz
nop
cld
jae
push
repnz
mov
push
mov
xchg
ret
add
leave
ror
fld1
clc
repnz
nop
cld
jae
push
rolb
dec
out
add
mov
clc
repnz
nop
cld
jae
mov
fdivrs
mov
xchg
ret
leave
movsl
add
jl
fistpl
push
mov
xchg
ret
je
add
rorl
je
clc
repnz
nop
cld
jae
add
add
lahf
xchg
push
mov
xchg
ret
movl
mov
push
push
mov
nop
leave
nop
jmp
dec
rcl
add
push
clc
repnz
nop
cld
jae
push
add
push
cs
fwait
ret
push
mov
xchg
ret
add
leave
push
fsubl
pop
mov
test
add
add
inc
add
mov
jmp
push
mov
xchg
ret
add
pop
add
scas
xchg
push
mov
nop
leave
nop
jmp
leave
add
add
sti
pop
push
mov
nop
leave
nop
jmp
add
sub
add
clc
repnz
nop
cld
jae
mov
lds
arpl
nop
cld
jae
in
out
test
add
jle
ret
push
mov
nop
leave
nop
jmp
pop
in
jle
add
popa
add
jnp
add
roll
lds
add
add
loopne
sbb
cmp
cmp
nop
nop
cld
jae
add
roll
cmp
push
clc
repnz
nop
cld
jae
add
add
push
cwtl
add
add
push
mov
nop
leave
nop
jmp
add
sbb
add
je
push
push
mov
nop
leave
nop
jmp
add
xlat
out
nop
sub
rclb
nop
leave
nop
jmp
lret
add
jno
mov
add
push
mov
nop
leave
nop
jmp
test
mov
push
mov
xchg
ret
push
add
cwtl
pop
ret
mov
clc
repnz
nop
cld
jae
lcall
cmp
cmp
repnz
nop
cld
jae
test
lds
add
andb
add
nop
nop
cld
jae
std
ret
add
mov
add
push
mov
nop
leave
nop
jmp
add
add
lds
mov
push
mov
nop
leave
nop
jmp
add
add
pop
mov
push
mov
xchg
ret
shlb
add
je
addb
and
shr
clc
repnz
nop
cld
jae
pop
add
out
into
in
or
push
mov
nop
leave
nop
jmp
ss
add
add
pop
jo
mov
add
clc
repnz
nop
cld
jae
add
add
add
call
inc
add
push
add
sbb
add
clc
repnz
nop
cld
jae
add
add
test
in
push
mov
xchg
ret
pop
pop
add
test
rolb
enter
nop
leave
nop
jmp
test
add
lea
repnz
nop
cld
jae
lea
add
mov
add
push
mov
xchg
ret
out
push
mov
nop
mov
xchg
ljmp
cld
jae
pop
popa
add
add
inc
in
movzwl
clc
repnz
nop
cld
jae
add
ljmp
xor
clc
repnz
nop
cld
jae
sub
add
add
clc
repnz
nop
cld
jae
into
add
lds
push
cmp
push
mov
xchg
ret
sbb
add
pusha
inc
xchg
test
push
mov
xchg
ret
into
fmuls
rcl
pop
ret
mov
clc
repnz
nop
cld
jae
add
test
mov
push
mov
nop
leave
nop
jmp
je
add
add
and
mov
xchg
ret
pop
xor
call
cld
jae
add
sbb
xor
add
pop
jge
aas
clc
repnz
nop
cld
jae
add
add
movl
push
mov
nop
leave
nop
jmp
mov
xor
shl
je
clc
repnz
nop
cld
jae
add
pop
outsl
cmpl
push
mov
nop
leave
nop
jmp
test
out
pop
push
clc
repnz
nop
cld
jae
add
roll
add
fstps
push
mov
xchg
ret
ljmp
xor
mov
clc
repnz
nop
cld
jae
movl
rep
clc
repnz
nop
cld
jae
mov
std
mov
call
push
mov
nop
leave
nop
jmp
leave
add
xor
add
clc
repnz
nop
cld
jae
in
add
pop
dec
and
clc
repnz
nop
cld
jae
rolb
std
add
ljmp
in
nop
leave
nop
jmp
cwtl
out
add
add
subb
push
mov
nop
leave
nop
jmp
add
add
add
add
clc
repnz
nop
cld
jae
add
ss
xlat
add
out
inc
mov
clc
repnz
nop
cld
jae
lcall
icebp
incl
dec
jno
ljmp
leave
add
ljmp
mov
add
add
in
add
add
adc
nop
nop
cld
jae
test
push
mov
push
mov
xchg
ret
push
sbb
add
add
jmp
clc
repnz
nop
cld
jae
jle
ss
pop
pop
lret
lea
clc
repnz
nop
cld
jae
ljmp
imul
push
mov
nop
leave
nop
jmp
add
add
adcb
nop
leave
nop
jmp
fadd
add
adc
sbb
add
push
mov
nop
leave
nop
jmp
pop
in
add
popa
add
fistpl
clc
repnz
nop
cld
jae
add
add
nop
cld
jae
pop
add
add
out
adc
popf
inc
add
add
sub
jle
add
aad
push
repz
call
add
lcall
jno
add
jle
pusha
xorb
repnz
nop
cld
jae
test
fwait
push
mov
xchg
ret
pop
pop
pop
add
add
movsl
inc
add
ret
push
xor
fadds
jle
pop
clc
repnz
nop
cld
jae
pop
aad
shll
js
pop
clc
repnz
nop
cld
jae
test
mov
mov
adc
nop
leave
nop
jmp
popa
pop
rclb
add
push
clc
repnz
nop
cld
jae
flds
add
insl
movzwl
clc
repnz
nop
cld
jae
sbb
mov
xbegin
jae
add
add
add
fcmove
lds
nop
nop
cld
jae
add
xor
add
mov
clc
repnz
nop
cld
jae
mov
jno
add
addr16
clc
repnz
nop
cld
jae
lds
mov
xlat
cmp
push
mov
nop
leave
nop
jmp
sbb
add
nop
cld
jae
jno
add
aad
add
stos
mov
clc
repnz
nop
cld
jae
test
mov
clc
repnz
nop
cld
jae
add
sbb
sbb
push
push
mov
xchg
ret
fcomp
test
ja
push
into
fisttps
nop
nop
cld
jae
xor
inc
inc
movl
clc
repnz
nop
cld
jae
mov
flds
lcall
add
push
mov
xchg
ret
add
ljmp
loopne
mov
clc
repnz
nop
cld
jae
ljmp
push
push
mov
xchg
ret
dec
xor
xor
fldl
add
nop
nop
cld
jae
add
add
pop
jae
jmp
incl
add
addb
add
pop
test
add
clc
repnz
nop
cld
jae
pop
pop
add
mov
clc
repnz
nop
cld
jae
add
add
add
popa
add
clc
repnz
nop
cld
jae
enter
add
cmpsb
inc
add
je
rorl
clc
repnz
nop
cld
jae
inc
add
xor
add
test
mov
jle
add
push
mov
xchg
ret
add
add
rep
clc
repnz
nop
cld
jae
add
ret
add
push
mov
nop
leave
nop
jmp
add
add
pop
push
mov
nop
leave
nop
jmp
add
push
leave
xchg
sbb
pusha
cld
clc
repnz
nop
cld
jae
add
add
cmp
mov
xchg
ret
enter
add
add
or
loopne
ja
lods
add
add
mov
add
add
xor
cwtl
add
clc
repnz
nop
cld
jae
pop
add
pop
mov
push
adc
fistpl
clc
repnz
nop
cld
jae
add
lcall
xor
repnz
nop
cld
jae
add
call
nop
nop
cld
jae
add
add
fwait
mov
clc
repnz
nop
cld
jae
roll
add
add
adcl
jae
add
lds
enter
and
sub
inc
and
mov
nop
leave
nop
jmp
pop
test
js
cmpl
push
mov
nop
leave
nop
jmp
jle
xor
ud0
push
mov
xchg
ret
add
lds
sub
mov
push
mov
xchg
ret
ret
add
add
pop
dec
das
jne
clc
repnz
nop
cld
jae
add
add
xorb
call
fdivr
leave
add
sub
add
movsl
dec
aad
addb
push
xor
addb
mov
nop
leave
nop
jmp
add
cmpsb
mov
repnz
nop
cld
jae
xlat
jle
add
add
mov
cli
clc
repnz
nop
cld
jae
add
add
push
cmp
rclb
movsl
inc
add
xlat
add
roll
jle
addb
add
clc
repnz
nop
cld
jae
leave
push
inc
jle
add
add
clc
repnz
nop
cld
jae
xor
rolb
fcomps
call
clc
repnz
nop
cld
jae
add
lret
push
lea
nop
nop
cld
jae
lea
out
add
ja
fstpt
clc
repnz
nop
cld
jae
enter
repnz
nop
leave
nop
jmp
mov
add
add
clc
repnz
nop
cld
jae
add
add
lods
add
inc
pop
push
mov
nop
leave
nop
jmp
ljmp
lcall
nop
cld
jae
in
ljmp
mov
clc
repnz
nop
cld
jae
test
add
add
add
aam
fmuls
inc
adc
mov
and
pop
lret
inc
pop
ja
add
loopne
xchg
clc
repnz
nop
cld
jae
leave
add
add
cmp
push
mov
nop
leave
nop
jmp
add
fcom
push
push
mov
xchg
ret
ffree
inc
add
add
add
insl
mov
clc
repnz
nop
cld
jae
ret
add
xor
jne
push
mov
xchg
ret
add
add
lcall
mov
cmp
ret
lret
add
ljmp
sbb
add
clc
repnz
nop
cld
jae
frstor
jnp
nop
cld
jae
add
add
cmp
scas
inc
add
mov
add
pop
jne
clc
repnz
nop
cld
jae
add
sbb
call
cld
jae
mov
faddl
fdivl
mov
sbb
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
add
add
add
mov
mov
nop
leave
nop
jmp
pop
xor
shll
movsl
flds
ret
pusha
clc
repnz
nop
cld
jae
push
add
in
add
add
popf
inc
add
enter
add
add
cmp
xor
push
mov
nop
leave
nop
jmp
enter
roll
jecxz
jmp
mov
xchg
ret
add
add
std
shlb
and
nop
nop
cld
jae
test
add
cmpsb
loopne
jno
test
clc
repnz
nop
cld
jae
pop
ljmp
loop
mov
push
mov
xchg
ret
lret
test
lret
icebp
push
push
mov
nop
leave
nop
jmp
add
xlat
add
jmp
nop
leave
nop
jmp
add
sub
add
loop
push
mov
xchg
ret
pop
into
mov
mov
mov
push
mov
xchg
ret
pop
pop
add
add
fmul
mov
inc
lret
shlb
mov
and
repnz
nop
cld
jae
out
rolb
add
clc
repnz
nop
cld
jae
add
add
or
add
add
jno
movsl
mov
ljmp
add
mov
clc
repnz
nop
cld
jae
sbb
add
popa
lea
push
mov
nop
leave
nop
jmp
test
add
arpl
clc
repnz
nop
cld
jae
add
push
mov
xchg
ret
fisttpll
je
mov
mov
push
push
mov
xchg
ret
faddl
add
pop
addb
call
nop
nop
cld
jae
cwtl
xor
add
lea
andb
clc
repnz
nop
cld
jae
sub
sub
add
leave
add
clc
repnz
nop
cld
jae
fstps
add
push
test
push
mov
nop
leave
nop
jmp
jno
inc
ss
pop
xlat
imul
nop
nop
cld
jae
roll
add
add
dec
out
test
or
add
repnz
nop
cld
jae
out
jno
adc
in
nop
leave
nop
jmp
pop
jle
add
out
add
fstpl
mov
xchg
ret
mov
test
adc
nop
cld
jae
push
add
into
sub
jo
push
mov
nop
leave
nop
jmp
ljmp
mov
clc
repnz
nop
cld
jae
aad
sar
add
ljmp
repnz
nop
cld
jae
mov
add
push
out
clc
repnz
nop
cld
jae
andb
and
subl
clc
repnz
nop
cld
jae
add
xor
add
call
in
nop
leave
nop
jmp
push
xor
add
mov
clc
repnz
nop
cld
jae
ja
push
repnz
add
and
call
push
mov
nop
leave
nop
jmp
test
ss
cld
in
add
push
mov
nop
leave
nop
jmp
sbbb
add
push
push
mov
xchg
ret
xor
add
into
lret
jle
fdiv
dec
clc
repnz
nop
cld
jae
pop
add
add
add
add
jne
push
mov
nop
leave
nop
jmp
add
mov
xor
clc
repnz
nop
cld
jae
repnz
push
cwtl
cwtl
ret
les
mov
xchg
ret
jle
lds
test
popa
push
mov
xchg
ret
lret
add
jb
fistpl
clc
repnz
nop
cld
jae
fadds
add
pop
pop
lods
pop
push
mov
xchg
ret
add
je
mov
push
push
mov
nop
leave
nop
jmp
push
add
pop
lea
add
mov
push
mov
xchg
ret
enter
xor
nop
nop
cld
jae
push
add
lds
sub
xor
pop
pop
push
mov
xchg
ret
add
add
add
sbb
mull
repnz
nop
cld
jae
add
xlat
filds
nop
nop
cld
jae
mov
fnstcw
add
adcb
clc
repnz
nop
cld
jae
fadds
add
add
pusha
shlb
pop
push
mov
xchg
ret
add
add
lea
add
mov
add
clc
repnz
nop
cld
jae
enter
pop
clc
repnz
nop
cld
jae
fdivrs
popa
add
std
add
and
mov
clc
repnz
nop
cld
jae
add
add
add
repz
repnz
nop
cld
jae
add
add
test
pusha
repz
push
mov
xchg
ret
add
ljmp
div
push
mov
nop
leave
nop
jmp
ror
pop
add
fpatan
pop
push
mov
xchg
ret
add
add
xor
faddl
lds
and
add
clc
repnz
nop
cld
jae
test
push
clc
repnz
nop
cld
jae
add
shlb
add
popa
push
mov
nop
leave
nop
jmp
ja
cwtl
test
add
repnz
add
push
mov
xchg
ret
add
ss
add
push
mov
xchg
ret
lcall
mov
cmp
clc
repnz
nop
cld
jae
add
add
add
pop
cld
push
mov
xchg
ret
movsl
popa
test
add
mov
rcrb
repnz
nop
cld
jae
add
ljmp
popl
clc
repnz
nop
cld
jae
movsl
mov
mov
repnz
nop
cld
jae
test
lds
jne
clc
repnz
nop
cld
jae
movsl
add
cmp
repnz
nop
cld
jae
fdivrl
enter
add
jmp
je
add
add
add
leave
add
jno
stos
inc
inc
cmp
nop
nop
cld
jae
out
ja
add
xor
mov
sub
nop
mov
and
pop
shlb
add
add
clc
repnz
nop
cld
jae
pop
repnz
add
xor
repz
clc
repnz
nop
cld
jae
add
add
add
add
jmp
nop
cld
jae
add
add
into
jno
jmp
add
incl
push
mov
nop
leave
nop
jmp
sub
fnstenv
and
mov
repnz
nop
cld
jae
add
add
add
or
nop
nop
cld
jae
add
lret
je
pushl
push
mov
xchg
ret
add
mov
imul
je
add
add
add
or
nop
leave
nop
jmp
mov
lods
and
imul
nop
leave
nop
jmp
add
lcall
xchg
inc
add
test
pop
lds
pusha
add
push
mov
nop
leave
nop
jmp
add
add
je
push
mov
nop
leave
nop
jmp
xor
fsubrs
add
pop
clc
repnz
nop
cld
jae
add
popa
ret
add
mov
mov
rorb
cmp
add
test
add
add
add
test
repnz
nop
cld
jae
sub
add
repnz
nop
cld
jae
add
faddl
add
push
fistpl
clc
repnz
nop
cld
jae
add
rolb
xor
add
clc
repnz
nop
cld
jae
xor
add
shll
cld
jae
add
add
inc
xchg
add
clc
repnz
nop
cld
jae
add
ret
je
into
dec
in
mov
clc
repnz
nop
cld
jae
popa
out
add
add
push
pusha
add
push
mov
xchg
ret
ss
push
add
jp
fcmove
xor
inc
addb
leave
nop
jmp
add
test
add
addl
nop
cld
jae
in
repnz
add
add
push
clc
repnz
nop
cld
jae
mov
mov
and
clc
repnz
nop
cld
jae
cwtl
popa
xor
sbb
in
add
xchg
sbb
add
fildl
faddl
add
bound
pop
push
mov
xchg
ret
sarl
add
add
outsl
call
clc
repnz
nop
cld
jae
add
ss
test
rcrb
fcompl
and
ljmp
daa
add
clc
repnz
nop
cld
jae
xlat
out
ret
cmpb
repnz
nop
cld
jae
inc
pop
addb
sbb
repnz
cmc
add
clc
repnz
nop
cld
jae
rcr
movl
jmp
add
add
fsubr
rorb
lret
push
mov
xchg
ret
popa
add
cwtl
in
movsl
add
clc
repnz
nop
cld
jae
add
add
mov
push
mov
xchg
ret
add
je
enter
add
clc
repnz
nop
cld
jae
xor
add
add
nop
cld
jae
add
add
test
mov
nop
nop
cld
jae
test
aad
add
leave
add
add
clc
repnz
nop
cld
jae
add
add
pop
jno
sti
pop
push
mov
nop
leave
nop
jmp
add
add
add
xchg
add
mov
clc
repnz
nop
cld
jae
jle
je
popa
flds
cmpl
mov
nop
leave
nop
jmp
cwtl
add
sub
in
nop
leave
nop
jmp
add
add
mov
push
mov
xchg
ret
test
out
add
mov
xchg
ret
add
rolb
mov
clc
repnz
nop
cld
jae
test
movsl
push
add
add
jb
setnp
repnz
nop
cld
jae
into
popa
add
xor
sbb
inc
rorb
in
nop
leave
nop
jmp
out
pop
fdivl
lea
push
add
push
mov
nop
leave
nop
jmp
mov
fisttpll
mov
in
outsl
adc
pop
jmp
popa
int3
pop
mov
sbb
shrl
push
mov
xchg
ret
fucomp
test
xor
mov
cmp
mov
xchg
ret
add
add
mov
push
push
mov
xchg
ret
into
add
repnz
out
ljmp
imul
clc
repnz
nop
cld
jae
popa
add
loopne
int
rclb
in
nop
leave
nop
jmp
pop
add
add
add
push
push
clc
repnz
nop
cld
jae
ljmp
aad
push
clc
repnz
nop
cld
jae
repnz
lea
xor
push
mov
nop
leave
nop
jmp
roll
jge
push
mov
nop
leave
nop
jmp
ret
add
pop
add
sbb
pop
clc
repnz
nop
cld
jae
add
add
popa
xor
lea
nop
cld
jae
dec
add
adc
mov
nop
leave
nop
jmp
xor
jle
add
add
shr
push
mov
nop
leave
nop
jmp
aad
add
lcall
clc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
add
add
add
int3
inc
add
push
mov
nop
leave
nop
jmp
add
add
repnz
nop
cld
jae
test
add
add
sub
lods
push
mov
push
lea
add
add
xlat
js
out
jp
add
sub
push
mov
xchg
ret
fldcw
add
roll
xchg
lea
push
mov
xchg
ret
mov
test
xchg
popa
clc
repnz
nop
cld
jae
jno
lcall
imul
fs
mov
push
mov
nop
leave
nop
jmp
ret
add
orl
inc
add
add
popa
dec
sbb
add
add
repnz
nop
cld
jae
pop
xor
adc
mov
clc
repnz
nop
cld
jae
out
ljmp
pusha
xchg
fld1
clc
repnz
nop
cld
jae
ljmp
cli
mov
nop
leave
nop
jmp
aad
popa
add
add
xchg
add
push
mov
nop
leave
nop
jmp
inc
fldl
xor
add
data16
or
mov
xchg
ret
pop
std
mov
pop
add
add
int
aas
adc
in
nop
leave
nop
jmp
mov
in
mov
clc
repnz
nop
cld
jae
add
loopne
pop
pop
call
clc
repnz
nop
cld
jae
add
pop
lret
push
mov
xchg
ret
out
jno
add
add
add
enter
nop
nop
cld
jae
out
add
add
fistpl
push
mov
xchg
ret
add
je
pop
add
push
dec
sti
call
push
mov
nop
leave
nop
jmp
test
add
xor
push
push
mov
xchg
ret
roll
je
add
xlat
add
sahf
inc
add
aad
aad
add
arpl
add
repnz
nop
cld
jae
repnz
ss
dec
add
push
mov
nop
leave
nop
jmp
add
lea
repnz
push
push
mov
nop
leave
nop
jmp
lds
add
add
mov
clc
repnz
nop
cld
jae
push
add
pop
test
add
repnz
nop
cld
jae
ss
push
mov
cmp
jle
mov
shlb
ret
add
xor
int
push
mov
nop
leave
nop
jmp
pop
add
pop
xor
add
dec
push
push
mov
xchg
ret
add
add
leave
movsl
shrb
jne
push
mov
xchg
ret
add
test
add
sarb
add
jp
and
lahf
mov
clc
repnz
nop
cld
jae
test
test
ret
clc
repnz
nop
cld
jae
jno
add
dec
pop
jno
cli
xchg
jl
mov
clc
repnz
nop
cld
jae
add
popa
push
repz
mov
nop
leave
nop
jmp
add
pop
add
andb
pusha
subb
inc
adc
mov
xchg
ret
pop
mov
add
and
cmp
out
clc
repnz
nop
cld
jae
into
add
lret
xchg
mov
push
mov
nop
leave
nop
jmp
fldl
jle
add
popa
and
shrb
call
cld
jae
add
lock
push
pusha
pusha
xchg
mov
clc
repnz
nop
cld
jae
addb
lret
add
jo
ror
clc
repnz
nop
cld
jae
add
add
test
inc
adc
insb
out
lea
push
mov
xchg
ret
add
add
mov
xor
push
mov
xchg
ret
jno
leave
add
add
aad
icebp
fdivrp
clc
repnz
nop
cld
jae
test
add
adc
mov
add
pop
add
mov
add
popl
xchg
ret
add
add
out
test
repnz
loop
shr
adc
mov
clc
repnz
nop
cld
jae
movl
or
adcb
fwait
push
mov
xchg
ret
lcall
mov
clc
repnz
nop
cld
jae
push
jle
rcll
lcall
clc
repnz
nop
cld
jae
je
add
mov
add
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
add
shll
add
push
clc
repnz
nop
cld
jae
push
ss
je
clc
repnz
nop
cld
jae
pop
pop
dec
and
into
dec
dec
clc
repnz
nop
cld
jae
pop
lret
add
rcr
ret
clc
repnz
nop
cld
jae
inc
add
add
jle
add
push
push
mov
xchg
ret
add
fadds
mov
mov
push
mov
xchg
ret
add
popa
test
xor
mov
add
arpl
test
add
dec
adc
sub
ds
movsb
and
imul
inc
loopne
dec
lea
add
jmp
andb
push
mov
push
sub
mov
fwait
jbe
and
cmpsl
sbb
loope
out
pop
jb
xchg
aas
pop
adc
dec
cmp
dec
out
mov
pushf
cmp
mov
mov
shrb
push
ljmp
in
mov
push
add
sbb
fxch
scas
pusha
add
addb
movsb
add
fwait
xchg
mov
shlb
adc
rolb
jns
lea
push
mov
mov
xor
and
addr16
and
rolb
cmp
mov
lea
inc
dec
push
sub
xor
cmp
lods
cmp
out
push
loopne,pn
out
lea
rclb
out
inc
dec
push
adc
test
test
sub
xlat
data16
aaa
test
stc
lcall
adc
stos
loopne
roll
xchg
add
sbb
sbb
or
fwait
cmc
pop
les
add
sbb
or
popf
je
dec
mov
mov
sahf
mov
int3
in
adc
jmp
repz
addr16
mov
pop
sub
sub
sarl
andb
inc
jbe
push
fabs
pop
pop
add
clc
imul
out
rol
cmp
iret
roll
ss
pop
lock
in
pop
adc
mov
inc
mov
in
push
rcrb
in
test
out
pop
scas
incl
and
and
gs
lods
adc
mov
lret
inc
dec
lds
and
sub
inc
and
push
decl
and
mov
sub
sarb
ljmp
jae
movsb
mov
mov
in
loope
xchg
hlt
shl
pop
adc
sub
add
outsb
dec
xchg
aas
cmpsl
xlat
rorb
lcall
in
fisttpll
addb
add
and
add
add
inc
shlb
xchg
adc
andb
int
mov
outsb
jnp
fisubrs
int3
mov
mov
pusha
add
scas
aam
and
shlb
push
loopne
push
pop
dec
or
loopne
mov
aad
out
lahf
pop
pop
fsub
xor
jne
mov
dec
aaa
sahf
fs
movsb
loopne
inc
mov
and
sahf
sub
in
and
sbb
cmp
xor
jae
push
test
pusha
xor
cmp
aaa
add
test
bound
mov
add
fiaddl
pusha
popa
lods
dec
pop
push
jne
andb
incl
adc
inc
adc
aad
andb
cmp
push
mov
mov
pusha
mov
xchg
lods
jne
andb
imul
xor
push
inc
mov
jb
xchg
aaa
lds
test
mov
jae
out
andl
xchg
shl
and
push
aam
jbe
cmpsb
rol
std
popa
pop
and
add
and
jae
sbb
and
pop
aad
imul
jne
sub
cmpsl
fst
out
inc
mov
add
loopne
imul
cltd
sub
lcall
cli
xor
andb
mov
andb
ret
mov
adc
ljmp
pusha
add
lds
fisttps
push
loop
int
shrl
mov
orb
imul
pusha
sbbb
mov
andb
ja
fistpl
mov
aas
in
jb
sbb
sti
in
mov
addr16
adc
cmovae
mov
loopne
jge
test
ret
cmp
push
mov
xlat
insl
sbbl
loopne
jge
push
and
mov
mov
and
xlat
xor
add
add
aam
andb
add
cmc
sbb
add
fiaddl
fldl
add
sbb
xchg
push
sbb
add
lods
leave
outsl
pop
push
pushf
adc
ret
fwait
popf
pop
mov
jmp
cmp
push
loop
pop
xchg
mov
sbbb
inc
inc
add
sub
and
aam
rolb
loopne
dec
fbld
inc
mov
rcrb
add
popf
ss
adc
jo
int
imul
cmp
lock
mov
xor
pop
cmpsl
push
test
rorb
sub
imul
dec
imul
xchg
fsubs
inc
inc
out
dec
or
shlb
mov
mov
inc
dec
rolb
mov
push
adc
hlt
or
clc
jecxz
add
add
mov
ror
mov
add
mov
mov
add
lcall
add
or
cwtl
pmaxub
imul
aad
xor
sti
and
loopne
movsl
in
mov
or
in
push
addb
cmp
shl
repnz
cmp
push
push
mov
mov
or
inc
sub
pop
jg
add
or
pusha
inc
cmp
mov
sub
inc
fdivrs
push
xchg
and
jp
scas
and
jge
sti
popf
movsl
bnd
push
mov
rolb
shll
daa
imul
imul
dec
ffreep
mov
mov
add
mov
mov
add
cld
mov
inc
ljmp
and
lahf
adc
fcmovu
xor
mov
and
loopne
sbb
push
pusha
and
lret
lret
push
iret
jo
shlb
xor
ds
pop
pushf
movsl
jnp
out
xchg
cmp
andb
shrb
xchg
pop
call
divb
out
pusha
loopne
pusha
loopne
xchg
push
in
cmp
and
lods
addb
push
pusha
pushw
les
mov
add
sub
jnp
popa
inc
cs
mov
stos
rolb
pop
mov
push
out
stc
push
addb
pop
mov
mov
mov
mov
add
xchg
dec
divb
rol
in
test
sbbl
clc
sbb
add
icebp
sub
mov
mov
pusha
and
and
data16
insl
mov
popa
xchg
mov
and
lahf
popf
scas
mov
jno
add
push
jmp
dec
ret
jg
loopne
aaa
mov
inc
mov
leave
cltd
push
dec
lret
cltd
stos
pusha
mov
or
add
pop
movb
divb
mov
dec
push
and
test
cs
loop
inc
push
jae
loope
cmp
sbb
ds
sbb
or
add
fbstp
call
adc
loopne
pusha
andb
shlb
test
xchg
jbe
pop
es
lret
lcall
sti
xchg
stos
and
mov
mov
aam
je
adc
and
lods
add
mov
inc
mov
jno
out
stos
jg
daa
mov
loop
leave
mov
mov
mov
iret
jae
es
inc
sbb
xor
mov
push
packssdw
lret
out
addb
jnp
scas
shlb
push
add
imul
aam
dec
push
add
pusha
mov
adc
cwtl
leave
push
iret
sbb
add
adc
ret
cmp
imul
dec
xor
popw
adc
nop
inc
cmp
addb
mov
sub
mov
jne
pop
jnp
loopne
and
sarb
push
dec
xchg
inc
imul
cltd
js
adc
inc
inc
jno
inc
mov
data16
popf
and
inc
add
std
iret
lret
aaa
fldcw
cmp
jnp
popa
lret
aas
xor
cmp
pushf
add
mov
xchg
movlps
push
push
nop
sub
loop
movb
test
add
jmp
cld
inc
test
xorb
jo
pushf
mov
add
cmp
aad
movsl
fldt
inc
pusha
push
dec
leave
incl
in
sub
pusha
push
xchg
add
and
mov
pop
imul
out
hlt
xor
mov
mov
arpl
loop
test
mov
incl
pusha
pusha
outsb
imul
orl
popf
imull
dec
hlt
mov
add
add
pop
xor
add
inc
xchg
push
inc
and
call
inc
push
ficoml
in
xchg
invd
addb
sub
sub
test
add
cltd
fidivrl
jae
jbe
les
push
loopne
in
leave
cmp
imul
sar
add
fbstp
mov
mov
sbb
imul
and
lods
mov
fldl
testb
icebp
dec
in
pusha
aaa
xchg
xor
mov
and
fnsave
or
hlt
mov
mov
jp
mov
mov
mov
pop
xor
mov
mov
mov
adc
lds
dec
into
loopne
loopne
xchg
loopne
scas
sub
add
shlb
sbbl
mov
enter
hlt
out
iret
data16
cltd
inc
notl
mov
sbb
jg
bound
mov
sbb
sbb
mov
push
repnz
cwtl
mov
fildll
insl
aas
mov
loope
repnz
add
cmpsl
sub
pusha
inc
pause
and
rolb
inc
fidivrs
fstp
push
into
popa
adc
adc
mov
mov
loopne
push
sahf
add
and
icebp
xor
stos
fidivrl
inc
mov
neg
jae
sarl
push
pusha
and
pop
iret
push
add
mov
in
push
cmpsl
sbb
inc
mov
cld
sbb
ja
and
or
pop
ljmp
rcrb
aaa
sbb
dec
je
movsl
rcr
mov
lcall
fnstsw
enter
inc
sarb
jb
loopne
jmp
mov
inc
pusha
lret
mov
pusha
add
cwtl
cmp
inc
xor
cmpsl
or
add
push
repnz
push
test
add
loope
and
adcb
sahf
push
add
or
jae
xchg
push
xor
das
mov
and
es
sbb
cmp
inc
mov
pop
aaa
ror
xor
push
lods
scas
divb
jle
shl
lock
scas
pop
fistpll
cmp
sbb
push
xor
or
sbb
add
andb
aad
or
xor
jp
popl
lods
iret
addl
pop
jge
int3
adc
scas
pop
and
jl
daa
pop
test
mov
mov
daa
shr
ds
push
xor
aam
stc
xchg
aam
mov
out
mov
mov
shlb
aaa
add
xchg
xchg
imul
mov
inc
gs
addb
mov
jg
cmp
push
addb
inc
add
loopne
cwtl
in
xor
cli
pushf
iret
xchg
int3
push
cmp
inc
and
std
in
adc
push
jmp
andl
idiv
inc
aad
addb
shlb
ss
rclb
bound
pusha
and
mov
rcrb
orb
xchg
push
fs
mov
add
add
cmc
lds
pop
test
mov
leave
push
lods
add
inc
rcl
pop
inc
xchg
pop
and
fsubrl
and
and
sbb
add
cmp
add
xor
add
stc
mov
and
sub
loopne
inc
movq
and
jne
mov
dec
ljmp
test
shl
mov
rorb
cli
push
mov
push
sbb
cmp
icebp
fcomip
shrl
shll
in
and
inc
movl
pusha
and
pusha
lods
out
push
push
jne
sahf
je
add
adc
mov
xchg
mov
into
repz
push
sbb
mov
inc
mov
pop
cmp
mov
fisttpll
add
and
divl
iret
jno
push
inc
andb
cwtl
popa
sbb
ja
ds
mov
and
rcrl
lcall
shlb
cmpsl
testl
xor
lods
rolb
in
inc
fsubrs
scas
aas
ja
dec
dec
gs
movsb
rolb
addb
pusha
addb
cmpsb
add
mov
pusha
add
loopne
inc
int3
push
pop
call
or
das
xchg
aad
add
or
sbbb
or
and
loop
js
jae
addb
popf
mov
sbb
shll
mov
add
inc
mov
xor
add
mov
rcr
das
loope
subl
clc
gs
add
andl
les
loopne
mov
outsl
mov
pop
cmpsl
mov
and
xchg
push
mov
xor
das
mov
aad
into
sbb
xchg
xchg
cmp
shll
xor
xchg
pop
sbb
inc
sub
ja
dec
fcomps
lock
lret
adc
mov
leave
jge
test
lret
adc
pusha
and
add
mov
xchg
out
sbb
pop
xor
add
in
fcmovnbe
repz
pusha
add
adc
pusha
and
cld
bound
inc
add
dec
inc
mov
add
inc
loopne
and
les
pusha
mov
pop
in
rolb
push
add
fcmovne
mulps
pop
push
adc
imul
out
mov
and
jp
loopne
dec
lret
pushf
xchg
adc
mov
loopne
sub
clc
xor
leave
cmpsl
hlt
je
loopne
daa
cmp
xlat
jne
inc
cs
dec
repnz
cwtl
into
fisubs
ljmp
mov
andb
inc
fwait
sbb
loope
sbb
xchg
sub
pusha
mov
and
jge
loop
mov
push
arpl
and
pusha
xor
loop
add
loopne
add
inc
loopne
jmp
dec
xorl
loop
mov
cmpsl
or
sub
loopne
pop
outsb
nop
push
test
loopne
push
cmpsb
andb
xchg
pop
inc
stc
or
mov
add
and
add
iret
repnz
push
and
mov
ss
xor
add
loopne
sarb
xor
pop
cwtl
aaa
rcrb
jo
push
xor
mulb
push
or
loopne
sbb
cmpsl
pop
shll
and
addb
in
sub
pusha
fbstp
mov
shll
filds
test
popa
sub
add
push
loopne
or
loopne
mov
arpl
imul
dec
sbb
mov
hlt
push
mov
jo
inc
push
and
stos
addb
add
int3
ret
and
cmp
jmp
pusha
or
and
pusha
sahf
aad
add
lock
inc
pusha
into
addr16
xchg
out
ret
pop
xchg
fcomps
ret
fnstenv
les
ljmp
addb
sbb
add
mov
inc
leave
mov
xchg
jp
les
pusha
push
pusha
cmp
and
mov
xorl
and
add
adc
mov
add
addb
add
pusha
les
out
inc
inc
notl
arpl
add
test
inc
shlb
fisubrl
fcmovb
jb
daa
orl
icebp
ja
mov
and
loope
jb
jmp
dec
fisttpl
loopne
js
mov
and
andb
adcl
push
ret
lds
pop
mov
fdiv
xor
add
test
adc
jle
push
cmp
add
sbb
shlb
push
cmp
loopne
sarb
add
inc
and
mov
out
add
adc
scas
andb
adc
in
fdivr
push
andb
pusha
pushf
outsl
pushf
andb
cvtps2pi
dec
or
mov
dec
inc
daa
mov
clc
add
andb
xor
andb
loop
xlat
adc
lcall
dec
add
pusha
fidivrl
imul
inc
xchg
hlt
sarb
mov
lea
xorb
pop
in
gs
and
lahf
dec
leave
jns
sub
loopne
repnz
pusha
sub
xchg
ja
or
mov
inc
orb
and
aad
inc
push
hlt
adc
xor
je
scas
rolb
pop
inc
out
dec
out
sahf
repz
mov
mov
addl
xlat
xchg
pop
adc
enter
pop
lds
cmp
sar
lock
shlb
sub
add
push
pushf
cmp
jb
pushf
xchg
mov
jg
inc
mov
orb
mov
xchg
arpl
push
lahf
test
dec
inc
insl
mov
add
aas
mov
xorb
clc
cmp
imul
inc
and
xlat
fisubrs
rol
jnp
mov
fisttps
add
adc
orb
inc
mov
cmc
ss
and
stos
inc
inc
in
loopne
dec
mov
add
pusha
adc
unpckhps
test
cmpb
test
cmpsl
and
rclb
mov
out
push
cmp
xchg
pop
sbb
adc
lcall
pushf
test
sar
add
into
add
pop
into
cmp
imul
xor
out
and
int
mov
inc
loop
andb
push
cmp
adc
or
shll
adc
push
xchg
mov
out
mov
inc
test
fincstp
mov
mov
inc
xchg
mov
cmp
inc
push
outsl
cmp
push
aaa
lds
hlt
jg
mov
sti
push
imul
mov
xor
push
and
loopne
lret
mov
stc
pop
scas
inc
pusha
sbb
mov
call
and
data16
mov
addb
cmc
xchg
jb
xor
inc
and
rol
and
add
xor
out
loope
jnp
shl
xchg
mov
add
add
mov
ja
mov
scas
rolb
dec
and
addb
call
inc
inc
test
add
popl
loopne
test
pusha
je
lods
daa
add
pusha
sti
outsb
add
inc
mov
pop
inc
popf
sub
mov
sahf
xor
andb
rcrb
insl
lret
or
cmpsb
rolb
push
xchg
xchg
and
sti
pop
and
cmc
mov
leave
dec
inc
sub
cmp
ret
lock
stc
bnd
xchg
and
test
fwait
mov
inc
pusha
loopne
jp
aam
pushf
cmp
push
jmp
loope
out
mull
inc
inc
sti
xchg
xchg
sti
lds
fmul
sbb
cli
or
inc
daa
mov
inc
mov
out
fs
rorb
mov
rorb
sbb
sbb
outsl
mov
rcl
mov
iret
jnp
repz
fnsave
mov
add
roll
icebp
nop
int3
inc
mov
inc
inc
lods
shl
movsb
add
sarb
adc
push
jae
and
loopne
sub
and
shlb
add
mov
fisttpll
inc
and
adcl
dec
mov
mov
pop
lahf
jns
pushl
xchg
jmp
stos
rol
cltd
or
sub
inc
repz
shrb
add
pusha
xor
fldenvs
scas
add
pop
push
fisubrl
jg
pop
test
dec
or
and
js
jbe
push
ss
mov
loopne
sti
inc
daa
adc
push
pop
sbb
in
mov
add
lcall
es
sbb
nop
ja
xor
rcl
jmp
popa
lods
push
andb
add
mov
adc
mov
andb
push
loopne
jns
pop
mov
icebp
dec
pop
jbe
adc
outsl
ret
add
add
hlt
iret
popf
ficoms
lret
lahf
repnz
rol
lea
jb
pop
ds
in
pusha
rcrb
lods
rol
or
loopne
js
sbb
adc
cmp
or
push
xor
add
imul
mov
cs
loopne
lcall
insl
mov
idivl
or
movsl
bound
xchg
aaa
and
pusha
push
imul
sbb
mov
xchg
pop
pop
fidivl
or
pop
xor
jge
push
or
xchg
sahf
pop
jae
cmpsb
mov
jl
dec
ret
add
add
jo
test
dec
andl
add
inc
inc
xor
mov
loopne
and
push
sbb
pop
mov
and
inc
mov
mov
mov
gs
scas
loopne
pop
scas
add
or
pusha
add
mov
fisubl
and
mov
out
sbb
mov
fs
loope
inc
pusha
mov
orb
sbb
ret
mov
mov
repz
add
enter
mov
xchg
out
cmp
arpl
scas
andb
add
pusha
sar
and
loope
adc
jg
pusha
shlb
in
sar
popa
inc
insb
sub
and
ljmp
adc
jge
adc
pusha
inc
mov
movsl
arpl
jmp
inc
sar
sbbl
addr16
inc
pusha
cmp
inc
cwtl
dec
jmp
loope
push
call
and
loopne
mov
je
add
push
imul
ds
xchg
jae
adc
dec
mov
pusha
inc
jl
pslld
mov
jg
push
xchg
out
popf
mov
insl
icebp
jp
dec
pop
add
in
fiaddl
dec
aad
mov
inc
add
insb
sti
pop
movl
lods
pop
dec
push
fsin
pop
inc
inc
out
fwait
jb
mov
lods
mov
mov
fisttpll
fidivrs
adc
divl
xchg
ja
mov
out
leave
push
daa
pop
adc
int3
xor
test
pusha
xor
das
sbb
and
jecxz
loopne
es
push
sub
orb
push
bound
push
inc
lcall
jecxz
scas
mov
shll
lahf
loop
out
and
and
rclb
and
mov
push
adc
loopne
jmp
pop
dec
jno
std
out
xchg
lods
fists
jne
out
test
mov
mov
and
xorb
inc
stc
push
andb
inc
mov
std
mov
mov
pusha
ds
xchg
les
and
in
ds
add
pop
stos
mov
aas
aam
jns
scas
and
xchg
pop
or
loopne
mov
mov
scas
adc
arpl
adc
loop
movsb
and
leave
and
loopne
jo
pushf
sub
scas
fbstp
add
insl
fadds
mov
pop
aam
and
mov
repnz
pop
clc
addr16
jnp
and
dec
es
loopne
mov
xor
add
cmp
outsb
leave
jecxz
addr16
andb
add
dec
jg
icebp
idivl
jp
sarl
and
xor
pop
jg
stc
test
add
andl
sbb
rcll
sarb
frstor
inc
cmpsb
mov
jle
cltd
imul
imulb
aas
mov
in
pusha
pusha
mov
dec
mov
aam
and
or
inc
out
movhps
ljmp
mov
rorb
movsl
mov
loopne
in
pop
sbb
mov
and
scas
cmp
or
lods
pushf
sbb
mov
fcomps
enter
mov
pusha
adc
repnz
lock
and
xchg
incl
andb
jmp
xchg
push
mov
push
test
cmp
jl
xor
xchg
stc
lock
aas
xchg
cmp
jns
pusha
pop
push
imul
push
stos
add
add
je
neg
adc
dec
int3
sbb
loopne
and
add
test
xchg
jbe
repnz
cmc
aas
jns
inc
loopne
cltd
jmp
pusha
pop
cmpsb
mov
dec
cmp
out
push
push
arpl
and
mov
push
clc
sbb
inc
out
mov
or
rclb
cmpsl
aas
pop
pop
mov
inc
mov
mov
cmp
xor
std
movsl
and
cli
and
lods
and
inc
into
outsb
mov
mov
or
loopne
and
push
scas
test
add
add
xchg
inc
nop
push
xchg
cmp
es
inc
movb
pop
insl
fidivrl
fisttps
add
loopne
inc
sahf
popf
pop
mov
cmpl
rclb
inc
ret
lret
adc
and
dec
fisubs
addl
stos
push
cmpsb
add
in
pusha
mov
push
adc
and
xorb
inc
and
mov
mov
loopne
and
in
mov
addb
shlb
or
dec
in
addb
pushf
addb
mov
pusha
rcrl
pop
mov
sub
sub
and
jp
xor
mov
inc
daa
stos
and
addb
and
mov
push
std
push
add
loopne
in
pop
insl
push
mov
loop
subl
pusha
cmc
test
loopne
sbb
lds
ss
mov
lods
add
out
add
aas
fildll
aam
loop
pop
gs
movsl
fdivrs
inc
stos
add
push
inc
movsb
shlb
pop
shlb
mov
lds
and
mov
mov
pusha
add
ret
dec
and
outsl
scas
and
inc
shr
repnz
and
mov
push
mov
add
pusha
sbbb
push
pushf
sbb
test
and
aad
cmpsb
inc
add
pusha
mov
jmp
xor
adc
adcb
cmp
pop
rolb
add
mov
loopne
and
add
or
pusha
mov
mov
rcrb
andb
lods
inc
or
mov
andb
xor
popf
gs
jnp
pop
mov
fst
adc
jne
fucomip
mov
shlb
loopne
loopne
push
mov
adc
sub
mov
test
ljmp
pop
sbb
add
push
pop
mov
rclb
je
rcll
rcll
mov
cmp
add
mov
cwtl
aas
sub
std
imul
daa
stos
loopne
jb
aam
pushf
cmp
xor
pop
add
mov
insb
mov
push
ljmp
jmp
fcmove
xor
pushf
and
dec
scas
addb
in
xorl
aaa
xchg
lret
or
mov
xorb
sub
add
mov
pop
in
jae
pop
xor
aad
call
test
inc
inc
scas
inc
orb
lea
mov
xchg
dec
sub
lock
rolb
sub
loopne
and
loopne
and
lods
and
stos
pusha
and
mov
pop
and
sub
cmpsb
mov
ret
dec
jns
sub
mov
sbb
add
jo
push
bound
ficompl
jno
loopne
dec
les
loopne
dec
push
add
pop
roll
mov
pusha
icebp
pop
lea
sub
popa
scas
shl
outsl
andb
call
addr16
fnsave
lock
int
data16
jle
loopne
and
pusha
mov
or
sbb
push
dec
std
xorw
aad
dec
sub
dec
stos
lea
aad
mov
add
inc
cwtl
mov
enter
dec
push
add
shrb
adc
ljmp
xor
sub
lods
lock
push
adc
insl
lock
mov
jne
rolb
xlat
pop
mov
and
inc
and
mov
cltd
test
cmp
xchg
js
xchg
push
and
inc
inc
lods
inc
add
push
mov
add
mov
outsl
xlat
popf
cmovno
xchg
sti
outsb
rcrl
std
cltd
lds
leave
sub
push
dec
fisttps
inc
dec
mov
cwtl
inc
mov
cmp
cmp
xor
and
ficoml
js
cmp
mov
xor
sarb
cmp
loopne
add
loop
inc
jecxz
sbb
cwtl
mov
mov
inc
loopne
inc
mov
subb
mov
movb
pusha
pusha
mov
pop
fisttps
cmp
std
loop
pop
and
cmpl
fisttpll
pop
jno
insb
andb
or
and
inc
scas
inc
inc
add
sarb
pusha
pusha
mov
pop
xchg
test
sbb
push
jb
pop
mov
pop
fisubs
mov
fstpt
jp
rclb
add
pop
sbb
adc
and
andb
mov
imul
fstpt
and
pusha
and
loope
sub
and
sbb
sahf
loopne
sbb
pushf
mov
sbb
test
add
xchg
dec
sarl
dec
xchg
test
and
dec
in
aas
sub
jnp
test
jmp
addr16
bound
cmpsb
inc
mov
mov
popf
ficoml
pop
adc
sbb
insl
sahf
stos
inc
adc
shrb
inc
andb
ja
leave
jae
iret
push
or
shlb
rcr
ja
scas
hlt
inc
mov
mov
test
shlb
hlt
mov
or
add
jae
mov
enter
into
jno
jb
pop
repz
nop
or
rclb
ret
jo
or
loope
mov
sbb
sub
pop
inc
es
sbb
inc
mov
sbb
xchg
inc
sub
test
in
rolb
add
inc
pop
in
pop
inc
and
and
ja
inc
mov
lret
mov
inc
sbb
into
adc
daa
fcoml
addb
popa
jl
inc
loopne
pop
xor
lahf
fld
push
push
mov
mov
xor
jle
into
jp
push
mov
and
out
das
cmpsb
andb
or
mov
pop
mov
mov
jae
mov
les
jno
in
adc
daa
enter
push
mov
pusha
inc
mov
cmpb
loopne
jmp
test
shrl
inc
and
mov
and
sub
xchg
cmp
xor
sub
sub
pusha
pusha
call
jle
test
inc
fstps
dec
je
hlt
cwtl
js
lods
andb
loopne
inc
add
add
inc
inc
and
bound
aam
jmp
fimull
shl
add
loopne
aam
mov
mov
mov
sbb
mov
sub
call
add
and
xor
dec
sahf
rcl
out
mov
scas
fldenv
inc
pusha
inc
pop
mov
add
mov
inc
add
int
clc
roll
outsl
inc
lods
scas
add
jnp
xor
jg
test
mov
scas
loopne
dec
les
lret
and
pusha
and
sbb
scas
inc
inc
sti
xor
mov
xor
loopne
xor
xchg
pop
lahf
lcall
test
jmp
mov
xchg
stc
mov
cwtl
stc
outsl
repz
lahf
xor
adc
xchg
fdivr
in
stos
rolb
dec
and
ss
xchg
ret
push
loopne
fsubrs
ja
out
out
mov
iret
xor
mov
or
out
rclb
mov
mov
dec
cmp
push
cmpsb
mov
andb
or
ret
addb
dec
cwtl
xchg
out
dec
jnp
clc
popf
mov
mov
xchg
mov
popa
xchg
push
frstor
push
pop
fxch
loop
sbb
push
loopne,pn
sub
and
mov
pop
ds
imul
hlt
mov
addb
mov
fsubrs
dec
jmp
mov
fsubs
fwait
add
add
sub
and
fistpl
mov
xor
in
addb
inc
leave
xor
andb
jae
inc
jg
and
mov
iret
pop
ja
add
push
das
arpl
movsb
mov
jecxz
shlb
add
iret
loopne
popa
jp
idivb
and
push
xchg
loopne
lcall
scas
leave
mov
mov
xchg
xchg
mov
sbb
insl
mov
in
pop
xchg
adc
shlb
xchg
stos
mov
mov
push
xchg
outsl
sbbl
adc
ljmp
mov
fldenv
sbb
xor
jge
jne
rorb
ret
push
out
xchg
andb
std
mov
inc
xor
hlt
xlat
jne
loopne
repnz
fisubs
rolb
sbb
daa
cmp
inc
fidivrs
add
add
sub
or
aam
adc
fildll
loopne
sbb
pusha
loopne
dec
bound
rolb
insb
ss
fldt
lret
loopne
add
and
and
mov
or
push
mov
in
sub
cmpsl
inc
dec
pop
fimull
shl
mov
outsb
sub
add
cld
in
inc
data16
shl
cs
rol
and
test
mov
test
inc
push
pop
dec
inc
push
pop
mov
and
lahf
inc
pop
mov
nop
push
adc
inc
lret
dec
lret
dec
rcrb
test
inc
sahf
adc
roll
sbb
scas
inc
and
ljmp
loope
loope
loopne
ret
loopne
ljmp
add
ret
loopne
xor
call
xor
xchg
xchg
add
call
stc
push
push
sahf
mov
mov
inc
stos
xor
mov
sarb
and
inc
loopne
or
mov
or
sarb
fstl
inc
loopne
lods
jo
insl
in
iret
loop
lock
xor
mov
mov
jb
lret
xchg
mov
ret
imul
ss
jno
out
fstpt
sub
pusha
and
cli
cwtl
rol
repnz
aas
push
andb
lds
push
push
repz
mov
icebp
repz
repnz
aam
xor
cmp
movsb
and
int3
ret
inc
fsubrl
outsb
mov
sub
pop
lret
shrb
aad
cmp
pop
xchg
xor
test
inc
fcomi
mov
push
bound
jle
insb
dec
icebp
sbb
and
inc
xchg
add
mov
insb
mov
insb
in
inc
pop
mov
std
mov
push
cmp
cli
xchg
jbe
xchg
loopne
int
ret
mov
ret
mov
lret
xor
xchg
jnp
insl
fadds
in
xor
fisttps
and
pusha
rcrb
mov
jmp
test
inc
addl
dec
pop
cld
xchg
mov
mov
pop
pop
icebp
loopne
inc
pusha
xor
cmpsb
andb
mov
mov
pushf
test
in
scas
addb
and
aas
push
lds
add
mov
lods
lret
inc
dec
xchg
psubd
mov
inc
push
inc
adcb
insb
xchg
cmp
adc
pusha
jbe
sbb
loopne
out
mov
pushf
pop
push
das
lods
mov
xlat
lock
xchg
xchg
fidivs
push
andb
shll
aas
popl
pop
movsl
jmp
sub
lds
inc
lahf
fnstcw
jg
pop
dec
ljmp
nop
sbb
mov
mov
mov
pop
loope
xchg
frstor
push
cmc
addr16
lock
mov
adc
icebp
jle
rolb
xorb
out
inc
sbb
xchg
mov
mov
inc
xchg
mov
pusha
mov
inc
push
dec
jl
inc
test
push
and
jno
mov
andb
pusha
sarb
mov
inc
xchg
xchg
xor
add
int3
adc
and
shlb
out
cmp
fcmovnbe
int3
imul
jns
shlb
shlb
mov
add
iret
cmp
aam
cltd
insl
insl
mov
cmp
scas
mov
jae,pt
jmp
lahf
mov
insl
jmp
dec
bound
rcrb
pusha
rorb
cmpsl
dec
cmp
inc
lods
mov
pusha
mov
std
aam
in
jge
shlb
daa
lock
cmpsb
inc
add
dec
into
int
scas
js
add
inc
loopne
adc
push
push
ja
inc
inc
pop
sti
lret
add
cmp
push
fs
xor
cli
sub
loopne
adc
arpl
cmpsb
and
xchg
add
add
add
testb
int3
aad
ret
hlt
addb
xchg
and
inc
mov
pop
fsubrl
pop
push
jp
cmp
out
xchg
inc
imul
enter
loopne
sbb
adc
stos
out
inc
nop
pop
cwtl
xor
test
inc
inc
addb
repz
pop
cmc
cmpsl
ret
jp
and
pop
mov
add
shlb
jge
shlb
in
aas
mov
mov
or
sub
mov
icebp
cmc
lahf
mov
adc
aad
fsubs
stc
lds
lret
insl
inc
lea
scas
aas
jg
xchg
sbb
lods
inc
es
pusha
pop
cmp
mov
xchg
mov
sub
cwtl
push
pop
mov
sbb
push
insl
ds
jg
loopne
add
stos
imul
mov
add
lock
cmp
sbb
xor
lahf
arpl
gs
inc
jle
loopne
call
push
sahf
loope
out
fimull
movsb
shlb
sar
push
mov
movsb
and
pusha
mov
mov
rorb
loopne
sti
xorl
es
add
addb
xor
cwtl
inc
mov
mov
ds
into
in
or
ret
mov
fsubrl
add
mov
subb
and
stos
jl
andb
or
dec
inc
xor
mov
into
aas
mov
jp
inc
pusha
dec
jl
inc
repnz
push
icebp
and
rcr
mov
xchg
mov
or
xor
xchg
pop
pop
cmpsl
dec
in
xchg
push
pusha
loopne
pusha
push
outsl
sbb
popa
in
inc
rol
adcl
adc
shlb
outsb
fidivrl
sbb
sbb
pop
cmp
mov
pusha
inc
enter
subl
mov
dec
xor
add
inc
bound
rcrb
fdivp
cli
mov
dec
sub
pusha
mov
inc
loopne
ss
sub
fmull
outsb
jno
loopne
push
aas
mov
sub
pop
push
loopne
add
pop
xor
add
lods
enter
les
inc
rorb
mov
sti
aam
loopne
sbbl
pusha
xorb
lret
rcrl
jmp
cld
mov
sbb
and
lods
pusha
inc
xchg
jae
jmp
jecxz
mov
lods
gs
decb
repnz
bound
dec
pop
inc
std
sbb
lcall
stos
and
mov
xor
pop
sbb
mov
pop
pop
push
sahf
test
ja
inc
icebp
sub
ror
mov
mov
mov
add
andb
cli
loop
pop
aas
vunpcklps
pop
pop
addb
cltd
push
shl
jns
add
sub
imul
in
cmp
cmpsb
and
mov
aas
add
add
or
shr
in
sbb
rorb
mov
pop
ds
pop
cld
and
mov
gs
int
mov
add
pop
stos
pusha
cmp
pop
sub
repnz
sbb
fildl
dec
cmpsl
or
inc
sbb
mov
addb
lret
mov
shlb
out
dec
xlat
andb
mov
shlb
sub
add
add
insl
movl
mov
dec
xorl
cli
mov
shlb
inc
inc
insl
xor
movsb
pusha
shl
enter
loopne
gs
iret
aad
sti
and
loop
and
and
and
mov
push
inc
dec
sub
or
rolb
shlb
cli
out
dec
xor
pop
mov
push
in
jno
nop
filds
fld
lods
loopne
loop
jne
mov
mov
loopne
pop
mov
pusha
shrb
sbb
nop
fisttpl
imul
mov
adcb
mov
mov
popf
sub
orb
add
mov
loope
int
jo
test
scas
ja
xor
push
test
inc
or
stos
inc
inc
sbb
jl
mov
adc
aam
cmp
aaa
cmp
loopne
jno
cmpsl
xchg
pop
add
outsb
mov
cmpb
add
mov
push
mov
or
push
adc
clc
clc
stos
pusha
cmp
ljmp
cmp
sti
shl
leave
shll
andb
inc
mov
pop
mov
inc
addb
sbb
movsb
pusha
loopne
outsb
mov
sub
add
rcrl
pop
rcr
arpl
sahf
cli
inc
outsl
rcr
sti
pusha
xlat
pop
hlt
aam
mov
and
cmpsl
cld
dec
lods
jne
xchg
pusha
pusha
sbb
sub
pop
repnz
mov
add
loope
push
fidivs
stos
mov
stc
stos
and
mov
fsubrs
cltd
lcall
inc
shlb
rolb
add
bswap
clc
pop
cwtl
lea
mov
lahf
outsl
fimuls
out
cmc
xor
or
shl
xlat
sub
addb
mov
rolb
gs
daa
xchg
and
fcmovu
bnd
push
pusha
add
sbb
addb
or
xor
stc
inc
push
loope
daa
jge
xlat
cld
arpl
aas
lahf
mov
loope
arpl
inc
shlb
push
andb
and
sarb
add
add
repz
movsb
inc
inc
jge
daa
movsb
loopne
jg
push
push
jp
mov
jge
out
loopne
add
and
fnstenv
xor
stos
pop
gs
shl
or
add
add
adc
add
adc
mov
popf
sbb
mov
subb
js
lock
lret
push
out
jo
mov
ja
xor
mov
push
out
add
fidivrl
mov
rclb
adc
dec
sub
mov
adc
cld
insb
adc
xchg
inc
or
and
sahf
mov
ljmp
mov
cmc
lds
mov
sarb
out
xor
and
and
movsb
and
adc
dec
mov
jbe
xor
rolb
mov
mov
xor
or
mov
inc
std
jae
andb
cmc
jbe
scas
rol
iret
inc
xor
scas
jae
and
leave
or
addb
out
push
fistl
and
and
jbe
mov
cmp
int
cwtl
mov
cltd
push
insb
xor
inc
mov
and
shlb
add
adc
push
iret
mov
scas
mov
pop
pop
inc
push
out
or
mov
int3
add
pop
inc
jne
pop
inc
stos
push
mov
mov
xor
mov
mov
push
lock
pop
out
push
loopne
hlt
push
pusha
or
sbb
pusha
mov
xor
pusha
add
sub
imul
and
fsubs
and
ss
popa
lods
imulb
inc
xchg
dec
adc
faddp
int
popf
mov
ret
int3
cli
mov
outsl
inc
lret
add
in
jb
mov
push
js
pusha
loopne
jge
repnz
lods
xor
push
mov
inc
mov
rol
sarl
inc
je
sub
loopne
movsb
rol
icebp
jg
pop
pop
test
outsl
call
icebp
adc
out
shlb
jle
inc
in
pusha
cmpb
out
adc
adc
aas
pop
out
and
xchg
ljmp
lcall
iret
or
bound
rorl
and
ljmp
loop
imul
xchg
cmc
mov
xchg
pop
sub
push
xlat
aam
daa
ret
pusha
dec
jl
add
and
mov
or
sub
dec
ds
test
rolb
dec
jb
dec
mov
test
jmp
push
rolb
mov
mov
mov
shrb
inc
cli
mov
pusha
das
stos
in
sbb
adc
pop
cmp
andb
add
test
adc
xchg
ret
outsl
in
hlt
hlt
mov
shlb
into
jmp
movsl
out
add
mov
lods
or
iret
xor
adc
das
sub
inc
inc
or
loopne
scas
push
mov
int
insb
sub
mov
inc
adcb
jb
int3
rol
in
enter
pusha
adc
inc
inc
in
mov
ss
loope
ljmp
rolb
mov
or
loopne
lods
cmpsl
jecxz
adc
adc
mov
andb
xor
jle
lret
cltd
addr16
mov
push
mov
cld
fsts
push
pusha
sarb
andl
cmp
inc
fcmovnu
cmp
mov
subb
fsubr
lods
jp
mov
mov
jmp
mov
pop
shll
pusha
addb
roll
xor
xchg
ret
cld
cmc
out
out
cmp
dec
repnz
movsb
inc
adcb
rolb
pusha
sbb
add
lret
pop
cmp
ja
mov
pushf
ja
pop
mov
sahf
insl
pop
test
dec
clc
sbb
les
andb
dec
mov
pusha
loopne
shl
clc
int
imul
loopne
cmp
and
jmp
std
cs
add
mulb
call
push
movsl
dec
hlt
loope
xchg
cmp
inc
icebp
jl
push
adc
inc
loopne
mov
jmp
or
mov
pusha
cmp
out
test
shl
pusha
and
pusha
push
fdivl
mov
in
mov
mov
mov
mov
add
lods
jmp
xchg
add
ss
cmc
xor
sbb
xchg
push
xor
push
mov
cs
addb
sbbb
jae
pop
pushf
negl
imul
cmp
pushf
mov
and
and
test
rcll
inc
rcr
inc
and
push
and
rcrl
lds
add
push
add
pop
loope
jb
insb
fisttpll
mov
add
push
sbbl
mov
and
cmpb
lock
mov
pusha
imul
lcall
inc
xchg
xor
mov
test
mov
inc
sarb
and
shl
add
mov
mov
adcl
push
cmp
add
adc
outsl
aad
es
mov
cmp
or
inc
dec
fcompl
mov
xor
pop
mov
sbbb
and
rclb
dec
add
xchg
inc
pushf
test
mov
je
aaa
loopne
in
mov
bound
movsb
mov
pop
icebp
das
outsb
cmpsl
enter
ss
imul
faddl
stos
daa
pop
aam
hlt
aas
or
and
cmp
pop
pop
or
subl
loopne
mov
cld
jle
loopne,pn
pop
jg
clc
mov
fwait
jmp
mov
addb
int3
mov
inc
nop
loope
dec
rcll
inc
and
push
in
movsl
xchg
mov
inc
test
jns
or
ret
dec
mov
sbb
pusha
pusha
xchg
pop
pop
jne
push
mov
xchg
xor
jge
inc
mov
mov
movsl
jo
inc
pusha
inc
dec
mov
pop
sbb
or
arpl
push
jae
ficomps
ret
fwait
es
xorb
ljmp
mov
dec
lods
mov
cmpsl
adc
popa
jno
pop
andb
testb
push
int3
inc
fisubl
hlt
mov
push
adc
lret
mov
cli
xor
pop
pop
repz
andb
add
nop
lock
sub
pusha
stos
and
andl
shlb
cmpsl
fstpt
cld
stos
jmp
pusha
aad
dec
inc
sbb
inc
lret
and
js
jnp
sbb
dec
pop
out
jbe
inc
and
mov
inc
movsl
dec
xchg
dec
xor
cltd
popf
insb
and
loopne
addb
imul
sbb
pusha
inc
stos
andb
sub
sub
outsb
cmp
outsl
into
mov
pop
jbe
sbb
mov
xchg
push
xchg
jne
mov
xchg
sbb
js
jp
mov
adc
pop
div
mov
loope
pop
nop
insl
into
push
jl
loopne
scas
and
mov
sbb
adc
movl
pusha
mov
pusha
and
and
pusha
andb
dec
test
pusha
stc
shrl
xor
inc
std
lods
mov
aam
mov
mov
mov
jo
fcoms
lea
int3
inc
cmp
test
dec
or
mov
mull
add
mov
mov
in
xor
or
and
fdivl
inc
iret
pop
repnz
sbb
ja
cmpsb
loopne
add
and
mov
add
pusha
pop
jo
insl
pop
dec
xchg
xchg
inc
pusha
lods
stc
mov
loopne
add
inc
dec
aad
lcall
xchg
xchg
pop
cwtl
out
xchg
or
and
sub
and
and
mov
subl
mov
faddl
fucomi
mov
test
and
out
clc
pop
call
and
pushf
fadd
clc
sbb
bnd
or
stos
adc
andb
daa
sbb
mov
mov
mov
je
add
pusha
xor
inc
mov
lret
out
cwtl
push
addb
adc
es
sbb
or
into
jne
mov
pop
mov
pop
sub
inc
bound
andb
iret
clc
and
inc
add
add
xchg
sbb
loopne
and
mov
rolb
mov
pop
cmc
jb
ss
adc
loopne
mov
mov
aas
ja
lret
or
add
in
clc
jecxz
sub
push
xchg
ret
add
mov
popf
xchg
pop
andb
add
cwtl
pop
or
inc
loope
jmp
rol
daa
xchg
lds
mov
sbb
aam
jbe
add
enter
rcrb
bound
push
adc
jg
aad
ffree
or
shl
push
test
rcr
shlb
aad
inc
pusha
dec
popf
cmpsb
mov
inc
mov
mov
add
rclb
pop
jo
lret
sbb
jle
adc
cs
pusha
add
out
mov
mov
jo
mov
and
cmp
pop
std
push
out
sahf
pop
test
test
sar
xor
scas
pusha
shlb
setns
shlb
cwtl
les
addb
pop
push
inc
sub
lret
and
fs
out
aad
and
sub
mov
sub
mov
mov
nop
or
andb
inc
imul
outsb
lahf
pop
sbb
lock
inc
subb
loopne
add
or
lret
dec
jae
pop
nop
fists
cld
cld
push
pusha
inc
cltd
cmc
inc
and
inc
jne
popa
lret
inc
iret
sub
andb
enter
shlb
clc
or
pusha
add
rcrb
jb
inc
xorb
movsb
shlb
dec
dec
mov
pusha
rorb
and
mov
rorl
add
add
fisttpl
sub
andb
loopne
adc
and
mov
outsl
hlt
jb
mov
dec
daa
sti
lds
int
mov
jle
pop
stos
shlb
jl
shrl
pushf
ja
sub
inc
iret
or
add
inc
mov
mov
mov
sti
fisttps
pusha
push
repnz
add
add
ret
aaa
lcall
jns
adc
xchg
add
loopne
loopne
iret
int
sti
cmp
sub
bound
jbe
movsb
andb
lret
mov
shr
lea
nop
xor
mov
inc
jmp
add
outsl
and
add
push
shll
mov
xlat
out
mov
sarb
sub
daa
push
int3
jmp
stos
and
sbb
pop
in
stc
scas
inc
and
ss
mov
fnstenv
lret
jnp
stos
and
aaa
cmpsl
mov
loope
hlt
lea
or
rcrb
fiadds
or
loopne
shlb
pop
mov
jno
movsl
test
pusha
inc
mov
sbb
mov
xor
pusha
loopne
in
cmpl
adc
andb
cmp
xorl
movsl
test
rorb
pusha
sub
and
add
mov
inc
pop
scas
push
popf
into
dec
ss
sub
cmpb
fnstcw
jbe
adc
loopne
pop
mov
popa
outsl
pop
ret
push
lea
sbb
add
ljmp
xor
pusha
mov
loopne
es
rolb
aad
xchg
sub
lret
add
andb
pushf
dec
jns
sbb
cmp
sub
and
and
pusha
lahf
test
insb
jl
stos
and
jmp
andb
out
ret
and
mov
jmpw
insb
andb
push
sub
jl
xchg
addb
stos
inc
pusha
mov
out
ljmp
xchg
shrb
dec
xor
mov
cmp
add
aam
mov
jae
movsl
xor
mov
shl
adc
pop
dec
jg
sarb
dec
jnp
inc
mov
adc
clc
mov
cmp
hlt
jbe
pop
pop
adc
adc
andb
mov
popf
xchg
arpl
add
sbb
inc
fnsave
loop
mov
cmp
pushf
icebp
jne
dec
fdivrs
cld
lds
mov
xchg
cmp
sbb
add
push
push
push
jge
nop
loope
call
out
lret
lock
jo
add
jmp
xor
ljmp
add
push
fdivrs
sbb
pop
dec
out
aas
dec
jp
sub
inc
lods
cwtl
add
xchg
jmp
push
dec
sbb
jp
pop
sub
int3
test
and
cwtl
push
popa
ds
add
xchg
ja
rolb
dec
icebp
lods
mull
vmovd
sub
xor
jnp
jae
jp
andb
mov
sub
insb
and
loopne
dec
jge
das
rorb
mov
loopne
adc
cmp
inc
xchg
int
push
and
addb
mov
add
ror
scas
and
leave
mov
andb
cmpsb
rolb
xchg
daa
mov
add
aas
inc
mov
xchg
aas
xor
xor
pop
sub
rolb
and
dec
jnp
xchg
andb
int
loopne
outsb
cmp
mov
sbbb
pusha
int3
aas
mov
mov
and
adc
pusha
lock
addb
dec
mov
sbb
insl
into
in
call
int3
pushf
sub
and
xchg
mov
cli
rclb
cwtl
adc
pusha
xchg
and
fwait
pop
cmp
jle
call
pop
or
pop
call
daa
enter
inc
fadd
cmpsl
ret
jnp
loope
and
rolb
adc
test
mov
pop
mov
and
daa
dec
popa
dec
rorb
cmp
shlb
loopne
and
arpl
jge
cltd
test
xor
pusha
pusha
mov
dec
push
xchg
push
mov
add
mov
add
mov
jae
mov
mov
cmp
add
push
lods
dec
pop
push
rclb
push
mov
rcrb
xor
and
mov
cmp
sub
add
sbb
push
rolb
test
adc
mov
mov
mov
cltd
inc
in
cli
test
jbe
sub
jmp
sub
movsl
out
inc
jecxz
sub
pusha
inc
add
in
hlt
in
mov
incl
add
rclb
bound
pop
addb
cmp
add
leave
mov
shlb
add
inc
mov
pusha
arpl
dec
rclb
stc
mov
imul
je
fisttpll
pop
sarb
pop
call
rolb
fisubl
mov
popf
xchg
rcrl
and
inc
mov
pop
xor
bnd
addb
sbb
subb
jmp
mov
mov
mov
push
sbb
mov
jno
mov
mov
mov
xchg
push
pop
data16
pop
mov
xchg
cmp
xchg
jae
inc
add
dec
dec
aaa
dec
lods
mov
mov
add
insl
imul
cs
insl
adc
cmp
addb
lret
sar
sub
rcrb
std
stc
pop
xchg
mov
push
and
loopne
adc
jno
inc
sub
sbb
mov
pop
adc
mov
add
mov
bound
mov
cmp
nop
inc
lret
jl
inc
in
gs
data16
add
add
and
push
and
sub
loopne
dec
je
lods
dec
adc
mov
add
fnstcw
inc
sbb
push
aam
scas
cmp
sbb
xchg
mov
fcomps
shlb
add
mov
addb
test
sarb
mov
inc
cmp
add
xlat
and
and
add
loopne
add
shlb
xor
in
loop
xchg
inc
xlat
and
mov
dec
push
loopne
xacquire
mov
fcompl
aam
addr16
loopne
shlb
sahf
push
push
sarl
ljmp
push
pusha
sub
testb
cmp
jnp
stc
jp
dec
jbe
addr16
or
inc
dec
push
loopne
test
rol
je
mov
aas
les
addr16
jl
or
inc
stos
orl
add
inc
inc
pop
or
iret
push
inc
cwtl
inc
xor
out
pop
insb
sarl
insl
gs
dec
fwait
addb
into
ss
call
out
stc
fstps
push
ret
sub
aas
push
sub
pusha
xchg
adc
xchg
hlt
inc
fucomp
push
inc
inc
out
mov
jbe
adc
sbb
popa
call
pop
rcr
scas
rol
inc
mov
out
movsb
add
mov
loopne
sahf
pop
and
inc
xchg
in
pop
mov
inc
and
adc
popf
fcoms
adc
loop
sub
loopne
mov
mov
lret
ljmp
pusha
inc
and
ret
and
inc
shll
add
mov
lret
aaa
mov
sbb
clc
lahf
enter
sbb
jmp
dec
jb
shrl
cld
and
stos
loopne
aad
fnsave
sbb
push
pop
adc
jmp
cmpb
scas
and
jo
adc
push
mov
mov
cmp
add
dec
jb
cmp
add
sar
jmp
adc
push
pushf
nop
cmpl
push
mov
loopne
cmp
inc
sub
inc
adc
and
mov
inc
dec
shrb
pusha
loopne
jmp
popa
lret
and
inc
scas
lret
mov
jbe
pop
mov
inc
inc
mov
loopne
jle
addl
mov
jmp
rolb
test
sbb
add
loope
mov
inc
add
mov
ja
inc
adc
rolb
inc
inc
negl
call
into
xchg
outsb
addb
mov
shlb
xchg
rcrb
sub
xchg
xchg
sbb
push
and
inc
cld
aas
mov
in
popf
mov
cmovb
mov
or
xchg
jg
sbb
cmp
jmp
jne
das
cld
push
jp
sub
sub
inc
jmp
push
mov
pop
test
cmp
loop
add
test
push
cld
aaa
lahf
divb
push
inc
andb
sbb
add
pusha
pop
in
rcr
ljmp
fwait
movsb
add
mov
cli
icebp
mov
int3
stos
andb
test
add
loopne
add
andb
add
push
ror
pop
inc
mov
add
and
sub
mov
lcall
or
inc
loope
mov
aas
xchg
stc
pop
inc
repz
scas
adc
fildl
adc
lret
push
dec
push
in
fldt
pop
or
pusha
in
sub
jecxz
add
out
lcall
add
pushf
sub
aas
inc
or
shl
iret
mov
mov
add
pop
jbe
inc
jmp
cmp
imul
inc
scas
loopne
adc
inc
loopne
push
add
loopne
sbb
jmp
and
stos
pusha
and
or
xlat
neg
sub
add
push
mov
and
adc
jl
or
andb
sub
insb
mov
sbb
pusha
and
scas
sub
or
addb
loopne
or
pusha
fstl
subb
and
mov
mov
imul
gs
loopne
adc
mov
xchg
push
addb
movsl
jl
pop
mov
movsb
pusha
add
dec
push
dec
mov
mov
int3
rcrb
shl
xchg
adcl
sub
pusha
in
and
push
or
outsb
xlat
lcall
jg
fdivrl
pop
jnp
addb
and
and
mov
jmp
mov
add
adc
mov
loopne
out
jecxz
scas
inc
loopne
inc
jmp
pusha
lods
jnp
and
and
add
loopne
frstpm(287
ss
xor
mov
dec
sub
and
rolb
pop
jl
psadbw
add
mov
negb
push
test
xor
or
rclb
pop
mov
cmp
jo
andb
adc
jo
mov
pusha
push
jae
dec
mov
mov
mov
pop
pushf
nop
sarb
add
xor
fs
xchg
or
inc
dec
sbb
stos
pusha
addb
scas
adc
aam
push
mov
dec
inc
out
mov
inc
add
mov
enter
mov
lret
mov
or
xor
mov
andb
cltd
test
loopne
cmp
and
add
add
and
jecxz
shlb
dec
std
fcompl
mov
mov
fs
dec
push
int
loopne
cmp
andb
pop
mov
pop
sbb
sbb
ret
mov
sbb
xchg
outsl
or
or
adc
dec
pop
xchg
lcall
sbb
xchg
xchg
push
aas
std
mov
mov
shrb
subb
xlat
dec
push
imul
pusha
dec
in
enter
and
push
adc
imul
cld
andl
xchg
clc
mov
adc
mov
mov
jno
and
sub
pusha
call
jns
jno
es
and
aam
and
mov
pusha
test
stos
inc
sbbb
insl
fistl
imul
neg
pop
mov
sti
mov
lds
add
adc
das
test
pop
in
xor
pop
cmc
out
pop
push
aaa
jle
inc
subb
mov
lods
sub
inc
in
inc
das
pop
sbb
pusha
mov
lock
aaa
inc
sub
hlt
mov
mov
int3
jecxz
and
mov
pusha
or
add
add
add
cmp
sub
loopne
cmp
push
mulb
sbb
push
addr16
pop
or
scas
mov
stc
inc
jnp
pushf
add
inc
sub
es
popf
mov
and
dec
inc
inc
pop
out
mov
mov
mov
int
push
lods
inc
xor
ljmp
shr
pop
mov
insb
imul
cmp
xlat
mov
rolb
rclb
loopne
mov
push
mov
and
push
sbb
push
testb
cwtl
push
pop
adc
push
loopne
add
div
gs
lahf
mov
add
mov
out
add
lret
dec
pushl
incb
pusha
pusha
mov
or
mov
inc
inc
int3
push
push
add
mov
mov
je
fiadds
xchg
rclb
adc
mov
fs
insb
insb
je
loop
lock
pop
push
jns
or
and
mov
push
lret
loopne
sub
pusha
cltd
push
inc
pop
jg
pop
add
ror
mov
pusha
sbb
push
cmp
add
push
add
push
icebp
xor
inc
add
xor
xlat
sti
xchg
insl
and
mov
adc
adc
enter
pusha
mov
das
dec
stos
jecxz
cmp
pop
pop
ret
sub
ret
or
xor
inc
jne
and
pusha
add
rcl
sub
rolb
adc
adc
loopne
aam
scas
mov
mov
loopne
or
cmpsw
mov
dec
ficoms
dec
inc
add
pop
xlat
pop
xor
cwtl
xchg
out
sbb
leave
test
sub
pusha
fdiv
gs
jnp
int3
testb
out
addr16
ljmp
sub
loopne
ja
enter
ficoms
insl
push
dec
iret
lahf
mov
push
rolb
jno
cli
and
adc
lds
jl
add
mov
inc
out
rolb
andb
mov
out
xor
lods
stos
inc
pusha
xchg
pop
adc
inc
shrb
idiv
xor
popf
add
aad
rcll
xor
mov
mov
or
out
lea
cwtl
iret
ss
sub
add
js
lea
jp
dec
bound
cs
and
push
pusha
and
add
adc
xchg
and
inc
fwait
push
mov
sub
lret
inc
jbe
add
loopne
push
ret
adc
or
push
mov
rep
jbe
andb
cld
stos
icebp
mov
xor
xchg
movsl
pushf
cmp
inc
gs
gs
cmp
push
adc
jl
lret
and
mov
andb
movsb
pusha
pusha
push
idiv
pop
push
inc
add
add
inc
mov
mov
aad
rolb
rolb
pusha
dec
arpl
movsl
add
test
inc
shlb
sahf
shr
cmp
jbe
add
pusha
clc
push
or
dec
inc
adc
pusha
subb
inc
jecxz
add
add
test
xchg
jmp
inc
pusha
mov
arpl
push
mov
data16
and
sub
iret
xor
or
xor
pop
idivl
mov
lcall
sahf
in
add
inc
aaa
dec
inc
sbb
ret
fwait
push
or
and
pusha
leave
clc
cmp
mov
lret
add
fadds
clc
or
inc
inc
xchg
xchg
push
mov
add
mov
mov
mov
mov
add
test
cmp
mov
mov
mov
inc
in
adc
xchg
lock
dec
pushl
movsb
loopne
xchg
jl
add
out
or
and
adc
rolb
mov
enter
jg
mov
int3
fbstp
test
loopne
pusha
pop
sbb
push
cmp
insl
shlb
cltd
fstpl
pop
mov
loopne
and
test
mov
sub
loopne
bound
jb
pusha
xchg
jmp
mov
mov
push
cmc
repnz
shl
cli
mov
lods
pop
cld
jns
add
loopne
sub
sub
add
sub
mov
and
loope
dec
dec
push
or
pusha
cmpsl
xor
inc
inc
test
add
push
sub
insl
out
sar
add
dec
push
pop
mov
das
jnp
fcompl
and
inc
jmp
imul
enter
add
cld
mov
jo
pop
fwait
jl
and
lcall
into
outsl
mov
pusha
jl
ja
mov
mov
data16
add
les
scas
loopne
iret
add
inc
inc
int
clc
sbb
jl
lds
xor
shlb
jl
sbb
jecxz
shlb
xchg
push
jg
dec
add
loopne
lret
sbbb
std
movsb
pusha
mov
xor
loopne
aaa
lcall
and
test
loopne
sbb
sti
xor
jns
pusha
jo
cmp
loopne
fiadds
loop
in
addb
in
sti
jbe
clc
das
sub
sbb
dec
notb
adc
jmp
cmp
leave
sbb
bound
ret
ret
jnp
roll
rcrl
aam
in
xlat
pop
cmpsb
shlb
shl
test
add
dec
xchg
popf
inc
lds
fiaddl
adc
cld
push
xor
mov
xor
mov
loop
jb
xlat
out
xor
mov
popa
call
shlb
lock
loopne
cltd
addr16
push
iret
mov
rolb
push
sahf
inc
iret
push
rolb
adc
stos
imul
insl
xchg
mov
or
inc
pusha
mov
insb
es
mov
and
lret
not
enter
out
pop
out
sti
and
rolb
jl
aam
push
inc
insl
jae
mov
fs
pop
dec
dec
test
inc
sub
mov
inc
mov
add
scas
inc
or
inc
lret
push
add
add
jns
int3
mov
jle
and
test
mov
bound
add
mov
push
and
add
jecxz
pop
jae
push
loopne
adc
push
mov
cmp
or
mov
std
mov
adc
rorb
pusha
inc
mov
and
pushf
arpl
push
mov
mov
mov
sarl
cli
adc
xor
shrb
sbb
push
in
out
mov
inc
jns
dec
mov
stos
loopne
jae
inc
lea
fwait
cli
arpl
imul
data16
lret
pop
shlb
loop
inc
inc
ret
adc
pusha
loopne
mov
sub
push
cmpsl
sbb
lock
movsb
mov
sbb
dec
jne
xchg
xor
je
inc
sub
andb
sti
jno
fsubr
sub
and
inc
push
shr
push
cmp
lods
pusha
add
jp
ds
outsb
std
pop
jo
and
fstpl
jp
lock
or
mov
loope
xchg
pop
push
mov
dec
fcomp
add
pusha
pushf
pusha
mov
outsl
loopne
inc
inc
add
shrl
add
loopne
jo
sti
push
loopne
sbb
push
add
dec
ds
pushf
scas
mov
jo
out
pop
negb
aam
rcr
inc
jmp
xchg
mov
imul
sbb
aad
out
adc
loopne
out
mov
xor
pop
or
in
cwtl
cmp
mov
adc
repz
or
rolb
mov
sbb
lret
pusha
pusha
sti
addb
lods
xchg
dec
es
lea
imul
inc
fisubrs
and
pusha
orb
out
lret
in
aas
push
push
add
inc
stos
and
and
loopne
pop
add
and
sti
iret
stc
xchg
sub
test
add
mov
jno
pushf
cwtl
mov
hlt
es
loopne
mov
in
or
shlb
in
mov
aad
pusha
cli
test
pusha
pushf
jecxz
add
movsl
movsb
addb
or
icebp
mov
mov
mov
outsb
shrl
ror
cltd
in
andb
lahf
mov
call
cltd
lds
ljmp
imul
cwtl
imul
push
xlat
cld
cld
add
inc
fldcw
pop
inc
pop
jno
movsb
mov
pop
add
mov
clc
xor
rolb
adc
shlb
into
lods
and
mov
sbb
jge
sub
sub
popa
insl
cmc
jg
cli
loopne,pn
out
test
pusha
fisubrs
inc
lret
mov
pusha
cmpsl
inc
loope
stc
pop
addr16
movl
or
mov
jmp
pop
out
mov
xchg
mov
out
sub
cmpb
ja
xchg
insb
xchg
clc
and
mov
adc
mov
mov
rolb
out
fisubrs
pop
xchg
into
sub
and
mov
sti
aas
cltd
fs
scas
inc
rcr
pop
sub
add
add
sub
pusha
decl
mov
lcall
mov
js
mov
inc
mov
pushl
addb
popa
mov
je
adc
insl
inc
mov
cmp
xchg
xlat
add
mov
out
popa
popf
inc
push
lock
sbb
andb
shll
cmp
in
shlb
mov
pusha
add
add
push
pusha
fs
pusha
pop
int3
repnz
movsb
shl
sti
jl
addb
and
hlt
push
lret
push
jmp
filds
cmc
xor
pop
inc
test
mov
loopne
push
xchg
into
ficoml
lahf
cwtl
mov
and
jmp
add
or
mov
js
cld
ljmp
add
rorl
out
mov
or
loopne
loopne
or
fidivl
and
cmp
loopne
mov
addb
push
andb
mov
and
subb
lds
mov
repnz
outsb
add
mov
and
sbbl
fsubs
inc
and
push
or
push
cmp
aas
add
shrl
loopne
lock
loopne
icebp
add
inc
mov
rolb
addb
jns
xor
mov
fwait
sbb
stos
mov
dec
add
push
jbe
lds
lret
adc
or
mov
or
push
inc
jnp
jne
inc
pusha
mov
shl
sbb
pop
jno
sbb
movsb
pusha
mov
add
test
loopne
dec
js
jg
pusha
add
adc
int3
sahf
ljmp
int3
push
pusha
inc
popl
push
mov
jb
adc
mov
in
jo
andb
pop
cmp
ja
xchg
cmp
dec
xchg
das
sub
mov
pop
int
sbb
mov
pop
popf
in
inc
add
sbb
outsb
lahf
mov
stc
push
inc
inc
out
scas
les
data16
mov
xchg
xchg
aaa
fnstcw
inc
in
cli
mov
ss
mov
mov
insb
clc
or
and
adc
loopne
add
std
mov
or
in
xchg
cmp
stos
cmp
mov
and
jle
inc
rclb
sti
push
mov
rcrb
rol
adc
call
loop
sbb
mov
sub
loope
mov
stos
pushf
js
rolb
xchg
jmp
pop
fwait
testl
inc
xchg
sub
pusha
mov
cmp
xchg
movsl
mov
jne
iret
mov
sub
rclb
in
push
and
addl
pop
insb
shll
fwait
sbb
mov
pop
imul
in
push
xchg
add
and
add
out
push
inc
daa
mov
pusha
daa
pmulhuw
dec
jns
add
insb
inc
loop
aad
sbb
aas
cltd
cwtl
lods
pusha
and
popa
dec
add
loopne
aam
pusha
cmp
in
fs
add
cmp
loop
fwait
cltd
sub
lods
int3
xor
jae
jo
loopne
int
cmp
in
sub
sbb
test
pusha
shlb
sub
and
xchg
and
sub
push
pusha
xor
out
in
mov
out
jp
jmp
cld
mov
add
mov
iret
and
jecxz
pop
add
rcrb
stc
inc
add
inc
icebp
mov
shll
sbb
xor
and
push
mov
add
lods
daa
insl
dec
xor
pusha
adc
mov
cld
and
rol
aaa
nop
inc
adc
pop
outsb
jns
inc
orb
cmpsb
mov
mov
adc
mov
popf
push
mov
pop
shrl
nop
in
push
loopne
popl
cmp
add
push
imul
mov
lret
adc
cmp
xchg
lcall
in
and
and
sbb
mov
push
adc
pusha
mov
insl
scas
in
ret
add
out
clc
mov
and
rolb
push
mov
aam
rcrl
fcmovne
jno
inc
inc
push
shlb
daa
mov
cmp
jns
jbe
ja
lods
cld
mov
enter
cmp
fmuls
das
or
and
lea
mov
ret
add
fbstp
dec
xor
addb
loopne
adc
add
aad
jbe
adc
rolb
fcoms
or
add
inc
pusha
push
mov
dec
in
fisttpl
xchg
enter
add
cmpsb
add
adc
shlb
rol
pusha
mov
lahf
sub
mov
push
mov
push
negl
cmp
sbb
inc
mov
dec
les
add
add
mov
adc
int
mov
xlat
ljmp
rorb
and
rclb
mov
sbb
mov
ja
lcall
mov
adc
xor
je
bound
add
push
sub
sbbb
rolb
add
and
loopne
bound
in
ds
xor
into
mul
das
push
lret
pop
jle
mov
pusha
and
mov
adc
aam
push
cmp
loopne
mov
inc
xorb
xchg
mov
rorb
aam
xchg
push
pop
data16
xorl
mov
dec
mov
ret
and
and
addb
mov
jge
dec
add
sarb
pusha
pusha
movsl
sbbl
cltd
jns
rcrl
stc
xchg
data16
pushf
bound
mov
add
loopne
dec
jnp
xchg
add
js
cmp
mov
and
andb
inc
xchg
loopne
xchg
outsb
popa
rol
push
aas
push
pop
mov
into
jp
sbb
mov
and
and
cs
add
inc
shl
mov
loop
lret
outsl
fs
xchg
xor
orl
xchg
ret
rcl
divl
mov
popl
loopne
push
xchg
add
and
xor
imul
mov
mov
pop
and
jnp
aad
ljmp
pusha
shlb
je
inc
add
adcb
push
mov
and
out
inc
jmp
and
add
and
icebp
in
sub
mov
sub
xchg
dec
sbbl
xor
loopne
in
movzbl
sub
leave
or
movsw
mov
sub
pop
or
test
add
and
cmpb
stos
ds
shlb
pop
popf
ficoml
in
mov
sarb
xchg
pop
roll
xchg
xlat
jae
aad
loopne
mov
push
stos
sahf
stos
push
inc
pusha
push
sub
loopne
loope
sahf
mov
insb
jp
rcl
imul
test
jp
addb
loopne
pop
cltd
and
andb
loopne
mov
xchg
in
dec
mov
cmpsl
dec
sub
push
sbb
jbe
cmp
xor
mov
clc
std
aas
loopne
and
inc
xorl
mov
mov
jecxz
mov
push
insb
lcall
inc
ret
cmp
lret
std
sbb
pop
stc
hlt
add
push
int
icebp
cmpsb
shlb
mov
pusha
and
ss
sbb
xor
imul
pop
xor
stos
loopne
mov
rolb
ficoml
lods
mov
mov
xchg
adc
popa
xchg
out
mov
ja
push
mov
sbb
add
xchg
cwtl
repnz
dec
dec
cmp
lea
mov
mov
movb
sahf
cmp
inc
fwait
mov
mov
loopne
lahf
sub
or
inc
push
mov
lret
pushf
scas
jg
sub
and
pop
lret
or
faddl
rolb
andl
xor
jmp
loopne
push
and
orb
js
into
in
call
inc
test
pop
adcl
shll
loopne
shl
jbe
mov
pushl
fnstsw
and
cmpsb
pusha
shrb
cmp
icebp
dec
hlt
arpl
push
hlt
mov
test
je
out
fsubp
aam
idiv
xor
or
xchg
or
mov
ljmp
push
cld
pop
and
jg
inc
xlat
movl
movsb
loopne
roll
push
incl
pusha
pop
comiss
add
lds
or
cmpb
jg
and
nop
add
mov
fdivrl
je
lock
push
rcrb
mov
mov
loopne
roll
andb
sub
mov
bound
ja
lods
insb
scas
jle
push
hlt
mov
add
xor
call
push
and
cmp
push
inc
aad
mov
jb
lret
fucomp
hlt
cmp
cmp
jp
xor
xor
xor
insl
lahf
test
mov
testb
lret
rcrb
add
dec
sub
mov
add
shlb
mov
push
push
cmc
arpl
rolb
sbb
dec
and
sbb
sbb
push
dec
mov
pusha
and
pop
mov
inc
shlb
insb
daa
pop
mov
lods
shlb
push
in
sub
rolb
add
sub
sbbb
push
dec
or
and
rcrb
rol
nop
pop
dec
xchg
arpl
and
jge
fistpll
pusha
adc
inc
inc
pop
test
add
pop
push
repz
or
loopne
mov
mov
jle
cli
xchg
cmpsl
test
in
and
add
inc
cmp
mov
ds
cmpl
inc
add
loopne
xchg
inc
fidivrl
rolb
dec
mov
out
jbe
mov
loope
scas
cmp
dec
aas
lods
pusha
inc
jbe
xchg
mov
in
sbb
adc
mov
pusha
mov
shl
fistps
pusha
and
jnp
mov
roll
mov
xchg
adc
addb
sarb
push
inc
and
nop
mov
mov
xchg
xchg
loopne
add
loopne
push
cmp
xchg
cmp
jmp
or
dec
cmpsl
scas
mov
in
push
fwait
jmp
push
mov
lea
add
test
sub
fldl
in
jno
mov
loopne
jnp
sbb
in
and
pop
cmp
lock
notl
movsl
mov
mov
dec
adc
add
xor
imul
mov
mov
or
sbbb
mov
and
push
aam
mov
mov
addb
addb
mov
cwtl
sbb
push
mov
out
mov
add
mov
add
jnp
arpl
cli
notl
addb
jl
adc
xchg
bnd
pusha
pusha
mov
loopne,pn
imul
mov
mov
pushf
mov
imulb
shlb
add
pusha
pusha
cmp
cmpsl
push
add
sbb
cli
pop
jl
add
push
dec
leave
mov
cmp
fidivs
dec
jmp
imul
and
movl
sbbl
add
push
fs
or
dec
mov
xchg
fistps
push
mov
mov
cmp
push
mov
loopne
into
repz
dec
in
fwait
in
push
dec
cmp
or
fldt
inc
add
imul
loopne
int
and
mov
test
shlb
jns
mov
shrl
and
aaa
push
and
idivl
cmp
pop
xchg
in
or
sarb
loopne
mov
movsb
and
in
mov
inc
into
pop
ret
xchg
push
sbb
clc
cli
inc
mov
fmull
jbe
in
and
adcb
push
in
fwait
pop
lret
cwtl
or
xchg
lods
cltd
into
push
sub
adc
pop
dec
pusha
nop
cmpsb
rolb
mov
mov
dec
push
push
xchg
sbb
mov
pop
or
lahf
push
lret
mov
xchg
dec
and
mov
mov
inc
jl
daa
jb
sub
imul
sarb
daa
loop
outsb
sbb
push
sbb
les
fcmovb
xor
jl
addb
xchg
dec
mov
or
andb
fistps
cmc
inc
mull
rolb
int3
shlb
sub
or
loopne
lret
mov
push
rolb
mov
rolb
mov
pop
fwait
outsl
xchg
int3
xor
push
mov
pop
fmul
xchg
outsb
sbb
rclb
enter
mov
or
loopne
in
addb
pop
mov
sahf
fs
xchg
pop
add
loopne
loopne
push
out
xor
test
inc
dec
mov
mov
enter
gs
mov
and
add
adc
jmp
push
inc
pop
xchg
movsl
sub
add
ficoml
movsl
loope
sub
add
mov
inc
pop
incb
into
lahf
into
push
inc
loopne
inc
and
fbstp
fmul
out
daa
dec
int
imul
dec
mov
mov
mov
fs
out
test
mov
add
pushf
pusha
lods
adc
pop
or
add
mov
out
or
rcr
pop
push
test
and
mov
pusha
icebp
rolb
add
jge
scas
mov
pop
imul
mov
mov
mulb
and
jecxz
je
xchg
pop
out
imul
adc
stos
lods
sbb
push
daa
sbb
jge
mov
sub
mov
mov
cmpsl
dec
shll
adc
pusha
pusha
pushf
mov
lea
add
imulb
insb
outsl
fld
jp
cmp
xor
loopne
or
pusha
xor
dec
lcall
out
cmp
mov
sbb
lock
adc
sub
pusha
mov
jo
sti
cmpsb
mov
sbb
pop
mov
frstor
stos
insb
mov
cmp
bound
mov
push
sub
fwait
push
add
jae
fistpl
inc
loopne
jle
mov
mov
xchg
pop
arpl
clc
out
andb
jmp
dec
add
mov
lret
das
aad
sub
and
ds
int3
mov
inc
sub
loop
add
adc
insb
sub
add
fnsave
pusha
inc
stos
push
adc
enter
andb
xlat
dec
clc
in
pusha
mov
test
and
mov
pusha
shlb
mov
loopne
inc
fs
aad
xor
cmpsb
add
inc
shrb
add
popf
test
loopne
gs
mov
jle
mov
inc
shrb
jmp
shll
and
and
dec
in
or
loopne
mov
sahf
inc
lahf
rcr
aaa
and
shll
pop
lahf
out
and
pusha
in
lret
je
fucompp
xchg
ja
aas
mov
mov
call
fsubl
or
loopne
hlt
aaa
add
rorb
add
dec
mov
mov
cmpl
add
ds
cmp
push
subl
mov
dec
mov
fsubrl
add
sar
mov
mov
or
jno
mov
out
ljmp
inc
add
cmp
pusha
push
data16
rolb
repnz
ret
xchg
aas
xor
xchg
loop
cmp
dec
xor
repnz
lcall
or
pop
jge
or
or
repz
repnz
pusha
xchg
loopne
push
call
mov
rol
lds
xchg
jp
mov
pusha
dec
sbb
jl
movsb
and
iret
or
mov
mov
js
or
push
mov
jno
mov
lods
and
mov
rolb
out
fcmove
lods
pusha
and
pop
stc
xlat
xor
sahf
or
jmp
fwait
jne
imul
sbb
mov
cmp
data16
and
aam
inc
fstps
int
sbb
shlb
add
test
inc
mov
and
sbb
movsl
mov
lock
mov
mov
add
jae
ret
cmp
inc
test
andb
xor
mov
andb
out
inc
data16
mov
in
fbstp
cltd
pop
std
push
aam
roll
lcall
pop
pop
dec
mov
cmc
sbb
mov
add
mov
pushf
nop
cmc
jno
jo
insl
fstl
pusha
and
scas
mov
stos
and
mov
pop
scas
xor
shlb
inc
cmp
fsts
pop
in
fcmovne
aam
int3
pcmpeqd
mov
mov
es
mov
pop
and
loopne
js
ret
add
jg
xorl
cld
les
and
add
adc
jl
jnp
cmp
mov
sbbb
aaa
lahf
add
jne
loopne
dec
add
aas
jle
push
dec
push
xchg
int3
addr16
cmp
icebp
push
cmpsl
mov
inc
jno
adcl
inc
cmp
mov
add
push
mov
mov
je
mov
lea
mov
hlt
xor
sbb
add
xor
mov
xchg
in
add
xchg
bound
pop
aas
insl
aad
movsb
andb
subb
sbb
ljmp
mov
addb
add
pop
push
lret
add
inc
push
xchg
mov
arpl
popa
iret
mov
addr16
addr16
int3
and
sbb
inc
adcb
and
and
pop
pop
outsb
lock
cmp
sti
pop
xor
lods
rol
shl
add
pusha
lock
pusha
mov
inc
and
inc
and
inc
mov
xor
out
jne
fisubrl
or
aaa
mov
mov
out
repz
push
lret
cltd
ljmp
cmp
mov
fucomp
sub
shlb
mov
shr
inc
rorb
sbbl
and
mov
mov
sbb
loop
stc
mov
pusha
xchg
add
dec
adc
add
jno
imul
pop
mov
mov
mov
ds
out
jbe
ja
cwtl
mov
out
mov
es
pusha
pop
insl
rcl
push
lahf
mov
insb
nop
xor
in
and
inc
fmull
add
aas
out
outsb
and
andb
jg
in
and
pop
jl
xor
inc
mov
push
pop
pop
icebp
push
imul
shlb
inc
loopne
rol
mov
imul
add
xchg
mov
in
lret
in
push
mov
ja
int3
loope
add
inc
daa
icebp
mov
dec
data16
leave
xchg
inc
js
stos
int3
dec
loope
fstpt
pushf
out
push
inc
in
aam
dec
mov
addr16
cli
sbb
ljmp
aas
insb
mov
xor
cmpsb
loopne
aas
outsb
or
mov
mov
mov
loopne
pusha
pusha
negl
and
mov
mov
addb
pusha
pushf
cmp
sti
xor
pop
daa
sti
int
popa
mov
push
out
and
add
adc
ja
mov
mov
dec
and
bound
fisttpl
pusha
movsb
mov
inc
hlt
push
test
inc
inc
sarb
test
push
out
pop
push
xchg
jge
ss
test
rclb
test
or
inc
add
lea
outsb
out
push
inc
loopne
mov
and
inc
and
mov
shl
repnz
pop
stos
jmp
loopne
sbb
lret
faddp
push
mov
icebp
stc
sbb
addb
adc
push
ljmp
sbb
incl
add
shlb
add
pop
arpl
pusha
mov
pop
mov
add
xchg
push
pusha
pusha
rorb
fwait
imul
mov
shrb
loopne
enter
shlb
xchg
pop
mov
mov
pop
loop
pusha
inc
popf
mov
aas
cmp
mov
adc
sbb
loopne
and
movsb
andb
jg
lret
imul
call
jl
mov
inc
sarl
dec
shr
cltd
outsl
mov
repz
cmc
mov
lea
jnp
aaa
mov
jmp
or
out
shl
fwait
mov
icebp
mov
pusha
and
orl
out
cmpsl
pop
arpl
icebp
jmp
pop
test
and
and
add
and
add
jns
cwtl
aad
movq
mov
lock
add
shl
ror
cli
fisubs
bound
cmpsb
andb
cmpb
dec
sbb
push
enter
mov
aam
mov
mov
mov
jae
dec
mov
sti
push
add
mov
mov
cmpsb
rolb
mov
dec
cli
incl
and
jg
pop
dec
je
insl
or
xor
cwtl
jmp
inc
movsb
shlb
mov
add
pusha
data16
push
lods
pusha
add
mov
pusha
xor
inc
pusha
jnp
ljmp
mov
dec
mov
lock
pop
loopne
cmp
test
mov
add
sbbb
dec
enter
mov
rorl
mov
int
jmp
or
orb
pusha
andb
add
pop
int
arpl
sub
adc
add
add
stos
mov
add
mov
add
mov
inc
inc
pop
mov
mov
and
mov
imul
jp
rclb
inc
pop
rcl
and
dec
mov
sbb
ss
loopne
xchg
sub
inc
scas
out
add
xorb
cmpsl
out
enter
out
imul
gs
mov
lret
fimuls
es
add
push
dec
js
mov
mov
pusha
sbbl
clc
mov
pop
push
pop
lahf
mov
xor
loopne
arpl
shlb
fsubrs
sbb
mov
pusha
dec
xchg
add
inc
sub
pop
mov
inc
outsl
cmp
dec
sti
lret
pop
and
dec
pop
mov
js
mov
aad
adc
in
out
or
inc
push
pusha
rolb
outsb
daa
adc
out
inc
loopne
in
leave
or
xchg
popf
adc
adc
xchg
jle
repnz
pusha
and
das
es
fldcw
lds
mov
inc
int
andb
and
sahf
and
loopne
xor
fcmovbe
mov
pusha
ja
leave
outsb
aas
lods
outsl
mov
cmp
and
add
jp
lcall
cmp
pop
inc
inc
push
mov
xor
int
xor
gs
add
or
push
insl
out
call
in
jno
hlt
pop
pop
out
xor
jp
cmpl
in
lcall
leave
ror
aaa
mov
dec
adc
xor
dec
jl
sub
mov
shr
xchg
push
imul
lea
and
dec
jle
sbb
pusha
inc
jle
and
stos
inc
add
adc
dec
push
add
inc
flds
sbb
adcl
ds
ss
mov
faddl
subl
jnp
sbb
leave
sti
out
xor
fcomps
dec
cmp
inc
aad
addb
push
mov
rolb
adc
dec
push
jp
fcomi
pop
mov
ret
adc
in
add
insb
cmp
xor
sub
and
lret
fucomip
mov
loopne
adc
popf
bnd
jno
push
add
movsl
ss
lret
sbb
jne
inc
jnp,pt
mov
shlb
cmc
mov
add
call
leave
cmp
jne
or
dec
inc
loopne
push
mov
and
and
cld
jmp
lret
or
ss
jb
bound
sbb
insb
sti
sub
in
xor
cmpl
pop
in
stc
mov
lea
sub
jae
out
pushf
push
jnp
cmp
mov
pusha
pop
test
loopne
pusha
add
sbb
inc
inc
sbb
repnz
loopne
add
jmp
mov
aas
fldl2e
jecxz
push
int
xchg
lds
jg
mov
adc
lods
cmp
lret
cmp
lea
mov
inc
out
inc
mov
lret
lcall
lahf
mov
adc
pop
shll
test
fxtract
mov
cwtl
mov
addb
pop
xor
icebp
int3
add
mov
mov
sbb
pusha
and
popf
call
and
dec
and
loopne
scas
fsubs
dec
in
data16
xor
pop
bound
pop
shll
add
push
lcall
add
mov
das
dec
mov
sub
mov
mov
and
adc
sub
mov
mov
pop
jnp
and
fstpl
lahf
cli
dec
and
lods
rol
addb
hlt
cmp
leave
push
imul
inc
sar
push
mov
pusha
ficompl
cmp
int3
ljmp
repnz
or
orb
and
or
mov
mov
inc
out
ds
xchg
dec
mov
jmp
fcmovbe
ljmp
mov
add
sub
push
leave
lret
cmp
inc
mov
jne
mov
loopne
out
push
and
pop
mov
and
jo
fildl
inc
ljmp
push
mov
pop
adc
mov
sbb
or
enter
and
ds
xor
mov
repnz
xchg
pop
or
add
and
add
rorl
inc
or
sub
pusha
scas
mov
pusha
mov
pop
lock
rorb
fwait
pop
aaa
fnsave
into
push
lods
loopne
sub
sbb
pop
pop
enter
add
lods
fldl
add
nop
and
and
pop
test
andb
pusha
pusha
in
mov
into
push
adc
pusha
and
adc
xchg
pop
addr16
out
daa
xor
rolb
sbb
rcl
out
lea
add
inc
rorl
dec
jae
cmp
popf
out
mov
rolb
cli
and
dec
mov
xor
pusha
loopne
pop
dec
lea
loopne
cmc
ss
ret
pushf
pop
mov
inc
test
call
sbb
jp
jecxz
jmp
add
rorl
adcb
pusha
xchg
stos
ljmp
cli
pusha
cwtl
js
cmpsl
add
arpl
shll
cltd
fwait
dec
insl
xor
pop
cmp
xor
cld
xor
or
adc
xchg
popf
jne
inc
dec
adc
iret
and
jle
call
mov
shl
loope
dec
or
mov
addb
fisttpl
dec
lods
and
sbb
mov
and
shlb
pusha
pusha
mov
inc
leave
pop
andb
pop
loop
push
xor
hlt
pop
xor
mov
rcrb
sahf
pop
jb
inc
cltd
xor
and
or
scas
inc
mov
push
fcompl
lods
or
pusha
imul
shlb
push
and
inc
xchg
ficoms
add
add
cmp
mov
push
sbb
lods
dec
cmp
and
ljmp
adc
fadds
or
xchg
sbb
mov
pusha
loopne
lcall
fs
dec
inc
mov
push
dec
and
sub
out
rorl
add
outsb
xchg
adc
add
dec
cmp
dec
cld
xchg
ficompl
sub
sahf
lea
sub
add
push
or
pusha
sarl
push
add
jl
data16
adc
dec
imul
or
cmp
addb
cmpsb
rolb
ret
div
test
or
movsl
int
xchg
imul
cltd
sbb
xor
lea
int
mov
popa
or
mov
outsl
outsb
std
lods
sbb
lods
loopne
cld
pop
xchg
lret
rorl
repz
jbe
mov
pusha
sub
js
or
mov
clc
test
pop
dec
adc
fidivs
sbb
lods
jecxz
lcall
lods
push
int3
pop
push
inc
sub
push
cmpsb
rol
mov
inc
pop
mov
mov
or
add
aad
repz
sbb
cli
cmpsl
mov
jb
loopne
mov
jmp
push
xor
movsb
and
in
mov
sbb
adc
jae
inc
lds
and
xchg
into
cli
dec
mov
or
inc
sahf
pop
jecxz
mov
aaa
add
jno
dec
clc
push
adc
and
push
inc
push
mov
inc
bound
xor
fldenv
rolb
xor
addl
loope
leave
inc
je
fxch
jo
dec
jae
es
mov
push
je
pushf
out
fs
repz
jge
adc
cmp
or
addb
add
fcmove
rcll
inc
dec
aad
shlb
pusha
push
dec
mov
inc
and
and
shlb
adc
dec
push
dec
mov
cmp
cmp
lods
shll
out
dec
hlt
jae
add
mov
pushf
push
popa
adc
inc
sbb
leave
push
pusha
mov
ret
xor
not
cli
jl
pop
xchg
cmp
fbstp
andb
clc
inc
dec
jbe
sahf
jmp
and
movsl
dec
push
mov
imul
sub
vcvtsi2ssl
in
rolb
loopne
dec
in
mov
cli
outsb
cmc
mov
rolb
mov
pop
movsl
pop
hlt
sti
dec
push
mov
push
cmp
mov
std
daa
test
dec
mov
sbbb
adc
sbb
lods
push
fs
push
sbb
push
loopne
add
andb
and
mov
mov
mov
and
inc
mov
add
mov
push
sub
loopne
lods
addb
imul
jecxz
sbb
faddp
xor
cld
das
fnsave
imul
cmp
add
loopne
and
adc
and
xchg
push
xchg
jbe
jp
or
xchg
push
movsl
mov
sub
shlb
push
sti
sahf
and
sub
and
call
loopne
sti
inc
loopne
sti
dec
cmc
test
orb
and
inc
jnp
sub
mov
mov
inc
inc
inc
pop
mov
and
push
pop
cwtl
in
insl
mov
ret
cmc
orl
xchg
dec
mov
jmp
mov
sarb
gs
sub
pusha
dec
idivb
sbb
aas
adcl
dec
jo
xor
and
xchg
mov
sbb
add
cs
aad
pop
rorl
xor
bound
dec
test
xor
jle
dec
jmp
mov
dec
cmpl
mov
repnz
pop
out
inc
shll
outsl
sbb
mov
inc
and
mov
cli
mov
popf
xchg
out
or
and
fdiv
dec
addl
loopne
mov
ljmp
lods
ret
push
or
mov
bts
xchg
scas
rcrl
orb
add
inc
mov
inc
not
imul
cmovnp
std
outsl
adc
push
push
scas
loopne
and
pusha
adc
inc
in
in
movsl
push
inc
add
pusha
ret
push
nop
out
loope
loopne
aam
out
shll
daa
add
out
lcall
pop
repz
loop
in
je
pop
jo
cmpsl
dec
hlt
cmp
pusha
shrb
ds
scas
andb
mov
rclb
push
rorb
mov
push
xchg
adc
inc
adcl
jno
push
fnstcw
and
loopne
rorl
mov
xchg
and
testl
add
and
and
lcall
mov
and
fcomps
andb
lret
add
pusha
fcompl
in
popa
clc
inc
dec
and
inc
mov
jmp
loop
popf
hlt
inc
adc
pop
data16
cmpsb
add
aad
ret
stos
andb
andb
mov
loopne
lret
add
inc
daa
pushf
push
and
add
jp
call
clc
inc
stos
mov
testb
ret
pop
cmp
pusha
pop
test
or
push
mov
repnz
data16
add
add
in
xor
sbb
cli
movsb
and
mull
sti
jle
and
adc
popf
imul
mov
add
lds
mov
jp
daa
jno
mov
aaa
jmp
out
lods
out
cmp
pusha
loopne
cli
or
pusha
pop
inc
push
cmp
daa
fistl
jle
callw
mov
xlat
inc
lret
std
les
in
addb
cmp
add
sarb
cmp
cmp
enter
fsts
adc
jmp
negb
push
xchg
xchg
add
pusha
addb
xchg
imul
mov
dec
addb
test
jge
stos
fdivrp
out
int
inc
add
repnz
roll
pusha
shlb
loopne
sub
dec
add
jmp
add
jne
push
rol
imulb
mov
and
scas
push
push
aas
lret
adc
sbb
call
loope
and
dec
jo
or
and
lock
dec
gs
loope
mov
xchg
and
jg
in
adc
mov
sub
xchg
add
sbb
mov
dec
jae
or
mov
scas
inc
inc
pop
xchg
lcall
mov
mov
add
fsubrl
push
dec
fiaddl
jge
outsb
rorl
mov
adc
xchg
icebp
dec
stos
jge
mov
mov
movb
ret
loope
jne
mov
rclb
and
cmp
lret
js
and
cmp
pusha
test
loopne
adc
stos
inc
add
cmp
mov
mov
pushf
mov
jbe
add
push
sbb
cltd
test
mov
rolb
inc
inc
imulb
mov
outsb
jbe
jbe
andb
imul
sbb
or
inc
push
dec
xor
pushf
mov
add
dec
scas
cld
les
pushf
in
cmp
xchg
rcl
popa
mov
lea
mov
jg
mov
loop
mov
xor
lahf
adc
adc
add
mov
cld
ret
mov
cmp
inc
add
sub
pusha
cmp
mov
add
and
lahf
outsb
pop
hlt
aas
adc
cli
ds
inc
sbb
filds
and
shrl
add
loopne
int
cmp
loope
std
mov
adcb
mov
dec
add
and
add
adc
fmull
loopne
and
pusha
test
test
and
adc
and
and
insb
mov
jge
pop
lret
add
mov
rclb
inc
loope
jge
loopne
lea
cmc
or
inc
or
and
xchg
add
cmp
adc
mov
and
frstor
adc
mov
and
popf
jae
mov
enter
loopne
xchg
pusha
fisttpll
push
into
sub
inc
cmpsb
add
xchg
fstpl
sbb
dec
inc
xlat
cs
subb
mov
imul
negb
pop
adc
xor
add
movsb
mov
and
ret
jae
rcr
addl
ret
adc
jecxz
pop
fcos
rol
xchg
xchg
js
inc
mov
dec
jb
pusha
mov
add
cltd
pusha
mov
clc
cs
push
pop
dec
or
inc
test
mov
loopne
testb
mov
and
and
iret
or
xlat
cwtl
pusha
jae
jg
int3
adc
leave
addl
cmp
jnp
sbb
inc
sbb
dec
sbb
pusha
scas
mov
dec
mov
sbb
jecxz
cwtl
or
rolb
or
aas
cmp
cmp
scas
pusha
sar
jae
into
sbb
addb
pusha
and
fwait
jbe
movsb
mov
mov
jp
loopne
and
adc
cmp
pushf
or
dec
mov
pusha
xor
mov
fcomps
mov
inc
andb
je
push
mov
cmp
je
sbb
stos
mov
xchg
in
push
mov
and
sahf
fs
scas
popf
xchg
enter
clc
xor
mov
inc
mov
leave
and
and
lret
adc
loopne
and
dec
jno
shlb
in
dec
or
je
and
jmp
and
or
add
inc
pop
adc
dec
dec
xor
jnp
pop
mov
mov
dec
sub
inc
rcl
mov
adc
push
andb
lret
dec
xchg
mov
loope
lahf
cmp
mov
rcrb
mov
sub
pop
adc
out
push
inc
mov
jl
inc
inc
xor
pusha
cmp
std
jo
mov
inc
sahf
inc
mov
icebp
sti
mov
xor
add
fcoms
pop
mov
rolb
sarb
in
push
out
mov
and
inc
inc
xor
scas
loopne
inc
cmc
push
mov
jge
add
add
into
stos
shlb
insl
pop
jl
dec
jmp
cmp
cwtl
cmp
rolb
imul
and
jo
sub
scas
mov
sbb
outsb
mov
and
imul
loop
stos
iret
pop
sbb
icebp
pop
addb
rorb
xor
gs
fistl
je
pop
xor
adc
add
rolb
pop
loop
in
and
gs
sub
sldt
add
push
and
pusha
inc
and
xchg
push
xchg
or
and
cmpsb
pusha
rorb
dec
cs
xchg
sahf
pop
pop
mov
shl
stc
xlat
push
xchg
dec
lahf
sub
add
and
mov
aaa
repz
or
loopne
jl
int3
adcl
loopne
decl
loopne
inc
dec
xchg
loopne
loop
mov
xchg
adcb
test
das
adc
repnz
addb
mov
cmp
idivl
or
rolb
inc
loopne
js
adc
push
push
push
inc
das
popa
pslld
pop
mov
sub
jge
icebp
cmpsl
imul
and
and
lock
and
inc
lock
inc
xorb
push
jns
jge
dec
data16
pusha
shrb
and
stos
rolb
fmull
cld
jle
aas
int
inc
lods
push
daa
mov
jbe
push
adc
insl
repz
rorl
and
clc
inc
aas
cmp
sbb
mov
inc
rcr
mov
aas
pop
aad
pop
xchg
cmp
jne
insb
enter
mov
push
in
jns
mov
mov
cwtl
mov
negl
shl
mov
add
add
push
push
loopne
xchg
test
mov
or
sbbb
pop
jns
nop
cltd
pop
cmpsl
sbb
and
inc
and
das
aaa
push
and
xchg
out
pop
pushf
call
iret
inc
fisttpl
in
flds
lcall
loope
add
andb
loop
mov
cwtl
cmpsl
stc
inc
push
or
loopne
stos
and
push
dec
push
jne
push
loopne
mov
and
decl
ret
jl
adc
insb
add
mov
mov
movsl
ficoms
pop
adc
icebp
jo
lods
and
rol
add
or
mov
pusha
sub
loopne
mov
insb
mov
inc
repz
pop
rcl
and
xor
shrb
lcall
mov
loopne
or
cs
add
add
int
mov
mov
ds
mov
xchg
pop
ret
sti
test
loopne
add
inc
mov
sub
fcompl
pusha
and
rclb
out
xor
push
icebp
cmp
stos
and
mov
in
fdivs
inc
add
clc
jo
or
add
dec
in
and
icebp
sahf
jne
aad
mov
xchg
es
rclb
repz
rorl
jb
lret
adc
insl
das
dec
xchg
and
stc
sbb
sbb
rol
lods
and
in
mov
mov
jl
out
jns
mov
xchg
loopne
lea
mov
mov
in
and
pop
mov
pop
and
and
decb
add
xor
xorl
mov
cmp
andb
inc
add
repz
jo
sahf
mov
leave
pop
adc
sarl
mov
and
push
add
mov
addb
mov
push
push
cmpsb
inc
rorb
and
in
incb
mov
fidivrs
std
sbb
adc
xor
sub
inc
imul
mov
mov
adc
add
ja
jg
in
test
pop
pop
jb
fwait
xchg
xchg
int
jo
xor
ja
scas
inc
mov
mov
mov
iret
scas
add
sbbb
xlat
or
addb
das
or
add
xor
mov
sub
idivl
jno
addb
mov
and
test
rclb
data16
clc
push
iret
test
adc
push
outsb
addb
mov
int
jae
idivl
inc
out
add
das
iret
inc
shr
push
test
loopne
testl
cmp
mov
pusha
pusha
sub
add
out
push
inc
loopne
add
inc
mov
or
mov
loopne
xor
sahf
push
inc
rcrb
mov
and
mov
add
shlb
mov
pusha
adc
in
addb
pusha
pusha
lock
cwtl
cmp
mov
mov
cmpsb
shlb
add
jle
sbb
mov
push
dec
scas
addr16
nop
iret
sub
scas
loopne
xchg
pop
mov
inc
addb
dec
pop
lock
loopne
sbb
bound
cmp
pushf
shll
and
push
scas
ds
mov
icebp
sub
adc
fsubl
or
dec
int3
add
loopne
dec
lret
popa
fldenv
jecxz
pusha
shl
loopne
fidivrs
es
cli
cmp
xor
ror
andb
clc
mov
pusha
vpmulhw
inc
fmull
add
jmp
push
and
add
subb
fisubs
data16
inc
roll
negb
cmp
cltd
cwtl
jno
jo
xchg
cli
xlat
cwtl
mov
lea
dec
xchg
pusha
and
dec
inc
shl
adc
inc
adc
fisubl
flds
xor
adc
rolb
rolb
jb
mov
cmp
aaa
pusha
sub
shlb
cmp
inc
rclb
mov
shlb
and
leave
adc
loopne
cmp
arpl
out
pop
insl
lret
mov
rorb
xchg
scas
loopne
sti
int
mov
mov
mov
mov
loopne
mov
mov
sbb
lock
in
xor
popf
jle
and
push
xchg
sbb
divb
ljmp
sarb
push
icebp
and
test
shlb
add
loopne
lret
out
rolb
sbb
mov
aaa
lret
testl
adc
push
add
data16
loopne
cmp
mov
dec
imul
aas
cmp
dec
pop
adc
mov
push
stc
in
mov
add
push
bound
lods
push
xlat
cmp
arpl
pop
mov
bnd
in
xchg
xchg
leave
pop
pop
leave
fs
push
sbb
add
lahf
ds
rcrl
pusha
and
test
movl
loopne
jecxz
sbb
cmp
push
and
inc
or
mov
imul
mov
fs
sub
mov
inc
lcall
mov
inc
sbb
inc
and
addb
pusha
fdivs
repz
pusha
aam
stos
jecxz
lods
lcall
mov
and
movsb
and
dec
test
fsubrp
es
xchg
rclb
sub
mov
add
loopne
add
outsb
dec
cltd
mov
pusha
lahf
xchg
or
js
cltd
mov
mov
mov
mov
and
add
std
inc
dec
or
lret
cmc
add
out
sub
ret
mov
fwait
push
aas
cmp
inc
mov
lret
mov
or
shrb
test
inc
and
cli
in
stc
leave
jbe
add
and
mov
test
inc
inc
daa
xchg
cltd
outsl
xchg
jecxz
add
fwait
test
add
mov
push
popf
sub
inc
mov
mov
pusha
addr16
inc
mov
leave
and
sar
nop
xor
imulb
shlb
out
std
int
or
enter
xchg
pop
cmpsl
jle
stos
outsb
jno
out
shlb
mov
icebp
add
mov
mov
fistl
mov
mov
fstpl
sub
addb
add
mov
mov
repz
mov
mov
stos
cmp
jno
xlat
mov
add
mov
dec
push
stos
inc
mov
mov
and
mov
loopne
add
inc
ret
pusha
and
out
mov
pusha
or
pusha
out
sub
pusha
shrb
pop
das
in
lods
pusha
cmpb
and
push
insl
xor
push
stos
loopne
dec
pop
xor
ja
cld
hlt
hlt
loope
fimull
or
andb
pop
mov
lahf
lods
add
leave
xor
popa
mov
and
cmc
ss
and
popa
push
inc
lahf
jl
dec
cmc
loope
icebp
mov
add
and
stc
push
sbb
dec
sbb
scas
loopne
add
stos
mov
es
add
or
outsb
int3
cmp
outsb
loop
cmp
jmp
fistl
pop
ret
adc
faddl
mov
mov
mov
jae
sti
sbb
paddusb
bound
inc
shlb
push
cltd
inc
mov
or
out
lea
sub
insl
cwtl
je
add
pusha
sub
pop
mov
fistps
std
mov
mov
ror
sti
jno
mov
dec
ja
jno
mov
xchg
cld
mov
addb
add
inc
in
adc
or
andb
add
push
inc
sbb
fwait
icebp
test
push
adc
popf
out
popf
jmp
inc
jge
sbb
mov
dec
jae
std
xchg
fmulp
bound
pop
sbb
dec
push
mov
adc
iret
adc
sub
inc
pop
push
push
and
mov
add
rclb
add
lods
mov
inc
xchg
mov
inc
div
mov
popa
pusha
movb
inc
dec
pop
movsl
push
repnz
nop
bound
pop
js
lods
xchg
jns
ret
shlb
and
dec
push
mov
fidivl
mov
rcl
lcall
jbe
xchg
add
loopne
pop
imul
cwtl
fdivl
clc
dec
out
lds
mov
cwtl
mov
mov
shlb
add
mov
sub
ja
dec
ret
mov
shlb
or
inc
outsb
push
xor
lock
add
or
push
mov
sbb
ds
add
loopne
iret
das
xchg
push
sub
in
push
inc
repnz
pushf
das
stc
insb
mov
push
into
fildl
andb
mov
mov
add
lret
retw
mov
and
jge
mov
sub
stos
dec
dec
jbe
gs
pop
sub
or
mov
ljmp
test
inc
add
loopne
insl
pop
or
cmpb
sarl
pmaddwd
lret
loopne
fwait
mov
stos
loopne
data16
dec
data16
adc
ret
pop
movsb
and
mov
out
mov
mov
push
rcll
adcl
std
loop
mov
mov
andb
push
test
imul
mov
inc
push
jbe
xchg
pop
jge
loopne
out
dec
sbb
aam
sti
xor
aas
jle
and
lcall
enter
jle
jns
or
xor
jl
add
in
in
mov
add
push
cwtl
insb
adc
into
pop
and
mov
inc
clc
cmp
add
lretw
sarb
adc
cld
xchg
or
lock
or
orb
and
add
imul
aam
test
pop
pop
and
cmp
les
dec
cmpsb
loopne
sbb
das
mov
mov
push
add
iret
sbb
leave
filds
andb
pop
adc
aas
push
mov
pusha
and
outsb
sti
or
mov
sub
pusha
and
loopne
xor
pop
lret
in
lods
mov
mov
add
inc
adc
movsb
mov
sub
lret
imul
or
stos
mov
pusha
dec
adc
mov
ds
into
imul
shlb
loopne
push
xchg
pop
mov
lods
hlt
mov
out
jbe
pop
adc
xchg
out
pop
shrl
aas
dec
in
dec
aam
add
rclb
in
xor
add
mov
lahf
out
mov
rcrb
and
call
and
mov
ret
sub
fs
xlat
add
test
and
inc
insl
test
mov
xchg
call
add
mov
or
subb
sbbb
loopne
inc
pop
pop
inc
stc
test
aas
stc
dec
push
jnp
pop
test
loopne
loopne
ss
cmp
stos
rolb
inc
push
mov
mov
add
mov
inc
sub
lret
mov
rol
sub
dec
add
cmp
pop
dec
cmp
mov
in
ss
loop
loopne
pop
jb
mov
iret
lds
add
pusha
and
cld
or
jo
imul
mov
adc
pop
loop
orl
cmpl
mov
fsubrp
les
xor
cltd
inc
jo
add
xchg
aad
dec
jge
bound
dec
dec
xchg
or
and
lods
loopne
xor
cmp
push
cmp
pop
popf
fstpl
jecxz
add
fwait
addb
mov
shr
dec
fucom
call
fsubrl
add
out
mov
incl
dec
adcl
pusha
and
shlb
mov
int3
dec
movups
jmp
loopne
mov
std
pop
pop
sub
and
out
ds
xchg
fwait
das
push
jmp
sti
jg
add
xchg
xor
mov
sbbb
adc
dec
shrl
add
push
loopne
push
test
rclb
xor
ret
mov
add
ficoms
pusha
pop
xchg
loopne
dec
fistps
fs
lods
dec
popa
pop
jb
inc
arpl
loopne
push
pusha
and
inc
pusha
push
imul
push
aad
add
pusha
shlb
cli
clc
imul
testb
pop
pop
fidivs
pusha
aad
xchg
lods
inc
inc
arpl
dec
xchg
sbb
ljmp
int
test
fists
mov
mov
enter
jge
out
outsb
sub
subb
std
inc
int
pushf
in
pop
mov
loopne
stos
push
outsl
push
mov
test
mov
shlb
iret
outsl
pop
push
int
dec
loopne
cwtl
jp
int
ja
lret
cli
xor
xchg
push
xlat
jmp
mov
pusha
jmp
cmp
jb
sub
and
add
and
mov
pushf
out
bound
mov
add
xchg
adcb
xor
mov
rcll
sbb
in
jp
jbe
roll
and
cmp
testl
pusha
pusha
outsl
loope
cwtl
sub
pusha
mov
add
xchg
jnp
insb
subl
lds
mov
rcl
test
rcll
out
inc
je
or
subb
addr16
inc
jge
push
mov
sub
lods
out
divb
and
insb
loopne
loopne
test
or
cmp
sub
sarb
push
mov
xor
pop
xor
mov
pusha
mov
cmp
loopne
xchg
jp
insb
mov
test
sbb
pop
xchg
fldt
inc
loopne
cmp
pusha
inc
daa
pop
aam
push
in
sub
stc
xor
icebp
lea
mov
loopne
pop
test
inc
sub
fstpt
add
popf
xor
and
mov
jo
pop
dec
rcrb
icebp
aas
in
jnp
or
add
push
test
shlb
jl
idivl
add
lods
inc
rclb
stc
and
add
pop
aad
sub
inc
inc
pop
sbb
jmp
cs
rcr
fwait
and
pusha
icebp
repz
sbb
inc
and
and
mov
sub
pop
das
vcomisd
xor
and
cmp
lds
orb
arpl
loopne
pop
lret
cs
and
push
pop
push
aas
add
shrb
cmpsl
int3
cli
insl
sbb
add
push
les
add
xsave
inc
inc
mov
pop
outsb
rclb
pop
stos
add
dec
loope
cwtl
and
or
pusha
clc
imul
loopne
lods
pusha
and
fldt
rolb
mov
lock
adc
push
fnclex
sahf
shll
mov
xchg
and
pop
in
pop
pop
rcr
dec
aaa
mov
push
pop
lock
sub
xchg
add
add
shll
inc
sbb
std
dec
sub
add
loopne
pop
arpl
pop
addb
mov
mov
loopne
scas
or
out
sahf
dec
mov
idivl
xchg
inc
sub
fwait
and
push
aas
push
jg
jl
or
inc
cmp
jmp
pusha
add
inc
and
fwait
pusha
push
add
or
addb
or
add
push
lret
shrl
iret
cmp
icebp
aad
nop
add
pcmpeqb
xchg
pushf
repz
pusha
sarb
adc
mov
mov
and
mov
add
inc
inc
fs
sbb
filds
movsb
mov
pop
gs
mov
movsb
loopne
in
test
inc
test
add
inc
sbb
add
and
pop
enter
imul
or
push
fnsave
mov
adc
shlb
lret
in
insb
bound
insl
xchg
add
lock
xchg
xchg
pop
xchg
movsb
addb
in
iret
imul
pushf
fldenv
arpl
andb
jae
dec
xor
testb
jle
popa
cmc
mov
ret
dec
and
mov
inc
sub
ja
or
xor
mov
dec
mov
pusha
push
push
jne
or
xchg
lea
and
test
sub
sub
inc
lret
data16
inc
pop
inc
pushf
stc
test
and
out
sbb
cmpsl
jb
and
rcrb
xor
inc
inc
aam
cmp
mov
sbb
mov
add
xchg
or
sbb
push
mov
and
inc
dec
popa
sbb
mov
sub
adc
or
pusha
add
xor
aam
jnp
andb
sbb
inc
cld
pop
jmp
cli
mov
inc
push
inc
cmp
pop
arpl
inc
and
pusha
push
imul
xchg
data16
pop
adc
pop
dec
insl
and
js
xchg
lret
mov
add
shrl
and
push
mov
in
sarl
dec
add
mov
loopne
divb
sbb
fs
jle
shlb
mov
push
inc
shrb
andb
test
mov
jl
insl
dec
ret
pop
xchg
pop
in
insl
sub
add
mov
add
icebp
icebp
imulb
pusha
andb
pusha
sbb
cmp
and
pop
push
mov
push
loopne
jge
add
rclb
or
call
push
fs
inc
pop
or
inc
ljmp
cltd
mov
pusha
addb
pusha
sarb
inc
pop
xchg
ret
das
daa
jnp
xchg
enter
xor
ss
out
jl
fistpl
ds
and
lods
pusha
xorb
andl
jp
mov
shrb
jbe
mov
sbb
aaa
xchg
stc
in
jmp
das
pushf
xchg
push
movsb
inc
and
iret
lds
and
dec
adc
pop
cmp
push
mov
or
add
outsl
dec
push
wrmsr
add
shlb
shl
out
pop
fisubl
adc
sti
notl
pop
jp
mov
loop
and
inc
stos
mov
mov
mov
add
fsubs
xor
cmpsb
pusha
inc
sbb
xor
or
mov
add
mov
fcomps
bound
push
ret
pusha
and
push
jb
mov
fldt
pusha
rorb
testb
mov
xor
jmp
sbb
inc
pusha
imulb
xor
mov
push
inc
xchg
outsb
cmc
and
and
leave
addb
and
or
loopne
xchg
out
rol
sbb
adc
mov
xlat
ljmp
or
test
loopne
das
lock
inc
sbb
mov
daa
mov
ja
cmp
fstpt
pop
jecxz
cmp
andb
andb
out
mov
jl
xchg
fildll
int3
push
add
addb
outsl
xlat
xchg
cmpsb
mov
and
xchg
arpl
lds
sar
mov
inc
mov
ljmp
jecxz
pop
clc
aas
jmp
insb
inc
aas
xor
mov
xor
cmp
mov
xchg
sbb
mov
out
mov
ret
divb
xchg
pusha
daa
dec
lea
jmp
mov
or
lahf
je
scas
pusha
and
loopne
in
xchg
mov
cmp
out
pop
or
pusha
lret
cltd
jo
pusha
adcb
rolb
je
xor
dec
call
arpl
loop
mov
or
daa
or
xor
decb
pusha
add
xchg
add
pop
jb
xor
mov
shlb
aad
fs
inc
mov
fninit
add
roll
rolb
xchg
mov
je
out
push
mov
inc
add
gs
daa
fdivr
xchg
movsl
ficomps
movsl
dec
gs
fnstcw
or
sub
test
and
sub
pusha
out
jne
call
or
jns
xchg
sub
clc
ljmp
adc
pushf
iret
sbb
data16
adc
add
gs
jbe
movsl
pop
jge
sahf
mov
adcb
inc
and
js
out
inc
loopne
sbb
mov
inc
faddl
and
mov
and
mov
cmpsl
sti
xor
hlt
aad
stos
in
ja
cmpsl
test
cmpb
in
das
mov
in
ja
addb
push
test
sub
jo
loope
mov
and
dec
pushf
cltd
push
xchg
xchg
pop
or
loopne
fwait
daa
frstor
push
mov
insb
cmp
mov
in
add
add
mov
addb
pop
xlat
push
mov
cmp
bound
mov
mov
pop
in
cmpsb
shlb
or
mov
jge
cmp
loopne
mov
sbb
sahf
das
fs
sbb
adc
lcall
int3
popf
movl
jbe
inc
scas
xadd
mov
mov
push
and
cli
and
and
andb
mov
loopne
lods
jle
add
loop
and
shlb
xchg
mov
adcl
sahf
sub
jl
testl
sub
add
loopne
jmp
int
xchg
jo
and
mov
cld
cwtl
pop
ret
mov
lret
std
pop
cmpsb
mov
jno
popa
setae
add
add
loopne
pop
xor
inc
mov
jle
in
addb
inc
setne
std
jge
sub
inc
aas
or
stos
dec
mov
ja
addr16
ret
xor
rolb
add
lods
mov
loopne
test
add
adc
loopne
inc
imul
cmpl
nop
cltd
cmc
mov
add
and
test
adc
aam
hlt
mov
cmp
adc
pop
mov
cmp
push
pop
or
add
mov
js
into
or
cmpb
push
fyl2x
rcrb
cli
arpl
jno
sub
and
jo
addb
mov
fwait
push
fistpll
mov
xchg
jne
xchg
inc
es
and
das
mov
jae
pop
cmpsb
addb
cmp
mov
mov
and
popf
or
loopne
andb
in
xchg
insl
movhps
and
loopne
adc
stc
fldenv
adc
xchg
xlat
bound
push
add
outsl
mov
cmpl
inc
push
inc
adc
mov
loope
jp
jmp
shlb
or
cltd
push
loopne
es
mov
ffree
in
add
and
mov
inc
loopne
add
mov
lcall
ljmp
loopne
inc
push
mov
jb
adc
pushf
arpl
and
test
ljmp
mov
inc
inc
xor
mov
cs
jp
mov
or
add
and
dec
cld
cmp
jge
xchg
sub
mov
add
insl
add
and
xor
jp
jle
dec
std
scas
dec
fsubp
jg
cli
mov
xchg
or
inc
adc
jae
idivb
jnp
sbb
je
rcr
push
fcom
sbb
addr16
xlat
stos
and
pusha
jl
cli
into
shlb
imul
mov
loopne
jg
fmulp
xchg
in
cmpsb
inc
inc
cld
dec
clc
test
lret
pusha
andb
loopne
mov
add
and
inc
enter
adc
mov
and
stos
jns
sbb
aas
fimuls
add
mov
mov
lret
lock
rcrb
rolb
pusha
pop
jmp
push
pusha
and
lods
pusha
mov
add
test
loope
mov
add
xor
and
inc
addb
loopne
inc
lock
mov
in
xor
xlat
push
add
mov
ffree
add
popa
xchg
ffree
ljmp
pusha
and
mov
add
repnz
push
xor
cmp
dec
xchg
mov
mov
loopne
popa
xor
xor
pushf
popa
stos
pop
add
outsb
xchg
inc
insb
movsl
jb
out
sub
mov
pop
or
add
inc
dec
xchg
adc
jno
lods
mov
jb
mov
pop
stos
rolb
add
addb
imul
lods
shlb
adc
add
and
xchg
push
loopne
jg
outsb
cs
stos
inc
pusha
testb
bound
inc
pusha
aad
inc
rorl
mov
add
outsl
pop
hlt
sbb
andb
mov
jmp
int3
mov
push
out
notb
scas
in
xor
mov
mov
in
lods
pusha
mov
cs
add
xchg
push
jmp
mov
movsb
mov
inc
popa
icebp
xlat
in
jmp
mov
pusha
test
andb
test
clc
mov
andb
jo
addb
jecxz
sbb
xchg
push
clc
out
xchg
cmpsb
pusha
add
imul
hlt
fstpl
mov
dec
push
int3
and
adc
pop
addl
hlt
cmp
test
sub
add
cwtl
jnp
aad
lods
and
scas
shlb
and
xchg
call
add
mov
movsl
jle
loopne
add
jg
inc
inc
mov
adc
inc
inc
ret
inc
mov
and
inc
orl
loope
and
jg
cmp
mov
sbb
icebp
ja
std
inc
and
or
loopne
inc
add
add
shlb
in
adc
mov
loopne
shll
loopne
push
loopne
pop
push
andb
xor
dec
cmp
xor
xorl
jno
add
inc
add
mov
sahf
xlat
into
push
call
jmp
mov
jmp
dec
push
lahf
sbb
add
loopne
ljmp
pusha
pop
dec
add
mov
cmp
xor
loopne
jb
scas
mov
mov
pop
add
add
sahf
lcall
push
sahf
push
ret
xchg
adc
movsb
mov
mov
lcall
jnp
mov
rolb
ret
push
and
sarl
jl
movsl
or
jae
mov
push
ljmp
or
or
pop
push
pop
mov
addb
push
dec
xorl
mov
inc
rcrb
pusha
xchg
test
loopne
andb
xorl
out
cmp
and
data16
mov
sub
addb
add
fdivrp
addb
xchg
aaa
pop
cmp
push
sub
jg
rol
xor
mov
push
mov
sub
mov
inc
bound
movsl
jmp
xor
loopne
daa
fidivs
mov
rorb
mov
and
lods
jp
stos
addb
ss
testl
mov
orb
mov
jb
xor
jg
rclb
add
dec
inc
sbb
mov
mov
nop
mov
std
fs
add
pop
mov
hlt
jp
pop
pop
sarl
and
test
push
pop
and
sub
pusha
and
and
inc
inc
test
loopne
cmpl
popa
or
pop
insb
pop
call
pusha
in
or
mov
ljmp
pushf
pop
push
das
cmp
test
rorb
inc
add
jno
je
icebp
xchg
insb
test
pop
jg
subl
inc
sub
and
cltd
mov
test
movsb
add
pop
xor
inc
push
or
mov
inc
mov
out
daa
inc
and
fmul
jno
push
inc
and
sbb
std
call
push
jl
insl
loop
repz
loopne
add
inc
mov
and
add
mov
sarb
pop
jne
and
mov
cmp
data16
cmpsl
cmp
ljmp
sub
and
hlt
imul
add
dec
insb
mov
pop
jne
lds
jecxz
and
stos
pusha
and
jg
mov
rolb
negb
or
loopne
fcoml
cmp
pop
les
rcrb
mov
mov
cmp
xor
or
jmp
adc
mov
decl
in
xchg
xlat
int3
dec
stc
mov
jg
pop
lods
lds
push
sahf
jne
sahf
repnz
scas
mov
scas
cs
rcrb
mov
and
adc
in
sbb
xor
icebp
push
pusha
sahf
test
ret
rolb
mov
sbb
rolb
mov
loopne
icebp
iret
push
aam
rolb
and
pusha
stc
or
pusha
scas
and
dec
push
or
shlb
mulb
inc
enter
add
adc
loopne
popf
enter
addr16
scas
push
cmp
add
pop
xchg
xor
lea
jne
andl
insl
int
mov
pop
ljmp
pusha
inc
sub
aam
mov
das
out
out
pop
and
or
mov
and
movsl
mov
sub
loopne
incl
dec
adc
pop
push
test
shl
sbb
cmp
call
bnd
ret
and
inc
adcb
movsb
and
test
mov
and
and
mov
ja
sti
test
sbb
or
inc
outsb
jno
mov
add
add
adcb
inc
inc
dec
or
pusha
xor
add
add
aam
loopne
push
inc
sub
add
mov
pop
into
and
and
arpl
loop
xchg
andb
mov
mov
test
pusha
je
xchg
int
xor
loopne
pop
test
adcb
inc
enter
and
int3
call
shlb
xchg
test
loopne
test
inc
aas
cmc
fldenv
adc
out
mov
mov
rol
loop
fdivrl
outsb
dec
movsb
inc
mov
add
mov
inc
and
mov
ret
rolb
push
add
imull
mov
pusha
arpl
mov
mov
scas
push
mov
pusha
loopne
jg
ss
mov
jmp
orl
rclb
jo
inc
and
pop
xchg
push
inc
sub
adc
or
and
mov
cmp
jae
and
in
cmp
add
jg
aas
xchg
pop
js
movsb
shlb
add
pop
popa
sti
ss
movsb
loopne
jae
scas
or
pop
mov
jbe
push
outsb
in
xchg
data16
and
into
call
lret
xor
lea
dec
incl
fsubl
sub
orb
imul
and
xchg
xchg
push
jb
mov
mov
shlb
pop
cltd
jnp
cwtl
fwait
sbb
mov
shlb
adc
pop
xchg
ret
fisubl
shlb
into
jb
jbe
cmc
jo
inc
mov
jns
es
add
shr
sub
std
xor
sub
jnp
dec
ds
jecxz
repz
daa
jo
cmpsl
push
xor
test
add
push
mov
in
in
and
lret
mov
loopne
cltd
testl
scas
addb
lahf
push
out
push
iret
cltd
sbb
repnz
insl
pop
xorl
outsb
mov
pusha
xor
add
scas
cs
pusha
inc
out
out
pop
add
fdivrl
xchg
push
shrb
shl
dec
ret
insb
xlat
gs
stos
test
shlb
mov
inc
popa
out
mov
xor
movsb
inc
mov
push
fists
lea
or
ljmp
add
adc
std
into
dec
dec
or
sub
addb
xor
cwtl
ret
mov
sbb
mov
addb
imul
loopne
dec
xchg
mov
mov
pop
sqrtps
stc
mov
leave
std
andb
push
nop
push
ja
xchg
inc
and
jb
rolb
mov
mov
xchg
sbb
mov
add
push
inc
pop
fs
xor
and
jnp
push
pusha
add
loopne
mov
xchg
push
add
push
mov
mov
adc
pop
push
mov
dec
jno
sti
push
push
call
rorb
addr16
or
sub
xlat
inc
adc
and
addb
fimuls
shlb
shlb
push
fwait
arpl
fs
xor
mov
push
push
pusha
cmpb
xor
adc
sbb
xlat
addb
cli
jg
inc
pusha
repnz
fistpll
hlt
out
sbb
subb
jp
enter
mov
lahf
add
sarb
or
sub
aas
and
les
add
arpl
shl
aam
andl
arpl
inc
and
adc
push
mov
hlt
fimuls
das
stos
andb
pusha
inc
sub
xor
addb
rol
xchg
jp
inc
inc
addb
into
push
lahf
mov
pusha
or
add
repz
aad
loope
sbb
xor
bound
sbb
adc
addb
repnz
xchg
daa
pop
xor
xor
fmuls
and
data16
adc
mov
test
dec
mov
inc
jo
fists
sub
shlb
sarb
loopne
fdivrl
mov
loopne
out
add
mov
jno
push
mov
popa
fmuls
orb
jnp
push
xor
or
mov
inc
sarb
mov
addr16
loopne
repz
sahf
sar
push
fiaddl
and
mov
xchg
call
mov
adc
push
cli
xlat
xchg
or
addb
mov
and
cmp
sbb
mov
xchg
mov
mov
inc
cmpsl
adc
adc
sub
shrb
rorl
push
addb
or
sti
sbb
and
push
sbb
inc
mov
pusha
and
and
ret
fdivs
mov
add
dec
sti
xlat
pop
jns
pusha
add
rolb
xchg
fisubrs
ljmp
mov
xchg
push
mov
xchg
inc
xchg
add
shlb
jo
xlat
scas
add
aad
movsl
cmp
add
sbb
cmp
mov
jmp
cmpsl
out
inc
pop
fidivrs
aad
pop
out
ds
addb
xor
cmp
std
insl
loope
andb
jns
inc
enter
pop
out
das
mov
push
sahf
dec
mov
aaa
int
lahf
lds
arpl
inc
mov
sti
add
cmp
fucomip
test
in
and
addb
lods
andb
out
cmp
movsl
xchg
cld
adc
iret
aaa
stos
mov
pusha
pusha
rcrb
andb
lret
movsl
or
idivb
xor
xor
ret
pusha
mov
dec
or
subl
pusha
xchg
and
dec
scas
loopne
insb
ret
xchg
and
std
lods
mov
sbb
ja
neg
imul
mov
xor
and
lods
pusha
inc
stos
test
adcb
fcoms
pop
sarl
pop
jno
xor
lds
cltd
icebp
push
inc
int
mov
mov
adc
and
icebp
loope
ds
out
add
inc
xchg
jne
add
int3
sbb
xchg
xchg
hlt
push
jl
loopne
pop
adc
insl
es
sbb
dec
dec
or
loopne
cltd
lock
add
or
inc
leave
mov
mov
cld
or
addb
cmc
lock
jge
adc
mov
std
test
push
pusha
and
out
mov
xchg
jb
or
push
xchg
push
dec
add
jmp
movsb
loopne
xor
andb
and
call
outsb
or
mov
dec
add
mov
cmpsl
mov
out
and
orb
or
lret
and
sub
pusha
sbb
addb
mov
mov
inc
adc
ljmp
adc
add
cmc
cwtl
sub
dec
xchg
arpl
jmp
sub
bound
pushf
xor
cmp
loopne
mov
mov
ror
lods
inc
pusha
movsb
inc
or
and
inc
nop
push
lret
xor
movsb
and
or
inc
and
xchg
int3
fists
xor
mov
loopne
mov
mov
addr16
mov
out
cmpsb
and
jmp
and
xlat
inc
lahf
pop
inc
insb
jecxz
pusha
addb
packssdw
xchg
xchg
xchg
and
sbb
rorb
add
and
dec
and
pusha
sbb
sti
movb
inc
xor
sarl
jl
jmp
test
lods
mov
rcl
sbb
and
and
loopne
call
inc
shl
cwtl
or
movsl
push
bound
dec
xor
mov
test
andb
mov
addb
cmp
sub
das
rolb
mov
lods
mov
movsb
shlb
insb
nop
jge
shl
and
push
ss
mov
push
sub
sbb
gs
in
dec
adc
cmp
sbb
repz
mov
test
add
into
loope
andb
xchg
imul
pushf
outsb
xchg
add
in
lods
int3
mov
jecxz
cmp
shlb
and
pop
repz
lret
mov
jecxz
out
lods
das
fbstp
test
sbbl
inc
jo
sub
push
cmp
jae
clc
add
mov
arpl
or
adc
jae
fldcw
add
mov
mov
push
lcall
and
aad
int3
lods
inc
xor
das
push
mov
pusha
inc
xchg
pop
fwait
pop
inc
pop
lds
int
dec
adc
sar
filds
mov
testb
loopne
aas
scas
aad
fcmovnb
push
mov
int3
hlt
imul
in
outsb
dec
aas
enter
jg
mov
jl
mov
or
shlb
mov
jle
leave
in
lods
addb
cmp
adc
ret
cmp
in
cmp
repnz
shlb
sbb
shlb
inc
cmp
andb
inc
inc
ret
push
mov
xchg
cmp
loope
xor
fadd
and
mov
pusha
push
sbb
cmpb
adc
popf
sub
pusha
sub
in
icebp
pop
arpl
add
fcmovnbe
push
inc
addb
xchg
jae
enter
mov
jge
ja
cmp
or
push
mov
or
add
add
loopne
js
iret
sub
fs
push
sub
mov
pusha
pusha
clc
aaa
int
jmp
cli
std
decb
rclb
sbb
or
loopne
mov
jmp
pop
mov
pop
nop
or
add
lea
push
push
lcall
pop
dec
js
ss
push
mov
or
mov
js
icebp
or
shlb
aaa
sbb
adc
cld
mov
loopne
adc
popa
jmp
test
rcrb
mov
pusha
mov
inc
leave
dec
gs
mov
call
in
in
je
push
sub
and
add
or
sarb
cmp
ret
inc
loopne
sub
pop
movsb
and
sub
pop
push
cmpsl
sub
subb
int
jg
orl
pop
insb
or
mov
mov
jmp
jp
add
mov
divb
scas
loopne
and
mov
pop
inc
arpl
sbb
out
cld
inc
cwtl
pop
out
lret
dec
out
inc
test
shrb
mov
andb
inc
imulb
sub
shlb
popf
cmc
lahf
test
mov
cmpsb
loopne
adc
sbb
rolb
lcall
loopne
jns
insl
add
pusha
popa
or
mov
pop
mov
xchg
sbb
stos
rolb
xor
add
pusha
dec
jecxz
subl
inc
pusha
dec
xor
jae
xchg
rclb
and
fcoms
jne
lahf
pop
dec
sub
int3
xlat
sbb
aaa
and
mov
test
inc
add
mov
in
xchg
push
fidivl
sub
test
cltd
fidivs
movsl
push
in
lea
mov
push
jo
fimull
in
dec
addb
mov
popa
xor
dec
mov
mov
xchg
stos
pusha
inc
fdiv
mov
lret
mov
rcrl
andb
mov
push
sub
and
incl
shlb
and
mov
leave
into
mov
mov
loopne
mov
and
jns
shll
mov
neg
push
les
rolb
ret
push
jge
pop
mov
dec
push
xlat
scas
mov
jb
jne
dec
mov
call
and
inc
xchg
test
sub
lods
gs
jnp
mov
sti
mov
pop
std
mov
and
adc
cmp
adc
xor
pop
adcl
mov
xchg
and
xor
lods
xchg
sahf
xchg
jo
fildll
in
jo
ja
aam
pop
xor
inc
and
lea
ret
cmp
xchg
mov
dec
std
xchg
push
aam
dec
mov
icebp
pop
push
pusha
inc
and
xchg
out
shlb
mov
jnp
mov
loop
jl
cmpl
or
xlat
adc
pop
xor
icebp
jne
outsl
into
call
gs
pusha
js
or
jp
xor
and
xor
push
jg
es
and
push
jns
sbb
ljmp
cmp
daa
out
cmp
mov
or
add
pop
add
pusha
js
inc
sub
fimuls
mov
stc
sbb
les
and
rclb
pop
lret
mov
aaa
adc
cmp
mov
add
shlb
jbe
lea
push
bound
ret
push
xchg
adc
mov
jbe
cmpsl
lahf
pop
xchg
loopne
test
push
jge
push
fildll
rcr
popl
dec
pusha
mov
push
shll
in
pusha
and
stc
mov
adcb
jle
push
pusha
push
inc
loopne
lock
mov
xor
pop
rorl
rolb
xchg
xchg
imul
orl
sbb
pushf
push
mov
and
test
mov
cs
shrb
mov
mov
pop
cmpsl
add
push
sbb
push
lahf
push
sbb
inc
and
testl
adc
xor
hlt
lea
mov
jmp
cmp
mul
or
inc
sbb
and
add
mov
add
addr16
popf
pop
and
adcl
shlb
xor
in
dec
mov
jno
shlb
mov
subb
push
mov
jp
repz
fidivrs
test
pusha
adc
and
int3
jmp
aas
mov
addb
movsl
jge
and
test
add
mov
mov
andb
and
shlb
cld
mov
test
scas
mov
pusha
xlat
insb
lret
and
mov
loopne
pop
dec
mov
lcall
and
add
dec
ret
es
sbb
mov
fldl
lahf
cmp
mov
push
pop
push
out
adc
pusha
inc
jg
pusha
loopne
lret
sub
jno
addb
repnz
cmpb
jl
std
xchg
cli
or
stc
mov
mov
inc
leave
jae
pop
in
mov
arpl
orb
inc
mov
sub
inc
and
orb
mov
int
loop
fyl2xp1
mov
mov
fisttpl
inc
clc
inc
insb
and
mov
loopne
mov
shl
lcall
pop
pop
jnp
xchg
sub
sub
mov
add
jbe
cmp
rcrb
cmp
add
pop
xor
sub
stos
mov
pop
and
scas
pusha
and
popa
pusha
inc
mov
jno
test
adc
outsl
stc
ret
sahf
decl
loopne
shrb
mov
sti
jne
fucomi
imull
xchg
adc
or
mov
adc
mov
fisubl
mov
loopne
xor
push
mov
and
or
add
or
aas
inc
out
shlb
or
cmpb
mov
inc
jmp
push
roll
je
mov
data16
mov
and
lahf
hlt
leave
pop
les
mov
loope
lcall
pop
pause
xchg
adc
cmp
push
sbb
sti
mov
sub
rcrl
mov
fbld
mov
shlb
aad
or
daa
xor
pop
and
mov
add
mov
mov
add
or
daa
jae
andb
lret
fisubrl
fsubrl
lret
xchg
jl
jo
jns
mov
pop
mov
lahf
sub
xor
arpl
std
loope
insl
rcrl
sbb
mov
movsl
xchg
call
rolb
inc
outsb
cmpsb
add
aad
push
inc
pusha
stos
sti
lret
nop
adcl
jmp
insb
mov
jae
mov
psrld
insl
test
loopne
es
jns
adc
pop
jge
ds
stos
mov
mov
mov
loopne
xchg
fdiv
jae
pusha
add
jmp
jnp
shlb
add
addb
cmp
test
pusha
jns
loopne
dec
sub
repnz
inc
stc
add
rolb
mov
fcomip
nop
and
scas
loopne
lret
pushf
icebp
xchg
shlb
int3
and
mov
or
mov
loopne
cmpsb
loopne
out
addb
sub
xlat
icebp
and
jb
mov
imul
cmp
cltd
imul
jecxz
push
mov
inc
mov
mov
inc
xor
lret
int
aas
in
sahf
xor
jecxz
mov
lahf
shl
aam
sbb
inc
ja
inc
pusha
adc
add
js
aaa
cld
sbb
aad
mov
loop
and
loopne
xchg
bound
and
mov
pusha
rorb
ss
or
fcomps
out
xchg
mov
dec
mov
sbb
inc
dec
pop
sbb
mov
mov
ds
cmp
mov
sub
cmpb
adc
sub
loopne
push
mov
sarb
or
loopne
mov
mov
sub
jle
mov
jnp
add
lret
sbb
in
jp
ret
addb
movsb
pusha
and
aam
out
addr16
mov
rep
shlb
dec
cmp
loope
orl
sub
xchg
and
pop
das
icebp
or
shlb
repnz
push
loopne
mov
scas
sub
add
add
pop
cmp
add
cmc
jnp
mov
mov
mov
jne
loope
out
js
push
rep
mov
cmp
mov
push
inc
add
fdivs
nop
in
pop
pop
dec
mov
pop
inc
jne
pop
pop
jp
pop
adc
loopne
rolb
adc
push
addr16
inc
and
mov
and
out
das
imul
rcrl
out
inc
lret
pushf
movsb
mov
addb
sar
cmpsl
jmp
pop
in
ljmp
jb
adc
mov
push
add
loopne
je
jae
fcomps
out
push
lcall
cwtl
xchg
lods
test
add
and
icebp
sbb
and
shlb
loopne
jecxz
aas
dec
lret
shlb
fists
repnz
inc
aaa
or
pusha
push
add
xchg
je
mov
and
xchg
sub
loopne
jo
inc
jmp
dec
pop
adc
mov
jns
out
ljmp
aas
and
loopne
sub
incb
cmp
jmp
pop
cmp
imul
bound
inc
andps
sub
sar
add
cmpsb
and
insl
loope
push
pop
outsl
andb
mov
and
cmp
mov
loopne
cli
and
and
imul
cmp
adc
jo
dec
lahf
mov
addb
mov
pop
icebp
stos
loopne
mov
mov
inc
inc
stos
and
inc
shlb
js
rol
js
mov
loope
scas
addb
mov
cwtl
test
xchg
pop
sub
mov
int
and
rclb
jge
xor
mov
add
mov
pusha
xchg
mov
lods
xor
push
lods
rolb
lret
mov
push
mov
mov
shl
add
pusha
inc
leave
mov
mov
pop
notl
push
xchg
nop
pop
addb
decb
rolb
dec
out
test
icebp
cmp
enter
andb
lret
mov
loopne
pop
cmpsb
inc
andb
ret
jno
mov
shrb
and
xchg
pop
jecxz
inc
mov
iret
scas
inc
pusha
adc
jecxz
insb
pop
dec
scas
andb
inc
movsl
push
shl
imul
and
add
ljmp
stos
xor
mov
out
loopne
inc
xorb
cltd
int
push
sub
and
loopne
shlb
push
cmp
seto
subb
lock
mov
jae
mov
int3
jmp
stc
into
insl
out
call
loopne
addl
cwtl
ret
in
mov
addb
imul
cmpsl
xchg
sbb
mov
mov
and
jg
sub
and
ffreep
cwtl
dec
lahf
sub
test
fisubs
inc
mov
js
clc
fwait
adc
mov
pop
je
mov
adc
cmp
ja
and
andb
pop
daa
into
ljmp
outsl
or
shl
push
push
cmp
lret
mov
add
adc
popf
sub
fisubs
and
jo
inc
ret
and
mov
maxps
inc
mov
outsb
dec
dec
push
pusha
mov
pusha
inc
ljmp
pusha
leave
imul
stos
lods
loopne
sbb
push
sub
adc
fmul
stos
sub
add
sti
testb
jnp
lret
rorl
mov
xorb
add
lods
shlb
popa
sub
inc
andb
imul
ljmp
int3
movsb
addb
and
inc
push
mov
pusha
dec
and
push
xchg
pop
mov
call
pusha
or
pusha
ss
dec
cmp
mov
fs
cmp
or
test
and
xchg
rolb
xor
bound
insl
scas
inc
jnp
inc
and
test
rolb
and
jno
in
call
mov
or
pusha
pop
lock
adc
dec
jge
inc
out
aas
jecxz
pusha
mov
sub
pop
shlb
shrb
dec
and
sub
inc
aas
rcrb
mov
and
popa
scas
inc
and
loopne
cs
mov
nop
xchg
push
ja
mov
xchg
cmpsl
mov
nop
sub
inc
push
addb
lahf
sbb
mov
or
jbe
imul
les
cmp
sbb
rolb
and
mov
sarb
ss
add
iret
sub
mov
pusha
mov
sbb
mov
mov
shl
rolb
sbb
rcl
test
lds
xor
mov
push
fidivl
inc
adc
mov
mov
dec
in
cmp
jle
and
and
hlt
jg
pop
cmpsb
pusha
pusha
add
adcl
inc
pop
ja
jmp
mov
dec
xor
shlb
movsl
fadd
xor
ud1
gs
sbb
aaa
in
enter
adc
mov
or
dec
fcmovnb
push
andb
bound
add
dec
mov
mov
jecxz
pop
popf
les
mull
xor
aam
mov
sbb
ds
sbb
movsb
inc
pusha
cmp
sbb
cli
andb
xor
insl
ss
aam
xor
je
insl
addr16
enter
fnclex
and
fidivl
mov
xchg
sub
and
scas
pusha
mov
fisttpl
mov
leave
mov
mov
and
mov
mov
or
push
add
lcall
xchg
sbb
inc
and
and
enter
mov
outsl
cmp
out
fs
and
imul
pusha
add
lods
loopne
add
and
loopne
gs
sub
sbb
cmp
test
xchg
xchg
pop
mov
repnz
loope
inc
aaa
dec
inc
loope
outsl
mov
push
imul
or
sbb
mov
jbe
decl
test
jmp
sbb
imul
push
sahf
inc
aas
mov
and
mov
int3
lret
in
sub
pop
sbb
movsl
shlb
popf
mov
pop
and
loopne
std
cmpsl
mov
jnp
add
aam
lret
pop
dec
stos
pusha
and
shll
test
andb
sub
stos
andb
cmp
mov
andb
sub
adc
arpl
add
pusha
test
jae
mov
add
push
test
out
and
movsl
sti
sub
xor
add
mov
loopne
fdivrl
inc
cmpsl
xor
sub
jo
popf
mov
lock
inc
cmc
inc
jb
aas
into
loopne
lds
repz
dec
call
pop
test
mov
add
addb
xor
sbb
mov
mov
add
fwait
or
int
repnz
pusha
add
in
repz
mov
mov
fistps
andb
mov
lods
sub
mov
sbb
mov
pusha
subb
or
lea
add
inc
mov
movsl
cmpsb
mov
rolb
decl
aad
jae
shl
fs
pop
std
push
or
out
imul
roll
scas
addb
inc
xor
scas
divb
xor
test
sbb
dec
and
shlb
repnz
jno
cmp
insb
rclb
pusha
or
fisttpl
test
rolb
and
insl
sahf
mov
clc
ja
sub
shr
mov
inc
jle
pmulhw
test
inc
xchg
stos
and
imul
ss
scas
pusha
inc
pmuludq
pop
out
movsb
add
loopne
test
and
testl
loopne
add
loopne
adc
adc
inc
ljmp
sub
and
fstpt
cmp
pusha
adc
je
mov
cmp
sarb
add
fcomip
add
loop
xorl
addb
and
test
fadd
hlt
jno
sarl
mov
mov
cmc
jne
adc
pop
negb
xor
mov
jmp
or
test
inc
cltd
mov
loopne
pushf
andl
call
mov
loope
and
pusha
mov
or
out
inc
arpl
inc
inc
js
inc
and
xlat
test
mov
sbb
aad
mov
mov
push
push
mov
pusha
inc
ljmp
leave
cmp
rolb
mov
addr16
xor
add
or
addb
xchg
andb
inc
gs
mov
testb
outsl
push
fxch
xchg
xchg
mov
add
xchg
test
dec
stos
rolb
pusha
pusha
adc
pop
or
pusha
mov
fsubr
insb
jmp
add
test
test
aaa
inc
mov
add
sub
loopne
cwtl
lods
shl
aaa
pop
cmpl
dec
mov
loopne
and
inc
sub
loop
test
pusha
aam
filds
cli
adc
mov
xor
decl
int
xchg
in
rcll
mov
inc
fistps
mov
jp
fsubs
js
pop
push
and
rclb
in
nop
test
das
mov
inc
loopne
nop
adc
add
ret
xor
insb
xchg
lods
dec
fstl
jae
sti
daa
andl
lock
js
jl
mov
add
clc
sahf
xlat
cmpsb
loopne
stos
in
mov
cmp
or
andb
mov
ret
add
adc
inc
pusha
dec
cmp
test
mov
rclb
loopne
aad
cmp
or
loopne,pn
jae
mov
add
cmp
lods
and
push
scas
je
out
cmp
mov
xchg
xchg
ret
and
pusha
push
ds
das
aaa
mov
sbb
mov
or
scas
lret
andb
insb
and
add
int3
cwtl
popa
jb
out
addb
ja
mov
xchg
mov
add
mov
add
repz
aad
in
sar
stos
mov
and
xchg
xor
into
jnp
mov
pusha
add
inc
es
and
inc
mov
sahf
mov
pop
push
loopne
and
repnz
mov
adc
xor
push
add
sbb
insb
popa
dec
cli
mov
out
add
out
fs
inc
shlb
stc
xchg
stos
loopne
js
mov
add
test
loopne
mov
and
rcll
imul
imul
or
mov
popf
pop
mov
mov
std
inc
and
out
psrld
and
loopne
ret
and
cmp
gs
sub
pop
mov
sub
loopne
scas
stos
dec
push
movsb
addb
or
mov
mov
xlat
rol
shrb
inc
mov
lahf
test
add
or
data16
cli
adc
jbe
ret
aaa
mov
loopne
inc
mov
pop
xchg
dec
push
and
lea
ljmp
inc
cmpsl
mov
and
push
jns
data16
xchg
orl
shlb
xchg
lds
and
inc
jns
fnstsw
test
addb
pop
in
dec
push
addb
mov
ja
push
out
sbb
clc
push
jae
dec
outsb
lahf
scas
call
daa
dec
imul
or
or
add
gs
loope
out
push
mov
lahf
in
loopne
lcall
repnz
sub
add
roll
sbbb
loopne
mov
add
aaa
arpl
add
out
jl
loopne
adc
lea
rcrl
inc
add
mov
loopne
inc
ret
xor
xor
mov
gs
rolb
mov
movsl
lcall
cmp
pop
cmc
gs
add
loopne
mov
cmpsl
cwtl
add
mov
or
clc
adc
pop
iret
rolb
mov
rclb
push
lock
loopne
xchg
dec
fwait
inc
jo
das
mov
cld
movsb
and
push
jp
pusha
shr
jo
xchg
lods
add
sub
cmc
movsb
mov
mov
outsb
pop
popa
pop
insl
mov
and
and
pop
mov
adcl
lahf
or
and
pop
push
inc
cmpsl
pop
mov
add
mov
andb
mov
lcall
push
out
insl
shlb
cmp
rclb
mov
jp
shl
mov
fsubs
andb
gs
loopne
add
loopne
shrl
ret
push
cmp
fs
call
ficoml
sahf
jae
ret
addr16
xchg
iret
and
mov
sub
stos
mov
mov
adc
std
pop
push
mov
mov
or
add
fwait
jo
xchg
fimuls
loop
inc
addb
mov
mov
js
jecxz
jmp
sbb
out
mov
pop
xchg
pop
call
pusha
sarb
xor
push
adc
add
jp
or
inc
loopne
test
add
loopne
adc
into
fimull
sub
pop
mov
iret
pop
mov
loopne
jge
sbb
jnp
out
cmp
mov
mov
ds
and
jl
mov
scas
lock
lods
popa
xchg
mov
imul
iret
pop
jbe
cli
add
pop
jo
lcall
cltd
clc
movsb
mov
and
aaa
les
sub
mull
mov
xchg
add
mov
add
and
cmpb
ss
in
fst
les
jmp
inc
sbbb
in
mov
pop
sarl
xor
and
and
inc
out
iret
les
jno
mov
sbb
lds
sbb
pop
subl
mov
mov
fstl
mov
pop
out
aas
add
incb
push
and
and
inc
imul
ja
mov
test
xchg
xchg
push
or
hlt
stos
and
imull
inc
cmp
imul
int
pusha
mov
and
add
loopne
sub
and
lods
push
sbb
push
and
frstor
push
outsl
and
lods
andb
pop
stos
addb
pusha
add
jge
addr16
lods
mov
and
es
mov
mov
loopne
xor
popa
das
shll
pop
add
pusha
xor
and
jnp
fsub
xchg
xor
jb
shlb
jmp
mov
jmp
dec
and
addr16
pop
push
dec
bound
add
mov
pusha
inc
adc
push
add
rcll
lahf
cmpsl
mov
mov
mov
out
shr
imul
pop
xor
pop
mov
pusha
and
je
out
mov
sub
loopne
imul
lret
repnz
dec
imull
inc
jl
mov
jae
andb
adc
data16
cltd
xchg
btrl
and
lock
loopne
jo
sub
loopne
ljmp
mov
loopne
or
add
xchg
xor
inc
pusha
mov
inc
pshufw
in
or
mov
xchg
and
pop
lahf
cs
pusha
repnz
addr16
iret
sbb
xchg
dec
ret
mov
mov
sbb
sbb
cmp
and
mov
mov
xlat
insl
adc
rolb
insl
sbb
sbb
shll
add
aaa
ds
mov
stc
pusha
je
push
addb
popa
in
dec
insl
frstor
rcll
jl
cwtl
jl
aam
clc
push
mov
shlb
and
adc
pop
ja
xor
dec
icebp
incl
out
mov
jmp
daa
popf
les
lret
xchg
push
cmc
push
sbb
push
mov
and
jne
sbb
sarl
mov
xor
dec
adc
and
mov
ret
sahf
and
pusha
test
jecxz
insl
inc
repz
add
int3
add
mov
mov
es
loope
rclb
daa
push
inc
shlb
cld
in
outsl
jo
mov
cmpsl
or
lods
inc
mov
dec
mov
insb
test
loopne
dec
ss
jp
add
cmp
insb
push
and
mov
gs
into
add
int3
pop
rorb
add
mov
add
outsl
cld
xlat
fistpl
lret
stos
dec
or
loopne
andb
jle
ds
sarl
arpl
push
imul
mov
outsl
out
fwait
clc
jmp
adc
mov
and
in
scas
loopne
pop
jnp
lds
popf
pop
fdivrs
cmc
jge
or
inc
addb
mov
adc
inc
pusha
push
rcrb
push
xchg
adc
mov
and
popf
popa
push
scas
jbe
mov
andb
repnz
and
xchg
adc
pushf
mov
xchg
mov
xchg
xlat
adc
cmp
add
shrb
test
lods
inc
loopne
iret
dec
fnsave
mov
dec
cmpl
jmp
int3
mulb
inc
and
jecxz
ljmp
mov
shlb
mov
dec
jb
scas
mov
int3
fildl
and
loope
out
fnstenv
addb
add
and
inc
inc
mov
ret
popa
and
pusha
sbb
pop
jmp
dec
iret
fnstenv
pop
mov
aas
mov
adc
mov
imul
ja
cmp
cmp
dec
lds
add
push
lods
aam
xlat
ds
push
sub
pop
loope
stos
fiaddl
sbb
mov
sti
pop
test
data16
mov
testb
or
mov
iret
fs
cld
and
andb
dec
push
or
add
jecxz
inc
adc
loopne
scas
loopne
xchg
shlb
in
ljmp
les
out
cmpsl
sub
xchg
or
cld
sub
mov
jbe
push
shlb
push
and
xchg
ficoml
addb
or
shlb
int3
jno
inc
pop
push
pusha
rcrb
jp
inc
mov
push
testl
mov
sbb
aas
push
inc
cmpb
inc
test
inc
xchg
dec
stos
addb
push
xchg
into
pop
or
loopne
mov
xchg
movsb
rol
mov
loopne
dec
mov
fs
pop
out
and
andb
lret
adc
in
rcrb
fwait
sub
or
jl
and
jae
or
lds
sub
sub
clc
jp
cltd
xchg
jl
add
loope
and
mov
sti
mov
andb
aas
daa
insb
mov
mov
addb
cltd
or
lea
mov
mov
cmpl
jns
adc
repz
mov
shl
icebp
ret
mov
jno
push
cwtl
mov
sbb
int3
mov
jns
inc
orb
jecxz
fs
adc
mov
pusha
in
cmp
addb
lret
xor
sar
jecxz
pop
adc
mov
mov
or
inc
shrb
and
dec
and
mov
pop
test
inc
jne
push
inc
pusha
cmovb
test
add
xchg
fists
push
mov
and
mov
cmpl
mov
add
add
sub
pop
or
inc
mov
jle
sbb
pushf
xchg
dec
lock
sarl
jo
dec
jns
adc
xchg
dec
dec
ss
clc
in
out
daa
addb
rolb
lea
test
inc
cmc
rep
sbb
lahf
dec
pop
rcrb
jmp
and
mov
adc
xchg
jno
fnstcw
repz
push
jne
inc
mov
jne
leave
lahf
hlt
dec
and
imul
xchg
jmp
mov
push
adc
pusha
hlt
jg
cmp
pusha
loopne
jg
andb
and
xor
nop
imul
or
and
add
mov
ret
or
mov
rorl
xor
dec
jecxz
push
mov
lds
ficoms
xor
and
ljmp
mov
add
mov
loopne
int
out
xchg
pusha
push
cmp
es
and
lock
daa
in
sbb
add
jne
mov
xor
test
mov
jno
push
and
pushf
sub
inc
mov
int3
mov
and
pop
mov
loopne
inc
sub
mov
cmp
rolb
pop
test
sub
add
add
ds
xor
and
pusha
mov
and
mov
and
xlat
or
mov
xor
xor
cmpsb
and
and
std
inc
rolb
sub
orb
pusha
mov
and
data16
inc
repz
ror
lock
push
out
es
cmpsb
addb
mov
inc
xchg
insl
lock
fsubrl
mov
pushf
cld
or
and
movsl
fadds
gs
mov
xlat
sub
sbbb
and
les
sub
cmp
xor
jmp
and
loopne
push
cmp
mul
mov
push
mov
clc
insb
add
pusha
inc
stos
cs
loopne
jne
loopne
or
lea
aad
and
inc
fsubr
mov
loope
lret
add
fs
mov
popf
push
pusha
mov
test
pusha
in
cmp
and
jb
repnz
or
and
loop
push
les
pop
pop
push
addb
inc
mov
pop
out
daa
xlat
push
lods
stos
pusha
je
mov
rorl
fnstenv
loope
mov
pusha
xor
mov
jbe
and
xchg
xor
ja
mov
mov
sbb
arpl
es
pop
or
lods
pusha
loopne
add
push
sbb
jno
popf
or
mov
out
pop
and
inc
dec
jne
pop
lods
and
sti
subl
mov
or
loopne
test
add
and
dec
cmovns
rolb
mov
rcr
xchg
in
clc
rorl
fdivrl
lea
idivb
adc
aam
leave
xor
push
pusha
inc
ss
push
adcl
mov
pop
push
fldenv
add
add
aad
add
push
cmp
ja
hlt
dec
xor
pusha
cmp
mov
outsb
jo
ret
mov
adc
lret
xor
pusha
pusha
jle
dec
sbb
jnp
in
pop
andb
cli
jb
aad
lods
mov
shr
sub
in
and
add
inc
lods
mov
imul
pop
pop
call
loopne
jb
sub
and
mov
fiaddl
dec
sub
inc
dec
mov
jo
std
or
rolb
shlb
and
mov
lea
out
ja
pop
in
in
ficomps
fsubs
int
mov
add
imul
aas
push
loopne
in
call
sub
subb
inc
dec
jne
scas
adc
xchg
cmp
mov
mov
inc
sarl
shl
and
stc
or
xlat
ficomps
shlb
sbb
sbb
clc
cmp
insl
sti
lods
ljmp
xor
adc
call
jle
and
and
jle
inc
popa
inc
xlat
push
popf
mov
pusha
mov
cmpsl
clc
jmp
and
xlat
fldcw
shrb
pusha
pop
js
loopne
js
xchg
leave
inc
mov
mov
mov
fwait
cmp
rclb
inc
fsubrl
popf
testl
mov
mov
insl
push
mov
loopne
insl
clc
xchg
cld
fisttpll
add
pop
rcr
imul
lret
lock
fwait
add
push
xchg
pop
sbb
add
xor
pop
lods
loopne
iret
inc
xchg
test
and
inc
inc
in
push
xchg
gs
add
sbb
je
in
out
test
leave
fdivrs
andb
and
adc
lcall
adc
in
xchg
adc
lret
aaa
mov
test
loopne
mov
fcoml
add
pusha
pusha
xchg
jb
xlat
or
dec
pop
or
loopne
data16
inc
popa
shrl
test
mov
mov
mov
pop
or
loopne
in
lret
cmc
idivl
ss
pusha
xorb
shrb
les
outsl
mov
movl
pusha
mov
daa
mov
sahf
xchg
push
lea
push
and
sar
pusha
inc
not
dec
xchg
imul
pop
jg
pusha
ror
call
dec
lret
cmp
scas
loopne
lcall
shlb
add
inc
addr16
mov
mov
loop
and
push
popa
sbb
add
jns
out
cwtl
popa
lcall
adc
mov
stc
xlat
fwait
sub
sub
rclb
mov
loopne
add
loopne
cmp
cltd
cmp
inc
cmc
repnz
loopne
add
clc
push
fwait
nop
fsubrl
addr16
fldcw
sbb
or
adc
cwtl
imul
testb
sbbl
orb
insb
addb
add
mov
pop
scas
rolb
mov
push
aam
xchg
shrb
stc
dec
jne
outsl
dec
inc
dec
and
test
fsubl
mov
or
int
pusha
add
mov
stc
sbb
xchg
loopne
sub
inc
int
or
mov
scas
xor
dec
hlt
jbe
dec
fdivrl
loopne
mov
inc
push
pop
adc
in
lret
or
sbb
cltd
les
je
out
nop
mov
inc
mov
mov
in
mov
pop
test
or
in
push
rolb
inc
int3
mov
pusha
inc
xor
aad
lcall
mov
pusha
in
std
cmpsl
dec
into
push
loopne
rolb
cmp
andb
or
and
mov
push
sahf
mov
out
roll
movsb
and
imul
mov
dec
inc
pop
les
or
shl
addb
and
inc
pusha
pop
jo
mov
jnp
push
adcl
filds
ror
pop
dec
inc
mov
or
nop
lcall
push
xchg
xor
mov
mov
fucomp
loope
sbb
lock
pusha
pusha
enter
jno
addb
sahf
adc
or
icebp
cmpsb
and
nop
dec
and
pusha
shl
rorb
in
push
jbe
and
inc
dec
inc
cmp
aaa
sti
add
out
inc
in
sub
and
lcall
add
inc
adc
jmp
pusha
push
or
jbe
mov
xor
arpl
sbb
and
add
stos
inc
subb
mov
addr16
and
jnp
ja
imul
pusha
add
lods
jns
and
and
cmc
mov
popa
sbb
add
loopne
xchg
inc
lcall
fisubrl
loopne
jne
add
mov
add
ja
shll
loopne
dec
add
rorb
imul
dec
cwtl
push
in
push
loop
add
sub
inc
jg
xchg
sub
cmpsb
and
mov
cs
test
add
loopne
shr
shl
inc
add
bound
cmp
sbb
mov
xorb
mov
and
dec
pop
sbb
xchg
xchg
sbb
add
test
inc
sub
and
shrl
mov
inc
pushf
insl
lcall
ljmp
dec
std
mov
ror
iretw
cmp
int
out
out
scas
iret
test
mov
adc
popa
clc
pop
adc
xor
xor
mov
hlt
pop
out
shrl
in
fisttpll
and
subl
mov
aas
insl
cltd
sbb
xor
loopne
pop
cmp
data16
and
jnp
push
fsubrl
fisttpll
add
loopne
pop
push
addr16
aas
add
shl
addl
pop
cmp
jns
mov
test
cmpb
aad
shll
add
fdivs
fistps
andb
lahf
xor
xchg
movsb
shl
fdivs
insb
nop
mov
jno
cmpsl
test
aaa
or
stos
jg
pusha
loopne
and
lds
mov
loope
shlb
nop
call
inc
and
mov
xor
dec
fldenv
cmp
outsb
inc
shl
mov
dec
adc
rolb
enter
mov
arpl
jle
or
push
adc
ret
cld
and
inc
add
push
mov
repnz
xchg
add
mov
push
pop
sti
adc
cld
mov
loopne
xchg
pop
fmull
sub
andb
shl
mov
hlt
or
pusha
fcompl
pop
mov
push
shlb
mov
mov
mov
inc
add
push
rclb
xor
mov
xchg
pop
fstpl
sub
xchg
pop
lods
xchg
and
andb
pop
jl
pop
or
clc
outsb
inc
dec
cmp
pop
mov
andb
mov
jae
pop
iret
lahf
and
inc
in
sbb
dec
iret
pop
addl
negb
addb
xor
movsl
ret
insb
dec
sahf
dec
pop
mov
and
mov
andb
mov
push
les
adc
pushf
xor
pop
cmp
mov
shll
stc
movsl
cld
rorb
inc
test
inc
scas
pusha
ror
iret
and
aad
mov
addb
sub
loopne
pusha
inc
das
fimuls
in
aad
push
inc
xor
jno
pop
mov
sbb
daa
dec
add
mov
and
dec
push
cmp
loopne
lods
pusha
shrb
rolb
ss
pop
rolb
fdivl
cmp
js
imul
dec
pop
jg
jmp
insl
leave
jbe
inc
shrb
mov
loopne
insl
and
mov
frstor
mov
inc
negb
inc
cmp
mov
gs
sub
inc
dec
push
and
inc
mov
out
jno
ja
mov
or
inc
ds
loopne
aad
cltd
sbb
jb
arpl
pop
jp
movl
insb
test
rcr
mov
lahf
jbe
int3
not
addr16
mov
sub
and
xor
lahf
sbb
cmp
mov
fld
xlat
ret
shlb
sti
inc
rol
out
and
pusha
hlt
fnstcw
loopne
xor
shl
arpl
fldt
mov
and
hlt
lods
shlb
mov
jmp
addr16
xchg
int3
shrl
xlat
lret
sbbb
add
loopne
daa
xchg
data16
and
loopne
in
sub
sub
loopne
aam
inc
shlb
out
out
jl
mov
sub
out
jge
nop
pusha
jmp
pop
sbb
insb
fwait
mov
sbb
jns
out
fildl
add
sbb
push
in
mov
or
shll
add
call
das
jecxz
jmp
icebp
mov
add
push
iret
js
mov
cmpl
sbb
daa
nop
xorl
dec
push
add
shrb
cmpb
inc
inc
icebp
jecxz
and
inc
mov
push
and
movsl
mov
mov
xchg
or
popa
lahf
push
cwtl
xchg
fdiv
shr
sub
inc
jb,pt
xchg
movsb
and
addb
std
xchg
cltd
std
int3
sti
push
nop
cmp
xchg
nop
andl
inc
insl
popf
or
rorb
dec
out
test
mov
scas
xor
mov
cltd
lods
inc
pusha
push
or
mov
aas
pop
add
cld
sbb
or
mov
int
dec
push
sarb
cmp
fwait
xor
push
loopne
test
subb
pop
iret
sub
mov
shlb
out
aad
cld
xor
cmp
movsl
mul
add
and
cmp
sbb
addb
mov
mov
inc
sub
loopne
pop
and
dec
pop
dec
shlb
mov
imul
add
pusha
jecxz
outsl
or
add
hlt
rcrb
inc
push
decb
movsb
addb
or
jns
mov
xchg
subl
fildll
enter
inc
and
and
xchg
jo
mov
lret
mov
or
mov
mov
mov
pop
aam
and
jge
mov
push
rcr
xchg
mov
mov
dec
sbb
rcl
shlb
mov
pop
pushf
add
and
scas
inc
rol
out
sub
add
in
lods
push
icebp
lahf
sub
leave
outsl
xchg
dec
std
movsl
icebp
inc
adc
inc
loopne
xor
adc
inc
shlb
inc
and
and
push
adcl
cmpsb
add
xchg
loopne
mov
and
push
mov
and
jmp
mov
inc
ret
popa
add
pop
mov
push
movsl
fcompl
mov
xorl
mov
mov
int
sub
lret
test
mov
push
inc
pop
ficompl
pop
xor
sub
mov
add
and
mov
mov
movsl
testl
mov
mov
xor
test
xor
and
add
cmp
xor
repz
inc
or
xchg
aaa
push
les
jg
mov
inc
add
stc
add
add
lods
shlb
jecxz
loopne
test
lods
and
testl
sub
cmp
loopne
dec
imul
jmp
inc
push
mov
jge
and
pop
adc
add
clc
inc
fstp
jle
mov
dec
test
loopne
xor
mov
loopne
int
pop
cmp
adc
jb
mov
push
or
ja
popl
pusha
inc
inc
xchg
add
add
int3
adc
aam
rol
lods
nop
xor
stc
out
mov
imul
xchg
adc
in
sbb
sahf
add
jle
popf
andb
pusha
adc
cli
arpl
loop
cmp
push
mov
and
mov
sub
mov
aad
insb
fimuls
lds
or
mov
fwait
xor
mov
fistpll
jp
jp
cmp
dec
and
add
xchg
ret
xchg
xor
push
xorl
lds
lods
loopne
add
dec
inc
dec
icebp
insl
pusha
aad
out
cmp
jo
adc
movsb
mov
lret
out
fnsave
push
or
shlb
mov
add
sti
dec
push
cmp
shlb
stc
jl
push
xchg
js
aam
dec
sbb
fistl
pop
scas
add
sti
sbb
jb
mov
loopne
bound
mov
je
jbe
xor
mov
mov
lahf
sub
loopne
lcall
xchg
add
pop
mov
pop
jle
shlb
outsl
dec
add
addb
test
sarl
sbb
inc
sub
and
sbb
fcmovu
dec
jne
sbb
sti
xchg
add
and
and
adc
cs
jmp
shlb
and
mov
scas
out
insl
rcll
mov
add
enter
ja
mov
cmpsb
addb
ret
mov
xor
dec
test
pusha
push
dec
or
push
shlb
xchg
push
mov
mov
and
std
test
and
addr16
int
aad
loopne
sarl
daa
repnz
test
fwait
or
icebp
mov
push
and
nop
insb
mov
ss
ret
mov
sahf
pop
cmp
jg
dec
sub
add
fmull
rorb
add
outsl
ficoml
test
add
aad
insb
aam
loopne
stos
jns
arpl
mov
jns
jns
fisubrs
pushl
andb
mov
stos
pusha
loopne
jp
jl
je
das
lods
add
popl
test
xchg
push
mov
mov
mov
aas
inc
shrb
int3
lahf
lock
add
and
or
insb
inc
fdivrs
jp
inc
andb
pusha
loopne
and
inc
jnp
and
inc
and
gs
pop
or
mov
hlt
push
dec
or
pusha
sar
cmc
addb
fmull
xchg
jecxz
ja
cmc
xor
and
ds
xor
pop
push
mov
cltd
repnz
js
inc
test
add
arpl
push
lahf
in
mov
test
mov
jmp
xchg
xchg
fldenv
and
arpl
out
push
xchg
pop
mov
and
push
lods
mov
fnstenv
cli
and
cmpb
pop
nop
das
inc
popf
dec
dec
sub
pusha
push
sbb
jg
sub
xor
jns
rol
mov
loopne
loop
adc
adc
int
add
sub
addr16
rolb
sarb
and
sub
push
cwtl
cltd
insb
shlb
xchg
hlt
pop
jp
loope
pusha
and
ljmp
inc
and
mov
mov
addb
add
xchg
mov
inc
cmc
xor
inc
mov
xlat
cld
adc
jb
and
push
test
mov
xchg
pusha
pop
add
lea
jne
or
pusha
xor
mov
inc
or
subb
pop
cld
sbb
inc
mov
pop
adc
push
fiadds
add
xor
and
pusha
fwait
cmpsb
inc
loopne
into
mov
loopne
push
inc
je
call
insb
push
or
sbb
adc
loopne
clc
icebp
cmp
add
je
add
and
stos
arpl
mov
cmpsb
loopne
add
pusha
cmp
inc
xchg
push
inc
hlt
les
add
sbb
lcall
lods
fsts
sub
add
mov
dec
jmp
enter
xchg
fildll
push
adc
rclb
inc
dec
dec
dec
repnz
testl
and
shlb
faddp
sbb
cmp
gs
mov
clc
adc
cs
cmp
mov
push
or
imul
int3
ret
mov
inc
push
sti
xor
rolb
add
xchg
push
enter
dec
mov
dec
js
cmp
xchg
sbb
clc
jae
jp
and
addb
je
mov
xor
and
loop
daa
and
loopne
std
in
sahf
lret
pusha
rclb
dec
push
inc
add
inc
notb
loop
jno
addb
insl
pop
fsubp
and
lds
mov
pusha
pop
adc
and
loop
fidivrs
out
sti
dec
pop
roll
and
testl
lcall
xchg
movsl
inc
sti
ja
cltd
mov
sahf
std
shrl
lret
popf
call
add
pusha
subb
out
enter
jae
lret
push
mov
movsb
addb
mov
xor
lods
stc
int
in
dec
shlb
or
mov
sbb
cmp
mov
out
dec
stos
mov
cmp
adc
bound
add
pusha
insl
in
and
loopne
ja
out
dec
jo
arpl
stc
inc
lds
xlat
das
inc
pop
add
add
test
and
dec
inc
lock
cmp
inc
dec
icebp
push
mov
fcmovnu
push
push
in
leave
lret
mov
lret
and
popf
std
xchg
inc
fdiv
rol
adc
and
or
fcomip
andb
and
loopne
stos
shlb
imul
xor
dec
mov
rcrb
lret
es
mov
and
mov
and
mov
sbbl
add
loopne
xchg
dec
loop
and
into
divl
mov
push
sub
loopne
mov
push
stos
loopne
push
rolb
mov
sbb
adc
cmp
nop
mov
mov
pusha
popf
mov
sbb
loop
dec
xor
pop
data16
andb
add
icebp
sub
or
add
add
and
lret
dec
jge
push
bound
mov
das
inc
addb
loopne
or
mov
cmp
cmp
test
add
sub
out
or
js
mov
mov
cmp
iret
pop
aad
and
das
sub
cmp
mov
sub
inc
cmpsl
pushf
sub
out
pusha
cmpsb
pusha
andb
xchg
jmp
ljmp
cmpl
xchg
push
loopne
gs
nop
sbb
sub
inc
shrb
or
mov
fisttpll
and
repnz
dec
adc
and
js
pop
test
dec
jge
xchg
mov
cltd
ds
das
nop
mov
in
xor
xorb
add
movsl
pushf
mov
push
rclb
les
int
imul
in
notb
pushf
popa
mov
inc
fldl
mov
sub
sar
lds
push
jnp
addl
inc
adcb
cmpsl
int3
and
push
call
mov
inc
mov
and
and
cmp
pop
cmp
mov
jo
jo
in
and
hlt
fwait
jae
xor
mov
adc
jg
mov
push
add
mov
pop
xchg
mov
loopne
dec
stos
mov
mov
pusha
and
jo
inc
pop
sti
das
daa
es
inc
jp
mov
adc
jmp
popf
cmpsb
mov
mov
mov
push
sbb
rorb
push
pusha
loopne
mov
rolb
pusha
sar
sub
aas
mov
imul
ret
and
pusha
sbb
inc
mov
jnp
mov
mov
inc
add
fwait
dec
dec
mov
inc
xor
loopne
pop
mov
loopne
lahf
daa
ja
pop
outsb
shl
sub
push
add
and
mov
or
les
rolb
mov
loop
jae
ja
xchg
add
inc
sahf
pop
les
jne
mov
add
outsb
xchg
dec
lods
ljmp
pusha
loopne
loope
andb
loopne
mov
cltd
loope
call
int
xchg
dec
xor
mov
push
inc
mov
cld
imul
scas
add
pusha
mov
sbb
loopne
fstpl
in
push
mov
adc
fwait
or
fdiv
cmc
test
loopne
mov
loopne
cmpsl
jae
js
enter
inc
xor
in
out
insl
andl
fimuls
addb
bound
loopne
pop
mov
push
sbb
lds
mov
loopne
xchg
loopne
addb
cli
insl
fdivrl
add
test
loopne
out
mov
mov
fnsave
inc
cmp
adc
and
loopne
hlt
xchg
add
rolb
add
mov
call
jl
push
mov
pusha
mov
sub
shlb
cmovg
sbb
loope
add
ficomps
mov
sbbb
lahf
mov
pusha
inc
imul
shlb
mov
aad
pop
push
imul
add
idivb
fidivl
mov
ds
dec
lods
xchg
fcoms
and
roll
in
rcrb
callw
mov
ficoml
lods
mov
pusha
jbe
dec
xorl
fimull
jae
pop
cmpsl
movsl
dec
out
mov
jnp
sahf
shll
jp
ret
sub
sbb
loop
mov
fdivrs
jmp
mov
sbb
addl
mov
or
pusha
dec
and
lret
push
or
push
ret
cltd
in
fs
pop
or
addb
inc
adc
jge
inc
addb
pop
xchg
or
inc
inc
jno
sub
loopne
aam
or
lds
fcmovnbe
shl
sbb
or
sar
push
ss
shlb
loopne
xchg
in
lret
mov
or
add
addr16
movsl
mov
sub
xchg
add
cmp
and
movsl
cmc
pop
xor
ds
ja
sub
das
pop
adc
int3
adc
and
add
cwtl
inc
or
ret
addr16
and
stc
adc
inc
mov
mov
cld
xchg
in
push
pusha
jle
lods
stos
faddl
inc
sub
add
pop
repnz
adc
push
jae
mov
rcrl
lcall
jbe
and
loopne
stc
fwait
lret
pop
out
fidivs
idiv
lods
and
andb
push
mov
loopne
iret
jp
pusha
pusha
ret
sahf
shrb
and
pop
fstl
stos
and
pushf
lcall
dec
mov
fdivrs
cmp
mov
dec
fsubrl
or
int
movsb
loopne
test
loope
add
sbb
dec
xchg
xchg
stc
ljmp
shrb
and
loopne,pn
dec
fmull
xchg
mov
sub
pushf
cmp
call
ds
sub
pop
jmp
push
dec
aaa
aas
lahf
add
add
mov
inc
ljmp
rcrb
mov
cmc
push
inc
scas
shlb
mov
pop
mov
movsl
dec
lret
stc
and
incl
mov
add
fidivl
mov
and
loopne
and
xor
pusha
shlb
pop
sbb
inc
js
mov
sahf
daa
ret
xchg
cld
xlat
jmp
cmp
clc
in
pusha
mov
movsb
loopne
int
push
loopne
push
mov
out
push
cmpsb
mov
movsb
loopne
fsubrp
pop
xchg
and
shlb
in
pop
add
jae
dec
int
dec
xor
inc
aad
rcl
pop
outsb
rorl
ret
popa
stc
in
popa
out
cltd
push
dec
push
mov
loopne
xor
popf
mov
jmp
jge
shlb
incb
sbb
cld
push
push
inc
xchg
xchg
pushf
xchg
imul
je
mov
and
in
rol
pop
cmpsl
ljmp
add
add
not
into
repnz
pusha
mov
rorl
out
mov
adc
cmp
shrb
dec
mov
push
aas
ljmp
and
push
sbb
movl
add
pusha
jbe
test
dec
in
pop
mov
mov
jl
in
repz
jmp
fimull
and
xor
test
add
fdiv
pop
aas
imull
and
sbb
andb
add
std
das
inc
pop
out
mov
cltd
xor
xchg
cmpl
fcompl
cmp
inc
lods
stos
add
jns
xchg
or
fwait
sahf
adc
mov
and
push
rol
sub
and
rcl
fdivl
aam
jnp
out
mov
ret
in
mov
jo
and
cmp
mov
cmp
add
push
and
mov
shl
rolb
pusha
mov
loopne
rcrl
pop
sbb
adc
mov
mov
pusha
adc
orb
push
fidivrl
mov
je
pop
mov
mov
add
or
and
les
cmp
lds
divb
data16
pusha
movl
daa
lcall
movsb
shlb
and
loope
xchg
test
and
rclb
call
inc
fisubl
insb
jle
mov
cmc
add
and
dec
jle
xchg
pop
lds
and
and
add
xor
jmp
fld
out
jge
inc
icebp
push
std
loopne
in
add
and
std
or
xchg
jne
cmpsb
and
test
cli
push
mov
outsb
cmp
jae
add
fsubrs
sbb
ljmp
mov
xchg
mov
add
adc
imul
je
xchg
inc
and
and
lock
add
sti
in
int3
adc
ds
and
push
and
scas
and
stos
add
pushf
mov
loopne
loopne
shlb
pusha
and
jmp
lret
dec
mov
cmp
and
add
dec
mov
dec
adc
loop
xor
adc
rorl
movd
in
and
and
lock
push
sbb
dec
jecxz
inc
ja
and
fxch
in
add
pusha
pop
push
loop
enter
push
fwait
mov
pusha
push
clc
xorl
push
dec
lock
add
test
mov
decl
pusha
mov
test
mov
fldenv
int3
pop
cmp
pusha
or
mov
add
add
fcoms
andb
movsl
movl
add
and
and
mov
enter
and
ret
out
xor
jle
xchg
xchg
and
test
cmp
sahf
inc
imul
into
rcl
mov
andb
pushf
stos
pusha
adcb
inc
xchg
imul
addb
je
rolb
inc
push
loopne
sub
mov
cmp
jmp
int3
jg
adc
punpckhbw
push
mov
stos
inc
inc
imulb
xchg
mov
adcb
inc
jecxz
and
cmp
push
dec
mov
add
sbb
mov
jmp
push
xor
inc
or
adcb
pop
inc
jle
ret
mov
lock
push
cmp
insl
push
inc
inc
sti
sbb
fisttps
and
and
and
shlb
xchg
xchg
fs
pusha
rclb
xchg
loopne
mov
xchg
arpl
pop
lock
lods
pop
lds
sbb
inc
mov
sub
mov
jbe
and
mov
mov
jecxz
les
icebp
movsb
rolb
jb
push
jecxz
cltd
xchg
inc
inc
notb
test
mov
into
xor
shl
daa
adc
ljmp
pop
inc
shlb
and
mov
rolb
js
sbb
cmp
lods
pusha
mov
cs
fistpll
inc
mov
dec
ret
jge
frstor
xchg
repz
xor
shl
adc
or
push
sbb
pop
bound
inc
movsb
inc
pusha
inc
enter
andb
mov
mov
fcmovnb
stos
dec
dec
lret
inc
mov
ret
sub
les
fldenv
add
jbe
mov
icebp
sub
add
inc
mov
mov
movsl
mov
sub
push
ret
cmp
xchg
lea
push
pusha
sarb
adc
xor
jne
mov
add
add
push
sub
and
cltd
jb
rorl
and
adcb
mov
and
inc
in
pop
mov
call
inc
mov
movsl
xchg
dec
mov
rolb
daa
enter
fnstsw
pop
jge
cli
xchg
pusha
cld
aas
mov
rcrb
sti
and
lret
xor
in
int
loopne
pop
stos
fisubrl
cwtl
test
jge
mov
inc
inc
cmpsl
addb
pop
ljmp
mov
and
add
and
jnp
mov
out
fisubl
mov
jo
xor
sub
mov
popa
mov
add
sbb
pop
mov
add
adc
xorl
bound
jp
and
out
push
arpl
sub
cmpb
rclb
xor
inc
mov
xchg
sbb
rolb
stc
loop
mulb
sti
xchg
rclb
rolb
pop
or
pusha
outsl
mov
lret
adc
add
pusha
pop
mov
add
or
jg
adc
pushf
addr16
cmc
in
and
mov
loopne
movsl
mov
pusha
scas
addb
leave
and
add
outsb
pusha
adc
loopne
icebp
scas
loopne
adc
mov
icebp
pop
cmp
push
outsb
mov
sub
pusha
add
shlb
adc
inc
inc
cld
outsl
push
sti
mov
dec
enter
iret
dec
xor
or
sbb
mov
cmpsl
movsb
mov
add
ficompl
outsl
fs
add
and
loopne
pusha
pusha
in
mov
pop
cmpsl
insl
dec
xchg
jmp
iret
ret
adc
rolb
inc
dec
cld
mov
add
lods
pop
mov
mov
pop
cwtl
adc
imul
sti
jns
pop
rol
xchg
add
jp
ja
xchg
dec
mov
sub
test
loopne
mov
test
pusha
sub
inc
fwait
aaa
subl
aaa
adc
and
and
mov
popa
dec
cwtl
out
cmp
mov
xchg
subl
iret
packsswb
out
lret
repnz
out
mov
pusha
scas
xor
jbe
mov
pop
vsqrtss
push
mov
test
and
inc
lahf
mov
add
push
adc
sub
out
mov
mov
jecxz
jmp
inc
ds
test
inc
rcrb
pop
jle
test
insb
in
inc
scas
pusha
orb
xor
sbb
xor
jp
xor
inc
cltd
pusha
movsl
adc
sbb
ret
mov
pusha
add
and
xorl
xchg
inc
mov
jp
lds
dec
sub
sbb
ffreep
cwtl
pusha
test
loopne
push
pusha
add
mov
and
add
xor
inc
add
ss
add
mov
loopne
out
add
loopne
fdivr
mov
int
andb
idiv
dec
lea
sti
add
loopne
call
shlb
and
aaa
sarb
mov
mov
jle
loopne
dec
mov
hlt
mov
lods
add
andb
sub
pusha
jmp
bound
outsl
mov
push
rolb
cltd
mov
fcmovnbe
and
shl
push
xor
add
pusha
jmp
and
sub
mov
ror
inc
jo
scas
insb
call
push
ret
jns
daa
nop
xchg
jecxz
sub
scas
and
cmp
fcomps
test
mov
add
popf
push
lcall
or
push
add
xchg
fisttpl
lahf
dec
pop
jne
mov
inc
into
pushf
sbb
ret
pusha
shlb
xor
mov
jns
and
jecxz
add
cmp
or
lock
dec
add
rorl
mov
testl
mov
cmp
sbb
push
std
and
loopne
cmpsb
shlb
mov
sbb
out
mov
dec
push
inc
add
imul
xlat
in
addr16
shlb
adc
int
outsl
pop
lahf
jns
or
mov
je
push
xchg
xchg
test
imul
jle
mov
imulb
add
pop
xchg
in
push
ds
lds
xor
push
clc
iret
cmc
pop
ss
ret
dec
xchg
lcall
icebp
aas
and
inc
cvtpi2ps
loopne
xchg
jno
int3
sti
cmpsb
pusha
loopne
outsb
jae
idivb
jg
or
sti
cmp
loopne
addr16
push
sahf
scas
rolb
or
daa
dec
mov
inc
insl
dec
xchg
daa
sub
push
mov
push
inc
cmp
out
mov
adcl
sub
fisttpll
loopne
mov
iret
jb
xchg
pop
pusha
inc
inc
jmp
jl
cmpsb
addb
lock
fimuls
addb
sbb
jmp
icebp
imul
andb
or
sub
mov
aam
bound
xchg
pop
lret
pop
out
aas
pop
stos
dec
leave
addr16
sub
loopne
rolb
mov
mov
inc
ja
loop
sbb
jle
js
loopne
popf
mov
loop
loopne
jne
inc
cmp
addb
mov
jle
pusha
loopne
xchg
cmp
pusha
sarb
jmp
inc
stos
adcl
sbb
cmp
and
and
pusha
and
arpl
mov
into
cmpsb
inc
inc
inc
andl
sbb
add
and
and
inc
addb
and
scas
loopne
andb
int3
insb
ret
jnp
xor
repz
pop
shrl
movsb
pusha
add
rcrb
xchg
decb
loopne
inc
shrb
test
or
stc
movhps
es
mov
in
ds
cmp
rcrb
and
scas
dec
mov
and
mov
push
xchg
mov
jns
push
mov
out
rolb
or
and
and
sub
pop
or
inc
adc
sti
repz
xchg
pop
mov
rclb
inc
add
pusha
orb
into
mov
mov
add
shlb
bnd
pop
jne
out
insl
pop
cli
pop
sti
fildl
push
push
xchg
push
imul
push
fwait
jecxz
push
scas
sub
inc
fcmovne
nop
mov
inc
xorb
iret
mov
imul
test
add
sbb
dec
les
bound
adc
xchg
cmp
outsl
nop
pop
mov
loopne
addb
out
lock
nop
in
sbb
testl
or
add
hlt
shl
push
hlt
pop
testb
loopne
aas
lods
loopne
cli
adc
scas
mov
push
or
mov
mov
pop
add
add
cmc
stos
pusha
adcb
and
popf
pushf
and
int
in
gs
shlb
push
es
and
lcall
sbb
ds
and
jecxz
mov
inc
hlt
arpl
ljmp
xchg
cltd
cli
lret
mov
cmpsl
mov
or
xchg
mov
push
addb
dec
sbb
ret
mov
iret
ds
push
enter
inc
cmp
lcall
aas
inc
push
pop
jns
inc
pusha
mov
iret
out
lret
fiaddl
xor
xor
xchg
cmc
adc
in
fidivl
popf
shrb
inc
in
hlt
fisubl
and
and
inc
pop
cmp
mov
cmc
adc
fwait
sbb
mov
xchg
das
fstl
adc
cmpl
addb
pusha
cmpsb
and
jb
or
pusha
cmpl
cmc
sbb
push
js
sarb
sbb
loopne
push
mov
dec
ret
jno
int3
mov
rolb
movnti
xchg
andb
test
and
cmp
adc
pusha
inc
das
out
into
lea
inc
adc
mov
and
xor
sbb
pusha
jg
fidivl
fisttpl
add
fdivrl
aaa
mov
mov
aas
pushf
bound
pusha
jmp
xor
and
adc
jbe
jl
jecxz
out
lods
mov
loopne
pusha
loopne
push
sbb
adc
inc
and
lahf
sti
xor
cmp
jb
push
lret
pop
cmp
incb
addb
cmp
outsb
js
rclb
xchg
shlb
int
fildl
pop
inc
insb
jg
add
add
inc
loopne
cmc
push
test
pop
stos
aaa
mov
mov
out
test
add
mov
loopne,pn
rcl
test
push
movsl
cltd
imul
lds
fdivr
cs
inc
mov
fs
add
loopne
fistps
ja
out
daa
fcomip
sbb
stos
xchg
imul
pusha
or
shrb
shlb
inc
stc
and
add
sub
pusha
aam
clc
enter
cmpsl
jmp
add
and
shr
in
mov
pusha
rolb
mov
shrb
aas
call
fldl
outsb
push
loopne
movsl
push
xchg
xchg
mov
enter
fwait
mov
mov
cld
hlt
lcall
xchg
insb
jle
cli
inc
push
add
loop
fdivs
sti
stc
xchg
cli
fnstcw
push
pop
arpl
mov
sbb
loopne
aas
jae
notl
rolb
sbb
and
dec
mov
sbb
jo
sti
shrl
scas
mov
fs
mov
xchg
mov
test
push
dec
mull
cmp
jmp
lea
lcall
or
dec
fstl
jp
mov
adc
inc
mov
inc
dec
pop
test
sbb
or
xor
rorb
sbb
cmc
sub
jmp
pop
out
and
das
cltd
pop
icebp
addl
add
mov
jg
add
loop
cmp
mov
mov
or
pusha
mov
mov
inc
mov
pusha
push
inc
leave
leave
mov
scas
and
mov
pop
into
and
aaa
adc
scas
sub
adc
mov
mov
in
out
mov
pusha
loopne
sbb
imul
mov
rcl
fists
mov
dec
jecxz
je
mov
jmp
js
and
and
xchg
add
or
add
call
jl
mov
cmp
mov
add
lea
jmp
and
mov
or
icebp
imul
loop
scas
addb
aaa
stc
leave
dec
fcmovnb
push
cmp
cltd
adc
fdivrs
sbb
shrb
leave
mov
jno
mov
sbb
xchg
xor
ret
outsb
imul
aas
gs
xchg
das
sbb
or
and
add
gs
mov
inc
and
cmp
mov
jmp
shlb
jb
adc
pop
jno
imul
jge
loopne
test
addb
xchg
cmp
jp
dec
test
xor
rolb
push
imul
and
xor
sub
push
cmc
pusha
xchg
test
pop
ret
rol
pop
pushf
es
cmpsb
inc
shl
or
pop
das
cmp
jge
xchg
inc
roll
inc
pusha
jg
mov
xchg
pop
ror
cwtl
shl
push
out
addb
aad
out
mov
add
mov
hlt
daa
in
shl
int
outsl
jg
sbb
dec
icebp
mov
out
jge
and
pop
pusha
out
lds
add
scas
loopne
movsl
mov
insb
call
push
add
adc
in
loope
shll
sahf
inc
push
insb
mov
aaa
sbb
adc
inc
scas
andb
xor
in
les
daa
repz
xchg
clc
and
xchg
lods
add
mov
jg
icebp
and
add
lods
dec
gs
out
test
mov
adc
xor
aam
rol
cs
adcb
cltd
or
stc
ds
and
pop
ds
mov
pusha
cmp
rcrl
sti
dec
and
pop
xor
and
test
rcl
inc
dec
adc
adcb
dec
cwtl
ss
cld
mov
shlb
inc
imul
imul
add
insb
ret
sbb
mov
jae
js
xchg
and
mov
and
xchg
aad
popf
and
cmc
mov
hlt
cmp
or
aam
add
add
cwtl
bound
imull
jnp
cs
add
sbb
and
sbb
add
loopne
mov
call
cmpsb
pusha
inc
rcll
imul
inc
xor
cltd
pusha
fwait
aad
xor
jbe
jmp
int3
xor
or
decl
andb
loopne
int
loop
push
in
mov
xor
imul
pop
jge
fst
loope
out
xor
mov
fisubs
dec
sbb
push
or
orb
aas
mov
es
inc
jns
scas
addb
push
gs
adc
add
sbb
push
inc
inc
clc
mov
mov
xchg
or
shl
push
sbb
bound
imul
add
push
hlt
sbb
jge
fistl
lock
imul
cltd
or
add
loopne
loopne
je
or
loopne
das
inc
cmpsl
pop
pop
xchg
ds
pop
mov
add
inc
mov
jbe
inc
push
sahf
cwtl
mov
gs
or
loopne
cmp
inc
daa
dec
int
shlb
mov
and
lea
loopne
out
jns
dec
sti
xchg
lock
cmpsl
ret
adc
mov
rcrl
add
add
addb
insb
data16
je
scas
loopne
push
aaa
or
adc
ss
inc
mov
fnsave
aam
out
sarb
lret
jno
pop
je
mov
and
inc
or
push
pusha
rcr
or
loopne
add
or
loopne
rolb
loopne
jno
jae
xlat
xor
and
add
jge
pop
add
add
inc
fdivrs
into
add
inc
push
mov
push
subb
jb
lock
fldt
repz
lods
pop
sub
out
xchg
mov
nop
push
imul
loopne
in
lods
add
scas
mov
sub
andb
mov
jne
nop
inc
sbb
inc
loopne
test
icebp
xor
ds
xor
test
inc
iret
sub
add
popa
push
test
mov
pusha
cmp
push
inc
dec
fists
call
pusha
cli
js
into
sub
popa
jbe
mov
scas
pusha
and
pusha
add
xlat
lea
js
push
sbb
andb
pusha
inc
std
mul
and
pusha
cmpsb
shlb
cmp
and
push
mov
call
add
inc
out
dec
sub
cmp
stos
fwait
sbb
in
cmp
pop
cmp
xchg
insl
mov
out
repz
sbb
mov
test
inc
andb
pusha
shrb
addr16
gs
pop
btl
inc
mov
adc
xchg
insl
inc
pop
xor
addb
repz
enter
cwtl
lcall
inc
shl
sub
sarb
jbe
cmp
test
rolb
sub
lret
shrl
andl
gs
pop
adc
cmpsl
mov
inc
lods
mov
andb
xchg
mov
dec
adc
loopne
xchg
jmp
add
cmp
add
rorb
loopne
mov
lahf
or
shlb
in
incl
adc
leave
scas
clc
dec
aaa
call
in
mov
add
mov
mov
cmp
sti
cmp
out
push
mov
std
inc
xorl
rcrb
jb
repz
mov
adcl
fistpl
pop
mov
das
lcall
inc
add
rolb
scas
inc
inc
icebp
cmp
hlt
decb
jb
cmp
int3
cmp
or
xlat
mov
pop
pop
sbb
lds
add
sub
int
mov
adc
and
add
add
mov
jl
loopne
sbb
xor
loopne
adc
and
add
mov
loopne
jne
rcr
sbb
or
aaa
sarl
shl
fists
push
inc
and
loopne
repnz
dec
xchg
xlat
imul
xchg
xchg
lret
inc
out
divl
repz
stos
mov
sarb
lods
inc
mov
cltd
addb
jae
pop
call
sub
inc
in
ret
movsl
sbb
scas
xor
jne
pop
scas
rolb
rcrb
push
pop
arpl
movsl
lds
ret
push
lea
sti
cmpsl
sbb
push
add
addb
out
push
in
add
je
bound
xchg
pop
js
pusha
loopne
mov
mov
pop
adc
loopne
sub
pusha
out
add
mov
inc
mov
xchg
adc
out
xchg
into
rolb
xor
push
jo
addb
cwtl
xor
mov
dec
scas
out
adc
sbb
jg
or
ljmp
out
ret
ljmp
sub
test
orb
mov
pop
mov
xor
call
lods
xchg
pusha
push
inc
and
inc
loope
dec
subl
mov
jnp
inc
mov
push
cmpsb
pusha
and
testb
pusha
sbb
aam
das
push
pop
jmp
pop
and
xor
movsb
mov
aad
sti
sub
rcr
stos
inc
inc
imul
inc
mov
add
sub
xor
push
enter
adcl
movsl
push
or
sbb
jae
xor
outsl
mov
jo
inc
shlb
mov
jg
sahf
cli
sbb
push
cmp
gs
jno
or
sub
fcmovne
xchg
jmp
data16
push
ja
mov
add
or
jnp
xchg
jecxz
inc
push
pop
pop
or
hlt
adcl
movsl
jge
add
pop
scas
andb
outsl
sbb
sahf
sub
jl
push
push
icebp
jle
mov
addr16
in
sbb
inc
inc
pop
or
mov
pusha
aad
mov
sub
mov
mov
daa
xchg
loope
push
adc
or
inc
inc
sub
fs
jle
scas
add
lret
adc
mov
aas
add
xor
lods
into
jle
pop
mov
dec
imull
sarb
xor
test
pop
andb
in
and
pusha
aam
loopne
mov
pop
cmp
sti
mov
mov
inc
lds
sbb
or
in
loop
fidivrl
sub
jle
rcrb
add
mov
jp
add
lcall
addb
jnp
add
and
pusha
inc
int3
mov
insb
scas
inc
and
cltd
pop
pop
xchg
inc
call
imul
adcl
and
xchg
push
inc
loopne
fldl
js
and
or
sarl
dec
add
rcr
add
pusha
add
sbbb
mov
loopne,pn
fwait
push
and
int
jmp
sahf
sub
add
mov
push
dec
or
or
mov
sub
pop
shlb
cmc
into
xlat
sub
fisttpll
xor
xor
fcmovnb
sar
push
data16
inc
inc
mov
rolb
add
lret
cli
loop
xadd
iret
cli
daa
cmp
test
add
and
mov
add
push
outsb
dec
fisubl
insl
or
subb
add
push
mov
in
cmp
js
rolb
xchg
dec
in
mov
addb
xor
or
pusha
cmc
ss
gs
inc
gs
xchg
xor
mov
cmp
andb
rorb
mov
adc
jl
pop
add
add
and
mov
mov
mov
movsb
add
les
xchg
call
xchg
mov
call
test
mov
push
or
nop
jb
repz
or
cmpb
jno
loope
rclb
shlb
aas
sub
push
jle
testb
and
loopne
adc
leave
es
add
push
push
stos
xchg
outsb
sahf
incl
xor
adc
add
inc
loopne
repz
mov
lods
jle
ret
jnp
add
mov
mov
pop
mov
sub
insl
jbe
movsb
inc
loopne
pusha
add
cmp
nop
insb
ljmp
xchg
pop
cmp
xor
sub
xor
fsts
mov
inc
mov
add
shll
add
fcmovnb
aad
mov
xor
mov
into
mov
dec
data16
andb
mov
push
jmp
cmp
aaa
mov
pusha
mov
sbbb
mov
jo
mov
xor
mov
and
cld
sub
loopne
pusha
rclb
pushf
and
mov
inc
pushf
jg
dec
xor
loope
rolb
mov
mov
or
add
sbb
or
or
inc
lahf
adc
dec
inc
loopne
lods
inc
add
and
mov
and
or
test
inc
andb
add
rcrl
inc
iret
add
and
mov
int3
fistpll
mov
mov
arpl
xor
shlb
lods
xchg
adc
xchg
xor
ljmp
push
cmp
mov
mov
dec
insl
cmpsb
mov
addb
loopne
pop
orl
je
iret
pop
in
pusha
loopne
lods
gs
cmc
mov
sub
outsb
push
push
xchg
xchg
mov
push
in
jb
nop
into
cli
xor
hlt
sub
add
ljmp
adc
xlat
shl
or
popa
aam
and
loop
xchg
mov
add
mov
sahf
scas
mov
mov
repnz
cli
dec
or
rolb
push
add
popf
inc
cmp
pop
inc
push
jg
pusha
and
mov
sub
inc
xchg
adcb
add
push
out
pop
fsubrs
jns
push
shlb
xchg
decl
imul
jbe
sub
mov
cmpl
pop
inc
add
add
movsl
add
mov
test
inc
jne
add
rcll
add
inc
repnz
andb
popf
jle
cmc
push
fcoms
in
shll
lret
lds
inc
add
xor
daa
jg
push
inc
rorb
scas
push
xchg
out
je
fadds
insl
ds
scas
pusha
sbbb
lret
pop
dec
iret
inc
clc
leave
out
mov
hlt
outsl
arpl
nop
inc
and
cli
imul
nop
stos
add
icebp
xchg
inc
jno
out
push
or
shl
negl
pusha
pusha
out
mov
push
mov
cmp
adc
mov
fimuls
push
pop
xor
push
xlat
int
imul
addb
mov
mov
sub
cmpsb
rolb
imul
add
mov
loopne
out
or
leave
adc
mov
sub
out
xor
and
inc
mov
inc
loopne
jne
xchg
movsl
mov
fldenv
jbe
stos
add
push
xchg
shlb
jge
mov
lret
inc
cltd
pop
cmpsl
in
mov
roll
xchg
lods
loopne
adc
adc
js
jecxz
sti
push
mov
xor
aaa
in
adc
dec
cmp
inc
mov
dec
push
add
pushf
or
test
jmp
and
add
cmp
mov
dec
xor
movl
jge
scas
aam
shr
js
int
iret
fadd
imul
push
push
out
into
js
inc
cltd
scas
cmp
mov
notl
mov
inc
xchg
and
sub
sbb
add
cmpsl
sti
dec
fldenv
dec
mov
xchg
shlb
loopne
mov
cmp
pusha
inc
jne
arpl
andb
jp
mov
sub
rcrb
xor
sti
mov
push
inc
and
loopne
addb
push
iret
cmp
lock
popf
sbb
in
lahf
icebp
movsb
pusha
loopne
jno
and
jecxz
mov
mov
add
jb
or
in
ffree
mov
add
cmp
fimull
add
das
pop
imul
mov
les
push
push
out
and
lods
pusha
add
inc
mov
test
mov
dec
lret
test
pop
push
mov
loopne
or
inc
jmp
pop
lea
jmp
cmp
cwtl
mov
or
cmp
and
add
loopne
stos
shlb
jmp
imul
negl
add
fimuls
jo
ficoml
sbb
jg
loopne
sti
roll
sub
pusha
scas
mov
jmp
out
addb
insb
jecxz
cmpl
add
addb
sahf
xor
js
mov
stos
pop
pushf
std
loop
decl
mov
fistps
fs
mov
dec
inc
mov
or
adc
daa
xlat
cld
jo
sub
inc
xchg
pop
insb
in
fsubrs
cltd
stc
test
adc
mov
shlb
lods
ljmp
mov
push
mov
pusha
sbb
inc
push
xor
xor
inc
xchg
add
ds
adc
adc
mov
mov
sbb
mov
lret
repnz
repz
mov
inc
outsl
std
loopne
and
mov
ljmp
jp
dec
scas
inc
mov
sub
and
loopne
mov
mov
add
inc
xor
gs
inc
and
mov
sbb
push
add
cmp
rolb
ret
lods
gs
or
mov
inc
and
inc
push
add
mov
jo
mov
inc
add
sbb
dec
and
add
ds
inc
cmp
andb
int
inc
xorb
push
and
sub
pop
xchg
in
andb
stos
pushl
and
clc
jg
setno
add
insl
pushf
cmp
inc
movl
inc
sbb
add
loopne
loopne
cmp
out
cmc
jne
push
fisttps
mov
shrl
inc
rcl
push
add
inc
mov
ljmp
dec
xor
mov
stos
and
and
or
loopne
lods
cmpsb
inc
add
mov
mov
ljmp
pop
in
ljmp
adc
test
stc
push
inc
mov
cwtl
cmp
loopne
push
push
and
loopne
and
pusha
xlat
adc
sbb
bound
cwtl
rcrl
lcall
loopne
xor
lahf
adc
mov
mov
add
mov
inc
loopne
xchg
and
mov
jecxz
mov
mov
rorb
or
xchg
xchg
ret
pop
jne
in
pushf
lea
in
movsb
add
mov
mov
loope
sbb
testb
xchg
outsb
xchg
arpl
ds
jae
in
rolb
inc
jnp
inc
call
mov
mov
fadds
loopne
dec
aaa
lcall
cmp
cmp
neg
mov
es
addr16
xchg
sarb
xchg
insl
pop
jmp
jo
cmpsl
popa
in
rorl
addb
xchg
repnz
mov
pushf
jnp
and
adc
nop
mulb
aad
mov
enter
jb
adc
out
sbb
cmpsb
add
dec
fs
or
fwait
xor
mov
jnp
mov
add
push
mov
inc
in
movsb
rolb
and
jl
nop
addb
mov
cs
inc
imul
bound
push
fsub
mov
dec
push
nop
mov
add
js
leave
shll
mov
arpl
and
ret
jns
xchg
stos
and
gs
and
mov
inc
nop
pop
aaa
dec
iret
inc
and
pusha
sbb
and
pusha
mov
cmp
pop
jl
sbbl
dec
or
add
sar
pop
cmc
cmc
or
shlb
fwait
fwait
in
rcrb
dec
xchg
jns
out
lock
fildl
and
cmpsl
loope
jl
clc
stos
mov
pop
popf
dec
cld
push
mov
cwtl
mov
sbb
pop
mov
inc
mov
jl
sbb
andb
push
inc
add
es
shlb
enter
aaa
sub
jne
cmp
int3
add
mov
cmp
inc
adcb
int3
mov
inc
es
mov
push
or
inc
adc
push
addb
sar
in
xchg
stos
leave
cmp
movsl
into
jl
loopne
sbb
jp
into
jecxz
pusha
and
mov
mov
pop
cmpsb
inc
add
pop
sarl
dec
enter
rclb
sub
dec
push
xor
movsb
loopne
jo
rclb
or
xchg
fcmovnu
flds
repnz
mov
pusha
inc
sub
rcrb
adc
or
and
push
loopne
es
inc
rcr
popf
cmc
mov
imul
xchg
lock
loopne
das
pop
inc
rcrb
iret
inc
shr
adc
loopne
push
add
stos
cmp
lret
mov
mov
pusha
xchg
inc
cmc
xchg
lret
or
in
sbbl
sub
outsb
push
mulb
inc
inc
mov
out
mov
shlb
out
daa
lret
mov
insb
jne
rclb
push
pusha
and
cmpsl
aam
inc
in
dec
mov
mov
inc
clc
xor
mov
fcoms
aam
pop
inc
int
xchg
xchg
add
rclb
xor
fs
sub
add
mov
mov
inc
add
sti
adcl
mov
mov
jmp
out
mov
popa
jns
mov
ror
mov
cmc
int
mov
shll
pusha
int
std
and
dec
jae
jmp
das
sbb
cmp
insl
sub
mov
sub
inc
popf
int
cmpsl
ljmp
mov
movsl
lds
ffreep
insb
maxps
jl
inc
mov
pop
mov
pusha
mov
cmp
je
and
jp
enter
push
push
rclb
push
nop
fcomp
shll
xor
push
mov
rcrb
ret
out
mov
add
jbe
shld
mov
icebp
adcl
mov
aas
js
andb
adc
inc
pusha
repnz
mov
push
mov
mov
rcrb
xlat
testb
xor
mov
xor
inc
addr16
xor
daa
mov
cmp
xor
pusha
xorb
mov
andb
add
and
inc
and
and
xlat
add
shrb
negl
mov
push
enter
inc
push
mov
mov
mov
loopne
mov
or
nop
mov
mov
and
stos
inc
cmpl
mov
scas
and
dec
xorl
test
pusha
pop
ret
lods
pusha
add
loopne
mov
ja
pop
int3
adc
out
fldt
lds
or
ficomps
and
shrb
orb
lahf
fs
and
andb
lods
cmp
xor
xor
jle
mov
sub
mov
hlt
outsl
mov
rolb
push
pusha
shlb
nop
idivl
loopne
pop
inc
dec
lds
addb
push
mov
jns
repz
cmp
and
inc
icebp
shrl
xor
stos
loopne
leave
ret
cmovs
xchg
push
xor
rolb
shlb
inc
mov
scas
sub
add
xchg
imul
frstor
pop
push
into
or
loopne
mov
fsubr
nop
xchg
and
xchg
and
mov
xchg
mov
iret
out
xchg
xchg
popa
decb
sub
inc
test
xor
cltd
sahf
test
push
jae
out
jbe
dec
inc
add
add
das
inc
inc
addr16
les
and
addb
jmp
push
mov
pusha
lea
out
arpl
dec
xor
adcl
pop
cmp
jne
cmpsb
mov
xchg
arpl
pusha
loopne
popa
popf
xchg
mov
fnstenv
rolb
int
pop
testl
je
repz
or
rorb
xchg
push
lea
dec
push
and
idivl
rcr
lahf
xchg
mov
rep
sbb
shll
mov
les
xor
leave
adc
mov
std
scas
inc
loopne
clc
fsts
pusha
icebp
outsl
jbe
push
xchg
xchg
scas
add
hlt
cmp
jmp
test
rol
cmc
daa
xor
into
stos
pop
add
pop
in
test
and
pusha
loopne
xlat
sbb
mov
and
mov
movl
and
sbbb
out
or
add
sbb
clc
dec
mov
xchg
inc
inc
and
out
jecxz
push
pop
sbb
jnp
or
fidivrs
adc
andb
pusha
loopne
mov
add
loope
xchg
int
stos
and
nop
dec
mov
pusha
repnz
and
movsb
and
and
and
loopne
sbb
das
inc
cmp
add
loop
pop
xor
and
add
and
add
xor
shlb
jp
mov
jg
push
idivb
or
rol
in
test
addr16
insb
push
inc
and
iret
outsl
cld
push
mov
jl
loopne
adc
sahf
loopne
mov
mov
pusha
inc
mov
fdivrl
and
addb
and
sarb
shl
andb
mov
cltd
inc
test
inc
bound
cmp
mov
and
cmpsb
rolb
repnz
cmpsl
clc
mov
shlb
or
push
jecxz
test
inc
mov
pop
sbb
rcrb
xchg
add
inc
and
shl
push
mov
gs
push
rolb
ds
inc
pusha
repz
push
bound
loopne
push
add
lods
sub
test
inc
and
shr
mov
push
pusha
inc
mov
out
cmp
loope
rorb
fistl
cwtl
shlb
inc
lea
shlb
pop
cmp
dec
daa
flds
jge
jl
pop
sub
adcb
sub
rclb
inc
andl
sub
xchg
or
jnp
push
pop
push
fimuls
popf
jge
scas
or
xor
cmc
mov
pusha
in
adc
or
loopne
mov
movsb
loopne
jbe
mov
sbb
add
adc
xor
pusha
and
mov
cmp
adc
loopne
enter
mov
mov
jb
dec
lahf
mov
je
cmp
adc
xchg
lret
movaps
and
jmp
mov
lcall
mov
gs
fsts
mov
lret
mov
aam
jmp
int
add
mov
jmp
dec
dec
fs
jo
mov
or
fwait
xchg
xchg
mov
fadds
cmp
mov
sbbb
and
dec
pop
lcall
mov
lcall
mov
sqrtsd
stos
pusha
and
dec
mov
arpl
mov
pop
cmpsl
jo
in
mov
sbbb
xchg
test
data16
mov
sub
mov
movsl
movsb
pusha
inc
mov
orb
add
xchg
xor
mov
or
fwait
clc
insl
cs
movsl
and
jb
popf
test
gs
ret
loopne
mov
stos
loopne
clc
jne
pop
mov
loopne
pop
loop
test
scas
mov
stos
add
pusha
shlb
inc
mov
push
fwait
mov
dec
adc
das
inc
out
cld
sar
push
cmp
push
mov
add
shlb
and
sahf
daa
or
and
std
adc
jne
pusha
mov
fcom
push
cmpsl
sti
add
fsubrs
aaa
jecxz
xor
cmp
mov
pop
mov
adc
mov
push
mov
repnz
inc
xlat
aas
adc
cmp
sub
pusha
xor
mov
ret
mov
and
mov
subb
sbb
xor
jnp
lock
jbe
dec
xor
add
and
lcall
xchg
rolb
loopne
add
mov
jne
cwtl
imul
repnz
and
mov
dec
inc
fldcw
add
sti
mov
stos
mov
popf
xchg
notb
loope
xor
aad
lods
test
push
dec
pop
rorb
add
bound
and
aam
loop
test
and
and
popf
pop
adc
inc
inc
stos
inc
mov
js
testb
loopne
insl
repnz
jns
mov
fsubr
stos
rolb
or
add
pop
daa
adc
jo
sub
add
orb
fiadds
rolb
push
jbe
outsb
and
insl
pushf
imul
out
ljmp
cli
cmp
and
inc
and
dec
test
mov
and
into
outsb
aas
dec
fs
mov
and
push
inc
mov
inc
cltd
mov
push
add
jge
imul
fbstp
outsl
enter
in
cwtl
pusha
sub
out
pop
loop
push
xchg
jo
jnp
dec
xor
mov
pusha
jo
shlb
xchg
push
lcall
xchg
idivb
or
loopne
sub
and
inc
ds
pushf
repz
gs
mov
inc
movsb
pusha
and
daa
mov
pusha
js
sbb
xchg
or
mov
inc
dec
jo
xor
pop
incb
add
push
ret
arpl
repz
fnstcw
and
sub
shlb
out
dec
bound
inc
ret
stos
sahf
fists
repz
mov
add
test
orb
xlat
push
lahf
sarb
xor
loopne
fisubrl
and
pop
mov
adc
lea
pusha
mov
mov
and
add
mov
loopne
mov
ds
stos
andb
mov
or
loopne
andb
std
jbe
add
cmp
in
insb
push
call
xor
andb
inc
and
jl
movsl
sbb
mov
lret
hlt
sbb
les
mov
mov
dec
or
pusha
pop
push
gs
mov
pop
add
loopne
mov
jecxz
dec
push
mov
ret
in
pushf
jge
push
outsl
push
ss
addb
mov
adc
or
scas
inc
add
xor
jcxz
insb
lock
shl
jb
adc
ja
xor
sub
mov
and
rorl
and
loopne
rcrl
into
test
enter
inc
shll
jmp
roll
inc
les
push
and
addb
shrb
xchg
popf
imul
leave
pop
js
rcr
pop
ret
pushf
js
fldl
dec
pop
push
pop
mov
jo
mov
inc
push
jb
repz
test
inc
adc
ljmp
sbb
enter
cmpsb
mov
pop
xchg
adc
out
leave
nop
or
inc
ja
inc
addb
ds
and
sti
jmp
rolb
scas
mov
loopne
inc
xor
xchg
pop
inc
cmpsb
add
movsb
and
lods
push
dec
inc
scas
pusha
add
inc
mov
loopne
je
out
mov
pop
cli
les
add
insl
pop
add
ret
loopne
add
in
int3
push
movsb
and
rcrl
jge
ficompl
andb
add
or
pusha
insl
jp
or
rclb
enter
les
inc
mov
mov
shlb
xor
sbb
ljmp
jl
jge
mov
pop
mov
pusha
add
jecxz
inc
mov
and
sbb
mov
cld
dec
mov
pusha
xchg
mov
sbb
ds
push
mov
pusha
mov
inc
sub
and
lock
dec
pop
scas
inc
pusha
sub
imul
gs
iret
movsl
lea
shlb
fnstsw
loope
xor
loop
ror
xor
inc
loopne
rol
mov
test
mov
sti
pusha
je
jl
cltd
push
xor
dec
sbbl
inc
data16
sbb
push
mov
loopne
fucom
lcall
in
or
shlb
pop
and
add
sbb
adc
pusha
inc
cli
cwtl
cmpsl
idivl
femms
loopne
push
stos
pusha
mov
xchg
mov
and
andb
arpl
lret
pop
leave
lret
arpl
cmp
iret
ret
fimuls
into
jb
xchg
fcmovnu
jne
addb
xchg
push
and
add
jo
daa
dec
xchg
sub
mov
jo
sbb
jmp
and
mov
mov
sbb
push
jnp
inc
mov
ja
dec
insb
or
add
pop
pushfw
scas
mov
insb
jne
fcomps
mov
leave
pop
sti
adc
shlb
pop
and
loopne
outsb
lret
pusha
mov
popa
mov
aam
push
andb
cmp
mov
loopne
dec
jecxz
dec
inc
xor
ret
add
and
test
jnp
das
push
inc
inc
les
out
inc
inc
mov
shl
and
mov
jl
mov
shrb
inc
add
push
int
and
ja
sbb
jns
int3
push
dec
loopne
out
lock
add
push
push
inc
rclb
enter
xor
push
lds
mov
adc
mov
sbb
shl
aad
hlt
idivl
sub
sub
andb
aad
pop
mov
xchg
xor
cmp
out
ficoms
mov
in
push
in
nop
in
xlat
out
pusha
cli
sbb
repnz
scas
scas
jae
push
or
and
outsb
and
mov
pusha
fs
push
movsb
loopne
xlat
cwtl
rcrb
inc
push
pusha
mov
xchg
inc
jo
out
lock
cmp
jge
jp
pusha
inc
rorl
xor
pushf
mov
xor
lret
jo
cmp
outsb
jnp
les
scas
dec
not
inc
or
xor
dec
loope
push
mov
out
lods
loopne
add
loopne
jo
loopne
pop
lret
push
add
aad
nop
push
imul
sbb
or
cmp
push
xchg
andb
jne
loopne
xor
scas
scas
xlat
fimuls
mov
add
dec
dec
push
add
and
imul
arpl
inc
shrb
inc
and
into
ds
jno
jl
fnstenv
in
and
addb
loopne
aas
pop
mov
or
pusha
icebp
sub
cmp
bound
sbb
mov
mov
in
sti
lods
aas
xchg
fisubrs
frstor
jecxz
cld
lret
addr16
rolb
pop
out
movb
iret
mov
mov
mov
daa
mov
mov
and
jns
add
inc
inc
pop
lret
adc
aaa
cmp
and
adc
lret
xchg
std
pop
mov
cmp
pusha
add
inc
inc
loope
xlat
insb
mov
in
out
in
push
or
jo
push
pop
loop
pop
mov
mov
mov
xchg
mov
mov
jns
add
sbb
add
subl
ror
inc
int3
xchg
mov
addps
lds
sahf
outsb
fldl
nop
sti
sub
add
and
dec
jg
add
push
adc
lds
jne
iret
sub
mov
fildl
sub
cmp
push
pop
mov
mov
test
add
leave
lahf
cltd
inc
dec
lods
shlb
rorb
push
xchg
lret
cmp
shll
mov
loopne
pop
lea
cmc
mov
sbbb
cltd
filds
jge
mov
nop
fcoml
pop
and
mov
inc
mov
int
sub
sti
lea
addb
popa
inc
xchg
sar
enter
inc
add
negl
mov
sar
push
andb
mov
aad
lods
addb
add
cmpsb
rolb
mov
jnp
cmpsb
and
sbb
xchg
in
js
sub
mov
xchg
push
inc
inc
sub
shrb
loopne
push
inc
and
sbb
sarb
imul
popa
outsb
push
sub
inc
imull
pusha
sub
rclb
mov
into
pop
cmc
mov
sbb
mov
fwait
xlat
stos
fnsave
fldt
inc
pusha
add
and
fcompl
jp
outsl
inc
push
sahf
inc
xor
mov
and
mov
sbb
inc
inc
cld
stc
inc
lods
dec
adc
or
loopne
fsubrs
loopne,pn
add
add
imul
shlb
mov
rolb
out
inc
dec
pop
pop
mov
pusha
or
pusha
and
dec
loopne
cmpsb
mov
inc
mov
push
sbb
jno
hlt
dec
pop
lahf
inc
jne
icebp
out
mov
push
or
and
jns
aaa
adc
or
xchg
add
jne
sbb
lods
scas
xor
pop
movsl
fcompl
pop
fldenv
add
add
mov
daa
jne
inc
shll
push
mov
es
add
push
mov
rcrb
hlt
push
test
pop
xchg
in
fdivrl
sub
pusha
pusha
push
or
jb
jnp
inc
loopne
hlt
imul
insb
push
jb
or
and
test
cmp
mov
into
add
lea
loopne
sbb
aam
insl
dec
mov
mov
inc
out
test
shlb
or
mov
iret
dec
mov
pusha
cmp
pop
add
and
and
ror
repnz
cmp
cld
xor
in
andl
and
sbb
add
and
mov
dec
int
mov
adc
add
loopne
mov
scas
loop
mov
push
pop
pop
rcrb
pop
ret
icebp
fldt
ds
ret
push
ret
mov
pusha
loopne
repz
and
ds
jg
jecxz
add
inc
jecxz
fisubl
hlt
fucom
jo
loopne
clc
gs
sub
and
inc
shlb
push
fdivr
dec
sbb
or
addr16
add
sbb
addb
pusha
xchg
ss
movsb
rol
andb
jno
jp
dec
in
movsl
mov
aas
aad
lret
mov
add
inc
mov
lcall
add
dec
adc
repz
and
fdivrl
pop
in
mov
xchg
cld
lcall
popa
or
scas
mov
pop
imul
mov
add
mov
mov
jo
movsl
scas
inc
mov
mov
loopne
mov
mov
fdiv
lret
in
mov
sti
test
mov
or
and
fnstsw
sub
pusha
mov
xchg
mov
test
add
leave
lods
sub
loopne
adc
adc
std
xchg
dec
fnsave
leave
shrb
mov
or
dec
mov
jbe
jle
mov
push
mov
dec
int
pop
sub
add
pusha
add
stos
mov
roll
and
pusha
test
rcl
test
loopne
dec
mov
mov
dec
in
push
lods
and
cmp
jb
shr
jmp
cwtl
add
cltd
and
adcb
push
pusha
add
and
and
out
mov
sbb
and
cmpl
pop
mov
faddl
