sbb
fidivs
iret
add
mov
ja
jmp
xchg
mov
mov
push
adc
add
jae
jo
mov
cmpsb
jbe
push
cmp
int3
pop
add
add
xor
fcompl
jmp
in
aad
ret
pop
inc
adc
test
mov
lret
stos
push
nop
add
mov
and
mov
and
movb
mov
sahf
jmp
add
add
repnz
imul
pushf
iret
enter
sub
xchg
xor
fsubl
lret
inc
add
mov
pusha
add
add
dec
imul
fbstp
mov
add
fisttpll
and
add
sahf
mov
nop
add
lds
mov
mov
lret
add
add
mov
into
xor
mov
nop
add
inc
add
or
lock
xchg
or
in
sub
push
push
push
push
push
push
cld
call
sub
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
mov
add
cwtl
jmp
jp
es
aas
insl
fwait
cmp
jge
cmc
add
mov
jb
mov
jmp
fs
push
jae
add
push
adc
mov
add
es
xchg
pop
dec
neg
filds
add
call
mov
add
add
ret
lahf
mov
aam
data16
sbb
testl
mov
cld
jmp
loope
mov
push
ja
gs
lock
inc
xor
jns
mov
sbb
sub
and
add
adc
in
sbb
loop
mov
jmp
dec
and
fldenv
dec
loop
mov
lods
repz
dec
movsb
pop
xchg
dec
cmp
xchg
lds
inc
mov
test
sahf
lods
aad
add
mov
add
scas
mov
or
pop
jno
add
mov
cli
or
add
xchg
dec
movlhps
into
or
push
add
mov
jmp
xchg
xlat
out
adc
mov
imul
add
cmpsb
cmpsb
outsb
cmpsb
bound
mov
mov
add
xchg
sub
add
sub
push
lods
cmp
push
addb
mov
and
outsb
cmpsl
xor
cwtl
xor
inc
mov
call
fsts
xchg
xor
pop
xor
dec
ljmp
inc
xor
mov
xchg
add
mov
ficompl
sub
xchg
mov
test
adc
mov
lcall
or
lock
xchg
add
icebp
loop
mov
loop
mov
js
jg
add
xchg
or
jnp
mov
mov
stc
ds
loop
mov
testb
imul
icebp
imul
xor
mov
xor
sbb
pushf
xor
mov
outsb
hlt
xor
mov
mov
aaa
lock
jmp
leave
jae
sub
push
sbb
mov
mov
mov
ret
scas
xor
cmpsl
lock
lahf
xor
mov
sbb
xlat
in
push
mov
ljmp
nop
add
stos
jno
mov
pushf
xchg
lock
and
mov
xor
mov
sbb
sbb
sbb
addb
pop
je
addb
into
out
insl
lcall
and
mov
scas
mov
fldcw
jp
pop
sbb
sbb
int
mov
cmp
mov
test
cs
push
addb
inc
lea
xchg
mov
add
add
sub
push
add
arpl
mov
and
pop
jb
mov
add
inc
add
pop
lods
push
test
push
push
or
or
mov
ljmp
ja
aas
and
aam
xchg
cmpsl
cld
cld
and
add
mov
add
cmp
aaa
push
pop
xchg
xchg
push
out
add
fimull
add
into
clc
rolb
mov
add
ret
pop
cmp
int3
lret
daa
xchg
mov
push
or
test
adc
mov
cmc
loop
mov
sub
arpl
imul
test
push
cmp
xchg
mov
add
je
lock
int3
inc
dec
pop
outsl
es
and
mov
jne
add
add
xchg
xor
add
sub
and
mov
or
add
out
sbb
pop
mov
das
xor
sbb
sub
and
mov
imul
lcall
xor
add
mov
sahf
and
lcall
pop
xchg
mov
cwtl
icebp
mov
mov
es
incl
int3
jecxz
push
cmp
sbb
add
imul
out
dec
mov
push
or
mov
inc
add
dec
pop
or
clc
adc
cmp
mov
fmuls
add
dec
clc
or
add
lahf
out
sub
xor
mov
adc
bound
mov
add
jno
xchg
push
dec
dec
int
add
add
xchg
leave
xchg
add
pop
adc
jle
lock
sbb
jmp
cmp
es
in
cltd
jmp
jno
xchg
fmull
cmp
mov
push
dec
loope
add
shll
mov
leave
nop
add
mov
add
add
add
or
adc
xor
adc
cli
loop
mov
mov
jb
mov
dec
shrl
mov
mov
dec
stc
xor
add
add
sub
pop
int
mov
mov
mov
test
xchg
xor
cmp
insb
xor
mov
pop
mov
dec
scas
bound
mov
jecxz
in
add
pusha
add
push
add
out
xor
pushf
and
mov
xchg
loope
add
lahf
sbb
movsl
or
jp,pt
push
add
loope
or
data16
sub
icebp
cs
add
idiv
fsubr
sarl
mov
cmp
jmp
adc
push
jno
addb
mov
je
insb
fwait
mov
add
xor
sub
adc
call
mov
add
jnp
enter
add
jo
mov
xchg
mov
dec
bound
mov
outsb
int
mov
jbe
inc
mov
fidivrl
clc
cmp
add
icebp
fdivrp
lea
xor
mov
icebp
jae
push
repnz
inc
jbe
adc
mov
into
pop
sbb
inc
rep
leave
mov
add
inc
insl
or
add
mov
mov
into
jmp
int
mov
lret
add
mov
cmc
pop
cmp
and
add
mov
mov
bound
mov
cld
loopne
mov
jecxz
inc
mov
es
shrl
repz
cmp
add
pop
fsubr
mov
mov
das
or
cmp
jae
sub
push
push
fwait
jp
sahf
not
arpl
bound
mov
loop
mov
add
stos
insl
lcall
cld
inc
push
sub
dec
jle
xchg
sti
insb
jle
aaa
mov
sub
lahf
lock
and
mov
scas
movsb
icebp
sti
mov
mov
inc
add
mov
sbb
mov
push
jp
inc
or
outsb
jns
add
sbb
sub
cmpsb
and
xchg
push
cmp
lcall
into
and
mov
mov
addr16
mov
sub
inc
dec
mov
pop
push
scas
int3
daa
repnz
or
cmova
lods
pushf
and
mov
ss
out
pop
lret
add
add
add
jne
shll
add
mov
rolb
mov
pushf
test
push
inc
leave
add
jnp
rcll
inc
pop
insl
jle
stos
dec
rolb
rolb
or
sub
jo
mov
mov
cmp
cmp
or
add
mov
xchg
inc
add
mov
cmp
pop
dec
imul
mov
repnz
add
push
and
mov
lea
add
xorl
popa
scas
push
pop
jne
packsswb
addb
btc
dec
loopne
mov
stos
call
shll
add
cmp
mov
and
and
mov
in
and
mov
in
push
add
outsb
mov
adc
mov
add
cmp
add
cmpsl
xlat
lds
sbb
aam
add
or
sub
movsl
lret
adc
stos
std
fs
stos
push
push
mov
mov
mov
or
addr16
sbb
or
stos
scas
nop
add
push
add
loope
sub
cmp
mov
inc
add
pop
iret
cmp
add
divb
mov
add
out
push
add
mov
cmpsl
or
loop
mov
cmp
and
mov
jge
jae
sbb
and
mov
inc
jmp
add
and
fiadds
pushf
pop
pusha
add
mov
jp
add
mov
cmc
jle
add
add
lea
cmp
test
pop
adc
aam
push
getsec
xor
ret
andl
xlat
les
add
sbb
sub
out
xor
mov
mov
add
xlat
aad
add
in
ud0
sbb
test
ja
xchg
add
jo
mov
add
ss
add
push
cwtl
mov
add
daa
repnz
add
sbb
sbb
cmc
adc
mov
aam
fwait
xor
inc
push
mov
popf
cmp
mov
add
imul
mov
jle
aaa
je
lcall
mull
das
and
mov
mov
sahf
lret
jmp
cltd
or
push
lret
or
or
setg
popf
out
add
adc
mov
jmp
cltd
in
mov
mov
push
push
mov
hlt
call
in
inc
add
or
adc
mov
jb
mov
inc
add
jae
or
xchg
pushf
and
push
js
ja
sub
xor
mov
jecxz
add
arpl
jns
outsb
clc
push
cli
cmc
cltd
mov
rolb
mov
dec
jae
add
add
add
stc
inc
pop
daa
xlat
aam
xchg
dec
jge
push
add
sahf
mov
stos
mov
rolb
fwait
ss
or
popa
mov
sbb
jg
ret
mov
std
rolb
mov
xlat
es
out
insl
xchg
xlat
addr16
ds
push
add
jg,pt
pop
sbb
and
mov
and
sub
addr16
pop
mov
pop
cmp
xor
ss
test
add
imulb
add
add
adc
mov
push
xchg
enter
mov
jne
dec
mov
sub
in
jp
in
mov
push
inc
add
pop
mov
aas
popf
stc
mov
jp
inc
or
shr
aam
in
dec
cmp
imul
dec
sub
cmp
add
pop
sbb
ficoml
add
fnstsw
sti
sbb
jge
imul
mov
add
push
test
outsl
and
mov
inc
add
add
ja
decb
and
fisttps
dec
aas
ljmp
shl
mov
in
add
add
cmp
pop
in
cmp
test
mov
js
add
rolb
fisubs
xor
mov
addb
fsubs
lcall
cmp
incb
jmp
add
and
pop
inc
add
xchg
lds
in
stc
sub
mov
les
inc
xadd
mov
cmpsb
data16
inc
sbb
xchg
add
movsl
clc
mov
mov
movsb
jmp
sbb
in
push
mov
jne
push
push
pop
add
mov
rolb
mov
dec
scas
repz
add
mov
add
mov
add
xor
mov
sub
add
mov
arpl
add
add
js
in
inc
idivl
scas
mov
jo
mov
add
rol
mov
scas
test
out
adc
xchg
lods
and
push
mov
mov
imul
mov
je
or
in
add
in
push
jae
jb
mov
mov
out
inc
sbb
add
mov
add
addb
mov
nop
add
inc
add
mov
xchg
in
mov
add
cmpsl
int3
xchg
sbb
add
mov
in
popf
lret
mov
xchg
jecxz
insb
pop
adc
out
mov
ret
insl
out
mov
or
inc
jno
or
add
dec
lea
stc
fmuls
outsl
into
ret
nop
add
mov
lret
pusha
add
add
mov
mov
mov
dec
jo
mov
mov
or
pand
clc
cmpsb
mov
inc
fs
add
mov
mov
lds
mov
fistps
fstpt
mov
dec
and
mov
inc
or
inc
loope
jp
cltd
mov
pop
fiadds
sbb
add
int3
inc
insb
mov
jle
fs
sub
add
repnz
hlt
jae
mov
sbb
int
pop
sbb
mov
add
mov
xor
movsl
sbb
test
lret
adc
nop
add
loopne
mov
lret
bound
mov
std
jo
mov
int3
or
cmp
dec
cmpsb
sub
mov
mov
push
insl
cmp
mov
jne
jle
sbb
xor
mov
popa
sub
cwtl
adc
mov
or
out
pop
repz
mov
xchg
cmp
insb
adc
mov
out
lock
sub
mov
std
or
cmp
sbb
inc
in
add
mov
loop
mov
mov
cmp
dec
sub
push
or
insl
xchg
fiaddl
xor
mov
jecxz
scas
dec
jae
add
add
push
pop
enter
outsl
adc
mov
adc
xchg
rorl
mov
jns
ds
mov
cmpsb
dec
popf
jbe
add
aam
pop
push
add
mov
mov
daa
xchg
cmpsb
xor
mov
mov
mov
testl
repz
add
fbstp
idivl
addl
xchg
push
add
add
mov
addb
and
mov
icebp
test
movlhps
add
arpl
rolb
movsl
in
int
cmpsl
sahf
push
sbb
out
xor
std
fdivr
pop
cmpsb
testb
mov
cmp
add
adc
add
push
jecxz
cwtl
push
cmp
insl
jmp
mov
aaa
js
add
adc
mov
push
ds
cli
stos
mov
cmp
pop
jg
add
sub
mov
ss
popf
loopne
mov
fneni(8087
add
mov
push
mov
pop
cli
ds
addb
jge
lcall
xor
jg
xchg
mov
cmp
add
mov
cld
adc
mov
je
or
lahf
xor
dec
lret
add
add
add
mov
sbbl
in
in
lods
adc
mov
jmp
cmpsl
sub
add
mov
mov
inc
push
out
cs
outsb
sbbl
rep
inc
add
add
sbb
mov
add
mov
lods
sbb
pop
cmp
cmpsl
incb
fildll
mov
out
fidivrs
das
inc
mov
mov
mov
mov
mov
pop
xchg
jnp
or
jo
mov
and
mov
outsb
je
inc
mov
lahf
mov
mov
mov
jle
dec
iret
dec
dec
fnstsw
dec
pop
jecxz
sbb
mov
stc
pusha
add
sub
bound
mov
xor
mov
in
in
cmpsb
jnp
call
lds
add
xchg
punpckhbw
add
into
mov
lret
mov
dec
pop
repz
repnz
mov
mov
lahf
cmpsl
orl
nop
add
cltd
fcmovu
cmpsl
mov
xchg
add
mov
mov
mov
sbb
movsw
sbb
add
xchg
add
jnp
push
aaa
sahf
sub
rolb
mov
adc
xor
mov
out
test
add
faddp
outsl
pop
adc
mov
inc
inc
hlt
sub
in
in
push
dec
roll
mov
or
jmp
add
jecxz
lahf
xchg
and
enter
xchg
in
mov
mov
and
mov
dec
adc
mov
mov
in
sbb
sbb
int
xchg
popf
mov
fstl
addb
loopne
mov
sub
enter
std
dec
roll
sub
push
add
or
add
imul
mov
lods
jg
ljmp
daa
add
mov
and
xor
add
in
sub
in
jno
and
mov
das
mov
mov
pusha
add
add
mov
push
addb
scas
movsl
nop
add
mov
repz
add
or
and
stos
cmp
add
lahf
adc
mov
add
adc
pop
fucom
imul
addb
leave
fsubl
in
fwait
loope
jge
add
mov
mov
enter
fldt
mov
aas
lock
imul
or
inc
cli
dec
clc
mov
mov
insb
dec
je
add
or
adc
mov
mov
sbb
add
xchg
dec
and
mov
orl
aas
cwtl
inc
jae
add
add
lret
int
mov
sbb
jo
mov
mov
into
scas
add
mov
sub
cld
xchg
sbb
jno
pop
lea
pop
sahf
push
add
jmp
mov
ja
idivl
cmp
test
mov
mov
mov
scas
bound
mov
dec
hlt
sub
std
insl
xor
mov
pop
mov
add
hlt
inc
mov
cmp
addb
cmpsb
cld
jmp
mov
jnp
es
in
cld
movsb
ja
js
ret
cmc
adc
mov
sbb
mov
lcall
mov
add
mov
dec
rolb
mov
lar
mov
dec
sbb
outsb
push
push
or
add
jmp
xchg
in
cmp
divb
out
insl
jecxz
bound
mov
outsl
mov
add
fmulp
cmp
scas
pop
push
dec
repnz
and
mov
rolb
mov
ja
pop
dec
mov
jo
mov
movsb
jp
cld
imull
movsb
or
mov
jge
push
pop
lods
mov
mov
mov
push
add
mov
add
mov
lds
add
lcall
pop
jg
cmp
xchg
add
lahf
cmc
imul
mov
add
out
les
mov
test
out
add
cmc
loope
xchg
or
or
push
jno
mov
sbb
cmp
mov
xor
push
mov
adc
mov
sbb
js
scas
jecxz
cmp
jl
ja
out
rorl
lock
mov
add
rolb
mov
js
pushf
movsb
fsts
add
add
in
mov
xor
mov
pop
sbb
data16
mov
addb
mov
shll
xorl
add
add
jae
xchg
mov
lds
mov
adc
pop
pop
xor
pop
sub
adc
xlat
and
mov
cwtl
add
add
in
sbb
mov
mov
loop
mov
pop
in
sub
pop
pusha
add
add
or
sub
mov
mov
test
sbb
mov
mov
xchg
add
add
insb
daa
jnp
sahf
lods
mov
add
pop
popf
push
aaa
mov
xchg
addb
sub
aaa
dec
adc
add
jg
scas
xchg
push
jbe
jb
mov
add
ljmp
sti
pop
push
add
fimull
push
sub
cmp
push
sbb
push
pop
dec
stos
and
mov
push
inc
cwtl
adc
mov
aas
push
loop
mov
push
in
add
rorl
je
rolb
mov
scas
std
adc
and
mov
repz
cltd
sub
jno
sub
data16
pop
arpl
pop
xchg
add
in
f2xm1
add
add
xor
mov
fcomps
in
push
add
inc
add
icebp
sub
add
es
int
sub
jl
pop
int
xor
mov
or
loop
mov
and
jo
mov
push
les
scas
loope
enter
pop
lahf
ljmp
push
add
mov
mov
push
pop
jno
add
test
inc
xchg
push
dec
mov
fstpl
fsts
lds
add
bswap
cmp
and
js
xchg
in
rolb
mov
add
mov
xlat
bound
mov
mov
add
xchg
sub
imul
stos
das
add
mov
lret
add
mov
mov
jmp
out
cli
aad
push
pop
pop
jnp
jge
addb
int
int3
pop
mov
sub
mov
sbb
sbb
enter
mov
cmpsl
fincstp
iret
js
scas
cmp
add
add
sbb
cmpsb
js
xchg
popl
cwtl
mov
inc
xor
mov
xor
add
lea
mov
lret
aaa
jge
or
xchg
push
or
sbb
add
fs
sbb
xchg
sbb
xor
roll
mov
daa
inc
cmc
ret
ljmp
cmp
add
lahf
cmp
xor
sub
xor
lret
pop
int3
xor
mov
in
sub
cmp
fstp
mov
dec
add
cmpsl
cmpsl
mov
mov
out
cwtl
ss
jg
cwtl
mov
mov
daa
cmp
cmp
lods
mov
inc
add
xlat
add
xor
xor
mov
fimuls
es
mov
mov
es
add
sbb
lods
in
pop
leave
test
fsubs
mov
inc
ja
add
add
cmpsb
add
push
add
mov
fwait
cmp
mov
or
loop
mov
jno
decb
push
pop
stos
bound
mov
fisubrl
outsl
or
adc
mov
add
leave
movl
xchg
add
mov
ds
jbe
push
add
pop
mov
cs
add
loop
mov
inc
add
mov
xchg
inc
add
xchg
add
or
mov
jg
mov
stos
push
push
cltd
inc
insl
push
inc
sub
mov
mov
aas
ljmp
sub
add
mov
daa
add
jg
mov
pop
pop
jecxz
pop
notb
mov
add
add
inc
in
add
adc
pop
repz
or
sti
cmpsb
sub
popf
outsl
xor
add
mov
stos
out
dec
sbb
mov
mov
jg
insb
jns
sbb
cmp
outsl
lahf
pop
cli
and
mov
idiv
xor
iret
roll
mov
divl
inc
add
jle,pt
shrl
and
mov
mov
push
mov
cmp
mov
scas
pusha
add
add
mov
sbb
add
inc
nop
add
mov
orl
rcll
cmp
add
add
mov
daa
mov
adc
outsl
push
insl
inc
popa
shll
mov
push
out
adc
fimull
add
lock
orl
push
add
add
scas
data16
xlat
fwait
dec
test
xchg
test
cmpsl
xchg
push
sahf
ljmp
es
add
fstpl
and
ds
add
and
adc
xor
or
mov
mov
add
adc
popf
inc
testl
mov
add
cmp
mov
negl
add
add
in
fsubp
add
adc
add
cs
cld
and
mov
mov
mov
add
or
ljmp
mov
add
push
push
add
sarl
inc
add
lods
cwtl
add
add
xor
enter
mov
daa
push
push
rolb
mov
jno
rolb
mov
add
ficomps
push
add
inc
inc
sub
inc
pop
cmp
mov
shll
cwtl
sub
stos
sahf
lds
dec
add
mov
xchg
imul
and
jo
mov
pop
jle
add
add
jl
dec
test
lret
xchg
mov
jle
out
dec
out
imul
pop
popl
add
jle
and
sub
inc
add
add
clc
sbb
mov
ficoml
inc
mov
aaa
mov
sbb
push
add
mov
xchg
dec
pop
int
and
mov
je
and
mov
into
scas
push
test
rolb
mov
icebp
insb
add
repz
jbe
lock
addb
repz
push
xor
add
push
cwtl
fs
scas
xchg
add
test
insl
inc
arpl
mov
xor
mov
std
fisubrl
movsb
ja
jbe
pop
sub
push
in
add
add
adc
cwtl
mov
add
add
push
inc
mov
mov
xchg
lret
add
in
mov
mov
in
dec
pop
and
jge
cli
gs
out
pop
and
mov
movsb
add
mov
jecxz
call
fisttps
push
push
in
scas
inc
std
adc
mov
sub
push
add
popf
jl
add
xchg
cld
movsl
loope
add
jae
add
ja
pop
test
pop
jno
popa
out
cwtl
pushl
mov
push
dec
lock
ret
or
sub
add
popf
int
inc
stc
cmpsb
pop
xchg
pop
and
mov
pop
out
iret
out
dec
dec
adc
mov
mov
mov
adc
push
mov
mov
xor
pop
aaa
jne
stos
popa
stos
sub
add
adc
cwtl
push
addb
push
cld
sahf
push
add
lea
add
xchg
add
jg,pt
lock
adc
mov
cmp
jecxz
lods
jbe
pop
insl
cmp
mov
scas
push
add
and
mov
add
outsl
mov
insb
lcall
mov
inc
add
add
je
add
dec
dec
mov
or
sbb
lods
dec
mov
ss
add
pusha
add
add
rcr
mov
insl
cld
xor
bndstx
mov
pop
mulb
add
cmp
mov
dec
mov
mov
aas
jo
mov
adc
cld
push
sub
xorl
cmp
cmpsb
jg
mov
add
dec
or
add
dec
inc
pop
ret
inc
push
xchg
mov
jae
call
lcall
rorl
pop
cli
arpl
loop
mov
test
ljmp
paddd
add
scas
dec
imul
aam
adc
mov
icebp
dec
adc
mov
jmp
dec
aaa
adc
std
or
hlt
pop
jle
push
jge
dec
add
add
mov
aad
lcall
mov
movsb
test
outsl
fcmovnb
psubd
adc
mov
es
inc
add
mov
add
mov
pop
mov
iret
push
aad
addb
cmp
push
pop
xchg
add
scas
mov
add
mov
movsb
fmuls
loope
ret
pop
mov
mov
jg
test
mov
add
mov
add
add
push
adc
jge
in
stos
jns
add
inc
int3
sbb
ret
dec
test
cli
pop
push
push
cmpsl
dec
mov
and
mov
pop
dec
decb
out
int3
xchg
iret
mov
mov
sarl
add
scas
mov
sub
mov
add
cld
adc
or
add
rol
scas
sub
push
sbb
movzbl
add
adc
inc
fcmovu
inc
sbb
add
add
mov
dec
mov
pop
dec
pop
mov
add
jl
add
xchg
mov
mov
lea
or
outsb
dec
push
loop
mov
imul
int
mov
mov
add
cs
int3
xchg
and
mov
stc
add
and
mov
adc
stos
sti
icebp
xchg
addb
fxch
and
mov
inc
mov
aam
icebp
lret
jp
jns
add
push
inc
add
adc
mov
aas
addb
inc
jmp
sbb
and
mov
sbb
sti
enter
push
xchg
xchg
or
add
out
hlt
mov
incl
add
lcall
mov
mov
add
mov
enter
gs
cmp
add
aam
push
loope
add
and
adc
mov
xor
mov
add
xchg
out
xchg
pop
mov
dec
cmp
pop
add
add
xor
stos
lahf
fisttpl
sub
add
xor
mov
xchg
dec
lds
ljmp
xor
mov
mov
pop
scas
fldl
push
xor
jecxz
sarl
sarl
jo
mov
out
rcll
mov
sbb
pop
adc
mov
sbb
and
ret
sub
add
jb
mov
mov
mov
add
add
mov
fistpl
or
jge
inc
add
outsl
mov
mov
cmp
push
dec
and
mov
scas
mov
add
insl
aam
mov
xchg
add
mov
add
add
add
fxch
add
mov
pushf
cwtl
leave
xor
aas
add
adc
mov
xchg
add
cmpsl
jne
or
jb
mov
dec
lods
fdivrs
cmpsl
dec
jp
pop
adc
nop
add
mov
mov
scas
push
aaa
inc
out
mov
cmpsb
cmp
cmp
out
fimuls
push
pop
or
call
mov
mov
pop
addr16
addb
cs
aad
sub
mov
movsb
insl
cmp
cltd
mov
mov
loopne
mov
mov
jmp
add
inc
jp
xchg
lea
xor
sub
rolb
xor
add
add
stos
push
in
sub
mov
lods
leave
popf
out
ljmp
mov
aad
insl
sub
cmp
mov
roll
mov
scas
xchg
add
xor
dec
imul
mov
mov
lret
xchg
aad
add
lret
and
mov
inc
das
sti
call
push
cwtl
roll
jns
das
movsb
push
xor
mov
arpl
pop
jecxz
dec
lahf
leave
lods
mov
mov
adc
dec
jae
pop
cmp
or
add
add
loope
xor
mov
test
jbe
add
jmp
and
sti
ror
add
pop
int3
aaa
dec
adc
mov
pop
push
pop
mov
iret
fcompl
add
ficomps
shll
jmp
mov
test
add
fistps
xchg
jmp
lret
out
inc
movsl
sub
adc
xchg
jl
push
pop
loop
mov
dec
lret
push
xor
mov
xchg
adc
mov
fildll
pop
leave
insb
dec
and
mov
repz
repnz
lods
lret
pop
xor
out
add
xor
xor
mov
fwait
mov
fistpll
iret
push
cmp
fistpll
repz
gs
dec
inc
daa
push
cwtl
ja
mov
dec
mov
mov
je
dec
insl
dec
popa
scas
push
movsl
push
aaa
mov
mov
loope
mov
mov
add
je
inc
scas
xchg
add
dec
stos
sub
cmp
xchg
add
add
negl
jbe
fwait
and
cmpsl
cmc
mull
nop
add
rolb
test
and
mov
stos
push
sbb
add
mov
cmp
and
adc
mov
or
cmp
gs
mov
sbb
sahf
sub
dec
hlt
xor
and
mov
mov
push
sub
inc
add
add
push
clc
rcll
adcl
out
add
push
or
add
jb
mov
mov
data16
les
add
add
add
jae
mov
les
lods
xor
jle
jle
cmpl
cmpsb
mov
inc
inc
mov
pop
xchg
lcall
dec
lods
add
ret
hlt
sub
mov
rolb
mov
xorl
mov
cltd
sbb
and
mov
add
mov
jbe
add
mov
fistpl
mov
xchg
pop
aaa
int
mov
jne
cmpsb
stc
sbb
mov
sbb
popa
into
cwtl
adc
mov
aam
data16
clc
mov
pop
mov
popf
dec
bound
mov
mov
roll
mov
imul
xlat
mov
inc
cmc
mov
mov
xchg
pop
mov
mov
and
mov
cmp
or
pop
mov
mov
push
xor
mov
lds
dec
jmp
popa
cmpsl
test
iret
mov
cltd
mov
jae
add
add
jbe
add
add
or
pop
jmp
ficoms
push
es
and
mov
imul
mov
mov
mov
mov
imulb
inc
add
int3
insl
pop
add
mov
adc
mov
mov
pusha
add
mov
mov
xchg
push
mov
cs
sbb
dec
ljmp
sbb
mov
add
aam
inc
cld
jp
aam
lock
add
push
add
push
out
into
cmp
jge
or
add
mov
add
outsb
mov
cmp
subl
mov
mov
push
loopne
mov
jmp
inc
add
push
add
mov
add
and
mov
aas
jnp
inc
push
inc
jo
mov
dec
xor
mov
js
lods
dec
sbb
cmp
loopne
mov
dec
mov
jp
shll
cmp
dec
loopne
mov
cmp
imul
lcall
sub
adcl
xchg
cs
push
add
xor
add
dec
fwait
lods
movsl
inc
js
add
mov
mov
dec
mov
loope
cli
jmp
cmp
push
xor
aas
or
or
add
or
add
mov
ja
dec
das
stos
and
add
mov
add
add
rolb
ret
aaa
jb
mov
mov
shl
hlt
inc
negb
dec
xchg
je
jbe
mov
mov
in
add
leave
mov
mov
test
cmpsb
cmp
add
addb
push
push
ret
inc
add
in
mov
mov
cmp
xchg
ret
lds
xchg
add
mov
mov
jae
mulb
mov
out
push
push
rolb
mov
adc
add
scas
dec
sbb
lea
cmpsl
adc
mov
jne
mov
mov
or
or
loop
mov
mov
or
jecxz
xchg
addb
jmp
ja
cmpsl
aaa
xchg
int
inc
mov
xchg
stos
xchg
lds
dec
and
shrl
jg
test
into
stos
cwtl
fsub
loopne
mov
out
out
jle
fsubs
pusha
add
pop
mov
lock
pop
jg
sub
mov
pop
stos
jno
add
and
rolb
arpl
push
cld
sbb
popa
push
add
mov
fwait
or
xor
and
pop
sbb
mov
jmp
rcrl
mov
lods
in
jp
into
push
rolb
jmp
icebp
aas
ss
mov
mov
stos
dec
mov
subl
add
mov
inc
inc
ret
mov
and
mov
movsl
cmc
inc
rolb
mov
mov
mov
test
fstpl
xchg
xor
cwtl
or
mov
add
mov
xor
mov
filds
jne
add
mov
in
add
in
push
out
xchg
in
dec
rolb
mov
mov
add
mov
rolb
mov
fdivr
ret
mov
mov
ljmp
dec
jns
test
or
fidivrl
xchg
add
push
insb
mov
adc
mov
add
mov
jo
mov
ret
out
add
iret
jno
push
pushl
clc
mov
jnp
add
pop
dec
hlt
sbb
test
mov
cmp
jne
insl
loopne
mov
dec
adc
lahf
jg
mov
fistps
push
add
add
add
mov
cmp
hlt
call
add
icebp
adc
mov
bound
mov
test
jg
hlt
inc
add
sub
push
add
xchg
clc
arpl
pop
xor
adc
mov
std
add
fs
jno
push
out
adc
push
add
mov
pop
stos
out
adc
mov
dec
inc
popa
mov
add
mov
stos
mov
jmp
icebp
int
jl
fists
mov
add
xchg
add
or
add
pop
jl
inc
mov
call
push
stos
addb
inc
inc
add
mov
xchg
add
or
mov
add
mov
push
add
xor
xchg
and
clc
insb
push
test
add
mov
push
faddl
mov
pushf
mov
xlat
pusha
add
add
stc
ds
fs
les
outsl
mov
ja
aas
mov
fwait
mov
mov
pop
ja
dec
or
inc
add
inc
add
mov
mov
dec
lods
mov
cmpsb
fistps
adc
mov
xor
call
iret
sub
mov
pop
mov
sbb
sbb
negb
and
mov
int3
mov
add
jl
inc
lret
adc
mov
add
std
add
push
addb
aaa
mov
xchg
mov
aam
cmp
test
adc
jns
add
xchg
out
mov
stc
xor
mov
add
fs
cmp
pop
xchg
cli
lock
mov
add
mov
loop
mov
xor
push
test
jno
outsl
test
mov
bound
mov
insb
ja
add
mov
into
jns
mov
mov
mov
add
int3
addb
lds
and
add
lock
mov
xchg
inc
sub
add
les
pusha
add
sti
or
iret
in
cmc
test
in
cmpsb
pop
dec
mov
mov
pop
popf
aad
loopne
mov
add
mov
sub
test
add
cwtl
enter
jmp
dec
mov
add
add
in
mov
loope
xor
addb
cmc
sbb
adc
jne
sub
add
push
insl
insb
addr16
aas
idivb
ja
inc
push
stos
dec
nop
add
test
rolb
fs
xor
mov
lahf
int
add
jae
add
adc
mov
out
adc
add
adc
mov
pushf
sub
xor
push
add
add
lock
cmp
pop
adc
in
sbb
dec
or
icebp
xchg
clc
mov
mov
ret
mov
add
outsb
loop
mov
mov
or
xor
aaa
stos
xchg
test
sbb
add
daa
mov
cmc
test
add
add
cmp
jb
mov
cmpsb
mov
int
test
stos
fwait
jae
or
negb
xchg
cmp
out
xor
mov
mov
pop
rolb
mov
add
lea
jnp
pusha
add
arpl
add
mov
pop
es
cmp
rolb
mov
push
aad
inc
aas
movsl
xor
mov
add
or
pop
xor
fsubp
sbb
sub
xor
mov
push
ss
mov
cmp
xchg
push
imul
outsl
dec
les
addb
movsl
out
cltd
pop
or
add
scas
idivb
ret
xor
mov
jne
rol
or
mov
lahf
aaa
push
dec
out
cmp
jns
cmp
mov
fistpll
iret
push
xchg
or
add
mov
xor
mov
push
add
popa
nop
add
fwait
adc
icebp
push
add
mov
lret
add
cltd
push
movsb
pop
cmp
jb
mov
movsb
adc
mov
mov
nop
add
push
aam
xchg
or
sbb
fs
in
fisttps
jo
mov
cmp
lods
inc
add
xchg
jp
jp
lods
in
sbb
xchg
cwtl
fwait
xchg
add
add
leave
jns
je
jle
pop
pop
mov
add
mov
jge
out
clc
addl
add
mov
stos
add
mov
mov
psllw
and
sub
dec
pop
les
xor
inc
pop
mov
bound
mov
mov
in
mov
sti
sub
push
xchg
jo
mov
jnp
add
mov
mov
xor
cmp
popaw
cmp
cld
adc
xlat
xchg
rcrl
mov
mov
movsb
dec
xchg
push
mov
add
popa
adc
imul
hlt
fnstenv
lea
mov
add
cmp
jb
mov
test
adc
push
sbb
xor
add
push
lods
in
jns
or
inc
add
xor
mov
mov
inc
leave
xor
pusha
add
mov
add
adc
add
inc
pop
push
add
mov
es
ss
mov
aaa
mov
dec
sbb
xlat
lahf
ret
xchg
push
div
or
add
fldl
add
push
in
jo
mov
mov
mov
stos
mov
mov
jmp
iret
inc
xor
dec
loopne
mov
xchg
das
xor
sub
test
jno
jl
dec
dec
pop
jmp
fninit
xchg
jge
roll
mov
mov
mov
add
xchg
call
add
imul
add
adc
mov
add
pop
in
add
test
jns
jns
std
push
pop
mov
or
mov
mov
mov
jo
mov
xor
mov
add
adc
mov
icebp
sahf
hlt
movsl
jns
pop
mov
imul
mov
mov
adc
rolb
mov
mov
xor
add
pop
imul
jb
mov
mov
inc
inc
push
jecxz
je
mov
add
mov
addb
and
mov
or
add
in
mov
cli
xor
mov
mov
fnstsw
test
xor
dec
lret
and
cmc
inc
add
jo
mov
pop
sbb
rolb
mov
fdivrl
mov
xchg
push
pop
inc
movsb
sub
lock
and
mov
add
jg
mov
scas
dec
add
mov
jns
stos
data16
add
stos
adc
or
sbb
jno
lret
xor
push
mov
or
test
cmp
mov
mov
xchg
add
scas
dec
pop
fists
sbb
mov
or
push
xor
in
rolb
mov
dec
xchg
add
push
movsl
mov
add
add
repz
mov
mulb
jnp
mov
mov
mov
add
adc
mov
pop
mov
faddl
in
out
nop
add
lea
lret
sti
movsl
xchg
add
sbb
fnsave
pusha
add
add
sub
insb
jne
xor
mov
lret
xchg
jle
addb
in
xor
nop
add
mov
xchg
pop
pop
mov
add
mov
mov
cmc
pushf
mov
ss
add
adc
add
jmp
lret
lods
xchg
mov
mov
and
mov
mov
add
adc
mov
jecxz
loopne
mov
stos
lcall
sbb
add
hlt
mov
sbb
add
fsubp
add
gs
push
addb
enter
or
fcmovnb
stos
adc
or
loopne
mov
sub
insb
aas
sti
xchg
ret
imul
fwait
sahf
cmpsl
lock
loop
mov
or
xlat
xor
mov
adc
add
add
add
mov
adc
int
fucomi
mov
andl
xor
js
adc
mov
push
xchg
daa
sbb
mov
inc
lock
gs
mov
daa
sub
fwait
sub
dec
push
add
movb
jne
jg
movsb
add
loopne
mov
sbb
pop
and
rorl
add
mov
ds
mov
fists
out
pop
xchg
sub
nop
add
add
add
cmp
push
push
and
mov
int
xorl
add
subl
add
lea
mov
add
sbb
icebp
popf
push
inc
cmp
jecxz
stos
adc
mov
adc
mov
popf
fwait
or
add
pop
lahf
xchg
scas
sahf
xlat
ret
scas
pop
clc
inc
add
inc
lea
add
sub
inc
add
pop
cmp
inc
lock
inc
sub
or
jge
pusha
add
pop
pop
dec
icebp
and
icebp
insl
mov
divl
aam
jge
add
mov
out
push
testb
cmp
mov
clc
pop
ja
xchg
pop
inc
pop
hlt
dec
in
ljmp
mov
or
js
icebp
dec
cmp
test
mov
xlat
xor
ret
roll
loope
scas
mov
dec
cmp
ljmp
cmp
add
clc
mov
lds
cld
cmp
add
ret
nopl
push
add
aas
out
repnz
mov
add
add
movsl
and
mov
lds
inc
cltd
sub
push
push
rcll
add
mov
lods
cmpsb
or
add
mov
loop
mov
rorl
push
ret
push
lcall
jp
or
jl
add
movsl
loop
mov
xor
scas
sbb
ss
bound
mov
xchg
dec
gs
xor
lea
out
scas
jl
mov
mov
mov
dec
int3
cli
mov
add
fldl2e
ds
gs
loop
mov
or
mov
adc
popl
ret
loop
mov
enter
mov
insl
push
jne
fildll
std
jo
mov
push
or
pop
pusha
add
mov
mov
add
add
scas
or
adc
mov
jb
mov
jg
insl
mov
shll
add
adc
xor
add
imul
add
cmp
imul
fidivl
add
in
fistpl
dec
dec
sbb
add
xchg
cmp
imul
in
rcrl
push
fcmovne
or
enter
mov
cli
ljmp
mov
js
push
outsl
stc
inc
gs
mov
xor
mov
xor
clc
ljmp
popa
xor
insl
mov
movsb
mov
mov
mov
or
dec
aad
cmpsb
jo
mov
inc
add
add
add
add
mov
add
mov
push
fstpl
rolb
mov
jp
jae
xorl
aas
mov
lcall
mov
mov
outsl
shl
push
sub
pop
dec
cmpl
and
gs
psrlq
push
sbb
mov
jge
pop
xchg
mov
mov
inc
jb
mov
lods
mov
pop
outsb
push
lods
cmp
mov
add
and
mov
inc
andl
repz
cmp
xchg
sub
ljmp
sub
mov
inc
icebp
add
mov
orl
mov
aam
adc
mov
jl
sbb
add
push
inc
pop
test
and
mov
mov
add
jle
add
xor
or
ret
test
add
les
movsl
mov
or
fcomi
jle
add
jae
add
pop
iret
push
add
mov
push
dec
jnp
scas
add
mov
aaa
push
jge
xchg
xor
mov
pop
jle
pop
sub
adc
mov
add
fs
mov
mov
mov
add
mov
jl
cmpsl
lret
xchg
sub
xor
and
mov
cs
xlat
sti
sub
mov
sbb
jge
push
jno
test
loopne
mov
stos
dec
loop
mov
pop
jle
mov
dec
adc
mov
adc
jmp
push
mov
mov
leave
aaa
pop
call
cli
movb
add
addb
mov
push
or
sahf
stos
ss
popa
idiv
mov
lock
sbb
cmp
inc
clc
sbb
jbe
dec
cwtl
addb
push
sbb
outsl
mov
leave
jnp
mov
mov
into
movb
mov
mov
rcll
mov
test
xchg
mov
movsb
clc
push
and
mov
enter
lock
xor
pop
mov
movsl
loope
insl
xor
mov
inc
scas
pop
int3
aas
xchg
add
adc
add
pop
test
popf
push
scas
pushl
mov
ljmp
add
test
lcall
cmc
mov
xor
outsl
or
push
pop
loop
mov
inc
not
jae
push
mov
jl
insl
outsl
sti
xchg
aad
loopne
mov
jne
add
aaa
mov
pusha
add
rcrl
test
mov
mov
loopne
mov
jp
xor
mov
mov
and
mov
sbb
add
push
push
add
rolb
mov
insb
push
js
pusha
add
mov
lret
cltd
xor
mov
sbb
ucomiss
push
jo
mov
mov
pop
lds
push
stos
jae
out
in
jl
mov
sub
mov
ret
add
ret
daa
inc
ret
mov
into
addr16
adc
mov
add
mov
shll
adc
mov
mov
mov
mov
mov
push
add
add
mul
ret
jg
pop
inc
into
xor
mov
add
mov
cmpsl
xchg
or
add
rcrl
shl
inc
xor
push
fisubs
mov
cmpsb
aad
icebp
mov
push
add
jl
dec
mov
dec
jnp
cmpsb
mov
ret
cmc
out
xlat
ret
clc
fistps
mov
iret
out
out
inc
adc
mov
cmp
sti
arpl
add
mov
mov
add
add
mov
add
stos
test
mov
ljmp
sti
cltd
pop
jecxz
add
es
xlat
add
or
add
mov
add
mov
inc
add
loope
sub
ret
imul
add
mov
insl
jo
mov
add
fdivp
mov
ss
mov
jae
add
pop
lahf
xor
mov
xchg
sbb
divl
cwtl
mov
mov
push
add
arpl
and
mov
push
pop
rorl
std
sbb
adc
and
sbb
jae
add
add
jne
js
aaa
rcrl
add
add
rolb
mov
add
and
fmull
cld
push
lret
out
cltd
shll
jae
sub
es
adc
push
jae
pop
jl
adc
inc
add
mov
inc
add
add
leave
push
aad
push
testb
mov
adc
cli
pop
clc
jno
add
test
add
cmp
jecxz
jne
iret
fldt
cmp
jae
and
add
out
cli
lcall
mov
inc
pop
aas
push
pop
addb
fldl
ret
stos
jecxz
leave
pop
dec
dec
pop
loop
mov
repnz
addr16
nop
add
mov
dec
lock
mov
push
add
mov
cmpsb
insl
fwait
jbe
add
add
aas
in
adc
add
stos
aas
sub
mov
xchg
lret
mov
fisubrl
pushf
adc
mov
add
mov
das
and
mov
mov
les
and
add
add
jmp
mov
jbe
xchg
inc
add
adc
pop
xor
lock
mov
add
mov
pop
inc
push
cmpsb
and
mov
hlt
pop
lret
stos
mov
mov
in
repz
cmp
jo
mov
addb
loope
jmp
cmp
lret
mov
mov
sbb
push
add
add
pushf
sbb
pop
out
scas
mov
std
pop
int
xchg
in
jno
xchg
rcll
add
xchg
push
movsl
addb
ljmp
push
add
ret
jmp
pop
xorl
mov
add
imul
mov
jge
jnp
lods
pop
cmpsl
push
cmp
pop
jge
mov
iret
lods
mov
mov
stc
and
mov
rolb
mov
sbbl
mov
outsl
roll
test
mov
lods
adc
enter
inc
rolb
mov
add
add
mov
and
mov
cmp
sub
orl
fiadds
add
mov
in
xchg
test
xor
mov
add
add
fstpl
imul
mov
bound
mov
je
jnp
push
lret
movsb
xchg
lds
clc
add
mov
gs
mov
cmp
sbb
ficomps
xor
mov
fldcw
ljmp
add
xchg
test
sub
aad
adc
mov
fcoms
add
xor
dec
or
punpcklwd
dec
jnp
jmp
arpl
dec
xor
xor
push
adc
mov
dec
sub
test
add
adc
mov
je
ficompl
shll
mov
out
aad
xchg
cmc
pop
pop
lea
add
push
xchg
and
mov
add
jle
dec
jl
pop
lret
sti
xor
out
xchg
adc
mov
cmc
call
jno
add
ja
idivb
xchg
rcrl
test
mov
jg
divb
sub
mov
data16
mov
and
mov
cwtl
mov
out
or
mov
mov
add
outsb
hlt
repz
in
cltd
push
pusha
add
mov
fmulp
cmp
push
add
mov
and
or
jmp
xchg
xchg
and
fdivrl
jns
xchg
xchg
mov
add
pop
mov
jp
aaa
test
mov
fistps
mov
xchg
xchg
xchg
lret
loopne
mov
mov
mov
mov
sbb
cmp
repz
add
loope
sub
es
sub
xlat
sbb
fwait
cltd
sarl
stc
xchg
push
add
mov
pop
pop
xchg
lret
rcll
aas
out
mov
test
imul
and
add
add
call
std
fstpl
aad
ret
mov
mov
jg
adc
sub
add
mov
push
cltd
fistl
sahf
movsb
out
int
int3
push
dec
sub
push
add
mov
add
mov
cmp
mov
repnz
mov
cs
into
gs
mov
add
inc
pop
test
jns
and
mov
iret
fwait
xchg
cmp
add
cli
lret
inc
add
lret
ret
enter
mov
popf
cltd
out
push
add
mov
dec
dec
ja
jno
enter
add
inc
xor
or
loop
mov
pop
xor
mov
mov
enter
add
mov
jmp
jge
js
pshufw
jl
add
insl
faddl
push
and
mov
jg
dec
lea
pusha
add
cmp
dec
imul
jae
jns
shrl
mov
bound
mov
sti
mov
rolb
mov
or
cwtl
loopne
mov
xchg
clc
imul
pop
js
sub
xchg
stc
pop
stos
addl
je
mov
outsb
in
mov
cmp
adc
lods
repnz
jp
into
aad
or
and
decb
xchg
add
add
mov
mov
fwait
xchg
mov
movsb
pushf
sbb
incb
in
jle
add
pusha
add
add
cmp
push
jb
mov
or
inc
add
mov
imul
mov
ss
xchg
dec
je
stos
xor
and
stos
pop
jae
push
sub
xor
jg
or
adcl
jecxz
sbb
jb
mov
mov
test
mov
add
lods
loop
mov
xchg
scas
loop
mov
test
test
add
dec
fcmovb
rolb
cmpsb
ret
imul
mov
mov
out
rorl
ds
daa
pop
dec
dec
jo
mov
mov
add
arpl
mov
xchg
in
sbb
vsqrtps
sbb
xchg
cmp
add
dec
mov
or
and
call
insb
ret
push
sbb
lock
sbb
call
and
jmp
pop
xor
jb
mov
scas
addb
imul
and
mov
or
xchg
rolb
mov
sbb
rorl
aaa
loop
mov
cmpsb
fildll
jb
mov
repz
mov
fisttpl
add
push
ss
stos
dec
div
pushf
test
fsts
xor
or
mov
out
sub
inc
add
mov
add
mov
dec
addl
fucomi
and
add
xchg
in
clc
mov
xchg
sti
dec
xchg
cld
xor
mov
js
add
rolb
mov
xor
les
mov
fwait
andl
popf
jno
cmp
sbb
xchg
aas
push
mov
pop
xchg
je
push
add
sti
sbb
or
pop
xchg
push
data16
jns
sub
or
cld
adc
test
pop
and
fistpll
jno
push
outsb
mov
adc
adc
les
jns
add
add
sbbl
mov
movsb
ret
jne
ficomps
and
and
shl
or
xor
out
add
jns
add
rolb
mov
inc
jl
loope
sub
add
push
jge
scas
fldenv
cli
push
add
fisttps
xchg
and
add
sbb
push
add
outsb
jmp
fwait
cmpsb
js
or
and
mov
add
mov
addb
dec
cmp
lret
mov
add
addb
inc
add
loope
addb
mov
or
outsb
flds
mov
repz
ljmp
pop
mov
out
mov
jb
mov
cmp
xor
mov
xor
mov
cmp
add
mov
mov
add
dec
icebp
xor
push
lret
mov
in
or
mov
mov
and
sar
cld
ljmp
sti
fcomp
sub
mov
adc
into
mov
sarl
pop
nop
add
test
scas
xor
inc
scas
arpl
das
mov
fnstcw
cmpsb
lahf
mov
sbb
cli
das
sbb
daa
xor
mov
xchg
insb
mov
shll
xor
mov
dec
addb
xor
inc
add
mov
inc
xchg
sbb
fisttps
pop
mov
add
mov
lcall
and
mov
xchg
add
push
sub
cli
arpl
sub
enter
pop
cmp
add
lret
mov
xchg
push
lods
stos
je
adc
mov
xchg
jbe
mov
add
mov
mov
push
pop
pop
mov
lret
aad
mov
pop
fwait
jecxz
add
pop
aas
sbb
loopne
mov
and
mov
or
add
pop
in
add
cmc
xchg
call
add
or
int3
mov
push
aad
das
inc
jge
and
mov
cltd
in
add
imul
mov
add
int3
and
mov
mov
mov
add
adc
pop
outsb
das
ret
jmp
sbb
int
sbb
lods
enter
repnz
mov
mov
aaa
int
cli
lock
rorl
add
sbb
push
aam
mov
test
aaa
imul
add
xor
mov
ljmp
ja
rolb
and
mov
add
fsts
movsb
pop
fiaddl
push
gs
cmp
add
pop
fidivl
sbb
inc
addr16
pop
sbb
les
test
cld
loop
mov
outsb
stos
jo
mov
imul
add
add
cmp
adc
rolb
mov
push
orl
mov
mov
ljmp
sahf
loop
mov
xor
pusha
add
cmp
mov
add
push
add
mov
scas
loopne
mov
ss
cmpsb
and
mov
mov
cwtl
dec
pushf
sti
mov
daa
mov
push
or
iret
pop
cmpsl
stos
pop
cmp
mov
sub
mov
stos
cmpsl
out
sbb
push
enter
sbb
mov
push
add
imul
out
mov
dec
xor
mov
add
mov
sbb
mov
into
cmpsl
pop
mov
mov
push
add
mov
nop
add
xchg
divb
xor
lret
pop
xor
ljmp
mov
leave
negl
ljmp
add
mov
cmpsb
add
mov
arpl
outsl
in
add
jle
mov
add
mov
add
mov
int3
xor
mov
xor
pop
cmc
add
mov
xchg
add
sbb
xor
xchg
push
and
add
add
pop
rcrl
out
jge
inc
lret
add
nop
add
add
scas
add
mov
loopne
mov
push
xchg
mov
outsb
lods
push
add
imul
add
aas
push
or
mov
sar
in
stos
mov
mov
mov
je
add
add
scas
inc
loopne
mov
jmp
mov
add
add
rcll
jecxz
outsl
mov
call
cltd
sub
add
push
out
ja
or
mov
rolb
mov
fcomip
and
dec
es
test
bound
mov
or
push
ficoms
mov
jecxz
mov
icebp
mov
mov
in
mov
mov
mov
mov
mov
xor
pop
gs
dec
iret
jnp
jle
dec
daa
xchg
mov
push
add
scas
jmp
rcll
arpl
jnp
and
mov
adc
test
jmp
sbb
rorl
pop
lods
inc
ficoml
mov
mov
add
mov
lret
add
add
mov
cmp
mov
mov
pushf
push
add
mov
rolb
mov
mov
add
bound
mov
mov
fldcw
jnp
pushl
mov
xor
lea
ljmp
sub
in
inc
sbb
mov
hlt
jo
mov
inc
fyl2x
jnp
fucompp
negl
jl
outsb
jbe
add
loopne
mov
repz
gs
pushf
push
and
xchg
std
cmc
xor
mov
mov
mov
mov
xchg
enter
pop
dec
sbb
and
mov
jnp
popf
sahf
push
sub
mov
outsb
jl
jne
lods
and
imull
cmpsl
adc
mov
mov
push
fsub
sahf
jmp
fs
mov
lea
gs
add
adc
jb
mov
int3
mov
xor
mov
sbb
mov
mov
frstor
leave
add
push
add
inc
fwait
xor
mov
add
add
sarl
adc
add
imul
lock
inc
add
sub
adc
add
xor
mov
xchg
add
add
add
push
or
lods
stos
sub
push
add
add
mov
pushf
sbb
and
inc
shll
add
arpl
xchg
mov
push
add
jg
pop
mov
out
lods
sub
mov
outsl
and
add
ret
or
sub
add
add
add
mov
mov
or
xchg
shrl
pop
mov
rcr
out
into
fiaddl
jno
movsb
outsl
cmc
mov
add
add
push
idivb
mov
add
test
xchg
pop
or
sbb
cmpl
repnz
ja
andl
push
movsl
xor
shll
push
sbb
fsub
cli
push
or
dec
xchg
cmpsl
mov
popa
cld
addr16
jnp
jecxz
add
mov
jo
mov
test
mov
pop
sbb
or
pop
mov
mov
rolb
jl
sar
dec
xchg
xor
mov
sti
sahf
xchg
addb
adc
mov
mov
mov
mov
sti
lret
stos
dec
pop
or
xchg
je
aad
leave
out
shll
mov
loop
mov
and
add
testl
jp
pop
add
ds
add
sub
mov
xchg
into
or
add
mov
xlat
or
pushf
inc
mov
jae
add
cmp
pop
int
add
fldenv
add
mov
add
mov
stos
push
add
cmp
gs
lahf
mov
add
mov
scas
pop
sbb
rcl
sbb
mov
adc
mov
sub
add
mov
jmp
add
mov
push
jle
xlat
push
add
mov
add
fs
inc
cmpsl
sbb
int
pop
shrl
xchg
mov
mov
mov
inc
icebp
sub
push
add
add
jno
add
mov
add
fistpl
cmp
aaa
int
cmp
mov
out
mov
xor
push
add
mov
fwait
jg
and
xlat
daa
push
lods
xchg
cmp
sub
cmp
xchg
add
add
sub
add
add
inc
imul
mov
pop
push
fisubl
mov
adc
mov
rdpmc
addb
ret
add
mov
cmc
arpl
cmp
adc
mov
xor
imul
ja
je
addl
xchg
sub
rcrl
adc
push
xor
mov
mov
pop
jl
adc
aaa
cltd
pop
lods
pop
lods
std
sub
mov
mov
push
into
pop
rolb
mov
in
js
js
rolb
addb
lcall
bound
mov
xor
mov
mov
xchg
sub
inc
lcall
add
mov
loop
mov
and
sub
bound
mov
std
add
xchg
xchg
popa
mov
and
lahf
cmpsl
xchg
sub
in
or
in
test
mov
mov
mov
mov
ds
pop
dec
or
pop
push
add
fcompl
pop
addb
stos
imul
int3
lds
add
add
add
btc
dec
fidivs
out
xchg
mov
add
mov
xor
mov
xor
mov
add
adc
mov
and
pop
jne
push
aad
add
imul
outsb
in
std
ret
xor
pusha
add
outsl
push
fwait
jne
hlt
mov
pop
addr16
jmp
jnp
add
sbb
cmp
pop
jnp
jp
xchg
jns
mov
mov
xchg
sti
xor
mov
aad
jl
jb
mov
pop
sub
pop
cmp
sbb
arpl
sbb
inc
adc
dec
xchg
jge
adc
mov
add
inc
push
jo
mov
popf
std
fstpt
mov
jmp
clc
lods
faddl
add
ljmp
nop
add
or
pop
and
fwait
mov
cld
push
aas
xorl
sbb
in
cltd
in
arpl
add
scas
addb
aad
add
sbb
pushf
insl
inc
xchg
pop
cs
push
sub
mov
aaa
jge
arpl
cmp
xor
push
sbb
add
lahf
mov
adc
mov
addb
insl
dec
aas
out
lock
inc
mov
add
shl
sub
push
ret
push
add
mov
fiadds
mov
add
mov
lcall
mov
inc
jne
mov
dec
push
jno
stc
fldl
add
mov
sbb
push
rolb
mov
scas
xchg
push
bound
mov
jno
mov
popf
or
mov
lods
addb
push
jnp
add
ja
push
leave
jp
sti
dec
enter
repnz
add
mov
adc
mov
mov
pop
push
mov
sub
ljmp
xchg
ret
movsb
or
std
lahf
mov
add
add
nopl
insb
xor
add
js
data16
xchg
add
int3
inc
lds
add
cmc
dec
loop
mov
mov
cld
fwait
pop
cmc
xchg
sbb
add
mov
aas
cmp
xchg
add
add
cltd
iret
imul
fildl
aas
pop
leave
dec
pop
sub
mov
and
mov
popf
lea
mov
rcrl
xor
mov
xchg
pop
rolb
mov
mov
pop
sbb
push
sbb
dec
adc
push
sub
fst
jge
jo
mov
add
sbbl
add
add
mov
add
mov
add
push
and
mov
sub
and
add
insl
ret
sahf
sti
push
clc
lods
adc
mov
xchg
int
inc
dec
mov
or
mov
mov
stos
jne
sub
cmpsb
add
add
xor
mov
dec
and
mov
add
mov
dec
xor
push
insb
sbb
add
add
dec
jg
dec
add
mov
mov
jmp
orl
ret
sti
call
je
jle
shll
mov
add
mov
popa
and
mov
mov
xor
mov
add
mov
push
mov
mov
int
popa
xchg
jle
add
mov
cmpsl
addr16
lahf
xchg
and
mov
jmp
sub
xchg
add
stos
cmp
add
sub
test
push
call
sub
pusha
add
push
sub
sub
adcl
mov
add
mov
add
mov
stos
sahf
jno
mov
mov
popa
popl
jecxz
add
cmpsb
adc
mov
mov
cmp
les
sub
xchg
mov
mov
mov
mov
inc
jecxz
push
arpl
mov
lods
xchg
adc
mov
or
invd
pop
mov
jae
adc
data16
mov
popf
dec
leave
jne
fdivr
add
fldl
pop
push
add
add
mov
mov
mov
mov
add
andl
sti
push
pop
xor
xchg
add
pop
pop
mov
add
or
xchg
add
inc
fiaddl
mov
stos
mov
add
push
and
mov
add
mov
add
jns
imul
and
mov
mov
jmp
adc
lock
nop
add
dec
fbstp
add
cmp
push
xchg
add
mov
aaa
adc
mov
fadds
or
das
jmp
loope
rcr
cmc
scas
jp
les
pop
dec
xchg
and
mov
pop
pop
pop
insb
sbb
add
xor
or
mov
add
push
cmc
sub
mov
cmpsl
test
das
enter
xchg
popa
push
lcall
jno
iret
cld
loope
lcall
cmc
xor
xor
cmp
adc
mov
add
mov
addb
xor
mov
mov
mov
jl
lock
add
pop
std
rolb
xchg
or
add
lahf
inc
add
add
pop
iret
leave
xor
lds
aad
jne
add
add
jb
mov
mov
sbb
push
mov
fadds
insb
inc
mov
pop
ror
mov
or
jo
mov
rolb
mov
push
add
mov
call
lcall
add
or
xchg
shl
dec
aam
mov
popa
push
in
out
cltd
stos
and
mov
mov
out
or
lds
add
fs
aad
fdiv
xor
divb
cltd
dec
mov
dec
xchg
xchg
sti
jmp
push
add
cs
mov
xchg
loopne
mov
add
mov
insl
jne
inc
dec
popa
ret
adc
add
mov
lock
sbb
leave
ds
push
jmp
pop
xchg
pop
cmp
mov
add
adc
xchg
jge
testl
cmpsb
scas
pop
mov
lods
int3
cmpsl
addl
icebp
out
push
push
add
mov
iret
es
add
jl
jo
mov
xchg
add
add
mov
mov
repnz
add
dec
push
xor
mov
sbb
dec
mov
add
xlat
aas
jle
cmpsl
add
loope
bound
mov
add
cmp
xchg
in
sbbl
mov
ret
add
aas
in
or
xchg
sub
add
xor
ss
out
xor
mov
mov
add
arpl
add
push
aas
push
add
cmp
mov
push
scas
imul
add
stc
movsl
jecxz
xorps
xchg
pop
push
js
push
fsts
push
inc
pop
push
jno
mov
mov
test
adc
add
inc
add
mov
add
xor
mov
stc
popa
mov
lret
mov
add
cmp
pop
dec
sbb
lock
in
sahf
aaa
mov
aaa
xchg
leave
adc
mov
adcl
and
mov
std
xchg
push
stos
mov
mull
push
add
or
fstpl
or
mov
outsb
leave
jmp
add
pop
mov
fs
jmp
rorl
add
jecxz
add
mov
aam
mov
jns
lock
add
fmuls
mov
adc
push
add
mov
sbbl
jne
adc
mov
add
mov
mov
xchg
sahf
stos
inc
in
lods
sub
ljmp
sbb
xchg
cmpsb
aas
scas
fwait
sbb
pop
pop
loopne
mov
pusha
add
imul
ret
jno
mov
mov
add
mov
mov
cmpsb
int
jl
mov
mov
add
popf
arpl
fimull
sti
loopne
mov
dec
addb
mov
divb
shl
mov
or
inc
stos
fwait
ljmp
pushf
and
test
sub
mov
aaa
test
add
jnp
add
mov
addb
mov
sub
das
or
insb
sarl
das
xchg
mov
mov
mov
sbb
add
scas
outsl
pop
mov
cld
arpl
addb
inc
add
bswap
mov
mov
add
dec
bound
mov
add
add
aaa
mov
iret
cmpsb
ja
adc
ds
add
movsb
cwtl
pop
push
add
mov
stos
mov
add
cld
push
lret
push
gs
daa
jns
daa
iret
js
add
dec
mov
mov
xor
mov
mov
add
xor
mov
mov
adc
mov
test
mov
or
mov
add
filds
mov
push
jl
das
push
jp
inc
inc
adc
add
add
xchg
xchg
pop
xor
jp
es
sbb
sti
idiv
stc
jno
pop
call
add
lahf
push
aam
mov
int3
ret
or
and
push
jge
dec
inc
push
or
or
add
pop
sbb
cmpsb
inc
add
dec
or
jg
scas
lahf
fstpl
sbb
jbe
shr
pop
lock
insl
cmp
enter
xor
cwtl
imul
add
clc
repnz
nop
cld
jae
mov
inc
clc
repnz
nop
cld
jae
push
mov
add
pop
jmp
add
add
add
xchg
hlt
add
mov
nop
leave
jmp
add
add
jae
add
clc
repnz
nop
cld
jae
out
add
pop
add
jae
add
clc
repnz
nop
cld
jae
push
add
push
clc
repnz
nop
cld
jae
xchg
push
add
nop
cld
jae
inc
aad
stos
xchg
fwait
cmp
cld
and
clc
repnz
nop
cld
jae
add
add
fwait
dec
push
mov
nop
leave
jmp
nop
add
nop
gs
add
add
nop
nop
cld
jae
add
leave
jle
cmp
add
mov
clc
repnz
nop
cld
jae
or
add
dec
push
push
mov
xchg
ret
xchg
add
add
fs
add
fimull
nop
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
add
add
out
inc
add
add
add
je
js
mov
xchg
ret
add
lcall
sub
repnz
nop
cld
jae
add
jbe
add
clc
repnz
nop
cld
jae
cmp
in
in
add
repnz
nop
cld
jae
push
gs
cmp
hlt
out
cmpsl
cmp
jne
je
repnz
nop
cld
jae
add
out
into
mov
clc
repnz
nop
cld
jae
nop
mov
stos
mov
add
add
adc
repnz
nop
cld
jae
add
add
push
add
mov
clc
repnz
nop
cld
jae
add
leave
jecxz
popa
push
mov
nop
leave
jmp
stos
fisttpll
add
out
add
sub
push
loopne
mov
nop
leave
jmp
pop
add
mov
add
clc
repnz
nop
cld
jae
add
add
les
mov
xchg
ret
cmp
add
lcall
loope
mov
clc
repnz
nop
cld
jae
or
stos
clc
repnz
nop
cld
jae
push
add
les
mov
mov
cltd
add
in
mov
lahf
movsl
xor
xchg
mov
jg
push
mov
nop
leave
jmp
call
mov
and
add
repnz
nop
cld
jae
call
push
push
clc
repnz
nop
cld
jae
add
add
hlt
stos
add
cmp
pop
and
mov
nop
leave
jmp
xchg
add
xor
fs
cmp
fiadds
xchg
ret
xor
test
add
jne
push
mov
nop
leave
jmp
call
add
add
clc
repnz
nop
cld
jae
mov
jge
stos
sub
nop
nop
cld
jae
nop
and
inc
sbb
repnz
nop
cld
jae
add
shll
add
add
in
nop
leave
jmp
add
cld
call
clc
repnz
nop
cld
jae
add
pop
lock
clc
repnz
nop
cld
jae
add
add
call
sub
jl
inc
add
pop
daa
add
rclb
mov
mov
xchg
popf
mov
clc
repnz
nop
cld
jae
push
std
add
pop
add
mov
add
clc
repnz
nop
cld
jae
add
xor
jl
inc
add
add
rclb
bound
mov
add
mulb
pusha
push
mov
xchg
ret
cmp
leave
add
add
daa
pop
xchg
or
rclb
pushf
into
inc
add
cmp
int3
lcall
push
mov
xchg
ret
aad
add
nop
leave
add
add
push
add
add
repnz
nop
cld
jae
add
xchg
dec
mov
clc
repnz
nop
cld
jae
add
add
add
aam
pusha
add
push
mov
xchg
ret
out
add
nop
call
push
mov
jne
push
mov
xchg
ret
cmp
add
mov
cmp
repnz
nop
cld
jae
gs
add
lock
add
mov
xchg
ret
fwait
add
add
inc
add
add
clc
repnz
nop
cld
jae
xchg
nop
or
push
push
push
mov
xchg
ret
sub
hlt
add
hlt
jae
add
pop
clc
repnz
nop
cld
jae
add
jae
push
add
adc
add
push
mov
xchg
ret
stos
hlt
fwait
xor
add
jmp
xor
add
clc
repnz
nop
cld
jae
push
jbe
mov
push
mov
nop
leave
jmp
xchg
add
gs
or
repnz
nop
cld
jae
add
cmp
out
add
add
push
mov
xchg
ret
leave
and
daa
ds
jmp
incl
add
add
add
stos
stos
mov
clc
repnz
nop
cld
jae
inc
add
xchg
add
add
add
clc
repnz
nop
cld
jae
add
pop
out
lods
push
mov
xchg
ret
std
mov
nop
push
add
mov
nop
nop
cld
jae
add
cmp
shrb
mov
nop
leave
jmp
add
mov
lods
call
clc
repnz
nop
cld
jae
jbe
add
mov
mov
push
mov
xchg
ret
add
xchg
add
add
and
mov
add
leave
loope
add
leave
inc
add
push
xor
add
add
repnz
nop
cld
jae
add
or
clc
repnz
nop
cld
jae
mov
repnz
nop
cld
jae
cmp
add
fs
add
pop
push
mov
xchg
ret
add
hlt
add
inc
xor
push
mov
nop
leave
jmp
rolb
add
clc
clc
repnz
nop
cld
jae
fs
cmp
pop
add
out
icebp
inc
add
mov
add
push
or
sar
repnz
nop
cld
jae
inc
pop
add
add
push
clc
repnz
nop
cld
jae
push
rolb
nop
add
add
xor
fidivrl
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
add
scas
mov
clc
repnz
nop
cld
jae
leave
gs
out
fs
pop
clc
repnz
nop
cld
jae
add
add
xchg
test
add
add
nop
nop
cld
jae
add
add
or
jne
clc
repnz
nop
cld
jae
or
hlt
push
add
xor
jno
inc
add
add
daa
add
leave
jmp
add
inc
mov
add
mov
mov
xchg
ret
add
add
add
fwait
push
clc
repnz
nop
cld
jae
sub
aad
sub
mov
nop
nop
cld
jae
addb
add
mov
mov
xchg
ret
add
add
xchg
inc
mov
nop
nop
cld
jae
push
lcall
mov
cmpl
jae
leave
add
sbb
push
sub
add
repnz
nop
cld
jae
hlt
call
adc
mov
add
repnz
nop
cld
jae
jle
add
add
push
mov
xchg
ret
add
add
add
test
clc
repnz
nop
cld
jae
xor
sub
mov
nop
leave
jmp
lcall
lret
es
clc
repnz
nop
cld
jae
add
nop
nop
cld
jae
mov
cmp
push
push
mov
xchg
ret
add
xchg
add
add
in
call
clc
repnz
nop
cld
jae
add
add
in
nop
leave
jmp
call
cmp
add
push
xchg
push
repz
nop
cld
jae
add
add
lcall
push
mov
nop
leave
jmp
lcall
add
or
inc
add
nop
add
add
pop
mov
clc
repnz
nop
cld
jae
add
and
ret
inc
or
faddp
inc
add
stos
add
sub
test
adc
add
repnz
nop
cld
jae
inc
and
repnz
nop
cld
jae
push
add
lock
out
movzwl
clc
repnz
nop
cld
jae
add
xchg
add
push
enter
idiv
clc
repnz
nop
cld
jae
add
lock
and
clc
repnz
nop
cld
jae
leave
xor
add
sub
push
push
mov
xchg
ret
jbe
shlb
call
clc
repnz
nop
cld
jae
fs
add
mov
add
push
mov
nop
leave
jmp
add
add
add
add
mov
xchg
ret
nop
mov
test
add
leave
clc
repnz
nop
cld
jae
mov
add
add
jmp
call
add
nop
add
mov
sbb
sti
clc
repnz
nop
cld
jae
test
mov
daa
push
neg
mov
push
mov
xchg
ret
pop
out
add
add
or
test
adc
add
repnz
nop
cld
jae
gs
add
push
mov
xchg
ret
daa
add
add
nop
add
in
xchg
push
mov
nop
leave
jmp
lcall
ror
jne
add
pusha
jmp
incl
push
std
stos
std
fldl
add
push
and
cmpw
push
mov
nop
leave
jmp
add
add
add
add
es
inc
add
add
add
add
maskmovq
clc
repnz
nop
cld
jae
gs
add
add
pop
cmp
push
mov
nop
leave
jmp
xchg
add
add
test
push
mov
nop
leave
jmp
add
call
clc
repnz
nop
cld
jae
xchg
sub
or
pop
jne
clc
repnz
nop
cld
jae
add
fstpl
sar
nop
nop
cld
jae
out
add
int3
add
hlt
xchg
gs
rep
clc
repnz
nop
cld
jae
add
add
add
push
dec
pop
push
mov
xchg
ret
push
out
gs
add
jecxz
pop
jmp
add
add
add
int3
add
xchg
push
add
or
dec
cmp
repnz
nop
cld
jae
daa
add
add
leave
add
mov
jmp
rolb
and
add
fs
push
jle
mov
clc
repnz
nop
cld
jae
or
leave
xchg
cltd
pop
clc
repnz
nop
cld
jae
nop
daa
add
xchg
pop
inc
clc
repnz
nop
cld
jae
add
add
add
or
repnz
nop
cld
jae
add
xchg
add
leave
leave
jb
mov
repnz
nop
cld
jae
add
lock
add
dec
clc
repnz
nop
cld
jae
push
xor
mov
pop
push
clc
repnz
nop
cld
jae
daa
sbb
test
add
std
mov
push
mov
xchg
ret
add
pop
std
or
inc
push
in
and
push
mov
xchg
ret
add
add
mov
push
mov
nop
leave
jmp
add
add
pop
xchg
inc
daa
cmp
nop
nop
cld
jae
add
add
add
popa
add
mov
xchg
ret
add
add
mov
add
jmp
add
add
add
leave
jbe
fnsave
push
add
sbb
test
and
add
repnz
nop
cld
jae
add
push
push
mov
nop
leave
jmp
out
add
push
push
mov
nop
leave
jmp
leave
add
push
call
sub
rcr
inc
add
fs
test
push
mov
nop
leave
jmp
std
add
xchg
add
push
mov
nop
cld
jae
add
add
add
cmpsb
sahf
leave
clc
repnz
nop
cld
jae
jbe
leave
addb
daa
push
dec
add
clc
repnz
nop
cld
jae
add
add
pop
adc
add
mov
nop
leave
jmp
stos
add
xchg
and
dec
hlt
jns
movb
repnz
nop
cld
jae
add
xchg
add
add
add
je
add
clc
repnz
nop
cld
jae
add
cmpsb
ret
mov
push
clc
repnz
nop
cld
jae
add
mov
add
push
mov
nop
leave
jmp
add
lock
cmp
push
mov
nop
leave
jmp
xchg
add
lret
push
push
mov
nop
leave
jmp
xor
test
add
push
and
cld
push
push
mov
nop
leave
jmp
pop
xor
add
mov
adc
js
inc
add
xor
add
fwait
add
pushf
mov
clc
repnz
nop
cld
jae
dec
add
add
jne
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
gs
mov
xor
mov
xchg
ret
add
add
add
fcoms
repnz
nop
cld
jae
inc
add
add
jl
clc
repnz
nop
cld
jae
add
cmp
repnz
nop
cld
jae
leave
add
add
leave
add
clc
repnz
nop
cld
jae
mov
pop
add
jae
push
movzwl
clc
repnz
nop
cld
jae
add
lcall
push
mov
nop
leave
jmp
add
add
add
out
and
cld
mov
clc
repnz
nop
cld
jae
out
add
dec
and
push
mov
xchg
ret
leave
add
leave
add
outsb
mov
clc
repnz
nop
cld
jae
add
lock
add
sub
in
add
dec
outsl
add
jo
dec
xor
add
adc
mov
mov
add
repnz
nop
cld
jae
mov
mov
clc
repnz
nop
cld
jae
add
addb
insl
mov
push
mov
nop
leave
jmp
add
inc
xchg
adc
mov
xchg
ret
add
jae
xor
xor
clc
repnz
nop
cld
jae
add
add
mov
xchg
ret
fs
inc
aad
push
mov
dec
push
mov
nop
leave
jmp
add
add
add
or
mov
xchg
ret
and
lcall
mov
xchg
ret
fwait
xor
add
int3
mov
clc
repnz
nop
cld
jae
add
pop
add
inc
xchg
cmp
repnz
nop
cld
jae
mov
lcall
clc
repnz
nop
cld
jae
add
lcall
mov
pop
clc
repnz
nop
cld
jae
mov
and
cmp
adc
mov
add
mov
push
mov
xchg
ret
push
add
add
add
rolb
mov
stos
clc
repnz
nop
cld
jae
add
daa
add
push
xchg
adc
test
sbb
nop
nop
cld
jae
addb
sub
xor
add
clc
repnz
nop
cld
jae
add
mov
inc
mov
mov
clc
repnz
nop
cld
jae
add
add
add
subl
clc
repnz
nop
cld
jae
add
sahf
xchg
clc
repnz
nop
cld
jae
xchg
fs
call
clc
repnz
nop
cld
jae
out
add
mov
xchg
pop
push
mov
icebp
jge
and
arpl
movsl
sarb
mov
nop
nop
cld
jae
fwait
lock
rolb
xchg
adc
inc
add
push
push
mov
nop
leave
jmp
gs
add
jbe
lcall
mov
push
mov
nop
leave
jmp
add
add
jge
test
repnz
nop
cld
jae
lcall
nop
nop
cld
jae
add
or
cmp
ret
mov
xchg
ret
add
add
popa
add
mov
nop
leave
jmp
add
add
std
xor
cmp
push
mov
nop
leave
jmp
lock
or
addr16
incl
add
xor
std
fldl
add
add
repnz
nop
cld
jae
add
add
add
pusha
clc
repnz
nop
cld
jae
inc
gs
add
add
nop
adc
mov
repnz
nop
cld
jae
add
add
add
add
ja
clc
repnz
nop
cld
jae
add
mov
mov
push
mov
nop
leave
jmp
add
add
add
add
mov
nop
leave
jmp
daa
daa
add
xchg
jbe
pop
mov
clc
repnz
nop
cld
jae
add
inc
push
mov
xchg
ret
add
add
add
add
jp
push
mov
nop
leave
jmp
add
and
aas
adc
in
nop
leave
jmp
add
and
push
mov
nop
leave
jmp
add
nop
gs
in
and
add
add
add
pop
add
clc
repnz
nop
cld
jae
add
fwait
add
add
inc
and
mov
nop
leave
jmp
add
add
mov
clc
repnz
nop
cld
jae
add
out
add
gs
add
mov
mov
push
mov
xchg
ret
aad
add
nop
nop
xchg
addb
add
push
mov
xchg
ret
jae
nop
add
xor
cmpsb
fldcw
rcll
aam
add
add
pop
add
add
addl
xor
add
clc
repnz
nop
cld
jae
add
addb
fwait
add
push
mov
xchg
ret
add
data16
add
clc
repnz
nop
cld
jae
out
hlt
add
cmpsl
xchg
mov
mov
xchg
ret
add
int3
add
sub
dec
mov
push
mov
nop
leave
jmp
add
push
add
xchg
add
push
mov
xchg
ret
add
add
pop
mov
adc
movsb
push
mov
nop
leave
jmp
int3
add
xchg
addb
and
jb
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
lock
add
dec
int
add
xchg
cmp
add
add
repz
xchg
ret
add
dec
jae
stos
add
mov
push
clc
repnz
nop
cld
jae
add
add
stos
add
push
sbb
movsb
clc
repnz
nop
cld
jae
add
add
push
adc
mov
add
sub
clc
repnz
nop
cld
jae
push
pop
add
push
mov
nop
leave
jmp
mov
leave
xor
xchg
add
push
push
add
repnz
nop
cld
jae
stos
add
jae
fldl
cs
clc
repnz
nop
cld
jae
add
add
add
add
cmpsb
and
nop
nop
cld
jae
out
add
add
out
mov
clc
repnz
nop
cld
jae
xor
add
jmp
decl
add
add
sub
add
addb
js
push
mov
xchg
ret
add
cmp
add
add
js
mov
jmp
add
add
leave
add
jle
add
or
add
repnz
nop
cld
jae
add
jns
repz
mov
nop
leave
jmp
add
add
add
mov
jge
clc
repnz
nop
cld
jae
add
lcall
adc
stos
push
mov
nop
leave
jmp
xchg
push
add
jbe
sub
add
xor
inc
add
jle
nop
dec
fs
push
clc
repnz
nop
cld
jae
add
nop
add
add
pop
push
mov
xchg
ret
or
pop
add
nop
fisubrs
imul
cld
jae
push
push
add
mov
mov
nop
nop
cld
jae
cmp
aad
push
add
mov
push
clc
repnz
nop
cld
jae
add
int3
push
pop
add
mov
nop
nop
cld
jae
add
pop
jb
mov
add
push
mov
nop
leave
jmp
cmp
add
add
pusha
add
mov
nop
leave
jmp
rolb
leave
push
cmp
add
sub
nop
nop
cld
jae
sbbb
add
ljmp
jae
add
xchg
add
outsb
mov
push
mov
xchg
ret
add
add
mov
or
out
sbb
std
adc
push
clc
repnz
nop
cld
jae
add
add
out
and
clc
repnz
nop
cld
jae
inc
xchg
or
ja
and
outsl
pusha
clc
repnz
nop
cld
jae
call
leave
add
dec
mov
clc
repnz
nop
cld
jae
add
add
aad
jecxz
call
jmp
cmp
add
xor
add
add
or
mov
xchg
ret
push
xor
add
jnp
lods
and
imul
nop
nop
cld
jae
add
rolb
repnz
nop
cld
jae
hlt
nop
jle
add
or
loop
clc
repnz
nop
cld
jae
add
adc
nop
cld
jae
hlt
add
push
add
repnz
nop
cld
jae
xchg
aad
add
add
notl
out
out
inc
add
or
pop
add
and
nop
cld
jae
lcall
int3
xchg
push
add
in
add
add
push
mov
nop
leave
jmp
add
lock
nop
nop
cld
jae
add
push
jae
add
add
clc
repnz
nop
cld
jae
jae
add
add
sarl
add
repnz
nop
cld
jae
add
inc
mov
fadds
xchg
ret
or
add
add
push
push
mov
xchg
ret
out
gs
inc
pushf
mov
push
mov
nop
leave
jmp
add
add
add
sbb
repnz
nop
cld
jae
mov
leave
sti
cmpl
push
mov
nop
leave
jmp
add
cmp
add
nop
leave
jmp
out
or
add
and
add
clc
repnz
nop
cld
jae
add
xchg
xchg
inc
add
push
mov
add
imul
in
cmpsb
sahf
add
add
pop
clc
repnz
nop
cld
jae
add
add
stos
add
add
sbb
repnz
nop
cld
jae
add
xchg
add
add
clc
repnz
nop
cld
jae
cmp
mov
test
adc
in
nop
leave
jmp
add
andb
mov
push
clc
repnz
nop
cld
jae
and
mov
in
mov
add
fiadds
add
scas
inc
add
mov
add
add
repnz
nop
cld
jae
xchg
add
push
decb
nop
cld
jae
pop
pop
test
lock
push
test
clc
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
jmp
xchg
add
nop
add
dec
sbb
mov
xchg
ret
add
jae
xchg
add
add
imul
repnz
nop
cld
jae
test
add
add
nop
nop
cld
jae
gs
push
daa
add
add
and
mov
push
mov
xchg
ret
mov
fwait
gs
mov
clc
repnz
nop
cld
jae
rolb
add
cli
xor
push
mov
xchg
ret
gs
mov
test
movswl
push
mov
nop
leave
jmp
daa
stos
mov
hlt
add
ret
clc
repnz
nop
cld
jae
add
add
cmpw
push
mov
nop
leave
jmp
std
stos
add
push
mov
xchg
ret
add
mov
add
mov
repnz
nop
cld
jae
push
stos
daa
mov
fisttpl
nop
nop
cld
jae
and
add
imul
nop
cld
jae
add
add
leave
pop
sti
push
clc
repnz
nop
cld
jae
leave
lcall
push
add
add
daa
fmull
test
out
clc
repnz
nop
cld
jae
pop
lcall
nop
leave
jmp
xor
add
mov
add
dec
inc
push
mov
nop
leave
jmp
lcall
arpl
push
mov
nop
leave
jmp
cmp
leave
add
jnp
add
add
leave
jmp
lcall
aam
push
push
mov
xchg
ret
add
or
pop
clc
repnz
nop
cld
jae
add
nop
call
jae
push
sbb
jne
clc
repnz
nop
cld
jae
add
cmp
add
cmpsb
jmp
stos
push
mov
nop
leave
jmp
add
out
movzwl
clc
repnz
nop
cld
jae
xor
add
push
mov
nop
leave
jmp
pop
daa
mov
dec
pop
mov
clc
repnz
nop
cld
jae
add
test
mov
nop
leave
jmp
add
pop
add
push
push
mov
xchg
ret
addb
add
clc
repnz
nop
cld
jae
pop
add
add
and
inc
call
leave
jmp
add
add
add
add
sbb
movsb
clc
repnz
nop
cld
jae
hlt
nop
out
or
and
ss
clc
repnz
nop
cld
jae
aad
pop
div
clc
repnz
nop
cld
jae
add
nop
add
add
cltd
jmp
xor
add
add
or
repnz
nop
cld
jae
add
add
add
ret
lret
clc
repnz
nop
cld
jae
jae
add
fmuls
nop
nop
cld
jae
xor
fmull
test
repnz
nop
cld
jae
add
add
mov
xchg
ret
add
push
and
push
push
mov
xchg
ret
pop
cmp
add
out
leave
dec
and
add
cmp
inc
add
add
add
add
fs
xor
mov
nop
leave
jmp
nop
or
xor
add
pop
push
push
mov
xchg
ret
inc
pop
out
mov
cmp
daa
dec
mov
clc
repnz
nop
cld
jae
dec
add
add
add
clc
repnz
nop
cld
jae
lock
int3
add
add
fisttpl
nop
nop
cld
jae
nop
sub
leave
add
dec
pop
push
mov
xchg
ret
add
xor
test
nop
nop
cld
jae
add
add
fldl
sbb
push
ret
xchg
ret
xor
add
dec
cmp
repnz
nop
cld
jae
push
add
leave
add
push
add
mov
fmulp
inc
add
mov
add
cmp
clc
repnz
nop
cld
jae
add
jbe
add
push
mov
nop
leave
jmp
addb
mov
mov
clc
repnz
nop
cld
jae
add
leave
add
mov
push
mov
xchg
ret
add
test
mov
je
clc
repnz
nop
cld
jae
call
add
nop
nop
cld
jae
leave
call
xchg
push
inc
xchg
add
in
nop
leave
jmp
daa
gs
add
rolb
std
inc
fiaddl
nop
nop
cld
jae
add
arpl
test
dec
adc
add
repnz
nop
cld
jae
add
add
or
nop
cld
jae
add
add
push
xchg
inc
es
aam
sub
nop
nop
cld
jae
pop
add
add
imul
in
nop
leave
jmp
xchg
and
fildll
sub
repnz
nop
cld
jae
add
xchg
add
mov
push
mov
xchg
ret
fwait
add
add
dec
add
jmp
add
add
xchg
add
leave
add
dec
add
clc
repnz
nop
cld
jae
mov
add
add
fs
jb
push
mov
xchg
ret
lcall
ss
add
clc
repnz
nop
cld
jae
jbe
gs
cmp
nop
nop
cld
jae
add
add
pop
jno
pop
add
push
mov
nop
leave
jmp
add
add
push
mov
add
cmp
in
and
add
mov
inc
clc
pop
clc
repnz
nop
cld
jae
add
fwait
andb
clc
repnz
nop
cld
jae
add
push
mov
lea
push
mov
xchg
ret
pop
add
add
mov
xchg
ret
dec
add
cmp
rolb
nop
jl
lret
push
add
push
mov
nop
leave
jmp
add
cmp
hlt
data16
imul
clc
repnz
nop
cld
jae
add
leave
and
and
fldl
xchg
ret
push
add
add
add
clc
repnz
nop
cld
jae
add
mov
mov
cmp
ret
add
add
add
fdivrp
clc
repnz
nop
cld
jae
sub
xor
push
clc
repnz
nop
cld
jae
add
add
add
add
push
mov
lods
jg
aaa
fs
fbstp
add
imul
xchg
add
clc
repnz
nop
cld
jae
leave
jae
lcall
inc
add
daa
add
aad
out
add
add
rolb
cmc
addb
or
repnz
nop
cld
jae
xor
add
loope
mov
clc
repnz
nop
cld
jae
add
fwait
pop
movsl
ja
mov
clc
repnz
nop
cld
jae
jle
mov
jmp
and
leave
add
push
daa
add
sub
nop
nop
cld
jae
and
add
add
repnz
nop
cld
jae
add
and
mov
repnz
nop
cld
jae
add
daa
pop
fstpl
xchg
cmpl
leave
jmp
xchg
add
add
xor
mov
clc
repnz
nop
cld
jae
fwait
leave
in
lea
push
mov
nop
leave
jmp
add
add
add
sbb
xor
add
clc
repnz
nop
cld
jae
nop
add
clc
repnz
nop
cld
jae
gs
call
lret
mov
xchg
ret
mov
add
add
dec
call
clc
repnz
nop
cld
jae
add
mov
xchg
test
jmp
nop
cld
jae
xor
jle
add
incb
mov
nop
leave
jmp
add
addb
cmp
mov
adc
repnz
nop
cld
jae
add
add
call
nop
nop
cld
jae
pop
cmp
leave
push
clc
repnz
nop
cld
jae
or
add
push
clc
repnz
nop
cld
jae
add
add
add
add
repnz
nop
cld
jae
add
xchg
fs
push
sub
clc
repnz
nop
cld
jae
cmp
sub
clc
repnz
nop
cld
jae
add
nop
add
loopne
mov
push
mov
xchg
ret
add
add
and
push
clc
repnz
nop
cld
jae
xchg
add
jns
inc
sub
repnz
nop
cld
jae
add
mov
mov
nop
leave
jmp
jle
add
pop
fldl
jmp
push
push
mov
nop
leave
jmp
cmp
nop
push
mov
xchg
ret
daa
daa
fldl
fwait
add
add
leave
xor
clc
repnz
nop
cld
jae
daa
add
add
loopne
clc
repnz
nop
cld
jae
add
std
add
xor
nop
cld
jae
fstpl
add
stos
push
mov
repnz
nop
cld
jae
add
out
or
add
push
mov
xchg
ret
lcall
stos
add
jmp
add
add
daa
add
add
mov
loope
mov
push
mov
xchg
ret
push
add
pop
std
add
dec
add
clc
repnz
nop
cld
jae
out
out
add
add
clc
repnz
nop
cld
jae
test
mov
add
clc
repnz
nop
cld
jae
add
gs
mov
and
lahf
cmpl
push
mov
nop
leave
jmp
or
lock
repnz
nop
cld
jae
cmpb
scas
movzwl
clc
repnz
nop
cld
jae
and
pop
fs
mov
xchg
ret
cmp
add
inc
add
add
xor
repnz
nop
cld
jae
lock
xchg
fwait
dec
add
clc
repnz
nop
cld
jae
out
add
add
push
clc
repnz
nop
cld
jae
xor
pop
hlt
mov
push
push
mov
xchg
ret
pop
cmp
add
add
add
repnz
mov
xchg
ret
pop
lcall
mov
in
mov
addl
add
add
mov
test
add
clc
repnz
nop
cld
jae
add
add
and
push
mov
xchg
ret
add
add
push
add
jmp
add
add
add
nop
add
add
sub
xor
data16
mov
rep
clc
repnz
nop
cld
jae
add
cmp
pop
add
add
clc
repnz
nop
cld
jae
stos
gs
mov
push
mov
nop
leave
jmp
leave
leave
hlt
add
repnz
nop
cld
jae
xor
add
mov
mov
clc
repnz
nop
cld
jae
add
cmp
xchg
add
mov
clc
repnz
nop
cld
jae
xchg
call
out
pop
push
mov
nop
leave
jmp
and
add
leave
dec
add
mov
mov
mov
push
mov
nop
leave
jmp
addb
add
pop
fldl
sub
push
mov
xchg
ret
cmp
jbe
aad
lcall
mov
imul
cld
jae
add
add
enter
push
mov
nop
leave
jmp
add
lret
lea
clc
repnz
nop
cld
jae
dec
add
add
push
nop
add
add
clc
repnz
nop
cld
jae
add
lock
adc
and
addb
dec
notl
dec
sbb
mov
clc
repnz
nop
cld
jae
add
leave
stos
out
pop
mov
push
mov
xchg
ret
out
test
call
fimuls
incl
int3
mov
jae
cmp
add
repnz
nop
cld
jae
add
daa
add
add
add
add
clc
repnz
nop
cld
jae
cmp
add
mov
out
xor
clc
repnz
nop
cld
jae
xchg
sub
add
inc
add
mov
clc
repnz
nop
cld
jae
gs
add
pop
add
dec
or
mov
xchg
ret
add
add
add
and
repnz
nop
cld
jae
add
daa
add
add
jge
sar
repnz
nop
cld
jae
add
add
xor
add
call
in
nop
leave
jmp
pop
leave
leave
add
shl
jno
pop
push
mov
xchg
ret
add
add
aad
and
sub
movb
out
inc
add
xor
jle
lock
mov
clc
repnz
nop
cld
jae
stos
add
add
xor
add
clc
repnz
nop
cld
jae
add
mov
movb
add
clc
repnz
nop
cld
jae
lcall
add
clc
repnz
nop
cld
jae
add
add
push
jbe
lock
clc
repnz
nop
cld
jae
add
add
faddl
add
clc
repnz
nop
cld
jae
add
lcall
mov
and
push
add
repnz
nop
cld
jae
add
push
cmp
add
pop
xor
push
mov
xchg
ret
lcall
rclb
add
repnz
nop
cld
jae
nop
cmp
and
sbb
nop
nop
cld
jae
add
and
rcl
add
xchg
sbb
nop
nop
cld
jae
mov
aad
and
clc
repnz
nop
cld
jae
xor
fstl
daa
add
xor
push
mov
nop
leave
jmp
add
pop
out
xchg
add
xchg
cmp
lds
add
repnz
nop
cld
jae
leave
stos
add
movzwl
clc
repnz
nop
cld
jae
add
push
add
jne
add
mov
add
fs
add
add
add
inc
mov
ret
pop
add
clc
repnz
nop
cld
jae
add
nop
rcll
add
sub
or
inc
add
nop
add
add
repnz
nop
cld
jae
mov
add
nop
nop
cld
jae
mov
and
add
push
mov
nop
leave
jmp
aad
add
test
clc
repnz
nop
cld
jae
lcall
lds
xor
push
mov
xchg
ret
add
add
push
add
add
clc
repnz
nop
cld
jae
add
add
lds
xchg
ret
call
nop
jle
rcr
push
push
mov
nop
leave
jmp
std
add
add
add
mov
xchg
ret
pop
std
xor
add
pusha
add
add
nop
nop
cld
jae
add
fst
adc
mov
clc
repnz
nop
cld
jae
jae
call
and
add
add
repnz
nop
cld
jae
add
test
dec
push
clc
repnz
nop
cld
jae
hlt
add
dec
push
clc
repnz
nop
cld
jae
add
add
es
sub
test
out
clc
repnz
nop
cld
jae
stos
add
clc
repnz
nop
cld
jae
add
fldl
add
add
sbb
dec
cmp
repnz
nop
cld
jae
std
stos
push
add
pop
push
repnz
nop
cld
jae
jae
dec
nop
cmp
jecxz
rol
clc
repnz
nop
cld
jae
add
or
ljmp
clc
repnz
nop
cld
jae
push
pop
add
int
pop
jae
repnz
nop
cld
jae
add
or
repnz
nop
cld
jae
add
addr16
movzwl
clc
repnz
nop
cld
jae
or
mov
mov
nop
leave
jmp
push
add
out
add
push
add
clc
repnz
nop
cld
jae
add
add
mov
in
nop
leave
jmp
int3
std
add
cmp
dec
adc
in
nop
leave
jmp
add
add
loop
mov
sub
mov
xchg
ret
dec
nop
xchg
add
stos
popa
clc
repnz
nop
cld
jae
pop
mov
add
mov
hlt
inc
add
add
lcall
push
mov
nop
leave
jmp
fwait
add
push
cmp
add
aam
push
mov
testb
jae
inc
pop
mov
mov
add
int3
push
mov
rolb
jmp
cmp
add
add
or
inc
inc
add
repnz
nop
cld
jae
lcall
jbe
clc
repnz
nop
cld
jae
add
std
xor
leave
pop
mov
clc
repnz
nop
cld
jae
xor
xchg
and
sahf
call
push
mov
nop
leave
jmp
mov
dec
and
push
mov
nop
leave
jmp
fstl
sub
and
outsl
xor
push
mov
xchg
ret
rolb
push
add
xor
lock
loop
mov
xchg
ret
gs
mov
lret
in
push
add
add
or
das
pop
dec
push
leave
je
push
mov
nop
leave
jmp
add
out
pop
add
clc
repnz
nop
cld
jae
add
add
leave
int3
sbb
xchg
add
add
repnz
nop
cld
jae
push
mov
jl
xor
lods
icebp
inc
add
add
mov
push
mov
nop
leave
jmp
add
add
leave
add
in
mov
pop
add
add
adc
mov
lds
clc
repnz
nop
cld
jae
add
aad
test
add
imul
push
add
add
push
lock
mov
clc
repnz
nop
cld
jae
add
cmpsl
loop
mov
les
xchg
ret
hlt
lock
xchg
mov
popf
mov
clc
repnz
nop
cld
jae
push
add
cmp
repnz
nop
cld
jae
add
push
xchg
lock
bound
mov
push
mov
xchg
ret
add
gs
push
lock
lcall
add
add
repnz
nop
cld
jae
add
fdivr
clc
repnz
nop
cld
jae
jae
rcr
shr
push
mov
xchg
ret
add
add
add
ffree
pop
add
push
mov
nop
leave
jmp
add
nop
push
add
mov
cmp
rclb
nop
leave
jmp
and
or
add
daa
in
add
lcall
add
daa
add
mov
mov
enter
nop
cld
jae
add
leave
mov
jmp
clc
repnz
nop
cld
jae
add
add
xor
clc
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
out
add
xor
clc
repnz
nop
cld
jae
add
and
mov
mov
nop
leave
jmp
std
sbbb
call
mov
clc
repnz
nop
cld
jae
add
leave
cmp
mov
sub
js
clc
repnz
nop
cld
jae
add
mov
stos
jne
clc
repnz
nop
cld
jae
jle
add
jno
mov
clc
repnz
nop
cld
jae
xchg
add
cmpsb
xor
lock
bound
mov
add
in
nop
leave
jmp
add
lcall
xor
clc
repnz
nop
cld
jae
add
nop
add
mov
push
mov
nop
leave
jmp
lcall
clc
add
mov
add
loope
pop
scas
add
and
mov
clc
repnz
nop
cld
jae
gs
nop
and
mov
xchg
ret
mov
leave
add
clc
repnz
nop
cld
jae
call
add
add
inc
clc
repnz
nop
cld
jae
add
add
mov
nop
leave
jmp
xchg
add
lock
test
iret
mov
push
mov
xchg
ret
push
add
and
add
leave
cs
clc
repnz
nop
cld
jae
int3
add
add
cmp
repnz
nop
cld
jae
pop
add
add
add
enter
nop
cld
jae
int3
mov
and
stos
pop
clc
repnz
nop
cld
jae
and
lcall
incl
add
add
jbe
add
add
add
add
add
mov
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
add
xor
mov
lods
clc
repnz
nop
cld
jae
nop
gs
push
xchg
add
mov
jmp
lcall
add
or
push
int
les
mov
xchg
ret
add
leave
jbe
test
cld
or
nop
leave
jmp
add
stos
xchg
faddl
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
leave
xchg
sar
repnz
nop
cld
jae
xor
daa
add
leave
rolb
mov
clc
repnz
nop
cld
jae
add
leave
add
or
xor
add
clc
repnz
nop
cld
jae
mov
nop
add
call
clc
repnz
nop
cld
jae
jle
add
ficoms
clc
enter
cmp
ret
add
add
or
push
mov
xchg
ret
push
add
add
cmpsb
inc
and
nop
leave
jmp
push
add
lock
mov
push
mov
nop
leave
jmp
cmp
call
push
jae
pusha
clc
repnz
nop
cld
jae
cmp
add
add
push
mov
xchg
ret
xchg
add
pop
call
cmp
nop
nop
cld
jae
mov
sub
push
mov
xchg
ret
xchg
pop
add
add
or
repnz
nop
cld
jae
xor
add
lock
jge
clc
repnz
nop
cld
jae
and
gs
push
jle
mov
std
mov
mov
cmp
js
add
sbb
rep
movsb
xchg
add
pop
mov
mov
and
mov
mov
jbe
xchg
std
push
mov
mov
xchg
stos
mov
xchg
icebp
aas
cmp
adc
mov
cmpsl
hlt
loopne
mov
add
add
lret
cmpsb
test
sub
ret
out
sbbl
xlat
pop
outsb
jge
xchg
mov
mov
add
aad
mov
mov
or
add
xchg
mov
mov
cmp
pop
cmpsl
inc
aaa
rolb
mov
dec
jg
or
mov
imul
mov
mov
push
lcall
add
xchg
loope
xor
push
cmp
dec
mov
jmp
call
movsl
mov
sub
insl
pop
aad
jns
add
mov
inc
add
add
cmp
roll
jno
mov
mov
add
outsl
pop
ljmp
jnp
jecxz
outsb
push
adc
je
lret
ja
test
or
pop
mov
sti
les
pop
pushl
dec
mov
adc
lea
xchg
and
movsb
push
add
mov
mov
rolb
xchg
adc
mov
fcmove
int
add
add
sub
add
xor
mov
jle
adc
test
mov
jno
add
enter
rorl
je
mov
sbb
add
add
sbb
aad
insl
cmp
loopne
mov
int3
inc
std
mov
mov
sbb
out
mov
insb
hlt
lea
mov
rolb
mov
and
insl
in
cld
mov
jp
jl
mov
lock
add
fs
add
pop
leave
bound
mov
add
fidivrs
xor
mov
inc
pushf
jo
mov
aam
lahf
lret
test
insb
or
add
in
push
test
sub
addr16
mov
dec
lret
jecxz
bound
mov
mov
dec
fstpl
add
in
xchg
and
lods
pop
cwtl
jo
mov
into
test
mov
insb
cmp
inc
push
mov
add
sbb
mov
add
movb
mov
mov
mov
gs
es
aaa
xchg
add
test
in
rolb
mov
mov
add
jb
mov
js
sbb
aaa
sbb
cs
push
jo
mov
and
shll
mov
inc
add
mov
xor
mov
aaa
aad
xor
mov
mov
fdivs
and
insb
sub
mov
lea
cmp
loop
mov
aas
xor
add
mov
dec
lods
mov
test
cmp
mov
lods
ret
cmp
mov
add
rolb
mov
cld
das
stos
mov
mov
jp
add
mov
cwtl
rolb
mov
add
decb
add
xlat
pop
push
test
jb
mov
xchg
sbb
cmp
mov
lea
ja
jb
mov
int3
push
adc
test
mov
cmp
bound
mov
in
std
fisttpl
pusha
add
jne
sbb
and
mov
mov
add
enter
imul
dec
xor
mov
push
add
mov
add
in
mov
ret
cld
mov
ja
add
mov
add
add
leave
mov
addb
out
xchg
ret
scas
mov
mov
xchg
jl
aam
cmp
jecxz
out
lock
cmp
aaa
mov
mov
pop
sbb
pop
mov
push
loopne
mov
add
insb
mov
faddl
push
or
add
leave
jmp
jbe
mov
ficoml
test
cli
sbb
outsl
xchg
cmp
add
or
jbe
cli
mov
add
add
in
rolb
mov
incb
cwtl
mov
arpl
sbb
mov
lods
lock
add
loop
mov
idivl
repnz
das
xchg
add
test
xchg
mov
adc
lea
sahf
outsb
and
or
imul
inc
loop
mov
mov
addr16
lods
xor
add
addb
and
mov
aad
cld
push
xor
mov
add
mov
pop
icebp
xchg
pusha
add
dec
lds
flds
mov
or
rolb
mov
add
test
iret
jno
add
add
out
mov
mov
mov
xchg
fildll
mov
mov
repz
sarl
cmpsl
push
pop
sti
and
mov
add
mov
mov
add
mov
xor
mov
xchg
mov
mov
mov
sbb
mov
pop
nop
add
sbb
cs
add
lds
cld
rolb
mov
add
xchg
xor
mov
mov
pmaxsw
cmpsl
xchg
add
in
das
negl
scas
xchg
out
ficoms
cmp
cli
rolb
mov
push
int
add
mov
mov
in
fbld
test
cli
jbe
clc
call
inc
iret
dec
ret
mov
add
add
inc
sub
rolb
mov
push
jg
add
gs
je
enter
mov
add
fndisi(8087
enter
mov
les
stc
int3
jb
mov
adc
in
xchg
add
je
mov
movb
mov
test
dec
and
add
xor
mov
xchg
enter
and
fwait
clc
int3
lcall
lock
sar
imull
xor
pop
push
loopne
mov
rolb
push
push
test
in
add
push
outsl
mov
lods
leave
ret
ja
add
mov
out
clc
mov
sub
divl
lahf
push
in
popf
repz
fsubrp
mov
mov
mov
push
push
adc
insb
push
mov
add
inc
imul
mov
fnstenv
fisubl
movsb
js
sub
jne
mov
mov
insl
sbb
xor
add
dec
jp
inc
dec
inc
add
or
mov
les
and
mov
mov
stos
int
or
rolb
mov
cltd
inc
stc
and
mov
daa
mov
in
mov
mov
call
push
iret
in
mov
add
mov
jle
mov
mov
add
mov
xchg
sub
mov
lock
xchg
add
mov
roll
add
addb
pop
rolb
inc
add
push
popa
push
clc
dec
dec
repz
pop
jnp
rolb
mov
push
popa
sub
cmp
mov
add
icebp
jle
insl
add
mov
sahf
pop
cmp
xchg
jecxz
add
add
mov
mov
mov
sbb
int
add
pop
or
add
xor
pop
adc
xchg
add
add
sub
insl
in
clc
cmp
imul
push
and
ficomps
iret
sub
jmp
inc
add
inc
loop
mov
loop
mov
or
add
mov
push
xor
push
add
mov
sbb
add
ljmp
or
int
mov
mov
mov
add
jle
add
add
ds
pushw
insl
and
inc
sub
cmp
push
mov
ret
mov
push
push
push
lods
mov
xchg
add
mov
add
sbb
and
in
xor
mov
add
mov
stc
dec
pop
add
and
or
add
mov
and
and
add
add
test
ret
mov
cmpsl
inc
pushl
add
aas
xor
arpl
lea
add
push
aaa
mov
mov
pop
outsl
pop
push
mov
mov
xlat
jecxz
inc
pusha
add
push
lahf
xor
add
fimuls
mov
and
loop
mov
mov
pop
inc
dec
inc
inc
dec
adc
mov
inc
add
mov
addr16
or
outsl
arpl
out
push
cmp
adc
mov
fwait
cli
repnz
rorl
add
es
add
and
rcrl
repz
mov
mov
aas
inc
mov
in
add
add
jmp
inc
add
add
push
sahf
pop
ret
push
test
and
mov
push
addr16
in
add
sub
pop
pop
clc
repz
jmp
jns
xchg
xchg
xchg
add
sub
sub
out
sub
lret
add
add
mov
push
xchg
add
test
jl
jecxz
pop
sub
add
mov
add
xor
mov
adc
aad
xor
add
adc
mov
mov
jno
ds
lods
inc
and
xor
rolb
mov
cmp
dec
push
notl
daa
nop
add
mov
pop
mov
ljmp
add
in
cld
js
add
fcompl
dec
out
lahf
and
xchg
and
mov
mov
add
jb
mov
in
inc
scas
push
xchg
add
adc
pop
neg
in
bound
mov
shl
rolb
mov
clc
lret
push
push
lods
nop
add
or
jge
sbb
rolb
mov
aad
jbe
jge
decb
mov
addl
mov
mov
inc
movsb
fcmovnu
hlt
es
mov
sbb
sbb
out
insb
pop
aas
mov
mov
mov
sub
cltd
pushf
popa
insl
loope
popa
xor
add
gs
ret
int3
push
jl
add
mov
or
add
negl
xor
pop
ljmp
cmc
aas
popa
mov
out
mov
jge
icebp
push
pushf
fiaddl
out
sahf
pop
std
dec
push
mov
dec
imul
add
test
add
out
xor
mov
sub
dec
mov
xchg
add
mov
and
mov
jno
adc
xor
mov
add
lret
insl
and
mov
add
cli
arpl
add
add
add
imul
lock
inc
adc
mov
sahf
scas
mov
negl
ljmp
add
add
cwtl
jge
cmp
in
rolb
mov
in
dec
pop
cmp
test
rolb
out
pop
aas
jg
fsts
ret
mov
sub
scas
cmp
loop
mov
sbb
outsb
cld
xor
mov
mov
jns
jg
inc
jp
sub
ljmp
add
loop
mov
ljmp
loope
mov
add
stc
dec
scas
pop
rolb
mov
out
add
jmp
add
repz
xchg
sbbl
das
or
push
adcl
loope
push
dec
lahf
test
or
fidivrs
and
iret
jo
mov
addb
jbe
or
xor
arpl
xlat
fneni(8087
add
sub
pop
addb
inc
add
mov
sub
test
arpl
adc
xor
add
add
pop
inc
cli
ljmp
mov
cmp
sbb
lret
mov
out
adc
mov
aad
cld
xchg
scas
push
pop
pushl
out
aam
mov
dec
cmp
add
inc
addb
test
stos
push
add
add
xchg
add
cmp
rolb
mov
ret
lcall
cmp
mov
push
add
inc
add
mov
mov
insb
nop
add
jecxz
dec
add
cld
jbe
rolb
mov
js
jne
pmulhw
cli
pop
cld
adc
add
iret
inc
mov
inc
mov
sbb
mov
add
add
mov
insl
xchg
dec
nop
add
div
or
lock
add
mov
outsl
sub
sub
add
pop
imul
cmp
or
sbb
jae
xchg
popa
dec
aad
inc
popa
pop
stos
sub
sbb
aam
xchg
mov
mov
mov
stos
shrl
inc
mov
aaa
aad
lcall
mov
jnp
cmpsb
aas
add
je
call
and
mov
mov
jg
jno
cltd
xchg
xchg
and
out
cld
cwtl
dec
xor
push
lahf
cli
mov
add
mov
add
or
int
sahf
mov
inc
lret
ja
add
jns
out
js
add
add
mov
mov
insb
or
mov
inc
push
xchg
mov
test
add
pop
or
xchg
mov
mov
subl
cmc
dec
daa
adc
sbb
jo
mov
push
add
mov
add
shl
in
outsl
pop
sub
add
cmp
lret
add
xor
mov
int
int3
push
outsl
cltd
rolb
rcll
dec
imul
aaa
pop
mov
fstpl
push
fidivrs
test
add
cld
or
mov
add
lock
lea
xchg
pop
jno
ljmp
and
lcall
push
add
push
or
add
stos
sbb
call
add
lret
xchg
dec
mov
scas
aas
pop
push
jl
mov
loop
mov
nop
add
adc
cli
cmp
mov
xchg
loopne
mov
pop
je
add
xchg
xor
fldl2e
and
orl
into
addb
mov
arpl
inc
clc
mov
jne
jecxz
mul
dec
push
add
add
inc
je
pop
icebp
outsl
int3
adc
inc
mov
ljmp
jno
dec
mov
iret
inc
xchg
add
add
push
add
add
arpl
mov
add
add
add
sbb
add
test
mov
mov
push
xor
add
aam
in
xor
mov
cmpsl
pusha
add
pcmpeqd
jo
mov
enter
movsb
jnp
pop
push
insl
mov
clc
in
cmpsb
push
mov
lea
jno
add
jmp
hlt
leave
push
adc
adc
add
cli
fbld
push
rorl
cmp
cmp
push
push
add
lret
imul
pop
or
lock
out
sar
sub
xor
mov
aam
sti
xor
mov
mov
add
fldt
mov
add
sbb
pop
lods
adc
mov
xchg
rolb
mov
out
dec
jne
mov
movsl
inc
loop
mov
jecxz
or
cmp
and
dec
dec
fcmovne
adc
add
mov
push
cmp
ljmp
sub
mov
pop
scas
add
dec
inc
mov
xor
pop
jns
and
pop
out
mov
mov
pop
fucomip
inc
insl
addb
lock
in
adc
mov
and
mov
mov
inc
add
mov
jns
std
sub
add
jb
mov
jecxz
add
sbb
mov
mov
rolb
mov
xchg
or
inc
xchg
adc
xchg
imul
test
mov
lahf
cmp
mov
aaa
repnz
mov
imul
adcl
sti
addb
jne
push
push
add
lds
xchg
incb
dec
mov
adc
add
mov
xchg
and
xchg
fwait
bound
mov
jmp
adc
int3
dec
stc
pushf
cmp
lret
push
mov
mov
les
pop
data16
cmp
add
dec
movsl
push
sub
add
prefetch
or
in
daa
std
je
mov
add
rolb
mov
or
push
add
jns
push
jnp
movsb
imul
push
lcall
lock
mov
negl
rcll
add
sbb
dec
rolb
sbb
add
out
and
icebp
aaa
pop
lahf
icebp
xchg
add
mov
sbb
dec
add
mov
push
divl
mov
add
mov
adc
xchg
mov
push
lods
cmp
inc
add
es
sbb
scas
mov
xchg
lahf
or
mov
pop
test
cld
pop
cmp
sbb
out
leave
mov
insb
push
add
call
in
or
setns
gs
adc
mov
mov
mov
add
dec
jne
stc
outsl
jne
lock
dec
ficoml
xor
les
aas
in
insl
adc
mov
xchg
add
add
rcll
insl
imull
cmp
adc
mov
xchg
add
jne
sti
jmp
lock
add
icebp
callw
dec
addb
adc
mov
mov
sub
and
add
mov
addb
and
add
xchg
loopne
mov
xor
mov
mov
sbb
in
and
push
outsl
push
cmpsl
jle
jne
add
repnz
xchg
sbb
outsb
push
inc
add
jb
mov
sub
dec
pop
sti
fsub
pop
outsb
test
xchg
dec
rolb
mov
push
add
mov
add
fimuls
sub
aam
fisttpll
add
mov
mov
gs
inc
add
cmp
xlat
adc
mov
jnp
movsl
sub
add
loopne
mov
aam
jecxz
repnz
sbb
data16
dec
loope
pop
xchg
add
lcall
pop
push
add
iret
mov
mov
mov
add
lods
dec
or
xlat
cld
jmp
push
adc
add
clc
aam
add
or
xchg
movsl
cmp
mov
scas
mov
fcmovne
add
roll
mov
mov
rolb
mov
std
stc
mov
fcmovnbe
mov
jmp
jns
call
mov
jmp
roll
pop
sub
add
add
xor
mov
mov
pushf
les
es
mov
mov
imul
and
push
or
popw
mov
lret
js
mov
cmp
mov
fiadds
out
cmpsl
sbb
mov
or
repnz
pop
or
pop
lods
dec
mov
or
pusha
add
mov
add
add
sbb
add
ficomps
cmp
sbb
add
sub
rolb
or
push
add
popa
sbb
inc
jmp
enter
sub
add
or
les
add
outsb
notl
or
enter
fstl
add
into
imul
jnp
rcll
pop
mov
int
rcr
add
ss
mov
fstp
or
js
cmpsb
mov
lret
cmp
fwait
add
mov
sar
xor
mov
pop
cmp
ret
push
jmp
or
or
push
add
inc
movsb
aam
mov
mov
mov
lahf
rolb
subl
mov
xchg
xchg
int3
int
xchg
pop
je
add
lds
mov
insb
imul
push
aaa
ss
add
lret
and
bound
mov
add
das
push
cli
addb
sub
add
mov
out
add
mov
cmp
add
mov
dec
aas
dec
test
adc
mov
jo
mov
lods
sahf
mov
adc
add
push
push
test
rcll
xchg
incl
in
hlt
dec
jp
jno
lret
addb
mov
repnz
flds
stos
cmp
insl
adc
cmpl
mov
cli
xchg
fdivrl
adc
int
rorl
in
add
adc
mov
xchg
scas
sar
lods
movsb
ja
add
xchg
mov
cli
mov
lcall
xor
test
mov
push
mov
mov
dec
ljmp
add
hlt
jecxz
dec
dec
pop
cmp
jae
imul
add
clc
fs
add
test
add
pop
pushf
call
mov
dec
test
pop
icebp
lret
add
call
mov
cmc
mov
imul
add
mov
sub
pop
mov
jo
mov
mov
add
loopne
mov
dec
pop
jle
jle
jl
rolb
mov
mov
cli
pusha
add
ljmp
pop
outsl
jp
jo
mov
and
mov
ds
jo
mov
in
sbb
jo
mov
div
call
mov
add
sahf
popf
pop
data16
shrl
and
mov
push
push
movsb
mov
inc
add
add
mov
ficoms
mov
inc
imul
test
arpl
mov
mov
add
rorl
add
lods
movsb
fidivs
xor
test
add
lock
and
jne
sti
sbb
pop
rcll
lods
or
lret
loop
mov
sub
les
push
and
mov
lcall
in
fidivrs
les
loop
mov
fldt
scas
mov
sbb
or
xchg
pop
mov
dec
cmp
jne
pop
pop
adc
add
divl
out
or
mov
jno
jb
mov
mov
mov
int
lock
add
pop
nop
add
xchg
cmp
daa
js
push
pop
popf
mov
xorl
mov
and
pop
mov
mov
pusha
add
dec
pop
pop
add
or
pop
jae
aaa
jl
and
adc
mov
pop
into
loop
mov
aam
add
lea
fsubrl
pop
mov
add
data16
jne
dec
hlt
pop
dec
cmpsb
or
mov
and
add
mov
sahf
pusha
add
dec
pop
mov
aad
push
xchg
stos
icebp
icebp
pop
add
sti
xlat
fstps
out
ja
pop
aad
shll
lret
jmp
xchg
rolb
mov
push
or
aad
add
mov
jo
mov
lcall
push
mov
mov
add
jbe
es
cmp
add
pop
fsubs
popa
mov
stos
jnp
cmp
sbb
dec
fisttps
inc
inc
es
mov
mov
add
or
fldl
add
dec
inc
add
xchg
mov
mov
push
stc
aaa
adc
addr16
mov
mov
mov
lds
stc
sti
pop
int
jne
add
test
xor
mov
sub
jge
mov
or
daa
sbb
popa
iret
inc
inc
fisubl
test
mov
outsb
repz
sub
mov
push
sub
pop
adc
mov
add
xchg
fistps
mov
movsb
mov
std
cmp
fs
mov
mov
mov
add
mov
std
rorl
xchg
jbe
cld
xchg
add
push
jbe
pop
movsb
adc
push
addr16
or
adc
mov
cmp
jae
mov
std
dec
in
jp
dec
addb
pusha
add
jge
cwtl
mov
mov
push
add
mov
add
push
ret
inc
lahf
push
or
sbb
add
mov
inc
inc
add
ret
sub
lea
arpl
into
bound
mov
lods
inc
cmpsb
or
add
add
mov
rolb
or
inc
and
pop
cmp
popa
pop
test
jbe
xlat
push
popa
pop
inc
aam
push
lods
mov
add
add
mov
cmpsl
leave
pop
or
dec
ret
movsb
mov
push
adc
mov
add
cmp
out
xchg
stos
sbb
mov
decb
icebp
sbb
jns
add
add
jo
mov
add
add
mov
out
stc
and
mov
add
and
add
repz
pop
and
in
sbb
mov
mov
cs
icebp
push
nop
add
bound
mov
add
mov
add
and
test
stc
push
inc
dec
lods
inc
add
lahf
xor
mov
addr16
dec
lret
aad
push
in
xchg
outsl
aaa
xchg
addb
test
aad
push
lcall
sub
insb
push
jnp
scas
fstpt
mov
nop
add
loop
mov
ljmp
xlat
sbb
sbb
xor
sbb
cltd
in
sbb
and
mov
push
push
inc
dec
pop
ficoms
xchg
add
xor
add
sub
push
add
push
add
ljmp
jp,pn
jne
add
sbb
inc
addb
mov
or
inc
fisttpll
xlat
int
push
mov
fistpll
add
mov
rolb
inc
mov
add
adc
xchg
push
add
call
push
fmulp
leave
sti
out
stos
xor
mov
sti
adc
sbb
pushf
add
mov
mov
ss
pop
fcomps
add
aam
adc
addb
jno
fsts
add
and
mov
inc
data16
xchg
jmp
push
xor
dec
xchg
aad
adc
mov
sub
adc
xlat
dec
sbb
xchg
inc
add
ret
jb
mov
cli
push
adcl
adc
add
push
mov
dec
inc
xchg
xchg
lcall
aam
fnstcw
nop
add
push
sub
fsubr
jmp
push
xor
popf
push
push
popa
rolb
mov
add
push
mov
addr16
mov
pop
cmpsl
rcl
add
xor
mov
jb
mov
sub
loopne
mov
jp
mov
add
popf
add
add
mov
jno
add
addb
cltd
jno
or
xchg
je
add
test
test
adc
mov
cmp
push
adc
lret
and
mov
sub
test
and
popa
test
mov
icebp
jle
mov
mov
mov
movsb
mov
cmp
add
nop
add
hlt
mov
fiadds
mov
jecxz
repnz
ret
sub
jp
sub
pop
es
loope
mov
idivb
mov
add
lds
inc
add
mov
jno
xor
mov
data16
and
xchg
cltd
mov
rolb
mov
out
insl
hlt
add
mov
or
and
aaa
pop
mov
xchg
push
addb
inc
out
mov
mov
mov
mov
inc
fwait
mov
mov
mov
loope
loope
inc
cmp
add
lods
fdivr
mov
ds
popa
popa
gs
mov
xchg
pop
add
mov
jecxz
pop
cld
adc
mov
dec
bound
mov
lock
rolb
mov
add
fstl
add
jmp
add
dec
sub
jnp
pop
testb
sahf
xchg
pop
pop
xchg
add
mov
aaa
sub
push
fwait
in
outsb
cmpsl
mov
outsl
or
jle
movsl
pushf
dec
xor
add
shll
push
sub
cmp
cmp
jg
push
add
jb
mov
add
fwait
loop
mov
mov
aad
mov
test
cmp
dec
rolb
mov
mov
out
add
sub
xor
mov
incb
xchg
out
dec
xchg
inc
push
push
xchg
add
lret
test
mov
mov
inc
adc
mov
out
fwait
addr16
cld
leave
pop
hlt
push
add
mov
jmp
xor
repnz
sti
mov
sub
in
cwtl
lahf
sbb
addb
mov
push
add
lods
test
jle
std
xor
scas
jge
push
sbb
cli
dec
in
addb
sbb
add
data16
ja
inc
add
dec
pop
mov
pop
out
rolb
rolb
mov
add
add
add
lcall
xor
jge
iret
mov
add
mov
xchg
jo
mov
stos
sub
add
add
aas
xchg
adc
mov
fs
das
push
add
mov
pusha
add
mov
stos
adc
mov
aam
mov
xchg
push
add
dec
mov
xor
mov
gs
dec
sarl
or
xchg
popa
pop
lcall
mov
xchg
mov
or
dec
xchg
mov
add
icebp
mov
mov
pop
jmp
cmpsb
cmp
inc
mov
arpl
xor
orl
iret
mov
setp
shll
add
sti
ret
imul
add
mov
sbb
imul
fs
fs
pop
rolb
cmp
mov
xchg
inc
lret
adc
mov
rolb
mov
dec
cs
pusha
add
sbb
loope
das
sbb
sbb
adc
adc
mov
aas
mov
jae
sbb
hlt
jne
add
mov
shl
add
in
ficoms
int3
or
add
mov
jg
add
sbb
dec
dec
jge
bound
mov
aam
mov
lcall
dec
xor
add
out
mov
xchg
int
pop
sub
jnp
mov
jb
mov
sbb
add
mov
add
mov
add
mov
cmp
add
pop
sub
add
cmp
jb
mov
cs
mov
decl
rcll
cltd
test
je
test
rolb
inc
mov
mov
enter
inc
test
or
xlat
xchg
add
and
and
mov
cmp
in
sbb
repz
scas
inc
inc
add
mov
jnp
add
mov
pop
add
dec
ret
inc
jno
sub
lcall
jbe
xchg
clc
cmp
sahf
aad
out
test
cmp
cmc
insb
je
add
sub
cli
mov
inc
jne
cmp
mov
aaa
imul
add
ds
lds
in
int3
dec
jno
add
dec
dec
in
mov
jbe
add
mov
add
addb
test
mov
and
mov
mov
mov
in
test
sbb
pop
sub
ret
pop
and
ja
add
fildl
test
mov
insb
lock
mov
mov
adc
mov
jp
fwait
mov
arpl
scas
daa
movsl
lcall
xchg
ret
mov
dec
mov
mov
mov
mov
dec
push
add
popa
pushf
arpl
xchg
add
jecxz
add
mov
sub
mov
ret
push
pop
mov
xchg
imul
mov
mov
mov
enter
jecxz
xchg
rolb
fisttpll
push
roll
inc
add
std
das
scas
scas
mov
iret
ljmp
enter
test
test
mov
xor
mov
add
inc
imull
cmp
mov
jle
add
jae
mov
mov
add
mov
clc
nop
add
add
cld
pop
pop
cs
rol
add
lahf
push
push
notl
mov
mov
mov
std
sbb
add
add
pop
mov
ljmp
add
xchg
rcrl
rcr
jnp
ret
mov
clc
xchg
ret
test
xlat
fisubrs
xchg
nop
add
add
mov
aam
mov
mov
fs
pop
jnp
addb
pop
test
add
add
ficomps
xchg
popl
add
mov
lret
or
add
mov
mov
ljmp
pop
mov
imul
add
jns
dec
xchg
sbb
mov
add
add
js
mov
mov
addb
pushfw
dec
adc
cmp
push
sbb
mov
mov
mov
lock
popf
mov
out
outsb
out
xchg
xor
mov
mov
fcomps
sbb
mov
cmp
sbb
xlat
test
ret
addb
sbb
pop
inc
and
shrl
push
add
jno
push
lods
insb
xor
jns
add
adc
repnz
add
mov
data16
sub
test
inc
add
test
add
pop
or
addb
cmp
add
outsl
sub
add
leave
jp
add
fiaddl
nop
add
adc
fstpl
add
sub
inc
add
fmuls
mov
pushf
xor
add
das
loop
mov
insl
addb
iret
mov
mov
pop
daa
jl
xchg
sub
inc
mov
push
add
sbb
pop
fimuls
and
jg
xor
rolb
mov
mov
and
lds
add
mov
idivb
stos
pop
scas
jns
inc
mov
lds
rolb
mov
jns
sbb
pop
int
sbb
sbb
xchg
push
mov
mov
jo
mov
les
cmp
imull
insw
ss
xchg
rolb
fnsave
pop
sbb
mov
push
add
xlat
lret
sub
add
mov
add
mov
sub
mov
dec
in
add
push
mulb
pushf
sbb
add
add
imull
lret
add
sub
psubusw
addb
out
in
push
mov
mov
mov
add
add
mov
sbb
adc
or
sub
add
lret
das
pusha
add
jns
xchg
rolb
mov
test
add
mov
lods
xor
dec
jo
mov
test
inc
fisttpl
lds
lods
movsl
imul
popa
mov
inc
add
pop
cs
cmp
jbe
add
loope
jbe
add
test
add
fidivl
add
mov
rolb
mov
push
add
aaa
cmp
dec
int
add
movsb
insl
pop
fists
in
ss
pop
pop
stos
cmp
mov
js
scas
cltd
in
mov
mov
xchg
inc
sbb
add
cwtl
push
daa
xchg
int
mov
cs
add
jle
mov
jl
scas
stc
cmp
popa
sbb
notl
mov
pop
push
jcxz
add
or
cld
hlt
cmp
enter
add
adc
sub
add
jecxz
add
mov
les
ljmp
aad
jl
test
repz
push
adc
mov
rol
xor
js
jp
mov
and
xchg
inc
loop
mov
mov
mov
fst
popa
adc
or
sub
mov
adc
lahf
xchg
mov
fs
and
jmp
enter
mov
or
lods
adc
xor
fisubrl
mov
mov
jne
inc
xor
fs
ljmp
add
adc
pop
mov
adc
popa
out
test
jo
mov
scas
fsubl
rcrl
mov
jl
cmp
hlt
insl
xchg
add
jno
and
ret
and
aaa
add
push
pop
lds
idivb
sbb
add
imul
mov
xor
mov
inc
mov
xlat
iret
mov
add
das
aaa
inc
mov
mov
push
int
sbb
mov
mov
sbb
ss
jns
xor
mov
add
sub
pop
dec
mov
mov
add
push
mov
adc
movsb
rcrl
aaa
movsb
cmp
ja
push
cmp
add
or
ret
pushf
cmpsl
push
add
call
push
mov
add
xlat
movsl
mov
lock
into
add
add
mov
mov
add
or
in
fwait
lods
xchg
or
push
sbb
or
push
pop
movsb
aas
jmp
jne
add
xor
mov
add
add
jecxz
adc
repz
add
mov
inc
add
mov
jae
test
decl
add
push
lcall
add
jnp
push
movsb
insl
aam
pop
push
test
and
mov
cmpsb
nop
add
dec
push
sub
add
divb
mov
add
push
add
fwait
jnp,pt
das
bound
mov
lock
movsl
lds
mov
test
aad
add
bound
mov
push
jb
mov
outsl
fildl
mov
enter
mov
add
add
addb
nop
add
js
mov
dec
lret
mov
pop
jmp
add
mov
jmp
push
cmovbe
xlat
jge
bound
mov
mov
xlat
mov
mov
sarl
jp
xor
mov
test
iret
sub
std
push
repnz
push
mov
cmp
sar
in
mov
mov
mov
dec
push
sub
mov
rolb
mov
in
mov
and
dec
stc
imull
dec
adc
mov
adc
test
out
lea
mov
jo
mov
sub
loopne
mov
mov
add
mov
ret
mov
or
mov
add
aas
sbb
cwtl
inc
add
addb
inc
add
int3
mov
rolb
mov
cmp
pushf
adc
add
add
push
add
ret
lds
mov
mov
jmp
rolb
mov
movsl
sbb
mov
leave
adc
mov
roll
ja
xchg
repnz
shl
mov
pop
adc
add
add
push
test
repnz
mov
push
add
into
mov
mov
add
xchg
xor
mov
mov
scas
mov
loopne
mov
inc
ret
loop
mov
lret
and
mov
cli
inc
ja
and
mov
aad
xchg
out
lods
or
jge
xchg
lods
push
add
xor
lea
sub
mov
push
add
mov
add
mov
add
push
cmp
cli
addr16
movsb
mov
push
jle
and
mov
sbb
inc
fdivrl
jne
dec
xchg
add
cwtl
lods
data16
add
jmp
cmp
movsb
arpl
in
mov
movsl
pop
xor
xor
gs
sbb
and
push
cltd
dec
sti
xchg
in
femms
push
sub
cmc
imul
daa
and
add
js
jmp
pushf
push
add
and
mov
stc
cmp
cs
data16
jns
outsl
aam
and
mov
lea
jnp
or
repnz
xchg
cmp
sti
ss
pop
popf
fwait
mov
add
pop
arpl
sti
jne
inc
mov
add
sbb
cmp
idiv
push
jns
test
mov
pushf
pusha
add
xchg
pushf
daa
mov
std
sub
add
add
aas
fdivrp
jle
jne
pop
sbb
mov
or
sub
mov
sahf
or
add
pop
cld
pop
out
loopne
mov
sub
add
imul
add
addb
adc
mov
xchg
add
out
mov
add
mov
mov
bound
mov
mov
or
push
cwtl
into
xor
add
mov
pushf
dec
sbb
add
mov
loop
mov
sbb
pop
pop
or
cmp
mov
fcoml
cmc
les
fs
clc
iret
pop
sub
out
test
and
jno
sub
hlt
hlt
and
es
rolb
insb
jmp
add
mov
jg
ret
stos
push
ja
xor
xchg
add
les
or
sbb
cmpsl
std
jb
mov
add
cmc
xchg
out
push
dec
adc
cmpl
add
sub
jl
sti
mull
sub
and
mov
ret
movsl
arpl
mul
add
dec
aas
dec
das
cmpsl
cmc
in
mov
call
add
adc
mov
loop
mov
mov
mov
add
sub
or
mov
mov
cwtl
jb
mov
loope
cltd
dec
sbb
mov
inc
mov
daa
dec
pop
dec
iret
mov
mov
or
lods
hlt
or
das
shrl
mov
pop
xor
mov
push
aaa
sti
in
jp
aas
inc
add
addb
loopne
mov
fisttps
loope
scas
add
fldl
mov
xchg
repz
sbb
insb
rolb
mov
mov
push
add
mov
push
scas
in
xchg
das
add
pushf
xchg
sub
push
add
lods
nop
add
dec
gs
push
lcall
mov
push
repnz
mov
stc
sub
add
inc
add
jb
mov
mov
sbb
mov
jecxz
aam
push
and
test
sbb
mov
add
rolb
mov
add
add
add
jle
fstps
es
scas
inc
add
mov
out
aaa
sub
int
movb
mov
mov
repz
xchg
stos
cmp
pop
xchg
add
mov
ret
xchg
xor
mov
movsl
iret
add
insb
scas
sub
es
mov
add
mov
pop
leave
rolb
mov
inc
mov
mov
lock
test
push
add
sub
js
adc
das
aaa
pop
adc
and
add
mull
mov
inc
add
add
test
add
inc
jnp
pop
rcrl
movsb
leave
lret
lods
mov
ja
xchg
pop
shll
sub
ljmp
xor
insb
pop
aas
ficomps
xor
and
push
add
in
adc
pushf
in
call
add
mov
insl
mov
add
inc
jnp
pushf
iret
push
out
add
int3
jb
mov
push
jge
add
rolb
mov
mov
rcr
sti
add
add
leave
data16
mov
mov
fistpll
inc
add
cmpsl
push
add
icebp
data16
call
mov
pop
mov
clc
push
out
pop
jb
mov
les
pop
pop
jae
dec
xchg
add
jg
and
mov
rolb
mov
add
cmp
nop
add
int
into
pop
insl
int
pushf
push
pop
add
add
std
mov
mov
mov
mov
push
add
pop
imul
or
cli
jp
inc
add
bound
mov
sbb
std
mov
inc
add
lods
cmpsl
imul
lret
dec
push
addb
sub
test
sub
call
outsw
adc
mov
push
inc
inc
adc
mov
mov
or
bound
mov
popa
push
add
mov
mov
add
add
es
iret
outsl
pop
rcrw
mov
mov
in
add
insl
lret
repz
mov
ret
pop
cld
popf
fisubrs
mov
or
add
push
add
dec
jge
addb
push
movsb
in
lods
rolb
mov
mov
add
in
cli
add
pop
and
mov
cltd
dec
outsb
aaa
mov
add
add
inc
jmp
mov
or
lods
mov
dec
sub
cltd
mov
push
in
add
mov
mov
aad
sti
clc
push
add
mov
out
int
push
leave
dec
push
xchg
cmp
sub
fs
cli
mov
hlt
adc
mov
mov
lcall
mov
mov
fsubrl
out
push
jo
mov
push
jb
mov
push
iret
mov
add
pop
sub
lahf
lds
add
hlt
adc
cmp
lods
inc
negb
inc
mov
add
add
add
mov
or
aas
dec
fisttpl
add
jmp
loopne
mov
outsb
push
mov
sbb
divl
rolb
mov
xor
mov
ret
out
xchg
orl
xchg
out
popa
mov
cli
addr16
out
addl
xor
mov
jnp
add
or
pop
cmp
xor
mov
add
sub
push
pop
fs
ljmp
movsb
sub
imul
test
mov
sbb
mov
xor
and
mov
sub
mov
lock
cmp
lods
jbe
fsubp
jl
xchg
stc
push
out
push
add
ljmp
pop
mov
or
test
test
imul
loope
pop
cmpsl
jo
mov
sub
rolb
mov
test
imul
jg
ret
mov
pusha
add
add
mov
sbb
mov
and
scas
mov
icebp
mov
mov
mov
xchg
mov
mov
mov
stos
cld
shrl
insl
inc
add
mov
push
hlt
nop
add
xchg
or
lds
jle
add
icebp
mov
loop
mov
test
lret
mov
add
addb
mov
mov
add
pop
fdivl
adc
mov
jb
mov
pop
dec
mov
and
mov
mov
mov
add
jge
add
mov
adc
mov
addb
lods
vpshufhw
movsl
push
or
loopne
mov
cmp
xchg
scas
mov
je
sbb
mov
mov
or
add
sub
sbb
les
push
add
shr
testl
test
mov
add
out
jno
xchg
ret
movsl
sbb
cmpsl
mov
data16
mov
fldcw
cmc
sbb
in
rolb
mov
fisubl
xchg
clc
test
fstpl
mov
mov
pop
and
aaa
les
xchg
mov
mov
add
ret
sbb
repnz
mov
subps
mov
repnz
jb
mov
xor
sub
sub
xor
mov
outsb
cwtl
and
add
mov
and
mov
dec
shll
and
pop
stos
mov
push
add
xor
mov
pop
mov
xlat
push
popf
loope
inc
push
add
ja
test
gs
lcall
inc
add
mov
lahf
lea
ret
daa
mov
jb
mov
outsl
or
and
aam
jg
or
jl
into
insl
pop
into
test
xchg
xorl
lds
fisttps
add
xor
stc
orl
xchg
push
incb
jnp
pop
and
lret
add
mov
add
mov
daa
ljmp
add
pop
addb
icebp
pop
fs
lods
jge
leave
je
inc
xchg
js
and
pop
les
mov
cmp
mov
mov
out
imull
dec
mov
mov
adc
mov
dec
adc
sahf
push
icebp
xchg
add
add
mov
ds
sbb
sub
add
push
data16
mov
sbb
lret
outsl
clc
sbb
xchg
int3
adc
movsb
adc
and
mov
dec
cmp
mov
add
leave
dec
pusha
add
inc
hlt
mov
adc
mov
push
mov
les
sub
and
mov
jg
inc
mov
add
sbb
sub
inc
inc
leave
mov
test
mov
cmp
pop
cmpsl
pop
stos
insb
inc
add
or
add
sbb
dec
push
add
scas
jge
repz
inc
mov
inc
add
and
mov
push
add
sbb
and
mov
sti
subl
daa
cmc
adc
lahf
push
sbb
add
mov
add
ja
cmp
scas
mov
mov
mov
test
mov
sbb
cmp
mov
xor
mov
addl
mov
adc
add
push
lods
push
rolb
mov
fwait
notl
mov
adc
mov
ljmp
loopne
mov
out
outsb
scas
leave
or
add
lods
addb
scas
push
add
mov
push
cltd
stc
adc
adc
mov
push
mov
cltd
cmpsl
sub
pop
add
adc
mov
dec
inc
bound
mov
jl
add
cmc
fnstsw
add
add
mov
fdivl
test
aaa
stc
or
inc
and
adc
mov
add
bound
mov
hlt
adc
mov
mov
andl
pusha
add
mov
lods
sub
cs
or
aaa
jg
add
mov
mov
lods
xlat
jbe
pop
fs
mov
mov
jae
mov
jp
pop
xchg
xor
mov
inc
mov
mov
aaa
loop
mov
sbb
adc
dec
leave
cli
jne
addb
movsb
pop
xor
push
xchg
add
add
mov
add
cmc
imul
mov
mov
xchg
stc
or
int
enter
xchg
add
sahf
test
mov
push
shll
xchg
lock
mov
inc
add
mov
jle
inc
add
add
daa
outsb
pop
fcmove
jl
dec
cmp
jb
mov
inc
pop
sbb
xchg
call
xor
add
cwtl
fwait
mov
lods
call
popa
adc
leave
jmp
add
gs
ret
insl
or
add
scas
in
sbb
xchg
sarl
xor
mov
push
mov
fs
add
test
add
mov
mov
mov
mov
and
add
pushf
cmp
xchg
int3
add
push
add
std
fcoml
mov
pop
cmp
or
add
add
inc
pop
mov
dec
jl
jg
and
daa
fs
in
add
pop
xchg
lock
je
in
aas
and
dec
into
addl
jno
add
ret
adc
xlat
push
dec
scas
std
jle
mov
dec
das
lds
pusha
add
mov
mov
xchg
repnz
adc
mulb
sub
pop
addb
aaa
xchg
jp
jg
cmp
sub
adc
mov
sub
addb
mov
add
mov
adc
mov
dec
cli
cmp
fisubl
jg
dec
sub
push
add
add
mov
mov
cmp
xor
shll
dec
xor
mov
jae
jbe
stc
sbb
mov
mov
pusha
add
mov
loope
je
insl
shrl
lods
mov
mov
jnp
sub
sub
dec
test
add
fisubs
jecxz
fisttpl
push
call
fnsave
push
addb
add
in
cmpsl
aaa
inc
imul
mov
cmp
cld
sub
mov
xchg
jecxz
and
mov
mov
in
sar
pop
cmp
add
xor
mov
add
fstl
mov
stc
jae
cmc
add
gs
mov
pop
inc
add
add
sub
loop
mov
stc
inc
lcall
add
mov
ficoml
add
data16
mov
jno
cmp
decb
jmp
roll
mov
lret
sub
and
mov
xchg
icebp
loopne
mov
add
add
test
add
mov
sub
xlat
dec
lods
push
pop
sti
test
mov
lret
insb
out
add
mov
mov
jnp
int
add
add
mov
add
popf
pop
fsub
mov
mov
leave
push
in
cli
iret
jge
lock
jmp
movsl
xchg
ficompl
jno
fdivl
xor
mov
mov
add
xchg
inc
add
mov
xchg
add
xchg
int3
or
adc
add
hlt
mov
or
xchg
xor
mov
add
inc
insb
inc
dec
popf
dec
cmp
cmp
xchg
mov
test
push
adc
mov
loop
mov
adc
fcoml
push
inc
jp
call
or
pop
add
mov
add
sbb
cmpsl
mov
xchg
xchg
repnz
jge
sub
jns
lods
push
js
imul
dec
iret
shll
jecxz
xchg
pusha
add
bound
mov
fdivrl
jne
popf
notb
add
fisubs
and
mov
je
popa
sbb
or
mov
int3
movsl
mov
jl
aad
dec
cmp
enter
sbb
leave
lock
mov
pop
cmp
fs
je
mov
mov
mov
push
adc
push
adc
mov
popf
dec
jns
xchg
mov
clc
int
jle
sub
test
aaa
es
js
je
push
aaa
adc
mov
lcall
pop
out
pop
xor
mov
cwtl
mov
inc
or
bsf
sbb
test
dec
adc
mov
leave
cli
jae
mov
sbb
movsl
jg
movsb
cld
adc
mov
or
mov
mov
mov
add
rolb
mov
fwait
push
frstor
add
jp
push
add
sbb
or
enter
add
clc
push
adc
jle
movsb
inc
add
inc
leave
call
out
int3
movsb
or
stos
mov
xorl
mov
dec
pop
leave
outsb
sti
mov
mov
test
rcrl
dec
roll
pop
xchg
sbb
mov
lods
das
lods
in
loope
jecxz
es
mov
add
dec
iret
xorl
rolb
mov
mov
mov
jbe
add
fsubl
jge
cwtl
jge,pn
jecxz
pop
cld
in
imul
rolb
mov
sbb
mov
ss
test
inc
stc
sbb
lds
bound
mov
push
shll
add
scas
xchg
add
movsl
lret
pop
outsb
loopne
mov
inc
fildl
add
and
mov
jbe
aad
cmp
inc
add
data16
pop
xchg
add
pop
mov
add
add
sarl
addl
mov
in
int
in
and
addr16
xchg
loope
test
xor
mov
inc
add
dec
jmp
mov
pop
adc
cmp
fiaddl
ss
jno
xor
mov
mov
out
cmpsb
test
lret
mov
dec
jle
js
call
xor
call
lods
cmpsl
xchg
lods
arpl
lret
sub
mov
push
mov
sbb
cld
pop
and
mov
mov
or
dec
stos
cmpsb
sub
push
adc
mov
dec
xchg
mov
mov
dec
add
xor
and
dec
pop
jmp
push
and
cmpl
jbe
jb
mov
mov
jae
ret
pushf
xchg
xchg
jmp
mov
xchg
xor
sbb
and
add
pop
push
lret
sub
test
arpl
inc
cmp
repz
mov
xor
mov
out
loopne
mov
add
dec
or
fildl
push
add
je
mov
push
ds
inc
jge
mov
jnp
or
stos
adc
add
mov
nop
add
push
addl
pusha
add
or
xchg
mov
mov
xor
mov
and
aas
pop
sti
bound
mov
fdivs
outsl
imul
jno
add
mov
add
add
mov
out
imul
mov
mov
pop
cmp
ficomps
push
clc
dec
out
movsb
out
loopne
mov
add
pusha
add
loop
mov
pop
sbb
jg
xor
mov
cmp
xor
mov
movsl
aad
lahf
xchg
add
or
cmp
jb
mov
add
or
push
add
pop
jno
rolb
mov
dec
xchg
clc
arpl
add
je
xor
mov
adc
mov
cmpsb
cmp
dec
cwtl
clc
incl
into
jno
mov
mov
add
mov
add
stos
sahf
daa
bound
mov
cltd
mov
ffree
add
add
add
lret
push
cmc
data16
add
divb
popl
stc
push
add
mov
dec
mov
push
cmp
nop
add
mov
adc
push
mov
and
gs
jo
mov
ret
test
pushf
je
add
pop
pusha
add
mov
dec
dec
xchg
pop
aaa
addb
iret
fadds
add
dec
cmp
in
pop
leave
and
lock
addb
addl
aas
ljmpw
cmp
add
fwait
jl
lret
dec
sahf
or
imulb
cmpsb
pop
iret
test
addb
loope
mov
fs
mov
mov
mov
repnz
dec
bound
mov
pop
test
addb
aaa
and
rolb
mov
fnstcw
leave
sbb
mov
lea
fucomi
xchg
andl
mov
in
cli
sub
pop
loop
mov
aas
pop
sbb
and
mov
lcall
add
cmpsl
jb
mov
inc
add
imul
out
out
xor
ds
mov
cmpsb
imul
dec
rolb
sub
xchg
add
push
jno
bound
mov
or
jmp
cmp
xlat
mov
or
add
lea
imul
out
addr16
adc
add
mov
clc
sbb
mov
push
sub
dec
fbld
lds
mov
aam
fstps
inc
mov
add
mov
clc
movsl
loopne
mov
mov
ss
fisubl
mov
aad
mov
mov
push
adc
mov
xor
mov
lahf
dec
mov
jns
mov
cmc
push
add
out
pop
outsb
push
pop
adc
add
add
mov
xchg
pusha
add
or
ja
adc
rolb
and
jl
sub
inc
add
test
pop
xchg
mov
add
mov
jnp
loopne
mov
rolb
mov
sub
andl
in
gs
push
mov
mov
pop
outsl
push
add
lcall
outsl
sub
mov
inc
sarl
jne
xor
movb
enter
mov
sbbl
scas
xor
mov
mov
icebp
enter
mov
cmp
add
insb
push
orl
xchg
pop
add
mov
mov
adc
mov
add
lea
sub
pop
and
and
mov
lds
jae
xor
cwtl
cmp
mov
outsl
addl
mov
loop
mov
das
enter
in
mov
mov
pop
adc
and
repnz
stos
stc
ret
sti
ss
fdivs
in
inc
xor
addb
mov
jb
mov
push
lods
pop
jl
data16
repz
fcomip
mov
aam
push
jbe
add
add
push
add
int3
mov
mov
mov
mov
lcall
lret
or
in
cltd
out
mov
sub
xor
fimull
cmc
daa
dec
enter
cmpsl
add
mov
mov
or
ds
add
fdiv
rolb
mov
addb
lcall
lods
mov
push
add
bound
mov
or
addb
xor
in
jo
mov
mov
push
adc
mov
lahf
or
addb
mov
add
filds
add
add
jle
loopne
mov
fidivs
add
add
mov
add
in
adc
mov
mov
push
mov
scas
jmp
pop
jge
xchg
push
jb
mov
inc
sub
sub
push
and
add
mov
mov
mov
mov
xchg
inc
test
cmp
adc
jnp
dec
push
add
mov
test
xchg
add
xchg
and
mov
rol
mov
add
mov
or
add
mov
add
sbb
sub
xchg
push
pop
inc
in
mov
jb
mov
push
pop
mov
jo
mov
mov
and
xor
push
adc
inc
add
repz
jl
outsl
dec
jecxz
ja
test
js
add
mov
jl
jle
jecxz
pusha
add
push
add
mov
inc
pop
std
dec
and
xchg
dec
out
xchg
add
aaa
pop
xchg
or
icebp
dec
aad
add
rolb
mov
or
or
sub
sbb
mov
mov
ljmp
add
fimuls
outsb
inc
add
xchg
mov
fwait
ljmp
add
push
std
sub
addb
ja
les
jns
rolb
int3
sub
insb
popf
movsb
mov
mov
enter
dec
outsb
jl
leave
lock
xchg
adc
add
dec
sarl
push
mov
lock
sarl
push
pushf
cmp
add
sub
mov
dec
cmc
jb
mov
ss
popa
cmp
mul
add
and
mov
add
and
mov
cmp
pop
sub
xchg
push
imul
cmpsb
fistl
in
mov
mov
gs
add
seta
jbe
add
fldcw
test
add
xchg
push
rolb
mov
fldl
push
add
rolb
aas
xchg
xor
mov
and
add
scas
daa
push
fimull
sub
scas
daa
adc
mov
popa
or
rolb
mov
xchg
add
mov
add
addb
jb
mov
xor
mov
dec
movl
xchg
and
mov
rolb
mov
test
adc
mov
into
dec
lret
add
fs
inc
add
jo
mov
cmp
jae
cmp
jg
lcall
orl
jge
mov
out
xlat
push
mov
xor
int
pop
pop
sti
fcmovu
ret
lock
add
add
mov
loopne
mov
es
add
shll
repz
xchg
fsubl
mov
jae
fxch
and
mov
adc
jae
std
push
push
inc
add
gs
push
add
loop
mov
sbb
dec
dec
sahf
pop
mov
imull
test
xchg
add
add
push
mov
or
add
cmpsb
imul
fwait
loope,pt
rolb
pushf
rolb
mov
aas
loope
add
xchg
pop
cmp
insb
mov
add
ja
lea
pop
push
mov
lret
ret
stos
imul
jnp
jae
lock
outsb
xor
out
mov
add
enter
adc
sti
and
addl
cmp
and
loope
cmc
std
addb
mov
test
inc
sbb
add
add
add
xchg
repnz
mov
add
nop
add
icebp
ljmp
fs
add
mov
out
push
jbe
or
jecxz
push
xchg
int
cltd
xchg
mov
bound
mov
adc
jmp
or
les
mov
xor
mov
push
jmp
add
mov
lret
arpl
stos
adc
add
movsb
adc
add
mov
mov
or
out
lret
cmp
fldl
mov
std
mov
jmp
repz
xchg
pop
pusha
add
daa
add
mov
push
jp
or
jbe
cmp
mov
jge
insl
cltd
sub
push
jo
mov
ljmp
jae
filds
sbb
push
cmp
lahf
lcall
popa
shr
mov
mov
add
pop
pop
enter
jp
rolb
cmp
fiadds
dec
enter
add
js
dec
cli
pop
pop
jno
lret
mov
jl
add
mov
ror
or
je
and
mov
mov
mov
mov
adc
add
push
call
mov
xor
addb
cmp
movsb
mov
mov
jne
inc
add
clc
cmp
mov
loope
xchg
std
mov
insb
mov
mov
add
or
adc
mov
lret
dec
neg
stos
or
mov
mov
adc
add
loop
mov
mov
add
jnp
pop
xchg
mov
mov
push
add
mov
adc
mov
fidivrl
mov
lods
ss
fbld
add
jae
add
xchg
add
push
mov
push
add
xchg
adc
add
add
stos
std
outsl
ss
insb
push
or
add
clc
icebp
aam
jmp
mov
in
xchg
add
mov
add
mov
mov
mov
add
or
insl
push
cmpl
sub
mov
sub
rolb
sbb
cmp
inc
add
out
and
fadds
adc
mov
xchg
in
sub
mov
add
ret
sti
aaa
int3
push
pop
pop
incb
push
xlat
enter
pop
dec
inc
add
leave
hlt
roll
pop
jmp
insl
xchg
movsb
mov
add
inc
add
mov
fbld
add
xchg
dec
ret
fidivs
les
mov
sub
push
xor
mov
ljmp
jg
add
fistpll
sub
out
into
icebp
sbb
jmp
inc
add
dec
and
pop
cmp
pop
pop
xor
push
inc
push
push
xchg
leave
mov
add
add
or
cmp
or
test
mov
cmp
add
sbb
ret
sub
and
cmp
adc
inc
mov
sbb
push
out
movsl
sti
out
or
jb
mov
mov
xchg
aad
xchg
adc
or
add
add
pop
or
push
inc
sub
lret
mov
mov
lock
sti
enter
sub
jb
mov
sub
mov
int
iret
pop
shrl
cmp
mov
add
jns
je
stos
mov
cmc
cmp
sti
pop
rolb
mov
outsb
inc
sbb
mov
je
pop
add
mov
dec
test
repnz
notb
jmp
add
add
mov
movsb
rolb
in
arpl
pop
rcr
or
xor
adc
push
add
xchg
jns
pop
lret
fwait
dec
cmpsb
pop
xchg
or
and
mov
add
mov
sbb
sbbl
cwtl
mov
or
dec
and
test
notb
add
mov
in
mov
repnz
test
lea
rolb
addb
call
sahf
and
addb
xchg
mov
and
lcall
xchg
mov
outsl
into
push
aad
xchg
movl
mov
mov
sti
out
cld
jle
jmp
inc
push
loop
mov
lret
enter
jmp
mov
mov
mov
xchg
jo
mov
and
addb
lea
out
push
adc
mov
add
xchg
sub
jo
mov
cmp
mul
add
dec
pushf
out
add
ret
or
dec
xor
mov
add
mov
add
test
mov
mov
add
addr16
rolb
in
mov
add
xor
adc
mov
xor
mov
and
arpl
cltd
jnp
mov
xchg
pusha
add
jo
mov
jle
dec
push
shl
add
push
inc
add
dec
div
xchg
fs
jo
mov
sub
add
mov
add
aaa
inc
mov
mov
add
repz
add
cltd
repz
add
and
pop
mov
dec
jmp
add
out
pusha
add
fsts
add
mov
dec
leave
rep
mov
add
add
movsb
fwait
dec
rolb
mov
test
add
nop
add
addb
xor
fldenv
scas
inc
push
mov
aad
loope
pusha
add
sti
jae
xchg
mov
add
and
mov
cwtl
xor
mov
sub
arpl
outsb
in
test
add
ljmp
push
add
je
shr
stc
cmp
jmp
or
mov
jmp
sahf
je
enter
xor
arpl
lods
push
scas
sub
add
fwait
push
aas
lods
ret
arpl
sbb
xchg
add
lea
lcall
mov
arpl
jmp
lahf
cmp
pop
clc
imul
dec
arpl
cmp
pop
cltd
fildl
add
mov
dec
lods
lods
insb
movsl
jae
add
dec
xor
add
test
dec
push
lock
lods
and
mov
ss
lahf
scas
aas
movl
cmp
add
rolb
mov
dec
insb
aad
popf
or
movsl
fcoml
scas
shll
mov
mov
test
inc
adc
push
jge
cltd
dec
lret
pop
xchg
pop
hlt
dec
sbb
mov
fwait
ret
push
mov
mov
in
cmc
jno
add
addb
repnz
filds
mov
mov
add
push
add
daa
jne
inc
jnp
cwtl
cli
xchg
add
sahf
inc
add
mov
fnstcw
ljmp
mov
scas
xor
mov
jl
add
add
xchg
mov
ror
inc
sahf
sbb
mov
push
fsubrl
icebp
shll
sub
loopne
mov
sahf
adc
pop
addr16
adc
mov
mov
mov
jne
dec
ss
addb
and
sbb
loope
repz
fwait
push
mov
fs
adc
mov
les
sub
mov
jmp
call
stc
daa
loop
mov
add
and
mov
mov
cmp
outsb
add
add
shrl
mov
jae
aas
imul
das
xchg
pushf
sbb
mov
or
lcall
mov
mov
imul
add
rolb
mov
push
fs
push
add
add
inc
das
scas
mov
mov
mov
push
sbb
in
lret
mov
rolb
mov
insb
ret
sarl
pop
mov
add
sbb
dec
xchg
dec
inc
add
sbb
cmpsl
test
jnp
fidivl
clc
jle,pn
add
adc
jmp
test
add
add
mov
jo
mov
mov
jnp
xor
cmc
outsl
int3
les
jns
xor
sbb
pop
movsb
mov
push
icebp
jp
ret
je
and
mov
test
lea
add
je
in
addr16
sub
lahf
jno
push
ja
add
outsl
xlat
mov
cli
cmp
mov
mov
test
adc
mov
insl
or
mov
add
mov
es
mov
ret
add
mov
mov
push
addb
sub
xchg
add
xchg
add
insb
adc
imul
sub
mov
xor
mov
outsb
inc
add
incl
cltd
sub
add
push
addb
dec
fnsave
out
add
cmpsl
xchg
icebp
xlat
lods
sub
or
inc
daa
fstps
and
add
add
adc
aas
lret
mov
lods
add
add
insl
mov
cmpsl
mov
xor
movsb
pop
lods
ror
pop
rolb
sti
and
jno
mov
add
leave
mov
mov
inc
mov
jecxz
dec
sub
daa
ja
dec
mov
out
sub
in
mov
scas
in
movsb
jmp
mov
mov
mov
insb
cmc
sahf
loop
mov
into
rolb
mov
xchg
jbe
xchg
inc
add
addb
insb
jbe
add
ss
test
add
add
and
mov
call
or
sub
cli
mov
aaa
das
mov
mov
stos
mov
mov
pop
test
repnz
movsb
add
mov
inc
mov
add
imul
popa
in
pop
leave
add
mov
add
adc
or
dec
mov
roll
test
mov
xor
fnstenv
sbb
jge
es
cltd
push
loope
ja
rolb
mov
lret
dec
loop
mov
ds
sub
dec
adc
cmp
xor
mov
add
xchg
xor
mov
ds
dec
loop
mov
add
mov
jmp
add
gs
add
add
mull
and
mov
enter
lds
lcall
mov
lea
add
movsl
mov
add
or
data16
mov
mov
push
add
mov
int
mov
fdivl
and
sbb
mov
arpl
stc
lock
out
cmp
loope
lahf
pop
addb
pop
xchg
in
add
mov
xchg
stos
inc
sub
mov
sbb
jmp
or
jnp
mov
fstpl
dec
push
xchg
test
sahf
ret
out
fists
xchg
adc
add
sti
adc
mov
mov
mov
adc
out
aad
pop
xlat
ficoml
mov
mov
outsb
mov
mov
leave
dec
xor
mov
mov
loop
mov
add
dec
add
mov
xchg
mov
add
cmpsb
into
addr16
jne
or
mov
mov
jp
lret
xchg
pop
push
stc
mov
mov
jmp
and
incb
or
lcall
fs
add
xor
js
and
mov
stos
fcmovnbe
insb
sub
pop
and
mov
mov
mov
mov
das
inc
inc
add
sub
std
gs
ret
ret
adc
jnp
sbb
add
adc
int
and
mov
add
daa
pusha
add
xchg
cvtdq2ps
sbb
jge
dec
int3
xchg
imul
add
pusha
add
cmpsb
mov
cmp
mov
fnsave
jge
addb
cmp
add
sahf
dec
test
sbb
add
sbb
mov
addb
add
inc
push
inc
stc
pop
lock
mov
mov
add
ja
xchg
ds
lret
enter
add
cmc
fld
add
cltd
mov
cmp
and
mov
imul
mov
dec
cmp
rolb
mov
arpl
push
jmp
pop
cld
icebp
mov
add
jle
cltd
pop
test
mov
repz
mov
add
xchg
cmp
add
or
stos
xchg
sbb
add
arpl
aas
inc
arpl
mulb
sbb
fimull
add
loope
lret
jl
int
stos
mov
add
test
iret
inc
shlw
lock
mov
loopne
mov
jbe
add
enter
mov
pop
xchg
fcomps
cmp
adc
mov
cmp
jp
loope
das
addr16
mov
fldcw
cmp
loopne
mov
movsl
std
xor
add
rolb
mov
xor
mov
mov
and
out
inc
push
add
scas
rcll
xchg
sbb
lret
lret
mov
addb
push
jne
in
mov
xchg
sbb
xchg
sub
sub
rolb
loopne
mov
xchg
add
dec
push
ljmp
sub
add
sub
pop
xor
mov
add
mov
mov
sub
or
inc
and
fucomip
xor
dec
scas
sbb
add
mov
and
jl
ss
jo
mov
in
lods
jmp
mov
push
xor
mov
mov
add
fidivs
and
jne
in
add
int
cmp
add
jo
mov
cmp
movsb
stc
adc
and
mov
mov
lea
pop
dec
sub
hlt
adc
mov
add
xchg
jg
push
lcall
and
jne
cmp
lea
movsb
jae
pop
add
xchg
int3
repnz
mov
mov
mov
mov
and
gs
push
add
mov
xchg
mov
xchg
mov
pop
call
and
mov
mov
xchg
adc
mov
and
mov
idiv
std
jns
ret
pop
xchg
mov
in
test
add
add
mov
fucom
pushf
jle
int
fldl
jns
icebp
dec
scas
in
cmpsb
mov
jle
jge
add
in
imul
push
xlat
popa
jmp
add
mov
lret
je
mov
mov
mov
add
lahf
pop
xchg
jecxz
stc
and
mov
ret
cmp
mov
insl
rolb
mov
mov
mov
inc
popf
jb
mov
jb
mov
cmp
js
jns
inc
rolb
mov
out
shll
add
mov
lahf
bound
mov
xor
mov
fadd
mov
icebp
inc
adc
mov
push
scas
sbb
scas
xor
mov
sbb
aaa
mov
add
mov
mul
scas
sub
and
push
pushf
sub
mov
outsb
push
clc
fsts
mov
popa
jbe
add
add
adc
mov
push
cmp
fsubrs
adc
insl
mov
sub
add
mov
inc
lock
mov
aad
sub
fwait
and
mov
out
and
lods
jnp
jb
mov
add
mov
mov
imul
or
aaa
js
rcr
jne
add
loop
mov
dec
pop
das
push
push
sub
xchg
inc
add
mov
add
sbb
mov
js
cs
fldt
pusha
add
sbb
mov
xchg
movsb
add
mov
outsb
add
jmp
sbb
jbe
sbb
jns
daa
inc
xchg
add
movsl
ret
pop
clc
std
aad
fildl
add
out
add
add
popf
mov
mov
loopne
mov
mov
out
add
and
cmp
repz
mov
or
jl
push
fldt
xchg
lret
add
cmp
aaa
dec
sar
add
mov
clc
push
ds
mov
xor
sbb
lea
ret
lret
mov
aad
jg
add
cmpl
pusha
add
mov
insl
aam
jg
stos
loopne
mov
in
aas
cwtl
mov
jmp
add
add
rolb
mov
inc
and
fwait
pop
jecxz
mov
pop
lods
clc
or
sbb
add
inc
add
jo
mov
mov
int
add
lcall
xchg
ret
aam
sahf
sbb
repnz
arpl
std
fmuls
iret
test
shrl
cld
or
test
dec
sub
mov
addb
mov
add
push
add
adc
jl
xlat
int
add
ss
add
jo
mov
mov
movsb
push
lds
test
lods
cli
out
or
out
test
addb
mov
mov
xchg
cmp
add
icebp
push
rolb
mov
pop
sub
pop
in
sub
mov
adc
mov
add
add
or
cmp
mov
add
xchg
or
xchg
andl
dec
mov
std
fbstp
add
inc
ret
mov
lahf
xor
mov
add
mov
push
aaa
mov
lock
add
adc
sbb
and
mov
jecxz
adc
dec
dec
nop
add
aad
add
inc
pop
pop
sbb
cmpsb
imul
add
pushf
xlat
imul
inc
and
rolb
mov
addr16
sub
add
add
cmpsb
sub
or
inc
add
loope
insl
mov
mov
mov
fldcw
rolb
mov
ja
jp
daa
xor
mov
jb
mov
jno
xchg
add
mov
xchg
xchg
in
hlt
fisttpl
add
xchg
test
inc
out
clc
pop
adc
adc
mov
scas
push
sarl
scas
rcll
mov
mov
jecxz
jnp
add
add
or
addl
notl
mov
cmp
sbb
ds
cmp
add
repz
das
xchg
add
js
shl
stos
hlt
aad
stos
cmpsb
mov
outsb
sbb
xchg
repnz
adc
jge
rol
mov
mov
mov
imul
pop
ret
mov
sub
dec
shll
jns
ret
jnp
repz
repnz
mov
mov
mov
xchg
mov
loope
into
cmpsl
xor
mov
rcrl
loopne
mov
inc
dec
dec
mov
pop
addb
pushf
sbb
std
cmp
add
add
rolb
add
mov
pop
test
jle
jl
pop
xchg
or
add
fs
inc
add
push
add
sub
in
cltd
aad
or
pop
ja
xor
outsb
enter
mov
and
push
add
mov
or
ficoml
arpl
mov
add
inc
xor
mov
mov
mov
add
mov
icebp
negl
leave
add
mov
ret
ret
mov
cld
inc
mov
pop
sbb
add
pop
dec
in
pop
iret
push
xchg
lds
pop
sbbl
add
or
test
ret
int3
xchg
and
mov
js
out
jp
addb
adc
mov
add
add
pop
stc
sub
cmp
into
push
jmp
iret
mov
add
dec
mov
mov
and
mov
pusha
add
lods
in
and
mov
imul
mov
jge
mov
xor
lods
cs
nop
add
and
outsb
scas
out
fst
dec
mov
push
call
fisubrl
mov
mov
mov
adc
mov
fwait
adc
mov
repz
mov
add
mov
mov
add
sarl
rolb
out
xchg
add
lret
cmpsb
jecxz
jno
push
adc
mov
std
test
pop
mov
add
test
jae
pop
lock
mov
mov
xlat
imul
push
add
sub
cmc
rolb
mov
and
mov
mov
out
sub
std
xchg
das
jo
mov
inc
shrl
mov
inc
fcomps
shrl
cmpsb
mov
mov
mov
mov
mov
imul
adc
pop
cmp
fldt
lcall
out
push
add
add
rcr
rorl
mov
sub
add
sub
popa
ret
dec
daa
aam
or
loop
mov
mov
ret
into
push
jo
mov
mov
xor
mov
or
sbb
add
shll
and
sbb
push
rolb
mov
cmp
nop
add
add
mov
mov
jae
rcll
movsb
and
mov
std
and
addr16
aaa
icebp
in
rolb
mov
pop
xchg
xchg
xchg
jl
lret
lret
adc
and
add
ja
popa
daa
jns
inc
add
or
je
xor
jle
lcall
xchg
push
mov
std
lahf
insl
lcall
pop
test
fbstp
add
add
stos
push
mov
mov
xor
xchg
mov
cltd
adc
je
add
mov
mov
fst
add
or
rolb
mov
sbb
push
or
add
cmc
cli
lods
lret
add
jp
or
in
movsl
out
loop
mov
mov
mov
cltd
outsl
or
mov
cmp
add
dec
lock
cli
jns
and
mov
data16
xor
or
loopne
mov
adc
jno
xchg
inc
xchg
dec
cs
inc
xor
aam
lods
mov
sbb
push
jp
ljmp
add
fisttpll
mov
pop
inc
mov
mov
add
add
add
fldcw
loop
mov
daa
icebp
mov
mov
mov
dec
xchg
in
push
add
dec
enter
push
testb
add
inc
and
push
add
lahf
xchg
aaa
rolb
mov
mov
je
xchg
sbb
xor
outsl
add
mov
push
pop
stc
mov
mov
popf
push
add
mov
lret
mov
mov
add
add
insl
daa
repz
into
mov
ss
add
sahf
push
test
xchg
lahf
jo
mov
pop
jp
dec
fists
repz
mov
pop
rolb
mov
adc
push
cmc
cmp
jbe
add
add
fsubl
add
aas
lret
sti
ljmp
frstor
mov
push
into
rolb
iret
decl
adc
mov
sarl
bound
mov
jo
mov
leave
aas
iret
and
add
xchg
fdivrl
add
add
pusha
add
repnz
jg
data16
in
cmp
add
xor
lods
cltd
and
push
inc
add
mov
or
dec
xchg
add
add
add
loop
mov
lahf
aam
cmp
xchg
add
and
sub
push
push
add
mov
add
xchg
pushf
add
mov
add
add
out
add
or
cmp
inc
int3
mov
mov
mov
push
pop
test
test
ret
mov
mov
adc
mov
mov
mov
dec
aam
rolb
negl
push
sub
loopne
mov
sbbl
or
add
mov
imul
cmp
push
imul
mov
jns
lret
aad
jno
out
add
mov
and
mov
cmpsl
js
arpl
mov
add
xchg
out
movsb
or
out
call
mov
mov
sub
imul
mov
mov
jbe
cmp
gs
mov
sbb
cmp
xchg
int
lcall
cmp
arpl
jns
xlat
push
add
std
stos
addl
loopne
mov
cmp
lods
roll
and
inc
pop
popf
mov
rcl
or
popf
and
rolb
mov
sub
test
in
pop
rolb
mov
cmpsl
test
fwait
jg
mov
add
aad
fs
mov
pusha
add
stos
jbe
cltd
jle
inc
add
andl
add
lahf
cmp
cmpsb
dec
lea
aam
iret
push
rolb
mov
push
pop
enter
jbe
sub
push
xchg
dec
push
add
outsl
cwtl
fistpl
xchg
rolb
mov
cmp
sbb
mov
or
inc
or
rolb
mov
cmp
sti
sbb
add
ds
iret
xchg
fs
add
mov
rcl
mov
ret
out
lret
js
add
sub
dec
das
sub
out
push
push
insl
fistpll
rolb
mov
adc
bound
mov
add
mov
mov
cmpsl
push
sti
into
add
leave
mov
int3
fnstsw
mov
rolb
mov
xchg
add
dec
dec
bsr
adc
mov
ja
mov
sti
stc
and
push
rcrl
xor
mov
push
add
aam
lcall
icebp
imul
push
push
xchg
mov
stc
movsl
dec
cmpsl
cmpl
mov
add
pop
add
pop
mov
cwtl
jns
lds
out
ljmp
add
loopne
mov
cmpsb
lret
add
add
add
mov
mov
or
fwait
jle
mov
les
push
inc
lret
fsubs
xor
mov
rolb
mov
aaa
adc
mov
sahf
sahf
es
sbb
add
sbb
sbb
mov
repnz
and
mov
mov
repnz
cld
jbe
dec
repz
mov
add
mov
addl
adc
mov
mov
or
add
mov
cmp
in
rolb
mov
insl
addb
fists
imul
or
lret
push
jnp
sbb
sub
xchg
aaa
mov
out
mov
add
mov
inc
and
mov
in
enter
out
add
insl
mov
add
dec
rolb
mov
xor
add
dec
aas
jle
sub
movsb
or
movsl
enter
xchg
add
int
add
mov
mov
in
imul
add
loope
cmp
ss
outsl
roll
in
mov
xchg
add
pushl
mov
mov
xchg
clc
nop
add
loop
mov
movsl
lods
test
push
mov
add
popa
xor
mov
xchg
mov
fidivs
fdivs
jno
pop
aad
adc
add
add
jle
add
or
push
lods
mov
and
xor
hlt
sub
add
add
cld
loop
mov
xchg
es
test
sahf
loopne
mov
and
mov
jle
add
divb
js
stos
test
xchg
sub
inc
add
jo
mov
loope
xlat
rolb
mov
out
xor
push
out
aaa
jo
mov
push
into
mov
mov
adc
add
mov
push
sahf
addb
in
xchg
and
stos
push
pop
mov
lret
pop
in
lcall
gs
mov
add
add
addr16
js
add
popa
test
js
add
addb
xchg
jmp
outsb
sub
xor
mov
sbb
xlat
add
mov
add
jbe
add
jne
xor
mov
aaa
aaa
jbe
stos
cli
xor
add
or
push
dec
mov
fs
sub
loope
xor
push
push
repnz
cwtl
fbld
add
add
cmc
lods
cmp
fcmovu
rolb
mov
add
dec
inc
push
add
loope
divb
pop
dec
andl
add
loop
mov
pushf
push
rorl
cmovbe
fstpl
xchg
add
mov
mov
imul
adc
mov
mov
xchg
outsb
or
sbbl
add
dec
lret
pushf
push
add
xchg
add
mov
fwait
lcall
lcall
push
pop
mov
push
iret
daa
or
xor
mov
iret
popf
in
rolb
mov
inc
ror
cmp
mov
mov
mov
adc
loop
mov
add
add
or
jmp
mov
std
rolb
mov
add
adc
pop
pop
ljmp
or
ficompl
fdivp
mov
push
sub
iret
in
std
adc
mov
stos
fwait
dec
pop
rolb
mov
lds
insl
sbb
cmpsl
sbb
xor
and
mov
sub
xor
in
jg
bound
mov
jl
adc
repnz
add
pusha
add
mov
xchg
add
mov
mov
adc
mov
sub
cmpsb
lret
lcall
cmp
pop
jae
aaa
mov
add
dec
jecxz
dec
enter
inc
adc
cmpsl
mov
cmpsb
inc
sub
das
dec
jge
add
iret
inc
add
movsl
add
jo
mov
fstpl
mov
icebp
xchg
mov
jmp
ds
inc
es
mov
nop
add
mov
dec
clc
test
jmp
ret
popf
rolb
or
repnz
or
add
and
idiv
pop
testb
mov
dec
xchg
mov
add
or
inc
fs
clc
xchg
add
jno
add
cmp
pop
fsub
xchg
mov
out
ss
cltd
insb
pop
pop
and
push
scas
test
mov
xchg
dec
inc
and
scas
xchg
add
mov
xchg
adc
movsl
in
add
hlt
cmpsb
push
rolb
mov
and
mov
lods
jo
mov
mov
add
testl
mov
jp
lea
filds
and
xchg
test
popf
mov
mov
and
add
add
cmp
outsb
adc
icebp
into
or
addr16
ror
pop
and
rolb
js
add
rolb
mov
mov
adc
testb
mov
test
imul
mov
mov
das
inc
sti
sbb
inc
ret
jecxz
add
or
out
sbb
movsl
nop
add
mov
add
daa
lret
cmp
jb
mov
mov
xchg
cld
gs
sti
mov
mov
mov
mov
loopne
mov
mov
addb
or
sbb
add
mov
xlat
mov
push
aaa
jbe
gs
and
dec
and
cmp
mov
add
arpl
imul
mov
add
add
pop
test
out
add
inc
add
aaa
outsl
rolb
mov
cld
pop
popf
xor
stos
mov
adc
notb
je
rolb
mov
addb
xchg
mov
xchg
add
mov
jne
loopne
mov
mov
add
and
mov
add
mov
call
add
call
add
sbb
add
pavgb
mov
rcrl
and
scas
aaa
add
mov
lcall
jo
mov
sti
div
inc
add
add
sub
insl
adc
cmc
push
lret
test
loopne
mov
test
imul
xchg
add
mov
sbb
mov
push
pop
and
mov
sub
into
popf
pop
out
in
cld
sbb
mov
mov
mov
inc
cli
cmp
lock
mov
jp
cmp
fsubs
sub
gs
or
and
addb
ret
jl
add
hlt
cmpl
test
rolb
pusha
add
je
insl
xlat
xor
mov
mov
xor
dec
pop
xchg
mov
in
inc
in
insl
not
jbe
jl
lock
fildll
nop
add
pop
jge
inc
pop
rolb
cmp
sub
push
inc
or
xchg
add
mov
pop
add
ret
fdivl
nop
add
mov
dec
push
xor
pop
rcrl
push
add
aad
js
pushf
das
sbb
sti
mov
or
xchg
mov
add
int3
mov
inc
into
sub
cmp
push
mov
test
sbbl
add
jmp
add
mov
and
mov
mov
clc
mov
addr16
ret
rolb
or
add
movsl
dec
int3
adc
mov
dec
sub
movsb
mov
mov
stos
pop
cltd
movsb
cmp
or
es
jnp
add
inc
aaa
sbb
mov
cmp
leave
push
pushf
add
mov
in
push
cmp
jo
mov
mov
push
pop
incl
in
mov
add
mov
lea
repnz
data16
mov
add
aaa
scas
jnp
aad
and
rcr
int3
inc
sub
add
pop
sahf
jl
js
add
inc
out
push
add
jp
lcall
sub
fidivl
add
mov
inc
dec
jb
mov
add
js
iret
mov
sub
add
mov
mov
pop
cli
pop
or
push
mov
adc
mov
aaa
xor
mov
iret
xchg
clc
adc
mov
sub
xchg
mov
dec
cmpsb
insl
pop
adc
cmp
dec
std
iret
mov
mov
mov
jno
out
ret
mov
je
and
mov
add
mov
mov
adc
mov
lods
icebp
mov
add
mov
insb
push
mov
sub
inc
ss
mov
add
mov
inc
add
or
mov
jle
add
mov
push
xchg
add
lock
add
xor
leave
ds
add
mov
mov
xchg
add
repnz
out
pop
add
decl
mov
hlt
and
mov
lea
push
pop
and
mov
les
add
sbb
loop
mov
adc
mov
adc
add
xchg
add
pop
lea
inc
fiadds
pop
out
or
push
add
or
add
nop
add
stc
and
in
inc
jge
rcrl
test
mov
and
mov
add
pop
outsl
push
add
mov
mov
add
mov
mov
sub
add
repz
ret
dec
push
pop
jmp
pop
addr16
in
adc
jno
iret
addb
push
mov
add
cwtl
das
cmc
xchg
add
push
in
push
adc
add
jno
push
pop
imul
jl
xchg
lret
bound
mov
xchg
das
lock
add
mov
pusha
add
pushf
sbb
add
ret
xchg
add
cld
in
ljmp
and
in
lods
imul
lea
loop
mov
daa
and
mov
push
aaa
adc
mov
fcmovnbe
add
sub
push
add
fnsave
add
mov
mov
add
dec
add
outsb
mov
je
fdivrs
mov
lock
push
addb
das
push
sub
or
and
mov
sub
push
call
add
dec
mov
mov
mov
pop
rolb
mov
add
dec
lods
addb
cwtl
or
jge
add
mov
add
add
xchg
pop
iret
dec
insb
mov
pushf
sbb
ret
or
xchg
ror
les
dec
xchg
add
cmpsb
add
mov
xchg
js
and
add
divl
mov
mov
mov
cmp
push
cltd
xor
add
add
lods
jno
cmp
out
call
ficompl
adc
mov
fidivrl
xchg
insl
gs
ja
cltd
mov
jg
jno
jno
mov
add
add
sub
sub
fidivrl
cli
or
xlat
dec
lock
push
add
mov
loop
mov
jmp
frstor
test
ror
insb
cmp
add
mov
sbb
push
pop
and
mov
mov
mov
adc
int3
xchg
dec
jae
lret
fldt
pop
push
addr16
ret
sbb
add
mov
fs
ds
adc
mov
mov
xor
mov
jae
cli
mov
aaa
outsl
add
mov
mov
ror
cwtl
xor
cmpl
jecxz
mov
or
add
pop
loope
jne
subl
mov
xor
clc
xchg
outsl
adc
dec
jg
jp
dec
cmp
mov
sbb
sub
jno
and
mov
add
ljmp
aas
mov
into
incl
leave
fstps
enter
dec
movl
pop
bound
mov
cmp
loope
stc
dec
mov
add
insb
test
add
and
mov
jle
lcall
in
pop
repz
sbb
cmp
add
add
xor
mov
xlat
inc
inc
mov
dec
push
aaa
clc
rolb
mov
jo
mov
add
sub
dec
sub
lods
int
std
pop
imul
mov
ljmp
int3
xchg
gs
cwtl
or
jnp
repz
dec
aam
mov
out
jp
cmp
mov
imul
mov
adc
mov
mov
ljmp
add
dec
das
aad
shll
dec
mov
add
addb
and
dec
xchg
jecxz
mov
out
gs
mov
test
jle
testl
xchg
dec
mov
mov
sub
add
out
insb
push
daa
aad
inc
sub
sub
mov
adc
add
sti
pushf
lea
mov
in
push
add
add
dec
sbb
out
and
mov
mov
sub
inc
or
jp
out
pushf
sbb
add
leave
mov
mov
test
mov
popa
inc
jne
cwtl
xor
rolb
push
xor
xor
jnp
jbe
add
lahf
mov
pop
or
mov
ds
rolb
mov
mov
adc
dec
mov
adc
mov
sbb
loop
mov
xor
jne
cs
jnp
dec
inc
lock
pushf
ja
stc
in
lret
mov
jne
adc
or
xchg
cli
push
add
mov
jecxz
rolb
mov
test
push
add
or
fdivs
mov
jno
ss
mov
jo
mov
mov
add
sti
mov
add
ljmp
nop
add
mov
xorl
in
jb
mov
ja
lcall
add
out
xchg
cmp
adc
incl
xchg
in
les
and
pop
mov
fsubrs
ficompl
mov
loop
mov
aam
leave
fisttpll
pop
push
add
sub
pusha
add
mov
pop
jmp
jge
pop
pop
inc
add
fbld
mov
add
push
cmp
arpl
sbb
pop
fwait
xor
mov
pushf
ja
inc
test
lods
add
add
nop
add
sbb
into
outsb
mov
les
pop
xor
sub
lret
rolb
mov
push
pop
ja
mov
inc
mov
push
xchg
add
leave
xchg
xchg
sbb
push
testb
scas
test
add
mov
inc
or
inc
pop
push
mov
mov
pop
cmpsb
testb
sbb
popa
sbb
addb
shll
or
push
jl
into
pop
adc
stos
les
jp
imul
mov
aad
or
push
out
sub
lods
and
mov
mov
dec
sti
out
jle
lret
push
stos
inc
loope
push
add
xlat
paddsw
addb
stc
mov
ja
and
adc
add
jb
mov
inc
fimuls
movsl
test
sub
aaa
mov
mov
cld
mov
insb
jp
mov
mov
ficoml
fisubs
mov
jge
inc
add
out
lcall
push
sar
adc
mov
dec
hlt
stos
pop
add
push
arpl
adc
mov
add
scas
jp
adc
mov
jns
inc
push
decb
mov
mov
add
loope
sbb
mov
cmp
add
xchg
add
add
or
and
sbb
mov
mov
add
ljmp
js
inc
add
cmp
push
add
mov
in
push
cmp
js
loope
dec
and
std
mov
push
mov
iret
outsl
enter
inc
add
pop
inc
pop
nop
add
xor
addr16
es
xchg
and
sbb
ja
xchg
dec
cltd
push
int3
roll
sbb
push
sbb
movsl
or
sub
sub
mov
mov
addr16
push
push
push
mov
test
enter
sbb
mov
add
cmp
xchg
lcall
fdivrl
iret
out
ja
add
push
icebp
test
outsb
movl
pop
mov
add
cmp
fwait
lds
mov
mov
xchg
add
jmp
xchg
adc
mov
out
jo
mov
ficomps
and
cmp
push
int
sub
nop
add
mov
jbe
add
out
sbb
insl
mov
add
jl
test
sbb
push
and
pop
push
cmp
mov
test
jmp
addb
lret
jle
mov
sbb
in
rolb
sbb
jg
add
cmp
or
xor
mov
or
mov
sub
mov
hlt
and
mov
sbb
lds
xlat
lahf
je
cmp
dec
cmpsb
fisubrs
aad
add
mov
mov
add
mov
push
add
inc
stos
mov
cmpsl
ret
lock
add
and
ljmp
mov
ljmp
mov
jmp
lock
in
mov
ljmp
push
push
add
imul
aad
add
mov
das
into
jb
mov
mov
jp
int
mov
push
and
in
mov
mov
movsl
xchg
cmp
add
leave
in
cmp
mov
js
in
mov
lcall
dec
movsl
inc
sbb
inc
idivb
adc
mov
mov
lds
lahf
pusha
add
add
jo
mov
mov
cmp
inc
add
js
add
mov
push
inc
pop
rolb
mov
jmp
mov
ret
pop
in
add
push
jle
ficomps
adc
mov
xchg
mov
pop
jo
mov
test
cltd
sub
fcoml
mov
jp
mov
stos
pushf
call
add
dec
je
pop
jbe
lahf
and
add
cmp
repnz
add
add
mov
rcll
int
in
bound
mov
repz
mov
add
lret
mov
mov
add
push
sub
add
jmp
add
jbe
arpl
rolb
mov
sub
out
pop
mov
mov
fwait
stc
mov
dec
add
mov
mov
jmp
inc
in
push
addb
int3
adc
push
and
mov
es
or
stos
ljmp
lcall
add
mov
mov
ljmp
add
lret
or
add
insl
xor
push
sub
jmp
lods
sub
jle
add
loop
mov
pop
adc
mov
add
mov
add
or
addb
fwait
and
out
loopne
mov
movsl
xlat
repz
add
sbb
repz
push
lods
mov
icebp
adc
mov
pop
rcl
mov
imul
shll
fcoms
add
ret
addr16
dec
dec
and
mov
orl
push
add
push
in
clc
test
std
push
aaa
fcoms
add
rcl
loop
mov
add
mov
clc
xchg
imul
and
fstl
cmpl
mov
mov
cs
sbb
jb
mov
dec
mov
mov
shrl
fnsave
xchg
loopne
mov
add
xor
sbb
mov
mov
mov
add
je
or
bound
mov
xor
mov
or
lods
movsl
ficoms
add
out
xchg
xchg
inc
add
cs
hlt
and
popf
stos
sbb
dec
mov
stos
cmp
jg
push
mov
xor
mov
out
mov
movsb
in
dec
xor
mov
ret
push
jae
lock
call
add
push
fdivrl
call
pop
push
addr16
sbb
add
je
addb
imul
sub
imul
inc
rolb
mov
sub
paddw
add
cli
mov
dec
inc
cmc
scas
inc
add
inc
imul
adc
dec
mov
test
jle
lods
mov
jns
scas
es
xchg
pop
mov
xchg
push
mov
mull
mov
mov
and
and
jp
aam
repz
cmp
adc
xchg
adc
add
pushf
ror
jns
xor
outsb
sbb
cmp
add
mov
mov
push
aad
mov
jmp
daa
rolb
mov
push
insl
xchg
adc
mov
lret
rolb
add
mov
sbb
xchg
pop
adc
add
rolb
mov
fs
cs
fldt
ljmp
enter
dec
inc
and
mov
push
fbld
fdivl
mov
mov
inc
adc
xlat
inc
mov
sti
mov
inc
push
hlt
add
mov
mov
test
add
and
pop
das
stos
add
cmp
je
jb
mov
add
enter
jae
in
mov
cmpsl
pop
sub
add
pusha
add
adc
stos
mov
pop
push
rolb
mov
push
push
push
sub
out
lock
push
cmp
inc
ja
call
add
pushf
sub
pop
incl
fst
data16
mov
push
push
push
add
rolb
mov
xor
add
dec
stos
testb
mov
mov
xor
call
jne
mov
add
jbe
sub
add
stos
nop
add
cmp
jb
mov
xchg
add
pushf
cli
dec
or
jno
push
lret
lock
and
repz
ds
pushl
or
shll
mov
add
xor
mov
add
icebp
cltd
adc
scas
add
mov
add
and
mov
test
sbb
pop
fdivrs
cmc
test
test
mov
daa
fsubrl
shll
and
iret
add
leave
add
mov
mov
pop
jo
mov
ljmp
ret
jno
addr16
xchg
in
add
add
mov
enter
fistpll
pushw
mov
add
rolb
mov
sub
mov
or
test
add
sub
lret
cmp
adcl
pop
adc
mov
xchg
mov
fcoms
or
pop
ljmp
mov
jl
jle
add
adc
lea
and
mov
add
cmp
cltd
cmp
pop
push
xor
mov
add
push
into
jbe
and
mov
movl
mov
pop
xor
leave
or
pop
or
jmp
test
int3
int3
add
add
cmp
add
add
outsb
in
lret
cmc
movsl
cmc
daa
xlat
xor
mov
or
add
sbb
rolb
dec
loop
mov
test
mov
mov
pop
xor
out
and
mov
add
add
jecxz
loope
int3
jne
xchg
cmpsb
and
mov
rolb
cmc
out
int
popl
mov
mov
add
fstpl
gs
add
push
add
cltd
into
imull
out
jnp
jno
xchg
loopne
mov
les
mov
stos
push
sbb
xchg
add
sub
xchg
insl
mov
add
mov
sbb
sbb
push
add
jnp
in
cmpl
mov
mov
mov
jmp
lahf
xor
mov
add
push
jge
jne
add
rolb
mov
pop
or
adc
iret
mov
mov
out
into
jnp
in
jnp
xchg
jne
xchg
imul
jg
lock
jno
mov
add
scas
out
mov
inc
jns
fwait
mov
rcll
cs
push
add
xor
mov
pop
xchg
xor
mov
xor
add
add
mov
or
add
mov
push
mov
fisubl
inc
jmp
cmpsb
imul
pop
inc
mov
dec
cld
repnz
test
cmpsb
out
lret
mov
add
xor
mov
pushf
inc
out
sarl
lods
push
push
scas
jmp
push
rolb
test
add
pop
js
push
mov
rolb
mov
mov
imull
push
jbe
mov
add
sbb
stc
xor
jg
add
mov
add
or
sbb
mov
fwait
pushf
sub
mov
mov
pop
inc
sub
decb
fwait
test
pop
and
loope
fiadds
or
add
add
imul
in
dec
mov
test
nop
add
sub
ja
or
mov
cmpsl
push
test
add
pusha
add
ljmp
call
fidivrl
loopne
mov
mov
cmpsb
sahf
jbe
bound
mov
lods
xchg
daa
push
jp
jecxz
cli
xchg
and
mov
mov
test
xchg
add
mov
add
fsubl
ss
into
pop
push
jl
jg
stc
pusha
add
add
mov
test
pusha
add
cmpsl
dec
nop
add
addr16
mov
jb
mov
add
add
rcrl
loope
xor
loop
mov
mov
jp
ficompl
or
les
int
push
nop
add
mov
into
cwtl
fildll
or
push
xchg
jno
jg
inc
inc
iret
sub
push
and
mov
lods
rolb
mov
fistps
addb
and
out
xor
divb
xor
mov
ret
and
xor
jns
ds
iret
icebp
std
out
inc
add
popf
cltd
in
leave
or
mov
data16
test
mov
call
iret
inc
daa
daa
test
xchg
ds
mov
add
ret
cltd
ret
pop
inc
dec
jae
add
repnz
push
bound
mov
fidivs
aas
loop
mov
and
mov
pop
and
adc
mov
add
pushf
add
dec
aaa
sbb
leave
sub
xor
dec
sbb
dec
call
mov
jns
push
std
adc
ror
test
rolb
mov
push
mov
add
bound
mov
jg
fsubrs
xchg
loop
mov
jle
je
pop
loope
mov
add
lcall
sub
js
dec
roll
cltd
pushf
cli
xor
add
sti
mov
imul
add
sub
mov
xor
mov
cmp
aas
ljmp
push
sub
mov
mov
mov
add
add
out
sbb
ja
jno
leave
insb
les
outsl
hlt
stos
jnp
pop
in
xchg
add
mov
ljmp
jo
mov
and
arpl
xchg
jl
test
jbe
mov
adc
cmc
jb
mov
mov
cmp
mov
add
clc
jg
mov
dec
iret
or
insl
xchg
sub
add
or
add
push
scas
repz
cmp
jne
aad
rolb
mov
insl
std
aam
dec
inc
aaa
loopne
mov
xchg
rolb
mov
sahf
lret
fcomps
test
daa
popf
inc
int
mov
cmpsl
in
inc
add
out
popa
jecxz
dec
xlat
idivb
cmpsl
sarl
add
mov
mov
inc
pop
push
add
mov
push
call
mov
mov
cmc
mov
stc
xor
mov
shl
cmp
repnz
fs
fists
add
mov
mov
imul
mov
imul
and
fmuls
lret
sub
add
and
mov
ret
jno
xor
test
int3
push
add
insl
sbb
mov
add
jecxz
push
cwtl
dec
fs
jnp
xchg
adc
testl
jp
sub
cltd
cmp
add
add
dec
push
add
and
mov
jle
shll
jo
mov
das
mov
mov
add
loop
mov
push
inc
dec
inc
lea
xor
xchg
pop
std
icebp
jno
jb
mov
dec
lahf
pop
in
mov
mov
push
outsl
sub
sbb
push
fldl
mov
xlat
in
sub
rolb
mov
push
or
add
mov
add
push
inc
cwtl
mov
jmp
in
mov
lret
sar
fcmove
enter
int
arpl
pop
movsb
push
int
lea
icebp
popa
out
push
xchg
pop
aaa
inc
push
cltd
add
and
mov
pop
xchg
inc
jle
in
in
in
dec
imul
jb
mov
mov
enter
stos
mov
enter
xchg
sbbl
lret
push
adc
push
std
sub
dec
ret
inc
in
pop
daa
outsl
mov
lods
fstpl
push
add
aas
lret
lods
lcall
add
mov
mov
fnstsw
mov
faddl
add
ss
push
add
mov
mov
adc
mov
mov
add
pop
mov
daa
pop
cwtl
addb
icebp
pusha
add
add
mov
pop
insb
add
into
lret
adc
mov
mov
push
cmp
mov
aad
fidivl
push
aad
jns
add
mov
shl
dec
rolb
mov
push
sub
sbb
mov
jp
cs
lods
in
repnz
out
bound
mov
mov
add
mov
add
jb
mov
es
add
and
mov
dec
mov
add
incl
mov
decb
or
cmovp
push
add
aaa
mov
rcrl
mov
insl
cmpsl
or
in
iret
dec
pop
cmc
xchg
xchg
cmp
inc
xchg
int3
popl
add
dec
movsb
out
cmp
and
mov
add
aam
add
add
cmp
fnstcw
jge
push
or
clc
inc
jbe
mov
lock
das
push
add
add
mov
push
push
add
push
add
mov
jae
cli
cli
in
movb
mov
mov
add
fistl
imul
aas
lock
adc
mov
add
mov
mov
jle
js
add
ja
xchg
add
add
loop
mov
add
mov
mov
mov
arpl
mov
mov
mov
jl
mov
iret
cmpsb
in
cmp
xlat
lahf
stos
cmc
in
and
or
mov
aaa
jne
mov
mov
push
mov
add
mov
arpl
jmp
notb
add
mov
cld
daa
imul
xchg
fs
add
andl
xchg
add
add
sub
mov
aam
mov
and
add
mov
or
add
add
mov
add
mov
fisubl
mov
mov
push
ror
and
mov
int
jmp
jecxz
inc
ss
cltd
ficoms
jmp
imul
xchg
mov
mov
add
add
or
cmp
in
add
mov
adc
mov
int3
addl
push
outsb
jmp
xlat
and
mov
add
inc
mov
jle
mov
mov
ds
push
mov
mov
iret
dec
mov
push
stos
ds
scas
inc
in
add
jle
lds
sbb
mov
add
jecxz
out
stos
dec
imul
add
sbb
pop
xchg
gs
mov
mov
je
pop
in
pop
pop
or
add
jmp
dec
aad
inc
dec
repz
dec
test
pop
cmc
test
or
cmpsb
roll
sub
arpl
nop
add
add
mov
add
pop
xchg
dec
pop
adc
or
and
scas
data16
movsl
addb
or
mov
and
mov
xchg
push
outsl
jg
add
mov
popf
mov
outsl
pop
sub
jmp
push
push
jg
or
mov
add
and
scas
mov
jl
mov
add
les
idivb
push
dec
dec
mov
lcall
jp
xchg
add
add
insl
iret
cmp
xchg
jne
sub
add
add
arpl
imul
mov
jne
mov
cmp
or
out
cwtl
gs
cmp
push
fwait
jg
sub
out
sbb
mov
daa
sub
add
stos
in
mov
int3
mov
mov
dec
xchg
add
xor
mov
add
jg
aas
mov
fmul
aaa
repnz
add
in
cli
inc
add
dec
das
aas
rolb
mov
pop
mov
add
add
cmp
add
out
cmp
or
xor
mov
cmpsl
sub
mov
inc
mov
mov
jp
add
mov
leave
fcoms
lahf
mov
mov
xor
mov
adc
call
mov
xchg
fadds
jl
jmp
add
test
sti
fwait
addr16
sub
jnp
push
mov
aaa
out
adc
mov
cs
and
or
dec
pop
call
xor
outsl
into
sbb
sbb
insl
divl
sbb
add
add
ret
adc
hlt
push
in
or
jae
or
ret
outsb
sbb
add
add
pop
stos
repz
movsb
and
fnsave
scas
cmp
add
mov
add
sub
dec
mov
mov
cli
or
cltd
aam
jno
xchg
sub
add
mov
push
add
mov
stos
and
loop
mov
pop
jmp
fiaddl
mov
das
bound
mov
or
sbb
in
push
ds
pop
fcomps
lahf
out
adc
mov
add
push
cltd
lret
adc
mov
add
movsl
scas
or
repz
add
call
loope
call
pop
adc
mov
test
mull
adc
mov
lret
mov
mov
mov
add
mov
mov
out
stos
xor
adc
mov
xor
mov
stos
je
add
push
add
mov
mov
add
mov
inc
add
std
rolb
mov
add
adc
adc
add
mov
dec
dec
lret
sub
movsb
fistpll
leave
fucomip
push
cmp
sbb
test
test
push
add
xor
xchg
sub
rolb
mov
add
lret
fs
scas
ja
xchg
test
inc
add
mov
xchg
aas
pop
pop
push
mov
mov
js
sub
mov
add
cmpsb
lret
fisubl
add
dec
rolb
sub
cli
cmpsl
cmp
adc
ret
inc
adc
sbb
mov
or
push
add
sub
rolb
mov
xor
cwtl
rolb
add
popa
stos
test
jmp
xchg
add
add
ret
sub
insl
and
out
mov
pop
add
pop
push
in
rolb
xchg
pop
pop
mov
cmp
sub
inc
add
pop
ret
enter
pop
dec
or
or
jg
mov
add
add
xchg
fists
xchg
addb
jb
mov
les
mov
add
notb
lock
out
popf
pop
loope
add
and
mov
inc
clc
outsb
and
addb
addb
pop
mov
pusha
add
mov
fistpll
adc
mov
addl
mov
sti
fnstcw
into
mov
adc
in
add
nop
add
cld
mov
into
rolb
push
add
bound
mov
and
mov
mov
add
lahf
dec
dec
fistpll
mov
add
rorl
out
mov
jp
scas
mov
mov
inc
add
push
in
xchg
add
cltd
dec
add
flds
in
cmpsb
rolb
mov
xor
fsubp
xor
mov
cmovp
mov
add
or
rolb
mov
or
cmc
fmuls
sbb
jo
mov
das
jmp
les
dec
push
add
or
xor
mov
jg
push
add
int3
pop
mov
xchg
fwait
xor
sub
gs
cltd
sbb
adc
cmp
mov
adc
mov
mov
and
ds
pop
xchg
mov
add
mov
mov
add
mov
mov
sahf
or
adc
xlat
xor
mov
add
xchg
xchg
mov
cmp
sub
add
icebp
push
fnstsw
cltd
insb
add
or
insl
add
outsb
mov
add
mov
inc
popa
in
add
add
mov
pop
cld
and
cltd
insb
add
mov
add
mov
push
mov
loop
mov
mov
jmp
mov
mov
mov
das
mov
add
jnp
add
push
and
push
sbb
stos
stc
pop
sub
out
mov
in
add
add
pop
xchg
mov
sub
inc
add
add
inc
xor
lea
sub
je
scas
cld
movb
jl
out
push
cld
mull
mov
jae
jmp
mov
mov
fisubs
sub
mull
add
add
push
push
pop
push
loopne
mov
or
imul
inc
jle
stc
sti
aaa
rolb
mov
xor
mov
or
xchg
mov
add
cmp
cmpsb
out
out
sbb
shll
mov
add
xchg
imul
out
inc
leave
xor
add
sahf
in
sub
ds
lret
push
adc
mov
pop
inc
push
les
add
pop
out
sbb
sbbl
mov
push
mov
xchg
aad
add
mov
fnstsw
loop
mov
mov
roll
sub
push
dec
ljmp
xchg
sahf
mov
lcall
vpsubsb
and
mov
mov
std
fs
sbb
sub
mov
insb
es
aas
push
sbb
push
sub
push
inc
arpl
into
rolb
push
stc
popa
mov
sbb
add
mov
jecxz
add
sbb
inc
add
add
push
inc
add
add
repnz
icebp
sbb
je
pusha
add
sbb
lcall
push
stos
push
cmp
mov
adc
lret
and
mov
inc
ja
xor
mov
mov
and
add
and
cmp
mov
add
mov
push
push
jmp
mov
mov
sahf
pushf
cli
push
jl
mov
cmpsb
sbb
pop
addb
addb
sub
cwtl
mov
add
cmpsl
jns
jae
pop
adc
mov
add
and
mov
sbb
pushf
sub
add
mov
inc
fstpt
or
stos
aam
pop
cld
in
pop
adc
ficompl
mov
out
dec
je
addb
mov
fstpt
jge
xchg
adc
mov
in
xchg
out
iret
inc
daa
and
mov
and
adc
jno
pop
xchg
test
add
fists
inc
ljmp
cmpl
or
jno
popa
cmp
icebp
pop
fst
or
add
test
outsb
add
mov
insb
cmp
add
add
add
or
xchg
fmull
and
ss
xor
jb
mov
rolb
mov
add
mov
in
mov
add
repz
fistpll
mov
add
push
add
lret
mov
cmp
aaa
sub
clc
mov
lds
insb
stos
xchg
add
push
pop
loope
lret
bound
mov
xchg
fstpl
add
add
inc
jne
cs
in
and
adc
aas
mov
add
ljmp
jl
add
mov
flds
mov
pop
nop
add
addb
je
je,pt
jecxz
fadds
in
jg
push
imul
mov
jl
mov
rolb
mov
xchg
jecxz
gs
cmp
aas
fldcw
add
minps
mov
or
or
repnz
mov
mov
pop
leave
cmpsl
or
xchg
mov
cmp
add
or
ja
add
mov
in
or
lret
outsl
mov
add
jecxz
xchg
cld
dec
stos
sbb
or
out
je
jg
pop
ficomps
and
mov
lds
xchg
pop
rep
adc
push
xchg
xor
mov
aaa
outsb
dec
addr16
mov
xchg
sahf
push
and
fstps
mov
lods
rolb
mov
fbld
add
mov
dec
rolb
mov
aas
inc
pop
cmp
add
mov
jno
mov
sbb
jg
xchg
lret
and
mov
jns
stc
test
add
mov
add
mov
bound
mov
xor
add
pop
sub
mov
mov
pop
mov
lcall
mov
mov
mov
mov
das
add
jge
mov
inc
loope
pushf
mov
xlat
fdivp
add
add
pushf
sbb
out
push
xchg
and
mov
mov
inc
add
dec
fmull
inc
add
add
mov
cmp
adc
pop
ret
xchg
xchg
add
mov
ja
lret
out
jnp
add
pop
repz
add
mov
inc
add
cli
leave
or
fidivrl
or
jae
add
pop
fwait
sub
inc
cmp
xchg
push
xor
popf
stos
and
add
js,pn
pop
enter
int3
arpl
jg
pop
push
popf
int
lret
mov
and
mov
iret
inc
addb
xchg
pop
cs
in
or
sbb
pop
dec
testl
mov
ljmp
repz
adc
insl
test
sub
add
mov
add
sbb
call
jnp
add
mov
mov
fstpt
xor
shrl
sub
popf
int3
push
inc
adc
es
clc
xor
and
mov
add
mov
xor
mov
mov
addb
addb
popf
pop
pop
mov
add
inc
add
imul
popf
jecxz
push
repnz
mov
push
add
mov
mov
enter
add
mov
insl
mov
bswap
cmp
insb
aas
ret
adc
add
add
ret
pushf
pop
cmp
add
das
jo
mov
test
fsubrs
fcmovu
jnp
add
cmp
pop
jp
add
xor
mov
leave
dec
add
mov
cmp
mov
xchg
orl
inc
iret
aaa
out
repz
adc
add
push
cmp
bound
mov
mov
ret
cltd
lret
aas
mov
add
or
scas
loopne
mov
mov
cmpsl
cs
xchg
add
movsb
lock
mov
test
add
add
mov
addb
dec
lods
cmc
loop
mov
bound
mov
das
gs
cmp
repnz
mov
int
mov
add
mov
cld
add
dec
mov
daa
cmpsl
rolb
mov
es
or
sub
vpackssdw
scas
jne
add
leave
inc
into
sbb
fmuls
fdivrs
mov
and
mov
cmp
sbb
push
add
mov
sti
add
pop
xor
rolb
mov
lea
add
jle
sub
int3
dec
test
add
mov
pop
test
add
jo
mov
out
pop
mov
inc
push
add
mov
out
aad
mov
imul
mov
mov
xchg
pop
fnstenv
mov
add
sub
std
dec
sub
add
add
mov
mov
aas
aaa
mov
repnz
call
cmp
pusha
add
arpl
push
fs
popf
dec
std
shll
add
sbb
pop
dec
mov
out
scas
in
add
sbb
cmc
loopne
mov
push
add
test
sahf
scas
inc
insl
cmp
fdivl
cs
je
ljmp
jp
mov
add
jne
mov
adc
mov
or
and
push
adc
cmp
mov
push
jl
lea
fisubrs
mov
add
ret
rolb
mov
inc
add
push
enter
pushf
mov
cmpsl
jge
inc
add
stc
scas
sbb
mov
mov
xchg
addr16
sub
and
mov
add
mov
dec
adc
mov
mov
imul
sbb
sub
add
lahf
rcrl
add
out
pop
mov
pop
fs
movsl
mov
pushf
movsl
or
mov
inc
inc
dec
ss
cltd
cmpsl
jo
mov
xchg
mov
dec
inc
mov
aad
add
imul
add
mov
add
or
mov
mov
faddp
je
data16
andl
xchg
pop
jnp
ret
adc
mov
mov
sub
int
scas
fcmove
lret
mov
scas
jae
adc
mov
jp
cwtl
ret
adc
stos
add
add
mov
xchg
pop
sbb
adc
mov
dec
inc
add
add
rolb
mov
sub
push
mov
jbe
pop
jnp
pop
dec
aam
lret
pop
bound
mov
xor
sbb
add
xchg
cmpsl
mov
pop
lods
test
inc
repz
adc
mov
mov
sub
or
testl
popf
xchg
lret
leave
out
pop
sbb
ret
xchg
add
stc
cs
repnz
adc
jns
push
sbb
push
add
push
or
lock
add
mov
mov
in
push
pop
lret
cwtl
jle
fsubrl
and
xchg
imul
mov
cmp
out
popf
pop
inc
add
mov
pop
fisttpll
in
bound
mov
rolb
aas
xchg
mov
sbb
outsl
or
mov
mov
pop
bound
mov
sbb
add
cs
mov
addb
stc
sbb
call
add
mov
or
fnsave
add
cmpsb
mov
xchg
xor
cmpsb
rcrl
in
fdivrl
cld
add
mov
push
aas
addr16
add
mov
fwait
out
lret
add
mov
insb
loopne
mov
filds
cmp
push
add
pushf
insl
xchg
hlt
rolb
mov
xchg
mov
cltd
iret
out
push
xchg
inc
shll
mov
shrl
add
je
push
movsl
xor
mov
in
ljmp
pop
stos
pop
inc
inc
inc
and
mov
mov
and
or
cli
mov
fs
pop
stc
add
add
mov
inc
test
add
cmp
movsb
jae
mov
xor
mov
mov
std
pop
inc
add
cmpl
mov
add
pop
mov
mov
dec
lods
aas
lods
je
addl
js
add
mov
fwait
stos
pop
inc
add
sahf
sbb
xor
das
je
or
int3
and
in
stos
insl
mov
test
addb
or
xchg
fwait
repnz
pop
out
push
add
into
push
add
adc
mov
add
cmp
push
pop
sub
pushf
shr
mov
mov
add
fsts
leave
rorl
push
test
imul
xor
mov
int3
mov
scas
sbb
enter
fimuls
sbb
loop
mov
dec
cwtl
mov
lcall
mov
add
add
in
mov
adc
dec
lret
adc
psrad
mov
lcall
add
pop
into
pop
mov
mov
mov
jne
sbb
dec
rolb
mov
loope
xchg
add
add
rolb
mov
fimuls
push
xor
mov
xchg
ret
cltd
pop
loop
mov
mov
add
add
iret
les
subl
cmp
pop
sub
in
add
jecxz
xchg
das
cmp
int3
sub
lcall
push
mov
dec
fwait
xlat
mov
sahf
cmpsl
push
or
and
mov
push
add
add
push
cld
test
add
and
mov
add
hlt
int
sahf
cmp
addb
xor
mov
adc
mov
jno
cld
push
and
sub
out
pop
call
push
jo
mov
loop
mov
cmp
add
xchg
add
mov
stc
nop
add
add
mov
les
or
int3
not
add
mov
cltd
lods
fidivrs
test
dec
xor
in
jno
sbb
test
addb
xchg
add
ficoms
xlat
aad
mov
mov
dec
pop
pop
mov
clc
sbb
cltd
mov
xor
mov
mov
in
loopne
mov
mov
pop
dec
imul
sub
jb
mov
addb
and
fs
add
lret
push
jmp
ss
add
lods
in
inc
clc
or
lcall
inc
cltd
add
cwtl
sbb
inc
add
add
fdivs
xchg
testl
sub
push
insb
or
sahf
mov
movsb
and
mov
and
mov
popf
push
add
cmp
add
pop
and
les
lahf
cwtl
mov
add
rolb
popa
mov
iret
cmp
movl
jmp
mov
push
testl
add
adc
mov
and
ficompl
fistps
pop
mov
cmp
clc
mov
xchg
repnz
mov
add
jp
in
fbstp
stos
xchg
pop
jb
mov
addb
iret
fwait
hlt
pop
out
adc
test
inc
cmp
sub
repz
mov
lret
pop
mov
add
int
mov
test
jmp
stos
pop
inc
pushf
or
add
jns
mov
mov
outsl
sarl
cmp
add
add
hlt
call
xchg
cmpsl
adc
ja
daa
aad
jge
sbb
test
mov
mov
in
ret
jmp
add
insb
enter
cmp
mov
add
jno
mov
mov
mov
add
popf
jmp
mov
add
rolb
push
mov
dec
sub
incb
mov
add
add
add
adc
loop
mov
pop
or
add
adc
rolb
jne
roll
out
jb
mov
ret
addr16
push
add
fdivs
nop
add
mov
or
add
cwtl
rolb
sub
add
mov
inc
mov
shll
mov
loope
adc
mov
leave
mov
aam
and
dec
fimull
rolb
test
ficompl
xchg
rcl
add
mov
shrl
push
outsb
mov
rorl
fadd
add
add
mov
mov
fcmovnb
ljmp
mov
xchg
pop
jmp
rolb
mov
xchg
fnsave
stos
sub
aam
scas
dec
cs
loop
mov
xchg
adc
mov
mov
ficompl
rolb
jbe
leave
mov
ja
adc
mov
fisttpll
sarl
pop
pop
popf
jnp
pop
mov
inc
out
or
xchg
add
mov
push
adc
push
jle
dec
notb
mov
test
mov
ret
aas
mov
xor
mov
ss
mov
addb
push
mov
xor
sub
pop
into
int3
fcoml
xor
out
jmp
push
sbb
mov
add
add
test
fmull
mov
mov
dec
test
jmp
mov
and
mov
ret
ss
insb
mov
insb
mov
fildll
fsts
aaa
fwait
push
sub
popa
je
cmp
mov
cmp
sub
add
arpl
inc
add
aad
xor
mov
mov
stc
xchg
push
fs
add
mov
cmc
push
add
jne
push
test
sahf
in
sbb
add
add
xor
lea
add
mov
fadds
std
test
and
mov
mov
std
hlt
loop
mov
aas
scas
push
push
cs
dec
push
add
out
mov
cli
popa
jmp
add
add
lcall
sbb
add
xchg
imul
mov
insl
iret
fimull
add
pop
mov
mov
jmp
mov
jbe
push
add
sbb
mov
mov
add
add
lods
mov
jl
popa
push
ud1
mov
cs
stc
xchg
push
jbe
pop
mov
dec
cmc
inc
sub
in
ljmp
rolb
mov
push
cmpsl
rolb
mov
jns
popa
xchg
adc
jo
mov
add
fs
rolb
mov
add
adc
mov
or
js
or
out
in
fucom
add
add
rcrl
fdivrp
jo
mov
add
outsb
mov
mov
repnz
mov
pusha
add
aad
jl
fistpll
mov
mov
mov
mov
mov
mov
movl
xor
aas
iret
lods
cmpsb
dec
rcrl
inc
mov
inc
xchg
add
mov
mov
jg
inc
and
jno
add
aad
xchg
loopne
mov
add
or
stc
dec
xor
cld
mov
mov
nop
add
mov
add
stc
jb
mov
mov
adc
mov
cmp
jg
add
in
enter
testb
mov
into
and
mov
dec
jge
ds
out
ret
mov
arpl
mov
pop
rolb
push
cmpsl
nop
add
sub
xchg
inc
out
jnp
stos
cmpsb
pop
call
mov
fs
add
mov
es
sub
popa
fildl
leave
aam
xchg
mov
add
cltd
or
ficoms
xor
out
jg
xchg
ljmp
sub
jno
rolb
jne
popf
imul
insl
js
fsts
loopne,pt
mov
clc
aas
hlt
mov
adc
out
add
jno
mov
dec
jge
mov
mov
dec
and
mov
mov
add
movb
mov
sbb
pop
mov
push
movsl
pop
xor
mov
in
dec
pop
test
gs
aad
jle
inc
test
nop
add
scas
std
sbb
arpl
xor
sbb
add
mov
mov
add
insl
cli
gs
sub
mov
xchg
hlt
movsl
mov
and
push
pop
loop
mov
mov
mov
adc
jmp
jp
movsb
mov
add
xchg
cmp
out
mov
mov
mov
outsl
or
dec
pop
xchg
dec
mov
add
push
add
test
lods
fsubs
mov
add
and
addb
push
jge
push
add
fstpl
fistpll
add
add
roll
add
and
sbb
push
ret
pop
gs
mov
mov
mov
cli
inc
add
and
xchg
xor
push
fwait
push
pop
enter
test
shll
sarl
mov
add
stc
cli
test
xchg
stc
and
in
pop
sub
adc
mov
jbe
cmp
add
jmp
sbb
stc
adcl
add
cltd
add
mov
add
cs
popa
mov
stos
jmp
xchg
cmpsb
rcrl
daa
enter
mov
mov
mov
jmp
cmp
das
jle
test
mov
mov
mov
mov
add
or
jge
sbb
shll
mov
xchg
mov
mov
sbb
jb
mov
adc
mov
xchg
pop
das
out
popf
int3
sub
mov
int3
inc
jle
shll
test
add
add
push
movsb
push
js
xchg
mov
mov
je
in
pop
jp
arpl
add
add
cltd
addl
ja
mov
cmpsb
xchg
dec
ss
add
jp
mov
dec
add
add
repz
sahf
cmp
test
inc
or
sbb
add
lcall
push
add
int3
fisttpll
add
sarl
pop
push
mov
add
add
gs
mov
mov
dec
ds
popa
outsb
pop
fsts
or
repnz
mov
pop
mov
mov
sbb
fwait
xchg
mov
inc
add
iret
adc
test
mov
rolb
mov
mov
lret
jg
xchg
add
rolb
mov
adcl
push
xchg
test
sub
pusha
add
aas
mov
or
jnp
std
mov
lock
add
dec
push
add
mov
add
mov
sbb
es
loopne
mov
test
add
inc
add
lret
mov
mov
add
add
ja
jge
xlat
bound
mov
sti
and
and
push
push
outsl
in
rolb
mov
mov
dec
dec
inc
push
ljmp
cmp
test
push
scas
and
xchg
pushf
mov
push
mov
lahf
repnz
in
adc
mov
std
jmp
cmp
push
adc
mov
daa
xchg
cmp
aas
jae
fstp
inc
mov
add
mov
lock
roll
call
cs
jnp
xchg
jns
call
add
mov
lock
sbb
insl
mov
mov
inc
out
fwait
aas
xchg
mov
adc
lds
xchg
mov
sar
insl
cmpsb
dec
movsb
mov
jl
out
adc
mov
push
mov
pop
lds
inc
push
push
push
push
push
js
add
inc
add
add
fcmovnbe
add
or
testb
out
in
ss
notl
jns
add
repz
mov
add
pusha
add
mov
xchg
popa
sti
call
lret
xchg
ljmp
or
or
adcl
mov
iret
cmp
inc
xchg
mov
or
add
mov
rolb
mov
dec
leave
cmp
dec
cld
negl
les
std
outsb
les
add
je
rolb
mov
xchg
sub
ljmp
pop
cmp
pop
bound
mov
insl
lds
sbb
mov
stos
addb
int
add
cmp
add
adc
mov
scas
push
imul
loope
add
mov
outsl
adc
mov
mov
daa
mov
add
xchg
push
pushf
pop
scas
shrl
mov
cmp
pusha
add
ja
add
add
add
mov
mov
jmp
mov
repz
mov
aad
cmp
jbe
xor
add
mov
mov
xor
add
or
cmp
mov
das
addb
adc
mov
gs
pusha
add
and
mov
addr16
add
lcall
or
add
fs
scas
pop
or
scas
repnz
mov
inc
sahf
mov
jecxz
test
ds
into
das
pushw
push
xor
stos
adc
add
push
into
inc
pop
pop
insl
out
xchg
add
out
jecxz
inc
loop
mov
arpl
mov
imul
add
add
dec
addr16
sbb
mov
sub
notb
push
push
pushf
test
in
ret
ficoms
fimuls
xor
or
xor
cmpsl
shl
les
scas
mov
add
cmc
fsubr
push
add
mov
rolb
rolb
mov
das
mov
sti
sub
nop
add
loopne
mov
inc
jmp
add
add
sarl
insl
mov
sbb
xlat
push
cmp
ret
lahf
shll
jb
mov
inc
push
pop
jg
lds
mov
xchg
je
sbb
push
add
scas
aaa
mov
addb
outsl
sar
jl
jnp
cltd
and
paddq
cmpsb
dec
gs
outsb
jno
adc
mov
leave
pop
push
nop
add
sbb
xor
push
pop
sub
sbb
js
cld
lods
popf
ret
add
add
mov
mov
test
mov
xor
int3
pop
jg
push
data16
fnstcw
cmp
mov
add
mov
add
xchg
ds
inc
sti
mov
xchg
loop
mov
add
mov
or
inc
sub
js
std
mov
push
add
add
add
daa
stos
outsb
jmp
enter
adc
and
mov
cmpsb
xchg
cltd
mov
add
push
nop
add
test
addb
xor
mov
insb
mov
add
in
add
imul
mov
xor
sti
ja
or
mov
xor
mov
addb
sub
mov
aad
cmp
test
jbe
add
jae
mov
mov
stos
popf
mov
mov
mov
ret
rolb
out
stos
cld
movsb
adc
inc
adc
addb
ljmp
mov
sbb
mov
add
in
xchg
xchg
cli
leave
test
add
pop
mov
mov
shll
fistpl
sahf
es
rolb
adc
test
cmp
aas
xor
cmpsb
mov
nop
add
les
mov
je
gs
mov
repz
ret
ficomps
and
lods
add
fistps
lea
mov
xchg
repnz
pusha
add
in
ljmpw
mov
clc
pop
add
add
add
