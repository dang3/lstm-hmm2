sarb
data16
push
xor
cmp
inc
mov
add
jl
addb
add
add
or
fistps
add
push
test
dec
inc
xchg
push
imul
test
in
mov
loop
inc
or
mov
cmp
pop
pushf
nop
pop
xchg
inc
add
jle
mov
push
int3
sti
ret
cmpsl
aas
push
jns
jno
push
xchg
idivb
pop
insb
or
ret
daa
xchg
dec
mov
or
addb
faddl
add
aas
scas
sub
sub
rolb
test
inc
add
fldenv
jne
mov
sub
dec
jg
icebp
push
in
pop
xchg
aaa
sbb
aaa
jmp
int
xchg
inc
adc
test
sub
jb
fistpl
inc
pop
out
into
lock
rolb
mov
cmp
pop
sub
and
mov
mov
add
mov
add
fs
add
clc
rolb
out
fmul
sub
imul
loope
mov
add
filds
add
dec
js
lret
jo
divb
bound
inc
add
add
idiv
mov
pop
sbb
add
or
ljmp
insl
shlb
jl
les
lret
mov
push
jb
scas
push
outsb
jae
aam
mov
je
cmpsl
stc
mov
incb
add
adc
stc
pusha
fisttpl
jnp
rcll
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
jb
xchg
xor
dec
std
call
add
mov
lods
iret
mov
pop
xor
repnz
jmp
les
repnz
movsl
cmp
dec
out
xor
imull
pop
dec
mov
add
aas
rolb
add
add
cwtl
aam
xorl
add
pop
ljmp
mov
adc
mov
mov
std
mov
sub
xchg
jns
adc
loopne
sub
jle
jbe
add
cmp
add
push
add
sub
sub
cmp
add
dec
push
insb
pop
jnp
popa
fisttps
add
cmovs
add
add
adc
aas
pop
ret
ja
insb
test
and
sbb
sti
mov
pop
xor
addr16
mov
mov
mov
lods
aam
add
pop
and
loope
push
push
rcrb
idivb
inc
add
add
ret
xchg
stc
enter
or
sub
add
nop
lcall
and
pushf
mov
push
pop
or
cs
mov
bsf
pop
pminub
push
sub
arpl
adc
int
popf
mov
cld
scas
or
jp
and
cmc
jne
repz
lock
ss
lods
push
cmp
scas
mov
shll
or
lret
dec
call
or
pop
pop
out
jb
inc
push
pop
lock
ud1
add
mov
and
dec
xor
negb
mov
pushf
negl
and
dec
cld
bound
dec
testb
scas
xchg
mov
outsl
jae
mov
add
xor
add
push
insl
ljmp
cmp
mov
mov
add
pop
pop
into
cmc
add
ljmp
jb
iret
test
vphaddbd
and
mov
mov
or
test
cltd
pop
xor
xchg
and
push
pop
movsw
dec
cmpsb
add
add
add
popa
in
mov
cmc
add
mov
add
xchg
pop
rclb
ret
pushf
mov
aas
popa
lahf
arpl
scas
or
aad
sbb
fistpll
rcll
inc
jg
cwtl
push
stos
out
addb
test
aas
mov
fcoml
mov
mov
lock
jmp
fwait
sub
insb
mov
and
xchg
in
outsb
add
pop
xchg
push
bound
ljmp
negl
out
movsl
clc
ljmp
push
and
sti
push
push
adc
int
push
call
xor
dec
cmp
push
mov
leave
mov
add
mov
out
bound
jl
add
mov
cmp
movb
jo
push
push
dec
stos
ret
push
les
push
push
or
push
mov
js
dec
cmp
insb
in
lea
and
mov
mov
imul
popl
and
cmpsl
dec
cmp
jbe
jmp
mov
mul
outsb
or
jmp
adc
scas
adc
pop
xchg
test
push
hlt
and
xor
adc
xchg
cmpsb
push
and
push
cmp
jbe
in
lods
std
loope
dec
push
add
test
addb
add
push
rolb
std
lahf
popf
fcoms
into
rorl
movb
das
jp
add
add
cmc
lds
addr16
xor
inc
mov
push
jg
es
mov
movsl
arpl
pop
xchg
cmc
lret
fdivrp
add
jbe
sub
fwait
ss
aad
shrl
aam
call
jne
mov
sub
icebp
mov
fdivr
cmp
dec
enter
add
cmp
mov
cmpsl
test
icebp
sub
and
sti
pop
adc
xor
mov
cmp
mov
aas
mov
aad
lea
rcrl
mov
sub
ret
sbb
add
aad
testb
sahf
ja
jge
cltd
and
rolb
add
dec
hlt
ficomps
mov
add
cld
mov
arpl
xchg
xchg
jae
imul
jp
ljmp
pop
jae
sar
cwtl
test
add
xchg
scas
xor
mov
fldcw
adcl
repz
dec
push
or
adc
popf
dec
stos
cmp
mov
jmp
dec
push
add
mov
movsl
dec
lods
mov
stos
pusha
add
test
mov
into
popf
int3
push
push
inc
add
test
cbtw
stos
mov
xchg
push
add
jp
bound
adc
add
inc
xchg
mov
dec
jecxz
xchg
icebp
sub
push
inc
add
ja
testb
loope
movb
push
xor
cmp
dec
mov
pop
adc
add
mov
shl
mov
add
loope
sub
out
adc
mov
xchg
sahf
mov
mov
cs
addb
and
jae
jle,pn
roll
movsl
hlt
xor
movb
push
push
mov
mov
stos
movsb
jecxz
xchg
lret
jae
hlt
addb
ljmp
in
mov
movb
xor
add
lods
test
mov
jecxz
cmpsb
clc
mov
xor
pop
cmp
ret
xchg
in
pop
add
ss
ja
push
cltd
lret
jb
push
pop
bound
mov
cwtl
mov
loopne
imull
mov
rclb
mov
cmp
pop
repnz
lock
out
divl
xor
aaa
mov
xchg
cld
lret
sub
cwtl
addb
mov
imul
adc
fwait
mov
dec
shrl
in
insl
test
mov
lock
xor
dec
mov
xchg
add
mov
mov
mov
add
xchg
dec
sbb
shll
lds
dec
hlt
lahf
or
sarl
mov
cmp
cmp
adc
xchg
pop
ljmp
dec
mov
ror
int3
inc
add
rolb
aad
andl
loop
aaa
bound
add
sub
xlat
jmp
daa
add
rolb
xchg
ja
add
xor
roll
ljmp
push
cli
mov
arpl
dec
lea
mov
fimull
xchg
js
add
fstpl
adc
mov
add
arpl
push
or
cmp
lock
outsb
add
lret
cltd
mov
sbb
add
addb
pop
movsb
sbb
je
xor
test
or
mov
mov
dec
std
inc
mov
scas
xor
add
add
jmp
dec
inc
add
xor
push
lock
push
mov
int
jmp
push
arpl
mov
or
xor
rclb
sbb
fidivrl
pop
xchg
inc
push
imul
std
rol
rolb
fwait
mov
pop
and
lds
add
icebp
sbb
fadds
add
pop
push
add
pop
cmp
dec
scas
repnz
shl
or
cmp
pusha
add
enter
pop
mov
xlat
mov
cmpl
int3
and
sub
jmp
mov
mov
dec
cmc
or
in
sti
rcl
mov
dec
mov
add
mov
call
lods
pop
cmc
jae
fnstsw
test
shlb
sbb
ja
mov
push
or
mov
call
mov
loopne
dec
xor
jne
mov
lock
hlt
loope
clc
xchg
mov
addb
mov
and
add
scas
cmc
cmp
inc
add
lds
stos
add
push
jns
rolb
inc
jmp
or
leave
xlat
arpl
aaa
cmpsl
sbb
jno
adc
sub
pop
and
cmp
add
notb
push
mov
pop
cli
fisttpl
loopne
push
mov
mov
jp
mov
jne
cmp
and
push
sub
jmp
xor
mov
sub
inc
xchg
out
pop
enter
add
shl
loopne
outsl
ja
test
sub
fldt
mov
jo
rolb
cmpsb
loopne
andl
leave
xchg
pop
loope
stos
dec
xchg
loopne
xor
loop
stos
into
insl
or
stos
mov
mov
ret
push
push
lods
mov
scas
sahf
scas
and
pop
or
or
sarl
aas
jne
cmp
mov
arpl
inc
mul
ljmp
lods
cmpsb
into
mov
loop
shrl
cmp
cmp
jmp
jne
mov
jo
movl
fucom
jp
movsl
imul
mov
push
xchg
ret
xchg
imul
rorl
lcall
inc
add
les
outsb
sbb
mov
mov
jmp
sbb
add
repnz
jae
into
add
sub
cmp
dec
cmpsl
insb
xor
cmpsl
pushf
push
addb
daa
cwtl
xchg
lods
adc
cli
xor
xor
test
inc
test
pextrw
lahf
sub
int3
in
push
jnp
mov
mov
rolb
fmul
cmp
xchg
shlb
inc
pop
push
and
mov
popf
add
mov
add
lock
inc
jp
add
add
add
mov
or
outsl
int
add
rcrl
cmp
nop
in
jle
add
mov
iret
leave
mov
inc
add
aam
mov
les
jb
and
outsb
lret
add
and
in
jp
push
or
jne
add
lret
ret
es
add
add
mov
cli
jnp
lods
lcall
pop
movsl
cli
mov
popa
negl
adc
dec
inc
scas
dec
push
sbb
ret
pop
insb
in
mov
addb
shl
leave
inc
add
cld
jg
add
movsb
loopne
sbb
daa
popa
imul
mov
add
jae
mov
xchg
rorb
test
jle
cmc
popf
test
mov
pop
push
cmp
add
sub
inc
out
jae
ss
std
adc
test
lock
movsb
int
clc
cld
mov
ret
fsubrl
dec
or
popa
rolb
add
sbb
and
and
xchg
pop
outsb
call
orl
mov
addb
out
iret
mov
xor
cmp
sbb
aas
cli
call
sub
jns
push
add
ja
adc
sar
jo
or
outsb
or
dec
pop
mov
or
xchg
xchg
rolb
les
incb
add
repz
bsf
inc
add
adc
fs
dec
sti
shlb
mov
xor
xlat
rolb
je
js
sbb
cmp
test
xor
sub
pusha
add
test
push
pop
or
add
add
mov
fdivrs
or
nop
add
adc
xchg
addb
ja
insb
mov
mov
fucomip
addb
hlt
test
mov
dec
icebp
cmc
fcoml
adc
addb
addb
and
add
pop
xor
in
btr
xor
fmuls
nop
mov
into
iret
stos
scas
ret
push
flds
nop
into
pop
pop
cwtl
iret
insl
ds
pop
sbb
popf
mov
cmp
add
std
std
push
sti
xlat
popa
push
shl
xchg
mov
addb
out
xchg
imul
inc
add
cwtl
inc
stos
mov
mov
ficomps
or
movsl
xchg
and
pop
jge
in
sub
adc
inc
add
mov
push
shll
jns
sti
out
arpl
les
fimull
ja
cmpsb
mov
inc
and
push
jne
sub
add
insl
das
fstps
fldl
cmp
mov
add
ja
push
add
and
cmp
inc
sbbl
es
loope
mov
cmp
cli
mov
xchg
imul
add
jmp
add
add
sub
push
shl
cmp
sub
xor
or
pusha
add
sub
add
add
cs
xchg
cli
mov
mov
inc
mov
in
mov
cmp
and
xor
push
stc
jecxz
rolb
cwtl
jbe
cmp
jbe
sbb
divl
adc
xor
incb
mov
jecxz
mov
mov
push
xor
push
add
jbe
lret
sub
xor
gs
add
add
cs
mov
out
jmp
push
mov
outsb
dec
dec
add
fisttps
mov
jp
mov
gs
cmp
or
fwait
xor
push
add
add
nop
int
repnz
xchg
lods
mov
popf
dec
add
jne
shll
sarl
clc
int
and
mov
add
dec
ffreep
aas
add
je
les
fildl
sbb
or
scas
jg
jae
sub
mov
lret
std
xchg
pop
sub
stc
and
jns
dec
bnd
clc
push
add
push
push
sub
cld
and
imul
cmpsb
push
xor
add
loop
addb
movb
add
addb
mov
mov
daa
jns
jbe
xor
cltd
push
add
add
mov
inc
jmp
scas
inc
add
rcrl
jo
lods
and
sbb
outsl
stc
fistl
jmp
roll
cwtl
cmp
test
xchg
add
test
jecxz
push
adc
arpl
pop
imul
lods
xchg
xlat
jb
test
inc
add
mov
mov
add
xlat
sub
lea
decb
in
mov
xchg
xchg
imul
pop
cwtl
incb
imul
dec
lret
pop
jbe
or
push
mov
dec
sarb
out
xlat
lcall
push
add
add
add
sbb
push
cld
addb
jmp
lds
inc
jae
or
inc
add
push
or
rcll
cld
les
fisttpll
add
pop
mov
leave
test
dec
rcr
fadds
mov
dec
nop
fs
jl
aaa
or
xchg
fadd
scas
xchg
and
daa
sbb
mov
addr16
push
les
in
test
addb
inc
add
add
add
int3
sub
xchg
mov
sbb
push
xchg
or
cmp
xor
lods
out
pop
cwtl
popf
out
push
jecxz
mov
add
push
test
add
xchg
or
js
repnz
mov
or
xor
xchg
rolb
lret
mov
pop
bound
and
cltd
sbb
push
add
mov
int3
inc
add
aaa
mov
in
or
movsl
addb
add
push
imul
push
pop
sub
xor
movsl
mov
rolb
fnsave
rcrl
jbe
mov
call
push
scas
rcrl
add
nop
mov
call
loop
add
mull
add
sub
mov
add
push
and
pop
clc
sahf
sahf
sahf
jg
loop
int
psubusw
hlt
mov
push
mov
pop
hlt
out
add
out
jl
es
call
xchg
sub
or
cmp
mov
sub
popf
movb
mov
cmp
decl
cmc
mov
mov
inc
add
push
das
stos
mov
iret
xchg
into
mov
push
sub
xchg
jnp
lods
lahf
dec
push
pop
int
pop
cmpsb
out
and
aam
popa
xor
add
mov
in
mov
mov
movhps
sarl
push
inc
lret
and
push
adc
lret
mov
push
jg
mov
test
mov
adc
mov
leave
mov
movsl
mov
add
pop
push
pushf
stos
pop
in
pusha
add
dec
fdiv
cs
fdivr
jo
add
aam
sbb
fidivrs
jne
sub
add
xor
mov
idivl
popa
imul
mov
enter
add
test
xchg
shlb
push
jp
mov
ds
add
dec
insb
add
addr16
inc
add
out
aam
xorl
add
subl
adc
scas
cmpsl
adc
sub
data16
in
movb
dec
clc
lret
loope
gs
addb
out
cmc
pop
lea
and
xchg
pop
sbb
xor
push
or
orl
xor
and
jle
sti
fildl
add
jecxz
jnp
out
and
push
adc
add
xor
dec
push
fidivl
or
test
jl
and
add
jbe
add
into
lock
addr16
mov
sub
dec
pop
xchg
and
insb
and
rolb
call
or
dec
fcmovb
les
sarl
jg
nop
mov
and
cmp
xor
or
jae
ss
cmc
cs
arpl
and
into
pop
sub
push
add
cwtl
sbb
outsl
jne
xor
sar
jp
lcall
cltd
daa
add
xor
stos
in
cmp
cmp
mov
add
sbb
fdivrs
dec
in
inc
jo
daa
jecxz
pop
fs
add
insl
iret
jae
mov
fsubrs
int
add
mov
jnp
jmp
dec
adc
lods
xchg
es
pushf
daa
push
mov
adc
dec
ljmp
sub
mov
xchg
les
dec
icebp
std
mov
jae
movsb
in
add
loop
jno
fcos
inc
outsb
lods
clc
cwtl
mov
xchg
lcall
add
movsl
sub
mov
mov
xchg
sub
dec
sub
int
lock
mov
aad
movb
push
imul
es
sbb
dec
lret
cli
lds
mov
inc
repz
test
jbe
test
add
cmp
add
pop
addl
pop
push
inc
add
shrb
push
sar
xchg
sbb
imul
push
and
xlat
sub
add
mov
rolb
pushf
lret
fsubrl
add
dec
jp
pop
adc
js
jns
inc
dec
lcall
loop
jbe
in
rcl
movsb
idiv
pop
push
add
test
aad
jbe
mov
cmp
out
mov
cmp
cmp
es
lret
xor
add
xor
jne
sbb
int
ja
add
inc
xchg
je
ret
cmpsl
arpl
jbe
out
push
mov
mov
popa
fdivs
ret
je
pusha
add
mov
iret
shrl
inc
add
std
mov
mov
cli
sti
push
xchg
lahf
out
mov
scas
repnz
cmp
mulps
mov
add
dec
ja
loope
pop
stos
push
and
add
mov
cmc
ds
add
xlat
inc
add
dec
lcall
adc
or
addr16
jb
push
mov
addb
sbb
mov
movb
aad
or
pop
pop
sbb
sbb
call
jne
movb
outsl
stos
pop
loope
pop
mov
add
and
loope
out
ror
push
or
stos
lahf
sbb
add
pusha
add
inc
push
int
fcomp
push
xchg
jmpw
pop
add
mov
outsb
inc
fwait
sti
std
stos
sub
test
add
inc
add
mov
xchg
and
inc
add
adc
cmp
adc
setg
pop
xchg
loop
cwtl
loop
pushf
push
fucomip
mov
fimuls
imull
lock
adc
filds
ljmp
ja
jle
sub
adc
jnp
jl
inc
cmp
add
push
pop
lods
inc
add
lds
call
add
xor
push
dec
les
test
les
popa
loope
mov
or
cmp
cs
add
add
mov
add
inc
add
add
inc
add
insb
les
cwtl
push
mov
stos
mov
ss
add
mov
push
mov
mov
call
push
iret
jg
add
add
mov
inc
add
cli
xor
pop
cmp
add
test
push
add
and
mov
dec
fidivrl
loopne
mov
lcall
and
test
jle
mov
scas
pop
sub
int3
stos
push
mov
and
inc
loop
mov
pop
and
idivb
mov
mov
pop
cld
and
add
decb
cli
xor
mov
jbe
test
add
bound
ficomps
add
and
cmpsl
imul
mov
sub
push
leave
push
sbb
xchg
pusha
add
outsb
xchg
out
jnp
loop
stos
pop
movsb
dec
sub
outsl
or
lods
orl
in
jl
xor
cmp
jbe
lock
sub
rolb
shlw
lods
outsl
repnz
ds
sbb
sbb
imul
mov
arpl
jge
lock
roll
xor
arpl
imul
dec
push
push
mov
mov
add
sahf
mov
sub
data16
ret
xchg
ds
add
jg
ret
sbb
pop
pop
push
pop
inc
add
pop
ljmp
daa
xor
mov
inc
cmpsw
push
popf
pop
fisubl
dec
ds
xchg
sub
cltd
push
pop
int3
call
inc
add
xor
roll
stc
lods
jo
inc
add
jnp
movsb
sbb
addb
mov
mov
ds
xor
ret
icebp
push
movsl
pop
gs
xlat
movb
jp
rcr
inc
add
push
xchg
xchg
mov
les
pop
clc
icebp
jp
xchg
lahf
sbb
mov
addb
push
in
lds
in
cs
sub
mov
repz
outsb
out
imul
dec
push
cmpps
and
add
fmul
xchg
repz
rcr
cmp
add
jle
adc
addb
adc
stos
sti
fdivrl
fs
and
stos
push
into
adc
jbe
bound
cltd
push
iret
sub
add
dec
ljmp
add
mov
add
ror
inc
add
dec
subl
popf
sbb
and
dec
inc
add
and
rorb
mov
loope
aaa
cld
fdivp
mov
mov
clc
mov
pop
push
adc
movsl
les
mov
adc
pop
addb
leave
stos
lret
mov
fs
lcall
mov
jo
pop
out
insl
rorl
cmp
add
xchg
cmp
fldcw
add
lcall
pushl
adc
daa
add
sub
or
mov
add
test
add
ret
jmp
test
add
xchg
jnp
jbe
mov
lds
in
or
insl
cld
sub
jno
add
imul
movsb
push
mov
dec
add
out
pop
adc
add
fdivl
int3
adc
in
xlat
mov
jbe
cmp
addr16
jnp
negl
mov
inc
fwait
push
in
add
adc
stos
test
add
jp
mov
loop
cld
xchg
sbb
mov
sub
add
aam
jbe
in
inc
add
pop
pop
test
add
and
insb
std
xor
inc
je
jg
dec
in
xchg
jo
addb
inc
jne
push
shrb
mov
stos
mov
mov
inc
sbb
stc
xchg
aam
push
add
add
scas
dec
in
dec
and
js
jl
jmp
push
call
xor
movl
sub
or
bound
push
jnp
lods
adc
shrb
fbstp
daa
jae
ja
xchg
jbe
lret
lret
xchg
decb
lahf
cli
scas
fmul
pop
fcmovbe
es
and
outsl
dec
ljmp
repnz
mov
into
mov
test
push
xchg
ret
test
mov
mov
dec
dec
xor
loop
add
lcall
push
and
xor
add
jno
movb
add
rolb
lea
add
popf
popa
dec
add
rolb
scas
or
add
sub
adc
xchg
dec
jle
add
add
lods
in
fwait
mov
lret
call
cmp
push
outsb
push
inc
fsubl
ss
xor
mov
xor
jge
mov
mov
in
sub
and
dec
adc
ds
jp
push
jmp
inc
inc
jp
jecxz
mov
decb
icebp
aas
test
into
pop
stos
fidivrs
rorb
inc
add
mov
mov
adc
add
xlat
sbbl
loopne
psubw
sub
add
pop
sub
addr16
repz
or
add
xchg
rclb
xor
add
imul
add
loopne
add
jo
add
add
and
outsl
andl
insl
or
xchg
and
lds
inc
add
xchg
xchg
inc
add
inc
add
or
add
mov
scas
push
sub
cwtl
mov
std
into
into
pop
ljmp
xchg
inc
jl
add
mov
mov
insb
pop
ljmp
ljmp
aam
add
add
pop
add
push
dec
mov
clc
xor
pop
je
adc
adc
xchg
sbb
cwtl
mov
xchg
or
sub
cmp
ja
xchg
adc
pop
sub
dec
cmp
shr
xlat
lcall
dec
mov
mov
mov
add
add
xor
sub
aas
or
sub
pop
popf
sar
cmp
push
mov
dec
outsl
int
popf
les
pop
cmpsl
sub
sub
ss
add
fadds
cmp
cmpxchg
pushf
inc
mov
and
pop
mov
push
lds
fs
add
sub
cmp
xchg
jbe
divb
xor
int
mov
xchg
add
mov
jne
add
out
add
lock
sbb
push
ja
roll
and
inc
add
fsubrl
out
pop
push
lahf
sbb
sub
and
cmovbe
mov
fistl
in
dec
fcom
xlat
add
cmpsl
sbb
into
rolb
repz
into
pop
icebp
rolb
test
addr16
push
pop
clc
fldl
rcll
pop
cmp
add
lret
and
gs
add
dec
mov
sbb
sub
ljmp
aaa
fisttpl
lahf
sbb
jbe
inc
shll
call
cmp
sbb
jnp
cli
dec
mov
xchg
pushf
dec
sbb
add
aaa
rcrl
outsb
clc
mov
sahf
ljmp
repz
push
mov
sub
add
scas
mov
xlat
les
test
mov
and
loope
push
add
iret
pop
ss
pop
pusha
add
sub
lock
mov
mov
cmp
fistpl
jns
jbe
clc
mov
cmp
lods
and
xchg
ret
cld
xchg
ret
jne
pop
adc
nop
aaa
jmp
jmp
sub
out
sub
popf
scas
sub
lods
push
sbb
cs
lahf
add
je
rcl
out
xchg
pop
sbb
xor
inc
add
les
insb
sub
inc
inc
add
add
pop
int
mov
les
int3
mov
add
sbb
rcrl
dec
sub
das
into
fists
out
cmp
dec
addb
xchg
xor
sub
and
mov
jns
xor
push
cmp
mov
jg
adc
stos
ja
add
jo
mov
in
jmp
mov
add
pop
int3
xor
pop
mov
pop
jle
mov
pop
mov
add
push
enter
push
dec
setb
push
and
rorl
fidivl
pop
in
inc
add
inc
add
push
sub
in
pop
je
or
dec
or
cmp
sbb
mov
push
sub
cmp
dec
cmc
sub
adc
add
and
mov
clc
fs
adc
lcallw
pop
pop
ja
xor
mov
or
add
bound
insb
push
clc
sbb
cmp
lds
add
movb
xlat
push
arpl
flds
add
enter
xchg
in
movsb
addb
pop
push
ja
xchg
jp
hlt
insl
sbb
sbb
pmaxub
push
jno
imul
lcall
pop
rcrb
fwait
dec
addb
dec
insl
sbb
jp
jae
rcll
movb
and
aad
add
cmp
mov
fs
cmp
or
xor
sub
adc
add
cwtl
sarl
out
dec
mov
jg
add
dec
jecxz
decb
jp
je
addb
pusha
add
add
or
ret
jbe
sahf
ret
mov
and
clc
nop
imul
cmpsl
cmp
xchg
add
and
mov
bound
and
lret
mov
ror
mov
fidivrs
mov
cli
pushf
fs
lods
add
std
dec
mov
in
mov
scas
mov
mov
lret
pusha
add
pop
icebp
out
ficompl
pop
arpl
add
xchg
lcall
out
mov
cli
imul
not
xchg
insl
cld
cs
addb
xchg
jmp
mov
cmp
out
cmp
orps
pop
ss
or
jle
mov
add
adc
mov
mov
add
mov
add
adc
fadds
inc
fdivrl
or
mov
xchg
sbb
jge
lods
out
mov
push
add
test
mov
sub
fs
push
mov
into
mov
cmpsb
dec
hlt
xchg
sbb
xor
push
add
push
inc
add
mov
xor
sub
movsb
nop
js
stos
fisttps
ret
inc
dec
addr16
in
push
in
and
test
aam
aas
scas
add
mov
fidivs
sub
in
iret
movl
xchg
in
xchg
mov
fcmovnbe
les
push
jns
inc
add
rcrl
sub
dec
call
into
xchg
push
add
std
push
mov
add
loop
push
sbb
mov
jbe
bound
fcoml
rorl
inc
adc
sbb
inc
add
mov
sub
ss
add
sub
repz
add
ss
jmp
xor
inc
test
mov
scas
mov
ss
lcall
addb
push
add
inc
jp
movb
repz
mov
add
add
repz
and
in
dec
repz
cmp
jg
push
mov
hlt
aad
mov
or
push
sub
mov
inc
add
lahf
fistpll
pushf
sbb
leave
pop
dec
cmp
sbb
push
lock
jl
xchg
mov
mov
stos
jl
aas
add
adc
fcmovbe
pusha
add
jbe
cmp
stos
mov
negb
out
fisubs
stos
fldenv
pop
ja
push
adcl
leave
stc
cmp
loop
sbb
sub
sub
cmc
xor
add
push
adc
xchg
mov
push
popf
or
lods
sub
or
add
scas
rol
mov
add
repz
icebp
jno
js
sarl
xor
pop
cli
cmp
sub
cmp
jp
xor
push
mov
push
xchg
sbb
test
xchg
addr16
pop
cli
lret
test
mov
mov
or
leave
inc
add
mov
mov
and
ret
nop
lods
ret
add
inc
xchg
mov
inc
loope
daa
arpl
rcrl
cs
shlb
aad
xchg
leave
pusha
add
out
xorl
mov
jo
repnz
mov
cmp
jmp
mov
fsub
rcrl
cmp
rolb
inc
lret
xchg
shl
out
add
jne
lock
mov
enter
cmp
std
loopne
fcompl
mov
ds
xchg
data16
sbb
xchg
loope
scas
push
stos
dec
jns
add
push
pop
movsb
mov
lcall
add
xchg
sbb
cmpl
or
mov
pop
icebp
push
mov
and
mov
sub
ja
mov
out
lock
aam
add
inc
add
out
pop
loopne
mov
je
aaa
jnp
mov
xchg
out
xchg
pop
mov
aad
add
mull
inc
add
les
mov
ss
jle
mov
fistpl
push
and
add
std
inc
test
mov
movsl
mov
dec
xor
loop
outsl
stc
movsb
or
adc
sbb
sti
mov
dec
fwait
adc
pop
outsb
xorl
push
dec
sbb
cmp
or
mull
enter
jmp
in
lds
add
dec
ljmp
fxch
and
sub
mov
lock
repnz
and
or
js,pn
ret
bound
xchg
sahf
sbb
sbb
xchg
adc
out
lods
or
xchg
cld
sub
aas
fbstp
jmp
push
out
xchg
movb
inc
add
xor
jl
push
adc
pop
das
mov
test
cltd
loop
add
xor
sub
inc
add
adc
lock
ret
cs
mov
jge
add
ficoml
mov
push
sahf
test
add
test
cmpl
mov
and
mov
and
lods
jo
into
clc
cmp
mov
add
aam
cmp
mov
add
xchg
notb
fwait
cmpsl
xlat
and
sub
add
pop
into
cltd
dec
pop
cli
in
add
add
pop
dec
mov
ds
in
xchg
xchg
out
pushf
mov
add
xchg
cmp
mov
add
add
add
pop
adc
decb
aad
pushf
cmp
ja
cmpsb
cmp
cmp
sub
mov
rolb
and
lods
mov
les
mov
and
loope
push
xchg
mov
inc
add
cmp
inc
add
jge
add
rcrl
sbb
aam
mov
clc
mov
popf
adc
jne
ficomps
sub
f2xm1
pop
inc
or
mov
bound
sbb
test
push
and
inc
fadds
mov
push
cmp
add
jp
push
xchg
sub
pop
iret
loopne
lock
dec
pushf
xor
es
add
adc
das
mov
outsl
adc
mov
std
push
inc
sbb
add
xchg
nop
xor
lahf
mov
and
repz
jae
mov
pop
pop
addb
das
ljmp
inc
add
movb
addb
mov
and
movb
xchg
adcl
xchg
cltd
outsb
jne
add
xchg
xlat
inc
pop
icebp
leave
cmp
sub
lds
rclb
pop
xor
jp
pop
addb
jmp
pusha
add
addb
add
add
pop
lcall
test
xlat
or
mov
pop
lret
or
pop
lds
inc
cwtl
cmp
add
and
cmp
inc
add
inc
ss
inc
add
lahf
jae
shrb
addb
and
dec
jne
dec
cmpsb
cmp
cli
arpl
jne
xor
rolb
imul
dec
mov
add
add
gs
lret
loopne
lcall
mov
xchg
mov
cmp
addl
sub
cmpsb
push
lea
mov
add
mov
outsb
jl
daa
dec
lahf
repnz
sub
pushl
gs
xchg
adc
pop
add
insl
mov
enter
sbb
add
inc
lea
sub
mov
inc
add
stos
in
or
sub
mov
lahf
pop
add
repz
push
inc
add
cmp
push
data16
push
mov
pop
or
loopne
add
add
sub
pop
push
call
test
xor
lret
insl
bound
sbb
pop
std
pop
lret
movsb
cmpsb
cmp
push
out
cld
xor
pop
xor
adc
lahf
add
cli
pop
bound
test
mov
xor
mov
xlat
testl
xchg
mov
inc
push
fsubrp
js
lea
mov
xor
js
imulb
decl
shll
dec
add
icebp
mov
xchg
jno
test
filds
add
jo
popa
loope
dec
or
dec
inc
add
mov
push
cmp
push
iret
lds
push
popa
jge
mov
cmp
addb
cli
fstps
or
je
pop
jno
andl
lret
loopne
insl
fwait
nop
es
inc
movsb
mov
sbb
add
pushf
jp
sbb
jnp
movsl
dec
adcl
data16
inc
sti
jnp
sahf
addb
add
out
or
mov
cld
and
push
mulb
or
stos
out
out
jbe
arpl
push
add
and
xor
incb
push
add
and
std
pop
dec
call
mov
add
addb
dec
repnz
mov
pop
vpextrw
test
add
mov
fisttps
add
push
sbb
addb
rcll
clc
stos
jb
sbb
sbb
dec
addb
add
pusha
add
cmp
rorl
cmpsl
push
cmp
add
mov
mov
fsts
rolb
lret
in
test
mov
insl
addb
and
pop
mov
or
xchg
xchg
adc
xor
icebp
aas
dec
pop
gs
in
cmp
add
push
xor
jns
inc
jmp
test
jno
rcr
push
add
add
adc
in
cmp
sbb
jmp
push
shrl
jno
xor
inc
mov
leave
dec
mov
call
cltd
int3
fs
in
sahf
jg
xchg
push
lcall
mov
lods
xchg
pop
fsubs
or
add
imul
add
out
aam
rolb
int
add
imul
and
idivl
pop
mov
jbe
repz
lret
ficoms
mov
lret
add
outsb
int
pop
jbe
clc
cmp
add
outsl
mov
mov
js
rep
ds
add
cmpsb
sub
test
push
add
or
stos
pop
jp
lea
addl
std
add
pop
pop
push
xchg
pop
mov
roll
mov
jp,pt
jmp
dec
fstps
stos
mov
add
pop
dec
cmp
sbb
daa
shrb
les
je
mov
fmul
stos
inc
add
xchg
add
imul
test
mov
das
dec
fst
addb
mov
fwait
sub
mov
sbb
jnp
lcall
push
not
push
sbb
push
stos
mov
lret
in
and
ret
add
dec
adc
xor
pop
arpl
dec
cmpsl
popf
sub
dec
mov
push
scas
and
stos
incl
cmp
push
or
add
mov
add
mov
cmpsl
sub
xchg
mov
pop
mov
jb
jnp
out
outsl
mov
add
in
jbe
movsl
ret
mov
clc
enter
bound
cwtl
in
xor
jnp
in
sbb
dec
into
sahf
ds
sub
jae
enter
aaa
push
inc
add
aaa
popf
stc
push
pop
into
test
push
aam
adc
sarb
and
push
dec
adc
loope
loop
fcomps
adc
addb
fisttps
int3
mov
push
setae
inc
add
add
cmp
sti
cwtl
xchg
fiadds
in
dec
les
lcall
rolb
mov
lock
mov
addr16
jle
jl
and
ret
and
add
lds
add
push
push
xchg
int
cmp
mov
mov
cmp
mov
add
inc
scas
out
add
nop
movb
lret
pop
in
test
cli
xchg
jg
add
add
cmp
or
lret
xor
ret
imul
and
cmp
ss
mov
add
and
xchg
mov
xchg
dec
fs
pushf
pop
mov
add
or
mov
pop
gs
pop
cmpsl
jb
in
push
or
add
mov
loop
test
add
repnz
jb
mov
jg
rcrl
pop
ja
test
cs
push
add
push
mov
sbb
jo
les
push
aas
sahf
in
shrl
mov
jmp
mov
fisubrs
addb
test
inc
add
fs
jbe
mov
cwtl
in
in
jb
cmp
inc
aam
sti
push
mov
sub
jo
les
test
lret
ljmp
push
adc
dec
movb
addb
addb
mov
add
movsb
cltd
dec
dec
cli
addr16
jne
mov
jg
pop
stos
inc
ja
pop
fidivrl
push
out
push
mov
pop
jg
sbb
sbb
or
popa
sub
cmc
xor
cmp
testb
stc
cmpsb
xor
inc
add
test
add
hlt
pop
inc
inc
sbb
mov
dec
sahf
xor
push
sti
push
outsl
fistps
sub
or
mov
and
sarl
cltd
outsl
mov
jnp
in
push
lret
mov
lds
add
inc
pushf
lock
inc
add
dec
fisubrl
xor
add
enter
out
cmpsb
jmp
fcoms
sub
sbb
mov
imul
add
dec
stos
lahf
shrb
dec
nop
out
mov
test
movb
dec
pop
shlb
and
dec
inc
add
iret
movsb
xchg
pop
pop
mov
outsb
sbb
mov
add
ficoms
sub
sbb
mov
cmc
cli
adc
xchg
adc
push
fs
jb
add
mov
xchg
pop
pusha
add
loope
mov
inc
add
fimull
sbb
pop
pop
fs
or
fldenv
lock
xor
lock
mov
inc
jae
push
pusha
add
aad
stc
test
out
sti
aas
push
out
jae
repnz
lods
sub
dec
jp
movsl
testb
movsl
rol
xor
xchg
addr16
scas
dec
cmp
fistpll
mov
pop
into
loopne
leave
outsl
sub
test
ret
in
mov
pop
ds
add
xchg
clc
inc
add
add
addb
pop
pop
jo
inc
add
add
outsl
cmc
xor
hlt
outsl
stos
mov
mov
or
xor
mov
mov
mov
sub
add
cs
aad
sti
inc
add
xchg
xchg
mov
fwait
xor
cmp
cmp
push
stos
sub
push
pop
jae
mov
leave
pop
ljmp
push
popa
jae
aas
xor
lods
pusha
add
cmc
out
mov
or
adc
dec
stos
fwait
lock
jns
mov
sbb
cmp
add
std
push
lods
and
scas
aam
xchg
cmp
cwtl
leave
sbb
and
sbb
addb
imul
lea
insl
int
iret
adc
fs
pop
jbe
mov
pusha
add
add
and
push
mov
or
jo
and
nop
pop
inc
add
pop
mov
in
andl
mov
push
sub
mov
repz
mov
lcall
int3
xor
pop
pop
add
adc
fdivl
out
xor
out
out
rorl
push
pop
repz
aam
in
inc
add
xor
add
test
adc
mov
push
cmp
push
jg
rolb
cmpsb
add
mov
lahf
or
add
mov
ss
xchg
dec
inc
loopne
add
and
icebp
and
aas
mulb
sub
rcll
add
mov
jne
loopne
cvtps2pd
push
movsb
jle
inc
push
inc
add
std
xor
movsb
xchg
xor
outsb
stos
add
mov
pop
push
xor
adc
add
decl
add
fistps
lock
ja
and
outsb
lret
pop
push
scas
testl
sbb
jle
fistps
shl
pop
popf
pcmpeqw
cltd
xchg
adc
les
cs
cmpsl
dec
pop
push
mov
bound
test
mov
jecxz
call
dec
and
js
out
mov
mov
mov
mov
sti
sbb
test
out
dec
cmp
inc
cmpsl
ljmp
mov
in
loop
ja
mov
push
or
jecxz
mov
jns
add
mov
inc
add
jecxz
aad
movb
test
mov
out
cmp
mov
add
movb
inc
add
push
lahf
lock
jns
js
loopne
cmpsb
js
push
movsl
movsl
fwait
repnz
add
mov
xchg
ret
iret
mov
mov
xor
lret
lods
movsb
pop
ret
rclb
popa
test
push
jl
dec
pop
inc
stc
sbb
movsl
or
dec
xlat
int
jle
sbb
push
push
mov
mov
jae
add
inc
add
push
movl
out
inc
lahf
xor
bnd
cwtl
imul
addb
add
jl
cmpsb
bound
xchg
imul
scas
pop
mov
jo
xchg
mov
pushf
frstor
add
inc
add
addb
mov
data16
nop
push
sarl
xchg
pop
pop
call
fstps
ja
adc
add
xchg
mov
mov
add
dec
mov
fcoml
std
fpatan
jle
push
std
or
lods
inc
add
mov
jns
cmp
add
and
mov
add
jbe
add
shr
dec
out
imul
sbb
adc
cmpsl
vminps
dec
std
mov
cmp
data16
pop
dec
movsb
cwtl
outsb
push
adc
dec
clc
xlat
add
repz
xor
mov
orl
mov
adc
imul
and
cmp
inc
add
push
jno
or
pop
bound
les
bound
dec
stc
sbb
iret
rolb
test
add
scas
push
jg
add
mov
jnp
out
xchg
clc
data16
sbb
jl
push
fldenv
bound
push
les
pop
and
sub
dec
clc
mov
and
ljmp
xchg
out
movsl
push
mov
sbb
add
aam
add
dec
roll
rcll
bound
stos
xor
lret
test
aas
push
mov
nop
out
add
insl
lcall
int3
ret
add
jne
imul
lret
in
inc
loop
sub
jp
aas
aas
mov
jnp
cli
in
movb
add
lret
xor
cltd
lret
stos
fs
stos
or
enter
mov
es
mov
repnz
mov
add
add
xor
cmp
sub
movsb
das
or
jp
fcmovne
call
add
xor
notb
push
js
shlb
mov
icebp
dec
sub
nop
outsl
push
dec
faddl
out
inc
lods
insw
ret
mov
rorl
movsl
addb
push
add
mov
stc
push
lcall
cmp
add
or
mov
lret
add
jle
or
add
xor
mov
add
add
loopne
jle
fidivl
and
add
mov
mov
sub
fcmovbe
xchg
popf
cltd
in
push
lds
add
les
fwait
sbb
sbb
outsl
add
notl
cwtl
add
add
jb
add
adc
cmp
lods
inc
push
fwait
inc
add
loopne
add
arpl
out
mov
jne
add
das
ja
mov
mov
sti
push
and
es
xor
aaa
inc
add
push
xchg
aad
inc
divl
push
out
icebp
xchg
in
or
bound
push
pushf
loope
push
rcll
mov
fdivrl
dec
incb
stos
js
daa
mov
sub
shrl
out
cmp
ret
repz
pop
inc
daa
push
sub
pop
aam
adc
lret
fistps
cs
jae
add
aam
jp
das
lret
lds
or
out
test
sub
jno
mov
add
cmp
in
and
xchg
dec
outsl
mov
repnz
xlat
jl
jns
push
push
fnsave
mov
pop
or
fs
int
pusha
add
sub
xor
outsl
mov
push
cmc
ja
in
add
fstl
mov
jo
cmpsb
out
and
mov
movsl
fdivl
or
icebp
cmpsl
xor
ret
lock
xchg
test
push
inc
pop
pop
lea
adc
icebp
xor
push
pusha
add
loop
jae
movb
mov
ds
insb
loope
add
push
or
add
fmul
iret
pop
mov
sub
les
xor
sbb
cmp
inc
add
cmp
idiv
negb
rolb
push
sub
or
inc
add
call
out
sbb
add
jbe
fsubs
scas
cmp
rcrb
add
nop
cmpsl
pop
mov
je
fdivrs
popl
lods
pop
addb
or
aas
pop
fcoml
fwait
adc
and
push
flds
add
inc
add
xchg
add
in
adc
addb
jae
dec
pop
scas
push
push
scas
repnz
sti
sti
fs
popa
mov
mov
in
add
jmp
jnp
popf
into
adc
clc
pop
outsl
add
add
in
scas
add
in
cmp
or
dec
leave
sbb
mov
add
xor
mov
inc
add
inc
add
out
inc
sub
add
push
addb
aam
jbe
dec
hlt
inc
add
mov
add
or
push
sti
jp
add
ret
cmp
and
sbb
loope
cmp
lret
adc
lock
mov
ffree
xor
cmp
clc
lds
jnp
out
bound
pop
pusha
add
ret
and
xchg
leave
sub
das
sbb
cmp
sbb
mov
daa
ss
popf
add
jb
leave
push
mov
in
mov
out
mov
add
jnp
outsl
and
imul
movsb
mov
loope
sti
push
bound
imul
xor
lods
je
inc
add
das
dec
mov
jb
in
add
lahf
imul
pop
into
popa
fdivl
cs
sbb
mov
loope
dec
loopne
add
inc
cld
cli
sti
sbb
sbb
scas
test
xlat
fnstcw
mov
add
jle
push
scas
push
pop
clc
mov
add
shll
inc
add
mov
mov
xor
aad
scas
ret
out
iret
mov
mov
ficoml
mov
into
je
fcompl
ja
xor
jns
cmp
daa
loop
lods
daa
mov
jbe
mov
cli
sbb
push
add
cmc
adc
test
aam
add
je
pop
or
xchg
addb
inc
add
mov
jg
push
mov
add
push
pop
fmull
in
jmp
inc
ret
add
lods
shlb
test
js
dec
dec
test
outsl
xchg
cmp
outsl
dec
push
mov
ret
add
inc
add
rcrl
and
rcr
pop
mov
lea
xor
int3
arpl
add
mov
xchg
adc
fbld
movsb
aas
sub
mov
mov
mov
pop
mov
inc
mov
sub
add
into
mov
std
imul
lret
bound
sub
pop
mov
jl
mov
inc
add
outsb
xchg
sbb
xchg
sti
sar
into
nop
or
aaa
mov
sub
push
mov
mov
lds
je
movb
sub
push
outsl
xor
out
sbb
stos
sbb
sub
or
rolb
addb
jbe
call
and
pop
lods
mov
or
je
xchg
std
or
sub
push
imul
daa
sub
lret
xchg
xor
mov
mov
in
or
lods
and
decl
push
ret
addr16
cwtl
jnp
mov
mov
rol
add
scas
mov
fildl
jp
dec
dec
les
add
popf
push
jl
call
xor
sldt
add
ss
cmpsb
je
out
in
add
sbb
pop
test
cltd
jnp
lret
xchg
add
push
daa
jo
es
icebp
adc
pop
cld
fnstcw
jp
add
add
icebp
lods
push
lods
rcrb
dec
xor
xchg
test
rolb
add
push
addb
add
mov
ret
pop
add
mov
mov
fsubs
mov
sahf
mov
movb
rolb
loopne
aaa
jbe
fidivrl
mov
pop
pushf
adc
add
add
arpl
mov
add
mov
movsl
pop
and
repnz
push
rcrb
fwait
xchg
pop
ret
dec
inc
add
dec
jns
mov
mov
pusha
add
subl
jae
cmp
cmp
mov
jnp
add
ret
xor
int3
xlat
mov
sbb
in
jno
in
or
cltd
pop
std
in
leave
addb
loopne
addb
mov
cmpsl
adc
ja
addr16
push
or
shlb
inc
js
shrl
fisubl
and
cmp
jecxz
push
js
push
stos
test
push
sub
scas
jnp
sub
sti
lahf
jnp
inc
or
aaa
push
xchg
add
frstor
cwtl
xchg
mov
nop
pop
mov
fcompl
dec
jno
rorb
or
popa
sub
lea
add
dec
in
divb
xor
jge
sbb
sub
clc
lds
jmp
hlt
movsb
mov
mov
mov
mov
lock
movb
imul
sub
adc
ret
xchg
adc
and
mov
add
ljmp
lcall
pop
jbe
add
popa
xor
imul
ds
aad
add
mov
mov
call
test
movb
mov
jbe
fst
stos
push
or
add
jmp
inc
psubw
scas
sti
jg
push
cmp
imulb
movb
or
or
out
aas
loopne
jno
fidivs
hlt
add
leave
lret
int3
js
lock
lret
cltd
lds
repz
cmc
pop
add
out
cltd
call
dec
cmc
inc
or
adc
jnp
ficoml
aad
pop
testb
mov
sti
jecxz
das
ljmp
add
mov
dec
js
add
pop
lret
xor
mov
test
movsl
add
push
pop
sarb
rcrl
cmp
stos
mov
rolb
call
adc
out
push
mov
inc
and
imul
inc
add
add
shll
mov
ror
mov
out
cmc
mov
jne
ja
push
addr16
ret
pop
fcmovnu
dec
cmpsb
add
inc
add
inc
and
cmpsl
bound
dec
pusha
add
add
in
jb
repnz
xchg
imul
mov
push
add
add
sbb
emms
mov
adc
inc
add
rolb
dec
mov
or
push
xchg
push
push
lods
fildl
sbb
mov
or
mov
push
jb
push
ret
fisttpll
xlat
or
ret
roll
or
sbb
jle
stc
or
xchg
fsubrl
lea
jg
icebp
or
add
xchg
sti
insb
mov
push
and
rcr
push
ja
jbe
in
test
test
mov
jp
cli
scas
daa
sarl
push
push
mov
js
ret
cmp
sbb
lret
xchg
xchg
inc
test
adc
sub
out
dec
loop
bound
adc
enter
roll
add
fnstcw
out
add
xor
les
mov
nop
lods
dec
std
mov
push
mov
xchg
movsl
sbb
jnp
mov
or
gs
mov
mul
jae
mov
sub
faddp
cs
xchg
mov
push
pop
mov
add
add
popa
xchg
sbb
inc
fnstcw
add
dec
push
jmp
pop
dec
xlat
add
scas
stc
int3
aaa
ret
imul
inc
add
add
add
cmp
push
xor
dec
ror
cmp
push
sbb
mov
int3
mov
andl
lods
sbb
xor
and
xchg
out
cmp
gs
ret
add
jg
xchg
les
in
imul
push
movsl
dec
push
cs
add
dec
aam
cs
push
test
sub
xchg
ljmp
push
add
mul
jle
xchg
clc
or
xchg
jne
ss
mov
add
inc
add
jbe
add
cmp
sbb
test
leave
mov
mov
repnz
das
int
add
inc
add
sbb
mov
xchg
and
jns
shrb
loop
out
mov
add
pop
cmp
outsl
movb
fildl
pop
lret
xor
imul
es
and
insb
xor
sti
lds
lret
cmp
stos
inc
add
rclb
rcrb
jbe
cmpsb
outsb
stos
repnz
pop
sti
pop
scas
push
xchg
fdivrl
out
fsubl
dec
sbb
adc
xchg
arpl
cmp
aas
pop
xchg
dec
pop
inc
dec
mov
adc
rorl
in
lret
mov
scas
mov
aam
iret
fimull
shrb
in
xchg
aaa
imulb
inc
pop
lcall
lahf
out
cmc
xlat
and
adc
in
jg
push
out
add
jnp
shlb
lea
cmp
add
add
repz
push
idivb
je
jg
cmpsb
dec
lret
pop
xchg
hlt
mov
je
and
push
mov
xor
xlat
push
fcoml
cmp
xchg
rolb
pop
imul
inc
fcmovbe
cmp
add
pusha
add
cmp
pop
or
daa
insb
lret
mov
fs
add
pop
dec
repz
mov
scas
out
add
clc
sar
ljmp
inc
add
mov
pop
xchg
mov
addr16
fsts
les
pop
mov
fnstsw
cmp
add
or
sbb
shlb
icebp
jp
daa
xchg
mov
lahf
mov
adc
xlat
pmulhw
ret
sahf
test
sub
pusha
add
or
stc
sbb
js
mov
out
pop
sbb
mov
cmp
loope
xor
lock
fisttpll
pcmpeqb
add
or
or
repz
int3
les
ja
add
jg
add
loop
pop
iret
push
push
push
aad
xchg
jecxz
xchg
or
jo
rolb
adc
pop
dec
aad
and
imul
jg
mov
outsb
test
adc
lods
ret
jno
jnp
scas
outsl
inc
add
adc
jo
cli
arpl
add
jmp
add
stc
aas
push
lahf
inc
rolb
sbb
in
sahf
outsb
mov
repnz
add
ret
jae
sbb
mov
jle
leave
aam
or
dec
cli
cmpsb
rcrb
jnp
xor
pop
xor
add
mov
push
rolb
push
mov
add
jp
cmp
cli
fstpt
lret
cli
lret
inc
or
fimull
cltd
dec
test
and
mov
or
mov
jp
lds
outsb
mov
into
sub
mov
adc
stos
daa
popa
jae
fcompl
mov
and
cs
push
adc
cltd
push
or
pushf
movsl
cltd
jl
adc
push
mov
sub
add
arpl
add
popa
cmp
sub
sti
and
push
xchg
xchg
les
rorb
xlat
rcll
mov
popa
fdivrs
addr16
fucomi
add
add
imul
or
cwtl
cmp
insb
mov
imulb
mov
inc
add
test
add
and
addb
or
lock
pop
add
mov
pop
jge
in
int
pop
fisttpl
dec
jno
je
mov
xorl
ret
idiv
pusha
add
push
cltd
inc
add
push
cmp
jnp
lret
mov
adc
sbb
aaa
mov
imul
pop
lahf
movsl
out
lods
call
sahf
je
pushf
push
mov
sbb
jo
cmp
add
push
push
add
sbb
push
adc
xchg
shl
movb
add
push
adc
lods
dec
imul
out
cmpl
xchg
je
add
add
inc
jmp
pop
aam
sbb
rorb
cmc
jo
fnstenv
jo
dec
mov
dec
insl
inc
add
mov
into
pop
push
ret
jmp
rorl
jo
imul
jge
bound
sbb
sub
sbb
jae
add
sbb
or
mov
or
or
fbstp
push
mov
aam
sub
popa
cmpsl
mov
adc
xlat
xlat
mov
mov
add
adc
fcoms
in
mov
sub
repnz
jg
pop
mov
push
inc
add
add
sbb
xchg
mov
iret
sbb
repnz
cli
gs
sahf
mov
fdivr
es
mov
jbe
jbe
lods
fcmovnb
add
pop
jb
ret
dec
outsl
in
stc
inc
add
or
add
ret
xor
scas
fldcw
fldl
add
inc
add
testb
imulb
dec
mov
cmp
aaa
adc
mov
loope
sahf
cwtl
lock
xchg
jge
add
dec
jle
rolb
cmp
fcomip
jne
and
mov
sbb
pop
mov
cmp
add
enter
sbb
in
jmp
inc
add
add
mov
sub
and
cld
imul
int3
sbb
or
loope
add
vmaxss
jge
lret
add
mov
hlt
icebp
xor
rolb
add
dec
out
sub
daa
push
call
add
pop
sbb
and
insl
push
in
lock
push
push
xor
int
pop
xor
push
add
mov
loope
fildl
mov
add
cld
arpl
and
sahf
mov
hlt
aas
int
inc
mov
nop
push
lret
add
or
cmpl
mov
syscall
je
add
ja
hlt
pop
mov
xor
mov
mov
mov
mov
rcrl
inc
add
xchg
cmp
jbe
sbb
sahf
movb
inc
add
and
inc
lds
xchg
jae
dec
dec
out
or
cmp
outsl
push
out
cmp
or
test
pop
push
add
fimull
outsl
cmp
push
popa
push
nop
pushf
inc
rcrl
mov
mov
nop
mov
pop
into
pop
outsb
mov
gs
xchg
jno
scas
fwait
sbb
testl
lock
mov
add
hlt
daa
sbb
mov
addb
mov
orl
push
in
aaa
aaa
int3
jle
mov
push
cmpsl
jnp
add
sti
enter
pop
xchg
dec
out
push
jb
mov
or
push
sbb
sbb
mov
lret
aas
aas
in
mov
mov
hlt
sub
and
ljmp
notb
in
stc
jo
dec
mov
js
jmp
and
xchg
add
mov
sub
scas
cli
lret
subl
pop
dec
push
cmp
pop
pop
push
add
insb
imul
add
dec
test
lcall
inc
jg
das
lock
jmp
je
xor
clc
or
dec
sbb
dec
mov
shrl
jns
insb
push
in
xchg
rolb
dec
fisttpll
or
add
xor
mov
int3
add
push
out
idivb
cld
call
lret
lea
add
adcl
add
rolb
cmc
add
inc
add
fwait
pop
adc
add
jecxz
daa
fdivs
push
mov
cmp
adc
sbb
int3
mov
outsb
daa
add
add
or
dec
add
lret
pusha
add
push
add
stc
ja
test
das
test
fistps
mov
lods
imul
jnp
push
mov
pop
push
mov
jecxz
jne
push
lahf
xchg
inc
add
int
lds
sarl
js
mov
mov
xlat
xor
sub
fstps
push
arpl
mov
jmp
add
pop
mov
pop
and
mov
jne
sub
xlat
jp
ljmp
inc
mov
xor
add
push
push
mov
push
outsl
jnp
rolb
add
sub
hlt
rorb
les
xchg
pop
int3
addr16
mov
jbe
cmp
aas
sub
pop
stos
jg
push
mov
lods
jle
mov
add
adc
xor
adc
fwait
jl
push
mov
movsl
inc
push
lret
pop
add
pop
loopne
inc
xor
shl
data16
inc
add
xor
mov
aad
inc
add
push
mov
mov
aaa
ja
in
scas
add
les
in
jne
mov
data16
push
clc
fiaddl
push
dec
add
cmp
and
cltd
jg
push
loop
fcmovne
js
aam
jne
push
xchg
imul
sub
sbb
neg
rcrb
and
adc
je
add
xor
nop
xchg
xor
rcr
aas
divl
sbb
mov
inc
add
lret
dec
and
jns
and
shrl
xchg
fisttpl
fwait
push
and
test
xchg
aam
add
mov
add
push
sub
mov
js
sahf
test
shll
je
cmp
int
rolb
test
mov
aad
call
cmc
mov
clc
xor
cmp
cmp
push
push
add
jb
outsb
add
or
dec
nop
push
pop
les
out
mov
fimull
jge
cltd
scas
xor
loope
sbb
mov
cmp
push
mov
sbb
jb
dec
nop
pop
mov
add
rcrb
push
mov
es
push
test
inc
inc
add
inc
add
mov
mov
inc
add
cmp
aas
and
xchg
mov
xor
int
or
jno
popl
mov
sahf
cmp
ret
push
js
sbb
xchg
stos
dec
stos
dec
xchg
cmp
pop
ljmp
inc
add
xchg
movb
in
jg
add
push
aas
mov
xchg
scas
int
add
ret
jecxz
testb
daa
stos
pop
push
shll
leave
sarl
iret
pop
jno
add
imul
cmp
pushf
push
jecxz
add
cltd
push
jo
outsl
sub
add
dec
fldl
sbb
jne
add
loopne
and
and
xchg
int3
dec
and
sub
mov
in
jl
icebp
ja
add
es
icebp
xor
mov
pop
cwtl
inc
add
add
inc
add
add
or
or
out
mov
and
pushf
pushf
mov
aad
mov
in
aam
loopne
jbe
inc
add
int
add
push
add
decb
pop
cmp
mov
roll
or
inc
add
imul
xchg
loope
arpl
push
xchg
out
fstpl
add
lret
push
sahf
ror
pop
jo
jae
scas
fmull
jmp
add
shrl
cwtl
out
addb
jbe
imul
enter
popf
inc
add
add
fsts
add
sbb
cltd
dec
jg
repnz
sbb
lahf
jbe
dec
in
test
mov
gs
in
mov
and
icebp
out
lret
hlt
out
das
popf
pop
mov
out
int
add
clc
mov
iret
mov
andl
cmp
lea
add
sbb
mov
sbb
pop
popa
or
lods
mov
sub
push
mov
jecxz
mov
xchg
ret
adc
mov
or
xor
sbb
and
mov
jmp
inc
out
cmpsl
xchg
iret
xchg
movb
sbb
add
jns
test
int
addb
mov
xchg
mov
jg
mov
mov
daa
mov
push
enter
cmp
pop
cmp
push
inc
add
xor
or
add
negb
mov
fstpt
cmp
sbb
push
cmp
mov
adc
stos
ljmp
add
lods
ret
add
aaa
lds
xchg
jns
jbe,pt
lret
mov
sbb
xchg
sub
outsl
mov
add
insl
add
pusha
add
cmp
jb
push
cmp
popa
inc
xchg
fistps
bound
add
or
js
sti
loope
inc
add
xor
sarb
add
adc
adc
cltd
adc
push
fdivs
add
sub
insb
leave
fs
es
pop
sub
icebp
nop
xor
ficoml
mov
cmp
inc
dec
or
mov
mov
ja
add
pop
mov
dec
mov
jmp
in
sub
sub
or
outsb
fdivl
inc
cwtl
dec
inc
add
xor
adc
shlb
sti
fldt
add
jnp
and
loopne
stc
xor
xchg
and
add
dec
jo
sti
adc
addb
mov
out
icebp
sbb
add
jbe
bound
outsl
dec
dec
pushf
xor
xchg
jge
xchg
dec
fidivs
pop
xor
ljmp
jo
gs
add
out
scas
out
or
add
in
in
das
ja
xchg
mov
in
icebp
loope
dec
in
dec
pop
stos
mov
or
add
sub
xor
nop
mov
je
cltd
outsb
add
mov
add
jecxz
add
mov
sbb
data16
add
mov
push
sub
aaa
aam
push
adc
mov
fisttps
jnp
mov
cwtl
pop
dec
jb
aad
mov
add
mov
xchg
xchg
xchg
bound
loope
mov
enter
jns
sbb
repz
inc
add
daa
cld
test
mov
inc
xor
or
xor
add
jb
jo
jmp
cwtl
or
rsm
jnp
sahf
idivb
out
add
add
incb
in
mov
cmp
add
lahf
lods
addb
cmp
repnz
scas
dec
nop
pop
test
mov
cmp
dec
or
test
sbb
sti
ret
push
popa
js
dec
iret
fisubl
xchg
sahf
push
add
inc
add
incl
add
and
mov
inc
add
inc
add
push
fwait
push
lret
shlb
mov
xor
mov
mov
push
in
insl
mov
or
sub
add
lret
cmp
adc
pop
sbb
add
or
xlat
pop
cmpsb
ljmp
fdivl
mov
pop
xchg
adc
adc
out
inc
add
pop
cmp
icebp
cmp
dec
sub
pushf
mov
add
push
arpl
pop
inc
add
sbb
int3
pop
and
mov
jl
lea
add
xchg
pop
movsl
cld
test
dec
loopne
ror
cltd
jmp
std
data16
jnp
fwait
add
int
icebp
bnd
dec
mov
inc
add
call
add
fcoms
loop
push
inc
hlt
jae
push
fsts
push
sti
mov
cli
or
fsubrs
add
rcrl
in
mov
out
or
mov
out
xor
ljmp
add
and
push
add
dec
pop
sbb
int
mov
pop
xchg
data16
inc
inc
add
ret
ret
mov
ja
cmp
cmc
jns
shrb
fbstp
dec
pop
push
inc
adc
cmc
call
arpl
mov
add
and
jg
add
mov
push
add
mov
push
jno
cmp
clc
xor
xchg
push
es
mov
sbb
push
sub
jnp
jmp
arpl
dec
or
in
fwait
pop
pop
xchg
xor
int
mov
xchg
xchg
mov
dec
and
gs
push
add
imul
cmp
mov
addb
add
scas
clc
mov
xchg
inc
add
pop
popf
pop
sub
add
mov
xor
sbb
enter
cmpsl
movb
ljmp
in
mov
add
in
and
or
or
xchg
icebp
push
loope
outsb
cmp
xor
scas
dec
cld
addr16
out
mov
mov
add
lret
inc
add
mov
pop
xchg
cmpsl
inc
add
jbe
ret
fwait
pop
sub
sub
or
sub
lods
sti
cmc
out
xchg
mov
jno
jne
push
mov
popa
dec
das
stos
adc
push
jnp
insl
out
loopne
pop
fidivl
insl
ret
insl
pop
adc
xchg
jmp
xchg
mov
add
ljmp
adc
add
or
pushf
das
mov
cmp
shl
mov
sbb
pop
call
fidivs
adc
ret
arpl
add
test
xor
add
mov
ds
lcall
in
mov
inc
jmp
add
movb
mov
addb
mov
movsb
mov
jmp
fnstcw
xor
adc
mov
addb
and
ja
xchg
pusha
add
lret
and
std
ss
xor
add
push
inc
add
mov
int3
xor
and
mov
and
fstl
xchg
adc
addb
les
adc
mov
popa
xchg
add
aas
adc
sbb
dec
sub
popf
adc
addr16
aad
inc
mov
add
inc
add
scas
rclb
mov
fimull
push
pop
in
adc
xor
xchg
addb
add
popf
pop
aam
shll
and
xor
add
inc
pop
movsb
pop
sub
movsb
fxch
cmp
ljmp
in
mov
and
mov
jmp
xchg
add
push
rolb
cmc
mov
dec
and
mov
enter
ds
inc
push
push
rorl
iret
xor
add
add
xchg
outsl
push
dec
cltd
mov
dec
stc
pop
addb
fcom
push
test
enter
jb
arpl
cs
divl
filds
mov
rolb
test
pop
sub
add
push
and
and
add
test
ret
xor
dec
cmp
xor
ffreep
vpsrld
push
repz
out
sbb
adc
icebp
mov
mov
xor
inc
sub
pop
or
insb
sbb
pop
mov
insl
test
pop
fs
xchg
into
pop
or
sbb
mov
test
rcll
out
jo
ds
mov
lret
or
outsl
lcall
fs
sbb
cmpsl
dec
sbb
sarb
popl
adc
mov
movsl
add
jae
shl
inc
adc
lock
jle
lcall
daa
mov
adc
add
outsl
stc
lods
jns
lret
movsb
mov
sub
mov
push
add
iret
add
out
bound
xor
sub
xor
cmp
enter
das
mov
xor
imul
inc
add
cs
add
imul
cli
adc
addr16
loopne
mov
lret
and
or
scas
cmp
push
jne
cltd
roll
movsb
testb
sbb
push
pusha
add
add
popf
dec
into
adc
xchg
push
mov
lcall
push
dec
pushf
mov
cld
mov
ret
xchg
cld
les
leave
movb
int3
addb
movb
add
jo
fnsave
push
sahf
or
mov
add
push
loop
int3
jge
mov
add
lock
push
out
stos
sti
std
imul
add
test
dec
cmpsb
or
or
add
pop
into
sbb
add
dec
loope
outsb
psllw
fidivrl
out
sub
or
mov
in
lea
xor
aaa
mov
icebp
test
rorl
out
sbb
lcall
mov
inc
in
or
push
daa
sbb
shlb
cmp
xchg
imul
mov
loop
pushf
cli
in
add
dec
jg
addr16
add
or
in
repnz
pop
in
add
cmp
dec
mov
scas
addb
mov
bound
gs
inc
add
push
adc
add
add
mov
lods
in
icebp
bswap
flds
loop
popf
sub
mov
sbb
dec
int3
insb
icebp
popa
ljmp
add
daa
cmp
mov
mov
in
push
xchg
out
or
sarl
scas
mov
jge
sbb
gs
or
mov
lahf
hlt
testb
add
add
lods
add
insl
and
iret
stos
mov
aad
sub
dec
movb
cld
jno
scas
aad
nop
or
addb
sbb
add
push
lods
shrb
xor
jp
daa
jmp
push
add
sbb
jmp
cmp
push
ss
xchg
inc
push
add
push
insl
pop
mov
rolb
pop
scas
ret
mov
cmp
xchg
repnz
mov
out
push
mov
into
jl
cltd
sbbl
fs
frndint
insb
dec
es
jmp
cwtl
aas
jle
fcoms
xchg
cmp
fs
iret
jo
or
pop
cmc
sbb
ret
rcrb
cld
mov
add
sub
sbb
pop
jle
mov
nop
inc
add
jnp
test
add
in
shl
jbe
int
mov
pop
add
push
add
xor
jl
loopne
pusha
add
je
add
mul
es
mov
dec
lods
out
pushf
add
add
sub
xchg
fwait
outsl
cmp
pop
mov
test
xchg
or
add
nop
mov
adc
imul
adc
add
pop
push
movb
stos
mov
es
stc
cmp
mov
jp
inc
mov
xchg
push
outsb
jle
add
and
aas
out
fwait
pop
mov
std
das
add
add
out
add
cmpsb
mov
dec
xor
je
and
fwait
mov
mov
add
jmp
mov
addb
loopne
and
mov
sub
and
add
daa
add
add
lock
daa
loopnew
lock
sub
pop
push
cmpl
mov
jb
dec
lock
scas
xlat
and
pandn
aaa
cld
add
pushf
ja
fwait
mov
jecxz
add
fidivrs
lahf
arpl
rorl
pusha
add
cmp
int3
and
pop
sbb
or
adc
aad
and
add
xor
xor
lock
mov
add
lds
add
adc
lcall
xor
pop
adc
popf
imul
mov
adc
lods
cmovs
outsb
cltd
cmp
sub
mov
push
movb
add
sbb
jecxz
in
adc
xor
scas
fldenv
mov
sbb
xchg
addb
adc
dec
jmp
lods
out
jb
add
loop
adc
repnz
repnz
dec
mov
mov
outsb
jg
dec
sbb
mov
push
imull
push
addb
xor
jp
add
mov
lds
or
adc
add
lods
xchg
ret
inc
add
add
filds
outsl
popf
mov
rcll
xchg
push
or
mov
mov
mov
gs
cs
xlat
stos
push
mov
mov
sahf
mov
stc
nop
mov
fstpt
jg
testl
add
cli
fnstenv
stc
xchg
stos
or
jb,pt
add
pop
orl
jno
inc
test
out
sub
aaa
testl
push
in
add
shll
and
das
pop
dec
push
cld
xor
xchg
jne
inc
or
add
cmp
int3
xor
icebp
lcall
jnp
add
pop
adc
popf
sub
sub
add
cmp
ljmp
jnp
pushl
cmc
push
aam
add
xor
mov
stc
xchg
push
inc
push
xchg
xchg
jecxz
sbb
repz
scas
stos
mov
std
ret
add
mov
pop
cs
or
cli
xor
popa
outsl
jb
bound
std
sbb
push
pop
das
mov
add
leave
int
xor
add
pop
pop
movsb
nop
sub
mov
sarl
cmpsb
xor
stc
popf
pop
xor
push
adc
lret
divb
inc
add
adc
rdtsc
push
cli
mul
xchg
in
push
enter
scas
lcall
out
rolb
loop
idivb
sbb
add
notl
xchg
push
js
data16
sub
dec
xchg
pop
sbb
and
fcompl
cmp
stos
dec
push
adc
cltd
add
enter
pop
push
shll
les
push
or
sub
daa
inc
xchg
std
sti
movb
xor
dec
mov
dec
fidivrl
adc
aaa
add
mov
dec
imul
adc
movsb
es
cmp
nop
cs
pop
repnz
pop
jb
xchg
cld
outsb
pusha
add
aas
jnp
outsb
ficomps
xchg
cs
and
adc
cwtl
push
adc
in
sub
add
dec
pop
leave
movsl
lock
dec
add
jno
xor
jg
add
add
xor
xor
mov
or
sti
mov
stos
testb
add
xor
fistpll
std
inc
adc
lret
movb
out
xchg
scas
or
jge
cmpsb
pop
or
imul
repnz
in
sbb
add
stc
gs
add
es
aaa
inc
add
cmp
out
mov
sti
mov
lahf
shrl
out
call
daa
notb
or
sahf
sub
add
inc
add
test
nop
enter
enter
imul
jl
les
movb
lret
mov
scas
mov
sub
or
pushf
add
cmove
into
or
idiv
enter
or
xchg
xchg
bound
fwait
into
rolb
push
dec
sbb
icebp
ljmp
ror
and
xor
stc
xor
push
fcomps
outsb
jns
lea
inc
jp
push
pop
pop
movsl
imul
push
mov
es
aas
push
add
enter
push
add
sbb
pop
dec
addb
test
call
mov
and
add
insb
outsl
and
mov
adc
std
test
add
imul
cs
dec
push
ljmp
lret
lea
fisubrs
in
pop
push
push
push
mov
enter
fsts
sbb
sbb
bound
xchg
jns
pop
push
addb
mov
sti
inc
insb
pushl
ret
addr16
int
lret
lea
adc
add
outsl
addb
add
pop
addb
fstpl
adc
push
je
add
std
nop
xchg
lods
adc
add
xor
xchg
lret
dec
lods
cmp
dec
loope
inc
add
push
int3
add
jg
jmp
js
je
mov
jns
cmp
add
push
sti
mov
push
in
in
xchg
mov
push
ja
add
adc
in
and
pop
addb
add
mov
and
cwtl
inc
cmc
push
and
push
int
shr
js
lret
xchg
jp
xchg
mov
add
sbb
das
repnz
xchg
mov
mov
stc
nop
jb
push
xchg
add
dec
mov
stc
nop
jb
add
add
add
andb
xlat
add
xchg
into
mov
nop
cld
nop
jmp
imul
mov
push
mov
xchg
ret
push
imull
sbb
nop
jb
lea
xchg
ds
stc
nop
jb
xchg
add
pop
add
stc
nop
jb
xchg
or
sub
add
mov
xchg
ret
xlat
sbb
mov
sbb
add
nop
jb
add
stc
nop
jb
inc
insl
add
push
mov
add
add
iret
xchg
add
add
pop
jge
xor
lret
stc
nop
jb
xlat
add
add
and
pushf
add
push
mov
xchg
ret
xchg
sbb
cld
nop
jmp
add
xchg
das
pop
push
mov
xchg
ret
dec
jne
fiadds
dec
and
nop
cld
nop
jmp
outsl
add
xor
add
nop
cld
nop
jmp
add
add
jmp
add
xor
add
push
stc
nop
jb
add
stos
jne
add
popf
jmp
stc
nop
jb
add
pop
push
nop
cld
nop
jmp
xchg
idivl
xchg
cmpl
mov
add
mov
add
nop
cld
nop
jmp
inc
stos
lock
stc
nop
jb
add
add
xchg
xchg
insb
mov
stc
nop
jb
add
xchg
pop
add
dec
jne
nop
cld
nop
jmp
and
jo
je
je
stc
nop
jb
add
xor
nop
push
mov
xchg
ret
fisubrs
add
jno
inc
or
test
add
stc
nop
jb
or
or
les
cld
nop
jmp
popl
xchg
insl
or
cld
nop
jmp
test
inc
push
push
lods
sub
stc
nop
jb
testl
rolb
xchg
ret
add
add
movzwl
stc
nop
jb
imull
add
cmpl
nop
jmp
out
push
mov
jb
add
add
adc
sub
test
or
add
nop
jb
adc
push
add
add
inc
adc
nop
jb
add
test
data16
cmp
nop
jb
add
insb
ret
nop
cld
nop
jmp
add
testl
jmp
stc
nop
jb
dec
pop
add
cmp
jb
xchg
add
add
pop
jns
dec
adc
nop
jb
add
vpshld
shr
stc
nop
jb
add
out
imul
add
add
lea
xchg
in
mov
nop
cld
nop
jmp
ss
stos
iret
sub
stc
nop
jb
add
inc
loop
adc
add
mov
xchg
ret
xchg
testl
es
add
stc
nop
jb
xchg
pop
stc
nop
jb
push
stc
add
or
add
jmp
jp
nop
cld
nop
jmp
sbb
add
add
nop
jb
add
xor
call
stc
nop
jb
add
cmpl
mov
xchg
ret
mov
xchg
add
xor
jecxz
sbb
popa
add
mov
xchg
ret
add
and
add
pop
push
stc
nop
jb
add
mov
add
pop
stc
nop
jb
add
lea
add
enter
push
nop
cld
nop
jmp
add
loopne
add
stc
nop
jb
add
fisubl
xor
add
stc
nop
jb
add
jb
add
add
imulb
les
add
add
push
add
add
cld
nop
jmp
add
testl
inc
add
or
add
stc
nop
jb
add
add
pop
pushl
stc
nop
jb
and
fimuls
outsl
leave
mov
stc
nop
jb
add
add
xchg
push
mov
xchg
ret
add
insl
add
add
push
nop
cld
nop
jmp
add
xchg
and
mov
lret
add
stc
nop
jb
or
dec
xor
stc
nop
jb
add
push
jne
outsl
cli
and
stc
nop
jb
add
inc
outsl
add
stc
nop
jb
xchg
out
add
rolb
add
nop
cld
nop
jmp
in
add
aas
adc
cld
incl
add
and
decl
push
mov
xchg
ret
add
imul
adc
jae
add
xchg
test
mov
cmpsb
rolb
xchg
ret
push
stos
out
fists
mov
xchg
ret
or
add
xchg
sbb
nop
jb
add
or
add
stc
nop
jb
add
les
lock
in
shll
add
add
push
sar
add
add
stc
nop
jb
add
add
pop
add
stc
nop
jb
add
inc
add
push
stc
nop
jb
add
nop
cld
nop
jmp
or
in
insl
and
add
nop
jb
adc
mull
push
mov
xchg
ret
sub
add
lock
or
stc
nop
jb
enter
nop
jb
add
adc
jb
push
push
mov
xchg
ret
add
or
add
add
nop
jb
pop
add
sub
stc
nop
jb
add
sar
nop
jb
add
divl
stc
nop
jb
imul
icebp
arpl
arpl
cmp
add
stc
nop
jb
add
cmp
nop
jb
xchg
imul
icebp
stc
nop
jb
into
or
add
mov
nop
cld
nop
jmp
stc
imull
mov
lods
inc
add
add
add
add
aad
pop
pop
push
mov
and
add
pop
mov
jge
les
add
fdiv
inc
add
add
xor
jb
inc
add
insl
test
nop
jb
add
fdivp
and
add
and
stc
nop
jb
push
add
add
cmp
mov
adc
nop
jb
out
in
sbb
jne
push
mov
xchg
ret
add
add
stc
nop
jb
stc
xchg
jne
add
call
stc
nop
jb
add
sub
orb
add
outsl
fisubs
xchg
or
push
stc
nop
jb
xchg
incb
or
inc
or
stc
nop
jb
add
xlat
or
cmp
nop
jmp
mov
or
xchg
lock
mov
adc
nop
jb
out
mov
or
popa
loop
add
mov
pop
add
push
mov
xchg
ret
mov
add
add
stc
nop
jb
sub
add
mov
fistl
mov
xchg
ret
adc
ror
push
mov
xchg
ret
inc
add
sbb
test
adc
add
nop
jb
and
popf
mov
nop
cld
nop
jmp
add
or
add
add
stc
nop
jb
out
add
jne
stc
nop
jb
mov
imul
stc
nop
jb
xchg
stos
add
stc
nop
jb
mov
add
jp
jbe
stc
nop
jb
xchg
xchg
mov
popa
add
nop
jb
or
add
and
mov
stc
nop
jb
data16
or
stc
nop
jb
stc
xchg
add
or
inc
pop
add
nop
cld
nop
jmp
add
add
add
push
mov
xchg
ret
imul
push
mov
xchg
ret
xchg
ss
stc
nop
jb
add
and
popl
add
cmpl
call
nop
jb
incb
add
add
sti
jl
stc
nop
jb
or
mov
stc
nop
jb
stos
add
test
sub
mov
cmp
ret
test
add
nop
jb
add
testl
sbb
icebp
stc
nop
jb
add
stc
add
push
repz
pusha
stc
nop
jb
mull
sbb
mov
add
push
mov
xchg
ret
mov
add
or
cld
nop
jmp
pop
popl
cltd
fidivrs
mov
xchg
ret
add
mov
nop
cld
nop
jmp
add
je
add
nop
jb
add
jbe
mov
nop
cld
nop
jmp
je
ficoms
jb
outsl
add
je
scas
subl
push
mov
xchg
ret
mov
lods
pop
push
mov
xchg
ret
xchg
ja
add
addb
dec
shr
stc
nop
jb
mov
add
jge
pop
sbb
jb
add
push
inc
and
push
mov
xchg
ret
or
xlat
fisttpll
jmp
in
pop
imul
pop
call
stc
nop
jb
sbb
in
mov
push
mov
xchg
ret
add
pop
loop
fisttpl
test
or
add
nop
jb
add
dec
mov
stc
nop
jb
mov
xchg
lea
jne
jno
push
push
mov
xchg
ret
add
add
add
je
stc
nop
jb
xor
mov
movsb
stc
nop
jb
test
xchg
cmp
stc
nop
jb
add
sub
mov
xchg
ret
add
add
dec
lea
nop
cld
nop
jmp
stc
add
add
add
stc
nop
jb
stc
add
add
jne
stc
nop
jb
ja
mov
mov
xchg
ret
add
add
stc
nop
jb
sbb
stc
add
mov
xchg
ret
add
jne
mov
stc
nop
jb
out
add
add
add
cld
nop
jmp
xchg
add
add
inc
add
push
stc
nop
jb
lea
pop
les
push
push
stc
nop
jb
add
add
add
stc
dec
cmp
push
mov
xchg
ret
add
cmp
sar
jb
xchg
add
dec
nop
cld
nop
jmp
out
xchg
add
dec
add
cld
nop
jmp
add
add
mov
stc
stc
nop
jb
add
add
add
adc
inc
add
add
sbb
roll
xchg
ret
xchg
add
sbb
test
nop
cld
nop
jmp
add
mov
imul
pop
stc
nop
jb
dec
outsl
jne
mov
jne
add
stc
nop
jb
add
dec
mov
stc
nop
jb
sub
push
add
je
jmp
add
add
add
mov
add
mov
jb
add
out
add
lods
stc
nop
jb
or
add
add
data16
xchg
push
add
nop
jb
xlat
xchg
or
mov
cld
nop
jmp
add
insl
add
pop
stc
nop
jb
pop
and
add
fiadds
xor
mov
stc
nop
jb
dec
or
mov
inc
cld
test
nop
cld
nop
jmp
add
add
pushl
stc
nop
jb
add
add
ss
addb
imul
stc
nop
jb
add
inc
lea
add
nop
jb
add
xchg
add
bound
popf
mov
push
mov
xchg
ret
add
add
push
mov
xchg
ret
adc
or
cmp
sar
jb
add
add
add
add
stc
nop
jb
add
add
add
dec
adc
add
fists
mov
xchg
ret
add
push
add
xor
lcall
cmp
add
add
imul
or
fadds
xchg
ret
add
add
push
adc
stc
nop
jb
add
add
add
push
adc
nop
cld
nop
jmp
add
mov
or
sbbb
or
push
add
push
push
mov
xchg
ret
add
testl
push
mov
xchg
ret
add
dec
call
stc
nop
jb
ja
add
ja
stc
nop
jb
inc
test
mov
xchg
ret
out
add
xchg
cmp
dec
cmp
nop
jb
or
xlat
add
add
dec
push
stc
nop
jb
add
pop
dec
stc
imul
xchg
ret
fiadds
fidivs
mov
nop
cld
nop
jmp
add
je
nop
cld
nop
jmp
ss
or
inc
in
cld
nop
jmp
add
jne
add
sar
jb
push
push
and
rorb
jb
add
out
mov
nop
cld
nop
jmp
and
xlat
xchg
mov
jb
stc
add
arpl
jae
nop
jb
outsl
out
daa
jp
lret
nop
jmp
inc
mov
mov
add
adc
pop
shrl
nop
cld
nop
jmp
add
insl
xlat
stc
add
lock
push
stc
nop
jb
mov
dec
outsl
out
ss
fildl
xchg
ret
add
add
clc
add
stc
nop
jb
add
add
add
nop
jb
add
stc
nop
jb
ja
outsl
test
mov
xchg
ret
dec
xchg
push
add
shrl
nop
jmp
add
add
stos
cs
nop
cld
nop
jmp
ja
mov
mov
lret
add
nop
jb
or
add
mull
pusha
add
jmp
stc
nop
jb
xchg
mull
add
stc
nop
jb
add
or
xor
add
nop
cld
nop
jmp
add
add
stc
nop
jb
xchg
dec
add
add
add
stc
nop
jb
insl
dec
jae
pop
mov
stc
nop
jb
add
sub
insl
lcall
sbb
add
add
sti
mov
stc
nop
jb
stc
mov
jne
nop
cld
nop
jmp
inc
stc
loop
scas
lea
stc
nop
jb
add
out
les
or
nop
jb
push
add
ss
jmp
stc
nop
jb
add
xchg
and
popa
stc
nop
jb
xchg
mov
mov
add
nop
jb
add
add
lea
sar
jb
add
ss
add
stc
nop
jb
dec
add
mov
jb
xchg
add
jne
pop
nop
cld
nop
jmp
testl
add
mov
stc
nop
jb
add
dec
or
mov
xchg
ret
add
add
pop
push
push
mov
xchg
ret
add
and
fidivs
sbb
test
nop
jb
pop
add
mov
add
push
push
mov
xchg
ret
add
add
jb
sbb
add
add
cmp
xorb
add
add
sbb
aas
stc
nop
jb
insl
push
sub
mov
xchg
ret
dec
add
dec
cmp
cld
nop
jmp
sbb
add
insl
push
push
movl
jb
adc
add
add
push
mov
xchg
ret
add
sbb
jnp
push
mov
xchg
ret
xlat
add
sbb
cmp
nop
jb
xchg
add
aas
cld
nop
cld
nop
jmp
add
mov
jb
add
add
mov
imul
mov
push
add
add
insb
and
push
mov
xchg
ret
add
mov
add
stc
nop
jb
add
and
pop
pop
push
stc
nop
jb
or
xor
dec
mov
stc
nop
jb
add
adc
insl
ret
stc
nop
jb
and
add
mov
push
push
icebp
dec
and
stc
nop
jb
sbb
data16
fisubrl
stc
nop
jb
or
add
add
push
mov
xchg
ret
cltd
add
push
sub
test
jb
xchg
lds
stc
nop
jb
adc
insl
pop
and
stc
lret
nop
jb
xchg
pop
stc
mov
sbb
arpl
mov
stc
nop
jb
ja
xor
arpl
sbb
push
adc
add
nop
jb
add
add
mov
stc
nop
jb
xchg
or
outsl
mov
nop
jb
stos
xlat
dec
mov
stc
nop
jb
add
add
jb
dec
dec
xchg
add
add
stc
nop
jb
add
in
mov
xor
add
stc
nop
jb
add
xor
stc
nop
jb
add
subl
jb
dec
add
in
push
push
mov
xchg
ret
push
adc
add
add
add
adc
add
xchg
sub
jne
push
mov
xchg
ret
add
in
je
stc
nop
jb
sub
imul
cmp
cld
nop
jmp
mull
add
lahf
pop
stc
nop
jb
add
negl
mov
jne
mov
stc
nop
jb
add
pushw
aaa
das
add
stc
nop
jb
add
sbb
test
movb
cld
nop
jmp
add
add
sub
pusha
stc
nop
jb
testl
add
sbb
add
ss
push
nop
cld
nop
jmp
add
xchg
ret
mov
stc
nop
jb
push
add
jne
in
xchg
stc
nop
jb
mov
imul
nop
jb
popl
sbb
fwait
add
stc
nop
jb
inc
add
test
stc
nop
jb
add
nop
jb
pop
xchg
add
inc
add
stc
nop
jb
add
add
mov
stc
nop
jb
add
add
stc
nop
jb
add
cmp
jb
mov
add
add
and
mov
rclb
repz
incl
add
mov
nop
jb
mov
sbb
add
in
xor
push
mov
xchg
ret
add
add
stos
test
push
mov
xchg
ret
add
sbb
mov
sub
nop
jb
add
je
mov
ret
push
mov
xchg
ret
add
xchg
sbb
and
js
mov
and
add
add
lcall
test
or
add
stc
pushl
mov
inc
cmp
repz
mov
xchg
ret
add
adc
dec
push
stc
nop
jb
add
inc
and
stc
nop
jb
add
and
mov
xorb
xchg
add
add
add
clc
jmp
xchg
rcr
push
stc
nop
jb
add
add
stc
nop
jb
pop
add
mul
movsl
mov
xor
nop
cld
nop
jmp
push
test
push
mov
push
mov
xchg
ret
sub
mov
inc
cmp
sbb
inc
add
inc
add
jns
stc
nop
jb
sbb
in
add
add
pop
sub
push
mov
xchg
ret
and
dec
push
mov
maxps
mov
add
add
stc
nop
jb
stc
push
add
add
and
push
stc
nop
jb
add
add
add
add
jle
xor
nop
cld
nop
jmp
add
inc
xchg
pop
pop
mov
stc
nop
jb
sbb
xchg
push
lods
add
nop
cld
nop
jmp
add
add
mov
clc
push
mov
xchg
ret
je
dec
stos
sub
enter
adcb
xchg
ja
xchg
mov
stc
nop
jb
add
push
notl
xor
add
stc
nop
jb
add
mov
stc
nop
jb
add
xchg
rcll
jb
add
sub
add
jge
lret
stc
nop
jb
add
xchg
add
sbb
stos
nop
cld
nop
jmp
mov
add
xchg
out
pushl
nop
cld
nop
jmp
lea
add
xchg
xchg
or
movsb
nop
cld
nop
jmp
popl
add
add
sub
andb
mov
rolb
nop
jb
sub
outsl
into
xchg
ret
mov
jmp
add
add
add
pop
push
mov
xchg
ret
add
add
mov
imul
stc
nop
jb
out
insl
add
scas
jne
stc
nop
jb
add
aad
add
nop
cld
nop
jmp
add
xlat
stc
out
je
xor
stc
nop
jb
incb
stc
xchg
xor
fcoml
nop
jb
add
xchg
xchg
xchg
adc
push
mov
sti
push
push
mov
xchg
ret
add
add
xchg
mov
mov
xchg
ret
add
add
add
stc
nop
jb
or
add
lret
cld
nop
jmp
xchg
out
pop
add
dec
xchg
call
nop
cld
nop
jmp
add
shll
flds
jge
stc
nop
jb
add
or
stc
nop
jb
add
add
add
mov
stc
nop
jb
push
pop
add
nop
jb
add
jle
andl
sbbb
incl
ss
push
mov
test
dec
dec
add
mov
add
mov
xchg
ret
and
xlat
xor
push
add
stc
nop
jb
je
ss
add
mov
aaa
addb
push
cld
and
stc
nop
jb
negl
add
outsl
shr
stc
nop
jb
mov
add
in
jne
stc
nop
jb
add
cwtl
add
push
mov
xchg
ret
xchg
add
xchg
or
stc
nop
jb
mov
push
mov
xchg
ret
add
ss
lea
addb
into
pop
push
mov
xchg
ret
add
add
rol
adc
addb
stc
nop
jb
add
sbb
xchg
stc
nop
jb
or
add
add
nop
cld
nop
jmp
test
add
idiv
stc
nop
jb
adc
add
movsb
leave
push
mov
lahf
in
incl
jecxz
add
add
pop
push
pusha
add
nop
cld
nop
jmp
xchg
add
add
push
mov
xchg
ret
add
mov
int
add
incl
nop
cld
nop
jmp
ja
std
add
push
mov
xchg
ret
add
fs
and
inc
add
add
ja
mov
push
mov
xchg
ret
ja
sbb
and
cmp
ret
or
add
jne
stc
nop
jb
sub
fldl
cmpsl
faddl
xchg
ret
add
repnz
nop
jmp
or
stc
lods
push
mov
inc
cld
daa
pop
sbb
push
movsb
add
stc
nop
jb
add
xchg
xchg
mov
cmp
cld
nop
jmp
stc
add
or
js
pop
and
nop
jb
add
mov
or
add
add
nop
jb
add
or
stc
nop
jb
add
mov
add
loopne
push
stc
nop
jb
stc
sub
add
add
movzwl
nop
cld
nop
jmp
and
add
cmp
mov
xchg
ret
stc
test
outsl
shl
push
mov
xchg
ret
add
xchg
mov
nop
jmp
xchg
mov
mov
mov
push
mov
xchg
ret
xchg
mov
add
add
nop
jb
in
xchg
sub
jb
add
jmp
jne
push
mov
xchg
ret
add
into
movb
lds
addb
add
add
add
inc
add
mov
mov
jl
adc
fadds
xchg
ret
xchg
push
nop
cld
nop
jmp
divl
cltd
pusha
add
add
nop
jb
add
and
add
sar
jb
out
add
pop
add
add
nop
jb
mov
jne
add
leave
nop
cld
nop
jmp
add
mov
xchg
xchg
push
add
sbb
nop
jb
sbb
add
xchg
cs
nop
cld
nop
jmp
sbb
nop
jb
pop
add
add
add
adc
nop
cld
nop
jmp
add
xchg
add
xlat
fildll
add
dec
insl
fisubrs
pop
pop
nop
cld
nop
jmp
dec
add
add
mov
orb
lcall
xchg
add
add
jb
je
ja
xchg
xchg
lret
or
add
nop
jb
outsl
add
pop
push
stc
nop
jb
add
in
add
scas
mov
stc
nop
jb
fimuls
stc
pop
add
push
mov
xchg
ret
push
add
cmp
icebp
inc
add
add
add
nop
jb
test
push
push
into
push
stc
nop
jb
or
mov
mov
nop
cld
nop
jmp
test
add
in
inc
add
fidivs
push
push
mov
xchg
ret
add
add
push
js
nop
jb
add
xlat
mov
rclb
hlt
lcall
sub
stc
xchg
imul
inc
ljmp
test
push
mov
xchg
ret
sub
add
mov
mov
xchg
ret
push
add
mov
sti
nop
cld
nop
jmp
add
lret
push
stc
nop
jb
add
add
stos
add
mov
jne
inc
add
xchg
sbb
jb
add
mov
add
add
ret
add
imul
fimuls
add
mov
xchg
ret
pop
add
lea
stc
nop
jb
out
mov
add
fists
out
incl
add
xchg
add
xchg
push
push
mov
xchg
ret
add
add
nop
jb
add
insl
add
adc
nop
jb
out
add
sbb
nop
jb
xchg
xchg
fimuls
or
or
stc
nop
jb
add
mov
nop
cld
nop
jmp
add
add
add
ja
lds
sub
nop
cld
nop
jmp
add
add
adc
and
cld
nop
jmp
xlat
add
outsl
add
nop
jb
outsl
add
sub
jmp
gs
pop
add
add
stc
nop
jb
add
inc
mov
stc
nop
jb
add
adc
pop
nop
cld
nop
jmp
and
stos
sbb
add
push
push
stc
nop
jb
je
inc
add
adc
popa
stc
nop
jb
add
and
xchg
fiadds
ljmp
xor
incl
add
add
jg
int
pop
jae
nop
jb
outsl
add
nop
cld
nop
jmp
add
jae
push
stc
nop
jb
data16
mov
subl
stc
nop
jb
xchg
add
fsubr
xlat
idiv
stc
nop
jb
xlat
ja
mov
cld
nop
jmp
push
test
lods
inc
stc
nop
jb
push
add
and
add
sub
test
in
stc
nop
jb
into
mov
test
jb
add
add
ja
xchg
cli
stc
nop
jb
sub
gs
mov
jg
push
mov
xchg
ret
lea
add
add
clc
stc
nop
jb
add
ss
push
add
lea
stc
nop
jb
outsl
add
push
mov
xchg
ret
popl
add
bound
adc
nop
jb
mov
and
insl
in
js
stc
nop
jb
into
stc
ss
popa
add
nop
jb
add
mov
stc
nop
jb
add
add
jge
push
mov
xchg
ret
add
or
lods
push
mov
xchg
ret
xchg
or
add
add
add
stc
nop
jb
add
imul
mov
stc
nop
jb
add
and
into
mov
stc
nop
jb
fiadds
add
not
stos
mov
nop
cld
nop
jmp
xchg
add
in
je
cmpl
nop
cld
nop
jmp
adc
add
ret
sti
mov
stc
nop
jb
add
pop
or
stos
stc
nop
jb
fisubrs
add
jnp
add
stc
nop
jb
jne
add
insb
inc
insb
insb
nop
cld
nop
jmp
add
jne
stc
nop
jb
add
shll
add
nop
jb
add
add
xchg
mov
nop
jb
add
pop
ljmp
jmp
add
stc
and
adc
pop
push
mov
xchg
ret
add
add
xlat
shll
add
enter
orb
add
adc
dec
mov
push
mov
xchg
ret
add
imul
jb
add
mov
into
add
mov
stc
nop
jb
lea
data16
push
xorl
fiaddl
add
add
add
inc
stc
add
les
add
jns
mov
stc
nop
jb
pop
inc
ficompl
cld
nop
jmp
sbb
pop
add
out
leave
mov
stc
nop
jb
add
nop
jb
add
imul
mov
repz
add
add
xchg
jne,pt
stc
nop
jb
add
cmc
out
lea
push
mov
xchg
ret
stc
add
nop
jmp
add
add
mov
inc
add
mov
nop
cld
nop
jmp
out
pop
xor
stc
nop
jb
add
xchg
sbb
push
mov
xchg
ret
add
mov
xchg
ret
sbb
add
mov
and
nop
cld
nop
jmp
add
add
and
push
mov
xchg
ret
add
push
mov
xchg
ret
sbb
idivl
dec
nop
cld
nop
jmp
sbb
in
add
xor
cld
nop
jmp
add
mov
stos
push
stc
nop
jb
xchg
mov
mov
mov
add
add
nop
jb
add
movsl
add
scas
mov
stc
nop
jb
mov
mov
stc
nop
jb
imul
add
stc
nop
jb
xlat
add
outsl
add
stc
nop
jb
add
add
jb
and
nop
cld
nop
jmp
ss
mov
stc
nop
jb
add
outsl
xchg
aad
mov
add
nop
cld
nop
jmp
out
stc
add
dec
outsl
popa
fs
nop
jb
add
add
movzwl
stc
nop
jb
testl
add
push
mov
xchg
ret
xlat
add
mov
stc
nop
jb
mov
add
nop
jb
sbb
add
mov
test
jle
add
out
incl
or
add
add
jbe
inc
add
and
push
stc
nop
jb
testl
gs
adcb
incl
add
add
ret
add
add
mov
xchg
ret
add
add
add
nop
jb
xchg
add
add
add
jne
stc
nop
jb
add
add
jecxz
sbb
mov
xchg
ret
add
add
stc
nop
jb
and
inc
add
and
nop
jb
add
or
decl
fldl
xchg
ret
add
add
add
out
incl
add
push
stc
nop
jb
ja
add
add
loopne
rep
stc
nop
jb
fiadds
repnz
mov
stc
nop
jb
add
sub
sub
in
dec
pop
add
add
add
daa
add
sub
add
stc
nop
jb
add
stc
nop
jb
pop
add
les
cmp
nop
cld
nop
jmp
add
add
repnz
nop
jb
add
stc
add
mov
add
arpl
incl
xchg
imul
add
nop
cld
nop
jmp
add
add
ja
xchg
movsb
icebp
xchg
rclb
jb
add
outsl
add
stc
nop
jb
xchg
add
xchg
lods
movswl
nop
cld
nop
jmp
je
xchg
add
and
cld
nop
jmp
add
add
in
mov
stc
nop
jb
in
add
add
inc
push
mov
xchg
ret
pop
add
mov
stc
nop
jb
add
xchg
and
stos
push
stc
nop
jb
add
add
and
data16
xor
stc
nop
jb
or
sbb
add
nop
cld
nop
jmp
add
add
add
scas
push
push
mov
xchg
ret
sub
inc
nop
cld
nop
jmp
sbb
add
jb
in
pop
mov
xor
add
stc
nop
jb
outsl
xor
rep
stc
nop
jb
fmulp
into
add
add
je
xor
sbb
mov
xchg
ret
add
xchg
mov
stc
nop
jb
mov
stc
add
stos
loop
pusha
stc
nop
jb
add
add
iret
call
stc
nop
jb
add
popa
nop
cld
nop
jmp
mov
incb
leave
test
push
mov
xchg
ret
lea
testl
nop
cld
nop
jmp
add
movzwl
stc
nop
jb
and
add
pop
cmp
nop
cld
nop
jmp
add
les
push
mov
xchg
ret
add
add
nop
cld
nop
jmp
out
xchg
add
stc
nop
jb
push
add
mov
stc
nop
jb
and
add
add
add
std
pushl
pop
stc
nop
jb
ss
out
out
stc
js
pop
call
cli
pushl
je
stc
nop
jb
add
xchg
iret
lea
push
mov
xchg
ret
add
ss
nop
jmp
add
add
xlat
add
enter
jb
add
xor
xchg
dec
rep
nop
cld
nop
jmp
add
mov
je
lret
mov
stc
nop
jb
add
inc
stc
nop
jb
or
sbb
xor
je
stc
nop
jb
add
xchg
push
adc
stc
nop
jb
sub
or
dec
pop
or
cmp
decl
rcl
adc
mov
xchg
ret
stos
xchg
mull
add
rolb
mov
stc
nop
jb
pop
add
add
nop
jb
into
add
pop
add
stc
nop
jb
add
cltd
ds
mov
stos
incl
add
mov
add
mov
jo
push
in
xor
add
popa
lcall
and
mov
pop
pop
inc
add
aad
push
add
add
adc
cmp
scas
cmp
xor
push
in
or
leave
push
mov
mov
and
cmp
add
loop
adc
jle
js
jnp
mov
add
mov
jae
fs
leave
cli
mov
mov
cmp
mov
add
arpl
repz
sbb
mov
pop
ljmp
dec
imul
mov
cmp
addb
xchg
mov
fcoml
mov
inc
add
fs
jb
in
push
negb
push
cmp
rolb
ljmp
jmp
stc
mov
rolb
in
out
rolb
pcmpeqb
addr16
cmpsb
loop
push
mov
inc
mov
lea
push
fcomp
fcomps
pop
popf
roll
cmp
add
adc
cmp
out
cmp
dec
lds
out
into
mov
fdivl
loope
xlat
pushf
cmpl
mul
das
push
add
add
pop
ret
inc
lock
push
andl
call
addb
cli
xlat
cmpsl
pop
fwait
sbb
cwtl
inc
add
mov
add
je
shrb
add
or
filds
arpl
cmp
mov
pop
out
sub
inc
add
jno
outsb
jne
dec
icebp
push
mov
inc
pop
sub
dec
fwait
cmp
or
cli
dec
test
xchg
dec
das
les
pop
daa
imul
insb
fidivrs
mov
lret
push
rcrl
aam
mov
sub
add
xchg
mov
test
jl
mov
sub
lret
shlb
or
mov
pop
push
lods
cmp
inc
enter
add
insb
int3
pop
mov
jne
jne
jo
scas
sub
dec
or
dec
je
xchg
jle
add
mov
fs
in
pushf
jae
test
jmp
imul
nop
pop
adc
pop
addb
cwtl
lds
lret
sbb
out
dec
mov
mov
mov
jnp
sbb
lods
inc
add
into
pusha
add
inc
stc
nop
mov
xchg
pop
rolb
cmp
sub
cmp
xor
adc
xchg
nop
adc
insl
inc
cmc
repnz
scas
adc
out
iret
out
push
push
jp
lcall
dec
fsubr
or
loopne
psrad
pop
xchg
aas
or
shr
stos
outsb
cwtl
jno
std
fstpl
xor
sbb
xlat
es
lods
mov
ds
mov
adc
pushf
mov
add
jnp
dec
test
sbb
addb
leave
fmull
and
insb
shlb
inc
mov
push
mov
dec
arpl
pop
cld
mov
push
add
cmc
outsb
cli
jae
add
or
add
add
add
loop
fcmovne
add
xor
lea
sub
int
movsl
fsubs
dec
dec
call
or
add
dec
mov
mov
lods
aam
mov
and
jge
adc
pop
fiaddl
cmc
mov
pop
scas
lds
add
ja
mov
dec
adc
ja
icebp
cmp
mov
xchg
dec
xor
mov
dec
fst
or
sbb
fs
movsl
test
push
in
shrb
inc
push
je
push
jb
pop
roll
add
rcr
mov
pop
xor
sbb
add
aas
xchg
stos
sub
mul
or
add
mov
mov
loope
mov
andl
mov
sahf
imul
cmp
and
addb
lret
out
pop
mov
push
into
popf
sub
adc
xchg
mov
imul
sub
in
addb
dec
repnz
ret
cmpsl
mov
xchg
scas
data16
je
repz
jp
or
or
xchg
mov
or
add
inc
add
sbb
je
js
mov
movsl
pop
cli
idivl
cmpsb
or
test
aaa
lock
les
push
sbb
sub
add
fstpl
mov
dec
adc
inc
fistps
ss
jne
add
cmp
dec
iret
and
push
test
push
je
aad
jl
lods
orl
mulb
add
stos
rcrl
sub
movsl
stos
pop
stc
daa
fwait
lahf
clc
daa
stc
pop
inc
jnp
dec
dec
insb
stc
int
shl
sbb
movb
push
pushf
arpl
mov
filds
testb
insl
push
addl
test
into
add
loop
dec
sarl
sahf
les
movsb
xchg
scas
jbe
addr16
xor
paddd
fcompl
inc
adc
xorl
xor
daa
add
cmp
rcll
mov
push
push
and
mov
arpl
inc
lods
xor
sub
mov
push
out
nop
sub
in
add
mov
add
dec
mov
mov
add
addl
mov
dec
push
mov
add
shld
jb
sbb
pop
jl
jp
inc
add
dec
push
daa
loopne
leave
test
movsb
cmp
mov
sub
movb
add
adc
and
inc
add
mov
add
push
sbb
pop
mov
mulb
popf
hlt
xchg
push
aad
les
dec
fwait
data16
push
shll
push
jns
pop
test
popf
dec
jbe
daa
shrl
mov
and
test
fcoml
sti
xor
add
xchg
lahf
jnp
fs
xchg
cmpsb
sub
add
test
lret
imul
fcmovbe
ja
mov
adc
adc
icebp
xchg
or
xchg
int
sbb
mov
xor
add
nop
shl
pop
scas
sub
std
xor
xchg
lcall
addb
and
testb
mov
xchg
mov
imul
add
call
cwtl
xchg
mov
inc
js
xor
add
cwtl
inc
add
ja
inc
add
pop
outsl
insl
cmp
and
and
push
dec
addb
sbb
shrl
add
mov
push
sub
es
data16
cwtl
lahf
mov
inc
fsts
and
mov
mov
imul
out
js
add
insl
adc
jae
movsl
adc
inc
adc
add
adc
sub
pop
xchg
push
push
out
rolb
ficomps
mov
mov
dec
popa
jne
xchg
lcall
adc
add
lea
or
sbb
adc
test
push
cmp
xchg
clc
xor
fwait
imull
sub
inc
cmp
test
dec
movb
popf
cmc
sub
cmpsl
out
rcl
push
aaa
push
cwtl
adc
push
test
push
jg
scas
and
pop
sbb
add
enter
xchg
iret
in
and
lret
adc
mov
add
lret
lods
push
pop
fcompl
add
sbb
shrl
inc
mov
jb
and
sbb
jecxz
sti
xchg
jmp
dec
lea
jb
jp
push
xor
insb
jp
les
jae
fistps
or
sbb
push
xchg
or
pop
jge
outsl
mov
cli
lret
mov
testl
dec
test
fucomi
fs
dec
sbb
mov
call
sti
or
std
je
lock
adc
int3
jmp
mov
jne
mov
jecxz
jmp
mov
sub
loope
jl
outsl
insb
imul
pop
sahf
addb
pop
inc
add
add
sbb
iret
dec
test
add
cmp
pop
shll
fisttps
stc
xchg
dec
or
in
push
ror
push
pop
int3
imulb
add
ret
add
sub
push
add
xchg
sbb
lods
sarb
pop
outsl
loope
cltd
push
ss
cmpsl
test
pop
popa
addr16
sbb
or
add
repnz
or
cmpsb
dec
lods
ds
push
mov
cmp
out
push
pop
aam
mov
shlb
mov
cwtl
divb
dec
mov
add
jmp
add
mov
dec
dec
imul
xchg
sahf
jecxz
sub
add
or
xlat
jmp
dec
out
dec
cli
mov
mov
jl
fstps
cmp
fldcw
movsl
pop
lds
push
mov
pusha
add
imul
fdivl
out
adc
fld
add
fs
pop
jno
in
loope
add
cmpsl
push
mov
jg
xchg
adc
out
and
add
mov
psubw
push
movsl
mov
adc
gs
adc
mov
pop
stos
add
aas
cmp
dec
dec
arpl
mov
je
movsb
sbb
dec
add
add
sub
in
test
push
repz
or
dec
pop
js
mov
add
lret
jae
xor
sub
mov
arpl
cmc
jle
xchg
pop
dec
jne
enter
pusha
add
add
push
xchg
and
outsl
stc
in
pop
fldenv
add
xchg
out
lahf
mov
ljmp
pop
add
ss
in
clc
mov
movsl
cmp
stc
icebp
pmaddwd
cmp
sti
pop
jb
jmp
lahf
stc
xchg
addb
inc
mov
push
insl
cmp
shll
add
shlb
push
xor
stos
push
fxch
stos
fdivrs
pop
fdivrs
mov
sub
cli
jg
jp
movb
test
lret
or
fsubr
push
dec
push
pusha
add
out
dec
mov
xor
test
fildl
pop
sub
les
imul
test
js
push
ror
aam
frstor
les
sbb
inc
ljmp
mov
or
add
cwtl
out
sbb
imul
xchg
test
sahf
test
pop
or
in
pop
jne
fldcw
mov
movsb
sub
in
arpl
xchg
cltd
outsl
fsubl
ficoml
inc
add
addr16
in
xchg
push
bound
mov
mov
clc
or
add
inc
add
pusha
add
mov
mov
or
fdivr
mov
inc
add
push
gs
dec
xchg
pushl
add
cmpsl
mov
vmwrite
and
jecxz
and
cmp
les
mov
dec
stos
scas
outsl
ficoml
ficoml
push
in
dec
addl
insl
xor
test
ret
jmp
out
push
movl
lahf
sub
pushl
dec
and
outsl
mov
add
fisttpll
arpl
xorl
mov
aad
add
jg
movsb
sub
lock
pop
sub
pushl
test
mov
adc
adc
adc
inc
add
aaa
movsl
addb
pop
ret
or
add
clc
stc
mov
lods
ficoml
clc
test
gs
rcll
data16
ljmp
push
arpl
cmpsl
and
pushf
fisubs
out
leave
lret
mov
xchg
shlb
es
inc
add
dec
data16
ret
inc
add
imul
jmp
clc
adc
inc
add
push
add
mov
cmpsl
call
fstpl
movsl
out
mov
movb
sbb
mov
adc
or
add
out
repnz
pop
xor
xchg
out
inc
add
mov
add
inc
sub
movsb
outsb
imul
cld
sti
loope
cwtd
pop
inc
jg
cmpsb
loop
mov
sub
sub
inc
out
xchg
bound
inc
aaa
pushl
repz
mov
lea
mov
ja
insb
je
pandn
push
inc
add
xchg
push
push
or
sub
nop
jl
jnp
mov
adc
movsl
jbe
lods
xchg
jbe
jg
loop
addr16
ljmp
inc
add
mov
or
push
incl
repz
xor
fsubl
add
mov
push
xor
lea
mov
ror
aam
rolb
xchg
ja
stc
cmp
mov
jg
ds
mov
insb
pop
adc
pop
test
mov
test
dec
push
pop
push
add
cmp
inc
add
leave
stos
push
cmc
jnp
fidivrl
inc
add
dec
enter
mov
lea
and
push
dec
and
outsl
adc
pop
and
frstor
loopne
add
and
pop
les
mov
insb
test
xchg
lea
cld
adc
scas
das
fisttps
add
mov
mov
lret
add
enter
lret
sbb
mov
sub
aas
mov
xchg
js
mov
repnz
jns
into
jmp
in
rolb
xchg
roll
cmpsl
cmp
mov
cld
dec
insl
add
inc
add
shlb
dec
ja
and
scas
xor
addb
icebp
ljmp
mov
out
add
and
stc
mov
mov
cmp
loopne
jl
mov
inc
test
add
aaa
pop
stos
add
leave
cltd
fstps
divb
das
int3
stos
rolb
jle
stos
negb
xrelease
nopl
lods
loope
jo
movsl
in
movb
testb
add
and
inc
add
and
aam
fnsave
cmc
mov
lret
in
add
pop
xor
mov
jno
lcall
roll
fsub
ret
cld
jo
push
insl
out
pop
sarl
loope
dec
jne
inc
add
mov
xor
mov
adc
add
and
add
push
mov
mov
pop
ja
inc
inc
push
xchg
pop
pop
mov
ret
sbb
mov
sbb
hlt
mov
pop
jae
je
fcomi
gs
fwait
xchg
or
mull
je
pop
mov
insb
inc
add
or
push
inc
add
or
jb
add
pop
outsl
popf
cld
cmpsl
and
jae
push
cmp
rcl
daa
inc
add
xchg
add
insl
test
scas
dec
cmpsb
mov
and
sub
pop
stos
mov
mulb
lea
xor
jl
cld
inc
add
pop
adc
and
in
mov
sbb
dec
into
imul
ret
push
int
test
sbb
sbb
sahf
ljmp
add
aas
sub
cmp
inc
outsl
mov
mov
jns
cmp
push
push
out
lock
fbld
ss
add
popa
mov
mov
fsubl
jle
loope
xchg
incl
into
inc
push
shrl
stos
gs
inc
add
or
push
nop
arpl
mov
mov
movsb
repnz
sbb
sub
mov
pop
push
inc
cmp
mov
in
movsb
push
sbb
add
jne,pn
sarb
shl
popf
nop
dec
jmp
jp
pop
jecxz
or
test
mov
fadd
shll
cltd
add
shlb
idiv
rolb
daa
pop
into
adc
add
xchg
mov
add
sub
add
jecxz
mov
push
jmp
outsl
pop
jno
cmp
loop
or
add
jmp
fstps
dec
ljmp
lock
dec
jecxz
addl
scas
fwait
push
mov
jle
pop
es
xchg
lock
inc
add
hlt
mov
and
imul
cmp
add
lock
dec
cltd
sbb
fidivl
adc
cmp
mov
sbb
add
mov
sti
lods
in
push
out
ret
lret
dec
jbe
fxch
lods
xchg
sbb
add
dec
in
cmp
add
movsb
add
fidivl
xor
clc
mov
sahf
popa
bnd
xchg
mov
dec
mov
rcrl
movsb
aad
xor
stos
xchg
inc
add
mov
clc
fdivrl
movsl
push
push
lods
cmp
xchg
rolb
in
nop
push
xchg
enter
pusha
add
cwtl
push
or
mov
mov
xchg
mov
xchg
lods
jae
pop
inc
add
jg
sub
or
divl
mov
fsin
xor
mov
add
mov
inc
dec
xchg
lahf
jg
movsl
sub
loop
cs
scas
stos
fnsave
push
sub
dec
std
xlat
push
enter
bound
dec
sbb
or
jnp
push
or
popa
clc
repnz
xchg
lcall
or
icebp
push
faddl
stc
add
imulb
sti
mov
jmp
lods
mov
pop
mov
sbb
push
aam
fiaddl
add
inc
add
leave
std
dec
inc
add
push
jb
add
dec
mov
or
loope
inc
add
sbb
mov
pop
pop
int3
inc
or
std
mov
mov
lea
ret
mov
dec
outsl
int3
add
or
adc
inc
add
in
inc
add
daa
sbb
insb
incb
shl
sbb
clc
push
add
rol
jg
jbe
sbb
xor
mov
xor
in
pop
test
add
fisubs
cs
pushf
jle
mov
test
push
testb
jno
mov
addb
mov
mov
push
inc
add
mov
add
xchg
ss
jmp
cmp
adc
sub
ljmp
cmp
pop
dec
pop
mov
lock
sbb
mov
jg
scas
inc
ja
mov
add
xchg
mov
pop
rolb
pusha
add
mov
jbe
mov
lret
push
sbb
les
stc
movsb
rcll
jb
mov
loop
inc
pop
dec
mov
insl
mov
inc
ret
pop
mov
pusha
add
fstps
cmp
fimull
add
pop
or
xchg
jne
nop
loope
inc
add
pop
cld
stc
jno
or
mov
dec
sbb
repnz
fadds
cmc
cmp
add
fistps
cmp
mov
aaa
dec
add
cmc
sub
fwait
add
sub
jbe
repnz
ljmp
add
out
insl
and
push
jg
dec
jmp
add
es
dec
mov
lea
loop
fs
add
das
movsb
jo
add
add
adc
pusha
add
cmp
dec
enter
mov
add
adc
mov
pop
push
ds
jle
outsb
cli
leave
add
shl
adc
xchg
cmp
add
int
jecxz
adcl
rcll
dec
mov
out
mov
std
mov
pop
pop
fsubs
fs
ja
jb
mov
lret
hlt
push
mov
mov
daa
imul
add
add
adc
sti
sub
rcr
xchg
sub
mov
and
sbb
sbb
repz
xchg
fwait
mov
lcall
mov
fwait
jne
jge
mov
fildll
in
sub
push
add
add
jg
jae
je
aam
int3
inc
add
mov
jle
cmp
xor
insb
scas
sub
mov
jmp
add
rolb
test
ljmp
adcl
shll
pop
in
jno
jne
mov
pop
daa
test
icebp
xor
int3
cmp
aam
test
push
fwait
inc
add
cmpsl
jo
in
jle
push
aaa
inc
jns
addb
dec
rep
stos
add
and
mov
mov
or
js
addb
xchg
dec
fldenv
add
fistl
pop
movb
ret
jne
jmp
push
jb
dec
lock
pop
jge
sbb
push
mov
and
scas
inc
inc
ret
push
push
cmp
call
jno
movb
int3
xor
add
add
pop
mov
lcall
mov
xchg
ret
and
sahf
adc
stos
test
mov
inc
add
jnp
or
addb
push
and
xchg
mov
add
fcmove
jmp
cmp
dec
lds
shll
int
jb
xchg
cmp
mov
stos
pop
xor
sbb
adcl
or
jmp
sahf
cmp
mov
fsubs
pusha
add
rolb
lret
add
addb
adc
stc
lcall
adc
out
xchg
jecxz
je
pop
push
xchg
gs
mov
ja
jb
roll
leave
shrb
fwait
mov
jae
stos
add
or
popf
adc
mov
jp
lods
and
lea
test
mov
xchg
rcrb
push
mov
insl
mov
cmc
xchg
and
in
mov
mov
cmpsl
mov
ljmp
add
sub
je
shlb
push
add
push
ljmp
fldt
mov
shlb
dec
pop
lock
pop
cmp
adc
push
dec
in
lds
jl
clc
icebp
adc
ja
leave
sbb
movsb
push
or
mov
outsl
fistpl
dec
out
stos
into
repnz
nop
mov
add
push
mov
add
loopne
adc
es
push
es
add
loop
stc
jns
enter
scas
sbb
popf
lds
or
pop
xor
loope
pop
das
pop
mov
cmp
add
stos
xorl
in
sti
int3
adc
add
xor
xchg
sbb
mov
in
push
and
add
cmpsl
notb
sub
pop
cmp
sub
clc
repz
cld
popa
ljmp
movb
push
jle
and
dec
jecxz
inc
jg,pn
fstpl
fucomip
cmpsb
pop
sbb
out
aaa
cmp
mov
inc
add
jle
mov
out
jmp
add
and
add
and
pusha
add
sarb
gs
adc
cmp
testl
xor
mov
sbb
test
fucomip
sub
lods
mov
push
ret
scas
fstl
addb
data16
bound
sub
nop
sbb
and
jg
sbb
hlt
and
movsl
addb
sub
jecxz
loope
outsb
movsl
add
fstp
dec
addb
dec
mov
add
or
out
cmpsl
sub
mov
fisttpll
sti
mov
shr
sub
sub
out
iret
or
add
cmp
adcl
mov
mov
and
ret
loope
xor
sub
add
xchg
push
iret
mov
lret
mov
lods
fwait
rolb
add
movsbl
xor
outsl
xchg
dec
and
fistps
ljmp
aam
fiadds
addb
push
pushf
cmp
push
jo
push
leave
int3
addr16
movsb
insl
mov
xchg
out
mov
shlb
movb
lods
sub
icebp
outsb
or
mov
cltd
addb
pcmpgtd
cmp
add
mov
mov
cs
cli
mov
jle
mov
int
lahf
ds
es
scas
sti
push
cmpsb
aad
cmp
dec
iret
xor
enter
xor
cmp
add
addr16
test
and
mov
test
and
lea
jno
add
outsl
aad
jg
sub
pop
addb
push
add
addb
push
loopne
mov
adcl
cmp
aas
jle
popa
lods
mov
out
fsubl
mov
daa
sub
sbb
movsl
sbb
out
xchg
push
repz
add
push
ret
jg
lahf
lods
fildll
add
sbb
sti
aaa
mov
pop
pop
mov
mov
repz
repnz
push
add
je
jmp
dec
loopne
add
ret
push
mov
sbb
mov
add
or
pop
daa
inc
and
add
fdivs
jge
push
pushf
cmp
bound
pop
cmp
fs
movsb
imul
das
pop
rolb
in
mov
out
cli
dec
inc
push
pop
je
cmp
mov
cmpsb
mov
out
sub
movb
add
sbb
insl
sbb
push
jle
sub
mov
pop
addr16
movsb
inc
inc
ja
in
mov
daa
aas
mov
push
inc
add
outsb
jbe
and
mov
imulb
jno
shlb
ficoms
imul
sbb
push
push
insb
add
mov
or
sub
or
stos
push
rolb
cmc
dec
aas
dec
pusha
add
stc
leave
push
pusha
add
aam
add
cld
addb
mov
aam
out
dec
idivb
imul
mov
jmp
out
addb
jmp
insl
outsl
pop
aas
stos
mov
add
add
pop
in
out
and
sub
jmp
cwtl
shr
movb
iret
push
push
fdivrs
sbb
pop
test
pop
adc
sti
rcr
addl
sar
mov
mov
mov
cld
call
aaa
sub
jl
sbb
sub
add
movsl
andl
out
adc
xlat
cmc
mov
or
sub
test
push
std
lods
jne
push
mov
add
or
fisubs
shl
cmp
xchg
pop
mov
push
sahf
js
call
orl
xadd
mov
scas
push
pop
push
andl
daa
inc
add
mov
adc
ds
jns
mov
pop
jno
push
mov
cwtl
lock
icebp
popf
cs
iret
jbe
add
and
dec
mov
imul
dec
pop
jp
fs
stos
pop
stos
arpl
ffree
xor
cmc
dec
mov
sbb
add
les
inc
add
addb
aas
lahf
cmpsl
cwtl
or
das
cs
add
mov
mov
out
leave
cmp
fdivr
push
scas
jg
add
shr
mov
in
jnp
cmc
mov
xor
rolb
std
mov
test
or
lret
jmp
xchg
imul
not
pop
jo
clc
add
or
jae
push
pop
call
cli
xor
add
sub
fisubrs
sub
es
mov
jnp
pushf
imul
int
add
lods
jl
sub
mov
inc
fldt
rolb
mov
jecxz
or
out
scas
fcompp
cmpsb
xor
jecxz
pop
xchg
or
stos
fdivrs
push
dec
pop
repz
mov
inc
mov
mov
inc
add
add
xor
mov
movsl
mov
jge
inc
out
mov
inc
cltd
mov
or
push
add
sbb
and
push
push
push
lahf
sbb
loope
jae
cwtl
and
sub
push
mov
neg
mov
divb
jle
pop
mov
in
fsubs
add
mov
sub
gs
sub
pop
lahf
pop
push
dec
and
scas
cli
out
hlt
adc
scas
rcrl
pop
cmpsl
pop
imul
dec
ret
hlt
inc
mov
or
test
jno
add
add
mov
sahf
mov
cmp
push
xor
cmp
inc
add
mov
inc
push
addr16
jbe
rolb
mov
les
push
add
inc
add
popa
test
dec
je
aam
lds
sbb
mov
jg
xor
mov
pop
xchg
mov
pushf
cld
stc
push
add
xchg
pop
adc
call
pushf
jmp
push
loop
add
cmp
or
add
test
and
fbstp
push
xchg
jae
cmp
iret
jl
add
sub
sti
jg
xlat
push
std
dec
cltd
scas
sub
pandn
rclb
cltd
push
add
out
sbb
xchg
cmp
testb
mov
push
je
aad
inc
dec
pop
hlt
xchg
ss
mov
push
xchg
xor
add
lock
add
xchg
cmp
add
and
jp
es
leave
dec
adc
outsb
cld
mov
jg
jmp
add
add
inc
add
call
jns
xchg
cmp
add
gs
cmp
add
je
add
mov
bnd
cmc
add
add
out
push
out
dec
bound
sbb
addb
push
xor
add
cmp
add
stos
cli
or
pop
mov
stc
push
popf
mov
push
aaa
incl
mov
add
ljmp
sub
sbb
mov
pop
in
lret
and
add
or
pop
pop
jns
stc
jns
push
ret
loopne
cmc
hlt
or
mov
jnp,pn
addr16
pop
cs
divl
ljmp
out
subl
sub
movb
mov
push
push
clc
mov
xor
jl
xchg
call
mov
jmp
call
cmpsb
adc
mov
jge
movb
movsl
cmp
pop
xchg
dec
xchg
out
stc
ret
xorl
dec
xor
lret
outsl
inc
add
add
daa
repz
pop
add
out
or
cmp
cmpsb
cmpsb
pushf
or
fildll
js
xchg
adcl
add
pop
sbb
sbb
outsb
mov
fisttpll
in
sbb
orl
scas
inc
fstsw
add
outsb
push
notb
add
mov
push
ja
jo
mov
std
mov
xor
scas
cmp
cmc
mov
add
add
divl
mov
add
or
call
cmpsl
add
jbe
push
pusha
add
sbbl
int3
xchg
int3
ss
shrl
pop
mov
jo
out
insb
mov
hlt
lret
add
push
icebp
adc
and
ljmp
imul
xor
dec
movsb
mov
or
jle
mov
jae
push
xchg
ja
jnp,pn
and
push
bound
imul
xor
sbb
or
mov
xchg
sbb
jge
aam
or
aam
xchg
push
not
ss
leave
or
adc
out
pop
outsl
jno
sahf
imul
scas
xchg
insl
sub
mov
push
inc
outsb
frstor
call
pushf
fldcw
addb
ljmp
inc
add
xor
es
add
scas
stc
jnp
and
jns
xor
out
sahf
aam
mov
cwtl
ret
mov
lcall
and
or
pop
into
or
mov
sbb
inc
add
js
jge
xchg
in
cmp
push
add
fxch
lock
mov
pop
outsb
push
icebp
lds
inc
outsl
jmp
stc
inc
add
add
call
push
dec
and
push
mov
mov
pusha
add
add
sub
xchg
les
pop
icebp
inc
add
inc
add
out
sbb
adc
lret
addr16
stos
fcmove
movb
xchg
fwait
sub
pop
outsl
add
and
jae
int
arpl
cmp
xchg
pop
xchg
jo
test
mov
mov
push
out
addr16
add
into
cmpsl
add
loopne
add
in
js
sub
lock
cmc
insl
cltd
xchg
scas
aam
cmp
or
sub
dec
jl
or
adc
cmp
jb
test
pushf
mov
mov
push
mov
add
les
mov
notb
mov
cmpsb
and
jno
lea
add
ds
repnz
jecxz
inc
add
inc
test
jb
jb
es
sbb
lods
push
inc
add
mov
stc
aad
mov
and
notl
sbb
cld
mov
pop
std
sbb
enter
cmc
add
flds
cwtl
cli
movb
fcomps
jae
and
lods
pop
push
in
lea
cwtl
rorl
nop
xchg
sbb
popf
pusha
add
push
test
adc
mov
gs
aas
dec
loop
pop
stos
sub
jle
hlt
push
ljmp
jne
jmp
lcall
mov
cmp
int
in
mov
pop
or
lahf
and
lds
cmp
in
lret
test
jnp
inc
add
orl
sbb
pop
movsl
sbb
in
nop
sti
push
inc
int
push
dec
xchg
shr
inc
bound
mov
xchg
jnp
sub
dec
pop
mov
call
inc
add
push
jae
mov
jbe
jg
dec
pop
pop
iret
xchg
dec
mov
inc
hlt
sub
mov
xchg
je
call
push
adc
neg
pop
mov
sti
test
fucomip
das
lcall
movb
iret
js
add
call
mov
sbb
idiv
mov
add
jp
mov
and
sbb
add
inc
mov
jnp
push
cmpsb
mov
add
push
cmp
jae
jmp
mov
push
or
mov
lret
cmp
call
cli
je
fbld
add
mov
sbb
fsubrp
popf
mov
jp
cmp
lahf
push
orl
add
loop
mov
push
arpl
add
sub
add
xchg
push
nop
fcoml
imul
insb
cmpsl
loope
sbb
mov
pop
scas
sbb
daa
sbb
addb
out
adc
in
ja
add
mov
int
rcrl
jae
add
add
rolb
jb
cmp
mov
sub
aas
xchg
repz
stos
fnstsw
in
cmpsl
xor
lods
sub
outsb
sub
xor
push
push
addb
sbb
add
dec
jne
fs
xlat
sbb
out
mov
rcl
js
add
fimull
call
fsts
inc
add
push
ss
add
push
rorb
pop
aas
into
sub
inc
xchg
pushf
add
push
stc
inc
fildll
add
push
out
fcompl
fstps
mov
je
mov
and
jle
add
inc
add
nop
push
iret
mov
add
dec
sub
nop
hlt
xor
mull
or
les
lret
and
cmp
pop
add
mov
inc
add
lret
sti
test
addb
mov
mov
pushf
icebp
stos
shll
and
add
pop
mov
es
add
xor
or
frstor
cmp
pop
fwait
inc
add
inc
xlat
dec
cmpsl
test
ficoms
sbb
rcl
push
fdivrl
add
insb
loopne
push
adc
dec
or
dec
and
jp
aad
fcom
dec
inc
add
add
pop
jp
dec
mov
test
lcall
shlb
cmp
clc
sub
jns
mov
je
inc
shrl
sub
gs
aad
shll
shrl
sub
cmp
mov
cmc
loop
jns
mov
inc
or
push
sub
hlt
adc
adc
mov
pop
inc
add
inc
add
fnstsw
inc
add
into
rolb
dec
or
out
sub
inc
add
xchg
fdivl
popa
sbb
mov
arpl
lcall
xchg
lods
into
addb
jns
ret
pushf
jbe
add
inc
add
push
aad
leave
push
add
adc
inc
add
aam
pop
mov
pop
pop
outsl
jne
inc
out
test
lret
syscall
bound
jecxz
out
jae
rclb
mov
xchg
call
add
lret
out
movsl
add
mov
xchg
push
arpl
out
dec
lret
nop
push
rcll
mov
loopne
ja
add
or
add
lock
jmp
add
pop
dec
pusha
add
mov
je
inc
add
lods
loope,pn
out
pushf
mov
sub
lods
mov
jnp
out
mov
inc
add
mov
add
out
es
stos
pusha
add
inc
sbb
xor
movsl
clc
retw
and
fists
add
dec
xor
outsl
das
pop
dec
sub
out
test
jl
fwait
push
sub
add
out
sbb
inc
mov
jbe
fildl
loopne
ss
test
call
out
ret
xchg
movsb
rorl
add
add
pop
fdivrl
js
and
cwtl
add
add
adc
addr16
pop
movsb
cpuid
dec
daa
cwtl
xor
push
in
addb
add
mov
jnp
std
add
arpl
popa
cli
movb
icebp
mov
mov
cli
push
inc
xchg
cld
inc
add
jle
int
call
fldt
mov
xor
clc
lods
addb
mov
nop
jg
adc
cmpsb
sbb
jge
stc
sbb
add
pop
nop
leave
ss
gs
mov
inc
add
push
scas
out
cmp
push
mov
std
in
cmp
dec
adc
sub
jl
pop
jge
sub
xchg
adc
mov
push
mov
jbe
addb
add
push
mov
je
addb
jg
dec
jecxz
out
inc
add
xor
insb
and
sbb
add
sub
loope
inc
repz
xor
pop
push
ds
add
movsb
or
add
pop
bound
lea
dec
xor
in
movb
jbe
std
adc
mov
stos
and
mov
jp
push
adc
mov
dec
jo
sub
inc
add
sub
mov
and
and
add
inc
add
repz
pop
xor
das
jne
push
add
push
add
rcr
mov
jg
dec
pop
sbb
jns
in
out
pop
div
loopne
cmp
je
addb
int
dec
stc
jecxz
imul
add
daa
gs
ja
scas
jno
dec
adc
and
aaa
test
inc
pop
sub
aaa
insb
or
xchg
push
jecxz
hlt
mov
rorl
movsb
loop
or
ja
or
jbe
jno
sahf
insb
sti
iret
rolb
or
jbe
cld
mov
in
sbb
pop
adc
mov
test
pop
cmc
and
jb
add
sar
arpl
inc
add
mov
add
push
or
out
jecxz,pn
sbb
es
les
daa
addb
add
and
cmpsl
xchg
scas
popa
or
jge
dec
mov
jo
int
jg
jne
add
push
leave
sub
mov
lock
ret
addb
mov
xchg
xchg
aad
jg
cmpl
or
pop
mov
mov
push
add
bound
cmp
mov
int
cmp
or
lds
push
xor
movsb
leave
cmp
outsl
cmc
js
add
outsl
or
xchg
push
lret
repz
sbb
adc
clc
mov
movhps
xchg
rcrb
fdivrs
inc
add
nop
jnp
push
lea
fs
es
enter
sub
pop
iret
mov
cmp
popl
or
xlat
inc
pop
out
jbe
outsb
addb
dec
sahf
inc
movsb
mov
add
push
bound
stc
aad
ret
fs
insl
inc
add
cmpsl
inc
adc
pop
mov
lea
leave
mov
inc
add
outsb
cmp
lods
adc
sub
mov
mov
fidivl
add
pop
sbb
add
lcall
inc
add
and
cmpsb
mov
add
mov
jge
sub
add
xor
inc
daa
xchg
cmp
scas
inc
mov
mov
test
push
add
add
adc
out
sub
mov
int
popf
pop
add
negb
pop
roll
add
hlt
dec
jno
pusha
add
mov
mov
out
xor
xlat
add
pop
lods
push
sbb
daa
inc
add
or
dec
xchg
neg
pop
jns
rolb
rol
add
add
pop
cwtl
fistpll
mov
sbb
jecxz
mov
lahf
movb
in
js
add
add
add
mov
lea
sub
push
xchg
inc
add
add
movsb
jo
sub
insl
cmp
xor
jge
imull
push
add
sbb
xor
les
lcall
dec
test
btc
jno
loope
adc
add
mov
cmp
rolb
out
cmp
mov
dec
sbb
hlt
popf
dec
adc
or
add
mov
pop
mov
lss
cs
movb
aad
mov
fstp
popf
into
stos
dec
std
test
addb
sub
lahf
imul
fdivrs
and
pop
rorl
and
imul
faddl
xchg
mov
inc
jg
xchg
jg
imul
insb
adc
imul
in
push
add
loope
call
sub
fcoms
roll
cmp
jg
sbb
push
jecxz
clc
add
cmp
add
adc
xchg
aam
movsb
lahf
pop
inc
inc
movsl
cmpsb
and
cmpsl
sbb
sbb
cld
imull
add
fists
xchg
ret
push
mov
pop
movb
xor
daa
imull
addb
scas
push
stc
rorb
in
jge
loop
mov
add
cmp
push
xor
pusha
add
insb
lret
ljmp
and
mov
xor
cmp
mov
xchg
cmp
cltd
lret
cmp
nop
push
lods
xchg
fdivl
push
aad
add
lods
and
cmp
sub
dec
rolb
cmp
inc
add
mov
rcr
fiaddl
add
sbb
pop
pop
lods
out
xchg
cld
pop
dec
sub
shl
outsb
inc
add
push
inc
add
jecxz
lods
add
xchg
loopne
inc
cmpsb
lods
and
insl
icebp
mov
clc
outsb
push
push
push
fwait
xor
rcll
xor
xchg
inc
add
mov
push
add
lods
cmpsl
shrl
in
rclb
jno
out
scas
call
je
js
adc
or
ror
outsb
xchg
push
pop
xchg
xor
lods
jl
cmc
cwtl
int
bswap
out
and
pop
movsb
sub
mov
dec
shlb
add
cmp
jo
stc
or
les
push
adc
jp
cmc
movsl
outsl
push
inc
fisubs
jmp
lock
push
fcoml
mov
rdmsr
imul
sub
pop
mov
add
addr16
jbe
scas
es
add
fadds
fidivrl
loope
xchg
and
add
andl
mov
xchg
hlt
dec
lret
lds
pop
dec
sahf
scas
cmp
adc
rcrb
xchg
pop
mov
add
roll
sbb
adc
mov
les
and
inc
add
mov
dec
sub
or
popf
mov
cld
fidivl
add
in
xlat
dec
insl
inc
add
lea
call
lret
mov
add
and
add
xchg
call
xchg
adc
dec
aam
add
out
lds
pop
addr16
hlt
pop
mov
inc
sahf
cmp
mov
stc
cmc
and
repnz
pop
in
push
cmp
pushf
sbb
sub
add
cwtl
das
inc
add
outsb
sbb
add
mov
sahf
ficoml
jmp
movb
mov
cmp
aam
dec
pop
sbb
jbe
ljmp
sub
xor
adc
into
adc
add
xor
mov
add
add
pusha
add
in
pushf
les
push
loop
add
xor
lods
sbb
sbb
mov
test
push
jo
loop
sbbl
mov
sbb
imulb
mov
daa
adcl
xchg
bound
xlat
inc
add
xor
bound
loope
ss
cmc
test
popa
sti
aad
pushf
cmp
cmpsb
scas
outsl
push
add
mov
cmp
and
add
ss
fcmovbe
inc
fsubrs
filds
and
enter
addb
idivb
repnz
iret
push
add
xchg
mov
push
pop
fiaddl
cwtl
mov
push
mov
pop
inc
add
std
fwait
push
les
cmp
dec
call
sbb
out
std
jp
addb
jmp
add
dec
add
cltd
inc
fisubl
test
push
push
adc
stos
xchg
cmc
inc
add
aam
mov
add
adc
mov
stc
shll
jae
or
insb
int
sub
cmp
add
adc
repz
add
inc
or
dec
xor
add
add
addr16
ljmp
in
pop
push
push
or
ljmp
xchg
in
adc
mov
imul
sbb
rcr
inc
add
mov
lock
hlt
mov
repz
lret
mov
sub
outsb
mov
or
shr
mov
fs
dec
dec
mov
jae
add
test
mov
add
arpl
loop
mov
js
cmp
popa
pop
loop
out
mov
iret
scas
mov
cmp
jb
mov
dec
add
lds
xchg
inc
sahf
sarb
or
es
xlat
xchg
daa
xchg
lret
xchg
lods
sbb
add
inc
push
adc
add
sub
jns
add
int
mov
pop
cli
fmulp
rolb
imul
lods
ja
push
xor
movb
addb
xchg
inc
add
cmc
xchg
orl
into
xchg
cltd
arpl
add
jl
outsl
mov
add
pop
adc
test
sub
lock
mov
mov
add
inc
mov
sbb
pop
sbb
add
test
mov
add
xlat
rolb
xchg
popa
xor
push
in
cmp
scas
std
out
out
add
out
lods
and
xchg
xlat
xadd
xor
inc
movsl
lea
inc
add
leave
in
mov
push
or
sbb
nop
dec
ficoml
or
dec
imul
dec
es
mov
popa
dec
cmpsl
push
add
mov
add
push
int3
jge
addb
dec
pop
hlt
mov
jb
cmpsb
mov
cmp
jbe
stc
inc
add
test
add
test
insb
jl
outsl
test
adc
add
nop
xchg
xor
add
cmpsb
rol
add
dec
lock
ss
lahf
cmpsb
and
scas
jge
jecxz
xchg
loope
sbb
sbb
stos
mov
dec
repnz
xchg
pushf
push
ret
mov
inc
nop
rcll
sub
xchg
int3
xchg
je
pop
xchg
fists
push
in
fcompl
add
fwait
jle
xchg
daa
mov
inc
push
imul
fdivrl
add
rorb
push
sub
mov
jge
pop
adc
ret
cli
pop
lods
dec
or
mov
sub
push
cmpsb
or
cmpsl
pop
adc
out
mov
mov
pop
inc
add
sbb
nop
in
fidivl
fwait
push
gs
aas
pusha
add
or
rol
add
add
inc
add
xchg
lds
das
mov
fildll
add
arpl
mov
int
rcll
les
inc
add
pop
pop
sub
rcll
inc
add
dec
xor
jnp
or
es
movsl
scas
adc
daa
jne
adc
mov
cpuid
ds
or
sub
push
add
es
ja
std
addr16
mov
add
int3
fisttps
aaa
imull
mov
int
mov
jbe
xchg
mov
mov
mov
dec
sbb
jbe
movb
sub
mov
pop
and
dec
cmpsl
pop
pop
setnp
or
mov
add
test
dec
and
add
pop
xor
sub
lods
mov
pop
sbb
add
add
shlb
pop
adc
jle
stos
mov
inc
add
stos
insl
ret
push
xchg
jmp
push
pop
cmp
xor
out
cmp
jl
imul
ret
sar
jnp
inc
add
shl
fdivrp
or
xchg
test
out
sbb
dec
mov
and
decl
daa
divl
cld
fisubs
pop
fsts
add
sbb
jmp
xor
roll
mov
rolb
add
dec
popa
or
add
outsl
sub
pop
mov
repnz
mov
jl,pt
aaa
sub
mov
cmp
std
movsl
arpl
push
adc
testl
test
fnstsw
add
xor
inc
add
in
daa
xor
aam
addb
ret
cmc
xchg
adc
rcrb
ds
in
sti
lret
pop
mov
arpl
ss
ljmp
sub
add
insl
push
mov
daa
dec
cmpsl
rolb
popf
xchg
mul
pop
sub
push
popf
mov
xor
add
add
xor
jbe
dec
xor
xor
push
add
jle
push
jg
jb
mov
xchg
or
or
cmp
add
ret
rcr
out
mov
mov
sub
cmp
mov
fists
push
hlt
add
or
mov
xchg
add
inc
ds
add
les
jae
jecxz
js
add
das
out
jl
push
mov
jp
mov
adc
mov
jns
add
inc
add
pusha
add
jmp
lods
sti
push
jl
mov
add
add
inc
add
outsb
loop
jle
inc
fdivs
add
es
mov
addr16
imul
lea
push
add
icebp
aas
jae
jmp
inc
add
mov
cmpsb
push
push
and
int3
imul
leave
lods
lods
mov
je
or
cwtl
cli
sbb
add
bound
imul
in
adc
inc
add
xor
notl
nop
fmul
mov
dec
xchg
orl
add
pop
loope
fwait
jmp
and
xchg
push
mov
sbb
mov
dec
pop
cmpsl
in
shl
mov
mov
mov
leave
mov
mov
ror
push
pusha
add
inc
mov
adc
cltd
sbb
lret
imul
mov
inc
xchg
mov
ljmp
hlt
mov
dec
fstps
ret
jnp
fdivs
loopne
lahf
sti
xor
insl
unpckhps
push
pushf
sbb
jecxz
addb
mov
cmp
add
daa
pop
bound
imul
or
fstp
fs
push
mov
xor
jge
add
or
or
sbb
fisubs
std
nop
rorl
adc
sbb
cld
xor
xchg
jnp
push
pop
mov
pop
lret
cmp
xor
jp
sarb
andl
inc
jg
scas
dec
jne
add
aaa
mov
out
ljmp
sbb
cmp
inc
test
sub
dec
addr16
pushf
jb
out
mov
adc
imul
sub
jo
stos
gs
or
fwait
sub
ret
popa
inc
xor
xor
dec
lret
repz
adc
sbb
pop
std
mov
xchg
repz
rclb
cmpsl
push
hlt
mov
dec
sbb
and
movb
jmp
fidivrl
add
rolb
pop
sahf
cmp
xchg
iret
adc
jb
add
add
sbb
push
push
sbb
js
add
pop
mov
in
js
add
xor
push
hlt
add
in
stos
into
fsubrp
data16
enter
push
fists
push
iret
mov
pop
and
add
dec
inc
add
xchg
mov
and
int
add
fbstp
addb
sbb
inc
pop
xchg
adc
in
int3
rolb
pop
aaa
test
or
add
movsl
push
adc
loop
pop
mov
jnp
imull
test
add
addl
jge
pop
sbb
add
test
add
pusha
add
add
xchg
lock
or
js
loope
repnz
dec
or
jge
fdivl
mov
inc
add
jp
push
insb
push
add
das
ret
cld
fwait
adcl
cli
mov
int
shl
sahf
cwtl
cs
adc
movsl
jmp
gs
push
mov
shr
fmulp
sahf
std
mov
jbe
push
lcall
test
cwtl
or
inc
add
xor
dec
inc
inc
movb
push
adc
shl
push
and
xchg
jecxz
mov
xor
pop
inc
add
scas
add
cli
jb
jg
and
aad
dec
jne
sbb
add
jmp
sub
scas
dec
xor
add
repz
add
dec
ficompl
xchg
int
fisubrl
scas
cmp
inc
dec
push
add
js
stos
jmp
jo
mov
add
sub
jl
adc
fistps
lock
imul
add
cmp
add
cltd
cmp
ljmp
es
mov
fnstsw
cmpsl
insl
add
aas
icebp
or
aad
mov
mov
addb
ret
loop
dec
out
dec
sub
roll
add
scas
dec
movsb
adcl
add
rcll
popa
or
and
xor
dec
xchg
xor
lret
pop
iret
dec
sarb
and
push
mov
push
mov
add
mov
add
add
shrl
in
push
or
mov
loope
in
mov
cmpsl
or
dec
out
daa
add
mov
add
add
loop
or
aam
or
lret
sarb
dec
fisubrl
out
das
adc
push
inc
add
lret
js
iret
sahf
lds
pop
mov
pop
inc
add
movl
jmp
icebp
lcall
insb
sbb
dec
xor
dec
mov
jo
or
mov
or
rolb
xchg
addr16
cmp
cli
cltd
pushf
xor
push
add
and
ja
cld
sbb
xlat
cmpsb
cmp
ja
or
mov
or
mov
hlt
in
adc
xchg
mov
cs
outsb
es
cli
dec
iret
mov
push
inc
add
add
jns
nop
aam
les
movsb
adc
cmpsb
pushf
int3
mov
push
iret
inc
add
addb
add
movb
sbb
add
rcrb
pusha
add
add
cmp
loopne
addb
dec
stos
test
mov
pop
popa
enter
mov
es
je
daa
ja
jecxz
mov
dec
iret
mov
cli
pop
ja
mov
mov
xchg
mov
add
adc
addr16
js
loope
jno
fucomp
out
sbb
push
add
dec
cmp
xor
out
sti
xchg
pop
jp
push
rolb
loopne
add
jnp
mov
add
add
mov
add
les
inc
add
out
stos
inc
add
fwait
and
fistpll
pslld
add
add
push
adc
mov
add
or
aas
icebp
cmp
mov
dec
lds
arpl
add
cmp
out
add
ljmp
mov
pop
mov
push
rolb
mov
cs
dec
push
cmp
mov
inc
loopne
and
pop
ja
ss
jb
in
push
fadds
jmp
cli
xlat
mov
rcrb
mov
cmp
imul
xchg
out
mov
fidivrs
cmp
add
add
pusha
add
repnz
adc
sahf
in
pop
scas
push
add
outsl
lret
adc
xchg
cwtl
mov
pop
and
sarl
mov
sbb
dec
adc
pop
push
std
inc
add
fisttps
cwtl
jnp
mov
ret
or
jo
inc
mov
aas
shll
es
addr16
inc
xor
xor
adc
add
in
add
dec
test
repz
in
pusha
add
repz
add
cmpsb
xor
pushf
dec
ds
xor
fwait
lret
imul
push
sti
rolb
sub
insb
popf
data16
mov
cltd
pop
pop
or
mov
mov
lret
and
addr16
mov
push
mov
push
or
add
addl
stos
lds
mov
cmp
fs
out
cmp
xor
sti
in
push
push
aaa
inc
loope
or
stos
xchg
mov
lods
insb
mov
aaa
fwait
adc
aas
mov
dec
gs
mov
push
fwait
loop
mov
and
js
roll
popf
loop
add
mov
fsubrp
addb
repnz
in
out
jge
mov
and
decb
cmpsb
iret
movb
gs
pop
or
fwait
shl
adc
inc
les
add
es
jp
add
xchg
push
addb
add
fwait
or
add
cmp
gs
add
add
dec
inc
cltd
pusha
add
fadd
add
imul
ljmp
imul
and
in
negl
adc
mov
mov
inc
add
ret
testb
adc
add
mov
jno
mov
mov
cwtl
push
repnz
sub
cmp
pop
or
int
add
sub
sbb
adc
sub
xchg
pop
push
or
mov
test
add
add
gs
outsl
std
test
movsb
dec
movb
fsubrl
cmp
pop
sbb
je
or
dec
xor
add
loopne
or
pop
adc
jb
adc
add
mov
dec
or
iret
lock
sbb
test
mov
add
mov
xchg
mov
scas
repnz
mov
ret
lret
fisttpl
testb
imul
push
inc
add
dec
ficomps
cmp
jns
aam
add
icebp
lods
jmp
fadds
inc
add
in
fwait
mov
xchg
cmp
push
inc
add
xor
push
lods
jp
imul
push
lods
fstl
xor
mov
add
add
xchg
adc
add
sahf
add
je
adc
xor
cltd
inc
add
and
jg
unpckhps
add
mov
push
les
decb
sub
fcoms
mov
or
sbb
sbb
lret
lods
in
test
pop
pop
ffree
add
jge
push
clc
loop
dec
nop
pop
call
add
into
xlat
cmp
push
addb
loop
push
cmp
or
and
mov
fadds
add
push
mov
fwait
cmp
add
repnz
add
movsb
and
clc
loopne
add
xchg
jg
adc
inc
dec
repz
cmp
sbbl
sarl
jnp
mov
pop
or
dec
mov
and
xchg
mov
popf
xchg
cltd
pushf
stos
push
xor
notb
xchg
imul
lods
lea
jns
repz
push
dec
outsl
outsb
mov
mov
lods
aad
clc
push
repnz
mov
lret
sub
fadd
add
mov
dec
fisttps
mov
popf
nop
lcall
add
and
mov
fcom
fucomi
xor
les
cli
clc
jns
into
mov
and
add
inc
out
loopne
cmpsb
add
push
in
add
test
or
add
fmull
jb
add
arpl
mov
push
int
jmp
iret
data16
jmp
xchg
cmpsb
nop
iret
addb
sbbl
add
imul
mov
outsb
pop
adc
popa
add
or
lods
xchg
jge
adc
test
push
add
xor
adc
sub
push
data16
cltd
loopne
mov
pop
sbb
mov
mov
adc
enter
fsts
mov
lea
adc
call
push
inc
add
mov
inc
add
mov
dec
in
aas
movsl
xor
bound
xchg
ret
mov
push
fcmovne
adc
jbe
mov
pop
je
es
sub
or
inc
add
fisubl
add
lea
in
std
addl
jb
repnz
add
cmp
mov
add
mov
pushf
out
xor
push
into
sub
xor
mov
push
push
es
gs
add
fcompl
ds
je
mov
jmp
hlt
sub
in
xchg
movb
add
xchg
dec
bound
cli
cmp
inc
pop
fucomi
negb
mov
cmp
cltd
xchg
dec
mov
pop
jbe
in
movsl
js
out
xchg
push
popf
nop
and
or
jg
pop
pop
or
jecxz
xchg
mov
incl
nop
cmpsl
aaa
ret
stos
fnstcw
test
lcall
add
xor
lock
pcmpgtb
insl
inc
add
jg
add
dec
fldt
sbb
repz
jle
mov
pop
or
test
jmp
push
push
adc
xor
dec
fimuls
xor
add
cvtps2pd
test
cs
test
sbb
push
in
push
mov
add
stos
mov
and
mov
addr16
imul
maskmovq
idivl
insl
ret
mov
in
push
fstpt
notb
mov
roll
inc
add
int
mov
jne
outsb
mov
jno
imul
das
test
repz
adc
mov
movb
mov
adc
movsl
movsb
pusha
add
lahf
or
or
lret
stos
mov
test
cmp
call
jmp
push
jae
insl
movsb
iret
sbb
add
mov
adc
insl
test
xchg
push
adc
inc
add
cs
sub
cmp
leave
ret
idivb
inc
add
in
xchg
jae
imul
movb
outsl
aam
jge
cmp
dec
mov
ljmp
les
jnp
hlt
je
insl
fldt
jae
sbb
icebp
ljmp
or
lahf
in
push
lock
pop
push
add
bound
dec
test
adc
scas
mov
pop
add
clc
shlb
loopne
jmp
sub
lea
dec
cs
loope
jle
repz
mov
add
mov
in
jg
cmc
rolb
jae
add
in
jp
add
mov
add
push
xchg
and
mov
loope
jnp
xor
push
adc
lds
inc
std
loopne
mov
nop
xchg
lods
jnp
stos
cmpsb
mov
add
adc
pop
mov
push
sbb
movsl
ja
jbe
inc
add
xor
xchg
xorl
incb
add
jmp
addr16
push
sub
loop
icebp
or
sub
dec
popf
push
js
add
cmpsb
pop
das
popa
push
call
mov
int3
iret
test
test
xchg
inc
test
sbb
test
add
sub
add
repz
push
xor
dec
sbb
gs
add
fcoms
loopne
enter
scas
popf
cmp
das
loop
add
cmp
insb
dec
sbb
test
mov
pop
sbbl
cld
jns
jns
add
mov
jg
out
lcall
cmp
test
jecxz
sub
jb
pop
pop
pop
inc
add
fdivrl
repnz
add
add
inc
add
add
add
add
dec
cmp
xchg
xchg
mov
add
or
aam
test
addb
add
lahf
mov
fcmove
lock
xchg
adc
xchg
fbld
pop
inc
add
pop
xchg
out
lea
push
lea
mov
out
popa
dec
sub
inc
add
push
jl
add
mov
inc
add
stos
bnd
xchg
push
mov
xchg
cmc
and
movsl
aam
sbbl
dec
or
dec
push
sub
test
sbb
add
mov
cmp
jb
in
aam
addl
ja
ss
add
jns
xchg
popf
sub
mov
movzbl
jecxz
insl
sub
xchg
int3
jmp
inc
add
lahf
mov
sbb
cmp
jno
mov
test
fldl
adc
push
not
lret
stc
push
add
movsb
mov
jg
test
jg
mov
and
jmp
mov
xchg
jns
int
push
cmp
push
jmp
in
pushf
add
and
pop
out
xor
sub
jno
jae
xor
adc
dec
inc
add
xchg
addb
out
push
cli
ss
leave
pop
or
test
nop
adc
mov
add
cmp
in
mov
add
out
push
add
push
add
add
or
inc
add
jns
xor
add
push
js
xor
adc
pop
leave
cmp
pushf
aaa
subl
xlat
add
dec
sbb
cmp
mov
outsl
test
jne
cmp
xor
mov
add
lcall
in
insl
fs
rolb
std
les
pop
lcall
dec
das
sbb
or
mov
aad
xor
ret
bound
add
movb
out
sbb
xchg
dec
mov
std
xchg
mov
inc
add
fdivrs
in
cmp
add
aaa
and
push
add
rcl
lods
xchg
add
data16
pop
cwtl
sub
mov
add
jo
or
mov
or
or
adc
add
pop
mov
insb
jp
lods
pop
pop
pop
cmpsb
add
sbb
fldt
test
xchg
inc
add
add
loop
jo
pop
daa
adc
dec
jno
test
sbb
add
jb
movups
push
and
into
aas
js
dec
sbb
aas
xchg
jmp
add
popa
loop
pusha
add
sub
mov
frstor
das
jae
imul
inc
iret
sub
lds
adc
sub
cwtl
xchg
mov
or
add
mov
shll
rolb
sub
popa
cmc
enter
cmp
cmp
cmp
add
mov
dec
cmp
lock
or
add
mov
add
add
js
scas
imul
adc
add
sub
add
cwtl
jmp
adc
lret
addr16
push
jae
aaa
adc
add
xor
imul
xor
addl
jne
xor
cmp
mov
mov
add
add
ljmp
sbb
test
adc
in
and
addb
mov
add
movb
push
jnp
mov
fistl
jmp
inc
pop
dec
xchg
mov
data16
pusha
add
out
clc
mov
add
popf
int3
cmpsl
xor
adc
imul
sub
lea
sub
jns
push
cwtl
xlat
adc
xlat
shrb
lret
sbb
sarl
inc
add
test
scas
xchg
into
xor
fwait
jecxz
jno
pop
mov
daa
sahf
xchg
inc
add
xadd
mov
pop
dec
addb
rcll
cmp
add
pop
movsl
push
push
add
jp
addr16
mov
arpl
shll
shl
cmp
ljmp
add
add
push
enter
fs
movsb
loop
inc
and
std
sti
outsl
pushf
xchg
lret
cmp
add
mov
sarb
add
test
imul
rolb
cmp
sbb
inc
insl
cmc
fxch
movsb
mov
sti
call
or
clc
mov
pop
cmp
pop
mov
je
add
dec
xor
test
sbb
stos
push
push
push
jns
nop
lret
enter
add
faddp
fldt
pop
mov
and
and
add
push
sbb
cmp
loopne
sti
mov
add
sarl
sub
push
rolb
cmpsb
iret
xor
sti
dec
iret
loop
xchg
adc
add
mov
add
iret
inc
add
sbb
je
clc
lods
pop
xchg
push
xor
mov
mov
ljmp
lock
je
iret
sahf
push
cmp
lcall
adc
addr16
dec
cmp
adc
clc
rcrl
mov
gs
iret
clc
jbe
push
mov
push
and
adc
rorl
lods
mov
jo
cmp
je
insb
and
push
xchg
push
out
mov
cmp
pop
and
add
add
jmp
add
mov
cmp
insl
sbb
popf
test
push
pop
cmp
pushf
xchg
arpl
fwait
iret
imul
cli
mov
icebp
in
test
and
out
add
test
and
pop
lea
rolb
cmpsl
mov
lods
pop
jge
add
mov
xor
in
ja
dec
mov
jne
xor
xchg
mov
fsubrl
inc
addb
rclb
scas
arpl
sub
pop
dec
mov
pop
mov
popa
and
lods
push
sti
les
cmp
and
outsl
js
in
adc
in
cmp
xor
fs
outsb
ss
mov
add
lock
push
inc
add
push
add
repz
inc
add
and
xor
jp
pop
and
test
stos
and
or
dec
pop
push
add
jecxz
xchg
mov
ret
adc
shrl
push
fnstsw
add
lea
dec
pop
xor
or
mov
adc
fidivs
push
scas
sti
aas
and
add
push
xchg
mov
aam
rolb
add
push
mov
lods
inc
add
addr16
das
mov
jl
mov
add
loop
dec
add
push
mov
loope
cwtl
nop
leave
mov
repz
mov
add
jmp
addb
sub
cmp
sahf
sub
mov
add
pop
jmp
jbe
addb
insb
mov
add
int
cmp
sbb
sbb
test
sub
aam
mov
bound
idivb
xchg
mov
dec
lahf
les
cltd
shrl
jmp
rcl
fistps
divl
jl
adc
popl
mov
mov
out
inc
add
repz
scas
fdivrl
dec
and
inc
push
add
xor
xor
pop
jl
int3
daa
ds
iret
scas
stc
jecxz
mov
add
pusha
add
cmp
jl
mov
aaa
pop
and
sub
add
mov
clc
fiadds
add
add
pusha
add
pusha
add
out
scas
cmp
incb
push
add
jne
and
or
add
cmpsb
movsb
jo
push
mov
icebp
dec
or
cmp
and
test
push
cld
xchg
inc
add
test
mov
inc
push
xor
jmp
add
je
mov
stos
pushf
and
jl
into
in
add
and
out
ja
xchg
outsb
lcall
ljmp
jp
xchg
rolb
jno
iret
outsb
xor
outsb
xor
add
add
xchg
lds
xchg
jg
mov
add
push
jns
daa
dec
fcmovnu
imul
jle
repz
xchg
sbb
mov
add
outsl
dec
std
in
cli
int3
insb
clc
das
jnp
js
icebp
lahf
lods
stc
mov
jmp
addb
insb
out
cltd
cli
cld
add
adc
sbb
stos
pop
imul
aad
shll
in
ljmp
mov
and
lahf
lea
mov
add
lret
shrb
shlb
in
pop
sub
orl
push
frstor
mov
mov
mov
pop
xor
clc
imul
and
cmp
sub
movsb
mov
ja
cmp
inc
add
pop
fucom
out
fcomip
push
cmp
mov
and
enter
je
test
xor
jns
xchg
push
imul
xchg
xchg
mov
mov
sbb
insl
in
adc
adc
out
pop
fdivl
mov
popa
or
dec
insl
cmp
sub
add
add
cld
mov
lret
popf
pop
mov
lret
cmp
lods
push
mov
xchg
fists
popl
inc
sub
and
cmp
push
test
add
sbb
enter
aam
loope
pop
movsb
inc
add
fwait
jmp
repz
or
out
ss
sbb
add
cmp
mov
rolb
add
rclb
in
inc
add
fsubrs
fcompl
inc
add
xlat
pop
sub
test
jge
sub
and
mov
adc
pop
add
pop
shr
pushf
stos
mov
add
mov
inc
cmc
leave
lods
mov
in
or
shr
es
add
mov
add
push
dec
jae
jne
scas
mov
add
xchg
ficoml
jae
dec
inc
add
add
add
and
addr16
scas
jl
add
ds
push
mov
dec
jbe
mulb
jl
xor
cwtl
cmp
std
cltd
roll
sub
cmp
adc
adc
push
iret
mov
add
in
mov
insb
xor
loop
adc
popa
popfw
push
adc
xchg
jae
bswap
dec
out
sub
mov
pop
testl
lret
sahf
sub
aaa
mov
paddq
sbb
push
mull
push
adc
ficoml
loope
jle
jl
test
jl
in
cmp
out
lods
ja
add
sbb
jnp
mov
mov
out
out
pop
inc
out
in
frstor
cmc
dec
inc
loope
movsb
sbb
cmpsb
mov
add
fst
test
mov
lods
lcall
xlat
aas
and
je
mov
call
in
inc
ret
into
lods
fwait
xchg
testl
or
cmpl
clc
in
in
pop
inc
add
adc
in
aam
cmpsw
jg
push
iret
sub
cmpsb
gs
rclb
cmp
test
aaa
push
or
pusha
add
sbb
xor
insl
repz
jbe
lods
hlt
repnz
add
idivl
add
push
or
sub
cmp
add
pop
fs
sbb
sti
add
dec
movsl
fcomps
or
push
call
push
in
inc
add
jne
test
sub
dec
inc
add
movsl
pop
jne
or
cli
sbbl
sub
mov
add
rolb
pop
dec
jns
aas
and
jl
pop
sub
mov
mov
fidivrl
fisubrs
adc
mov
xchg
in
and
mov
rcll
sbb
inc
add
rolb
cld
idivb
stc
push
dec
loopne
stos
mov
dec
out
add
out
add
and
mov
add
lods
xchg
fldl
loop
ret
std
nop
int
and
xor
mov
add
aad
addb
sbb
add
gs
jg
out
nop
lods
lds
add
das
imul
ret
jmp
fsqrt
icebp
add
and
jge
pop
testl
jecxz
dec
sub
push
cmc
mov
jns
rcll
jbe
hlt
sbb
add
or
sub
lods
inc
mov
xchg
ljmp
and
jmp
int
xchg
andl
outsl
dec
mov
xchg
mov
mov
push
negl
es
sbb
jge
xchg
int
cmp
pop
stos
cs
sub
mov
cmpsl
pop
pop
mov
pop
pop
adc
xor
push
add
xchg
mov
aam
bound
jge
rcrb
loope
mov
in
xor
rcl
and
xchg
mov
sahf
in
fs
adc
xchg
notb
lock
jo
ljmp
mov
lret
jb
lds
mov
std
push
sbb
mov
jbe
cwtl
outsb
fisubrl
jmp
out
inc
add
cmp
sbb
xor
cmp
test
sbb
cmp
mov
jnp
add
rolb
cwtl
cli
aas
xor
push
pop
jle
add
add
addb
sub
pop
dec
jno
rcll
add
push
add
cmp
test
cmc
subl
loop
push
mov
or
ljmp
in
xor
lods
jnp
fst
mov
xchg
mov
mov
adcl
add
add
mov
mov
push
jecxz
lods
dec
adc
and
into
mov
cmp
add
push
pop
mov
add
addr16
fcomps
add
mov
add
pop
push
sti
addb
jmp
aam
inc
add
sbb
out
in
pop
cmpl
inc
mov
gs
callw
sub
sahf
addb
loopne
sbb
jo
adc
stos
or
pop
jb
push
jp
cmc
or
add
or
add
repnz
mull
es
in
add
icebp
fcoml
adc
loope
add
add
pusha
add
gs
sbb
mov
rep
jo
rcrl
cmc
pop
clc
dec
lods
packsswb
iret
arpl
movsb
sbb
inc
add
mov
xor
out
cmc
divl
ljmp
cmp
cmpsb
lret
std
mov
add
mov
push
in
loopne
dec
dec
xchg
rolb
out
push
popf
test
sbb
dec
iret
adc
add
cwtl
insb
out
scas
push
arpl
popf
push
outsl
adc
add
add
int
cs
add
jecxz
mov
scas
enter
xchg
push
cltd
xor
cltd
scas
bound
xor
mov
pop
out
jl
add
mov
fimuls
roll
add
pop
fnstcw
pop
inc
add
pushl
lcall
fwait
or
arpl
xchg
inc
add
pop
and
loop
loop
add
scas
mov
inc
and
outsb
insb
iret
and
das
xlat
ret
movsb
dec
sub
jo
pop
rclb
mov
ljmp
loope
push
mov
out
mov
scas
inc
ja
add
pushf
fcos
mov
pop
imul
outsl
lock
ror
or
add
les
xchg
cmpsb
ja
or
jns
inc
add
repz
or
mov
loop
dec
imul
add
add
fimull
shl
enter
sarb
lock
mov
add
lods
sub
addb
mov
jbe
cwtl
jne
and
aaa
ret
jg
test
pusha
add
test
jne
or
add
and
hlt
bound
fnstenv
fsubrs
cmp
popa
pop
fisttpll
lea
and
and
and
mov
inc
add
pop
sbb
add
stc
imul
add
addb
add
mov
out
scas
push
mov
mov
loop
xchg
js
mov
add
adc
int3
xchg
addb
adc
in
dec
dec
push
dec
adc
cmp
aas
mov
pop
pop
or
jge
dec
les
cmpsb
and
cmp
rcl
loop
or
pop
jo
nop
mov
push
lcall
int3
int
sbb
inc
mov
mov
sbbl
inc
add
mov
cmpsl
bound
lahf
jmp
dec
out
inc
mov
jnp
js
test
out
repz
movl
loop
adc
and
lds
mov
and
loopne
or
push
sub
fdivr
sbb
add
dec
jg
jmp
mov
shrl
add
out
jl
mov
imul
jge
out
xchg
lock
clc
jmp
in
fwait
ror
xchg
or
add
jbe
mov
ret
dec
xor
and
cmc
rcl
mov
test
call
pop
push
insb
sub
in
add
xchg
rolb
mov
jae
sbb
sbb
cld
mov
add
and
fcoms
int
xchg
xchg
xor
popaw
nop
in
out
into
add
mov
aam
sub
adc
pop
xlat
push
xchg
lods
lock
pop
and
push
xor
jo
cmovo
inc
add
mov
push
add
mov
dec
cmp
les
test
jne
mov
aaa
stos
xchg
lret
aas
and
mov
mov
add
xchg
cmp
test
fsubr
inc
test
push
in
or
cmpsl
int
sahf
mov
add
stos
cmp
dec
push
fildl
xchg
loope
push
mov
dec
cs
fidivrs
adc
xchg
cmp
je
sbb
dec
cmp
sti
enter
inc
add
scas
mov
pop
test
add
sbb
jns
xchg
out
addr16
mov
add
pop
addr16
jecxz
xchg
ja
pop
sbb
gs
jns
std
sbb
pop
lods
jle
aas
bound
mov
xchg
dec
xchg
dec
dec
xchg
xchg
hlt
mov
jl
inc
add
leave
lds
xchg
mov
mov
adc
aaa
inc
xor
inc
add
jbe
xor
aaa
xchg
bsr
test
out
fldcw
add
add
aam
ss
adc
ja
into
fldt
cmp
repz
xor
xor
movb
fs
aad
inc
add
aas
popa
movsl
jmp
mov
sar
dec
push
sbb
add
fcoml
push
add
jg
sbb
adc
sbb
jb
rcl
dec
stos
xchg
or
dec
add
loop
add
lds
in
adc
lock
pop
mov
dec
add
dec
pushf
movsb
in
fildll
pop
jb
xlat
rclb
xchg
mov
push
inc
add
leave
into
pusha
add
mov
or
push
sbb
icebp
lret
sbb
jb
dec
ret
out
loope
add
mov
mov
inc
add
clc
insl
or
je
scas
mov
jmp
mov
push
repnz
sbb
clc
jg
sbb
mov
jns
aas
dec
add
test
mov
pop
dec
cmpsb
mov
or
xchg
push
les
addr16
pop
jne
push
loope
adc
push
movsl
add
and
push
int
add
jp
lods
dec
dec
dec
mov
add
add
add
xchg
xchg
repnz
pusha
add
cmp
add
xchg
push
rcrl
jno
pop
add
mov
ss
sbb
cmp
in
push
adc
sbb
add
inc
ja
jo
addb
add
xlat
jmp
inc
ss
shl
mov
mov
add
push
jne
add
inc
add
adc
add
or
pop
pusha
add
xchg
add
cmp
dec
out
xchg
pop
and
int
mov
sbbl
inc
cmp
popa
les
cmp
mov
push
out
mov
or
jne
add
and
add
adc
jnp
mov
dec
jl
push
adc
push
imul
adc
add
push
add
in
repnz
xlat
aas
mov
out
xchg
sarl
jge
fs
imul
or
add
jmp
sub
ret
ret
cli
cwtl
cld
cmp
dec
jg
js
add
aaa
insl
mov
jne
ljmp
jbe
mov
inc
add
mov
pop
nop
aaa
aas
dec
pop
sub
or
js
das
ljmp
movb
bound
xchg
xacquire
scas
add
inc
add
aas
cwtl
xchg
cmp
adc
pop
mov
push
mov
lds
pop
loope
xchg
mov
and
adc
sarb
add
and
es
mov
dec
rorb
inc
popa
or
les
xor
add
add
scas
daa
or
add
xchg
aaa
call
jmp
add
jo
int3
popa
mov
push
jae
or
sub
add
pop
testb
push
or
mov
jl
shlb
or
sub
push
mov
or
pop
in
mov
push
bound
mov
add
cld
outsl
dec
xchg
mov
ds
jmp
rorb
pop
in
sbb
inc
xor
cmp
inc
jb
adc
sub
xor
shr
in
or
fstpt
adc
and
and
push
das
fyl2x
jecxz
in
mull
add
add
or
bound
mov
stos
ss
sbb
aaa
mov
test
xchg
imul
add
lds
push
mov
sahf
out
mov
cmp
jg
dec
test
add
pop
lea
js
ret
add
xchg
mov
adc
xchg
icebp
jno
rcll
test
cmp
aam
int
std
movsl
dec
push
mov
imul
in
jg
rcll
add
add
ss
mov
jno
scas
cmp
add
scas
cltd
sbb
add
add
shll
test
call
nop
cmpsb
out
dec
adc
test
test
bound
iret
dec
lea
add
adc
cwtl
add
mov
add
pushf
divl
add
sub
mov
jl
and
add
js
arpl
loope
mov
mov
lahf
int3
or
xchg
fldenv
daa
mov
fisttps
notb
nop
test
sbb
adc
cmc
fidivs
adc
rorb
dec
addb
shrl
pop
test
mov
jno
mov
sbb
loope
fidivrl
pop
lahf
or
fdivl
rcll
inc
add
jp
jo
jecxz
sub
and
stc
or
sub
and
int3
aad
add
cmp
std
das
mov
jo
sbb
aaa
mov
lcall
lret
pop
dec
xor
das
insl
gs
cmc
je
aas
dec
mov
jp
push
loop
stc
test
add
adc
mov
jle
push
mov
popa
adc
adc
mov
add
add
ret
lret
jne
mov
lods
dec
push
jle
or
nop
movb
xchg
add
fmull
cmp
lock
push
mov
adc
add
aaa
xchg
adc
movsl
mov
sub
adc
jnp
jl
sbb
mov
fisttps
std
call
je
jns
movb
dec
push
sahf
mov
jp
jg
scas
test
add
mov
cli
in
fimull
imul
or
aaa
push
inc
mov
cli
shll
jl
daa
push
push
mov
outsl
test
scas
arpl
aam
add
fs
pop
jg
addb
add
dec
mov
imul
fcoms
daa
idivl
mov
cmpsl
xor
les
imul
add
pop
js
ficomps
jecxz
add
xor
das
xchg
jae
dec
js
das
int
jno
xchg
les
pop
push
ja
movsb
xlat
enter
add
jecxz
add
push
push
mov
jl
add
loopne
mov
add
ja
shll
mov
inc
add
push
push
push
mov
cli
mov
fdivrs
fsub
adc
mov
ret
dec
adc
es
xchg
cmp
test
rcll
mov
lea
jae
mov
or
aad
add
mov
cli
sub
pop
sbb
jp
loope
icebp
sub
cmpsl
pop
addr16
lcall
mov
add
cmp
adc
jp
pop
iret
jno
push
push
sbb
into
sbb
sub
popf
or
iret
and
xchg
les
mov
sub
dec
das
into
loope
mov
jecxz
pushf
pop
jle
add
mov
adc
out
add
inc
add
push
mov
scas
outsb
push
dec
jns
popf
push
sahf
mov
add
stc
scas
fsubl
add
adc
add
adc
add
pop
and
adc
inc
pop
add
and
fdiv
dec
mov
mov
loopne
push
add
add
mov
xor
jp
pop
in
jbe
das
mov
in
lods
ljmp
push
adc
sub
xchg
jecxz
mov
or
mov
repz
or
cmc
push
enter
roll
add
js
sub
push
bound
mov
aas
and
and
or
ljmp
xchg
cmp
vmread
sub
outsl
jge
or
lret
or
loop
inc
xchg
push
add
xchg
movsb
mov
jg
fwait
jo
add
outsb
das
adc
add
adc
pop
xchg
in
cltd
cwtl
int3
add
je
addr16
mov
enter
push
dec
and
cwtl
fmul
mov
adc
jne
inc
push
add
cmc
sbb
sbb
es
adc
add
push
xor
inc
add
add
jbe
loop
loopne
mov
add
sbb
jbe
call
jnp
dec
mov
ljmp
addb
add
call
xchg
xchg
cmp
loopne
inc
add
add
fadds
test
popa
ljmp
push
test
rorl
dec
jecxz
shr
pop
add
je
add
out
add
ljmp
sbb
repnz
inc
add
xchg
stos
call
and
aam
xchg
test
repz
add
imul
cmc
dec
fisttpl
shlb
jmp
ss
scas
xchg
mov
leave
cmp
cmpsl
xor
xchg
aaa
inc
jae
fwait
pop
lahf
pop
js
fst
imul
jbe
or
xchg
xchg
xor
jecxz
out
mov
mulb
fcoml
sub
das
adc
sub
or
push
xor
mov
add
outsb
mov
int3
sbb
sub
aad
popa
popl
test
jb
xor
sar
fsub
push
in
add
sub
jae
mov
add
add
lahf
addb
jo
neg
mov
jb
add
dec
dec
sbb
jbe
sarl
loope
addl
clc
or
and
inc
xchg
or
out
shll
mov
fcmovnb
add
jno
insb
rorb
stos
mov
addb
cmp
xor
into
xor
lcall
es
ss
sub
call
insl
vmovsd
rolw
cmp
mov
cmp
dec
mov
xor
enter
movsb
adc
aaa
into
shrl
or
into
xor
xor
add
ljmp
cmpsl
jnp
movsb
imul
fwait
in
xor
jb
pop
push
sahf
pop
cld
test
push
sbb
jge
rolb
pop
push
sub
xor
sti
push
das
bound
dec
xchg
sbb
xchg
mov
add
pushf
test
jnp
sub
adc
sub
subl
pop
fdiv
clc
push
pop
fmul
jl
addb
rorb
sarb
sub
test
inc
add
lahf
push
je
add
sti
mov
pop
es
stos
shlb
mov
add
lods
push
insl
sti
fwait
lret
sahf
push
pop
pop
xchg
shlb
pusha
add
lret
jae
cmp
loopne
fst
cmp
sbbl
pop
mov
pushf
scas
xchg
cmc
lret
lods
ss
mov
or
mov
add
xor
push
stos
outsl
cmp
mov
outsl
sti
sub
fisubrl
or
into
sub
pop
xchg
or
add
mov
pop
je
sub
xlat
xor
add
outsb
xor
je
xchg
mov
rcpps
add
pop
test
cmp
add
dec
repz
mov
mov
add
add
outsb
mov
xchg
ret
imul
aaa
inc
add
add
jmp
mov
fildll
ljmp
add
aas
dec
testl
sbb
pop
add
jp
xchg
adc
xchg
mov
jge
mov
mov
or
pop
cmp
inc
add
cwtl
lahf
nop
mov
push
das
mov
insb
xor
fsts
sub
cmp
lret
xchg
push
add
mov
push
add
or
mov
cmp
repz
enter
push
fdivrs
movsl
cmp
cli
imul
test
mov
insl
mov
aam
fsubp
ret
push
cmp
loop
int
dec
push
xchg
loopne
fidivs
jnp
aad
sahf
stc
push
repnz
daa
mov
stc
jp
mov
pop
addr16
fisttpl
and
pop
lock
mov
and
int
stos
xchg
ss
sarb
lea
testb
pop
dec
out
pop
cmpsb
in
add
les
mov
es
mov
pusha
add
loopne
lret
and
popf
repz
jle
mov
iret
pop
add
xor
out
rolb
inc
lods
and
test
mov
fdivp
pop
testl
lcall
xchg
dec
cltd
in
mov
ret
mov
push
push
add
jnp
test
inc
add
sti
iret
jp
push
mov
cwtl
das
mov
fidivrl
in
pop
cld
icebp
sbb
enter
pop
lock
stc
cltd
mov
leave
push
add
pop
std
sub
pop
les
sbb
outsb
loope
cltd
add
xchg
ljmp
xor
stos
pop
addb
sahf
jge
add
dec
cwtl
push
or
insb
cli
xchg
dec
lret
jb
and
push
stos
mov
out
lret
sarl
mov
mov
and
repnz
xor
and
daa
test
or
fdivl
jns
jno
lret
jle
adc
and
imull
nop
or
das
iret
lods
sbb
xorl
int3
push
ficompl
mov
add
push
push
mov
sub
mov
add
add
jb
cltd
jb
cmc
mov
adc
icebp
jne
gs
cmp
jae
and
sub
add
mov
xchg
lcall
add
mov
popa
cmp
int
pop
outsl
or
mov
dec
push
inc
add
addb
pop
sbb
mov
cmpsl
in
imull
rolb
add
lahf
mov
mov
adc
dec
ret
xchg
call
mov
cwtl
imul
sbb
mov
daa
xor
loope
fstps
jmp
add
and
cmpsl
mov
mov
jae
test
lret
push
push
add
popa
push
add
dec
in
jge
adc
push
loopne
adc
push
mov
add
add
lds
stos
xlat
xchg
cwtl
pop
cmpsl
js
rorb
cmpsb
sbb
stos
xchg
imul
loopne
sahf
mov
in
cltd
pop
jg
xor
bound
cmp
pop
pop
in
fdivr
inc
add
lahf
outsb
pushf
push
sti
imul
movb
mov
ds
popa
js
out
inc
push
cmp
lahf
mov
lahf
decb
xchg
fnstcw
addb
pop
xor
in
xlat
fcmovnbe
jno
icebp
jnp
xchg
icebp
dec
mov
inc
fidivrl
lds
cmp
jnp
das
jns
or
pop
push
add
dec
out
mov
fidivrl
faddl
mov
les
fsincos
out
jecxz
add
stc
fildll
jg
sarb
fwait
aad
mov
xchg
inc
add
out
add
push
cltd
sbb
jne
mov
xchg
divl
mov
nop
xor
jnp
sarb
jae
inc
mov
xor
sub
ud1
add
in
jmp
xchg
mov
aaa
and
xchg
insl
mov
cmp
sti
cld
jo
adc
mov
cld
fisubrs
adc
sahf
fstpl
call
dec
add
jne
add
dec
push
es
mov
sub
stos
cmp
gs
pop
push
add
push
rcl
test
out
lret
inc
add
xchg
cmpsb
and
xchg
dec
in
sub
movb
xchg
pop
out
pop
ds
sbb
xchg
xor
add
pop
or
testl
add
fwait
lds
addb
xchg
insl
sti
lret
dec
in
into
nop
cltd
fldt
rcll
jo
jg
test
mov
loope
jne
sbb
add
bound
mov
arpl
mov
jge
pop
xchg
aam
sahf
add
hlt
insb
insl
lods
in
int
shll
mov
test
add
adc
add
daa
cmp
jl
add
ja
xchg
pop
jns
das
xchg
jl
ficomps
out
int
fiadds
outsb
out
cmpsb
pop
inc
xor
pushf
jp
cmpsb
cmp
cmp
loopne
leave
xlat
faddl
inc
add
enter
add
outsl
call
xor
adc
dec
sbb
call
bound
lock
jbe
sbb
es
push
mov
adc
inc
add
les
sbb
cmp
push
out
adc
add
add
fstpt
inc
add
add
xor
cmp
add
popa
stos
push
mov
aad
out
mov
daa
movsl
das
les
dec
iret
or
cs
adc
mov
mulb
sbb
arpl
lods
je
rcr
hlt
jnp
ja
adc
loop
loopne
cwtl
cmpl
fcmovne
out
sub
insb
pop
jns
jge
or
bound
iret
sbb
sub
jae
adc
movsl
lea
je
jnp
xchg
and
and
dec
sbb
jns
sbb
sub
or
cmp
nop
mov
rolb
sahf
add
dec
xchg
imul
or
inc
cmp
test
xchg
xchg
inc
add
fwait
nop
pop
daa
test
xor
dec
lret
roll
xor
aas
or
mov
pop
or
rolb
add
int
outsb
pop
jecxz
push
adc
addb
aad
inc
add
xchg
jb
jg,pt
gs
dec
test
inc
inc
and
add
cmp
mov
sub
iret
mov
jge
pop
fcoms
add
ret
add
ds
dec
loopne
add
mov
inc
cli
testl
add
mov
mov
mov
mov
ret
add
adc
dec
mov
jno
fwait
push
cmpsb
sbb
push
dec
push
xor
cltd
cmp
jns
clc
mov
add
fisubs
out
xor
loope
jp
and
push
jnp
add
push
fnclex
cs
shll
or
pop
out
or
cmp
fsubrp
shrl
jecxz
pop
mov
add
test
sbb
jns
mov
dec
outsb
inc
mov
pop
shrb
jno
mov
cmp
push
cmc
popa
or
sbb
add
shrl
stc
jnp
dec
xchg
dec
cmp
pop
dec
jb
jae
xor
hlt
pop
adc
mov
sbb
lcall
repnz
jg
xlat
push
or
jecxz
dec
jo
roll
jecxz
in
jbe
mov
ret
inc
add
add
lods
les
push
add
or
push
or
mov
mov
fildl
add
and
mov
fnstenv
mov
mov
rol
dec
mov
inc
add
pop
sti
popl
movl
push
aaa
add
xlat
dec
sub
movzbl
cmp
add
fadd
mov
add
jge
jns
add
dec
call
xor
jle
or
add
jae
xchg
mov
sbb
fwait
lock
loop
movsl
xor
jmp
sub
je,pt
movb
loope
fs
imul
in
test
mov
mov
inc
lock
es
mov
cs
or
into
pushf
test
clc
cmp
add
push
add
sub
dec
mov
pop
sub
enter
xor
call
pushf
push
in
adc
lret
stos
scas
and
sti
insl
roll
push
cmpsl
or
repnz
sub
add
push
ret
test
dec
xchg
xchg
out
push
jbe
xchg
bound
int
jns
and
fsubrp
idivl
mov
les
push
pop
das
mov
add
bound
cmc
adc
clc
mov
int3
inc
add
out
aad
jl
cmp
mov
mov
cmp
dec
frstpm(287
subl
adc
lock
jmp
xchg
or
mov
push
repnz
cmp
push
ja
add
jmp
mov
jmp
test
ja
pushf
xor
push
stc
mov
leave
add
cmpl
ljmp
pusha
add
jb
add
mov
lret
push
aaa
aad
mov
pop
in
int3
cmpsl
cmpsb
xchg
cmp
add
dec
aas
pop
cli
and
add
out
pusha
add
push
sar
dec
xchg
fdivl
or
mov
xlat
mov
inc
add
call
aaa
test
ficoml
add
add
aaa
inc
add
sbb
dec
xchg
jae
sub
pop
test
lea
out
daa
nop
xor
add
cmpsl
and
and
sub
fwait
imul
jmp
lret
xchg
pushl
mov
and
insl
xor
mov
xchg
inc
pop
xchg
dec
mov
out
xchg
sarl
test
cmp
push
xor
add
dec
mov
xchg
jmp
jnp
mov
inc
outsl
cmp
outsb
adc
fstps
jge
fistpll
or
dec
scas
movsl
fadds
sub
add
xchg
fbld
les
fsubr
fidivs
push
mov
lcall
xchg
cmp
pushf
into
out
lds
sti
dec
lret
pushf
flds
adc
lret
ljmp
add
aas
lret
adc
add
sub
cmp
jnp
push
mov
sarl
adc
add
cmp
clc
loop
add
cmp
add
push
into
push
fimull
lds
sahf
push
jmp
cs
add
idiv
out
fsubs
lcall
arpl
adc
jmp
add
mov
xchg
mov
les
ja
add
out
mov
sub
out
in
dec
xor
mov
add
push
or
jb
mov
cmp
in
push
mov
mov
adc
adc
ror
es
mov
add
dec
mov
std
inc
inc
add
xchg
pop
and
add
imul
xor
popf
mov
dec
dec
lahf
sbb
xchg
xchg
jmp
orl
xchg
cmp
pop
movsl
scas
mov
inc
sub
xchg
jl
rolb
add
jmp
add
jg
das
or
pop
inc
add
pop
mov
xchg
inc
repnz
push
arpl
data16
sti
jnp
jle
dec
push
add
xchg
loope
insb
xchg
mov
aad
xchg
pop
ds
mov
adc
xchg
push
pop
mov
and
andl
mov
leave
aas
push
mov
outsl
xor
dec
insb
add
cmc
dec
jns
adc
add
loope
mov
add
lcall
mov
xor
out
mov
push
mov
jmp
mov
lods
mov
adc
pop
xchg
push
aaa
ja
fiadds
aas
sahf
mov
std
flds
test
shl
push
fnstenv
movb
fwait
popf
mull
sbb
mov
push
leave
pushf
data16
cmpsb
cmp
or
sub
scas
aaa
sbb
sahf
ljmp
insl
adc
sbb
das
and
adc
outsb
or
add
je
pop
mov
add
fisttpll
and
pushf
sbb
mov
xlat
jb
add
xchg
out
ljmp
fsubp
mov
or
cmp
mov
mov
inc
add
push
inc
add
fmul
hlt
dec
out
test
out
into
shll
lds
pavgw
pop
mov
shrl
push
cwtl
or
xchg
jnp
push
sbb
xchg
movb
addb
jb
fcmovne
pop
xor
outsl
stc
ljmp
fisttpl
shrb
and
rclb
or
rcrl
sti
out
add
filds
into
add
inc
mov
clc
jg
es
int
mov
repz
push
fildll
pop
mov
push
cmp
add
fists
pop
xchg
add
sub
push
stc
jmp
ja
mov
xor
add
add
in
jae
pop
xchg
cmp
out
pushf
mov
add
inc
add
mov
mov
clc
and
inc
add
dec
sbb
and
add
les
fisttpll
or
out
mov
xchg
std
push
xchg
lods
cmp
insl
stc
movsb
or
mov
andl
je
push
insl
sbb
push
les
dec
cmp
leave
xchg
outsb
lods
fists
mov
ljmp
add
test
inc
add
xor
sub
inc
pop
xlat
sub
lret
xchg
or
xchg
or
inc
add
ljmp
push
dec
jg
jg
add
jns
or
jno
mov
icebp
pop
aam
scas
push
es
adc
pop
inc
add
cs
ljmp
aas
inc
add
mov
psllw
bound
adc
add
sub
ss
add
and
xorl
idivl
lods
insb
cmpsb
push
shr
mov
div
lods
data16
pop
mov
push
xchg
and
xlat
inc
ficoms
push
lea
js
in
test
into
sub
imul
add
add
pop
xchg
leave
jecxz
loop
stos
adc
pop
imul
add
hlt
push
iret
sub
shrb
lahf
add
dec
ret
jle
inc
add
or
dec
cmp
sahf
mov
or
int3
scas
inc
add
sbb
outsb
int3
ret
jp
add
shll
subl
rolb
sbb
jmp
mov
outsl
cmpsb
or
rolb
cltd
cli
sbb
cmp
pushf
iret
testb
fwait
and
int
cmpsl
push
iret
hlt
add
adc
add
dec
les
dec
cmp
in
xor
or
int
add
pop
mov
cmp
pop
scas
xlat
cmp
lds
mov
lahf
ret
lds
jae
add
pop
xchg
addr16
jns
andl
jo
fldenv
popa
pushl
push
lock
push
jbe
and
stc
in
add
pushw
add
mov
add
or
jns
fidivs
cltd
jne
in
bound
lods
test
and
mov
int
sub
es
mov
rclb
mov
aam
adc
bound
aas
shl
jae
pop
std
ffreep
std
xchg
sub
sbb
jg
sarl
jp
ljmp
add
sbb
push
adc
xlat
loope
aam
loope
rolb
add
xchg
adc
jbe
add
test
fs
cmp
push
xchg
jle
lcall
add
push
and
test
frndint
fsubrl
jp
add
pop
push
cli
xor
std
push
adc
push
fldt
scas
in
and
add
xchg
aam
xchg
enter
cmc
pop
xor
pop
mov
add
fsubrs
rcll
dec
pop
je
je
push
mov
add
add
jg
je
test
divl
ja
mov
mov
sub
mov
cmp
jns
rcrl
sub
les
in
rcll
scas
std
mov
sbb
lahf
call
cli
push
xor
cwtl
shll
add
xor
js
fldcw
add
test
aaa
addr16
and
or
cmp
sub
ss
jae
mov
add
in
push
mov
pop
pop
movsb
push
test
fadds
addr16
es
xchg
mov
das
clc
pop
or
int3
cmp
stos
dec
addb
fldenv
aad
or
clc
add
out
pop
inc
add
mov
pop
cmp
add
leave
and
addb
mov
xor
inc
mov
cli
adc
cmpsl
sbb
adc
cmp
js
loop
int
dec
es
call
icebp
fisubrl
jnp
outsb
dec
ja
xchg
pop
out
push
loope
into
cmp
addb
pop
mov
or
ljmp
fwait
gs
cmp
push
daa
iret
std
jb
and
inc
mov
cmp
sbb
sbb
jmp
dec
cltd
jmp
enter
movsb
fisubl
mov
nop
add
cmp
jns
test
jbe
mov
les
stc
fmull
mov
pop
addb
jb
loopne
add
sub
add
sarl
sbb
add
cs
xchg
jl
add
cmpsl
dec
scas
notl
mov
sub
in
add
or
inc
add
fnstenv
mov
pushf
push
cmpsl
in
mov
cmp
loop
ds
movsl
fldenv
fiaddl
sub
insl
adc
ret
cmpl
outsl
mov
cmp
les
xchg
mov
mov
movsb
ret
les
enter
icebp
lret
pop
and
jno
mov
pop
mov
fsubr
cmpsl
xor
mov
push
mov
test
dec
jbe,pn
ja
lret
xor
mov
loopne
xor
pop
mov
xor
add
push
add
adc
mov
rolb
das
clc
pop
ds
add
pop
mov
cltd
call
in
pop
pushf
cld
stos
dec
cmp
push
add
outsl
jns
popf
mov
xor
scas
mov
xor
mov
popa
xlat
call
icebp
push
xchg
dec
pusha
add
stos
add
push
xchg
int
in
inc
add
xchg
pushf
xor
js
jno
jp
mov
lcall
lret
sbb
cmp
ret
in
mov
pop
mov
imul
out
fwait
push
aas
mov
add
and
sti
loopne
mov
jmp
test
stos
movb
lock
lret
sub
and
cmc
push
ja
fdivrs
push
pop
pusha
add
out
mov
stc
outsb
addr16
or
nop
lret
movsb
sbb
add
cs
push
movsb
xor
add
dec
ret
negl
int
hlt
pop
pop
pop
cmp
addb
aaa
fdivrs
popf
enter
push
push
push
jp
inc
sahf
test
pop
jp
mov
subl
mov
data16
inc
add
imul
cltd
aaa
push
sbb
adc
add
dec
cli
repnz
outsl
mov
cltd
hlt
mov
adc
lret
pop
sbb
cmp
dec
dec
cli
and
imul
ret
push
mov
add
mov
pop
popa
sub
push
test
xor
mov
add
incb
pushf
lret
dec
xor
cwtl
std
inc
xchg
movsl
mov
or
or
popf
sbb
jns
mov
out
xchg
icebp
call
inc
add
loop
mov
sahf
lods
enter
add
mov
sbb
inc
scas
in
ret
sub
js
movsb
stos
aad
inc
lods
mov
sub
jnp
dec
add
lret
xchg
dec
clc
mov
sub
xor
cmpsl
jns
push
add
enter
out
aad
xor
aas
inc
add
mov
cmpsb
fsts
adc
data16
add
inc
imul
fimuls
js
loop
pop
adc
and
mov
xchg
lea
add
roll
pop
out
push
jecxz
testl
loopne
bound
fwait
addb
jo
fwait
cli
repz
mov
das
insb
test
leave
jl
mov
sbb
mov
inc
divb
push
daa
xor
inc
das
clc
repnz
shr
iret
pop
and
enter
add
les
mov
popa
mov
add
aad
xor
pusha
add
lods
in
or
insl
mov
into
adc
insl
test
push
jge
nop
cmpsl
bound
adc
fwait
imul
xor
jae
jecxz
add
repnz
out
scas
sub
aas
shlb
mov
inc
add
push
sbb
imul
sub
inc
add
inc
fwait
mov
mov
cmc
scas
stos
rcrb
loopne
push
jae
add
in
hlt
std
decl
bound
dec
sbbl
push
lods
icebp
nop
aas
jp
push
adc
inc
lea
inc
add
or
sbb
pop
push
add
dec
cmp
add
wbinvd
data16
loop
lods
pop
push
bound
cmp
loopne
mov
fcompl
mov
and
dec
aas
mov
pop
es
xor
pop
jg
inc
pop
lret
movsl
addr16
lds
and
ja
cld
imul
jmp
mov
loopw
xor
mov
outsb
mov
loopne
dec
shlb
add
repnz
jle
push
lea
lret
add
pusha
add
dec
mov
and
pop
cs
inc
sahf
sub
xchg
push
lock
test
loope
stos
pinsrw
insl
std
mov
add
add
mov
ja
shll
add
out
arpl
je
add
scas
fstpl
imul
shrb
ficompl
cld
ljmp
adc
jae
imul
outsb
mov
push
push
cmp
mov
sub
adc
std
pop
mov
add
pushf
add
out
push
es
jge
pop
inc
add
or
jb
push
cli
cmpsb
mov
xor
add
mov
add
iret
subl
lahf
push
or
mov
stos
and
sti
cmc
push
or
and
cmp
enter
in
add
sbb
js
add
adc
or
inc
push
sbb
mov
ljmp
mov
xor
cmpsb
jne
xchg
sbb
mov
fs
cmpl
dec
lods
idiv
bound
jno
mov
mul
fisubs
mov
inc
add
cmp
adc
fbld
add
mov
lahf
mov
jmp
push
cli
shlb
mov
add
popa
fstpt
test
sti
mov
and
ljmp
pusha
add
dec
stc
ss
mov
mov
pop
int
inc
push
test
push
cmp
insb
out
aaa
mov
hlt
dec
jae
ret
cmp
imulb
xchg
dec
mov
push
fsub
mov
pop
cmpsl
or
loope
adc
inc
out
call
add
shlb
es
mov
popa
aas
in
in
scas
movsl
sbb
rol
add
dec
or
loope
lods
test
ss
movsb
mov
inc
add
mov
sbb
fisubrs
add
lods
ss
mov
sti
rcr
stc
dec
mov
lret
test
cmp
add
addr16
pop
inc
xor
aam
adc
imul
lahf
sahf
cmp
popa
mov
add
xchg
mov
ljmp
mov
jl
incb
sbb
addb
jb
xchg
mov
rclb
mov
in
mov
icebp
lret
push
jno
or
sti
push
in
cmp
add
sti
pop
or
push
push
add
insl
loopne
or
add
add
sub
sbb
push
cmc
sub
mov
mov
inc
add
int3
cs
shll
jae
sbb
in
pushf
mov
inc
add
int3
inc
add
stc
sahf
int
jo
sub
mov
test
call
adc
jmp
mov
ljmp
pop
push
pop
int
cmp
sahf
push
in
or
test
ss
addb
add
js
jne
dec
and
lret
add
fists
mov
jns
jl
bound
pop
hlt
pop
lea
push
push
pop
jno
aad
aas
movb
cld
lret
js
rorb
pop
jge
and
pop
and
lahf
sbb
outsb
into
fiaddl
mov
add
pusha
add
push
push
push
test
push
add
sub
arpl
mov
pop
xor
cmpsb
jg
popa
test
lret
out
pop
loope
mov
sub
roll
lahf
mov
sbb
xchg
xor
stos
test
iret
out
push
adc
add
ss
in
mov
inc
pop
les
or
jecxz
repz
mov
cmp
push
cmp
mov
out
outsb
test
sahf
out
push
pop
scas
jnp
sahf
lahf
fs
iret
xor
xchg
imul
pushf
divl
push
repz
subl
insl
push
outsl
stos
cwtl
je
adc
out
pop
push
adc
sub
pop
mov
jecxz
pop
ret
xchg
outsl
inc
inc
call
adc
add
xor
fdivrl
and
pop
dec
out
int3
rolb
gs
addl
add
inc
int
scas
add
js
xor
and
cmpsb
pushf
lret
mov
mov
xchg
xorl
or
lcall
mov
lret
scas
push
lret
jnp
incl
push
fistl
mov
cmp
xor
pop
mov
add
fidivl
xor
jb
les
and
jnp
add
dec
inc
add
pop
add
mov
mov
add
mov
addb
cld
add
js
sub
add
add
add
pusha
add
lea
mov
fildl
add
loope
sub
add
dec
in
das
or
add
sub
push
ret
or
fidivrs
dec
sub
pop
push
ds
loop
movsb
push
sbb
test
xchg
jmp
add
sbb
daa
xchg
adc
call
lods
and
mov
stc
inc
lea
push
push
mov
mov
lock
mov
sbb
inc
sub
shll
cmp
mov
sti
fnstenv
adc
push
xor
and
push
ret
pop
adc
cmpsb
lods
push
and
rolb
mov
jmp
pop
dec
mov
hlt
stc
js
fwait
xchg
mov
leave
and
xorl
out
or
dec
out
fwait
jae
cmp
lds
outsl
popf
dec
jle
push
or
mov
dec
sub
cmpsl
addb
addb
pop
lret
jp
outsb
pop
xchg
push
mov
add
add
out
mov
add
xchg
mov
dec
jne
lret
in
movb
xchg
in
movsb
pop
add
add
xchg
pop
xlat
sahf
push
mov
mov
imul
mov
sbb
mov
js
fwait
pop
mov
mov
repz
adc
sbb
imul
adc
pop
int
stos
mov
jecxz
inc
add
scas
popf
fmulp
lock
cmp
push
pop
adc
dec
sbb
out
inc
add
inc
add
clc
stos
and
bound
scas
rcrb
loopne
sbb
xchg
and
mov
jmp
pop
je
mov
pop
out
jge
fucomip
adc
rcrb
pop
xchg
mov
popf
inc
scas
ljmp
pop
adc
mov
jae
je
cltd
js
pop
and
test
mov
jmp
add
mov
fstps
sahf
lcall
mov
movsb
and
bound
lods
pop
fdivs
movsl
fs
add
jb
cwtl
mov
ficompl
xor
xchg
fsubrs
fcoml
imul
push
add
cs
leave
in
cmp
fildl
add
mov
fucom
mov
adcl
cltd
pop
jns
add
mov
jae
xchg
test
scas
cmp
push
into
xor
and
add
rcl
bound
pop
inc
add
lock
mov
adc
rcl
fstl
stos
ss
mov
sub
mov
and
jo
and
test
pop
aad
push
arpl
das
and
movsb
imul
add
add
dec
cmp
jae
call
mov
bound
testb
test
xor
std
jecxz
xor
sbb
pop
movsl
insb
mov
aad
xchg
jl
cmp
mov
jl
rolb
filds
add
xchg
add
out
sbb
cwtl
filds
cmc
xor
add
lock
fstp
inc
add
mov
add
mov
pop
rorb
stc
sbb
mov
mov
push
xchg
jae
add
inc
cmp
jmp
jle
jae
xor
daa
mov
xor
mov
aas
nop
ret
outsl
xchg
pop
push
xchg
mov
adc
push
mov
ds
sub
cmp
jecxz
cmpsl
jb
aad
xchg
adc
dec
sbb
jns
incb
mov
cmp
sub
test
cwtl
jns
add
testl
int3
rcr
out
sbb
jns
jp
lcall
xchg
std
push
pop
xchg
fs
sbb
sbb
sbb
ret
add
adc
roll
add
push
cli
xchg
filds
bound
js
or
ljmp
mov
xchg
dec
les
add
fsubr
jno
jae
pop
je
in
fwait
dec
pop
xor
add
repnz
sbb
mov
orl
clc
das
mov
aas
dec
mov
add
lret
dec
inc
add
dec
or
cmc
insl
fistpl
iret
popa
and
pop
les
adc
cltd
scas
shlb
pop
es
das
jmp
jne
loop
mov
add
enter
ret
outsb
es
sbb
jecxz
xchg
les
ss
mov
enter
mov
pop
fs
add
xor
shl
addb
sub
sub
lods
mov
lret
ret
call
int3
rorb
adc
dec
mov
add
mov
cmc
insl
mov
insl
push
pop
xlat
cmp
out
mov
add
mov
jecxz
xchg
pop
add
adcl
jnp
test
in
mov
pop
in
cwtl
jae
pop
push
lcall
pop
pop
je
aaa
daa
push
rsqrtps
es
jg
xchg
shlb
cmp
push
add
xor
movsl
fmulp
cmpsl
sti
lret
out
dec
dec
popf
push
add
pop
shr
and
sub
xchg
cli
fdivrl
cmp
add
xchg
xchg
stos
loop
mov
outsb
mov
xchg
add
lods
pop
cmp
movb
xor
mov
lock
cmp
or
or
int
in
pop
or
sbb
mov
xor
movl
insl
in
ret
lcall
push
fidivl
fwait
sbb
lea
loopne
push
call
inc
add
lock
stc
in
sub
jns
outsl
mov
aad
fildl
add
arpl
jnp
dec
clc
and
int3
sub
push
outsl
ja
lret
xor
int
push
add
mov
mov
imul
inc
add
adc
or
jmp
bound
mov
push
lea
sahf
sbb
into
dec
aam
pop
outsb
adc
or
and
cmc
add
pop
stos
hlt
pop
cmp
adc
mov
mov
popa
and
jb
mov
adc
inc
mov
faddl
push
imul
imul
shll
pop
arpl
mov
add
dec
or
lahf
push
push
add
add
in
dec
and
repnz
int
pop
nop
out
mov
jae
lret
pop
loop
xchg
outsl
and
jecxz
add
int
add
dec
fwait
ret
pushf
call
xor
in
jnp
ret
cld
fimuls
les
mov
add
or
lock
cmp
inc
xor
add
xor
paddd
leave
mov
add
