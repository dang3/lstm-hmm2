rcll
dec
iret
testb
insl
dec
and
mov
add
add
inc
add
add
or
mov
push
in
or
sbb
xchg
add
pusha
add
rolb
add
and
pop
lock
mov
scas
mov
xchg
add
lods
out
dec
pop
adc
mov
add
push
test
fldt
push
adc
add
mov
add
test
sub
add
stos
xlat
repnz
add
sti
sub
loope
cmp
loopne
pop
pop
sub
mov
loop
in
imul
ficompl
jge
dec
testb
add
mov
add
sbb
out
sbb
add
xor
test
loopne
or
in
movsb
add
add
push
push
cld
call
sub
mov
cs
es
ss
lea
push
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
sub
push
pop
push
push
jmp
jmp
add
add
sti
add
inc
mov
xchg
add
add
mov
add
add
ja
add
xchg
cld
pop
lahf
test
pop
inc
add
xchg
lods
daa
repnz
inc
xchg
add
sbb
out
pusha
add
mov
and
mov
popa
pop
sub
test
add
add
xchg
add
mov
mov
jno
xor
dec
negl
sub
call
enter
lock
mov
loop
test
or
add
add
sbb
jns
or
jb
jg
mov
sahf
movsl
xchg
cmp
data16
add
dec
jns
add
add
mov
add
aad
mov
fidivrl
daa
bound
mov
or
call
repnz
xor
daa
rolb
out
add
add
rolb
push
add
xorl
xchg
add
add
add
inc
out
pushf
jns
cwtl
lea
das
lret
test
add
rolb
data16
lahf
cs
cld
fwait
sbb
lds
add
jo
enter
push
pop
das
incb
add
movsb
add
fimuls
pusha
add
jge
movb
lahf
add
out
aas
sub
mov
movsb
add
xchg
push
add
imull
mov
imul
sti
mov
in
fsubr
es
add
stc
push
movsl
cwtl
rolb
js
add
mov
mov
add
xor
data16
adc
in
xchg
add
mov
lret
add
add
cmova
popf
push
add
sub
setae
sub
add
jp
call
aas
popf
movsb
add
nop
add
loopne
jp
aam
ficompl
mov
inc
sub
mov
movb
add
lcall
sub
jge
add
add
mov
pop
push
and
mov
mov
jmp
mov
add
lea
dec
fnop
add
lahf
add
ret
push
sub
xor
mov
add
add
sbb
lcall
add
sbb
pop
sahf
xchg
add
mov
add
xor
testb
add
repnz
int3
ffree
add
adc
mov
mov
add
sbb
push
add
loopne
jns
ror
inc
jp
popf
add
stos
and
inc
jp
sub
faddl
ret
ds
hlt
add
add
pop
fdivp
add
add
add
xchg
aam
dec
mov
mov
add
mov
lcall
jb
inc
add
jnp
scas
inc
add
insl
pop
sbb
add
stos
mov
les
inc
add
pop
push
pop
jle
add
in
mov
loopne
mov
push
lods
mov
xor
add
or
les
rcll
add
in
in
in
lds
shll
dec
lahf
mov
or
add
sbb
mov
and
sub
fcoms
add
loope
push
rolb
leave
or
sti
pusha
add
je
je
int3
or
push
add
add
add
imul
data16
ss
clc
add
cmp
jbe
in
out
mov
push
push
add
out
mov
out
lcall
mov
adc
jo
mov
repz
add
pop
jo
push
cs
pop
jecxz
add
call
lods
xchg
sbb
add
xor
pop
xor
inc
and
mov
or
pop
xor
idivl
mov
std
movsl
mov
scas
xchg
and
lahf
lock
jmp
movb
add
out
repnz
add
out
test
mov
pusha
add
push
add
cmp
add
add
pusha
add
jo
mov
daa
je
xchg
jmp
add
push
add
add
ljmp
mov
lds
add
insl
mov
stc
scas
mov
pop
mov
int
add
mov
add
repnz
add
cmc
icebp
xor
xor
movsl
xor
sub
add
add
jl
add
repz
pop
lock
in
adc
jnp
add
xchg
add
cmpsl
sub
insb
add
dec
pop
test
scas
iret
in
xlat
xor
push
add
mov
add
sbb
imul
lods
adc
imul
xchg
add
pop
lret
ja
mov
out
or
mov
inc
add
movsl
mov
jb
inc
xchg
add
inc
add
ljmp
cmp
add
mov
and
add
add
push
add
out
pop
lahf
cmp
add
inc
movb
mov
push
add
cmp
sub
mov
imul
lock
mov
fsubr
adc
pop
sbb
lret
mov
inc
add
push
inc
add
outsl
insl
inc
add
add
add
mov
add
adc
push
or
add
loopne
daa
and
add
dec
addb
and
jge
add
mov
push
add
stc
test
stos
mov
js
add
das
pushf
pop
xchg
movsl
jo
sbb
add
add
xor
inc
add
push
add
add
adc
pop
outsl
mov
mov
pop
xchg
add
and
add
loop
movb
sbb
in
fsubs
add
push
cld
jnp
jnp,pt
xchg
inc
add
dec
xchg
insb
lcall
add
fisttpl
addb
pop
sub
add
lret
pop
cld
inc
add
fisubs
rolb
mov
movsl
sub
lods
lahf
mov
dec
cmp
cmp
mov
loop
xor
lock
adc
or
add
int3
or
adc
xor
add
rol
cmp
add
add
shrl
out
add
mov
daa
pusha
add
add
add
jns
push
sub
testb
popf
stc
jne
mov
jmp
mov
rolb
dec
xchg
add
cmp
lcall
add
jae
mov
add
ret
add
add
pop
orl
shrl
xchg
add
ret
out
dec
add
and
mov
add
sbb
add
and
mov
add
insl
jle
inc
rcr
xchg
adc
and
mov
add
mov
addb
dec
shl
add
add
cmp
iret
push
add
or
add
dec
call
int
add
add
add
xchg
imul
dec
add
aam
sahf
cmp
inc
add
cmp
push
add
lret
sbb
jns
xor
add
mov
sbb
mov
mov
movsl
test
outsl
repnz
mov
icebp
insl
sbb
movb
sbb
add
add
mov
ds
cltd
mov
pop
out
fimull
add
pop
lret
add
rcrl
ja
sahf
inc
add
add
add
rolb
adc
insb
inc
ja
add
fisubrs
mov
add
add
mov
xchg
add
mov
lods
pop
jbe
fdiv
push
push
push
jnp
add
push
scas
movb
push
add
dec
adc
mov
sti
mov
xchg
add
mov
rcl
xchg
es
xchg
outsl
jbe
aam
mov
and
mov
sbb
mov
push
shll
stos
mov
call
mov
adc
cmp
add
add
add
stos
mov
add
lret
xor
loopne
sti
cmpsl
inc
sub
add
pop
cmp
pushf
clc
mov
push
add
jge
hlt
add
add
adc
fldcw
cmp
dec
ljmp
stos
or
push
vpmovmskb
add
into
fisubs
or
add
mov
mov
pusha
add
add
push
or
test
push
add
int
mov
fsubr
mov
add
mov
ret
push
add
and
insl
sahf
in
fs
inc
aam
mov
das
fcom
inc
adc
dec
fsubrp
xchg
add
sbb
int3
dec
push
add
add
xchg
mov
push
sbb
cmpsl
outsl
jmp
cmp
add
in
jae
repnz
sahf
mov
add
cmovl
fiaddl
add
cmc
mov
mov
jne
add
popf
cwtl
nop
add
mov
insl
leave
and
mov
dec
fldt
sbb
and
add
add
imul
mov
push
add
xchg
cmp
add
add
je
push
loope
add
mov
cmp
and
add
pop
out
test
scas
lods
out
xchg
push
dec
mov
xchg
adc
add
xor
and
pop
mov
jbe
mov
ja
xchg
mov
test
fdivr
mov
add
xchg
add
mov
mov
test
outsl
mov
add
mov
add
iret
jmp
gs
roll
and
pop
mov
add
jl
adc
cmp
add
mov
call
mov
in
cmp
jecxz
data16
add
add
mov
mov
add
add
icebp
repz
stc
xor
ret
and
xor
push
add
sbb
xor
fisttps
add
ret
in
push
add
jp
fs
pop
or
mov
xchg
stos
mov
dec
sbb
inc
test
add
sti
inc
add
xchg
add
push
add
push
add
rcll
mov
ds
pop
jb
popf
dec
sub
insl
mov
repz
sub
add
mov
push
scas
add
out
sub
test
jb
sbb
rolb
outsl
and
add
test
add
insb
sti
in
xchg
and
mov
mov
mov
add
add
in
add
movsl
pop
movb
add
jp
cmc
mov
shll
add
pop
and
bound
mov
add
and
mov
mov
push
or
add
mov
pop
xor
aas
ja
add
out
sahf
test
arpl
std
arpl
pusha
add
add
test
dec
xchg
add
nop
add
add
push
jae
cld
cmp
inc
xor
add
jp
or
and
mov
add
add
add
add
add
cmpsb
add
xor
insb
cmpsb
add
sbb
add
add
mov
jns
loopne
in
pushf
or
pop
add
mov
add
add
add
push
add
int3
jns
add
add
mov
mov
ljmp
add
mov
xor
in
add
mov
sub
insl
inc
add
add
cmp
movb
adc
add
pop
out
lahf
arpl
mov
jb
pop
repz
push
add
iret
je
add
mov
daa
jl
fcmovu
pusha
add
out
pop
pusha
add
add
xchg
in
sub
stos
data16
mov
add
add
pop
outsb
lods
sbb
and
xchg
hlt
add
add
add
dec
push
mov
test
mov
movb
iret
xchg
push
xchg
pop
cmpsl
mov
push
push
add
jnp
out
push
add
mov
add
add
push
add
inc
pushf
or
xor
push
push
fdivl
fisubs
mov
ficomps
mov
rolb
pop
dec
and
mov
add
push
add
int
add
mov
sub
add
add
ret
daa
add
mov
add
or
mov
xorl
add
add
js
stos
mov
je
enter
test
jl
movsb
add
xlat
mov
push
sub
push
mov
lea
xchg
add
into
add
mov
add
fisubs
add
dec
iret
push
add
add
sub
imul
lods
imul
add
add
cmp
push
jb
sbb
add
addl
add
xor
clc
repz
and
cmp
or
in
or
pop
outsl
mov
or
add
cli
js
pop
inc
in
dec
leave
movb
mov
negl
push
xor
loopne
push
rolb
xchg
add
cmpsb
add
and
ja
mov
or
push
add
add
add
in
lret
lea
pop
lock
lds
and
nop
add
cmpsb
add
addr16
adc
addr16
testl
les
inc
add
pop
out
insl
rolb
gs
pop
mov
in
pop
inc
add
sti
adc
popa
fsubp
lods
imul
data16
pop
stos
popa
stc
inc
jo
popa
test
push
add
das
ret
push
push
add
add
add
mov
fstpl
and
mov
pop
inc
add
dec
cld
nop
add
movsb
add
mov
mov
push
add
mov
add
push
add
sbb
nop
add
insb
jle
mov
out
test
add
inc
add
and
add
addb
in
pop
lea
cmpl
push
xchg
add
add
data16
add
jns
aaa
cld
pop
mov
inc
loope
stos
lods
je
cmpxchg
fcomp
add
stos
cmc
fnstcw
and
fidivs
ret
mov
add
and
scas
out
inc
sahf
icebp
std
loope
mov
out
add
mov
add
mov
fcmovnbe
stos
inc
add
pushf
out
ret
inc
into
out
jg
add
test
leave
nop
add
add
add
scas
xchg
add
add
cwtl
cmpsb
add
add
fstl
push
add
lahf
mov
mov
sub
insb
mov
cmpsl
or
and
mov
xchg
add
inc
daa
nop
add
add
adc
xchg
add
in
insb
aas
loope
das
jns
lea
addb
in
push
add
push
add
out
lock
iret
mov
test
movsb
add
loop
add
mov
jae
mov
lcall
sub
add
pop
adc
mov
add
int3
dec
outsl
adc
bound
mov
mov
loopne
xchg
incl
cli
ror
rolb
add
ret
xchg
add
adc
xchg
add
adcl
arpl
pop
or
sub
ret
xchg
add
lods
int
mov
fdivs
inc
add
enter
shll
dec
sbb
add
add
xor
add
das
aas
adc
add
push
add
add
add
push
push
push
add
add
add
lret
jmp
xchg
add
clc
jecxz
mov
push
outsb
in
sti
or
shll
add
sbb
add
mov
xor
lret
add
in
outsb
loopne
or
or
xor
lcall
movsb
add
loopne
nop
add
add
add
adc
fldcw
add
dec
gs
add
dec
sub
mov
shll
sub
add
add
add
imul
stos
add
mov
add
pop
sub
jb
out
ljmp
pop
dec
jge
add
in
lret
imul
and
push
sub
inc
add
data16
sbb
add
add
in
or
sahf
jbe
mov
stc
outsl
movsl
dec
aas
mov
xlat
lcall
add
mov
add
sbb
add
xchg
sub
cli
xor
mov
cmp
outsl
insl
idiv
mov
orl
jnp
fdivl
add
push
in
rolb
jb
add
insl
add
lret
xor
lahf
mov
aam
je
add
add
add
add
mov
add
outsl
add
xchg
add
es
mov
add
mov
push
add
add
or
add
push
add
add
rolb
pop
cs
xlat
push
add
mov
jg
inc
add
add
add
jb
mov
cli
scas
jle
push
add
in
sub
add
add
add
jno
mov
add
and
cld
cmp
jle
rolb
add
sbb
mov
fsubs
add
or
pop
daa
std
rolb
cmpsl
mov
imul
inc
add
repz
xchg
add
xor
ret
out
push
add
fidivs
inc
add
add
xchg
add
add
jmp
mov
or
add
add
in
push
add
mov
mov
jl
xor
sbb
cmpsb
add
pusha
add
add
sbb
mov
test
dec
cmpsl
and
aaa
mov
jae
mov
and
mov
pop
xor
push
mov
push
add
add
mov
inc
in
dec
or
sub
rolb
adc
rolb
inc
stos
inc
add
enter
or
das
int3
add
mov
add
add
mov
lret
dec
sahf
clc
fistpll
jns
adc
jecxz
or
and
mov
dec
xchg
cmpsb
add
or
in
int3
pop
pop
sub
and
loope
mov
sbb
in
outsb
data16
xchg
cmp
mov
add
add
mov
add
xchg
loope
jae
daa
mov
scas
je
movl
add
inc
add
dec
mov
xor
add
add
add
sbb
add
jo
push
sub
add
add
testb
and
mov
stos
daa
bound
mov
pop
popa
rolb
sub
add
dec
and
into
inc
add
dec
inc
test
movsl
out
push
add
icebp
inc
add
xor
mov
mov
inc
mov
sbb
out
add
mov
add
add
outsb
test
das
rolb
jp
arpl
les
fiaddl
jb
add
xor
xchg
test
test
mov
add
sbb
add
add
add
xchg
add
add
out
mov
aaa
adc
add
add
mov
fisttpl
dec
imul
add
test
or
stc
rolb
fnstenv
stos
and
mov
sar
jmp
pop
xchg
add
dec
imul
mov
mov
add
mov
add
add
mov
jne
movb
add
mov
inc
pop
sub
int3
test
aam
sub
mov
add
mov
add
or
mov
xchg
inc
add
add
add
cwtl
and
or
mov
jecxz
xchg
loopne
and
jns
mov
in
mov
mov
xchg
add
adc
mov
mov
push
add
out
loop
sbb
movl
add
push
add
mov
add
cmp
add
or
cltd
cmpsb
add
sbb
cltd
inc
push
xor
outsb
cld
sbb
mov
pop
rcrl
add
das
xchg
out
mov
jnp
in
dec
ret
lahf
and
fsubr
int3
xor
in
std
enter
sub
pop
dec
test
rolb
or
push
out
mov
repnz
add
add
dec
adc
in
add
cmp
out
push
lea
and
sub
cli
lcall
pushf
pop
mov
xchg
add
push
xchg
mov
loope
adc
aad
inc
add
jg
dec
repnz
add
ffreep
inc
out
outsl
stos
aam
bswap
popa
dec
rolb
movsl
add
add
mov
out
movsl
pop
xchg
add
mov
adc
inc
fwait
adc
mov
add
inc
add
enter
pop
jle
add
nop
add
add
adc
sub
leave
loope
dec
add
mov
xchg
cmp
mov
add
jecxz
push
add
clc
push
add
addb
cmp
add
pop
lahf
ss
add
aam
and
mov
jb
insb
dec
es
add
xor
arpl
add
cld
pop
pop
adc
cltd
add
add
mov
add
xor
add
push
jecxz
add
sub
add
insb
dec
add
es
movsl
pop
in
push
add
add
add
rolb
loop
inc
lods
insb
cmpsb
add
bound
mov
cld
mov
mov
add
out
loope
and
mov
fnstcw
and
add
int
aas
cmp
xchg
sbb
in
inc
add
in
adc
call
jp
add
or
dec
cs
jo
jns
add
fdivs
arpl
daa
ljmp
lods
lret
push
push
daa
pop
insl
inc
pop
jp
cmp
dec
sbb
add
dec
pop
aad
cltd
or
cmp
xchg
jl
icebp
sub
sbb
insb
mov
ljmp
add
add
cmp
jecxz
imul
arpl
add
jno
inc
pop
inc
add
addb
add
in
mov
fcom
rolb
pop
paddq
sti
test
scas
clc
mov
dec
and
push
add
dec
sti
int3
mov
ljmp
rolb
mov
jge
das
mov
out
dec
add
addb
add
push
and
out
fisubrl
cmp
dec
or
add
add
dec
push
add
add
dec
stos
push
jmp
add
scas
imul
or
add
dec
orl
jb
adc
jge
scas
in
ret
xchg
inc
nop
add
addr16
push
add
in
push
test
push
xchg
int
inc
add
add
clc
fsubrl
pop
lods
arpl
cmc
cmp
jl
inc
add
aaa
add
add
jecxz
mov
repnz
fnsave
add
add
lods
pop
inc
or
add
push
add
das
insb
inc
add
inc
jecxz
add
imul
sbb
jmp
add
mov
push
mov
add
fs
daa
or
add
bound
mov
mov
mov
lcall
dec
repnz
add
add
xchg
mov
das
data16
add
cmp
push
mov
mov
sbb
jge
sbb
push
add
sbb
test
inc
stos
movsb
add
testl
lcall
mov
cmp
jne
stc
mov
sbb
add
jp
or
add
add
or
outsb
lock
js
push
xor
and
int3
push
xchg
mov
ljmp
jae
add
fnstenv
bound
mov
int
jne
xchg
mov
jle
add
negl
iret
fwait
notl
daa
lds
xlat
push
add
jge
adc
aad
mov
add
outsl
push
ret
mov
add
js
ret
jg
add
add
adc
mov
xchg
add
sbb
add
xlat
mov
mov
cli
push
add
mov
fdivrl
push
scas
jbe
pusha
add
add
mov
mov
mov
adc
add
movsl
inc
iret
inc
add
mov
add
lods
test
mov
jbe
mov
add
inc
pop
jb
pop
jecxz
add
int3
add
frstor
add
test
mov
mov
add
mov
fstl
std
fisubrl
leave
sbb
and
mov
jno
cltd
in
sub
xor
or
stos
cmc
cmpsb
add
push
stos
mov
mov
lds
pop
addb
int3
inc
in
out
cmpsl
popf
lods
mov
mov
add
iret
and
sbb
loop
or
addb
add
dec
xchg
lret
xchg
mov
rolb
testb
lret
xchg
add
add
ljmp
add
sub
add
cmc
pop
rolb
mov
daa
push
pop
testb
outsb
fucom
add
sub
hlt
add
add
pushf
sub
lcall
jmp
sub
adc
loope,pn
xchg
push
add
add
mov
add
insl
mov
add
mov
insl
lcall
iret
mov
add
outsb
sbb
dec
into
lods
aam
cli
js
insl
inc
add
sbb
scas
lahf
xchg
testb
add
dec
pop
or
cmc
out
mov
jp
add
das
repnz
and
daa
mov
jl
add
add
test
and
lret
mov
dec
jmp
add
jmp
add
add
jmp
mov
int3
int3
xchg
mov
pushf
add
arpl
add
add
mov
add
inc
int
add
add
outsl
and
mov
cmpsb
add
add
or
mov
mov
cmpsb
add
xchg
inc
add
add
and
mov
push
negl
jle
add
add
and
inc
add
add
mov
iret
xor
fwait
pop
adc
or
mov
pop
movsl
movb
mov
mov
lods
and
shll
lret
push
add
cmp
fsubp
add
aam
mov
out
mov
testb
jle
cwtl
addb
ret
mov
add
mov
sbb
filds
add
lret
add
mov
ja
std
shrl
sti
insl
lahf
mov
add
leave
fs
add
add
rolb
add
xor
xchg
das
mov
std
arpl
xchg
lods
mov
pop
dec
fistpll
sub
push
push
mov
push
add
add
fsubl
mov
icebp
btrl
movsb
add
add
jg
xchg
add
cmp
clc
pusha
add
jb
mov
add
aam
add
add
sub
add
jbe
cmp
std
data16
sbb
add
loop
ds
faddl
dec
pop
sbb
push
add
add
or
add
gs
add
dec
gs
inc
add
add
jnp
add
mov
adc
clc
dec
mov
mov
add
lds
add
jbe
jmp
push
pushf
xor
mov
pop
mov
cmpsb
add
add
add
addb
add
pop
add
mov
mov
add
dec
xlat
add
pop
push
add
add
imul
les
testb
cmp
add
xor
fadds
add
popf
sti
outsb
fdivs
mov
dec
or
mov
add
xchg
add
xor
loop
pop
push
add
sbb
inc
add
das
ret
jns
lret
arpl
add
dec
push
jl
mov
fcoml
rolb
push
add
pop
pop
call
mov
jle
push
jns
aad
popf
or
clc
push
add
add
add
add
add
dec
sub
cmc
xor
inc
or
add
add
clc
cwtl
xor
mov
loopne
fstp
xchg
fsts
add
add
push
inc
add
cmpsb
add
mov
add
xchg
add
push
add
int3
pop
dec
fcompl
add
jo
into
pop
adcl
add
push
and
mov
xor
outsb
or
fldt
cmp
rolb
cmp
jo
test
sub
add
sbb
pop
xchg
rolb
add
add
jmp
lcall
pop
rcrl
mov
add
push
add
loop
aaa
inc
add
add
in
jbe
mov
addb
in
pop
daa
dec
cmc
hlt
add
add
add
or
sbb
add
mov
add
sub
add
cs
or
test
add
mov
daa
sub
jne
cwtl
int3
cmp
jle
fstps
sub
add
cld
lds
add
jl
xchg
into
movsb
add
xchg
add
mov
add
cmp
push
add
lea
inc
mov
cltd
ja
cmp
mov
out
dec
addb
add
sbb
inc
add
add
or
add
add
and
out
push
lds
add
clc
out
sub
js
aam
dec
jne
push
test
jmp
add
std
pusha
add
sti
add
fldl
add
add
mov
test
cmpl
cltd
add
add
or
cmp
popf
popa
ljmp
add
add
add
jns
sbb
call
add
push
rolb
dec
mov
pop
jl
add
mov
cmp
xor
aad
aad
cmp
stos
mov
add
or
mov
add
lods
sbb
cmpsl
or
add
out
inc
decb
loop
mov
inc
add
add
test
add
scas
sub
lret
in
scas
push
iret
xor
add
add
lds
aas
sti
movb
xorl
xor
pop
pusha
add
dec
pop
add
clc
mov
bound
mov
add
insl
pop
ja
xchg
add
mov
add
mov
addb
xor
xor
aam
std
xchg
cld
dec
push
add
mov
push
iret
std
pushf
mov
sbb
add
push
add
add
add
mov
fs
add
outsb
push
add
add
ja
jbe
cli
hlt
add
xchg
add
push
add
loopne
add
mov
into
mov
add
add
inc
xchg
jae
jno
lock
mov
mov
loope
add
pop
and
mov
lcall
add
cltd
test
push
shll
mov
inc
add
aas
xchg
cmpsl
lea
mov
push
add
push
aad
dec
pop
lods
bound
mov
add
push
add
sub
aaa
mov
add
add
add
add
lock
push
add
add
push
in
lret
cmpsl
sti
pop
add
push
add
test
sti
add
mov
cmc
repnz
mov
mov
add
add
add
xor
loope
push
sbb
pop
inc
add
jne
cmpsb
add
addb
adc
or
jo
push
pop
sahf
in
rolb
cmp
lods
dec
popf
inc
add
add
add
pop
dec
pop
adc
lcall
les
lds
addb
es
fstpt
add
mov
out
sbb
push
fdivrp
repnz
push
add
xlat
jae
test
bound
mov
adc
lret
push
add
ficompl
fildll
lret
mov
push
add
add
or
add
in
jbe
nop
add
loopne
lock
mov
mov
sub
add
adc
add
add
add
mov
add
out
in
repz
push
push
add
cld
adc
xchg
mov
outsl
cltd
aas
data16
jl
and
ds
into
jnp
add
add
xor
xchg
add
add
add
add
push
add
add
cmp
in
xlat
push
add
sub
mov
add
mov
addb
sub
add
mov
inc
add
daa
mov
outsl
fucomp
test
inc
shr
int3
cmp
lods
push
mov
add
das
std
ret
fdivs
mov
pop
xchg
add
adc
mov
fcompl
lea
fwait
call
add
add
jle
add
mov
add
add
pop
mov
add
jge
adc
mov
add
cmp
shll
popf
add
les
cwtl
cmp
out
sbb
dec
pop
loopne
jp
in
mov
test
add
add
add
in
add
pop
stos
push
aam
nop
add
pop
mov
add
dec
and
nop
add
add
add
mov
lods
loop
push
add
out
mov
daa
addr16
pop
xchg
add
in
cmp
adc
mov
rolb
fbstp
mov
jp
xor
insb
imul
addr16
ds
fisubl
test
push
sbb
jg
lock
inc
xchg
dec
fldcw
mov
add
mov
inc
add
xor
sbb
push
fimuls
mov
add
ljmp
add
add
inc
loop
repz
fidivs
jno
add
mov
out
cmp
add
cmp
sub
jb
xor
sbb
add
add
outsb
mov
rorl
add
lret
mov
add
add
cmp
pop
jnp
add
xor
clc
push
add
jnp
testb
dec
testb
push
jp
cmp
mov
xor
mov
rcll
sub
cmp
add
data16
push
add
add
dec
inc
add
sub
jge
daa
push
lods
call
add
outsb
adc
lahf
mov
add
jnp
add
cmpsb
add
jns
arpl
push
add
int
inc
lods
outsb
push
testb
mov
lea
je
jbe
pop
jnp
add
add
add
add
xchg
mov
xchg
add
add
mov
test
stos
insl
sub
add
xchg
add
inc
insb
insb
pop
cmp
push
pop
xor
add
jl
jo
lret
inc
mov
outsl
mov
xor
mov
pop
cltd
loopne
sbb
adc
sub
test
mov
shr
mov
mov
add
outsb
dec
pusha
add
add
add
sbb
arpl
dec
jb
addr16
adc
push
add
add
add
fsubs
addb
loope
add
add
mov
std
leave
and
nop
add
sub
ret
mov
mov
mov
or
push
add
adc
lea
das
mov
add
mov
inc
cmp
pop
addb
aas
rolb
nop
add
push
add
mov
aaa
lcall
jns
add
sarl
xchg
and
jo
addb
lret
arpl
inc
sti
mov
testb
pop
cmp
lock
add
pop
into
add
add
xchg
jg
in
gs
data16
mov
add
dec
xchg
cli
es
fbstp
add
aam
hlt
add
pop
insb
pop
jae
mov
mov
add
push
or
pop
mov
or
out
inc
jne
addr16
push
add
ljmp
out
push
add
testb
rorl
imul
sub
add
mov
jno
adc
test
div
add
das
push
inc
sbb
sub
add
mov
test
mov
jmp
push
sti
rolb
js
add
pop
jge
mov
cs
push
daa
ds
in
nop
add
sbb
add
push
add
add
fnsave
out
std
xchg
mov
xchg
add
jp
imul
aam
xchg
sti
pop
je
je
sub
cld
dec
inc
int
stc
xor
add
add
mov
les
push
add
in
pop
testb
sub
mov
dec
adc
jo
fsubr
out
cmp
add
add
add
add
pop
shrl
pushf
testb
and
mov
mov
ljmp
shr
cld
and
inc
add
movb
addb
add
add
jmp
in
push
add
add
pop
dec
xor
sub
cmp
xchg
add
add
add
out
daa
ss
add
add
mov
mov
add
mov
jns
imul
add
lret
jmp
cmp
xchg
add
dec
or
popf
fistps
jmp
add
lds
jns
cmp
adc
xchg
dec
fsubs
add
pop
into
sqrtps
xchg
add
lcall
in
cmp
lods
mov
rorl
popa
jge
test
out
sbb
mov
cmc
shll
mov
cmp
add
and
add
scas
sahf
sahf
addb
dec
adc
xchg
add
pop
stc
pop
cmp
mov
pushf
jns
add
inc
add
cmpl
ret
stos
mov
push
out
inc
scas
add
pop
sub
add
sub
lea
push
add
cli
pop
dec
jnp
lahf
and
stc
repnz
out
jmp
cmc
inc
add
mov
mov
jnp
pop
ficoml
lret
add
mov
add
add
test
xchg
add
rcll
push
add
add
aad
add
sub
data16
add
dec
repnz
add
add
jecxz
repnz
add
inc
xor
inc
addr16
insb
incl
cmc
pusha
add
dec
mov
jg
out
add
inc
add
popa
popa
call
std
add
mov
ficoml
lds
cmp
add
inc
add
push
inc
add
add
xchg
test
add
add
cli
and
adc
add
les
icebp
sbb
add
sub
add
add
mov
inc
out
and
mov
add
sub
add
pushf
jle
hlt
add
or
loop
mov
push
dec
xchg
add
mov
hlt
add
fsubrl
add
add
in
push
push
aam
insl
mov
jle
inc
add
mov
mov
add
mov
dec
add
lock
in
mov
fs
add
arpl
mov
imul
jmp
add
add
xor
les
and
or
mov
add
mov
dec
sub
outsl
sub
lods
sub
popa
push
add
add
mov
add
or
mov
add
or
push
test
pop
mov
add
mov
add
jns
pushf
cltd
sub
add
decl
add
mov
fwait
pop
test
add
pushf
pushf
ret
mov
adc
dec
pusha
add
add
mov
add
out
inc
xor
xor
popf
out
dec
je
add
sarl
rcrl
add
cwtl
fsub
add
push
add
pop
add
mov
lea
loop
xchg
mull
dec
fldl
mov
ss
sahf
adc
adc
loop
cmpsl
cmc
rol
add
add
mov
adc
adc
cltd
xchg
add
mov
aam
pop
fwait
loop
or
add
bound
mov
cmpsb
add
add
add
xchg
add
mov
add
cmpsl
xchg
push
clc
mov
mov
push
add
pop
in
repz
xchg
add
xchg
add
add
aad
les
pop
pop
jg
mov
dec
push
add
pop
cmp
out
imul
pop
pop
fbstp
inc
mov
dec
adc
mov
daa
adc
inc
add
pop
mov
xchg
add
add
mov
jae
xchg
ret
ja
push
add
sub
mov
aad
les
leave
pop
popf
mov
ja
jbe
loop
and
mov
test
dec
pop
aas
lcall
add
cli
push
add
jo
cmp
bound
mov
add
sub
add
adcl
lahf
xchg
popa
lcall
dec
imul
stos
and
push
add
add
das
jo
inc
jl
lea
inc
sbbl
repnz
loop
movsb
add
push
add
jae
push
add
add
lcall
cmc
cwtl
lahf
sbb
pop
leave
lahf
xor
sub
jno
add
mov
test
jg
push
add
scas
xchg
add
add
add
add
add
mov
mov
outsl
out
add
adc
mov
push
test
add
jne
shl
mov
xor
add
mov
lods
push
add
add
cmp
mov
add
sub
stos
cld
addb
inc
stc
enter
movsl
cmp
or
cli
scas
sub
add
addr16
dec
adc
xor
fld
push
xchg
ficompl
sbb
mov
cmp
scas
mov
loop
pop
fdivr
jbe
aaa
das
cld
add
add
jmp
fdivr
mov
xchg
popf
mov
add
in
add
add
mov
imul
adc
aad
jmp
add
add
cmp
jo
fwait
loopne
cmp
sbb
rcll
push
add
xor
popf
add
fmul
cwtl
fdivr
or
mov
lahf
xor
sbb
add
mov
roll
pushf
ja
inc
add
in
push
addb
adc
inc
mov
add
and
jmp
movsb
add
add
lret
xchg
test
and
mov
int
movsb
add
mov
hlt
add
add
leave
movsl
xchg
add
popf
loope
add
into
in
push
add
pop
sub
outsb
inc
sbb
jle
add
add
jle
add
fistl
mov
add
adc
adc
lock
xor
popf
cmp
nop
add
jecxz
sti
push
add
add
xchg
pop
loope
xchg
or
jp
outsl
arpl
jle
ret
pop
adc
cmp
js
cltd
fldcw
adc
add
pop
cmp
pop
add
mov
imul
add
lods
ficompl
add
in
insb
jge
push
and
dec
in
mov
testb
test
add
pusha
add
sub
add
xchg
iret
inc
jne
mov
add
icebp
mov
add
mov
ja
mov
popf
push
fists
int
insl
or
scas
sbb
xchg
lret
stos
sbb
and
cld
add
fidivrl
mov
addb
adc
mov
aas
bound
mov
out
add
adc
pushf
inc
aam
sbb
add
pop
nop
add
mov
mov
outsb
out
ja
add
xchg
fisttps
lret
or
and
mov
add
int
dec
xchg
add
inc
xchg
lock
mov
add
mov
or
mov
jl
and
mov
dec
je
imull
add
xchg
add
leave
cmp
ret
add
loop
rep
add
add
cmpsb
add
inc
adc
jmp
xchg
add
add
add
ret
add
popa
popf
inc
add
jb
lret
mov
mov
mov
popa
enter
add
add
add
mov
cs
add
mov
add
mov
add
lds
add
adc
mov
add
jg
add
or
adc
cmp
sbb
out
popf
enter
int3
mov
inc
add
pop
mov
pusha
add
pop
xchg
add
add
add
aas
testb
add
cmp
movsl
imul
xchg
add
adc
movsl
outsl
add
jle
or
add
add
daa
sub
add
sub
ljmp
sbb
adc
lods
repnz
xchg
push
add
mov
addb
add
add
clc
sti
cmp
mov
ds
mov
add
jno
push
loop
add
xchg
test
xchg
add
enter
outsb
mov
fmul
test
pop
in
pop
std
ficomps
cmp
les
and
push
or
inc
jl
add
xchg
cmp
or
iret
push
inc
add
lea
arpl
adc
inc
les
rcr
pop
mov
in
xor
test
jo
ja,pt
xchg
addb
mov
add
popf
repz
fnstcw
fdivrp
mov
pop
fwait
testl
dec
hlt
add
jl
sbb
loop
loop
sub
add
dec
inc
cmp
outsl
sbb
add
cwtl
mov
mov
inc
add
cmp
add
rolb
fnstenv
add
into
cltd
int3
adc
add
add
mov
add
add
fsubl
nop
add
jge
add
sub
adc
pop
mov
add
bound
mov
aas
mov
xchg
addb
add
out
fcoml
add
dec
loopne
sahf
push
call
add
or
fmull
notl
mov
add
dec
add
enter
xorl
add
repz
push
addb
jle
xlat
push
enter
mov
sub
add
add
imull
stos
in
jmp
jmp
add
rolb
xchg
aad
add
lods
mov
add
stc
jmp
fisubrl
add
ja
add
lahf
call
loope
lds
add
add
movsl
jns
pop
mov
xor
enter
adc
add
push
mov
xchg
leave
jmp
and
outsb
call
inc
add
popa
xor
add
aaa
xchg
mov
mov
testl
adcl
xor
xchg
add
add
xor
dec
xchg
movl
frstor
mov
add
add
rolb
sbb
sbb
jecxz
lret
test
add
add
dec
xor
hlt
add
popa
and
scas
in
mov
jbe
in
add
mov
mov
push
jle
jns
add
add
mov
add
mov
push
add
add
xlat
jae
int
add
nop
add
pop
sbb
add
push
sub
dec
test
rcl
add
mov
pop
popa
or
add
add
add
add
shll
xchg
mov
add
fimuls
adc
jno
mov
test
sbb
add
jae
nop
add
xor
cmc
and
mov
add
add
mov
loop
cmp
idivl
pushf
and
jmp
push
rolb
mov
mov
add
mov
dec
stos
sbbl
data16
sbb
adc
mov
cmp
add
push
add
add
jp
add
pop
addb
mov
mov
je
sbb
dec
je
lret
and
sub
fstp
mov
aaa
mov
stos
shll
sbbl
cmp
stos
mov
sbb
mov
add
cmp
aas
jp
add
mov
add
push
add
cmc
scas
dec
mov
sub
add
mov
add
add
stos
jecxz
dec
insb
push
add
add
mov
aad
and
mov
addr16
data16
mov
iret
mov
pop
js
fs
pusha
add
std
movsb
add
aaa
ja
add
mov
add
add
add
ja
add
mov
dec
cmp
cld
add
dec
mov
add
add
call
lret
adcl
push
add
and
xor
pop
xor
adc
mov
xor
insb
jecxz
add
movsb
add
fisttpll
jne
ret
mov
rcll
sbb
scas
inc
add
aam
inc
add
mov
jne
rcll
aas
mov
into
lds
add
ret
rolb
cmp
leave
or
mov
dec
add
mov
gs
aam
repnz
addb
add
push
add
imul
data16
xlat
or
inc
xchg
jb
rolb
lock
mov
dec
mov
add
add
cmp
fnstcw
leave
out
add
lea
ljmp
movsl
add
mov
add
jbe
fstl
enter
cmp
add
add
xchg
imul
pop
jmp
push
out
cwtl
mov
add
outsl
ss
add
and
mov
push
add
hlt
add
xchg
mov
hlt
add
add
mull
add
add
mov
push
adc
push
add
vpaddsw
xlat
repz
push
push
add
push
add
mov
and
mov
add
decb
add
dec
sub
mov
push
aad
mov
rolb
stos
int
add
add
mov
add
add
cmp
mov
pop
nop
add
sbb
add
nop
add
add
popf
mov
cwtl
dec
aad
repnz
mov
enter
mov
jl
fs
add
add
push
or
sub
mov
push
fadd
jo
jle
in
lods
addb
add
xor
push
add
fimull
add
pop
fcomi
add
inc
add
mov
add
in
inc
jg
mov
or
add
mov
les
mov
pop
leave
sub
fcoms
loope
add
add
das
dec
testb
pushf
pop
int3
jp
pusha
add
icebp
adc
imul
outsb
int3
xchg
or
loopne
xor
push
add
imul
das
popa
cmpsb
add
sub
add
addr16
push
add
or
out
ret
leave
lcall
repz
add
out
add
push
cmp
movsb
add
add
mov
hlt
add
mov
add
add
popa
pop
imul
loopne
cmp
add
add
add
xor
inc
add
cmp
insl
push
add
xchg
mov
lret
dec
fwait
cltd
xchg
repnz
and
xor
out
cmp
add
gs
test
push
push
stc
jmp
outsl
xchg
sbb
sub
xchg
pop
std
dec
sbb
add
sub
aad
or
addb
icebp
xchg
add
xor
pop
popa
loope
jno
add
mov
sahf
aam
cld
lcall
ljmp
popf
insl
mov
add
mov
add
xor
dec
push
out
test
pop
fldenv
outsl
lock
and
add
xor
std
stos
stc
cmp
add
add
add
mov
xlat
lods
xchg
out
dec
hlt
add
inc
push
add
add
add
cmpsb
add
add
js
xor
add
into
jb
add
add
lea
jb
lods
icebp
lock
jnp
lock
xor
push
push
add
or
or
mov
sbb
sti
mov
add
add
mov
cmp
enter
add
xor
stos
xor
pop
js
pop
mov
mov
add
mov
add
add
xchg
mov
add
add
inc
add
sub
rolb
fildl
add
out
add
add
fildll
push
movsb
add
or
and
mov
xchg
add
lahf
mov
push
add
lock
fwait
sub
push
in
xlat
out
pop
jle
add
add
add
inc
lcall
add
aas
inc
add
mov
add
fldenv
mov
ja
dec
ret
fimuls
ret
jae
inc
mov
add
mov
fdivrl
adc
roll
pop
mov
stos
and
cmp
add
add
addb
roll
fsubr
xor
xor
in
ficomps
add
ficompl
out
sub
mov
mov
add
aad
add
xchg
add
xchg
adc
outsl
jmp
add
mov
testb
cmp
add
add
mov
sti
lcall
pop
jmp
and
mov
add
jb
cmp
das
mov
cld
pop
enter
testb
adc
cld
pop
mov
inc
add
repz
jg
add
rolb
iret
int3
in
add
add
add
sub
stos
adc
jecxz
fmull
push
iret
mov
jle
mov
test
movsl
cmc
xchg
mov
mov
inc
push
mov
dec
cmp
in
cmp
sub
and
mov
sub
movb
xchg
add
ret
lret
std
nop
add
add
outsl
pusha
add
repnz
and
mov
dec
cmpsb
add
movsb
add
cwtl
sub
std
xor
inc
add
jg
repnz
add
xor
lock
dec
out
pmulhuw
sub
inc
add
imul
add
jb
insb
sbb
add
add
add
jae
jnp
mov
and
cmpsb
add
add
add
add
int
rolb
das
add
inc
xchg
adc
call
adc
jg
aas
and
stc
lds
adc
jmp
ret
inc
mov
add
add
dec
jbe
ret
sub
in
pop
icebp
xchg
cmpsl
mov
cmp
add
sahf
jbe
lods
mov
arpl
push
xchg
add
dec
call
imul
inc
add
mov
inc
aaa
xchg
add
add
mov
ljmp
pop
aam
push
xor
incl
out
xor
jbe
in
add
mov
mov
in
jecxz
jns
push
lret
lret
inc
mov
cmp
mov
pusha
add
ret
outsl
ficomps
add
inc
das
or
mov
insl
add
rolb
and
mov
inc
xor
mov
data16
jmp
cmp
imul
add
push
js
add
sbb
jge
ljmp
add
add
lods
ss
add
aad
ljmp
adc
out
add
lods
fnstsw
cmp
in
loopne
dec
bound
mov
push
pusha
add
push
add
addl
mov
xor
mov
into
and
mov
repz
add
pop
adc
dec
push
add
add
pop
add
mov
sbb
mov
pushf
push
xor
lret
pop
add
aas
movsb
add
testb
add
add
stos
xchg
mov
pushf
add
rolb
add
sub
add
jae
test
add
les
enter
add
mov
or
mov
add
add
sub
ds
and
xchg
inc
add
cmc
into
scas
jecxz
add
mov
iret
aad
pop
dec
lcall
xor
push
hlt
add
clc
mov
cs
imul
jg
mov
add
data16
dec
cwtl
sub
loopne
inc
pop
pop
das
ljmp
out
clc
mov
ret
pop
push
add
sbb
add
sahf
mov
add
sub
or
xor
rcll
std
call
ds
outsl
inc
add
notl
shll
adc
dec
mov
popa
mov
cwtl
mov
add
mov
jmp
dec
sbb
lret
and
sbb
sub
shll
add
mov
cld
insb
sbb
dec
inc
movsl
pushf
imul
ja
addb
add
adc
loope
add
lock
push
inc
add
inc
add
fiaddl
or
dec
movsl
lret
pusha
add
in
lods
lea
ljmp
jns
xor
cmp
push
cmp
add
jmp
cmovb
mov
sahf
or
je
pop
cmp
aas
pusha
add
or
testb
add
mov
lahf
addr16
mov
test
nop
add
add
jmp
sub
adc
les
rolb
loop
xor
loopne
movsb
add
cmpsl
in
pop
pminub
add
daa
shll
addb
add
mov
ret
or
nop
add
leave
cmp
movsl
jnp
dec
addb
scas
in
fmull
mov
outsb
outsb
push
cmp
adc
mov
add
outsb
hlt
add
mov
add
add
push
stos
enter
cli
cmpsl
test
lret
data16
adc
push
jecxz
cltd
sub
add
push
add
push
pop
xchg
bound
mov
adc
add
pop
les
clc
jg
push
jl
add
add
pushf
scas
add
mov
add
mov
cmp
add
add
add
outsb
stos
arpl
adc
imul
add
add
fsubp
add
cwtl
call
add
jg
dec
stc
fs
add
sub
int3
popa
imul
add
add
add
imul
push
or
in
add
adc
lcall
loope
lcall
pop
mov
outsb
and
mov
add
test
int
insb
push
add
add
clc
ja
and
add
sub
scas
xchg
adc
stos
fnstcw
or
decb
ljmp
inc
add
cmp
jecxz
dec
stos
cmp
add
call
pop
jne
ret
add
imul
fsubrs
dec
sub
fnstsw
fcomps
rolb
xor
inc
add
add
add
add
add
add
loopne
push
add
lock
jl
add
xchg
add
add
add
adc
mov
mul
add
sbb
add
push
add
mov
pop
and
add
aad
add
cmpsb
add
add
jmp
adc
jo
fldl
stos
rolb
rolb
adc
push
add
add
add
add
add
pop
mov
or
inc
add
rolb
das
aaa
lods
sub
mov
sbb
mov
cltd
mov
dec
sbb
push
add
daa
inc
add
add
push
sub
push
add
mov
fstps
fwait
and
mov
jnp
add
dec
repnz
ds
mov
add
add
sbb
mov
mov
movsb
add
add
add
cmp
sbb
add
lret
out
adc
jle
add
mov
mov
add
xchg
add
rorl
add
rolb
fmuls
outsb
mov
gs
lods
mov
add
stc
xchg
push
add
sub
sarl
stos
icebp
out
fildl
arpl
pop
movb
cmpsl
shr
stos
rorl
or
dec
popf
push
add
push
scas
jge
add
jb
cmp
popf
gs
fsubrl
and
jecxz
add
pop
mov
mov
pminsw
sbb
into
dec
rolb
mov
mov
xchg
js
or
push
jle
add
stos
in
xchg
add
popa
sub
pusha
add
or
lock
and
pusha
add
cmpsb
add
add
xchg
add
fdivrl
dec
int3
jp
movsl
inc
dec
jecxz
mov
mov
push
add
cwtl
fcmovnbe
add
xchg
adc
mov
mov
cmpsl
jae
pop
dec
aaa
cmp
jne
add
ljmp
xlat
jno
add
fld
add
int3
popf
sub
lods
test
loop
mov
jns
add
sahf
enter
mov
add
fcompl
xchg
bound
mov
sub
add
popa
aaa
ret
mov
enter
adc
out
pop
rolb
add
mov
mov
mov
and
loopne
daa
push
or
add
enter
popf
das
mov
xor
or
inc
aaa
dec
inc
stc
jecxz
daa
pop
cmp
out
cmp
sbbl
push
add
add
add
mov
pop
testl
push
add
stos
mov
nop
add
cmp
add
xor
add
add
jo
cmc
outsl
insl
inc
add
bound
mov
add
pop
push
add
add
add
add
xor
fldcw
gs
jbe
inc
dec
mov
add
add
in
or
jb
in
ljmp
add
adc
in
sub
inc
inc
sbb
insl
or
ret
add
mov
insl
int
fistpll
fdivrs
add
add
add
add
incl
add
add
rcrl
inc
push
clc
sub
or
sbb
mov
jne
mov
js
sti
fstpl
sbb
add
xchg
mov
add
sub
add
ljmp
add
inc
add
add
push
inc
add
mov
mov
xlat
in
and
mov
pop
cltd
stos
add
mov
rolb
mov
add
pop
xchg
pop
add
xchg
pop
or
add
add
in
add
or
icebp
cmp
rolb
cwtl
jae
pushf
dec
repz
add
sti
mov
add
pop
xchg
shrd
aas
sbb
xor
add
mov
dec
xchg
add
add
sarl
add
sub
add
pop
lods
mov
imul
mov
rolb
repz
mov
mov
daa
outsl
and
add
add
testb
sbb
repz
js
mov
add
outsb
push
ss
adc
jno
sbb
add
add
dec
and
mov
add
lock
stos
mov
gs
and
add
sbb
dec
xchg
add
add
mov
rolb
xchg
jbe
pop
adc
dec
push
add
es
fdivr
imul
add
std
out
pop
jnp
or
sub
add
mov
addl
or
mov
or
stos
loope
dec
sbb
add
mov
add
add
dec
and
lwpins
add
fst
data16
shll
adc
add
sti
xchg
ljmp
in
in
pop
daa
push
add
mov
popa
jg
cmp
mov
ja
add
rolb
dec
insl
mov
add
add
add
mov
in
and
iret
push
add
add
movb
and
add
dec
pop
adc
push
adc
insb
fld
add
pop
add
mov
add
add
push
add
pusha
add
or
add
add
add
imul
adc
imul
mov
add
add
mov
add
sub
add
mov
sbb
add
out
idiv
sub
aad
pop
clc
rolb
test
inc
pushf
push
add
sub
outsl
cmpsl
push
and
mov
rolb
mov
dec
dec
jno
and
inc
lea
cmc
cmpsl
xor
aaa
ficoms
lret
stc
xor
addb
add
ds
test
mov
in
ret
in
movsl
imul
out
lds
pop
dec
out
nop
add
add
fisttps
xor
enter
add
add
aaa
mov
inc
pusha
add
push
jb
hlt
add
inc
add
das
sbb
jbe
test
add
data16
rolb
inc
in
jge
add
std
mov
stos
and
mov
lds
ret
jecxz
inc
jp
mov
dec
push
ficoms
enter
mov
aas
xor
aad
sbb
push
add
lret
and
adc
jb
push
es
mov
loopne
cmpsl
popa
js
pop
insb
lea
add
out
or
inc
add
add
stos
push
xchg
negl
add
cld
or
add
fnstenv
push
lods
fnstenv
xlat
dec
pop
push
dec
loope
cs
adc
lcall
add
in
and
add
push
add
add
mov
add
mov
push
add
loopne
test
add
movb
or
pop
sub
lds
lock
insb
xchg
cmc
sbb
add
add
lret
add
fcmove
xor
add
loop
in
out
add
add
push
add
add
add
push
add
add
or
lcall
cli
push
dec
int
cltd
subl
add
push
add
add
jmp
mov
sti
mov
stos
mov
lret
add
pop
ja
jns
testb
loopne
sbb
outsb
arpl
jae
add
inc
data16
cmp
add
jle
add
fsubl
add
add
pop
push
pop
test
cmc
pop
idiv
jne
movsb
add
cmp
rcr
sbb
mov
push
mov
movb
fidivrl
repz
scas
mov
lahf
scas
fwait
cmp
inc
add
mov
rolb
add
scas
inc
adc
add
dec
jno
loope
dec
pop
scas
sarl
add
sub
sbb
add
stc
pop
pop
push
add
sub
rolb
insl
in
negl
cmp
rorl
cld
ja
add
scas
mov
adc
pop
xchg
pushf
sbb
out
leave
gs
push
mov
add
mov
add
imul
push
cmp
fmuls
add
popa
inc
aas
push
outsb
cmp
imul
movsb
add
pop
inc
add
sti
sbb
scas
sahf
dec
cmp
dec
xchg
rolb
push
add
jg
icebp
addb
add
inc
and
mov
dec
adc
gs
daa
push
sub
mov
mov
add
add
ret
dec
and
inc
push
xchg
add
sbb
push
add
push
or
or
xchg
pop
mov
xor
dec
lds
popf
dec
lods
dec
cwtl
xor
and
test
push
add
add
add
test
addb
add
ffree
lahf
push
add
addr16
adc
lods
das
js
add
outsl
xor
ret
and
push
out
testl
add
jle
dec
in
add
lock
in
xchg
add
add
add
push
add
add
mov
jmp
cmp
popf
xchg
rolb
lcall
add
xorl
mov
mov
push
cli
lock
pushf
jle
mov
pop
push
add
popf
mov
sbb
insb
insb
stc
stc
jl
data16
push
add
cmp
add
mov
sub
test
fsubrp
decb
xor
and
xchg
lret
cli
jno
rolb
pusha
add
add
add
in
out
sbb
mov
jle
xor
shll
mov
inc
mov
movsl
xor
add
inc
add
fnstcw
push
adc
push
add
fstpl
imull
pushf
push
loope
test
add
xlat
xor
push
mov
test
pop
pop
pop
les
das
xchg
add
add
in
imull
add
cli
in
aam
xchg
pop
icebp
pop
pop
sub
add
mov
add
insl
insl
mov
jbe
repnz
mov
mov
jnp
in
imul
jle
push
add
add
and
fidivrs
jg
inc
add
sbb
or
data16
gs
data16
cmpsb
add
add
add
inc
test
pushf
lret
lods
add
mov
cs
mov
mov
add
inc
stc
cmp
dec
sbb
add
test
add
xchg
xchg
add
add
mov
inc
gs
roll
add
dec
push
adc
fwait
cmp
jne
addr16
mov
add
fildll
jge
icebp
jg
add
pop
jo
xor
sub
push
add
add
dec
push
add
add
add
lret
js
xchg
mov
loopne
into
mov
add
push
mov
sub
adc
test
adc
scas
cmp
or
push
add
xchg
mov
push
in
add
or
xor
push
ljmp
add
test
iret
pop
add
add
mov
add
add
pop
imul
add
cltd
test
fwait
jg
add
daa
push
dec
stos
cmc
cmp
dec
mov
leave
cmpl
add
sub
add
sub
add
add
mov
test
loop
jg
jge
pop
inc
add
push
add
insb
arpl
add
cld
push
pop
shr
dec
testb
add
cmp
mov
mov
add
jmp
add
ljmp
add
xchg
xlat
adc
out
hlt
add
adc
movsb
add
mov
or
fisttpl
xor
fidivrs
add
addb
mov
rolb
sub
js
test
xorl
add
mov
test
arpl
add
iret
pop
rolb
les
sbb
cwtl
add
cmpsl
sub
inc
nop
add
test
fwait
cmp
rolb
or
mov
mov
sub
sub
sbb
add
std
inc
add
jbe
jae
add
test
rolb
sub
add
mov
cmpsb
add
frstor
add
addr16
and
in
mov
lahf
push
add
jg
fisttpl
orl
or
add
add
mov
pushf
iret
pop
pop
mov
push
add
mov
push
imul
adc
dec
mov
or
inc
add
cld
pop
out
dec
and
sbb
pop
dec
add
out
cmp
pusha
add
push
add
jne
add
icebp
ds
add
scas
xchg
mov
add
add
add
push
add
lcall
rolb
push
xor
mov
lret
inc
pop
mov
add
movsb
add
add
add
add
dec
cmp
mov
xor
jae
sbb
mov
add
add
inc
add
add
mov
inc
das
je
dec
scas
inc
jg
ret
hlt
add
add
add
and
lods
xlat
aad
out
add
add
fcom
hlt
add
in
sbb
add
mov
jnp
push
lcall
xor
add
add
add
in
insb
push
out
imul
xor
add
dec
mov
add
icebp
push
add
aad
cmpsb
add
test
add
add
add
mov
popf
rolb
lret
dec
imul
aaa
inc
push
jb
into
dec
testb
adcl
ljmp
subl
push
jl
add
and
mov
fs
or
roll
push
push
ljmp
add
aad
lcall
divl
mov
repz
psubusb
test
pop
ficomps
test
mov
add
mov
push
push
add
sub
shrl
mov
mov
add
pop
pop
out
leave
sub
sbb
add
jnp
dec
sub
xchg
or
add
xchg
add
add
inc
add
cwtl
inc
add
add
mov
pushf
pushf
xchg
add
and
mov
lcall
mov
aas
xchg
add
mov
xchg
add
add
add
jno
add
add
aaa
pushf
arpl
add
add
aaa
mov
neg
and
mov
add
add
xor
push
stos
rorl
call
ljmp
and
add
add
insb
push
add
cmp
cmpsb
add
data16
dec
and
mov
add
out
inc
inc
gs
and
lods
push
add
add
mov
mov
jle
push
add
add
sbb
mov
ret
addb
mov
mov
push
add
xor
pop
inc
add
mov
leave
jno
push
dec
inc
sbb
push
mov
sub
sub
aaa
sub
mov
mov
or
add
add
or
mov
adc
jge
clc
add
aaa
sbb
ret
push
add
add
mov
loope
add
mov
add
inc
add
cltd
mov
roll
scas
cmp
out
ror
cs
sub
mov
out
sub
add
out
mov
test
stos
aas
push
add
pop
mov
add
or
xor
mov
and
mov
add
push
jae
add
sbb
add
out
pop
jge
mov
sbb
rcrl
and
add
push
jbe
out
das
inc
add
add
mov
test
cmp
add
or
push
add
stc
out
fmulp
lods
sti
add
inc
jae
add
cmp
dec
and
pusha
add
xchg
add
aas
sub
pusha
add
or
ds
sbb
sub
mov
push
add
out
xor
lds
mov
addb
mov
xrelease
and
or
rcrl
cmp
mov
sub
mov
add
jmp
adc
arpl
gs
xor
out
or
and
xor
cmp
add
inc
add
push
lea
add
fnstcw
add
mov
das
fstpt
rolb
pop
aaa
add
dec
das
lods
sub
aaa
js
add
add
sbb
in
aam
sub
pop
add
add
add
mov
cmp
add
xchg
pusha
add
push
add
rcr
add
push
add
add
mov
mov
lods
imul
dec
mov
aaa
inc
add
mov
lret
mov
add
push
dec
loopne
adc
inc
add
add
add
add
popf
mov
out
inc
push
fisubs
xchg
add
xchg
dec
mov
bound
mov
dec
push
iret
jecxz
fcoms
add
lods
cltd
movsl
mov
add
lahf
jno
add
sub
add
out
push
sbb
adc
add
inc
dec
mov
cmp
add
jo
rep
rcl
add
testb
and
aad
mov
jnp
add
add
add
fbstp
or
xchg
test
repnz
repnz
lock
cld
mov
lret
mov
mov
pop
daa
inc
ja
sbb
in
icebp
icebp
xchg
add
mov
add
add
sbb
lods
xchg
cmp
add
add
xchg
out
dec
outsb
shll
cmp
or
add
js
addb
addb
jle
mov
add
mov
add
ja
nop
add
xor
inc
add
sub
pushf
sub
fs
cltd
popf
jns
add
stos
enter
xchg
loope
push
push
add
pop
push
add
andl
sbb
outsb
stc
jmp
call
pop
int
mov
xor
add
das
jnp
add
mov
lods
addb
pop
xchg
xor
in
push
xor
xchg
outsl
cwtl
xchg
stc
push
add
jno
fstpt
insb
or
add
sub
jnp
sbb
add
add
dec
dec
pushl
and
dec
icebp
imul
add
push
add
in
mov
fsubr
fimull
addb
mov
loope
pop
out
shll
fucom
add
addr16
add
cmpsl
xchg
add
add
xor
je
sbb
add
add
add
add
mov
stos
fimuls
and
repnz
add
popf
je
lock
jmp
add
lds
outsl
int3
test
or
mov
push
cmp
sub
inc
stos
mov
add
fwait
arpl
push
jl,pn
cmp
xor
mov
xor
out
jno
add
xchg
add
add
add
insb
mov
xor
rolb
jp
pop
jg
fdivs
add
xchg
add
mov
mov
out
or
mov
fs
mov
fnstenv
add
pop
lods
push
movsl
incl
mov
mov
mov
mov
dec
je
rolb
xchg
add
lret
mov
add
add
fwait
adcl
nop
add
add
xor
lods
sti
jb
pusha
add
lds
add
add
add
mov
addb
mov
sbb
jge
popl
rolb
add
mov
add
jecxz
adc
stos
rolb
xchg
les
addb
les
testb
add
cmpsb
add
xchg
jns
rolb
in
bound
mov
add
rolb
loope
add
mov
add
stc
cmc
dec
repnz
mov
sti
pop
lcall
add
nop
add
and
mov
add
mov
sbb
out
add
mov
xchg
mov
dec
fisubl
mov
add
and
sub
adc
mov
inc
ljmp
sbb
add
add
add
cli
add
mov
mov
mov
and
ds
pop
addb
iret
add
mov
aas
jno
add
test
add
imul
add
add
add
mov
xor
addr16
push
sbb
push
add
clc
jmp
xchg
cwtl
mov
mov
adcl
xchg
mov
add
add
mov
out
adc
add
mov
dec
data16
add
sbb
add
add
mov
dec
push
sbb
shll
pop
sub
fisubs
add
inc
add
sbb
pop
push
add
add
and
mov
add
sbb
add
data16
rolb
orl
iret
leave
push
pop
push
or
mov
into
insl
xor
add
add
mov
sub
add
push
xchg
add
add
sub
pop
in
or
orl
push
arpl
sti
mov
add
add
inc
add
or
add
les
dec
test
mov
pop
xchg
jns
mov
add
push
pusha
add
add
jae
movsb
add
jb
cmp
mov
insl
call
addb
fistpl
arpl
add
add
add
jp
push
pop
test
outsl
push
add
fcmovb
add
add
add
mov
mov
xchg
inc
adc
scas
sub
ret
mov
pop
and
mov
add
or
decl
mov
and
jle
mov
add
rorl
add
out
shufps
add
mov
repz
add
dec
xor
add
test
sbb
add
add
pop
cli
dec
testb
add
sbb
out
mov
aam
xchg
push
push
add
add
add
scas
ds
add
add
xchg
cld
pushf
pop
inc
fwait
or
add
add
sbb
add
in
jge
mov
jp
aaa
xchg
add
stc
sbb
add
mov
ljmp
loope
add
leave
bound
mov
mov
mov
xor
call
mov
push
int3
js
inc
add
out
xor
sub
js
fmull
data16
jae
mov
movsl
aaa
insb
inc
add
sahf
push
mov
movb
out
push
dec
mov
add
jb
mov
in
pop
pop
sahf
jg
outsl
adc
cwtl
dec
rolb
dec
and
pop
sahf
sub
add
mov
mov
push
pop
test
and
mov
add
add
lcall
add
fisubrs
test
push
or
mov
daa
jle
mov
inc
xor
pop
xchg
mov
les
arpl
dec
movb
add
std
jbe
aad
add
add
add
add
add
xchg
jae
add
add
add
setnp
cmc
jo
inc
ds
add
add
mov
test
ljmp
add
add
lcall
add
inc
add
lods
push
add
mov
movsb
add
mov
and
dec
or
xchg
add
call
add
add
add
jns
jp
or
xchg
add
sbb
adc
xor
or
add
add
sbb
aas
sahf
sti
mov
add
movb
cmp
das
repz
mov
sbb
add
xchg
add
add
add
xchg
fidivrl
clc
repnz
jae
add
add
fwait
cld
nop
jmp
add
add
popf
add
cmp
and
add
repnz
jae
jno
subb
repz
mov
xchg
ret
or
add
jg
clc
repnz
jae
add
mov
cmp
repnz
jae
pop
lea
out
scas
pusha
push
mov
xchg
ret
pop
add
mov
fwait
cld
nop
jmp
add
orb
add
push
mov
xchg
ret
inc
aaa
cmp
add
inc
push
jae
add
add
add
add
add
test
add
clc
repnz
jae
add
xor
add
clc
repnz
jae
pop
add
les
clc
repnz
jae
add
add
cld
push
fwait
cld
nop
jmp
push
add
mov
jnp
xlat
out
push
push
mov
xchg
ret
aaa
cmpb
add
mov
add
adc
clc
repnz
jae
push
inc
add
inc
add
mov
cmp
adc
add
xchg
jl
subb
dec
cmp
cld
nop
jmp
add
add
mov
clc
repnz
jae
addb
add
addr16
add
je
push
push
mov
cltd
add
pop
and
add
add
mov
xchg
out
out
fldl
mov
add
testb
add
push
mov
xchg
ret
popf
add
or
ret
pop
push
mov
xchg
ret
stc
jg
add
or
repnz
jae
jle
hlt
add
jo
sub
dec
and
clc
repnz
jae
cmp
add
mov
mov
clc
repnz
jae
jg
mov
add
repnz
jae
push
sub
add
mov
clc
repnz
jae
pop
jl
cmp
jb
jp
jne
clc
repnz
jae
inc
ret
ds
sbb
clc
repnz
jae
add
add
add
push
bound
mov
mov
clc
repnz
jae
add
add
jl
xor
clc
repnz
jae
add
jg
add
aaa
push
push
add
jmp
jae
roll
add
pop
inc
xlat
sub
out
inc
add
add
test
add
mov
clc
repnz
jae
add
adc
loopne
inc
add
add
repnz
jae
inc
add
sbb
nop
jae
mov
sub
push
lea
add
add
clc
repnz
jae
inc
add
mov
mov
push
mov
xchg
ret
jl
add
add
mov
and
add
stos
clc
repnz
jae
add
inc
ds
add
add
pop
mov
add
fwait
cld
nop
jmp
inc
inc
add
inc
rolb
xchg
ret
add
mov
repnz
jae
popf
inc
add
add
pop
inc
dec
dec
clc
repnz
jae
jge
hlt
mov
test
add
push
mov
xchg
ret
loopne
add
pop
inc
mov
add
in
in
inc
add
add
mov
jl
add
jae
pop
add
add
push
mov
xchg
ret
or
jg
mov
popf
mov
clc
repnz
jae
add
dec
cmpw
clc
repnz
jae
inc
jle
test
add
int3
add
cld
mov
lods
pop
fwait
nop
add
push
clc
repnz
jae
ds
inc
add
add
inc
in
je
clc
repnz
jae
jl
test
clc
repnz
jae
lea
add
add
jns
leave
sub
repnz
jae
add
inc
add
fwait
cld
nop
jmp
add
enter
adc
jnp
mov
nop
jae
add
sbb
push
add
xor
clc
repnz
jae
or
jl
mov
xor
or
jmp
add
add
aaa
rolb
enter
push
mov
xchg
ret
add
add
add
cld
nop
jmp
push
push
roll
add
sbb
push
mov
xchg
ret
add
add
push
pop
mov
push
mov
xchg
ret
jge
add
decl
test
repnz
jae
dec
add
push
rcrb
inc
or
dec
loopne
xchg
popf
push
clc
repnz
jae
add
ljmp
pop
push
mov
xchg
ret
add
jle
movsl
inc
xchg
fisubs
mov
xchg
ret
add
add
enter
mov
clc
repnz
jae
ret
inc
add
add
dec
clc
repnz
jae
ds
aaa
mov
aam
cli
push
clc
repnz
jae
add
inc
add
loopne
call
repnz
jae
xchg
mov
and
nop
jae
add
jle
enter
and
cli
jne
clc
repnz
jae
cmp
mov
fwait
cld
nop
jmp
add
xlat
add
add
call
fwait
cld
nop
jmp
inc
add
cmc
pop
add
fwait
cld
nop
jmp
inc
enter
test
push
clc
repnz
jae
add
loopne
inc
add
push
flds
and
add
add
repnz
jae
add
mov
pop
cmpsb
add
cld
nop
jmp
mov
dec
mov
add
mov
sbb
repnz
jae
add
add
mov
je,pt
fwait
cld
nop
jmp
add
add
mov
clc
repnz
jae
add
mov
repnz
jae
push
ds
mov
insl
jne
clc
repnz
jae
add
xchg
inc
add
adc
std
cmp
add
cld
pop
fwait
cld
nop
jmp
movsl
jle
xchg
add
and
and
fwait
cld
nop
jmp
or
sub
inc
pop
ret
clc
repnz
jae
ret
add
mov
pop
clc
repnz
jae
aaa
jl
ret
add
add
mov
push
add
repnz
jae
add
add
cld
nop
jmp
ret
or
add
add
add
add
add
fwait
cld
nop
jmp
add
jl
mov
cmp
add
clc
repnz
jae
add
add
nop
jae
add
sub
lods
pop
push
mov
xchg
ret
jnp
pop
add
clc
repnz
jae
cmp
add
mov
clc
repnz
jae
sub
adcb
mov
loopne
add
add
clc
and
clc
repnz
jae
add
jl
shr
sub
cld
daa
add
adc
inc
add
sub
test
jg
clc
and
push
mov
xchg
ret
add
stc
popf
ret
jp
xor
push
mov
xchg
ret
add
add
popf
or
adc
repnz
jae
xchg
add
clc
repnz
jae
add
add
xchg
push
add
je
clc
repnz
jae
jle
push
lods
call
clc
repnz
jae
jg
add
ja
call
fwait
cld
nop
jmp
push
or
ds
add
add
sti
call
add
enter
push
mov
xchg
ret
xchg
inc
jl
add
xchg
xchg
decb
jae
inc
add
mov
nop
jae
add
add
add
add
clc
repnz
jae
jecxz
jge
ds
arpl
add
cmpl
fwait
cld
nop
jmp
test
mov
clc
repnz
jae
pop
stc
ljmp
mov
negl
cld
incl
cmpb
movzwl
fwait
cld
nop
jmp
or
popl
fwait
cld
nop
jmp
add
xchg
xchg
add
push
add
clc
repnz
jae
add
add
add
add
clc
repnz
jae
mov
ds
jge
sbb
add
add
dec
push
xlat
add
add
xor
push
mov
xchg
ret
pop
add
lea
add
jmp
mov
jno
mov
add
inc
cmp
sub
add
pop
add
add
xchg
push
add
sbb
pop
jmp
add
add
add
and
nop
jmp
popf
ljmp
add
mov
fwait
cld
nop
jmp
add
stc
add
add
sub
dec
imul
adcl
or
shll
jns
inc
add
popf
pop
jg
add
dec
add
add
jg
mov
inc
add
aaa
pop
mov
clc
repnz
jae
or
inc
fimull
nop
jae
push
add
inc
add
add
add
jl
and
ret
in
inc
add
add
dec
mov
push
mov
xchg
ret
add
push
push
mov
xchg
ret
add
jno
call
clc
repnz
jae
inc
xchg
popf
inc
mov
pop
push
push
mov
xchg
ret
add
inc
pop
push
jg
inc
lea
fwait
cld
nop
jmp
ret
add
mov
add
fists
mov
xchg
ret
test
ljmp
iret
or
inc
add
jl
or
iret
push
push
mov
xchg
ret
add
xchg
add
add
dec
add
push
mov
xchg
ret
inc
add
icebp
clc
repnz
jae
add
push
xchg
add
or
test
clc
clc
repnz
jae
jno
pop
out
add
cmp
fwait
cld
nop
jmp
inc
adc
adc
push
mov
xchg
ret
ljmp
mov
outsl
mov
clc
repnz
jae
add
add
add
add
add
add
add
cmp
sub
add
xor
clc
repnz
jae
add
popf
data16
add
xlat
inc
add
add
jle
mov
mov
repnz
jae
add
xchg
add
clc
repnz
jae
inc
add
jle
add
add
cld
nop
jmp
add
add
jnp
ret
insl
push
mov
jp
ljmp
mov
sub
cmp
fwait
cld
nop
jmp
loopne
add
add
add
mov
xchg
ret
add
add
inc
movb
subl
add
repnz
jae
add
loopne
enter
push
mov
xchg
ret
cmp
mov
add
add
repnz
jae
add
mov
clc
repnz
jae
add
loop
mov
clc
repnz
jae
hlt
mov
test
push
mov
xchg
ret
add
stc
add
cmp
fwait
cld
nop
jmp
stc
inc
add
jno
and
add
cmp
nop
jae
add
sti
fwait
cld
nop
jmp
mov
add
mov
mov
add
clc
repnz
jae
add
ret
add
add
mov
lcall
ret
mov
add
add
pop
add
clc
repnz
jae
sub
add
clc
repnz
jae
addb
pop
rolb
lds
clc
repnz
jae
test
hlt
xchg
fnstenv
sar
repnz
jae
ds
add
add
clc
repnz
jae
ret
add
loope
add
add
add
repnz
jae
push
add
add
add
add
repnz
jae
or
add
lods
push
mov
xchg
ret
add
in
push
clc
repnz
jae
inc
mov
mov
sbb
idiv
repnz
jae
sub
add
sub
loop
clc
repnz
jae
add
push
add
mov
clc
repnz
jae
sub
push
mov
xchg
ret
add
ljmp
push
fwait
cld
nop
jmp
add
add
add
add
clc
repnz
jae
jg
push
add
dec
cmp
cld
nop
jmp
add
add
xor
push
push
mov
xchg
ret
sbb
mov
ja
fs
repnz
jae
add
add
cmpsb
add
in
add
add
clc
repnz
jae
xchg
add
in
mov
clc
repnz
jae
jno
mov
fwait
cld
nop
jmp
add
add
inc
or
add
mov
lea
push
mov
xchg
ret
push
add
adcb
inc
jnp
clc
repnz
jae
add
add
add
adc
roll
xchg
ret
aaa
jl
mov
clc
repnz
jae
inc
add
add
jl
outsb
mov
clc
repnz
jae
mov
loopne
add
dec
and
clc
repnz
jae
ret
dec
xchg
ret
test
seto
mov
inc
add
add
add
mov
clc
repnz
jae
add
sar
mov
xchg
ret
aaa
hlt
ret
add
fimull
nop
jae
test
add
add
call
clc
repnz
jae
add
mov
jae
ret
jl
or
push
jle
mov
inc
add
repnz
jae
popf
add
inc
add
jge
test
sbb
add
repnz
jae
jno
mov
adc
repnz
jae
adc
adc
dec
mov
fwait
cld
nop
jmp
push
jge
add
mov
nop
jae
add
movsl
add
mov
xchg
ret
dec
jge
add
jns
dec
add
mov
xchg
ret
ds
add
mov
add
add
xor
mov
add
add
or
add
add
ds
inc
andl
add
repnz
jae
add
adc
or
and
clc
repnz
jae
aaa
test
add
pop
inc
add
clc
repnz
jae
lea
loop
jo
data16
add
sar
nop
jae
sub
jg
add
add
mov
xchg
ret
ret
sub
fsubr
insb
adc
add
add
ljmp
pop
add
mov
in
add
add
add
push
add
cmp
in
mov
clc
repnz
jae
add
jl
clc
repnz
jae
jecxz
add
dec
add
clc
repnz
jae
push
add
add
inc
or
test
adc
add
repnz
jae
mov
add
or
enter
cmp
ret
ret
add
sub
mov
lcall
nop
jae
or
push
hlt
xchg
lcall
clc
repnz
jae
hlt
popf
xchg
adc
stc
mov
clc
repnz
jae
jle
add
xor
cmpl
fwait
cld
nop
jmp
popf
mov
jl
add
lea
clc
repnz
jae
cmp
lret
pop
push
mov
xchg
ret
mov
add
hlt
aaa
and
fwait
cld
nop
jmp
cmp
inc
add
iret
add
clc
repnz
jae
or
adc
add
push
add
andl
ljmp
add
add
jbe
inc
add
or
movsl
jbe
insl
mov
clc
repnz
jae
adc
or
add
add
mov
add
push
fwait
cld
nop
jmp
add
jecxz
enter
add
add
repnz
jae
add
add
add
testl
fwait
cld
nop
jmp
inc
aaa
inc
rorl
mov
clc
repnz
jae
or
jl
mov
mov
clc
repnz
jae
push
add
push
add
xchg
ja
jmp
clc
repnz
jae
add
add
and
push
mov
xchg
ret
add
add
sub
push
mov
xchg
ret
jl
xchg
add
add
add
clc
repnz
jae
add
enter
adc
repnz
jae
aaa
lea
add
xchg
jl
loop
fwait
cld
nop
jmp
ret
aaa
popf
xchg
mov
add
add
mov
clc
repnz
jae
add
adcb
mov
jmp
push
mov
xchg
ret
add
mov
add
popf
mov
push
mov
xchg
ret
inc
mov
push
jne
clc
repnz
jae
aaa
sub
xchg
add
inc
add
jmp
cmp
ret
add
test
add
leave
xorl
clc
repnz
jae
add
fwait
cld
nop
jmp
inc
add
adcb
sub
clc
repnz
jae
add
inc
add
mov
clc
repnz
jae
add
nop
jae
add
aaa
mov
push
clc
repnz
jae
aaa
jl
ret
sbb
mov
clc
repnz
jae
add
add
add
stc
add
clc
repnz
jae
add
xlat
add
test
insb
rol
push
mov
xchg
ret
inc
test
inc
inc
and
outsb
dec
push
mov
xchg
ret
jno
add
aaa
inc
jle
lods
xchg
clc
repnz
jae
adc
add
decl
clc
repnz
jae
ret
add
movsl
add
inc
add
nop
jmp
xchg
add
add
popf
jl
aad
add
clc
repnz
jae
add
icebp
mov
popa
add
repnz
jae
xchg
or
add
add
pop
popa
fwait
cld
nop
jmp
add
adc
popf
add
add
fwait
cld
nop
jmp
loopne
popf
add
mov
repnz
jae
ljmp
mov
nop
jae
add
mov
add
sub
cmp
ret
xchg
popf
jg
inc
or
mov
clc
repnz
jae
add
mov
mov
clc
repnz
jae
jl
add
add
add
clc
repnz
jae
add
pop
add
imul
clc
repnz
jae
add
ljmp
repnz
jae
add
test
sti
mov
fwait
cld
nop
jmp
add
pop
add
add
stos
mov
clc
repnz
jae
mov
lea
pusha
add
clc
repnz
jae
pop
xchg
add
add
movsb
add
add
pop
fwait
cld
nop
jmp
cmpb
mov
push
add
mov
add
jbe
fwait
cld
nop
jmp
add
add
push
fisubs
repnz
jae
add
orb
push
inc
add
repnz
jae
add
jl
stc
add
add
repnz
jae
add
add
stos
push
fwait
cld
nop
jmp
add
add
add
movsl
add
cmp
inc
add
xchg
xchg
add
movsl
add
mov
push
mov
xchg
ret
add
add
mov
mov
xchg
ret
add
add
dec
mov
test
fwait
cld
nop
jmp
push
jecxz
add
add
fimull
nop
jmp
pop
test
hlt
inc
xchg
xchg
jns
lret
nop
jmp
xlat
add
add
add
xchg
adc
inc
sbb
popa
push
mov
xchg
ret
xchg
ret
mov
dec
mov
dec
push
push
mov
xchg
ret
inc
sbb
mov
and
repnz
jae
add
push
dec
mov
push
mov
xchg
ret
pop
add
add
push
add
fwait
mov
clc
repnz
jae
dec
add
rorl
xbegin
lret
idiv
incl
xchg
add
add
inc
clc
repnz
jae
xchg
add
add
mov
add
mov
test
or
add
repnz
jae
mov
jl
mov
clc
repnz
jae
push
add
dec
xor
clc
repnz
jae
inc
or
jbe
xor
and
or
add
repnz
jae
jecxz
sub
loopne
mov
clc
repnz
jae
jnp
mov
or
add
inc
add
xlat
aaa
enter
jecxz
mov
inc
mov
popf
fwait
cld
nop
jmp
push
mov
jae
nop
jae
add
add
adc
movzwl
clc
repnz
jae
sbb
add
jne
fwait
cld
nop
jmp
jge
add
mov
clc
repnz
jae
inc
add
jl
jg
jp
fcoms
mov
cmp
ret
cmp
test
fwait
cld
nop
jmp
or
dec
push
add
add
push
mov
xchg
ret
inc
jecxz
hlt
add
clc
repnz
jae
add
mov
add
lea
clc
push
fwait
cld
nop
jmp
add
movsl
add
jno
add
sub
repnz
jae
pop
add
xchg
add
or
jae
add
popf
popf
add
xor
mov
aad
xchg
push
add
mov
clc
repnz
jae
jle
dec
movzwl
clc
repnz
jae
add
ret
add
add
repnz
jae
jnp
add
pop
push
mov
xchg
ret
popf
add
adc
add
xor
clc
repnz
jae
add
ljmp
push
mov
xchg
ret
add
add
jae
xchg
sbb
dec
addb
mov
clc
repnz
jae
mov
dec
or
repnz
jae
cmp
add
add
push
lock
add
cmp
decl
test
clc
repnz
jae
jl
jg
push
xor
nop
jmp
add
jl
aaa
add
mov
fwait
cld
nop
jmp
add
add
mov
repnz
jae
xchg
adc
pop
add
mov
xchg
ret
ljmp
lret
cmpl
andl
add
add
pop
add
add
inc
add
push
push
mov
xchg
ret
add
sub
push
adc
add
add
inc
mov
in
mov
fwait
cld
nop
jmp
loopne
add
pop
popf
add
xor
and
push
mov
xchg
ret
push
adc
add
clc
repnz
jae
mov
add
add
add
and
clc
repnz
jae
roll
push
jle
or
int
cmpl
roll
ljmp
jmp
add
int3
add
push
mov
xchg
ret
add
add
add
je
clc
repnz
jae
jl
mov
add
clc
repnz
jae
jge
or
dec
pusha
clc
repnz
jae
cmp
inc
or
scas
add
push
mov
xchg
ret
add
outsb
mov
fwait
cld
nop
jmp
test
popf
mov
add
fwait
cld
nop
jmp
ds
mov
jl
add
clc
repnz
jae
add
add
andb
or
add
repnz
jae
jno
jle
insl
pop
clc
repnz
jae
mov
add
insb
add
clc
repnz
jae
add
add
decl
push
mov
xchg
ret
loopne
jnp
loopne
mov
clc
repnz
jae
add
add
cld
nop
jmp
add
push
add
xchg
mov
add
or
inc
add
ljmp
and
repnz
jae
xchg
add
mov
clc
repnz
jae
add
jl
add
std
mov
clc
repnz
jae
sub
add
add
push
mov
xchg
ret
add
add
data16
repnz
jae
dec
xlat
inc
add
aaa
lea
clc
repnz
jae
pop
add
lea
cmp
push
mov
xchg
ret
add
or
xor
clc
repnz
jae
add
inc
add
int
repz
cld
nop
jmp
mov
sub
sub
fadds
xchg
ret
add
jl
mov
inc
cmpsb
add
jecxz
adc
and
mov
pop
sbb
stos
fwait
cld
nop
jmp
add
mov
xchg
push
sub
mov
xchg
ret
sub
enter
cli
shr
clc
repnz
jae
jge
push
popf
jle,pt
mov
fwait
cld
nop
jmp
add
adc
cmp
repnz
jae
sbb
add
jne
clc
repnz
jae
add
jbe
fs
addb
xchg
clc
repnz
jae
add
add
add
repz
repnz
jae
pop
xchg
add
xchg
inc
inc
loope
push
push
mov
xchg
ret
orb
in
ret
pop
push
mov
xchg
ret
loopne
add
add
test
inc
clc
repnz
jae
add
adc
inc
add
clc
repnz
jae
add
push
jne
and
push
mov
xchg
ret
xchg
xchg
mov
rolb
rcll
fwait
cld
nop
jmp
inc
add
add
inc
sbb
dec
fadds
xchg
ret
jle
add
add
clc
repnz
jae
addb
push
add
or
jmp
jae
add
add
adc
mov
xchg
ret
stc
add
add
sub
ror
add
add
ret
xchg
add
adc
fwait
cld
nop
jmp
add
movsl
bound
mov
pop
clc
repnz
jae
add
pop
ret
add
cmp
cld
nop
jmp
test
adc
orb
add
add
clc
repnz
jae
add
xchg
jl,pt
xor
add
bound
mov
push
mov
xchg
ret
cmp
add
add
call
clc
repnz
jae
add
push
add
or
mov
xchg
ret
add
add
add
movzwl
clc
repnz
jae
xchg
add
add
clc
repnz
jae
jl
add
mov
rep
clc
repnz
jae
add
roll
jno
add
jae
popa
clc
repnz
jae
cmp
test
add
mov
xor
inc
add
mov
xchg
or
jecxz
add
hlt
addb
or
push
cmp
repnz
jae
add
lea
adc
xor
add
fwait
cld
nop
jmp
add
rorl
clc
repnz
jae
adc
add
mov
in
inc
add
ljmp
push
push
mov
xchg
ret
mov
add
add
xor
outsb
add
clc
repnz
jae
jno
movsl
add
add
clc
repnz
jae
mov
dec
add
mov
xchg
add
add
repnz
jae
add
add
add
sub
push
mov
xchg
ret
add
adc
mov
push
mov
add
jae
mov
test
add
xor
cs
repnz
jae
or
add
sbb
fwait
cld
nop
jmp
add
add
inc
add
add
loopne
incl
or
hlt
pop
shr
clc
repnz
jae
add
push
add
add
nop
jae
jno
mov
push
loopne
mov
xor
add
clc
repnz
jae
ret
add
add
mov
nop
jmp
sub
aaa
andb
mov
xchg
ret
add
hlt
add
nop
jmp
add
add
add
mov
fwait
cld
nop
jmp
add
into
push
clc
repnz
jae
stc
mov
test
add
ret
mov
cmp
mov
xchg
ret
add
add
add
xlat
push
add
clc
repnz
jae
ret
sbb
add
mov
xchg
ret
mov
add
inc
add
cmc
pop
add
clc
repnz
jae
add
add
ds
mov
int3
jmp
clc
repnz
jae
ret
stc
add
push
inc
xchg
sbb
repnz
jae
movsl
add
xchg
xchg
add
pop
ss
test
insb
mov
clc
repnz
jae
ret
inc
ds
or
test
inc
lock
repnz
jae
jl
add
inc
adc
repnz
jae
mov
or
add
adc
stos
push
push
mov
xchg
ret
add
add
xchg
add
mov
in
cmpsb
scas
add
push
sbb
mov
mov
and
loope
add
push
mov
xchg
ret
pop
add
add
pop
push
mov
xchg
ret
add
pop
fisttps
repnz
jae
add
loopne
add
hlt
add
add
repnz
jae
add
and
mov
xchg
ret
add
add
addb
push
push
mov
xchg
ret
inc
add
add
inc
sub
repnz
jae
mov
add
test
push
mov
xchg
ret
aaa
xchg
test
jbe
clc
repnz
jae
add
xchg
add
mov
je
clc
repnz
jae
add
mov
mov
xchg
ret
jno
jl
inc
dec
mov
clc
repnz
jae
xchg
adc
enter
scas
or
clc
repnz
jae
push
add
ds
test
in
mov
clc
repnz
jae
add
aaa
mov
add
jae
add
mov
push
add
add
jae
push
popf
add
add
popf
fisttpll
test
jecxz
lcall
fdivrp
call
add
jge
ret
sbb
subl
add
mov
lds
xchg
ret
add
xchg
addb
add
xor
cld
and
fwait
cld
nop
jmp
enter
inc
inc
mov
mov
clc
repnz
jae
add
inc
add
add
add
add
dec
inc
clc
repnz
jae
add
loopne
movb
ret
clc
repnz
jae
sub
xchg
inc
jle
push
movsl
cmp
jae
push
sbb
movsl
adc
jbe
movsb
add
push
clc
repnz
jae
add
add
push
add
rep
push
mov
xchg
ret
xchg
cmp
nop
add
mov
clc
repnz
jae
shl
popf
add
mov
lds
fdivrs
clc
repnz
jae
add
add
xchg
add
xor
clc
repnz
jae
add
add
add
jmp
nop
jmp
ds
movsl
hlt
flds
inc
cmp
repnz
jae
add
add
jg
clc
repnz
jae
ret
add
add
jnp
adc
pop
inc
sub
test
mov
or
repnz
jae
cmp
add
xchg
clc
repnz
jae
cmp
add
clc
repnz
jae
or
mov
clc
repnz
jae
add
push
add
add
mov
jae
add
adc
leave
xor
push
mov
xchg
ret
aaa
add
mov
add
add
add
mov
nop
jae
add
adc
mov
nop
jae
mov
add
add
xor
cld
nop
jmp
mov
fstpt
clc
repnz
jae
movsl
hlt
xchg
add
add
fwait
cld
nop
jmp
inc
push
aaa
orb
jae
add
pop
add
lea
nop
jae
ret
xchg
add
add
add
push
clc
repnz
jae
roll
add
add
add
jp
les
clc
repnz
jae
or
add
pusha
add
clc
repnz
jae
adc
inc
and
repnz
jae
ds
add
xor
clc
repnz
jae
add
push
sub
add
jg
dec
add
cld
nop
jmp
inc
inc
add
dec
inc
push
nop
add
nop
jae
test
test
mov
clc
repnz
jae
add
jbe
clc
repnz
jae
add
add
mov
jg
clc
repnz
jae
adc
dec
movzwl
push
mov
xchg
ret
inc
inc
cmp
push
add
hlt
jmp
nop
jae
inc
ljmp
push
mov
xchg
ret
ret
add
test
je
sub
fxch
inc
add
inc
add
hlt
add
mov
push
loopne
add
dec
xchg
add
leave
mov
push
mov
xchg
ret
mov
cmp
add
add
clc
repnz
jae
add
or
add
add
nop
jae
jle
ret
add
add
inc
push
add
inc
cmc
call
mov
xchg
ret
add
add
inc
add
mov
xchg
ret
jnp
pop
jle
add
add
add
cmpl
fwait
cld
nop
jmp
add
inc
xor
imul
clc
repnz
jae
mov
test
leave
sub
fwait
cld
nop
jmp
add
lea
mov
add
add
push
fwait
cld
nop
jmp
mov
add
xchg
mov
add
mov
int3
add
clc
repnz
jae
pop
add
mov
clc
repnz
jae
add
xchg
popf
add
push
sbb
rclb
shl
inc
add
roll
xchg
ljmp
inc
out
add
add
add
subl
ret
xchg
ret
test
push
jne
pop
push
mov
xchg
ret
inc
add
enter
or
sti
clc
repnz
jae
add
add
add
mov
hlt
add
add
add
fwait
cld
nop
jmp
jl
dec
addb
pop
ds
faddl
xchg
ret
add
xchg
xchg
cli
test
fwait
cld
nop
jmp
mov
push
mov
cmp
clc
repnz
jae
enter
add
mov
mov
cmc
add
mov
clc
repnz
jae
sbb
add
add
mov
push
mov
xchg
ret
add
stc
test
cmpsl
cmp
repnz
jae
add
add
add
push
clc
repnz
jae
add
or
mov
jmp
add
add
add
xchg
repnz
jae
add
add
mov
clc
repnz
jae
add
sti
inc
push
mov
xchg
ret
add
mov
add
test
fwait
cld
nop
jmp
ds
loopne
ds
add
rolb
add
mov
fwait
cld
nop
jmp
add
test
add
add
jl
clc
repnz
jae
popf
sub
jb,pt
fwait
cld
nop
jmp
mov
pop
call
aam
add
add
ret
clc
repnz
jae
xchg
mov
xchg
pop
jo
testb
mov
clc
repnz
jae
add
xlat
popf
xchg
add
mov
clc
repnz
jae
add
or
pop
push
mov
xchg
ret
cmp
add
add
add
add
mov
clc
repnz
jae
add
mov
nop
jae
inc
add
add
mov
mov
jb
jle
inc
in
mov
xchg
ret
add
mov
xchg
lahf
popa
push
mov
xchg
ret
hlt
roll
add
add
jnp
sti
clc
repnz
jae
or
xchg
add
jl,pt
pop
clc
repnz
jae
ret
jg
add
jg
movsl
jmp
clc
repnz
jae
jnp
push
add
mov
clc
repnz
jae
test
jl
add
add
add
or
fwait
cld
nop
jmp
push
xchg
add
add
xor
clc
repnz
jae
mov
add
sti
clc
repnz
jae
add
or
push
mov
add
xchg
add
fwait
iret
jge
add
pusha
add
nop
jae
jnp
jnp
add
add
sub
add
rolb
push
add
mov
clc
repnz
jae
hlt
add
inc
clc
repnz
jae
add
mov
jae
add
clc
repnz
jae
add
adc
xlat
scas
mov
clc
repnz
jae
add
inc
test
add
add
mov
clc
repnz
jae
xchg
pop
mov
or
lret
and
fwait
cld
nop
jmp
add
xchg
mov
and
pop
shr
push
mov
xchg
ret
add
popf
add
cmc
mov
clc
repnz
jae
adc
push
clc
repnz
jae
add
push
inc
jl
add
fildl
add
clc
repnz
jae
add
push
mov
xchg
ret
adcb
add
mov
xchg
ret
dec
add
push
roll
test
fwait
cld
nop
jmp
jl
add
inc
mov
mov
xchg
ret
jge
add
inc
add
add
je
clc
repnz
jae
add
lcall
clc
incl
push
jnp
add
nop
jae
jnp
or
pop
add
test
mov
push
clc
repnz
jae
xchg
pop
add
jnp
jmp
jno
add
add
xchg
aaa
add
nop
jmp
add
ds
mov
clc
repnz
jae
add
pop
add
repnz
jae
or
aaa
mov
rcll
jmp
xchg
add
add
inc
jno
jl
add
add
mov
clc
repnz
jae
add
inc
add
pop
add
and
push
mov
xchg
ret
xchg
popf
push
pop
rcrl
push
mov
xchg
ret
popf
ljmp
add
add
clc
repnz
jae
mov
add
cs
clc
repnz
jae
add
test
inc
ret
pop
xchg
add
repnz
jae
add
inc
cmpb
add
in
add
jmp
ret
add
ret
sub
add
jnp
clc
repnz
jae
dec
sbb
push
loopne
shl
clc
repnz
jae
mov
aaa
add
push
clc
repnz
jae
add
add
mov
clc
repnz
jae
mov
repnz
jae
add
jl
add
repnz
jae
xchg
jl
aaa
popf
test
add
loopne
add
mov
add
add
dec
push
clc
repnz
jae
add
test
add
mov
add
push
mov
xchg
ret
add
lea
add
mov
xchg
ret
add
pop
popa
movsb
add
push
mov
xchg
ret
ret
mov
pop
lea
fwait
cld
nop
jmp
xchg
add
add
insb
and
clc
repnz
jae
add
inc
sub
and
push
mov
xchg
ret
ds
jle
cmp
add
nop
jae
aaa
jnp
loopne
inc
inc
xchg
out
add
mov
clc
repnz
jae
jecxz
add
pop
add
nop
jae
jno
loopne
jl
ret
jb
or
or
in
add
add
add
add
clc
repnz
jae
add
ljmp
mov
repnz
jae
xchg
add
nop
jae
inc
add
sbb
lods
pop
push
mov
xchg
ret
xchg
popf
add
mov
fwait
cld
nop
jmp
add
hlt
add
xor
clc
repnz
jae
add
test
aad
add
clc
push
mov
xchg
ret
test
jg
add
sbb
mov
xchg
ret
movsl
jge
xchg
popf
add
leave
pop
clc
repnz
jae
test
add
orb
sbb
mov
xchg
ret
xchg
push
add
ret
add
add
fwait
cld
nop
jmp
jge
add
or
add
clc
repnz
jae
add
xchg
add
push
mov
and
add
filds
sbb
cmp
add
push
push
add
add
add
bound
mov
pop
mov
or
aas
pop
xchg
jp
add
xchg
imul
js
add
add
xchg
add
into
stos
push
fdivl
rolb
mov
jmp
dec
movb
inc
add
in
pop
imul
pusha
add
dec
dec
cmp
dec
jns
dec
shrl
sbb
xor
les
cltd
sub
dec
inc
addr16
xchg
add
hlt
add
jmp
shr
sbb
out
xchg
outsb
xorl
call
mov
jbe
cwtl
cs
and
addb
add
adc
rolb
push
xchg
aad
add
lock
inc
add
out
movb
push
add
xchg
push
add
add
mov
dec
mov
in
cs
add
lret
add
fadds
cmpsl
in
pushf
xor
or
lret
stos
std
inc
dec
sbb
mov
ss
lea
add
mov
sub
dec
fists
add
add
popf
cmpsb
add
test
add
add
je
std
lods
movb
add
add
push
inc
add
mov
fstl
add
add
cmp
or
rolb
clc
adc
inc
addb
xchg
add
ljmp
add
add
out
rcl
push
rolb
pop
fnsave
xlat
ljmp
dec
adc
xlat
inc
add
mov
mov
xor
add
mov
testb
add
addb
shl
lods
mov
push
add
jmp
push
add
mov
jl
add
adc
add
add
stos
add
lcall
hlt
add
in
mov
je
fdivl
or
xor
xlat
test
inc
js
add
mov
pusha
add
add
repnz
add
or
out
sbb
lcall
mov
add
mov
xchg
lret
add
data16
add
mov
push
out
mov
mov
inc
add
pop
stos
sbb
popl
add
mov
add
loopne
mov
scas
xchg
add
mov
fwait
rcll
sbb
addl
rolb
dec
adc
in
xor
sahf
data16
add
mov
int
outsb
movb
sahf
or
cmp
add
mov
sub
and
mov
mov
shll
stc
xor
cmp
lods
sarl
add
mov
inc
add
push
call
add
mov
sub
insl
adc
add
add
outsl
add
pop
mov
add
mov
lock
ret
xor
scas
jns
add
ret
add
add
mov
or
dec
nop
add
add
addl
outsb
xchg
xchg
add
pop
adc
inc
add
add
xor
imul
add
das
or
sahf
sti
cmp
out
cmpsb
add
lds
arpl
outsb
cmpsb
add
mov
add
aad
push
stc
daa
mov
add
fdivp
add
out
testb
add
ds
idivl
jae
add
mov
or
add
movsb
add
inc
and
add
mov
movsl
and
in
mov
test
pop
add
add
lods
test
sub
add
add
sub
add
add
insb
or
loop
mov
pushf
dec
adc
aas
add
cmp
add
add
add
in
mov
insl
sahf
add
add
insl
inc
test
dec
icebp
aam
test
pop
mov
add
add
add
dec
push
add
dec
sbb
fnsetpm(287
add
test
jo
push
add
add
mov
add
or
sbb
add
add
stc
mov
inc
add
push
mov
stc
movb
int3
pop
mov
mov
adc
add
mov
popa
in
ret
ficompl
add
add
add
sbb
add
into
xor
mov
repnz
add
mov
add
push
sub
dec
testb
mov
sbb
cmp
pushf
or
add
and
mov
adc
popa
dec
in
mov
into
insb
into
inc
add
pop
mov
pop
test
sub
dec
mov
xor
add
inc
mov
imul
add
add
and
cmp
and
stos
icebp
aad
nop
add
add
add
add
jb
sub
add
cmp
add
pushf
arpl
daa
std
adc
ret
dec
es
std
arpl
sub
xor
sbb
mov
insb
je
rolb
dec
pop
xchg
add
pop
pushf
lods
gs
testb
lds
stos
js
push
add
icebp
fdivs
push
paddsw
xchg
add
loope
pop
dec
out
jmp
add
jbe
mov
mov
add
add
pop
sarl
inc
add
jmp
dec
add
movb
add
add
dec
sbb
mov
gs
add
mov
jmp
push
pop
pop
add
jo
cmpsb
add
lret
add
aam
sub
pop
push
in
push
add
orl
imul
repnz
mov
test
sub
add
mov
sub
mov
out
jno
sub
add
cmpsb
add
adc
rorl
xchg
inc
push
lcall
int
daa
rolb
nop
add
popa
cmpsl
or
add
cmp
aam
or
add
and
mov
jg
add
adc
xchg
add
mov
jae
add
xchg
loop
popf
add
rolb
sub
add
xchg
mov
add
add
jl
imul
les
pop
or
lds
mov
movb
add
loope
xor
jmp
js
je
lock
add
paddsb
push
add
add
add
dec
dec
ftst
add
adc
movb
inc
add
jmp
daa
or
add
add
roll
insb
popl
dec
push
add
in
test
rolb
lods
mov
add
lods
cmpsb
add
add
mov
xchg
arpl
paddq
jge
jne
add
enter
add
das
xor
add
add
imul
movsb
add
mov
ja
ds
jno
add
add
sahf
push
add
add
daa
inc
add
mov
dec
in
enter
pop
pop
mov
into
sub
mov
dec
push
shll
push
movsl
adc
js
push
add
lahf
outsl
repnz
add
testb
aam
xchg
pusha
add
xchg
mov
ret
add
scas
sub
mov
add
dec
dec
cs
movsb
add
leave
call
mov
or
xchg
sub
xchg
push
fstpl
out
loop
mov
into
adc
add
lods
data16
mov
leave
bound
mov
mov
mov
shrl
add
testb
xchg
jge
add
filds
mov
push
add
popf
js
cld
ret
jae
mov
dec
aad
lcall
clc
cmp
xchg
cld
inc
add
add
add
in
or
jns
inc
addb
add
test
pop
mov
push
add
add
leave
pushf
mov
outsl
fistl
adc
push
add
add
or
add
gs
mov
add
add
aad
cmp
mov
inc
hlt
add
mov
pop
fdiv
mov
add
fisttps
mov
addr16
add
aaa
mov
add
push
add
add
test
add
inc
pop
sbb
cwtl
xchg
pop
movsb
add
repz
cs
add
repz
add
fmull
test
xor
sbb
aaa
mov
insb
lret
mov
add
adc
bound
mov
jle
dec
mov
data16
int3
xchg
xchg
add
lods
push
add
stos
dec
sbb
and
jl
mov
fucomi
xchg
xor
sub
add
mov
jno
lds
push
add
and
mov
mov
dec
nop
add
add
insb
ficomps
lock
cwtl
insl
pop
into
pop
shll
mov
pop
pop
icebp
add
xchg
cmp
add
add
add
outsl
push
push
add
add
jge
add
xor
jg
cmp
ror
push
add
jo
divl
mov
add
incl
mov
mov
fstpl
dec
aad
cmpsb
add
cmp
scas
adc
mov
fnstenv
outsl
push
add
addr16
or
and
sub
cmc
or
xchg
add
cmp
cltd
addl
jge
sti
aam
or
sub
mov
or
pop
gs
add
mov
add
cli
rolb
mov
mov
jge
loope
add
sbb
fwait
test
or
fiadds
add
mov
add
cmpsb
add
inc
jp
push
sub
push
add
pop
ljmp
jo
sahf
mov
out
jae
or
lds
cmpsl
ljmp
and
add
add
xor
add
and
push
sbb
add
loope
out
xor
add
push
loope
add
loop
cmpsl
mov
add
dec
mov
add
mov
add
lcall
sbb
shrl
mov
mov
sub
popa
jb
or
sub
add
or
pop
orl
aam
cli
add
add
add
add
add
mov
push
add
add
imul
add
add
pushf
inc
das
lods
sbb
sub
out
jae
add
mov
cmp
jb
ret
mov
sub
jns
daa
pop
xor
sub
pop
call
dec
and
mov
ja
ja
add
mov
cmp
insb
ret
ficoms
lock
cmp
mov
add
repnz
push
dec
and
add
sub
ret
or
sbb
insb
stos
adc
testb
add
in
popa
adc
bound
mov
cwtl
dec
inc
add
xchg
pop
repnz
add
pop
enter
mov
dec
sub
adc
js
add
inc
add
sbb
sub
add
mov
inc
add
dec
mov
xor
adc
cmp
pop
iret
ret
loope
add
push
mov
aaa
int
call
add
das
cmp
push
les
lds
or
xlat
rolb
stc
lcall
lret
adc
in
clc
and
pop
fadd
add
dec
test
cmp
mov
cmp
add
scas
jo
and
dec
rolb
cmp
sub
add
xor
ljmp
cwtl
jp
add
add
dec
ror
clc
mov
add
or
add
push
inc
add
pcmpgtw
movb
jg
add
mov
mov
mov
add
adc
jp
imull
jno
xchg
add
add
cmp
add
or
add
aaa
push
fcoml
add
in
rolb
inc
xlat
test
add
das
jns
inc
cmp
test
xor
xchg
int
out
adc
xchg
pop
lret
push
pop
jo
inc
dec
ja
jle
mov
add
sub
xlat
mov
dec
xchg
in
imul
add
scas
sub
mov
aaa
fidivs
add
ficomps
or
ret
dec
jo
xchg
in
sahf
das
daa
enter
add
sub
aad
add
inc
pusha
add
sub
adc
es
mov
mov
jge
or
lock
add
scas
cmp
jmp
or
data16
add
cmp
rcrl
int3
push
add
mov
mov
stos
cmp
sub
add
add
testb
add
out
scas
aas
add
pop
iret
and
mov
jge
stc
jns
add
add
add
sbb
cmc
xchg
mov
add
add
rolb
jns
add
mov
xchg
add
add
pop
cs
sub
add
add
scas
jns
and
xor
add
add
add
dec
push
clc
push
popa
or
fidivrs
jns
stc
test
loop
out
lret
sbb
mov
add
add
add
iret
push
mov
subl
js
add
mov
add
xor
lcall
pop
xchg
jmp
jns
add
add
clc
loope
lret
in
loopne
cmpsb
add
xlat
mov
add
mov
xchg
sbb
adc
xchg
add
lock
add
imul
fwait
lret
ja,pt
cmp
fs
add
dec
js
or
fildl
jge
mov
dec
mov
add
add
mov
mov
add
push
pop
incl
imul
psllw
add
mov
repz
cmp
push
add
mov
cltd
fmul
sbb
add
into
mov
add
adc
pop
sti
add
sub
sbb
dec
push
leave
and
mov
loop
out
lods
push
add
cmp
lods
dec
or
cs
add
add
popa
in
cmp
movb
popa
jo
mov
mov
pop
loopne
fwait
jge
aas
dec
mov
sub
popa
mov
out
add
jb
jb
cmp
mov
push
cmp
mov
mov
lods
adc
jo
sbb
or
push
out
ljmp
testl
leave
cmc
mov
shrl
cwtl
adc
imul
adc
jno
add
add
add
mov
outsl
or
add
add
mov
push
rolb
sub
jmp
dec
addr16
loop,pn
xchg
mov
rolb
addb
push
xchg
add
aam
mov
add
sub
dec
adc
lret
aam
mov
jne
xor
adc
inc
xor
iret
ss
mov
ja
rolb
sbb
add
inc
enter
add
and
mov
ror
add
sbb
pop
or
add
add
and
mov
gs
adc
mov
aad
test
add
add
add
adc
cltd
inc
pop
addb
mov
inc
add
xlat
mov
out
gs
scas
in
dec
lret
dec
movb
dec
push
adc
fisttpll
lahf
mov
add
add
mov
test
lcall
scas
adc
add
out
adc
mov
repz
movsl
mov
into
js
in
sub
add
test
and
mov
in
sub
or
nop
add
sbb
sbb
add
sbb
das
sarl
add
add
inc
xchg
aaa
lret
or
push
fistl
dec
cltd
inc
add
cmp
pop
push
push
add
scas
aad
add
cmc
jns
dec
lods
rolb
rolb
mov
rolb
test
jns
add
orl
add
mov
jo
data16
add
loope
call
aad
mov
add
ljmp
in
mov
push
mov
fsubl
adc
les
pop
arpl
lock
add
add
mov
sbb
lret
push
add
addr16
dec
or
fwait
in
jecxz
add
add
jne
pop
inc
jecxz
push
add
in
aam
mov
in
add
add
rolb
flds
mov
add
add
sub
add
or
add
and
stc
mov
jbe
fsubrl
mov
sbb
inc
add
adc
lret
sub
push
test
or
add
add
mov
pop
loope
mov
add
push
add
add
outsl
push
adc
ret
pop
hlt
add
and
cmpsl
mov
adc
mov
les
and
xchg
add
mov
jb
add
aaa
sbb
pop
fmuls
push
add
pop
imul
push
dec
mov
add
mov
add
and
add
add
mov
je
fdiv
add
push
add
sarl
call
and
mov
pop
pusha
add
add
add
push
add
mov
repnz
add
push
add
xchg
mov
add
test
add
mov
add
push
add
dec
xchg
add
lods
insb
cmp
insb
adc
inc
pop
sub
add
mov
add
xchg
add
mov
loopne
scas
push
add
jns
fnsave
add
scas
insl
ud1
push
add
scas
push
add
testb
imul
add
repnz
mov
adc
icebp
and
add
add
add
add
add
and
in
sbb
add
xchg
xorl
vandnps
jge
add
repnz
add
sbb
sub
jp
dec
hlt
add
cmp
inc
add
jg
add
dec
or
add
loop
xor
sahf
add
inc
add
or
sub
mov
add
add
js
xchg
fisttpll
std
inc
add
add
add
aas
roll
mov
pop
mov
adc
add
mov
mov
adc
insl
nop
add
add
call
mov
aas
fiadds
gs
stc
cmpsb
add
cs
cmpsl
sub
add
add
add
sarl
adc
cli
adc
push
xchg
and
add
add
cmp
add
cltd
adc
outsb
inc
add
mov
add
push
bound
mov
test
mov
fwait
test
mov
mov
insl
fistps
add
or
xlat
mov
sbb
mov
aad
add
add
xor
rcrl
lea
add
add
or
mov
add
add
mov
mov
adcl
rolb
push
xor
mov
addr16
inc
or
add
rolb
add
aam
stc
pop
push
add
cmpsb
add
inc
lahf
rolb
popa
scas
mov
mov
add
add
adc
add
jecxz
mov
cmp
or
add
or
add
mov
add
add
add
test
in
inc
add
inc
add
add
je
or
add
add
jnp
je
sub
xchg
add
add
addr16
push
pop
jge
add
add
data16
in
push
add
loop
arpl
inc
fnclex
add
adc
xlat
cmp
ljmp
mov
add
aaa
jb
sbb
lds
ljmp
and
add
and
mov
adc
or
push
cmp
sti
mov
or
testb
mov
data16
icebp
addb
push
arpl
pop
sarl
xchg
std
fwait
dec
add
dec
clc
stos
imul
stos
mov
imul
sbb
dec
mov
add
and
leave
add
mov
mov
lods
mov
mov
ljmp
jg
add
sub
sub
js
jbe
push
add
jno
add
pop
xchg
cmp
dec
sbb
or
lea
fcmovnb
add
add
inc
pop
mov
add
inc
add
push
or
adc
fistpll
jns
add
push
add
or
lods
lcall
aaa
insl
cld
pushf
adc
add
outsb
mov
add
fdivrs
jnp
jbe
push
add
mov
mov
clc
jns
addb
adc
sar
mov
cmc
and
mov
sub
mov
mov
or
mov
lret
add
xlat
mov
std
stos
mov
jmp
add
popa
jne
add
pop
pop
add
lcall
in
add
mov
add
add
and
mov
add
into
inc
push
sbb
jbe
mov
les
jne
repnz
loop
inc
mov
sbb
pop
dec
add
add
mov
push
add
cmp
add
jmp
add
or
add
mov
add
dec
push
add
dec
add
adc
mov
jb
dec
pushf
mov
jno
add
add
flds
push
repz
aas
addb
cmp
test
ficompl
add
fidivrs
add
push
add
add
add
add
movsb
add
mov
outsl
aam
push
add
push
sub
ret
add
cmp
push
imul
mov
adc
cmpsl
and
add
add
add
aad
xchg
clc
xor
add
out
sti
pop
cld
je
test
test
inc
add
rolb
mov
add
cs
add
out
mov
xchg
add
mov
pop
adc
lods
cltd
sbb
mov
or
and
sub
add
imul
add
add
fistps
mov
dec
cmp
repnz
ret
and
mov
pop
push
add
add
fildll
repnz
mull
push
addb
pusha
add
cs
aam
rolb
ficoms
clc
ljmp
inc
in
push
cltd
xlat
bound
mov
mov
add
xor
hlt
add
xchg
test
xor
push
add
ja
stos
in
jg
add
mov
aam
lret
xchg
arpl
dec
sti
xchg
int3
xchg
add
xchg
push
xor
daa
add
movsl
dec
jp
dec
fisttpll
lcall
mov
add
add
stos
sbb
cmp
pop
repnz
enter
bound
mov
sbb
popa
cmp
data16
add
add
pop
outsl
push
add
pusha
add
stos
aas
jmp
add
and
mov
add
notl
add
mov
push
add
jl
fiaddl
xchg
mov
add
fsubr
pop
and
in
sub
cmp
insb
mov
push
add
mov
mov
add
iret
and
jnp
sbb
sti
cmpsb
add
mov
add
dec
add
add
orl
icebp
in
or
adc
fcoms
xor
pop
shll
add
or
insl
dec
or
adc
movb
push
push
add
add
jmp
add
in
mov
and
mov
jge
testb
add
add
loopne
jbe
and
push
add
call
movb
add
add
add
pop
push
jmp
and
xchg
pop
xor
loopne
pop
bsr
add
adc
mov
xchg
push
movb
inc
mov
mov
mov
lods
add
mov
cmp
stc
push
cmp
add
pop
sbb
add
cmp
add
add
mov
pop
fdivrs
addb
xchg
add
add
inc
add
mov
pop
jo
hlt
add
adc
lea
add
mov
add
fimull
jle
mov
mov
mov
add
push
add
mov
xor
rolb
mov
ret
test
gs
cld
or
lods
cmp
adc
add
cmp
dec
imul
in
lds
repnz
out
lock
mov
or
int3
and
rolb
jns
outsl
or
rolb
std
pop
push
inc
add
iret
fs
lods
roll
mov
data16
rcl
add
add
add
sbb
inc
into
data16
inc
add
add
xchg
jb
push
add
push
add
mov
add
mov
add
int3
cli
mov
mov
les
ret
in
and
mov
cmp
outsb
add
add
and
or
add
add
sub
inc
cwtl
cmp
add
add
jmp
bound
mov
adc
cmpsb
add
sub
stos
inc
jae
rolb
fdivp
push
scas
test
and
cmpsb
add
jnp
add
out
call
adc
jae
adc
push
or
leave
sub
js
pop
xchg
aad
pop
loop
gs
movsb
add
mov
inc
cmpl
ficoms
mov
inc
push
add
sub
add
lock
pop
test
jecxz
out
addr16
add
add
pushf
loopne
mov
sub
mov
add
pop
aas
addb
pushf
mov
fwait
data16
xchg
add
mov
mov
add
add
sbb
jo
adc
sbb
xchg
jb
adc
inc
add
add
sbb
push
mov
test
add
inc
push
add
add
jae
sti
push
add
xchg
pop
dec
add
mov
sbb
in
dec
push
add
stos
pop
and
xchg
inc
add
gs
pop
gs
mov
add
add
andl
jmp
add
stc
adc
mov
and
scas
pushf
aad
add
add
or
jbe
sti
shrl
add
add
add
mov
mov
adc
xor
out
add
daa
addb
enter
cmp
and
test
repz
jo
bound
mov
movsl
push
inc
or
lock
inc
add
data16
fcomps
add
loop
push
add
xor
ficoml
insl
into
inc
add
popa
push
add
dec
scas
pop
cmp
add
cmp
fstl
add
ret
add
push
push
pop
ja
add
add
jle
add
ret
orl
mov
cs
addb
add
nop
add
and
xor
push
inc
add
add
lea
stc
and
inc
cmc
push
pop
sub
lea
lods
dec
clc
sub
add
pop
xchg
sbb
add
add
add
test
pop
aaa
add
add
add
mov
push
add
in
cmpsb
add
add
pop
pop
ficomps
out
add
sbb
cmpsl
jns
add
mov
jno
cltd
hlt
add
xchg
pop
shll
add
add
lret
jp
xchg
add
add
iret
add
mov
add
inc
mov
repnz
pop
fwait
orl
add
fdivrl
xchg
cmp
inc
ljmp
fwait
push
add
pop
add
jg
add
add
jns
push
pop
ret
por
add
add
gs
nop
add
xchg
inc
mov
add
into
int
sub
mov
sub
jp
lret
xor
mov
es
cmpsl
stos
pop
movb
sbb
jmp
add
scas
test
push
push
xchg
loopne
push
add
lret
add
cmp
dec
into
sbb
add
daa
filds
mov
add
push
or
add
ja
std
inc
add
cltd
push
mov
stos
xchg
lcall
mov
repnz
sbb
add
xchg
add
add
add
mov
aas
cmp
das
adc
or
push
stos
int
add
lret
sub
les
hlt
add
cmp
gs
add
aam
cmc
push
add
mov
popa
addb
xchg
btr
hlt
add
add
ret
jno
xchg
aas
dec
mov
add
add
mov
add
in
sahf
jp
scas
jmp
js
push
shrl
divl
jp
inc
or
clc
dec
ficoml
int
js
add
push
add
push
or
adc
pop
inc
add
pop
cwtl
push
pop
ficoms
nop
add
mov
inc
cmc
movb
add
pop
push
add
sub
rol
mov
pushf
add
or
add
jmp
inc
xor
sarl
add
add
fldl
add
dec
out
out
pushf
and
lods
dec
lock
ja
mov
add
jg
add
add
mov
cmp
add
pusha
add
add
clc
adc
arpl
in
mov
xor
jnp
jmp
adc
test
dec
mov
jne
add
call
push
stos
les
pop
fimuls
mov
mov
mov
add
add
lock
lcall
sbb
ret
loope
mov
inc
add
mov
dec
push
add
pop
cmp
not
add
add
xchg
sbb
add
mov
add
mov
add
test
sub
aas
pop
cmp
cltd
jmp
xchg
and
mov
add
cmp
rolb
add
enter
rolb
inc
scas
out
add
test
lcall
add
add
add
sahf
jb
cwtl
test
push
add
insb
stos
test
push
xchg
je
out
cld
mov
addb
rolb
lods
je
filds
jp
das
arpl
cmpsb
add
aas
les
dec
sbb
aam
gs
into
mov
jae
insl
add
mov
ds
mov
pop
jbe
mov
movb
add
int
add
and
pop
mov
xchg
push
add
icebp
or
lds
dec
cmp
roll
mov
fldl
imul
movb
push
loope
add
mov
add
push
in
dec
or
stos
aaa
stc
in
pop
jl
mov
add
add
loope
push
cltd
movsl
stos
inc
add
cmp
mov
test
xor
incb
mov
add
ds
call
mov
dec
repz
add
in
jae
rolb
xor
cmpsl
stos
adc
mov
sbb
jno
push
add
pop
pop
push
ds
or
lcall
mov
mov
add
mov
push
push
hlt
add
add
mov
push
add
in
xchg
add
add
add
shll
bound
mov
jb
mov
dec
rolb
and
mov
pop
fnstenv
add
and
bound
mov
or
adc
lods
push
cwtl
add
add
add
adc
or
jae
jno
call
mov
add
add
adc
jno
push
cwtl
xchg
add
add
js
jne
or
push
jle
add
clc
jmp
sahf
cmp
mov
add
lret
push
add
push
add
sbb
jecxz
add
jmp
adc
repnz
mov
sti
add
jg
add
pop
mov
add
call
xchg
add
ja
addb
add
ret
add
add
lods
mov
scas
hlt
add
adc
pusha
add
jnp
dec
jo
inc
mov
or
add
add
add
inc
add
mov
inc
inc
inc
push
fs
add
mov
adc
sbb
sbbl
add
repnz
add
lcall
xor
pop
shll
data16
sub
fidivs
jbe
inc
imul
lods
mov
add
movsl
shrl
fs
addr16
push
add
add
add
in
lahf
pop
sub
push
aam
aam
rolb
andl
pop
sub
xlat
pop
pushf
mov
ds
subl
int
jne
insl
adc
les
sub
add
add
add
xor
popa
addb
mov
and
loope
add
mov
sbb
jmp
ja
lds
sti
cmp
add
sub
add
lock
add
adc
or
add
sbb
add
add
add
fildll
add
rolb
xor
subl
aas
adc
lret
sub
xchg
or
test
mov
int
push
add
scas
jmp
push
mov
in
xor
scas
pop
cmp
movb
add
xchg
add
add
lcall
mov
mov
push
lret
lea
out
xchg
add
mov
push
xor
sub
cmp
add
pushf
cltd
pop
sbb
das
inc
add
mov
add
add
add
mov
ficomps
mov
jl
outsb
sbb
add
pop
std
add
xchg
xor
add
gs
xchg
lea
mov
lahf
in
leave
ret
dec
loope
add
adc
xchg
add
add
scas
fadds
sbb
add
add
ss
sahf
mov
and
insl
jecxz
loop
cs
stc
ja
add
xor
add
xlat
mov
dec
mov
adc
stc
lret
push
add
add
add
dec
in
stc
jl
jp
gs
pop
add
inc
add
test
stc
xchg
aad
add
inc
add
pop
xor
sub
das
mov
pusha
add
add
nop
add
stc
addb
add
loop
pop
ljmp
or
es
lds
dec
mov
movsl
icebp
adc
rolb
mov
daa
fistl
icebp
mov
add
pop
pop
push
xor
adc
jg
popa
and
mov
jmp
movsb
add
add
fcompl
outsl
cmp
cmp
sahf
push
testb
nop
add
andl
mov
add
add
popf
lods
scas
push
insb
aam
dec
data16
add
cmpsl
out
xlat
xchg
adc
cs
lds
je
xor
iret
arpl
push
lea
mov
push
aam
add
jae
pushf
push
fisubl
scas
dec
cmpsb
add
add
mov
xor
mov
jnp
add
popa
adc
mov
add
add
jns
sub
fmul
sub
cmp
mov
addb
adc
testb
xor
mov
icebp
fists
outsl
int
push
add
fwait
xor
lret
mov
pusha
add
add
mov
jmp
add
stos
mov
add
movb
div
add
add
cmc
adc
loope
add
push
rolb
add
jg
add
jge
lahf
inc
add
shrl
ja
sub
mov
xchg
xor
push
add
jmp
sub
mov
sbb
jle
add
add
orl
add
mov
mov
rcll
add
add
or
add
add
cmp
add
cli
jle
iret
in
add
adc
xor
add
in
push
loope
add
loopne
out
adc
mov
xchg
add
aad
jge
loopne
cmc
pusha
add
leave
xor
jg
fistps
sub
add
gs
add
push
add
loopne
les
arpl
stos
aaa
ljmp
bound
mov
roll
jb
bound
mov
add
int
add
mov
mov
add
scas
out
adc
fsubrl
popf
lcall
jne
or
imul
push
add
rcrl
add
test
add
movsb
add
mov
push
add
test
dec
push
ds
aam
dec
ret
dec
out
jecxz
pop
in
xchg
add
outsb
out
stc
or
add
into
sbb
and
mov
test
and
mov
lahf
in
add
add
add
xchg
nop
add
lret
ja
sub
add
arpl
sbb
dec
fwait
lahf
mov
push
add
add
ret
add
fidivrs
dec
outsl
mov
lods
orl
jbe
mov
fldcw
cli
aad
icebp
in
adc
adc
push
add
je
pop
movsb
add
cltd
xor
push
add
add
add
pop
incl
popf
sub
pusha
add
push
add
leave
mov
or
lret
adc
pushf
movl
add
repnz
xchg
arpl
rolb
sahf
mov
adc
ret
dec
pop
pop
cmp
add
in
das
and
scas
add
popa
inc
push
test
mov
jb
pop
push
test
lock
aad
adc
add
add
and
mov
lret
fdivs
adc
inc
pop
aam
jbe
pop
or
mov
or
add
jmp
sbb
aam
mov
clc
push
add
les
mov
loopne
mov
xor
rolb
mov
jb
iret
aaa
mov
push
scas
nop
add
add
mov
fsts
addr16
add
pop
icebp
lcall
or
rolb
fnstenv
in
mov
cmp
push
push
add
popf
pop
or
add
sbb
int
mov
in
faddl
mov
test
insb
xchg
add
mov
rolb
addb
add
or
lock
inc
dec
pop
ljmp
cli
dec
std
test
fcmovu
push
add
cld
outsl
lds
cltd
test
adc
add
push
add
jp
jmp
imul
add
xchg
andl
and
push
add
xor
call
mov
add
inc
mov
add
mov
push
add
addb
mov
mov
fwait
pusha
add
mov
xchg
xor
push
add
sub
add
in
inc
mov
push
add
dec
add
out
fwait
into
pop
adc
roll
stos
dec
call
add
add
inc
add
add
add
xchg
movsl
rolb
xchg
add
dec
push
push
add
dec
test
stc
aaa
push
cwtl
into
adc
mov
pop
add
add
mov
add
add
lcall
inc
add
fisubrs
add
add
pop
mov
ret
add
add
sub
add
jge
push
xor
mov
sbb
add
add
add
add
jno
add
mov
xor
mov
add
adc
push
lock
movb
add
lea
aas
out
mov
test
add
jge
divps
add
xchg
add
add
add
pop
mov
and
add
fists
add
fdivl
and
movb
lods
test
pusha
add
daa
mov
cmpsl
je
daa
jns
repnz
pop
icebp
sub
and
mov
add
adc
sbb
add
jne
iret
add
mov
loop
das
sub
add
rolb
cli
fs
pop
fcoml
or
arpl
add
pop
or
testb
add
cmp
pop
adc
jbe
pop
add
int3
test
cmp
add
fisubl
pop
push
jnp
add
add
sbb
adc
dec
adc
aaa
push
push
dec
mov
push
add
cmpsl
mov
add
mov
push
popa
dec
cwtl
aas
push
add
add
mov
add
dec
fldcw
mov
jl
bound
mov
cmp
out
in
lea
add
mov
add
mov
lahf
mov
push
add
inc
inc
add
adc
mov
cli
mov
add
inc
add
pushf
xchg
add
add
lea
cli
aam
pop
popf
call
add
add
push
xchg
mov
add
jge
cs
pushf
repnz
push
sbb
pop
mov
add
add
add
mov
insb
xchg
xchg
daa
cmp
popf
in
popf
sub
push
sbb
fnstcw
or
addb
add
mov
mov
mov
add
in
movl
cmovns
cmp
mov
mov
add
repz
mov
mov
jno
add
add
mov
push
sub
add
jno
stc
test
js
addr16
mov
leave
push
add
dec
mov
pusha
add
dec
data16
jl
jmp
add
jb
sub
pop
mov
add
add
rolb
or
or
inc
stos
xor
add
inc
mov
loope
add
add
add
xchg
add
add
add
sbb
rorl
fcmovbe
xchg
pop
push
add
push
fistl
push
add
add
mov
sub
ret
rcll
push
cwtl
addb
mov
push
imul
cmp
add
or
add
add
jecxz
jbe
sub
fstps
iret
shll
xchg
repnz
lcall
lods
cmpsb
add
outsl
mov
push
sub
cmp
add
repnz
xlat
push
js
jne
mov
nop
add
shrl
repz
addb
add
pop
push
std
add
jecxz
dec
mov
and
sbb
idiv
dec
test
arpl
add
add
mov
movb
add
xchg
cmc
sub
test
pushf
repnz
or
add
mov
insb
lods
pop
xor
dec
mov
add
xchg
add
pop
add
add
xlat
mov
pop
push
add
lds
xor
mov
or
add
push
test
inc
add
data16
fisubl
lahf
insl
mov
jae
mov
add
xchg
mov
dec
push
add
add
ja
adc
out
outsb
mov
add
jns
add
lods
mov
adc
add
inc
add
and
mov
add
out
cltd
sub
adc
push
ret
jbe
cmp
add
xchg
lcall
addb
ja
mov
ds
mov
add
popf
decb
hlt
add
lds
add
add
sti
add
mov
rolb
or
add
add
add
addb
orl
lret
dec
mov
add
data16
bswap
add
cmpsl
leave
outsb
test
jmp
sbbl
sub
fimull
inc
add
out
add
inc
add
add
push
add
mov
add
lret
or
testb
sbb
sub
add
mov
sub
push
in
dec
jmp
inc
xchg
add
dec
and
mov
sub
add
jno
rolb
cmp
add
add
mov
add
dec
push
xchg
testb
add
add
data16
std
in
jo
add
jb
mov
push
add
mov
add
sbb
add
xor
add
add
xchg
add
hlt
add
mov
add
inc
add
cmp
outsl
movb
fistl
test
orl
jp
in
push
mov
outsl
or
cmp
push
add
mov
test
add
add
add
add
mov
and
mov
or
in
push
push
jmp
or
adc
add
ret
add
add
enter
mov
cmc
push
add
lahf
or
add
pop
in
imul
add
std
sub
movsl
inc
mov
push
xchg
ljmp
add
sahf
arpl
sbb
add
fwait
xor
filds
add
push
add
add
add
mov
add
aaa
xor
movb
push
add
mov
testb
add
jno
xchg
mov
add
pop
stos
mov
mov
sahf
fwait
adc
mov
push
add
push
add
add
repz
xchg
add
lret
ja
pop
lret
lods
sbb
add
add
xchg
add
jno
in
dec
add
add
add
or
push
add
jno
jle,pt
xchg
aam
and
mov
push
dec
mov
cs
fcompp
movb
add
insl
test
mov
xor
je
jne
rolb
jne
adc
add
mov
push
lea
sub
add
out
sbb
xor
movsl
roll
inc
jp
pop
jle
add
pop
rolb
rolb
add
cmpsl
inc
add
add
stos
jae
psllq
enter
mov
int3
add
jmp
jns
add
bound
mov
jne
outsl
add
add
dec
sub
mov
pop
lcall
mov
add
add
pop
insb
sbb
xchg
iret
cli
adc
mov
add
ficoms
lock
popf
jnp
out
sub
add
mov
and
mov
add
mov
in
add
cmpsb
add
int
inc
add
pop
mov
mov
mov
leave
rorl
mov
out
push
add
pushf
fistpl
add
leave
mov
int
arpl
cmp
add
stc
addb
add
add
bound
mov
xor
ds
add
fistl
jo
sub
stos
mov
test
jle
add
add
push
cmpsl
loope
mov
sbb
xor
inc
add
sub
mov
dec
push
add
mov
and
pop
nop
add
add
or
std
adc
stc
dec
je
aam
xchg
xchg
add
lods
add
add
mov
or
add
add
jmp
sub
fwait
push
add
addb
scas
xlat
adc
add
movsb
add
scas
adc
jp
mov
cmp
xor
iret
pop
ret
dec
jle
add
push
add
stc
movb
fucomi
stc
sbb
add
add
jl
dec
mov
jle
add
add
add
jnp
mov
cs
dec
mov
pushf
jne
test
add
addl
add
add
pop
movsl
sbb
mov
push
cmp
inc
xchg
add
sub
insl
daa
mov
scas
add
mov
dec
adc
or
addb
std
loopne
or
xorl
add
jne
xor
add
rolb
and
add
push
add
mov
ret
add
scas
fnstsw
loop
mov
icebp
sub
mov
pop
fcompl
jg
mov
cmp
add
add
ja
add
pushf
mov
rolb
sbb
xchg
dec
inc
add
and
mov
mov
aaa
xor
fdivp
cltd
dec
outsb
or
jbe
pop
in
add
mov
adc
mov
data16
shl
add
mov
out
jne
add
or
minps
repz
cmp
mov
or
or
mov
add
add
mov
lds
mov
add
xchg
add
in
js
sarl
add
jl
add
es
add
loope
or
sbb
sbb
pop
inc
jl
mov
sahf
push
inc
cmp
add
and
mov
xor
jp
ja
lods
je
or
add
mov
add
mov
or
add
push
add
fisubl
cmp
cmp
mov
add
lea
mov
out
sbb
jbe
dec
jo
ja
pop
mov
add
adc
aad
dec
and
data16
xchg
add
insb
mov
xlat
arpl
add
add
stos
clc
mov
mov
xchg
sub
test
test
add
push
inc
xlat
and
mov
add
push
add
push
mov
dec
fwait
jae
mov
mov
mov
testb
pushf
pop
mov
add
xchg
and
mov
fwait
cwtl
add
clc
pop
scas
andl
add
loop
or
imul
mov
in
dec
stc
stos
ljmp
mov
push
add
xchg
add
adc
or
nop
add
add
mov
imul
mov
adc
addr16
mov
add
mov
dec
lcall
mov
add
add
add
add
in
or
pop
clc
into
jo
lret
jmp
rolb
xchg
push
mov
fisttps
add
or
test
arpl
daa
jns
add
add
mov
mov
cmp
add
and
fildll
mov
incl
mov
add
pop
inc
add
clc
push
dec
repz
add
cld
add
mov
std
adc
sub
sbb
js
jecxz
add
add
push
add
mov
push
andl
add
dec
add
xor
mov
or
fdivrs
xor
fsubrl
add
push
out
push
add
leave
jl
add
sbb
inc
add
sub
add
xor
inc
add
call
add
sbb
data16
out
int3
stos
sub
push
sub
push
add
sbb
mov
and
mov
adc
mov
mov
sub
icebp
and
or
pushf
std
inc
loop
jl
mov
fimuls
rolb
mov
add
mov
add
lods
out
add
add
mov
cmp
fwait
mov
add
cmpsb
add
mov
xorl
fildl
add
movsb
add
add
xchg
addb
add
in
int3
sbb
jg
sub
imul
add
xor
cli
lds
inc
lret
mov
sbb
add
sbb
inc
lret
lret
sti
fs
add
or
add
jno
sub
dec
sub
add
mov
icebp
test
add
inc
and
sbb
mov
adc
add
add
add
cmp
lahf
jge
lret
add
or
aad
pop
jne
add
sahf
cmpsb
add
cmp
push
add
add
mov
mov
daa
rolb
and
and
mov
cmc
ret
dec
enter
adc
cmc
dec
lea
inc
jge
aad
cmpsb
add
arpl
inc
push
add
js
and
push
mov
xor
imul
sti
rolb
adc
ljmp
lahf
sbbl
fldcw
add
add
add
and
add
pop
fs
add
add
sbb
xchg
add
pop
ljmp
xor
and
lcall
lods
test
add
ret
sbb
add
mov
hlt
add
mov
call
rcll
xchg
add
add
add
das
and
mov
sub
add
jb
leave
and
das
scas
xor
inc
add
or
add
loop
lahf
mov
pop
mov
inc
xor
lcall
push
jge
add
add
and
mov
add
jle
cmpsb
add
add
insb
pop
fsts
fwait
inc
add
pop
in
adc
and
jmp
add
add
mov
add
jecxz
sbb
sahf
lods
call
fldt
mov
icebp
cmpl
cmp
mov
add
sahf
mov
cmpsl
and
mov
pop
push
int
rolb
shll
add
add
add
cmp
jno
in
mov
add
mov
add
add
add
and
mov
push
testb
ja
sahf
adc
jo
out
lods
imul
mov
leave
ja
add
add
and
push
add
xor
push
insb
mov
daa
pushf
sbb
add
add
add
icebp
imul
arpl
outsb
sbb
pop
cmp
mov
cmp
bound
mov
add
lcall
dec
into
testb
add
mov
iret
mov
loope
xlat
lcall
cltd
mov
mov
dec
jle
movsb
add
leave
lods
test
pop
ss
add
lahf
push
dec
arpl
call
xchg
jnp
test
mov
mov
out
cwtl
lods
jg
frstor
add
addr16
je
ljmp
stos
push
add
lret
xor
inc
push
xchg
pop
punpckhbw
add
test
and
add
pop
cld
std
sbb
add
and
mov
pushf
insb
adc
and
dec
mov
sub
out
outsb
fisubrs
in
cmp
add
aad
add
clc
loop
or
andl
iret
inc
cmp
jo
bound
mov
adc
testb
mov
mov
fcoml
addps
add
stos
cmp
or
add
jecxz
jo
outsl
mov
add
add
je
dec
aaa
add
in
lret
test
cltd
push
add
xchg
add
mov
cli
test
xor
cltd
ljmp
xchg
pusha
add
jp
jl
cmp
pushf
clc
sbb
add
orl
cli
adc
or
out
push
add
cmp
adc
jnp
outsb
push
jnp
sbb
fsts
lcall
add
push
add
sbb
inc
add
dec
adc
in
daa
add
xor
mov
xchg
mov
rcl
add
pop
jmp
add
add
inc
add
iret
rorl
cmc
aam
xchg
add
add
pop
test
inc
add
imul
add
mov
rolb
cmp
insl
add
mov
add
mov
cmp
inc
call
ffreep
arpl
add
lods
notl
add
mov
pop
lds
mov
xor
pop
or
testb
sub
dec
insl
or
fs
aaa
jbe
into
xchg
scas
gs
mov
bound
mov
jnp
popa
movsl
enter
ja
aam
and
mov
add
mov
rcr
fisubrl
jb
loopne
or
mov
movsb
add
sub
add
add
fiaddl
jl
pop
pop
lock
push
add
xlat
rcrl
add
mov
decl
sub
add
add
addb
add
outsb
sbb
push
jle
add
push
add
lret
sub
inc
add
add
mov
movsb
add
add
lea
orl
into
inc
add
sbb
bound
mov
pop
andl
test
sub
stos
idiv
jae
add
add
add
xchg
fcoms
add
mov
lods
rcll
jno
or
add
add
add
add
dec
sub
inc
add
aad
add
add
rcll
or
add
pop
dec
push
add
inc
add
add
icebp
or
add
add
jb
jnp
mov
lret
ret
adc
sahf
les
cltd
adc
add
add
add
add
cs
add
push
les
imul
leave
movsb
add
add
mov
jmp
add
scas
loopne
xor
lds
or
lret
mov
sub
scas
sbb
lcall
stos
dec
sti
xchg
add
loop
rolb
pop
jne
xor
pop
lret
cmpsb
add
jb
in
mov
add
out
add
mov
push
xor
fdivrs
lret
mov
mov
andps
rolb
in
xchg
add
pop
add
mov
gs
or
lret
int
dec
xor
cli
mov
push
mov
clc
push
outsb
push
push
inc
add
add
add
add
push
dec
and
mov
mov
sub
pop
adc
pop
sub
in
xor
xchg
pop
nop
add
cmp
in
jo
pusha
add
sub
popa
cld
hlt
add
add
mov
xchg
add
jnp
aam
lock
lock
clc
loopne
int3
sbb
jmp
test
add
add
cld
cmp
pop
in
xor
or
add
cmpsl
insl
mov
in
push
cmp
imul
add
cmp
add
sahf
scas
add
xor
rolb
and
add
lahf
cmpsb
add
js
divl
ret
insl
sub
add
add
sub
mov
test
test
or
leave
ds
xor
cmpsb
add
pop
add
mov
xlat
push
ljmp
mov
repz
lcall
cs
mov
arpl
mov
add
add
cmc
fwait
jge
jns
add
fsubrp
sub
testb
mov
dec
sbb
movsl
mov
outsb
inc
add
testb
cld
lahf
inc
add
add
imul
or
add
sbb
cli
ljmp
push
add
add
mov
add
bound
mov
adc
les
push
add
mov
add
fimull
add
test
add
add
add
xchg
sbb
jecxz
xchg
add
pop
cmc
into
mov
add
dec
add
inc
add
push
jle
xor
add
adc
lret
out
sub
add
je
pop
pushf
dec
mov
inc
add
add
jbe
addb
sbb
enter
mov
sub
add
add
pop
jae
pop
aad
inc
add
add
mov
aaa
sub
mov
add
add
arpl
pop
xor
rorl
fidivs
cmp
out
pop
mov
pop
jb
adc
ss
jge
das
or
inc
add
add
add
cwtl
clc
bound
mov
movb
push
xchg
in
xlat
sti
clc
mov
cmp
add
jnp
add
xchg
sbb
mov
add
sbb
sahf
pop
push
add
sahf
inc
add
mov
leave
dec
sbb
xchg
add
shll
sbb
mov
in
dec
sub
sti
cmp
int3
aam
out
cmp
pop
cmp
mov
jnp
out
dec
mov
push
scas
or
mov
addb
push
add
add
jo
inc
add
in
aad
mov
add
or
mov
add
add
out
movsl
push
jne
add
push
add
and
adc
xor
cmc
pop
mov
and
add
cmp
add
push
xor
cwtl
sti
and
add
nop
add
xchg
add
xchg
add
add
or
xor
pop
out
xor
pop
or
add
lret
and
mov
push
mov
dec
pusha
add
mov
jle
add
add
addr16
fs
leave
inc
hlt
add
add
add
push
add
test
sti
insb
jmp
push
jmp
testb
add
pop
cmp
mov
mov
add
jge
cmpsb
add
add
loop
and
mov
and
js
mov
cmp
bound
mov
adc
inc
add
jg
add
push
pop
testl
in
repz
popa
inc
push
add
testb
scas
adc
xchg
inc
mov
or
jge
mov
rolb
stc
enter
dec
or
mov
xlat
push
hlt
add
inc
add
add
add
fnstcw
lret
ds
mov
add
sbb
sub
sbb
add
int3
imul
inc
add
andl
and
popa
jae
add
aad
add
fiadds
mov
call
mov
mov
loop
add
add
out
add
add
add
add
jle
leave
pop
sub
add
lods
xchg
add
and
adc
mov
stos
add
cwtl
mov
ret
dec
fistps
add
dec
ret
loope
add
xchg
add
imul
add
add
add
les
adc
xor
add
adc
lds
xor
stos
push
xor
aas
or
xchg
add
mov
add
push
dec
mov
add
jge
add
enter
add
inc
imul
add
ds
lret
add
add
add
jnp
add
cmp
add
scas
cltd
inc
mov
shl
add
or
mov
popf
mov
rol
xor
inc
add
xchg
sar
pop
clc
addb
xor
add
mov
mov
xor
xchg
scas
jecxz
dec
cmpl
mov
rcll
ds
sub
les
fwait
mov
dec
fwait
mov
shrl
addr16
add
shrl
pop
mov
ljmp
mov
js
pop
dec
test
cmpsl
in
jge
add
add
dec
sti
pop
push
xchg
add
testb
int
add
cltd
mov
sub
add
lods
add
ljmp
sub
add
test
mov
xlat
add
das
imul
aas
jb
in
testb
cmc
or
sub
xchg
xchg
dec
lcall
movsl
pop
jp
xchg
jb
add
xor
testb
or
mov
sbb
cltd
sub
and
mov
cmpl
add
in
sbb
cli
outsl
dec
mov
mov
inc
pop
test
lret
lods
mov
mov
add
add
outsb
loope
pop
cmp
data16
add
add
inc
add
fstl
mov
sub
add
sub
test
pop
pop
addl
in
mov
std
test
jg
add
repnz
fists
add
mov
mov
in
repnz
js
mov
add
add
imul
hlt
add
mov
jne
add
mov
scas
dec
dec
je
lret
xor
pop
xchg
add
mov
scas
sub
dec
pop
testl
pop
out
add
mov
add
call
inc
sbb
or
repz
add
add
add
cli
xor
inc
add
mov
push
insb
push
add
push
add
enter
pop
out
push
add
mov
enter
mov
add
add
add
xchg
pop
sahf
addb
add
movb
pushf
call
dec
mov
add
push
add
xchg
add
sub
mov
add
testb
inc
sub
add
lret
mov
xchg
add
add
add
add
add
sub
add
sub
add
repnz
and
mov
add
jnp
pop
xchg
leave
adc
insl
sub
shrd
je
jecxz
movsl
ljmp
int
add
add
add
lds
fistps
sub
add
jnp
fcoml
add
mov
dec
fcomps
iret
push
das
pushf
push
add
add
movsb
add
clc
mov
arpl
add
test
add
movb
aaa
sub
adc
push
add
add
lret
aam
adc
jg
add
mov
jae
add
popa
mov
out
xchg
push
add
lahf
jo
jae
inc
push
add
mov
add
add
add
mov
jne
rolb
xor
movsb
add
adc
popf
sahf
stc
dec
cld
addr16
pop
outsb
cmpsl
jb
jmp
arpl
add
add
ja
add
add
dec
jg
jmp
fcomps
dec
mov
jp
add
xchg
add
insl
loopne
jns
sarl
cld
mov
add
mov
addb
push
clc
jg
pop
scas
push
je
cmpsb
add
add
add
leave
fimuls
xchg
add
sub
add
movb
stos
lret
push
add
shrl
dec
repnz
mov
sub
add
pop
pop
push
add
test
add
cltd
das
jmp
add
add
adc
cmpsb
add
sbb
add
xchg
add
push
add
add
mov
add
jle
mov
mov
sbb
sub
push
push
rolb
mov
mov
jbe
popa
sub
add
lds
sub
or
jmp
inc
cmp
jg
add
scas
mov
mov
add
add
sub
scas
mov
cld
push
add
addb
xor
dec
pop
sbb
xor
scas
ds
or
add
or
adc
stos
mov
cltd
jl
add
add
add
cli
add
mov
jns
xor
inc
cltd
rolb
loopne
dec
inc
add
add
add
xlat
stos
rcrl
add
mov
add
hlt
add
adc
sbb
sub
rolb
test
push
cmp
in
cmp
sbb
add
div
stc
lods
out
push
mov
stos
lcall
fwait
cwtl
xchg
in
jg
movsb
add
add
jb
add
xchg
add
adc
mov
cmp
outsl
mov
add
movsl
lret
dec
mov
into
jno
or
add
mov
mov
filds
add
mov
and
mov
add
jmp
add
mov
push
xor
dec
aam
inc
add
pop
addb
add
arpl
mov
xchg
jae
in
inc
outsb
mov
clc
or
fisttpll
add
mov
sbb
js
add
add
arpl
add
jno
dec
sub
lods
and
lret
in
xor
add
xchg
lods
frstor
inc
add
rolb
xor
adc
ret
mov
popa
or
popa
cld
pop
lret
mov
enter
fldt
mov
out
inc
add
add
push
add
mov
lds
pop
lods
or
add
pop
inc
add
push
add
dec
js
test
jmp
mov
cltd
cmp
add
add
add
xchg
add
outsl
xlat
dec
jmp
add
add
stc
push
add
stos
cmp
add
dec
mov
sbb
in
out
leave
out
jno
and
mov
addr16
add
add
dec
aam
jbe
push
add
mov
inc
or
add
insb
adc
daa
ds
add
or
enter
add
jb
mov
xchg
mov
xor
cmp
lods
mov
lds
repz
add
pushl
rolb
test
dec
add
add
mov
or
xor
insl
rolb
lds
mov
lcall
fcmovbe
add
cmpsb
add
ds
sub
add
mov
loopne
inc
push
xchg
add
jmp
sbb
test
hlt
add
push
test
and
aad
imul
add
mov
add
inc
add
aaa
push
xchg
cmp
push
add
add
mov
push
add
loope
inc
mov
mov
sti
fwait
push
add
add
ret
xor
sbb
aad
jp
add
add
into
hlt
add
les
cmp
or
add
rolb
mov
push
mov
fnstcw
add
sbb
out
adc
mov
lret
push
add
add
mov
or
and
add
arpl
imul
mov
jle
jno
jb
rolb
into
fbstp
mov
mov
pop
pop
test
mov
add
pushf
sub
add
add
rolb
add
add
add
jnp
add
sti
mov
cmp
add
pusha
add
adc
add
nop
add
push
aad
jecxz
hlt
add
mov
cld
fcompl
data16
subl
xor
add
add
scas
pop
xchg
add
add
pop
adc
jge
clc
xchg
mov
movsl
sbb
add
int
ljmp
out
mov
in
and
dec
enter
js
add
xchg
loopne
pushl
mov
cmp
xor
jl
add
bound
mov
add
push
add
mov
adc
ret
and
bound
mov
cmp
inc
lds
cmp
mov
inc
and
mov
test
add
popf
in
cmp
test
push
inc
add
in
inc
add
xlat
sub
inc
add
xchg
pushf
inc
add
movsb
add
cwtl
jae
push
add
jle
mov
scas
and
add
nop
add
dec
imul
out
jmp
call
jecxz
add
sahf
fwait
xor
movsl
fsubr
loop
dec
push
add
add
xchg
loope
mov
cs
add
add
popf
sbb
xchg
ljmp
inc
jns
pop
dec
ficomps
cmp
xchg
add
or
popf
sub
mov
mov
xor
cmp
les
mov
pop
ret
dec
out
push
add
mov
add
movsl
pop
mov
mov
add
add
cmp
stos
mov
push
add
mov
arpl
mov
push
jbe
pop
inc
std
subl
xor
jecxz
add
pop
sbb
pop
push
add
hlt
add
in
push
add
into
jne
mov
add
add
add
loop
pop
pop
leave
mov
push
cld
mov
fcomp
dec
push
pop
pop
xor
sti
push
add
jb
fdivrs
xchg
xor
cmp
and
cld
test
mov
inc
add
les
sub
xchg
jbe
push
xlat
adc
cltd
mov
int
into
shrl
int3
push
push
add
pop
js
and
mov
add
add
dec
sub
mov
mov
xor
add
xlat
adc
sti
pop
sahf
add
sub
mov
pushf
push
mov
add
add
lcall
pop
mov
daa
sbb
scas
loop
xchg
loope
aas
in
in
ljmp
ror
les
push
add
xchg
add
push
add
add
into
shl
xchg
clc
jns
add
cmp
sti
sub
mov
add
cld
sub
add
jns
mov
adc
add
clc
mov
add
sub
out
add
fcoml
movb
ds
out
pop
cmc
aas
ret
or
or
add
add
push
add
cmp
addb
add
adc
xor
arpl
clc
pop
or
add
and
mov
inc
cmp
push
insl
bound
mov
add
imul
add
imul
add
dec
repz
mov
add
xlat
jp
inc
adc
loopne
ret
popa
mov
add
js
add
in
and
add
jbe
lods
pop
sbb
mov
cmc
in
add
leave
popf
push
add
sub
add
add
mov
add
pop
add
stos
add
mov
mov
xchg
add
adc
jbe
and
cmp
data16
push
add
add
mov
das
movb
add
out
imull
add
jmp
add
lahf
add
add
push
and
add
mov
push
jb
ret
iret
add
mov
mov
scas
jl
fwait
in
mov
in
cmpsb
add
add
mov
clc
inc
add
dec
nop
add
push
add
add
lods
jp
add
add
sbb
add
add
jge
into
jbe
inc
fnstsw
add
cld
push
cmp
mov
push
enter
add
cli
clc
cmp
add
mov
add
add
mov
lret
add
pushf
jge
pushl
dec
and
mov
xlat
mov
jmp
pop
jae
sbb
iret
out
push
outsb
or
add
add
mov
mov
inc
cmc
hlt
add
movb
fildll
pop
enter
add
push
add
add
cld
out
add
ret
add
add
xchg
dec
fcompl
mov
push
xor
in
rolb
test
sub
iret
pop
pop
pop
clc
push
add
cld
cmp
bound
mov
lds
xor
pop
adc
add
jmp
add
mov
shr
and
dec
mov
pop
mov
add
add
add
add
scas
ret
aad
add
rolb
pop
movsb
add
add
push
mov
out
push
daa
loope
bound
mov
add
mov
push
in
inc
cmp
mov
and
stos
add
addb
adc
in
rolb
sub
add
pop
add
mov
icebp
xor
add
xchg
add
push
js
adc
fdivrp
stos
or
xor
jp
inc
data16
pop
mov
rol
js
or
arpl
or
mov
addr16
ljmp
nop
add
add
sub
lret
mov
pop
imul
fsubs
and
jecxz
pop
out
sahf
scas
in
dec
mov
push
add
jg
pushf
aad
add
clc
testb
push
add
cmp
add
movsb
add
sub
fidivs
sbb
push
mov
rcll
mov
add
sbb
arpl
cwtl
pop
sub
mov
add
fildl
mov
mov
das
adc
cs
cmpsb
add
fdivp
add
scas
adc
pop
cwtl
dec
mov
and
mov
ret
cli
fdivs
div
mov
sbb
repnz
push
lret
inc
fidivl
imul
add
into
pop
je
inc
add
add
pop
and
mov
dec
in
testl
test
add
pop
call
add
add
adc
sub
mov
push
mov
add
add
loopne
loop
dec
mov
add
insb
cmc
data16
add
add
add
pusha
add
add
or
mov
sub
pop
fistpll
xchg
fsubrl
sub
cmpsb
add
out
std
scas
pusha
add
test
add
inc
adc
mov
inc
add
add
test
ret
add
addl
out
and
mov
adc
mov
sbb
je
iret
rolb
fst
jmp
adc
add
add
xchg
or
jmp
add
add
and
mov
fsubr
enter
mov
add
mov
mov
dec
pop
fsubrs
ljmp
pop
jecxz
add
mov
add
je
cmc
push
add
mov
adc
aas
jmp
movb
add
out
or
mov
ja
mov
mov
or
pop
dec
cmc
or
jbe
and
mov
ret
cmc
push
add
outsl
cs
mov
in
mov
dec
mov
mov
mov
cmp
repnz
push
add
test
add
inc
insl
outsl
xchg
lods
pushf
mov
add
mov
mov
test
jg
mov
rolb
mov
bound
mov
add
pop
ficompl
and
mov
lret
inc
add
mov
test
aad
test
or
hlt
add
ret
shrd
add
add
add
adc
jp
xor
add
add
add
jb
dec
shll
scas
xchg
add
and
sub
push
cmp
mov
fst
imul
push
lock
add
pop
loop
cmp
imul
add
add
push
add
sbb
rolb
add
outsb
out
sub
pop
add
add
xchg
mov
push
push
add
xor
and
xchg
add
aaa
mov
and
mov
rolb
sbb
jmp
testb
loop
jmp
sahf
sbb
jbe
out
lahf
shll
std
jns
or
push
add
shll
mov
jp
sub
mov
mov
pusha
add
add
in
inc
adc
add
add
mov
mov
dec
aam
xor
clc
or
mov
cvtdq2ps
lahf
rorl
loopne
rolb
sbb
add
sub
jp
loopne
jmp
gs
pop
jl
add
mov
rolb
adc
xchg
add
or
add
mov
rolb
addr16
fcmovu
add
inc
push
add
add
add
add
fsubr
adc
add
adc
in
sahf
pop
mov
popa
add
cld
xchg
mov
pushf
and
mov
add
pop
jne
add
mov
lahf
inc
add
add
std
outsl
push
add
rolb
hlt
add
add
clc
ret
js
mov
test
fiadds
jo
push
testb
aad
add
sbb
rolb
xchg
cmp
arpl
add
rolb
add
fstpl
xchg
sub
add
cld
xlat
enter
lcall
add
mov
popf
lods
inc
test
add
mov
cli
ja
lcall
add
cmp
faddp
add
sbb
add
dec
dec
jbe
sahf
adc
movsl
add
mov
nop
add
imul
jle
in
js
add
inc
add
std
sbb
cmp
cmp
gs
add
add
pop
fcompl
das
push
and
mov
add
push
pop
add
ret
jno
cltd
add
icebp
dec
negl
clc
sahf
add
add
add
jae
in
xchg
add
test
add
adc
add
add
add
aam
fnstsw
pop
mov
imul
in
mov
mov
add
aaa
daa
xchg
add
jp
aam
call
mov
es
add
aam
lret
sbb
loope
jp
add
mov
add
std
cs
lret
add
out
dec
mov
je
sbb
add
ficomps
lds
hlt
add
add
mov
add
add
mov
jbe
lods
inc
call
rolb
sti
testl
add
mov
in
xchg
ret
mov
or
stos
inc
in
rcrl
push
dec
jne
sub
imul
mov
add
jl
add
aam
and
cmp
add
push
add
in
faddl
arpl
mov
sahf
lods
push
fldl
add
add
mov
xor
jl
sub
add
in
add
lret
out
movsl
xchg
incl
or
sbb
add
push
add
jnp
add
add
sbb
add
cmp
sub
add
pop
int3
ffreep
mov
in
jmp
fildll
add
repnz
add
add
repz
mov
js
add
xchg
add
icebp
inc
fmuls
add
add
push
add
jno
cld
test
mov
insl
shll
add
add
jp
mov
aas
test
in
in
mov
mov
inc
lret
jo
sbb
adc
add
jg
add
push
add
jb
sbb
pop
xchg
push
add
repnz
dec
and
nop
add
add
lods
add
lahf
dec
sbb
jle
cli
mov
divl
or
jle
adcl
mov
cmp
aad
or
jmp
xchg
add
add
mov
mov
jnp
add
movsb
add
and
add
xchg
add
jo
mov
ds
add
rorl
add
push
sub
push
push
add
dec
add
int
add
enter
mov
add
add
push
add
repnz
add
add
aas
and
mov
popf
xlat
les
dec
mov
add
add
add
lret
jg
add
add
pusha
add
add
movb
add
andl
addb
movb
lahf
sti
mov
mov
test
add
lods
ljmp
add
sahf
jg
fdivrs
mov
xchg
push
add
push
add
mov
sbbl
rolb
repnz
fildl
xchg
add
mov
fdivl
mov
push
add
add
cmpps
enter
call
ljmp
add
fwait
adc
cmpsb
add
add
int3
mov
or
testb
adc
add
add
jb
jnp
bound
mov
call
lds
add
mov
add
mov
hlt
add
adc
lods
sub
ret
pop
push
add
add
outsl
popf
in
jecxz
add
insb
mov
add
cmp
and
cmc
xor
add
clc
add
mov
mov
stos
data16
push
xor
addr16
daa
xchg
pop
xor
lds
loopne
mov
jne
xchg
enter
sahf
int
inc
lret
pminsw
dec
or
mov
mov
mov
sbb
into
push
test
sbb
xchg
add
in
inc
add
add
std
mov
pop
mov
jno
fwait
les
std
dec
sub
int
pop
xchg
add
aaa
out
xchg
adc
or
add
xchg
add
add
mov
push
pop
mov
push
add
add
mov
inc
add
pop
or
rolb
jnp
dec
dec
cmp
jecxz
add
lods
lret
pop
push
mov
ljmp
cmpsb
add
sbb
stc
rolb
adc
add
mov
inc
xchg
add
jg
lcall
addl
xor
push
jmp
sbb
add
jmp
mov
pop
and
popf
cmc
add
in
add
imul
test
stos
leave
iret
and
mov
mov
pushf
popf
inc
add
mov
lret
cltd
cmc
repz
pop
add
add
add
add
jmp
mov
stos
insb
addl
xor
and
mov
add
sub
mov
lcall
imul
ficoms
fbstp
ficomps
cmp
mov
outsb
push
pop
cmpsb
add
push
test
push
mov
xor
mov
loopne
insb
pop
clc
xor
mov
add
fsincos
pop
add
mov
jns
cvtps2pi
adc
repz
push
add
fsubs
add
add
orl
sub
add
add
mov
pop
sub
and
jnp
jnp
fisubs
rol
stc
mov
cmpsb
add
dec
push
add
push
insb
add
mov
lahf
dec
jno
rolb
repnz
pop
test
data16
idivl
add
pop
sub
mov
ja
and
lods
cmp
jmp
add
add
or
jae
cld
inc
daa
push
dec
fildl
add
add
add
test
sarl
psubq
jmp
sub
stos
div
add
and
mov
mov
movsb
add
adc
jno
mov
push
add
mov
lock
xlat
cwtl
add
std
stos
imul
pop
or
testl
mov
movsb
add
mov
cwtl
stc
sahf
xchg
add
add
add
lcall
sbb
sbb
icebp
les
imul
stc
jecxz
adc
popa
push
add
and
mov
xchg
xchg
aad
movsl
and
add
test
add
pop
xchg
add
inc
add
and
mov
jge
mov
add
imul
inc
out
sub
inc
xlat
mov
add
cwtl
ds
push
add
fnstenv
add
xor
leave
and
mov
pop
adc
nop
add
add
jmp
ficompl
or
mov
cld
sbb
lcall
cmp
ljmp
jnp
add
mov
rolb
mov
mov
jl
outsl
and
mov
clc
shll
inc
add
test
mov
jbe
add
lcall
lods
ret
add
mov
iret
dec
movsb
add
sub
xorl
fcomps
das
bound
mov
add
cmp
outsb
xchg
lahf
or
mov
xor
nop
add
mov
addb
xchg
add
rolb
jno
fisubs
add
sahf
jg
add
add
dec
mov
push
add
add
imul
data16
mov
iret
insb
lods
jno
add
fists
int
xlat
mov
hlt
add
icebp
cli
mov
push
lret
or
dec
and
test
xor
mov
mov
pop
add
mov
into
popf
mov
and
and
mov
jg
mov
and
imul
sar
lock
mov
add
lcall
pop
and
data16
jne
movsl
test
add
inc
add
inc
add
movb
fld
add
pop
and
mov
enter
add
lahf
andl
outsb
fsubl
ret
stos
loopne
jg
call
add
add
mov
sbb
out
testb
repnz
add
in
add
adc
inc
mov
mov
ds
repz
add
test
lret
mov
out
mov
xchg
pop
xchg
nop
add
sbb
xlat
lret
fcoms
jae,pn
cltd
inc
push
add
add
nopl
addb
dec
cld
ds
cmp
add
add
add
add
cs
add
pop
rorl
ss
cmc
cld
inc
add
dec
das
cwtl
dec
add
mul
inc
add
insl
lret
push
xchg
and
xchg
cld
cmp
and
scas
js
lea
mov
add
int3
xor
fstpl
add
std
dec
cwtl
jge
jb
ucomiss
add
cmpsl
cltd
sbb
icebp
mov
sub
iret
jae
popf
jno
sti
xchg
add
or
add
inc
add
mov
push
inc
add
fwait
in
rolb
aam
sub
fistpll
mov
icebp
clc
repnz
je
mov
add
cmp
pushf
hlt
add
stos
inc
bound
mov
cmc
jmp
jmp
push
mov
cltd
decl
add
add
mov
add
insl
jbe
call
xor
add
and
lcall
sbb
inc
add
addb
outsl
dec
repnz
mov
add
pop
popa
push
add
loope
add
mov
stc
sub
test
mov
rorl
sti
mov
sbb
outsb
movb
gs
and
mov
mov
add
add
add
sub
jns
adc
test
pop
or
xchg
add
add
cmp
xchg
add
xchg
jge
fsubrs
mov
hlt
add
add
mov
fdivr
scas
jne
add
add
add
pop
data16
jae
sub
jne
push
push
addl
pop
mov
js
pop
addb
fwait
mov
dec
ja
add
in
outsb
xchg
mov
cmp
repnz
push
sub
andl
daa
mov
sub
dec
jle
mov
pop
mov
pop
mov
add
push
jae
add
out
add
mov
test
dec
xchg
mov
cmpsl
and
xchg
add
orl
push
push
add
add
mov
fisttps
sbb
and
cltd
sbb
add
add
movsb
add
repz
add
imul
add
pop
add
mov
rolb
pop
repz
jle
cli
push
add
cmp
ds
testl
xlat
cmpsl
lcall
mov
inc
lds
loope
add
imul
or
and
mov
dec
and
mov
outsl
push
add
rcr
cwtl
fdivrl
inc
add
pop
into
sub
mov
mov
add
popf
repnz
add
dec
add
mov
rol
add
push
xchg
pop
jne
cli
jp
sub
mov
cmpsl
bound
mov
shl
fisubs
adcl
or
add
add
pushf
xchg
mov
jo
or
xchg
add
add
inc
add
add
add
leave
addb
ss
inc
add
or
add
add
add
loopne
add
rcrl
push
mov
jno
add
add
addb
stc
loope
add
inc
xchg
add
and
mov
add
rolb
mov
fists
fadds
imul
cmpl
add
test
and
imul
mov
jg
add
ljmp
mov
mov
lret
inc
add
or
add
add
lock
push
add
push
add
inc
adc
test
adc
cmpsb
add
add
add
fwait
push
cmp
nop
add
add
imul
adc
jbe
xchg
add
add
add
stos
jbe
aas
addb
shl
test
pop
out
add
rolb
add
inc
xchg
sub
xchg
add
adcl
add
leave
cmpsl
xor
mov
add
add
test
mov
add
add
vfrczss
inc
add
and
int
ljmp
cmovp
notl
xlat
xchg
out
mov
into
xchg
loop
pop
ret
jo
test
fsubrs
jae
loope
adc
jne
add
and
mov
mov
cmp
arpl
adc
push
imul
bound
mov
pop
add
xchg
add
pop
outsl
dec
lods
jg
add
and
mov
jp
addb
jle
add
push
nop
add
inc
pop
inc
push
add
jae
dec
jg
imul
add
mov
add
add
add
add
pop
in
repz
jecxz
insl
and
pusha
add
pop
cmp
or
stos
sbb
outsl
arpl
testl
sbb
or
mov
xlat
std
sub
add
out
or
stc
jno
sub
in
or
jo
mov
cmpsl
stc
mov
arpl
jnp
test
nop
add
data16
lods
mov
add
scas
enter
fwait
sbb
out
je
enter
add
mov
inc
add
add
sbb
add
add
nop
add
jns
add
fiaddl
scas
jae
add
mov
add
mov
adc
rolb
mov
add
dec
lods
pop
loope
add
add
add
ret
or
cli
pop
sahf
int3
push
nop
add
add
mov
jb
sbb
add
mov
int3
ss
add
stc
outsl
rolb
xchg
add
stc
or
test
push
stos
arpl
sub
add
fcompl
xchg
cmp
add
inc
add
add
pop
and
mov
movsb
add
add
jp
xlat
pop
sbb
mov
jns
movsl
sbb
cmp
out
sub
lret
data16
add
insb
inc
sbb
jp
int3
or
cld
enter
add
add
jecxz
add
inc
inc
cltd
test
inc
add
mov
pop
out
sub
es
mov
insb
rolb
sbb
xchg
outsl
lods
data16
sbb
add
add
mov
and
sbb
xchg
ds
scas
dec
jo
mov
add
add
add
cld
fildl
add
push
fisubs
inc
add
fildll
sbb
stos
fnstcw
xor
loopne
pop
ret
push
sbb
in
js
call
mov
movsl
adc
add
test
addr16
xchg
add
pop
add
xor
jo
mov
in
push
add
add
add
add
add
fistpl
fisubrs
test
add
add
ljmp
add
push
add
add
mov
mov
add
lahf
hlt
add
add
leave
les
add
and
mov
nop
add
jl
add
add
add
mov
ret
test
sub
jl
adc
adc
gs
and
dec
mov
movsb
add
dec
push
add
je
sub
add
add
inc
add
std
aad
mov
sbb
xor
lahf
xchg
xchg
insl
push
add
push
add
add
mov
cmp
lods
pop
or
add
aam
out
aam
push
jae
add
add
add
push
add
mov
add
add
scas
lods
add
jmp
add
addr16
push
lods
add
mov
push
jo
fcom
data16
mov
add
clc
push
push
add
repnz
cmpsl
pop
xor
push
jnp
rorl
pop
or
add
mov
iret
add
add
mov
add
xchg
add
add
jno
add
add
adc
ljmp
fstps
or
fadd
add
inc
add
xor
mov
push
data16
adc
imul
cltd
adc
pop
push
and
cmp
int
inc
std
xchg
addb
add
int
add
add
and
add
mov
movsb
add
std
loope
repnz
inc
bound
mov
add
lahf
pop
xor
add
sbb
add
data16
add
lahf
fcomi
add
adc
add
add
push
add
dec
out
or
add
cmp
pusha
add
mov
mov
sbb
pushf
mov
or
xor
add
mov
test
and
mov
add
add
add
lock
dec
aad
shll
cmp
mov
add
js
push
cmp
xchg
xor
push
and
clc
ljmp
sub
add
jo
lret
stos
stc
into
adc
mov
insb
pop
repnz
add
inc
and
mov
movsb
add
test
cmpsb
add
popa
or
out
test
adc
mov
dec
das
cmovp
aad
add
xor
cmp
loopne
fstpt
rcll
xchg
cltd
loope
test
xchg
add
leave
cld
jge
add
repnz
cmp
rolb
add
mov
andl
es
lcall
inc
inc
add
movb
ret
cmp
cmp
add
lock
cmc
idivl
jge
and
mov
lcall
out
mov
mov
loope
ljmp
mov
mov
std
mov
aas
push
add
mov
adc
addb
add
das
lret
jl
dec
mov
ficoms
mov
pop
lds
repnz
add
add
add
add
pusha
add
test
mov
std
enter
add
gs
add
and
mov
daa
push
add
jbe
add
add
push
add
add
add
insl
pop
pop
movb
testb
add
fiaddl
out
mov
or
adc
xchg
xlat
rolb
jae
and
add
aad
lods
push
add
mov
xchg
mov
daa
test
sub
sbb
xchg
pop
dec
jbe
add
ja
add
sub
pop
inc
inc
xchg
mov
pop
stos
rolb
xchg
loope
jecxz
mov
pmullw
add
lods
imul
stos
jg
addb
add
add
add
xor
add
mov
inc
add
add
xchg
add
dec
std
loopne
rcrl
and
mov
pop
stos
mov
lret
add
mov
shll
cmp
pop
shl
adc
mov
add
add
rolb
out
out
lahf
push
add
mov
or
add
je
loope
add
dec
jmp
mov
ljmp
sbb
mov
dec
add
xor
lods
dec
xchg
mov
repz
decl
push
lcall
add
add
adc
int3
inc
add
inc
jae
add
cmpl
inc
dec
fisubrs
out
add
add
loop
inc
add
fidivrs
dec
sbbl
and
mov
or
add
cmp
ja
dec
sub
pusha
add
aad
clc
cmp
bound
mov
add
movb
mov
xor
xor
icebp
and
mov
adc
add
jno
jnp
add
mov
pushl
les
pop
std
int3
sbb
mov
int
mov
sub
xor
mov
add
add
lcall
add
lds
add
cli
loope
mov
jno
add
inc
add
sbb
decl
inc
push
add
inc
hlt
add
mov
les
loopne
ja
push
xor
mov
add
jne
add
das
addr16
dec
das
pushf
ljmp
lods
add
add
add
or
sbb
adc
rolb
lea
add
cmp
fadds
stos
mov
add
cs
rep
add
cmpsb
add
dec
out
add
add
add
or
addb
hlt
add
mov
adc
add
add
addb
or
push
add
mov
pop
nop
add
add
pop
lahf
cmpsb
add
rolb
js
test
ja
lods
pop
xor
sbb
xor
cs
cmpsl
ljmp
adc
fdivrs
ret
testb
jae
add
lods
out
nop
add
aaa
mov
xor
repz
mov
add
test
push
inc
add
add
adc
das
xchg
int
add
test
add
mov
cwtl
cli
dec
xor
sahf
loopne
mov
data16
rolb
mov
add
jne
mov
mov
add
cmpsl
flds
in
sub
add
add
add
add
addr16
add
decl
cli
xchg
add
mov
and
mov
add
xchg
mov
les
rsm
sti
jp
add
jmp
addr16
inc
insb
xchg
add
scas
adc
loop
rolb
std
out
pop
sbb
push
add
cmp
sahf
add
rolb
jmp
movsl
fsubrs
loope
sahf
jno
push
sbb
xchg
add
xchg
fsubl
mov
and
mov
inc
add
add
sbbl
std
mov
xchg
jmp
addb
sub
xlat
pop
dec
repz
call
loopne
pop
fnstsw
cmp
mov
mov
adc
in
add
dec
sub
stos
and
add
add
add
divl
ucomiss
mov
add
xor
test
jne
dec
pop
mov
add
or
leave
cmp
stos
insb
mov
sub
xchg
dec
mov
add
outsb
shll
mov
push
add
cmp
add
mov
add
mov
pop
sbb
cmp
arpl
adc
hlt
add
adc
and
mov
inc
inc
add
add
xchg
add
add
rcl
lahf
push
outsl
data16
mov
sbb
out
pop
jp
xor
xchg
add
add
add
xor
lods
test
push
add
in
add
mov
shll
fwait
aam
jp
icebp
cmpsl
xchg
hlt
add
push
add
jle
cmc
xor
xor
sbb
stos
xor
pusha
add
int
test
into
fwait
lcall
int3
pushl
add
add
cmpsl
add
add
jne
data16
jge
imul
out
out
push
mov
mov
mov
ja
in
in
cmp
mov
push
syscall
cmp
insl
lahf
xlat
mov
inc
outsb
jo
shrl
ljmp
add
inc
dec
in
and
add
mov
cwtl
insl
testb
test
add
add
add
dec
mov
pop
lahf
insl
stos
mov
add
mov
push
jno
out
daa
xchg
jns
dec
jae
add
lods
jne
add
pmuludq
lea
mov
test
cmp
lods
into
int3
jne
xor
mov
add
rcll
cltd
sbb
sbb
notl
in
mov
cmp
mov
jl
filds
add
push
add
inc
sarl
sbb
mov
mov
mov
iret
and
add
into
xchg
add
xchg
add
pop
sub
add
add
pop
cwtl
mov
pop
dec
mov
test
fdivs
mov
adc
add
mov
pop
subl
scas
das
jmp
pop
xor
mov
sub
mov
pop
dec
testb
test
dec
sahf
stos
arpl
add
add
packuswb
add
mov
stc
mov
incb
add
hlt
add
adc
imul
mov
add
add
fwait
dec
loop
in
mov
cli
ljmp
push
mov
mov
mov
add
cltd
sahf
stos
test
dec
xchg
pop
jle
add
add
mov
add
dec
ffree
lret
out
adc
cmp
not
add
in
call
mov
add
add
cmp
jb
jnp
call
add
add
rolb
pop
inc
cmp
cltd
xchg
shll
decb
xchg
lahf
fdivrp
cmpsb
add
das
lods
iret
out
mov
jno
sti
xchg
xlat
inc
scas
cmp
push
dec
mov
add
add
add
pop
jns
das
ja
inc
dec
jl
aam
out
xor
add
mov
add
dec
adc
icebp
jnp
cmp
add
pop
stos
add
or
xchg
fistpll
add
add
lret
hlt
add
add
push
add
mov
mov
addl
add
mov
sbb
loopne
arpl
add
mov
mov
mov
lods
testl
addb
add
ja
add
pop
dec
pop
jmp
repnz
leave
aas
ss
add
xchg
add
imul
lods
mov
xorl
fdecstp
add
scas
ljmp
add
mov
je
add
mov
inc
add
jne
mov
addb
dec
dec
test
xor
jle
cmp
pop
test
add
inc
mov
scas
mov
std
add
js
push
test
int3
sbb
add
in
test
insb
mov
in
out
cltd
xor
add
mov
xchg
aam
sbb
ficompl
rolb
sbb
fidivs
clc
xchg
gs
pusha
add
add
add
mov
loop
mov
add
cmpsl
pop
mov
xor
lock
cmp
push
add
xor
add
mov
loopne
popf
fimuls
add
add
fnsave
add
add
dec
add
into
mov
push
or
pop
imul
sti
clc
and
mov
leave
lods
movsl
popa
dec
add
bound
mov
jmp
add
add
aas
mov
in
nop
add
pop
stos
loop
out
ds
in
loopne
dec
in
in
add
scas
rorl
jle
fstps
stc
leave
cld
lds
cli
cmpsl
jg
mov
loope
rcl
xchg
psubw
add
xchg
inc
cmp
add
mov
repz
xchg
cmp
test
add
add
inc
add
testb
lds
add
push
inc
add
decb
cld
data16
dec
fdivrs
rcl
add
jmp
add
mov
lret
pop
cmp
dec
adc
bound
mov
add
jb
pop
cmc
mov
sbb
xchg
dec
mov
dec
in
mov
arpl
stos
add
data16
lret
test
add
sbb
cli
sub
xor
mov
movsb
add
call
pop
add
imul
xchg
push
add
xor
add
add
mov
add
add
mov
rolb
add
sbb
add
sub
popf
xor
jne
add
add
sahf
inc
add
sub
xchg
add
add
add
adc
or
or
pop
cmp
add
roll
decl
sarl
dec
sarl
lods
in
sidtl
jge
jl
inc
xor
mov
push
add
add
and
or
jb
iret
fldcw
push
add
lds
ljmp
imul
cs
pop
or
add
push
mov
jmp
call
movb
add
je
sbb
sbb
add
add
add
jne
add
sbb
mov
xor
arpl
pop
das
mov
cld
mov
stc
scas
movsb
add
jp
scas
or
test
add
xor
add
add
test
fimuls
add
or
add
pop
xor
add
stos
mov
cmc
xchg
add
lods
mov
add
add
loopne
je
aam
add
mov
sbb
mov
jmp
add
add
add
lock
mov
insl
outsb
mov
imul
jae
mull
popa
xsaveopt
pop
xchg
jmp
add
push
mov
push
or
bound
mov
sub
push
mov
inc
in
xchg
pop
iret
jne
or
sbb
int
in
sub
jne
add
out
add
stos
mov
dec
fxch
insl
inc
xchg
xchg
add
mov
mov
inc
nop
add
lock
add
addb
and
mov
mov
pop
pop
lret
sahf
xor
push
add
sub
pushf
popa
mov
out
loope
dec
in
daa
jnp
add
add
pop
pop
and
movb
test
xchg
add
ret
add
mov
mov
std
jge
add
dec
add
add
insl
iret
jl
pop
sbb
cmc
or
data16
das
inc
add
jae
insb
ljmp
mov
cwtl
jle
leave
or
jg
xchg
add
dec
mov
add
mov
hlt
add
mov
or
testl
xlat
pop
jae
add
add
push
add
add
xor
add
pop
out
mov
mov
loope
xor
test
pop
fiadds
add
add
jmp
add
dec
mov
add
sbb
add
mov
add
add
lret
push
and
mov
les
jbe
test
cmp
add
pop
js
lds
sbb
add
mov
lods
jnp
jo
xor
cmpsb
add
add
sub
xchg
add
push
add
mov
test
jp
add
stos
adc
add
add
mov
nop
add
jne
pusha
add
push
out
imul
mov
add
add
mov
add
mov
jmp
add
add
mov
mov
pop
mov
scas
sbb
dec
inc
pop
sti
dec
sub
cwtl
arpl
add
cmp
mov
dec
bound
mov
xor
cmp
xchg
push
test
mov
jge
in
jl
lret
push
add
add
add
add
add
add
and
mov
add
sub
sbb
jae
cmp
mov
adc
add
mov
lock
inc
adc
xor
popa
xor
or
jno
xchg
add
gs
xor
mov
add
loope
add
add
fcom
lea
pop
std
cwtl
sub
push
add
mov
mov
fstps
cmpsl
push
xor
push
add
add
and
mov
add
mov
out
dec
shll
add
insb
in
testb
add
jno
pop
add
mov
xchg
add
add
pop
push
add
sbb
add
mov
add
mov
jmp
xchg
lods
insl
movsb
add
add
movsl
mov
and
mov
movsl
pop
xchg
les
xor
scas
adc
pop
add
mov
mov
int3
imul
add
add
pop
movntps
mov
mov
pop
xor
sbb
add
mov
clc
scas
adc
add
and
sarl
mov
mov
dec
out
fbld
rolb
xchg
aad
inc
add
add
add
rolb
mov
xor
xor
scas
sbb
stos
std
jecxz
pop
mov
mov
mov
out
add
xchg
add
mov
or
sbb
sub
inc
cmpsb
add
add
sub
add
add
add
mov
cmc
fldcw
imul
jge
mov
add
mov
dec
adc
sbb
test
std
popa
sbb
inc
dec
pushl
repz
jbe
sbb
hlt
add
dec
pop
cs
dec
xchg
std
jg
add
sbb
push
xor
js
movb
popa
icebp
out
pop
jns
add
mov
add
adc
jmp
pop
mov
or
movsb
add
movsl
jnp
xor
dec
pop
in
dec
add
pop
jmp
add
add
push
inc
add
pushf
dec
outsl
sub
pushf
jecxz
mov
mov
jg
add
add
add
fxch
jns
stc
push
jae
idivl
cltd
jmp
dec
cmp
jge
pop
jb
ret
lods
xchg
push
lods
inc
add
jle
xchg
mov
cmp
jb
or
les
leave
fstpt
add
add
add
xlat
sahf
and
add
leave
ud2
cmp
push
add
sahf
fildll
dec
mov
rolb
mov
sbb
movsb
add
outsb
out
rolb
testb
sub
add
inc
add
add
add
aaa
or
fidivrl
jno
add
jnp
pop
mov
add
ret
mov
fadds
sub
add
mov
jb
lods
pop
mov
push
cmp
inc
add
sub
jp
int
add
in
jne
sbb
xor
and
insb
enter
cmp
cmp
mov
xlat
hlt
add
jl
add
testb
xchg
xchg
add
insl
rolb
add
or
iret
xchg
data16
pop
mov
out
mov
cmpsb
add
fsubs
add
pop
daa
daa
and
mov
xchg
stos
pop
testb
loop
dec
add
mov
into
mov
dec
js
add
xchg
add
bound
mov
add
add
add
add
inc
add
add
add
and
jg
xor
mov
add
jo
cli
std
in
stos
and
mov
add
arpl
ja
repnz
mov
scas
insb
push
ja
add
repnz
pop
pop
add
mov
inc
add
add
pop
popa
sbb
ja
add
add
and
mov
lods
das
js
or
std
dec
sbb
add
add
je
xchg
xorl
cld
add
add
sti
call
add
scas
lcall
xor
push
add
jno
scas
bsf
insl
stos
inc
add
add
pop
jno
add
add
mov
scas
fcomps
jne
int3
ja
add
lock
movb
adc
mov
add
addr16
add
mov
inc
add
sbb
mov
sub
aad
add
add
add
add
inc
add
mov
loop
cld
jle
inc
sahf
add
mov
iret
cmpsl
les
call
mov
lds
js
fcomip
test
pop
in
scas
outsb
cmpsl
fists
add
mov
jnp
add
xlat
lds
mov
fs
aam
add
lret
jecxz
xchg
inc
add
add
add
add
add
mov
add
sub
les
xor
inc
add
adc
push
sti
lds
scas
stc
and
mov
add
sbb
push
mov
enter
gs
add
call
and
divl
add
dec
xor
testb
push
cmp
mov
out
data16
push
xchg
add
add
adc
add
mov
adc
mov
test
pop
jg
add
cld
mov
mov
pop
inc
je
cld
add
dec
mov
sub
add
add
add
jle
arpl
add
iret
xchg
jl
add
fwait
xchg
sub
push
add
out
cmp
or
add
pinsrw
xor
mov
mov
push
add
and
mov
fwait
in
cltd
sbb
add
scas
lahf
outsb
orl
dec
jnp
add
jne
dec
push
add
add
fdivl
loopne
push
sbbl
or
xchg
sbb
in
call
ja
mov
cs
fwait
mov
mov
add
mov
mov
in
jo
pusha
add
add
xchg
add
add
decl
loop
mov
aas
push
or
into
mov
jnp
mov
mov
inc
and
pop
sub
sbb
fildll
in
orl
jle
mov
scas
rolb
add
cmp
addr16
dec
sbb
mov
dec
sub
out
cmp
push
jno
add
adc
jae
pop
or
add
jle
pusha
add
cmp
stos
or
sbb
movb
movaps
int3
imul
push
sub
and
add
addb
push
add
mov
sar
lahf
jmp
add
js
pop
lcall
add
add
adc
add
mov
outsb
jae
add
xor
jl
jp
adc
fidivrs
add
lods
jns
cmpsb
add
rolb
cmc
lods
xchg
jmp
push
out
and
in
mov
add
dec
mov
push
cli
int3
add
push
or
enter
hlt
add
leave
mov
ret
sub
or
mov
xlat
sbb
incl
mov
inc
jnp
mov
test
push
add
testb
add
mov
out
dec
dec
sbb
xchg
add
pop
add
data16
add
add
into
mov
pop
sbb
xor
dec
xor
mov
add
mov
add
imul
hlt
add
add
stos
cwtl
adc
repnz
add
add
mov
out
repz
imul
inc
xchg
add
mov
jbe
dec
push
mov
add
add
adc
int3
test
fcmovb
add
daa
mov
add
clc
sub
jnp
rolb
mov
std
add
mov
add
add
push
les
mov
add
sbb
add
inc
repnz
loopne
or
add
int
and
xchg
and
mov
aad
sbb
adc
fidivl
add
lock
mov
pop
sub
add
pop
or
psubq
inc
add
bound
mov
add
adc
add
add
add
cmp
add
add
add
jp
add
cmp
push
add
add
xchg
add
adc
ds
lock
int
ljmp
add
mov
and
add
das
dec
add
vandps
rolb
out
adcl
data16
data16
fsubl
add
outsl
mov
bound
mov
add
mov
dec
pop
test
xchg
sti
cwtl
rcll
sub
cmp
cmp
stos
jnp,pt
add
incl
and
add
std
mov
aam
xchg
in
xchg
jl
inc
add
xor
cmpsb
add
push
xchg
add
dec
shrl
out
lahf
mov
add
add
mov
enter
add
bound
mov
mov
dec
inc
add
out
movsb
add
add
aaa
jp
pop
test
add
xor
popf
and
or
add
sub
mov
xchg
inc
add
or
jl
js
add
cmp
cmp
cmp
push
add
xchg
mov
das
punpckldq
mov
push
imul
insb
cmpsb
add
ljmp
jle
xchg
cmc
ficompl
add
stc
lds
add
add
add
popa
pop
rcl
add
fisubs
ljmp
aas
dec
adcl
xchg
push
add
add
and
mov
add
add
jnp
add
daa
cwtl
repnz
push
nop
add
push
add
inc
add
inc
xor
mov
test
cmp
arpl
ficompl
jmp
and
jb
cmpl
gs
or
popf
mov
cmp
mov
test
int3
into
outsl
movb
sbb
stc
dec
and
mov
das
sbb
js
out
dec
jp
ss
xchg
mov
mov
add
cs
add
mov
mov
inc
add
inc
dec
fdivrl
push
mov
add
add
add
subl
mov
stos
jnp
lds
sbb
add
cmpsb
add
xchg
inc
add
add
sbb
and
mov
jg
sarl
fcoml
xor
rol
add
mov
add
add
cmpsl
push
add
pop
jge
dec
hlt
add
mov
jb
pop
add
leave
push
jnp
add
add
add
popf
xchg
add
sahf
inc
mov
clc
adc
je
in
jbe
inc
vpcmov
add
add
scas
jmp
add
add
push
jmp
add
add
xchg
fcomi
jp
popf
call
stos
pop
cmp
or
adc
sub
lods
aad
sbb
or
sbb
add
dec
dec
shll
sub
add
lds
add
pushf
dec
pop
fdivrs
mov
cmpsl
and
add
mov
inc
add
ret
jp
imul
sub
iret
pop
sbb
add
std
jg
ja
mov
cmpsl
inc
popf
pop
push
mov
rolb
cmp
pop
loop
cmpsb
add
sub
es
aaa
les
fdivr
sbb
add
mov
scas
outsl
mov
xchg
add
cltd
push
je
stos
dec
lods
mov
pop
inc
add
nop
add
lahf
mov
adc
dec
cwtl
imul
add
mov
cmp
add
cmp
hlt
add
dec
aaa
ret
mov
les
fiaddl
cmp
lcall
add
mov
add
add
add
push
sub
leave
or
add
sbbl
leave
lds
add
mov
xchg
add
scas
pop
mov
mov
adc
mov
mov
stc
clc
sbb
add
push
add
pop
in
fisttpll
add
add
push
add
std
mov
jge
in
adc
mov
xor
add
cmp
scas
lock
gs
add
push
jno
in
add
lcall
addb
out
or
add
or
pop
add
mov
jg
or
pop
sub
xchg
inc
std
sbb
adc
movb
jo
dec
and
mov
scas
out
adc
sbb
sub
adc
xor
mov
push
mov
add
push
rcrl
loopne
cmpsl
dec
flds
add
add
aas
push
mov
inc
push
inc
ss
movb
pop
fstps
testl
add
add
add
mov
dec
cmp
add
push
add
mov
sbb
addr16
push
add
adc
add
dec
add
mov
mov
cld
xchg
movb
add
mov
lods
repnz
cmpsb
add
test
cmp
aad
test
mov
pop
jb
mov
addb
addr16
add
add
add
add
add
stc
movsl
sub
test
pop
or
pusha
add
insl
sub
aaa
sub
inc
add
nop
add
add
add
add
out
cltd
ret
xor
and
add
rolb
xor
jp
das
and
jp
add
add
xor
add
xchg
add
mov
add
and
mov
testl
adc
jbe
addb
add
add
and
cmpsb
add
ror
int
xchg
insb
add
pop
add
mov
pop
outsl
ret
in
lods
dec
jp
cmpsl
mov
dec
mov
add
mov
add
out
ret
loop
push
fnsave
add
adc
cmp
add
jecxz
add
add
fsubs
cli
xchg
add
sahf
mov
mov
add
lret
pop
xchg
mov
xchg
add
mov
add
pop
cltd
outsb
fdivl
cmpsl
popf
leave
and
mov
pop
enter
dec
xor
push
add
rolb
push
add
in
pusha
add
jl
pop
dec
xor
arpl
add
lret
and
sahf
push
pop
add
add
add
fimuls
add
add
pushf
adc
popa
mov
sub
popf
addb
rolb
cld
sub
push
out
mov
push
add
fwait
stc
pop
out
add
pop
rolb
adc
sahf
mov
imul
sbb
gs
mov
add
add
add
mov
inc
jbe
les
in
adc
xlat
hlt
add
add
mov
aam
mov
cmp
lret
inc
add
add
ret
xor
push
add
repnz
inc
test
add
xor
mov
rolb
rolb
jecxz
data16
add
add
das
ffreep
add
test
xchg
add
test
repz
daa
pop
cmp
add
outsl
inc
add
add
add
cmp
pop
dec
sbb
add
add
ret
repz
xor
jo
lahf
mov
or
popa
adc
sbb
rolb
cmc
add
dec
or
add
add
dec
xor
push
cld
aas
xchg
pop
jge
add
mov
push
push
jp
cltd
lods
push
or
add
mov
jb
je
call
mov
add
xchg
outsl
dec
xchg
mov
push
add
fwait
pop
jns
das
sbb
cmp
jns
add
mov
mov
sub
or
or
add
test
cmp
mov
into
pop
jp
sbb
add
repnz
jns
fmull
movsl
aaa
test
sbb
dec
fdivr
push
pop
mov
pop
adc
lret
mov
adc
add
mov
out
mov
cmp
and
mov
outsb
push
les
lock
sbb
arpl
cmpsl
jge
jno
adc
add
add
push
add
add
das
sbb
sub
movnti
pusha
add
lcall
in
sub
add
sub
add
fdivr
inc
add
mov
int
add
iret
xor
adc
jg
pop
xchg
arpl
xchg
adc
repz
ret
xchg
pop
and
mov
inc
add
add
sub
mov
or
push
mov
dec
xlat
mov
sbb
pop
in
repz
and
lds
stos
mov
add
push
hlt
add
frstor
mov
cmpsb
add
add
or
cmpsl
rolb
les
in
cwtl
dec
inc
add
imul
add
stos
idivl
stos
ljmp
dec
aam
das
fcmovu
test
add
jo
enter
addr16
inc
add
add
mov
xorl
add
lret
fstl
lss
add
out
fcmovbe
add
add
add
xchg
adc
jmp
add
scas
rorl
xor
mov
mov
add
fidivl
add
push
add
mov
test
add
push
add
jo,pt
sub
add
mov
adc
enter
and
add
adc
arpl
jbe
lea
ret
dec
mov
add
push
add
add
xor
mov
inc
push
shl
add
cmp
pop
and
inc
cltd
sti
mov
dec
lcall
add
rorl
jo
dec
sahf
dec
xchg
push
add
add
mov
inc
add
rcll
dec
or
dec
aad
ja
mov
lcall
add
jbe
fcomp
inc
add
data16
mov
imul
dec
add
add
orl
push
add
or
add
add
add
mov
jbe
subl
out
add
add
add
xor
call
popa
mov
into
adc
aam
sahf
mov
adc
push
cmpsb
add
add
pushf
rolb
testb
js
add
pop
scas
sbb
nop
add
or
lock
mov
add
jo
gs
rol
add
or
fildl
in
mov
jp
push
pop
mov
add
and
add
lock
mull
push
pop
push
add
in
cmp
popf
add
add
lea
mov
add
cmp
add
or
jle
out
fbstp
aaa
out
add
lods
in
les
fwait
and
stos
add
pop
loope
addb
add
gs
lods
fsubs
dec
xor
mov
xor
pushf
stc
lret
mov
sbb
add
add
repnz
movsb
add
add
push
add
fistl
add
aaa
repnz
mov
add
mov
sti
mov
inc
jl
mov
or
push
add
add
dec
pop
rolb
or
add
imul
add
stos
xchg
add
add
dec
push
mov
add
pop
ja
add
mov
imul
out
rolb
pop
adc
sbb
fists
dec
push
add
push
mov
jo
aad
mov
add
add
dec
cwtl
in
push
jb
jne
out
jge
xchg
add
add
les
jns
adcl
add
add
add
testb
add
pop
fsub
add
dec
or
add
mov
enter
add
sub
pusha
add
push
add
push
add
out
push
add
loopne
pop
lds
or
fcoms
addb
lret
aas
sub
inc
add
add
add
fistpl
xchg
add
dec
sub
sbb
add
mov
imul
add
sub
std
inc
push
int3
xlat
mov
add
cmc
mov
mov
in
jl
ja
add
mov
insl
xchg
rorl
sub
add
add
pop
fcompl
inc
xchg
movsl
lahf
xor
inc
xchg
pop
fcomip
dec
aas
jl
in
xor
adc
xor
add
leave
xor
add
jno
lock
add
repnz
pop
fstpl
hlt
add
mov
fsub
sub
add
add
mov
dec
sub
push
add
sub
add
add
std
xor
adc
int3
out
loop
cmp
jle
add
in
je
add
add
add
repz
add
loopne
jo
jbe
test
out
xchg
not
add
add
lods
rorl
mov
pop
in
insb
fwait
xlat
cmpsb
add
adc
cmp
rolb
pop
ret
or
add
inc
add
lret
jno
add
mov
add
cmp
mov
or
mov
add
xchg
jecxz
add
cs
add
pop
popf
out
xor
add
adc
shl
add
loopne
aam
xor
lds
mov
mov
add
mov
pop
jae
fsubl
and
add
pop
xchg
mov
int
add
cltd
je
jg
add
pop
lds
adc
xchg
add
add
add
mov
push
data16
adc
js
cli
fwait
in
addb
add
mov
add
sbb
xchg
sub
ffree
out
mov
push
add
add
lds
and
add
mov
add
add
add
mov
mov
addb
lods
aaa
cmpsb
add
sahf
jecxz
mov
add
add
aas
jb
sub
adc
dec
inc
add
mov
pop
lock
xor
call
rolb
or
lcall
add
cmp
xlat
mov
loop
stos
mov
imul
jg
mov
add
lea
add
mov
jae
test
and
mov
inc
pop
filds
mov
add
or
xor
add
sbb
or
mov
pop
test
sub
mov
jnp
add
loop
mov
cltd
xor
push
add
add
testb
ret
push
sbb
jbe
push
fmuls
or
sub
push
testb
jb
mov
add
add
pop
filds
add
mov
les
sub
xchg
add
xchg
add
out
fidivs
add
cmp
popa
scas
xchg
loop
cmp
jns
sbb
aad
mov
add
es
cmp
insl
lret
add
test
imul
xchg
dec
repz
clc
push
add
and
add
add
pop
and
jge
arpl
rolb
loop
mov
mov
scas
roll
or
xor
cmpsb
add
mov
xor
xchg
add
sub
add
add
and
pop
push
add
add
mov
in
cmp
add
js
mov
add
mov
mov
mov
add
jmp
add
movsb
add
mov
fisubs
loope
xor
lahf
pop
incl
arpl
jae
dec
mov
mov
add
push
add
sub
add
add
mov
fadd
add
xchg
js
add
sub
sbb
sarl
ljmp
and
mov
add
cli
aaa
jge
add
add
add
pop
push
add
movsl
mov
inc
add
aam
imul
stos
mov
in
in
mov
dec
sbb
aaa
jns
test
shrl
push
stc
pop
mov
add
mov
pop
mov
sub
dec
dec
xor
scas
cmp
stc
lret
icebp
cmp
mov
in
or
mov
in
test
fs
test
pop
add
bound
mov
add
add
and
mov
mov
push
xchg
imul
xchg
add
aad
std
rolb
or
mov
lret
pop
dec
shll
mov
push
mov
mov
ljmp
xchg
mov
and
mov
xlat
rolb
or
movsb
add
add
jb
pop
lock
cs
ljmp
testb
adc
xor
add
outsl
jle
mull
sub
int3
and
sbb
xor
lods
inc
add
add
mov
add
mov
cs
dec
and
pop
mov
push
add
addr16
sti
jle
rorl
roll
lahf
mov
nop
add
add
add
push
add
add
and
mov
add
xor
add
add
add
aaa
mov
enter
mov
xor
add
add
and
or
cld
mov
mov
sbbl
out
xchg
add
aas
lahf
sub
repnz
add
js
sub
int
xchg
mov
add
add
movsl
daa
outsb
or
mov
add
sbb
push
add
adcl
add
mov
rcll
pop
jmp
lret
inc
insl
jo
add
mov
sbb
cmp
add
inc
fldt
call
add
arpl
add
les
scas
nop
add
xor
nop
add
lds
lds
les
push
adc
mov
pop
adc
icebp
xchg
fwait
mov
inc
and
mov
add
test
jns
add
mov
add
addr16
pop
add
mov
leave
loop
call
pushf
and
add
outsl
push
push
jmp
add
adc
shll
lahf
dec
add
mov
ret
add
mov
repz
add
adc
inc
add
loope
aas
inc
add
pop
scas
add
pop
push
add
add
stos
dec
or
add
pop
sti
adc
fadd
or
insb
push
xchg
into
push
scas
sbb
imul
in
fisubs
mov
bound
mov
std
xor
xor
addb
or
rolb
das
out
inc
cmp
add
and
pop
mov
insl
test
hlt
add
pusha
add
add
mov
fidivrl
mov
add
add
in
and
add
add
pop
mov
outsl
dec
cwtl
pop
inc
add
scas
call
add
dec
cmp
gs
xchg
pop
cmp
cs
dec
mov
inc
addb
cmpsb
add
or
add
rolb
ret
sbb
inc
add
repz
shll
xchg
cmpsl
mov
ret
scas
mov
in
mov
add
add
add
xchg
xchg
mov
movb
mov
add
add
pop
pop
sbb
and
xor
je
fists
testb
add
ficompl
xchg
add
lea
nop
add
fdivrl
mov
out
mov
je
call
hlt
add
jg
dec
sub
data16
ds
dec
sbb
addr16
pop
fidivl
add
std
add
hlt
add
add
mov
test
lods
push
add
lahf
movb
add
into
rcll
push
add
inc
add
add
pop
popf
mov
lret
mov
cmp
xchg
aam
or
je
sbb
sbb
pop
mov
mov
iret
jne
cmp
add
pop
cltd
lock
loop
and
mov
addr16
or
div
add
add
add
and
mov
cmp
inc
add
les
mov
rcrl
data16
clc
rolb
pop
out
addb
outsb
in
mov
add
add
mov
add
inc
add
xor
testb
add
mov
jl
mov
mov
icebp
mov
js
add
mov
mov
addb
pushf
add
iret
or
xchg
add
loopne
push
add
add
leave
mov
sbb
add
add
add
add
out
mov
addb
faddl
jnp
add
iret
mov
add
xchg
das
jmp
and
mov
xchg
mov
adc
add
aad
movsl
lcall
add
lods
loope
add
add
sub
mov
loope
insb
or
add
add
subl
xchg
addb
add
add
jmp
mov
jne
inc
add
pop
ljmp
add
and
sbb
add
and
mov
push
add
cmp
ljmp
add
mov
repz
add
jge
popf
lods
mov
sub
imul
rolb
dec
pusha
add
push
add
add
lcall
add
add
push
add
mov
ret
clc
fwait
push
add
outsl
stc
and
inc
inc
add
lcall
add
pop
call
add
mov
fsubl
add
add
add
scas
rolb
sbb
add
ret
mov
push
rorl
inc
add
push
add
add
ds
add
sti
dec
popa
hlt
add
jg
add
add
mov
insb
in
testl
jg
dec
cmp
adc
mov
jg
add
mov
add
ja
sbb
cmp
mov
jo
add
mov
sub
add
loope
stos
xor
jp
add
add
pop
mov
inc
add
sub
call
cmpsb
add
add
add
add
aas
xor
aas
imul
lods
mov
cmpsb
add
add
xchg
add
add
testb
mov
stos
test
cmc
xor
popf
adc
xchg
sub
pop
testb
scas
test
aad
xchg
push
int
add
xor
lods
mov
add
xchg
jp
inc
add
lds
add
add
iret
xchg
add
add
cmp
test
lcall
add
xchg
xchg
push
add
add
rcll
add
in
lahf
cmpsl
add
add
add
mov
out
add
in
sbb
inc
cmp
xchg
xlat
test
cmp
mov
add
adc
jae
add
add
jmp
push
sbb
add
rolb
gs
pusha
add
jo
push
into
inc
add
lea
out
add
mov
outsl
pxor
mov
lds
sub
add
or
pop
jg
mov
cmpsl
jle
dec
cmp
cmp
add
popf
leave
adc
and
mov
cwtl
fidivl
add
adcl
add
add
add
add
out
add
mov
call
add
and
mov
add
lahf
cmpsl
inc
add
jl
test
add
popa
int3
push
add
test
add
inc
pop
push
add
inc
add
xchg
pushf
cmp
add
adc
or
or
add
pop
mov
pop
jb
fldenv
ret
jns
call
shll
adc
fs
add
aam
addb
or
movb
daa
xor
arpl
sub
push
std
shrl
lods
cmp
or
repnz
add
push
add
xchg
stos
movb
add
jb
jnp
fidivrl
in
inc
add
clc
push
add
add
add
mov
loop
add
mov
mov
mov
jbe
xchg
add
mov
xor
out
addb
add
pop
add
mov
add
cmp
add
fcompl
mov
aaa
lret
and
push
push
add
adc
mov
xor
add
xchg
add
push
mov
in
fsubrs
rolb
dec
std
and
out
cmp
sti
add
mov
es
add
sub
leave
je
mov
flds
sbb
adcl
and
mov
jl,pn
jns
data16
test
add
loope
and
add
or
add
jg
dec
and
test
daa
sahf
loop
sahf
lahf
out
add
add
sti
and
push
add
add
mov
rolb
adc
add
dec
loope
jns
push
popf
mov
xor
popa
stos
inc
add
jmp
add
add
mov
sub
ficoml
pop
jo
test
out
imul
fistl
ds
pop
lea
inc
add
cmpl
add
add
add
add
inc
scas
cmp
je
scas
xchg
cmc
pop
dec
adc
jmp
loopne
icebp
ss
pop
mov
loop
out
in
lahf
mov
add
push
push
add
lcall
stos
popf
jecxz
add
add
pop
or
sbb
imul
outsl
outsb
pop
call
add
cmp
add
add
add
cltd
xor
or
mov
add
add
add
or
and
mov
scas
sbb
adc
add
fistpl
xchg
add
add
add
add
jge
dec
inc
xchg
add
add
ret
scas
inc
dec
data16
in
push
cmpsl
xchg
or
popf
mov
out
add
add
bound
mov
mov
shll
scas
das
xchg
rolb
int3
push
add
pop
adc
mov
xchg
add
jns
mov
xchg
add
add
adc
jmp
addl
aaa
test
add
adc
cmp
in
jb
mov
xchg
add
insl
cmpl
fstpt
cmp
dec
int3
cmpsb
add
ret
add
repnz
arpl
mov
test
mov
xchg
repz
daa
mov
mov
test
sub
ds
cmp
outsl
jg
nop
add
sbb
jo
movb
in
inc
add
sub
xor
out
fnstsw
jns
add
frstor
fcmovb
add
add
scas
xchg
add
inc
movsb
add
lret
in
dec
push
add
fwait
sub
out
jg
add
aaa
mov
into
xor
jl
popf
cli
cmp
add
sub
pushf
xchg
and
mov
add
stos
ja
pop
test
dec
out
fiaddl
or
pop
sub
add
lds
scas
jl
insb
sbb
dec
cmpsl
out
dec
mov
dec
xchg
add
mov
sub
lret
pusha
add
pusha
add
lods
outsb
pop
fsubp
pop
pop
movb
or
add
mov
sti
pop
jno
dec
mov
in
cs
adc
popf
dec
jl
add
add
or
es
jle
add
mov
fdivl
add
add
add
xchg
add
xor
mov
bound
mov
fs
add
add
sbb
ljmp
outsb
pop
dec
mov
iret
jne
pop
cwtl
fadds
xchg
outsb
or
push
in
add
add
add
push
bound
mov
das
push
add
fwait
int3
aam
dec
adc
inc
cmp
add
fcmovnbe
mov
cmovae
add
bound
mov
scas
xor
pop
mov
add
ret
scas
adc
lods
xor
add
add
or
mov
mov
insb
sub
out
loopne
xor
aad
dec
scas
mov
rolb
cmp
jmp
ds
cmp
add
mov
ficoml
fwait
sbb
add
add
call
add
add
mov
testb
and
enter
jbe
fadds
faddl
ljmp
jno
mov
xchg
add
add
lcall
aam
call
addb
fists
jns
outsl
daa
jno
add
mull
pop
addb
ffree
add
sub
sbb
outsb
mov
dec
into
mov
insl
addb
add
add
movb
mov
push
add
add
jbe
mov
mov
addb
add
mov
add
leave
test
add
add
fistpll
fdivrs
dec
pop
movsl
and
mov
adc
add
add
push
in
pop
xchg
mov
xchg
lds
pusha
add
sbb
pop
kmovw
rcr
or
and
add
mov
add
outsb
lds
add
jb
sbb
lret
add
mov
loope
mov
add
sbb
inc
add
add
add
add
imul
push
add
add
add
or
mov
pop
jno
leave
outsb
inc
adc
repz
out
testb
add
bound
mov
jno
stos
mov
add
inc
add
add
add
push
add
mov
jae
add
mov
popa
sbb
xchg
mov
adc
xchg
add
add
in
mov
jge
add
jns
fs
add
pop
pop
sub
dec
xor
mov
add
mov
dec
in
andl
int3
pop
xor
add
mov
push
add
xor
add
add
mov
popa
js
sbb
jg
mov
add
push
xlat
bound
mov
stos
aaa
mov
add
jge
xor
add
movb
add
repz
and
daa
jno
add
sbb
xor
hlt
add
es
add
add
test
movsl
inc
sbb
fwait
mov
rolb
daa
int3
cmc
or
sub
outsb
and
sub
xor
shll
test
leave
addb
add
push
add
add
dec
shll
arpl
int
inc
jmp
add
jg
das
mov
mov
int3
lret
and
jg
push
add
add
movb
mov
call
test
stos
bound
mov
fdivrs
cltd
add
add
cmp
adc
ja
lret
gs
fdivrs
fisttpl
jae
ret
add
and
mov
rolb
or
xor
push
add
in
adc
jno
int
cltd
cmp
fsubl
add
inc
add
jbe
xchg
jo
pop
lahf
xchg
add
mov
xchg
or
sbb
dec
pop
es
add
jne
pushf
ret
rolb
jae
add
js
add
add
les
cltd
addb
add
fwait
pop
adc
scas
and
mov
movsl
loope
push
add
push
pmaddwd
push
add
fidivrs
and
or
cld
push
add
add
out
leave
loopne
cmpsb
add
add
ja
add
xchg
mov
add
sub
add
mov
lcall
int
aam
sub
stos
cmp
or
mov
das
xor
xchg
mov
cmpl
adc
stc
sbb
add
outsl
sub
out
cmpsb
add
sub
jb
mov
push
add
add
cmp
dec
or
pop
lea
xor
add
adc
pop
xor
stos
inc
add
call
add
fldz
rolb
les
sbb
add
pop
testb
inc
add
adc
das
mov
push
add
decl
lfs
in
mov
sahf
jg
jo
das
push
hlt
add
lcall
pop
dec
xchg
sbb
rolb
movb
lret
das
aad
add
add
lret
cwtl
or
mov
call
mov
inc
add
in
pop
cmpl
imull
aad
fisubrs
xor
mov
jge
add
or
mov
add
lea
fldenv
add
add
add
add
mov
mov
ftst
add
or
ret
mov
or
add
jg
repz
or
pop
or
popf
nop
add
add
cli
cmpl
push
add
je
add
mov
xorl
aas
push
add
add
fwait
rorl
cli
or
adc
add
stos
mov
inc
shll
and
mov
push
add
mov
add
add
add
inc
xchg
daa
movb
or
icebp
push
adc
popf
sbb
add
xchg
add
jg
adc
ja
add
stos
push
sbb
or
add
pop
lahf
jne
addb
and
addr16
add
mov
add
xchg
add
cmp
popa
pop
mov
movb
add
pushf
dec
push
add
sub
mov
sbb
add
dec
jmp
add
sub
jne
add
and
mov
add
dec
sub
iret
stos
mov
add
add
add
add
in
mov
add
push
add
add
and
mov
aam
daa
rolb
add
sbb
mov
add
add
rolb
add
rolb
ret
insl
popl
mov
jns
add
mov
jge
jo
push
xor
push
add
add
xor
add
inc
mov
popf
inc
add
add
pop
pop
int3
mov
add
xchg
fnsave
xchg
add
add
fcompl
dec
adc
jnp
add
mov
aaa
xchg
add
movsl
and
mov
je
adc
rolb
imul
push
in
cli
and
mov
add
add
icebp
lahf
shrl
add
addb
sbb
pop
adc
repnz
add
jne
jb
fadds
add
xchg
xlat
out
push
stc
sbb
or
add
push
add
xor
sbb
add
add
frstor
inc
add
fimull
add
sarl
jmp
mov
pop
jg
add
dec
loopne
mov
pop
rolb
bound
mov
sub
icebp
in
addb
jl
and
add
jo
dec
mov
inc
call
loop
mov
lahf
adc
cwtl
sub
sub
add
or
add
test
cmp
ret
or
fnstsw
mov
loope
add
sbb
fsubl
ja
dec
jo
pop
imull
cmp
cmc
adc
pop
xor
add
add
add
mov
popa
popf
or
addb
cmp
add
add
add
fucomp
dec
mov
scas
push
lods
rolb
push
add
add
xchg
mov
add
jle
add
mov
xchg
add
sub
xchg
mov
adc
stos
and
enter
add
add
add
push
add
or
add
mov
add
add
out
popf
faddl
add
and
inc
mov
rolb
pushf
loop
iret
mov
push
add
add
sub
and
adc
xor
jmp
mov
stc
mov
add
mov
inc
movsl
jae
adc
or
mov
mov
into
rcll
mov
test
sbb
stos
xchg
mov
sahf
addl
sbb
lock
movsl
clc
int
sbb
mov
mov
xlat
mov
lock
lock
cmp
add
push
and
and
mov
jnp
add
push
add
aas
pushf
dec
inc
daa
xchg
jl
xchg
dec
imul
hlt
add
fdivrs
jle
leave
int
or
inc
inc
rcll
aas
jns
jmp
add
lea
sbb
in
pop
out
pop
lret
ds
ficoml
cmp
and
add
movb
inc
stos
sahf
lods
sbb
add
push
outsb
test
test
pop
pop
adc
lea
cmpl
cmp
push
add
sbb
stos
int3
sub
add
add
pop
ljmp
fstps
pop
mov
xchg
sub
mov
add
movsb
add
and
mov
adc
dec
push
add
add
out
add
sahf
inc
add
cmp
mov
icebp
push
or
add
mov
add
mov
stos
or
mov
add
fnstsw
aad
and
fnstenv
pusha
add
mov
add
cltd
sbb
js
mull
mov
adc
pop
push
add
inc
add
xchg
sbb
sub
jns
add
add
and
mov
fimuls
add
mov
out
add
add
add
pop
add
add
add
add
arpl
addb
mov
fwait
xchg
and
mov
pushf
mov
add
cmp
add
lods
bound
mov
in
xchg
add
mov
add
mov
lds
dec
pop
popa
pop
dec
loope
adc
sbb
add
xchg
imul
rolb
aam
add
mov
push
nop
add
testb
gs
add
clc
clc
rolb
aas
scas
out
xor
adc
sbb
pop
cltd
lods
in
pop
roll
xor
adc
mov
and
mov
mov
add
mov
imul
aam
mov
mov
aad
scas
xlat
repnz
in
sub
orl
nop
add
add
outsl
add
pusha
add
outsb
pop
lret
push
add
jns
addr16
pushf
xchg
add
or
lods
dec
xor
test
aas
fdivrl
cltd
mov
add
cmc
mov
adc
ret
sarl
sti
leave
das
stos
lds
cmp
push
adc
ret
lock
mov
cli
add
mov
add
test
add
in
pop
lods
dec
push
xor
inc
jl
lahf
xchg
push
add
jbe
jb
push
add
cltd
sub
push
sbb
fimull
lea
movsb
add
add
xchg
mov
adc
out
pop
rolb
sahf
inc
leave
xor
loope
add
add
add
add
add
add
xor
xchg
push
or
test
lds
lock
xor
fwait
addb
pop
mov
add
stos
out
xchg
inc
shll
dec
xchg
add
add
add
xchg
add
jmp
add
sub
add
mov
adc
mov
xchg
repnz
daa
into
mov
pusha
add
push
add
jp
pop
jno
add
rolb
fwait
mov
sbb
inc
cmp
adc
xchg
ss
xchg
testl
stc
les
jecxz
in
addb
xchg
add
add
add
pusha
add
jg
testb
add
add
pop
movsl
adc
xchg
sbb
rcrl
repz
cld
call
pop
add
movb
dec
rolb
push
add
push
add
add
add
add
fwait
xchg
cli
in
adc
testl
jbe
sbb
out
lahf
rolb
push
add
sti
mov
jge
int
add
add
jnp
jb
out
fldcw
loop
jl
test
addb
les
mov
out
clc
mov
inc
add
add
and
mov
aad
pop
adc
sub
iret
xor
rorl
add
ds
add
add
lret
add
hlt
add
inc
adc
adc
push
add
add
pusha
add
and
mov
lcall
mov
add
add
or
mov
out
add
xlat
andnps
xchg
inc
add
add
add
out
jmp
shll
add
cld
add
mov
add
imul
mov
lcall
mov
in
mov
add
jecxz
add
push
add
fwait
inc
add
mov
add
add
mov
add
add
fstps
mov
add
test
inc
inc
add
sub
add
inc
mov
repnz
sub
into
js
rolb
movsb
add
data16
pushf
je
mov
test
aaa
cmp
add
pop
loopne
call
mov
iret
call
jmp
dec
cs
add
std
rcrl
adc
inc
pusha
add
lds
in
dec
gs
das
movsb
add
mov
xchg
sbb
add
lods
jge
push
movb
inc
push
push
add
push
icebp
fmul
add
cmp
jecxz
add
add
add
mov
jnp
jmp
sub
add
popl
or
add
xchg
add
lds
add
int
add
rorl
outsl
std
call
add
nop
add
jns
add
nop
add
cmp
jp
daa
fsubrl
add
addb
add
inc
add
mov
add
movsl
mov
mov
xor
jle
add
add
sti
add
test
adc
dec
jno
dec
test
xor
mov
data16
push
add
ret
ss
push
les
mov
jbe
pusha
add
add
add
std
mov
add
mov
js
pop
stos
cmp
mov
movsl
dec
movsl
hlt
add
loopne
mov
stc
into
and
adc
aaa
cs
cmp
add
add
or
mov
add
add
add
add
jnp
add
add
sub
test
add
jle
add
inc
mov
leave
popf
outsb
push
push
loopne
aas
add
or
data16
add
mov
lock
nop
add
add
push
inc
dec
and
add
sbb
jmp
xor
xor
ljmp
bound
mov
mov
add
add
add
mov
add
mov
add
or
shrl
or
lahf
clc
icebp
aam
test
add
push
fidivrs
data16
add
aaa
and
mov
cwtl
xchg
std
lcall
adc
lcall
push
cs
add
lods
inc
aas
addr16
add
js
mov
aad
add
fsub
scas
xchg
push
inc
add
aaa
into
push
or
add
add
mov
add
and
mov
inc
stos
dec
repz
sbb
pop
pusha
add
pop
dec
jne
clc
in
push
insl
aad
out
add
jbe
aaa
