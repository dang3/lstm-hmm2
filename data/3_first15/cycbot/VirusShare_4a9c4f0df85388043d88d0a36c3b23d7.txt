enter
mov
data16
jns
xchg
setp
pop
orl
add
aam
and
xlat
mov
push
add
jbe
ja
mov
xchg
lret
pop
mov
fxtract
pop
inc
add
mov
sbb
mov
sbb
sbb
xor
add
cltd
jb
fbstp
sub
test
cs
xor
dec
xchg
mov
int
sbb
fildl
jbe
cli
jae
xor
insl
mov
sbb
rcrl
mov
and
push
push
aad
insb
xchg
mov
es
in
gs
ljmp
push
xchg
clc
movd
jns
dec
out
mov
add
mov
scas
sbb
xchg
jne
pop
cmc
arpl
add
loopne
xchg
inc
bnd
mov
stos
mov
movsl
inc
add
scas
loop
add
mov
jae
jmp
rclb
daa
cltd
out
aam
jae
fwait
js
dec
jecxz
daa
add
out
insl
add
sti
cli
call
add
in
dec
or
fxch
shll
orl
add
fwait
in
jo
cs
xchg
cmp
ret
add
testb
call
sbb
sub
add
out
push
add
call
dec
xor
dec
cli
imul
pop
ljmp
mov
inc
fadd
add
das
std
pushf
inc
addb
add
mov
pop
dec
into
sub
jmp
mov
jae
jg
push
xlat
ret
scas
pop
or
pop
call
loope
or
pusha
add
pop
xchg
lods
call
lret
clc
pop
xor
lds
dec
out
rorl
add
and
push
or
push
jb
insl
sub
in
imul
sahf
push
pop
call
jae
sbb
push
loope
repz
or
dec
addb
mov
and
add
testl
or
popf
inc
jle,pt
out
inc
ljmp
xor
dec
vpcomq
jle
add
mov
jle
push
cli
pusha
add
lods
movsb
dec
ljmp
mov
stos
jmp
mov
add
stos
and
adcl
sbb
notl
push
rorb
xchg
aad
pop
sub
pop
push
inc
inc
add
jecxz
out
add
cmp
stos
mov
add
js
les
xorl
add
lahf
std
cmp
adc
jle
add
dec
cmp
ret
push
and
shrl
mov
mov
cmp
jl
jl
push
jmp
outsl
xchg
xlat
in
push
xchg
lods
jmp
adc
jle
hlt
ds
and
call
mov
push
xor
mov
jl
lods
cmp
and
mov
popa
imul
mov
in
cmp
mov
rcl
cmp
shl
jnp
mov
xchg
imul
add
lock
leave
xor
add
sub
les
roll
mov
jmp
addb
xchg
and
shlb
imul
jle
add
sbb
imul
clc
mov
sub
shrl
addb
mov
repnz
sbb
push
sub
xor
jbe
add
jbe
mov
jno
xlat
dec
adc
adc
jmp
cli
cmp
inc
add
inc
add
fwait
std
out
sbb
mov
lret
inc
movb
dec
xchg
xchg
leave
jecxz
fs
arpl
cmp
icebp
shll
add
dec
and
xlat
xchg
loopne
nop
xchg
sub
dec
fldt
adc
add
mov
stos
mov
jmp
add
mov
xchg
cmp
sbb
add
add
sub
dec
mov
mov
or
scas
inc
add
mov
sbb
sub
mov
jns
pusha
add
add
xorl
jmp
popa
outsl
or
xor
je
adc
jno
jbe
loopne
push
and
fimuls
insb
dec
lcall
insw
jg
add
ljmp
push
add
or
pop
sub
adc
stc
gs
sbb
push
adc
mov
mov
insl
fistl
xor
xchg
into
out
test
repz
add
xor
stc
pop
jb
mov
mov
push
mov
pop
hlt
and
rcrl
jb
add
imul
push
jge
pop
mov
push
aad
rolb
cwtl
push
shll
xchg
fisttps
in
je
add
ret
cmp
pop
test
add
push
js
mov
adc
test
mov
sbb
push
cld
pop
push
add
mov
jp
xor
add
mov
sbb
add
dec
mov
cmp
addb
lret
rolb
outsb
add
jne
mov
cmc
jl
add
jnp
hlt
in
mov
out
push
pop
arpl
lcall
insl
fisttpll
imul
outsb
adc
mov
cmp
icebp
push
pop
loop
sbb
movsb
mov
add
lods
jae
icebp
xchg
shl
mov
mov
aaa
aam
and
xchg
flds
ja
repz
add
pop
call
rcr
insb
das
sub
jmp
data16
insl
loop
mov
cmpsl
sahf
fidivrl
or
add
aam
in
int
sbb
loopne
addr16
fidivrs
cmp
sub
push
add
or
leave
sti
push
or
or
in
sbb
xchg
lret
imul
aam
shl
sbb
hlt
js
es
in
shrl
jb
sbb
jl
addb
mov
gs
movsb
mov
in
cld
mov
pusha
add
hlt
adc
inc
add
dec
jb
bound
into
pop
mov
mov
cli
jmp
xchg
daa
fiadds
pusha
add
sti
in
sahf
iret
pop
adc
pop
push
pop
xchg
xchg
stos
push
mov
mov
mov
mov
add
jecxz
cmp
scas
fmuls
mov
add
mov
and
and
sub
scas
pop
sbb
shlb
push
sarl
hlt
add
mov
test
pop
or
cmc
xor
fst
mov
mov
jae
add
inc
add
sub
add
pop
sub
mov
add
stos
inc
add
notl
popf
adc
jecxz
cmpsb
test
pop
dec
sub
mov
insb
and
mov
lds
jecxz
xor
adc
not
push
nop
fwait
pop
xlat
gs
out
out
fistpll
push
es
mov
les
fists
mov
mov
test
in
arpl
ljmp
arpl
aam
insb
iret
iret
jnp
sub
fiaddl
pop
push
popa
mov
add
inc
add
into
mov
addr16
nop
jecxz
insl
cmpsb
sub
lods
cld
or
rolb
movb
imul
pop
xor
imul
mov
fiadds
icebp
cwtl
jle
fwait
jnp
cmpsb
je
stos
inc
add
add
arpl
add
dec
addl
ret
inc
add
push
outsl
pop
test
call
dec
jns
lods
mov
cltd
daa
idivb
fidivs
fwait
bndstx
add
mov
xor
push
pop
xchg
dec
mov
add
popa
mov
mov
lahf
add
sub
bound
lods
cmp
fadds
pop
fcomip
stc
mov
pop
and
cmp
mov
das
jecxz
jae
sbb
fwait
outsb
jp
mov
and
cs
or
arpl
cmc
push
inc
pop
les
mov
mov
jmp
jge
add
add
inc
add
sti
shll
mov
repnz
inc
add
pop
mov
jbe
sti
lahf
call
jae
lret
sahf
testb
add
shlb
inc
add
cmpsl
dec
rcrl
xchg
add
xchg
mov
pop
push
rclb
inc
pop
repnz
dec
dec
fisubrl
imul
out
sarb
ljmp
add
loope
ficoml
mov
iret
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
lret
lcall
mov
push
stos
aaa
push
or
sbb
imul
xor
dec
dec
ds
mov
mov
jge
nop
test
icebp
ss
mov
pop
aaa
js
outsl
das
fwait
cs
test
or
jmp
out
lcall
repnz
add
jno
pop
ja
add
insl
xchg
shll
add
iret
mov
lahf
cmp
addb
lock
sbb
lret
add
pop
mov
mov
clc
rolb
pop
mov
add
out
add
mov
adc
push
inc
add
fiaddl
add
shlb
adc
lahf
sarl
add
add
add
add
xchg
idivl
in
addb
push
sub
adc
dec
cmpsl
sub
test
clc
mov
or
addr16
out
mov
xor
movb
pop
xor
repz
xor
mov
dec
push
add
or
sub
adc
add
movsl
jp
push
clc
push
cs
adc
sub
jno
iret
fsubl
add
sbb
fsubs
loop
cmpsb
mov
push
ljmp
mov
pop
push
je
cs
push
xchg
nop
test
outsb
f2xm1
insb
loope
dec
popl
in
sbb
mov
into
jmp
rolb
cmp
into
adc
rcrb
gs
in
ret
daa
mov
outsb
sub
pusha
add
xchg
xchg
cmpsl
push
jp
iret
movb
or
jl
lcall
cmp
sbb
lock
sarb
ljmp
mov
pop
bound
mov
lods
mov
imul
adc
dec
dec
push
and
insl
jae
int3
dec
addb
and
in
add
testb
push
push
lea
push
outsl
cltd
daa
dec
gs
inc
add
push
add
push
std
mov
lahf
cmp
push
pop
bound
push
jle
pop
popf
pop
mov
insl
jmp
jno
sub
leave
add
stos
movb
mov
push
cmp
out
xchg
dec
ljmp
push
enter
lea
push
inc
add
dec
push
mov
addb
add
xchg
loope
dec
jmp
xchg
cli
pop
and
shll
nop
ret
jb
cli
movb
ds
aad
xor
mov
je
mov
movsl
jecxz
add
shlb
sbb
xchg
fbld
sbb
cmc
push
cmp
add
pop
aaa
and
movsb
mov
sbb
scas
jmp
jb
and
mov
lahf
fisubrl
add
sarb
mov
aad
or
sub
pop
inc
and
pop
dec
mov
repnz
jl
dec
pusha
add
lcall
add
mov
push
fistps
cmp
push
aaa
fmulp
out
iret
xchg
mov
jecxz
push
xchg
xor
ja
xchg
pop
xor
mov
jle
push
ljmp
pop
cmp
add
clc
add
lods
mov
jg
lahf
and
sbb
jp
mov
xchg
arpl
insb
xor
mov
add
mov
out
xorl
or
imul
jg
sub
inc
add
push
dec
lods
cltd
iret
fimuls
mov
xchg
add
push
or
jg,pt
pop
sbbl
loopne
add
mov
test
add
in
scas
dec
or
scas
inc
mov
jb
mov
sahf
mov
fisubrs
call
and
jbe
sbb
decb
push
add
imull
or
bound
mov
testl
sarl
mov
sub
mov
sub
fcom
bound
ja
mov
cmpsl
lea
mov
mov
lret
pop
and
cmpsl
pop
cmpsl
pop
fbld
in
adc
lds
in
imul
xlat
inc
add
clc
or
inc
add
mov
testb
add
add
popf
pop
pop
fistpll
cmpsb
inc
hlt
in
xchg
out
pop
addl
add
fldcw
push
movb
mov
es
aad
mov
fwait
scas
scas
sbb
xor
iret
test
pop
dec
push
loopne
add
jno
push
sbb
add
cmp
cmpsl
pop
sbb
movsb
sub
xchg
xchg
mov
das
jo
jmp
in
outsl
aas
paddq
xchg
aaa
cmp
jo
lcall
jp
mov
and
jl
cmp
xchg
push
shl
sub
mov
xchg
je
pop
jns
add
cld
data16
jmp
add
mov
or
cmovp
imul
and
mov
mov
fidivrl
test
cli
rolb
adc
aam
cmp
das
dec
mov
push
cmc
and
and
or
out
adc
add
call
in
fwait
aam
add
adc
add
cmp
rolb
nop
jecxz
jo
shl
pop
push
mov
dec
push
lods
ljmp
ds
sub
jl
mov
push
in
and
or
out
iret
cld
addb
dec
and
rolb
add
add
in
mov
jb
dec
movb
fadds
aad
bound
adc
sbb
das
xchg
arpl
outsl
sbb
outsb
dec
add
mov
jbe
mov
mov
popl
add
jecxz
mov
add
bound
inc
jb
divb
xchg
cltd
mov
dec
pop
xchg
pop
das
xor
jg
add
xchg
xor
addb
cmp
sbb
out
pop
or
jb
gs
inc
add
jo
and
flds
add
mov
aaa
shlb
add
cmpsb
xor
gs
mov
jnp
jg
insb
or
push
push
jg
lret
sbb
ret
pop
xor
out
fdivrp
mov
ret
inc
add
sbb
dec
mov
cwtl
lea
pop
xchg
cmp
jno
lret
mov
nop
es
int3
fs
out
in
lods
sub
dec
call
ret
mov
fs
lods
adc
dec
daa
in
jmp
dec
jno
jno
add
imul
jl
add
outsl
pushf
sahf
or
push
mov
jb
loop
lea
pushf
adc
jne
jne
lds
lea
in
inc
add
push
sub
xchg
sub
cs
add
sub
adc
push
addb
add
add
fdivl
sbb
lret
inc
add
lock
push
mov
xchg
mov
add
and
xor
push
in
or
clc
inc
adc
loope
xlat
inc
add
sbb
sub
add
add
add
fdivrs
cmc
mov
out
sbb
sbb
int
neg
xor
inc
add
push
add
inc
out
xor
push
leave
das
loop
sahf
mov
jno
nop
in
mov
or
add
pop
outsb
sbb
dec
sbb
inc
int
pop
mov
push
mov
xchg
lds
sbb
fcmovne
fwait
dec
jmp
out
xchg
shld
or
add
add
dec
or
cli
pop
dec
test
cmc
roll
enter
cmp
add
or
imul
add
mov
fadd
movsl
clc
movb
stos
movb
cmp
fmull
and
cld
lock
movsb
xor
push
test
jne
sahf
rclb
push
push
add
pop
adc
sbb
or
pushf
jns
stos
mov
push
int
push
push
xor
inc
pop
xchg
and
cmp
add
push
xor
jne
mov
dec
insb
adc
mov
fidivl
shlb
sbb
or
inc
mov
add
jl
roll
fs
scas
add
adc
and
or
add
movb
cltd
shrl
imul
or
push
jl
roll
pop
xor
in
lahf
shll
dec
sbb
test
inc
add
fldcw
inc
add
cwtl
xchg
lods
imul
sbb
jg
ficoms
xor
aaa
dec
xor
ret
pushf
dec
fdivrl
fmull
inc
add
inc
add
dec
push
cmp
ficoms
pop
inc
add
sub
xor
add
mov
adc
sub
dec
fidivrs
jae
mov
or
mov
add
fistps
jl
mov
arpl
and
add
orl
stos
repz
adc
add
dec
fwait
cmp
xchg
outsl
push
mov
imul
jb
sbb
add
adc
icebp
mov
xor
popf
cld
adc
add
mov
lods
adcl
pop
out
adc
fsubs
sub
loop
arpl
add
mov
jne
ja
add
dec
mov
jle
xor
jg
add
aaa
xchg
movb
hlt
mov
loopne
fs
push
xchg
add
cwtl
fcomps
rolb
mov
mov
pop
mov
nop
xchg
lds
mov
cmp
leave
pop
add
push
fisttpl
dec
mov
or
xchg
add
aad
js
push
testl
mov
mov
push
cld
inc
add
or
pop
pop
mov
xchg
fldenv
nop
push
pop
xchg
mov
rcl
clc
jecxz
rcr
pop
push
or
das
aam
clc
ret
scas
mov
dec
add
fucompp
mov
add
cmp
aad
xor
ljmp
add
and
shll
pop
neg
ja
insl
jno
scas
rolb
sbb
dec
add
add
pop
jl
xchg
cmp
ljmp
add
icebp
lret
bound
addb
lods
mov
add
jne
jnp
lret
add
mov
push
jnp
xor
add
xchg
movb
call
jl
pushf
pop
sub
rorl
xor
out
decl
push
mov
rolb
sti
lock
lret
aad
sub
pop
fimull
les
dec
push
lret
adc
dec
xor
jmp
pop
push
jns
fldl
insl
ret
imul
bound
mov
sti
out
iret
xchg
mov
test
sbb
mov
out
xorl
push
mov
mov
add
push
add
add
clc
imul
movsb
repnz
or
and
nop
out
out
out
inc
add
sbb
mov
std
aad
mov
mov
xor
push
xchg
pushf
xorl
mov
cmc
ss
sub
mov
pushf
lods
xchg
mulb
pop
xchg
popf
mov
pop
pop
fs
pop
clc
addb
mulb
add
add
sbb
inc
xchg
lds
popf
and
push
xor
sub
aaa
ret
aaa
outsl
and
push
adc
in
cld
out
dec
jmp
push
add
lret
sub
scas
jne
fdivrl
inc
xlat
pusha
add
cmp
inc
or
dec
das
cmpsb
lds
cld
sbb
ds
jns
pop
rcll
dec
add
push
stos
leave
cmpsl
sbb
pop
push
out
lahf
sub
les
pushf
adc
mov
out
sahf
lret
mov
stos
dec
loopne
push
cmpsb
iret
cmp
push
xor
rcl
mov
pop
push
cmp
les
sub
xchg
lret
dec
xchg
mov
adc
repnz
movsb
ljmp
fistps
arpl
dec
mov
mov
sub
out
mov
xor
or
popa
pop
ret
add
add
daa
cmp
lods
cmp
out
es
push
fdivr
scas
arpl
mov
xor
push
or
xor
iret
ss
jle
fidivs
cmp
dec
iret
mov
mov
sbb
in
aaa
arpl
add
add
pop
addb
pushf
mov
and
cmp
js
fwait
adc
xchg
jae
mov
sbb
pop
or
lret
mov
mov
jle
inc
add
sbb
add
jp
cmc
dec
gs
pop
pusha
add
mov
loope
mov
jb
loop
out
xchg
incl
hlt
cmpsl
jae
idiv
es
ja
xor
jmp
inc
stos
xchg
sub
mov
inc
adc
or
lea
cmp
xchg
and
pop
push
addl
xchg
fcoml
ja
cmp
mov
cmp
mov
add
fdivp
sub
ds
cwtl
addb
cmp
sbb
push
mov
ss
xor
fsubrs
pmullw
xchg
rolb
sbb
inc
add
test
cmp
test
add
xchg
jae
xchg
fimuls
inc
add
nop
das
sbb
stc
dec
mov
mov
mov
or
add
sti
push
repz
std
jns
add
inc
add
xchg
inc
adc
nop
sbb
loop
test
test
mov
adc
es
push
add
xchg
mov
les
cltd
mov
fldcw
sbb
xor
pop
xor
push
fisttpll
push
inc
sub
aam
inc
add
das
icebp
sbb
add
mov
mov
mov
sbb
mov
lea
add
lahf
in
addb
jmp
jge
shll
add
xchg
shl
mov
or
push
adc
repz
je
add
fstpl
cmp
imul
push
and
lods
into
mov
sbb
insb
call
dec
and
int
popf
stos
es
push
in
int3
pop
cmc
fldenv
lods
and
inc
add
out
pop
mov
dec
repnz
jp
dec
daa
aaa
sbbl
add
xchg
add
in
inc
add
cmp
clc
imul
xchg
push
mov
daa
sbb
sbb
pop
dec
or
sub
xchg
cmp
imul
pop
mov
fnstcw
cmp
dec
fldl
movsb
std
xchg
in
icebp
es
addb
lds
scas
xor
nop
outsb
mov
add
add
stos
std
sbb
bound
jne
adc
push
shl
loopne
xlat
push
insl
aaa
xchg
push
mov
mov
add
and
fldenv
jl
je
add
aaa
fstpl
imul
add
dec
je,pt
add
add
jmp
in
cmpsl
add
out
cltd
add
sub
orl
lds
jmp
out
cmp
clc
xor
dec
ljmp
dec
into
lahf
jne
orl
imul
shl
ljmp
mov
push
mov
fstpl
mov
jge
stc
test
and
mov
add
movsb
shl
lret
inc
lret
in
xor
mov
ja
int
mov
mov
add
int
cmp
addb
dec
lods
dec
sub
addb
fildll
dec
hlt
out
add
aaa
aad
add
or
std
dec
adcl
add
aad
and
mov
cmc
jae
sub
leave
or
fs
cwtl
daa
or
push
outsl
jb
nop
or
stc
leave
fucomp
das
int3
mov
pop
jbe
sbb
pop
mov
mov
push
add
mov
les
addb
scas
push
xchg
mov
dec
rcrl
jmp
mov
call
add
push
fildll
jle
ja
cwtl
ss
mov
cmp
jbe
pushf
fwait
sarl
inc
add
adc
and
addr16
add
test
xchg
cltd
pop
popf
mov
lods
in
icebp
adc
cli
xchg
pop
or
gs
xchg
fldenv
add
xchg
sub
addr16
add
adc
lods
mov
dec
int
rolb
bound
ret
add
rorb
sub
add
jb
inc
in
mov
inc
mov
aam
movsl
sub
add
or
inc
int3
fisttpll
test
movsl
jmp
ficoms
movb
mov
add
shll
xor
pop
and
shlb
iret
cmp
mov
mov
pop
pop
cmpsb
loopne
fsubp
movsb
out
ja
jns
ja
sete
leave
arpl
dec
je
adc
pop
popa
mov
in
fadds
addr16
pop
int3
sbb
negb
sub
test
popa
bound
fwait
pop
ljmp
pushf
aam
jb
or
add
mov
out
jecxz
cmp
dec
div
inc
cld
ja
fwait
jnp
rorl
inc
add
sub
xchg
mov
pop
inc
add
sub
in
pop
pop
push
jge
call
xchg
sbb
std
js
xchg
xor
add
add
arpl
decb
aaa
ja
imul
addb
jns
stos
outsl
or
popf
or
je
mov
dec
int
push
lret
pop
nop
pop
lahf
enter
dec
popa
push
dec
cmp
movsb
insb
in
push
popa
inc
add
xor
mov
cltd
aad
lods
aad
jae
adc
push
test
ss
addb
sub
ss
dec
jg
jge
outsb
mov
jle
loope
in
iret
movsl
jp
sbb
cld
nop
aam
push
in
neg
inc
ds
ds
popf
ljmp
add
mov
xchg
add
sbb
test
xchg
jbe
mov
mov
pop
mov
xchg
aaa
or
div
push
aad
xchg
cmpsb
jae
xchg
repz
xchg
loopne
mov
jnp
insb
popa
repnz
js
mov
imul
mov
sub
hlt
lret
scas
les
scas
mov
push
lds
out
cld
int
pop
outsl
test
hlt
rolb
fistpll
movsl
mov
sahf
scas
mov
pushl
xchg
ret
sbb
ss
push
call
adc
or
push
add
mov
or
and
add
inc
add
and
add
mov
inc
add
jmp
cld
in
and
repz
jp
repz
jnp
and
out
mov
and
roll
insl
test
inc
imulb
out
and
add
cs
movswl
mov
aam
int3
push
pushf
push
add
xor
sub
call
dec
mov
movb
sbb
cmp
idivl
push
push
aam
aas
cmp
adc
std
mov
loope
aaa
sbb
push
add
dec
adc
andl
dec
cmpsb
push
add
popf
xor
mov
inc
add
sbb
push
cmp
sti
mov
daa
clc
xor
addb
std
leave
add
fs
test
bound
push
mov
fdivp
cs
cmp
lods
jns
outsb
addb
jo
xchg
insl
mov
mov
mov
icebp
xchg
push
popf
sub
xor
or
cmpsb
icebp
sbb
and
push
roll
add
mov
xchg
js,pt
repnz
mov
add
cs
inc
aas
test
add
mov
add
loop
or
fistpll
sarl
jb
adc
imul
leave
negl
dec
inc
add
add
ret
push
lods
push
add
mov
adc
leave
jmp
icebp
jbe
xchg
mov
pop
xchg
fs
xor
mov
add
jmp
cwtl
aas
add
out
mov
addb
or
cltd
adc
jg
js
add
push
add
cs
les
lds
xchg
insb
and
sub
cld
or
xchg
inc
fsubrl
adc
lods
sbb
bound
cld
pop
mov
je
cmp
leave
addb
sub
int
insl
cmp
pop
jbe
out
pop
jmp
push
mov
dec
hlt
mov
jb
popa
pop
shrl
rolb
add
pop
sub
add
xor
fmuls
add
mov
lea
add
add
cltd
fnsave
and
sbb
pushf
pop
mov
in
pop
pusha
add
inc
add
testl
add
add
cltd
mov
in
add
gs
cmp
mov
in
jmp
in
add
int3
addb
leave
add
leave
insb
or
jle
push
jb
add
roll
sahf
std
cld
ljmp
push
out
iret
or
jnp
push
std
xchg
mov
xchg
and
push
sub
rol
add
mov
add
adc
das
mov
mov
loopne
mov
dec
fiadds
dec
inc
add
cwtl
fiadds
shl
mov
adc
decl
and
xchg
repnz
sub
gs
hlt
ja
lret
sbb
pop
sub
and
cmp
and
repz
xor
add
xor
and
shrl
or
add
or
les
icebp
cmp
xor
jae
lahf
jne
outsb
fdivs
sahf
data16
dec
cmp
pop
call
fistl
add
lret
addr16
add
out
aad
aam
mov
out
pop
mov
cmpsb
cmp
add
add
sbb
inc
add
std
xor
add
iret
cs
and
pushw
sub
nop
mov
ja
jmp
add
sbb
into
cli
mov
pusha
add
xchg
js
mov
frstor
add
addr16
sbb
jns
push
add
add
mov
int
sbb
add
mov
loopne
aad
sar
faddp
push
cmpl
add
or
add
jno
jnp
mov
lea
sti
adc
je
add
lcall
adc
jp
add
push
push
mov
inc
add
movb
pop
xchg
daa
call
loopne
add
push
jg
push
cs
inc
pop
test
sahf
ret
out
out
push
je
and
inc
sbb
mov
into
push
sbb
inc
jo,pt
hlt
sbb
dec
add
cmp
xlat
xchg
mov
mov
xor
subl
add
mov
sbb
add
sbb
push
sub
psrld
ret
es
add
and
flds
add
mov
ljmp
dec
imul
out
loope
stos
jns
add
xchg
das
cli
pushf
les
sub
add
sahf
dec
imul
mov
in
pop
cmp
cli
fbstp
dec
jne
mov
scas
scas
inc
add
inc
add
or
jne
inc
add
sbb
in
pop
cmpsb
pop
out
pop
daa
mov
adc
les
jns
add
in
push
lds
psubsw
cmp
cmp
and
adc
cld
inc
sub
ficoms
addb
repz
xchg
xor
sbb
adc
add
outsl
out
scas
adc
hlt
mov
sbb
aam
loope
push
add
les
dec
out
lahf
mov
add
cmp
add
loop
push
dec
inc
popa
xchg
push
lock
out
loopne
add
sbb
mov
enter
mov
jle
rolb
out
ja
and
or
clc
jne
adc
popa
or
add
add
jno
inc
add
xchg
sub
cli
rolb
int3
cli
inc
and
xor
add
stos
mov
rorl
fdivrs
out
sub
mov
nop
mov
rclb
cmp
fsubrs
mov
test
pop
or
les
jae
movb
out
aas
cmp
mov
mov
pop
mov
cmpsb
mov
in
adc
cmpsb
mov
aad
sbb
mov
jb
add
pop
cmc
rorl
js
push
loop
addb
popf
push
hlt
dec
push
pop
aad
aas
addb
add
in
cmpsl
adc
cmp
adc
out
test
mov
std
mov
repnz
lahf
and
and
mov
addb
test
dec
movsb
jmp
int
jl
mov
jl
cmpsl
push
out
add
mov
arpl
push
add
push
add
sbb
leave
sub
push
out
jbe
out
arpl
mov
add
mov
pop
xchg
dec
sysret
stos
mov
sahf
xchg
sahf
incb
cmp
jle
fldl
lret
push
sbb
stc
push
ds
fs
or
stc
jae
pop
fucom
pop
icebp
in
push
xchg
xchg
sbb
inc
dec
fs
arpl
pop
cmpsl
shll
lea
rolb
cmp
add
in
roll
mull
dec
andl
jecxz
inc
jge
and
dec
jns
dec
dec
pop
add
mov
sub
pusha
add
add
and
in
mov
add
out
pop
inc
addb
popa
sub
in
xchg
fldl
stc
das
adc
daa
ficompl
sbb
pop
lcall
repz
cmp
das
idivb
add
xlat
fldcw
popf
mov
ret
xor
adc
jb
add
cmp
fisubrl
sub
add
add
cwtl
adc
int
push
mov
icebp
push
mov
sbbl
cmp
cmp
add
mov
jg
pop
mov
lret
clc
inc
jecxz
pop
ftst
in
cmp
fldenv
add
das
test
push
es
mov
lcall
pop
xchg
rolb
dec
push
add
fidivl
mov
aam
add
int
movl
notl
mov
add
add
pop
outsb
ret
andl
cmp
aas
cld
xchg
test
gs
push
pop
bound
cmp
sbb
out
arpl
push
add
mov
add
pop
mov
adc
lret
xchg
jo
add
imul
clc
adc
test
aam
pop
or
mov
das
ficompl
lret
or
out
xchg
int3
cli
iret
or
or
in
arpl
xor
in
cmp
add
ficoms
jb
sbb
loopne
scas
inc
add
adc
enter
sub
add
fsubl
add
mov
or
add
and
loop
fldt
xchg
arpl
lods
in
fimuls
or
in
lahf
mov
dec
daa
popf
stos
shr
mov
repnz
orl
add
add
jno
add
outsl
add
les
jno
add
pop
dec
iret
sbb
inc
add
pop
cmc
addb
sti
fwait
and
xor
add
movb
inc
arpl
mov
mov
dec
and
inc
add
mov
ror
mov
sub
cmp
add
fbstp
jo
add
bswap
insb
popf
inc
daa
arpl
stos
cmp
mov
loopne
aam
adc
xchg
xlat
or
sub
shlb
dec
lods
xchg
mov
movsb
mov
stos
lret
inc
mov
xor
pushf
pop
test
out
inc
xorl
jle
push
fdiv
add
movb
mov
out
aad
mov
or
or
adc
int
adc
pop
aaa
jg
aam
vcvtpd2dqy
rol
dec
mov
cmp
inc
add
jbe
out
jg
add
add
vdivpd
addb
or
aad
js
mul
repz
lea
add
icebp
repnz
and
rolb
jp
in
push
imull
inc
add
add
aam
dec
sbb
add
mov
jp
lods
mov
or
testl
mov
xchg
pop
push
test
jp
fprem1
addb
pop
and
ds
insl
cmp
stos
out
cltd
das
popf
jbe
push
arpl
icebp
jmp
ja
out
jmp
shll
fcoml
rcll
lahf
loop
ljmp
add
pop
leave
add
xor
dec
ss
add
xor
add
and
mov
jg
daa
cmp
add
movsb
ja
clc
inc
inc
add
push
adcl
scas
sbb
out
iret
jbe
gs
dec
sub
mov
add
push
stc
xor
scas
loop
shll
in
push
add
adc
in
push
outsb
jmp
cmp
and
dec
popf
mov
les
es
hlt
leave
cmp
sub
add
sahf
leave
xor
push
push
in
jecxz
dec
in
clc
loop
xchg
mov
out
pop
add
mov
xor
loop
jecxz
xlat
xor
in
test
les
pop
ficoml
mov
out
nop
add
sub
mov
dec
sbb
xor
icebp
adc
insl
mov
sti
and
stos
ret
test
and
or
push
add
cmp
add
sub
xchg
mov
std
in
mull
test
lahf
xor
jno
lods
push
lock
add
pop
push
jge
movb
add
push
fsubrl
mov
jmp
std
and
sub
call
in
movsl
mov
shl
add
outsb
xchg
cmp
add
add
sub
fcoml
out
mul
mov
pop
ret
adc
roll
mov
ret
mov
sti
push
adc
ret
xor
cmpsl
sbb
mov
push
flds
add
cmp
ret
movsb
dec
in
jl
mov
cs
addr16
sbb
fadd
push
push
adc
pop
dec
aas
mov
dec
push
xchg
pop
popl
test
dec
mov
mov
jns
lret
jno
mov
push
aam
inc
add
getsec
mov
mov
call
repnz
pop
lret
add
adc
add
jbe
xchg
xchg
imul
add
add
push
dec
cmpsb
dec
das
xchg
mov
mov
fsubrl
ret
adc
sbb
inc
cli
shrb
add
mov
add
gs
mov
out
pop
cmpsb
ret
sub
dec
popa
xchg
mov
fldt
push
pusha
add
pop
xchg
mov
in
xchg
push
cmp
mov
mov
xchg
addb
stos
test
movb
push
cmpsb
xor
mov
cmp
add
adc
dec
mov
cmp
out
cld
sbb
addb
push
adc
xchg
cmp
fcmove
call
repnz
jne
dec
mov
lea
push
popa
jb
add
add
rorl
testl
cli
dec
push
popa
push
lea
insl
rolb
orl
inc
mov
jecxz
sub
lock
ret
inc
add
pop
mov
add
flds
add
jo
jne
push
fsubl
add
pop
mov
add
add
orl
sub
test
sbb
adc
mov
fs
das
lret
cmp
cs
ds
pop
push
jecxz
push
es
push
push
sub
mov
adc
leave
cmp
bound
add
int3
inc
add
and
cs
mov
aaa
movb
mov
out
add
mov
movsb
dec
jl
inc
test
std
inc
add
cmc
mov
sub
pop
fbstp
xor
jmp
test
sub
pusha
add
add
mov
dec
rcrl
lret
iret
lret
call
jge
inc
xchg
into
aad
iret
jg
addb
inc
add
daa
pop
cs
inc
lret
lcall
les
pop
pop
mov
add
imul
into
jecxz
xchg
and
nop
out
mov
int
jl
arpl
mov
out
fucomi
dec
xchg
xchg
mov
push
add
movl
add
inc
iret
gs
or
add
fs
mov
xor
pop
lcall
jmp
add
jmp
add
jno
int3
ret
mov
xchg
sub
out
into
stos
xchg
test
dec
or
das
pushf
fadds
mov
mov
jge
movsl
leave
movb
stos
mov
insl
add
sub
add
out
bswap
push
mov
push
call
add
push
lahf
push
addl
push
adc
mov
mov
call
iret
test
ja
mov
clc
popf
in
mov
mov
scas
pop
adc
mov
xchg
xchg
push
add
dec
fwait
mov
add
fcomip
jl
ret
push
xchg
xlat
movsl
push
pop
sbb
sbb
out
jbe
cmp
jbe
pushf
outsb
aad
push
xchg
sub
ds
jecxz
pop
xchg
sti
ficoms
mov
sbb
ss
pushf
fidivs
xor
sub
adc
and
nop
push
out
js
repz
cmp
add
adc
add
lret
movsbl
jb
push
pop
cli
pop
fs
aaa
pop
push
sub
add
aad
jle
adc
sub
aas
leave
mov
sub
add
clc
in
mov
fwait
pop
adc
lahf
ja
add
pop
loope
pop
xor
or
sub
push
add
sub
sti
mov
add
mov
mov
add
andl
sahf
sbb
push
lods
test
ret
daa
insl
mov
stos
cmp
rorb
sbb
fwait
arpl
jns
fs
test
mov
add
add
adc
fsts
scas
push
add
pop
adc
jp
fcoml
lcall
and
int
sub
aaa
loop
xor
stos
int3
stos
imul
add
add
dec
lock
mov
shrl
add
jnp
xchg
outsl
mov
xchg
outsb
fdivrp
mov
sub
loope
xchg
add
add
jl
out
aam
lret
add
add
push
lret
or
and
add
dec
adc
mov
xchg
xor
add
aad
push
add
repz
cmp
dec
cmc
mov
mov
clc
or
add
les
xchg
add
inc
mov
dec
mov
or
ficoms
mov
dec
repz
mov
jno
add
xor
in
pop
push
sbb
jp
test
loope
mov
repnz
cmp
jnp
mov
les
xchg
imul
popa
dec
lea
and
add
mov
adc
push
fmuls
aam
pop
rolb
out
sbb
adc
aas
lret
jo
pusha
add
loop
lock
sub
or
pop
xchg
sub
fs
in
mov
sbb
loop
push
mov
in
cmc
xchg
lock
sarl
iret
pop
or
add
scas
sub
jp
rolb
or
loopne
pop
sub
aad
aaa
imul
jno
fisttps
movsb
ja
and
je
jae
mov
call
mov
push
xchg
lcall
push
xchg
xchg
sti
pop
sub
cvttps2pi
je
out
lods
push
inc
lds
mov
addl
lcall
jno
ja
cld
pop
out
mov
nop
mov
in
rol
movb
mov
std
mov
push
xor
add
scas
clc
into
dec
cmp
int
inc
stos
rcl
nop
shrl
loopne
shl
loope
int3
sti
adc
add
cmpsb
adc
movsl
imul
xchg
rcrl
test
ret
add
es
xchg
loop
mov
cmc
mov
int3
add
repnz
xchg
cmp
jmp
adc
and
sub
mov
xor
jmp
cmpsl
ja
or
mov
les
fwait
rcll
xor
push
xchg
xor
xor
ret
push
pop
add
fucomp
test
mov
aas
sbb
mov
add
add
pushf
jl
mov
jle
add
push
cmp
out
out
mov
mov
aaa
mov
aam
loop
clc
call
imul
adc
push
push
push
out
mov
push
jo
jge
mov
es
mov
je
sbb
or
pusha
add
lret
dec
cmp
and
add
popf
sti
ret
cli
das
dec
pop
stc
sub
mov
movq
sbb
lcall
mov
push
mov
pop
and
dec
movsb
in
cmpsw
and
cmp
cmp
std
repz
add
je
push
out
xor
cmpsb
adc
vmwrite
mov
add
add
sbb
mov
add
fisttpl
movb
or
addb
mov
ss
lock
aad
enter
test
jl
add
push
jbe
and
adc
xor
or
add
test
movsb
std
sub
push
push
js
adc
or
dec
lock
fwait
cmp
and
xlat
pop
pushf
mov
ret
jnp
icebp
mov
add
outsl
mov
int3
jg
bound
test
lret
push
pop
mov
add
in
lcall
cmp
out
dec
clts
add
stc
push
test
add
aas
mov
mov
dec
sub
loop
in
xchg
outsl
mov
mov
sbb
cmp
cmp
out
lahf
and
or
xlat
loope
add
pop
enter
repnz
jmp
cld
je
dec
movsl
lock
sub
xchg
std
out
mov
sbb
pop
dec
jns
sbb
and
inc
add
or
adc
out
jno
xchg
fiadds
popf
leave
adc
mov
aad
xchg
push
sub
imul
outsl
movsb
ja
dec
sbb
xor
fcomp
xlat
fwait
pop
imul
inc
enter
adc
cwtl
sti
js
add
mov
repz
xchg
in
divl
pop
mov
ret
push
lods
push
daa
jl,pt
add
jns
push
out
out
pushf
jnp
iret
addb
sbbl
xchg
dec
jb
aad
add
xor
into
movsb
cwtl
data16
dec
in
orl
out
xor
push
push
insb
aaa
push
add
ret
mov
inc
fistps
lods
mov
add
push
jns
mov
cmp
decl
xor
stc
out
or
lret
xor
add
pop
mov
vshufps
and
jle
inc
mov
add
leave
movb
sarb
xor
loop
sahf
test
jno
movsl
push
inc
add
and
adc
aas
outsb
sub
popf
loope
and
push
xchg
cwtl
int
add
add
insl
jbe
sbb
add
mov
lods
jns
xor
add
xor
push
lock
bt
mov
mov
imul
pop
and
mov
push
lods
sub
lret
push
cmp
lock
sti
push
pop
scas
mov
daa
push
xchg
dec
add
push
addb
jg
inc
jmp
push
add
rclb
mov
sbb
fimuls
jo
loope
add
add
fidivrs
cmpsb
push
out
cmc
in
ja
cmpl
or
popa
adc
and
mov
jb
test
int3
and
dec
aaa
and
mov
cmp
pop
lods
pop
bound
insl
pop
xchg
jmp
xchg
inc
add
test
jl
jmp
mov
in
je
cmpsl
lods
push
cmp
add
cli
adc
mov
add
pusha
add
push
sub
sbb
roll
scas
mov
jge
add
cmp
xchg
add
mov
dec
jmp
repnz
push
addb
mov
add
lock
enter
mov
xchg
sbb
in
rolb
test
mov
mov
test
loope
sub
add
pop
sbb
push
fidivl
mov
mov
adc
je
add
and
js
or
ficoms
push
sbb
inc
jne
rolb
dec
and
out
repz
or
mov
in
fsubl
inc
add
into
dec
in
dec
pusha
add
fsub
mov
cmp
rolb
sbb
in
jl
dec
inc
add
xor
shll
add
mov
xchg
in
aaa
lret
test
xchg
lds
push
push
add
jns
add
xor
in
popa
outsl
psubb
lret
je
inc
add
adc
int
fistpl
dec
imul
add
add
gs
cmp
or
arpl
cmc
push
dec
xchg
fsubs
add
jge
je
int3
sub
add
js
push
cltd
jb
in
push
imul
sbb
into
push
or
enter
pop
loopne
cmc
pop
cld
call
out
cmp
mov
enter
movsb
push
out
insl
adc
cmp
movsl
push
pop
out
rolb
cld
nop
jmp
aad
sub
fmuls
out
mov
dec
pushf
ss
xor
shll
add
add
out
ror
pop
fsubs
lret
cmpsl
js
adc
fs
addb
jbe
out
add
mov
jo
lret
jge
add
fimull
hlt
jmp
pushf
pop
dec
dec
idivb
fisubrs
fwait
jns
inc
arpl
mov
push
pop
daa
in
dec
lcall
push
loopne
mov
and
xchg
loop
loop
add
cmp
decb
mov
popf
jbe
xchg
pop
pop
in
lcall
add
mov
cmp
out
scas
faddl
lds
adc
mov
call
icebp
popl
pushf
mov
or
push
lret
stos
enter
mov
pop
ret
mov
lods
cmpsb
test
in
mov
arpl
icebp
ja
lds
add
es
fmull
mov
mov
repz
iret
cmp
and
stc
push
sbb
mov
adc
add
pop
cmp
push
push
sub
xchg
pop
repz
mov
jnp
cltd
and
and
mov
add
mov
aad
jl
mov
dec
movsb
inc
add
addr16
popf
cmp
lret
and
cltd
xchg
jecxz
in
mov
sti
stos
mov
add
xor
div
lock
aam
stos
insl
mov
mov
push
sub
cltd
dec
addb
add
cmpsb
xchg
ljmp
stos
repnz
movb
add
and
jbe
push
and
pop
out
iret
cmpsl
scas
or
ror
loopne
sbb
dec
aaa
call
bound
xchg
lds
and
push
stos
push
popa
sbb
pop
jo
add
ss
cwtl
rcl
xor
xchg
mov
outsb
lods
scas
inc
pop
add
mov
adc
movb
inc
add
insl
cmp
adc
mov
and
adc
mov
mov
nop
divb
mov
mov
cmp
xchg
out
and
aam
test
cmp
mov
daa
mov
jb
add
xchg
xor
ljmp
sbb
or
push
inc
cs
stc
and
shll
dec
adc
movsl
out
jg
push
fucomip
sub
loopne
into
addr16
sbb
cmpsl
scas
sbb
sar
daa
fldl
jg
inc
bound
sub
pop
insb
xor
adc
inc
xchg
loope
and
mov
or
pop
insb
sbb
mov
addb
push
or
mov
negl
mov
pop
xchg
loope
xchg
addb
das
lods
aas
add
dec
add
push
outsb
jae
jo
ret
mov
mov
mov
mov
test
ja
loopne
mov
inc
jmp
sbb
jno
lcall
dec
rolb
add
jle
add
push
sbb
rolb
mov
add
in
sbb
or
dec
add
add
xor
pop
icebp
outsb
push
fadds
sub
cwtl
in
pop
cwtl
add
pop
xchg
mov
cmpxchg
insb
adc
push
mov
add
fadds
add
adc
add
xchg
std
jl
sub
fistl
and
xchg
pop
ficompl
pop
inc
add
mov
dec
push
in
or
rolb
testb
std
jmp
call
dec
and
cmp
fsubrl
shrl
cmp
aam
sbb
mov
or
push
sub
lock
ret
xor
xchg
sar
cmp
add
popa
shl
scas
mov
push
lods
inc
je
je
test
int3
cmp
or
addb
psrlq
negb
dec
add
add
addl
jne
pop
xchg
int
mov
mov
pop
xlat
mov
mov
xor
add
push
mov
and
mov
imul
inc
outsl
or
adc
lds
inc
stc
jne
or
mov
sub
inc
stc
xchg
xor
addl
push
test
shll
addb
add
add
or
mov
addr16
add
xchg
inc
xchg
inc
add
test
mov
sub
dec
push
xor
lret
pop
pop
insl
pop
fs
or
int3
aas
popf
hlt
mov
mov
clc
mulb
les
stc
push
add
iret
or
lret
cmp
fimuls
imull
jmp
jb
inc
stos
int3
adc
lods
outsb
fsub
mov
and
rolb
mov
fwait
rcl
and
or
add
rolb
ret
testl
in
mov
rclb
fs
or
jo
add
or
pop
cmp
dec
in
loop
mov
push
insb
stc
pop
jno
lahf
add
xor
icebp
shl
push
add
lcall
sub
add
ss
clc
cmp
push
aam
out
pop
in
cmp
cltd
dec
xchg
cmpsl
mov
cmp
sbb
and
inc
sub
sbb
jbe
js
notl
cltd
inc
int
push
fistps
aaa
ficoml
mov
movb
xchg
pop
lret
mov
outsb
push
cmp
cli
sub
loop
push
insl
xor
rolb
icebp
pusha
add
xor
or
cmp
sahf
xchg
inc
das
xchg
lea
cmpsb
jl
push
jg
mov
and
aaa
adc
adc
addb
push
outsb
jnp
xchg
clc
inc
add
add
sbbl
xchg
add
pop
std
jge
arpl
cmp
icebp
pop
push
add
cld
push
cmpsl
pushf
outsb
sub
xchg
jge
and
adc
or
cmc
and
lods
xor
dec
lods
outsb
out
loope
shr
js
jecxz
hlt
adc
ret
sahf
cltd
aam
push
add
lea
lret
enter
cmp
and
cmpsb
subl
cmp
sbb
stos
sub
add
ret
mov
add
jnp
xor
add
cmp
das
outsl
mov
addb
inc
add
insb
insb
cmpsb
lds
addb
adc
or
das
push
lahf
into
sub
add
cld
or
test
add
push
add
daa
jl
xchg
dec
jno
cmp
dec
jmp
fdivr
rep
int
mov
or
arpl
out
add
movsb
out
fists
mov
cmp
cltd
out
idivl
testl
fsubrs
lret
call
cmpsb
popa
adcl
inc
mov
scas
mov
enter
add
sti
push
push
int
icebp
popa
pushf
arpl
xchg
push
add
popf
jg
adc
add
mov
movl
xchg
pop
inc
add
sub
out
push
push
mov
jnp
and
cmp
aaa
mov
leave
dec
add
sub
push
inc
add
or
cmpsb
mov
out
call
and
add
jbe
add
movsb
stos
gs
mov
adc
paddd
jp
not
push
loope
loop
nop
test
hlt
mov
lret
dec
dec
clc
fs
aaa
imul
dec
daa
pushf
loopne
pop
pusha
add
cs
ljmp
lods
addr16
mov
add
add
push
cmpsl
cld
popa
int3
adc
fisttpl
aam
mov
rcrb
adc
add
ret
sbb
push
ret
aaa
ficomps
mov
lea
enter
jecxz
add
cli
daa
jns
jae
mov
shr
aad
adc
mov
add
pushl
or
add
loope
sbb
push
lods
push
sti
lods
sbb
cmp
sbb
mov
ja
xlat
dec
mov
fildll
push
addr16
add
mov
mov
rol
add
iret
cmp
cld
jnp
xchg
sbb
jnp
adc
push
enter
add
fisttpll
sahf
fidivrl
push
sub
add
inc
sub
pop
cmp
fisubrl
rolb
jnp
jmp
mov
in
cmp
cmp
add
jne
and
cmp
inc
add
jns
adc
xorl
cli
dec
leave
fistpl
les
insb
cs
mov
arpl
popf
push
sbb
push
jecxz
mov
repnz
jp
or
rolb
ret
loop
xchg
iret
jmp
loope
dec
jb
out
jg
xchg
xchg
imul
xchg
mov
cmpsl
dec
mov
nop
lods
xchg
repnz
xchg
sarl
insb
inc
add
dec
test
aaa
push
notl
lock
pusha
add
push
sbb
popf
mov
cmp
mov
sarl
cmp
adc
cmp
stc
pushf
cmpsl
rolb
call
add
push
adc
add
cmpsb
xor
jl
in
pop
mov
cmp
mov
adc
stos
jg
stos
rcll
jbe
imul
mov
cmp
add
int
scas
loope
inc
push
aas
push
sbb
push
ret
pop
mov
dec
mov
jp
pusha
add
add
add
jle
jp
xchg
sbb
mov
insl
rolb
dec
rcrl
insb
mov
lea
test
push
add
ds
add
mov
movsl
cmp
js
in
sbb
pushl
xchg
and
fprem1
inc
add
xor
adc
movb
movsb
cmp
clc
popa
inc
add
add
xchg
pop
sub
outsl
xchg
add
jb
xlat
push
loopne
jns
inc
fisubl
rcl
inc
add
in
mov
add
fwait
pshufw
mov
mov
in
in
repz
sbb
and
add
jb
or
push
mov
lea
add
mov
insb
iret
mov
add
add
cmc
add
pop
ss
dec
add
push
jle
sbb
movsl
and
mov
fimuls
scas
sbb
xchg
jo
rorb
rolb
push
xor
push
inc
add
cltd
sub
stc
xor
rolb
xor
inc
add
insl
or
mov
lret
test
test
xchg
xor
loop
subl
push
inc
pusha
add
sub
mov
out
mov
add
or
fstpt
outsl
or
mov
cpuid
pop
add
lods
in
inc
add
add
push
xor
aad
pusha
add
add
cld
pop
clc
push
ret
rolb
sti
and
jo
mov
dec
fistl
gs
aam
pop
imul
out
add
fwait
adc
add
pop
fmulp
cmp
ror
dec
je
add
sub
addb
mov
fbstp
into
pushf
test
sbb
mov
sahf
xchg
lea
shl
mov
pop
ss
pop
hlt
popf
mov
shlb
jno
jg
push
add
cs
xchg
or
mov
jnp
pop
mov
lds
and
gs
movsl
ret
cwtl
repz
adc
insl
inc
movsl
xchg
sub
sti
adc
mov
loopne
test
dec
sub
push
out
sbb
fists
jno
jl
add
jle
adc
jge
sbb
sub
adc
imul
mov
aaa
mov
into
aam
cmpsl
jl
subl
lcall
cmp
adc
mov
or
fisttps
mov
dec
pop
push
out
xor
leave
xchg
adc
test
add
mov
jl
push
out
shl
cmpsl
or
mulb
add
push
and
add
add
jne
jae
fcomps
mov
cmpl
fdivrp
fisubs
add
cli
movsl
inc
mov
or
out
jne
cmc
inc
cmpsl
pop
aaa
clc
add
jno
enter
mov
add
inc
add
sbb
loope
adc
mov
xor
gs
inc
mov
xchg
pop
fwait
push
and
inc
in
enter
adc
add
imull
pop
xchg
sub
cwtl
gs
or
pop
mov
repnz
outsl
les
scas
movsb
push
add
adc
jb
movb
add
dec
xchg
fdivrs
mov
addb
nop
lret
add
jg
add
push
fimuls
mov
add
xorl
mov
add
add
push
lock
jl
add
or
lods
out
ja
nop
movsl
pop
add
add
shll
and
repz
jle
test
and
je
jmp
add
xchg
dec
lds
push
dec
jg
popf
lods
pushf
or
add
add
rcrl
jne
cmp
pop
push
mov
in
mov
mov
in
add
mov
fnsave
add
and
out
das
flds
sub
lock
in
fisubrs
push
stc
mov
push
xor
movsb
dec
xlat
mov
jae
jecxz
sahf
sub
outsl
mov
jbe
jp
in
jnp
xchg
add
or
mov
clc
xchg
add
ja
mov
ljmp
mov
movb
arpl
mov
add
into
mov
push
inc
dec
and
add
push
add
and
insl
aam
jae
inc
aaa
call
cmp
push
popa
movsl
aad
sub
pop
in
and
das
push
pop
sbb
and
sbb
shll
aas
mov
dec
fwait
ljmp
lods
push
js
ret
lret
ss
cli
mov
imul
js
and
add
stc
jecxz
add
add
mov
shrl
in
dec
pop
push
mov
add
push
icebp
mov
lcall
add
stos
popa
test
movsl
icebp
jg
pop
and
fs
clc
frstpm(287
mov
xchg
add
lea
sbb
add
int
fmuls
mov
mov
ss
mov
inc
xchg
pop
out
jno
mov
iret
test
and
xchg
js
ffreep
and
xchg
mov
push
aad
and
xor
enter
inc
add
inc
rorl
add
out
sbb
jbe
add
cmpl
imul
test
adc
add
scas
fucomp
aas
cmpsb
imul
mov
mov
hlt
cmc
sahf
jmp
call
and
arpl
repnz
aaa
pop
mov
out
jno
sub
pop
jp
sbb
rcr
repnz
mov
cli
into
int3
mov
nop
cmp
pop
test
enter
cmp
mov
cmp
push
mov
sbb
test
jo
add
negb
pop
jbe
movsb
ljmp
arpl
loope
leave
aas
cmpsb
repnz
mov
mov
or
sbb
add
aaa
push
ror
and
arpl
cmp
js
add
mov
fstps
cmp
test
and
add
xchg
cmp
ret
es
inc
cmp
mov
aad
movsb
xchg
int
test
xor
add
fldcw
dec
call
pop
xchg
pop
xchg
bound
lods
jmp
es
pop
lret
bound
xor
aaa
pop
rolb
add
push
shr
mov
jecxz
nop
ds
lcall
mov
and
xchg
scas
fdivl
adc
ja
mov
jle
push
adc
add
addb
movsl
out
ss
add
les
mov
pop
xchg
dec
imul
jno
movsl
dec
stos
mov
xchg
bound
aad
mov
icebp
in
fs
xchg
mov
mov
add
stos
lret
xor
mov
test
test
rcl
adc
fld
mov
push
rcr
sub
or
pop
enter
mov
and
add
fnstsw
or
xor
mulb
add
in
dec
jecxz
add
int
fwait
or
xchg
in
mov
ds
or
sahf
xchg
sbb
rolb
in
jp
xchg
adc
and
flds
pop
rolb
int3
int
test
stc
push
out
in
or
sub
test
sub
inc
cltd
vsqrtsd
dec
sahf
inc
add
test
xor
pusha
add
xor
addb
fndisi(8087
daa
das
fdiv
test
cmp
sub
and
outsb
push
test
lods
inc
es
insl
lods
shrb
in
xchg
jp
add
sbb
cmpl
mov
je
gs
les
out
pop
jge
add
aas
rclb
mov
cmp
nop
daa
ljmp
stos
cmp
xchg
cmp
sbb
push
popf
call
mov
lods
icebp
and
ffreep
addl
test
xor
iret
or
push
add
sbb
pop
xchg
sub
mov
pop
divb
stc
pop
cmpsb
lds
mov
sub
popf
lret
push
lds
xchg
cwtl
imul
mov
insl
cltd
xor
push
fwait
int
adc
add
cmpsl
clc
push
mov
fs
test
sbb
popa
outsb
mov
fsts
pop
std
movsb
jb
clc
add
push
fwait
jmp
lods
jl
shr
pop
mov
out
aam
sub
adc
imul
test
inc
add
sub
push
lcall
imul
lahf
mov
jle
je
add
js
push
mov
es
es
and
xor
icebp
pusha
add
cmp
jg
add
xchg
add
jp
add
jge
add
and
stc
mov
testl
jmp
sub
fisttpll
xor
test
adc
pop
jne
cmp
add
xor
sahf
sbb
pop
add
in
shlb
imul
push
cmpsb
rclb
and
scas
sub
mov
add
pusha
add
or
cld
xor
pop
cmp
addb
or
repz
add
das
mov
pop
dec
bound
sbb
filds
xor
add
movb
pop
pusha
add
pop
call
jb
mov
into
xchg
fsubr
pop
daa
mov
scas
cld
int3
jecxz
sub
sti
xor
roll
movb
repnz
xor
rclb
gs
mov
push
xor
push
movsb
shr
ljmp
add
sub
xchg
int3
sub
fnstcw
out
pop
imul
ret
jle
add
clc
loop
sbb
add
ds
xor
xor
les
nop
ljmp
daa
jecxz
add
sub
sar
addb
ret
mov
jae
ret
push
rolb
cmpsb
sub
test
cs
mov
test
loope
cmp
add
inc
je
loop
add
mov
lods
imul
in
push
stos
cmp
movsb
call
pop
nop
push
hlt
pop
adc
loop
mov
das
shll
lcallw
or
ficompl
dec
bound
cld
and
push
adc
dec
lods
data16
add
jno
data16
or
pop
inc
lret
roll
test
aam
mov
pop
stos
negb
mov
repz
out
sbb
add
jg
jb
out
pop
jns
add
call
repnz
mov
dec
cmp
ficoms
add
sbb
mov
cmp
das
addb
add
xor
add
aaa
inc
cmc
jb
cmpsb
lret
xchg
cltd
jmp
pop
add
mov
push
adc
xlat
mov
sbb
xchg
jge
push
adc
push
popf
arpl
add
test
mov
pop
movsb
sbb
xchg
add
out
lds
lds
jbe
adc
mov
inc
test
add
rolb
add
cmp
add
insl
je
lahf
loopne
sub
xor
jmp
or
lcall
insl
xchg
nop
lods
test
push
lret
andl
mov
jmp
mov
test
and
dec
sub
test
mov
nop
inc
jge
sbb
stos
and
add
add
push
mov
add
add
rolb
test
cmpsb
mov
sub
add
push
push
repnz
add
je
mov
pop
and
pop
mov
xchg
outsb
cmp
pop
leave
addb
in
cmpsb
iret
in
add
jnp
add
add
push
in
outsb
pop
ss
daa
push
add
mov
ljmp
int3
loopne
negl
sbb
push
or
mov
fs
add
imul
xor
inc
add
add
leave
mov
mull
sbb
mov
add
add
hlt
jo
mov
adc
fucompp
jno
lock
and
adc
das
lret
aas
addr16
lock
hlt
sti
inc
adc
stos
sahf
cmp
mov
addb
cmp
pop
push
aad
pushf
sub
and
sti
mov
xor
push
lods
sti
push
fists
dec
out
mov
dec
ret
arpl
sbb
add
mov
mov
jl
add
sub
mov
mov
mov
je
cmpsb
popf
lods
es
add
stos
mov
push
es
push
cmp
rolb
adc
les
xchg
in
sub
iret
push
mov
sub
lcall
dec
cmp
xchg
or
mov
cmp
bound
sbb
daa
subl
or
add
mov
cmpsl
pop
dec
roll
lret
lret
dec
sti
inc
cmp
mov
cmp
addb
sbb
add
les
repnz
fcoms
xor
imul
inc
add
add
and
rcll
mov
lahf
in
push
sbb
mov
fsubrl
ljmp
lret
pop
call
xchg
or
jmp
mov
push
cmp
sbb
pop
mov
popf
cmpsb
and
sbbl
rcl
mov
push
shll
rolb
aam
jle
leave
loopne
sub
adc
adc
add
mov
push
nop
push
add
sbb
add
mov
add
push
test
add
mov
leave
lahf
mov
dec
adc
std
adc
shrl
mov
add
decb
add
rorl
mov
test
dec
iret
lret
add
xor
lahf
fwait
mov
pop
inc
add
jmp
jb
pop
daa
repz
mov
mov
add
inc
push
mov
scas
mov
popf
std
dec
mov
adc
add
or
xchg
sar
xchg
stos
lfs
add
sbb
inc
add
add
test
or
outsl
stos
cmp
ljmp
push
pand
lcall
arpl
lods
rcl
jne
xchg
test
jns
adc
pop
mov
mov
xchg
shll
fldl
lahf
sub
enter
add
jnp
mov
sbb
xor
dec
sbb
add
fsts
gs
cmp
mov
stos
pop
inc
outsb
jo
push
push
out
bound
push
jge
add
sbb
jle
push
movsb
xchg
sub
mov
sub
stos
idiv
or
add
push
mov
inc
mov
xor
add
pop
movsl
mov
loope
sub
into
loope
fadds
add
subl
jp
popf
fiadds
in
pop
fnsave
out
cltd
push
addb
add
fwait
pop
shl
jbe
add
or
inc
add
fcoml
push
popa
push
pop
inc
sti
xor
aam
add
push
push
cmpsl
cmp
mov
add
mov
stos
ret
out
mov
leave
mov
sbb
dec
imull
scas
xchg
ds
jmp
test
je
sti
xor
cld
adc
repnz
adc
add
inc
add
shrl
addr16
mov
jg
add
push
or
stc
ja
outsb
jg
dec
movsl
fldenv
flds
int
push
add
sub
idivb
dec
dec
or
xchg
sbb
les
xchg
dec
mov
fwait
sub
shr
cmpsb
pop
add
icebp
mov
jnp
mov
rclb
cmp
jl
fdivs
das
add
mov
push
push
xchg
xchg
pop
push
sub
inc
add
test
rcr
loopne
cltd
out
add
ss
fs
iret
inc
int
test
in
cmp
push
shl
cltd
pop
aam
and
out
add
into
cmpsb
aam
or
mov
push
lcallw
addl
outsl
inc
loope
mov
fnstenv
push
in
add
fwait
std
shll
addb
and
xor
addb
mov
add
jmp
add
aaa
scas
mov
mov
xor
add
and
xor
add
shll
scas
or
pop
jp
clc
and
cwtl
xchg
add
inc
mov
push
mov
gs
xchg
jo
sarl
push
das
aad
nop
jbe
mov
js
fcomip
mov
sub
cltd
xchg
push
mov
jp
mov
jle
and
xor
add
mov
xchg
pop
stc
out
cmp
addr16
arpl
push
xor
pushf
lret
push
enter
cmc
hlt
cmp
push
ret
or
adc
test
add
daa
shrl
sti
scas
mov
cmc
dec
sub
add
int
xchg
xorl
and
add
fsubl
add
ret
add
mov
cmp
jp
mov
add
ds
addb
add
movsb
mov
add
icebp
hlt
lds
insb
aas
insb
sub
push
add
add
in
mov
lea
sbb
pop
in
dec
lcall
jo
sub
int3
sub
popf
dec
movsl
jl
pop
or
movb
mov
xlat
outsb
add
push
push
sbb
add
lret
add
addl
mov
cmp
xchg
jmp
mov
fimuls
enter
push
hlt
xchg
sub
xchg
dec
jb
dec
push
mov
popf
mov
push
lret
insb
fmuls
cmp
add
imul
stc
call
add
inc
add
jl
mov
test
sbb
sub
jns
push
adc
add
push
dec
std
es
sbb
and
adc
sub
add
stos
iret
sub
les
push
sub
pop
sub
add
push
sbb
add
rolb
andl
mov
add
pop
and
outsl
xchg
addb
test
mov
add
jno
imul
cmp
loopne
xor
xor
fnstcw
add
addb
cmpsl
movsl
jns
add
and
enter
mov
xor
stos
mov
cld
add
data16
pop
xor
push
scas
lds
dec
sti
mov
loop
or
add
mov
insl
in
lea
addr16
lods
in
and
or
dec
mov
jne
push
cmp
repz
mov
add
daa
out
push
insl
test
sub
add
xchg
leave
mov
sarl
add
lods
xor
out
lahf
dec
imul
inc
push
arpl
sbb
scas
rorb
mov
das
addr16
loop
lahf
xor
xor
fisttps
negb
ret
insl
ds
jo
enter
push
inc
pop
bt
rorb
lcall
int
add
push
cmp
les
pop
inc
fs
or
mov
ja
mov
or
jecxz
movsb
lds
push
add
push
in
hlt
sbb
imul
inc
add
adc
int
add
sbb
popf
push
test
jne
cli
xor
fstps
or
loopne
push
roll
and
pop
cwtl
pop
push
in
movb
cmp
scas
cmp
test
in
shll
cs
inc
add
lea
mov
mull
add
mov
mov
cmpsb
sbb
mov
movb
aam
roll
adc
push
test
or
testl
subl
and
adc
mov
dec
jae
and
movl
add
mov
push
inc
adc
jle
xor
ret
popf
lods
jmp
add
mov
icebp
scas
push
in
push
movb
loope
mov
add
repnz
les
inc
add
bound
mov
outsl
loopne
push
ds
mov
fiadds
add
ja
decb
sub
lods
xlat
jnp
adc
adc
cmp
sub
out
shr
pop
sbb
or
cmc
or
outsb
loope
push
gs
or
inc
jne
inc
fnstenv
add
jg
into
in
dec
pop
jnp
inc
add
rcll
add
push
mov
fbld
arpl
mov
jno
dec
insb
pop
push
and
and
addb
pop
popf
pop
mov
movsl
fsubrs
cwtl
xor
in
push
add
sub
rolb
inc
pop
dec
int3
lcall
jns
mov
sbb
imul
dec
pop
clc
mov
icebp
jbe
dec
out
cwtl
pop
mov
test
into
movsb
fmuls
push
js
sub
pop
pop
sub
dec
dec
mov
gs
add
bound
in
sti
dec
addr16
xor
iret
test
jnp
xor
fisubl
cmp
iret
cmp
stc
movsb
popa
cmp
cmp
ret
jg
and
out
jg
xchg
aaa
daa
addr16
add
imul
mov
adc
call
add
fcmovbe
pop
add
mov
lea
xchg
stos
loope
or
or
outsl
mov
repz
aam
push
pop
and
add
lret
sub
gs
loope
or
add
push
ljmp
test
add
push
sbb
sub
pop
out
jmp
pop
testl
pusha
add
cmp
roll
clc
xchg
jnp
les
shrl
or
mov
push
cli
adc
cmc
int3
jecxz
xor
inc
add
adc
mov
xor
mov
xchg
lods
fwait
jns
loopne
shlb
out
lret
mov
stc
movsb
fs
sahf
mov
push
inc
add
or
pop
add
inc
dec
jne
xlat
test
xor
ss
les
lcall
jo
mov
int
aas
ljmp
xchg
dec
pop
push
add
cmp
loop
add
mov
in
sbb
pop
sub
add
xchg
xchg
mov
mov
adc
sbb
addr16
rolb
mov
and
aaa
jae
mov
mov
sub
xor
jp
mov
push
popf
jp
subl
jb
jl
and
ja
xchg
inc
add
addb
imul
sbb
test
mov
or
jmp
lret
add
les
or
gs
xchg
inc
add
jae
out
mov
in
pop
ror
mull
inc
add
xor
js
aas
clc
mov
stc
call
mov
push
xlat
aad
mov
push
imul
movb
cs
fcoms
and
into
push
aad
inc
add
mov
push
aaa
jb
add
mov
insb
pop
jp
and
bound
out
sub
add
fldcw
add
add
ds
hlt
push
movsl
xchg
push
xchg
inc
add
jp
dec
sub
jnp
mov
repz
sub
test
clc
ret
test
mov
dec
je
lods
out
mov
or
and
fs
cmp
add
push
cmp
negb
cmp
sahf
mov
imul
pop
inc
bound
push
xor
sbb
int3
lds
cmp
push
add
insl
pop
insb
jne
and
inc
xor
shr
sbb
cmpsb
test
add
sbb
jb
add
pop
loop
jg
add
sbb
and
mov
adc
jbe
popa
loopne
fcoms
push
lods
jbe
add
xchg
outsb
adc
add
and
lret
dec
pop
mov
sarb
aaa
cmp
addr16
add
cmp
dec
xor
paddsb
jnp
in
leave
inc
add
insl
movsl
adcl
jl
jbe
pop
or
std
sbb
dec
sbb
je
repnz
mov
das
test
iret
and
cmpsl
push
inc
repnz
mov
and
sub
repnz
add
loope
out
xor
lahf
pusha
add
mov
add
mov
add
in
and
cmpsb
push
pop
sub
jae
mov
test
jle
push
pop
rep
lcall
ja
sub
add
xor
test
jbe
pop
or
inc
addb
add
sub
shll
add
or
dec
loope
add
inc
xchg
fists
dec
movsb
addb
inc
jecxz
jns
test
pushf
mov
test
add
fbld
cmp
ret
sbb
cmp
sub
aas
sub
fnstsw
add
adc
lret
lea
add
out
je
or
xor
inc
dec
sbb
add
mov
ds
inc
lock
inc
and
arpl
imul
jb
mov
mov
loope
aaa
cmpsl
lock
addb
push
std
pop
push
js
add
fistpl
and
mov
mov
cmp
sbb
sahf
adc
push
lods
scas
mov
and
sti
repz
sbb
ja
inc
push
shll
sub
lods
enter
adc
add
add
fdivr
inc
add
cmp
fwait
xchg
movsb
and
rolb
add
movsb
std
mov
mov
mov
repnz
addl
inc
add
mov
push
add
lcall
mov
or
stos
lds
xlat
pop
repz
rep
stos
pop
cmpsl
movsb
sarb
pop
mull
inc
add
lods
inc
cmp
jno
jmp
dec
out
addb
add
cld
lret
add
pop
insl
pop
mov
outsl
les
jnp
mov
inc
add
test
int3
inc
xchg
pushf
cmpsb
fadds
add
add
inc
add
out
adc
cmpsb
push
jns
jp
lea
jae
lahf
jb
add
cmp
loop
lds
fsub
loop
cmpsb
test
pop
and
xor
jnp
push
xchg
test
add
push
cmpsb
cltd
scas
je
lods
popf
jle
std
ret
push
xor
stc
mov
adc
bound
push
jge
jg
sbb
pushf
addb
add
xchg
mov
pushl
add
pop
ljmp
jo
and
dec
mov
aam
push
sbb
inc
add
or
add
shlb
enter
add
enter
arpl
dec
sub
add
and
fsubl
fs
sub
in
cld
xchg
push
sub
sub
js
dec
mov
testb
aad
and
jge
mov
mov
mov
pop
mov
int
push
mov
push
add
inc
add
cmp
add
in
sbb
sub
dec
adc
rcr
lret
add
jmp
or
inc
stos
rcl
nop
movsb
inc
add
aaa
mov
dec
out
pop
ror
and
add
jmp
inc
add
pop
es
cmp
lock
adcl
pop
mov
aaa
pushf
mov
pop
sub
enter
arpl
jbe
enter
sahf
ss
jbe
add
jns
into
js
mov
push
xor
and
popf
nop
ret
and
insb
inc
add
in
inc
fstl
pop
sbb
dec
fdivp
fwait
xchg
jmp
cmpsl
jl
imul
add
mov
dec
jmp
push
fs
test
mov
loopne
xchg
dec
test
inc
add
xchg
dec
les
fists
jb
add
mov
jmp
sub
sub
iret
sub
dec
push
pop
in
dec
pop
cmp
aaa
push
add
in
pop
popa
ret
sarl
sbb
lcall
add
cmp
data16
movb
push
jbe
push
and
pop
pop
mov
std
jb
pop
adc
add
cli
dec
mov
push
js
test
and
pop
adc
lret
test
xchg
add
cmp
xchg
cld
cltd
jl
imull
push
add
add
push
das
push
cld
xor
incl
mov
add
push
les
imul
loopne
pop
adc
and
sbb
inc
add
insb
sbb
ljmp
in
rolb
scas
es
cmp
inc
jo
movb
loop
push
stos
std
fistpll
mov
js
xorl
leave
push
loope
and
enter
test
rorl
dec
into
push
inc
pop
roll
pop
lcall
pop
fcomps
xor
xor
out
stc
mov
pop
sbb
sub
cmp
jle
rcll
scas
insb
lods
xor
ljmp
ja
xor
or
test
push
ret
sub
push
movsl
rolb
mov
xor
inc
add
and
mov
dec
pushf
inc
mov
add
in
mov
add
and
insb
fnstsw
loope
adc
xchg
adc
xchg
rol
add
add
jno
das
mov
add
idivb
fmulp
push
jl
xchg
push
xchg
jns
add
enter
imulb
xor
in
out
mov
lahf
sbb
pop
mov
pop
addr16
mov
dec
cmp
arpl
mov
add
xor
rolb
pop
movsb
repz
gs
inc
add
in
inc
add
popa
xchg
dec
push
cmc
inc
push
push
add
jb
addb
adc
inc
repz
or
push
outsb
pushf
mov
sbb
jg
outsl
data16
mov
jnp
jo
add
cmp
and
stc
loopne
push
aad
push
cmp
lcall
mov
xchg
dec
mov
cwtl
je
pop
jge
stos
push
jmp
lret
xchg
fcompl
cmp
xor
stos
mov
mov
mov
iret
adc
mov
push
jle
xchg
inc
enter
jb
sub
add
adc
bound
pop
sbb
xchg
fmull
fninit
mov
clc
add
rcll
xchg
loop
cmp
sub
ss
pop
and
mov
sbb
lds
divl
dec
xor
int3
fisubs
add
lahf
mov
enter
jge
in
mov
out
shll
or
cmpsl
push
loop
add
sub
out
jbe
dec
movsl
loopne
mov
jnp
jge
arpl
sbb
cltd
mov
popa
pop
xor
pop
ss
fiadds
add
out
inc
add
mov
pop
js
jmp
adc
add
or
push
mov
ret
int
mov
imul
push
push
add
aam
ret
or
movsb
mov
out
aam
push
cmp
inc
add
mov
sti
aam
jp
xchg
push
ja
add
ja
cmpsl
addb
fdiv
sub
sahf
add
push
mov
add
daa
sbb
and
rolb
imul
movsb
cmp
add
mov
xlat
movb
movsb
int
add
add
out
icebp
xchg
dec
mov
xchg
std
add
cltd
insb
jge
xlat
mov
add
sbb
pop
jle
push
pop
lock
shll
pop
jle
cmc
xchg
ljmp
pop
push
jge
clc
out
pusha
add
jae
cli
aad
in
in
cmc
ljmp
jp
push
out
cmp
call
sti
arpl
lods
pusha
add
into
repz
cmp
mov
pop
mov
jne
shrl
sub
cmp
inc
add
xchg
loopne
sub
sub
mov
xor
adc
jae
iret
scas
and
out
mov
inc
dec
cmp
mov
inc
add
stos
mov
shrl
das
xchg
out
mov
pop
or
pushf
xor
in
cmc
sub
and
mov
pop
sbb
icebp
loope
pop
jb
cmp
jb
add
add
cmpsb
xor
lahf
rolb
jo
lcall
xchg
dec
fwait
jno
jne
rcrl
mov
movb
jmp
mov
pusha
add
es
repz
movb
sbb
orl
aaa
call
lret
push
mov
pop
and
add
mov
dec
daa
adc
add
cmp
sahf
mov
decl
jb
movzbl
outsl
push
stos
add
es
mov
add
jg
adc
fwait
push
or
rorl
fidivrs
ret
mov
sub
pushf
jecxz
imul
or
and
pop
or
adc
addb
cmp
dec
push
adc
cmp
sub
pop
sub
xchg
add
rcrb
mov
ja
leave
mov
sbb
jge
push
add
vucomisd
sbb
push
cld
mov
sub
in
xor
ja
out
push
mov
cmp
in
insb
fwait
mov
sbb
dec
xchg
jbe
pop
pop
sahf
add
and
cmp
data16
iret
pusha
add
hlt
stc
movsb
test
push
adc
cmp
pop
daa
into
shr
mov
lock
dec
repnz
data16
mov
ljmp
sbb
mov
mov
mov
lret
jge
arpl
int3
mov
rorl
jne
and
in
ret
mov
and
js
addb
push
int
add
add
adc
mov
add
or
mov
insl
and
sbb
push
push
insb
xor
imul
rolb
pop
hlt
and
mov
test
push
bound
cmp
cs
cwtl
pop
mov
jecxz
pop
dec
movsb
mov
stos
inc
add
mov
outsl
dec
movsb
pop
fnstsw
insb
movsl
mov
cmp
les
dec
jnp
add
aaa
jge
in
pop
sbb
inc
dec
or
pop
addb
add
add
popa
inc
insl
sbb
push
add
add
mov
pusha
add
add
sbb
jb
repz
pop
arpl
inc
xlat
insb
mov
test
sbbl
int
test
add
pop
cmp
imul
fsts
nop
stos
push
imul
mov
push
cs
mov
dec
sub
mov
jbe
lds
inc
add
add
pop
pop
adc
cmc
in
imul
imul
add
fcomp
loopne
out
popa
ror
sbb
and
hlt
sub
fs
sti
xor
shr
mov
add
stc
sbb
or
add
add
stos
imulb
add
cmp
mov
loop
lock
push
jae
add
les
lahf
or
enter
pop
push
push
mov
push
cmp
lock
mov
cwtl
insb
std
jge
sub
das
add
addb
mov
int
lds
jge
bound
insb
pop
loope
sbb
mov
insb
inc
sub
jo
out
fsin
repz
push
xor
cmc
mov
addr16
pop
pop
push
dec
loope
out
sarl
xchg
dec
mov
push
mov
lret
movb
stos
mov
xor
and
and
push
into
lock
outsb
pop
sub
push
ror
jno
jl
jge
cltd
lret
fwait
les
add
fdiv
fwait
nop
mov
in
mov
nop
aas
sbb
push
enter
cltd
jp
jge
arpl
dec
cmc
movsl
and
or
or
xchg
xlat
jno
xchg
cs
inc
add
fidivrs
out
pop
pushf
in
int3
mov
add
cmp
fcomp
xchg
fidivrs
stc
nop
jb
add
mov
push
mov
xchg
ret
jl
mov
mov
mov
mov
stc
nop
jb
add
add
stc
nop
jb
add
add
or
into
loopne
jae
add
add
cmc
decl
repz
test
add
nop
cld
jmp
sub
mov
nop
cld
jmp
imul
add
sub
add
add
add
sub
jno
add
stc
nop
jb
add
stc
nop
jb
cmp
aaa
addl
cmpl
nop
cld
jmp
add
push
std
and
nop
cld
jmp
cmp
inc
sbb
cmpsl
adc
mov
add
add
nop
jb
jmp
and
nop
jb
pop
add
fisttpl
cmpsl
in
add
stc
nop
jb
pop
mov
add
in
inc
jnp
jne
stc
nop
jb
add
add
mov
stc
nop
jb
add
add
cmp
sbb
mov
xchg
ret
leave
add
in
add
adc
xor
push
mov
xchg
ret
sub
add
jb
cmp
add
add
jle
sar
nop
jb
add
push
push
sub
call
stc
nop
jb
add
cld
jmp
add
add
sub
imul
nop
jb
add
mov
mov
stc
nop
jb
add
add
add
mov
nop
cld
jmp
add
dec
movzwl
nop
cld
jmp
dec
cmp
mov
cli
mov
stc
nop
jb
add
add
jo
popl
jne
stc
nop
jb
out
inc
in
icebp
or
nop
jb
data16
add
push
sbb
mov
xchg
ret
push
or
cld
jmp
inc
add
cmc
add
mov
jb
sub
push
add
add
add
ret
inc
xor
insl
push
push
mov
xchg
ret
jae
add
push
mov
jo
mov
nop
cld
jmp
add
add
in
dec
fmuls
jb
pop
sbb
out
add
popl
stc
nop
jb
adc
add
dec
inc
lods
mov
nop
cld
jmp
mov
pop
testb
stc
nop
jb
adc
add
add
nop
cld
jmp
add
add
push
add
xchg
ret
add
add
cmp
nop
cld
jmp
add
shl
stc
nop
jb
add
imul
or
stc
nop
jb
imul
push
stc
nop
jb
add
in
add
jmp
nop
cld
jmp
sbb
in
fadd
jecxz
push
stc
nop
jb
cmc
pop
add
add
add
push
mov
xchg
ret
mov
add
mov
push
mov
xchg
ret
sbb
add
stc
nop
jb
dec
loopne
jle
push
mov
xchg
ret
sub
add
dec
and
in
rep
nop
cld
jmp
out
add
loopne
push
mov
mov
stc
nop
jb
add
add
stc
nop
jb
sbb
add
add
stc
nop
jb
xchg
add
push
push
stc
nop
jb
add
sbb
jge
add
stc
nop
jb
dec
add
into
add
nop
jb
dec
xchg
add
or
aas
mov
stc
nop
jb
jle
mov
add
add
add
pop
mov
nop
cld
jmp
add
shlb
push
mov
xchg
ret
mov
mov
push
stc
nop
jb
add
lods
xor
push
mov
xchg
ret
push
pop
sub
cwtl
je
stc
nop
jb
add
imulb
mov
adc
nop
jb
add
add
leave
push
stc
nop
jb
add
add
add
mov
push
mov
xchg
ret
push
mov
add
fs
insb
add
nop
jb
sbb
nop
jb
add
jae
dec
add
xchg
push
shl
aas
jmp
stc
nop
jb
adc
add
jg
stc
nop
jb
or
jae
cmp
cmpw
stc
nop
jb
mov
add
rolb
adc
mov
push
stc
nop
jb
add
pop
add
add
push
nop
cld
jmp
mov
mov
push
mov
add
mov
mov
scas
add
add
xor
mov
stc
nop
jb
cli
mov
nop
cld
jmp
fcmovne
sbb
push
fcoms
pop
hlt
inc
add
lods
xchg
sbb
arpl
push
mov
xchg
ret
mov
sldt
leave
not
push
mov
xchg
ret
add
mov
mov
add
stc
nop
jb
add
sbb
and
sub
nop
jb
pop
add
sub
int3
push
push
mov
xchg
ret
add
add
sub
rcll
cmc
inc
add
add
cmp
add
dec
and
add
nop
jb
lods
adc
push
sub
and
add
add
add
sub
jno
push
jp
jb
nop
cld
jmp
pop
mov
mov
incl
nop
cld
jmp
mov
add
cmpw
nop
cld
jmp
dec
add
add
or
inc
cmp
mov
xchg
ret
lods
in
mov
add
stc
nop
jb
movb
cmp
stc
nop
jb
cmc
add
into
cmp
add
mov
stc
nop
jb
add
aad
xor
cmp
nop
cld
jmp
faddl
icebp
add
fildl
loop
rep
stc
nop
jb
add
inc
add
add
push
mov
xchg
ret
cltd
or
nop
jb
in
add
add
xabort
stc
nop
jb
push
add
mov
shl
dec
pushl
push
mov
xchg
ret
movlps
dec
mov
stc
nop
jb
add
data16
push
imul
inc
add
cmp
or
rep
nop
cld
jmp
add
in
mov
in
int
inc
add
mov
jbe
xchg
pop
rol
sysexit
lods
and
imul
js
psrad
add
stc
nop
jb
sbb
sub
jl
lods
push
push
mov
xchg
ret
sbb
rep
push
mov
xchg
ret
add
jo
pop
add
push
mov
xchg
ret
xchg
or
jmp
cld
jmp
out
add
add
add
add
adc
jl
add
cltd
add
xor
popa
push
mov
xchg
ret
add
add
in
cs
nop
cld
jmp
pop
add
add
pop
add
nop
cld
jmp
add
cmp
dec
call
stc
nop
jb
add
add
push
push
mov
xchg
ret
add
add
mov
add
nop
jb
mov
or
push
mov
xchg
ret
add
add
sbb
jg
add
stc
nop
jb
add
mov
add
add
add
add
mov
stc
nop
jb
je
mov
stc
nop
jb
add
mov
sub
nop
jb
add
mov
mov
stc
nop
jb
mov
inc
mov
inc
add
sbb
jmp
add
cltd
sub
fmul
mov
stc
nop
jb
add
jo
dec
movzwl
nop
cld
jmp
add
add
push
dec
pop
stc
nop
jb
add
data16
pop
add
mov
stc
nop
jb
add
add
aas
mov
push
mov
xchg
ret
icebp
add
add
dec
push
mov
xchg
ret
push
sub
add
dec
mov
stc
nop
jb
sbb
icebp
mov
push
adc
stc
nop
jb
mov
out
popa
lods
pop
push
mov
xchg
ret
or
insl
jne
stc
nop
jb
add
stc
nop
jb
xchg
cltd
add
push
mov
or
cmp
mov
ret
mov
stc
nop
jb
add
add
mov
nop
cld
jmp
add
subl
add
add
add
fisubs
cld
jmp
mov
cltd
out
into
mov
push
icebp
inc
add
add
pminsw
jmp
xorb
add
stc
nop
jb
add
adc
add
addb
xor
dec
nop
cld
jmp
xor
xchg
cmc
add
jne
push
nop
cld
jmp
cmp
push
fcoml
add
nop
jb
add
add
push
mov
lea
js
inc
add
pavgb
push
or
add
into
fsubl
sub
add
inc
nop
cld
jmp
mov
loopne
lods
or
mov
push
mov
xchg
ret
add
pop
push
sub
inc
and
nop
jb
add
add
add
nop
cld
jmp
faddl
add
jne
pushl
stc
nop
jb
add
add
cld
jmp
inc
mov
add
push
test
pop
add
stc
nop
jb
js
pop
mov
dec
sub
nop
jb
add
addr16
mov
xchg
ret
mov
loope
mov
push
mov
xchg
ret
mov
push
push
mov
xchg
ret
mov
cs
stc
nop
jb
sub
push
add
mov
stc
nop
jb
jo
into
add
push
nop
cld
jmp
dec
add
add
rclb
out
add
incl
push
bound
xchg
sbb
stc
nop
jb
add
inc
add
sbb
push
mov
push
aad
sub
loope
stc
add
xchg
add
clc
stc
nop
jb
cmp
sar
jb
add
cmp
sar
nop
jb
add
movb
add
pop
stc
nop
jb
fdivl
mov
jecxz
mov
stc
nop
jb
icebp
add
add
push
shr
mov
nop
cld
jmp
add
dec
mov
and
lea
stc
nop
jb
addr16
mov
nop
jb
add
mov
push
mov
xchg
ret
mov
or
call
adc
cmp
ret
mov
jno
mov
stc
nop
jb
add
xchg
jo
add
mov
ds
stc
nop
jb
push
add
add
add
sbb
cmp
ret
pop
add
mov
add
nop
jb
add
out
ljmp
cld
jmp
add
add
nop
push
mov
xchg
ret
add
push
mov
pusha
add
pop
dec
push
mov
jle
test
sub
jb
jmp
cmp
fdivr
lcall
mov
icebp
or
push
dec
mov
stc
nop
jb
add
add
jo
add
nop
cld
jmp
add
out
add
mov
sbb
mov
xchg
ret
add
mov
xchg
ret
outsb
add
add
cmp
pop
call
add
add
add
push
mov
xchg
ret
pop
add
mov
inc
sub
nop
jb
add
sub
andnps
fisubl
shll
sbb
pop
add
nop
cld
jmp
add
mov
into
cmp
or
nop
jb
add
cmp
add
mov
mov
stc
nop
jb
faddl
add
lods
cmp
push
std
inc
add
jmp
add
cld
jmp
xchg
xchg
pop
add
jb
xchg
fiadds
xchg
ret
add
ret
icebp
imul
add
stc
nop
jb
add
xor
stc
nop
jb
cmp
inc
add
es
sub
push
mov
xchg
ret
add
add
mov
xchg
ret
mov
add
stc
nop
jb
add
mov
mov
xchg
ret
xchg
sbb
rolb
inc
add
ja
nop
cld
jmp
sbb
mov
call
add
sub
add
add
enter
stc
nop
jb
pop
mov
pop
jmp
adc
inc
add
mov
add
bound
stc
mov
stc
nop
jb
add
add
data16
test
nop
jb
lods
xchg
sub
mov
stc
nop
jb
add
add
jo
jne
stc
nop
jb
add
jnp
mov
push
nop
cld
jmp
push
add
lods
nop
cld
jmp
mov
or
inc
dec
into
mov
loop
pop
add
ds
sub
jns
fwait
mov
push
mov
xchg
ret
add
ret
ret
pushl
push
mov
xchg
ret
add
dec
mov
mov
xchg
ret
mov
cld
jmp
sbb
add
out
mov
stc
nop
jb
xchg
in
xchg
stc
nop
jb
js
add
dec
cmc
adc
jmp
pop
add
add
ret
cltd
add
push
movsl
gs
je
je
stc
nop
jb
dec
inc
popf
add
stc
nop
jb
cmp
pop
jl
push
push
mov
xchg
ret
outsb
add
icebp
xchg
in
rep
nop
cld
jmp
leave
loopne
outsb
or
adc
add
mov
add
pushf
mov
stc
nop
jb
xchg
cmp
mov
push
mov
xchg
ret
fildl
aad
pop
nop
cld
jmp
dec
into
sub
add
js
sti
pusha
nop
cld
jmp
cmp
add
faddl
sub
jne
stc
nop
jb
mov
and
mov
xchg
ret
mov
push
stc
nop
jb
pop
sub
mov
cmc
jae
mov
stc
nop
jb
or
add
movsl
fldl
xchg
ret
add
add
sbb
add
nop
jb
outsb
add
pop
xor
stc
nop
jb
add
add
push
out
add
add
mov
nop
cld
jmp
or
mov
xor
mov
stc
nop
jb
sub
mov
stc
nop
jb
in
sbb
add
lods
rep
stc
nop
jb
add
add
add
jmp
inc
stc
nop
jb
add
mov
ret
stc
nop
jb
add
into
add
ret
addb
mov
stc
nop
jb
add
add
jb
cmc
mov
push
sbb
and
add
js
mov
mov
inc
add
mov
add
popa
xchg
jae
stc
nop
jb
add
or
xor
add
stc
nop
jb
add
lods
add
nop
cld
jmp
or
sub
in
dec
add
hlt
xor
cmp
add
xor
fdivrp
nop
jb
add
or
xor
nop
jb
xchg
add
xchg
add
push
nop
cld
jmp
add
cmp
or
ret
repnz
add
add
mov
jmp
xchg
mov
data16
add
cli
add
jne
stc
nop
jb
jl
mov
add
stc
nop
jb
leave
js
cmp
add
push
jecxz
cmp
nop
cld
jmp
push
add
pop
or
add
nop
jb
add
add
repnz
add
stc
nop
jb
loopne
mov
in
push
mov
xchg
ret
pop
add
addb
iret
mov
stc
nop
jb
mov
mov
pop
push
stc
nop
jb
add
add
lds
push
stc
nop
jb
imul
or
int
jno
stc
nop
jb
add
add
les
jl
stc
nop
jb
add
add
xchg
cmc
cmc
nop
lret
nop
jb
add
mov
add
imul
jmp
add
add
data16
test
xor
cmpl
push
mov
xchg
ret
mov
fiaddl
ret
stc
nop
jb
mov
add
nop
cld
jmp
outsb
add
in
ret
add
mov
stc
nop
jb
sub
jo
add
push
test
adc
jb
lods
add
add
nop
cld
jmp
push
sub
xchg
ljmp
sti
inc
add
or
nop
jb
mov
add
fistl
jb
sbb
push
add
cs
stc
nop
jb
add
add
sbb
mov
xchg
ret
outsb
add
pop
call
stc
nop
jb
pop
add
add
nop
jb
add
faddl
add
nop
jb
add
push
add
call
mov
xchg
ret
add
mov
dec
or
popa
add
nop
jb
add
add
add
jbe
stc
nop
jb
mov
fadds
mov
xchg
ret
pushw
or
add
pop
stc
nop
jb
push
into
add
mov
outsw
mov
push
mov
xchg
ret
add
add
add
stc
nop
jb
cmp
add
or
push
mov
xchg
ret
xchg
add
cmp
stc
nop
jb
push
icebp
add
push
push
mov
xchg
ret
dec
push
push
movb
je
stc
nop
jb
mov
stc
nop
jb
add
add
xlat
ret
and
add
stc
nop
jb
js
add
mov
xchg
ret
mov
and
xor
xchg
nop
cld
jmp
or
add
mov
nop
cld
jmp
cmc
jl
pop
add
dec
mov
nop
cld
jmp
add
add
push
add
lea
nop
cld
jmp
add
cmp
add
mov
push
mov
xchg
ret
add
add
loopne
scas
mov
stc
nop
jb
js
add
push
sub
add
mov
add
add
stc
nop
jb
call
or
add
jmp
nop
jb
push
mov
jnp
jb
add
add
add
add
add
add
add
pop
mov
push
mov
xchg
ret
xchg
and
nop
jb
push
add
add
add
xorb
add
add
add
shlb
mov
nop
cld
jmp
add
add
cmc
add
nop
jb
jl
pop
add
lods
jne
nop
cld
jmp
add
or
add
stc
nop
jb
pop
add
inc
sub
add
stc
nop
jb
add
add
add
sub
jb
add
in
add
add
nop
jb
add
add
imul
incb
xchg
ret
cmc
mov
pop
add
add
add
nop
cld
jmp
or
ltr
rep
stc
nop
jb
add
cmp
add
pop
enter
jg
inc
add
data16
aam
jne
nop
cld
jmp
loopne
add
stc
imul
stc
nop
jb
mov
add
add
test
idiv
stc
nop
jb
xor
in
push
stc
nop
jb
jmp
add
nop
cld
jmp
add
add
add
jg
xchg
cmpl
leave
or
add
nop
jb
loopne
add
fsubrl
stos
push
mov
xchg
ret
add
xor
add
stc
nop
jb
lods
push
imul
jmp
add
add
sub
adcb
add
add
lea
nop
cld
jmp
add
add
cmp
or
stc
nop
jb
mov
jl
push
mov
xchg
ret
mov
or
test
add
stc
nop
jb
sbb
add
mov
stc
nop
jb
or
inc
stc
nop
jb
add
xor
cld
popa
stc
nop
jb
cmp
add
add
add
nop
jb
imul
stos
stc
nop
jb
add
jl
add
stc
nop
jb
add
add
stc
nop
jb
inc
incl
jae
mov
test
or
add
nop
jb
addr16
addb
mov
nop
jb
sub
out
add
sub
je
stc
nop
jb
in
fisttpl
inc
or
mov
xchg
ret
add
mov
std
mov
stc
nop
jb
dec
faddl
add
pop
push
stc
nop
jb
mov
fisttpl
mov
stc
nop
jb
add
add
data16
movsl
pop
pusha
stc
nop
jb
add
cmp
add
insl
and
stc
nop
jb
push
add
rolb
add
jb
xor
add
xchg
stc
nop
jb
add
push
push
or
add
stc
nop
jb
adc
sbb
jmp
add
nop
cld
jmp
or
mov
nop
jb
add
sbb
adc
nop
jb
push
add
imul
stc
nop
jb
add
jl
hlt
sar
je
stc
nop
jb
sbb
hlt
mov
stc
nop
jb
inc
sub
pop
or
addb
add
movzwl
stc
nop
jb
add
add
xlat
sahf
add
nop
cld
jmp
add
mov
add
or
rcrb
nop
jb
add
add
call
call
cmp
and
push
mov
xchg
ret
add
mov
stos
stc
nop
jb
xchg
add
mov
jl
xor
iret
in
add
mov
jle
nop
cld
jmp
jl
movb
ret
lret
push
push
mov
xchg
ret
add
push
fisubl
popa
add
mov
xchg
ret
push
imul
ljmp
add
nop
jb
add
nop
icebp
lods
xor
stc
nop
jb
addr16
xor
stc
nop
jb
ljmp
fistl
aam
inc
add
in
faddl
cwtl
shr
push
mov
xchg
ret
mov
add
and
push
mov
xchg
ret
movb
sub
nop
cld
jmp
add
mov
rclb
incl
mov
add
sbb
inc
add
call
stc
nop
jb
push
add
sub
jb
in
imul
cwtl
push
stc
nop
jb
add
add
cmpb
pop
mov
xchg
inc
or
add
nop
jb
add
add
xchg
cmp
test
add
stc
nop
jb
imul
nop
cld
jmp
mov
jae
inc
add
dec
cmp
cld
jmp
lods
add
jne
nop
cld
jmp
add
add
inc
lock
mov
xchg
ret
add
add
stc
nop
jb
add
add
out
mov
jb
add
add
mov
nop
cld
jmp
fildl
add
add
movb
mov
stc
nop
jb
add
mov
std
push
nop
cld
jmp
jl
add
xor
call
nop
cld
jmp
add
add
push
mov
xchg
ret
add
jg
nop
cld
jmp
sub
out
add
mov
push
mov
xchg
ret
add
fistl
cld
jmp
add
add
mov
mov
leave
push
mov
xchg
ret
add
add
cmp
nop
jb
out
add
add
add
nop
jb
mov
add
mov
stc
nop
jb
or
dec
add
add
mov
stc
nop
jb
add
jne
inc
add
pop
add
xchg
ret
push
push
mov
xchg
ret
dec
dec
pop
sub
xchg
fcoms
mov
xchg
ret
sub
sbb
xchg
dec
adc
nop
jb
sbb
jmp
sti
stc
nop
jb
add
push
add
add
lahf
add
stc
nop
jb
mov
inc
into
add
mov
push
stc
nop
jb
add
add
lret
nop
cld
jmp
add
mov
add
mov
or
stc
nop
jb
xor
or
jne
stc
nop
jb
add
pop
sub
mov
sub
nop
jb
add
outsb
add
add
push
mov
xchg
ret
cltd
pop
jl
sub
jb
js
add
add
call
stc
nop
jb
add
xchg
pop
or
mov
add
nop
jb
fstpt
loopne
jb
stc
nop
jb
add
subl
stc
nop
jb
mov
add
stc
nop
jb
mov
cmp
inc
cwtl
mov
stc
nop
jb
add
popf
pop
stc
nop
jb
cmp
add
push
stc
nop
jb
js
mov
popa
dec
pop
stc
nop
jb
add
add
imul
push
stc
nop
jb
add
adc
add
lret
stc
nop
jb
add
mov
add
add
stc
nop
jb
add
push
stc
nop
jb
js
add
add
add
stc
nop
jb
add
loopne
mov
or
nop
or
add
outsl
arpl
add
nop
jb
outsb
sbb
mov
nop
cld
jmp
push
outsb
out
xchg
add
mov
cmpb
pop
add
xchg
cmp
imul
add
add
decl
add
div
nop
cld
jmp
add
add
out
push
bound
inc
adc
add
stc
nop
jb
mov
add
add
stc
nop
jb
movb
add
nop
jb
add
sbb
fmuls
add
stc
nop
jb
mov
add
mov
in
inc
add
add
mov
and
lea
mov
jb
lods
add
add
jb
jl
mov
lods
mov
push
mov
xchg
ret
add
add
lret
call
stc
nop
jb
add
xchg
rolb
pusha
push
mov
xchg
ret
push
add
add
stc
nop
jb
sbb
add
sub
leave
nop
cld
jmp
add
mov
and
and
jmp
xlat
out
ljmp
add
cmc
fisttpl
leave
jne
stc
nop
jb
call
xor
or
test
cmc
stc
nop
jb
mov
outsl
popa
fs
nop
jb
add
push
mov
xchg
ret
mov
add
pop
les
adc
push
and
nop
cld
jmp
sub
add
repz
call
lcall
in
add
outsw
mov
push
mov
xchg
ret
fdivl
call
incl
dec
or
call
nop
jb
add
add
loopne
add
add
stc
nop
jb
add
popf
mov
stc
nop
jb
push
xor
jae
add
stc
nop
jb
xor
lea
cld
jmp
lldt
add
mov
or
les
stc
nop
jb
add
jae
mov
call
stc
nop
jb
inc
add
mov
stc
nop
jb
cmc
test
xchg
inc
add
jmp
nop
cld
jmp
pop
mov
outsb
dec
add
push
mov
xchg
ret
add
mov
adc
movzwl
stc
nop
jb
add
out
add
push
mov
xchg
ret
add
in
xchg
push
add
pop
stc
nop
jb
mov
sbb
loopne
cmc
dec
mov
stc
nop
jb
jo
mov
add
stc
nop
jb
leave
add
sahf
mov
stc
nop
jb
add
dec
sbb
call
push
mov
xchg
ret
sbb
mov
stc
nop
jb
add
fisubrl
nop
cld
jmp
add
sbb
stc
nop
jb
sldt
add
jo
add
out
cmp
nop
cld
jmp
add
mov
push
mov
xchg
ret
sub
add
stc
nop
jb
jae
add
xchg
gs
mov
nop
cld
jmp
in
sbb
aam
mov
inc
add
add
aad
xor
stc
nop
jb
add
add
add
stc
nop
jb
js
or
jae
fdivl
in
mov
test
or
addl
icebp
stc
nop
jb
push
mov
call
stc
nop
jb
sbb
add
inc
nop
cld
jmp
add
mov
popa
add
nop
jb
inc
add
pushf
mov
stc
nop
jb
add
outsb
mov
stc
nop
jb
push
add
sbb
mov
xchg
ret
add
add
stc
nop
jb
add
jo
add
add
mov
xchg
ret
add
sbb
nop
jb
add
js
imul
add
nop
jb
cmc
out
pop
add
imul
in
add
aas
add
mov
push
mov
xchg
ret
xor
push
nop
cld
jmp
push
add
add
sbb
push
mov
xchg
ret
data16
icebp
add
mov
push
mov
xchg
ret
ljmp
add
nop
jb
add
pop
stc
nop
jb
cmp
add
xchg
mov
add
nop
cld
jmp
add
mov
xchg
ret
inc
add
push
add
mov
stc
nop
jb
pop
mov
addr16
mov
push
mov
xchg
ret
add
nop
cld
jmp
mov
mov
jo
jne
nop
cld
jmp
imul
jmp
in
lcall
add
add
add
iret
or
out
lcall
mov
mov
push
mov
xchg
ret
pop
xor
push
stc
nop
jb
push
jo
xchg
add
add
scas
add
stc
nop
jb
mov
fcoml
nop
jb
xchg
add
add
add
jb
add
mov
add
add
stc
nop
jb
add
mov
stc
nop
jb
pop
add
add
sub
nop
jb
add
xor
xor
mov
stc
nop
jb
outsb
xor
ret
sbb
icebp
fdivr
incl
dec
sub
push
stc
nop
jb
push
in
jl
dec
add
add
add
add
add
adc
inc
add
movswl
stc
nop
jb
dec
imul
pop
or
cld
jmp
add
fsubr
xchg
inc
sbb
push
cmp
ret
add
add
add
stc
nop
jb
add
incl
mov
and
nop
cld
jmp
add
loopne
cmp
push
mov
xchg
ret
add
add
addb
xchg
insl
lea
push
mov
xchg
ret
ljmp
bnd
mov
stc
nop
jb
jmp
inc
add
nop
jb
dec
addr16
imul
mov
xchg
ret
add
add
inc
push
mov
xchg
ret
add
jmp
lea
stc
nop
jb
ret
add
add
xor
mov
xchg
ret
add
out
iret
mov
stc
nop
jb
add
add
mov
adc
nop
jb
jl
fildl
add
cmp
mov
push
stc
nop
jb
jl
out
sbb
test
jl
stc
nop
jb
into
add
mov
stc
nop
jb
imul
and
dec
xor
stc
nop
jb
add
iret
push
push
mov
xchg
ret
add
jo
leave
mov
adc
xor
jl
outsl
add
add
ljmp
fildl
dec
lea
sub
nop
jb
js
add
adc
add
stc
nop
jb
add
cmc
cmc
add
sub
nop
jb
pop
add
add
add
ret
xchg
push
dec
pop
push
mov
xchg
ret
xor
and
fsubr
xlat
call
incl
add
add
mov
jno
decl
stc
nop
jb
faddl
add
mov
and
or
nop
cld
jmp
js
jae
add
add
pushl
jl
cmp
stc
nop
jb
jl
push
imul
out
push
stc
nop
jb
or
add
mov
add
pop
lods
dec
stc
nop
jb
loopne
mov
mov
pushl
stc
nop
jb
into
add
push
pop
xlat
mov
sub
faddl
push
add
mov
nop
cld
jmp
add
push
hlt
icebp
cli
push
stc
nop
jb
add
leave
mov
and
stc
nop
jb
into
lods
faddl
loopne
repnz
sbb
jb
add
add
mov
mov
stc
nop
jb
mov
mov
stc
nop
jb
add
push
adc
jmp
adc
lods
add
add
mov
xchg
ret
mov
cmc
dec
fsubl
push
stc
nop
jb
out
add
out
sbb
add
push
nop
cld
jmp
add
cltd
add
stc
nop
jb
add
sar
jb
add
add
sub
stc
nop
jb
pushl
sahf
add
stc
nop
jb
add
add
aam
mov
out
jmp
and
add
add
nop
jb
add
xor
stc
push
stc
nop
jb
push
push
add
add
repnz
divb
jb
add
add
outsb
syscall
cld
mov
nop
cld
jmp
sbb
add
hlt
add
cmpsb
sub
repz
nop
jb
add
lods
mov
jo
shlb
stc
nop
jb
add
add
pop
or
add
nop
jb
mov
add
jb
cmp
mov
add
stc
nop
jb
mulps
decl
add
inc
nop
cld
jmp
mov
jo
pop
push
push
mov
xchg
ret
dec
mov
lock
nop
jb
adc
mov
pushf
sub
stc
nop
jb
add
out
add
pop
mov
repz
nop
jb
add
add
pop
add
jb
mov
add
push
add
cmpsb
imul
and
mov
xchg
ret
add
sub
nop
jb
mov
add
mov
push
push
mov
xchg
ret
add
icebp
push
sahf
shr
stc
nop
jb
mov
jl
cmc
shl
fadd
out
stc
nop
jb
add
jae
add
xchg
ret
sahf
mov
nop
cld
jmp
add
jne
push
mov
nop
mov
adc
sbb
scas
inc
in
into
xchg
pop
ret
in
fsub
add
add
xchg
leave
rcrl
jnp
cmp
das
popf
shl
ret
ljmp
pop
jp
cmpl
adc
mov
mov
aad
clc
mov
mov
mov
scas
xchg
fiaddl
add
jno
cmp
cmp
mov
inc
add
cmpsb
jecxz
cli
popf
pop
dec
gs
adc
xchg
xor
dec
popf
mov
cmc
jne
scas
sbb
jg
pop
mov
fs
data16
ljmp
push
push
pop
pop
jmp
push
cmp
mov
pop
inc
out
or
jecxz
sub
addb
mov
xchg
test
shl
cmp
adc
movsb
mov
fwait
sti
jb
negb
mov
mov
xchg
loop
push
add
sub
push
push
add
aaa
lods
add
mov
jg
fdivrs
ljmp
stos
jbe
cmpsb
mov
lods
mov
add
sub
je
push
xchg
add
fsubr
inc
add
rol
and
les
push
cltd
subl
dec
push
adc
lahf
push
mov
or
test
aaa
ret
js
repz
pushf
adc
pop
ds
mov
xchg
std
into
mov
push
xor
out
xor
repnz
pop
sbb
cli
loop
mov
add
adc
cmp
dec
push
ficoml
xor
adc
xor
divb
adc
inc
pop
inc
aam
xchg
mov
ss
aad
mov
outsb
fbld
cmpsl
stc
push
data16
clc
int3
ds
popa
mov
mov
xor
mov
daa
mov
add
aas
jb
push
stos
clc
addr16
loopne
rep
sbb
add
scas
jge
sbb
dec
push
lea
jbe
aas
cmp
cmp
xorl
xchg
pop
mov
fiaddl
mov
jge
pop
cli
push
add
daa
rorl
cmp
push
js
out
add
test
sbb
add
jmp
sub
add
jb
lahf
in
mov
sbb
scas
xchg
les
adc
push
xchg
xor
dec
loopne
mov
adc
jl
data16
inc
push
pop
mov
cmc
dec
sahf
xor
pop
clc
mov
xor
add
cs
add
dec
xchg
xorl
in
daa
stos
les
mov
rolb
xchg
mov
inc
add
sbb
repnz
and
test
add
add
mov
scas
push
leave
movsb
shl
cmpsb
fnstcw
out
pop
out
inc
add
xor
movb
mov
push
mov
and
jns
jmp
adc
jg
inc
add
sbb
insb
jle
movsb
cmpsl
out
mov
add
xchg
aam
add
in
sbb
fmuls
inc
add
add
mov
jnp
cmp
mov
hlt
outsl
cli
mov
add
mov
add
addr16
inc
add
rorb
stos
fimull
dec
add
lcall
idivl
cmp
push
mov
movsb
int3
mov
add
add
lds
pop
imul
adc
insb
mov
aad
test
xchg
jecxz
pop
dec
stos
lahf
inc
add
mov
icebp
stos
not
imul
dec
in
aas
inc
add
addb
sub
sti
pop
insb
cmp
call
add
sub
rolb
int3
rolb
push
jecxz
les
inc
idivl
adc
dec
jle
mov
push
movsl
in
and
test
jl,pt
push
decl
mov
mov
rcll
mov
negl
lret
test
clc
jne
xor
lock
orl
push
notb
inc
cmp
xchg
popf
je
movsb
imulb
loopne
das
faddp
add
jno
movsl
lock
push
and
mov
xchg
mov
cmpsb
lock
gs
ss
addr16
rcrl
movsb
lret
mov
xchg
movsb
jle
lods
mov
push
sbb
fucomi
xlat
movl
hlt
sbb
fwait
jb
insb
jp
ret
push
je
rcrl
jo
movsl
sbb
cs
adc
cmpl
popf
je
mov
cli
js
cmp
add
mov
faddl
std
pusha
add
mov
popa
add
add
ljmp
shll
jle
mov
mov
add
std
iret
xor
sbb
shll
jns
nop
std
aad
add
xlat
pop
inc
or
xor
rolb
mov
or
insl
push
adc
add
lcall
sti
adc
gs
je
add
jecxz
add
xor
push
jnp
addr16
add
add
insl
bound
shrl
or
js
sbbl
and
test
frstor
adc
addr16
rcl
into
movsl
lret
jnp
loop
xchg
je
pushl
std
out
add
push
pop
ljmp
jnp
dec
movsb
popf
in
push
adc
cmpsl
mov
sahf
imul
int3
movsb
in
push
insl
cmp
push
movsb
cmp
test
and
les
icebp
adc
in
adc
cmpl
loop
add
incl
jmp
pop
mov
icebp
repnz
xchg
int3
loopne
jmp
fiadds
or
mov
mov
jp
add
push
loope
add
mov
jle
in
in
in
jg
cmp
cmpsl
dec
add
mov
pushf
pusha
add
addb
or
jge
movl
or
adc
iret
es
test
mov
cmpsl
xlat
iret
dec
pop
stos
or
ds
jne
push
cmpsl
rcll
ds
pop
xchg
sbb
sbb
or
lock
mov
mov
sub
and
cmp
mov
cmpsb
xchg
in
rolb
xor
repz
mov
sbb
insl
inc
add
push
mov
out
les
iret
dec
in
shrb
test
sub
aam
je
or
mov
adc
imulb
inc
add
movsl
pop
in
cmp
push
inc
add
lahf
push
sbb
fsubs
jae
dec
mov
test
lock
xor
stos
cmp
mov
add
out
xor
add
loop
data16
push
call
adc
sti
test
div
cmp
adc
sahf
les
add
lret
or
jo
arpl
jmp
pop
pop
dec
sub
cli
mov
pushf
push
xor
mov
imul
push
inc
add
cmp
push
add
cmp
sbb
mov
cwtl
or
add
mov
int3
or
inc
add
call
insb
pop
mov
fistpl
mov
aas
pop
subl
mov
jns
in
or
jp
loope
push
xchg
adc
pop
fsubl
ja
fldl
pop
test
outsb
xchg
jae
mov
or
mov
inc
popl
js
fsubs
cmp
and
mov
movb
dec
ljmp
jnp
lods
adc
addr16
rolb
gs
sub
push
cltd
addb
xor
andl
pop
jg
loopne
add
call
outsl
xchg
stos
sahf
mov
in
iret
xchg
cmpsl
jge
push
xchg
mov
adc
and
inc
add
dec
icebp
inc
jg
addb
les
pushf
cmpsb
lret
loop
add
push
jb
push
pop
mov
inc
loop
xor
add
and
mov
inc
push
push
push
scas
mov
sbb
cmpsb
fdiv
adc
sbb
pop
and
cltd
pop
scas
pusha
add
hlt
jge
add
dec
ret
pop
addb
add
mov
and
sub
pop
jmp
aaa
xor
test
fs
mov
vmread
gs
mov
lods
push
push
push
jnp
repnz
dec
jge
dec
sbb
scas
pop
scas
dec
push
pop
or
daa
inc
dec
jo
aam
popf
mov
leave
sub
lea
adc
scas
out
out
mov
lret
adc
or
mov
cmp
lods
int
vdivsd
addr16
push
push
xor
push
orl
pushf
dec
cltd
in
int
jp
jle
pushf
lahf
sbb
mov
push
test
inc
inc
add
out
mov
pop
xor
fistps
mov
xchg
and
aad
popf
inc
movb
sti
sbb
xlat
ss
andl
iret
in
mov
add
fadds
mov
mov
fistpll
mov
fmuls
adc
jns
mov
jmp
sbb
inc
test
in
inc
add
add
sub
sahf
insb
fs
cwtl
adc
stos
lret
xor
nop
add
cmp
cmp
fwait
mov
add
outsb
aas
lret
inc
add
jmp
inc
xchg
movb
imul
xor
or
inc
mov
test
scas
mov
jae
repnz
pop
cmp
mov
loop
sbb
xor
pop
xchg
add
or
adc
add
and
jge
xor
jmp
pop
lret
jle
scas
hlt
cmpsl
mov
xchg
mov
fstpl
or
push
xchg
mov
fwait
add
pop
push
push
repnz
and
add
sub
xchg
movsl
rcrb
aas
outsl
push
lods
xlat
stos
lea
jmp
gs
sbbl
add
out
scas
cli
shr
fistps
pushf
mov
or
andl
xor
insb
out
dec
pminsw
aas
nop
xor
cmp
fimuls
jmp
push
cli
scas
aam
add
or
jb
addr16
imul
xlat
xchg
xchg
pop
rcl
mov
mov
fnstenv
xor
lods
fimull
dec
les
mov
daa
int
mov
pop
vpcmpeqw
dec
push
daa
mov
leave
add
imul
outsl
mov
cmp
ljmp
mov
jle
int3
cmp
mov
adc
and
or
add
cmp
shll
add
mov
inc
movsb
mov
iret
mov
insb
test
jp
add
xchg
movb
xchg
arpl
insl
addb
pop
push
jbe
jo
clc
add
add
das
nop
jmp
xchg
add
or
mov
push
xchg
and
adc
das
movsl
bound
push
lcall
sub
in
and
ret
movb
sub
add
ja
cmpsl
add
mov
cmc
icebp
adc
les
pop
add
push
aam
roll
mov
inc
rolb
ja
cmp
add
adc
mov
xlat
jns
jno
or
add
sarb
pop
gs
imul
orps
and
cmpl
dec
roll
xchg
lds
mov
lock
sub
sub
js
test
int3
aam
cmp
sti
pusha
add
out
icebp
adc
daa
push
nopl
jmp
pusha
add
pop
icebp
pop
or
inc
daa
pop
rcrl
imul
sub
cld
and
cwtl
dec
mov
adcl
in
mov
add
xor
add
popf
mov
push
and
test
add
xchg
pushl
clc
jbe
jnp
mov
xchg
mov
lods
pop
push
fs
xchg
mov
mov
jecxz
push
push
xchg
imul
add
jge
push
xor
pop
popa
lret
std
or
mov
mov
or
add
xor
add
fstpl
push
mov
test
adc
mov
aaa
sahf
cmp
repz
push
mov
cld
xchg
rcr
test
test
gs
mov
fsubr
sbb
add
into
jecxz
arpl
push
add
jno
lret
xchg
and
dec
ret
and
add
push
fiaddl
in
out
cmc
in
hlt
ss
add
push
test
lret
fcmovb
imul
addr16
dec
xor
pop
mov
hlt
pop
outsl
cmpsb
jecxz
lcall
adc
mov
jmp
mov
pop
adc
insb
inc
add
repz
sbb
repnz
mov
dec
mov
push
push
dec
push
cwtl
jl
xor
lds
testl
popf
inc
bound
rolb
fists
lret
movsb
xor
or
mov
rcll
imul
xor
icebp
arpl
gs
mov
add
sbb
popa
dec
dec
outsb
add
out
fs
repz
add
push
lret
fwait
mov
pop
mov
mov
stos
mov
inc
xor
xchg
and
cmc
ds
je
enter
push
in
adc
inc
clc
jge
outsl
sub
pop
enter
sbb
mov
adc
push
cmp
je
rcll
xchg
inc
add
jge
out
sbb
add
add
repz
outsb
shrl
fistpll
popa
cwtl
js
sahf
mov
push
in
mov
leave
add
aad
xor
cmp
jle
inc
add
and
lret
andl
popf
bound
adc
adc
repnz
add
repz
sbbl
sbb
daa
mov
cltd
xor
cwtl
mov
jae
sbb
ds
cmp
lcall
adc
mov
stos
pop
cmp
movsl
pop
pop
adc
jmp
sti
rcrl
aaa
mov
rolb
xchg
push
add
xor
lcall
ret
daa
addb
inc
sbb
pop
rcrb
add
cltd
and
addb
add
push
jp
or
or
dec
outsl
ss
pop
ficoms
cmp
fcmovnb
inc
add
jb
mov
push
cmc
stos
xor
mov
add
outsb
and
movb
push
inc
or
jne
pop
mov
stos
test
jecxz
ljmp
jbe
fs
mov
add
dec
movb
inc
add
les
add
ja
add
mov
cli
loope
lea
fstp
aad
arpl
pop
out
addr16
jae
dec
pop
push
cld
test
lods
sub
add
movb
ficomps
call
inc
add
push
add
shl
subl
cmp
outsl
sub
outsl
xor
pop
insl
into
mov
call
push
jnp
pop
adc
pop
int
sti
jno
lcall
lahf
addb
popf
cmp
add
pop
je
loop
add
es
sub
mov
std
mov
sbb
fistpll
add
rolb
out
imul
dec
pop
test
movb
sub
jg
jl
lret
pop
xchg
test
push
inc
cmpsb
pop
mov
cmp
gs
jbe
cmp
iret
lret
scas
mov
mov
inc
pop
in
fidivs
add
test
fwait
aas
and
int
pop
stos
mov
jno
lahf
jl
add
inc
lods
mov
loopne
in
mov
inc
mov
imul
ja
mov
outsb
fildll
cmp
mov
addb
aad
push
fistl
xchg
scas
pop
pusha
add
ja
mov
sbb
std
push
faddl
add
cwtl
sbb
xor
lcall
jns,pt
cmp
jne
ja
lods
ret
jo
mov
sti
popa
push
clc
cltd
rolb
and
out
test
add
loop
pop
add
repz
pushf
xchg
mov
xor
inc
add
filds
xchg
lret
and
xor
dec
adc
and
out
pop
rclb
mov
movsb
loopne
adc
sbb
mov
jnp
int3
test
sti
aam
sub
aaa
std
pop
orl
dec
fs
mov
imul
int3
mov
aas
jbe
setb
xor
dec
ss
data16
movsb
out
rolb
push
mov
dec
daa
aam
lods
loopne
addb
rcll
jb
aad
cmp
fnstenv
sbb
dec
jge
add
sbb
ja
enter
cmp
imul
es
cmp
popf
adc
add
or
push
inc
lds
hlt
sbb
add
mov
push
mov
bound
mov
add
mov
pop
jl
repnz
test
sub
aaa
push
add
popf
sti
imul
or
cmp
ss
pusha
add
add
mov
xchg
test
cld
mov
ljmp
mov
repz
xlat
fldt
add
jne
into
lahf
scas
sub
test
pop
hlt
ret
cmp
imul
or
xchg
mov
sbb
scas
push
xchg
add
push
outsb
loope
cmpl
data16
adc
dec
sbb
xor
rol
add
stos
xchg
mov
cld
xchg
sbb
xor
dec
int3
daa
xchg
or
add
cmp
pop
aad
sbb
repnz
fmul
push
and
mov
add
and
inc
push
mov
jmp
inc
add
mov
icebp
push
jnp
clc
out
adcl
and
in
mov
outsb
js
or
mov
imul
cmpsb
out
test
popf
lret
mov
shrl
mov
push
mov
mov
or
leave
inc
addb
push
xchg
fisubrl
push
mov
int3
adc
ret
addb
mov
ds
mov
loope
scas
mov
loopne
sbb
or
rolb
mulb
mov
jb
add
mov
out
addb
cltd
jno
and
repz
xlat
push
mov
mov
notb
push
add
cmp
aad
in
aas
mov
pop
dec
xchg
test
lds
shl
aam
scas
addb
mov
add
add
or
sbb
mov
xchg
push
lea
add
in
imul
add
shrb
jl
mov
push
and
add
cmp
jns
scas
xchg
push
jae
dec
inc
adc
idivl
dec
dec
inc
rolb
inc
add
movsb
bound
add
packsswb
cmp
or
jno,pt
fimuls
daa
lahf
into
cld
fcmovbe
ret
mov
dec
aad
mov
add
adc
lock
mov
jnp
das
inc
add
int3
ljmp
out
pop
into
fldenv
lea
add
aad
jae
or
mov
leave
or
add
leave
sbb
inc
cmp
lods
push
imul
cmp
loop
xor
dec
out
lea
pushf
xor
mov
inc
add
mov
sbb
cmp
call
add
xor
or
add
xchg
mov
pop
adc
shll
jp
cmp
jmp
les
jmp
add
mov
mov
mov
push
or
enter
push
fs
in
jl
lcall
xchg
pop
xchg
push
mov
jge
daa
stc
outsb
or
mov
cmp
iret
clc
rorb
bound
mov
add
pop
adc
xor
add
lahf
or
xchg
mov
adc
add
mov
sub
addb
jbe
mov
add
fcmovnb
add
adc
sbb
or
cli
test
jecxz
in
jo
add
les
and
jns
jmp
adc
fidivrl
add
aad
jge
dec
sar
pop
adc
rcl
sbb
mov
add
loopne
addr16
das
loop
int3
xor
hlt
sahf
pop
adc
and
push
mov
std
gs
add
popf
out
xchg
add
int
add
clc
fstpl
std
xor
ja
mov
add
mov
rolb
xor
add
pop
movsb
popf
lcall
je
xorl
stos
cmp
divl
and
jbe
jae
cltd
or
clc
xor
fdivrl
lods
int3
pusha
add
les
loope
out
stos
loop
add
cwtl
xor
xor
jns
dec
add
add
dec
add
mov
adc
add
jg
pop
lret
negl
jmp
mov
cmpsl
loope
xor
imul
movb
dec
daa
and
call
xchg
or
ja
dec
cs
testb
dec
mov
add
fadd
add
jecxz
and
sub
mov
inc
add
inc
or
sub
jno
jb
jecxz
mov
mov
sti
mov
jecxz
fwait
addb
and
lret
imul
sub
incb
inc
shll
cmp
xchg
gs
xor
fucom
cwtl
jns
repnz
test
push
negl
mov
fcmovnu
dec
div
mov
subl
add
push
lret
lods
cmp
dec
mov
jb
xchg
pop
in
aad
movq
xchg
inc
add
add
add
or
mov
add
push
push
push
stos
es
int3
inc
xor
add
mov
in
and
mov
xor
test
in
pause
push
sahf
jne
nop
lock
pop
dec
fs
mov
incl
add
imul
shlb
sbb
jns
out
mov
repz
inc
add
std
mov
add
xor
icebp
cmc
inc
add
icebp
add
add
lock
mov
mov
push
sub
sbb
idiv
hlt
ja
daa
ja
push
xchg
pop
push
test
vmread
or
cmp
jge
std
insb
pushf
mov
sahf
mov
dec
xchg
dec
mov
cmpsb
pop
ds
add
mov
outsb
sti
cmpsb
cmpsb
pop
pminsw
dec
scas
out
out
add
lret
jno
mov
mov
xchg
jmp
fcompl
or
fbld
es
add
mov
sub
js
inc
add
mov
xor
add
dec
les
pop
addb
mov
sub
mov
add
jge
add
add
xchg
mov
dec
mov
inc
add
jecxz
push
push
inc
push
sub
rolb
movb
bound
xor
cmpsb
jb
pop
imulb
inc
sub
mov
fstl
pop
inc
das
js
dec
and
pop
cwtl
pop
stc
and
test
movl
aas
jge
mov
lds
add
out
divb
add
bound
int3
mov
and
insb
mov
sub
dec
and
imul
popl
insb
bound
fstps
rcll
xchg
or
jmp
out
cmpsb
nop
sbb
subl
ret
loop
jl
xchg
sbb
insb
cmp
pop
mov
inc
ficoml
push
mov
inc
stos
mov
xor
mov
jmp
fdivl
add
sub
adc
add
int3
pop
dec
mov
test
inc
add
popf
jnp
xor
jb
jb
scas
insb
mov
jb
add
test
std
jne
je
bnd
mov
leave
hlt
jmp
and
pop
dec
jo
xchg
popa
aam
add
ret
mov
push
push
in
jp
mov
out
outsl
arpl
sub
in
mov
xor
repz
int
stos
jne
cmpsl
xchg
jle
xor
jmp
out
mov
aaa
addb
pop
jge
fistps
aam
addb
push
in
pop
sub
add
mov
aas
sub
mov
xor
dec
fdivrs
imul
pop
sbbl
add
insl
aad
and
xchg
jmp
adc
subl
dec
ficomps
mov
sahf
mov
cmp
add
insl
clc
sub
jns
xchg
xor
and
cli
mov
push
enter
into
cltd
jle
cmp
mov
test
add
stos
pop
add
pop
in
lcall
add
add
add
mov
lods
stos
sub
xlat
dec
insb
cli
inc
inc
add
pop
sbb
cmp
mov
je
int3
pushf
lahf
ja
push
test
cltd
jno
add
mov
mov
scas
jae
mov
xor
xchg
xor
add
pop
mov
stos
add
push
adc
cwtl
sub
daa
fidivrl
lcall
pop
lds
xchg
sub
lds
push
mov
outsl
mov
sub
addr16
add
pop
addr16
pmulhw
adc
and
fnstenv
mov
jl
and
add
push
aam
cmpsb
add
arpl
sarb
mov
scas
dec
sub
xchg
aaa
rcl
popa
addr16
mov
scas
or
imul
pop
cltd
dec
pusha
add
push
mov
add
adc
push
add
add
push
add
jne
sahf
imul
fadds
jns
int
mov
jo
inc
sbb
add
int
cli
jae
push
inc
push
inc
bound
les
nop
popa
aaa
mov
jae
jge
xchg
dec
mov
add
sbb
xchg
push
and
or
push
clc
stc
cld
daa
jmp
jnp
sbb
jg
mov
adc
popf
or
jle
inc
enter
push
adc
rcr
in
jmp
nop
popa
push
adc
push
cmp
call
pop
loope
sub
and
cmp
in
mov
ret
pop
mov
push
scas
cmp
sbb
inc
and
cltd
jmp
addb
ret
mov
and
dec
add
dec
popf
sbb
imul
daa
pop
cmp
add
int
sub
test
xchg
ficomps
imul
nop
mov
mov
enter
mov
aaa
mov
cmp
add
sbb
popa
mov
jnp
pop
pop
imul
jnp
jnp
xchg
ficoml
cli
cs
das
pslld
sti
cmpsb
push
les
xlat
dec
push
icebp
pop
mov
stos
addb
bound
and
fnstenv
test
mov
xchg
test
lret
cmp
incb
jmp
fnsave
adc
add
addb
test
adc
and
sub
stos
pop
in
dec
enter
sbb
mov
ret
in
mov
sbb
repz
jo
xchg
mov
mov
add
add
es
loopne
push
push
push
and
das
ljmp
into
loopne
testb
mov
dec
dec
aas
pop
mov
add
xor
ljmp
add
adc
int
add
xor
mov
fcompl
nopl
aad
mov
data16
int3
shl
imul
add
push
jo
lds
xchg
test
push
add
lock
sbb
cltd
in
mov
add
js
jle
add
add
jo
int
mov
xor
xchg
xor
fwait
sub
pop
xor
pop
push
add
add
mov
rcrl
xor
and
add
mov
test
rorl
add
pop
pop
sub
divb
sbb
aad
cli
and
inc
add
add
sub
jns
push
aas
add
add
in
and
rorb
push
ljmp
push
adc
outsb
arpl
sar
cmp
push
loope
cmpsb
iret
push
xchg
mov
add
bound
repnz
sbb
rorb
rolb
shrb
ret
sub
dec
int
leave
fistpll
jmp
lret
ret
mov
pop
sub
movsb
xchg
nop
xchg
test
hlt
sub
sub
int
add
mov
inc
add
movsl
movsl
je
sbb
mov
pop
mov
loope
jge
add
xchg
push
mov
or
jbe
pusha
add
daa
push
movsb
fadd
add
mov
pop
jg
gs
test
pop
xlat
sbb
mov
sub
adc
filds
movsl
mov
xor
sbb
push
gs
add
and
movb
loop
sub
mov
int
loope
pop
aas
and
pop
cld
in
or
jns
daa
aam
fstpt
mov
inc
lret
repz
mov
cmp
stc
rcrb
mov
shl
test
data16
fstl
daa
in
mov
push
jb
jmp
stos
adc
push
lods
cmp
and
dec
pop
lea
add
add
std
fldl
and
adc
fldcw
repnz
fadds
pop
clc
fisttps
mov
sub
sbb
sub
insb
mov
movsl
push
xchg
aad
shr
cltd
push
mov
lahf
loope
icebp
xchg
dec
push
fldt
stos
mov
push
andl
push
sarb
int
pop
sub
jp
cmp
int
dec
mov
scas
cmp
xchg
add
sarl
decl
push
add
dec
arpl
rcr
test
cmc
jnp
stos
inc
jb
add
inc
loop
sbb
or
adc
inc
xchg
dec
xchg
mov
jnp
pop
lcall
dec
mov
dec
lock
cmp
dec
es
inc
clc
test
add
sub
push
add
call
push
and
xor
inc
add
jae
sub
stc
xor
lcall
add
movb
push
push
in
imul
sbb
push
push
sub
xor
jmp
inc
add
adc
push
xchg
add
mov
negb
addr16
out
pop
pop
xor
add
push
icebp
cmp
mov
ja
and
xchg
jne
popa
sub
mov
pop
mov
out
lea
jbe
jnp
in
sbb
push
dec
movsl
xchg
mov
test
fcmove
and
fimull
divl
nop
and
push
rol
or
jns
call
pop
mov
ret
sar
pop
or
mov
sbb
stos
pop
mov
cmc
lock
xchg
in
xor
repnz
lods
adc
nop
inc
pop
or
mov
scas
jmp
mov
xlat
movsb
test
adc
incb
es
stos
insb
adcl
adc
pavgw
add
scas
jg
ss
aam
mov
fstpt
jne
std
icebp
cmp
jne
hlt
fwait
push
mov
inc
cmp
cmp
flds
test
jge
aam
pop
fwait
popl
lods
cmpsb
shll
add
inc
iret
fwait
pop
movsl
rclb
xor
repz
add
enter
fisttpll
add
xchg
xor
and
out
int3
jnp
outsl
cmp
add
lcall
sub
mov
inc
add
out
lea
push
xchg
nop
jo
aaa
inc
add
mov
adc
pop
addr16
push
test
inc
jne
inc
mov
jmp
cltd
orl
daa
lea
add
addl
adc
inc
add
cli
mov
das
mov
jnp
adc
jne
add
into
xchg
mov
adc
sub
in
in
iret
xor
xor
cmp
pop
sbb
mov
ljmp
imull
jl
insl
addb
ss
sub
fisubs
insl
add
arpl
adcl
xchg
fdivrp
and
lds
mov
rcrl
add
je
or
mov
sub
pop
xor
push
sub
pop
adc
or
scas
mov
stc
sub
adc
jl
inc
pop
popf
shrb
add
xor
add
cli
sub
add
das
test
es
cmp
dec
enter
enter
in
int
jg
adc
loope
ljmp
das
jge
push
jge
cli
sbb
stos
in
add
xor
pop
mov
jge
push
mov
in
xor
add
xchg
test
pop
stc
pop
pop
sbb
or
sub
cmp
lds
adc
push
adc
push
sub
sti
ja
shll
pop
inc
add
repz
pop
lods
test
mov
dec
xchg
lahf
imul
jo,pn
jns
in
xchg
inc
add
cmp
jb
enter
fists
sub
cmc
xchg
jae
imul
sbb
pop
mov
add
sti
xchg
sub
or
in
mov
add
fimull
addb
mov
jb
mov
and
scas
push
jae
pop
xor
lret
jp
mov
add
pop
daa
ljmp
or
mov
addb
int3
dec
enter
jo
cmp
mov
fcomi
jp
insw
inc
add
add
fwait
pop
icebp
xchg
vmwrite
add
sub
push
inc
seta
outsl
cmpsb
in
call
inc
add
pop
cmp
and
jge
decl
lock
and
popl
add
jecxz
fs
ret
inc
or
dec
mov
loop
test
jl
incb
test
das
sub
add
cltd
cmp
aad
pop
sub
out
jmp
inc
add
pop
shl
out
push
dec
xor
dec
movsb
xor
lret
xchg
sub
pushf
mov
add
loop
push
mov
fucom
and
mov
outsb
dec
test
add
xchg
fidivrl
sbb
outsl
lods
hlt
aam
cwtl
add
cmpsl
add
aad
movb
repz
lcall
inc
add
cmpsb
pop
ljmp
adc
cmp
jge
add
addr16
jbe
popf
aaa
lahf
jp
notl
add
mov
jp
cs
add
sti
inc
add
add
add
dec
sub
mov
add
stos
mov
adc
aas
jge
pop
mov
pop
mov
rclb
add
push
mov
add
insb
cli
jbe
adc
mov
sti
cltd
das
nop
rcrb
jg
mov
mov
ret
add
stos
cmp
sub
in
jp
jp
or
mov
dec
hlt
or
test
jno
add
aas
cmc
lock
outsl
iret
fs
mov
or
mov
push
cmp
popf
leave
inc
add
sbb
int
add
test
lods
stc
hlt
out
cmpsl
jg
xlat
repz
jl
imul
add
fwait
sub
jo
fdivrl
mov
imul
repnz
out
test
mov
and
xor
cmp
add
inc
inc
add
add
je
dec
sbbl
xchg
scas
mov
pop
test
notb
mov
aas
mov
mov
mov
xor
cmp
and
push
ds
push
pop
addb
pop
pop
pop
pusha
add
in
push
mov
imul
loopne
xchg
and
add
adc
clc
in
pop
repnz
and
aad
adc
mov
cmp
pop
pop
sbb
mov
mov
in
cltd
addr16
inc
add
lods
cmp
cmc
imul
adc
jnp
divb
das
mov
mov
add
repnz
mov
dec
mov
push
mov
test
pop
add
jl
out
and
mov
jae
dec
shl
cli
adc
jl
mov
xor
xlat
jmp
lea
aas
call
push
mov
mov
in
lods
mull
add
mulb
xchg
lret
cmp
xchg
push
adc
dec
inc
add
mov
push
cmp
jns
nop
outsb
cmp
in
popf
and
mov
rclb
xchg
bound
lahf
ljmp
cmp
pop
sub
mov
stos
pop
mov
inc
mov
add
jbe
mov
and
xchg
jno
xchg
add
popf
sbb
pop
jmp
or
pop
push
lahf
divb
fdivs
hlt
push
es
add
pop
data16
scas
shl
out
cmpsb
dec
test
fmul
xor
addl
xor
scas
sbb
dec
mov
ja
jne
adc
das
sbb
add
mov
daa
lods
sub
sub
dec
enter
sub
test
sbb
fsubrp
adc
add
dec
lods
xchg
mov
push
add
mov
push
lods
dec
inc
add
mov
ret
test
outsl
mov
pop
add
xchg
rcrb
ljmp
cwtl
push
scas
lods
push
push
mov
and
int3
icebp
shrb
adc
addr16
sbb
out
jae
mov
push
add
hlt
cmp
les
jle
add
or
mov
mov
jl
mov
fisubl
mov
push
mov
in
ror
cmpsl
push
test
xor
add
add
sbb
jge
fcmovu
or
push
mov
das
imul
sub
add
pop
or
xchg
dec
pop
fimull
ret
mov
add
inc
add
xchg
cmp
in
in
push
fbld
mov
fistpl
cli
addl
pushf
test
mov
dec
xchg
js
fdivl
add
test
in
imul
out
adc
jae
sub
push
xchg
add
lret
xor
imul
xchg
dec
jmp
jo
mov
data16
add
mov
push
lahf
push
mov
sbb
mov
daa
and
movb
xor
ja,pt
xchg
mov
push
les
add
push
cmp
add
mov
sbb
jecxz
inc
add
into
push
mov
out
xor
or
jno
mov
arpl
lcall
fwait
push
ret
icebp
test
xchg
jp
push
add
out
enter
cmp
dec
and
dec
xor
adc
addr16
sbb
in
adc
mov
add
lea
aaa
and
ljmp
movsl
push
repz
mov
lea
or
and
lock
mov
pop
shlb
dec
mov
add
addr16
jle
fsubl
xcrypt-ecb
cmpsl
dec
call
push
loop
incl
pusha
add
lods
mov
fsubs
test
shll
dec
dec
cmp
loopne
xchg
cmpsl
mov
stos
or
pop
pop
cmp
add
mov
add
daa
popa
movsl
fisubrs
bnd
into
lods
jmp
cltd
jb,pt
mov
repz
xchg
jmp
add
movb
add
dec
mov
ss
add
lods
cs
mov
arpl
jbe
push
or
pop
shll
add
push
jle
rolb
stos
inc
cwtl
stos
push
jns
in
xor
fisttpll
sbb
test
lret
xchg
lret
or
add
nop
fnstsw
xor
add
sub
mov
xor
mov
jle
in
add
push
dec
push
aad
mov
fadds
fstl
leave
add
add
jbe
or
dec
in
cmpsb
cmc
out
shlb
jl
imul
pop
clc
loope
lcall
repz
repz
clc
sbb
rclb
pusha
add
add
add
outsb
adc
lds
xchg
add
add
jecxz
popf
xchg
test
decl
pop
inc
add
pusha
add
push
add
and
hlt
ret
sub
cmp
cmpsb
add
adc
jo
and
imul
out
aad
add
hlt
adc
adc
ret
xlat
jnp
jle
mov
adc
decb
cmpsb
jge
int
inc
lods
cmp
or
and
add
xlat
push
insl
adc
sub
xor
inc
repz
add
sbb
mov
lock
orl
das
pop
ss
in
adc
cmp
push
test
daa
lcall
add
sbb
repz
loope
jne
xchg
jae
int
mov
int
xchg
arpl
test
out
pop
movb
xor
dec
push
lcall
jp
add
xlat
mov
push
or
adc
icebp
mov
pop
adc
add
add
jmp
daa
test
xor
mov
scas
xchg
test
cmpl
cmc
imul
and
sti
sub
arpl
jns
mov
addb
es
inc
or
ljmp
in
sarb
inc
add
push
je
fwait
outsb
std
mov
les
jb
ja
stos
addr16
daa
ret
xchg
call
mov
mov
and
gs
pop
jnp
xor
and
push
cmpsb
mov
xchg
mov
add
push
dec
push
in
xor
daa
lcall
xchg
xor
inc
add
jecxz
shrl
insl
in
add
outsl
ja
sbb
movsl
sbb
adc
clc
push
mov
shr
mov
lea
lcall
imul
rcl
sbb
dec
push
cmp
push
enter
aas
addb
inc
fsubrs
jmp
cld
pusha
add
fs
pop
cwtl
cmpsb
es
fidivrl
cwtl
repz
lcall
sbb
pop
in
sahf
insl
jb
mov
dec
fists
mov
fs
mov
mov
push
cwtl
hlt
mov
add
sbb
jl
and
cmp
repnz
add
add
cmpsl
orl
out
sub
and
jno
inc
add
movb
sbb
pop
in
lret
push
add
sbb
sub
mov
xchg
and
das
sub
cmp
inc
mov
xor
mov
cmpsl
popf
test
cmp
arpl
pinsrw
and
pop
loopne,pt
insb
int3
insl
jl,pn
and
mov
bound
inc
dec
sti
nop
arpl
js
or
add
addb
scas
das
add
leave
jnp
and
sti
out
mov
scas
mov
jo
cmc
xchg
add
daa
sbb
popa
mov
int
mov
movsl
jae
xor
pop
les
pop
mov
rolb
ja
rolb
mov
or
add
test
mov
add
repnz
inc
add
mov
dec
push
add
mov
pop
lret
add
ret
mov
mov
add
mov
outsl
xchg
mov
add
addb
pop
xchg
incb
repz
mov
push
bound
rcrl
movsb
mov
fadds
xchg
inc
add
outsl
movb
lock
lods
xor
out
scas
mov
jo
dec
sti
push
cmp
xchg
pop
sbb
arpl
jmp
push
xlat
mov
cmpsb
xchg
jns
jmp
gs
ja
fdivrl
add
add
dec
cmpsl
scas
mov
mov
leave
outsb
adc
lret
jb
xor
jbe
lods
sbb
ret
add
mov
cltd
mov
mov
add
and
xor
push
lds
pop
pop
jno
add
fsub
xor
pop
sub
sub
insl
sbb
push
add
xchg
add
sub
add
mov
add
add
pop
jg
or
adc
cltd
scas
jae
mov
push
fs
push
jnp
decb
mov
stos
jg
jb
inc
adc
fidivrs
cld
adc
lret
jns
ja
test
mov
fnstenv
in
lret
sbb
add
jecxz
lret
sub
movb
jl
add
dec
cmp
scas
push
jns
xchg
adc
add
mov
pop
cmp
lock
mov
jns
adc
adc
mov
int
push
or
and
aad
dec
sarl
jo
mov
ret
pop
mov
out
jmp
add
clc
pop
cmpsb
lds
mov
dec
jae
data16
push
adc
das
pop
xor
and
jl
ss
jg
fnsave
ror
mov
imul
xlat
les
imul
fisttps
pop
mov
rorb
xor
mov
std
or
lret
out
sti
pop
inc
add
mov
movb
js
mov
lahf
or
fadds
dec
into
mov
and
inc
add
out
sbb
push
in
test
lahf
stc
sub
je
pop
mov
pop
das
xchg
bound
add
push
daa
and
adc
lods
mov
leave
inc
add
pushf
das
outsb
cmc
std
pop
cmpsl
adc
mov
add
add
push
jmp
cmpsl
xor
sbb
cld
dec
je
push
jmp
add
mov
and
rolb
inc
aas
xchg
xor
add
fs
add
bound
xlat
rolb
push
imul
mov
les
das
lcall
out
push
pop
ror
notb
xchg
sbb
and
cwtl
in
sub
add
add
lret
xchg
or
add
sub
adc
cmp
jbe
out
cmp
pop
das
adc
test
mov
movb
into
iret
ret
push
adc
movsb
mov
add
jge
loopne
aad
dec
notb
and
fiaddl
cld
movb
add
ret
outsb
adc
push
stos
adc
cmp
sbb
add
push
add
adc
int
and
pop
cli
aas
cli
push
addb
aad
ljmp
push
add
jns
xor
pusha
add
mov
out
jmp
inc
add
mov
inc
jne
dec
in
pop
out
or
mov
test
fsubr
dec
je
pop
xchg
jno
fisubs
mov
fs
fwait
out
in
sbb
jbe
gs
add
outsl
ss
mov
xor
cmp
add
sub
or
cmp
jge
inc
add
sahf
out
repnz
inc
lahf
imul
dec
push
and
mov
es
jo
out
sti
jmp
rolb
es
leave
lcall
daa
xchg
push
push
sub
xchg
xchg
dec
aas
call
mov
push
xor
arpl
xchg
je
cltd
mov
sub
ljmp
add
aas
mov
and
out
push
add
xor
inc
cltd
inc
add
mov
cli
sahf
sbb
jo
pcmpeqw
push
sbb
aaa
int3
pop
testl
push
or
dec
ljmp
sahf
sub
pop
xchg
sbb
hlt
and
add
js
and
push
add
sub
in
sbb
xor
outsb
push
clc
popa
out
inc
in
rcl
stos
dec
fstpt
jg
jge
inc
aad
push
pop
in
rcrl
xchg
stos
mov
mov
adc
shlb
ss
sbb
cltd
xor
jnp
cmp
push
loopne
add
addl
add
outsl
jg
xchg
ficoms
lods
movb
popa
lret
add
sub
movsb
incl
sar
pop
into
or
mov
xchg
sbb
jbe
xor
mov
sub
mov
cmc
out
outsb
push
jo
inc
add
pand
xchg
lock
add
cmp
mov
out
movb
int
imul
sbb
les
inc
mov
scas
hlt
adc
pop
std
xchg
dec
imul
add
inc
loop
fsub
repz
adc
ficompl
outsb
xor
inc
add
and
mov
jmp
sbb
inc
test
xchg
testl
clc
pop
pop
mov
jne
jecxz
arpl
fs
gs
or
pop
imul
add
or
fnstsw
mov
sub
lahf
or
mov
xor
call
cs
fidivs
test
enter
std
jnp
inc
add
rorb
jo
dec
sbb
add
and
mov
int
push
add
dec
mov
push
add
leave
repz
inc
add
insl
cmp
add
test
ja
arpl
add
ret
pop
mov
nop
xchg
inc
in
sbb
cli
push
rorl
sbb
stos
and
xchg
rcrl
and
flds
push
xor
daa
push
xchg
xor
add
add
and
dec
xchg
leave
cmpsl
dec
int
push
push
scas
mov
ror
cld
or
fists
mov
addb
cmp
inc
add
mov
sarl
negl
inc
add
mov
into
inc
add
cmp
insl
xor
dec
jae
jg
mov
das
daa
cmp
sub
pop
sub
cmp
jae
fstpt
add
pop
and
jecxz
mov
add
sub
cmp
and
outsb
pop
mov
sbb
ret
mov
outsl
stc
test
add
out
or
ds
adc
xchg
icebp
pop
pop
xor
je
add
pusha
add
cmp
nop
lcall
sbb
or
add
xchg
data16
in
add
mov
sub
test
lods
mov
test
bound
out
and
xlat
xchg
xchg
jmp
jo
std
lods
cmp
jno
push
and
lret
push
sahf
fs
dec
outsb
test
mov
adc
sbb
insl
jg
out
sbb
dec
add
sbb
sub
mov
mov
xchg
insl
bound
jnp
xlat
xor
test
xor
or
das
idivl
fdivrs
arpl
xchg
or
gs
add
push
or
add
add
add
cmp
cmp
jp
insb
cmpsl
popa
pop
cs
push
mov
xchg
mov
push
repz
test
push
sbb
add
jb
mov
push
repnz
idivl
sub
add
addb
mov
ja
dec
adc
adc
pop
adc
movb
add
dec
add
in
and
mov
jns
sahf
xor
cmc
int3
jne
mov
rolb
mov
xchg
mov
pop
movsl
adc
nop
adc
pop
push
add
pop
out
inc
out
dec
mov
add
adc
movq
mov
popa
outsl
or
and
mov
pop
mov
ret
lods
sbb
add
mov
adc
push
mov
jmp
sbb
bound
push
or
ficomps
sub
aam
int3
insb
ror
sti
cwtl
scas
xor
mov
dec
hlt
shl
mov
imul
add
push
rolb
leave
mov
mov
xchg
sbb
fcomp
jge
mov
mov
iret
xor
rcrl
or
in
pop
dec
xchg
inc
add
push
mov
xchg
pop
addr16
mov
movsb
call
outsl
mov
and
add
xor
cmpsb
fistpl
mov
dec
popf
pop
fsts
add
daa
sub
mov
popa
in
add
and
dec
cmpsb
int
add
roll
sub
lret
adc
add
add
or
movb
jmp
add
sti
test
loope
repz
xchg
or
leave
js
fcompl
push
sbb
sub
and
lcall
dec
push
sti
in
mov
out
mov
mov
dec
cmp
in
ret
int
in
loope
scas
pushf
jmp
scas
fsubs
xor
std
out
nop
mov
call
xchg
idivb
or
add
aam
repnz
daa
cwtl
xor
dec
ss
jae
icebp
cmc
scas
fcmovne
inc
add
bound
stos
pop
frstor
cld
mov
pushf
rcrb
adc
lock
xchg
and
inc
add
fsts
setge
pop
adc
icebp
fistpll
jne
add
int3
mov
mov
les
dec
add
lret
stos
jg
in
lcall
addb
add
pop
aam
add
inc
xor
jp
xchg
pop
int3
rorb
out
sbb
add
ljmp
sub
inc
add
jecxz
add
adc
push
pop
mov
outsb
shlb
fldt
inc
dec
fimull
cld
push
mov
jbe
inc
add
add
enter
jmp
add
fs
xchg
sub
movb
aam
jmp
sub
add
std
imul
cmp
loopne
lret
out
mov
mov
pop
pop
pop
dec
pop
sbb
push
movb
aas
pop
mov
add
add
testl
inc
add
cmp
fdivl
push
fwait
dec
xchg
mov
push
scas
test
shrl
das
test
pop
ljmp
jb
sbb
clts
add
shlb
xchg
xchg
add
mov
dec
cltd
outsb
mov
push
fwait
cmp
and
loope
out
pop
adc
xchg
mov
cld
mov
mov
ret
push
xchg
addr16
es
sub
dec
mov
jmp
mov
jle
daa
push
scas
stc
xchg
add
add
pop
jge
mov
repnz
cmc
out
stos
and
and
cwtl
push
shrl
insl
addr16
rolb
xor
movsl
data16
enter
mov
loopne
enter
stc
loop
push
add
lea
imul
xchg
mov
xchg
sub
adc
pop
dec
loopne
incb
or
jp
leave
aaa
addr16
mov
lods
in
pop
testb
jo
lahf
hlt
cmp
nop
cmpsb
in
adc
mov
fs
add
xchg
adc
push
or
loopne
push
in
mov
add
jmp
addr16
or
pop
jmp
outsl
loopne
test
dec
mov
lret
and
sahf
adc
cmp
sbb
ja
ret
add
test
std
loopne
add
mov
movb
and
int
dec
mov
into
sub
sub
sahf
add
in
xchg
push
and
sahf
icebp
lods
sub
cmpsl
jp
inc
mov
jmp
or
sbb
nop
mov
or
push
cmpsb
xchg
ficompl
movsl
test
fwait
sub
mov
or
mov
filds
add
xchg
fdivrl
call
fidivrl
jmp
test
adc
add
jle
sub
les
ret
addl
ret
adc
jle
cmpsb
mov
aad
sub
sbb
std
xlat
popa
cmp
sbb
mov
loope,pn
dec
mov
leave
mov
bound
pop
xchg
aad
push
or
les
add
xchg
xchg
je
or
add
add
popa
add
sub
xor
cld
inc
add
dec
pop
mov
movb
imul
jne
dec
mov
add
ret
nop
movb
stos
dec
in
add
or
cmp
xchg
pop
data16
inc
add
ret
repz
add
cmp
test
fidivs
add
mov
add
push
scas
inc
aaa
or
sub
fisubrl
sbb
clc
cli
push
cwtl
mov
loop
leave
pop
sbb
orl
imul
les
xchg
or
sbb
xor
inc
add
lods
stos
push
cmp
scas
pop
loope
jbe
or
aad
adc
mov
push
addr16
icebp
mov
cmp
rolb
add
xchg
addb
movsb
xor
div
cwtl
stos
hlt
mov
add
mov
jmp
pop
cmp
loope
ret
pop
pushf
inc
add
dec
or
cmp
add
clc
pop
mul
fisttpll
and
cmpl
lcall
add
jnp
mov
call
clc
add
and
jns
pop
xchg
mov
imul
sti
sahf
dec
xor
cld
lret
addb
addb
pop
add
arpl
add
je
mov
xchg
into
mov
dec
and
cmp
xchg
jle
xchg
push
dec
in
pop
jne
jne
adc
xor
pop
add
test
push
cmp
pop
ljmp
ja
ds
fldenv
fucomi
ficomps
xchg
cmp
mov
add
jo
pop
cmp
stos
mov
test
pop
pop
inc
iret
mov
ljmp
imul
in
test
pop
jmp
and
movsl
jb
push
imul
nop
mov
call
xchg
sbb
sub
push
xchg
xchg
ret
repz
cmp
shll
add
add
adc
popa
outsb
jmp
imul
and
scas
call
xor
daa
cmp
cmp
inc
add
aam
test
stos
xor
mov
pop
cmp
mov
push
dec
aam
dec
adc
mov
add
stc
jb
xchg
movb
test
mov
insl
pop
pop
inc
add
xchg
fstps
sahf
add
jno
dec
mov
call
mov
loope
push
ja
loope
pop
add
fistps
dec
xchg
adc
pop
dec
xchg
lock
adc
mov
aas
mov
pop
repnz
add
mov
mov
movsl
pop
mov
cltd
jns
movb
movsb
lock
jo
scas
insl
or
lret
nop
std
test
outsl
sub
out
add
ds
add
jp
fwait
lret
mov
mov
ljmp
add
aam
loopne
fistl
cmp
out
out
pusha
add
cmc
repnz
filds
add
int3
and
jge
test
mov
int
in
push
inc
imul
adc
cmp
lods
jae
add
stos
xor
inc
add
xchg
ss
add
xchg
addb
sbb
enter
dec
aad
call
push
int3
in
xchg
loope
push
jns
not
and
push
jmp
sti
mov
bound
lods
or
push
pusha
add
dec
pop
add
pop
jo
add
roll
dec
fs
add
fwait
push
add
into
lcall
xor
addb
add
cmp
lret
mov
out
clc
lret
popa
xor
iret
and
dec
cli
mov
mov
jp
dec
pop
xchg
dec
les
je
xor
mov
cwtl
stos
mov
or
sbb
mov
xor
push
inc
or
and
test
arpl
test
sahf
or
add
mov
cmp
and
mov
xchg
pop
mov
add
add
fimull
or
rorb
loop
add
jbe
les
cs
jnp
test
mov
adc
push
in
add
popf
jae
add
outsl
fldenv
adc
std
clc
jo
add
fldl
inc
add
push
mov
mov
bound
les
insb
mov
movsl
xor
pop
popl
cwtl
mov
or
movsl
adc
add
cltd
add
jmp
lods
fwait
push
and
xor
inc
add
scas
rolb
leave
add
sahf
cmpsb
scas
les
xlat
loopne
test
dec
sahf
or
xchg
aam
mov
inc
add
push
fs
add
jecxz
cmpsb
inc
jge
ret
cmpsb
xchg
jp
rorl
sar
cmp
mov
mov
push
cltd
icebp
xor
sub
adc
loope
pusha
add
cltd
es
inc
movsl
adc
jae
mov
loope
aaa
mov
movsl
mov
pop
dec
cmp
push
add
cld
pusha
add
ljmp
mov
movsb
cmp
add
xchg
das
sti
xor
testb
es
xchg
mov
pop
pop
mov
lods
sub
and
adc
cld
fwait
cmpsb
scas
out
add
push
sahf
call
or
mov
mov
add
dec
ret
cmp
add
ljmp
add
jae
mov
add
jl
xor
sbb
js
roll
add
add
ljmp
rcll
insb
inc
add
cmc
cmpsb
mov
sub
and
sbb
lock
and
jmp
sbb
stc
into
fs
or
call
jb
sbb
pop
pop
stc
int
fstl
sub
mov
sub
cld
fdivrp
sub
lcall
leave
es
bound
sub
jge
cltd
stos
xor
mov
insl
and
addb
lcall
jns
scas
jne
jns
addb
pop
into
outsl
push
dec
in
sar
mov
mov
adc
stos
jo
mov
add
add
jb
add
movsl
cmp
test
test
icebp
call
ret
iret
push
push
leave
fdivs
out
gs
jl
ret
add
mov
fsub
jno
push
test
xchg
push
add
add
xor
iret
dec
inc
add
call
ja
add
aas
mul
push
into
xor
sbb
xchg
or
out
add
xchg
mov
leave
inc
add
ret
add
ffree
xor
lock
cmp
xchg
rolb
push
pop
bound
pop
js
add
jbe
cmp
add
jmp
jbe
cli
inc
fwait
or
pusha
add
dec
mov
stc
out
jno
mov
es
xor
inc
cld
ljmp
xchg
inc
jmp
fdivp
ret
imul
ljmp
mov
in
fdivp
cmp
lahf
mov
sub
xchg
inc
add
rolb
in
mov
pop
fwait
xchg
je
jg
jge
ljmp
jae
stc
cmpsl
in
ljmp
mov
xchg
mov
pop
sub
insb
scas
test
add
fcmovb
add
xchg
nop
cmpsb
adc
outsb
mov
jmp
inc
add
xchg
push
and
sub
add
and
xor
mov
addb
push
mov
fidivrl
adc
xchg
sub
cmpsl
out
aas
icebp
cld
fisttpll
stos
sbb
dec
inc
push
movsb
inc
mov
jb
xchg
inc
add
movsl
aam
jl
pop
jb
insl
inc
lods
sub
icebp
dec
rol
pop
or
mov
and
movb
dec
test
mov
jmp
mov
add
pop
push
and
popf
or
pop
call
xor
scas
adc
mov
adc
push
push
push
ret
clc
dec
insl
in
sub
sub
push
roll
xchg
movb
jle
add
inc
add
loopne
add
or
or
jl
add
negb
sub
add
aas
aas
movsl
movb
jns
mov
hlt
sbb
push
icebp
adc
add
popf
cmp
repnz
ds
aad
cld
sbb
xlat
jp
push
adc
add
sub
into
cmpsb
stos
pusha
add
push
imul
add
cltd
sti
mov
jno
cmp
xchg
jp
popf
dec
repnz
add
add
hlt
gs
cmp
test
push
jge
adc
adc
or
add
addb
jecxz
cmpsb
mov
push
cwtl
dec
cmpl
jnp
dec
stc
fwait
mov
rolb
test
sbb
fidivl
xor
icebp
jb
push
xchg
aas
fimuls
xchg
xchg
add
movb
fdivs
test
add
add
add
lea
mov
bnd
fwait
arpl
fs
test
out
adc
leave
xor
stos
push
ljmp
push
aam
jge
test
js
leave
push
jge
inc
add
leave
sbb
cmpsl
clc
movsb
jge
pop
push
mov
push
xchg
adc
add
add
xor
cmp
cmp
outsl
cli
mov
sahf
fwait
ss
add
cld
and
add
and
or
add
fisubs
jp
pop
dec
shll
popf
inc
push
int
out
inc
add
push
or
out
pop
or
push
movb
das
andl
add
xchg
mov
add
lds
add
int3
push
ficompl
xor
lahf
ds
mov
js
cli
aad
shrl
or
and
mov
adc
sarb
add
add
rolb
iret
les
jbe
out
or
cmpsl
in
fs
or
xchg
push
sub
loope
mov
sub
sbb
sgdtl
and
daa
jno
cmpsl
outsb
jnp
pop
les
aam
pop
mov
add
jl
in
mov
cltd
cli
add
out
mov
mov
xor
hlt
decb
mov
rolb
test
cld
fisttps
dec
jg
sub
leave
out
jl
jno
clc
mov
cli
fistpll
inc
add
mov
add
aaa
ljmp
arpl
imul
fs
lret
pop
fs
clc
loope
insl
pop
aaa
mov
xchg
imul
out
test
jbe
mov
gs
dec
jp
stc
adc
push
adc
bound
push
mov
cmpsl
push
dec
add
jecxz
add
xchg
xor
cmpsb
xchg
mov
shl
fiadds
outsl
fnstcw
mov
in
test
shll
sub
popa
jno
pop
jne
sbb
xchg
dec
push
loopne
add
idiv
shll
jmp
add
sub
mov
movb
inc
add
aas
mov
push
jmp
fbstp
fisubl
clc
loop
in
dec
nop
mov
cmp
jns
cmp
jmp
jg
in
mov
pop
sbb
jg
pop
aad
inc
fcomps
lahf
adc
and
push
nop
ja
add
jbe
aad
and
ret
pop
cmp
std
out
cmp
xchg
in
enter
aaa
lret
sub
and
pop
pop
inc
mov
test
add
stos
push
xchg
pop
cmpsl
and
and
ds
jmp
in
pop
lret
cld
outsb
mov
arpl
in
std
outsb
cmp
push
inc
add
dec
xchg
mov
xor
push
push
xchg
outsl
mov
xchg
add
les
cmp
shrl
jo
int
mull
xchg
mov
cmp
or
lret
clc
imul
sub
push
and
lahf
sub
adc
push
dec
dec
outsl
push
or
cmp
cmp
popa
mov
jp
rolb
push
rolb
clc
xchg
jmp
mov
add
dec
push
ds
inc
add
out
pop
out
mov
lret
xchg
movsl
xlat
inc
add
in
cmpsl
pop
adc
pop
outsb
mov
in
xlat
pop
nop
fidivs
adc
jmp
lods
nop
call
in
adc
cmp
push
mov
iret
rcll
mov
je
jno
jp
lock
push
into
lds
lcall
cmpsb
arpl
or
or
inc
pop
mov
jno
shll
cli
cmpsb
xchg
lea
lea
sti
aaa
andl
sub
insb
inc
add
je
mov
add
ss
mov
test
sbb
cmpsl
mov
sbb
xor
add
push
dec
lock
sub
iret
mov
xor
or
loopne
adc
add
clc
addb
xchg
sub
popa
mov
arpl
stos
jmp
rol
inc
add
add
dec
addr16
out
ljmp
fwait
sub
add
push
add
ret
add
push
int
mov
ja
imul
popf
add
add
outsb
ret
cmp
movb
dec
in
push
adc
repnz
std
push
mov
adc
repnz
sbb
dec
xchg
outsb
mov
mov
and
jb
and
addr16
add
and
arpl
dec
loope
loopne
add
lcall
sbb
and
adc
mov
or
jb
xor
cmp
dec
mov
jmp
or
inc
movsb
jl
mov
push
test
mov
gs
sub
fldl
cmp
add
sbb
dec
lock
mov
dec
push
pop
std
sub
or
outsb
or
test
aad
sti
insl
lahf
in
sbb
add
addb
test
inc
add
cmpsb
add
addb
cltd
adc
sub
mov
enter
shlb
hlt
sbb
test
jecxz
mov
loop
add
jnp
xor
movsl
add
mov
xor
mov
adc
shrl
add
ret
je
je,pn
mov
mov
xchg
test
daa
xchg
add
sbb
mov
add
add
xor
out
xor
inc
bnd
shl
loopne
add
add
add
arpl
or
mov
mov
jbe
rolb
and
rolb
stos
icebp
sbb
outsb
push
fstpl
mov
push
fnstcw
sub
jecxz
pop
loop
daa
pop
pop
loope
mov
add
mov
mov
adcl
ds
mov
insl
add
pop
xchg
cmp
jns
cmpsb
lcall
xor
enter
push
jle
pop
cs
sbb
add
fidivl
mov
pop
mov
adc
mov
add
mov
out
push
das
mov
xchg
aam
rclb
call
filds
mov
out
insl
rorb
pop
rcrl
lahf
repnz
push
inc
add
ljmp
add
insw
dec
mov
addb
in
out
mov
mov
sti
mov
in
mov
cltd
xor
ljmp
incb
add
sbb
and
sub
aaa
fists
sub
add
jle
push
mov
mov
insl
push
mov
arpl
mov
std
jnp
lret
mov
lods
push
testb
test
add
mov
add
push
add
sahf
add
cwtl
sbb
mov
rolb
pop
sbb
ds
and
sbb
shr
fs
pop
popa
or
inc
inc
jg
stos
push
dec
mov
adc
jo
cmp
call
mov
and
mov
mov
or
push
dec
in
in
mov
sbb
mov
mov
add
or
add
cmpsl
add
jb
mov
and
lcall
in
movb
add
adc
or
int3
movsl
leave
cmc
push
repz
push
lahf
sub
outsl
inc
ret
add
inc
add
jge
sbb
das
repz
bnd
add
sti
jmp
shrl
mov
pop
test
inc
add
gs
mov
jmp
arpl
ret
xchg
mov
stos
jo
out
sahf
int
test
fwait
pop
mov
fstp
ljmp
clc
aaa
mov
inc
add
or
enter
imul
divb
pop
mov
add
cwtl
push
in
inc
loope
or
mov
or
fbstp
sub
and
enter
mov
jp
jns
loop
loop
cmp
lods
inc
outsl
pop
std
push
dec
ret
add
or
mov
pushf
xor
lea
mov
movb
test
loop
dec
cli
lock
jg
sbb
sbb
xchg
cmp
pop
rolb
dec
xor
mov
jo
js
enter
sti
push
cld
jp
add
xlat
sub
in
movb
jo
or
xor
mov
add
add
popl
dec
outsb
inc
sub
or
xor
movsl
adc
movb
add
sbb
or
rolb
gs
mov
add
lret
push
loop
fs
cmpsl
popf
pop
push
lds
and
cmp
sub
out
fsub
flds
mov
addb
sbb
inc
stos
and
pushl
mov
add
gs
jns
mov
enter
or
test
movb
sarl
pop
nop
je
push
mov
or
js
xchg
pushf
pop
push
push
xchg
add
inc
hlt
mov
lret
addb
add
and
stc
sbb
es
subl
cmp
daa
sbb
addr16
lock
inc
add
std
lock
dec
ret
sub
lahf
in
sbbl
xchg
gs
movsb
dec
mov
hlt
decl
test
pop
gs
adc
fcmovnu
ficoms
cld
outsb
fst
idivb
rolb
adc
jg
sbb
push
xor
jo
xchg
xchg
fs
add
mov
xor
inc
add
int
ljmp
jle
dec
inc
mov
cmc
or
enter
std
imul
aad
push
cwtl
lods
xor
mov
jae
adc
push
xchg
addr16
sub
mov
mov
add
out
mov
push
pop
mov
fcomp
je
add
sbb
mov
iret
xchg
icebp
push
clc
mov
jne
imul
push
iret
inc
outsb
jge
push
jecxz
sbb
add
push
xchg
xor
dec
push
aam
mov
sbb
ljmp
fbstp
jp
insb
inc
add
into
mov
pop
dec
lret
repz
lds
mov
scas
mov
cld
imul
mov
and
in
mov
fwait
and
jo
pusha
add
pop
xchg
arpl
jns
dec
rolb
je
imull
outsb
mov
mov
sti
out
movl
imul
mov
lods
xor
jmp
add
popa
adc
shll
add
add
dec
pop
or
loopne
push
std
bnd
pop
movsb
pop
arpl
int3
adc
int3
std
pop
dec
sbbl
loop
push
fmuls
cmpsb
xchg
cmp
out
inc
mov
cmpsb
stos
into
aam
lret
xor
movb
xchg
fistps
adc
jl
loope
daa
out
aaa
or
ljmp
mov
fidivrl
call
in
das
pop
lock
cmp
and
cmp
jno
ja
add
push
icebp
jno
decb
ljmp
add
cmp
add
ficoms
and
lret
xlat
test
xchg
imul
sbb
pop
clc
icebp
fcomps
adc
add
dec
std
push
imul
cmp
add
mov
add
fldt
add
les
xor
cld
mov
out
jae
xchg
pop
ret
dec
rol
adc
or
jno
add
fisubs
cmpsl
cwtl
mov
mov
sbb
int
fistl
xor
add
add
xchg
loope
arpl
stc
push
cmpsl
jmp
add
dec
nop
lret
xor
or
cmp
push
xor
and
mov
adc
outsb
pop
cltd
imull
push
daa
sub
mov
sbb
mov
add
add
adc
xor
mov
aaa
aaa
xor
test
pushf
inc
add
rcrl
insb
daa
push
cmpsb
arpl
add
mov
dec
scas
pop
leave
rolb
scas
mov
mov
or
add
mov
sub
jmp
push
and
push
add
xor
add
pop
aad
insl
ret
aad
lret
add
add
shl
add
repnz
push
loopne
test
xchg
push
lahf
adc
rclb
add
add
add
cmpsb
jo
mov
lods
jnp
lock
jg
hlt
mov
int3
cmp
aam
rolb
mov
pop
add
mov
ljmp
popf
js
inc
dec
pop
in
insl
call
add
jbe
or
jno
push
xchg
sar
lea
sbb
mov
shlb
push
mov
push
inc
stos
push
add
cmpsl
das
push
cmp
jmp
mov
cmpsl
cltd
clc
adc
out
imul
jne
add
mov
xor
fnsave
mov
pushf
sbb
das
cmpsl
push
and
nop
push
add
lds
xchg
and
mov
mov
sbb
add
leave
sub
das
dec
add
aad
fcmovb
mov
or
xlat
mov
out
add
and
jo
add
or
rolb
add
xchg
mov
xor
daa
xchg
mov
adc
xchg
pop
fwait
and
gs
ret
ffreep
gs
notl
rcll
loopne
stos
inc
add
fisubrl
xor
xor
jge
add
sahf
xor
pushf
push
loopne
mov
mov
mov
add
add
into
cmp
mov
movsb
sub
sbb
or
add
push
es
xchg
xlat
in
enter
jo
dec
dec
cltd
inc
fstpl
jns
loope
mov
movsl
cmpsl
lods
rcll
sbb
sti
mov
stos
dec
in
xchg
xor
adc
cmpl
mull
out
mov
mov
hlt
push
popa
loopne
imul
jbe
out
int
lods
push
mov
and
cmpsb
pop
inc
test
pusha
add
and
je
shrl
mov
bound
test
sub
fs
scas
push
jo
or
lock
sub
loop
test
inc
add
pop
sbb
add
xchg
cmp
sub
push
push
int3
out
inc
xchg
sbb
dec
in
adc
insl
test
or
adc
mov
jge
clc
cld
loopne
imul
push
sbb
add
mov
call
lahf
std
jno
lcall
jne
addb
nop
xchg
adc
nop
in
sub
push
inc
push
mov
outsl
enter
fiaddl
inc
stos
add
mov
xor
insl
pop
sbb
stc
inc
loope
sarb
jg
mov
pop
fdivl
xor
rorb
js
push
jnp
jns
faddl
cwtl
mov
loope
inc
add
addb
jnp
subl
mov
push
aas
lcall
sbb
movsb
daa
lock
out
add
xchg
push
pop
movb
jae
xchg
cmp
dec
jb
ret
hlt
xor
inc
add
int
push
js
add
pop
negb
xor
bound
add
rclb
push
pop
mov
jl
movsl
hlt
add
daa
add
xchg
jle
and
or
push
je
jecxz
cmp
push
add
xchg
mov
in
xchg
xor
int3
mov
mov
fmuls
dec
cld
mov
adc
push
dec
or
test
jne
mov
movb
out
outsl
xor
lea
insb
adcl
push
icebp
push
mov
cwtl
cmp
scas
add
jecxz
les
inc
add
xchg
loop
loop
repnz
add
fcompp
int
arpl
sub
pop
les
pushf
xor
popa
sbb
xchg
cmp
lds
test
push
rcrb
or
mov
jp
mov
sub
in
mov
out
out
xchg
push
ds
push
call
inc
xchg
cmp
mov
and
or
add
scas
pop
and
movb
aam
jns
inc
add
cmpl
movb
jp
stc
pop
lds
and
out
add
and
das
cmpl
sahf
inc
add
mov
rcrl
mov
pop
jmp
addb
jmp
mov
push
call
shrl
bswap
jle
add
and
mov
out
in
xor
in
int
xchg
jg
cmp
in
ret
dec
lret
cmpsb
test
and
pop
loope
add
in
sub
outsl
ss
add
imul
push
das
dec
cld
push
das
fwait
add
les
lret
or
into
sub
jo
shlb
not
shrb
out
push
cltd
pop
loop
dec
fwait
xor
lock
add
leave
xchg
push
iret
sbb
push
pop
test
enter
out
inc
add
mov
add
push
rolb
xchg
daa
inc
shrl
fidivs
sbb
sub
add
nop
loope
into
inc
in
cmp
loop
add
jns
movl
in
iret
adc
cmc
mov
jle
adc
push
xchg
insl
int
jo
pop
shr
pop
or
les
mov
xchg
cmc
push
xor
je
fidivl
add
pop
jbe
icebp
pop
out
js
mov
scas
add
jne
sub
or
movsl
dec
aam
add
sub
inc
add
xor
je
push
add
add
imull
mov
pushl
mov
dec
mov
ret
ss
push
cmpl
into
in
mov
mov
ds
adc
sub
lds
push
push
sub
jmp
leave
add
add
add
bound
dec
in
int3
out
aam
insl
mov
test
jbe
out
ds
int3
adc
movsb
mov
fwait
popa
into
psubd
xlat
out
cmp
aaa
mov
jg
mov
dec
scas
push
jl
xor
insl
ss
aas
pushf
dec
cmp
loop
and
sbb
xor
or
xchg
pop
insb
repz
mov
ret
cmp
push
xchg
cmc
inc
add
jle
mov
loopne
lods
mov
inc
add
pop
inc
cld
hlt
jmp
cmp
sub
pop
inc
lret
push
xchg
out
or
scas
xlat
adc
dec
aas
and
cmp
popf
or
add
add
jno
out
sub
les
rolb
sub
stos
test
sti
cltd
or
xchg
sahf
iret
test
add
faddl
gs
jo
jp
stos
dec
adc
mov
dec
pop
and
sbb
xchg
pop
xor
dec
mov
mov
data16
pop
lret
xchg
test
int3
aam
lcall
mov
dec
dec
aaa
or
ja
iret
pop
push
mov
cmp
ja
or
aam
xchg
pushl
push
mulb
mov
aaa
push
notl
sti
mulb
xlat
stos
push
pop
cmp
cli
add
arpl
fcoml
add
iret
in
js
movsb
xchg
rclb
pushf
iret
dec
sbb
jg
xor
sub
fxch
xchg
mov
jnp
sub
sbb
int
popf
pop
jecxz
mov
push
jecxz
xlat
and
aaa
inc
cmpsb
and
add
dec
or
add
pop
sti
push
movsl
jl
out
fistps
pop
or
gs
rolb
jl
push
icebp
in
and
mov
lea
pushl
jb
popa
test
neg
in
iret
hlt
and
ret
mov
add
test
mov
add
add
push
mov
dec
pop
lret
pop
add
fcomi
cmp
mov
test
push
jae
or
js
push
rorb
std
mov
inc
add
imul
fimuls
dec
testl
outsl
inc
in
adc
add
add
inc
add
lods
in
dec
push
cli
dec
inc
add
or
push
sbb
jmp
mov
daa
inc
xchg
jmp
or
xchg
cld
mov
sub
xor
adc
xchg
mov
daa
dec
repnz
sar
in
jmp
pop
xor
cli
inc
add
in
push
jecxz
inc
add
mov
mov
add
out
hlt
sub
mov
pop
gs
mov
add
sub
aam
popa
jo
enter
movb
out
daa
adc
dec
add
adc
cltd
test
xor
dec
cmp
mov
cmp
cmp
fisubrs
xchg
adc
mov
cmpsl
jne
imul
mov
add
add
add
xchg
pop
jb
orl
mov
repz
arpl
cs
inc
add
cmp
das
xacquire
add
popf
sar
pop
pop
mov
fisttps
xor
mov
repz
cwtl
in
clc
scas
jle
cmpsl
pop
inc
pop
dec
ja
add
negl
movb
dec
int3
cwtl
mov
dec
fsubrl
cmp
popf
aad
daa
fstpt
movsb
xor
pop
cmp
push
inc
addb
xor
outsb
adc
add
std
sub
push
and
jo
enter
insl
inc
mov
mov
data16
leave
mov
xor
cmp
inc
jl
jb
loope
sub
xchg
pop
das
xchg
addb
cmp
clc
pushf
rolb
mov
pop
adc
pop
in
pop
xchg
cmp
jno
jmp
addr16
jnp
mov
xor
fstl
loopne
mov
lods
jnp
negl
nop
movsb
scas
in
jbe
adc
inc
mov
add
adc
pop
mov
ficoms
mov
adc
or
add
sbb
aad
xchg
aas
mov
jne
in
aad
add
mov
cmpsb
lret
in
std
push
xchg
ss
dec
sbb
rolb
stos
lds
add
divb
shl
stos
and
xor
pop
fcompl
call
outsl
and
ds
dec
push
mov
das
mov
or
sbb
mov
arpl
jnp
mov
mov
arpl
cmpsb
rorb
cmc
pop
in
cmpsl
pop
push
cmpsb
push
xor
ficoml
jbe
xor
mov
push
mov
sub
or
add
leave
xchg
aaa
incb
add
in
addl
mov
outsl
jp
iret
xchg
inc
jecxz
lret
push
cld
cmp
pop
das
and
push
sbb
dec
xor
add
loope
rorl
pop
mov
testl
test
mov
fldt
mov
cwtl
inc
add
add
mov
testb
and
test
cmpsb
inc
pop
pusha
add
ss
fsubs
test
rcl
mov
xchg
fst
out
xchg
scas
jg
mov
stos
push
cmp
incl
js
xchg
mov
adc
xchg
inc
pushf
je
pop
lcall
push
bound
fwait
setge
cli
lock
mov
jo
mov
jg
popf
sbb
sub
lahf
adc
aam
sbb
dec
or
mov
jge
pushf
pop
inc
cmp
push
jmp
int3
push
or
add
lods
std
mov
pop
cmpsb
sbb
add
or
insb
bound
push
push
dec
jo
ds
fistps
ja
dec
shll
scas
push
sbb
ja
inc
cmp
inc
mov
das
sbb
movsl
stos
mov
test
insb
std
xchg
lret
sbb
push
or
imul
icebp
stc
push
cld
loope
inc
add
add
add
movsl
lea
xor
ror
sbb
pusha
add
mov
movsb
mov
or
mov
cmp
loop
fwait
insl
jg
cmpsb
xlat
pop
mov
xor
add
fidivs
mov
push
xchg
daa
popf
aad
ret
and
sub
addb
or
inc
add
ds
xchg
nop
mov
add
xchg
jecxz
pop
xorl
mov
push
add
popa
sbb
xchg
fisttps
jbe
add
shlb
add
sub
xor
push
repnz
pop
mov
movsl
in
fnstenv
enter
sub
add
jnp
sbb
mov
sub
or
jmp
adc
pop
mov
adc
outsl
orl
ljmp
das
jp
add
sbb
sahf
push
fisttpl
dec
rolb
or
add
movb
cli
lods
or
mov
fisttps
mov
je
stc
mov
mov
pop
adc
outsb
lret
or
sti
pop
push
push
jecxz
pop
outsl
pop
adc
add
add
add
add
testb
je
jb
sub
mov
xor
aam
adc
ss
add
lret
rol
add
clc
mov
dec
in
xchg
xchg
fidivs
aam
pop
adc
repnz
or
push
push
sbb
lds
in
repnz
jp
xchg
mov
lahf
cmp
mov
sbb
je
adc
sub
jns
sub
pop
call
sub
sub
add
mov
push
jnp
inc
add
jecxz
cmpsl
das
adc
pop
add
add
push
xchg
nop
shrl
insb
arpl
push
add
or
out
imul
adc
dec
rolb
jp
add
sbb
icebp
jnp
jo
lds
out
test
jne
and
inc
add
mov
das
gs
adc
add
push
push
lds
add
jecxz
jae
outsl
jmp
lahf
cmpsl
inc
mov
jg
das
addb
sbb
add
and
pop
pop
movsl
sbb
dec
ret
addb
cwtl
pop
sbb
lcall
les
xchg
je
xor
mov
add
jne
in
repnz
add
adc
idivl
shll
sub
add
sarb
shll
lret
gs
xchg
mov
aad
clc
mov
aam
xlat
cwtl
pop
mov
rolb
add
repnz
or
add
fs
sbb
cmp
xchg
and
add
xchg
dec
lods
push
cli
mov
lcall
and
add
xor
mov
shrb
fisubrs
inc
add
push
and
test
lret
xor
mov
sbb
inc
inc
add
lcall
mov
mov
fcoml
jns
push
aam
cltd
jl
adc
lock
orl
pop
lods
cs
adc
sarl
jecxz
ret
xor
gs
in
xor
xlat
jge
lahf
cmp
cmp
gs
stos
and
mov
sub
pop
test
add
mov
xor
jmp
mov
bnd
sti
pop
mov
xor
jge
pusha
add
in
sub
jne
lea
stos
pop
mov
mov
pop
dec
addl
repnz
mov
lods
ret
mov
movsb
xchg
jg
add
inc
add
pop
mov
push
cmpsl
not
xchg
out
movsl
add
add
fdivs
ja
ss
sbb
mov
loopne
ret
cmp
inc
add
jg
cmp
shll
cmpl
pusha
add
sub
sbb
mov
mov
mov
sub
repz
ret
movb
das
or
xor
xor
cmp
or
test
jbe
add
add
decl
mov
cmp
gs
push
push
mov
and
cli
mov
add
and
sti
lcall
ds
or
or
mov
or
jne
ljmp
aam
jnp
push
enter
movsb
mov
std
sbb
call
inc
add
out
bound
jne
lods
test
lods
or
inc
scas
adc
jae
mov
adc
cmp
mov
rolb
decb
ja
ret
sub
and
fs
mov
and
dec
jle
add
push
add
mov
sahf
movsl
pushf
jecxz
sti
inc
add
push
daa
adc
mov
jae
sbb
mov
add
add
mov
add
scas
push
jbe
adc
call
add
arpl
or
add
jg
iret
or
iret
xchg
jle
scas
mov
jne
sub
or
add
iret
mov
cmpsl
inc
pop
cmc
loopne
jno
xchg
or
add
mov
sub
movsl
ret
adc
aaa
in
unpcklps
xchg
pop
inc
jne
movsb
imul
int
in
adc
je
mov
out
scas
mov
cmp
mov
xchg
add
das
dec
mov
add
notb
mov
ret
lods
dec
mov
xchg
jp
xchg
push
arpl
cli
xor
push
lret
ror
sbb
add
add
imul
sahf
jo
hlt
aam
add
stc
cwtl
sti
jns
jne
add
and
push
jno
popf
pop
push
mov
cld
cmp
ja
cmp
fxch
and
jecxz
std
cmp
pop
sub
adc
into
rclb
test
lea
bound
pop
fimull
scas
int
sti
sti
sub
adc
imul
inc
add
test
inc
add
jecxz
push
or
add
jo
sbb
mov
push
pushl
cmp
lods
mov
pop
shll
mov
pop
mov
cmp
and
sbb
hlt
lods
iret
cmp
or
inc
xor
push
xchg
mov
inc
add
add
or
mov
mov
push
out
jl
pop
in
rolb
lods
jp
push
xlat
dec
pop
mov
dec
rolb
inc
add
in
fstps
insb
lds
add
dec
xlat
jecxz
jno
inc
pushf
lahf
inc
add
fwait
cltd
addb
insb
xlat
mov
lret
scas
sub
fmull
stos
dec
sub
add
jno
pop
aam
data16
mov
jp
add
mov
popa
test
xchg
xor
bound
das
addb
pop
popf
in
inc
adc
out
jnp
add
add
sub
push
fistl
mov
adc
mov
js
inc
mov
or
mov
and
add
in
jns
pusha
add
add
add
cmp
cmp
add
add
push
mov
pusha
add
lods
addb
add
inc
add
in
add
mov
adc
xor
sub
add
loope
add
jns
inc
add
call
test
movb
cmc
mov
gs
ja
and
mov
add
daa
or
cmp
add
mov
mov
dec
fstpt
mov
daa
mov
mov
mov
enter
mov
jns
add
in
cmpsb
stos
mov
mov
add
cli
push
cmp
in
lock
cmp
jnp
aam
jnp,pt
repz
addr16
mov
in
cs
lods
dec
movb
lahf
jmp
loopne
fimull
mov
fnstcw
ss
cmp
fadd
stc
add
and
and
push
addb
add
addb
mov
xor
fwait
cmpsl
inc
add
lea
mov
fdiv
adc
and
lcall
clc
std
cmc
sbb
test
xchg
jns
add
mov
es
inc
mov
jne
lret
or
add
in
cld
mov
mov
sldt
addb
stos
arpl
lods
cmpl
fistpll
mov
and
add
std
add
sahf
out
xor
jle
add
mov
stc
sub
lret
in
mov
cwtl
pop
sub
adc
jg,pt
sub
cmpsl
js
sub
mov
nop
std
sbb
push
das
or
cltd
jmp
add
cmp
add
icebp
jmp
push
popf
idivb
hlt
mov
or
pop
pop
fcoms
jg
cmp
and
fadds
loope
mov
sub
pop
cmp
rcll
sub
xchg
or
add
mov
ret
les
or
dec
notl
mov
jae
pop
xlat
xor
push
lahf
jae
jnp
add
lcall
add
dec
dec
or
mov
out
and
jmp
adc
cmp
fisubs
fdivrs
push
lock
shll
fdivrl
sti
das
lea
das
stos
nop
sub
scas
addb
lods
mov
rolb
push
test
lret
sbb
lcall
dec
inc
add
jle
cmc
inc
cmp
jnp
pop
xor
in
int
sbb
and
dec
aam
out
push
add
sarl
dec
imul
mov
fldl2t
sahf
push
cld
ret
mov
call
add
sti
aas
xor
mov
xlat
lret
addb
mov
nop
fildl
sbb
inc
mov
xchg
xchg
sahf
xchg
fimull
sub
loop
and
leave
in
ljmp
inc
and
xchg
jne
add
sub
xor
aam
sbb
sti
mov
pop
mov
mov
std
cmp
cltd
or
add
push
push
push
mov
inc
add
shlb
add
mov
jnp
or
adc
xchg
add
jae
pop
movb
orl
add
add
pop
lahf
daa
push
gs
mov
add
ret
xchg
lret
aad
add
push
arpl
mov
cmp
call
dec
fistpl
ss
jecxz
popl
fs
popf
inc
add
adc
fwait
mov
loop
lods
adc
mov
es
push
out
insl
repnz
das
xor
dec
sti
fsts
mov
mov
sahf
js
out
or
aaa
mov
inc
icebp
sub
push
adc
and
xchg
jp
decb
push
inc
sub
adc
sbb
rcll
aad
xchg
sbb
outsl
inc
test
mov
int
out
out
sbb
jno
push
sub
or
loope
cwtl
int
add
cld
dec
daa
push
loope
mov
add
jge
mov
enter
out
xor
pop
aas
pushf
sbb
iret
and
inc
into
cmp
cmp
jle
push
inc
stc
mov
adc
addr16
and
popa
adc
sub
sbb
icebp
adc
inc
add
pop
repz
pushf
jnp
sub
pop
xor
shll
pop
xor
add
lahf
fisttpl
subl
jmp
addr16
scas
addb
add
inc
mov
leave
lahf
aas
xor
pop
jne
adc
add
and
cmpsl
stc
das
dec
lea
sti
cmp
jle
add
ret
fcmovne
outsb
loope
in
push
inc
add
lods
cmp
mov
out
cmp
lods
movb
inc
xchg
mov
xor
scas
dec
mov
cmpl
fcmovnbe
cmp
jecxz
test
movsl
push
call
adc
jge
das
fcompl
sub
xlat
mov
pop
fildl
dec
dec
sbb
daa
sbb
lds
popa
out
lods
mov
xchg
sbb
and
sbb
test
fnstsw
inc
movsl
rorl
addb
xchg
int3
or
mov
sbb
inc
add
into
fnstcw
lock
add
clc
mov
add
add
addr16
fnstcw
xchg
inc
mov
into
pusha
add
stos
add
sub
ljmp
ljmp
add
outsl
or
add
pop
popf
dec
ficoms
add
add
jae
dec
inc
add
out
xchg
sbb
sbb
pop
dec
cmp
leave
ret
jle
les
bound
or
xchg
lds
pop
sbb
or
sub
je
sub
addb
loope
mov
int
into
enter
dec
add
jne
loopne
xchg
fdivp
jl
xor
xor
icebp
cltd
xor
add
out
push
xchg
xchg
cmp
loope
add
outsl
sbb
in
lahf
mov
aas
das
rclb
add
adc
shrl
and
in
and
aad
and
lahf
movb
mov
xchg
xchg
push
add
lret
push
fwait
sub
mov
imul
sbb
pop
addr16
mov
xlat
jae
push
inc
add
pop
ret
ret
out
adc
stos
mov
mov
cld
xchg
add
ja
pop
inc
add
xchg
lds
add
inc
add
inc
add
sbb
js
mov
add
lahf
inc
insl
jns
pop
dec
lea
scas
adc
sahf
cli
loope
jecxz
mov
cmp
cmp
mov
or
jo
sub
loope
pushf
mov
fbstp
cli
fadds
adc
insl
adc
push
in
insb
adc
sti
call
jno
lea
push
popf
notb
das
adc
dec
inc
inc
add
cmc
pushl
add
mov
push
dec
mov
add
movsl
fwait
mov
add
mov
pop
aam
into
jo
push
add
ret
add
pushf
and
xchg
mov
aad
into
push
xor
push
roll
or
je
add
out
mov
and
test
xor
or
out
mov
out
add
push
rolb
push
mov
das
xlat
faddl
add
adc
insl
push
add
cmp
add
imul
ds
inc
add
pusha
add
sbb
dec
pop
stc
dec
repnz
pusha
add
sub
pop
pop
fdivl
xor
les
outsb
in
lret
cmp
cs
enterw
push
mov
jnp
push
cmp
push
or
in
stc
out
add
daa
int3
cmp
and
mov
fdivl
loopne
adc
push
arpl
xchg
stos
mov
aaa
cmp
add
rcrl
add
cmp
and
or
or
call
adc
in
addb
xchg
jo
lock
sub
or
mov
add
add
adc
push
or
lods
or
movsl
cmp
dec
pusha
add
mov
mov
inc
into
dec
outsb
sahf
adc
gs
cli
or
pslld
rclb
cmc
dec
shll
inc
add
outsl
inc
rolb
enter
sbb
leave
mov
and
add
jb
cwtl
dec
jnp
sbb
lods
fnstenv
push
jmp
popa
push
test
ds
push
inc
stos
lea
fstpl
mov
rol
xchg
add
bound
clc
or
add
into
enter
aaa
dec
mov
push
push
rol
add
fcompl
outsl
repz
rcrl
nop
dec
fidivrs
add
jo
cli
xchg
inc
add
cmp
fiadds
mov
shrb
add
mov
add
pop
push
mov
movsb
mov
sbb
movsb
ret
clc
stos
push
sub
xor
movsl
pop
outsb
les
loope
xchg
push
inc
loope
in
cmc
xchg
test
sub
add
call
les
lods
movsb
ljmp
addr16
jne
popa
sbb
sarl
xor
dec
ja
xor
xchg
xchg
push
and
sub
push
push
data16
push
add
sub
in
scas
movb
adc
sub
cmpsb
add
pop
pop
loope
shr
push
add
cmp
adc
mov
push
lds
xchg
add
dec
fldt
adc
aad
shrb
cmp
cwtl
cmp
sub
cwtl
fistl
mov
add
mov
pop
inc
add
in
jne
add
scas
std
sub
lock
sub
pushf
xchg
add
push
imull
push
add
push
jb
data16
add
xor
push
mov
xchg
into
decl
dec
or
mov
daa
fwait
xchg
mov
add
call
or
insl
scas
jbe
nop
mov
add
out
inc
xchg
adc
or
cmp
dec
repnz
mov
leave
jo
fdivr
lods
mov
enter
bound
hlt
repz
jg
or
bound
fwait
push
imul
cmp
cmp
js
test
push
mov
add
hlt
sub
xchg
or
fs
sub
add
jmp
adc
jp
aad
and
cmp
arpl
pop
dec
adc
mov
mov
add
push
and
add
sub
push
gs
dec
and
xchg
aad
fs
cmp
jnp
shrb
xchg
jp
add
add
add
imul
jl
inc
add
cwtl
jecxz
mov
mov
fldl2e
mov
jmp
jp
mov
add
pop
or
pop
mov
push
push
and
fcompl
inc
sub
stos
push
xor
fs
dec
and
xchg
jmp
dec
mov
pop
bound
fstl
ds
dec
ss
sub
and
sbb
scas
sub
mov
test
bound
ja
inc
add
rclb
push
movsb
and
dec
push
xchg
pop
cmp
inc
push
cmp
lods
rcll
mov
arpl
out
xchg
cwtl
jg
push
addr16
add
mov
push
or
mov
add
pop
out
push
add
add
mov
pop
jle
and
or
lods
and
fcomps
ljmp
out
jo
inc
add
mov
mov
pop
fisttpll
sbb
ja
pop
sub
push
call
pop
and
pop
fbstp
inc
out
pop
cmp
mov
jbe
aas
xlat
ja
repnz
fdivrs
sub
cld
aad
jne
jae
add
or
jecxz
add
inc
test
out
pop
pop
repnz
cmp
loop
xchg
shrb
dec
xor
std
aad
mov
sbbl
ja
push
and
jmp
dec
sub
pop
mov
dec
repnz
cmp
cmpsl
fidivrl
add
rolb
hlt
mov
leave
ds
push
dec
and
sbb
cltd
jb
lods
cmp
cmpsb
rolb
dec
mov
shrl
and
push
jno
push
es
push
xchg
jo
mov
addb
addb
dec
outsb
cmpsb
and
push
push
scas
push
mov
add
adc
mov
mov
pushf
and
sub
dec
insl
mov
fmuls
sub
movb
les
pop
lea
out
cmp
pop
popf
sub
xor
push
push
adc
int
cmp
mov
sti
sbb
rorl
jmp
fadd
add
test
fldcw
clc
enter
outsl
call
or
jne
fisubs
add
add
mov
add
adc
add
mov
addb
jecxz
fmull
mov
out
add
or
pop
inc
add
sbb
sub
dec
and
jecxz
mov
insl
jmp
push
push
pop
jbe
jge
lods
mov
popf
or
daa
jo
movsb
add
nop
jb
ret
clc
cmpsb
aad
add
mov
xchg
mov
test
dec
xchg
pop
call
add
sahf
insl
xchg
xor
add
sbbl
add
les
repnz
nop
lahf
rcr
ret
add
add
add
pop
pop
push
insb
mov
add
jmp
leave
adc
sub
add
in
cld
jbe
pop
jns
mov
nop
sub
jg
dec
xor
loopne
jne
mov
std
cmpsb
inc
sar
daa
jge
add
xor
mov
jmp
idivl
call
add
inc
add
test
add
pop
jmp
stos
loop
and
loope
stos
mov
mov
jo
loopne
pop
push
xor
add
jl
pop
shll
cld
jo
add
stos
jae
movsl
icebp
gs
jecxz
jo
mov
jmp
jb
adc
arpl
xor
add
adc
xchg
pop
shll
fdivs
lcall
mov
adc
or
xchg
fstl
adc
sbb
mov
xor
out
jg
mov
mov
cmp
in
cmpsb
ja
jmp
in
popf
inc
add
sub
cmc
sbb
arpl
loope
div
leave
lret
sbb
push
add
pop
outsl
int3
xor
fsts
fidivs
icebp
out
addl
pop
mov
test
mov
mov
sub
repnz
add
scas
and
add
add
mov
aam
gs
inc
add
repz
cmpsl
jbe
or
scas
or
lret
pop
addb
xor
or
mov
push
jbe
push
jns
push
data16
movsb
sub
mov
cmpsl
fmuls
jne
add
sub
add
jmp
pushf
iret
jmp
cmpsl
mov
add
sub
test
cli
lods
cli
iret
xlat
inc
add
pop
out
lret
cmpsb
push
repz
and
pop
inc
pop
pop
or
xor
mov
test
insb
mov
pop
pop
jns
clc
cmc
mov
stos
pop
add
add
inc
add
jae
mov
lea
add
fs
xor
cld
jno
fisubrs
add
cld
dec
nop
sub
push
data16
xor
or
sub
adc
sarb
aas
xchg
rcrb
mov
daa
adc
outsb
mov
jmp
jmp
add
sbb
cmp
mul
call
sub
pop
xchg
push
imul
add
subl
jbe
outsb
movb
dec
ds
jns
lcall
pop
test
or
sub
add
lock
mov
mov
and
fcompl
mov
add
jae
sub
jae
cs
ret
lcall
js
stc
insl
cmp
mov
mov
iret
scas
mov
movb
add
add
enter
aam
dec
cld
and
jae
clc
fcomp
and
test
ss
cmp
push
jns
xchg
pusha
add
mov
xor
add
lods
xchg
add
lahf
enter
or
pop
lods
and
cmp
cmpsb
xor
sarl
xchg
inc
jne
shl
dec
mov
stc
xor
pop
test
mov
push
cwtl
jge
inc
add
fsubs
jne
add
pop
pop
sub
add
inc
add
dec
mov
cwtl
fistl
push
test
xchg
or
jecxz
add
fdivl
sub
pop
scas
sbb
repnz
mov
insb
addb
add
add
adc
int
movb
test
shrb
aaa
dec
dec
push
scas
clc
pop
shl
fs
int3
pop
xchg
scas
jo
jns
jge
and
ljmp
insl
xchg
mov
js
push
enter
add
xchg
sti
lea
dec
rcll
jns
push
xor
loope
add
fistl
mov
fucomip
and
lds
das
movsl
sbb
add
and
jae
inc
add
add
movsl
repz
push
call
cmp
add
or
inc
add
cli
pop
dec
jnp
add
int3
jle
pusha
add
mov
into
sbb
aas
ljmp
lock
iret
sbb
aam
enter
bound
and
dec
insb
lods
and
inc
add
push
adc
outsl
fnstcw
ds
test
es
fsubrl
xchg
add
xor
cli
lea
int
popf
lock
and
mov
sbb
clc
pop
enter
mov
mov
sbb
shlb
xchg
test
inc
loop
push
add
add
test
int
aas
and
aam
dec
repnz
mov
mov
into
dec
jl
mov
repz
mul
mov
cmp
jae
loopew
fcmovnb
ljmp
and
sbb
add
ljmp
cmc
inc
pop
pop
push
add
stc
dec
add
movb
ss
out
xchg
mov
into
fisubl
and
shl
mov
add
jmp
jo
lods
jmp
scas
es
cs
jae
add
es
mov
lods
sub
sub
and
loope
flds
add
or
inc
dec
rolb
pushf
mov
clc
ds
rcrl
jns
pop
inc
add
rclb
int3
outsb
cmp
fdivrl
mov
inc
add
lret
lods
mov
imul
hlt
js
je
outsb
dec
lods
sti
adcl
jns
cmp
jae
rorb
lcall
mov
pusha
add
inc
fadd
add
push
repnz
xchg
xchg
lret
xor
addb
addr16
pop
jle
pop
dec
fwait
sbb
nop
fstpl
jecxz
xor
nop
sti
mov
lods
jbe
outsl
repz
jbe
add
out
mov
in
fidivrl
loopne
add
mov
loopne
decl
jle
mov
rclb
sub
out
mov
cmp
add
push
ror
idivb
scas
rol
dec
add
adc
sub
negl
add
or
pusha
add
cltd
jb
into
and
xchg
and
xchg
cmp
push
data16
jp
mov
jb
mov
pop
icebp
push
int
xor
pop
lret
pminub
add
repnz
lret
imul
add
lea
je
and
test
add
fiadds
add
xchg
xchg
lcall
ja
adc
push
cltd
adc
push
mov
sub
xchg
xor
inc
js
push
jecxz
rcll
aad
mov
fucom
pop
push
xchg
out
sub
cmp
xor
mov
and
add
out
loop
jne
in
test
lret
inc
xor
mov
mov
lret
test
int3
cmp
add
leave
std
into
inc
add
mov
es
inc
add
leave
cld
addb
xchg
add
add
lods
jge
lret
nop
add
mov
sub
push
leave
rclb
mov
xor
and
mov
std
mov
add
xor
push
loope
mov
mov
popa
cwtl
orl
xchg
add
mov
call
mov
xor
test
and
mov
lret
sbb
in
jl
outsb
jno
mov
fisttpl
ret
add
iret
lea
sub
sbb
add
xchg
or
stos
push
stos
dec
fwait
jne
ds
and
ds
fcmovnb
dec
or
jecxz
lock
and
jg
or
sub
stc
rcl
inc
cld
pop
clc
mov
sahf
mov
cmp
dec
sbb
pop
inc
sbb
xor
mov
add
dec
adc
ret
mov
mov
and
pop
inc
ljmp
movsb
fcmovnu
push
nop
ds
les
sub
xchg
pop
test
xchg
negb
sbb
jge
lahf
jnp
sarl
clc
push
cld
adc
jno
repz
mov
cmp
cmp
fistl
cmp
sub
imul
stos
shll
cmp
mov
rolb
mov
popa
mov
cs
add
in
jg
jo
pop
and
aam
mov
push
mov
xchg
jg
push
test
jp
add
insb
sbb
adc
pop
jb
xchg
and
insl
jns
lcall
scas
add
sbb
sub
and
icebp
jecxz
lods
cwtl
lock
stc
dec
sub
cmpsl
out
daa
xchg
adc
jle
mov
inc
add
add
sub
mov
bound
push
jecxz
sub
cld
dec
mov
hlt
dec
mov
clc
xor
roll
pop
iret
cmp
loope
aad
fnstenv
les
mov
push
push
add
stos
in
add
adc
xor
mov
add
xlat
loopne
sub
add
loopne
nop
mov
enter
les
mov
jle
or
mov
stos
sbb
pop
popa
jo
ret
ja
sbb
dec
dec
lahf
and
jo
pop
outsb
aam
cld
outsb
lret
repnz
int
sub
sub
movsl
addb
and
jnp
xchg
movsb
into
mov
dec
and
jae
in
adc
sbb
clc
in
repz
jl
inc
add
adc
mov
stos
loop
xlat
jp
inc
add
push
cmp
sub
daa
das
shrb
nopl
cmpsb
pop
test
lea
fisubrl
and
fdivl
sbb
mov
call
stc
pop
or
jge
dec
addb
ret
flds
mov
hlt
rorb
movsl
shlb
ficoms
dec
xor
ja
jne
rorl
push
hlt
sub
out
jmp
ja
out
add
push
jnp
sbb
test
and
imul
daa
mov
in
inc
push
mov
into
sbb
add
inc
and
inc
add
add
out
ret
cwtl
cwtl
inc
ss
je
fldenv
mov
into
or
int
jg
xlat
dec
loope
jecxz
fs
popa
push
inc
add
test
xchg
jb
pop
sbb
jno
enter
cmp
and
hlt
adc
add
or
xchg
jecxz
lcall
add
add
popa
aas
push
add
cmc
movd
rorl
and
outsl
les
mov
sub
data16
mov
xor
ljmp
sbb
push
hlt
int3
dec
adc
cmp
aad
arpl
add
and
xchg
stos
mov
fstpl
jnp
push
add
cmp
sbb
xor
mov
push
movsb
subl
jmp
fwait
loopne
pop
mov
lcall
loop
dec
imul
dec
mov
inc
hlt
popa
or
adc
inc
jle
sub
movsl
or
mov
adc
jbe
jp
les
repnz
clc
sbb
ret
add
jle
repz
sete
jmp
data16
or
add
or
subl
ja
jmp
fsubr
int3
mov
iret
das
xchg
push
repz
mov
fdiv
insb
xor
pop
mov
das
shr
mov
ds
movsl
pop
outsb
or
dec
xchg
dec
insl
xor
jb
repz
adc
push
pusha
add
add
sub
sbb
pop
sub
xor
lds
int
jp
shl
sti
dec
mov
sti
stos
push
cmp
mov
xor
bound
mov
into
pop
jno
insb
push
jne
mov
add
lret
and
adc
inc
add
in
insb
scas
pop
imul
lret
cs
and
mov
mov
out
imul
add
stos
les
xchg
add
xchg
sbb
xor
inc
add
cmp
dec
ret
shll
add
pop
jp
in
cmpsl
addb
push
movsb
dec
and
popf
ss
inc
add
add
ret
cmc
add
insb
mov
push
ror
in
and
sub
aad
add
data16
stos
xor
add
lods
add
in
cli
cmp
or
mov
vpslld
xor
loop
fwait
stos
lret
push
pop
adc
hlt
and
inc
pop
mov
pop
xor
mov
pop
adc
pop
sbb
fidivs
fnstcw
xor
dec
loope
outsl
repnz
andl
sbb
jns
inc
add
les
dec
rolb
mov
mov
sbb
scas
mov
sub
jmp
xor
lret
cmpsl
int
push
dec
into
xchg
push
add
or
cmpsb
addb
inc
add
xor
cmp
add
push
pop
addb
mov
jp
jle
add
movsl
mov
imul
jbe
mov
push
ja
data16
sti
shlb
add
aam
enter
hlt
ficomps
mov
je
or
push
sbb
add
les
push
sbb
mov
push
icebp
add
sbb
xor
lods
inc
push
cwtl
dec
outsb
sahf
cmp
addr16
ret
mov
xchg
testb
adc
pop
mov
push
xor
fcos
ja
cmpsb
sub
dec
movsl
cwtl
popf
ret
hlt
pop
and
test
inc
and
fs
sub
test
sub
mov
movb
add
popf
inc
add
pop
mov
or
je
data16
mov
and
add
pop
mov
lret
mov
pop
lcall
pop
xor
add
mov
sub
rcl
pop
sahf
aas
and
push
pushf
fldcw
add
pop
inc
roll
add
and
sbb
jmp
sbb
and
js
mov
jl
sbb
mov
mov
dec
cwtl
mov
add
pop
mov
add
jb
shrl
lea
loopne
stos
mov
das
or
test
pop
repnz
mov
add
inc
addl
push
xchg
lods
int
fisubl
jae
out
cmp
mov
sub
sub
sub
lods
mov
add
cs
jle
xor
jecxz
mov
sub
jo
dec
addl
xchg
ret
and
fwait
adc
xchg
popf
rcl
jecxz
push
push
sub
push
int3
and
dec
add
and
add
xchg
lods
xchg
cmp
or
adc
inc
aam
add
pop
rcrb
adc
cmpl
pop
dec
aam
movl
repnz
clc
mov
cwtl
mov
jb
add
hlt
mov
fiaddl
in
push
xor
test
outsl
adc
mov
cmc
in
xor
and
jl
push
inc
add
addb
ljmp
mov
jne
fistl
negb
add
aas
jne
jle
iret
cli
push
add
ds
pop
cmp
adc
test
ds
cli
mov
and
sti
or
mov
sbb
mov
push
ss
pop
dec
xchg
xchg
jp
movb
sub
jmp
pop
mov
jns
addb
insl
push
cmp
js
xchg
cmc
aad
stc
sbb
lcall
xor
mov
push
test
push
lahf
fcoms
inc
add
std
movb
add
push
aas
adc
cmpl
pop
ljmp
mov
adc
popf
sbb
lock
inc
es
mov
sti
jge,pt
ljmp
or
xlat
out
mov
addr16
dec
cmc
jmp
lahf
sahf
mov
xchg
and
fwait
or
hlt
mov
hlt
hlt
negb
sub
cmp
lret
inc
add
xchg
sahf
push
out
popa
jne
mov
add
jg
add
lret
xchg
je
or
push
mov
fsubs
xchg
add
cmpsb
sbb
mov
and
cli
xchg
push
cmp
pop
fmuls
push
into
cmp
mov
xlat
jo
add
data16
sbb
test
push
mov
mov
add
lret
scas
aas
dec
out
roll
pushf
fisubl
outsb
jne
icebp
fadd
imul
inc
add
mov
cmpsb
in
outsl
cmp
mov
pushf
inc
out
push
push
add
inc
addr16
add
sbb
out
adc
les
sbb
ljmp
add
xchg
mov
enter
rorb
pusha
add
sub
insb
cwtl
scas
mov
test
ror
adc
jge
add
pop
into
mov
imul
adc
mov
js
jb
pop
bound
cmp
add
xchg
xor
js
xlat
adc
add
insl
push
add
xchg
movsl
adc
sahf
mov
rclb
sbb
ss
jbe
jmp
mov
rolb
incl
xchg
mov
lock
push
cwtl
fbld
xchg
fwait
sbb
pop
shll
lea
or
imul
add
popa
rolb
jbe
inc
pusha
add
jmp
aad
fnstsw
adc
cli
xlat
loop
xor
scas
insl
insb
outsl
or
xchg
aaa
inc
adc
pop
cwtl
pop
out
and
cmpsb
jmp
pop
sar
fadds
sub
popf
int
mov
xor
cmp
dec
test
sti
pop
mov
pop
xchg
stos
inc
or
push
popa
adc
add
clc
loope
add
jns
adc
scas
adc
fwait
in
add
dec
xchg
push
push
push
jae
mov
push
dec
cwtl
jmp
cmc
push
dec
xchg
addb
mov
and
add
add
mov
or
enter
sub
push
xchg
lds
and
paddb
add
int
sub
xchg
mov
insl
test
ds
mov
mov
push
cmp
pusha
add
mov
mov
test
cmpsl
cwtl
inc
cld
push
pusha
add
dec
cmpsb
inc
add
idivb
or
jle
mov
jbe
in
in
out
or
call
in
jb
sub
pushf
stc
aad
aad
sbb
inc
cld
cli
sbb
cmp
pop
mov
les
aaa
cli
daa
fcmovne
jecxz
fldt
push
dec
mov
and
jge
add
inc
out
xor
ljmp
add
add
fistps
cmp
add
dec
jo
ljmp
dec
popf
push
ficoml
adc
sbb
fisttpll
ss
jae
popa
es
adc
imul
test
pushl
enter
lds
inc
add
dec
adc
cmc
cmpsb
pop
aas
cld
sbb
inc
call
or
add
movsl
lods
sub
add
pop
loope
sbb
push
xchg
jmp
add
outsl
shrb
jle
cmp
out
pop
inc
add
add
sub
gs
lret
cmpsb
pop
out
sub
cmp
lcall
adc
and
mov
sbb
ret
pushf
cwtl
inc
add
arpl
add
add
rcr
mov
add
pop
xorl
rcl
int3
enter
lds
and
je
fnstenv
mov
out
push
sub
inc
add
add
rcrl
adc
pop
cmpsb
pop
or
or
repz
test
and
pop
add
aaa
jne
push
add
insb
push
jmp
pushf
arpl
and
and
aad
mov
hlt
cld
in
fbstp
ret
inc
sbb
pop
xor
shr
jo
dec
ret
fcompl
add
or
addb
xor
push
push
movb
add
and
add
addb
popf
popa
addr16
insl
cmp
add
jp
outsb
fldenv
push
lods
mov
rclb
inc
lods
xor
cwtl
cwtl
add
mov
push
mov
scas
mov
mulb
cmpl
dec
xor
in
mov
in
int3
push
push
fimuls
mov
loopne
shll
addb
mov
push
call
push
sub
out
mov
add
mov
in
sbb
adc
rorl
out
in
sub
jg
inc
add
add
xchg
mov
add
movsl
pusha
add
ja
add
xor
in
jg
xlat
and
mov
outsb
sub
icebp
or
cmpl
add
add
nop
fsub
dec
inc
clc
popa
mov
add
push
or
imul
dec
cmp
out
movsb
outsb
stos
arpl
ficompl
push
fs
or
mov
add
sub
mov
pop
xchg
cmp
mov
push
mov
ja
rol
adc
leave
cli
rcll
imul
sub
add
inc
add
lahf
std
fcomi
mov
add
shl
add
scas
out
add
outsb
mov
xchg
inc
adc
fistpll
nop
pop
mov
lcall
sub
adc
into
out
in
push
int
jmp
je
daa
inc
add
ja
nop
dec
pop
mov
sbb
dec
jmp
ljmp
std
out
in
mov
push
out
mov
pushf
mov
out
push
adc
popf
push
adc
add
fsubrp
lods
lret
out
hlt
and
jp,pt
lds
add
in
sub
lods
add
pop
pop
jecxz
rorl
mov
mov
mov
aaa
fimuls
inc
add
jge
push
cmp
jae
sbb
fucomi
aad
data16
mov
shlb
das
xor
dec
test
add
decb
inc
add
std
out
mov
popa
jae,pn
cmp
pop
loop
cltd
push
pop
imulb
clc
mov
mov
add
mov
pop
sub
imul
in
lods
add
xchg
mov
pop
pop
lret
jno
lea
push
mov
in
adc
mov
xchg
imul
imul
test
divb
mov
sub
mov
cmp
adc
jge
sub
leave
sub
mov
sbb
adc
and
and
jecxz
loop
sbb
aad
mov
pop
mov
add
mov
xor
and
mov
jle
or
adc
aas
inc
add
xor
shrb
mov
out
addr16
mov
movb
add
sbb
cwtl
cltd
in
insb
inc
jo
fiadds
movsl
imul
mov
and
loopne
mov
pop
rcll
push
inc
add
inc
add
sub
insb
mov
movl
sahf
and
jl
test
mov
cltd
in
xor
xor
mov
ljmp
xchg
ljmp
mov
push
imul
in
lahf
mov
dec
xor
add
push
adc
mov
dec
or
push
aas
mov
aad
adc
test
pop
add
jmp
jbe
fdivp
pop
pop
or
test
sub
addb
test
adc
add
lods
cmc
sub
sti
fldcw
sbb
mov
out
add
xchg
pusha
add
xchg
adc
test
int
gs
daa
imul
push
xchg
int3
or
inc
adc
shll
inc
mov
lcall
test
test
push
push
sahf
adc
push
add
inc
js
mov
test
mov
add
pop
adc
dec
dec
sbb
add
testl
add
sub
jg
cmp
les
notl
jns
add
stos
ss
xchg
xchg
ret
mov
mov
xor
push
mov
sub
mov
imul
popa
out
in
mov
push
add
cmp
add
mov
or
stos
loope
inc
add
cld
jb
mov
in
pop
or
push
and
xchg
jle
mov
fst
mov
add
push
movb
jg
adc
sbb
adc
adc
mov
push
mov
add
stos
addr16
jle
test
repz
jl
pusha
add
mov
imul
lret
fcomps
push
jmp
sahf
mov
std
push
loop
outsl
push
mov
add
ljmp
dec
cwtl
xchg
mov
repnz
test
aaa
int3
test
icebp
jnp
mov
cmpsb
lea
add
lea
into
pop
cmp
int3
cmp
adc
fnstenv
lods
pop
inc
jmp
pusha
add
add
mov
jmp
push
dec
dec
lods
lock
adc
icebp
stos
push
js
xor
mov
jnp
xchg
or
xor
roll
cli
shl
or
pop
mov
lret
out
ss
int3
es
repnz
xchg
insb
pop
out
cmpsl
or
mov
jb
add
mov
sbb
xchg
sbb
pmullw
popl
lret
push
jno
cmp
mov
add
mov
scas
push
outsb
fwait
popa
hlt
push
orl
add
cwtl
and
out
cmp
shll
or
ror
jle
out
inc
add
xor
mov
das
lret
cmp
cmp
adc
inc
mov
in
jl
add
insl
inc
mov
cmp
mov
imul
dec
pop
loop
add
mov
adc
adc
out
push
das
sub
arpl
stos
jmp
or
mov
int3
xor
add
shr
jp
ds
stc
cmp
push
das
movb
addb
popa
add
je
mov
jle
lods
jae
push
add
xchg
leave
out
sbb
stos
data16
xchg
aas
test
js
stos
loope
sub
inc
add
or
xchg
aad
xor
push
xchg
popa
outsb
xor
mov
inc
add
push
bound
mov
push
and
mov
rolb
pop
xlat
inc
add
jle
cmpsl
js
and
pop
lods
xor
bound
iret
sub
notl
sbb
or
jecxz
addb
push
scas
cmc
inc
add
and
push
push
rolb
adc
add
movsl
ljmp
aaa
stc
lret
pusha
add
add
add
rolb
add
push
loop
fs
pop
outsl
loop
jmp
out
xlat
xor
add
rolb
adc
inc
add
pop
lods
cmp
int3
xchg
sub
add
add
in
xchg
into
jmp
dec
jbe
cmp
mov
lods
sti
pop
adc
dec
es
push
aad
sub
frstor
in
add
insl
cli
xorl
mov
add
js
add
jbe
add
mov
je
xchg
and
shrl
jne
ds
mov
in
push
mov
sbb
mov
and
ljmp
and
dec
jl
sbb
adc
add
sub
mov
fstpt
mov
stos
sti
jb
pop
sub
imul
cli
add
push
push
add
and
pop
fbstp
mov
ljmp
clc
cmp
inc
add
int
stc
test
das
rolb
addr16
addr16
mov
dec
ret
ss
sbb
popa
dec
mov
jae
inc
add
push
mov
dec
addr16
jno
mov
xchg
xor
cmpsl
push
lds
jb
repnz
jae
add
adc
inc
mov
lock
or
add
or
sub
push
es
sbb
bound
cmp
mov
subl
movb
loop
jb
out
lds
add
mov
add
test
in
cli
pop
cwtl
mov
xchg
mov
xor
sbb
ljmp
fdiv
pop
dec
cmp
js
out
pop
and
jbe
cmp
imul
mov
sbb
mov
pop
lcall
xchg
pop
testl
push
rol
add
addr16
incl
add
mov
mov
ret
mov
mov
lret
xchg
mov
dec
xchg
daa
dec
cmp
nop
stos
jo
push
popf
fsubrs
rolb
xchg
hlt
adc
jmp
xchg
pushf
inc
pop
sarl
cmpsl
loop
adc
jne
xor
std
lods
mov
xor
ret
filds
sub
movb
add
sti
push
and
mov
sbb
into
test
pop
fwait
jbe
or
xrelease
ret
scas
jge
mov
in
int
int3
sbb
mov
mov
lea
push
add
jae
add
sub
fucom
xchg
mov
mov
mov
jne
add
loope
and
pusha
add
loope
inc
add
pop
adc
leave
dec
movsb
into
stos
mov
daa
sbb
mov
out
dec
mov
add
add
ret
nop
add
fmull
in
lret
xor
addb
pop
js
xchg
add
mov
loop
in
movsb
inc
add
and
subl
out
push
std
movb
sti
int3
cmp
stos
pop
out
push
xlat
push
fcmovne
fwait
mov
hlt
push
push
add
pop
pop
and
inc
add
xchg
movsb
inc
push
add
add
mov
cli
ja
mov
dec
aas
popa
clc
ret
inc
add
addb
push
add
push
mov
jp
loop
push
popf
jmp
add
addb
and
mov
add
xchg
mov
addb
inc
lods
pusha
add
pop
outsb
cmp
js
and
xchg
push
ret
shlb
add
push
xor
add
out
add
ret
mov
mov
add
cmp
sarl
test
xchg
inc
and
mov
popf
push
sub
mov
fwait
das
mov
jne
popf
sbb
push
clc
lods
scas
movaps
add
cmp
jmp
pop
push
into
rolb
sbb
add
aaa
inc
add
push
insb
shrl
daa
gs
add
inc
mov
xor
xor
ret
add
add
xchg
push
lods
jo
mov
inc
add
pop
cs
cmp
sbb
lret
ds
add
add
insb
iret
dec
cmpsb
arpl
xor
xor
sub
mov
mov
add
xchg
movsl
jns
sbb
xlat
xchg
xchg
pushw
add
ljmp
dec
punpckhwd
loopne
add
add
mov
inc
pop
inc
add
jl
repnz
jge
mov
cs
add
popa
adc
mov
mov
lcall
jl
inc
add
addb
stc
inc
and
fnstsw
jns
lcall
aaa
lahf
iret
movsl
and
pop
add
xorl
sbb
pop
and
add
sub
xor
mov
jecxz
and
jg
add
ds
add
pop
xlat
test
cmp
int
jne
inc
add
rcrl
imul
popf
dec
jb
stos
cmc
cmp
repnz
jb
add
dec
mov
inc
cld
and
mov
pop
cld
pop
push
adc
bound
dec
xchg
mov
inc
add
inc
lods
mov
add
inc
add
inc
inc
data16
push
inc
add
imul
shr
sub
ret
jmp
add
xchg
mov
popa
sbb
and
aad
mov
fildl
movsb
test
out
mov
in
and
add
mov
bound
and
cs
test
addr16
mov
add
add
cmp
or
negb
add
pop
les
into
xchg
jg
out
movsl
adc
xor
adc
dec
jle
inc
xchg
scas
mov
int3
sahf
sub
xor
adc
and
movsb
sar
mov
loope
scas
ret
cltd
xor
leave
sbb
jg
mov
dec
add
clc
jl
test
pop
adcl
lret
inc
lds
fimuls
xor
scas
xor
imul
jmp
call
push
in
incl
lahf
cwtl
movb
in
imul
mov
enter
addl
mov
cwtl
stc
sahf
and
add
out
push
sub
rolb
sub
cmp
add
add
outsl
inc
stos
pop
loope
dec
mov
sub
pop
jnp
add
add
hlt
icebp
jo
push
fnstsw
sti
inc
add
lds
push
movsl
xor
aaa
into
daa
cmp
adcl
xor
add
cmpsb
nop
stos
into
shl
cmc
insb
jge
mov
out
mov
hlt
jo
sub
ja
dec
addb
cwtl
or
fbld
aaa
mov
nop
push
add
addb
jne
and
fisttpll
js
test
ret
pop
mov
dec
mov
pop
mov
xor
adc
outsl
sahf
outsb
scas
jb
xchg
add
shufps
outsb
lret
stos
shll
add
mov
and
imul
or
dec
hlt
mov
pushf
fdivrs
jg
mov
aas
adc
aaa
mov
lea
jp
sub
in
enter
push
shrl
mov
test
add
mov
test
sbb
popl
lds
in
rcr
mulb
add
sar
jg
push
add
test
and
insb
or
pop
call
pop
ljmp
add
add
data16
or
sbb
and
jg
mov
in
iret
call
cwtl
jb
pop
xor
push
or
mov
push
lea
add
out
enter
add
push
xchg
mov
xchg
rolb
or
sarb
fists
imul
push
or
pushf
push
dec
adc
and
lahf
adc
add
cmp
adc
or
aaa
scas
cmpsl
push
add
negl
or
inc
add
adc
popf
xor
add
push
mov
dec
mov
mov
cmp
rolb
dec
aam
add
sub
xor
movsb
les
loopne
mov
add
pop
mov
movb
cmp
cwtl
pop
imul
cmovg
xchg
test
repnz
or
out
add
test
push
sbb
lock
arpl
adc
push
dec
jae
inc
test
hlt
ret
jno
cmp
dec
pop
flds
pop
dec
lods
add
out
clc
sahf
mov
add
add
std
mov
pop
cltd
sbb
pop
xchg
test
mov
addr16
test
lcall
dec
loopne
add
inc
add
sbb
pop
dec
jg
sarl
rorb
add
add
cmpsb
movsb
jecxz
arpl
loope
jo
mov
sbb
mov
and
ret
mov
push
in
repz
inc
add
out
push
int3
in
sbb
call
mov
pop
push
sahf
cmp
and
mov
fisubrl
or
mov
movb
or
enter
lahf
or
ret
dec
adc
mov
sub
pop
das
cmp
movsb
popf
push
inc
jns
add
or
fcom
push
call
dec
sub
mov
push
jecxz
addb
jb
int3
pusha
add
mov
cmp
push
add
xor
pop
lods
fnstenv
out
addr16
movsl
push
push
pop
lods
and
jne
sti
pushf
sbb
mov
pop
addr16
or
xchg
gs
sbb
test
in
repnz
add
fildll
imul
jnp
sub
xlat
movb
std
mov
fiadds
add
push
cltd
cmp
or
cwtl
and
movsl
lret
or
iret
out
mov
mov
xor
test
mov
movsb
xor
pusha
add
fidivs
adc
arpl
test
add
je
sahf
push
push
add
add
xchg
je
xchg
nop
push
pop
mov
icebp
pop
lea
xor
add
loop
addb
jecxz
pop
dec
add
sti
aam
pushf
shrl
scas
aam
bound
ret
int3
clc
dec
jp
out
test
xor
andl
fldt
popf
mov
mov
add
and
sub
xchg
mov
mov
cmc
imul
loopne
inc
cwtl
mov
movsb
cwtl
loop
pop
push
pop
jae
popa
jns
or
dec
dec
imul
jmp
mov
cmp
sub
sub
cmp
add
or
inc
cld
sub
ss
int3
mov
mov
int3
mov
or
cmpl
pop
mov
addb
stos
adc
sub
cmpsl
rclb
hlt
popf
push
add
dec
push
test
jno
push
roll
push
stc
ret
test
ja
das
ljmp
mov
mov
es
add
sbb
pop
cmp
sub
xchg
fcmovnb
add
in
push
loop
mov
data16
outsl
stc
out
pop
jo
inc
mov
sub
jg
xchg
jmp
stc
push
mov
aad
mov
and
mov
dec
pop
movb
mov
pushf
sub
scas
jg
add
adc
jns
add
jne
mov
push
ret
out
xchg
jge
push
xchg
cmp
sub
cmp
daa
movzbl
push
test
mov
jbe
or
jbe
mov
sub
xchg
leave
fistl
cltd
outsl
or
js,pt
inc
jecxz
dec
and
mov
add
jo
jl
outsb
xlat
pop
pop
adc
out
jb
leave
aaa
mov
or
sahf
lcall
add
xchg
pop
fsubrp
mov
sub
mov
fdivl
inc
add
cld
loopne
pop
sub
popa
add
push
and
addr16
stos
pop
fiadds
ljmp
cmc
jl
cmp
pop
data16
add
lea
mov
nop
movb
repz
in
sub
call
add
mov
jne
dec
lahf
fldenv
sbb
ss
mov
add
add
dec
pusha
add
mov
add
inc
out
lcall
mov
cmp
imul
test
and
repnz
add
jo
out
fadds
inc
add
ds
pusha
add
xchg
and
imul
xchg
cmc
stos
pop
inc
les
imul
or
addr16
or
int
cmpsl
movsl
xchg
les
and
pop
movsb
iret
or
cwtl
ds
adc
pop
or
mov
fcompl
mov
xchg
test
add
mov
xchg
cwtl
cwtl
lcall
mov
add
adc
or
and
shl
mov
add
sub
push
cli
pop
adc
popa
fwait
push
mov
sbb
cltd
sbb
outsl
dec
cmp
cltd
dec
adc
push
inc
mov
cltd
sbb
lods
scas
arpl
push
add
testb
adc
jae
jns
pop
or
add
imul
cld
cmpsb
push
jle
xchg
stc
sub
lods
mov
sbb
js
mov
cltd
data16
repz
jmp
sub
jg
add
dec
lds
das
mov
clc
dec
dec
lgs
lret
aaa
or
inc
add
sub
addb
inc
add
cmp
lods
xchg
add
outsb
xor
push
cmp
xlat
xchg
xor
or
lret
sub
ljmp
or
bound
lcall
xchg
mov
pushf
loope
dec
mov
jns
ds
test
mov
add
in
out
inc
add
sub
add
add
lea
pop
add
nop
insl
dec
ficoml
push
add
mov
push
mov
add
lods
in
add
jge
insb
sbb
test
loopne
fldenv
inc
add
mov
inc
add
or
sbb
jge
insb
jmp
std
mov
je
insb
test
mov
cs
in
dec
imul
ret
add
jp
test
push
imul
mov
or
fisubrl
call
cmpsb
push
fs
dec
sub
fmul
cmp
insb
popa
ret
in
add
mov
add
cltd
movsb
pop
jp
loopne
dec
test
inc
sbb
pop
mov
and
dec
dec
pop
mov
pop
xor
out
xor
xor
fdivr
lcall
add
arpl
xchg
mov
pop
sbbl
in
in
test
jbe
sbb
popa
psadbw
aaa
push
scas
cmp
dec
pusha
add
add
lods
add
jmp
mov
dec
jecxz
pop
lods
lret
inc
add
add
jns
stos
cltd
jae
mov
mov
fisttpll
shl
hlt
sbb
add
jge
pop
lcall
cltd
iret
rorb
add
sar
jle
pop
cmp
cmp
or
sbb
xchg
push
arpl
sbb
xchg
mov
addb
bound
sbb
xor
push
repz
lret
sbb
add
push
or
mov
sub
in
lods
xchg
lcall
push
movsb
xchg
cmp
in
fmuls
mul
push
stos
repz
add
inc
add
jg
add
stos
mull
xchg
xor
xor
ret
leave
add
mov
scas
sti
lods
popa
test
jle
imul
roll
adc
sbb
lods
dec
jge
mov
out
shrb
repnz
dec
inc
add
and
movsb
loop
call
pop
push
adc
inc
jmp
add
inc
int3
xchg
mov
and
xor
add
and
mov
out
add
cmpsl
pusha
add
add
jg
sub
repnz
and
pushf
iret
push
cmp
cmp
pop
add
movsl
push
in
add
dec
jb
lcall
mov
inc
leave
push
add
adc
add
and
mov
out
adc
montmul
cmpsb
addb
sti
mov
cmp
insl
pop
mov
aad
mov
push
loop
pusha
add
xor
cwtl
int3
mov
add
add
mov
mov
xchg
dec
xlat
add
or
cmp
inc
add
jnp
arpl
aaa
out
stc
cmpsl
jns
inc
jae
dec
test
mov
add
addb
push
fisubs
xchg
xchg
gs
push
rep
ljmp
mov
into
lock
call
fbstp
dec
sbb
dec
data16
mov
lret
add
scas
xor
test
sbb
stos
cs
xchg
hlt
rdpmc
inc
push
add
xor
imul
add
repz
push
outsl
xchg
dec
xchg
jb
mov
lods
pop
nop
sbb
mov
add
add
add
fisubrs
dec
jecxz
and
pop
xor
mov
push
push
std
cli
jl
xchg
ss
sbb
icebp
sarb
rcll
mov
add
jmp
js
add
cmp
jecxz
mov
push
push
inc
jo
mov
into
jns
pop
test
enter
dec
add
or
mov
ds
push
add
sbb
pop
xor
or
mov
adc
call
insb
push
mov
iret
fxch
cli
cmc
stc
pushf
outsl
in
push
mov
out
fstpt
mov
add
pop
mov
incl
repz
repz
lcall
inc
cmpsl
sbb
leave
inc
add
or
xchg
jnp
add
fucomp
mov
add
mov
int3
sbb
and
add
in
xlat
jno
cwtl
stc
lods
jge
add
ret
pop
fmuls
add
and
dec
xchg
mov
push
mov
std
xchg
aam
sbb
or
nop
mulps
bound
push
jne
mov
inc
mov
loopne
jb
ret
insl
jmp
mov
out
mov
mov
mov
imul
cmpsb
pop
and
sbb
or
in
cmp
lds
sti
jg
sbb
or
sub
out
fsubrl
imul
gs
jmp
fstl
inc
add
dec
xchg
add
add
test
sbb
push
sahf
pop
in
dec
mov
push
push
sbb
push
out
add
in
in
mov
inc
cmpsl
pop
pop
notl
push
inc
xchg
ret
adc
add
clc
xchg
movb
inc
add
sbb
push
add
add
jo
call
xchg
and
mov
jno
lods
mov
add
lods
push
mov
into
insl
jp
fcoml
out
adc
jno
inc
push
in
xchg
test
aam
arpl
inc
add
dec
xchg
leave
xchg
inc
add
push
add
sub
inc
mov
sbb
fs
inc
add
inc
and
or
add
ds
cmp
jmp
stc
push
sub
fists
lahf
test
int3
push
movsl
nop
adc
fstpt
loopne
leave
test
dec
jae
add
xchg
sub
clc
push
cltd
lret
push
bound
arpl
inc
add
add
add
push
xchg
sarb
pushf
in
fldenv
sub
std
test
xor
popa
sub
insl
arpl
add
adc
push
mov
xor
div
cwtl
hlt
pop
push
aad
jae
push
aaa
daa
xor
add
cmp
mov
addr16
stos
js
pop
jge
push
xor
out
in
cmp
cmc
xchg
shlb
dec
or
sbb
mov
xchg
int
xor
shrl
dec
xchg
dec
rolb
adc
inc
add
jb
and
aam
js
xchg
stos
fdivrl
repz
adc
add
out
lea
and
imul
clc
adc
sbb
pop
adc
mov
imul
mov
xor
loopne
jp
adc
inc
add
enter
sbb
icebp
cmp
add
pop
stos
pop
and
incb
jnp
sbb
lock
xor
push
push
jg
ss
sub
ja
push
mov
ss
movsl
jne
mov
add
data16
pop
lahf
push
inc
add
stos
adc
pop
pop
sub
mov
jmp
into
insb
inc
push
mov
jb
movsl
or
pop
iret
cmpsl
test
gs
push
xor
pop
mov
dec
mov
sarb
sti
les
enter
js
add
stos
mov
inc
stc
pop
mov
stos
xor
adc
jo
ss
cmp
aad
mov
fldl
jl
sbb
dec
cmc
push
mov
es
mov
cmp
sbb
arpl
js
daa
mov
mov
es
cmp
adc
pusha
add
push
cmp
call
add
dec
lret
push
dec
movb
sub
scas
xchg
sub
sbb
jbe
lea
imul
mov
push
sbb
adc
jno
adc
aam
adc
ss
das
xchg
scas
or
sub
fcom
fsubrs
loop
sub
fstpt
ss
or
nop
shll
bound
fcompl
adc
jns
xchg
in
dec
sbbl
pop
mov
adc
stos
out
mov
lret
mov
repnz
push
mov
inc
rolb
add
pop
pop
mov
inc
sub
or
clc
dec
addr16
add
sti
push
jle
ret
in
in
addb
mov
cld
dec
push
addb
iret
stc
mov
subl
mov
lcall
fisubs
nop
fcmove
mov
or
mov
cmc
adc
lods
or
mov
stos
sbb
insl
rolb
and
aad
cmpsb
in
sbb
fistl
movsl
lods
adc
iret
testl
out
sub
sbb
sbb
mov
out
sub
sbb
data16
jl
and
out
or
add
mov
inc
add
pop
sbb
clc
inc
out
bound
and
sbb
pop
inc
sub
add
push
sahf
cs
std
cmpsl
test
adc
jmp
loop,pt
mov
dec
and
mov
cmpsl
sbb
mov
mov
xor
sti
test
mov
outsl
inc
dec
sub
inc
add
mov
ss
xor
mov
jle
clc
stc
cmp
or
popa
iret
or
jne
mov
leave
in
add
std
or
add
in
dec
cmp
dec
push
test
or
daa
loopne
cmpsb
gs
mov
nop
sarl
pop
and
addl
aam
test
push
add
add
rcrb
in
nop
push
xchg
rcl
sub
dec
das
aaa
jbe
sub
add
add
movsl
mov
xor
test
inc
lods
lock
and
in
js
cmp
dec
rolb
fsubr
inc
mov
mov
mov
or
mov
lret
scas
and
push
fwait
mov
mov
out
mov
adc
popa
fidivs
mov
inc
add
pushf
jge
imull
outsb
push
add
jns
push
add
mov
add
sub
rolb
inc
jp
add
push
add
push
cmpsl
adc
or
imul
jmp
sub
pop
int
sub
add
push
sub
lock
cmpsl
xchg
call
pop
mov
add
push
adc
jb
out
or
jne
push
fdivp
jb
enter
mov
es
xor
ss
arpl
nop
cmc
jmp
jge
jmp
sar
inc
lret
mov
in
add
lock
ja
test
adc
addr16
lret
fwait
inc
add
stc
lret
push
xchg
inc
clc
xor
in
sti
into
gs
add
std
stos
push
test
mov
sbb
icebp
mov
jg
xor
scas
fnsave
add
or
mov
imul
dec
inc
add
mov
imul
and
aas
out
xor
or
hlt
jge
mov
lret
into
out
cmp
xchg
clc
and
call
ss
addb
stos
jmp
push
mov
push
pusha
add
mov
sti
mov
ja
xchg
dec
pop
and
inc
mov
cltd
pop
push
outsl
js
cmc
jb
jbe
inc
mov
daa
aad
shl
fstps
bound
sub
dec
addr16
cmc
mov
sti
inc
add
shrl
xor
incl
arpl
push
hlt
mov
add
sar
aam
jmp
push
jbe
sarb
sbb
cmpsb
mov
mov
xor
mov
mov
roll
add
into
adc
shrl
fldl
nop
loopne
add
aad
mov
test
jne
push
or
jnp
enter
lcall
pop
nop
movb
add
adcl
pushf
int
jb
stos
push
xchg
addb
mov
jp
pop
xor
inc
jb
mov
rcl
adc
pop
pop
in
scas
loop
jae
xchg
jge
out
fiadds
jge
inc
and
mov
cmp
outsl
lods
and
gs
and
dec
fwait
jmp
lods
out
rolb
add
lods
sar
sub
test
mov
mov
sub
add
mov
push
dec
adc
push
and
lock
mov
xor
out
xor
lods
cwtl
std
mov
ja
insb
in
ret
sub
rcrb
rorl
push
sbb
pop
inc
lods
dec
jae
pop
dec
adc
rolb
cmc
cmp
adc
xchg
sub
aam
xchg
fistpll
shl
ud0
inc
loope
add
jp
push
xchg
loope
add
mov
add
mov
outsb
jo
xchg
arpl
iret
inc
push
out
and
dec
pushf
mov
movb
xchg
data16
pop
ret
in
sub
sbb
mov
push
and
scas
push
mov
xor
inc
inc
add
or
jl
out
pop
testl
sti
cmp
dec
fildll
insb
pop
jns
lret
mov
lret
jg
fisubl
ret
loop
jmp
sub
pusha
add
sbb
mov
cmc
xchg
aad
pop
call
jno
sti
lret
rolb
mov
push
repnz
inc
shll
cmpsl
setg
arpl
mov
lret
push
add
dec
mov
jle
loopne
aam
in
add
lret
iret
js
inc
mov
popf
pop
ja
pusha
add
add
jbe
mov
xchg
jne
scas
movsl
mov
jge
or
add
addb
mov
add
mov
inc
add
fisubs
jl
int
popa
cmpsl
add
add
into
cwtl
sub
xor
or
test
and
je
add
add
inc
add
inc
xchg
shll
add
mov
and
ret
in
mov
fnstenv
pop
pusha
add
xchg
pop
in
je
jae
fwait
xchg
ret
sub
lods
out
cmpsb
mov
imul
jmp
rolb
jle
mov
enter
jne
add
add
ja,pn
xor
dec
push
rcrl
cld
int3
mov
test
arpl
sbb
fcmovb
dec
dec
in
ja
mov
or
loopne
insl
jmp
outsl
fisttpl
cld
sbb
or
pop
imul
or
cmc
pusha
add
pop
stos
insl
pop
ja
mulb
inc
cmp
and
dec
push
je
cmpl
sub
hlt
push
mov
cmp
mov
movb
jo
cmp
add
nop
jbe
leave
mov
push
aas
addr16
push
popa
je
cltd
jno
mov
add
popf
int3
leave
imul
stc
int3
loopne
cmc
adc
repnz
mov
testb
xchg
ret
je
add
fnsave
leave
mov
in
pop
data16
push
inc
je
lods
push
adc
ret
pop
add
push
mov
jl
xor
scas
daa
jns
insl
mov
out
mov
xchg
jge
push
or
add
cmp
pop
xchg
call
outsl
pop
int3
jg
cmp
dec
int
mov
addr16
mov
pop
push
and
out
push
cmpsl
inc
add
add
add
sub
arpl
mov
dec
out
repz
pusha
add
add
mov
lods
push
out
movsl
les
out
and
lahf
out
add
jns
cmpsl
xchg
in
jmp
movsl
cmc
pop
in
aam
xchg
stc
pop
jp
arpl
cmp
inc
mov
pop
mov
xchg
pop
movsl
inc
cmp
cs
add
sti
repnz
icebp
fs
inc
movb
or
loopne
decb
xchg
add
jl
pop
daa
sub
xor
add
cmp
addb
enter
push
xor
or
fmuls
aaa
push
sbb
dec
dec
add
lahf
imul
jae
lds
add
fs
jl
mov
xor
xor
iret
cmc
fwait
jb
inc
dec
add
test
sarb
mov
jns
mov
lahf
outsb
sbb
mov
data16
pop
addb
out
dec
daa
mov
add
add
lods
xor
imul
imulb
into
mov
cltd
xor
add
cmp
sub
push
movb
repnz
mov
shl
sarl
cmpsl
enter
cmpsl
and
out
xchg
imul
xchg
ret
mov
daa
fsts
pop
push
pushf
cmp
xor
insb
std
inc
add
add
mov
int3
or
add
stc
sahf
push
pop
xor
ret
xchg
inc
in
in
stos
out
pop
movsl
lock
mov
push
add
cli
jmp
xlat
js
add
or
arpl
dec
lods
mov
ja
inc
add
add
aad
fidivs
add
mov
lcall
mov
lcall
add
data16
lods
addr16
enter
lahf
mov
add
push
into
sbb
dec
xchg
scas
and
xor
sub
push
outsb
std
xor
xorl
test
xchg
push
sbb
out
xor
mov
add
icebp
or
in
jl
sub
inc
add
pop
testl
daa
add
lret
es
xchg
loop
insl
mov
outsl
xchg
popf
mov
add
or
and
out
insb
xor
pushf
xchg
js
rorb
inc
add
std
sbb
add
jo
and
rclb
xchg
lods
pop
pushf
sub
add
mov
mov
lcall
loope
popf
out
mov
aad
movb
into
movsb
notl
nop
push
lcall
aaa
aas
dec
dec
xchg
rcrb
insb
in
dec
pop
mov
das
clc
in
add
sub
in
cmpsb
jnp
pop
push
aad
ret
jle
push
std
out
cmc
push
push
cmpsb
inc
add
fwait
test
xchg
jbe
scas
or
addb
and
jnp
cs
add
mov
sbb
loopne
sbb
es
ljmp
push
add
xchg
out
lods
xchg
jns
rolb
jp
xchg
aas
mov
xor
sub
push
mov
movsb
sub
pop
cmp
call
aaa
das
idivl
inc
loopne
addr16
shll
outsl
adc
mov
jg,pt
jb
rcll
fldcw
xchg
lcall
bnd
inc
xchg
outsl
nop
sets
inc
pop
cmp
clc
scas
addr16
xchg
lods
dec
into
fdivs
je
mov
stos
call
in
mov
out
and
rorl
sub
or
xchg
lods
push
les
pop
or
dec
ret
xor
jmp
pop
out
cmpl
add
add
stos
pusha
add
dec
pop
out
sbb
push
cli
cltd
jecxz
test
mov
sub
cld
sbb
iret
sbb
push
add
addb
cmc
xor
rcr
mov
cmp
jbe
push
add
push
pop
mov
push
and
cli
je
sbb
inc
add
push
add
movsb
mov
lods
out
shlb
sbb
inc
insl
movb
fdivrs
add
loop
sbb
outsb
cmp
and
and
gs
clc
aad
addb
dec
lods
in
enter
arpl
cmp
xlat
ja
add
rorl
into
stos
mov
daa
mov
addb
loope
mov
add
nop
cmpsb
sub
dec
xchg
sahf
mov
mov
test
pop
sub
loop
in
push
ss
push
add
xor
xchg
out
pop
inc
add
addb
adc
lahf
pop
cli
daa
push
jno
int
scas
outsl
call
push
repz
gs
sub
mov
cmpsl
cmp
add
fstps
nop
movsb
pusha
add
xchg
test
add
add
jle
dec
xchg
outsb
sbb
stos
and
fyl2xp1
lock
out
scas
test
mov
mov
push
sub
add
