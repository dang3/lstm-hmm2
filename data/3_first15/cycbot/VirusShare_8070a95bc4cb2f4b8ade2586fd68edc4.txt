iret
sbb
dec
movb
daa
in
pop
or
mov
in
push
add
xor
out
adc
fisubrs
arpl
sbb
add
inc
xchg
dec
negl
sbb
add
fsubrl
pop
sub
xchg
xchg
cmp
inc
add
cmp
inc
add
dec
inc
add
push
lods
and
cmp
pop
jg
dec
jp
push
xchg
push
ss
inc
add
aas
movsl
mov
mov
cmc
stc
mov
xor
nop
gs
stos
mov
mov
stos
and
mov
and
adc
xchg
scas
imulb
cltd
cwtl
out
adc
fdivs
mov
xchg
ja
icebp
lock
sbb
sub
fidivrl
and
add
sub
call
fcomps
mov
mov
addb
add
ja
fdivp
cmp
flds
leave
inc
dec
inc
add
push
mov
xor
jne
xchg
fidivrs
add
inc
outsl
scas
inc
rolb
fdivrl
pop
loope
push
jge
xor
pop
ja
fsts
pop
movsl
mov
out
sbb
mov
sub
push
add
jge
cs
add
inc
movb
xchg
sub
dec
and
cld
fwait
jo
in
sub
jg
std
cmp
les
mov
mov
ja
add
sbb
xor
shr
dec
push
cmp
or
cwtl
or
daa
pop
mov
add
add
mov
out
jmp
add
push
movsl
mov
and
adc
aaa
into
lret
loopne
repnz
sti
adc
jne
dec
in
addr16
push
pop
sbb
add
js
and
add
jns
scas
je
adc
push
mov
sbb
dec
xor
mov
inc
add
add
add
jo
sub
add
lods
lods
aaa
inc
lret
xchg
jl
add
sbb
cltd
lret
pop
aad
movsl
test
push
xchg
js
leave
repnz
push
jnp
repz
shrl
sub
outsl
mov
in
push
test
jno
sub
sti
aam
dec
sbb
mov
imul
nop
jns
test
jne
mov
cld
mov
and
stos
cmp
ds
rolb
mov
add
sbb
jl
arpl
add
xchg
push
mov
inc
nop
rorl
push
xchg
mov
bound
push
mov
mov
or
mov
push
add
in
push
mov
add
or
sbbl
add
push
dec
push
add
ud0
pop
ret
mov
or
add
mov
xchg
cs
dec
jmp
add
xor
jns
xchg
xchg
pop
ret
test
add
mov
or
outsl
fmul
js
loopne
add
add
movsl
sbb
inc
sub
scas
xchg
nop
jp
imul
les
add
lcall
xor
movsb
stos
mov
lahf
jg
add
addb
jl
aaa
mov
dec
adc
add
add
xchg
test
mov
lods
add
int
aas
fsubl
or
sbb
mov
add
xchg
jbe
add
and
adc
enter
mov
add
jle
cli
mov
cli
adc
jle
push
dec
addr16
fbld
fistl
and
jp
push
adc
dec
iret
insb
cmpsl
scas
fs
add
in
lods
loopne
mov
adc
rolb
sbb
xchg
pop
mov
lea
push
lods
xor
add
out
cmc
cmovb
pop
jl
mov
jmp
in
pop
movsb
mov
mov
aad
adc
push
sti
test
xor
imull
xor
mov
rcll
inc
add
add
ds
push
or
aad
out
mov
jbe
rcrl
icebp
out
push
clc
pusha
add
mov
movb
add
stc
dec
les
pushl
andnps
add
dec
mov
dec
dec
push
nop
cs
mov
enter
ret
rcll
sbb
mov
insb
aam
mov
enter
add
rolb
sbb
mov
xchg
mov
xchg
call
lea
lods
daa
inc
add
add
aam
ja
add
icebp
mov
scas
jmp
fisubs
mov
or
cli
xor
push
pop
pusha
add
add
xor
jecxz
or
add
mov
lock
sbb
pop
lahf
add
or
lock
mov
aad
add
dec
fsubrl
sub
add
jnp,pn
cld
mov
add
push
ficompl
push
loope
lret
jp
xchg
aas
lods
cmp
push
jnp
jae
pop
sbb
addb
mov
mov
loopne
add
xor
scas
cwtl
xchg
lret
outsb
push
test
jge
inc
aam
pop
mov
push
sbb
jmp
rorb
or
add
repz
mov
cmp
add
add
and
std
jne
fcmovnb
popa
mov
push
js
push
xor
add
in
push
out
mov
fisttps
sub
xchg
xchg
mov
pop
sub
mov
add
jecxz
push
ss
cli
jge
dec
jmp
sarb
mov
xchg
xchg
hlt
lret
and
in
lcall
hlt
dec
pop
cld
xchg
pop
or
in
add
cli
jae
dec
ret
out
jno
clc
scas
stos
adc
xor
add
xlat
icebp
sbb
data16
add
sahf
push
loopne
jo
push
xor
shl
nop
add
mov
ret
add
add
fidivs
out
add
stc
or
jb
leave
insb
insb
push
addb
lea
mov
es
xor
sbb
add
xor
fmulp
xor
lock
aaa
pop
adc
jl
or
add
fs
add
int3
loopne
mov
iret
jnp
sbb
adc
push
std
sbb
xor
add
sub
mov
int
sbb
pop
fstpl
push
loop
pop
test
jge
jo
mov
scas
add
push
sub
sbb
into
pop
ds
jbe
jo
cmpsb
addr16
cmp
inc
add
in
jge
sbb
dec
dec
fwait
fld
add
fdivp
xor
sub
movsb
shrl
mov
and
outsb
rep
jle
push
jle
pusha
add
jmp
fisubrs
fwait
mov
cli
inc
pop
mov
popf
pop
jmp
call
adc
shlb
jmp
cwtl
sti
addr16
int
aaa
push
add
mov
add
adc
add
xchg
mov
fcmove
and
pop
add
icebp
jmp
add
inc
add
sbb
cltd
cmp
pop
cltd
mov
jno
jns
dec
pop
sbb
loop
or
cmpsl
push
sub
cltd
leave
and
mov
cli
into
xor
dec
push
js
scas
sbb
push
xchg
sub
in
dec
je
call
add
push
mov
or
xchg
add
shll
xchg
inc
add
pusha
add
movsb
and
loop
fsubl
sub
mov
jge
clc
scas
rcrb
sti
pop
bound
jo
jo
movb
pusha
add
xor
add
int
and
jbe
or
dec
adc
inc
add
add
imul
mov
adc
rorl
add
dec
test
lea
cmp
inc
add
mov
sbb
or
dec
stc
xchg
pop
adc
pop
stos
sub
aad
jmp
add
pop
mov
add
mov
add
fildll
mov
call
push
sub
mov
inc
add
fwait
xor
stc
lret
lock
push
mov
or
xchg
cmc
mov
fucom
mov
add
rcll
inc
nop
jecxz
add
adc
cwtl
sbb
sub
adc
sub
cmp
cmp
mov
xor
mov
add
push
jae,pn
movsl
mov
leave
icebp
aas
dec
iret
mov
cmp
test
mov
jmp
repnz
and
dec
outsb
sbb
add
xor
ss
sbbl
mov
add
cmpsl
cmp
pop
push
jecxz
jnp
repnz
push
les
notl
push
pop
outsb
dec
cmpsl
inc
add
sahf
lahf
mov
push
add
out
fdivl
mov
adc
lcall
jo
sub
add
and
add
sbb
push
push
push
cs
xor
aas
jecxz
adcl
mov
xchg
xor
add
test
jmp
adc
add
mov
les
lods
ret
out
nop
orl
outsb
jb
scas
pop
aad
ss
pop
or
xchg
insl
stc
fdivrl
add
mov
cmp
or
cmp
loope
sub
jg
push
test
sti
enter
jg
rcrl
jb
add
xchg
jbe
les
mov
cmpsl
mov
mov
movsl
out
inc
sbb
mov
pop
jnp
scas
add
add
out
filds
lcall
loop
ror
pop
jmp
stc
inc
sub
mov
mov
aas
xchg
mov
int3
xchg
sbb
mov
stos
repz
push
test
push
stos
insb
jbe
dec
add
stos
lods
scas
xchg
cmpsl
mov
js
mov
cld
and
sbb
mov
add
cmpsb
lods
or
mov
add
ss
jg
stos
es
mov
outsl
jo
addb
fiadds
ss
inc
or
pop
movsb
fmul
sub
sbb
shl
je
js
in
pop
mov
fistpl
add
daa
es
sub
mov
call
int
push
sbb
sub
cmpsl
adc
mov
into
movsl
clc
pushf
cmp
jg
movb
aas
decl
in
push
or
adc
test
xchg
or
mov
sub
out
mov
mov
mov
loopne
or
dec
dec
in
add
cmp
js
dec
arpl
jge
enter
int
pop
and
xchg
xchg
cltd
xlat
out
dec
enter
stc
mov
inc
add
sarl
test
test
add
arpl
arpl
sbb
push
mov
adc
movsb
ficoml
xchg
or
pop
es
pop
sti
xchg
fistl
in
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
repnz
mov
sub
mov
cs
push
push
lret
jmp
add
add
fisttpl
aad
add
mov
mov
pop
sahf
mov
cmp
pop
and
mov
jne
pop
fdivr
lcall
test
push
mov
xor
mov
xchg
cmpsb
sbb
push
je
add
push
movsl
ds
int3
lods
sbb
cmp
pop
nop
push
stos
mov
xchg
xor
push
enter
mov
das
mov
lods
xchg
test
mov
pop
in
pop
dec
or
lods
aaa
cs
and
fadds
inc
cmp
add
ljmp
and
mov
add
pop
add
add
adc
adcl
fs
inc
add
aam
lds
std
jge
add
repnz
mov
sbb
movsl
cmpsb
or
in
fwait
ss
and
add
lcall
add
loop
inc
mov
pop
data16
cmp
jle
out
sbb
rolb
add
insl
cli
inc
fucom
or
dec
inc
int3
call
call
pop
lret
add
add
dec
and
or
add
adc
add
inc
inc
pop
inc
iret
iret
push
lods
inc
push
add
lock
ret
pop
loope
xor
fdivrl
mov
fstp
push
sbb
scas
sbb
das
addb
add
xor
sub
sub
sub
in
sub
add
bound
adc
mov
leave
jo
cld
pushf
and
sbb
cmpsl
repnz
jmp
loopne
jmp
sbb
and
mov
jae
sub
push
int
adc
aaa
dec
xchg
mov
push
std
in
add
psadbw
dec
lcall
pop
movsl
rorb
jb
mov
adc
cltd
in
push
outsl
dec
xchg
pop
sbb
cmp
xchg
movsb
nop
scas
cmp
roll
cmp
cmc
dec
cmpsl
mov
xchg
lock
cmp
add
adc
fisubl
add
or
sbb
and
sub
sub
dec
sub
and
pop
push
roll
inc
add
addr16
cmpsl
jo
xor
movsb
call
int
mov
adc
outsb
dec
pusha
add
in
xor
add
dec
pop
push
add
pop
cmc
dec
mov
addb
add
nop
lret
cwtl
push
inc
add
adc
sbb
mov
or
loopne
test
repz
pop
out
outsb
fadd
add
add
fcomps
movsb
sbb
xor
adc
clc
jae
cs
sar
push
pop
aam
jmp
mov
lods
daa
push
cwtl
scas
sti
jmp
pop
std
sub
cmpsb
xor
inc
int3
sahf
test
adc
rolb
outsb
jge
sbb
jecxz
lock
inc
sbb
inc
inc
push
aam
addb
repz
hlt
sbb
dec
fisubs
inc
add
adc
or
cmpl
add
mov
adc
lahf
pop
paddw
add
or
addb
dec
stos
mov
loop
add
and
jge
add
sbb
icebp
push
push
inc
add
add
mov
mov
rol
add
adc
fidivs
imul
aad
ficomps
xchg
mul
test
pusha
add
or
lods
mov
mov
dec
dec
jecxz
test
dec
jbe
rolb
or
int3
out
cwtl
add
stos
gs
cmpsl
add
push
add
xchg
mov
dec
dec
jbe
adc
pop
jno
mov
adc
or
je
push
dec
xor
pop
into
cmp
mov
scas
cwtl
std
push
xor
xor
or
test
das
int3
popf
or
and
nop
mov
les
pushf
ret
mov
cmp
mov
sbb
repnz
jnp
lock
add
add
jns
push
fstl
mov
into
push
dec
lds
cmc
jg
sbb
cmp
and
out
cli
sub
push
push
mov
icebp
mov
sbb
cmp
adc
xchg
incl
hlt
sbb
jp
fistps
xor
bound
jl
lods
xor
je
inc
add
pop
lds
xchg
leave
mull
cmp
add
add
call
cmp
dec
lods
shr
cli
xchg
xlat
push
lock
stos
aad
mov
sbb
xor
jns
fstps
js
stc
mov
push
xchg
mov
pop
mov
int3
sahf
lahf
push
imul
mov
sbb
clc
icebp
xor
stos
nop
mov
popf
scas
dec
insb
jge
and
pop
or
add
cmpsb
xor
xchg
pop
insl
cmp
ljmp
outsl
inc
cs
xor
mov
and
leave
nop
adc
jmp
inc
jmp
mov
or
test
fiadds
xchg
enter
addb
xchg
adc
inc
arpl
icebp
outsb
push
add
sub
xchg
scas
xchg
lcall
dec
out
stc
sub
sahf
aam
dec
rcrl
fbld
mov
push
fwait
and
stos
scas
in
xorl
add
add
and
pusha
add
add
xlat
mov
add
outsb
sub
in
or
cmp
cmp
sbb
add
out
es
adc
repz
pop
jge
and
sbb
outsb
push
add
pop
adc
lret
xor
adc
mov
mov
test
inc
add
and
cmpsb
sbb
std
sbbl
lahf
fldenv
cmp
dec
xor
sti
sbb
test
mov
mov
daa
pushf
mov
outsb
in
mov
js
add
mov
sub
aas
popa
arpl
and
add
test
add
dec
bound
adc
jecxz
into
popa
repz
jmp
rcll
cmpsb
clc
lods
xchg
in
sub
jl
leave
cmp
add
or
fdivrs
add
imul
int3
scas
xor
addr16
xor
sub
push
in
sbb
xor
andl
xor
adc
or
cs
add
jge
sbb
les
pop
hlt
cmpsb
int
pop
push
aaa
sbb
add
xor
je
jb
test
add
fisubs
push
test
add
ja
imul
sub
push
jecxz
mov
cmp
add
lahf
stc
hlt
nop
fwait
sub
add
pop
in
push
mov
push
add
fwait
mov
fwait
mov
movsb
insb
test
js
xlat
fwait
sarb
jb
cmpsb
cmp
sbbl
xor
xchg
das
scas
test
push
xchg
out
add
bound
xor
add
test
lcall
fldenv
pop
push
enter
add
fimull
add
testl
and
jl
mov
push
pop
js
xor
add
xor
ja
fwait
enter
cmp
cltd
inc
aam
sbb
xchg
jecxz
aad
or
pop
out
xor
pop
scas
xchg
sbb
adc
loope
in
jo
insb
addb
jb
sub
push
cmpsb
in
jmp
cmp
loopnew
sub
imul
arpl
cmp
dec
pop
ds
pop
push
nop
std
out
jnp
in
hlt
xchg
loopne
jl
add
push
test
sbb
sub
cmpsb
mov
add
push
bound
dec
movsb
push
adc
mov
fbstp
jl
jecxz
mov
lret
in
add
dec
cmpsl
in
push
add
add
pop
xchg
jno
xchg
mov
add
stos
je
mov
cld
inc
add
push
add
inc
sbb
in
xor
or
xchg
jne
inc
add
add
or
xlat
jecxz
cmp
add
lahf
movsl
addb
jecxz
imul
lock
cmpsl
or
sub
jb
dec
loopne
enter
lods
lods
repz
sahf
movsl
pop
adc
mov
mov
cmp
aaa
sub
fcomps
adc
mov
pop
inc
add
xchg
dec
xor
pop
dec
and
ret
adc
sub
imul
or
mov
push
xlat
jp
and
push
mov
pop
mov
cmc
xor
jg
sbb
adc
jecxz
into
popf
fstps
adc
clc
inc
add
addr16
shrl
mov
ja
mov
mov
mov
test
stos
int3
add
mov
add
add
dec
cmpsl
adcl
jne
mov
jmp
or
xor
mov
std
js
mov
mov
movsl
and
shlb
add
add
jecxz
jae
inc
push
insl
das
jecxz
rcrl
xchg
shll
shll
mov
push
sahf
aaa
sbb
loope
jmp
xor
jns
add
cmp
jb
push
rolb
pop
and
inc
add
lds
movb
lea
mov
pop
movzbl
shll
call
int
and
add
jg
jb
pop
mov
jno
push
outsl
cmp
and
movb
cmpsl
jne
fstpt
cmp
add
adc
lds
int3
data16
stos
sbb
add
and
jmp
fwait
cmp
xchg
add
add
or
movsl
mov
mulb
jmp
cmp
jp
lahf
xchg
pop
inc
pusha
add
cmp
les
push
rclb
mov
ja
xor
xor
test
cmp
push
sub
sbb
shrl
lock
mov
xchg
add
or
or
jbe
jmp
xor
add
adc
addl
jns
cmp
in
jmp
pop
out
pop
add
fwait
inc
jb
cmc
sub
mov
add
fcos
test
aam
pop
ficompl
pop
xor
adc
and
and
mov
add
and
ret
dec
inc
xchg
inc
cmc
lahf
addb
sub
inc
inc
pop
ljmp
rolb
xchg
inc
add
pushf
mov
add
cmpsb
adc
mov
push
fcoml
push
ljmp
addb
mov
cmp
mov
fwait
dec
mov
js
add
dec
mov
sub
mov
pop
repnz
mov
out
cmc
loope
addb
outsl
inc
in
cmp
add
inc
mov
mov
jle
lds
rorb
leave
mov
add
or
cmpsl
cmp
adc
fdivrp
or
push
jecxz
cmp
add
dec
lods
lret
aam
add
push
aaa
shl
iret
out
jne
jl
and
jge
mov
stc
add
jns
fcmove
adcl
mov
xor
add
xor
adc
fwait
movsb
lods
dec
mov
mov
iret
in
cmpsl
or
pop
inc
add
inc
add
add
sbb
mov
mov
imul
jnp
cs
mov
aaa
adc
in
mov
pop
icebp
mov
sub
cld
ljmp
jge
std
dec
cwtl
int3
and
dec
adc
cmp
push
add
mov
xor
add
out
cwtl
jbe
inc
add
pop
mov
jg
fmulp
mov
ja
not
dec
gs
adc
xchg
sub
insl
es
cmpsl
in
lock
lods
fisubs
sbb
testl
mov
sub
test
inc
fcoms
lahf
addb
or
add
mov
add
jp
sbb
int3
pop
rcll
cmp
pop
mov
adc
popa
nop
inc
add
aaa
xor
bound
test
mov
xor
enter
fcompl
dec
rclb
lock
sbb
add
add
sahf
mov
add
lds
adc
add
loop
hlt
ret
enter
and
push
daa
movsb
cli
xor
data16
lret
fs
ljmp
fs
sbbl
fidivl
arpl
push
or
faddl
gs
fstpl
jns
imul
add
jo,pt
pop
push
subl
repz
gs
faddp
sub
fxtract
pop
and
push
popf
pop
adc
xchg
mov
and
test
dec
insb
pop
pop
cmpsl
push
sahf
femms
xchg
push
push
ja
xchg
and
data16
test
test
aas
mov
mov
repz
rolb
loope
xor
jge
bound
pusha
add
jl
add
jno
fbld
adc
inc
and
inc
add
add
int3
mov
dec
inc
aad
cwtl
cmp
xor
add
add
push
sbb
sub
sarl
das
popf
xor
adc
jg
bound
sub
fmuls
popf
movb
call
xchg
lock
pop
cmp
sub
adc
mov
subl
cmp
adc
cmpsb
sbb
enter
mov
mov
loope
add
pop
mov
add
fs
in
xor
fisubl
fs
mov
dec
fdivl
pop
movsl
imul
lods
ret
test
dec
push
notl
cmp
mov
rorl
incb
movb
pusha
add
adcl
lock
or
insl
daa
not
fsubs
lret
fistl
in
dec
out
sub
imul
mov
mov
push
mov
add
push
sbb
and
push
jp
lahf
xor
addb
add
out
add
scas
dec
shll
pop
sub
imul
xor
repnz
cld
idiv
or
jl
add
and
lods
test
cmp
and
mov
push
lea
stc
mov
ja
add
repz
call
jo
jne
mov
jl
push
scas
cmp
rcl
xchg
stc
loop
push
sbb
adc
jae
ret
fs
scas
mov
cwtl
jbe
fcom
mov
insb
jne
sub
add
fwait
cmp
in
pop
jmp
sbb
dec
or
add
adc
mov
pop
xchg
outsb
sbb
and
shl
and
dec
ficoms
int3
adc
pop
or
fdivrs
mov
int3
outsl
or
nop
sahf
xor
movb
xchg
std
outsl
fs
aad
rolb
adc
push
mov
dec
outsb
mov
es
add
pop
outsl
mov
inc
add
mov
add
out
adc
xlat
icebp
aaa
mov
sub
movb
movsl
inc
inc
add
push
sbb
add
jns
xchg
or
sub
fs
ds
fldcw
or
xchg
ds
out
sub
sarb
sub
rolb
add
xchg
andl
xchg
inc
add
xor
mov
sub
jle
cmpsl
or
aas
cmp
and
add
add
mov
jg
or
lds
sbb
das
outsb
inc
fchs
int3
sub
jne
fidivrl
sbb
enter
adc
pop
lret
sbbl
or
jp
mov
jg
inc
fidivs
repnz
jp
mov
add
xor
jecxz
sbb
les
adc
addb
push
out
fmulp
aad
cs
and
out
stos
lret
mov
sbb
mov
enter
pop
cmp
jne
mov
mov
inc
add
pop
sub
jns
mov
dec
movsb
cwtl
push
push
dec
xor
adc
inc
add
mov
xor
lret
add
dec
mov
add
rclb
ds
int3
xchg
mov
add
enter
flds
add
cmpsl
enter
add
lahf
dec
cmp
jmp
cmpsb
out
sahf
fs
xor
jecxz
out
adc
dec
pop
or
faddl
cmp
movb
mov
jmp
stos
pop
popf
cli
lret
pop
jle
jg
cmp
fucomip
mov
mov
imul
sahf
aam
call
and
jo
xchg
dec
cmpsb
je
pop
js
call
dec
pop
loopne
mov
mov
outsl
insl
xchg
fdivrs
push
dec
add
add
jbe
std
xchg
clc
mov
sub
jg
rol
repnz
mov
add
mov
aaa
fdivrs
outsb
xor
jae
pop
sahf
mov
mov
shlb
shrb
pushw
lcall
cmp
xorl
les
dec
dec
dec
pop
mov
add
pop
mov
in
movsb
push
mov
inc
add
pop
punpcklwd
jo
ret
je
sub
mov
aam
add
adc
sub
and
jns
jne
add
jle
ljmp
pop
cmp
je
xchg
jmp
add
or
out
out
pop
mov
les
popf
lods
lret
out
sub
mov
sbb
add
ret
lea
inc
add
mov
out
ret
push
in
mov
icebp
adc
mov
repnz
inc
mov
testl
dec
push
ret
xchg
pop
mov
add
call
rolb
jne
xchg
in
mov
push
push
xlat
adc
xchg
out
xchg
sbb
in
notb
add
add
dec
inc
add
add
pop
fisubrs
nop
mov
and
ss
jne
es
scas
scas
out
addb
in
xchg
aam
xchg
int
adc
mov
jl
cs
pop
bound
mov
scas
xchg
pop
stc
out
pop
cmp
lcall
mov
das
repnz
cmpsl
test
mov
mov
out
or
leave
idivb
sub
fldt
rcr
clc
repz
sbb
out
ret
push
add
pop
sbb
test
rep
fbstp
add
dec
sub
add
add
test
add
cmp
push
xchg
inc
ret
in
arpl
mov
add
cli
pop
rcpps
test
cmpsb
sub
add
add
ds
sub
add
aas
push
gs
pop
and
scas
mov
and
scas
and
ja
jmp
xor
dec
pop
or
je
push
dec
pop
fwait
das
into
pop
pop
and
xchg
clc
arpl
or
lret
jae
cmp
jns
dec
out
sahf
inc
out
mov
dec
mov
lods
in
mov
ret
imul
jbe
test
leave
add
cltd
inc
add
mov
fwait
cmpsl
cmp
xchg
imul
or
aaa
jb
sbb
push
mov
or
push
jmp
sbb
jl
add
pop
mov
cmp
push
sbb
push
testl
out
mov
and
ja
pop
mov
out
daa
fcomps
pusha
add
inc
add
add
je
loope
pushw
hlt
sub
xchg
test
pop
jns
inc
add
insl
mov
pop
cmp
test
push
and
mov
jns
inc
add
call
dec
loopne
and
test
push
sub
cltd
xchg
dec
pop
int3
roll
add
sti
inc
add
push
sbb
cmp
hlt
ror
insb
inc
add
add
jbe
addr16
jnp
rolb
rolb
add
stc
inc
add
pop
adc
xchg
cmpsl
jo
insl
xchg
xchg
imul
fisttps
inc
add
xchg
out
push
add
mov
bound
jns
fwait
pop
mov
loope
add
add
sbb
icebp
pop
mov
pop
fisubrs
fadd
add
pop
xlat
push
xchg
ret
addr16
mov
add
or
adc
cmpsl
js
mov
outsb
push
add
ja
mov
pop
pop
push
clc
mov
push
add
lock
hlt
out
pop
adc
cld
pushf
addb
push
mov
add
test
fldt
push
dec
fists
dec
fsubp
mov
jp
xchg
and
mov
std
and
push
and
mov
push
jl
add
test
sub
ds
sub
inc
add
push
mov
rorb
adc
add
pop
ror
shr
xchg
mov
data16
xchg
push
inc
add
push
add
pop
or
imul
lods
push
push
mov
lret
and
hlt
testb
add
cmpsb
jne
jg
push
mov
fdivs
addb
lret
sub
or
pop
cs
jp
jmp
rcll
mov
xor
bswap
gs
add
add
jns
jbe
add
jl
and
jp
fs
jge
jle
ds
push
addb
mov
mov
add
adc
sbb
rolb
pusha
add
popa
pop
lcall
cmpsl
or
adc
pop
movsb
inc
add
mov
inc
pop
add
ss
add
jne
push
xlat
data16
movsb
cmc
cmp
int3
pop
jae
repz
add
push
push
mov
add
fsubrs
outsb
sbb
rolb
mov
mov
stos
mov
xchg
push
jne
sbb
rolb
mov
cmp
push
mov
lods
cmp
mov
mov
sub
cmp
lea
cvtpi2ps
add
ja
movsl
sub
add
mov
push
sahf
mov
je
xor
movb
add
movsl
pop
mov
enter
add
insb
adc
or
add
cltd
mov
in
cs
xlat
fldenv
out
pop
jo
add
add
and
dec
or
int3
mov
mov
les
mov
imul
mov
pop
jae
cmp
push
leave
mov
int
jmp
add
adc
or
out
sahf
adc
das
xor
or
xor
jbe
mov
add
adc
aas
in
fdivrs
pop
shll
add
addb
leave
push
xchg
test
add
js
add
cli
xor
cmpsl
push
inc
add
and
mov
in
scas
and
xlat
cmp
dec
inc
push
es
add
push
movsb
pop
xor
push
lods
jb
dec
mov
jmp
push
cmc
mov
pop
and
dec
adcl
push
add
push
sbb
push
xlat
pop
pop
scas
mov
pop
jo
sub
jbe
repz
sbb
das
push
ret
and
push
mov
pusha
add
xchg
push
movsl
andl
mov
xor
in
in
das
lods
mov
lahf
jno
dec
mov
add
add
sbb
hlt
mov
in
or
jbe
xadd
push
lret
aam
cltd
loop
push
push
add
and
sbb
mov
adc
insl
rcll
inc
jb
data16
mov
mov
mov
nop
sbb
mov
aam
sub
add
add
cmp
lock
add
pop
cmp
mov
cmp
jecxz
add
push
xor
push
pop
iret
xor
sub
cmp
sbb
sbb
inc
dec
lods
mov
push
fiadds
ss
cli
iret
mov
outsl
push
xchg
aas
jge
dec
pop
mov
pop
cmc
push
mov
add
jp
add
mov
rcr
mov
inc
add
daa
sbb
test
mov
leave
mov
scas
dec
lahf
push
add
int
or
ljmp
outsb
push
lock
push
insl
shrl
ja
add
or
fsubl
adc
mov
adc
jp
sar
jns
dec
cmp
sbb
or
and
sbb
xchg
ja
add
add
cmpsl
push
in
dec
dec
mov
add
or
sbb
and
xchg
adc
xor
sahf
das
lea
ss
mov
add
mov
push
gs
aam
mov
mov
push
push
lods
xlat
iret
push
daa
lock
enter
in
pop
repz
add
cmpsb
jl
push
add
mov
mov
lret
mov
or
popa
pop
jl
inc
ds
mov
dec
xchg
add
imul
jge
mov
add
into
jl
or
cltd
mov
pushf
xchg
jb
pop
addb
sbb
jnp
cmp
adc
fimull
adc
in
dec
scas
xchg
mov
or
lds
int3
stc
sub
add
and
jne
mov
xor
push
inc
add
sub
test
add
ret
out
fisttpl
movsl
inc
add
out
loop
loope
pop
dec
test
fistpl
xor
loope
adc
int3
sub
or
mov
xchg
fs
add
sub
fdivs
xor
xor
push
fistpll
dec
pop
fldpi
rcll
cltd
sbb
dec
mov
mov
add
sbb
ffreep
add
jmp
rol
add
stc
add
fnstsw
icebp
or
push
stc
inc
sub
add
test
or
fists
adc
inc
add
add
inc
mov
push
rorb
and
loopne
add
cli
push
roll
cmpsl
notb
das
aas
cltd
and
leave
movnti
cltd
mov
sub
add
mov
xchg
push
mov
or
xor
fisttpll
lcall
pop
stos
xor
add
push
lock
add
inc
add
outsl
fiaddl
mov
xor
ret
out
lods
gs
aam
stos
data16
xor
jnp,pt
add
inc
xchg
mov
pusha
add
xchg
leave
adc
add
loopne
and
roll
pop
add
cmp
mov
and
ss
mov
adc
push
call
das
pop
das
addb
enter
hlt
dec
outsl
mov
addb
dec
movsl
lret
jmp
push
dec
adc
push
jnp
xrelease
sahf
aas
test
nop
int3
insl
add
lcall
shrb
dec
mov
clc
adc
add
js
push
jno
adc
in
add
sbb
sti
push
add
pop
mov
pop
adc
dec
dec
pop
call
jo
push
lret
insb
addb
add
loope
addb
jae
mov
xor
add
lret
out
loop
inc
add
sbb
rolb
cmpsb
adc
add
aam
fcmovu
hlt
dec
push
add
add
mov
aaa
stc
sahf
fwait
repz
jp
popf
das
mov
cltd
addb
jle
or
push
insl
mov
push
pop
jge
cmp
cmpsl
das
mov
add
dec
rcrl
sub
add
cmc
shr
inc
add
ljmp
add
dec
outsl
xchg
sub
stos
jle
or
cmc
imul
mov
cmp
push
addb
ja
pop
ret
pop
aas
inc
xchg
popf
int
mov
les
nop
jecxz
mov
movsl
sub
sub
pushf
or
movb
aad
xor
mov
bound
mov
add
iret
out
pop
xchg
add
adc
sbb
mov
inc
push
pop
dec
fildll
repz
sub
xor
int3
pop
and
frstor
pop
pop
out
push
scas
jg
stos
cwtl
flds
incb
movl
faddp
dec
sbb
outsl
out
or
iret
lods
out
jg
addb
mov
lahf
scas
repz
push
ret
and
push
and
xchg
jno
out
jge
add
add
adc
sar
inc
and
sar
inc
ret
xchg
sbb
dec
push
mov
loopne
xor
imul
mov
xchg
data16
dec
fstps
mov
out
xor
pop
icebp
mov
mov
xor
add
scas
add
or
jmp
sbb
push
add
xchg
enter
pop
push
cmp
pop
repnz
cmc
xchg
mov
arpl
sahf
mov
rcl
mov
inc
add
cwtl
inc
test
push
shrl
cld
inc
std
lea
dec
fstl
adc
mov
es
sub
add
or
mov
into
push
xor
jl
or
jl
imul
and
mov
mov
jns
repz
mov
jmp
enter
push
xlat
dec
stc
mov
int
add
pop
test
adc
add
mov
out
add
sbb
orl
add
addb
test
push
jmp
stos
cld
mov
add
sub
fucomi
sbb
push
dec
aad
mov
adc
push
dec
cli
in
jmp
scas
or
outsl
leave
push
js
add
add
les
add
aas
xchg
add
pop
rdmsr
pop
jbe
pop
xor
pop
cwtl
popa
ds
or
imul
ret
call
and
insl
dec
mov
cmpsb
or
mov
or
cmpsb
or
dec
and
cmc
cwtl
stos
xchg
cld
outsl
movsb
add
mov
add
jns
mov
loop
add
sahf
inc
pushf
and
ret
shr
ljmp
lds
cwtl
pusha
add
rorb
das
mov
sub
sub
movsl
ss
stos
jle
shr
dec
xlat
cmp
ljmp
dec
adc
cld
mov
leave
test
sub
test
jl
and
mov
popa
or
bound
ret
ss
sub
and
outsb
aad
repz
cmp
add
into
popa
sbb
inc
mov
ja
subl
lret
xchg
dec
data16
add
mov
add
aaa
iret
lods
mov
pop
push
mov
push
mov
aam
add
pop
flds
push
inc
je
in
add
pop
arpl
push
xchg
outsb
sub
out
ret
lcall
or
repnz
in
sub
sahf
shrl
jnp
and
test
mov
stos
mov
jmp
sbb
mov
push
imul
test
add
inc
stos
dec
push
dec
lcall
arpl
and
sub
cli
outsl
ljmp
dec
scas
adc
adc
xor
push
cmp
aam
fmuls
and
je
cmp
enter
sub
pop
sbb
fcmovu
lock
lret
and
push
ja
xchg
lea
sbb
repz
lret
inc
jne
div
pop
adc
add
in
push
iret
int3
or
sub
or
sub
shl
insb
xor
cmpsb
xchg
xchg
fwait
dec
mov
bound
or
fwait
ljmp
rolb
dec
lcall
mov
dec
mov
cmp
adc
movsb
aas
inc
hlt
rcll
addb
test
fs
add
push
lret
mov
into
ret
add
xor
call
sti
sub
enter
out
jne
adc
or
or
pop
mov
xorl
fdivrp
stos
fistps
or
hlt
cltd
fsubrs
insb
xchg
jbe
xchg
stc
dec
je
push
imul
dec
inc
popf
pop
es
adc
add
rcrl
sub
scas
arpl
loopne
jge
mov
call
jl
fwait
xor
je
push
pop
mov
imul
and
scas
add
cld
pop
jmp
les
lock
out
aaa
jno
fdivs
dec
leave
mov
and
or
inc
movsl
cld
adc
pop
inc
nop
mov
hlt
or
add
adc
inc
add
insl
mov
ret
out
sarl
les
leave
mov
jae
inc
repz
lods
adc
outsb
xor
lods
cmp
sub
jb
xchg
ret
mov
sbb
lahf
adc
scas
adc
fmuls
mov
sbb
adc
mov
gs
jnp
addr16
push
testb
and
cmpsb
lahf
cmp
pusha
add
mov
add
lods
push
dec
cmpsl
imul
mov
cmp
push
push
pop
insb
call
fs
jge
jb
lock
clc
outsb
pop
sbb
add
dec
movswl
xlat
insl
sbb
leave
xchg
cmc
arpl
fmull
pop
push
cmpsb
jmp
sbb
popf
rcrb
and
repz
inc
xor
int3
loope
ret
addb
sub
popa
sub
fs
push
rolb
cmp
xchg
push
repnz
jno
clc
sbb
lock
cmp
pop
ss
jo
shll
pushl
sahf
sub
daa
enter
idiv
xor
cmp
fldenv
jl
mov
movsb
jle
cmp
jbe
add
out
inc
xor
vprotb
and
pop
rol
add
xchg
or
repz
add
fsubr
enter
mov
add
sbb
dec
jmp
addb
jno
push
add
sub
lods
fidivs
aaa
xor
add
add
mov
add
cmp
aaa
fcoml
sub
add
xchg
lahf
cmpsl
fs
lahf
sbb
mov
shl
pop
in
mov
and
jne
push
and
sub
idiv
sub
movb
outsl
cmp
xor
lods
data16
es
mov
xchg
jno
int3
pushf
outsb
pop
lret
movsb
scas
jno
dec
insl
iret
jl
jge
push
push
xchg
jnp
mov
cmp
incb
jnp
jmp
dec
push
fstpt
rolb
add
dec
mov
jmp
mov
loop
cld
and
cld
in
rolb
loopne
pushf
mov
cld
inc
cltd
shlb
clc
and
mov
pushf
dec
rolb
and
or
mov
pop
aam
leave
sahf
es
sahf
add
into
jge
pop
mov
hlt
mov
test
pop
movsl
or
xor
sahf
xchg
rcl
sub
sbb
cmpsb
ret
lret
jge
dec
out
in
jmp
cltd
aam
add
scas
sub
stos
nop
pop
jae
popa
or
add
clc
push
add
das
aaa
add
sub
add
addr16
pushf
fstl
lahf
and
sub
fiadds
xchg
jmp
rolb
cltd
lock
pop
into
bound
mov
add
add
pushf
ss
ljmp
add
clc
adc
lret
and
int
push
ja
sbb
cmpl
dec
cmp
or
pop
xor
xor
and
jmp
and
mov
dec
cwtl
add
fbstp
dec
repnz
shlb
mov
dec
or
ljmp
jmp
icebp
inc
mov
cs
and
xor
int
pop
repz
xchg
aaa
stos
adc
insb
jnp
add
lds
sbb
add
sbb
popf
popf
jg
hlt
sbb
xchg
ja
dec
icebp
lds
stc
scas
jno
mov
movsb
lcall
sbb
and
fildll
cmp
sbb
arpl
mov
or
add
lret
das
cli
mov
mov
leave
mov
dec
and
xchg
add
jnp
or
and
mov
xchg
sti
and
xchg
xor
add
out
in
movb
idivb
sbb
scas
xchg
movb
dec
sbb
sti
das
movsb
lahf
pop
clc
fcomi
les
sbb
add
std
mov
jb
add
aaa
xchg
pop
mov
add
mov
add
add
jecxz
leave
add
cltd
mov
jae
loop
push
add
jnp
repnz
mov
xchg
push
cmp
inc
pop
shrl
jns
add
inc
adc
stos
push
push
inc
add
fwait
sub
cmpsb
mov
jecxz
push
sbb
dec
addr16
mov
movsl
mov
cmp
xchg
mov
lcall
sarl
ret
and
and
mov
mov
fcoms
inc
add
push
add
sar
adc
rolb
je
inc
add
inc
jae
inc
mov
test
mov
pop
cmp
js,pn
daa
mov
cmpsl
icebp
xor
pop
cmp
lea
stos
xchg
lds
dec
cmp
add
imul
cmpsb
xchg
bound
stos
cmp
adc
cmp
add
sbb
arpl
pop
gs
shrl
divb
outsb
jae
xchg
and
xchg
and
out
add
cli
bound
dec
and
mov
push
add
insb
dec
xchg
test
mov
pop
and
or
in
decb
mov
or
lahf
push
push
pop
or
sbb
loopne
inc
sbb
cmpsl
xor
push
ljmp
cmp
cmp
pushf
lds
or
je
in
lock
mov
dec
popa
pop
frstor
leave
jnp
pop
jp
lret
movb
ds
and
cwtl
outsb
leave
es
mov
add
outsb
jg
jbe
lcall
inc
fs
call
sbb
add
lea
mov
add
or
jle
in
jb
fnsave
add
adc
mov
add
jg
add
test
sub
add
cwtl
mov
jmp
ljmp
inc
add
test
jp
ret
dec
pop
incb
es
loop
pop
dec
inc
add
inc
jnp
ret
jmp
test
jno
mov
mov
dec
pop
dec
es
cmpsl
xor
lea
js
dec
movsl
lret
jne
sub
push
mov
pusha
add
cmp
mov
loopne
sub
fsubl
loop
jle
adc
movsl
adc
mov
push
rcr
sbb
jnp
sbb
mov
xor
pop
out
push
adc
and
mov
data16
mov
cltd
mov
int3
pop
jmp
adc
and
sahf
sub
add
or
hlt
testb
sbb
push
add
sub
push
add
das
ret
aad
add
jb
mov
push
mov
int
fucomip
and
mov
add
jae
or
xor
jl
cld
stos
or
lea
stos
leave
stos
pop
pop
xchg
jns
pop
push
jecxz
xchg
icebp
stos
icebp
icebp
pop
movsl
cmp
jge
fcmovb
out
mov
jae
pop
dec
leave
sarl
jns
or
jge
pop
scas
jecxz
jae
in
push
push
cltd
stc
cmpsl
push
out
add
sbb
mov
lds
dec
cmp
add
add
and
jbe
xchg
add
js
jg
addb
ror
lea
add
cmp
and
or
jno
add
sub
out
daa
and
aas
fidivl
or
clc
xchg
dec
push
add
ret
dec
fcmove
scas
fcmovne
inc
add
int3
stos
push
add
int
std
out
inc
add
xchg
leave
lods
outsb
cmp
lods
cmp
cltd
pushf
sub
add
push
add
add
pop
cmp
pop
sub
fadd
add
lea
push
xchg
add
jmp
addb
cmp
add
lods
shl
cld
mov
mov
in
movsb
dec
sub
add
jl
shlb
add
mov
inc
add
es
icebp
cltd
xchg
rcrl
add
addl
pop
jmp
xor
ds
mov
ds
outsb
lods
aad
popf
lret
inc
pop
pop
mov
pop
push
sbb
ret
xchg
test
popa
sbb
ljmp
add
mov
mov
adc
dec
cltd
outsl
loop
push
sbb
enter
jmp
cltd
jno
test
add
or
push
outsl
push
mov
lds
lds
push
scas
push
mov
iret
mov
call
push
ficompl
add
or
daa
js
add
jmp
push
es
push
pop
mov
adc
push
lcall
add
xor
inc
and
cmpsb
and
or
loop
cmp
add
dec
adc
dec
and
dec
pop
or
mov
cltd
lahf
mov
xor
scas
dec
in
ret
push
lret
cmc
adc
adc
in
jo
imul
out
pop
and
jp
or
jle
lcall
sbb
cmp
mov
ret
add
push
add
int3
popa
push
lret
or
nop
push
mov
xchg
jbe
rclb
shll
lret
sub
mov
fidivrs
sub
into
sub
arpl
enter
push
arpl
or
repz
test
lahf
aaa
aaa
je
xor
add
pop
fists
dec
mov
inc
add
mov
fstp
or
inc
sbb
cmp
xor
add
add
mov
mov
fidivs
dec
cld
push
jmp
mov
pop
mov
push
add
sbb
sbb
and
push
add
dec
pop
or
jg
enter
lret
sub
lea
ret
cmp
add
fadd
ljmp
lds
sbb
movb
inc
add
xchg
and
arpl
stos
sbb
mov
add
stos
mov
lcall
mov
xchg
or
dec
jno
lods
stos
mov
mov
mov
iret
ds
xor
dec
jno
call
xchg
lret
push
add
sub
mov
cmpsb
lock
outsb
arpl
stos
pusha
add
sub
jmp
rorb
mov
pop
out
inc
add
add
cwtl
inc
add
mov
lret
mov
movb
aaa
sub
mov
std
add
mov
cwtl
jbe
xor
add
mov
mov
dec
xor
movb
xlat
insb
push
pop
fldt
ficompl
ffree
rcrb
cwtl
push
mov
inc
xrelease
xchg
ss
add
xchg
adcl
add
sbb
mov
orl
cmp
jb
fidivrs
cmpsb
aad
jmp
pop
inc
add
mov
and
add
push
xchg
pop
mov
pop
jnp
sbb
pusha
add
test
push
xor
add
rolb
imul
fcomip
push
outsl
pop
rolb
ss
into
push
dec
cli
sahf
inc
sub
popf
sbb
pop
les
pop
cmpsl
in
test
in
mov
fistpll
inc
adc
js
jb
mov
pop
mov
test
test
add
push
pop
and
aad
cmp
push
mov
dec
das
xor
jns
lods
mov
add
xchg
jl
xlat
add
js,pt
mov
push
push
out
mov
enter
cmp
inc
mov
inc
sbb
jmp
adc
cwtl
inc
pushf
push
xor
int3
push
jmp
fnstenv
jb
push
cli
mov
dec
ror
add
push
jno
sbb
jne
js
mov
jg
sahf
lods
loop
xchg
out
sub
js
inc
push
pop
xchg
cwtl
push
adc
ss
cmp
xchg
jge
fnsave
sub
sub
out
xchg
out
add
outsl
nop
mov
movsl
adc
sub
outsl
lea
push
add
mov
and
mov
push
mov
pop
and
adc
dec
scas
fnstenv
inc
mov
and
out
xchg
bound
cwtl
xor
addb
addl
stos
out
imul
imul
fists
daa
inc
push
jg
add
xor
out
jnp
sub
mov
cmp
or
js
xchg
inc
scas
sub
imul
iret
shll
add
mov
stc
mov
lock
daa
sub
sbb
lcall
inc
add
int3
inc
cmp
or
add
add
pop
ss
jne
jmp
test
and
es
push
test
or
movsb
fimull
and
add
out
mov
mov
fprem
gs
and
adc
add
out
hlt
mov
push
inc
js
rclb
mov
lahf
shll
add
lock
inc
lahf
push
mov
add
js
push
add
cmpsl
sub
xchg
aas
adc
add
cld
mov
xchg
fisttpll
xchg
cmpsl
inc
add
jns
add
push
cmp
add
inc
add
test
sub
push
jns
mov
bound
ljmp
add
sub
sub
out
fcoms
in
sahf
jne
xchg
push
out
das
xchg
lods
cmc
addb
push
clc
mov
lods
pop
and
aad
jmp
push
rcrb
mov
mov
aaa
inc
add
mov
lods
bound
mov
sub
cmp
jo
cld
dec
test
daa
out
xchg
loopne
push
jns
pop
out
xchg
mov
loope
xchg
sub
push
jno
scas
mov
xchg
and
sti
and
inc
jge
inc
add
jge
xor
out
sahf
cwtl
cmp
and
jl
cmp
mov
dec
into
dec
and
mov
xor
sub
in
inc
inc
add
pusha
add
add
inc
outsb
jb
cmp
ds
and
cmp
sbb
mov
xor
int3
test
add
add
mov
mov
sub
add
bound
repz
test
xor
out
enter
fimuls
sbb
fs
or
jae
jg
fldt
jecxz
add
pop
loope
and
xor
fstpt
xlat
rcrb
insb
push
push
push
sbbl
push
nop
jmp
add
jg
add
mov
aad
xchg
movsl
imul
inc
xchg
xor
mov
push
jae
add
fldt
mov
data16
movsl
mov
dec
mov
sub
ret
fdivrs
sbb
add
repnz
sti
fprem1
pop
fbstp
icebp
xlat
pushf
lret
lock
insb
add
sub
mov
add
daa
mov
adc
cmpsl
dec
inc
add
out
xchg
pop
push
xor
pop
jecxz
jmp
add
fistpll
insb
pop
enter
pop
fmull
xchg
movsl
xor
push
add
cmpsl
cwtl
daa
cmp
test
outsl
data16
sbb
ljmp
mov
or
outsl
stos
ss
les
cld
push
ret
add
mov
into
ss
js
push
aad
or
hlt
dec
cltd
sbb
aaa
inc
add
add
pop
and
stos
sub
mov
scas
mov
jne
add
pop
das
je
out
gs
out
sbb
jl
mov
mov
sub
neg
enter
mov
scas
inc
sub
pop
aas
inc
add
push
jo
mov
jecxz
inc
lods
xchg
mov
push
fmuls
or
insl
sahf
xor
push
divb
xlat
xor
insl
push
sub
mov
and
adc
jl
addb
les
jmp
adc
adc
add
adc
xor
push
add
stc
jecxz
shll
aam
or
dec
mov
cmp
gs
pop
mov
inc
add
clc
aas
cmpsl
inc
add
in
xorl
ljmp
aaa
jg
adc
jb
fmuls
addl
pop
outsl
inc
add
rolb
mov
inc
pop
sbb
pop
xlat
inc
cltd
lea
add
popf
imul
add
xchg
in
mov
add
mov
adc
add
out
push
add
gs
aaa
and
fdivs
popf
std
sub
xchg
xchg
xchg
or
cli
ret
xor
movsl
imulb
out
sbb
jnp
loope
cwtl
stc
aad
sbb
mov
mov
or
js
mov
cmp
dec
or
dec
cld
xchg
test
dec
push
xlat
mov
ret
mov
mov
add
jbe
fcomi
xor
add
fcmovb
add
xchg
pop
pop
std
gs
fs
jmp
sbb
add
add
mov
sbb
jge
jmp
leave
cmpsb
mov
out
loop
in
push
in
in
xchg
push
push
xchg
pop
in
stos
stos
leave
jecxz
xor
rol
adc
add
pusha
add
cmpsl
mov
fsubrl
add
add
add
add
mov
jne
or
fld
movsb
out
or
leave
lods
mov
lret
mov
mov
mov
pusha
add
adc
push
cmp
jnp
movsb
pop
in
add
in
pusha
add
jbe
dec
out
fs
pop
pusha
add
addr16
add
ret
mov
push
les
icebp
das
and
jecxz
movsb
cmp
daa
call
fcomps
lock
mov
add
push
add
es
gs
add
add
jb
ficoms
test
sub
insb
dec
rcrb
out
sub
inc
mov
inc
add
in
pop
iret
jmp
shlb
lret
mov
xchg
aas
fcoms
cmp
dec
das
addb
dec
shrl
lock
push
mov
stos
addr16
mov
add
mov
add
add
push
daa
ss
sub
inc
add
cmp
sbb
xchg
aas
push
push
rolb
xchg
xor
data16
mov
and
fwait
mov
fstpl
int3
xor
add
adc
jo
ret
sub
xchg
arpl
repz
cmp
pop
stos
and
sbb
stos
rolb
inc
add
shll
add
push
and
daa
xor
les
mov
sbb
mov
push
les
xor
addb
push
gs
add
nop
xor
pusha
add
popa
sbb
add
outsb
adcl
sahf
xor
frstor
push
cmp
insl
xchg
call
je
jns
add
mov
fdivrs
mov
lock
sub
fs
movsl
add
int
pop
out
mov
pop
popf
popf
pop
add
mov
mov
add
cmp
mov
jnp
push
add
ja
arpl
push
out
dec
cli
loopne
push
int
movsb
inc
add
sub
add
xchg
dec
push
ret
sub
cmp
push
mov
movb
testb
sti
jo
test
mov
addb
repnz
push
movb
inc
add
mov
popf
addb
push
insb
rolb
cmpsl
mov
mov
jb
adc
js
mov
std
mov
add
sti
mov
shrl
xlat
dec
pop
lcall
add
shlb
cmpsl
rcll
out
sbb
cmc
jnp
sub
hlt
pop
cli
mulb
movsl
out
int
int3
out
push
outsb
cmpl
jb
mov
test
mov
sbb
dec
adc
repz
mov
daa
or
xor
push
jmp
mov
jp
pop
push
popf
inc
xlat
fidivrl
fistpll
sub
in
rolb
add
mov
in
test
dec
outsl
sub
add
or
dec
fs
out
inc
pop
popf
jbe
mov
cmp
inc
add
sbb
fidivrl
movb
adc
in
and
popl
fisttpll
inc
mull
adc
add
push
mov
outsb
inc
movb
add
add
adc
sub
test
xchg
xchg
sti
pop
mov
mov
sahf
outsb
dec
iret
arpl
inc
ss
dec
lret
jne
addb
pop
or
adc
in
sbb
push
mov
pop
outsb
sub
add
test
movsb
aas
jns
push
mov
movsl
inc
add
fcomp
addb
hlt
enter
cs
dec
movlps
pop
scas
push
add
inc
add
add
pop
xor
xor
adc
mov
sub
lret
rolb
lds
lods
aam
and
xchg
and
xchg
jb
push
ffreep
xchg
pusha
add
in
add
xlat
pusha
add
add
jae
inc
add
jecxz
xor
popa
mov
add
add
aad
movsb
rolb
repnz
adc
add
inc
add
add
ficomps
or
cmpsb
sbb
mov
xchg
stos
xor
icebp
gs
scas
dec
bound
repz
mov
xchg
in
push
sbb
sub
dec
ret
stc
jne
es
cld
xor
xchg
fwait
cmp
add
push
aad
xchg
jp
jp
xlat
xor
cltd
addb
pop
jle
in
xchg
and
xchg
or
je
mov
or
out
rorb
int
sub
loopne
aam
fwait
mov
test
inc
add
inc
add
mov
jle
addr16
sub
cld
xor
adc
cwtl
ss
negl
adc
and
mov
and
jp
dec
rol
add
inc
add
pop
xor
test
dec
push
stos
incb
cld
adc
outsb
mov
ficoml
loope
mov
dec
loopne
pop
jae
xchg
daa
rcll
mov
jl
add
in
rolb
in
inc
add
mull
pusha
add
push
test
add
cli
outsb
push
pop
aam
sub
add
in
jle
in
lods
dec
sbb
mov
insb
daa
addb
pop
lods
notb
xchg
add
ja
mov
stos
lret
pusha
add
inc
lret
push
leave
pusha
add
sub
add
sub
aas
ss
or
jmp
cmp
icebp
rep
cmp
dec
mov
sbb
pop
pushl
and
jno
push
jle
and
lods
sti
mov
aas
aaa
das
sti
inc
repnz
xchg
addb
sub
cltd
jo
add
jb
cmpsb
fsubs
test
imul
int
add
adc
ficoms
outsb
push
mov
add
aad
jle
cli
mov
out
xchg
mov
add
xchg
movsl
movb
ss
pop
fdivrl
nop
gs
jmp
into
jle
lods
inc
or
sub
in
into
push
int
insb
push
jbe
mov
cmpsb
adc
add
cmp
arpl
add
or
add
pop
cltd
pop
mov
push
lahf
into
cmpsl
dec
movb
cmp
nop
rcrl
xchg
out
fsqrt
ds
mov
xor
sub
add
xchg
dec
addb
pop
or
cmp
add
outsl
and
arpl
adc
pop
or
add
jle
in
lods
out
jmp
add
bound
jl
cmc
cmp
jmp
add
add
sub
add
ljmp
call
gs
sbb
out
xchg
xor
fbstp
xor
mov
movsb
fiadds
std
call
jae
add
jmp
in
mov
movb
add
in
xor
jno
das
in
ja
mov
jl
lahf
imul
enter
mov
aaa
mov
push
jae
aad
in
mov
mov
adc
mov
dec
ret
iret
mov
add
pop
xorl
ja
pop
push
sbb
testb
pop
jmp
push
add
fwait
int3
outsl
test
xor
cmp
add
sub
out
xchg
js
aaa
push
mov
arpl
lds
inc
cli
pop
adc
imul
lock
add
ret
push
add
sbb
sub
jg
mov
mov
add
pushf
insb
mov
sarb
add
in
mov
add
dec
leave
adc
jmp
xor
sub
jno
xchg
sub
imul
add
jle
ret
or
add
sbb
ret
mov
mov
pushf
js
adc
sti
or
addl
push
rcrl
loop
add
adc
shr
xchg
iret
stos
dec
and
subl
fstl
dec
fistl
rorb
out
iret
jns
mov
pop
mov
inc
sbb
cmp
in
push
stos
scas
cltd
popa
rolb
push
push
pop
push
fst
add
in
lahf
lret
xchg
sub
sub
add
xlat
jns
or
jb
ds
sti
gs
add
mov
cmp
add
mov
lds
pushf
push
aas
mov
pop
mov
dec
lock
std
mov
xor
and
push
cmp
adc
iret
punpckhbw
pop
xor
add
pop
adc
add
xor
in
push
and
mov
cld
cwtl
lahf
adc
sbb
mov
mov
scas
mov
gs
pushf
ret
out
cmp
mov
add
mov
std
adc
loopne
add
arpl
data16
pop
dec
das
mov
add
cmc
pop
jb
in
addr16
pop
xor
mov
mov
and
fdivs
daa
stc
xchg
inc
mov
rcrl
cmp
xchg
shlb
dec
push
jb
jp
shrl
adc
mov
cmp
fs
mov
and
cmp
mov
and
lcall
js
push
xchg
mov
shll
enter
pop
dec
cmpsb
enter
jne
imul
mov
cmp
aam
ret
pop
insl
stos
cmp
cld
leave
out
outsb
int3
jle
cmp
inc
adc
add
push
std
cmp
fdivl
add
enter
jno
hlt
insb
xchg
jg
inc
dec
inc
add
add
dec
test
sbb
xlat
or
aas
mov
sub
je
pop
cmc
gs
pop
loop
add
cmp
pusha
add
push
or
xchg
push
js
jp
add
xchg
sahf
iret
dec
jb
add
sti
rorl
mov
daa
stos
test
mov
mov
loop
rolb
adc
mov
aaa
sub
std
in
dec
sbb
fisttpll
cltd
adc
sub
sahf
fwait
stc
jo
imul
add
add
mov
mov
popf
pop
aam
mov
lret
cmp
pop
adc
push
xchg
fiadds
pop
sub
les
insb
ja
leave
bound
and
adc
push
shrl
xor
enter
cmp
pop
sbb
add
imul
out
sbb
lea
push
add
fcoml
cwtl
rcrl
jge
clc
push
cmp
add
iret
mov
pop
int3
ret
pop
loopne
cmp
mov
pop
cwtl
cmp
inc
add
add
and
mov
pop
imul
shr
cmp
out
or
les
into
movb
dec
sbb
cmp
lret
cs
ljmp
lret
lcall
jg
stos
outsl
inc
aas
jle
add
adc
call
jmp
lahf
daa
aas
jb
sbb
clc
inc
add
sub
mov
std
ss
fbld
leave
ja
xlat
or
mov
pop
sar
popf
cmc
sbb
nop
dec
jae
dec
or
movsb
popa
outsl
stc
xor
lock
add
rolb
add
scas
mov
add
pop
dec
sbb
movsl
lods
sub
xor
add
add
add
pop
cmp
mov
cmp
pop
rcrb
fucom
daa
inc
jno
gs
jne
outsl
mov
mov
add
jbe
dec
imul
push
cld
mov
mov
ficoml
cmp
sub
add
int3
push
add
pop
leave
daa
lods
mov
ficoms
imul
std
jp
xlat
inc
lock
mov
jge
add
xchg
cltd
and
push
or
jo
jo
lret
or
push
dec
call
movsb
sbb
loopne
dec
dec
jno
jne
out
cmp
add
jo
jne
pop
fs
add
test
pushf
lea
in
not
aas
leave
mov
frndint
test
mov
pop
push
sbb
xorl
sub
shrb
test
inc
add
xchg
aam
inc
arpl
insb
xchg
inc
mov
outsb
repz
sti
das
addr16
xor
inc
pop
cli
adc
insl
js
out
lea
out
inc
lea
mov
stos
or
or
repnz
sub
test
adcl
or
and
in
popf
fcomp
sbb
or
mov
je
dec
hlt
pop
xlat
or
add
adc
mov
icebp
xor
pop
imul
lods
aad
mov
insl
repz
int
jno
clc
jno
test
sar
jb
dec
mov
cli
jno
fucomp
jne
jo
out
jns
out
mov
jle
pushf
pushf
mov
and
lods
jecxz
scas
xchg
adc
sahf
fstps
arpl
fldt
shl
iret
jmp
xchg
mov
add
mov
stos
xchg
jl
test
into
insb
mov
pusha
add
push
lock
push
jo
loop
xlat
push
fsts
cmp
add
cltd
xchg
aaa
xlat
push
dec
and
add
mov
push
or
inc
add
jmp
lock
or
push
add
incl
gs
push
insb
cld
and
mov
daa
cmp
sbb
xor
mov
and
add
add
std
jb
out
add
and
insl
out
movl
insl
pop
lret
addb
shl
imul
enter
leave
test
clc
sbb
add
xchg
and
push
and
mov
mov
movb
dec
leave
lock
mov
sub
cmpsl
xor
pop
and
divl
rcll
ret
push
cltd
inc
add
add
push
xor
stc
xor
cmp
iret
stc
sub
ljmp
xchg
mov
jnp
sbb
stos
mov
nop
mov
je
sbb
fists
push
mov
lret
cmp
in
jmp
jns
mov
adc
pop
rcll
pop
mov
mov
adc
lock
jmp
sub
pop
or
cmp
pop
pop
sub
lds
cmp
sub
cwtl
das
push
aas
stos
xchg
ljmp
inc
dec
push
sub
icebp
fldt
rol
imul
lea
jo
add
out
and
adc
daa
imull
movsb
movb
data16
add
fstps
lea
test
lods
aad
add
hlt
jecxz
add
dec
or
fst
push
fdivl
sbb
test
pop
push
xbegin
mov
fwait
adc
int
xor
call
pop
pushf
fstps
jo
enter
les
mov
inc
add
repnz
xlat
lds
loop
add
push
dec
xor
ret
jbe
lcall
cltd
lea
rolb
lods
inc
lret
pop
jecxz
clc
xor
push
movsl
mov
and
mov
mov
sbb
cld
mov
and
adc
push
popa
js
outsb
iret
mov
add
pop
rolb
jnp
push
dec
inc
rorb
sub
jne
out
and
add
je
dec
pop
xor
jns
add
divl
cmp
push
negl
dec
and
mov
inc
add
notl
dec
adc
aas
fcoms
jnp
insl
jmp
fs
mov
leave
hlt
sar
pop
push
or
push
fadds
add
lcall
adc
mov
pop
test
jnp
sub
aas
mov
push
repz
imul
mov
mov
pop
inc
mov
xchg
jnp
test
stos
adc
dec
nop
xor
cmp
rolb
lahf
cld
cmp
test
add
sub
shll
add
pusha
add
in
xchg
xchg
jg
bound
adc
and
cld
adc
mov
dec
xchg
lods
filds
cwtl
cs
insb
jnp
jle
push
cmpsb
push
in
push
test
mov
addb
ja
xor
add
sbb
repnz
pop
outsb
adc
stos
cwtl
outsl
fsubrl
les
jle
ss
mov
arpl
repz
sbbl
call
dec
aas
mov
add
divl
test
push
mov
out
push
mov
push
pop
icebp
lods
ja
cwtl
xor
les
mov
inc
add
loopne
or
xor
fxch
sbb
mov
ror
aas
in
pmaxsw
mov
insb
loope
decb
lret
jb
in
loope
lods
xchg
pop
or
mov
add
jmp
popf
xchg
movsl
imul
pop
icebp
repz
cltd
stos
icebp
dec
movsb
xchg
out
loopne
sub
int
xchg
cs
add
pop
lods
and
add
add
daa
mov
cmp
push
shll
xchg
jnp
mov
mov
sub
mov
daa
cmc
xchg
loop
popa
minps
mov
sub
fisubrl
xor
mov
je
fabs
lods
and
add
mov
adc
adc
xor
movsl
mov
mov
fnstcw
cli
pop
push
popl
addb
xchg
add
jl
sti
mov
mov
inc
and
in
loope
add
aaa
cwtl
dec
ret
ficoms
ds
jo
in
xor
std
or
aam
aaa
inc
add
cltd
jbe
outsl
aaa
jns
icebp
rolb
pop
aad
inc
sbb
lods
mov
xchg
and
mov
and
mov
mov
adc
adc
daa
stos
and
or
push
ret
repnz
jp
nop
test
fwait
mov
mov
in
mov
jg
bound
test
les
clc
adc
xchg
sarl
push
fwait
lret
daa
or
adc
mov
loop
insl
ss
or
sbb
cwtl
xchg
ja
pop
lods
push
add
aas
xchg
mov
call
push
xor
ljmp
mov
mov
push
leave
pop
dec
add
call
mov
test
cmpsb
and
mov
inc
sbb
add
ficompl
loopne
cmpsb
fnsave
rcrl
scas
lret
int
add
dec
popa
ret
insl
je
push
or
xlat
imul
mov
mov
mov
cmp
insb
aam
xor
daa
jl
add
aad
pop
cmp
data16
enter
sub
pop
into
fisubl
add
adc
out
and
in
push
xchg
aam
mov
or
in
fisttpl
or
imul
es
jmp
xchg
mov
hlt
xor
lods
icebp
or
cwtl
stc
add
xor
jge
rcr
mov
xchg
shlb
daa
mov
add
mov
addb
push
xor
add
test
xor
in
push
add
leave
xchg
outsb
lods
lock
fisttpl
and
mov
jne
cmp
adcl
and
sbb
repnz
cld
xchg
inc
jns
jns
in
out
scas
lock
mov
sahf
jb
add
addr16
test
add
add
sub
negb
adc
into
push
adc
jge
add
xchg
push
and
cli
cmp
pusha
add
mov
sbb
pop
push
and
add
xor
mov
add
pop
je
push
mov
jo
mov
push
sub
shl
in
sbb
sbb
loop
mov
setae
jmp
pop
nop
mov
ljmp
mov
mov
fadd
add
rcrl
std
dec
and
ret
shl
and
shlb
dec
rorb
fs
and
imul
add
imul
and
das
cwtl
dec
rolb
loop
or
xchg
sub
inc
cmc
ja
cmpsl
ljmp
xchg
testb
ucomiss
in
sbb
lahf
je
std
sub
push
mov
inc
mov
xor
jae
leave
gs
xlat
icebp
mov
in
mov
jbe
pop
sahf
js
int
push
push
in
fadd
movb
or
mov
fcompl
xchg
push
js
jl
push
mov
adc
inc
repnz
jb
add
add
repz
dec
push
es
mov
dec
cwtl
mov
lods
jo
add
push
jmp
add
adcl
add
pop
gs
addr16
push
xchg
hlt
jmp
xor
rolb
mov
stc
mov
dec
fldl
flds
mov
adc
jnp
mov
frstor
lods
pop
jnp
nop
add
cmp
lods
addb
out
push
in
ret
mov
xor
push
sbb
dec
push
mov
mov
mov
mov
es
sub
pop
inc
add
out
sub
jae
popl
in
rcrl
cli
dec
rcll
nop
or
or
int
xor
insb
je
inc
add
pop
mov
mov
jno
sub
pop
mov
adc
leave
aam
repz
into
inc
add
int3
xor
add
add
test
adc
std
push
add
loopne
dec
out
outsl
dec
push
cltd
fisubrl
xchg
sbb
push
push
fld
add
cmp
add
add
sub
or
hlt
in
xor
and
xchg
inc
add
out
dec
addb
addb
lea
aaa
push
test
test
repnz
pushf
mov
jecxz
popf
mov
ljmp
leave
inc
xlat
cmc
mov
cs
leave
lea
push
cmpsb
fnsave
scas
ja
xchg
mov
add
add
push
and
mov
pusha
add
add
enter
aaa
adc
dec
push
mov
ret
push
add
add
test
add
mov
add
mov
pop
pop
xchg
or
dec
mov
add
mov
dec
and
testl
pop
mov
popa
cmp
les
dec
addb
cwtl
jb
cwtl
lea
nop
or
jge
jmp
jle
add
loop
cmpsl
adc
add
mov
push
push
mov
mov
imul
xchg
aad
cltd
lea
and
xor
ret
cld
push
add
and
pop
lods
mov
add
shll
test
lret
cmp
dec
cmp
jno
add
dec
outsb
adc
cmp
bound
xchg
jnp
add
adc
mov
sub
inc
add
hlt
in
mov
xor
mov
jae
popl
add
gs
leave
into
aam
adc
push
jg
ss
push
jae
stos
mov
movsl
data16
test
sub
inc
add
shlb
and
hlt
lock
in
add
pop
fdivp
jp
ret
outsb
sub
into
mov
int3
push
mov
ljmp
lds
push
push
emms
jne
lret
arpl
add
leave
pop
sbb
hlt
es
mov
je
leave
ror
push
cld
pop
andl
insb
pop
lods
mov
push
cs
jmp
add
cli
lea
sub
add
ljmp
jae
xchg
std
pop
push
cmp
js
cli
inc
add
aam
les
add
and
lea
lea
push
jb
push
cmpsl
cltd
push
adc
stc
ljmp
enter
cmp
sub
mov
lret
add
add
push
inc
add
inc
mov
popf
call
add
mov
jl
cmp
mov
adc
mov
icebp
addb
sub
sbb
or
daa
test
mov
mov
or
dec
jbe
push
xor
rcrl
sti
pop
mov
pop
mov
je
xchg
imul
mov
add
xor
aaa
outsb
arpl
popf
mov
call
mov
movb
add
push
sub
sarb
stos
xlat
fsubrp
das
push
sub
sbb
add
add
inc
add
mov
fnstcw
pop
sar
rcr
in
cmp
dec
xchg
sub
sub
add
insb
cmp
add
out
call
mov
push
push
mov
mov
dec
std
rolb
push
aam
fs
lods
das
lods
stos
sahf
inc
inc
pop
pushf
and
jbe
insb
lds
or
xchg
add
mov
inc
lea
or
pop
xor
sahf
pop
or
xchg
test
int
je
push
aaa
push
cmp
aam
loopne
pop
mov
mov
add
popa
bound
mov
stc
loop
outsb
in
scas
add
jmp
iret
scas
mov
push
or
add
pop
imul
jb
outsl
cmp
push
push
add
add
aas
mov
add
push
mov
mov
fsubl
dec
mov
or
add
fistps
mov
rorl
push
sub
std
scas
scas
notb
lret
ss
out
hlt
push
iret
push
cli
fwait
mov
out
push
mov
add
mov
cmp
sub
inc
aad
les
adc
sub
pusha
add
mov
dec
dec
es
aas
or
das
adc
add
xor
mov
fists
pop
xor
adc
int
daa
out
jl
fsubrp
frndint
pop
adc
add
rcrb
popf
std
and
add
ljmp
inc
cltd
or
add
mov
mov
cmpl
psllw
mov
aad
pop
push
int3
push
and
sub
or
and
clc
xor
add
add
shr
push
add
pop
push
mov
sub
out
mov
pop
rolb
pop
adc
mov
cli
mov
mov
test
int3
test
outsl
enter
in
repz
push
add
pop
shll
mov
test
xchg
iret
orl
and
sbb
jle
fsts
icebp
data16
sub
test
ljmp
mov
push
jp
add
imul
ret
sldt
repnz
mov
xor
aaa
mov
stos
sti
inc
add
ret
imul
mov
test
xchg
repnz
inc
xchg
add
in
pop
inc
test
jnp
fwait
movsl
mov
pop
xchg
insb
icebp
cmp
enter
jge
int3
lds
ds
pusha
add
add
jne
out
sti
aas
mov
pop
movsb
xchg
stos
add
aaa
add
pop
push
out
sbb
mov
mov
xor
add
mov
xchg
adc
aaa
or
idivb
loopne
and
out
loop
test
into
popf
packssdw
iret
sbb
mov
mov
jne
out
in
push
and
sbb
jo
mov
sub
sub
or
pop
in
push
int3
gs
shr
sahf
add
add
repnz
mov
add
mov
pop
push
imul
add
call
add
mov
fdivl
call
push
pushf
ret
or
das
inc
jle
mov
xor
mov
rcll
fists
mov
aad
xchg
or
pop
and
out
aad
ret
mov
xchg
mov
add
mov
adc
mov
movsb
addb
lahf
movsb
stos
jmp
pop
shr
xchg
in
add
repnz
mov
push
mov
mov
int3
xchg
add
test
push
test
inc
add
loopne
mov
add
cltd
pop
cmp
out
bound
std
add
mov
insl
int
inc
data16
and
mov
mov
adc
fisubl
in
adc
and
xchg
sbb
xor
lcall
add
inc
add
lahf
add
clc
out
mov
in
add
test
mov
add
outsb
leave
mov
stc
rolb
in
aas
stc
nop
jl
aas
adc
ljmp
mov
cwtl
dec
shll
cmp
xchg
pop
xchg
jmp
sub
jge
cmp
dec
jge
jle
pop
xchg
call
or
stc
repnz
adc
test
and
loop
cld
cmp
test
and
add
divb
addb
add
rolb
fstpt
add
dec
dec
cli
fistpl
enter
test
inc
add
or
cmp
pop
xchg
loop
and
jle
add
cld
adc
inc
add
imulb
cs
call
jno
aaa
xchg
sbb
mov
scas
js
jmp
sar
or
pop
xchg
dec
scas
fsubr
mov
decb
lcall
sbb
jl
movsb
adc
mov
push
pop
test
cmp
xchg
cmp
insb
cwtl
pop
jl
lcall
and
shrb
add
add
pop
xor
rorl
ljmp
add
xor
scas
ja
in
loopne
mov
cmpsb
icebp
inc
cmc
stos
adc
iret
mov
ljmp
add
shl
mov
movb
fnstsw
movb
add
push
fcomi
inc
push
sub
je
ret
push
mov
stos
cmc
adc
enter
mov
call
add
popf
sbb
and
add
pop
mov
add
sti
dec
dec
mov
dec
add
shlb
xlat
test
jb
adc
sbb
out
add
in
mov
pop
mov
inc
push
mov
out
mov
push
pop
adc
cli
push
cli
or
mov
add
ds
rolb
pop
cmp
xchg
int3
stos
cmp
xchg
fadds
mov
push
add
ret
fcomps
lret
xchg
add
ret
test
lods
xor
and
mov
enter
or
sahf
call
das
sbb
es
stos
in
inc
and
sbb
aas
push
sub
iret
lock
inc
add
scas
or
mov
mov
mov
add
jle
repnz
bsf
movsb
lcall
pop
pop
popf
inc
add
icebp
cmc
mov
rolb
lret
fs
mov
xor
ss
rorb
cwtl
addb
xor
push
lods
adc
adc
and
movsb
fidivl
addb
push
xor
sbb
scas
xchg
mov
into
push
scas
test
or
dec
jmp
cmpl
out
inc
add
push
sub
mov
xchg
scas
and
mov
jno
sbb
jae
fmuls
je
inc
add
or
xchg
xchg
outsl
sbb
adc
mov
or
xchg
addl
jb
mov
xor
std
add
xchg
sbb
push
push
add
mov
jge
xchg
xchg
pusha
add
xchg
jmp
cs
add
and
shl
lret
insl
rolb
dec
loope
loope
sub
add
repnz
and
adc
movsl
push
das
pop
push
js
mov
inc
add
mov
push
add
or
test
aas
jl
iret
lahf
leave
inc
push
jb
and
fdiv
dec
jge
pop
inc
add
mov
mov
add
mov
shrb
pop
lods
xor
dec
imul
nop
aad
inc
add
or
mov
pop
cmp
into
in
add
inc
add
mov
and
add
add
push
or
mov
jge
jb,pn
test
mov
push
jp
lods
inc
add
sbb
inc
add
mov
add
pop
lods
and
lds
in
push
pop
push
mov
sbb
cmp
pop
nopl
test
sbb
dec
clc
mov
add
and
or
add
cwtl
mov
add
call
jno
mov
xor
pop
insb
dec
inc
add
movsb
sbb
or
clc
add
ret
add
mov
loop
dec
cmp
jg
test
add
or
mov
mov
fldpi
fdiv
jl
loope
push
imul
sub
add
flds
dec
jb
add
and
imul
pop
test
mov
lahf
push
jmp
in
imul
mov
inc
add
aam
in
cmpsb
jae
pop
jno
jmp
mov
mov
fs
push
movsb
cmpsl
jnp
xor
xor
lods
loope
pop
jl
add
inc
add
xor
xor
pop
into
pop
das
lea
pop
shlb
fadd
add
out
jle
add
inc
adc
adc
stos
ss
dec
mov
jge
scas
hlt
mov
rorb
bound
je
cmpsb
ss
and
mov
pop
cmpl
dec
or
iret
sub
or
push
call
xor
sti
mov
dec
loope
in
inc
add
call
into
repz
push
jno
pop
mov
call
ret
pop
stos
cmp
mov
add
movsb
push
scas
cmp
mov
sbb
sub
scas
imull
mov
dec
repnz
adc
sub
and
lods
negb
test
xlat
dec
jl
outsb
imul
out
push
mov
or
and
icebp
loop
mov
xor
xor
es
enter
push
push
xchg
or
add
add
or
mov
lret
or
pop
push
cltd
mov
inc
add
mov
or
add
and
in
insl
push
jge
xchg
stos
mov
dec
lock
gs
jnp
add
add
mov
cli
ss
jle
jno
lds
mov
mov
cmp
bound
lahf
js
mov
dec
fstpl
das
and
mov
pop
push
lods
fiaddl
into
push
inc
jle
jg
lods
push
and
cmp
pop
push
aad
add
ja
sbb
and
or
mov
sub
popa
stos
sbb
bt
add
int
add
shll
adc
pop
pop
aam
aam
cmc
adc
arpl
add
add
add
ret
movb
inc
add
inc
add
jle
add
pop
test
pop
les
movb
push
cld
push
mov
nop
ret
or
aad
or
push
add
jbe
xchg
push
insb
jl
jo
cmpsb
push
add
sub
outsl
ret
push
jmp
mov
pusha
add
sub
add
and
or
dec
hlt
mov
push
ret
or
pop
in
inc
add
dec
jmp
int
jo
jae
scas
push
rcrb
push
add
jge
push
add
xchg
sbb
push
mov
cltd
push
add
pop
xchg
mov
or
aad
push
pop
int3
scas
fnsave
mov
mov
shr
push
mov
jb
add
adc
cmp
add
inc
inc
inc
ret
rorl
stc
mov
sub
cmpsb
out
add
mov
jb
add
nop
push
push
sarb
mov
add
fwait
and
pusha
add
push
push
mov
fldt
fldl
add
xor
add
pop
push
mov
jecxz
test
or
mov
pusha
add
add
ljmp
test
xchg
lret
mov
lret
xlat
dec
sahf
decl
mov
sti
jne
cld
sti
sub
cmp
add
out
and
xlat
pop
cmp
mov
arpl
add
imul
pusha
add
cmp
ret
push
add
mov
arpl
push
add
xor
add
ljmp
or
ret
xchg
jecxz
inc
push
sbb
jae
sbb
shrw
imull
mov
add
add
add
xor
inc
cmpsl
inc
add
push
push
dec
jne
mov
jmp
in
cmp
xlat
xchg
add
mov
dec
sub
pop
mov
add
lret
add
jbe
dec
por
dec
add
add
lea
stc
addb
mov
and
fidivrs
push
jg
rolb
in
sahf
add
dec
rolb
sbb
mov
sub
mov
icebp
pcmpgtd
cltd
mov
int3
mov
lods
or
sub
xchg
fwait
and
xor
mov
jae
aam
jae
mov
sub
add
inc
add
pop
cmc
jo
daa
push
xchg
int
cld
sub
adc
adc
inc
cmp
mov
adc
sub
in
cwtl
dec
push
popf
int3
arpl
or
mov
lret
add
repz
cltd
pop
cltd
shlb
push
outsl
scas
mov
into
pop
loope
or
inc
add
into
int
rorb
mov
xchg
imul
paddd
add
pop
divb
icebp
outsl
mov
mov
cmp
dec
lcall
outsl
call
pop
in
pop
xchg
lahf
adc
add
loop,pt
cld
dec
bound
dec
dec
test
leave
testl
jle
add
inc
add
nop
es
add
inc
add
add
stc
nop
es
movsb
add
loopne
add
dec
or
mov
xchg
ret
outsl
test
mov
shl
stc
nop
es
add
jp
fldl
inc
pushf
dec
nop
cld
nop
jmp
add
in
add
mov
cmp
es
add
add
cld
push
push
mov
xchg
ret
mov
mov
add
add
push
mov
xchg
ret
in
inc
rcll
add
mov
ret
pop
dec
stc
nop
es
add
pop
add
aad
sbb
sar
es
sbb
add
add
stos
jmp
stc
nop
es
add
push
mov
xchg
ret
insb
adc
jp
add
sahf
call
stc
nop
es
and
je
stc
nop
es
add
add
dec
cmp
nop
es
add
add
add
fisttps
stc
nop
es
cmp
movsb
cmpb
jmp
add
add
mov
and
nop
es
push
add
push
mov
jmp
fnstsw
add
add
add
shll
nop
es
mov
add
cmp
es
mov
add
push
sar
nop
es
insb
add
push
jp
insl
cmp
mov
stc
nop
es
pushf
imul
mov
nop
cld
nop
jmp
add
push
iret
lea
stc
nop
es
movsl
add
pop
add
pop
sub
stc
nop
es
flds
cmp
mov
push
mov
xchg
ret
cmp
add
cmpsl
push
jp
jne
stc
nop
es
mov
add
loop
leave
push
stc
nop
es
adc
add
cld
or
jmp
loopne
insb
add
add
add
add
stc
nop
es
bound
mov
stc
nop
es
mov
lcall
inc
add
nop
es
cmp
add
inc
decl
test
cld
nop
jmp
xlat
mov
jge
scas
enter
jb
in
cmp
lret
mov
es
bound
add
lea
stc
nop
es
movsb
cmp
loop
loop
out
xor
stc
nop
es
mov
add
add
push
mov
xchg
ret
add
pushf
cmpsl
pop
add
adc
jno
cmp
nop
cld
nop
jmp
add
insl
sti
add
or
std
sti
sbb
add
in
sbb
mov
add
es
add
leave
sub
in
add
push
inc
loope
ds
fwait
mov
sti
testl
nop
cld
nop
jmp
add
add
sti
add
add
sbb
add
add
push
stc
nop
es
addb
add
add
and
pop
and
push
mov
xchg
ret
add
loopne
xlat
sub
mov
xchg
ret
add
mov
jo
and
nop
cld
nop
jmp
add
add
add
movb
inc
jo
mov
push
mov
xchg
ret
xchg
add
jmp
stc
nop
es
add
add
data16
es
jp
add
js
stc
nop
es
jbe
mov
push
add
push
or
mov
xchg
ret
leave
pushf
add
add
cmp
stc
inc
add
xchg
add
call
stc
nop
es
bound
leave
lcall
add
add
cmp
fbld
add
div
nop
cld
nop
jmp
add
cmp
push
in
add
loop
in
ror
push
mov
xchg
ret
in
cmpsl
cmp
mov
stc
nop
es
add
mov
add
outsl
call
pop
add
cmp
pop
sub
push
jle
sub
add
nop
es
add
cmp
xor
fisttps
test
nop
es
mov
add
movzwl
stc
nop
es
flds
add
cmp
sub
inc
add
pop
test
push
mov
xchg
ret
jbe
add
fnstsw
push
add
push
xor
and
stc
nop
es
add
pushf
add
push
dec
je
stc
nop
es
add
add
cld
nop
jmp
cmp
lcall
pop
sub
stc
nop
es
mov
add
les
mov
cmp
stc
nop
es
xchg
sub
add
imul
stc
nop
es
adc
add
pushf
xor
stc
nop
es
imul
mov
push
push
mov
xchg
ret
cmp
add
add
fcoms
cld
nop
jmp
fstps
rcrl
mov
stc
nop
es
add
bound
mov
and
add
pop
add
fsts
sub
mov
push
mov
xchg
ret
and
loopne
mov
stc
nop
es
sub
push
add
lock
inc
and
nop
es
add
add
mov
cld
nop
jmp
add
add
loopne
push
or
add
stc
nop
es
inc
add
movsb
sub
mov
add
pop
add
mov
add
movb
add
add
stc
nop
es
add
mov
add
nop
es
add
ret
cmp
add
int
stc
nop
es
add
add
add
add
mov
stc
nop
es
add
add
mov
stc
nop
es
add
clc
mov
stc
nop
es
lcall
sbb
cld
nop
jmp
add
add
add
ds
nop
cld
nop
jmp
add
movsb
push
add
cmp
sub
inc
add
insb
add
cmpsl
popa
pushf
pop
push
mov
xchg
ret
imul
add
add
pop
stc
nop
es
or
loopne
push
add
push
add
push
mov
xchg
ret
add
cmpsb
add
add
nop
es
pop
jbe
cltd
subl
push
mov
xchg
ret
add
push
mov
xchg
ret
add
inc
add
in
insl
adc
mov
stc
nop
es
xor
add
mov
jb
loopne
pop
movsb
loopne
inc
jne
push
in
ret
stc
nop
es
add
jbe
mov
leave
mov
lods
stc
nop
es
add
mov
hlt
bound
insl
push
sbb
jne
push
mov
xchg
ret
add
xor
fidivrl
stc
nop
es
add
test
pop
and
push
mov
xchg
ret
fstl
jp
adc
pop
stc
nop
es
push
add
add
nop
es
inc
add
jbe
add
loop
test
mov
add
stc
nop
es
push
cmp
nop
cld
nop
jmp
add
add
add
add
sub
inc
add
add
loop
adc
jbe
stc
nop
es
add
and
pusha
add
adc
incl
inc
add
mov
inc
add
and
nop
cld
nop
jmp
add
fsts
push
mov
xchg
ret
add
add
add
add
stc
nop
es
cmp
add
xor
pop
add
dec
mov
stc
nop
es
shll
loopne
test
nop
es
sti
add
leave
add
es
add
add
add
add
xchg
testb
cmp
ret
bound
add
add
mov
sbb
cmp
nop
es
cmpsl
add
jne
stc
nop
es
leave
add
mov
cld
nop
jmp
sub
test
adc
add
add
stc
nop
es
add
xchg
inc
fidivrl
lret
nop
jmp
sub
xor
add
scas
mov
push
mov
xchg
ret
add
adc
leave
out
add
shl
add
hlt
push
xor
js
clc
stc
nop
es
xlat
add
add
or
nop
cld
nop
jmp
add
add
xlat
pop
add
stc
nop
es
add
jp
push
xor
push
mov
xchg
ret
sub
in
add
arpl
es
sub
add
in
add
add
stc
nop
es
sti
cmpsl
add
push
movsl
insb
mov
push
mov
xchg
ret
add
xor
pop
jmp
push
mov
xchg
ret
cmpsl
leave
add
push
push
mov
xchg
ret
lcall
jne
stc
nop
es
add
mov
stc
nop
es
insl
add
movb
es
add
fidivs
stc
nop
es
arpl
xor
jae
testl
stc
nop
es
add
in
add
stc
nop
es
in
add
add
or
jne
cmc
mull
stc
nop
es
add
in
ds
nop
cld
nop
jmp
add
add
jb
addr16
repnz
mov
adc
nop
es
insl
add
pop
add
lods
stc
nop
es
add
movsb
filds
loopne
cltd
mov
push
mov
xchg
ret
insl
sbb
rolb
push
stc
nop
es
add
add
mov
nop
cld
nop
jmp
add
add
in
xor
add
aad
add
stc
nop
es
xchg
add
in
add
cmp
jb
add
in
in
cmp
jmp
and
add
loopne
push
push
leave
mov
mov
xchg
ret
cmpsl
add
stc
nop
es
jp
add
addb
add
mov
xchg
ret
xor
mov
stos
stc
nop
es
xchg
in
lcall
mov
stc
nop
es
ffreep
addb
pop
push
mov
xchg
ret
add
pop
pop
push
mov
xchg
ret
pop
add
xchg
dec
push
stc
nop
es
inc
sub
movsb
add
leave
add
nop
es
cmp
cmp
sbb
fdivr
inc
add
add
add
sub
nop
es
add
push
add
bound
sbb
es
cmp
sub
inc
insb
iret
mov
stc
nop
es
add
mov
aam
sub
stc
nop
es
ret
pop
bound
sub
add
push
stc
nop
es
add
jp
arpl
add
fistps
nop
es
xchg
push
add
pushf
add
movswl
stc
nop
es
xchg
add
sarl
jmp
stc
nop
es
cmp
add
add
push
nop
cld
nop
jmp
leave
mov
cmpsl
mov
jp
add
hlt
inc
add
sub
add
add
add
nop
cld
nop
jmp
in
xchg
add
insb
push
nop
cld
nop
jmp
add
adc
fldl
add
push
sbb
stc
nop
es
cmp
lcall
jge
inc
add
add
add
add
es
lea
nop
cld
nop
jmp
xchg
add
add
adc
push
dec
push
push
mov
xchg
ret
insb
add
add
cmp
es
add
xchg
add
arpl
mov
push
mov
xchg
ret
inc
flds
add
push
inc
call
inc
add
fists
add
push
mov
xchg
ret
test
add
test
jmp
jmp
mov
add
add
mov
stc
nop
es
xchg
xlat
cmpsl
add
push
xor
add
dec
add
cld
nop
jmp
add
sbb
arpl
stc
nop
es
add
outsl
mov
push
mov
xchg
ret
add
add
or
nop
cld
nop
jmp
orb
xlat
mov
jb
hlt
cmp
and
add
cmc
cmpl
nop
jmp
loopne
sti
sbb
add
push
mov
xchg
ret
fistpll
add
test
add
nop
cld
nop
jmp
and
add
push
imul
ljmp
add
xchg
add
mov
add
nop
es
add
outsl
push
mov
add
in
stc
nop
es
pushf
pop
add
xchg
add
je
nop
cld
nop
jmp
and
xor
stc
nop
es
add
add
push
push
mov
xchg
ret
add
subb
dec
xor
push
mov
xchg
ret
add
add
xlat
lods
mov
stc
nop
es
push
push
fmull
nop
jmp
in
add
mov
hlt
add
xor
stc
nop
es
cmp
sbb
jb
movsl
add
add
jp
test
test
nop
cld
nop
jmp
add
pop
add
stc
nop
es
add
add
xchg
fnstcw
inc
or
mov
xchg
ret
mov
movsl
sbb
in
repz
add
add
popa
add
nop
es
add
lcall
cmp
cld
nop
jmp
movsl
xchg
add
add
pop
mov
push
mov
xchg
ret
movsl
add
mov
stc
nop
es
xlat
sub
movzwl
nop
cld
nop
jmp
add
push
jp
add
push
stc
nop
es
cmp
add
cli
out
add
add
add
sub
nop
es
add
sbb
jp
cmp
nop
cld
nop
jmp
add
xchg
add
insl
bound
mov
xchg
ret
add
pop
loop
add
loope
dec
stc
nop
es
add
test
pop
shrl
xor
cs
nop
es
xorb
stc
nop
es
push
mov
add
add
add
nop
es
jp
add
je
movsb
mov
add
stc
nop
es
pop
or
ffree
jmp
jb
addb
roll
fxch
mov
stc
nop
es
add
add
mov
stc
nop
es
fstps
add
add
stc
nop
es
add
add
add
sbb
nop
jmp
add
test
inc
and
nop
cld
nop
jmp
add
leave
mov
jne,pt
stc
nop
es
arpl
shll
stos
pushl
stc
nop
es
test
add
test
sldt
stc
nop
es
movsl
loopne
push
mov
stc
nop
es
add
hlt
and
adc
nop
cld
nop
jmp
movsl
add
fbld
es
sub
add
pop
xchg
push
push
pop
das
sub
stc
nop
es
add
xchg
jp
add
nop
es
mov
bound
loopne
mov
jg
add
stc
nop
es
add
add
or
mov
cld
nop
jmp
add
add
and
mov
stc
nop
es
inc
test
sub
rclb
or
inc
add
add
bound
add
adc
add
inc
add
add
add
mov
call
jmp
add
flds
loopne
mov
jg
stc
nop
es
add
add
add
mov
es
in
pop
jp
outsl
mov
nop
cld
nop
jmp
xlat
test
inc
add
jo
int3
mov
stc
nop
es
pop
mov
movsl
jbe
cmpsb
xchg
movsl
add
nop
es
mov
sbb
std
jne
stc
nop
es
flds
sbb
inc
lret
push
mov
xchg
ret
test
pushf
je
movsb
and
add
add
cmp
add
enter
cmp
cmc
outsl
xchg
add
addb
add
ret
add
lret
dec
sbb
xchg
das
add
stc
nop
es
mov
add
lcall
add
nop
es
in
pop
add
cmp
cmp
ret
inc
or
add
fnstenv
ljmp
incb
xchg
ret
adc
add
push
sbb
push
mov
xchg
ret
add
add
fsts
fwait
mov
nop
cld
nop
jmp
add
sub
and
dec
dec
nop
cld
nop
jmp
add
pop
sub
jp
add
call
stc
nop
es
add
add
adc
mov
push
adc
nop
cld
nop
jmp
sbb
xlat
bound
add
jno
push
push
mov
xchg
ret
leave
or
insl
add
add
popa
add
nop
es
add
mov
dec
nop
cld
nop
jmp
add
pop
movsl
fldenv
add
addr16
mov
stc
nop
es
add
mov
push
inc
xchg
dec
mov
stc
nop
es
xlat
cmp
sub
repz
mov
xchg
ret
add
xor
add
subl
jb
mov
addb
test
test
pop
add
stc
nop
es
xlat
in
movsb
outsb
add
stc
nop
es
flds
add
inc
or
nop
es
add
imul
add
or
nop
es
loop
bound
add
dec
push
stc
nop
es
add
add
das
push
push
mov
xchg
ret
insb
lcall
mov
mov
xchg
ret
xlat
in
imul
sbb
mov
xchg
ret
hlt
mov
outsl
pop
add
push
mov
xchg
ret
add
add
pop
push
stc
nop
es
add
add
push
lret
add
stc
nop
es
add
cmp
xor
cmp
nop
cld
nop
jmp
addb
add
ret
add
jbe
jmp
stc
nop
es
add
xor
add
push
mov
xchg
ret
leave
add
insl
in
xor
stc
nop
es
add
add
rolb
add
stc
nop
es
add
xchg
cld
nop
jmp
add
pop
add
xor
add
ret
stc
nop
es
sti
cmp
hlt
add
sti
nop
cld
nop
jmp
inc
leave
test
xor
stc
nop
es
adc
bound
jbe
push
stc
nop
es
add
insb
in
add
add
pop
nop
cld
nop
jmp
outsl
add
adc
pushf
arpl
shll
daa
dec
push
push
mov
xchg
ret
jbe
mov
dec
mov
stc
nop
es
ret
sub
movsb
add
mov
xchg
ret
add
add
adc
add
adc
add
cmp
outsl
negl
push
mov
sub
add
dec
add
add
xlat
xchg
inc
add
xor
stc
nop
es
or
add
add
add
incl
nop
cld
nop
jmp
mov
bound
push
out
mov
nop
cld
nop
jmp
movsl
movsb
add
loop
push
pop
mov
add
nop
es
add
bound
and
add
out
popa
push
mov
xchg
ret
cmp
add
add
out
sbb
incl
xchg
ret
fldl
add
add
add
add
stc
nop
es
push
add
jl
jl
sbb
cld
nop
jmp
fldcw
add
add
nop
add
add
nop
es
cmp
push
adc
push
push
mov
xchg
ret
fbstp
mov
add
mov
add
jne
stc
nop
es
add
test
xor
nop
es
hlt
jp
mov
and
nop
cld
nop
jmp
sub
pop
add
inc
bound
sbb
inc
and
nop
es
cmp
adc
outsl
inc
add
and
sub
stc
nop
es
or
cmpsl
cmp
sub
sub
push
push
mov
xchg
ret
xchg
add
add
jp
pop
push
mov
xchg
ret
add
jne
add
stc
nop
es
mov
push
loopne
mov
xchg
ret
cmp
xchg
bound
pop
push
nop
cld
nop
jmp
or
add
loop
lcall
out
call
cld
nop
jmp
sub
xchg
leave
inc
jbe
in
push
nop
cld
nop
jmp
cmp
inc
in
add
cmp
mov
stc
nop
es
add
jbe
add
add
movzwl
stc
nop
es
adc
movsb
cmp
es
add
and
loopne
push
push
mov
xchg
ret
add
bound
add
add
stc
nop
es
add
rolb
insl
je
nop
cld
nop
jmp
xor
adc
xor
add
stc
nop
es
imul
push
mov
nop
es
add
test
es
xchg
add
add
outsl
sbb
add
jb
add
leave
add
add
loopne
and
mov
nop
cld
nop
jmp
outsl
flds
add
xchg
leave
add
jne
stc
nop
es
mov
add
rep
nop
cld
nop
jmp
arpl
pop
add
es
add
and
mov
adc
add
adc
add
shr
stc
nop
es
add
loopne
fbstp
and
sbb
nop
es
add
imul
shll
lea
stc
nop
es
add
add
mov
and
arpl
inc
add
arpl
jno
add
out
out
clc
stc
nop
es
outsl
add
add
and
jns
inc
cmp
mov
xchg
ret
add
sti
add
jmp
fsub
inc
add
inc
xchg
add
aas
call
stc
nop
es
push
mov
add
add
nop
es
cmpsl
push
add
add
add
add
stc
nop
es
push
rcr
xchg
mov
lods
pop
stc
nop
es
add
add
add
adc
pop
nop
cld
nop
jmp
cmp
sti
add
add
inc
add
push
mov
xchg
ret
sub
pushf
pop
xchg
inc
add
add
stc
nop
es
inc
sbb
mov
xchg
ret
pushf
bound
fldl
stc
ret
stc
nop
es
loopne
add
in
jp
outsl
mov
jne
stc
nop
es
xlat
xlat
add
cli
stc
nop
es
sbb
cmp
stc
nop
es
add
loopne
leave
add
xchg
sbbl
sub
add
pushf
imul
add
ret
fldl
mov
inc
add
xlat
inc
in
mov
stc
nop
es
push
add
add
xchg
in
lods
stc
nop
es
sub
add
push
cmpsl
add
sbb
add
add
nop
cld
nop
jmp
xor
mov
nop
es
shll
xor
mov
or
xchg
ret
add
pop
add
add
and
mov
stc
nop
es
push
add
mov
add
push
ljmp
shr
incl
add
outsl
add
add
sub
nop
es
insb
add
add
nop
cld
nop
jmp
add
add
mov
mov
push
mov
xchg
ret
cmp
add
add
fs
nop
es
inc
xchg
insb
cmpb
lret
stc
nop
es
movsl
leave
bound
pop
add
mov
mov
add
imul
add
stc
nop
es
add
adc
mov
stc
nop
es
add
push
mov
test
test
nop
jmp
push
add
movsb
pop
and
stc
nop
es
ret
add
add
nop
es
and
add
outsl
xchg
fwait
pusha
stc
nop
es
ret
add
imul
loopne
push
jb
mov
add
ret
adc
nop
jle
movsl
stc
nop
es
sbb
add
test
es
xchg
adc
aas
mov
push
mov
xchg
ret
add
add
sub
add
stc
nop
es
ret
add
add
add
xchg
fnsave
sar
nop
es
filds
in
pushf
rcrl
and
nop
es
add
xchg
pusha
add
mov
add
stc
nop
es
add
dec
push
stc
nop
es
bound
push
bound
add
nop
jmp
inc
sbb
xor
sub
add
es
pushf
loopne
add
add
nop
es
add
add
add
add
push
push
mov
xchg
ret
in
add
and
es
add
stc
nop
es
add
addb
jno
add
push
mov
xchg
ret
add
and
add
add
add
add
clc
stc
nop
es
sub
sub
loop
add
stc
nop
es
add
add
add
add
pop
mov
stc
nop
es
sub
xchg
out
add
stc
nop
es
cmp
imul
sbbb
cmpsl
insl
xchg
or
stc
nop
es
fstps
dec
push
stc
nop
es
mov
add
xchg
imul
jb
add
xchg
add
add
addb
add
nop
es
xchg
add
rolb
shl
push
mov
xchg
ret
jp
pop
xor
mov
nop
es
push
add
adc
or
add
sti
lcall
cmp
nop
es
add
xor
xchg
int3
and
nop
cld
nop
jmp
sbb
sbb
or
add
ret
add
nop
es
add
mov
inc
stc
nop
es
lcall
add
jne
nop
cld
nop
jmp
add
add
inc
add
push
aam
add
mov
stc
nop
es
add
cwtl
add
stc
nop
es
fsts
add
add
push
mov
add
lret
add
add
movsb
pop
sbb
xor
test
nop
jmp
add
loop
and
push
mov
nop
cld
nop
jmp
loop
add
cs
push
mov
xchg
ret
add
add
dec
mov
stc
nop
es
add
add
movsb
stc
nop
es
push
xlat
outsl
add
stc
nop
es
add
add
flds
add
cmpl
nop
cld
nop
jmp
pop
add
fsts
nop
es
add
mov
sbb
sub
inc
push
add
jb
nop
cld
nop
jmp
pushf
add
hlt
add
lea
nop
cld
nop
jmp
push
add
add
stos
les
stc
nop
es
sti
add
stc
nop
es
bound
add
cmp
pop
nop
cld
nop
jmp
sbb
push
add
add
or
jle
jmp
sub
add
add
insb
mov
fnstcw
add
stc
nop
es
add
add
xchg
add
mov
push
mov
xchg
ret
push
cmp
flds
mov
stc
nop
es
pop
ret
cmp
add
movsl
add
rolb
or
add
nop
es
jp
fnstenv
pushl
nop
cld
nop
jmp
imul
add
pusha
add
push
stc
nop
es
add
add
or
add
icebp
out
add
stc
nop
es
pop
add
add
add
xor
nop
cld
nop
jmp
bound
loopne
push
add
jecxz
dec
add
nop
cld
nop
jmp
test
mov
das
or
add
nop
es
outsl
inc
loop
mov
stc
nop
es
in
jbe
pop
xchg
imul
icebp
mov
add
cmpl
push
mov
xchg
ret
pushf
insb
hlt
mov
stos
push
mov
xchg
ret
push
add
add
adc
inc
pop
std
cmpw
stc
nop
es
movsb
push
mov
test
cld
nop
jmp
add
mov
leave
bound
mov
add
nop
cld
nop
jmp
add
arpl
add
nop
es
add
add
fnstenv
push
push
mov
xchg
ret
pop
mov
fistpll
stc
nop
es
mov
add
shrl
test
cld
nop
jmp
mov
sti
pushf
mov
call
stc
nop
es
add
in
push
stc
nop
es
jp
add
gs
or
stc
nop
es
lcall
sbb
fiadds
add
stc
nop
es
cmpsl
flds
add
and
cld
nop
jmp
hlt
add
leave
cmpsl
xor
into
cld
nop
cld
nop
jmp
push
loopne
add
filds
add
add
push
mov
xchg
ret
add
add
pusha
add
add
stc
nop
es
mov
cmpsl
add
ror
stc
nop
es
in
add
add
std
add
stc
nop
es
add
loop
push
fnstcw
push
mov
xchg
ret
add
add
add
push
push
mov
xchg
ret
add
bound
add
mov
arpl
test
insl
xor
nop
cld
nop
jmp
mov
xlat
sbbb
pop
stc
nop
es
add
sub
hlt
sub
jb
add
add
add
add
stc
nop
es
in
add
xor
add
push
nop
cld
nop
jmp
inc
add
add
add
add
adc
push
push
mov
xchg
ret
add
add
rep
push
mov
xchg
ret
add
inc
test
movzwl
stc
nop
es
add
cmpsl
sub
movsl
xchg
int
pop
jae
nop
es
add
cmp
stc
nop
es
hlt
outsl
add
pushf
cmp
imul
stc
nop
es
outsl
add
add
rcrb
nop
es
or
movsl
add
jp
sub
es
add
cmp
push
leave
insl
mov
stc
nop
es
xchg
insl
add
sub
add
mov
stc
nop
es
pop
add
pop
pop
bound
add
mov
add
stc
nop
es
add
add
arpl
test
add
stc
nop
es
flds
add
push
stc
nop
es
add
add
add
add
add
add
dec
push
stc
nop
es
mov
sub
mov
inc
fldcw
fwait
add
nop
cld
nop
jmp
xlat
cmp
and
jbe
stc
nop
es
add
lea
push
mov
xchg
ret
inc
add
jp
lods
test
push
mov
xchg
ret
add
add
add
insb
push
stc
nop
es
add
cmp
add
add
aas
xor
stc
nop
es
or
mov
jnp
add
stc
nop
es
mov
fildll
xchg
push
push
push
mov
xchg
ret
add
add
mov
fldl
xchg
ret
add
sbb
fldenv
nop
es
add
add
data16
nop
es
ret
outsl
ret
addb
add
lahf
cs
stc
nop
es
add
lcall
dec
inc
stc
nop
es
add
mov
jne
stc
nop
es
add
test
nop
es
mov
xchg
lcall
cmp
cld
nop
jmp
loop
add
sub
mov
xchg
ret
xlat
sbb
bound
pop
and
cld
nop
jmp
ret
add
add
lcall
stc
nop
es
xchg
add
add
add
mov
jmp
add
add
loop
xor
loope
xor
nop
cld
nop
jmp
add
bound
gs
stos
and
stc
nop
es
add
mov
add
loop
xor
nop
cld
nop
jmp
add
pop
add
insb
rolb
add
mov
hlt
call
repnz
jmp
add
movb
nop
es
add
flds
sub
push
mov
add
stc
nop
es
ret
add
adc
dec
push
mov
xchg
ret
pushf
sub
add
add
ja
add
and
stc
nop
es
in
fstl
lea
sti
nop
cld
nop
jmp
xor
movsl
push
add
inc
adc
nop
es
xchg
add
add
inc
or
out
push
pop
add
add
jecxz
cmp
nop
cld
nop
jmp
sub
cmpsl
add
push
mov
xchg
ret
add
add
add
mov
inc
and
stc
nop
es
add
mov
mov
xchg
ret
bound
add
add
push
push
push
mov
xchg
ret
lcall
jbe
mov
jb
add
imul
push
add
lods
mov
nop
cld
nop
jmp
rcll
add
nop
cld
nop
jmp
push
add
sub
cmp
add
dec
and
push
mov
xchg
ret
mov
fldl
das
call
stc
nop
es
roll
add
adc
nop
es
mov
add
test
nop
cld
nop
jmp
add
add
add
es
ret
add
add
mov
es
push
add
push
push
add
not
push
mov
xchg
ret
add
add
inc
add
mov
stc
nop
es
insl
fstps
outsl
add
add
jo
add
add
popf
dec
pop
add
push
js
nop
es
movsl
push
add
test
mov
stc
nop
es
flds
pushf
add
add
mov
jecxz
sbb
jmp
add
add
add
fnstsw
push
mov
xchg
ret
add
fsincos
add
jp
dec
sub
nop
es
sbb
insb
add
nop
repz
add
mov
nop
es
add
add
jmp
insb
in
add
mov
add
add
nop
es
sub
clc
mov
stc
nop
es
add
add
add
call
nop
cld
nop
jmp
add
insb
add
loope
nop
es
and
or
jnp
push
mov
xchg
ret
add
push
add
and
stc
nop
es
push
push
cmp
add
nop
es
xchg
add
push
pushf
add
stc
nop
es
outsl
fldl
pop
xchg
and
popa
add
mov
xchg
ret
add
jmp
stc
nop
es
inc
inc
pop
cmp
jmp
xlat
add
add
and
cmpsl
mov
jmp
bound
fsts
add
nop
es
add
add
xor
push
mov
xchg
ret
pop
add
or
push
and
push
mov
xchg
ret
cmp
sbb
sbb
test
nop
cld
nop
jmp
cmpb
jbe
mov
push
mov
movsb
stc
nop
es
bound
add
imul
pop
mov
stc
nop
es
add
add
push
mov
xchg
ret
cmp
add
xchg
loop
in
mov
nop
cld
nop
jmp
add
add
pop
mov
stc
nop
es
fistps
fldl
cltd
lea
push
mov
xchg
ret
sub
add
decb
mov
add
nop
es
push
add
repz
nop
es
push
add
leave
xchg
add
add
fmull
jb
cmp
add
insl
and
mov
stc
nop
es
loopne
bound
push
add
cmp
jmp
movsb
sbb
cmp
push
push
mov
xchg
ret
sti
adc
pop
movsl
rolb
push
stc
nop
es
fbld
push
sti
or
stos
nop
cld
nop
jmp
mov
xor
add
call
stc
nop
es
add
insb
add
jmp
loop
push
add
mov
xor
stc
nop
es
movsb
add
inc
add
rol
rolb
ljmp
add
xlat
add
xchg
stc
nop
es
pop
cmp
xor
add
leave
mov
jb
stc
nop
es
add
jge
popa
add
mov
xchg
ret
add
or
nop
cld
nop
jmp
loop
mov
add
add
das
push
stc
nop
es
flds
bound
add
pop
mov
stc
nop
es
mov
add
add
add
jb
add
outsl
sbb
hlt
mov
and
nop
es
add
xor
out
mov
stc
nop
es
and
add
mov
mov
push
mov
xchg
ret
add
sti
add
xor
nop
es
insl
subb
add
ja
push
stc
nop
es
add
in
inc
stc
nop
es
add
add
xchg
add
add
stc
nop
es
cmp
inc
add
nop
cld
nop
jmp
add
add
or
out
stc
nop
es
jbe
shrb
es
xchg
add
flds
add
stc
nop
es
fbld
fld
add
add
add
nop
es
movsl
add
dec
sub
jmp
push
loop
push
add
push
add
jno
push
xor
stc
nop
es
add
mov
in
pop
stc
nop
es
ret
mov
add
add
fwait
popa
stc
nop
es
add
add
cmp
sbb
add
mov
nop
cld
nop
jmp
lcall
sub
stc
nop
es
add
ret
add
jb
push
add
and
push
nop
mov
push
cld
nop
jmp
in
in
insl
add
insl
mov
push
mov
xchg
ret
in
add
add
es
lcall
pop
ret
fsts
add
cmpsl
cmp
add
add
sbb
jmp
cmp
ret
add
add
ret
push
mov
xchg
ret
sbb
inc
sbb
test
stc
nop
es
add
fdiv
movsb
nop
cld
nop
jmp
fstps
push
hlt
or
xlat
es
out
pop
push
mov
xchg
ret
add
add
add
enter
nop
es
add
add
add
mov
pop
mov
nop
cld
nop
jmp
xchg
in
add
add
push
stc
nop
es
add
in
add
cmp
add
add
mov
xchg
ret
add
add
hlt
mov
in
add
add
add
add
add
in
mov
daa
inc
add
rorb
scas
pop
addr16
xor
and
or
jmp
xchg
insl
pop
or
jno
push
pop
movsl
xorl
out
inc
test
sub
jno
popa
int
or
cltd
and
adc
sbb
mov
adc
inc
es
add
jb
cmpsb
mov
inc
add
cld
adc
jbe
add
mov
daa
idivl
push
xchg
sbb
int3
cmp
xchg
push
jl
in
aaa
shrb
adc
jge
cmp
mov
mov
cmp
in
push
fsubrs
mov
and
addb
mov
cmp
addb
add
into
lods
push
hlt
pop
lods
cli
ljmp
imul
jne
addb
cmpsl
lret
mov
insb
mov
pop
enter
or
leave
jns
jno
xchg
lcall
mov
adc
dec
fistpl
mov
pusha
add
xchg
pop
aaa
pop
mov
lea
mov
pop
push
lcall
add
sti
jge
add
les
divb
lods
das
dec
test
push
dec
pusha
add
ret
fsubrp
cmpsb
scas
inc
add
cmc
shlb
rcl
mov
xchg
pop
lret
lea
test
jbe
adc
add
push
dec
push
sub
lds
lret
inc
add
pop
imul
add
imull
aad
imul
jp
stos
dec
push
xlat
cltd
lds
shll
out
sbb
jecxz
fidivrs
pop
pop
xchg
jmp
sbb
sbb
lcall
jb
cmp
add
lds
bound
addb
arpl
xor
or
add
add
add
cmp
pushf
lcall
scas
jne
push
cmp
sahf
mov
scas
inc
add
test
and
dec
mov
mov
xchg
sahf
mov
rcrl
pusha
add
jbe
leave
and
sub
sbb
in
hlt
lahf
or
push
out
adc
bnd
es
aas
xchg
adc
mov
and
mov
mov
add
cmp
les
aaa
js
sbb
xor
scas
into
xchg
test
and
roll
loop
add
cli
icebp
test
jp
js
mov
scas
jmp
mov
mov
pop
popf
mov
add
rolb
add
and
pop
and
setle
dec
dec
fmulp
popf
mov
outsb
mov
stc
cmpsb
or
stc
xchg
inc
insb
imul
adc
cmp
jo
outsl
pop
lds
pop
jl
mov
xor
les
xchg
fldenv
add
add
xor
mov
add
pop
add
loopne
pop
adc
dec
inc
add
lahf
or
call
inc
add
xor
ror
pop
cmp
sbb
pop
pop
and
cmpsb
ss
and
push
add
addb
leave
sti
jmp
in
inc
add
mov
push
and
stos
lock
and
enter
push
push
push
cmp
imul
int3
jbe
loop
pusha
add
je
mov
shl
outsl
inc
cmpsl
repz
add
lahf
hlt
adc
jp
xor
out
push
add
mov
cmpl
jno
add
ljmp
add
push
lods
cmpsb
es
jae
int3
icebp
mov
sub
xor
add
xor
add
push
in
lods
movb
imul
js
fildll
xchg
movsb
mov
shll
add
sub
ss
and
cmp
jg
cmp
jg
enter
imul
jmp
adc
insb
jl
dec
clc
lahf
jge
push
add
and
jo
loop
ds
jno
out
repnz
adc
jecxz
repz
jmp
mov
push
push
daa
in
stc
xor
xchg
sub
inc
add
xor
pop
negl
fildll
add
sub
outsb
inc
bound
dec
adc
inc
or
insl
fnstcw
movb
scas
pop
in
cmpl
pop
push
addb
inc
add
adc
mov
add
cs
loope
aam
add
mov
lock
add
orl
xor
sub
jo
popa
fidivs
xor
sub
ror
test
mov
aaa
pop
and
sbb
insb
imul
xor
rolb
xor
aaa
in
and
mov
add
mov
out
add
jl
lds
loope
push
sbb
ljmp
or
cmpl
popf
addb
inc
add
cli
out
mov
dec
push
pop
fidivrl
daa
mov
fidivrs
sub
pop
sbb
mov
xchg
dec
mov
adc
aad
sti
jbe
cmpsb
ja
push
add
add
fmull
loope
dec
add
ficomps
jbe
outsl
pmullw
cltd
repz
addr16
cs
loop
add
movsl
mov
pop
into
mov
cmp
add
sti
push
sbb
add
fidivrl
dec
repnz
addb
jb
ja
push
ret
dec
aaa
inc
add
xchg
push
or
arpl
int
movb
in
adc
daa
jl
fsubl
ljmp
call
adcl
mov
cmp
mov
pop
or
call
scas
dec
ja
movsb
addr16
adc
cs
call
push
mov
mov
outsl
xchg
and
xchg
add
cmp
int3
mov
add
call
subl
mov
cmp
mov
rolb
mov
adc
cmp
js
push
sub
hlt
xor
or
xlat
cmp
inc
add
pop
dec
xchg
xchg
push
movsl
adc
xchg
std
out
pushf
mov
bound
dec
jae
lea
stos
adc
lahf
dec
pop
out
xchg
xor
inc
add
pop
mov
stos
sbb
push
cs
aas
in
xchg
mulb
xlat
pop
cltd
adc
or
ds
dec
aad
call
roll
or
dec
xchg
inc
push
dec
aaa
mov
mov
jb
popf
addr16
and
icebp
inc
cmp
push
mov
cmovnp
dec
push
add
out
cmp
push
add
cmp
sar
push
xchg
repz
les
call
jae
dec
addb
mov
xchg
aaa
test
cmp
test
dec
stos
test
outsb
ret
pop
push
sub
dec
push
push
cmp
dec
int3
mov
daa
xor
cmp
aad
ljmp
sbb
flds
add
out
xlat
jl
es
pop
fistps
mov
push
mov
mov
mov
or
ficompl
mov
add
add
aam
jnp
mov
popf
sar
inc
lds
inc
add
std
mov
cld
jnp
mov
mov
divb
add
jns
or
mov
jecxz
int
jno
mov
lock
dec
xor
mov
adc
inc
and
imul
xor
sbb
cmp
sahf
xor
fadds
dec
gs
pop
lahf
rcl
inc
cltd
push
add
fs
in
pop
stc
xchg
dec
adc
xor
cwtl
jbe
or
dec
adc
sub
imul
sti
stos
addb
add
lahf
mov
repz
pop
leave
push
jle
test
pop
in
mov
int3
out
and
xlat
fadd
jo
rcrl
push
cmpsb
fidivl
dec
mov
loop
add
andl
mov
push
mov
icebp
ret
pop
cltd
jge
xchg
dec
push
pop
addb
filds
cltd
mov
sbb
inc
sbb
inc
add
or
add
lds
inc
jmp
add
out
push
xlat
loopne
mov
add
mov
and
hlt
xchg
cmp
mov
mov
jg
lret
lcall
add
pop
adc
push
lret
nop
gs
add
dec
mov
stos
add
icebp
sub
xchg
mov
aas
test
inc
add
jp
shrb
pop
nop
mov
into
lods
mov
rolb
lea
pop
sti
ret
mov
out
out
add
movb
xchg
or
addb
rolb
shr
es
out
mov
mov
pop
scas
jmp
jmp
sbb
sub
lock
add
movb
and
sbb
dec
popa
mov
int3
daa
cmp
jnp
lret
cmp
mov
outsl
or
xor
bound
idivb
lcall
dec
mov
jnp
pop
out
adc
add
jecxz
jb
jp
cmc
and
jnp
sarb
jge
das
jle
and
cmpsl
jp
andl
and
rcrb
adc
ficoms
shl
mov
fnstsw
lahf
mov
jle
into
xchg
lahf
sbb
mov
jbe
adc
adc
adcl
rcll
mov
in
aad
xlat
pop
and
add
jle
inc
add
imul
jp
hlt
inc
fwait
pop
cmpsb
fwait
inc
and
je
iret
movsl
call
adc
scas
sarl
mov
adc
cmp
ja
jns
bnd
stos
mov
add
jecxz
loop
cltd
ja
and
add
insl
sbb
add
mov
les
sub
inc
insb
xchg
jne
add
aad
cltd
lds
stos
mov
ja
xor
sbb
add
add
push
add
inc
add
xchg
sbb
add
std
and
in
sar
jl
lahf
jo
add
jne
mov
leave
xor
scas
incl
cmp
ret
inc
add
xor
mov
xlat
pop
stos
test
or
fdivr
nop
in
repz
mov
movb
jmp
iret
mov
mov
add
cmp
add
add
add
popa
lret
inc
add
jg
mov
lahf
push
add
imul
jbe
and
sub
xchg
dec
aad
jle
std
mov
adc
scas
lahf
nop
jne
out
cmp
cld
xchg
mov
push
jne
add
add
add
jbe
daa
pop
cmp
adc
add
stc
pop
test
fnstsw
xor
loop
fldl
cmp
stc
fadds
jb
add
pop
arpl
popa
inc
add
cmp
test
mov
outsb
mov
les
jl
jo
pop
out
insb
mov
xor
fcmovnbe
cs
push
out
divb
xor
add
xchg
out
popf
std
dec
jle
mov
mov
add
xchg
sub
and
xor
loopne
icebp
mov
sub
sahf
daa
push
add
push
cmp
mov
and
imul
repz
adc
outsl
mov
sbb
cmp
push
iret
push
xor
inc
add
outsb
push
js
scas
int3
sub
inc
add
xchg
add
in
inc
add
dec
movsb
lea
and
mov
jnp
dec
xlat
and
addb
push
add
lock
daa
nop
pop
mov
xor
xor
aaa
cmp
inc
repz
sub
adc
adc
hlt
adc
stos
fmull
das
mov
fchs
add
jnp
push
sbb
xchg
sbb
fidivs
repnz
imul
shrb
mov
dec
adc
or
popf
stc
inc
add
std
push
in
test
imul
adc
out
movsl
push
test
sti
fxtract
add
pop
daa
nop
cmp
dec
shlb
add
pushf
or
dec
push
add
iret
xchg
movsb
mov
cwtl
mov
mov
xor
or
or
arpl
lods
xchg
cmpsl
insb
iret
lcall
sub
loopne
pop
pusha
add
jb
add
jmp
hlt
nop
mov
sbb
aas
mov
in
add
cmpxchg
popa
lods
push
gs
add
popa
cmp
iret
dec
jmp
add
xchg
mov
or
add
dec
aaa
mov
sbb
sbb
sbb
xchg
inc
iret
out
bnd
mov
add
push
clc
sbb
cltd
in
int3
add
scas
push
jg
inc
add
mov
sub
adc
scas
add
insb
cli
cmpsb
out
shr
mov
inc
push
jle
sbb
test
jo
adc
add
xor
xor
lock
jb
push
test
pusha
add
cmp
push
lea
bound
mov
xlat
inc
add
fsubl
sub
add
adc
aam
xor
stos
push
divl
adc
and
in
add
and
ja
xchg
loope
sbb
sbb
test
xchg
add
shlb
fstps
mov
cli
addb
push
lret
xchg
fwait
loopne
and
lds
push
dec
sbb
jbe
cmp
popa
enter
xchg
add
insl
push
add
sub
xchg
std
add
addb
add
and
bound
inc
add
call
or
sti
add
inc
sbb
fdivrl
push
in
cltd
lahf
dec
clc
push
and
incb
leave
xchg
dec
dec
fwait
aas
xlat
jle
test
or
xchg
mov
addl
or
mov
add
faddp
ljmp
add
inc
xchg
inc
add
add
pusha
add
dec
push
jecxz
or
add
add
inc
clc
andl
xlat
jo
mov
push
cmp
and
mov
jnp
or
push
popa
xchg
gs
insl
bound
jle
popf
xlat
mov
rolb
inc
add
sub
jno
push
add
dec
adc
jne
push
add
jnp
daa
jge
ret
les
mov
pop
sub
call
not
pop
fwait
movsb
push
push
dec
jmp
add
ljmp
push
cmp
in
push
out
add
fsubl
push
jb
ds
sub
or
sub
inc
add
xchg
sub
cs
push
out
negl
mov
sahf
pop
adc
in
je
mov
sbb
xor
mov
je
add
out
pushf
dec
push
xchg
outsl
lret
push
sbb
mov
cmpsb
push
sbb
daa
jl
pop
xlat
cmpsb
test
cmp
mov
and
enter
jle
xor
cmp
xlat
hlt
lcall
add
adc
ljmp
loop
xchg
xchg
ret
mov
cs
or
mov
mov
xchg
pop
mov
out
iret
outsl
pop
leave
mov
sub
sbb
out
jo
sahf
cs
mov
cmp
jl
xor
repnz
mov
cmp
pop
dec
mov
pop
xor
outsl
dec
rolb
sub
add
cmovns
popf
xor
xor
bound
xor
sub
jg
scas
iret
cld
aaa
add
pop
dec
or
xchg
les
mov
jae
add
inc
push
and
add
mov
clc
sub
mov
add
mov
mov
test
add
mov
jecxz
pop
jl
daa
dec
cmpsl
out
mov
cmpsl
popa
xchg
clc
push
out
hlt
ficoml
daa
xchg
gs
sub
lcall
inc
add
das
pop
aad
sahf
push
pop
testb
pop
pop
imul
das
mov
add
lret
enter
outsl
cmp
sbb
daa
insb
popf
fwait
js
in
enter
leave
dec
push
mov
sbb
dec
pop
ficompl
mov
dec
in
pop
jg
cltd
arpl
daa
inc
add
into
in
nop
test
addb
xchg
dec
cmp
test
aaa
ret
add
sbb
xor
adc
mov
scas
rorl
sbb
enter
mov
add
out
lret
adcl
enter
lea
out
das
shl
lods
inc
jmp
dec
xor
add
call
xchg
mov
fildll
mov
nop
jno
mov
orl
push
xchg
add
cs
mov
xchg
mov
lock
pushf
jnp
repz
stc
cmp
xor
pusha
add
dec
xor
les
or
outsb
scas
iret
pop
repz
xchg
iret
xchg
adc
cld
mov
test
lock
loopne
push
test
call
add
mov
xchg
pop
mov
scas
and
insl
fcoms
xlat
jnp
inc
add
sbb
add
add
jge
inc
insl
mov
cvtpi2ps
push
cmp
xor
insl
es
inc
cwtl
xchg
fiaddl
inc
add
inc
in
adc
add
jbe
movsb
add
mov
jnp
sarl
popf
sbb
into
sbb
add
add
add
jg
std
cli
or
popf
cs
fpatan
push
leave
mov
mov
xor
add
movsb
daa
lret
negl
or
mov
xchg
jne
js
adc
push
popf
sbb
xor
mov
cmpsb
adc
outsb
call
sbb
and
shrb
and
pop
pop
mov
add
das
in
jecxz
add
lock
xchg
paddw
gs
add
ret
pop
xchg
mov
add
inc
jo
int3
fsts
rclb
inc
sub
lea
add
in
add
cmpsl
ss
repnz
sarl
cmc
dec
enter
dec
xor
inc
xchg
iret
sbb
inc
jo
adc
or
mov
add
push
pusha
add
sbb
sub
pop
sbb
mov
jo
outsl
out
ja
loopne
addb
push
es
push
movsl
out
sarb
jl
push
fldcw
pop
mov
push
imul
pop
xlat
out
sbb
xchg
mov
cmpsl
lea
push
addb
test
add
jg
push
pop
test
jne
adc
test
ret
lock
xlat
addb
cmp
sti
and
lds
iret
es
sub
stc
push
xor
sbb
add
lea
jecxz
dec
pop
fwait
movb
notb
test
in
or
dec
pushf
jbe
jge
repnz
add
adc
add
push
xor
pop
fwait
cmp
hlt
xchg
mov
cmpsl
sbb
popa
mov
test
cmp
les
das
dec
inc
add
inc
push
outsb
bound
in
loopne
add
daa
sbb
adc
pop
sub
mov
test
cmpsl
mov
fidivrl
xlat
aaa
mov
inc
add
and
aam
mov
nop
test
cmp
stc
push
addr16
pop
sub
loopne
std
loope
bound
sub
add
add
xchg
add
mov
xchg
xchg
out
lods
loopne
rclb
dec
inc
add
pushf
mov
xchg
lea
push
aaa
mov
or
dec
ret
and
xchg
addr16
sbb
fcmovu
aam
sti
dec
pusha
add
mov
fidivl
mov
aam
aad
jge
into
push
add
add
jo
popa
cmp
scas
jns
test
pop
adc
mov
pusha
add
sbb
call
cld
xchg
add
mov
popw
dec
and
pop
xchg
pop
mulb
hlt
sbb
sub
or
shlb
inc
add
std
sbb
add
cmp
pop
clc
aad
hlt
dec
mov
scas
test
cmp
enter
dec
cmp
shll
jbe
mov
cli
popa
repz
jo
in
xor
fdivr
adc
jmp
cld
add
loope
int3
or
xor
ret
sahf
jne
lcall
fisubrs
xchg
out
inc
add
mov
pop
jl
popf
jne
ret
ficoms
sub
out
fisttps
fadd
add
and
stos
push
add
cmp
pop
fstl
xor
sahf
loope
outsl
int3
xor
fidivs
xchg
les
adc
xor
dec
clc
xchg
jp
jg
push
test
scas
bound
fcoml
push
add
scas
mov
xor
test
outsb
test
push
shlb
pushl
mov
add
fisttps
jne
push
xchg
dec
ret
test
mov
add
and
or
jl
add
mov
jo
mov
cmp
add
sbb
pop
fstl
mov
setns
pushf
dec
xchg
das
test
jb
pop
mov
leave
movsb
out
lahf
xchg
dec
ficoms
outsl
xlat
aam
stc
sub
aaa
dec
jnp
lods
addb
add
mov
rcrl
add
arpl
push
pop
lds
mov
add
fsts
lods
movsb
lahf
data16
aad
adc
inc
in
movl
lahf
and
pop
jnp
add
imulb
sub
lods
cmp
push
inc
add
inc
push
mov
lods
outsb
imul
mov
scas
daa
addr16
xchg
xor
mov
out
sbb
jl
xchg
pop
inc
add
jno
mov
sti
stos
adc
ds
lahf
sub
jp
or
int
roll
add
dec
scas
sub
jmp
cld
repnz
stos
jmp
pop
mov
mov
add
xchg
into
and
mov
jle
xorl
daa
sbb
and
pushw
jae
lods
cmc
lahf
adc
mov
fwait
sbb
and
mov
push
addr16
pop
imul
and
add
cmp
inc
add
xchg
int
mov
cmp
cmp
test
mov
mov
ja
add
pop
add
push
add
sub
pop
inc
add
clc
mov
rolb
add
pop
or
mov
mov
jno
push
sub
das
rorb
pop
sub
mov
ret
scas
in
test
out
lods
mull
stos
inc
add
out
and
mov
xchg
rolb
mov
mov
rep
xchg
jns
cmp
xchg
xor
push
add
sarb
mov
outsl
add
outsb
add
add
inc
add
cmc
outsb
outsl
cmp
xchg
mov
dec
call
cld
cmp
enter
incb
add
adc
lcall
ja
and
mov
or
shl
dec
push
roll
xchg
lods
nopl
xor
popf
hlt
mov
aas
adc
cltd
aad
xchg
ret
pop
cli
lods
mov
pusha
add
outsb
push
mov
mov
xor
sub
arpl
popf
pop
rolb
pushl
push
sbb
sub
xchg
inc
add
imul
add
jg
add
inc
decl
adc
leave
sbb
mov
loop
repnz
adcl
or
int
and
addb
add
ds
or
insb
xchg
sbb
add
ret
sub
cmp
icebp
and
jb
add
daa
and
dec
in
jp
mov
leave
cwtl
dec
bnd
cmp
inc
fmull
dec
push
xor
test
fmulp
in
sbb
dec
sub
test
and
jae
push
sub
cmpsb
or
es
or
push
cmp
and
dec
cmp
lods
ljmp
lret
or
imull
sbb
out
lcall
jb
test
mov
cmp
or
xor
fsubs
cmc
pop
jle
cmp
imul
addb
ss
jecxz
outsw
ds
and
out
orl
mov
in
push
fwait
push
pop
mov
fidivs
fmull
push
jo
cld
movsb
je
add
xlat
xchg
pusha
add
push
pop
jnp
pusha
add
sub
jns
lock
dec
sub
out
cmp
fdivl
pop
sti
jecxz
cld
sbb
xor
loopne
push
add
push
fstpt
in
stc
lret
hlt
xchg
xorl
enter
aaa
jne
jecxz
enter
pop
mov
fdivs
add
push
out
aam
mov
add
clc
sbb
add
gs
or
call
bound
aaa
sub
mov
movb
leave
arpl
jbe
ljmp
adc
je
addb
add
sahf
or
or
into
dec
scas
push
leave
hlt
addb
mov
int
sub
mov
pop
cs
add
in
scas
sahf
ds
adc
adc
pop
popa
cmp
subl
movsb
sub
push
popf
ss
cmp
jbe
data16
xor
cmpsl
les
fildll
fmulp
sbb
inc
add
push
addb
dec
sbb
pop
or
test
pop
jnp
xlat
lcall
sub
pushf
jns
xor
and
into
and
push
outsl
fsub
test
cmp
add
mov
int3
xlat
mov
out
push
loope
test
mov
test
repnz
fnstsw
dec
mull
adc
setnp
xchg
jle
sbb
aas
xlat
inc
loope
outsl
sbb
mov
add
add
sbb
stos
jp
inc
rorb
out
mov
add
dec
jg
or
shrl
xchg
fucom
push
and
daa
movsl
push
scas
bound
mov
pop
xchg
pushf
dec
inc
sub
xor
sbb
add
adc
pop
dec
clc
lret
icebp
sub
ss
les
stos
push
sti
mov
jns
lock
addr16
shll
cmp
push
js
ret
lcall
push
sbb
aaa
shll
add
lods
mov
inc
add
pop
sbb
xor
cld
inc
mov
stos
loop
popa
addb
push
je
mov
sbb
mov
cmp
jne
dec
add
jmp
add
pop
nop
add
push
pop
xchg
inc
cmp
ljmp
inc
pop
push
mov
aad
mov
adc
dec
aam
cmpsb
jecxz
push
xchg
add
inc
cwtl
adc
sub
mov
jecxz
mov
jecxz
ss
push
sub
mov
call
loop
pop
adc
fistps
jnp
lahf
or
jg
push
cmc
in
add
push
punpckldq
dec
xor
add
mov
addr16
and
loope
mov
lret
dec
lret
push
cltd
sbb
xchg
xchg
mov
lock
mov
push
add
add
sbb
mov
rorl
rcl
sti
adc
mov
jns
cltd
mov
pusha
add
push
mov
xor
jns
inc
dec
in
cli
repz
imulb
cli
lock
cmpsb
into
xor
movsb
jp
ret
cmc
jl
push
nop
roll
push
enter
fwait
mov
add
push
jo
push
jge
push
pop
scas
mov
fsubp
push
mov
scas
jbe
mov
pop
xchg
cli
fcomp
mov
add
mov
jb
sub
test
cmp
into
leave
pop
sub
arpl
add
jecxz
daa
sub
lods
add
jbe
push
pop
mov
mov
xchg
xchg
add
xor
or
or
pop
mov
jnp
pop
add
sar
enter
sarb
push
lods
mov
jl
add
std
lods
or
fwait
sbbl
add
jns
int3
lret
cmpsb
push
ljmp
stos
pop
ja
dec
adc
add
imulb
cmp
inc
pop
pop
rol
add
mov
add
mov
dec
cwtl
pop
cmp
enter
notl
add
add
cmc
call
push
aad
and
adc
inc
sarb
clc
adc
mov
push
sbb
jbe
movsl
addb
xor
insl
imul
aam
hlt
lods
or
jnp
sub
sbb
into
jle
lods
cltd
mov
cmp
mov
out
xor
jne
add
or
mov
push
or
add
add
mov
mov
pop
cmp
inc
add
pop
push
scas
stc
pushf
cmpsl
dec
movsl
mov
aas
push
arpl
adc
dec
les
std
ljmp
add
cmpsl
adc
and
aas
addb
add
cmp
push
icebp
cmp
movb
mov
aaa
push
movl
sub
jno
mov
cmp
xchg
xor
xor
add
icebp
icebp
mov
cmpsb
stc
dec
cmp
lcall
xchg
mov
test
mov
loopne
mov
add
je
mov
xor
out
cmpsb
jns
push
jmp
pushf
mov
mov
lret
xchg
loope
add
adc
add
add
add
add
inc
adc
add
scas
sahf
loopne
sbb
cwtl
mov
and
mov
mov
jb
mov
movsb
inc
cwtl
leave
neg
int3
ret
jae
pop
dec
push
xor
mov
sbb
cltd
push
ret
aaa
add
mov
sti
lahf
mov
mov
shll
push
inc
mov
jne
test
cmp
mov
cmp
or
and
push
add
cmc
lods
cmc
lds
fwait
insl
jp
mov
xorl
bound
fimuls
lret
leave
cmpsl
xchg
loopne
leave
adc
pop
fsubrs
push
adc
cmp
add
or
add
dec
adc
js
add
jo
adc
jbe
mov
add
add
inc
add
add
mov
into
addb
push
add
mov
cmp
push
sti
mov
add
or
call
pop
fistpl
into
or
pop
mov
jg
cmpsb
or
enter
fcomi
inc
bound
sti
mov
xchg
addb
daa
push
sbb
add
jo
fsubrl
pop
pop
pop
pop
stc
addr16
pop
insb
xor
fwait
or
xchg
test
xchg
cmp
sub
or
add
pop
and
sub
das
aam
stos
jnp
or
xchg
fdivrs
inc
imul
jl
inc
add
inc
cmp
sbb
cmpsb
out
xchg
test
repnz
jnp
popf
jae
xchg
addl
push
pop
int
lret
mov
adc
imul
stc
push
xchg
mov
add
lahf
call
lss
xchg
push
das
or
inc
nopl
les
inc
add
rolb
pop
xchg
fwait
sub
pusha
add
mov
sub
enter
leave
xor
add
fistpll
jns
add
jmp
loopne
cltd
pop
inc
and
addb
mov
and
outsl
add
call
mov
mov
rcll
dec
movb
push
sbb
cmp
adc
std
mov
xor
add
add
pop
into
mov
int
mov
int3
test
leave
movsb
inc
add
add
cmpsl
fs
and
rcll
shll
push
int3
jnp
add
ljmp
adc
popf
stc
dec
add
jecxz
jmp
fcmovnbe
cli
jno
inc
add
jg
and
aam
add
push
ffree
aaa
in
mov
push
lock
xor
lods
mov
adc
pop
mov
ret
add
xor
pusha
add
xchg
inc
add
fimuls
push
clc
je
iret
fincstp
ja
dec
pusha
add
xlat
add
clc
add
add
sbb
push
mov
repnz
popa
outsb
sub
add
pop
inc
inc
add
outsb
sbb
dec
js
fadds
dec
into
popf
js
or
push
movsl
pop
fstps
ja
mov
lcall
add
js
adcl
fcom
ret
adc
mov
jb
jl
add
add
mov
add
mov
inc
add
dec
ret
mov
fs
mov
shlb
or
out
push
sahf
cli
fbld
mov
lea
add
mov
push
jg
sbb
cmp
ja
mov
das
cmp
jns
or
add
mov
mov
fsubrl
cmp
sbb
loop
push
enter
int3
and
pop
inc
lret
inc
add
or
push
xchg
sub
fldcw
aaa
sbb
xor
cmp
lock
pop
xor
outsl
insb
mov
jg
or
lahf
outsb
lret
gs
mov
jle
mov
add
cltd
addl
inc
ret
sti
test
pop
testl
xor
or
pop
pop
fs
ret
scas
mov
stos
xor
test
sbbl
fists
adc
and
xchg
lret
lcall
inc
add
hlt
out
cmp
ret
dec
insb
or
lcall
fmull
adcl
push
add
test
pop
dec
scas
mov
mov
add
jp
inc
add
loop
jmp
rcll
add
xchg
and
clc
xchg
dec
jnp
je
stos
mov
sub
addb
add
in
jl
mov
mov
jg
jbe
fwait
in
lods
rolb
imul
xchg
insl
pop
enter
add
add
mov
jecxz
add
cmc
cmp
int3
mov
add
ljmp
add
jecxz
mov
sbb
loopne
jns
sub
nop
int3
mov
xchg
push
imul
mov
fwait
outsl
loopne
mov
call
sub
push
rcrb
mov
sub
arpl
into
jecxz
cmp
cmp
pop
lods
jbe
packuswb
shlb
or
cmc
xor
fstps
inc
mov
adc
lock
or
mov
add
stos
scas
sub
mov
mov
mov
push
imul
es
testl
mov
mov
nop
cltd
sub
jp
xor
or
dec
insb
inc
add
mov
insb
ret
jns
mov
or
sub
mov
xchg
pop
push
and
mov
or
push
xor
daa
xor
ret
mov
aas
cmpxchg
and
dec
pop
cli
mov
add
lock
cmp
pop
mov
into
xchg
aas
and
iret
and
rcl
ret
and
addb
out
in
data16
loopne
add
fadds
test
push
rcrb
movb
push
mov
add
add
es
mov
add
sti
popa
or
cmp
jp
aaa
ss
mov
add
sub
jp
add
xchg
gs
add
add
rcll
or
loopne
push
or
sbb
sbb
mov
movsb
and
insl
into
jl
gs
adc
aad
mov
loope
add
add
test
movsl
popf
or
stos
sbb
mov
mov
into
mov
xor
adc
je
lods
jmp
faddl
es
pop
xchg
sti
in
push
ret
and
push
xor
add
fcmovnb
jl
pop
xor
cmp
xchg
imull
adc
adc
lods
ja
xchg
lds
enter
not
fucomip
and
xor
add
lds
xor
sbb
in
adc
dec
in
xchg
sbb
outsb
mov
dec
jp
decl
xchg
into
mov
ret
cmpsl
sbb
ja
addb
xchg
fdivr
sti
sbb
inc
add
outsl
gs
xchg
xchg
or
cmp
mov
filds
icebp
or
outsb
xor
jo
out
adc
in
insb
xchg
addr16
repnz
add
xchg
jae
sbb
push
mov
test
lods
loopne
add
fcmovbe
mov
add
push
fbstp
in
stos
outsl
rolb
add
lret
inc
inc
add
push
adc
addb
jl
clc
and
outsl
in
sbbl
aaa
mov
imul
out
das
jle
outsl
inc
add
fucomi
inc
sbb
jns
cmpsb
xchg
and
dec
and
subl
mov
or
mov
addr16
sub
jge
mov
notl
vxorps
jg
in
pop
jo
pop
cmpl
pop
pop
test
stos
adc
or
mov
sti
mov
aaa
mov
insb
adc
out
cmpsb
mov
jge
std
mov
sbb
roll
add
loop,pt
mulb
popa
bound
xor
pop
scas
repz
inc
lods
add
inc
mov
mov
or
and
stos
inc
pop
imul
push
add
sub
dec
xchg
mov
xchg
sub
out
mov
sub
mov
popa
xor
imul
or
mov
xor
xor
sbb
std
add
cmp
cltd
pop
push
ds
pop
pushf
inc
add
jg
inc
inc
add
add
aam
je
add
push
or
adc
fisubs
push
jae
sbb
xchg
pushf
lods
sub
in
add
or
or
cmc
fsubs
add
inc
cli
jg
add
iret
jb,pt
xchg
aam
add
or
fldt
dec
in
rolb
xor
push
adc
jo
stos
test
fisttpll
dec
xchg
inc
repnz
fcmovnu
lret
loopne
add
xchg
pop
push
fsubrl
cltd
aad
test
mov
push
adc
dec
pop
popa
mov
and
mov
into
cmp
jge
lds
leave
add
pop
shll
push
jmp
jg
add
pop
sub
push
inc
popf
ja
mov
popa
fsubrp
mov
inc
add
mov
xor
dec
es
sub
stos
enter
jge
je
jl
cmp
lahf
pop
cmp
loope
call
or
cmpsb
fst
insb
pushf
out
jle
or
shlb
rorb
mov
jge
xchg
loopne
mov
fcmovnbe
pushf
mov
jmp
add
ret
addr16
iret
pop
daa
mov
add
out
cwtl
cld
ja
jp
mov
lcall
fisttps
xchg
hlt
jne
test
cmpsl
mov
mov
stos
repnz
cld
jp
cmc
pop
mov
mov
or
add
inc
fldenv
std
cld
movsb
mov
jae
push
adc
mov
cwtl
popf
jle
inc
add
push
add
mov
in
pop
dec
fcoml
mov
push
neg
cwtl
aas
stos
jge
sub
lods
loope
lods
pop
jecxz
dec
xor
add
mov
hlt
jae
scas
into
add
add
mov
sub
jecxz
mov
mov
pop
movb
je
dec
add
je
and
mov
in
outsb
arpl
push
scas
sbb
rol
dec
in
adc
lods
popa
xor
xor
adc
stc
mov
pop
fwait
repz
out
jp
fstpl
xlat
mov
xchg
inc
add
aam
mov
adc
rolb
out
stos
mov
out
imull
add
andl
pop
data16
arpl
mov
or
cmc
imul
pop
add
xor
pop
imul
push
mov
addr16
add
popf
xchg
adc
fnstcw
jecxz
idivb
xor
xchg
test
into
rorb
stc
fisubl
mov
add
arpl
sarb
adc
js
cmc
dec
add
jb
jns
add
xchg
stc
je
xor
bswap
xchg
inc
pop
clc
mov
jnp
sti
cmp
loop
xor
add
hlt
xchg
lret
loop
add
gs
dec
inc
add
push
insl
fmulp
sahf
push
enter
es
or
addb
jns
xchg
stc
mov
movsl
jg
mov
mov
idivl
mov
pshufw
mov
mov
mov
add
push
dec
push
and
push
xchg
sbb
scas
pop
sub
cltd
jle
sub
mov
rcr
test
into
loopne
inc
scas
sub
in
mov
sbb
mov
call
fimull
addr16
jns
adc
aas
and
add
mov
out
sbb
int3
xor
movsl
jecxz
hlt
xchg
push
les
ret
dec
nop
lahf
es
and
mov
xchg
loopne
pop
add
xchg
cmp
add
or
pusha
add
pop
cltd
movb
jl
leave
int3
pusha
add
mov
insl
popf
int
cli
shrb
imul
in
jb
jae
dec
lea
fildll
add
adc
mov
add
sbb
std
inc
sbb
xor
push
add
add
inc
add
add
or
outsl
xlat
push
pop
fstpl
or
mull
add
mov
jbe
mov
rolb
and
add
xchg
push
jnp
jns
ret
setb
pop
inc
mov
xchg
pop
mov
inc
mov
int3
jp
call
mov
insb
xchg
adc
les
cmp
dec
cs
int
hlt
adc
rclb
add
aaa
maxps
in
hlt
shr
mov
or
push
js
test
out
es
or
or
lock
hlt
clc
dec
data16
icebp
sbb
jne
add
mov
push
jne
fistpl
jg
js
pop
lods
divl
bound
dec
mov
add
cmpsl
test
jne
and
cld
outsl
pop
pop
enter
fisttpl
in
out
push
les
and
pop
jb
loop
lcall
pop
mov
dec
pushaw
add
dec
cmp
mov
sbb
inc
outsl
loope
arpl
lcall
xchg
loope
sbb
fsubr
push
add
test
mov
inc
add
into
inc
add
mov
mov
aas
xchg
sub
lret
add
lahf
dec
aaa
dec
xchg
imul
add
ret
add
clc
gs
fisttpll
stos
enter
inc
add
pop
inc
add
or
xor
addb
add
add
mov
aad
das
test
jae
pop
push
or
sbb
mov
les
xchg
repz
fcmovnbe
rclb
add
mov
or
outsb
sub
mov
or
cmp
pop
sbb
pop
mov
add
add
push
stos
int3
neg
mov
int
bound
mov
mov
in
fcmovb
xchg
mov
lods
mov
and
pop
dec
xor
dec
ljmp
jo
and
sub
mov
add
pusha
add
push
fcmovnb
push
push
add
mov
out
cmc
cld
push
and
xor
adc
addb
add
add
add
movsb
and
ret
sbb
out
iret
test
adc
jno
xor
and
mov
add
test
enter
addr16
or
add
add
pusha
add
cltd
mov
aam
data16
push
ds
sti
rcll
fiadds
add
xchg
xchg
sub
loopne
push
cmp
ret
std
rolb
outsb
pushf
dec
push
add
lds
xor
sub
out
inc
das
adc
add
add
mov
adc
mov
push
imul
out
call
and
or
pop
fidivrs
cld
mov
bound
rolb
movsb
or
sbb
add
push
inc
outsb
sbb
popf
test
add
mov
cmp
push
xchg
sbb
ds
out
mov
inc
add
inc
add
addb
cmpsb
cmp
push
add
add
fimull
push
push
mov
xchg
movsl
jle
out
fists
jg
jl
add
addb
adc
add
mov
scas
test
jbe
scas
dec
dec
xlat
addl
mov
popa
pop
xor
add
inc
mov
ja
pop
and
jge
ds
out
jp
jo
lods
les
loop
int3
adc
arpl
add
or
add
test
pop
movsb
jno
push
mov
mov
mov
add
imul
xchg
repnz
xchg
adc
lcall
and
rcr
xchg
pop
cmc
scas
sti
cmp
repnz
sub
dec
push
lods
aas
inc
push
ss
out
push
add
ficomps
jnp
mov
sbb
movb
jle
insl
jmp
mov
std
push
jl
insb
outsb
int3
loope
call
fcmove
call
pop
outsl
test
jle
add
add
xchg
popa
sbb
jmp
or
xor
adc
dec
adc
dec
fiadds
xor
iret
pop
ficompl
add
repnz
add
movsw
and
out
jmp
aaa
jle
test
insb
sti
sahf
shll
stc
inc
lea
scas
xlat
loopne
imulb
push
mov
cli
sbb
gs
inc
bound
fwait
mov
inc
add
jnp
call
inc
add
nop
jno
ret
bound
cmpsb
mov
insl
mov
test
adc
pop
rcrl
test
and
shl
add
mov
add
loope
out
jle
adc
mov
xchg
ljmp
add
mov
and
jae
stos
pop
call
add
into
sbb
testl
mov
push
dec
pusha
add
sub
cwtl
movb
out
jne
lods
cltd
dec
or
les
test
outsl
push
hlt
cmpsb
in
mov
jl
inc
out
sbb
cmp
jno
shr
xlat
mov
scas
push
jmp
pop
cmpsb
inc
and
push
out
adc
cmpsb
jp
push
mov
xlat
adc
adc
inc
add
or
xor
jbe
lods
insb
mov
scas
out
add
lods
push
sar
stc
xchg
scas
ja
cmp
push
in
add
push
and
mov
aas
cmp
lahf
pop
push
push
loop
test
cld
insl
jbe
decb
inc
add
xchg
sti
popf
ficoml
add
fldl
arpl
mov
test
lcall
in
adc
popa
das
dec
xchg
rol
and
movsl
push
push
in
and
pop
and
pop
pop
jmp
add
push
outsl
pop
or
mov
mov
xchg
in
addl
and
adc
pop
imul
imul
inc
add
add
fadds
add
pop
enter
add
rolb
inc
add
loopne
dec
pavgb
ret
inc
loop
enter
xchg
aaa
mov
push
pop
mov
bound
cltd
mov
loopne
jp
add
push
mov
push
add
add
cmpsl
sar
cmpsb
mov
popf
push
jge
pop
dec
push
xlat
mov
cmpsb
mov
jl
sub
scas
xor
mov
mov
mov
add
call
jnp
or
jge
xchg
jb
stc
xor
addb
stos
in
bound
push
in
das
lock
movsb
or
add
xchg
sub
ret
cmc
jns
xchg
out
dec
int3
add
adc
adc
pop
xchg
xor
pop
out
daa
jnp
sub
xchg
or
add
notl
leave
fs
mov
pusha
add
fcomp
mov
or
add
fnsave
pop
and
xchg
fsubp
rclb
addb
sahf
jmp
add
mov
pushl
mov
loopne
jp
mov
jnp
mov
flds
push
xchg
pop
lret
xchg
out
push
cs
jg
and
jecxz
fsubs
jb
push
aam
xchg
mov
mov
imul
sub
enter
push
loopne
outsl
pop
pop
and
mov
mov
adc
leave
xor
inc
add
xchg
test
and
pop
sbb
pusha
add
lcall
adc
call
mov
pop
mov
sbb
add
mov
stc
lret
xchg
rorl
outsl
or
push
add
rclb
lods
add
cmp
pop
cmove
movsl
repz
daa
insl
aaa
pop
mov
adc
xor
adc
clc
out
add
repz
scas
sbb
js
add
add
popa
mov
scas
popf
push
or
lods
xchg
loope
cmp
sbb
jmp
out
jbe
jnp
fnstsw
and
sub
test
repz
jo
push
and
inc
xchg
into
mov
add
pop
lret
mov
push
or
push
mov
sub
fnstcw
loope
fwait
data16
sub
sar
push
or
das
xchg
adc
add
add
cmp
in
lock
cmp
nop
and
data16
aad
pop
pop
and
and
inc
xor
pop
and
jmp
adc
sti
es
dec
mov
sbb
adc
sbb
inc
add
push
xor
pop
pop
stc
jno
add
or
iret
cmc
push
mov
inc
add
add
add
stc
fs
adc
cs
xchg
fisubl
and
xchg
mov
and
add
adc
gs
mov
dec
enter
jne
jl
cmp
call
or
dec
addb
add
sti
mov
mov
stos
pop
lock
rcrb
ss
and
fisubs
dec
mov
and
out
fcmovnu
into
xor
shll
pop
xchg
stos
out
loop
xchg
test
pop
or
inc
add
add
xchg
mov
mov
dec
sbb
imul
int
mov
inc
add
add
sbbl
stos
insl
push
ret
sbb
dec
cmp
sbb
out
cli
sbb
jns
add
jmp
cmp
fs
addl
outsb
aas
jbe
das
sub
push
in
popf
push
in
mov
lret
push
stos
sub
add
sbb
movb
std
adc
outsb
insb
or
add
adc
mov
add
mov
mov
pop
push
xchg
push
dec
stos
ljmp
push
loope
add
or
push
int3
sub
mov
xchg
fwait
mov
in
sti
mov
jnp
shrl
sub
js
dec
hlt
add
insb
daa
cmpsl
xchg
insb
call
arpl
jle
imul
aam
in
xor
jnp
divb
loop
adc
xor
push
iret
sbb
cmpsl
mov
inc
add
mov
cs
aaa
outsl
int3
in
jbe
fstps
insb
xchg
cmp
add
pop
xor
add
lock
add
add
jbe
add
jge
adc
push
test
add
in
push
pop
lret
add
mov
int
mov
adc
in
jne
jae
jl
dec
lea
add
jecxz
mov
insb
adc
sbb
ret
xor
jle
mov
push
jbe
mov
xchg
insb
popa
test
nop
dec
dec
push
stos
and
movsb
mov
xchg
insl
sbb
repz
cmc
sbb
pop
std
xor
xor
addb
lcall
add
mov
cwtl
sbb
outsl
or
arpl
mov
mov
or
pop
xchg
jmp
jle
add
inc
jae
pop
aaa
repz
pushf
cmp
adc
jle
add
out
pop
clc
in
add
ljmp
and
les
pop
fidivs
xchg
mov
add
adc
test
push
sub
and
xlat
aaa
mov
sub
nop
stos
cmp
jp
push
lret
mov
push
and
lds
dec
je
jne
sub
imul
add
add
rolb
stc
loopne
insb
pop
rcl
add
jg
push
in
jns
lea
fidivrs
js
mov
clc
scas
fisubrl
fisubs
mov
test
ret
gs
ds
repnz
les
jl
incl
mov
adc
mov
add
add
rcrl
sbb
sbb
jl
mov
fnstenv
jg
aad
lahf
pmaxsw
mov
rcll
frstor
push
sete
xor
inc
add
filds
fs
and
jmp
mov
fcmovbe
pop
pop
clc
das
jg
loop
imul
pop
jp
jnp
mov
adc
pop
xchg
or
mov
jbe
mov
in
stos
cltd
sub
pop
mov
rolb
dec
ds
mov
dec
dec
push
imul
mov
mov
in
add
stos
fnstenv
dec
mov
sti
dec
repnz
add
mov
fwait
inc
add
dec
popa
push
mov
cmpsb
mov
aas
and
jae
add
xor
fcoml
xor
mov
adc
aas
ficompl
jo
enter
movsl
add
mov
imul
test
ret
mov
mov
push
cmp
dec
sbb
push
pop
movsl
arpl
xchg
add
addb
inc
bound
and
aas
hlt
sub
enter
pop
iret
stos
imul
adc
adc
and
out
add
dec
pop
data16
lds
add
inc
dec
jge
xchg
in
ss
dec
push
call
add
loop
dec
mov
jae
icebp
scas
xor
das
push
adc
dec
xor
divb
add
movsb
push
add
mov
daa
sbb
and
imul
add
xchg
push
push
pusha
add
xchg
mov
adc
test
enter
in
mov
add
xor
pop
data16
outsl
shll
imul
cltd
addr16
test
pop
mov
movl
ljmp
idivb
movsl
mov
and
daa
sbb
inc
sar
int
cltd
mov
testl
inc
push
add
dec
mov
cmpsl
gs
xor
bound
outsl
and
out
ret
js
or
push
out
or
jb
int3
sahf
sbb
jbe
sti
jmp
add
ja
sbb
add
cmp
mov
pop
faddp
je
aaa
push
mov
mov
and
test
pop
and
ds
icebp
out
sub
jmp
ja
call
mov
out
jbe
rorl
add
mov
enter
add
add
inc
add
ss
dec
adc
rcll
mov
and
cmpsl
jns
call
push
negb
aaa
sbb
gs
icebp
outsb
in
test
jmp
add
andl
and
call
ss
mov
sub
enter
pop
inc
add
int
rol
cwtl
daa
and
lds
jns
pop
pusha
add
sahf
std
cmp
add
xchg
add
sub
mov
fcmove
mov
addr16
pop
int
aas
sbb
and
mov
xor
into
lret
movl
aad
push
jg
pusha
add
in
cmpsl
notb
dec
lea
sbb
addb
mov
iret
adc
movsb
cmp
push
add
mov
inc
add
push
adc
dec
outsl
out
adc
mov
sbb
cmp
aaa
icebp
sbb
adc
in
sub
inc
add
jns
inc
add
rcrl
add
inc
add
adc
mov
sbb
and
fisubl
dec
mov
add
bound
cmpsb
jmp
cmp
out
cld
incl
mov
inc
mov
es
adc
aam
push
lret
xchg
fsubrl
mov
jne
ss
leave
sub
add
add
fdivrs
in
cltd
scas
clc
sub
xor
pop
scas
mov
jae
add
xor
rcr
mov
aad
mov
mov
jnp
and
mov
jcxz
pop
cld
movb
xchg
popf
jbe
add
and
push
mov
inc
add
mov
add
push
mov
push
lds
popf
outsb
ss
mov
sub
shl
pop
sbb
lods
dec
mov
sbb
addb
xchg
pop
xchg
fbld
js
and
hlt
addb
ljmp
arpl
jp
adc
adc
mov
or
mov
add
sub
inc
dec
aas
push
adc
lock
scas
stos
pop
inc
mov
aas
icebp
mov
lea
mov
push
add
into
jge
test
dec
fucomip
test
and
pop
aad
repnz
mov
lea
sub
scas
rolb
bndstx
imull
mov
stc
xor
push
jns
inc
add
cli
cli
pop
push
f2xm1
push
inc
mov
jmp
imulb
scas
data16
lret
or
mov
arpl
gs
dec
mov
das
or
or
add
push
xchg
decl
cltd
cmpsl
int3
xor
mov
pop
sub
add
insl
loopne
test
jge
jle
cltd
shll
add
add
pop
add
into
and
add
addl
cld
dec
xchg
arpl
sub
gs
mov
leave
mov
scas
mov
scas
fdivrs
dec
lret
insb
es
sub
and
std
nop
into
loope
xchg
adc
inc
add
iret
movsb
mov
mov
loope
mov
and
mov
add
push
add
sub
fmuls
mov
push
jl
adc
out
and
or
ret
inc
add
dec
mov
add
addb
add
mov
lock
push
dec
cmp
pop
insb
ss
std
aam
loop
add
lahf
jo
aas
ficompl
cmpl
fisttps
sub
cltd
je
mov
clc
mov
add
inc
add
scas
mov
jb
add
cmp
add
xchg
sub
add
sbb
cwtl
jmp
xchg
jmp
pop
rolb
loopne
fistl
push
lock
addr16
add
xor
sar
sbb
outsl
insb
jns
call
into
jb
xchg
fnstenv
movsl
and
mov
cs
subl
add
push
dec
inc
add
shr
out
dec
inc
add
std
jne
sbb
js
dec
pushw
adc
pop
cs
lock
adc
les
and
or
cmp
in
fwait
int
in
inc
pop
repnz
xorl
cmc
clc
dec
jmp
pop
or
push
mov
pop
cmp
or
push
loop
jle
out
xchg
loope
jge
mov
pushf
jne
inc
add
fs
pop
xchg
mov
inc
test
xor
lods
dec
adc
mov
enter
pop
out
mov
mov
lods
jno
lods
fisttps
jl
dec
adc
inc
mov
scas
hlt
cwtl
inc
gs
mov
push
xor
pop
shlb
cli
xchg
pop
push
test
add
jmp
cmc
sub
xchg
add
lods
sub
out
dec
xor
jo
dec
push
add
push
pop
shrl
scas
cmp
jle
add
add
push
xchg
bound
adc
cs
jae
sbb
in
ret
out
push
iret
sub
mov
add
sbbl
or
mov
decl
clc
test
roll
add
insl
add
adc
popf
idivl
mov
mov
mov
mov
dec
and
dec
dec
jmp
movb
lds
xor
xchg
mov
icebp
mov
mov
jl
inc
add
lods
sbb
adcl
xchg
ds
pop
test
pop
clc
mov
popa
mov
dec
and
repz
addb
add
and
pop
loop
inc
stos
or
das
lock
mov
push
jle
mov
mov
lret
jbe
mov
out
lcall
lret
add
outsl
mov
mov
int
mov
pop
cli
aad
mov
inc
add
mov
imul
add
fidivrl
lret
pop
sub
scas
jg
test
add
xchg
cmp
ss
xor
sub
or
mov
add
sub
movsl
pop
call
sub
and
cmp
jle
push
xchg
sbb
push
scas
repz
gs
and
jmp
xchg
jnp
fsubr
xor
inc
add
jo
es
push
cld
xor
mov
aaa
jbe
push
fisubs
add
sbb
sarl
in
pop
mov
jmp
inc
add
mov
add
cmpsb
cmpl
jg
sub
xorl
add
lcall
cli
out
scas
mov
and
or
popf
cld
pop
push
push
mov
jo
in
leave
pop
xchg
push
dec
push
sub
adc
sub
addb
ja
les
xchg
das
stc
jb
mov
stc
push
sub
add
sti
movb
xchg
mov
xchg
dec
mov
push
lcall
popf
pushf
ja
dec
pop
dec
xor
jo
into
sub
dec
mov
add
out
xchg
add
addb
das
inc
pop
outsb
iret
and
cmp
pop
sbb
aaa
mov
repnz
sbb
sahf
jno
mov
adc
addb
das
push
sarb
sub
mov
icebp
fneni(8087
or
inc
outsl
mov
addr16
add
shl
push
lret
loopne
inc
add
shrb
test
loop
jge
mov
pop
sub
jp
popf
mov
add
inc
add
test
sbb
cmpsb
pop
aam
add
stc
fisubl
add
rclb
popl
andl
pop
pop
xchg
pop
in
pop
leave
pop
mov
push
add
and
push
dec
lock
sub
js
push
cmp
cmpsb
insb
jno
cmp
mov
mov
or
pop
jg
pop
cmpsb
clc
cmp
add
mov
inc
add
in
roll
addb
and
dec
fwait
inc
adc
stc
add
clc
insb
lret
dec
push
cmpsb
js
jg
jae
add
add
and
sub
pop
hlt
leave
mov
jl
int
movsb
and
inc
pop
fnstsw
xor
stc
pop
xchg
pop
xchg
rcrb
add
mov
int3
addb
leave
inc
add
out
jle
add
or
rolb
sbb
xchg
outsb
xchg
inc
mov
add
push
mov
xor
xor
fidivrs
je
cmp
loopne
arpl
daa
and
mov
adc
add
push
in
xchg
add
cwtl
daa
or
dec
pushf
mov
pop
clc
outsl
push
loop
aas
stos
test
push
jns
mov
test
mov
adc
into
rolb
jl
ficomps
pushf
fistpl
sbb
and
add
loop
popf
insb
cmp
inc
add
test
sbb
mov
nop
icebp
mov
sub
dec
test
aad
sbb
das
test
loop
iret
fwait
sti
fbstp
bound
xor
sahf
sub
outsb
xchg
lcall
push
mov
and
stos
xchg
xor
clc
lds
sbb
bound
and
lea
jp
add
jno
add
xchg
jnp
mov
loopne
in
fwait
inc
add
jmp
jle
sbb
dec
addb
stos
insb
xor
add
add
inc
repnz
jp
fmuls
repz
lds
adc
addb
xsave
arpl
add
dec
in
and
jle
les
pop
icebp
push
int
inc
mov
xor
icebp
or
popa
sub
jl
cwtl
incb
inc
add
push
add
push
pop
test
sti
fdivr
loope
out
out
xchg
xor
add
xchg
int
cs
cmp
sbb
les
adc
add
push
clc
cs
aam
add
loopne
scas
sbb
sarb
mov
sub
jns
push
scas
scas
push
jns
es
imul
and
lods
pop
push
push
mov
xor
add
xor
mov
adc
lds
mov
cmp
ficomps
aaa
jp
repnz
add
dec
aad
push
outsl
or
addr16
mov
mov
sub
inc
addr16
pop
mov
mov
cld
ja
and
in
mov
xor
inc
add
pop
xchg
popf
add
dec
pop
sbb
not
lds
filds
fs
divl
push
adcl
scas
or
shll
inc
add
xchg
or
push
insl
nop
add
rcll
jecxz
sub
push
or
pop
jecxz
test
jae
push
xchg
xchg
pop
sub
push
xchg
cld
shl
ret
movsl
inc
add
in
out
inc
add
jmp
pop
dec
stos
insl
push
push
pop
adc
mov
subl
sub
cltd
ret
repz
push
mov
lods
pop
je
fsubl
shrl
add
sub
add
add
add
test
jno
xchg
es
sbb
in
add
loope
mov
sub
icebp
xchg
sub
mov
xor
add
out
outsl
push
inc
or
dec
lcall
imul
out
sbb
sub
idivl
inc
fisttpll
dec
das
ret
loope
mov
sbb
jbe
add
insb
xchg
imul
out
sbb
cmp
add
loopne
enter
push
imul
lds
rolb
mov
imul
lahf
cmp
xchg
xchg
daa
mov
mov
inc
add
aam
sub
rol
add
sbb
lahf
sub
add
cmp
aas
int
aas
das
scas
mov
push
les
inc
add
jle
jl
or
xchg
mov
push
rcrl
testl
test
mov
aas
aad
jg
stc
mov
add
movsb
inc
test
jae
scas
gs
add
xor
lods
bound
imul
jns
pop
mov
cmp
dec
lcall
sahf
shrl
bound
dec
sub
sbb
mov
jo
pop
ret
pusha
add
hlt
xchg
addb
push
mov
mov
or
mov
nop
insb
pusha
add
add
adc
add
xchg
adc
mov
sbb
pop
ds
add
stc
out
xor
cli
mov
test
push
sub
xor
sub
ret
or
test
xchg
push
add
inc
jl
int3
imul
add
xchg
ret
jae
popa
sbb
pushf
push
sbb
in
repnz
ret
adc
fildll
clc
in
add
mov
scas
jg
xchg
sbb
mov
jge
and
gs
pop
xor
test
mov
lds
div
addb
iret
cltd
and
shlb
and
pop
repz
adc
ret
das
jmp
in
bound
or
roll
cli
add
mov
sahf
cwtl
adc
add
mov
add
or
xchg
loop
xchg
or
mov
fisttpll
jo
add
or
dec
leave
adc
notrack
pop
jle
das
addb
in
ja
push
fadd
xor
ds
push
and
insb
popf
add
adc
jb
imul
mov
popf
jbe
lock
addb
jecxz
dec
fwait
mov
cmp
arpl
add
push
pop
xor
fstpt
or
sub
mov
int3
iret
pop
mov
inc
add
push
sbbl
add
mov
mov
dec
mov
push
je
xchg
in
jg
ljmp
movb
adc
xchg
cmpsl
lods
xchg
cmp
jns
outsb
lock
pusha
add
add
out
mov
push
sbb
nop
lods
out
jp
add
cmp
add
add
mov
add
addb
sub
pushf
lret
push
lret
push
cli
pop
dec
jmp
sbb
mov
mov
dec
sbb
lods
gs
pop
pushf
add
movsb
inc
add
inc
insl
mov
jp
cmp
inc
add
jb
jb
push
and
stos
test
stos
frstor
aam
je
mov
inc
add
jg
add
filds
ret
pop
and
js
xor
arpl
add
movb
mov
add
movlps
movsb
cli
leave
jne
add
sub
push
mov
xor
add
clc
push
sbb
outsl
lcall
add
mov
mov
pop
jge
add
aad
pusha
add
jns
xchg
jne
je
ljmp
pop
loop
mov
ljmp
loopne
xor
fiadds
jo
add
mov
loopne
cmpsl
call
shlb
movb
jecxz
popf
popa
ljmp
pop
mov
adc
add
push
xchg
mov
and
nop
jo
aam
aad
mov
pop
fcom
sbb
notl
and
or
cli
xchg
hlt
push
stos
rclb
xor
pop
sahf
fbstp
inc
push
rcrl
dec
fstpt
test
sbb
fbstp
add
xchg
sub
mov
sbb
cwtl
nop
jnp
popa
push
cwtl
and
mov
pop
call
xor
movups
mov
add
jne
jp
jo
out
or
cmpl
cmp
jne
aad
stos
cmp
fsubr
sub
mov
mov
lcall
test
das
jmp
stos
dec
movb
xor
shr
mov
cmp
xchg
inc
add
pusha
add
adc
cmp
add
pop
pop
add
stos
xor
add
or
jge
ret
add
jl
add
and
fildll
ljmp
push
pop
push
add
jg
sub
mov
fsub
je
fnstsw
adc
fcoml
cmp
loop
lret
sbb
fstl
adc
push
call
movsb
movsb
add
adc
mov
idivl
add
push
imul
sub
addr16
add
fs
arpl
mov
jne
push
out
sar
repnz
loopne
push
add
push
cmpsl
outsl
scas
dec
lss
cs
cltd
push
mov
lcall
bound
js
lahf
ret
cmp
push
incl
mov
movb
dec
cld
je
pop
das
or
mov
mov
adc
stos
mov
dec
test
cmp
and
pop
dec
data16
add
mov
push
jno
fs
inc
outsl
mov
add
sbbl
and
lret
nop
sub
movb
push
scas
inc
add
jmp
scas
sbb
mov
addb
addb
sub
mov
xchg
pop
xor
stos
out
call
hlt
divl
lock
mov
jmp
jo
add
mov
cmp
xor
rolb
testb
sub
sub
repz
insl
movsl
fimull
addl
in
loope
mov
fisttpl
push
xchg
daa
and
int3
dec
add
push
lock
add
loop
dec
hlt
mov
sbb
in
movsb
lcall
add
push
dec
sub
mov
lds
setnp
in
adc
mov
push
mov
jae
add
ret
and
adc
pop
test
add
pop
rcrb
out
push
jp
sbb
add
lock
fdivl
xor
pop
nop
icebp
mov
addb
fcompl
jge
movsb
xor
test
daa
inc
mov
into
or
jmp
add
sbb
push
inc
add
mov
add
adc
adc
data16
out
adc
sti
jb
inc
sti
sbb
aad
push
mov
mov
add
pop
mov
mov
inc
add
adc
mov
int3
popf
ret
adc
movsb
stos
fadds
xor
add
int3
outsl
push
hlt
ret
pop
inc
insl
aaa
push
in
testb
rorb
loope
movsl
push
mov
mov
es
xor
xor
fists
loope
add
xchg
dec
jns
pop
fs
fmulp
lds
dec
inc
add
add
jbe
mov
push
insb
mov
test
icebp
dec
jns
inc
xchg
popa
aaa
repz
and
out
or
jo
arpl
mov
es
ljmp
jg
cmp
add
add
jg
and
lea
cltd
jno
jp
xchg
jge
rcrl
mov
cmp
outsb
jle
mov
test
mov
or
nop
rolb
and
jns
rcl
jl
mov
mov
stos
je
in
pop
push
jnp
roll
fldenv
mov
cld
test
iret
lret
sbb
test
hlt
jo
add
or
mov
or
fiaddl
imul
inc
add
or
fwait
hlt
inc
add
repz
jg
xchg
mov
add
inc
add
mov
inc
mov
sub
lods
sub
pop
xor
mov
mov
sar
aas
add
sbb
mov
adc
dec
sub
dec
and
aad
mov
in
scas
ret
push
jb
cltd
sbb
mov
add
movsl
xlat
fs
jmp
repnz
es
add
fdivs
dec
mov
push
call
mov
outsb
push
dec
scas
pop
or
cmpsb
data16
add
aas
jbe
cmp
jp
add
mov
sahf
sahf
and
sahf
scas
sarb
cmpsl
in
xchg
popf
sbb
fwait
cmpsb
cmp
mov
jno
out
sub
out
xchg
loope
lcall
aaa
rcll
jae
ljmp
inc
push
add
cmp
inc
add
pop
cli
push
ljmp
sahf
fxch
leave
addr16
leave
push
and
add
push
ds
inc
add
in
add
push
dec
pop
mov
add
add
add
repz
in
jbe
add
add
popa
jae
ljmp
inc
adc
sbb
xor
pop
xchg
and
cld
gs
add
lcall
test
jge
mov
add
rol
add
jle
mov
push
xor
pop
xchg
enter
jbe
sbb
jge
add
imul
push
lods
lock
fbld
add
ss
pop
bound
cli
sub
les
add
mov
inc
add
xchg
fidivs
imul
jg
xchg
std
cmp
push
mov
pop
push
dec
cld
cmp
add
out
sahf
adc
enter
xchg
add
cmp
pop
pop
dec
repz
add
cli
add
dec
push
mov
lahf
imulb
lcall
lods
data16
fs
loop
sbb
lahf
fsubrl
enter
hlt
ret
lock
mov
scas
imul
xor
rcrb
sub
mov
enter
stos
push
jp
add
add
mov
lds
das
inc
movb
add
out
push
pusha
add
pushl
and
cwtl
cmp
jl
and
mov
mov
sbb
pushf
adc
jecxz
xchg
cli
mov
xchg
in
ret
push
sub
xchg
dec
dec
mov
or
pop
notl
add
add
add
jp
push
lret
xor
xor
inc
add
inc
add
cwtl
jle
mov
mov
jmp
mov
add
dec
iret
push
add
nop
mov
ret
sahf
xchg
out
xor
pop
sub
icebp
leave
sar
add
adc
mov
push
xchg
push
dec
aas
push
fistpll
sub
push
push
imul
out
add
dec
cmpsl
mov
and
scas
mov
cmp
enter
cmc
subl
cmp
pop
fstl
add
sbb
les
in
pop
popl
sub
add
sar
enter
inc
add
add
push
or
mov
addb
add
lock
add
mov
jmp
xlat
jno
add
mov
lock
loopne
ljmp
xchg
insb
pop
jg
jecxz
test
pop
insb
scas
pop
dec
in
test
jmp
or
pop
jne
pop
xchg
imul
add
les
loope
sbb
iret
repnz
xor
testb
add
pushf
mov
add
cmp
adc
add
popa
xor
and
out
jbe
scas
jg
out
ret
outsl
sub
cmp
addb
jl
mov
dec
or
rolb
testl
add
lret
sub
xchg
jp
jns
imulb
ret
jmp
hlt
fnstsw
xor
mov
add
ficoms
lahf
jns
lods
cmp
sbb
inc
mov
into
scas
ret
ljmp
mov
es
movb
mov
add
andl
subl
mov
loop
cmp
ja
and
int
iret
inc
add
mov
pusha
add
xchg
sub
add
lcall
int
aaa
and
fisttps
in
es
stos
push
mov
mov
mov
xchg
mov
enter
xchg
ljmp
push
cmp
addl
push
jns
jbe
jmp
fcoml
push
int
push
xchg
pop
rcrl
pusha
add
cmp
ror
test
mov
insl
hlt
mov
add
xor
cmp
jb
movsb
sub
fwait
cs
fnstsw
xor
iret
push
jb
jmp
ds
and
sbb
xchg
mov
add
divb
mov
add
push
jb
mov
add
pop
testl
jae
aaa
sub
inc
inc
add
and
stos
arpl
add
sarl
add
cmp
loopne
jp
xchg
add
aaa
fwait
sbb
jg
xor
dec
cmp
push
xchg
iret
pop
lods
ja
jp
mov
or
add
fidivl
fnsave
adc
popa
xor
popa
dec
mov
lods
rcrl
imul
or
push
inc
icebp
stc
loope
mov
mov
popa
dec
jo
cltd
ja
in
fnstsw
mov
lods
hlt
mov
imul
push
test
sub
xchg
pop
jecxz
xchg
sbb
repnz
gs
test
sub
jmp
subl
lods
cs
jno
in
aaa
push
pop
cld
enter
dec
nop
jne
cmp
addb
add
lods
shl
int
inc
in
inc
add
pop
out
lods
ss
push
lds
mov
xor
popf
adc
jge
mov
dec
cltd
inc
outsl
sti
xchg
sub
add
loop
sahf
fstp
xor
nop
mov
or
rcl
fs
ret
outsb
enter
lock
jno
pop
lret
cmp
addb
insl
loope
xchg
sub
jg
mov
mov
bound
adc
adc
xor
dec
mulb
scas
test
pop
stos
aas
xor
addr16
add
or
xchg
out
xchg
mov
xchg
mov
cwtl
repz
into
cmp
dec
jno
pop
xchg
add
sarb
push
mov
shll
cmp
popf
imul
cmp
push
add
stc
dec
push
inc
adc
adc
lea
out
fimuls
inc
add
outsb
cmp
leave
mov
in
lret
xchg
out
push
mov
sbb
cmp
xchg
mov
mov
shll
jl
dec
leave
jecxz
jnp
call
push
and
les
push
shrl
leave
sbb
cli
pop
xchg
xchg
mov
xor
in
lock
out
pusha
add
test
push
aaa
inc
mov
pop
ss
add
sahf
ds
adc
pop
cltd
cld
xchg
ss
stc
out
mov
push
mov
fst
cmp
add
faddl
int
mov
dec
mov
js
ret
fiaddl
ds
add
out
pop
ret
sbb
jae
cli
inc
pop
pop
les
cmpsb
push
out
xor
mov
pop
push
or
sbb
push
mov
aad
ja
pusha
add
adc
mov
stc
mov
xchg
dec
xchg
add
pop
or
mov
das
pop
lcall
mov
into
dec
xchg
pop
ja
scas
arpl
add
mov
xor
jns
adc
mov
xchg
das
or
lds
or
jnp
mov
cmpsl
sub
or
icebp
adc
adc
jo
movsl
lods
sqrtps
insl
adc
mov
jo
mov
mov
cmp
jge
mov
jae
out
jl
shlb
dec
icebp
dec
cs
repz
push
mov
cwtl
aaa
add
loope
rcl
add
aas
std
cmpl
lods
mov
sbb
sahf
sub
iret
mov
aas
dec
hlt
sbb
lock
js
iret
je
or
int3
jae
or
add
and
jo
add
test
add
popl
mov
lds
leave
mov
dec
dec
inc
loope
cli
jnp
int3
lret
jmp
add
fadds
aas
xchg
out
push
orl
add
enter
lret
dec
pop
jg
add
outsl
jmp
push
or
push
loopne
adc
adc
je
cmc
addr16
popa
mov
mov
add
fidivs
leave
sahf
es
push
cmpsb
addb
add
and
xor
xlat
or
xchg
adc
jecxz
test
and
jge
movsb
or
out
cld
out
mov
mov
jl
cmp
ljmp
imul
cmp
inc
add
addb
or
lcall
sahf
loop
mov
pop
cmp
addb
lods
xchg
and
iret
pop
sub
add
mov
sub
lret
filds
add
loope
in
out
in
push
pop
xchg
mov
push
xchg
fisttpl
xchg
xchg
test
xchg
jmp
add
insb
test
ljmp
je
add
xchg
sbb
test
ss
lcall
add
add
or
xchg
aam
add
mov
pop
js
push
add
add
ret
xchg
jmp
and
fldenv
sbb
push
into
mov
sahf
not
cmp
sub
ja
addb
pop
pop
push
sub
mov
lea
std
push
mov
xchg
sbb
push
int3
fabs
mov
mov
or
mov
popa
arpl
push
cmpsl
scas
outsb
mov
inc
jle
add
dec
xchg
cmc
adcl
add
xor
jl
enter
inc
add
xchg
inc
incl
add
lea
xchg
add
push
dec
xchg
add
rolb
xchg
in
dec
inc
loop
add
dec
push
mov
daa
xor
sub
jo
leave
jb
sbb
fdivrs
cmp
lds
mov
add
loope
rcrb
push
cmp
nop
repnz
addb
repz
xor
inc
repz
ja
dec
mov
rolb
repz
add
into
push
mov
pinsrw
add
mov
add
fisttpll
rolb
push
and
in
sbb
or
mov
xchg
pop
cmp
in
or
cli
xchg
nop
outsl
mov
add
pop
cmp
adc
sbb
add
scas
aam
xchg
addr16
outsl
push
and
add
pop
insl
into
rclb
std
xor
add
test
push
mov
and
ljmp
add
add
pop
enter
push
add
jge
push
jmp
adc
add
sub
mov
add
divb
fimull
push
les
iret
mov
xchg
xor
inc
add
mov
add
xchg
mov
sbb
xor
cmp
imul
lret
xor
xor
fisttpl
fwait
out
lods
inc
scas
dec
test
add
scas
jle
out
push
repnz
in
xor
add
mov
fs
inc
dec
push
and
jo
fstpt
andl
jo
dec
stos
insb
stos
das
addb
push
andl
loope
add
or
jne
inc
add
bound
mov
rorl
add
cmp
inc
adc
mov
fisubrs
mov
push
inc
add
ja
cwtl
sub
cmp
add
int3
cli
jg,pn
lea
mov
jb
pop
rclb
dec
scas
xchg
mov
dec
adc
mov
das
push
dec
mov
jg
enter
sarl
jp
jp
ret
cmpsb
jbe
push
inc
mov
inc
add
pop
fsubrs
cld
mov
pop
pop
jl
cwtl
jp
add
xor
xor
outsb
xlat
and
gs
jns
mov
add
adc
add
jnp
or
dec
mov
xchg
add
and
pop
adc
sti
int3
in
cmp
negb
sub
pop
nop
lea
inc
fwait
test
cmp
outsb
pop
aas
push
pop
cmp
ljmp
sub
pop
aam
xchg
add
inc
add
pop
and
jge
push
mov
cmc
int
ljmp
jae
mov
cmc
pop
jnp
sub
enter
loope
mov
push
pop
test
ss
mov
adc
push
jmp
inc
add
aad
pop
sub
sarl
cltd
mov
xor
xor
xorl
fadds
add
adc
push
dec
aam
out
jp
xorl
outsb
and
mov
dec
popf
pop
clc
nop
push
clc
dec
adc
test
dec
adc
jmp
cmovg
popa
arpl
add
xor
add
mov
mov
add
hlt
or
out
lds
add
push
xchg
mov
mov
jns
push
pop
fisttpll
mov
xchg
icebp
int3
sbb
cld
pop
fldl
add
mov
scas
addr16
or
sub
stos
lods
in
dec
test
sub
xor
lock
cmp
aam
mov
adc
push
in
sub
call
insl
data16
in
add
adc
mov
aas
inc
add
mov
sbb
addb
pusha
add
outsl
fidivs
push
jo
icebp
add
mov
out
subl
pop
imul
mov
notb
add
xchg
xchg
addb
movsb
roll
push
push
xchg
aad
mov
add
mov
add
mov
cltd
inc
and
fsubrp
es
repnz
daa
xor
sbb
jb
add
call
in
mov
repnz
inc
add
movsb
or
cld
sbb
inc
add
add
inc
int3
mov
inc
into
pop
std
add
sbbl
mov
mov
aas
jae
add
pop
out
orl
cs
loopne
popf
movsl
addr16
xchg
ret
xchg
sub
je
xchg
fucomp
nop
pop
jb
inc
add
jns
inc
jne
out
scas
loopne
js
movsl
out
fisubrs
or
daa
sbb
inc
add
pop
mov
mov
fucomi
test
xor
cmp
into
mov
test
in
mov
js
sub
fcomp
mov
leave
dec
add
addl
sbb
aas
xchg
add
or
ss
outsb
roll
lcall
adc
jge
fildll
rorl
notl
and
jne
testl
mov
stc
jnp
xchg
xlat
push
jnp
pslld
sti
adc
adc
movsb
and
sbb
jl
iret
das
jne
dec
pop
jno
pusha
add
lods
clc
imul
mov
jge
jecxz
icebp
mov
push
push
sbb
pop
dec
decb
adc
jnp
add
sub
sub
icebp
xor
int3
aaa
adcl
lahf
jns
in
dec
repnz
dec
hlt
mov
movsb
xchg
pop
ja
add
in
pusha
add
jne
sbbl
jbe
sub
mov
andl
dec
jb
mov
enter
xchg
int3
mov
pushf
lods
insl
mov
test
jge
add
shll
jnp
in
ja
jb
in
loope
jno
dec
imul
dec
cld
inc
into
push
mov
icebp
shll
mov
sahf
mov
adc
add
jno
and
push
outsl
scas
mov
jne
lcall
test
add
call
add
test
push
mov
pop
das
pop
add
add
jle
sub
mov
push
mov
add
inc
dec
jne
ds
jge
lahf
pop
dec
repz
cmc
sbb
jne
into
jo
pop
call
add
inc
add
int
loopne
ficompl
mov
add
push
imul
rcll
cmp
mov
or
mov
xchg
or
inc
add
jbe
add
push
nop
or
pop
push
mov
mov
pop
cmpl
add
movb
sub
insb
sub
mov
push
inc
add
pop
lods
cs
pop
outsl
pop
pop
stos
push
cs
scas
and
or
stc
push
int3
xor
push
dec
pop
xor
mov
xlat
dec
jnp
adc
pop
fdivs
push
adc
inc
int
sub
jbe
in
jle
jbe
pop
inc
xchg
into
fsub
pop
out
insl
mov
push
add
out
cmc
lock
add
lds
mov
scas
add
int
pop
dec
nop
sbb
add
shlb
stos
adc
icebp
sbb
in
jmp
cltd
idiv
mov
mov
fwait
lods
xor
add
mov
out
popaw
xor
inc
ficomps
add
lock
add
inc
das
jl
mov
push
out
lods
jae
bound
mov
jns
add
shrb
mov
dec
mov
mov
sub
lods
jno
cli
push
add
mov
and
fwait
push
mov
addr16
mov
xchg
mov
mov
icebp
stos
sub
add
xor
stc
pop
outsb
inc
add
fcoms
push
pop
mov
addb
add
inc
add
cmpl
icebp
sub
jmp
inc
pop
ljmp
mov
jb
nop
in
mov
push
ret
xor
lcall
add
xorl
mov
stos
add
lea
xor
std
lock
loope
xchg
into
fmul
pushf
sbb
adc
push
add
add
sbb
pop
test
lods
push
lcall
add
roll
jmp
pop
push
shll
pop
dec
and
inc
add
adc
movb
sbb
shlb
out
mov
add
mov
insb
rcrl
ja
mov
cmp
xchg
arpl
scas
es
adc
popa
and
pop
imul
ja
mov
sub
push
movsb
xchg
xchg
add
jecxz
mov
imul
add
bound
pop
dec
mov
push
push
add
fidivl
jmp
negl
ret
rolb
imul
test
out
push
adc
rclb
add
jns
push
mov
and
mov
xchg
xchg
dec
scas
imul
xchg
cmp
out
out
inc
jge
and
xchg
mov
ret
movsb
fsincos
sub
std
cmpsb
xor
negl
or
dec
int3
stos
cmp
pop
sbb
pusha
add
out
sbb
pop
inc
add
incb
cmp
paddq
cltd
fidivl
mov
push
cli
push
das
stc
mov
out
popa
imul
pop
xchg
clc
hlt
ljmp
or
fcmovbe
and
es
mov
mov
pop
in
push
or
lret
xchg
mov
inc
adc
imul
testl
add
sbb
rolb
aad
sbb
dec
stos
dec
dec
dec
stos
imul
das
xor
xor
push
jo
repz
jmp
sub
loop
movb
fucomi
and
fisubs
mov
add
push
push
imul
rclb
xchg
clc
sbb
mov
inc
add
add
ret
and
es
repnz
call
cmp
ficomps
inc
sbb
adc
insb
movsb
sub
add
int3
test
jge
mov
adc
daa
push
test
ret
icebp
daa
add
mov
and
les
inc
jo
ficoml
cmpsl
push
shrl
pop
and
enter
icebp
inc
fwait
jle
sub
fwait
std
and
cmp
add
push
out
and
insb
cs
mov
je
inc
pop
dec
rcrb
jae
push
call
add
add
mov
lock
xchg
repz
add
out
aad
xchg
sbb
test
pop
test
mov
add
imulb
popa
scas
jl
add
or
xor
loop
outsb
inc
add
jnp
pop
or
xchg
loop
or
stos
jmp
out
ljmp
and
jp
fldt
push
xor
push
add
cmc
cmp
sahf
aaa
pop
jmp
bound
popf
jnp
add
test
repz
shlb
mov
mov
ja
dec
jbe
xchg
cmp
fs
add
je
ret
add
xchg
or
les
adc
sub
js
add
repnz
mov
inc
addb
dec
push
lret
je
add
mov
mov
sahf
pop
mov
sbb
mov
ret
jp
sbb
add
lea
mov
sti
push
pop
outsb
out
jns
sbb
jb
pop
aam
or
outsl
filds
fimull
sub
icebp
cli
daa
push
add
ljmp
pop
push
mov
adc
shlb
inc
cli
out
ja
inc
add
cmc
sbb
mov
cmp
mov
icebp
nop
mov
xor
mov
hlt
mov
inc
add
or
sbb
fildl
js
iret
pop
ret
js
or
outsl
jnp
push
add
lods
fs
add
sahf
out
adc
mov
arpl
sub
ret
add
mov
imul
test
clc
mov
test
test
xorl
jo
add
add
or
inc
add
add
mov
movb
sbb
add
jo
scas
jnp
mov
mov
es
push
mov
xorl
inc
add
outsl
push
ss
jno
sub
stos
xor
push
in
xor
mov
mov
ret
ss
bound
std
mov
adc
xchg
dec
mov
mov
xchg
dec
test
lcall
mov
into
or
pop
add
clc
push
sbb
inc
add
mov
or
movsb
dec
lret
or
mov
sub
add
xor
mov
mov
shl
sub
lea
jl
dec
push
dec
data16
and
pop
repnz
inc
add
clc
jns
jne
daa
dec
rcll
adc
pop
mov
lods
add
dec
orl
mov
sarl
and
mov
and
stos
popf
cmp
add
inc
pushl
pop
pop
inc
add
push
add
aaa
test
push
xchg
aam
xor
add
out
popf
sbb
bound
das
xor
adc
test
dec
xchg
addl
mov
jo
jne
mov
mov
pop
xchg
xor
mov
leave
mov
and
rolb
jl
jg
xlat
sub
add
dec
mov
or
xor
pop
idivb
imulb
jl
add
cmp
jl
jbe
in
jne
xor
add
aam
mov
mov
loope
fimull
fldcw
sub
jle
pextrw
xchg
mov
mov
sbb
adc
outsb
stc
jne
xor
pop
push
mov
xchg
dec
push
cmp
add
repz
loope
fnstenv
jno
hlt
movsl
and
push
push
sti
mov
jge
idiv
push
jecxz
aaa
pop
shr
mov
pop
lret
add
jnp
push
insb
icebp
test
lods
push
dec
add
lea
leave
add
ret
fisubs
stos
cmpsl
and
lods
mov
pop
add
lahf
outsl
divb
das
scas
in
inc
jne
es
iret
out
jne
push
cltd
fsubp
arpl
add
inc
pop
insl
fldcw
dec
xor
incl
xchg
sbb
addr16
insb
add
push
stos
jo
in
addb
bound
lret
test
fwait
clc
xchg
mov
mov
inc
mov
out
pop
dec
and
mov
lds
push
aam
and
sbb
addb
or
push
clc
popa
xchg
jno
mov
mov
cmp
add
push
adc
mov
rolb
nop
and
adc
xchg
test
out
sub
jb
cs
insb
aad
inc
add
push
xchg
cwtl
inc
test
aaa
popf
mov
imul
push
add
add
add
jno
jbe
popa
pop
cli
add
dec
insl
loopne
jmp
stc
cmp
adc
ja
cltd
lret
aas
inc
inc
stos
xor
inc
add
out
stos
dec
mov
out
pop
aam
or
lea
adc
out
mov
inc
add
int3
add
jl
mov
je
jmp
pop
push
out
pop
cwtl
pop
jnp
nop
addb
xor
mov
add
leave
cli
mov
aaa
sti
dec
ss
ljmp
add
pop
inc
loope
add
mov
pop
mov
lret
fwait
xor
pop
mov
sbb
push
add
movsb
adc
add
add
jmp
add
iret
outsb
dec
outsb
push
out
and
mov
pushf
mov
sub
add
push
les
mov
add
dec
jbe
add
xchg
xchg
rcrl
gs
testb
xchg
insb
gs
sbb
mov
das
adc
addr16
add
jo
xchg
in
gs
jecxz
sbb
mov
jbe
push
mov
mov
mov
repz
xchg
xor
out
out
sahf
cmp
sub
or
stos
gs
add
jmp
lret
add
std
inc
add
lock
mov
imul
icebp
aam
inc
addb
add
in
xor
push
cmp
in
movb
xchg
fidivrs
ret
stos
cmp
fdivl
and
in
mov
add
stc
das
push
xor
push
movb
mov
add
enter
daa
dec
gs
mov
inc
add
dec
pushf
lcall
xlat
sbb
je
and
cmpsl
pop
inc
or
aad
roll
cmp
iret
cltd
cli
add
imul
mov
cmp
out
jl
icebp
lock
or
push
jp
mov
ret
out
jmp
cmpsl
das
out
mov
mov
int3
sbb
sbb
sahf
mov
inc
add
pop
jae
add
mov
fnsave
xor
mov
fbld
sti
imul
add
adc
jb
mov
inc
out
cmp
sub
add
hlt
mov
roll
adc
in
rolb
sub
push
in
or
stos
ss
lcall
mov
add
adc
shl
xlat
xchg
inc
ds
adc
sub
sub
test
xchg
repz
dec
loope
inc
add
mov
add
ja
cs
jle
jg
cmp
add
in
xchg
xor
add
add
faddp
add
xchg
mov
sti
iret
repnz
cmpsl
pop
xchg
lods
mov
xor
inc
in
mov
int3
popf
adc
loopne
out
out
jo
faddl
ret
add
mov
and
ret
iret
xor
int
pop
inc
add
rcrb
lods
dec
addr16
pop
orl
es
mov
push
add
or
or
xcrypt-ofb
cmpsl
test
lds
aaa
addb
cmp
outsl
ja
pop
movb
sti
mov
add
add
dec
pop
xor
xchg
ror
sub
test
cmp
add
popf
pop
cmc
jns
addb
ja
in
sub
push
lahf
loop
add
in
inc
add
add
cmc
push
repz
outsb
mov
mov
cmp
in
test
into
das
push
add
je
outsl
nop
jns
xchg
stc
sub
fsubrs
jbe
mov
addb
mov
add
lods
dec
jb
add
sahf
f2xm1
mov
xchg
cmp
scas
push
add
add
add
pop
data16
xor
add
pop
or
shll
xor
pop
and
mov
or
mov
test
fsts
jecxz
lods
push
jbe
popa
fcomps
xchg
popa
lahf
pop
fsubrs
add
aaa
cmp
fwait
cmp
push
leave
or
add
scas
jle
push
arpl
add
or
dec
ror
push
int
cmp
sbb
push
je
push
adc
xor
nop
push
push
push
and
jp
jmp
add
mov
outsl
push
lds
pop
das
sub
stos
repz
aaa
loop
bound
mov
push
cmp
cmp
mov
mov
jle
cltd
shl
out
add
cmpsb
inc
add
and
xchg
cmp
adc
add
adc
test
addb
loope
mov
jmp
add
or
cmpsl
add
push
out
in
push
cltd
jbe
lock
xor
sub
cmp
add
or
add
pop
pop
xor
add
add
add
in
enter
adc
jno
cmp
push
stc
popf
inc
add
std
out
addb
popa
and
and
mov
aaa
arpl
bound
mov
sub
push
push
add
add
cmp
fisttpl
int3
xor
push
cmp
mov
xchg
test
lds
pop
and
or
pop
aad
mov
adc
push
popf
fwait
push
xchg
jge
add
mov
mov
fldcw
shlb
push
sub
enter
incl
sub
push
add
push
stos
xchg
lret
sub
cmp
mov
lds
pusha
add
test
bound
jae
sub
cmpsl
jno
add
lods
gs
or
ror
fistl
fnsave
aas
lock
inc
ret
pop
or
sub
rcrl
lret
pop
pause
ja
cmp
cld
lret
add
ljmp
add
adc
cwtl
andl
dec
loope
divl
rol
add
mov
push
xchg
sbb
or
test
mov
xor
sub
pop
xor
mov
aad
pushf
add
insb
mov
jno
inc
mov
mov
dec
mov
add
pop
rol
into
dec
sub
rorb
add
mov
xchg
or
jmp
mov
clc
sahf
aam
lret
and
xchg
sbb
aaa
jmp
or
add
repz
mov
sahf
add
inc
add
mov
sbb
iret
aad
ret
xlat
pop
cwtl
call
pop
jnp
jnp
fs
pop
cli
mov
add
or
xchg
icebp
add
addb
mov
rolb
insb
fsubrl
out
pop
jecxz
movsb
dec
pop
xchg
aaa
inc
add
stc
xchg
and
jnp
outsb
add
stos
xchg
ret
dec
test
popf
mov
fsub
add
mov
add
add
or
clc
dec
call
jmp
cltd
cmp
loop
sub
pop
cwtl
sbb
pop
mov
mov
cs
addl
into
lcall
jmp
repz
clc
sub
adc
int
popw
add
jp
mov
and
stos
mov
xor
dec
movsb
paddusb
lods
into
mov
dec
mov
loopne
add
dec
mov
add
adc
sbb
enter
mov
aad
mov
out
xchg
mov
and
scas
push
cmp
add
adc
add
mov
ret
pop
add
push
std
aas
mov
add
sbb
call
add
orl
nop
xchg
sbb
mov
add
lcall
shrl
jl
sub
jno
popa
out
push
mov
or
sbb
add
pop
shll
mov
pop
jns
cmpl
mov
scas
mov
cmp
pop
cmp
add
adc
addb
or
dec
pop
mov
dec
push
lods
adcl
push
aaa
inc
pop
cmpsl
pusha
add
xor
push
xor
add
push
xchg
movsl
cld
rcl
jl
xchg
sub
fnsave
call
add
xchg
shrl
push
scas
inc
add
and
ja
sahf
push
adc
xorl
cli
cmp
cld
xlat
push
popa
mov
push
xor
adc
rclb
insb
pop
cmpsb
jge
pop
loopne
roll
adc
fcoms
pop
push
rolb
pop
insb
or
add
xor
into
xor
aas
sahf
jnp
fmul
sub
movb
xchg
es
add
add
inc
icebp
nop
fildl
lods
push
add
bound
into
or
dec
add
es
pop
out
shr
mov
sub
dec
test
sub
loop
lea
jecxz
lahf
jle
mov
test
or
xchg
dec
mov
nop
fbstp
add
mov
or
xchg
addb
mov
into
out
xchg
jnp
test
dec
and
add
cmp
pop
inc
subl
lods
push
jno
in
inc
add
out
push
xlat
fxam
xor
loope
push
popa
xchg
negl
movb
fildl
and
pop
loopne
inc
add
lds
call
hlt
sub
fs
add
push
inc
add
mov
clc
mov
fmul
mov
xor
in
in
test
add
pop
pop
jnp
add
push
xchg
hlt
enter
cmpsl
mov
lods
sub
jle
fidivrs
sbb
sbb
flds
cmp
xor
dec
sbb
adc
js
lea
and
sub
xchg
sbb
mov
jl
cmp
or
or
push
sbb
add
push
cli
pop
in
mov
aad
pop
addb
lock
fcoms
repnz
add
dec
pop
out
addr16
iret
fsubrl
in
mov
gs
adc
enter
cs
add
inc
mov
addb
push
hlt
sub
add
inc
add
sub
iret
dec
cli
pop
adc
xor
mov
add
shlb
fwait
lea
ret
test
adc
test
xor
add
xchg
ss
adc
xchg
lcall
daa
dec
out
xor
aam
shr
stos
jne
lahf
adc
stos
rolb
mov
dec
cmp
xchg
pop
lahf
gs
add
stc
xchg
scas
cmpsl
jbe
mov
imull
sti
cmp
shrl
jno
add
fisubrl
std
frstor
sbb
and
jns
pusha
add
insl
adc
outsl
add
stos
mov
daa
outsl
adc
jne
scas
movl
push
push
in
pop
mov
popa
mov
neg
outsl
push
ret
aas
repz
pop
or
insb
push
add
mov
pop
daa
adc
data16
stos
mov
lret
arpl
bound
jg
mov
sub
shl
into
sub
test
sti
or
fimuls
add
push
stos
dec
es
jb
imul
add
add
xor
bound
addb
add
cmp
mov
lock
in
popa
nop
cmp
lods
shr
xor
push
mov
dec
mov
mov
jno
cmp
fistl
out
inc
add
in
jno
jns
push
cs
cmpsl
mov
adc
adc
xor
adc
aam
xlat
dec
inc
xchg
cmp
or
mov
sbb
mov
jo
ror
mov
mov
stc
add
rolb
movsl
mov
loop
nop
mov
repz
divb
sub
mov
add
fnsave
movsb
lock
inc
and
inc
add
adc
test
inc
add
cmc
mov
jne
mov
fwait
dec
std
push
adc
jb
inc
add
fldcw
fsub
push
cmpsb
pop
stos
hlt
mov
sbb
out
and
add
mov
stos
xor
lahf
out
ja
and
push
test
xlat
imul
jb
fisubl
inc
add
add
gs
inc
add
mov
jp
int
inc
add
lahf
jno
mov
xor
outsb
stos
inc
add
ret
loopne
ds
movsl
adc
pushf
sub
xor
pop
dec
cmp
dec
xchg
push
stc
fdivr
int
add
outsb
cmpsl
add
jbe
pop
lret
inc
add
cmp
or
stos
sub
sbb
jmp
bound
imulb
adc
xlat
std
pop
ret
xchg
add
sub
or
jb
push
jne
cltd
mov
dec
scas
mov
out
int3
sub
popa
test
fnstenv
xor
add
cmpsb
add
orl
add
fnstcw
add
addb
arpl
movb
inc
add
add
loop
in
out
push
xor
aaa
ret
xchg
pop
mov
push
mov
pushl
clc
pop
pop
pop
pushf
push
cmpsb
mov
dec
lret
jnp
test
sbb
scas
jle
imul
ret
xchg
cmpsb
sub
out
into
in
xchg
loopne
dec
jo
or
aas
imul
ret
xor
fsubl
gs
les
sahf
insl
and
sbb
push
stos
fwait
int
sbb
xchg
inc
push
sbb
ficoml
jno
mov
mov
imul
or
int3
sarb
lret
call
mov
in
xchg
into
sti
bound
mov
inc
ds
mov
and
add
pop
adc
or
sbb
dec
cmp
add
mov
dec
in
jno
in
xor
inc
add
pop
adc
mov
inc
or
push
subl
sub
add
and
fisttps
add
mov
sub
sbb
rcrl
out
mov
iret
mov
scas
repnz
dec
add
mov
push
test
std
push
inc
mov
dec
fldcw
mov
sub
dec
xor
in
adc
push
aas
fs
sbb
leave
and
aaa
scas
sbb
int3
jmp
xchg
call
xchg
mov
inc
add
push
and
xchg
insl
stos
outsb
out
imul
out
mov
addr16
int3
mov
jae
push
and
movb
mov
pop
cmp
jno
idivb
inc
add
mov
pop
or
xor
mov
mov
addr16
inc
lea
lods
inc
out
lds
scas
or
pop
loopne
imul
nop
in
xchg
mov
mov
aaa
add
scas
mov
add
outsl
cmp
popa
aas
int
mov
aam
add
or
jns
push
mov
lock
lods
jb
inc
push
push
jl
setle
add
addb
mov
fdivs
pop
call
xor
mov
xor
cmc
mov
sbb
adc
xchg
sbb
add
icebp
pop
jo
shl
cmp
sub
fnstenv
out
cld
cmc
xor
pop
jb
imul
push
cld
and
sub
jle
lahf
mov
add
adcl
shlb
loop
call
dec
jg
push
cli
mov
and
out
push
es
xchg
popf
push
pop
psubb
mov
pop
push
inc
add
bound
mov
mov
in
mov
or
xor
imul
pop
movsl
into
add
lock
movsl
jns
std
dec
adc
lret
add
fiadds
inc
and
out
xorl
cmp
insb
adc
inc
mov
add
incl
push
lcall
inc
aas
lahf
movsl
or
mov
mov
lcall
addr16
jl
lods
push
push
into
pop
mov
inc
add
lret
mov
frstor
pop
stc
push
ss
mov
repz
call
in
stos
push
clc
cmpsb
sahf
movsl
lock
addl
orl
fistl
out
sbb
rolb
cmp
ja
sahf
loopne
xor
je
and
cmp
enter
sub
sub
in
cmp
cld
sub
and
fildl
shll
mov
cmpl
roll
cmp
out
add
xor
dec
stc
push
cmpsb
ja
add
fcmovb
add
ds
xchg
xlat
jmp
ret
xchg
add
es
push
stos
hlt
mov
add
adc
mov
enter
clc
mov
xor
mov
xorl
add
test
mov
scas
jmp
jge
rolb
lahf
xchg
jmp
outsl
js
es
mov
fwait
jno
push
daa
sub
push
mov
sbb
scas
mov
out
and
pop
fstpt
ljmp
add
mov
outsb
xchg
je
outsb
adc
popf
xchg
jle
je
movsl
lods
pop
outsb
addr16
negl
and
xlat
fiaddl
lahf
pop
ficoms
movb
add
scas
cmp
fwait
mov
fcoms
mov
fwait
ror
cmp
stos
popa
push
int
mov
ss
cmp
divl
inc
fcompl
pop
lahf
repz
shrb
repz
fnstcw
les
or
movsl
scas
dec
jle
add
sahf
outsl
cmp
jp
les
fildl
popf
add
sarl
rorb
xchg
sub
adc
loop
mov
add
in
jl
pushf
add
fmull
fucomi
dec
jle
ror
int3
or
mov
jae
add
inc
out
shrb
arpl
dec
add
cwtl
xchg
xor
sbb
mov
mov
add
add
shrl
dec
sti
add
add
cmpsb
adc
inc
inc
mov
lea
leave
imul
sub
add
jge
into
addr16
adc
retw
and
mov
mov
cltd
in
nop
push
nop
shlb
add
hlt
cmp
arpl
push
lea
mov
add
pop
mov
mov
fimull
and
std
mov
pop
movsb
bound
into
fnsave
out
cmpl
orl
rolb
adc
mov
out
xor
pop
sub
bound
lret
notb
fldt
add
lret
push
inc
mov
cmp
inc
push
add
mov
cmpsb
sahf
cmp
inc
aad
sahf
mov
out
and
cmpsl
add
icebp
inc
out
mov
cwtl
push
push
sub
stos
lea
fistl
xchg
xor
rorb
dec
movsl
cltd
pop
pop
sub
pop
lods
cmpl
mov
psrlw
fwait
lods
notb
popa
adc
mov
xchg
pushf
jg
es
fwait
daa
mov
push
pop
adc
jnp
cld
or
dec
out
in
add
fsubl
les
inc
add
lcallw
jecxz
push
add
pop
mov
mov
pop
ficoml
xchg
aaa
outsb
test
out
mov
inc
add
test
std
pop
mov
pop
addb
mov
je
cli
lahf
cld
les
and
pop
bound
jg
test
inc
dec
out
add
enter
push
aaa
incl
pop
rolb
popf
jp
mov
add
out
xchg
sub
dec
inc
add
sbb
addr16
mov
fsubl
stc
fbstp
cmp
fstpt
jg
adc
lea
add
mov
mov
add
adc
lods
int
cwtl
push
sahf
push
xor
shr
cltd
mov
push
add
jp
inc
and
inc
mov
or
inc
mov
mov
je
es
fisubl
mov
jl
pop
in
pop
rcr
mov
jne
add
call
pop
dec
sub
xchg
push
or
jge
rolb
dec
clc
jb
in
cltd
pop
loope
add
call
addb
xchg
sti
sub
inc
rcrb
push
push
ret
mov
ds
sub
mov
testl
lea
mov
add
scas
mov
add
or
stc
or
xor
ror
and
lret
inc
add
repnz
loop
cmp
push
add
movb
cmp
cmc
fistpl
sub
nop
mov
gs
mov
dec
das
fsubl
mov
lods
data16
lcall
sbb
mov
mov
adc
xchg
ds
imul
pop
and
int
sbb
pusha
add
add
inc
add
mov
or
mov
pushf
adc
pop
and
and
std
cmp
mov
add
test
jno
es
pop
out
pop
ret
loop
jmp
mov
sub
stos
xor
xchg
mov
cmp
inc
add
insl
shll
lock
ljmp
je
mov
sbb
mov
or
inc
add
ss
idivb
mov
rcr
outsb
loope
and
jmp
add
xchg
pop
or
jo
rorl
add
fsubrl
or
aad
les
cmc
ljmp
loop
push
arpl
inc
in
sub
jno
mov
push
add
fwait
and
pop
mov
push
push
xchg
jae
pop
out
pop
adc
shlb
add
scas
addb
ljmp
test
sti
data16
cmc
and
out
and
mov
add
scas
in
pop
notl
push
cmpsb
pushf
cmp
loop
je
repz
add
inc
sbb
pushf
lods
shll
dec
test
inc
add
pop
add
data16
lea
adc
rolb
addb
int3
clc
jmp
fistps
cmp
xchg
mov
mov
in
add
aad
stos
scas
ret
push
or
sbb
jmp
cmpsb
decb
jle
mov
fsubrs
fimull
cld
xchg
xor
sbb
out
adc
test
jg
pop
mov
sti
mov
ds
jne
pop
xor
insl
cmp
pop
xchg
sbb
mov
or
mov
dec
shrl
ss
push
cld
in
xchg
xchg
push
imul
ror
add
out
mov
mov
cltd
fimull
xor
idivb
test
mov
add
std
pop
jb
add
push
and
sub
push
aam
mov
and
sbb
dec
jae
xchg
and
dec
popf
movsl
imul
and
aas
iret
jg
aam
stos
int3
cmpsb
pop
pop
push
fisttpll
roll
and
jne
dec
sbb
xchg
and
out
sar
mov
adc
loope
aad
add
repnz
xchg
jnp
sbb
jne
mov
cwtl
pop
mov
aas
popf
dec
orl
jo
cmp
int
and
ds
ret
popa
jno
mov
mov
or
arpl
mov
popl
aam
cltd
pop
sahf
aad
sub
add
xor
lea
push
push
dec
push
pushf
push
xchg
shr
stos
mov
mov
sub
pushf
mov
in
mov
jp
add
xchg
xchg
test
insl
or
inc
add
in
lds
jmp
jb
movsb
and
andl
mov
das
sub
jo
push
jg
repz
add
enter
je
stos
mov
adc
and
imul
mov
dec
and
mov
and
push
adc
and
push
adc
inc
add
popa
pop
adc
cld
push
stos
aam
cmpsb
or
mov
cmp
stc
aad
ret
daa
rcll
sbb
push
xor
add
aad
mov
fstpt
sbb
pushf
mov
add
mov
repnz
out
cmp
cmpsb
jmp
test
pop
xor
cltd
xor
mov
mov
lods
fstpl
mov
sahf
jne
add
xchg
nop
lods
in
sub
movl
mov
and
rcl
fists
and
outsl
pop
push
sub
xor
sub
call
mov
lods
mov
push
outsb
add
mov
or
loope
cmpl
decb
inc
add
xchg
jmp
add
les
lahf
imul
add
das
pushw
lcall
testl
arpl
cmp
add
pop
lcall
sub
nop
loop
xlat
adc
mov
cwtl
int
mov
add
add
ret
xor
pushf
cmp
mov
add
xor
movsl
add
add
jmp
into
ret
jb
jecxz
repz
lahf
xor
sbb
mov
add
lock
out
mov
jae
inc
mov
nop
jl
aas
push
mov
xor
add
icebp
into
shll
mov
addl
xor
mov
jne
mov
mov
jecxz
leave
push
into
aas
push
lcall
leave
and
mov
cmp
push
fs
xor
xchg
dec
out
fwait
sbb
mov
loopne
add
xchg
in
add
insb
sbb
xor
cmpsl
mov
sub
fcomip
popf
decb
add
and
das
dec
popa
and
sbb
mov
cld
xor
xchg
or
lods
xchg
icebp
fsubrl
sub
pop
mov
xchg
fmull
lret
stos
rolb
leave
not
jne
push
or
mov
filds
xchg
rcll
addb
and
jecxz
int3
icebp
mov
sub
push
mov
push
mov
lahf
pop
scas
adc
add
sub
pop
sti
test
loope
push
and
lea
add
sbb
stc
xchg
test
aaa
xchg
adc
add
mov
rolb
inc
push
add
addr16
sub
sbb
mov
xchg
bnd
pushl
addr16
add
mov
add
add
dec
adc
test
and
aas
and
ret
sti
aas
pusha
add
bnd
add
jnp
outsb
dec
jle
call
add
inc
outsl
ja
pushl
jnp
sarl
repz
inc
add
repnz
add
sub
enter
shll
jb
xchg
insb
ret
and
jo
mov
sbb
xor
lods
pop
movsb
xchg
mov
aaa
inc
add
jns
enter
push
sub
mov
push
adc
rolb
or
scas
negl
dec
int3
loop
test
add
roll
cmc
xchg
dec
scas
lock
add
sub
rol
insb
inc
add
add
cmp
add
bound
rep
sbb
insl
lock
pop
ja
outsb
insb
leave
mov
push
xor
push
cmc
orl
pop
or
in
int3
mov
pop
arpl
push
and
int3
mov
incl
add
dec
cmp
dec
cmp
fsubrs
addl
mov
and
add
iret
lret
pop
add
jns
es
and
fs
or
xor
test
add
stc
push
ret
adc
jae
xchg
lret
fimull
adc
jge
movl
mov
or
addb
push
add
add
aam
cmp
aaa
adc
leave
inc
cmc
xchg
arpl
ficoms
addb
stos
pop
xchg
dec
sbb
imul
xor
jbe
scas
lea
int3
jecxz
sbb
mov
and
fwait
inc
add
and
or
push
bound
mov
sbb
jbe
add
push
sarb
sti
sbb
add
mov
ret
das
ja
add
jbe
in
sub
adc
lods
ljmp
jne
push
xchg
or
add
clc
inc
add
jg
movsb
mov
fsubs
inc
inc
add
mov
push
nop
cmc
imul
mov
sub
xchg
and
shlb
lea
add
cmp
sti
mov
arpl
push
mov
mov
inc
add
call
movb
add
pop
fcomp
and
add
test
adc
sbb
or
movsb
lret
orl
adc
divl
add
dec
jg
add
mov
push
add
mov
add
dec
loopne
mov
lods
xchg
xor
add
push
add
mov
addb
cmovo
icebp
movsl
inc
test
xor
mov
mov
xchg
mov
mov
into
mov
dec
cmp
and
and
insl
xchg
mov
add
pop
adcl
mov
cmp
arpl
jmp
leave
cmp
cli
stc
jns
add
and
adc
add
pop
mov
mov
sub
js
lret
daa
fsubl
add
sub
add
imul
hlt
lret
add
mov
int3
insb
leave
std
add
ds
std
mov
xchg
pop
fstpl
inc
add
xchg
mov
xor
stc
movaps
add
sti
jl
enter
and
cmp
dec
test
mov
push
add
mov
cwtl
lcall
xchg
insl
lock
scas
outsb
xlat
jae
fwait
or
adc
movsl
int
add
add
cmp
lcall
into
sbb
cmp
inc
jecxz
mov
jae
add
add
outsl
inc
xor
rorl
xor
int3
cld
jnp
popf
paddsw
xor
xor
jo
cmp
dec
sub
fucomi
mov
into
cwtl
stc
jae
mov
and
stos
cmp
jb
xchg
xchg
cs
add
cltd
xchg
jmp
inc
push
sub
test
iret
cmp
adc
fisttpll
jmp
ja
or
cld
arpl
push
add
ret
jp
dec
jno
bound
xchg
popf
fcompl
xor
inc
add
lahf
adc
loop
cmpsb
inc
add
add
sbb
mov
outsb
mov
xor
jecxz
add
cltd
imul
cmp
daa
xor
add
push
or
mov
pop
pop
dec
mov
pop
sbb
stc
pop
mov
push
push
sbb
stc
xchg
sti
ljmp
bound
idivb
fnstcw
jle
movsb
sbb
jnp
sbb
cli
fadd
add
std
cmp
js
addb
and
in
test
imul
add
add
dec
mov
aad
add
pop
pop
fiaddl
in
in
xchg
xchg
sbb
xor
faddl
and
int
adc
nop
lret
fimull
or
mov
add
push
rolb
dec
xor
sbb
or
lea
add
add
and
mov
mov
add
xor
sbb
aas
icebp
mov
add
jle
sub
inc
add
test
addb
movsl
mov
jbe
pop
loopne
mov
inc
dec
mov
aad
sbb
fstps
enter
idiv
rolb
iret
sbb
test
push
test
js
enter
jmp
jne
repz
push
jbe
std
ficoml
testl
stos
pop
outsl
outsb
sbb
xchg
inc
add
jmp
das
movb
icebp
out
add
mov
jecxz
xor
add
mov
push
dec
push
sahf
xor
addb
ds
lret
fisubs
dec
fildll
mov
pop
rcrl
xor
arpl
iret
popf
push
lea
test
push
xchg
fidivs
rcrl
aas
add
popf
bound
shrl
cltd
rolb
outsl
mov
jno
sbb
cmp
sub
call
inc
add
add
hlt
sbb
movsb
jecxz
adc
push
hlt
mov
add
add
dec
gs
add
and
adc
in
cld
addb
loope
jb
push
lcall
pop
in
lock
cmp
mov
fdivrs
icebp
xchg
add
js
add
sarl
fmull
pop
es
jge
addr16
jne
push
dec
je
mov
ret
xlat
jle
ss
dec
dec
inc
add
movsb
repz
adc
dec
int3
cmp
sarb
fdivrs
loop
adc
or
gs
int
push
add
pop
mov
call
cmc
fimuls
decl
js
mov
mov
sarb
jg
gs
arpl
rorl
cmp
test
xchg
push
stos
mov
daa
mov
pop
lock
scas
lret
mov
mov
cmp
add
dec
sub
add
add
mov
fwait
rep
test
jl
jg
out
xor
add
fstpt
inc
add
test
lds
js
test
mov
xchg
dec
mov
add
cmpsl
cld
xlat
ljmp
pop
das
or
repnz
ret
jno
or
dec
xor
lcall
mov
add
adc
jne
dec
xlat
cmp
enter
int
fisubl
add
mov
pop
popa
gs
in
mov
stos
cltd
adc
xchg
dec
sub
add
xor
mov
mov
outsl
add
arpl
add
jbe
out
addr16
xchg
sarb
xchg
push
roll
movsl
xchg
imul
in
aam
add
or
inc
add
dec
jns
sub
jae
ret
pop
xchg
xchg
dec
jo
xchg
cli
mov
fistpl
loopne
test
pop
pop
out
pop
int3
sbb
cltd
es
cmp
add
scas
push
call
les
push
je
add
and
inc
cmp
jmp
out
sub
ds
inc
add
and
cmp
add
mov
cwtl
out
add
xchg
xor
xor
push
cltd
insb
lods
dec
jg
enter
push
std
ss
movsb
mov
mov
lods
sub
sub
jmp
sub
scas
mov
cmpsb
sub
mov
int3
into
mov
ret
inc
sar
insb
jle
outsl
xchg
cs
fcoml
lock
fnstcw
dec
jbe
xchg
jae
push
fdivs
in
testb
ljmp
nop
aaa
lock
adc
dec
jecxz
push
data16
cltd
or
sbb
scas
push
xor
movsl
jns
add
rcl
out
xor
sti
mov
gs
fs
dec
movb
add
add
test
sub
or
stos
mov
mov
pop
cmp
add
cmp
out
stos
fwait
pop
movb
push
mov
xchg
jg
outsl
lret
add
jl
adc
bound
jl
add
pop
dec
or
aaa
mov
pop
pop
aas
fisubrs
sbb
add
sub
xchg
jns
dec
pop
mov
out
ds
adc
aaa
jecxz
pop
jg
mov
fmull
test
and
pushf
in
inc
add
das
outsl
out
mov
jge
xchg
adc
aaa
or
pop
xchg
in
ljmp
mov
popf
jge
add
xchg
pop
adc
out
loope
je
and
insl
pusha
add
push
jecxz
lahf
jbe
pop
sub
cmpsb
and
jmp
xor
orl
repz
outsl
adc
add
daa
enter
sub
cmp
fcomi
in
test
add
addb
and
out
sbb
add
pop
mov
dec
xlat
js
cli
xor
out
xchg
icebp
xor
addb
popa
lret
add
cs
xchg
mov
sub
ja
imul
mov
enter
sub
and
or
outsl
xchg
mov
inc
les
int3
mov
lcall
and
cmp
mov
xchg
aad
aaa
adc
fcompl
sbb
cwtl
cmpsb
stos
pop
mov
add
scas
mov
aaa
out
stc
sub
add
mov
xchg
movb
out
negb
xchg
cmp
cld
faddp
add
mov
cmp
ja
cltd
lret
or
dec
inc
mov
cmp
add
mov
mov
sub
add
lods
push
ljmp
cmp
jmp
js
das
daa
pop
xor
adc
mov
mov
cmpsl
sti
adc
cmp
cwtl
sti
and
jp
sbb
dec
stos
or
jecxz
imul
pop
cltd
sub
dec
mov
jecxz
push
mov
push
pop
faddp
add
stc
addb
sbb
adc
inc
add
stos
arpl
addr16
inc
add
or
and
fwait
xchg
loop
pop
push
fnsave
mov
pop
lods
pop
icebp
mov
dec
out
inc
xchg
stos
and
dec
jl
leave
push
loope
mov
fistpll
inc
movsb
push
mov
xchg
mov
jge
out
add
fdivrp
mov
xchg
push
jge
icebp
addb
xchg
pop
fs
int
xor
push
jb
mov
imul
xchg
cli
repz
inc
je
fisttpl
xor
add
and
and
and
dec
cli
addb
mov
dec
iret
out
dec
add
int
cmpsb
lds
adc
daa
pop
sub
inc
add
sbb
mov
mov
add
cmp
add
push
call
mov
push
adc
int
rolb
xor
fiaddl
add
mov
mov
and
add
add
popa
fdivrl
int3
lret
xor
outsb
loopne
aaa
add
flds
mov
dec
push
add
cmc
cs
jae
push
and
nop
test
xor
dec
lds
loop
push
push
mull
add
add
cs
pop
and
mov
ljmp
add
mov
jmp
test
mov
add
into
and
push
push
or
mov
pop
insl
push
add
sbb
mov
mov
cmp
mov
int3
test
add
repz
cmp
dec
pop
push
inc
add
sub
pop
rolb
mov
popa
pop
cmpsb
or
lock
add
shll
push
inc
add
mov
inc
add
fwait
and
bnd
inc
jge
mov
lret
dec
rorb
in
pusha
add
popa
stc
cs
stc
mov
xchg
or
or
imul
cmpsl
jnp
xchg
pop
pop
iret
xchg
dec
lds
xchg
xor
pop
mov
cmp
inc
add
inc
add
inc
add
lret
aad
push
gs
add
ficompl
mov
mov
xchg
std
and
scas
pop
inc
mov
fs
stc
mov
insl
adc
xchg
bound
jae
das
push
out
pushf
pop
and
mov
xor
add
add
add
push
cwtl
dec
test
sbb
jge
rcll
push
loop
xchg
cmp
das
test
add
mov
scas
add
xchg
fiadds
aam
inc
add
mov
lcall
fiadds
pop
push
in
out
add
push
dec
pop
inc
xchg
push
add
daa
jnp
xchg
testl
ja
aad
jne
bound
push
add
inc
add
lea
mov
jo
mov
les
outsb
outsb
mov
addb
ljmp
dec
mov
or
das
inc
mov
jb
jecxz
movsb
mov
push
mov
push
xor
mov
push
stc
imull
jl
add
adc
or
leave
mov
and
cmp
adcl
pop
insb
fwait
inc
mov
ret
cltd
ret
sub
lret
add
xchg
xchg
and
push
sbb
add
adc
xor
fisubl
sub
sahf
clc
les
jb
inc
mov
les
iret
mov
mov
sub
or
adc
push
mov
test
inc
add
sbb
xor
sub
xlat
fisttps
cs
jo
inc
add
pop
mov
mov
sbbl
add
jbe
and
je
inc
add
add
lea
stos
or
add
arpl
aas
sbb
push
jmp
add
rolb
and
adc
in
lret
movsb
fnstcw
fcompl
enter
jo
fldt
add
cmpsb
mov
gs
inc
mov
loop
in
pop
call
sub
dec
in
outsb
lods
lret
cmp
add
pop
out
xlat
mov
add
imul
add
test
sub
imul
sbb
add
mov
repz
imul
push
xchg
jmp
add
