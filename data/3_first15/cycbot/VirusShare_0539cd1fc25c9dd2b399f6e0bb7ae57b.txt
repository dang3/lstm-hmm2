add
rol
loopne
add
inc
add
pusha
loopne
pusha
add
rolb
mov
pusha
and
inc
inc
loope
ret
pusha
bound
add
loopne
shlb
loopne
addb
inc
inc
add
inc
shlb
shl
inc
addl
andb
inc
loopne
rol
loope
arpl
shl
loopne
addb
and
inc
add
and
inc
rol
inc
arpl
loopne
bound
add
inc
addb
add
add
pusha
add
and
shl
and
inc
mov
loope
arpl
ret
andb
bound
ret
inc
andb
inc
add
shlb
add
and
and
inc
bound
and
inc
addb
add
arpl
and
and
add
mov
loopne
and
mov
loopne
add
pusha
ret
loopne
mov
add
inc
add
inc
and
andb
pusha
and
and
add
and
popa
rolb
arpl
add
add
add
add
mov
inc
add
and
add
mov
rolb
pusha
addl
addb
loopne
and
add
mov
mov
inc
andb
arpl
pusha
andb
andb
add
pusha
and
add
andb
pusha
add
roll
addb
shl
inc
inc
and
loop
inc
add
mov
shlb
loopne
mov
rol
mov
loopne
inc
loopne
add
loopne
and
loopne
inc
and
jecxz
andl
inc
inc
mov
pusha
mov
mov
add
loope
mov
inc
pusha
add
and
and
and
add
andb
addb
rolb
inc
add
andb
popa
and
inc
loopne
add
shlb
ret
add
inc
inc
inc
add
inc
mov
andb
mov
inc
and
andb
addb
add
and
popa
pusha
and
inc
inc
mov
pusha
mov
and
inc
popa
inc
arpl
loopne
loop
addb
shlb
roll
andb
add
add
loopne
inc
add
shlb
add
loop
loopne
loopne
addb
rolb
add
addb
ret
mov
shll
add
and
loopne
loopne
pusha
bound
add
pusha
rolb
and
add
and
pusha
add
pusha
mov
add
loopne
andb
inc
ret
mov
arpl
ret
pusha
and
ret
add
addb
and
mov
inc
and
add
addb
andb
add
and
mov
ret
mov
roll
add
pusha
add
and
pusha
jecxz
mov
and
inc
add
add
inc
bound
jecxz
andl
inc
rolb
loop
popa
add
mov
jecxz
popa
and
and
addb
loopne
addb
inc
shl
and
inc
and
add
mov
inc
mov
andb
loopne
and
add
and
pusha
bound
shll
and
inc
inc
add
inc
and
inc
add
and
and
mov
add
and
shlb
add
andb
mov
mov
add
mov
addb
add
mov
add
arpl
ret
mov
and
add
inc
add
loop
mov
add
and
and
and
inc
loopne
pusha
andl
inc
andb
rolb
pusha
rol
popa
pusha
and
add
and
add
inc
pusha
add
add
and
inc
and
add
and
andb
inc
inc
arpl
add
bound
shlb
and
pusha
inc
loopne
and
add
add
add
loopne
and
addb
and
and
and
arpl
rol
add
inc
inc
loopne
shlb
and
add
add
inc
and
shl
pusha
add
inc
and
bound
pusha
mov
addl
add
add
pusha
popa
inc
loopne
inc
rol
loope
loop
roll
mov
add
andl
and
loopne
rolb
and
inc
arpl
add
addb
mov
arpl
and
andb
inc
and
inc
add
add
mov
add
ret
add
inc
addb
add
add
inc
mov
add
inc
mov
add
mov
pusha
shlb
inc
mov
loopne
mov
shll
addb
mov
add
and
add
loopne
inc
inc
shlb
mov
andb
andb
and
add
addb
loopne
shlb
and
inc
inc
add
addb
pusha
mov
add
pusha
mov
inc
inc
mov
inc
add
add
popa
and
inc
pusha
arpl
loop
roll
pusha
mov
rol
ret
and
addb
shl
and
inc
inc
inc
add
add
rolb
and
mov
mov
add
ret
add
ret
rolb
and
inc
loopne
andb
add
inc
pusha
arpl
loopne
inc
inc
jecxz
ret
add
inc
loopne
and
pusha
inc
add
shl
add
mov
add
mov
rolb
rolb
inc
and
mov
addb
add
pusha
add
inc
add
and
add
and
jecxz
inc
add
add
add
add
shlb
andl
and
addl
mov
and
and
ret
mov
mov
loopne
loopne
add
inc
loopne
add
add
add
add
loope
inc
add
add
add
add
inc
and
inc
inc
shlb
inc
add
add
add
add
add
inc
pusha
and
inc
rolb
add
mov
pusha
mov
pusha
inc
mov
and
and
add
inc
add
mov
add
jecxz
add
mov
and
add
add
add
mov
andl
shll
add
inc
andb
and
bound
inc
mov
ret
rol
mov
add
loopne
inc
arpl
shlb
loopne
addb
jecxz
pusha
loopne
add
add
pusha
inc
add
andl
and
add
pusha
add
inc
add
shll
pusha
inc
rolb
loopne
pusha
loopne
loop
mov
mov
add
and
arpl
inc
ret
add
inc
popa
rolb
and
ret
andb
roll
add
loop
and
inc
add
jecxz
ret
shl
jecxz
mov
add
mov
rolb
add
mov
add
and
add
loopne
shlb
popa
add
inc
add
shlb
shlb
mov
pusha
addb
loopne
inc
mov
mov
add
loop
rolb
inc
andb
inc
arpl
and
add
pusha
addb
add
add
add
rolb
add
add
inc
add
add
ret
inc
addl
add
and
andb
add
add
add
ret
and
pusha
inc
andb
and
inc
add
andb
mov
inc
inc
add
inc
jecxz
add
add
inc
rol
ret
add
add
loop
andl
inc
inc
addb
loopne
and
mov
inc
loopne
and
loop
and
rolb
add
and
mov
inc
rolb
rolb
and
loop
inc
and
and
add
pusha
inc
add
loopne
and
andb
and
mov
andl
shll
loopne
and
add
and
addb
add
add
jecxz
bound
ret
mov
mov
and
loopne
pusha
shl
add
addb
and
add
ret
add
add
andb
mov
add
inc
add
add
shlb
addl
bound
pusha
mov
add
ret
addb
pusha
roll
mov
add
arpl
addb
mov
add
add
add
loop
rolb
add
ret
inc
add
mov
add
loopne
add
add
andl
add
inc
pusha
shlb
mov
add
add
pusha
addb
inc
and
loopne
and
pusha
addl
pusha
pusha
and
addl
addb
add
add
pusha
shl
add
inc
mov
rolb
rolb
ret
andb
popa
shl
addl
inc
loop
add
inc
rol
shlb
loop
shl
and
roll
mov
add
inc
mov
add
shlb
andb
add
loop
jecxz
inc
and
add
arpl
pusha
addl
loope
mov
inc
inc
add
loopne
mov
arpl
inc
and
andb
add
mov
mov
add
and
arpl
and
pusha
inc
add
loopne
add
mov
andb
loop
addb
rolb
rol
loopne
mov
shlb
andb
add
add
and
inc
and
and
mov
andb
loope
add
mov
loopne
add
and
inc
shlb
add
add
rol
and
addb
ret
add
mov
loope
popa
rolb
loopne
and
mov
loopne
ret
mov
ret
and
loopne
and
mov
add
and
shlb
rolb
rolb
add
mov
loopne
inc
addl
addb
rolb
mov
add
and
inc
add
inc
mov
and
add
rolb
loopne
add
add
shlb
add
pusha
loop
addl
andb
ret
add
and
add
and
ret
pusha
rol
and
inc
and
inc
pusha
and
and
roll
and
add
loopne
andb
add
andb
inc
pusha
inc
mov
add
and
inc
rol
add
add
and
mov
shlb
and
bound
add
and
mov
loopne
pusha
roll
mov
inc
popa
add
ret
rolb
rolb
mov
inc
loopne
add
ret
pusha
and
add
inc
and
and
pusha
and
mov
inc
add
add
loopne
pusha
roll
add
mov
arpl
inc
and
and
andb
and
add
add
bound
and
rol
pusha
add
ret
mov
and
loopne
loope
add
inc
loopne
pusha
add
mov
inc
and
rolb
add
loopne
and
and
add
add
mov
and
add
pusha
rolb
ret
mov
popa
add
mov
inc
rolb
arpl
add
andb
pusha
addb
andb
add
and
add
mov
add
mov
jecxz
loope
mov
add
arpl
add
inc
mov
rolb
inc
addb
addb
add
add
mov
rolb
mov
loopne
add
add
popa
mov
popa
shl
mov
pusha
arpl
rolb
add
andb
andb
add
rol
mov
loopne
rol
ret
andb
and
andb
shlb
add
mov
andb
mov
rolb
add
add
addb
add
add
loopne
and
mov
ret
andb
add
mov
and
inc
inc
mov
pusha
loopne
popa
add
add
inc
bound
addl
add
inc
pusha
and
add
rolb
add
add
and
loopne
and
add
loopne
shlb
shll
inc
loope
mov
mov
ret
mov
and
loopne
and
jecxz
addl
rolb
add
add
and
add
add
inc
loopne
rolb
add
andb
andb
pusha
addl
loopne
and
inc
add
jecxz
andb
loopne
and
shlb
inc
inc
mov
addb
ret
loopne
and
loopne
add
inc
mov
inc
loop
andb
inc
arpl
andb
inc
andl
andb
mov
loopne
rolb
and
inc
add
pusha
andb
and
andb
inc
loopne
andb
mov
rolb
add
ret
andb
addl
loopne
ret
loopne
addb
and
andb
bound
add
bound
and
add
mov
add
loop
addb
and
jecxz
addl
rol
mov
addb
add
addb
loopne
add
add
rolb
add
loopne
and
mov
and
mov
pusha
addb
pusha
add
inc
bound
pusha
mov
popa
add
and
loopne
add
and
and
inc
add
mov
add
inc
and
pusha
and
jecxz
add
inc
and
inc
ret
shlb
ret
inc
andl
inc
add
loopne
rol
add
rol
bound
addl
add
mov
pusha
addl
add
add
add
loopne
add
pusha
loopne
add
andl
and
rol
addb
arpl
shlb
pusha
mov
mov
add
add
pusha
mov
add
rolb
add
addb
ret
and
add
pusha
inc
rolb
rol
loopne
and
add
add
inc
addl
inc
rolb
and
andl
loopne
shll
and
add
pusha
and
inc
rolb
mov
mov
and
and
mov
pusha
loope
and
popa
loopne
and
popa
add
inc
rol
and
and
addb
bound
popa
pusha
mov
add
inc
add
shlb
add
mov
loopne
inc
add
loope
loop
loope
loopne
mov
mov
add
loopne
add
inc
jecxz
popa
add
shlb
add
and
arpl
ret
andb
add
add
pusha
add
pusha
and
and
inc
inc
andl
loope
and
and
mov
shlb
add
mov
mov
arpl
add
andb
mov
and
loopne
add
loope
loop
and
and
mov
mov
shl
mov
and
pusha
and
arpl
popa
pusha
pusha
and
add
add
mov
loopne
add
and
and
and
ret
inc
add
add
addb
addb
andl
mov
addb
pusha
andb
pusha
addb
inc
roll
addb
addb
and
shll
and
add
mov
loope
and
inc
ret
andb
andb
popa
and
and
and
ret
shlb
ret
and
add
add
inc
andl
andb
add
loop
and
inc
loopne
and
addb
pusha
and
andb
add
mov
add
pusha
inc
add
add
andb
mov
arpl
addb
addb
jecxz
loop
and
ret
inc
ret
rol
mov
add
pusha
and
andb
add
inc
loopne
and
shlb
loopne
inc
and
add
mov
add
pusha
add
roll
add
loopne
add
inc
mov
add
mov
jecxz
ret
add
mov
loopne
arpl
ret
shlb
ret
add
addl
andb
mov
add
loop
mov
inc
bound
add
add
add
add
inc
rolb
and
mov
and
loopne
mov
mov
inc
add
roll
mov
mov
add
loopne
inc
andl
inc
popa
inc
ret
add
andb
and
loopne
pusha
ret
add
mov
roll
and
add
shl
add
andl
add
add
loopne
inc
andb
mov
rolb
and
loopne
mov
inc
pusha
loopne
inc
inc
loopne
rolb
inc
add
loopne
inc
add
and
loopne
shlb
andb
and
inc
add
and
add
and
loop
and
addb
and
add
mov
rolb
inc
pusha
add
pusha
loopne
arpl
ret
and
inc
pusha
loopne
shlb
inc
add
rolb
add
inc
add
mov
addl
jecxz
add
mov
mov
rolb
inc
and
pusha
pusha
add
shlb
arpl
jecxz
and
mov
shlb
ret
and
add
and
and
and
popa
pusha
mov
add
add
jecxz
ret
add
shlb
mov
add
arpl
add
arpl
mov
and
inc
pusha
rolb
roll
add
and
pusha
and
andb
add
pusha
and
mov
mov
inc
inc
arpl
add
mov
ret
and
inc
addb
and
pusha
addb
mov
and
and
mov
and
and
and
pusha
pusha
add
and
inc
and
add
mov
and
add
inc
add
mov
inc
mov
and
rolb
add
jecxz
and
arpl
and
and
and
and
loopne
rolb
and
and
rolb
loopne
add
mov
shlb
andb
and
pusha
add
addl
rolb
pusha
and
mov
inc
addb
and
loope
pusha
pusha
loope
and
inc
pusha
mov
add
loopne
add
loopne
add
inc
pusha
add
inc
add
add
inc
arpl
add
shlb
shlb
inc
addb
shlb
mov
and
inc
and
mov
andb
inc
jecxz
bound
andl
bound
inc
and
add
add
andb
and
addb
add
addl
ret
inc
add
add
ret
andb
and
pusha
mov
and
ret
mov
add
inc
roll
rolb
mov
inc
ret
shl
ret
add
inc
inc
pusha
shlb
inc
loopne
mov
add
add
add
addb
add
shl
shl
mov
and
rolb
loopne
addb
add
add
shlb
loop
mov
and
inc
inc
shl
loopne
and
add
loope
ret
and
add
add
addb
inc
and
mov
ret
loopne
loopne
add
shl
loope
addb
and
mov
pusha
jecxz
ret
inc
add
popa
add
pusha
add
andb
and
arpl
and
inc
add
shlb
bound
and
inc
pusha
loope
ret
add
add
inc
pusha
add
inc
jecxz
jecxz
loop
add
and
inc
add
addb
shl
inc
and
mov
add
jecxz
arpl
ret
inc
rol
inc
and
roll
add
add
addl
inc
roll
add
add
bound
mov
mov
pusha
pusha
mov
andb
and
arpl
loopne
and
ret
shlb
and
loopne
andb
inc
add
mov
inc
loopne
popa
mov
add
add
in
push
jnp
lret
inc
add
add
sub
xor
or
xor
divl
add
pop
cmp
mov
fisttpll
add
add
sahf
aaa
scas
add
add
add
add
add
xor
xchg
les
out
push
sbb
js
out
decb
dec
movsb
stos
lret
in
mov
add
add
mov
mov
push
cli
fadds
inc
lahf
fildl
outsl
ficoms
rcrb
out
outsb
test
add
add
lret
jne
sub
mov
loope
dec
fdivrs
add
ret
lods
hlt
icebp
push
ljmp
pop
jo
push
sbb
add
movsb
add
add
add
in
pop
in
push
mov
inc
movsb
mov
jno
rcr
mov
repz
pop
fcmovnb
jmp
movsb
js
rclb
add
add
mov
mov
out
scas
in
jae
push
pop
cwtl
and
cli
push
or
dec
mov
in
out
dec
mov
mov
call
popa
xchg
inc
fwait
iret
scas
sub
add
add
loopne
fistl
insl
fildll
add
add
push
js
jle
mov
or
xor
and
push
dec
popf
in
scas
addb
pusha
add
add
popa
dec
jne
out
je
add
add
cmpsb
and
add
add
mov
cltd
jb
aas
scas
push
xchg
and
and
add
add
insl
xor
pop
and
inc
test
xchg
fcompl
xchg
mov
push
stos
add
push
addr16
xchg
je
mov
inc
mov
sti
and
add
add
xchg
jp
jg
insb
add
add
fistpl
loopne
ja
dec
mov
pop
repnz
rol
or
add
add
imul
repnz
add
stos
ss
idivl
out
mov
fsubl
out
add
add
add
aad
xchg
nop
and
add
add
add
aam
jecxz
add
add
mov
loop
sbb
in
scas
inc
adc
das
lods
push
or
add
add
lods
or
mov
insl
mov
xor
cli
pusha
add
add
cmp
add
fwait
xchg
into
sbb
pop
fadds
call
test
ffreep
loopne
cmp
pop
sbb
out
lahf
jno
lret
inc
test
shll
dec
mov
fisubs
add
pop
in
push
ss
add
xor
imul
fistps
sbb
mov
push
nop
sbb
imul
push
jnp
leave
negb
xor
mov
mov
sti
mov
aas
xor
add
addb
mov
pop
cs
inc
sbb
enter
icebp
aad
imul
out
shr
sbb
nop
adc
add
lret
push
shr
push
xchg
pop
mov
add
push
cwtl
pusha
add
add
push
jg
sub
add
add
add
add
mov
add
ja
rorl
lahf
iret
add
add
cltd
pop
lock
hlt
jecxz
daa
pop
cmp
xchg
push
inc
mov
mov
add
add
int
jl
fldenv
mov
mov
leave
and
outsl
add
sub
add
add
xor
or
xchg
loopne
add
add
xchg
cmp
sbb
mov
mull
add
add
mov
movsl
jb
jne
mov
mov
and
push
xrelease
jb
sbb
add
add
imulb
les
mov
push
cmpsl
test
and
pop
divl
mov
mov
movsb
cmp
dec
add
add
sbb
aas
pop
dec
ss
mov
mov
mov
jbe
push
js
fimull
add
or
les
mov
add
add
lods
xor
add
add
sbb
js
jmp
es
pop
push
sarb
mov
jg
mov
les
bound
push
cwtl
in
mov
add
add
leave
imul
add
add
add
add
mov
xor
adc
or
xchg
push
push
xchg
and
cmc
mov
iret
mov
add
cmp
push
adc
mov
jle
jecxz
push
hlt
cltd
dec
int
or
add
add
cld
add
add
rcrl
xchg
scas
test
shlb
daa
movsb
or
imul
pop
sub
add
jg
popa
mov
test
mov
add
add
in
add
mov
testb
ret
cld
dec
shrl
dec
bound
aaa
mov
ds
aad
cli
jmp
inc
sub
mov
add
jge
icebp
inc
push
cmp
add
add
add
mov
add
pop
cmpsl
pushfw
pop
cld
mov
lea
test
mov
incb
add
add
mov
test
inc
mov
test
fisttpll
enter
cmp
jle
add
add
inc
pushf
mov
add
add
xabort
movzwl
cmp
jnp
add
add
mov
add
pop
mov
jle
add
add
or
sbb
call
sbb
push
push
push
jno
dec
aam
in
push
int
cmp
cli
mov
or
call
add
add
add
add
sarl
dec
push
add
or
movb
mov
mov
mov
and
repz
mov
xchg
test
sbbl
pop
cmp
push
cld
pusha
add
add
pop
bound
cwtl
into
jbe
push
xchg
cwtl
inc
je
scas
lret
adc
ljmp
outsl
pop
push
aas
mov
add
add
push
xchg
jmp
test
aas
dec
jl
insb
add
add
lods
sbb
add
sbb
sti
out
xlat
dec
outsl
test
decl
add
add
gs
jbe
enter
add
sub
popf
sti
jns
mov
mov
mov
cmp
jnp
sbb
adc
and
add
add
push
loope
stos
jmp
add
out
mov
sbb
jbe
sub
push
insl
daa
aam
adc
mov
push
xchg
dec
sbb
cmpsl
mov
jno
cmp
and
dec
add
nop
push
lret
stc
stos
sub
mov
or
add
add
mov
adc
add
cld
cmp
mov
add
jo
dec
push
sahf
scas
je
icebp
xlat
and
dec
pop
cmp
xchg
add
add
andb
pop
stc
sub
ljmp
add
add
sub
neg
jae
add
add
inc
mov
add
add
aaa
ljmp
sbb
pop
lcall
pop
out
lds
call
and
inc
adc
push
shlb
xchg
cmp
mov
scas
in
xor
mov
add
add
lcall
cld
test
fdivl
loope
setb
fwait
jp
add
add
pusha
mov
or
xor
sub
mov
mov
lret
add
add
jb
fwait
mov
mov
dec
int3
jmp
sarl
dec
movsl
mov
sbb
out
gs
stos
jecxz
orl
cltd
in
sub
ret
jno
repz
leave
or
dec
adc
add
push
dec
add
add
idivb
int3
into
dec
jnp
push
or
add
add
mov
repnz
jnp
fwait
pop
test
jnp
mov
add
add
mov
push
enter
jecxz
loopne
push
fcomps
imul
lret
add
add
add
repnz
ljmp
add
add
mov
icebp
xchg
sub
shrb
add
cmp
cmp
pop
add
cmpb
pushf
inc
push
jecxz
and
rolb
or
add
add
push
stos
mov
pop
cwtl
or
push
sbb
cmp
mov
ret
repz
add
add
test
mov
test
pop
lcall
shrb
cmp
add
mov
pop
loop
orb
cmp
movsl
and
mov
inc
fucom
cmp
add
mov
add
add
add
and
add
add
sbb
sbb
movsb
idiv
sub
popf
lret
xor
pop
and
lcall
adc
shlb
arpl
mov
jg
adc
mov
add
add
shlb
into
pop
fldcw
test
loopne
aam
mov
dec
add
add
daa
loop
xor
jge
rorl
rcr
push
pop
pop
adc
sub
add
add
add
sbbl
add
add
jmp
mov
jmp
mov
int3
adc
push
andl
iret
std
push
inc
cmp
test
testl
jmp
daa
repnz
add
dec
pop
add
add
add
cmpsl
neg
mov
cmp
lods
lods
out
xorb
fwait
or
out
pop
add
add
add
or
aas
arpl
fwait
iret
add
add
add
sub
mov
cmp
pop
dec
adc
fildl
jecxz
push
mov
lea
add
dec
lock
add
add
mov
insb
add
add
jb
push
loop
inc
add
add
lods
rol
enter
add
add
xorb
mov
fs
cmp
ss
cmp
adc
leave
cltd
push
xchg
imul
add
add
mov
add
add
cmp
mov
mov
enter
inc
mov
xchg
mov
push
imul
js
push
data16
mov
and
add
add
push
and
jmp
sbb
stc
cmpsl
xor
js
loopne
ja
mov
ds
add
imul
xor
inc
add
add
and
sbb
mov
imul
pop
lret
pop
hlt
cs
pusha
add
add
pop
cmp
push
outsl
or
mov
aas
pop
adc
jns
call
add
add
fxch
mov
lahf
and
add
mulb
ja
enter
xor
push
and
pushf
add
mov
adc
mov
loop
mov
movsl
cwtl
adc
push
cmc
out
lret
sahf
xor
movsb
decb
add
add
xor
sbb
jnp
call
xchg
dec
dec
fnstsw
mov
jl
jnp
notb
add
adc
add
stos
and
and
cmp
call
dec
mov
dec
jg
cwtl
dec
and
jne
mov
mov
push
lods
or
cmp
xlat
sbb
add
sti
xor
jne
add
icebp
xchg
adc
cmp
hlt
cs
shl
jle
xor
ja
movsl
fidivs
leave
sub
add
add
cwtl
lods
shrl
add
add
mov
inc
add
add
add
fists
xchg
jno
add
add
repz
xor
push
fwait
out
aad
jnp
test
sub
xchg
jle
jp
dec
mov
sti
or
pop
mov
aam
in
fwait
cmp
add
mov
and
mov
pushf
or
add
sub
rep
mov
dec
jae
inc
xorb
sbb
pcmpgtd
sub
add
les
xor
inc
mov
jne
mov
pop
insl
cmp
add
insl
hlt
jbe
inc
add
add
int3
shl
push
mov
icebp
popa
mov
and
add
add
push
adc
cs
push
lock
sub
jae
mov
hlt
loopne
aam
add
popa
mov
testl
xor
sbbb
popa
out
int3
mov
movsb
jg
cmp
sbb
add
mov
add
cltd
push
ds
adc
adc
repz
loopne
movsb
add
in
daa
cmp
sub
add
add
mov
dec
std
and
add
add
iret
sbb
mov
stos
xchg
lods
sub
gs
push
inc
scas
mov
sbb
sbb
jle
mov
add
xor
enter
sbb
sbb
mov
fdivrl
lds
add
xchg
popa
pop
jo
call
add
add
loop
scas
imul
inc
std
xchg
cmpsl
pop
nop
mov
fbld
sbb
and
scas
cmp
aaa
mov
inc
add
add
ss
or
jno
xchg
add
fs
sbb
add
add
cmp
dec
push
test
adcb
arpl
cltd
into
mov
add
add
jmp
add
add
xchg
mov
lret
cmp
xor
ljmp
ss
pop
idivl
xor
mov
add
cs
pop
cld
pop
dec
push
into
aaa
mov
jne
or
jo
mov
jge
sub
add
add
fidivrl
cld
pop
ret
es
ror
out
popa
pop
outsl
ljmp
or
sbb
out
push
or
add
add
cwtl
in
iret
aaa
fs
outsb
popf
lahf
sarb
hlt
mov
inc
int
incl
mov
add
add
out
testb
outsw
push
es
mov
fcomp
repz
adc
mov
jbe
filds
mov
je
pop
dec
dec
add
add
adc
stos
xor
lret
shl
or
movsl
cli
jp
pop
xchg
and
jno
mov
xor
mov
xchg
mov
add
in
fnstcw
ror
test
add
cmp
add
add
sub
add
add
repnz
mov
add
or
or
add
add
adc
scas
add
dec
add
add
jg
fiadds
test
rol
psraw
out
cltd
sbb
out
or
hlt
sti
pop
pop
mov
jbe
sub
dec
mov
xchg
mov
sub
push
das
sahf
mov
nop
pusha
add
add
sarl
adc
or
sbb
push
shlb
add
mov
push
jnp
jmp
add
add
inc
rclb
inc
psrld
and
mov
lret
adc
stos
mov
and
add
add
mov
xchg
xor
dec
sbb
mov
movsl
mov
ljmp
out
pusha
mov
add
add
sub
adc
jmp
loopne
mov
imul
mov
testb
add
add
pusha
add
add
data16
mov
add
add
test
jnp
jae
pop
push
cld
mov
mov
and
add
add
repnz
scas
test
cmc
push
mov
add
add
add
add
dec
adc
mov
add
repz
push
mov
inc
loop
out
mov
cmpsl
outsb
mov
addr16
dec
mov
mov
mov
add
add
cmp
sub
push
jmp
inc
rorb
add
add
sbb
pop
add
add
add
int
icebp
movsb
shll
add
add
roll
push
ror
pop
push
addr16
add
cmp
add
add
or
add
add
ds
out
daa
test
dec
mov
bound
mov
sub
add
add
aam
test
ja
lcall
mov
negb
mov
ret
loop
test
add
mov
in
or
xchg
fists
outsl
imul
sti
dec
aas
add
mov
dec
mov
pop
das
aaa
jnp
mov
or
cmp
lret
add
or
mov
add
add
cmp
ja
push
fnsave
mov
mov
test
pop
push
push
push
add
repz
and
les
jns
xor
negl
sub
es
jmp
and
cmp
add
push
jne
loope
lcall
add
add
movsb
lret
cmc
push
in
mov
nop
inc
bound
add
add
lock
push
sub
mov
push
in
cmpsb
test
rcrl
pcmpgtb
add
add
inc
into
pop
stc
mov
nop
pop
loop
lcall
outsl
movsb
inc
repz
repnz
add
add
mull
sub
or
push
data16
ss
inc
add
add
in
lahf
insl
adc
gs
xchg
in
ds
jb
sub
inc
jno
push
mov
out
loopne
push
stos
xor
add
inc
dec
mov
fistpl
fwait
cmp
jp
cmp
xchg
inc
rclb
les
dec
adc
mov
push
movsb
cld
clc
add
popa
ljmp
add
add
mov
adc
mov
lret
cmc
fucomi
or
xchg
xor
inc
dec
mov
jge
sub
add
fs
out
cmp
js
lret
cmp
pop
pop
divb
or
add
add
push
adc
adc
mov
or
sub
call
cmp
jne
lea
push
push
call
or
mov
shr
mov
add
push
push
push
push
push
call
leave
ret
mov
mov
mov
or
lea
lea
sub
shr
lock
and
ret
mov
add
lea
clc
jmp
ret
push
mov
sub
lea
movl
movl
push
push
push
call
test
jne
push
call
jmp
jne
jno
pushf
inc
lea
cmp
cli
cs
mov
push
mov
dec
mov
add
add
dec
sbb
dec
and
dec
add
add
aam
xchg
lods
lahf
push
clc
call
test
daa
push
mov
jbe
sbb
sub
loope
add
add
mulb
sub
jecxz
outsl
ss
out
stos
movsb
mov
in
cmc
push
dec
int
fildll
jb
jnp
push
int3
push
scas
cmp
das
ret
popa
mov
add
pop
fsubl
add
xchg
fistl
add
leave
dec
push
popa
icebp
xor
insb
mov
add
add
cmp
jp
inc
lods
sarb
xchg
mov
cmc
dec
mov
nop
push
mov
inc
lea
imul
and
add
add
sbb
add
add
dec
sbb
push
cwtl
pop
push
movsb
scas
cmpsb
pop
sbb
addr16
aas
xor
sbb
aaa
xorl
es
lret
add
add
push
mov
loopne
mov
repnz
adc
addr16
add
add
testl
add
adc
xchg
mov
fiaddl
scas
fists
insl
in
popf
xchg
cli
stos
mov
fsubrl
sub
mov
sbbb
test
jne
sbb
sbbb
or
in
push
mov
sbb
mov
add
add
add
bound
xchg
cmp
inc
lea
mov
or
add
add
push
xchg
ficompl
test
inc
ret
dec
jo
xor
fwait
loopne
ret
cli
andl
mov
enter
imul
pop
fmuls
and
je
dec
icebp
clc
leave
jmp
stos
ss
sub
mov
push
or
adc
orb
dec
and
mov
pop
push
pop
ljmp
add
add
out
or
test
pop
popf
xchg
mov
push
ret
dec
loop
popa
movsl
mov
add
add
lods
push
push
mov
add
mov
cmpsl
test
add
sahf
int
pusha
mov
mov
add
add
xor
gs
jb
loopne
in
lds
in
loope
mov
sbb
insb
mov
mov
add
outsl
jne
int3
xchg
cmp
mov
add
jg
vmulpd
pop
int
and
repnz
or
dec
rclb
mov
sub
mov
cmpsb
lret
ljmp
sbb
inc
push
push
mov
mov
add
outsl
or
fsubrp
test
jl
mov
inc
cmp
sbb
dec
mov
and
push
add
and
mov
in
dec
ret
out
inc
test
inc
mov
nop
push
fistpl
dec
test
xchg
xchg
sbb
out
xchg
inc
mov
add
insl
mov
pop
cmp
stc
into
mov
sub
mov
pop
or
add
jecxz
lock
imul
movsl
mov
sbb
sub
cwtl
adcb
scas
jg
pop
loop
jo
fistps
sti
xor
sub
push
jge
adc
add
add
test
ret
lock
fists
adc
and
lods
jle
pushf
mov
mov
add
add
add
rcrl
and
cmp
or
jl
aam
cmp
dec
mov
sbb
loop
out
push
sub
mov
int3
pop
mov
cltd
mov
jg
mov
dec
mov
adcb
out
or
mov
add
jno
add
add
clc
imulb
add
add
movsl
cmp
sub
int3
idivb
add
add
push
mov
test
mov
rcrb
mov
mov
lahf
or
add
add
add
add
aas
dec
iret
push
sarl
add
add
add
add
stos
mov
jmp
cli
pop
cmp
and
jb
lea
iret
jmpw
fcompl
out
dec
fcomps
add
add
and
pop
sub
mov
mov
xchg
dec
mov
ss
add
add
int
fdivrl
add
scas
cwtd
test
sti
lcall
mov
sub
add
add
data16
push
movsl
cmpb
lods
fmull
push
pop
dec
sti
imul
add
roll
clc
lock
ja
sub
add
add
xchg
mov
imul
out
pop
repnz
or
add
add
shlb
repz
pop
movsl
mov
outsb
push
mull
add
add
add
add
std
cmp
jnp
fisttpll
jns
mov
scas
bound
dec
jg
push
mov
mov
int
lret
xor
add
add
pop
jae
cmp
fcmovnu
mov
add
gs
add
add
outsl
divb
mov
mov
add
xorl
out
sbb
iret
mov
and
je
mov
add
add
mov
add
and
add
mov
add
mov
fldenv
add
add
cwtl
inc
mov
jne
adc
sub
cltd
xor
push
rdtsc
stos
mov
dec
push
addr16
jo
push
push
ret
lret
cli
dec
cmp
mov
sub
out
xchg
arpl
add
push
int
outsl
cmp
mov
pop
jg
xchg
and
cmp
mov
out
add
aam
jle
mov
outsl
dec
ror
or
add
and
mov
repnz
push
movsb
dec
push
addr16
mov
mov
add
lcall
andl
sbbl
push
push
ljmp
jno
cmp
mov
push
scas
fisttps
mov
cwtl
xchg
mov
add
add
mov
jb
notb
scas
xor
rorb
pop
xchg
pop
jecxz
add
add
sahf
loope
sti
insb
mov
sti
imul
add
add
add
add
cld
push
mov
nop
push
notb
mov
mov
xchg
stos
dec
das
pop
cmpsl
push
jecxz
add
add
lea
mov
add
adc
fisttpl
add
jo
pop
xchg
push
sub
mov
rcr
std
push
test
fnsave
mov
in
mov
xor
add
adc
sub
add
add
inc
ja
jl
jae
dec
into
in
cmp
mov
mov
xlat
loope
mov
jl
jle
add
add
icebp
and
lahf
dec
add
add
test
je
push
jmp
add
add
jp
add
add
pop
mov
jl
icebp
and
xchg
in
jge
mov
jecxz
fiadds
inc
std
sbb
add
add
imul
call
add
shl
leave
inc
add
add
xchg
ret
paddsb
mov
dec
cmc
cmp
add
add
add
shll
mov
clc
das
dec
xchg
mov
add
sbb
clc
rcrl
adc
push
rcrl
inc
pushf
inc
mov
outsb
sub
inc
add
add
test
add
mov
xchg
mov
add
shrl
add
fldcw
stos
jp
push
xor
mov
xchg
pusha
mov
shll
pop
adc
gs
add
mov
mov
xor
jbe
adc
cmp
shrb
add
push
push
imul
add
and
jnp
idivb
adc
mov
push
sub
js
xchg
mov
mov
push
sub
iret
inc
inc
mov
iret
jge
jg
fstps
sbb
fadds
push
sub
add
add
jns
loope
mov
and
or
add
add
dec
xlat
inc
ja
insl
das
call
add
add
add
and
add
add
daa
push
xchg
add
pop
push
jns
ret
cltd
jle
xchg
sub
add
add
popa
mov
out
sahf
out
sub
ds
dec
add
add
sub
add
cmc
or
mov
mov
or
add
add
loope
cmp
inc
dec
std
ljmp
ss
cmp
mov
sub
mov
dec
mov
and
and
xor
push
lods
leave
out
and
aas
and
jae
into
sbb
mov
push
add
into
push
movsl
inc
pusha
mov
mov
pop
dec
mov
pop
fwait
push
cmc
sub
add
add
add
add
call
stos
mov
jge
stc
sub
add
add
jae
data16
add
in
ds
cmpsl
cmp
sbb
add
add
add
out
inc
movsl
cmp
mov
ja
data16
hlt
ss
mov
xor
mov
jle
loop
mov
jge
cmpsl
movsb
ja
mov
push
jg
mov
or
push
fbld
add
add
cmp
push
out
nop
xlat
scas
in
mov
arpl
add
insl
jbe
mov
inc
mov
fcoml
jge
mov
rcrl
cmp
out
pop
fildl
leave
ret
out
xchg
xor
xlat
sbb
mov
rclb
dec
push
jns
adc
cli
stos
imul
outsl
mov
imul
mov
add
add
ljmp
xchg
or
mov
sbb
inc
add
add
mov
push
inc
out
pusha
add
add
jne
mov
in
add
add
loop
repnz
jle
jnp
mov
add
mov
rcl
mov
lret
push
out
sub
or
movb
fstps
add
add
adc
add
add
xor
cli
mov
ja
pop
das
sub
push
jmp
pop
lock
xchg
rcll
pop
cmpsb
ljmp
xchg
and
mov
orl
and
js
fdivs
inc
jno,pn
mov
repz
push
lret
push
dec
and
xchg
and
imul
add
add
stc
je
add
add
mov
test
arpl
fidivrs
stos
test
and
cltd
push
and
fcom
in
pop
inc
mov
sbb
dec
mov
in
jo
xor
push
ss
iret
outsb
mov
int3
xchg
fldcw
add
mov
xchg
ss
ja
leave
lahf
out
es
iret
mov
roll
add
add
hlt
and
add
add
fdiv
ss
adc
pop
mov
mov
mov
out
mov
add
add
add
fcoms
aas
inc
xor
pop
sub
mov
or
mov
add
cmp
mov
add
add
inc
lcall
or
mov
add
add
add
loop
jae
inc
mov
cmp
cmp
add
add
add
add
loop
and
mov
add
push
dec
xor
ljmp
adc
dec
fwait
or
add
add
mov
mov
out
jecxz
dec
add
add
cmp
inc
add
add
mov
loopne
mov
mov
cs
ja
in
jb
in
inc
push
fists
arpl
add
add
movsb
cmp
add
add
cmc
cmp
fidivs
loopne
ljmp
sarb
cmp
mov
mov
addl
inc
add
add
and
mov
xchg
sbb
ret
jbe
mov
std
pop
cltd
lock
lds
out
stc
dec
add
add
cmp
inc
pop
bound
add
add
mov
sub
add
add
sbb
or
xchg
pop
push
jmp
jecxz
repz
add
add
add
mov
lods
add
push
sub
sti
daa
outsb
ss
ret
repnz
cltd
xor
jnp
add
jecxz
popa
out
test
gs
mov
adc
jle
rorl
sbb
jp
cltd
lret
sub
add
add
test
jns
lds
fdivl
dec
mov
mov
add
or
add
add
fisttpl
add
add
jg
sahf
int3
push
pop
push
jbe
les
cmp
loop
xchg
jno
loop
es
popf
push
inc
add
add
fwait
mov
notb
jnp
sbb
nop
cltd
outsb
movsl
jmp
add
mov
mov
cmp
lock
orb
repz
and
mov
add
add
repz
pop
pop
cld
dec
adc
mov
fists
mov
les
cmp
lods
sub
add
add
mov
popa
or
sub
add
add
sub
in
adc
xchg
mov
inc
jnp
loopne
add
inc
add
add
mov
rcll
push
jbe
mov
lret
ds
call
aam
mov
add
scas
int
movsb
xor
add
add
ds
insl
mov
sub
into
ret
movsl
mov
xchg
pop
imul
xchg
pop
jae
cmp
mov
dec
loopne
jmp
add
xlat
jg
pop
mov
dec
and
add
cmp
cmp
shll
das
mov
jle
mov
push
scas
mov
aam
cmpsl
lds
adc
or
jecxz
mov
jae
int
xchg
xor
rcrl
mov
mov
or
add
mov
dec
add
add
add
stos
in
push
push
fucomip
out
jp
imull
push
add
xchg
sbb
aam
adc
jl
dec
aam
ss
sub
aam
add
add
and
add
add
mov
jns
xchg
stc
in
data16
add
add
dec
ja
stos
arpl
xchg
mov
push
xchg
test
adc
sub
and
add
add
sub
mov
jmp
push
clc
repnz
nop
nop
jae
addr16
add
push
add
clc
repnz
nop
nop
jae
add
add
inc
add
add
icebp
mov
clc
repnz
nop
nop
jae
add
push
jnp
sbb
test
nop
inc
add
add
arpl
add
add
xor
add
xor
clc
repnz
nop
nop
jae
arpl
and
sub
lcall
mov
xchg
ret
add
add
sbb
add
sbb
add
push
mov
xchg
ret
adc
ja
add
cmpsl
push
add
pop
push
mov
xchg
ret
add
add
pop
xor
addr16
clc
repnz
nop
nop
jae
add
add
push
add
push
add
push
add
add
add
jo
add
clc
repnz
nop
nop
jae
orl
add
jp
cwtl
out
pusha
mov
ret
clc
repnz
nop
nop
jae
xchg
add
add
add
push
cmp
pop
or
repnz
nop
nop
jae
add
add
cmpsl
lds
in
leave
nop
jmp
pop
fiadds
sbb
arpl
sub
in
leave
nop
jmp
add
push
inc
aaa
add
add
add
add
add
add
add
clc
repnz
nop
nop
jae
inc
add
sbb
incb
push
sub
jge
clc
repnz
nop
nop
jae
aaa
add
lods
mov
fimuls
clc
repnz
nop
nop
jae
add
add
add
ljmp
add
add
clc
repnz
nop
nop
jae
lcall
arpl
jno
add
sbb
inc
add
call
lock
add
clc
repnz
nop
nop
jae
or
ljmp
lcall
cld
nop
nop
jae
inc
adc
jbe
push
ja
inc
add
loope
jbe
nop
push
mov
leave
nop
jmp
or
add
add
inc
aaa
inc
add
jne
clc
repnz
nop
nop
jae
add
add
cmpl
add
add
pop
push
mov
xchg
ret
add
sbb
add
add
add
add
cli
mov
nop
nop
jae
mov
add
aaa
aaa
ljmp
pop
push
mov
xchg
ret
add
push
add
xchg
add
cmp
mov
je
clc
repnz
nop
nop
jae
add
add
jmp
mov
xchg
ret
add
add
mov
arpl
xchg
push
clc
repnz
nop
nop
jae
push
add
add
aad
add
add
stos
nop
push
mov
leave
nop
jmp
int
lcall
add
xchg
pop
add
nop
push
mov
leave
nop
jmp
adc
add
pushf
xchg
aad
idivb
jmp
jnp
add
jnp
or
lods
add
clc
repnz
nop
nop
jae
dec
add
push
add
jnp
lock
xor
clc
repnz
nop
nop
jae
add
cld
sbb
add
sub
add
dec
cmp
repnz
nop
nop
jae
add
add
add
add
arpl
nop
push
mov
leave
nop
jmp
inc
int
add
add
xchg
and
mov
xchg
ret
add
add
add
add
add
xchg
pop
mov
add
add
repnz
nop
nop
jae
add
jmp
andnps
leave
add
add
add
add
out
add
adc
push
push
mov
xchg
ret
int
push
pushf
add
add
jbe
inc
add
stos
nop
push
mov
leave
nop
jmp
push
lods
add
jmp
cmp
in
mov
dec
nop
push
mov
leave
nop
jmp
mov
out
jmp
push
es
clc
repnz
nop
nop
jae
int
fiadds
add
mov
fistl
in
mov
mov
ja
xchg
add
add
xor
add
mov
push
mov
xchg
ret
call
dec
add
cmp
add
jo
xor
push
clc
repnz
nop
nop
jae
arpl
add
mov
add
clc
repnz
nop
nop
jae
add
add
add
add
test
add
clc
repnz
nop
nop
jae
xchg
lods
pushf
add
add
mov
xchg
ret
add
add
pop
and
mov
push
mov
xchg
ret
int
add
add
dec
cld
add
add
ffreep
call
nop
nop
jae
mov
add
dec
add
add
repnz
nop
nop
jae
add
aaa
cmp
aaa
cmpsb
or
add
add
add
sub
add
add
pop
clc
repnz
nop
nop
jae
add
add
add
pop
ljmp
sbb
push
mov
xchg
ret
cmp
lods
fidivrs
inc
add
std
jne
clc
repnz
nop
nop
jae
add
add
add
add
inc
and
clc
repnz
nop
nop
jae
aaa
ljmp
or
movb
mov
nop
push
mov
leave
nop
jmp
add
out
aaa
add
add
push
sbb
cld
nop
nop
jae
pop
dec
sbb
add
mov
aad
xor
push
mov
xchg
ret
push
add
cld
add
add
sbb
repnz
nop
nop
jae
add
add
add
add
mov
mov
nop
push
mov
leave
nop
jmp
pop
lcall
pop
add
add
lods
add
arpl
aad
add
ja
add
add
add
daa
add
push
mov
xchg
ret
sbb
add
out
and
orl
xchg
sbb
add
repnz
nop
nop
jae
mov
add
jbe
mov
cmpl
nop
push
mov
leave
nop
jmp
aaa
inc
add
add
add
mov
inc
je
nop
push
mov
leave
nop
jmp
add
add
add
nop
push
mov
leave
nop
jmp
add
add
add
inc
jecxz
push
mov
leave
nop
jmp
cmp
add
mov
mov
xchg
ret
add
add
add
add
and
ja
mov
jne
nop
push
mov
leave
nop
jmp
ljmp
lock
repnz
nop
nop
jae
dec
add
add
push
add
push
clc
repnz
nop
nop
jae
dec
jno
push
add
cmpsl
pop
add
sbb
clc
repnz
nop
nop
jae
add
call
add
add
add
add
mov
push
clc
repnz
nop
nop
jae
add
add
pop
or
pushf
add
aad
sarb
js
inc
add
cmp
add
sub
in
insb
add
add
mov
repnz
nop
nop
jae
add
add
jmp
cmp
jg
clc
repnz
nop
nop
jae
aaa
incb
out
cmp
push
cmp
add
add
add
adc
push
mov
leave
nop
jmp
ljmp
add
mov
clc
repnz
nop
nop
jae
or
add
sub
jbe
rcll
repnz
nop
nop
jae
xchg
add
add
add
add
jmp
nop
nop
jae
add
add
inc
xor
outsl
mov
clc
repnz
nop
nop
jae
add
add
add
arpl
add
add
clc
repnz
nop
nop
jae
ja
incb
push
add
and
arpl
repnz
nop
nop
jae
lcall
sbb
rorl
mov
add
clc
repnz
nop
nop
jae
add
push
mov
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
push
add
lods
inc
jbe
add
cld
nop
nop
jae
add
andl
stos
mov
nop
push
mov
leave
nop
jmp
add
add
cmp
cld
ret
mov
push
mov
xchg
ret
add
call
pushf
jp
push
push
mov
xchg
ret
pop
add
add
xchg
or
movsb
push
mov
xchg
ret
cmp
add
lock
add
pop
and
nop
nop
jae
inc
int
or
add
push
jne
push
mov
xchg
ret
fiadds
add
add
push
lock
push
lds
push
mov
xchg
ret
add
add
arpl
mov
push
push
cmp
jbe
or
nop
nop
jae
add
cmp
add
mov
aaa
add
cld
xchg
sahf
sbb
add
nop
jmp
and
xor
lods
add
dec
mov
cld
nop
nop
jae
int
mov
add
aaa
pop
add
cld
nop
nop
jae
add
jmp
aad
add
repnz
out
mov
fistpl
nop
push
mov
leave
nop
jmp
add
push
call
xchg
add
jmp
jp
nop
push
mov
leave
nop
jmp
push
add
add
mov
jne
clc
repnz
nop
nop
jae
jle
add
add
add
cmpsl
jne
clc
repnz
nop
nop
jae
adcl
cmpsb
push
push
and
nop
nop
jae
push
or
lcall
sbb
clc
repnz
nop
nop
jae
pop
add
add
xor
and
add
les
rep
clc
repnz
nop
nop
jae
add
add
mov
repnz
nop
nop
jae
cmpsl
add
add
dec
mov
inc
push
push
mov
xchg
ret
and
jbe
addl
add
cld
nop
nop
jae
add
cmp
add
add
nop
nop
jae
dec
push
sub
lock
xchg
add
or
push
xchg
addl
nop
nop
jae
push
add
dec
add
add
add
ret
clc
repnz
nop
nop
jae
add
lcall
incb
mov
push
mov
xchg
ret
and
fsubrp
jno
add
xchg
mov
je
js
repnz
nop
nop
jae
ja
add
aaa
cld
add
repnz
add
mov
mov
leave
nop
jmp
mov
push
add
out
clc
repnz
nop
nop
jae
add
add
add
repz
clc
repnz
nop
nop
jae
jno
sbb
add
xchg
addl
push
mov
xchg
ret
cmp
add
add
add
add
mov
dec
and
push
mov
xchg
ret
add
push
dec
pop
add
add
movsl
fwait
clc
repnz
nop
nop
jae
out
jle
add
lcall
pop
call
clc
repnz
nop
nop
jae
cmpsl
xchg
add
push
xor
lods
push
insb
mov
bnd
jbe
add
inc
inc
add
cmpsl
jno
push
add
insb
mov
jne
inc
adc
nop
jmp
cmp
add
lock
add
pushf
push
test
nop
push
mov
leave
nop
jmp
add
jbe
add
and
repnz
nop
nop
jae
mov
aaa
aaa
add
or
add
add
add
fildll
add
add
jl
cmp
mov
dec
push
push
mov
xchg
ret
cmpsb
adc
popl
add
out
iret
add
clc
repnz
nop
nop
jae
mov
jbe
add
clc
repnz
nop
nop
jae
add
push
cmp
ljmp
add
add
push
push
mov
xchg
ret
sub
add
mov
add
pop
pop
jnp
sar
cld
nop
nop
jae
sub
add
call
jo
mov
clc
repnz
nop
nop
jae
add
add
add
nop
jmp
ljmp
cmp
mov
repnz
nop
nop
jae
lock
cmp
jle
cld
add
push
notl
clc
repnz
nop
nop
jae
add
aad
add
out
adc
pop
push
mov
xchg
ret
cld
add
add
aad
enter
or
nop
jae
mov
add
and
add
pop
add
dec
cmp
push
mov
leave
nop
jmp
add
lcall
popl
nop
push
mov
leave
nop
jmp
incb
push
cmpsb
mov
inc
add
clc
repnz
nop
nop
jae
ja
add
or
adc
je
clc
repnz
nop
nop
jae
cmp
cmp
sbb
clc
repnz
nop
nop
jae
xchg
pop
add
xchg
int
jmp
push
mov
push
mov
xchg
ret
push
addr16
lcall
jge
mov
clc
repnz
nop
nop
jae
add
xchg
add
add
in
jns
rorl
push
mov
leave
nop
jmp
or
pop
dec
lcall
fwait
push
mov
xchg
ret
add
add
arpl
or
pop
cld
add
push
clc
repnz
nop
nop
jae
add
fiadds
aaa
push
add
push
add
xlat
pushl
clc
repnz
nop
nop
jae
inc
popl
jmp
sbb
clc
repnz
nop
nop
jae
adc
add
xor
pop
mov
nop
push
mov
leave
nop
jmp
push
mov
cmp
add
clc
repnz
nop
nop
jae
add
ljmp
adcl
and
add
jmp
add
pop
push
lock
mov
sbb
repnz
nop
nop
jae
pop
add
mov
cmpsl
add
cld
nop
nop
jae
push
or
jmp
or
pop
mov
fisubl
xchg
ret
xchg
add
or
cmpsb
lods
add
add
fwait
nop
push
mov
leave
nop
jmp
add
lods
add
add
ljmp
push
push
mov
xchg
ret
add
add
push
add
pop
movzwl
clc
repnz
nop
nop
jae
cmpsl
add
inc
cmpsl
cltd
add
nop
push
mov
leave
nop
jmp
sub
fiadds
inc
aad
jle
add
fs
dec
pop
push
mov
xchg
ret
lods
ljmp
add
int
ljmp
inc
add
add
add
aad
add
cmpsb
arpl
repnz
nop
nop
jae
inc
add
push
or
add
cmp
push
mov
xchg
ret
aad
xchg
ja
add
add
pop
mov
clc
repnz
nop
nop
jae
adc
xchg
int
nop
push
mov
leave
nop
jmp
lods
add
and
aad
incb
push
add
mov
add
push
mov
xchg
ret
add
add
inc
add
cmp
lcall
pop
adc
cld
nop
nop
jae
cmp
jbe
cmp
add
call
clc
repnz
nop
nop
jae
add
add
add
ja
xchg
push
mov
incl
jbe
add
add
add
add
add
xor
xor
mov
leave
nop
jmp
or
add
add
mov
xchg
ret
cmp
add
aaa
add
lret
pusha
clc
repnz
nop
nop
jae
add
jno
add
jbe
cmp
or
push
and
mov
leave
nop
jmp
add
dec
jmp
jmp
mov
xchg
ret
add
xchg
add
add
add
lea
push
mov
xchg
ret
add
sub
cmp
add
repnz
mov
push
mov
xchg
ret
cld
add
mov
fisubs
add
out
arpl
nop
nop
jae
lods
push
pushf
arpl
push
decb
add
add
bound
repnz
nop
nop
jae
add
add
xchg
add
roll
repnz
nop
nop
jae
add
repnz
inc
cmc
stos
clc
repnz
nop
nop
jae
mov
add
add
pushf
jno
jmp
clc
repnz
nop
nop
jae
add
lock
dec
add
ljmp
ja
notl
nop
jmp
push
lock
ficomps
mov
mov
add
nop
jmp
ja
pushf
addl
movswl
clc
repnz
nop
nop
jae
add
add
push
lock
inc
rorl
cld
nop
nop
jae
add
out
aaa
mov
pop
sqrtps
repnz
nop
nop
jae
aaa
aaa
push
add
or
int3
test
add
repnz
nop
nop
jae
push
cld
add
jno
shr
clc
repnz
nop
nop
jae
mov
add
add
push
mov
xchg
ret
cmp
addl
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
fistpl
nop
push
mov
leave
nop
jmp
add
pop
add
xchg
jbe
nop
push
mov
leave
nop
jmp
add
cmp
push
jmp
sti
clc
repnz
nop
nop
jae
aad
sbb
add
push
add
jne
clc
repnz
nop
nop
jae
adc
ja
lods
add
push
mov
add
push
add
pop
add
add
add
add
dec
sub
repnz
nop
nop
jae
inc
lods
add
repnz
outsl
xor
clc
repnz
nop
nop
jae
pop
add
push
pop
add
add
add
mov
xchg
ret
or
add
add
ja
add
add
nop
push
mov
leave
nop
jmp
add
add
inc
add
sub
add
repnz
nop
nop
jae
aad
ljmp
ds
push
clc
repnz
nop
nop
jae
dec
add
add
out
cmp
ljmp
clc
repnz
nop
nop
jae
xchg
add
xchg
addl
dec
or
mov
xchg
ret
inc
or
add
lods
add
add
add
add
push
mov
leave
nop
jmp
repnz
repnz
add
add
repnz
nop
nop
jae
aaa
add
push
pushf
add
test
add
add
repnz
nop
nop
jae
add
pop
add
cld
xchg
mov
jge
add
xchg
add
pop
add
inc
add
push
mov
xchg
ret
add
addr16
add
and
clc
repnz
nop
nop
jae
xchg
pop
aaa
add
arpl
push
ret
add
clc
repnz
nop
nop
jae
int
add
fiadds
repnz
adc
cmp
nop
push
mov
leave
nop
jmp
int
cld
dec
add
pusha
mov
push
mov
rol
add
add
testl
add
rorb
mov
add
or
add
add
shr
nop
push
mov
leave
nop
jmp
jmp
xor
add
push
push
orl
jae
incl
xchg
add
add
mov
test
sbb
mov
leave
nop
jmp
add
adc
andnps
cmp
ljmp
mov
sub
scas
adc
clc
repnz
nop
nop
jae
add
pop
call
inc
mov
push
and
aaa
cmp
add
pop
add
inc
scas
add
clc
repnz
nop
nop
jae
addl
add
ljmp
inc
push
mov
xchg
ret
add
aaa
dec
dec
call
add
sbb
repnz
nop
nop
jae
pop
add
push
add
out
dec
xchg
in
fiaddl
add
push
add
add
add
and
jnp
add
aaa
lods
call
push
mov
xchg
ret
inc
add
lcall
out
jmp
lods
and
lcall
add
lods
push
scas
cmpl
nop
push
mov
leave
nop
jmp
out
add
pop
add
inc
add
sbb
clc
repnz
nop
nop
jae
pop
push
add
add
pop
push
mov
xchg
ret
add
mov
add
add
add
add
inc
pop
push
mov
xchg
ret
add
add
add
and
xor
add
sti
cltd
adc
aam
mov
test
mov
icebp
repnz
mov
fwait
push
mov
xchg
ret
push
sub
xor
push
clc
repnz
nop
nop
jae
add
and
jmp
add
cmpsb
icebp
push
clc
repnz
nop
nop
jae
add
pop
push
repnz
add
or
push
pusha
clc
repnz
nop
nop
jae
push
int
lcall
dec
mov
cld
nop
nop
jae
add
cmp
add
add
add
repnz
xor
repnz
nop
nop
jae
pop
add
add
cmp
mov
cld
nop
nop
jae
arpl
aad
add
jbe
leave
push
clc
repnz
nop
nop
jae
repnz
cmpsl
add
adc
and
cld
nop
nop
jae
ljmp
pop
add
pop
call
clc
repnz
nop
nop
jae
push
add
mov
add
xchg
movsb
cwtl
and
cld
nop
nop
jae
pop
add
cld
add
add
push
or
mov
xchg
ret
add
and
add
enter
repnz
nop
nop
jae
jle
add
add
add
jmp
push
mov
xchg
ret
sub
arpl
add
dec
lods
lock
add
cld
nop
nop
jae
or
add
add
adc
add
or
popa
mov
clc
repnz
nop
nop
jae
dec
add
push
jbe
pop
clc
repnz
nop
nop
jae
add
jbe
add
cmp
xchg
repnz
rolb
add
mov
clc
repnz
nop
nop
jae
add
add
sbb
nop
imul
jb
nop
push
mov
leave
nop
jmp
out
add
jno
add
jmp
mov
leave
nop
jmp
pop
add
push
add
inc
push
push
mov
xchg
ret
cmp
mov
incb
cmp
xchg
sbb
add
clc
repnz
nop
nop
jae
lock
cld
add
xchg
jne
clc
repnz
nop
nop
jae
add
lock
call
mov
mov
leave
nop
jmp
add
jnp
add
add
cli
add
jecxz
push
add
add
ljmp
add
pop
aad
sbbl
nop
nop
jae
add
aad
jmp
add
mov
add
cmpsb
aas
sub
nop
push
xor
out
jnp
aaa
add
mov
jecxz
rorl
mov
xchg
ret
xor
lcall
add
xor
push
mov
xchg
ret
jbe
inc
lods
add
xchg
add
insl
mov
clc
repnz
nop
nop
jae
add
add
add
lcall
repnz
nop
nop
jae
add
add
cmpsl
lcall
mov
xchg
ret
add
add
add
add
mov
push
mov
xchg
ret
add
inc
add
or
add
add
lock
add
add
sbb
cmp
cld
nop
nop
jae
add
add
nop
nop
jae
add
add
cmpl
pop
push
mov
xchg
ret
jmp
and
jbe
lods
add
mov
mov
add
add
repnz
nop
nop
jae
xor
add
pop
pop
and
nop
nop
jae
jnp
push
pop
add
inc
push
add
adc
adc
push
mov
leave
nop
jmp
pop
call
sbb
cmp
clc
repnz
nop
nop
jae
ja
add
jle
cmp
add
or
cmp
stos
add
clc
repnz
nop
nop
jae
add
aaa
pop
jno
ljmp
sarb
xor
repnz
nop
nop
jae
add
add
add
jne
clc
repnz
nop
nop
jae
add
add
mov
scas
mov
fildl
ltr
add
add
lret
add
and
mov
xchg
ret
add
add
mov
and
add
add
lcall
repnz
nop
nop
jae
push
xchg
add
or
add
mov
push
mov
xchg
ret
mov
mov
add
fisubrs
cs
das
call
clc
repnz
nop
nop
jae
aaa
add
push
inc
mov
dec
adc
repnz
nop
nop
jae
cmp
add
add
add
arpl
nop
nop
jae
pushf
sbb
sub
add
pushf
add
xchg
inc
add
mov
pop
add
add
add
cli
xorl
nop
jae
jbe
addl
jo
push
mov
ljmp
cld
mov
in
shl
std
add
push
popf
fistpl
push
mov
xchg
ret
lods
add
pop
jno
add
inc
add
add
add
or
inc
add
sub
and
dec
mov
loope
movb
dec
mov
xchg
ret
add
pop
add
add
mov
pop
dec
sub
rcrb
jo
inc
add
aaa
add
push
ljmp
add
clc
repnz
nop
nop
jae
aaa
jnp
push
lods
push
add
add
add
clc
repnz
nop
nop
jae
add
push
lods
add
fstps
repnz
nop
nop
jae
add
jbe
xchg
or
add
ja
dec
mov
nop
push
mov
leave
nop
jmp
add
mov
inc
out
out
lcall
mov
leave
nop
jmp
push
add
add
mov
add
push
mov
xchg
ret
inc
add
lods
or
inc
xor
fistpl
clc
repnz
nop
nop
jae
ja
lods
add
add
or
add
jae
repnz
nop
nop
jae
jno
call
inc
test
call
clc
repnz
nop
nop
jae
add
add
add
cmp
repnz
nop
nop
jae
add
push
add
inc
add
repnz
cmp
mov
inc
add
sub
addr16
add
in
pusha
clc
repnz
nop
nop
jae
out
add
add
mov
jbe
mov
nop
push
mov
leave
nop
jmp
jno
add
jmp
fistpl
clc
repnz
nop
nop
jae
xchg
add
add
in
pushl
clc
repnz
nop
nop
jae
add
add
jle
pushf
add
push
cmp
mov
clc
repnz
nop
nop
jae
inc
mov
push
add
add
daa
mov
clc
repnz
nop
nop
jae
push
add
xor
jmp
rclb
ljmp
ret
add
add
jmp
jmp
push
add
mov
add
add
add
add
cmp
xchg
sti
clc
repnz
nop
nop
jae
xor
add
add
add
sbb
sbb
add
repnz
nop
nop
jae
add
add
add
aad
jno
test
repnz
nop
nop
jae
add
addl
xor
clc
repnz
nop
nop
jae
add
jle
add
jmp
dec
push
clc
repnz
nop
nop
jae
repnz
lods
int
add
arpl
push
pop
add
push
mov
xchg
ret
or
add
fiadds
je
test
arpl
xchg
ret
push
popl
addl
int
add
repnz
nop
nop
jae
add
call
ja
lods
ficompl
cmpw
clc
repnz
nop
nop
jae
repnz
add
sub
repnz
nop
nop
jae
add
cmp
add
add
lahf
sub
clc
repnz
nop
nop
jae
out
sub
pop
lock
pop
mov
repnz
nop
nop
jae
lcall
mov
xchg
and
clc
repnz
nop
nop
jae
dec
dec
add
add
add
add
repnz
nop
nop
jae
add
mov
int
push
add
xchg
fld1
push
mov
xchg
ret
add
add
pop
or
add
dec
add
mov
test
mov
add
add
incb
add
sub
add
add
mov
clc
repnz
nop
nop
jae
cmpsl
pop
add
rclb
add
add
sarl
clc
repnz
nop
nop
jae
push
add
add
inc
out
lods
push
mov
push
mov
xchg
ret
add
add
mov
pop
add
pop
mov
nop
push
mov
leave
nop
jmp
inc
fiadds
ja
add
jno
push
mov
xchg
ret
adc
out
cmp
cmp
or
pushf
add
rcll
repnz
nop
nop
jae
add
add
add
arpl
inc
add
pop
stc
inc
clc
repnz
nop
nop
jae
pop
aad
cld
add
add
xchg
lcall
push
and
cmpl
add
xor
div
nop
push
mov
leave
nop
jmp
add
aaa
inc
ja
add
aaa
add
pushl
nop
push
mov
leave
nop
jmp
cmp
add
add
arpl
jbe
cld
push
mov
xchg
ret
xchg
aaa
add
adc
add
add
add
fildl
mov
xchg
ret
call
add
fisubs
inc
lock
outsl
mov
clc
repnz
nop
nop
jae
pop
sub
sub
add
cmp
ret
jge
push
mov
xchg
ret
push
add
add
mov
pusha
add
clc
repnz
nop
nop
jae
inc
xchg
jmp
lahf
mov
nop
push
mov
leave
nop
jmp
inc
add
pop
cld
int
add
movsb
and
add
add
add
xchg
nop
push
mov
leave
nop
jmp
add
add
or
mov
xchg
ret
cmpsl
add
add
xchg
add
add
clc
repnz
nop
nop
jae
add
jmp
push
clc
repnz
nop
nop
jae
sbb
lods
out
add
jb
push
mov
xchg
ret
add
int
add
aaa
add
add
nop
nop
jae
cmp
mov
add
push
add
mov
clc
repnz
nop
nop
jae
pop
add
add
dec
add
clc
repnz
nop
nop
jae
add
add
add
add
dec
push
mov
xchg
ret
cld
or
lcall
add
mov
clc
repnz
nop
nop
jae
cmpsb
add
add
mov
clc
repnz
nop
nop
jae
cmp
cmp
jno
sub
add
rep
clc
repnz
nop
nop
jae
push
push
lods
add
cmp
add
addb
cmp
ret
lods
add
pushf
jno
add
add
inc
push
mov
xchg
ret
add
repnz
or
add
je
add
add
mov
test
repnz
nop
nop
jae
lcall
jae
nop
push
mov
leave
nop
jmp
jmp
push
int
add
lods
inc
mov
clc
repnz
nop
nop
jae
pop
dec
lods
inc
add
add
add
add
jmp
addl
add
sahf
aaa
and
push
mov
xchg
ret
lods
mov
jno
add
add
cs
repnz
nop
nop
jae
add
push
cmp
jmp
adc
repnz
nop
nop
jae
add
add
add
repnz
repnz
nop
nop
jae
add
add
sbb
add
cmp
popa
clc
repnz
nop
nop
jae
dec
add
sub
cmpsb
int
popl
push
add
push
mov
leave
nop
jmp
lods
jbe
inc
add
add
popa
push
clc
repnz
nop
nop
jae
dec
pushf
lcall
incb
mov
push
mov
clc
add
add
add
dec
aas
out
add
cmp
add
sub
clc
repnz
nop
nop
jae
push
xchg
push
aad
fimuls
add
jl
push
nop
push
mov
leave
nop
jmp
add
xchg
xchg
lods
pop
aad
inc
add
jle
push
push
mov
xchg
ret
andl
add
add
repnz
nop
nop
jae
inc
ficoms
or
data16
clc
repnz
nop
nop
jae
jno
aaa
add
xchg
add
popl
aad
xchg
je
clc
repnz
nop
nop
jae
add
mov
ja
clc
repnz
nop
nop
jae
add
int
int
addr16
int
and
sti
add
clc
repnz
nop
nop
jae
add
xchg
or
add
add
repz
clc
repnz
nop
nop
jae
add
jbe
add
cmp
push
sbb
fld1
clc
repnz
nop
nop
jae
arpl
add
add
popa
push
mov
add
add
add
add
cwtl
add
add
adc
push
clc
repnz
nop
nop
jae
push
inc
incb
add
lods
int
inc
xchg
cmp
rclb
jmp
add
inc
add
add
inc
or
movsl
add
clc
repnz
nop
nop
jae
add
lods
sbb
jnp
int
aas
add
imul
dec
jbe
adc
jbe
addr16
clc
repnz
nop
nop
jae
pushf
cld
push
add
cmp
ljmp
hlt
clc
repnz
nop
nop
jae
jnp
add
add
add
aad
test
repnz
nop
nop
jae
add
jno
addr16
repz
clc
repnz
nop
nop
jae
dec
xchg
sbb
addr16
aaa
add
add
add
jl
xorl
clc
repnz
nop
nop
jae
add
cmp
push
repnz
cld
nop
nop
jae
repnz
add
cmp
jbe
mov
dec
nop
push
mov
leave
nop
jmp
arpl
aaa
push
add
sbb
add
mov
xchg
ret
add
add
add
mov
add
add
add
nop
nop
jae
inc
add
mov
mov
clc
repnz
nop
nop
jae
arpl
add
dec
push
or
add
add
sbb
pop
arpl
add
add
lods
add
gs
repnz
nop
nop
jae
jnp
ljmp
fstl
repnz
nop
nop
jae
add
cmpsl
jnp
add
add
sbb
cmp
mov
xchg
ret
lock
add
jle
jno
aaa
add
rcll
repnz
nop
nop
jae
add
int
aad
add
aaa
add
repnz
nop
nop
jae
add
sbbl
sub
add
add
mov
mov
adc
repz
repnz
nop
nop
jae
add
add
cmpsb
or
add
add
add
clc
repnz
nop
nop
jae
add
mov
add
ret
push
clc
repnz
nop
nop
jae
inc
add
aaa
add
cmpsb
jno
out
add
insl
lods
clc
repnz
nop
nop
jae
add
push
xchg
add
add
loopne
nop
push
mov
leave
nop
jmp
add
add
add
add
aaa
dec
mov
mov
leave
nop
jmp
push
mov
add
add
add
fstp
sbb
push
mov
xchg
ret
xchg
inc
add
or
arpl
add
fildl
mov
leave
nop
jmp
add
xor
dec
pop
add
push
push
push
push
mov
xchg
ret
pop
adc
and
jno
add
add
inc
add
repnz
nop
nop
jae
pop
add
cmpsb
lock
pop
mov
push
mov
xchg
ret
sub
add
add
or
ja
dec
mov
push
mov
xchg
ret
inc
lock
cmp
add
addr16
ret
clc
repnz
nop
nop
jae
or
cmpsb
add
or
cmp
and
inc
xor
clc
repnz
nop
nop
jae
add
add
or
jge
push
mov
xchg
ret
add
xor
mov
add
lods
lods
push
aaa
add
dec
jb
clc
repnz
nop
nop
jae
add
lods
pop
dec
mov
mov
sub
add
repnz
nop
nop
jae
fiadds
arpl
push
push
clc
repnz
nop
nop
jae
pop
add
add
jbe
add
add
lcall
inc
add
add
pop
xchg
add
pushf
add
xor
clc
repnz
nop
nop
jae
jno
xchg
lock
fstl
mov
xchg
ret
add
add
mov
add
sbb
mov
clc
repnz
nop
nop
jae
sub
lods
add
rolb
nop
nop
jae
or
add
fimuls
out
mov
clc
repnz
nop
nop
jae
push
incb
cmp
call
rcll
insb
lea
xchg
ret
add
lods
add
aad
cmp
mov
push
mov
xchg
ret
add
add
inc
pop
add
push
push
mov
xchg
ret
sbb
cmp
push
push
sbb
repnz
nop
nop
jae
add
inc
and
pop
inc
add
add
insb
mov
mov
clc
repnz
nop
nop
jae
add
add
sbb
mov
add
clc
repnz
nop
nop
jae
mov
add
xchg
sbb
cmp
nop
jmp
pop
lods
mov
add
ss
mov
xchg
ret
add
aaa
and
add
jge
pop
adc
outsb
push
inc
add
add
add
jno
sbb
push
clc
repnz
nop
nop
jae
pop
push
xor
add
xchg
push
mov
leave
nop
jmp
add
add
add
lock
shrl
repnz
nop
nop
jae
addl
lcall
repnz
nop
nop
jae
lods
push
dec
push
inc
add
inc
rcl
jg
lcall
push
mov
leave
nop
jmp
add
sbb
inc
xor
mov
clc
repnz
nop
nop
jae
pop
add
cmpsl
push
dec
incb
cmpsl
and
nop
push
mov
leave
nop
jmp
push
add
int
cmpsb
add
cld
nop
nop
jae
lock
add
cmp
add
cmp
clc
repnz
nop
nop
jae
lock
add
repnz
nop
nop
jae
pop
mov
add
add
add
ret
push
mov
xchg
ret
push
dec
xchg
add
add
lods
and
mov
pop
add
cld
nop
nop
jae
cld
add
xchg
add
rolb
repnz
nop
nop
jae
lods
dec
add
out
add
add
pop
nop
push
mov
leave
nop
jmp
inc
add
pushf
add
add
pop
push
nop
push
mov
leave
nop
jmp
add
add
add
add
xchg
adc
add
repnz
nop
nop
jae
push
add
pop
add
add
xchg
mov
nop
push
mov
leave
nop
jmp
add
add
push
inc
clc
scas
pop
nop
push
mov
leave
nop
jmp
addl
call
add
mov
clc
repnz
nop
nop
jae
add
cmpsl
ja
pop
xchg
add
add
push
or
or
add
arpl
and
addr16
pop
cmp
push
nop
push
mov
leave
nop
jmp
dec
or
cmp
ja
ficomps
pop
fwait
push
mov
xchg
ret
add
and
sbbl
jne
add
incb
ja
add
mov
aaa
or
aaa
fistpl
clc
repnz
nop
nop
jae
aaa
aaa
add
inc
incb
pop
add
sti
nop
push
mov
leave
nop
jmp
xor
lods
mov
add
add
xor
cld
nop
nop
jae
ja
or
add
add
pushf
xchg
and
mov
xchg
ret
push
mov
sbb
ficoms
lock
mov
xchg
ret
add
push
call
add
add
call
clc
repnz
nop
nop
jae
cmp
arpl
add
add
xor
push
mov
xchg
ret
and
inc
add
pop
addr16
clc
repnz
nop
nop
jae
fidivs
pop
inc
cmp
pop
lcall
clc
repnz
nop
nop
jae
push
inc
jmp
add
sub
clc
repnz
nop
nop
jae
cmp
add
add
lea
clc
repnz
nop
nop
jae
sbb
lcall
leave
push
mov
xchg
ret
mov
int
cmpsb
arpl
jnp
jns
and
nop
push
mov
leave
nop
jmp
repnz
add
xchg
add
inc
xchg
mov
xchg
ret
add
inc
addl
aaa
add
inc
cli
mov
add
repnz
nop
nop
jae
or
lods
jle
mov
addl
cmp
ret
add
mov
ljmp
add
fwait
push
mov
xchg
ret
sbb
add
add
lock
add
sbbb
jge
nop
push
mov
leave
nop
jmp
pop
cmpsb
add
pop
add
add
inc
add
add
push
pop
clc
repnz
nop
nop
jae
pop
aaa
add
add
cmpsb
add
aaa
push
xchg
push
clc
repnz
nop
nop
jae
inc
or
mov
add
add
add
nop
push
mov
leave
nop
jmp
cmp
add
ficoms
add
add
repnz
nop
nop
jae
jnp
add
add
js
ficoml
clc
repnz
nop
nop
jae
add
aaa
add
out
add
mov
in
imul
nop
push
mov
leave
nop
jmp
add
add
add
jae
call
nop
jae
add
cmp
lock
inc
or
add
fld1
clc
repnz
nop
nop
jae
add
addl
cmp
nop
push
mov
leave
nop
jmp
pop
cmpsb
add
inc
or
inc
jle
push
clc
repnz
nop
nop
jae
or
pop
adc
addr16
mov
nop
nop
jae
or
call
fidivrs
add
mov
push
clc
repnz
nop
nop
jae
inc
cld
add
arpl
add
cld
nop
nop
jae
aad
ljmp
add
fwait
fwait
nop
push
mov
leave
nop
jmp
add
add
add
push
add
lea
nop
push
mov
leave
nop
jmp
add
add
push
add
cmp
clc
repnz
nop
nop
jae
fsubrp
add
add
addr16
ja
pop
pop
push
mov
xchg
ret
xchg
pop
add
arpl
add
or
cld
add
add
clc
repnz
nop
nop
jae
add
add
add
add
add
not
push
mov
xchg
ret
add
add
add
xchg
fs
mov
clc
repnz
nop
nop
jae
repnz
repnz
dec
or
lcall
pop
push
mov
xchg
ret
xor
cmp
add
inc
sbbl
nop
push
mov
leave
nop
jmp
out
and
cmpsb
aaa
orl
add
mov
leave
nop
jmp
push
dec
add
cmpsb
jmp
add
add
xchg
add
pop
pop
xchg
push
jns
inc
in
push
mov
xchg
ret
lods
add
cmpsb
dec
mov
add
test
nop
push
mov
leave
nop
jmp
jbe
sub
add
add
push
rep
clc
repnz
nop
nop
jae
add
add
cmp
ja
aaa
mov
mov
leave
nop
jmp
add
aaa
dec
sbb
sbb
cld
nop
nop
jae
add
add
add
add
add
xor
nop
pop
sub
repnz
nop
nop
jae
incb
or
add
call
clc
repnz
nop
nop
jae
xchg
add
inc
clc
repnz
nop
nop
jae
add
decb
add
add
pusha
nop
push
mov
leave
nop
jmp
sbbl
add
pop
loope
sbb
clc
repnz
nop
nop
jae
add
inc
add
inc
sub
push
add
add
clc
repnz
nop
nop
jae
add
mov
cmp
push
mov
mov
pusha
add
xlat
addl
outsl
add
add
in
push
clc
repnz
nop
nop
jae
add
add
lock
add
add
pop
lret
add
clc
repnz
nop
nop
jae
pushf
out
addl
and
add
jl
add
or
add
aaa
fidivrs
dec
ja
mov
add
shrb
mov
xchg
ret
add
dec
add
or
add
add
fld1
push
mov
xchg
ret
jnp
or
add
add
xor
cld
nop
nop
jae
add
inc
add
add
add
arpl
or
add
add
add
add
jl
push
clc
push
mov
xchg
ret
mov
mov
push
inc
add
or
add
add
test
push
mov
xchg
ret
lock
call
call
fdivs
xor
clc
repnz
nop
nop
jae
aad
lcall
xchg
add
pop
xchg
push
mov
xchg
ret
add
add
cld
add
cmp
ljmp
nop
jae
int
repnz
add
dec
add
jl
and
data16
add
add
mov
add
inc
push
call
cld
nop
nop
jae
add
pop
cld
add
add
lods
inc
and
div
clc
repnz
nop
nop
jae
incb
cmpsl
lock
test
adc
nop
jae
addl
jmp
lods
mov
call
inc
add
ja
ja
int
out
ja
cld
arpl
inc
add
push
mov
xchg
ret
add
add
mov
loopne
pop
clc
repnz
nop
nop
jae
int
add
add
inc
out
sbb
clc
repnz
nop
nop
jae
sub
xchg
repnz
inc
push
mov
clc
repnz
nop
nop
jae
add
jle
add
add
aad
clc
repnz
nop
nop
jae
aaa
inc
pushf
add
add
add
jbe
ljmp
nop
jae
add
add
add
add
add
outsb
in
push
clc
repnz
nop
nop
jae
sbb
pushf
and
add
add
decl
test
sar
call
nop
jmp
add
pop
add
add
add
add
pop
mov
clc
repnz
nop
nop
jae
add
or
add
sahf
add
add
repnz
nop
nop
jae
jnp
add
fnstsw
nop
push
mov
leave
nop
jmp
add
push
add
shll
rclb
outsb
inc
add
subl
test
pop
push
int
out
clc
repnz
nop
nop
jae
dec
and
lods
lods
aad
and
repnz
nop
nop
jae
add
popl
add
pushf
fiadds
inc
add
pop
add
nop
jmp
add
pop
add
lock
jb
add
add
xor
mov
xchg
ret
xchg
cmp
sbb
out
add
jmp
add
adcb
jmp
add
int
push
add
stc
push
mov
in
int
push
stos
mov
pushf
lret
add
inc
add
cltd
add
push
xlat
fwait
push
mov
xchg
ret
add
inc
or
fiadds
add
clc
repnz
nop
nop
jae
or
adc
arpl
add
add
cld
nop
nop
jae
add
mov
cmp
in
push
clc
repnz
nop
nop
jae
mov
lock
add
orl
clc
repnz
nop
nop
jae
add
arpl
sub
add
clc
repnz
nop
nop
jae
out
add
add
aad
pop
fistpl
push
mov
xchg
ret
add
jle
addl
aaa
fdivrs
add
repnz
nop
nop
jae
sub
aaa
push
ljmp
dec
push
clc
repnz
nop
nop
jae
lods
lock
inc
int
add
cld
add
rolb
mov
clc
repnz
nop
nop
jae
add
add
push
add
add
inc
jle
push
lret
add
clc
repnz
nop
nop
jae
lods
lock
add
add
pusha
clc
repnz
nop
nop
jae
dec
jnp
lods
push
add
cld
xchg
inc
or
repnz
nop
nop
jae
add
add
add
add
add
add
add
and
push
mov
xchg
ret
push
add
add
cld
add
add
add
pusha
add
add
adc
clc
repnz
nop
nop
jae
add
lcall
push
clc
repnz
nop
nop
jae
inc
cmp
add
add
int3
icebp
mov
clc
repnz
nop
nop
jae
add
fisubrs
xchg
lods
add
add
sub
add
add
mov
xchg
ret
repnz
pop
add
add
add
dec
cmp
push
mov
leave
nop
jmp
repnz
add
out
lods
add
add
add
lock
cmc
xor
push
mov
xchg
ret
pushf
mov
add
add
out
sti
mov
clc
repnz
nop
nop
jae
inc
xchg
dec
add
xor
jl
add
push
mov
xchg
ret
add
jle
jbe
orl
cs
clc
repnz
nop
nop
jae
ljmp
popl
add
lahf
add
nop
push
mov
leave
nop
jmp
or
inc
ja
add
add
cld
nop
nop
jae
add
jno
push
add
adc
push
adc
insb
outsb
inc
add
int
add
add
ljmp
mov
xchg
ret
add
push
pop
lods
add
cmpsl
pop
add
and
cld
nop
nop
jae
pop
add
add
xchg
lods
push
ja
add
repnz
nop
nop
jae
aad
add
add
add
add
add
jno
loope,pn
decl
lods
lods
aaa
add
lock
cmp
push
movzwl
clc
repnz
nop
nop
jae
add
pop
push
add
mov
je
nop
push
mov
leave
nop
jmp
and
jnp
add
mov
call
inc
add
push
addr16
out
add
lods
add
add
mov
xchg
clc
repnz
nop
nop
jae
push
repnz
xchg
inc
add
sbb
push
mov
xchg
ret
ja
add
add
push
and
add
add
add
cmp
pop
clc
repnz
nop
nop
jae
dec
xchg
push
cmp
call
cmpsb
inc
xlat
push
mov
inc
jne
add
adc
cwtl
cmp
imul
add
add
add
add
repnz
nop
nop
jae
jno
sub
add
push
add
sti
pushl
push
mov
xchg
ret
sbb
xchg
or
mov
xchg
ret
cmpl
mov
mov
in
and
nop
jmp
add
add
jno
pop
add
adc
nop
nop
jae
sbb
out
add
add
arpl
in
leave
nop
jmp
jnp
add
sub
and
aad
xor
mov
nop
push
mov
leave
nop
jmp
add
lock
cld
push
add
mov
clc
repnz
nop
nop
jae
add
add
lods
pop
dec
add
jae
sbb
mov
add
out
inc
add
add
fiadds
add
mov
push
mov
xchg
ret
add
and
add
add
add
dec
out
add
nop
push
mov
leave
nop
jmp
add
add
cmp
pushf
jmp
push
clc
repnz
nop
nop
jae
out
lods
int
add
xor
aaa
or
cli
mov
cld
nop
nop
jae
push
push
jbe
push
add
pop
cmp
dec
mov
clc
repnz
nop
nop
jae
or
adc
add
mov
clc
repnz
nop
nop
jae
dec
add
add
add
add
sbb
add
mov
clc
repnz
nop
nop
jae
jle
cmp
inc
add
or
call
clc
repnz
nop
nop
jae
add
xor
aaa
and
fmull
stos
clc
repnz
nop
nop
jae
pop
jmp
add
cs
popa
push
clc
repnz
nop
nop
jae
out
add
inc
cmp
add
add
add
push
insl
inc
add
add
ja
mov
jno
fsubp
addr16
push
mov
xchg
ret
add
or
or
or
add
lcall
cld
nop
nop
jae
add
incb
arpl
pop
xchg
add
nop
mov
in
das
add
mov
push
add
lds
jecxz
jecxz
pop
call
nop
jmp
sbb
add
mov
nop
push
mov
leave
nop
jmp
add
add
push
cwtl
sarl
clc
repnz
nop
nop
jae
add
inc
call
clc
push
out
push
mov
xchg
ret
add
cmpsl
add
lods
lods
sbb
cmp
clc
repnz
nop
nop
jae
add
dec
add
int
jns
js
clc
repnz
nop
nop
jae
dec
push
add
xchg
mov
test
xlat
clc
repnz
nop
nop
jae
int
or
arpl
push
mov
clc
repnz
nop
nop
jae
fiadds
add
and
mov
push
mov
xchg
ret
add
addr16
jle
fiadds
sub
cld
nop
nop
jae
xor
add
add
add
inc
sub
add
add
xor
mov
clc
repnz
nop
nop
jae
pop
mov
or
add
das
jmp
add
lock
push
adc
jle
addr16
pop
dec
push
mov
xchg
ret
mov
push
add
add
add
add
and
repnz
nop
nop
jae
add
cmpsb
dec
add
inc
add
add
add
xlat
add
nop
push
mov
leave
nop
jmp
add
add
add
lods
push
mov
xchg
ret
add
dec
inc
add
or
xchg
repnz
nop
nop
jae
add
add
ja
push
add
clc
repnz
nop
nop
jae
aad
add
cmp
or
call
push
mov
leave
nop
jmp
and
adcl
add
add
imul
ret
mov
inc
pop
add
mov
mov
mov
or
add
add
push
nop
push
mov
leave
nop
jmp
and
add
add
jle
loopne
je
clc
repnz
nop
nop
jae
add
cmp
add
add
cmp
cld
nop
nop
jae
add
add
add
popl
inc
sub
in
push
clc
repnz
nop
nop
jae
cmp
add
add
or
jmp
clc
repnz
nop
nop
jae
lods
aad
orl
pop
clc
repnz
nop
nop
jae
cmpsl
add
inc
pushf
aad
add
pop
add
mov
clc
repnz
nop
nop
jae
add
push
add
add
call
nop
push
mov
leave
nop
jmp
add
cmp
add
dec
inc
mov
nop
push
mov
leave
nop
jmp
add
pushf
push
cmp
jno
mov
out
cmpsb
fs
mov
push
clc
repnz
nop
nop
jae
add
pop
add
sbb
add
sub
add
add
repnz
nop
nop
jae
inc
push
add
add
aas
push
push
mov
xchg
ret
add
add
add
add
add
repz
mov
xchg
ret
or
mov
add
add
mov
clc
repnz
nop
nop
jae
jbe
pop
xchg
sbb
add
mov
add
clc
repnz
nop
nop
jae
pop
inc
add
out
add
sub
xor
jmp
clc
repnz
nop
nop
jae
add
add
cmp
add
add
add
add
aaa
add
add
lcall
push
clc
repnz
nop
nop
jae
add
add
add
add
addb
push
clc
repnz
nop
nop
jae
add
jle
mov
cmpl
clc
repnz
nop
nop
jae
call
lods
sbb
push
mov
xchg
ret
add
add
repnz
add
add
cld
nop
nop
jae
aaa
push
and
inc
aaa
and
xchg
add
and
nop
mov
clc
repnz
nop
nop
jae
push
inc
lcall
xor
nop
push
mov
leave
nop
jmp
lock
add
add
add
clc
repnz
nop
nop
jae
jmp
ljmp
push
mov
leave
nop
jmp
sbbl
aam
fld1
clc
repnz
nop
nop
jae
cmp
lods
add
add
ficomps
push
xor
add
and
movswl
nop
push
mov
leave
nop
jmp
incb
add
lcall
nop
nop
jae
add
add
fimuls
xchg
lss
clc
repnz
nop
nop
jae
pushf
add
lcall
nop
nop
jae
inc
add
pop
ja
push
add
or
push
clc
repnz
nop
nop
jae
sub
add
add
push
add
dec
pop
nop
push
mov
leave
nop
jmp
aaa
add
add
and
add
add
mov
cld
nop
nop
jae
add
push
ficomps
cmp
push
lods
pop
fsubrl
incl
add
repnz
xchg
inc
add
add
faddl
push
add
pop
jle
lods
add
dec
add
repnz
in
test
cmc
clc
repnz
nop
nop
jae
repnz
add
add
pcmpgtb
jo
add
add
out
add
add
arpl
xor
clc
repnz
nop
nop
jae
add
jb
mov
in
imul
add
pop
jle
add
cmpsb
add
mov
xchg
nop
nop
jae
add
decb
popl
addl
clc
repnz
nop
nop
jae
add
or
add
add
clc
repnz
nop
nop
jae
push
mov
aaa
cld
nop
push
mov
leave
nop
jmp
add
add
add
xchg
shrl
xchg
ret
jbe
add
push
lcall
repnz
test
clc
repnz
nop
nop
jae
cmp
add
xor
clc
repnz
nop
nop
jae
decb
inc
lcall
add
add
add
clc
repnz
nop
nop
jae
aaa
sbb
inc
push
in
add
clc
repnz
nop
nop
jae
add
push
add
add
fistpl
clc
repnz
nop
nop
jae
add
push
add
ljmp
add
xchg
inc
dec
add
jo
dec
add
aaa
xor
loopne
jno
adc
push
mov
add
mov
add
add
std
retw
mov
mov
mov
add
add
inc
lret
mov
mov
xchg
xor
add
add
daa
stc
cmp
call
jg
lret
xlat
fwait
add
add
add
enter
insb
add
add
mov
inc
ja
pop
xchg
nop
lret
jge
mov
inc
pushf
insl
test
pop
xor
js
jae
and
pop
dec
sub
add
add
in
dec
add
add
sbb
fisttpll
inc
mov
cmpb
outsl
mov
xor
cltd
xor
xor
in
ss
add
stos
fcompl
shll
sahf
pusha
add
add
pop
xchg
dec
jo
popf
adc
mov
mov
stc
icebp
xchg
lcall
add
test
add
add
rorb
movsb
xor
shr
sub
push
jno
xchg
xchg
xchg
mov
inc
loopne
pop
fcmovu
popf
shl
add
or
add
add
sub
dec
mov
int3
pop
mov
pop
xchg
lea
mov
mov
ja
rcl
xor
sahf
test
lret
cwtl
lods
lahf
sub
add
add
cmc
arpl
cmp
mov
adcl
aam
mov
add
add
pop
call
xchg
lret
out
sti
adc
nop
push
lea
pop
jns
aam
dec
bound
sub
add
add
add
add
mov
pusha
add
add
in
xor
rorl
mov
mov
scas
adc
hlt
cwtl
adc
xchg
xchg
mov
xorl
add
add
imul
icebp
insl
popa
pop
mov
dec
roll
repz
sti
in
jae
adcl
fidivrs
cli
dec
add
add
inc
adc
mov
cmc
mov
cmpsb
jns
jecxz
inc
rcrb
test
add
mov
sete
push
popa
mov
int3
inc
repnz
push
xchg
stos
and
pop
jg
std
cwtl
scas
sbb
pop
sub
shrb
add
mov
push
sub
xor
je
mov
shl
into
dec
insl
cwtl
test
call
or
add
add
in
stos
rcl
fwait
mov
movsl
inc
or
add
add
in
jecxz
arpl
dec
xchg
pop
pop
rorb
xchg
repz
mov
out
push
sbb
inc
pop
popf
fwait
arpl
adc
dec
add
jns
out
cltd
pop
aas
push
pop
mov
xor
leave
jnp
mov
test
int3
xchg
divb
lcall
lcall
jmp
out
xor
push
leave
test
xor
pop
fcoms
pop
mov
fstp
push
xor
mov
cmp
push
arpl
mov
add
call
sbb
add
add
gs
or
add
mov
cmp
lea
movsl
movsl
mov
xchg
faddl
mov
jbe
stos
addr16
repz
and
add
add
add
lods
xor
rcl
icebp
and
cmp
add
jmp
lods
aad
cwtl
mov
out
addr16
ficompl
add
hlt
fistpl
cmp
addr16
add
add
adc
stc
sub
jmp
mov
pop
stos
push
es
mov
jg
xor
std
inc
dec
sti
adc
sub
adcb
nop
xor
mov
cld
mov
pop
out
std
and
cmpb
add
rcl
and
add
add
subl
add
lock
aam
add
add
ds
push
rclb
mov
adc
add
jg
add
add
add
dec
cmpsb
xorb
adc
push
xchg
in
stos
out
mov
push
lahf
push
testb
xor
pop
fsubrs
lahf
dec
add
add
jbe
movsb
sub
jmp
idivl
inc
push
pop
inc
mov
arpl
lods
inc
jne
mov
cmpsl
mov
sbb
jbe
inc
adc
mov
loop
icebp
test
jns
adc
inc
xchg
ljmp
add
xchg
mov
cli
mov
cmpsl
sub
push
mov
clc
mov
add
pop
ljmp
jo
sti
jne
leave
fisubrl
lock
neg
mov
add
add
aad
out
int
xchg
inc
add
add
or
add
add
mov
push
dec
cmp
pop
add
add
add
lahf
jbe
stos
xchg
cmp
add
add
out
mov
loope
cltd
jmp
xchg
movsb
or
mov
xor
cli
mov
xchg
or
add
add
and
out
aam
mov
mov
mov
inc
std
cmp
fimull
or
lcall
loope
dec
popa
icebp
das
mov
adc
add
add
add
arpl
mov
mov
inc
mov
pop
imul
je
jb
mov
mulb
or
icebp
xlat
jle
out
push
mov
lods
pop
pop
mov
add
mov
clc
push
sahf
mov
dec
add
add
mov
xchg
mov
xchg
out
lahf
in
rorb
cmc
xor
xchg
in
out
out
adc
xor
test
ljmp
jge
mov
cmp
push
call
mov
pop
pop
mov
repz
cltd
test
adc
mov
sub
add
add
and
pop
cmp
dec
or
ds
repz
jo
sub
add
add
cmc
cmc
shrb
rclb
adc
cmc
popa
sub
sarl
sbb
add
add
shll
stc
and
outsb
mov
mov
and
je
nop
pop
dec
add
add
outsl
dec
sub
stc
mov
movsb
jno
fcomi
jnp
mov
or
inc
mov
xchg
dec
ljmp
fsts
stos
push
ret
aam
ret
enter
jmp
xlat
inc
dec
es
or
inc
nop
mov
lahf
les
dec
jmp
mov
push
mov
icebp
sub
les
or
push
mov
push
jmp
xor
pop
sub
add
add
pop
adc
add
add
dec
leave
pop
inc
insl
sub
xchg
aam
mov
ret
sub
inc
jne
sub
arpl
mov
inc
mov
cmpsb
cmp
sahf
out
lret
dec
in
lock
mulb
add
add
cmp
add
add
aam
xchg
inc
lods
sbb
shrb
dec
clc
or
outsl
xlat
inc
or
add
add
mov
jno
data16
jp
outsl
xor
cmp
jbe
ret
js
jnp
aad
mov
mov
into
pop
ljmp
mov
enter
add
push
imul
or
mov
mov
aas
xor
jns
mov
pop
stc
dec
popf
ds
dec
dec
cmp
rolb
in
mov
jo
int3
jb
aas
mov
stos
movsl
ss
inc
add
add
add
into
adc
ret
and
fistps
add
push
push
js
jbe
rcr
icebp
mov
mov
jne
iret
xchg
mov
jb
daa
add
sub
aas
test
iret
cld
or
dec
shlb
add
add
mov
cmc
lods
xor
mov
add
add
add
jge
or
ret
fimuls
xchg
and
add
add
popf
repnz
mov
insb
add
add
js
cmp
shrl
add
add
adc
mov
lret
mov
outsl
outsl
cvtpi2ps
and
xor
lods
cmp
mov
mov
stos
ret
push
sbb
insl
xchg
leave
hlt
jns,pt
testb
add
add
pop
shr
mov
imul
add
fstpl
shll
fstps
cli
icebp
lret
sub
add
add
and
add
add
pop
test
nop
rcll
push
fisttps
jmp
mov
add
add
aaa
lret
imul
inc
jp
or
add
dec
mov
push
cmp
shlb
add
cmp
mov
sarl
test
pop
pop
push
sbb
pop
push
or
add
lcall
cmpl
bound
push
jecxz
jg
std
scas
ljmp
xchg
movsl
jno
lea
cmpsb
iret
dec
hlt
push
shll
mov
xchg
mov
sub
cltd
mov
inc
adc
mov
fcmovnu
shr
push
jne
jp
pop
and
sbb
mov
sub
add
add
movsl
fldl
xchg
jo
jl
pop
sub
add
add
dec
add
add
fwait
jecxz
xorl
cmc
xor
push
mov
mov
js
jge
or
cmc
jge
icebp
pop
ret
loopne
fwait
ret
add
add
add
imul
cmpl
push
mul
jno
add
add
movsb
aas
cmpsb
test
test
sbb
mov
fs
xor
add
add
sbb
sbb
sbb
cld
dec
mov
bsr
loope
jae
icebp
pop
arpl
mov
sub
out
inc
mov
insb
mov
pushf
mov
add
icebp
clc
jnp
lods
add
add
dec
js
fwait
mov
fsubs
or
loop
pop
mov
jmp
add
add
movsb
xor
scas
jecxz
pop
xchg
adc
std
sarb
mov
dec
cmp
sbb
in
cmpsb
add
add
add
test
jbe
xchg
paddd
sbb
and
mov
inc
add
add
ss
sub
out
sbb
mov
fcomp
push
xor
xchg
sbb
mov
add
jb
shrb
jp
das
insb
add
add
mov
add
add
push
pop
mov
add
add
hlt
add
ret
mov
add
add
lcall
mov
cld
daa
xor
mov
jp
add
jp
sahf
insl
sti
inc
pop
xor
xchg
push
hlt
jle
lock
out
pusha
add
add
aas
lret
or
add
add
iret
imul
mov
ljmp
sub
pop
push
aad
loop
fisubs
sti
inc
mov
mov
sti
fstpl
pop
test
add
mov
ljmp
insb
mov
scas
testl
cmp
arpl
xor
add
rorb
inc
mov
mov
clc
ret
mov
add
push
test
gs
mov
daa
sub
push
mov
call
mov
mov
or
sahf
push
shrb
add
add
flds
add
enter
dec
push
loopne
dec
out
mov
push
mov
mov
jg
mov
xchg
mov
pushf
xchg
arpl
iret
stos
xor
jmp
lds
mov
cmp
xchg
outsb
xchg
lea
mov
xor
push
and
mov
aaa
lret
xor
and
nop
push
bound
daa
shrl
add
add
jb
adc
mov
add
leave
std
sub
sub
jo
ss
daa
rorb
add
add
push
addb
add
or
add
add
pop
imul
and
add
insb
mov
dec
loopne
in
mov
jbe
popl
cwtl
lock
push
xlat
jecxz,pn
jnp
outsl
mov
mov
enter
pop
cmp
fcmovu
fwait
pushf
mov
mov
pop
and
mov
push
inc
add
add
push
ret
fbld
add
sbb
scas
cltd
hlt
jnp
loop
cli
pop
int
sub
add
add
jge
add
add
mov
test
js
add
pop
mov
add
mov
add
add
popf
aas
sbb
inc
mov
push
sbbl
cmpsb
xchg
repnz
jne
ffreep
jge
fisubs
add
add
pop
mov
loop
test
mov
inc
mov
gs
loop
sub
shlb
add
add
in
jle
add
mov
jno
dec
movsl
mov
popa
mov
jg
pop
sub
add
add
scas
arpl
xchg
jmp
add
add
scas
shl
add
pop
int
xchg
xchg
mov
adc
das
repnz
cmp
mov
jg
sub
pop
mov
dec
push
hlt
fsubrl
add
notl
test
add
add
add
add
fisttpl
mov
dec
scas
int3
shrb
inc
add
add
lret
loopne
cmpsb
inc
cwtl
addr16
dec
push
mov
dec
mov
push
xchg
mov
lahf
mov
daa
enter
mov
add
cmpl
clc
aas
lret
or
add
add
push
in
lea
pop
pop
jo
or
leave
xorb
mov
mov
arpl
stos
cmp
sub
add
add
pop
pop
dec
and
mov
and
sbb
pop
sub
inc
js
dec
jle
shr
faddp
icebp
xor
push
pop
push
cmp
sbb
cld
sarb
add
add
xchg
pusha
mov
jne
shl
xlat
push
mov
loop
adc
add
add
add
jg
clc
mov
add
add
add
pop
or
xor
aad
xchg
outsb
pop
or
add
add
pop
xchg
clc
push
out
and
das
fsubs
orb
xchg
incb
or
add
add
out
fistpll
js
or
sahf
in
cltd
int
sub
inc
mov
mov
push
icebp
mov
add
add
out
dec
notl
adc
cmp
cmp
push
xor
push
and
fcmovnu
rcrl
mov
cmp
insl
push
mov
add
jl
cmp
js
pop
std
pushf
inc
clc
scas
or
jbe
aaa
fnsave
aaa
bnd
popa
inc
insl
or
add
add
adc
add
add
add
add
mov
xchg
aas
mov
ret
int3
lret
xchg
bound
call
jnp
add
add
and
orl
imul
add
jg
mov
cwtl
aam
int
cmpsb
loope
clc
fisubl
icebp
hlt
scas
fldenv
andb
mov
xor
add
add
inc
ret
movsb
negl
fistl
enter
and
insl
popf
stos
adc
out
push
add
xor
add
sub
lods
sub
add
add
lcall
mov
mov
fists
int3
movsl
cs
nop
mov
add
ret
dec
aaa
pop
jns
xchg
add
add
add
adc
sbb
ret
int3
in
inc
mov
add
add
mov
in
xchg
sub
sub
push
in
mov
add
ffree
fdivs
out
sub
sub
add
add
sub
add
add
aas
push
and
add
add
and
add
add
stos
stc
adc
sbb
dec
xchg
call
add
sub
sbb
mov
or
add
les
pop
mov
mov
add
add
push
test
cmp
xor
pop
push
lcall
inc
add
add
push
mov
cmp
repz
lahf
jecxz
mov
fisubrl
jbe
sar
andl
mov
dec
mov
push
and
loop
imul
orl
pop
inc
dec
pop
daa
adc
cmpsl
aad
cmp
aam
add
add
fistps
add
add
paddd
add
add
mov
jnp
stc
push
cmpsl
pop
and
lods
cmpb
les
or
add
mov
mov
add
add
add
xchg
mov
mov
mov
pop
add
add
lcall
add
jbe
pusha
add
add
pushl
cmpsl
leave
pop
xchg
shll
hlt
cltd
lock
bound
cli
mov
test
add
add
add
fcomp
gs
lret
ds
xor
add
add
cmpsb
into
jbe
stos
inc
add
add
jge
push
mov
mov
jns
mov
xor
inc
add
add
js
mov
mov
xchg
sub
add
add
and
mov
add
add
sub
jns
stc
push
xchg
mov
rol
sub
mov
inc
cmp
mov
push
inc
mov
cltd
and
in
pusha
add
add
cmc
jp
cmp
mov
repz
arpl
test
pop
inc
add
add
jp
add
add
add
xor
inc
add
add
dec
add
add
mov
add
add
gs
cli
mov
add
add
push
mov
sbb
std
and
add
add
stos
jo
mov
jl
ret
movaps
add
add
bound
lock
jmp
popf
mov
popf
sub
inc
jb
mov
cmc
pop
movsl
push
lahf
stc
or
add
add
loope
call
add
sub
jp
push
mov
call
add
sbb
or
add
add
std
mov
es
in
jno
repz
call
or
add
add
push
lahf
xchg
rclb
push
sub
add
test
sub
out
dec
pop
mov
mov
mov
test
pop
pop
in
sub
add
add
cmp
hlt
js
pushf
or
add
aaa
sub
adc
push
stos
or
add
mov
jns
xor
add
cmc
sub
aam
mov
in
lea
sub
xchg
pop
fld
std
stc
cmc
cli
mov
add
add
add
lea
mov
jbe
stos
je
in
fimull
mov
add
cmp
mov
inc
and
sbb
cld
pop
xor
call
aad
movsb
mov
pop
out
and
add
add
add
add
push
bound
in
sub
movsb
xchg
add
add
sbb
es
sub
enter
mov
inc
stc
and
rcrl
jecxz
jl
jb
xchg
clc
pushf
push
add
in
cmp
and
pop
and
lret
stc
sahf
out
and
add
add
xchg
in
rorl
loop
mov
jo
ror
push
xchg
and
or
adc
add
addl
add
mov
scas
js
div
imul
aas
push
in
push
xor
mov
add
add
mov
imul
mov
add
pop
stos
lods
or
lods
jb
fdivr
gs
mov
jns
mov
sahf
inc
dec
mov
lahf
mov
push
insb
add
add
shl
push
xchg
sub
add
add
mov
js
lcall
jbe
push
cmp
out
mov
in
jo
jne
mov
ret
jg
xchg
sbb
mov
xor
pop
or
mov
int
inc
pushf
test
aas
adc
arpl
add
add
das
or
add
add
stc
jg
xor
jnp
mov
xorb
pusha
add
add
pop
lods
mov
insl
mov
pop
jnp
dec
add
add
push
xor
add
stc
divl
dec
cli
add
adc
gs
dec
loop
and
add
dec
add
add
out
push
nop
mov
cmp
repz
add
add
imul
add
push
xor
mov
insb
add
add
loop
mov
xchg
jg
add
xor
xchg
test
arpl
and
add
add
vshufps
pop
xchg
stos
adc
mov
sub
lock
mov
cmp
pop
inc
add
add
fstpt
mov
add
add
je
xor
add
add
sbb
cmp
mov
or
mov
mov
shll
les
xchg
inc
add
add
jno
scas
sub
adc
int
mov
push
stc
cmpxchg
popf
inc
and
add
add
add
push
xchg
outsb
dec
mov
pushf
mov
add
inc
add
add
mov
mov
jge
mov
add
js
xor
in
ret
pop
nop
mov
mov
dec
pop
scas
leave
shlb
sbb
or
adc
xlat
addl
or
shll
jp
cmp
add
add
dec
mov
pop
mov
jp
adc
les
lock
ljmp
pop
mov
or
add
add
xchg
mov
nop
inc
or
scas
ja
add
fs
xchg
ret
ds
in
int
dec
mov
sbb
add
add
repz
add
add
test
pop
cli
and
add
add
adc
or
jge
mov
iret
pop
jmp
shlb
cmp
mov
sub
std
outsl
pop
mov
inc
add
add
sbb
rorl
lcall
fmul
jmp
push
inc
add
add
movsl
dec
mov
pop
adc
lods
movsb
fnstcw
dec
call
add
add
dec
popa
push
inc
adc
jle
mov
mov
jge
lock
and
add
add
cmp
inc
add
add
test
sti
dec
cs
inc
idivb
stc
inc
rsm
mov
push
push
rol
and
add
add
dec
lcall
push
push
dec
pop
fdivrl
fs
push
ljmp
addl
out
loopne
leave
outsl
cmp
xchg
jg
jnp
mov
std
aas
nop
test
mov
xchg
stos
or
int
jge
dec
add
add
test
iret
adc
add
add
jns
shl
pop
xchg
mov
ret
stos
sbb
jo
push
hlt
adc
dec
mov
dec
outsb
movsl
push
out
pop
and
hlt
pavgb
cs
enter
xchg
xor
xchg
sahf
int3
daa
in
rolb
add
add
add
sub
or
add
add
sti
ja
daa
mov
and
subl
mov
jecxz
xchg
hlt
incl
std
mov
jns
xchg
andl
adc
ljmp
add
ss
inc
jge
xchg
lea
icebp
jge
add
outsb
outsb
out
lods
pop
jle
jbe,pt
mull
bound
add
xchg
loope
into
es
les
add
pusha
add
add
movsb
call
outsb
push
xchg
adcb
jne
adc
add
js
lods
mov
mov
add
add
add
test
pop
imull
imul
xlat
jecxz
fsubp
push
std
adc
pusha
add
add
out
push
jo
call
or
icebp
test
adc
cmpsb
add
add
add
jp
cmp
jb
loope
fildl
add
add
xchg
cmp
sarl
inc
add
add
adc
or
cmpsb
push
push
and
js
mov
fisubrl
sbb
add
stc
cmp
imul
xchg
xchg
popf
es
int3
mov
cs
push
and
mov
add
add
jb
mov
lahf
xor
push
imul
fadd
rolb
add
add
cmpsl
pop
push
vpsllw
ss
add
fidivrl
add
add
cmp
popf
push
push
hlt
adc
mov
js
pop
jne
jbe
call
xlat
or
lahf
repz
jl
pop
lock
decb
add
cwtl
inc
mov
push
or
stos
add
add
add
add
out
fcmovne
or
mov
daa
jae
sbbl
jle
push
jecxz
scas
popa
sub
addr16
or
mov
add
add
add
add
pop
jle
nop
jl
sti
cmp
stos
push
adc
shlb
add
mov
inc
add
add
shl
int3
es
or
dec
ss
in
popa
bound
add
insb
add
add
dec
mov
mov
jge
pop
les
and
add
add
les
add
cmpsl
ret
mov
xchg
adc
fistpll
sar
mov
cmp
hlt
inc
add
add
xchg
dec
scas
int3
sbb
ja
cwtl
xchg
xchg
mov
mov
adc
aad
and
add
add
je
xor
xchg
mov
add
add
xorl
xor
ja
add
add
jecxz
push
insl
jge
mov
test
or
xchg
movsl
mov
scas
inc
mov
mov
fisubs
call
xchg
cltd
shlb
add
mov
add
add
cmp
push
negl
and
out
iret
sub
add
add
add
add
add
add
sub
add
add
imul
inc
movsw
add
js
sub
cmp
add
add
cmp
mov
hlt
mov
sub
out
test
je
lods
negb
xadd
add
sbb
dec
daa
fcomp
cmp
test
add
mov
nop
mov
movsl
mov
add
add
pusha
mov
mov
ja
stos
fsubs
add
add
push
jp
mov
pop
int3
andl
pushf
sbb
pusha
add
add
push
hlt
fdiv
test
add
push
sti
jmp
dec
mov
fcoml
ss
mov
cmp
adc
add
add
mov
sub
cmpsb
outsb
sbb
clc
lahf
into
fistl
adc
mov
or
add
add
xor
frstor
add
fnsave
push
lahf
xor
dec
mov
aas
rcrl
pop
in
mov
and
xchg
dec
mov
aad
outsl
mov
cwtl
repz
sbb
add
add
repz
push
call
out
inc
add
add
dec
pop
adcl
add
xchg
mov
add
add
sbb
mov
lds
push
stos
cld
mov
add
xor
xchg
xchg
add
jl
movl
xchg
test
xor
shlb
xchg
ja
mov
les
ret
add
sub
mulb
loope
dec
push
rclb
or
add
mov
add
and
sub
add
add
mov
jmp
add
or
or
lds
inc
xor
or
sbb
mov
stos
loope
sbb
lahf
sbb
sub
in
out
lock
pop
mov
mov
xchg
add
add
rorb
sbb
bound
cmp
xlat
xor
aaa
and
add
cmpsl
and
out
aam
mov
arpl
jo
fldcw
add
add
and
inc
stos
cli
fidivs
add
insb
mov
bound
jae
in
movsb
sbb
push
jl
mov
enter
loope
sbb
lahf
andl
cmp
jle
inc
xchg
jmp
add
lds
or
stos
test
add
add
push
in
into
push
or
add
add
addr16
pop
push
dec
jle
mov
loope
pop
cmp
lea
xchg
lods
data16
je
in
rcll
repnz
jo
dec
sbb
fwait
icebp
sub
out
dec
pusha
mov
jnp
lea
inc
add
add
loop
dec
or
adc
insl
in
es
mov
fldenv
fdivs
ret
or
or
pop
mov
inc
mov
daa
imul
push
cwtl
or
xchg
inc
mov
add
add
jl
jl
xchg
in
xchg
and
push
fildll
mov
sbb
or
add
adc
cld
xorb
mov
and
pop
les
pop
dec
mov
stos
cli
sbb
scas
sahf
cmp
shrb
add
add
sbb
add
add
mov
int
push
scas
xchg
sbb
lahf
push
and
cmp
dec
sbb
mov
add
rorl
push
pusha
mov
xor
add
add
popa
cmp
and
sbb
dec
lret
nop
add
add
add
out
iret
iret
dec
mov
add
add
pop
insl
inc
and
mov
loopne
shrl
jnp
loop
jg
mov
adc
scas
pop
shr
jecxz
sbb
ds
lods
pop
in
mov
mov
lahf
cld
inc
jae
jns
ret
int
inc
pop
add
adc
insb
mov
in
adc
insb
add
add
mov
adc
lock
add
add
idiv
xlat
push
loop
insl
or
add
add
mov
jb
ret
sub
add
add
jne
add
add
add
mov
jmp
mov
add
add
add
inc
out
aad
les
add
jb
add
fisubl
add
cmove
add
add
movsl
pop
push
out
sbb
cmpsb
lret
jl
pop
push
cmp
add
add
add
ret
sub
push
les
add
add
in
inc
std
jle
pop
pop
sbb
lock
xchg
shll
incb
xchg
xchg
inc
inc
enter
pop
pop
jmp
push
stos
adc
imul
add
add
fwait
out
and
add
add
lods
mov
add
add
add
daa
fmuls
add
add
xor
sbb
imul
pop
pop
mov
add
add
inc
andb
inc
inc
mov
add
repnz
andl
push
adc
add
add
jb
fsts
sub
mov
mov
ljmp
add
into
cmp
outsb
xor
dec
and
add
add
mov
rcrl
repnz
aam
ds
inc
mov
dec
add
add
add
rolb
xchg
dec
lods
xor
div
popf
dec
jae
mov
add
add
sbb
and
popa
jo
cli
mov
test
in
and
mov
mov
cmpsb
int
mov
mov
fldl
mov
ret
jnp
add
add
xchg
sti
stc
dec
mov
add
add
add
add
es
dec
dec
js
mov
cld
imul
mov
add
out
pushf
pusha
mov
sub
cmp
jae
cmp
add
add
aaa
xchg
sub
imul
mov
add
add
sub
ljmp
or
add
add
in
xorl
notl
jl
pop
jo
movsl
jo
mov
add
adc
stos
xor
addr16
add
es
mov
pop
daa
std
das
jne
pushl
arpl
addr16
addb
add
jb
in
pushf
out
cmc
in
in
mov
add
add
and
add
add
add
mov
xchg
mov
add
sarb
add
add
jge
aam
call
add
add
pusha
mov
fs
add
add
add
leave
fwait
mov
sbb
jb
mov
xor
xor
inc
add
add
xor
mov
xchg
jle
xchg
out
add
add
mov
mov
sbb
fldcw
and
cmc
cli
inc
ja
addr16
jae
push
cmpsl
mull
add
add
aam
cltd
notl
in
orl
add
dec
insb
mov
scas
ds
jns
shr
test
or
call
add
add
add
jne
pop
and
aam
ljmp
add
scas
or
add
dec
mov
sbb
shll
push
lods
pop
lret
inc
ljmp
test
sub
add
add
xchg
fbld
mov
add
adc
inc
je
test
mov
clc
sbb
mov
movsb
aam
mov
fwait
push
dec
js
hlt
out
and
mov
add
add
aas
lock
add
add
jne
xchg
and
push
es
data16
mov
daa
dec
lcall
dec
mov
movsb
mov
add
or
add
add
lahf
mov
pop
xor
jp
mov
sub
add
add
sub
in
into
sub
mov
pop
dec
subl
add
add
jp
js
mov
or
ss
or
icebp
push
add
push
pop
xlat
xchg
lret
and
lock
mov
int
cwtl
cmpsb
faddp
push
push
js
xor
add
vpunpckhbw
add
add
add
add
push
jge
and
pop
jne
outsb
mov
dec
pusha
mov
jnp
mov
in
push
add
mov
jae
cmpsb
loop
or
add
mov
push
ret
stos
shr
dec
cmp
add
lret
add
add
add
add
add
iret
inc
cs
jp
sbb
push
inc
pop
lret
add
fwait
mov
loop
scas
inc
fldl
in
in
sarl
sbb
les
das
dec
lcall
and
add
inc
xlat
xor
andl
insl
mov
or
sarl
add
add
mov
and
add
add
jno
jle
mov
inc
imul
in
aam
inc
lcall
add
add
cmp
decb
add
add
xchg
mov
scas
pop
lea
add
sub
cli
in
es
inc
int
sub
add
add
imul
add
add
mov
add
add
mov
add
add
adc
outsl
loopne
pop
xchg
mov
lahf
mov
int
leave
sahf
cmpsl
fs
mov
and
cmp
lcall
cwtl
add
xchg
in
aad
pop
dec
jle
ffreep
mov
mov
push
pop
or
pop
std
push
ret
or
popl
pop
aam
div
fs
mov
mov
sub
andl
inc
imul
add
add
inc
ds
or
add
add
aaa
add
inc
mov
fmuls
sub
sub
cmp
or
cmp
push
and
ret
call
or
cmp
xchg
repz
ljmp
mov
sub
cmpsb
dec
negb
mov
adc
icebp
sbb
int
mov
add
add
lods
mov
and
xchg
test
mov
sub
xchg
pop
add
add
xchg
dec
jno
popf
into
mov
add
add
add
add
add
add
push
leave
mov
add
push
data16
mov
imul
out
out
pop
leave
lods
jb
mov
test
stos
sbb
adc
fs
mov
add
xor
add
add
add
outsb
inc
sub
add
add
push
sub
repnz
add
xchg
negl
lcall
repnz
scas
sub
cmp
mov
mov
mov
xor
add
adc
jb
mov
mov
add
inc
push
jo
or
or
mov
ja
mov
jo
testb
jmp
jnp
sbb
add
add
into
faddl
mov
gs
lods
add
add
add
lds
icebp
mov
sahf
mov
mov
mov
add
andl
out
mov
pop
ljmp
mov
dec
adc
insb
add
add
mov
push
inc
jecxz
pusha
add
add
ds
jmp
aam
xorb
outsb
and
add
add
adc
dec
add
add
lahf
dec
push
or
mov
mov
inc
jecxz
negb
iret
fldl
add
add
mov
mov
add
xchg
flds
add
mov
add
adc
repnz
and
xor
add
fwait
cmc
pop
fstpt
dec
lret
or
orb
add
stc
ss
or
stc
outsb
pop
jge
or
mov
ret
dec
imul
add
testb
add
dec
mov
mov
cmpsl
dec
add
add
mov
clc
addr16
pop
push
in
lods
sbb
in
jae
push
loope
out
je
pop
hlt
cmp
jmp
fnsave
in
sub
add
add
dec
xchg
int
or
cli
push
shll
out
xor
stos
mov
sbb
mov
imul
ret
ffree
loop
fdivs
outsl
add
pop
mov
mov
and
cmp
ds
pop
sub
and
stos
das
out
cmpsb
dec
dec
cld
inc
je
outsb
shlb
bound
add
add
stos
push
pop
dec
les
sbb
aaa
and
xchg
cmp
and
add
and
add
add
pop
dec
add
add
jae
mulb
fcoms
popa
xchg
lahf
pop
adc
std
cltd
into
cwtl
inc
mov
lret
jge
in
loopne
loope
add
add
add
je
add
loopne
hlt
jae
clc
inc
call
mov
add
jo
sbb
cmp
mov
inc
pop
out
fisubrl
jb
arpl
jp
dec
add
add
mov
mov
add
add
in
xlat
out
movsb
out
xorl
les
test
adc
iret
into
testl
and
push
xor
fsubrs
add
add
xchg
and
and
nop
push
sahf
xchg
out
inc
cld
inc
push
inc
or
int
add
add
sbb
xchg
shl
js
inc
or
add
add
push
scas
xchg
mov
ret
or
adc
mov
and
add
add
test
pop
jbe
lock
xchg
cli
js
cld
ljmp
add
and
imul
add
xchg
shlb
push
cmpl
cs
in
pop
sbb
shl
rorb
mov
push
movsb
cmc
in
clc
loope
outsl
or
xchg
sub
adc
dec
pop
jge
mov
ds
loopne,pn
xchg
outsb
sub
mov
xchg
inc
mov
sbb
mov
aas
mov
add
add
rep
xlat
cmp
into
jmp
bound
mov
push
sub
in
je
dec
push
mov
add
add
add
pop
pop
cmp
test
in
stos
and
jg
into
sub
add
add
jge
xchg
push
dec
dec
sahf
mov
pop
pop
fidivrl
enter
xchg
dec
ficomps
inc
mov
mov
leave
shr
lock
daa
cwtl
and
cld
loopne
shr
xor
pop
xor
lods
addb
add
add
adcb
cmp
outsb
cs
aaa
add
add
pushf
popf
cltd
imul
notb
imul
leave
jns
mov
sub
add
add
add
enter
mov
mov
test
pop
mov
out
insl
mov
jmp
bound
mov
xor
mov
fstpt
sub
add
add
push
and
add
add
push
push
xor
shlb
call
mov
add
xchg
push
lahf
mov
jo
push
pop
and
jp
cwtl
pushf
mov
add
add
movsb
out
test
add
add
mov
scas
cmp
loope
adc
xor
xchg
or
dec
imul
cmp
mov
cmp
shrl
ficoml
xor
xor
stc
in
dec
jns
pop
mov
add
add
jg
test
imul
shrb
add
add
mov
data16
push
cmp
jge
mov
mov
add
movl
jnp
sti
push
lcall
add
add
inc
or
add
add
xchg
inc
add
add
dec
std
adc
rorb
imul
mov
jmp
add
add
add
les
xor
add
add
add
push
add
mov
push
cli
jge
mov
or
add
add
lret
fucom
fildll
inc
pop
imul
push
int
fs
and
push
sbb
ret
call
inc
add
add
mov
fwait
ss
test
cmp
ret
add
add
jbe
es
xor
shlb
dec
es
addr16
movsb
mov
mov
jp
jne
add
add
fdivl
sahf
imul
add
add
jns
test
xlat
scas
mov
loopne
adc
pop
add
and
add
add
lcall
sar
shlb
cmp
mov
mov
fadds
stos
inc
int
dec
mov
rol
and
or
movsl
xchg
sbb
cmpsl
pop
out
shrb
pop
addr16
xchg
cmp
inc
outsl
fistpl
mov
mov
add
cmp
in
das
fisttpl
mov
add
add
sarl
shrl
add
add
cld
nop
cmp
add
add
shrb
sahf
add
add
add
push
or
mov
inc
add
add
hlt
sub
sub
add
add
dec
mov
sbb
or
add
add
sbb
lock
mov
testb
aas
pop
push
pusha
mov
in
sti
shll
pop
push
outsb
out
cmp
xchg
sub
mov
xchg
nop
sub
add
add
jle
in
lcall
dec
loopne
pop
xchg
scas
das
and
outsl
and
xchg
aaa
testb
pop
xor
lahf
ds
aad
mov
clc
shlb
lcall
mov
mov
add
add
add
pop
jns
mov
ret
mov
test
mov
pop
test
mov
test
lahf
inc
mov
jae
fsubrs
or
add
add
add
or
iret
mov
stos
jo
add
cli
xchg
addr16
push
sub
xor
outsb
sahf
sub
cmc
cli
decl
sbb
push
mov
add
add
add
xlat
ja
je
push
pop
scas
dec
aad
push
std
shll
lret
daa
push
mov
pusha
add
add
imul
add
add
sub
add
add
add
add
add
int3
fisubrs
jge
ficompl
pop
mov
add
add
jns
mov
xor
in
hlt
mov
pop
cmp
xlat
sub
jno
in
inc
adc
out
mov
fcoml
test
jnp
mov
shl
into
pusha
mov
push
stc
lods
xchg
cli
repz
movsb
pop
fcoml
pop
arpl
cmp
sub
add
cwtl
add
sub
sub
mov
mov
mov
or
cltd
addr16
mov
je
cld
aad
iret
arpl
and
clc
mov
xchg
int
jmp
add
xchg
mov
mov
lea
call
inc
add
add
shll
cmc
ljmp
mov
push
mov
inc
mov
int
mov
movsb
test
adc
push
out
adc
cmp
inc
push
stos
fnstcw
sub
pop
jnp
test
push
popa
inc
add
add
sbb
xchg
lea
add
add
add
orl
add
add
aaa
clc
lods
je
out
nop
pop
inc
jbe
arpl
mov
sarl
or
lea
dec
and
adc
ja
cmp
pop
aaa
add
add
add
or
mov
ja
out
cmp
jne
push
jmp
aad
cmp
lahf
fldl2e
imul
add
mov
enter
fiaddl
lods
push
adc
add
add
jne
pop
cmp
add
add
dec
mov
in
cmpsl
and
sub
out
cmp
dec
bt
dec
add
add
dec
inc
mov
mov
mov
mov
or
dec
add
add
push
cmp
shrb
add
add
mov
sub
add
add
sbb
xchg
in
mov
loop
adc
push
in
loop
mov
mov
adc
rclb
ss
add
push
pop
pushf
lea
add
add
add
xchg
test
shrl
sub
add
add
sahf
mov
add
add
add
add
xor
add
add
mov
fsubrl
sbb
int
add
add
mov
mov
sarb
inc
hlt
out
add
add
add
bnd
add
sub
test
test
rcll
sub
jp
add
add
adc
aam
inc
add
add
add
int3
mov
mov
dec
push
leave
mov
stos
adc
push
or
add
add
dec
cmp
mov
mov
int3
fwait
mov
add
add
jg
inc
xchg
imul
test
add
add
add
jg
popf
mov
stos
scas
lret
jmp
popf
cmp
sub
xor
setp
dec
mov
out
xlat
mov
pop
fcmovb
pusha
add
add
xorb
popa
pop
jb
cmpsl
inc
mov
aam
aaa
inc
cmp
add
add
dec
xchg
xchg
sub
sbb
mov
add
add
out
jne
insb
mov
ds
push
mov
call
mov
lahf
mov
and
add
add
and
negl
cli
int
pop
out
test
push
cmp
shlb
loopne
loope
mov
mov
lock
sub
cli
dec
cs
add
add
js
iret
mov
dec
imul
fwait
adc
fstpl
push
lea
aam
lret
and
sbb
outsb
jge
push
jge
popf
jmp
push
pop
jne
fwait
mov
ljmp
add
xchg
xchg
jbe
add
int3
ss
cmc
dec
or
add
add
pop
pop
bound
add
add
rolb
inc
mov
lods
out
fimuls
xchg
xor
icebp
int3
insb
add
add
addr16
test
add
bound
add
add
jl
xchg
push
cmp
push
add
add
add
mov
and
add
add
in
mov
outsb
leave
mov
add
mov
add
add
push
imull
fmuls
inc
sbb
mov
add
lcall
fcompl
call
add
add
add
jne
cld
fstpt
add
add
int
lahf
arpl
ret
loop
add
lahf
clc
adc
lods
int
sti
sub
add
js
js
mov
xor
and
dec
mov
add
add
add
add
add
imul
mov
leave
mov
mov
je
lock
xor
pop
loope
cli
bound
xchg
jle
loope
imul
rcrl
adc
sub
add
add
jp
fisubrs
stc
jb
jmp
mov
xchg
lock
aas
mov
sub
nop
adc
inc
mov
daa
lret
adc
mov
scas
fldcw
add
dec
shll
push
clc
stos
mov
pop
mov
repz
add
add
aam
dec
nop
sbb
shll
repz
add
pop
or
cs
dec
mov
lea
in
movl
jb
call
mov
add
inc
pusha
add
add
sti
pop
pop
int
xchg
cmp
dec
pop
in
mov
mov
mov
xor
enter
jg
push
push
cmpl
add
adc
cmp
repz
clc
hlt
mov
repz
loop
gs
aam
mov
popf
fdiv
lea
fwait
adc
jmp
mov
dec
shlb
scas
xchg
fldenv
or
add
add
mov
add
dec
dec
mov
icebp
mov
imul
movsb
sbb
add
jb
mov
jbe,pn
out
repz
and
sbb
flds
mov
sbb
stos
pop
xchg
inc
subl
add
insb
add
add
jl
adc
ss
jnp
add
add
push
mov
repnz
mov
rol
in
subb
sti
jmp
int
lret
xchg
dec
add
add
xor
add
out
es
hlt
mov
out
pop
test
jp
xchg
stos
dec
sbb
lcall
add
add
les
test
gs
dec
add
add
les
loope
or
loope
jnp
mov
scas
mov
add
jns
jae
test
push
dec
cmp
mov
add
popf
mov
fs
or
js
xchg
push
dec
add
add
scas
idivb
sub
cli
rcll
sbb
xor
push
dec
mov
test
xchg
nop
mov
scas
cmp
mov
je
lcall
cmp
fistpl
jne
push
xchg
sub
add
add
les
add
mov
incl
jns
mov
add
add
add
cwtl
cmp
jnp
pop
jmp
push
imul
dec
test
pop
insb
mov
ret
or
add
inc
push
xlat
mov
add
or
add
add
push
push
es
xor
add
add
dec
jo
inc
push
push
lock
into
jno
shr
imul
dec
mov
add
add
stos
jle
xchg
cmc
stos
inc
or
lret
movsl
sub
aas
lret
pop
push
dec
add
add
sbb
in
aas
mov
mov
sub
xchg
es
lea
pop
insl
jl
dec
and
in
pop
mov
call
hlt
or
add
add
dec
or
add
add
adc
add
repnz
or
scas
sbb
jns
mov
pcmpeqb
mov
jmp
jo
sbb
adc
mov
mov
mov
ret
adc
in
lock
xor
cltd
jbe
shll
xlat
lock
mov
rolb
add
add
gs
add
add
adc
jl
in
fistpll
add
or
mov
add
lret
push
xchg
add
add
push
xchg
into
push
roll
cmp
xor
push
mov
mov
jb
imul
out
push
lock
lds
ret
not
loopne
cmp
add
sarb
cmp
inc
jp
pop
cwtl
insb
mov
push
sub
push
sti
push
push
sbb
mov
push
push
dec
add
add
sub
out
je
aas
and
dec
or
add
add
add
add
nop
je
add
add
xor
ja
dec
mov
xchg
push
add
shlb
add
fists
dec
push
mov
mov
fidivrl
cmp
sbb
orb
ss
pop
inc
mov
jae
push
pop
mov
sbbl
jg
or
add
add
imul
jg
in
movl
addl
xchg
jp
insb
mov
inc
mov
add
add
jp
cmc
add
jo
mov
pushf
fisubs
test
in
stos
dec
cmp
mov
mov
cs
add
add
in
jg
sub
add
add
pop
or
add
add
out
mov
lahf
in
and
push
pop
bound
shrb
add
add
in
ss
movsl
mov
movsb
in
pop
adc
and
ffree
add
xchg
fldcw
add
add
icebp
ss
mov
sbb
shlb
into
dec
pop
pop
lds
xor
adc
or
xchg
stos
mov
daa
clc
fisubrl
mov
shlb
mov
fwait
dec
idiv
mov
rorb
cmp
ljmp
lea
aad
pop
or
add
add
add
add
iret
push
sub
mov
loop
push
shll
icebp
inc
jp
aas
cmpsb
push
xchg
ljmp
push
sub
xor
and
jp
repz
jecxz
addr16
add
add
xor
mov
mov
add
enter
cli
mov
imul
xor
sub
add
add
repnz
add
add
out
xor
push
push
or
jmp
jecxz
ja
movsb
inc
xchg
aaa
xor
push
lret
lcall
jo
mov
cwtl
idivl
inc
pop
out
jns
pop
and
add
sub
add
add
es
popf
lahf
and
xlat
lahf
adc
mov
add
cltd
dec
xor
pop
test
add
add
mov
movsb
mov
jmp
pushf
test
inc
lock
mov
cmc
rol
scas
jecxz
clc
sub
add
add
cltd
ret
outsb
or
dec
popa
ds
mov
push
lcall
push
rcr
insb
add
add
mov
mov
nop
jmp
test
cltd
outsb
xor
in
in
lcall
sub
loop
push
insl
adc
push
das
je
movsb
divb
dec
mov
add
int3
jb
sarb
ret
ds
fldt
imul
add
add
test
mov
add
cmpsl
sub
and
add
add
mov
mov
adcl
inc
add
add
mov
pop
sbb
leave
add
push
mov
in
add
add
add
cld
fnstcw
jb
les
loopne
add
or
mov
mov
mov
gs
je
movsb
mov
sbb
sbb
test
sahf
out
cmp
sub
loopne
sti
add
add
add
lea
cltd
adc
sbb
adc
jmp
lcall
jb
js
sbb
mov
lahf
and
lret
insl
xchg
les
add
add
cwtl
jl
add
enter
mov
lcall
inc
mov
das
xor
shlw
adc
ja
mov
add
pop
and
add
jne
inc
imul
pusha
mov
cld
fmulp
imul
add
add
mov
lock
scas
mov
int
cmp
add
loope
pop
sbb
in
add
add
add
rolb
jns
push
mov
arpl
add
jns
or
add
add
inc
insb
add
add
xchg
xchg
or
adc
out
aas
push
dec
add
add
or
pop
jg
movsl
dec
cltd
or
xor
int3
inc
daa
adc
cmp
sbb
and
add
add
je
daa
xor
add
or
add
add
dec
xchg
subl
test
gs
add
add
add
shl
dec
pop
mov
pop
dec
int3
and
ss
ja
mov
movsl
adc
in
jns
lods
sbb
shl
cmp
add
push
mov
or
pop
fdivrl
inc
cli
lock
call
sbb
stos
lret
shlb
add
add
xchg
inc
dec
add
add
pop
aad
jge
test
lods
cmp
into
inc
stc
push
loopne
lds
mov
cld
cmc
int3
jbe
push
sbb
jnp
lret
xor
loop
inc
sub
lret
imul
add
jge
subl
sahf
push
mov
es
jp
out
push
faddp
and
pop
arpl
and
or
ja
add
daa
pop
push
inc
lea
xchg
mov
adc
push
shlb
ret
jg
mov
inc
mov
shr
push
sub
popf
sub
rolb
add
add
push
jl
test
les
xchg
xchg
outsb
jmp
stos
mov
dec
mov
jl
pop
pop
cmpsb
pop
cmpsb
sbb
test
add
add
cmp
adcb
pop
inc
iret
imul
mov
aaa
cmp
ds
add
add
adc
dec
fmuls
add
add
fwait
clc
cmpsb
push
shlb
movsl
popf
stos
fcomps
pop
fwait
scas
mov
dec
mov
rcrb
aaa
or
loope
cmp
mov
dec
shrb
mov
pop
icebp
dec
xchg
sub
add
add
inc
add
add
call
adc
pop
sub
push
outsl
movsb
stos
push
cmpsl
repnz
push
cli
and
lods
movsl
push
sub
xchg
out
cmp
add
adc
mov
push
xchg
ljmp
push
mov
inc
add
add
and
add
add
loopne
pop
dec
and
add
cltd
sbb
fists
xchg
inc
pop
or
mov
pop
scas
ss
adc
mov
pusha
mov
movsl
orb
sbb
mov
stc
dec
add
add
dec
lahf
dec
dec
jp
sbbb
repz
das
sbb
gs
dec
add
add
jle
setbe
mov
pop
lret
lods
pop
fldt
xor
jmp
mov
lods
xorb
mov
inc
xchg
sub
sub
sub
mov
adc
js
pop
and
add
add
clc
cmp
loop
lahf
mov
mov
push
mov
pop
hlt
pop
mov
xor
int
jl
out
arpl
mov
into
in
mov
fdecstp
jo
add
add
enter
je
sub
or
add
add
add
push
add
cmp
add
add
mov
add
add
lahf
pop
sbb
aam
sub
notb
add
add
sahf
inc
arpl
lea
ljmp
add
add
add
add
gs
je
mov
add
mov
xor
jb
in
inc
ds
pushf
lahf
popa
incl
out
fstps
pop
adc
imull
or
fwait
jae
test
adc
testb
xchg
mov
and
mov
add
sub
ficompl
add
push
test
dec
mov
xor
or
add
add
mov
gs
add
add
add
mov
push
add
rcrb
gs
shll
rcl
stos
lret
and
add
add
cmp
ss
mov
pusha
mov
fs
stos
ficomps
xchg
add
add
add
cli
jge
mov
ficoml
fidivrs
jno
lret
adc
mov
cmp
dec
dec
cmp
push
inc
add
add
scas
sbb
sub
xor
mov
int3
loopne
xchg
pop
mov
mov
lods
adcb
mull
mov
movsb
mov
pop
rcrb
sbb
xchg
int3
pop
cs
push
push
mov
mov
add
add
add
pop
sbb
inc
stos
jbe
sahf
fstps
lods
push
mov
add
add
add
add
add
lock
mov
mov
adc
ficompl
mov
add
fcompl
leave
jo
insl
cmp
cmpsl
cmp
add
add
andb
outsb
movsl
sub
and
sarb
rcr
push
sbb
outsl
mulb
add
add
and
dec
mov
xchg
lret
adc
dec
mov
in
or
movsl
add
add
enter
bound
mov
out
sub
xchg
push
push
nop
arpl
hlt
es
cmp
jno
xor
out
int3
fstl
or
add
add
add
movsb
scas
rcll
push
mov
sbbl
std
mov
xchg
scas
pushf
cmc
or
add
add
mov
stos
pop
inc
imulb
scas
ss
mov
loop
jmp
jno
xchg
repnz
ds
in
js
mov
mov
jge
add
cmpsb
sub
cmpb
jmp
adc
lds
scas
cmpsl
add
mov
and
jg
inc
add
add
xor
int3
lret
negl
xchg
loopne
push
lods
sub
adc
mov
xchg
clc
in
mov
mov
add
push
out
aas
mov
jne
mov
add
add
sub
add
add
pusha
add
add
add
cmp
add
add
loope
mov
push
insb
mov
repnz
fistpll
mov
sbb
add
add
add
bound
scas
cld
dec
mov
mov
xor
ljmp
jno
cmp
push
sub
and
add
add
ljmp
push
and
add
add
mov
pop
dec
ja
or
add
add
xchg
out
mov
xchg
xor
or
add
add
xchg
ret
add
cmpsb
sbb
mov
mov
addr16
adcl
test
inc
mov
and
add
add
mov
mov
add
out
add
jbe
cmp
add
popa
aaa
fstp
outsl
cs
inc
jecxz
mov
icebp
repnz
sbb
pop
arpl
mov
cmc
inc
test
push
sahf
lcall
jne
pop
pushf
out
into
adc
add
add
add
add
aad
divl
out
out
and
dec
pop
pop
inc
mov
jbe
mov
mov
enter
imul
pop
or
add
add
mov
add
add
hlt
add
push
xlat
xor
movsl
xor
and
dec
into
rcll
into
aad
bound
add
adc
add
add
sbb
pop
data16
xchg
mov
add
mov
add
push
enter
js
and
add
add
add
scas
inc
dec
add
add
xchg
add
add
add
jmp
push
cmp
cltd
jb
fcom
mov
daa
enter
cmp
clc
push
movsb
xor
in
dec
add
add
push
cli
sbb
test
add
add
sub
add
inc
test
sarl
mov
divb
repnz
int3
sbb
lods
xchg
daa
jnp
std
sub
add
add
lahf
pusha
add
add
sbb
fadds
add
add
xchg
aad
sub
sbb
mov
jno
mov
pop
add
mov
xor
mov
sti
jb
aas
mov
cmpsl
das
call
clc
mov
xor
cmp
add
out
das
mov
add
sub
pop
pop
xchg
cltd
or
inc
mov
int
xchg
adc
fcomp
push
dec
inc
cmp
add
add
cli
and
add
add
or
into
jmp
add
add
push
dec
add
idivb
cld
add
add
add
mov
adc
fidivl
sub
add
cwtl
add
add
inc
mov
je
xchg
xor
add
add
rolb
adcl
cli
mov
mov
mov
xor
dec
cmpsl
in
add
add
int3
sbb
mulb
dec
ljmp
adc
or
pop
cmpb
sahf
shll
sbb
or
add
add
daa
pushf
insb
add
add
std
mov
push
inc
jns
data16
iret
sbb
adc
addb
or
fcomp
adcb
lret
add
add
add
add
insl
lds
jge
inc
icebp
xchg
inc
jp
push
add
arpl
xchg
fs
and
add
add
add
add
add
inc
add
add
loopne
mov
add
add
add
add
add
add
or
adc
scas
add
popa
xor
push
stos
repz
pusha
mov
or
mov
repnz
or
add
add
push
push
lcall
mov
pop
lods
enter
push
or
jns
je
sub
add
add
test
xchg
add
add
jecxz
cmp
adc
inc
cmpsl
fstl
add
add
cmc
scas
mov
inc
or
add
add
stos
cmpsb
popa
dec
jns
xchg
mov
fists
sbb
arpl
add
add
sub
add
add
xchg
inc
add
add
cs
imul
addr16
add
and
fsubrl
lcall
lret
ror
rcr
cltd
cli
sahf
jl
shlb
out
fcomps
ret
cmc
cwtl
or
mov
cwtl
add
add
add
call
dec
mov
faddl
adc
add
add
imul
add
add
icebp
push
test
fwait
lcall
add
dec
cld
inc
pop
ds
shrb
stc
push
and
lret
xor
ljmp
shlb
imul
rcl
xlat
xchg
xchg
and
cmp
sbb
mov
add
add
cmpsw
es
add
dec
xor
mov
lahf
xlat
das
mov
push
jmp
and
insb
add
add
and
add
add
mov
in
sbbl
sbb
xchg
dec
add
add
pop
test
inc
add
scas
mov
cmpsb
jnp
aad
sub
push
aam
or
pop
mov
cmp
cmp
sbb
nop
pop
push
test
mov
dec
mov
movsb
add
mov
and
push
iret
test
jno
test
cmp
xchg
pop
addb
int
pushl
fidivrl
or
xor
add
add
add
add
imul
in
cli
repnz
xor
stos
jns
jbe
in
test
movsb
sarb
idivl
repnz
cmp
inc
add
add
mov
loope
je
cld
push
mov
stos
cmc
leave
sarl
mov
rolb
testl
sti
xor
out
aam
add
add
out
sarb
inc
add
add
subb
out
jmp
add
add
pop
or
sbb
subl
mov
add
cmp
lock
lods
test
loopne
hlt
pushf
xchg
loop
decl
add
pop
jmp
out
std
sbb
xlat
dec
mov
in
sbb
in
mov
push
xchg
pushf
cs
rcll
gs
dec
cli
push
push
imul
xor
add
add
test
mov
arpl
dec
add
add
les
and
xorl
inc
addr16
xor
hlt
xchg
bnd
stos
jbe
mov
dec
sbb
ds
fcmovne
mov
jb
std
mov
rcrl
rcrl
lret
loope
mov
push
sbb
pop
jl
mov
mov
add
add
loope
mov
xchg
or
ja
inc
adc
rclb
fiadds
fisttpl
pop
add
sbb
adc
adc
add
add
neg
notl
add
enter
add
add
dec
xchg
and
add
add
add
add
testb
add
xlat
inc
xor
xor
add
add
scas
js
clc
popa
mov
fdivl
mov
mov
inc
outsb
movsb
pop
movl
add
add
add
pop
mov
jb
mov
gs
cwtl
add
add
int3
and
add
add
loop
sub
pop
lds
dec
idivb
adc
or
add
add
inc
or
addr16
pop
mov
data16
cli
out
imul
clc
cwtl
sbb
mov
insb
mov
incb
int
es
fs
cwtl
div
dec
cmp
sub
mov
fiaddl
sbb
mov
jle
popl
jne
fisubl
xchg
add
jno
flds
dec
mov
popf
inc
cld
js
rcrl
stos
divb
mov
sbb
inc
sti
sub
add
enter
in
loopne
in
cmp
add
xchg
dec
cmp
add
add
enter
fidivrl
int3
cltd
rorl
add
aaa
mov
dec
jno,pn
repz
pop
inc
xchg
push
push
and
add
add
sub
cmp
out
xchg
xchg
test
mov
cmc
imul
test
popa
adc
add
add
ret
xor
mov
pop
inc
xchg
push
add
mov
xchg
daa
dec
add
add
std
xchg
jmp
add
add
mov
pop
loope
push
mov
fbld
je
pop
inc
les
add
add
add
add
add
add
adc
and
cmp
add
add
rolb
ss
mov
jo
fdivrl
loope
nop
jecxz
sti
mov
lcall
mov
das
int
add
add
sbb
add
stos
xchg
std
inc
xor
test
mov
inc
add
add
adc
push
or
add
add
mov
jne
mov
lret
dec
das
mov
mov
lret
loop
clc
cli
mov
outsb
aad
jl
xor
stos
ret
pop
andb
add
in
cmp
cmp
xorb
pop
cmp
push
sbb
add
add
add
add
rol
in
adc
subb
stos
or
push
dec
sbb
sti
fs
mov
and
outsb
or
add
add
pop
pushf
lahf
xor
gs
mov
sbb
add
add
ljmp
mov
add
add
pop
inc
sub
fucomi
mov
pop
add
xlat
je
leave
xlat
ds
add
add
stc
test
or
rcrl
xchg
stos
and
adcl
mov
popa
popa
imul
add
xchg
pop
scas
dec
sub
push
cmp
mov
jb
pushf
rcrb
inc
call
dec
rcll
and
add
add
pop
xchg
pop
lds
sbb
pop
popa
fbstp
fstl
xor
mov
push
or
add
pusha
mov
sub
and
mov
sbb
pop
int3
pop
xchg
bound
mov
add
jl
loop
mov
daa
push
cmp
pop
mov
pushf
add
add
add
add
add
ror
sbb
or
add
add
mov
int
jno
stos
and
add
add
into
inc
in
jno
pop
sbb
popf
push
es
xchg
lret
mov
add
cmp
jae
mov
sbb
or
mov
cmpsl
shlb
jg
xchg
lret
sbb
aas
lods
das
dec
sub
add
sar
lret
sub
jg
sahf
sbb
ss
ljmp
xor
rcr
and
addr16
mov
in
pop
test
cmp
cmp
mov
jne
lea
fisttpl
and
test
mov
xor
movsb
loope
test
add
add
int3
and
add
add
test
xchg
outsl
mov
adc
sbb
push
popa
add
nop
popf
std
mov
mov
out
jae
mov
mov
add
add
cmc
fs
sub
add
add
movsl
negb
das
adc
dec
and
sub
sbb
rorl
push
add
xchg
dec
sbb
cmp
add
add
pop
or
add
add
lods
mov
add
inc
push
cmc
jge
sbb
add
add
dec
push
jle
pushf
lret
lods
into
in
je
push
mov
push
call
shll
adc
insb
add
add
add
add
add
dec
inc
and
out
frstor
add
add
inc
adc
mov
mov
fnstsw
call
mov
or
add
pop
pop
pop
dec
dec
mov
add
movsb
out
mov
and
rcrl
sbb
mov
add
pop
inc
cmp
push
mov
addr16
cmpsb
inc
add
add
mov
push
leave
bound
ss
in
in
cmpsl
pusha
add
add
push
inc
mov
mov
sub
testb
add
add
or
and
push
push
scas
in
insb
add
add
stos
scas
adc
mov
scas
pop
lret
orl
add
or
notb
pop
mov
out
pop
sbb
add
add
add
mov
pusha
add
add
adc
cmpsb
clc
es
add
scas
ljmp
sahf
shl
divb
xor
add
jo
imul
add
cli
mov
pushf
push
mov
pop
jnp
xchg
sub
add
add
pop
mov
mov
dec
mov
mov
pop
jl
inc
leave
es
out
sbb
or
popf
stos
cmp
push
lahf
xchg
and
call
negb
sbb
mov
mov
push
jns
ljmpw
rcr
outsb
push
add
add
lret
gs
test
and
fimull
add
add
out
push
mov
cld
mov
loopne
push
lahf
pop
das
xor
js
mov
add
xchg
in
mov
mov
lods
xor
fldenv
addl
call
dec
mov
in
add
add
sub
or
fldl
mov
and
loop
aad
int
repz
and
add
add
add
add
rcr
push
je
xor
pop
jl
add
sub
pop
shl
or
inc
jnp
pop
clc
aaa
aas
mov
jnp
mov
repnz
mov
add
imul
int3
test
jle
or
movsl
push
mov
sub
adc
add
add
cmp
push
sub
add
add
insl
popf
push
and
add
add
std
push
lret
mov
fldcw
arpl
sbb
xchg
sub
add
add
jp
push
popf
fldt
inc
push
dec
mov
add
add
mov
movb
jne
push
ficoms
push
mov
push
adc
int3
mov
aam
cwtl
mull
add
add
notb
add
cmpsl
adc
jo
dec
das
mov
popf
dec
into
lock
xor
mov
fdivrs
in
lret
fisttpl
subb
cmpsb
pusha
add
add
pop
mov
enter
inc
les
cmp
add
lods
xchg
in
sub
sahf
mov
mov
cmp
or
mov
and
and
add
add
sti
out
divb
xlat
jbe
inc
test
add
xor
push
jo
aas
add
add
add
cmp
cmp
jo
fldt
xor
mov
pop
xor
frstor
push
add
add
add
pop
add
lret
cmc
push
xchg
leave
xchg
inc
outsl
cmp
scas
iret
out
sahf
lcall
cwtl
fmulp
jne
aas
pop
xchg
and
jp
add
add
mov
flds
imul
add
pop
bound
jmp
call
add
jmp
loop
add
add
add
cwtl
call
add
addb
add
add
pop
data16
ss
add
inc
add
add
popf
mov
adc
je
fimuls
mov
xlat
loopne
call
test
cltd
xchg
sbb
es
and
add
add
cmc
push
jp
cs
mov
add
sbb
or
cmp
adc
inc
mov
mov
addr16
pop
scas
subb
add
add
and
add
add
add
aad
mov
xlat
adc
aaa
mov
ljmp
add
add
loop
lds
and
xchg
ret
das
insb
mov
and
add
add
shufps
add
sbb
add
sbb
sti
aaa
pop
xchg
pop
ret
and
int
and
add
add
xor
mov
bound
inc
in
cmp
dec
mov
rcll
shl
push
xor
add
testb
jns
adc
sarb
addr16
xchg
mov
push
xor
outsb
jge
pop
or
cli
dec
fsubl
add
or
stos
sarl
add
sbbl
js
in
sbb
mov
iret
mov
aam
enter
push
or
add
add
pop
mov
dec
mov
aad
popa
pop
std
and
cmp
fmuls
lcall
push
pop
lret
mov
arpl
arpl
or
add
lods
repz
sbb
aas
das
pop
shrb
xchg
and
jmp
add
or
add
add
add
jns
test
adc
das
xchg
loop
add
add
outsl
and
add
add
aas
aaa
scas
test
xchg
pop
inc
jecxz
das
push
imul
cmp
loop
mov
push
and
daa
subl
pusha
mov
pop
add
add
add
add
stos
out
popf
loop
sub
je
ds
orb
add
add
xchg
lock
ljmp
add
popf
pop
popa
add
sbb
jb
mov
push
in
mov
mov
cs
mov
push
out
xor
add
add
jmp
add
add
lea
inc
mov
add
add
pop
fiaddl
leave
adc
jno
or
add
int3
cwtl
mov
inc
adc
add
fldl
mov
adc
out
sarb
aad
sarl
movsl
push
mov
add
add
clc
mov
add
xchg
cmp
jbe
add
add
and
loopne
mov
jg
or
add
add
xor
movsb
std
cmp
mov
xchg
in
xchg
out
je
sub
mov
ret
inc
scas
xor
xchg
out
add
add
lahf
les
xchg
pop
jge
jno
inc
xchg
jecxz
add
add
add
xor
pop
fsts
mov
add
add
jmp
pop
add
and
push
mov
aad
jo
mov
std
sub
mov
add
add
add
fsubp
ror
mov
add
add
sub
add
add
ret
jecxz
daa
sbb
xchg
mov
faddp
scas
or
imul
adc
jae
mov
shl
sbb
xor
add
add
iret
dec
mov
adc
int
addr16
dec
push
add
cli
fidivs
mov
repz
nop
mov
add
add
mov
xor
fadds
cld
push
cmpsb
jge
ja
cli
jp
test
mov
mov
and
add
add
cmp
xchg
adc
test
movsb
xor
mov
add
jb
test
test
push
and
xor
lahf
shll
scas
mov
mov
call
rep
pop
dec
loope
mov
mov
mov
xlat
lea
and
dec
mov
cmc
in
test
int
xchg
xor
imul
push
mov
fisttps
pushw
cmp
int3
das
push
and
add
add
inc
xchg
xchg
pop
jno
frstor
add
push
std
xchg
shlb
sar
xor
push
sub
add
add
cmpsl
fdivs
xchg
adc
movsb
and
arpl
leave
pop
xchg
sbb
add
sbb
outsb
loop
mov
pop
fsubs
mov
bound
xlat
aam
dec
add
add
or
pand
sub
loopne
dec
jns
and
jecxz
pop
lahf
lret
lods
popa
mov
in
fistps
jb
mov
jge
int
push
and
or
leave
addl
push
repnz
lret
jnp
add
add
add
add
add
ds
cmp
dec
pop
flds
aaa
pop
xchg
adc
into
test
pop
xchg
and
lcall
jnp
daa
out
bnd
push
data16
and
dec
repnz
or
out
pop
add
push
xchg
add
int3
aad
inc
add
add
in
in
push
cli
jg
sub
add
add
cltd
mov
add
ss
arpl
les
push
mov
fcompl
add
add
test
cmp
cmp
mov
mov
mov
sbb
ficompl
je
in
add
inc
mov
adc
xchg
pop
add
dec
in
aaa
in
nop
stos
inc
in
and
push
adc
pop
sbb
sbb
pushf
or
rcrl
shrl
sub
in
aam
jae
lcall
lahf
lcall
jae
inc
ja
cmp
rolb
xchg
repz
add
add
xorl
ret
scas
push
shl
adc
cmp
xchg
out
inc
cmp
rclb
jno
mov
out
mov
repz
adc
ret
mov
lods
sbb
sbb
push
cli
fwait
xor
pop
push
jb
movsl
and
out
dec
and
add
add
push
adc
in
adc
mov
add
mov
xchg
xchg
jmp
mov
out
sub
pop
aas
movsb
mov
mov
shl
loopne
lea
out
rcr
jmp
push
sti
pop
jge
jle
jl
fxch
fstpl
pop
aam
divl
add
add
add
shl
xor
stos
ja
js
loop
icebp
int
pop
sarb
outsb
and
add
add
cltd
xor
mov
sti
popa
sbb
and
das
scas
sub
add
add
jb
xchg
cmpsb
cmc
cmpb
inc
jge
dec
sti
jb
testb
jo
cltd
push
mov
lret
lret
insb
mov
dec
sbb
pop
add
push
enter
add
add
add
push
add
inc
mov
mov
add
ss
repnz
add
mov
add
add
psubq
movsl
cmpsl
js
movl
in
test
loope
xor
dec
je
or
add
add
jmp
out
lock
outsb
pop
or
and
add
add
stos
push
popf
or
dec
jp
sti
stos
test
add
add
je
fwait
xchg
jb
enter
hlt
popa
mov
mov
add
movsl
stc
push
stos
cld
jl
sbb
fcompl
jbe
push
arpl
jp
jnp
icebp
jmp
xor
xchg
stc
dec
pop
fcoms
mov
pop
cltd
xchg
inc
add
add
and
sub
mov
mov
add
add
test
add
xchg
hlt
ret
adc
out
jo
test
mov
mov
inc
fnstenv
add
add
add
add
add
push
mov
mov
pop
mov
loope
cmp
pushf
cmpsl
cmp
mov
test
bound
jb
rcrb
add
add
add
push
add
add
add
add
add
add
add
mov
dec
imul
lods
push
data16
add
add
xlat
cmpsb
hlt
inc
push
cwtl
mov
add
add
mov
addr16
addr16
cmp
mov
xchg
add
inc
cmpsb
sbb
push
mov
push
iret
xor
mov
lds
add
add
add
add
add
loop
dec
out
xchg
shll
or
mov
rcr
int3
inc
push
decb
add
add
add
add
in
movsb
mov
mov
adc
pop
cmp
lea
inc
mov
mov
push
into
icebp
ss
jb
mov
sbb
lret
cld
xchg
cltd
push
xchg
clc
pop
mov
or
leave
mov
arpl
daa
popa
shll
mov
or
int
mov
imul
and
cmp
jae
in
fdivr
inc
dec
sub
pop
jno
add
inc
add
add
jg
notb
push
xchg
sub
add
add
sbbl
jl
and
jno
pop
addr16
repz
test
add
add
push
sbb
out
rcrb
pop
lds
data16
enter
add
add
out
in
xlat
sub
add
add
and
add
add
out
les
pop
in
mov
xchg
push
add
imul
daa
bound
add
add
push
push
rcl
push
insb
mov
std
jg
int3
movsb
push
iret
xor
xchg
mov
sbb
add
xor
fisttpll
xchg
or
mov
sbb
fildl
xor
das
dec
subl
jecxz
loop
jae
divl
jge
nop
aas
popa
es
add
add
xchg
jp
mov
sarb
mov
outsb
adc
xchg
shl
add
fsubrs
add
push
loopne
lea
add
test
ljmp
mov
fsts
lods
movsb
fnstcw
xor
add
add
add
add
add
jnp
outsl
es
fistpll
inc
cmp
pop
mov
add
add
hlt
data16
inc
lods
icebp
xor
or
add
add
sbb
add
in
dec
add
add
ds
fstpl
add
dec
xchg
lahf
and
lahf
mov
popa
es
int
mov
mov
enter
add
in
xchg
add
add
outsl
add
add
outsb
shl
lea
inc
loopne
jg
ja
lret
add
add
in
mov
cmp
sub
add
add
jmp
fimuls
add
add
imul
sbb
icebp
imul
add
lret
insl
mov
pop
xchg
pop
es
mov
add
add
add
ret
jecxz
push
sbbl
aas
jae
lret
push
jp
push
shl
mov
lret
das
mov
mov
mov
ss
pushf
movsb
aaa
mull
xchg
push
mov
adc
sbb
sbb
add
add
ficoml
roll
outsb
scas
adcl
arpl
sbb
ljmp
mov
mov
cld
inc
mov
fwait
mov
dec
pop
int
add
call
push
fwait
push
lds
aaa
out
adc
add
lea
push
adc
adc
push
sbb
add
sbb
mov
mov
mov
mov
mov
adc
int3
adc
fisttpll
nop
ja
ret
daa
sub
sbb
into
sub
mov
pushf
aad
mov
cmp
lods
mov
fstpl
lret
mov
fistl
insl
fcomp
decl
lret
add
in
iret
subb
inc
inc
in
jp
into
inc
xchg
rorl
pusha
add
add
cltd
push
sbb
sbb
movsb
aam
stos
push
ds
lret
sarb
lds
rcrb
jb
and
jb
test
sub
and
ret
out
aaa
ljmp
es
data16
jno
call
pushf
mov
add
add
inc
mov
xchg
add
mov
push
mov
ss
dec
add
add
cld
mul
adc
mov
adc
lds
stc
sbb
add
or
clc
jmp
or
idiv
fldt
pop
stc
ja
pop
sub
adc
iret
mov
ss
andl
pop
mov
push
or
add
add
call
mov
add
add
xor
add
add
jmp
adc
mov
pop
push
stc
dec
adc
dec
add
add
popf
rorb
adc
add
and
pop
push
movd
add
into
push
mov
aas
ret
sub
repnz
push
cli
pop
orl
or
ret
iret
mov
add
add
movsl
insb
add
add
outsb
test
ret
mov
jl
lcall
push
mov
fstpl
xor
popf
ret
cmpsb
push
mov
repnz
or
pop
cmp
pop
xchg
mov
into
lahf
push
and
add
add
cmc
dec
sbb
add
sub
dec
jle
mov
add
bound
add
add
or
add
add
cmc
nop
inc
inc
movsb
adcb
fstpl
lea
adc
inc
mov
pop
adc
add
mov
jns
inc
dec
cmp
add
add
add
add
add
and
add
add
movsl
mov
into
or
add
add
sarb
arpl
push
mov
mov
dec
fildll
adc
add
add
add
add
dec
mov
out
jle
into
and
push
and
jg
sahf
pushf
insb
add
add
pusha
add
add
mov
sub
add
add
add
or
add
add
inc
mov
loop
scas
divb
and
add
add
or
mov
imul
or
add
push
out
loop
mov
push
ljmp
ds
addr16
mov
aas
mov
scas
out
lahf
out
adc
xchg
scas
pop
mov
aad
pop
repz
js
out
jo
sar
xchg
mov
mov
repz
mov
shrb
add
add
arpl
xor
fdivr
mov
add
mov
add
add
fwait
enter
push
adc
pop
mov
xchg
test
popf
jl
adc
mov
int3
mov
push
inc
mov
cs
adc
mov
push
xchg
mov
cli
lock
fisttpll
mov
outsl
lcall
xor
insb
add
add
es
push
xor
add
add
test
gs
aad
mov
lahf
sub
push
in
lret
mov
push
cwtl
jae
repnz
cmpsl
pop
out
xor
add
mov
cli
push
cli
cwtl
adc
add
js
ror
sahf
inc
lret
jnp
mov
xchg
dec
aam
dec
imul
cmp
shrb
in
imul
in
push
xchg
movsl
push
push
fisttpll
outsl
loope
push
iret
sbb
mov
ss
test
mov
iret
cmp
and
arpl
in
dec
pop
jne
add
add
add
push
adc
mov
xchg
lcall
adc
sbb
mov
mov
shl
mov
mov
push
jge
lahf
or
mov
add
ljmp
jp
lahf
repz
mov
pop
xor
aam
negl
add
add
add
add
jnp
stos
pop
sbb
add
add
push
outsb
mov
mov
and
xchg
ljmp
jne
or
add
add
add
add
pop
sub
je
cmp
sub
stos
push
mov
cmp
mov
loopne
loope
loope
dec
mov
icebp
repnz
ror
fstl
cmp
mov
cld
orl
mov
xchg
pushf
subb
add
xchg
lock
add
push
adc
mov
or
add
add
sub
add
sub
outsb
jmp
inc
pop
push
jl
sbb
sbb
sbb
sub
stc
add
add
add
faddl
add
add
mov
mov
xor
data16
mov
mov
pop
adc
add
add
xor
xchg
popa
enter
mov
sbb
testb
popa
xor
cmp
or
lds
out
mov
dec
mov
mov
add
or
jg
cmp
jl
mov
or
cmpsb
flds
outsl
push
fucomip
fdivl
aad
push
fdivr
sarl
add
test
addr16
daa
add
add
add
dec
lahf
mov
shr
lock
adcl
fmul
push
add
sub
in
add
xor
xlat
js
push
lds
lods
jnp
cld
pop
cwtl
and
mov
jnp
jo
mov
ja
push
sbb
jo
jo
test
push
add
add
inc
add
lods
fldcw
mov
cli
pop
mov
aad
mov
sub
add
add
imul
mov
add
aaa
loopne
es
add
add
add
add
push
jge
and
mov
xchg
ret
jo
adc
bound
add
add
sahf
or
pushf
aas
adc
mov
mov
int3
xchg
shll
add
add
ljmp
mov
std
xor
add
add
add
sbb
sbb
mull
mov
pop
sub
add
add
outsl
push
inc
add
add
sbb
cmpsb
movsb
xor
sub
add
add
idivb
mov
mov
adc
sub
mov
vdivss
jae
in
jo
mov
sub
clc
add
bound
js
mov
pop
outsb
mov
inc
stc
dec
jbe
call
or
lds
cmc
cmpxchg
fcoml
es
lcall
jno
dec
pop
ljmp
mov
lret
fwait
xchg
clc
sarb
add
add
inc
je
cmovg
cwtl
rorl
dec
testl
xchg
mov
fwait
cli
test
movsb
aaa
stc
imul
cltd
out
or
sbb
test
mov
add
add
add
add
and
add
add
add
add
sub
add
add
out
mov
xchg
xchg
sbb
xchg
inc
add
add
dec
add
add
push
mov
ret
hlt
inc
mov
fiaddl
add
add
add
fisubs
repz
aaa
idivl
lahf
lcall
enter
cmp
imul
jmp
push
pop
mov
add
popa
gs
in
xchg
inc
cmp
push
add
leave
ss
pop
or
mov
xlat
clc
stos
bound
daa
inc
testl
xchg
push
int
inc
xor
pop
push
imul
je
es
add
add
jmp
mov
pop
adc
outsb
mov
cmpl
mov
jnp
shr
sub
add
add
call
outsl
mov
sub
add
add
sbb
push
mov
xchg
loop
repnz
decb
push
lods
ja
sahf
dec
xor
push
fwait
out
mov
dec
mov
shrb
add
lret
pavgb
and
in
js
cmp
add
add
add
xor
das
scas
insb
add
add
jge
aas
adc
inc
adcl
add
add
add
add
add
pop
pushf
gs
mov
mov
pop
push
pushf
inc
movsl
fbstp
test
mov
xchg
xchg
in
mov
xor
cmc
lods
outsb
addr16
add
insb
mov
push
ficoml
push
aam
cmp
xor
fildl
pop
ja
jne
cmp
jno
ljmp
cmp
xchg
ja
inc
mov
shr
adc
cs
adc
add
dec
jns
loopne
adcl
add
add
sub
dec
testb
insl
icebp
ret
pop
inc
and
add
add
add
mov
test
and
xor
xchg
aas
pop
add
add
add
pop
loope
push
push
mov
add
add
jg
pop
sub
fisubrl
jnp
shlb
add
add
jbe
lea
add
ret
xor
dec
mov
mov
mov
ja
sarb
sub
add
add
loopne
sbb
rcr
out
sahf
add
xor
adc
or
fxch
adc
add
and
pop
xchg
stc
mov
add
add
mov
lea
add
add
sbb
jnp
xchg
push
mov
fs
push
xor
mov
sbb
add
add
outsl
stos
xor
push
ja
movsb
jg
pop
mov
mov
pop
aam
addr16
pop
cmp
add
add
push
sub
lods
inc
push
jp
hlt
ljmp
test
inc
popf
cmc
test
inc
add
add
or
mov
adc
sbb
js
mov
fnsave
mov
adc
push
ja
mov
iret
mov
adc
call
add
add
inc
mov
aad
ss
fs
add
add
mov
mov
inc
cmc
dec
lock
pushf
sub
vpshlq
cs
ja
cmp
decb
jmp
cmp
xchg
mov
and
add
add
add
add
add
add
add
test
pop
pop
shll
pop
out
xchg
sbb
rcrb
mov
enter
add
xchg
or
add
add
mov
add
fcomip
and
jl
push
push
js
xor
xor
sbb
dec
add
add
leave
fldl
test
jae
dec
mov
mov
jp
xor
mov
or
add
add
xchg
sti
rcr
jno
mov
ret
lahf
shlb
lcall
add
add
mov
pushf
adc
lret
bound
test
sti
add
add
add
xchg
sub
add
add
add
add
sub
add
add
and
shrl
pop
xlat
leave
repnz
mov
mov
add
add
stos
pop
out
stos
push
push
inc
sub
add
add
inc
mov
mov
add
outsl
sbbl
jb
mov
nop
les
add
push
aam
aaa
cmp
nop
sahf
sub
pop
scas
lods
aaa
pop
add
add
jno
xchg
sbb
aam
cltd
xor
cs
cmp
cmp
movsl
in
rcrb
jb
adc
fisttps
add
add
mov
adc
push
testb
add
pop
sahf
jo
pop
adc
add
es
cli
or
inc
add
add
xor
xor
add
mov
daa
push
inc
mov
add
add
add
add
xor
xor
test
shlb
add
add
out
add
add
insb
mov
gs
fisttpll
mov
mov
push
mov
filds
lahf
ret
dec
dec
add
add
insb
add
add
inc
or
ss
mov
mov
js
push
xor
sub
lcall
shll
mov
test
add
add
out
lock
lods
lret
nop
mov
rcl
cmpb
push
fldcw
addr16
lea
fidivrl
idivb
stos
dec
dec
add
add
add
add
add
xor
cmpsl
and
xor
dec
mov
outsb
jns
cmp
add
int
sti
cli
push
pusha
mov
cmpsb
and
cmp
lahf
sub
add
add
pop
addr16
cmpsb
mov
les
xorl
mov
ja
fisttps
sbb
imul
xchg
mov
aad
jno
jbe
mov
loopne
mov
pop
add
pop
shl
lret
cmp
sbb
mov
mov
dec
sub
jne
and
add
out
adc
stos
xchg
in
jae
and
sub
outsb
mov
aad
sub
mov
lahf
jge
ficoms
cmp
inc
cmp
inc
mov
and
add
add
mov
lds
add
add
mov
sub
add
add
push
xchg
sub
jle
adc
mov
in
pop
xchg
pop
add
push
lret
xorl
imul
hlt
jp
pop
ds
mov
adc
stos
sbb
jle
inc
pop
outsb
movsb
pop
mov
mov
or
xsha256
cmpsb
rcrl
sahf
aam
gs
adc
std
sub
add
add
arpl
ja
xorb
jne
divl
out
mov
jg
inc
mov
jle,pt
out
lds
mov
xchg
aam
mov
pop
es
test
mov
sub
outsb
adc
aas
aad
lods
xor
add
dec
adc
push
mov
add
cmp
push
push
mov
mov
add
sbb
inc
cmp
mov
out
or
sbb
sub
add
mul
adc
cld
clc
dec
dec
push
mov
fimuls
dec
hlt
stc
inc
jno
in
and
daa
mov
pop
bound
jo
imul
jmp
add
sahf
xchg
and
add
add
cmp
add
add
dec
fmulp
lock
or
jmp
add
add
add
push
rep
jbe
fcoms
pusha
add
add
mov
add
add
fwait
fs
popa
outsb
addr16
lret
mov
fstpl
cld
cmp
inc
push
stc
cmp
test
mov
pusha
add
add
loope
add
add
push
jb
shrb
add
movsl
or
hlt
aam
movsl
pop
mov
push
call
inc
mov
ja
jl
mov
hlt
or
add
add
add
add
mov
add
aas
stos
jns
mov
js,pn
mov
mov
mov
and
add
add
cs
adc
mov
mov
rorb
and
mov
out
xchg
and
arpl
andl
out
pop
ldmxcsr
push
sub
sbb
sub
imul
add
je
test
add
add
test
lods
mov
add
add
aaa
add
add
add
rcr
mov
jmp
rol
dec
fstl
std
cmpsl
popa
mov
mov
mov
shr
iret
lcall
pop
dec
jle
jnp
add
add
sbb
lret
scas
sub
add
add
stos
es
mov
push
shr
ror
xor
fnstcw
add
add
sub
lahf
cmp
mov
inc
and
add
add
cmp
cmpsl
out
fcomp
mov
dec
mov
mov
sti
pop
imul
xchg
bound
add
add
insl
pop
push
jne
mov
add
add
rcr
fsts
dec
movsl
scas
jecxz
dec
mov
add
lret
cmp
or
add
add
dec
xchg
mov
dec
hlt
sub
add
add
clc
aas
mov
lret
mov
mov
cld
jle
dec
mov
aam
pushf
adc
cmpsl
decl
jno
mov
outsb
scas
jge
add
add
sbb
in
push
enter
js
xchg
stc
push
ficoml
push
dec
fdivs
loopne
cmp
pop
aam
addr16
add
add
cmp
mov
add
add
add
hlt
adc
cmp
add
add
ret
sub
idiv
and
insb
add
add
sbb
fistpll
fistps
sub
daa
xor
mov
out
jnp
adc
sub
pop
leave
aas
push
or
add
mov
mov
les
mov
mov
inc
out
mov
aad
mov
mov
and
add
add
into
jbe
pushf
imul
call
mov
insl
sub
sbb
push
adc
add
add
ja
pop
dec
outsl
test
add
xlat
out
fsubrs
mov
add
es
add
and
jb
xor
dec
loope
inc
fwait
stos
dec
add
add
lods
enter
jg
sti
xor
mov
lods
mov
dec
or
add
fbld
cmp
lcall
mov
mov
loopne
mov
jp
sub
inc
fimuls
add
add
inc
lret
xlat
mov
add
addl
add
add
mov
mov
enter
les
dec
ret
jb
lret
or
add
add
xchg
mov
in
mov
lock
js
cmp
fldt
adc
or
sbb
add
add
cmp
test
pop
xor
test
sahf
cmp
in
cli
push
test
pop
sub
add
add
mov
dec
cmp
int
lds
mov
mov
pop
mov
imul
jle
loope
call
add
xchg
xor
mov
add
xchg
das
call
and
add
add
out
jo
pusha
add
add
pushl
xchg
pusha
add
add
xchg
lds
rcrl
push
mov
add
add
mov
mov
xchg
jae
shlb
jecxz
test
movl
cmp
inc
ret
das
movsb
cmp
cmp
add
mov
push
sbb
cmp
cmpsb
push
or
mov
leave
push
sahf
mov
shlb
orl
sub
or
lret
jg
adc
aam
and
add
mov
pop
pop
fmul
iret
adcl
sub
lahf
add
test
incb
fstl
ds
pop
mov
cmc
loopne
es
sahf
cmp
aam
in
jg
push
rcr
movsb
or
add
add
sub
je
enter
insl
pop
xchg
add
add
add
outsl
sbb
inc
stos
rol
push
das
and
adc
pop
xlat
jbe
inc
mov
sbb
shlb
add
mov
dec
mov
mov
idiv
and
scas
add
repz
rorb
mov
and
add
add
ss
leave
cld
jg
fwait
inc
add
add
nop
jg
pop
ret
mov
inc
mov
into
mov
out
pop
out
xchg
aam
xchg
bound
add
stc
fdivrs
loope
and
jmp
in
add
xor
int
jnp
mov
repnz
xor
pop
xlat
mov
adc
add
insb
mov
mov
pop
sahf
push
mov
lock
xchg
popa
sbb
add
lods
insl
adc
xchg
mov
aam
dec
jb
pop
add
shlb
sbb
pop
div
push
mov
inc
pop
loopne
inc
mov
adc
aas
das
notl
add
sbb
mov
dec
pop
rcr
add
mov
cmpsb
in
aad
and
cmp
add
ja
jne
lcall
add
add
sbbl
jne
push
pop
cmp
xchg
das
inc
add
add
sub
sub
js
popf
xlat
les
mov
pop
sar
lret
iret
pop
xor
xchg
es
inc
je
js
lahf
xlat
or
dec
xchg
sub
xor
loope
in
inc
mov
nop
jae
pop
outsb
popa
arpl
filds
dec
mov
add
mov
add
jns
js
cld
mov
sti
repz
add
ficompl
pop
test
dec
ja
dec
mov
and
add
add
add
add
add
clc
mov
sbb
mov
inc
in
test
stos
fisubrs
add
add
int
movsb
mov
push
xor
mov
fstpl
mov
inc
ret
inc
push
out
imul
mov
mov
dec
movsb
aam
inc
add
add
dec
add
add
pop
mov
add
imul
add
add
outsb
dec
iret
bound
sub
add
call
outsb
xor
in
js
insl
scas
lods
clc
fs
jecxz
add
add
jle
mov
sbb
add
add
outsb
aad
out
out
sarl
push
cmp
pushf
dec
mov
mov
andb
add
add
in
subl
fiadds
xchg
mov
out
push
popa
das
add
div
sbb
shr
sbb
sub
or
sub
add
add
push
inc
pop
sub
add
add
xchg
sbb
imul
fisubs
fisubrs
add
add
xor
clc
sbb
mov
sarb
bnd
jbe
mov
jecxz
psrlw
or
mov
sti
sub
xchg
mov
add
fisubl
push
fildl
pop
and
ds
stc
xchg
test
add
pop
jnp
testl
int
and
add
add
pushf
popl
mov
stc
jg
sbb
push
outsb
sub
fimuls
add
add
mov
out
mov
and
mov
fs
lods
adc
mov
std
test
aam
add
add
add
sbb
xchg
data16
clc
and
push
jg
pop
lods
jmp
jp
ljmp
inc
rorb
add
add
loop
adc
dec
hlt
and
add
add
push
jno
push
sub
add
add
sub
mov
int
mov
sahf
add
add
add
xor
leave
pushf
mov
inc
add
add
insb
mov
sbb
push
xchg
scas
push
stos
jp
outsb
or
xor
push
cmpsl
sbb
pop
mov
adc
mov
pusha
mov
outsb
cbtw
add
dec
call
sub
push
test
mov
lods
fwait
icebp
cmp
mov
inc
mov
in
lods
in
fsts
in
dec
imulb
lods
or
fwait
adc
cld
cmp
cmp
test
add
add
in
cmp
data16
xor
add
add
add
test
inc
sub
daa
push
mov
push
pushf
xchg
test
mov
fcoml
mov
add
push
les
pop
popa
aaa
ljmp
jno
and
add
jo
dec
add
add
mov
mov
add
add
add
sub
xchg
outsb
mov
xchg
movsl
mov
mov
lcall
filds
add
repz
mov
mov
mov
fsubrs
add
xor
jnp
je
cmp
rcll
add
add
in
add
add
push
out
and
add
push
mov
gs
cmpsl
ds
inc
xor
xchg
cmp
add
jns
test
movl
and
xchg
fidivrs
sbbb
cmp
mov
mov
push
dec
test
or
in
aaa
cmp
scas
hlt
xchg
orl
int3
shlb
add
add
mov
inc
les
mov
add
les
sub
xchg
pop
mov
add
cld
jmp
leave
sub
push
fidivs
push
sub
sub
lea
loope
fchs
subb
mov
data16
popl
cli
pop
add
add
add
fadds
mov
mov
fisubrl
add
test
xchg
insl
mov
and
jb
in
sub
fisttpl
dec
gs
movsb
or
add
add
ds
mov
cmp
lds
push
xchg
xchg
in
adc
add
add
push
inc
adc
loope,pt
popa
inc
fsub
stc
sbb
push
pop
insl
pop
jl
aam
inc
add
add
nop
lret
fsubrs
cld
movzwl
cmpsl
pop
ret
je
jl
lcall
mov
xchg
adc
repz
arpl
add
add
sahf
neg
sarb
jae
iret
dec
jbe
mov
inc
out
mov
int3
mov
add
add
mov
add
test
das
or
add
add
out
xor
outsl
inc
mov
xor
pushf
shl
jg
les
test
hlt
cmpsb
leave
xchg
in
pusha
add
add
mov
push
xor
and
fisubrl
lods
pop
aas
xor
lock
fidivrl
xchg
pop
outsb
mov
mov
push
repnz
nop
stos
or
jae
dec
add
add
mov
add
add
mov
add
notl
movsb
mov
adc
mov
push
popf
pushf
lcall
pop
adc
push
stos
pop
and
out
jnp
jge
jbe
or
add
add
xor
incl
dec
mov
xor
add
ja
push
aad
sbb
and
and
add
add
pop
cmp
clc
in
mov
sbb
jb
add
add
inc
fisttpll
icebp
sbb
jl
sbb
add
add
cmpl
jbe
in
lahf
and
test
and
icebp
fimuls
add
fistpll
shl
pop
jno
lahf
scas
rolb
jg
xchg
xchg
mov
add
add
xchg
xchg
icebp
ret
sub
jne
pop
jns
lods
push
push
cmp
add
add
lock
pop
stc
pop
fstpt
add
add
add
add
add
inc
add
add
xchg
fs
test
mov
in
push
sub
cmpsl
data16
jnp
outsb
or
out
dec
cmp
adc
inc
xchg
rorb
add
add
pop
adc
add
add
test
mov
push
push
jg
in
adc
push
mov
fwait
in
loope
ljmp
push
lret
mov
divb
add
add
add
add
add
rcrb
std
or
mov
testl
fs
mov
add
add
loop
lcall
sub
call
add
add
sti
pop
mov
or
fcoml
or
bound
loopne
sub
daa
push
sub
jnp
ret
into
lret
into
add
shl
mov
add
add
aaa
xlat
loop
insb
mov
std
cld
jb
fstps
inc
ljmp
add
add
and
add
add
mov
fistpll
push
or
iret
fists
mov
jg
daa
frstor
add
lods
mov
jp
mov
in
inc
mov
in
add
stos
and
add
add
xor
cmpsl
pop
aas
int
pusha
mov
lret
add
add
repz
insl
ret
pop
jne
jge
mov
mov
add
add
add
pop
sub
aas
rcr
mov
adcb
or
jg
adc
add
roll
loopne
add
add
jecxz
out
xlat
mov
fnsave
jb
and
add
add
and
enter
rcr
std
sahf
jp
sahf
dec
pop
gs
std
mov
pop
sub
add
add
add
mov
test
add
adc
sub
add
add
xchg
push
mov
cld
or
cmp
pop
loop
int
cmc
xlat
fsts
and
inc
pop
movsb
cmp
adc
pop
sub
add
add
loop
add
add
push
xchg
push
fcoml
aad
int3
xorb
aam
addr16
pop
mov
pop
and
decb
cmpl
add
add
add
loop
dec
fnstsw
xor
push
dec
rorl
stc
push
stos
mov
add
fdivp
orl
dec
fadd
push
pop
jl
movsb
out
xor
or
addr16
inc
imul
add
sbb
and
add
test
loop
mov
les
push
sub
jb
jle
xor
add
add
add
inc
sbb
jnp
xchg
outsl
xchg
mov
xlat
sbb
dec
add
add
cmpsb
mov
add
add
add
aam
push
mov
test
inc
push
in
std
jg
enter
insl
adc
cmp
add
add
or
jnp
cltd
xchg
std
push
sbb
xchg
cmp
cmp
and
clc
sub
add
add
sbb
call
pop
and
add
add
mov
ror
repz
add
add
push
loope
loopne
or
pop
out
aad
sahf
xorl
mov
xchg
mov
mov
aas
in
cmp
mov
mov
push
dec
add
add
cmp
add
add
lods
mov
test
cmp
cld
and
cmp
mov
std
jae
inc
mov
mov
pop
in
cmpsl
stc
mov
das
add
push
adc
mov
mov
sub
pusha
mov
add
add
mov
jp
divl
xchg
mov
pop
jg
stos
jecxz
test
mov
mulb
adc
andl
dec
fcompl
ret
pop
push
inc
nop
in
mov
in
jns
popf
or
add
add
dec
cmpsl
inc
add
add
cvtdq2ps
jl
mov
push
inc
and
add
add
in
sub
cmpsl
inc
add
add
sbb
movsb
insl
and
add
add
repz
movsb
cwtl
dec
dec
xorl
xchg
mov
add
adc
xor
xchg
add
mov
aas
xor
sub
dec
xchg
frstor
add
add
add
add
icebp
rcrb
sbb
push
push
sbb
sahf
xchg
fildl
repz
dec
sub
add
add
loopne
push
lock
pop
idivb
mov
ja
jne
add
push
das
mull
mov
adc
cltd
sub
add
add
sahf
ret
mov
mov
adc
test
ffree
dec
add
add
mov
or
add
add
mov
sbb
xchg
mov
mulb
inc
mov
jne
dec
pop
or
jp
das
add
add
add
sbb
cwtl
sbb
fmuls
add
add
add
add
cmp
and
add
add
sbb
jbe
hlt
lahf
and
add
add
fisubl
mov
sub
add
add
inc
ret
enter
pusha
mov
addr16
pxor
imul
and
mulb
insl
lods
cmp
push
lret
xlat
test
push
inc
sbb
or
add
add
mov
xlat
and
add
add
leave
pusha
add
add
adc
int
lock
add
add
or
add
add
ret
repz
iret
xchg
xor
cmp
add
jl
sbb
cmc
xchg
test
jge
mov
addr16
sbb
push
aam
insl
sbb
mov
add
jge
lret
add
subb
stos
pushf
mov
add
add
dec
add
add
pop
mov
iret
shlb
add
add
rorl
add
add
or
add
add
and
add
add
add
mov
int
dec
sbb
in
fnstcw
jp
dec
mov
movsl
jmp
fldt
xor
arpl
push
fisttpl
leave
push
inc
mov
mov
add
mov
dec
mov
repnz
jae
add
in
out
push
movb
aad
mov
pop
add
mov
clc
jnp
adc
push
pop
cmp
push
dec
pop
jp
pop
mov
xchg
cmc
fsts
or
add
add
xor
gs
je
lahf
add
mov
out
cmp
and
add
add
and
add
add
sti
fldt
ret
add
add
mov
dec
sub
popa
and
fdivrl
mov
pop
mov
outsl
xchg
aaa
outsl
jno
xor
outsb
xchg
jns
das
lock
ret
mov
addr16
pop
mov
push
mov
push
and
ret
lds
cmp
add
add
xor
cmpb
add
add
lock
cli
lret
ret
push
push
and
mov
add
mov
push
les
in
ficoms
fstl
add
add
add
add
sahf
and
int3
sub
jl
sub
add
add
add
clc
fsubs
call
add
add
jbe
das
xchg
cmp
insl
dec
into
xorb
fidivs
push
fnstcw
stos
pop
mov
adc
add
add
int
pop
ja
sub
add
add
sub
add
add
cmp
jg
mov
xor
or
cmc
inc
mov
roll
add
add
push
insb
mov
ds
mov
add
add
add
add
fidivrl
mov
movsb
or
add
add
mov
add
sbbb
cmc
inc
insl
mov
add
sarb
in
fstps
in
imul
push
sub
add
int
adc
lods
adc
mov
mov
mov
add
add
add
add
cld
subb
jb
pushf
addr16
mov
push
aaa
stc
push
jnp
js
and
add
add
adc
add
jmp
inc
add
add
in
pop
dec
push
xchg
mov
lock
xor
jne
or
add
add
cmpb
add
add
add
stc
jnp
std
pop
jg
rorl
stos
lods
mov
add
add
leave
jg
jge
mov
add
xchg
jo
scas
leave
out
es
sbb
lret
xlat
jle
aam
mov
sarl
jp
jnp
jmp
inc
push
cld
loop
dec
mov
push
movsb
cmp
cmp
xchg
out
pop
or
adc
negl
addr16
out
lcall
fisubl
fnop
pop
fbstp
mov
je
mov
mov
add
jle
ljmp
stos
adc
add
out
add
add
cmp
popf
mov
ljmp
mov
fistpll
jle
inc
insl
imul
pop
mov
mov
cltd
cmp
add
add
add
add
add
push
lods
jl
or
rol
mov
cmp
push
jno
jp
clc
or
add
add
jnp
pop
lcall
cmc
out
pusha
add
add
stos
das
std
pusha
mov
and
mov
add
add
shrl
incl
mov
movsb
mov
into
push
xchg
cmp
add
add
mov
repnz
ret
mov
jae
add
add
xchg
adc
push
sbb
add
add
mov
loopne
cmpxchg8b
dec
sbb
imul
sar
xor
data16
sub
add
add
mov
aas
dec
mov
in
xchg
sbb
sub
add
add
lds
mov
stos
mov
push
stc
imul
jle
or
add
add
popf
jb
mov
hlt
inc
add
add
imulb
add
add
dec
add
add
nop
leave
lret
lret
mov
sub
add
add
dec
jmp
sbb
mov
add
ficompl
adc
add
outsb
mov
ficoml
add
cmpsl
inc
std
jns
xor
lea
add
add
rclb
lret
add
xchg
jge
mov
in
rorl
add
add
jg
mov
mov
cwtl
negb
add
add
cmpsl
fdivl
sub
mov
mov
mov
clc
leave
and
add
add
arpl
mov
lock
insb
mov
mov
bound
push
xlat
es
dec
adcb
mov
add
add
add
add
inc
inc
rcrl
out
push
sarl
gs
pusha
mov
mov
sbb
jns
icebp
and
add
add
icebp
sub
rep
dec
add
add
mov
out
lcall
xchg
add
add
imul
adcl
jae
cltd
mov
add
sbb
xchg
out
sub
jmp
mov
cmp
xor
fidivrs
push
fdivrl
mov
sti
mov
es
jb
roll
mov
out
les
jne
pop
sbb
ficoms
mov
pop
mov
mov
jp
xchg
call
inc
dec
mov
scas
cmp
imul
mov
mov
pop
dec
orb
add
add
add
pushf
insb
add
add
xor
add
in
out
movsb
fcoms
call
add
mov
add
inc
mov
inc
jns
sub
xchg
fsubrs
out
into
ss
out
or
arpl
dec
sbb
add
xchg
sbb
pushf
adc
cld
stos
cmp
xor
xlat
cs
mov
das
xchg
cmpsb
gs
pop
sub
push
jecxz
int
iret
pop
sahf
pop
mov
dec
inc
push
mov
and
add
add
add
or
test
add
pop
ror
repz
loope
cmp
push
push
xchg
nop
fistpll
add
add
cmp
inc
jae
repnz
aam
add
ret
ja
mov
cmp
mov
cmp
scas
sar
js
push
add
pop
lret
mov
sbb
jno
add
add
and
mov
add
mov
sbb
in
pushf
inc
add
add
movsl
sarb
mov
fbstp
and
dec
mov
mov
repz
or
test
dec
bound
jbe
adc
add
add
add
jmp
test
fldt
add
add
xchg
jne
mov
adcb
aaa
hlt
cmpsb
mov
rcrl
add
pop
int3
popf
xchg
push
popf
sbb
push
add
or
lea
fnsave
add
add
and
out
fidivrl
add
and
add
add
imul
pop
xor
dec
xor
add
add
das
and
add
add
fldenv
fidivs
popa
pop
addr16
fwait
or
push
lret
in
push
ficomps
mov
jle
xor
fcompl
rcl
into
test
push
dec
sub
cli
stos
fnstenv
push
lods
fadds
add
add
or
add
add
xor
cmc
lea
loope
cltd
in
cmp
add
stc
inc
xchg
arpl
cs
cld
cmp
inc
mov
jo
add
add
imul
insl
xchg
cwtl
aas
cmp
test
cwtl
aaa
outsl
lea
cmp
out
dec
push
sbb
iret
cmp
in
ss
je
mov
add
add
xchg
out
inc
mov
shrb
push
push
pop
jo
mov
es
push
xor
add
add
jl
loope
sbb
leave
mov
add
add
js
repnz
stos
sub
add
add
dec
mov
sahf
cli
ja
push
pop
inc
add
add
stc
adc
add
add
jae
imul
pushf
jns
into
add
pop
adc
add
inc
js
add
add
call
pushf
cmp
mov
ja
xchg
jnp
adc
loope
mov
add
mov
std
std
fcmovne
mov
add
add
adc
out
das
push
xor
popf
pop
idivl
sub
add
add
and
orb
inc
add
add
loopne
dec
mov
stos
popa
ja
or
mov
mov
add
jmp
add
add
je
out
or
add
add
adc
scas
pusha
add
add
mov
and
mov
push
int3
adc
int3
andl
xchg
jle
rcll
add
mov
add
add
daa
push
loopne
adc
and
adc
push
fwait
dec
shl
call
shll
add
ds
or
add
add
jb
xor
add
add
cli
repnz
test
add
push
daa
inc
mov
fistpl
pop
sbb
push
xor
jge
int
pusha
mov
push
mov
rclb
xchg
sbb
mov
pusha
add
add
sbb
scas
push
dec
iret
pusha
mov
xchg
adc
daa
imul
aaa
jbe
rcl
mov
or
mov
mov
adcl
xchg
icebp
in
in
lods
pop
cmp
pop
push
inc
daa
pusha
mov
mov
mov
int
stos
sbb
push
outsb
push
out
aam
xchg
inc
xchg
xor
cli
out
push
repnz
add
adc
mov
add
add
push
mov
pop
mov
lods
js
cld
jmp
jbe
fisubs
stc
sbb
dec
sbbb
push
pop
mov
fnstsw
je
jl
mov
and
or
loopne
out
lret
outsb
lahf
xchg
dec
mov
xchg
mov
or
add
add
pop
lock
xor
mov
ja
test
rcll
nop
out
inc
push
jl
and
add
add
sub
sbb
fcoms
xchg
push
sarl
add
push
mov
jp
orb
pop
imul
lret
xchg
aam
sub
add
add
jl
out
xor
jbe
out
mov
icebp
orl
lods
pop
pop
jmp
rolb
mov
inc
nop
and
loop
ret
cmp
adc
ud1
dec
or
fidivs
in
cmp
adc
push
lcall
dec
push
arpl
outsl
mov
and
xor
jg
pusha
add
add
mov
insb
add
add
movsb
data16
sub
add
add
inc
dec
mov
aaa
adc
mov
add
add
and
cld
aad
sbb
dec
jno
dec
mov
or
or
dec
std
fistl
or
lods
je
mov
add
sub
sbb
add
mov
adc
shll
rcrl
mov
loopne
rolb
sbb
dec
push
push
xor
fcmovne
popa
inc
xchg
sub
loope
stc
cmpsb
xchg
xlat
xor
mov
jle
out
mov
add
add
mov
mov
push
dec
jb
push
and
fs
test
leave
adc
pop
dec
push
sub
xchg
insl
fidivl
cmp
dec
mov
iret
push
adc
and
xchg
mov
dec
scas
lods
sub
jp
aas
mov
cmpsb
mov
push
mov
mov
decl
out
pushf
cli
out
pop
ret
in
iret
shlb
lock
cmp
add
add
pop
rolb
pop
push
in
notb
dec
fldcw
jmp
lret
inc
mov
and
jbe
int
pop
xchg
jbe
andl
mov
push
adc
push
xchg
out
bound
add
add
dec
or
push
xchg
jmp
jne
mov
int
stos
mov
movsb
push
jae
add
add
xlat
mov
add
push
scas
fs
sbb
pop
imul
ret
iret
je
fstl
shrb
jp
jle
out
mov
add
add
mov
imul
movsb
cmp
clc
mov
jle
test
cmp
stc
mov
mov
adc
mov
push
fisttpl
lcall
test
inc
or
fsubrp
cltd
pop
insb
mov
mov
mov
and
lret
xchg
xchg
cmpsb
sahf
fstpt
add
add
cmp
adc
sub
repnz
add
add
jae
outsb
out
cmpsb
sub
stos
repnz
insb
add
add
ret
add
in
add
leave
jns
daa
sbb
fistpl
mov
je
dec
add
add
sbbl
pop
xor
mov
shr
fbld
out
test
and
cmpsb
lods
inc
jle
fs
jnp
add
mov
testb
fdivrl
loope
mov
mov
lret
mov
call
stos
dec
ret
xor
insl
in
lods
movl
daa
je
xor
add
add
pushf
sub
add
add
enter
jecxz
add
add
aas
enter
add
mov
das
xor
push
dec
mov
add
add
and
lock
mov
add
cld
loope
jp
das
lds
mov
xor
lds
add
push
inc
pop
inc
idivl
cmp
add
inc
sub
dec
mov
mov
pop
jae
fcomp
adc
inc
add
add
insb
mov
mov
mov
and
add
add
mov
jg
aaa
sbb
mov
mov
jg
add
add
push
pop
rcl
je
jne
mul
adc
xorb
add
push
mov
pop
mov
inc
add
add
add
mov
fimull
adc
add
add
mov
pop
movsb
popa
add
add
mov
add
mov
jb
jo
std
cmp
rcrl
popf
and
call
loop
fdivrs
xchg
jl
movsl
in
adcb
and
sbb
xchg
scas
sub
add
add
rcrb
push
xor
mul
add
add
add
add
add
push
mov
jnp
or
or
dec
xlat
mov
mov
fwait
or
add
pop
xchg
popf
cltd
jmp
xor
jge
inc
xchg
icebp
inc
mov
pop
inc
pop
sub
push
out
push
dec
in
pop
repz
lea
xor
sbb
add
sbb
jle
mov
mov
sub
lcall
mov
sahf
outsb
jmp
sbb
mov
sub
add
add
add
lock
rorb
loop
out
rcrb
ret
add
add
xchg
push
inc
popa
cmc
cmp
and
add
add
add
mov
sbb
add
add
mov
test
ffreep
imul
pop
sbb
mov
add
in
and
add
mov
jno
lods
push
and
add
add
fucomp
or
mov
mov
add
es
pop
xchg
inc
sub
fstps
pop
pop
jl
xchg
dec
test
in
cmp
add
sbb
add
add
xchg
test
jnp
pop
sbb
outsl
adc
insl
cltd
mov
push
lea
push
inc
outsl
test
sarb
mov
inc
mov
imul
jbe
mov
mov
xor
sub
add
add
push
push
lahf
mov
mov
pop
pop
cwtl
dec
push
push
jae
cld
xchg
decb
add
add
jne
inc
mov
fidivl
jbe
negb
subl
xor
loopne
outsb
es
add
sub
add
add
mov
rcl
jmp
push
xchg
add
xor
in
in
dec
mov
jp
xor
arpl
fs
add
inc
mov
sbb
add
add
add
add
add
fdivr
cld
or
add
add
inc
add
add
jb
mov
add
pushl
pop
pop
jge
xlat
sub
bnd
test
mov
ss
pop
test
je
mov
xchg
add
dec
outsl
xchg
outsb
mov
mov
clc
push
inc
lock
add
add
cmp
add
add
sbb
mov
mov
ljmp
add
add
lods
push
shll
into
push
sbb
inc
arpl
or
fidivrs
test
pop
jmp
sub
out
jp
mov
mov
push
inc
idivl
sbb
add
jbe
jae
xchg
mov
jmp
jae
je
dec
mov
xchg
enter
in
in
stos
orl
add
add
jmp
add
add
add
sti
rorb
add
add
jbe
enter
fidivl
inc
out
push
or
or
xchg
and
add
add
add
add
inc
mov
pop
xor
leave
sub
adc
bound
push
xchg
sahf
idivb
imul
add
add
rcrb
add
add
jae
lods
icebp
pop
pusha
mov
test
add
add
mov
add
add
lret
stos
loopne
pop
lret
mov
test
dec
xchg
shll
sub
add
jmp
and
test
mov
mov
xor
cld
jne
mov
testb
ret
cmpl
add
add
add
repz
daa
mov
leave
es
fdivr
xchg
pop
mov
fsubs
scas
add
add
add
inc
inc
cmpsl
outsl
dec
aaa
cli
loopne
dec
add
add
scas
inc
pop
push
shrl
mov
mov
in
test
mov
add
mov
call
pop
push
outsb
fadds
xor
or
add
add
fdivr
jle
lahf
jp
outsl
out
cmp
add
push
stos
pop
mov
hlt
xor
sbb
dec
int3
ror
cmpsl
mov
and
pop
xchg
out
fistps
mov
mov
xchg
lods
mov
shr
add
add
pop
mov
mov
add
add
iret
pop
jecxz
push
xor
sbb
jae
xor
xchg
inc
cmp
add
or
jp
pop
iret
mov
pop
jo
ret
xchg
cmp
lds
add
add
pushf
out
mov
cli
je
jb
popa
mov
ret
add
loop
imul
cmp
add
mov
dec
mov
push
push
scas
movsl
mov
cs
fistps
cmpsb
mov
rorb
pop
mov
inc
jns
inc
and
and
fcmovnb
sbb
jo
mov
loop
xchg
fstps
add
add
mov
dec
push
pushf
lds
mov
lret
fistpll
inc
ljmp
iret
andb
add
add
add
add
add
add
mov
and
xchg
xlat
in
xlat
inc
mov
pushf
stc
stc
leave
mov
inc
mov
add
add
daa
dec
xor
add
add
cwtl
pop
jmp
jmp
and
add
add
pop
cmp
in
mov
pop
mov
inc
dec
add
add
outsb
stos
xchg
scas
pushf
jge
push
mov
lds
adc
lds
mov
mov
gs
out
add
or
js
popa
and
add
add
fsubl
mov
rep
push
and
cmp
ljmp
std
xor
push
jmp
ret
push
lock
sbb
shll
paddsb
add
add
mov
xchg
iret
sbb
mov
shrd
stos
and
add
add
sbb
repnz
rcrb
sahf
and
pop
cmp
add
add
jno
xchg
xchg
inc
scas
mov
repz
add
add
daa
inc
fiaddl
stos
mov
xor
call
mov
dec
gs
pop
fcoms
xchg
imul
inc
iret
push
push
xorl
mov
mov
jns
inc
mov
sbb
shlb
stos
xlat
sti
inc
add
add
popa
sbb
add
les
or
and
jmp
ljmp
adc
fcmovnb
lds
add
add
mov
mov
mov
sbb
je
lcall
mov
pop
cmp
xchg
mov
add
add
testl
test
test
pop
ret
and
add
add
inc
mov
xchg
sub
add
inc
or
and
add
add
inc
add
add
aas
ret
les
pop
xchg
out
and
xchg
dec
mov
icebp
scas
mov
mov
inc
pushf
sahf
sbb
bound
push
mov
lahf
scas
stos
aad
xchg
inc
xchg
xchg
cs
and
mov
imul
inc
es
fcmovnu
mov
or
mov
and
lcall
mov
jmp
aad
imul
jno
xchg
in
pop
dec
sbbb
jo
sub
xor
or
add
and
and
add
int
aad
stos
and
add
add
fcompl
movsb
sub
sbb
inc
pop
xchg
cwtl
popf
push
lods
dec
adc
cltd
fcompl
add
add
add
xor
hlt
pop
inc
mov
xchg
jge
popf
vmwrite
scas
add
add
add
mov
sbb
stos
shll
subl
leave
jae
mov
pop
adc
xchg
inc
or
add
add
into
inc
dec
inc
cmp
data16
mov
mov
add
add
add
aaa
ss
jmp
push
ret
dec
cld
mov
cmp
xchg
sbb
pop
lahf
fisubrs
cmp
mov
mov
add
add
jg
push
push
mov
je
jae
jecxz
sahf
mov
and
xchg
test
divl
sub
leave
into
add
add
mov
sbb
add
add
popf
data16
pop
jbe
mov
and
add
add
out
jbe
push
daa
aad
call
es
out
fwait
sub
push
aad
fstl
add
pop
jb
lock
mov
cmp
add
shrl
add
add
cmp
add
add
add
add
sub
jp
test
in
cli
mov
loop
push
jge
mov
sahf
icebp
popf
fildll
add
lds
add
add
sarb
cmp
out
mov
les
add
add
loopne
xor
lods
pop
sti
dec
add
add
je
ret
mov
imul
fisubrl
xchg
push
or
add
add
and
lret
ljmp
inc
push
mov
aaa
gs
cs
push
mov
xchg
jge
movsl
jle
push
ret
hlt
ret
into
fsts
insl
add
add
in
lock
add
add
add
add
dec
mov
fimull
add
mov
add
dec
xor
pop
cmc
aas
aam
insb
mov
mov
or
or
push
and
dec
shrb
xchg
bound
mov
idivl
daa
push
jnp
push
fsubrp
pop
and
adc
xchg
adc
ss
mov
aam
jg
add
add
mov
je
andl
mov
loope
cmp
mov
mov
cmp
add
add
add
add
out
js
cmpsb
js
lds
add
add
xchg
mov
push
mov
push
xor
and
add
add
sub
dec
mov
dec
inc
mov
mov
orl
add
add
movsl
jp
test
xor
imull
jp
dec
add
add
mov
popf
andb
add
add
add
scas
bound
lock
and
filds
jg
cli
movsl
les
mov
add
lock
inc
clc
fmulp
out
cwtl
jmp
and
or
xchg
sti
push
mov
in
pop
lret
mov
add
add
fisubrl
cltd
fucomp
mov
add
add
outsl
cmc
xor
add
cs
in
cmp
mov
pop
add
add
xor
pop
xchg
jge
insb
add
add
push
in
rcl
cwtl
mov
shll
lods
or
add
add
int3
pop
cmp
in
xlat
ret
lahf
icebp
cmpsb
mov
shrl
cmp
and
xchg
adc
push
sub
mov
mov
mov
push
popf
cwtl
gs
cmp
xchg
lahf
xchg
mov
inc
sbb
mov
add
add
add
cmp
leave
or
add
add
xor
and
add
add
add
add
in
xorl
sahf
jnp
scas
cld
into
in
or
lret
push
lea
test
out
clc
aad
ror
scas
push
push
in
and
jno
dec
add
add
add
stos
gs
mov
out
out
fimull
cmp
add
add
jb
and
out
int3
jno
mov
nop
loope
sbb
dec
add
add
nop
addr16
rcrb
mov
mov
loope
lea
add
cmp
xor
cmp
mov
add
add
add
mov
xor
shrl
xor
gs
cld
pop
daa
jp
mov
jbe
fdivrp
aas
sbb
addl
nop
mov
subl
or
add
add
dec
int3
mov
fwait
jp
cmpl
and
add
add
cs
fisubl
jle
icebp
notl
inc
sub
outsl
cmp
add
add
mov
add
add
scas
nop
call
adc
imul
fwait
add
add
add
and
test
jbe
aam
add
out
jecxz
shlb
add
inc
adc
add
add
push
cld
jns
fs
data16
adc
add
add
mov
int3
test
sub
mov
in
xchg
mov
jnp
xchg
cmp
test
mov
scas
xchg
add
cmp
sbb
iret
xor
add
add
inc
mov
dec
push
fimull
add
add
sbb
repz
add
add
sti
push
rclb
add
add
test
rclb
push
lods
lods
and
mov
jnp
xchg
movsl
or
add
add
pop
data16
aas
jle
push
jg
mov
mov
aad
ja
fldt
add
add
pop
imul
loope
or
ret
cmp
add
iret
or
add
add
add
daa
add
add
add
and
cmpb
cltd
sub
add
add
mov
push
fldl
roll
add
ss
xchg
jmp
jae
adc
cmp
sbb
inc
mov
je
and
test
orl
mov
add
add
popa
add
add
push
sub
in
jb
jno
xchg
cli
pushf
xchg
imul
pop
inc
in
mov
es
dec
daa
aaa
dec
cwtl
loope
out
or
aad
xor
sub
aaa
or
or
add
add
sub
add
add
addb
adcl
add
add
notb
push
xchg
sub
add
add
add
add
in
fistps
mov
test
mov
divb
repz
fucomip
mov
cli
out
pushf
clc
bound
or
fstps
sbb
mov
cmpsl
push
pop
sarb
lahf
icebp
fdivrp
mov
add
add
repnz
imul
or
add
adc
sahf
fcmove
lods
xor
push
test
imull
add
add
insl
movsb
jle
xor
mov
mov
add
add
loop
movsl
bound
add
xor
imull
ret
mov
add
xlat
stos
jo
in
std
subl
xor
jo
mov
jmp
xchg
fiaddl
mov
jns
and
add
add
mov
ds
dec
add
add
jbe
popa
push
ret
movsl
aad
xchg
pop
cld
lds
loope
shlb
add
pop
xor
or
add
add
add
add
adc
jo
rolb
stos
mov
add
add
lahf
jl
ret
std
inc
dec
repnz
das
loopne
add
out
push
lods
imul
and
dec
sub
sahf
inc
add
add
cltd
loop
pop
cli
fldenv
add
adc
mov
mov
sub
js
mov
xchg
leave
ficoms
call
mov
lret
inc
add
add
leave
cmp
inc
and
lods
push
enter
xchg
push
add
add
add
in
sub
add
adc
xchg
divl
and
mov
push
jo
dec
add
add
sub
xor
sbb
mov
or
scas
or
shlb
jmp
sbb
insb
mov
dec
add
add
xor
dec
outsb
sub
push
pushf
aaa
xor
add
add
pop
je
xchg
dec
mov
cmp
pop
imul
pushaw
mov
add
xchg
or
add
sub
pushf
rcrl
fcomp
lcall
and
lahf
and
push
add
sbb
jecxz
outsl
pop
push
ja
gs
or
filds
push
and
and
mov
stc
lret
push
sbbl
movsb
testl
out
addr16
mov
faddl
mov
lahf
pop
stos
dec
jmp
jl
stc
out
clc
jp
fimull
push
dec
fmull
cmp
adc
js
aad
into
xchg
loopne
mov
call
lods
aam
scas
inc
subb
add
push
stc
gs
sbb
sbbb
and
inc
mov
sbb
movsb
cld
lds
add
add
add
add
push
movb
dec
fwait
int3
push
mov
dec
lcall
jecxz
adc
jecxz
sbb
add
add
add
xchg
loopne
lret
jecxz
push
push
repz
in
hlt
xchg
test
mov
fmull
aas
pop
cmpsl
push
xchg
into
push
lret
sbb
pop
es
add
add
add
add
mov
xor
scas
test
push
push
cmpsl
arpl
call
mulb
add
add
dec
and
cmp
leave
adc
add
dec
cmp
xchg
jle
les
xor
pusha
add
add
lods
fs
pushf
cmp
add
cmp
dec
mov
adc
les
xor
add
add
add
xor
ret
subl
mov
cli
aas
imul
data16
insl
sub
push
das
sbb
lods
xchg
ja
jecxz
mov
dec
sub
sub
add
add
ret
add
add
add
rorl
add
add
or
stc
or
add
add
push
fcmovbe
inc
or
mov
xor
jle
cmp
shll
jno
mov
jecxz
adc
scas
jmp
popa
mov
rcrl
lret
xlat
jle
push
sti
faddl
sbb
rcrl
pop
mov
or
push
cmp
add
add
dec
xchg
out
les
mov
add
add
sbb
enter
jmp
inc
xor
outsl
push
std
fsubrl
and
or
add
add
in
adc
sahf
ljmp
pop
out
rorb
add
mov
scas
out
or
inc
add
add
and
add
int3
cmp
xor
pop
insl
iret
mov
jl
add
add
mov
pop
or
mov
mov
shr
xor
gs
add
dec
adc
les
add
fidivs
stos
les
mov
and
add
add
xor
cltd
xchg
repnz
aam
pop
cs
sbb
mov
out
movl
xor
int3
and
add
pop
das
sub
xchg
lods
or
add
ljmp
jl
inc
out
leave
or
add
add
sbb
jmp
push
in
lock
add
add
es
repz
out
ljmp
cmpsl
cmp
roll
add
add
xchg
mov
cmp
inc
fsubs
loope
and
int
jns
sub
mov
and
fcmovb
cmc
aas
ljmp
cmp
adc
fimuls
loop
scas
imul
lds
mov
addr16
dec
popf
jo
lret
stc
adc
ss
fcmovnbe
jo
cltd
xor
cmpsl
clc
sahf
aam
push
lea
enter
adc
pop
ficoml
sbb
xchg
jmp
push
xchg
aas
mov
lock
add
add
mov
in
mov
lods
scas
mov
fmulp
dec
test
xlat
das
ljmp
negb
xor
add
sbb
mov
cmp
mov
xchg
into
dec
mov
cmpsb
inc
test
enter
cli
dec
mov
scas
push
mov
shr
xor
mov
adc
add
lods
movsb
insl
pop
xchg
cltd
jge
aas
pop
or
add
add
and
add
add
es
fnsave
push
xchg
icebp
jl
push
cmpl
pop
adc
pop
and
popa
pop
pop
xlat
mov
nop
mov
push
loopne
dec
dec
cli
aam
push
cli
and
add
add
scas
inc
add
add
mov
adc
mov
lret
out
xlat
pop
das
mov
add
add
jmp
jmp
push
adc
into
cmpsb
or
jmp
lret
arpl
and
add
add
in
andb
stc
jae
into
imul
mov
mov
pop
mov
jp
clc
jmp
add
add
mov
mov
lds
mov
jge
ret
popf
pusha
mov
mov
cmp
add
adc
out
jnp
mov
aaa
test
ret
lds
push
mov
repz
cmpsl
dec
mov
mov
inc
add
add
mov
sahf
insl
xchg
push
mov
imul
mov
in
lods
xchg
dec
repz
mov
daa
hlt
jg
inc
nop
add
mov
lock
and
xor
adc
sbb
add
add
pushf
sbb
mov
imul
xchg
mov
imul
dec
test
loope
arpl
sbb
sbb
loopne
xor
mov
mov
sbb
fisubs
ret
jnp
lcall
or
or
mov
inc
sub
add
add
or
dec
pop
pop
dec
mov
fwait
js
or
mov
xor
pop
cmpsl
pop
push
fistl
and
lahf
je
pushf
mov
and
add
add
addr16
sub
add
add
jns
scas
insb
add
add
mov
add
pop
js
mov
lods
xor
fistps
imul
into
mov
out
arpl
add
pop
and
loopne
jecxz
mov
jge
dec
adc
dec
xor
ja
cli
mov
xchg
pop
adc
or
rorl
xorl
dec
cmc
xor
adc
rolb
mov
add
mov
sbbb
aad
subl
mov
jns
jge
mov
paddsw
mul
loopne
ljmp
add
add
mov
add
cmp
out
ds
pop
sub
iret
jb
mov
add
add
mov
pop
out
pop
fs
lock
pop
jno
or
pusha
add
add
lds
add
add
pop
ja
cmp
mov
mov
lock
add
mov
add
testb
add
add
or
dec
add
add
pop
sbb
lock
push
inc
mov
push
mov
data16
jle
mov
dec
inc
mov
aam
sub
add
add
and
add
add
add
add
add
and
add
add
add
push
imul
xchg
sarb
aas
dec
add
add
test
mov
push
inc
call
in
pop
and
outsb
cmp
rcr
in
lahf
repz
test
mov
hlt
ljmp
xchg
insl
clc
fistl
inc
lret
pop
or
add
add
mov
mov
inc
divl
sbb
stc
mov
cmc
mov
cwtl
pop
popf
addr16
cmpsl
jl
insl
pop
stos
mov
add
jp
dec
loopne
adc
mov
insl
push
push
flds
les
add
dec
add
xor
call
push
sahf
insb
mov
hlt
or
add
add
shll
sbb
dec
shlb
xchg
les
fldl
es
sbb
clc
aad
mov
add
add
fstpt
cmc
fnstcw
push
shll
add
mov
mov
out
mov
push
xchg
xchg
sub
inc
loopne
add
add
out
add
xchg
bnd
xor
ljmp
negl
inc
hlt
push
adc
mov
jno
mov
addr16
fsubl
or
mov
push
mov
xchg
mulb
jle
imul
or
pop
jo
test
jle
mov
pop
jo
push
cmp
jle
push
mov
jb
sub
push
shlb
repnz
fwait
xchg
jnp
fldenv
stos
aaa
xchg
cmpb
test
pop
cwtl
hlt
ljmp
add
test
or
loope
cmc
faddp
mov
cwtl
push
xchg
mov
pop
arpl
add
xor
and
jmp
mov
xchg
inc
add
add
jne
add
add
jo
cmpsl
movsl
imul
cli
push
push
sbb
xlat
bound
add
add
cmc
xchg
sub
add
add
add
es
sti
add
mov
mov
inc
mov
mov
imul
cmpsb
inc
int
push
xchg
out
jle
push
or
add
add
mov
xchg
and
add
pop
test
sbb
jl
stc
pop
leave
arpl
test
add
add
sbb
mov
les
add
mov
pop
sbb
add
add
ja
rcll
stos
xchg
mov
add
add
cmc
pop
outsl
inc
mov
xchg
xor
add
add
jno
daa
push
dec
mov
xchg
and
dec
leave
rol
idivl
fsubl
add
xchg
fsubrp
jmp
das
cs
push
xchg
push
cmp
add
lods
xor
and
pop
sti
cmp
add
fcomps
add
add
push
mov
or
loopne
or
pop
xor
aaa
xchg
mov
arpl
mov
pop
pop
movsl
insl
dec
pop
fstpt
jl
mov
xchg
into
arpl
fadds
add
add
sti
fbld
add
add
mov
add
add
jp
fimuls
rclb
mov
dec
sub
cmp
sbb
or
add
jge
es
add
mov
mov
js
add
add
movsl
dec
jp
mov
push
and
add
add
test
cmp
xchg
sbb
pop
jp
cmp
xchg
in
sub
add
add
dec
add
add
daa
js
add
and
aas
mov
outsb
loop
jmp
and
add
add
js
cmp
add
add
sbb
jo
jb
and
mov
push
aaa
int3
mov
ljmp
mov
sbb
aaa
jmp
popf
xchg
push
lcall
inc
stc
pop
xor
es
mov
es
cmp
dec
add
add
sub
sahf
jb
lock
jmp
sub
add
add
stc
adc
hlt
pop
adc
add
mov
int3
ss
in
mov
add
add
add
mov
dec
sbb
roll
sbb
sbb
add
add
add
add
add
inc
add
add
stos
leave
je
das
mov
push
push
push
lods
mov
iret
lret
aas
imul
mov
push
xor
push
sti
mov
bound
add
add
add
push
loopne
es
shlb
adc
mov
es
fsts
add
shr
or
add
xor
orb
fildl
add
je
jo
lds
data16
pop
in
inc
cmc
xor
jecxz
jnp
aad
push
cld
fstpt
pop
test
sbb
into
rol
mov
jl
movb
add
jbe
int3
inc
add
add
mov
xchg
int3
push
push
repnz
loop
rcrl
push
pop
out
and
add
add
int3
sub
push
add
push
or
aam
jb
push
in
adc
cltd
dec
add
add
adc
fdiv
ss
xor
mov
fisubrl
xor
mov
jg
bound
imul
add
add
pop
or
popa
mov
andl
ljmp
jmp
cmp
pop
into
jl
sar
jl
dec
roll
add
add
mulb
test
push
call
in
jns
outsb
outsl
enter
out
lds
xor
inc
mov
gs
mov
xchg
pushf
cmp
adc
add
push
xor
inc
mov
cmpsb
inc
lods
cmpsb
loopne
outsl
xchg
cltd
lret
movsl
inc
add
add
int3
push
mov
bound
add
add
imul
out
cmpsl
and
mov
lods
lods
mov
jb
adc
cmpsl
push
cmp
add
add
xchg
sarl
pop
bound
bound
jne
push
jge
fbstp
repnz
dec
mov
lods
inc
orl
sub
cld
mov
out
pop
and
loop
add
lcall
add
or
dec
int3
xchg
lds
fiaddl
add
int
cld
pop
iret
or
in
pop
inc
inc
add
xchg
sbb
push
or
add
add
shll
and
pop
dec
daa
aad
inc
mov
stos
fildll
pushf
dec
mov
pushf
push
imul
enter
in
xchg
ljmp
mov
test
add
fisubrl
in
fwait
mov
add
es
add
into
stos
lcall
int
lret
mov
add
pop
sbb
mov
xchg
push
jns
bound
jae
stos
inc
xor
gs
mov
add
loopne
pop
ss
cmp
push
icebp
and
mov
mov
in
les
sbb
adcl
mul
mov
mov
push
ljmp
xlat
cwtl
mov
or
add
add
outsb
lods
mov
ds
mov
add
mov
push
mov
inc
or
add
add
mov
mov
xor
jmp
adc
or
mov
push
out
outsl
jno
push
sbb
inc
mov
je
pop
sbbl
dec
sbb
add
add
jg
leave
push
ds
imul
jb
sbb
add
test
push
inc
mov
aas
rol
mov
pusha
mov
mov
push
sub
insb
add
add
and
lea
imul
test
mov
into
test
aaa
pop
adc
icebp
out
adc
jle
dec
mov
fucomi
lock
push
jnp
mov
mov
mov
cmp
test
push
shrl
add
leave
or
and
add
add
jo
and
adc
add
and
add
add
shlb
and
adc
das
jle
xchg
popf
cmp
movhps
cmp
cmpsb
stc
sub
or
into
mov
or
add
daa
das
pusha
add
add
or
cmp
mov
add
add
dec
loopne
push
jnp
fnsave
add
add
add
pop
in
dec
lcall
in
roll
and
add
add
add
out
sbb
fistps
pop
xchg
jmp
xchg
mov
mov
cli
and
add
add
add
add
add
jle
mov
add
add
dec
lret
push
xor
add
add
jle
pop
lcall
punpckhbw
add
add
push
inc
inc
lea
fisttps
lea
mov
subl
add
xchg
sub
cmc
je
cmp
lahf
xorb
dec
xor
add
add
popf
addr16
adc
dec
mov
inc
add
add
scas
push
and
jne
jns
test
add
fucomip
and
jecxz
clc
scas
pop
xchg
push
testb
insl
fsubrs
test
pop
push
and
or
sbb
repnz
add
add
xchg
iret
js
mov
stos
xchg
mov
in
iret
insl
insl
rolb
add
add
inc
icebp
cmp
adc
inc
and
add
fldl
add
in
xor
mov
rcrb
jge
sbbl
dec
adc
xor
mov
add
add
add
add
push
popa
xchg
jnp
ret
std
sti
push
mov
aas
repz
jns
mov
outsl
cmp
enter
imul
dec
std
adc
jno
push
pop
sub
aad
add
add
add
xchg
sub
add
add
aam
pop
aaa
addr16
xor
test
adc
add
out
sbb
mov
mov
push
jmp
in
cmpsl
sti
dec
and
iret
arpl
lcall
rcll
sub
add
add
insb
mov
test
xchg
rcll
adc
mov
add
add
mov
arpl
jmp
mov
mov
call
gs
mov
add
add
dec
or
add
add
and
mov
add
add
dec
fwait
ja
aas
xor
call
add
add
add
dec
mov
lock
push
cmp
cli
outsl
addr16
stos
and
add
fsubl
les
cmp
leave
fs
push
cmp
dec
pop
inc
cmpsl
in
call
xchg
add
popf
movsb
cmp
add
add
test
scas
jle
add
insl
or
add
add
testl
fisubl
fwait
or
dec
xor
mov
mov
or
add
add
add
add
pop
jmp
inc
push
inc
das
arpl
mov
add
jp
test
jb
xchg
aas
sti
add
add
dec
sub
loopne
sbbl
mov
in
mov
roll
loopne
add
add
add
in
pusha
mov
jnp
mov
mov
jbe
mov
out
into
rorl
jle,pn
xor
sub
add
add
add
pop
lds
arpl
arpl
add
add
cmc
pop
loopne
push
out
sub
cmp
fdiv
cmp
insb
add
add
lock
xchg
push
cmp
lods
fdivrp
popf
or
add
xchg
sub
js
and
add
add
xor
lock
test
add
or
cmp
dec
out
add
cmp
outsl
js
imul
test
or
addr16
nop
lods
imul
loopne
mov
cmp
stos
sarb
push
push
ljmp
loopne
add
add
test
xor
repz
data16
int3
push
and
fwait
adc
jne
inc
hlt
mov
sub
mov
inc
mov
dec
xor
mov
ds
push
mov
loopne
negb
popf
mov
add
sub
cmc
orl
add
in
pushl
push
sbb
insl
adc
sbb
xchg
ljmp
mov
cmp
adc
add
pop
xor
faddl
add
push
pop
xchg
jmp
sub
ror
mov
push
push
imul
jnp
icebp
mov
add
outsl
mov
in
out
pusha
add
add
jp
push
pop
lret
xor
mov
sbb
cmp
xor
and
dec
jnp
mov
add
add
insb
add
add
push
sbb
enter
dec
jmp
icebp
ljmp
add
lods
mov
pop
popf
shlb
and
add
add
shlb
loope
dec
push
inc
mov
lock
pusha
add
add
push
clc
jb
aam
and
add
add
pop
aam
pop
pop
inc
mov
adc
add
add
lahf
mov
int
sbb
stos
or
mov
test
mov
xchg
mov
test
mov
rorb
xchg
xor
push
pop
jle
shr
sarb
inc
push
jnp
mov
in
insl
sbb
pop
jecxz
jg
add
add
mov
sbb
cld
mov
pusha
mov
mov
ret
dec
add
add
and
add
add
daa
out
xor
sub
add
add
push
test
jg
fmull
push
push
repz
add
add
add
sub
add
add
mov
scas
inc
add
add
out
dec
add
add
loop
lcall
add
add
xor
js
lcall
add
add
add
add
xor
xor
adc
lret
imul
rcrl
push
cmpsl
outsl
movsb
fmull
pushf
cmp
add
add
outsl
pop
pop
pop
mov
sbb
iret
pop
in
ja,pn
pushf
jb
test
add
add
pop
xor
mov
nop
inc
jnp
dec
fldcw
lods
lods
aam
jae
jg
mov
dec
nop
xchg
add
add
lods
sbb
mov
int
mov
xchg
cltd
dec
add
add
mov
sub
cmp
rorb
dec
add
xorb
add
add
mov
add
add
das
testb
xchg
inc
add
add
shll
cmp
jg
inc
push
dec
movsl
mov
mov
inc
jb
mov
xchg
scas
inc
jnp
icebp
pop
es
cmp
push
insl
out
imul
outsb
dec
enter
dec
sbb
jg
mov
adc
jmp
xor
add
add
shrb
sub
add
add
mov
inc
jnp
mov
add
add
pop
push
cld
mov
jb
sub
jne
dec
enter
lret
lds
xchg
mov
xor
or
add
add
cli
pop
out
leave
ljmp
mov
xchg
and
add
add
sub
add
add
lods
cmp
inc
test
inc
fld
fcmove
inc
push
pushf
mov
icebp
add
lock
iret
add
stc
pop
lds
push
mov
and
fimuls
fcoms
andl
fsubl
pop
bound
add
mov
movsl
mov
das
fwait
cmpsb
xchg
lods
xlat
stos
adc
xchg
rcrl
imul
add
add
stc
mov
push
ds
pop
push
xchg
lods
jno
das
pop
adc
mov
test
add
add
das
ror
add
inc
add
add
jo
stos
pop
adc
hlt
cmpsl
and
inc
push
cmp
mov
lock
mov
mov
push
stc
sbb
inc
mov
sbb
mov
mov
pop
sbbb
add
add
mov
sti
insl
adc
add
pop
jb
add
add
adc
jae
lret
dec
sbb
and
inc
pusha
add
add
shll
loop
dec
test
add
add
test
jae
js
jae
or
add
add
jnp
sbb
stos
xchg
inc
add
add
gs
orl
xor
fsubrl
add
cli
fcomi
adc
cld
popf
mov
pop
loope
xchg
movsb
leave
jmp
pop
int
out
add
add
jge
dec
add
add
add
pop
sbb
lcall
cmp
push
or
add
add
add
add
sub
add
add
ljmp
mov
fidivl
daa
cmpsb
mov
pop
xchg
add
or
cwtl
cmp
push
out
stos
push
ja
adc
add
mov
push
lret
add
add
and
hlt
es
add
add
dec
stos
cwtl
cmp
push
pop
or
add
add
add
add
pop
dec
mov
mov
mov
push
xchg
dec
adc
fs
inc
pop
and
pop
xorl
ss
mov
cltd
out
fldenv
push
jmp
mov
imul
icebp
push
mov
aad
addr16
mov
xchg
lahf
inc
inc
cmp
mov
push
sbb
imull
add
adc
add
out
mov
push
and
add
add
mov
add
jmp
xchg
int
or
add
add
mov
popa
in
stc
inc
outsb
rolb
add
dec
mov
in
gs
pop
ss
test
or
movsb
sbb
lods
ret
icebp
fsubrl
add
iret
rcll
pushf
cmpsl
jle
fisttps
and
insb
mov
stos
scas
lods
inc
inc
push
dec
out
fucom
outsl
sti
sahf
cwtl
idiv
icebp
pop
loopne
das
rcrb
inc
add
es
mov
cmp
jg
mov
pop
or
mov
cbtw
adc
pop
sub
add
lods
sub
leave
push
mov
and
jno
leave
or
ss
out
ss
aaa
int3
mov
in
and
xor
out
aaa
lods
stos
insl
inc
dec
mov
or
cmc
stc
inc
sahf
adc
fstpt
sti
and
mov
add
xchg
jno
adc
add
add
decb
mov
mov
stos
cmpb
lret
dec
outsb
repz
adc
ljmp
out
push
adc
add
sub
add
add
add
das
leave
push
aam
push
dec
call
cli
jl
cmp
clc
push
xchg
mov
pop
scas
sub
add
add
jns
aam
rclb
insl
arpl
ljmp
add
packssdw
push
pop
mov
repnz
stos
adc
adc
jecxz
add
add
sub
mov
add
add
add
jne
mov
or
add
add
add
adc
sbb
mov
add
hlt
fsubp
adc
add
stos
insb
mov
mov
subb
sbb
add
add
movsb
lds
out
sub
push
adc
add
add
inc
add
add
or
int3
loopne
xor
add
add
add
pop
gs
fildl
mov
add
pop
scas
sbb
decb
add
add
add
add
mov
les
cmpsb
movups
cli
int
mov
aam
push
inc
fldlg2
popf
mov
mov
out
jge
lret
jne
pusha
add
add
jae
pop
push
sub
movsl
pop
or
add
add
in
dec
mov
in
pop
push
mov
hlt
ljmp
add
mov
add
mov
jge
add
add
mov
shll
insb
add
add
mov
leave
jp
in
int3
inc
mov
add
add
dec
adc
add
add
ljmp
jo
mov
sahf
jno
aad
jg
xchg
xchg
daa
xchg
stos
mov
lea
jo
into
test
aas
jl
cmp
adc
in
xor
pop
addl
jg
adc
adc
out
out
sub
cmp
pop
push
aaa
jno
mov
pop
test
dec
add
add
add
push
outsb
in
aas
jge
imul
dec
stc
movsl
pop
leave
pusha
mov
imul
rcr
fmull
mov
add
add
add
add
sahf
adc
mov
sbb
movsb
repz
fsts
cmc
pop
dec
jle
pop
sub
cmp
imul
mov
and
mov
add
add
roll
add
add
mov
jns
xchg
sbb
inc
inc
or
add
add
push
in
sub
jbe
inc
mov
add
imulb
dec
mov
mov
adc
fnsave
aam
sahf
icebp
js
cli
setle
shll
mov
cmp
mov
inc
outsl
cltd
sti
pusha
add
add
ja
in
icebp
inc
popa
sub
xchg
fs
mov
jle
cmp
add
icebp
push
sub
add
add
mov
cmp
sbb
scas
adc
shl
ja
push
sarl
out
dec
icebp
xor
icebp
xchg
sahf
ss
call
pop
ja
loop,pn
add
add
ja
or
lret
add
jmp
mov
cld
leave
es
mov
add
add
add
ljmp
add
add
add
add
or
arpl
add
jecxz
and
and
test
pop
idivb
mov
and
mov
imul
rsm
ja
xchg
push
loopne
mov
aad
jmp
mov
sub
cs
push
ret
lret
jo
xchg
mov
add
xlat
adc
mov
inc
add
add
fisubs
add
add
xor
and
outsb
push
fiadds
mov
mov
mov
add
add
pop
jmp
notb
or
dec
int
push
insb
add
add
sarb
addr16
sbb
in
out
mov
popf
jbe
mov
xor
or
xlat
fdivrs
gs
xchg
xlat
pop
aam
fadds
mov
mov
and
add
in
mov
inc
scas
push
lahf
loope,pt
aaa
popf
jl
fstpl
and
add
add
mov
push
lock
push
mov
add
add
and
add
add
push
test
dec
outsb
sub
ds
outsl
cmp
aas
nop
and
xchg
pop
pop
leave
sbb
lock
int3
enter
sub
callw
bound
repz
push
mov
cmp
imul
mov
dec
inc
sbb
lret
sbb
add
push
test
lret
inc
rolb
adc
add
pop
iret
jg
add
add
add
add
lret
popf
inc
adc
cmp
add
imul
jmp
jns
aas
inc
jl
mov
out
lret
in
sbb
cmpsl
cmpl
add
adc
add
dec
or
lcall
in
cmp
mov
sti
inc
add
add
xchg
nop
xchg
cmp
dec
add
add
sub
push
mov
ljmp
adc
sub
mov
lahf
xchg
mov
and
sahf
xor
dec
add
add
pop
outsl
out
test
xor
pop
pushf
mov
add
outsl
in
jl
jnp
or
add
add
add
fst
mov
add
mov
js
loopne
add
add
ljmp
add
add
insb
add
add
xor
aad
xlat
adc
and
add
add
dec
les
std
cmp
insb
mov
lock
add
add
sarl
adc
or
add
add
iret
lret
jns
jns
outsl
loop
cs
xor
add
pop
and
add
add
negb
ret
movsb
inc
jmp
dec
mov
cwtl
lds
loopne
aad
out
ret
mov
mov
mov
add
clc
sbb
add
in
test
imul
popf
mov
daa
out
mov
cmpsb
pop
sbb
out
sub
test
icebp
mov
xchg
mov
add
outsl
out
sub
add
add
jnp
aaa
in
push
mov
add
lcall
add
add
fdivl
lea
sarb
add
or
add
add
xchg
lds
in
xor
in
mov
add
add
add
xchg
sub
sub
cwtl
lahf
sub
jo
into
or
add
add
sbb
adc
cmc
jg
cmp
in
adc
sub
add
add
add
add
jns
cli
clc
pop
pop
rclb
lds
add
add
xlat
les
lret
fsub
fucomip
mov
fldt
leave
cmpsb
shr
gs
pop
mov
add
js
mov
xor
and
mov
push
repnz
xchg
nop
int
xchg
out
mov
add
add
ljmp
or
jbe
loop
cmc
adc
cld
and
das
xlat
mov
add
adc
cld
arpl
mov
jl
hlt
xchg
data16
rclb
mov
popa
pop
xchg
add
aaa
loopne
gs
aaa
movsl
mov
lods
sahf
test
loop
jbe
xor
mov
pop
scas
out
mov
sub
shr
pop
ss
std
addr16
lret
cmp
dec
mov
decb
add
pop
enter
mov
inc
add
add
imul
icebp
pop
mov
pop
loopne
sub
xchg
flds
or
dec
mov
lods
or
push
dec
cmp
int
add
add
sbb
xor
popf
sub
imul
xlat
mov
outsb
and
add
push
gs
add
cmp
push
sbb
add
add
xchg
shrw
add
add
and
shll
incl
mov
out
out
hlt
jns
leave
mov
das
insb
add
add
stos
out
cmp
pushf
dec
add
add
add
popf
inc
sub
lea
mov
xor
add
add
faddl
inc
xor
xor
daa
lock
adc
add
add
add
xchg
cmp
pop
push
push
adc
test
xchg
pop
gs
in
jns
push
xchg
or
add
add
pop
pop
mov
mov
mov
imul
and
add
add
jbe
sti
gs
sbb
and
add
add
xor
aaa
lods
jmp
dec
cli
mov
add
jns
adcb
dec
mov
cli
add
pop
push
stos
lods
pop
jmp
and
xchg
imul
fadd
add
xchg
mov
dec
jb
jl
sub
add
add
dec
fldt
imul
mov
dec
ja
add
add
bound
mov
scas
inc
add
add
dec
add
add
ja
xchg
movsb
sbb
out
xchg
cmp
lods
imull
sbb
mov
push
jle
repz
in
mov
ss
mov
aas
in
add
jnp
fcom
mov
mov
add
hlt
mov
dec
cmp
mov
mov
mov
loop
pushl
mov
xor
mov
cmc
inc
or
add
add
mov
xchg
pushf
xchg
fadds
out
das
mov
xchg
xchg
add
mov
xchg
inc
lods
sbb
dec
fcomps
ja
and
add
add
cmpl
add
push
inc
mov
mov
test
in
push
lahf
jge
jmp
jbe
enter
or
lods
orl
add
popf
int3
xchg
adc
inc
add
add
pop
xchg
out
pop
push
mov
ror
hlt
xor
stos
repz
adc
adc
lcall
add
add
jo
mov
mov
mov
sbb
cwtl
push
imul
xor
sub
imul
mov
dec
add
add
jne
std
inc
and
add
fwait
aas
pusha
add
add
daa
add
mov
mov
or
jecxz
or
sbb
cmp
sar
sti
xchg
pop
mov
cmp
test
cs
xor
mov
aad
or
mov
sub
out
ja
dec
mov
push
push
cmp
sahf
test
add
add
leave
xchg
and
or
div
dec
mov
cmpsl
adc
jae
xchg
insb
add
add
andl
aad
push
push
into
xchg
mov
outsl
pop
lahf
in
add
mov
shlb
mov
adc
into
mov
inc
mov
mov
mov
xor
and
popf
mov
sbb
in
shl
jno
or
pop
adc
sbb
sbb
add
add
add
repz
add
add
jne
out
inc
push
sub
aad
lret
sbb
loopne
sub
sbb
cmp
out
push
cmp
test
push
add
add
push
scas
lods
cltd
rolb
add
pop
push
and
lcall
lds
add
rcr
imul
adc
add
add
and
ret
jecxz
sub
iret
cmc
mov
movsl
sub
add
add
nop
pop
pop
pop
and
add
add
or
cmp
scas
scas
pop
scas
repnz
sbb
lods
mov
add
ds
shl
sbb
add
bound
std
push
decl
in
jnp
sub
test
scas
xor
mov
ror
inc
data16
pop
xor
scas
ret
loop
mov
pop
inc
push
dec
pop
cmpsl
pop
subb
ror
shll
arpl
push
jo
imul
std
xor
incb
add
in
xor
mov
mov
popf
rcll
push
inc
repz
add
testb
clc
adc
inc
pop
test
add
add
rolb
sarl
fcmovu
push
sbb
cmp
pop
inc
mov
xor
movsb
es
add
add
add
inc
and
mov
add
push
mov
push
aaa
cwtl
es
jns
ficomps
in
jmp
add
les
dec
jecxz
out
mov
lds
inc
mov
movsl
mov
mov
pop
in
lods
outsb
mov
add
jge
mov
data16
orb
ficompl
hlt
cwtl
ret
pop
lret
dec
pop
dec
xchg
movsb
test
push
stos
lret
ljmp
stos
or
add
lods
add
add
add
lds
push
mov
ljmp
add
add
inc
add
add
mov
in
pop
shlb
mov
push
sub
jne
std
bswap
xor
sub
add
add
sub
repz
sub
jb
lds
outsl
adc
mov
mov
shll
add
add
add
loopne
push
sbb
das
lret
jbe
ret
test
je
cmpsl
xchg
mov
xchg
aam
add
add
xor
nop
sub
addb
lret
add
add
add
add
add
inc
mov
aad
xor
jl
in
aam
push
in
jo
adc
add
add
mov
ds
add
add
sub
add
add
movsb
mov
xchg
add
add
mov
sbb
add
add
inc
in
add
add
add
add
add
add
add
pop
mov
push
add
add
add
mov
xchg
lock
sbb
movsl
fsubl
add
xor
stc
and
add
test
out
stos
jg
in
call
add
fsts
test
enter
stc
pop
cmpsb
out
fcos
lret
cmp
mov
imul
inc
mov
lahf
sbb
add
movsl
adc
mov
mov
or
inc
mov
mov
repnz
movsb
sbb
scas
inc
add
add
add
add
add
mov
stc
or
add
into
push
pushf
imul
ret
dec
call
mov
dec
push
dec
ljmp
or
hlt
in
jns
inc
ret
mov
add
pop
mov
mov
dec
push
push
dec
stc
scas
cltd
adc
loope
adc
sarb
add
add
add
add
add
jb
xchg
sbb
xor
stos
cmp
add
add
mov
add
cli
jp
daa
mov
pushf
in
cmpsb
mov
cmp
mov
fldenv
aaa
dec
add
add
nop
daa
jo
and
add
add
add
mov
or
in
mov
lods
mov
cmp
call
xrelease
hlt
jo
int
inc
cvtps2pi
das
mov
mov
mov
out
mov
int3
xchg
pop
adc
adc
add
add
cmpl
je
sbb
xor
add
add
mov
int3
das
popf
adcb
add
push
adc
mov
pop
out
adc
xor
add
add
add
std
mov
lret
bound
movsb
add
jg
sbb
add
cmc
mov
jnp
outsb
ret
pop
sbb
add
lret
pcmpgtw
cs
insl
in
pusha
add
add
ret
cs
pop
pop
ficoms
in
popa
outsb
mov
shll
addr16
fcompl
sbb
mov
add
jnp
and
dec
cli
push
movsb
gs
add
add
ljmp
mov
hlt
test
mov
sbb
fcmovnb
aam
mov
dec
jae
push
imul
aad
push
lods
and
pusha
add
add
mov
loope
jne
push
in
jo
add
add
jle
fiaddl
lods
aam
pop
xorl
add
add
icebp
addr16
int3
lret
mov
adc
cld
mov
pop
pop
jae
adc
and
add
cmpsb
sbb
and
add
add
jne
add
add
imul
sahf
jge
push
mov
push
mov
dec
out
adc
loope
and
mov
mov
lret
bound
fadds
stos
bound
push
add
add
add
pop
ret
push
xlat
pop
sbb
outsl
mov
addb
loop
mov
mov
xchg
xchg
inc
lret
sbb
dec
iret
outsb
jno
cmp
repnz
cmp
add
push
add
std
xor
mull
sub
add
xlat
mov
cmp
cmp
mov
mov
popa
xlat
jb
xchg
jp
in
dec
imul
mov
pop
cmpsl
fiadds
add
add
fdivrl
aam
insb
add
add
stos
jo
data16
mov
inc
dec
sub
add
add
mov
cmc
insl
jne
adc
add
dec
les
add
test
subb
mov
jmp
mov
data16
inc
sbb
add
add
mov
mov
arpl
add
add
add
enter
ja
cmc
mov
add
jno
xor
cmp
and
add
add
add
stos
add
adc
outsb
enter
shr
xchg
cmp
dec
mov
adc
push
or
mov
iret
xchg
mov
add
add
repz
mov
in
inc
mov
fdivs
add
add
add
iret
push
es
vandnps
ret
jl
rcrb
imul
mov
pop
inc
pop
cmp
and
jo
pop
sbb
push
int
inc
lcall
xchg
cmp
jns
test
xchg
or
sahf
jecxz
sbb
in
leave
jnp
adc
mov
fmul
sbb
cli
pop
test
ljmp
bound
loop
incb
push
and
pusha
add
add
mov
imul
mov
sub
sbb
sbb
insl
cmp
dec
adc
add
add
ss
or
add
add
jns
sbb
xchg
jmp
les
add
aam
leave
adc
mov
add
mov
sar
imul
dec
shll
shll
out
data16
inc
cmp
out
hlt
es
scas
nop
imulb
mov
dec
xor
lds
xchg
out
sbb
into
push
icebp
movsl
inc
mov
and
xor
mov
cmp
jae
lock
in
mov
mov
or
pop
sub
sub
aam
cmp
ret
add
add
lret
inc
aas
test
jno
adc
mov
mov
fwait
orb
jb
lock
lret
add
pop
sub
lret
imull
in
popl
add
add
add
js
inc
daa
dec
popa
dec
push
lds
repnz
mov
jae
imul
es
and
lods
movsl
cltd
dec
leave
mov
add
add
or
add
add
push
sub
out
jl
js
sar
sbb
jo
push
xor
hlt
movsl
pop
jb
enter
push
cmpsl
inc
fidivrl
rcll
std
dec
add
add
inc
js
mov
mov
iret
lret
xchg
mov
imul
int3
rcl
lahf
cmp
add
add
add
mov
mov
xchg
ja
dec
mov
ds
xor
ja
xchg
pop
or
ds
mov
ror
ja
cld
jle
daa
in
xlat
and
dec
orb
repnz
imul
test
js
add
add
pop
sbb
add
jns
xor
cmp
xor
add
add
iret
pop
mov
inc
sub
add
add
pop
out
xchg
fistl
inc
xchg
add
add
and
add
add
ja
in
inc
add
add
add
lds
prefetch
imul
add
add
mov
nop
xor
sub
add
add
add
add
cwtl
je
mov
sbb
xchg
outsl
fucomp
push
fistps
push
test
dec
out
or
repnz
xchg
mov
mov
adc
mov
push
inc
cmpl
inc
sub
xchg
add
inc
insb
add
add
add
sti
fsubrp
jl
adc
rolb
loope
dec
xchg
push
stc
inc
lea
pop
les
jae
nop
incb
cs
dec
add
add
sub
add
add
add
stc
clc
cwtl
xchg
jns
sub
mov
xlat
jmp
jecxz
fstpl
add
inc
mov
sub
add
add
dec
add
add
test
mov
imul
add
adcb
mov
in
cwtl
push
mov
in
xchg
test
add
or
les
pop
xchg
and
popf
sti
and
int
fisttpll
add
add
mov
lods
ljmp
adc
inc
in
aad
mov
mov
xchg
sahf
inc
or
mov
mov
jl
in
out
cs
xor
lds
mov
xor
mov
dec
cltd
cld
rcrl
or
add
add
andl
adc
sub
pop
popa
inc
mov
jle
aad
stos
mov
hlt
and
mov
xchg
mov
add
arpl
or
add
add
xchg
int3
xchg
and
fsts
mov
inc
popf
add
mov
add
add
stc
lret
lret
xchg
pop
jp
fdivs
add
add
xchg
dec
mov
and
jmp
imul
leave
jo
dec
add
add
aad
fld
xchg
out
lcall
add
sbb
enter
xchg
or
cmp
leave
stos
ss
sti
inc
push
sbb
ja
and
add
add
out
mov
sub
mov
scas
cmp
test
add
add
cmpsb
iret
cld
pop
adc
popf
sub
add
add
add
add
add
repz
push
imul
lret
aad
cmpsb
pop
imul
subb
add
add
add
lock
and
mov
ficoml
cli
popf
adc
inc
cld
je
mov
inc
rolb
push
cmp
aaa
movsl
test
out
sbbb
ds
cwtl
jae
jne
ss
nop
jo
movsb
adc
sbb
add
pop
gs
jmp
shlb
bound
fwait
mov
jle
dec
enter
add
shll
mov
pop
adc
add
roll
jle
dec
inc
aam
cmp
pusha
mov
and
add
add
les
aaa
leave
in
stc
dec
mov
and
mov
scas
fstpt
add
mov
call
or
call
cs
and
arpl
test
cmpsl
fmuls
cmp
xchg
pop
pop
dec
sarl
and
add
add
daa
push
test
scas
mov
jmp
mov
inc
shrl
loopne
cmp
mov
jle
pop
push
je
popf
nop
into
cmp
add
add
imul
add
mov
rcll
leave
cltd
loope
dec
or
mov
int3
inc
mov
sub
jmp
mov
inc
aad
push
aaa
jno
mov
add
add
loopne,pt
xchg
in
lcall
add
mov
mov
je
mov
scas
stos
pop
ret
jno
pop
mov
stos
jl
fdivl
add
add
xchg
jl
sar
xchg
dec
sbb
jae
xchg
jp
xchg
mov
std
popa
add
out
mov
add
add
adc
imul
fcmovbe
mov
add
add
sahf
scas
cmpsl
lcall
lds
mov
js
cmp
add
add
leave
mov
sbbb
ficompl
mov
adc
mov
aaa
jecxz
or
add
add
es
stos
xchg
lds
pop
push
into
dec
int3
xchg
imul
add
fiadds
imul
and
test
adc
outsb
inc
fildl
jo
push
sbb
scas
in
mov
je
out
pop
ja
in
outsb
jecxz
arpl
add
rcrb
add
ret
xchg
ret
hlt
xchg
movb
push
cmp
lods
addb
add
gs
sbb
add
add
test
ljmp
add
add
mov
shrl
mov
cmp
or
add
add
aas
xchg
les
adc
imul
add
cmp
lcall
add
add
in
std
adc
ljmp
pop
in
rcrl
insl
and
add
mov
rcrb
or
icebp
jmp
dec
add
add
mov
push
aaa
mov
sub
js
sbb
lret
xchg
das
push
jle
loop
mov
add
add
cmpsl
mov
lods
ljmp
add
add
push
je
lahf
and
add
add
jmp
add
dec
lods
mov
popf
mov
out
lods
ss
pop
in
sub
xlat
insb
mov
iret
cwtl
imul
cmpsl
mov
outsl
pop
fwait
outsl
pop
ljmp
sbb
fs
movsl
lea
popa
ret
out
sbbb
dec
or
insl
dec
fisttpll
jae
push
add
mov
add
add
fsubl
add
add
cmp
scas
or
add
add
enter
out
xchg
aad
inc
data16
push
cmp
lea
add
add
rcl
pop
adc
jmp
dec
pop
cmp
sbb
sbb
jecxz
lcall
iret
inc
mov
out
insl
lods
sbb
jns
les
jno
outsb
fdivrs
popa
pop
adc
loopne
xchg
sub
pop
js
pushf
sahf
and
add
add
mov
loop
je
scas
mov
pop
sbb
jle
fstps
lods
scas
xor
mov
jl
ja
ret
ret
sub
pop
rorb
dec
pop
repnz
or
out
shrb
sub
aas
pop
sbb
jno
dec
mov
pop
sbb
mov
add
add
add
add
add
xor
or
adc
and
cmpsl
lods
jae
or
mov
xor
xlat
int3
xchg
pop
or
add
add
add
add
add
cmp
add
add
add
add
js
jno
add
add
add
das
or
add
add
add
add
push
add
cmp
add
add
xor
scas
inc
sbb
add
mov
mov
inc
or
shr
mov
add
xchg
cmp
lds
xor
push
lock
xlat
sbb
xchg
mov
jb
nop
lds
inc
add
add
in
inc
mov
mov
cltd
testb
ss
fcmovb
mov
jl
mov
dec
push
loope
dec
fucomi
lock
sub
divl
hlt
stos
push
mov
lret
mov
push
xchg
jecxz
xchg
mov
daa
mov
mov
pop
push
lods
pop
jb
mov
gs
int3
rol
jecxz
insl
cwtl
aas
subl
cmp
fldt
in
in
jge
ret
jb
or
sti
cmp
add
mov
add
mov
outsl
fsub
cmp
stos
pop
sti
jmp
add
aas
scas
xchg
cwtl
daa
xchg
outsb
sbb
sub
dec
out
pop
test
inc
outsb
xor
add
add
loop
mov
inc
loopne
cmp
test
lcall
add
paddw
sub
jns
mov
fdivr
dec
xchg
mov
sub
add
dec
xor
aad
mov
mov
push
stos
dec
mov
outsl
fucomp
sub
add
add
add
cmp
mov
add
rolb
popf
push
mov
lods
movl
mov
out
std
mov
dec
mov
aad
adcb
mov
das
filds
fldt
mov
inc
push
push
imul
mov
mov
sbb
lret
mov
mov
hlt
sti
xchg
aaa
xor
test
ret
sub
add
add
jns
mov
jmp
mov
les
lock
sub
loopne
sub
mov
jle
xor
dec
mov
add
add
add
push
fstl
adc
push
repnz
cmp
scas
and
popa
pop
pop
mov
push
in
inc
jmp
mov
test
or
in
dec
loope
sbb
add
add
sarb
mov
fcomps
cmpsl
leave
ja
jmp
mov
jle
out
mov
mov
pop
es
aaa
push
or
jg
mov
flds
add
add
add
add
repz
lds
ffreep
xchg
js
sbb
add
adc
add
add
adc
xor
sbb
push
aam
sti
out
ret
xchg
in
stos
jp
hlt
mov
cmp
nop
push
pop
imul
pushf
mov
leave
repz
push
xor
adc
adc
or
mov
outsl
lret
into
inc
cmp
dec
mov
inc
mov
out
out
movsl
test
cmpsl
jl
popa
clc
pushf
mov
dec
pop
jae
loop
and
add
add
sarl
pusha
add
add
mov
push
add
add
add
nop
hlt
scas
cmc
in
mov
stos
arpl
add
xor
add
mov
mov
add
xor
arpl
jecxz
and
add
add
add
add
mov
outsl
popa
xchg
out
mov
cmp
cmp
or
dec
add
add
and
add
add
shlb
add
out
sbb
pop
test
xchg
adc
pushf
push
and
insb
mov
cmp
add
mov
push
xchg
subb
leave
in
clc
mov
sub
icebp
daa
ret
sbb
movsb
adc
add
add
xchg
and
add
add
in
rcl
fldl
add
negl
jge
mov
add
add
jp
jg
stos
pop
sbb
add
jo
mov
sbb
sahf
sbb
add
add
xchg
movsl
pop
es
loopne
movsl
cmp
xchg
rorl
popf
lods
sarl
xchg
xlat
clc
add
or
int
call
add
add
out
add
add
imul
xchg
add
add
and
inc
ret
dec
mov
test
fsubs
mov
adc
add
add
cltd
add
call
dec
mov
stos
pop
push
mov
mov
shlb
add
add
or
add
add
jno
out
mov
xchg
scas
insl
pop
inc
in
dec
jb
adc
add
add
sbb
adc
loope
daa
aaa
xchg
insl
pusha
add
add
pop
mov
add
add
sub
mov
add
add
dec
into
gs
pop
xchg
or
add
test
test
pop
pushf
jnp
or
push
outsl
pop
pop
pop
aam
xor
fstpl
call
xlat
inc
repnz
ret
sbb
dec
xchg
sahf
mov
add
imul
add
out
jne
push
lods
test
icebp
jb
or
sub
add
add
iret
scas
jl
cmp
add
int
nop
lret
mov
std
jecxz
add
add
in
mov
clc
stos
and
cmpsl
popf
xchg
inc
popa
mov
repnz
or
add
and
out
pop
dec
sbbb
insl
pop
ret
sub
mov
add
add
sub
iret
pop
inc
dec
shll
std
jno
inc
mov
add
add
add
add
dec
push
ja
add
add
add
add
add
cmc
push
add
add
add
icebp
ljmp
subb
pop
jae
ds
fisubs
fiaddl
out
mov
dec
xchg
sub
mov
and
flds
xlat
in
cmpb
dec
push
int3
fcomps
mov
add
add
ret
mov
rorl
fucomip
lock
and
add
add
mov
sbb
and
cmp
jnp
jns
fwait
insl
mov
mov
jle
sarl
pop
inc
mov
mov
adc
dec
add
add
jl
popf
and
clc
dec
cltd
addb
or
stc
adc
mov
pop
inc
dec
cmpps
add
add
jns
cli
iret
add
mov
decb
add
push
int
jle
push
push
lods
inc
dec
mov
inc
add
add
loope
mov
cmpsl
popf
fildll
or
adc
add
add
fstps
add
mov
inc
mov
sbb
add
dec
test
mov
les
inc
cmpsl
ss
sub
sub
add
add
das
cmpb
dec
push
mov
lret
xchg
fldenv
or
add
add
sti
dec
insb
add
add
mov
test
lcall
mov
into
sahf
add
inc
popa
and
add
add
sub
xor
cmpsl
mov
mov
add
mov
mov
sub
iret
fisubs
add
add
xchg
cmc
cmp
mov
mov
in
sub
in
popa
imul
stos
negb
push
in
mov
add
add
lods
jae
lahf
pop
stos
ss
data16
xchg
jl
gs
mov
adc
and
ret
lds
cmp
aas
test
xchg
sub
gs
cs
sub
add
add
lret
xchg
clc
fdivs
inc
arpl
loop
mov
ds
lahf
outsl
sbb
pusha
add
add
pop
mov
cmp
popf
popa
mov
add
jg
sub
add
add
or
add
add
add
add
push
daa
iret
iret
adc
cmc
add
or
gs
cs
dec
outsl
mov
std
add
add
pop
jmp
cmc
inc
rol
mov
stc
dec
ja
adc
gs
mov
in
hlt
sbb
xchg
ds
jp
test
enter
push
outsl
sbbl
mov
pushf
adc
mov
jns
push
insb
mov
ljmp
fwait
cmp
add
add
add
mov
mov
mov
pop
pushfw
xchg
sbb
sub
scas
adc
pop
cld
test
jmp
pop
jno
add
add
dec
add
add
xlat
bound
jp
into
aaa
lea
add
mov
pop
mov
or
add
add
nop
dec
push
cld
imul
fxch
push
andb
add
add
add
add
push
xchg
jne
push
jo
jne
mov
iret
insl
cmpsb
dec
insl
cmp
add
stc
and
sahf
pop
adc
pop
push
loope
mov
pop
pop
xchg
outsb
add
add
add
scas
sub
movsl
and
jo
stos
lea
fmuls
adc
xor
add
fucom
cmp
and
je
sbb
pop
cmc
cmpsb
inc
mov
mov
jmp
add
cwtl
mov
jo
mov
orl
shrb
sbb
jge
add
inc
add
add
adc
pop
and
sub
or
add
add
xchg
ss
add
add
add
jg
mov
add
add
push
inc
add
add
inc
call
jae
xchg
ds
jnp
shr
or
adc
push
lea
mov
shlb
std
leave
fyl2x
push
push
repnz
out
xchg
mov
push
in
movsb
xchg
mov
insb
mov
int3
and
add
add
aaa
sub
add
add
fwait
arpl
fwait
adc
jnp
rol
push
push
xor
testl
add
add
mov
fistps
loopne
mov
xchg
adc
add
add
or
scas
mov
inc
mov
mov
dec
fists
mov
push
sbb
cmp
dec
push
insl
lret
xchg
pop
std
jo
add
add
or
add
mov
outsl
pop
insl
out
mov
sti
pop
jecxz
out
inc
xchg
dec
sub
push
sub
adc
adc
pop
in
call
add
add
add
mov
imul
stos
sbb
push
clc
mov
lret
cmpsl
xchg
add
add
mov
xchg
add
add
pop
mov
int3
lds
outsl
and
add
pop
pop
add
enter
jbe
xor
jge
inc
es
ds
add
sahf
loope
pop
dec
add
add
sbb
xchg
inc
xchg
add
pop
mov
mov
addr16
outsl
sub
push
pop
dec
out
push
inc
js
sbb
push
sub
add
add
add
add
ret
add
add
add
mov
rcl
hlt
cmpsl
insl
ljmp
aaa
daa
mov
test
jle
movsl
jb
ljmp
mov
mov
lcall
fucomp
cld
mov
add
add
add
add
inc
sti
sub
lret
cmpsb
out
sub
add
add
popa
icebp
inc
jge
scas
xor
arpl
and
loop
jnp
inc
add
push
xchg
sarl
pop
into
fildl
js
sbb
mov
mov
add
add
sbb
inc
in
jg
and
mov
add
add
jno
cmp
add
or
arpl
add
xchg
sub
dec
add
add
clc
push
shl
jo
xchg
sub
pop
xlat
dec
add
add
xor
sub
jmp
lods
xor
imulb
ss
or
add
add
pusha
add
add
or
fs
loop
scas
lahf
jecxz
pushf
sub
xchg
js
addb
out
sarb
cmp
mov
add
pop
cmp
movsl
out
iret
addl
das
push
jle
mov
pop
and
add
add
lods
jge
sbb
test
jg
mov
movsb
xchg
movsl
pop
popa
jge
mov
mov
repz
mov
sub
jne
lods
sbb
test
inc
mov
sub
xchg
cwtl
subl
cmp
mov
add
sbb
lods
fcomip
cmp
es
sub
add
add
insb
add
add
popa
inc
xor
jecxz
lret
scas
xchg
iret
ret
mov
repz
stos
out
leave
in
xor
add
sarl
orb
adc
pop
cmc
cmp
mov
movsl
repz
pop
mov
icebp
inc
test
or
sbb
icebp
pop
inc
mov
inc
xchg
cwtl
es
xchg
jne
mov
fdivr
mov
stos
fs
adc
mov
mov
inc
mov
in
or
add
add
rclb
mov
add
add
cltd
mov
sub
adc
mov
jmp
addr16
mov
mov
add
fcoms
std
push
jmp
lcall
add
out
mov
outsb
jge
add
add
int
cmp
ljmp
in
xlat
leave
jmp
cld
mov
mov
mov
cmp
call
cmp
repz
mov
aam
mov
leave
psrlq
add
iret
ret
cli
in
fimull
fidivs
dec
inc
dec
xor
mov
clc
and
add
add
in
inc
lcallw
fistps
mov
add
add
cltd
repnz
jp
mov
push
mov
jo
rclb
lods
add
add
add
mov
add
jl
out
fstpt
inc
incl
mov
jg
js
lds
add
add
movsb
int
insb
mov
or
sbb
add
add
pop
push
adcl
add
es
push
and
sbb
movsb
test
push
mov
rcll
cld
xor
xchg
testl
mov
dec
cs
mov
pop
cmp
xchg
mov
mov
fiaddl
cld
sarl
mov
cmp
add
jp
add
add
orb
aad
mov
aaa
xlat
sbb
xor
cmp
dec
mov
jne
cmc
pop
lret
loopne
pushf
stos
dec
add
add
mov
in
cmc
adc
jo
inc
add
add
push
cltd
inc
add
add
sbb
adc
xor
sub
add
add
jg
cmp
mov
inc
mov
cmp
xchg
sub
mov
out
test
loope
fcompl
jmp
inc
mov
iret
pop
jb
adc
push
mov
inc
add
add
add
mov
xchg
int3
das
das
test
cmpsl
or
mov
mov
mov
sub
mov
mov
mov
pusha
add
add
and
fadds
add
add
sahf
cmp
xor
fdivr
xor
testl
or
addb
ja
add
add
add
add
push
cmpsl
push
arpl
or
sub
in
xchg
leave
mov
push
mov
xor
xor
mov
subb
add
add
les
mov
mov
pop
scas
xor
add
add
xor
stos
adc
pop
fiadds
add
add
mov
mov
dec
cmp
push
andb
sbb
shrl
sbb
add
add
or
dec
fucomi
mov
pusha
mov
pusha
add
add
addb
fcoml
addr16
sbb
pop
fdivp
lods
ljmp
push
leave
lret
cmp
jmp
adc
and
mov
mov
add
sti
push
test
or
daa
and
add
add
mov
movsl
sti
movsl
int3
adc
mov
add
add
shrl
sub
mov
ss
dec
and
pop
sub
add
add
push
mov
ret
adcl
sbb
sbb
push
cmp
add
add
mov
icebp
dec
sbb
sbb
nop
pop
fcomip
dec
sub
mov
outsb
pusha
add
add
mov
cmp
fistl
jb
pop
subl
mov
sarb
nop
sti
jb
int
mov
push
pusha
mov
cmp
aas
sub
fnop
mov
add
add
add
add
mov
xlat
sahf
mov
cmp
dec
pop
cs
arpl
and
jmp
add
add
xchg
dec
loopne
shll
clc
test
add
add
in
neg
mov
mov
outsl
adc
clc
out
fildl
jg
inc
add
add
xor
jg
aad
pop
inc
pop
icebp
xor
mov
mov
add
mov
jo
pop
repnz
add
jno
and
pushf
mov
cld
mov
imull
cmpsb
push
arpl
push
sbb
add
add
mov
cmp
mov
adcl
adc
ret
dec
push
test
jge
push
js
fisubs
add
imul
sbb
add
ja
mov
mov
repnz
jmp
subb
fdivrs
mov
adc
lds
add
add
add
mov
lcall
xorl
jp
jecxz
or
add
add
cmp
out
mov
add
add
lcall
rorb
repz
sub
xor
add
das
daa
mov
add
pop
inc
add
add
clc
pushf
loop
and
add
add
in
outsl
divb
xchg
and
test
mov
hlt
pushf
jbe
mov
nop
adc
xor
ret
fbstp
push
sub
jne
rcl
sub
add
add
add
jmp
shll
xchg
ljmp
scas
mov
mov
add
pop
int3
dec
xchg
jp
fnstsw
xor
sub
roll
add
add
lds
pop
jns
adc
test
jle
add
jnp
mov
dec
mov
and
push
std
cs
imul
add
add
movsl
jnp
into
out
mov
shll
test
mov
std
stos
in
stos
add
sub
test
daa
xor
loop
in
jne
ds
inc
or
std
push
inc
test
adc
cwtl
push
aas
loopne
mov
ljmp
inc
fs
rcrb
mov
add
add
mov
xchg
dec
add
add
add
movsb
nop
fs
and
add
add
mov
aas
and
scas
jp,pn
imul
or
shrl
add
push
ret
inc
jle,pn
inc
test
out
rorl
scas
adc
lea
mov
push
lods
xlat
icebp
lock
add
add
and
xchg
mov
xlat
pop
dec
add
add
sahf
mov
xor
pop
add
sub
xor
push
mov
xor
mov
xchg
or
add
add
test
movsb
jae
leave
or
sti
pop
popa
shll
add
lods
mov
mov
add
add
dec
test
mov
mov
rcr
and
fwait
jle
lock
leave
imul
add
cld
daa
enter
leave
cmc
inc
sbb
adc
mov
add
add
add
sbb
popl
mov
cs
mov
into
mov
and
and
add
add
je
cmpsb
jnp
outsb
push
mov
xchg
adc
ja
stos
sub
add
add
dec
mov
mov
inc
inc
xor
adc
fsubrl
lahf
data16
add
lret
push
jns
add
add
fiadds
add
movsb
pusha
mov
inc
fists
int3
lods
les
adc
add
inc
int
or
fadds
repz
inc
mov
mov
mov
xchg
mov
dec
repnz
and
mov
imul
sti
push
movsl
sub
stos
pop
sbb
jne
dec
es
jge
dec
cwtl
jns
pusha
mov
sti
or
add
add
add
add
add
sub
in
inc
xchg
mov
inc
mov
and
add
inc
ds
xchg
push
out
cs
test
sub
add
add
jg
sbb
mov
jb
movsl
mov
shrb
das
pop
call
pusha
add
add
gs
mov
addl
cmc
sbb
stos
mulb
add
pop
daa
xchg
or
cltd
xor
add
add
test
mov
test
repnz
or
add
add
fs
mov
mov
aam
cmpsb
pop
lock
adc
lahf
or
add
add
add
or
ljmp
scas
jmp
pop
test
stos
cmp
sti
pop
pushf
test
mov
push
and
add
add
add
add
rcll
pop
xchg
lcall
fxch
jge
repnz
aas
dec
add
add
inc
imul
daa
and
jo
shl
and
add
add
bswap
jmp
test
add
add
cs
push
imul
iret
clc
xchg
mov
xor
dec
add
add
mov
xchg
in
mov
fwait
mov
inc
out
pop
push
jnp
out
rcrb
lea
jb
cmp
mov
mov
mov
aas
scas
movsl
das
push
sahf
faddl
stos
mov
push
mov
ficomps
fdivs
inc
mov
xor
dec
mov
pushf
orb
mov
or
xchg
pop
pusha
mov
inc
add
add
inc
dec
inc
shlb
shll
mov
xchg
imull
mov
mov
add
add
aas
adc
add
add
add
add
add
cmp
add
add
out
sub
add
add
sbb
aam
pusha
add
add
fldz
push
fwait
shlb
cmp
cltd
lods
xchg
mov
add
add
rolb
roll
daa
out
xchg
sbb
sbb
cmp
pop
in
inc
into
inc
adc
xchg
jge
cltd
std
xor
xchg
sbb
add
xchg
loope
pop
add
por
roll
xchg
pop
inc
test
ljmp
mov
out
mov
sbb
lret
test
insb
add
add
scas
sahf
pop
pop
jb
cwtl
xchg
daa
lret
mov
jg
into
cmc
push
insl
and
push
movl
add
test
mov
xorb
mov
mov
jns
jo
lds
jns
movsb
or
add
add
call
add
fisubrl
pop
push
jb
lds
or
aas
jl
xor
retw
imul
pop
jne
pushf
push
adc
jno
aaa
int
outsl
pop
jecxz
repnz
xor
bound
pop
fstl
inc
pop
outsb
stos
xor
or
add
add
outsb
sbb
add
and
xchg
xchg
loop
jmp
and
mov
xor
add
add
cmp
pop
bound
add
mov
mov
ret
sti
xchg
dec
add
add
enter
xchg
aaa
mov
je
cmp
dec
add
add
push
push
sub
mov
test
add
add
aam
dec
mov
xchg
push
inc
insl
aas
lds
add
add
ss
int
or
or
pop
repz
stos
dec
mov
mov
jmp
sub
adc
cld
mov
imul
xor
pop
arpl
xchg
xchg
movsb
rcrb
testb
in
mov
mov
mov
add
cli
mov
push
push
sysenter
mov
or
sbb
test
push
ja
cmc
mov
js
xchg
gs
insb
mov
ss
popa
je
jl
pop
jo
fistpll
mov
fs
or
sub
jne
mov
addb
jbe
adc
jge
dec
mov
cwtl
mov
mov
xor
ljmp
xchg
lods
loope
adc
sub
add
add
int3
cmp
xor
cs
xor
aas
xor
test
es
or
mov
jle
js
sbb
enter
add
mov
xor
movsl
inc
add
add
loopne
jg
xchg
cmpsl
sbb
add
jae
inc
test
mov
jg
mov
sahf
jbe
mov
xorb
add
add
sti
js
xchg
int
dec
add
add
add
rorl
and
xor
fstl
sub
add
add
xor
add
add
loopne
cwtl
sbb
jno
dec
imul
mov
test
mov
dec
jl
iret
xchg
andl
mov
pop
pop
adcl
add
insl
fwait
and
add
add
and
add
add
test
push
mov
push
rcr
cmpb
add
add
add
add
mov
add
add
repz
push
fsubl
and
add
add
lods
insl
xor
je
mov
cmp
cmp
les
sub
fcomip
add
adc
add
and
in
movb
cmpsl
push
mov
sbb
add
add
cmpsl
sub
test
jecxz
xchg
or
popf
mov
rorb
aad
mov
dec
mov
add
add
mov
mov
xchg
cmpb
pop
dec
push
sahf
loop
loope
mov
add
add
sub
lret
cs
and
add
jno
scas
xchg
hlt
lret
das
jl
push
xor
push
jno
sbb
int3
push
jo
loop
daa
mov
mov
lahf
popf
mov
add
add
fdivr
xchg
and
sar
add
add
add
stc
push
or
add
add
add
add
cmpsl
jne
fsts
js
out
test
jo
mov
sbb
add
add
out
mov
add
add
add
cmp
push
fs
pop
pop
xchg
or
in
aam
jg
adc
enter
pop
jns
stos
loopne
cmpsl
fisttpl
add
add
test
inc
cmp
enter
mov
sub
outsl
pop
rorl
add
insl
mov
xor
lcall
add
add
add
add
in
ljmp
sbb
jp
in
dec
fdivrs
cmp
add
add
xchg
clc
add
mov
lcall
int3
push
in
adc
xor
mov
add
sbb
mov
outsb
inc
push
iret
rclb
adc
add
add
rol
and
pop
insl
insl
dec
inc
xchg
pop
out
sbb
scas
cmpb
cmp
jg
sub
xchg
dec
loope
out
into
xor
xlat
int
jge
dec
movsl
xor
pop
sahf
push
pushf
into
cmpsb
jg
fst
orl
decb
add
inc
add
add
sbb
stos
fidivl
out
scas
inc
rol
mov
stos
or
add
add
xchg
mov
ret
cmpsl
mulb
add
add
add
add
push
jle
mov
addl
mov
add
add
add
inc
add
add
nop
lods
in
jle
ja
sbb
pop
out
pop
lods
or
mov
mov
adc
in
pop
jo
test
pop
add
add
add
add
sti
or
mov
mulb
cmp
add
pushf
popf
cmpl
cs
cs
xchg
repz
xchg
add
add
jo
aas
sahf
push
sti
sbb
ds
repz
shlb
test
mov
aad
pop
enter
test
hlt
bnd
mov
lcall
jb
inc
push
lock
add
add
outsl
shrl
mov
out
nop
aas
das
adc
pop
add
push
mov
push
movsb
loop
mov
push
fldcw
xor
inc
mov
hlt
stc
mov
push
cmp
pop
inc
push
rcll
sub
add
add
add
add
add
add
mov
xchg
push
mov
out
pop
aam
xchg
cmp
and
mov
add
jns
pop
sbb
test
mov
sti
fldt
jmp
into
xor
clc
aad
push
in
dec
pop
mov
into
jbe
dec
lret
lea
cmc
mov
push
lahf
mov
adc
add
add
out
add
xchg
ljmp
dec
cmc
fxch
clc
vpmovqb
ret
xor
imul
lds
mov
inc
add
add
xor
in
lods
hlt
lods
imul
add
add
push
adc
movsb
pop
xchg
lret
xor
mov
mov
jne,pt
out
pushf
popa
lahf
hlt
sub
add
add
push
addr16
jecxz
fs
or
and
add
add
cmp
lock
mov
rol
test
notl
repz
inc
cmp
add
add
inc
call
cmp
popa
fdivr
jo
les
cmp
push
cmp
add
add
fstpl
push
in
cld
mov
test
pop
lock
imul
add
add
sti
or
nop
adc
mov
add
push
adc
scas
jne
into
mov
lahf
inc
mov
loopne
outsl
scas
sti
jo
imul
add
add
arpl
add
add
rcrb
mov
push
jle
add
add
insl
dec
mov
stc
and
add
add
loopne
cld
cmpsb
jb
add
add
pusha
mov
add
add
add
dec
movsl
and
xor
arpl
mull
and
pop
stos
stos
movsb
fidivrl
inc
imul
cwtl
mov
pop
mov
add
add
popa
movsb
mov
push
mov
outsl
mov
add
add
cmp
xor
popa
out
setno
scas
jge
or
xchg
popa
or
xchg
xor
adc
add
add
pop
int3
outsl
xchg
add
add
and
loope
imul
out
lret
fmull
dec
divb
xchg
xor
fcomp
pushf
loope
mov
jle
add
add
mov
rcl
cmp
jle
fsubs
dec
fldl
mov
mov
xor
add
add
xor
fisttpll
add
add
insb
mov
sub
add
add
xor
pusha
mov
out
xlat
mov
shrb
and
int
or
add
add
std
pusha
add
add
or
add
dec
pop
stc
faddp
stos
sbb
sbb
xor
add
shll
sbb
es
rcl
or
fiadds
mov
mov
sti
push
xchg
roll
add
idiv
lahf
push
shll
mov
jl
iret
cld
add
xchg
add
add
dec
add
add
fs
push
jge
sub
xchg
xorl
mov
out
dec
add
add
pusha
add
add
loopne
les
aaa
and
and
pop
lock
adc
sbb
adc
jo
xorb
jle
psrlw
xchg
sbb
cmp
sbb
cmpsl
push
not
call
add
add
add
or
mov
daa
inc
lods
push
int3
jae
pop
xchg
fbld
xchg
mov
add
add
mov
je
sbb
call
lds
pop
loop
cli
sub
sbb
nop
inc
add
add
in
filds
add
sub
add
add
push
xor
cwtl
mov
or
or
add
add
add
add
add
or
add
add
sub
add
add
outsb
sarl
lret
cmp
in
in
dec
push
fcoms
test
dec
mov
hlt
inc
lods
jmp
pop
sub
cmp
sub
cmp
or
or
add
add
jecxz
lods
stos
mov
add
add
lods
jg
repz
lea
add
sub
or
pop
xchg
mov
cli
inc
mov
adc
sbb
or
push
outsb
icebp
js
sti
dec
add
add
add
add
add
shl
imul
stos
fwait
into
popf
cld
dec
jge
fimull
adc
mov
sbb
push
jae
push
idivb
lods
xor
je
popa
sub
add
add
mov
add
add
testl
mov
dec
push
push
aas
fldl
mov
lods
mov
xrelease
or
adc
adc
add
add
adcl
jg
test
pop
hlt
pop
xchg
add
add
stos
pop
fmul
xlat
xchg
into
cmp
sbb
les
aas
test
insb
add
add
mov
int
leave
dec
push
dec
add
mov
pop
mov
jne
shlb
faddp
scas
push
lea
add
add
aas
or
lret
xchg
adc
mov
pop
fdivrl
dec
add
add
addr16
mov
add
add
addr16
js
jle
and
xorl
add
add
pop
out
inc
repnz
ret
lods
imul
inc
add
add
out
xor
dec
lods
xor
sub
pop
pop
negl
rcr
xor
mov
add
add
add
dec
add
add
stos
dec
add
add
int3
subl
insl
pusha
mov
xchg
lahf
fistps
nop
add
push
add
adc
xchg
or
fdivrl
mov
mov
sub
sub
add
add
cmpsl
sbb
insl
cmc
xchg
jecxz
add
or
add
add
lahf
pop
fisubs
data16
out
hlt
jl
add
add
bound
jmp
insb
mov
shl
xchg
pop
fdivrl
jp
mov
add
cli
pop
scas
inc
mov
add
sub
add
add
mov
pop
arpl
jl
adc
sbb
xchg
test
jle
inc
mov
add
lods
insb
mov
aaa
or
add
add
add
sbb
adc
add
add
fcoms
stc
divb
outsl
lahf
push
flds
stos
or
add
fsubs
mov
test
mov
pop
inc
add
add
and
add
add
ja
mov
jae
mov
or
nop
xor
loopne
pop
and
add
add
add
stos
movb
mov
or
add
add
shll
sbb
sbb
jb
and
add
add
adc
add
stos
jnp
je
mov
add
add
pushf
jge
fwait
pop
ret
std
jbe
and
add
add
add
insb
mov
test
push
test
addr16
adc
or
mov
aaa
call
rcrb
ret
js
add
add
add
daa
shrl
or
xor
stc
filds
addr16
xchg
divl
popf
xor
xlat
and
add
add
mulb
inc
hlt
push
pusha
add
add
pop
add
add
add
loop
pop
xor
mov
stc
in
xor
push
mov
int
fistps
add
or
add
add
std
adc
cwtl
lods
daa
stos
mov
mov
clc
jg
sub
jns
ret
jnp
pop
popa
movsl
xor
xor
cmc
adc
push
lods
jecxz
shlb
out
mov
add
rcrl
xchg
adc
dec
mov
sbb
sub
inc
mov
into
or
add
add
mov
or
int3
imul
xchg
aas
addl
addr16
add
add
push
addr16
mov
mov
std
std
adc
add
in
cli
xor
mov
ret
pop
xchg
sub
add
add
add
add
add
inc
jmp
fcmovnu
outsl
or
add
add
push
fstp
mov
jl
mov
add
add
or
jbe
mov
add
add
add
in
mov
add
add
gs
dec
inc
or
add
add
mov
es
add
mov
fmuls
add
add
ds
add
add
xchg
or
add
add
in
shlb
mov
add
filds
xchg
xlat
lret
mov
pop
dec
and
pop
daa
inc
repz
fadds
aam
arpl
xchg
sbb
lock
add
add
cmp
cmc
dec
and
adc
dec
inc
add
add
jo
mov
mov
mov
cmc
add
test
jae
mov
pop
loopne
movsb
cmpb
add
inc
mov
call
fcomps
adc
mov
add
add
add
push
cmp
negl
pop
lods
bound
aaa
push
call
add
or
add
add
inc
add
add
cmp
add
add
addl
mov
js
xchg
xchg
jmp
mov
addl
gs
cmpsl
xor
pop
pop
dec
movsb
mov
xchg
pop
xor
jns
pop
test
ffreep
ljmp
add
outsb
push
mov
es
mov
popf
xor
ret
int
mov
add
jle
inc
add
add
ret
pop
push
test
jecxz
mov
mov
stos
mov
add
add
mov
add
testb
pop
xor
int
push
lahf
lods
shl
lret
mov
xor
ds
jl
lret
adc
jbe
xchg
add
loope
jnp
add
jno
les
pushf
adc
add
xorl
add
enter
add
add
test
lcall
push
imulb
add
and
aam
int
jbe
add
add
adc
inc
insb
add
add
cli
sbb
add
add
nop
sub
add
add
add
add
in
movsl
ret
repnz
adc
fistl
push
adc
imul
inc
xlat
fcmovnbe
jns
mov
arpl
xchg
das
pop
insl
divb
cwtl
nop
sbb
add
lret
mov
mov
adc
cmp
les
add
cld
loop
xchg
lock
push
in
and
add
add
adc
int3
outsb
jbe
pop
ds
iret
mov
add
add
add
add
lds
cmp
fdivrl
aad
popa
insl
xor
rclb
add
lret
push
roll
mov
add
add
add
repnz
push
in
mov
test
or
mov
mov
test
pop
es
daa
lods
loop
mov
mov
xor
add
add
add
push
xor
data16
cmpsb
pop
mov
je
jnp
scas
adc
jecxz
and
xorb
mov
and
mov
mov
or
add
add
dec
xchg
stc
dec
add
add
shlb
inc
add
aas
fidivs
pop
sahf
adc
loop
lcall
push
cmc
push
cmp
leave
xlat
push
mov
add
add
mov
dec
cmp
push
mov
cmp
cmpb
mov
mov
sbb
push
lods
pop
pushf
or
sub
add
jo
nop
and
add
add
lcall
test
xor
push
push
add
add
outsb
ret
and
jl
inc
push
sbb
dec
or
mov
cld
xchg
push
aas
into
cmp
pushl
add
add
fistpl
pusha
mov
cmpsl
sti
lret
mov
add
add
sbb
and
cmp
inc
jg
inc
push
movsb
xchg
repz
mov
push
push
jl
loop
inc
xchg
mov
repz
aad
jae
es
dec
out
mov
pop
fdivrl
jl
pop
xchg
mov
add
jne
jnp
data16
add
add
je
enter
divl
imul
mov
push
push
xor
pusha
add
add
je
test
adc
add
add
addr16
mov
jo
mov
add
add
mov
fsubl
sbb
mov
add
push
mov
cmp
loopne
jg,pt
xchg
jp
pusha
mov
mov
pop
out
push
jo
dec
and
into
and
add
add
cwtl
lahf
icebp
push
or
add
outsb
cmp
push
ljmp
les
in
dec
pop
icebp
mov
shl
pop
ret
js
divb
add
add
pop
imul
imul
cmp
ds
mov
inc
fisubrs
push
or
jp
adc
scas
pop
pop
and
add
sti
iret
in
sbb
scas
push
into
add
in
push
sub
dec
and
sbb
dec
add
add
call
in
push
inc
pop
enter
lret
scas
lea
inc
mov
mov
sbb
sahf
in
jno
mov
fnsave
push
inc
scas
mov
pusha
add
add
pop
and
fistps
cli
ret
lods
jmp
or
and
push
sbbl
icebp
jmp
xor
fmuls
add
ret
pop
test
cmpl
or
add
add
xor
add
negb
sub
or
add
add
mov
cltd
stc
cmpsb
dec
xchg
add
add
add
mov
movsb
mov
iret
cmp
mov
add
add
pop
xor
cmp
push
shll
nop
cli
pop
cld
sbb
adc
cmp
adc
push
cwtl
dec
add
add
xor
cltd
not
add
add
arpl
mov
and
adcb
add
add
add
add
xor
loopne
loop
push
sub
inc
mov
movsb
data16
ds
or
pop
add
add
sub
cli
rorl
jno
repnz
add
add
add
ds
mov
jo
sub
add
add
int3
nop
ret
stc
stos
mov
xchg
iret
dec
mov
adc
stos
cmpsb
add
dec
add
add
shl
icebp
dec
xchg
add
add
add
pop
and
in
cmp
inc
add
add
or
add
add
cmp
inc
add
add
nop
stc
dec
sub
incb
addr16
push
in
movsb
aad
lods
jmp
adc
dec
mov
icebp
xchg
ror
lods
lahf
fmul
loopne
sbb
jp
sahf
mov
add
pop
adc
shlb
adc
add
add
fisubl
andl
add
add
mov
mov
cmpsl
sbb
pop
xor
pop
inc
mov
decl
mov
add
add
mov
mov
xchg
hlt
inc
cwtl
mov
cmp
add
add
stos
adc
bound
out
xor
xor
cmpsl
stc
xor
inc
sbb
push
aam
shrb
xchg
jo
dec
add
add
test
ret
stc
dec
add
add
mov
loop
rcrb
push
or
mov
add
shll
mov
push
cmpsl
xor
add
sbb
jo
lcall
cld
pushl
add
add
mov
mov
adc
sub
add
inc
ds
jo
add
add
add
add
mov
retw
fldl
add
add
or
add
add
mov
movsl
mov
add
add
lds
jno
xchg
mov
jp
xchg
fstpl
cmc
lea
mov
pop
inc
push
pop
sbb
push
fildll
sets
xchg
or
add
add
push
sbb
xchg
cmpsb
jbe
mov
add
mov
jecxz
xchg
out
into
push
insb
add
add
out
frstor
movsl
add
add
add
test
shr
jb
pop
mov
add
add
movsl
enter
sbb
adc
pop
cs
push
insl
subl
insb
add
add
mov
xchg
mov
add
add
cmp
lock
jg
xchg
test
adc
jne
jb
testl
call
icebp
sbbl
add
add
mov
lods
push
gs
mov
inc
in
mov
dec
mov
inc
and
jne
cmpsb
addr16
out
and
add
push
lret
xlat
jno
ret
cmc
pusha
add
add
push
sahf
push
mov
add
add
loopne
mov
add
sbb
movsb
pusha
mov
add
mov
or
leave
subb
mov
cmp
arpl
out
dec
neg
psubsw
in
jg
fwait
xor
add
add
add
add
leave
cmp
push
je
decl
pop
movsl
xchg
mov
outsb
sub
mov
fstpt
cmp
stos
shll
dec
loopne
sub
dec
mov
mov
cmpsb
mov
xchg
xor
add
add
imul
mov
mov
add
jb
mov
jmp
fstpt
inc
add
add
out
mov
ja
push
sbb
push
or
les
push
mov
adc
or
outsb
xchg
xchg
mov
push
js
add
add
faddl
pop
or
add
mov
and
jbe
lds
and
loopne
in
sbb
mov
jle
imul
add
lahf
add
add
add
inc
mov
or
add
add
add
lds
movsl
push
ja
int
stos
jbe
data16
mov
or
jno
mov
add
add
add
movsb
ds
sbb
ret
add
add
aad
add
add
int
mov
sbb
mov
pop
popa
test
push
jae
lock
jno
sub
mulb
sub
and
add
jae
enter
xchg
das
mov
add
xchg
sbb
or
add
add
jge
xchg
push
rcrl
lock
fwait
mov
add
add
cmc
cmp
bound
mov
arpl
in
add
add
add
mov
add
add
add
rolb
and
hlt
jecxz
mov
arpl
adc
add
add
push
movsl
jmp
xchg
call
xchg
loop
push
xchg
hlt
cmpsl
dec
loop
or
js
jbe
mov
add
add
mov
mov
add
add
add
test
add
icebp
enter
xor
sbb
adc
cmp
dec
out
repnz
sbb
add
add
jns
xchg
hlt
gs
pop
mov
fisubl
add
add
add
add
add
and
add
add
imul
test
lods
cld
hlt
or
rorl
pusha
add
add
mov
testb
add
pop
je
mov
cmp
mov
mov
leave
inc
loope
fs
push
xchg
ret
lods
in
adc
inc
inc
inc
xchg
jb
inc
fwait
lea
mov
add
pop
sbb
xlat
lods
xor
leave
inc
push
fcomp
out
sahf
push
sub
out
xchg
out
sti
data16
mov
lahf
je
jns
ret
add
add
rorb
aam
mov
dec
mov
xchg
inc
mov
pop
add
or
add
add
add
add
or
add
add
in
xor
cmpl
lahf
fadds
dec
fldl
push
fnstcw
fisubrl
mov
mov
pushf
lods
xor
add
add
lods
outsb
push
mov
out
pop
adc
push
push
shrb
cmp
and
add
add
mov
aam
jmp
test
dec
adc
add
iret
xchg
push
leave
or
add
add
xchg
or
sub
add
add
or
adcl
lods
aad
xchg
jb
aam
adc
stc
push
ds
xor
fsubrl
jl
insb
add
add
mov
cwtl
push
jns
add
and
add
add
sti
test
xchg
lcall
in
aam
imull
add
add
or
test
imul
add
add
xor
icebp
mov
inc
add
add
inc
mov
mov
jae
rcrl
test
add
mov
mov
cmc
inc
ret
pop
and
push
movsl
aam
sbb
add
xor
dec
enter
sbb
out
stos
test
push
xchg
and
add
add
add
add
add
jb
lea
xchg
xchg
cmpsb
cs
lret
out
adc
pushf
adc
stos
in
daa
repnz
adc
fistl
movnti
mov
add
mov
pop
sbb
and
add
add
pop
xor
cmp
mov
xchg
jbe
dec
scas
cmpl
mov
mov
aad
test
mov
mov
inc
popf
add
ss
fistps
popa
push
push
adc
jbe
add
add
add
mov
out
int3
sub
add
add
push
lods
lcall
mov
cs
jl
push
icebp
pop
imul
mov
enter
add
add
xor
push
jno
add
and
xchg
dec
rorl
mov
icebp
and
push
cmpsb
mov
mov
jle
stos
or
add
fmuls
add
add
fisttpll
mov
xchg
popa
xchg
aam
cmp
xchg
adc
add
add
ffree
fcompl
dec
push
fcoms
rolb
mov
ret
sbb
xchg
mov
add
mov
scas
lret
loopne
pop
in
mov
dec
mov
das
pop
sub
add
add
aas
andl
mov
mov
data16
or
add
add
add
xor
sub
insl
popa
jbe
mulb
icebp
dec
and
out
arpl
or
add
add
or
aam
mov
add
add
insl
mov
shll
add
mov
or
lret
in
mov
pushf
mov
add
add
or
int3
lock
push
jmp
mov
lods
iret
out
ljmp
mov
pop
fisttps
jp
mov
pop
cmpsb
pop
jmp
mov
xchg
push
mov
jnp
decl
add
add
pushf
movsl
jns
mov
adc
cmp
xor
adc
mov
je
pushf
push
out
stc
jle
dec
add
add
add
pop
sub
and
mov
add
add
push
add
loope
arpl
xlat
in
mov
out
test
std
sbb
add
add
pop
pop
adc
fdivs
add
add
jno
rep
sbb
lock
push
and
imul
or
stos
inc
xchg
test
or
add
add
les
push
int3
and
add
add
insb
add
add
mov
adc
push
bswap
dec
xchg
icebp
adc
cmp
dec
sub
sbb
jecxz
push
cltd
fwait
into
xchg
add
jge
push
adcb
sub
add
lcall
and
lods
and
add
add
loopne
insl
adc
push
jl
insl
sbb
xor
loope
das
xchg
mov
insl
out
stc
into
cmc
repz
add
add
sbb
iret
xor
movsl
popa
aas
loopne
aad
das
mov
mov
cmc
inc
stos
pop
dec
add
add
dec
imul
add
mov
xor
mov
mov
inc
or
mov
cli
mov
ret
dec
mov
mov
fwait
repnz
xor
add
add
push
adcb
in
dec
mov
cmp
ss
add
add
loop
hlt
inc
cmpsb
pop
mov
shrb
cltd
and
aam
sub
test
push
call
adc
dec
fbstp
insb
add
add
enter
mov
fisubl
add
rcll
add
add
movsl
arpl
leave
mov
adcl
repz
xor
add
jp
popf
pop
jae
or
in
repz
bnd
mov
cmpsl
pop
dec
push
cld
xchg
fnstsw
pop
push
and
jno
pop
jp
mov
xor
pop
jae
into
test
mov
add
add
lods
lret
push
xor
add
mov
add
jae
imul
add
add
rorb
inc
cmp
mov
xchg
push
bound
xchg
adc
pop
out
loop
addb
add
add
adc
movsl
daa
push
push
arpl
lea
add
add
sub
fstpt
add
add
sub
lcall
movsl
enter
mov
les
push
pushf
test
lret
pop
jb
dec
movsb
ljmp
cmp
mov
leavew
push
sbb
add
add
add
imul
repz
cmp
add
xor
mov
ret
cmc
das
push
int3
enter
or
add
add
add
cmp
gs
add
add
mov
dec
loope,pn
dec
das
mov
mov
adc
rcrb
mov
cmpb
mov
ret
mov
test
add
add
mov
ficoms
fsubs
sbb
adc
cmp
add
mov
mov
ficomps
dec
insb
mov
mov
cmp
mov
js
mov
mov
ret
mov
mov
shrl
aam
test
or
leave
add
xchg
jns
push
je
mov
and
add
add
cwtl
cmp
and
jmp
mov
fcom
mov
jl
ret
lret
jmp
xlat
movsl
inc
cmp
test
xorl
sbb
mov
cmp
cmpsb
es
mov
mov
stos
cmp
add
stos
adc
or
scas
ja
test
cmp
xor
and
jle
mov
push
outsl
adc
jmp
out
sahf
aam
mov
mov
jns
add
inc
enter
pop
fidivs
add
int
shrb
clc
sub
xor
shl
xchg
cmp
nop
dec
xchg
stos
repz
bnd
or
movsb
insl
mov
add
adc
imul
xor
lods
pop
push
mov
pop
add
test
je
adc
jge
push
or
arpl
dec
xchg
sub
add
add
andl
mov
push
lcall
outsb
cmc
pop
inc
add
add
cmp
loopne
aaa
shll
inc
pushf
ud0
dec
adc
aas
je
aas
dec
mov
jnp
arpl
xchg
jno
dec
inc
xchg
jbe
in
adc
and
mov
mov
imul
adc
es
movb
add
add
cmp
scas
cmp
inc
test
mov
jo
jl
out
rcr
add
imulb
mov
test
add
cmp
sub
out
call
out
sub
mov
mov
in
es
pop
cmpsb
push
movsb
sar
int3
cltd
jnp
push
mov
imul
clc
sti
mov
out
add
add
pop
xor
mov
push
mov
in
mov
lods
lds
add
add
repz
js
int
imull
mov
ret
icebp
in
sarl
out
out
das
cmp
add
add
add
add
add
mov
xchg
and
cmpsl
cmpsl
add
loop
inc
fcomps
jmp
sbb
xchg
movsl
test
add
cmp
adc
or
mov
popf
mov
movsl
pop
mov
sub
push
pop
or
add
add
push
pop
imul
or
or
add
add
mov
fdivr
addr16
cmp
lcall
xchg
adcb
rorb
mov
pop
and
ljmp
rorb
xchg
xchg
mov
shrb
fwait
xchg
rcr
lea
mov
cwtl
push
lcall
aas
adc
jae
stos
add
repnz
out
xchg
mov
inc
mov
xchg
imul
sbb
mov
imul
popa
xchg
xchg
movsl
sub
mov
xchg
push
cmp
clc
dec
fidivrl
imul
sub
pop
je
pop
push
mov
lahf
bswap
and
inc
in
inc
xchg
inc
shll
xor
in
shld
leave
in
rclb
jb
and
sub
pop
xchg
fsts
cmpsl
mov
mov
aam
mov
add
add
mov
or
jnp
leave
imul
add
setge
mov
cwtl
pop
lea
xlat
and
add
add
adc
fwait
jbe
out
add
add
mov
add
add
test
sbb
sub
add
add
lcall
add
mov
xchg
fucomp
les
sarb
out
subl
adc
xlat
sbb
add
ljmp
stos
std
lahf
mov
fildl
xchg
sub
mov
psubb
cmpsb
push
rcrb
data16
xor
mov
int
xor
xor
xor
add
subl
pop
in
inc
and
push
and
mov
repnz
xchg
and
mov
xchg
stc
jae,pt
fsubrs
add
add
je
in
jns
inc
inc
add
add
inc
dec
enter
idivb
lods
push
xor
pop
sub
insb
mov
call
inc
xchg
cmp
or
mul
out
mov
mov
mov
add
add
call
dec
insl
es
mov
mov
add
mov
inc
xor
shll
jb
js
adc
hlt
outsl
rorl
cmpb
outsl
arpl
insb
add
add
cmp
or
cmpsl
sbb
insl
nop
jecxz
hlt
cmp
hlt
xor
mov
cmpsl
dec
xor
add
xchg
je
cmpl
push
test
cld
cmp
outsb
cmp
push
cmp
jbe
ds
sub
add
add
leave
pop
lret
or
ljmp
cmc
hlt
ficoms
or
in
sbb
push
jo
sub
jo
dec
add
add
lcall
push
xchg
into
mov
xchg
je
out
shll
add
add
add
fimuls
xchg
arpl
add
jmp
dec
adc
and
add
add
dec
aas
ljmp
mov
pop
jmp
xor
scas
cmp
mov
aam
jecxz
mov
add
mov
mov
pmaxsw
pop
fwait
jnp
sbb
add
add
add
add
add
inc
add
add
outsb
out
sub
mov
pop
and
add
add
pop
nop
cmp
xchg
dec
mov
mov
out
pop
push
mov
lret
mov
add
add
add
add
add
in
dec
sub
mov
dec
pop
les
imul
sbb
mov
setl
sahf
addr16
pushl
in
add
sub
rol
and
jecxz
sub
jg
cmp
cmp
pop
push
jno
lret
in
cs
arpl
inc
clc
jecxz
mov
add
add
lods
push
repz
sbb
sbb
ss
mov
and
add
add
pop
inc
add
add
pop
std
or
add
cli
jno
inc
pop
lret
jne
or
mov
invd
mov
gs
cwtl
neg
scas
xlat
out
jge
push
rcrb
cmp
movsl
aaa
pop
mov
pushf
insb
add
add
and
add
add
int
jg
in
pop
jp
aad
xchg
sub
jns
and
mov
add
add
pop
adc
jno
enter
xrelease
add
add
bound
dec
dec
mov
cmp
add
add
mov
add
out
js
dec
imul
mov
popl
in
idivb
out
dec
mov
iret
cwtl
loopne
adc
sbb
mov
add
add
shlb
add
add
mov
xchg
std
cld
jge
addr16
xchg
fcomps
jle
xor
and
add
add
not
dec
mov
imul
add
cmp
daa
mov
dec
add
add
pop
sarb
mov
add
add
xor
ja
jp
test
add
add
lahf
aad
lahf
and
add
add
mov
xchg
loopne
xor
clc
addb
popa
sbb
pop
pop
ret
adc
pop
cltd
jnp
add
add
inc
cwtl
push
repnz
sub
add
add
bound
mov
push
iret
insb
mov
add
std
ljmp
and
push
jl
pop
mov
add
add
repz
cmp
cmpsl
ss
mov
add
fs
mov
shll
add
add
les
cld
mov
mov
cmp
add
xlat
addr16
sbbl
in
mov
int
fistl
das
mov
sbb
xchg
sbb
jno
gs
push
jnp
mov
xor
add
call
add
add
mov
mov
outsl
jno
stos
mov
cli
sub
lods
push
nop
xor
outsb
push
mov
xor
nop
mov
mov
orb
and
add
add
adc
std
xchg
int3
mov
scas
cmpsl
or
pop
js
test
mov
lahf
jne
mov
fucomip
xchg
dec
mov
pop
lods
add
add
imulb
jmp
add
sub
cld
xchg
mov
jmp
xor
scas
inc
add
add
add
and
mov
add
push
and
mov
sbb
sub
add
add
pop
fcom
mov
mov
pusha
mov
adc
push
xor
fwait
movsl
scas
and
fsub
fimull
sub
repnz
push
or
pop
ljmp
loope
cltd
xor
test
js
fsubrs
out
cmp
push
aam
push
in
jns
dec
xchg
pop
or
add
add
add
fcomps
add
je
fwait
mov
mov
xlat
pop
dec
mov
leave
add
add
add
or
jne
mov
dec
xchg
xor
out
mov
add
add
stos
aas
js
mov
adc
lea
mov
cwtl
mov
jl
pop
test
inc
mov
adcl
inc
sub
sub
jp
push
xchg
insl
push
clc
das
into
bound
inc
cltd
sbb
add
add
or
add
add
add
add
dec
add
add
dec
mov
stos
inc
mulb
add
add
aam
mov
pushf
jge
mov
pop
push
imul
sbb
lahf
cmp
push
test
and
popa
std
jne
rorl
add
jle
mov
mov
data16
rorl
fwait
or
rcll
add
testl
int
lods
mov
add
add
mov
lahf
mov
lds
ds
pop
pop
neg
cmpsb
test
xor
add
add
or
cmp
sahf
lds
imul
or
add
add
mov
leave
das
stc
ret
pop
lods
push
insl
insb
mov
sub
add
add
add
xchg
lcall
push
xor
add
inc
mov
push
in
mov
inc
mov
add
add
nop
out
or
leave
data16
inc
mov
enter
add
movsb
dec
mov
add
add
bsr
sub
add
add
mov
mov
add
call
xlat
insl
jle
xor
mov
sub
loop
jns
xchg
add
les
dec
add
add
call
int
add
add
stos
lret
subl
add
add
ja
pop
push
sti
sub
pop
subl
inc
pop
das
xor
xchg
push
add
add
test
lods
xor
sbb
std
test
adc
arpl
cmpb
mov
shll
int3
mov
imul
add
add
xor
add
add
mov
mov
add
add
loopne
ret
xchg
cmp
inc
adc
mov
inc
inc
mov
xchg
pusha
add
add
add
add
add
jne
jo
outsb
adc
push
mov
std
push
out
icebp
clc
outsb
aad
out
aad
push
int3
lds
inc
push
adc
sbb
jg
in
pusha
add
add
pop
inc
add
add
cmp
push
dec
inc
sub
inc
psraw
aad
hlt
dec
test
stos
hlt
in
gs
xor
push
xor
movsb
push
and
aad
inc
ficomps
jge
test
in
scas
les
sbb
mov
aas
inc
mov
adc
xor
inc
mov
xor
cmp
int
cmp
divl
hlt
push
pop
cmp
add
cmc
inc
cmp
ss
mov
dec
add
add
stos
int
sahf
mov
inc
mov
aad
sar
ret
push
push
dec
or
es
xchg
adc
les
nop
mov
lret
inc
or
cmp
mov
pop
enter
cmc
dec
arpl
jbe
ret
pop
xchg
in
jp
lcall
or
add
pop
jo
and
add
add
cmp
mov
or
sub
inc
movsl
add
dec
mov
fstl
popf
mov
lret
adc
sub
add
add
sub
jg
xchg
add
shl
xor
aad
es
add
add
push
out
scas
jae
pop
cmc
xor
add
into
mov
idivw
jbe
push
dec
cli
inc
mov
mov
mov
js
mov
je
or
jge
popl
add
add
negb
dec
stos
leave
sbb
push
mov
mov
in
mov
sbb
add
add
add
add
sub
add
add
or
in
push
popf
aaa
icebp
cs
inc
clc
movb
test
add
inc
hlt
jns
mov
cmp
outsb
mov
sbb
das
push
int3
mov
jecxz
cmp
popa
test
dec
fimuls
sbb
mov
insb
add
add
sbb
or
add
add
or
in
test
sub
addr16
add
add
add
add
sub
cli
nop
das
test
xor
add
inc
add
add
sub
add
add
mov
cs
mov
add
add
cmp
jnp
mov
mov
jge
or
add
add
jl
dec
adcb
dec
mov
push
pop
push
jmp
jns
jge
cmp
xchg
test
les
xor
sbb
add
add
insl
dec
add
add
mov
rcrl
shrl
mov
incb
xor
xchg
and
stos
mov
in
nop
test
dec
outsl
fwait
mov
lds
add
add
add
ljmp
mov
adc
iret
lds
add
inc
jo
push
aad
sahf
mov
push
bound
ret
cld
repz
jmp
push
xchg
popf
jne
cmp
lret
pop
insl
out
pop
mov
imul
divb
add
add
mov
in
xlat
mov
mov
fsubp
sub
add
add
xchg
pop
data16
mov
push
push
cwtl
adc
add
add
add
out
mov
xor
inc
iret
or
xor
cmp
cwtl
xchg
xor
lock
stos
add
es
fwait
mov
pusha
mov
cwtl
pop
pop
std
inc
mov
sub
sub
add
add
jle
mov
inc
add
add
lock
xor
nop
enter
add
add
repnz
add
add
test
call
mov
adc
cmc
mov
or
les
stos
jg
mov
add
add
mov
jge
pusha
mov
pushf
mov
add
add
aad
cli
mov
add
add
cmc
jle
push
aad
ret
mov
xor
test
jbe
pop
jne
pushw
add
sub
mov
add
add
movsl
sbb
loope
jle
push
daa
les
mov
sub
bound
sahf
stos
lret
mov
mov
mov
mov
insb
mov
fldenv
sub
mov
gs
ds
addr16
jmp
cli
xlat
rcll
xor
into
cmp
add
jns
jg
xchg
cmp
pop
pusha
add
add
adc
sub
push
mov
mov
test
popf
loop
push
pop
sub
jbe
insb
mov
jnp
lret
jle
push
push
adc
push
rclb
addb
add
mov
cmp
add
sub
out
xchg
aaa
aam
jp
hlt
push
mov
add
dec
mov
add
add
add
jmp
add
add
jo
pop
insl
mov
jge
cmp
pop
xchg
and
add
add
mov
std
add
fsubrp
cmpsb
mov
jnp
xor
sub
add
add
sbbl
sub
jb
dec
sub
add
mov
xchg
bound
pushf
push
mov
mov
sub
add
add
test
add
xchg
adc
add
xchg
or
jb
mov
roll
into
sbb
loope
jg
sub
testb
fwait
loope
adc
frstor
mov
inc
add
add
cmp
add
add
cld
or
push
or
leave
jge
jge
cs
xchg
mov
test
scas
push
and
push
lds
add
add
imul
mov
adc
dec
xchg
mov
clc
rcr
jge
and
bound
pop
push
push
scas
inc
loope
ret
mov
enter
fmull
mov
test
pop
jno
jns
outsl
fbld
push
dec
in
push
push
dec
xchg
xchg
xchg
cmpsl
ja
jmp
xchg
adc
sub
xchg
pop
mov
test
aad
xor
add
add
and
lret
mov
popf
jo
and
jle
cmpsl
or
add
add
out
imul
sti
mov
scas
loop
mov
inc
mov
sbbl
mov
pop
pop
push
dec
mov
dec
pop
cmp
add
int3
in
dec
xorb
or
add
add
adc
jne
repnz
mov
jb
inc
int
mov
add
outsl
loop
inc
mov
test
add
pop
stos
jle
rcr
jne
and
dec
jo
leave
and
add
add
pop
dec
push
fldl
lcall
mov
add
add
jl
lret
mov
push
bound
mov
lret
dec
pusha
mov
pop
mov
pop
aam
push
ret
cld
add
or
add
add
out
pop
les
push
in
or
lods
sbb
hlt
pop
aaa
inc
fidivrl
dec
call
push
cmp
add
shlb
push
or
add
cmp
adc
mov
loopne
mov
out
out
out
push
js
inc
fs
mov
out
inc
mov
add
and
and
add
or
add
add
or
push
insb
add
add
lds
add
scas
or
jne
test
sbb
add
cmp
xchg
push
inc
orb
mov
stos
sbb
pop
shlb
dec
mov
hlt
xchg
adc
xchg
dec
rcrl
push
scas
push
jbe
in
pop
repnz
lahf
adc
add
ss
inc
pop
or
or
add
add
dec
add
add
add
mov
das
inc
mov
add
add
pop
stos
mov
add
add
mov
lret
and
scas
mov
fisttpll
add
in
das
push
fwait
hlt
lret
add
add
in
int
sbb
mov
push
mov
mov
dec
dec
mov
mov
aas
jne
mov
loopne
cmp
incb
orb
cltd
fadd
mov
cwtl
outsb
cmp
int
jnp
or
add
add
popf
push
cmpsb
adc
rcrb
adc
or
add
add
cld
dec
push
push
pop
xor
not
pop
js
enter
and
cli
cmc
fs
pop
xchg
add
add
cmp
add
inc
mov
loope
out
push
pop
push
lret
add
add
mov
xlat
scas
shlb
les
add
or
add
add
and
pop
sub
add
add
add
push
jecxz
xchg
adc
xlat
subb
mov
xchg
int3
mov
imul
xchg
sti
jecxz
sahf
cli
push
push
jno
aam
add
add
pop
pusha
add
add
mulb
scas
xchg
adc
jb
sub
add
add
je
sahf
subl
xchg
sbb
testl
nop
sub
cmp
jmp
jno
push
jae
pushf
xor
xor
imul
add
adc
xrelease
mov
add
bound
dec
add
and
add
add
cwtl
inc
mov
xor
jnp
and
sahf
cmp
mov
push
incl
push
mov
cmp
dec
pop
les
add
add
stc
int
dec
add
add
orb
clc
les
and
add
add
out
test
pop
sub
add
add
fbld
loopne
xchg
add
in
add
add
fcmovb
popf
xor
cmpsl
mov
fstps
mov
jns
daa
sub
mov
daa
idivl
push
xchg
psllq
mov
fisttps
cmp
sahf
imul
mov
dec
xchg
ret
scas
imul
or
jae
add
add
pop
mov
sub
add
add
lret
imul
in
cmp
add
leave
fstps
xchg
mov
mov
lods
add
mov
add
and
add
add
pop
rolb
push
mov
pop
cmp
arpl
add
hlt
clc
in
lret
loope
das
add
lret
cmp
cmp
test
dec
mov
mov
movsl
mov
repnz
xchg
push
int
into
inc
add
add
dec
mov
je
gs
push
sarl
movd
rcr
add
add
out
mov
xchg
sbb
add
fs
cmc
dec
mov
mov
dec
psrlw
add
add
rorb
add
add
add
add
test
adc
or
bound
pop
push
add
movl
rcrl
and
push
adc
and
add
add
sbb
cmp
pop
pushf
mov
and
scas
ficomps
sub
or
movsb
inc
scas
cmc
imul
mov
and
add
add
sbb
lcall
stos
fisubs
xor
mov
push
popa
mov
xor
mov
sub
add
add
mov
inc
arpl
jmp
add
add
fs
lret
in
adc
call
adc
add
add
xor
gs
test
or
dec
mov
stos
cmpxchg
sahf
xchg
cmc
adc
add
add
and
imul
push
jne
aad
out
mov
ljmp
sahf
test
sub
xchg
out
ds
fistpll
add
mov
addr16
mov
add
add
and
xchg
aad
sbb
mov
int
sbb
add
add
test
mov
inc
and
cmpl
dec
mov
lds
add
call
add
cmpsl
je
mov
les
std
inc
sub
push
leave
lahf
ret
inc
popf
das
cs
aad
jl
lret
cmp
add
add
insl
jo
xor
cmpb
pop
mov
aas
push
mov
add
or
lock
mov
inc
or
add
out
jae
cmpsb
inc
add
add
fmuls
mov
and
or
add
add
sahf
xchg
inc
mov
add
add
xor
mov
das
shl
scas
xor
add
rclb
jge
xchg
push
cmp
bound
pop
cmp
sahf
pop
pop
les
or
sbb
jg
sub
aas
push
fstpl
outsl
push
outsl
push
jae
fimuls
xor
add
add
jg
shl
imul
and
add
add
ss
push
dec
mov
std
imull
push
dec
mov
xor
adc
aas
xorl
add
jnp
les
nop
sahf
push
mov
pop
xor
or
stc
daa
dec
dec
mov
in
icebp
rol
mov
repz
daa
pop
add
add
add
adc
push
mov
push
push
mov
loopne
mov
insb
add
add
aaa
xlat
sahf
ljmp
mov
pusha
mov
movsb
mov
xchg
inc
add
add
inc
inc
add
add
jecxz
js
pop
fidivrl
add
add
sbb
insb
mov
in
cs
mov
sbbl
xor
call
add
adc
and
add
add
pop
fcoml
test
fldt
mov
movsb
lea
add
add
adc
jns
adc
ss
sbb
stc
add
rcrb
and
jecxz
mov
xchg
out
popf
cli
subl
repnz
xor
imul
into
pop
in
xchg
mov
in
outsw
xchg
insb
add
add
subl
mov
cli
pop
push
inc
mov
jmp
dec
pushf
push
push
dec
mov
xor
mov
shlb
or
adc
xchg
outsl
mov
add
stc
pushf
gs
pop
sti
iret
loope
dec
in
repnz
fs
push
pusha
mov
add
add
xchg
xor
inc
mov
mov
pop
imul
decb
stc
jl
test
mov
fistpll
stc
dec
mov
pop
outsb
and
mov
stc
shll
mov
xor
and
add
or
inc
dec
add
add
cmpsl
inc
dec
imul
add
sahf
iret
jle
fimull
add
lret
mov
pop
test
nop
cmpsl
andl
add
add
xchg
pop
ljmp
dec
popa
inc
add
add
xchg
push
jge
add
add
mov
inc
push
insl
ljmp
movsb
popf
adc
push
scas
sbb
sarb
mov
mov
push
int3
leave
jns
pop
movsb
insl
pop
hlt
loopne
cmp
leave
add
cmp
mov
dec
ret
jno
mov
test
add
cmp
stc
insl
sahf
out
mov
adc
call
in
mov
mov
push
cld
rolb
mov
jnp
jbe
ret
mov
push
inc
xchg
dec
xor
add
mov
jns
mov
sub
repnz
add
add
jbe
mov
sub
add
add
add
add
push
jmp
jle
out
xchg
icebp
xchg
pop
pop
cmp
cmp
sub
inc
xor
out
setp
adc
cwtl
int
mov
push
loop
std
push
lods
repz
add
ret
add
add
mov
icebp
int
mov
jae
adc
leave
ja
out
jb
and
sti
adc
lahf
ss
push
mov
cmpl
jp
rcrl
pop
fnstcw
pop
outsl
jbe
outsl
or
repz
inc
subb
test
fistps
jmp
xchg
or
pop
icebp
push
mov
push
shll
mov
or
add
add
sahf
mov
mov
xchg
add
mov
lds
movsl
push
data16
mov
add
les
add
add
push
and
add
add
stc
fwait
add
add
rcrl
lret
xor
mov
add
add
pop
push
clc
adc
mov
fdivr
mov
fdivl
insl
adc
pusha
mov
sar
mov
mov
mov
mov
ret
movsb
shrl
add
cmp
pop
call
pop
sbb
jae
insb
add
add
xorl
add
add
add
add
cmpb
aad
scas
jle
pop
lret
sbb
add
add
cld
cmp
add
add
scas
fistl
inc
jge
fcmovbe
lea
add
ds
sbb
mov
daa
push
mov
out
iret
insb
mov
inc
add
add
sbb
xchg
enter
xor
adc
pop
xchg
cmpsl
cmp
dec
jae
imul
dec
mov
aam
mov
sbb
mov
shrb
add
add
das
jg
cmpb
xor
les
lods
bound
les
push
push
adcb
enter
sti
cmp
adc
cmp
loopne
add
cli
lods
ja
lret
sbb
lcall
in
sbb
pushf
push
bndldx
sbb
outsb
sbb
cmpsl
dec
out
clc
xchg
roll
rcr
dec
ss
lock
insl
das
frstor
and
ret
into
and
inc
call
add
add
add
dec
mov
mov
push
cmp
sbb
outsl
mov
mov
add
add
add
mov
popa
nop
aas
inc
add
add
inc
or
fsubl
inc
push
and
pop
jle
sub
cmc
pusha
add
add
mov
loopne
cmc
mov
sbb
push
mov
pop
rorb
arpl
ror
sbbb
mov
subb
mov
cmp
out
jp
ja
xor
ss
cmp
add
add
add
add
add
test
je
add
add
je
les
mov
outsl
icebp
ret
jle
mov
sub
leave
xchg
shrl
lahf
cwtl
dec
lods
or
mov
jge
stos
xchg
arpl
sub
mov
sti
pop
aad
push
daa
mulb
call
xor
cmp
add
push
add
ficompl
add
add
lcall
decb
lods
push
je
imulb
js
adc
lcall
add
ret
dec
call
lcall
stos
int
jno
adc
movsl
adc
add
and
add
add
add
mov
in
out
or
bound
scas
mov
aas
push
jl
xchg
and
add
add
add
notl
pop
rcrl
cmp
cmpsl
shl
xor
cmp
add
add
add
add
add
js
nop
pop
and
add
add
mov
jmp
aam
adc
add
add
jnp
fwait
push
add
ret
jle
lahf
ss
movhps
fwait
loope
push
xchg
imul
leave
sbb
sar
mov
add
sub
dec
int3
push
and
push
je
lock
insb
add
add
push
pop
fdivrl
add
jae
lods
sbb
hlt
das
rorb
jge
mov
sbb
mov
aaa
mov
shl
daa
aad
jae
dec
add
add
or
into
mov
loopne
adc
out
pop
ret
mov
rcrb
mov
pop
mov
mov
mov
in
dec
stos
and
pop
adc
add
fnsave
sahf
sub
add
add
std
mov
mov
fmull
mov
test
xlat
js
cmp
add
lahf
mov
ss
test
sahf
testl
cmpsl
stc
lods
pusha
add
add
nop
or
add
add
sti
mov
pop
cltd
rcrl
mov
add
lea
sbb
add
ret
mov
mov
add
in
mov
jbe
mov
ds
mov
xor
mov
std
adc
mov
add
push
sbb
cmp
mov
arpl
xchg
xchg
dec
mov
shl
ficoml
test
jo
rcr
inc
mov
add
push
aaa
push
adc
mov
movsl
xchg
xlat
into
aad
cmpsb
push
mov
xlat
fwait
repz
inc
ljmp
insb
add
add
call
add
mov
add
add
mov
lea
int
orb
sub
add
add
jnp
lret
jnp
daa
or
add
add
sbb
ds
in
jmp
mov
enter
cltd
je
sti
and
faddl
sub
or
add
add
add
add
icebp
mov
mov
leave
adc
je
and
insl
push
mov
sahf
add
add
add
adc
lcall
add
add
mov
std
push
shll
gs
es
jb
sub
pop
jae
enter
rolb
mov
and
add
add
add
cltd
sarb
mov
roll
or
jae
add
add
mov
leave
lea
mov
cmp
int3
repnz
dec
add
add
push
rcll
adc
xlat
mov
jle
outsl
dec
add
aad
xchg
aad
ret
pop
mov
and
ss
mov
sahf
scas
inc
int
or
daa
adc
jle
sbbl
mov
mov
enter
xchg
cmp
add
add
incl
add
add
fisttpl
add
add
mov
pusha
mov
inc
out
or
add
cmp
ds
push
cmp
add
add
add
add
add
fsts
dec
js
lcall
add
out
hlt
or
push
push
jbe
orl
outsb
test
mov
adc
pop
inc
ret
js
push
dec
not
lds
jle
dec
mull
cmp
and
add
add
stos
inc
mov
xchg
insl
insb
add
add
jno
sub
dec
mov
xchg
xor
scas
xor
mov
jb
clc
es
sbb
and
sub
add
add
hlt
pop
mov
cmc
jg
push
mov
add
or
add
add
add
add
out
scas
push
mov
add
add
loope
fsubr
daa
jp
pop
mov
shlb
das
adc
add
xorl
scas
leave
sbb
movsb
pop
inc
dec
lret
fiadds
mov
imul
ret
mov
pop
mov
push
stos
jo
inc
dec
mov
pusha
mov
sbb
test
mov
add
loope
inc
movzbl
loop
pop
xchg
loope
inc
out
dec
mov
pop
cmpsl
movsl
mov
mov
dec
mov
add
add
adc
shrb
loope
cmp
add
cmpsb
mov
ret
adc
fadds
cmp
sbb
add
inc
add
add
xchg
ficoms
push
sub
add
add
lods
scas
and
jge
add
add
adc
pop
pop
or
dec
xor
jp
and
arpl
movl
add
mov
mov
push
xchg
repz
psraw
lret
lds
cmpsb
jno
sub
add
add
add
inc
add
add
inc
mov
int
sub
addl
add
jno
test
add
add
lea
imul
mov
cmpsl
jo
cs
xchg
mov
add
add
mov
mov
adc
insb
mov
imul
adc
add
pushf
pop
inc
xchg
sbb
mov
into
dec
mov
shl
clc
ja
jno
shlb
add
dec
dec
out
hlt
pusha
mov
imul
mov
ret
xor
stos
sbb
add
pop
sbb
xchg
cmp
jbe
fwait
push
pop
push
movsl
xchg
pop
insl
sbb
adc
add
dec
rorb
aaa
lahf
out
setae
add
add
jno
sub
pop
test
mov
pop
pop
cltd
dec
add
add
pop
js
insb
add
add
xchg
dec
xor
and
loop
cltd
jg
nop
adc
dec
push
push
or
jmp
cmp
xor
scas
dec
sar
clc
cmp
cmp
push
je
sub
add
add
adc
fwait
jg
mov
repz
out
lret
dec
add
cmpsb
mov
mov
mov
int
das
cli
les
ljmp
sti
addr16
int3
out
cld
push
ss
movsl
jecxz
mov
aad
adc
cmpb
into
xor
and
add
add
add
fistl
out
or
xchg
icebp
mov
adc
and
dec
rcrl
add
add
test
jb
es
out
push
cmp
xchg
mov
outsl
sbb
sub
add
add
movsb
inc
ss
fdivrp
mov
rcrl
and
incl
popa
xor
dec
add
add
jbe
imul
push
push
add
add
or
add
add
pop
xchg
mov
add
add
nop
enter
iret
push
fs
fistps
pop
out
dec
adc
adc
xorl
cmp
xor
inc
mov
cs
push
xchg
in
sub
add
add
call
xor
scas
mov
adc
inc
mov
xchg
dec
ljmp
fs
mov
cli
lcall
jne
push
ja
mov
mov
mov
adc
jle
pop
hlt
sub
xlat
ret
inc
add
add
dec
or
adc
ret
jl
push
sahf
mov
push
push
cmpsb
les
add
adc
sub
add
add
mov
add
add
hlt
dec
xchg
pop
add
sti
add
add
add
sub
mov
mov
call
jo
fistps
inc
sti
js
stos
enter
cs
fldl
cli
cmpsb
mov
pop
sbb
add
add
stc
popa
jecxz
mov
inc
xlat
add
les
mov
sub
add
add
lahf
cmpsb
mov
out
push
mov
jg
xchg
xchg
inc
pusha
mov
mov
fildl
add
add
add
loope
int3
outsl
cld
leave
xchg
sub
mov
outsb
push
mov
push
inc
jnp
scas
cli
repnz
clc
std
push
lds
popa
push
ljmp
push
adcb
cwtl
loopne
mov
rclb
add
cmp
ljmp
fwait
jmp
adc
je
sub
sti
adc
cld
inc
test
xchg
mov
sahf
sub
inc
pop
add
xchg
xor
xor
in
mov
mov
mov
sub
pushf
xchg
sbb
ds
cmp
jl
xchg
fcmovne
sbb
pop
leave
xlat
ret
daa
jp
jle
fisttpll
add
add
sub
add
add
add
add
out
adc
jae
adc
pop
addl
cmp
lret
lods
call
mov
add
add
leave
xorl
sub
mov
ffree
addr16
shlb
add
shrl
aad
test
pop
mov
add
add
cltd
divl
and
add
add
mov
pop
xchg
ja
aas
aas
enter
mov
dec
add
add
lcall
add
add
stc
cmp
int3
jp
aas
fnstcw
cmp
ret
dec
push
and
insl
stos
sbbb
add
add
in
xchg
pop
sbbb
daa
push
and
mov
push
sbb
xchg
in
add
add
mov
data16
repnz
ret
or
mulb
inc
inc
rcr
dec
insb
mov
dec
mov
aas
pop
dec
add
add
and
les
push
shrl
add
add
gs
lret
rcrl
aas
imul
arpl
add
add
or
in
out
lods
dec
mov
lahf
mov
test
scas
xlat
adc
mov
loopne
rolb
xchg
jb,pn
xchg
cmp
js
outsb
ss
mov
add
adc
add
add
mov
sub
cltd
imul
jbe
dec
fiadds
fisubl
adc
adc
and
push
adc
xor
stc
sbb
add
add
mov
test
add
inc
add
shll
sbb
mov
xlat
mov
add
mov
pop
and
add
add
ss
mov
clc
scas
xor
ss
jl
add
add
xor
adc
jmp
mov
or
stos
jge
ds
dec
pop
xlat
lahf
cmp
pusha
add
add
pop
jo
les
subb
mov
pop
add
add
pop
jge
sbb
mov
add
add
pop
test
jecxz
ss
pusha
mov
pop
fwait
sarb
mov
cmp
jecxz
mov
add
add
lods
pop
xchg
scas
loopne
mov
mov
add
rcrl
pop
ret
in
je
push
in
add
loope
push
xchg
arpl
sbb
add
add
hlt
xor
xchg
scas
adc
push
jmp
add
add
add
aam
mov
push
and
jns
mov
loope
add
add
jl
gs
jne
arpl
add
jo
push
cltd
sbb
and
pop
and
mov
outsl
ljmp
xchg
addr16
mov
add
add
cmp
dec
push
inc
sahf
push
aaa
pop
movsb
andl
sub
add
add
fsubp
les
lret
add
add
xor
mov
fimull
adc
stc
pop
les
sub
scas
cli
pop
ret
cmc
sub
add
add
in
add
adc
add
dec
cmpb
pop
pop
xchg
call
icebp
pop
aaa
je
fidivrl
fidivs
add
add
and
mov
add
add
jno
dec
jp
cmp
or
mov
adc
xor
shrl
add
inc
in
jl
in
das
fimuls
aad
das
adc
pop
stos
stos
add
and
add
add
jo
mov
loopne
or
in
and
add
js
add
add
std
and
add
add
jle
add
add
add
es
lds
pop
pop
sahf
lds
sarl
cmp
movsl
movb
add
or
jb
inc
mov
mov
mov
jle
fs
sub
add
add
cmp
mov
rcrl
cmp
cmovle
xor
add
add
dec
inc
add
add
sbbl
mov
cmp
add
add
mov
xor
push
out
rcll
nop
jns
shl
or
cmpb
push
aas
sub
add
add
mov
xchg
add
add
subl
cwtl
or
lcall
dec
push
add
sbb
add
cmc
adc
ret
and
in
mov
pop
fadd
movsb
insb
add
add
and
xor
ret
jae
jmp
push
jne
mov
lret
sub
add
add
add
add
rolb
pop
xor
rcpps
adc
sub
jecxz
jecxz
jecxz
mov
or
gs
dec
mov
add
int
inc
stc
jge
pop
pusha
add
add
xabort
lret
lock
mov
ret
jbe
xchg
call
inc
xchg
cmp
cmpsb
imul
out
mov
pop
outsl
xchg
dec
fwait
adc
lds
out
nop
dec
mov
push
sbb
pop
jecxz
femms
jns
rclb
push
mov
add
or
aad
mov
clc
sbb
gs
mov
testb
add
add
lcall
add
add
add
repz
mov
mov
mov
add
inc
push
and
add
add
jmp
sub
add
adc
jp
out
mov
push
pop
iret
jmp
or
sub
mov
bound
or
mov
add
fmull
outsb
fldcw
add
add
adc
dec
mov
fwait
pop
xlat
mov
movsb
inc
int
jo
mov
mov
and
je
jbe
nop
cmp
aad
out
sarb
mov
mov
add
or
or
add
add
xor
add
add
push
push
xchg
push
ljmp
add
add
outsl
test
or
push
inc
inc
add
add
scas
cli
mov
push
inc
mov
cli
mov
fdivrl
add
mov
testl
das
mov
add
not
dec
lret
jne
repnz
add
add
and
sbb
add
add
fnstsw
inc
cmp
test
int3
mov
mov
jae
subb
add
add
pop
loopne
mov
into
xor
int
add
pop
mov
jmp
mov
jg
push
sub
add
add
pop
push
pop
and
or
xchg
test
fwait
push
inc
push
inc
add
add
mov
out
and
orl
add
add
add
mov
add
jo
pushf
adc
push
sbb
jno
push
aad
add
fmul
sbb
test
add
rorb
jne
rorb
sub
add
add
es
sub
sub
fistl
dec
mov
std
pop
out
in
add
add
mov
ret
dec
add
add
negb
pusha
add
add
std
pop
sub
sub
pop
or
jp
jo
leave
lret
inc
call
add
add
sbb
insl
ljmp
test
adc
add
stc
cmp
add
add
adc
xchg
mov
imul
add
add
call
jg
leave
ret
aas
pusha
mov
lds
mov
repz
dec
inc
add
add
and
add
mov
mov
call
testl
add
into
pop
xchg
add
add
add
insb
mov
sbb
pop
dec
add
add
add
or
or
mov
pusha
add
add
dec
add
add
sub
add
add
ss
stc
inc
outsl
out
rclb
lods
ss
pop
repnz
pop
cs
int
lret
test
aas
push
dec
push
xchg
pop
inc
mov
mov
xor
add
out
shl
aad
sub
fs
add
add
xchg
pop
cmc
in
add
add
mov
testl
clc
in
dec
mov
mov
movsb
mov
insb
mov
push
mov
or
add
add
aaa
loop
and
filds
sbb
xchg
push
xor
hlt
loopne
call
mov
adc
gs
fdivs
out
add
add
add
nop
mov
mov
roll
nop
sbb
shr
inc
in
loopne
cmc
pop
stos
xor
jge
dec
mov
rorb
nop
testb
or
jmp
loop
mov
stc
aad
test
lds
cltd
or
add
add
sarb
icebp
loopne
mov
or
add
add
pop
lea
lods
xor
adc
dec
lret
mov
loopne
add
add
jnp
or
mov
imulb
sbb
mov
rcl
mov
mov
add
add
insb
mov
add
add
imul
dec
pop
pop
pop
in
dec
add
add
xchg
push
inc
add
add
xchg
ret
loopne
push
mov
push
outsl
xchg
test
or
add
sbb
and
add
add
mov
xlat
mull
adc
lods
dec
add
add
aaa
js
adc
add
add
add
add
pop
es
lock
dec
add
add
gs
pusha
mov
inc
test
sbb
and
cltd
dec
or
arpl
add
add
cmpsb
das
imul
mov
insl
jle
andl
inc
ret
ret
jae
shlb
loop
and
scas
jnp
lcall
fistl
sbb
add
stc
mov
in
mov
cmp
repz
add
add
repz
jae
jb
xor
jne
cmc
cmp
mov
add
add
ret
add
add
add
aas
mov
push
adc
mov
leave
movsb
cmp
incb
mov
dec
mov
test
jno
add
add
cltd
in
cmpl
mov
aad
pop
adc
aaa
pop
xor
hlt
and
push
add
bound
cmpb
mov
fwait
mov
jg
xchg
out
fldl
cmp
add
add
ljmp
aas
mov
or
add
add
cmp
mov
out
loopne
push
xchg
or
dec
jne
lret
or
add
add
inc
sbb
and
add
add
aas
mov
add
fadds
imul
aaa
je
aas
mov
sar
je
test
lahf
sti
push
lea
add
add
js
mov
int
add
add
and
add
add
lret
push
test
shl
mov
sub
movsl
fstps
push
imul
bound
inc
mov
repz
xchg
js,pn
into
aad
mov
pop
popa
xchg
push
adc
aas
mov
and
mov
cmp
hlt
mov
fnstenv
mov
dec
mov
sub
adc
push
xchg
xchg
jle
jecxz
pop
sub
add
add
bound
push
dec
clc
lds
xchg
mov
mov
call
add
and
add
add
add
add
add
dec
ja
das
fists
adc
int
add
add
add
sbb
fidivrl
jge
cld
pop
negl
xor
imull
lea
out
adc
mov
jb
push
mov
lods
jle,pt
dec
mov
ljmp
int
mov
test
imul
aaa
repz
loop
mov
aaa
jmp
adc
xchg
or
adc
rcrb
and
test
das
or
sbb
into
jle
dec
add
add
xor
jge
cwtl
xchg
shrl
les
adc
cmp
add
add
mov
mov
cwtl
jae
lds
in
int
stc
lcall
negl
dec
scas
xchg
adc
or
cmpb
pop
mov
add
add
cmp
lods
hlt
pop
mov
mov
mov
mov
push
push
into
mov
imul
or
pop
lret
add
add
add
add
add
dec
jae
addr16
jge
cwtl
hlt
sub
and
add
add
fwait
push
imul
ret
test
mov
lods
or
adc
sub
jno
notb
andnps
sub
add
add
into
ret
xor
shl
out
gs
inc
mov
aas
dec
lret
inc
in
push
push
sbb
inc
lret
repnz
and
loope
mov
push
je
insl
mov
xchg
mov
fnstsw
add
add
xor
in
imul
outsb
and
outsb
jecxz
mov
popf
loopne
push
fst
add
dec
mov
dec
xor
cs
jg
mov
inc
mov
ljmp
movsb
pushf
out
adc
push
sub
or
add
push
ret
fbstp
divl
ret
adc
mov
cmp
dec
and
stc
imul
movsl
jecxz
orb
insb
mov
inc
inc
mov
dec
mov
movsb
sub
or
out
stos
sbb
mov
sbb
xlat
sti
sbb
mov
xchg
scas
sub
add
add
ljmp
shlb
mov
mov
outsl
ss
pop
pop
mov
add
loopne
mov
xor
dec
mov
sbb
cmp
or
add
add
mov
ja
add
add
repnz
add
add
mov
mov
cmp
mov
inc
clc
pop
sbb
jmp
add
add
dec
fists
insb
mov
dec
mov
xchg
lret
inc
mov
test
add
and
out
subl
or
add
add
mov
push
rcrl
fwait
mov
push
daa
push
sbb
jmp
xchg
idivb
ror
pusha
add
add
sub
push
outsl
ret
push
and
add
add
leave
xor
fwait
and
add
data16
jo
mov
das
out
jle
mov
ja
pop
fs
inc
lea
out
gs
mov
add
rcll
xor
dec
mov
mov
dec
cmp
notb
add
add
push
ret
push
sub
imul
xchg
xchg
lock
xchg
ja
or
clc
or
add
add
lds
sub
add
add
xchg
out
ret
repnz
fcoms
mov
fidivrl
aad
imul
jmp
adc
mov
mov
push
xor
jecxz
andb
mov
movsb
cltd
lahf
xchg
loope,pn
mov
mov
lods
gs
cmpsb
insl
decl
mov
mov
inc
mov
add
add
xchg
enter
add
cmp
loope
fistps
mov
sub
add
mov
enter
lahf
xchg
or
xor
lcall
js
or
push
nop
or
add
add
add
and
add
add
add
in
clc
and
pop
nop
fs
inc
mov
jae
xchg
pusha
add
add
xchg
jl
mov
pop
xchg
add
add
push
outsl
cmp
and
add
add
ja
imul
iret
in
mov
mov
mov
add
out
loop
sbb
xchg
loopne
dec
mov
insb
add
add
out
in
mov
push
movsb
cmp
mov
fs
enter
std
rcll
popa
mov
cmpsl
mov
add
jecxz
sahf
mov
int3
mov
add
add
adc
jne
push
pop
add
push
setae
mov
inc
out
mov
mov
fs
out
cltd
xor
push
dec
push
flds
sub
add
add
je
addr16
lcall
add
add
add
xchg
std
das
dec
and
in
cmc
popa
js
add
or
add
add
outsb
int3
sbb
inc
loopne
push
bound
add
add
push
jno
test
popa
movsb
sarl
aad
mov
or
mov
push
lea
mov
add
mov
dec
fidivrl
repnz
inc
xchg
out
in
or
into
test
mov
mov
in
fs
xor
xor
aam
les
aam
jb
sbb
lock
jecxz
nop
push
pop
imul
sub
add
out
mov
or
push
and
adc
vmread
inc
xor
and
sbb
sub
add
add
pop
sub
add
add
jo
mov
sti
mov
lock
jbe
pop
outsl
loop
adc
out
ret
lds
adcl
add
aaa
mov
cmpsl
adc
lret
mov
and
add
add
sbb
xor
add
adc
or
add
ljmp
adc
push
sub
int3
xorl
push
inc
sub
fstpl
lock
adc
cmpb
in
mov
inc
add
add
fimuls
ss
hlt
loope
clc
clc
and
add
add
jl
mov
sbb
xor
pop
in
mov
iret
lcall
add
adc
push
xchg
iret
insl
xchg
add
add
cmp
add
pop
loope
cmpsl
and
add
add
xchg
sub
std
jnp
daa
lcall
jnp
fs
sub
inc
mov
adc
movsb
fwait
pop
leave
jle
mov
mov
sarb
mov
pop
into
rcrl
insb
mov
insb
add
add
repnz
inc
add
add
add
jmp
or
add
add
lret
add
add
test
stos
push
sahf
sub
add
add
add
push
pop
mov
sbb
mov
das
and
add
add
lods
push
sub
mov
add
add
ja
dec
add
add
adc
stos
push
mov
jle
add
add
arpl
adc
add
lret
mov
add
add
repnz
jmp
add
add
nop
inc
mov
das
ljmp
add
cld
shrl
add
add
sahf
daa
add
iret
pop
inc
add
add
sbb
add
jb
xchg
jmp
and
add
add
sub
call
cmp
icebp
push
bnd
in
push
clc
sahf
inc
and
rcr
cmp
xchg
nop
push
int
xchg
and
lcall
inc
add
add
and
add
add
add
add
and
add
add
js
lea
cmpsb
cmpsl
and
add
add
add
add
add
addr16
sarl
shll
inc
mov
icebp
mov
inc
mov
pop
es
cs
arpl
add
add
adc
cmpsl
push
mov
lret
cmpsl
cltd
popf
cmpsb
xchg
add
fnstenv
xorb
xchg
cmp
push
pop
pop
lds
mov
dec
add
scas
loop
adcl
push
cmpsb
sete
outsb
std
sub
add
push
pop
aaa
and
add
add
push
mov
adc
add
ret
or
loope
inc
les
mov
pop
loope
js
sub
xlat
and
add
add
pushfw
fwait
test
aam
or
lahf
or
pop
push
pusha
add
add
jecxz
adc
fcmovnb
mov
mov
dec
das
rcl
sbbb
loopne
jbe
std
add
and
add
add
and
mov
add
add
call
repnz
sti
push
mov
jbe
out
xchg
sti
adc
gs
add
outsb
cmpsl
rorb
add
add
add
arpl
sub
pop
in
scas
adc
jne,pn
not
in
cli
addr16
inc
js
jp
cmp
in
mov
xor
pop
inc
mov
jnp
popa
or
add
add
mov
mov
iret
jnp
sbb
add
add
xor
std
and
add
add
ficompl
adc
pop
xchg
adc
adc
out
ljmp
adc
mov
cltd
mov
jo
call
mov
lea
add
push
push
popf
jno
out
cmp
mov
loope
outsb
out
or
cmp
lcall
pop
dec
leave
pop
or
aas
loop
or
pop
lret
repnz
imul
push
lahf
jo
rcll
adc
andl
xchg
push
cmp
mov
ret
std
mov
add
and
js
int
dec
int
jne
das
fwait
xor
add
add
mov
cmp
add
fistps
rcll
mov
fsubrp
addr16
inc
add
add
push
popf
push
add
sub
and
das
rcll
je
insl
pop
into
js
and
fbld
mov
and
fcmovb
or
lahf
call
mov
add
mov
pop
inc
mov
and
xchg
push
jmp
sub
mov
test
rol
lods
das
and
add
add
pusha
add
add
mov
add
push
push
push
enter
fdivs
jbe
xchg
clc
inc
pop
scas
arpl
jnp
xor
pop
mov
shlb
mov
cmp
int
adc
mov
aam
lods
pop
push
add
push
popa
icebp
cld
les
adc
in
sub
add
add
mov
jno
dec
mov
adc
sub
push
and
push
add
mov
mov
lods
imul
mov
inc
push
ds
add
xor
mov
add
mov
in
fwait
jecxz
fnsave
adc
add
sbb
stc
xchg
xchg
cmc
jns
scas
in
outsl
add
add
ret
sar
jg
sbb
add
movsb
lea
or
orl
push
sub
cmp
ror
mov
xchg
rcrl
jo
dec
push
jnp
inc
mov
sbb
xor
jecxz
mov
add
add
lret
jp
push
xchg
mov
pop
jns
inc
pop
jg
mov
xchg
sbb
sub
add
dec
xchg
je
mov
mov
mov
mov
add
add
add
sbb
mov
std
xchg
in
and
add
or
add
add
cmp
inc
add
add
in
repz
xlat
pop
je
imul
fsts
sub
lods
movsb
adcl
mov
stc
jl
sub
aaa
rcll
ds
dec
xor
add
add
add
add
push
xchg
bound
sbb
shl
add
add
and
fcmovb
mov
xchg
stc
lret
xchg
popa
xchg
sub
add
add
imul
sbb
add
add
cmp
ret
sbb
mov
scas
xchg
test
aad
mov
sub
add
add
mov
jns
scas
aad
paddb
jmp
xchg
sbb
movsb
jg
fwait
shl
push
add
out
cltd
repz
xor
inc
mov
sbb
add
xchg
mov
movsl
add
xchg
repz
jbe
lods
push
push
fsubp
sub
add
add
idivb
push
push
jae
xchg
sbb
mov
pusha
add
add
fildll
pop
mov
add
aad
orps
mov
jp
sbb
mov
jb
xchg
lahf
pop
lea
add
add
out
gs
lcall
add
jecxz
add
add
mov
add
push
sbb
sti
pop
or
add
add
imul
clc
aaa
mov
sub
add
add
into
mov
pushf
dec
test
add
add
fcom
hlt
cli
push
push
pop
and
in
add
sbb
rolb
xor
xor
add
mov
sbb
mov
push
sub
add
add
jnp
jge
pop
popw
fsub
cmp
mov
cmp
jns
or
add
add
fldcw
js
add
add
cmp
hlt
adc
xchg
movsb
push
mov
popf
xor
lods
orl
jnp
mov
jmp
adc
orb
stos
and
js
sbb
loopew
push
lods
add
lahf
lret
repnz
mov
jno
add
pusha
add
add
sbb
movsl
into
fwait
xor
inc
add
add
mov
adc
std
sub
add
add
fs
jmp
adc
pop
lfs
xchg
ljmp
add
mov
cmpsb
call
cmp
sbb
add
and
xor
iret
or
ss
jne
test
and
insb
add
add
arpl
sub
add
add
lods
push
subl
and
cwtl
int3
rcr
js
ret
add
mov
loop
or
out
cmp
mov
xor
adc
in
cmp
pop
jne
xor
add
add
lret
adc
adc
add
add
add
test
arpl
mov
add
or
aas
hlt
pop
jg
imul
add
push
cld
cs
adc
or
add
add
xor
add
add
inc
push
xorl
push
push
test
xchg
push
fidivs
jecxz
daa
popa
ror
xchg
test
add
add
fildl
push
out
repnz
rcr
sub
out
jge
xor
test
int
mov
icebp
test
mov
ljmp
sarb
shrl
pop
sbb
lds
adcl
ret
sub
fwait
int3
mov
test
dec
or
xchg
mov
add
add
loop
push
repz
push
xchg
mov
sub
mov
cmp
add
add
idivl
mov
dec
sbb
inc
inc
add
lods
sti
push
jp
sbb
add
add
add
add
jne
mov
lods
fstpt
pop
sub
and
add
pop
pop
arpl
fldenv
das
sub
add
add
sar
mov
pop
movsl
inc
loop
mov
inc
mov
lcall
inc
add
add
add
add
add
mov
js
dec
xchg
pop
lahf
jge
pop
lret
lret
test
mov
add
add
push
push
pop
add
rcr
cli
cli
dec
sub
add
shll
xchg
enter
add
add
inc
insb
add
add
repz
add
pop
xchg
mov
push
test
add
outsb
jp
inc
bound
es
lret
push
or
das
fldcw
jae
call
call
add
adc
adc
add
add
add
roll
stc
fmull
ror
jnp
add
pop
or
test
add
xchg
clc
jns
sub
or
popa
popf
loop
inc
sub
add
add
mov
jbe
enter
repnz
adc
add
or
fcoms
add
cli
jo
adcl
add
add
stc
push
pop
aas
fnstenv
cltd
sub
add
add
add
cmc
cmp
popf
js
mov
add
dec
inc
call
adc
mov
xchg
xor
lds
jno
mov
add
add
inc
add
add
jecxz
xchg
clc
mov
mov
fs
xchg
xlat
arpl
out
push
push
sub
ret
mov
mov
cmc
les
mov
add
add
add
mov
cmp
test
lods
xor
outsl
xchg
inc
add
inc
cmp
add
adc
enter
dec
add
add
jno
in
test
shll
nop
hlt
stos
frstor
add
imul
jle
clc
and
int3
mov
jbe
add
add
push
lahf
mov
mov
enter
arpl
cltd
insb
mov
pop
sbb
dec
jb
and
jno
mov
lcall
xor
pop
imul
lret
mov
cli
loop
inc
div
das
add
add
lea
loopne
add
in
sahf
mov
cmp
xor
xor
mov
fisubs
inc
add
add
add
add
add
add
add
add
xchg
or
repnz
jmp
lret
cld
pop
xlat
jl
dec
loopne,pn
iret
cmpsb
loopne
cld
pop
add
adc
mov
gs
mov
add
add
ret
cmp
jecxz
mov
cmpsl
inc
sahf
inc
adc
outsb
mov
sbb
mov
add
add
add
push
sbbb
fnstenv
in
and
mov
daa
ja
cmp
mov
addr16
dec
or
in
push
sbb
mov
xchg
aam
cmp
imul
scas
xchg
dec
shrl
leave
ja
cmp
add
cmpsb
sbb
sub
add
add
clc
and
lds
fwait
push
or
add
add
sub
add
add
fadd
mov
cmc
test
sbb
iret
call
pop
out
mov
push
stos
mov
add
add
out
pushf
jns
xor
pop
adc
add
add
data16
push
or
add
call
repz
sbb
div
push
sub
add
aas
mov
push
in
push
mov
lods
std
add
sbb
pop
xchg
cmp
nop
out
pop
adc
jne
or
pusha
mov
jo
and
add
add
mov
subb
add
add
add
add
pop
sbbl
add
fldcw
jge
jge
jb
nop
aad
leave
popa
hlt
test
pusha
add
add
loope
or
push
lret
or
mov
pop
or
add
add
je
mov
pop
cli
sbb
das
clc
div
mov
mov
add
ja
pop
push
int
sbb
popf
inc
mov
mov
jae
add
inc
rcrl
add
pop
out
push
pop
fadds
xchg
pop
inc
xchg
hlt
cld
push
cmp
jnp
jl
test
repz
clc
mov
cmpsb
popa
sbb
add
shl
push
xchg
mov
add
sub
or
pop
xor
xchg
pop
push
fxch
rcl
xchg
add
adc
mov
mov
adc
in
les
arpl
sbb
roll
add
add
mov
or
add
add
ljmp
add
add
mov
inc
add
add
add
out
cltd
sbb
jo
xchg
and
xchg
scas
aam
push
inc
or
sarb
mov
xor
mov
imul
fs
inc
int3
dec
mov
mov
sti
push
movsl
mov
sub
add
test
dec
inc
sub
add
add
jge
nop
in
mov
jae
or
add
add
popa
pop
sub
stos
movl
add
add
add
mov
sti
push
xchg
aad
rclb
cli
push
loop
mov
sbb
xchg
sbb
sbb
leave
shrb
add
add
out
rorb
or
inc
dec
add
add
cmp
jbe
ljmp
nop
cs
cltd
rorl
jns
and
add
add
xorl
add
shl
sbb
add
in
xor
pop
cmp
jno
sti
iret
iret
pop
das
cmpsb
add
add
add
cmp
xor
imull
ss
adc
mov
ljmp
sub
add
xchg
in
in
xor
jmp
xchg
out
mov
rcll
lahf
movsl
add
push
sub
test
dec
xor
mov
add
add
mov
lar
test
add
sti
inc
add
add
add
les
add
inc
mov
enter
sub
pop
fmuls
add
jnp
pop
and
add
add
add
lahf
ret
fistpl
stc
mov
je
rcrl
rolb
mov
or
cmpsb
xchg
int3
scas
mov
xlat
movsb
jecxz,pt
and
xchg
mov
je
mov
xchg
int3
sub
mov
push
stos
je
sbb
add
addr16
xor
add
add
in
mov
mov
add
mov
inc
mov
int3
roll
ficomps
adc
mov
hlt
fsts
sub
add
add
jp
fiaddl
jl
push
jge
xchg
add
add
mov
sub
mov
add
stos
xor
dec
add
add
frstor
stc
mov
in
mov
loopne
jne
jp
movsb
inc
imul
add
or
add
add
add
and
add
add
shlb
aaa
adc
and
add
add
pop
jg
jp
aam
mov
out
addr16
insb
mov
pop
add
loopne
fnstcw
lea
sub
add
add
cmp
mov
mov
rolb
aad
loopne
and
mov
mov
mov
mov
add
add
jbe
and
mov
xor
mov
push
arpl
and
mov
add
or
add
add
popa
jae
adc
pop
xchg
test
mov
testb
hlt
stc
and
push
sub
sub
add
add
ficomps
add
add
inc
add
add
add
jmp
inc
mov
add
add
mov
daa
pop
jne
pushf
mov
test
lods
insb
mov
or
mov
jno
xchg
std
test
outsl
sbb
mov
sub
add
add
xchg
cs
lock
add
scas
scas
mov
add
scas
aaa
in
cmpsb
sbb
cmpsl
insb
add
add
test
out
pop
bound
add
and
jne
pushf
dec
out
jmp
add
add
add
add
inc
mov
cmp
adc
lds
add
add
and
repz
ljmp
sub
imul
mov
jl
push
inc
mov
and
mov
pop
movb
orb
add
dec
rcrl
add
mov
sub
xchg
jecxz
popf
sarb
push
lds
inc
adc
fnsave
mov
in
mov
xor
outsb
xchg
dec
mov
cmp
add
jo
sahf
pusha
add
add
inc
sbb
push
jb
dec
add
add
pop
test
inc
sub
add
add
cmpsl
imul
rclb
imul
lret
inc
jl
mov
int
and
repnz
mov
sbb
inc
outsb
clc
vcvtsi2sd
cli
enter
add
add
test
sbb
cli
cwtl
inc
jmp
mov
js
xchg
pushf
cmp
adc
sbb
add
fsubs
push
inc
leave
pop
jecxz
ret
mov
aaa
mov
dec
jnp
rol
jnp
cli
sub
push
aas
cmp
insb
mov
popf
xchg
lahf
push
mov
cmc
push
shl
out
gs
scas
pop
sub
add
add
loope
sbb
fcomps
mov
inc
add
add
adc
daa
fucom
cmp
sbb
test
int
das
sub
sub
mov
aas
test
jb
ljmp
insl
clc
sbb
add
add
sbb
loopne
ret
call
call
inc
push
sbbl
mov
jo
stc
xchg
xchg
inc
add
add
xchg
push
jne
data16
and
mov
jmp
lcall
aam
cmc
jg
cmpsb
repnz
adc
fisubrs
and
add
add
loope
push
int3
paddsb
fsubl
stos
js
rclb
add
in
xor
add
add
or
js
cltd
dec
cmp
add
pop
outsb
dec
rorl
jmp
add
fsub
jge
mov
jecxz
orl
mov
and
into
js
add
add
xor
push
xor
mov
mov
shrl
add
popa
jbe
stc
xor
int3
lea
mov
mov
into
xor
xchg
and
mov
cwtl
jmp
mov
inc
lock
in
icebp
test
mov
dec
rcr
leave
push
ret
jge
cmp
hlt
sub
mov
andb
jecxz
js
xlat
and
pop
movsl
dec
mov
ljmp
fldenv
scas
hlt
jo
mov
add
or
loope
outsl
ret
jecxz
in
dec
add
xor
shll
dec
mov
pop
cmp
add
add
add
aad
negl
push
mov
pop
cmp
or
add
add
add
rorl
movsl
shll
add
call
add
loope
jg
hlt
call
std
dec
outsl
ljmpw
lock
sbb
fisubl
in
sub
std
add
add
add
adcb
pop
mov
pushf
cmp
std
mov
enter
add
out
mov
mov
pusha
mov
into
mov
jp
mov
in
cli
pop
cli
xor
mov
jbe
sbb
xchg
add
ljmp
sahf
push
xor
and
add
add
loop
jle
int3
insl
adc
xchg
add
add
add
mov
ds
add
add
xor
add
add
add
add
mov
add
add
aad
push
iret
mov
leave
hlt
add
inc
pop
les
movsl
shrb
mov
add
lret
sub
pop
out
xor
addr16
mov
and
add
add
mov
push
dec
repz
and
in
mov
orb
js
cmp
add
shrl
jle
add
add
add
push
xor
add
add
sbb
sahf
sbbl
js
xor
lods
imul
add
add
lea
add
cmp
imul
mov
mov
mov
imulb
cli
int3
pop
inc
cmpsb
xor
adc
aam
xchg
xor
fbld
addr16
xor
ret
jle
loop
xchg
mov
iret
jbe
jb
pop
repz
dec
dec
scas
movsl
adc
push
or
add
add
add
add
and
idivl
adcl
pop
or
push
lret
fistpl
insl
inc
insl
fucomip
inc
stos
pop
rcll
imul
add
add
or
inc
add
add
mov
add
push
jl
daa
sbb
mov
add
andl
imul
adc
jp
in
repz
ja
fsubrs
add
add
out
and
add
add
mov
inc
jo
xchg
ss
jns
aaa
adc
dec
jmp
pop
orl
add
add
pusha
add
add
jnp
ja
mov
add
add
add
mov
outsl
mov
push
add
cli
push
or
rorb
add
add
mov
lods
pop
ja
js
or
aaa
arpl
inc
add
std
cmpsb
pop
out
push
mov
stc
mov
imul
shlb
bound
int3
inc
add
add
add
mov
dec
add
add
and
push
jbe
push
lock
mov
sub
pusha
mov
fisttpll
mov
iret
fisubrl
fsubl
add
add
jnp
dec
mov
or
add
and
mov
jmp
stos
mov
add
rcl
lret
fs
add
adc
mov
outsb
bound
adc
scas
sub
xor
mov
idivl
jns
mov
xchg
cwtl
jp
adc
test
pop
mov
xor
mov
jmp
xchg
mov
add
shlb
add
push
cli
out
cmp
jb
rolb
or
xchg
decl
inc
add
add
fsts
lahf
popf
xchg
pop
push
and
add
xor
cmp
xchg
sti
dec
mov
test
or
add
add
mov
sub
lock
add
add
sahf
cmp
add
add
add
stos
aad
outsb
mov
jp
mov
in
mov
aaa
inc
mov
idivl
xor
push
inc
mov
daa
mov
cltd
sbb
mov
enter
mov
int3
mov
xchg
andb
pop
jecxz
scas
int3
ja
add
add
shll
pop
jmp
cmc
fnstcw
xor
dec
mov
jbe
add
add
mov
mov
add
add
aad
push
fdivrl
dec
mov
mov
mov
pop
sahf
fstpt
push
mov
add
add
add
or
add
add
mov
jae
sahf
fbld
fiaddl
mov
xor
add
add
add
xchg
jns
sub
les
mov
repnz
mov
mov
mov
bound
call
repz
add
cmpsb
outsl
rsqrtps
mov
mov
pop
rep
xlat
insb
mov
ja
add
add
pop
jp
jnp
mov
cmp
add
testl
les
or
mov
cmp
jp
and
add
add
popf
cmpsb
adc
bound
leave
mov
add
add
push
push
xchg
mov
add
add
mov
add
call
icebp
xchg
add
and
arpl
add
add
loop
lods
xchg
sub
in
fdivs
and
or
scas
repnz
jle
jo
pop
or
movsl
mov
fnstsw
mov
add
add
mov
nop
fstpl
jg
xchg
jg
mov
movb
add
add
push
sub
popf
je
pop
daa
and
inc
mov
out
xor
mov
add
add
push
or
add
add
add
add
pusha
add
add
ja
lods
orb
sub
ja
and
imul
js
aas
add
add
aas
xor
fstpt
jl
lea
and
mov
add
add
push
cltd
mov
sbb
jecxz
scas
dec
mov
gs
sahf
sbb
clc
movsl
ds
aam
sbb
add
add
mov
ja
jg
cmp
ss
push
jge
and
jno
dec
mov
jle
add
add
insb
mov
add
or
fsubs
mov
cmpsb
gs
pop
nop
in
shll
add
add
xor
bound
fwait
cld
or
or
mov
add
add
add
pop
into
inc
out
jns
jnp
out
pop
and
mov
jbe
jbe
push
stos
mov
test
mov
and
xor
add
add
data16
test
pop
mov
jl
rcll
je
or
cltd
jno
sub
add
add
jnp
imull
insl
adc
mov
sub
xchg
loopne
pop
inc
and
adc
mov
out
add
add
add
gs
dec
int3
mov
aad
bound
adc
add
add
jb
add
add
add
stc
inc
pusha
mov
scas
sbb
or
mov
les
sub
add
mov
jge
mov
sbb
adc
in
sahf
dec
in
pop
push
push
mov
add
ljmp
and
add
add
xchg
aam
mov
sahf
lcall
mov
add
leave
arpl
cltd
sbb
adc
mov
pop
ljmp
push
adc
popa
outsb
pop
mov
push
clc
outsb
or
cmpsb
out
pop
js
jge
mov
loope
mov
mov
cmp
push
inc
ljmp
add
add
mov
add
je
mov
imul
mov
sub
mov
jle
inc
xchg
push
in
je
andb
add
mov
mov
repnz
imull
cmp
adc
mov
ror
mov
pop
loope
mov
jns
push
loopne
clc
mov
mov
or
add
add
mov
mov
mov
jo
fs
cmp
dec
xchg
push
fwait
clc
ss
add
add
xorps
icebp
rclb
ljmp
fs
ljmp
or
enter
sub
mov
int3
jnp
outsl
mov
xlat
fdivp
mov
mov
aad
jne
out
out
mov
mov
adc
iret
jl
inc
mov
add
add
loopne
stos
stos
adc
add
add
add
jbe
mov
add
jo
popf
fldcw
decb
in
daa
push
dec
aad
adc
fsubr
sub
daa
std
hlt
push
sub
daa
loope
jecxz
adc
dec
mov
in
dec
push
dec
add
add
mov
add
add
add
je
mov
add
scas
out
ret
add
mov
mov
adc
adc
jecxz
cmp
xchg
or
add
mov
prefetch
andl
sbb
inc
jle
ljmp
pop
or
pop
dec
outsb
mov
push
jns
loopne
jmp
mov
es
outsb
arpl
mov
sbb
add
add
inc
add
add
aas
scas
mov
add
add
mov
pop
adc
add
inc
mov
inc
add
add
mov
mov
pop
rcrb
movsl
int
jp
insl
les
pop
push
cmp
cmpsl
daa
sbb
out
adc
dec
mov
pop
filds
add
push
scas
cmc
cli
cltd
inc
decl
sbb
add
stos
outsl
nop
mov
iret
mov
mov
mov
pop
and
add
cli
call
adc
sahf
xor
sbb
icebp
lcall
in
xor
stos
or
add
add
or
sub
int3
mov
jbe
mov
repnz
add
add
dec
add
add
xchg
fs
mov
mov
int3
mov
in
imul
mov
icebp
push
mov
lods
inc
or
rclb
jmp
outsb
leave
out
and
add
add
push
sbb
jg
test
repnz
outsb
xor
sub
insl
imul
lahf
int
mov
mov
and
mov
dec
in
mov
mov
xor
loopne
sbb
mov
sbb
add
dec
add
add
push
repz
mulb
xchg
addr16
lcall
insb
mov
mov
jmp
inc
mov
aaa
jge
and
add
add
js
mov
pop
dec
add
add
lcall
aam
mov
add
add
fnsave
jae
pop
xlat
mov
cld
xorb
push
push
and
adcb
add
add
shll
cmpsb
cmpsl
push
in
pushf
cwtl
outsb
jnp
fildl
add
add
adc
in
arpl
clc
mov
and
or
add
gs
lods
inc
lcall
inc
xchg
cld
jno
out
cmpsl
sub
lock
jge
icebp
mov
add
add
sti
out
cmpsb
arpl
scas
push
out
scas
xchg
mull
add
add
add
add
outsl
dec
mov
ljmp
mov
mov
add
je
lcall
adc
or
sbb
add
jmp
sbb
imul
mov
inc
lea
mov
adc
daa
lret
fwait
add
add
test
add
mov
popf
jmp
pop
add
add
add
mov
add
addr16
repz
fbstp
fwait
xor
push
ljmp
dec
pop
sbb
and
jle
cltd
push
test
out
aaa
inc
adc
dec
push
hlt
jne
inc
mov
in
mov
mov
mov
mov
add
dec
add
add
add
push
stos
sbb
add
mov
sub
pop
xchg
cli
cmp
je
jl
xchg
push
int3
mov
cmp
push
loope
iret
sbb
push
addb
movsb
cmp
inc
negb
sbb
mov
nop
shll
stos
xchg
sbb
imul
lea
mov
imul
mov
jbe
cmpsl
scas
jne
in
mov
mov
adcb
pushf
mov
test
out
out
cld
call
cmp
lods
loop
mov
nop
lock
mov
add
insb
mov
mov
out
add
pop
xor
inc
out
mov
imul
add
add
stos
sbbl
push
jb
sbb
add
add
jle
fstpl
lret
xchg
imul
mov
inc
scas
ljmp
jnp
jmp
sbb
js
std
push
xchg
insl
addr16
adc
nop
sub
cmp
mov
nop
xchg
lret
rorb
pop
mov
add
add
sbb
scas
jle
jae
mov
orl
add
jmp
enter
sub
add
add
add
push
xchg
sub
xchg
in
fnstenv
mov
add
add
ret
xchg
sub
add
pop
lock
call
or
pop
xchg
sbb
inc
pop
inc
mov
pop
cwtl
jge
icebp
aad
xorl
xchg
mov
notb
mov
sub
mov
mov
sbb
adc
add
add
cmpsl
and
add
add
and
add
push
and
mov
mulb
hlt
aas
pop
push
sub
mov
jne
and
lds
add
ds
add
add
pop
jo
sbb
loopne
pop
mov
xchg
fnstenv
mov
add
add
roll
add
clc
xchg
rorb
add
add
pop
loopne
sbb
add
mov
repnz
cmc
clc
lds
add
add
dec
cmp
xchg
fidivrl
xchg
push
and
xchg
jo
sub
add
add
add
cmp
jb
xor
out
hlt
jl
or
add
add
mov
and
add
add
loope
repz
inc
sti
repnz
add
xor
push
push
dec
lods
pop
sub
das
cmpb
repnz
pop
push
in
cs
into
testl
lcall
jae
mov
fildl
mov
mov
add
lea
sbb
mov
mov
jmp
adc
adc
and
cmp
add
add
imul
call
sub
add
add
sbb
inc
sarb
je
mov
addb
mov
insl
std
mov
mov
lods
cltd
sub
add
add
sti
mov
add
add
scas
xor
js
jno
shlb
mov
jnp
mov
mov
inc
inc
into
sub
fwait
jg
ret
xchg
movsb
sub
sub
mov
inc
xor
xor
add
xchg
pop
stos
dec
stos
jb
push
push
outsl
push
jecxz
test
subb
call
add
clc
xlat
fiaddl
add
add
add
call
dec
pushf
outsb
test
shrl
add
mov
push
das
mov
add
add
dec
aas
arpl
jbe
adc
add
cli
icebp
jnp
add
add
add
fdivp
insb
add
add
addr16
and
xor
mov
sbb
jg
hlt
jne
mov
sub
add
add
add
rclb
and
add
add
inc
std
dec
aam
mov
out
call
pop
lret
int
sub
add
add
add
mov
aaa
pop
ljmp
loopne
nop
out
pop
or
push
in
clc
pop
outsb
jl
mov
add
add
cs
lods
or
adc
add
and
pop
lcall
bound
jmp
add
out
int3
jbe
mov
ja
ja
icebp
pusha
mov
dec
sub
and
add
add
sahf
outsb
cmp
push
add
add
dec
and
jbe
dec
gs
stc
lods
movsb
iret
fdivl
add
roll
add
fists
stc
dec
addr16
mov
es
loop,pn
addr16
je
mov
shr
or
cmp
fcom
sub
jp
push
cs
add
add
mov
add
add
mov
add
add
mov
add
add
imul
push
lret
pop
jmp
push
jae
xchg
out
es
shrb
pop
cmp
cwtl
or
adc
ret
pop
iret
mov
mov
fwait
xor
jp
mov
lock
rcrl
add
add
mov
outsb
inc
ret
aad
mov
mov
push
fsts
add
int3
cmpsb
rcrl
cmp
add
add
xor
xchg
push
mov
rorl
push
mov
rcrb
fisubs
add
into
dec
add
add
pop
xchg
jb
sub
sahf
nop
pop
push
in
mov
stos
pop
push
jp
xlat
negb
dec
fisttpll
add
add
push
ljmp
inc
mov
call
add
rcrl
pusha
add
add
xchg
loop
idivb
stos
add
pop
outsb
xor
mov
mov
pop
xchg
iret
jge
add
add
xchg
jb
movsl
xor
mov
arpl
xor
imul
push
cmpsl
les
add
add
cltd
cmp
add
add
add
orb
add
ds
shll
jmp
dec
hlt
jbe
adc
jae
jbe
in
xor
xor
shll
cs
out
hlt
andl
pusha
add
add
jnp
aas
push
mov
test
sbbb
xchg
push
mov
pop
sbb
lods
inc
insb
mov
les
add
add
add
add
scas
mov
enter
jo
jo
mov
mov
out
inc
cmp
jmp
jb
add
out
aas
pop
clc
adc
mov
cltd
shlb
jae
or
add
add
cs
mov
push
lcall
mov
ret
adc
add
add
add
inc
add
add
or
dec
cwtl
jmp
fstps
or
filds
leave
call
in
fisttpl
cmc
mov
jae
aad
mov
jp
pop
add
inc
mov
insl
sti
enter
movsl
mov
dec
sub
jne
push
or
sub
pmaxsw
dec
pop
std
out
shll
jp
ds
lahf
out
xor
xchg
lock
add
add
addr16
sbb
mov
xchg
sahf
cmpsl
or
add
add
cld
lahf
in
cmp
stos
imul
pop
movsl
sbb
shlb
jmp
lds
add
push
loop
pushf
dec
or
add
add
adc
loope
fimuls
add
add
adc
dec
insl
adc
int3
ljmp
push
loopne
xor
jns
sub
mov
ljmp
add
dec
adc
lods
mov
pusha
mov
repnz
imul
sub
add
add
jne
dec
ja
mov
insb
mov
add
add
out
sarb
jns
sub
add
add
push
push
push
in
push
daa
mov
rcrl
xchg
out
push
sbb
imul
or
add
add
add
clc
hlt
fisubl
add
lret
loop
mov
insb
mov
ljmp
add
add
sub
repz
cltd
push
mov
push
mov
cltd
adc
insb
add
add
fisttpl
pop
inc
xchg
cmpsb
adc
repnz
out
mov
shl
loope
jns
jle
insl
push
cmpb
ljmp
fptan
xorb
lcall
and
add
add
in
clc
insb
add
add
xchg
jge
shl
or
add
add
popf
push
xchg
fimuls
mov
ljmp
add
add
or
arpl
out
lahf
mov
cmp
inc
xchg
push
add
add
cmp
pop
push
in
jb
add
mov
adc
jb
lds
sub
add
add
pop
daa
leave
pop
mov
mov
mov
aas
pop
cmp
add
mov
lock
dec
dec
add
add
test
and
add
add
add
icebp
cmp
xor
or
cmp
in
mov
insb
add
add
pop
dec
popf
xchg
fs
cmp
mov
or
push
push
sbb
xchg
mov
js
jp
icebp
rorb
nop
out
xor
add
push
das
jae
stc
sub
add
add
stos
cmp
add
add
add
es
mov
ret
xor
stc
mov
mov
dec
add
add
push
mov
push
push
js
mov
add
add
sbb
and
test
push
pop
mov
sbb
outsb
icebp
mov
addb
in
clc
cwtl
test
add
rcrb
mov
mov
cmp
popa
test
add
xor
or
mov
mov
lret
dec
add
adcl
repz
add
sbb
jo
inc
decl
xchg
iret
pop
out
adc
sbb
and
add
add
and
in
fs
jnp
test
add
fidivl
add
add
add
and
dec
popa
lea
ret
cmp
dec
push
dec
pop
rcrl
rolb
iret
movsb
fisubrl
sub
movsb
in
jle
imul
ret
xchg
add
or
mov
jae
movb
add
repnz
sbb
testb
push
cmp
dec
fidivs
jae
jb
mov
xor
jecxz
jno
enter
add
add
mov
loope
pusha
add
add
imul
sarb
sub
mov
and
add
add
inc
mov
xchg
fistpl
cmp
adc
push
mov
das
and
mov
loopne
xchg
arpl
dec
pop
sbb
add
sub
xlat
sti
fwait
aaa
xor
nop
aas
insb
add
add
xor
add
inc
dec
and
push
mov
fldcw
jb
adc
daa
scas
fisubl
add
add
clc
or
push
sbb
push
push
dec
aaa
scas
ljmp
scas
iret
or
cmp
and
add
pop
jne
mov
push
inc
hlt
adc
or
add
add
mov
mov
outsb
insl
in
xchg
movsl
movsl
fcmovnbe
cmp
add
dec
xchg
lret
sub
fisubrs
or
jge
mov
add
add
sbb
cmc
mov
xor
call
push
jbe
mov
inc
mov
pop
sbb
into
mov
adc
jo
outsl
or
add
add
rol
sbb
add
das
vpackssdw
add
add
test
dec
leave
lea
push
dec
xor
sub
add
add
add
add
fdivrl
xchg
test
add
add
or
add
add
into
bound
in
out
dec
mov
popa
mov
aaa
int3
loopne
mov
dec
add
add
add
push
push
push
xor
add
add
add
add
mov
mov
add
xchg
lret
add
add
clc
outsl
sbb
add
mov
add
fucom
jecxz
pop
lods
dec
sub
mov
dec
fsubs
cmp
adc
int
rclb
inc
push
mov
jle
push
or
add
add
mov
add
add
add
add
adc
insl
or
cltd
sub
add
add
mov
adc
jae
popf
jp
in
cltd
fs
mov
or
addr16
sbb
mov
xchg
cld
ss
add
add
add
stos
aam
arpl
cltd
mov
fldcw
inc
push
pop
push
adc
or
add
add
push
push
jno,pt
addr16
or
add
add
mov
add
fwait
arpl
mov
jbe
mov
mov
mov
or
push
xchg
push
jp
cmp
pop
add
adc
xchg
fwait
in
push
jae
add
mov
push
fwait
and
add
add
push
insb
add
add
or
sbb
dec
cli
jl
xchg
sbb
add
add
mull
adc
bnd
mov
sub
clc
mov
add
ja
mov
cltd
icebp
paddd
add
sbbl
in
sbb
adc
scas
push
repz
add
add
sub
mov
xchg
pusha
mov
dec
cld
and
mov
mov
imul
add
mov
add
push
movsl
mov
add
testb
adc
sbb
and
sub
mov
stc
fs
test
inc
push
jmp
jae
int3
xor
mov
sub
add
add
jne
ja
mov
push
int
xchg
pop
or
add
add
enter
pop
jno
pusha
mov
addr16
push
sbb
lret
lea
dec
addb
pop
outsl
fimuls
or
xchg
add
mov
push
rcll
push
bound
outsb
push
iret
cld
adc
test
add
stc
cmp
test
dec
shlb
xor
add
add
push
jecxz
leave
aaa
std
test
out
jns
mov
les
inc
mov
inc
pushf
loopne
gs
je
iret
adc
push
sbb
setg
mov
pusha
add
add
push
and
cltd
add
add
cmc
xchg
in
lret
xor
add
pop
pop
mov
nop
negb
call
add
leave
cmp
into
or
add
add
add
add
mov
xor
addr16
and
add
add
scas
xchg
push
ljmp
call
or
dec
inc
mov
scas
mov
push
outsl
aas
in
push
and
cmp
add
sub
shlb
out
push
xchg
sub
add
add
hlt
mov
pusha
add
add
sub
add
add
cmp
xor
insb
mov
or
fistpl
mov
push
int
push
jne
sar
cmpsl
fadd
call
push
add
add
add
repnz
icebp
adc
sbb
cmp
out
pop
push
sbb
and
add
add
mov
data16
cmp
dec
mov
add
add
rcr
pop
imul
mov
push
pop
mov
insl
nop
iret
hlt
cmp
cmp
jl
jle
mov
jge
call
add
ss
orb
add
in
mov
mov
sub
es
repnz
mov
and
add
add
jne
repz
mov
mov
add
add
xchg
sbb
int3
dec
mov
insl
add
add
add
adc
xchg
xor
jg
dec
andl
add
fildll
add
sbb
sub
int3
in
aad
mov
shll
mov
fldenv
pop
pop
test
inc
sbb
icebp
jmp
push
out
ja
pop
scas
sub
add
add
bound
mov
sub
repnz
fwait
xor
ja
inc
mov
aaa
and
ss
enter
pop
pop
and
add
add
add
add
add
add
dec
or
add
add
les
mov
xchg
push
mov
ret
pop
add
push
push
lret
movsl
loop
add
aaa
add
add
aaa
push
mov
jno
stc
pop
inc
pop
cltd
or
fmulp
lea
jb
nop
sub
add
add
mov
imul
mov
repz
andl
add
aad
imul
or
int3
add
sbb
inc
mov
jmp
out
cpuid
cmp
fsub
sbb
pop
enter
inc
push
mov
mov
cmp
lahf
lcall
xchg
mov
fwait
adc
shlb
int3
xchg
mov
add
int3
aam
out
jae
mov
lds
pop
push
mov
pop
pushf
sbb
mov
fistpll
jg
jecxz
arpl
shll
add
add
fidivs
fwait
stos
push
jecxz
jb
pushf
push
outsb
sbb
sar
out
lock
outsb
data16
repz
push
or
sbb
mov
cs
call
dec
and
add
add
inc
mov
mov
sbb
popa
mov
xchg
pop
loop
pop
in
pop
adc
mov
into
mov
inc
mov
fsubrp
add
cmp
xchg
enter
mov
cmpsl
fcmovnb
dec
jmp
scas
adc
xchg
cmpsb
cmp
jge
das
out
imul
xor
add
add
int3
push
adc
outsb
js
jp
xchg
fs
or
aas
xor
push
aam
mov
sbb
rorl
add
add
cmp
jecxz
mov
or
and
sub
sub
adc
je
sub
or
aam
push
outsb
ss
pop
popf
sbb
mov
or
ficompl
inc
fcoms
fisubrs
push
mov
mov
or
and
mov
add
or
add
add
and
iret
cwtl
sbb
add
add
sti
aas
in
lret
lods
fnclex
lcall
push
sub
add
add
and
add
add
aas
xchg
je
push
mov
fsub
imul
or
add
dec
dec
mov
icebp
mull
jnp
js
loope
or
add
add
mov
add
add
add
add
add
lcall
jb
sbb
add
add
adc
orl
ja
insl
lods
les
adc
jmp
mov
ret
ljmp
cmp
inc
dec
ss
dec
add
add
ret
jns
push
movsl
stc
jecxz
mov
adc
jne
aad
xchg
cwtl
stos
sub
into
lret
mov
add
leave
xor
pop
mov
mov
dec
push
fld
test
sbb
or
mov
mov
mov
ss
test
add
cmp
add
dec
imul
add
mov
dec
sbb
mov
ret
pop
push
mov
rcrb
out
lcall
mov
daa
mov
mov
cld
pop
sub
mov
and
mov
fdivs
mov
dec
outsl
pop
sbb
pop
gs
hlt
adc
dec
push
outsb
pop
cmp
jecxz
xlat
shll
and
add
out
push
cld
bound
xor
iret
lods
sub
jbe
add
add
mov
cmp
mov
ret
jmp
mov
enter
sbb
xor
push
push
mov
mov
xor
sti
adc
icebp
inc
pop
icebp
xchg
cmp
imul
pop
or
and
xchg
sti
push
pop
cmpb
or
mov
sbb
add
add
addl
imul
add
adc
cwtl
xchg
shrb
cli
push
push
rorl
sbb
ror
ss
outsl
pop
mov
add
fwait
add
ss
bound
hlt
xlat
adc
inc
cmp
add
add
xchg
mov
dec
mov
push
out
test
push
shr
outsl
jnp
jmp
sbb
ror
or
mov
cmp
scas
movsl
shll
add
lods
out
sub
add
add
jo
xchg
call
paddusb
int
sbb
or
add
add
rorb
add
jns
ss
repnz
call
fildll
cmp
mov
add
sub
add
add
ret
cwtl
jno
xchg
repz
lret
test
cmp
mov
adc
add
in
scas
adc
addb
add
add
sub
push
fldl
adcl
je
lods
sbb
xor
test
xor
fdiv
into
adc
sub
add
add
add
or
mov
add
add
mov
jno
add
add
add
sbb
add
add
add
dec
inc
cmp
sahf
in
movsb
sbb
in
scas
sahf
push
cmp
rorb
jmp
xlat
sub
or
add
add
jecxz
notb
and
add
add
dec
mov
dec
sbb
xchg
fcoms
mov
out
cld
scas
notl
or
add
add
int
test
mov
scas
add
push
jae
mov
data16
add
add
dec
lfs
add
add
mov
jg
fdivs
mov
lods
sub
jb
in
xlat
jl
std
push
rsqrtps
imul
pop
mov
add
add
leave
or
add
add
push
cmpsb
cs
outsb
cld
insl
xchg
div
mov
repnz
ret
xlat
mov
add
add
sbb
ret
add
add
dec
out
insl
mov
mov
mov
add
add
add
cmp
cltd
lods
or
sbb
and
inc
mov
push
push
in
or
pushaw
add
add
jns
mov
sub
jo
fisttpl
add
add
leave
insl
repnz
addr16
or
push
mov
add
lahf
sbb
xchg
hlt
mov
out
mov
mov
inc
jbe
fisttpl
add
rcll
pop
add
xor
inc
cmp
dec
sbb
fcmovbe
flds
sbb
in
pop
add
frstor
mov
bound
mov
jb
ss
or
jo
or
adc
add
add
mov
scas
pop
imul
ret
add
add
shll
adc
test
add
add
iret
sbb
insb
mov
lret
mov
dec
fdivrl
shr
cmp
filds
sti
cwtl
jg
out
lret
popf
sar
push
push
push
lock
addl
cli
xor
mov
mov
add
fdivr
cld
mov
xor
add
sub
add
add
mov
clc
sub
add
add
adc
in
shll
mov
add
add
xchg
les
pushf
and
mov
iret
adc
mov
enter
xchg
sub
sti
xor
mov
icebp
cmp
mov
sub
loopne
dec
test
in
jle
cli
test
imul
add
xchg
divb
popa
std
mov
xlat
pop
stos
out
cmp
cltd
imul
sub
add
add
dec
or
xlat
js
imul
xor
push
mov
sub
add
add
pop
addl
int
mov
add
add
out
popf
jb
xchg
mov
mov
fstps
clc
push
popa
repz
aas
jmp
add
rcr
fistl
sbb
lahf
pop
jg
mov
jl
orb
push
and
sahf
icebp
clc
ss
add
jb
xchg
sahf
repz
sub
mov
adc
cli
sbb
sbb
lea
iret
pop
pusha
add
add
sbb
pop
dec
sbb
in
call
fs
fisttpll
add
ret
pushf
cmpsl
shll
lret
outsb
xor
xchg
sbb
imul
cs
mov
jp
repnz
jp
arpl
in
scas
shll
add
sub
cmpsl
lock
jge
clc
add
add
add
add
add
sbb
push
mov
sbb
add
add
repnz
jne
jnp
outsl
loopne
adc
adc
pop
xor
add
add
add
adc
push
xchg
mov
lahf
repz
sbb
adc
sbb
mov
std
xchg
mov
scas
mov
and
add
in
sahf
out
jmp
add
push
push
xor
sub
pop
adc
mov
add
dec
add
add
inc
add
add
xchg
jb
gs
sub
add
add
loop
dec
mov
adc
mul
call
add
add
subl
iret
imul
mov
cmp
cmp
add
push
dec
mov
add
popf
pop
arpl
add
add
mov
xchg
test
rolb
aaa
aam
movsb
adc
mov
add
add
clc
dec
push
lock
insl
jno
cwtl
adc
addr16
fwait
inc
add
add
sbb
popa
shlb
loope
sub
dec
jge
xor
shrl
add
add
jmp
pop
inc
xchg
pop
jge
cmp
add
add
popf
test
aad
mov
repnz
push
mov
hlt
loopne
add
add
nop
jg
sub
mulb
enter
dec
or
and
add
add
push
mov
mov
jl
ss
imul
fstp
repz
bound
es
inc
mov
cmp
or
add
frstor
xor
dec
mov
mov
xchg
out
ret
or
cpuid
int3
pop
cmp
add
add
add
inc
das
cwtl
sub
aas
orb
daa
dec
icebp
cs
mov
shlb
xchg
jae
jbe
push
mov
gs
ljmp
jle
outsb
inc
push
adc
push
outsb
jg
cld
loop
xchg
push
out
imul
adc
add
add
push
jo
sub
sbb
cmp
adc
add
jmp
leave
cmp
add
add
add
ret
inc
jge
add
adc
sbb
pop
dec
jg
pop
insb
mov
mov
push
imul
in
adc
int3
cmp
ja
sub
sahf
pop
mov
insb
add
add
dec
cmp
add
add
lods
dec
cmc
push
or
add
add
dec
jmp
adc
test
cmp
add
add
in
jne
push
scas
push
cmp
add
cltd
and
sub
add
add
movsb
sub
add
add
sbb
inc
mov
addr16
xlat
mov
mov
cmpsl
fmuls
jle
cli
fidivrs
sbb
pop
xchg
daa
push
adc
sub
adc
push
mov
in
arpl
lods
iret
in
and
add
add
inc
adc
std
call
adc
inc
mov
out
add
arpl
mov
cmp
shrb
mov
cld
dec
add
add
insb
mov
adc
or
xchg
push
pop
fwait
mov
test
popf
test
int
je
cmp
jg
add
add
add
xchg
mov
xor
mov
mov
daa
push
aam
xchg
jle
cmpsl
in
outsl
sub
shlb
xor
xchg
inc
shll
jo
mov
add
add
aad
in
add
mov
loopne
mov
daa
outsl
cmp
outsl
sub
add
add
scas
sub
add
xchg
out
leave
lods
fstl
jp
jo
adc
cld
mov
mov
jg
or
add
dec
in
sti
test
fsubs
pop
mov
lret
inc
aam
cmpsb
out
xchg
push
addr16
add
add
add
out
out
jno
pop
loop
gs
cmp
xchg
mov
add
dec
rcrl
mov
ss
pusha
add
add
scas
stc
mov
push
and
add
add
xor
add
sti
movsb
mov
imul
add
add
cltd
enter
inc
xlat
in
push
sub
add
add
add
add
mov
das
sahf
rclb
cmp
adc
sbb
add
add
orb
stos
push
push
in
aam
les
loope
inc
and
pop
add
imul
gs
xchg
subl
mov
push
idivl
fiaddl
jg
push
out
push
mov
jmp
aaa
jae
xor
xlat
test
fbstp
and
sub
add
add
add
mov
push
add
add
mov
iret
daa
xor
dec
mov
iret
aaa
mov
cmpl
lret
add
add
adc
sarl
inc
mov
arpl
xor
xchg
push
and
add
add
mov
iret
in
loop
test
push
mov
adc
cmp
sbb
or
add
add
adc
push
std
cmpsl
cltd
sbb
xchg
mov
push
jg
push
jl
mov
and
add
add
into
stos
mov
mov
fs
xchg
mov
mov
add
and
add
add
sub
add
add
dec
dec
push
mov
xchg
repnz
je
cmp
jecxz
dec
sub
add
add
aam
fnstcw
dec
mov
sbb
addr16
cwtl
push
push
stc
push
call
js
std
sbb
repnz
scas
cs
dec
outsl
push
cwtl
lahf
testb
dec
popf
icebp
jno
rorl
daa
cwtl
mov
cmp
daa
and
or
add
mov
repnz
add
add
and
in
lods
add
lret
xor
inc
adc
mov
mov
lret
clc
fidivl
out
pop
cmp
les
add
add
push
xchg
fiadds
iret
hlt
dec
je
outsb
pop
pop
clc
int
bound
int
fisttps
inc
sub
add
add
add
mov
fldenv
sub
add
add
lahf
into
imul
mov
add
dec
cmp
cmp
xor
inc
fisttps
dec
xlat
les
mov
pop
push
pop
sbb
js
mov
shll
shl
bswap
or
add
jno
pop
jae
in
or
add
add
dec
or
add
add
cmc
xor
popa
je,pn
pop
inc
mov
push
xchg
xchg
adc
xchg
mov
repz
repnz
in
adc
sub
iret
fsub
out
and
jmp
add
add
add
inc
jo
das
loopne
jnp
mov
js
mov
into
jp
fistpl
inc
cmp
pop
sub
loopne
dec
add
add
push
das
dec
stos
out
mov
pop
out
or
jg
mov
shl
mov
dec
repnz
add
add
add
test
test
out
xchg
pop
out
push
icebp
and
add
add
push
mov
out
or
add
add
sbb
or
add
add
dec
fstl
into
movsb
xor
jg
jo
mov
add
add
insb
add
add
ljmp
push
nop
iret
jecxz
mov
push
add
and
adcl
jge
inc
lock
fscale
les
test
clc
incl
or
das
das
lahf
sbb
cmp
mov
into
cmp
mov
loop
jns
mov
cmp
push
pop
sub
mov
add
add
mov
and
mov
push
inc
out
out
sbb
sub
fwait
sub
and
in
nop
outsl
sbb
pop
aam
and
add
add
add
push
lahf
add
dec
dec
push
inc
mov
mov
insl
mov
loop
inc
dec
add
add
testl
jb
data16
inc
lea
sbb
add
add
jp
ffree
and
loopne
mov
add
add
add
movl
daa
sub
xorl
repz
cs
fimuls
add
inc
cmpsl
cmp
mov
and
add
add
std
mov
mov
ja
shr
cmp
stc
pop
mov
mov
popf
arpl
mov
mov
cmc
inc
sbb
call
in
inc
insl
rcll
ds
jns
add
pop
frstor
xchg
mov
mov
jge
sbb
rorl
add
add
jnp
add
add
add
push
jecxz
fiaddl
add
das
fcmovne
movsb
out
or
add
add
lea
mov
repz
in
jno
andb
add
add
mov
add
add
shr
sbb
mov
cmp
loope
jp
and
adc
mov
pop
sti
cmc
xlat
idivb
sti
and
in
or
add
add
xlat
cli
push
hlt
mov
add
mov
lods
and
add
add
sub
add
icebp
mov
cli
sbb
lea
ffreep
and
sbb
popa
shl
add
mov
dec
xchg
movsb
mov
add
add
xchg
sar
jo
iret
out
push
sub
or
lret
add
add
dec
stc
dec
mov
cmc
les
rcl
jl
xchg
std
jg
inc
xchg
xchg
bound
cmp
hlt
inc
call
add
sbb
mov
pop
cli
xchg
mov
add
mov
cmp
int
mov
mov
shlb
insb
mov
add
add
mov
outsb
mov
outsb
cmc
out
dec
jo
or
ds
jnp
mov
cs
aaa
jnp
push
es
xor
jne
adc
mov
cltd
mov
add
add
add
or
sub
cmp
ficomps
inc
aaa
lretw
pop
aad
aad
jle
loop
xchg
dec
into
pop
push
inc
hlt
sbb
and
inc
and
pop
jmp
mov
xor
or
add
add
sub
cli
daa
adc
mov
inc
xor
cwtl
adc
add
add
in
mov
popf
jns
push
or
pcmpeqw
add
add
sbb
into
mov
leave
pop
lea
mov
push
aaa
clc
jns
clc
into
out
pop
sub
add
add
es
add
les
push
dec
add
add
adc
cmp
repz
addb
push
mov
es
sub
add
lock
inc
mov
outsb
dec
add
cmp
mov
nop
test
mov
add
jg
out
add
add
aas
out
ss
jp
or
int3
stc
adc
or
jae
sub
stos
aas
popf
dec
xor
dec
xor
add
repz
push
cltd
sbb
add
add
mov
add
and
jmp
add
add
jp
adc
mov
shl
jp
aad
mov
mov
xchg
push
sbb
test
add
mov
dec
or
shlb
popa
add
sbb
sub
fcmovu
pushf
jnp
adc
add
add
ja
lret
stos
push
cs
add
add
jecxz
bnd
in
out
dec
xor
outsl
sahf
xchg
mov
jno
mov
add
add
or
inc
xchg
push
int
std
push
cmp
fcmovnbe
jbe
sub
in
push
aad
push
adc
idivl
out
imul
sbb
loope
icebp
dec
mov
imul
or
add
aaa
ljmp
xchg
leave
sub
cltd
arpl
scas
fldenv
add
add
loopne
and
add
add
mov
jge
insb
mov
mov
pop
call
push
outsl
or
stc
xlat
xchg
add
add
sub
in
jbe
cmp
mov
out
inc
inc
lahf
jle
inc
std
shll
testl
out
ja
add
add
shl
cmc
loope
fcmovnb
jno
outsb
push
mov
fldt
inc
add
add
xchg
sub
or
aaa
imul
xor
inc
lret
pop
mov
incl
sbb
xchg
inc
jmp
add
add
add
add
add
add
rorl
add
add
push
push
xor
sbb
add
add
push
pop
frstpm(287
mov
add
add
adc
mov
sbb
lea
cmpsl
jp,pn
shll
pop
and
cmp
inc
xor
mov
shll
xor
pop
dec
mov
dec
mov
nop
pop
sbb
bswap
pop
pushf
adc
add
xor
nop
in
es
out
xor
xchg
popa
add
pop
js
test
test
add
add
inc
mov
jl
into
das
outsl
icebp
cmp
pop
pop
dec
test
dec
push
fldenv
add
add
add
mov
mov
mov
mov
mov
push
outsb
enter
xor
mov
add
add
bound
dec
xchg
addb
add
jl
push
stc
mov
mov
dec
loope
sub
adc
add
add
sbb
push
dec
dec
add
add
dec
or
inc
mov
or
out
outsb
mov
pop
sti
leave
cld
inc
pop
pop
fdivrs
sti
mov
mov
fcoml
jl
sbb
shlb
mov
push
inc
adcb
pop
push
inc
mov
xchg
test
or
add
add
lahf
mov
push
insl
push
into
and
push
xchg
pushf
in
or
lret
adc
lret
cmp
cld
xchg
insl
stos
es
mov
popf
adc
or
xor
xchg
inc
add
add
sub
mov
xchg
das
fwait
shrl
es
add
imull
jnp
mov
cmpl
sub
xchg
mov
jmp
add
add
add
add
cmp
jo
xor
shrb
jne
cld
mov
call
popf
ret
ret
and
add
add
jl
adc
pop
fs
test
add
add
out
fwait
arpl
sbb
cmpsl
mov
add
mov
loope
ds
mov
add
add
aad
pop
ret
cld
xchg
inc
jmp
sbb
dec
test
add
add
lock
dec
mov
cs
xchg
push
lods
nop
lds
lds
rcrb
add
add
add
cld
and
add
add
iret
in
push
pusha
mov
lods
push
repnz
lds
xlat
add
mov
add
xor
add
add
add
popf
insl
cld
subl
pop
mov
jo
cmpsb
fldl
inc
sbb
pop
shr
xor
scas
movsl
push
sub
or
repz
ret
das
and
add
add
add
add
jo,pn
pop
in
aam
outsl
add
add
add
in
test
nop
xchg
fldl
pop
pop
fsub
enter
ja
in
mov
add
add
repnz
mov
outsl
lcall
push
push
imul
add
add
xor
into
mov
enter
jns
sbb
pusha
add
add
sub
in
fcomps
inc
std
int
jb
pop
les
and
inc
add
add
and
or
push
das
mov
mov
outsb
stos
cmp
push
or
lods
imull
add
add
add
cmpsb
popf
testl
mov
lods
cltd
cmp
add
add
xlat
aaa
int
orb
pushl
cwtl
cli
pop
push
adc
adc
add
add
push
jmp
cmc
outsb
add
inc
add
add
aam
cmc
pop
outsl
pop
dec
sbb
ret
add
add
add
fidivl
loopne
cmpsl
sub
outsb
sub
lret
add
add
mov
movsb
or
mov
push
push
adcb
je
in
push
or
cmp
arpl
in
jns
int3
in
cmpsl
movsb
test
mov
iret
sbb
aam
test
repz
mov
fbld
adc
add
and
add
out
shrb
add
add
out
jl
jae
sub
push
rcr
arpl
mov
mov
daa
stc
xchg
iret
out
mov
xlat
inc
jmp
test
push
icebp
sbb
mov
xlat
inc
add
add
insl
sub
add
add
out
inc
lock
jg
add
add
add
xor
push
sar
dec
sub
mov
arpl
mov
sub
inc
insb
add
add
fstp
dec
add
add
push
inc
arpl
sub
add
add
out
push
xor
bound
add
fidivrl
add
add
cld
call
sbb
pop
std
push
xchg
xor
mov
xchg
pusha
mov
add
add
add
sbb
sbb
mov
add
mov
aam
push
jb
ss
stc
sbb
std
dec
adc
in
sbb
cmp
dec
mov
lcall
dec
add
add
adc
subl
cmp
jo
xchg
mov
ret
push
xchg
jno
int
cmc
pushf
loope
jecxz
inc
icebp
mov
into
int
stc
in
jo
xor
sbb
insl
mov
mov
xor
xchg
and
nop
test
xor
jl
and
shr
repnz
mov
jle
pop
xor
add
add
shrb
mov
add
mov
outsl
stos
cmp
shr
sar
decl
mov
mov
add
add
bound
into
outsb
arpl
movsl
mov
inc
add
add
cmpsl
adc
or
lods
fldt
push
sbb
ja
push
out
loope
imul
jno
jae
dec
aas
cmp
add
add
dec
and
add
add
mov
add
xchg
cmpsl
xchg
sbb
mov
pop
push
xchg
fst
dec
jae
jle
mov
hlt
pop
dec
and
nop
arpl
fistps
push
jg
out
xchg
xchg
add
add
ja
adc
sub
jns
into
xchg
lcall
pop
lret
and
add
add
mov
sahf
jne
xor
mov
outsb
pop
mov
adc
pusha
mov
cmp
or
add
add
xor
into
ds
out
movsb
mov
adc
nop
mov
call
jg
idivl
stos
push
dec
add
add
sbb
mov
lock
sti
repz
xchg
inc
jb
scas
ds
out
pushl
mov
mov
je
bound
ret
addr16
mov
testl
repnz
mov
flds
dec
sub
add
add
push
lahf
pop
mov
and
shll
and
add
inc
push
push
daa
lds
mov
ja
and
ljmp
add
add
popf
xlat
fdivrs
add
add
pop
inc
add
add
push
push
and
push
or
mov
repz
mov
add
add
mov
jle
sub
sub
add
add
add
add
or
fnstcw
add
add
sti
cwtl
or
mov
add
add
jge
mov
loop
sub
sbb
lea
mov
dec
js
dec
cmp
xor
push
cmp
ds
xchg
jb
dec
subb
jae
sahf
xor
xor
add
add
adc
mov
cli
pop
lods
repz
lds
xchg
dec
jb
cmp
cmp
mov
push
or
out
xchg
jae
jbe
xor
sub
in
sub
add
add
add
add
sub
popa
lcall
movsb
push
push
xchg
jo
jns
sub
int3
sbb
testl
mov
imul
mov
jecxz
mov
xor
arpl
add
daa
push
notl
adc
jp
lea
int3
int
ja
lahf
mov
adc
stos
pop
pop
movl
aaa
loopne
cli
loope
push
xchg
add
jecxz
sub
mov
add
add
fcmovb
or
add
add
pop
cltd
push
cmp
in
jmp
dec
mov
xor
pop
xchg
sahf
inc
add
add
jbe
mov
push
xor
and
test
xchg
mov
xchg
ret
add
add
out
jge
ret
cli
fwait
jp
rcrl
lahf
dec
das
jle
sbb
loope
fistl
add
add
fcompl
iret
mov
mov
adc
mov
inc
ftst
aad
pop
sub
add
add
xchg
pop
cli
cltd
std
sbb
mov
fsubr
icebp
imul
outsb
push
mov
inc
movsb
add
add
add
sahf
mov
mov
test
dec
in
sub
inc
hlt
or
mov
add
add
test
mov
add
lock
add
add
jb
add
add
nop
mov
inc
mov
sub
jmp
add
add
jne
sbb
jne
jno
lods
fistpll
inc
add
add
je
rcrb
add
add
adc
add
add
push
aam
cmpsb
push
aas
loop
inc
mov
xor
dec
mov
mov
xchg
jmp
fdivl
mov
les
mov
shll
int
in
pop
in
or
arpl
add
mov
mov
xor
push
push
pop
lds
mov
fstpt
add
add
inc
jp
push
aaa
ret
xchg
adc
pop
xchg
fwait
mov
lds
add
xor
cmp
add
in
dec
mov
push
inc
fmuls
das
inc
mov
scas
lds
sti
mov
insb
mov
mov
add
imul
lcall
fdivrs
inc
add
add
inc
xlat
mov
fnstenv
je
sbb
and
cmp
lock
jle
jnp
pop
mov
stos
lods
cmpsb
into
dec
add
add
stos
mov
dec
mov
rorb
mov
stc
fstp
pop
jns
add
add
es
les
lret
pop
testb
cmp
cmp
mov
ret
lods
adc
jno
jae
dec
add
add
lods
sti
dec
mov
sbb
add
add
and
aas
inc
cmpsl
lods
add
ja
xor
inc
fwait
nop
mov
leave
pop
adc
or
in
xchg
out
sahf
ret
xor
jno
jb
xchg
xor
daa
ss
mov
lea
sub
dec
mov
mov
int3
fsubs
movsb
cmp
sub
sub
in
sbb
fisubl
push
sti
mov
sti
sub
add
add
das
mov
add
add
and
fsts
push
and
push
fimuls
imul
mov
gs
dec
inc
fbld
sub
add
mov
movsl
push
push
and
add
add
add
add
add
iret
fildl
mov
push
inc
cmp
add
add
push
mov
add
in
adc
stc
sti
scas
push
int3
loop
nop
jne
mov
adc
subl
add
jae
int3
inc
mov
inc
and
std
inc
dec
hlt
rcl
xor
sub
push
aaa
adc
ja
push
test
xchg
stc
jp
cmp
mov
xor
stos
sub
repz
mov
add
add
jecxz
mov
and
out
push
fs
sbb
push
out
mov
insl
mov
jg
adc
add
adc
xchg
shrb
jle
add
add
outsb
pop
cmp
add
lcall
add
add
mov
in
add
pop
test
and
fiadds
add
add
dec
std
cmpsl
out
scas
jb
aas
xor
sahf
mov
mov
std
xor
mov
push
dec
cmp
dec
or
push
leave
test
enter
mov
pop
and
aaa
in
and
jecxz
adc
stos
xchg
imul
add
call
xchg
lret
shrl
jle
xchg
jl
popa
aaa
adc
loop
in
test
push
mov
sub
add
add
xchg
stos
xchg
mov
jp
std
push
int3
insl
ljmp
bound
in
mov
adc
push
push
sub
mov
mov
push
scas
sbb
cmp
imul
mov
cmp
xchg
fldcw
mov
ror
jbe
rcll
aad
xchg
add
pop
in
pop
cmp
fs
sub
add
add
and
dec
add
add
aam
xchg
movsl
pop
xorl
imul
in
in
imul
mov
in
dec
rorb
lret
imul
outsb
and
cs
mov
adc
cld
jl
adc
add
rorb
add
repnz
mov
sub
mov
add
add
add
orb
add
add
icebp
insb
add
add
imul
push
adc
addr16
iret
push
ja
mov
stc
sub
fsubs
sub
aad
xorl
addr16
mov
dec
pop
pusha
mov
aad
push
mov
add
ja
cld
push
pop
rcrl
lcall
sti
mov
sub
cmp
add
stos
mov
push
mov
lahf
hlt
call
outsb
scas
cwtl
mov
rclb
jno
movsl
lret
jecxz
mov
add
dec
sbb
std
sub
and
xor
filds
jg
inc
mov
mov
subl
add
fidivl
bound
das
ss
outsl
push
adc
leave
stos
cmp
push
sbb
jb
mov
dec
add
add
adc
shl
sbb
mov
sbb
xchg
stos
or
sub
add
enter
imul
inc
cmp
cmp
icebp
xchg
mov
fisubrl
jbe
push
inc
fsubp
xchg
adc
insb
mov
add
add
mov
add
add
es
push
and
add
add
ret
xor
popf
dec
xor
mov
inc
mov
jbe
mov
sahf
mov
push
cmp
insb
mov
pop
repnz
hlt
cmpsl
rolb
xchg
leave
pop
mov
sub
add
add
jns
add
add
shl
or
mov
add
sub
loope
push
sbb
ds
outsl
sbb
xor
ret
adc
rolb
jl
int
lahf
shll
add
and
or
inc
add
add
adc
int
adc
or
add
add
mov
sub
sbbl
inc
mov
xchg
mov
je
call
fsubs
movsl
xchg
mov
clc
mov
inc
add
add
or
inc
out
out
mov
sti
notl
jmp
pushf
push
repnz
notl
lea
add
add
add
adc
mov
sbb
adc
add
add
xchg
jecxz
sub
mov
mov
repz
gs
lds
sbb
or
add
add
test
or
add
add
int
dec
add
add
jne
test
dec
mov
outsb
adc
add
add
add
cmpsl
add
add
add
add
add
cmp
add
add
mov
sahf
xlat
stc
fcomps
add
add
push
mov
mov
jp
mov
xor
pop
cmpsb
das
add
add
add
pop
in
mov
add
add
cmp
in
xchg
pop
pusha
add
add
clc
push
add
popf
adc
push
or
push
inc
mov
popf
jb
movsb
push
dec
test
fidivs
add
add
add
adc
lea
add
cmp
mov
aas
imul
mov
mov
fists
add
add
jmp
es
jge
filds
ja
outsb
lods
addr16
mov
adc
push
loope
rcrb
inc
out
jns
push
loope
ret
test
mov
cwtl
dec
mov
ljmp
pop
out
scas
inc
add
add
mov
insl
xchg
push
fs
mov
gs
jbe
jp
shrb
mov
ljmp
and
fcoms
add
add
movsl
ds
add
add
es
jmp
or
mov
push
fsubrs
pop
pop
lret
add
add
sti
add
dec
inc
xchg
add
add
add
mov
mov
add
pop
rcll
js
xor
stc
std
mov
adc
pop
or
add
gs
xchg
aas
outsb
cmpsl
mov
adc
sub
add
add
test
xchg
cmpl
or
add
add
add
add
addr16
or
ss
frstor
pop
jae
mov
mov
cmp
jge
inc
pop
cmp
insb
mov
and
mov
xchg
dec
cmp
and
cwtl
iret
mov
mov
or
xor
fisubrl
xchg
clc
add
test
pop
fwait
inc
mov
add
cmpb
add
add
add
cmpsb
test
es
add
add
fptan
cwtl
in
subl
mov
repnz
add
push
dec
mov
ficompl
js
adcl
mov
or
add
add
cmpsb
nop
mov
sub
add
add
add
add
add
sarl
adc
push
push
jbe
xchg
scas
pop
adc
insl
icebp
sbbl
ljmp
add
add
add
rcll
jb
or
jecxz
dec
mov
add
jmp
in
mov
inc
nopl
aam
out
adc
xor
inc
push
mov
push
mov
add
xor
or
push
inc
xor
add
add
mov
mov
mov
iret
inc
lock
std
jne
pop
jbe
pop
les
push
push
sbb
lret
pop
cmp
push
addb
jno
add
add
or
add
add
ret
fisttpl
inc
sbb
bound
orl
scas
mov
xlat
pop
jl
add
add
mov
dec
enter
push
jecxz
and
add
add
add
add
add
add
call
sarl
add
add
add
jmp
mov
fisubs
addr16
pop
or
xchg
hlt
out
fbstp
push
cltd
loope
mov
movsb
in
push
jecxz
loopne
sahf
xor
movsb
mov
mov
jg
adc
mov
ror
sub
add
add
iret
loope
mov
sub
add
add
xchg
push
xchg
mov
dec
add
add
mov
jb
int3
jne
inc
mov
and
movsl
js
popa
push
rorb
add
and
add
add
sub
xor
loopne
cmp
mov
xor
psrlw
xchg
sarb
stos
or
test
test
insb
mov
jo
add
push
mov
mov
or
add
jmp
pusha
add
add
dec
andb
mov
sbbl
sarl
jge
and
add
pop
mov
mov
push
dec
mov
sub
add
add
xchg
cld
add
add
add
ljmp
test
add
jns
scas
or
add
add
add
mov
add
xlat
and
xchg
cmpsb
out
lds
push
movsl
add
add
out
and
out
add
inc
add
add
add
repnz
test
mov
test
add
add
lret
pushf
loope
into
mov
lahf
mov
leave
pusha
mov
in
xchg
add
add
jnp
or
add
add
cmpsl
jle
jb
lea
mov
add
mov
adc
std
cmc
std
scas
push
and
shlb
pop
adc
add
out
cmpsl
mov
icebp
sbb
sub
add
add
outsl
es
idivl
mov
cmp
xor
cmp
mov
lahf
test
add
add
shrb
ret
enter
dec
add
add
movb
test
xor
pop
adc
into
add
jge
inc
add
add
mov
and
add
add
mov
loope
aas
daa
mov
add
and
mov
xchg
add
add
testb
add
fwait
jle
lods
in
add
std
andb
add
rcrb
add
add
mov
pop
xchg
pop
lahf
js
mulb
add
add
xchg
hlt
fidivrl
add
xchg
cmp
push
fldt
sbb
sub
add
add
add
adc
icebp
mov
call
call
add
mov
sahf
push
sbb
mov
mov
in
dec
mov
or
add
add
xor
aas
sub
or
out
xchg
mov
in
jb
add
add
add
add
add
mov
call
add
add
inc
mov
loope
leave
data16
push
xchg
jl
and
add
add
pop
lcall
mov
mov
add
add
insl
xchg
aad
inc
mov
clc
push
sbb
pop
xor
ret
jno
add
add
stc
fwait
cmp
sub
add
add
mov
bound
jl
pop
stc
xchg
xor
mov
mov
mov
je
sbb
and
lds
sbb
sub
in
call
add
add
add
add
add
add
sub
add
add
add
add
and
cmp
inc
call
pop
test
cmp
call
push
in
insb
add
add
xchg
clc
pop
lods
mov
mov
push
arpl
out
imul
lods
pop
cltd
cmpb
adc
into
xchg
add
add
add
repz
push
cmpl
inc
mov
dec
cli
xchg
mov
lock
mov
or
add
inc
jo
mov
xor
jge
pop
or
xor
pop
xchg
cmp
pop
pusha
mov
lods
repnz
sub
add
add
jno
imul
sub
and
add
add
push
mov
or
mov
xchg
rolb
fs
ret
adc
out
or
scas
aad
cltd
in
adc
sub
cmpsb
shlb
or
add
add
cmpsl
cs
loopne
sub
or
inc
cmpsb
mov
out
jne
nop
xor
cmp
icebp
inc
aam
mov
pop
ja
daa
and
add
lret
xchg
lea
add
add
adcb
pusha
mov
insb
mov
sub
int3
mov
xor
std
out
imul
mov
int
mov
add
pop
cmp
cmpsb
xor
add
movsl
xor
mov
cmpsb
mov
cmpsb
dec
repz
and
xor
shrb
pop
mov
xchg
insl
jl
aad
pop
add
pop
mov
movaps
cltd
mov
imul
test
sbb
cmp
lods
rolb
mov
jmp
add
add
add
insb
add
add
pop
shrb
es
xor
mov
lcall
mov
push
outsb
pop
adc
push
mov
test
lods
cmp
cld
cld
push
aas
arpl
out
fwait
jbe
addb
ja
jne
ds
adcb
mov
imul
stos
mov
nop
and
xchg
jmp
das
cmp
stc
ja
sbb
xchg
mov
xor
lret
mov
inc
dec
and
add
add
dec
aaa
rol
sbb
add
cmp
jns
xor
loopne
inc
push
inc
out
cltd
lds
add
add
xchg
into
movsl
push
xchg
jg
pushw
sbb
mov
imul
add
add
add
mov
fisubl
pop
cmp
mov
sti
cmp
cmp
mov
dec
add
add
rorl
add
add
cmp
shl
or
ficomps
add
add
xchg
fdiv
ja
mov
mov
cld
sub
ret
dec
add
add
add
out
je,pn
cmp
pop
fmulp
cmpsb
mov
add
or
jae
mov
sbb
ljmp
mov
fcomps
dec
add
add
js
pusha
mov
sub
push
inc
repnz
cld
idivl
in
inc
xchg
and
sub
jl
or
popf
mov
lea
add
xchg
imul
xlat
push
sbb
and
icebp
test
sbbl
mov
and
mov
insb
mov
xchg
mov
add
add
subl
xchg
pusha
add
add
mov
mov
adc
cmp
push
loope
sub
add
add
adc
dec
xchg
cmpsl
faddp
jns
mov
xor
mov
mov
or
or
add
fistl
mov
test
dec
xor
or
dec
add
add
inc
inc
jmp
clc
cmc
das
cmc
pop
jl
shll
mov
add
add
fistl
insl
dec
add
add
shlb
lock
ljmp
sub
std
lds
in
arpl
mov
add
gs
mov
mov
sbb
iret
xchg
dec
add
add
jl
inc
mov
and
sbb
pusha
mov
add
add
push
cmpsb
push
mov
lcall
add
pop
imul
and
xor
jl
lock
xsavec
add
sbb
test
add
sbb
cmp
aaa
xchg
mov
add
add
add
movsl
jbe
lcall
out
fstl
mov
inc
mov
arpl
pop
mov
add
push
enter
add
add
add
aad
loopne
push
mov
xor
and
lahf
mov
and
iret
inc
mov
aaa
stos
hlt
mov
stos
fstps
pop
add
and
add
add
sub
imul
fiaddl
cmp
dec
mov
jmp
add
jno
divl
dec
sbb
and
test
cmc
xor
cltd
mov
cmp
and
cs
inc
aas
out
dec
mov
add
add
fs
and
add
add
stos
xchg
lahf
xlat
jbe
inc
mov
shll
ret
pop
mov
test
cs
jmp
inc
mov
mov
add
in
and
jecxz
scas
cmp
fiadds
mov
adc
add
mov
add
xor
insl
call
add
push
add
add
pop
jbe
jno
mov
insl
pop
inc
sbb
ret
idivb
repnz
inc
mov
pop
xchg
shrl
iret
or
add
imul
xchg
lods
std
or
xlat
xchg
popa
pop
aam
jae
or
addr16
add
add
in
dec
mov
ja
dec
rorb
rorl
add
add
push
mov
add
add
fmuls
sbb
call
movsb
gs
inc
push
mov
cmp
ja
push
add
inc
inc
push
mov
add
add
mov
aas
mov
adc
mov
pop
jmp
jg
mov
scas
push
inc
gs
sub
xor
xchg
out
mov
mov
nop
push
loope
mov
std
rcll
rorb
pop
in
mov
cmp
addr16
rcll
mov
inc
push
jecxz
call
add
add
add
fwait
mov
add
mov
pop
cmc
or
mov
test
out
aaa
or
add
add
sar
push
adc
nop
imul
add
add
cmp
add
add
fistpll
das
stos
cld
push
out
add
and
add
add
cmp
xor
ljmp
xor
add
mov
scas
xor
out
out
out
lcall
and
cmpsl
lock
movsl
add
inc
lods
push
push
in
pop
add
add
stc
cmp
cltd
dec
add
add
mov
jl
movsb
sbb
mov
iret
jae
mov
sub
leave
mov
cs
into
fnstsw
cmpsb
fcmovb
test
adc
xchg
mov
push
jl
mulb
lods
stos
out
push
fldt
sub
add
adc
add
jg
ror
lahf
sub
cmp
push
add
loop
loope
inc
xchg
xor
hlt
sbb
add
add
inc
pop
add
add
add
adc
sub
test
jmp
aad
add
add
pushf
mov
aaa
and
repnz
dec
loope
or
test
cmp
enter
mov
mov
stos
sbb
or
in
sub
and
cmpsb
sbb
movsl
or
sub
add
add
sbb
push
test
add
add
test
add
fcmovne
sbb
sbbl
sbb
and
add
add
add
add
add
std
stos
xor
jle
inc
lock
scas
cmpsl
adc
sbb
nop
cmp
push
fisubs
pop
mov
mov
aaa
in
repz
push
imulb
add
add
add
add
mov
and
les
inc
push
hlt
fwait
lret
mov
and
ljmp
add
add
sbb
sub
xor
aaa
repnz
cmpsb
xor
jno
push
cmp
add
add
mov
dec
mov
rcr
add
add
push
mov
fistpl
in
shll
add
add
sub
add
lods
dec
mov
