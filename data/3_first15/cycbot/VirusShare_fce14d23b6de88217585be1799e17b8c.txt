add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
add
add
add
or
or
add
or
add
add
add
or
add
or
add
or
add
or
or
or
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
or
add
add
add
or
add
or
add
or
add
add
or
or
add
or
add
or
add
add
add
add
or
add
add
or
or
or
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
add
or
or
add
add
or
or
or
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
or
or
add
add
add
or
or
or
or
or
add
add
or
or
or
or
add
or
add
add
add
or
add
or
or
add
add
add
add
or
add
or
or
or
add
add
add
add
add
or
add
or
add
or
or
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
or
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
or
or
or
add
or
add
add
add
or
add
or
add
add
or
or
add
add
add
add
add
add
add
or
or
or
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
or
or
or
or
or
add
or
or
or
add
or
add
or
add
add
or
add
or
or
or
add
add
add
or
add
or
add
add
add
add
add
add
add
or
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
or
or
or
add
add
add
or
or
add
or
or
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
or
or
add
add
add
add
add
or
or
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
or
or
or
add
add
add
add
add
or
or
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
or
add
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
or
or
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
or
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
or
or
add
add
or
add
or
add
or
add
add
or
add
add
add
add
or
add
add
add
add
add
add
or
add
or
add
add
or
add
add
add
or
or
or
add
add
add
add
or
add
add
or
or
or
or
or
or
add
or
add
or
add
add
add
add
add
or
or
or
or
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
add
or
add
add
or
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
add
or
add
or
or
add
add
add
add
add
add
or
add
or
or
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
or
add
add
or
add
add
add
or
add
add
add
or
or
or
add
or
or
or
add
or
or
or
add
add
or
or
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
or
or
add
add
add
add
add
or
add
add
add
or
add
or
or
add
add
add
add
or
add
or
add
add
or
add
add
add
or
or
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
add
add
or
or
add
or
or
or
add
or
or
add
or
add
add
add
or
or
or
add
add
add
add
add
add
add
add
or
or
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
or
or
or
add
add
add
add
add
add
or
add
add
or
add
add
add
add
or
or
add
or
or
add
or
add
add
or
add
or
add
add
add
add
add
add
add
or
or
add
or
or
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
or
or
add
add
add
or
add
or
add
or
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
or
add
or
add
add
add
or
or
add
or
add
or
add
add
add
or
or
add
add
or
or
or
add
add
or
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
or
or
add
add
add
add
add
add
add
add
or
or
or
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
or
or
add
or
or
or
add
add
add
or
add
add
add
or
or
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
or
add
or
add
add
add
or
add
or
or
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
or
or
add
or
add
or
add
add
add
add
add
or
add
or
or
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
or
or
or
or
or
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
or
or
or
add
or
add
or
or
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
or
add
add
or
add
add
or
add
or
add
or
or
or
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
add
or
add
add
add
add
or
or
or
add
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
or
add
add
or
add
add
add
add
add
add
or
add
add
or
or
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
or
or
add
add
or
or
or
or
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
or
or
or
or
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
or
or
or
add
or
add
or
add
add
or
add
or
or
add
or
add
or
add
or
add
or
add
or
or
or
or
add
or
add
or
add
or
add
or
add
or
add
or
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
or
or
or
add
add
or
add
or
add
or
add
add
add
or
add
add
add
add
or
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
or
or
add
add
add
add
or
add
or
add
add
add
or
add
or
or
add
add
add
add
add
or
add
or
add
add
add
add
or
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
or
add
or
or
add
add
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
or
add
add
or
add
or
add
or
or
add
or
add
or
or
add
add
add
or
or
or
add
or
add
or
add
or
add
add
add
or
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
or
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
or
add
add
add
or
or
or
add
add
or
add
add
add
add
add
or
add
or
add
add
or
add
or
add
or
add
add
add
or
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
or
add
or
add
or
add
or
add
add
or
add
or
add
add
or
or
or
or
or
add
add
add
add
add
or
or
add
add
or
add
or
add
add
add
add
or
add
add
add
add
add
add
or
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
or
or
or
or
or
or
add
or
add
or
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
or
or
or
add
or
add
add
add
or
add
add
add
add
add
or
add
add
or
or
add
or
add
add
or
add
add
or
add
or
add
or
add
add
add
or
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
or
add
add
add
or
add
or
or
add
or
add
add
or
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
or
or
add
add
idivl
stos
adc
add
add
mov
add
mov
inc
xor
std
shl
jg
fmull
decl
add
add
jne
cmp
call
mov
les
add
add
gs
es
int
add
add
cmp
jno
lahf
jne
sub
pop
sbb
ret
inc
jg
lret
iret
movsl
in
cld
lcall
aad
pop
mov
data16
push
pop
inc
sbb
mov
iret
dec
and
call
lods
fadds
xchg
jl
mov
clc
and
es
add
cmpsb
test
out
mov
pushf
stos
lret
pop
mov
iret
mov
xchg
lcall
call
xchg
mov
add
add
rclb
adc
add
add
movsb
sub
cmpsl
sbb
xlat
dec
jno
cmp
and
add
add
jl
xchg
sub
xchg
dec
inc
jne
mov
push
lock
popf
cmp
cmpsb
sub
loopne
jmp
jbe
repnz
push
dec
cwtl
mov
test
mov
rcr
xchg
pushf
stc
dec
dec
xchg
pop
jno
fcompl
adc
sbb
push
sub
adc
stos
imul
repnz
mov
lret
add
add
ficompl
repz
jmp
int3
mov
cmp
int3
lret
xorb
add
add
jo
mov
adc
out
mov
loop
rcll
xchg
jbe
popa
ffreep
fstps
sbb
loope
sbb
dec
mov
jae
cli
or
popf
push
rcrl
add
nop
xor
js
xchg
sbb
bound
xor
add
jp
push
mov
add
cmp
cmpsl
fmull
fmull
add
cwtl
imul
mov
fimuls
push
out
jno
mov
or
add
add
jp
jecxz
addr16
repnz
cmp
cltd
mov
popf
jnp
add
jb
imul
out
adc
mov
scas
xor
nop
push
cmp
testl
jge
rcll
enter
mov
fidivl
nop
pop
aas
popl
cmpsl
gs
into
pushf
adc
outsl
sarl
cmpsl
sub
jne
cmc
sahf
rclb
test
cmp
add
push
notl
jne
jecxz
or
std
dec
add
add
cmp
mov
mov
add
jno
mov
push
push
xchg
mov
fstp
jmp
ficoms
cld
dec
add
add
mov
sbb
jne
xchg
adc
enter
add
add
and
add
add
icebp
shrl
add
push
xchg
lods
inc
mov
incl
iret
ret
repnz
shl
mov
xor
and
add
popf
and
add
add
repz
pusha
mov
mov
loope
jne
cmp
les
sti
add
testl
dec
add
add
loop
mov
ds
and
push
mov
pop
imul
pop
sahf
lcall
adc
gs
inc
xor
jne
insb
add
add
div
adc
lods
loop
xchg
xor
dec
fcomip
add
bound
push
pop
push
sub
jmp
adc
push
cmp
xchg
jno
add
add
js
repz
imul
mov
cmp
jo
pop
add
sbb
add
add
jmp
xor
add
add
jecxz
insl
fimuls
movnti
shlb
aad
add
add
xor
daa
adc
sahf
and
cld
sbb
mov
cmc
xlat
sub
add
add
cmpsb
ret
call
mov
pop
repz
popa
pop
mov
mov
jo
sbb
add
fldl
sub
add
add
xor
sbb
and
add
xchg
and
add
sub
add
add
sahf
jl
push
xor
dec
cwtl
sarl
psubb
sbb
nop
icebp
xchg
cmpsb
mov
xor
mov
and
cmp
fists
ja
popa
sbb
fs
jl
lcall
push
rcr
push
pop
cmc
lds
add
push
iret
cmp
add
dec
push
mov
add
add
add
mov
lock
mov
push
cmpsl
in
pushf
out
dec
mov
sub
add
add
add
add
mov
pop
mov
inc
and
add
add
pop
mov
insl
mov
and
insl
add
fidivrs
rcll
ret
sarl
lods
sub
test
leave
sbb
sbb
mov
loopne
out
gs
add
out
or
dec
test
cmpsl
cmp
shrb
add
add
dec
mov
mov
add
add
fisubl
xchg
jbe
add
add
inc
ljmp
jle
jecxz
lods
lret
jnp
add
int3
mov
pop
call
pop
int
dec
mov
icebp
mov
mov
add
add
add
hlt
out
in
inc
roll
and
add
add
sbb
cmp
sahf
push
xor
and
add
add
add
add
jecxz
dec
add
adc
mov
sub
add
add
add
das
fildl
pop
mov
mov
bound
xlat
lea
loope
pop
or
add
add
fisttps
cmpsl
mov
adc
add
add
leave
sbb
add
add
add
jp
xchg
leave
popa
data16
mov
outsl
mov
cli
jecxz
add
popa
pop
sbb
mov
or
add
add
cmc
fiadds
pop
push
add
cmp
xchg
pop
mov
lds
mov
movsl
pop
xlat
jo
popf
scas
loopne
mov
push
out
test
sub
add
add
add
add
shr
xchg
imull
add
add
shr
mov
adc
addl
and
pop
bound
mov
add
add
cmp
jb
lock
add
add
inc
fidivrl
pop
cli
repnz
sbb
xor
mov
pop
jecxz
push
jmp
call
and
add
add
mov
add
add
add
das
enter
pop
jl
cmpb
pop
xchg
add
add
push
pop
fsubl
pop
pushf
xor
pop
sub
icebp
pusha
add
add
inc
or
rolb
loope
pop
stc
test
add
jbe
cmp
loope
sub
loopne
sbb
das
in
mov
mov
inc
and
clc
mov
cmp
lods
adc
ret
add
add
inc
xor
add
add
scas
push
arpl
inc
lods
jle
icebp
js
mov
imul
add
add
jb
out
mov
mov
pop
test
add
add
add
adc
loop
fcoms
aaa
pop
movsl
add
jb
insl
lret
adc
cmp
add
add
cmp
in
fisubrs
int3
adc
add
mov
jl
cli
push
sub
add
add
add
cmp
test
out
mov
sub
xchg
inc
sbb
dec
or
cmpsl
mov
pushf
mov
pop
adc
stc
mov
push
in
or
add
add
mov
push
cmp
mov
in
sbb
add
lock
ja
out
sbb
push
lea
fmuls
add
add
jmp
jbe
dec
mov
in
adc
adc
pop
adc
lcall
ret
jae
sti
and
xchg
mov
arpl
adc
mov
sahf
lds
cmp
adc
mov
jg,pn
adc
jecxz
jb
push
mov
add
mov
push
mov
into
fwait
stc
add
add
jbe
add
add
mov
cmp
push
rorl
cmp
xchg
mov
add
out
sbb
mov
add
add
add
xor
mov
add
ret
mov
push
adc
push
fwait
jbe
scas
mov
pop
push
mov
inc
popfw
and
add
add
cwtl
imul
lods
sbb
call
scas
lock
add
add
mov
push
mov
xchg
movsb
add
aaa
adc
push
push
pop
mov
int
cmp
and
add
add
js,pt
add
add
cltd
bound
mov
push
rcrb
xor
mov
int
mov
push
jo
push
mov
cmp
js
add
pop
lds
add
add
add
inc
ds
adc
je
xchg
lea
ret
ja
imul
repnz
sub
add
add
push
gs
filds
add
int
add
stc
xchg
mov
ss
mov
in
jle
cld
test
jmp
mov
roll
push
inc
mov
fstps
addr16
mov
mov
mov
mov
push
fadds
add
add
or
add
add
jae
lds
fadd
or
ljmp
add
add
add
lcall
mov
add
add
out
xor
cltd
ljmp
pop
inc
xor
mov
and
iret
sub
add
add
int3
add
repnz
lahf
pop
out
call
mov
icebp
cmp
push
loopne
jp
or
add
add
orl
xchg
pop
adc
subl
mov
and
fcompl
nop
aaa
fwait
in
movsb
pop
sub
adcb
add
icebp
insl
outsl
mov
push
or
gs
and
add
aad
ljmp
pusha
mov
mov
cs
xchg
mov
and
add
add
push
add
add
pop
fwait
xor
cmp
mov
cwtl
ss
jecxz
sbb
add
flds
add
cli
sahf
jle
sbb
push
or
add
add
int3
cmc
inc
and
add
add
add
push
jecxz
mov
hlt
aad
dec
int
out
hlt
sbb
test
icebp
mov
inc
orb
mov
jnp
loope
or
test
popa
pop
push
je
loope
mov
fisttpll
dec
cmp
lahf
jl
lea
bound
push
xchg
jmp
pop
jg
push
xor
add
add
add
mov
scas
mov
sub
add
add
add
push
adc
or
aad
int3
add
add
cmp
shlb
mov
es
mov
and
add
add
add
lods
jge
jmp
inc
add
add
inc
mov
out
fidivrs
inc
sbb
mov
mov
clc
jl
sub
add
add
push
es
xchg
out
xor
push
gs
lea
add
loope
ss
sbb
add
push
dec
sbb
into
jb
mov
push
jmp
fs
jge
sbb
add
mov
outsb
mov
daa
sar
leave
mov
std
sbb
cld
push
in
das
and
sbb
out
scas
jnp
jecxz
dec
or
add
add
add
inc
pop
je
jge
or
add
add
mov
dec
xchg
jmp
mov
mov
add
xor
inc
add
add
pop
push
push
xchg
test
jne
push
xchg
add
hlt
adc
pop
lds
bound
add
add
lcall
sar
les
test
add
jmp
cmp
add
add
add
add
jae
into
in
icebp
outsl
je
stc
lods
or
add
add
mov
add
test
aas
test
mov
add
add
pop
sahf
loope
inc
mov
jbe
mov
jns
stos
mov
fnstsw
call
add
add
cmp
in
jge
inc
add
add
and
jecxz
test
je
fidivl
mov
and
add
add
inc
mov
add
add
add
push
bound
scas
mov
cmp
inc
add
add
lcall
add
mov
out
outsl
xchg
repnz
add
add
outsl
cmp
mov
cmp
iret
int3
mov
mov
cs
mov
test
fcmovu
push
mov
pop
xor
imul
leave
mov
call
add
add
and
jbe
subb
out
call
shlb
mov
pop
shl
std
rorb
mov
mov
mov
outsb
dec
into
xchg
add
and
add
add
arpl
les
sub
fstl
lods
pusha
add
add
test
mov
js
outsl
out
int
rclb
outsl
shrl
rcrb
in
imul
sahf
fwait
push
xor
dec
pop
add
add
xchg
mov
mov
add
and
add
add
mov
pop
pop
imul
movsb
pop
imul
push
dec
mov
xchg
jb
mov
notb
push
lods
jecxz
stos
loope
cmp
sarb
push
and
add
add
add
push
sub
add
add
lahf
mov
add
xlat
mov
mov
ficoml
les
mov
enter
mov
inc
mov
loop
mov
push
shlb
mov
je
cli
push
into
pop
out
sbb
rcl
mov
sub
add
cmp
jb
jns
fcomip
cli
cmpsb
inc
mov
or
add
push
dec
inc
cs
xor
jle
sub
add
add
addb
adc
lds
xlat
shll
loopne
lahf
adc
add
cmpsb
int
add
add
add
fs
and
add
add
ret
cmc
dec
iret
sub
add
add
add
add
mov
sub
and
mov
lock
sub
jmp
aam
sti
and
add
add
add
add
roll
dec
add
add
jl
inc
mov
jge
daa
or
inc
repz
push
pop
xchg
leave
adc
pop
pop
and
fwait
lods
xchg
fmul
fcompl
cmp
add
add
mov
inc
add
add
mov
aas
loopne
add
mov
sbb
repz
dec
mov
outsl
in
cmp
and
mov
lods
outsl
xchg
sbb
xorb
add
add
mov
sbb
inc
loope
inc
push
mov
add
ficomps
jne
adc
add
adc
cmp
add
jg
hlt
mov
shll
add
add
shl
fsubrs
add
add
add
sbb
cs
cmp
lods
xor
lret
mov
lret
roll
jnp
inc
sbb
add
les
inc
insl
das
mov
xor
add
xor
daa
hlt
ret
mov
pop
sub
sbbb
add
add
pop
lcall
add
add
mov
mov
ja
sub
xchg
and
daa
push
push
std
popf
mov
or
add
add
dec
fidivs
add
add
jp
jmp
pop
sbb
sub
add
add
pop
or
cmpsl
pop
mov
pop
xor
insl
mov
stos
cmp
add
add
bound
test
das
adc
dec
mov
fdivrs
push
dec
mov
lret
icebp
sbb
in
sub
out
scas
adc
into
dec
aad
leave
out
jmp
xor
imul
dec
dec
push
out
pusha
add
add
int
sub
add
add
add
add
push
adc
lret
xorb
mov
faddl
xor
outsb
mov
scas
std
scas
in
movsl
adc
add
mov
add
add
add
or
xor
mov
pusha
add
add
jg
mov
mov
pextrw
imul
cld
xchg
in
push
mov
test
stc
stc
or
imul
jp
cmp
insl
and
add
add
mov
pop
dec
push
fisttpl
rclb
adc
cmc
add
add
add
mov
adc
loope
jb
aam
les
popf
mov
sbb
frstor
aad
jae
gs
inc
add
add
jns
pop
daa
xchg
lea
cmpsl
outsb
insl
xchg
xchg
js
loope
mov
out
mov
mov
add
shl
fmul
xor
or
add
add
movsl
pop
lahf
or
add
add
and
add
add
add
add
push
sub
xor
xlat
xchg
subb
into
jno
adc
aaa
inc
cmpsb
mov
stos
mov
sub
jp
insl
xchg
lret
repnz
mov
add
add
jge
add
add
mov
sahf
jge
mov
sbb
add
sti
push
xor
adc
into
pop
dec
mov
fisubrs
lods
pop
jno
xchg
xor
add
add
les
fst
mov
sbb
dec
repz
les
cmpxchg8b
roll
cmpsb
pop
and
bound
add
add
xchg
xchg
mov
mov
mov
std
cmp
outsb
scas
js
fcomps
and
stos
les
add
add
hlt
dec
pusha
mov
fsubs
ss
xor
add
add
incl
cmp
fistps
inc
or
push
inc
stos
dec
mov
or
mov
add
add
push
enter
add
ret
call
movsb
mov
add
add
dec
adc
add
pop
xchg
in
repnz
add
add
mov
push
add
add
add
add
add
add
add
add
cmpsl
std
inc
ljmp
xor
pop
sbb
mov
aaa
das
mov
sbb
add
add
pop
decb
daa
outsb
addb
add
ja
sub
divl
imulb
xor
add
inc
or
dec
into
call
mov
repnz
and
test
out
mov
add
add
es
ja
dec
test
aas
shlb
enter
repnz
ja
xor
lret
mov
mov
stos
cmp
add
add
fildll
ficoml
add
push
out
pusha
mov
push
inc
mov
add
add
add
lcall
mov
adc
mov
push
int3
es
and
cmc
fs
je
push
sub
jns
scas
mov
xor
add
add
jae
outsb
cmp
lea
xlat
cltd
xor
ss
sub
add
add
cld
jno
cwtl
gs
jge
pop
imul
ret
mov
push
popa
pop
add
sbb
pop
push
loope
add
or
and
repnz
sub
jo
pop
pushaw
add
add
xlat
sub
jne
out
ds
daa
aas
fnstcw
pop
dec
add
add
and
pop
mov
dec
dec
add
add
mov
jmp
mov
mov
mov
das
stos
call
xchg
into
into
call
xchg
and
sbb
fcoms
cmc
adc
jne
stc
pushf
shrl
xor
ret
repz
dec
fdivs
inc
mov
test
mov
push
or
add
add
pop
sbb
iret
or
add
add
add
inc
pop
mov
add
call
add
add
pop
pop
mov
sub
mov
out
add
mov
fnstenv
in
adcl
ss
sbb
bnd
in
dec
inc
repz
push
cs
test
inc
mov
mov
add
ds
push
aad
xor
add
out
lcall
push
pop
mov
xchg
or
add
add
push
xchg
xor
lret
xor
fstp
pop
aaa
inc
add
add
subl
push
mov
test
pop
int3
insb
add
add
push
add
add
add
inc
mov
push
lods
dec
sbb
mov
mov
mov
push
dec
repnz
add
add
test
lret
mov
add
add
cmp
jecxz
jl
add
inc
add
add
xchg
test
fisttpl
fdivrl
ficoms
cmp
jge
jecxz
test
cltd
ja
sub
je
lds
cld
js
notb
mov
lds
gs
inc
outsl
lret
mov
repz
cmp
mov
sub
in
sub
push
scas
jecxz
mov
sbb
cmpsb
or
add
pop
pop
scas
mov
nop
jl,pn
das
sbb
mov
into
in
mov
adc
adc
clc
push
adc
jp
inc
mov
sub
add
add
test
mov
fs
and
add
add
mov
or
cmpb
add
add
out
in
rorb
add
push
sub
add
add
ljmp
mov
negb
add
icebp
aam
fsubrl
mov
push
fidivs
sahf
push
mov
push
int
push
ret
leave
push
insb
add
add
xor
cmc
lcall
add
add
call
nop
push
xchg
fisttpll
ret
inc
add
add
pop
stos
xlat
sbb
jmp
and
add
add
ret
cltd
gs
mov
jmp
daa
xchg
in
scas
xchg
add
add
add
addr16
add
add
add
add
add
jg
mov
lcall
push
inc
decb
mov
out
and
xor
xchg
lods
mov
pop
xchg
cmpsl
sub
and
fildl
mov
insb
mov
and
pop
daa
scas
mov
pop
push
pop
test
add
xchg
jl
fs
xchg
xchg
lock
pop
xchg
mov
pop
mov
jb
add
add
add
lahf
ja
pop
lret
aam
xor
push
jge
int
push
push
sub
add
add
mov
stc
and
add
add
mov
gs
add
mov
mov
popa
sarb
jp
iret
jb
insl
push
iret
xor
call
push
popf
inc
test
mov
cmp
or
popa
and
add
add
dec
lret
xchg
les
daa
jg
push
out
push
lods
cmp
jae
push
jmp
loopne
or
add
add
imul
into
mov
jecxz
stos
clc
xor
add
stc
adc
stc
jno
jns
repz
arpl
mov
cld
jmp
jge
jno
fisubrs
dec
leave
flds
and
add
add
stos
xor
add
shl
popf
xor
cmp
push
mov
jne
cmp
add
jle
mov
xlat
sti
mov
xor
xor
ljmp
loopne
sub
add
add
ss
adc
add
add
insb
add
add
sbb
xor
pop
mov
fucomp
fldcw
push
xchg
shlb
ret
cmp
push
je
xor
jge
daa
shlb
out
cs
cs
xchg
arpl
lods
cmp
jnp
push
in
popa
lea
mov
in
scas
dec
sbb
out
pop
dec
add
add
xlat
jmp
mov
add
nop
jge
dec
loopne
add
add
in
mov
sbb
icebp
jb
xchg
add
add
add
add
aad
xlat
aad
aas
clc
cmpsl
push
mov
mov
dec
fidivrs
pop
push
mov
leave
xchg
add
add
loope
pop
std
add
add
add
add
add
xchg
and
sub
add
aam
call
jle
loopne
mov
inc
mov
xchg
movsl
push
inc
lds
add
add
pop
inc
and
mov
sub
mov
mov
add
add
test
xchg
add
add
outsb
cltd
lock
shll
mov
cmpsb
mov
pop
dec
mov
push
mov
add
add
push
cmp
dec
mov
andb
mov
es
add
add
sub
and
fcmovu
xor
adc
fwait
lock
pop
mov
mov
stc
lock
xor
mov
scas
inc
fdivrl
addr16
movups
mov
mov
pop
jne
pop
or
pusha
add
add
jno
lock
xor
ja
add
mov
mov
dec
jl
push
mov
mov
sub
daa
jno
jle
lods
fcom
into
jmp
das
dec
mov
hlt
cmp
repnz
pop
orl
cmp
add
inc
adc
add
add
pop
outsb
in
mov
add
or
push
jge
pushf
test
ja
int
lret
add
lods
mov
push
nop
push
or
shrl
out
loop
fistl
add
add
add
add
jno
aad
lcall
gs
in
xchg
mov
add
add
fstpt
inc
mov
mov
mov
jl
mov
or
add
add
in
adc
xchg
scas
icebp
xchg
sbb
dec
loope
sub
jno
in
inc
mov
or
add
add
lock
jge
cmp
adc
add
add
sbb
rcll
and
add
add
adc
mov
adc
mov
in
mov
out
push
add
mov
add
add
fidivl
push
or
add
add
dec
fstpl
xchg
adc
fwait
push
adc
mov
add
leave
enter
pop
and
stos
dec
mov
loopne
mov
rolb
xchg
push
ja
dec
mov
inc
lahf
jg
xchg
add
xor
add
add
add
push
data16
push
add
add
add
add
fld
aaa
sbb
enter
add
add
mov
add
add
sbb
add
inc
sar
adc
cs
jnp
jb
incl
into
xor
jle
cmpb
adcl
mov
in
add
add
outsb
test
js
mov
jae
fsubrp
sbb
jmp
js
mov
pushl
add
add
arpl
out
xchg
into
mov
test
mov
sahf
push
or
push
dec
xchg
iret
call
mov
cwtl
and
add
adc
or
pop
int
dec
out
andb
add
xchg
or
push
imul
inc
es
insb
mov
add
add
mov
sub
add
add
loopne
iret
and
adc
jbe
push
mov
arpl
adc
pop
dec
mov
std
sub
aaa
xchg
dec
add
add
add
mov
or
xchg
adc
rorb
add
add
inc
xchg
fbld
mov
push
mov
sub
call
cmp
jne
lea
push
push
call
or
mov
shr
mov
add
push
push
push
push
push
call
leave
ret
mov
mov
mov
or
cld
lea
lea
sub
shr
lock
mov
je
mov
add
lea
clc
jmp
ret
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
cld
call
test
jne
push
call
jmp
bound
data16
add
add
pop
dec
scas
push
nop
inc
shll
sbb
cs
add
add
out
xor
push
addr16
addb
mov
jmp
lock
add
pushf
repnz
jmp
xor
ja
mov
jmp
add
push
sarb
loope
add
add
outsl
nop
adc
cltd
pop
jno
inc
add
add
ss
add
scas
xchg
mov
push
icebp
bound
test
dec
insb
add
add
fwait
sbb
les
pop
pop
mov
mov
leave
imul
cld
or
add
mov
int
add
jno
and
add
add
push
mov
scas
bound
in
mov
sbb
add
pushf
rorb
loope
nop
or
add
add
fldl
cld
lods
add
jnp
jmp
sub
add
add
add
pop
fnstsw
aaa
aaa
pop
add
mov
shl
xchg
mov
add
sub
popf
jne
mov
add
dec
rolb
add
filds
lahf
loopne
push
outsb
cmc
jnp
jae
push
jo
cmpsb
pop
mov
dec
xor
enter
stc
mov
cmpsb
mov
inc
scas
test
fistl
add
aad
lret
nop
dec
mov
sub
add
movb
shlb
das
mov
test
add
mov
add
add
mov
add
mov
dec
mov
jno
push
dec
mov
add
add
inc
fs
lret
push
mov
ss
out
jb
cmp
sbb
mov
std
xchg
mov
xchg
repz
leave
int3
mov
cmp
ret
cmp
push
adc
and
in
lock
nop
testb
mov
add
movlhps
sbb
mov
cmp
xchg
mov
dec
mov
pop
repnz
hlt
push
mov
and
fisttps
add
add
dec
inc
or
add
add
aam
add
add
xor
cld
lret
sahf
cmpw
xor
hlt
test
mov
add
sbb
cmpsb
jns
mov
pop
pop
stc
lods
dec
and
add
add
aam
cmp
add
sub
sub
mov
add
add
inc
mov
pop
out
stos
es
fdivrl
scas
aas
icebp
cmc
adc
jns
push
divb
pop
fldenv
cmp
jo
ret
jae
or
rcl
jmp
mov
add
mov
aam
dec
ret
inc
dec
lret
stc
fcmovnu
outsb
mov
add
dec
mov
push
mov
insl
mov
dec
popf
push
mov
dec
add
add
sahf
pop
xchg
jg
sbb
cmp
movsb
shlb
add
mov
add
stos
mov
jp
or
inc
imul
add
mov
pop
loopne
dec
sbb
add
add
scas
scas
dec
int3
hlt
pusha
add
add
aad
xor
jo
dec
shl
repz
mov
mov
mov
push
sub
add
add
cmpsl
adc
jnp
fld1
inc
loope
mov
xchg
pop
push
icebp
jge
cmpsb
xchg
ret
add
add
mov
and
add
add
pop
pushf
outsl
shll
add
xor
mov
dec
outsl
pop
fnstcw
xor
cltd
stos
imull
and
add
add
xor
insl
js
out
ficoms
and
add
add
xlat
dec
jae
stos
jae
in
mov
jae
mov
add
mov
mov
cmc
jae
add
add
jg
or
add
add
jg
xchg
cli
adc
add
add
xor
sub
sbb
mov
ja
js
xchg
jne
push
xchg
pop
xlat
fcmovbe
loopne
inc
add
add
push
imulb
xchg
daa
inc
mov
jne
subl
adc
enter
dec
cmpsb
loopne
jns
idivb
xchg
push
cmp
daa
jne
insb
add
add
es
and
add
add
or
lock
add
xor
mov
clc
imull
add
add
lret
imul
insb
add
add
je
push
mov
cli
lods
pop
pusha
mov
mov
add
popf
in
jl
dec
stc
sub
mov
push
push
mov
out
div
cld
sub
cltd
sbb
add
push
sub
add
add
repnz
or
add
add
js
enter
adc
scas
xchg
ljmp
or
dec
inc
cmp
arpl
sub
test
shr
cmp
push
mov
xchg
inc
and
add
add
add
add
mov
push
mov
xchg
add
add
add
xorb
sbb
xor
adc
or
jp
push
into
xor
pop
lods
jb
ljmp
jmp
inc
mov
imul
pop
xchg
xor
push
and
xchg
mov
out
mov
cmpsl
xchg
jae,pn
idivl
mov
dec
ja
fstps
stos
insb
add
add
test
insl
jmp
xchg
jae
iret
xchg
xor
cmpsb
sbb
mov
les
cwtl
push
mov
adc
or
add
add
mov
sti
shlb
hlt
fnsave
add
mov
lret
mov
xchg
jle
add
add
ret
add
jb
mov
outsb
dec
push
aas
inc
sbb
in
mov
ja
int3
xchg
icebp
pop
mov
add
or
sub
mov
das
int
jmp
add
into
jge
dec
lcall
pop
pop
mov
add
mov
add
add
mov
add
add
incb
add
mov
pop
adc
sub
add
add
popf
inc
push
out
cli
in
xchg
enter
sahf
push
sarl
mov
mov
pslld
movsl
aas
xor
mov
lods
shll
jmp
stc
in
ret
jg
mov
mov
int3
ja
fnstcw
add
add
add
add
imul
pushf
roll
mov
das
int3
inc
jmp
out
int3
dec
lds
incb
add
jp
add
add
push
dec
inc
jp
sbb
or
add
add
add
add
std
add
add
add
aas
push
enter
xchg
jle
fists
lea
xor
or
ret
push
stos
jmp
mov
add
sbb
sub
add
add
pop
repz
inc
mov
lret
rorl
add
add
xor
or
add
add
out
add
add
lds
stos
xchg
inc
push
adc
cmp
lret
or
push
scas
jmp
arpl
adc
or
add
add
mov
mov
lock
int
xchg
adc
xchg
fdivl
push
push
pop
jne
cmp
add
add
addr16
mov
xor
clc
in
xor
cltd
insl
jecxz
inc
inc
pop
into
in
push
xor
mov
cmp
jbe
scas
sbb
add
data16
movsl
inc
sahf
repnz
add
add
push
ret
jne
out
pop
aad
xor
dec
adc
daa
or
insb
add
add
int
jbe
addl
mov
lods
fcom
insb
add
add
push
sbb
add
add
outsb
aas
add
add
add
mov
aad
scas
push
push
mov
xchg
ficompl
movsl
sbb
xchg
aad
cmpsl
mov
rorl
jmp
sub
xchg
inc
add
add
repnz
popf
mov
test
notb
xchg
add
add
inc
mov
adc
or
dec
pop
inc
add
add
out
mov
shl
dec
pushf
xchg
mov
push
jns
out
add
add
add
push
out
mov
jbe
add
add
stos
mov
add
add
add
add
add
int3
insb
add
add
in
adc
xlat
pushf
push
addr16
xor
rcrb
push
push
add
add
add
xchg
sub
shll
xor
ret
in
adc
jecxz
dec
mov
fisttpl
add
add
stos
lds
mov
add
mov
xchg
sub
inc
adc
mov
jg
xchg
enter
mov
inc
mov
leave
or
push
es
dec
orl
add
add
sub
add
add
mov
add
roll
jb
add
add
and
pop
push
negl
xchg
insb
mov
add
add
pop
in
dec
mov
mov
push
mov
xchg
or
rcll
test
jge
add
add
in
int3
sahf
and
aam
rcrl
js
sahf
push
adc
mov
subl
mov
or
iret
xchg
nop
dec
cmpsb
or
sbb
fwait
aam
jne
xchg
popf
js
lahf
lcall
push
jbe
mov
add
add
mov
mov
sub
add
jge
cwtl
cs
out
jecxz
ret
icebp
push
sub
in
lahf
jae
push
icebp
clc
mov
and
out
popw
lcall
dec
mov
idivl
add
add
mov
pop
and
sbb
add
pop
adc
add
add
sarl
push
push
adc
mov
test
adc
jecxz
sub
inc
add
add
aas
mov
bound
dec
inc
mov
loope
sbb
push
push
push
cmp
das
sub
sti
lret
mov
and
fstl
stos
scas
mov
jg
mov
jnp
adc
add
add
sub
add
add
cmp
insl
out
pop
mov
pop
sbb
mov
dec
add
add
ret
fadd
add
add
mov
scas
les
dec
add
add
pop
sub
pop
adc
sbb
sbb
xchg
arpl
mov
inc
add
add
pop
aam
mov
fsts
lret
in
in
inc
add
add
mov
cltd
ja
shrl
out
cwtl
sub
add
add
push
jb
jg
pop
xchg
stc
pop
sarl
add
add
dec
mov
add
add
insl
data16
stc
jbe
sahf
dec
mov
cmp
or
xor
leave
pusha
add
add
and
add
add
cmpsb
cmpsb
dec
shll
lock
sub
add
cmc
inc
fidivs
sub
add
add
mov
add
add
jnp
pop
inc
aas
sub
add
add
ret
cmp
lret
mov
js
push
into
dec
add
add
pop
adc
xor
add
add
add
mov
add
add
jmp
sub
add
add
dec
call
fdivp
sarl
xchg
fimuls
jecxz
fs
mov
stc
pop
jne
imul
add
add
or
dec
and
arpl
adc
xor
sbb
movsb
pop
sub
xchg
out
pushf
movsl
xchg
push
outsb
xchg
pop
je
cmp
sub
add
add
ljmp
inc
sbb
xchg
or
add
add
add
mov
or
add
add
dec
sub
fwait
inc
add
add
or
subb
test
in
es
xchg
cmp
add
add
xor
lds
lahf
mov
comiss
pop
sbb
mov
cmpsb
inc
lret
cmpsl
jae
fsts
stc
mov
add
add
iret
cmpsl
mov
add
add
scas
push
out
or
add
add
repz
mov
pop
jb
fildl
fisttpl
aaa
dec
add
add
sub
add
add
inc
jecxz
aas
sbb
pop
add
add
add
and
add
add
leave
movsl
sub
mov
sub
shlb
mov
movsl
es
jo
es
rcll
push
fs
mov
mov
lret
xor
mov
mov
scas
add
fadds
add
add
fwait
sbb
cmpsl
push
cmp
mov
dec
jecxz
inc
in
jecxz
mov
idivl
lock
mov
pop
ror
mov
xchg
aaa
inc
mov
nop
push
xchg
cmc
or
add
add
dec
inc
into
sbb
ljmp
movb
add
add
add
mov
push
lret
push
loop
insl
cmpsl
push
fisttpll
aas
mov
fstl
popa
sti
sub
inc
inc
shlb
add
add
fnsave
test
mov
nop
daa
rorl
add
add
aaa
inc
xor
leave
hlt
cwtl
and
add
add
les
pop
shrl
add
add
mov
pop
jg
mov
jecxz
add
add
inc
scas
jle
ret
xor
fmuls
jo
jmp
and
add
add
add
add
test
add
sub
add
add
sbb
mov
frstor
test
xor
add
add
push
jo
scas
loopne
sub
add
add
lret
repnz
je
mov
or
add
add
add
add
add
jge
sub
or
stos
arpl
cmpsl
xor
cli
popa
mov
pop
jp
out
pop
das
shll
mov
xchg
add
addr16
xchg
adc
mov
loope
addr16
repnz
add
add
flds
call
add
cmpsl
cmp
imul
mov
scas
cmp
cmpsb
pop
cld
movsl
shll
stos
cs
mov
in
inc
pop
aam
popa
lahf
mov
fsubr
cmpsl
cmp
xor
out
and
mov
rorl
add
push
cmp
aas
sbb
pop
dec
pop
pop
xor
add
add
xor
scas
cmp
shrb
sub
jb
dec
add
lock
fcoms
arpl
push
clc
repnz
nop
nop
jae
insb
xchg
add
add
add
nop
jmp
inc
cmc
add
dec
bound
xchg
push
mov
clc
repnz
nop
nop
jae
add
add
xor
add
sub
add
add
push
push
mov
xchg
ret
add
add
inc
add
add
add
add
ret
clc
repnz
nop
nop
jae
add
and
fistpl
add
add
fwait
clc
repnz
nop
nop
jae
bound
add
cmp
add
add
push
mov
leave
nop
jmp
add
add
add
jbe
mov
jmp
add
add
insb
add
add
mov
aaa
add
lods
push
mov
xchg
ret
add
add
push
pusha
scas
xor
and
repnz
nop
nop
jae
push
add
add
and
add
in
inc
sub
les
add
xor
add
add
lds
add
add
add
add
ret
cmpw
clc
repnz
nop
nop
jae
pusha
add
add
fistps
repnz
nop
nop
jae
add
add
insb
mov
add
mov
clc
repnz
nop
nop
jae
add
add
add
add
nop
push
mov
leave
nop
jmp
push
pop
popl
ja
shrl
add
xorps
xchg
ret
add
scas
add
dec
mov
xchg
test
rep
clc
repnz
nop
nop
jae
inc
fildl
mov
pop
add
add
add
sbb
repnz
nop
nop
jae
and
mov
add
add
pop
adc
add
cmp
ret
mov
int
push
add
and
pop
inc
add
mov
bound
pop
rep
clc
repnz
nop
nop
jae
add
add
lds
add
aas
fwait
push
mov
xchg
ret
add
mov
movsb
in
add
pushl
clc
repnz
nop
nop
jae
add
push
test
add
insl
mov
clc
repnz
nop
nop
jae
scas
add
add
add
add
add
clc
repnz
nop
nop
jae
add
add
pop
add
imul
repnz
nop
nop
jae
add
popf
add
add
add
push
push
mov
xchg
ret
or
add
cmc
mov
std
add
xchg
jge
subl
jae
add
add
mov
enter
in
leave
nop
jmp
add
add
add
call
leave
nop
jmp
scas
insb
and
dec
aaa
and
add
push
clc
repnz
nop
nop
jae
mov
add
add
add
add
push
cmp
repnz
nop
nop
jae
ja
bound
aaa
add
inc
daa
pop
push
mov
xchg
ret
xchg
add
add
add
add
xchg
test
add
clc
repnz
nop
nop
jae
mov
add
add
imul
andl
add
dec
andb
add
add
add
ret
test
nop
push
mov
leave
nop
jmp
subb
pop
and
push
add
inc
sbb
push
push
mov
xchg
ret
xchg
sub
add
add
addb
add
cld
nop
nop
jae
faddl
int
add
add
pop
pop
clc
repnz
nop
nop
jae
mov
ds
mov
add
add
add
clc
repnz
nop
nop
jae
add
add
push
mov
and
add
fs
mov
cld
nop
nop
jae
scas
mov
add
or
mov
leave
nop
jmp
mulb
add
mov
xorb
movsb
clc
repnz
nop
nop
jae
mov
add
add
add
xchg
add
clc
repnz
nop
nop
jae
add
fsubrl
cmp
mov
call
clc
repnz
nop
nop
jae
popl
fildl
add
pop
add
shl
nop
push
mov
leave
nop
jmp
add
bound
pop
outsl
and
push
push
mov
xchg
ret
add
add
sub
add
add
popl
adc
cld
nop
nop
jae
sahf
add
add
add
and
add
add
mov
nop
push
mov
leave
nop
jmp
and
pusha
aaa
bound
std
inc
push
push
mov
xchg
ret
add
and
add
add
lock
add
add
mov
repnz
nop
nop
jae
mov
add
xchg
outsl
xorb
add
clc
repnz
nop
nop
jae
add
scas
popf
xor
cmp
add
add
add
add
add
xor
ja
add
add
fists
nop
jae
rcrl
scas
and
add
mov
xchg
ret
add
add
add
scas
cld
lahf
pop
nop
push
mov
leave
nop
jmp
in
testb
add
mov
cmp
dec
add
add
je
dec
cmp
repnz
nop
nop
jae
in
outsl
add
add
repnz
nop
nop
jae
add
add
add
add
and
pop
je
clc
repnz
nop
nop
jae
add
mov
add
mov
cld
nop
nop
jae
test
and
test
aaa
sarl
mov
insb
add
add
inc
call
clc
repnz
nop
nop
jae
xchg
add
add
add
push
mov
xchg
ret
add
sub
and
bound
add
pop
clc
repnz
nop
nop
jae
jo
gs
add
add
add
cld
clc
repnz
nop
nop
jae
pop
pusha
subb
add
push
mov
xchg
ret
add
scas
add
movsb
addb
add
mov
jne
clc
repnz
nop
nop
jae
mov
add
addb
pop
add
mov
test
push
mov
xchg
ret
int
popf
add
mov
aaa
mov
std
add
mov
clc
repnz
nop
nop
jae
add
xchg
movsb
jle
rcll
repnz
nop
nop
jae
add
aaa
or
add
add
scas
cmp
xchg
loope
jne
push
mov
xchg
ret
scas
insb
add
push
add
push
mov
clc
repnz
nop
nop
jae
sub
jo
scas
xor
add
je
clc
repnz
nop
nop
jae
cmp
add
push
mov
leave
nop
jmp
insb
add
add
pusha
add
nop
nop
jae
add
scas
mov
add
ja
jne
clc
repnz
nop
nop
jae
and
and
push
push
mov
xchg
ret
pop
sahf
and
mov
add
add
frstpm(287
ds
push
mov
mov
add
jo
scas
adc
add
push
and
add
ja
inc
and
repnz
nop
nop
jae
add
movsb
cmc
add
sar
cld
nop
nop
jae
add
sub
add
scas
cmpsb
iret
xchg
clc
repnz
nop
nop
jae
lds
add
add
sub
pop
xchg
addr16
clc
repnz
nop
nop
jae
dec
mov
add
xchg
arpl
xchg
ret
add
mov
std
outsl
add
pop
mov
lock
mov
xchg
ret
add
int
add
in
or
leave
movzwl
clc
repnz
nop
nop
jae
add
shrl
add
lea
push
mov
xchg
ret
and
add
std
std
mov
add
add
clc
repnz
nop
nop
jae
testb
add
add
gs
mov
push
mov
xchg
ret
add
push
and
inc
add
add
ds
push
imul
nop
push
mov
leave
nop
jmp
add
add
addb
xor
push
mov
add
adc
loope
ljmp
nop
scas
mov
add
clc
repnz
nop
nop
jae
and
jo
add
pusha
add
add
jns,pt
xchg
repnz
nop
nop
jae
xchg
add
jmp
mov
add
nop
push
mov
leave
nop
jmp
add
add
add
add
out
add
add
pop
sbb
repnz
nop
nop
jae
add
jo
xor
gs
jb
mov
clc
repnz
nop
nop
jae
add
add
std
mov
nop
push
mov
leave
nop
jmp
push
push
add
add
add
add
shll
rclb
jmp
sahf
xchg
ja
add
add
add
xorl
clc
repnz
nop
nop
jae
sahf
add
loopne
es
xchg
aam
push
push
mov
xchg
ret
aaa
add
bound
xchg
and
add
clc
repnz
nop
nop
jae
add
xchg
bound
dec
pop
sub
repnz
nop
nop
jae
jo
add
sahf
add
add
loop
push
mov
xchg
ret
xor
add
add
je
add
clc
repnz
nop
nop
jae
outsl
test
add
mov
clc
repnz
nop
nop
jae
in
add
xor
xor
add
add
sbb
mov
clc
repnz
nop
nop
jae
mov
pusha
dec
and
bound
sti
clc
repnz
nop
nop
jae
test
fcompl
add
push
mov
nop
nop
jae
ja
push
dec
xchg
sahf
pusha
sahf
sub
imul
nop
jmp
popl
or
add
ficoml
add
pop
push
mov
xchg
ret
gs
and
push
outsl
aaa
jo
add
in
inc
shr
clc
repnz
nop
nop
jae
pop
xchg
and
aaa
add
xor
aad
mov
cld
nop
nop
jae
add
add
add
add
push
cmp
fwait
clc
repnz
nop
nop
jae
mov
gs
add
repnz
nop
nop
jae
and
aaa
pop
add
outsl
push
clc
repnz
nop
nop
jae
xchg
add
add
xchg
das
jne
clc
repnz
nop
nop
jae
int
add
pop
push
mov
xchg
ret
add
add
and
sub
scas
adc
add
nop
jmp
jo
and
add
or
add
add
adc
push
mov
xchg
ret
addb
fildl
add
nop
nop
jae
add
xorb
add
push
mov
xchg
ret
add
add
add
xchg
push
fists
repnz
nop
nop
jae
xor
test
int
add
notb
jp
jbe
clc
repnz
nop
nop
jae
add
add
push
or
add
add
add
cld
nop
nop
jae
add
pop
sub
and
movsb
add
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
add
fiaddl
popf
inc
stos
clc
repnz
nop
nop
jae
add
faddl
xchg
add
add
and
fadd
push
clc
repnz
nop
nop
jae
and
add
pop
mov
bound
sar
repnz
nop
nop
jae
scas
test
ja
sahf
popl
add
cmp
popa
nop
push
mov
leave
nop
jmp
popf
add
cmp
int
add
insb
add
pop
clc
repnz
nop
nop
jae
add
addb
outsl
add
test
cmc
push
sbb
xchg
fwait
clc
repnz
nop
nop
jae
add
bound
add
mov
push
mov
xchg
ret
xor
add
push
add
mov
xchg
ret
pop
add
popl
add
add
filds
add
jecxz
dec
cmp
repnz
nop
nop
jae
outsl
sahf
mov
fiaddl
add
mov
push
clc
repnz
nop
nop
jae
add
add
add
subb
mov
xchg
ret
add
addb
dec
xor
push
xor
testb
test
xchg
ret
scas
int
sub
add
add
pop
and
nop
nop
jae
bound
scas
add
outsl
add
mov
mov
xchg
ret
add
add
fsubl
test
mov
nop
push
mov
leave
nop
jmp
add
aaa
add
add
call
push
mov
xchg
ret
add
push
add
add
push
call
clc
repnz
nop
nop
jae
add
add
addb
clc
repnz
nop
nop
jae
push
add
fsubl
add
and
add
add
mov
clc
repnz
nop
nop
jae
popf
int
add
mov
popf
data16
jnp
add
incl
nop
push
mov
leave
nop
jmp
add
push
loope
sbb
clc
repnz
nop
nop
jae
fbld
fiaddl
add
add
clc
repnz
nop
nop
jae
lds
add
add
add
add
add
clc
repnz
nop
nop
jae
insb
aaa
add
xchg
push
inc
sbb
nop
jmp
outsl
add
add
add
or
mov
xchg
ret
add
add
sahf
and
mov
sbb
inc
add
add
adcb
rcll
xchg
shrl
nop
jae
sub
addb
xor
add
push
mov
xchg
ret
add
inc
add
or
and
scas
jg
add
popf
in
shll
add
mov
sub
add
repnz
nop
nop
jae
and
xchg
popf
add
fdivrs
mov
leave
nop
jmp
dec
sbbb
add
xchg
ds
push
mov
xchg
ret
add
popf
add
inc
aaa
jmp
pop
testb
xchg
faddl
add
and
xchg
and
insb
add
mov
mov
xchg
ret
add
addb
add
add
add
fisttps
sbb
push
mov
xchg
ret
inc
or
and
add
xchg
sar
repnz
nop
nop
jae
int
add
mulb
push
nop
push
mov
leave
nop
jmp
xor
fidivl
add
push
mov
xchg
ret
push
add
add
sahf
cmp
sahf
dec
in
fld1
clc
repnz
nop
nop
jae
addb
add
fsubrl
inc
cmpl
nop
push
mov
leave
nop
jmp
addb
mov
xor
xchg
mov
xchg
ret
fildl
add
lds
cmc
pusha
add
cmpb
mov
leave
nop
jmp
xor
roll
cmc
push
and
inc
pop
push
mov
xchg
ret
sahf
add
add
add
outsl
add
add
push
mov
xchg
ret
add
add
push
add
add
aaa
add
add
push
mov
xchg
ret
scas
add
negb
fisttps
add
add
push
clc
repnz
nop
nop
jae
and
add
xor
popa
nop
push
mov
leave
nop
jmp
add
in
add
sub
add
add
clc
repnz
nop
nop
jae
mov
add
pop
add
add
sahf
mov
push
mov
xchg
ret
andb
mov
xchg
add
pusha
mov
out
push
push
mov
xchg
ret
xchg
add
mov
add
add
repnz
nop
nop
jae
add
movsb
add
add
cwtl
js
mov
pop
push
mov
xchg
ret
pusha
cmp
pusha
faddl
or
add
add
pop
inc
cli
jmp
inc
or
mov
xchg
ret
add
add
in
push
clc
repnz
nop
nop
jae
add
add
mov
add
xchg
push
add
mov
leave
nop
jmp
addb
sahf
cmp
sub
ret
clc
repnz
nop
nop
jae
add
test
sahf
add
mov
clc
repnz
nop
nop
jae
and
push
add
push
nop
push
mov
leave
nop
jmp
adcb
add
sahf
scas
add
mov
add
test
cmp
ret
and
add
xchg
mov
add
repnz
lods
mov
nop
push
mov
leave
nop
jmp
and
add
xchg
add
and
nop
push
mov
leave
nop
jmp
add
test
and
add
and
rol
nop
push
mov
leave
nop
jmp
add
add
mov
and
add
add
nop
nop
jae
fildl
in
add
add
add
jb
test
nop
push
mov
leave
nop
jmp
movsb
sahf
pop
add
xchg
add
ja
or
add
nop
push
mov
leave
nop
jmp
mov
xor
bound
std
add
add
push
mov
xchg
ret
bound
mov
and
add
add
loopne
add
nop
push
mov
leave
nop
jmp
xchg
add
add
stc
mov
clc
repnz
nop
nop
jae
cmc
add
pop
add
mov
nop
push
mov
leave
nop
jmp
push
mov
sahf
add
mov
mov
mov
inc
dec
push
mov
xchg
ret
add
pop
add
in
add
push
mov
leave
nop
jmp
add
add
xchg
or
push
mov
leave
nop
jmp
add
add
push
mov
and
pop
test
sar
repnz
nop
nop
jae
xor
mov
mov
push
popl
int
roll
in
leave
nop
jmp
add
add
or
leave
push
mov
xchg
ret
fsub
xor
add
bound
push
popf
mov
clc
repnz
nop
nop
jae
bound
sub
pop
roll
ja
add
add
add
clc
cmp
dec
clc
repnz
nop
nop
jae
push
bound
xchg
add
and
add
add
imul
push
mov
leave
nop
jmp
add
and
or
add
les
add
addb
add
add
faddl
push
mov
xchg
ret
mov
test
mov
add
sahf
popf
jl
lods
nop
push
mov
leave
nop
jmp
add
movsb
std
add
mov
add
dec
pop
mov
ret
add
mov
xchg
ret
add
add
add
push
xchg
mov
inc
and
clc
repnz
nop
nop
jae
cmc
add
imulb
add
std
decl
cld
nop
nop
jae
pop
pusha
add
add
cli
jbe
mov
repnz
nop
nop
jae
add
add
int
sahf
cmp
pop
inc
add
pusha
add
xchg
add
popf
add
add
call
repnz
nop
nop
jae
add
mov
add
test
push
push
mov
xchg
ret
faddl
fiaddl
bound
pop
sahf
sub
add
add
inc
in
clc
repnz
nop
nop
jae
popf
pop
add
pop
xor
aam
add
nop
push
mov
leave
nop
jmp
add
xchg
pop
popf
add
and
out
inc
and
clc
repnz
nop
nop
jae
add
xor
add
mov
clc
repnz
nop
nop
jae
popf
fisttps
and
fcmovnbe
pusha
clc
repnz
nop
nop
jae
add
push
outsl
sub
push
and
add
inc
sub
nop
push
mov
leave
nop
jmp
movsb
mov
std
ja
test
cmp
jmp
nop
nop
jae
xchg
add
add
fadds
repnz
nop
nop
jae
fcmovu
add
and
cld
nop
nop
jae
add
add
add
sub
and
push
mov
xchg
ret
add
add
add
add
add
add
clc
repnz
nop
nop
jae
mov
mov
add
add
add
xor
push
mov
xchg
ret
add
and
add
add
add
clc
repnz
nop
nop
jae
sahf
mov
add
mov
test
ja
aas
clc
repnz
nop
nop
jae
add
aaa
and
scas
add
xor
clc
repnz
nop
nop
jae
xor
add
ja
add
or
cld
nop
nop
jae
mov
add
add
mov
xchg
ret
sahf
add
pop
sahf
add
add
test
and
add
repnz
nop
nop
jae
popf
xor
fiaddl
add
lea
nop
push
mov
leave
nop
jmp
mov
mov
add
add
mov
add
mov
fistl
or
cmp
ret
outsl
add
and
orb
stc
cmp
nop
push
mov
leave
nop
jmp
add
sub
sahf
add
add
mov
xchg
ret
add
add
add
es
nop
push
mov
leave
nop
jmp
add
std
add
lds
mov
add
repnz
nop
nop
jae
add
addb
add
xchg
mov
add
jae
jge
clc
repnz
nop
nop
jae
add
add
add
add
call
cld
nop
nop
jae
int
add
add
add
jo
add
fistpl
push
mov
xchg
ret
add
add
push
and
add
mov
add
add
and
lods
insb
add
inc
cwtl
push
call
clc
repnz
nop
nop
jae
add
push
push
add
add
clc
repnz
nop
nop
jae
add
add
fildl
add
inc
add
nop
push
mov
leave
nop
jmp
add
cmp
and
std
xchg
add
clc
repnz
nop
nop
jae
add
faddl
filds
aaa
add
cmp
nop
push
mov
leave
nop
jmp
and
aaa
mov
add
rcll
repnz
nop
nop
jae
add
filds
in
add
add
popf
mov
add
clc
repnz
nop
nop
jae
bound
mov
add
cld
clc
repnz
nop
nop
jae
cmp
divb
and
clc
repnz
nop
nop
jae
xchg
add
xchg
add
outsl
add
inc
push
nop
push
mov
leave
nop
jmp
jo
dec
test
std
bound
add
dec
push
nop
push
mov
leave
nop
jmp
and
pop
add
fdivl
loopne
mov
js
and
push
mov
xchg
ret
scas
add
and
nop
push
mov
leave
nop
jmp
pop
subb
dec
bound
xor
nop
push
mov
leave
nop
jmp
ja
add
not
push
mov
xchg
ret
pop
add
add
addb
add
mov
sbb
in
mov
clc
repnz
nop
nop
jae
add
xor
test
daa
add
nop
push
mov
leave
nop
jmp
int
add
mov
add
lea
clc
repnz
nop
nop
jae
add
and
add
xor
mov
clc
repnz
nop
nop
jae
add
outsl
and
decb
push
mov
xchg
ret
pop
and
add
movsb
in
mov
push
jne
clc
repnz
nop
nop
jae
aaa
movsb
add
cmc
and
mov
push
mov
xchg
ret
add
add
add
inc
add
repnz
nop
nop
jae
outsl
add
gs
add
add
push
addr16
add
add
add
add
add
xor
jb
push
mov
xchg
ret
bound
add
add
add
mov
jp
ds
lea
add
add
in
adc
add
mov
leave
nop
jmp
add
inc
add
add
add
add
push
cmc
incl
addb
add
movsb
add
add
add
add
into
adc
jecxz
repnz
nop
nop
jae
push
pop
add
add
jne
clc
repnz
nop
nop
jae
sub
mov
add
xor
ljmp
ret
filds
xchg
add
clc
repnz
nop
nop
jae
movsb
ja
fcompl
popf
inc
push
add
repnz
nop
nop
jae
mov
mov
add
loope
incl
add
nop
jmp
mov
pop
push
add
push
mov
leave
nop
jmp
andb
ds
in
xchg
and
add
clc
repnz
nop
nop
jae
add
mov
add
push
add
repnz
nop
nop
jae
add
add
add
scas
push
mov
push
xchg
adcb
sub
pop
mov
insb
mov
sub
push
mov
leave
nop
jmp
mov
xor
add
add
clc
repnz
nop
nop
jae
add
add
add
add
incw
mov
xchg
ret
add
cmp
mov
add
sub
int
mov
aaa
pusha
clc
repnz
nop
nop
jae
andb
mov
rorl
imul
add
add
add
jne
nop
push
mov
leave
nop
jmp
pop
xor
add
add
xor
in
leave
nop
jmp
add
cmp
add
scas
add
add
add
push
or
mov
xchg
ret
insb
xchg
pop
add
add
add
clc
repnz
nop
nop
jae
add
faddl
add
add
icebp
nop
push
mov
leave
nop
jmp
sbbb
add
and
add
add
stos
push
mov
xchg
ret
add
mov
add
movsb
shl
xchg
int
clc
repnz
nop
nop
jae
test
std
cmp
add
xchg
outsl
and
ret
clc
repnz
nop
nop
jae
insb
add
insb
mov
or
xlat
jne
clc
repnz
nop
nop
jae
add
add
pop
push
mov
xchg
ret
dec
push
push
aaa
or
add
push
nop
push
mov
leave
nop
jmp
xchg
outsl
in
xor
xorb
call
clc
repnz
nop
nop
jae
xchg
add
add
aaa
add
push
pop
clc
repnz
nop
nop
jae
add
add
and
add
and
addb
add
lea
clc
repnz
nop
nop
jae
sbb
add
cmp
mov
mov
mov
clc
repnz
nop
nop
jae
add
mov
pop
add
addr16
clc
repnz
nop
nop
jae
or
add
add
cld
nop
nop
jae
and
insb
add
ds
ret
add
clc
repnz
nop
nop
jae
xchg
add
add
fiaddl
xor
popl
clc
repnz
nop
nop
jae
bound
sahf
bound
push
mov
xchg
ret
sahf
add
fiaddl
aaa
mov
sbb
mov
nop
nop
jae
mov
pop
scas
mov
add
ja
add
pop
inc
add
add
add
add
add
daa
mov
nop
push
mov
leave
nop
jmp
mov
int
and
push
xchg
add
clc
repnz
nop
nop
jae
add
add
xchg
clc
repnz
nop
nop
jae
add
and
add
inc
inc
mov
push
mov
xchg
ret
mov
in
cmp
add
and
jo
leave
mov
push
mov
xchg
ret
and
pop
and
add
add
add
add
nop
jmp
add
add
push
push
mov
xchg
ret
add
add
xchg
add
shll
dec
add
add
push
add
clc
repnz
nop
nop
jae
add
xchg
lds
add
roll
cld
nop
nop
jae
add
add
and
mov
clc
repnz
nop
nop
jae
add
insb
add
add
add
add
mov
add
clc
repnz
nop
nop
jae
push
add
add
and
add
push
mov
xchg
ret
bound
add
mov
add
dec
das
push
push
mov
xchg
ret
push
add
add
addb
movsb
xor
adc
mov
xchg
ret
mov
and
xorb
add
insb
mov
mov
nop
push
mov
leave
nop
jmp
add
cmc
add
xor
and
add
test
cld
nop
nop
jae
add
fiaddl
and
add
push
add
clc
repnz
nop
nop
jae
add
mov
loopne
mov
mov
nop
push
mov
leave
nop
jmp
add
xor
inc
cmc
mov
push
repnz
mov
clc
repnz
nop
nop
jae
push
add
int
jo
test
mov
push
mov
xchg
ret
add
ficoml
add
add
cmp
insb
jo
clc
repnz
nop
nop
jae
add
dec
mov
aad
rorl
repnz
nop
nop
jae
or
xchg
mov
or
push
mov
leave
nop
jmp
fadd
fidivrl
and
pop
add
mov
push
mov
xchg
ret
add
and
push
test
add
jo
enter
fistpl
clc
repnz
nop
nop
jae
add
and
add
push
out
clc
repnz
nop
nop
jae
fiaddl
add
add
push
mov
xchg
ret
mov
add
add
add
add
add
mov
clc
repnz
nop
nop
jae
add
pusha
inc
mov
add
push
add
not
cmp
push
mov
xchg
ret
add
mov
add
mov
je
mov
mov
je
clc
repnz
nop
nop
jae
cmp
add
push
mov
add
repnz
nop
nop
jae
and
in
and
and
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
insb
add
add
add
sub
pusha
add
inc
clc
repnz
nop
nop
jae
cmc
add
add
xchg
push
add
add
xchg
ja
dec
cmp
repnz
nop
nop
jae
pop
xchg
pop
faddl
or
clc
loop
add
clc
repnz
nop
nop
jae
add
mov
and
icebp
inc
dec
es
repnz
nop
nop
jae
lds
bound
add
repnz
nop
nop
jae
add
add
pop
fiaddl
add
add
pop
mov
push
mov
xchg
ret
add
add
pop
add
adc
repnz
nop
nop
jae
bound
mov
add
add
xchg
iret
pusha
push
mov
xchg
ret
mov
movsb
mov
add
cmc
pusha
mov
roll
repnz
nop
nop
jae
mov
add
add
add
xor
add
clc
repnz
nop
nop
jae
or
clc
repnz
nop
nop
jae
sub
add
push
add
pop
and
add
add
mov
call
clc
repnz
nop
nop
jae
xchg
xchg
mov
mov
push
clc
repnz
nop
nop
jae
mov
add
add
add
pop
insb
sahf
pop
into
mov
add
and
push
pusha
filds
mov
outsl
add
aaa
sub
nop
push
mov
leave
nop
jmp
inc
in
std
outsl
mov
add
add
add
sar
clc
repnz
nop
nop
jae
add
add
sub
call
inc
add
add
scas
mov
add
fdivl
and
repnz
nop
nop
jae
add
add
addb
imul
jmp
xor
add
fwait
push
mov
xchg
ret
inc
add
push
fildl
addb
insl
call
clc
repnz
nop
nop
jae
cmc
jo
pop
sahf
add
mov
xchg
ret
add
add
mov
add
test
push
mov
push
nop
push
mov
leave
nop
jmp
sahf
add
add
add
add
repnz
nop
nop
jae
add
add
add
ficompl
push
mov
leave
nop
jmp
add
pop
xor
add
jp
cmpl
nop
push
mov
leave
nop
jmp
pop
add
add
clc
repnz
nop
nop
jae
sahf
add
xor
test
insb
add
push
and
add
add
pop
push
mov
xchg
ret
sahf
pop
add
movsb
add
mov
add
xchg
add
in
pop
push
mov
xchg
ret
add
add
add
add
mov
dec
mov
call
push
mov
xchg
ret
add
mov
add
mov
add
jo
inc
add
add
push
and
add
add
mov
pop
lods
add
push
mov
xchg
ret
add
mov
add
add
subb
inc
add
add
inc
add
add
jno
jmp
nop
nop
jae
mov
ja
add
mov
pop
test
fld1
push
mov
xchg
ret
xchg
add
popl
std
add
push
out
mov
clc
repnz
nop
nop
jae
scas
xor
push
add
mov
pop
clc
repnz
nop
nop
jae
add
add
xor
popf
pop
add
push
insb
gs
repnz
nop
nop
jae
and
add
xor
ss
filds
sbb
add
push
add
fidivrl
mov
clc
repnz
nop
nop
jae
add
test
add
xchg
add
fidivl
nop
push
mov
leave
nop
jmp
pop
add
add
cmc
add
clc
repnz
nop
nop
jae
add
popf
and
add
add
add
mov
xchg
ret
bound
inc
add
add
and
push
mov
leave
nop
jmp
xchg
add
fildl
xchg
testb
mov
nop
push
mov
leave
nop
jmp
add
xchg
add
and
pusha
faddl
cmp
cld
nop
nop
jae
add
add
fwait
clc
repnz
nop
nop
jae
bound
add
scas
fwait
push
mov
xchg
ret
std
xor
add
gs
mov
clc
repnz
nop
nop
jae
mov
mov
add
add
nop
nop
jae
add
add
add
add
fwait
add
nop
push
mov
leave
nop
jmp
add
mov
xchg
add
add
subb
cld
nop
nop
jae
add
outsl
add
xor
test
repnz
nop
nop
jae
xorb
jo
and
into
iret
mov
nop
push
mov
leave
nop
jmp
and
add
add
addb
std
clc
repnz
nop
nop
jae
add
popf
add
add
std
clc
repnz
nop
nop
jae
add
add
push
inc
testl
cmpl
pusha
add
xchg
add
push
das
push
mov
add
push
xor
pop
and
add
movl
add
ror
push
clc
repnz
nop
nop
jae
add
add
xchg
add
add
pop
loop
incl
in
dec
andb
add
add
xchg
sub
add
add
repnz
nop
nop
jae
add
add
mov
jle
fsts
repnz
nop
nop
jae
testb
add
bound
fmull
add
add
into
cs
add
clc
repnz
nop
nop
jae
add
popf
and
mov
aaa
sahf
popf
cmpb
flds
and
add
dec
add
add
repnz
nop
nop
jae
add
and
cmc
add
sub
nop
jmp
adcb
pop
and
lcall
mov
xchg
ret
bound
and
popf
bound
mov
add
add
mov
push
clc
repnz
nop
nop
jae
and
add
add
lds
clc
repnz
nop
nop
jae
add
add
outsl
mov
add
mov
in
fistpl
push
mov
xchg
ret
in
add
add
add
xor
add
add
push
mov
xchg
ret
add
jo
add
popf
mov
clc
repnz
nop
nop
jae
add
cmp
fistps
roll
pop
ljmp
cld
nop
nop
jae
xchg
ds
add
add
add
add
xchg
inc
add
dec
pusha
sahf
fistpll
cmp
fcompl
sbb
clc
repnz
nop
nop
jae
xor
add
mov
add
or
add
add
add
cmc
add
add
pop
push
call
clc
repnz
nop
nop
jae
add
push
lds
popf
add
sahf
push
clc
repnz
nop
nop
jae
mov
filds
aaa
push
add
mov
clc
repnz
nop
nop
jae
mov
add
roll
sahf
mov
jnp
add
nop
jmp
add
scas
add
add
mov
clc
repnz
nop
nop
jae
sub
pop
add
clc
repnz
nop
nop
jae
push
add
popl
sub
sahf
es
push
mov
xchg
ret
addb
add
fisttpl
lret
mov
adc
add
jns
add
add
add
lret
add
add
adc
or
push
mov
xchg
ret
and
add
popl
add
add
repnz
nop
nop
jae
sahf
filds
and
mov
add
push
mov
xchg
ret
add
add
add
bound
mov
aam
loope
test
repnz
nop
nop
jae
outsl
fistl
add
fbstp
clc
repnz
nop
nop
jae
add
sub
add
pop
add
add
mov
clc
repnz
nop
nop
jae
add
aaa
xchg
add
repnz
nop
nop
jae
xchg
in
add
add
add
add
fld1
nop
push
mov
leave
nop
jmp
add
add
fsubl
jmp
add
cmovns
jmp
dec
mov
mov
xchg
ret
sahf
add
rorl
int
add
mov
add
add
cmp
mov
xchg
ret
add
add
add
add
mov
xorb
repnz
nop
nop
jae
outsl
xchg
fistps
add
mov
je
clc
repnz
nop
nop
jae
add
popl
xor
and
adc
nop
nop
jae
add
fsubl
add
add
and
call
nop
jmp
and
add
xor
repnz
nop
nop
jae
addb
mov
popl
add
add
movzwl
nop
push
mov
leave
nop
jmp
add
gs
add
testb
add
clc
repnz
nop
nop
jae
sub
faddl
add
add
or
clc
repnz
nop
nop
jae
add
cmp
add
bound
add
pushf
sub
clc
repnz
nop
nop
jae
std
mov
add
xor
push
add
clc
repnz
nop
nop
jae
add
add
add
in
leave
nop
jmp
pop
add
pop
add
add
andb
rclb
pop
adc
repnz
nop
nop
jae
or
add
add
add
push
mov
xchg
ret
add
test
add
mov
add
add
cmc
imul
push
mov
xchg
ret
and
inc
add
sub
mov
add
cmp
nop
nop
jae
jo
add
add
add
add
push
nop
push
mov
leave
nop
jmp
add
mov
mov
mov
add
add
or
add
nop
push
mov
leave
nop
jmp
fildl
pop
xchg
add
lods
into
rcll
repnz
nop
nop
jae
add
mov
add
add
nop
push
mov
leave
nop
jmp
add
xor
add
add
add
xor
clc
repnz
nop
nop
jae
lds
add
add
cld
push
mov
xchg
ret
xor
add
add
add
mulb
add
insl
mov
clc
repnz
nop
nop
jae
push
std
add
and
loopne
clc
repnz
nop
nop
jae
add
add
add
add
cmc
cmp
push
mov
xchg
ret
add
add
add
add
add
mov
push
nop
push
mov
leave
nop
jmp
add
insb
movsb
out
std
push
push
mov
xchg
ret
add
add
add
addb
add
and
mov
push
mov
leave
nop
jmp
popf
add
mov
adc
clc
repnz
nop
nop
jae
jo
shll
mov
clc
repnz
nop
nop
jae
add
cmp
cmpsl
xor
clc
repnz
nop
nop
jae
addb
inc
mov
movsb
add
clc
repnz
nop
nop
jae
add
add
sti
nop
push
mov
leave
nop
jmp
add
add
test
in
push
jmp
add
add
insb
add
add
insb
add
cmp
adc
mov
leave
nop
jmp
outsl
add
sahf
push
add
sub
add
mov
repnz
nop
nop
jae
bound
pop
ds
add
add
insb
imul
add
leave
nop
jmp
add
fistpll
and
scas
add
mov
jg
aas
adc
nop
jmp
mov
outsl
outsl
add
clc
repnz
nop
nop
jae
add
mov
add
adc
dec
mov
enter
clc
repnz
nop
nop
jae
ja
add
add
xchg
xorb
add
add
repnz
nop
nop
jae
add
add
xor
and
clc
repnz
nop
nop
jae
std
and
add
popl
std
add
jne
clc
repnz
nop
nop
jae
ja
sahf
add
sub
mov
push
mov
xchg
ret
movsb
fildl
bound
add
mov
xchg
ret
add
add
add
sahf
add
addb
into
fstl
mov
xchg
ret
mov
add
push
add
xchg
add
push
faddl
inc
dec
nop
push
mov
leave
nop
jmp
mov
add
mov
pusha
add
pop
clc
repnz
nop
nop
jae
add
add
mov
bound
mov
clc
repnz
nop
nop
jae
cmp
add
add
add
ficomps
add
nop
push
mov
leave
nop
jmp
mov
add
add
inc
lock
repnz
nop
nop
jae
sub
scas
add
repnz
nop
nop
jae
ja
mov
insb
xchg
sub
add
in
push
push
mov
xchg
ret
add
xchg
add
xchg
or
add
mov
add
clc
repnz
nop
nop
jae
sub
add
pop
sub
repnz
nop
nop
jae
and
mov
add
cmpsb
daa
not
clc
repnz
nop
nop
jae
and
std
add
xchg
add
add
pop
mov
push
clc
repnz
nop
nop
jae
add
cmp
add
pop
add
jl
pop
nop
push
mov
leave
nop
jmp
add
add
add
add
xchg
fsubl
push
clc
repnz
nop
nop
jae
shll
push
and
fsubrl
mov
clc
repnz
nop
nop
jae
scas
xor
add
add
add
out
icebp
clc
repnz
nop
nop
jae
cmp
bound
add
add
sahf
scas
push
push
mov
xchg
ret
sahf
xchg
in
add
add
add
add
mov
inc
cld
add
dec
add
add
add
mov
sub
clc
repnz
nop
nop
jae
mov
pop
add
add
add
test
push
mov
leave
nop
jmp
or
add
inc
mov
rcrl
jae
add
add
add
add
xchg
or
hlt
jnp
add
test
add
add
mov
call
clc
repnz
nop
nop
jae
roll
add
enter
repnz
nop
nop
jae
xor
add
and
in
sub
add
clc
repnz
nop
nop
jae
xchg
add
insb
test
mov
out
clc
repnz
nop
nop
jae
mov
add
movsb
aaa
add
xchg
fistpl
clc
repnz
nop
nop
jae
add
and
bound
dec
pop
inc
add
movsb
add
mov
push
add
gs
jmp
clc
repnz
nop
nop
jae
dec
sub
mov
mov
xor
inc
mov
mov
incl
popf
in
add
and
add
add
xor
xor
sbb
repnz
nop
nop
jae
and
add
add
xchg
push
push
clc
repnz
nop
nop
jae
fisubl
inc
add
movsb
movsb
faddl
sub
add
out
out
clc
clc
repnz
nop
nop
jae
add
imul
nop
nop
jae
outsl
add
xchg
and
lds
filds
push
mov
xchg
ret
add
and
add
add
push
test
nop
push
mov
leave
nop
jmp
fildl
add
and
fildl
add
push
jne
ljmp
jae
sub
add
pop
push
ficoml
clc
repnz
nop
nop
jae
popf
add
movsb
pop
add
lds
pop
push
mov
xchg
ret
xchg
xchg
add
xchg
clc
repnz
nop
nop
jae
pop
add
bound
add
repnz
nop
nop
jae
roll
fildl
add
sub
in
leave
nop
jmp
test
pop
add
add
add
repnz
nop
nop
jae
scas
mov
pop
add
add
add
or
add
repnz
nop
nop
jae
testb
add
call
clc
repnz
nop
nop
jae
mulb
pusha
mov
mov
call
leave
nop
jmp
add
cmc
add
add
jmp
add
xor
std
add
mov
cmc
add
add
push
push
mov
xchg
ret
dec
dec
xor
push
rcrl
and
jmp
cltd
inc
add
mov
add
add
std
add
sub
sahf
pop
add
in
leave
nop
jmp
roll
add
pop
push
ds
add
incl
add
add
sub
pop
add
add
xchg
lea
nop
push
mov
leave
nop
jmp
add
add
and
hlt
mov
add
in
leave
nop
jmp
and
xchg
fbld
add
add
add
lods
aas
mov
push
mov
xchg
ret
addb
xor
sub
add
pop
clc
repnz
nop
nop
jae
ja
and
add
add
loope
enter
nop
nop
jae
add
add
lds
clc
shl
pop
call
nop
jmp
add
inc
std
add
push
push
mov
xchg
ret
and
add
testb
push
aaa
add
add
nop
push
mov
leave
nop
jmp
add
xchg
filds
add
add
test
cmc
clc
repnz
nop
nop
jae
add
add
lods
push
mov
xchg
ret
add
add
insb
sub
add
add
or
repnz
nop
nop
jae
bound
scas
add
xchg
xchg
add
popa
clc
repnz
nop
nop
jae
movsb
add
add
sub
add
and
push
mov
rcrl
add
mov
jae
add
push
add
add
add
mov
leave
nop
jmp
and
pusha
add
add
mov
pop
lahf
mov
push
mov
xchg
ret
add
add
add
add
rcr
push
push
mov
xchg
ret
and
add
pop
cmc
mov
pop
add
cld
nop
nop
jae
pop
mov
add
jo
ja
xchg
call
inc
add
add
fdiv
xchg
aaa
inc
add
add
sub
add
add
add
clc
repnz
nop
nop
jae
push
xor
add
sahf
xchg
add
clc
repnz
nop
nop
jae
sarl
jo
and
add
add
gs
clc
repnz
nop
nop
jae
sub
add
add
add
add
xor
inc
add
add
xchg
mov
add
jae
mov
add
repnz
nop
nop
jae
int
add
pop
push
add
gs
push
mov
xchg
ret
add
add
xor
and
test
rorl
mov
and
cmc
add
sub
test
mov
add
nop
push
mov
leave
nop
jmp
add
and
add
add
mov
nop
push
mov
leave
nop
jmp
add
int
add
std
popf
bound
in
popa
jmp
add
gs
add
cmp
xor
mov
add
add
add
add
repnz
nop
nop
jae
add
add
add
bound
add
mov
test
push
mov
leave
nop
jmp
add
push
add
or
repnz
nop
nop
jae
in
cmp
jo
and
add
or
stos
pop
clc
repnz
nop
nop
jae
insb
and
movsb
fildl
add
mov
add
push
push
mov
xchg
ret
add
popf
add
bound
mov
add
stc
push
clc
repnz
nop
nop
jae
shll
add
xchg
ja
popf
shl
je
clc
repnz
nop
nop
jae
mov
add
add
repnz
nop
nop
jae
sahf
mov
add
add
add
dec
add
sbb
cmp
repnz
nop
nop
jae
mulb
add
sbb
cld
nop
nop
jae
pop
mov
add
add
pusha
add
add
xchg
push
push
mov
xchg
ret
ja
add
xchg
add
std
lock
repnz
nop
nop
jae
xchg
xchg
subb
add
add
add
add
call
clc
repnz
nop
nop
jae
dec
xor
and
xor
rorb
mov
xchg
ret
xor
add
add
add
pop
sub
clc
repnz
nop
nop
jae
movsb
sub
add
xchg
xchg
test
add
clc
repnz
nop
nop
jae
add
xchg
add
insb
add
out
adc
nop
push
mov
leave
nop
jmp
addb
and
cmc
jne
mov
add
add
push
add
scas
add
jmp
clc
repnz
nop
nop
jae
add
xor
and
add
add
xor
mov
nop
push
mov
leave
nop
jmp
and
mov
add
fsubrp
mov
repnz
nop
nop
jae
filds
add
add
cltd
pop
push
mov
xchg
ret
mov
add
add
sub
bound
cld
nop
nop
jae
add
add
add
push
mov
xchg
ret
add
push
mov
add
add
or
sub
add
cld
nop
nop
jae
mov
or
xchg
in
leave
nop
jmp
pusha
and
pop
ja
mov
cmp
add
add
clc
repnz
nop
nop
jae
add
add
and
add
clc
repnz
nop
nop
jae
add
mov
add
add
cmc
movsb
fcomi
mov
jmp
add
xor
add
push
add
outsl
fiaddl
add
ja
cmpsl
push
clc
repnz
nop
nop
jae
push
and
mov
add
mov
jl
add
cmp
add
xchg
or
sbb
clc
repnz
nop
nop
jae
cmp
rorl
add
ja
pusha
push
add
clc
repnz
nop
nop
jae
add
add
add
cld
nop
nop
jae
add
add
testb
xchg
add
add
clc
repnz
nop
nop
jae
and
add
add
nop
nop
jae
add
shrl
add
add
scas
insb
add
cld
nop
nop
jae
add
mov
mov
test
sub
repnz
nop
nop
jae
std
add
mov
and
pop
add
add
mov
or
repnz
nop
nop
jae
mov
add
add
int
add
nop
push
mov
leave
nop
jmp
mov
ja
add
xor
test
sbb
je
add
xchg
xchg
xchg
sahf
add
out
mov
push
mov
xchg
ret
ja
add
add
inc
add
pushf
cld
shrl
leave
nop
jmp
add
int
sub
outsl
push
and
scas
mov
push
mov
xchg
ret
add
add
shr
clc
repnz
nop
nop
jae
or
sub
popl
add
clc
repnz
nop
nop
jae
movsb
bound
fstl
push
mov
leave
nop
jmp
testb
add
add
and
add
add
xchg
nop
push
mov
leave
nop
jmp
add
add
popl
add
pop
aaa
loop
pop
push
push
mov
xchg
ret
add
popl
and
xchg
add
repnz
nop
nop
jae
xor
mov
gs
or
mov
xchg
ret
add
pop
pop
add
mov
add
and
add
add
jmp
sahf
add
scas
mov
add
add
in
push
clc
repnz
nop
nop
jae
add
bound
add
inc
clc
repnz
nop
nop
jae
ds
add
add
add
add
nop
xchg
inc
add
sahf
sub
add
add
add
clc
repnz
nop
nop
jae
cmc
andb
popf
add
add
mov
xchg
ret
add
mov
and
add
or
jp
je
clc
repnz
nop
nop
jae
fildl
add
cs
add
nop
push
mov
leave
nop
jmp
add
add
add
fcmove
jmp
clc
repnz
nop
nop
jae
sahf
roll
sahf
xchg
add
add
cs
sbb
nop
nop
jae
add
popl
add
mov
nop
push
mov
leave
nop
jmp
pop
add
xchg
insb
scas
sub
movsb
dec
add
add
clc
repnz
nop
nop
jae
or
add
xchg
add
add
test
call
nop
jmp
add
add
repnz
nop
nop
jae
add
mov
aaa
add
movsl
add
clc
repnz
nop
nop
jae
add
add
add
mov
movsb
xor
mov
xchg
ret
add
add
popf
add
add
clc
repnz
nop
nop
jae
add
add
movsb
add
add
add
add
nop
push
mov
leave
nop
jmp
in
push
add
or
push
push
clc
repnz
nop
nop
jae
add
mov
bound
and
add
mov
clc
repnz
nop
nop
jae
add
add
push
add
add
int3
hlt
int3
sbb
mov
inc
add
cs
add
pop
pop
ja
dec
add
add
inc
push
mov
xchg
ret
sub
add
add
bound
add
add
jecxz
add
add
add
add
push
inc
xchg
adc
add
push
lcall
nop
nop
jae
add
add
add
mov
mov
jp
pop
add
repnz
nop
nop
jae
insb
add
mov
nop
push
mov
leave
nop
jmp
popf
movsb
add
mov
jo
cli
sub
adc
clc
repnz
nop
nop
jae
add
add
add
add
popa
clc
repnz
nop
nop
jae
add
add
bound
mov
outsl
inc
add
add
add
xchg
add
cmc
mov
push
mov
xchg
ret
add
add
add
push
mov
xor
clc
repnz
nop
nop
jae
test
in
xchg
sub
mov
movsb
mov
bound
repnz
nop
nop
jae
mov
add
lds
jne
push
mov
xchg
ret
add
add
cmp
and
add
cli
xor
call
nop
jae
fldt
add
insb
add
clc
push
mov
xchg
ret
add
sahf
test
std
add
add
xchg
sub
pushl
push
mov
xchg
ret
pop
add
in
xor
pop
js
mov
clc
repnz
nop
nop
jae
add
or
add
mov
in
pop
adc
push
iret
push
push
mov
xchg
ret
ja
xchg
pop
add
add
add
add
pop
pop
nop
push
mov
leave
nop
jmp
add
add
int3
xchg
add
mov
xchg
ret
add
add
add
add
pause
push
mov
leave
nop
jmp
mov
xor
add
or
add
adc
cld
nop
nop
jae
add
int
add
add
in
xchg
cmp
add
add
arpl
rorl
add
leave
sub
repnz
nop
nop
jae
add
and
add
add
mov
add
add
clc
repnz
nop
nop
jae
add
add
popf
add
push
mov
xchg
ret
xor
push
add
popl
add
repnz
nop
nop
jae
xor
add
add
mov
xchg
ret
add
testb
ja
shll
xor
repnz
nop
nop
jae
add
mov
add
cmp
add
add
and
and
add
movsb
ror
push
pop
add
xchg
inc
add
clc
repnz
nop
nop
jae
add
in
mov
add
clc
repnz
nop
nop
jae
bound
mov
std
add
std
stos
clc
repnz
nop
nop
jae
add
add
add
add
push
clc
repnz
nop
nop
jae
add
add
add
add
push
mov
xchg
ret
filds
mov
add
in
ja
cmp
add
add
xchg
pop
clc
repnz
nop
nop
jae
popl
mov
add
add
add
xchg
repz
clc
repnz
nop
nop
jae
xchg
std
add
add
shlb
add
add
push
clc
repnz
nop
nop
jae
add
add
xor
popl
filds
fsubl
sub
add
add
pusha
clc
repnz
nop
nop
jae
add
push
test
insb
and
or
clc
clc
repnz
nop
nop
jae
add
sahf
add
mov
cwtl
inc
add
add
add
add
add
add
and
push
push
mov
xchg
ret
add
popf
mov
add
addb
mov
movsb
xor
and
cmp
ret
andb
add
ja
add
clc
repnz
nop
nop
jae
mov
add
pop
add
ja
clc
repnz
nop
nop
jae
lds
add
bound
sub
fisttpll
and
add
add
add
mov
mov
inc
jp
jmp
xor
out
pusha
add
add
pusha
add
add
xor
pop
aas
pop
adc
mov
test
adc
push
add
add
add
in
mov
into
inc
movsb
fxch
addr16
leave
sub
fstps
adc
and
add
cmp
add
add
dec
in
fistl
dec
sub
dec
lcall
dec
mov
les
adc
jns
fnsave
repz
mov
sbb
add
add
lock
jne
sub
push
mov
test
outsl
and
ss
or
add
add
add
add
xor
shl
inc
stos
push
test
in
mov
add
mov
repnz
add
add
add
xchg
stos
dec
and
add
add
and
fisttpl
add
xabort
xor
add
add
repnz
add
push
sti
inc
cmp
or
fsubrl
mov
mov
ret
lsl
ds
int
popf
jmp
mov
and
es
repz
ljmp
mov
xchg
and
loope
fxch
pop
mov
cli
push
add
add
add
mov
ss
and
add
add
sub
add
add
pop
mov
fcoml
movsl
subb
popa
mov
add
in
adc
and
add
add
add
test
sahf
mov
add
add
sbb
mov
mov
ss
pop
pushf
push
mov
inc
mov
pop
imul
xorl
data16
add
add
jnp
lods
mov
mov
dec
iret
sbb
push
xor
lds
cmpsl
jbe
xor
sbb
divl
push
ljmp
clc
cld
lods
xor
mov
mov
mov
add
lds
call
js
loopne
xchg
add
add
xchg
clc
mov
fisubl
add
gs
roll
cmp
ds
add
add
je
fwait
cmp
adc
enter
mov
clc
xchg
out
add
lds
add
add
add
add
scas
xchg
mov
xchg
enter
test
add
pop
dec
xor
notb
sbb
add
xchg
lret
push
mov
xchg
jmp
add
dec
int3
ss
jmp
xor
pop
lods
pop
dec
push
daa
test
add
add
add
ljmp
inc
add
add
sbb
cld
aaa
dec
xchg
repnz
aam
mov
cmpsb
adc
sub
mov
aam
jp
dec
xlat
push
mov
add
outsb
mov
adc
sub
add
add
add
add
add
insl
push
loopne
or
mov
jg
cli
jo
push
jb
clc
jge
test
pop
nop
cmpsb
xor
push
push
xor
cmp
mov
mov
sub
add
add
out
fwait
loop
stos
push
jge
into
loopne
rolb
das
test
xor
lea
bound
test
addl
add
add
insl
jl
push
jns
xor
sti
call
leave
test
lcall
push
subl
std
dec
add
add
cmp
ret
dec
mov
inc
sbb
and
add
add
add
daa
mov
xchg
jl
cmp
pop
lret
mov
dec
and
inc
mov
es
inc
mov
xor
sbb
clc
mov
ljmp
push
cmp
loop
fistpl
adc
xchg
add
jno
jo
mov
add
add
add
add
add
in
push
testb
loop
add
add
idivb
add
add
push
pop
xchg
push
dec
scas
xchg
pop
jmp
scas
daa
dec
cli
shlb
dec
jno
xor
push
push
test
pop
cld
jle
pop
dec
add
add
sub
sbb
rcl
mov
cld
js
push
dec
aas
sahf
jmp
andl
pop
sub
test
adc
stos
mov
repnz
sbb
and
cltd
inc
cld
pop
movsb
stc
and
add
push
mov
ret
add
pop
into
adc
insl
andb
cmpsl
repz
xchg
pop
mov
or
aas
mov
push
subb
or
add
add
adc
scas
aas
icebp
or
imul
es
ss
pop
dec
test
movsb
sub
adcl
fwait
js
pop
popa
popa
bnd
shr
xor
or
add
add
into
xor
add
and
cmp
pop
pop
dec
push
cmp
add
or
sub
stos
leave
std
add
add
add
mov
xchg
xchg
subb
add
add
xchg
xchg
outsb
loope
push
cli
in
hlt
push
lods
adc
repnz
push
or
sub
inc
gs
pop
jle
pop
out
jnp
jl
inc
mov
add
add
add
mov
xor
add
add
push
fisubrl
inc
push
stc
mov
mov
pop
mov
call
or
add
add
nop
sub
xor
lahf
jp
xchg
rorb
les
ds
mov
out
cmp
mov
sbb
add
mov
nop
cmp
add
add
mov
fldcw
add
add
icebp
js
mov
add
add
xlat
pop
arpl
insl
cld
inc
aaa
fwait
mov
mov
into
in
push
sbb
add
add
jb
and
add
imul
add
into
into
mov
mov
mov
cwtl
and
add
add
jne
aad
shll
push
pop
int
pushf
sbb
cmp
aad
mov
sti
adcb
je
leave
shlb
and
add
add
push
js
xchg
lahf
pushf
xchg
mov
push
xor
pop
scas
add
add
add
fwait
ljmp
fiadds
jo,pt
fstl
lea
xor
roll
add
cmp
fcomp
lahf
mov
ret
dec
sti
fidivl
repz
repnz
pop
add
cld
jmp
in
enter
aad
jecxz
out
cmpl
pushf
scas
xchg
mov
ret
adc
sub
add
add
add
add
fcompl
inc
jmp
push
sub
int
sub
add
add
in
enter
mov
add
push
xchg
xlat
aas
fistpll
jg
popa
or
lea
inc
sub
cs
lods
push
imul
add
add
adc
or
add
add
mov
add
add
adc
out
into
inc
sbb
xor
dec
cmp
mov
mov
mov
mov
das
fwait
jns
ficompl
aas
xchg
aaa
cmpsb
and
mov
push
dec
jmp
dec
mov
sarb
sbb
repnz
cmpsb
xor
push
or
sbb
iret
iret
xor
int
aam
repz
adc
fdivr
adc
xor
inc
addr16
stc
mov
add
add
fisttps
pop
in
xchg
cmp
test
add
or
or
ret
cmp
adc
mov
add
add
push
insb
mov
into
jno
or
mov
popa
inc
jle
add
pusha
mov
ja
loopne
add
fnsave
repz
leave
pop
xchg
dec
add
fxch
sub
jnp
divb
push
or
fwait
rclb
cmp
test
lock
in
xor
daa
cmp
mov
movsl
sub
push
pop
push
cs
leave
mov
lcall
aam
out
popf
adc
jbe
cmpsl
xor
int
add
add
xchg
shlb
push
jo
and
push
sbbl
add
pop
jecxz
push
pop
mov
nop
jae
and
xchg
pushf
pop
push
jg
test
add
aas
jle
mov
icebp
hlt
mov
mov
cmp
fldenv
insb
add
add
mov
add
add
ss
or
mov
fsts
jmp
cld
cmc
dec
lcall
inc
mov
add
add
mov
xlat
adc
cs
mov
and
cmp
add
add
add
sbb
and
add
add
arpl
sub
add
add
in
adc
add
mov
sbb
int
rcrb
push
stc
std
rcll
in
ds
fdiv
cmp
enter
jb
sub
add
add
mov
ret
add
add
add
xchg
negl
add
add
and
add
add
mov
cwtl
sarb
mov
fldenv
xchg
or
sub
shl
xchg
scas
fisubl
imulb
aas
push
in
sbb
add
add
pop
xchg
add
add
add
sub
popf
and
pop
cld
jne
jae
fnstsw
add
add
stos
sbb
mov
inc
mov
jns
clc
mov
add
add
dec
mov
push
iret
cs
mov
lret
mov
add
add
mov
gs
adc
decl
mov
jmp
sbb
fcmovb
xor
out
adc
push
fildll
lods
neg
and
add
add
add
add
test
pushf
and
add
add
popa
cmp
jle
jo
cwtl
mov
adc
addr16
fistpll
inc
xchg
inc
jle
fdivp
pop
lcall
popf
test
es
push
test
insb
mov
add
cmpsb
out
in
inc
orb
xchg
int3
or
xchg
daa
mov
add
pushf
xor
inc
lcall
xchg
lret
out
ss
fwait
add
mov
jg
imul
cmp
insb
add
add
int
mov
daa
fldenv
pop
mov
popa
lods
xchg
xor
add
add
adc
adc
je
dec
decb
mov
fsubrp
mov
add
mov
xor
clc
sub
add
add
or
div
dec
mov
shlb
int3
lods
pop
out
and
pop
add
xor
adc
dec
add
add
sbb
inc
jnp
shlb
push
outsb
fdivs
mov
mov
xchg
cmc
das
cld
insb
mov
shrl
add
insl
insl
pop
sub
mov
or
stos
xor
add
and
pop
out
sub
jns
lcall
ljmp
jo
sti
test
out
mov
fxch
add
add
add
cld
lcall
adc
add
add
jmp
pop
dec
or
sar
rep
xor
mov
inc
scas
arpl
add
gs
mov
add
add
add
add
lods
mov
or
hlt
jns
mov
cmc
add
add
add
pop
pop
pop
jbe
bound
push
and
lahf
jbe
inc
add
add
jo
pop
dec
dec
subl
mov
and
dec
andb
imul
pop
bound
pop
leave
int3
mov
xchg
sarb
rep
sub
add
add
inc
stc
push
lcall
mov
mov
push
or
add
add
cmpb
sbb
sub
hlt
mov
cmpsb
adc
mov
mov
xor
add
test
sahf
ljmp
add
out
dec
stos
or
mov
add
cmp
js
mov
fldt
decl
scas
rcr
mov
add
add
xlat
je
add
add
add
mov
dec
fwait
sub
and
and
mov
shll
pushf
mov
leave
ljmp
std
into
push
outsb
adc
je
xchg
lret
jb
fdivrp
in
out
mov
test
adc
add
mov
add
int3
sub
stc
inc
cmpsl
arpl
adc
sbb
popf
sbb
add
add
jp
or
jb
daa
popa
and
add
add
adc
pop
rol
popa
arpl
mov
or
mov
int3
fwait
push
lds
add
ljmp
sahf
cltd
lahf
or
add
add
icebp
mov
adc
in
xchg
jmp
mov
xlat
dec
mov
inc
mov
add
add
mulb
scas
push
gs
orb
add
add
mov
add
add
push
or
sahf
cmp
dec
mov
cmpsb
out
pop
cmp
sbb
inc
inc
jbe
cltd
inc
imul
cmp
sbb
xchg
setns
add
add
xchg
fwait
rcl
popa
out
mov
lret
jmp
add
addl
push
jle
push
out
daa
pop
mov
and
push
push
js
imul
add
inc
mov
add
pushf
cwtl
cmp
mov
lahf
sti
lods
movsl
push
nop
sahf
push
mov
insl
stc
or
repnz
mov
aas
or
add
add
in
or
add
add
push
imul
arpl
sub
mov
cltd
mov
shll
dec
sub
inc
inc
mov
push
fdivrs
mov
loop
inc
popf
insl
mov
adc
mov
jmp
add
add
add
add
pop
out
mulb
add
add
add
mov
mov
xchg
adc
addb
mov
int
jbe
jne
clc
mov
testl
push
popa
movsl
scas
insb
add
add
pop
jae
jecxz
add
add
add
mov
aam
lods
mov
add
scas
sti
mov
add
sbbl
inc
cld
push
push
mov
stos
popl
cs
popf
jge
push
pop
mov
mov
push
jg
mov
add
add
mov
add
in
push
rolb
fcomp
push
and
sar
mov
dec
lds
loopne
cltd
jns
jg
xchg
data16
mov
mov
sub
lea
xchg
cwtl
shl
mov
lods
cmpsl
xchg
adc
aaa
cli
jmp
pop
and
add
add
mov
xchg
add
add
add
add
add
sub
mov
mov
inc
in
sub
ljmp
xor
mov
mov
cmp
std
inc
mov
lret
adc
popa
imul
sbb
adc
test
add
dec
mov
out
addb
in
je
xchg
add
add
add
add
add
push
adc
and
out
fidivs
clc
or
cmpsl
mov
xchg
pop
testl
push
inc
jno
cmp
cmc
jno
leave
push
push
lock
lea
nop
cmp
add
add
push
out
sbb
sbb
enter
mov
aaa
pusha
add
add
jo
in
sbb
jb
add
add
pop
cmp
mov
lcall
call
repz
hlt
in
and
mov
roll
fdivrs
outsb
dec
shrl
add
add
cmp
fldenv
mov
and
xor
add
add
mov
je
outsb
iret
lcall
or
add
add
xor
mov
jle
pop
or
push
push
xchg
push
repnz
mov
imul
jbe
add
pop
in
add
add
mov
mov
dec
mov
xchg
gs
dec
mov
mov
pop
and
or
add
add
or
add
add
sar
loope
ficompl
push
pop
sub
fsubrl
add
add
sub
add
add
ret
aas
pop
and
mov
xchg
sub
lea
inc
add
add
orl
inc
sbb
pop
inc
add
sbb
and
aam
and
cmpl
sahf
addb
mov
add
add
inc
add
add
xadd
add
sub
and
or
out
imul
leave
enter
inc
lock
jo
push
and
dec
push
mov
mov
push
mov
sahf
jae
pop
push
aad
cmpsb
push
lds
adc
out
movsb
push
xchg
inc
push
adc
jns
testb
fwait
jno
ljmp
inc
jno
aaa
scas
subl
je
mov
dec
lea
sarb
es
andl
jae
bnd
jmp
inc
fdivrs
imul
mov
xlat
add
add
test
orl
pop
shll
mov
add
add
sar
mov
add
sub
add
add
in
push
lahf
shr
mov
pop
ja
inc
or
xlat
and
add
add
cmp
inc
mov
or
sub
lock
call
jbe
dec
add
add
rolb
imul
sbb
lahf
push
shll
out
fistpll
ss
push
clc
pushf
dec
adc
addr16
addr16
mov
mov
sub
push
mov
iret
mov
into
sbb
mov
out
push
mov
fisttps
add
add
push
aaa
mov
std
scas
add
add
add
dec
loop
loop
and
pop
add
dec
mov
jnp
cs
pushf
enter
jmp
sbb
or
or
mov
inc
and
std
lock
add
push
bound
call
ljmp
pop
mov
sbbb
mov
out
add
add
lret
insb
add
add
cmpsb
test
mov
mov
pop
add
xchg
iret
into
out
mov
mov
sub
sti
fisttpll
fs
add
mov
mov
mov
loope
xor
imul
add
lods
push
adc
mov
xorl
add
add
test
mov
cmpsl
adc
push
push
fsubrp
ret
loop
loop
fwait
pop
sub
stos
jecxz
test
repz
insl
xchg
dec
mov
jle
imul
pop
jne
fbstp
push
or
add
add
push
push
xor
inc
ret
addb
lahf
daa
mov
or
jno
mov
rorl
push
cmp
es
adc
movsb
inc
add
add
pop
lcall
mov
add
daa
mov
push
stos
notb
mov
pusha
add
add
icebp
aad
out
lcall
sti
and
int3
fisttpl
xor
add
add
push
xchg
repnz
icebp
inc
xor
repnz
bound
add
jl
idivl
mov
mov
stc
xlat
hlt
clc
imull
inc
cmpsl
add
add
add
movsb
int3
mov
dec
mov
add
add
add
mov
sub
push
push
jp
aad
pop
test
adc
mov
daa
lds
punpckhdq
jae
sbb
push
adc
ficoms
sbb
pop
mov
sub
push
dec
je
int3
mov
add
add
jno
push
jmp
leave
scas
cmp
lock
dec
test
pusha
mov
dec
loopne
add
add
sub
add
add
mov
or
add
add
push
push
filds
xchg
fdiv
cmp
aad
dec
adcb
mov
arpl
mov
add
add
pusha
mov
mov
aas
dec
mov
add
add
pop
stc
dec
mov
lcall
xor
sub
jbe
jns
cmc
pushf
pop
test
push
mov
xor
add
cltd
push
mov
mov
imul
sbb
jle
daa
fwait
xor
dec
inc
mov
call
inc
sahf
cmc
imul
inc
push
cld
ret
fildl
loop
lods
or
mov
mov
xchg
dec
jmp
push
lods
jo,pn
sub
add
add
aas
mov
cltd
popf
in
movsb
dec
add
add
fidivrs
frstor
add
pop
push
and
push
sti
sti
lods
je
bound
add
mov
push
push
push
in
leave
loope
pop
xor
add
add
imull
add
scas
push
mov
add
mov
dec
lods
mov
add
inc
and
pop
push
xchg
in
and
mov
mov
pop
fadd
std
mov
mov
inc
pop
enter
ljmp
add
mov
ja
cmp
add
mov
insb
mov
inc
sub
sbb
repz
add
cmp
add
add
subb
add
add
mov
rclb
jle
cmp
and
movsb
addr16
add
incl
push
inc
test
sahf
sbb
outsb
fdivs
lret
mov
adc
repnz
add
add
hlt
sub
fsub
int3
stos
imul
arpl
mov
mov
add
add
add
xchg
or
sub
add
jecxz
movsb
mov
add
std
add
mov
inc
add
add
mov
in
scas
dec
xor
dec
lea
add
add
enter
add
add
push
pop
xchg
sub
ds
push
leave
into
add
pop
xchg
or
int
ret
loope
add
jae
inc
mov
and
add
add
sub
add
sti
xchg
test
roll
push
inc
stos
push
dec
mov
xlat
fimull
cmp
arpl
add
nop
push
mov
add
push
in
iret
incb
fwait
cmp
stc
jg
in
cmpsb
or
cmp
pop
jp
aas
mov
mov
cmp
pop
fisttpll
push
xchg
adc
stc
sbb
and
jp
aad
mov
inc
pusha
add
add
hlt
popa
dec
dec
xchg
mov
push
xchg
cmc
push
push
bound
shl
sbb
push
bound
shlb
mov
daa
mov
mov
icebp
and
popf
test
mov
add
roll
add
xchg
mov
mov
les
call
ret
gs
pop
shlb
jne
xor
mov
push
pusha
add
add
movsb
out
add
add
xor
or
or
xchg
btc
pop
jnp
fldcw
or
shll
add
stc
and
xor
sub
mov
push
or
xchg
or
push
insb
add
add
iret
mov
inc
add
add
push
ret
xchg
xor
sbb
add
xor
or
add
sbb
mov
pop
sti
inc
mov
add
ja
mov
mov
adc
cmc
clc
or
add
lods
sbb
add
rcr
mov
pop
add
into
jno
jns
sub
and
jb,pn
and
add
add
lea
call
add
dec
xchg
addr16
outsl
jle
pop
scas
mov
jmp
test
sub
add
add
add
add
test
or
add
add
repz
mov
mov
dec
push
pop
out
stos
add
std
jle
mov
add
outsb
jb
stos
cmp
mov
pop
rorl
mov
ret
ljmp
sub
pop
mov
insl
or
add
add
mov
xor
roll
push
mov
sub
call
mov
mov
xchg
push
icebp
mov
imul
push
fsub
das
add
add
mov
push
shlb
movsl
push
out
xorl
inc
xchg
ja
popa
inc
add
add
mov
add
add
fidivrs
pop
test
push
xchg
adc
dec
mov
adc
movsb
xchg
add
int3
mov
js
aad
cmp
mov
push
cmc
dec
imul
fstp
pop
and
decb
fcoml
inc
movsb
inc
dec
mov
test
mov
testb
mov
cmp
negb
lahf
sub
addr16
pop
jmp
dec
test
sahf
inc
dec
inc
je
repz
into
pop
out
mov
in
cld
mov
mov
add
add
jp
inc
lock
cwtl
lcall
sti
bound
into
inc
lea
inc
addr16
dec
add
add
test
cmp
and
bnd
cmp
int3
push
popa
mov
sub
adc
xor
adc
testl
pop
mov
dec
faddl
add
add
aam
addr16
add
add
add
add
mov
mov
ja
inc
ja
push
sbb
shll
jp,pt
dec
sub
add
add
sahf
jns
jecxz
sub
add
add
add
add
cli
lds
add
xor
push
sbb
cmp
dec
arpl
mov
mov
and
fdivrl
ljmp
fcomps
or
xchg
inc
add
add
insl
mov
add
push
jp
fisttps
mov
add
add
add
popa
ret
std
ds
xchg
lahf
xchg
sub
es
mov
aas
xchg
mov
mov
add
popa
lret
cmp
dec
dec
into
push
xchg
neg
notl
add
cmpsb
sub
pop
lret
jge
sbb
add
add
movsb
in
out
jae
push
pop
sub
pop
push
pushf
xor
mov
push
fisttpl
dec
add
add
shrb
add
add
add
add
sub
add
add
add
and
lahf
jmp
jae
ffreep
in
or
lret
jg
fsubl
jnp
lock
dec
add
add
add
add
add
push
sbb
ret
ror
xlat
inc
jl
js
test
imul
jecxz
imul
add
mov
or
add
add
bound
pandn
call
into
or
add
add
std
fs
cmp
pop
shll
out
push
cli
jno
dec
add
mov
or
add
add
idiv
and
add
jp
imul
loop
mov
shrl
add
add
into
sbb
enter
mov
outsb
jnp
nop
addr16
cmp
mov
lret
push
mov
icebp
mov
push
xchg
mov
jle
adc
stc
cltd
in
inc
fwait
in
adc
mov
sbb
inc
rorl
pop
xor
scas
mov
cs
lods
mov
add
mov
and
lahf
call
sbb
enter
sahf
hlt
dec
add
add
mov
in
push
jb
jp
mov
push
fcomip
das
mov
mov
loop
inc
mov
add
add
imul
test
xor
add
jmp
aas
sub
pop
std
in
add
loop
mov
add
add
mov
lahf
lods
adc
pop
mov
adc
push
pop
lcall
add
add
jo
testb
clc
nop
sar
cmp
scas
jmp
mov
cwtl
pop
loop
ret
pop
cmpsl
ljmp
out
pop
and
add
add
add
add
mov
add
mov
test
lods
enter
mov
add
xchg
sbb
jne
xchg
hlt
push
mov
add
mov
test
adc
add
xor
imul
and
pusha
add
add
and
mov
add
add
inc
shl
add
add
lahf
pop
fsubs
push
pop
in
loop
mov
lds
aas
andl
inc
push
lods
fnstenv
pushf
jnp
mov
mov
xor
and
add
add
hlt
into
test
jecxz
mov
xchg
pop
mov
mov
lret
adc
fucomip
mov
sub
add
add
insl
arpl
add
sub
jo
test
lock
pusha
mov
pushw
push
rclb
lret
push
fucomip
sbb
add
add
jg
imul
mov
add
add
add
addr16
sub
adc
push
pushf
test
jb
stos
movl
sub
repz
ret
add
add
mov
pop
icebp
add
add
add
ljmp
je
add
add
add
shll
jae
push
or
add
add
add
add
xchg
mov
xor
aas
jns
sub
inc
xor
fdivr
aaa
imul
push
add
mov
mov
add
add
add
add
lahf
push
push
jl
negl
mov
mov
nop
add
add
add
add
add
add
imul
xor
add
dec
add
add
mov
mov
push
shll
inc
and
hlt
or
fidivs
pop
movsb
add
or
lret
and
xchg
cli
adc
jl
dec
jmp
popf
mov
add
daa
push
add
push
push
sbb
add
add
mov
mov
xor
fisttpl
jmp
mov
lds
dec
lea
mov
pop
popa
xlat
inc
lods
push
jl
push
sbb
hlt
insb
mov
push
jge
add
cmpsb
mov
add
or
aaa
xchg
jbe
pusha
add
add
cmp
ds
mov
mov
add
jnp
mov
mov
pop
scas
mov
push
call
add
add
add
add
and
add
add
imul
scas
adc
pop
jbe
xor
add
dec
or
jne
negl
dec
int3
aaa
inc
clc
insb
mov
fadds
ret
xchg
mov
add
fwait
into
test
push
mov
lds
cld
push
fsubrs
push
icebp
repnz
ds
xorl
jne
les
xor
in
cmp
add
test
sub
mov
pop
out
and
sti
mov
and
add
add
je
pop
mov
push
or
fwait
dec
mov
mov
add
stos
sub
stos
call
roll
xlat
cmp
add
add
daa
or
xchg
mov
fistpll
in
dec
mov
lods
sbb
cli
imul
sti
mov
mov
aaa
pop
jp
les
mov
cmp
add
add
xchg
pop
dec
mov
lods
out
and
fdivrs
add
iret
xchg
add
add
into
mov
iret
jp
lret
sub
mov
xorl
dec
push
cmpsl
or
cmp
cmp
mov
add
add
add
mull
xchg
adc
inc
cmp
cli
aaa
sbb
add
sbb
leave
push
sbb
add
add
add
mov
cmp
mov
and
xor
pusha
mov
dec
sti
cmp
cmpsl
pop
inc
add
add
out
pusha
add
add
loop
movsl
xor
sub
inc
mov
dec
jno
test
mov
jo
cmc
aas
cmp
adc
addl
call
jns
push
lock
adc
add
add
xor
addr16
xchg
jp
mov
nop
mov
adc
mov
add
adc
adc
je
xchg
push
mov
movsl
jns
cmp
jb
inc
sbb
sbb
push
in
pop
ficoms
push
cmp
push
add
test
add
in
rcrb
inc
adc
cmp
stos
or
insl
and
pop
mov
xor
add
loop
xchg
lret
jo
mov
lret
ret
or
add
add
pop
stc
out
es
repnz
sbb
aas
fistl
jae
adc
cmp
mov
xchg
aaa
jl
adc
push
mov
repz
cmp
jo
mov
jg
inc
mov
das
sub
xor
mov
lods
xor
add
cmpb
aad
xor
jnp
adc
cmpsl
inc
and
add
add
es
cli
aad
outsb
mov
ljmp
push
pop
adc
adc
inc
adc
mov
push
loope
clc
imul
jb
test
cmpsb
xor
ret
lods
testl
add
and
aaa
sbb
sub
imul
aad
mov
pushf
jmp
jo
jl
aaa
push
pop
jle
pushf
and
and
add
add
scas
mov
cmpb
add
push
test
add
insl
ss
xchg
andb
adc
ds
sbb
fdivrs
fcoms
add
add
daa
xor
add
hlt
sti
cmp
insl
sbb
xor
icebp
sar
popa
rcrb
ds
fdivl
xor
sub
add
add
pop
mov
clc
cmp
mov
sub
push
xor
or
stos
add
add
test
shrl
add
mov
mov
sahf
jge
add
add
add
sti
fisttps
cmp
cld
sarl
jecxz
mov
cmp
inc
loop
lcall
std
andb
inc
mov
aam
mov
add
add
out
add
add
xchg
fxch
imul
add
enter
add
add
add
shl
cltd
outsl
pop
xchg
mov
mov
dec
loopne
mov
bound
cmpsl
es
jbe
adc
clc
in
lahf
jg
mov
add
add
add
mov
outsb
mov
add
add
xchg
sbb
and
in
imul
add
jle
mov
xchg
cs
hlt
leave
or
add
add
int
ljmp
mov
lea
add
cmp
cmp
push
jnp
push
xor
add
add
jmp
push
jb
and
loope
inc
icebp
inc
sbb
add
cmp
dec
mov
jne
mov
jb
fdivr
jne
daa
gs
jne
add
add
add
mov
push
shrb
and
outsb
pop
daa
dec
add
add
xchg
fs
ja
dec
xor
hlt
add
add
add
inc
add
add
aad
xor
pop
mov
cmp
mov
add
imul
add
mov
push
jno
adc
jo
je
ss
add
add
into
push
jbe
adc
sbb
mov
aam
jns
out
mov
add
js
xchg
xchg
inc
xor
inc
adc
add
add
jmp
mov
cli
inc
stc
stc
icebp
cmp
dec
pop
idivl
mov
add
mov
sbb
mov
leave
call
out
pusha
mov
pushf
gs
fdiv
out
inc
mov
adc
xchg
jne
mov
es
fistpl
mov
cmpsl
mov
test
cmpsl
cmp
ss
or
xchg
and
jae
push
cwtl
jns
push
jl
sbb
mov
ds
xchg
adc
xchg
nop
out
bnd
sub
test
xor
mov
leave
scas
fimull
xchg
dec
mov
dec
mov
mov
dec
add
add
mov
dec
leave
push
cmp
daa
sbb
test
push
rorb
outsl
jbe
add
jg
shl
ret
loopne
movsl
dec
add
add
rorb
mov
add
add
push
rorb
inc
adc
arpl
stos
lds
sub
add
add
subb
add
outsb
and
das
mov
cmp
add
cmp
add
add
jbe
xchg
movsl
xor
pop
cmp
or
test
rcr
mov
mov
add
pop
les
je
dec
pop
jne
mov
shrb
loop
push
clc
xor
ss
or
lret
jle
inc
sbb
les
leave
sbb
add
add
dec
jmp
mov
mov
mov
add
fisubrl
push
shrl
mov
hlt
push
sub
add
add
or
mov
cmp
movsb
fstl
mov
adc
pop
in
ret
cltd
xlat
inc
push
lock
add
add
add
add
int
shll
add
and
add
add
cltd
std
pop
xchg
dec
je
rcrl
sbb
cs
ret
mov
xlat
je
sti
inc
or
add
add
mov
jno
jae
xor
cmp
cmp
outsb
sbb
add
add
sahf
loopne
mov
enter
sub
add
add
dec
or
mov
push
mov
inc
mov
nop
mov
mov
sarl
push
mov
add
add
inc
jle
xchg
mov
repnz
pop
xor
mov
mov
test
add
mov
ret
push
mov
xchg
mov
or
sbb
pop
movsb
jne
jo
loopne
outsl
insl
mov
inc
in
ficoml
fistps
subl
mov
cmp
arpl
cmp
imulb
sbb
add
add
lahf
icebp
adc
pop
das
lcall
lea
add
mov
add
add
sbb
imul
jb
shll
jge
pop
mov
lock
fsubs
outsb
outsb
mov
jecxz
aaa
inc
push
and
pop
sti
stc
jl
adc
pop
push
pop
lods
arpl
fxch
mov
insb
mov
pop
dec
xchg
cltd
rcr
mov
movl
ret
xchg
jp
or
add
add
pusha
add
add
xor
hlt
ret
pop
lahf
je
sbb
frstor
add
add
add
add
sti
inc
sub
sub
add
add
or
add
add
adc
pop
daa
stc
outsl
adc
rolb
xor
loope
iret
dec
jne
mov
mov
cmc
dec
push
lods
jp
test
mov
xor
sub
pop
cmp
or
stos
mov
mov
shlb
outsl
sbb
jp
push
mov
inc
mov
dec
mov
les
mov
inc
pop
and
add
add
jg
jne
loopne
mov
cmp
push
gs
or
add
add
adc
mov
jl
adc
loop
dec
xchg
xchg
ret
cmp
imul
daa
nop
pop
mov
cltd
sbb
dec
ds
leave
lock
xchg
pusha
mov
mov
movsb
daa
xchg
xchg
dec
lods
aas
push
dec
lods
cltd
or
movsl
cvtps2pd
cmpsb
aas
outsb
sarl
cmp
pop
scas
and
jge
daa
arpl
mov
cltd
xor
jne
mov
les
rcll
add
add
sub
leave
xchg
clc
dec
add
add
xor
pushf
shlb
addr16
xorb
push
lock
and
add
xchg
mov
and
add
add
out
stos
leave
lods
fwait
add
add
fisttpll
adc
or
push
int
jmp
push
rclb
cmpsl
out
adc
out
jle
inc
sti
jns
add
add
mov
fildl
add
add
bound
xor
add
jne
lods
cld
call
add
sbb
ret
test
push
call
jge,pn
sub
mov
xor
call
push
out
cmp
mov
iret
outsb
and
nop
adc
es
add
add
popa
scas
jne
adc
fcmovbe
pop
lock
push
cmp
scas
and
add
add
into
or
imul
pop
popa
or
xchg
test
add
push
cmp
mov
add
xchg
add
outsl
dec
rcll
and
add
add
icebp
mov
jbe
leave
xlat
inc
icebp
paddd
mov
add
add
sbb
in
mov
sub
sub
add
add
mov
aad
mov
adc
ret
mov
add
add
push
pcmpgtw
cmp
add
add
shl
xor
add
les
adc
add
add
add
add
stos
pop
jb
test
pop
enter
cld
xchg
mov
mov
inc
push
cmp
xlat
mov
shlb
add
add
mov
or
mov
fwait
aad
in
mov
in
outsl
sahf
aad
sbb
ja
inc
xor
cmp
push
lcall
ja
js
adcb
or
icebp
stos
jns
mov
xor
ljmp
loope
fstpt
mov
adc
inc
push
pop
insb
add
add
dec
add
sub
cmp
arpl
sub
ljmp
sub
lds
inc
aad
sbb
xchg
pop
xor
movsb
inc
push
xor
inc
mov
xchg
data16
fldl
add
add
fisubl
pop
in
bound
cmpsb
add
add
add
jp
push
xlat
pop
es
mov
jecxz
mov
sar
sub
cli
daa
clc
push
aad
pop
pushf
fidivs
xor
push
lea
sbb
add
inc
aad
add
add
dec
push
nop
aam
sub
add
add
fwait
fs
addb
mov
int
or
add
add
mov
push
out
dec
pop
cmpsb
test
mov
sub
jb
in
fildll
jmp
ret
filds
jecxz
stc
jb
stos
mov
xchg
or
inc
add
add
not
aas
pushw
add
xor
mov
push
fs
or
insl
gs
push
aas
cld
dec
ficoml
inc
rolb
add
add
xchg
mov
sbb
fstps
xchg
jae
cmpsl
aam
or
add
add
std
jmp
fstps
jns
push
xchg
ss
fcmovbe
out
and
data16
sbb
add
add
popa
icebp
xchg
stos
push
lods
lock
scas
and
push
std
jecxz
push
sti
es
ret
sti
gs
xchg
pop
out
movsl
stos
mov
add
add
scas
pop
dec
out
movsl
int
xor
add
ror
sahf
pusha
mov
dec
lret
lret
cmpsl
popa
adc
xor
in
popf
cld
and
add
add
sti
sarl
call
jmp
jno
push
dec
mov
mov
add
add
lret
push
and
pop
arpl
hlt
nop
clc
shlb
xchg
mov
add
add
jecxz
dec
sbb
enter
mov
je
pop
ret
loope
aam
add
add
subl
add
mov
iret
cmpl
aad
andb
push
pop
icebp
mov
add
add
scas
or
add
add
shl
loopne
mov
aad
cltd
aam
ja
dec
sti
adc
lods
cwtl
or
inc
mov
dec
mov
lods
imull
es
imul
push
loop
add
add
add
inc
lods
push
popa
adc
sub
add
add
lret
mov
fists
jo
xchg
add
add
dec
mov
data16
sub
loopne
push
test
add
mov
add
add
add
fisubrs
loope
jmp
dec
xlat
adc
xchg
sub
mov
aaa
adc
add
add
push
loopne
mov
mov
divl
ficoms
push
negl
sbb
cmp
leave
int
or
add
mov
int3
mov
out
and
push
outsl
jmp
stos
sbb
insb
add
add
jle
cmp
ss
xor
xchg
movsl
add
add
add
add
add
push
sbb
add
add
mov
repnz
and
add
add
and
fwait
sahf
mov
cld
and
call
shlb
ljmp
cmp
or
mov
jge
cmp
lds
sbb
les
pop
pop
xchg
push
jl
mov
insl
lret
inc
ret
stos
mov
lds
jne
cmp
add
inc
xor
mov
int3
sbb
fidivs
add
add
cmc
sbb
add
add
adc
add
add
cli
xor
add
add
xor
mov
out
cmp
add
decb
cwtl
mov
inc
add
add
aaa
test
imul
add
add
add
or
push
pushf
mov
xchg
les
cmp
lahf
xchg
pusha
mov
mov
mov
add
add
add
aaa
sub
aad
sbbb
mov
jge
test
push
je
je
xchg
add
xor
add
add
adc
pop
or
add
add
adc
add
add
pop
add
add
add
jg
icebp
aaa
mov
ret
sbb
push
sbb
and
leave
sahf
in
dec
xchg
cltd
pusha
mov
cmpsb
addl
add
add
clc
jl
sbb
aaa
fwait
std
mov
addr16
divl
pop
lret
inc
inc
and
or
sbb
sub
add
add
push
sub
es
lods
cmp
add
add
mov
js
mov
pop
fmul
aam
js
cmp
pushf
mov
sub
sbb
jg
cmp
dec
fistpl
in
je
push
stos
pop
js
fcoms
fs
dec
mov
add
add
add
cmc
in
subb
pushl
ds
addr16
loope
cmp
xchg
inc
cmp
lods
ret
jbe
xorb
mov
xchg
mov
xor
movsl
jp
pusha
add
add
or
mov
push
jmp
mov
out
push
and
inc
sub
mov
push
sbb
loope
jp
xlat
stos
sbb
sahf
fisttps
add
xchg
lods
adc
adc
add
add
or
add
add
jbe
ss
pop
push
lcall
call
mov
jns
fistpll
jbe
cli
mov
sbb
push
insl
je
les
lcall
fidivrs
cmpl
arpl
stos
pop
push
dec
rorl
mov
sbb
or
outsb
push
pop
lods
je
int3
testl
jno
cltd
push
int3
mov
mov
xor
out
dec
xor
pop
je
push
jge
mov
adc
add
jb
mov
scas
les
mov
add
add
repnz
xor
add
add
fisubs
add
add
mov
ja
push
jmp
and
arpl
cmpsb
add
inc
popa
popa
mov
mov
xchg
push
test
fmuls
inc
mov
lahf
add
les
movsbl
or
add
add
loopne
dec
stc
xchg
xor
adc
pop
ja
mov
movsl
mov
aam
cmp
xor
push
repz
add
add
xor
push
stos
dec
add
add
xchg
xor
sar
add
mov
xchg
push
leave
jp
fdiv
fadd
es
mov
mov
add
sbb
subb
call
xchg
addr16
negl
and
add
add
flds
jecxz
fsubrl
out
je
add
add
mov
inc
das
sbb
dec
mov
pop
mov
xlat
sbbb
in
test
pop
das
es
adc
in
sbb
in
xor
jmp
pop
test
rcl
lea
add
out
pop
frstor
ret
lods
gs
cld
jmp
pop
fldcw
lods
push
aaa
add
mov
into
outsl
push
sbb
jo
cs
add
add
mov
mov
rolb
add
add
test
add
add
add
add
lea
xchg
xor
add
add
xlat
lock
inc
add
add
fwait
jmp
mov
cmp
push
lret
cmp
lods
sub
add
xchg
push
dec
stos
jns
pop
push
mov
push
fwait
sbb
dec
sbb
cmp
ret
dec
mov
rcl
in
pop
mov
dec
mov
fwait
bound
xchg
cmp
xchg
jb
pop
xor
mov
inc
add
add
fmul
pop
rcrb
cmpsl
jmp
enter
mov
jo
push
sti
ljmp
add
imul
add
mov
lods
jb
and
add
add
loop
jae
int3
outsb
in
dec
repnz
dec
mov
mov
xorl
add
add
or
add
add
and
ja
mov
ret
mov
fwait
insb
mov
loop
add
inc
outsb
adc
mov
out
out
inc
sbbl
fiadds
or
dec
mov
clc
iret
jmp
pop
loope
or
daa
mov
lods
adc
stc
and
test
bound
mov
mov
mov
jne
addr16
test
mov
add
scas
lods
mov
mov
push
pop
movsl
divl
ret
data16
mov
out
mov
lret
jno
test
insl
mov
lret
sbb
xchg
mov
pop
pushf
dec
mov
add
add
sbbl
pusha
add
add
inc
mov
push
lcall
add
scas
rcr
push
sub
pop
pop
ss
cmp
jl
popf
adc
cmp
adc
add
add
ret
aaa
fiadds
xchg
jmp
cmp
sbb
and
arpl
xchg
add
add
add
loopne,pt
stos
out
mov
imul
push
add
xor
cmp
add
xor
sahf
sub
mov
add
add
in
ficoml
mov
mov
add
add
ds
cmp
jbe
stos
or
add
add
push
mov
out
pop
test
fmuls
fst
in
mov
mov
pop
or
add
add
xor
and
jmp
xchg
jo
add
jecxz
mov
sbb
fwait
jbe
cmp
add
jecxz
aad
jecxz
xchg
push
mov
in
jmp
push
mov
add
add
add
cld
or
xchg
mov
add
add
fnsave
icebp
pop
test
xorl
add
add
add
add
sbb
pop
imul
leave
inc
ja
mov
ds
or
add
add
sub
add
add
adcl
or
out
add
add
sub
fists
add
add
lock
add
add
jbe
cmpsb
negb
push
cld
and
add
add
jl
sbb
push
pop
inc
or
sbb
mov
or
into
push
lds
pop
jp
mov
loopne
test
sub
add
add
add
push
hlt
pop
add
sbb
mov
rclb
add
int3
mov
add
push
dec
xchg
jmp
cmpsl
fwait
mov
adc
inc
into
aam
jge
into
aas
and
cmpsb
adc
repnz
mov
icebp
pusha
add
add
xor
jge
xchg
sahf
and
lds
pop
in
into
push
loop
shl
movsl
inc
jmp
add
add
lods
into
outsb
mov
or
add
add
mov
es
mov
scas
mov
or
add
add
push
test
pop
int
mov
idivl
dec
enter
or
sub
aas
xorl
mov
add
lods
cmpsl
pushf
push
movsl
loope
imul
add
add
mov
gs
outsb
ja
cmp
jmp
add
add
lds
mov
and
add
add
mov
sbb
add
add
movsb
pop
cmp
push
es
xor
cwtl
push
add
insb
add
add
push
or
jl
mov
add
les
fisttps
push
adc
lock
or
imul
in
out
dec
mov
mov
mov
add
add
stos
mov
jg
mov
add
fnstcw
add
pop
push
mov
pushl
adc
and
inc
jmp
stc
aad
jae
push
mov
xor
inc
mov
xchg
shll
std
fidivrs
xorl
pop
mov
aas
addb
cld
xchg
and
add
pop
jmp
push
addl
rcl
cmp
adcb
mov
popf
in
lods
ss
sub
push
push
xor
push
bound
jno
aam
inc
leave
in
push
pusha
mov
call
jle
stos
or
add
add
add
sbb
mov
fisttpll
dec
mov
or
cmp
scas
pop
and
aas
psubusw
add
add
dec
push
xor
aaa
xchg
inc
shrb
xchg
adc
mov
loop
mov
out
add
std
mov
pop
sub
add
add
dec
shl
mov
mov
push
loopne
xchg
mov
cmpsb
mov
add
add
add
add
xchg
add
add
adc
adc
mov
pop
mov
mov
add
inc
rorl
or
dec
mov
add
add
add
out
hlt
shlb
sbb
orb
add
mov
jle
sbb
addr16
sbb
mov
fwait
pop
imul
mov
test
and
fbstp
pop
cmpsb
outsb
cmp
andb
xchg
mov
fidivrl
and
das
add
add
add
mov
xchg
add
fidivrl
pop
push
in
cltd
or
pop
int3
shlb
push
mov
int
dec
mov
add
mov
add
xchg
cmp
push
fnstcw
jae
sbb
insb
add
add
daa
int3
bound
jmp
lahf
popf
into
sbb
mov
stos
popa
sahf
aas
mov
add
xor
roll
lods
pop
jge
pop
lds
fisttps
mov
sub
add
ds
andl
cmp
add
add
sbb
add
add
testb
std
cld
xor
xor
pop
iret
mov
movsb
sub
add
dec
and
into
dec
mov
lcall
add
add
adc
jo
popa
or
add
add
pop
das
enter
cmp
sub
add
add
addl
mov
shll
add
add
dec
push
fisttpl
stc
addr16
rcrl
sub
cmovo
mov
jo
sbb
add
cwtl
sub
fdivr
out
movb
insl
fiadds
add
js
mov
add
into
mov
fnstenv
xchg
inc
mov
cli
ds
loopne
lahf
imul
adc
inc
mov
cmpsl
inc
or
std
loop
data16
add
add
add
push
adc
add
sbb
dec
addl
lahf
push
in
repnz
add
add
sbb
aas
fprem1
adc
or
add
add
sbb
jecxz
and
add
add
add
add
mov
cmpsb
clc
roll
mov
add
add
xchg
pop
rcrl
add
push
fcmovnbe
in
repz
xor
pusha
mov
pop
mov
add
add
push
sbbl
jnp
xor
pop
push
repnz
add
add
push
adc
push
mov
daa
jne
lahf
movsb
push
out
xor
cmp
inc
xchg
add
add
fistpll
in
ja
cmp
xchg
jb
pop
dec
add
add
popa
sahf
test
scas
rcrb
cwtd
js
shll
pop
cmp
cmpsl
cmp
push
addl
enter
and
lea
cmc
xchg
cli
out
hlt
not
and
mov
add
add
cmp
popl
mov
sti
loopne
mov
add
or
mov
mov
ds
aaa
cmc
ss
adc
movsb
icebp
sbb
adc
push
scas
das
inc
jne
ss
mov
push
mov
sti
stc
daa
nop
dec
add
add
in
imul
add
sub
add
add
mov
bound
add
std
test
pop
repnz
xor
cmpsb
int3
mov
jge
mov
repnz
rcrb
mov
jle
mov
jle
adc
loope
mov
xchg
std
jl
adc
mov
imul
sub
mov
or
jae
xchg
sub
mov
mov
lahf
lahf
mov
aaa
icebp
fmull
test
mov
cwtl
and
in
movsl
popf
hlt
lods
sub
or
ficoms
inc
mov
test
into
jno
insb
mov
ja
xchg
pop
adc
lcall
add
add
jnp
mov
mov
dec
or
add
add
dec
add
add
jmp
jb
and
add
add
push
decl
add
add
jmp
or
mov
add
add
add
rcll
pop
out
push
inc
adc
xchg
movsl
sub
add
add
add
mov
add
add
mov
enter
in
jno
jo
or
adc
dec
inc
jb
adc
fcoms
xchg
inc
add
rcrl
sbb
mov
push
lods
addr16
call
test
add
add
jo
dec
int3
xchg
lahf
pop
test
inc
add
add
adc
mov
in
mov
inc
add
add
mov
clc
jno
pop
mov
fildll
add
push
sbb
gs
leave
clc
ljmp
add
inc
mov
sbb
sbb
lret
pop
push
xchg
out
pop
xor
add
clc
and
gs
or
add
add
sti
sbb
mov
jge
idiv
ja
pusha
add
add
stos
popa
dec
and
xor
repnz
pop
rolb
add
add
pop
xor
jp
nop
jnp
dec
mov
fbld
out
fidivrs
jb
stos
adcb
mov
aas
inc
sub
add
add
into
mov
add
mov
add
test
ret
cld
insb
mov
or
adc
in
adc
add
cmp
pushf
sbb
or
fmull
push
dec
add
add
sub
nop
inc
add
add
push
bound
add
add
pop
lcall
jl
js
mov
bswap
clc
cmp
ds
pop
sahf
icebp
xor
fdivrl
push
mov
loope
push
daa
xor
mov
ss
cmp
movsb
fisubrs
add
add
je
add
dec
lret
push
dec
fdivrl
aaa
into
inc
in
xchg
xor
add
add
add
push
dec
inc
adc
xchg
daa
xchg
and
xor
pop
fisubs
xchg
xchg
push
adc
xor
fnstcw
imul
shll
xchg
push
mov
add
add
xchg
and
sbb
mov
cmpsl
mov
scas
icebp
pop
pushf
aas
add
xor
add
rclb
pusha
mov
cltd
nop
lret
add
les
pop
rcr
sahf
xorb
push
stos
inc
or
aaa
jbe
jno
sbb
insl
dec
mov
xchg
stos
call
test
mov
add
imul
pop
ret
mov
mov
inc
sub
add
add
cli
and
add
add
add
cmpsb
dec
aad
xchg
out
pop
in
hlt
jo
or
sbbb
add
jle
scas
cld
dec
pmulhuw
xor
call
push
test
xor
dec
add
add
into
int
pop
out
inc
mov
loop
hlt
jb
xchg
jae
ror
pop
sub
test
imul
stc
sahf
mov
test
in
pop
inc
add
add
jbe
inc
mov
pop
cmp
mov
repnz
lret
mulb
mov
test
jb
add
adc
dec
mov
je
popf
dec
shll
xchg
jmp
mov
jns
loop
ss
add
leave
sar
push
icebp
dec
dec
add
add
mov
and
inc
scas
sub
out
data16
fstp
jp
add
add
add
mov
add
push
mov
add
add
shlw
push
push
mov
pop
iret
cmp
mov
add
mov
xor
inc
pop
clc
fldt
mov
cmpb
push
and
imul
gs
mov
dec
loope
jne
sub
pop
sbb
or
roll
cltd
mov
mov
xchg
xor
add
push
dec
scas
push
rclb
sbb
add
add
nop
push
iret
mov
inc
push
in
and
fbstp
ret
rorl
dec
mov
test
cmp
and
add
add
mov
pop
sub
insb
add
add
and
pop
ret
sbb
mov
or
dec
mov
inc
add
add
pop
nop
cs
sub
nop
int
xchg
pop
mov
adc
dec
mov
sbb
int
sti
call
sti
push
pop
inc
sti
dec
mov
add
pop
lds
add
add
adc
jmp
enter
add
add
fstpl
add
add
cmp
add
iret
fwait
test
and
add
add
stc
fcom
sbb
addl
xor
xlat
cmpsl
push
stos
sub
add
add
xorl
xchg
xor
pop
sar
add
repnz
push
sub
mov
scas
sub
pop
pop
pxor
insb
add
add
fldcw
dec
add
add
fisubl
add
add
push
int3
push
dec
xor
push
xor
fbstp
sbb
sbb
sbb
arpl
stos
jmp
insb
mov
pop
ja
lods
add
add
add
stos
pop
mov
cmc
mov
and
push
sbbl
add
add
inc
sbb
lods
push
aas
loopne
mov
push
pop
lahf
pop
mov
enter
mov
push
mov
and
add
add
pop
sub
add
add
leave
dec
insl
fdivl
add
add
popf
pop
loop
or
sub
add
sub
jge
pop
add
add
add
cmp
stos
mov
push
dec
arpl
cmp
add
add
pop
insl
hlt
shll
aam
xchg
inc
in
dec
pop
cmp
sub
mov
xchg
cmp
pop
cmp
out
maxps
filds
cmp
mov
add
add
lods
or
inc
stos
cltd
lock
int3
pop
lods
mov
sti
leave
pop
mov
or
add
add
jo
das
add
mov
test
add
add
push
stos
cltd
inc
mov
mov
cli
scas
test
addr16
int
jae
test
push
fcmovnbe
popa
and
mov
cmp
out
mov
add
dec
pop
cmp
cwtl
mov
mov
adc
ret
adc
mov
aad
mov
ljmp
mov
push
adc
pushf
popf
xor
test
sbb
lcall
adc
sti
cmp
add
add
ljmp
cmp
push
mov
and
repz
add
add
mov
xchg
lahf
scas
dec
sbb
sub
add
add
add
add
in
stc
push
mov
xchg
lds
mov
add
add
fdivr
mov
jno
pop
xlat
shr
or
mov
stos
jmp
test
mov
add
add
rcrb
in
cmp
scas
mov
add
add
push
and
xchg
fwait
inc
add
add
sarb
sub
push
fistl
rcll
lds
push
imul
add
add
sub
shrb
lods
arpl
xchg
lea
icebp
lcall
or
add
add
ret
pop
pop
push
adc
adc
andb
add
pop
lret
daa
adc
clc
gs
cmp
pop
lods
outsb
dec
jl
xor
sub
pop
dec
pushf
ficompl
mov
das
sbb
add
xorb
mov
punpcklwd
cmp
jnp
push
rol
lea
dec
sti
fcmovb
in
andl
add
cmp
add
push
shlb
jp
mov
lret
inc
fmull
push
or
add
add
xlat
mov
inc
int
xchg
rolb
add
add
mov
pop
lcall
rol
addb
add
jnp
fsubrl
out
rclb
mov
mov
mov
daa
cmp
adc
mov
iret
sbb
add
add
xchg
clc
mov
mov
jmp
and
cmpsl
xchg
add
loope
aam
jnp
push
arpl
sahf
ficoml
mov
xchg
dec
out
scas
push
cmpsl
aam
xchg
jae
addr16
clc
cwtl
test
lds
add
add
cmp
ss
adc
lret
fwait
stos
and
mov
xor
xchg
fldcw
add
test
dec
mov
cwtl
xor
jg
sub
and
add
add
push
adc
mov
aas
jmp
bound
dec
xchg
xchg
cli
sarb
add
add
jns
call
std
push
arpl
add
add
pop
andl
fcmovne
sahf
xor
orl
pop
sub
add
add
add
add
mov
in
popl
jmp
jnp
or
stos
es
pop
xchg
push
mov
mov
cmc
push
stos
push
mov
decl
add
add
push
lods
xchg
push
mov
hlt
or
dec
sbb
cmc
inc
push
jmp
pusha
mov
sahf
jecxz
das
rcrl
jo
sub
pop
movsb
test
add
push
clc
xchg
mov
insl
inc
cmpsl
subl
dec
mov
outsl
andl
cmp
je
xchg
cmp
fwait
sub
add
add
sbbl
and
cmp
jne
add
add
ficoml
jno
mov
cmp
popf
out
dec
in
arpl
cli
pop
jge
sub
pusha
mov
hlt
dec
inc
mov
pop
shll
daa
int
inc
mov
sar
mov
add
arpl
add
add
lcall
outsb
sub
test
xor
shlb
add
int
mov
lods
or
add
add
add
into
sahf
int
pop
xlat
bound
jbe
or
mov
and
mov
jle
inc
mov
or
int
popa
xor
adc
or
push
repnz
inc
cwtl
pop
mov
lea
cli
mov
or
add
add
add
das
push
pusha
add
add
lcall
adc
jg
mov
pop
mov
or
add
add
and
add
lret
inc
add
add
stc
jp
fmulp
cmp
ds
mov
add
cmp
add
sbb
lret
not
loop
les
mov
add
mov
sub
aas
shll
pop
cmp
sbb
jns
insb
mov
ret
pop
shlb
inc
int
sub
add
add
stc
ljmp
add
outsl
cs
lret
mov
add
roll
pop
push
adc
push
fldl
fildl
inc
mov
jne
out
ret
jl
mov
add
fisttps
icebp
cmp
mov
arpl
lcall
daa
cmpsb
xlat
pop
and
imul
add
add
or
xchg
loopne
or
add
inc
jbe
add
add
and
ret
fiadds
stos
out
mov
sbb
add
ljmp
jns
fildll
mov
cmp
mov
add
test
icebp
imul
xor
adc
add
pop
inc
mov
push
jne
push
mov
fyl2x
dec
add
add
sbb
cmpsl
or
mov
push
stos
ljmp
add
subb
lods
stos
jnp
insl
sbb
popf
mov
iret
insl
cmpl
std
das
mov
andb
mov
rcr
pop
push
mov
iret
sbb
sub
add
add
mul
movsb
je
dec
mov
jb
lret
cmc
push
push
cmp
orl
sbb
shlb
out
mov
cmp
cmc
pop
lcall
push
das
push
or
repnz
shll
add
das
dec
add
add
testb
stc
mov
jg
pop
mov
test
clc
jle
ficompl
add
add
fistl
cwtl
push
loope
jmp
add
outsl
push
lock
and
shrb
xor
loopne
xor
or
sub
xchg
and
repz
adc
push
outsb
ljmp
add
in
loopne
adc
sahf
bound
add
scas
sbbl
dec
cmp
inc
popf
jmp
xor
add
add
add
add
jns
mov
mov
mov
mov
clc
ljmp
pop
inc
shll
add
add
jecxz
adc
inc
into
mov
add
aam
mov
mov
stc
inc
add
addr16
mov
push
lcall
sahf
cwtl
dec
js
imulb
xor
leave
cmp
mov
or
popf
inc
mov
mov
push
mov
xlat
mov
add
fwait
jge
cmpsb
pop
dec
add
add
jnp
pop
jns
pop
es
icebp
jo
cwtl
pop
cmp
push
jbe
ljmp
arpl
lcall
movsb
das
imul
std
lret
jne
sti
call
mov
idivl
loope
add
or
add
and
jbe
add
add
add
out
sbb
lods
adc
dec
pop
cmp
add
shll
pop
add
add
add
add
add
in
scas
repz
pop
adc
hlt
sahf
repz
xchg
pop
cmc
mov
mov
and
add
lcall
add
add
daa
and
add
jmp
lea
add
mov
jb
les
outsb
sbbb
pusha
mov
mov
mov
adcl
sub
inc
and
dec
push
lods
push
sbb
shll
cmpsl
test
jmp
add
add
xchg
inc
mov
mov
add
add
notl
lret
loopne
lods
sub
add
add
out
mov
inc
sbb
add
add
lret
pop
cmp
jmp
jbe
pop
xor
fwait
xor
int3
stc
sbb
mov
into
sbb
add
add
test
pop
fnstsw
push
jmp
xor
hlt
mov
xchg
push
push
fbstp
xchg
out
sub
push
inc
lret
fnsave
pushf
jno
sub
xchg
pushf
push
daa
mov
xor
pusha
add
add
lcall
mov
and
movsl
mov
add
add
mov
inc
or
addl
add
pop
jge
cmp
add
loopne
or
mov
cli
inc
add
pop
mov
cmpsl
dec
mov
xchg
js
push
jns
pop
lods
inc
bound
arpl
dec
or
xchg
jbe
int3
xor
xchg
mov
inc
adc
add
mov
bound
inc
push
inc
mov
mov
movsb
fsubrs
loope
inc
mov
xchg
mov
push
mov
or
add
add
add
add
jbe
fimull
pop
cmp
lret
xchg
dec
js
cmp
mov
test
test
add
adc
pop
test
add
add
xor
in
outsb
insb
add
add
repnz
pop
sub
outsl
or
aam
out
dec
sbb
lret
mov
jge
js
fabs
cmp
out
je
cmpsl
sbb
outsl
into
pusha
mov
ss
add
add
add
add
pop
sub
pop
pop
or
mov
add
add
out
loopne
rorl
insl
or
mov
sti
fstpt
xor
int
cmc
test
and
add
adc
add
add
out
sbb
cmp
test
jns
dec
mov
and
aam
fcomps
jmp
aad
pop
add
or
sbb
fidivl
jnp
out
std
jbe
into
js
pop
inc
lahf
xor
cli
add
add
add
mov
xor
mov
int3
out
and
add
or
test
mov
jb
dec
mov
mov
in
xchg
push
and
scas
aas
adc
pop
aad
add
add
add
dec
cli
pushf
jmp
inc
mov
mov
js
lock
dec
add
add
sub
rcl
imul
add
add
cwtl
jle
sub
pop
je
sub
add
add
mov
in
mov
repz
lret
aam
inc
sbb
js
ss
aaa
push
sub
cmpsb
je
mov
test
repz
pop
call
sbb
xchg
aam
push
jns
mov
test
sub
repz
mov
xchg
or
add
add
mov
mov
nop
xchg
jp
jne
cmp
mov
add
add
cmpsb
movsb
xor
outsl
xor
pop
dec
aad
out
add
add
movsb
mov
add
add
add
add
mov
mov
add
add
push
pushf
std
rcrb
xchg
lods
jbe
cwtl
jb
xchg
pop
pop
mov
add
add
loope
jnp
sahf
insl
shrb
mov
xchg
push
dec
test
in
jb
movsl
and
add
add
jecxz
loopne
jne
mov
orb
lahf
aas
jne
gs
cs
add
add
add
in
arpl
push
sbb
mov
cmp
xor
pop
pop
jns
fisubl
add
add
add
add
push
fildl
sbb
out
icebp
and
hlt
rcrl
or
add
add
add
sbb
xchg
movsl
dec
int
mov
xchg
push
mov
outsb
xchg
lds
jne
test
call
add
andl
out
ljmp
dec
push
out
js
sub
mov
imul
sub
pop
inc
and
cmpl
pop
inc
imul
jmp
test
in
pop
inc
lods
add
add
add
movsb
sub
add
add
add
add
xorb
stos
out
add
add
add
xor
mov
popf
mov
aaa
ds
mov
call
or
mov
es
loopne
pushf
nop
push
loopne
ja
movsb
mov
scas
mov
daa
push
add
enter
jne
adc
and
add
add
out
loop
xchg
aam
sbb
shll
mov
fisttpl
mov
iret
dec
fs
jmp
add
add
cltd
xchg
cmp
or
add
add
movsl
pop
and
lods
mov
inc
mov
hlt
pop
imul
and
add
add
pop
cmp
icebp
xor
jne
or
dec
stc
mov
repnz
mov
sub
push
mov
mov
call
and
adc
add
add
or
mov
jne
mov
mov
in
enter
rcrb
cmpsl
andb
pop
rorb
xchg
push
xchg
fsubrl
add
add
xor
sub
mov
fwait
xchg
cmp
aas
clc
cmp
add
cmc
pop
push
int
jbe,pt
in
andl
sbb
push
cmp
jne
addl
xchg
mov
jge
movsl
cs
daa
mov
sbb
sbbb
cmc
fwait
mov
mov
or
stos
xor
dec
sub
and
add
add
dec
adc
add
add
add
mov
and
sbb
enter
xchg
sub
add
add
aas
sub
adc
out
mov
addr16
or
add
add
fcomp
jl
xchg
mov
lret
add
add
or
add
add
sub
add
add
test
mov
mul
xor
add
add
shr
mov
mov
add
add
add
add
sbb
add
add
dec
and
xchg
cmc
in
jmp
add
sub
ja
sti
aad
clc
aas
in
imul
cwtl
popa
jae
fwait
into
in
sti
test
daa
jle
loop
jno
mov
arpl
dec
mov
mov
add
add
jl
and
shr
test
fstpt
lret
push
xchg
std
loop
dec
xor
add
add
push
clc
out
inc
test
cmp
add
sub
cmpsb
mov
stc
or
cmp
das
test
add
add
mov
mov
mulb
test
sbb
adc
jb
xchg
mov
mov
insb
mov
cmp
popf
xor
push
mov
test
push
xlat
add
add
add
arpl
int3
gs
outsb
movsb
lcall
jl
les
mov
sub
add
add
push
hlt
outsl
adc
rcrl
cmp
add
add
mov
ret
lret
lds
lret
pop
lds
add
sbb
loop
int3
lods
imul
lock
imul
add
add
mov
sub
dec
inc
adc
xor
sbb
pusha
mov
sbb
daa
arpl
push
cld
xor
xor
pushf
aam
add
add
add
sbb
add
add
mov
cltd
cmpsb
outsb
jno
sti
or
int3
mov
cmp
sbb
cmc
mov
shll
rcll
add
imul
hlt
pop
xchg
xchg
mov
add
add
cwtl
jns
arpl
add
add
sub
test
sub
add
add
xchg
sahf
push
inc
add
add
test
std
addr16
loop
out
xchg
pusha
add
add
test
jae
mov
mov
fistpl
or
add
add
xchg
mov
movsb
test
sbb
data16
add
add
lret
add
add
loopne
mov
add
add
add
add
jle
push
das
outsl
fadd
sub
mov
add
add
sub
pop
xor
mov
add
add
xchg
or
add
add
sbb
imul
add
sahf
xor
cmpsl
rorb
jb
mov
dec
cwtl
push
mov
cmpsb
lock
jno
push
pop
aad
add
add
add
mov
into
stos
mov
cmp
mov
mov
jg
imul
fldcw
mov
mov
arpl
outsb
mov
add
sti
adc
ds
mov
add
add
add
cltd
ja
and
add
add
sbb
mov
inc
fadd
out
jl
pop
push
sub
add
add
add
cltd
push
inc
add
mov
stos
or
testb
push
rcrl
jecxz
lds
add
push
mov
push
rolb
into
fldt
mov
call
inc
add
add
cmp
xchg
dec
add
add
lcall
andl
mov
cmc
pop
fs
aaa
xchg
mov
mov
mov
jl
std
jge
push
aad
les
and
aad
and
outsb
std
mov
sbb
add
add
push
test
cmp
add
fnstsw
shll
leave
pop
mov
add
add
mov
repz
hlt
scas
push
dec
xorl
pop
std
lcall
push
in
or
lahf
xchg
sbb
andb
adc
and
add
sahf
clc
pextrw
jmp
push
cmp
cwtl
jb
rcll
hlt
mov
lcall
pop
daa
fwait
mov
je
sahf
pushf
outsl
dec
add
add
ffreep
pop
in
mov
jne
sub
pop
mov
dec
mov
rorb
jno
test
cli
popa
dec
dec
cld
add
and
add
add
sbb
dec
add
add
cmp
sbb
mov
jnp
enter
xor
add
add
sbb
scas
inc
adc
mov
les
clc
out
mov
icebp
dec
lea
lret
mov
imul
or
sti
out
es
jb
add
jl
inc
in
sub
jae
xchg
rorb
mov
fldcw
jecxz
add
add
in
lock
push
mov
add
or
and
cmp
xor
fs
sub
xchg
data16
mov
inc
mov
aad
jmp
sub
add
add
mov
movsl
out
lahf
adc
mov
push
add
add
cmpsb
into
repz
and
add
add
add
push
std
adc
add
adc
pop
stos
int3
mov
and
ror
mov
add
cmpsl
daa
add
aam
mov
imul
add
add
xchg
pushf
sbb
mov
inc
push
mov
mov
and
jmp
xchg
add
add
add
pop
xchg
sub
add
add
add
add
xchg
add
add
out
lcall
pop
sub
add
loopne
mov
push
cs
sub
inc
mov
sbb
jmp
std
mov
push
add
test
les
mov
add
lahf
pop
add
fisttps
fsubp
out
dec
adcb
inc
mov
add
ja
jnp
mov
cmp
fwait
add
inc
cmp
xchg
dec
xchg
xor
xchg
iret
in
push
jge,pt
sub
mov
xchg
ret
xchg
les
jno
xchg
push
or
add
add
pop
adc
jle
aas
lret
sbb
mov
test
add
mov
push
cwtl
sub
filds
add
add
dec
pop
lods
fst
mov
add
add
cwtl
cmpsb
add
add
add
jl
ds
jae
dec
das
cmp
push
jle
out
test
sbbb
cmp
sbb
add
add
inc
push
imul
sub
or
out
mov
std
stos
add
int
sub
add
add
adc
or
add
add
push
cli
sbb
cmp
add
lods
into
pop
jp
iret
adc
das
rolb
sbb
jae
pop
dec
add
add
jmp
push
arpl
pop
les
add
dec
bound
insb
add
add
dec
call
sbb
fidivrs
stos
inc
aaa
xchg
and
fcmovne
test
cs
fsubp
jg
and
fsubl
fstl
mov
cmpsl
pop
data16
add
fwait
xor
in
jg
jne
and
add
add
mov
sti
push
shll
shll
sbb
inc
lret
mov
in
scas
inc
mov
push
adcb
or
sbb
mov
lret
mov
pop
fwait
add
push
mov
out
cs
divb
mov
xchg
xchg
cmp
or
in
pusha
add
add
enter
adcl
pop
bnd
aad
add
adcl
xstore-rng
cmpsl
xchg
jno
in
rorb
sarb
sub
dec
adc
cmp
cmp
push
cwtl
js
add
add
pusha
add
add
mov
pop
sbb
add
jle
cmp
lahf
push
push
xlat
inc
cltd
sbb
push
add
add
add
pop
outsb
dec
cs
or
or
adc
pop
mov
movsl
enter
pushf
sbb
ja
jp
insb
mov
leave
icebp
adc
out
xchg
int3
push
sub
add
add
jl
sub
scas
mov
orb
cmp
rcr
loopne
dec
push
dec
mov
into
loope
dec
push
jae
dec
jp
test
movsb
hlt
or
mov
add
add
jne
bound
aaa
lcall
mov
test
pop
dec
pop
jmp
push
pusha
add
add
adc
xchg
jge
mov
add
inc
lock
sbb
mov
ret
enter
cmp
xchg
repz
ret
sbb
adc
mov
js
jmp
mov
mov
mov
cmpl
jbe
push
push
gs
inc
imul
inc
push
jb
mov
push
popa
es
push
daa
aaa
cmp
stos
mov
sub
pop
xchg
lret
add
add
aam
and
cmp
mov
jmp
aaa
add
paddsb
xor
pop
nop
or
test
loop
mov
add
add
push
imul
mov
sahf
test
and
pop
inc
cpuid
mov
add
jp
xchg
sahf
inc
add
add
adc
add
add
filds
lods
add
int
jae
inc
add
add
fsub
mov
fldt
add
nop
pop
sub
xor
add
xor
imul
add
add
add
mov
jp
adc
out
out
inc
or
add
add
mov
mov
add
sbb
out
les
and
push
data16
inc
sbb
add
add
mov
mov
push
movsl
mov
loopne
dec
mov
and
add
add
lea
fcoms
sahf
int
xchg
stos
rorb
add
lea
scas
neg
popa
jns
addr16
out
xor
push
push
in
xor
push
in
mov
mov
dec
sbb
cli
fidivl
add
sahf
and
add
add
rclb
mov
cmpb
nop
push
pushf
fistpl
mov
sub
into
mov
in
xchg
mov
mov
mov
into
gs
jb
std
daa
or
push
jmp
push
mov
sub
add
add
das
dec
or
jae
add
add
test
and
cltd
mov
rclb
fcomip
adc
lret
js
negl
jecxz
jmp
mov
lods
rorb
add
add
data16
repz
daa
xor
inc
mov
daa
jmp
mov
add
add
xchg
test
mov
add
add
xchg
shr
adc
pop
push
in
aam
add
xor
mov
out
add
add
adc
add
jl
pop
dec
fwait
xlat
repz
in
mov
pushf
pop
xchg
rorl
stos
dec
fnsave
enter
add
add
or
je
lds
add
sbb
inc
jo
mov
inc
add
add
pop
mov
repz
dec
jbe
repnz
loope
scas
es
add
pop
ret
add
cmpsb
adc
in
sub
add
add
jle
shrl
pop
sub
add
add
js
jae
test
add
add
cmp
out
add
add
add
push
mov
or
mov
loope
std
cmc
fiadds
add
pop
push
fwait
ds
clc
stc
fdivrs
add
dec
add
add
or
gs
push
mov
ljmp
fstps
inc
fwait
mov
push
xor
or
mov
add
mov
mov
or
push
and
add
add
shrl
push
mov
inc
aaa
decb
lret
sbb
fldenv
mov
add
add
inc
out
fwait
or
gs
sub
jp
inc
add
add
or
jbe
sub
add
add
inc
xor
les
and
mov
xlat
mov
repnz
xchg
add
add
add
cmp
out
mov
sahf
pop
rolb
add
pop
pop
jb
or
cmp
add
xchg
jnp
test
and
add
add
push
or
test
and
daa
cs
mov
xchg
xor
rclb
fidivs
pop
jae
adc
sbb
sub
lahf
inc
je
inc
mov
push
shlb
add
in
mov
cltd
stos
or
jnp
scas
cld
sbb
stos
cmp
jb
add
add
dec
cmpl
jmp
push
repnz
xor
bound
and
aaa
popf
repnz
cmc
cmpsb
leave
stos
jle
inc
icebp
xchg
nop
cwtl
push
pop
mov
sbb
and
add
add
mov
cmp
lock
fisttpl
mov
dec
pop
sub
pusha
mov
das
adc
sarb
jecxz
push
sub
addr16
cmpsb
aas
cmp
loope
jns
sbb
rolb
add
mov
mov
lahf
xor
add
mov
into
push
push
inc
xchg
xchg
sub
dec
mov
out
nop
rcll
mov
add
push
lds
les
sub
leave
inc
lcall
ficoml
in
insb
add
add
xor
test
xchg
add
add
add
push
out
mov
mov
loope
pushf
mov
pop
lods
push
pop
mov
sub
add
add
daa
cmp
add
add
lods
add
pop
mov
hlt
add
adc
sub
xchg
jl
test
addl
sbb
pop
nop
test
add
adc
xchg
mov
std
sbb
popa
sbb
add
add
inc
lods
sbbb
lahf
popw
sbb
daa
adc
pushf
xchg
loop
popl
rorb
inc
sub
fsubrs
add
add
dec
mov
popa
xchg
fdivrl
add
add
sbbb
add
add
and
and
push
push
stc
pusha
mov
in
push
mov
mov
cmc
stc
sti
inc
and
add
add
imul
ja
aaa
cmp
hlt
movsb
flds
mov
xchg
pop
xor
repnz
out
and
mov
aam
jae
jno
jae
push
ja
add
add
dec
outsl
std
lret
shll
or
push
dec
mov
dec
add
add
push
pop
stc
and
add
jnp
sub
inc
pop
add
scas
dec
add
add
add
in
pcmpgtb
add
add
add
add
dec
mov
repnz
and
add
add
jnp
jns
push
fcompl
int
shrl
mov
add
add
add
out
sub
pop
ds
and
add
add
mov
jae
mov
mov
or
mov
aad
rcrl
shll
mov
out
push
push
jg
cmp
jg
mov
addl
add
add
and
add
add
fstl
imul
fstps
pop
flds
int3
pop
inc
fdivrp
xchg
sbb
jo
hlt
cld
jecxz
add
add
inc
mov
or
add
add
lahf
xor
jmp
dec
dec
iret
xor
mov
cli
shrl
roll
push
jmp
mov
arpl
clc
aas
adc
sti
test
jnp
add
add
add
imulb
fisubl
and
add
add
cmp
push
stos
ljmp
cmpsl
in
sbb
arpl
xchg
mov
aad
cmc
in
nop
mov
les
in
loop
negl
imul
fistps
aaa
or
adc
dec
mov
sbb
push
aam
jbe
add
add
add
adc
mov
fsubrs
shrl
into
jg
outsl
lods
rcrb
mov
cmpsb
sub
mov
aaa
movsb
inc
jns
call
mov
in
mov
xorb
mov
iretw
fstl
inc
add
add
push
lock
mov
out
sub
mov
lcall
scas
jg
adc
fs
mov
cmp
repz
add
divb
mov
out
and
add
add
scas
mov
inc
ficoms
add
pushf
leave
cmpsl
testb
inc
add
add
nop
inc
sub
add
add
dec
mov
mov
imul
inc
cmp
sbb
clc
adc
ja
jae
jns
into
xlat
sahf
call
lea
mov
addb
add
cs
sbb
add
add
xor
mov
mov
ljmp
insb
mov
jmp
dec
sar
jbe
jb
imul
fisttpl
in
rdmsr
fisubrs
lock
add
add
and
mov
or
mov
les
nop
xor
stos
inc
add
add
jp
gs
cld
sahf
aaa
sahf
push
das
nop
icebp
arpl
movsl
sub
aad
outsl
iret
adc
pop
cld
xor
pop
int
adc
popa
add
add
add
mov
fs
jp
ss
dec
adc
sub
sbb
negb
loop
pop
mov
arpl
les
lahf
adc
cmpsb
cltd
icebp
lds
test
jno
push
xchg
cmp
add
add
add
sub
jle
fsubp
jl
clc
jmp
sub
push
les
sbb
cwtl
xlat
pop
fdivl
inc
mov
in
mov
sub
add
add
lds
cmp
mov
scas
bound
and
gs
in
or
insb
add
add
shrl
xlat
imul
lret
xor
add
add
add
add
repz
add
faddl
add
add
xlat
adc
push
std
aaa
cltd
add
add
sub
cmp
cltd
cmpsb
jae
xchg
cli
movsb
sub
add
add
mov
cmp
sbb
in
pop
sahf
scas
aam
mov
xor
jmp
shlb
clc
and
add
add
mov
adc
push
pop
xor
mov
testl
xchg
icebp
adc
enter
mov
gs
and
add
add
lods
pushf
stc
stc
test
sbb
add
add
inc
mov
and
repz
ds
pop
mov
fsubl
xchg
std
jg
xchg
mov
mov
add
add
fxch
or
add
add
adcb
xor
inc
xchg
cmp
cmp
shrb
addr16
mov
cmpsb
sub
add
add
xor
and
add
add
jnp
add
add
pop
or
cmp
sarl
stos
insb
mov
push
cmp
rep
inc
mov
mov
inc
xchg
cld
stos
jle
es
outsl
adc
xchg
inc
repnz
jmp
scas
or
mov
or
sti
sub
and
sbb
sahf
xlat
pusha
mov
ret
fwait
or
add
jle
mov
add
stc
in
push
mov
xchg
addr16
in
in
es
add
add
sub
add
add
mov
hlt
and
pop
lea
mov
cmp
lcall
mov
adc
inc
inc
sahf
lahf
and
ret
push
or
add
mov
add
enter
orb
cmpsl
mov
andl
icebp
stos
mov
xlat
imul
jecxz
out
adc
pop
cmc
sahf
fsubp
push
pop
movsl
sbb
and
add
add
and
pop
fwait
cld
adc
add
add
subb
lret
dec
ret
add
add
add
add
ds
out
xchg
sub
scas
add
add
add
add
adc
cwtl
movsl
add
sahf
xor
mov
or
sbb
jp
push
sbb
xchg
pop
cmpsb
xchg
outsb
fwait
nop
das
fldl
cltd
mov
add
push
subl
xchg
fdivr
insl
stos
subl
dec
mov
test
add
add
push
jnp
and
stos
or
mov
fnstsw
jnp
lret
xchg
mov
pop
mov
dec
xchg
outsl
xorl
daa
pushf
jnp
rcl
mov
add
add
data16
loop
mov
orb
add
loop
rcr
test
rorb
add
bound
push
sub
repz
add
add
adc
push
insl
mov
add
fists
movsl
jecxz
nop
aad
jb
popf
mov
xchg
test
pushf
mov
inc
add
add
dec
xorb
dec
dec
xchg
pop
test
repnz
pusha
mov
imul
xor
push
orl
sub
mov
andb
in
mov
ret
pop
and
in
cld
xchg
mov
jmp
pop
fidivrl
scas
out
add
mov
add
add
lea
or
add
add
add
bswap
jg
cmp
scas
cmp
popa
jecxz
aam
add
add
orb
call
mov
push
bound
add
cmp
lods
inc
mov
jecxz
in
sbb
movlhps
and
jbe
lea
ljmp
stos
lahf
popa
movl
test
into
mull
arpl
loope
dec
mov
out
imul
out
bound
sbb
lret
add
add
add
imul
test
cmpsl
fcoml
pop
add
add
add
push
ja
fsubrl
scas
xor
add
rcl
lret
xor
fstps
into
enter
sub
add
pop
sub
fldl2e
inc
push
orl
mov
xor
sbb
pop
push
pop
out
lods
aad
or
add
add
fcoml
add
add
cmpsl
loop
cmp
xlat
in
cmc
or
add
add
lcall
add
repz
fstl
stc
add
add
mov
cltd
push
addl
cli
sub
pop
jnp
and
inc
mov
fisubrs
pop
inc
mov
or
add
add
add
popa
mov
rorb
sbbb
pop
divb
pop
in
fisttpl
add
add
cmp
and
add
add
add
fdivrp
mov
sbb
out
je
lods
mov
adc
mov
or
adc
xchg
add
add
lcall
add
scas
or
in
jb,pt
mov
pop
leave
and
jecxz
in
mov
jne
ret
movsb
xlat
fdivp
lds
add
add
lock
lods
cmp
and
add
add
outsl
jb
hlt
push
cmpl
add
add
xchg
cmpsb
clc
dec
mov
mov
data16
hlt
arpl
jl
pop
mov
popa
ret
sbb
mov
int
repnz
insl
mov
insb
add
add
mov
cmpsb
stos
hlt
jecxz
jbe
jnp
ds
lret
push
xor
andb
mov
inc
inc
fidivl
hlt
jge
std
out
pop
inc
cli
ljmp
daa
lea
dec
imul
xor
inc
mov
push
lods
jae
dec
push
xchg
pop
gs
icebp
sub
cwtl
daa
xchg
in
and
add
add
int3
pop
sub
test
cmp
cmpsb
test
add
add
out
cli
mov
add
add
insb
mov
test
jae
lods
and
jns
sub
shlb
testb
push
ficoml
add
aas
inc
sbb
testb
pop
sti
ljmp
into
and
jae
mov
stos
xlat
pop
push
xor
mov
add
add
sub
std
test
add
add
in
rolb
add
add
pop
sub
lea
add
add
xor
ret
cmpsb
cli
or
mov
mov
mov
test
cs
scas
jnp
pushf
shr
mov
and
add
add
add
int3
movsb
movb
loope
pop
or
or
inc
cmpsb
std
pop
mov
cmp
xchg
lret
repnz
pop
pop
adc
dec
repnz
addr16
inc
jge
outsb
test
push
in
fimull
in
lret
mov
add
add
std
adc
push
js
push
mov
pop
add
inc
xchg
or
cmp
fsubl
xorb
jge
insb
add
add
sbb
nop
inc
add
add
add
cmp
adc
into
mov
mov
mov
pop
ficoml
out
fwait
fs
and
and
fistps
pop
xor
mov
jmp
add
add
test
jg
jle
pushl
pop
inc
mov
dec
mov
sbb
mov
cmp
nop
mov
xor
add
add
leave
dec
sbb
roll
lods
sbb
sub
aaa
rcr
sbb
sahf
test
cmp
add
fwait
cli
xor
xchg
bound
push
jo
mov
pop
stos
and
leave
dec
add
and
scas
iret
std
sub
movsb
adc
dec
ret
and
xlat
push
mov
pop
inc
mov
add
add
cltd
cwtl
xchg
and
fdiv
outsb
sbb
into
std
and
add
add
arpl
aas
stos
inc
mov
and
dec
int3
mov
add
push
xor
adc
add
add
sub
add
add
mov
lods
stc
jp
jbe
mov
mov
dec
ja
js
jns
cmp
sub
xchg
xor
add
add
inc
mov
cmpsb
mov
frstor
add
add
add
add
inc
cwtl
mov
mov
pushf
push
xchg
in
cmp
sahf
into
and
add
add
xchg
fistl
cmp
sbb
out
pop
or
movsl
sysret
mov
das
mov
jl
repnz
cmp
jnp
in
movsb
je
lea
rorb
lret
mov
out
mov
mov
into
lock
leave
mov
pop
arpl
div
fwait
ja
mov
or
lods
and
pop
adc
pop
fcoms
inc
scas
fwait
mov
add
xor
les
add
stos
popa
fistpll
sub
out
add
add
adc
xchg
pusha
mov
test
add
add
mul
add
add
add
xor
cmpsl
aad
mov
orb
add
ret
mov
lods
push
xchg
pop
pushf
xor
xor
mov
xor
leave
inc
push
call
ficoml
aad
inc
add
add
lods
popf
loop
pop
or
adc
add
add
mov
mov
push
jb
scas
sbbl
test
add
add
in
mov
aas
lock
call
jb
iret
and
dec
lret
xchg
lcall
or
add
add
clc
dec
xchg
mov
inc
lret
lret
test
out
jb
xchg
mov
mov
pop
or
subb
push
call
mov
je
push
adc
mov
xchg
mov
lock
add
add
add
add
mov
and
push
inc
rdtsc
jp
dec
mov
push
pop
ds
pusha
mov
scas
std
mov
add
test
roll
mulb
pusha
mov
vmovaps
stos
mov
add
iret
jo
mov
mov
add
cmp
mov
pop
or
add
add
cmpsl
ljmp
into
aaa
jae
mov
fiadds
iret
jbe
in
mov
mov
add
push
mov
mov
insl
in
pop
sbb
adc
push
jg
jecxz
mov
in
int
add
add
jns
cmp
push
lods
divl
mov
or
dec
and
stc
nop
xor
sbb
xor
and
movl
popl
lds
adc
ror
cmp
mov
sub
add
add
fmull
mov
add
add
insb
add
add
loopne
lcall
xchg
and
add
pushf
insl
fistpl
jnp
stc
insb
add
add
call
xor
idiv
call
cmp
popa
iret
outsl
mov
dec
add
add
push
push
lods
ffree
inc
icebp
mov
mov
xchg
nop
fcomps
mov
add
or
fcmovnu
movsl
aad
fnsave
jnp
mov
lds
sahf
out
add
fwait
xor
mov
int3
sbb
iret
adc
mov
add
lea
dec
push
push
inc
add
add
xor
jl
jle
or
add
add
mov
jae
movsb
push
cmpsl
sub
add
add
popa
sub
inc
sbb
add
sti
shr
pop
push
fistpl
dec
mov
add
mov
outsl
sahf
fsub
out
mov
out
mov
mull
dec
mov
dec
mov
loop
int
pop
loopne
loopne
test
outsb
jo
mov
mov
pusha
mov
inc
stos
repz
test
add
add
add
mov
sti
andb
add
inc
imul
lret
loope
sahf
fistpll
daa
out
enter
les
pop
dec
pop
lock
pop
cmp
add
lods
jge
loopne
jmp
test
enter
fcompl
daa
jmp
movsl
lds
add
add
push
xchg
fcompl
int3
out
loope
mov
lret
mov
add
add
mov
mov
lods
scas
push
loope
add
add
es
jmp
or
fwait
loopne
pop
ja
cmp
push
push
xchg
aaa
mov
ljmp
add
add
sub
add
add
insl
mov
in
and
enter
push
sub
fidivrl
out
in
sub
jge
jp
push
mov
xchg
enter
and
push
add
add
add
push
fs
xchg
outsl
inc
unpckhps
sub
adc
int3
leave
mov
call
popf
clc
or
pop
fmull
add
add
testb
adc
les
add
test
xchg
fwait
sub
add
add
mov
and
std
jns
aas
lret
push
aaa
sahf
jl
push
xchg
fwait
push
dec
fwait
cld
inc
push
pop
icebp
inc
adc
add
add
movl
insb
add
add
pop
jle
jg
hlt
dec
mov
arpl
adc
fdivrs
jnp
pop
sub
add
add
adc
shl
xor
pop
mov
xchg
adc
cli
add
orl
add
mov
filds
push
js
adc
sbb
add
add
test
xor
fisubrs
mov
add
add
pop
lods
int
mov
xor
lea
shlb
je
xlat
xor
add
add
add
add
add
add
inc
add
add
pop
loope
fistps
add
add
add
shll
push
pop
pop
mov
xchg
jnp
mov
xchg
jbe
dec
sbb
add
add
xor
mov
popa
movsl
pop
fnclex
pop
into
mov
xchg
cmp
and
add
add
sbb
inc
leave
mov
orl
nop
cmp
xchg
in
les
mov
test
shr
pop
add
std
fsubl
adc
fimull
add
leave
stc
rorb
add
negl
lcall
mov
xchg
cmp
loop
inc
add
add
add
sub
in
lds
fs
leave
aas
jle
cwtl
add
add
push
inc
ds
mov
enter
mov
push
xor
dec
xor
cs
rcl
mov
ds
xchg
test
xor
fwait
in
aad
mov
sahf
mov
pop
xor
fwait
clc
nop
stc
cmp
arpl
add
mov
mov
test
mov
mov
cmp
add
movsb
lods
xchg
mov
in
call
pop
jl
add
add
fldenv
mov
mov
add
push
or
enter
sbb
sbb
and
add
add
nop
dec
xchg
test
dec
jo
mov
jp
out
int3
int
mov
add
icebp
shlb
out
sub
add
add
faddl
je
cltd
int3
cmc
lods
scas
mov
add
add
add
out
sbb
loop
pop
lea
mov
lods
dec
icebp
cltd
int
xchg
jo
cmp
fnsave
lea
outsl
jg
lock
add
add
fmuls
inc
adc
xor
cltd
fsubl
mov
or
mov
pop
mov
inc
pop
call
add
push
add
add
cmp
mov
sbb
pop
or
mov
cli
fwait
repz
xlat
hlt
mov
sbb
push
nop
xchg
push
and
add
add
loop
dec
mov
mov
cmpsb
enter
mov
mov
stos
push
mov
mov
inc
or
add
add
xchg
jecxz
sti
xchg
or
pop
mov
adc
imul
sbb
mov
mov
loope
sbb
inc
mov
pop
inc
jle
lahf
icebp
pop
scas
jae
out
cmpsl
mov
mov
pop
jns,pn
mov
mov
xchg
call
cmpsb
mov
repnz
dec
es
jmp
iret
sbb
mov
lds
push
rcl
adc
insl
inc
outsb
mov
lods
mov
mov
int
xor
sub
add
add
add
add
cwtl
out
ret
mov
add
fdivrl
or
xlat
addb
fadds
add
add
mov
fbld
out
cmp
mov
add
fildl
add
add
imul
cmp
sbb
scas
imul
adc
mov
cmc
or
or
jg
mov
sahf
daa
pop
test
mov
add
push
movsl
push
sti
cmp
add
add
add
adc
mov
mov
or
imul
iret
xchg
xchg
filds
jne
icebp
insb
add
add
ret
mov
stos
test
fcomps
test
add
add
add
sbb
cmp
inc
mov
mov
std
loopne
mov
or
fstl
add
test
sbb
call
add
or
rcl
cltd
xchg
outsb
sub
cld
push
insb
mov
int
adc
add
add
add
add
scas
or
add
add
cs
cmp
cmc
mov
sarb
fxtract
adc
popa
jae
mov
push
into
enter
pushf
dec
sub
and
das
stc
sub
out
mov
cmp
stos
lea
add
add
ror
imul
and
sbb
clc
ret
mov
mov
add
push
dec
xchg
xor
cmpsb
push
scas
icebp
inc
nop
ja
in
jbe
sbb
add
add
das
adc
jne
xchg
sbb
dec
adc
cmp
xchg
mov
fucomi
fcompl
test
add
mov
cmp
leave
push
mov
shll
iret
stos
sub
es
add
add
dec
sti
jl
pop
and
pusha
add
add
jnp
enter
cmp
or
pop
sub
jg
jbe
cwtl
push
cmc
mov
sub
jg
xchg
sbb
add
mov
adc
pop
push
ret
lock
int
scas
nop
ret
push
andl
mov
add
loope
rorb
xor
push
or
xchg
adc
jge
fildll
sbb
add
add
xor
jmp
jecxz
cli
xchg
dec
jno
sub
mov
xor
loopne
in
mov
subb
xor
movl
hlt
inc
mov
leave
or
jecxz
cmc
pop
stos
mov
add
cltd
inc
and
aas
js
or
sbb
das
push
jp
adc
daa
sahf
test
push
popa
xchg
popa
iret
push
push
xor
les
add
add
loope
mov
addr16
add
cli
and
cltd
mov
dec
xchg
sub
add
add
mov
pop
adc
xlat
icebp
xchg
push
repnz
hlt
repnz
or
mov
enter
add
cmp
mov
adc
jae
cmpl
shl
stos
mov
xchg
pop
jp
cwtl
xchg
sub
pop
and
add
add
movsb
jbe
pop
and
add
jl
mov
repz
pusha
add
add
sbb
mov
pop
push
push
mov
add
arpl
jo
lods
adc
cli
cltd
fisubrl
rorb
add
add
cmp
mov
jmp
lods
xchg
add
add
mov
stc
push
xchg
icebp
adc
outsb
pop
out
xchg
sub
push
sub
add
stos
clc
clc
vsqrtss
lods
inc
xchg
pop
loop
add
sbb
pusha
mov
mov
mov
je
outsb
xor
mov
cmpl
lret
fxch
movsl
imul
lea
jns
xchg
sti
out
sbb
lock
cmp
jo
and
push
xchg
pop
add
mov
cs
mov
push
fs
xchg
pop
add
dec
fildl
std
sub
mov
aam
lock
sti
mov
xor
add
add
fcompl
add
add
out
add
dec
add
add
mov
pop
lods
sbb
arpl
add
add
sbb
xor
push
sahf
fists
or
mov
jmp
add
and
inc
xor
adc
jmp
push
les
inc
dec
dec
iret
push
xchg
pushf
rorl
add
arpl
popa
jo
leave
insl
lock
adc
add
add
jmp
mov
mov
mov
add
in
ds
ret
mov
icebp
adc
adc
jle
add
add
fisubrs
sub
mov
std
shll
inc
ror
push
mov
adc
mov
arpl
cltd
xchg
adc
test
cmp
jg
dec
add
add
ds
mov
cmp
add
or
ror
add
sbb
and
add
add
ret
iret
cmp
idivb
in
lret
inc
mov
shr
imul
push
mov
loope
cmp
cmp
data16
outsl
inc
mov
sahf
jmp
dec
out
loopw
lcall
inc
mov
inc
add
add
xchg
sub
add
add
es
je
lahf
pusha
add
add
push
dec
add
add
imul
add
add
mov
and
add
add
sbb
dec
repz
cmp
jge
mov
xlat
dec
add
add
scas
pop
inc
test
xor
pop
mov
push
in
and
jge
test
push
push
jecxz
pop
xchg
in
repnz
out
add
add
add
outsl
cmp
add
push
decl
pop
das
push
std
push
insl
in
xor
imul
sahf
lods
cmp
test
add
add
mov
rclb
aaa
mov
out
test
in
out
mov
pop
cwtl
shlb
loope
push
iret
add
add
add
fildll
mov
jb
leave
jmp
add
pop
lret
mov
leave
enter
xor
imul
fcomps
and
mov
dec
mov
sti
aam
xor
stos
or
add
and
add
add
fiadds
gs
add
ret
lcall
add
pop
daa
insl
pushf
cltd
xor
xchg
ret
cmpsb
inc
pop
or
mov
test
push
mov
fbstp
lret
add
inc
fld
add
add
dec
enter
loopne
orb
sub
outsl
sbb
aad
or
push
mov
ret
repz
decb
cmp
adc
add
insb
add
add
repnz
mov
jmp
cltd
cmp
jo
insl
xchg
sub
pop
and
in
clc
xor
insl
stos
jmp
out
sub
add
add
sar
call
inc
scas
in
shr
push
inc
push
test
test
fwait
and
lds
out
insl
pop
cmp
add
add
cmp
rcl
push
ljmp
or
call
add
add
popf
jb
and
add
add
add
add
test
stos
lock
jne
push
jp
test
mov
dec
add
add
lds
mov
and
add
add
dec
ret
adc
add
adc
xor
add
jl
jge
xor
add
add
cmpsb
mov
sub
insl
mov
xor
pushl
sbb
nop
xor
dec
out
and
add
add
add
addr16
outsl
enter
xor
add
fmull
int3
or
add
add
dec
jne
and
add
add
mov
mov
push
in
jo
cltd
adc
add
dec
out
xchg
es
cmpsl
jl
add
add
nop
loopne
cmpsl
sub
jb
sub
add
add
sti
notl
cmp
shr
push
inc
add
add
sbb
pop
negl
add
add
add
fwait
jge
cs
or
fldt
add
add
mov
test
xor
pop
sub
mov
fidivrs
cld
adc
push
scas
lock
sahf
adc
mov
nop
jnp
pop
or
add
rcl
add
add
out
arpl
pop
sub
xor
add
add
add
and
add
add
add
adc
add
lret
aas
cs
mov
sub
test
out
mov
inc
icebp
dec
mov
mov
scas
jno
pusha
add
add
mov
in
dec
mov
mov
and
add
add
arpl
push
jne
out
xchg
sub
add
add
add
daa
xorl
inc
movsb
or
mov
sub
dec
inc
daa
loopne
hlt
push
fisubrl
add
add
mov
das
loop
xchg
mov
add
test
jne
and
in
xchg
and
out
mov
mov
out
mov
shll
pop
cmp
add
es
add
add
test
bound
dec
adc
push
adc
jbe
pop
jae
idivb
fwait
jecxz
clc
imul
add
leave
sbb
test
shll
push
inc
mov
ror
cwtl
bound
jns
cmp
add
add
stos
int3
imul
test
dec
add
insl
fisubs
mov
fwait
add
add
push
cltd
inc
xor
jae
pop
aad
mov
lods
pop
cmp
or
sub
adc
shr
subl
xchg
inc
repnz
jecxz
in
push
sub
add
inc
add
add
lret
into
xor
add
pop
dec
cmp
icebp
fstl
jmp
or
sbb
mov
push
fcomip
pop
push
ljmp
add
add
add
mov
test
fwait
and
add
mov
add
add
mov
fidivrl
stc
fcomps
dec
cmp
inc
fs
inc
pop
add
add
sub
sub
stos
mov
arpl
fsub
push
ja
in
cmpsl
and
add
add
iret
xchg
adc
cmp
xchg
ljmp
cmp
leave
dec
jo
dec
mov
in
fdivrl
pop
mov
push
or
mov
imul
pop
mov
iret
push
cmp
jle
mov
sub
add
add
adc
adc
cmp
les
fwait
addr16
sbb
lea
aas
xchg
das
ret
in
and
add
add
add
add
jbe
sarb
je
sub
add
add
cld
hlt
aaa
ret
call
out
ds
idivl
mov
outsb
loopne
pusha
add
add
dec
fldt
cmp
fidivl
xchg
inc
add
add
sub
add
xchg
jl
lods
fs
fldt
xchg
cmpb
or
add
add
add
cwtl
ret
mov
pop
out
fbstp
dec
mov
add
out
or
scas
pop
outsl
shll
xchg
clc
das
fdivl
out
sbb
xchg
pushf
adc
sbb
clc
icebp
out
loope
cs
negl
sbb
add
add
add
mov
iret
or
add
add
divb
mov
cs
mov
jl
mov
and
loopne
cli
cmc
enter
adc
adc
cmpsb
call
add
add
lahf
xchg
jbe
and
push
cwtl
out
jp
cmp
inc
fstps
add
add
dec
orb
add
add
add
sbb
insb
add
add
jecxz
mov
xor
mov
ljmp
lea
das
jnp
cltd
pop
rclb
lea
adc
stos
and
sbb
fs
lock
push
inc
negb
xor
gs
std
lods
in
jle
or
daa
out
inc
mov
sub
add
add
js
xlat
shll
add
add
sub
cli
jg
cmp
fcompl
add
xchg
mov
test
mov
inc
loope
clc
lcall
scas
cmp
popa
mov
xor
add
add
rcrl
pop
adc
loopne
xorb
jp
loop
ficoml
xchg
push
mov
add
add
add
call
dec
mov
clc
inc
add
add
repz
inc
mov
inc
add
fidivrl
test
or
add
add
mov
sub
cmc
push
sahf
inc
add
add
ljmp
lods
fisubrl
add
shll
test
outsl
adcl
pop
mov
jae
mov
outsb
fcmovb
roll
mov
or
add
add
xor
cmpl
sbb
sbbb
pop
mov
add
add
jae
mov
inc
push
xchg
inc
mov
xchg
xorps
xchg
mov
add
add
js
add
add
pop
fcmove
jo
sbb
mov
pop
scas
dec
add
add
bound
fwait
lcall
xorl
cmpsl
rorb
pop
pop
sub
add
add
add
add
add
mov
add
add
test
shll
flds
cmc
popa
test
adc
cmp
add
add
sbb
pop
fnsave
push
mov
xor
and
cmp
add
add
test
mov
adc
xchg
stos
ja
lcall
out
push
ret
push
mov
add
add
push
movsb
cmovnp
das
call
jmp
mov
divl
sbb
aam
dec
add
lahf
or
pusha
add
add
ja
or
add
add
jmp
add
adc
in
mov
bound
pusha
mov
jo
ss
test
mov
pop
test
leave
adc
add
add
add
mov
mov
aad
mov
and
jmp
nop
lds
dec
add
add
jl
pop
pop
xor
fimull
mov
xchg
pusha
add
add
pop
iret
sub
add
add
dec
cmp
adcl
lcall
imul
cmp
add
add
add
or
mov
add
icebp
push
cmpsl
dec
ficompl
cmc
inc
ret
movsb
xchg
add
add
adc
push
and
mov
mov
movsl
xchg
and
mov
stc
xchg
sub
add
add
adc
xchg
adc
add
inc
jmp
jmp
add
add
sbb
hlt
stos
mov
xor
pop
js
inc
insl
daa
xchg
aam
sbb
fdivl
mov
mov
sbb
push
dec
mov
push
adc
push
mov
in
add
add
mul
adc
mov
xor
es
or
std
mov
mov
mov
insb
mov
and
add
add
es
jae
jae
pop
adc
sahf
clc
dec
add
add
scas
and
lea
leave
add
test
stos
inc
dec
push
xor
inc
dec
or
mov
push
add
add
divl
pop
sbbb
mov
and
add
add
sub
mov
cltd
jno
ss
in
push
pop
leave
jl
aam
and
push
aam
jl
push
cmp
stc
test
sbb
add
add
lock
popf
push
mov
aam
cwtl
mov
add
dec
cmp
pop
daa
mov
call
add
ds
dec
mov
stos
ds
xor
int
scas
xor
fisttps
mov
adc
mov
add
add
dec
push
pop
into
dec
or
add
add
xorb
test
insl
in
inc
loop
add
push
xor
call
dec
adc
mov
mov
cmpsl
in
ja
mov
rcrl
add
out
push
cmc
adcb
sub
negl
cmc
push
dec
arpl
push
gs
xor
out
inc
jl
loopne
stos
adcl
sbb
shrl
add
add
sti
jg
push
outsl
adc
popa
pop
pop
cltd
out
jnp
jp
inc
mov
fsubl
in
pop
dec
into
xor
pop
cmc
bound
push
inc
fnstenv
push
xchg
push
mov
add
add
cli
xchg
adc
add
add
jne
adc
ja
dec
add
add
jne
jne
pop
shlb
pop
xchg
cltd
movsb
imul
xor
add
add
fldenv
jmp
test
jle
pop
stc
cmp
add
inc
outsl
adc
mov
mov
mov
pop
in
pop
xor
adcb
sbb
inc
fdiv
aas
xchg
xchg
lahf
imul
push
test
out
stc
dec
mov
xor
xchg
pop
dec
mov
cmp
mov
stc
lods
mov
dec
add
add
add
push
pop
pushf
push
mov
lods
dec
and
add
add
xchg
adc
mov
push
sarl
add
sbbb
and
insb
mov
add
add
popa
out
add
cmp
inc
push
xor
outsb
inc
push
add
je
sub
pop
add
push
or
in
aam
aaa
in
push
cmp
dec
add
add
sbb
icebp
data16
inc
jg
push
mov
add
add
push
aam
les
aam
pop
inc
push
popf
repnz
add
add
movsb
cmp
js
push
int
add
add
sbbl
add
add
iret
ds
cmc
jae
mov
mov
repz
mov
fistps
ds
mov
cmp
cmpsl
pop
addr16
add
add
add
test
fisubl
dec
add
add
mov
push
hlt
mov
sti
push
data16
rol
add
xlat
lock
jns
cltd
jbe
mov
stos
pop
add
push
sbb
sbb
push
inc
int
add
add
ret
in
test
mov
mov
mov
popa
mov
mov
add
scas
bound
lret
or
add
add
cli
mov
fs
leave
fwait
scas
mov
call
cmp
sub
add
mov
mov
or
clc
mov
popf
jmp
popa
adc
test
add
adc
cmp
das
les
lods
rol
inc
mov
xor
mov
or
add
mov
add
add
xchg
push
stc
jno
and
add
add
sbb
jl
pop
push
out
pop
in
push
xchg
jae
pop
xchg
cmp
pop
mov
movsb
cld
dec
xchg
mov
dec
das
imul
arpl
mov
mov
mov
into
inc
add
add
sbb
jae
jmp
and
fnsave
xchg
push
xchg
sarl
int
xlat
dec
sbb
scas
or
add
add
insl
mov
cwtl
addr16
repnz
jo
popa
inc
jmp
add
sbb
rep
add
add
mov
fsts
mov
push
icebp
sub
mov
xorl
cmp
dec
mov
sbb
jbe
mov
push
lahf
jo
test
add
add
add
add
sbb
add
xor
icebp
sbb
mov
or
fs
sti
cmpsl
adc
xchg
rolb
cmpl
xor
add
add
es
into
stc
sbb
fstpt
inc
or
add
add
mov
outsb
aas
cmp
call
fisttps
xchg
sbb
lahf
dec
jge
repnz
xlat
mov
sti
jecxz
gs
daa
or
add
add
add
xchg
or
add
std
sarb
xchg
mov
inc
add
add
icebp
sbb
cld
jmp
mov
mov
mov
xor
adcl
shl
int
mov
add
movsl
pop
aad
jns
mov
add
ds
int
call
inc
add
add
xchg
or
and
mov
jle
and
push
scas
jns
push
push
jg
pushf
sbb
pop
jne
dec
into
cmpsl
mov
pop
ds
pop
or
inc
ja
insl
int
push
pop
lcall
mov
jge
xchg
pop
notb
xchg
dec
ja
jae
xchg
adc
or
cmpsb
xchg
xlat
jne
popf
jge
mov
out
mov
jae
add
add
push
fs
shll
mov
fwait
mov
std
leave
mov
rorl
mov
mov
vmread
aaa
cmp
add
mov
jno
mov
outsl
xor
add
add
sub
add
add
push
pusha
add
add
fucom
add
push
ss
mov
mov
xor
pop
rorb
mov
add
add
pop
test
pop
inc
push
lret
adc
fwait
aaa
push
or
ret
and
data16
and
mov
lret
out
fwait
stc
testb
mov
icebp
ror
movsl
lahf
and
add
add
sub
push
nop
scas
sbb
push
cmp
dec
add
add
std
fstl
push
or
add
adc
dec
sar
scas
dec
insb
mov
icebp
inc
mov
call
dec
mov
js
lcall
sub
pop
jae
int3
outsl
test
imul
dec
mov
aaa
jecxz
inc
lret
out
test
xchg
xchg
xchg
add
addr16
stos
push
pop
data16
fsubl
xchg
or
repz
outsb
xchg
xor
jle
testb
fsubrs
xchg
adc
dec
mov
and
lret
sbb
add
andb
add
cmc
int3
loope
mov
cmp
aad
mov
xchg
mov
mov
rorb
in
pop
mov
push
mov
add
add
jg
mov
stos
fwait
dec
and
aam
fstp
push
std
ret
mulb
add
add
divl
xor
das
jl
loopne
mov
cld
or
sub
fsubs
add
add
lcall
fwait
insb
add
add
mov
imul
xchg
out
lahf
inc
pop
add
mov
or
cmp
jnp
xchg
jb
clc
pop
gs
shl
lret
frstor
add
add
lcall
inc
lret
in
cld
repz
lret
pop
sbb
add
rcrl
mov
push
mov
add
add
out
icebp
jbe
xchg
xchg
adc
xor
insl
cmpsl
lea
add
add
pop
loope
push
jno
mov
or
add
add
mov
ljmp
inc
jae
adc
clc
loopne
pop
push
sbb
add
add
fsts
scas
data16
sbb
into
add
jp
push
adc
and
add
add
out
out
mov
js
ss
sub
add
add
cmpsb
nop
dec
push
mov
mov
movsb
inc
ljmp
add
std
add
pushf
out
xor
mov
inc
sbb
mov
sbb
mov
pop
mul
loopne
ja
movsb
outsl
push
std
add
js
fcmovnb
ja
push
es
pop
es
mov
pop
xchg
or
add
add
push
ret
mov
fwait
sbb
insl
xor
mov
push
xor
add
add
mov
cwtl
cmp
mov
add
add
adc
test
mov
pop
mov
mov
push
push
jb
dec
push
inc
fsubrp
test
add
ror
push
sub
xor
dec
mov
and
xchg
ret
test
lods
cmc
lea
add
jo
repz
jg
push
lret
negb
jmp
sbb
cld
jnp
rcrb
test
mov
sti
sub
add
add
lods
pop
xchg
and
test
adc
fdivs
loopne
mov
add
add
add
add
jbe
stos
cmp
add
add
leave
movl
mov
mov
pop
xor
add
add
imul
sbb
test
push
adc
add
add
add
rolb
lods
pop
inc
adc
addr16
xor
xchg
jae
cmp
ds
or
int3
add
sbb
add
add
xor
add
add
inc
mov
inc
mov
pop
lds
pop
idivb
filds
push
lock
adc
sub
cmp
pop
jno
jnp
mov
mov
dec
rep
das
mov
out
mov
xchg
mov
xlat
add
in
xadd
lret
test
adc
lock
mov
jne
sub
add
add
mov
fxch
clc
push
nop
jne
scas
cmpsl
mov
mov
sbb
scas
jns
in
xchg
shll
or
jns
add
fdiv
cmp
sbb
mov
push
xor
mov
xchg
mov
stos
cmp
cmp
and
push
lcall
add
add
sbb
xor
add
add
jmp
es
mov
mov
lock
icebp
mov
repnz
dec
iret
flds
dec
mov
and
add
test
and
loop
mov
mov
sub
scas
daa
jl
xor
mov
adc
adc
sub
jmp
sahf
ficoms
es
stos
push
loopne
push
es
and
add
leave
pushf
dec
mov
and
add
add
in
push
jne
out
pop
and
add
jge
sti
test
loop
mov
in
and
add
add
aam
sub
sbb
dec
dec
negb
pop
fnstenv
inc
mov
add
add
les
add
add
mov
add
mov
mull
xor
push
scas
adc
mov
gs
int
cli
mov
in
pop
flds
add
add
int3
push
mov
add
add
xchg
mov
ljmp
sbb
ret
out
xor
mov
addr16
fucomi
loop
add
mov
xchg
decl
and
add
add
and
add
add
out
out
add
das
call
cmpsb
imul
xchg
js
sub
add
add
push
xchg
jbe
dec
mull
add
add
xchg
xchg
ljmp
inc
das
adc
add
and
popa
jmp
or
add
add
mov
cs
sub
jns
clc
aad
hlt
fwait
sub
xchg
orl
add
add
or
add
add
pop
cmp
push
mov
sub
mov
orl
dec
out
mov
xor
add
add
add
add
negb
lds
les
add
add
repz
shl
sbb
push
mov
sub
ret
cld
rcrb
aad
test
das
sub
add
add
pop
stos
pop
insb
add
add
adc
mov
mov
lock
push
add
fistl
push
mov
addr16
dec
sarb
add
add
cmp
pop
mov
sahf
mov
mov
sub
dec
std
stc
mov
movsl
test
xchg
int3
inc
and
mov
je
jb
add
add
jbe
dec
test
jae
fistpl
adc
test
add
add
sub
add
add
inc
mov
jp
pop
push
aad
loope
push
test
iret
cmpb
loop
cmp
dec
mov
je
and
je
inc
fdivrs
call
rcll
pop
inc
xchg
lret
pop
mov
xor
cmc
or
add
add
fdivs
loopne
out
fdiv
je
push
cmp
jae
sbb
movsb
xor
aas
cmp
inc
push
out
sbb
jp
add
add
push
mov
xchg
pop
pusha
mov
xchg
ret
and
mov
cmc
push
xor
imulb
add
add
jae
push
mov
cmp
add
add
cmc
xchg
dec
jecxz
or
je
add
add
rcrl
pop
and
dec
addr16
push
sahf
dec
mov
shll
push
lret
dec
sbbl
xor
out
cs
pop
xor
out
cld
jbe
mov
push
fisubl
lret
aaa
xor
daa
mov
mov
popf
call
out
lea
add
add
aam
xchg
ret
and
adc
add
add
add
xchg
sbb
add
mov
test
sbb
push
cmp
das
pop
pop
repz
mov
mov
jle
mov
add
es
pusha
add
add
ljmp
xchg
idivb
add
add
xorb
scas
inc
dec
add
add
jno
add
push
sbb
decb
add
add
and
jns
cmp
cmp
pop
xchg
cmpsb
sub
dec
add
add
fnstenv
add
push
inc
xorl
icebp
pushf
dec
lock
jno
pop
push
add
add
add
jmp
mov
add
and
psllw
cwtl
imul
add
add
add
and
outsb
jae
sbb
popf
pop
loopne
call
data16
inc
dec
push
fwait
shr
bound
add
add
mov
insb
mov
and
add
add
mov
ret
add
test
add
xor
push
adc
add
mov
adc
xchg
sti
lods
cmp
movsl
jp
fbld
ljmp
add
add
in
ror
push
push
inc
jb
call
add
add
lock
sbb
push
push
lcall
sbb
mov
add
add
jnp
push
ret
lea
in
cld
rolb
mov
dec
xor
add
push
wbinvd
mov
or
dec
xchg
dec
hlt
fcompp
daa
sbb
stc
daa
iret
xchg
ficomps
dec
sub
std
test
jnp
mov
mov
push
dec
mov
sar
add
add
add
add
and
jae
clc
xlat
cmc
dec
dec
jge
inc
push
adc
lea
test
das
mov
jle
xchg
add
push
mov
push
sbb
add
add
pop
mov
xchg
adc
std
and
mov
mov
mov
add
add
mov
test
xor
xchg
daa
subb
add
ds
rcl
push
jnp
lds
mov
jne
mov
xchg
jge
iret
fldt
mov
xor
dec
add
add
test
jne
dec
ljmp
mov
push
mov
in
sub
cmc
shll
addr16
sahf
xchg
call
daa
cmp
movsb
mov
mov
add
into
ret
add
add
ds
lahf
adc
add
insl
adc
pop
pushf
lahf
jmp
xlat
movsb
xchg
frstor
dec
scas
and
add
add
andl
daa
mov
mov
add
iret
mov
vpsubusw
jl
ja
inc
mov
pop
scas
div
xor
imul
negb
mov
mov
xor
jo
add
add
jb
pop
pop
test
movsl
out
mov
add
add
cmp
add
addr16
mov
mov
inc
neg
mov
pop
out
jge
arpl
sbb
jo
push
in
lret
jnp
ret
loope
dec
add
add
stc
mov
mov
add
gs
in
push
cmp
add
add
fists
or
andb
add
mov
inc
stc
pushf
sub
mov
add
add
lcall
iret
loope
or
sahf
pop
push
mov
jb
xor
lcall
mov
xchg
jno
enter
pop
mov
mov
pop
dec
shrl
dec
mov
pop
jg
pusha
add
add
jae
outsb
std
inc
add
add
lahf
aad
mov
dec
add
add
enter
add
mov
int
lea
movsl
mov
addr16
add
loopne
mov
lret
cli
data16
fimull
add
add
jno
dec
stc
push
or
add
add
pop
loop
in
cmp
push
out
or
add
add
test
int
inc
xchg
xchg
xlat
xchg
sub
add
add
xor
js
in
add
add
add
add
dec
pop
mov
mov
jne
xor
xchg
xchg
je
out
add
jne
mov
mov
ret
and
push
fwait
cmp
sbb
outsl
int
mov
es
add
add
xchg
dec
mov
inc
mov
add
mov
out
out
test
shll
add
add
mov
idivl
inc
jb
or
nop
add
add
add
idivb
fisttpll
xchg
sub
add
add
vcvtss2si
add
add
clc
idivl
inc
lret
push
dec
fwait
sub
add
add
dec
icebp
pop
inc
sarl
dec
add
add
out
sub
adc
mov
add
add
mov
jnp
xchg
rorl
pop
mov
stos
xchg
aaa
cmp
and
add
add
inc
and
sub
xchg
fmull
adc
mov
and
inc
jle
daa
gs
xchg
jne
xchg
xlat
add
add
add
ljmp
movsb
push
push
pop
lock
in
mov
lods
punpckhwd
xlat
dec
rcll
mov
out
inc
add
add
daa
ss
enter
add
mov
aam
xchg
sub
out
ficompl
sub
add
add
dec
cmp
incb
push
fsubs
notl
pusha
mov
ficompl
cmpsl
or
add
dec
outsl
iret
shlb
add
sub
sub
add
add
jne
push
in
subl
push
dec
adc
mov
add
pushf
push
das
push
stos
add
add
add
and
pop
fbstp
jo
mov
pop
ret
pop
add
mov
mov
aaa
mov
repz
int
add
add
adc
aad
add
add
add
add
add
add
add
add
shld
stos
in
xchg
dec
imul
std
or
mov
out
movsb
js
loope
jno
sub
stc
push
cmpsl
mov
stos
in
inc
mov
fstpl
cwtl
mul
mov
lret
lods
dec
xchg
jmp
mov
ljmp
sbb
xor
test
add
test
fstpt
mov
xchg
pop
sbb
icebp
xchg
pop
jno
jmp
sahf
cmc
lea
and
add
cli
cmp
add
add
add
add
inc
pop
scas
ss
lds
add
clc
leave
jb
xor
sbb
and
add
sarb
shl
pop
xorb
sub
add
add
xchg
insb
mov
mov
cmp
sahf
add
mov
mov
xchg
lahf
or
out
lods
dec
add
add
cwtl
pop
mov
mov
add
decb
jb
mov
add
add
pop
imul
rorb
add
mov
cwtl
pop
andl
pop
fprem
ss
xlat
fs
push
sbb
mov
xor
stos
call
pop
mov
int
dec
add
add
add
lods
es
mov
mov
cmc
fnstenv
repnz
shll
scas
dec
jnp
mov
loop
push
dec
mov
mov
pop
sub
add
add
sbb
mov
add
xor
daa
xor
cmp
push
cs
push
or
fistpl
push
ljmp
sbb
adc
cmp
adc
aam
or
icebp
sti
int
andl
lds
pop
sbbb
mov
pop
insb
mov
pop
loop
jb
lret
sarl
mov
in
popf
add
in
pop
xchg
jnp
frstor
mov
dec
fldl
popfw
out
dec
jns
jle
inc
push
sbb
inc
mov
adcb
add
inc
mov
repz
inc
xor
mov
mov
fs
idivl
jg
cmpsl
jae
jge
repz
cmpsb
test
imul
push
in
movb
scas
adc
jbe
dec
add
add
imul
es
in
loop
mov
jl
outsl
int3
sub
ret
fistpl
xchg
or
add
add
pop
movsb
push
stc
scas
js
jg
jle
std
mov
pop
les
add
add
mov
insb
add
add
enter
testb
call
adc
jbe
enter
xor
add
add
ret
rcrl
add
add
add
arpl
add
add
add
add
pop
mov
adcb
push
outsl
out
test
ss
xlat
add
add
add
sysret
scas
mov
outsl
inc
jae
or
xchg
mov
idivb
icebp
mov
cli
xor
stc
addr16
pushf
mov
xor
adc
add
add
pop
pop
mov
mov
in
cmpsb
orb
es
repz
jne
xor
add
sarl
add
add
mov
mov
add
add
dec
cld
mov
dec
loope
mov
push
in
add
sbb
pop
pushf
repz
out
jns
xchg
jno
js
cmc
les
jmp
add
in
jne
push
cmp
daa
add
add
push
mov
aas
push
fadd
jg
add
add
insb
mov
mov
xor
jmp
pop
pusha
add
add
lahf
add
scas
sbb
xor
mov
and
lods
sbb
ss
add
add
or
add
add
mov
fisubs
fdivrl
add
add
add
xchg
scas
sbb
hlt
mov
add
ds
stos
cmc
repz
mov
cli
or
add
add
push
push
xchg
mov
and
add
add
lods
add
add
add
add
add
mov
add
add
or
jns
cld
xchg
push
sbb
adc
pop
lds
inc
ret
sbb
roll
fidivl
repz
shrl
mov
mov
clc
push
pop
cmp
mov
xchg
outsb
ss
insl
pusha
add
add
icebp
inc
mov
mov
xchg
mov
add
pop
hlt
das
sub
add
add
lret
pop
push
std
hlt
in
xchg
scas
jp
mov
inc
int
mov
dec
add
das
add
add
add
jp
xchg
imul
mov
negb
in
cwtl
jae
js
mov
pushf
sbb
nop
loope
and
add
add
cwtl
jle
jnp
adc
pop
stc
pop
fisubrl
in
test
jbe
roll
add
add
inc
add
add
sub
sub
fs
aam
sbb
sarb
repnz
xchg
cmovge
xor
push
hlt
dec
add
lock
loope
or
xchg
rorb
add
add
shl
js
and
inc
add
add
mov
jo
mov
lcall
sarl
xlat
pop
jns
or
add
add
ficoms
add
add
add
shrb
add
add
int
imul
jnp
scas
stos
push
iret
hlt
cmp
out
mov
fcoms
and
or
add
test
mov
mov
or
stc
xor
repz
fcomps
aad
outsl
out
mov
lods
sbb
mov
sbb
mov
fcmovne
insb
mov
pop
ficomps
jno
es
mov
loope
fwait
jmp
or
add
in
insl
ret
cli
lcall
nop
adc
mov
dec
add
add
cmp
mov
add
add
out
add
add
add
sbb
mov
adc
fimull
adc
test
add
add
xor
ficoml
add
xchg
clc
sub
and
jnp
arpl
xchg
push
and
add
add
lret
popf
jno
sub
ret
mov
sub
out
pop
push
sbb
pop
lock
add
add
repz
xchg
sub
nop
and
inc
mov
cmp
jge
or
dec
or
add
add
add
xor
push
pop
sysenter
mov
add
add
cmp
es
ret
test
add
dec
je
mov
jl
ja
xor
xchg
mov
arpl
scas
mov
rol
lds
push
jne
xor
add
ljmp
lods
loop
add
add
ficoml
cmp
sub
test
enter
or
outsb
pop
pop
js
xchg
test
rorl
add
out
mov
sbb
add
or
mov
add
add
arpl
cltd
xchg
adc
sti
adc
push
les
and
frstor
inc
mov
add
divl
mov
xor
mov
inc
xchg
xchg
dec
push
sub
push
and
in
roll
xchg
fsubs
add
xchg
in
xor
add
sub
mov
test
jno
gs
add
add
ret
inc
lahf
dec
adc
jnp
mov
pop
xchg
xor
xrelease
mov
xor
pusha
mov
int
push
xchg
adc
subb
xchg
add
jno,pt
ds
ficoml
dec
xor
inc
shll
add
add
xor
push
mov
lahf
shrb
fmuls
add
add
into
lahf
popf
sbb
jae
pop
loopne
inc
mov
mov
ja
and
pop
jecxz
mov
sbb
inc
mov
push
inc
mov
inc
pop
adc
rol
lods
pop
fimuls
loopne
sub
add
add
out
movb
adc
add
test
mov
inc
xor
cs
cmp
mulb
jae
mov
add
add
loop
outsl
sahf
call
add
add
add
xor
add
sbb
push
cld
inc
and
mull
add
ss
add
add
add
daa
mov
enter
add
iret
and
jo
sub
aam
fnstsw
sti
das
shrb
push
call
add
xchg
add
add
sub
add
add
js,pt
mov
add
gs
mov
jbe
out
cmpl
mov
mov
orl
mov
repz
inc
test
mov
pop
imul
lea
inc
andb
add
mov
xlat
lods
vfmsubaddps
fwait
mov
scas
inc
xlat
cmp
mov
pop
movsl
or
sti
and
jb
push
cmp
arpl
jp
xchg
int
cmp
pop
cwtl
jae
pop
ljmp
add
jmp
or
rorb
add
add
add
add
pop
dec
push
sub
lods
sbb
add
add
inc
out
jmp
add
or
add
add
mov
sub
add
add
loop
fisttps
push
cmc
pop
mov
jbe
lret
add
add
sbb
jmp
add
sbb
bndldx
jne
cli
xchg
nopl
inc
mov
hlt
xchg
into
lods
addr16
xchg
es
adc
jnp
ja
xchg
dec
add
add
inc
pop
inc
xor
mov
push
fs
add
add
add
jns
mov
roll
mov
push
cld
iret
mov
xor
xor
jns
cmpsl
cmp
and
pushf
push
out
add
jle
sub
fisubrl
adc
js
shr
mov
cmpsb
stc
orb
xor
sbb
ds
call
fistps
out
push
dec
sub
leave
jae
sub
popf
stos
aam
lds
add
add
cs
add
add
mov
jmp
pop
shl
imul
add
add
add
sbb
jge
ja
pop
dec
lods
dec
add
add
jmp
stos
fisttps
add
test
add
add
add
pop
jno
mov
add
add
sub
add
add
inc
mov
mov
mov
aam
pop
sti
lret
jmp
push
test
pusha
add
add
cmp
jns
pusha
add
add
cmp
add
lods
fs
cmc
lret
xchg
pop
nop
test
mov
neg
fisubs
mov
test
jne
xchg
dec
add
add
dec
jae
mov
add
add
inc
sub
ds
std
push
call
lea
int
aam
jg
clc
popf
jo
call
cwtl
pop
pusha
mov
cltd
out
repnz
les
cmpsl
push
pop
lock
cmc
mov
xchg
data16
aas
or
cltd
mov
push
jmp
test
add
add
out
rcr
inc
add
add
roll
add
sub
sbb
pusha
mov
pop
jne
inc
adc
lock
sti
shlb
jg
iret
add
cmp
push
push
insb
mov
and
add
add
sub
add
add
jnp
lods
mov
jne
scas
jg
rolb
cwtl
mov
js
push
mov
into
mov
push
add
add
sahf
daa
aad
push
pop
add
std
es
stos
jge
scas
ja
stos
push
nop
inc
or
add
in
jg
xlat
das
call
nop
aaa
cmpsl
in
cmp
add
xchg
arpl
add
out
loope
dec
mov
xlat
add
add
add
mov
mov
xor
and
call
push
or
push
loope
xor
sub
gs
out
jno
repz
cs
fisttpll
add
add
add
add
add
mov
mov
push
xor
sbb
lret
add
add
or
add
add
adc
pop
dec
add
add
fists
mov
mov
push
xchg
dec
add
add
adc
add
scas
adc
ljmp
dec
add
add
jb
dec
fisubl
out
add
mov
add
add
add
pusha
add
add
stos
popa
mov
add
add
std
pusha
mov
jo
lock
or
push
shrl
mov
imul
mov
xor
rorb
jns
arpl
sub
in
int
in
testb
cmp
push
lds
and
jnp
out
mov
and
mov
lods
cmpb
loop
in
jp
aas
cmp
mov
pop
aas
daa
inc
add
add
xchg
inc
je
xchg
sub
add
add
movsl
push
psrlw
jg
push
jbe
mov
add
add
add
das
icebp
gs
stos
mov
mov
push
sbb
pop
add
add
add
jns
add
das
inc
add
and
dec
pop
sbb
lret
mov
sahf
pop
stos
mov
sbb
xor
jns
add
add
jmp
jp
push
movsl
pop
mov
lcall
sbb
add
add
dec
lds
in
push
sbb
add
dec
leave
jns
adc
outsb
adc
cmp
mov
sub
jb
lock
fidivrs
aas
lahf
jg
push
sub
aas
dec
mov
dec
ljmp
in
jg
mov
push
adcb
fwait
mov
add
out
pop
mov
es
imul
or
add
add
add
mov
add
add
loope
out
push
roll
add
es
subb
js
std
add
call
fidivs
inc
add
add
mov
pop
dec
xchg
add
add
add
add
in
pop
add
sub
xor
lds
dec
and
add
add
adc
jg
in
stc
push
or
add
push
mov
pop
dec
xor
jns
jecxz
push
divl
lds
xchg
shll
pop
out
mov
je
push
xchg
leave
jmp
adc
aas
fiadds
lods
out
push
xchg
stos
outsb
and
or
add
add
mov
mov
pop
mov
adc
add
add
and
jp
loopne
mov
imul
cld
rclb
add
add
add
add
fadds
sbb
push
imul
out
xor
push
push
mov
pop
ret
outsb
xor
sbb
cmpsl
push
std
pop
sahf
mov
mov
add
add
dec
lahf
dec
sub
fsubr
out
inc
mov
sahf
push
adc
das
test
pop
sub
decb
daa
jnp
xor
jecxz
add
add
jecxz
push
orl
push
neg
ss
daa
mov
jns
pop
daa
fmul
xor
fldenv
add
add
pop
xor
imul
fdivrs
cmp
sahf
lret
or
add
add
jmp
add
sahf
push
mov
js
mov
int
sar
mov
std
cmc
and
add
mov
mov
ja
mov
pop
xchg
and
fucomip
pop
pop
adc
add
cmpb
scas
xchg
roll
sub
and
sbb
xor
add
daa
pop
sbb
mov
sub
add
add
mov
hlt
stc
adc
sbb
add
add
or
mov
int3
outsl
fidivs
pop
push
xchg
test
xor
cwtl
outsl
inc
pop
mov
popw
add
add
cmp
xor
jns
pop
pop
ja
shll
mov
cmp
xor
cmc
fdivs
shll
pop
cli
mov
pop
adc
sahf
loopne
pop
dec
push
xchg
hlt
int
mov
add
xor
push
xchg
sbb
pop
push
pop
clc
cmpsb
xor
jg
ror
incb
sub
cli
je
das
mov
fldenv
aam
icebp
push
lret
inc
pop
lods
lcall
inc
pusha
add
add
cmp
xchg
mov
js
shr
push
cmp
xchg
fadd
add
inc
mov
out
pusha
add
add
mov
add
add
lods
jbe
mov
add
add
iret
lods
or
je
popf
pushf
popf
lret
rol
push
adc
fcmovnb
pushf
out
cmc
inc
popa
xor
stos
mov
data16
add
add
and
add
add
inc
lahf
sahf
pop
lar
repz
mov
mov
ljmp
leave
push
dec
jle
mov
out
rcrb
fistpll
inc
test
inc
lods
test
inc
add
add
sbb
scas
imulb
mov
sub
fidivrl
or
sub
add
add
sub
add
add
push
movsb
xor
ss
mov
or
pop
nop
push
mov
out
mov
add
fwait
sbb
call
mov
mov
rolb
leave
inc
lods
xchg
aaa
pop
addb
add
repnz
idiv
adc
loopne
fst
jle
fnstenv
repnz
add
add
add
cmpps
mov
stc
inc
pushf
repnz
imul
add
push
ror
fs
or
jmp
add
add
pop
mov
test
xchg
dec
dec
sub
add
add
stos
xchg
and
adc
sub
inc
lea
and
cmp
mov
add
out
pop
in
add
repz
mov
inc
call
add
decl
add
adc
sbb
push
xor
add
add
scas
inc
add
add
jb
aas
aaa
cmp
lret
cmp
fnsave
and
add
add
iret
push
mov
and
mov
sub
add
add
inc
add
add
jle
sarb
fcomps
js
sbb
add
mov
dec
jne
mov
inc
mov
mov
jo
sub
dec
imull
add
add
xlat
adc
and
shlb
xchg
aaa
pop
sti
sbb
shl
sub
add
add
je
jb
flds
iret
lea
add
dec
mov
stos
test
into
cwtl
cmpl
xchg
mov
push
cwtl
xchg
pop
cmp
roll
lahf
mov
nop
pop
mov
add
cmpsb
push
inc
lret
inc
dec
mov
sbb
and
add
add
push
idivl
xchg
jb
je
shlb
add
fdivl
repz
push
push
cmp
add
inc
jp
push
dec
mov
or
pusha
mov
repnz
sti
jg
jae
xlat
add
stos
mov
in
cwtl
fsubrs
out
inc
lock
mov
push
mov
std
test
add
add
les
repnz
cmp
add
add
pop
mov
add
add
add
in
shl
cmpsl
pop
scas
je
sub
mov
inc
sub
mov
pop
adc
mov
ret
jne
inc
outsb
push
push
adc
test
push
js
lahf
xlat
decb
sbb
enter
mov
sti
dec
add
add
dec
fnsave
aad
push
add
mov
cmc
pop
out
pop
xchg
imul
dec
xor
jns
ret
xchg
pop
sbb
xchg
push
dec
jl
push
dec
and
add
add
lods
sbb
add
add
or
xchg
add
ret
push
push
and
add
add
inc
in
sti
in
addr16
divb
mov
add
mov
std
std
jge
in
mov
out
sub
cs
mov
mov
outsb
lods
xor
lea
add
add
imul
xchg
jae
and
add
add
mov
push
add
jmp
dec
sbbb
jo
and
mov
lods
dec
mov
ds
sbb
add
lods
mov
add
pop
and
mov
add
cmp
mov
jle
cmp
call
mov
inc
addr16
add
add
mov
fbld
gs
mov
jne
dec
fcoms
add
add
fwait
mov
sub
pop
pusha
mov
loop
push
xchg
testl
add
xor
cmp
xor
and
pop
lock
mov
cmp
into
out
jb
dec
ja
sub
je
pop
xorl
jns
pop
xor
add
add
ja
add
add
xchg
addb
add
add
jae
push
addr16
subb
sbb
outsl
adc
jle
movsl
push
jne
nop
fmuls
xchg
lea
add
mov
add
add
insl
add
add
add
fnstsw
dec
add
add
hlt
ja
inc
or
les
mov
xor
imul
xor
movsb
cmpsb
scas
cmp
add
add
fildll
lret
add
add
cmpsl
xchg
and
int
imul
add
mov
and
add
faddp
subb
fbld
ljmp
add
add
jle
in
xchg
add
mov
ret
enter
in
andb
jge
cmp
add
xor
sub
js
mov
arpl
mov
outsl
mov
stos
cwtl
sub
add
add
inc
lds
jg
lcall
add
add
inc
sbb
adc
xchg
lahf
jecxz
xor
fldl
pusha
mov
mov
lret
sub
adc
jecxz
movsl
mov
mov
add
es
in
stos
test
mov
popa
fcmovbe
jge
push
aas
adc
or
cmp
mov
pop
int
jo
ds
and
jg
sbb
dec
jl
jmp
inc
mov
add
add
popf
xchg
mov
das
push
ljmp
jp
or
jb
jo
jnp
and
add
add
mov
jmp
add
add
pop
fcompl
pop
mov
or
int3
jecxz
hlt
mov
movsb
cmp
cmp
insb
add
add
push
mov
xchg
xlat
imul
aad
ds
jo
and
bound
mov
pop
add
add
divl
add
add
add
push
cmc
dec
jg
lret
pop
pop
jno
push
push
mov
add
enter
test
dec
or
mov
test
add
add
test
inc
cmp
scas
jae
xor
add
add
in
mov
add
inc
add
add
les
jo
mov
cmp
add
add
add
add
mov
jno
mov
xchg
jbe
mov
pop
out
cld
cmp
mov
leave
bound
flds
test
cmpsb
inc
xor
mov
cmp
sub
dec
fcmovnb
dec
mov
mov
inc
push
mov
add
cmp
jmp
mov
lcall
inc
pop
mov
inc
add
add
cmp
out
testb
cmp
add
add
inc
stos
outsb
cmp
out
loopne
push
int3
cmovne
lret
iret
ss
mov
add
add
sub
adc
xchg
std
iret
add
add
add
pop
mov
sbb
je
jns
test
rcl
inc
fdivrl
cmpsl
icebp
xchg
in
add
pop
data16
mov
sbb
mov
add
inc
lret
shr
lahf
jp
pop
jns
mov
jp
add
add
out
sbb
mov
add
int3
in
fstpt
add
xor
in
push
sahf
xchg
mov
add
rcrl
fwait
jge
mov
arpl
sub
add
add
movsb
jg
enter
cmc
call
iret
inc
insl
mov
dec
mov
fstpt
fcmovb
jo
xchg
in
mov
inc
xchg
xchg
repz
dec
push
xchg
aad
pop
int3
das
jp
sbb
dec
mov
push
lahf
mov
add
add
out
push
mov
push
add
add
add
into
sbb
sbb
ja
and
scas
mov
add
daa
adc
sub
push
int
mov
adc
mov
add
pushf
sbb
sub
inc
iret
bound
add
add
pop
push
stos
push
add
add
add
lea
add
add
pop
push
xchg
repz
dec
add
add
test
adc
ja
add
loopne
inc
mov
into
jns
xor
bnd
add
fstl
lret
jb
mov
dec
mov
sub
and
mov
scas
sbb
or
out
adc
sahf
xchg
test
repz
ror
loopne
push
push
lock
loope
or
cltd
insb
mov
pop
rorb
push
out
or
add
add
add
add
add
add
mov
in
xor
push
sub
mov
jmp
add
add
test
in
mov
mov
add
add
add
imulb
push
push
mov
push
cmp
dec
icebp
lds
xlat
cld
adc
add
add
add
add
leave
add
jae
pop
je
jo
outsb
sub
cwtl
mov
jle
add
add
inc
inc
mov
mov
dec
popa
push
dec
mov
xchg
push
mov
jb
pop
inc
add
mov
fcoms
add
cmp
inc
dec
push
rcrl
jmp
pop
mov
dec
je
cmp
popa
scas
mov
cmp
push
push
xchg
jmp
negb
and
add
add
inc
cmc
mov
add
add
mov
fcoml
ds
pusha
mov
sub
out
inc
mov
in
lret
xchg
mov
dec
mov
add
add
jmp
rcrb
shll
mov
add
add
push
or
aad
pop
add
mov
push
lret
pusha
mov
add
add
aad
mov
mov
adc
push
xor
insl
lar
add
js
icebp
jne
mov
fstpt
pop
pop
sub
dec
mov
mov
mov
or
arpl
in
add
lds
mov
add
add
add
outsb
add
push
push
test
loope
push
add
add
sub
add
add
push
ror
dec
xchg
lret
pusha
mov
mov
xor
out
xor
and
add
add
inc
dec
add
add
xchg
cmc
adc
inc
mov
cmp
add
cmp
sbb
out
lret
add
cmp
mov
cmpsb
lret
xchg
lods
add
pop
movl
push
aad
add
add
mov
cmp
mov
loop
mov
adc
jno
mov
mov
cmc
mov
or
mov
sbbb
dec
out
push
cmp
dec
out
dec
dec
or
sbb
lds
mov
mov
testl
mov
cmp
add
add
cmp
or
pop
push
cmpsl
and
inc
shll
mov
add
mov
leave
aad
mov
xchg
pop
pop
push
push
xchg
ds
mov
add
stc
cmp
inc
ret
stc
repnz
clc
dec
add
add
xchg
xor
add
jno
mov
les
and
add
add
cmp
adc
push
rorl
jne
jmp
addr16
mov
inc
test
test
dec
insb
mov
mov
cmp
add
add
add
push
loop
dec
js
stc
insl
adc
cmpsb
or
add
add
inc
sub
adc
add
add
add
push
insb
add
add
mov
pop
aaa
cmc
notl
add
add
pop
jno
pop
jmp
add
and
add
add
rorb
xchg
imul
add
add
mov
outsb
sbb
in
ret
stos
fadd
jnp
mov
push
lcall
lock
stc
int3
and
mov
js
xchg
mov
add
pop
xor
add
add
sub
add
add
inc
add
add
es
mov
mov
add
add
add
sti
cmp
xchg
mov
lahf
mov
jge
push
sub
out
xor
jo
sbb
out
mov
in
int
push
test
movsb
pop
pop
int
cwtl
pop
call
cmpsb
mov
add
cmc
adc
mov
mov
sbb
mov
ljmp
xor
pop
dec
lret
clc
insb
mov
mov
adc
add
jg
mov
cmp
movsl
scas
repnz
dec
and
add
add
leave
cmp
mov
add
sahf
fptan
jge
or
out
leave
fmuls
movsl
sti
mov
add
add
jnp
adcb
xchg
int3
loope
lcall
aaa
dec
sub
push
test
cmpsb
in
movsb
aam
pop
and
les
inc
mov
in
mov
fmuls
xlat
mov
dec
mov
mov
add
jge
roll
add
stos
xchg
rclb
ja
add
add
push
dec
sbb
pop
xor
ds
rcll
xchg
sbb
cwtl
or
add
add
lock
xchg
in
mov
adc
add
add
insl
mov
jle
inc
add
add
or
add
add
into
stos
xchg
jge
scas
rcll
xchg
jg
fwait
cwtl
lods
gs
lret
mov
scas
iret
push
testl
rcll
cs
popf
push
sbb
insl
mov
add
add
add
add
add
cmc
adc
xor
lock
dec
mov
mov
je
pop
add
add
push
test
mov
mov
mov
movsl
xchg
xlat
daa
icebp
pop
or
add
add
lret
nop
or
and
add
add
jnp
scas
add
fwait
inc
mov
dec
add
add
out
and
push
ljmp
cmp
insl
dec
add
add
and
add
add
shrb
xor
add
repz
or
cli
inc
mov
insl
repz
jns
sub
sahf
jae
int
push
dec
adc
push
or
mov
adc
nop
xchg
inc
push
repnz
mov
xchg
and
mov
add
inc
shl
jl
or
add
enter
mov
les
out
push
stos
cmpsb
cmpsl
xchg
loop
dec
lret
inc
dec
nop
in
cmp
add
add
test
hlt
mov
int
add
fists
cmpsb
or
adc
std
push
or
add
add
icebp
mul
adc
mov
stos
mov
stos
das
mov
push
outsl
call
pop
push
inc
sub
pop
and
adc
test
iret
in
mov
sub
sub
xlat
jb
pop
add
add
add
pop
out
jle
push
inc
aas
push
insl
lds
mov
stos
push
lcall
and
sarb
ljmp
mov
and
adc
add
ret
setle
fdivrs
push
pop
inc
and
add
add
jl
cltd
push
mov
test
das
or
mov
outsl
stos
out
dec
and
stos
popa
out
scas
pop
sbb
mov
inc
clc
pop
dec
sub
pop
imul
add
add
add
add
push
in
lahf
sbbl
sub
cmpsb
mov
or
add
add
cltd
mov
in
adc
xor
fs
mov
pushf
mov
jo
add
add
push
outsb
mov
jae
mov
cmp
clc
pop
add
jne
fcomp
in
add
add
jmp
mov
pusha
mov
in
cld
fisubrl
ss
das
js,pn
pop
loop
sbb
add
add
les
lds
mov
int
movsl
test
push
scas
insb
add
add
iret
push
dec
mov
stos
pop
shlb
popa
outsb
in
mov
int
adc
mov
mov
add
add
out
mov
mov
fcoml
out
inc
add
add
imul
add
mov
add
jo
inc
add
add
fwait
mov
std
lock
and
pop
insl
sbb
idivb
lea
push
arpl
and
scas
adc
pop
jg
rorl
add
nop
sub
sbb
fucomi
sahf
push
mov
sub
push
divb
inc
mov
sti
jle
pop
imul
and
add
add
mov
pop
subl
mov
sbb
or
add
sbb
test
aad
xor
fdiv
mov
lods
cmp
xchg
mov
push
xchg
stc
stc
in
mov
loopne
mov
fldenv
loopne
mov
add
add
xchg
lods
jae
sbb
jbe
mov
daa
jge
mov
pop
mov
scas
arpl
cld
pop
push
push
call
xor
and
add
add
lret
mov
pop
sub
insb
mov
push
hlt
clc
lea
cmpsl
adc
add
add
insb
add
add
arpl
add
xchg
push
push
clc
xchg
dec
sub
add
add
xor
cmp
xor
xchg
cmpsl
xor
mov
out
inc
mov
fmuls
mov
bound
dec
adc
sub
add
add
cld
add
int
fcomip
and
add
add
sti
xchg
and
js
ja
cwtl
push
xor
popa
loope
xchg
sti
lds
in
jne
popf
xchg
jae
xchg
jne
js
in
int3
jg
out
xchg
mov
lret
lea
fbstp
sub
add
add
and
cmp
adc
mov
add
shll
outsl
out
stos
stos
test
jp
mov
leave
addr16
je
repz
sub
add
add
jmp
pop
sbb
add
add
xor
dec
xchg
in
fists
sbb
xchg
lret
xchg
add
test
add
add
sub
in
das
adc
add
add
push
ja
stc
inc
adc
in
call
lahf
mov
add
add
add
les
cmp
sbb
inc
sub
dec
pop
rcrb
add
add
mov
xchg
insl
icebp
jmp
add
add
mov
mov
test
add
test
xor
sub
and
rcr
mov
imul
jo
es
sbb
push
gs
outsl
mov
push
lahf
int
xchg
cmpsb
iret
and
add
add
pushf
jl
and
cmpb
add
xchg
sub
add
add
add
cmpsb
es
enter
add
push
cmpsl
leave
mov
sub
add
add
sub
mov
scas
notl
pop
fimuls
adc
sbb
add
sbb
cmpb
pop
mov
dec
sub
outsb
mov
or
sbb
aam
daa
mov
shr
adc
loop
cmp
mov
add
adc
cwtl
shlb
jp
mov
mov
push
jle
roll
pop
lret
sub
aad
fwait
sub
out
push
sbb
xorb
add
add
clc
push
aam
sbb
clc
mov
sub
sahf
mov
or
insb
mov
insb
mov
popl
fidivrs
adc
leave
cmpsb
sub
xlat
inc
push
rorb
dec
add
es
add
add
add
add
add
sarl
and
add
add
add
xchg
or
add
add
sub
add
pop
and
add
add
inc
lock
inc
mov
jecxz
mov
dec
xchg
jp
push
and
aaa
ss
shlb
add
add
add
add
fistpl
inc
adc
out
xchg
xor
jns
add
add
or
fisttpll
cmc
fcmovnbe
or
jbe
scas
inc
mov
add
outsb
pop
add
dec
stos
xor
add
add
lahf
mov
lea
or
cmp
out
pop
jl
push
jb
add
sti
std
sub
xor
sbb
add
nop
or
add
add
add
add
adc
enter
or
aam
push
gs
push
in
pop
in
test
sub
add
add
cmp
in
fldl
add
movsl
rclb
int
in
and
lds
loopne
mov
add
add
adc
or
int3
stos
pusha
mov
inc
dec
stc
and
cmpsb
movsl
push
mov
lea
add
cmpsl
or
add
add
jecxz
stc
dec
test
jmp
popf
jbe
mov
out
adc
lock
icebp
push
and
test
or
add
add
in
lahf
jmp
inc
cmp
mov
push
xlat
sti
mov
mov
add
and
dec
fldcw
add
add
add
add
sarl
dec
mov
stos
cmp
pop
sarl
ljmp
inc
add
add
cmpsb
je
daa
shlb
or
add
add
push
lods
lods
push
push
je
fnstenv
adc
xor
add
mov
inc
icebp
mov
inc
xor
push
arpl
mov
sub
add
dec
add
add
dec
mov
push
or
fldl
test
add
add
ret
mov
or
fsubrs
dec
out
insb
add
add
adc
add
add
add
dec
add
add
enter
cmpsb
add
add
add
adc
dec
dec
jnp
sbb
mov
imul
out
jge
hlt
movsb
roll
mov
mov
fstpl
iret
pop
pop
scas
and
push
add
andl
lahf
scas
jle
mov
sub
add
add
cwtl
int
add
add
mov
ljmp
lret
cmp
add
push
pop
mov
add
jno
mov
jo
adc
sbb
sub
cmpsb
mov
add
or
inc
sub
sub
hlt
xchg
xchg
add
add
call
addr16
lods
test
in
fstpl
mov
mov
add
add
add
lret
add
add
orb
cmp
and
add
add
xchg
xchg
clc
fsubl
rolb
lahf
sub
add
add
adc
sub
adc
add
fstl
sub
push
fisubs
sahf
in
call
add
add
loop
add
jnp
shll
adc
in
cmpsl
out
aaa
sahf
out
push
insb
mov
lods
mov
cmp
and
add
xor
and
adc
test
push
and
movsl
iret
xlat
mov
xor
add
cmpsb
jg
shrl
sbb
add
sbb
mov
lods
adc
add
add
mov
add
add
insl
jo
sub
dec
cwtl
and
mov
arpl
rorb
push
mov
jl
in
sub
pop
push
mov
mov
cmc
das
pop
mov
and
lret
lahf
mov
cwtl
xchg
sbb
jb
jp
xor
add
add
loope
add
add
scas
lret
or
loope
or
lret
stc
inc
mov
loopne
push
and
sbb
js
gs
mov
jbe
stc
push
sbbl
arpl
ja
mov
pop
adc
adc
sahf
sbb
add
stos
sub
lods
rorl
daa
add
inc
mov
enter
cmp
pop
mov
add
add
outsl
lret
testl
add
add
inc
fiadds
dec
lods
push
arpl
mov
cmp
jne
ljmp
add
sbb
add
add
add
loope
ss
push
lea
push
cmp
add
add
pushf
xchg
jno
adc
xchg
jmp
xor
add
add
out
popf
xor
add
add
inc
mov
std
cmpsl
ss
mov
daa
lods
mov
shrl
outsb
push
mov
mov
addl
inc
add
add
add
push
adc
gs
mov
pop
mov
push
aad
jo
or
add
daa
stc
mov
mov
lret
inc
sar
pop
and
add
add
div
pushf
sub
mov
jb
mov
mov
jno
sub
add
add
cmp
sub
repz
adc
adc
xchg
sub
lret
jg
out
insl
lcall
and
add
add
cmp
jp
add
add
nop
inc
mov
jmp
fwait
or
add
add
sbb
xor
fldl
and
push
test
loop
es
mov
and
add
add
scas
xor
outsl
mov
jg
push
imul
inc
jg
mov
or
pop
inc
add
add
arpl
adc
add
add
icebp
inc
and
inc
mov
dec
outsl
add
add
mov
mov
mov
jb
sub
add
add
int3
inc
jg
subl
lds
inc
test
dec
test
fidivs
mov
mov
in
xchg
cmc
cmpsl
push
jne
push
xchg
xchg
fdivr
int3
push
aad
sub
pop
dec
add
add
mov
xchg
inc
add
add
aad
fcoms
add
ljmp
add
add
push
incl
adc
movsl
js
jl
lahf
arpl
aas
jbe
lret
add
rcrl
adc
mov
push
cmp
fisttpll
or
add
add
mov
leave
adc
mov
lods
jo
mov
shr
repz
push
pop
adc
push
cmpsb
repz
add
add
xchg
fists
cmp
js
inc
inc
loopne
inc
push
mov
out
or
out
pop
add
mov
xor
add
bound
aas
data16
lahf
out
xchg
loopne
xor
mov
bound
cmpsl
pop
jg
daa
sbb
add
lret
movsl
lret
es
ja
mov
dec
xchg
add
and
inc
or
mov
in
sbb
add
add
sarl
jg
iret
arpl
test
cwtl
test
shr
or
fcmovnb
push
mov
fs
loop
jecxz
sahf
clc
cmp
xlat
mov
lock
mov
aad
mov
sub
aaa
lock
pop
test
xor
cltd
loope
mov
xor
addr16
add
out
ss
scas
jne
cmp
mov
cs
gs
scas
mov
or
int3
loope
rep
xor
mov
sbbb
add
mov
mov
adc
push
add
add
add
push
lahf
or
add
add
add
scas
pop
inc
add
add
dec
dec
pop
or
add
add
sub
add
add
int
cltd
jg
push
aaa
push
rcrl
lret
inc
movsl
inc
popf
subb
aaa
out
cmpl
add
test
rcrb
xor
xor
mov
jp
adc
mov
adc
add
add
add
pop
loop
aaa
and
mov
xor
leave
rcr
fstpt
and
mov
sub
xchg
in
or
inc
inc
popf
pop
cmp
pop
cld
xor
fcomip
push
add
add
mov
xor
add
add
dec
or
add
paddusb
pushf
out
mov
mov
dec
add
add
out
cmp
mov
jecxz
add
add
cmp
add
add
outsb
and
add
add
pop
cmp
xchg
aad
pop
inc
dec
cmp
jmp
add
add
xchg
adc
xchg
jno
mov
add
add
in
pop
int3
fisttps
aaa
test
les
sbb
push
jle
lcall
pop
nop
inc
add
add
inc
dec
mov
inc
cmpsl
stc
aas
pop
add
fnsave
push
cli
lcall
sbb
mov
fsubs
dec
inc
push
cmp
rorl
rcrl
pop
push
adc
into
scas
dec
mov
aam
pop
mov
fimuls
push
movsl
outsb
mov
add
add
add
dec
add
add
add
dec
add
add
aas
aas
add
add
fsubr
push
aam
xor
enter
sub
add
pop
sub
cmp
enter
sarl
test
scas
adc
add
pop
ja
add
add
jne
jg
mov
out
adc
push
push
jmp
dec
xchg
mov
loop
xor
addr16
cmp
outsb
sbb
lret
aad
and
pop
adc
add
add
sbb
pushf
fldenv
add
add
add
add
fisubrs
popf
roll
insb
add
add
pop
cltd
and
add
add
cmpsl
cmpsb
jae
cs
sub
add
add
mov
mov
xchg
ret
add
add
add
lret
push
mov
dec
pop
cmp
jmp
add
inc
mov
mov
jnp
sub
dec
sti
sub
aas
cmpsb
push
mov
shrb
xor
inc
mov
dec
nop
hlt
jle
jne
xchg
or
in
jmp
int
test
arpl
ljmp
push
jae
loope
jp
shl
add
add
add
jl
cmp
xorb
jl
add
add
movsl
add
adc
sar
in
dec
and
push
cmc
dec
xor
int3
and
outsb
out
mov
jne
icebp
sbb
add
add
mov
jne
push
stc
sub
xor
scas
pop
sti
aam
aad
sbb
mov
icebp
out
xor
fs
jle
mov
mov
lcall
std
loop
lahf
lret
dec
mov
div
jbe
in
and
ja
cmp
push
lds
into
je
inc
ficoms
lock
int3
push
imul
or
and
and
jle
jg
lods
std
in
mov
fdivrs
lds
add
add
mov
aam
in
adc
loopne
cltd
lcall
sub
xchg
sub
mov
sbb
xchg
sub
inc
lret
push
cmp
mov
mov
cmp
ds
xchg
and
add
mov
mov
ret
faddl
or
add
add
push
dec
mov
mov
and
add
add
add
add
xchg
xor
pop
leave
hlt
jnp
mov
cmp
add
add
adc
test
fwait
icebp
leave
das
cmp
movsl
scas
lahf
push
movsb
push
imul
add
add
add
add
pop
mov
mov
jle
mov
mov
das
dec
add
add
loopne
mov
sarl
add
add
rol
sbb
add
adc
mov
outsb
pop
pop
jg
pop
dec
addr16
popw
cmp
add
add
jecxz
lcall
jns
pop
sub
imul
dec
jno
jl
xchg
mov
mov
icebp
jo
adc
xor
imul
add
xchg
xchg
push
mov
roll
int
lcall
out
sub
add
add
mov
add
js
in
ss
mov
ret
jecxz
or
data16
add
dec
jb
adc
xlat
imul
add
add
mov
add
add
add
dec
enter
add
add
fldl
cmpsl
ja
enter
xor
push
cld
push
add
jns
mov
add
add
push
repz
push
dec
xor
je
fsubrs
loop
push
fcomip
dec
cmp
sbbl
lods
popa
idiv
popf
mov
pushf
movsb
test
push
pop
add
sub
das
enter
in
or
subl
add
add
add
iret
das
std
pop
outsb
jp
ja
lcall
mov
add
add
add
or
add
add
sub
mov
je
mov
cmpsb
xor
sbb
loopne
in
imul
out
jo
mov
nop
inc
sbb
fimuls
adc
test
mov
jbe
pop
mov
push
fidivrs
add
and
mov
pop
adcl
jae
stos
xchg
mov
and
or
add
add
cmp
add
add
les
and
lds
sbb
pushf
adc
and
pusha
add
add
lods
jmp
xchg
aas
sahf
movsl
imul
stos
loope
mov
pop
sub
lret
pop
int
pop
fs
sbbl
fucom
xchg
inc
add
add
sbb
aam
out
pushl
dec
lret
movsl
mov
js
push
in
push
and
pop
imul
mov
addr16
out
and
movsb
out
pusha
mov
mov
or
fistpl
std
mov
pavgw
mov
cmp
mov
sbb
jmp
mov
mov
cmc
inc
mov
aas
ss
sbb
add
add
push
test
add
frstor
dec
mov
xchg
cmp
les
fisubrs
fcmovu
cmp
xchg
loopne
push
out
jg
arpl
push
ret
cmc
jbe
stos
push
mov
out
xchg
out
sub
out
clc
loopne
mov
or
add
add
push
movsb
adc
cli
sti
sub
add
add
add
add
stos
cmp
shrl
jecxz
loopne
push
sbb
pusha
mov
mov
pushf
lret
fwait
push
adc
and
mov
cmp
sarb
outsb
mov
jbe
lea
xlat
outsb
push
popf
lret
inc
ss
ds
mov
add
fstpt
add
add
loop
adc
dec
sti
das
mov
mov
loope
push
xor
sbb
add
jns
pop
fbstp
in
mov
push
add
add
add
dec
add
push
jae
sub
add
add
cwtl
dec
add
add
loopne
push
jbe
mov
mov
stos
xlat
inc
mov
pop
inc
pusha
add
add
xchg
adc
out
mov
add
and
push
cmp
test
add
add
add
or
and
dec
cli
outsl
push
out
stos
push
jmp
mov
aad
dec
add
add
testl
cmp
aas
sbb
in
in
push
jb
or
add
add
add
test
and
movsl
xor
cwtl
dec
add
add
scas
mov
mov
adc
add
add
mov
sbb
cmpsl
or
add
add
jle
sti
jl
sti
dec
stc
pop
sub
add
add
xchg
mov
leave
fcmovbe
push
sub
add
cmp
mov
dec
outsl
ss
adc
scas
decl
sti
addr16
daa
orl
mov
pop
and
add
add
out
cmpsl
insl
arpl
fs
mov
mov
mov
jge
lock
shrb
aad
add
add
lret
sub
add
add
add
inc
add
add
imulb
add
push
mov
sub
add
add
mov
add
add
add
mov
mov
adc
or
add
add
jb
mov
iret
mov
cs
sub
add
add
mov
mov
ja
inc
add
add
dec
add
add
imul
lods
or
add
push
clc
push
es
ret
neg
jmp
sub
add
add
out
andl
into
call
add
add
dec
mov
adc
loope
push
mov
xchg
mov
lahf
inc
roll
call
add
add
pop
mov
fs
cmp
dec
ja
fnsave
daa
add
stc
mov
xlat
push
add
add
add
fdivrs
ds
fucomp
sbbl
push
shrl
add
add
adc
lret
frstpm(287
sbb
sbb
sqrtps
pop
and
pop
fidivrl
sub
mov
and
imull
mov
sbb
add
add
mov
mov
pushf
add
add
sub
jns
stos
sub
daa
test
inc
cs
cmp
jle
adc
mov
idivl
xchg
cmp
das
ljmp
fnstsw
cmp
or
fadds
pop
xor
sub
adc
inc
ljmp
sub
icebp
xchg
xchg
cmp
dec
adc
xchg
fs
repz
cmp
jnp
pop
jl
xchg
test
push
mov
or
mov
or
pop
add
mov
xchg
dec
hlt
test
add
iret
cwtl
or
pusha
mov
mov
mov
add
ret
sbb
adc
int
pop
push
int3
add
add
add
xchg
mov
jo
mov
push
sbb
cmpsl
jb
test
mov
and
add
add
dec
inc
jns
mov
dec
stos
lcall
call
adc
cmp
cmp
mov
add
add
jae
mov
ret
sub
inc
mov
fildl
add
add
sbb
hlt
adc
xchg
jo
pop
sbb
test
jecxz
sub
add
add
xchg
xchg
xor
mov
inc
data16
mov
sbb
aam
xchg
cwtl
enter
fwait
lret
cmp
xor
incl
mov
add
add
jle
cli
adc
push
fldl
mov
jne
pop
popf
xchg
sbb
outsb
outsl
mov
add
pop
int3
outsb
and
adc
rcr
cmp
and
xchg
sahf
pushl
cli
ss
sti
mov
arpl
lds
add
add
push
mov
icebp
push
and
mov
lds
nop
lcall
movsb
movsl
push
adc
adcl
inc
stos
mov
add
add
in
roll
sbb
fimuls
add
add
mov
decb
add
jg
mov
bswap
nop
ljmp
add
rcll
mov
cmp
jae
xchg
fidivs
add
add
nop
push
stos
cmp
imull
fnstsw
arpl
sbb
mov
add
add
add
lods
decb
out
test
or
add
pop
cmp
or
mov
mov
add
into
xchg
or
clc
mov
pop
stos
adc
add
add
add
in
mov
mov
pushf
xorl
add
pop
inc
shrl
add
add
cmp
test
cmp
add
mov
imul
bound
xlat
xor
insl
adc
and
stos
mov
dec
inc
mov
arpl
adc
sub
add
add
mov
sub
push
mov
push
bound
sbb
jae
sahf
movsl
pop
out
test
ret
fnstcw
cmp
xchg
jne
ret
addr16
aaa
mov
add
loope
push
lds
add
movsb
mov
mov
insb
mov
subl
fwait
decl
repz
push
and
adc
adc
push
lea
jns
xor
test
out
jg
call
add
cmpsl
int3
addr16
les
and
arpl
xor
xor
out
add
int
mov
jae
cmp
lret
in
or
int
mov
andl
cmpsb
les
mov
and
popa
mov
outsl
cmp
in
xor
add
add
mov
mov
outsb
mov
mov
and
add
add
mov
mov
loopne
sti
lods
jg
mov
add
add
sbbl
jno
push
mov
add
ret
filds
add
add
add
mov
add
add
push
pop
mov
out
repz
pop
ds
hlt
cmp
lock
sbb
inc
pushf
imul
xchg
lret
js
mov
dec
roll
xor
lods
sbb
call
popa
pop
std
cmc
loopne
pop
mulb
nop
test
fwait
push
push
dec
cmc
xor
add
add
add
pusha
mov
iret
mov
add
add
outsb
mov
add
add
pop
test
add
pop
aaa
jae
adc
cmp
mov
mov
add
loop
mov
add
add
repnz
lea
icebp
jne
adc
add
add
dec
lock
add
repnz
pop
push
push
repnz
ljmp
xor
roll
pop
push
cwtl
jecxz
outsb
pop
insl
repnz
mov
inc
add
add
add
aam
mov
lods
ret
sbb
jne
mov
das
enter
ret
add
add
mov
push
scas
cmp
iret
in
mov
ja
and
mov
sti
push
cmpsb
mul
pushf
fadd
ss
cmpsl
xchg
push
mov
sub
add
add
rol
loopne
fistl
mov
aam
in
in
adc
add
mov
ss
int3
das
xor
push
daa
pop
movb
popa
ficoml
cmpsb
in
repz
or
add
add
xchg
cwtd
jno
and
add
add
rcrl
lret
lret
dec
add
add
lcall
icebp
data16
mov
add
add
in
mov
lock
sub
add
add
jae
mov
xor
ds
inc
loope
lret
or
mov
add
add
mov
mov
out
sar
push
mov
mov
push
imul
add
loope
mov
cwtl
xchg
jmp
pop
stc
and
add
add
pusha
mov
xor
add
stos
idivl
out
decb
insl
int3
mov
bound
aam
or
add
add
and
or
scas
mov
popf
or
push
insl
rclb
ret
ss
cwtl
fcoml
shrl
xchg
and
add
add
insb
mov
sub
add
add
sub
xchg
int
cwtl
add
push
cs
pushf
push
xchg
call
push
int
lds
test
leave
mov
gs
daa
inc
cld
sbb
add
in
js
ja
add
add
aas
xor
lret
fnstsw
mov
fwait
or
je
out
lcall
adc
imul
dec
add
add
jns
dec
lock
popa
mov
ja
int3
mov
mov
cltd
xchg
sbb
stos
or
add
add
cmp
lret
les
aaa
inc
mov
cwtl
aam
cltd
in
mov
sti
cmpsl
mov
arpl
and
sarl
sbb
cwtl
fnstcw
iret
cmc
xchg
out
mov
jae
sbb
sub
mov
add
add
xchg
scas
adc
mov
xchg
xor
sahf
and
add
add
iret
dec
mov
out
mov
add
add
add
add
and
cld
push
sbb
and
scas
gs
push
addr16
mov
aad
jl
lcall
add
stos
push
mov
add
add
fidivrl
push
pmulhuw
enter
pop
sbb
add
sbb
xchg
xchg
xor
pop
addr16
ljmp
scas
sahf
and
add
add
mov
out
sub
ja
lods
inc
fstp
call
cld
and
mov
xchg
cmp
add
add
stos
cmp
inc
nop
ret
or
cltd
clc
inc
scas
jle
shlb
push
pop
and
add
add
xor
sbb
mov
add
sbb
dec
test
xorb
call
add
add
add
mov
fsubs
fisubrs
mov
or
call
imul
sub
add
add
rcrl
pushw
das
pop
jmp
sub
pop
push
or
xor
adc
in
sub
add
in
testb
adc
and
add
add
aas
pop
xchg
in
sarb
adc
loope
pushf
xchg
je
jge
adc
outsb
inc
adc
fucomi
pop
jle
add
add
add
das
fidivrl
lret
sub
add
add
jae
mov
fnstenv
iret
fistl
and
or
sbb
mov
testb
mov
cmp
into
clc
call
rcrb
jno
mov
je
adc
push
stc
imul
adc
cmp
add
add
add
add
xchg
outsl
imul
add
gs
and
testb
add
add
mov
add
add
sbb
bound
mov
sti
cmpsb
add
popf
in
pop
xorl
flds
mov
push
scas
xchg
pop
sahf
les
cltd
xchg
aad
or
add
add
repnz
cwtl
out
cmp
ljmp
add
add
vmptrst
faddl
add
fists
test
xchg
out
in
and
add
add
sub
sahf
outsb
inc
sbb
mov
mov
push
mov
stc
sbb
fstps
xor
or
add
add
outsl
mov
int
xor
lea
dec
scas
in
mov
mov
scas
xchg
sub
add
add
add
add
insb
mov
ret
andb
xor
in
aad
adc
into
and
push
xor
mov
xor
add
add
add
rcrb
insl
pop
lahf
dec
mov
cmpsb
inc
cltd
in
and
add
add
mov
push
hlt
jo
pop
or
add
add
mov
fld
xorb
aam
or
xchg
cli
sub
fldcw
add
add
ret
jb
jle
push
lods
and
jne
inc
in
xchg
dec
or
add
add
loop
mov
loopne
sahf
movsl
popa
pop
or
inc
add
add
and
adc
inc
add
add
jge
enterw
ror
lock
jl
pop
and
dec
sub
mov
adc
xlat
cmc
pop
jno
jmp
mov
addr16
xchg
jno
inc
dec
lods
fimull
pop
jl
jl
push
mov
jo
lahf
jecxz
inc
mov
adc
dec
loopne
pop
and
add
add
add
shll
repz
xor
mov
add
adc
inc
mov
mov
add
lock
inc
push
and
cwtl
sbb
add
loope
js
adcl
sahf
cmp
cwtl
pop
add
adc
xor
loopne
inc
test
addl
sahf
aaa
lret
mov
add
add
dec
mov
sbb
sub
jmp
int3
and
mov
dec
or
add
add
mov
add
lret
into
and
add
add
sub
mov
push
movsb
imul
cltd
xor
and
add
jnp
and
cwtl
pop
out
repnz
inc
add
add
sahf
sub
inc
setns
add
add
add
lock
or
add
add
add
add
push
pushf
cltd
adc
add
nop
negl
mov
xchg
mov
push
or
jno
inc
aaa
cmpsb
and
popf
popf
adc
popf
sahf
sbb
add
add
xchg
add
add
xor
pop
sub
mov
imul
scas
lahf
cmpb
jle
mov
mov
add
int
sarl
scas
adcl
jecxz
addb
add
cli
stc
mov
mov
out
es
es
sbb
add
add
shlb
aaa
mov
cmp
ret
dec
add
mov
adc
fbstp
xchg
sarl
add
add
ret
dec
mov
shrl
into
push
imul
pop
mov
add
xchg
mov
bound
cltd
subb
sub
int3
test
shlb
ss
inc
add
add
ret
cltd
xchg
fwait
pop
sbb
pop
cmp
xchg
orl
add
and
add
add
jnp
jmp
fsubrl
add
add
mov
push
push
pop
inc
rolb
add
add
shrl
add
pop
in
jb
pop
fsubrp
cld
loop
mov
mov
pop
call
sahf
testl
lods
adc
add
dec
and
add
add
mov
ja
test
test
mov
push
push
outsl
jl
in
cmpsb
rcr
mov
cld
xlat
pop
fsubrl
in
ret
mov
jle
push
mov
pop
mov
add
add
in
pushf
sbb
test
cltd
add
cmp
fistpl
mov
lods
push
pop
inc
insl
adc
jmp
xlat
fcmove
fbld
add
add
cwtl
shrl
loope
pop
xchg
lods
xlat
inc
ds
jno
mov
lods
call
add
add
add
jns
das
mov
push
cmp
add
add
lret
xor
jb
lods
aad
jne
mov
push
mov
add
add
dec
sbb
and
loope
mov
cmc
jecxz
es
ret
insb
add
add
cmc
xor
hlt
xor
dec
xchg
das
iret
out
imul
add
add
dec
fdivl
add
add
mov
xor
fnstcw
jne
pop
rcrb
sbb
es
xor
or
pop
nop
sti
dec
mov
xlat
leave
gs
pop
inc
int
sbb
push
adc
add
imul
mov
adc
add
adc
sub
add
add
mov
push
fstps
lock
xlat
rcrb
in
mov
dec
jmp
mov
xchg
daa
and
add
add
push
mov
pop
inc
jg
mov
test
lret
cmp
scas
dec
inc
pop
lods
or
cmp
pop
in
cmpsw
mov
mov
dec
lcall
inc
addr16
add
add
dec
or
jbe
cwtl
stos
add
add
add
fstps
cmp
cli
mov
adc
jns
or
add
add
aad
mov
inc
mov
mov
cmpsb
add
add
inc
push
pushl
add
add
lahf
in
dec
inc
cli
push
push
add
add
sbb
add
ret
push
pop
xlat
push
in
enter
frstor
xchg
inc
mov
inc
add
add
mov
jl
mov
loopne
mov
xlat
mov
popf
movsb
pop
repnz
pop
jns
cmp
add
add
push
mov
rorb
dec
add
add
jmp
cs
sub
jns
mov
outsl
xchg
dec
adc
xchg
or
add
add
mov
xchg
cltd
popf
cwtl
pop
lods
jecxz
scas
aam
jge
push
jb
adc
add
add
inc
add
add
jle
cmp
add
add
mov
pushf
fsubrl
push
jmp
popf
and
add
add
xorb
loopne
mov
adc
add
add
add
add
rolb
dec
cmp
add
add
jbe
out
or
add
add
mov
cld
leave
in
mov
and
dec
add
add
lahf
adc
outsb
stos
xor
add
add
cmpsb
dec
aas
adcb
mov
in
in
pop
jno
adc
outsl
aad
hlt
insb
add
add
ret
stc
push
imul
inc
jb
cmc
and
test
xor
mov
pop
sti
in
inc
push
mov
add
add
fcmovu
push
push
ljmp
ss
sub
aas
loopne
addl
jg
dec
out
cwtl
xor
insb
add
add
scas
add
add
add
pop
sub
add
add
dec
sarb
mov
add
cmp
adc
cmpsb
xor
outsb
dec
lahf
push
and
sub
push
xor
and
mov
lahf
iret
vhaddps
mov
sbb
lcall
outsb
mov
mov
cwtl
add
xor
cltd
and
xor
add
in
adc
lcall
insl
jns
jmp
jecxz
outsb
popf
mov
movl
xor
dec
add
add
iret
rol
cwtl
out
lods
shl
dec
mul
sar
push
aas
push
sbb
rcl
sti
add
pop
loope
jmp
mov
mov
aad
push
mov
mov
jo
in
xchg
xor
lock
cmp
push
imul
dec
sub
mov
push
adc
cmp
nop
es
in
dec
mov
cs
pop
pushl
inc
cmp
add
out
pop
xchg
jl
add
add
add
int
ljmp
scas
aam
add
in
sub
pop
mov
add
add
add
roll
jbe
test
sub
push
inc
sbb
insb
add
add
xor
xchg
rcrb
movsl
sub
movsl
in
test
daa
in
or
cmp
xor
iret
xchg
add
pop
push
outsl
fldl
inc
nop
les
add
add
sub
jmp
pop
push
scas
xchg
xor
cmp
sub
add
add
mov
add
add
mov
add
add
inc
idivl
pop
adc
stc
inc
mov
lods
or
mov
jo
and
add
add
and
add
add
push
pop
arpl
and
add
add
cmc
repz
pop
inc
xor
ljmp
in
pop
fidivrl
cmp
xor
add
mov
into
or
rep
loop
dec
je,pn
mov
xchg
and
add
add
ret
test
icebp
mov
dec
andl
rorb
xor
xchg
sbb
dec
mov
inc
adc
pushf
into
hlt
push
int3
xchg
add
add
add
add
add
jnp
mov
mov
push
sbb
and
popf
leave
add
add
add
in
cli
cltd
hlt
stc
mov
and
jecxz
cmp
xchg
pop
fcompl
cmp
fnstcw
add
adc
pop
es
call
test
idivl
movsl
pop
fdiv
pop
sbb
dec
dec
into
es
out
lock
adc
leave
out
jle
jne
repz
fwait
test
add
imul
add
add
ja
sahf
jmp
push
pop
sbb
add
add
mov
lods
cmc
ja
push
xchg
fildl
add
add
inc
xlat
xorb
mov
add
ljmp
add
xchg
pushf
sbb
or
popa
cwtl
out
stos
sarl
cltd
add
jne
pop
out
jns
lret
xor
jne
fchs
in
in
lcall
cmpsl
sbb
xchg
js
mov
sub
or
sarb
push
inc
add
add
mov
and
shl
or
add
push
sub
add
add
jae
ret
jmp
xchg
fwait
xor
cmp
mov
add
add
jae,pn
negl
das
iret
sub
enter
lods
jo
aad
mov
xor
imull
add
add
add
add
repnz
jb
popa
loope
lods
loopne
daa
popa
loop
cmp
fcmovnbe
lret
cmp
lods
sti
sarb
jmp
aas
dec
add
add
dec
imul
test
ret
inc
add
add
mov
cmpsl
and
mov
push
ror
scas
cmp
loop
cld
pop
mov
xchg
jae
iret
packsswb
and
add
add
add
add
sub
cmp
add
add
cltd
pop
xor
mov
jbe
in
pop
arpl
add
add
jb
add
add
mov
fwait
add
jno
pusha
mov
mov
jmp
jbe
mov
je
ljmp
pop
dec
xor
and
shl
xchg
adc
lds
dec
add
add
pop
rolb
xlat
cwtl
insl
aas
pop
pop
aam
jle
push
cs
hlt
cmp
xor
jg
add
leave
inc
push
stc
sub
repz
pushf
mov
mov
cmpl
and
sub
xchg
pop
popf
push
push
das
jns
mov
into
out
jp
inc
mov
ss
jmp
test
xchg
jb
add
add
jb
bound
jp
inc
push
addl
cs
add
add
add
add
fnstsw
xchg
in
mov
xchg
mov
out
inc
add
add
pop
xor
sub
pop
inc
lods
cmp
cmpsl
in
mov
testb
sub
add
add
das
popa
imul
sahf
mov
outsl
stc
xor
aam
fsubrs
push
mov
adc
lods
add
cmp
lcall
sub
inc
jns
fbstp
jae
jo
call
add
test
jb
scas
leave
scas
jge
xchg
fisubrl
add
add
add
jecxz
sub
rcrl
popf
sbb
mov
lods
bound
mov
cs
jb
in
mov
and
add
add
xor
xchg
fildl
aas
repz
ret
fmull
stc
popa
cmp
sbb
mov
arpl
mov
add
add
push
or
add
add
sub
mov
stos
or
add
add
sbb
add
test
es
add
add
cmp
mov
leave
and
fdivr
inc
mov
push
fiadds
add
fidivs
mov
sbb
pop
arpl
mov
fcmovne
enter
xor
ficomps
add
add
sub
add
add
ret
in
and
pop
aad
pop
inc
and
cmp
push
clc
mov
xchg
xchg
cld
iret
jmp
jbe
add
add
arpl
jne
xchg
pop
cmp
add
lcall
test
popf
dec
add
add
stos
push
mov
pop
xlat
pop
jnp
jecxz
data16
mov
inc
and
add
add
call
add
add
cmp
mov
stos
sub
xchg
add
push
cmp
push
pop
xor
fs
scas
mov
shlb
add
and
xor
push
dec
mov
add
add
and
add
add
add
faddl
add
call
cli
mov
sahf
movsl
push
jne
pop
push
loop
mov
loope
test
dec
xor
fldt
mov
xchg
dec
add
add
mov
push
jge
mov
pop
xorb
dec
shll
inc
mov
mov
sbb
sti
jo
imul
sub
sub
adc
imul
movsl
pop
push
idivb
movsl
sahf
sub
add
add
xchg
lahf
ss
mov
enter
add
add
cmpsb
movsb
fsubs
jne
cltd
inc
jmp
dec
add
add
outsb
or
adc
das
pop
and
push
inc
test
lea
sbbb
mov
out
dec
movsb
xor
xor
add
add
inc
mov
clc
cwtl
push
adc
add
sarl
jno
sbb
scas
push
bound
mov
leave
dec
and
add
add
add
add
mov
push
mov
add
add
sub
dec
ret
add
add
js
shrl
lret
lds
enter
lea
mov
mov
pop
popf
xor
mov
mov
movb
jne
cmp
fwait
daa
pop
pop
mov
lret
fstl
sbb
stos
sub
add
add
mov
stc
adc
sub
jns
add
add
mov
pop
rcll
pop
notb
xchg
jae
and
aaa
push
pop
lods
jl
rorb
fucomi
jne,pt
movsl
sahf
popf
xchg
ss
jge
idivl
insb
add
add
push
shrb
push
js
jbe
mov
pop
jmp
inc
adc
test
je
pop
mov
in
jle
movsb
fists
es
repz
mov
add
add
pop
fistpl
aam
in
jno
adcl
ljmp
decb
jae
lds
es
mov
ss
jecxz
cmpb
dec
in
push
mov
gs
icebp
pop
cmpsl
lret
std
dec
cld
mov
sub
xor
push
fildll
and
add
add
jae
fs
std
mov
mov
ja
add
fwait
mov
fistl
loop
xchg
mov
daa
test
inc
add
add
movsl
clc
mov
rclb
jp
sbb
add
movsl
xchg
jnp
sbb
mov
mov
les
loop
int
das
sbb
push
int3
push
mov
inc
add
add
push
stos
aas
add
add
add
dec
dec
shll
add
fwait
push
or
add
add
loop
mov
adc
jo
adc
or
add
add
pop
sbb
mov
mov
cld
xor
and
jnp
sbbb
iret
jle
jbe
ret
ds
into
mov
lret
add
add
sub
add
add
js
and
add
add
xchg
mov
mov
hlt
cmpsl
jl
adc
movsl
loope
add
test
add
loope
daa
aad
sub
or
add
add
testb
adc
test
xchg
add
aam
inc
add
add
dec
mov
loopne
mov
jnp
and
add
add
in
mov
push
stos
push
jo
lret
data16
mulb
hlt
jmp
jns
je
js
jp
test
loopne
rcrl
or
add
add
add
add
jo
push
mov
fldcw
add
inc
insb
mov
jno
xchg
or
add
add
mov
popa
nop
nop
test
aam
add
add
add
sub
sub
add
add
pop
dec
jmp
in
sti
inc
mov
add
imul
fimull
add
add
arpl
mov
jmp
adc
add
mov
xchg
push
xchg
lods
aaa
xchg
jae
cmpsl
decb
or
inc
movsb
mov
lret
sub
std
cltd
push
sbb
cmc
lret
or
add
add
inc
ja
sub
sub
int
sahf
into
in
cmp
test
loopne
pop
sub
ret
test
pop
test
movsl
push
xchg
xchg
push
xor
jns
adc
jbe
rcrl
rorl
pop
add
mov
mov
orl
sub
sub
add
add
inc
out
dec
cmp
in
jno
xor
js
fisubl
add
fisubrl
or
mov
scas
xchg
scas
aam
or
add
add
mov
add
add
jp
add
add
add
xlat
stc
adc
outsb
jmp
jl
loop
mov
sbb
add
cli
enter
es
jmp
repz
lret
jns
out
ds
loope
repnz
aad
adc
sbb
inc
repnz
mov
outsl
inc
mov
in
pop
out
add
add
add
inc
imul
sbb
xor
add
sbb
adc
jne
inc
mov
repnz
dec
xchg
mov
add
dec
lds
add
jne
dec
movsb
push
add
add
cmp
mov
into
cmp
mov
add
add
add
add
xlat
pop
pop
push
fisubrl
lods
das
adc
adc
xor
or
push
nop
pushf
dec
mov
add
add
ss
add
add
fwait
add
add
sbb
rolb
test
fsubs
aaa
arpl
add
and
add
add
jnp
adc
cmpsl
adc
and
add
add
add
add
add
popf
pop
in
mov
inc
add
add
push
cmpsl
popf
cs
xorb
add
add
add
xor
push
jbe
bound
and
add
add
mov
lahf
sar
sub
mov
lret
sbb
add
or
add
and
les
mov
add
add
and
js
cmpb
fisttpl
jbe
sbb
cs
aam
cmpb
jecxz
mov
sahf
rol
or
dec
pop
add
add
cmp
dec
push
jae
jne
push
sub
test
mov
arpl
cmp
jno
cmp
or
aas
cmp
jae
inc
mov
imul
jns
cld
xchg
sub
add
stc
insl
lods
std
cmc
sbb
leave
dec
lock
ds
sub
ja
enter
cmpl
mov
add
add
and
add
add
stc
pop
js
xor
in
test
add
roll
dec
add
add
pop
ds
sbb
or
in
sub
mov
add
adcl
add
lret
lods
push
aam
xor
or
add
add
add
loop
imul
xor
dec
scas
iret
adc
add
add
lea
add
sbb
js
dec
adc
cs
cmpsl
mov
fdiv
cmpsb
xchg
aaa
ret
ret
ficoms
mov
cmpsb
cmp
ds
dec
test
mov
mov
inc
xchg
inc
pop
mov
mov
add
or
add
add
jmp
insb
mov
aaa
mov
sub
or
out
dec
jo
imul
add
pusha
add
add
mov
movsb
inc
push
jmp
adc
cld
xchg
xor
lcall
add
add
mov
mov
scas
inc
mov
movsl
ret
jmp
aam
sbb
in
cli
cld
test
or
insl
lods
bound
add
add
and
dec
in
imul
add
add
les
mov
cli
rolb
fiaddl
or
xor
aaa
test
test
out
xorl
push
mov
mov
xchg
add
orl
add
add
lahf
mov
shlb
imul
sub
mov
rorb
add
aam
repnz
pop
rcl
outsb
imul
pusha
add
add
or
jbe,pt
roll
pop
cmp
push
repz
add
lock
repnz
xchg
outsl
rcrl
mov
sti
jno
imul
hlt
cmc
scas
aas
lock
enter
dec
sbb
adc
add
add
stc
notl
mov
sub
cmp
add
pop
sbb
cwtl
movsl
imul
adc
add
add
mov
mov
or
add
add
idiv
insb
mov
mov
sub
add
add
loope
and
add
add
add
iret
lret
daa
cmp
into
pop
pop
clc
ror
dec
es
into
xor
dec
add
add
jne
jge
sbb
fists
data16
xchg
mov
cmp
jl
fildl
stos
lret
imul
add
cmpsb
add
add
add
add
add
mov
adc
imul
inc
loop
out
dec
arpl
push
cmp
leave
xor
mov
mov
cmc
lahf
and
adc
dec
add
add
icebp
faddl
inc
fnstsw
push
xor
rclb
push
std
xor
sarl
out
xor
push
bound
cli
pop
std
ss
scas
fdivrs
ret
daa
mov
jmp
push
inc
mov
stc
and
add
jbe
leave
loop
clc
sub
add
add
push
sbb
sub
add
add
jo
mov
xchg
cltd
push
movsl
cmp
add
popf
outsl
test
insb
mov
outsb
cmp
std
sub
outsb
dec
mov
cmp
outsb
fucomp
scas
and
add
add
xchg
loope
loopne
stc
push
test
in
push
dec
and
lret
jge
xor
add
add
movq
in
xchg
jmp
in
iret
hlt
mov
bound
mov
hlt
push
rol
and
mov
push
dec
add
add
ficompl
inc
add
add
fnstcw
dec
cmp
add
add
push
dec
cmp
imul
mov
mov
shrl
jnp
pop
cwtl
in
subb
idivb
add
add
push
pop
repnz
aaa
add
sub
add
add
add
add
adc
adc
jl
insl
int3
loop
xchg
mov
movsb
mov
pop
lods
adcl
mov
jb
out
mov
ret
sub
add
add
xor
mov
test
add
mov
repnz
into
and
inc
mov
and
sbb
loop
add
add
add
push
lret
cmp
ret
xchg
je
push
cmp
outsl
aam
or
inc
dec
add
add
les
imul
add
add
mov
pop
push
inc
inc
loope
aad
push
xor
adc
add
inc
mulb
loopne
add
adc
in
adc
jb
inc
mov
push
mov
push
mov
sub
add
add
sbb
jns
pop
call
add
icebp
jp
inc
dec
mov
jnp
add
add
or
jl,pn
add
add
lods
sete
mov
add
add
aam
pop
ljmp
ljmp
add
add
dec
and
add
add
lret
enter
inc
inc
push
les
add
add
test
nop
shll
inc
rcl
popa
pop
cs
ljmp
add
add
sub
pushf
lods
fstpt
xchg
out
insb
add
add
cmpb
mov
out
ss
movsl
pop
cli
fistl
mov
push
test
jb
lea
sub
add
add
stos
sub
insb
mov
jecxz
pop
scas
lret
int
sub
enter
xor
sbb
gs
xchg
sti
xchg
enter
and
dec
pop
movsl
es
add
dec
add
add
fnstsw
test
dec
cwtl
pop
ror
jno
mov
inc
outsb
jle
mov
push
sub
add
add
outsl
sbb
push
in
sti
cltd
sub
sbb
add
add
inc
sub
xor
jp
icebp
add
add
add
pop
test
cltd
into
xor
mov
push
shll
jae
pop
cmp
push
lea
add
repnz
dec
pop
shrl
pop
add
ja
nopl
and
inc
jge
dec
mov
out
out
sub
add
add
mov
dec
add
add
and
test
add
aaa
mov
movsb
cltd
add
ss
add
add
leave
rcrb
imul
mov
add
cmp
xchg
test
jecxz
lret
outsb
mov
add
add
jp
lcall
fsubrs
sbb
add
mov
add
out
pop
jae
xchg
jl
pusha
add
add
mov
xchg
shrb
add
ljmp
outsb
jl
ds
cmp
add
add
sbb
insl
add
test
les
inc
sarl
and
movb
mov
stos
push
repz
cmpsb
mov
pop
add
inc
leave
cmc
inc
andb
fadds
fisttpl
sbb
jmp
filds
repz
sar
fwait
push
xorl
fsubrs
mov
loop
xchg
inc
sub
and
adc
dec
aas
mov
push
cld
add
add
add
or
push
lret
cmp
jno
mov
jbe
or
cmpsb
mov
out
rcrb
inc
mov
leave
mov
dec
in
mov
test
lcall
mov
movsl
rolb
mov
cwtl
movsb
fisubl
jg
push
mov
sbb
mov
jg
bswap
jb
mov
aas
pop
pop
pusha
mov
sahf
mov
xor
mov
pusha
add
add
les
mov
dec
xor
inc
cld
bound
jle
push
lds
inc
sarb
add
pop
ja
inc
or
fstpt
lcall
sub
sti
sbb
pop
adc
mov
mov
add
ret
je
pop
mov
jno
jno
pop
test
daa
mov
add
cmp
inc
add
add
pop
int
mov
jbe
and
add
add
add
fcmovnbe
mov
mov
jb
mov
sub
xorl
or
mov
jbe
pop
int
and
ret
pop
add
cltd
dec
mov
imul
sub
nop
scas
outsl
adc
mov
negl
repnz
rol
xor
sbb
scas
rcrb
nop
mov
and
adc
mov
mov
mov
andb
add
mov
lcall
push
pushl
mov
scas
pop
pop
adc
sbb
jae
aam
enter
ja
inc
adc
push
cmp
dec
add
add
mov
dec
add
add
icebp
xchg
sar
mov
add
add
dec
jp
pop
sub
push
fistps
inc
xchg
sarl
jecxz
lods
and
fstps
add
mov
add
inc
and
adc
jo
or
dec
mov
or
lret
jp
sbb
filds
add
in
inc
mov
push
inc
and
jle
andl
out
push
xlat
mov
adc
pop
mov
mov
push
inc
mov
push
inc
and
out
adc
scas
xchg
xchg
jb
insb
mov
mov
jne
adc
mov
push
mov
add
add
xor
cmc
mov
push
roll
jge
push
out
enter
cmp
or
jg
and
inc
add
add
lahf
inc
inc
mov
ret
test
ja
mov
cmpb
inc
rclb
inc
aam
xchg
xchg
inc
add
add
mov
cmp
sbbl
add
inc
xorb
jbe
ficoms
xchg
sbb
adcl
mov
add
add
aam
pop
inc
push
popa
inc
out
sbb
jg
xlat
adc
outsb
adc
or
mov
xchg
dec
sbbb
insl
test
pop
test
mov
add
mov
imull
mov
add
add
mov
xchg
shrl
repnz
xor
or
add
add
and
add
add
mov
cmp
es
mov
ficoml
iret
js
push
hlt
mov
leave
and
lods
mov
adc
cmpsl
sub
add
add
nop
cmc
sbb
gs
add
xor
pop
pop
cmc
sub
add
ret
arpl
cmp
cmp
rclb
sbb
xchg
cmpsl
int
jno
dec
shr
sub
add
adc
and
xor
dec
mov
mov
test
test
cmp
sbb
inc
add
add
xchg
shrl
xchg
shlb
sub
mov
dec
cld
enter
push
push
inc
xchg
push
mov
add
packssdw
mov
aas
add
add
add
in
outsb
insb
add
add
shll
add
add
int
xchg
stos
add
add
add
mov
aaa
std
popa
lcall
int
pop
test
js
add
add
add
add
repnz
and
add
add
inc
aam
push
mov
cmpsl
testl
add
add
or
add
add
mov
add
add
out
adc
xor
or
js
ret
xor
sub
sbb
fiadds
test
mov
jbe,pn
jle,pn
inc
mov
add
add
mov
jp
pusha
mov
in
popf
arpl
push
daa
xor
cltd
adc
add
add
push
xchg
out
in
mov
sub
sti
mov
add
add
clc
inc
popf
push
arpl
sarb
ljmp
mov
lret
adc
sub
add
add
lahf
lahf
shl
out
mov
into
sub
das
jecxz
jnp
pop
insb
add
add
das
stos
lock
jb
ja
je
xchg
inc
xchg
dec
sub
add
add
add
add
pop
lcall
mov
fildll
jge
cmp
clc
lcall
divl
sub
add
fisubs
repnz
in
dec
add
add
fidivs
insb
add
add
or
movsl
in
inc
add
add
jb
es
loopne
adc
lods
inc
addr16
in
adc
add
scas
inc
add
add
es
in
jno
test
sti
adc
add
pop
mov
mov
dec
sbb
and
fisubrs
add
dec
pusha
add
add
int
fstp
jns
dec
mov
add
or
add
add
add
or
pop
dec
xor
sub
inc
mov
cmp
add
add
jecxz
or
push
das
setl
out
pop
inc
add
add
push
xchg
in
fdivl
hlt
xchg
mov
mov
cli
in
aam
pop
dec
jns
add
sbb
xorl
rorl
cld
movsb
sbb
push
cwtl
fistps
mov
shll
cmp
jp
repnz
loope
add
sahf
mov
jmp
loopne
out
adc
xor
std
pushf
push
push
shl
fwait
jmp
arpl
jmp
add
ret
jns
repz
pusha
mov
pop
in
pop
das
dec
inc
and
add
add
inc
int
jmp
iret
xchg
dec
lock
call
lock
add
int3
sub
cmp
adc
mov
inc
adc
fidivl
add
daa
mov
inc
push
rcrl
test
mov
and
add
add
out
shlb
push
and
add
add
push
lods
cld
mov
imul
fwait
lcall
jg
scas
lea
aam
popa
addr16
ficompl
add
add
push
or
cld
inc
mov
iret
jmp
out
xchg
push
add
add
lret
or
add
jge
push
adc
and
add
add
xchg
dec
xchg
adc
cli
insb
add
add
pop
loope
scas
aad
out
and
cmp
pop
jge
xchg
push
mov
cmpsl
in
in
mov
in
xchg
aas
les
push
add
icebp
sbb
push
mov
add
add
cltd
adc
lea
add
sbb
add
ss
cmp
fistps
add
add
cld
inc
andl
jnp
mov
and
mov
inc
into
xor
push
pop
or
add
add
push
push
cld
cmpsl
xchg
movsl
jl
mov
mov
fsubs
icebp
out
pop
add
add
add
and
inc
pop
sarl
hlt
inc
inc
add
add
call
stos
mov
ret
insl
add
add
add
sbb
cli
mov
outsl
hlt
jbe
push
in
movsl
mov
scas
out
cmp
mov
insb
mov
cwtl
cmp
fldl
and
add
add
or
loopne
aaa
mov
pop
popa
hlt
push
jo
mov
adc
repz
add
push
int
gs
jmp
dec
and
add
add
add
cmp
add
inc
cmpl
add
adcl
jne
inc
mov
pop
enter
mov
add
ss
xchg
movsb
mov
int3
pop
push
in
loopne
aas
mov
cmp
and
add
insb
mov
movsb
push
icebp
out
ljmp
and
ss
arpl
out
mov
push
mov
scas
mov
pusha
mov
dec
rolb
add
add
push
mov
out
push
out
scas
test
mov
enter
mov
bnd
jae
dec
push
outsl
pop
test
mov
add
movsl
inc
shlb
aad
jno
or
mov
add
jb
push
or
add
add
xor
std
jno
or
mov
cli
lahf
sahf
jge
insb
add
add
jecxz
movsl
push
fisttpll
dec
add
add
adc
add
add
outsl
sbb
xchg
add
add
cmpsb
in
lods
dec
sub
cmp
inc
andl
mov
insb
mov
sbb
lods
xchg
mov
pop
ljmp
add
add
jge
xchg
xchg
adc
mov
add
lods
sahf
sbb
out
sets
js
aaa
clc
inc
add
add
pop
je
xor
add
add
add
add
sbb
xor
lods
repz
xchg
pop
mov
fsubrl
and
or
and
add
add
fs
push
inc
mul
lods
pop
cmpsb
subb
mov
push
stos
pop
shll
shrb
add
lods
movb
mov
int3
add
adc
popa
pop
ljmp
dec
add
add
cmp
pop
rcr
lahf
loope
sub
pushf
inc
mov
in
jmp
lret
lret
mov
add
add
lock
mov
add
add
insb
add
add
inc
mov
mov
je
les
fcos
lcall
push
sub
add
add
jg
mov
sbb
clc
push
push
out
sbb
mov
xor
mov
stc
push
adc
xor
pop
out
push
into
mov
push
inc
or
inc
mov
movl
lds
ret
pop
pop
iret
test
icebp
adc
jge
xchg
scas
xorl
xor
shl
arpl
outsl
sub
add
add
sbb
das
ja
xchg
in
mov
cmp
cmc
test
in
das
sbb
xchg
ret
xor
daa
cmp
dec
xor
inc
inc
mov
sub
pop
ljmp
cmp
data16
iret
adc
pop
dec
mov
int
mov
jmp
mov
cmp
or
add
add
ljmp
adc
inc
ficomps
jbe
sub
add
add
xchg
pop
fsubr
xchg
inc
add
sbb
repz
inc
mov
mov
lods
fcomps
sub
jnp
mov
jae
sbb
addl
or
and
add
add
add
add
dec
push
data16
test
pop
cmp
stos
sarl
roll
add
add
daa
xor
lds
fsubr
std
dec
mov
sbb
leave
mov
fwait
loopne
in
les
cmp
cmovg
add
add
mov
mov
arpl
dec
mov
mov
add
add
loope
ror
xchg
xchg
lret
pop
jmp
or
add
add
add
add
add
add
pop
ss
cmpsl
push
fwait
stos
sbb
icebp
ja
jmp
data16
pop
adc
mov
mov
or
sub
repz
add
add
add
sbb
int
and
add
add
ret
mov
arpl
add
add
add
add
bound
lock
jb
stc
jle
imul
adc
xchg
add
add
rorb
shrb
add
mov
add
add
mov
dec
mov
adc
adc
mov
dec
sub
or
nop
pop
test
mov
xlat
cmp
sub
fldl
add
add
add
push
in
iret
ret
scas
mov
dec
add
add
sub
jns
movsl
adc
add
add
add
icebp
ja
adc
add
jns
mov
mov
gs
pop
ss
pop
push
in
jb
fs
lcall
iret
lret
jmp
dec
add
add
xchg
ljmp
iret
xchg
out
cli
popa
jecxz
inc
add
add
aam
jg
mov
mov
stos
mov
imul
mov
mov
addr16
jae
int
and
add
add
sbb
pop
xchg
pop
inc
int
leave
adc
push
sbb
cmp
pop
pop
xlat
inc
or
sub
push
jo
iret
inc
testl
add
xor
pop
push
cld
fcomp
mov
add
add
ja
sbb
add
test
cmpsb
sub
fdivrl
mov
push
jae
sbb
pop
jne
xor
xor
dec
mov
or
stos
jecxz
pop
xchg
mov
add
add
xchg
dec
es
xchg
ja
mov
add
add
into
ret
ja
or
clc
aaa
add
add
add
add
fs
pop
rcr
mov
inc
mov
xor
lods
movsl
bound
pushf
sbb
mov
add
add
pop
dec
sarb
pop
out
xchg
adc
mov
leave
lea
cmp
mov
cmc
adc
jg
inc
mov
add
add
mov
sbb
add
add
shlb
xor
push
out
inc
sub
or
add
add
hlt
inc
mov
clc
mov
ret
sahf
fmull
add
add
xor
add
push
dec
loopne
mov
add
nopl
aad
lods
mov
cmp
jge
aam
jae
shll
jg
jge
pop
add
add
daa
pop
add
or
add
add
out
pusha
add
add
jl
pop
test
dec
into
pushl
arpl
test
imul
dec
mov
mov
push
dec
add
add
pop
pop
js
push
mov
or
int3
sub
dec
sbb
mov
jl
jg
fisubs
mov
dec
mov
mov
mov
faddl
mov
arpl
in
dec
add
add
pop
xor
mov
push
cmpsb
mov
pop
mov
out
or
aad
pop
push
leave
leave
mov
add
add
mov
mov
sahf
out
fsincos
inc
dec
cli
leave
rcl
sub
into
in
rcrb
mov
inc
es
mov
divb
jo
mov
negb
sub
add
add
mov
xchg
cltd
clc
lret
pop
pop
and
cli
movsl
xor
add
in
hlt
ret
aas
push
cmp
mov
push
push
mov
jg
inc
aam
xchg
xorb
lahf
jae
test
popf
jge
or
or
popa
mov
fsubs
inc
sub
add
add
cwtl
sub
add
add
stos
pop
push
notb
xor
fimull
andl
push
sarb
add
mov
sub
add
add
pop
pop
pop
fsubs
add
add
loop
xchg
jb
or
pop
icebp
sub
mov
push
mov
sbb
or
add
add
leave
dec
je
push
test
dec
mov
adc
and
fwait
xchg
scas
or
pop
out
lods
addr16
xchg
xchg
mov
ss
notl
in
mov
cmp
insl
movsb
repnz
push
add
in
out
push
adc
nop
lds
add
add
fisubrl
movsl
enter
adc
call
add
fisubs
adcb
and
add
add
ljmp
pop
and
add
add
add
add
mov
pop
xchg
std
cwtl
lods
xchg
inc
and
and
in
shll
add
add
add
add
mov
mov
mov
pop
pop
cmp
jg
mov
add
mov
ret
jmp
add
pop
mov
negb
and
add
sbb
rorl
mov
or
add
add
bound
iret
ficoms
loope
pushf
scas
mov
mov
mov
ljmp
adc
add
jl
mov
mov
stos
adc
js
or
jcxz
pop
sbb
xor
cmpsl
push
das
hlt
jle
pop
or
loope
shll
insl
sti
scas
in
cmpsb
add
add
add
loop
arpl
xorb
aam
pop
mov
fwait
in
sbb
scas
cmpsl
mov
add
inc
or
add
add
or
jle,pt
jmp
gs
daa
pop
inc
sub
cmp
ficoml
movsb
dec
push
inc
mov
jp
sbb
outsl
push
jmp
xchg
lods
imul
sub
rcrl
add
add
jbe
iret
adc
popa
stos
fsts
add
add
sub
mov
pop
jne
jbe
jg
mov
add
fisubs
inc
push
divb
mov
mov
jbe
jmp
test
pop
movb
mov
sub
add
add
add
mov
add
add
mov
ja
icebp
pop
iret
cmp
add
add
ret
lods
imul
add
or
add
sub
add
add
dec
mov
ret
inc
add
add
jge
push
xchg
sub
add
add
decl
add
add
out
push
cli
xchg
push
sub
sarl
lahf
push
adc
adc
push
cmp
in
cmp
push
mov
rorb
push
push
pop
sub
lock
shll
mov
mov
xchg
int3
xchg
call
sub
xor
add
add
call
add
add
inc
xchg
aaa
mov
xchg
jno
push
jo
sub
shlb
push
sub
add
add
or
dec
and
js
fdivs
add
add
in
jle
jo
loope
pop
daa
fstpt
pop
inc
add
add
push
cmpsl
cwtl
push
cmpsl
lret
movsl
addr16
push
cli
mov
add
add
mov
xchg
mov
mov
dec
in
fimull
jno
mov
lcall
ds
aad
add
add
ss
inc
insl
test
add
add
push
gs
lahf
or
jb
dec
sahf
repz
adc
notl
xor
in
sub
add
add
and
cwtl
aad
outsb
scas
cmp
shll
pop
ret
sub
popf
mov
fnstsw
add
fs
cmp
push
mov
push
xchg
cmc
scas
sub
add
add
dec
lock
shl
sahf
xor
push
test
add
jb
add
add
add
mov
mov
mov
fbld
out
mov
add
add
cld
sub
fwait
xor
xorb
sti
imul
ret
push
push
cs
hlt
push
dec
mov
addr16
pushl
mov
or
sarb
mov
mov
cmp
dec
es
jp
out
rcr
daa
jns
pop
shll
jle
xor
xchg
out
lahf
testb
add
mov
mov
fildll
cwtl
test
rcr
sahf
inc
testb
jge
inc
xlat
inc
iret
mov
sar
into
sbb
pushf
lret
loope
inc
leave
xchg
sbb
bound
stc
push
sbb
add
add
cwtl
and
cli
aam
and
push
pushf
xchg
pop
cmp
or
adc
orb
add
in
mov
loopne
je
test
add
outsb
inc
sbb
lret
outsb
stc
jne
or
mov
int3
sbb
shrl
jbe
dec
mov
lret
mov
into
in
mov
dec
ret
mov
loop
push
jb
cmp
xchg
add
add
cmp
push
jp
fdivrs
push
cmpsb
pop
out
fsubrs
pop
loope
out
xor
add
add
scas
cli
insb
mov
sub
into
dec
add
add
fcomi
pop
das
arpl
jmp
push
leave
jle
insl
outsl
cmpsl
mov
mov
add
add
push
and
cmp
or
cld
inc
add
add
adc
cmp
movsb
jle
out
test
pop
mov
lahf
sbbl
mov
sbbb
aam
lret
push
jle
mov
inc
add
add
addr16
or
pop
loopne
lock
pop
xchg
mov
adc
sub
fwait
into
fisttps
sub
cli
add
add
add
xchg
lds
cmc
jge
in
pop
jb
jle
rcrl
in
hlt
daa
arpl
mov
orl
add
add
and
add
jno
xor
sti
fs
insl
mov
add
add
outsl
dec
jo
ljmp
sbb
loope
add
add
loope
fucom
or
mov
and
add
add
cmpl
lahf
pusha
mov
insb
mov
mov
stc
push
mov
call
or
imul
adc
imul
adc
ds
xor
xor
add
fs
mov
mov
test
add
add
icebp
xor
adc
test
pop
in
add
mov
xor
fldt
xchg
jb
mov
scas
hlt
icebp
fs
mulb
mov
cltd
and
test
movsb
pop
pop
gs
in
mov
jo
push
ret
je
repnz
add
add
mov
sub
add
add
and
jo
cmp
push
aad
or
mov
fstl
mov
xchg
add
lods
add
add
add
inc
out
lret
mov
data16
mov
xchg
push
imul
and
js
jns
gs
mov
pop
test
mov
jbe
pop
repz
jb
int
mov
sbb
mov
in
ja
pop
ret
cld
test
and
add
add
lods
mov
jmp
adc
add
adc
stc
adc
inc
add
add
mov
popa
int3
and
or
addb
xchg
out
cmp
sub
add
add
and
add
add
imul
add
add
call
add
and
add
add
out
xchg
test
xchg
or
out
inc
lock
xor
xor
add
pop
out
cli
dec
inc
add
add
ds
lret
ljmp
xchg
xchg
cmp
arpl
andb
iret
sbb
ss
inc
mov
repnz
shll
jmp
pop
mov
add
js
mov
add
jnp
adc
pushf
inc
adc
leave
xchg
dec
cwtl
mov
inc
or
add
add
inc
scas
mov
dec
and
add
add
or
add
add
icebp
stos
sti
pop
xor
pusha
add
add
pop
push
lock
add
cs
inc
mov
scas
int3
iret
dec
add
add
fisttps
xor
lahf
js
mov
mov
popf
or
add
add
add
add
cmpsl
test
stos
das
inc
push
test
cmpsl
movsb
mov
mov
xor
jbe
inc
add
add
call
imul
add
test
mov
add
mov
cmpsl
leave
cltd
mov
cmpsb
mov
xor
bound
mov
mov
add
adc
out
mov
jmp
xchg
out
insb
add
add
cwtl
ss
arpl
insl
and
xor
add
sub
add
add
add
fistpl
xchg
decl
add
add
add
mov
push
push
adc
add
add
std
sahf
aam
aam
mov
mov
pop
stos
ja
sbbl
add
add
inc
frstor
add
add
addl
rolb
sub
pop
xchg
xchg
dec
push
test
daa
shll
cmp
add
add
stc
test
pusha
add
add
mov
neg
jae
daa
mov
in
fidivl
mov
mov
cmp
add
add
add
cwtl
dec
lret
imul
movsl
xchg
mov
test
xchg
or
xor
xchg
ret
loopne
sbb
cmpsl
andb
or
add
add
cld
lock
add
xchg
inc
sbb
add
add
add
add
adc
stos
pusha
mov
lret
out
xchg
jo
out
xchg
inc
mov
cmp
fdivrs
mov
push
cmpsb
push
movsl
add
add
loop
push
dec
movsb
sbb
add
add
adcl
sub
cwtl
ret
adc
add
add
movsb
jbe
in
jne
rcrb
sbb
int
and
or
add
add
pop
dec
repz
pop
arpl
cmp
sbb
stos
jb
std
cltd
mov
add
sub
add
add
in
xor
mov
push
in
and
add
add
ss
cwtl
jae
outsl
pop
lds
add
lahf
std
scas
out
ds
aas
lods
cwtl
xor
aam
enter
inc
mov
xchg
and
inc
es
rcrl
add
add
subl
outsb
sti
js
adc
insl
int
aaa
add
pop
inc
mov
ss
fsubs
add
add
push
int
out
daa
push
fldenv
movsl
or
or
jmp
inc
adc
xchg
add
adcl
cmp
mov
stos
iret
insl
into
push
pop
pop
pop
mov
call
dec
add
add
mov
add
adc
add
add
ljmp
dec
mov
cmpsb
shll
lock
test
and
add
add
xor
add
add
add
nop
shlb
add
add
dec
and
add
fnstenv
push
jmp
add
add
shlb
inc
fcmovb
cmpsb
jmp
push
lret
inc
adc
pop
ja
mov
es
mov
cmp
mov
sti
sahf
mov
sbbb
mov
ret
xlat
in
std
ss
iret
into
movsl
inc
jge
pop
pop
pusha
add
add
add
add
mov
push
sub
lcall
ja
push
xchg
lret
xchg
and
mov
out
xlat
in
movsb
xchg
out
mov
aas
loopne
jl
jmp
add
add
in
fcomps
jge
roll
mov
add
add
insb
add
add
scas
int3
inc
and
add
add
jne
insl
jmp
adc
sti
cmpsb
xchg
je
adc
loopne
lock
inc
mov
jbe
and
pop
mov
int3
loopne
lea
add
add
dec
fcoms
add
jg
pop
sbb
add
inc
add
add
imul
push
jbe
mov
je
push
hlt
daa
mov
pop
mov
and
add
add
pop
dec
add
add
xor
add
add
or
add
add
add
pop
int
jno
mov
mov
mov
mov
clc
jo
mov
or
add
add
add
stos
jbe
pusha
add
add
lock
dec
not
pop
fstpl
fcompp
inc
and
sti
mov
rorl
cmc
inc
add
add
sbb
and
das
fstp
mov
mov
push
sbb
push
je
outsl
cmp
xchg
cltd
ljmp
pop
dec
inc
add
add
cmpsb
repnz
insb
add
add
xor
std
shlb
mulb
dec
arpl
inc
add
add
add
lcall
lcall
add
add
jb
mov
jp
inc
push
test
add
adc
lcall
aam
insl
dec
add
add
xchg
add
add
add
add
fdivrl
out
add
into
pop
je
jmp
jg
ss
aas
dec
fsubrs
mov
or
and
sub
add
add
fisubs
lahf
stos
push
test
inc
mov
add
add
rcrl
arpl
jl
pop
sahf
jb
pop
cwtl
divb
aas
mov
and
out
notb
sub
add
add
popf
push
mov
add
add
cld
adc
add
add
add
add
add
dec
mov
aam
mulb
jb
ret
ret
inc
mov
add
outsb
sbb
daa
pop
inc
and
std
sarb
outsl
in
fadd
ffree
xlat
std
subb
add
inc
mov
enter
mov
test
jne
xor
call
add
cmpsl
jb,pt
mov
setg
in
mov
or
rorl
jl
and
dec
push
jg
aas
pop
loope
mov
cli
mov
xchg
mov
mov
iret
inc
mov
sub
add
add
inc
mov
lret
add
outsb
xor
push
into
jle
outsb
cld
std
mov
sbb
fmull
lcall
dec
mov
sbb
sbb
push
das
xchg
stos
adc
mov
leave
insl
int
jnp
mov
in
xor
sbb
inc
mov
cwtl
mov
xchg
mov
add
mov
add
movsl
xor
push
xchg
dec
mov
mov
adc
push
jo
mov
sbb
add
fadd
test
subl
mov
mov
xchg
adc
jmp
xchg
mov
add
add
divl
adc
and
add
add
es
pop
lret
mov
inc
xchg
add
jp
adc
mov
movsl
in
mov
push
cld
pop
adc
add
add
sahf
movsb
out
stos
dec
cltd
push
jb
mov
jne
fs
int3
sbb
dec
lahf
mov
add
add
outsl
int3
es
add
add
jecxz
xlat
push
mov
out
or
add
fistpl
icebp
add
add
movsl
pop
xor
pop
clc
fstpt
lods
bound
add
mov
jle
leave
or
adcb
add
add
inc
add
add
jns
jle
mov
je
add
add
pop
arpl
push
subl
add
jmp
cmp
sti
fistpll
fnstcw
xchg
lret
add
add
add
xchg
roll
lret
test
lret
add
add
mov
popf
in
or
lret
push
push
pop
leave
jmp
add
je
push
xor
rcl
jl
sub
leave
test
jge
jns
clc
lahf
fcoml
mov
test
jecxz
sub
push
in
pusha
mov
jl
loop
push
pop
xor
out
push
cmp
add
loope
daa
in
mov
mov
add
add
call
push
mov
jbe
dec
dec
adc
add
push
adc
cld
lods
sbb
test
popw
lock
xchg
es
inc
push
dec
mov
mov
push
mov
and
add
add
or
add
add
jae
loop
xchg
rcll
adc
and
add
add
mov
cmpl
jge
mov
add
lcall
add
add
cmpl
loop
add
add
fstpl
outsl
or
add
add
stos
sahf
mov
clc
mov
add
dec
add
add
mov
xlat
mov
add
add
mov
fwait
add
mov
divl
add
loopne
or
add
add
and
add
add
test
jno
xchg
jne
cmpsb
xor
add
jg
int3
jo
sub
push
aas
add
add
add
add
add
add
add
add
add
mov
mov
fmuls
mov
mov
xor
add
cmp
push
push
pop
xor
je
rcr
std
mov
dec
jmp
fistps
mov
sahf
lds
fcmovnb
out
mov
or
xorl
insl
mov
xchg
sbb
or
sbb
xchg
mov
inc
push
push
int
shlb
lea
lds
inc
mov
adc
dec
es
pop
stos
sbb
insb
mov
cmp
scas
lea
add
add
push
or
add
add
add
add
insb
add
add
jmp
ret
out
mov
lahf
jmp
mov
rcrl
jmp
je
lods
jae
sub
push
or
call
ret
aad
sub
sbb
lcall
test
xchg
loop
lods
popa
cmpsl
mov
mov
push
push
dec
add
loop
cmp
mov
popf
pop
repz
pusha
add
add
xor
outsb
dec
mov
stos
imulb
lods
pop
inc
shll
add
add
add
dec
add
js
outsb
adc
imul
push
lahf
aad
jmp
pop
or
out
imul
push
jge
mov
hlt
int3
dec
cs
xchg
sub
cmp
inc
xchg
add
add
out
push
pop
adcb
frstor
nop
mov
push
lahf
aaa
or
pushf
sub
add
add
cmpsl
push
cltd
pop
lahf
mov
and
ret
xchg
mov
pop
mov
add
add
mov
imul
mov
or
cmp
dec
into
ret
popf
sarb
outsl
pop
enter
fnstsw
mov
fs
push
or
push
iret
mov
stc
or
les
in
aaa
mov
mov
jns
or
ljmp
rclb
add
pop
fyl2x
cmp
cmp
add
cld
mov
jo
jne
push
and
leave
adc
shl
movsl
lods
repz
or
pop
outsb
mov
add
add
mov
push
in
jl
pushf
pop
imul
sbb
leave
xchg
jg
test
cmp
mov
and
sub
out
pop
sti
xchg
mov
lahf
push
mov
js
ret
mov
add
orb
sub
jmp
repz
cltd
in
cmp
ljmp
add
add
add
add
cmp
imul
mov
aam
mov
inc
cld
rcr
push
inc
inc
dec
pop
mov
shlb
pop
scas
cwtl
popf
mov
add
add
daa
mov
mov
outsl
shrd
loop
sub
add
add
cmpsb
adc
push
jecxz
sarb
jno
mov
mov
inc
mov
push
jmp
jne
leave
mov
mov
mov
fcoml
in
sbb
test
cs
cmp
mov
lea
xor
clc
push
loop
inc
add
add
dec
jle
pop
lea
mov
cmp
movsb
shll
in
test
loopne
inc
add
add
mov
xchg
int3
or
add
push
or
push
mov
call
int3
pop
adc
and
add
add
jb
mov
adc
dec
adc
cmpsb
dec
sbb
lret
jo
test
rcrl
imul
mov
push
and
scas
mov
pop
mov
add
dec
nop
sbb
cmc
bound
in
and
xor
rol
xorl
push
jge
jmp
mov
hlt
loopne
movsl
pop
sub
add
add
add
add
push
dec
dec
cmp
sarb
loop
inc
pop
sub
icebp
sahf
mov
add
add
mov
rcr
loope
xchg
insl
dec
cmpsl
sti
mov
push
lods
jmp
mov
out
cmp
add
sub
lea
push
xor
es
mov
out
fisubl
pop
loopne
aaa
push
repz
test
fisubrs
ret
xor
leave
fstps
jmp
mov
cltd
xlat
loopne
jl
aaa
adc
adc
clc
jmp
rclb
lock
adc
out
aas
ds
lds
cmp
or
test
xchg
pop
cld
enter
cmp
mov
add
add
mov
adc
xchg
sbb
add
add
adc
loopne
pop
icebp
dec
push
call
mov
roll
add
add
nop
movsl
aam
xchg
lahf
mov
mov
test
inc
mov
jns
cmp
aam
inc
mov
cmp
mov
mov
push
outsl
sub
enter
mov
add
add
sbb
clc
enter
add
aaa
pop
mov
into
pop
xchg
cmp
and
mov
outsb
rclb
add
add
lods
sbb
sub
push
push
mov
dec
lods
cmp
add
add
std
icebp
lds
push
lret
popf
frstor
mov
dec
mov
mov
jge
sbb
pop
outsl
push
mov
das
push
add
mov
push
or
gs
add
add
aaa
mov
inc
mov
mov
push
push
mov
jl
jecxz
sub
add
add
stos
mov
xchg
and
lds
xor
loop
dec
insb
add
add
cs
je
mov
mov
push
dec
mov
mov
cmpsl
scas
add
dec
jle
pushf
lret
in
cmp
jmp
pop
insl
fiaddl
add
add
fadd
std
inc
cli
inc
adc
or
sub
ss
dec
add
add
shll
and
add
add
cmp
mov
iret
and
aad
jae
dec
fidivl
mov
cmp
lea
mov
jae
rcrb
ret
jg
fldcw
mov
icebp
inc
and
mov
jno
inc
add
add
cld
dec
mov
xchg
inc
lcall
cwtl
push
xchg
push
push
mov
add
mov
out
sbb
adc
out
push
int3
cli
jmp
add
les
data16
std
fs
pop
xchg
ss
lea
add
sbb
mov
out
movsb
cmp
add
add
test
mov
pop
loop
repz
mov
add
xchg
mov
add
inc
add
add
mov
add
js,pt
lock
inc
mov
mov
cld
inc
mov
adc
int
sti
push
xchg
or
add
add
sbb
ja
fwait
inc
add
add
xchg
ret
adc
cmp
add
add
lcall
outsb
fs
mov
cmp
push
mov
pop
push
enter
call
add
jge
adc
jno
loope
adc
std
xchg
xor
add
add
gs
aad
iret
mov
add
add
add
push
adc
in
jle
out
aas
lods
xor
les
scas
adc
push
cmp
mov
push
jae
les
jge
mov
sub
jae
add
lods
or
mov
test
push
leave
hlt
jno
idivl
repnz
xchg
push
mov
pop
clc
call
dec
jns
push
outsb
lcall
int
cmp
pop
shll
fisttps
out
xchg
add
int
icebp
inc
test
inc
mov
sub
add
add
repz
mov
aam
jle
dec
cmp
and
add
add
jbe
orb
popf
jbe
stos
sbbb
add
add
aaa
and
mov
lea
mov
add
add
jge
mov
add
add
dec
or
dec
lock
add
add
add
add
loop
xor
add
xor
add
dec
mov
jno
mov
mov
mov
lods
fistps
loop
jne
test
mov
and
aas
cwtl
movaps
jae
out
xchg
mov
add
sub
dec
mov
arpl
mov
loopne
in
adc
fnstcw
lahf
mov
mov
cmc
and
ss
add
mov
movsb
fistpl
push
and
aam
mov
scas
dec
push
dec
sbb
or
adc
add
add
out
mov
jl
mov
adc
and
mov
adc
adc
sti
push
fnstenv
ret
mov
in
push
cmovg
and
pushf
pusha
add
add
push
and
add
add
inc
jp
fidivs
mov
out
je
dec
dec
cmpsl
lds
cmp
add
add
sub
stos
fimuls
add
add
into
push
mov
sbb
add
add
nop
sub
icebp
rolb
add
add
lds
and
shlb
pusha
add
add
push
jp
nop
pop
add
out
add
add
mov
cmp
pop
mov
cmp
lret
jecxz
inc
sbb
es
out
push
xor
ret
or
add
enter
add
add
in
int3
jge
ss
jp
xchg
jmp
enterw
popa
out
and
inc
and
add
add
ljmp
dec
add
cmp
jns
stc
sahf
iret
push
mov
add
aad
movsl
addr16
into
xor
pushf
ficompl
imul
into
push
lds
cmp
xor
add
add
ds
xchg
insl
mov
orb
add
jg
fidivrs
es
out
pop
shll
scas
or
add
add
mov
cltd
test
add
add
fldenv
lea
add
call
mov
jp
movsb
push
lds
add
test
add
add
mov
bts
cld
pop
std
mov
mov
add
add
mov
repnz
cmp
loop
or
add
add
arpl
push
dec
add
add
mov
pop
adc
dec
mov
pop
gs
xor
test
jb
cwtl
int
imull
cld
xchg
dec
jl
pushf
sub
add
add
push
outsl
adc
cmpsb
mov
add
add
add
adc
sbb
cltd
aad
xchg
sbb
mov
gs
fisubl
add
aam
cmp
add
add
and
add
add
shr
jns
sub
jbe
inc
add
add
xor
lret
jns
test
mov
add
add
cmp
mov
add
add
mov
add
add
adc
push
sti
aam
add
mov
jmp
jge
cltd
and
add
add
xchg
push
adc
pop
ds
sbb
lds
int
popa
jle
sti
jecxz
in
add
pop
daa
sbb
pushf
mov
aas
jne
jbe
insl
fs
ds
cmpsb
pop
fdivrp
push
cld
mov
sub
fwait
out
jae
mov
movsb
movsl
popf
jl
mov
ds
pop
inc
pop
std
xchg
icebp
cmp
jle
mov
inc
cmp
cmp
rorl
cmp
fsubs
adc
add
add
inc
mov
scas
mov
jnp
push
inc
jg
inc
fs
aas
bound
jle
scas
fwait
push
aaa
xchg
and
add
add
add
add
mov
sbb
cld
pop
jl
scas
add
add
add
add
add
push
mov
std
jne
ds
adc
dec
add
add
in
or
add
leave
cld
cs
out
and
inc
mov
jno
jecxz
sar
fwait
rclb
push
adc
lahf
mulb
add
ds
add
lds
add
add
rcll
fimull
add
aaa
add
add
add
or
add
add
push
pop
pop
adc
testl
inc
add
add
rcll
flds
xor
sti
outsl
mov
sbb
inc
mov
sbb
pop
sahf
test
add
add
add
add
or
add
or
add
add
push
inc
arpl
xlat
and
enter
pusha
add
add
cmp
push
sub
add
mov
or
add
add
add
add
out
psadbw
fiaddl
int3
call
jmp
clc
inc
mov
sbb
cmp
add
dec
pusha
mov
call
mov
sub
add
add
pop
mov
sub
push
js
pop
scas
mov
mov
call
add
add
xorb
add
add
loope
push
jbe
fldl
add
add
call
add
add
jne
cs
xchg
rorb
add
add
sarl
test
lahf
icebp
out
push
repz
sbbb
mov
pop
inc
daa
cmp
mov
into
loop
scas
push
mov
add
scas
daa
add
and
dec
mov
add
add
jmp
mov
subb
shrb
add
out
push
je
add
cmp
adc
add
add
fwait
mov
sub
int
movb
add
add
and
mov
repz
lcall
ljmp
add
add
in
xor
fwait
or
mov
mov
jmp
fisttps
add
add
add
sarb
sub
or
add
add
add
add
add
lock
dec
out
int
adc
mov
test
rcrb
xor
sahf
jae
arpl
sti
fdivs
mov
xchg
shrb
add
add
adc
mov
add
add
xchg
sub
add
add
add
lea
out
pop
data16
add
add
mov
loope
lea
icebp
dec
jne
add
add
mov
add
and
dec
pop
xchg
and
add
repz
xor
add
bnd
mov
into
cmp
dec
mov
lds
add
sub
repnz
rorl
loope
xlat
fdiv
or
idivl
popf
mov
js
aad
movsl
call
lods
movb
pop
sub
xchg
pop
mov
add
add
or
add
add
fstps
rcl
enter
add
add
jg
xorb
mov
add
sub
mov
mov
loope
sbb
into
push
lret
inc
mov
sbb
pop
xor
xor
inc
adcl
or
sub
xchg
test
xchg
mov
add
mov
into
out
mov
jae
pop
outsb
add
cmc
js
cmpsl
add
les
add
ds
stos
ret
sub
ret
mov
negl
add
push
daa
dec
scas
jb
adc
repz
jecxz
dec
sti
mov
xchg
mov
mov
fucom
lret
jecxz
or
jecxz
dec
xor
pusha
mov
mov
decb
stos
dec
add
add
je
push
mov
mov
push
pop
fimull
ret
or
adc
jns
lahf
lret
jnp
add
mov
push
cmp
sub
fs
jge
mov
add
add
pop
data16
jle
in
insl
pop
inc
add
add
jo
loopne
add
add
jae
arpl
das
pop
popf
jg
adc
and
cmp
pop
movsl
adc
sbb
repz
out
xchg
push
ss
or
sub
add
add
out
out
pop
mov
adc
pop
or
pop
popf
add
add
add
add
aad
cli
jmp
cmc
and
push
ffree
pop
pop
inc
jno
ret
dec
add
add
and
add
add
int3
daa
or
add
add
insl
fistps
ljmp
aad
jno
pop
mov
out
cmp
mov
mov
js
iret
das
xor
in
cwtl
shrb
sub
push
cltd
inc
out
pop
and
addl
cmp
adc
sar
inc
xor
inc
lret
rcrl
sub
pusha
mov
loope
cmc
int3
sub
mov
cltd
mov
icebp
xor
movl
das
push
xchg
jnp
movsb
sti
sub
popf
cli
les
insb
mov
mov
mov
loop
js
insb
add
add
pop
or
jle
lods
mov
mov
rdtsc
clc
bound
cmpsb
jno
xchg
xchg
xchg
leave
inc
xchg
pop
enter
rcl
rcrb
add
add
call
mov
ja
cmp
lcall
das
mov
add
add
sbb
call
jno
sub
add
add
rorb
add
add
call
punpckldq
mov
mov
mov
add
inc
jbe
and
add
add
add
add
sub
dec
add
add
dec
dec
mov
add
add
add
add
jmp
or
add
add
sub
add
daa
icebp
ffree
bound
cmpsb
dec
add
add
rcrb
test
jle
mov
inc
push
inc
jb
out
xchg
pop
add
fbld
adc
mov
rcr
andb
or
leave
rcr
mov
pop
aam
insl
clc
pop
pop
cmpsl
subb
jmp
inc
lcall
dec
add
add
dec
push
mov
add
add
xor
jbe
pop
inc
sub
push
or
pop
jno
adc
rcr
mov
lea
loop
lret
mov
push
push
push
mov
movaps
and
dec
testb
nop
enter
add
add
mov
add
gs
pop
cli
sahf
mov
dec
popa
sub
add
add
add
add
sbb
rolb
or
movsb
mov
incl
adc
add
stos
sbb
inc
mov
push
jno
inc
rcl
int
mov
dec
ficompl
mov
fimull
cmp
mov
adc
add
add
sbb
add
add
scas
sub
sbb
push
jge
arpl
mov
add
add
add
add
add
add
add
jbe
sbb
jns
scas
pusha
mov
add
jle
shl
sub
test
cwtl
mov
mov
addr16
add
mov
xchg
inc
imul
jp
dec
push
lods
and
jge
pop
sub
hlt
ret
jle
jle
xlat
or
add
add
add
shrb
negb
sbb
dec
rep
xor
inc
mov
mov
add
add
test
add
add
add
popf
jecxz
outsb
jecxz
adc
das
lea
jp
lods
mov
jne
inc
mov
in
fldt
cmp
sbb
add
add
mov
add
mov
test
jp
pop
shrb
add
adc
sub
ret
sbb
or
mov
notb
sbb
bound
mov
add
jge
sbb
add
addr16
add
add
jecxz
cmp
sbb
sub
or
add
add
mov
add
rclb
push
lcall
pop
fistps
stos
test
mov
movsb
out
mov
mov
mov
lods
in
mov
adc
jmp
inc
xor
xchg
bound
jne
jns
cli
xchg
sub
add
add
jno
and
push
mov
mov
add
cmpsl
repnz
or
xchg
jmp
mov
add
add
push
fwait
xor
add
add
cmp
aas
loop
mov
fnstsw
stc
js
adc
add
jae
sbb
loopne
add
mov
popa
jmp
sub
lock
mov
adc
adc
mov
and
js
out
stos
mov
add
add
xchg
stc
push
sub
add
add
mov
pop
sub
jns
ret
sbb
ljmp
daa
fldenv
lcall
dec
es
in
push
je
cwtl
push
mul
push
push
cmc
cmp
add
add
das
push
subb
adc
imull
lahf
add
mov
add
add
stos
mov
add
adc
mov
stos
push
jle
add
add
pop
test
fmuls
jge
jmp
push
xchg
insw
mov
push
adc
adc
sbb
add
add
mov
shrb
xchg
sub
into
pop
aas
sbb
pop
pop
pop
pop
jge
inc
add
add
mov
mov
xchg
push
sbb
push
and
add
add
lcall
add
add
sbb
add
add
add
add
push
outsl
rorl
add
scas
leave
pop
lods
inc
jne
xchg
adc
add
add
add
pop
push
addr16
rolb
add
add
dec
add
add
ret
fdivs
movsb
lahf
mov
outsb
mov
ljmp
arpl
adc
fldt
negl
dec
mov
jl
mulb
femms
sub
add
add
dec
add
add
inc
and
js
fiadds
inc
cmp
mov
sarl
xchg
mov
add
dec
jle
sub
das
add
add
and
mov
mov
aad
int
rolb
mov
ret
clc
sbb
out
mov
je
xchg
dec
aad
sbb
xchg
sub
pusha
mov
xchg
jg
pop
je
pop
loope
mov
mov
push
xchg
inc
push
push
xchg
fdivrs
or
mov
addl
mov
push
inc
xchg
arpl
call
pop
sub
jo
or
outsb
repz
mov
daa
out
add
add
jmp
add
add
test
dec
mov
jbe
jae
repz
add
add
in
adc
les
adcb
js
add
xchg
xchg
ret
xor
sbbl
pop
in
dec
and
add
mov
std
ficomps
pop
int
push
daa
jle
imul
xor
sbb
sub
mov
push
xchg
sbb
addr16
xorb
xchg
sbb
add
add
add
add
add
mov
addb
adc
mov
out
add
add
add
lret
in
mov
fidivl
mov
xor
add
mov
dec
push
mov
add
jbe
mov
sub
adc
out
sbb
add
add
xchg
jmp
jle
adc
jp
xchg
mov
add
add
sbb
comiss
scas
inc
fildl
push
lea
add
pop
rcll
repz
cmp
add
add
repnz
mov
inc
and
sub
dec
xchg
notb
sbb
and
add
add
shlb
stc
sub
les
cltd
into
mov
jmp
outsb
push
sub
shl
lcall
inc
test
lock
lods
aaa
adc
mov
fs
add
add
scas
aas
cmp
jl
xorl
inc
sub
imul
aaa
call
pop
jge
mov
gs
cmp
mov
xchg
add
lret
push
sub
mov
lret
arpl
add
add
jl
inc
add
add
scas
inc
add
add
xchg
add
add
add
push
gs
inc
mov
addl
sti
dec
mov
adc
pop
inc
out
mov
add
add
adc
add
add
adcb
adc
add
add
subl
add
es
mov
fidivrl
add
mov
imul
out
add
enter
out
xor
mov
gs
push
jne
jns
mov
out
xor
sbb
mov
cmpsl
movsl
fisubrl
add
add
mov
pop
pop
lret
and
sub
add
call
mov
and
cmc
in
jne
jnp
mov
out
lods
dec
data16
pop
sbb
jae
iret
cmp
mov
scas
sbbl
jnp
fdivrl
cld
in
mov
dec
mov
mov
inc
lock
mov
fbld
lcall
add
add
add
stos
test
jo
push
inc
aam
testl
cmp
fdivl
int
call
add
jmp
shll
dec
add
add
mov
push
mov
cltd
pusha
mov
add
sbb
add
std
mov
xor
cmc
fdivr
fisttpll
add
add
sub
add
add
add
ror
loope,pt
addr16
popf
add
add
adc
out
dec
add
add
sbb
fists
mov
out
cmp
xchg
movsb
repnz
add
and
add
add
shll
movsl
aas
ljmp
jns
mov
sub
jnp
psrld
add
add
hlt
or
add
add
outsl
mov
lds
jo
or
push
xchg
sbb
mov
cmp
jge
imul
and
xlat
ret
pop
addl
mov
add
add
sub
aaa
xchg
cmc
loope
int3
cs
inc
add
add
stos
adc
add
add
mov
das
ds
cmp
imul
aam
inc
stc
jo
add
roll
add
mov
insb
add
add
dec
subl
add
or
out
nop
sbb
aad
jge
jbe
and
add
add
add
add
das
mov
lret
jo
scas
not
adcl
fcmovnb
xchg
loope
jae
ja
repz
scas
pop
test
pusha
add
add
ficoml
xor
cmc
cld
outsl
cmp
pushf
jb
rol
shlb
and
mov
idivb
or
add
add
push
lret
ret
pusha
mov
mov
movsl
ljmp
sbb
cwtl
out
test
add
add
jbe
das
dec
mov
dec
jb
add
add
inc
add
add
in
mov
mov
xor
add
pusha
mov
sub
add
add
inc
sbb
adc
fimuls
dec
push
repz
stos
and
add
add
rcrl
jae
xor
add
cmpsb
push
push
pop
lahf
push
insb
mov
cld
lret
pop
in
dec
lods
add
add
add
ficoms
add
dec
and
scas
test
sub
add
add
scas
jmp
add
add
add
scas
jb
sarl
dec
cmp
shl
push
mov
cmc
cmc
mov
test
or
lcall
dec
cmp
int
inc
js
xchg
aas
or
add
add
add
outsb
adc
xchg
insb
add
add
sbb
lcall
and
dec
movsb
imul
sti
add
add
add
mov
xorb
sbb
hlt
push
cld
dec
or
add
add
pop
jbe
jbe
fisubrl
and
andl
outsl
adc
jl
cltd
jnp
sub
sbb
inc
add
add
and
add
add
lcall
add
jge
add
add
jp
xchg
aam
lock
loopne
mov
das
movsb
popf
lods
cmp
sahf
pushl
je
and
add
add
outsl
cmp
add
add
scas
les
mov
mov
sbb
jbe
push
iret
jb
in
inc
jmp
sbb
aaa
or
rcl
xor
imul
icebp
add
pop
in
pushf
inc
ljmp
std
mov
pop
xchg
adc
and
dec
outsb
lcall
xlat
sti
sub
out
mov
add
add
add
scas
dec
into
cmpsb
dec
out
loop
push
in
outsb
pop
mov
call
lahf
stos
adc
mov
add
mov
mov
cmp
jmp
sbb
mov
sahf
dec
lods
mov
inc
test
lock
lock
xchg
in
icebp
sahf
mov
pusha
add
add
jns
call
int3
mov
add
mov
pop
es
add
stos
or
roll
sbb
and
add
add
addr16
or
loop
test
mov
add
jb
iret
add
add
add
jns
and
test
sti
movsl
ljmp
cld
pop
or
add
add
aam
into
aam
sbbb
mov
daa
stos
cmp
adc
rcr
aaa
clc
int3
arpl
pop
sbb
xchg
sahf
int3
mov
cmp
cmpb
int
sbb
cli
push
shll
cmpsb
mov
or
xchg
loope
in
inc
inc
add
add
fstpl
mov
add
lret
imul
lret
and
lret
in
in
fisttps
add
add
int3
cwtl
and
add
add
std
inc
sbb
aad
cltd
xlat
shrl
scas
dec
push
mov
add
add
push
out
and
test
stc
ffreep
mov
inc
mov
lahf
xchg
push
add
cmp
mov
idiv
xor
add
add
mov
fwait
sbb
or
test
cmp
add
add
or
lret
inc
sbbl
mov
lcall
add
out
mov
add
pushf
test
and
add
add
imull
inc
push
je
jbe
adc
push
test
fucomi
xor
dec
mov
or
mov
add
lret
push
push
mov
stos
repnz
xchg
push
sbb
sbb
cli
jle
push
push
add
xor
fnsave
dec
insb
add
add
xchg
pop
cli
test
cmpsb
and
dec
add
add
add
cli
or
mov
repz
movl
xor
mov
jo
adc
mov
shll
nop
inc
cwtl
adc
into
cmp
mov
pop
arpl
imul
adc
shrl
jecxz
mov
movsb
in
js
push
jl
mov
mov
subb
das
cmp
sahf
push
popf
lods
xchg
popa
pop
add
add
add
into
out
pop
fcompp
jp
jg
cmp
int3
adc
hlt
rcll
imul
gs
jecxz
rolb
insb
add
add
in
sbb
xor
lock
dec
popa
push
fdivr
nop
cwtl
jae
incl
dec
cmpsb
js
inc
nop
scas
addb
push
std
stos
xchg
push
or
add
add
iret
jmp
dec
mov
add
add
jbe
add
add
add
push
fidivrs
fldenv
mov
mov
and
inc
jns
add
mov
mov
add
add
xchg
pop
int
es
push
scas
inc
push
inc
mov
lret
mov
push
pushf
lcall
mov
imul
sub
pop
mov
das
imul
ret
add
add
add
jne
enter
stc
mov
cmc
leave
bound
sub
jl
lds
mov
stos
xor
push
std
mov
fiadds
add
xchg
add
add
in
test
mov
sub
bound
add
add
add
sahf
jmp
xor
call
add
imul
inc
popf
icebp
xchg
dec
mov
pushf
mov
leave
and
inc
mov
or
sbb
or
int
ret
inc
dec
dec
push
jecxz
pop
subb
and
add
add
fiadds
inc
ljmp
test
add
int3
lods
jmp
mov
mov
clc
xchg
int
testb
inc
imul
push
fwait
rcl
leave
in
adc
popl
push
fdivrl
test
add
adcl
add
add
mov
les
add
add
enter
and
add
add
xchg
jae
call
frstor
cmp
mov
xchg
nop
sub
dec
loope
data16
dec
in
lods
and
gs
xor
call
add
add
mov
popa
nop
add
repnz
mov
pusha
mov
push
inc
pushf
jne
mov
into
jbe
push
jp
fsubl
cltd
add
add
add
lock
psadbw
sub
leave
test
popf
push
ret
sbb
ds
sub
add
add
stos
mulb
add
add
jns
adc
xor
lock
adc
cs
push
mov
loope
test
cmp
add
jge
push
jge
stc
pusha
add
add
mov
decl
dec
lods
inc
sahf
lods
pusha
add
add
push
sbb
add
add
adc
dec
out
and
add
add
mov
andl
add
add
sub
xor
pop
xor
sbb
add
pop
in
jb
mov
hlt
jns
movsb
iret
jecxz
rcrl
xchg
bnd
mov
aad
bound
add
add
ljmp
xlat
out
daa
adc
xorb
xor
std
jp
xchg
mov
mov
push
adc
stc
mov
or
cmp
add
add
out
xchg
jl
cmpsb
jmp
add
add
arpl
out
ret
pop
inc
faddl
add
add
cmpsl
mov
and
aam
inc
push
fiaddl
add
add
add
add
push
cltd
push
aam
loop
clc
imul
or
sub
dec
test
imul
test
fisubrs
scas
jno
jg
out
daa
fwait
clc
adc
int3
popa
ljmp
icebp
or
add
add
or
int
mov
push
insb
mov
daa
xlat
sbb
out
das
lods
lret
std
pusha
add
add
rol
add
add
add
stc
xor
add
sbb
mov
mov
mov
je
sti
out
mov
adcb
stos
rclb
add
add
add
push
adc
add
ljmp
test
inc
int3
rcl
icebp
insl
cmp
mov
lea
add
bound
mov
mov
mov
add
in
mov
inc
pop
repnz
out
or
stos
pop
mov
pop
mov
out
aad
mov
add
add
iret
and
mov
add
lods
mov
pop
lea
pop
mov
lcall
dec
cmp
xor
int
add
add
mov
adc
add
add
xor
enter
add
add
out
dec
clc
xor
add
add
mov
push
std
xchg
aaa
out
jno
int
sub
negl
mov
add
icebp
or
sbb
sbb
push
lret
ficompl
out
push
mov
add
push
test
pop
mov
cmp
repz
int3
sub
or
fptan
xchg
sbb
add
pop
add
add
add
cli
mov
sbb
daa
iret
ja
loop
push
cwtl
xchg
cltd
mov
ja
sub
mov
inc
add
add
dec
test
add
add
add
jno
sbb
mov
jp
add
add
scas
shrl
add
and
push
ret
mov
arpl
xchg
ret
add
add
add
xchg
into
cmpsl
imul
lret
mov
add
push
jns
mov
xchg
lds
xchg
ret
test
cmp
into
cmc
mov
sbb
rorb
add
jnp
adc
push
and
mov
push
sub
add
push
cmc
mov
dec
mov
xor
mov
mov
int3
mov
and
jb
add
xchg
and
mov
pop
push
xchg
int
stos
sub
add
add
fimull
pusha
mov
mov
mov
scas
lcall
push
pop
mov
mov
jb
addr16
adc
mov
xlat
inc
or
stc
cmp
mov
lahf
inc
xchg
mov
push
aas
push
out
mov
les
jnp
das
fs
sbb
scas
lret
fdiv
push
sub
data16
push
mov
add
add
icebp
add
cmp
filds
add
pop
test
pushf
pushw
test
mov
add
add
test
mov
daa
jp
xor
or
add
add
jmp
cmp
mov
mov
lahf
fmull
push
jns
cmp
es
movsl
loop
fildl
add
add
cs
add
sbb
testb
test
mov
bound
stos
jl
mov
xlat
scas
xor
iret
push
mov
lret
xchg
sbb
movsl
cs
pop
rcrl
add
add
mov
out
enter
int
test
xchg
xor
inc
jecxz
sub
lea
lods
and
push
inc
add
add
push
mov
dec
mov
jnp
sti
mov
add
add
mov
add
jbe
rorb
in
repnz
inc
lahf
adc
or
dec
push
mov
enter
add
add
push
addr16
jo
sub
xchg
adc
sbb
adc
push
mov
test
or
and
add
add
and
mov
decb
test
out
add
add
dec
sub
dec
dec
and
add
add
push
notb
pop
mov
mov
adc
shll
xchg
lcall
sti
add
add
add
or
pop
aaa
in
andl
add
add
imul
cltd
popa
adc
js
nop
add
add
add
or
add
add
in
dec
add
add
pop
and
xchg
add
insl
inc
add
add
loope
shll
add
add
add
add
add
mov
test
jle
jns
pop
sub
push
rcrb
adc
add
mov
add
les
icebp
xchg
test
stc
xchg
cmpb
pop
ljmp
shlb
stc
push
dec
and
add
add
push
mov
mov
mov
add
les
ret
lcall
int3
and
add
add
pop
or
add
add
push
jmp
xor
xor
pop
xor
int
loope
mov
sub
ja
addr16
add
add
or
add
add
add
add
and
xchg
popa
mov
jno
inc
rorl
mov
imul
add
or
test
lret
adc
dec
inc
adc
adc
rol
pop
ret
nop
inc
or
frstor
sub
sbb
clc
push
cmpl
xchg
pop
test
sbb
test
cmp
ret
or
mov
gs
push
jmp
pusha
mov
xchg
cmp
inc
jp
or
jne
lret
push
sbb
add
add
lret
mov
leave
cmp
cltd
mov
inc
sub
xchg
mov
jo
push
imul
mov
test
pop
jg
mov
cld
movsl
mov
mov
add
add
add
mov
cmp
mov
mov
pop
adc
push
sub
add
add
jne
test
test
nop
jno
ret
andb
inc
js
jecxz
lods
or
add
add
movb
xchg
ljmp
loop
sbb
add
outsl
and
add
add
cwtl
fcoml
addr16
add
add
add
lret
xchg
push
insb
mov
movsl
stos
cmpsb
fidivrl
cmp
test
je
mov
test
clc
or
add
add
add
add
rcrl
and
push
aas
aam
and
adc
stc
ret
push
inc
out
mov
add
add
shlb
clc
inc
scas
push
fmul
or
add
add
insl
sub
test
test
add
shll
stos
sbb
mov
add
add
lret
cmp
ljmp
out
push
leave
andl
add
mov
sbb
hlt
sbb
push
lods
test
hlt
push
jmp
jno
mov
add
add
mov
xchg
rolb
mov
cli
or
mov
adc
push
lahf
dec
mov
fucompp
repz
insl
rcr
jle
pop
scas
pop
mov
add
add
pop
lret
in
in
push
push
sub
subb
add
int
xchg
inc
cmp
cmp
add
sti
adc
sar
nop
sbb
sbb
add
add
imul
add
sbb
fwait
inc
add
add
mov
push
xor
cli
aam
js
pop
in
sub
or
aaa
xchg
cld
loop
arpl
fimuls
int3
pop
mov
cltd
inc
mov
adc
add
dec
mov
js
rclb
loopne
mov
inc
mov
sbb
adc
or
push
adc
mov
xchg
rcrl
xor
inc
mov
sbb
fmuls
add
add
repz
sub
add
adc
mov
mov
nop
call
fsubs
add
add
and
cltd
repz
cmp
add
sti
mov
pop
dec
add
add
add
and
ret
add
pop
out
pop
popl
add
dec
cmp
scas
mov
xchg
shlb
or
add
add
add
add
xchg
punpckhbw
add
add
out
sbb
add
add
mov
sti
jge
shrl
add
add
fists
aaa
sub
add
add
lahf
movl
add
cmp
pop
cwtl
in
adc
add
add
add
hlt
jmp
sbbl
test
sti
stc
xchg
and
add
add
stos
sub
add
add
inc
xorb
add
les
mov
add
xchg
shrl
add
and
add
add
loope
jge
pop
scas
add
pop
xor
add
add
pop
test
add
jle
xchg
enter
add
pop
sub
add
add
cld
push
bound
sbb
in
inc
gs
pop
divb
add
int
les
inc
mov
sub
je
out
test
mov
fisubrs
cltd
mov
xchg
inc
mov
and
xor
addr16
cltd
cmp
cmpsb
sbb
add
push
dec
cmp
cli
adc
test
pop
scas
daa
lret
imull
add
add
leave
sbb
push
push
adc
outsb
push
js
dec
xlat
jl
in
pop
gs
sub
sbb
adc
pop
cmpl
mov
es
sub
add
add
dec
insb
add
add
xchg
cmp
push
push
insb
add
add
cld
pop
test
mov
add
scas
or
add
add
mov
adc
inc
mov
adc
xor
add
mov
mov
add
add
add
add
dec
add
add
jg
ds
add
jo
xor
mov
stos
mov
pushf
sbb
lahf
mov
mov
cwtl
in
push
int
stos
test
mov
stc
ret
jno
pushf
fs
fwait
jbe
lahf
sub
add
add
sbb
mov
movb
add
add
mov
mov
sarb
and
nop
int3
popf
xchg
ja
xchg
ja
xchg
mov
stos
notl
sub
cli
sub
add
add
mov
push
insb
mov
add
add
lds
stc
rcr
addl
mov
inc
jle
mov
pop
mov
add
mov
nop
pop
sar
adc
add
add
xchg
pop
jns
push
fcmovnb
lcall
jbe
dec
mov
in
lea
fwait
adc
outsl
movsb
pop
insl
push
ret
xchg
or
jb
aas
nop
mov
xor
push
hlt
out
mov
nop
in
scas
pop
xchg
std
mov
add
add
repnz
scas
dec
bound
mov
add
insb
mov
pop
xor
pop
or
add
add
pop
jns
inc
imul
xchg
lcall
add
add
cmpsb
add
or
jge
jns
jmp
add
add
out
into
push
pop
jno
dec
and
add
add
push
popf
cli
aas
pop
jle
push
neg
pop
jle
xor
add
add
sahf
xor
sbb
mov
adc
add
add
and
ds
and
and
add
add
fldl
sub
jg
test
mov
cmp
ficoml
les
cwtl
dec
in
mov
dec
add
add
lcall
pop
dec
mov
xor
outsl
cwtl
test
lret
jae
insl
lods
lahf
cmp
xor
movsb
outsb
jp
ds
add
add
xor
adc
js
mov
imul
mov
add
add
add
loop
push
push
aad
cs
or
inc
add
add
sahf
mov
xor
subl
pop
sti
int3
mov
pop
fstps
jg
dec
mov
dec
imul
jge
lock
jge
push
cmp
push
data16
fs
in
adc
add
in
faddl
xorl
pusha
mov
subb
adc
dec
add
add
out
pushl
lds
add
inc
dec
jno
jl
mov
add
popl
call
add
add
add
outsb
mov
mov
pop
loop
std
shr
mov
inc
aas
insl
xchg
scas
mov
push
add
add
add
mov
dec
mov
scas
pusha
mov
ljmp
enter
insl
adc
hlt
cmpsb
and
xchg
dec
mov
outsb
sbb
jb
push
xor
lcall
xchg
pop
adc
pushf
loope
fstl
add
cld
clc
insl
pop
dec
mov
add
add
bound
add
add
in
in
cmp
ror
cmp
test
js
arpl
test
add
add
and
add
add
and
add
add
es
call
std
or
popf
push
test
pop
scas
jns
push
dec
mov
mov
out
fcmove
cmp
sub
cmc
sub
dec
add
add
daa
ret
aas
cmp
mov
sbbl
mov
cmpsl
pop
xchg
push
pop
lock
mov
or
mov
addr16
pop
cmp
repz
sti
jae
movl
sbb
sub
add
add
adc
into
int3
lret
jbe
cld
mov
hlt
ja
loop
out
aam
outsb
ljmp
add
mov
dec
jae
push
cld
shll
imul
mov
adc
fwait
call
add
popa
mov
add
add
xchg
aaa
vpsubb
mov
test
adc
inc
jecxz
push
dec
add
add
shr
push
ret
mov
imul
pusha
mov
add
add
fcoml
sbb
add
add
jle
out
mov
or
add
add
add
add
rcrl
fidivrs
and
add
add
in
push
adcl
lea
lock
mov
popa
in
add
add
fidivrs
add
add
sub
pushf
mov
clc
hlt
stos
and
add
add
jmp
mov
add
fidivs
fldcw
inc
mov
std
icebp
mov
jo
and
inc
cmp
jo
fs
xchg
jmp
jg
in
and
inc
add
add
orb
pop
and
es
mov
mov
push
adc
inc
add
add
aam
mov
arpl
pop
out
adcb
add
add
jmp
xor
sbb
in
add
add
daa
push
mov
mov
jo
fxch
sub
add
add
sub
rcll
fcompl
xchg
mov
add
add
mov
into
ss
mov
popa
jmp
add
add
cmp
dec
insb
mov
ss
fucomp
in
jne
jne
and
cltd
push
pop
aad
dec
xchg
adc
xlat
mov
push
push
pop
mov
mov
xor
add
add
addr16
aas
scas
push
cmpsl
mov
inc
mov
adc
mov
xor
rolb
add
jl
xchg
addr16
or
mov
mov
lods
and
int3
or
jecxz
cmpsl
mov
jecxz
xlat
outsl
mov
cmc
xchg
ljmp
pop
negl
adc
daa
repnz
cltd
imul
push
aam
in
push
xor
adc
mov
mov
jge
fimuls
std
xchg
arpl
sub
dec
xchg
cmp
add
add
jle
stos
gs
ja
or
add
add
mov
aas
paddw
add
call
imul
fsubrp
push
mov
lods
mov
lahf
jl
out
inc
sarb
popa
adc
sbb
add
add
mov
popa
adc
xor
mov
sbb
lahf
push
mov
imul
and
add
add
mov
fnstcw
fsubrp
bound
jp
mov
or
add
add
add
add
or
stos
xchg
sub
lret
adc
and
push
cli
roll
add
add
jl
push
scas
fst
scas
add
push
sahf
mov
add
add
xor
hlt
push
fmul
lods
xchg
mov
jns
fists
adc
cmc
bound
xlat
sub
leave
out
shl
in
add
add
ss
cmpsb
push
in
mov
lock
adc
xlat
push
mov
push
add
lret
loope
rorb
xchg
les
xor
add
add
push
inc
call
pop
imul
imul
std
cwtl
cmp
xor
add
jnp
xchg
sbb
insb
mov
sbb
add
add
dec
imul
sub
add
add
add
pop
jmp
arpl
mov
add
add
sub
add
add
sub
push
cltd
lock
sti
jp
std
repnz
add
add
sub
add
add
jnp
xchg
push
or
add
add
mov
xor
sbb
or
add
add
sub
mov
adc
or
and
imul
lcall
dec
push
jmp
dec
add
add
inc
aas
push
cwtl
push
test
xor
xchg
add
dec
jmp
cmp
cmpsb
dec
int
sub
rcrl
mov
mov
jle
and
fcoms
pop
xlat
sbb
mov
popa
sbb
pop
repz
int3
inc
mov
cmp
inc
xor
cld
mov
add
add
js
mov
sub
dec
mov
cmp
mov
or
add
add
test
int3
cwtl
adc
in
mov
cmp
sbb
pop
or
add
add
pop
cmc
loopne
jge
push
es
pop
btr
gs
out
xchg
sbb
dec
jmp
jbe
add
add
mov
inc
jae
inc
call
movsb
push
and
cmp
aam
dec
jne
or
add
add
xchg
popa
insl
movsb
inc
mov
mov
mov
lcall
scas
jecxz
pushl
dec
les
lea
add
and
add
add
cmp
hlt
pop
mov
dec
inc
or
add
add
loop
jge
aaa
das
fisubrs
stos
leave
jb
xchg
pcmpgtb
dec
push
adc
add
add
add
lcall
xchg
mov
xchg
rcrl
push
pushf
popf
mov
xlat
push
nop
mov
add
add
int
aam
das
sub
add
add
add
jnp
push
mov
push
pusha
add
add
or
jp
mov
pop
push
mov
push
xorb
out
gs
add
add
or
aam
cmp
cmp
add
add
mov
add
lea
xor
xorl
cs
stos
dec
add
test
push
movsb
sbb
in
mov
add
cltd
js
xlat
test
jo
cmp
jp
and
add
add
mov
stos
xchg
int3
dec
mov
call
mov
fwait
cmc
dec
movsl
shll
loopne
cmpsl
xor
and
loop
dec
mov
pop
push
fistps
jmp
add
add
sbb
stc
push
add
add
add
mov
addr16
ljmp
fwait
out
pop
icebp
rcll
cmp
mov
pop
sub
xchg
cmpsl
sbb
pop
cmp
add
add
out
mov
push
mov
mov
inc
pop
loope
mov
out
inc
mov
icebp
add
lret
cmp
clc
in
cltd
dec
cld
stos
aaa
sub
add
shlb
add
shlb
inc
fucomip
or
push
mov
push
add
ja
jge
ret
ljmp
or
mov
pop
mov
fwait
cmp
stc
fildl
aad
pop
icebp
jmp
jae
sub
add
add
add
jne
in
gs
bound
fwait
add
pop
in
jmp
mov
out
xchg
jg
push
ret
and
ss
aad
jge
lds
outsl
repnz
add
add
add
add
ret
shll
cmp
xchg
iret
mov
fimull
mov
add
add
inc
xchg
jl
je
shll
add
add
and
add
add
add
add
imul
pop
cmp
add
add
pushl
or
mov
add
adc
bnd
xlat
sub
add
add
js
lcall
mov
xchg
fisttps
icebp
adc
xor
test
adc
mov
cmpsb
ja
pop
in
jnp
test
mov
lods
cmp
xchg
shlb
pusha
mov
popa
enter
cli
jno,pt
push
cli
in
pop
pusha
mov
cmc
sub
leave
rorl
test
push
push
xor
ss
aam
shrb
add
add
and
lret
test
xlat
add
out
cmp
add
je
push
mov
xchg
xchg
pop
testb
scas
sbb
mov
in
add
xor
dec
fisttpl
mov
in
loop
dec
and
xor
dec
mov
data16
mov
add
add
push
stos
push
scas
imul
and
jl
cmp
mov
inc
lcall
lock
clc
mov
icebp
ficomps
add
add
add
and
mov
and
mov
add
sar
stos
mov
add
add
dec
mov
repz
not
xchg
mov
loop
mov
jbe
adc
jnp
sbb
mov
mov
push
jae
pop
xchg
inc
ja
in
test
cs
addr16
mull
add
add
add
push
data16
out
imul
cmc
mov
push
sbb
lods
xchg
and
add
add
add
jne
dec
roll
cwtl
jbe
fimull
push
out
jae
ja
mov
mov
out
fs
loopne
jle
dec
out
daa
add
add
add
bound
stc
xchg
inc
push
push
addb
sub
cltd
lock
sub
fs
xor
add
mov
jne
dec
dec
stos
daa
data16
rclb
push
cmp
pop
pop
popf
dec
in
mov
fs
orl
or
add
add
lea
mov
cmpsb
popf
fs
add
add
add
sahf
or
sbb
mov
inc
sub
std
xor
insl
popa
mov
add
cmp
lret
std
in
mov
sbb
jo
push
adc
mov
inc
rorl
push
outsb
in
int3
jnp
jecxz
enter
mov
test
or
add
into
insl
aam
shlb
inc
mov
adc
ljmp
loopne
pop
shlb
inc
push
inc
adc
add
add
iret
xorb
scas
shll
rcrl
icebp
mov
popf
sub
mov
dec
pop
flds
lcall
out
or
repnz
mov
mov
xchg
mov
mov
mull
sub
add
add
sarl
fdivrl
xor
or
xchg
adc
adcl
out
jne
repz
inc
mov
mov
xor
data16
adc
mov
add
add
mov
add
sub
mov
pop
fwait
pop
aaa
sarl
xchg
mov
loopne
repz
fcoml
addb
dec
outsl
std
cmp
xchg
mov
mov
pop
movsl
xor
add
scas
and
cld
hlt
rorb
fs
ljmp
insb
mov
sbb
or
add
add
push
push
dec
mov
iret
fwait
daa
aas
dec
inc
add
add
xchg
arpl
xor
das
jne
fidivl
add
nop
jmp
dec
jo
test
jns
cmp
cmp
cmp
shlb
pop
call
add
add
add
rcll
cmp
js
mov
push
push
jg
or
adc
cmpsl
imul
add
add
cmp
xchg
add
lock
repnz
mov
jo
push
lahf
repnz
scas
mov
add
sub
add
add
loop
jl
and
push
add
cmp
dec
dec
popf
inc
sbb
jns
mov
cmpsl
rep
jg
jmp
sub
cmpsb
add
mov
add
add
jne
cmc
cwtl
imul
lret
xor
insl
push
les
adc
mov
jmp
das
addr16
add
xchg
add
add
stos
push
and
jno
add
inc
add
add
jg
sbb
aas
and
stc
fcomps
mov
xlat
enter
popf
adc
add
add
mov
mov
add
add
fldt
and
ret
sub
negl
aam
and
pushf
lahf
test
dec
add
add
stc
in
mov
push
adc
add
add
add
jg
ljmp
inc
adc
or
jnp
add
add
adc
xchg
movq
add
add
and
add
add
jle
adcl
movsl
sbb
ret
repnz
mov
inc
dec
dec
insb
mov
shll
movsb
adc
jbe
lods
cmp
imul
stos
and
add
lods
clc
xchg
addl
shll
mov
jbe
lcall
add
jb
pop
sbb
mov
mov
add
pop
rclb
mov
mov
mov
lods
xchg
sub
mov
add
in
idiv
cmpsl
cmovp
shlb
pop
nop
out
das
or
add
add
add
xchg
iret
cld
xor
add
add
add
add
add
add
inc
add
add
mov
push
int
mov
insl
xor
mov
jae
repz
xor
gs
add
add
addr16
add
add
add
loope
ljmp
outsb
shr
cmpl
jb
test
add
add
scas
jb
pop
push
jmp
aaa
sarb
mov
pop
aaa
jmp
fs
jae
lcall
gs
pop
jb
push
in
pop
sub
add
add
add
add
add
add
mov
add
sahf
cmp
ds
sahf
insl
add
add
cltd
push
notb
dec
mov
add
add
add
jmp
push
sbb
adc
andb
lods
xlat
inc
add
add
pushf
gs
in
jae
movsb
stos
xor
push
pop
jmp
fnstenv
out
xor
mov
xor
xlat
adc
frstor
shlb
xor
add
add
pusha
mov
add
add
add
or
add
add
insl
or
pop
fisubs
mov
divb
inc
test
fisttps
add
add
pusha
add
add
ds
sbb
add
mov
adc
insl
push
or
add
add
add
add
dec
add
add
push
adc
push
aad
imul
xchg
jo
jnp
lods
and
pop
int3
pop
xor
stos
mov
out
jg
push
roll
push
clc
sarb
int
daa
jl
sub
add
add
add
lret
xchg
adc
add
add
out
js
fildll
sahf
imul
xchg
sbb
in
enter
mov
mov
add
add
mov
jl
std
dec
ljmp
add
add
push
push
incb
add
repnz
mov
add
add
cmpsb
fildll
fwait
add
add
add
ja
add
lods
sub
popf
or
cmc
jmp
dec
push
mov
and
push
lret
pop
mov
sub
and
sbb
ret
outsb
cmpsl
leave
gs
cmp
mov
out
xchg
je
stc
dec
mov
sbb
std
js
cmp
mov
jge
mov
mov
aad
bndstx
push
add
sti
rolb
xchg
addr16
add
add
add
sbb
aam
or
add
add
and
add
add
fnstsw
adc
or
pop
fsubl
add
add
pop
in
or
insl
movsl
ror
fsubrl
mov
loope
test
scas
xor
jne
fcmovnb
push
mov
ja
mov
dec
mov
jo
sub
or
cmpsb
mov
nop
mov
push
sbb
in
inc
call
cltd
mov
sarb
dec
add
add
sub
add
add
push
jg
je
adc
add
add
jbe
inc
add
add
jbe
ds
in
lret
inc
push
fstl
insb
mov
push
fistpll
mov
sub
mov
add
add
mov
in
stos
adc
cmp
adc
xor
push
mov
iret
mov
iret
icebp
fiaddl
mov
pop
mov
adc
decb
inc
pop
mov
shrb
rcrl
into
ljmp
xchg
xchg
pop
rcr
dec
add
add
adc
lods
cmp
push
loope
jge
into
pop
inc
repz
add
add
xor
test
add
add
and
add
add
adc
shrl
inc
dec
lock
or
add
sbb
test
test
xchg
ja
adc
in
mov
push
lock
mov
add
add
or
add
sub
add
xor
add
add
push
lods
cmpsl
xchg
cmc
push
add
add
add
imul
mov
fisttpll
js
je
pop
mov
nop
pusha
mov
test
add
xchg
add
add
add
cltd
adcl
mov
push
mov
and
add
add
add
add
cmpsl
movsl
jp
cmpsb
icebp
cmp
mull
mov
mov
scas
and
add
add
loop
xor
or
add
add
mov
add
add
and
mov
lret
ret
cltd
clc
jg
popa
fsubr
push
push
pop
mov
add
add
hlt
divb
sti
movb
mov
hlt
inc
xchg
add
and
dec
mov
movsb
sbbb
cld
lahf
fwait
or
add
add
andb
popf
jne
lods
mov
add
shrl
add
add
aam
xchg
lock
xchg
shlb
ljmp
add
add
cmpsl
and
lock
xor
inc
in
pop
adc
decb
add
cmp
mov
idiv
jne
mov
outsl
jb
je
xlat
sub
test
xor
cmp
test
add
pop
add
add
outsl
ja
ja
xor
add
add
mov
dec
xchg
iret
out
sbb
dec
add
add
test
mov
add
add
fidivl
cmp
aas
adc
int3
xchg
add
add
add
ret
lahf
imul
std
mov
xchg
js
sbb
adc
test
cmp
add
add
add
add
bound
pushf
mov
sub
add
add
dec
add
and
aam
jecxz
mov
aad
jle
sub
mov
push
out
inc
add
add
sarl
add
or
add
add
jo
dec
mov
loop
leave
mov
rcrl
xor
add
ja
cs
and
stos
lods
gs
enter
xchg
adc
in
sbb
or
adc
sub
add
add
scas
lods
fldt
mov
shrb
mov
cmp
cltd
sbb
xor
test
mov
add
hlt
ljmp
mov
and
add
add
dec
cmpsl
dec
xchg
lcall
add
test
rclb
pop
in
std
or
mov
rorl
fmull
incb
inc
add
mov
pop
xor
adc
sub
stos
fwait
or
rcrb
mov
das
mov
cmpl
mov
ljmp
maxps
imul
ljmp
or
mov
fwait
fs
xor
add
pusha
mov
inc
shlb
pop
xchg
mov
add
add
mov
out
in
daa
lea
add
add
add
orl
add
add
sub
mov
adc
add
fs
imul
and
gs
dec
add
pop
clc
jmp
daa
push
dec
push
jmp
add
add
hlt
fldl
add
add
mov
add
mov
sbb
ret
cmp
test
dec
sub
ljmp
daa
jne
jo
mov
dec
mov
std
xor
jge
addr16
push
stos
leave
inc
add
add
add
add
add
fsub
push
jb
loopne
ljmp
sbb
adc
andb
ror
push
push
gs
test
and
cmp
je
add
add
test
pop
lods
icebp
add
add
add
cli
cmp
shrb
add
fwait
das
aaa
movsl
ret
mov
mov
add
add
mov
out
jle
mov
mov
stos
push
jp
jg
mov
push
jp
fiaddl
nop
jle
lock
sub
popf
arpl
or
out
stos
xor
push
test
mov
add
add
ljmp
sub
fwait
pop
jae
sarl
loope
lods
or
icebp
test
mov
cli
aad
scas
test
add
sti
push
les
push
cs
sti
dec
adc
push
movaps
pop
nop
mov
nop
stos
push
add
add
add
cmc
fcoml
sbb
es
sub
sbb
mov
add
add
test
xchg
adc
xchg
dec
lahf
clc
int3
mov
mov
hlt
test
insl
cli
jns
bound
das
sti
fcompl
pushl
jnp
cld
xchg
int
and
cld
mov
nop
lock
xor
mov
jae
mov
into
sahf
sub
add
cmp
or
add
add
add
add
out
out
adc
pop
add
add
add
scas
sti
xchg
rorl
ja
bound
add
add
add
ja
hlt
xor
add
add
jge
xchg
ret
sub
out
add
add
sti
and
add
add
leave
cmp
add
add
mov
aas
dec
movsl
cmp
leave
movsl
dec
out
mov
test
outsb
cwtl
lahf
subb
mov
mov
ret
int3
dec
xor
mov
add
add
js
in
stos
scas
lcall
add
sub
add
sub
add
mov
jb
mov
or
lods
xchg
popf
jns
outsb
fwait
mov
xchg
out
and
mov
test
inc
add
add
loop
into
xlat
xor
mov
dec
mov
jle
jns
mov
mov
cs
and
jne
outsb
outsb
or
mov
add
and
cmp
dec
call
mov
insb
add
add
fsts
sub
cmp
cli
cmp
rolb
add
pusha
mov
lcall
inc
xchg
cmpsl
je
sbb
add
add
add
xor
sub
add
add
add
lods
sub
fsubl
jae,pt
fs
xchg
aas
cmovg
or
add
add
daa
add
add
add
repz
mov
mov
dec
adc
lea
pop
add
add
push
test
lods
xor
add
leave
jl
mov
sti
ljmp
daa
adc
stc
pop
mov
mov
pop
out
decl
in
jge
sahf
cwtl
inc
add
add
nop
or
add
popf
pop
xlat
int3
push
push
sbb
add
add
lahf
movsb
out
lret
hlt
loope
in
sub
add
add
adc
fldenv
inc
add
add
add
ret
push
pop
xlat
cmp
add
and
ret
fwait
and
add
punpckhdq
lea
dec
shr
fstpt
dec
out
xor
xchg
or
add
mov
test
mov
sti
pop
arpl
cmp
mov
jnp
xchg
add
add
add
orb
stos
inc
les
mov
mov
fdivr
dec
fstpt
insl
jecxz
mov
mov
test
js
shlb
add
add
mov
add
add
mov
leave
xlat
dec
lcall
ljmp
aas
fbld
add
lcall
daa
inc
push
push
xchg
loope
add
add
add
push
repz
jne
mov
mov
add
add
add
jmp
je
mov
ret
xor
cmpsl
xor
adcb
cmp
add
add
test
sub
add
add
incb
lcall
or
cmp
gs
mov
add
aam
mov
lods
xor
add
lret
mov
xor
push
lods
movsb
loopne
int3
adc
cmp
pop
rcrl
mov
setne
inc
inc
mov
std
push
mov
ret
mov
push
mov
mov
in
cmc
add
add
imul
and
loope
add
adc
push
mov
mov
push
sub
add
add
adc
js
push
pop
pusha
add
add
cltd
imul
pop
mov
push
mov
pop
fistpll
cmp
arpl
out
cld
js
dec
add
add
mov
add
add
jmp
fadd
inc
mov
and
sbb
out
fadd
lret
nop
stos
xchg
insb
mov
inc
mov
cmp
xchg
sub
add
add
stos
ffreep
pop
push
dec
mov
in
push
jp
pop
roll
mov
adc
outsb
pop
pop
pop
rcll
xchg
adc
xchg
pop
xor
dec
mov
fcomps
jno
and
mov
lods
mov
nopl
mov
rcll
jmp
or
push
sub
add
add
push
sbb
or
sbb
je
nop
inc
int
and
orl
add
add
pop
lods
and
add
add
lcall
push
lods
xchg
sub
add
add
and
into
push
lcall
pop
repnz
lds
call
adc
stc
sti
scas
mull
add
add
mov
mov
pusha
add
add
mov
sub
add
add
mov
push
adc
std
ficompl
lret
sub
jp
pop
xor
push
cli
and
lret
or
fnstsw
fidivrl
outsl
xchg
pusha
add
add
cwtl
push
in
ja
aas
insl
pop
jo
mov
xor
mov
jl
push
lahf
xor
xlat
cli
pop
mov
mov
loopne
xor
outsl
sbb
int3
sti
imul
add
enter
ret
push
lds
add
out
mov
mov
add
add
mov
lds
inc
repz
adc
add
add
sbbb
icebp
dec
mov
mov
inc
xor
jmp
aad
outsb
in
mov
add
add
or
add
add
lret
dec
movsb
mov
and
add
sub
add
add
jno
mov
and
bound
mov
add
add
ret
pusha
add
add
inc
int
add
add
add
icebp
xor
addl
add
add
popa
xchg
sub
add
add
add
or
add
add
jecxz
aam
dec
xor
xor
ret
and
iret
fdivl
xchg
and
add
add
cmp
sbb
daa
xor
dec
jp
inc
push
jns
in
mov
mov
gs
push
sbb
add
add
fisttpll
insl
pusha
mov
js
adc
out
test
insl
mov
and
adc
into
sbb
jg
pop
test
dec
fcmovnb
js
xor
sub
lods
nop
ds
xor
scas
or
add
add
shll
add
add
xchg
and
add
add
add
mov
dec
jbe
sub
mov
pop
pop
mov
jne
mov
pop
ljmp
push
xor
ficoms
push
pop
xor
add
add
pop
rclb
add
mov
mov
xlat
shrl
daa
repnz
mov
rorl
hlt
aas
fbstp
xor
add
add
add
add
and
add
add
pop
enter
mov
insl
pusha
mov
jle
lret
into
push
fistpll
cld
mov
mov
mov
nop
addr16
mov
int3
daa
cltd
sub
dec
dec
out
insl
leave
aas
sub
add
add
push
push
sarb
loopne
mov
gs
add
sub
cmpsb
inc
pop
xchg
xor
jmp
repz
inc
nop
and
xchg
push
add
mov
xchg
sbb
scas
or
add
cld
inc
mov
ja
mov
cmp
push
inc
icebp
idivb
inc
dec
add
add
sbb
inc
rcrl
or
add
add
add
mov
mov
sub
aas
sahf
xchg
lahf
bound
and
add
add
sub
ja
add
sbb
loope
jnp
int3
mov
mov
daa
mov
inc
mov
mov
jecxz
sub
mov
dec
add
add
pop
mov
cmp
xor
add
add
mov
pushf
cmp
sub
rcrb
mov
jl
mov
add
add
rcr
inc
or
add
mov
setne
mov
mov
sub
rcll
add
imul
int
into
mov
scas
int
loop
sub
mov
insl
lcall
mov
add
jo
push
fwait
adc
psubd
add
xchg
pop
xlat
fnsave
push
addr16
xor
dec
mov
bound
add
add
rcll
mov
mov
add
add
or
add
add
aad
ficoml
rcrb
add
add
add
or
addb
mov
leave
mov
inc
fisubs
and
add
add
std
test
mov
add
add
cmp
les
orb
clc
lahf
jl
push
std
push
mov
inc
mov
pop
or
jle
inc
sbb
insb
add
add
stos
popa
mov
js
pop
inc
mov
xchg
cmpsb
dec
xchg
pop
jns
cs
add
add
out
leave
jl
out
mov
mov
add
add
mov
pushf
xchg
mov
std
xor
jb
jle
dec
jo
hlt
repnz
mov
add
push
pushf
lods
jle
mov
jo
inc
add
add
sbb
cmp
lret
pushf
sbb
int
cmp
pop
sbb
jns
stos
pop
or
add
add
xchg
sbb
sub
mov
inc
jmp
adcb
hlt
lea
and
test
pop
pop
cmp
out
popa
fwait
shrb
movsl
xchg
mov
andb
inc
arpl
push
add
add
add
and
lea
in
mov
add
int3
pushf
dec
ljmp
arpl
mov
sbb
out
cmc
inc
mov
repnz
mov
add
add
jge
cli
cmp
sbb
lea
xchg
mov
cmp
shll
pop
imul
cmpsb
scas
fs
notb
aas
or
sub
add
add
fistpl
data16
roll
mov
lock
sar
pop
jg
xor
subb
inc
std
test
mov
jns
test
jg
int
int
lods
faddl
out
push
lcall
mov
es
ret
pop
pop
pop
dec
aam
push
cli
adc
out
daa
ret
push
lock
negb
cwtl
sub
add
add
in
shr
pop
mov
cmp
sbb
pop
outsl
adc
aas
jg
xchg
lods
or
add
leave
test
pop
hlt
dec
push
jmp
inc
mov
jns
movsb
and
adc
add
add
ss
adc
xlat
push
jmp
jge
stos
add
add
add
add
add
or
or
test
add
lea
push
inc
push
jl
cmp
or
mov
out
mov
add
add
dec
out
js
movsb
push
inc
mov
mov
xchg
xor
mov
pop
movl
pop
shll
push
pop
lcall
pusha
mov
push
movsl
test
lret
dec
mov
scas
mov
push
popa
inc
add
add
pop
jecxz
add
add
inc
ds
loope
mov
ret
ret
xor
popf
sub
pop
mov
cmp
add
out
dec
add
add
push
movsb
push
aam
lcall
add
mov
sub
mov
mov
mov
pop
lock
pop
jbe
popf
and
add
add
and
add
stos
pop
push
int3
fildll
mov
ss
lret
mov
jmp
sbb
add
add
stos
int3
notl
mov
cmpb
adc
mov
icebp
int3
cltd
inc
ret
dec
push
jae
and
jb
insl
xor
push
ret
mov
andb
add
pop
cmp
xor
and
add
add
mov
add
sub
add
add
sar
sbb
idiv
stos
push
mov
jb
xor
xlat
jb
mov
cld
jmp
mov
add
add
lods
mov
adc
xchg
cmp
xchg
inc
out
mov
flds
add
push
xchg
add
add
or
xor
ss
add
add
add
loopne
stc
repnz
push
xchg
stos
or
mov
in
dec
lock
in
movsb
sarl
inc
and
jno
mov
mov
or
add
add
mov
jb
xchg
sbb
adc
not
mov
repnz
dec
js
mov
mov
add
add
push
sbb
add
sarb
sbb
xchg
popf
scas
jae
aaa
xchg
xchg
ror
mov
mov
mov
sbb
je
test
add
add
mov
adc
add
add
fstpt
dec
insb
mov
fsubrs
add
fwait
xchg
sub
add
add
cmpl
adc
je
inc
mov
ds
xor
push
es
cmp
jo
cs
outsb
js
lret
mov
push
dec
mov
mov
mov
notl
mov
mov
cmp
pop
lock
movsl
popa
mov
lahf
jno
fs
mov
and
add
flds
popf
repz
in
mov
push
sarb
add
pop
mov
jbe
push
rorl
xorb
test
mov
mov
out
out
jmp
rcrb
inc
cmp
mov
add
add
ljmp
mov
lcall
nop
xchg
xchg
inc
add
add
xchg
push
shll
add
add
int3
mov
add
add
dec
jnp
mov
enter
xchg
cmpsl
sbb
fwait
sahf
popf
sub
add
add
add
add
fildll
add
add
adc
mov
jne
dec
mov
out
cli
add
leave
imul
adc
xor
sub
mov
insb
mov
out
pop
fisubrl
ja
xchg
mov
test
inc
sbb
mov
lods
xor
add
ds
lahf
xorb
adc
mov
push
inc
fidivl
inc
lret
sub
add
add
fcoms
iret
jo
sbb
sub
in
arpl
add
add
mov
add
add
push
fwait
push
cmp
sub
fs
push
cmp
mov
fmull
add
in
ljmp
add
add
or
pop
adc
mov
fwait
cwtl
jae
test
and
add
add
leave
add
add
add
loope
push
mov
push
jmp
jnp
jl
shl
das
imul
stos
test
std
loope
push
out
fcmovnbe
outsl
xchg
call
xchg
repnz
mov
mov
mov
mov
xor
fwait
cmpsl
jl
in
loopne
mov
mov
cmc
movsb
mov
cmp
sub
push
inc
add
add
jl
xchg
sbb
es
fdivrs
push
add
add
insb
mov
mov
inc
mov
in
int3
loope
rclb
lds
insb
mov
cmpl
adc
xlat
xlat
dec
adc
add
add
xchg
jge
je
cld
je
mov
push
cmpb
sbb
add
jb
inc
sbb
call
sbb
add
add
push
enter
mov
add
or
flds
test
pop
xlat
lret
mov
loop
hlt
das
xchg
out
ret
add
add
xchg
xor
xchg
lret
dec
mov
movsl
mov
add
imul
and
push
fwait
test
add
fimull
mov
orb
imul
daa
daa
lods
cmp
jnp
xchg
xor
add
roll
jbe
pop
fldenv
hlt
sbb
roll
cmp
sub
add
add
add
add
cmp
decb
mov
mov
mov
add
dec
add
add
dec
pop
mov
adc
pop
pop
pop
adc
enter
add
add
lahf
repz
pop
dec
mov
cmp
ds
fisttps
push
xchg
scas
pop
xor
xor
adc
push
int3
out
inc
mov
imul
add
add
add
jg
fs
inc
out
out
bound
cmp
repnz
imul
loope
xchg
pop
nop
fsts
popf
ja
xchg
loopne
cmp
out
das
in
scas
jae
add
add
pop
jmp
mov
sbb
inc
mov
aad
rol
cmpsb
cli
inc
xchg
xchg
imul
iret
pop
rep
mov
fs
jl
clc
push
cmp
add
cmpl
jbe
jecxz
pop
sbb
mov
xor
or
mov
add
icebp
addr16
inc
add
rorb
ds
mov
sbb
repnz
imul
data16
aad
pop
dec
mov
mov
aad
sbb
pop
lds
xchg
fwait
aas
popa
popa
icebp
xor
cld
aas
loope
data16
mov
movsb
push
lods
xor
mov
daa
sbb
sbb
pop
mov
jge
mov
stc
xor
add
add
leave
icebp
movsb
push
add
outsb
clc
xchg
bound
push
ss
add
add
mov
add
pop
push
xchg
dec
mov
daa
cmp
int
fsubl
aas
jp
loopne
mov
je
push
xor
add
add
add
add
pop
or
add
add
add
sub
add
add
push
je
icebp
mov
lods
inc
mov
rclb
int
push
lcall
insl
push
push
jp
sbb
inc
jae
ds
ud0
inc
add
add
inc
push
jnp
pop
mov
add
adc
mov
push
mov
add
add
jle
xchg
or
stc
imul
mov
and
out
inc
jne
fildll
add
add
ret
leave
fnstcw
std
bound
lcall
adc
movsl
insl
movsl
xor
shlb
icebp
jmp
mov
cli
das
jp
add
gs
xor
not
popf
mov
pop
and
es
jl
and
mov
inc
mov
pop
ret
mov
stos
sub
add
mov
cltd
pusha
add
add
scas
leave
adc
cld
movsb
sub
idivl
add
fisttps
imul
add
sub
stos
and
add
add
add
add
les
push
je
outsl
daa
dec
add
add
test
cmc
arpl
popa
lahf
xchg
pop
addr16
pusha
add
add
ret
jo
push
jno
pop
imul
outsl
inc
sarl
xchg
cmc
icebp
aam
mov
xlat
sti
out
sub
add
add
in
xor
ret
mov
ret
scas
daa
xchg
cmp
push
addr16
les
jecxz
out
or
xor
scas
stos
add
shr
or
fdivrl
lret
pop
out
inc
arpl
scas
daa
shrb
mov
sub
xchg
out
mov
mov
mov
ret
mov
add
add
pop
ss
test
icebp
shlb
inc
mov
mov
int3
inc
or
sysret
mov
pop
movsb
sub
add
add
jp
icebp
jbe
orb
inc
or
leave
test
jle
outsl
pusha
mov
repnz
mov
pushf
movsl
mov
sarb
je
je
xchg
ret
insl
out
dec
add
add
jb
cmp
cmp
bound
jo
mov
add
stos
sbb
mov
mov
and
add
add
in
or
add
add
fs
icebp
negl
mov
or
add
add
test
push
or
add
add
mov
cmp
loope
mov
lret
fadd
adc
cmc
outsl
mov
shrl
pusha
mov
stc
ror
mov
sbb
adc
ret
int3
fidivrs
sbb
mov
push
add
cmc
adc
mov
jno
cmp
fisubrl
push
ficoms
push
hlt
inc
push
rorb
jmp
add
add
jo
mov
sbb
mov
dec
iret
outsl
xor
add
add
in
getsec
mov
dec
pushf
int
mov
outsl
sbb
clc
aad
movsl
add
add
add
add
lock
xor
add
xchg
pop
aad
mov
mov
xchg
rorl
mov
mov
mov
jmp
testl
mov
fucomip
inc
mov
inc
pop
adc
lret
lds
xor
js
mulb
icebp
cmpsb
cmp
sub
add
add
sti
ret
sbb
pushf
mov
test
cltd
adcb
mov
push
lods
loop
mov
mov
pop
mov
add
add
addr16
enter
xchg
mov
sbb
cmp
xchg
jnp
push
xchg
or
add
add
push
into
jbe
xchg
jge
sub
or
add
add
stc
pop
sarb
push
std
cmp
fwait
mov
dec
mov
loop
out
push
in
fiaddl
jno
inc
push
pop
mov
xor
add
lea
push
notl
mov
pop
mov
sbb
aaa
mov
popf
pop
cltd
icebp
out
push
and
add
push
test
mov
ja
adc
add
add
mov
daa
js
add
add
add
add
mov
mov
pmulhuw
mov
cwtl
jecxz
or
shl
fwait
pop
cmp
fdivl
subb
add
add
jb
push
ljmp
sbb
sub
add
add
mov
insl
repnz
repz
push
or
lods
jo
scas
or
xchg
sub
add
add
add
add
repnz
add
xchg
test
adc
rcll
je
scas
hlt
outsl
push
mov
jecxz
jmp
cmc
ja
jae
lret
popa
xchg
addb
out
mov
lahf
xchg
and
insl
add
push
inc
aam
repnz
mov
ret
cs
addl
and
or
add
add
imul
add
add
nop
add
repnz
repz
adc
ret
movsb
lahf
enter
xor
jno
in
jnp
xchg
mov
or
add
into
negb
xchg
clc
push
xor
cld
sub
mov
add
add
mov
mov
xchg
sub
test
sbb
add
add
rorl
gs
rcl
out
xor
add
hlt
jno
xor
adc
mov
add
cwtl
sti
sbb
add
add
jb
add
add
dec
push
movsb
addr16
push
mov
and
mov
xor
xor
jne
outsb
test
xchg
sbb
scas
scas
in
das
mov
inc
mov
dec
xchg
sub
imul
push
xor
jb
in
out
pop
imul
pop
inc
sub
add
add
das
add
add
add
push
cmp
inc
add
add
xchg
pusha
mov
lock
fistps
mov
loop
mov
lcall
pop
popa
sub
add
add
ja
fistps
add
add
add
aad
fcompl
inc
movsl
lock
inc
xor
inc
pop
lret
jb
mov
imul
add
dec
mov
jnp
icebp
sub
fwait
dec
fs
aaa
jge
nop
dec
mov
xchg
jmp
add
mov
enter
popa
jg
xchg
icebp
cmp
dec
lock
call
xlat
rorl
and
cld
jle
repnz
rcl
pop
icebp
rorl
xchg
xor
add
sub
add
add
add
stos
ret
mov
xchg
push
addr16
add
add
jae
mov
dec
pop
int3
pop
fstps
jge
pop
mov
mov
xchg
xchg
push
inc
add
add
lock
mov
ds
and
add
add
xlat
out
jns
insb
add
add
sbb
mov
test
setbe
test
or
js
mov
sub
xchg
jnp
jl
lock
xchg
mov
lret
aad
leave
lods
mov
or
add
add
in
sbb
xor
fst
sbb
add
add
cmp
adc
sbbb
add
adc
imul
add
add
push
mov
push
lods
push
fidivrl
scas
adc
fiadds
inc
sbb
xor
mov
ss
les
movsl
in
in
rcr
jne
xchg
add
add
sub
mov
add
inc
xor
mov
sub
add
add
or
add
add
shrl
or
add
add
add
add
add
add
nop
mov
subl
jnp
sub
push
fsubrl
pop
jl
pop
fucomi
fstl
mov
add
add
lds
sbb
mov
and
pop
add
xor
sbb
lcall
mov
mov
not
push
out
jno
mov
inc
cmc
int
fimuls
or
add
add
mov
fsubl
cwtl
fnsave
xchg
call
icebp
enter
sbb
jecxz
lahf
jbe
mov
ret
enter
add
add
in
mov
inc
dec
add
add
fs
mov
add
add
sbb
jp
push
adc
mov
pop
pop
cmp
mov
jl
adc
loope
fs
mov
cmp
inc
nop
or
sahf
or
lea
mov
add
add
dec
mov
mov
leave
or
add
add
add
add
sti
enter
ja
xor
add
add
lret
jns
divl
popa
jnp
dec
add
add
sub
mov
or
jno
daa
pop
cwtl
out
inc
pop
jecxz
lret
mov
popa
aaa
adc
call
add
add
mov
pop
sbb
xorl
pop
inc
xchg
out
ljmp
add
add
dec
std
mov
mov
adc
stc
imul
cmp
add
mov
xor
add
add
enter
sahf
push
xor
enter
or
add
add
rcll
cmp
hlt
shl
sub
inc
sub
mov
loope
jne
xchg
xchg
and
add
add
addb
lds
fcomps
xchg
aas
into
or
mov
sti
lret
aad
lock
inc
lcall
add
add
test
jno
test
mov
jp
ret
add
add
popf
jp
inc
push
adc
add
add
add
sbb
loope
pop
je
mov
lret
les
jge
inc
cmp
ficoml
sbb
movsl
adc
add
add
add
les
in
mov
cmp
lret
inc
push
testl
bound
mov
sbb
push
fbstp
mov
fistps
mov
mov
lcall
popf
jp
and
lock
mov
les
add
add
add
jge
lea
sub
dec
add
add
int
add
add
mov
add
stos
ds
xchg
add
add
add
add
add
and
ljmp
sbb
add
cltd
push
subb
pop
insb
mov
sbb
xchg
rcrl
mov
int
cld
dec
ret
enter
cmp
cwtl
adc
pop
mov
rorb
out
mov
inc
adc
jne
insl
add
loop
pop
aaa
inc
dec
neg
rcll
in
adc
lret
and
jp
outsl
jne
jecxz
push
add
add
add
in
das
dec
mov
add
add
cmp
add
sarl
or
insb
add
add
and
add
add
mov
les
fmuls
sbb
je
add
out
shrl
add
add
sbb
movsb
or
mov
and
push
nop
arpl
mov
test
arpl
cli
hlt
bound
mov
inc
mov
inc
aas
xchg
mov
push
adc
add
add
add
mov
dec
and
mov
add
add
fldcw
jno
fnstenv
dec
mov
mov
add
bound
loope
insl
push
cmp
in
enter
xor
sbb
pushf
lds
mov
mov
outsl
pop
xchg
jno
dec
mov
cli
push
jge
xor
subb
xor
push
xchg
faddl
push
mov
mov
js
sti
imul
out
xchg
in
inc
or
add
add
add
add
pop
orl
or
je
ljmp
add
xchg
rcrl
repnz
or
cs
mov
cs
dec
pop
fimull
mov
je
sbb
mov
jns
xor
pushf
sbb
mov
and
fwait
sbb
insb
mov
insb
add
add
rcrl
pop
xor
gs
add
add
je
adc
cmc
inc
xchg
into
adc
sbb
in
adc
xor
mov
imul
xchg
fnstcw
and
cmp
call
sbb
sbb
add
add
mov
add
add
cmp
xchg
add
lcall
fwait
into
iret
and
insb
mov
and
test
lds
lods
jmp
sub
stc
aaa
pop
or
xchg
sahf
sbb
mov
iret
mov
imul
add
add
enter
add
and
sbb
add
or
aas
xor
pop
arpl
mov
jbe
fmul
and
mov
mov
lret
jns
xor
leave
pop
cmpsl
cli
sbb
decb
adc
pushl
adc
add
add
add
jae
mov
dec
aam
sbb
add
std
insl
sahf
ljmp
cli
stos
pop
jmp
mov
sarl
fnstenv
or
or
inc
gs
pop
xchg
fistpl
jg
jnp
mov
mov
stos
dec
add
add
add
push
sbb
xor
inc
xorl
cmp
cmp
push
sbb
adc
popw
sbb
adc
push
ret
adcl
sbb
push
mov
adc
add
mov
mov
push
or
sbb
subb
add
sbb
jg
and
mov
cli
incb
add
sub
sti
jge
pop
mov
aam
lcall
inc
out
mov
dec
add
add
es
jbe
pop
popf
adc
jmp
adc
add
add
out
pop
inc
add
add
aam
add
add
test
aam
sbb
addb
jo
pop
cmpsl
jne
pop
scas
add
add
mov
jb
mov
cmc
sub
repz
add
test
add
add
stc
xchg
push
sbb
add
add
dec
add
add
iret
mov
jmp
stos
mov
mov
pop
lcall
mov
loop
mov
add
add
sbb
jns
mov
mov
inc
add
add
mov
arpl
mov
inc
mov
inc
mov
jnp
dec
mov
sub
rcrl
add
add
imul
mov
xor
pushf
mov
xor
inc
jns
jo
in
aaa
mov
jns
out
jnp
in
mov
xchg
or
je
dec
mov
add
aam
jl
mov
add
add
add
cmpsb
xor
xchg
pop
pop
aad
adc
fwait
and
xor
add
xor
or
imul
add
add
daa
loope
mov
je
pop
fsub
stos
repnz
sub
or
mov
ja
mov
enter
scas
stos
mov
jecxz
cld
mov
mov
add
add
and
add
or
add
add
add
and
jo
xlat
adc
dec
mov
mov
and
dec
and
xlat
lds
push
add
add
add
add
add
add
add
test
out
or
add
add
or
add
add
push
cmp
mov
mov
cld
filds
push
mov
lret
loop
xlat
sbb
les
add
add
inc
inc
xor
jecxz
pop
xchg
pop
jg
mov
loope
fcmovne
cmc
xchg
or
scas
xchg
jae
outsb
dec
push
pop
ds
add
add
fs
int
in
push
mov
mov
imul
push
movb
fadds
xchg
mov
add
mov
cmp
xchg
or
jns
and
pop
imul
mov
shlb
aaa
test
test
push
dec
xlat
lcall
add
scas
fwait
adc
inc
add
add
outsb
lcall
add
jns
sti
cltd
mov
add
add
inc
mov
push
push
pop
cltd
in
push
lret
ds
dec
mov
mov
cmp
inc
push
gs
jp,pn
mov
push
or
add
add
push
ss
inc
add
add
std
jmp
xor
je
push
adc
push
pushf
outsb
sub
jae
xor
orb
add
cmpsb
fadd
orb
add
nop
fsubl
lods
mov
add
lret
mov
scas
xor
adcb
ss
out
mov
and
add
add
cmp
or
add
add
mov
orl
add
add
xor
std
lods
pop
push
insb
add
add
data16
mov
push
add
xlat
xor
loop
mov
mov
cmp
in
mov
sbb
mov
add
add
loop
nop
mov
sub
imul
jb
imul
dec
push
shrl
cmpsb
adc
mov
sub
add
add
add
pop
aad
push
mov
jbe
out
mov
add
add
pop
xor
xchg
decl
scas
das
push
cs
add
add
sub
mov
jl
jge
cmc
push
inc
mov
dec
jmp
daa
std
lcall
push
sub
mov
movsb
test
jns
cmp
loope
inc
and
add
add
adc
mov
mov
mov
cmpsb
fstpl
test
add
add
add
add
adc
stc
add
add
add
orl
fistps
mov
pop
mov
data16
lds
es
lock
add
inc
mov
add
add
repnz
push
addr16
cwtl
push
dec
add
add
bound
rolb
iret
outsb
ja
xor
mov
mov
popa
push
or
add
add
mov
aad
xchg
mov
add
add
ljmp
add
add
nop
je
jl
mov
lcall
add
add
in
push
jno
adc
jno
push
pop
and
add
add
mov
mov
add
add
repnz
mov
test
inc
ljmp
mov
mov
out
add
add
and
sub
adc
lret
pop
hlt
mov
imul
cmp
out
jge
ja
inc
dec
mov
mov
add
add
sar
inc
mov
ss
int3
sbb
mov
dec
cld
cwtl
xchg
push
push
popl
sbb
test
sysexit
xchg
mov
add
sahf
cmpsl
xchg
fsubrs
adc
jge
mov
mov
mov
loopne
cmp
cmc
or
add
add
jl
aaa
jmp
cmpsl
scas
fmull
lcall
add
add
or
in
xor
test
lock
push
loop
std
in
shrl
add
loope
cmp
scas
es
dec
add
add
out
inc
mov
lcall
cmc
in
adc
mov
jb
mov
add
add
ljmp
add
add
adc
dec
add
add
fldt
push
mov
andl
arpl
ret
jecxz
cmp
subb
loopne
jle
and
add
mov
mov
push
dec
mov
inc
mov
adc
add
add
nopl
loope
mov
ret
jo
cmp
test
test
fs
push
pushfw
adc
lret
test
jne
mov
mov
mov
jp
add
add
js
test
dec
pop
xchg
mov
inc
mov
ljmp
test
or
push
and
sbb
call
loope
shlb
xlat
ds
imul
mov
shlb
xchg
jne
test
pop
mov
push
add
jo
sbb
mov
pop
xchg
and
xor
fbld
add
add
lods
add
add
fs
pushf
xchg
cmp
nop
jmp
js
cmpsb
jae
cld
popf
popf
jns,pn
pop
int
push
mov
mov
push
or
sbb
cs
mov
mov
xchg
xchg
mov
or
adc
add
adc
jecxz
movsl
xchg
ret
add
push
pop
repz
dec
mov
mov
sbbb
shrl
mov
xchg
push
mov
jecxz
cli
and
sbb
ja
mov
repz
stos
sti
sbb
or
mov
jmp
add
repnz
adc
fwait
sbbb
mov
loop
jg
cmpsl
mov
add
or
mov
fnstsw
or
aas
or
ljmp
inc
gs
jno
pop
dec
add
add
mov
add
add
out
popf
cwtl
hlt
inc
imul
das
movsb
cmp
mov
mov
and
add
add
add
add
sbb
mov
arpl
test
add
add
sbb
repnz
iret
loopne
and
mov
pop
gs
add
mov
mov
jb
fst
mov
inc
mov
sahf
sahf
dec
add
add
dec
mov
xchg
adc
and
add
repnz
add
add
ljmp
popa
mov
add
add
inc
mov
es
fwait
stos
fcmovnbe
aaa
jbe
push
dec
pop
xchg
adc
add
into
insl
or
add
add
or
add
gs
cmpsl
and
add
add
add
add
pop
cmpsl
rcl
mov
es
fadds
pop
pop
dec
add
add
int
lret
cmp
lock
nop
jg
fldt
loop
in
adc
aad
sti
mov
mov
pop
call
mov
popa
loopne
adc
cmpsb
dec
mov
hlt
or
add
add
mov
sahf
mov
mov
add
add
add
mov
pushf
inc
adc
prefetch
add
and
add
add
adc
xchg
jmp
add
add
add
add
add
cmp
hlt
daa
mov
stos
ds
pop
divl
xor
div
or
add
add
adc
in
sbb
push
lock
pop
xchg
jge
popf
lret
mov
sbb
iret
xlat
xor
inc
add
add
xchg
sub
sti
push
addl
add
pop
jae
out
in
or
or
add
add
jg
insb
add
add
xchg
shl
sub
dec
icebp
xchg
mov
add
add
fstps
arpl
icebp
mul
scas
iret
cmp
xorb
bound
cmp
or
inc
pusha
mov
hlt
cmp
dec
dec
xlat
add
add
add
mov
cmp
rcrl
xchg
push
lods
out
xchg
mov
mov
popf
inc
pop
sti
andl
xlat
inc
mov
jb
out
dec
cmp
push
iret
push
mov
add
add
or
mov
or
lret
je
pop
mov
dec
in
mov
dec
lcall
add
add
mov
inc
dec
and
jge
adc
outsb
mov
xchg
or
add
mov
jmp
and
pop
pop
adc
iret
xchg
pop
push
jmp
ja
and
pop
aaa
xor
xor
xchg
sub
push
mov
int
cwtl
das
incb
xor
scas
subl
xchg
stos
test
xchg
sub
xor
add
add
sti
je
repz
cmp
pop
adcl
enter
scas
cmp
add
add
add
add
add
stos
js
icebp
jno
mov
inc
and
ficomps
insl
mov
jp
xor
mov
mov
pushf
fildl
insl
loope
adc
adc
xor
sbb
add
push
add
mov
xchg
jae
dec
add
add
jbe
fwait
mov
xlat
sbb
repz
jb
out
mov
mov
xchg
push
test
push
loop
addr16
inc
add
add
in
jl
in
arpl
add
add
addr16
mov
cmp
adc
xchg
and
adc
imul
add
in
jp
mov
out
jbe
jo
push
fists
dec
mov
cld
dec
shlb
repnz
ljmp
add
add
sbb
jb
jbe
sti
jl
add
inc
pop
or
add
add
mov
mov
xor
mov
adc
bound
sub
add
add
movsb
dec
movl
mov
outsl
cmp
es
and
add
add
mov
sub
arpl
gs
into
inc
rol
xor
rorl
repnz
pop
adc
sbb
add
subl
sub
lods
cltd
push
outsb
push
lcall
jb
fldenv
jg
cmc
loopne
push
cltd
sub
add
add
enter
ds
movsb
pushf
inc
ror
fsubrs
pusha
mov
insl
mov
int3
int
mov
add
loop
mov
enter
jnp
popf
push
jo
lods
repz
add
add
pop
mov
cmp
stos
cmp
test
cld
notl
add
pop
sub
add
add
into
cmp
test
shlb
adcb
adc
divb
adc
add
clc
sbb
jmp
call
add
add
add
add
dec
sbb
add
add
out
add
add
ss
mov
cmp
inc
cmpsl
hlt
inc
test
add
add
sbb
lahf
inc
pop
inc
and
add
add
lock
add
xchg
inc
negl
mov
fwait
cld
in
mov
pop
lcall
dec
inc
mov
mov
jb
movsb
sbb
stos
in
mov
scas
dec
test
add
or
aaa
mov
jmp
dec
sti
mov
push
mov
or
aas
aas
pusha
mov
mov
movsl
test
inc
nop
fld
rclb
es
jl
xchg
mov
mov
les
sub
into
xchg
jl
and
add
add
xchg
or
cmp
fdivl
aam
inc
pop
and
mov
mov
cli
dec
add
add
in
fistpll
inc
add
adc
shll
dec
sbbl
pop
xchg
out
adc
cmp
ror
into
lods
aam
jl
dec
enter
enter
sub
add
add
xchg
inc
push
inc
sub
xor
dec
add
add
push
inc
cli
mov
loop
xchg
xor
pop
icebp
or
add
add
mov
or
and
jmp
test
mov
jl
or
loope
add
add
add
jmp
popf
pushf
mov
std
adc
adc
aaa
xchg
sbb
imul
add
loope
lahf
or
add
add
mov
mov
mov
mov
mov
fadd
push
dec
iret
cld
lahf
or
add
add
insl
ljmp
test
add
add
adc
jns
notb
in
loop
sbb
mov
mov
jge
jp
and
aad
mov
add
add
es
popf
pop
je
mov
cld
cltd
sarl
loopne
sbbb
inc
sbb
ja,pn
mov
add
adc
test
insl
sbb
popa
mov
mov
aaa
jmp
mov
push
and
xchg
lea
mov
xchg
jmp
repnz
xchg
into
in
mov
adc
mov
icebp
stos
rorb
fdivrl
pop
mov
add
push
stc
scas
inc
dec
add
add
adc
xor
jbe
push
inc
mov
xor
mov
mov
push
cmp
clc
je
cwtl
lahf
jb
add
add
in
bound
add
add
xor
aad
add
outsb
rcrb
out
xchg
lret
stos
cs
gs
lock
pop
cmp
add
pop
into
add
je
or
xor
add
pop
lods
mov
jmp
xchg
dec
mov
imul
push
pushf
jae,pn
mov
sbb
orl
lret
inc
xchg
pusha
add
add
push
leave
repz
mov
fidivl
shll
ljmp
jmp
decb
lea
outsl
xor
jnp
xchg
or
mov
dec
ss
or
sub
lret
sbb
scas
inc
mov
mov
inc
bound
push
andl
and
cmp
hlt
sbb
inc
cmpsl
notl
iret
push
fcmovbe
jnp
std
shrl
add
push
jp
mov
test
mov
mov
mov
add
and
dec
mov
fisttpll
loopne
push
and
sub
or
add
add
and
add
add
inc
out
mov
bound
xor
pushf
add
mov
push
sbb
lods
addb
add
add
out
loop
xor
pop
sub
sbb
or
jno
aas
xchg
push
ret
std
andl
cmp
lcall
pusha
mov
inc
rcrl
xor
ror
mov
stos
roll
sbb
xor
fcomps
add
inc
pushf
call
add
add
test
loopne
loopne
jl
jbe
inc
add
add
fnstcw
les
stc
js
xor
insl
loope
mov
mov
dec
inc
mov
sbb
add
pop
or
add
add
add
add
mov
iret
adc
test
mov
mov
and
add
add
sub
add
add
popa
rcll
and
add
add
and
add
add
mov
mov
mov
or
add
add
xchg
mov
mov
mov
push
mov
sbbl
add
jp
sbb
pop
sub
jo
mov
cltd
mov
inc
into
in
jle
jle
dec
jae
pop
jb
add
ja
jmp
sub
dec
add
add
pusha
mov
aad
xor
add
add
xor
cmp
mov
or
cmp
push
in
cwtl
jmp
or
jle
or
add
add
insl
stos
dec
and
addl
xchg
inc
adc
dec
cs
jl
adc
push
lcall
scas
sub
add
add
and
mov
add
add
loopne
sub
dec
test
cmp
add
add
xor
mov
loop
in
fists
movsb
push
jo
push
aaa
adc
icebp
loop
mov
xchg
movsl
cwtl
cltd
aam
shll
add
mov
add
adc
inc
imul
or
add
add
mov
add
add
add
js
adcb
mov
clc
add
orl
add
orl
add
add
cmp
mov
aam
leave
sub
cltd
cli
aad
mov
push
lcall
add
add
add
add
add
add
add
add
mov
push
daa
sub
call
data16
inc
inc
mov
jae
insl
mov
add
mov
sbbb
push
sbb
fwait
lock
leave
popf
mov
testb
dec
out
inc
pushf
int
faddl
mov
add
add
adc
in
ss
stos
mov
mov
mov
jns
enter
arpl
adc
insl
loope
cld
mov
or
add
add
add
jb
add
add
add
add
add
mov
mov
add
add
push
dec
add
add
sbb
add
add
mov
adc
push
aam
sbb
jo
xor
call
arpl
js
dec
mov
pop
sub
add
add
push
enter
cmp
mov
cmp
adc
stos
dec
out
out
loop
cmp
inc
enter
add
add
inc
add
add
lods
mov
fcomps
call
add
sahf
es
add
add
jne
imul
sbb
insb
add
add
cmp
xchg
push
mov
add
loope
mov
mov
pop
leave
fwait
pop
dec
xor
test
or
popa
ja
loop
sbb
insb
mov
add
rcl
push
add
add
das
sarb
mov
xor
jae
fdivl
xor
sub
add
cmp
jp
xchg
stc
dec
mov
add
orb
cli
jge
jge
jno
pop
es
lods
sub
add
add
stos
push
pop
mov
adcb
shlb
test
add
xor
and
add
add
push
stos
ja
ja
mov
add
add
and
xchg
sbb
add
add
mov
jns
xlat
pop
jo
inc
pushf
int3
movsb
outsb
loopne
sub
inc
lret
pop
mov
push
add
mov
rcrb
fdiv
in
xchg
push
out
sub
add
add
mov
pop
or
add
add
ljmp
add
push
adc
dec
adc
pop
pop
mov
sbb
push
xchg
sti
pop
xor
push
mov
lret
out
popa
sbb
jmp
mov
add
pushf
aaa
dec
dec
stc
rcll
mov
int
push
xchg
insl
xor
sub
add
add
add
jae
loope
leave
fwait
cmpsb
mov
mov
push
xchg
mov
add
das
negl
subl
add
xchg
outsl
jge
inc
test
add
add
mov
nop
aaa
mov
mov
mov
mov
jno
jnp
lret
pop
addr16
xchg
inc
add
add
lahf
in
fwait
xor
std
popf
inc
add
or
add
add
sub
sbb
jae
out
mov
pop
sub
adc
add
out
sahf
in
dec
add
add
mov
dec
mov
xchg
test
cmp
xor
mov
pop
mov
test
mov
adc
sub
sbb
mov
iret
movsl
and
lods
jae
ds
sbb
arpl
adc
fisttpll
repz
mov
add
add
das
orb
shl
xchg
pushf
mov
adc
mov
cmpsl
dec
mov
mov
add
add
sbb
inc
push
mov
imul
sahf
mov
in
inc
rcrl
push
in
mov
xor
add
addr16
lcall
stos
and
out
adc
xchg
and
add
add
adc
xor
dec
mov
push
ret
cmpsl
jg
cmpsb
pop
mull
fldl
or
xchg
dec
in
add
add
lock
or
add
add
xor
adc
dec
js
inc
add
add
sub
cmpsb
sub
add
pop
mov
cmp
cs
add
add
mov
add
pop
dec
add
add
add
add
push
xor
out
xor
mov
cltd
cpuid
xor
mov
enter
sbb
pusha
add
add
imul
add
sbb
mov
daa
repnz
subl
jmp
test
pop
sbb
xor
inc
add
xchg
test
sub
inc
mov
pushf
stos
orb
add
add
cmp
add
add
pop
js
push
dec
pusha
add
add
push
lcall
add
or
add
add
stc
call
stc
insb
mov
pop
lcall
addl
adc
repnz
das
lret
cmpb
data16
xor
sbb
daa
scas
int3
jge
ja
xor
adc
xchg
cld
fistl
mov
scas
jecxz
mov
out
and
sbb
push
push
sbb
pop
in
sub
add
add
test
jge
mov
nopl
loop
js
pop
inc
mov
add
add
add
out
adc
dec
add
add
push
nop
add
add
mov
imull
lcall
mov
fwait
mov
xchg
add
mov
es
imul
insl
mov
bnd
cmp
sarb
add
mov
and
lods
out
cmp
mov
cmp
nop
inc
mov
or
sub
mov
add
add
call
push
int3
or
out
pop
pop
mov
