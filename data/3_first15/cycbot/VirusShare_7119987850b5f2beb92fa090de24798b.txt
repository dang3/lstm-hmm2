mov
iret
fidivrl
xchg
push
add
test
dec
xor
dec
sub
add
add
xor
outsl
mull
add
leave
fldcw
add
add
or
add
add
mov
iret
add
mov
enter
cmp
mov
enter
mov
sub
add
add
xchg
leave
jmp
pop
mov
popl
rorl
roll
add
add
ret
fisubl
mov
push
add
movsb
add
in
lods
imul
jmp
push
lea
mov
popf
push
add
jb
lret
test
sbb
mov
add
xor
push
add
and
add
test
add
imul
ret
sbbl
cmpsb
add
mov
stos
data16
sarl
das
subl
rolb
clc
sub
sub
lcall
outsl
push
add
add
les
push
add
xchg
loope
loope
jge
add
add
add
xchg
les
dec
inc
add
add
imul
inc
add
std
jae,pn
push
fsubrl
cmp
sub
add
test
add
add
test
cmp
pushf
outsb
adc
sarl
push
or
push
add
ret
add
stos
jnp
xchg
xchg
add
add
stc
jmp
mov
add
mov
mov
test
mov
ss
cltd
cld
add
je
cmp
adc
out
test
add
mov
cmp
mov
mov
mov
add
add
xchg
and
mov
xchg
add
cmp
add
mov
add
add
inc
scas
jmp
jmp
add
in
enter
mov
jmp
sbb
mov
add
scas
jmp
testb
icebp
mov
int3
xor
lock
lahf
stos
mov
sub
push
push
push
cld
call
sub
mov
cs
es
ss
lea
push
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
sub
push
pop
push
push
jmp
jmp
add
add
or
add
adc
pushf
sbbl
ljmp
add
stos
jge
add
add
pop
dec
add
call
mov
sub
add
scas
popf
xor
and
iret
iret
add
mov
sub
add
lods
call
add
cmpsl
mov
add
sub
add
std
jns
add
xchg
cwtl
insb
addb
mov
mull
fsubs
pop
call
lods
push
jg
xchg
data16
pop
fwait
popl
mov
repnz
add
dec
push
std
lea
add
iret
lret
sub
out
and
add
add
add
rolb
or
lods
ficoml
pop
and
ds
and
mov
movsl
aad
adc
incb
jb
fistps
adc
add
enter
xor
push
mov
and
mov
add
xchg
inc
add
addb
push
or
xor
das
mov
pop
in
push
mov
xchg
aaa
sbb
add
add
hlt
add
add
push
adc
add
or
in
test
add
pushf
jbe
xor
into
outsl
test
add
lea
dec
mov
loop
add
add
out
data16
add
pop
mov
cli
enter
cltd
stos
sbb
cli
xchg
add
rolb
ljmp
test
mov
adc
add
sub
add
movb
add
mov
add
cmp
push
sub
add
or
mov
sbb
loope
repnz
cltd
mov
and
dec
imul
pushf
rol
add
add
cmp
or
jge
push
add
insl
jle
int
inc
add
add
mov
push
add
add
xor
xlat
inc
add
ljmp
and
jl
pop
lret
mov
mov
xor
data16
add
add
add
sub
add
add
cmp
xchg
add
add
add
shll
add
pop
lret
cmc
fidivl
das
out
xchg
loop
pushf
aas
and
int
mov
add
dec
jl
jae
fsubrp
push
aam
loop
sbb
rolb
mov
add
push
add
add
popf
scas
lahf
addb
cltd
pop
cwtl
push
sbb
daa
repnz
add
add
jp
add
cmp
les
jp
test
pop
addb
jae
test
add
ret
or
roll
mov
fadds
fcmovnbe
dec
cwtl
xlat
insb
push
add
pop
loop
jns
test
mov
cltd
or
das
add
fnstenv
add
and
jp
movb
add
lret
add
jg
xchg
add
or
rorl
jbe
add
pop
inc
pop
cmp
xchg
fsubrs
add
add
add
sbb
clc
xchg
pop
jecxz
add
fs
ficomps
mov
mov
imul
mov
xlat
mov
add
xchg
fwait
repz
add
fistps
mov
loop
jns
add
add
add
jbe
nop
add
jecxz
add
add
mov
arpl
nop
add
jp
push
add
xchg
mov
mov
dec
inc
cmp
fmull
add
fdiv
add
fwait
push
loop
stos
and
mov
add
sbb
add
add
mov
imull
sbb
add
jb
xchg
lret
rolb
jno
leave
aad
cmc
pop
and
addb
jmp
add
cmpl
add
dec
xchg
mov
cmp
add
xchg
call
add
or
rolb
add
add
cmp
mov
add
xor
xor
add
xchg
add
repz
icebp
jmp
add
add
add
add
mov
inc
add
dec
ja
int3
or
add
inc
in
pop
and
sub
mov
pop
addb
and
mov
std
ds
push
add
add
dec
in
aas
pop
rcrl
or
add
sub
add
outsb
mov
adc
movsl
stc
jne
clc
cld
push
inc
cmp
adc
jg
mov
add
add
add
adc
jnp
add
add
aam
inc
add
push
pop
cltd
ret
into
cwtl
ret
add
add
mov
add
iret
inc
out
and
mov
mov
ss
sbb
add
mov
das
rolb
add
movb
add
add
pop
adc
std
dec
imul
mov
imul
add
pop
add
mov
sub
add
and
mov
add
push
add
shll
aam
jle
add
xchg
scas
jge
xchg
xor
inc
jae
add
mov
mov
mov
pop
push
add
pop
jno
add
stc
and
andl
aam
sub
add
in
andl
fidivs
push
xchg
fisubl
add
cwtl
rcrl
sub
out
dec
int
add
pop
jp
add
mov
add
jne
mov
and
mov
adc
das
arpl
push
add
add
or
add
jne
inc
add
add
add
mov
enter
jnp
add
add
mov
pusha
add
add
mov
mov
jo
push
add
add
push
add
add
in
add
push
add
addb
add
jge
cmpsb
add
or
adc
pop
xchg
add
sbb
add
sbbl
add
sbb
add
cmc
mov
push
pop
pop
xlat
popf
cli
jno
sub
inc
add
mov
cli
mov
cmp
push
xchg
lds
add
mov
push
sbb
add
movb
add
sub
adcl
mov
in
lret
push
add
enter
pop
dec
and
mov
add
push
add
add
add
mov
mov
iret
or
add
test
ja
int
xor
push
fbstp
sar
dec
adc
add
js
in
adc
sub
arpl
int
add
add
sub
push
sub
outsb
mov
nop
add
pop
sub
xchg
add
icebp
test
push
mov
mov
jp
movsl
outsl
icebp
stos
pop
leave
ds
mov
popa
jge
int3
shrl
sti
stos
push
in
bound
mov
scas
dec
inc
add
repz
repz
dec
lret
pop
cmc
movb
inc
add
jmp
addb
mov
push
add
in
data16
add
inc
das
addb
sub
add
pop
in
add
add
cmp
decl
lcall
pop
sahf
addr16
xchg
insl
call
mov
je
pop
cmp
fsubl
add
inc
add
sub
add
mov
or
scas
adc
mov
xor
add
outsb
adc
add
add
xchg
mov
inc
in
xchg
push
sahf
fistpll
icebp
stc
add
fwait
jmp
add
negl
add
add
sbb
jo
sub
jne
cmp
mov
mov
test
fiadds
cmp
push
in
cmp
add
sbb
add
sub
mov
mov
push
pop
aas
and
mov
mov
sti
test
int
add
lds
jecxz
movb
inc
jo
rolb
mov
add
stos
mov
push
icebp
mov
adc
dec
ret
add
sub
pop
xchg
jmp
mov
sbb
iret
sbb
mov
std
das
pop
out
add
mov
add
add
add
stc
add
int3
jmp
fstpt
stos
mov
pop
fsubrl
push
inc
add
push
add
and
mov
rolb
rolb
xlat
add
and
pop
or
pop
mov
daa
arpl
out
and
sub
fildl
xchg
mov
fbstp
outsb
sbb
jle
repz
xor
cmp
jb
fcmovb
dec
push
das
test
inc
add
mov
xor
out
add
add
data16
add
add
fwait
lds
test
or
add
cmp
rolb
loopne
pop
lahf
and
loopne
dec
mov
or
pusha
add
sub
mov
xchg
pop
bound
mov
add
add
add
jne
insb
pop
cld
mov
jne
in
add
xchg
add
pusha
add
icebp
push
dec
pop
pop
stos
shll
add
mov
insb
jno
add
mov
add
mov
rcrl
cmc
jge
fistps
ret
cmpsl
mov
pop
or
add
popa
dec
repnz
aaa
loop
daa
adc
outsl
out
fcomi
add
dec
jg
cmc
fs
adc
mov
nop
add
ds
add
imull
add
adc
sub
ret
mov
add
add
pop
jb
pop
jp
jns
add
mov
add
mov
mov
mov
fiaddl
mov
pop
stc
jp
out
arpl
clc
xor
cmp
push
add
add
add
mov
data16
mov
inc
std
adc
add
and
mov
lret
rolb
test
add
add
add
inc
add
add
lods
out
test
or
inc
add
jno
add
add
dec
aas
mov
shr
xor
add
in
mov
aad
add
adc
stos
int
mov
dec
test
add
ret
daa
mov
adc
add
add
cmp
cmpsl
lea
cmp
inc
add
add
lds
call
sbb
aaa
cmc
mov
mov
jge
mov
in
rcrl
add
mov
ret
test
xlat
ss
fcoms
add
lods
addb
add
push
add
push
inc
mov
add
sub
inc
add
les
mov
ret
add
add
xchg
sbb
add
add
imul
mov
shrl
ljmp
push
add
sbb
push
lods
loopne
mov
aaa
stos
cwtl
or
pusha
add
add
and
mov
xchg
cmp
xlat
shl
push
add
add
adc
mov
add
jb
jmp
add
mov
xor
lret
add
mov
add
out
push
add
mov
pop
addr16
ds
push
add
cld
jle
add
add
mov
popf
loope
leave
bound
mov
add
add
repnz
add
push
add
ffree
jg
mov
testb
sub
push
pop
rolb
jns
add
jmp
shll
mov
add
and
mov
add
add
out
mov
mov
add
add
add
add
add
mov
pop
inc
add
xchg
sub
push
daa
std
imul
push
add
sbb
xor
in
adc
mov
or
add
inc
mov
cmp
add
add
add
mov
icebp
jge
add
aam
addb
add
cltd
inc
dec
popf
adc
pop
add
ret
xchg
lea
in
pop
jno
jns,pt
add
das
xchg
fimull
add
add
adc
pop
in
add
mov
add
pop
cmp
aad
pop
fstps
push
add
jno
pop
push
add
add
jecxz
sbb
iret
xchg
outsl
push
add
repnz
add
add
mov
mov
int
push
add
sbb
add
ret
add
addb
push
mov
add
jge
add
dec
sbb
xor
jecxz
push
add
add
fwait
mov
addb
adc
jae
jo
ljmp
add
pop
jno
addr16
or
mov
stos
jge
cld
clc
add
pop
inc
xchg
cmpsl
or
add
loop
or
mov
add
add
std
mov
add
xchg
add
add
rcll
repnz
in
xor
mov
adc
or
mov
rcr
push
or
inc
add
add
mov
xor
add
sub
cmp
fiaddl
out
xorl
movb
sbb
adc
push
insb
imul
adcl
repz
add
jb
dec
pop
pop
rolb
pop
in
push
sub
ljmp
int
inc
add
enter
repz
in
push
add
add
ljmp
add
jmp
imul
popf
fwait
ret
popa
addl
mov
xorl
es
add
insb
sub
sti
outsb
rolb
add
xor
aam
jo
xchg
add
gs
dec
jecxz
repnz
add
pop
xchg
and
int
jae
add
outsl
xor
mov
xchg
or
js
movb
bound
mov
add
xchg
sub
add
rolb
mov
push
add
add
add
leave
fwait
adc
sti
das
insb
test
add
add
rolb
clc
sub
add
add
dec
ja
add
test
imul
mov
pop
push
add
jg
in
test
stos
sbb
sub
pop
jl
ficoms
sahf
mov
cmp
push
jp
add
add
fistpll
lods
xor
cmp
add
sahf
addb
and
mov
mov
mov
or
xchg
xchg
add
add
dec
jnp
adc
imul
add
out
fmull
add
cwtl
adc
add
cmp
jb
cmp
push
add
mov
add
lds
lret
out
add
adc
int3
mov
add
cmp
add
pop
adc
push
add
fdivs
add
add
out
pop
add
ds
aad
in
cmpsl
bound
mov
jp
cld
out
add
push
add
mov
lock
std
sub
in
dec
data16
movb
jo
mov
repz
push
das
adc
add
sub
dec
push
add
pusha
add
inc
jle
fsubrl
ret
or
popf
cmpsl
or
lret
mov
mov
add
mov
in
in
mov
add
cmpxchg
jge
add
add
pusha
add
fmul
push
xlat
push
out
mov
add
lret
push
add
adc
add
mov
mov
cmpsb
add
mov
scas
sbb
scas
rcr
dec
xor
mov
jb
xchg
adc
ja
lods
push
lret
movsl
xchg
jnp
out
sbb
out
mov
mov
fistps
cli
loop
testb
movsb
add
outsl
adc
repnz
aam
inc
add
cmp
hlt
add
mov
dec
dec
outsb
pop
fxch
addb
mov
mov
rolb
out
loope
int
out
addb
loop
fisttpl
aaa
sbb
and
push
add
mov
pop
push
add
mov
jae
fildl
fnclex
add
jae
cwtl
lds
add
add
jbe
mov
sub
push
jge
aaa
rolb
and
jg
xchg
hlt
add
add
imul
out
in
ret
jl
mov
std
jl
cmove
int
add
add
add
xchg
add
clc
dec
clc
das
insb
adc
fnstsw
sub
adc
test
test
mov
loopne
in
mov
mov
xchg
pop
mov
mov
sbb
add
add
int
lahf
xchg
add
adc
jp
xchg
add
cmpl
mov
lahf
cmpsl
push
add
sbb
sub
inc
add
jns
add
mov
adc
add
mov
loope
add
add
add
mov
add
add
jecxz
scas
daa
int
lea
add
mov
dec
js
sub
xchg
add
fbld
mov
push
jns
add
imul
adc
data16
add
add
lret
test
cmp
add
inc
add
hlt
add
dec
shll
mov
rcrl
xlat
add
and
cld
mov
cli
add
mov
sub
pop
fcmovbe
fnstenv
sbb
mov
add
movsl
cmp
inc
push
add
sub
rolb
clc
inc
cltd
gs
add
fcompl
and
mov
adc
mov
int
and
jb
and
xchg
test
dec
jae
and
mov
inc
rolb
mov
jo
ljmp
insl
mov
lods
cmp
jo
in
pop
jns
cmp
filds
mov
lock
push
inc
add
push
or
adc
cmpsl
add
rolb
cmp
out
jg
imul
lret
shrl
in
insb
dec
push
mov
mov
mov
adc
fimuls
enter
sub
hlt
add
add
jne
cmp
xlat
push
add
add
and
mov
jle
push
add
and
xchg
rolb
jb
adc
ret
adc
test
test
mov
or
adcl
push
jle
add
fcomip
dec
js
sbb
jecxz
sub
aas
clc
dec
mov
mov
cmp
in
imul
add
or
xchg
push
lods
push
add
faddp
add
add
sahf
testb
add
add
test
jp
add
inc
clc
dec
push
cltd
pushf
insb
xchg
add
add
in
add
push
add
sbb
inc
add
adc
cmp
addl
movl
std
jae
add
stos
out
js
add
mov
mov
jecxz
lahf
movb
add
add
mov
mov
data16
testl
xchg
add
imul
lcall
push
add
in
clc
jo
and
add
xor
sub
mov
clc
lods
and
mov
add
add
push
mov
stos
pop
jg
mov
testb
add
push
add
in
out
cmc
sub
in
jno
rcl
add
inc
add
add
add
push
popa
or
add
mov
add
filds
mov
fstpt
lcall
lock
call
jb
sahf
fmull
xor
addb
add
add
cmc
xchg
add
jbe
sub
arpl
and
mov
add
aaa
or
addb
add
cmp
dec
jne
add
pushf
lds
mov
add
inc
add
jno
jae
icebp
dec
sub
or
xchg
add
add
pop
andl
adc
jg
add
cmc
decl
inc
add
mov
add
lret
dec
mov
call
mov
add
pushf
mov
mov
add
xchg
sub
inc
jo
adc
in
cmp
imul
lods
add
add
outsl
mov
add
mov
sub
jg
mov
lahf
sbb
xor
mov
add
je
and
mov
add
mov
jmp
lcall
test
cmp
ret
pop
push
add
add
xor
in
mov
call
adc
push
add
add
cli
mov
inc
add
inc
add
add
or
fcoml
add
add
add
sbb
sub
cmp
add
add
insl
movb
add
loope
sub
add
push
sbb
mov
or
inc
addb
add
add
iret
add
dec
fsubrl
and
mov
add
mov
adc
cmp
adc
mov
movsb
add
mov
icebp
fcompl
mov
jns
add
or
or
loopne
arpl
or
jle
add
or
repz
adc
pushl
push
add
push
add
mov
das
aad
add
add
adc
add
inc
dec
clc
mov
sub
rolb
lea
xchg
das
adc
pop
aad
stos
cmp
mov
adc
jp
add
mov
xchg
add
add
add
push
add
xchg
and
mov
sbb
cmp
add
sbb
add
ds
je
xor
daa
pop
or
add
push
sub
xchg
lret
hlt
add
add
insb
mov
in
xorl
jbe
adc
sub
xor
mov
in
dec
add
adc
and
pushl
add
mov
pop
int3
imul
push
addb
cmp
data16
addb
add
add
cwtl
add
mov
je
add
sbbl
addb
add
dec
test
in
repz
loopne
fisubrs
outsb
xchg
pop
cmp
dec
addr16
add
mov
leave
test
push
inc
bound
mov
add
add
add
rolb
dec
and
mov
add
rolb
add
add
add
xchg
add
aaa
push
pop
mov
insb
rolb
add
ds
jno
jp
add
xchg
mov
add
and
mov
mov
lods
addb
adc
cmp
stc
std
jle
std
dec
push
cs
dec
push
sbb
scas
lea
push
add
mov
mov
movb
jl
pop
mov
ljmp
xchg
add
inc
add
rolb
loopne
mov
pop
adc
dec
imul
pop
fcompl
mov
add
test
add
jbe
gs
add
roll
cld
jnp
add
xor
push
lods
mov
nopl
add
xor
in
mov
dec
or
imul
add
mov
add
add
add
xchg
add
mov
add
jbe
mov
sbb
ljmp
repz
pop
pop
mov
add
push
or
add
add
mov
aaa
and
mov
add
xor
fimuls
aas
add
js
popf
je
jo
push
ret
sub
add
je
dec
and
dec
stos
rolb
fcompl
jmp
add
insb
ds
add
add
pop
adc
sub
add
jmp
fsub
ret
jno
ja
fildll
jge
sahf
mov
sub
fs
addr16
add
lods
das
push
add
jbe
mov
add
jecxz
add
push
mov
mov
add
testb
repnz
loop
arpl
dec
hlt
add
sbb
cli
dec
js
add
mov
inc
add
insl
loop
push
fwait
cmp
xor
mov
je
push
cmp
loopne
mov
add
or
sub
fidivl
xchg
xor
cmp
ret
sbb
jle
add
add
add
mov
add
inc
cld
fldl
add
add
aas
mov
inc
add
pusha
add
ljmp
das
rcll
mov
mov
lret
add
mov
and
add
loope
add
xlat
dec
call
add
cmp
mov
add
add
in
aam
ret
popf
mov
add
int3
xchg
scas
fwait
decb
pop
xor
or
add
cmc
add
mov
inc
mov
mov
ret
hlt
add
inc
sbb
out
xor
je
les
add
pusha
add
add
push
add
add
add
jge
add
gs
add
leave
xlat
pop
in
mov
dec
js
add
xor
add
mov
sbb
mov
jne
add
fiaddl
jae
sub
add
add
or
cmp
add
jno
adc
add
pop
cmp
add
test
mov
sub
push
mov
rorl
mov
fisttps
and
add
add
arpl
rsqrtps
push
add
pop
sahf
cmp
add
js
push
add
in
jg
lock
lcall
testb
mov
mov
mov
cli
lcall
add
jnp
add
mov
dec
rcrl
sti
pop
xorl
inc
je
xlat
les
pop
stc
aam
roll
lcall
mov
rolb
xor
hlt
add
push
jge
push
add
mov
leave
mov
imul
push
cmpsb
add
pop
rorl
add
inc
add
loop
pop
push
enter
loopne
jb
adc
mov
nop
add
in
cltd
js
add
fdivl
mov
sub
add
cmp
add
jp
popf
loop
rolb
popf
and
add
je
push
xchg
pusha
add
adc
sbb
jge
push
out
add
lea
movl
jnp
arpl
xor
hlt
add
mov
add
iret
inc
add
xchg
mov
jno
std
fisttpll
je
xorl
clc
arpl
add
lret
lock
scas
adc
add
add
mov
sbb
outsb
lods
icebp
fwait
jmp
adc
mov
push
icebp
jo
push
add
scas
push
mov
test
icebp
repz
add
std
ret
testb
adc
not
add
add
jae
mov
mov
add
pop
or
test
in
or
imull
or
fsubr
pushf
ret
jp
add
pushf
int
clc
pushf
stos
push
add
push
stos
and
sbb
mov
xchg
dec
aas
push
add
add
loopne
pop
xor
cli
mov
inc
add
add
out
shrl
arpl
add
mov
mov
lds
mov
inc
add
add
add
pop
and
add
out
pop
repnz
inc
add
add
dec
std
xchg
add
insb
jmp
jo
mov
add
icebp
sbb
mov
add
add
aaa
sub
jb
mov
out
push
movsl
arpl
sbb
mov
js
mov
das
loop
mov
addb
xchg
pop
dec
je
cwtl
and
add
mov
add
arpl
mov
add
popf
aad
dec
stos
sbb
pop
adc
shrl
stos
dec
mov
mov
aas
ljmp
cltd
loop
jecxz
add
add
and
xchg
in
adc
clc
xchg
add
add
add
or
xchg
add
add
dec
daa
pop
jge
add
aas
test
pop
call
rolb
add
add
test
arpl
add
adc
shl
add
rolb
sub
dec
push
add
add
sub
dec
add
popf
lcall
add
add
rolb
int
mov
ljmp
das
and
sti
ds
data16
jns
rorl
xchg
add
pop
stos
adc
pop
data16
add
cli
push
xchg
sub
mov
add
ret
add
sub
pop
cmp
jmp
cmpsb
add
ss
add
add
cmp
adc
cmp
add
call
shll
mov
into
and
out
xchg
add
cwtl
adc
sbb
push
dec
ret
add
pop
aam
jle
mov
insb
add
call
imul
xor
add
fidivrs
add
ja
jne
mov
xor
mov
jge
xchg
add
dec
dec
lock
add
js
add
ficoms
sub
xchg
add
fcompl
addb
mov
jp
xchg
add
addb
into
clc
mov
add
ret
add
cs
sbb
add
fnstenv
add
dec
xchg
jnp
add
mov
sub
mov
dec
testb
dec
dec
jae
loope
add
mov
add
add
add
dec
sbb
add
mov
push
jge
jo
negl
sbb
mov
add
add
sbb
add
mov
mov
cmp
xor
loope
rolb
push
xchg
add
add
gs
dec
out
sub
mov
jecxz
in
or
add
add
les
je
pop
jns
pop
and
pusha
add
add
aaa
mov
aas
ret
cmp
push
add
loope
popa
test
out
add
data16
add
insb
pop
xchg
mov
push
add
add
push
add
add
inc
add
mov
mov
fisttps
popa
adc
out
addb
sub
loope
sub
add
add
xor
push
add
mov
mov
addl
daa
test
ja
loope
adc
add
in
add
lods
push
add
pop
outsb
out
insl
push
add
loope
jnp
mov
cmp
aad
add
mov
cwtl
shl
sahf
pop
xchg
jmp
loopne
insb
add
mov
addb
imul
int3
push
int
add
cmp
add
jb
rolb
movb
icebp
js
add
mov
mov
out
ja
add
inc
add
inc
add
rolb
fwait
inc
add
jae
pop
dec
jae
add
add
dec
sbb
add
add
bound
mov
mov
insl
rolb
repnz
pop
xor
aam
push
add
dec
addb
push
bound
mov
add
xor
les
jnp
xlat
test
add
roll
mov
fwait
pop
arpl
scas
lock
out
ret
jmp
xlat
push
or
push
add
loop
addb
shll
pop
loopne
adc
add
add
sbb
add
mov
sbb
add
add
add
js
movsb
add
add
addb
cmc
dec
adc
cmpl
add
inc
add
xchg
add
cmpl
into
inc
add
add
mov
add
add
data16
add
popf
sub
fldt
push
add
add
add
popf
push
add
stc
cmpsb
add
inc
test
add
mov
stos
jle
add
adc
push
enter
mov
mov
sahf
js
fldenv
jecxz
or
xor
jns
add
jl
inc
add
push
aam
cwtl
lods
js
add
movl
mov
andl
dec
cli
pusha
add
xor
mov
mov
cmp
mov
add
rolb
cwtl
xchg
add
add
addb
jl
andl
inc
add
xor
mov
popf
insl
adc
xchg
sbb
add
add
and
mov
icebp
cmpsl
pop
dec
cmpsb
add
adcl
pop
xor
add
leave
pop
adc
test
adc
lret
mov
add
pop
jmp
cmp
add
mov
pop
sbb
addb
mov
fcompl
add
add
lahf
cmp
imul
xlat
xchg
into
or
add
push
add
xor
mov
add
jecxz
adc
adc
push
mov
mov
add
jmp
sbb
sbb
cmp
hlt
add
rolb
xchg
enter
jno
divl
pop
sbb
cltd
mov
mov
cmpsl
enter
outsb
movb
xchg
add
add
repz
mov
loop
mov
daa
ljmp
int
sbb
das
and
cmp
adc
mov
add
add
cs
iret
lods
popf
jmp
add
mov
xchg
pop
or
add
adc
sbbl
add
inc
out
daa
inc
add
add
mov
lret
fisubs
fwait
cmp
cmp
push
add
movsb
add
rolb
jnp
sub
sahf
addl
and
sti
cmpsb
add
insb
mov
addb
add
stc
cmp
dec
ret
das
rolb
add
add
add
sahf
mov
call
xchg
add
add
add
add
das
mov
enter
sub
dec
and
mov
lock
iret
data16
rolb
jae
sub
add
add
nop
add
mov
add
add
adc
push
add
fsubs
int3
cmp
loopne
xor
mov
fists
add
jmp
dec
sbbl
outsl
sarl
add
pop
outsb
xchg
add
push
ret
add
sbb
add
and
xchg
push
add
insb
and
cmp
push
add
mov
add
sub
mov
stos
fimull
scas
jb
sbb
add
add
cmp
jne
fldln2
sub
scas
dec
arpl
inc
add
add
mov
sbb
mov
rolb
inc
add
xor
rorl
inc
add
push
lock
int3
jl
push
add
mov
add
add
and
mov
and
testb
add
lcall
stos
leave
mov
adc
arpl
out
jbe
mov
lds
add
add
add
add
mov
sub
dec
pusha
add
add
add
addb
cmpsl
adc
lcall
add
xor
repnz
outsl
cs
je
enter
xor
add
cmp
dec
xchg
sbb
inc
pushf
pop
cmc
testb
add
add
adc
sbb
mov
jmp
fsubrs
in
hlt
add
xlat
pop
popa
sbb
outsl
and
mov
add
dec
shll
je
push
add
lcall
sbb
dec
jl
or
add
add
lcall
mov
fistpll
addb
xor
nop
add
adc
out
cli
mov
aaa
cmp
fisttpll
inc
add
add
addr16
mov
scas
pop
fisubs
add
cmp
ret
add
jbe
inc
push
or
stc
out
fwait
leave
lock
imul
xchg
sub
lods
mov
add
imul
dec
mov
xchg
inc
add
test
inc
add
pop
scas
stc
mov
add
xor
push
xor
add
insb
dec
mov
mov
in
add
repz
add
fildl
les
in
cmp
and
inc
add
xor
adc
dec
jnp
mov
add
add
stos
xchg
add
adc
lods
rol
cmpsb
add
adc
pop
inc
add
aas
add
mov
mov
mov
xchg
add
loopne
ret
jmp
xchg
sbb
mov
pusha
add
insl
js
scas
pop
rolb
push
insl
xchg
test
and
mov
push
and
loope
xchg
mov
add
add
add
test
pop
mull
mov
rcll
call
add
mov
sub
add
adc
in
add
add
aaa
mov
xor
fwait
sbb
cmpsl
xchg
repz
xchg
add
and
ret
sub
testl
add
add
int
adc
mov
mov
jg
add
add
sub
xchg
and
mov
mov
pop
lock
gs
rolb
xor
xchg
add
add
or
dec
dec
sub
xor
aam
fsubl
adc
mov
or
add
into
add
jns
pop
jl
add
add
add
sbb
add
mov
stc
arpl
dec
mov
mov
fwait
ret
add
add
ljmp
xchg
add
add
add
mov
add
xchg
jge
out
add
and
mov
mov
pop
add
rol
add
add
add
mov
mov
add
add
cmpsb
add
stos
or
jge
xchg
mov
vphsubdq
addb
bound
mov
fnstcw
shll
fmuls
jns
inc
jbe
mov
add
test
mov
mov
out
sti
imul
or
lock
inc
cmpsl
dec
mov
jl
add
xchg
ficoms
add
add
lcall
out
and
lods
cmp
addr16
clc
je
xchg
inc
add
push
int
mov
add
dec
lret
jb
mov
add
add
daa
adc
mov
add
daa
out
cltd
push
add
add
add
mov
add
add
mov
cmp
add
cmpsb
add
mov
add
stc
xor
dec
ret
add
or
add
mov
add
iret
loop
shld
add
sbb
lcall
testb
add
dec
leave
inc
add
shrl
cmp
add
outsl
icebp
xor
in
mov
arpl
popa
lret
addb
or
xchg
push
pop
pusha
add
pushf
adc
add
popf
rolb
xchg
push
stos
into
rolb
out
in
mov
add
fcmovu
push
mov
and
mov
add
add
ds
or
add
add
add
push
push
mov
loopne
insl
add
dec
enter
mov
lods
mov
pop
mov
adc
add
mov
dec
inc
add
insl
fcmovnu
inc
xchg
imull
inc
stos
out
scas
stc
add
mov
or
push
push
add
pop
sarl
add
lea
mov
push
add
lods
push
test
loopne
and
adc
dec
or
into
jne
add
fs
add
ja
jmp
add
mov
xchg
lahf
xor
fcoml
add
mov
enter
sahf
sahf
sub
mov
add
and
add
repnz
add
xor
repnz
ljmp
inc
iret
int
mov
mov
mov
mov
add
les
and
push
rolb
jae
data16
add
or
out
arpl
nop
add
add
mov
xor
ljmp
push
add
jns
add
push
add
dec
addb
mov
add
rolb
pop
xor
add
push
add
add
data16
and
mov
imul
movb
push
pop
or
mov
test
add
pushf
into
sahf
adc
and
imul
scas
pop
in
shrl
call
outsl
out
push
enter
fptan
add
fldcw
add
add
mov
pop
ret
popa
inc
xorl
add
in
mov
mov
test
jns
adc
inc
cmpsl
xor
or
mov
add
add
or
fistpll
add
mov
scas
xchg
bound
mov
repz
lahf
jb
inc
add
inc
jno
pop
sti
inc
pop
jle
scas
xchg
mov
add
popa
ret
add
cmp
dec
packuswb
add
xchg
add
add
dec
xorl
jnp
clc
adc
cmc
fdivl
lock
fchs
add
mov
fldenv
add
out
rorl
add
add
cli
jb
add
add
mov
out
xor
jle
movsb
add
mov
pusha
add
sbb
sbb
pop
xchg
repnz
sub
push
push
aad
add
add
xchg
mov
in
and
mov
mov
add
add
pop
inc
movsb
add
inc
pop
xchg
adc
int3
sti
mov
into
xor
sub
add
add
mov
jo
loopne
loopne
pop
in
out
out
lcall
add
stos
ds
popa
lcall
mov
add
imul
or
outsb
ja
add
xor
add
sbb
fisttpl
add
vmwrite
call
add
rolb
xchg
add
jl
add
add
jg
imul
in
adc
sub
add
add
sub
push
add
jo
out
dec
lods
mov
arpl
mov
popf
out
mov
sti
dec
and
mov
aaa
mov
mov
pop
mov
ret
nop
add
inc
add
add
jb
mov
ljmp
cltd
scas
lock
clc
fnsave
popf
bound
mov
inc
add
add
std
repz
inc
mov
add
pop
add
orl
mov
add
stos
daa
jnp
js
in
add
push
out
fdivs
in
jbe
lods
es
gs
mov
jnp
xchg
xchg
xor
jmp
push
roll
jbe
mov
dec
lret
add
add
mov
add
mov
xor
add
add
mov
xchg
sub
out
dec
aad
out
popf
fldt
loop
add
add
sub
sbb
sub
sbb
add
inc
add
mov
xchg
lock
nop
add
mov
call
pop
ficomps
sti
mov
pminsw
add
add
in
add
cwtl
ds
fidivl
push
add
mov
cld
mov
pop
sbb
add
mov
add
jae
add
shr
xor
stc
dec
xor
in
pop
dec
push
lds
pop
jnp
ficompl
xchg
cs
push
push
sbb
cld
inc
loop
dec
push
xor
add
popf
stos
mov
add
insb
imul
stos
jno
add
add
mov
add
test
adc
mov
rolb
inc
add
dec
ja
std
add
add
xchg
movsb
add
rolb
sbb
add
mov
mov
add
add
mov
mov
movsl
popf
add
mov
enter
scas
icebp
cwtl
sbb
jle
aas
ds
add
add
dec
hlt
add
add
bound
mov
add
push
add
stos
js
add
out
scas
mov
push
add
mov
mov
add
test
mov
add
or
add
cmpsb
add
testb
and
xlat
inc
add
adc
cltd
fsubrl
add
add
enter
pushf
sti
xor
imul
leave
mov
or
adc
int
pop
mov
aas
mov
mov
inc
add
fdivrl
push
add
in
push
push
add
mov
divl
bound
mov
add
test
add
cltd
add
scas
addb
shll
fadds
mov
add
add
xchg
mov
add
jb
call
add
add
jg
dec
roll
mov
jnp
dec
stos
ljmp
call
add
add
mov
add
push
add
pop
dec
jmp
ja
and
mov
mov
leave
inc
inc
inc
add
sub
add
pop
mov
cmp
sub
add
cli
hlt
add
inc
add
lret
movsl
mov
push
and
mov
and
add
add
cmp
addr16
add
stos
movb
in
addb
fsubrl
add
pop
or
add
add
test
dec
jne
jp
mov
inc
add
xchg
dec
or
jp
test
add
test
insb
jle
add
outsl
pop
test
add
add
add
loopne
adcl
gs
lock
jae
add
sahf
pop
sbb
orl
add
pop
rolb
je
lods
std
fdivrs
mov
ds
icebp
push
mov
call
movsl
incl
add
je
scas
ret
shll
int
test
push
add
push
add
test
xor
add
sub
inc
ss
xor
jbe
xlat
movsb
add
movsb
add
insb
cs
push
mov
push
add
pop
or
or
add
loopne
xor
xchg
add
add
pop
ljmp
stc
out
testb
rolb
repnz
stos
or
stos
out
rolb
push
add
mov
inc
mov
dec
aad
add
push
add
fidivrs
pop
addr16
or
mov
lahf
hlt
add
xor
pand
and
or
jbe
and
add
add
cltd
xlat
mov
rolb
mov
ret
push
cmpl
add
mov
sbb
add
adc
pusha
add
sub
lods
add
sbb
hlt
add
pop
dec
call
push
cmpsl
call
add
add
mov
cmpxchg
add
add
mov
add
add
add
add
add
mov
int3
addr16
test
shl
jns
inc
push
jb
dec
dec
lcall
inc
add
ja
add
jns
and
mov
adc
xor
mov
stc
mov
addr16
add
sub
pusha
add
adc
add
jne
sbb
or
mov
and
fldl
mov
adcl
je
out
gs
pop
and
out
imul
add
pushl
addr16
clc
outsl
ljmp
add
in
lods
les
cmp
out
popf
scas
xor
mov
stos
sahf
or
add
mov
adc
js
cmp
pop
lods
mov
and
aad
rolb
adc
jecxz
add
fisubrl
pop
loop
outsb
aaa
inc
cmp
out
adc
in
cmpsl
cmp
testb
adc
sbb
add
pop
and
add
stos
adc
xor
rolb
outsb
popa
loope
add
jl
mov
mov
enter
testl
jmp
icebp
rolb
add
movb
and
add
jnp
pop
sbb
mov
test
outsb
rolb
and
les
and
jb
pop
push
xchg
xchg
mov
loop
push
adc
out
xchg
rolb
pop
mov
add
mov
jecxz
add
movsl
testb
add
ljmp
icebp
loop
cmp
dec
addb
mov
adc
cmpsb
add
mov
je
dec
jnp
jl
sub
add
sbb
add
add
mov
aam
inc
jp
testb
imul
pusha
add
in
or
lods
xchg
lahf
sbb
movb
add
inc
add
jge
inc
mov
jmp
filds
mov
add
xchg
orl
xor
imul
test
js
lock
and
mov
roll
cmp
add
les
jbe
sub
jge
add
pop
stos
repnz
inc
lock
sub
mov
arpl
sti
repnz
or
push
add
or
andl
adc
add
leave
mov
jl
add
add
or
insl
clc
and
xchg
add
adc
rolb
insb
pusha
add
stc
pop
lahf
push
add
add
add
mov
push
add
jae
xor
popa
and
mov
add
and
push
add
push
aaa
and
dec
clc
out
mov
jle
ficompl
adc
inc
add
mov
rolb
clc
inc
out
adc
gs
rcl
test
push
inc
jp
add
and
int
test
xor
and
mov
add
add
add
icebp
fists
test
fsubs
leave
mov
adc
and
push
add
add
ja
je
leave
jne
popa
fadds
add
add
ja
sub
add
add
sub
push
add
mov
inc
add
pop
fwait
sahf
mov
add
stos
in
aam
and
or
mov
ret
add
ss
fiaddl
add
add
mov
mov
dec
stos
cmp
rolb
lds
mov
ds
add
mov
pop
sub
data16
js
dec
adc
je
leave
xchg
add
dec
or
add
mov
add
mov
xchg
add
mov
sub
cmc
add
mov
push
add
adc
sbb
add
rolb
popf
pop
mov
add
cmpsb
add
jns
cmp
xchg
add
mov
loopne
inc
add
mov
jns
adc
add
add
mov
jbe
pop
daa
jns
jno
xor
cld
mov
scas
and
push
inc
jmp
jge
add
add
roll
add
das
test
mov
pop
cmpsl
or
call
push
add
adc
aam
nop
add
mov
add
movsl
mov
mov
add
aad
inc
add
add
stos
addb
sbb
cmc
and
lock
mov
add
xlat
add
mov
outsl
stc
int
cmp
add
fldcw
add
stos
rolb
mov
xor
outsb
jle
add
in
cmc
in
xchg
rcll
add
sub
cmp
xchg
add
mov
xchg
add
hlt
add
add
and
data16
adc
jl
aaa
mov
mov
cli
fs
add
mov
test
loopne
push
stos
jmp
inc
add
add
jp
in
sbb
add
ret
jmp
jo
adc
ljmp
add
movsl
sahf
push
adc
nop
add
incb
push
add
movsl
fcomp
push
add
sbb
add
mov
movb
add
add
fsubrl
add
add
mov
mov
inc
push
add
push
or
add
and
add
mov
lahf
xchg
popa
pop
and
mov
and
mov
adc
aas
dec
lcall
push
add
movsl
add
dec
xor
mov
add
mov
add
movb
add
into
inc
cmc
cmpsl
jmp
inc
add
add
cmp
add
out
leave
scas
ljmp
add
pop
ret
or
push
mov
and
nop
add
mov
add
test
sub
dec
adc
dec
mov
mov
and
cmp
mov
sub
add
mov
icebp
std
mov
fisttps
test
add
add
std
pop
scas
jbe
movsb
add
aam
testb
outsb
lods
jae
add
pop
cmp
add
es
ret
push
ljmp
sbb
add
in
xchg
add
jmp
add
rolb
push
add
add
add
push
sub
pop
clc
push
push
xchg
sub
hlt
add
add
mov
iret
jmp
add
add
sarl
mov
pop
mov
addb
dec
cld
call
pop
pop
mov
loop
mov
or
fsts
pop
push
add
jge
fwait
and
pop
adc
repz
mov
and
mov
lds
inc
add
add
fisubrl
add
jecxz
add
into
pop
dec
ret
xchg
add
popf
mov
outsl
xchg
addb
push
pop
inc
push
add
add
les
or
cmp
xor
dec
sub
dec
mov
sub
cmpsl
lahf
sbb
mov
add
popa
je
scas
mov
into
outsl
or
lock
xchg
mov
loope
sub
lods
mov
jo
add
stc
inc
add
dec
mov
push
jmp
mov
mov
mov
aaa
ficoms
scas
imul
pop
iret
cmp
add
cwtl
jg
add
add
aaa
in
ret
add
movsl
jnp
push
mov
add
jmp
add
jns
adc
jmp
mov
sbb
add
pop
push
add
dec
xchg
add
xor
call
or
dec
testb
mov
xlat
das
jns
sahf
addb
xor
pop
jo
dec
adc
loope
cmpsb
add
pop
mov
nop
add
and
mov
push
jge
jl
bound
mov
push
xchg
mov
in
insl
stos
mov
sbb
out
jo
cmp
sub
jb
ficompl
add
addr16
rolb
xor
mov
add
mov
add
data16
add
ss
sbb
push
add
pop
xor
add
mov
add
stc
pop
ret
fistpl
inc
xor
or
cli
jo
rolb
ljmp
add
or
add
jge
leave
loop
mov
adc
fistpl
lods
insl
mov
pop
xor
add
jne
add
jae
mov
sbb
loop
daa
xor
xchg
xchg
add
in
add
add
fmulp
dec
jp
add
add
add
ret
fbld
add
add
push
add
add
add
adc
enter
adc
push
add
mov
ret
pop
mov
mov
pop
or
add
sbb
jnp
lcall
mov
add
ret
movb
inc
add
cmc
fs
add
add
push
mov
fldl
cmc
push
add
add
mov
mov
lods
sub
icebp
add
sbb
roll
test
lods
jne
leave
repz
or
outsb
dec
adc
ficompl
cmpsl
dec
pop
cmp
outsb
lret
lods
mov
add
add
sbb
push
add
add
scas
int
aaa
xchg
add
test
sub
mov
or
fistl
sub
add
add
fprem1
std
pop
sub
add
dec
test
nop
add
push
inc
dec
mov
mov
add
mov
icebp
aaa
jbe
in
sub
movsb
add
les
and
mov
shl
add
fiaddl
or
rolb
add
mov
test
xor
pusha
add
adc
sub
lgs
ret
mov
add
sub
hlt
add
add
mov
lahf
jmp
add
add
xor
mov
mov
fistl
ss
fsubr
adc
loope
pop
lods
jmp
mov
fmulp
pop
stos
cmp
scas
xor
int
lcall
add
add
add
dec
xchg
jg
addb
add
add
add
rolb
das
or
push
add
push
lea
add
mov
addb
mov
add
inc
fldt
arpl
xchg
add
mov
add
add
add
add
mov
pop
pop
popf
lock
movb
cmc
sub
fcoms
mov
sbb
dec
imul
fldl
fadds
add
stos
int3
into
loopne
jne,pt
adc
movsl
sbb
push
add
and
std
xchg
rolb
cli
addb
mov
cmp
add
stos
sbb
and
clc
mov
add
add
ret
sbb
out
xchg
mov
cmc
dec
mov
cmp
pop
or
loope
test
stos
add
add
pop
pop
call
les
addb
faddl
popa
les
popf
pushf
hlt
add
sub
add
xor
loop
xor
sahf
and
add
loop
testb
add
jge
add
mov
repnz
test
push
add
add
inc
inc
add
or
int
or
add
testb
in
add
test
je
ret
inc
lods
pop
scas
test
add
add
addr16
pushf
dec
jne
add
and
mov
ficompl
add
shll
aaa
in
mov
jl
add
sbb
push
add
add
leave
stc
lret
mov
in
add
iret
add
or
mov
dec
mov
add
inc
movb
xor
out
insl
inc
add
push
add
xchg
mov
add
and
aaa
lds
push
cmp
add
add
pop
ljmp
jp
lods
idivl
aas
data16
and
mov
mov
sahf
pop
mov
bound
mov
stc
add
inc
stos
xor
testl
mov
add
xchg
add
add
pop
in
xor
xor
mov
inc
add
loope
add
pop
dec
or
addb
xchg
popf
jo
inc
add
gs
enter
aas
pop
jle
mov
mov
je
test
lods
adc
loopne
jbe
rcll
add
loopne
cmp
push
loop
jns,pt
add
lret
daa
shll
jle
add
jne
add
adc
mov
leave
lods
shll
add
addr16
repz
or
xlat
lock
add
pop
and
mov
add
and
mov
sbb
aaa
pushf
dec
insl
enter
stc
stos
sbb
cli
and
dec
push
ret
ljmp
bound
mov
je
push
xchg
add
scas
add
add
add
add
mov
jl
xchg
add
hlt
add
add
add
mov
mov
pop
mov
loop
mov
mov
push
add
add
scas
xchg
addr16
les
xchg
pop
in
movsb
add
add
add
ds
add
xor
data16
mov
jae
or
cmp
push
add
add
add
add
add
out
lret
xchg
clc
add
out
fldl2e
ret
nop
add
and
mov
movsl
insb
xchg
add
add
or
sub
xor
cmc
jns
push
jmp
mov
add
add
adc
lahf
test
add
mov
mov
pop
adc
add
std
pop
cmp
addb
sbb
add
stos
dec
lcall
add
add
add
sbb
dec
xchg
add
pop
mov
cmpsb
add
mov
rolb
call
pop
ja
ret
stos
mov
mov
or
add
in
xchg
add
add
sbb
out
lods
aam
pop
mov
ljmp
shrl
add
bound
mov
add
pop
nop
add
add
inc
arpl
add
mov
cmp
aaa
rolb
sub
mov
testb
fcmovnu
add
lea
cmp
mov
or
cmpsb
add
add
add
imul
mov
pop
rolb
inc
add
inc
mov
imul
inc
add
xchg
sahf
aam
pop
push
add
push
sbb
fisttpl
push
xchg
add
adc
xchg
add
lret
cmpsb
add
hlt
add
mov
sti
cmp
add
test
fnstenv
sub
ds
mov
sbb
clc
xor
push
fdivs
sub
add
add
mov
mov
push
cld
jbe
and
add
test
addr16
mov
add
add
addb
lock
mov
cmpsl
add
jmp
cmp
in
inc
add
sub
rolb
mov
add
fildl
add
cmp
dec
pop
sub
add
push
add
add
push
xchg
add
jno
add
add
mov
in
arpl
add
xorl
xor
movb
xchg
add
mov
out
mov
mov
je
scas
std
jne
call
add
add
xchg
add
add
fisttps
add
jle
cmp
pop
jns
push
add
add
add
dec
daa
les
fisubl
cli
pcmpeqd
stc
sub
add
or
icebp
addb
pushf
push
movsl
int3
jp
mov
xchg
or
add
add
add
std
rolb
push
add
add
push
fiadds
cmpsl
ja
dec
movsb
add
add
mov
adc
and
lahf
xorl
iret
stos
xor
xor
gs
cli
fisttps
pop
and
std
sub
loopne
popa
mov
pop
rolb
jl
ret
mov
scas
add
std
movsb
add
xchg
sub
jnp
add
add
mov
add
adc
aaa
addb
lret
mov
jbe
ret
stos
jb
pop
push
add
mov
sbb
sbb
fidivrl
mov
loope
add
imul
pop
lods
mov
div
add
test
jae
add
mov
loop
outsl
push
rolb
jbe
jl
add
cmc
insl
push
xchg
push
inc
add
fldl
add
dec
xor
cmp
xor
add
mov
add
or
sub
stc
cmpsb
add
push
add
dec
testl
std
lea
push
add
std
loopne
test
xchg
add
mov
add
add
mov
in
data16
sbb
add
or
add
mov
inc
ret
add
sbb
jne
push
add
xor
pop
push
arpl
movsl
testb
add
cmc
mov
stos
addr16
sub
add
mov
xor
add
adc
push
outsb
or
fistps
mov
xchg
add
add
add
lea
rolb
loopne
adc
and
xchg
stos
cltd
add
fwait
into
mov
or
add
mov
adc
and
xchg
mov
push
add
dec
call
and
movsb
add
pop
stos
mov
loope
movsb
add
add
js
mov
push
js
add
and
insl
pushf
xor
aas
mov
add
mov
sbb
outsb
add
mov
lods
mov
add
jl
pushf
xchg
add
pop
sbb
xor
sub
add
push
in
std
jne
push
mov
adc
data16
push
aam
in
adc
xchg
add
and
sbbl
scas
mov
xor
mov
sub
test
add
in
pop
mov
pop
sti
movsb
add
hlt
add
adc
in
xor
xor
test
cmpsb
add
fistps
mov
jnp
or
xlat
push
add
loopne
xor
or
dec
stos
pop
ret
xchg
push
in
jo
gs
sbb
xor
add
sub
adc
out
ret
push
add
mov
add
in
ljmp
add
mov
push
xor
adc
or
xchg
add
add
add
imul
cmpl
add
inc
push
jno
xchg
and
cmpsl
mov
out
xchg
add
add
add
add
lea
add
inc
in
inc
in
adc
add
add
popf
aad
sbb
or
push
je
out
addb
add
cmc
hlt
add
xchg
pop
jecxz
add
sbb
in
loopne
mov
mov
dec
mov
adc
mov
adc
add
jmp
pop
mov
inc
add
les
mov
xchg
cmp
sub
add
xchg
push
add
insb
lcall
rolb
cmp
add
or
shll
xor
pop
ret
insb
xchg
push
add
mov
add
testl
add
cltd
das
xchg
push
add
or
or
adc
mov
lcall
in
icebp
dec
pusha
add
add
mov
mov
mov
add
jno
add
add
out
fadds
add
iret
xlat
xchg
loope
add
add
outsb
outsl
notl
add
push
add
add
push
lods
pop
fwait
sub
inc
add
add
mov
mov
mov
add
push
add
add
cwtl
cmpsl
inc
je
icebp
icebp
adc
cmp
add
mov
inc
add
andl
and
fcompl
mov
mov
test
pushf
ljmp
mov
lcall
add
fsubs
outsl
inc
das
or
add
or
jg
in
sbb
xchg
aam
xchg
add
out
cmp
add
add
pop
stc
mov
add
xor
xor
shll
xor
add
ret
addb
add
add
sub
std
mov
call
push
movb
addb
imul
cmp
sti
ret
cwtl
xchg
scas
add
mov
insb
out
test
mov
mov
dec
stos
push
add
sti
sub
movsb
add
pop
pusha
add
add
xor
push
add
mov
add
addr16
pop
cli
add
mov
cmp
add
mov
add
imul
lds
addb
dec
gs
adcl
daa
loop
adc
rolb
dec
daa
cmp
push
xorl
inc
xor
jg
add
lret
mov
pop
mov
cld
sti
fnstsw
mov
das
pop
aad
add
jmp
add
test
cmp
cmc
mov
add
add
les
cs
aaa
mov
add
adc
pop
mov
mov
bound
mov
or
pop
dec
push
ficompl
xchg
add
test
rcll
dec
nop
add
movb
rcl
pop
sub
jg
out
pop
jle
xor
add
imul
sti
add
mov
mov
outsb
roll
test
ficomps
je
add
enter
mov
mov
clc
in
add
test
cwtl
push
add
dec
sub
fwait
xchg
jl
pop
xchg
mov
rolb
test
out
jg
add
xchg
xchg
add
repnz
inc
add
mov
dec
out
jnp
add
fcomp
popf
jmp
xchg
jp
add
add
mov
pop
pop
int
xor
push
push
add
pop
testb
xchg
test
js
add
js
xor
inc
sbb
dec
ja
fnstcw
add
xchg
sub
fstps
and
mov
in
rcr
ljmp
aam
push
add
mov
jae
add
xchg
add
in
gs
push
add
mov
or
push
add
mov
jne
dec
mov
add
rcll
lahf
mov
jmp
xchg
int3
dec
push
ficompl
xchg
mov
fsubr
loop
xchg
add
fimuls
add
add
push
add
xor
adc
sbb
lret
mov
push
aaa
into
lret
add
stos
push
add
stos
sbb
mov
inc
add
mov
add
add
xor
dec
std
fnsave
lret
and
into
adc
add
mov
addr16
add
push
loop
in
pop
fbstp
and
mov
sahf
movsl
outsb
add
ret
add
mov
sbb
add
mov
cltd
xchg
outsl
jb
pop
mov
inc
push
add
add
les
call
lret
repz
jmp
add
gs
add
push
das
sbb
popa
add
mov
sub
adc
mov
cmpsl
push
sahf
call
cwtl
add
xor
lahf
mov
inc
add
jns
add
out
fsubl
xchg
add
rolb
mov
jl
fisubrs
mov
add
imul
push
add
xchg
les
sbb
or
xchg
and
mov
jecxz
add
xchg
xchg
add
das
dec
jp
add
imul
ficompl
dec
sbb
or
dec
int
add
xor
pop
mov
aam
add
aaa
lret
mov
mov
pop
aam
mov
mov
push
sbb
add
aas
and
mov
cmp
xchg
add
add
lds
add
fstp
push
add
lods
aad
add
std
or
mov
inc
hlt
add
icebp
lret
push
add
repz
jb
popa
stc
les
jle
add
adc
sbb
inc
xchg
pop
adc
inc
sbb
lea
fldenv
add
aad
pop
sub
and
mov
add
sub
pop
mov
pop
js
add
mov
add
mov
add
mov
pop
jle
xchg
loopne
xchg
add
mov
add
in
jbe
jg
and
push
add
inc
add
add
mov
add
in
mov
or
inc
add
add
push
add
add
add
jl
negl
int
repz
aam
insl
mov
addb
mov
dec
les
push
outsb
inc
add
scas
add
add
mov
dec
leave
and
lea
or
add
and
jmp
push
add
add
add
scas
inc
add
add
and
getsec
push
in
ss
adc
bound
mov
add
sbb
sbb
test
or
cmp
push
add
mov
dec
jb
jmp
add
jmp
pop
aam
push
add
mov
mov
push
add
in
imul
add
test
add
movb
add
rolb
adc
push
add
pop
scas
jmp
cwtl
cli
mov
mov
inc
cld
pop
xor
mov
add
rolb
push
add
inc
add
add
dec
aaa
lret
and
add
dec
push
add
add
out
xchg
add
add
rcll
movsl
xchg
bound
mov
jae
push
add
frstor
mov
pushf
push
xchg
add
ret
in
clc
aam
adc
out
mov
fdiv
add
add
add
add
push
sub
or
add
add
add
xor
xchg
add
fcoml
add
lret
das
lcall
stc
sub
clc
out
jmp
jne
test
add
pop
and
and
daa
mov
xor
add
in
std
sbb
out
mov
push
or
xchg
mov
lcall
jl
push
flds
testb
pop
cmp
lods
test
add
push
icebp
ret
push
add
dec
stos
pop
clc
xchg
add
add
stc
mov
mov
test
add
and
lcall
cs
mov
ljmp
jg
jl
les
testl
add
inc
jno
add
add
add
mov
add
adc
xchg
mov
test
add
add
cmc
cmp
fwait
and
mov
lods
push
add
adc
add
add
cltd
xchg
add
pop
scas
sub
insb
push
add
add
push
add
dec
psraw
pop
dec
out
jae
cltd
movb
loope
pop
ret
or
add
jmp
push
add
mov
push
mov
add
add
add
testb
pop
adc
add
mov
adc
popf
or
fisttpll
pop
lods
and
rolb
lods
cmp
add
xchg
das
push
push
add
add
fucomip
add
xchg
hlt
add
add
cmp
andl
cmp
jp
add
mov
add
add
add
dec
movsb
add
movsb
add
mov
xchg
add
add
mov
fs
add
lret
clc
aam
pop
add
rcll
pop
xor
add
and
mov
and
add
add
add
rorl
gs
les
iret
sbb
icebp
mov
cwtl
mov
cld
fs
add
mov
mov
mov
mov
pop
pop
lcall
les
ljmp
pop
and
jne
add
pop
loope
lock
scas
mov
test
adc
push
int3
out
test
loop
addb
add
jmp
rolb
pop
push
add
roll
push
add
add
mov
dec
adc
cmc
stos
fpatan
lret
cli
mov
sub
popf
ds
xchg
add
inc
add
dec
in
mov
jg
stos
inc
sti
sbb
lea
mov
les
lret
ds
jno
inc
es
and
addb
daa
imul
int3
add
mov
insl
mov
push
pop
and
add
xor
mov
mov
xor
ret
inc
add
add
add
add
add
ficomps
in
mov
adc
sub
mov
add
ja
mov
cmp
add
push
xchg
add
lock
mov
lret
or
add
fisttpl
push
add
cmp
adc
out
imul
and
pushf
add
pop
rolb
les
push
aad
jbe
mull
add
xchg
add
test
data16
outsl
ja
inc
add
mov
lahf
popf
push
adc
add
add
ret
and
and
mov
add
add
add
add
testb
push
add
pushf
fsubrs
pop
loope
jnp
movsl
jo
lds
push
add
or
xchg
dec
jbe
test
gs
jge
add
add
stos
xor
lahf
sub
mov
scas
inc
push
adc
repnz
shr
inc
add
lcall
mov
testb
add
xor
adc
scas
push
fsubrl
add
jno
jle
mov
test
dec
jno
das
stos
sub
jbe
out
pop
in
xor
add
add
add
lods
dec
pop
mov
push
leave
jno
pop
pop
cmp
or
xchg
add
cmp
ljmp
mov
mov
jmp
ds
add
add
push
add
aas
fistpl
jl
and
mov
fimull
arpl
je
fld
add
jle
loope
inc
add
push
add
testb
add
mov
fstps
adc
mov
jbe
stos
or
lahf
pop
mov
sbb
or
cli
xor
testb
sbb
pop
xor
push
ret
decb
sub
bound
mov
add
test
xchg
mov
cmp
add
add
add
add
add
cmp
or
jo
popf
jb
fdivl
push
add
mov
add
mov
pop
repz
add
iret
xchg
cmp
mov
add
in
and
or
xchg
add
mov
add
mov
leave
cmp
mov
mov
dec
lahf
push
add
sbb
add
imul
or
add
inc
add
add
add
sbb
xchg
add
loop
insb
scas
push
rolb
jge
add
add
roll
mov
push
stos
inc
or
pop
cmp
fisubl
mov
mov
mov
add
add
sub
cmp
mov
rolb
ficompl
add
cmpsb
add
adc
xor
add
cmp
add
add
add
sub
stos
xchg
in
cmp
or
add
std
cmp
add
stos
fdivl
insl
dec
stos
jo
stos
fdivr
cld
push
cmp
xlat
lret
leave
jl
push
and
mov
add
rolb
push
test
out
ret
rolb
ret
lock
fldl
test
sbb
mov
add
lret
fdivrl
fsubrp
negl
mov
fisubs
xchg
fnstenv
add
jge
add
add
imul
xchg
adc
mov
push
aas
insb
js
push
add
popa
call
outsb
xor
add
inc
mov
outsb
jnp
add
lahf
cltd
pushf
ret
psubsb
and
sarl
add
rcll
pop
loop
in
mov
in
push
leave
cwtl
mov
add
add
add
clc
pop
fiadds
aad
add
mov
push
add
dec
lcall
and
inc
add
add
cmp
addb
add
add
jnp
rolb
test
or
into
add
add
push
or
in
pop
xor
jg
add
mov
sub
add
pop
pop
pop
rolb
inc
add
hlt
add
add
add
add
mov
data16
lahf
mov
add
add
mov
adc
lea
add
jno
add
leave
xor
addr16
add
add
sbb
inc
jae
and
in
in
sbb
pop
xchg
add
cs
testb
add
add
jae
outsl
jo
adc
lcall
loope
add
fcmovne
movb
add
mov
add
mov
aas
addr16
popa
cmp
mov
or
testb
add
add
iret
test
pop
push
add
inc
add
test
or
fcoml
insb
scas
xchg
jp
add
mov
test
lret
rolb
mov
lods
sub
call
add
sub
adc
add
jl
inc
pop
out
push
xchg
add
xor
sbb
jne
cmp
add
cmc
sti
clc
push
ffree
add
push
insl
repnz
loop
pop
fcmovbe
mov
lods
pop
mov
push
cmc
popa
setbe
sub
add
add
mov
movsb
add
pop
and
mov
xor
arpl
mov
push
jp
add
cmp
add
ficompl
xor
add
or
add
xor
cmp
sub
call
add
inc
repz
sub
mov
add
stos
cmp
mov
jns
inc
sub
test
rcrl
add
add
push
add
pop
adc
ds
pop
or
les
mov
add
adc
iret
sub
cmp
add
cmpsb
add
jecxz
in
dec
mov
add
inc
mov
cmp
data16
xor
lock
mov
loopne
and
xchg
testl
jno
mov
mov
lahf
outsl
push
pop
jbe
nop
add
xchg
cmc
push
jg
add
jmp
cmp
arpl
or
xor
in
jb
emms
xchg
nop
add
add
push
xchg
add
insl
add
aas
jbe
mov
popf
or
mov
add
call
dec
push
add
dec
push
add
mov
int
add
data16
inc
mov
xchg
ljmp
add
in
sbb
roll
add
jp
add
add
push
add
dec
cmp
add
loopne
shll
add
mov
xchg
in
and
mov
fistpl
lea
jne
add
add
add
or
xor
xchg
aad
mov
jl
add
out
das
lret
aas
and
mov
mov
mov
pop
xchg
add
or
pop
inc
enter
xchg
rolb
cmp
mov
add
jo
push
jp
dec
addb
cli
add
jp
add
push
add
and
pop
add
lret
aas
or
add
andl
add
pop
xor
aad
pop
jne
sbb
loop
repz
mov
mov
fists
xchg
pop
push
xchg
pop
repz
sub
mov
jno
add
add
out
add
add
add
push
add
movsb
add
xor
movb
out
addr16
test
hlt
add
cmp
rolb
fidivs
mov
mov
mov
movb
jg,pn
mov
fstp
mov
and
das
stc
fldt
or
add
lea
int
add
or
mov
xchg
mov
mov
movsb
add
adc
pop
je
iret
or
add
or
dec
cld
adc
lea
loop
cmpsl
cmp
lret
cmp
int3
cmc
pushf
inc
das
out
mov
xor
add
das
mov
lods
aad
imul
xchg
add
ljmp
into
arpl
add
ret
movb
jbe
xor
add
xor
mov
movsb
add
sbb
add
add
add
mov
xchg
les
lods
test
pop
cmp
xlat
mov
jne
mov
add
mov
sbb
lock
xchg
lock
xchg
add
cmpsl
push
add
cmp
add
jmp
dec
inc
add
mov
push
add
jb
add
je
outsl
out
int
dec
jae
mov
fwait
cld
nop
jmp
add
add
push
add
in
mov
fwait
cld
nop
jmp
add
lods
punpckhdq
clc
repnz
jae
stos
add
add
test
and
add
repnz
jae
ret
jb
and
mov
add
stos
clc
repnz
jae
add
add
add
adc
test
add
clc
repnz
jae
xchg
push
and
add
xchg
push
mov
xchg
ret
scas
sub
nop
cmpb
leave
sub
adc
add
lods
pop
sub
add
gs
repnz
jae
stc
add
sub
cmpsb
add
popa
clc
repnz
jae
and
jne
mov
nop
add
add
mov
clc
repnz
jae
pop
jne
add
add
pop
mov
clc
repnz
jae
add
outsl
add
clc
repnz
jae
add
ja
dec
not
push
mov
xchg
ret
add
mov
add
clc
repnz
jae
jno
ret
int
idiv
repnz
jae
pop
addb
jp
add
add
repnz
jae
add
jp
sbb
jae
lods
add
sti
add
sti
fmuls
nop
jae
and
mov
mov
add
add
clc
repnz
jae
mov
add
jae
add
add
nop
add
inc
add
add
cmp
push
push
add
add
les
int
ja
add
sub
mov
clc
repnz
jae
add
or
add
push
mov
xchg
ret
add
xchg
add
in
je
clc
repnz
jae
mov
add
add
and
repnz
jae
mov
cwtl
add
int
add
add
fwait
cld
nop
jmp
sti
add
add
or
sldt
sti
add
xor
or
lret
nop
jmp
mov
jno
add
mov
add
and
add
clc
clc
repnz
jae
add
outsl
xor
mov
sub
nop
jmp
sti
int
add
push
add
add
clc
repnz
jae
add
add
add
pop
add
sti
push
les
add
cld
nop
jmp
iret
mov
jbe
sbb
repnz
jae
int
add
cmp
repnz
jae
sti
add
or
sar
nop
jae
jp
xorb
ja
add
clc
repnz
jae
add
xlat
add
clc
repnz
jae
outsl
pop
add
or
mov
add
repnz
jae
mov
add
sbb
fstps
add
clc
repnz
jae
add
int
std
pushl
clc
repnz
jae
add
add
mov
add
push
mov
xchg
ret
add
and
fwait
cld
nop
jmp
add
jo
add
add
add
push
mov
xchg
ret
add
test
inc
add
mov
xchg
ret
pop
mov
add
mov
clc
repnz
jae
add
stc
push
clc
repnz
jae
ja
push
push
jbe
push
xor
mov
jae
stos
add
add
jo
sbb
push
mov
xchg
ret
add
xlat
add
push
add
dec
fwait
cld
nop
jmp
add
xchg
add
xlat
ret
shl
xor
sbb
repnz
jae
sti
add
iret
xor
jbe
push
push
nop
jae
add
addr16
add
loope
add
sti
clc
repnz
jae
mov
or
sti
add
add
clc
repnz
jae
push
add
jp
add
jae
push
add
push
add
push
xchg
add
lods
and
imul
nop
jae
add
add
add
clc
repnz
jae
add
xchg
push
imul
inc
adc
add
stos
push
xor
add
scas
cld
pop
clc
repnz
jae
sbb
add
add
sbb
popa
add
repnz
jae
add
add
add
pusha
clc
repnz
jae
add
or
add
inc
jae
mov
clc
repnz
jae
add
push
rolb
add
cmpl
jl
add
add
ds
add
push
clc
repnz
jae
add
add
xchg
inc
add
add
lods
jb
xchg
xlat
add
push
clc
repnz
jae
sbb
and
outsl
scas
xchg
add
push
mov
add
inc
hlt
add
add
add
repnz
jae
push
push
add
xchg
dec
arpl
das
mov
fwait
cld
nop
jmp
add
xlat
or
clc
repnz
jae
add
add
jp
lods
imul
sbb
add
roll
add
add
add
mov
xchg
ret
jp
jbe
jne
add
add
push
mov
xchg
ret
add
add
push
aad
add
push
mov
xchg
ret
jp
add
push
fwait
cld
nop
jmp
push
cmp
scas
add
stos
lret
cld
nop
jmp
jo
jb
sbb
vdivsd
add
inc
add
add
add
xlat
les
add
sbb
add
clc
repnz
jae
add
add
jbe
mov
jb
cld
nop
jmp
shll
and
jb
or
test
nop
jae
push
add
hlt
add
cld
nop
jmp
or
add
add
add
add
clc
repnz
jae
push
add
outsl
jp
repz
fisttpll
mov
xchg
ret
add
ret
mov
or
repnz
jae
addr16
xchg
add
add
add
mov
xchg
ret
add
jno
add
mov
xor
add
add
clc
repnz
jae
add
xor
xor
int
add
inc
push
adc
clc
repnz
jae
mov
shll
mov
push
mov
xchg
ret
addb
add
gs
and
mov
mov
clc
repnz
jae
inc
stos
data16
clc
repnz
jae
mov
mov
cld
nop
jmp
add
add
mov
add
sub
mov
inc
add
add
jo
pop
and
push
mov
xchg
ret
or
push
add
push
pusha
fwait
cld
nop
jmp
add
push
pop
add
stc
mov
addb
or
fwait
cld
nop
jmp
add
add
nop
mov
inc
and
clc
repnz
jae
add
ja
add
cld
nop
jmp
add
xor
add
add
in
dec
push
add
add
mov
inc
lods
fldl2t
mov
add
add
jne
adc
add
or
add
and
mov
insb
insb
add
fwait
cld
nop
jmp
xor
jb
sti
loopne
add
add
add
repnz
jae
push
add
les
addb
add
clc
repnz
jae
add
mov
add
xchg
mov
add
es
xlat
add
repnz
jae
add
or
test
add
clc
repnz
jae
pop
add
sub
popf
clc
repnz
jae
add
pop
out
mov
clc
repnz
jae
les
addb
add
add
clc
repnz
jae
add
adc
nop
add
call
clc
repnz
jae
nop
add
add
xor
adc
add
ret
clc
repnz
jae
add
add
add
pop
clc
repnz
jae
lods
push
mov
mov
clc
repnz
jae
add
shrl
inc
adc
repnz
jae
and
add
xor
clc
repnz
jae
adc
and
test
xor
fwait
cld
nop
jmp
add
ja
add
push
mov
xchg
ret
add
ror
add
test
fwait
cld
nop
jmp
add
add
scas
sbb
mov
test
add
clc
repnz
jae
cwtl
outsl
add
mov
add
clc
repnz
jae
add
add
push
push
mov
xchg
ret
add
outsl
xor
cwtl
add
jne
clc
repnz
jae
add
or
mov
xchg
ret
scas
add
add
sbb
add
push
mov
xchg
ret
or
add
sbb
jae
stos
add
add
pop
int3
ja
push
push
mov
xchg
ret
add
or
pop
push
clc
repnz
jae
add
push
loopne
mov
add
repnz
jae
add
ja
xchg
add
add
clc
repnz
jae
mov
repz
int3
add
fmuls
jae
add
add
push
outsl
mov
lea
clc
repnz
jae
xchg
sbb
jb
xor
add
clc
repnz
jae
iret
push
add
les
ret
add
xor
add
clc
repnz
jae
outsl
jo
mov
repnz
jae
xchg
mov
or
repnz
jae
xchg
add
add
jo
inc
outsb
mov
clc
repnz
jae
sbb
roll
add
mov
mov
sub
lcall
ret
push
add
xor
push
adc
jnp
push
mov
xchg
ret
push
and
add
add
les
stc
mov
push
mov
xchg
ret
sti
mov
push
int
add
push
mov
xchg
ret
add
add
sub
add
add
fwait
cld
nop
jmp
jbe
xor
jne
sbb
int3
inc
add
add
lea
repnz
jae
and
stos
add
add
add
mov
clc
repnz
jae
ja
add
repz
fwait
lods
push
mov
xchg
ret
xlat
repz
jo
adc
push
clc
repnz
jae
add
add
sub
add
nop
jmp
ja
jno
outsl
addr16
call
clc
repnz
jae
scas
add
clc
repnz
jae
push
add
sub
push
push
neg
pusha
clc
repnz
jae
add
xor
nop
jne
int
mov
push
mov
xchg
ret
add
adc
bound
mov
and
repnz
jae
add
add
xor
lret
add
repnz
jae
or
sbb
adc
repnz
jae
add
and
mov
nop
jae
and
pop
jecxz
movzwl
clc
repnz
jae
add
push
clc
repnz
jae
add
or
lods
push
mov
xchg
ret
mov
scas
or
or
jmp
jb
ja
jo
add
jb
add
or
aas
sldt
clc
repnz
jae
add
sbb
xchg
dec
push
fwait
cld
nop
jmp
sti
add
cwtl
and
mov
repnz
jae
add
ja
or
mov
clc
repnz
jae
adcb
sub
lods
leave
inc
add
sbb
or
mov
fwait
cld
nop
jmp
add
add
jo
mov
fwait
cld
nop
jmp
dec
add
add
jp
lret
and
fwait
cld
nop
jmp
stc
sti
add
pop
add
add
push
push
mov
xchg
ret
add
addr16
pop
clc
repnz
jae
add
add
ja
mov
repnz
jae
add
inc
xchg
add
nop
add
add
add
test
and
add
repnz
jae
mov
sbb
nop
jmp
mov
add
mov
test
nop
jae
iret
push
fistl
repnz
jae
jno
xlat
stos
xchg
lods
add
add
clc
repnz
jae
add
sub
test
cld
nop
jmp
add
mov
xor
clc
repnz
jae
xchg
rcrl
cmp
clc
repnz
jae
add
ret
add
clc
repnz
jae
repz
test
clc
repnz
jae
outsl
jne
adc
add
mov
clc
repnz
jae
push
push
and
test
mov
jae
mov
add
cwtl
sub
repnz
jae
jno
add
mov
add
clc
repnz
jae
add
add
add
add
mov
aam
lcall
jae
add
and
dec
sub
repnz
jae
add
mov
push
nop
add
mov
pop
aam
cli
pop
clc
repnz
jae
dec
push
int3
or
add
mov
clc
repnz
jae
push
mov
add
mov
cmp
repnz
jae
ja
add
add
shr
clc
repnz
jae
lods
add
inc
push
mov
xchg
ret
sti
and
sti
sti
mov
dec
push
push
mov
xchg
ret
jno
or
iret
hlt
add
add
cmp
repnz
jae
push
add
loop
fwait
cld
nop
jmp
add
add
add
clc
repnz
jae
ja
xchg
ret
add
dec
add
cld
nop
jmp
add
or
sbb
mov
clc
repnz
jae
add
mov
jae
add
add
add
pop
clc
repnz
jae
add
or
jne
add
je
mov
out
pop
push
push
mov
xchg
ret
sti
int
sti
jne
add
fimuls
mov
nop
jae
adc
add
xchg
nop
add
movb
add
mov
xchg
ret
add
add
jo
add
mov
mov
add
insl
sbb
sbb
add
add
xor
fwait
cld
nop
jmp
sti
int3
push
add
push
push
mov
add
add
lret
mov
add
mov
nop
jae
xchg
mov
add
add
subb
repnz
jae
and
xlat
pop
add
nop
add
pop
clc
repnz
jae
les
add
stc
pop
jno
rolb
cmpl
fwait
cld
nop
jmp
add
add
or
cltd
es
fwait
cld
nop
jmp
add
lds
mov
xchg
ret
add
outsl
sti
add
inc
add
xor
add
add
cld
mov
push
mov
xchg
ret
dec
add
push
pop
pusha
push
mov
xchg
ret
ret
add
add
fwait
cld
nop
jmp
add
add
add
add
push
add
in
and
fwait
cld
nop
jmp
add
or
add
add
je
clc
repnz
jae
add
mov
xchg
adc
and
repnz
jae
push
push
int
ret
add
mov
xchg
ret
pop
pop
sbb
fwait
cld
nop
jmp
mov
jno
roll
add
pop
push
fwait
cld
nop
jmp
push
scas
nop
add
cmp
push
mov
xchg
ret
and
jno
xchg
jp
test
add
clc
repnz
jae
outsl
add
call
clc
repnz
jae
mov
push
xchg
decl
mov
adc
repnz
jae
add
int3
int3
add
pop
clc
repnz
jae
add
add
add
fdivr
repnz
jae
mov
add
sub
add
clc
repnz
jae
pop
add
sub
add
sbb
cmp
jae
jp
xorb
mov
stos
mov
clc
repnz
jae
push
add
add
add
or
cltd
flds
xchg
ret
ja
ret
movb
push
add
jmp
jno
add
ret
add
add
and
jae
add
jp
add
add
mov
clc
repnz
jae
push
pop
or
add
add
add
add
or
add
xor
or
add
push
mov
xchg
ret
iret
ja
add
add
clc
repnz
jae
sti
scas
mov
add
add
mov
clc
repnz
jae
add
add
push
lahf
push
clc
repnz
jae
add
rcll
cmp
cld
nop
jmp
push
sti
ja
xor
jno
add
clc
repnz
jae
cwtl
mov
add
cmp
add
inc
add
lods
add
add
jbe
push
mov
xchg
ret
mov
mov
in
add
test
call
add
push
add
mov
clc
add
clc
repnz
jae
add
add
clc
repnz
jae
xor
add
adc
jge
adc
repnz
jae
add
mov
fiaddl
xchg
ret
jbe
add
mov
add
ds
mov
xor
vxorpd
jo
add
mov
repnz
jae
add
inc
sbb
jp
dec
add
repnz
jae
ja
scas
add
add
mov
push
mov
xchg
ret
jbe
add
adc
test
nop
jae
or
xchg
scas
xorb
add
mov
clc
repnz
jae
add
pop
mov
fwait
cld
nop
jmp
add
add
jp
outsb
leave
clc
repnz
jae
sti
xchg
add
mov
add
out
pop
xchg
pop
mov
push
mov
xchg
ret
int
add
test
fwait
cld
nop
jmp
xor
mov
ds
ret
les
dec
add
add
add
pop
ja
add
clc
repnz
jae
les
add
int
and
push
mov
xchg
ret
add
add
repnz
jae
add
pop
mov
add
add
mov
clc
repnz
jae
xlat
pop
xchg
add
add
loope
add
add
fwait
cld
nop
jmp
add
lahf
call
clc
repnz
jae
push
push
add
nop
jae
or
ja
jo
aas
mov
clc
repnz
jae
xchg
cwtl
nop
pop
adc
cmpsl
addb
mov
clc
repnz
jae
pop
ja
add
mov
xchg
ret
ret
jno
mov
add
loope
ja
mov
clc
repnz
jae
add
fimuls
nop
jae
add
push
mov
and
bound
mov
mov
clc
repnz
jae
add
stc
mov
add
cli
mov
clc
repnz
jae
lods
ret
add
clc
repnz
jae
xchg
sti
dec
sti
pop
add
xchg
fisttpll
jae
add
int
add
push
add
push
push
mov
xchg
ret
ret
add
add
sbb
repnz
jae
mov
add
add
add
add
clc
repnz
jae
jno
ret
add
call
clc
repnz
jae
add
nop
outsl
push
mov
clc
repnz
jae
jne
xchg
sti
add
add
fwait
cld
nop
jmp
add
ja
add
mov
fwait
cld
nop
jmp
sbb
jbe
jp
cmp
test
repnz
jae
addr16
sti
xchg
ja
push
push
mov
xchg
ret
add
add
test
fwait
cld
nop
jmp
jo
xor
add
sbb
xor
add
clc
repnz
jae
add
add
clc
repnz
jae
push
add
add
pop
xchg
lock
add
fwait
cld
nop
jmp
cwtl
add
add
add
lret
pop
push
mov
xchg
ret
sub
push
scas
add
pop
movswl
clc
repnz
jae
subb
rep
clc
repnz
jae
add
add
xlat
add
xor
clc
repnz
jae
add
ja
add
clc
add
clc
repnz
jae
add
add
xor
lds
clc
repnz
jae
roll
and
sti
sbb
daa
je
call
repnz
jae
lods
inc
stc
add
add
test
add
fwait
cld
nop
jmp
and
sbb
jmp
jecxz
add
sti
ds
mov
add
push
or
out
clc
repnz
jae
add
add
add
decl
push
mov
xchg
ret
and
sti
sti
xchg
dec
inc
fwait
cld
nop
jmp
int3
add
add
push
and
loope
and
push
mov
xchg
ret
add
dec
add
jb
fwait
cld
nop
jmp
mov
push
pop
dec
jne
clc
repnz
jae
pop
add
add
push
xchg
xor
and
repnz
repnz
jae
push
add
xor
xchg
jge
clc
repnz
jae
xor
adc
add
push
fisttps
test
clc
repnz
jae
add
ja
mov
clc
repnz
jae
add
add
mov
clc
repnz
jae
mov
add
lcall
clc
repnz
jae
jno
add
sub
add
clc
repnz
jae
xlat
adc
sbb
add
clc
repnz
jae
mov
add
sbb
daa
negl
adc
repnz
jae
add
add
add
push
and
jmp
add
add
mov
sbb
push
add
mov
clc
repnz
jae
xor
roll
ret
aas
mov
clc
repnz
jae
push
add
enter
jae
add
sub
mov
xchg
ret
mov
add
or
mov
clc
repnz
jae
mov
add
push
push
mov
xchg
ret
mov
add
jo
jecxz
add
add
clc
repnz
jae
mov
add
add
mov
cld
clc
repnz
jae
add
add
aad
fs
cmp
push
mov
xchg
ret
add
push
inc
add
push
mov
add
scas
adc
add
add
leave
repnz
fbstp
ss
clc
repnz
jae
add
cmp
repnz
jae
subb
jg
clc
repnz
jae
add
push
add
repnz
jae
add
jne
mov
clc
repnz
jae
add
add
mov
push
mov
xchg
ret
add
jae
pop
adc
popl
clc
repnz
jae
add
and
sti
add
rep
clc
repnz
jae
add
and
stc
sbb
or
clc
repnz
jae
add
decb
nop
jae
add
ficompl
repnz
jae
add
add
sub
xor
add
clc
repnz
jae
add
lods
shl
push
mov
xchg
ret
sti
repz
jne
push
mov
xchg
ret
add
sti
push
add
mov
xchg
ret
scas
add
sbb
mov
clc
repnz
jae
push
add
push
mov
clc
repnz
jae
ja
inc
add
call
clc
repnz
jae
nop
jno
add
ret
push
mov
xchg
ret
mov
add
mov
ret
push
add
jns
fwait
cld
nop
jmp
push
stos
add
push
scas
fdivs
rclb
into
aam
add
add
add
add
clc
repnz
jae
addr16
mov
sbb
push
clc
repnz
jae
add
add
lahf
push
push
mov
xchg
ret
add
add
sti
add
add
dec
add
mov
icebp
mov
dec
or
dec
imul
add
add
test
add
clc
repnz
jae
add
add
jmp
fwait
cld
nop
jmp
sti
add
add
add
add
jns
mov
add
clc
repnz
jae
add
pop
fwait
cld
nop
jmp
add
int
add
gs
repnz
jae
add
pop
sub
add
mov
clc
repnz
jae
scas
jne
push
push
mov
xchg
ret
add
add
add
jae
add
ret
stos
clc
repnz
jae
sub
or
add
mov
pop
pop
fwait
cld
nop
jmp
add
sbb
scas
data16
dec
cmp
repnz
jae
ret
or
add
loop
fwait
cld
nop
jmp
push
add
adc
jnp
clc
repnz
jae
or
ret
or
add
sub
clc
repnz
jae
sbb
sbb
clc
repnz
jae
push
jno
add
add
cld
nop
jmp
add
jp
jne
push
pushf
cmpl
fwait
cld
nop
jmp
add
pop
xchg
repz
ret
mov
add
clc
repnz
jae
xlat
add
mov
test
clc
repnz
jae
or
add
clc
repnz
jae
mov
jno
add
clc
repnz
jae
sti
add
ret
addr16
movb
add
push
mov
xchg
ret
add
push
add
mov
nop
jmp
mov
add
add
mov
clc
repnz
jae
add
sbb
mov
nop
jmp
add
add
add
cmp
push
mov
xchg
ret
push
add
mov
lcall
repnz
jae
jb
add
popf
pop
push
mov
xchg
ret
jbe
xchg
add
ret
or
in
inc
add
addr16
ja
inc
pop
jno
mov
clc
repnz
jae
jo
add
push
jmp
push
add
mov
add
push
add
add
add
push
mov
xchg
ret
xor
xor
add
mov
pop
mov
clc
repnz
jae
roll
add
test
add
add
cmc
incl
add
ret
clc
mov
push
mov
xchg
ret
add
add
jne
mov
clc
repnz
jae
lods
add
rolb
sub
jb,pt
fwait
cld
nop
jmp
xor
add
mov
clc
repnz
jae
add
add
add
clc
repnz
jae
ret
add
add
add
add
push
mov
fwait
cld
nop
jmp
xor
add
add
add
mov
fwait
cld
nop
jmp
adc
add
add
add
sub
rcl
inc
add
or
mov
mov
jae
push
mov
add
ja
dec
out
cmpsl
cs
clc
repnz
jae
sub
push
sub
push
add
mov
xchg
ret
mov
inc
sti
add
into
cmpw
clc
repnz
jae
add
add
test
cld
nop
jmp
add
les
aaa
loope
jne
clc
repnz
jae
add
add
add
mov
clc
repnz
jae
add
push
ret
or
or
push
mov
xchg
ret
ret
add
repnz
jae
add
sti
add
int
mov
clc
repnz
jae
add
sbb
add
sub
mov
xchg
ret
jo
and
add
add
inc
clc
repnz
jae
add
mov
push
mov
xchg
ret
xchg
add
pop
xor
rcll
je
add
clc
repnz
jae
add
add
mov
clc
repnz
jae
add
lods
stos
stc
sub
nop
jae
add
add
add
ret
clc
repnz
jae
push
stos
mov
add
jp
popa
add
repnz
jae
add
jb
stc
outsl
add
mov
test
fwait
cld
nop
jmp
pop
add
add
mov
add
fwait
cld
nop
jmp
scas
int
cwtl
add
mov
inc
add
push
add
fwait
cld
nop
jmp
add
add
cmp
nop
jae
stos
add
clc
repnz
jae
add
add
ja
clc
repnz
jae
xchg
and
add
mov
ret
lods
push
jne
add
jo
add
sbb
sub
mov
cmp
ret
add
int
add
pop
lcall
cmc
incl
jne
add
in
inc
add
or
add
sbb
add
nop
jae
and
add
add
and
push
mov
xchg
ret
add
add
add
add
xor
repnz
jae
sub
add
add
push
sub
fwait
cld
nop
jmp
nop
add
stos
or
or
jmp
add
add
aam
xor
cmc
pop
mov
push
mov
xchg
ret
jno
and
jno
pop
xchg
clc
repnz
jae
or
pop
ret
repz
insl
rep
fwait
cld
nop
jmp
add
xlat
add
add
les
mov
jmp
stos
push
push
push
stc
xor
ds
ds
push
mov
xchg
ret
add
add
sti
add
sbb
ljmp
fninit
jmp
add
int
shll
inc
call
inc
add
sti
mov
add
add
add
rol
push
mov
xchg
ret
sub
les
mov
clc
repnz
jae
push
add
sbb
xor
add
clc
repnz
jae
sti
jbe
add
lea
clc
repnz
jae
add
add
add
test
pusha
add
repnz
jae
jo
add
mov
bound
mov
repnz
jae
sub
add
add
add
add
mov
repnz
jae
or
add
add
inc
add
add
jno
xchg
add
mov
clc
repnz
jae
add
sbb
add
pop
clc
repnz
jae
add
xchg
scas
add
mov
add
repnz
jae
roll
add
jno
clc
repnz
jae
scas
xor
jbe
mov
clc
repnz
jae
add
add
add
stos
sub
push
mov
xchg
ret
add
repz
add
add
lods
push
mov
xchg
ret
push
stos
xchg
iret
add
mov
jg
sbb
cmp
repnz
jae
add
mov
sub
nop
jae
add
sti
sti
jne
mov
clc
repnz
jae
add
aas
jmp
repz
add
addr16
xor
mov
push
mov
xchg
ret
add
add
add
mov
mov
xchg
ret
int3
sub
scas
add
mov
clc
repnz
jae
add
addr16
imul
jmp
xor
add
add
dec
je
clc
repnz
jae
add
and
repnz
jae
stc
add
add
sbb
repnz
jae
addr16
add
xchg
mov
push
mov
xchg
ret
add
dec
stos
sbb
add
mov
fwait
cld
nop
jmp
addb
or
mov
xchg
ret
jno
push
sub
ret
add
push
clc
repnz
jae
xchg
ja
xor
xor
add
and
push
fwait
cld
nop
jmp
int
repz
add
ja
fwait
cld
nop
jmp
add
sbb
jno
add
icebp
idiv
clc
repnz
jae
add
push
scas
cmp
nop
jae
jo
int
add
dec
push
clc
repnz
jae
add
or
pop
outsl
add
add
aas
adc
repz
ljmp
push
aam
div
ljmp
jae
add
or
clc
repnz
jae
xchg
add
adc
mov
fwait
cld
nop
jmp
push
sti
jo
and
inc
mov
scas
push
clc
repnz
jae
sti
jno
add
add
adc
loopne
mov
nop
jae
sti
add
add
jno
push
push
mov
xchg
ret
jb
add
sti
stc
add
add
clc
repnz
jae
adc
mov
sti
and
push
fs
repnz
jae
add
stos
ja
add
repnz
lcall
call
outsl
and
out
sub
sar
nop
jae
xor
add
add
push
add
mov
push
mov
xchg
ret
add
jno
or
pop
clc
repnz
jae
push
addr16
add
int3
xchg
stc
jg
dec
adc
repnz
jae
sbb
sti
sti
nop
mov
jns
nop
jae
jbe
scas
mov
xchg
push
add
mov
clc
repnz
jae
add
mov
add
cmpsl
dec
cmp
fwait
cld
nop
jmp
add
add
ret
mov
addl
inc
loope
lcall
add
add
scas
add
subl
clc
repnz
jae
mov
scas
add
icebp
cwtl
div
fwait
cld
nop
jmp
push
add
add
inc
add
stc
add
fwait
cld
nop
jmp
xor
addr16
add
cmpsb
out
inc
add
add
mov
add
mov
push
mov
xchg
ret
add
add
mov
clc
repnz
jae
add
outsl
cmp
fwait
cld
nop
jmp
les
add
add
fwait
cld
nop
jmp
jb
add
jo
push
clc
repnz
jae
sti
add
cwtl
add
add
sub
inc
add
jb
ds
test
test
adc
hlt
add
cs
clc
repnz
jae
add
sbb
add
push
inc
sub
repnz
jae
sti
add
ja
add
clc
repnz
jae
add
add
push
add
sbb
rolb
xchg
ret
sti
roll
add
and
mov
mov
push
mov
xchg
ret
add
add
xor
mov
push
mov
xchg
ret
add
mov
pusha
add
fwait
cld
nop
jmp
pop
stc
add
add
xchg
add
push
mov
xchg
ret
pop
add
sti
sti
add
cld
nop
jmp
add
add
xlat
push
add
fsubrl
sahf
add
fwait
cld
nop
jmp
lods
add
add
add
inc
lock
mov
xchg
ret
lods
pop
add
sti
push
add
add
xor
fwait
cld
nop
jmp
ja
jno
add
push
jno
add
repnz
jae
add
add
adc
mov
je
call
incl
stos
xchg
add
sti
add
mov
clc
repnz
jae
add
and
scas
add
xor
cs
repnz
jae
or
xor
aam
fsts
repnz
jae
add
int3
add
sub
add
push
mov
add
add
fcmovne
add
sarb
fwait
cld
nop
jmp
dec
add
int3
push
add
test
push
mov
xchg
ret
mov
add
ja
jg
mov
clc
repnz
jae
add
add
ja
inc
clc
repnz
jae
jbe
add
add
add
cld
nop
jmp
int
add
adc
jne
add
cmp
repnz
jae
add
add
add
push
ret
mov
xchg
ret
scas
ds
and
cmp
decl
add
and
pop
jmp
sti
push
ret
jb
add
into
mov
clc
repnz
jae
add
jmp
repnz
jae
outsl
sti
add
repnz
jae
add
add
add
fwait
cld
nop
jmp
add
addb
ja
mov
clc
repnz
jae
or
add
add
clc
repnz
jae
or
inc
or
ret
sahf
jne
clc
repnz
jae
add
ficoms
repnz
jae
mov
jno
or
cwtl
push
sub
clc
repnz
jae
lods
jbe
ret
jno
sahf
add
clc
repnz
jae
int
mov
add
mov
inc
cmp
repnz
jae
and
jae
pusha
push
mov
xchg
ret
sti
dec
add
outsl
add
xchg
jmp
fwait
cld
nop
jmp
add
push
add
jbe
cld
rep
fwait
cld
nop
jmp
repz
mov
add
repnz
jae
jp
xor
les
sar
nop
jae
int3
jne
sti
addb
nop
add
fwait
cld
nop
jmp
add
add
imul
jae
xor
ja
add
jb
xchg
add
jae
add
add
add
add
pushl
push
mov
xchg
ret
add
mov
clc
repnz
jae
add
sti
add
jae
add
add
scas
pop
add
add
popl
clc
repnz
jae
xor
add
addb
add
fwait
cld
nop
jmp
add
mov
dec
add
or
clc
xor
fwait
cld
nop
jmp
add
add
imul
filds
xchg
ret
pop
pop
dec
add
clc
repnz
jae
or
add
add
jno
hlt
add
mov
clc
repnz
jae
sbb
int3
add
pop
jae
cld
nop
jmp
add
add
mov
repnz
jae
add
jno
and
add
clc
repnz
jae
jb
addb
push
push
mov
xchg
ret
mov
add
add
rolb
dec
push
fwait
cld
nop
jmp
add
add
sub
and
int3
mov
clc
repnz
jae
push
or
ret
add
or
sar
repnz
jae
add
dec
adc
add
clc
repnz
jae
jo
add
add
jo
xor
push
mov
xchg
ret
add
jno
sub
leave
push
clc
repnz
jae
mov
nop
ret
ret
sbb
push
fwait
cld
nop
jmp
push
mov
les
mov
fwait
cld
nop
jmp
add
mov
add
add
xlat
inc
ds
clc
repnz
jae
sub
add
dec
sub
fwait
cld
nop
jmp
add
add
adc
add
mov
clc
repnz
jae
ja
add
lods
xor
push
mov
xchg
ret
or
add
and
mov
pop
push
push
mov
xchg
ret
add
xchg
scas
add
add
add
clc
repnz
jae
repz
add
add
xchg
cmp
jmp
jae
add
add
sbb
clc
repnz
jae
push
add
add
sti
add
mov
push
mov
xchg
ret
or
out
push
mov
mov
add
xlat
or
jnp
loop
fwait
cld
nop
jmp
dec
and
les
ja
mov
clc
repnz
jae
scas
add
lods
add
js
sub
add
out
out
add
and
pop
out
shr
clc
repnz
jae
add
data16
mov
clc
repnz
jae
add
add
and
jbe
clc
repnz
jae
add
add
add
clc
repnz
jae
xchg
sti
or
add
add
nop
jae
add
add
push
inc
stc
mov
clc
repnz
jae
add
or
push
push
or
cld
nop
jmp
add
jp
add
add
add
mov
rcrb
jmp
xor
inc
add
add
decl
mov
push
fwait
cld
nop
jmp
nop
mov
scas
scas
add
pop
add
add
repnz
jae
jb
sbb
in
call
clc
repnz
jae
add
add
dec
call
clc
repnz
jae
int
add
fwait
xor
clc
repnz
jae
add
fwait
cld
nop
jmp
xor
jo
add
push
stos
mov
push
clc
repnz
jae
add
outsl
pop
add
push
add
outsl
push
push
mov
xchg
ret
sti
add
dec
fwait
cld
nop
jmp
add
add
scas
and
mov
and
fwait
cld
nop
jmp
mov
or
nop
add
aam
movzwl
clc
repnz
jae
add
push
roll
repz
cwtl
leave
inc
add
sbb
jp
lods
dec
fwait
cld
nop
jmp
add
int3
add
add
add
popa
push
mov
xchg
ret
add
xlat
in
push
push
mov
xchg
ret
xor
add
add
add
in
add
out
add
shlb
jg
sub
add
and
mov
pop
imul
push
scas
scas
dec
repnz
sub
add
pop
sbb
rcll
add
rolb
pop
cli
bound
mov
pop
push
add
push
pop
ds
mov
add
dec
test
stc
cmpsl
pop
clc
add
add
push
push
mov
add
add
mov
push
add
add
icebp
fnstcw
lahf
in
push
sub
loopne
push
xchg
sub
push
add
aad
add
mov
or
out
xor
and
mov
frstor
cmpsl
cmp
sub
add
fnstsw
sbb
add
lret
mov
pop
adc
stos
sub
add
push
aam
clc
mov
add
lret
add
iret
pop
imul
mov
add
add
enter
frstor
add
add
add
add
add
xchg
add
add
pop
mov
add
add
insb
and
jns
iret
jae
and
or
sbb
add
rep
add
add
mov
pop
mov
mov
add
rolb
cmc
rolb
jnp
xchg
add
pop
stos
inc
add
ficomps
add
shl
ret
mov
adc
cmp
mov
add
mov
mov
std
mov
inc
test
add
add
or
sbb
and
add
sbb
pop
pop
jmp
add
pop
xchg
lea
add
stc
fadds
ljmp
stos
lcall
or
mov
pop
mov
or
daa
cmc
xor
movsb
add
add
lds
mov
out
test
add
add
in
sub
test
sti
sub
add
jns
add
addl
data16
rolb
mov
mov
les
and
fnsave
jecxz
xor
push
mov
hlt
add
out
cld
push
add
xchg
pop
fldcw
popf
mov
xchg
add
mov
int3
add
mov
daa
jle
add
add
add
imul
inc
add
push
aad
mov
mov
mov
add
add
leave
mov
leave
inc
add
add
out
and
mov
mov
cmpsl
insb
lea
xor
push
add
lods
out
stos
jle
add
mov
fwait
icebp
push
mov
xchg
add
pusha
add
xchg
stos
jle
cwtl
push
les
and
arpl
pop
cmp
clc
and
cwtl
jg
popf
rcrl
pop
push
add
mov
data16
and
mov
add
mov
pop
dec
movsl
xor
gs
outsb
pop
add
fstps
xchg
mov
jb
dec
adc
xor
cmpl
add
jg
add
add
and
xor
dec
popa
loope
out
or
int
jns
dec
scas
push
add
mov
mov
mov
cld
push
xor
mov
add
add
testb
mov
add
sub
xchg
add
add
movsl
mov
mov
das
jbe
and
sbb
insb
dec
cmp
add
fisubl
mov
sub
add
outsl
pop
imul
repz
dec
ja
loop
cmp
lret
mov
add
add
jbe
push
add
cmp
add
add
add
add
mov
mov
push
popa
ja
add
rolb
addb
pop
cmp
addb
ljmp
jns
add
add
add
ds
rolb
sbb
or
mov
add
inc
fimull
push
add
dec
jmp
lods
cltd
lods
rolb
and
aam
cli
cld
mov
adc
add
xor
cmp
imul
add
movsl
push
add
and
add
add
pop
and
mov
add
lods
frstor
add
add
mov
push
icebp
sub
add
inc
xor
add
out
dec
xlat
xor
sub
int
jne,pt
add
mov
add
xchg
jns
lret
hlt
add
insl
jbe
dec
pop
push
rolb
sub
xor
lock
add
mov
add
leave
or
mov
add
int
lods
jne
inc
wrmsr
add
mov
fiadds
in
inc
add
dec
cmp
ljmp
add
repnz
mov
in
ja
out
insl
mov
add
or
aam
cmp
adc
mov
je
or
mov
lock
jb
pop
int3
add
in
add
adc
cmp
inc
mov
add
xchg
fimull
daa
ret
add
mov
sub
xor
ret
and
je
dec
push
add
xor
movsl
inc
xor
cmp
or
dec
fdivr
mov
push
add
bound
mov
in
inc
add
orl
adc
and
xchg
add
push
shl
and
add
push
add
sti
lds
add
add
mov
xor
fistpll
sub
loop
pop
imul
in
mov
and
mov
add
or
add
mov
cli
cmc
dec
fstl
mov
jmp
push
cltd
outsb
filds
loop
sbb
std
cwtl
jecxz
add
add
ljmp
jp
inc
lods
ljmp
daa
mov
push
jge
add
cmp
lock
and
mov
ss
pusha
add
add
and
sbb
xchg
add
dec
jnp
test
add
add
lret
mov
ds
or
int3
test
lock
dec
mov
add
mov
add
out
cli
out
dec
mov
mov
add
ja
sbb
fsubrl
add
jl
icebp
mov
jmp
add
sbb
add
add
add
add
add
rolb
and
rcrl
lahf
mov
jbe
pop
fmull
xchg
bound
mov
sbb
test
add
add
pop
pop
cmp
add
aaa
hlt
add
repz
cmp
fsubrl
fmull
aad
add
add
mov
sbb
push
nop
add
pop
fxch
pushf
rolb
les
lcall
inc
fildl
pop
psubd
hlt
add
testl
mov
add
sub
addb
push
add
add
xchg
add
dec
loope
ds
test
adc
stc
lds
stc
xlat
bound
mov
in
das
add
add
add
jo
pop
mov
inc
and
add
add
mov
dec
sub
into
sbb
add
pop
rolb
inc
test
pushf
xor
std
fsubl
add
data16
sahf
xchg
pop
push
add
test
add
mov
mov
push
arpl
add
ret
xchg
cld
sub
mov
jp
insl
stos
sub
mov
out
xchg
add
pop
xchg
cmp
jb
xchg
push
push
add
dec
in
jb
fcmovnu
xchg
mov
add
mov
mov
add
mov
cmp
adc
in
pop
insb
dec
mov
dec
rolb
ljmp
rorl
int3
cmp
add
sub
lcall
jne
sub
in
mov
add
cmp
ret
push
add
stos
cltd
inc
add
cmpl
mov
xchg
add
lods
inc
mov
mov
add
mov
dec
pop
push
add
cltd
mov
cld
and
inc
test
add
inc
add
call
and
aad
add
xor
add
mov
sub
add
pop
cmovbe
jo
jnp
add
add
bound
mov
fisttps
rcrl
mov
popf
jmp
add
add
add
mov
cltd
or
lret
lods
hlt
add
xor
test
dec
rcrl
add
add
inc
add
add
nop
add
jge
pop
ficoms
out
mov
add
inc
add
mov
dec
dec
or
fnstenv
in
push
add
paddusb
test
movsb
add
pop
or
test
fdivrs
inc
add
clc
and
mov
add
cmp
add
imul
add
fwait
xchg
or
add
and
mov
cmp
push
scas
aas
imul
xchg
add
aaa
rolb
inc
cmp
pop
pushf
add
add
insl
cld
outsb
ficoml
insl
dec
mov
mov
lahf
or
add
mov
pop
push
cltd
pop
adc
add
fcoml
fsubr
in
mov
sbb
cmpsl
call
xchg
fistps
jns
add
lods
lock
add
add
add
mov
mov
fucomi
push
add
mov
add
mov
fistl
pushf
and
xor
es
and
mov
mov
xor
push
add
test
add
test
add
add
std
push
and
mov
popa
bound
mov
add
adc
sub
xor
test
jno
push
add
rolb
jae
shl
push
xchg
insl
cmp
add
mov
cli
outsb
test
cld
xchg
cmp
add
fisttps
lret
adc
xchg
mov
mov
repnz
repnz
cmpsl
jne
call
add
add
cmp
out
subl
push
add
and
mov
mov
add
add
repz
dec
ret
xor
xchg
add
imul
push
add
add
add
rcl
rcll
lock
lret
xchg
flds
add
bound
mov
add
add
cltd
push
add
mov
pop
mov
sub
fldl2e
dec
icebp
cmpsb
add
rorl
mov
rolb
xchg
jo
add
mov
mov
mov
add
dec
add
add
mov
add
sti
lahf
popa
push
mov
mov
add
push
add
incb
insl
mov
fwait
dec
and
push
push
add
rolb
pop
test
fcoms
lcall
imul
daa
mov
call
add
dec
push
add
inc
add
nop
add
das
fnsave
or
pop
je
cmp
pop
rolb
dec
jg
in
lds
jo
std
rolb
push
add
cmp
add
mov
out
inc
add
mov
fistl
loope
add
cmp
je
dec
aaa
sahf
add
add
add
insl
ret
insl
testb
add
add
jne
add
aad
add
movsl
iret
ret
add
adc
lods
fimull
in
push
jge
mov
add
stos
std
xchg
addb
inc
add
adc
pop
and
and
mov
inc
add
mov
add
out
sub
xlat
pop
ljmp
ljmp
mov
aas
inc
mov
sbb
aas
loopne
sub
add
shll
push
bound
mov
add
nop
add
outsb
and
mov
xchg
dec
or
fcompl
sub
push
mov
xchg
add
fucom
sub
mulps
fdiv
call
outsl
lock
or
adcl
mov
xchg
dec
add
arpl
movsb
add
cwtl
push
add
shrl
xor
mov
push
cwtl
mov
add
mov
dec
inc
dec
divl
setnp
sahf
xchg
add
sub
fldl
popa
xor
cmpsb
add
add
sub
pop
in
adc
gs
add
test
cmp
add
rolb
movb
mov
dec
ret
xchg
data16
xor
add
push
add
add
jp
aaa
sub
inc
lret
leave
mov
xor
rcrl
add
xchg
add
push
add
insb
xorl
jb
loop
xlat
je
mov
sbb
xchg
add
arpl
add
packuswb
popf
int
leave
cmp
fdivs
into
mov
add
pop
mov
jne
xchg
xchg
lret
xchg
add
and
mov
push
add
and
mov
in
jecxz
add
and
mov
sbb
add
outsb
fdivr
push
add
pop
push
mov
mov
xchg
xchg
fnstcw
insl
cli
lret
add
adc
inc
add
data16
add
push
mov
mov
cmp
mov
push
add
mov
add
stc
add
jb
repnz
mov
push
add
add
add
push
add
lcall
dec
jne
aaa
imul
add
mov
or
xchg
add
add
nop
add
or
mov
jp
add
mov
bound
mov
fisubl
add
popf
pusha
add
lods
inc
add
xchg
add
shrl
sarl
lea
add
data16
cmp
cli
add
add
add
dec
sbb
add
add
sbb
xchg
out
mov
jo
movsb
add
pushf
cltd
xor
out
rolb
sub
call
clc
xor
mov
add
add
sub
stos
jecxz
cld
insl
cmc
and
lcall
out
push
add
ja
jmp
sahf
ret
mov
cmpsl
inc
lds
xor
cmp
jnp
add
add
cwtl
into
jl
fistpll
add
mov
sbb
inc
add
mov
add
cmp
add
add
add
jg
out
cld
jle
ds
cmpsb
add
jp
call
add
hlt
add
add
mov
xchg
add
add
divl
hlt
add
mov
add
add
add
add
movsl
jbe
inc
addb
ja
addb
add
add
lods
sbb
adc
add
add
jns
add
pop
add
mov
mov
bound
mov
inc
and
jae
ja
testb
cld
mov
or
add
je
bound
mov
mov
inc
and
mov
mov
add
lods
and
jb
xchg
add
add
scas
fimull
mov
add
push
inc
add
mov
add
push
add
add
cmc
sbb
std
mov
dec
dec
and
fildll
out
sub
jno
add
movsl
imul
xor
faddl
mov
ds
or
xchg
js
mov
jnp
add
mov
fsubl
add
sti
fbstp
add
stos
push
push
add
jle
clc
mov
add
add
sbb
mov
mov
out
mov
sbb
or
and
lea
inc
int3
inc
add
lret
test
pop
inc
pop
test
add
mov
add
rol
add
add
add
mov
add
and
mov
cmc
addl
mov
jge
mov
pop
xchg
add
push
into
and
mov
add
mov
sbb
sub
pushf
popf
xor
pextrw
adc
add
add
add
push
add
loopne
ja
add
push
add
xchg
dec
dec
add
mov
jns
add
repz
pop
inc
xchg
rolb
imul
les
rolb
push
ja
rolb
jae
inc
pop
gs
add
mov
out
mov
cld
test
jne
pop
mov
das
add
xchg
jno
push
add
rolb
pop
or
sub
movsb
add
inc
sbb
add
add
push
sbb
add
data16
or
add
lods
fnop
add
add
inc
fwait
je
push
jge
mov
mov
movb
push
mov
mov
pop
xor
pushf
addb
add
pop
out
bound
mov
add
adc
add
rolb
int
add
lods
mov
sub
mov
sub
add
add
ja
popf
or
add
mov
cmpsb
add
push
add
add
mov
loop
jecxz
add
add
ffreep
add
mov
add
push
push
add
mov
push
add
xor
sbb
mov
popf
scas
pop
push
add
pop
adc
adc
je
pushf
sub
add
sbb
fldl
add
add
or
sbb
mov
push
add
mov
pop
mov
movb
int3
mov
mov
add
fsubl
add
and
mov
add
mov
xchg
pop
data16
add
sub
jecxz
add
cmp
add
lret
mov
movsl
aad
add
xchg
xchg
test
xchg
add
leave
xchg
movsl
in
jno
shrl
pushf
imul
ds
loop
int
add
neg
cli
jnp
nop
add
jmp
jge
add
dec
addr16
push
add
cmp
pop
in
filds
scas
adc
daa
adc
add
add
leave
sarl
addb
aad
add
add
mov
popa
lds
mov
add
add
sti
sar
and
stc
cmp
mov
add
add
mov
xor
cmp
jo
movsb
add
add
inc
sub
pop
sbb
add
andl
mov
jecxz
add
add
xor
add
add
add
add
movsl
aam
xor
push
jae
cmpsb
add
ret
add
fdivr
push
addb
rcl
add
add
cmp
stos
ret
sub
add
or
rcrl
mov
mov
dec
dec
or
or
lock
add
lock
xchg
inc
add
add
loopne
sub
aad
addr16
push
add
add
ficompl
add
add
add
mov
add
aaa
xchg
dec
pop
dec
sub
rolb
lods
mov
jp
js
pusha
add
lds
jge
add
movsb
add
in
xor
cs
cmpsl
loope
add
jnp
add
mov
fsubl
add
add
add
mov
adc
add
xor
fs
divl
mov
add
cmpsl
add
imul
add
data16
popf
leave
pop
lods
ja
xchg
mov
xchg
push
add
push
add
jge
and
mov
pop
daa
movsb
add
call
push
add
mov
mov
iret
in
aaa
sbb
rolb
dec
cmp
lcall
stos
faddl
movb
add
stc
add
mov
sbb
add
inc
mov
xchg
jb
lret
add
add
mov
sbb
icebp
rcll
bound
mov
popf
lods
call
sbb
hlt
add
ficompl
push
cmc
fadds
lea
sbb
and
addb
and
mov
mov
les
jg
add
add
jb
mov
inc
cmc
mov
pop
cwtl
jl
pop
popf
test
push
add
dec
lea
or
cld
sahf
add
popa
data16
enter
aaa
out
dec
and
testb
sub
add
mov
in
divl
ret
add
add
sbb
roll
xchg
lret
repnz
cli
aas
lods
insl
lahf
lods
mov
icebp
repnz
xchg
add
add
stc
xchg
stc
jno
lret
dec
mov
sti
gs
lock
add
xchg
cmp
sbb
insl
sahf
jl
add
xor
add
mov
insl
dec
inc
add
sbb
dec
lret
int3
jle
push
add
add
add
lock
add
add
lock
cmp
add
dec
inc
and
test
or
hlt
add
xor
xchg
add
mov
add
add
mov
pop
mov
cmp
call
inc
add
fmuls
add
add
add
or
mov
sbb
gs
dec
shrl
cmp
add
mov
add
outsl
fldt
add
mov
add
into
xchg
add
aam
xor
arpl
loope
hlt
add
lods
fsubrl
pushf
sahf
mov
inc
add
add
fcomip
dec
push
cmp
jns
incb
loope
add
pushf
int
mov
popf
hlt
add
data16
mov
add
add
daa
jne
push
and
ljmp
add
hlt
add
mov
add
mov
xchg
mov
lret
mov
add
arpl
insb
and
dec
jo
pushf
cwtl
mov
cmp
add
add
jmp
xlat
sub
jg
inc
add
rolb
add
mov
in
push
arpl
xchg
test
add
mov
insl
inc
jmp
jge
mov
fwait
and
jmp
adc
add
aaa
push
mov
inc
add
push
add
pop
pop
data16
mov
add
int3
pop
dec
push
fmul
xor
add
push
and
push
xchg
inc
add
mov
sub
add
repnz
mov
pop
push
add
into
sahf
add
xor
jne
inc
add
add
aam
mov
and
mov
sbb
add
movsl
pop
xchg
sub
add
mov
mov
mov
pusha
add
shrl
push
add
push
rolb
sub
mov
clc
sub
or
add
sbb
jle
iret
out
in
pop
jmp
add
es
or
insl
or
add
arpl
cmp
and
mov
add
imul
cmp
js
dec
inc
add
mov
ficoml
add
clc
mov
add
mov
pop
fsts
add
add
cmc
pop
nop
add
pop
mov
movb
xchg
add
je
movsb
add
add
jle
add
test
cs
in
xchg
add
sub
aaa
mov
jl
dec
movsb
add
mov
jo
push
add
jl
sar
movsb
add
add
add
xchg
sbb
add
daa
test
loop
testb
cs
js
add
cmpl
popa
push
adc
jp
sub
in
xchg
push
add
arpl
add
dec
sbb
adc
pop
sbb
mov
fstps
addb
add
mov
into
ficomps
js
dec
addb
testl
dec
push
pop
js
add
dec
aad
cmpsb
add
cld
lret
in
jge
add
push
lods
bound
mov
add
stos
jb
cmpl
pop
push
int3
js
mov
push
sbb
add
sub
add
add
sbb
jp
lret
add
cmp
add
add
das
jns
addb
rorl
icebp
cmp
add
dec
loopne
cmpsl
popf
push
xor
sti
sbb
add
add
shr
mov
add
mov
xlat
inc
add
inc
add
mov
js
icebp
and
mov
stc
xor
add
add
xchg
or
cmp
adc
pop
adc
cmpl
hlt
add
outsb
mov
rolb
mov
xchg
add
in
push
mov
add
rolb
add
into
lcall
rolb
ret
scas
test
cld
jno
jns
mov
mov
adc
loopne
stos
xchg
add
in
sbb
movsb
add
add
adc
add
jge,pt
sub
out
adc
adc
cmc
push
add
arpl
icebp
je
imul
test
xchg
sbb
aaa
call
add
mov
dec
icebp
pop
les
pop
adc
cmpsl
les
inc
add
gs
sbb
mov
lahf
xor
shrl
add
add
mov
ds
add
add
iret
fldt
cmp
imul
je
loopne
in
rolb
jp
push
push
mov
into
xchg
inc
add
scas
sbb
xchg
add
mov
mov
cmpsb
add
push
add
addb
add
ljmp
cld
sub
addb
xchg
add
add
loope
or
jb
ds
cwtl
mov
shrl
add
add
push
add
std
rolb
hlt
add
xchg
push
cmp
add
stos
lahf
test
add
iret
mov
add
pop
jle
push
or
dec
push
add
mov
add
stc
lret
jmp
mov
cmp
add
sub
stos
push
add
int3
add
add
add
add
add
add
clc
push
adc
cmpsb
add
add
cmp
outsl
cmp
mov
add
mov
add
add
mov
std
push
add
pop
xor
xor
gs
addb
cmpsl
mov
pop
fimull
stc
jg
ret
enter
out
cmpsl
inc
add
add
mov
fbld
mov
add
add
add
add
and
mov
add
sbb
mov
mov
imul
pop
mov
mov
mov
das
jg
mov
cmc
mov
jo
addr16
add
add
add
push
push
add
sahf
push
xchg
rolb
add
jne
cltd
dec
jo
data16
cli
mov
add
add
mov
add
add
mov
sub
addb
inc
jns
sbb
add
add
inc
sti
dec
or
pop
mov
leave
mov
xor
add
mov
jge
lret
add
cmc
add
mov
loop
xor
and
add
xchg
lcall
jb
aam
loopne
fdivl
jnp
shrl
add
lods
pop
nop
add
sub
call
test
add
pusha
add
cli
or
push
add
lock
add
add
add
add
push
pop
mov
cmp
aad
add
sub
popa
dec
aad
stc
and
mov
add
xchg
add
cld
and
mov
mov
add
clc
clc
daa
jo
test
add
ficompl
sub
rolb
sbb
out
outsb
rolb
pop
movd
mov
movsb
add
push
sahf
mov
mov
rolb
xchg
inc
add
mov
add
adc
adc
cmp
xchg
cmc
cld
cmp
add
popf
push
loopne
push
dec
cmp
pop
lea
cmp
push
add
rdmsr
add
add
imul
sbb
ljmp
jns
add
dec
dec
mov
add
adc
mov
mov
cmovle
cmp
add
pop
mov
xchg
xchg
inc
outsb
sub
fsts
cmpsl
bound
mov
out
jg
setnp
push
adc
push
add
lock
add
dec
or
jmp
push
add
dec
adc
add
cmp
rcll
add
fldcw
sbbl
add
adc
cmc
nop
add
mov
sahf
mov
lret
imul
xlat
mulps
push
cwtl
add
mov
mov
cli
push
add
cmp
push
add
in
sub
hlt
add
cmpl
rolb
data16
jge
xlat
add
mov
jg
loope
fwait
cwtl
xchg
add
push
lea
les
cmp
fidivrl
loopne
cmpsl
mov
popa
jnp
add
inc
add
push
inc
pop
data16
adc
xchg
add
addb
mov
icebp
mov
jp
add
loop
mov
cmp
push
test
push
dec
jnp
rolb
cli
xor
add
bound
mov
jno
add
fxtract
add
add
add
shr
add
jle
jns
cld
xchg
add
push
add
lock
cwtl
fwait
test
add
add
xchg
push
add
push
add
test
cs
and
mov
ret
push
add
push
mov
sub
xor
dec
fstl
sbb
mov
pop
add
inc
add
or
jno
popa
insl
int
add
rolb
and
adc
push
add
lds
push
fildl
adc
adc
outsl
inc
add
jmp
test
mov
arpl
push
add
inc
add
cld
dec
test
cwtl
ffree
add
sbb
popa
movsb
add
fwait
lcall
outsl
repz
ljmp
mov
push
add
jae
add
mov
add
add
add
ds
out
add
dec
or
aad
je
les
clc
jle
mov
add
movsl
mov
add
or
inc
in
iret
xor
add
mov
outsb
jmp
adc
pop
add
jo
fwait
das
call
add
and
mov
test
push
fisubrl
add
add
add
add
loope
cwtl
movsb
add
add
loop
addb
sub
sbb
add
addb
xor
mov
sahf
lcall
loopne
lods
xor
add
push
add
fstpt
call
dec
test
add
pop
adc
mov
and
cmp
insl
xchg
add
repz
mov
enter
lea
inc
add
or
lret
add
or
imul
add
enter
rolb
fidivrs
lahf
testb
fcoml
mov
add
insb
pop
push
add
and
in
icebp
or
add
mov
std
sbb
pushf
xchg
scas
repz
xchg
xchg
adc
pushf
mull
int
add
data16
inc
add
and
mov
add
mov
lahf
jg
out
lcall
repz
add
add
add
cld
sub
add
add
movb
sub
rolb
ljmp
and
mov
add
mov
in
in
add
add
stos
push
add
mov
add
add
xor
mov
add
inc
pop
loop
cmc
outsl
mov
add
add
out
jbe
divl
call
and
mov
add
fisttpll
repz
bound
mov
hlt
add
and
or
lods
cmp
sub
insl
push
add
aaa
aaa
movsb
add
xchg
push
cmp
aaa
add
mov
test
add
js
je
mov
pop
js
fnstenv
add
add
and
push
add
ret
dec
mov
in
inc
add
sbb
adc
addr16
jb
out
test
rcll
jbe
pushf
rolb
shl
cmp
in
or
add
jmp
negl
cmp
adc
jmp
repnz
testb
add
arpl
add
cmpsl
dec
jl
or
mov
testl
pop
and
mov
mov
add
push
add
add
fdivrp
rolb
aaa
leave
rolb
jns
inc
add
daa
pusha
add
add
add
push
add
inc
add
add
mov
add
lods
cmc
inc
add
inc
lods
inc
cmp
hlt
add
mov
outsb
add
add
cmp
sub
int3
mov
xchg
add
pop
xchg
lds
add
out
imul
insb
dec
test
lods
test
mov
bound
mov
outsb
mov
test
add
lds
je
sbb
lret
mov
mov
pop
testb
dec
sti
or
adc
mov
xor
orl
out
lds
add
add
push
shll
outsl
add
mov
add
test
cs
fists
fsts
add
out
stos
sub
add
lea
jecxz
add
sti
insl
xor
or
xchg
add
pop
sbb
add
add
xlat
cld
add
add
xchg
mov
add
aad
add
pop
xor
inc
add
add
cmp
cmpsl
add
or
sub
add
or
inc
mov
push
add
or
add
mov
cmpsl
or
push
mov
add
inc
and
add
add
push
repz
je
mov
pop
and
mov
add
mov
jge
lds
or
mov
and
add
add
add
mov
jno
add
dec
out
adc
push
fmuls
bound
mov
pusha
add
add
cmc
nop
add
int3
mov
add
add
add
xchg
add
addb
leave
and
mov
mov
add
cmp
fimuls
pop
pop
mov
pop
sbb
clc
mov
in
arpl
rcrl
loope
xchg
mov
sti
xchg
jb
aaa
stos
or
push
jp
dec
mov
and
imul
iret
and
xor
mov
pop
jmp
jns
mov
push
add
aam
insl
sub
fisubl
loope
add
mov
cld
mov
jle
xchg
jmp
add
cmp
jg
and
lret
adc
push
add
add
add
fstps
jno
add
add
leave
cmpsb
add
adc
hlt
add
repz
mov
fmull
mov
stc
xor
daa
push
mov
rcrl
jnp
loope
data16
xor
dec
sbb
xor
push
sub
pop
sub
imul
add
and
mov
mov
jp
in
imul
mov
fists
fistps
dec
in
mov
sti
add
pop
mov
push
add
lret
mov
and
lods
arpl
add
jp
xchg
add
mov
adc
test
sub
xchg
pushf
fisubl
jmp
cmc
shll
add
scas
sbb
add
add
dec
sub
add
cmp
push
jbe
stos
mov
add
xchg
add
or
lods
and
add
mov
add
mov
out
ds
add
add
and
inc
add
add
or
outsb
push
int
xor
mov
add
scas
inc
inc
add
sbb
movsl
std
mov
mov
movsb
add
xor
adc
imul
xor
sbb
dec
xor
sbb
add
mov
add
mov
ja
add
add
add
out
lods
in
jmp
fidivrl
lock
xlat
loopne
inc
push
add
mov
mov
rolb
push
add
stos
add
jl
xlat
pop
insb
dec
fwait
out
jge
jmp
inc
add
adc
mov
pop
inc
add
add
dec
fistl
inc
add
aad
add
cmpsb
add
leave
dec
rolb
jmp
repnz
insb
dec
rolb
xchg
add
xor
push
scas
or
addr16
pop
stos
out
dec
pop
sub
clc
sbb
popa
mov
call
mov
imul
pop
cmpsb
add
ret
and
mov
arpl
add
int
das
mov
dec
xchg
add
add
outsl
insl
scas
push
add
and
mov
add
test
dec
loopne
jne
add
imul
mov
sub
mov
cmpsb
add
dec
imul
xor
xchg
add
icebp
frstor
scas
mov
out
in
cmc
dec
stc
mov
sub
adc
dec
xchg
xchg
mov
dec
mov
ljmp
test
addr16
add
outsb
repz
add
add
mov
fcmovne
mov
jge
call
add
mov
xor
push
add
ret
das
insb
test
xor
popa
stos
mov
fadds
add
inc
add
sti
lcall
insb
and
lcall
add
push
add
add
add
rolb
mov
aam
sbb
sub
daa
leave
mov
sub
mov
add
daa
lods
mov
add
pop
ret
add
enter
iret
mov
outsl
push
add
addb
mov
es
push
add
add
mov
jnp
sub
fwait
ret
pusha
add
in
addb
push
add
pushf
mov
bound
mov
addr16
scas
mov
jne
imul
add
add
cmp
add
stos
ja
rolb
add
or
xchg
pushf
or
add
mov
mov
mov
addl
jb
cmpsl
ja
and
add
daa
xor
sub
push
test
adc
sub
and
mov
scas
cwtl
sbb
xchg
add
sbb
add
xchg
add
and
mov
imul
add
cli
add
mov
aam
jns
add
add
mov
mov
test
pop
je
mov
xchg
into
lahf
outsl
or
add
mov
add
testb
aam
test
stos
jno
testb
xchg
add
add
add
mov
and
and
mov
out
loop
xlat
add
and
mov
sub
pop
ret
sbb
sub
xchg
add
cmpsb
add
mov
mov
inc
xor
adc
ljmp
add
mov
add
pop
push
add
mov
enter
and
mov
out
fisubrl
push
add
cmp
add
sbb
lahf
xchg
push
add
or
lahf
xor
lahf
jns
jne
movsb
add
dec
mov
pop
in
lock
add
add
flds
in
loop
cltd
xchg
add
ja
cmp
add
add
mov
add
out
xor
push
add
add
sbb
xor
test
addb
sbb
add
add
xchg
add
add
data16
add
jecxz
jg
add
cmp
sub
nop
add
sub
mov
fnstsw
cmp
add
mov
fidivrs
add
pop
out
jno
add
add
add
arpl
add
pop
addb
add
inc
add
loope
mov
out
mov
jne
or
add
add
add
add
cmp
mov
pop
pushl
add
mov
inc
add
xchg
fdivs
stc
loope
add
add
notl
add
add
fildll
cmpsl
pop
and
dec
push
mov
push
add
cwtl
push
lds
adc
shl
pop
out
and
mov
pushf
xchg
mov
insb
stos
xor
mov
add
loopne
xchg
decl
push
add
and
sub
add
mov
add
dec
push
push
mov
pop
mov
cmp
add
jns,pn
inc
fstl
add
or
in
fcmovnu
popl
frstor
add
xor
inc
add
mov
adc
aam
mov
add
add
add
xor
cmpsl
rolb
mov
test
inc
add
add
cmp
ljmp
xchg
mov
jns
sub
lret
std
and
mov
test
add
movsl
cltd
and
xor
in
adc
and
pop
add
add
loopne
jnp
add
std
dec
sar
shll
sbb
jb
mov
jne
add
lods
enter
imul
add
cltd
std
arpl
cmp
sbb
dec
daa
fistpll
jnp
push
loopne
sbbl
pop
jmp
in
add
dec
mov
sbb
sahf
sub
add
mov
add
push
repnz
cld
aad
mov
testl
bound
mov
dec
cli
lret
mov
das
mov
add
xor
sub
cs
leave
jo
mov
pop
sbb
lcall
pop
sbb
add
testb
cmp
xchg
into
inc
add
popf
and
add
xchg
add
aaa
repz
push
add
add
or
movsl
test
and
mov
mov
inc
fmuls
add
cld
xor
adc
rcl
xchg
add
popa
mov
dec
pop
fsubl
xor
mov
add
mov
inc
sbb
add
sbbl
aad
int
stc
out
clc
or
shll
xor
add
or
push
add
jge
mov
add
push
adc
add
sbb
push
mov
add
sub
add
mov
fsubrl
sub
pop
dec
movsb
add
clc
rcll
pop
xor
push
cmp
jae
insb
in
iret
mov
mov
add
cld
add
in
aas
inc
add
jmp
pop
mov
push
jne
add
and
add
rcll
add
add
add
adc
add
loope
cmp
add
xor
sbb
sahf
cmp
stos
pushf
mov
enter
inc
mov
add
mov
arpl
add
jmp
add
add
push
lds
stos
and
pop
push
sub
cs
loop
stc
mov
in
dec
xor
add
or
add
and
mov
mov
mov
add
test
repz
cs
rolb
adc
mov
add
cmp
imul
mov
xchg
insb
arpl
inc
add
mov
aas
jo
xchg
testb
push
add
fwait
mov
add
or
add
mov
mov
repz
push
add
sub
add
push
jmp
jmp
add
ljmp
test
sbb
pop
xor
sub
add
push
sti
mov
push
add
add
xchg
add
mov
scas
lds
sub
and
mov
add
sti
je
out
add
faddl
das
mov
jmp
std
aaa
dec
xchg
add
jnp
add
add
add
add
add
nop
add
cmpsl
inc
add
cmp
xchg
rolb
fists
dec
push
add
push
add
add
insb
ja
pop
ret
pushf
cli
xchg
inc
add
fcomps
and
std
cmp
lds
add
push
test
bound
mov
jns
push
lret
pop
fdivr
add
pavgw
hlt
add
aam
movups
fwait
mov
sub
sub
sti
mov
push
adcl
lcall
mov
test
wrmsr
add
add
add
mov
fstpt
testb
fldt
sbbl
sub
or
movb
xchg
add
add
add
add
mov
adc
addl
cmp
sbb
cmp
add
shll
add
mov
add
mov
stos
jo
sbb
jae
push
add
imul
push
test
cmp
jmp
jbe
adc
adc
iret
stos
jle
pushf
and
fcmove
and
mov
add
mov
test
popf
fsubl
mov
gs
mov
pop
in
mov
inc
pop
inc
add
mov
add
movsl
negl
popf
mov
add
add
push
add
add
mov
data16
mov
pop
test
mov
movb
add
add
add
inc
or
jle
jns
lods
repnz
add
cs
enter
or
sbbl
addr16
adc
aam
sarl
add
add
xchg
pop
ret
out
pop
dec
fcmovb
add
in
add
testl
ret
mov
cld
loop
xor
in
sbbl
inc
inc
add
nop
add
bound
mov
dec
lods
iret
sbb
adc
aas
jb
lahf
out
add
and
mov
push
mov
cmpsl
xlat
enter
sbb
movb
aam
stos
ds
add
movsb
add
aad
movsb
add
in
data16
add
insb
xor
lret
mov
add
mov
mov
add
sbb
es
in
push
mov
inc
inc
add
repnz
je
jge
add
das
out
cmp
add
inc
jnp
add
mov
add
add
icebp
pop
or
inc
lahf
addr16
cwtl
aam
inc
add
add
adc
mov
sub
add
dec
rcll
add
adc
jp
andl
jne
scas
in
fwait
lea
repnz
mov
into
scas
dec
int
adc
and
out
out
outsb
popa
jo
inc
pushf
leave
xchg
js
add
add
and
mov
lds
addr16
sub
jae
add
test
pusha
add
pop
sbb
bound
mov
add
hlt
add
inc
add
add
add
xchg
add
and
mov
add
and
lret
in
mov
daa
xor
jo
add
push
add
add
cli
and
mov
adc
xor
inc
add
sub
xor
loop
arpl
add
jae
clc
pop
cmp
ja
cltd
ss
mov
mov
test
add
and
mov
cltd
dec
mov
adc
add
add
mov
ficoms
aaa
les
sub
jne
fistl
push
add
cmc
jno
inc
add
jl
cli
ljmp
jle
lret
add
lds
push
pop
and
push
sbb
aad
or
jg
lcall
mov
fisubs
add
push
add
mov
stc
scas
lret
push
add
in
fbld
sub
sbb
adc
adc
adc
in
sub
loop
lock
in
add
leave
sbb
add
mov
dec
ret
test
popa
or
jl
cmp
add
add
mov
in
repnz
lret
mov
rolb
xchg
jmp
fists
dec
dec
dec
rolb
and
mov
popa
scas
inc
testb
adc
subl
add
scas
into
push
dec
das
dec
mov
js
add
mov
mov
add
and
push
loop
aaa
xchg
neg
shl
mov
jmp
or
add
cltd
stc
scas
push
add
jl
xchg
icebp
jecxz
jne
add
add
and
mov
add
xchg
cld
or
mov
aaa
ret
test
xor
mov
mov
sub
icebp
jecxz
rcll
add
xor
mov
dec
pusha
add
fadds
jle
in
xor
ret
in
or
add
stc
sbb
add
fsts
add
outsb
pop
clc
popf
sub
xor
stos
cmp
add
fidivs
mov
xor
xor
int3
nop
add
push
in
rolb
or
add
adc
cmp
add
add
les
mov
xor
pushf
and
mov
test
jmp
bound
mov
add
ficompl
push
add
cmpsl
push
aaa
mov
mov
cs
add
mov
scas
jne
inc
add
int
stc
pop
add
or
xchg
and
mov
add
xchg
add
ficompl
dec
mov
jnp
movsb
add
sub
add
add
add
cs
andl
mov
add
jne
add
mov
xor
jecxz
pop
add
mov
add
imul
or
pushf
sub
popa
adc
movsb
add
add
add
les
cmp
add
mov
add
push
mov
imul
xor
push
dec
xor
cmp
add
dec
cltd
jne
repnz
mov
mov
js
sbb
lods
popa
cmp
pop
jbe
jp
sbb
lret
mov
lods
into
lea
repz
pop
lcall
add
mov
fwait
inc
add
inc
and
mov
push
add
nop
add
es
pusha
add
test
lahf
or
adc
into
mov
pop
and
add
rolb
dec
xchg
add
dec
aam
push
add
or
add
sbb
cltd
stc
rolb
int
inc
add
imul
dec
test
testb
sbb
xchg
add
fs
mov
int3
popa
pop
ret
nop
add
icebp
insb
xor
mov
mov
pop
jle
add
add
addb
add
pop
cmp
add
pushf
loope
inc
or
out
fld
add
jno
add
add
push
add
add
cmpsl
jl
add
cmpsb
add
test
rolb
push
add
dec
jns
lds
add
add
insb
pop
stc
xor
dec
pop
imul
add
add
jg
push
add
das
rolb
ficomps
lret
fs
in
outsb
scas
bound
mov
imul
aas
aam
mov
cmpxchg8b
stos
es
push
add
add
mov
pop
jl,pt
and
and
out
inc
dec
nop
add
movsl
push
xchg
sub
xchg
pop
addb
dec
das
fsts
rcll
fimuls
cmp
xlat
xchg
mov
bound
mov
mov
or
add
lret
insl
fucomi
mov
mov
test
rcrl
push
add
mov
dec
mov
stos
addb
xchg
rolb
push
add
mov
add
testb
daa
popa
mov
add
or
addb
mov
pop
les
shll
bound
mov
mov
enter
add
mov
add
fwait
neg
push
sub
add
mov
in
pushl
add
push
add
lea
pop
lods
rcr
jb
pop
and
mov
inc
ljmp
rolb
dec
xor
movb
imul
scas
loope
add
jne
jg
add
adc
add
inc
add
sub
mov
add
fisttps
and
add
add
xor
cld
sub
add
add
xchg
add
es
stc
std
xlat
insl
mov
dec
mov
xor
pop
out
mov
mov
mov
jp
add
jmp
mov
add
add
repz
add
add
cmp
sub
imul
mov
xor
dec
dec
adc
stos
cmp
add
fwait
pop
movsl
xchg
rolb
cli
jno
nop
add
jecxz
add
inc
addr16
int3
stc
repnz
cmp
jo
xlat
hlt
add
add
mov
clc
lret
and
clc
inc
add
cmpsb
add
pop
sbb
sti
les
mov
dec
xchg
add
mov
out
leave
ret
sub
xchg
das
movsl
lret
addr16
and
mov
inc
ljmp
push
add
fistpl
push
inc
add
in
cmp
add
les
jno
or
lret
ret
xchg
loop
lret
add
cmp
xor
pop
adc
xor
fiadds
add
cwtl
dec
in
ror
imul
sbb
scas
jnp
add
add
ljmp
lret
hlt
add
add
add
add
add
sbb
ret
pop
pop
fists
jg
insl
mov
mov
fbstp
lret
in
fldl2e
push
add
js
mov
sub
add
add
lea
add
sbb
mov
rolb
fwait
out
cmp
stc
aam
movups
jle
pushf
add
std
pop
out
pop
sub
outsl
mov
cmpsb
add
mov
iret
and
add
cli
aaa
rolb
push
addr16
add
jp
and
das
scas
jge
add
add
adc
mov
add
add
add
add
mov
add
sub
test
into
add
cs
loop
adc
clc
ficoml
pop
fimuls
mov
pop
or
jno
push
or
or
mov
mov
dec
dec
addb
mov
sub
sub
push
and
mov
insl
test
add
fisubs
jl
and
push
push
inc
add
movb
add
pop
lcall
sbb
dec
mov
xchg
clc
inc
loop
movb
add
fstpl
jne
add
add
add
push
add
add
add
mov
sbbl
add
add
add
add
mov
xchg
sti
dec
imul
test
pop
rol
mov
test
add
push
add
push
add
add
pop
mov
je
xor
lods
in
movb
mov
lret
mov
add
mov
push
inc
add
push
add
hlt
add
jp
test
into
mov
dec
jmp
add
add
test
add
add
add
insb
insb
pop
jno
int
sbb
loop
sub
xor
clc
rolb
int3
loopne
xor
jle
mov
pop
pop
xor
pop
cwtl
jae
adc
ljmp
dec
jns
xor
mov
add
xchg
add
add
xchg
add
add
add
cmpsl
mov
fdiv
orl
add
mov
cli
cmc
je
inc
arpl
movaps
add
dec
aas
push
add
cltd
dec
loope
es
adcl
add
shrl
rolb
cmc
cmp
pusha
add
ljmp
lcall
inc
add
sahf
adc
int
xor
xchg
xor
scas
rolb
cmpsl
fwait
adc
mov
push
repnz
daa
mov
es
mov
add
mov
pop
xchg
mov
add
mov
lret
leave
rol
add
dec
dec
inc
or
or
test
add
lret
fdivp
add
cmp
enter
int
add
ljmp
sti
and
lret
and
jg
add
inc
add
jb
addb
mov
inc
gs
cwtl
mov
and
mov
sub
add
fsubrl
lds
daa
lds
cmpsl
arpl
js
add
dec
out
cmp
xchg
and
mov
loope
stos
mov
addb
add
daa
pushf
pop
call
add
add
add
out
or
mov
call
add
in
add
ret
push
jno
and
jns
jns
add
xchg
mov
arpl
jg
fiaddl
mov
mov
lret
and
add
clc
sbb
add
add
or
and
mov
out
repnz
push
add
add
pop
mov
mov
lods
and
popf
xor
sub
pop
push
mov
add
push
insl
add
mov
cmp
loope
mov
sbb
subl
cwtl
mov
rolb
jle
and
or
sarl
and
add
dec
addb
add
in
add
add
jae
ds
jb
push
add
lret
mov
leave
adc
out
cltd
and
loopne
mov
add
fcomps
loop
loope
add
sbb
out
push
jmp
mov
add
push
xchg
jnp
mov
xor
dec
in
mov
mov
adc
call
and
mov
sbb
add
lock
fisubrl
lds
push
add
add
add
add
add
mov
es
add
lret
mov
mov
jb
lahf
into
jne
cltd
xchg
xchg
add
mov
dec
jecxz
or
lds
sub
add
add
add
std
xchg
adc
pop
enter
jbe
adc
fnstsw
pop
ds
cli
add
cmc
les
and
mov
adc
add
mov
imul
dec
out
pop
cwtl
popf
cltd
popa
pusha
add
add
adc
movb
add
add
xchg
add
add
pop
lret
xlat
jmp
and
mov
roll
add
adc
testb
push
add
add
sbb
pop
stos
xor
add
roll
cmc
and
and
sarl
add
push
add
or
mov
add
add
mov
fistl
movb
lods
mov
add
movsb
add
add
add
add
fimull
push
aaa
sub
add
mov
mov
je
xchg
dec
xchg
add
scas
sbb
cmp
insb
push
add
add
insb
out
dec
test
js
lahf
call
mov
ljmp
lods
add
mov
fldenv
scas
inc
add
std
xchg
add
add
add
xor
les
mov
or
cli
and
add
dec
adc
cwtl
dec
pop
dec
inc
xchg
sub
add
xor
fldcw
cmc
cmpsl
jge
movb
add
add
mov
icebp
rolb
std
inc
add
add
add
add
mov
add
push
imul
add
dec
aad
add
xchg
sbb
sub
mov
fcoml
push
scas
cmpsb
add
imul
imul
stos
xor
bound
mov
fldt
or
add
push
add
add
and
mov
rcl
push
add
lret
xchg
cld
inc
sub
mov
add
leave
in
mov
clc
inc
and
mov
aas
push
jns
sbb
add
xchg
xchg
ljmp
mov
xchg
fidivl
add
add
enter
adc
inc
add
add
push
mov
push
mov
add
add
or
insb
sahf
mov
jl
les
out
sub
xchg
fsubrp
mov
lock
stos
adc
push
fwait
imul
int3
mov
stc
inc
add
std
and
dec
mov
jno
pop
inc
add
rcll
in
jno
inc
add
lock
add
fcomip
add
xchg
add
push
add
add
add
dec
rolb
mov
insl
les
cmpsl
std
xchg
mov
add
jo
je
imul
push
pop
je
dec
bound
mov
or
add
imul
cmp
sub
addb
mov
push
add
cwtl
leave
push
add
out
jne
ss
dec
xor
xor
test
add
or
mov
mov
inc
add
mov
cmpsl
rcll
add
add
add
mov
out
mov
or
cli
out
and
dec
ret
jns
mov
push
add
and
xchg
add
mov
or
sbb
cmpsl
nop
add
mov
push
add
add
pop
ret
add
sub
sub
rolb
stc
rolb
inc
shl
or
xlat
pop
adc
xor
xchg
jge
pop
roll
iret
stos
push
sbb
divl
xchg
movb
stos
movsl
cmp
aad
push
outsb
mov
addb
pop
push
add
pop
inc
add
das
clc
das
mov
nop
add
icebp
int
repnz
lahf
test
xor
scas
push
add
mov
dec
and
mov
xchg
jmp
stc
push
add
jg
out
das
pop
jo
mov
mov
dec
in
sti
movb
add
add
xchg
stos
scas
stc
fcomps
pop
mov
mov
fwait
or
mov
mov
loop
call
dec
in
inc
add
jp
add
add
fs
xor
sub
bound
mov
add
add
stc
scas
sti
rolb
or
mov
add
out
mov
into
aas
mov
pop
pop
mov
and
dec
add
mov
inc
gs
add
scas
dec
lret
cmp
add
bound
mov
add
add
out
xchg
data16
js
test
inc
add
add
dec
pop
inc
inc
pop
jmp
add
add
addb
jns
out
pop
fwait
mov
jb
xchg
mov
outsl
int3
dec
and
cli
int3
add
add
add
movb
add
pop
push
stos
adc
sbb
and
push
add
add
mov
jbe
jno
mov
add
mov
aas
fidivrs
loopne
lds
add
push
add
aam
mov
add
fwait
jb
aad
dec
pop
test
imul
add
add
xchg
movsb
add
rorl
add
push
add
add
add
jmp
icebp
cs
pop
adc
push
add
je
or
or
addb
mov
add
or
mov
dec
add
lods
in
and
mov
dec
push
popa
dec
les
rolb
packsswb
add
mov
dec
jp
mov
xor
inc
add
add
pop
jmp
sahf
movsb
add
mov
add
or
sbb
adc
mov
xchg
mov
inc
add
cmpsb
add
add
adc
andl
add
add
add
jg
sub
outsl
mov
aad
ds
add
imul
sbb
orl
push
mov
add
daa
pushl
mov
lods
shll
std
and
mov
add
fs
push
add
xchg
add
add
andl
icebp
cmc
mov
mov
add
add
adc
int
pop
jae
in
push
add
lock
shrl
in
in
push
pop
mov
xlat
stos
push
mov
push
push
fbstp
pop
scas
xor
add
and
add
sti
inc
add
das
jl
loop
push
mov
mov
pop
jo
cmpsl
xor
mov
andl
sbb
frstor
test
movsb
add
add
add
leave
xor
bound
mov
js
mov
push
js
int
add
fmul
mov
nop
add
sbb
movsl
xor
and
stos
push
xor
add
and
jge
add
repnz
inc
into
testb
add
mov
push
lods
adc
add
dec
sahf
mov
push
mov
insl
inc
arpl
adc
call
cmp
adc
pop
sub
xorl
test
xchg
enter
outsb
add
mov
add
inc
movsl
dec
push
stc
je
out
data16
add
bound
mov
mov
sbb
out
add
cmpsl
sti
fsubl
add
jge
sbb
add
xor
rolb
test
jmp
lret
push
add
lret
movb
mov
add
cmp
and
lret
sub
mov
ja
popf
into
mov
add
push
mov
pop
push
fwait
arpl
mov
add
add
add
clc
lea
imul
push
xchg
add
es
jp
int3
andl
pop
push
pusha
add
jne
cmp
pop
test
out
mov
mov
pop
stos
mov
iret
lods
outsl
into
fld
test
xchg
add
cs
lock
aad
push
add
add
faddl
fcmovnbe
add
add
mov
xchg
or
push
je
xor
add
mov
jnp
ja
cmp
xor
add
mov
lcall
mov
lea
out
cmpsb
add
out
sbb
adc
add
mov
jp
popf
out
sbb
lret
dec
inc
add
int
fdiv
das
dec
sbb
fstps
in
mov
mov
and
mov
rolb
mov
inc
jns
mov
scas
stos
or
add
lds
xor
xchg
mov
sbb
pop
dec
movsl
xchg
pusha
add
lods
js
rolb
add
scas
daa
lret
add
cmp
pop
cli
outsb
in
add
mov
sti
adc
pop
pop
mov
add
rolb
add
add
add
mov
stos
in
jle
push
gs
mov
add
add
stos
jb
fstps
fsubs
insb
js
in
add
in
ljmp
lahf
aad
push
cmp
adc
jns
jbe
push
add
add
in
clc
inc
add
cltd
jne
xor
or
sbb
add
push
sbb
popf
xor
jg
add
xchg
xchg
jge
les
loope,pt
lods
pop
ret
push
and
sarl
lods
cmovb
mov
mov
dec
and
add
add
sub
mov
add
pop
mov
add
inc
push
push
cmp
imul
aas
jo
cmpsb
add
in
lahf
push
lret
mov
pop
pop
pop
adc
hlt
add
mov
jns
mov
fcmovbe
add
fldl
rolb
xchg
xchg
loop
jnp
sub
mov
adc
out
push
add
sub
add
sub
adc
or
jmp
add
jecxz
add
adc
cmp
jnp
adc
add
or
add
mov
lds
test
shll
filds
and
jae
ss
adc
jne
xchg
or
lock
sti
dec
mov
mov
test
add
lret
outsb
inc
xorl
xor
lock
add
mov
mov
icebp
shrl
add
enter
pop
inc
add
cli
xor
xor
push
mov
add
insb
cmp
jno
inc
add
icebp
out
xchg
add
mov
outsl
scas
seta
lds
xor
xchg
sub
push
addr16
test
add
xor
add
sub
sbb
or
add
test
addb
add
xchg
adc
sub
add
inc
add
inc
test
sub
add
mov
add
dec
test
out
jb
mov
adc
xchg
and
sbb
imul
add
lods
sbb
push
push
add
scas
out
push
add
mov
add
bound
mov
leave
mov
add
add
and
mov
fadds
mov
add
mov
in
mov
shll
add
int
dec
lods
cmc
jnp
add
mov
add
add
sub
scas
adc
or
add
add
out
and
sbb
pop
pop
mov
ds
addb
aaa
popa
mov
out
inc
xor
lods
or
mov
adc
ja
je
out
xchg
add
push
add
pop
push
add
add
jge,pn
mov
lret
add
adc
fidivl
cmpsb
add
mov
ljmp
in
mov
add
stc
cwtl
je
fsubrl
mov
xor
out
ja
cmp
fisubl
add
xchg
jno
add
xor
mov
add
out
dec
cmpsb
add
mov
add
cmpsl
cmp
mov
adc
adc
add
repnz
fadd
add
add
js
fdivp
add
enter
jns
add
dec
add
sub
add
fldl
icebp
leave
sbb
cli
data16
add
mov
add
adc
push
add
add
dec
xchg
ljmp
mov
add
mov
das
scas
jg
scas
insl
adc
testb
xchg
daa
data16
out
jge
jg
add
aad
add
jo
and
movb
sti
push
or
sub
movntps
mov
push
add
pop
and
mov
scas
adc
add
fucom
inc
add
push
mov
mov
add
mov
mov
pop
dec
loopne
push
xchg
add
add
mov
outsb
aas
fwait
les
xchg
cld
leave
lcall
pop
xchg
add
pushf
jmp
test
mov
lret
nop
add
pop
out
lret
cmp
inc
add
fdivrs
add
add
add
jno
jno
add
fcomi
int3
sub
imul
pop
xor
xlat
sub
leave
jae
add
inc
add
xor
add
add
mov
mov
jb
aaa
test
pop
notl
cmpsb
add
add
pop
stos
or
pop
pop
and
add
add
mov
add
add
add
push
add
fsubr
or
mov
ljmp
pop
repz
out
pop
outsb
cpuid
add
cmp
cwtl
mov
push
push
cmp
daa
mov
add
add
add
push
dec
stos
mov
imul
iret
jne
inc
add
xchg
add
push
jno
dec
xor
xchg
mov
sub
add
push
add
dec
cwtl
daa
test
out
cli
adc
arpl
adc
ret
sbb
add
add
add
out
adc
mov
mov
add
cs
add
xor
mov
mov
mov
pop
int3
sub
mov
add
gs
mov
pop
adc
je
cmpsb
add
fidivs
mov
stc
add
add
addb
add
sub
add
cltd
push
adc
add
xor
pop
addb
add
cmpsl
xchg
imul
or
pop
jg
or
out
dec
mov
fisttpl
sub
and
sub
sbb
add
add
std
lock
outsb
inc
lfs
push
add
insl
sbb
incb
cmpsl
pop
imul
insl
imul
adc
into
movsb
add
add
in
in
ret
test
popa
lret
add
ret
xchg
add
add
insb
push
pop
xchg
aaa
test
cmc
pop
test
in
ljmp
jmp
call
int
add
add
xchg
icebp
pop
testb
add
xor
test
jmp
add
aam
mov
stc
mov
les
in
popf
fwait
adc
add
bound
mov
add
inc
add
add
mov
add
imul
inc
shll
lcall
loop
jne
add
add
std
lds
mov
push
movsl
movsb
add
pop
adc
arpl
add
stc
fsubs
add
jae
bound
mov
mov
jo
push
push
add
ret
ja
stc
adc
mov
into
jg
lock
add
add
add
add
popf
daa
cltd
jno
mov
inc
add
add
inc
add
xlat
loopne
mov
add
add
pop
push
xor
mov
pop
push
add
ret
jecxz
daa
stc
push
push
add
cmp
add
add
mov
push
add
add
add
inc
add
push
rolb
or
add
mov
mov
mov
ja
mov
cmp
jns
leave
mov
add
cs
add
mov
mov
mov
loope
add
add
rolb
popf
testb
inc
add
rolb
mov
dec
jle
fcmovu
xchg
mov
adc
xor
int
jns
insb
sbb
std
and
mov
rorl
inc
fsubs
aam
mov
mov
imul
and
cmp
popl
add
push
or
out
out
les
jp
pop
out
pop
bound
mov
or
pushf
fimull
pop
mov
add
aad
test
add
and
fisttps
addb
add
add
or
add
mov
add
cmpsb
add
add
lret
dec
xchg
clc
push
and
mov
mov
cmp
repz
add
pop
mov
jo
inc
add
test
insl
test
mov
or
add
mov
repnz
add
push
add
inc
add
filds
add
add
fmull
std
addl
add
pop
or
pop
or
jl
jecxz
out
mov
loopne
clc
push
pushf
push
add
bound
mov
mov
xor
pop
pop
out
popl
fisubs
dec
push
bound
mov
add
and
mov
sar
test
add
or
add
jecxz
or
mov
or
sub
cmp
sti
add
shrl
cmp
add
jge
pop
aam
ds
add
ds
add
add
fistl
hlt
add
add
cmp
add
mov
jecxz
cs
push
movb
mov
incl
in
mov
pushf
add
lea
stos
dec
push
add
and
mov
inc
add
repnz
mov
pop
xchg
add
add
dec
push
ja
sub
inc
add
add
shl
add
and
push
add
pop
add
jbe
dec
cld
in
push
mov
add
outsl
inc
xor
popl
pop
mov
test
add
xchg
jns
call
in
mov
pop
insl
xchg
add
push
add
je
int3
data16
int
xchg
inc
js
pop
adc
add
mov
xor
hlt
add
dec
jl
xor
cld
ret
testb
stc
or
aas
xchg
movb
sbb
add
nop
add
and
or
mov
add
add
push
add
sub
scas
sub
xor
sbb
add
add
push
push
add
sbb
cmc
push
add
xchg
add
in
push
add
repnz
add
dec
fiadds
pop
push
jl
into
in
or
dec
rolb
jb
jmp
lcall
mov
lret
out
or
xor
jnp
mov
movsb
add
testb
add
add
test
add
xorl
in
and
mov
pusha
add
add
sub
mov
pop
mov
loop
xor
mov
dec
jmp
add
xor
popf
dec
repz
mov
insl
jb
add
out
mov
dec
nop
add
sbb
pop
lds
add
lcall
add
faddl
mov
cmp
out
mov
rolb
lret
aam
and
and
in
sub
add
add
and
mov
loope
add
jl
pop
inc
add
ljmp
add
inc
add
fstpt
add
add
scas
negl
cmp
jge
add
mov
xor
add
add
add
jle
push
mov
xchg
pop
iret
push
add
sub
xor
sbb
ret
rolb
stos
jmp
add
dec
sub
addr16
cltd
cmp
imul
add
lods
sbb
mov
imul
add
loope
add
cltd
and
add
push
mov
inc
test
aam
adc
insl
repnz
js
repnz
insl
or
add
cmovae
xchg
xor
add
add
cmc
aaa
ja
add
aad
iret
push
add
add
add
mov
cli
xchg
add
adc
out
lret
push
add
outsl
aad
jbe
push
add
and
mov
test
add
movsb
add
daa
sub
outsl
icebp
ret
mov
iret
insb
add
icebp
add
cld
int3
add
mov
xchg
add
add
add
add
dec
movsl
testl
addr16
scas
and
mov
ficoml
ficoml
add
mov
test
mov
add
xchg
xchg
mov
add
push
add
pop
dec
bound
mov
add
jns
lcall
add
cltd
sbb
std
add
fdivrs
mov
mov
dec
and
add
add
dec
lods
pop
adc
add
pop
mov
gs
icebp
repnz
and
sbb
mov
mov
cmp
pop
dec
mov
mov
in
out
aaa
adc
adc
mov
add
mov
push
je
push
add
dec
ret
scas
lods
inc
xchg
add
adc
cmpsl
xor
std
xor
add
add
clc
clc
mov
push
add
jbe
jae
loopne
imul
lock
jno
add
adc
pop
xor
push
cmp
jmp
pop
xor
sbb
mov
popf
or
fs
add
addb
add
add
aas
popa
and
or
add
add
pop
cwtl
dec
xor
jge
add
mov
mov
fld
movb
inc
aas
add
loope
cmp
incl
pusha
add
dec
lret
fistpl
xchg
fildl
scas
ret
add
leave
sub
xchg
cmpsb
add
mov
add
je
mov
mov
das
xchg
push
daa
hlt
add
inc
adc
test
add
dec
repz
dec
hlt
add
mov
mov
inc
jp
sbb
fsubrl
sub
js
add
xor
pop
mov
add
test
mov
and
test
rolb
add
cmc
in
jae
mov
mov
incl
loope
call
repz
icebp
or
adc
mov
dec
xchg
cs
in
lret
rolb
ret
jns
rcll
enter
xor
add
iret
jmp
pop
repnz
add
push
add
push
pushf
adc
pop
add
lds
sbb
ficomps
insb
pop
or
stc
mov
mov
add
add
mov
mov
cmp
add
in
add
call
add
pop
cmp
add
inc
add
add
hlt
add
mov
mov
add
add
ret
lds
add
add
jnp
add
daa
and
pop
adc
clc
dec
in
cmp
add
add
sub
popa
cwtl
call
movb
pop
push
add
outsb
mov
add
add
movsl
mov
dec
lods
mov
or
add
mov
add
jnp
add
add
mov
xchg
mul
add
add
xor
xor
push
add
add
int
arpl
xchg
add
mov
sbb
dec
daa
push
lcall
popf
xchg
add
les
int
rolb
or
enter
or
xchg
sbb
cmpsb
add
cmpsl
bound
mov
gs
add
mov
movsl
mov
sub
rolb
rcll
repz
or
lahf
pop
ret
testb
and
cmp
arpl
xor
add
add
nop
add
cs
mov
scas
lcall
movsb
add
add
or
iret
add
aad
out
in
ds
push
add
mov
mov
mov
add
xchg
add
scas
mov
js
gs
js
add
cli
and
inc
push
mov
jbe
in
cmpsb
add
cltd
rolb
stos
adc
scas
inc
mov
push
add
sbb
inc
lcall
dec
loopne
pusha
add
rolb
xchg
mov
lret
cmp
push
add
cmp
addb
rcl
add
jne
jg
add
add
add
adc
loop
nop
add
mov
inc
add
pop
mov
rcll
pop
xlat
add
add
add
add
xchg
dec
stos
adc
or
mov
add
sbb
add
add
mov
mov
int3
rolb
out
mov
and
cmpsl
movsb
add
add
mov
push
push
add
cmc
rolb
pop
sahf
and
scas
mov
je
sbb
lods
rolb
add
pop
repnz
add
scas
fsubrs
lret
aad
add
mov
in
add
mov
cmp
inc
add
add
adc
mov
add
lret
stos
icebp
mov
adc
movb
add
shll
add
mov
push
xor
loope
enter
xlat
cmp
jbe
jecxz
add
add
in
pusha
add
jg
adc
testl
stc
xchg
into
testb
add
inc
adc
dec
sub
cli
jb
add
in
in
add
movb
repnz
mov
stos
xor
cmp
add
add
pop
sbb
push
mov
add
fdivrs
jae
add
add
push
add
aaa
dec
popf
insb
mov
pop
mov
cmp
jecxz
pop
movb
add
dec
jmp
lods
push
add
cmp
jl
add
jb
movsl
movsl
fcoml
adc
push
inc
mov
std
cli
xchg
add
add
add
repz
jle
add
iret
adc
nop
add
pop
push
test
inc
arpl
jmp
aas
enter
or
or
clc
inc
cmpsb
add
or
add
pop
pop
lods
out
andl
insl
mov
add
in
loop
stos
pop
rolb
icebp
add
and
mov
ljmp
jnp
loope
cwtl
xor
sti
add
jne
rolb
lret
add
mov
test
js
pop
out
push
mov
lods
cmp
fnstsw
add
mov
dec
mov
and
addb
cmc
inc
ja
add
mov
add
add
add
add
cmp
int
bound
mov
xor
das
into
jg
add
jmp
bound
mov
add
dec
and
pusha
add
jmp
or
mov
bound
mov
xlat
xor
pop
mov
pop
cmpsl
inc
add
pop
aam
test
add
cli
dec
pushf
pop
data16
jae
add
mov
leave
jnp
psubsb
add
ret
add
je
sbb
popl
inc
add
add
add
and
pop
ja
dec
adc
mov
fcomps
sti
test
mov
add
mov
xor
movsb
add
in
push
add
add
push
int
add
add
fwait
mov
leave
fdivp
aas
stc
push
add
mov
ljmp
in
fldcw
popf
sub
jg
xor
jmp
insb
int
add
add
cs
xchg
imul
add
out
add
add
mov
cmp
jmp
enter
test
loope
lret
rolb
lea
addr16
mov
test
ret
ja
add
xor
jmp
add
jecxz
aaa
inc
add
inc
add
dec
xchg
xchg
mov
add
add
add
add
add
lret
jp
xchg
sbb
ljmp
aad
ss
add
sahf
insl
mov
mov
lret
repnz
mov
cli
or
addb
push
add
cs
and
pushl
add
mov
fs
add
xlat
inc
test
cmpsl
cmc
sub
jne
add
sti
xor
cmp
cmp
cmpsl
mov
out
pop
mov
call
sub
fmull
xor
xor
mov
xor
and
dec
jmp
add
add
xor
adcl
fidivl
clc
sub
out
add
jnp
add
push
add
ret
ljmp
sub
lret
movb
jbe
sub
adc
clc
repnz
add
mov
jno
sub
push
add
mov
int
sub
mov
ficompl
add
stos
jmp
push
sti
pop
outsb
mov
inc
sub
bound
mov
test
add
js
iret
mov
mov
add
lds
adc
inc
jge
or
dec
add
jmp
bound
mov
or
daa
sbb
movb
js
or
add
add
xchg
add
jno
sbbl
insb
cmpsb
add
ds
add
mov
pusha
add
mov
cmp
and
mov
dec
add
mov
lea
in
fstps
ljmp
mov
cmpsb
add
cmpl
mov
in
add
or
add
add
and
add
push
add
inc
repnz
fnstenv
add
sub
leave
or
test
js
je
cli
cmpsl
ret
fmuls
inc
add
jge
add
fnstenv
add
add
add
rolb
loopne
dec
and
mov
add
imul
add
push
add
inc
add
add
mov
cld
xor
icebp
mov
int
pop
in
hlt
add
pop
sti
out
lret
pop
shl
adc
pushf
push
ret
mov
mov
fwait
cmovp
mov
add
mov
pop
mov
mov
jmp
mov
pop
fs
inc
add
jb
icebp
push
add
inc
add
mov
add
mov
add
xchg
push
add
pop
aas
mov
icebp
imul
call
add
add
cmp
add
jnp
push
mov
in
push
mov
mov
pushf
inc
insb
and
add
and
pop
adc
jmp
add
and
mov
into
push
add
jge
mov
xor
mov
add
mov
add
clc
fdivs
fidivrs
sbb
movsb
add
add
mov
sbb
add
add
shll
nop
add
dec
sahf
mov
mov
xchg
mov
pop
leave
sbb
int3
movb
sub
addb
inc
add
add
out
sub
add
add
sub
movsb
add
add
push
add
push
add
pop
inc
add
add
adc
jmp
xchg
push
cld
sti
sbb
sbb
addr16
add
mov
jb
ret
jmp
cli
stc
inc
movb
add
inc
dec
add
and
enter
into
and
leave
into
or
add
mov
add
jecxz
seta
stc
mov
incl
add
push
addb
sub
daa
gs
pop
addb
testb
enter
pop
into
mov
add
add
daa
dec
jmp
add
xchg
xchg
lods
or
es
add
push
add
stos
insb
imul
daa
pop
loop
jl
fdivrl
or
adc
and
jg
mov
jge
nop
add
arpl
cld
jge
add
mov
arpl
add
add
sbb
add
add
addr16
pusha
add
decb
mov
jle
loopne
stos
xchg
addr16
add
push
int
aam
stos
add
mov
std
fisttps
mov
stc
inc
xor
lcall
add
mov
inc
add
int
dec
sti
xor
imul
jl
mov
add
add
pop
dec
pop
push
add
or
arpl
add
xor
rcl
inc
lcall
mov
pusha
add
enter
rolb
cmp
gs
jne
aaa
nop
add
dec
sub
add
add
add
pop
rol
inc
add
pop
int
add
sbb
repz
add
add
add
sahf
inc
movb
add
inc
add
aaa
std
push
add
cmp
mov
jmp
sbb
daa
in
jmp
mov
daa
out
jle
sarl
push
loopne
sbb
add
outsb
repz
add
push
mov
data16
imul
add
sahf
js
lock
add
fimuls
mov
sbb
popa
mov
bound
mov
add
mov
and
movsl
incl
adc
jl
cmpsb
add
rcll
int3
push
stos
stc
aaa
xchg
adc
pop
clc
movb
jns
mov
add
add
mov
call
jp
inc
addb
push
mov
xor
rolb
jmp
fld
add
add
add
fstps
cmp
and
test
add
dec
xchg
add
testb
pop
cmpsb
add
add
jp
cmp
add
fbld
rolb
stos
stc
add
int3
dec
fcoml
jbe
ret
sub
xchg
or
xor
pop
cmpsl
or
sbb
add
push
lds
test
lcall
insl
sbb
pop
adc
in
pop
sahf
stc
imul
aam
es
mov
mov
fldt
add
sbb
pop
cmpsb
add
add
pop
mov
jge
stc
mov
mov
aas
cmp
add
add
out
mov
loopne
sti
cmpsb
add
dec
lea
and
sti
insb
data16
and
add
outsl
xchg
pop
lods
and
mov
ficompl
out
mov
insl
cs
add
das
mov
in
nop
add
test
imul
add
push
imul
ret
add
daa
scas
cmp
add
mov
add
cwtl
jmp
movsb
add
xchg
add
add
add
add
inc
test
mov
add
push
add
add
jmp
nop
add
faddl
add
sub
xchg
add
inc
sub
fldt
add
mov
pop
cmp
add
mov
mov
ja
add
pop
xchg
add
cld
inc
add
add
sbb
xchg
add
add
les
cmp
sbb
add
fsubs
mov
test
add
mov
add
mov
outsl
dec
fsubrl
push
add
lcall
insl
jae
test
sub
lea
insl
xor
rcll
xchg
test
mov
push
add
iret
fs
aad
mov
add
js
add
push
cltd
add
sub
add
push
xor
loop
sti
cmpsl
add
call
add
inc
add
pop
sbb
add
data16
add
aaa
insl
out
sti
addb
sbb
adc
or
sub
jo
or
pop
dec
sub
cld
rolb
add
add
add
out
add
xor
es
adcl
add
adc
mov
add
add
mov
mov
test
add
mov
pop
test
je
add
mov
mov
loopne
pusha
add
jle
or
lret
addb
add
jle
enter
or
cmc
sahf
test
data16
daa
enter
xchg
add
fwait
jns
xor
outsl
stc
int
movsb
add
bound
mov
mov
je
push
push
add
add
mov
cmp
or
add
add
lea
clc
test
lcall
lret
bound
mov
add
xchg
and
popf
les
repz
mov
test
add
and
mov
add
fisubs
pop
hlt
add
mov
mov
cltd
int
movsl
add
mov
aaa
std
jnp
push
add
fldt
add
sbb
test
fsubl
mov
fisubrs
iret
xchg
add
add
add
popf
call
dec
call
bound
mov
addb
pop
icebp
sub
mov
pusha
add
add
mov
xchg
and
mov
adc
or
gs
xor
jbe
mov
and
dec
jge
add
mov
xor
inc
sub
add
mov
jns
or
popf
sub
add
sub
or
inc
out
adc
lods
stos
repz
leave
loop
aam
xchg
xor
clc
sbb
xor
push
mov
add
push
add
cmc
hlt
add
addb
add
lahf
and
jbe
cmpsl
inc
add
add
dec
into
sub
fiaddl
add
mov
add
add
and
popf
xlat
cmp
add
outsb
cs
add
pushl
mov
or
sub
add
mull
fildl
fst
add
rolb
add
add
and
mov
ds
add
push
xchg
mov
push
neg
and
add
push
adc
or
mov
cmp
pop
test
mov
cmp
mov
pop
data16
ret
sbb
cltd
xor
jmp
add
cmc
mov
mov
adc
pusha
add
lret
dec
sbb
xlat
icebp
fistpll
shll
test
push
mov
mov
popa
cmp
add
add
data16
outsb
sub
xchg
add
addr16
add
pop
pop
movsl
fmuls
sbb
testb
add
fildl
inc
imul
add
xchg
add
pop
enter
pushf
mov
aaa
pop
lret
test
add
sbb
add
les
dec
xchg
mov
fistl
in
cmpsb
add
mov
xlat
scas
sbb
arpl
xorl
add
js
add
or
add
add
add
int3
outsl
push
add
add
out
pop
jno
xchg
dec
jns
inc
add
sbb
bound
mov
xor
dec
adc
add
mov
mov
test
das
inc
stos
mov
add
xchg
cmp
xchg
push
cmp
push
xchg
add
mov
sbb
dec
pop
pushf
sti
stc
mov
loop
mov
sbb
add
outsb
addb
dec
push
nop
add
lods
call
sti
test
std
sbb
add
jo
mov
mov
testb
xor
call
mov
add
jns
mov
movb
or
addl
or
addr16
dec
iret
inc
out
xor
rorl
add
ja
cmp
loope
add
sub
dec
sbb
add
add
add
dec
sahf
mov
add
add
add
call
inc
data16
sti
pop
mov
mov
korb
add
add
xor
pop
and
jmp
imul
jo
jne
rcrl
scas
sub
movb
add
adc
push
ss
sbb
mov
cmp
push
add
add
test
je
mov
scas
mov
insl
repz
add
stos
sub
jmp
jg
repnz
add
sbb
in
es
push
add
sar
push
adc
cmp
add
mov
cltd
dec
fidivrl
testb
repz
cmpsb
add
dec
pop
icebp
shrl
push
rolb
scas
lock
jp
add
popf
mov
adc
add
jle
add
sub
add
mov
outsb
shll
add
add
enter
sub
add
sub
xchg
add
sub
daa
or
add
xchg
lods
lock
sahf
imul
and
mov
add
inc
add
scas
cli
pop
jl
add
loopne
add
data16
call
sbb
fucom
add
cmpsl
rolb
xor
pop
sbb
xchg
ret
add
das
sbb
pop
stos
nop
add
mov
add
repnz
xor
mov
mov
xchg
jle
add
or
pushf
movb
push
add
xchg
sti
arpl
pop
imul
imul
loope
add
add
testb
add
add
add
add
xlat
dec
adc
call
gs
add
add
add
add
push
ljmp
popf
cmp
rolb
xchg
sar
cmc
cmp
sbb
xor
xchg
add
movsl
xor
shll
cmp
add
outsl
sbb
add
repnz
aas
ljmp
add
repz
stos
cltd
inc
jnp
inc
add
add
bound
mov
add
mov
push
sub
les
mov
pop
lcall
or
and
clc
call
add
pop
push
add
int
add
adc
aad
rolb
add
orl
hlt
add
adc
xor
and
sbb
in
pop
add
mov
push
and
mov
ret
dec
insb
movb
mov
out
lret
add
xchg
loopne
lods
mov
push
or
pop
push
add
les
xchg
sbb
ror
loop
mov
sub
js
rolb
pop
adc
mov
or
call
rolb
jge
stc
and
leave
ret
pop
inc
mov
inc
out
add
jnp
rolb
lea
pop
jbe
push
inc
add
jmp
rolb
addb
pop
jl
pop
push
cmp
add
addb
popa
fsubp
popa
mov
cmp
jne
test
inc
fisttps
cmp
mov
imul
add
scas
frndint
in
mov
lods
fisubrl
adc
jnp
test
dec
ficoml
lock
icebp
cmp
add
mov
jb
call
push
add
jo
repz
pushf
xorl
cld
push
add
cli
dec
fdivrp
popa
or
fnsave
add
add
jb
cmp
repnz
add
cmc
rcll
xor
xchg
inc
add
lret
cltd
add
push
add
inc
add
add
add
mov
add
pop
in
int
testb
xlat
leave
push
cmp
mov
test
inc
add
add
es
sahf
pop
pop
cmp
add
add
mov
add
mov
aas
add
add
testb
or
dec
mov
xchg
add
adc
jmp
cld
rorl
hlt
add
add
add
sahf
or
add
add
xlat
push
add
in
lea
mov
ret
and
sub
sti
xorl
inc
add
mov
ret
stc
fdivrp
dec
fistps
dec
dec
cld
outsl
mov
aas
add
or
push
add
add
add
add
or
add
hlt
add
push
add
adc
add
adc
add
push
and
mov
add
push
add
xchg
add
iret
outsl
sbb
scas
outsb
jbe
ja
fbstp
leave
push
popa
add
ret
add
mov
add
into
push
mov
fwait
xchg
add
and
and
mov
xchg
sub
mov
mov
add
mov
add
mov
adcl
lea
xchg
scas
test
xlat
pop
std
mov
pusha
add
sub
mov
dec
movb
add
add
and
and
mov
add
push
add
push
add
add
or
add
add
jno
add
add
test
push
imul
dec
push
add
dec
je
jecxz
fchs
add
add
aaa
cld
mov
jae
or
nop
add
add
add
add
stos
jp
imull
xchg
pop
xchg
sub
push
loope
xor
lret
or
mov
fcomi
hlt
add
add
stos
pop
ret
nop
add
add
xor
ret
addl
mov
and
lods
dec
xor
add
sbb
adc
test
insl
sbb
cmp
add
movsb
add
repz
cmp
add
shrl
push
or
add
rolb
inc
add
mov
or
mov
rcll
add
into
jge
rolb
loope
lret
cli
dec
sbb
add
sub
add
testl
ror
ret
in
jnp
add
mov
add
or
xchg
add
add
cld
xchg
test
enter
movb
sbb
xor
pop
nop
add
mov
jle
pop
sub
ja
add
loopne
iret
sahf
xchg
movsb
add
add
add
mov
mov
mov
add
inc
add
je
fnsave
add
push
add
pop
imul
gs
cmp
xchg
add
adc
mov
add
add
daa
add
push
mov
add
add
xor
jge
mov
add
add
add
insb
xchg
loop
rcll
and
add
add
mov
adc
dec
jbe
or
mov
add
add
add
test
sub
faddl
xor
dec
cmpsl
lods
aam
inc
add
push
jo
cmp
add
jp
insb
out
pop
insb
cld
lea
inc
mov
leave
push
arpl
loope
add
sbb
adc
xor
add
mov
mov
add
add
imul
or
sti
or
jbe
cmp
cmp
add
add
addb
jo
dec
jmp
add
bound
mov
popf
bswap
dec
xchg
mov
push
add
add
add
pop
push
mov
addr16
jl
sbb
add
add
add
add
add
mov
or
push
mov
jecxz
pop
and
mov
test
in
mov
and
mov
je
in
xchg
add
pop
addb
add
mov
test
cltd
out
out
mov
add
jp
mov
add
mov
jnp
mov
mov
mov
mov
adc
shrl
add
lret
jmp
add
push
add
mov
lods
jo
jns
add
jle
add
fnsave
adc
int3
xor
adc
mov
aas
insb
lock
and
cmp
loop
test
cmp
ret
fldcw
test
lcall
fimuls
cmpsb
add
dec
pop
movb
add
add
sti
adc
ja
add
movb
inc
repz
scas
dec
leave
test
xor
notl
add
out
mov
std
sahf
push
arpl
add
in
sbb
add
push
or
in
fisubrl
js
in
add
fdivr
mov
add
lds
pop
movb
testb
insl
add
imul
js
popf
xor
enter
sub
sti
sub
repnz
pop
cmp
add
add
std
js
add
add
add
mov
add
sub
outsl
or
or
mov
add
xor
inc
add
int3
lea
hlt
add
mov
push
add
sbb
add
add
jg
push
add
add
clc
pop
mov
pop
daa
ds
inc
add
pop
jg
iret
data16
mov
add
jg
lahf
mov
mov
push
add
popf
push
add
mov
inc
add
jg
add
add
push
add
xchg
imul
add
add
daa
push
jmp
add
stc
push
outsb
stc
movb
jle
add
mov
add
enter
add
jne
add
push
add
push
add
mov
pop
adc
out
nop
add
jae
jmp
mov
and
pop
mov
dec
or
mov
movb
push
add
push
inc
add
imul
lds
add
pop
arpl
daa
cwtl
decl
ror
fidivrs
jle
divl
xor
ljmp
rolb
pop
mov
nop
add
push
mov
int
jecxz
or
add
mov
int
cmp
lar
mov
in
push
jne
push
mov
inc
xchg
not
out
icebp
jns
and
mov
aad
add
mov
scas
cmp
push
add
add
add
mov
add
jmp
xchg
scas
lock
icebp
mov
push
add
add
or
xchg
add
mov
ficoms
xchg
mov
add
xchg
add
add
xchg
mov
out
add
loop
repnz
sbb
jmp
sub
flds
adc
add
loop
movsl
rolb
daa
pop
cli
fisttpll
push
clc
in
and
mov
insl
cmpsl
xor
add
add
mov
pop
ret
aad
add
mov
cwtl
movb
jnp
push
add
push
add
rolb
add
add
push
add
sbb
mov
cs
add
add
add
add
repz
icebp
imul
arpl
ret
fmuls
add
push
mov
add
out
ret
mov
sub
sub
and
cmpsl
or
mov
iret
inc
add
add
add
pop
je
inc
add
jbe
lds
pop
xchg
aad
call
sub
add
lods
push
add
mov
cmpsb
add
adc
inc
add
sub
outsb
addb
jb
popa
inc
jne
add
mov
xchg
add
cmp
or
comiss
adc
movb
dec
xchg
loopne
movsl
outsb
dec
imul
in
lahf
push
sub
mov
cmpsl
mov
bound
mov
xchg
add
mov
add
push
sti
xor
add
add
mov
clc
int
add
xor
daa
aaa
ljmp
push
add
mov
cmpsb
add
iret
dec
enter
add
add
test
dec
fldl
add
lea
add
add
mov
icebp
add
mov
cmp
std
push
das
xchg
lods
jl
add
jge
jl,pt
jl
jnp
pushf
push
add
add
addr16
push
mov
sbb
mov
cmp
int
test
lret
mov
xlat
repz
out
sbb
cwtl
je
push
add
pushf
mov
add
add
bound
mov
pop
aad
popa
pop
cmp
xchg
add
add
add
call
les
cmp
add
dec
dec
int3
inc
stos
xor
jb
sub
add
cmp
add
add
in
sub
sbb
add
add
add
adc
imul
out
add
fidivrl
add
loop
lds
and
int
addb
daa
lods
pop
fwait
pop
push
add
add
orl
push
pushf
sahf
sub
pop
mov
add
push
repnz
xchg
inc
or
leave
call
rolb
mov
mov
in
test
cmp
cmp
jne
add
lock
inc
add
mov
add
out
out
mov
loopne
adc
push
add
add
add
add
sbb
add
test
call
pop
push
and
dec
cmp
jnp
jbe
lods
ljmp
xchg
add
pop
jb
or
add
add
add
add
xchg
popf
or
fcompl
xchg
pop
add
fbstp
sbb
mov
add
jne
addr16
inc
mov
sbb
rolb
add
and
add
jo
xchg
add
fwait
dec
sbb
cmc
jns
jnp
lods
or
add
data16
cmp
filds
add
arpl
sbb
test
mov
add
add
mov
add
jp
jae
add
js
testb
or
and
into
jg
add
xchg
rolb
inc
add
mov
push
pop
daa
push
add
push
adc
in
loopne
fcoms
add
sahf
xor
arpl
rolb
es
dec
dec
cmc
add
test
mov
add
add
pop
cmp
pop
and
add
jmp
adc
fidivl
xchg
dec
lret
xchg
addl
add
enter
add
sbb
add
ds
xchg
add
lea
sub
add
aam
push
add
add
stc
clc
in
push
add
add
mov
int
jge
pop
fldenv
ljmp
inc
add
push
add
xor
and
and
add
or
and
das
add
mov
sub
inc
addb
add
inc
push
add
hlt
add
add
mov
push
pop
pop
nop
add
cmp
xor
lret
push
xor
aad
mov
add
mov
mov
add
mov
xchg
add
add
gs
mov
divl
cltd
mov
add
hlt
add
sub
add
inc
dec
pushf
cmp
jmp
add
mov
cmp
jecxz
jg
out
lock
and
mov
js
pop
xchg
fisubs
xchg
push
out
jns
dec
inc
mov
sub
and
add
das
lds
xor
in
sahf
mov
sbb
add
mov
add
sahf
add
mov
add
add
xlat
xor
push
add
xor
mov
je
daa
mov
cmp
add
mov
mov
pop
or
push
test
cmp
xor
mov
pop
int
js
inc
add
ret
add
xchg
popf
loopne
mov
enter
fucomp
xchg
add
jbe
sbb
test
in
add
aad
popa
sub
loope
add
add
add
les
sti
cmp
insl
in
pushf
mov
stos
hlt
add
mov
std
jo
loope
xor
and
mov
ret
mov
bswap
jp
fs
into
rolb
pop
adc
movsl
rolb
pop
rolb
stc
cmp
mov
cwtl
or
stos
cmp
add
aam
xchg
add
je
loope
in
xchg
add
scas
aas
test
mov
repnz
add
cmpsb
add
xor
jnp
int3
insb
add
mov
lahf
mov
cmp
ds
rolb
sub
mov
xor
bound
mov
and
add
mov
shll
mov
add
out
add
cmovg
sub
mov
rolb
sbb
inc
add
add
pop
in
fistpl
repz
int3
mov
mov
lds
xchg
pop
lahf
xchg
fcomps
dec
in
cmp
inc
stos
leave
pop
stos
push
das
sub
jae
adc
sub
scas
enter
pop
mov
in
add
out
rolb
imul
inc
adc
xor
mov
lahf
jp
add
mov
add
sarl
cld
fwait
ja
push
insl
cmp
inc
and
add
pop
scas
jb
and
dec
pop
stos
cmp
add
push
add
push
add
adc
sbb
add
add
fwait
xchg
lret
bound
mov
mov
jecxz
fmull
cmpsl
mov
push
add
add
add
or
cld
fstps
adc
stos
pop
iret
jne
add
xchg
add
and
mov
push
sub
add
frstor
pushf
or
xor
xchg
fimuls
add
add
mov
mov
add
add
xchg
dec
in
pop
std
ror
addb
and
mov
add
sahf
jecxz
fnstsw
jecxz
mov
sub
imul
pop
push
roll
xor
addb
add
imul
shrd
mov
pushf
je
sbb
add
mov
mov
movsb
add
add
inc
add
pusha
add
mov
add
jl
fwait
inc
add
pop
addb
add
data16
icebp
and
sti
add
mov
add
gs
adc
sbb
adc
repnz
sbb
mov
popf
sbb
testb
add
rolb
lret
push
lock
lahf
xor
insb
mov
cs
mov
fiaddl
inc
add
jb
in
lea
lret
jb
in
test
cmp
test
add
addb
mov
addb
jae
mov
xchg
add
add
xchg
ss
insb
stos
lds
mov
push
add
xor
push
add
xchg
lcall
jns
add
inc
ja
mov
fisubl
mov
pusha
add
hlt
add
adc
cs
pusha
add
mov
dec
pusha
add
add
aad
pop
divl
mov
je
es
lret
or
pop
mov
sub
addb
ret
add
mov
inc
mov
mov
pop
stc
stos
adc
mov
adc
fwait
push
cmp
sub
aaa
dec
ljmp
std
stos
ret
pop
rolb
adc
add
in
popa
sti
cwtl
rolb
rolb
addr16
add
add
add
mov
fldl
cmp
add
cmp
sub
arpl
lret
add
testb
xor
fstpl
imul
dec
jb
push
lods
cmpsb
add
jb
xor
mov
lret
ds
inc
add
add
pop
testl
mov
add
mov
aaa
push
inc
sub
add
dec
fdivs
add
mov
add
test
in
jg
xor
cmp
push
inc
movsl
movb
repz
sahf
loopne
stc
out
jl
cli
mov
stc
pop
clc
scas
dec
lock
or
push
add
add
add
mov
push
add
out
push
pusha
add
cmp
das
pushf
sub
in
mov
add
add
mov
sub
cs
mov
movb
sub
add
add
fs
rorl
in
push
add
stos
cmc
cmp
call
enter
loop
sahf
jmp
arpl
jle
add
add
jge
add
jl
push
js
jp
pop
or
mov
inc
data16
add
bound
mov
pusha
add
leave
inc
add
jo
xchg
add
add
popf
jne
xchg
add
add
mov
mov
aad
push
daa
in
add
xlat
stos
dec
jle
adcl
iret
std
loope
add
ja
push
imul
cmp
loope
add
repnz
mov
lret
push
mov
add
xchg
add
xchg
pop
mov
add
push
add
push
add
imul
mov
jl
add
pop
xchg
add
dec
sbb
adc
out
pop
jg
aad
pop
cmp
icebp
push
cwtl
insl
cmp
sahf
rorl
xchg
aam
enter
push
imul
and
mov
add
jmp
mov
mov
out
into
pop
imul
mov
add
loopne
movb
add
fwait
pop
lret
cmp
insb
insb
adc
int
xor
aad
adc
mov
cmpsl
andl
lcall
testb
push
hlt
add
add
lods
push
add
add
add
add
add
add
push
sbb
bound
mov
enter
fisubs
sahf
inc
insb
movsl
cmp
xchg
pop
les
fabs
jbe
and
mov
lret
test
dec
repz
xor
shrl
shll
mov
stos
cmpl
push
mov
or
mov
pop
push
dec
xchg
add
test
rcl
lret
pop
push
add
sub
pop
xor
imul
sbb
and
mov
jle
or
add
inc
cltd
mov
arpl
in
add
cli
scas
jo
jne
xchg
add
mov
lods
movsl
pop
xchg
add
mov
add
mov
in
or
rorl
iret
add
mov
sub
add
mov
pop
outsl
sti
ja
pop
ret
inc
iret
lret
add
add
loop
mov
inc
fdivs
mov
repnz
xchg
add
inc
or
mov
add
int3
sbb
stos
pop
lea
add
outsl
dec
repz
jecxz
push
xchg
cld
dec
mov
and
jmp
add
cwtl
insl
rolb
leave
lods
xchg
add
movsl
cmpsb
add
jmp
add
add
add
add
or
add
jl
outsl
inc
add
add
lret
cs
dec
outsl
aaa
jnp
inc
js
mov
push
add
addb
xor
int3
pop
cwtl
mov
jecxz
add
add
mov
adc
and
add
mov
adc
sub
mov
add
add
in
adc
inc
add
add
add
movsb
add
add
add
into
int3
sbb
add
mov
add
sti
test
and
jl
mov
rolb
dec
es
add
rolb
mov
mov
mov
mov
add
testb
jne
adc
fimull
loopne
xchg
add
in
icebp
dec
inc
dec
pop
mov
ret
sbb
cmp
sbb
push
add
or
adc
mov
in
mov
jns
sti
jbe
hlt
add
add
dec
xor
add
add
add
add
add
or
add
lea
cmp
movsl
mov
add
jno
add
shll
inc
ficomps
adc
addr16
xchg
add
movb
xchg
lcall
push
add
addb
insb
push
cs
decl
nop
add
test
pushf
mov
or
mov
in
movsb
add
push
roll
stc
adc
add
and
mov
add
add
lret
adc
fbld
xor
and
stos
add
fbld
push
dec
mov
adc
mov
add
out
add
add
add
insl
mov
rolb
dec
jne
add
jbe
xor
gs
add
add
mov
inc
out
fsubrl
cmc
aaa
and
jecxz
cmp
inc
test
dec
mov
jg
push
add
sbb
mov
enter
out
add
add
add
add
add
adc
xchg
add
add
mov
pop
daa
inc
add
fwait
imul
rolb
and
push
add
ret
or
loop
pop
loop
push
add
pop
cmp
add
add
mov
fisttpl
cmp
add
xor
out
out
hlt
add
stc
arpl
xchg
add
mov
cmp
mov
add
inc
lcall
addr16
addr16
jmp
add
add
dec
jmp
add
mov
add
les
ret
lods
xchg
add
out
iret
push
add
aaa
loope
insb
cld
stos
movb
mov
xor
push
rolb
fdivs
add
add
add
inc
sbb
loop
testb
add
or
popf
pop
out
inc
add
js
outsl
jmp
loope
and
mov
bound
mov
add
fdivrs
andl
in
jp
pop
push
roll
out
mov
dec
insl
mov
adc
add
mov
sti
cmp
rolb
jmp
mov
xchg
add
addb
mov
repnz
rcrl
xchg
add
pop
add
add
add
mov
rolb
add
add
push
fcom
add
add
cvtps2pd
add
mov
std
mov
mov
add
movb
movb
xor
pcmpeqd
inc
xor
jb
jecxz
add
dec
andl
sbb
add
add
insb
xchg
xor
push
add
add
push
mov
push
add
enter
add
es
add
mov
rorl
add
shll
ljmp
mov
pop
and
test
hlt
add
xchg
jae
and
xlat
jmp
add
push
add
pop
push
and
mov
adc
mov
sahf
ds
loope
in
lret
adc
add
cmp
add
inc
add
cmp
loopne
mov
mov
int
add
adc
xchg
add
hlt
add
add
adcl
pop
xchg
add
or
add
mov
ficomps
gs
push
add
adc
cmp
movsl
fmuls
sbb
dec
fstl
mov
add
jle
add
sbb
add
add
add
mov
adc
sub
ret
add
add
add
lods
pop
fiadds
lods
movb
mov
push
jns
faddl
dec
jns
sub
mov
adc
dec
stc
mov
mov
jmp
movsb
add
pop
mov
int3
and
mov
pop
dec
push
bound
mov
add
add
shrl
test
cmpl
mov
inc
add
add
rolb
stos
pop
jnp
add
push
fildl
or
movsb
add
xor
xor
add
mov
dec
pop
mov
add
mov
xchg
add
loop
mov
arpl
cmp
add
fstl
out
jns
add
mov
add
mov
out
lret
loopne
movsl
mov
ljmp
add
push
add
movsb
add
sahf
adc
xchg
add
add
in
xchg
add
sbb
jns
shrl
inc
push
jb
faddl
ja
sbb
mov
push
add
aas
add
orl
add
sub
shrl
test
add
jecxz
into
insl
movsb
add
dec
cmp
fcoms
mov
das
and
sbb
or
inc
add
xor
cld
push
add
popa
push
mov
add
mov
jl
add
jnp
add
icebp
lcall
pop
jg
mov
sub
xchg
add
add
add
or
add
cli
add
das
stos
ret
adc
stos
mov
test
mov
in
mov
add
int
add
in
imul
pop
sbb
and
mov
inc
add
inc
add
push
test
add
add
add
mov
mov
mov
add
inc
ljmp
das
or
add
mov
pop
sti
xchg
icebp
sub
jecxz
add
sub
add
sub
sub
add
mov
fsubs
mov
jne
push
out
push
push
repnz
cmc
push
add
popl
mov
sbb
add
xchg
clc
nop
add
add
cli
pop
insl
stos
clc
movsl
pop
inc
sbb
fwait
loopne
les
pushf
cmp
out
sub
mov
mov
in
aaa
inc
add
out
repnz
ljmp
orl
lock
aam
mov
dec
hlt
add
hlt
add
mov
rolb
mov
mov
add
movb
out
cmpsb
add
call
add
xchg
add
bound
mov
std
cmp
ffree
add
std
xor
nop
add
add
jecxz
add
mov
add
in
arpl
insl
out
push
add
sub
add
js
add
stos
inc
add
jb
dec
pop
pop
ret
and
mov
xor
dec
pop
xchg
add
inc
sbb
and
out
mov
jb
in
push
push
inc
outsl
sub
bound
mov
into
mov
movb
in
inc
add
sbb
fidivs
add
inc
data16
and
mov
sub
inc
imul
mov
mov
add
add
icebp
lret
add
mov
lods
pusha
add
inc
add
dec
xlat
sbb
add
add
and
lret
or
mov
je
scas
or
mov
add
jle
inc
add
xor
push
add
xchg
inc
add
add
sub
mov
add
in
mov
and
hlt
add
or
mov
and
scas
int3
cmp
insl
inc
inc
add
pop
mov
pmulhuw
test
add
add
add
cmp
cmp
add
test
loop
mov
scas
cmpsl
cs
cmp
adc
inc
add
cld
push
nop
add
cmp
add
insb
rcrl
inc
add
push
cmp
dec
sbb
sbb
mov
aaa
and
mov
sbb
add
add
lods
loop
mov
and
inc
add
addl
sahf
leave
mov
cpuid
add
add
mov
jno,pt
push
add
mov
aad
add
add
aad
in
call
js
insb
inc
add
mov
push
add
in
movb
mov
add
add
push
ja
add
nop
add
xor
jno
xor
test
lods
pop
xchg
add
sahf
push
push
sub
pusha
add
xor
test
add
lds
repz
or
sbb
cltd
iret
adc
add
dec
xor
outsl
stos
xor
add
imul
add
movb
add
mov
add
mov
add
rolb
sbb
add
mov
jnp
mov
mov
xor
push
xchg
add
dec
push
add
gs
ud0
xchg
add
clc
or
data16
add
xchg
loop
cmpsl
orl
add
mov
inc
xchg
add
fcom
add
add
es
add
jg
pop
loopne
push
test
add
jmp
add
add
fwait
cmpsl
push
add
add
add
add
cltd
pop
jl
loopne
jmp
push
add
add
mov
add
js
add
add
add
add
dec
addb
add
add
dec
jp
add
dec
jno
int3
call
addb
arpl
add
jae
aad
mov
mov
insb
out
outsb
lods
push
add
pop
push
add
xchg
add
add
xchg
add
mov
mov
sbb
add
ret
add
addb
sub
adc
xchg
mov
pop
sti
inc
add
jg
add
adc
push
add
add
add
add
add
add
out
jg
cli
hlt
add
dec
inc
loopne
call
lock
add
sub
pop
mov
xor
mov
fiadds
xchg
add
pop
js
xor
inc
add
add
add
add
push
outsb
and
mov
add
mov
mov
add
and
mov
mov
repnz
pop
inc
xchg
jge
add
jnp
add
add
clc
iret
mov
stos
into
mov
jns
clc
in
jge
movb
push
enter
push
ret
stos
add
mov
add
jle
repz
add
mov
adc
imul
sti
cli
add
push
add
test
je
sahf
push
das
jnp
add
sub
xor
loopne
pop
cmp
rolb
sti
imul
rorl
inc
pop
push
cmp
add
jl
xor
js
add
add
push
repz
mov
add
add
xchg
adc
pop
out
xchg
les
sbbl
add
dec
lds
pop
add
mov
sub
add
mov
xor
cmc
inc
imul
mov
add
push
and
mov
inc
pop
mov
sub
icebp
mov
mov
add
mov
dec
push
add
push
inc
add
add
dec
push
add
add
jle
add
loope
and
add
add
add
and
icebp
and
dec
push
sarl
mov
mov
cmp
add
xchg
add
push
rolb
lock
mov
sub
and
mov
popf
xor
lcall
add
pop
add
mov
lods
sbb
mov
add
jbe
adc
js
movsl
jmp
add
mov
mov
mov
mov
add
add
into
pushf
inc
add
mov
mov
add
sub
xchg
add
or
pop
sti
cmp
fldt
icebp
and
push
mov
xlat
dec
movsl
cmp
adc
sbb
add
cmp
cmpsb
add
or
test
mov
add
add
out
add
mov
fldt
popa
ljmp
inc
add
xor
sbb
les
sbb
add
aad
add
lea
push
mov
loop
rolb
stos
inc
add
call
xchg
das
cmp
nop
add
add
cmp
jae
dec
movsb
add
stos
movsl
pop
xor
mov
xor
sbb
fwait
sub
iret
xor
mov
pop
push
dec
and
jno
mov
jmp
in
dec
movsl
lahf
pop
push
add
cwtl
mov
add
pop
adcl
add
add
add
jp
add
fs
fisttps
add
pop
aas
mov
add
add
std
mov
inc
pop
sbb
add
imul
insb
lret
jo
or
and
mov
mov
nop
add
pop
inc
fucom
add
mov
push
add
sbb
fstp
cmpsl
lds
add
add
cmp
stc
fwait
add
add
cli
mov
add
mov
add
push
add
add
or
lcall
cmp
pop
pop
addb
mov
xchg
js
into
xchg
or
dec
pop
inc
mov
add
addr16
push
mov
in
add
and
mov
pop
call
cmpsb
add
ret
mov
pop
xchg
mov
push
fsubrl
jnp
cmp
add
out
xchg
add
cwtl
fistps
lahf
aaa
cs
sbb
pop
fcmovnbe
sub
jb
dec
add
add
mov
add
add
add
les
test
push
add
add
dec
jp
rolb
sbb
pop
cltd
xchg
add
push
adc
mov
in
pop
jge
push
add
fs
add
jl
add
mov
mov
mov
add
add
cmpsb
add
lret
add
in
or
lahf
push
mov
pop
rcrl
push
dec
adc
jo
jnp
out
and
mov
adc
mov
out
pop
jp
mov
add
add
sbb
add
scas
lds
rolb
jbe
mov
repz
add
add
lahf
sub
add
push
addb
add
xor
addr16
add
add
adc
inc
add
push
bound
mov
test
add
pushf
cmpl
add
add
fisttpll
aad
add
mov
jle
cmp
stc
stos
addb
ds
out
out
popf
push
testl
decb
add
icebp
call
rolb
in
mov
mov
pop
xchg
mov
mov
add
mov
push
add
inc
addr16
add
add
in
or
cmp
add
add
add
and
jbe
xchg
push
dec
sub
jnp
aas
js
xchg
cmp
js
add
add
add
stc
imul
add
leave
repz
push
add
add
bound
mov
pop
aam
sub
add
imul
or
sbb
dec
and
mov
add
add
or
add
add
stos
sbb
das
data16
add
ficoml
and
adc
cwtl
dec
sub
xchg
fadds
add
add
add
add
add
jp
mov
dec
push
add
into
or
add
insb
and
pushf
xchg
add
cwtl
cld
int
add
stc
jbe
hlt
add
insl
inc
lret
fs
inc
add
jo
cmp
cmp
out
outsl
push
add
push
cltd
cmp
fidivs
mov
lret
sbb
dec
popa
mov
jns
mov
push
add
add
dec
lret
sub
dec
push
add
pop
xchg
mov
add
add
add
ljmp
pushf
scas
popa
push
add
notl
pop
loop
xor
add
mov
dec
fwait
in
mov
add
or
add
iret
add
outsl
jle
add
shl
add
add
ds
cmp
dec
xchg
add
add
add
or
add
push
stc
rcll
mov
adc
push
pop
xchg
jl
jne
add
add
lret
or
push
sub
add
jb
xor
mov
mov
rolb
xchg
sarl
rolb
psubusw
addb
and
inc
push
add
add
pop
arpl
mov
addb
add
mov
movb
xor
add
push
push
add
loop
enter
repz
mov
aas
jecxz
add
mov
mov
out
inc
add
add
out
sbb
push
ja
add
mov
push
mov
cmp
mov
jne
add
add
adc
push
add
fstp
sbb
add
add
rolb
ds
add
push
testb
mov
add
jp
jae
into
js
pop
cmpsb
add
mov
add
aad
pushl
pushf
insb
lret
push
cs
add
add
adc
mov
add
add
pop
int3
lock
add
inc
and
lds
push
in
ja
call
mul
push
data16
imul
jbe
movsb
add
dec
stos
rolb
dec
nop
add
lds
adc
and
xchg
add
add
add
add
addr16
loopne
cmp
lret
add
mov
add
cmp
add
and
add
or
push
in
add
add
mov
testl
sub
adc
ljmp
ja
sub
add
inc
jbe
lret
add
movb
dec
or
add
xor
xchg
jbe,pt
pushf
pop
xor
sub
das
add
mov
add
movsl
jae
dec
push
add
and
cmpsb
add
testb
add
hlt
add
sbb
sbb
into
mov
xchg
add
testb
fwait
movb
or
xor
add
adc
addb
xchg
pop
pop
sub
mov
add
ljmp
add
pop
jae
jmp
imul
popf
sbb
nop
add
add
aad
adc
adc
mov
cmpsb
add
dec
sub
pusha
add
jno
stos
data16
sbb
addr16
lahf
xchg
cltd
les
out
add
adc
wrmsr
add
or
add
push
add
out
jge
test
xor
xlat
mov
add
jmp
rcrl
add
mov
and
fs
dec
dec
xor
frstor
adc
rolb
add
repnz
add
stc
jbe
sbb
iret
cwtl
mov
cmpsl
je
jle
add
and
mov
rcll
je
inc
xlat
jo
and
lahf
add
sub
sarl
add
test
mov
dec
loop
xor
add
aam
sub
xor
lock
out
xchg
sub
or
int3
adc
push
aad
mov
rolb
mov
lahf
outsl
jmp
rolb
pop
dec
cmc
fists
add
adc
cli
mov
pop
rcll
add
add
into
xchg
push
mov
push
cld
jmp
or
movsb
add
loop
pushf
fldt
test
add
add
adcl
xchg
outsl
dec
cmc
insb
xor
outsl
mov
pop
mov
into
cmp
or
add
js
xchg
int
add
subl
add
lret
loop
cmp
mov
mov
data16
add
out
add
scas
add
mov
stc
bound
mov
ficoms
cmp
add
cmp
lret
cmp
sbb
leave
jns
add
cwtl
xchg
loopne
add
mov
adc
mov
fnsave
add
add
add
jnp
js
xor
pause
add
xor
inc
add
insb
movsl
nop
add
fistpl
add
adc
aaa
and
mov
add
fidivrs
test
xchg
add
sbb
and
add
int
pop
push
add
ret
rolb
add
add
inc
add
pop
pop
pop
mov
cmp
cwtl
push
add
add
sub
lea
enter
or
mov
add
add
adc
sti
and
gs
xor
add
add
pop
ljmp
xor
mov
xor
xlat
add
add
ljmp
xchg
xchg
imul
jo
pushf
inc
add
sahf
fsubrl
ds
push
add
js
sar
mov
add
addb
insb
mov
aas
mov
jb
in
pop
clc
loope
jle
dec
aaa
pop
jp
adc
add
add
clc
test
cli
mov
fistpl
sbb
cltd
insl
rolb
lahf
dec
out
add
out
mov
and
xchg
add
das
add
add
jbe
mov
aaa
mov
mov
icebp
sbb
add
add
mov
add
rol
add
sbb
or
out
add
adc
cmp
add
cmp
test
fisttpll
add
add
dec
cmc
repnz
add
dec
push
xlat
jg
nop
add
arpl
pop
or
add
mov
pop
push
add
add
jge
mov
fistpll
add
loope
cmp
leave
sarl
jbe
sbb
mov
add
add
in
add
loop
ret
cmpsb
add
mov
in
movsb
add
cmpsl
push
cmp
decl
inc
add
lcall
lcall
sbb
sub
or
loop
int3
loopne
or
or
dec
jns
add
add
cmp
pop
call
mov
das
mov
cs
add
repnz
fwait
mov
add
dec
cmp
xchg
add
loope
push
add
or
add
mov
add
outsb
das
adc
dec
movb
mov
mov
imul
dec
add
mov
mov
and
das
dec
cmc
xchg
sbb
adc
pop
outsl
cmp
sub
mov
add
add
