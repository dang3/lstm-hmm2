leave
in
lods
mov
aaa
mov
lahf
cld
lcall
ljmp
jmp
mov
sub
jmp
ljmp
pushl
push
mov
ljmp
jo
daa
jmp
lcall
pushl
ljmp
std
mov
aaa
test
pop
ret
mov
cs
test
test
jp
out
pxor
nop
or
pushl
or
int
call
sub
jmp
dec
fbld
and
lea
jmp
jmp
flds
scas
test
ljmp
into
aad
jmp
call
fildll
in
decl
pop
in
cmove
mov
push
xchg
hlt
clc
lods
sub
pushl
pusha
ljmp
jmp
movsb
decl
and
in
sbb
adc
aas
loop
fwait
mov
mov
sub
pushf
xchg
adc
fcoml
js
repnz
xor
cmp
add
inc
call
sub
jg
jno
sbb
mov
jl
lcall
repnz
scas
xor
dec
inc
stc
shl
push
pop
inc
push
sbb
decl
dec
int3
sub
and
pusha
push
pop
lcall
sbb
mov
pop
push
call
repz
clc
outsb
dec
aam
decl
fs
stc
inc
decl
je
incl
pop
mov
mov
mov
mov
jge
outsl
xchg
mov
incl
lcall
sti
int3
xchg
sub
mov
sub
sub
lods
fadds
std
clc
dec
enter
insl
mov
mov
call
frstor
decl
mov
lcall
movsl
cmp
ljmp
mov
inc
out
cli
push
testb
push
mov
push
mov
mov
cmp
cmpsl
jg
inc
lcall
add
call
fnstsw
imul
push
jmp
push
adc
decl
ljmp
call
aaa
push
out
out
in
mov
inc
lcall
dec
push
push
jmp
cmp
xchg
sar
sub
cmpsl
lcall
imul
pushl
addr16
aas
das
xor
push
test
fnstenv
aad
jle
xchg
sarl
jecxz
jp
decl
and
dec
mov
nop
and
iret
imul
add
ljmp
pushl
jg
lcall
xchg
mov
push
pop
jmp
call
dec
or
in
sbb
scas
lods
dec
pop
lock
stos
cmp
pushl
fwait
jmp
lcall
pop
fildl
pushl
or
xchg
adc
xchg
out
fldcw
repnz
decl
jae
ljmp
movsb
call
pop
pop
or
repz
pop
cld
mov
sti
add
jnp
out
test
inc
aad
movsb
jg
cmc
andb
push
mov
sub
xor
call
and
jne
dec
push
call
test
je
movzbl
jmp
mov
add
mov
shr
push
push
addl
call
push
call
leave
ret
push
mov
cld
push
push
mov
lods
xor
mov
sub
add
mov
add
stos
xor
pop
pop
leave
ret
jmp
jmp
jmp
or
in
scas
lods
sub
repnz
in
sub
push
jmp
mov
int
jl
inc
ljmp
pop
clc
jp
add
movsl
mov
decl
enter
jmp
add
call
inc
aas
out
dec
nop
dec
jo
decl
inc
decl
sub
repz
das
in
sar
dec
mov
insl
cmp
jae
jb
daa
jmp
mov
call
jmp
add
add
ret
decl
dec
data16
jle
mov
cmpsb
mov
add
mov
jno
pushl
and
cmp
jecxz
mov
xlat
inc
jmp
mov
call
lcall
dec
jmp
add
sbb
fmuls
incl
jecxz
fildl
inc
jmp
mov
call
or
mov
aaa
mov
test
mov
incl
add
ljmp
push
inc
pushl
icebp
mov
dec
pop
push
add
dec
pop
cmp
call
xor
jne
xchg
cmpsl
fcoms
jmp
ljmp
dec
and
push
dec
aam
and
out
mov
sbb
cmp
incl
mov
add
dec
fiadds
pushf
imul
pusha
lcall
jge
pop
sti
jle
inc
jmp
in
mov
movsl
jecxz,pt
repz
cmp
xchg
js
mov
test
xchg
je
push
push
push
ret
add
xor
fisubrl
sub
je
clc
stos
dec
push
add
aaa
addl
add
inc
lcall
xor
incl
loop
fisubrl
fs
jmp
mov
push
lock
aad
mov
jecxz
pop
stos
mov
push
add
add
mov
mov
jno
mov
cwtl
pop
aam
xchg
mov
xor
rolb
ljmp
mov
fnstcw
inc
push
outsl
cld
pop
incl
xchg
lahf
ret
lret
dec
mov
test
add
decl
call
xchg
shr
int3
and
leave
mov
and
add
ljmp
fcom
inc
pushl
pushl
mov
incl
pushl
jmp
test
lods
xchg
lret
and
sahf
push
jno
cmp
mov
jmp
add
insb
jbe
mov
aad
decl
out
fldcw
cmc
stc
push
imul
fcoms
mov
pushl
pop
ds
sbb
loop
jle
icebp
add
dec
out
rclb
add
jmp
cmp
jmp
repnz
popa
lcall
pop
jmp
add
add
lea
test
push
ljmp
ljmp
leave
mov
mov
or
jmp
sub
and
testl
cmp
xchg
test
mov
incl
fildl
in
je
aaa
mov
out
pop
cmp
mov
lcall
or
incl
fwait
in
lcall
pushl
push
xchg
mov
xor
decl
mov
xchg
add
inc
incl
mov
inc
mov
sti
insl
mov
call
adc
xor
stos
movsl
decl
adc
decl
jg,pt
push
push
push
jmp
add
adc
push
add
decl
add
test
add
aam
cmp
jnp
ljmp
imul
mov
jns
add
add
mov
push
adc
incl
xor
inc
pushl
cmp
sar
inc
ljmp
sar
dec
mov
ficompl
incl
insl
iret
and
jno
jo
cmp
ljmp
test
cmp
incl
movsb
fstl
incl
mov
aam
inc
decl
push
fmuls
call
dec
mov
rorl
xlat
aad
shlb
sahf
aad
in
cmp
adc
xor
or
fdivrl
inc
jmp
ljmp
mov
ds
in
lahf
pushf
jno
push
add
in
xchg
add
test
mov
push
inc
add
add
cmp
cmpsl
jmp
jmp
std
xchg
adc
mov
sbb
xor
lret
inc
mov
ja
mov
mov
add
jmp
add
sub
pop
fdiv
test
pushf
pop
push
and
ds
dec
cmp
adc
lret
lcall
mov
iret
out
loopne
imul
cmp
xlat
add
push
xlat
fildll
and
in
cmc
mov
lret
mov
adc
incl
sub
repnz
ljmp
mov
fcoml
sub
pop
or
xchg
aas
jbe
in
mov
pushl
xor
call
push
and
enter
mov
lcall
insl
mov
cmc
adc
pop
pop
cmp
mov
decl
adc
inc
decl
inc
call
call
jp
inc
jmp
jmp
popf
jmp
daa
decl
jmp
sar
jo
push
jl
shl
pushl
cmp
int3
mov
pusha
ljmp
cmp
fiaddl
xlat
pushl
mov
int3
mov
fmul
shr
hlt
dec
mov
mov
pushl
incl
call
cmpsb
ljmp
pushl
std
sbb
fstpt
inc
pushl
jmp
xlat
add
lea
arpl
jnp
add
cli
mov
out
and
pushl
inc
call
cmp
incl
lcall
cmp
decl
fucomi
mov
ljmp
incl
ljmp
in
pushf
cmp
popa
mov
incl
add
add
xchg
bnd
stc
xor
dec
xchg
outsl
lea
dec
lret
mov
lock
jb
inc
jmp
arpl
mov
in
or
push
into
fbld
fmul
cmc
lock
fmulp
push
icebp
xchg
push
xchg
inc
pushl
inc
incl
sub
sbb
or
jne
and
stos
leave
ss
jecxz
test
fnstenv
pop
xchg
std
decb
ljmp
movsb
call
push
add
incl
in
mov
jmp
decl
inc
ljmp
and
jno
neg
mov
jl
xchg
push
pop
cmp
mov
jmp
add
add
push
jmp
mov
incl
lcall
sar
lcall
pushl
frstor
decl
sbb
jmp
pushl
roll
call
decl
pop
decl
xchg
mov
add
call
mov
fistpl
lcall
xor
xor
ljmp
inc
incl
and
xchg
and
test
enter
push
ret
jmp
incl
call
xchg
arpl
or
aam
push
mov
inc
jmp
mov
sbb
and
or
jnp
pushl
inc
lcall
mov
arpl
lret
lcall
xchg
add
cmp
mov
sahf
enter
push
fmul
loop
push
ljmp
mov
incl
cmp
add
jmp
ror
fiadds
jmp
cmp
pop
aaa
add
jl
add
pop
cmp
fcoml
imul
jmp
jnp
shr
es
jp
aaa
dec
out
cmp
pusha
dec
cwtl
and
sbb
pop
push
ljmp
out
pop
dec
pop
add
leave
hlt
inc
incl
in
pop
call
pop
fnstsw
xchg
xor
sub
ljmp
leave
out
dec
cmp
inc
jmp
push
repz
and
cmp
stos
sti
in
jle
in
xchg
pop
dec
pop
inc
pushl
decl
cmp
xor
fisttps
stos
mov
jmp
pop
ljmp
push
add
mov
mov
add
lcall
or
lahf
mov
std
jne
jmp
decl
dec
xchg
inc
pushl
jmp
insl
adc
icebp
push
and
lahf
dec
jle
cmp
jne
jmp
push
dec
xchg
dec
pop
jmp
incl
ljmp
pop
mov
adc
jge
test
push
imul
ss
cmp
cmp
cmp
cmc
scas
ljmp
push
stos
mov
push
sti
inc
decl
pop
aas
rcrb
lcall
call
lods
adc
add
or
cmp
mov
push
ret
add
add
lret
jns
add
xor
add
xlat
fildll
mov
testl
push
imul
mov
test
jbe
out
add
inc
mov
xchg
data16
add
add
jmp
add
xor
pop
jge
stos
cmp
dec
and
cmp
decl
jmp
or
arpl
pop
stos
ds
mov
imul
jge
push
jmp
arpl
aas
sbb
incl
mov
decl
pop
je
dec
xlat
add
lcall
adc
pushl
jmp
pop
aaa
jmp
shll
stos
and
inc
cmp
push
cmp
lcall
pop
jmp
pop
jnp
decl
cmp
mov
fsubp
jmp
int
lcall
in
or
aaa
cmp
add
lea
add
std
je
jmp
inc
push
hlt
push
ljmp
adc
pop
notb
push
push
ret
add
movsl
dec
push
sar
decl
dec
cmp
cmp
lcall
incl
push
dec
add
dec
add
mov
add
test
add
decl
inc
stc
aas
mov
lcall
and
lahf
das
mov
sar
mov
call
pop
pushl
or
jbe
decl
or
mov
mov
pop
push
incl
xor
inc
incl
xor
push
push
rol
ljmp
jbe
jmp
xor
add
decl
clc
mov
push
add
add
mov
add
cmp
sti
std
outsb
dec
mov
ljmp
xor
incl
jmp
lcall
loop,pn
pushf
sbb
jp
mov
mov
push
test
out
jecxz
arpl
pushf
cmp
pushl
lcall
sub
aaa
xchg
jns
and
mov
add
and
mov
add
push
ret
pslld
decl
fwait
jp
lcallw
adc
es
mov
imul
cmp
hlt
inc
jmp
decl
inc
jmp
pushl
ljmp
xchg
xor
lcall
add
jmp
add
add
sub
inc
pushl
pop
cmpsb
ljmp
jmp
stos
jmp
add
add
jmp
or
pushl
divps
loop
pop
push
rorb
lcall
pop
shl
jg
xchg
mov
xor
ljmp
mov
movsb
decl
decl
mov
hlt
and
or
and
int
pushf
jge
incl
mov
xlat
insl
sti
jp
call
lahf
in
test
mov
xchg
jno
mov
das
jmp
call
cmp
pushl
dec
std
xchg
int
pop
push
lcall
out
movsb
decl
movsb
call
and
dec
sub
add
add
in
sbb
xchg
ds
add
xlat
add
xchg
xchg
push
jne
popf
movsl
pushl
xor
jmp
ljmp
cmp
cmp
push
pop
cmp
pop
inc
dec
xchg
in
and
xor
jl
cmpsb
decl
inc
out
rsm
sub
inc
add
jmp
add
jnp
call
sahf
dec
pushl
inc
dec
pop
outsb
fnstenv
push
inc
jmp
sbb
call
sub
rcrb
xchg
push
addr16
push
shr
or
add
xlat
cmp
test
popf
push
sbb
jmp
stc
jb
push
leave
xchg
in
jns
lcall
jnp
rcrl
pusha
jmp
push
cmp
add
add
incl
inc
incl
cmp
sub
and
iret
lahf
xor
dec
inc
incl
daa
decl
call
xchg
cmpsb
jmp
push
lcall
sahf
testl
xor
push
dec
jecxz
cmp
adc
insl
and
fcoml
lcall
in
mov
call
and
stc
icebp
lcall
popa
dec
je
adc
pushl
enter
xchg
fsts
and
scas
jns
addr16
aas
sbb
mov
mov
incl
pop
iret
dec
sar
adc
jnp
cmp
pop
mov
je
add
cmp
cmp
scas
repz
lcall
or
add
add
add
add
dec
stc
loopne
jnp
dec
inc
dec
adc
mov
push
int3
add
incl
decl
pop
call
testb
decl
addl
add
scas
js
inc
decl
dec
adc
lahf
add
aam
jns
push
mov
movb
insb
inc
add
add
cmp
add
mov
cmp
pushl
dec
iret
and
ds
sub
jmp
mov
popa
incl
jne
mov
ljmp
decl
and
popa
jmp
in
mov
cmp
jmp
lcall
mov
loopne
pop
or
call
stos
jle
daa
ljmp
ja
pushl
stos
lcall
mov
rclb
cmp
xor
add
dec
add
xor
jmp
in
jmp
repnz
lea
mov
add
add
add
cmp
dec
push
pop
mov
mov
xchg
jmp
or
jmp
xchg
dec
lods
cmp
jmp
ja
sub
ljmp
cmp
mov
cmp
lcall
cld
cmp
decl
arpl
fs
call
in
sbb
push
add
push
popa
dec
mov
inc
decl
add
dec
cmp
add
mov
or
loop
ret
clc
jecxz
push
mov
sub
sub
sar
decl
xor
push
ljmp
inc
fimuls
xchg
aad
xchg
and
stc
xchg
xchg
pop
or
cld
pop
cmp
imul
decl
xchg
aas
dec
ds
rcr
adc
mov
pop
ljmp
fldl
lcall
popl
dec
lcall
call
in
ja
mov
lcall
jnp
scas
sar
adc
scas
es
cmovg
ljmp
call
aas
scas
push
repz
decl
jno
dec
inc
jmp
in
adc
call
js
jb
movsl
lcall
in
or
inc
stc
and
outsl
add
call
ljmp
dec
repz
decl
mov
stc
scas
mov
incl
ljmp
out
mov
cmp
push
add
add
lcall
insb
ljmp
sub
push
aas
and
sahf
enter
xchg
imul
lahf
xchg
ja
sub
aaa
push
incl
mov
push
inc
inc
add
sub
loope
lods
mulb
cli
cmpsl
call
in
addr16
jecxz
fcmovnbe
add
cmpb
enter
test
mov
call
jbe
lret
das
jl
lods
xor
aaa
mov
decl
test
xchg
xchg
mov
arpl
add
push
add
xor
imul
jge
or
call
incl
sub
outsb
lahf
insb
test
daa
incl
imul
jbe
daa
decl
clc
lahf
fwait
stos
mov
jmp
call
inc
decl
push
out
loope
push
incl
add
or
ljmp
jg
decl
xchg
jg
push
xor
sbb
push
add
add
push
add
xor
decl
out
push
jnp
mov
ljmp
inc
incl
call
jmp
push
ret
add
add
cmp
int3
test
pop
dec
fwait
adc
or
jle
mov
adc
xchg
push
lcall
sti
ja
and
cmp
mov
ret
jmp
mov
xor
pushl
popa
pop
add
add
add
add
mov
jb
cmp
data16
jle
dec
jecxz
sub
lcall
add
push
jle
jae
sub
imul
dec
movsb
decl
sub
movsb
incl
add
fisttpll
push
jno
out
jo
cmp
ds
fsts
mov
nop
pop
add
dec
cmp
add
jno
xchg
ds
cld
data16
ljmp
decl
jle
inc
incl
sub
jmp
mov
pop
sub
ljmp
cmp
and
popf
lcall
fcompl
fcomp
xor
repnz
leave
xchg
js
jmp
or
decl
call
dec
out
incl
dec
add
add
rcll
in
ljmp
stos
jg
incl
ljmp
mov
adc
inc
jg
ljmp
mov
cmp
inc
push
dec
jge
clc
stos
sbb
call
mov
sar
incl
lcall
mov
call
lret
mov
sbb
incl
icebp
rcrl
push
decl
and
imul
callw
rorb
mov
ljmp
incl
sub
pop
pusha
pushl
sub
inc
pushl
enter
jo
lods
push
inc
decl
push
ret
pushl
jmp
call
xchg
mov
in
cmc
mov
insb
push
imul
inc
incl
sub
decl
add
add
jmp
xchg
pushf
dec
imul
sbb
xchg
iret
or
sbb
ljmp
mov
add
ljmp
decl
in
mov
dec
jg
ljmp
ljmp
loope
jne
stos
lret
cmp
cmp
movsb
ljmp
sar
push
lcall
sti
sub
call
sti
mov
lret
out
xchg
lock
sub
or
in
sahf
sub
add
adc
lret
out
sub
cmp
call
call
ljmp
lcall
push
mov
push
rcl
jb
decl
lcall
hlt
incl
lea
lock
push
popa
jmp
dec
jle
js
cmp
dec
xchg
jno
sbb
sub
sbb
cmpsb
ljmp
or
or
mov
popf
xchg
jmp
out
incl
pushl
or
and
add
add
ret
outsl
xor
dec
adc
in
aaa
iret
xchg
stos
lods
fldl
incl
push
lret
call
int
cmp
pshufw
xor
jmp
add
pop
push
ret
adc
add
dec
mull
jo
decl
pop
push
add
push
shll
inc
call
xchg
fists
sbb
inc
inc
call
test
inc
mov
jmp
add
mov
int
pushl
sub
aam
insb
call
mov
das
in
mov
cli
push
decl
aam
jne
or
inc
decl
push
ret
lea
add
popf
sbb
cmc
insb
push
push
add
mov
ljmp
mov
iret
or
xor
fdivr
pop
scas
stc
pop
leave
sub
incl
jmp
daa
decl
cli
jmp
decl
mov
ljmp
push
push
cmp
decl
xor
adc
inc
decb
cmp
sbb
test
out
sbb
ret
mov
sub
pop
xchg
in
push
and
or
incl
ret
inc
dec
dec
cwtl
out
mov
aaa
push
loope
push
inc
call
and
cmp
lea
ds
xchg
push
mov
jmp
add
jecxz
loop
mov
mov
insl
lea
ss
fistps
faddl
dec
mov
call
je
dec
mov
ljmp
loop
pushf
pusha
incl
pop
mov
adc
loopne
sar
popa
decl
push
fidivrl
add
mov
jns
sti
xor
inc
decl
mov
call
int
sar
push
lock
add
decl
sti
mov
mov
jmp
ljmp
mov
pushl
decl
pushl
sar
jmp
jmp
mov
sbb
nop
inc
decl
mov
lods
cmp
cld
rcrb
sub
call
push
ds
mov
gs
add
imul
pop
jbe
jp
mov
cmpsb
jmp
pushf
jae
mov
lea
mov
or
add
xchg
add
cmp
or
jl
in
push
decl
lret
call
decl
test
adc
inc
add
sbb
xor
pop
js
pop
ret
jmp
call
in
push
push
add
lret
jo
jmp
mov
scas
in
push
pop
lahf
adc
or
mov
jmp
decb
decl
lcall
cmp
lods
pop
fldcw
pop
add
in
add
jmp
dec
imulb
cmp
ss
mov
xchg
cmc
repnz
mov
cmp
test
pop
or
jl
int3
mov
cmp
lret
mov
jle
pushl
into
sar
jbe
or
xor
inc
ljmp
dec
xchg
sbb
les
add
add
dec
pop
mov
push
ret
inc
jmp
push
adc
stos
dec
shl
shrb
decl
shrb
sbb
rorl
sti
xchg
pushf
hlt
push
adc
fldcw
enter
sub
fld
ljmp
and
mov
lcall
mov
decl
sub
lcall
xor
cmp
int
inc
inc
pushl
decl
outsl
sbb
cmp
imul
push
pop
push
xor
dec
pop
incl
fldl2t
roll
cmp
fidivrs
test
call
daa
lcall
call
sti
mov
inc
add
add
add
add
push
dec
lahf
testl
mov
adc
ljmp
popa
insb
push
jmp
add
jle
lcall
sbb
jmp
jge
insl
inc
ljmp
cmpsb
cli
sub
pop
add
add
add
add
fidivs
out
into
mov
jae
call
ljmp
gs
into
daa
push
mov
pusha
lcall
out
incl
inc
add
add
jmp
xor
lcall
mov
cmp
fwait
xor
ljmp
ljmp
cwtl
outsl
or
lcall
movsb
pushl
jge
cwtl
adc
pop
mov
dec
lcallw
or
jnp
mov
mov
jmp
cmp
je
and
stos
out
ds
test
ret
incl
jmp
mov
ljmp
jnp
shrl
dec
jge
mov
push
mov
ljmp
xchg
jge,pn
mov
inc
lcall
cmp
lcall
incl
cmp
xchg
lcallw
jbe
adc
pushl
sar
call
cs
jo
loop
xor
jo
xchg
fdivl
incl
jne
jmp
xor
ss
ljmp
cmp
incl
decl
cli
dec
mov
mov
jae,pn
ljmp
dec
cmp
fstpl
ljmp
test
gs
decl
push
inc
lcall
loop
mov
jmp
mov
movsl
ljmp
loop
int
decl
inc
lcall
pushl
and
icebp
call
pop
push
sbb
pop
jmp
xchg
scas
add
jge
ds
jp
jl
cmp
ja
daa
jmp
jl
scas
popa
call
js
flds
call
call
jmp
lcall
pushl
decl
decl
jmp
mov
decl
std
push
push
gs
add
add
add
lcall
cmpl
jmp
cmp
or
cmpsl
jmp
insl
inc
incl
xor
les
push
ret
xlat
add
repnz
or
test
lcall
lcall
ljmp
mov
ror
sbb
inc
decl
and
rcl
cwtl
adc
lods
inc
pushl
testb
jge
xchg
lret
push
push
int3
xor
mov
adc
jo
sbb
lcall
cmpsb
lcall
push
je
loope
dec
or
lods
lcall
lahf
incl
jne
add
mov
add
call
mov
mov
enter
js
adc
xchg
xchg
cmp
mov
cmp
pushl
jbe
lcall
mov
jmp
orb
push
arpl
mov
jae
lcall
out
jmp
xor
cmp
incl
aam
scas
inc
call
mov
lcall
stc
insb
pop
pushl
incl
scas
imul
sarl
popf
dec
cmp
add
adc
ljmp
call
leave
je
jns
nop
pusha
jmp
lcall
scas
jg
call
pop
call
sub
insl
iret
lret
jne
sar
add
lods
js
test
cmp
lods
cmp
jmp
js
call
loop
out
call
in
jmp
push
mov
clc
and
ret
mov
fldl
decl
jne
push
ret
mov
add
scas
lcall
je
jg
dec
lret
and
mov
sar
in
gs
in
lods
cwtl
lea
call
decl
loopne
movntq
out
xchg
in
and
in
cltd
inc
decl
cmp
xchg
push
pop
rcrb
mov
call
xchg
out
outsl
or
or
incl
pushl
sar
mov
decl
loopne
pop
push
lcall
jmp
jo
inc
incl
outsb
sbb
mov
decl
mov
inc
mov
push
add
or
cmp
inc
call
ja
push
xchg
call
add
sti
mov
incl
jmp
cwtl
xchg
femms
pop
pop
cmp
add
jmp
out
xor
test
aaa
push
push
jmp
add
add
add
sar
dec
callw
pushl
ja
sar
push
cmp
jbe
xor
jmp
add
jmp
push
test
mov
jnp
decl
and
in
mov
in
ljmp
mov
scas
lahf
hlt
push
ljmp
inc
call
ret
mov
add
call
popa
jl
inc
incl
inc
call
lret
inc
and
jmp
xor
add
repnz
movsb
dec
test
dec
mov
lcall
ss
xor
sar
push
jmp
dec
add
push
push
inc
ljmp
movsb
decl
aas
adc
call
mov
inc
dec
mov
fisubs
jp
inc
pushl
jmp
add
mov
or
mov
jmp
fnsave
dec
dec
das
je
aas
inc
jmp
inc
incl
or
xor
dec
xor
shlb
scas
mov
aas
mov
jo
std
enter
cmp
scas
push
in
adc
jmp
decl
repnz
jns
add
call
adc
jmp
add
add
xlat
mov
in
into
xor
adc
xor
jmp
xor
push
mov
decl
ret
pusha
pushl
enter
pushl
xor
pushl
pushw
inc
add
add
add
lods
pop
mov
lcall
jmp
lcall
adc
pop
sahf
pushf
dec
mov
incl
jmp
jmp
call
cmp
adc
loope
lods
push
mov
pop
jmp
add
mov
decl
mov
call
cs
fld
mov
stc
aam
jns
dec
pop
incl
and
ljmp
das
push
and
ret
pushl
mov
fdivl
ret
xchg
inc
add
lea
dec
cmp
decl
lahf
cmpsb
incl
cltd
xchg
push
mov
ljmp
sub
or
fildl
jmp
decl
decl
jmp
add
add
cmc
push
mov
call
testl
inc
ljmp
jmp
sbb
jmp
pushl
js
fcoml
adc
cmp
int3
ja
insl
leave
lgs
cs
inc
jg
inc
ljmp
incl
ljmp
jnp
call
adc
decl
in
push
and
push
hlt
or
fidivs
scas
mov
into
ds
jmp
incl
inc
jmp
ljmp
mov
jno
cmp
lock
xchg
out
cmp
incl
pushl
inc
inc
mov
or
push
ret
add
ret
dec
cmpsb
incl
mov
incl
jmp
call
rorl
mov
imul
clc
sti
sbb
mov
add
add
add
hlt
dec
xchg
decl
mov
jmp
call
xchg
movsl
jmp
cld
out
sti
out
in
mov
aam
sub
fbstp
push
lea
gs
add
add
jmp
pop
xor
incl
lea
jecxz
inc
inc
lcall
pop
sbb
add
jns
or
dec
mov
push
jmp
add
rorl
sub
jo
jne
dec
add
lret
inc
call
push
push
insl
jbe
dec
jo
lea
adc
cmpsl
cmp
hlt
pop
mov
adc
aad
cmp
dec
in
fisttpl
lret
movsl
decl
mov
inc
call
jmp
and
jecxz
aaa
data16
sti
inc
jmp
push
filds
jno
loopne
jne
xor
ret
das
aam
sbb
arpl
ret
lcall
xchg
xchg
nop
dec
ret
clc
dec
adc
fstpl
lcall
dec
scas
dec
sti
mov
arpl
das
hlt
fcoms
cltd
aad
decl
and
and
jnp
jle
mov
xor
fsubrp
mov
decl
push
xor
or
cmp
dec
inc
push
fsubrs
decl
add
add
add
call
push
aam
inc
dec
jecxz
pop
xchg
cmc
clc
test
lret
aam
dec
xor
push
icebp
sub
or
ds
call
jbe
push
add
inc
sub
icebp
je
xor
push
stc
push
int3
mov
push
mov
lahf
and
push
incl
xor
adc
pop
sar
ljmp
fsubrl
imull
fs
std
lcall
rorb
ljmp
mov
pushl
inc
adc
jmp
mov
push
add
mov
jmp
sub
jl
decl
sahf
jb
test
lret
lret
dec
push
test
xchg
iret
adc
lcall
sub
jge
mov
cmp
loop
xor
push
xchg
cmp
cmp
incl
adc
cltd
mov
call
push
dec
push
aas
out
dec
push
cmp
jmpw
pop
shll
ljmp
lcall
mov
lods
icebp
jp
mov
call
repz
cltd
or
call
loope
cs
mov
popf
or
push
push
mov
mov
add
mov
mov
jl
ljmp
cmp
mov
add
add
push
daa
jmp
in
and
push
xchg
stos
mov
add
xchg
add
add
add
in
mov
jg
add
lock
jne
cmp
inc
ljmp
dec
rol
jge
sbb
jmp
dec
add
lcall
mov
jns
clc
into
ds
stos
jo,pn
fcoms
daa
jmp
iret
sbb
pop
dec
xchg
jo
mov
imul
add
inc
call
jmp
mov
call
jns
xchg
pop
jae
pop
test
xchg
jge
lods
adc
decl
popa
pushl
sub
fimuls
incl
movsl
decl
pop
jp
inc
decl
cmp
lods
pop
mov
jl
loope
sub
mov
decl
aam
add
std
std
adc
stos
cwtl
cmp
inc
incl
popf
iret
or
decl
lcall
mov
mov
pushl
or
xlat
dec
cli
and
je
sbb
cmc
popa
jmp
jns
lcall
dec
xchg
fsubr
out
cmovg
pop
pop
dec
enter
and
jo
or
out
aas
sub
xchg
sbb
add
push
ret
and
cmp
lret
ljmp
movsl
decl
enter
js
incl
pushl
js
push
dec
lahf
stos
popa
incl
dec
aad
push
pop
sbb
and
ljmp
inc
decl
jl
or
pushl
mov
lcall
inc
call
adc
ret
cmpsl
pushl
in
rcrb
lcall
daa
jge
or
xor
jmp
add
je
jmp
add
cmp
call
incw
mov
data16
fstpl
cmp
jmp
or
decl
test
and
add
and
add
add
insb
push
lret
sbb
call
repz
sar
push
insl
pop
mov
sub
lcall
lods
cs
call
mov
jmp
test
lcall
push
push
ret
add
jmp
mov
ds
out
jns
mov
jne
call
decl
mov
ljmp
aas
int
adc
jge
jmp
inc
cmp
lcall
cmp
cltd
dec
call
and
mov
push
inc
call
lea
mov
jmp
sbb
nop
aam
sbb
xchg
add
xor
add
nop
add
add
inc
jmp
fisubrl
ljmpw
das
inc
incl
test
and
cltd
js
jecxz
dec
movhps
jge
in
imul
lcall
mov
sar
adc
ljmp
js
jp
sub
sar
clc
cmp
out
push
sub
call
lea
xor
jmp
add
xchg
pop
lock
shll
testb
sub
xlat
lret
inc
push
insb
je
aam
jl
test
das
and
mov
decl
decl
test
stc
push
add
sbb
xor
jns
incl
data16
in
ds
stos
xor
ret
call
add
lcall
jno,pt
je
sbb
inc
call
xchg
or
adc
pop
fldcw
mov
lcall
cmp
lods
jge
cmp
inc
push
add
incl
nop
mov
enter
decl
xchg
mov
repnz
in
push
or
jne
ljmp
call
mov
mov
adc
push
jmp
add
push
test
fwait
loop
decw
leave
js
in
sub
pop
ret
cmp
xchg
jne
ljmp
decl
push
incl
movsl
ljmp
inc
call
sub
cmp
jge
jl
dec
pop
xor
sti
mov
stc
add
cli
mov
ljmp
jae
pushf
int
inc
jmp
push
jge
pushl
icebp
dec
mov
in
sub
pushl
mov
and
test
jmp
pop
xchg
mov
call
pusha
dec
lock
jns
push
push
xchg
jne
ljmp
mov
inc
call
movsb
jp
iret
lock
inc
lcall
scas
sub
out
leave
add
lcall
jmp
cld
pop
mov
push
add
add
or
fdivrs
insb
xchg
movsb
decl
mov
mov
jno
nop
mov
push
pop
cmp
ficomps
mov
adc
pushl
jge
pop
loopne
enter
incl
jmp
ljmp
lea
xchg
int
incl
enter
inc
call
jae
mov
inc
add
mov
add
push
andb
pop
decl
stos
inc
decl
or
call
mov
aaa
fildl
mov
ret
call
pop
cmp
mov
icebp
xlat
into
cmp
out
dec
xchg
aas
pop
and
pop
gs
mov
cmp
add
add
add
repnz
incl
mov
add
add
add
jmp
mov
leave
in
pushl
shrb
and
ret
addb
push
insb
or
lcall
jmp
mov
je
ja
adc
and
icebp
loop
scas
sub
cld
push
jno
ja
cmpsb
call
lcall
hlt
fsubrl
jne
jmp
mov
and
mov
mov
mov
mov
ja
mov
push
sub
hlt
push
jl
jg
cmp
testb
mov
mov
push
ret
add
add
push
idivb
inc
call
aaa
sub
decl
clc
cmp
adc
pop
inc
call
mov
out
fmull
inc
decl
cwtl
sahf
sahf
pop
sbb
decl
pop
xchg
or
stos
lret
cmp
into
ljmp
ljmp
and
dec
and
mov
incl
lcall
fisubrs
shrb
ljmp
je
je
push
ret
push
call
sub
shr
or
decl
outsl
mov
sub
mov
jmp
mov
jmp
jnp
or
pop
ret
out
push
push
jmp
cli
sahf
mov
dec
enter
sub
dec
inc
pushl
decl
sbb
outsb
clc
call
sub
add
add
sbb
xchg
enter
jmp
push
sbb
mov
mov
pushl
push
pushl
jmp
sar
ljmp
add
xlat
adc
push
add
in
sbb
push
pushl
push
ret
add
sbb
mov
ljmp
mov
jle
cmp
jae
jno
pushf
pushf
dec
icebp
je
push
jmp
mov
add
fldt
mov
push
inc
push
sbb
sbb
lcall
sar
mov
dec
daa
incl
and
dec
lcall
inc
incl
inc
jns
fmuls
test
jge
or
mov
enter
ljmp
push
shl
call
cmp
lcall
cmp
mov
out
and
js
arpl
adc
stos
inc
dec
data16
ds
mov
cmpsb
decl
mov
mov
out
xchg
imul
sub
mov
fucomp
xchg
js
ljmp
iret
int
ljmp
ljmp
call
es
incl
xor
xlat
add
decl
sub
mov
jo
gs
lahf
test
inc
mov
hlt
aas
sub
add
dec
mov
sar
inc
jmp
mov
rclb
sbb
ret
lea
xchg
push
jmp
lds
clc
pop
push
pop
sub
and
out
sbb
in
adc
jnp
adc
loopne
xchg
dec
and
imul
sbb
cltd
decl
add
jmp
inc
lcall
out
jo
ss
incl
push
test
jmp
add
sub
push
lahf
mov
rcrb
jmp
push
push
mov
int
jmp
jnp
dec
enter
sbb
push
push
hlt
xor
incl
jmp
stc
imul
outsb
lock
rcr
push
lahf
dec
adc
decl
pop
sti
cmp
and
cmp
hlt
and
mov
or
lods
mov
mov
call
sar
xor
pushl
xchg
lcall
xor
cmp
and
mov
lret
jmp
and
loop
mov
mov
sahf
xchg
sbb
fchs
incl
add
add
xor
shl
jmp
mov
add
cmp
xlat
lea
iret
jno
stos
pcmpgtb
mov
dec
outsl
or
decw
sub
lcall
mov
mov
call
or
int3
adc
call
sub
jmp
add
push
or
pop
xchg
sbb
lcall
dec
push
mov
dec
sub
call
push
scas
fwait
add
add
mov
mov
adc
and
mov
push
shlb
aam
jmp
call
mov
cltd
mov
mov
loop
out
nop
lock
jg
ljmp
xchg
and
sahf
movsb
decl
mov
ljmp
push
add
add
add
add
call
push
ret
adc
add
mov
ljmp
sbb
rcrb
incw
call
and
popf
dec
add
filds
incl
pop
ja
call
outsl
or
mov
jmp
add
call
ljmp
insb
js
mov
loope
and
sahf
xchg
enter
pop
jle
inc
cmp
call
jmp
mov
das
dec
jne
outsb
je
ljmp
jno
lahf
sub
mov
sbb
push
inc
add
push
add
xchg
xchg
add
push
jmp
add
add
xchg
ret
xchg
lcall
pushf
daa
call
mov
add
repz
insb
fwait
adc
ret
pushl
dec
jbe
push
sbb
jl
lcall
jl
push
ret
push
pop
xor
pushl
and
jnp
push
out
pop
repnz
xor
lods
add
call
inc
jmp
pushl
or
ja
push
rcrb
js
inc
decl
lcall
adc
gs
cmp
lret
jmp
add
cmp
add
xchg
or
push
pop
vlddqu
cwtl
xchg
mov
mov
hlt
jmpw
call
push
inc
push
cmc
adc
repnz
xor
pushl
mov
lock
stc
repz
jp
ljmp
out
pop
mov
int
decl
cmp
jmp
lcall
jmp
jl
cmp
lcall
pushf
add
call
shll
dec
aas
in
out
cs
mov
inc
dec
mov
lcall
cmpl
push
ret
jb
decl
adc
adcb
add
dec
add
into
popf
cmp
stc
cld
cmp
cmp
popf
inc
lcall
std
pop
cmp
out
cmp
lcall
mov
lcall
test
mov
jmp
cmp
jmp
ljmp
incl
incl
mov
aas
lret
movsb
lcall
enter
xor
clc
dec
call
das
fsubl
jmp
ljmp
xor
xchg
js
pushf
xchg
cmpsb
flds
aam
lcall
lahf
int3
push
add
add
add
xor
lea
je
aam
ret
dec
jo
faddp
dec
dec
outsl
insb
dec
mov
add
cmp
ret
add
test
mov
call
das
repz
fnstsw
lahf
in
cmp
mov
lcall
lods
leave
dec
pop
test
nop
rorl
loopne
or
lcall
lea
xchg
je
mov
mov
xlat
fdivs
inc
jmp
push
das
xchg
cmpsl
jmp
aas
sub
sbb
mov
add
jmp
jmp
push
jmp
in
cmpsl
jmp
jg
mov
dec
cmp
jmp
add
dec
adc
add
xchg
push
shlb
loop
sub
jbe
pusha
incl
inc
lcall
fstpl
mov
jmp
sub
add
call
ljmp
loop
mov
mov
mov
mov
xchg
push
mov
jmp
push
add
aas
aaa
sub
ljmp
push
call
lea
add
add
sar
jne
mov
in
pop
aad
xchg
mov
and
mov
cmp
into
call
addr16
push
cmp
push
mov
or
dec
dec
inc
add
lea
add
mov
decb
stc
mov
jmp
adc
add
add
xor
jmp
fcmovnu
loope
fisttpl
ljmp
mov
lcall
mov
pushl
mov
call
decl
cltd
fisttpl
jmp
pushl
add
inc
lcall
decl
adc
shll
inc
call
fiaddl
call
mov
mov
out
scas
xchg
sbb
jp
and
xor
cmp
sbb
cmp
roll
inc
lcall
decl
jb
out
je
sbb
sub
jmp
jmp
jmp
add
xchg
roll
xchg
xor
test
jl
xor
sbb
lods
push
mov
jae
decl
fcomi
pushl
adc
out
das
or
push
push
ret
add
loop
mov
incl
call
clc
and
inc
call
mov
cmp
popa
decl
mov
cltd
inc
add
push
xlat
add
xor
call
repz
inc
incl
push
xchg
in
into
jo
mov
xor
mov
clc
jmp
imul
scas
push
pushl
xchg
hlt
fdecstp
pop
jo
push
sar
dec
lea
jmp
xor
cli
and
aam
sbb
incl
incl
lcall
jae
in
xlat
lahf
ss
dec
mov
add
ljmp
mull
xchg
into
out
push
aaa
inc
sti
pushl
mov
xchg
dec
ljmp
and
push
and
fndisi(8087
ljmp
call
call
adc
lret
sti
push
stc
rorl
push
cmp
mov
jns
jne
dec
mov
je
incl
xchg
inc
jmp
push
sar
lcall
mov
and
push
idivb
pusha
dec
ror
test
das
push
pop
dec
mov
dec
fcmovne
jmp
ret
imul
and
dec
add
ljmp
add
dec
mov
sar
insb
mov
outsb
sbb
cmp
roll
scas
test
jne
cmp
push
push
ret
add
add
int3
int
mov
sub
push
sbb
lods
out
imul
lcall
mov
cs
push
add
add
adc
adc
mov
adc
jle
incl
js
call
fwait
roll
pop
mov
add
push
ret
add
push
add
push
leave
dec
pop
pushl
push
push
out
xor
mov
mov
mov
xor
out
in
mov
call
out
add
xor
xor
add
add
xor
push
repz
jae
lcall
inc
lcall
pushl
js
adc
test
dec
stos
jp
jp
call
pop
lcall
mov
jmp
add
add
jp
pop
das
sar
incl
pop
dec
or
ljmp
test
inc
std
sbb
ljmp
cmp
ljmp
leave
inc
jmp
dec
dec
sbb
icebp
and
add
add
xchg
sar
cmp
inc
lcall
jmp
inc
push
add
incl
shl
pop
inc
decl
in
daa
call
or
jmp
shrl
push
decl
cmc
shrl
jg
sbb
stc
dec
repz
jmp
mov
adc
sub
aam
sahf
add
insl
xchg
mov
pop
mov
lcall
jno
push
push
ret
add
adc
je
cmp
jae
or
cmp
jmp
call
clc
add
cmp
decl
test
loope
call
lcall
cmp
cmpsb
call
pop
jmp
adc
add
add
test
mov
or
sub
decl
push
idivb
mov
in
pop
mov
sbb
scas
pop
add
add
mov
add
call
dec
fisubl
pushl
mov
mov
inc
jmp
lcall
mov
mov
jmp
push
js
loopne
call
mov
call
add
movsb
ljmp
shr
pushl
add
add
adc
pushl
lret
in
sbb
call
inc
call
ucomiss
incl
jg
add
cmp
jne
jmp
sub
xor
cmp
mov
jns
fidivl
cmpsb
xchg
cmp
or
or
ds
dec
dec
dec
inc
decl
adc
lea
sahf
cmp
call
push
jmp
push
push
add
add
mov
incl
setnp
ss
ljmp
decl
cmp
jp
sub
decl
fs
ds
pop
adc
and
iret
jnp
out
mov
popa
incl
aas
dec
push
jbe
rep
jmp
add
add
add
call
adc
test
xor
cs
inc
cmp
icebp
push
out
in
and
repz
mov
dec
testl
cmp
jle
jmp
jmp
js
xchg
add
call
testb
icebp
icebp
das
push
adc
cli
enter
test
sub
mov
inc
jg
pushl
call
fidivl
add
jmp
pushl
ja
insb
xor
movsl
dec
cmp
int
call
xchg
ljmp
cld
adc
faddl
jl
call
gs
faddl
xchg
adc
pushl
jnp
ret
jge
push
add
add
and
xchg
cwtl
and
or
aam
in
jbe
test
cmpsb
call
test
insb
cld
clc
inc
jmp
lods
ds
out
xor
test
fldt
sar
cmp
jmp
add
push
mov
jg,pn
cmpsl
incl
fcompl
jge
adc
adc
push
or
sub
lock
jns
mov
jmp
or
lcall
xor
cli
push
push
add
mov
jo
ljmp
pushl
and
imul
dec
rcll
pop
imul
filds
dec
sbb
ret
push
jmp
or
push
decl
enter
test
or
inc
ljmp
aas
ljmp
inc
fisubl
decl
cmp
cmp
inc
pushl
jl
adc
xchg
cmp
xchg
mov
jmp
jmp
inc
jmp
adc
pop
jmp
or
mov
push
xchg
push
sub
test
call
cmpsl
decl
xchg
mov
into
ja
jecxz
sbb
mov
xor
mov
test
and
jle
cwtl
push
outsl
cmp
pop
xchg
jge
mov
adc
aas
pop
mov
lret
pushl
sub
incl
jl
sar
lea
mov
push
cmp
mov
into
push
cmp
inc
call
and
cmp
jne
push
mov
add
add
sub
inc
pushl
js
call
mov
popa
jmp
add
aam
decl
scas
negb
cld
inc
call
inc
pushl
xchg
pop
inc
incl
sub
dec
xchg
lahf
imul
cmp
pop
insl
cmc
incl
jmp
sti
dec
or
stc
fnstsw
mov
add
or
lret
sub
adc
js
sar
xor
xor
aaa
push
and
push
decl
sub
int3
lods
outsb
repnz
mov
call
test
mov
inc
add
cmp
cmp
xchg
cmp
enter
ljmp
mov
jmp
add
outsb
adc
das
fldcw
in
jmpw
ljmp
jnp
hlt
fwait
and
aas
push
idiv
call
jmp
decl
sti
jmp
notl
out
or
decl
fldt
test
test
xchg
out
lcall
adc
add
add
add
add
js
decl
daa
cmp
inc
decl
jg
xchg
jge
call
sar
movntps
imul
dec
fstpl
cmpsl
ljmp
inc
fadds
push
movsb
lcall
cmp
mov
pushl
insl
xor
shl
push
adc
jnp
jae
out
sub
call
call
sar
daa
lcall
je
jmp
add
jmp
jns
jmp
pushl
mov
jmp
add
add
push
adc
push
jl
jl
mov
pop
cmp
adc
js
dec
lcall
cmpsb
inc
ljmp
ds
imul
jnp
jp
push
jmp
add
pop
pop
xor
jb
mov
movsb
call
adc
dec
xor
nop
xor
pusha
pushl
xor
adc
ret
insl
xor
sbb
popa
js
xor
jl
dec
jne
incl
sar
loopne
shll
loop
sbb
xchg
fs
std
pop
call
decl
fadd
decl
negb
sbb
incl
add
ljmp
dec
hlt
jl
inc
lcall
mov
jmp
add
add
add
ljmp
pop
or
decl
adc
dec
push
call
push
ret
add
hlt
popa
pushl
cmc
adc
lods
int3
mov
jmp
mov
pop
loop
adc
mov
js
incl
incl
cmc
xchg
ja
scas
jl
mov
fcoms
mov
mov
decl
jge
pushl
outsl
scas
rol
pushl
mov
xor
movsb
call
arpl
ret
call
fisttpll
fdivr
pushl
xlat
push
jbe
cmp
daa
lcall
mov
into
repnz
push
jo
add
cmp
add
leave
call
mov
incl
add
xchg
add
dec
inc
incl
mov
dec
cld
arpl
jo
in
inc
ljmp
xchg
lods
push
push
test
ds
nop
das
out
xchg
loopne
imul
ficoml
call
jmp
lret
mov
call
inc
call
incl
fiadds
incl
ljmp
aam
add
push
lea
add
ss
fidivrl
shr
ss
push
cmp
decl
outsb
popf
in
divl
cmp
inc
mov
ds
inc
lcall
mov
popa
jmp
cmp
or
lcall
rcl
jno
cmp
loopne
push
dec
pop
sahf
int
dec
cmp
adc
scas
lret
call
jmp
jmp
scas
dec
mov
and
in
in
es
mov
js
scas
cmp
sar
and
sahf
out
cmp
sub
aas
cmp
push
jge
sub
lret
mov
pushl
ds
decl
mov
push
ret
push
add
or
fadd
jg
pushf
enter
pusha
incl
add
push
aas
movsl
call
sbb
add
jmp
cmp
lea
add
xor
sub
mov
inc
jle
adc
fidivrl
lcall
sar
fistl
pushl
xlat
cmp
out
outsl
mov
call
adc
adc
icebp
out
ficoml
dec
xlat
or
sti
fmuls
sbb
xchg
dec
repz
push
mov
icebp
mov
incl
lcall
or
xor
movsl
jmp
mov
out
pop
xor
call
mov
mov
adc
out
jno
in
icebp
xchg
mov
cmp
call
ljmp
incb
call
mov
fsubs
incl
jo
call
mov
jmp
add
add
or
dec
cmp
sahf
icebp
call
add
adc
lods
lcall
fdivr
mov
xlat
jmp
mov
jmp
cmp
or
arpl
jge
sahf
jnp
pusha
jg
lcall
scas
adc
push
rep
jmp
adc
add
sti
rcll
cli
ret
jmp
call
movsb
pushl
and
shll
inc
cmp
push
pusha
inc
add
add
xchg
jnp
jnp
jmp
jmp
cmp
mov
stc
xchg
fstpl
cmp
iret
sbb
test
loop
add
add
sub
mov
fwait
cmp
decl
mov
mov
push
inc
incl
pushl
inc
jmp
push
add
dec
add
sub
dec
add
jmp
jns
pop
mov
decl
ljmp
inc
call
xchg
ds
cmp
jp
push
mov
mov
add
add
add
das
inc
dec
mov
ljmp
mov
xchg
mov
incl
jecxz
dec
stos
cwtl
out
test
sti
xor
dec
outsl
and
pop
pop
dec
mov
lcall
lcall
inc
jge
sub
lcall
jmp
jmp
mov
loope
leave
cmc
cltd
sahf
cwtl
sar
fdivrl
out
inc
call
repnz
xchg
pop
sbb
jnp
call
jmp
push
mov
cmp
push
ret
mov
imul
mov
fs
inc
lcall
cmp
jmp
call
dec
iret
sbb
rclb
add
jmp
mov
ficomps
sub
push
cli
add
add
add
cli
in
popf
or
pushl
and
cli
push
adc
fiadds
xor
jnp
or
push
xlat
jge
call
xor
leave
pop
ljmp
lcall
jnp
fsubr
mov
ljmp
cmpsl
ljmp
jge
sar
sbb
pushl
icebp
and
cmp
push
fldenv
loop
idivb
add
add
lea
add
inc
call
dec
dec
fwait
sti
movsb
incl
outsl
jb
or
decl
xchg
inc
add
add
mov
ljmp
hlt
xchg
decl
int
shr
test
pop
jmp
xor
pop
mov
xchg
cli
rcrb
adc
std
dec
loopne
add
or
inc
call
stos
fdivr
decl
xchg
jb
or
pushf
sbb
je
add
xchg
sar
incl
add
xchg
imul
sbb
loop
jmp
add
lea
adc
fstpl
xchg
mov
ljmp
and
xchg
ret
incl
decl
cmpsb
decl
jmp
push
push
ret
xor
decl
jle
call
popa
cli
fwait
test
dec
adc
sbb
add
jmp
lods
notl
adc
lcall
call
mov
mov
loope
xchg
in
sbb
aad
push
cs
sub
movsb
push
testb
in
push
idiv
incl
push
add
loopne
add
sbb
cmc
sub
cmp
dec
jle
lcall
push
push
ret
add
cmp
incl
sar
lcall
jge
add
incl
pushl
in
xchg
test
js
movsb
decl
pushl
scas
aaa
mov
ret
pushl
mov
lcall
sbb
out
into
push
fcoms
je
pop
stos
adc
mull
mov
add
jmp
add
mov
pusha
mov
push
ret
add
xlat
cmp
call
inc
ljmp
fcomps
and
dec
loope
push
add
dec
add
xchg
pop
xlat
xchg
sbb
call
add
add
cltd
pop
jp
in
mov
mov
cmp
ljmp
push
lods
jmp
mov
add
or
xor
cmp
dec
or
sbb
or
add
call
mov
sub
adc
dec
fstps
mov
cltd
sub
add
jmp
jecxz
hlt
cli
mov
cmp
add
push
ret
add
ds
xor
in
sar
jmp
lock
fdiv
xor
adc
mov
jmp
pushl
adc
xor
jmp
push
add
add
jb
call
mov
in
cmc
jno
mov
ljmp
pop
cmc
ja
dec
mov
sub
xor
mov
cltd
dec
adc
ret
decl
pop
movsb
decl
std
lcall
xchg
rorb
decl
inc
add
xor
call
push
in
decl
test
cld
call
ljmp
loopne
cmpsl
dec
inc
cmp
jmp
dec
dec
adc
jae
cli
mov
add
int3
ljmp
leave
ss
loop
sub
incl
ljmp
js
jmp
decl
inc
jmp
aad
cmp
jecxz
stc
pop
push
pusha
jmp
add
dec
mov
add
fsubl
lahf
cs
popf
xor
ja
imul
inc
decl
scas
test
jmp
sbb
mov
or
incl
std
xorps
call
add
mov
add
jl
ja
ljmp
fdivrs
decl
popf
in
ret
cs
incl
push
adc
incl
jge
inc
out
sub
mov
ljmp
mov
push
mov
mov
cmc
pop
clc
add
sub
dec
inc
ljmp
lods
xchg
mov
leave
xor
cmp
fdivl
xchg
lods
imul
insb
aam
incl
xor
cmp
add
mov
add
add
sbb
decl
in
decl
add
mov
inc
call
call
lret
icebp
sbb
aas
sub
call
std
loope
mov
ja
dec
stos
jb
inc
fnsave
fwait
ret
jmp
push
dec
push
add
add
add
cltd
jle
ds
cmp
jmp
incl
lcall
jae
push
add
jge
cmp
decl
ficomps
cmp
pushl
cmp
leave
jmp
pop
dec
sbb
rcl
inc
lcall
dec
in
dec
push
stos
xchg
add
decl
decl
xchg
jp
call
loop
pop
jmp
xchg
sub
imul
jmp
lcall
push
adc
push
push
push
out
jle
jbe
push
jmp
mov
in
mov
decl
jge
jmp
mov
pushl
ds
jmp
jmp
jmp
call
incl
dec
loope
pop
mov
loopne
and
jge
inc
jmp
xchg
jge
lea
mov
aas
pop
xor
push
popa
call
in
seta
decl
jbe
fistpll
repz
ljmp
js
popa
ljmp
pushl
sahf
xchg
pop
lahf
fwait
mov
js
mov
pop
test
ret
call
push
jl
cmp
xchg
shl
jmp
inc
ljmp
into
sbb
adc
mov
je
sbb
movsb
push
ret
addb
add
fs
ds
pop
cmp
incl
mov
dec
imul
sar
stos
mov
aad
inc
ds
test
out
pop
int
pop
xor
pop
add
call
roll
pushl
mov
jmp
add
add
jle
jbe
jmp
cltd
mov
xor
xor
fnstsw
das
leave
xor
push
push
push
sbb
rorb
push
mov
pop
mov
fidivrs
inc
call
sub
daa
incl
hlt
ljmp
and
xor
inc
lcall
movsb
jmp
jae,pn
xor
sar
incl
hlt
shll
jns
cmp
mov
incl
inc
incl
iret
mov
push
xor
add
add
adc
scas
fwait
and
pop
pop
cmp
mov
std
sub
add
std
pop
fisubrs
test
pop
jmp
pushl
and
cmp
fistl
ljmp
arpl
xor
cmp
sbb
call
lock
xlat
push
add
aaa
mov
push
call
lcall
cmc
mov
outsb
and
cmp
frstor
pop
nop
push
out
ss
inc
call
jo
incl
push
in
iret
sbb
repnz
pushl
jle
inc
pushl
jmp
pop
push
rcrb
test
push
ret
add
add
xchg
xlat
cmp
or
push
ret
add
lcall
cmp
pop
in
cld
cld
testb
adc
sbb
mov
jmp
cld
out
aad
insl
in
pop
cmp
in
repz
and
sbb
repz
push
add
push
add
stos
cs
sar
imul
incl
add
loopne
mov
outsl
arpl
add
mov
add
add
leave
enter
insl
push
pushf
test
sti
rolb
xor
sub
jmp
add
das
pop
mov
xchg
dec
mov
movsb
lcall
iret
int
hlt
in
adc
xchg
inc
decl
std
push
adc
and
pop
sub
movsl
jmp
ljmp
dec
inc
incl
je
fimull
jge
lock
jmp
arpl
ds
dec
jg
in
mov
das
mov
jmp
pushl
shr
sahf
add
add
add
xchg
popf
fcomi
enter
or
es
sti
mov
pushl
pop
push
xor
inc
cld
or
mov
mov
dec
call
dec
jle
lcall
cli
in
hlt
lods
mov
aas
cli
sbb
and
add
add
push
xlat
cmp
mov
jp
decl
leave
push
mov
iret
push
xor
fimuls
out
stc
mov
aaa
leave
mov
enter
cmp
lock
inc
fimull
inc
dec
shrl
pop
pushf
ds
dec
mov
add
jp
and
jle
cwtl
dec
js
pop
push
data16
fistpl
movsb
call
dec
adc
push
mov
pushl
xchg
xchg
in
jne
pop
sbb
cmp
cs
inc
lcall
sbb
incl
add
inc
ljmp
decl
jg
inc
lcall
sahf
inc
ljmp
push
pop
cltd
outsl
pushf
inc
pushl
call
mov
add
add
add
xchg
cmp
mov
decl
sbb
mov
decl
incl
add
add
fldcw
cmp
imul
jmp
jmp
jp
lcall
outsl
jle
ja
jb
call
leave
lret
adc
lcall
stos
jmp
add
push
push
mov
lcall
ds
cmpsb
call
cltd
cmp
lods
adc
pop
pop
inc
call
lock
ds
push
leave
cmc
decl
push
inc
add
adc
xlat
sbb
test
test
add
cmp
jle
nop
sub
push
aas
push
add
jmp
cmp
mov
call
into
repnz
dec
pop
add
call
xchg
mov
mov
or
data16
jmp
imulb
loop
in
pop
testb
js
decl
ljmp
in
scas
lods
and
xor
push
push
fistpl
push
aaa
adc
stos
xchg
pop
xor
sahf
or
mov
lcall
mov
enter
lahf
loop
and
inc
ljmp
inc
call
mov
mov
push
push
jmp
add
jmp
cld
insl
shr
test
pop
test
fwait
decl
loope
popa
incl
mov
popa
push
ret
xchg
xor
jmp
enter
popa
inc
add
add
aam
incl
pushl
jecxz
jle
ret
pop
xor
pop
decl
std
push
jne
jmp
add
jg
sbb
jmp
pushl
das
lock
push
adc
cmp
mov
xchg
pop
dec
jo
or
xchg
in
and
mov
call
jns,pn
sti
or
pushl
fstpt
lcall
jmp
sbb
fsubl
or
dec
and
push
insl
icebp
fsubs
push
decl
push
ret
add
push
jmp
add
push
mov
dec
jmp
dec
lret
push
cmp
loope
and
mov
in
push
jp
mov
jbe
and
xchg
mov
cli
fldenv
notb
mov
lcall
scas
mov
xchg
ret
push
adc
int3
mov
cmp
incl
hlt
xchg
fildl
ljmp
add
call
sbb
ljmp
jo
inc
lcall
cmpsl
dec
jbe
adc
in
inc
call
adc
pop
sbb
push
or
inc
incl
dec
jns
lods
sbb
dec
outsb
mov
mov
jae
lcall
pop
aam
jl
xchg
nop
jg
sar
cmpsb
inc
lcall
outsb
scas
incl
pushl
inc
pushl
xchg
xor
lcall
inc
call
call
sahf
mov
ret
cmp
push
nop
fdivs
pop
inc
push
and
mov
cmp
decl
in
mov
cmpsl
decl
or
push
incl
adc
or
decl
mov
test
sbb
add
outsl
inc
add
mov
or
push
push
adc
add
add
jl
jp
insb
push
push
jmp
add
add
mov
stos
push
ret
adc
mov
mov
mov
dec
pop
xchg
sbb
inc
incl
mov
ljmp
mov
pushl
pushl
mov
mov
sarb
jmp
mov
mov
stos
popa
mov
cmp
mov
out
in
out
pusha
jnp
sbb
cmpsl
mov
dec
lret
dec
fstps
push
ljmp
push
mov
test
ljmp
and
mov
incl
jne
movsl
ljmp
jmp
jmp
jmp
push
push
push
pushl
push
jne
imul
mov
ljmp
cmp
call
dec
ds
incl
xchg
fwait
cmc
addr16
lcall
xlat
call
lcall
mov
xchg
arpl
shll
xchg
inc
lcall
movsb
aas
sar
pop
jmp
add
add
or
and
repnz
call
mov
stos
cli
nop
leave
scas
push
push
jmp
add
add
cmp
cmp
jmp
push
xor
decl
cmp
repz
fs
ret
sbbb
call
mov
loop
jl
pop
push
add
sbb
incl
xorb
int
jmp
cmp
push
jmp
add
add
sar
incl
mov
dec
lret
or
cmp
cld
leave
cmp
sub
sub
pushl
in
sbb
repnz
dec
movsb
ljmp
mov
test
lcall
xor
mov
inc
lcall
pop
jmp
push
dec
jmp
mov
jnp
decl
xchg
add
cmp
sub
pushl
call
mov
call
cmc
xchg
pop
fcmovbe
pushf
sbb
out
test
pop
sub
js
mov
jmp
jmp
decl
adc
dec
stos
push
sub
mov
jmp
out
push
add
ljmp
xchg
pop
sbb
stc
int
lcall
cmp
push
add
fsts
xchg
mov
add
xor
or
mov
incl
incl
mov
add
dec
jecxz
test
sarb
notl
popa
lcall
pushl
xor
mov
stos
jl
jl
dec
or
cli
mov
xlat
adc
sarl
call
fnstenv
pushl
or
sti
in
fs
fstl
ljmp
incl
jmp
or
add
dec
push
outsl
enter
dec
adc
popa
jnp
add
incl
js
cmp
decl
jno
sub
repz
std
push
out
fcmovnb
decl
decl
imul
pop
lahf
push
ret
ljmp
cmp
movsb
lcall
cmp
mov
jmp
xor
add
pushl
repnz
cmp
jmp
and
pop
imul
mov
mov
lcall
mov
loope
xor
mov
and
jmp
call
cmc
xchg
loope
pop
cvtps2pd
mov
sahf
mov
outsl
push
outsl
fnstenv
xchg
test
sbb
adc
dec
in
fidivl
iret
out
xchg
push
fdivs
ljmp
and
xchg
sbb
lcall
cmp
xchg
ret
pushl
pop
inc
call
pushl
pushl
xchg
rorl
fwait
loope
fstpl
aam
pushl
incl
jmp
dec
mov
or
mov
lock
xchg
pop
decl
test
push
in
pushl
loope
mov
in
dec
pop
cmp
add
ljmp
call
add
ljmp
icebp
cs
je
repnz
add
push
ret
or
call
pop
sar
sti
daa
jmp
jmp
loope
cmp
and
fnstcw
or
das
xchg
repnz
inc
decl
dec
jb
jno
dec
enter
xchg
fstps
cltd
into
cld
mov
cltd
es
cmp
push
inc
add
add
add
add
pop
jmp
call
gs
pushl
call
pop
push
js
adc
cmp
add
pushl
dec
pop
int
testl
call
or
lret
aas
jne
jmp
pushl
repz
icebp
cmpsl
ljmp
jmp
jmp
cmpb
notb
je
cmp
xor
jmp
adc
sar
idivl
call
pop
pop
sbb
hlt
sbb
inc
dec
pop
inc
jmp
jmp
add
add
push
add
inc
incl
fwait
xchg
push
stos
into
push
call
pushl
inc
cmp
js
fdivrs
jmp
jmp
push
add
cmp
movsl
call
ja
jle
pusha
out
nop
in
cmc
vxorps
ljmp
jmp
add
jmp
cmp
psubusw
call
add
add
fwait
inc
add
mov
ljmp
add
roll
add
sti
popa
lcall
or
lods
mov
ljmp
insl
out
pop
ljmp
pmulhw
je
xchg
scas
outsl
lahf
pop
pushl
cmc
cmp
test
fcoml
cmp
sbb
clc
sbb
jp
into
mov
cmp
xor
jns
mov
pushf
adc
jnp
outsb
add
or
sbb
and
sar
pop
fisubrl
cwtl
dec
scas
xchg
cmp
push
callw
in
test
insb
ror
rcrb
test
ret
dec
push
push
push
ret
add
cmp
or
dec
lret
cli
cmp
mov
js
cltd
cmc
mov
aam
addr16
fdivrl
cmpb
add
inc
call
cld
sub
loopne
cmp
movsl
ljmp
jmp
add
push
mov
add
rclb
fidivrl
call
stc
xor
push
gs
mov
push
push
push
mov
loop
pop
xchg
testb
inc
pushl
or
xor
adc
jmp
add
lods
xchg
push
mov
inc
out
mov
jne
outsb
adc
call
inc
lcall
mov
lods
pop
daa
decl
dec
jno
mov
fnsave
adc
push
ret
add
add
cs
jl
decl
dec
lahf
inc
pushl
out
lret
cmc
in
pop
mov
movsl
jmp
lcall
pushl
jae
stos
lock
xlat
mov
ljmp
lahf
jbe
sbb
fsubrl
inc
incl
imul
mov
movsl
incl
add
incl
aad
or
push
stc
jb
pop
cmp
or
lcall
call
repnz
mov
cmp
mov
adc
sahf
jle
and
pop
stc
call
call
cli
imul
cltd
jnp
pop
push
filds
push
or
jmp
pushl
call
call
lcall
lahf
lret
mov
out
ficoms
jmp
lea
ljmp
xchg
sbb
lcall
sub
lcall
out
push
adc
daa
dec
jmp
dec
aam
shll
pushl
arpl
dec
push
jmp
rorb
xchg
in
decl
add
xchg
adc
mov
push
or
leave
cli
inc
incl
outsb
mov
icebp
mov
incl
scas
aad
mov
stos
jmp
add
jle
scas
cmp
xchg
xor
mov
xlat
cwtl
and
cmp
call
ljmp
call
and
jp
inc
ljmp
call
xor
jmp
lcall
mov
jmp
add
dec
add
ljmp
repz
inc
ljmp
fisubrs
sub
inc
ljmp
flds
mov
call
call
call
loope
pop
inc
call
lock
ljmp
mov
jmp
addr16
jnp
mov
call
mov
mov
jmp
mov
push
xor
fidivrl
pushf
incl
sti
push
shll
push
dec
xor
and
xor
pop
mov
adc
ljmp
fildl
jmp
pushl
inc
dec
std
fcomps
ljmp
cmp
lcall
stos
icebp
dec
pop
pop
xchg
fstps
call
jmp
or
fmull
inc
fstl
lcall
push
jecxz
jnp
xor
jne
jmp
jmp
pop
addr16
inc
call
cmp
mov
mov
add
jmp
mov
sbb
fpatan
add
dec
sar
mov
outsl
fldcw
in
and
add
jg
incl
lea
jmp
jmp
add
add
push
fs
test
sahf
add
ljmp
test
lods
and
fsubp
call
aaa
stos
pop
loope
add
mov
cmp
xor
adc
mov
and
push
insl
xchg
jge
ljmp
dec
push
ljmp
dec
out
cmp
pushl
cmp
lcall
jg
cwtl
aad
decl
movsl
jmp
inc
ljmp
push
incl
mov
add
lea
xchg
pushl
pushl
and
sbb
pop
aas
fisubrs
popf
add
xlat
lods
out
jg
incl
incl
aas
decl
push
ret
lea
push
pop
jmp
movsb
ffree
jmp
imul
or
add
push
mov
dec
xor
call
inc
mov
ret
adc
xchg
dec
incl
ds
das
cmp
imul
sahf
cmpsb
decl
and
arpl
incl
push
lea
xchg
lods
fnstsw
lcall
or
lret
fsts
ljmp
jle
inc
dec
ds
lcall
decl
inc
pushl
mov
jp
fucomp
gs
ljmp
and
lcall
and
ret
inc
ljmp
mov
sub
incl
dec
mov
loopne
mov
sub
jmp
mov
lcall
adc
mov
pop
ret
decl
push
mov
sub
lret
pop
incl
decl
jmp
sti
jle
xor
incl
xor
nop
in
insl
mov
fcoml
incl
dec
test
or
xor
stos
mov
pop
jns
int3
cmp
mov
call
js
decl
sar
stc
mov
cmp
adc
js
add
call
dec
inc
lcall
xchg
push
pushl
sti
imul
sub
inc
decl
xchg
xchg
xchg
mov
jmp
decl
mov
ljmp
decl
ljmp
in
mov
inc
jmp
cmp
in
add
jmp
ljmp
es
ds
dec
or
mov
or
clc
out
pushf
aas
mov
jmp
dec
mov
ds
cli
jl
sbb
or
push
test
push
push
add
push
ret
lea
add
cli
int3
pusha
dec
stos
iret
aad
mull
dec
in
mov
rcr
pcmpgtb
add
jmp
sbb
cmp
inc
jmp
and
xor
add
xor
iret
divl
ljmp
cld
jnp
call
jl
icebp
or
nop
fld
jmp
jmp
lcall
aad
stc
shl
jmp
pushl
xor
notl
adc
aas
or
ret
call
xchg
add
incl
xor
add
cmp
dec
add
lahf
movsl
pushl
repz
cmc
mov
call
ja
scas
hlt
mov
or
aas
stos
and
aaa
pop
cltd
or
iret
sbb
fbstp
jbe
push
scas
sbb
testl
sub
decl
decl
outsb
xchg
add
call
pushl
call
enter
iret
cmp
fstpl
pop
fisttpll
test
xlat
mov
push
icebp
ja
call
incl
mov
pushl
outsb
or
ljmp
into
xchg
scas
daa
pushl
pushl
cmp
cmp
addr16
mov
fstpl
pushl
push
and
mov
cmp
out
popf
mov
inc
incl
incl
cmp
jp
dec
mov
clc
mov
pop
hlt
add
pop
cmp
outsl
push
xchg
mov
outsl
inc
lcall
add
pushl
ret
cmp
enter
out
arpl
push
rclb
jg
incl
add
add
xchg
out
inc
decl
fidivrs
cld
add
jmp
jmp
lea
call
lods
in
push
nop
or
loope
inc
stc
xor
lock
lcall
jg
call
lcall
cmp
adc
lcall
int3
xchg
mov
jno
pop
mov
mov
pushl
inc
add
adc
xchg
iret
sbb
sub
jns
int3
pop
arpl
sub
decl
inc
lcall
jmp
xchg
pop
sahf
insb
mov
mov
dec
push
jmp
stos
jmp
jmp
ljmp
je
call
mov
inc
add
add
add
ljmp
incl
sarb
ljmp
xlat
outsb
xchg
aam
lcall
jmp
inc
incl
jne
jmp
add
add
jge
ljmp
xor
cmp
stc
cmp
or
decl
xchg
pop
jmp
sub
pushl
mov
jmp
add
add
pop
cmp
add
pushl
call
xchg
icebp
enter
push
xor
decl
ds
imul
incl
sbb
ljmp
pop
int
mov
push
mov
inc
decl
push
sar
pop
pop
mov
jmp
lea
lret
mov
gs
je
in
inc
ljmp
lcall
popf
jmp
xchg
push
jmp
call
jge
and
adc
lcall
lcall
jl
add
sbb
pop
mov
jmp
xchg
pushf
add
inc
dec
push
call
push
ret
push
or
call
push
lcall
movsl
lcall
or
pushl
incl
pushl
pop
decl
sub
iret
fistps
push
mov
pop
jmp
cmp
aad
pop
jmp
add
add
addb
roll
mov
jmp
push
xchg
lret
scas
push
fisubrs
lcall
mov
inc
pushl
jmp
lret
jmp
loope
fdivs
mov
sub
adc
pushl
in
mov
xor
jmp
add
sub
nop
rclb
incl
adc
cmp
call
incl
mov
ds
inc
add
dec
xlat
add
add
pushf
jnp
lcall
insl
xchg
in
repz
lcall
pop
insb
imul
cmp
enter
pop
cmpsb
mov
call
xor
add
decl
scas
test
push
adc
out
push
jmp
lcall
loopne
jnp
dec
dec
xchg
call
hlt
mov
pushl
mov
js
decl
je
mov
cmp
or
call
inc
incl
sbb
das
add
add
add
push
das
fisttpl
or
iret
xchg
divb
sar
sbb
daa
ljmp
outsl
inc
pushl
insb
clc
mov
xor
and
stc
cmc
cmpsb
pushl
jle
js
sahf
cmp
or
aam
int3
sar
dec
jbe
push
ds
fdiv
xor
lcall
cs
out
mov
pushl
flds
out
and
lahf
decl
in
jo
packuswb
int
js
pop
push
fs
xlat
lahf
fildll
ljmp
fdiv
sub
cmp
lods
mov
fadd
pushl
cwtl
cmp
test
inc
decl
jmp
cli
pop
decl
lcall
cli
add
mov
lcallw
pop
push
push
inc
add
jmp
xor
jmp
xchg
pop
cmp
or
dec
jns
test
inc
inc
call
sbb
or
xor
push
adc
rcll
mov
jae
lock
jne
xor
aad
xchg
lret
jg
gs
cld
jbe
scas
or
push
ja
jmp
push
mov
sbb
fildll
push
cmp
cwtl
test
xchg
mov
cmp
add
decl
test
cmpsl
jmp
cmp
lods
or
pusha
cmp
dec
jmp
dec
push
adc
add
xchg
xor
dec
push
call
add
lcall
dec
adc
xor
add
lcall
popf
cmpsb
pushl
daa
jmp
movsb
decl
out
mov
inc
lcall
mov
jmp
add
push
add
out
loope
cmp
xchg
xor
xchg
adc
in
movsl
ljmp
xchg
ss
xor
lcall
int
nop
jg
test
jl
pop
clc
jb
jle
xchg
inc
jmp
call
push
inc
add
add
add
test
addr16
fisttpll
mov
in
cmp
pushl
std
xchg
xor
decl
pop
loopne
aam
mov
test
jmp
mov
add
jmp
call
movsb
cmp
fdivs
decl
call
cmp
inc
pushl
stos
jbe
incl
call
sub
pushl
cwtl
dec
mov
aas
mov
mov
inc
push
or
fbstp
sahf
xlat
cltd
inc
pushl
adc
push
add
decl
test
and
add
push
add
add
pushf
sub
mov
mov
jmp
aas
pop
pop
dec
out
xchg
mov
push
jmp
dec
add
add
ljmp
call
mov
incl
pushl
outsl
pop
roll
dec
xor
jns
pop
jmp
add
add
add
std
mov
add
pushl
call
fmulp
enter
dec
flds
pushl
cltd
movsl
call
jl
out
div
outsl
push
fwait
lods
pop
or
inc
mov
sti
xlat
xor
add
call
inc
lcall
fwait
ret
jo
cmp
jge
mov
lcall
and
popa
call
mov
cwtl
cs
sub
jmp
or
ljmp
add
lcall
inc
push
ret
add
dec
int
cmpsl
mov
xor
dec
in
mov
jmp
ljmp
incl
cmp
jge
xchg
mov
fistpl
dec
stc
or
fdivrs
decl
pop
fcmovu
test
insb
mov
cs
and
ficomps
mov
ljmp
dec
xchg
mov
mov
sub
dec
jnp
repnz
aas
fwait
lods
mov
sub
xor
ljmp
ds
incw
mov
jle
push
dec
icebp
pop
idivb
xor
push
imul
push
push
nop
add
add
push
add
dec
xor
inc
lcall
sbb
aaa
sub
lcall
leave
sub
ljmp
xchg
xchg
jns
mov
call
lahf
lret
add
add
add
fsubr
lods
ljmp
and
aad
out
dec
in
push
add
call
shlb
mov
pop
dec
lret
push
inc
ljmp
out
jmp
rdseed
jle
dec
mov
mov
and
decl
incl
mov
dec
lods
in
test
ljmp
mov
mov
popa
call
call
jmp
aam
mov
sub
dec
jno
mov
fdivl
xor
cmp
dec
cmp
jmp
jle
std
sar
or
lcall
fstp
rorl
fmull
adc
xor
inc
pushl
scas
adc
sub
ja
ljmp
roll
inc
lcall
in
lret
sahf
mov
sbb
fcompl
lcall
mov
jbe
je
pop
cmp
pushl
mov
ficompl
jno
ljmp
popa
incl
lret
pop
xchg
popf
sbb
jmp
scas
xor
jmp
mov
jmp
mov
insb
sbb
incl
incl
mov
jb
jge
inc
add
or
pushl
icebp
ds
ljmp
jp
decl
pushl
lcall
cmp
cmp
sub
jmp
add
add
inc
decl
push
out
xchg
int
mov
mov
add
add
loop
mov
pop
pushl
inc
ljmp
test
ljmp
rclb
inc
push
push
cmp
decl
cmpsl
jmp
jge
jl
ljmp
movsb
cmp
decl
xor
cmp
sub
adc
imul
loopne
loope
loopne
fwait
jp
stos
cmpsl
jmp
sti
cmpsb
jmp
pop
pop
mov
lcall
dec
cld
add
ljmp
lcall
mov
cmc
test
and
fistpll
push
sar
add
decl
movsl
pushl
out
push
or
pushl
pushl
call
aaa
stos
inc
sti
ja
incl
pushl
sub
or
data16
fnstcw
jmp
jmp
call
lods
test
call
lods
test
cmp
dec
sub
shlb
push
pop
call
push
push
push
ret
adc
cmp
mov
enter
xor
push
jmp
adc
ljmp
and
jl
jmp
loop
sub
add
cld
sbb
pushl
mov
test
or
lcall
pop
jno
push
ret
xor
add
lcall
test
jp
pop
inc
jl
mov
mov
pushl
or
push
mov
push
ret
add
sub
repz
xchg
int3
lock
call
jmp
in
lcall
mov
push
ret
adc
mov
arpl
faddp
decl
jl
icebp
adc
xchg
adc
ss
mov
pushf
dec
cmp
decl
scas
std
and
decl
daa
jmp
decl
mov
inc
call
notl
jmp
pushl
jecxz
cmp
decl
call
sbb
sarl
lock
imul
push
xor
push
jmp
add
add
add
ljmp
jl
test
xchg
ljmp
cld
nop
cltd
jne
cltd
call
iret
incl
add
add
add
xchg
sbb
decl
cmp
jb
jbe
jmp
mov
dec
mov
pop
sub
sub
call
jmp
push
add
xchg
sar
and
test
dec
mov
clc
mov
outsl
aas
stc
stc
or
jmp
jmp
mov
jo
jae
inc
push
or
push
mov
loop
aas
xchg
add
decl
dec
ljmp
incl
call
in
pop
sbb
mov
jp
arpl
jge
stos
cmpsb
ljmp
jb
ja
adc
mov
sub
ret
inc
jmp
incl
pop
pop
mov
in
add
lea
icebp
add
jmp
ljmp
cmp
call
das
sbb
scas
out
ret
incl
sbb
dec
cmp
fucom
pushl
add
mov
loopne
cmpsb
out
xor
lcall
sub
xor
decl
add
jmp
add
add
add
call
popa
jmp
add
add
add
out
movsb
incl
xchg
mov
decl
inc
decl
xlat
test
sub
cmp
adc
and
into
cmp
aas
sahf
div
roll
shl
add
decl
arpl
xchg
jle
pushl
in
insb
cmc
fbld
cs
xor
push
ret
addb
add
sar
cld
jbe
mov
inc
push
loopne
mov
lahf
and
movsb
pushl
mov
mov
stos
aam
and
xor
ljmp
iret
cmp
sahf
pusha
call
push
es
std
call
pop
out
pop
out
out
sub
jo
sbb
inc
ljmp
test
mov
stc
test
aad
xlat
xchg
pop
incl
pushl
aad
lcall
lcall
mov
sar
popa
call
adc
jb
jmp
sbb
decl
dec
mov
inc
push
ret
add
mov
mov
scas
or
decl
xchg
dec
mov
int
scas
scas
push
loopne
mov
sti
push
mov
aaa
push
adc
jnp
in
xchg
add
call
pushl
sub
fisttpl
hlt
xor
pushl
mov
outsl
call
in
cmp
test
fwait
pop
add
call
shlb
insb
sbb
mov
and
sar
call
add
push
xor
lods
adc
pop
outsb
sti
sbb
jmp
lcall
aad
cmp
xchg
add
call
mov
decl
jl
sahf
dec
jmp
sar
inc
jmp
in
pop
inc
call
push
ds
ljmp
cltd
in
pop
aaa
hlt
fdivrl
daa
mov
jnp
data16
out
sub
or
mov
dec
xor
ljmp
jmp
add
cmp
inc
incl
push
add
jmp
add
xor
decl
pop
jns
mov
aas
or
scas
std
sbb
sub
jmp
loopne
xchg
xchg
imul
push
das
dec
fistps
incw
lret
mov
incl
xchg
loope
stos
notl
rclb
sub
sub
push
ret
add
add
mov
inc
fldcw
cmpsl
pushl
insl
shlb
jmp
add
call
sub
inc
incl
push
xchg
jmp
stc
adc
cmp
push
pushl
nop
jns
xchg
div
mov
div
nop
add
incl
shr
fldenv
lods
xchg
mov
imul
cmp
add
jmp
add
lea
jmp
lcall
add
push
ret
jmp
cmc
outsl
adc
push
jmp
mov
repnz
das
call
ljmp
imul
inc
lcall
decl
push
ret
add
dec
adc
jns
jo
jge
in
mov
jmp
decl
jmp
lods
sti
fistpll
cmp
mov
jmp
push
add
and
mov
outsl
push
jg
incl
inc
fildl
xchg
pop
mov
nop
iret
ss
mov
cltd
fisubs
sub
dec
das
test
xchg
shlb
jmp
pushl
or
incl
push
add
push
ret
dec
negb
decl
dec
pop
push
inc
ljmp
mov
dec
cmpsb
incl
popa
inc
lcall
inc
call
lcall
sub
and
and
call
push
scas
decl
mov
incl
xchg
add
cmp
pop
incl
call
jmp
add
add
cmp
shlb
mov
loope
push
loop
imul
inc
jp
test
sub
adc
loop
adc
icebp
stos
jmp
add
xchg
pusha
cmp
xchg
push
pop
xchg
xor
loope
pop
push
add
jmp
lcall
jl
outsb
sub
lcall
jmp
lcall
fcmovnbe
pushl
in
hlt
push
movzwl
push
ret
add
mov
mov
lcall
fisubrl
pushl
lcall
cmp
lcall
and
test
sub
ljmp
pop
jecxz
push
cmp
cmp
dec
lcall
cmp
pop
incl
dec
mov
jmp
dec
add
insl
cld
fsubrl
push
je
decl
mov
xor
sbb
stos
add
add
push
add
add
lods
mov
push
cmp
and
pop
cmp
pop
inc
mov
enter
jmp
call
add
incl
clc
push
ja
incl
dec
push
dec
inc
jmp
add
ret
enter
inc
std
add
incl
decl
inc
inc
decl
arpl
mov
mov
hlt
scas
lret
in
cmp
or
inc
incl
je
repnz
pushl
cmp
loopne
push
or
incl
jmp
pushl
adc
mov
mov
inc
jmp
sbb
popf
push
inc
add
mov
dec
xor
cmp
cmc
lret
mov
pushf
xchg
mov
incl
and
push
out
mov
jo
jmp
call
dec
aaa
out
add
pushl
int
inc
cmp
aas
pushf
mov
call
push
ret
mov
add
cmp
push
sub
inc
decl
cmc
into
lock
decl
arpl
fldcw
sub
adc
add
pop
push
pushl
call
test
call
out
cmp
or
push
cmp
xor
mov
xor
mov
sahf
mov
loop
ret
push
mov
jmp
mov
add
push
dec
out
lock
decl
jmp
ljmp
cmp
movsb
in
call
cmp
insb
popf
mov
decl
aad
or
sbb
stos
incl
add
add
cmp
push
int3
cwtl
mov
repz
call
leave
sti
insb
xchg
and
jg
mov
sub
sbb
iret
push
xlat
sub
sbb
call
adc
xchg
out
nop
cmp
xor
cld
lahf
cmc
hlt
jmp
add
jmp
jnp
aaa
call
xlat
jae
mov
imul
mov
ljmp
jmp
add
add
insb
sbb
or
mov
lcall
pop
inc
fimuls
movsl
decl
pop
sar
aaa
pushl
nop
sub
push
jge
xlat
loope
jo
adc
scas
jecxz
arpl
ud0
in
sbb
in
popf
push
cwtl
fmull
push
incl
lcall
out
jne
sbb
decl
pusha
ljmp
ds
xchg
fsubrs
inc
decl
scas
sbb
daa
jmp
xchg
and
ss
mov
repz
lcall
fdiv
mov
call
imul
pop
fidivl
in
std
imul
and
pop
int3
popa
ljmp
call
jmp
dec
inc
call
cmp
mov
mov
incl
xchg
call
call
pop
call
aad
jmp
lret
cmp
inc
call
ss
in
out
test
call
mov
push
arpl
add
call
mov
dec
xchg
adc
cwtl
jo
rol
jmp
push
ljmp
je
add
ret
incl
mov
popf
incl
add
add
rcrb
rorl
hlt
mov
adc
ljmp
and
and
add
insl
loop
and
sti
out
dec
cmp
jmp
repnz
call
or
lcall
test
push
pushl
xor
call
lcall
dec
xchg
push
sti
test
mov
ljmp
push
iret
sub
lcall
out
pop
cmp
call
and
jl
incl
xlat
test
inc
push
ret
orb
add
xchg
pop
and
es
jle
jp
or
outsl
enter
cmp
fiadds
jmp
ljmp
ss
jns
out
mov
decl
jb
scas
pushl
jmp
dec
fdivrs
dec
mov
pushl
adc
mov
xchg
xchg
mov
repnz
mov
lret
sbb
mov
ljmp
arpl
dec
sbb
mov
movsl
incl
xor
adc
cmp
inc
call
push
cmpsb
jmp
jmp
call
sub
mov
push
ret
add
add
incl
decl
incl
pop
sbb
cld
sub
dec
xor
jge
nop
fwait
inc
incl
adc
pushl
push
dec
in
mov
lcall
pop
pop
lock
push
sar
sub
in
add
cltd
ficoml
mov
incl
out
fwait
pusha
call
clc
push
lcall
movsb
incl
lcall
jae
jp
inc
jmp
fistps
decl
jle,pt
call
xor
inc
call
leave
leave
scas
call
lcall
dec
repnz
pushl
mov
sbb
or
jmp
clc
in
dec
das
cmp
push
int
incl
mov
jmp
jmp
push
shr
jmp
add
fstpt
mov
popa
add
dec
add
push
int3
add
lcall
call
leave
adc
out
jo
sahf
xor
dec
out
cwtl
jmp
out
iret
sbb
dec
add
sarb
mov
xchg
incl
mov
addb
inc
decl
div
imul
sti
arpl
xchg
push
pop
or
xchg
cmc
xchg
icebp
mov
mov
sbb
inc
lcall
lock
sub
dec
pushl
call
xor
lods
test
cmp
mov
dec
cmp
ljmp
or
mov
adc
lcall
inc
jmp
and
decl
decl
xchg
incl
addb
pop
loopne
and
push
and
dec
sub
icebp
int
incl
push
orb
sub
lods
xchg
adc
ljmp
sub
aas
push
incl
add
ljmp
mov
test
fsubr
inc
call
push
mov
adc
call
push
cmpsb
pushl
jmp
fxch
jne
pushl
mov
adc
lcall
arpl
ss
pusha
dec
jmp
inc
jmp
pushl
inc
inc
push
outsb
sub
aad
stc
or
test
rcrl
cmp
punpckldq
push
jmp
xchg
sub
call
push
lods
cmp
sub
pushl
dec
cmp
ljmp
adc
pushl
sub
jl
adc
incl
pushl
or
mov
lret
push
push
push
push
ret
xlat
addb
add
xor
cmp
pushl
and
popf
test
scas
cmpsl
ljmp
aam
out
lock
and
and
xor
jns
aad
jmp
cmp
mov
fcomps
pop
or
push
repnz
fisubl
in
mov
jge
sbb
add
mov
sub
sub
imul
xchg
incl
jge
jmp
xlat
push
add
jl
mov
test
sbb
inc
inc
add
adc
add
push
ret
add
cmp
cmp
add
push
ret
mov
add
inc
decl
dec
xlat
mov
cmp
cmp
push
or
ljmp
outsl
cmp
lcall
jp
sar
inc
ljmp
and
mov
push
fstl
or
cmp
decl
mov
aad
xchg
sub
fwait
ja
mov
fdivs
xor
jge
mov
pop
sbb
lea
lock
cmp
js
incl
pushl
jmp
pushl
outsl
or
inc
incl
decl
lcall
pop
mov
aas
iret
or
ljmp
decl
decl
xchg
sbb
mov
pop
js
jmp
decl
lret
adc
sti
icebp
or
rolb
incl
inc
decl
and
push
sbb
incl
cmp
jmp
xor
mov
add
pushl
out
dec
outsb
mov
push
sar
pushl
add
decl
and
jnp
sti
add
ljmp
jmp
push
std
and
jmp
xor
pop
cmovo
xchg
pushl
adc
in
cmp
cmp
sbb
faddl
ljmp
in
pop
cmp
imul
mov
push
jmp
call
aad
inc
incl
movsl
call
ss
cmp
or
add
dec
mov
xlat
add
or
sub
jae
decl
into
incl
cmp
push
or
sbb
pop
mov
add
jmp
xchg
push
lea
jmp
sbb
dec
sub
decl
repz
cmp
xchg
sbb
les
add
add
push
jmp
pushl
insb
cmpsl
call
cli
dec
test
sar
aad
adc
call
add
inc
fistpll
call
push
test
fidivrs
call
enter
fistps
ret
jmp
incl
ja
push
jno
ljmp
int
push
mov
or
inc
call
push
ret
xchg
add
lods
sub
mov
add
ljmp
jmp
xchg
push
arpl
sub
and
inc
jmp
and
mov
inc
call
cwtl
cli
movsl
call
jge
ljmp
mov
push
inc
add
jmp
ljmp
flds
outsl
mov
jno
call
cmp
sbb
inc
call
lcall
pop
dec
lods
xchg
adc
adc
push
dec
jmp
mov
call
aaa
xor
sar
sbb
xchg
int
mov
mov
mov
pop
mov
and
mov
loopne
mov
loop
jmp
push
add
add
fisttpl
mov
and
incl
repz
add
add
mov
and
aaa
or
xor
incl
jl
loopne
mov
adc
push
cmp
sbb
loopne
loop
cmp
lods
sti
dec
jecxz
pushw
sar
jmp
adc
add
test
sbb
and
clc
sar
dec
insb
sar
xor
decl
in
call
cmp
mov
cmp
insb
call
mov
add
xchg
add
add
in
xchg
mov
add
add
add
incb
jmp
sbb
jmp
dec
rcll
or
decl
mov
adc
pushl
cmpsb
jmp
decl
in
stos
inc
lcall
daa
call
cmp
jmp
push
add
add
dec
pop
rcl
popa
fnstsw
enter
incl
stc
pop
fstl
mov
jmp
mov
or
adc
mov
xchg
aas
pop
sar
adc
push
lock
mov
or
jb
scas
mov
outsb
sahf
push
push
dec
cmp
pushl
pop
push
push
pop
decl
dec
sbb
fiaddl
incl
inc
jmp
fisttps
cwtl
sub
out
sub
lret
imul
pusha
call
mov
dec
arpl
adc
ljmp
or
incl
sub
fisttpl
call
xor
fwait
jecxz
cmp
movsl
decl
hlt
mov
lcall
pop
push
xor
push
adc
ljmp
call
icebp
jae
inc
decl
call
push
sbb
ljmp
clc
mov
jp
dec
scas
aam
ds
decl
call
mov
pop
add
jmp
add
jmp
adc
and
incl
dec
jmp
jb
ljmp
sbb
in
pushl
add
pop
int
cmp
cmp
stos
leave
and
aad
lret
pop
xchg
sar
fiadds
pushl
jmp
outsl
add
std
jo
mov
ljmp
xor
stc
adc
mov
mov
push
cmp
inc
lcall
inc
decl
int
xor
xchg
jmp
fcom
dec
sbb
mov
fwait
or
test
xchg
pop
sub
sar
jmp
in
or
add
ljmp
jmp
mov
call
pusha
decl
cmp
push
cs
ljmp
dec
mov
call
sbb
lcall
ljmp
iret
xor
popa
jns
jmp
aaa
aaa
mov
or
daa
jnp
sub
pop
jmp
sub
fidivl
sar
ljmp
test
push
incb
into
cmp
fisttpll
push
ret
add
cmp
ljmp
cld
incl
adc
add
mov
mov
jmp
addb
jmp
mov
jne
jmp
add
cmp
inc
fidivrs
inc
ljmp
out
call
jmp
xlat
add
add
mov
decl
cs
stos
sbb
cmp
in
je
pushl
idivl
push
out
push
adc
leave
jae
decl
dec
decl
mov
cltd
decl
xchg
dec
in
cltd
lods
lods
lahf
pop
rorb
mov
mov
clc
add
pop
imul
xchg
je
incl
fldenv
imul
mov
scas
movsb
fiadds
test
daa
incl
ret
pushl
lock
inc
lcall
pop
and
stc
adc
mov
push
mov
inc
pushl
or
gs
add
lcall
push
repnz
sub
or
xchg
inc
out
ret
pushl
incl
ss
inc
lcall
and
xchg
pop
ljmp
ret
jmp
add
pop
fstp
clc
adc
pop
dec
sub
lcall
pop
mov
iret
dec
stc
mov
dec
inc
incl
pushl
mov
int
sti
das
arpl
imul
sar
or
sbb
clc
pushl
sub
in
arpl
in
dec
lret
add
cs
loope
cltd
cs
pop
in
imul
stc
lock
push
jno
xor
js
xchg
aad
mov
jmp
add
xor
out
mov
ljmp
mov
pop
or
rcrb
add
ljmp
test
push
ret
push
cmp
sub
sbb
push
sub
jle
incl
xchg
xlat
xor
call
push
ret
xchg
add
cmp
daa
pushl
shll
icebp
adc
jmp
jmp
xchg
popa
jmp
ljmp
push
cmc
stos
add
jmp
add
sti
sub
cmp
pushl
imul
jmp
add
add
decl
out
jle
incl
adc
insl
cmc
inc
std
vmovddup
push
mov
in
push
pop
test
cld
mov
fistps
lcall
stos
stos
lea
xchg
push
inc
add
add
add
add
sbb
ret
jmp
add
xchg
stos
inc
jmp
incl
adc
in
mov
push
push
jmp
add
inc
dec
or
stos
out
sub
lods
dec
and
out
fcoml
fistpl
cmp
jmp
dec
and
aaa
out
mov
lods
and
jge
mov
jp
ljmp
js
enter
pushl
xchg
jbe
dec
imul
decl
test
jmp
add
adc
push
imul
and
imul
cmp
jae
pop
call
and
cs
lea
cltd
sahf
fcompp
add
mov
stc
cmp
dec
pop
xchg
fbstp
pop
xchg
lods
enter
or
pushf
cld
inc
incl
decl
sar
popf
and
lret
sub
adc
sbb
mov
sbb
imul
cwtl
sub
lcall
stos
pushl
into
ljmp
dec
loope
notb
or
lcall
ja
frstor
test
mov
int3
jle
sbb
jmp
add
xor
cmp
pop
add
inc
mov
inc
mov
push
jno
jns
mov
movsb
decl
decl
push
stc
lock
lcall
add
and
push
sbb
cmp
ret
add
lcall
sub
in
xor
mov
popa
ljmp
fwait
mov
and
stos
or
jg
jl
jns
ja
sub
insl
xor
loopne
or
mov
mov
push
imul
in
xchg
insb
cmp
incl
add
push
dec
add
incl
imul
add
dec
aas
xchg
xor
lods
iret
mov
pop
iret
sar
dec
sarb
cmpsl
call
add
add
and
shrb
xor
out
shll
call
adc
in
ljmp
cmp
xor
jmp
push
add
repz
jp
incb
push
call
out
in
mov
decl
and
insb
cli
adc
setbe
lcall
decl
decl
ljmp
jg
pop
mov
mov
or
sbb
incl
add
mov
add
call
mov
incb
mov
imul
jmp
incb
test
nop
outsl
stos
ds
add
lcall
aas
dec
and
mov
incl
add
add
add
into
sar
xchg
paddsw
test
add
jnp
or
mov
sbb
fisttpl
lock
out
enter
mov
jmp
pushl
fwait
inc
decl
incl
jmp
loope
jecxz
lods
pop
pushl
lea
jmp
add
or
jge
decl
xor
movsb
jmp
mov
jmp
add
xor
iret
jmp
inc
decl
jmp
call
cmpsl
mov
lret
xchg
in
sar
jmp
aad
mov
cmp
jns
dec
push
ret
add
xlat
add
ljmp
movntq
out
pusha
call
lods
nop
push
jmp
add
sub
pusha
pushl
incl
sbb
dec
pop
pusha
jmp
dec
cld
cmp
scas
outsb
decl
jnp
in
cmp
stos
int3
sbb
aad
pop
push
cltd
in
inc
incl
jmp
call
jmp
add
mov
sbb
ret
int3
sbb
hlt
add
pushl
incl
popl
loop
cmp
imul
incl
sti
push
ret
push
or
ljmp
xchg
decl
add
inc
call
stc
into
mov
mov
sar
incl
lea
ljmp
jge
jge
pop
out
mov
jmp
push
lcall
dec
mov
jecxz
sbb
pop
mov
pop
stos
push
jle
or
adc
shl
inc
decl
xchg
lcall
or
movsb
ljmp
call
call
xor
jmp
fucomp
and
decl
adc
jmp
jmp
std
fwait
push
imul
fmul
call
fisttpl
inc
mov
push
add
mov
push
lahf
add
push
sbb
aad
pop
jecxz
mov
dec
adc
ljmp
movsb
inc
add
mov
add
mov
lcall
pop
xchg
out
mov
cmp
xchg
lret
add
fisttps
sbb
mov
je
cld
dec
scas
add
jmp
fdivl
loope
rcll
inc
cmp
jp
pushl
push
call
and
inc
jmp
pop
push
dec
int
call
decl
push
jb
dec
cmp
nop
incb
fisttpl
sar
mov
dec
test
jecxz
ja
mov
inc
jp
xchg
stos
xor
mov
mov
inc
add
push
add
add
adc
lcall
lcall
xchg
jge
ljmp
rorl
lcall
jmp
adc
decl
push
dec
push
ret
lea
push
adc
add
call
dec
je,pt
push
cmp
adc
add
in
xor
inc
lcall
dec
xor
pusha
push
cli
clc
or
and
imul
xchg
jnp
mov
in
sbb
mov
sar
mov
stc
xchg
pop
ficomps
jmp
in
imul
jecxz
repnz
decl
push
cltd
jecxz
cmp
cmp
hlt
shrb
lcall
test
addb
ljmp
lcall
xor
pop
in
dec
xchg
mov
incl
add
xchg
stc
inc
call
xchg
lock
jo
push
cs
decl
or
ss
pop
mov
decl
mov
jmp
in
in
push
cwtl
cmp
mov
incl
add
add
push
sub
jb
ja
decl
push
ffree
decl
jle
ljmp
je
scas
mov
ljmp
mov
jmp
pop
dec
call
jno
cli
sub
mov
pushf
fsub
jnp
xor
lcall
call
call
test
lock
and
iret
outsl
cmp
pop
dec
jnp
sahf
fdivrl
sarb
fldenv
out
sar
pusha
mov
jnp
dec
push
fiadds
jns
push
sub
fwait
sar
cmp
pop
out
add
fistl
sbb
jecxz
sar
call
mov
call
push
imul
mov
add
imul
jmp
adc
jmp
add
inc
jmp
out
incl
pushl
jge
call
dec
mov
icebp
pop
mov
lcall
je
jmp
xchg
xor
insl
aaa
push
pop
jmp
add
add
add
mov
jmp
add
add
stos
nop
pop
sub
push
jmp
incl
call
push
mov
jmp
add
mov
add
incl
lahf
push
jmp
call
out
jnp
es
cli
test
inc
lcall
stc
pop
jmp
fdivrl
incl
leave
outsl
test
xor
pushl
in
cmp
int3
je
sub
push
insb
inc
decl
jmp
ljmp
cmpsb
jmp
fisubl
mov
push
sbb
mov
iret
fnsave
call
mov
cmp
adc
nop
test
pop
cmp
and
adc
repz
fimuls
call
in
jae
pop
dec
add
cmp
imul
int3
pop
daa
jge
decl
iret
jecxz
mov
xchg
adc
decl
push
aad
out
adc
dec
mov
fcompl
or
stc
xchg
out
in
aaa
mov
jno
fisttpll
or
into
call
push
jmp
xchg
ficomps
lock
movsb
incl
imul
sti
push
jmp
test
stc
incl
pop
decl
mov
ljmp
jb
ljmp
pop
ljmp
jno
das
dec
lcall
incl
stc
mov
cmp
decl
pushl
jmp
add
add
push
mov
lock
ljmp
incl
jl
xchg
mov
aas
lock
fadds
lcall
mov
push
ret
add
dec
and
pop
fucomi
aam
mov
push
jmp
add
add
push
add
pop
stos
cmp
cld
pop
jmp
incl
mov
sarl
sbb
ss
push
daa
call
outsb
outsb
adc
hlt
or
cmp
xchg
mov
and
sar
outsb
mov
call
dec
test
call
out
stos
jb
jnp
stc
lcall
fdivs
push
and
jmp
addb
add
mov
cmp
js
cwtl
add
ljmp
jge
jmp
out
jae
into
jae
pushl
ljmp
sar
cld
cmp
push
inc
jmp
push
add
jmp
decl
or
out
dec
jnp
jl
ret
incl
shr
test
mov
ljmp
push
test
jmp
push
add
lcall
inc
ljmp
fisubrl
cmp
lcall
jmp
lock
xchg
jecxz
imul
or
pushl
add
jmp
test
jnp
cmpsb
incl
lcall
aam
lcall
mov
cmp
cmp
call
pop
stos
jne
inc
decl
cmpsb
jp
ds
call
mov
pushl
mov
lret
out
xchg
mov
jbe
xchg
cmp
clc
rcrl
xchg
or
push
clc
sbb
push
mov
mov
call
loopne
mov
incl
dec
cmp
inc
call
jmp
lcall
inc
ljmp
dec
hlt
ds
pushf
and
in
sbb
call
callw
lcall
mov
incl
aam
ljmp
test
or
in
xchg
mov
pop
js
arpl
in
and
jmp
push
mov
cmc
push
addl
add
das
cmp
jg
test
incb
call
lods
imul
cmp
inc
call
movsb
call
incl
decl
popa
jmp
dec
mov
insb
jmp
push
add
cmp
xor
xlat
cmp
push
decl
mov
test
inc
jmp
decl
push
or
ss
repnz
mov
fsubl
lcall
and
lock
jmp
push
mov
jmp
add
add
insb
scas
testb
call
xchg
call
sti
loope
cmp
incl
fucom
ljmp
int3
mov
call
inc
jmp
ljmp
and
jp
cltd
sub
mov
mov
call
lea
je
pushl
and
or
push
mov
call
add
loopne
stos
clc
push
sar
decl
cmp
idivl
inc
dec
pop
pop
mov
call
dec
lret
out
pop
cs
jecxz
and
and
test
cmp
and
xor
flds
mov
pushl
out
lcall
mov
xor
mov
dec
and
ret
or
decl
jo
nop
mov
push
in
das
jge
mov
push
jbe
call
add
mull
call
in
popl
xor
push
jmp
js
decl
je
push
ret
pusha
push
push
push
push
jmp
ja
or
mov
call
mov
lcall
dec
stos
and
je
ret
jmp
add
add
add
decl
ljmp
icebp
das
inc
call
jmp
call
std
xor
rcll
pushl
push
in
mov
sar
ljmp
cmp
fiaddl
mov
jmp
decl
push
int3
test
ret
push
punpckhdq
sub
inc
ljmp
scas
int3
test
frstor
jmp
add
add
push
lock
decl
xchg
imul
loope
lea
push
out
adc
lcall
or
pusha
jge
ljmp
mov
ret
popf
cmp
stc
pop
ret
call
aad
dec
cmp
fstps
xchg
ja
mov
fsubrl
call
incl
and
test
pop
loopne
jmp
mov
sbb
sbb
pop
stc
pushl
cmp
je
and
pushl
dec
aas
aam
dec
jmp
cmp
cmp
pushl
adc
int3
xchg
fcmovnbe
push
out
xor
mov
std
fimull
cmp
ss
decl
push
jmp
dec
add
jl
pop
xor
mov
pushl
leave
jnp
mov
hlt
jbe
cmp
inc
incl
arpl
sbb
jp
push
mov
pop
add
loopne
cmp
jmp
jmp
cmp
jb
mov
sub
sbb
incl
sbb
movsl
ljmp
and
ret
incl
enter
sbb
pushl
outsl
addr16
dec
aas
fldenv
ljmp
lods
push
jns
xchg
pop
dec
loope
xchg
movsl
jmp
mov
and
jle
adc
pushf
cmpsl
jmp
pushl
or
pushl
idivb
pop
pop
sti
lock
and
mov
jle
lcall
and
sbb
call
cmpsb
incl
jbe
xchg
push
leave
adc
call
stos
pop
popa
ljmp
xor
mov
in
inc
decl
sub
call
inc
pushl
aaa
adc
call
jp
popf
mov
call
int
sub
icebp
and
outsl
lea
fdivs
sti
dec
xchg
ja
lcall
loopne
cmp
rcrl
popf
mov
jecxz
push
inc
jp
ljmp
rorl
std
cmp
test
add
adc
insl
dec
pop
pop
xchg
sub
int
pushl
or
mov
mov
jecxz
jmp
lcall
cltd
mov
xor
inc
pushl
mov
outsl
call
into
stos
mov
cmp
jmp
fisubl
pop
insl
cltd
mov
mov
cltd
jns
and
aas
add
dec
sarl
mov
ret
mov
cltd
or
out
divl
decw
pushl
push
stc
fildl
mov
pop
dec
in
in
jge
jg
or
and
or
incl
adc
ljmp
inc
decl
mov
fucomp
or
roll
mov
sbb
lcall
push
rcr
xor
jg
inc
lcall
mov
call
push
pop
cmp
nop
adc
ljmp
test
push
mov
dec
lods
in
mov
cmc
inc
incl
push
jmp
rorb
lcall
mov
mov
jmp
decl
jecxz
imulb
and
neg
gs
push
in
cmpsl
incl
mov
and
cltd
repz
push
push
ret
outsl
sahf
enter
dec
dec
or
decl
add
incl
sbb
dec
outsb
pushf
adc
add
mov
dec
push
incl
pushl
pusha
pushl
fnsave
adc
cmp
lcall
adc
and
daa
jmp
lcall
inc
jmp
call
xchg
mov
sbb
daa
jmp
or
pop
cltd
mov
jmp
daa
push
cltd
pop
sahf
int3
jae
std
xor
and
sarb
cmp
mov
ficoml
ljmp
mov
decl
ljmp
mov
mov
incl
push
cmp
push
mov
sbb
repnz
movsl
jmp
sbb
pushl
incl
decl
mov
mov
jb
sub
cmp
mov
incl
push
push
aas
arpl
xchg
inc
lcall
xor
call
in
or
push
pop
scas
shll
fildll
mov
scas
jmp
pushf
pop
scas
sub
outsl
in
fwait
lret
adc
decl
lret
out
pop
xchg
xor
jmp
stc
int3
aam
stos
into
push
or
insb
or
test
pusha
jle
inc
pushl
ja
mov
mov
xor
inc
incl
mov
pop
scas
scas
pushl
dec
xchg
jns
pop
or
mov
in
incl
lcall
mov
fsubrs
ljmp
lock
adc
push
insb
jae
decl
scas
arpl
inc
pushl
xchg
mov
cmp
add
jmp
adc
mov
mov
mov
call
incl
lcall
clc
movsl
ljmp
inc
jmp
ljmp
jmp
ffree
ljmp
mov
jmp
pushl
or
inc
inc
inc
pushl
sar
jmp
call
jle
jmp
call
xchg
stc
outsl
ljmp
aas
inc
out
pop
movsl
incl
xchg
loopne
lret
cmp
icebp
in
push
cmpsl
lcall
cltd
scas
jecxz
jb
adc
or
test
mov
adc
fadd
jmp
pushl
decl
fstps
out
xchg
push
icebp
ss
dec
movsl
pushl
out
aas
and
sbb
jecxz
jae
loopne
outsb
pusha
in
mov
jp
mov
cmp
cmp
ljmp
mov
cli
lods
mov
pushl
inc
lcall
decw
jl
std
adc
aas
push
add
mov
cmp
push
outsl
pushf
fwait
dec
pushl
sysexit
xchg
es
fsubrs
decl
xor
add
fdivs
ljmp
lahf
mov
pushl
sti
pop
dec
xchg
jbe
pushl
lods
add
fxch
inc
pushl
sbb
call
popf
push
aad
cmp
sub
sti
inc
fcomps
repz
pushl
cmp
aas
mov
mov
push
decl
pop
jbe
divl
in
inc
decl
scas
repz
xchg
mov
lcall
out
das
sbb
sbb
xchg
sbb
lcall
inc
lcall
sti
push
rorb
rcl
enter
xchg
adc
jle
dec
je
fbstp
or
insb
lcall
into
jl
cmpsb
jmp
aad
pushl
imul
lock
adc
jnp
mov
loop
inc
ljmp
dec
outsl
lret
mov
call
ljmp
decl
mov
int
decl
lods
imul
call
test
loope
sub
or
or
or
in
daa
jnp
fsts
ficompl
xchg
cli
pop
testl
pushl
movsl
lcall
jle
jne
jmp
fcoms
ds
inc
cli
or
push
negl
leave
stc
out
mov
and
push
sarb
mov
mov
lea
dec
cmp
cmp
mov
or
dec
xor
call
push
adc
jbe
loope
mov
jg
sbb
lret
push
cwtl
xlat
jg
decb
push
pushf
push
cli
clc
ficompl
inc
sub
jno
not
sar
lea
cli
jno
mov
gs
jno
out
ret
ljmp
ret
pushl
mov
mov
test
mov
xor
lcall
jbe
pop
adc
ret
jo
pop
xchg
cld
dec
test
or
jo
std
or
xor
dec
push
dec
cli
test
cmp
mov
mov
movsb
inc
jmp
incl
cmpsb
dec
push
testl
lret
inc
call
loopne
cltd
inc
dec
jbe
fsubrl
cmp
xchg
dec
in
enter
xor
cli
imulb
into
xchg
roll
pushf
out
and
sahf
int
iret
enter
int3
lods
mov
push
sti
dec
pop
inc
mov
repnz
incl
cmp
jo
lcall
push
in
sbb
push
enter
iret
fildl
cmp
cmc
mov
cmp
out
push
sti
stc
cmpsb
incl
decl
incl
jbe
ja
call
inc
pushl
mov
fneni(8087
inc
ljmp
dec
dec
xchg
xchg
cmp
jmp
push
jmp
jmp
push
ret
incl
or
sti
or
mov
sbb
xchg
fildll
lahf
sbb
pop
jns
fdivs
scas
mov
roll
cmp
int
push
dec
testl
and
mov
push
int3
xor
lcall
decl
push
cmpsb
dec
shll
ljmp
pop
ss
imul
cmp
or
xchg
incl
lea
mov
out
dec
fdivrs
call
incl
call
or
xor
movsl
pushl
cmc
xor
jmp
mov
sar
cmpsl
incl
into
out
sbb
ljmp
mov
fstpt
mov
lcall
inc
decl
mov
mov
dec
adc
cmp
in
cmp
adc
cmp
lret
mov
ja
adc
pop
aas
loopne
mov
lods
into
jge
pop
testl
jmp
dec
pop
cwtl
fnstenv
scas
and
sahf
out
pop
mov
std
push
pushf
arpl
xchg
xchg
xor
cmp
jmp
jmp
test
out
mov
daa
decl
aas
mov
push
ljmp
lcall
cmp
call
push
enter
xor
jle
sub
add
fnsave
mov
jmp
cs
jmp
mov
pop
mov
call
pushl
in
fldcw
cmp
jmp
int3
sub
jo
shll
call
pusha
ljmp
lcall
test
dec
lods
movsl
fidivl
jo
jecxz
lret
cmp
cmp
sar
ficoms
pushl
ficompl
loopne
clc
arpl
je
pop
popf
mov
fiadds
cmc
push
mov
cmp
pushl
cmpsl
call
test
xor
adc
stc
in
xchg
lahf
jbe
jmp
lcall
inc
clc
mov
cli
sbb
loope
rclb
fstp
xchg
push
out
roll
push
xchg
jo
xor
jmp
decl
paddq
sub
add
dec
loop
jg
rcl
outsb
and
mov
jno
pushl
decl
incl
call
fdiv
lock
add
call
and
cld
in
cmp
out
ljmp
push
mov
or
cmp
push
pop
inc
jmp
cs
nop
das
xchg
sar
add
or
dec
sar
rorl
cmp
sar
xlat
sbb
inc
lcall
jno
pop
aas
dec
mov
lods
xchg
sbb
xchg
mov
mov
push
sub
into
cmpsb
call
idiv
add
dec
pop
xor
dec
add
cmpsb
incl
clc
jbe
lods
in
in
push
decl
sub
incl
lods
mov
sub
push
push
enter
call
jne
or
adc
test
aam
sarl
mov
in
dec
mov
sbb
stos
hlt
pop
sti
movsl
jmp
pop
cmc
jp
ljmp
push
dec
push
sub
ljmp
pushl
xor
imul
ds
fiadds
sub
dec
add
ljmp
fidivrl
inc
pushl
leave
push
incw
mov
repz
push
xor
mov
sbb
jns
mov
lods
push
divl
call
sub
xchg
jp
pop
out
cmpsl
call
sub
push
cld
clc
jle
push
adc
ljmp
cmp
mov
popf
movsb
pushl
mov
mov
cmp
lea
pop
stos
xchg
mov
decl
sar
inc
ljmp
outsl
xchg
pusha
ljmp
adc
mov
enter
mov
loop
push
pop
ljmp
aad
ljmp
mov
sbb
xchg
lods
inc
pushl
in
out
mov
cmpsl
cmp
aam
sbb
arpl
test
dec
jae
pop
and
dec
enter
std
movsb
call
sub
mov
imul
ja
loopne
inc
lcall
movsl
dec
inc
call
mov
loopne
pop
clc
cli
add
incl
incl
mov
cltd
pop
int
sar
sbb
rcl
mov
sbb
mov
mov
push
sbb
imul
jnp
decl
push
adc
xchg
fisubrs
mov
add
mov
mov
into
lcall
lcall
adc
sbb
lea
mov
mov
dec
outsl
mov
pushl
pop
imul
incl
inc
pushl
enter
jbe
lcall
fs
mov
cmp
loope
pop
mov
ljmp
mov
mov
cmpsl
lcall
outsb
push
imul
lcall
incl
push
mov
clc
add
jmp
lcall
sbb
add
call
roll
call
fisubrl
dec
loope
mov
call
push
loop
leave
fmulp
test
jl
adc
out
mov
inc
aas
mov
ljmp
inc
incl
lcall
mov
xor
imul
ret
pushl
dec
test
daa
jmp
call
in
ljmp
incl
test
mov
sti
scas
sahf
add
lcall
incl
or
xor
call
out
mov
fwait
mov
pop
shll
or
dec
mov
decl
jmp
fdivr
push
lods
cmp
out
xchg
ds
call
pop
sbb
shrb
push
mov
scas
mov
fcom
jne
call
pushl
inc
pushl
incl
outsb
or
loop
ss
ja
pop
fdivs
or
das
mov
cmp
call
incl
ljmp
ja
push
jmp
and
add
sub
pushl
insl
xchg
lahf
daa
decl
jmp
ljmp
incl
in
sti
incl
pushf
or
jae
decl
dec
jns
lcall
mov
mov
pushf
nop
mov
decl
incl
in
and
sbb
test
adc
sti
push
ljmp
add
call
mov
lods
fidivl
push
stc
out
xor
sub
cs
jmp
and
pop
cmpsl
inc
call
sub
incl
inc
dec
mov
call
push
sub
and
mov
decl
mov
movsl
jl
mov
or
dec
mov
cmpsl
dec
xor
imul
hlt
pop
ljmp
sbb
jae
pushl
test
loop
insb
popf
xchg
adc
adc
cmp
decl
sar
js
push
mov
jae
pop
pushl
jo
je
push
ds
ljmp
add
lcall
lods
add
cmpsb
lcall
mov
xchg
cmp
imull
sbb
fildl
shlb
enter
lods
xchg
enter
mov
int
std
mov
and
xchg
mov
inc
mov
daa
js
loopne
xlat
pop
call
sub
cmp
lcall
cmpsl
jmp
sbb
loope
push
lods
mov
or
pushl
sub
pop
call
decb
shrb
cmpsb
inc
incl
xor
pop
ja
mov
mov
jp
leave
popa
jmp
decl
mov
mov
imul
arpl
scas
ret
call
incl
add
inc
pushl
daa
call
shl
call
xchg
jge
ret
aaa
imul
sti
mov
cli
jbe
ja
loop
int
push
cmp
mov
cmp
shlb
idivb
test
mov
mov
jno
sarb
pushl
outsb
mov
add
pop
sbb
stc
lods
call
jg
incl
push
xor
mov
mov
ljmp
xchg
aaa
fdivl
and
mov
fisubrs
mov
jns
stos
repnz
mov
enter
movsb
decl
jae
test
mov
decl
icebp
and
fimull
xor
ljmp
and
clc
mov
incl
popf
push
into
shrb
leave
int3
ds
xchg
hlt
sar
es
decl
outsl
push
inc
decl
cmpsb
ljmp
pop
testb
pushl
jbe
inc
lcall
testl
or
jmp
decl
lret
ss
cmp
in
mov
adc
jmp
dec
inc
jmp
insl
pop
or
cmp
lcall
sbb
call
or
jmp
out
cld
add
call
and
iret
add
call
call
sar
lcall
js
test
jmp
ljmp
xor
cmp
pop
mov
jmp
mov
xchg
cmp
lea
lahf
mov
movsl
jmp
inc
ljmp
arpl
pop
sbb
jmp
jle
ret
inc
call
lock
rol
incl
sub
push
jle
stc
lods
inc
call
cmp
or
jmp
stos
mov
decl
incl
jmp
adc
push
cmpsb
lcall
call
and
mov
mov
pop
cmp
loopne
decb
jb
ret
cmp
jmp
push
in
imul
mov
xchg
cmp
inc
lcall
add
decl
in
sub
js
lahf
das
sub
and
and
ds
repnz
aam
cmp
dec
dec
cmp
outsb
xchg
and
es
arpl
outsb
sar
rorb
sub
in
adc
pop
aaa
jns
cmpsl
jmp
jmp
jns
push
mov
dec
lcall
decl
pop
out
dec
lods
jno
pop
imul
fstps
mov
insl
push
mov
dec
shlb
lock
push
cmpsl
lcall
jp
sti
pop
pop
dec
loopne
lahf
out
xchg
idivl
aas
pop
mov
divb
sub
add
call
sahf
sarb
cld
and
jmp
fdivl
dec
cmp
das
and
in
pop
arpl
push
cmp
push
mov
sub
cmp
and
fnstsw
shlb
jmp
push
aaa
xlat
ss
sub
pushl
adc
incl
mov
jmp
jmp
sub
decl
mov
lcall
je
decl
out
sub
in
and
ret
cmp
call
dec
push
and
imul
jmp
pop
pop
mov
inc
inc
cmp
icebp
cmp
push
cltd
pop
mov
push
cmp
nop
jmp
jmp
push
ficoml
jne
iret
adc
push
lea
mov
xchg
shrb
aad
aaa
jb
xor
sbb
mov
leave
imul
decl
cmc
mov
jne
aas
enter
mov
sbb
lods
ficoml
inc
ljmp
mov
call
mov
ljmp
mov
inc
lcall
idivl
cmp
jge
insb
aaa
mov
nop
pop
sub
test
pop
test
in
or
call
mov
call
inc
call
lcall
inc
jmp
cwtl
adc
mov
imul
adc
mov
popf
nop
cmp
call
mov
cltd
enter
xchg
dec
push
xor
jns
add
decl
xor
fimuls
cmpsl
incl
adc
push
negb
frstor
jp
sbb
mov
incl
or
int
call
lcall
decl
call
jmp
call
mov
ljmp
mov
push
pop
adc
dec
es
ljmp
pushl
fidivrl
outsb
in
clc
fcoml
xor
stc
js
in
cmpsl
push
inc
mov
call
dec
cmp
push
std
cmp
jmp
js
call
pop
addr16
cmp
dec
mov
pushl
mov
add
lcall
mov
mov
scas
mov
dec
pop
jl
add
jmp
inc
ljmp
lcall
add
ljmp
jge
mov
loop
push
adc
es
out
mov
insl
loop
mov
pop
sub
aaa
ss
fistpl
mov
lcall
dec
ss
sbb
movsb
ljmp
ficoms
pop
jl
js
in
lea
jge
call
cmp
call
jmp
mov
popa
js
ljmp
cmp
pop
decl
decl
iret
sbb
test
lcall
and
addr16
pushl
push
incl
call
ret
dec
movsb
jmp
fstpt
push
icebp
lret
movsl
ljmp
stos
pop
add
sub
mov
fdivrl
jbe
decl
jmp
ljmp
mov
jmp
incl
incl
call
jecxz
scas
out
cmp
lcall
call
decl
sti
adc
call
jmp
lock
and
push
mov
pop
and
jmp
jo
fists
fcoms
mov
add
call
pop
jb
outsb
clc
dec
adc
xchg
fnstsw
xchg
fdivr
push
iret
adc
xchg
ss
xor
or
in
sbb
pushl
lret
in
jnp
sub
cli
ljmp
push
decl
nop
pop
jmp
addr16
outsl
jp
xchg
cmp
inc
incl
pop
mov
dec
loop
das
sub
push
aaa
cmp
cmpsb
lcall
cmp
pop
repnz
adc
loopne
hlt
xlat
jno
pop
mov
mov
ss
sbb
dec
push
ror
decl
cli
cmpsl
decl
sbb
xlat
pop
jo
inc
jmp
call
xlat
test
lea
push
jno
decl
decl
movsl
jmp
decl
pop
cwtl
sub
jl
cmp
mov
cmpsb
decl
push
adc
ret
jmp
cli
push
mov
or
pop
ljmp
push
je
loopne
movsl
jmp
jbe
sub
decl
mov
pop
push
rorb
cmp
mov
xchg
or
mov
daa
pushl
add
jmp
aaa
pop
cmc
outsb
repnz
lock
cmp
push
add
decl
clc
inc
cmp
std
push
jg
or
or
jmp
mov
sti
mov
add
adc
mov
xchg
cmp
jge
push
stos
out
dec
sbb
jmp
decl
ljmp
push
xchg
test
cmp
lcall
arpl
popf
out
nop
pushl
rorb
call
push
mov
push
je
sbb
or
call
rcl
sti
push
cmp
ss
int
inc
dec
pop
jae
decl
popf
inc
call
sub
sahf
arpl
out
stos
test
xchg
mov
lcall
and
mov
lods
xor
incl
mov
mov
dec
add
insb
mov
out
das
inc
ljmp
cltd
pop
lods
pop
fisubl
lcall
movsl
mov
fldt
int3
call
ret
cs
decl
mov
lcall
xchg
cmp
insl
jl
jmp
lcall
ljmp
xor
dec
ss
and
ret
pushl
add
sub
dec
leave
mov
ljmp
pusha
ljmp
pop
jp
lcall
mov
mov
stc
and
dec
imul
jo
call
push
xchg
int3
jno
mov
iret
cwtl
or
cli
incw
lcall
sub
repnz
push
inc
decl
add
fcoml
lea
incl
clc
out
push
xchg
daa
jns
incl
jmp
xchg
dec
cmp
xchg
mov
fs
incl
hlt
stos
cli
mov
js
push
das
sbb
ljmp
mov
adc
lcall
ds
pop
nop
cmp
pushl
in
cmp
inc
ljmp
and
adc
scas
add
pop
push
xchg
inc
call
xchg
jmp
mov
ljmp
pop
dec
arpl
call
fimull
cmc
lahf
into
mov
mov
mov
inc
mov
push
inc
pushl
pop
push
lahf
pop
lcall
scas
jnp
jnp
mov
jo
pushl
sbb
sub
hlt
or
sub
call
popf
loope
jno
imul
call
pushl
test
test
in
xlat
cwtl
dec
jnp
ljmp
cwtl
movsb
push
out
ror
decl
dec
cltd
mov
mov
jge
jmp
mov
aad
cwtl
push
push
inc
dec
outsl
jnp
add
mov
dec
pop
stc
jmpw
cld
mov
call
mov
xor
fildll
push
callw
cli
leave
jmp
call
call
xchg
cmpsb
decl
add
dec
dec
xor
js
mov
ss
decl
ljmp
cli
mov
sar
decl
enter
aaa
sti
jl
jae
sub
adc
push
xor
or
dec
and
daa
incl
ljmp
call
dec
leave
mov
jnp
std
mov
xchg
mov
mov
adc
clc
mov
aas
loope
jbe
std
mov
dec
sub
ljmp
incl
xchg
in
loop
xor
cmpsb
ljmp
jne
mov
incl
jecxz
dec
filds
ljmp
cld
sub
ljmp
call
ljmp
adc
dec
and
pop
fucomi
dec
stc
mov
cmp
xor
mov
into
fists
in
cli
insb
xchg
and
pop
fnstsw
sahf
jecxz
ret
call
dec
xchg
loopne
mov
push
mov
jnp
incl
fisubl
xor
jp
fidivl
jmp
xchg
in
aam
out
mov
in
inc
incl
scas
mov
xor
cmp
out
test
mov
pop
dec
cmp
jns
jmp
repz
mov
testl
jmp
incl
incl
jle
mov
incl
clc
push
cmp
incl
inc
cli
fisttpl
jmp
inc
ljmp
out
call
in
shrl
jnp
pop
or
ja
repnz
in
popa
call
inc
lcall
incl
incl
jmp
fmul
imull
xchg
test
inc
call
dec
scas
push
out
ret
call
daa
incl
push
clc
cmp
mov
idivb
decl
cmp
decl
ds
ret
decl
incl
jmp
incl
incl
repz
in
pop
shl
jmp
inc
incl
xor
ret
jmp
call
sub
icebp
pop
out
or
out
iret
jo
data16
fsubrs
dec
mov
xchg
push
stos
xchg
mov
pop
shll
dec
sub
mov
mov
aam
pop
div
dec
jb
cli
icebp
std
sub
lcall
dec
fwait
das
jl
call
and
or
adc
out
jo
sub
pushl
aaa
pop
inc
jmp
adc
in
insb
add
cmp
loope
cmp
imul
movsl
pushl
mov
lcall
adc
ljmp
mov
stos
sbb
call
jmp
dec
fildl
xchg
xchg
mov
lcall
insl
dec
inc
jmp
pushl
and
jmp
pushl
sub
pop
pop
jmp
lcall
mov
hlt
std
clc
cmpsb
lcall
sbb
dec
adc
sar
sub
dec
dec
gs
inc
cmp
divb
ljmp
dec
xlat
cmp
pushw
inc
call
jne
adc
call
insl
xchg
aaa
pop
movsl
decl
decl
decl
sti
sbb
lcall
pop
adc
fmull
sti
sub
jns
cltd
aas
aad
xor
outsl
outsl
and
push
dec
cmp
push
stos
in
pusha
call
aad
or
lcall
in
jmp
in
jae
imul
push
jmp
xchg
cwtl
mov
adc
jmp
inc
decl
fistl
icebp
loopne
repz
push
pushl
das
xchg
add
jmp
lea
mov
cmp
xchg
or
test
push
decl
jmp
inc
lcall
cmp
fstps
lcall
pusha
jmp
push
rcl
mov
push
enter
shrb
jle
adc
mov
fimuls
fwait
loopne
xor
adc
push
jbe
std
fists
repz
pushf
test
add
andnps
sarb
cmc
fisttps
pop
push
cmpsb
decl
mov
movq
outsb
cmp
inc
call
ljmp
cld
and
inc
call
jmp
mov
sub
js
call
insl
lock
cmp
push
cmp
add
lcall
dec
cmp
mov
or
jle
in
xchg
sub
stos
dec
es
jl
inc
decl
lcall
cmp
lock
mov
jmp
cmp
call
clc
mov
dec
dec
sub
call
mov
or
cmp
lcall
mov
lret
adc
sti
inc
ljmp
decl
hlt
call
jae
loopne
daa
cmp
int3
inc
mov
ljmp
pop
jb
xor
mov
ljmp
jmp
dec
mov
sarb
test
lods
sub
jge
mov
jmp
sbb
jl
loop
test
aad
pop
ds
dec
ret
mov
incl
ljmp
xchg
mov
popf
cmp
ljmp
inc
mov
ffree
push
sub
incl
ljmp
divl
call
jmp
mov
nop
add
ljmp
sbb
or
jmp
mov
fistpl
cmp
xchg
mov
cli
cwtl
inc
jmp
stos
dec
push
dec
add
decl
fisttpl
add
incl
lcall
lock
imul
popf
mov
push
jbe
ljmp
push
test
movsb
jmp
incl
and
out
inc
mov
ljmp
xsave
incl
ljmp
jbe
or
cs
stos
lea
mov
xor
decl
jns
mov
dec
lret
lea
cmp
jne
xchg
cmp
mov
lcall
decl
in
mov
sti
push
stos
sbb
sbb
pushl
xor
incl
fldl
loop
sbb
mov
ljmp
in
cmp
lcall
cmpsl
ljmp
pop
mov
dec
jge
pop
cmp
sar
mov
ljmp
add
pushl
mov
pusha
incl
inc
push
sbb
nop
in
push
cltd
mov
ljmp
dec
jnp
lea
jne
push
mov
mov
xor
sbb
mov
pop
xchg
mov
cmc
jnp
call
add
and
sbb
cmpsl
mov
hlt
pop
push
call
mov
pop
sbb
jnp
mov
sub
xor
mov
mov
or
inc
inc
decl
cmp
or
or
incl
pop
call
mov
lahf
or
jmp
scas
or
adc
arpl
push
test
popa
pushl
es
mov
movsl
decl
inc
incl
cmp
daa
pushl
jmp
fistpll
cmpsb
push
xchg
mov
decl
stos
lcall
push
jns
aas
icebp
shrb
sbb
in
push
ljmp
lcall
jmp
loopne
cmp
pop
push
cld
mov
and
or
call
jle
lcall
scas
lods
neg
sub
inc
lcall
mov
pusha
lcall
xchg
add
push
lret
sbb
jnp
push
decl
cmp
cld
xor
jmp
dec
cmc
ss
incl
rcll
sti
push
leave
mov
das
test
sub
cwtl
or
test
lcall
lcall
pop
lahf
repnz
js
vmovddup
mov
lods
aam
cmpsb
push
ret
dec
cs
enter
incl
pushl
loop
jb
fcomip
pop
jge
lcall
xchg
mov
jmp
mov
cmpsb
incl
out
and
jae
jmp
add
mov
jl
into
scas
lret
into
push
stos
mov
repz
call
xchg
dec
xor
add
cli
jne
ret
pop
jmp
pushl
lock
test
lcall
int3
movsl
call
or
test
push
lcall
xchg
fisttpll
in
clc
xor
decl
push
in
dec
outsb
into
mov
mov
imul
push
aas
shr
sub
or
jno
out
fldenv
pushl
loope
ret
lcall
incl
std
xor
in
mov
inc
lcall
ljmp
arpl
jno
mov
jl
sub
jge
sar
xchg
dec
lods
mov
incl
jl
mov
jmp
push
sub
pop
lret
or
sub
dec
imul
fadds
loope
pop
and
mov
sbb
aam
aas
test
fcomps
xchg
loope
stos
scas
mov
insb
push
cmp
push
push
decl
xlat
fdivp
add
lcall
stos
push
jmp
sbb
xchg
out
pop
xchg
jne
pop
ljmp
push
jmp
call
insb
add
pushl
ljmp
call
mov
jg
incl
outsl
xchg
sbb
jmp
cld
and
pop
mov
int3
mov
pop
jmp
mov
pop
dec
lcall
mov
repz
jp
test
cmp
or
or
inc
lcall
out
dec
loop
call
movsb
ljmp
int3
imul
loope
mov
insb
popf
mov
add
pushl
push
mov
call
call
jnp
jns
jmp
leave
adc
inc
pushl
cli
push
decl
decl
push
xchg
lea
sub
pushl
cltd
call
daa
inc
call
dec
pop
test
adc
xchg
ljmp
nop
add
adc
xor
call
or
push
lea
fstpt
mov
outsb
jnp
mov
decl
imul
jno
movq
cltd
fiadds
xor
faddl
call
cltd
xchg
testl
iret
pop
fildl
jae
call
ja
stos
mov
pushl
cmp
push
stc
mov
push
aas
je
dec
mov
enter
or
mov
and
repnz
lcall
sahf
mov
scas
loopne
jge,pt
sbb
xchg
pushf
lret
pop
repz
jmp
movsb
jmp
incl
in
xchg
dec
loop
mov
fldl
scas
std
cltd
xor
in
jg
xor
sub
fcomps
lcall
int3
adc
jmp
pop
pushl
inc
jmp
incl
cmpsl
ljmp
sub
lcall
and
out
call
call
cmp
sbb
test
push
ljmp
mov
mov
dec
xchg
mov
sarb
mov
fs
jl
adc
jmp
lcall
popf
xor
sahf
add
jle
sbb
jmp
ljmp
popf
add
jmp
mov
cmp
push
icebp
push
sub
inc
inc
call
pushl
adc
imul
rorb
imul
incl
data16
jg
jmp
stc
and
mov
jmp
ljmp
fistps
ljmp
push
hlt
sbb
lods
mov
jns
mov
adc
insl
add
call
push
lcall
fnsave
push
and
ds
ljmp
dec
xchg
mov
call
inc
decl
incl
jmp
mov
ja
mov
lcall
dec
mov
mov
daa
jmp
out
xchg
cmp
pop
out
sub
fldenv
fmull
imul
pop
xchg
xchg
hlt
xor
sti
xchg
test
jb
add
incl
call
call
inc
incl
adc
mov
mov
ljmp
inc
jp
jp
xor
mov
lea
sbb
xchg
xchg
and
fwait
push
inc
cmp
pop
mov
jl
decl
mov
cli
add
call
decl
sbb
and
sbb
in
push
dec
incl
imul
jns
mov
pop
ljmp
jmp
lahf
xchg
jbe
jle
pushl
mov
fsts
call
add
lcall
xor
jmp
lods
cwtl
xor
imul
cmp
pushl
call
shl
ljmp
je
mov
mulb
nop
pushf
and
lods
fistl
testb
jg
jmp
cmp
shrl
flds
dec
pusha
ljmp
cmp
inc
jmp
cmp
mov
fiadds
incl
ljmp
jo
fimuls
mov
rcl
and
jecxz
ljmp
test
push
out
xchg
cmpsl
call
push
pop
ljmp
decl
jmp
cmp
jns
add
fucomp
mov
sbb
outsl
adc
decl
xor
pop
jmp
mov
sbb
lcall
jg
addr16
cmp
lcall
jmp
es
call
pushl
xchg
push
mov
adc
call
push
inc
inc
lcall
mov
std
sub
cltd
loope
push
mov
jmp
and
out
mov
decl
jmp
add
cmp
mov
ds
decl
insb
call
nop/reserved
mov
cmp
loop
fnstsw
mov
lcall
aaa
jns
std
xchg
incw
dec
jmp
daa
ljmp
loopne
mov
sar
sbb
out
in
mov
mov
mov
aaa
in
jmp
dec
push
repnz
dec
leave
in
inc
cmp
ljmp
aaa
xchg
mov
and
cmp
pop
push
push
lods
mov
arpl
jmp
mov
jmp
lcallw
sbb
jmp
es
decl
sti
sar
sub
call
cmp
add
out
out
cmpsl
jmp
mov
fiadds
clc
movsl
jmp
ret
or
sub
inc
ljmp
daa
decl
push
mov
jmp
push
test
xor
pushl
sahf
scas
arpl
out
popf
nop
xor
ljmp
incl
fdivr
jg
adc
jns
in
rorl
inc
cld
xchg
adc
ljmp
out
outsl
mov
inc
incl
sub
loop
lcall
pop
call
sub
test
loop
jp
aam
mov
call
pusha
decl
sar
movlps
sbb
fsubr
clc
pop
pop
popa
decl
call
adc
dec
popf
fcom
test
xor
mov
ss
mov
push
ss
arpl
dec
xchg
pushf
cmp
popa
std
cwtl
pusha
jmp
incl
push
daa
call
xchg
imul
aas
cs
je
dec
loop
add
decl
jl
ljmp
movsb
lcall
xor
dec
xchg
dec
pop
xchg
lcall
mov
cltd
sbb
sbb
jo
pushl
xchg
xchg
fidivrs
ljmp
adc
dec
outsl
adc
mov
inc
pushl
jns
jmp
inc
jmp
incl
push
push
stos
mov
adc
jae
mov
mov
ljmp
sbb
sbb
jmp
push
add
cmp
call
ljmp
decl
sbb
and
into
cmovns
pushl
and
xchg
cmp
jge
and
add
incl
call
incl
fldenv
call
je
jmp
jbe
int3
xchg
test
jae
pushl
jno
lcall
cmp
decl
jmp
in
cmp
mov
clc
push
inc
lcall
hlt
cmp
and
cs
cmp
test
mov
xor
cmc
imul
or
lods
cwtl
pusha
call
xchg
sub
or
lcall
loopne
sub
decl
cmp
pop
jle
rcrb
sbb
int3
mov
vmulsd
jmp
iret
pushl
mov
scas
ds
lahf
in
repnz
jmp
lcall
pushl
std
enter
jmp
jae
cmp
out
das
rorl
jmp
mov
mov
adc
lcall
lcall
pop
outsb
pop
push
jo
stc
add
lcall
cs
ljmp
xor
cmp
jae
sar
jp
sti
mov
pushl
insb
movsl
ljmp
incl
ljmp
into
cwtl
cmpsb
lcall
inc
decl
decl
cmp
cmp
adc
pop
dec
xor
xchg
test
lcall
fistps
adc
testl
outsl
mov
pushl
lcall
cmp
jp
add
ljmp
mov
jmp
mov
insb
adc
cmp
cmp
daa
call
mov
pushl
jne
dec
loopne
inc
lcall
movsl
fldt
sbb
ds
out
decl
adc
test
cmp
push
and
mov
lahf
inc
fidivs
mov
out
push
add
cltd
cmp
ljmp
ret
mov
pushl
inc
ljmp
call
xor
cmp
dec
jb
in
adc
jb
incl
incl
decl
mov
jb
and
jmp
loopne
pop
lcall
jmp
int3
dec
sub
ja
movsb
lcall
cmp
mov
pop
shll
ds
adc
stc
push
pop
ss
push
ret
xchg
hlt
mov
mov
sar
jg
pushf
mov
add
incl
loop
loopne
push
ss
mov
jmp
jmp
sbb
inc
ljmp
push
xor
jne
jmp
lcall
int3
inc
dec
sar
lcall
cmp
scas
ds
or
mov
mov
sar
test
aaa
xor
fadd
fmull
jmp
pushl
cltd
mov
scas
jl
das
loop
sub
adc
mov
call
jg
call
jmp
jecxz
fisttpll
sub
jge
mov
pop
jno
sub
push
sub
push
mov
add
jl
in
lret
jmp
inc
decl
movsl
decl
jno
ljmp
jmp
lcall
in
mov
sar
int3
add
call
imul
sbb
lcall
shll
xor
in
xchg
dec
inc
ljmp
cmp
mov
fadd
pushl
repz
call
or
pop
pop
call
sbb
jns
cltd
push
incl
fldcw
push
push
lcallw
lcall
decl
mov
aaa
push
cmp
sar
add
lcall
js
idiv
sarl
cmp
gs
cmp
out
dec
xchg
adc
std
mov
lcall
dec
jp
jl
pushf
loop
clc
mov
add
jmp
lcall
xor
inc
jmp
and
popa
pushl
outsl
sar
cmp
inc
push
mov
push
mov
decl
jne
inc
lcall
arpl
js
icebp
pop
sub
icebp
sahf
sahf
rorb
sub
mov
lcall
call
stos
out
jge,pn
mov
jmp
lcall
xor
xor
decl
jl
and
adc
lcall
ljmp
outsl
loop
or
pop
inc
jmp
decl
ljmp
dec
stos
mov
pop
mov
xchg
hlt
sub
mov
jp
dec
inc
decl
outsl
mov
fwait
ss
call
decl
jmp
push
xchg
or
jno
ljmp
movsb
call
das
xor
pushl
movsb
fnstenv
mov
mov
xchg
in
cmp
icebp
repnz
mov
jmp
repnz
adc
rclb
fdivr
int
sbb
outsb
mov
sahf
xlat
faddl
cmp
pushl
cwtl
aad
push
arpl
je
mov
inc
lcall
test
inc
pushl
test
sub
sbb
and
pop
sti
aas
sar
lods
mov
push
jmp
call
lods
dec
pop
dec
dec
pushf
add
call
add
ljmp
pop
call
ret
incl
and
inc
lcall
jne
mov
add
dec
sbb
sub
scas
and
outsb
xor
ja
mov
sbb
clc
mov
incl
jnp
not
pusha
dec
xchg
adc
or
inc
lcall
adc
cmp
mov
jo
pop
test
and
mov
push
sub
sbb
lret
pop
cmp
jmp
pushl
insl
sub
call
iret
push
xor
fmulp
pop
pop
xchg
pop
out
cmpsb
lcall
jns
dec
in
ja
xor
jmp
js
pushl
or
mov
dec
nop
adc
and
jbe
mov
cmc
inc
clc
cmc
sti
fisubl
imul
push
sbb
jno
cmp
out
add
call
dec
enter
pushl
push
notb
incl
call
mov
jmp
inc
lcall
cmp
decl
inc
call
incl
mov
in
cmp
out
popa
incl
sarl
ret
shll
incl
adc
cmp
shlb
call
xchg
in
lcallw
fnstcw
push
mov
enter
pushl
decl
incl
push
xchg
aad
mov
ja
ljmp
pop
mov
loope
ds
xchg
mov
das
jns
sub
fisubrs
pushl
sub
mov
sahf
loope
mov
pushw
loopne
mov
and
xor
lcall
jg
ja
out
dec
aad
lods
inc
dec
cltd
decl
decl
idivb
xchg
mov
mov
into
or
fiadds
call
loopne
cmp
dec
push
or
mov
in
and
call
dec
aam
push
data16
fidivl
cmp
add
fadds
sti
loop
shlb
in
jno
jb
sbb
cmp
cltd
mov
jecxz
inc
pushl
ljmp
js
cmp
fstl
inc
lcall
incl
mov
incl
out
mov
jmpw
lcall
icebp
out
sarl
call
pusha
call
mov
mov
dec
jge
push
int
pushl
push
mov
push
and
add
incl
pop
mov
dec
in
in
shlb
scas
jl
ljmp
imul
js
in
adc
aas
stos
push
mov
push
call
imul
sar
scas
mov
std
scas
aaa
pushw
or
xor
test
sar
fistps
xchg
js
out
lret
int
cmp
xor
clc
or
push
adc
lret
popf
xor
fcoms
mov
pusha
lcall
ret
lcall
call
xchg
xlat
push
aad
and
pusha
jmp
divb
ljmp
mov
lcall
decl
push
mov
pop
mov
decl
lcall
cmp
xor
daa
call
mov
cmp
std
adc
aas
ds
stos
mov
pop
out
add
cmc
fadds
scas
loopne
pop
std
jbe
out
js
in
pop
adc
dec
sbb
pushl
in
push
pop
ds
imul
push
fbld
std
sub
mov
ljmp
call
cmp
jmp
incl
rolb
dec
mov
xchg
lock
ljmp
pushl
arpl
pop
movsb
pushl
lret
adc
cs
push
xor
mov
push
sub
mov
mov
adc
push
scas
mov
cmpsb
call
es
decl
jbe
lea
mov
inc
lcall
ljmp
fstpl
outsl
jle
pop
push
sub
jmp
fcompl
ljmp
test
push
cmp
jbe
insb
or
out
cmp
adc
inc
incl
pushl
inc
dec
pushf
std
or
xchg
add
cld
mov
cmpsb
pushl
xchg
loop
jne
pop
cmp
or
add
dec
lock
scas
mov
jne
xchg
repnz
xor
mov
cld
mov
mov
inc
out
cs
out
ror
inc
call
out
imul
popa
incl
js
sti
popa
jmp
sub
ds
lcall
mov
lret
nop
lea
xchg
or
push
push
insb
sbb
decl
shrl
call
mov
int3
lods
iret
mov
decl
jmp
lcall
dec
mov
fisttpl
jne
rorl
dec
sub
jle
lcall
jns
arpl
lret
and
ds
or
inc
call
mov
pushl
dec
call
xchg
jmp
aas
or
sub
inc
push
cmp
mov
push
sti
dec
clc
mov
test
in
fnsave
stos
adc
jp
leave
fmull
inc
decl
mov
lcall
inc
ds
mov
enter
push
xor
lcall
call
lcall
incl
ljmp
jmp
mov
incl
mov
call
pop
call
in
sub
rcrb
cmpsl
mov
pushf
sub
lcall
mov
incl
adc
xlat
inc
call
jns
ljmp
aam
decl
lcall
cli
pushl
nop
adc
incl
add
jecxz
pop
jmp
decl
in
sbb
inc
ljmp
mov
push
roll
and
xor
addr16
jp
hlt
mov
mov
jbe
ljmp
sub
incl
shll
mov
add
inc
jmp
lcall
ja
call
mov
sub
mov
adc
stos
jae
sbb
incl
lcall
cmp
xor
fidivrs
pushl
push
pop
pushl
arpl
and
arpl
shrl
cltd
fiaddl
lcall
arpl
out
cmp
popa
decl
incl
ljmp
cli
arpl
insl
js
and
cwtl
in
sahf
dec
inc
call
xchg
clc
pushl
dec
mov
decl
xchg
xchg
arpl
sub
lcall
jle
sub
outsl
and
aas
and
jl
call
shl
rclb
ja
push
decl
popa
call
out
inc
call
leave
dec
shll
dec
cmp
jnp
dec
dec
lea
fsts
lcall
jmp
xor
inc
pushl
fmull
dec
jno
push
push
mov
dec
scas
enter
sbb
pop
mov
cwtl
out
jmp
and
sar
jmpw
lcall
jecxz
sar
dec
cs
ret
push
sub
cmp
jmp
incl
decl
aas
sub
ljmp
hlt
xchg
ljmp
inc
inc
decl
mov
dec
push
loopne
jecxz
adc
mov
jmp
pushl
aaa
sarl
cmp
incl
pop
sub
rdseed
or
in
int
lcall
ljmp
cmpsl
lcall
pushf
imul
cmpsl
call
lcall
call
dec
cltd
popa
call
add
call
jne
aas
and
cmc
mov
ret
incl
cmp
pushl
decl
cmp
cmp
hlt
cs
js
rclb
stos
jl
xor
sub
arpl
sbb
cwtl
inc
mov
fmul
mov
call
inc
incl
adc
repz
mov
xor
fidivrs
push
cmpsl
jg
mov
mov
mov
cltd
movsl
ljmp
xchg
pop
fnstenv
dec
mov
ja
and
sbb
aam
pushl
decl
xchg
in
fucomi
pop
ljmp
std
lret
out
cwtl
dec
cmp
gs
mov
cs
incl
push
lret
dec
xchg
mov
jmp
in
stc
pop
jbe
jmp
in
in
push
jle
ljmp
scas
push
in
mov
or
outsb
cmp
inc
jmp
mov
pushl
stos
leave
outsb
and
mov
in
sbb
pushl
test
lcall
jae
decl
pop
sub
xor
adc
fiaddl
xchg
cs
mov
cmpsl
decl
cmp
call
cmpsb
ljmp
lcall
sar
dec
out
cwtl
jecxz
lahf
mov
sbb
inc
jmp
mov
pushl
cmp
ret
incl
pushl
lret
cli
outsl
mov
ja
lcall
sbb
jbe
mov
sub
jmp
inc
call
mov
cli
daa
incl
ret
jmp
mov
push
decl
imul
push
fcom
call
pop
xchg
inc
jmp
pushl
jmp
ljmp
dec
dec
jecxz
in
decl
sahf
or
sbb
push
cmp
aas
mov
stos
mov
xchg
or
ljmp
and
cmp
push
push
adc
push
cmp
xor
test
dec
or
pop
or
clc
push
cltd
aaa
out
mov
jle
sbb
mov
dec
decl
sub
xchg
jge
adc
push
incl
mov
jp
inc
lcall
stos
ret
push
pushf
mov
cmp
mov
sub
lcall
adc
cmp
sbb
jno
decl
or
mov
jmp
movsb
push
cmp
incl
jmp
insl
mov
inc
inc
decl
andps
jne
jne
mov
push
jmp
lock
pusha
ljmp
aas
inc
cmp
mov
imulb
inc
call
rcll
pushl
mov
mov
incl
cli
ljmp
ljmp
push
mov
xor
pushl
callw
inc
incl
lcall
bnd
filds
cmp
pushl
lahf
cmpsl
lcall
nop
jbe
clc
push
rcll
pop
jnp
fimuls
nop
stos
sbb
cmp
mov
decl
mov
adc
or
push
jno
into
push
add
dec
jb
fsubrl
jo
adc
cltd
mov
test
loopne
sar
mov
iret
loop
imul
lock
dec
mov
dec
xlat
vunpcklps
dec
movzwl
jmp
or
decl
jmp
decl
sar
lcall
mov
mov
mov
pushl
inc
jmp
sti
xchg
sti
insb
clc
fildll
jnp
incl
mov
inc
pushl
in
cmpsl
pushl
pushl
in
pushf
fs
fisttpl
push
dec
jle
inc
call
xchg
inc
decl
out
push
push
cs
mov
fstl
adc
or
incl
mov
cld
sbb
scas
jecxz
push
incl
push
pop
adc
jnp
adc
loopne
and
xchg
ret
mov
call
cmp
and
int3
lret
test
dec
sub
clc
xor
pop
or
popa
decl
sub
lea
in
push
pop
cmp
sahf
dec
push
vcvtsi2sdl
pushl
mov
cld
lahf
fxch
mov
repnz
ljmp
cmp
aam
ljmp
loop
jle
pushl
ja
stos
jo
incl
add
push
mov
inc
faddl
imull
lcall
jb
in
and
xchg
lret
insb
sahf
outsb
outsb
cmpsb
incl
mov
cmp
hlt
cmpsl
lcall
xchg
ret
call
push
cmp
scas
mov
pushl
cmp
push
xchg
inc
decl
or
dec
mov
xor
sarb
fs
incl
enter
xchg
cltd
fsubr
ljmp
lcall
leave
adc
movsb
lcall
mov
ljmp
movsb
pushl
mov
pop
divl
scas
sbb
jl
jns
sete
incl
sub
sub
or
stos
cmp
in
aam
xor
sar
mov
jne
fwait
pop
ret
into
dec
dec
outsb
aad
test
dec
mul
ljmp
js
pop
mov
rcrb
insl
xchg
mov
dec
mov
or
mov
lods
in
sar
dec
xor
lcall
mov
adc
push
loope
in
clc
sbb
cs
sub
call
cmpsl
ljmp
xor
inc
decl
adc
and
movsb
incl
adc
and
popf
dec
mov
cs
adc
paddb
pop
test
xchg
mov
lcall
insb
sahf
popa
dec
enter
lahf
wrmsr
jo
scas
jp
arpl
inc
lcall
imul
jmp
sub
shl
std
jo
call
decl
inc
incl
out
sar
call
add
incl
inc
jns
stc
and
out
cmp
jmp
inc
jmp
jecxz
idiv
xchg
popa
push
and
rcrb
pop
pop
call
call
movsl
ljmp
dec
sub
cmp
and
call
add
jmp
call
cmp
cmp
decl
jo,pt
fldcw
shll
fbld
mov
or
push
mov
fiadds
lcall
ss
call
call
daa
pushl
in
cld
shlb
cwtl
sub
push
inc
dec
outsl
dec
mov
imul
jmp
call
inc
call
xchg
mov
mov
sar
inc
pushl
adc
adc
decl
jno
je
jo
shrl
into
add
decl
in
ret
call
inc
jns
sub
lcall
pop
dec
scas
pop
pop
roll
jmp
and
int
nop
out
mov
push
repnz
push
lahf
inc
jmp
pushl
xor
incl
xor
dec
xor
jle
mov
lods
xchg
jle
push
ljmp
mov
push
fnsave
ljmp
lcall
inc
inc
aas
cmc
inc
jge
sub
push
xor
cmp
insb
test
add
sbb
push
js
jmp
call
push
push
pushl
jle
pop
ds
push
push
int
pop
aaa
pop
xchg
call
jnp
fldenv
ret
cmp
inc
push
sbb
incl
mov
pushl
aam
push
daa
call
fstpl
xchg
popf
dec
dec
mov
decl
xchg
aad
in
dec
jecxz
rep
pushl
lock
mov
sub
call
mov
in
sbb
out
and
lods
mov
in
out
xchg
mov
mov
mov
add
add
