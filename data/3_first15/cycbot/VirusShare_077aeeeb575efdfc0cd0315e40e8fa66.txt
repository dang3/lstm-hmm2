rorb
mov
loop
and
mov
div
add
int
adc
add
addb
add
jmp
add
sub
sbb
mov
add
adc
rcl
sbb
fisubrl
fbstp
add
mov
insl
clc
repnz
dec
and
mov
lods
lret
lods
cwtl
out
cmp
xchg
add
icebp
xchg
test
add
push
adc
leave
pop
outsb
dec
xchg
mov
dec
xchg
add
dec
stc
cmc
pop
imul
testb
add
loope
scas
cwtl
dec
les
mull
icebp
imul
cmp
add
mov
xor
add
pop
mov
mov
add
hlt
add
pop
lock
scas
push
add
cwtl
pop
jo
xor
sub
mov
ret
cmp
pop
fistps
rcll
fimull
add
adc
outsb
or
add
and
repz
adc
jp
push
das
aad
mov
popf
lcall
add
iret
mov
hlt
add
out
mov
push
add
ds
push
add
xchg
jne
lahf
and
mov
add
xchg
and
xchg
add
lahf
sarl
push
add
add
mov
add
add
pop
movb
sub
push
or
stos
cs
xor
add
je
pop
test
mov
add
mov
add
add
mov
stc
mov
int3
gs
fbstp
call
mov
mov
xlat
dec
add
outsb
xchg
add
jl
add
add
add
pushf
xchg
add
fmull
adc
inc
add
roll
add
add
add
cmp
add
mov
cmp
add
adc
add
add
add
aaa
cs
add
sahf
movsb
add
mov
js
and
pop
add
xor
incl
xchg
jnp
fildll
add
jo
sub
jo
arpl
add
xor
push
add
mov
cltd
out
loop
adc
out
rcll
add
aam
cmp
add
add
add
add
mov
test
and
mov
jns
nop
add
xchg
xor
add
add
adc
xchg
mov
icebp
or
pop
sub
xor
jne
hlt
add
inc
add
dec
les
adc
jae
add
fistl
sub
in
xlat
jmp
imul
stos
push
lods
sub
pop
ja
popf
sub
mov
mov
mov
push
jb
lock
push
jns
sbb
add
cmpl
add
jle
add
add
mov
mov
mov
movb
pop
cmp
cmp
add
add
add
mov
je
inc
add
or
data16
inc
subl
add
add
adc
xchg
add
and
mov
add
fsubl
xor
dec
ret
adc
push
mov
add
data16
mov
lea
mov
pop
jmp
icebp
jmp
xor
add
add
pop
pop
insb
add
add
leave
in
cmp
add
dec
sbb
add
mov
jae
add
movsl
jnp
pop
mov
lcall
add
sti
pop
addb
fstl
or
movsl
push
add
inc
add
pop
ret
out
les
xchg
movb
add
add
add
push
add
bound
mov
mov
xchg
xor
mov
fmuls
in
dec
rolb
jnp
dec
push
inc
add
sub
cltd
sub
outsb
mov
push
out
xor
xor
jp
or
add
fisttpll
cmp
add
mov
pop
addr16
je
adc
sahf
rolb
push
add
add
add
mov
sub
ror
dec
in
inc
mov
ret
sbb
fstpl
loopne
xchg
and
repz
add
add
ja
in
push
lcall
adc
add
add
xor
out
and
les
shrl
add
cltd
add
add
add
aad
jae
add
pop
xor
dec
into
ret
dec
aad
push
add
add
pop
push
add
mov
add
add
add
jb
mov
push
add
inc
add
arpl
and
inc
add
add
xor
mov
fistpll
addb
add
repnz
mov
add
mov
add
outsl
repz
movb
sub
jmp
les
push
repz
xor
popf
jbe
std
aaa
mov
jl
fildll
cmpsl
and
mov
jb
sti
push
add
xchg
sbb
add
jp
out
addr16
sub
add
or
ja
sti
xchg
lds
pop
sub
add
jmp
movb
ret
cli
mov
mov
add
jbe
and
mov
jnp
dec
rcll
add
hlt
add
xor
xor
fcompl
mov
and
mov
aas
pop
dec
xorl
loop
sub
push
daa
add
pop
or
jmp
fwait
add
add
in
add
inc
add
add
dec
mov
add
aad
leave
pop
fsub
out
xor
icebp
add
loope
add
mov
add
jo
mul
add
jle
mov
xor
mov
add
sub
outsb
fldcw
popf
cmp
add
fistpl
popa
ret
jg
testb
pop
or
mov
add
add
add
nop
add
jl
add
cmpl
in
popf
dec
mov
add
ret
add
mov
add
add
lret
mov
xchg
add
pop
into
rcll
sahf
dec
add
out
sti
adc
test
cmp
add
dec
cmpsb
add
into
and
mov
add
add
add
ljmp
aaa
lods
mov
xorl
movsl
fldt
pop
mov
ja
add
sbb
cmp
add
out
dec
dec
in
lock
add
outsb
repnz
cs
jecxz
inc
add
cmpsl
jg
cmp
add
lcall
loop
sub
add
add
testl
push
add
sub
xchg
add
sub
jns
push
jno
jae
and
test
mov
into
xchg
add
out
loopne
mov
add
cmp
icebp
push
xlat
movb
pop
aas
add
sub
mov
jo
loop
rolb
call
inc
fdivrl
arpl
add
rolb
pop
mov
inc
add
scas
sub
roll
call
add
mov
movsl
add
scas
incl
loope
add
mov
sub
add
add
sub
push
add
add
add
testb
push
inc
add
jne
test
pushf
in
divl
add
cld
mov
testb
xrelease
cld
mov
mov
clc
fisubs
xchg
aaa
mov
addb
add
add
mov
loop
pusha
add
pushf
addb
ret
lock
addb
dec
scas
lahf
insl
push
add
mov
lock
lret
stc
movb
sub
cmc
adc
nop
add
outsb
imul
mov
lock
fisubl
jo
pcmpeqw
testb
push
add
or
add
rolb
push
aaa
int3
dec
or
jno
add
mov
cmp
xchg
scas
mov
adc
add
das
jg
cmc
add
mov
pop
rolb
dec
icebp
subl
cltd
push
add
jnp
xchg
std
cltd
dec
adc
push
add
xchg
out
sbb
add
rolb
sub
push
add
int3
repnz
pop
and
mov
std
jle
test
and
mov
fwait
rolb
lcall
roll
add
pop
les
jnp
lcall
xor
enter
fstpl
aaa
lods
and
mov
add
mov
out
inc
add
sbb
add
or
fsubr
add
rolb
and
mov
add
mov
arpl
add
fwait
mov
push
add
sti
cmp
insb
cmovno
add
jmp
ja
insb
daa
cs
cmp
lock
add
shr
sub
xchg
add
xchg
mov
jle
add
out
add
add
mov
movsb
add
or
or
add
enter
movb
mov
jp
addb
xor
jb
sub
ljmp
fadd
fisubs
out
or
xchg
scas
mov
add
add
pop
popa
insb
xor
push
add
sbb
push
add
add
push
je
inc
rolb
or
rolb
or
adc
mov
std
xor
mov
xor
mov
jle
flds
idivl
pop
adcl
add
add
add
addb
pop
sub
mov
xchg
rcl
sahf
test
add
sub
inc
add
mov
pop
fimull
add
repnz
popa
aas
leave
or
out
or
mov
rolb
mov
icebp
out
xor
jns
inc
mov
dec
push
js
add
add
cmp
add
addb
sbb
fistps
inc
add
and
test
rolb
lds
add
lcall
cmp
stc
cltd
loope
mov
rolb
xor
or
mov
xor
mov
add
testb
add
fisttpll
add
cltd
mov
stc
adc
or
mov
cs
lods
push
mov
add
inc
xchg
xchg
shrl
pop
mov
jae
jp
addb
clc
ljmp
add
aas
rolb
mov
cmp
adc
push
out
mov
add
add
sub
add
jp
icebp
lahf
out
pushf
popa
testb
aaa
push
insb
aaa
lods
mov
add
add
add
mov
mov
add
add
dec
mov
add
mov
mov
mov
mov
add
pop
push
add
jbe
lahf
xor
es
xor
mov
jae
bound
mov
pop
sub
stc
ljmp
inc
lret
add
push
add
jae
xor
add
push
lcall
adc
add
mov
inc
xchg
mov
int
roll
add
add
mov
jecxz
add
mov
cmp
jg
xor
mov
adc
xchg
jne
add
sub
cwtl
inc
add
add
add
mov
insb
iret
fidivs
std
mov
sti
inc
add
push
js
add
add
mov
adc
sbb
add
mov
in
inc
add
pop
xor
fcompl
fs
add
add
sti
jg
push
push
add
rolb
xchg
in
cmp
ret
xor
addr16
adc
pop
dec
and
inc
add
mov
xchg
push
aas
mov
test
add
adc
push
out
pusha
add
jbe
imul
push
add
out
push
inc
addl
cmp
adc
psubq
add
add
jge
dec
inc
add
inc
rolb
push
mov
sahf
add
cmpsl
daa
push
add
add
ret
inc
xor
arpl
add
add
add
int
repz
push
xlat
ud0
les
cmp
ret
lcall
orl
push
mov
mov
pop
jb
in
sarl
mov
scas
inc
xchg
dec
mov
add
push
adcl
add
add
ret
add
ret
xor
add
mov
cmp
add
aam
ds
int3
addb
movsb
add
add
rolb
add
add
or
dec
mov
xor
lahf
add
mov
lret
xor
std
sub
add
add
insb
daa
clc
call
mov
sub
add
enter
scas
fidivs
xchg
add
imul
aaa
mov
add
xor
inc
add
lods
loopne
jb
push
add
add
jl
not
add
cmpsl
cmp
popa
cwtl
mov
enter
imull
and
add
jmp
movsb
add
jge
add
mov
test
repz
pushf
dec
pop
data16
je
outsb
dec
cmp
dec
jecxz
xchg
in
out
test
jb
add
and
dec
stos
loopne
jnp
xchg
lock
scas
rorl
mov
mov
jnp
add
add
sbb
jecxz
xor
inc
lods
imul
add
scas
push
add
std
xchg
add
push
add
lret
add
add
nop
add
cltd
inc
inc
xchg
add
add
mov
rcrl
add
int
pop
enter
lcall
add
mov
jmp
cmpl
movsb
add
add
fwait
in
iret
cmpsb
add
lea
xchg
or
lcall
pop
pop
sbb
and
add
push
add
add
add
add
adc
inc
add
add
add
push
add
sub
loope
lret
xchg
in
push
imul
sub
push
push
push
cld
call
sub
mov
push
imul
pop
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
es
call
test
jne
jmp
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
and
add
push
add
xchg
std
arpl
movb
add
mov
test
dec
dec
lcall
mov
add
xchg
add
lahf
clc
clc
xorl
and
int
add
inc
add
sbb
int
scas
movsl
jo
in
jl
cmpsb
add
add
xchg
clc
lcall
add
adc
repz
pusha
add
test
mov
add
add
add
xchg
add
out
faddl
add
pop
mov
mov
pop
add
mov
inc
insl
movsb
add
jns
or
add
jl
cmpsl
and
add
scas
faddl
add
jb
inc
add
rolb
mov
add
hlt
add
imul
mov
add
add
add
mov
bound
mov
lds
add
loop
add
mov
mov
xchg
xchg
mov
sbb
push
sbb
pop
cmpsl
lea
push
out
cmpsl
js
pusha
add
push
add
xchg
sub
mov
add
aam
popa
das
xchg
adc
push
dec
lock
js
loop
lahf
push
add
fwait
xchg
add
fwait
jp
xchg
and
mov
js
add
arpl
add
add
popf
sbb
add
leave
adc
rolb
mov
test
je
loopne
cmp
add
sub
cmp
xchg
add
add
rolb
push
sbb
add
vmwrite
push
add
push
or
mov
add
mov
and
mov
add
movsb
add
xor
adc
add
nop
add
iret
sub
inc
add
xor
sahf
dec
adc
sbb
das
push
rolb
fistpll
xor
push
push
inc
or
into
cmp
subl
add
jge
add
xchg
aas
js
add
adc
inc
shll
push
add
add
repz
lock
xchg
push
rolb
pop
je
lock
add
jbe
pop
lret
adc
hlt
add
fimuls
scas
push
add
popf
sub
inc
in
call
lods
fcmovu
out
sbb
aam
je
dec
cmpsl
pop
jecxz
inc
sbb
adc
sbb
add
push
add
add
cmp
add
insb
dec
add
adc
cld
add
add
mov
mov
and
add
aam
adc
add
add
and
add
jnp
pop
lcall
adc
arpl
add
cmpsb
add
ja
fistpll
ljmp
sub
add
cmp
add
add
add
scas
fcmovne
xchg
add
mov
push
sbb
adc
fsubrs
and
jno
add
add
icebp
jecxz
movb
add
lock
rolb
cmc
cmc
xor
shll
mov
add
sub
add
add
add
dec
cmp
jbe
push
addb
mov
imul
rolb
repnz
jmp
stc
rcrl
xchg
dec
cli
sub
add
add
outsb
or
cmp
add
call
add
out
add
add
add
mov
rolb
leave
rolb
xor
xchg
mov
push
add
sbb
mov
mov
adc
cmp
add
add
add
lods
jbe
jns
mov
cmpsb
add
aam
fistpll
das
mov
lret
adc
imul
outsb
movsb
add
mov
cmp
fistpll
icebp
mov
testb
sbb
dec
pop
bound
mov
xorl
add
add
mov
add
jl
add
add
lret
xchg
xchg
iret
or
repz
fistl
add
add
stos
mov
test
test
out
dec
mov
outsb
in
mov
cmp
mov
mov
add
inc
add
dec
mov
add
add
shl
mov
add
add
or
add
xor
cmp
add
mov
sub
add
adc
mov
add
mov
add
add
add
loopne
mov
imul
subl
add
inc
add
les
dec
loop
shll
add
test
add
add
add
rolb
fmull
dec
add
jl
adc
popa
dec
lahf
addb
or
sbb
dec
rcrl
sbb
inc
add
xchg
dec
xchg
add
push
inc
add
repz
cli
lret
sbb
inc
add
shll
adc
add
mov
in
fbld
cmp
movsb
add
sbb
adc
add
or
rolb
xor
add
out
mov
and
dec
test
cltd
iret
aaa
and
mov
sbb
add
add
sbb
lahf
stos
in
sub
sub
xchg
add
sub
pop
rolb
mov
add
or
mov
cltd
dec
and
aam
xchg
add
jle
add
hlt
add
add
pop
jle
mov
data16
ret
mov
rolb
sti
jl
add
mov
ret
icebp
repnz
sbb
cwtl
push
jns
pop
sub
in
pop
nop
add
clc
add
pop
push
ret
adc
xor
push
add
jp
add
add
jns
xor
lret
insb
mov
leave
fidivs
add
add
push
add
adc
add
mov
scas
hlt
add
mov
add
outsb
or
push
stos
mov
mov
add
lods
sub
test
sub
add
add
ret
mov
into
or
add
add
mov
add
cmp
hlt
add
add
data16
add
add
call
xchg
add
add
or
sub
add
xchg
mov
pusha
add
rolb
add
xchg
scas
sbb
add
cli
data16
adc
cmpsb
add
inc
add
push
dec
aaa
icebp
rcll
dec
jg
inc
add
sbb
push
add
pop
xor
fwait
jg
cmc
stc
fistpl
ret
pop
dec
mov
mov
add
mov
add
push
add
add
add
in
mov
pop
xchg
out
loop
push
add
leave
xor
and
test
add
dec
scas
lret
add
pop
xchg
inc
add
push
add
mov
in
sub
mov
add
and
shll
add
pop
xor
in
pop
cli
mov
gs
arpl
mov
mov
add
enter
jb
testb
add
add
push
add
pop
orl
and
add
mov
add
and
mov
jge
add
mov
mov
test
jge
lret
lret
in
adc
jecxz
mov
add
add
fimull
xlat
add
dec
adc
data16
add
mov
jo
fmul
cli
pop
jo
cmp
adc
mov
pop
cmp
fsubr
ja
mov
add
add
jge
sub
cwtl
push
add
mov
xor
add
les
or
add
sahf
inc
add
in
xchg
add
inc
add
sub
sub
xor
or
sub
or
add
add
mov
repz
mov
add
fsub
add
sbb
int3
pop
ljmp
add
sub
add
xchg
mov
push
add
add
push
dec
sbb
addb
or
mov
faddl
mov
icebp
addb
pop
and
mov
rolb
std
and
adc
outsb
movsb
add
add
xchg
add
add
add
push
pushf
lds
add
jmp
lock
daa
xchg
add
mov
add
mov
fwait
outsb
push
sub
dec
roll
cmp
inc
add
add
add
add
adc
arpl
inc
add
fisubrl
sbb
pop
sub
andl
add
xor
xor
add
arpl
sbb
jg
rolb
imul
lahf
mov
dec
rorl
add
jg
xchg
in
dec
test
cltd
xor
add
pop
dec
mov
jle
dec
mov
mov
add
jg
gs
dec
testb
and
loopne
sbb
mov
add
jbe
mov
or
add
mov
add
shrl
repnz
pop
leave
push
add
inc
cmp
fadd
mov
movsl
sbb
xchg
movsl
sub
add
sub
add
add
aaa
push
pushf
shl
add
fwait
push
add
add
inc
add
cwtl
pusha
add
add
push
add
leave
push
add
add
push
add
push
add
jne
add
add
add
out
data16
add
aad
pop
jbe
adc
sub
mov
add
jns
jbe
and
iret
call
dec
inc
and
add
pop
mov
add
in
lods
xchg
insl
cmpsb
add
jp
cmp
add
xlat
pusha
add
call
add
add
mov
xchg
mov
das
pop
cmp
add
movsb
add
addb
mov
mov
scas
push
int3
xchg
das
das
repnz
outsl
aas
std
fcoms
mov
sahf
add
mov
adc
add
pusha
add
scas
cmpsl
in
add
xchg
cmp
add
sti
daa
arpl
ljmp
add
pop
add
jnp
mov
add
addb
push
add
ret
and
into
dec
inc
add
data16
add
dec
sbb
popa
cs
add
popa
mov
push
adc
ljmp
add
test
lds
jno
dec
leave
sbbl
jo
lret
jecxz
outsb
dec
adc
nop
add
add
add
nop
add
add
add
xchg
add
dec
push
add
addr16
push
add
mov
cmp
push
add
xlat
pushf
test
or
and
mov
add
iret
mov
ljmp
out
je
mov
sub
add
add
add
lcall
outsl
add
add
icebp
aas
scas
cmpsl
add
cmp
js
add
mov
repz
fidivl
pop
insl
bound
mov
enter
sub
jnp
dec
lcall
add
add
jmp
add
pusha
add
pop
xlat
sahf
insl
push
add
stos
rolb
insb
cmp
lret
add
or
popa
jle
add
cmp
xor
add
add
movsl
lods
or
loop
pop
cmp
add
push
mov
mov
pop
dec
fisubs
mov
aas
or
add
adc
call
mov
add
add
add
mov
movsb
add
mov
push
add
inc
fldt
cmp
out
sarl
mov
lds
imul
or
pop
or
mov
add
add
jmp
add
add
andl
xor
mov
xlat
mov
icebp
es
mov
jecxz
add
add
add
mov
bound
mov
adc
pop
ja
out
add
cmp
and
mov
fdivrp
icebp
and
mov
add
insb
repz
jb
rcl
out
fcomip
add
add
mov
adc
fbstp
incb
mov
or
aaa
pop
pop
jo
push
adc
cld
enter
jns
add
pop
dec
enter
jle
or
inc
add
cmp
fnstsw
repz
add
fnstenv
sbb
add
hlt
add
addb
data16
add
xor
add
add
insb
adc
jno
add
add
test
out
pop
and
push
add
test
add
fisttpl
lret
pop
push
test
add
je
push
sub
add
roll
std
xchg
scas
sti
and
into
idivl
pop
lods
or
in
aaa
mov
mov
mov
jl
ljmp
sbb
xchg
leave
mov
ret
ja
out
jle
decl
add
push
mov
add
xor
orl
cltd
addb
std
inc
fwait
popf
jo
pop
in
imul
cs
pop
pop
inc
add
add
add
in
adc
or
roll
add
mov
add
lds
add
add
imull
in
sub
sbb
add
push
add
add
inc
push
out
popa
rolb
pop
pop
add
add
dec
rolb
inc
add
mov
fucom
scas
jmp
sub
icebp
aas
push
bound
mov
addb
pop
popa
xchg
jne
lock
jle
add
aad
sbb
mov
add
lret
ficoml
add
add
adc
add
cmp
inc
aam
ret
add
fcmovnu
movsl
xor
imul
lea
pop
xchg
sbb
add
andl
shrl
jmp
loope
add
je
sub
fwait
inc
add
pushf
sbb
jle
mov
pop
adc
cli
and
mov
std
lcall
cmpsb
add
push
add
addb
mov
or
add
fst
add
pop
xor
add
dec
xlat
mov
add
xchg
sbb
add
mov
pop
mov
mov
jno
add
push
rolb
pop
adc
lcall
in
test
test
add
test
mov
sahf
or
add
push
add
adc
clc
cmp
dec
js
push
add
xchg
bound
mov
mov
leave
das
loope
add
ljmp
ret
js
add
add
sti
mov
mov
les
incl
mov
add
add
xchg
outsl
jno
loope
fcoml
dec
cmp
out
sbb
fsubs
mov
xchg
dec
fcompl
nop
add
jb
add
sub
push
add
es
push
jnp
mov
xor
xor
cli
in
daa
cmp
lret
cs
add
add
es
add
bsf
add
add
add
and
and
mov
popa
movb
adc
xchg
test
data16
stos
mov
push
addb
ret
jbe
mov
xchg
add
xchg
add
adc
add
daa
push
xchg
add
add
mov
add
mov
cmp
mov
xor
cltd
enter
iret
mov
ja
and
xchg
add
into
jl
mov
lea
testb
mov
xlat
xchg
add
add
leave
jae
clc
mov
scas
cwtl
mov
add
xchg
fwait
sahf
ss
add
dec
lahf
fidivl
ret
xchg
add
inc
enter
lock
mov
mov
cmp
xchg
dec
mov
in
cmpl
call
movb
ret
push
pop
sub
aam
imul
mov
sbb
add
mov
add
add
adc
or
xor
dec
adc
dec
adc
js
add
add
add
ds
dec
or
pop
mov
jns
xchg
push
pop
out
in
pushf
adc
sbb
bound
mov
out
inc
stos
cmpsl
xor
rolb
pop
dec
out
inc
sub
add
dec
ljmp
cmpps
mov
scas
or
shll
insl
in
mov
mov
data16
add
lcall
jno
pop
push
xchg
cmp
add
lods
movsb
add
add
jb
outsl
pop
mov
fldl
jle
dec
xchg
mov
inc
add
add
and
mov
dec
lods
mov
inc
add
leave
js
jmp
mov
mov
in
imul
aas
inc
add
add
add
ljmp
add
and
mov
push
add
xor
and
cmp
leave
push
push
add
push
and
les
mov
andl
mov
and
repnz
pop
adc
outsl
sub
cmp
and
add
lcall
and
out
sub
and
adc
movb
add
pop
fildll
adc
or
sahf
outsb
nop
add
mov
ret
addb
add
rcl
add
aad
xor
push
ret
popf
lea
adc
addb
xchg
adc
pusha
add
rolb
lahf
lahf
mov
fistpl
cmpsl
add
add
add
jg
sbb
or
mov
addb
sbb
add
add
add
loope
xor
mov
add
gs
clc
mov
add
pop
pop
iret
paddusw
loope
add
jecxz
xor
into
xchg
les
mov
cmp
add
fbstp
xchg
add
sub
call
push
data16
fiadds
lea
mov
stos
icebp
pop
push
add
leave
mov
test
cmp
jns
mov
scas
add
mov
aaa
jmp
add
lahf
lcall
jmp
add
inc
add
add
pop
int
inc
mov
and
xchg
loope
outsl
movsl
ret
sbb
mov
sub
repz
aaa
test
dec
cmpsl
ja
add
add
add
mov
pop
cmpsl
add
mov
add
enter
add
and
or
or
mov
bound
mov
inc
jo
popa
mov
out
ljmp
mov
cltd
stos
jg
add
jbe
xchg
adc
push
add
sub
add
jnp
add
mov
ss
push
adc
test
lahf
push
add
aam
xor
cmp
add
add
movsl
adc
ss
and
dec
mov
add
jne
adc
push
add
cmp
cltd
pop
stos
and
das
shl
rolb
pusha
add
movsb
add
add
lods
add
pushl
add
mov
xchg
scas
insl
jnp
adc
add
xor
dec
mov
fnsetpm(287
add
in
or
add
or
jecxz
inc
mov
rolb
hlt
add
les
pop
ja
push
or
add
inc
arpl
jno
add
adc
push
add
xor
sbb
sub
mov
dec
or
pop
ret
or
ljmp
mov
cmpsb
add
rcl
mov
jmp
add
add
sub
add
add
xlat
mov
in
loopne
and
mov
popa
out
cltd
mov
outsb
mov
add
mov
or
add
fldcw
outsb
sub
cmc
insl
scas
mov
jnp
mov
mov
inc
inc
sbb
inc
and
leave
mov
mov
mov
test
add
fwait
mov
and
mov
cmpsl
stc
fcom
out
fsubl
add
movsl
xchg
enter
repnz
mov
nop
add
add
mov
pop
and
fwait
in
test
loop
je
addb
scas
clc
je
lock
add
add
clc
mov
jo
testb
cmpsb
add
adc
mov
add
test
add
test
add
int
add
fldenv
insl
push
add
mov
lret
rolb
xchg
add
das
frstpm(287
mov
pop
mov
pop
pop
sti
cmp
stc
pop
test
out
adc
and
mov
push
popa
test
adc
popf
xchg
stc
jmp
stc
test
or
enter
add
inc
add
mov
dec
lds
add
mov
lods
addr16
popf
loope
add
scas
mov
cs
lods
jne
dec
sub
pop
push
add
jo
dec
dec
pop
shll
add
sub
daa
lret
roll
mov
push
cltd
mov
cmpsl
addr16
ljmp
sbb
and
cmp
sub
jno
repnz
icebp
lods
mov
enter
cli
cmc
dec
pop
jae
pop
add
mov
jns
stc
ret
pop
and
mov
add
flds
xor
or
lods
rolb
add
xor
lahf
test
mov
sbb
jmp
fsubrp
dec
roll
cmp
dec
rolb
inc
add
lcall
sbb
mov
push
ret
movl
add
lds
out
sbb
mov
dec
mov
int
pop
adc
jo
jnp
push
add
out
pop
mov
lahf
mov
lcall
add
cmpsb
add
pop
jmp
cmp
jle
xor
pop
add
mov
sbb
aaa
insb
inc
mov
jp
jno
cmc
or
mov
cltd
mov
jp
add
or
mov
pop
mov
fisubs
pop
movb
add
cmp
aaa
shll
or
fwait
or
add
add
mov
add
add
add
add
add
adc
add
add
mov
add
add
mov
cmp
add
sbb
xchg
popa
push
add
mov
or
imul
mov
jge
lret
sbb
movsb
add
add
add
add
xor
inc
add
mov
into
movsl
adc
xor
sbb
test
add
and
mov
add
sbb
data16
add
add
adc
cwtl
addb
sti
jecxz
imul
mov
mov
popa
sub
in
andl
rolb
stos
mov
add
mov
push
add
daa
add
jne
add
add
bound
mov
add
push
sub
sub
sbb
sub
in
addb
cmp
out
imul
cld
xor
lret
inc
add
add
roll
loope
adc
ss
add
push
cmpsb
add
leave
mov
add
and
add
cmpps
add
leave
ja
in
repz
pop
loopne
jg
int3
cli
cmpsb
add
add
add
add
mov
cmp
add
mov
lea
ljmp
int3
mov
outsl
fsubrs
mov
scas
addb
xlat
loopne
shrl
mov
repz
add
adc
jmp
inc
mov
add
cltd
or
jnp
add
ret
jb
push
push
lods
fldenv
xor
add
testl
loop
ja
add
add
add
add
and
stc
cmp
mov
mov
repnz
add
lods
data16
add
sahf
cld
pop
in
mov
cltd
lahf
cmp
dec
inc
mov
add
cmpl
movb
fiadds
add
add
dec
mov
mov
rolb
cltd
mov
sbb
ljmp
enter
mov
pop
push
sbb
mov
pop
sub
or
mov
lock
add
pop
dec
xchg
flds
push
add
jge
mov
in
push
add
lds
mov
aas
cmpsb
add
roll
add
pop
ret
cmp
ret
mov
xchg
add
pop
xbegin
jge
scas
stos
adc
mov
aam
incb
pop
sub
add
mov
inc
add
popa
add
pop
mov
sub
add
or
add
add
fnsave
out
xlat
test
pop
push
adc
push
add
icebp
sub
cmp
add
mov
lods
add
fisubs
add
mov
add
leave
outsl
cli
vpsubsb
sub
dec
xlat
sbb
movb
rolb
enter
pop
movsb
add
add
pop
push
add
add
and
add
pop
push
or
out
sarl
mov
int
xchg
movsl
add
popa
mov
into
or
add
add
add
add
je
xchg
hlt
add
testb
pop
ret
add
out
jp
adc
add
add
xor
add
inc
add
xchg
add
add
insb
add
jno
pop
out
lds
cs
add
sub
mov
cmp
add
xor
pop
lods
mov
lds
out
nop
add
xchg
add
xchg
into
shrl
sub
add
fwait
aad
push
xchg
push
sarl
add
pusha
add
xor
push
add
stos
mov
add
ret
xlat
pop
cmp
aaa
andl
imul
sbb
push
mov
movb
pop
in
fstpl
inc
add
std
bound
mov
add
adc
jmp
cs
add
mov
add
sbb
add
mov
add
add
sbb
add
add
out
cmpsl
rolb
jns
inc
add
mov
stos
push
push
add
mov
sub
add
rcrl
mov
movb
add
add
clc
into
sub
mov
sub
add
popl
add
mov
add
add
and
mov
mov
jp
push
add
fnstsw
mov
add
arpl
jecxz
mov
push
add
sbb
fdiv
fstl
repnz
jne
movsb
add
das
xor
add
je
lods
jg
add
scas
loopne
add
sub
cmp
mov
ds
ret
add
add
mov
gs
add
sub
ret
jp
add
call
add
add
pop
ret
ja
push
data16
or
ja
inc
mov
pushf
sub
add
add
add
mov
xchg
cmp
setne
add
in
and
mov
xor
or
or
inc
test
mov
or
lods
dec
and
mov
add
add
or
jp
add
xchg
add
outsb
in
imul
jl
add
mov
add
add
addb
repz
lods
or
sub
data16
add
mov
add
add
add
call
rolb
add
jno
outsl
mov
mov
fucom
add
add
sub
add
add
aas
ror
push
aaa
out
insb
out
in
mov
arpl
add
mov
xor
pushf
in
mov
xor
cmp
xor
add
out
mov
fmuls
push
add
jmp
add
add
pop
fcmovne
jnp
pop
add
mov
jl
add
add
add
mov
xchg
add
xchg
or
pop
xchg
shll
and
mov
and
adc
add
cmc
mov
add
fwait
cmpsl
dec
call
mov
lcall
dec
dec
lret
adc
and
mov
add
aad
pushl
mov
cmpsl
test
std
push
inc
add
das
mov
or
add
daa
adc
fcomip
xchg
xor
insl
add
add
bound
mov
aas
lahf
inc
add
aaa
dec
mov
push
stos
lahf
into
pop
cld
jmp
hlt
add
cmpsl
mov
cmp
add
leave
xchg
add
mov
dec
cwtl
jb
ror
cli
aas
add
rolb
fistpl
push
xchg
push
jb
cmp
inc
jmp
add
add
ds
pop
test
out
adc
sbb
add
xor
mov
js
dec
loope
cltd
mov
arpl
sahf
stos
aad
pop
int
jle
hlt
add
add
out
xor
mov
test
mov
push
add
mov
hlt
add
add
jae
dec
insb
jno
xchg
add
add
mov
data16
add
xor
or
jp
add
sbb
adc
cmpsb
add
jno
pop
jp
and
mov
cmpsl
iret
xchg
lods
fbld
add
add
mov
shll
pop
test
fdivrs
add
adc
inc
xchg
and
dec
and
pop
loope
add
scas
stc
mov
pop
loopne
insb
ret
pop
cli
mov
loopne
mov
fisubs
mov
add
add
add
stos
fistpl
mov
popl
fadd
sub
loope
add
xor
aad
or
bound
mov
mov
add
iret
rolb
push
rolb
mov
add
sbb
mov
inc
add
add
mov
std
iret
add
rolb
push
out
mov
sbb
add
loopne
pop
ja
add
add
rolb
mov
out
add
or
jns
out
add
rolb
xor
scas
rcll
cmp
xchg
add
dec
mov
add
add
sahf
sub
pop
jecxz
or
jbe
outsb
cmp
rolb
cmp
fdivs
add
add
sub
xchg
sub
and
jl
outsl
call
dec
fbstp
push
mov
add
shrl
in
jmp
add
mov
xor
add
addr16
add
in
mov
dec
ja
je
into
pop
mov
pop
and
testb
dec
add
add
jae
add
pop
add
ret
mov
lret
mov
inc
add
add
mov
sbb
add
or
add
xor
mov
adc
pop
pop
cmp
sbb
into
push
add
add
inc
add
add
add
repnz
add
add
mov
add
pop
ljmp
push
add
jmp
push
cwtl
lret
add
and
mov
sbb
add
xchg
add
add
ror
movq
mov
sbb
lahf
fists
paddw
add
int
popa
shll
repz
mov
xchg
shll
sub
xor
loopne
pop
rcll
test
dec
jb
add
add
adc
adc
push
add
jmp
add
add
xor
lahf
cmp
add
das
pop
and
mov
sub
mov
add
inc
add
add
testb
add
pop
gs
das
mov
add
out
mov
pop
xor
add
add
pushf
in
push
add
add
mov
dec
push
add
add
jne
pushf
cmp
fcoml
add
mov
sahf
xchg
add
add
mov
add
mov
scas
push
jno
std
scas
test
xchg
rolb
pop
and
mov
add
rcll
jns
xor
cmpl
sbbl
add
add
fidivl
into
dec
lds
jnp
inc
repz
addb
add
fcomi
add
sub
mov
mov
add
add
bound
mov
lahf
sbb
sbb
dec
xchg
add
jns
add
add
push
add
pop
pusha
add
cmp
lcall
push
add
rolb
add
jl
cmp
pop
mov
sub
xchg
add
add
add
add
pop
sub
add
sub
add
fnstsw
add
jmp
or
jecxz
repnz
inc
fistl
cmp
insl
sub
add
enter
pop
mov
mov
xchg
ljmp
je
testb
lods
jbe
pop
sbb
add
testb
xor
movsb
add
add
jo
imul
out
jb
jnp
add
mov
inc
in
adc
mov
lcall
jle
outsl
sti
popf
push
pop
test
pop
fwait
loopne
jge
sub
mov
out
mov
jbe
jmp
add
mov
adc
xchg
add
out
int
rcrl
fcom
add
add
add
pop
lret
add
mov
gs
outsb
add
fdivr
adc
dec
mov
add
lret
iret
cmpsb
add
add
pusha
add
mov
mov
adc
add
pushf
addb
push
test
repnz
xor
mov
and
inc
xor
mov
ss
inc
repnz
add
add
out
outsb
ret
push
add
call
add
add
and
pushf
ret
mov
adc
cld
rcll
adc
inc
add
add
push
nop
add
outsl
movb
add
mov
dec
lock
test
add
mov
xchg
arpl
jns
pushf
jnp
push
out
lea
add
je
js
add
add
cmc
and
scas
hlt
add
add
mov
add
fdivr
gs
add
mov
mov
mov
add
scas
cmc
mov
mov
mov
lcall
add
sbb
add
mov
mov
out
std
pop
jo
dec
and
inc
incl
mov
add
pushf
adc
xchg
xor
add
lods
test
test
inc
mov
push
add
mov
add
lea
fcomps
imul
add
pop
addb
cmp
xor
inc
cmpl
cmp
mov
scas
mov
dec
mov
sub
pop
jmp
add
add
add
add
adc
or
or
add
mov
int3
push
add
mov
push
xchg
clc
dec
leave
mov
or
scas
cld
add
mov
add
push
add
sub
sbb
and
mov
add
mov
int
adc
mov
push
pop
mov
cmpsb
add
fcmovu
dec
cli
jecxz
add
fwait
mov
stc
dec
shl
add
push
add
jns
add
xchg
mov
jle
mov
jecxz
add
sub
mov
jae
fstps
pop
mov
jmp
xor
imul
inc
add
jmp
add
mov
fimull
add
lods
push
lods
sub
cmp
jge
add
add
add
std
inc
add
pop
jne
jo
dec
push
mov
add
je
pop
test
loope
cmpsl
pop
push
add
mov
cld
lcall
negl
add
inc
add
pop
cmpsl
add
or
add
add
add
xchg
scas
daa
hlt
add
movsl
dec
dec
inc
add
inc
add
sub
xchg
xor
jae
mov
or
call
jp
shrl
addb
add
add
sub
add
mov
push
nop
add
fdivrs
or
clc
test
add
pusha
add
push
add
dec
faddl
testl
fistps
sarl
mov
add
cmp
add
mov
mov
cwtl
sbb
add
xor
add
in
jno
add
sub
jns
inc
pop
jo
dec
aas
js
nop
add
xor
add
jae
add
xchg
add
loopne
push
add
add
xchg
add
aam
mov
mov
sbb
sub
mov
xlat
loope
inc
add
cwtl
xor
out
add
push
add
mov
nop
add
add
add
mov
add
add
dec
fidivl
add
stos
mov
mov
dec
les
add
dec
fsubrl
xchg
paddd
add
outsl
fidivs
add
pop
dec
inc
cmp
lret
rolb
aas
push
jge
lret
or
stos
xchg
add
add
push
test
test
add
cmp
add
jns
in
add
mov
and
add
sbb
add
cmp
jmp
add
xor
cmpsl
jo
dec
jb
movnti
jo
inc
add
add
je
lods
cld
testb
ss
fnstenv
cmc
pushf
jp
add
add
aaa
and
scas
inc
enter
add
sbb
and
mov
inc
pop
clc
inc
mov
add
sarl
cmp
inc
sbb
add
jo
pushf
push
add
xchg
add
jle
add
inc
add
add
add
into
lcall
push
loop
ret
in
rolb
into
das
mov
add
add
mov
add
ret
or
inc
add
stc
mov
stos
punpckhbw
adc
jecxz
cmpsb
add
xchg
cltd
lds
add
push
add
or
or
rolb
int
push
out
lret
xor
call
lcall
gs
fistpl
cs
add
xchg
add
int
adc
daa
jnp
add
aas
hlt
add
add
xor
add
add
ljmp
and
mov
add
mov
iret
aaa
cmc
inc
add
into
sub
xchg
and
mov
aam
dec
dec
addr16
mov
int
jle
add
mov
in
inc
add
jg
add
mov
test
movsb
add
jns
xchg
add
int
add
aaa
shrl
or
scas
in
lcall
push
add
xor
dec
out
dec
inc
add
add
add
push
outsb
push
jnp
mov
ficoml
add
pop
movsb
add
jo
xor
fnsave
ds
push
push
repnz
addb
mov
lods
lret
shr
push
dec
xor
xor
movb
ret
cmp
add
add
mov
and
mov
add
outsl
add
add
sbb
add
add
sub
add
add
mov
mov
rolb
sub
in
data16
repz
cmp
add
leave
push
mov
mov
add
mov
mov
xchg
add
outsb
lcall
test
sub
mov
pop
hlt
add
mov
and
mov
mov
add
mov
add
add
dec
lods
cs
add
shl
add
insb
flds
push
push
add
pop
add
jae
add
in
mov
add
add
enter
sub
lods
and
lcall
add
add
idivl
dec
icebp
push
pop
inc
add
popf
inc
push
andl
add
push
add
stc
addr16
addl
inc
add
aam
xor
les
cli
push
mov
maxps
add
aad
add
fidivrs
repnz
rolb
out
movsl
add
add
xchg
xchg
add
cmpsb
add
lds
adc
add
lea
jg
add
add
loopne
fbstp
jne
add
add
outsb
inc
jo
lea
or
add
jle
mov
stos
lock
mov
dec
jne
das
xchg
jae
add
test
xor
xchg
add
push
jnp
dec
lods
jp
push
add
add
popf
dec
arpl
push
addb
add
add
add
jmp
hlt
add
jnp
xorl
int3
js
stos
cmp
xchg
add
loopne
xchg
add
add
outsl
test
adc
fsubrs
nop
add
dec
repnz
mov
icebp
dec
sub
lret
mov
add
push
in
movsl
in
aad
mov
lahf
out
lock
add
add
push
add
out
mov
movb
add
add
xchg
cmp
ret
add
hlt
add
add
fbld
subl
dec
loopne
mov
mov
arpl
xchg
push
sti
int3
in
fadds
inc
add
add
push
out
add
mov
sbb
jecxz
cli
inc
add
mov
ficomps
adc
ret
ja
add
add
addr16
add
add
lds
push
add
dec
xchg
jo
lock
cmc
decb
add
popf
mov
pop
int
jne
add
cwtl
cwtl
and
fistl
add
pop
xor
mov
mov
nop
add
cs
adc
push
xchg
add
rolb
cltd
ljmp
add
insb
mov
sbb
add
testb
pop
jo
and
xor
jmp
fnstsw
sbb
add
and
mov
add
lods
cwtl
pushf
inc
add
dec
pop
or
jo
cmp
sti
adc
lods
push
outsl
xchg
mov
xchg
add
jmp
rolb
test
adc
xor
jne
push
add
inc
sti
mov
add
inc
add
add
jns
add
add
mov
inc
pop
scas
sbbl
ds
sbb
add
add
adc
les
mov
jmp
leave
insl
pop
pop
popf
push
xchg
add
add
sub
mov
add
sbb
add
rolb
mov
add
jae
pop
in
or
dec
xor
repnz
sub
add
add
scas
jo
in
out
js
jg
add
fisttpll
rolb
push
add
sbb
inc
add
sti
cltd
adc
scas
xchg
add
add
lret
xchg
add
outsb
stos
dec
icebp
addb
add
lods
push
xchg
int3
pmulhw
add
popf
mov
add
add
movsl
mov
add
cmovne
add
add
mov
add
add
jb
push
testb
loopne
fs
in
std
lods
mov
aas
add
add
push
rcll
add
add
add
add
push
add
add
test
jno
adc
jmp
xchg
add
out
add
adc
add
hlt
add
out
lcall
rolb
aas
mov
mov
test
jp
loopne
icebp
in
inc
xor
inc
pop
mov
sub
in
or
xchg
add
add
xchg
add
mov
xor
test
inc
mov
stc
out
adc
enter
sbb
jns
sahf
inc
add
inc
mov
pop
sbb
call
mov
movb
add
out
cmp
cmp
add
sahf
mov
test
and
add
or
mov
add
pop
xor
cmp
add
mov
out
icebp
mov
loope
pushf
pop
rolb
jg
pusha
add
lock
out
ds
mov
jns,pt
mov
add
stc
popf
sub
add
in
add
nop
add
adc
dec
xor
dec
ljmp
add
mov
pushf
lcall
xlat
jo
pop
das
nop
add
add
rolb
cmp
adc
add
cmp
add
loope
mov
out
stc
rcr
aaa
in
xor
lds
add
sahf
sub
add
add
cmp
push
cli
lds
add
sbb
insb
loop
jo
jp
loop
mov
inc
xchg
jbe
sub
add
pop
and
mov
andl
add
sub
lea
int3
sub
dec
loop
movb
add
loopne
inc
add
inc
data16
cmp
add
mov
testl
nop
add
ds
pop
push
fnstsw
enter
nop
add
lea
mov
and
add
push
dec
lcall
in
dec
jp
xor
mov
pop
mov
jg
inc
add
add
lea
add
add
add
add
add
xor
fildl
mov
xchg
xchg
imul
movsl
push
add
add
and
mov
add
add
or
mov
pop
push
inc
add
push
pop
bound
mov
add
add
add
out
insb
movl
add
add
add
add
add
xchg
add
fcmove
add
mov
add
mov
pop
int
adc
arpl
lcall
adc
addb
out
movb
addb
jmp
movb
add
adc
add
shrl
bound
mov
out
pop
add
inc
add
mov
pop
push
add
negl
add
jb
cmpsb
add
add
addb
hlt
add
movsb
add
add
add
add
rcll
mov
repz
push
add
xor
cmp
mov
add
enter
pop
repz
xor
scas
inc
jns
adc
cld
stos
imul
pusha
add
pop
imul
sbb
lret
clts
add
add
std
fnstcw
nop
add
mov
repnz
push
stos
fisubs
add
add
hlt
add
dec
or
mov
leave
les
ret
add
pop
jp
mov
dec
add
add
loop
roll
adc
xor
xlat
les
or
jp
and
dec
insl
or
cli
adc
pop
popf
leave
lods
in
pop
dec
xlat
push
add
sub
add
push
mov
addb
mov
mov
mov
add
std
jb
push
xchg
adc
add
aam
loop
xchg
testb
sbb
incl
lcall
arpl
lret
frstor
mov
cmp
xchg
inc
add
in
rolb
dec
and
mov
fimull
xor
inc
add
call
add
sub
add
enter
hlt
add
add
add
or
mov
rolb
aaa
or
mov
leave
or
pop
jl
les
mov
in
fsubrs
add
mov
imul
add
add
pop
flds
mov
pop
xchg
gs
xchg
add
fsubrs
loop
xor
push
add
pop
lcall
imul
ja
hlt
add
pusha
add
stos
cmp
add
sub
fs
add
jb
push
pop
mov
sahf
outsl
fisubrl
add
pop
add
dec
mov
ret
data16
mov
add
add
insl
mov
out
repz
add
gs
movb
add
out
adc
lret
testl
inc
mov
add
stos
mov
add
add
movb
aaa
cld
test
imul
add
mov
inc
mov
data16
mov
mov
leave
push
add
adc
aad
push
add
add
aad
xchg
push
into
mov
add
add
adc
hlt
add
mov
add
dec
jmp
mov
add
jno
bound
mov
cli
mov
sub
adc
adc
and
mov
push
add
cmp
and
mov
push
mov
inc
pop
ret
pop
sbb
jecxz
add
cmp
add
mov
je
sbb
pop
loop
sub
icebp
ljmp
pop
in
push
add
add
add
xcrypt-cfb
add
repnz
clc
data16
jno
rolb
clc
jns
adc
flds
mov
push
les
pop
stos
sub
stc
aaa
pop
dec
mov
add
add
add
add
in
add
cmp
sti
int3
imul
add
mov
out
sub
je
mov
add
roll
sub
ja
xchg
add
add
fiadds
add
out
rorl
add
mov
dec
test
cmp
mov
add
sub
mov
pop
mov
add
outsb
mov
add
add
add
lods
repnz
sar
push
add
push
mov
pusha
add
mov
add
rolb
inc
xchg
sbb
add
xor
rolb
pop
push
add
add
push
imul
test
rolb
mov
fnstsw
or
add
add
fsubl
dec
mov
push
icebp
jno
negl
push
sti
fistpl
add
sub
add
add
add
icebp
leave
mov
data16
add
xor
xor
push
lea
jge
adc
movb
and
idiv
outsl
xor
movsl
push
push
scas
cmp
mov
les
fstps
jmp
add
lret
leave
inc
add
mov
push
add
add
add
and
mov
out
sub
mov
xchg
xchg
cli
sbb
inc
or
mov
add
dec
xchg
loopne
clc
jns
add
add
add
or
xor
pop
cmc
popf
dec
push
add
mov
loope
add
xor
outsb
lahf
sbb
dec
adc
or
clc
ja
push
fnstsw
jg
rolb
push
add
add
add
rcll
loop
stos
mov
add
add
sbb
mov
stos
add
inc
add
scas
and
dec
stc
lcall
aaa
loope
dec
je
dec
cmp
dec
adc
pop
jg
jbe
int3
cmp
clc
lcall
add
lock
add
add
imul
lea
lea
outsb
push
add
add
mov
fisttps
fimuls
cmp
add
jno
add
jge
outsl
in
aam
sbb
add
jb
loopne
xor
jp
add
or
mov
cmpsb
add
testb
jbe
push
add
lahf
jge
add
and
add
cmp
imul
mov
addb
rorl
mov
fdivs
mov
mov
sbb
push
sbb
mov
data16
xchg
jl
add
rolb
jbe
inc
outsb
aad
jg
iret
call
shl
add
jmp
mov
mov
inc
push
add
adcl
add
add
addr16
loope
aas
loop
test
add
add
cmp
add
scas
lcall
xchg
add
add
das
lahf
push
add
push
add
mov
stos
xor
and
adc
push
add
shl
add
cmpsl
mov
call
push
scas
test
add
das
out
add
mov
add
into
or
add
scas
xchg
cmpl
jg
add
push
in
test
add
jle
fistl
aas
ret
maxps
mov
add
ret
dec
xor
pushf
jo
loopne
push
jecxz
add
cwtl
stos
push
add
cltd
mov
xor
ljmp
cs
call
xor
dec
stos
xor
ja
add
lcall
ljmp
add
mov
lods
rolb
mov
mov
bound
mov
cmp
add
add
dec
xor
fists
add
fwait
enter
mov
add
add
add
add
ficoml
add
test
imul
insl
cmc
add
lret
adc
lock
cld
cld
repz
xchg
stc
sbb
test
sbb
mov
jno
outsl
inc
sbb
add
add
in
data16
add
lods
cmc
and
xor
xor
fnstenv
addb
add
add
xor
mov
fldt
add
jno
add
movsl
xlat
aaa
inc
add
add
push
add
xor
pop
sahf
ds
scas
cmp
xlat
jle
sbb
add
mov
add
aaa
rorl
xlat
in
sub
mov
cs
add
lahf
jp
add
clc
push
sbb
xchg
mov
add
add
test
xor
add
mov
mull
out
popf
lret
mov
add
add
outsb
mov
add
pop
scas
add
movsb
add
jbe
aad
out
add
rolb
cmp
add
xchg
add
mov
add
cmp
add
add
sub
inc
add
insb
inc
fistpl
shll
bound
mov
push
add
add
pop
adc
repz
sbb
mov
jg
add
sub
add
lods
sbb
int
add
fcomps
inc
add
sub
add
in
pop
jnp
mov
or
call
or
inc
fs
add
cmp
xor
jg
add
add
cltd
jp
popa
inc
add
xor
lock
popf
test
orl
pop
cmpsb
add
insb
mov
pop
mov
pop
cmp
je
jmp
xchg
sub
fdiv
add
in
popf
jg
xchg
add
add
addr16
pop
mov
out
dec
cmpsl
mov
push
add
add
mov
add
aas
mov
sub
add
add
add
sbb
sbb
pushf
rcll
add
xchg
add
add
jle
add
adc
mov
pop
jae
add
sahf
aas
sub
add
movsb
add
outsl
jmp
jne
in
dec
cmp
xchg
sti
clc
test
add
mov
add
xor
add
mov
and
mov
mov
loope
loopne
out
addb
out
inc
add
sbb
add
mov
ret
aad
add
add
add
clc
int
add
stc
xchg
inc
add
pop
add
add
push
add
mov
add
rcll
mov
rcll
xchg
mov
push
jecxz
add
cmp
push
add
cwtl
jae
jp
in
ficomps
fldcw
inc
and
mov
add
jle
repnz
push
add
add
mov
jmp
loop
xor
testb
jne
ds
sbbl
adc
dec
dec
dec
je
push
xlat
add
or
push
jecxz
out
mov
in
sahf
cwtl
mov
les
xchg
roll
add
jae
stos
fstpl
add
mov
lods
test
add
icebp
dec
int3
mov
add
js
add
xor
push
scas
outsb
pusha
add
push
loope
add
add
imul
pusha
add
addr16
add
cli
or
add
dec
les
mov
add
mov
ret
fsubl
mov
stc
xchg
add
pop
pop
push
push
add
mov
add
inc
loop
popa
cmp
mov
cmpsb
add
sbb
push
xlat
rolb
mov
push
jno
lret
sub
add
aaa
outsb
cmp
cmpsl
inc
add
in
addb
rolb
xchg
aad
out
stos
lret
sti
pushf
pop
addb
add
les
inc
in
xor
add
test
add
add
mov
add
add
add
jo
pop
lahf
cmp
jmp
mov
add
add
jbe
mov
sub
inc
add
mov
mov
mov
testl
nop
add
add
ret
iret
xor
cltd
or
mov
add
xor
adc
push
add
or
shr
add
add
add
push
add
add
mov
loopne
psubusb
push
sub
and
add
add
cmp
ja
cmp
lret
stos
and
pop
or
pop
mov
mov
add
add
outsl
roll
mov
sub
lods
lds
push
adc
xchg
cmpsl
mov
psubq
add
inc
add
and
add
ds
mull
call
add
mov
mov
add
and
lret
sbb
daa
in
add
movsl
scas
add
add
mov
add
out
xchg
add
data16
pop
cmc
jle
xchg
or
add
mov
sahf
and
js
push
add
lret
add
add
mov
inc
add
pushf
mov
cmp
mov
jo
mov
add
out
mov
insb
xchg
push
inc
lock
sub
add
add
push
add
sbb
test
xchg
add
stos
call
push
decl
imul
mov
jg
add
add
aad
mov
sub
in
filds
mov
stos
jno
or
add
add
xor
mov
jmp
push
mov
add
add
or
iret
jecxz
jmp
add
mov
rolb
fldenv
in
add
inc
test
mov
add
jg
iret
imul
mov
add
add
mov
pushf
mov
test
add
popa
in
roll
mov
lock
nop
add
popa
daa
adc
into
incb
pop
or
dec
cmp
add
or
and
mov
test
mov
lea
in
das
data16
add
fisttpl
out
pop
mov
push
add
cmp
mov
call
adc
pop
popf
imul
mov
add
add
mov
stos
rolb
add
and
rolb
push
add
test
cmpsl
cmp
xlat
xchg
cmp
add
insb
sub
or
add
inc
popl
ss
cltd
pop
mov
add
lahf
mov
cmp
add
sti
sbb
add
jns
add
and
stos
ja
add
add
mov
and
add
add
xchg
jne
add
push
sub
cmp
out
add
cli
push
add
cmp
add
dec
mov
lock
inc
jp
pop
out
add
cmp
daa
ds
aam
cmp
jle
sub
push
add
icebp
sbb
rolb
or
test
inc
add
add
rolb
adc
and
mov
mov
jle
add
cmpl
insb
push
cmpsl
xor
iret
scas
add
dec
fiaddl
mov
add
mov
jne
pushl
push
add
lock
mov
sti
ljmp
dec
sub
add
bound
mov
xchg
ja
pop
repnz
aas
push
add
cs
add
add
rolb
add
mov
add
add
add
mov
sbb
repz
jmp
add
xchg
add
sub
add
add
mov
cmp
mov
sub
into
inc
xor
mov
add
mov
sbb
xor
add
addb
scas
jle
in
mov
jne
pop
sub
xor
loop
std
add
pop
mov
mov
sbb
add
add
fadds
inc
add
mov
jl
and
add
sti
mov
stc
mov
iret
lock
mov
pop
das
and
mov
add
popa
inc
int3
sti
inc
loope
imul
mov
popa
aas
shll
push
je
jae
push
add
iret
adc
fnstcw
fdivl
push
jecxz
add
pop
stc
rolb
adc
cmp
cmp
dec
mov
in
inc
data16
out
movsl
push
add
push
decb
enter
push
mov
fwait
pop
test
add
xchg
push
sti
mov
push
add
adc
out
lret
ret
frstor
add
pop
fdivrp
ss
adc
ja
push
sub
add
xor
add
add
mov
test
movl
cmp
mov
add
mov
test
std
lds
loope
add
push
add
outsb
cmp
cmp
jmp
cmpsl
jae
test
mov
ja
cmpsl
inc
add
sub
jmp
add
xor
or
inc
add
inc
pop
pop
inc
add
fistl
es
xor
add
mov
add
add
mov
dec
xchg
mov
ficoms
or
enter
std
gs
add
aam
cs
xchg
aad
add
fwait
xchg
popf
leave
xorl
pop
movsb
add
add
add
adc
and
fistpll
enter
push
sub
inc
xchg
and
mov
imul
push
add
add
mov
sbb
or
pusha
add
data16
imul
mov
mov
stc
leave
and
add
fmuls
add
add
add
add
loopne
jl
jae
fs
sbb
jnp
mov
add
nop
add
add
cmc
fistl
mov
test
fbld
add
loop
mov
shl
lcall
or
pop
leave
cmp
inc
add
mov
decl
stos
int3
into
leave
dec
in
jae
add
add
mov
stc
mov
add
add
add
pop
outsb
in
in
add
ds
popf
lods
in
jle
lods
pop
dec
push
rolb
dec
out
roll
add
sbb
pop
les
xor
inc
add
mov
iret
rolb
or
cmc
nop
add
add
push
add
cmp
xlat
mov
add
and
mov
add
mov
add
mov
add
add
test
pusha
add
aad
mov
add
cltd
popf
movsb
add
add
mov
mov
dec
aad
std
nop
add
jo
dec
hlt
add
insl
mov
inc
jbe
rolb
shrl
add
push
add
add
dec
and
add
add
jns
or
inc
or
int
addr16
popf
ret
cmp
out
fstp
lcall
jp
int3
push
add
sbb
add
in
enter
lcall
clc
pop
push
add
imul
incb
add
pop
cmc
mov
add
add
add
add
and
addb
fcmovb
add
ret
imul
mov
adc
push
popa
xor
ja
add
xor
loope
clc
push
add
and
mov
sub
xor
cld
xor
add
or
popf
movsb
add
pop
imul
add
test
add
add
add
pushf
pop
std
ds
fwait
sti
ret
xchg
pop
push
and
push
add
out
add
scas
pop
lds
add
push
add
test
add
push
lret
push
add
xchg
xor
enter
push
insb
adc
lcall
add
add
inc
aad
ret
add
sub
daa
repz
add
lods
std
inc
loop
and
out
push
add
mov
fimuls
add
mov
jae
push
add
pop
jnp
daa
rolb
pop
inc
rolb
pushf
push
mov
mov
jmp
sti
addr16
xchg
add
ret
cmp
jo
bound
mov
mov
testl
add
aaa
mov
pushf
mov
and
adc
adc
add
or
movb
imul
in
bound
mov
inc
daa
sub
xor
dec
fisttps
fcomps
add
mov
add
rcr
pop
xor
and
xchg
mov
xor
add
cs
sbb
add
adc
add
push
loopne
fidivl
mov
pop
push
mov
test
out
sbb
test
stos
jmp
std
mov
sbb
add
add
mov
push
add
ficompl
add
xor
les
jb
sahf
add
mov
js
test
repnz
iret
aas
dec
data16
add
xor
add
xchg
insb
sub
xlat
mov
inc
ret
jmp
or
sahf
and
mov
add
mov
or
sbb
add
adc
mov
pop
xchg
add
sub
or
add
jo
inc
adc
jp
xor
rolb
and
mov
add
add
rorl
dec
mov
test
ficompl
imull
inc
adc
test
pop
lock
pop
arpl
loope
rolb
mov
aam
push
jno
bound
mov
mov
inc
add
sbb
mov
addb
mov
add
cwtl
flds
add
add
add
add
fisttpl
add
mov
mov
xchg
add
outsl
mov
inc
add
add
and
mov
add
add
inc
add
aas
mov
addb
out
rolb
loopne
push
add
mov
lods
xchg
lock
jns
mov
add
out
jae
jg
xchg
in
sub
mov
ret
mov
ja
add
add
cmc
pop
fcoml
add
aam
xchg
add
mov
add
and
xchg
add
add
inc
add
add
add
mov
shll
adc
insl
hlt
add
in
in
and
add
stos
in
test
addb
cmp
add
arpl
pop
imull
dec
fwait
cmp
rolb
hlt
add
cmp
dec
or
mov
add
sahf
imul
add
mov
or
add
mov
mov
das
rorl
ja
sub
cmp
xchg
jp
ds
in
fstpt
add
testb
fdivs
mov
fdivrl
gs
iret
inc
add
xor
call
add
add
pop
or
add
add
add
add
jp
sbb
add
add
adc
xchg
repnz
sub
jp
xchg
popa
push
add
adc
in
rorl
adc
pushf
mov
addb
dec
inc
xchg
add
add
dec
adc
sbb
fwait
add
mov
and
cmp
push
add
frstor
test
add
enter
add
add
mov
ret
xchg
inc
add
mov
dec
or
add
add
lods
arpl
xor
pop
movsl
cmp
push
mov
cmp
jae
pop
movb
ret
das
xchg
add
lahf
out
test
add
add
addb
hlt
add
aaa
xchg
mov
bound
mov
sub
xchg
add
add
lcall
fistl
rol
add
add
mov
cmp
push
xchg
push
mov
insb
dec
ret
test
add
add
inc
loopne
dec
hlt
add
pop
pop
loop
mov
jg
jo
lcall
add
mov
xchg
cwtl
dec
scas
lcall
xchg
mov
in
fldt
sar
clc
adc
lret
pop
adc
adc
push
add
cmp
cwtl
rep
lahf
sub
sar
fwait
into
imul
in
jg
pop
std
adc
xor
push
add
add
mov
pusha
add
add
fsub
inc
add
shll
add
lock
adc
sbb
add
add
mov
lcall
mov
lret
pop
arpl
loope
add
add
inc
add
mov
icebp
cmp
dec
mov
jge
mov
cmpsb
add
outsl
sub
mov
lret
inc
add
std
pop
inc
test
repz
adc
add
add
jae
add
movb
add
rolb
orl
fyl2xp1
aad
mov
rolb
and
mov
mov
fmull
out
lods
imul
clc
in
add
movb
xlat
or
adc
pop
mov
and
mov
aas
xchg
fsubrs
add
mov
lret
add
fldt
mov
loopne
xchg
mov
insl
sub
add
add
or
xorl
fmulp
jbe
sbb
addl
mov
mov
push
cltd
dec
sbb
add
mov
add
jg
add
push
inc
ds
add
mov
pop
call
and
into
add
jg
cli
in
and
mov
pop
fldt
out
mov
enter
mov
add
rolb
add
out
cwtl
out
add
shll
mov
mov
outsb
pop
jl
stos
mov
add
add
jne
repnz
add
stc
into
test
test
inc
add
popf
mov
jae
add
add
mov
sbb
mov
add
into
mov
pop
in
rolb
push
add
sarl
xchg
sbb
xchg
mov
inc
add
movsl
in
inc
add
mov
aad
sbb
mov
pop
out
sub
mov
jo
cltd
xlat
sub
test
add
jmp
add
loop
lret
add
dec
and
mov
lods
test
int3
xor
test
rcll
add
add
add
push
add
xor
add
lahf
fisttpll
add
add
mov
jmp
lcall
mov
mov
cmp
add
sbb
mov
mov
or
add
fwait
je
inc
cwtl
aad
add
dec
adc
pop
jecxz
cmp
push
add
dec
gs
mov
add
add
add
mov
adc
add
jb
push
lods
pushf
pop
lods
lods
mov
movsb
add
sbb
add
xchg
add
add
mov
sub
mov
add
add
cmovle
in
adc
add
fnstsw
or
repnz
push
add
pop
push
add
dec
jp
icebp
std
xor
mov
mov
add
lret
cmc
adc
adc
jl
insl
aas
fdivrp
sub
mov
ja
add
add
add
call
add
sahf
rolb
ret
add
add
dec
mov
scas
jnp
push
add
mov
add
aas
mov
add
add
pop
sub
add
mov
dec
lret
add
jo
mov
add
cmp
sub
loope
add
les
popf
addb
add
jb
inc
fldcw
add
cmp
adc
call
mov
or
aaa
pop
sub
jecxz
jp
add
pop
and
sub
lds
shr
sahf
leave
pusha
add
xchg
add
stos
mov
cmpps
add
ja
add
pop
ret
dec
pushf
out
jb
je
daa
fcoms
add
dec
inc
push
loopne
hlt
add
add
add
pop
cmp
adc
insb
or
mov
aaa
ret
inc
add
jno
pop
icebp
pop
js
out
sub
mov
je
jecxz
add
movsb
add
sub
popa
mov
add
inc
subl
je
mov
adc
mov
add
push
add
xor
add
stos
addb
xor
lcall
mov
lods
les
addr16
call
test
popf
call
add
push
jo
mov
add
add
add
dec
sbb
cmpsb
add
cmp
aam
lahf
jb
lods
inc
add
add
mov
xchg
add
add
add
add
add
divl
lret
dec
arpl
cwtl
fiadds
sub
adc
push
add
loope
or
rolb
or
add
add
add
xor
popa
inc
add
add
push
add
mov
enter
add
aam
dec
stos
mov
outsl
adc
push
add
decb
testl
out
leave
mov
add
jno
add
push
add
add
xchg
outsl
and
pop
test
out
jecxz
xor
dec
mov
or
or
add
mov
jae
add
add
sub
and
inc
add
movl
lds
in
add
pop
or
and
mov
imul
pop
icebp
jp
pop
repnz
loop
cmp
add
imul
add
hlt
add
pop
add
add
f2xm1
add
add
je
or
leave
stc
rolb
add
add
add
add
outsl
xchg
jae
jne
int3
jle
pusha
add
js
cmpsl
and
mov
push
ja
fisubl
addb
add
repnz
jno
xorl
mov
xchg
lss
pop
mov
ljmp
out
xor
add
xchg
iret
mov
imul
loope
pop
mov
jnp
add
mov
xlat
pop
add
adc
cmp
stos
cld
insb
pmulhw
mov
add
and
mov
testb
or
cld
pop
dec
add
dec
daa
pop
jl
add
gs
cmc
imul
jp
testb
add
inc
add
data16
lea
or
flds
add
push
xor
imul
inc
inc
pop
in
xchg
dec
jle
ja
add
add
add
gs
xlat
fwait
dec
outsb
ja
add
add
and
in
pushf
jle
nop
add
sub
inc
inc
add
cmovns
icebp
mov
add
add
aas
scas
jge
ja
aad
clc
popf
push
add
sbb
fwait
push
les
xor
add
mov
xchg
add
jg
jns
jns
dec
adc
aas
data16
push
sbb
add
or
push
adc
imul
add
mov
inc
or
sbb
fwait
arpl
cmc
and
mov
sub
cli
mov
add
int3
shll
shll
loope
dec
cld
jl
rolb
addl
adc
inc
enter
xchg
add
rcrl
adc
cmp
jmp
add
leave
add
mov
inc
add
std
ret
push
add
stos
hlt
add
cmp
mov
jp
cmp
in
mov
push
add
add
sub
mov
out
add
imul
sub
insl
inc
add
xchg
mov
add
fcmovne
iret
add
mov
popa
sti
imul
mov
mov
xchg
adc
mov
or
popa
mov
push
add
cwtl
das
inc
inc
add
lahf
call
aam
cmp
add
outsl
call
and
mov
dec
mov
jnp
movb
add
jl
sub
adc
and
cli
sub
dec
std
fsubrl
enter
pop
pop
pop
add
je
lret
daa
test
pop
rolb
pop
adc
add
add
add
arpl
mov
add
add
mov
adc
xor
add
iret
pusha
add
frstor
test
aas
mov
add
xchg
lahf
outsl
xor
dec
sti
std
mov
cmp
adc
add
mov
and
add
addb
add
add
add
mov
inc
dec
push
add
add
sub
pop
cmp
lock
add
mov
rolb
je
fcompl
inc
repz
pop
push
jnp
adc
xchg
xchg
sbb
add
sub
push
push
add
cwtl
fsin
mov
add
add
loope
add
add
add
inc
xor
in
outsb
pusha
add
flds
add
xchg
add
aad
add
rcll
add
add
inc
and
lds
lods
adc
dec
in
mov
in
add
cmpsl
inc
add
rolb
adc
add
add
and
stos
lds
add
cltd
ret
add
add
pop
dec
rcrl
xor
mov
loopne
push
add
jno
add
and
int
inc
add
xchg
imul
push
dec
enter
xor
mov
xor
xor
imul
add
push
add
mov
add
iret
mov
mov
rolb
hlt
add
out
and
mov
add
add
sub
add
jmp
sbb
ret
inc
arpl
add
std
fnstcw
add
pop
inc
inc
add
orl
mov
xchg
cmp
xchg
add
cmpsl
sbb
data16
jne
add
and
pop
lods
add
jnp
add
mov
add
std
sub
add
test
ret
int
imul
push
add
in
xchg
add
sbb
imul
add
add
dec
xchg
clc
inc
pop
nop
add
mov
inc
add
add
aaa
add
arpl
in
add
add
xor
push
add
dec
in
adc
andl
ljmp
mov
xchg
add
sbb
add
xor
pop
pop
outsb
loopne
fisttps
add
add
mov
fsubs
add
jl
push
add
xchg
repnz
ret
sbb
add
clc
push
inc
push
add
add
mov
outsl
pusha
add
and
mov
add
pop
imul
push
sbb
les
bound
mov
dec
xor
dec
adc
lcall
add
lret
add
aaa
push
add
add
movsb
add
add
add
rolb
inc
out
cmp
add
mov
jns
gs
sahf
cmp
sub
add
repz
in
mov
add
ficomps
mov
xor
sub
aad
add
add
data16
jmp
test
pop
repz
mov
mov
jp
add
add
and
mov
push
mov
das
jecxz
add
pop
popa
jg
add
mov
lahf
xor
add
adc
jbe
movsl
addl
and
mov
test
add
ret
sbb
loopne
adc
aad
js
add
mov
mov
jl
add
add
dec
jns
imul
add
adc
les
add
arpl
cmp
add
add
adc
jns
add
mov
shll
inc
add
sub
add
mov
push
cld
dec
xor
mov
add
add
aam
aam
jbe
insl
cmc
inc
dec
sarl
out
mov
push
pop
or
jmp
jle
add
js
sbb
mov
and
mov
das
cld
lret
add
add
xor
testb
add
add
add
mov
add
add
outsb
out
repz
sub
sub
pop
jg
testb
aaa
imull
hlt
add
mov
inc
add
cmc
popf
mov
loope
mov
std
mov
add
mov
add
dec
sarl
mov
sbb
shll
push
push
add
pusha
add
repz
adc
testb
add
scas
testb
pop
imul
add
add
inc
add
addb
sub
cmc
lods
test
loopne
mov
sub
into
jo
insb
outsb
rolb
outsl
lods
mov
add
add
and
mov
mov
xor
add
sbb
mov
sub
add
pop
cmp
jae
add
lcall
add
pop
mov
add
mov
push
or
movsl
in
and
add
pop
mov
push
popa
jo
scas
ja
cmp
sbb
loopne
stos
daa
in
jo
je
scas
pushf
sbb
aam
sub
mov
and
add
add
cmpsl
decl
add
add
xor
pop
pop
ret
cmp
add
sbb
mov
adc
mov
rolb
loopne
cmp
add
mov
dec
sub
rolb
test
push
add
add
addb
pop
daa
push
mov
mov
add
add
nop
add
addb
jmp
outsb
xor
mov
insb
mov
mov
xchg
inc
sti
in
es
jo
cli
or
add
sub
lret
lret
mov
arpl
add
mov
add
es
add
xchg
cmp
add
insl
and
adc
add
add
push
inc
xchg
add
mov
and
mov
enter
mov
xorl
mov
push
add
sti
insl
test
xchg
lcall
and
mov
sub
rolb
mov
add
and
dec
aas
add
mov
mov
add
inc
add
repnz
jae
add
add
push
add
ja
out
mov
clc
repnz
jae
mov
add
xor
jbe
clc
repnz
jae
pop
add
add
shr
xor
add
clc
repnz
jae
or
add
repnz
jae
jmp
add
add
lea
clc
repnz
jae
add
cmc
xchg
add
cmp
nop
jmp
jle
add
add
in
rolb
xchg
ret
add
pop
add
add
into
movzwl
clc
repnz
jae
fiaddl
jbe
add
popa
aam
add
add
clc
repnz
jae
jle
add
or
inc
clc
repnz
jae
push
shlb
add
in
inc
add
icebp
add
add
jge
add
add
fwait
cld
nop
jmp
xor
add
or
nop
jae
bound
aad
xchg
clc
repnz
jae
add
add
add
test
nop
jae
leave
pop
jecxz
add
enter
mov
xchg
ret
dec
or
add
fistl
repnz
jae
push
rol
add
ja
icebp
sbb
repnz
jae
add
add
int
add
push
mov
xchg
ret
cltd
inc
add
add
xchg
clc
repnz
jae
pop
push
jg
in
jge
push
push
mov
xchg
ret
push
add
add
mov
cmp
sub
add
add
imul
repnz
jae
inc
add
cmp
mov
push
add
mov
clc
repnz
jae
lods
addb
pop
leave
or
repnz
jae
cli
scas
jl
add
pushf
jne
clc
repnz
jae
or
add
add
fwait
cld
nop
jmp
inc
dec
cmp
add
and
clc
repnz
jae
ja
add
add
lock
inc
add
xor
add
clc
repnz
jae
mov
mov
clc
repnz
jae
jbe
add
jae
add
inc
mov
nop
jae
lods
push
or
mov
repnz
jae
lret
jmp
pop
pop
dec
pop
push
fwait
cld
nop
jmp
movsb
aad
add
jg
add
nop
add
rcrb
add
add
aas
cmp
pop
add
fwait
jne
clc
repnz
jae
add
cmp
add
add
mov
fwait
cld
nop
jmp
scas
add
add
jecxz
and
clc
repnz
jae
mov
fidivl
mov
clc
repnz
jae
add
add
pop
add
mov
clc
repnz
jae
add
add
jl
sbb
repnz
jae
add
add
rep
push
mov
xchg
ret
inc
adcb
dec
pop
clc
repnz
jae
pop
aad
jle
cmp
add
add
push
mov
xchg
ret
lret
ja
xor
add
clc
repnz
jae
push
add
lret
pop
es
add
add
mov
sahf
add
test
add
clc
repnz
jae
dec
fcoml
loop
imul
pushf
or
add
add
or
add
dec
arpl
insl
mov
clc
repnz
jae
add
add
dec
add
dec
mov
jmp
add
or
add
xor
jnp
lret
clc
repnz
jae
add
add
fcompl
mov
add
and
repnz
jae
ja
lods
add
add
repnz
jae
aad
sar
pop
ja
lcall
jae
add
add
les
popf
jne
clc
repnz
jae
add
mov
clc
repnz
jae
add
jbe
xor
clc
repnz
jae
add
scas
jg
push
clc
repnz
jae
add
dec
add
jg
add
add
add
repnz
jae
add
sarl
out
add
add
or
mov
mov
cmp
ret
add
jmp
add
pop
insl
xor
clc
repnz
jae
add
add
movb
inc
clc
repnz
jae
add
add
lret
push
add
mov
push
mov
xchg
ret
cmp
add
repnz
jae
lret
add
cltd
inc
add
cld
nop
jmp
pop
dec
inc
mov
pop
pop
clc
repnz
jae
dec
add
add
insb
insl
sub
clc
repnz
jae
add
jl
add
adc
cltd
push
clc
repnz
jae
add
rol
xor
cmp
mov
xchg
ret
insb
add
add
mov
add
fwait
cld
nop
jmp
jbe
add
mov
jbe
clc
repnz
jae
add
and
add
add
pop
aad
add
add
add
push
xchg
add
fisubs
repnz
jae
add
add
add
add
mov
add
add
jl
cmc
add
add
add
add
pushl
push
mov
xchg
ret
push
add
add
mov
add
repnz
jae
in
scas
add
rolb
xchg
add
xabort
nop
jae
fmull
add
popl
clc
repnz
jae
push
cltd
push
in
add
jecxz
add
mov
clc
repnz
jae
add
push
clc
repnz
jae
add
add
div
clc
repnz
jae
jle
xchg
add
add
clc
repnz
jae
pop
add
add
test
push
add
fwait
cld
nop
jmp
ja
in
pop
stos
add
clc
repnz
jae
add
add
leave
aad
mov
clc
repnz
jae
push
cltd
add
sar
repnz
jae
add
add
dec
add
add
je
clc
repnz
jae
fiaddl
or
mov
clc
repnz
jae
mov
mov
add
and
mov
and
clc
repnz
jae
push
add
push
jge
mov
repnz
jae
add
push
add
pop
push
push
mov
xchg
ret
cmp
add
xor
clc
repnz
jae
dec
imul
adc
add
clc
repnz
jae
cltd
jbe
shl
add
jmp
add
add
mov
add
pop
add
jle
mov
add
clc
repnz
jae
dec
ja
xchg
enter
pop
add
clc
repnz
jae
add
cli
or
clc
repnz
jae
add
add
mov
mov
xchg
ret
add
add
add
test
or
add
repnz
jae
or
add
xbegin
sbb
add
ja
pop
inc
add
add
add
clc
repnz
jae
add
movsl
scas
push
clc
repnz
jae
or
add
push
adc
xchg
xor
mov
xchg
ret
dec
ja
jl
dec
imul
mov
xchg
ret
add
add
fwait
cld
nop
jmp
add
leave
in
add
rorb
adc
add
aad
add
add
add
pop
fwait
cld
nop
jmp
shlb
lret
add
lea
clc
repnz
jae
add
add
mov
sub
fadds
xchg
ret
add
pop
add
add
mov
clc
repnz
jae
add
push
dec
add
and
aam
xchg
lret
mov
push
mov
xchg
ret
xchg
es
cs
insb
fwait
cld
nop
jmp
push
mov
les
or
jge
clc
repnz
jae
add
jle
jbe
inc
test
dec
and
push
mov
xchg
ret
add
add
cld
nop
jmp
add
add
xchg
add
add
add
push
mov
xchg
ret
jle
add
add
icebp
adc
dec
test
fwait
cld
nop
jmp
add
jge
add
add
cltd
dec
clc
repnz
jae
add
imul
jp
clc
repnz
jae
jge
xchg
add
add
ret
dec
inc
push
mov
xchg
ret
add
jge
in
aad
add
jmp
roll
xchg
ret
add
jge
add
inc
add
mov
clc
repnz
jae
add
ja
add
insl
pop
push
mov
xchg
ret
add
dec
leave
add
les
push
mov
xchg
ret
inc
add
add
dec
mov
fwait
cld
nop
jmp
faddl
push
xor
clc
repnz
jae
jle
add
movsb
leave
mov
add
repnz
jae
push
add
push
add
nop
jae
add
add
add
add
cld
incl
mov
inc
in
inc
add
and
repnz
jae
add
les
add
clc
repnz
jae
add
add
scas
push
add
repnz
jae
push
cmc
mov
cltd
push
dec
mov
push
mov
xchg
ret
add
add
aad
aas
jecxz
mov
add
insb
pop
scas
xchg
add
mov
jb
scas
xor
push
mov
xchg
ret
add
add
mov
pop
push
push
mov
xchg
ret
rol
mov
add
xor
add
add
push
add
test
add
add
and
add
repnz
jae
add
add
cli
add
fwait
cld
nop
jmp
movsb
add
sarl
ja
in
popa
clc
repnz
jae
add
add
add
in
pop
and
mov
mov
loop
add
dec
or
dec
das
jne
clc
repnz
jae
add
or
mov
xchg
ret
mov
movl
add
add
repnz
jae
cmp
jg
pop
sub
fwait
cld
nop
jmp
dec
add
aas
add
and
add
nop
jmp
add
mov
les
aas
adc
and
add
add
jbe
icebp
add
xchg
add
data16
test
repnz
jae
faddl
add
nop
jae
add
dec
add
add
sahf
sub
clc
repnz
jae
add
add
jecxz
mov
fwait
cld
nop
jmp
bound
add
add
mov
clc
repnz
jae
add
sbb
repnz
jae
add
add
les
xor
cwtl
pop
clc
repnz
jae
add
in
pop
cmp
fwait
cld
nop
jmp
add
jg
fwait
cld
nop
jmp
leave
add
or
dec
pop
mov
jb
or
nop
jae
icebp
add
or
and
fwait
cld
nop
jmp
add
xchg
cmc
pop
add
shr
jmp
add
push
push
add
add
in
fsubrs
fwait
cld
nop
jmp
mov
add
add
or
std
add
add
adc
ret
mov
add
add
clc
repnz
jae
cmp
jg
jecxz
add
in
leave
clc
repnz
jae
add
cmc
add
sahf
add
into
xor
clc
repnz
jae
add
mov
add
xchg
pop
xor
push
mov
xchg
ret
add
add
push
and
mov
xchg
ret
push
add
insb
add
add
jmp
mov
add
add
mov
jmp
jmp
push
add
insb
fcompl
add
mov
rolb
xlat
in
push
clc
repnz
jae
add
lret
push
mov
lock
testl
add
add
fwait
cld
nop
jmp
mov
jmp
add
add
add
fwait
cld
nop
jmp
movsb
add
push
add
add
push
flds
xchg
ret
cltd
add
bound
cld
nop
jmp
jl
add
add
add
nop
jae
movsb
push
pop
jg
add
mov
clc
repnz
jae
add
add
icebp
aas
cmp
add
repnz
jae
mov
imul
push
mov
xchg
ret
jecxz
pop
leave
add
mov
xchg
ret
add
push
add
mov
clc
repnz
jae
dec
add
add
add
mov
repnz
jae
add
insb
add
rcll
aad
add
add
imul
sti
fwait
cld
nop
jmp
mov
fidivrl
imul
nop
jae
add
jl
add
je
clc
repnz
jae
inc
add
clc
repnz
jae
mov
add
inc
add
add
inc
loopne
mov
xchg
ret
jmp
add
add
push
push
add
mov
nop
jae
faddl
ja
add
add
clc
repnz
jae
fsub
cmpb
scas
mov
jmp
call
fiaddl
add
jle
clc
repnz
jae
add
icebp
ja
add
add
stc
div
fwait
cld
nop
jmp
add
add
jg
dec
push
clc
repnz
jae
inc
add
scas
and
fwait
cld
nop
jmp
add
add
aas
icebp
cli
cs
clc
repnz
jae
add
add
add
mov
xchg
ret
add
add
push
mov
xchg
ret
add
jg
inc
hlt
add
faddl
xchg
ret
or
or
movsb
pop
jbe
das
pop
push
mov
xchg
ret
jmp
cltd
bound
icebp
add
xor
fwait
cld
nop
jmp
movsb
add
xchg
leave
add
xchg
sub
test
idiv
clc
repnz
jae
add
add
add
fwait
cld
nop
jmp
dec
pop
add
aad
dec
out
add
or
fwait
cld
nop
jmp
add
movsb
add
andl
jae
mov
jecxz
ret
mov
fwait
cld
nop
jmp
jmp
dec
push
fiaddl
push
pop
add
add
jbe
mov
repnz
jae
add
add
cld
nop
jmp
pop
jbe
dec
aad
lods
mov
mov
stc
inc
add
add
imul
movb
mov
xchg
ret
add
add
dec
movzwl
push
mov
xchg
ret
scas
lods
add
mov
out
add
add
add
shrl
repnz
jae
add
cmp
add
clc
repnz
jae
add
add
mov
mov
mov
nop
jae
add
add
pop
push
push
mov
xchg
ret
add
xchg
rolb
jne
add
fwait
cld
nop
jmp
add
insb
inc
xchg
cli
fmuls
nop
jmp
aas
add
push
xchg
add
add
clc
repnz
jae
mov
add
popa
fwait
cld
nop
jmp
leave
add
cmp
add
mov
clc
repnz
jae
xorb
inc
add
scas
xor
fwait
cld
nop
jmp
addb
add
push
mov
xchg
ret
add
add
pop
add
aaa
dec
lods
push
mov
xchg
ret
add
inc
fbstp
sar
nop
jae
add
cltd
cltd
jge
sahf
pop
push
mov
xchg
ret
es
add
xor
xor
cld
je
fwait
cld
nop
jmp
dec
inc
dec
ja
mov
clc
repnz
jae
add
add
outsb
push
push
mov
xchg
ret
add
add
mov
add
repnz
jae
ja
push
add
xchg
les
jnp
fwait
cld
nop
jmp
add
rolb
dec
add
pushf
push
clc
repnz
jae
add
push
or
xor
add
xlat
xchg
jae
xchg
add
add
adc
add
clc
repnz
jae
add
mov
dec
mov
fwait
cld
nop
jmp
ja
jl
jg
stos
je
clc
repnz
jae
pop
pop
add
or
fwait
cld
nop
jmp
jecxz
jg
cltd
add
add
add
add
clc
repnz
jae
add
add
nop
jmp
pop
add
aad
xor
add
push
mov
xchg
ret
aas
add
lret
add
push
repnz
jae
add
add
xchg
popa
jmp
add
repnz
jae
aas
add
jns
mov
add
fwait
cld
nop
jmp
movsb
add
add
andl
clc
repnz
jae
add
adc
nop
jae
add
ja
add
dec
es
adc
clc
repnz
jae
add
jo
repnz
jae
add
ja
and
clc
repnz
jae
cmc
jle
add
mov
fwait
cld
nop
jmp
add
add
mov
dec
clc
inc
add
add
jbe
daa
lahf
add
push
mov
xchg
ret
sahf
sahf
add
jecxz
jmp
jae
add
add
leave
mov
stos
add
clc
repnz
jae
add
add
les
mov
or
sbb
add
clc
repnz
jae
shll
lret
cld
nop
jmp
xor
in
jmp
bound
inc
fiadds
xchg
ret
cmp
dec
movsb
add
xor
add
clc
repnz
jae
add
add
add
jg
clc
repnz
jae
add
add
add
mov
push
mov
xchg
ret
add
mov
leave
mov
nop
jae
push
cmc
add
add
cltd
mov
clc
repnz
jae
add
jg
lahf
add
push
mov
xchg
ret
add
add
mov
faddl
rcrl
adc
add
addb
add
inc
or
repnz
jae
add
add
dec
push
dec
pushl
push
mov
xchg
ret
xchg
add
add
bound
mov
push
push
clc
repnz
jae
dec
jle
add
shrl
inc
cmp
repnz
jae
cltd
add
push
add
repnz
jae
push
push
inc
add
ja
pop
push
mov
xchg
ret
ja
add
inc
icebp
add
add
call
clc
repnz
jae
or
les
add
pop
fwait
cld
nop
jmp
add
pop
inc
add
clc
repnz
jae
pop
or
add
add
loop
stc
cmpw
fwait
cld
nop
jmp
add
add
fwait
cld
nop
jmp
push
fcompl
xchg
sbb
fwait
rolb
xchg
ret
in
add
bound
imul
cmp
repnz
jae
cmp
leave
add
cli
or
nop
jae
push
push
add
cltd
add
lods
clc
repnz
jae
add
add
fiaddl
add
imul
nop
jae
dec
add
add
push
push
mov
xchg
ret
add
jecxz
mov
loopne
sbb
repnz
jae
dec
xchg
xchg
add
mov
fwait
cld
nop
jmp
add
xchg
imul
jmp
cmc
mov
add
mov
in
add
push
mov
xchg
ret
imul
mov
clc
repnz
jae
dec
jle
cli
inc
add
push
pop
add
fwait
cld
nop
jmp
pop
add
enter
jae
sahf
ja
add
add
mov
int
inc
add
jle
add
jecxz
in
pusha
push
mov
xchg
ret
addb
jg
jecxz
mov
mov
jmp
dec
inc
add
jg
aas
pop
add
push
mov
xchg
ret
or
jle
jge
or
cld
nop
jmp
add
pop
leave
pop
cmp
mov
or
cmp
ret
add
leave
jecxz
add
sbb
inc
fiaddl
xchg
ret
add
add
pop
push
repnz
jae
jge
bound
pop
imul
mov
xchg
ret
ja
add
add
cld
inc
add
pop
add
in
jle
add
mov
clc
repnz
jae
pop
add
add
in
call
clc
repnz
jae
add
movsb
add
add
fwait
cld
nop
jmp
add
jbe
ret
push
mov
xchg
ret
push
or
xor
add
jg
or
repnz
jae
pop
add
jecxz
add
repnz
jae
push
or
pop
insb
add
nop
jae
add
add
ja
add
shl
fwait
cld
nop
jmp
push
jmp
add
stos
push
mov
xchg
ret
pop
cmp
mov
jge
push
mov
xchg
ret
add
pop
add
push
jmp
add
cmp
add
clc
repnz
jae
aas
jl
enter
add
repnz
jae
lods
add
in
push
mov
xchg
ret
fiaddl
add
mov
out
addl
je
repnz
jae
fdiv
dec
xor
add
push
mov
xchg
ret
add
dec
inc
add
add
repnz
jae
pop
add
add
add
add
mov
add
push
mov
xchg
ret
add
mov
add
add
nop
jae
push
aad
add
xor
clc
repnz
jae
leave
xor
dec
or
nop
jae
mov
jge
jg
push
mov
xchg
ret
mov
mov
sbb
nop
jae
add
rorb
jg
shr
clc
repnz
jae
add
hlt
add
mov
clc
repnz
jae
add
add
into
xor
clc
repnz
jae
add
add
loope
add
mov
push
mov
xchg
ret
push
add
imul
dec
adc
cmc
incl
add
add
das
cmp
fwait
cld
nop
jmp
aad
add
mov
add
repnz
jae
add
add
in
sub
clc
repnz
jae
pop
add
cmp
nop
jae
cmc
add
dec
rolb
cmp
push
mov
xchg
ret
cmc
ja
add
add
jp
les
clc
repnz
jae
push
add
aas
add
cmp
repnz
jae
add
movsb
dec
movsb
or
clc
repnz
jae
icebp
sahf
dec
add
aam
mov
test
repnz
jae
add
push
cld
mov
clc
repnz
jae
add
fwait
cld
nop
jmp
movl
movsb
scas
jmp
add
clc
repnz
jae
add
add
popa
add
cld
nop
jmp
add
add
add
lcall
adc
add
lods
int
dec
sub
shl
inc
add
movsb
cmc
icebp
or
filds
sti
clc
repnz
jae
add
add
add
movswl
fwait
cld
nop
jmp
add
add
jae
xchg
clc
repnz
jae
add
cmc
bound
add
shrl
nop
jae
aas
add
cltd
add
ss
fwait
cld
nop
jmp
add
add
add
mov
push
mov
xchg
ret
ja
jle
add
nop
jmp
mov
aad
cmc
pop
xchg
or
outsl
fwait
cld
nop
jmp
jl
add
je
fwait
cld
nop
jmp
push
xchg
add
pusha
clc
repnz
jae
mov
cmp
add
add
clc
repnz
jae
shrb
mov
fwait
cld
nop
jmp
xchg
leave
add
movsb
bound
ja
clc
repnz
jae
push
jl
addb
add
mov
std
sbbb
add
cs
clc
repnz
jae
add
add
push
clc
repnz
jae
add
scas
add
add
add
clc
repnz
jae
sahf
add
jecxz
fdiv
add
mov
repnz
jae
inc
add
in
mov
fwait
cld
nop
jmp
add
pop
insb
dec
mov
scas
mov
clc
repnz
jae
imul
add
clc
repnz
jae
xchg
add
add
repnz
jae
jg
ficompl
jg
ljmp
add
add
dec
add
mov
pop
push
mov
xchg
ret
cltd
insb
imul
jae
lods
movsb
insb
add
fsubrl
loopne
addb
mov
hlt
incl
mov
add
ja
add
push
add
mov
clc
repnz
jae
add
jle
add
mov
repnz
jae
jmp
add
add
add
mov
add
repnz
jae
rorb
leave
cmc
inc
inc
jno
mov
clc
repnz
jae
cli
lret
add
push
clc
repnz
jae
xchg
imul
add
xor
push
mov
xchg
ret
push
add
pusha
fwait
cld
nop
jmp
jl
jmp
add
add
bound
xlat
lock
add
jp
lods
add
add
repnz
jae
add
push
js
mov
xchg
ret
dec
mov
jne
push
mov
xchg
ret
jge
add
add
push
mov
dec
add
dec
add
movsl
add
jb
mov
jmp
jle
scas
add
add
dec
ja
mov
fwait
cld
nop
jmp
mov
add
xchg
pop
aad
or
repnz
jae
add
add
mov
add
clc
repnz
jae
push
mov
xor
sbb
jmp
dec
or
or
add
add
fistl
xchg
add
xchg
ret
add
fiaddl
shrb
rorb
add
add
xor
stos
jmp
scas
add
or
or
add
add
out
clc
clc
repnz
jae
add
sahf
pop
mov
push
mov
xchg
ret
add
push
mov
rep
fwait
cld
nop
jmp
cltd
pop
add
bound
cltd
ja
add
push
add
sbb
lcall
push
add
add
add
mov
repnz
jae
push
add
add
cmc
dec
test
fwait
cld
nop
jmp
or
add
add
add
clc
repnz
jae
xchg
mov
add
add
push
clc
repnz
jae
movsb
sar
jg
add
cmp
movsl
flds
xchg
ret
mov
icebp
mov
add
mov
clc
repnz
jae
add
aas
add
inc
adc
add
jmp
push
mov
xchg
ret
xchg
fisubrl
pop
pop
std
add
clc
repnz
jae
xchg
add
rep
fwait
cld
nop
jmp
rolb
add
pop
add
out
jne
mov
fwait
cld
nop
jmp
add
push
aas
add
push
add
mov
clc
repnz
jae
icebp
jge
leave
aad
sub
adc
inc
add
add
add
lock
nop
jae
add
inc
cmc
insb
insb
xchg
pop
push
fwait
cld
nop
jmp
jge
add
faddl
dec
icebp
add
push
push
mov
xchg
ret
add
ja
sarb
xchg
cmpl
push
cld
incl
ja
add
mov
add
repnz
jae
imul
clc
repnz
jae
insb
add
pop
mov
int3
je
clc
repnz
jae
aas
mov
aas
mov
push
mov
xchg
ret
add
scas
pop
xor
adc
repnz
jae
add
ror
clc
repnz
jae
mov
ja
xchg
aam
jbe
or
mov
xchg
ret
cltd
insb
add
pop
add
movzwl
fwait
cld
nop
jmp
add
les
add
inc
clc
repnz
jae
cmc
rcl
ja
movsl
cmp
nop
jae
mov
xor
sub
sub
push
add
add
insb
add
cltd
xchg
add
mov
add
mov
clc
repnz
jae
add
add
add
mov
adc
cld
nop
jmp
add
add
ret
sbb
cld
nop
jmp
cmc
aad
jle
add
aas
add
jl
fwait
cld
nop
jmp
mov
add
add
push
push
mov
xchg
ret
pop
add
add
aad
adc
push
roll
xchg
ret
leave
add
icebp
aas
add
out
add
push
mov
xchg
ret
add
mov
pop
add
xor
add
mov
xor
inc
add
sub
add
add
imul
in
in
lcall
push
push
dec
add
jle
pushf
call
fwait
cld
nop
jmp
cmc
add
add
decl
nop
jae
mov
push
push
jle
mov
and
push
mov
xchg
ret
add
dec
sahf
push
add
add
or
add
or
push
add
push
add
mov
xchg
ret
pop
jecxz
add
mov
cmp
push
cmpsl
xchg
add
test
pop
dec
pusha
fwait
cld
nop
jmp
leave
push
add
add
and
mov
cmpsb
add
pop
add
clc
repnz
jae
add
add
in
dec
jmp
add
add
add
rolb
mov
add
push
mov
add
add
add
faddl
add
icebp
scas
mov
clc
repnz
jae
xor
mov
jae
repnz
jae
push
aas
push
or
add
ljmp
lock
push
insb
bound
in
movl
inc
add
add
les
shrb
repnz
jae
add
add
push
imul
nop
jae
add
add
push
push
mov
xchg
ret
icebp
movsb
cltd
sarl
jle
mov
mov
jmp
incl
movl
push
insb
ja
pop
or
add
or
fwait
cld
nop
jmp
add
out
bound
mov
mov
push
mov
xchg
ret
add
add
pop
push
clc
repnz
jae
mov
ja
cmpsl
ret
push
clc
repnz
jae
add
add
shrl
and
mov
je
fwait
cld
nop
jmp
lods
jl
jl
add
mov
add
jmp
add
add
aas
add
movl
push
call
clc
repnz
jae
add
rol
rep
clc
repnz
jae
movsb
add
add
add
push
je
in
sbb
andl
incl
add
add
push
clc
repnz
jae
push
add
rolb
add
repz
repnz
jae
pop
lret
cltd
cmc
push
data16
dec
call
clc
repnz
jae
inc
pop
cld
push
jmp
add
imul
add
add
mov
lret
push
push
mov
xchg
ret
add
add
jle
lcall
jmp
cmp
add
addb
add
mov
rep
push
mov
xchg
ret
pop
addb
add
and
cld
nop
jmp
jg
add
push
cmc
add
mov
mov
mov
xchg
ret
les
movsb
add
xor
stc
mov
push
mov
xchg
ret
add
add
mov
mov
repnz
jae
add
rolb
add
add
push
mov
xchg
ret
add
push
clc
repnz
jae
add
add
or
add
ret
xchg
and
and
out
call
clc
repnz
jae
add
cltd
add
adc
enter
jmp
inc
add
inc
rolb
add
pushf
cmpl
fwait
cld
nop
jmp
inc
jbe
movsb
add
movb
add
clc
repnz
jae
push
mov
cs
clc
repnz
jae
mov
in
mov
push
mov
xchg
ret
add
add
mov
aam
inc
add
pusha
clc
repnz
jae
add
add
pop
add
dec
fwait
cld
nop
jmp
jg
add
add
pop
xchg
insb
ja
add
add
add
lcall
repnz
incl
add
xchg
cld
add
clc
repnz
jae
add
add
add
cmp
repnz
jae
add
add
add
pop
push
clc
repnz
jae
add
add
clc
repnz
jae
jle
addb
add
push
add
push
clc
repnz
jae
push
add
add
or
jmp
repnz
jae
add
cmp
cld
nop
jmp
add
add
jmp
mov
add
mov
clc
repnz
jae
push
aas
fadds
jmp
add
add
movsb
or
or
clc
repnz
jae
cmc
cltd
gs
push
clc
repnz
jae
cmc
jecxz
add
add
add
shr
inc
add
add
movsb
add
sahf
into
mov
clc
repnz
jae
jmp
shlb
test
fwait
cld
nop
jmp
add
dec
mov
add
add
jmp
insb
scas
add
add
add
lret
je
rolb
or
nop
jae
jge
add
add
jge
and
push
dec
jbe
pop
xor
add
jge
movsb
call
repnz
jae
jg
add
dec
add
add
clc
repnz
jae
add
pop
cmpb
les
add
add
mov
clc
repnz
jae
ja
jg
add
adc
add
icebp
in
add
add
cmc
popf
ret
clc
repnz
jae
xchg
sahf
jecxz
leave
cmp
adc
in
clc
repnz
jae
ja
add
jae
xchg
fcompl
add
movsb
jge
add
clc
repnz
jae
add
cltd
add
add
push
push
mov
xchg
ret
in
lods
add
add
mov
xchg
ret
add
add
mov
xchg
ret
add
mov
add
add
insl
shr
fwait
cld
nop
jmp
jmp
pop
add
ja
add
cwtl
mov
push
mov
xchg
ret
dec
add
add
add
jmp
cmp
bound
leave
dec
aas
pop
cli
jmp
jl
sahf
cmc
add
insb
dec
xor
add
fwait
cld
nop
jmp
xor
imul
push
push
mov
xchg
ret
or
add
jae
add
or
sti
dec
fwait
cld
nop
jmp
mov
rcrl
jle
add
mov
jae
xchg
in
mov
push
add
ja
add
pop
jmp
pop
add
add
mov
cli
sahf
mov
fwait
cld
nop
jmp
mov
bound
mov
adcl
sub
in
incl
cltd
add
add
or
add
clc
repnz
jae
movsb
roll
inc
add
push
mov
xchg
ret
add
add
adc
cld
or
jmp
add
mov
clc
repnz
jae
les
add
jecxz
imul
nop
jae
add
ja
dec
aad
insb
dec
mov
clc
repnz
jae
add
push
push
add
pop
mov
stc
clc
repnz
jae
pop
add
add
movsb
dec
in
je
fwait
cld
nop
jmp
xorb
out
lea
fwait
cld
nop
jmp
add
add
xchg
add
popf
mov
push
mov
xchg
ret
movl
jl
mov
adc
repnz
jae
les
mov
clc
repnz
jae
add
mov
add
rolb
int
sar
nop
jae
add
inc
lods
and
fwait
cld
nop
jmp
mov
add
int
pop
jae
repnz
jae
add
lods
add
sbb
cmpsb
add
rolb
sti
push
clc
repnz
jae
add
jle
sahf
mov
dec
mov
clc
repnz
jae
mov
add
mov
xchg
ret
pop
dec
inc
cltd
xor
xor
xchg
or
or
repnz
jae
rolb
cmc
add
sbb
jp
inc
add
movl
pop
add
fwait
cld
nop
jmp
add
cmp
roll
add
addr16
inc
and
mov
clc
repnz
jae
add
nop
jae
or
dec
dec
mov
clc
repnz
jae
cmp
fimull
nop
jae
in
add
add
add
ljmp
cmc
add
jae
sub
clc
repnz
jae
les
dec
mov
clc
repnz
jae
push
mov
push
push
mov
xchg
ret
bound
leave
add
mov
xchg
ret
cltd
add
add
push
incl
xchg
ret
add
bound
xor
mov
add
clc
repnz
jae
scas
add
add
clc
repnz
jae
imul
fsubrl
imul
clc
repnz
jae
add
add
loop
mov
xchg
ret
xor
add
clc
push
mov
xchg
ret
add
dec
jle
mov
inc
clc
repnz
jae
jge
add
push
mov
xchg
ret
add
add
add
rolb
ud1
push
clc
repnz
jae
dec
push
icebp
cmc
mov
repnz
jae
add
pop
add
add
rcrl
repnz
add
add
pop
add
sub
xor
add
clc
repnz
jae
add
mov
cld
nop
jmp
pop
mov
add
add
scas
add
mov
rclb
repnz
add
push
add
bound
add
mov
clc
repnz
jae
sahf
aad
add
loop
fwait
cld
nop
jmp
jmp
jmp
insb
add
jl
fwait
cld
nop
jmp
add
mov
pop
cmp
clc
repnz
jae
add
dec
cmp
repnz
jae
add
mov
clc
repnz
jae
add
add
clc
repnz
jae
mov
add
add
mov
add
mov
push
clc
repnz
jae
add
jle
add
dec
mov
clc
repnz
jae
add
cli
rol
add
mov
mov
add
fwait
cld
nop
jmp
cli
add
loop
pop
pop
jmp
add
xchg
add
add
add
add
fcoml
jle
in
pop
clc
repnz
jae
add
add
add
or
push
mov
xchg
ret
add
leave
imul
xchg
xchg
neg
inc
add
add
faddl
imul
clc
repnz
jae
add
add
je
sbb
repnz
jae
sahf
add
add
add
je
fwait
cld
nop
jmp
mov
add
repnz
jae
add
sahf
icebp
jecxz
xchg
movsb
add
add
add
add
add
add
jge
movsb
cld
rep
clc
repnz
jae
push
les
add
add
loope
sub
nop
jmp
add
add
add
add
add
jne
clc
repnz
jae
add
pop
adc
out
push
clc
repnz
jae
push
add
es
add
mov
mov
push
mov
xchg
ret
add
lods
add
lahf
push
clc
repnz
jae
jecxz
roll
jecxz
cmp
mov
jmp
and
add
add
lret
sbb
clc
repnz
jae
sahf
or
add
inc
push
mov
xchg
ret
add
add
nop
fwait
cld
nop
jmp
add
push
add
jl
add
inc
add
cmpl
fwait
cld
nop
jmp
add
pushl
clc
repnz
jae
add
es
cli
push
les
repnz
jae
add
pop
add
mov
bound
mov
je
rcll
and
push
fs
cld
nop
jmp
add
add
mov
repnz
jae
add
dec
icebp
add
add
push
add
clc
repnz
jae
xor
and
mov
add
and
fwait
cld
nop
jmp
aad
add
add
fwait
cld
nop
jmp
add
imul
in
mov
clc
repnz
jae
add
cmpb
clc
repnz
jae
add
add
clc
repnz
jae
add
add
lods
sahf
add
mov
jae
aas
add
add
add
cmc
inc
add
clc
repnz
jae
xchg
push
push
dec
add
add
mov
add
add
add
add
jnp
add
add
cs
jl
jmp
xor
ds
add
ja
add
and
out
ret
dec
pop
shl
cmp
mov
inc
mov
pop
test
movsl
sahf
adc
add
xor
sbb
pushf
or
lea
mov
add
nop
add
stc
add
push
add
cld
dec
pop
sbb
cmp
imul
xor
cwtl
fistpll
jg
add
sbb
bound
mov
add
aaa
lods
lods
sbb
mov
js
add
lret
pop
push
inc
add
lret
pop
pop
lds
mov
mov
xchg
push
dec
pop
push
sbb
dec
je
sub
scas
in
mov
add
mov
pop
jg
add
pop
outsl
xor
loop
jecxz
mov
sub
jg
iret
pushf
pusha
add
nop
add
adc
mull
pop
mov
jno
cmc
fists
add
mov
and
add
and
push
add
dec
pop
in
add
add
jmp
add
add
out
xchg
mov
add
in
mov
int3
xor
dec
jno
movsl
lods
les
aad
in
mov
xchg
add
mov
imul
add
add
repz
push
add
mov
or
mov
adc
push
jae
mov
pop
cli
outsl
sbb
inc
test
pop
jae
inc
xchg
pop
fsubs
fwait
add
dec
mov
pop
mov
add
sub
sbb
mov
or
add
outsb
lods
loope
mov
lea
add
add
mov
sbb
mov
pop
xchg
mov
hlt
add
add
rolb
orl
loop
rolb
xor
addb
mov
jle
add
out
stos
xchg
add
mov
add
mov
add
cmpsl
mov
inc
pop
idiv
jb
xchg
add
xchg
stos
iret
cmp
add
mov
scas
sbb
fwait
add
mov
xor
test
pop
lock
dec
test
cmp
add
add
push
add
add
jnp
cmp
outsl
mov
add
add
sahf
jbe
les
in
pop
aad
lret
xchg
add
xchg
add
add
add
sti
ficompl
mov
add
mov
sbb
add
out
stc
dec
imul
test
std
outsb
push
add
sub
das
cmp
int3
mov
and
mov
repnz
add
das
ret
sub
xor
xchg
cmpl
icebp
mov
add
in
jbe
sub
push
add
call
xchg
inc
add
add
sbb
aad
sub
add
mov
fstl
add
rolb
mov
add
xchg
sbb
add
xchg
sbb
ret
add
cmp
fnsave
push
add
mov
add
mov
pop
in
add
daa
out
stc
xchg
mov
add
stc
xchg
add
jmp
mov
rorl
push
in
jl
adc
es
add
out
mov
add
pop
rolb
outsb
out
add
mov
add
cmpsl
enter
cmpsb
add
jne
or
push
mov
fcoms
pop
push
jno
mov
repnz
jns
adc
repz
aaa
stos
stc
and
cwtl
push
ja
add
jmp
xor
add
add
mov
adc
xchg
add
mov
movsb
add
dec
out
cwtl
jb
jbe
out
mov
pop
inc
pushf
add
add
push
testb
repnz
mov
fnsave
sahf
mov
pop
lahf
pop
stos
inc
pop
enter
lret
in
lock
cmp
add
mov
lcall
jnp
scas
push
add
stos
inc
jno
add
mov
scas
dec
add
cmp
out
sub
mov
add
cmc
fdivl
lret
and
rolb
lods
pop
push
add
fnstcw
xor
xor
testb
add
add
add
cmpsl
sub
aas
pop
sub
fimull
add
addb
aas
jne
enter
nop
add
jmp
add
int3
js
pop
cmp
mov
stc
and
mov
jmp
jmp
adc
jp
jbe
test
pop
or
add
sbb
cmc
stos
lcall
or
enter
cmpsb
add
mov
add
sub
or
adc
dec
ret
lret
and
add
pop
lcall
cmp
ja
add
inc
add
jb
mov
lods
outsb
sub
arpl
pusha
add
cmp
sti
xchg
in
ret
mov
xchg
mov
repnz
add
in
sub
inc
add
mov
sub
add
in
push
add
add
xchg
es
push
popf
dec
sub
mov
bswap
enter
mov
stos
xor
mov
add
add
rcll
mov
mov
insb
and
mov
or
icebp
fstpl
pop
pop
pop
jb
jb
out
scas
sub
repnz
mov
mov
add
pop
mov
fwait
mov
mov
cld
inc
add
or
add
add
push
cmp
push
leave
jmp
add
js
and
out
in
clc
or
test
fbld
add
out
adc
add
stos
inc
add
popa
jns
sahf
and
mov
push
mov
add
dec
push
add
fcomps
mov
mov
clc
mov
add
ss
mov
add
lret
add
loope
add
insb
fdiv
add
jecxz
add
mov
aaa
mov
mov
add
enter
inc
imul
or
add
add
into
push
xor
sbb
jae
mov
ds
pop
xor
sub
add
sbb
mov
push
in
fnsave
add
sbb
shll
sahf
aad
dec
sub
dec
lahf
mov
pop
ret
aas
shll
testb
add
ss
add
lods
loopne
inc
pop
mov
add
lock
call
and
mov
test
push
je
mov
mov
add
jnp
stc
inc
dec
in
dec
test
dec
add
push
sbb
int3
sbb
das
push
mov
cli
and
ljmp
fsubrs
je
jmp
pop
lret
sub
add
adc
add
add
add
push
add
outsl
or
add
xor
add
movsb
add
mov
sbb
xchg
sub
stos
movsl
adc
aad
sub
xor
movsb
add
jge
add
in
push
add
dec
sahf
cmp
in
sbb
out
sub
add
push
and
sbb
movsl
dec
cmc
fimull
inc
add
aad
add
and
fistpll
cmpl
enter
fists
pop
fsubs
dec
cmp
dec
jp
int3
data16
dec
xchg
add
cmc
push
add
xchg
push
xchg
jge
lods
movsb
add
pop
xchg
add
fdivr
leave
bound
mov
in
jle
xchg
lret
loopne
cmp
dec
ret
pop
xchg
popa
adc
add
andl
push
add
daa
jecxz
xchg
roll
loope
movsl
into
jecxz
sub
leave
iret
notl
pop
aam
call
aas
clc
xchg
pusha
add
jp
mov
sub
cmp
add
inc
mov
cmp
inc
add
sub
add
push
out
add
cmp
add
sub
push
add
add
stos
test
pop
xchg
add
push
insb
aaa
fnstsw
sbb
aam
mov
outsb
ds
leave
in
jmp
add
add
add
outsb
and
icebp
pop
mov
add
dec
dec
test
push
or
arpl
add
movb
rolb
dec
jno
imul
xor
add
jl
add
rolb
addr16
mov
out
leave
sub
jp
and
lock
add
mov
arpl
xchg
or
jo
cmpsl
add
add
xchg
add
mov
add
daa
call
cmpsl
pop
stos
adc
inc
add
dec
fstps
add
sub
add
outsl
cmc
stos
or
push
add
and
mov
mov
dec
mov
add
push
dec
sbb
iret
idivl
add
imul
imul
repnz
add
mov
aaa
pop
push
or
ljmp
add
add
lahf
test
adc
jg
test
xor
adc
add
es
xlat
jbe
iret
aad
lea
lret
aaa
lahf
adc
and
popf
inc
mov
add
add
loop
mov
pop
jb
adc
and
repz
imul
movsl
lock
mov
scas
repz
mov
in
fidivl
push
jne
stos
xchg
stos
enter
push
add
jnp
inc
testb
add
je
inc
add
mov
mov
mov
loope
jno
stc
add
inc
add
call
add
mov
add
jns
aam
mov
out
repnz
lret
mov
jno
and
pop
cmp
add
add
cmp
add
cs
mov
add
xor
push
mov
stos
insl
jae
add
or
call
xor
mov
adc
mov
add
pusha
add
dec
lods
in
sub
out
scas
jo
push
scas
mov
fcmovnb
fwait
mov
add
mov
pop
add
jecxz
add
sub
or
addb
add
cmc
jge
add
inc
add
imul
call
lods
dec
dec
cmp
xchg
in
stos
push
add
scas
xor
push
les
mov
add
jae
sub
stc
sti
mov
je
push
mov
mov
push
add
or
movsl
arpl
mov
cmp
add
jo
addb
popf
and
mov
jg
jle,pt
fistpl
je
dec
xchg
xor
icebp
xlat
daa
mov
sbb
or
add
aam
movb
add
lahf
push
add
mov
push
imul
inc
jns
jne
xchg
pop
arpl
outsb
adc
dec
mov
add
and
add
in
mov
pop
mov
add
add
fdivrs
add
fbstp
add
inc
add
sub
dec
fcoml
test
mov
add
dec
mov
add
add
push
add
stc
je
jb
and
mov
add
push
movsb
add
lds
add
add
push
add
ret
mov
add
add
mov
push
fiaddl
inc
pop
dec
je
in
cmpsb
add
inc
add
push
pop
lret
sub
adc
fidivl
add
ret
pop
rolb
adc
outsl
clc
add
add
add
mov
push
aaa
imul
idivl
dec
xchg
push
xor
add
nop
add
cmpsb
add
add
mov
lods
push
add
testb
xchg
add
mov
data16
or
add
scas
or
inc
push
add
add
jno
popa
movb
xchg
repz
lock
add
add
adc
pop
mov
inc
inc
push
add
and
mov
mov
or
aas
ret
mov
dec
popf
or
add
cmp
adcl
cmpsb
add
dec
gs
testb
mov
mov
pop
dec
push
roll
add
add
xchg
mov
jns
adc
packsswb
push
push
add
outsl
daa
or
mov
mov
add
sbb
jns
push
lods
adc
add
and
mov
mov
inc
add
xchg
add
js
add
xor
inc
add
in
arpl
jg
push
add
in
mov
push
add
mov
cltd
cmp
mov
add
add
mov
sbb
add
iret
add
int3
xchg
popf
mov
insl
scas
hlt
add
sub
sbb
mov
xchg
rorl
ljmp
lret
popf
sub
add
add
dec
sbb
leave
inc
loope
add
outsb
inc
push
mov
add
inc
add
ret
push
add
xor
dec
out
mov
into
jl
xor
sbb
add
add
add
cltd
pop
cmpsb
add
xchg
add
add
push
add
add
rolb
test
mov
enter
dec
push
sub
test
xchg
add
add
add
nop
add
add
and
mov
add
aad
imul
cmp
add
shrl
add
cmp
dec
xchg
lods
jnp
jl
add
add
sub
dec
inc
fdivrl
add
push
leave
int3
lcall
popa
sbb
mov
cs
add
jge
xor
mov
inc
add
add
pusha
add
cmp
add
and
mov
pop
and
push
add
pop
bound
mov
xor
or
add
loopne
xor
cmpsl
xchg
call
xor
push
mov
cmc
cmp
pop
and
xor
adc
mov
xor
sub
add
fcomp
lahf
mov
mov
and
xorl
enter
mov
xchg
add
nop
add
add
xchg
mov
pop
cli
fwait
mov
insb
add
icebp
pop
cmp
add
lret
std
mov
addb
mov
into
pop
inc
add
test
mov
add
fisttps
add
lahf
and
mov
dec
call
or
xor
dec
sarl
or
inc
add
repz
mov
std
mov
add
gs
cmp
push
push
add
sub
add
add
add
mov
mov
add
cmp
int3
xor
push
add
faddl
add
push
movsl
or
lea
push
repnz
add
add
aaa
int
pop
fs
add
push
rolb
add
xor
jle
or
ficoms
add
out
sub
adc
mov
jge
je
xlat
xchg
add
add
cli
mov
scas
jl
push
imul
xor
jmp
add
fwait
sub
mov
and
mov
mov
das
mov
add
add
inc
add
jo
lds
ja
xchg
add
xor
inc
aaa
clc
sub
scas
push
add
in
call
ss
add
sub
fwait
mov
add
add
push
add
inc
add
add
sbb
sub
adc
aam
jmp
mov
add
mov
or
test
add
add
add
lods
loopne
pop
cwtl
add
xor
clc
int3
int3
mov
add
scas
add
mov
iret
jmp
xorl
push
add
add
bound
mov
inc
add
add
add
push
fbstp
xchg
add
mov
inc
add
add
add
bound
mov
iret
xchg
inc
add
add
add
xor
sub
testl
add
add
mov
pop
loopne
stc
notl
cld
outsb
daa
lcall
clc
xchg
lret
jmp
in
cmp
mov
ret
icebp
pop
pop
sbb
sti
sbb
add
fdivl
add
adc
cld
cmp
add
xchg
add
sbb
push
add
add
sbb
loop
or
sub
rcl
add
mov
inc
rolb
add
add
push
add
jmp
addr16
add
or
loope
add
bound
mov
add
testb
decl
rcrl
imul
add
mov
xor
or
inc
add
test
pop
stos
xchg
adc
sbb
add
adc
add
push
stos
dec
xchg
add
cs
test
mov
mov
inc
add
add
add
mov
add
stc
jnp
add
pop
jo
into
cmp
in
fbstp
add
add
push
add
jg
xor
and
mov
add
rolb
inc
add
jbe
sbb
bound
mov
mov
jge
sub
popa
bound
mov
flds
mov
add
add
add
mov
testl
ljmp
dec
push
add
dec
scas
fsubrl
rolb
repz
add
add
aam
xchg
out
mov
lcall
add
push
add
add
ret
dec
jg
insb
daa
cmp
mov
in
or
sbb
mov
rcrl
jbe
add
int
out
add
mov
dec
mov
or
mov
mov
aam
inc
jbe
test
lret
scas
add
les
push
inc
fwait
xor
xchg
mov
loop
addr16
jne
add
mov
add
add
or
add
imul
mov
and
sub
pop
push
add
test
sub
mov
pop
pop
stos
test
add
xchg
mov
bound
mov
inc
add
add
add
adc
add
test
jmp
add
pusha
add
aas
lret
add
add
dec
or
fisttps
cmc
dec
dec
sub
btc
fistpl
test
pusha
add
pop
adc
pushf
inc
mov
pop
fistpll
push
add
add
loope
loope
add
lods
nop
add
mov
push
add
inc
add
test
add
cmp
xor
add
lcall
gs
fbld
xor
mov
shrl
adc
push
add
add
das
sbb
add
add
arpl
fcomps
or
add
mov
mov
add
aad
mov
enter
add
adc
mov
add
add
inc
cmp
adc
out
cmovg
add
je
push
add
add
xchg
xlat
or
cmp
add
ja
add
int
mov
add
add
das
insl
arpl
add
add
sbb
lahf
adc
pop
and
add
mov
or
add
adc
xchg
out
cmpsb
add
popf
das
jae
push
xchg
add
add
mov
jle
xchg
add
in
les
fucomi
jp
imul
add
mov
sti
xchg
sub
pop
jno
mov
add
movsl
xchg
add
lds
mov
scas
sbb
lcall
test
pushl
mov
ljmp
mov
test
je
in
jbe
push
adc
movsl
lahf
sub
add
add
push
add
push
add
je
jns
nop
add
ret
push
clc
jno
out
sub
lret
add
fiadds
gs
and
jns
add
add
add
xchg
dec
xlat
add
sub
add
add
pop
pop
int3
pushf
pop
int3
add
mov
add
and
sbb
and
mov
leave
in
jns
push
data16
sbbl
mov
clts
add
iret
stos
fnstcw
push
int
jns
sub
cmpl
test
mov
inc
add
addr16
add
aad
add
idiv
scas
jecxz
lret
pop
testl
cli
movsb
add
xchg
add
shl
add
jl
add
inc
sub
insl
bound
mov
hlt
add
fistl
push
add
icebp
mov
jnp
xchg
add
add
repz
xor
popf
pushf
pop
mov
mov
jns
addb
add
add
add
xor
add
mov
cmp
sbb
idiv
pop
mov
push
add
add
and
add
add
rolb
hlt
add
mov
xor
xchg
aas
jmp
add
add
mov
add
aad
mov
push
add
mov
imul
and
xchg
jg
fiadds
add
rcr
mov
and
push
add
mov
add
test
addb
pop
or
and
mov
jmp
jp
add
subl
xchg
add
push
sarl
fistps
add
sti
insl
dec
les
addb
les
add
mov
xor
dec
jecxz
jbe
push
add
cltd
cmp
xchg
add
mov
sti
push
or
cmpsl
mov
jnp
jp
xchg
loope
lods
push
mov
lret
leave
cmpsl
cwtl
mov
pushf
adc
rolb
aam
aam
ret
rolb
mov
loope
add
sbb
add
movsl
icebp
hlt
add
cwtl
add
dec
iret
cmp
xor
xchg
add
add
lret
and
gs
movsl
add
ljmp
mov
add
inc
add
xor
ja
lret
add
mov
add
add
test
pop
pop
inc
sbb
adc
scas
and
mov
mov
mov
push
pop
dec
jne
add
insl
data16
stos
mov
movsb
add
add
sub
dec
aas
xchg
data16
lds
jbe
mov
add
jnp
jp
mov
mov
push
test
add
dec
rolb
enter
orl
mov
xor
cmp
outsl
pop
pusha
add
scas
ja
add
add
fwait
dec
push
js
sbb
adc
add
add
mov
aas
dec
xor
adc
adc
push
add
add
pop
int
add
add
add
add
gs
or
add
data16
add
cwtl
ss
loope
out
jnp
mov
aam
fwait
loop
das
jp
xor
hlt
add
xor
int
addb
cmp
jns
add
rolb
adc
das
or
add
fdivs
pop
testb
adc
fwait
jmp
inc
add
aad
mov
mov
jne
imul
inc
add
mov
add
adc
mov
mov
sub
add
add
lea
dec
outsl
roll
lea
sbb
add
out
add
adc
jmp
add
add
shll
add
cwtl
popf
lods
sti
mull
mov
pop
shl
add
cmp
inc
pop
xor
mov
add
leave
cmpsl
test
mov
aas
lret
mov
push
and
mov
outsl
loopne
push
out
add
mov
insb
add
inc
add
mov
add
std
jge
add
mov
add
add
ja
pop
std
std
cmpsl
daa
outsb
pop
shl
add
jge
add
inc
faddl
lods
pop
imul
mov
add
mov
add
add
mov
sub
stos
push
insl
mov
lods
stos
pop
adc
mov
into
addb
xchg
inc
or
addb
add
add
push
add
mov
mov
outsl
ss
xor
pop
sub
jge
dec
sbb
add
sub
inc
fstl
fs
gs
add
scas
mull
adc
jge
sbb
inc
add
push
add
mov
pop
mov
lret
clc
add
pop
push
add
mov
pop
addb
add
add
mov
mov
inc
add
add
add
nop
add
xchg
add
sbb
push
add
mov
repz
sub
fstpl
mov
call
xchg
add
mov
ja
add
adc
add
stos
cmc
xor
xchg
inc
movb
xchg
inc
repz
sbb
add
add
out
add
push
add
insl
sub
sub
xchg
push
mov
loope
fbld
add
add
add
jge
add
cmp
add
mov
stos
sbb
dec
sub
xchg
add
xchg
add
mov
fnsave
add
jle
mov
fst
add
add
xor
inc
xor
pop
decl
mov
add
mov
mov
std
and
push
add
lds
jg
outsb
cmpl
mov
cmc
repz
mov
cmp
and
add
mov
add
sub
scas
push
add
push
pop
jbe
bound
mov
add
push
arpl
lods
pop
add
out
cltd
daa
loope
xchg
xor
scas
mov
ret
add
sahf
push
jae
adc
ret
enter
pop
and
mov
scas
test
add
and
int
ffree
add
adc
push
or
add
add
js
outsl
adc
das
xlat
add
jno
jae
ret
fpatan
out
outsl
sub
xchg
add
add
call
add
dec
and
add
xchg
add
add
push
add
mov
add
add
adc
adc
push
add
sbb
jae
stos
mov
add
je
cld
cld
lods
std
pop
bound
mov
add
and
pop
dec
test
cmp
add
mov
pop
test
and
mov
mov
add
add
insb
sbb
add
insl
and
mov
insb
shr
add
imul
add
mov
das
mov
add
ret
or
add
cli
fldenv
mov
add
and
inc
es
pop
adc
add
xlat
jmp
jno
add
add
enter
add
movsb
add
cmpsb
add
add
jg
frstor
xchg
pop
adc
ffreep
testb
push
cli
dec
jle
fxch
jmp
ret
int
push
dec
addb
add
cmp
iret
cmp
inc
add
cltd
lret
testb
add
or
pop
mov
add
add
dec
add
xchg
rorl
or
add
push
add
xchg
add
add
fimull
push
arpl
add
cmp
add
scas
mov
mov
cltd
nop
add
imul
and
add
dec
adc
push
clc
repnz
daa
adc
or
cld
or
iret
xchg
cmp
mov
add
sub
push
add
int
add
arpl
lret
je
or
add
add
mov
sub
rolb
add
push
add
add
shll
lock
inc
mov
pop
jb
mov
cmp
testb
xchg
popa
xor
lods
mov
mov
or
mov
std
or
insl
or
aaa
mov
hlt
add
add
add
in
xlat
repnz
stos
and
mov
lcall
add
out
cmpsb
add
das
ret
fwait
nop
add
add
mov
cmp
cmp
fdivrs
mov
add
add
pop
sahf
lods
fiaddl
pop
das
mov
adc
mov
adc
movb
sbb
insb
inc
mov
push
add
shr
add
inc
cmp
add
add
mov
mov
xchg
add
cmp
nop
add
add
fbld
add
dec
outsb
inc
shr
adc
sub
sti
vandnps
adc
jle
xchg
push
into
test
mov
mov
jl
xor
xlat
dec
mov
add
dec
mov
out
lahf
sbb
pop
add
cld
testb
xchg
add
mov
inc
or
pop
sub
add
adc
xchg
add
sub
pop
add
maskmovq
add
testb
jp
arpl
mov
sbb
jmp
push
cmpsl
insl
test
or
jmp
stc
mov
add
inc
movsl
adc
nop
add
rolb
lods
fwait
mov
js
inc
roll
jns
mov
add
add
int
std
inc
jnp
movl
sahf
push
sbb
add
in
inc
jno
jbe
hlt
add
dec
xchg
add
mov
jecxz
addb
mov
and
sub
pop
add
outsb
sub
jb
mov
add
test
dec
mov
mov
inc
add
fmulp
xlat
sahf
mov
add
add
ficomps
enter
add
add
xor
add
cmp
pop
lea
add
addb
add
mov
sbb
adc
mov
sahf
sti
outsl
lock
add
add
add
mov
xor
call
dec
in
push
mov
rcll
add
fsts
in
aad
push
in
mov
mov
gs
jg
add
jnp
add
pop
or
add
testb
pop
in
divl
add
inc
add
add
push
add
es
adc
test
mov
cmpsb
add
sub
jne
stos
bound
mov
or
add
cmp
and
mov
into
pop
push
test
mov
shl
add
jns
jge
add
addb
rolb
pop
or
hlt
add
loop
testb
loopne
lea
iret
xchg
scas
push
arpl
int
outsl
call
dec
inc
add
ljmp
push
xchg
add
add
or
add
mov
xchg
push
add
mov
mov
push
add
xchg
inc
add
add
mov
cmp
pop
in
mov
add
xor
push
dec
loopne
gs
and
or
pop
cmp
fists
out
fisttpll
mov
cltd
xchg
ret
sahf
jmp
add
data16
add
pop
or
xor
add
mov
sti
sahf
add
xchg
add
sub
jmp
dec
les
mov
pop
jnp
add
movsb
add
leave
mov
push
out
push
add
scas
das
adc
mov
mov
add
dec
addl
add
xor
lds
mov
cmp
add
push
add
mov
mov
test
movl
mov
scas
imul
mov
mov
test
dec
shll
cmpsb
add
les
enter
in
insl
dec
push
push
add
cmp
xor
jo
xor
mov
cmp
cmpl
dec
sti
adc
stos
sub
jne
add
mov
in
ret
add
jmp
cmp
add
addr16
add
out
test
xchg
xchg
push
mov
xorl
int
add
push
add
fdivrs
jl
and
mov
mov
sub
cmpsb
add
sub
stos
push
repz
add
pop
fdivrs
insb
sbb
sbb
jge
sti
push
add
add
fildl
xor
mov
add
add
or
add
faddl
push
add
je
test
ds
jb
in
jmp
xchg
pop
ss
add
add
shrl
popf
mov
daa
cld
add
jns
add
stos
sbb
add
jno
and
add
es
sub
add
add
adc
inc
add
js
jmp
add
mov
iret
mov
leave
or
add
jl
hlt
add
xor
inc
add
add
lods
sub
mov
or
loop
cmp
std
insb
lret
sbb
dec
imul
repnz
xor
xchg
bound
mov
cmp
scas
cmp
add
imul
or
cmp
mov
add
cwtl
jae
add
push
add
jb
push
dec
test
add
imul
jns
add
mov
mov
add
fcomps
add
xchg
add
add
add
add
jno
add
sbb
mov
add
imul
fcmovbe
add
enter
lcall
rolb
inc
add
dec
ds
or
add
sub
fiadds
mov
add
mov
mov
push
and
sbb
add
xlat
out
repnz
cmp
addr16
cltd
xchg
and
add
fwait
in
das
leave
jno
add
add
add
jmp
roll
xor
imul
ds
xchg
jmp
imul
movsl
cli
adcl
xchg
insb
or
jmp
ja
add
lahf
xchg
add
inc
add
lea
les
loopne
add
jl
or
dec
dec
sub
jg
inc
iret
mov
pop
and
add
and
imul
cs
add
add
jge
test
xor
add
jne
pushf
add
or
add
xchg
add
rcr
xlat
mov
pushf
ds
add
add
xchg
cmp
loopne
jmp
add
add
jmp
add
mov
rolb
push
cmc
xchg
cmp
cmp
es
add
mov
add
popl
scas
cmp
lock
add
addb
add
test
loopne
add
lret
push
add
mov
xor
leave
inc
add
aas
ss
add
lds
pop
adc
cmpsb
add
pop
mov
add
or
add
sub
iret
dec
in
cmpsl
jp
xor
aas
movb
add
add
mov
icebp
sub
add
in
ds
add
add
gs
add
les
push
jnp
or
dec
cmpsb
add
add
call
add
fstl
inc
fwait
and
mov
add
lods
sub
add
mov
inc
add
sub
push
add
xor
mov
jb
fdivs
inc
pop
xchg
test
cmp
inc
imul
scas
push
jge
push
add
add
add
movb
stc
gs
pop
xchg
call
add
pop
daa
mov
ds
add
add
add
mov
push
add
add
add
fcompl
sbb
push
add
add
cmp
cmp
rolb
shll
xor
sub
inc
add
dec
xchg
add
addb
aam
push
cmp
ret
movsl
repnz
add
std
mov
lock
pop
ror
add
repnz
add
add
sub
pushf
adc
or
add
cli
inc
lods
fwait
sahf
call
add
bound
mov
cmc
push
add
mov
add
sbb
jecxz
add
roll
xor
andl
add
sbb
outsl
pusha
add
add
loop
insl
jbe
pop
sub
add
cltd
sub
movsb
add
add
lods
mov
addb
push
addb
xor
adc
inc
adc
inc
add
mov
sbb
jmp
push
leave
sbb
add
add
in
add
inc
jge
adc
or
push
add
add
add
add
mov
add
int3
movsl
test
enter
mov
jo
inc
add
and
mov
add
push
add
notl
sar
aam
gs
insb
outsb
enter
test
insb
insl
subl
andl
jae
add
add
outsl
dec
ret
add
int3
add
addr16
add
pop
das
lock
add
jle
add
pusha
add
adc
mov
add
test
test
adcl
add
add
cwtl
repnz
inc
add
out
xor
jo
jmp
sarl
sbb
shll
icebp
jge
inc
add
movsb
add
mov
jnp,pn
push
add
mov
add
mov
jo
test
mov
add
arpl
xor
testb
repnz
sbb
xchg
xchg
add
push
add
add
inc
out
fildll
clc
push
add
add
hlt
add
fldl
add
mov
cld
xor
push
add
je
mov
ds
and
inc
in
sar
std
fwait
pushf
mov
hlt
add
push
add
mov
pop
movsb
add
sub
add
add
test
out
sahf
push
mov
or
loope
push
leave
inc
sub
add
add
xchg
mov
xor
add
mov
mov
add
mov
mov
push
ret
jp
add
fdivr
inc
add
bound
mov
mov
scas
iret
sbbl
addr16
outsb
pop
mov
test
add
add
jge
jge
movb
cmpsb
add
inc
add
jge
jg
add
popa
loop
xchg
cmc
sbb
sub
jb
cwtl
push
add
inc
add
add
jns
and
mov
add
pop
ja
mov
lcall
cmp
aaa
cmp
addb
movb
lock
jnp
mov
push
add
call
add
inc
jns
dec
lahf
inc
cli
push
sub
and
and
sub
dec
dec
mov
sbb
push
add
imul
scas
addr16
adc
xor
add
jecxz
add
outsb
xchg
add
adc
xchg
add
add
add
add
addb
mov
lock
sbb
xlat
mov
fstl
add
add
insl
or
and
das
addr16
mov
and
add
sub
add
test
jo
mov
mov
imul
add
push
add
fdivrl
push
add
insb
push
mov
add
mov
sub
popf
adc
add
cltd
cmp
push
add
add
scas
mov
mov
insb
xor
ret
adc
daa
rolb
push
mov
sbb
ficomps
add
add
and
loope
arpl
add
xchg
add
push
sbb
mov
add
cwtl
xchg
add
gs
hlt
add
add
insl
cmc
jo
dec
dec
dec
aad
lods
add
add
and
mov
js
cltd
loopne
add
xor
pusha
add
fldcw
mov
sub
sub
lods
data16
add
pop
movsb
add
std
gs
add
pushf
push
add
lcall
and
add
fidivs
mov
add
and
push
loopne
gs
sbb
sti
xchg
dec
dec
mov
sub
dec
test
add
add
mov
int
in
adc
mov
add
out
into
in
pop
cld
notl
mov
sub
repnz
rcr
jg
outsl
jmp
add
xchg
pushf
movb
leave
aas
arpl
sbb
rcll
and
mov
addl
repnz
add
mov
mov
test
push
cmp
icebp
mov
adc
and
rorl
out
pop
insb
jecxz
leave
inc
movsb
add
inc
xchg
add
or
adc
loope
xlat
fnstsw
push
add
lret
or
add
add
inc
mov
sub
pop
push
add
xor
jl
xor
cltd
pusha
add
add
add
test
aad
rolb
sbb
sub
mov
xchg
add
jp
int
add
mov
add
mov
imul
inc
add
add
add
mov
inc
inc
fbstp
enter
cltd
imul
jl
add
cltd
outsl
addr16
mov
xchg
add
jo
cmp
scas
les
int3
or
sub
leave
xor
adc
push
mov
add
lea
lret
testl
pop
lea
ret
add
pop
fidivl
push
add
inc
dec
xchg
add
cmp
out
or
mov
pop
mov
rolb
mov
mov
mov
jns
add
mov
jle
push
adc
mov
arpl
fwait
stos
into
or
sbb
xor
repz
mov
rolb
pop
gs
jno
add
jns
mov
add
add
and
mov
sbb
add
mov
mov
js
cmp
add
inc
enter
popl
in
test
add
fiadds
hlt
add
dec
ds
add
xor
push
add
je
mov
out
dec
cmp
scas
movsl
xchg
mov
add
mov
or
add
pop
stos
jp
loop
mov
mov
in
and
arpl
imull
mov
jle
mov
add
pop
mov
in
scas
adcl
push
pop
xchg
ljmp
add
mov
repz
add
add
sbb
adc
adc
rolb
mov
movsb
add
in
call
mov
add
add
add
add
add
pop
adc
or
les
xchg
into
movb
xchg
mov
add
mov
add
add
add
iret
mov
cmp
test
ss
dec
cmp
dec
cmp
add
pop
add
mov
mov
imul
add
add
ds
hlt
add
push
inc
test
popf
add
mov
add
das
cmc
aaa
jge
add
pop
testb
leave
jnp
add
push
add
xor
fcmovb
sbb
jecxz
add
and
add
adc
sub
add
add
cmp
xchg
add
add
stos
xor
cmpsl
fnsave
add
add
hlt
add
add
mov
mov
dec
add
push
test
add
inc
add
sbb
in
add
pop
push
add
add
dec
xor
out
dec
fisubs
jns
add
push
mov
addb
add
jecxz
add
loope
add
mov
cwtl
inc
add
ja
das
loop
push
fcomps
add
arpl
pop
mov
add
jns
xchg
fbstp
add
imul
push
add
add
mov
loopne
sub
adc
push
add
sbb
repnz
sbb
out
or
sbb
mov
add
mov
jns
sub
clc
fbstp
movb
pop
push
push
add
test
add
pop
pop
mov
mov
dec
jo
pop
or
mov
add
add
mov
add
aas
lods
outsb
push
popf
call
popf
fistps
mov
out
add
add
add
ljmp
icebp
mov
ficoms
in
in
shrl
jge
dec
mov
lcall
or
sbb
cmp
mov
add
les
sahf
int
add
mull
add
out
mov
add
cli
push
add
add
mov
add
mov
pusha
add
js
inc
push
add
add
out
ds
cmp
je
mov
into
push
test
sbb
cld
rcll
cmp
add
add
dec
sarl
add
out
add
addb
ret
add
pusha
add
test
sti
std
xor
add
add
dec
mov
push
jnp
add
and
mov
add
add
mov
shrl
add
pushf
mov
add
mov
add
add
mov
add
add
lret
test
in
test
fdivl
add
add
add
in
sub
or
jb
out
test
testb
inc
fwait
je
aad
cli
xchg
pop
call
mov
push
inc
cltd
and
mov
xor
addb
add
add
fcoml
pop
stos
jle
add
add
add
xor
inc
add
add
pusha
add
movsb
add
push
mov
add
call
add
inc
and
rorl
sbb
xchg
add
pop
cmpsl
movsl
ret
aaa
bound
mov
inc
add
cmp
add
push
cmp
sub
cmpsb
add
add
adc
sahf
and
jno
mov
or
inc
add
add
add
add
jmp
xchg
inc
imul
addb
out
scas
aad
incl
mov
fwait
out
mov
add
rolb
mov
cmpsb
add
add
dec
fwait
cmpsb
add
dec
test
jb
jno
lock
out
fldt
add
mov
add
xor
stc
fsubs
add
inc
add
mov
comiss
lock
subl
add
add
mov
add
add
insb
cld
mov
or
aad
add
add
add
repz
mov
insb
mov
add
pop
fsubrl
xor
mov
stos
into
xchg
add
add
adc
fcompl
add
mov
add
pop
scas
clc
sti
sub
jp
fwait
xor
add
addb
cld
add
cs
je
out
adc
mov
add
add
add
pop
inc
cld
sub
imul
mov
add
push
and
js
add
insb
inc
push
mov
xlat
sbb
or
or
adcl
add
sub
xor
lcall
in
add
addr16
movb
add
dec
lods
shll
add
mov
dec
sti
mov
add
xchg
js
add
je,pt
addr16
cmp
in
imul
mov
pop
xor
mov
pop
push
add
loope
je
cli
or
dec
fsubrp
inc
add
fmull
mov
and
mov
push
adc
sub
stos
sbb
rolb
mov
add
adc
rcrl
hlt
add
iret
push
das
ss
mov
repnz
push
pop
mov
or
add
rol
mov
mov
add
and
mov
fistpll
cmp
xor
inc
sub
add
jo
mov
pushf
mov
push
xchg
inc
addl
in
jno
call
mov
jnp
add
mov
push
mov
aaa
incb
inc
std
outsb
pop
cmpsb
add
push
xchg
leave
test
add
out
push
jmp
add
out
scas
pushf
inc
add
pushf
clc
add
mov
imull
pusha
add
loope
rolb
cld
out
and
add
add
pop
jmp
add
leave
cmc
imul
out
and
push
int3
pop
outsb
les
stc
pop
fwait
jnp
data16
add
imul
insb
popa
sbb
and
and
add
test
add
dec
lock
aaa
sub
add
pop
add
mov
add
add
add
mov
lret
push
mov
pop
sbb
jle
dec
pop
les
movb
push
sub
add
add
jne
xor
int3
inc
mov
sub
insb
test
pusha
add
push
int
add
mov
inc
mull
add
imul
add
addb
ja
add
add
lcall
sub
fwait
add
jl
bound
mov
sahf
icebp
push
fildll
add
insb
rcll
add
dec
or
jmp
cs
imul
cli
dec
test
add
je
push
add
mov
add
mov
adc
nop
add
cmpsb
add
add
dec
lcall
xor
mov
fmuls
adc
sub
add
push
inc
push
or
mov
cmp
add
repnz
pop
imul
add
imul
dec
dec
and
mov
add
add
pop
sub
ret
sbb
ss
add
ja
jno
loope
dec
and
outsl
fucomp
fistl
mov
push
cmp
int
pop
pushf
cltd
inc
add
fs
adc
mov
imul
mov
and
flds
add
mov
inc
scas
xor
jmp
add
stc
dec
mov
mov
push
mov
push
add
lods
ss
lods
add
mov
mov
adc
jge
jle
add
cmp
add
add
add
sbb
test
mov
rolb
int
fs
add
sub
add
cld
icebp
push
data16
lods
or
out
mov
push
fimuls
dec
rolb
mov
repz
rolb
mov
cmpsb
add
push
inc
add
lret
mov
ficoml
add
push
add
ds
clc
xchg
add
add
cmpsb
add
ljmp
xchg
add
mov
add
mov
cld
cwtl
mov
xchg
rcll
popf
lds
add
shrl
add
call
lret
lea
dec
or
pop
push
pushf
mov
xchg
inc
or
rolb
es
dec
push
rolb
cmpsb
add
jecxz
cmp
scas
js
inc
nop
add
add
pop
std
mov
inc
add
add
mov
jg
add
enter
pusha
add
add
or
push
icebp
cmpsb
add
in
cwtl
ss
mov
adc
add
add
pop
adc
pusha
add
data16
cmp
cwtl
push
inc
add
rcr
dec
xor
insl
and
sbb
push
add
xor
pop
mov
add
mov
push
add
scas
cs
xchg
add
push
add
rolb
mov
in
adc
lcall
jae
add
out
mov
mov
sub
adc
movsb
add
divl
test
jmp
dec
push
movsl
lcall
add
das
mov
push
add
fidivrs
ljmp
add
add
cmp
out
outsb
mov
push
add
test
fldl
testb
jg
out
push
pop
xor
rolb
adc
and
test
mov
daa
sub
mov
add
arpl
in
sbb
dec
mov
into
arpl
add
inc
js
addr16
pusha
add
add
data16
add
bound
mov
add
gs
pushf
inc
push
inc
add
mov
jbe
outsb
sub
in
mov
ljmp
addb
cmp
cmp
mov
in
inc
add
pop
dec
push
out
dec
jle
mov
adc
adc
add
mov
cmpsl
jmp
add
sbb
add
add
sbb
mov
add
fs
adc
dec
in
cmpsl
addb
mov
jae
outsb
jne
add
mov
sub
test
cmp
rolb
xchg
adc
push
add
fcmovnb
nop
add
add
cmpsb
add
int
add
mov
pusha
add
rcll
add
testb
sub
sbb
or
add
add
addb
add
mov
mov
or
sub
repz
add
inc
push
add
push
push
add
dec
in
add
testl
cmp
loope
jae
add
nopl
ret
mov
add
and
add
ljmp
pop
sub
ret
push
add
add
add
add
add
das
rolb
incb
add
imul
ret
outsb
cmp
or
sbb
add
int3
enter
inc
add
add
mov
sbb
inc
add
and
das
inc
fdivr
jge
push
add
add
mov
xchg
add
add
add
pop
or
xlat
addb
mov
int
add
mov
mov
cmp
xchg
add
in
xchg
jecxz
pushf
push
add
add
pop
pop
sub
call
sbb
add
xchg
jg
add
je
xor
call
ljmp
fabs
andl
mov
sub
js
add
sbb
cmp
push
add
add
mov
add
add
mov
lods
adc
in
dec
xchg
and
or
add
mov
aam
inc
jno
xchg
add
mov
add
mov
mov
aaa
pop
add
out
sub
mov
fwait
mov
in
sbb
jp
or
adc
in
rolb
push
add
add
popa
add
add
nop
add
rolb
rcll
xchg
pop
or
daa
xchg
add
add
push
add
repnz
add
mov
add
sub
add
mov
imul
xchg
add
test
add
add
pop
in
adc
out
pop
adc
test
add
xor
add
ret
cmp
sahf
cmp
cmp
lahf
sbb
fiadds
mov
sub
adc
push
loopne
sarl
ret
dec
jmp
movsl
xchg
aaa
jge
cmp
add
sub
add
addb
or
cmp
add
or
loop
mov
sub
cmp
add
add
lods
or
mov
inc
test
addb
addr16
jno
in
rolb
mov
mov
add
das
ficoms
fcmovne
and
jg
inc
add
add
jo
imul
add
add
testb
or
mov
loop
call
cmpl
mov
sub
add
cmpsb
add
add
xor
mov
lods
sbb
add
movb
mov
test
xor
push
add
pop
and
lret
cmc
movsl
xor
pop
mov
fs
add
add
clc
xor
sbb
add
imul
shll
adc
pop
pop
cmpsb
add
or
dec
dec
testl
add
add
pushf
adc
push
pop
rolb
or
into
adc
cmp
rolb
mov
xchg
icebp
pop
and
push
in
addb
loopne
pop
pop
mov
inc
cld
inc
add
sbb
push
shll
add
into
push
add
add
outsl
fists
ds
xor
rolb
and
aas
inc
ljmp
pushf
xchg
add
add
aaa
aas
fcompl
enter
push
add
or
add
add
in
cmp
mov
std
inc
cltd
add
in
cmc
cmp
ret
mov
add
or
rorl
add
mov
push
lret
jne
add
out
xchg
add
out
add
js
in
push
add
rorl
push
add
add
cmp
add
add
add
mov
repnz
repz
pop
mov
mov
add
sti
push
add
in
sarl
add
loopne
or
xor
jg
and
ret
cs
add
sahf
hlt
add
add
mov
mov
mov
add
add
cs
add
mov
pushf
and
add
imul
inc
sbb
or
hlt
add
dec
es
sub
out
add
mov
addb
xor
mov
lock
lods
adc
cmpsb
add
inc
add
add
inc
int
pop
rolb
cmp
mov
sub
adc
sbb
add
add
or
add
scas
cltd
cli
inc
add
cvtps2pd
mov
arpl
mov
fstpl
jl
add
cs
jb,pn
ljmp
sub
fsts
add
add
in
push
add
push
hlt
add
cmp
addb
cmpsl
imul
dec
ficoms
inc
add
fistpl
testb
add
add
jno
push
aad
push
add
ss
lods
jne
js
cmpl
add
and
sbb
cld
cmp
xchg
add
lahf
adc
sbb
add
shrl
shll
add
out
lret
xchg
add
sahf
pop
lcall
fidivrl
inc
jbe
or
ret
add
xlat
and
mov
add
adc
lret
mov
add
add
cld
add
pop
iret
cmp
inc
lods
cmc
lahf
jno
addr16
cmpsb
add
rol
nop
add
add
ficoml
outsb
pop
jbe
fdivrl
jno
lahf
push
add
aaa
and
iret
out
adc
push
pop
insl
call
add
ret
mov
bound
mov
pusha
add
add
sbb
add
mov
add
mov
cmc
outsb
sub
sub
and
fcomip
add
adc
xchg
jb
out
incb
popa
mov
cwtl
loopne
cmp
jmp
add
add
cmpsl
inc
add
rolb
cmpsb
add
bound
mov
rolb
into
mov
mov
pop
jbe
dec
mov
mov
in
mov
je
cmp
out
add
add
jno
add
mov
add
push
add
fcomps
push
enter
add
clc
jns
aaa
or
xchg
inc
add
add
adc
mov
add
xchg
add
std
mov
or
add
mov
loop
or
add
dec
insb
inc
add
stc
test
add
adc
add
outsb
out
adc
mov
lea
stos
jp
and
push
add
xchg
scas
repnz
daa
or
sbb
popa
and
add
jecxz
rcr
int
add
add
mov
in
dec
sbb
lret
sbb
or
add
in
adc
push
scas
ret
or
ret
repnz
repz
push
lods
rolb
cmp
xor
mov
xchg
add
add
shll
add
or
mov
or
add
jae
les
adc
add
mov
dec
outsb
fcomps
pop
xchg
das
jnp
add
add
mov
push
insl
mov
mov
outsb
cmc
jle
xor
stc
or
xor
xor
push
or
add
nop
add
add
pop
out
mov
jecxz
mov
cmp
mov
add
jmp
add
test
sbb
add
cmc
js
js
add
push
dec
push
outsl
xchg
loope
pop
and
adc
cmp
jbe
mov
add
add
add
jo
in
loop
pop
xchg
dec
popa
add
sbb
add
jg
pushf
roll
jb
movsb
add
cmp
out
adc
lea
add
add
lods
out
jecxz
sbb
add
jge
test
or
xor
into
mov
xor
rolb
sbb
in
fildl
mov
add
cmp
call
pop
dec
pop
add
sarl
mov
jns
xlat
mov
and
leave
shrl
add
cmpsl
movsb
add
outsl
pop
mov
fadd
add
shll
addr16
mov
add
pusha
add
shll
pop
scas
pop
pop
adcl
add
data16
add
add
jle
add
fldcw
add
add
mov
push
add
sbb
sub
jo
or
sub
and
adc
pusha
add
or
add
int
add
les
mov
add
enter
lods
clc
add
add
mov
dec
ja
lods
int3
cld
cmc
cmp
pop
push
add
sub
add
add
mov
xchg
cmp
lods
cmpsl
adc
add
add
rolb
out
jmp
add
add
ret
pushf
into
adc
mov
jmp
xchg
mov
push
add
adc
dec
aad
or
mov
dec
jecxz
add
mov
in
add
data16
clc
test
mov
jp
push
or
lods
pop
xor
xor
mov
jne
ret
inc
ret
xchg
add
mov
jge
adc
vpshab
lock
mov
add
in
imul
popa
stos
popf
sub
cwtl
test
jb
xchg
outsl
jns
jbe
pop
mov
andl
add
add
add
jle
std
fxch
sbb
mov
addr16
inc
pop
sbb
andl
add
add
add
add
addb
mov
mov
testb
jns
sbb
addb
cmp
add
mov
rolb
add
pushf
loope
add
xor
add
add
rolb
insl
add
mov
aas
jno
dec
add
mov
loopne
mov
xchg
adcl
push
add
mov
cmp
mov
add
add
mov
add
push
add
add
out
inc
add
sbb
and
mov
add
add
add
cmovs
add
add
mov
jnp
mov
mov
mov
ljmp
rolb
mov
add
dec
jb
add
mov
daa
jg
push
lds
push
add
add
sbbl
iret
testb
add
add
add
push
dec
cmp
inc
add
mov
sbb
push
cmp
in
xchg
mov
mov
inc
adc
xchg
add
rolb
mov
ret
popa
mov
push
fildll
jne
popa
xor
movsb
add
jne
adc
mov
icebp
pop
cmpsb
add
adc
mov
lahf
icebp
sbb
scas
cmc
out
add
popa
dec
push
out
mov
and
mov
imul
ljmp
mov
dec
xor
in
dec
jg
add
mov
push
imul
add
pop
insl
daa
outsl
into
mov
push
add
xchg
add
xchg
popf
and
mov
sub
add
fidivl
add
xor
add
pop
add
mov
in
shll
push
jge
inc
add
lds
je
call
push
add
pop
test
pop
cmp
or
pop
in
jg
add
or
push
add
and
xor
push
das
popf
or
mov
add
lcall
cli
pop
mov
lahf
and
add
add
xchg
ja
adc
add
mov
add
add
dec
pop
sbb
ja
push
or
cmpsb
add
fwait
sub
add
lret
xchg
sbb
sbb
mov
mov
sbb
add
add
mov
iret
sub
addb
add
add
mov
xlat
mov
add
add
leave
dec
jb
sub
stc
mov
data16
mov
add
lods
cmpsb
add
popa
repz
jnp
pop
cli
push
add
add
test
movb
jle
sbb
in
data16
xor
scas
mov
inc
xchg
sbb
add
add
or
add
mov
loopne
xchg
loope
add
add
mov
das
add
mov
pusha
add
aam
jo
fsqrt
outsb
jg
push
repnz
movsl
in
add
and
testb
outsl
out
xor
ret
mov
mov
pop
inc
add
xor
fs
scas
pop
lods
cmp
add
add
mov
push
xchg
add
add
addb
jle
add
add
add
enter
jl
cld
jmp
add
je
fwait
rolb
cmc
fwait
out
add
add
mov
add
or
cmpsl
icebp
in
add
fwait
aad
add
dec
test
mov
rolb
lret
ja
add
ret
lea
add
add
inc
mov
mov
add
or
call
jbe
pop
rolb
sbb
xrelease
xchg
mov
out
xchg
pop
mov
fists
add
cmpsb
add
sub
jnp
pop
and
mov
and
pusha
add
arpl
fsubrl
sub
pop
mov
addb
add
rolb
clc
mov
orl
stos
xor
lods
xchg
ljmp
mov
and
mov
popa
inc
push
add
add
xchg
test
sub
sub
lea
add
add
addr16
int3
popa
movb
mov
insl
jns
inc
or
cli
dec
insl
jo
aam
lahf
js
mov
adc
inc
add
add
jne
add
icebp
push
hlt
add
movsl
xlat
repnz
popf
adc
clc
or
add
pop
sahf
stos
icebp
aad
add
ljmp
add
lahf
mov
movsb
add
dec
mov
add
or
insb
sbb
lds
mov
mov
sub
add
push
iret
xchg
add
movsb
add
mov
add
add
mov
add
mov
inc
add
add
add
shll
add
add
out
incb
inc
xchg
add
add
popa
loope
sbb
and
mov
jb
xor
xchg
pop
ret
jge
add
mov
inc
dec
adc
faddl
fcomip
leave
pop
jne
gs
je
fwait
pop
mov
scas
loop
movsl
inc
add
push
ficoms
add
flds
pop
mov
xchg
stos
add
sub
cs
mov
jne
xchg
add
mov
sahf
add
mov
adc
sbb
xrelease
add
add
popa
scas
rolb
jl
add
inc
add
add
inc
add
pop
pop
ja
mov
fistpl
push
add
add
xor
xor
pushf
dec
dec
pop
fsts
dec
add
mov
push
add
ret
inc
add
add
cmp
dec
std
push
test
cwtl
add
add
inc
add
insl
bound
mov
rolb
cmp
add
mov
or
ficoml
add
fwait
test
add
clc
pop
mov
add
xor
add
cs
sub
cltd
or
add
add
cmp
dec
cmc
mov
lcall
add
add
test
daa
ret
pop
sub
or
ljmp
pop
enter
cltd
sub
inc
cli
add
in
add
add
and
mov
mov
sub
sub
int
add
je
push
rolb
rolb
mov
push
add
int
add
add
mov
idivl
push
push
add
rolb
or
add
icebp
jle
jo
sbb
xchg
add
mov
dec
mov
xchg
pop
sti
cmp
add
shr
loop,pt
rolb
push
inc
add
cmpsb
add
fnstsw
iret
or
addb
add
shl
add
fsubs
add
lock
les
fistl
push
add
cmpsl
and
add
jl
dec
les
or
sub
fdivs
aaa
inc
pushf
push
sub
addb
add
lods
cmp
push
add
ljmp
add
add
out
out
repz
cmp
pop
in
mov
add
cmc
and
sub
add
scas
pop
lods
lds
sbb
jnp
nop
add
sbb
jb
dec
mov
add
add
add
adc
data16
adc
xor
dec
out
movsb
add
inc
or
sub
ds
add
xor
in
mov
cmp
fsts
popf
mov
mov
arpl
add
popf
dec
adc
mov
add
adc
sub
add
add
add
add
fcompl
cmpsb
add
fwait
call
add
jecxz
in
je
pop
xchg
cmp
add
jno
inc
adc
outsl
push
les
stos
aas
dec
mov
or
xchg
addr16
add
add
sbb
sti
jne
aad
push
mov
in
addb
add
cwtl
push
rolb
jg
add
xchg
js
lods
push
fsub
add
stc
cvttps2pi
sbb
adc
out
push
cmc
mov
dec
cmp
xchg
mov
iret
ret
xor
lea
mov
add
adc
push
fidivs
add
adc
lods
mov
jg
rolb
imul
dec
and
cld
mov
add
add
add
and
mov
add
and
mov
mov
aaa
dec
imul
add
jbe
adc
jne
add
outsl
inc
dec
jmp
rolb
cmpsl
jnp
inc
call
fiaddl
add
cld
xchg
add
pop
jmp
mov
mov
dec
or
mov
pop
push
add
jmp
add
scas
dec
aad
push
inc
and
pop
gs
bound
mov
loopne
aas
add
aaa
dec
insl
jnp
rolb
inc
out
mov
push
adc
xchg
call
inc
pop
mov
arpl
sub
outsb
pop
mov
gs
push
mov
stos
jl
mov
dec
sbb
mov
ficoms
sub
rolb
jnp
inc
add
add
lret
testb
add
add
jae
out
insl
pop
cwtl
xchg
add
adc
out
iret
ljmp
lock
add
popf
int
add
sub
test
add
add
adc
ret
aas
jno,pn
add
adc
jl
add
mov
add
mov
sbb
add
add
xchg
fwait
mov
jl
test
inc
add
mov
inc
or
or
cwtl
add
mov
insb
xchg
add
push
xchg
mov
cwtl
fstpt
dec
pop
outsb
daa
xchg
add
mov
fadd
add
pop
pop
pop
loop
or
push
add
cli
fwait
dec
xor
sub
mov
dec
or
add
jp
iret
xchg
add
in
aas
fstp
sbb
jbe
mov
ljmp
jl
add
push
add
lahf
mov
or
jecxz
xchg
add
fdiv
add
stos
mov
addb
jmp
jle
aam
xchg
add
sbb
rolb
add
aaa
paddusw
stos
pop
dec
inc
add
push
addb
fwait
lahf
inc
add
add
mov
add
add
scas
ljmp
ficomps
rolb
adcl
add
add
push
lret
cld
pop
adc
addb
addb
add
adc
add
xchg
add
addb
xchg
add
add
mov
daa
lret
stos
mov
and
cmpsb
add
mov
jb
inc
add
add
lret
int3
bound
mov
pop
xchg
rcr
out
test
dec
mov
cmp
mov
sub
add
jne
adc
add
push
add
pop
push
int
add
add
cs
sub
repnz
jmp
push
add
add
les
movsb
add
pusha
add
sub
scas
sbb
sub
pop
push
add
add
insl
mov
fstl
xor
xchg
cli
cmp
mov
add
xor
cmp
mov
mov
add
addb
sbb
std
sti
push
add
push
or
and
mov
add
add
inc
add
inc
add
add
repz
mov
inc
jmp
jbe
pop
jecxz
outsb
push
cli
mov
push
rolb
fwait
orl
add
add
add
dec
jo
ret
popf
add
lock
scas
jae
scas
push
add
out
lods
inc
push
mov
jbe
clc
mov
add
or
add
pop
mov
inc
add
lods
mov
add
add
add
in
mov
push
add
scas
push
add
mov
in
test
mov
cli
inc
add
ror
inc
add
int
jnp
bound
mov
add
add
add
and
dec
push
lcall
or
add
sti
int
add
aam
mov
lret
jge
cli
imul
and
add
mov
add
mov
add
mov
dec
lea
add
pushf
cmp
int3
sub
add
jb
pusha
add
xchg
dec
stos
frstor
add
add
push
add
cmp
fwait
jo
lret
movsl
inc
push
add
in
clc
add
jo
outsl
mov
stos
stc
repz
lret
jg
mov
add
mov
cmp
pmulhuw
repz
mov
add
insb
dec
mov
mov
and
mov
add
lret
cmp
fwait
pop
xchg
rcl
aas
or
mov
in
sbb
pop
mov
xchg
add
sbb
add
test
icebp
pop
push
add
add
push
add
and
les
rolb
add
mov
lds
jo
in
loop
inc
addr16
push
add
jecxz
mov
cmp
js
and
mov
jns
add
add
add
cli
pusha
add
add
mov
sbb
push
pop
dec
cmp
addr16
aam
dec
dec
out
mov
push
and
dec
je
xchg
jno
shr
scas
xorl
mov
push
add
pop
addr16
xchg
inc
aaa
inc
jg
cmp
lahf
sub
scas
cmc
loope
xchg
push
repnz
loopne
clc
jbe
and
mov
orl
push
add
jmp
add
or
sbb
xchg
mov
les
out
push
add
add
add
stos
xor
mov
gs
sub
stos
cmp
mov
push
add
add
testl
jns
fimuls
and
bound
mov
jb
iret
movsl
sti
mov
adc
add
lods
iret
mov
push
add
mov
movsl
es
add
add
jbe
pop
xchg
add
add
lods
cmp
mov
addb
add
mov
mov
loopne
sbb
mov
cmpsb
add
ret
dec
pusha
add
cmp
jbe
inc
add
xchg
add
lea
cmpsb
add
add
xchg
add
cmp
add
inc
dec
mov
cltd
lret
pop
jmp
shll
mov
jnp
add
inc
add
add
sub
mov
addb
add
add
add
xchg
filds
or
add
add
mov
fdivrs
xor
fwait
pop
in
lret
jno
stos
in
cmp
sub
pop
dec
push
add
xchg
movl
add
push
add
jnp
outsb
sbb
repnz
or
push
add
je
loopne
lea
add
scas
std
leave
insb
sub
sub
inc
add
mov
add
sti
loop
rolb
add
mov
add
fisubs
sbb
add
add
ret
cmpsb
add
push
add
push
add
lret
addr16
add
outsb
pushf
mov
add
add
fisttpl
jb
adc
mov
orl
cmc
xchg
xchg
add
xchg
add
sbb
aaa
inc
add
insl
push
add
mov
rolb
aad
mov
add
and
lds
xor
sarl
add
add
ljmp
add
add
cmp
add
testb
stos
push
add
pop
movsb
add
lcall
data16
insb
or
add
mov
bound
mov
in
dec
inc
add
lods
pop
adc
xchg
mov
cmc
mov
mov
cmpsb
add
mov
mov
jge
add
mov
add
daa
insb
mov
mov
and
mov
in
cmp
and
xchg
add
add
int
pop
dec
adc
add
fs
rolb
add
js
cmp
leave
int3
or
shl
pop
cs
mov
lcall
cmp
or
adc
add
xchg
leave
loop
testl
adc
enter
add
mov
daa
xchg
scas
xchg
cltd
out
fistpll
add
movsb
add
outsl
inc
add
add
push
inc
add
xor
mov
cmp
je
mov
ret
lret
icebp
stos
add
add
add
bound
mov
sahf
sbb
mov
js
add
repz
xchg
out
cmpsl
xor
cs
add
add
mov
imul
mov
aaa
test
std
insb
stos
aas
nop
add
add
pop
rcl
add
enter
sbb
push
add
push
add
add
add
adc
add
hlt
add
or
dec
dec
pop
push
add
outsb
and
mov
mov
add
ds
ljmp
add
data16
or
xchg
and
lret
inc
jno
inc
add
mov
loop
dec
cmc
je
and
fcmovne
lock
mov
add
jp
xor
aas
or
add
in
add
mov
add
pop
mov
into
fmul
rolb
lock
test
addb
dec
adc
push
push
add
push
fisubrs
movb
testb
add
add
add
rolb
add
inc
add
mov
into
pop
imul
and
mov
mov
add
add
add
mov
sub
mov
and
inc
or
push
add
mov
mov
add
mov
add
xchg
inc
pushf
mov
inc
mov
mov
pop
xor
sub
sub
or
dec
jecxz
arpl
fsts
add
add
add
fwait
push
inc
add
add
add
mov
sbb
mov
dec
xlat
add
mov
cli
cmp
mov
imul
add
add
add
add
add
add
dec
mov
roll
push
pop
sub
add
and
sub
add
call
mov
adc
test
arpl
lea
in
pusha
add
testb
add
add
bound
mov
push
and
mov
jno
mov
cmp
jno
into
push
add
std
add
mov
add
add
mov
inc
add
dec
cmp
add
dec
pop
out
xor
test
jnp
int3
ds
or
outsl
rcr
add
xor
mov
add
shrl
mov
cmp
xchg
add
add
add
cs
mov
or
add
or
mov
stos
dec
adc
mov
mov
inc
add
adc
cmpsl
sub
mov
adcl
and
jo
bound
mov
pop
insl
out
ljmp
mov
aad
std
addb
add
mov
inc
movl
add
js
mov
push
cltd
sbb
add
movb
xor
pop
push
add
enter
xchg
lds
popf
js
pop
pushf
push
add
add
movsb
add
and
filds
mov
dec
xchg
stos
addb
and
mov
enter
add
mov
and
pop
pusha
add
add
jno
xor
lea
add
push
add
xchg
dec
mov
cmp
push
jecxz
add
int
dec
lods
icebp
sub
pop
mov
mov
add
mov
add
scas
push
add
outsb
pushl
cwtl
fistl
dec
mov
add
mov
or
sbb
cmp
dec
sub
push
add
dec
cmp
testb
add
cmp
hlt
add
cld
ret
fmuls
scas
sbb
das
inc
add
add
add
add
lods
sbb
cmp
push
add
sahf
inc
leave
test
add
movsb
add
test
add
mov
rolb
or
jl
sar
pop
push
cmp
add
add
add
push
adc
xchg
movsb
add
add
insb
mov
test
outsl
xor
add
lods
rolb
push
add
les
add
in
sub
add
aas
popf
mov
js
adc
mov
stos
cld
adc
sbb
sbb
adc
add
and
inc
aam
in
mov
aas
cltd
aas
ljmp
add
or
mov
add
stos
psubsw
add
add
jbe
or
jp
push
outsb
test
mov
xchg
daa
les
icebp
sub
add
sub
xor
push
add
rorl
mov
pop
inc
add
pop
add
add
push
add
add
pop
roll
inc
adc
add
mov
add
roll
add
or
dec
lods
push
loop
mov
mov
fidivrs
add
add
sub
add
push
add
xchg
add
jecxz
stos
test
cmp
in
fsubrl
mov
add
insb
and
mov
jbe
roll
dec
adc
aas
fstpl
add
mov
call
add
aam
xor
andl
push
aaa
cmp
pop
je
clc
cmc
xchg
add
xor
adc
pop
mov
mov
fwait
loopne
sti
sbb
add
leave
push
cs
popl
mov
push
add
sbb
add
inc
addb
test
jge
and
pop
jno
jbe
repz
add
add
call
cwtl
test
in
popf
cmpsl
rcrl
movb
adc
fistps
add
add
add
mov
and
out
add
call
mov
or
mov
mov
insl
movsl
out
push
rolb
scas
cmpsb
add
push
popa
lods
cmp
pushf
outsb
or
les
jp
roll
mov
add
clc
mov
xlat
mov
sub
xor
adc
lahf
xor
cmp
add
mov
add
add
mov
les
or
test
adc
jno
jne
mov
mov
mov
jb
jmp
add
dec
loope
das
scas
int3
aas
lahf
lcall
scas
movsb
add
and
mov
rolb
push
and
fs
push
fimull
add
jle
add
push
add
add
dec
jl
sbb
jmp
rolb
pop
addb
and
mov
int3
add
add
add
inc
add
sub
bound
mov
add
stc
into
xchg
jle
sahf
xchg
add
add
repz
pop
cmpsl
sub
add
nop
add
mov
inc
xchg
shll
imul
add
add
xchg
lds
add
outsb
adc
pop
mov
testb
lret
inc
add
jl
add
je
adc
xlat
scas
push
add
clc
insb
testb
mov
jb
or
add
mov
and
jge
mov
addb
and
fidivrl
testl
mov
add
jmp
dec
cld
xchg
mov
int3
cmp
inc
add
add
add
ficoml
add
jge
pushl
add
adc
push
add
repz
lret
mov
xchg
pop
sbb
pop
call
add
add
fnstsw
push
leave
loop
push
add
icebp
cli
pop
adc
mov
testb
xor
push
mov
or
xor
in
pop
pand
push
mov
ret
add
sahf
mov
push
sub
add
push
mov
add
mov
jne
jge
ds
xor
xchg
add
std
push
add
inc
dec
iret
mov
sub
inc
mov
pop
jnp
int3
mov
add
movsb
add
popa
pop
testb
sub
xchg
scas
pop
inc
add
add
inc
add
dec
sahf
stos
outsl
arpl
and
js
int
pop
cmpsb
add
add
xchg
sahf
mov
rolb
mov
daa
xchg
inc
add
sbb
add
mov
sbb
mov
fsts
lcall
testb
inc
in
mov
lahf
int
aam
mov
cmp
test
pop
dec
stc
and
mov
lods
repnz
cltd
call
repz
add
add
mov
iret
aad
mov
lods
movsb
add
cmc
lret
add
add
jno
add
hlt
add
stc
mov
loope
orl
cmp
mov
mov
cmp
xor
aas
pop
insb
mov
jle
add
xchg
nop
add
subl
test
in
push
add
add
add
fdivs
ljmp
cmpsb
add
add
pop
cmp
xor
add
pop
dec
popf
dec
pusha
add
mov
xchg
cwtl
sub
cwtl
js
lret
jge
jb
cmp
repz
and
mov
test
xchg
add
add
pop
into
fstps
lds
add
sub
das
sbb
xchg
add
hlt
add
mov
add
jns
aas
aam
dec
sbb
adc
push
scas
aaa
loopne
mov
cli
mov
insb
leave
jo
sub
call
add
dec
jecxz
push
add
stmxcsr
jb
or
int
lods
bound
mov
jnp
add
cmp
and
mov
mov
repnz
adc
or
add
mov
add
cmp
add
xor
mov
and
mov
add
add
xchg
add
dec
xor
push
add
jnp
cmp
xchg
mov
daa
lahf
push
add
cld
pop
adc
inc
sbb
cs
xchg
pop
add
mov
jb
push
clc
cmpsb
add
dec
xchg
pushf
test
call
sbb
ret
rolb
mov
lds
stos
mov
loopne
inc
add
add
jne
das
push
addb
cmpsb
add
and
xchg
pusha
add
cltd
call
adc
add
push
sbb
cs
add
adc
and
add
mov
or
mov
data16
jae
sahf
and
mov
add
insb
push
movsb
add
jp
ljmp
xchg
add
pop
pop
insb
jge
psrld
out
add
add
stc
sub
popf
sbb
add
std
push
add
sub
cld
mov
cld
test
das
add
lods
int3
sub
dec
ljmp
push
add
add
pop
xchg
xor
xchg
fiaddl
mov
in
test
ds
fisttps
inc
cs
push
sbb
inc
add
add
add
loop
sbb
jl
cmp
inc
add
jle
loopne
loope
mov
push
dec
add
cmp
scas
sbb
lods
subl
shl
push
xor
rolb
or
inc
in
hlt
add
add
cs
ret
daa
dec
pushl
cmp
add
mov
out
mov
inc
mov
jne
and
aas
cmp
leave
fnstsw
ja
xor
arpl
ret
jno
mov
pop
lea
sbb
dec
movsl
arpl
add
mov
add
cmp
ret
stc
call
pop
ljmp
pushf
js
add
add
add
push
add
push
rolb
xchg
mov
jl
std
cmpsb
add
in
sub
pop
cmp
push
test
and
mov
mov
adc
xor
xor
or
les
into
out
enter
dec
xchg
hlt
add
cs
out
jbe
nop
add
call
addr16
dec
lret
xchg
add
in
data16
repz
fisubs
mov
add
mov
mov
pslld
pop
jo
mov
add
mov
gs
add
add
xchg
cmp
mov
movb
add
and
add
dec
fdivrs
testb
push
dec
sbb
xor
arpl
xchg
add
add
jno
lea
stos
jmp
cmpsb
add
loopne
xchg
inc
add
pop
add
pop
test
jo
test
add
cmp
add
pusha
add
test
jno
ds
sbb
inc
int
leave
mov
adc
add
dec
cmp
xor
inc
add
and
test
ret
add
add
mov
out
cwtl
push
inc
in
bndldx
inc
add
xchg
inc
add
mov
xlat
xchg
add
adc
add
call
pop
mov
add
mov
add
inc
push
add
add
xchg
add
dec
dec
sbb
cmc
jge
add
mov
add
mov
pushf
push
stos
fistpll
xor
xchg
cmp
add
mov
cltd
int3
in
push
mov
test
and
mov
cmp
inc
inc
add
add
xor
push
jmp
add
inc
repz
rcrl
mov
add
sahf
jmp
out
add
jp
add
add
mov
sbb
loope
add
dec
subl
jns
mov
add
mov
fistpll
and
sub
das
in
add
xchg
sub
lock
shl
ret
jnp
pop
rolb
repnz
les
jle
in
popf
add
in
roll
add
out
cmpsl
add
cmp
cmp
sbb
add
mov
push
aad
pop
ja
subl
xor
xchg
add
add
cmp
inc
add
sub
lret
fistps
adc
add
imul
add
and
mov
push
adc
lock
mov
mov
out
sub
xchg
inc
add
sub
jo
shll
ljmp
pushf
add
sub
xchg
push
add
sbb
add
mov
add
imul
testl
add
sub
mov
pushf
in
add
add
in
out
jae
aam
bound
mov
add
jecxz
push
add
or
lret
rolb
push
add
add
addb
lahf
pop
sbb
push
xchg
jno
and
mov
jo
jmp
testb
mov
inc
add
add
sahf
push
add
and
jne
rolb
arpl
add
iret
cmp
xchg
add
movsb
add
out
movsb
add
addr16
addr16
dec
imul
jmp
and
in
out
mov
mov
mov
add
lods
out
popf
jo
adc
stc
sbb
sbb
jmp
push
add
cmp
std
lcall
mov
test
addr16
mov
lock
adcl
clc
ja
sub
cmp
addb
sbb
stos
cmc
loope
inc
add
add
cmp
jl
pop
jl
xor
jbe
inc
mov
sbb
je
lcall
inc
add
xor
in
popa
push
add
pop
in
add
mov
lret
dec
lret
outsl
mov
mov
dec
repz
outsl
mov
add
int3
jo
mov
mov
mov
mov
jle
add
dec
std
add
int
add
xchg
add
push
add
outsb
iret
sbb
push
add
mov
stos
psrlw
push
push
fadds
cli
add
and
dec
and
push
cmc
ljmp
sbb
into
add
xchg
add
add
leave
jmp
test
mov
fcomps
push
js
das
js
scas
cmp
ljmp
xchg
or
jb
stos
add
hlt
add
insl
dec
nop
add
pop
movsb
add
push
jno
sbb
mov
out
andl
ljmp
imul
add
and
xor
out
leave
jo
outsl
fcmovne
cld
sbb
jg
add
das
loopne
mov
dec
cld
xor
pop
insb
mov
push
add
mov
mov
add
push
add
xchg
push
add
pop
cmc
pop
outsl
adc
lods
and
mov
dec
ror
jns
pop
je
mov
add
lcall
push
stos
push
add
add
or
xchg
sbb
lea
push
add
push
add
add
add
add
pop
bound
mov
insb
or
movsbl
add
add
ret
jo
aad
add
add
cli
popa
inc
add
arpl
add
push
add
sbb
add
mov
inc
add
stc
add
mov
add
loope
rolb
mov
adc
inc
sbb
in
and
cs
dec
push
xchg
add
test
cmp
add
cmovbe
ffree
out
fwait
or
add
pop
mov
movsb
add
addb
stos
sub
xor
test
fcmovne
ficompl
enter
mov
dec
scas
mov
and
gs
in
test
push
add
mov
in
mov
add
in
add
test
mov
add
and
mov
pop
cwtl
sub
push
fiaddl
and
push
add
mov
mov
add
js
insl
cmp
add
data16
mov
sahf
icebp
jns
add
add
mov
add
xor
sahf
loope
mov
add
pop
add
mov
add
xchg
dec
out
sbbl
sub
add
add
fmulp
mov
ljmp
lcall
add
mov
add
dec
clc
jmp
jo
or
mov
add
add
pop
outsl
or
add
inc
add
movsb
add
rcll
push
mov
adc
add
cmp
xchg
mov
cmpsb
add
in
xchg
add
pop
sbb
sbb
push
mov
add
lcall
add
cmp
mov
jb
dec
repnz
add
je
fldcw
add
dec
shrl
popf
xchg
add
sti
sbb
add
add
call
jbe
push
lods
xchg
mov
sbb
sbb
or
mov
pop
lret
inc
scas
inc
add
add
add
in
mov
insb
xchg
add
pop
mov
mov
add
add
mov
outsb
dec
add
into
sbb
dec
rolb
out
rcl
aam
jmp
out
testb
dec
cmpsb
add
stos
enter
add
add
cmpsb
add
add
or
jle
popf
fisubl
pushf
cmp
jnp
xchg
add
enter
sti
push
test
cmp
pop
push
add
mov
mov
leave
dec
lea
pop
xor
xchg
lods
loope
enter
add
mov
fisttpll
adc
inc
fsubs
push
add
daa
mov
add
scas
test
xor
add
add
fwait
add
inc
push
sub
cmc
mov
add
mov
jae
loopne
pop
orl
sbb
mov
jle
jne
xor
jg
or
inc
pop
testb
adc
ds
test
dec
pop
lock
xchg
dec
xor
mov
mov
add
sbb
add
add
lods
push
add
add
or
add
cmpsb
add
data16
std
pop
mov
add
push
add
jne
ds
add
lock
adc
push
add
and
xor
inc
add
add
sti
mov
add
insb
sbb
mov
aas
push
cli
jmp
add
sub
mov
add
add
cmp
cmp
inc
add
dec
cltd
and
mov
add
clc
xchg
add
std
ds
mov
add
add
sub
iret
jae
add
add
into
insb
enter
add
xlat
or
sub
into
loope
add
add
ret
into
ds
add
dec
cmp
fwait
mov
outsl
popf
das
jl
stos
rolb
lret
inc
lock
out
nop
add
jns
add
add
and
cmp
mov
movsb
add
jle
add
lds
lret
sub
sub
sahf
test
xchg
add
mov
inc
ja
mov
push
add
push
add
or
add
fcmovne
repnz
mov
aaa
gs
mov
inc
dec
xchg
dec
mov
dec
jmp
cmp
jge
sbb
stos
cs
push
xor
xor
pop
sub
cmc
sbb
cld
xchg
add
add
sub
add
fdivs
popa
popf
fwait
aad
mov
sbb
dec
sub
pause
add
mov
add
mov
lods
iret
das
stc
jecxz
add
mov
add
ret
sbb
add
xchg
jnp
push
add
outsb
adc
fidivl
add
dec
addb
ret
lods
pandn
fcmovnu
loop
and
je
sub
add
mov
inc
add
fsubp
add
jno
adc
jp
jp
xor
testb
or
xchg
add
inc
add
dec
iret
aas
add
cld
jp
push
pushf
push
push
add
insb
in
insl
push
imull
or
mov
lahf
in
sbb
mov
xor
inc
add
add
xchg
add
add
add
push
je
push
add
mov
add
add
mov
sub
pushf
and
mov
add
mov
add
xchg
out
movb
push
add
pop
lahf
mov
jbe
fidivs
xchg
in
sub
add
add
add
rcl
mov
add
xor
xor
lret
addb
iret
jno
ficomps
inc
xchg
outsb
repnz
pop
loopne
push
pop
adc
add
loope
mov
push
add
add
dec
imul
and
mov
add
inc
add
in
je
adc
add
xlat
das
mov
clc
sub
add
ret
test
mov
jbe
aam
incb
mov
roll
add
mov
and
jl
lds
nop
add
lcall
add
add
add
adc
data16
add
push
add
jnp
add
lahf
inc
push
add
ljmp
sbb
xchg
add
outsl
int
inc
iret
push
add
lahf
xor
add
add
cmp
pop
repnz
add
or
cmp
ja
ficompl
add
add
and
les
sbb
add
mov
outsb
test
add
add
add
or
dec
fmuls
add
and
lock
std
scas
add
cltd
push
push
add
add
repnz
jnp
mov
addb
pop
arpl
cmpsl
jae
repz
or
xchg
test
icebp
xchg
fstpl
add
insl
stos
loop
fisubs
add
pushf
call
icebp
inc
movsb
add
add
or
add
dec
rolb
add
add
add
mov
int3
pop
inc
xor
pop
jp
stc
bound
mov
add
mov
mov
popa
jbe
push
in
cld
mov
add
sub
mov
add
add
data16
mov
add
adc
push
push
xor
add
dec
xor
mov
ficoml
mov
add
jb
cmp
int3
sub
sub
jne
add
mov
add
xor
scas
cli
and
mov
dec
sub
dec
movb
nop
add
addb
gs
add
add
dec
xlat
and
mov
push
addr16
add
leave
fadds
pop
mov
mov
movl
bound
mov
add
orl
add
call
add
add
adc
in
push
add
add
mov
mov
jb
push
add
sbb
test
push
cs
xchg
dec
push
add
add
insb
mov
add
adc
scas
cmp
cmp
lods
xor
mov
cwtl
add
pop
lcall
sub
decl
ljmp
mov
add
xor
fcoms
add
jo
stos
outsb
cmc
fdivr
adc
and
mov
add
repz
add
jne
sbb
imul
mov
push
mov
xor
push
add
je
mov
or
push
nop
add
fildl
stc
cmc
inc
add
add
fstps
int3
xchg
fidivrs
cwtl
cs
add
cmp
pusha
add
or
mov
iret
sahf
dec
dec
jno
mov
sahf
mov
jnp
add
add
pop
jecxz
add
mov
rolb
data16
push
add
int
add
rolb
add
mov
out
roll
out
inc
inc
out
cmpsb
add
cmp
mov
jecxz
mov
decl
pop
mov
add
sub
push
and
xchg
stc
cmc
mov
add
aas
inc
add
add
push
mov
in
jmp
cld
je
xlat
or
addb
add
xchg
jecxz
pop
sbb
mov
add
dec
or
inc
add
add
mov
jge
add
dec
or
cmp
test
xchg
ucomiss
fucomp
sub
cli
xchg
add
lret
jle
cmovp
iret
pop
aam
cmp
int
add
add
dec
mov
jmp
stc
fisubrs
stos
jmp
add
add
mov
cmpsb
add
mov
loope
inc
int3
inc
add
jbe
push
add
xor
mov
jp
test
ja
add
dec
add
mov
jge
sub
adc
dec
pop
rolb
imul
stos
or
scas
mov
add
sbb
push
fdivrl
cmp
push
add
add
add
sbb
addb
add
inc
add
add
push
gs
cmp
add
mov
aad
lret
pop
mov
mov
mov
pop
fdivs
sub
test
aam
pop
out
fldcw
xor
add
inc
sub
add
outsl
ja
push
push
add
sbb
sbb
adc
daa
sbb
test
add
or
pop
pop
sub
test
add
add
jp
xor
addr16
into
leave
add
fnop
add
add
add
add
or
pop
dec
fwait
loopne
mov
fisubrs
inc
add
push
pop
test
inc
mov
imul
add
add
loope
or
jl
add
ret
lods
outsb
pusha
add
pop
addr16
loopne
sti
fwait
jne
xor
mov
add
pop
cmp
ret
fmuls
mov
ja
jbe
push
add
in
add
jns
add
cltd
cmpsl
lahf
fmuls
dec
scas
lds
mov
popa
cs
pusha
add
fsub
add
add
inc
add
and
ret
rol
or
push
add
add
or
hlt
add
test
in
jno
aas
inc
inc
add
mov
clc
into
clc
cmc
push
aad
leave
hlt
add
movsb
add
sti
and
mov
mov
nop
add
push
addr16
test
add
add
add
or
add
pop
or
rolb
mov
ja
add
mov
add
sub
mov
sbb
add
add
loopne
sbb
sub
add
mov
mov
popf
mov
push
aas
daa
xor
push
add
mov
pop
cmc
mov
xchg
inc
cmp
and
or
add
add
add
out
mov
add
rolb
inc
add
dec
lret
aam
lds
push
ljmp
mov
add
jmp
aam
mov
mov
enter
push
movb
and
jnp
add
pop
sbb
mov
dec
push
loope
or
push
mov
mov
add
add
pop
dec
out
add
xor
pop
sub
icebp
mov
mov
push
add
add
mov
add
mov
or
aam
and
push
data16
add
add
jge
add
add
testl
add
dec
mov
insl
and
aad
add
add
lock
ret
aaa
dec
cmp
add
xor
sub
js
aaa
rolb
out
xor
lret
outsl
dec
fldt
testl
rolb
mov
push
add
das
int3
jne
add
test
testb
add
add
xlat
mov
outsb
addr16
js
jg
xchg
js
cld
add
mov
cli
mov
scas
popf
arpl
add
add
add
cmpl
inc
loope
aam
lcall
mov
add
mov
cwtl
dec
sti
adc
mov
icebp
sub
add
out
inc
cmp
lahf
adc
pop
clc
pop
mov
or
sbb
add
add
xchg
pop
testb
adc
pop
add
sbb
mov
add
outsl
fldl
je
or
inc
add
incl
add
jb
pop
popa
pop
out
push
add
lds
push
ljmp
leave
lahf
lret
enter
pop
dec
push
add
pop
xchg
add
xchg
add
push
mov
add
mov
sbb
push
add
add
pop
jns
and
mov
add
pop
jle
fildll
adc
scas
sub
add
jl
testb
pop
or
add
add
add
mov
rcrl
adcl
mov
mov
addr16
stos
mov
dec
test
hlt
add
enter
int3
shll
mov
test
jmp
xor
add
fcomp
xchg
xor
add
mov
push
jo
fs
add
sub
aas
adc
outsb
sub
pop
hlt
add
mov
mov
mov
pop
mov
mov
add
sub
jb
fistps
xlat
lret
stos
mov
add
jmp
mov
xchg
fstps
data16
add
xchg
add
insl
mov
add
pushf
shll
testb
pop
leave
test
add
outsl
cmp
sub
add
add
add
mov
add
sbb
in
rcr
std
mov
add
ljmp
xor
mov
jl
add
add
loopne
sarl
add
mov
push
add
addb
add
and
sub
xchg
add
hlt
add
push
add
cmp
mov
rolb
rolb
mov
add
popf
mov
add
cmpsl
mov
add
pop
jmp
add
add
fwait
loope
dec
mov
mov
add
add
or
pop
daa
pushf
daa
pushf
mov
movsl
movl
repnz
add
add
add
mov
mov
int3
lds
addr16
test
or
sbb
fnstcw
cmpsl
das
cmpsb
add
mov
mov
into
lret
rcll
add
mov
popa
out
and
arpl
xor
add
mov
add
and
addl
or
add
add
and
mov
add
jbe
add
lahf
xor
jecxz
pop
in
in
cltd
call
push
add
fcmove
mov
jecxz
add
mov
jo
inc
add
add
add
pop
pushl
loop
shll
stos
outsb
or
mov
add
popa
in
mov
mov
cs
fsubrs
lahf
mov
sbb
add
push
mov
addr16
jne
cwtl
les
enter
add
add
scas
mov
add
icebp
fidivs
add
unpcklps
lds
sub
mov
add
int3
out
test
cli
fsts
push
cmpsb
add
ficoml
into
loop
jb
add
xor
clc
mov
push
jle
add
xchg
xor
pop
mov
mov
pop
inc
jae
add
mov
inc
add
int
add
sti
in
push
add
out
add
add
xchg
add
stos
sbb
testb
enter
xor
data16
fmul
mov
lahf
sbb
out
vcvtsi2ssl
repnz
sub
or
cmpxchg
mov
sti
jb
xor
inc
flds
test
cmp
pop
dec
mov
lea
rcrl
push
push
add
sub
add
addb
push
into
xor
addr16
jecxz
mov
jl
out
aas
ljmp
add
ljmp
mov
or
mov
std
adc
cs
in
and
mov
add
inc
add
add
push
add
push
add
add
aad
inc
add
rcll
lahf
push
inc
movsb
add
add
repnz
jp
sub
mov
cmp
cmp
loopne
cmp
and
adc
iret
xchg
dec
push
les
out
cli
bound
mov
shr
sub
add
adc
add
jbe
inc
add
push
add
add
sub
xchg
add
xlat
rolb
add
mov
sub
add
mov
sti
xchg
add
xor
pop
divl
lcall
jg
mov
push
add
jg
add
das
cmc
popf
pop
jno
add
lods
repz
dec
sub
add
pusha
add
add
xchg
lds
add
dec
cmpsl
test
dec
dec
test
mov
ret
and
rolb
clc
out
ljmp
jmp
mov
in
mov
rolb
add
cmp
lods
lock
adc
jne
add
add
mov
loope
xor
cmp
icebp
adc
add
jb
aaa
in
cltd
es
mov
fcompl
inc
dec
addb
cmp
sub
inc
add
dec
dec
mov
add
das
or
addb
insl
push
add
ds
ret
in
or
imul
add
loope
mov
testb
jmp
fbstp
mov
movlps
inc
add
pop
in
movsl
adc
into
mov
jne
ret
mov
std
faddl
mov
mov
arpl
ds
cli
gs
add
arpl
call
addb
add
mov
test
push
jge
cltd
xchg
add
test
out
shrl
add
add
add
add
movsb
add
inc
add
inc
add
add
dec
mov
sub
orl
xchg
add
rcll
cmpsl
ljmp
mov
add
adc
lahf
dec
add
mov
jns
add
inc
adc
or
repnz
add
jecxz
adc
add
das
rolb
rolb
dec
sbb
add
shll
xchg
add
xor
mov
add
mov
and
mov
pop
adc
cmp
push
pop
adc
add
sbbl
daa
out
ljmp
add
imul
push
add
test
jbe
testb
sub
xchg
into
add
shll
mov
pop
inc
sbb
xor
adc
xchg
xchg
jbe
std
jns
add
jg
repz
push
add
fdiv
add
add
sbb
test
rolb
in
mov
mov
pop
sbb
xchg
call
in
push
and
add
push
add
and
add
les
jno
inc
xchg
shll
enter
aam
mov
imul
lret
ds
jb
popa
and
data16
add
mov
int
add
add
sbb
dec
inc
bound
mov
mov
add
add
cmp
subl
mov
xor
inc
imul
and
xchg
in
add
xchg
add
or
rorl
test
push
add
int3
or
scas
in
outsl
ds
inc
add
add
scas
or
add
add
push
add
sub
jge
rcrl
inc
gs
add
movsl
inc
add
leave
add
rcll
add
test
xlat
rol
mov
add
addb
or
mov
inc
mov
pusha
add
add
rcr
data16
add
dec
add
xor
push
mov
lret
lahf
jge
in
movsl
and
mov
test
test
xchg
add
mov
jecxz
add
jle
loop
sub
dec
lcall
arpl
addb
add
add
or
addb
add
loop
sub
xchg
lcall
aaa
loop
add
fld
add
rolb
dec
popa
add
pop
xchg
lahf
scas
int
test
add
das
int
sbb
and
add
add
ret
fcoms
add
push
jle
mov
push
call
pop
insl
out
in
pop
mov
add
inc
add
addb
shl
je
cmp
dec
mov
add
mov
xchg
pusha
add
add
inc
imul
mov
das
adc
data16
inc
add
add
jecxz
rolb
outsb
test
add
xorl
inc
add
push
add
loope
and
mov
xor
mov
dec
mov
dec
bound
mov
xor
out
pop
and
cld
addb
inc
stos
rolb
testb
popa
mov
push
add
mov
and
or
push
add
lahf
jo
dec
call
add
jns
stos
iret
mov
mov
sub
pop
or
dec
fdivs
imul
aaa
pop
cmp
add
add
mov
add
addr16
imul
loop
pop
add
mov
aas
ljmp
jbe
xor
test
add
addb
add
leave
pop
repnz
in
pop
fisttpl
test
push
mov
add
add
call
aaa
adc
popl
xchg
outsl
in
add
xor
shll
in
xchg
fwait
sbb
mov
mov
add
add
add
aas
sbb
jno
xor
aam
ljmp
sub
add
js
add
fisubrl
bound
mov
in
filds
stc
test
mov
sbb
push
or
pop
sti
inc
jge
add
add
add
ljmp
repz
mov
add
xor
add
rolb
mov
cmp
mov
jae
jmp
jle
out
je
mov
or
pop
cmc
adc
cli
and
scas
mov
add
loope
and
fbld
push
add
push
cmp
inc
lds
xchg
add
mov
in
lcall
push
jmp
arpl
dec
fnstenv
push
add
add
rolb
enter
addr16
add
add
loopne
push
add
mov
cwtl
pop
jbe
fs
add
or
outsl
aas
xchg
data16
pop
insb
sub
add
ffree
testb
rcll
add
xchg
test
leave
mov
popa
pop
les
int
add
aas
gs
ja
add
js
add
cmpsb
add
jle
add
add
add
mov
data16
add
stc
cmc
push
add
cmp
inc
and
mov
jb
sahf
adc
mov
push
jns
pop
mov
add
add
les
mov
dec
out
js
sti
ficomps
rolb
mov
xor
jmp
cli
push
mov
xor
ret
daa
aad
add
add
push
dec
mov
sbb
jge
push
insb
inc
dec
fucomi
cmp
pop
testb
decl
add
inc
dec
xorl
mov
arpl
add
add
add
cmp
add
rolb
xchg
add
fimuls
lock
lcall
pop
lock
pop
push
adc
xor
popa
xchg
add
mov
jo
cmpsb
add
xchg
das
jne
xlat
jle
push
cmp
sub
mov
mov
enter
aam
les
scas
test
sbb
fildl
add
jp
add
gs
rolb
add
aad
out
lcall
inc
add
fsub
add
add
or
jbe
fwait
sub
or
out
ret
sub
add
cmc
rolb
push
push
add
xor
mov
add
add
mov
add
add
arpl
movsl
mov
loop
pushf
push
add
adc
xor
mov
fisubl
jns
mov
das
mov
add
fcomi
iret
mov
add
adc
push
add
cmp
add
insl
cmp
xor
nop
add
dec
ljmp
add
push
ljmp
das
sub
das
in
leave
setbe
test
add
xchg
add
jge
sahf
mov
add
push
add
pushf
icebp
inc
add
xchg
cmpsl
test
subl
add
add
stos
cmp
addb
cmc
mov
mov
jl
xor
mov
gs
mov
clc
fdivs
stos
jp
or
sbb
lds
add
add
add
pushf
or
add
mov
mov
sub
call
sti
test
add
pop
push
add
add
or
add
mov
in
push
xchg
stc
stos
sarl
ret
cmp
sbb
in
dec
int
add
out
inc
sti
out
jbe
out
mov
xchg
push
lds
pop
ss
jge
and
cmp
add
add
adc
and
push
or
fs
data16
add
mov
test
add
ja
push
lcall
out
add
sub
cltd
lods
mov
jmp
push
add
aam
dec
push
add
iret
and
mov
add
add
mov
push
add
add
add
lret
push
add
add
jo
adc
xor
sbb
inc
jecxz
stc
push
add
popf
iret
sti
dec
testb
imul
push
add
add
mov
mov
add
sti
mov
loop
adc
mov
mov
mov
mov
pop
or
insl
enter
cmp
inc
xchg
mov
cltd
fists
add
data16
pop
mov
jp
dec
aas
or
sbb
adc
dec
xorl
shl
sbb
cltd
push
add
xor
out
and
dec
xor
mov
lods
in
frstpm(287
inc
add
lods
rolb
out
in
adc
ds
add
pop
je
xchg
and
add
inc
add
jno
or
add
add
cltd
mov
lock
das
add
rolb
push
mov
cmpsl
sti
cwtl
data16
mov
int
pop
addb
sbb
fildl
addb
in
add
mov
sbb
aas
dec
loopne
sub
test
lcall
inc
arpl
mov
add
cmpsb
add
inc
add
sub
cmpsb
add
add
xchg
or
add
ret
dec
xchg
add
add
sbb
add
mov
add
jno
add
add
xchg
add
add
cwtl
stc
or
mov
add
data16
add
mov
add
repnz
xchg
add
add
je
and
push
arpl
int
stos
dec
jge
add
push
add
xor
testb
aam
jg
dec
fwait
xor
and
add
add
or
push
add
and
mov
mov
mov
testb
bound
mov
inc
cwtl
and
xor
or
push
int3
and
mov
jecxz
mov
pop
dec
int
rolb
jp
add
aaa
fwait
ja
push
add
add
aaa
or
icebp
lret
jno
dec
lods
imul
jl
adc
push
cld
lcall
or
add
sti
int
add
inc
inc
add
scas
dec
add
add
sbb
fsubp
add
add
adc
xor
push
push
pop
pop
outsb
das
xchg
add
std
into
sbb
ljmp
testb
add
add
add
mov
repnz
shll
sahf
in
push
add
add
add
mov
iret
mov
fldl
ds
push
add
loopne
cs
add
sub
add
add
jl
int
add
addb
sub
out
push
jmp
mov
add
sbb
rcrl
js
add
mov
popf
push
and
adc
aaa
stos
dec
ss
jg
icebp
lds
jp
add
xchg
mov
jnp
and
add
mov
jl
inc
add
mov
dec
sub
mov
aas
rolb
push
and
mov
push
pop
imul
add
ja
add
xor
in
sub
mov
add
ja
adc
pop
cmp
push
xor
add
ja
add
loope
add
add
add
push
int3
mov
add
into
lods
sahf
aad
push
add
add
xchg
add
mov
fsubrl
add
jbe
das
cmc
xchg
add
lock
and
les
lods
mov
push
xchg
gs
in
push
push
mov
js
add
js
decl
add
inc
rolb
push
add
scas
test
jo
addb
add
dec
xchg
jmp
add
sbb
mov
add
mov
sti
mov
scas
jnp
add
mov
inc
add
inc
add
add
and
mov
mov
cmp
add
fucom
add
add
sbb
and
mov
sahf
add
mov
addb
pop
inc
mov
add
lea
test
das
add
movb
add
add
mov
adc
mov
add
out
pop
lcall
jle
mov
addb
add
add
add
add
inc
add
dec
mov
or
add
insb
movsb
add
hlt
add
adc
push
add
gs
fucomi
insl
adc
dec
and
and
in
scas
int3
adc
dec
fisubl
es
jne
add
or
aad
inc
add
add
add
jno
add
and
lock
gs
jno
ret
lea
out
popf
pop
pop
mov
mov
pop
sbb
adc
add
test
jbe
lea
xchg
sbb
test
or
mov
add
add
xchg
lock
rep
cmc
add
pusha
add
add
add
loope
add
call
dec
xchg
add
cmpsl
out
fistpll
add
add
pop
scas
xor
push
pusha
add
xor
push
out
insb
or
pop
push
add
jo
xor
pop
adc
dec
rolb
inc
jl
cmc
cmp
add
rolb
fstps
mov
sub
std
jp
mov
add
loop
mov
lret
jb
shll
and
insb
pop
cmp
sbb
shrl
add
les
aaa
jo
pop
jnp
or
add
sub
add
add
in
inc
dec
enter
lahf
jb
cli
fimuls
inc
arpl
mov
add
jecxz
add
stos
mov
stos
mov
jo
xlat
insb
lea
and
add
xchg
add
outsl
cmp
jp
add
sub
xor
add
iret
lds
add
add
dec
inc
add
mov
outsl
inc
or
mov
add
adc
out
mov
test
add
rolb
scas
loope
add
out
mov
sub
ss
mov
add
cmc
ja
mov
jbe
xor
popf
mov
rcrl
add
inc
push
ja
dec
insl
ja
stos
push
add
aam
call
mov
jecxz
ja
add
mov
fidivrs
add
xor
loopne
jne
add
ja
testb
add
cld
cmp
add
add
rolb
push
aas
mov
sub
jg
add
in
jne
or
rolb
lds
mov
les
jo
jo
add
mov
add
add
add
pop
mov
arpl
cmc
testb
rolb
nop
add
cwtl
add
adc
rolb
aas
sahf
push
jmp
mov
add
mov
and
fldlg2
call
rorl
pop
fcompl
inc
mov
sbb
cmp
add
in
add
jge
ljmp
or
adc
push
add
add
movb
inc
and
jle
and
mov
xor
lock
mov
insb
cmp
dec
dec
add
xchg
and
dec
mov
mov
add
xchg
xor
cld
push
add
jmp
push
add
adc
addb
jg,pn
test
xor
cmpsb
add
pop
dec
ljmp
mov
mov
mov
shrl
into
lcall
xor
lock
adc
jo
int
icebp
mov
add
sbb
lret
cmpsl
xchg
add
add
cmpsl
lret
adc
addb
and
mov
xchg
jno
add
add
sbbl
sbb
add
add
out
mov
mov
cmp
jl
add
mov
add
and
mov
movsb
add
iret
fsubr
cwtl
inc
cld
push
add
lcall
fwait
mov
add
dec
je
xchg
add
push
add
add
sub
cmp
add
xor
add
mov
and
lea
out
addr16
inc
call
fdivrl
push
add
sbb
xor
fisttps
xor
jmp
dec
fcompl
mov
jmp
jmp
mov
lret
outsl
fisubrl
insb
rolb
outsl
cs
addb
sbb
sub
pop
cmpl
in
shrl
std
jb
outsb
fidivs
add
repz
add
add
add
add
or
jnp
cmp
outsb
jne
inc
add
outsb
sub
add
daa
adc
add
jns
xlat
lcall
cmp
add
add
jno
cmpsl
push
pop
pop
data16
lret
jno
jp
sbb
in
mov
pop
popf
outsb
or
rolb
or
fcmovb
add
jo
jmp
mov
mulps
jle
imul
add
mov
add
fsubrl
inc
add
add
add
lret
lods
sub
fcmovb
add
xchg
call
fsubrl
push
cltd
xor
cltd
mov
out
addb
add
cmp
sbb
sub
lods
fucomip
call
test
call
add
add
fnsave
mov
add
add
xchg
mov
add
cmpsl
xchg
add
data16
jns
add
add
or
dec
cmp
dec
mov
push
pop
mov
lcall
sbb
pop
outsb
data16
in
lahf
add
mov
dec
addb
push
lret
xchg
pop
mov
dec
add
add
add
mov
pop
stc
dec
add
add
mov
fucomi
mov
add
out
add
addb
cltd
in
out
das
stos
dec
repz
dec
cmc
aaa
in
cmp
pop
in
stos
sarl
add
push
jmp
ja
movsl
cld
sub
lea
mov
adc
imul
nop
add
cmp
add
xor
add
mov
add
push
add
ljmp
rcrl
sbb
add
mov
mov
out
mov
add
xlat
scas
jnp
inc
add
or
add
inc
add
add
outsb
push
add
sub
sbb
stos
shl
add
add
and
mov
mov
mov
fiaddl
xchg
cmp
and
call
enter
sub
scas
add
mov
stos
stos
jge
rolb
out
add
test
add
xorl
jmp
mov
pop
outsl
enter
lcall
or
adc
push
sub
fistps
mov
add
sub
add
add
add
add
pop
mov
aaa
mov
add
add
cli
ret
icebp
add
sbb
jecxz
add
mov
in
add
and
add
or
add
cmp
add
mov
cmpsl
add
cmp
xor
mov
adc
push
rolb
add
rolb
add
loopne
cmpsb
add
ret
mov
insb
mov
movsl
and
mov
add
add
pop
mov
pop
pusha
add
add
add
xchg
repnz
inc
sub
add
mov
sti
xor
add
test
add
add
lret
add
pop
insl
xchg
inc
sbb
push
fnstenv
jae
dec
inc
add
push
rolb
out
cmp
lods
add
mov
data16
fbld
push
add
add
jne
scas
fisttpl
fs
add
sub
shl
or
add
mov
mov
fimull
data16
xchg
sub
jnp
ss
jae
add
xchg
add
add
add
add
add
xor
loop
xchg
cmp
sbb
stos
add
sub
and
mov
add
add
mov
cli
dec
add
outsl
and
mov
mov
movsb
add
add
call
add
mov
add
add
xlat
testl
adc
in
cltd
stc
ret
mov
push
add
das
adc
addb
add
mov
add
add
sub
inc
add
data16
pop
stos
sbb
add
add
movsb
add
jb
mov
scas
mov
pop
mov
pop
jbe
sub
testb
pop
add
add
pop
je
xchg
add
int
fisttpll
mov
rolb
lcall
add
dec
mov
popf
push
add
out
jle
add
add
cli
push
add
jo
fnstsw
mov
add
add
add
popl
sti
aas
repnz
in
fisubrl
mov
pusha
add
ret
add
loopne
fwait
sub
mov
imul
mov
and
mov
add
add
mov
pop
les
addb
add
in
or
add
testb
dec
xchg
pop
roll
loopne
xchg
ljmp
mov
mov
and
repz
fmull
mov
inc
add
add
jno
or
sbb
add
movsb
add
pop
pop
aas
pop
jne
xchg
add
xchg
mov
movb
mov
mov
lock
mov
or
sti
xchg
add
adc
icebp
and
add
pop
jl
fwait
testl
jae
lods
loop
lock
mov
add
test
xchg
add
pop
adc
std
add
lds
loope
cmpsl
sbb
aaa
or
push
adc
inc
xor
mov
scas
fnsetpm(287
add
add
add
jae
insb
push
pop
adcl
sbb
cmp
add
repz
in
mov
push
add
add
