stc
pop
lock
out
out
loope
pushf
inc
add
js
pop
or
xchg
pop
test
xlat
imul
add
je
pop
dec
dec
sbb
mov
inc
xchg
jo
mov
add
add
add
dec
cmp
mov
push
add
adc
mov
add
call
sbb
mov
lahf
xchg
loop
mov
daa
or
sub
ss
dec
mov
test
cmp
jo
mov
add
outsl
and
mov
mov
punpckhwd
adc
sbbl
inc
jmp
xor
adcl
iret
in
jnp
add
movsl
or
js
cli
and
repnz
mov
inc
mov
inc
add
repz
mov
mov
dec
xor
mov
mov
into
and
lds
add
jmp
mov
ljmp
mov
pushf
mov
xor
testl
into
jb
mov
sub
mov
inc
fisubs
add
add
sub
rolb
inc
mov
jne
lods
fdivp
mov
add
stos
fisttpll
and
pop
xchg
adc
mov
push
push
mov
fcomps
pop
mov
cli
xlat
adc
xor
mov
int
popf
pop
popa
and
add
jg
les
add
cltd
sub
add
mov
mov
xlat
addr16
popa
in
fdivl
add
mov
mov
ljmp
inc
icebp
push
call
dec
mov
decl
imulb
adc
mov
mov
mov
mov
mull
add
ror
cmpsl
popa
jp
adc
in
mov
sbb
mov
jge
sub
pop
insl
adc
mov
fdivrl
push
sti
jbe
jnp
enter
sbb
dec
xor
mov
mov
pusha
add
mov
mov
pop
je
sbb
mov
stos
mov
add
mov
mov
mov
pop
jno
xlat
hlt
cmp
xchg
cmpsl
loope,pn
adc
mov
push
add
sbb
insl
mulb
out
lock
adc
mov
add
add
sub
xchg
and
fistps
out
push
movsl
adc
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
mov
test
je
bnd
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
rorl
mov
mov
icebp
add
sub
push
lea
push
add
mov
mov
cmp
sahf
jns
add
pop
insb
out
mov
lods
mov
and
sub
outsb
dec
mov
mov
add
lods
lret
or
sub
jnp
add
data16
adc
push
add
inc
push
cwtl
dec
mov
mov
out
cmp
mov
pop
and
xchg
add
mov
add
mov
bound
mov
imul
mov
dec
sub
dec
imul
cmc
lds
test
mov
pop
add
sub
imul
jl
bound
mov
addb
xor
mov
or
adc
mov
ret
inc
push
add
mov
push
fwait
subl
mov
mov
aaa
lds
xor
mov
out
pop
int3
nop
add
out
call
add
mov
jmp
cmp
outsb
sbb
enter
push
add
xor
add
mov
dec
add
lea
and
add
mov
movsl
jae
pop
out
and
mov
lret
movsl
and
call
sub
mov
jne
xor
inc
in
jns
lds
iret
mov
lea
mov
fmull
dec
or
mov
xchg
ljmp
cmpxchg
mov
mov
imul
jmp
stc
pop
ja
cmc
lret
shll
mov
add
xchg
or
xchg
push
mov
test
pop
and
mov
mov
cmc
add
ret
xchg
stos
sbb
test
jp
faddl
out
jg
add
mov
push
lcall
mov
rolb
mov
add
add
lods
test
add
hlt
rolb
mov
ficomps
dec
js
add
adc
adc
mov
add
mov
dec
pop
pushf
popa
or
jl
out
movsl
std
jecxz
cmp
pop
dec
and
mov
inc
add
inc
enter
aam
jle
pop
or
pop
dec
mov
mov
sbb
mov
xor
or
or
jno
or
cltd
push
mov
add
add
gs
add
add
mov
or
addb
nop
add
pushf
push
inc
add
add
popa
dec
movsb
push
dec
xchg
xor
or
jns
popf
pop
arpl
cmpsl
lret
mov
mov
push
pop
popf
cli
cwtl
jae
jnp
pop
jb
mov
mov
add
add
rolb
mov
add
push
or
cmpsb
in
dec
shll
adc
test
stc
stos
scas
int3
ret
mov
cli
ljmp
push
sub
in
or
mov
xor
das
jae
and
mov
mul
add
icebp
or
cmpsb
cld
fcompl
call
push
mov
xchg
cmp
mov
test
xchg
add
ja
and
mov
add
add
xlat
mov
cld
icebp
jnp
test
cmp
xor
mov
mov
fsubl
xchg
inc
in
iret
adc
push
and
add
push
call
js
xor
add
mov
sarl
lea
rolb
mov
dec
jl
bswap
push
add
test
lods
cmp
repnz
aas
jp
add
add
mov
mov
add
loope
cmc
jbe
outsl
cmpsb
cmp
int3
cwtl
mov
dec
push
xorl
jge
sub
insb
sub
jp
pusha
add
hlt
and
mov
add
mov
xchg
mov
mov
mov
cmpsb
adc
aas
ss
loopne
mov
je
mov
add
jg
mov
repnz
jp
xor
or
pop
pop
mov
cltd
mov
add
aaa
pop
loopne
mov
mov
mov
mov
aaa
fnstenv
adc
mov
scas
jnp
mov
imul
add
mov
xor
sub
xlat
mov
mov
or
xchg
out
mov
mov
popa
mov
lock
stc
bound
mov
push
mov
mov
outsb
cmp
aam
xlat
sub
lcall
mov
xor
add
rol
jbe
mov
mov
mov
mov
popf
je
lea
aad
addr16
ds
push
jne
push
add
fcmove
pop
xchg
add
lahf
pushl
add
out
mov
repz
lcall
dec
cs
push
adc
xor
mov
and
adc
xor
mov
xchg
push
in
rcrl
pop
mov
ficoms
imul
lcall
movsb
add
add
push
imul
add
adc
mov
adc
pop
lret
mov
cmp
pusha
add
mov
stos
insb
xchg
mov
add
and
in
arpl
repnz
fsin
cmp
add
jno
add
stos
imul
inc
hlt
nop
add
addr16
jl
mov
and
inc
and
mov
add
mov
push
add
pop
test
mov
pushf
sbb
mov
mov
fnstenv
movsl
sbb
popa
cmpsl
mov
mov
mov
lea
sti
mov
jl
and
mov
out
sub
mov
push
add
mov
insl
xor
jb
mov
or
in
xchg
fndisi(8087
or
mov
sbb
sbb
and
mov
mov
int
xchg
movsl
push
and
mov
gs
adc
mov
add
pop
es
aam
daa
repnz
add
mov
mov
mov
mov
test
jo
mov
mov
mov
jo
mov
aaa
mov
mov
and
mov
add
sbb
sub
mov
jne
xchg
add
je
notb
in
dec
stc
xchg
stos
mov
push
movsl
push
aad
add
add
mov
inc
xchg
add
ret
inc
pop
mov
push
jbe
lret
iret
mov
and
add
mov
mov
mov
adc
mov
stos
fistpl
mov
loopne
mov
add
mov
or
sub
test
xchg
test
push
aad
inc
testl
daa
jae
or
adc
mov
add
adc
mov
scas
and
mov
push
lock
cltd
aad
mov
add
cmp
mov
stos
xor
lods
cmp
shrl
arpl
mov
aad
jb
mov
add
mov
stos
jne
jb
mov
mov
stos
and
mov
mov
loopne
mov
clc
addr16
js
or
arpl
xchg
xchg
pop
pop
lret
ret
call
sub
in
out
out
call
gs
sbb
or
push
cmpsl
dec
stos
push
sbb
pop
pop
jo
mov
flds
mov
add
roll
fcomp
int3
sub
push
adc
add
addr16
and
mov
add
add
jno
in
jne
es
jmp
cmc
inc
add
and
jmp
add
add
repz
mov
xor
push
mov
testb
and
add
ret
daa
addr16
push
mov
jecxz
outsl
mov
mov
adc
pop
jl
pop
cmp
add
mov
add
mov
add
mov
test
jl
add
inc
imul
push
sbb
std
xchg
ss
jl
fstp
cmp
leave
or
pushf
mov
cmpsl
jmp
mov
add
shl
mov
sbb
mov
pop
subl
add
arpl
lock
mov
scas
push
icebp
push
rolb
inc
jno
mov
mov
mov
dec
sub
insb
pop
jae
into
jmp
push
sahf
jg
xchg
add
in
in
mov
pop
cmp
cmp
xchg
in
call
mov
enter
add
add
add
xchg
cld
jnp
aaa
pop
pushl
add
add
mov
imul
sbb
add
mov
mov
hlt
xlat
lret
mov
repnz
ret
jmp
mov
popf
xchg
add
inc
push
add
stos
ss
jb
mov
mov
mov
dec
insl
add
push
push
jnp
jo
mov
iret
cmpsl
cwtl
mov
fnsave
lds
dec
aas
les
inc
jno
add
std
pusha
add
mov
push
pushf
test
notb
mov
add
mov
fldenv
and
jmp
push
add
scas
scas
pop
rolb
inc
jo
mov
mov
data16
outsl
stos
imul
add
scas
int
add
call
push
call
push
add
xchg
push
dec
addb
in
outsl
push
popf
and
mov
mov
fs
add
mov
add
iret
mov
in
call
jno
sbb
cmp
dec
pop
mov
les
add
mov
pop
fcoml
dec
mov
add
adc
aaa
push
inc
mov
mov
pushf
ret
jns
add
mov
divb
xchg
movsb
into
mov
pop
nop
add
and
mov
enter
inc
movsl
pushf
sub
cmc
xlat
dec
mov
out
movsl
fcmovnu
imul
pushf
jle
jmp
push
add
cmp
movsl
aad
or
int3
inc
add
mov
add
and
mov
mov
mov
add
adc
inc
je
push
sbb
arpl
xor
daa
sbb
inc
add
dec
pop
sbb
inc
add
cmp
or
push
icebp
out
nop
add
cmpsb
cltd
add
ret
or
repz
add
pop
addb
xchg
xchg
test
test
test
xchg
icebp
lods
adc
add
addb
nop
add
ja
adc
dec
mov
mov
ljmp
mov
fisttps
lods
or
clc
mov
lods
negb
cltd
mov
cmc
pusha
add
adc
add
shll
adc
fldenv
push
add
imull
jo
mov
mov
aad
rolb
aaa
in
fcmovne
or
mov
xor
popa
arpl
cmp
dec
jmp
fmulp
aad
pushf
push
jecxz
cmp
xchg
notb
adc
pop
gs
xchg
xchg
add
mov
sar
rolb
mov
mov
mov
push
xchg
add
in
adc
mov
xor
pop
test
push
aad
adc
bound
mov
or
add
and
mov
repz
mov
lcall
cli
fs
inc
add
lds
lock
shrl
stos
out
imul
loop
mov
add
adcl
inc
adc
mov
daa
push
stos
jno
es
mov
xchg
clc
data16
scas
aaa
adc
jecxz,pn
add
adc
mov
add
in
into
ja
outsl
subl
testl
arpl
cmp
repnz
mov
sbb
lock
and
popa
dec
jmp
add
add
sbb
or
cmpsl
mov
ds
add
ret
sbb
mov
jmp
inc
test
sub
sub
add
mov
push
lds
addb
fsubs
jg
fwait
js
leave
pop
fnsave
mov
and
dec
and
add
mov
lods
fdivrl
push
jg
xor
add
mov
scas
cwtl
push
inc
repnz
sub
add
push
adc
rolb
mov
fwait
icebp
push
add
mov
jp
push
stos
in
movsb
pop
or
add
ret
hlt
add
adc
mov
adc
sbbl
mov
popf
scas
je
imul
adc
stos
outsl
xchg
add
imul
push
xchg
enter
mov
imul
jb
mov
scas
mov
sub
add
js
jb
mov
add
addb
mov
cmc
sub
push
inc
in
std
nop
add
push
add
leave
in
inc
xchg
das
push
or
aaa
loope
hlt
fadds
add
cmp
or
xchg
sbb
push
jno
add
daa
jp
push
add
mov
push
inc
mov
ror
mov
mov
mov
mov
mov
insb
xchg
mov
add
mov
mov
add
repz
push
rolb
mov
jno
add
pop
psadbw
mov
add
mov
push
movsl
int3
mov
mov
xchg
lret
mov
add
movsl
pop
xchg
addb
cld
inc
popf
test
add
fldt
cmp
das
add
cs
ds
bound
mov
mov
add
loop
mov
pop
iret
add
mov
push
outsb
push
mov
add
add
add
add
cli
dec
popl
cs
mov
stos
xchg
sub
fidivrs
jp
push
mov
adc
adc
sbb
call
xchg
add
lods
mov
sub
in
cltd
test
xlat
sbb
addb
push
cmc
pop
test
xor
mov
pop
nop
add
sub
or
xor
mov
mov
imul
xlat
push
sub
js
add
add
add
dec
xchg
mov
fwait
mov
pop
ja
popa
fwait
imul
xchg
xrelease
out
cwtl
in
aam
sbb
push
in
inc
mov
sub
adc
es
xchg
sbb
cwtl
outsl
rolb
mov
add
add
adc
addb
xchg
xchg
sbb
lock
sahf
stc
testl
repz
mov
lret
cmc
dec
inc
add
sahf
test
and
mov
jmp
xor
inc
add
outsb
mov
add
add
add
in
insl
push
rcrl
pop
jb
mov
push
pop
sub
fcoms
add
add
add
rcrl
int3
cltd
imul
mov
mov
inc
mov
gs
pop
mov
dec
or
jecxz
loopne
mov
add
add
inc
pushf
lods
mov
and
mov
jmp
js
loope
iret
cmpsl
inc
dec
cltd
mov
or
cmp
sarl
add
sub
scas
push
adc
mov
enter
add
sbb
sbb
and
mov
mov
add
mov
fistpll
mov
iret
push
sahf
fiadds
add
add
fs
loopne
mov
call
mov
mov
inc
jp
stos
and
mov
adc
dec
xchg
add
in
rolb
mov
add
stc
jbe
dec
icebp
movd
pop
dec
loope
icebp
sub
or
into
repz
imul
push
push
or
mov
out
push
add
mov
sub
pop
movsb
nop
add
dec
ret
cli
inc
loopne
mov
lods
xchg
add
jae
fldl
mov
xchg
popf
mov
cmpsb
imull
and
jo
mov
call
mov
mov
mov
movsb
jle
repz
and
sbb
sub
add
add
gs
enter
cmpsb
sti
sub
push
or
inc
mov
jo
mov
or
add
mov
repnz
data16
sub
inc
stos
in
sbb
mov
add
sbb
xchg
add
mov
out
cli
sub
jecxz
add
test
push
pop
aaa
jns
cld
xchg
mov
aas
fmull
data16
and
addb
mov
add
jae
or
loope
imul
and
into
fidivrs
test
lods
les
add
test
mov
or
lea
mov
dec
jo
mov
add
in
aam
mov
test
mov
push
add
cld
mov
stos
jo
mov
or
cmp
mov
je
scas
pop
sbb
push
add
mov
pop
adc
or
pop
xor
rolb
lea
pop
ds
sub
lock
add
int3
mov
fisttpll
movsl
rolb
mov
xchg
push
adc
add
lea
mov
cmp
nop
add
mov
in
add
mov
add
repnz
cwtl
cs
call
mov
push
xor
mov
mov
lock
movd
xchg
mov
mov
dec
ljmp
ficomps
push
inc
fcompl
push
pop
or
rorl
in
sti
push
out
cmc
test
or
aaa
add
mov
cs
lret
sub
out
jmp
movsl
and
add
mov
or
outsb
clc
cmp
mov
mov
cmp
inc
cmp
inc
pop
xchg
or
mov
test
aad
cli
cmp
add
faddp
jne
rolb
mov
cmpsl
sti
xchg
in
fistps
arpl
icebp
sbb
cli
pop
mov
mov
sti
mov
div
xchg
add
sbb
xor
insb
clc
roll
mov
addr16
adc
mov
push
add
fwait
inc
add
push
leave
fnstenv
and
mov
mov
stc
fmulp
popf
and
das
cmpsl
cld
sahf
mov
mov
dec
fs
add
adc
add
dec
cmp
add
mov
mov
in
das
xchg
jmp
add
add
add
into
leave
jmp
mov
and
or
add
jbe
addb
mov
sub
cwtl
or
rolb
mov
mov
repz
hlt
popa
subl
adc
mov
pop
mov
mov
add
mov
sub
addb
cwtl
std
pop
dec
jae
stc
add
je
dec
mov
push
adc
add
sub
lods
loop
mov
add
or
mov
or
fs
mov
push
add
in
hlt
mov
mov
fisubl
insb
inc
adc
inc
add
add
xchg
enter
xchg
add
cs
dec
push
jmp
add
imull
mov
sub
lods
push
sarl
stos
dec
add
int3
pushl
inc
xor
add
push
mov
add
ret
sub
shll
adc
add
sbb
out
add
add
dec
push
mov
add
add
stc
in
stos
sbb
xchg
popa
pop
or
aas
enter
add
and
pop
bound
mov
pop
outsl
cmp
leave
sub
jbe
cmp
fwait
test
adc
adc
popf
push
inc
add
mov
dec
mov
pop
mov
mov
shll
cmovae
mov
add
add
sbb
sub
lcall
aad
insb
xor
mov
add
mov
add
cmp
jmp
xchg
add
add
or
add
push
cmc
imul
add
ret
into
mov
mov
xchg
hlt
and
pop
mov
mov
push
fld
mov
cmpsb
cmp
jecxz
and
mov
scas
enter
xchg
dec
lock
bound
mov
addl
mov
fsts
shr
fwait
pop
mov
add
xor
rolb
mov
inc
add
stos
push
test
mov
mov
mov
mov
icebp
in
inc
clc
enter
or
and
lods
sarl
push
lock
lea
scas
xor
out
insb
push
je
movsl
roll
neg
inc
mov
mov
xchg
add
add
sub
dec
call
shrl
lods
arpl
mov
scas
add
sbb
add
mov
add
lahf
pusha
add
mov
xchg
mov
push
psubusw
sbb
add
int
ja
add
xor
int
rolb
xor
mov
out
dec
rorl
shll
lcall
mov
mov
rcr
mov
rolb
mov
out
lea
mov
sbb
sub
add
xchg
icebp
loop
mov
stos
jne
cmp
add
icebp
test
jnp
pop
dec
push
add
data16
cmp
out
add
and
add
imull
inc
add
ds
cli
adc
add
adc
mov
add
ljmp
fcmovnbe
frstor
pop
adcl
add
clc
pushf
lock
add
ja
jo
mov
cmp
and
imull
mov
js
or
jge
test
add
mov
mov
stc
sub
mov
xsha256
cmpsb
xchg
scas
ret
cmp
push
pop
mov
testb
mov
add
pop
addl
add
mov
and
mov
xor
mov
das
or
add
mov
pop
mov
add
inc
pusha
add
daa
fidivrs
xchg
addb
cmpsb
sub
hlt
add
shll
jl
inc
add
mov
adc
orl
adc
icebp
add
add
std
dec
push
sti
movsl
inc
add
push
lea
xor
xchg
and
inc
loopne
mov
add
mov
repnz
enter
imul
jl
add
outsb
jle
call
push
shl
xlat
frstor
fwait
pushf
loopne
mov
addb
pop
xor
in
add
movl
jbe
add
jg
mov
add
mov
add
mov
mov
into
int3
ficomps
ss
or
imul
imul
push
addr16
insb
sub
push
mov
push
in
pop
jbe
ljmp
mov
cli
push
add
add
mov
sbb
add
sub
xchg
adc
cmp
mov
fisttpl
mov
icebp
and
mov
loope
lahf
dec
jmp
outsl
xchg
sub
push
add
or
push
dec
addb
mov
mov
les
cwtl
or
dec
fcoml
pop
add
mov
and
mov
mov
fs
stc
inc
add
dec
mov
adc
movsl
or
add
outsl
ret
enter
add
sub
nop
add
mov
int3
loope
jge
adc
mov
lea
or
mov
mov
add
mov
add
jbe
pop
jae
fldcw
xchg
sbb
ljmp
pop
inc
lock
add
xchg
mov
leave
loop
mov
mov
jp
add
notb
mov
add
add
lods
aas
xchg
adc
leave
stos
adc
mov
loop
mov
xchg
ljmp
mov
mov
sub
add
cmpsl
andl
loop
mov
jae
adc
jle
jmp
in
inc
shrl
push
mov
cli
filds
pop
xlat
movb
pop
insl
push
int3
push
add
push
jecxz
mov
sbb
insb
push
mov
mov
cmp
cmc
xchg
pop
adc
xchg
lock
sub
cltd
push
push
stc
jp
ret
push
sub
mov
add
in
shrl
shll
mov
fstps
push
xor
mov
mov
insb
mov
jb
mov
out
pop
xchg
test
cld
xchg
mov
test
enter
imul
xor
add
pop
inc
xchg
cmp
add
mov
mov
daa
mov
out
mov
loopne
mov
jmp
add
cmpsb
imul
mov
pop
jae
dec
je
xchg
test
add
mov
push
fldl
lods
sbb
mov
test
inc
scas
push
add
pop
add
inc
movsb
push
add
mov
mov
dec
cmp
inc
sbb
pop
jbe
sub
mov
jmp
mov
xor
mov
push
xlat
sbb
add
aam
add
mov
pop
xor
add
test
and
lcall
xchg
add
data16
jne
iret
jbe
add
sbb
lcall
lds
popf
movsb
dec
inc
fistpll
pop
xor
mov
mov
das
lock
adc
sysenter
rolb
mov
jle
or
test
cld
dec
and
mov
adc
mov
add
lea
add
add
mov
fs
add
cmp
repnz
hlt
cmp
dec
test
dec
pop
inc
push
add
sub
js
cmp
mov
or
and
mov
scas
or
xlat
jp
out
gs
push
mov
aad
outsl
out
or
test
insb
jb
mov
ds
push
scas
ret
pop
loopne
mov
in
add
mov
cltd
xor
mov
sahf
jno
cmp
push
fadds
lods
lret
mov
jbe
xor
mov
xor
pop
push
test
mov
in
jo
mov
or
lahf
faddl
out
adc
mov
pop
xchg
pop
mov
mov
jae
add
sbb
add
mov
push
add
mov
jecxz
mov
xchg
adc
xchg
sub
mov
xor
mov
outsb
je
add
stos
mov
insl
sub
and
jno
stos
fnsave
mov
dec
push
lods
in
int
add
add
cmp
mov
dec
adc
push
sub
sti
inc
add
add
jnp
mov
sub
mov
addb
es
dec
inc
add
cs
jae
pop
mov
stos
mov
dec
aas
movsb
adc
rolb
pop
adc
cmp
mov
mov
xchg
add
stos
mov
xchg
xchg
mov
aam
jne
js
inc
jecxz
addb
cmp
jecxz
stos
mov
add
add
xchg
add
cmpsl
cs
test
cmp
add
adc
notl
add
jbe
mov
pop
jo
mov
mov
mov
rcrl
mov
mov
sbb
cwtl
inc
add
dec
xchg
jno
lahf
dec
loope
out
fisubrs
popf
ja
add
add
jno
sarl
mov
and
mov
push
xor
das
fs
mov
sahf
xchg
xor
xchg
mov
mov
mov
addb
lcall
and
mov
mov
cmp
jno
loope
mov
fisubrs
jle
xor
mov
fdivr
mov
daa
push
add
mov
add
jle
cwtl
push
add
jno
xchg
adc
cmpsb
jbe
in
add
add
mov
jae
add
in
push
cmp
inc
inc
add
inc
add
sbb
add
sbb
add
mov
add
add
dec
stos
dec
jg
cwtl
push
push
es
add
jo
mov
lods
xchg
pop
das
cltd
mov
or
mov
xchg
rcrl
sbb
or
jge
ljmp
jl
add
mov
mov
add
or
mov
adc
outsl
or
mov
dec
imul
lods
pushf
inc
add
mov
add
add
stos
jge
add
add
mov
dec
mov
fadd
jp
test
jnp
es
hlt
pop
jg
xor
mov
jmp
popa
or
add
or
sbb
add
push
xchg
add
data16
gs
arpl
addb
jecxz
xchg
inc
mov
fisubl
dec
sbb
es
jbe
addb
or
push
inc
add
add
or
sub
lcall
pop
icebp
inc
nop
add
inc
xor
mov
add
leave
ja
jecxz
and
push
and
add
mov
mov
adc
mov
aaa
enter
je
outsl
add
hlt
sti
jnp
xor
cltd
mov
mov
add
cmp
add
mov
js
ret
scas
or
push
add
imul
mov
xlat
stos
shl
dec
sub
adc
pop
shll
jge
add
sub
popa
pop
fmulp
pop
iret
push
leave
sbb
ljmp
sub
push
cmp
stos
fildl
int
in
iret
xchg
call
ret
jno
mov
fnstcw
hlt
or
int
sbb
aam
adc
mov
into
nop
add
sub
jno
and
mov
mov
or
add
rcrl
fidivrl
mov
cmp
pop
push
hlt
sti
ds
add
mov
mov
gs
mov
mov
mov
idivb
aam
mov
mov
lods
inc
xchg
pusha
add
and
lock
aam
hlt
movsl
dec
lcall
add
pop
mov
pop
int
add
ret
in
mov
stc
stc
call
cld
mov
mov
adc
addr16
inc
jecxz
mov
mov
jo
mov
sub
add
add
call
rolb
mov
lds
inc
shrl
mov
loope
cmp
in
mov
pop
inc
jo
mov
cmp
imul
stos
mov
addb
jg
adc
mov
mov
push
add
adc
pop
lcall
lods
scas
aas
push
mov
add
push
int3
mov
es
mov
arpl
mov
jns
mov
out
insb
imul
push
add
add
cwtl
movsb
add
mov
and
add
add
jmp
add
aad
and
jg
push
jo
mov
popf
nop
add
mov
nop
add
add
clc
sahf
pop
stos
push
push
icebp
stos
or
add
push
add
jne
scas
scas
fwait
adc
jae,pt
mov
mov
clc
sub
inc
and
add
arpl
add
mov
inc
jp
dec
and
mov
mov
imul
mov
mov
fistps
fs
jmp
out
cmp
and
and
mov
add
push
xchg
scas
sbb
inc
daa
pop
dec
lock
jne
adc
mov
add
aad
test
and
dec
mov
sub
insb
sub
test
sbb
aas
nop
add
cmp
ficompl
add
add
ftst
decb
pushf
mov
add
add
add
add
jno
aad
negb
inc
add
cli
addb
jge,pn
cmpl
mov
bound
mov
and
icebp
mov
sbb
popf
and
mov
xchg
push
pop
pop
inc
add
cmp
push
ret
mov
add
lcall
xchg
mov
jo
mov
add
adc
mov
add
pop
in
sbb
sub
fisubrl
mov
push
add
aas
pop
test
fdivrs
add
push
push
insb
enter
add
mov
cmp
add
mov
sbb
sub
add
inc
sti
mov
inc
xchg
out
sbb
jnp
push
add
xchg
xor
ljmp
add
nop
add
and
add
pop
stc
dec
dec
or
mov
or
add
mov
sahf
inc
ror
ljmp
test
and
xlat
jg
adc
sbb
xor
mov
add
cmp
sub
sub
rorl
dec
incb
addr16
lea
jmp
cmp
mov
xchg
cmp
jle
scas
mov
loope
stc
insb
pop
outsb
fcmovnbe
lret
mov
sti
loope
mov
dec
out
add
aam
icebp
mov
add
gs
pop
mov
imul
into
cmp
fwait
adc
mov
hlt
jbe
sbb
scas
push
cmp
add
mov
xor
xor
bound
mov
mov
test
sub
xchg
daa
es
mov
fnstsw
enter
add
mov
add
xor
lea
pushf
and
push
rolb
ds
sub
mov
xor
in
jo
mov
sbb
fdivrs
adc
mov
mov
pop
mov
sbb
xor
addr16
mov
push
mov
and
dec
out
pop
fmull
loope
out
sbb
lods
inc
lahf
jae
lret
add
cmp
pop
adcl
jbe
mov
pusha
add
stos
mov
cmp
add
mov
movb
int
add
mov
mov
cmp
add
jecxz
test
jne
mov
add
and
inc
add
dec
sahf
es
mov
flds
sub
mov
pusha
add
add
aas
mov
mov
add
and
mov
add
out
sbb
sub
sbb
fstp
adc
mov
pop
cmp
cmovp
jno
adc
mov
mov
add
incb
add
test
lods
pop
jmp
rolb
aaa
mov
insb
dec
xorl
cltd
sbb
sub
in
jmp
fdivs
ret
dec
decb
push
test
mov
ds
add
cli
cli
xor
test
cmp
scas
jae
xor
mov
mov
sbb
jb
mov
jp
es
lock
jp
xchg
daa
movb
xlat
inc
add
ficoml
add
jae
aad
jl
sbb
or
add
or
push
cmpsl
dec
icebp
push
pop
ljmp
xchg
cmc
lods
jmp
int
test
sbb
pop
fcoms
and
pop
push
mov
negl
sti
jmp
add
fs
popf
jecxz
add
pop
bound
mov
shl
or
add
adc
fadd
add
cltd
push
mov
lahf
push
mov
push
add
add
call
rcrl
add
adc
nop
add
mov
pop
stc
pop
sub
mov
nop
add
rolb
ljmp
push
scas
xor
add
rorl
add
add
negb
daa
add
mov
pop
fcomi
inc
mov
xchg
into
rolb
mov
stos
testl
and
fists
sub
ss
push
pusha
add
xchg
mov
xor
pusha
add
add
cmpsl
adc
repz
add
es
fstpt
mov
cmp
mov
push
ja
movsl
test
cmpl
mov
mov
add
out
mov
cmp
xchg
jecxz
in
mov
inc
add
es
dec
fsubrl
imul
xor
iret
sar
push
lock
add
es
lds
cmp
fisubrs
jmp
lock
addb
popa
sub
fwait
jnp
and
mov
stc
jl
or
xchg
pop
subl
test
fstl
adc
add
popf
std
jp
sub
into
int3
push
dec
aam
ret
cltd
rcll
add
add
add
add
sbb
fwait
pusha
add
addb
inc
rcrl
xchg
mov
add
fidivrs
sub
insb
xchg
sub
mov
out
leave
popf
inc
add
inc
js
add
mov
mov
mov
mov
es
cli
jns
clc
repz
add
push
pop
pushf
imul
mov
add
ja
pop
push
add
mov
add
mul
xchg
cmp
push
add
imul
add
mov
mov
mov
mov
mov
add
lea
popa
out
and
loopne
mov
bound
mov
xor
mov
addb
mov
scas
pop
pop
xor
adc
pop
add
add
add
lahf
hlt
fdivs
loop
mov
sbb
aaa
fadd
repnz
lock
clc
call
mov
ret
mov
xchg
movsb
pop
sub
add
ror
cmp
mov
out
xchg
jns
sub
add
movsl
mov
push
add
inc
iret
and
mov
push
push
arpl
add
push
cmp
mov
sub
mov
or
movsl
xchg
lods
add
jmp
mov
mov
lcall
test
repz
mov
in
lcall
pushf
jg
add
mov
add
loop
mov
sti
jne
cmpsb
push
add
faddp
mov
mov
mov
fcompl
pop
sti
or
add
sbb
add
addr16
fs
sub
mov
mov
pusha
add
push
int3
addl
loopne
mov
or
adc
rolb
insb
hlt
inc
or
add
mov
mov
mov
outsl
jno
test
xchg
imul
dec
orl
and
xchg
mov
mov
lret
pop
lock
lds
mov
addb
std
ds
push
add
jae,pt
fwait
psrad
mov
mov
adc
pmulhw
out
xorl
mov
ffree
in
fidivl
add
and
lock
xchg
and
das
sub
lods
dec
ficomps
add
add
adc
mov
add
fyl2x
scas
rolb
jmp
cltd
outsb
jo
mov
sbb
cs
pop
sti
mov
sub
inc
outsb
jmp
sub
xchg
repz
mov
mov
loope
inc
inc
add
out
pusha
add
add
add
cmp
bound
mov
mov
mov
call
cli
mov
aad
lds
lods
lea
sahf
cmpsb
adc
mov
sbb
addb
xchg
jp
repnz
xor
pop
hlt
and
stos
inc
pusha
add
xchg
push
add
ja
ss
mov
add
mov
add
mov
push
push
cli
orl
jbe
inc
mov
lods
js
pop
mov
mov
repnz
adc
pop
jbe
pop
add
mov
aas
add
test
mov
lock
jp
cmp
mov
mov
and
mov
cmp
push
lahf
cmp
pop
scas
xor
mov
mov
add
mov
adc
sbb
pop
and
dec
cltd
mov
shll
jno
out
data16
cli
xchg
add
mov
mov
bound
mov
std
jmp
add
mov
and
mov
sbb
sub
movb
rcr
sahf
insl
loope
mov
xchg
pusha
add
add
fwait
mov
add
jle
test
das
loop
mov
cwtl
inc
adc
mov
cmp
loopne
mov
mov
popf
xchg
push
mov
mov
add
mov
iret
pop
xchg
in
and
mov
mov
jb
mov
repz
mov
aaa
sub
and
pop
scas
jo
mov
or
push
sahf
dec
or
mov
xlat
dec
out
sbb
sahf
sub
push
push
pop
adc
mov
or
fbstp
mov
jns
outsl
out
sub
cli
fwait
mov
add
jle
ret
sahf
loopne
mov
stos
pop
pop
sbb
xchg
pop
addb
sbb
xor
mov
lret
cld
and
mov
mov
inc
inc
call
addr16
inc
add
pop
or
in
stc
add
xchg
inc
add
std
add
mov
icebp
ja
inc
loop
mov
add
clc
mov
cmp
inc
pop
or
push
mov
mov
jmp
xor
push
add
adc
xchg
in
fidivl
push
xchg
push
dec
push
pop
out
inc
mov
xor
mov
mov
xlat
sub
mov
testl
add
add
popa
leave
sub
ret
fwait
sbb
mov
gs
lahf
mov
orl
add
mov
add
ds
lcall
pop
push
and
mov
mov
push
inc
and
movsl
mov
cltd
js
jle,pn
cmp
push
stc
push
pop
and
add
or
mov
jmp
mov
scas
inc
roll
and
push
add
sub
jp
or
cmp
mov
dec
and
rolb
mov
xchg
fistl
mov
jno
int3
ret
adc
rolb
mov
test
mov
testb
scas
add
in
les
push
add
sbb
pop
insb
addr16
mov
pop
in
inc
lods
jo
mov
ss
jns
test
add
dec
xor
mov
add
mov
loope
je
push
add
rolb
mov
dec
fisubrl
out
lock
mov
mov
rolb
mov
in
jns
cmp
dec
rep
je
xchg
push
mov
add
cli
cld
pop
popa
ja
adc
mov
jecxz
and
mov
dec
inc
mov
pop
and
add
test
inc
add
xlat
sub
add
leave
jne
add
mov
popa
sbb
fdivrl
xor
insb
mov
mov
cmp
jae
aad
push
pop
inc
rolb
mov
adc
mov
xor
out
negl
mov
mov
push
add
jns
xchg
mov
mov
mov
add
loopne
mov
push
shrl
test
mov
jmp
add
xor
mov
rolb
mov
add
inc
add
std
mov
addb
out
xchg
cwtl
push
add
push
ret
mov
mov
add
add
xor
add
cs
mov
in
add
std
mov
out
push
addb
lret
cmp
je
mov
xchg
add
mov
sbb
mov
mov
lret
xor
mov
add
mov
test
xor
xor
mov
mov
push
into
aad
cmpsb
mov
mov
mov
jecxz
ret
push
repz
test
packssdw
xor
fs
fistpll
in
dec
cmp
mov
mov
sub
dec
fninit
nop
add
add
jae
jns
sub
lds
mov
fcomip
add
jnp
xor
mov
adc
mov
mov
add
xchg
add
inc
jecxz,pt
sahf
call
mov
clc
arpl
push
lret
jne
xchg
xor
mov
rolb
mov
cmp
jne
cwtl
jmp
aaa
int3
cld
xchg
loope
add
or
ljmp
add
add
lret
add
mov
and
lds
rolb
mov
cmpsl
lds
ds
mov
add
pop
jle
adc
lods
dec
out
clc
sbb
add
push
add
pusha
add
push
mull
lods
pop
sub
sub
and
mov
outsb
std
outsb
rolb
mov
mov
jb
mov
xor
stos
ds
mov
pop
cltd
movsb
sti
push
fistps
jae
pop
cmc
in
aam
jp
aas
push
jmp
ficoms
stc
cmc
loop
mov
les
push
cmp
add
mov
dec
mov
addr16
outsb
push
add
inc
cltd
jg
add
inc
leave
fistpl
add
pop
or
test
mov
mov
cmc
faddl
push
shll
shll
pop
lea
dec
fnsave
inc
push
push
dec
std
cmp
arpl
cmpl
vmovaps
std
scas
hlt
mov
add
mov
mov
ja
outsb
sub
rorl
in
add
mov
rcl
mov
add
add
add
mov
addb
test
add
mov
xchg
aas
mov
mov
jns
sub
mov
in
and
sbb
aam
mov
dec
lods
push
dec
inc
add
jl
add
insb
inc
mov
xchg
add
rorl
adc
mov
add
ret
push
stos
add
mov
leave
out
fisttpl
jo
mov
in
push
add
out
adc
mov
add
mov
dec
fstp
out
and
add
addb
cmpsl
jo
mov
add
mov
lods
inc
add
in
lock
mov
imull
add
add
xchg
jmp
add
add
add
inc
mov
subl
cmpsl
loope
jl
dec
adc
outsl
sar
adc
lds
loop
mov
mov
and
cld
sub
popf
jmp
aam
repz
adc
sub
data16
dec
addb
sti
mov
lds
and
addb
imul
xchg
add
and
xchg
sub
out
push
jns
dec
icebp
lds
xchg
sbb
push
shr
xchg
repnz
add
jle
xchg
fs
pop
mov
add
repnz
repz
addb
mov
test
push
mov
add
add
enter
sbb
fstpl
push
xor
mov
add
inc
insl
cs
dec
incl
push
test
add
push
add
and
mov
mov
add
cmp
mov
mov
jmp
ljmp
jl
ljmp
xor
push
push
fucomip
push
add
pop
push
sub
mov
dec
outsb
and
add
addb
fists
movsb
outsl
jbe
push
xor
out
out
popf
icebp
jmp
xor
mov
rolb
cmp
adc
fcmovnu
cmc
repnz
pushf
xchg
add
mov
mov
xlat
aas
jo
mov
mov
into
xchg
sahf
add
mov
negl
dec
dec
loop
mov
fstpt
add
jl
add
adc
inc
xlat
xor
rorl
out
sub
in
dec
jnp
cmpsl
xchg
gs
mov
imul
xchg
mov
mov
std
movsb
push
test
pop
push
cmp
incl
iret
ds
add
insb
lret
xchg
nop
add
test
test
lods
add
mov
jmp
movsl
adc
add
mov
addb
mov
mov
in
xor
mov
sahf
adc
pop
call
push
add
sub
push
and
mov
mov
sub
and
mov
mov
pop
idivl
stc
jbe
add
rolb
push
add
ud0
lods
add
mov
mov
mov
or
push
scas
rolb
mov
mov
scas
cs
cmp
push
pop
xchg
test
or
jp
or
cmp
rolb
mov
mov
sarl
mov
xchg
das
jbe
into
arpl
cmp
je
js
mov
addr16
add
outsl
jmp
sbb
movsl
dec
in
jns
ss
jecxz
push
add
mov
out
idivb
hlt
push
jg
jne
in
xor
mov
ss
push
and
xchg
jle
dec
cmp
outsl
lods
cwtl
in
mov
sbb
sub
mov
sbb
rolb
ja
pushl
in
sbb
out
pop
rcrl
adc
mov
and
mov
mov
jp
and
mov
xchg
addl
js
mov
mov
push
idivl
push
mov
xchg
lds
pop
push
and
mov
mov
out
or
addb
cmpl
cmp
mov
jbe
push
aad
add
push
add
add
into
or
fwait
sbb
imul
adc
es
sbb
pop
mov
mov
add
mov
sbb
add
inc
jae
or
add
xchg
jle
adc
mov
mov
jg
xor
mov
adc
add
arpl
std
jmp
mov
add
movsb
pop
and
sbbl
test
jmp
and
add
mov
add
jb
mov
cmp
imul
and
mov
pop
xor
mov
push
add
or
lods
xchg
add
mov
dec
mov
ret
push
daa
ss
push
xchg
sub
rorl
pusha
add
xor
mov
xchg
adc
mov
jecxz
dec
mov
test
mov
mov
xor
pop
imul
mov
mov
jo
mov
mov
cmp
cmp
mov
add
sbb
mull
and
mov
mov
xchg
cmc
lcall
lods
push
add
cli
sahf
or
add
mov
mov
add
sub
push
pushf
or
je
mov
mov
insb
lcall
loope
add
add
leave
ftst
push
add
das
or
cld
in
sbb
add
out
xchg
xor
outsl
int
and
inc
add
xchg
jle
add
or
sub
in
mov
add
mov
aaa
dec
mov
repz
dec
cltd
test
pop
lcall
push
mov
add
out
or
mov
stc
xchg
xlat
xchg
dec
sub
cmpsb
andl
lods
cwtl
pop
ss
or
stos
jl
xchg
xchg
xor
push
mov
cmp
mov
xchg
dec
lret
cwtl
mov
xchg
and
mov
pop
imul
mov
fdivr
repnz
mov
mov
rolb
mov
lods
and
mov
pop
js
add
xchg
xchg
sbb
and
cmc
in
ret
xor
mov
xchg
insb
xor
inc
sarl
jecxz
pop
or
and
fisubl
add
push
add
add
push
xor
cli
jle
hlt
test
add
sbb
ss
add
mov
fmuls
add
ljmp
dec
xlat
dec
mov
cmpsb
lret
mov
xchg
pop
xlat
pop
xchg
xor
adc
xor
mov
aaa
dec
mov
mov
aas
mov
pop
cmp
mov
cmp
nop
add
cmp
xchg
xchg
movsl
adc
sub
rolb
adc
mov
lock
push
add
sti
test
push
rolb
pushf
sub
pop
rolb
mov
call
push
add
in
xchg
inc
inc
add
cmp
push
adc
rolb
ret
add
mov
add
mov
aas
jo
mov
inc
mov
sub
push
popa
lds
loope
xor
or
pop
adc
dec
mov
out
xchg
add
cmc
mov
or
push
add
mov
mov
add
adc
addb
mov
mov
mov
add
int3
loopne
mov
dec
repnz
insb
lock
mov
test
sub
mov
add
jo
mov
sub
jnp
add
mov
sub
enter
mov
pop
jp
lcall
sbb
cmpsl
sub
int
sub
out
leave
sti
pushf
das
cltd
xchg
mov
mov
or
add
test
add
push
fmulp
repz
ret
and
push
test
jbe
add
sbb
mov
insl
fldcw
jge
add
add
fs
add
ds
cmp
mov
test
mov
add
aaa
add
mov
push
sbb
aam
xor
mov
add
xor
mov
mov
adc
mov
sete
rcll
push
mov
out
and
mov
lahf
xor
addr16
mov
lock
test
xchg
sbb
mov
mov
cltd
sbb
push
and
mov
cmpsb
or
ret
lret
cmp
and
mov
lea
jle
lcall
addb
lods
outsb
in
rolb
cld
cmpsb
add
push
pop
xchg
add
adc
inc
lcall
cld
roll
or
mov
mov
add
pusha
add
sub
push
std
addb
pop
inc
aas
xor
add
stc
fwait
xor
pop
xlat
jge
js
add
mov
mov
push
out
or
or
jno
movsl
lock
mov
addr16
enter
mov
loop
mov
mov
add
mov
add
and
mov
and
and
add
mov
xchg
push
or
xchg
jle
add
pop
push
jae
add
jge
inc
mov
jnp
scas
lods
push
sahf
cld
mov
stos
roll
cltd
xor
lret
mov
inc
cli
mov
sub
out
inc
add
push
out
test
add
xlat
and
pusha
add
add
add
scas
shl
push
lret
mov
fs
mov
xchg
and
aas
arpl
add
fwait
pop
stos
mov
cmp
mov
pop
or
inc
add
add
mov
movsl
adc
mov
add
addb
and
mov
aaa
fsub
jnp
jge
xchg
scas
lds
mov
insb
daa
mov
into
sbb
popf
sub
ljmp
enter
mov
jmp
cld
adc
hlt
push
mov
jne
xchg
mov
mov
or
out
lods
sarl
out
daa
cli
outsl
push
cli
mov
mov
std
outsl
cli
lods
mov
add
push
dec
pop
dec
push
add
push
push
fs
rcll
lret
ja
add
mov
popa
clc
mov
mov
scas
mov
mov
dec
jl
mov
cwtl
ficomps
ljmp
gs
movsb
sub
jmp
fdivp
add
aas
loopne
mov
push
xor
mov
fwait
push
add
cmc
jbe
add
ret
jge
add
cmp
inc
add
test
cmp
mov
add
adc
mov
xchg
push
jg
push
repnz
push
or
add
adc
lea
inc
mov
dec
pusha
add
cmc
repz
addb
jge
mov
mov
add
xor
push
xor
mov
addb
jle
test
and
nop
add
add
aam
push
dec
inc
xchg
repnz
xchg
mov
movsl
pop
dec
dec
mov
insb
fcompl
dec
pop
jo
mov
pop
ljmp
sub
mov
add
jbe
add
dec
out
addb
sbb
xchg
mov
idivb
pop
out
rcrl
lods
das
pop
divb
add
in
fisubl
in
xchg
add
add
jne
dec
mov
lods
mov
mov
sbb
test
insb
mov
jp
loope
dec
xor
add
lea
sub
push
cs
add
push
hlt
ja
mov
mov
ret
xchg
add
jbe
faddl
sub
adc
mov
dec
notb
mov
xor
mov
jae
call
loop
mov
add
mov
mov
xchg
jl
xor
mov
add
jmp
ja
add
xor
mov
adc
mov
popf
sbb
mov
dec
aas
sub
scas
inc
pusha
add
fisttps
add
shr
xchg
add
clc
xor
out
and
scas
xor
mov
lahf
movsl
js
add
push
adc
mov
add
das
or
mov
cmp
jge
push
mov
aas
mov
mov
push
jo
mov
add
jg
dec
addb
push
or
xor
leave
xchg
add
add
mov
pop
andl
rolb
mov
add
add
push
js,pn
and
sti
divl
add
dec
pop
addb
repnz
testb
mov
mov
movsb
int
mov
in
movsb
xchg
popf
dec
and
aam
rolb
mov
add
sbb
call
or
mov
scas
push
nop
add
add
repnz
mov
sub
js
cmovl
add
or
xchg
stos
and
xchg
jl
add
mov
mov
add
mov
into
mov
or
xchg
mov
imul
add
out
test
push
scas
fildl
mov
outsb
rolb
rolb
mov
mov
stos
mov
test
xor
mov
mov
insb
or
jo
mov
mov
xchg
add
inc
add
bound
mov
mov
inc
push
add
mov
test
call
pop
stos
int3
cli
jecxz
mov
mov
aad
add
sub
sbb
mov
lret
mov
fildll
dec
ja
nop
add
mov
jno
add
sbb
into
pusha
add
xchg
not
mov
mov
add
mov
sub
cmpsb
out
jno
scas
test
add
mov
leave
push
pushf
mov
idiv
dec
or
std
loope
je
add
mov
dec
pop
cmp
imul
icebp
xor
mov
xchg
xor
mov
jne
push
mov
add
out
mov
push
and
pop
mov
push
dec
test
add
push
fildll
sbb
add
mov
mov
jno
xchg
sub
iret
movsb
scas
push
xor
mov
xlat
mov
add
cmc
push
add
js
mov
stc
jae
add
lock
bound
mov
mov
je
je
sub
add
mov
sub
pop
sbb
sbb
adc
cltd
dec
pop
adc
addb
xor
mov
imull
and
add
rcll
or
jp
jecxz
add
push
pop
mov
in
push
push
dec
lahf
adc
mov
sub
cld
cld
push
sbb
mov
inc
ss
sbb
leave
in
mov
xchg
sahf
pop
adcl
mov
jae
push
pusha
add
xchg
add
fadd
and
push
hlt
in
ret
negl
xchg
ja
cs
mov
leave
aam
jmp
add
adc
mov
mov
xchg
add
pop
xor
mov
clc
add
mov
xor
adc
in
sbb
data16
add
add
aad
sub
in
sbb
add
addb
jecxz
fsubl
fcoml
loope
jle
int
ja
and
mov
ficoms
ds
push
inc
cs
les
mov
add
pop
fldcw
mov
cltd
mov
aam
and
or
add
in
push
add
mov
add
mov
mov
fiadds
and
add
add
mov
add
cmp
xor
es
mov
add
cmc
out
ret
ret
pop
cmpsb
icebp
js
aam
mov
mov
add
lret
mov
mov
mov
scas
test
cld
movsl
in
jmp
dec
mov
ljmp
dec
adc
mov
and
mov
pop
mov
add
stc
outsb
shll
mov
mov
add
lds
ljmp
test
or
addb
addb
cld
clc
sbb
addb
outsb
mov
jb
mov
xchg
add
sub
adc
add
inc
dec
mov
mov
jge
into
jnp
mov
lea
movsb
sub
or
addb
xchg
xor
mov
mov
pop
xor
xor
add
cmpl
sub
imul
clc
pop
push
ja
mov
add
mov
je
jbe
nop
add
inc
ret
outsb
lds
xor
add
and
loope
dec
mov
jne
fwait
rolb
mov
xchg
sub
sbb
jge
add
data16
pop
cmpsb
mov
stos
mov
sti
aas
pop
pop
std
sub
sub
push
stos
mov
mov
xchg
sub
iret
arpl
cmpsl
mov
or
xchg
in
add
jbe
test
add
hlt
inc
pop
cmpl
clc
push
mov
mov
mov
ficompl
dec
xor
add
stos
inc
pop
mov
add
imul
into
xchg
ss
std
insb
in
add
mov
dec
cmp
mov
add
mov
and
mov
cmp
rolb
mov
sbb
xchg
sbb
push
stc
cmpsl
add
add
mov
enter
mov
out
inc
push
out
pusha
add
add
xlat
leave
add
xchg
iret
das
repnz
pop
xchg
ret
js
loope
xchg
aad
xchg
xchg
xchg
push
add
add
add
aaa
addb
jae
adc
mov
pop
jbe
cmp
mov
call
add
jno
in
add
inc
mov
mov
mov
add
lods
clc
dec
data16
add
mov
add
mov
mov
rolb
movsl
push
inc
add
pop
in
out
jmp
add
jne
std
pop
hlt
shl
add
repz
jle
aam
pop
jle
mov
lods
push
push
es
jb
mov
dec
push
jae
das
test
pop
lods
sbb
add
int3
dec
dec
adc
lods
out
ficoml
popf
icebp
inc
add
std
mov
std
mov
sub
insl
jge
rolb
mov
sub
arpl
aaa
dec
sub
inc
add
mov
push
xor
aaa
or
push
lret
addb
push
out
mov
pop
pop
pop
ja
adc
xchg
push
jge
test
aad
ljmp
bound
mov
js
add
and
popf
pop
xchg
imul
bound
mov
dec
leave
pushf
or
data16
loopne
mov
add
add
mov
arpl
mov
orl
lock
mov
mov
sahf
scas
stos
mov
mov
fistl
add
test
pop
aam
pop
stc
inc
sbb
pop
clc
rolb
mov
imul
addl
sbb
cmp
rolb
mov
mov
incl
cmc
sub
fldenv
mov
lret
inc
lea
push
push
call
mov
add
add
mov
mov
add
push
fnstenv
gs
add
insl
inc
add
adc
jnp
xor
mov
add
xor
mov
cwtl
test
adc
mov
xchg
add
rolb
jne
addr16
adc
in
add
sbb
sub
pop
dec
mov
repnz
add
addb
sbb
scas
and
lret
mov
mov
adc
mov
adc
mov
add
int
lods
cmp
add
rolb
adc
add
in
add
dec
xchg
push
add
add
loopne
mov
add
insl
xor
mov
stos
mov
mov
add
mov
ret
call
sbb
add
lahf
outsl
addb
jge
jle
push
mov
mov
sub
cmpsl
xor
fmul
shll
mov
int3
out
xor
add
out
add
repz
mov
in
repz
add
mov
inc
and
sarl
jo
mov
in
adc
sub
ss
int
int3
loope
stos
sub
jno
push
movsb
call
inc
pushf
fidivs
inc
ffreep
dec
aad
pop
jle
andnps
add
dec
pop
test
repz
test
incb
out
cwtl
lock
in
addr16
mov
pop
fldenv
mov
xchg
add
add
mov
pop
js
arpl
mov
imul
mov
add
add
lcall
push
iret
jge
inc
mov
sbb
jmp
mov
pop
inc
test
jne
sub
lds
pop
int3
inc
bound
mov
int3
cmp
and
mov
add
add
pop
adc
xchg
jecxz
sbb
adc
mov
arpl
mov
xchg
ljmp
cmc
cmp
push
add
movsl
dec
in
shl
add
out
add
pop
pop
test
sub
xor
fldenv
addl
cmpsl
shrl
push
add
dec
xchg
mov
jne
in
lds
addb
clc
xor
mov
cmp
jg
jp
mov
loope
dec
mov
push
add
lods
sbb
cmp
mov
sbb
inc
inc
inc
sti
stos
inc
mov
push
add
adc
and
jne
push
and
mov
std
or
mov
add
out
in
jb
mov
sahf
adc
out
out
xor
add
xchg
pop
cld
in
hlt
lock
call
push
cmp
add
das
scas
or
sbb
push
iret
xchg
sub
add
or
pop
cltd
test
xchg
inc
cmovge
sub
or
int3
sti
movsl
xchg
ds
add
xchg
rorl
lahf
inc
das
cmovg
add
add
sub
dec
add
mov
test
add
push
push
int3
xchg
std
mov
adc
loop
mov
add
addb
je
pop
push
or
adc
mov
fwait
pop
negb
mov
add
adc
incb
mov
pop
or
add
dec
outsb
movsb
stos
or
call
add
hlt
mov
xor
push
and
mov
or
adc
jbe
sub
imul
mov
fwait
mov
mov
ret
imul
mov
sub
push
add
dec
add
mov
mov
mov
jno
or
sbb
aaa
push
sbb
pop
repz
in
pusha
add
jae
das
lea
push
xchg
aad
add
mov
jb
mov
add
scas
dec
rolb
lahf
aas
inc
add
mov
scas
lods
sti
mov
pand
add
fiadds
js
test
aas
icebp
addb
inc
add
add
out
int
push
lods
aam
aas
sbb
mov
add
ss
add
add
scas
mov
lods
dec
jbe,pt
push
xchg
fldt
xchg
leave
jge
or
and
jge
dec
xchg
out
mov
mov
fidivl
or
rolb
xor
pop
mov
sti
or
and
mov
add
jae
sub
scas
xchg
add
add
xlat
out
aaa
das
jge
jno
pop
mov
mov
test
in
xchg
movsb
insb
sub
sbb
add
fldenv
lahf
mov
es
das
jbe
pushf
mov
lret
fs
jg
shll
nopl
rcrl
adc
mov
jno
jnp
or
js
add
aam
add
jp
add
aad
lea
mov
and
mov
and
fsubs
mov
add
add
repz
adc
lret
mov
add
jnp
cwtl
inc
mov
in
pop
lods
xchg
add
pop
pop
jb
mov
add
push
into
mov
nop
add
test
dec
xor
mov
rolb
mov
divl
call
mov
lock
mov
add
pop
push
add
mov
test
in
xchg
gs
fldl
mov
add
jecxz
in
sbb
mov
mov
dec
push
sbb
add
add
sbb
add
in
fprem
rolb
mov
shufps
rolb
xor
mov
jbe
cmp
add
pop
sahf
mov
mov
mov
push
xchg
add
lret
mov
fisubrs
add
stos
loop
mov
adc
mov
add
or
sbb
fnclex
add
dec
xor
mov
mov
mov
add
sub
popf
dec
jp
sbb
push
cli
lcall
imul
mov
fnsave
add
or
mov
mov
mov
mov
daa
add
hlt
les
addb
and
lret
inc
jnp
add
cmp
lods
ss
adc
add
mov
add
sub
or
add
xor
add
mov
out
jmp
shll
mov
add
xchg
add
rolb
mov
insl
jp
pop
int
cmpsl
hlt
push
call
popa
xor
jg
aam
xchg
and
cmp
add
inc
add
lods
mov
mov
mov
add
push
add
sbb
sbb
add
clc
shrl
daa
lahf
xchg
in
or
mov
cli
inc
int
add
add
xchg
mov
frstor
fwait
negb
pop
lock
imul
mov
mov
lahf
lds
popa
shll
adc
xor
jb
mov
mov
dec
loope
inc
push
insb
add
or
add
mov
in
add
stc
jl
push
movsb
add
lahf
testb
mov
les
add
int3
mov
add
push
add
cmp
fcomip
mov
cld
inc
inc
and
jmp
add
mov
aas
ds
sbb
add
rolb
mov
mov
rolb
rorl
cwtl
outsb
xor
mov
xchg
stos
rolb
mov
add
mov
and
sbb
ljmp
mov
mov
cltd
jl
jmp
fsubrl
mov
pop
bound
mov
out
fdivs
mov
fs
push
cmpsl
sbb
aaa
or
inc
adc
mov
jne
icebp
repz
aad
je
stos
mov
popf
and
xchg
inc
ss
push
push
fidivrs
pop
mov
jns
add
xorl
or
in
mov
sahf
pop
dec
notl
add
mov
cld
dec
ficoml
stos
push
add
and
mov
mul
dec
mov
and
add
js
popa
mov
mov
dec
cld
mov
mov
mov
add
add
cs
cld
jecxz
adc
fcmovbe
mov
cli
cmp
jo
mov
ljmp
rorl
test
cwtl
mov
fsubs
mov
mov
mov
lcall
mov
add
add
mov
insb
mov
inc
add
sub
adc
mov
xor
rcrl
rolb
mov
xchg
sub
xchg
cmp
cmp
lgs
add
jmp
sub
rolb
into
imul
add
push
es
push
add
add
leave
add
adc
cmp
rcll
dec
xor
add
icebp
addl
scas
jmp
ret
fsubr
mov
leave
inc
cmpsl
mov
addb
mov
fiaddl
mov
jno
mov
rolb
mov
add
xor
mov
xorl
mov
jmp
push
or
jl
repnz
sbb
or
ret
imul
add
mov
mov
iret
and
dec
push
add
mov
add
lret
mov
mov
add
sub
add
pop
mov
pop
or
add
ds
mov
pop
xchg
xchg
jnp
add
mov
outsb
pop
jmp
mov
cmpsb
mov
js
jl
jecxz
out
add
add
add
lods
jge
add
mov
add
icebp
cmpsl
scas
fists
add
out
mov
mov
add
pop
xchg
pushl
push
jle
xchg
hlt
sbb
xchg
push
add
sbb
rorl
vprotw
jnp
scas
and
xchg
add
sbb
and
cmp
xlat
sub
scas
pop
insl
fldcw
dec
lcall
add
jne
add
rolb
mov
add
fs
je
add
int
mov
cltd
clc
gs
mov
add
loopne
mov
mov
push
mov
adc
mov
mov
add
add
mov
push
add
mov
add
xor
mov
add
add
cltd
enter
inc
mov
mov
mov
mov
iret
fidivrs
xor
mov
ficompl
add
xor
cmpl
fnstenv
lods
push
sub
jns
les
push
xor
mov
sbb
sti
loope
jns
add
bound
mov
enter
mov
jno
add
xchg
cltd
mov
pop
sbb
notb
mov
mov
mov
xor
or
outsb
das
addb
call
add
in
movsb
data16
gs
xchg
mov
cmp
pop
ficompl
out
popf
cmpsl
ja
push
pop
fldt
aas
lods
and
dec
addb
addb
pop
test
cmp
pop
mov
mov
inc
dec
lock
mov
mov
mov
mov
mov
xchg
addb
mov
repz
mov
mov
jl
sbb
rcll
add
push
push
icebp
mov
mov
add
lock
add
sti
and
scas
mov
popf
xchg
push
dec
bound
mov
add
xor
loop
mov
or
mov
in
sbb
xchg
jno
add
mov
pusha
add
add
inc
inc
pop
xchg
add
rolb
mov
pop
rolb
mov
inc
xor
mov
inc
sub
inc
jmp
add
add
inc
mov
fcomi
data16
ja
shr
mov
add
mov
add
fldcw
pop
or
lret
mov
mov
inc
test
pop
dec
es
mov
sub
popf
sub
add
or
mov
add
addr16
sti
jmp
rolb
stos
jae
fsubrl
push
adc
mov
test
arpl
sbb
lahf
rdtsc
mov
inc
dec
xor
sbb
sub
and
mov
repz
mov
test
add
mov
setns
add
add
mov
mov
out
pop
aaa
in
lock
and
mov
inc
mov
mov
das
or
and
add
add
sahf
xchg
cmp
mov
mov
xchg
aas
fdivs
mov
add
xor
sub
dec
pop
xor
mov
arpl
int
xor
xchg
arpl
arpl
add
cmp
dec
addb
xchg
pop
repnz
mov
xor
add
xchg
ret
mov
js
push
test
add
icebp
leave
iret
jno
mov
pushf
mov
mov
bound
mov
add
cmp
fimuls
lret
add
fsts
test
in
jbe
stc
mov
add
insb
out
push
addb
flds
inc
add
adc
in
mov
mov
mov
repz
in
fcompl
dec
jl
mov
mov
inc
sub
pop
or
add
mov
add
lock
adc
jns
pushf
popf
mov
dec
push
xor
mov
loopne
mov
into
jne
push
add
mov
or
pop
hlt
fwait
out
adc
mov
fnstcw
fsubp
add
or
lahf
js
stos
inc
add
mov
jl
mov
dec
arpl
icebp
push
jg
lea
cmp
cmpsb
dec
lcall
add
and
mov
add
mov
jno
fbstp
mov
lds
sbb
add
mov
or
inc
add
dec
lea
add
clc
repnz
nop
cld
jae
es
enter
pushf
add
add
repnz
nop
cld
jae
add
es
xor
push
mov
xchg
ret
add
mov
enter
mov
clc
repnz
nop
cld
jae
enter
stos
es
nop
leave
jmp
sbb
add
add
mov
push
push
mov
xchg
ret
add
pusha
mov
lea
jae
jno
jmp
add
push
mov
nop
leave
jmp
mov
jne
test
clc
repnz
nop
cld
jae
add
add
jl
mov
nop
nop
cld
jae
add
outsl
cltd
add
lahf
jmp
push
mov
nop
leave
jmp
mov
add
add
inc
xchg
arpl
sbb
mov
nop
leave
jmp
mov
add
cmp
repnz
nop
cld
jae
orl
outsl
aad
mov
push
mov
nop
leave
jmp
add
push
push
push
clc
repnz
nop
cld
jae
add
in
inc
popa
in
mov
push
mov
nop
leave
jmp
dec
mov
mov
sub
add
add
add
add
dec
add
push
xchg
add
sbb
nop
nop
cld
jae
add
add
data16
sahf
shl
clc
repnz
nop
cld
jae
jno
inc
repnz
dec
lea
clc
repnz
nop
cld
jae
popa
add
movsb
clc
repnz
nop
cld
jae
add
add
in
xor
add
add
repnz
nop
cld
jae
add
add
icebp
repnz
repnz
nop
cld
jae
jne
sti
popa
mov
mov
add
adc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
sbb
add
fcoms
in
add
mov
pop
add
xor
push
iret
fmuls
add
clc
repnz
nop
cld
jae
add
add
add
and
mov
pushl
push
mov
nop
leave
jmp
add
cmc
repz
jno
inc
add
add
repnz
nop
cld
jae
add
jo
pusha
push
mov
xchg
ret
add
lods
add
add
iret
mov
clc
repnz
nop
cld
jae
popa
rcrb
mov
push
mov
nop
leave
jmp
jmp
add
add
add
clc
repnz
nop
cld
jae
add
stos
lahf
ret
push
inc
and
repnz
nop
cld
jae
add
add
mov
jno
in
push
clc
repnz
nop
cld
jae
add
dec
add
repnz
nop
cld
jae
add
xchg
lods
add
clc
repnz
nop
cld
jae
xor
fs
jno
pop
push
mov
xchg
ret
add
add
mov
repnz
push
mov
nop
leave
jmp
imul
outsl
popf
cmp
push
mov
nop
leave
jmp
add
pusha
outsl
loop
xor
push
mov
push
mov
xchg
ret
mov
add
rolb
mov
iret
cmpw
push
mov
nop
leave
jmp
add
pop
push
mov
nop
leave
jmp
push
xor
add
add
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
sti
ja
sbb
xor
clc
repnz
nop
cld
jae
pusha
pop
add
dec
add
push
mov
xchg
ret
push
add
imul
loop
mov
mov
nop
leave
jmp
add
push
sub
es
cmp
ret
shlb
outsl
add
add
hlt
in
push
clc
repnz
nop
cld
jae
cltd
shrb
add
clc
repnz
nop
cld
jae
stos
pop
stos
add
add
gs
xor
mov
add
clc
repnz
nop
cld
jae
and
add
fs
add
repnz
nop
cld
jae
add
repz
mov
clc
repnz
nop
cld
jae
pop
fs
add
in
nop
leave
jmp
add
inc
add
jle
sub
nop
nop
cld
jae
pop
add
popa
add
ret
jl
les
mov
xchg
ret
ljmp
movsb
leave
mov
push
mov
nop
leave
jmp
xor
add
add
fisubrl
mov
mov
nop
leave
jmp
lods
sbb
fiaddl
div
inc
add
ja
mov
add
add
clc
repnz
nop
cld
jae
pusha
add
bound
mov
add
clc
repnz
nop
cld
jae
xchg
mov
nop
cld
jae
outsl
jo
add
mov
repz
mov
clc
repnz
nop
cld
jae
fs
jl
dec
add
push
mov
xchg
ret
sti
movb
movb
enter
nop
nop
cld
jae
add
loop
lea
mov
jne
clc
repnz
nop
cld
jae
add
popa
out
add
push
mov
xchg
ret
xchg
add
add
mov
cmp
push
mov
nop
leave
jmp
add
cltd
in
add
push
test
or
clc
repnz
nop
cld
jae
and
add
add
push
clc
repnz
nop
cld
jae
add
ljmp
mov
push
mov
nop
leave
jmp
and
sub
cld
push
mov
xchg
ret
add
add
add
rolb
clc
repnz
nop
cld
jae
mov
jle
add
xchg
jb
mov
out
push
push
mov
xchg
ret
add
add
add
add
out
pop
clc
repnz
nop
cld
jae
sti
add
add
mov
push
mov
xchg
ret
add
add
sub
add
xor
push
mov
xchg
ret
xchg
inc
repz
repnz
nop
cld
jae
sbbl
push
push
mov
xchg
ret
and
mov
lods
ja
dec
push
mov
xchg
ret
rolb
ja
movb
xchg
in
nop
leave
jmp
addl
popa
pop
mov
clc
repnz
nop
cld
jae
in
add
sub
in
je
push
mov
nop
leave
jmp
jo
cltd
bnd
repnz
nop
cld
jae
jmp
add
outsl
sub
cld
jae
loop
lahf
ja
inc
popa
jle
mov
clc
repnz
nop
cld
jae
add
pop
jmp
jne
add
cmpl
push
clc
repnz
nop
cld
jae
add
repnz
ja
sbb
dec
push
push
mov
nop
leave
jmp
add
add
sbb
push
mov
add
push
add
add
hlt
pop
cmc
stos
bound
push
ljmp
jae
add
stos
xor
pop
clc
repnz
nop
cld
jae
mov
subl
cmp
repnz
nop
cld
jae
pop
add
aaa
jo
mov
call
clc
repnz
nop
cld
jae
add
outsl
adc
cmp
sar
mov
xchg
ret
mov
add
mov
push
mov
xchg
ret
loop
add
add
mov
add
clc
repnz
nop
cld
jae
add
cmp
clc
repnz
nop
cld
jae
add
add
mov
nop
nop
cld
jae
outsl
push
add
add
clc
repnz
nop
cld
jae
in
ja
rolb
add
lock
rolb
mov
mov
add
push
mov
nop
leave
jmp
add
add
add
sarb
shr
clc
repnz
nop
cld
jae
add
data16
mov
clc
repnz
nop
cld
jae
xor
mov
nop
leave
jmp
movb
lahf
add
xchg
add
in
push
push
mov
xchg
ret
rolb
jae
add
subl
clc
repnz
nop
cld
jae
add
rolb
stc
push
mov
fcomip
add
dec
mov
int
stc
mov
out
add
push
mov
xchg
ret
lods
add
stos
mov
clc
dec
inc
clc
repnz
nop
cld
jae
jmp
mov
jle
movb
nop
nop
cld
jae
jmp
sti
jl
ljmp
nop
nop
cld
jae
add
add
jno
lea
add
push
mov
nop
leave
jmp
mov
add
loop
inc
push
add
add
add
in
nop
leave
jmp
popa
shrb
jl
mov
clc
repnz
nop
cld
jae
sti
pusha
fiaddl
shll
add
test
add
clc
repnz
nop
cld
jae
add
and
jmp
add
and
rolb
shlb
sub
rep
push
in
pushl
clc
repnz
nop
cld
jae
popa
add
add
xor
loopne
mov
scas
enter
and
pusha
jae
loop
mov
fiaddl
jge
dec
cmp
repnz
nop
cld
jae
add
add
mov
xchg
clc
repnz
nop
cld
jae
add
and
add
xchg
add
call
clc
repnz
nop
cld
jae
jne
xor
inc
adc
repnz
nop
cld
jae
popa
add
ja
popa
jecxz
les
clc
repnz
nop
cld
jae
add
pusha
add
test
add
clc
repnz
nop
cld
jae
add
popa
sub
popf
clc
repnz
nop
cld
jae
repz
repnz
nop
cld
jae
popa
add
mov
addb
out
jmp
pusha
popa
add
sbb
mov
pusha
lahf
add
testl
insb
insb
clc
repnz
nop
cld
jae
mov
ret
add
mov
mov
nop
leave
jmp
add
add
in
inc
dec
push
push
mov
nop
leave
jmp
jle
add
add
cltd
push
aas
push
mov
nop
leave
jmp
add
add
mov
jmp
nop
leave
jmp
pusha
repz
add
add
es
push
mov
nop
leave
jmp
dec
add
stos
push
mov
xchg
ret
stos
add
add
add
add
jmp
add
push
mov
nop
leave
jmp
aaa
add
add
testl
push
mov
nop
leave
jmp
imul
add
or
clc
repnz
nop
cld
jae
sti
jmp
add
add
add
inc
push
mov
xchg
ret
sub
dec
add
clc
repnz
nop
cld
jae
lahf
sub
add
add
dec
push
mov
nop
leave
jmp
add
add
and
add
mov
nop
leave
jmp
movb
jle
push
clc
repnz
nop
cld
jae
cmc
sbb
add
gs
add
clc
repnz
nop
cld
jae
add
jl
add
add
push
mov
xchg
ret
add
add
cmc
add
push
or
mov
nop
leave
jmp
jle
add
jo
cmpsl
adc
mov
nop
leave
jmp
ja
xor
add
repnz
in
nop
leave
jmp
add
loop
add
push
push
mov
xchg
ret
sbb
mov
add
rclb
in
nop
leave
jmp
add
jle
aam
dec
mov
clc
repnz
nop
cld
jae
add
loop
and
add
add
clc
repnz
nop
cld
jae
sub
add
add
orl
inc
add
lea
xabort
nop
nop
cld
jae
add
outsl
add
add
adc
pusha
clc
repnz
nop
cld
jae
lahf
sbb
add
imul
nop
nop
cld
jae
jmp
jl
stos
jo
jl
mov
clc
repnz
nop
cld
jae
add
imul
lock
mov
xchg
ret
add
add
add
in
nop
leave
jmp
stos
add
shlb
lea
push
mov
nop
leave
jmp
add
add
add
repnz
nop
cld
jae
add
add
add
add
add
repnz
nop
cld
jae
add
add
in
add
add
adc
repnz
nop
cld
jae
jl
aaa
loop
es
sub
add
add
aaa
mov
push
push
jb
mov
sub
sub
inc
add
xorl
mov
mov
clc
repnz
nop
cld
jae
jo
sti
add
add
add
repnz
nop
cld
jae
jmp
xchg
add
outsb
jne
clc
repnz
nop
cld
jae
add
adc
je
clc
repnz
nop
cld
jae
rolb
add
mov
nop
nop
cld
jae
ja
add
push
push
mov
xchg
ret
add
shrb
mov
xor
mov
nop
leave
jmp
and
enter
push
clc
repnz
nop
cld
jae
add
add
cmp
sub
sub
mov
nop
leave
jmp
repz
lods
in
add
movb
mov
push
mov
xchg
ret
sub
add
test
stc
clc
repnz
nop
cld
jae
add
xor
clc
repnz
nop
cld
jae
jl
add
add
or
clc
repnz
nop
cld
jae
add
cmpl
movl
add
add
add
mov
clc
repnz
nop
cld
jae
imul
jbe
clc
repnz
nop
cld
jae
jle
sti
ljmp
movsb
push
mov
nop
leave
jmp
stos
pop
lahf
add
add
dec
or
mov
nop
leave
jmp
xor
pop
mov
aaa
fsubs
popa
add
repnz
nop
cld
jae
loop
jno
outsl
in
and
push
mov
xchg
ret
cmc
sti
popa
outsl
add
lods
jmp
mov
xchg
ret
add
jmp
add
xlat
into
mov
clc
repnz
nop
cld
jae
and
mov
mov
add
pushw
stos
mov
push
mov
xchg
ret
add
sti
add
call
clc
repnz
nop
cld
jae
add
add
push
push
mov
xchg
ret
cltd
jno
mov
fadds
je
sub
cmpsb
out
add
ja
cltd
xor
and
push
push
mov
nop
leave
jmp
cltd
add
add
mov
clc
repnz
nop
cld
jae
add
add
call
clc
repnz
nop
cld
jae
xor
add
leave
pop
clc
repnz
nop
cld
jae
lahf
outsl
imul
mov
clc
repnz
nop
cld
jae
cltd
xor
mov
mov
push
mov
nop
leave
jmp
add
in
mov
mov
xor
push
mov
xchg
ret
add
add
add
in
adc
mov
push
mov
nop
leave
jmp
sbb
in
rcrl
jmp
incl
mov
add
jle
add
mov
mov
xchg
ret
add
add
outsl
add
cmp
repnz
nop
cld
jae
lahf
lahf
push
add
in
add
nop
nop
cld
jae
in
addl
mov
mov
jne
clc
repnz
nop
cld
jae
and
cmp
pop
xlat
inc
add
add
addl
cmp
push
mov
nop
leave
jmp
in
jmp
jo
add
cli
push
push
mov
xchg
ret
ja
add
add
lahf
add
add
mov
push
push
mov
xchg
ret
jae
add
add
add
movb
cmp
ret
addl
add
dec
add
clc
repnz
nop
cld
jae
add
add
loop
xchg
sub
repnz
nop
cld
jae
add
shlb
and
clc
repnz
nop
cld
jae
aaa
add
lods
cmp
push
push
mov
xchg
ret
jmp
add
xor
ljmp
add
add
in
nop
leave
jmp
add
lahf
lcall
mov
nop
leave
jmp
aaa
add
add
lret
lea
push
mov
xchg
ret
loop
add
add
mov
clc
repnz
nop
cld
jae
addl
jl
jb
mov
push
mov
xchg
ret
add
add
repz
repnz
nop
cld
jae
rorb
imul
clc
repnz
nop
cld
jae
enter
lahf
add
jne
clc
repnz
nop
cld
jae
jl
add
sub
lcall
ret
lods
add
add
add
loop
mov
xchg
ret
lahf
popa
enter
jmp
and
sub
clc
repnz
nop
cld
jae
and
add
add
clc
repnz
nop
cld
jae
jne
outsl
repnz
roll
repnz
nop
cld
jae
enter
mov
cmc
rolb
mov
outsl
loopne
mov
nop
leave
jmp
add
add
aaa
add
add
clc
repnz
nop
cld
jae
mov
add
test
repnz
nop
cld
jae
ja
rorb
pop
clc
repnz
nop
cld
jae
in
stos
fs
jle
add
push
mov
add
cmp
add
add
roll
add
pop
jnp
add
push
mov
xchg
ret
add
rolb
xchg
stos
push
mov
nop
leave
jmp
aaa
add
mov
outsl
js
inc
add
add
add
popa
popa
mov
in
nop
leave
jmp
mov
add
and
repnz
nop
cld
jae
add
popa
es
cmc
sub
repnz
nop
cld
jae
outsl
add
add
mov
xchg
ret
cmc
ljmp
xchg
jmp
call
in
nop
leave
jmp
pop
add
je
add
repnz
nop
cld
jae
add
sti
add
clc
clc
repnz
nop
cld
jae
add
loop
add
rolb
mov
push
clc
repnz
nop
cld
jae
jl
stos
add
add
lock
add
or
pop
add
xor
jnp
jno
jbe
in
mov
push
mov
nop
leave
jmp
cltd
lahf
jo
mov
mov
nop
cld
jae
add
jo
add
add
insb
inc
jb
clc
repnz
nop
cld
jae
imul
mov
clc
repnz
nop
cld
jae
lahf
add
mov
push
mov
xchg
ret
add
jne
mov
lret
clc
repnz
nop
cld
jae
cmp
aaa
cmc
add
pop
ret
pop
pop
clc
repnz
nop
cld
jae
add
add
inc
add
push
mov
nop
leave
jmp
add
add
add
xchg
popf
xor
clc
repnz
nop
cld
jae
lea
add
add
lods
je
clc
repnz
nop
cld
jae
shl
lret
addb
add
repnz
nop
cld
jae
add
popa
pop
mov
clc
repnz
nop
cld
jae
enter
jne
in
mov
clc
repnz
nop
cld
jae
pusha
jo
xchg
js
clc
repnz
nop
cld
jae
outsl
jno
jae
add
fucomp
or
clc
repnz
nop
cld
jae
add
es
sub
repnz
nop
cld
jae
add
mov
add
nop
nop
cld
jae
lea
add
add
add
in
clc
repnz
nop
cld
jae
add
sti
add
add
add
jle
clc
repnz
nop
cld
jae
lahf
add
add
cmp
repnz
nop
cld
jae
jle
add
and
mov
push
push
mov
xchg
ret
and
lahf
sbb
test
addb
mov
push
pusha
clc
repnz
nop
cld
jae
imul
repz
add
dec
add
push
add
xor
aam
and
mov
and
clc
repnz
nop
cld
jae
ljmp
daa
push
add
clc
repnz
nop
cld
jae
add
dec
mov
subl
push
mov
xchg
ret
add
es
dec
push
clc
repnz
nop
cld
jae
inc
addl
movb
add
loopne
mov
push
mov
xchg
ret
jl
jno
add
mov
mov
clc
add
mov
inc
add
lahf
aaa
inc
lahf
add
repz
loopne
clc
repnz
nop
cld
jae
add
mov
xchg
cmpsb
incb
in
nop
leave
jmp
pop
fs
out
out
clc
clc
repnz
nop
cld
jae
add
aaa
jae
test
push
mov
xchg
ret
and
stos
add
in
add
jnp
push
add
repnz
nop
cld
jae
add
mov
into
and
push
mov
xchg
ret
add
movb
mov
icebp
lret
add
clc
repnz
nop
cld
jae
lods
lods
outsl
add
inc
leave
xor
clc
repnz
nop
cld
jae
mov
stos
add
in
nop
leave
jmp
add
mov
xor
add
clc
repnz
nop
cld
jae
xor
add
add
add
repnz
nop
cld
jae
jl
add
add
add
repnz
nop
cld
jae
add
loope
add
add
add
repnz
nop
cld
jae
popa
jle
xchg
into
mov
push
mov
nop
leave
jmp
dec
add
jl
push
repz
call
in
nop
leave
jmp
mov
add
mov
mov
nop
leave
jmp
outsl
jl
ja
add
aam
dec
push
mov
xchg
ret
add
lea
sti
pop
mov
clc
repnz
nop
cld
jae
sbb
add
add
sti
mov
clc
repnz
nop
cld
jae
add
enter
jmp
jo
push
mov
nop
leave
jmp
push
in
loope
add
adc
in
nop
leave
jmp
add
add
mov
add
clc
repnz
nop
cld
jae
add
push
mov
xchg
ret
add
jo
dec
push
clc
repnz
nop
cld
jae
add
pusha
aaa
push
jmp
lret
push
mov
nop
leave
jmp
mov
pop
popa
mov
fisttpl
nop
cld
jae
add
pusha
repnz
add
sub
repnz
nop
cld
jae
jl
add
and
push
mov
xchg
ret
add
and
mov
inc
or
mov
xchg
ret
ljmp
jge
dec
cli
pushl
ja
jae
mov
add
subl
movsb
clc
repnz
nop
cld
jae
add
add
jae
jno
movzwl
clc
repnz
nop
cld
jae
mov
outsl
push
incb
in
nop
leave
jmp
add
add
hlt
inc
lret
add
clc
repnz
nop
cld
jae
jne
add
jo
mov
ja
outsb
je
repnz
nop
cld
jae
add
aaa
aaa
adc
add
clc
repnz
nop
cld
jae
add
add
mov
add
add
clc
repnz
nop
cld
jae
popa
xorl
mov
inc
add
add
fidivl
add
cmpsl
adc
push
mov
xchg
ret
add
add
jno
in
add
inc
and
repnz
nop
cld
jae
lahf
jl
add
and
add
mov
xchg
ret
jmp
loop
loop
xor
in
push
mov
xchg
ret
xor
add
add
pop
shl
clc
repnz
nop
cld
jae
cmc
addl
mov
clc
repnz
nop
cld
jae
mov
sub
loop
out
call
clc
repnz
nop
cld
jae
sub
clc
repnz
nop
cld
jae
add
ja
popa
fiaddl
repnz
in
loop
mov
add
mov
or
xchg
lahf
cmp
repnz
nop
cld
jae
shlb
sbb
out
decl
clc
repnz
nop
cld
jae
add
sub
ja
les
repnz
nop
cld
jae
cmc
jle
jmp
aaa
cwtl
jne
clc
repnz
nop
cld
jae
add
mov
mov
clc
repnz
nop
cld
jae
mov
enter
cmpsl
insb
add
clc
repnz
nop
cld
jae
add
mov
add
call
repnz
nop
cld
jae
cmp
adc
push
mov
nop
leave
jmp
jl
sub
inc
adc
repnz
nop
cld
jae
add
xorl
pop
out
clc
repnz
nop
cld
jae
add
loopne
mov
add
add
mov
clc
repnz
nop
cld
jae
add
loop
pusha
add
jae
movzwl
push
mov
xchg
ret
add
loope
add
push
mov
nop
leave
jmp
add
sbb
clc
repnz
nop
cld
jae
pusha
add
jle
jmp
push
mov
xchg
ret
jle
movb
add
rolb
xchg
in
movswl
clc
repnz
nop
cld
jae
jl
add
out
clc
repnz
nop
cld
jae
add
add
sub
clc
repnz
nop
cld
jae
popa
xor
and
mov
mov
adc
repnz
nop
cld
jae
outsl
add
fiaddl
aad
add
push
mov
xchg
ret
add
add
jg
sar
nop
nop
cld
jae
push
add
outsl
add
clc
repnz
nop
cld
jae
cmp
add
push
add
add
add
inc
mov
add
mov
xchg
ret
in
add
jmp
stos
loop
or
mov
fildl
loope
xchg
push
sub
add
out
add
dec
adc
mov
inc
add
xor
add
add
xor
mov
clc
repnz
nop
cld
jae
jmp
xor
cmc
loop
pop
push
mov
xchg
ret
mov
add
push
mov
xchg
ret
jne
add
add
jbe
inc
add
add
inc
add
mov
add
nop
nop
cld
jae
es
add
dec
pusha
clc
repnz
nop
cld
jae
xor
fs
push
push
mov
xchg
ret
add
add
mov
clc
repnz
nop
cld
jae
add
add
pop
clc
repnz
nop
cld
jae
add
in
loop
add
sub
icebp
inc
add
lea
add
clc
repnz
nop
cld
jae
add
mov
fldenv
clc
repnz
nop
cld
jae
add
add
jae
mov
clc
repnz
nop
cld
jae
imul
adc
mov
nop
leave
jmp
xor
xor
fwait
xchg
clc
repnz
nop
cld
jae
add
add
add
in
test
push
mov
nop
leave
jmp
ljmp
add
add
repnz
nop
cld
jae
rolb
add
add
clc
repnz
nop
cld
jae
add
outsl
add
jmp
xor
clc
repnz
nop
cld
jae
jle
sub
nop
nop
cld
jae
ja
add
add
add
clc
push
push
mov
xchg
ret
imul
jl
es
add
clc
repnz
nop
cld
jae
mov
add
mov
push
mov
xchg
ret
add
bnd
add
add
clc
repnz
nop
cld
jae
add
lahf
add
repnz
nop
cld
jae
add
enter
imul
push
aam
add
add
add
mov
push
mov
nop
leave
jmp
pusha
push
add
push
mov
nop
leave
jmp
jne
addl
bound
mov
push
mov
xchg
ret
jne
add
jmp
sub
jae
push
mov
xchg
ret
push
sbb
add
pop
clc
repnz
nop
cld
jae
mov
add
pop
add
jmp
add
mov
add
add
lods
add
nop
nop
cld
jae
add
add
xor
icebp
repnz
adc
repnz
nop
cld
jae
sub
add
fisttpll
nop
nop
cld
jae
add
jmp
add
lcall
nop
nop
cld
jae
add
stos
mov
shr
clc
repnz
nop
cld
jae
add
lea
clc
repnz
nop
cld
jae
jl
ljmp
and
clc
repnz
nop
cld
jae
mov
add
shlb
jg
clc
repnz
nop
cld
jae
add
in
add
loop
pop
clc
repnz
nop
cld
jae
lods
cmp
add
sti
repnz
xchg
mov
or
clc
repnz
nop
cld
jae
mov
sbb
add
addl
add
push
mov
xchg
ret
add
fiaddl
add
ds
clc
repnz
nop
cld
jae
add
pop
push
notl
in
nop
leave
jmp
cmp
sti
mov
js
clc
repnz
nop
cld
jae
xchg
and
loop
repnz
add
ror
inc
add
push
dec
mov
clc
repnz
nop
cld
jae
enter
mov
adc
add
add
mov
jmp
add
add
jg
mov
clc
repnz
nop
cld
jae
add
scas
mov
clc
repnz
nop
cld
jae
enter
jno
xor
clc
clc
repnz
nop
cld
jae
fs
in
ljmp
clc
repnz
nop
cld
jae
loop
add
lea
pop
out
mov
push
mov
nop
leave
jmp
jl
jno
add
repnz
nop
cld
jae
add
xor
aaa
popa
add
mov
push
jmp
add
shl
add
add
xchg
mov
add
test
loop
clc
repnz
nop
cld
jae
mov
mov
clc
repnz
nop
cld
jae
add
pop
incb
inc
fildl
xchg
ret
and
xor
addb
les
lcall
mov
xchg
ret
add
add
sub
nop
nop
cld
jae
add
jle
loop
decl
nop
nop
cld
jae
jae
add
and
add
mov
es
repnz
nop
cld
jae
jmp
jno
add
push
push
mov
nop
leave
jmp
add
fiaddl
ja
mov
test
xchg
add
add
test
add
ret
clc
repnz
nop
cld
jae
add
popa
add
add
adc
add
clc
repnz
nop
cld
jae
add
cmc
xchg
add
clc
repnz
nop
cld
jae
mov
lods
cmp
push
mov
xchg
ret
add
add
add
es
mov
clc
repnz
nop
cld
jae
mov
mov
jbe
cmp
push
mov
nop
leave
jmp
popa
add
adc
repnz
nop
cld
jae
loop
jo
mov
pushf
mov
push
mov
xchg
ret
pusha
pusha
add
in
add
dec
lea
push
mov
xchg
ret
add
add
add
mov
or
clc
repnz
nop
cld
jae
jle
in
call
push
mov
xchg
ret
repnz
and
addl
popa
clc
repnz
nop
cld
jae
add
cmp
subl
or
repnz
nop
cld
jae
add
add
pusha
and
rol
push
mov
nop
leave
jmp
add
popa
iret
push
clc
repnz
nop
cld
jae
add
add
jmp
add
push
mov
cmp
add
cli
fcomps
faddl
add
inc
aaa
fstpt
clc
repnz
nop
cld
jae
add
add
in
nop
leave
jmp
add
lea
lods
orl
nop
cld
jae
outsl
add
sti
rolb
add
sti
add
add
in
nop
leave
jmp
cmp
add
xchg
add
je
clc
repnz
nop
cld
jae
jl
lahf
pop
mov
clc
repnz
nop
cld
jae
mov
add
fisttpl
nop
cld
jae
add
add
jo
mov
cltd
ret
add
add
add
dec
enter
add
stos
mov
clc
repnz
nop
cld
jae
lods
push
xorl
clc
repnz
nop
cld
jae
add
mov
mov
clc
repnz
nop
cld
jae
aaa
add
add
repnz
nop
cld
jae
add
imul
clc
repnz
nop
cld
jae
add
mov
add
pop
jae
in
nop
leave
jmp
xchg
jmp
div
push
mov
nop
leave
jmp
add
es
add
in
addb
mov
cld
jae
addl
sti
mov
pop
test
push
mov
nop
leave
jmp
xor
popa
add
mov
jne
push
mov
xchg
ret
jl
add
add
cmc
pop
push
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
lods
lods
jmp
in
add
aaa
pusha
add
push
imul
nop
nop
cld
jae
jae
jno
in
mov
clc
repnz
nop
cld
jae
mov
inc
add
dec
call
clc
repnz
nop
cld
jae
sub
and
clc
repnz
nop
cld
jae
add
jl
mov
mov
clc
repnz
nop
cld
jae
mov
add
inc
jp
push
mov
nop
leave
jmp
es
mov
in
nop
leave
jmp
sub
add
rolb
mov
add
sti
add
add
add
add
adc
repnz
nop
cld
jae
add
jmp
add
add
sub
add
ror
add
push
push
mov
xchg
ret
cmp
jo
jne
add
cwtl
movzwl
clc
repnz
nop
cld
jae
jno
add
jne
clc
repnz
nop
cld
jae
add
repz
add
mov
clc
repnz
nop
cld
jae
mov
sbb
loopne
add
add
repnz
push
mov
pop
jmp
add
adc
adc
add
dec
push
clc
repnz
nop
cld
jae
popa
jne
add
push
sub
push
mov
nop
leave
jmp
add
repnz
add
mov
push
mov
nop
leave
jmp
add
add
enter
clc
repnz
nop
cld
jae
add
sub
cmpw
push
mov
nop
leave
jmp
add
add
clc
repnz
nop
cld
jae
outsl
add
add
negb
mov
nop
leave
jmp
lahf
add
add
add
inc
stc
push
clc
repnz
nop
cld
jae
popa
mov
pop
dec
add
clc
repnz
nop
cld
jae
add
jae
add
pusha
add
repnz
nop
cld
jae
add
add
jmp
enter
add
jl
add
addl
nop
cld
jae
xchg
ljmp
test
clc
repnz
nop
cld
jae
add
push
mov
add
push
mov
nop
leave
jmp
add
mov
add
mov
nop
leave
jmp
mov
cltd
pop
xor
nop
nop
cld
jae
add
add
outsl
sub
mov
add
mov
xchg
ret
jmp
fs
add
nop
nop
cld
jae
add
add
add
push
mov
xchg
push
xchg
jmp
loope
xchg
and
sbb
pop
clc
repnz
nop
cld
jae
jmp
mov
add
popa
clc
repnz
nop
cld
jae
addl
add
xor
push
mov
xchg
ret
add
add
mov
popf
mov
push
mov
nop
leave
jmp
jno
add
jae
jl
sti
mov
push
mov
nop
leave
jmp
cmp
in
es
stc
push
mov
nop
leave
jmp
xchg
jle
addr16
call
clc
repnz
nop
cld
jae
fs
cmp
repnz
nop
cld
jae
mov
add
add
pushf
je
push
mov
nop
leave
jmp
xor
mov
jg
dec
imul
cld
jae
add
add
jg
popa
add
mov
xchg
ret
mov
add
shlb
add
push
mov
nop
leave
jmp
add
shlb
mov
add
clc
repnz
nop
cld
jae
sub
outsl
ja
pop
mov
mov
nop
leave
jmp
add
jl
add
lods
jp
es
in
nop
leave
jmp
jne
sub
imul
nop
cld
jae
lahf
push
clc
repnz
nop
cld
jae
lea
imul
jmp
add
add
loop
and
add
repnz
ja
mov
clc
repnz
nop
cld
jae
outsl
mov
add
add
mov
nop
nop
cld
jae
imul
lcall
repnz
nop
cld
jae
lahf
add
add
add
add
cmpsb
dec
xor
sub
call
cmp
ret
add
xor
add
clc
repnz
nop
cld
jae
dec
add
add
add
mov
nop
nop
cld
jae
add
add
enter
jae
pushl
clc
repnz
nop
cld
jae
and
add
repz
jnp
add
lea
add
jae
ljmp
adc
mov
push
push
mov
xchg
ret
jmp
dec
jle
push
cmp
add
add
clc
repnz
nop
cld
jae
inc
add
lea
add
icebp
pop
mov
clc
repnz
nop
cld
jae
fisubl
add
repnz
nop
cld
jae
add
add
jmp
mov
push
mov
xchg
ret
add
jmp
mov
fldenv
popa
add
mov
xchg
ret
xchg
add
cmp
xchg
mov
lcall
inc
add
in
repnz
jmp
xor
mov
clc
repnz
nop
cld
jae
shr
add
sarb
dec
push
clc
repnz
nop
cld
jae
add
lods
loop
mov
in
fs
jmp
add
add
sbbl
nop
leave
jmp
jmp
jne
add
mov
add
nop
cld
jae
outsl
sub
add
push
push
mov
nop
leave
jmp
in
mov
cmp
push
add
and
clc
repnz
nop
cld
jae
add
add
sub
push
mov
add
imul
outsb
add
mov
add
add
push
mov
nop
leave
jmp
enter
xor
mov
mov
mov
clc
repnz
nop
cld
jae
loop
mov
xchg
pushf
mov
clc
repnz
nop
cld
jae
jne
add
add
add
jg
sub
add
add
add
jle
add
jmp
add
add
clc
repnz
nop
cld
jae
add
add
imul
repnz
nop
cld
jae
add
stos
add
xor
push
mov
nop
leave
jmp
add
stos
add
mov
cld
jae
add
jae
jl
xor
repnz
nop
cld
jae
mov
cmp
add
adc
mov
xchg
ret
loop
lods
add
mov
clc
repnz
nop
cld
jae
popa
add
sub
mov
clc
repnz
nop
cld
jae
ljmp
mov
nop
leave
jmp
add
imul
add
lcall
add
mov
mov
cmc
icebp
jns
repz
repnz
nop
cld
jae
mov
add
pusha
ljmp
push
mov
xchg
ret
jle
xor
add
test
mov
nop
cld
jae
add
xor
and
mov
je
clc
repnz
nop
cld
jae
add
mov
add
push
mov
xchg
ret
sub
jl
jae
mov
add
nop
cld
jae
add
loop
add
cmc
es
xor
mov
mov
push
mov
xchg
ret
add
inc
jmp
nop
cld
jae
add
add
nop
add
leave
fiaddl
xchg
ret
add
imul
jne
push
mov
xchg
ret
lahf
add
add
xor
add
repnz
nop
cld
jae
mov
add
mov
xchg
ret
add
add
add
push
mov
xchg
ret
jmp
in
popa
add
shlb
push
xchg
and
dec
push
mov
nop
leave
jmp
lods
jle
add
add
popa
add
scas
call
push
mov
nop
leave
jmp
add
and
mov
clc
repnz
nop
cld
jae
add
jae
popa
pusha
mov
xchg
and
nop
leave
jmp
and
add
add
xor
push
mov
nop
leave
jmp
jmp
add
xor
add
add
inc
add
repnz
add
jl
xchg
sbb
repnz
nop
cld
jae
add
ljmp
repnz
nop
cld
jae
add
add
in
xorl
add
repnz
nop
cld
jae
movb
xchg
repnz
clc
repnz
nop
cld
jae
mov
add
popa
add
repnz
nop
cld
jae
and
and
add
jp
clc
repnz
nop
cld
jae
add
jl
add
add
jmp
push
mov
nop
leave
jmp
add
add
cmc
add
push
inc
or
mov
nop
leave
jmp
add
mov
cmp
repnz
nop
cld
jae
jmp
add
add
mov
test
clc
repnz
nop
cld
jae
mov
jne
clc
repnz
nop
cld
jae
add
add
cmc
add
mov
xchg
ret
outsl
lea
add
and
add
mov
clc
repnz
nop
cld
jae
xor
add
enter
mov
nop
leave
jmp
add
add
pusha
ljmp
call
clc
repnz
nop
cld
jae
popa
repnz
mov
add
clc
repnz
nop
cld
jae
jl
mov
pop
clc
repnz
nop
cld
jae
add
add
fimull
add
and
mov
xchg
ret
add
rorb
push
mov
xchg
ret
add
mov
push
popa
or
jbe
clc
repnz
nop
cld
jae
add
and
ret
push
mov
xchg
ret
sbb
repz
aam
in
pop
clc
repnz
nop
cld
jae
xor
xchg
add
jno
add
mov
nop
leave
jmp
in
mov
in
cmc
add
sbb
clc
repnz
nop
cld
jae
add
xor
repz
repnz
nop
cld
jae
add
sti
add
inc
push
mov
xchg
ret
mov
addl
mov
mov
add
push
mov
nop
leave
jmp
in
popa
add
popa
cltd
in
add
clc
repnz
nop
cld
jae
mov
add
add
out
add
add
in
nop
leave
jmp
add
add
repnz
nop
cld
jae
jmp
add
add
rolb
mov
xchg
ret
xor
jmp
pause
add
xor
add
clc
repnz
nop
cld
jae
add
push
fisttps
nop
nop
cld
jae
add
jmp
jno
icebp
cs
push
mov
nop
leave
jmp
add
aaa
bound
mov
pop
sbb
mov
push
clc
repnz
nop
cld
jae
add
stos
test
push
mov
xchg
ret
add
in
mov
mov
repz
mov
nop
leave
jmp
addl
clc
repnz
nop
cld
jae
add
add
fisubrl
add
inc
aaa
je
imul
clc
repnz
nop
cld
jae
add
add
add
mov
xchg
ret
and
add
push
add
mov
nop
leave
jmp
sub
mov
mov
xchg
ret
jmp
add
add
add
sub
repnz
nop
cld
jae
cltd
add
mov
ss
imul
imul
add
je
adc
mov
adc
mov
add
jp
shl
dec
cmp
adc
mov
leave
sbb
mov
push
lret
mov
xor
and
mov
xor
add
out
xchg
add
popl
iret
aam
cmp
sbb
or
add
stos
dec
rorl
jmp
jecxz
sub
xor
data16
mov
xchg
adc
add
push
cmp
test
inc
mov
jg
xlat
jp
nop
add
dec
insb
das
jmp
jne
add
xchg
push
add
daa
pop
mov
mov
jmp
imul
iret
into
imull
xchg
int3
add
mov
scas
add
add
add
mov
add
push
in
add
xlat
jo
mov
inc
pop
sbb
std
dec
in
mov
cld
clc
ljmp
add
data16
add
and
mov
add
in
ja
jecxz
outsl
test
fstps
addb
push
fs
pusha
add
mov
sbb
mov
jno
cmp
sbb
test
pop
mov
cmp
mov
and
add
out
jmp
repz
sbb
enter
jecxz
test
add
je
sbb
inc
add
mov
push
adc
add
in
imul
addb
inc
fistpl
xor
mov
pop
popaw
test
lahf
lods
mov
jns
and
scas
pusha
add
mov
add
filds
and
dec
call
and
adc
mov
inc
cmp
js
jo
mov
cmp
mov
mov
popa
add
mov
pop
je
mov
fdivrl
lods
or
sub
mov
stos
dec
inc
sbb
inc
add
int3
stos
sub
push
inc
fcmove
out
jg
jmp
lods
fstl
in
cmpl
jp
jae,pt
in
push
push
ret
lods
int3
out
ljmp
and
lea
add
inc
xchg
popf
fwait
pusha
add
addb
data16
add
jb
mov
mov
sbb
icebp
scas
or
sub
mov
in
sub
pushf
rolb
mov
jmp
outsb
lock
mov
add
frstor
add
cwtl
cmp
sub
pop
jo
mov
addl
idivl
pop
jno
aaa
push
ja
fcomp
out
xchg
in
movsl
lods
inc
push
pop
out
pop
sub
add
test
xchg
xchg
pop
mov
jbe
rolb
mov
mov
add
pushf
pop
pushf
rolb
jp
inc
dec
mov
xor
mov
jne
pop
lret
addr16
out
sbb
subl
loopne
mov
xchg
out
push
test
cmp
fcmovb
arpl
enter
add
mov
add
mov
add
inc
aaa
mov
add
or
mov
rolb
mov
inc
sbb
outsb
jnp
xor
lea
add
fistps
jmp
jns
clc
lds
lds
add
mov
push
pop
xchg
jns
jo
mov
xchg
stc
mov
mov
mov
add
adc
mov
movsb
or
sbb
in
cmc
insb
shl
jns
cltd
adc
xchg
mov
mov
dec
jne,pt
sarl
dec
nop
add
sub
adc
mov
mov
nop
add
or
add
xor
lahf
mov
mov
in
inc
mov
rolb
mov
jp
movsb
rolb
cmp
and
cmc
int
ljmp
mov
arpl
pop
or
scas
loop
mov
nop
add
sbb
mov
sahf
mov
adc
mov
enter
data16
iret
xchg
dec
xchg
inc
add
vmread
sub
add
fstl
mov
je
stc
out
push
adc
xchg
jge
xchg
popf
in
jge
fwait
pop
or
mov
orl
pop
add
mov
pop
sub
test
add
jno
jle
addr16
jle
jne
lock
mov
insl
mov
and
add
and
mov
in
clc
xor
ss
fldcw
gs
rolb
xchg
mov
jmp
add
stos
fidivrs
ss
push
addb
stc
jge
xor
mov
mov
rolb
mov
dec
mov
mov
add
fcmovbe
mov
mov
inc
into
xlat
pop
fistpl
psllq
and
add
mov
adc
and
lret
push
adc
mov
bound
mov
mov
add
loopne
mov
pop
and
mov
inc
pop
xchg
xor
adc
mov
push
mov
mov
insl
cltd
mov
add
sbb
mov
mov
stos
mov
in
stc
mov
int3
imulb
jp
mov
sbb
xor
mov
std
out
mov
add
mov
mov
jmp
push
mov
popf
xor
imul
aaa
xchg
and
mov
add
ds
and
mov
mov
inc
push
xchg
popf
shll
mov
add
add
jg
call
mov
mov
fstpt
sub
add
add
repnz
pop
les
mov
in
outsb
add
push
mov
and
pop
dec
cmp
fnsave
mov
inc
nop
add
decl
popf
jmp
add
inc
sahf
stos
adc
jg
out
add
lahf
push
dec
adc
push
sub
lret
xorl
in
lcall
push
hlt
pop
sbb
add
xor
mov
cmp
add
adc
adc
push
int3
cmp
out
add
sub
cld
fldcw
enter
jle
into
fst
iret
sbb
add
add
imul
xlat
xchg
scas
aad
in
jge
rolb
jecxz
jo
mov
add
mov
in
insb
or
add
aaa
xchg
hlt
add
mov
xchg
inc
add
imul
fnstsw
scas
or
xor
mov
insl
cmpsl
push
ja
popf
shrl
push
pop
ficomps
sub
sbb
jg
test
jb
mov
push
xchg
pop
cmpsb
pop
mov
jecxz
lds
jne
aam
cmp
icebp
jae
data16
cmp
add
js
mov
ja
add
int3
pop
and
or
add
mov
sti
jns
inc
cmp
mov
ret
ss
xor
mov
xor
jo
mov
cmpsl
sahf
fwait
js
push
fisubl
or
push
push
loop
mov
lret
out
pop
cld
sub
daa
dec
loop
mov
jecxz
aaa
mov
cmpsl
or
dec
dec
jne
lods
cmp
add
inc
add
les
push
inc
add
xchg
leave
sub
add
mov
sub
rep
or
add
pusha
add
add
sub
jnp
jle
cmpsb
push
scas
lods
repnz
inc
mov
xchg
xchg
out
insl
xchg
in
mov
inc
jge
push
aaa
adc
mov
xor
or
lods
sti
add
ljmp
mov
mov
out
cmp
adc
inc
fidivrl
pop
call
push
lock
dec
clc
push
cmp
inc
jo
mov
aam
dec
inc
ret
lret
je
jg
lahf
das
scas
in
fdivl
sbb
sub
loopne
mov
xchg
pop
popa
lcall
scas
pop
mov
dec
stos
ret
push
fdivl
add
add
add
mov
ja
jecxz
cs
lds
out
sahf
jbe
add
test
mov
les
cltd
outsl
cld
xor
mov
xor
inc
mov
mov
add
mov
insb
std
jg
pop
fisubl
ret
les
sti
sbb
mov
jp
cmp
les
mov
das
xor
mov
cwtl
cmpsb
mov
pop
sub
cmc
cmp
and
mov
or
pushf
add
aam
notb
jle
add
mov
popa
pop
rcr
ret
enter
mov
arpl
add
faddl
pop
and
imul
add
das
jmp
mov
mov
lret
mov
add
adc
add
inc
or
jae
lods
lcall
mov
mov
dec
sti
imul
jecxz
add
pop
outsl
mov
xor
add
lret
orl
add
ljmp
xor
enter
popa
mov
jnp
xchg
popf
mov
push
repnz
jp
pop
mov
add
dec
cmpsl
and
add
negb
sub
mov
cmp
xchg
jg
rcrl
add
hlt
xor
xor
lds
pop
jecxz
jno
push
or
add
mov
add
adc
les
add
sub
inc
add
outsl
cmpl
jmp
and
mov
add
out
add
or
push
clc
sbb
sbb
in
jae
dec
inc
inc
pop
adc
mov
pop
gs
es
insl
repnz
add
add
imul
mov
sarl
pop
jecxz
addr16
jg
test
add
incl
fnstsw
scas
push
or
mov
call
das
cwtl
fwait
pop
addb
push
leave
xor
mov
cmpsb
into
imul
mov
xchg
cmp
add
stc
dec
cmp
mov
push
ljmp
mov
fildll
std
add
orl
insb
es
aad
and
ljmp
aas
movsb
mov
add
add
add
pop
xchg
jmp
add
jb
mov
sub
cmp
add
add
aas
xchg
rolb
mov
lret
mov
jno
add
test
sub
inc
pop
dec
pop
add
mov
add
test
popf
out
sbb
in
cmp
mov
add
sub
adc
cmp
and
mov
inc
lods
push
cltd
lods
lret
push
xor
pop
cmp
add
sbb
dec
mov
cwtl
and
scas
iret
out
push
lret
popl
add
leave
pop
mov
out
xor
in
cmc
sti
lea
repz
xchg
mov
add
mov
xor
mov
aam
clc
int3
loopne
mov
inc
inc
std
jp
inc
push
push
gs
aad
leave
pop
mull
sub
mov
aam
repnz
add
cmp
sub
add
addb
popf
bound
mov
mov
mov
add
mov
std
sub
lea
jno
cmpsb
mov
add
loope
pushf
jl
mov
int3
mov
add
loope
add
inc
add
add
or
je
xor
add
shll
leave
and
add
inc
add
ljmp
sub
into
in
xor
insb
mov
mov
adcl
mov
lock
aam
xchg
cld
mov
add
mov
andl
add
cmp
mov
add
dec
leave
inc
jle
mov
mov
jmp
mov
push
addb
adc
xlat
or
inc
add
add
jb
mov
rolb
addr16
out
loopne
mov
fsubrs
lods
push
pusha
add
pop
xor
mov
sub
fcmovnb
add
jl
fwait
test
lea
out
jl
inc
jmp
add
std
push
lds
mov
adc
mov
push
in
jae
add
xchg
sti
push
add
in
mov
bound
mov
lock
sub
add
cmpsb
inc
add
xor
mov
xlat
rolb
mov
js
stos
jbe
mov
add
or
fstpl
roll
mov
add
aad
notl
sub
adc
call
jno
test
lds
pushl
pop
cld
fisubrs
lea
mov
fnstsw
mov
add
testb
lret
outsb
enter
rolb
sub
adc
pop
xor
movsl
fwait
das
lods
inc
xchg
pop
pusha
add
pushf
mov
into
inc
inc
addb
mov
loop
mov
add
mov
fidivrl
ja
xor
mov
in
xchg
cmp
add
in
cmp
add
mov
addb
into
nop
add
push
sahf
test
mov
sub
into
mov
int
xlat
ret
xchg
imul
and
faddl
add
add
add
xchg
add
mov
popa
xor
mov
adc
int
inc
cmpsl
fs
mov
add
and
mov
and
or
jo
mov
pop
pop
cltd
jbe
das
ds
add
addr16
push
lods
fildl
add
jno
mov
lds
cs
mov
jns
add
jb
mov
fimuls
mov
mov
cmpsb
xchg
inc
in
jns
cmp
mov
lcall
or
lock
in
sbb
add
loope
add
repz
fdivl
mov
enter
arpl
fldenv
mov
add
std
rolb
mov
stos
les
add
cmp
add
mov
mov
xor
mov
fisubl
popa
fists
ret
sbb
add
add
cltd
cmpsb
mov
add
mov
sub
jnp
jp
das
cmp
insl
mov
out
add
and
push
push
mov
pusha
add
add
mov
popa
mov
xor
mov
mov
jnp
add
cli
mov
loop
mov
mov
mov
mov
mov
mov
imull
std
mov
outsl
inc
aad
cli
mov
sbb
sub
out
scas
movsl
adc
gs
lcall
sbb
and
pminsw
ja
hlt
jmp
add
dec
fidivl
add
add
in
mov
fwait
aam
cmp
psrld
mov
or
sti
out
rolb
mov
dec
cld
test
ret
add
cwtl
std
pop
add
mov
push
cmp
adc
mov
outsl
addl
cmpsb
fistpl
xlat
pop
sbb
xor
jge
mov
cmp
pop
adc
test
and
xchg
add
lcall
data16
mov
and
mov
pop
pop
sbb
add
mov
cmp
pop
inc
add
mov
mov
cli
xchg
fiaddl
mov
pop
mov
xchg
adc
data16
popa
adc
int3
xor
mov
std
pushf
push
jno
fbstp
mov
fucomip
mov
jns
icebp
pop
push
mov
out
mov
push
das
jp
xchg
add
inc
cmp
int3
or
imul
jmp
mov
stc
add
add
cmp
mov
mov
mov
call
out
or
mov
incl
pop
rolb
jp
push
call
inc
mov
jg
sbb
fdivrs
mov
lret
sub
mov
push
stos
daa
push
rolb
mov
mov
cmpsb
inc
add
add
icebp
jno
and
sbb
pop
mov
test
xlat
jns
xlat
sahf
xor
fucomi
xor
lea
and
mov
mov
push
add
lods
rolb
mov
sbb
stos
lcall
xor
mov
dec
imul
outsb
out
shrl
mov
fadd
aam
mov
add
loopne
mov
mov
mov
or
or
or
outsl
insl
jmp
je
repz
rcll
insb
mov
adc
mov
test
add
xchg
mov
jp
adc
mov
push
outsl
jb
mov
mov
xchg
dec
addl
cltd
adcl
jecxz
add
cmp
inc
add
mov
lcall
adc
mov
add
add
push
xchg
rolb
loop
mov
mov
push
mov
sbb
xchg
mov
push
add
clts
data16
inc
push
add
xchg
add
lds
or
mov
iret
ret
inc
and
mov
das
ret
adc
mov
xchg
dec
jnp
dec
aaa
shll
push
lcall
fsubs
out
movsl
js
ss
mov
in
adc
int3
and
sbb
add
mov
dec
scas
daa
call
mov
mov
fwait
xor
int
push
add
lea
rolb
in
mov
addb
xor
add
xchg
ds
mov
hlt
cwtl
aam
aas
mov
out
add
mov
loopne
mov
cld
fidivl
add
add
mov
lcall
dec
stos
rolb
mov
dec
adc
mov
hlt
xchg
add
nop
add
mov
jl
add
xchg
fwait
xchg
mov
ljmp
mov
mov
push
test
ret
js
jno
adc
mov
cmpl
movsb
imul
imul
aaa
fistl
insl
cmp
jecxz
cmp
scas
sbb
dec
call
mov
mov
mov
ret
pop
pop
fisttpll
add
xchg
add
das
lock
mov
add
pop
mov
aad
enter
sub
lea
aam
xor
add
fadds
aad
add
mov
lret
adc
adc
xor
mov
outsb
jns
sbb
sub
xor
mov
xchg
rolb
xor
ds
add
push
lods
pop
movsl
daa
fildll
mov
xchg
rolb
mov
aas
ds
jmp
in
in
movsl
aas
jmp
in
lock
fisttpl
jmp
mov
pop
scas
addb
lock
mov
mov
mov
lods
adc
add
mov
mov
cli
sahf
es
aas
gs
inc
xchg
dec
mov
xchg
inc
movsl
add
mov
push
add
sub
or
popa
ret
add
mov
add
lods
add
jp
or
daa
sbb
and
cld
in
dec
rcll
aad
pop
mov
and
mov
add
mov
pop
jne
jecxz
jbe
fld
push
add
ror
sub
mov
fmul
push
lods
mov
mov
cwtl
cltd
adc
mov
and
lahf
pop
das
xor
add
loop
mov
add
or
aam
inc
and
sbb
stc
cmp
sub
cmp
sub
rcl
mov
test
sub
fs
cltd
mov
mov
add
fidivl
push
add
data16
mov
inc
add
sbb
mov
mov
add
mov
pop
and
add
mov
arpl
mov
or
mov
and
mov
adc
mov
cld
lcall
std
jbe
push
repnz
jb
mov
daa
inc
add
icebp
push
je
cmpsl
mov
insl
jne
imul
aaa
popa
jae
into
call
sub
xchg
xchg
std
dec
stc
mov
sti
sub
add
and
push
xchg
ds
repz
dec
in
cld
lret
addr16
and
mov
jbe
xchg
sub
sbb
or
rolb
mov
add
mov
aad
and
andl
mov
int
push
push
repnz
push
add
add
sub
cld
mov
xchg
insb
divps
outsl
cmpsl
push
fstl
rolb
or
add
inc
jmp
mov
push
add
add
nop
add
push
sbb
adc
stc
push
add
mov
add
add
mov
inc
int
lahf
jbe
aaa
lret
addb
cmpsb
xchg
jecxz
decl
pop
test
add
scas
xor
mov
mov
sub
in
repnz
outsl
lcall
add
add
fcmovbe
js
daa
cmpsb
sub
ds
inc
rolb
aam
mov
sbb
mov
or
cld
ss
mov
sub
std
cwtl
add
add
push
mov
mov
add
popa
scas
insb
orl
cmpsb
dec
das
mov
jne
ljmp
mov
mov
cmp
cltd
sti
addr16
add
and
sbb
sub
rol
push
mov
scas
loop
mov
int3
xchg
mov
add
popf
push
mov
mov
mov
pop
js
or
jmp
cmp
aas
data16
mov
add
rdmsr
add
sub
sbb
push
add
add
jnp
jnp
ljmp
xchg
add
or
cmp
fadds
push
inc
hlt
jo
mov
pop
fstps
dec
mov
dec
in
add
adc
mov
add
inc
add
pop
stos
sub
add
add
inc
mov
mov
cmp
mov
add
mov
add
mov
adc
xor
mov
mov
and
or
cmp
dec
insb
js
stc
dec
pop
call
cmpsl
mov
mov
push
sbb
sahf
or
add
cli
sbb
push
cld
es
ret
push
pop
arpl
mov
out
faddl
mov
leave
pop
mov
mov
fsts
imul
or
add
mov
add
nop
add
cmp
inc
xchg
int
pusha
add
insb
pusha
add
scas
cmc
lret
js
add
test
les
sub
addb
daa
test
dec
lock
jmp
add
sbb
mov
call
lahf
scas
and
jnp
sub
sti
fidivrl
add
add
add
pop
add
jl
rolb
aad
add
sbb
xchg
sbb
add
add
add
lea
dec
lds
shll
push
mov
lds
lcall
inc
adc
cld
sahf
jge
inc
add
stos
je
dec
dec
rorl
hlt
pop
jmp
rolb
mov
je
imul
pop
and
pop
in
pop
add
mov
data16
ret
mov
or
jecxz
add
mov
push
inc
push
add
dec
xor
mov
dec
mov
inc
lods
jbe
xor
lret
jne
addb
outsb
lods
stos
push
cwtl
sbb
jne
mov
dec
in
leave
mov
enter
loop
mov
mov
mov
enter
shll
add
mov
add
lods
ja
pop
push
add
add
lock
into
imul
mov
jl
addb
adc
xorl
mov
data16
popf
aam
out
pop
addl
mov
mov
xlat
cmc
call
mov
aaa
push
aam
cwtl
stos
fistpl
loope
push
mov
mov
add
add
pushf
jb
mov
mov
push
lahf
add
mov
add
mov
push
add
mov
push
push
xchg
dec
aaa
jle
pop
gs
push
add
add
les
mov
sub
repnz
sub
call
jge
inc
jle
cltd
mov
add
lods
sbb
mov
lea
add
aas
popa
xor
mov
cmp
call
inc
sbb
add
int
insb
dec
nop
add
aad
hlt
pushf
dec
sbb
inc
out
push
mov
dec
fists
mov
test
xchg
sub
jg
add
dec
and
sbb
outsl
fnsave
dec
in
push
mov
mov
es
ret
fwait
ss
popf
xchg
imul
xchg
cltd
pop
lcall
mov
hlt
stos
cltd
xor
inc
xchg
inc
mul
add
mov
enter
jb
mov
add
movsl
add
fcomi
add
ds
mov
popa
xorl
push
inc
add
in
push
int
push
mov
jmp
out
mov
cwtl
pop
pop
es
rolb
mov
add
adc
mov
outsb
or
out
int
mov
rolb
mov
test
xor
mov
enter
mov
hlt
jg
lret
stos
inc
addr16
xor
sahf
out
lods
xor
xor
mov
jnp
lock
adc
mov
hlt
cs
into
push
add
leave
mov
push
sub
jo
mov
stc
adc
mov
adc
lahf
sub
add
sbb
sbb
mov
stc
jg
mov
lahf
das
pop
cmp
jne
cwtl
mov
sbb
fs
jns
fsubrp
arpl
or
inc
add
sub
mov
in
push
add
mov
subl
clc
test
dec
fs
dec
addr16
add
je
clc
cmp
ja
lods
jae
das
sub
rolb
mov
mov
cmp
sahf
jg
repnz
mov
push
testl
adc
push
sar
cmpsb
cmp
mov
jecxz
fs
or
push
add
mov
aas
dec
or
add
add
add
mov
mov
inc
add
cs
int3
addb
fcoml
push
ficomps
pop
mov
mov
add
sbb
dec
stos
aas
push
movsb
inc
pop
sbb
and
mov
mov
adc
mov
sub
xorl
fisubs
movsl
or
xor
cmp
jmp
fildl
imul
shll
xchg
add
jne
xchg
jp
data16
sbb
imul
repz
fdivrl
sbb
xor
sarl
sbb
mov
xchg
xor
mov
jb
mov
fidivs
jb
mov
mov
add
xlat
pop
push
insb
subl
fildl
cmp
testb
enter
sub
adc
popf
or
xor
lahf
mov
add
decb
mov
or
add
add
mov
rolb
mov
dec
or
sub
add
mov
mov
xor
xchg
mov
pop
adc
or
add
add
mov
movsb
fcmovnu
sbb
stos
add
add
mov
add
stos
clc
xchg
mov
mov
sbb
rcll
mov
add
mov
xchg
cmp
mov
add
mov
repnz
add
mov
fidivrs
xchg
into
lods
and
or
jecxz
fsubrp
jp
push
in
sbb
add
int3
lods
jle
pop
stos
testl
dec
sub
push
fadd
sarl
jns
adc
test
mov
cs
pop
pop
or
jne
inc
fdecstp
aas
sahf
xchg
xchg
rolb
mov
cmp
bound
mov
mov
adc
add
add
pop
repnz
mov
sub
add
mov
hlt
or
aaa
pop
add
cs
popf
f2xm1
add
out
xor
mov
fistl
add
mov
xor
mov
mov
mov
cmpsb
push
sbb
cmp
push
jle
dec
push
movsl
adcl
push
lret
sbb
lahf
ljmp
leave
and
mov
addr16
add
dec
adc
lahf
xchg
cmc
in
rep
daa
testb
add
sub
inc
cmpsl
jae
enter
aas
clc
cmp
sbb
xchg
cli
sti
inc
sub
shll
add
aaa
int
addb
inc
dec
dec
adc
test
inc
icebp
fisubl
ljmp
xchg
inc
mov
add
mul
adc
or
clc
frstpm(287
dec
or
add
add
jne
xchg
add
mov
add
mov
mov
loopne
mov
and
xchg
push
fldl
lcall
jae
sub
add
add
clc
dec
or
xchg
inc
push
dec
xchg
xchg
pop
xlat
xchg
xor
filds
jb
mov
or
rolb
mov
add
mov
and
mov
adc
xchg
xchg
push
xor
das
arpl
adc
add
mov
mov
adc
out
jae
jnp
add
loope
xchg
subl
push
or
mov
mov
mov
addb
xor
add
call
add
push
arpl
xchg
and
xor
mov
int
fldt
lahf
mov
ljmp
xor
out
dec
jle
or
add
loope
xor
inc
pop
jp
in
push
add
imul
add
mov
lock
jne
int
hlt
pop
jb
mov
add
call
or
mov
mov
test
and
mov
cmp
sbb
fsubrs
adc
loope
lock
fcompl
or
pusha
add
add
jne
fsubs
pop
or
add
jp
rcrl
mov
add
add
ret
cmc
inc
add
hlt
ds
xor
pop
add
and
mov
push
idivl
add
sub
add
in
les
push
fistps
mov
js
add
ja
xorl
mov
adc
mov
xor
popf
add
movl
lahf
jle
imul
mov
mov
push
xor
mov
pop
out
scas
lea
cld
scas
fcmovu
repnz
sub
mov
mov
aam
jp
jb
mov
dec
repnz
xor
mov
add
sahf
mov
xor
sub
add
mov
push
jno
test
inc
in
mov
push
stos
aad
cltd
fisttps
sub
pop
stos
es
mov
sbb
add
fs
add
shrl
fs
fwait
mov
or
pop
inc
add
fldenv
movsb
mov
mov
mov
icebp
fnstcw
mov
jbe
leave
push
jne
jecxz
clc
cld
iret
call
cmc
xor
in
enter
icebp
out
int
add
nop
add
mov
addb
lods
test
dec
sub
mov
xchg
mov
xor
mov
add
aad
mov
add
mov
add
or
aam
inc
jnp
out
in
xlat
insb
and
add
add
pop
int3
or
imul
adc
dec
leave
push
sbb
jbe
cmpsl
mov
dec
lods
xor
add
ret
push
loop
mov
add
cmpsl
adc
add
rolb
mov
or
and
lcall
xchg
test
sbb
or
inc
add
loopne
mov
add
daa
je
data16
cmc
pop
sbb
out
cs
sub
xchg
add
lock
sub
add
push
enter
lahf
pop
sub
mov
mov
and
mov
and
mov
sbb
add
addb
sbb
sti
mov
test
add
xchg
aaa
or
sbb
push
mov
xchg
jle
xchg
dec
sub
sar
cmp
pop
or
jne
xor
repnz
xor
mov
xchg
icebp
mov
sbb
outsb
mov
ret
jp
mov
jns
clc
sbb
lret
fmuls
sbb
add
lret
mov
test
and
clc
pop
jg
lret
rolb
mov
popa
repz
mov
ret
xor
mov
loop
mov
xor
aad
or
mov
js
add
lret
adc
out
adc
mov
cmp
cmp
insb
iret
hlt
hlt
xchg
ret
test
mov
lret
mov
cmc
repz
movsl
addb
sbb
xchg
mov
sbb
test
push
mov
andnps
cli
in
xor
add
mov
add
xchg
rolb
fisttpl
pop
repnz
xor
mov
nop
add
mov
push
jl
sbb
mov
jne
dec
pop
cmp
push
imul
cmpsb
addb
lahf
addb
shll
mov
jmp
les
mov
lock
adc
mov
mov
sub
jae
push
add
or
pop
ret
mov
add
fstpl
notb
pop
mov
mov
js
cmp
add
sub
xchg
or
mov
call
dec
dec
repz
clc
jne
out
adc
daa
jl
test
sbb
add
jnp
cli
in
inc
add
ds
push
enter
cmovbe
ss
mov
in
sbb
cmp
cltd
push
mov
push
xor
les
out
sub
aad
add
mov
add
add
jne
add
ret
addr16
loopne
mov
pop
sub
sahf
call
in
or
jge
rolb
mov
add
xchg
mov
insl
adc
xor
mov
add
mov
sbb
mov
lock
mov
jmp
cmpl
mov
cmp
insb
pop
dec
js
in
xchg
jle
adc
test
mov
xchg
add
dec
fcoml
add
adc
loopne
mov
jmp
xchg
inc
and
mov
or
int3
push
das
mov
mov
cmp
rolb
cwtl
push
add
add
out
rorl
scas
dec
fmull
or
add
imul
mov
sti
outsl
mov
test
rcr
add
xchg
popf
in
push
add
imul
call
sahf
inc
or
mov
push
rolb
mov
sbb
add
and
mov
movsl
flds
shll
push
adc
mov
add
mov
xchg
bound
mov
add
mov
inc
add
add
int3
out
je
add
movq
cwtl
xchg
sub
add
mov
mov
jl
rolb
mov
xor
mov
add
lcall
jp
cmp
push
ds
in
pusha
add
mov
movsl
js
mov
ds
std
dec
clc
pusha
add
add
lret
mov
adc
mov
sub
add
fsubrs
xor
enter
jmp
push
out
pop
fcmovb
addr16
clc
sbb
push
add
mov
add
add
mov
add
fwait
or
add
cmp
add
push
add
enter
sub
inc
cmp
stos
ja
fimuls
arpl
pop
in
inc
add
test
scas
inc
jnp
hlt
adc
mov
pop
xor
mov
movsl
or
add
icebp
push
pop
mov
or
roll
cmp
dec
int3
pop
les
xchg
loopne
mov
pop
das
test
rolb
xor
mov
mov
add
xor
js
or
call
std
leave
addb
cmp
add
push
ljmp
add
mov
xchg
add
mulb
inc
lea
test
and
cmp
out
mov
imul
fsubrs
pop
fstpt
and
andl
add
lret
dec
imul
fisubl
add
leave
fistps
lcall
xchg
adc
lcall
rolb
mov
mov
cmpsl
sub
add
mov
push
sub
pop
and
mov
lods
sub
jmp
out
insb
mov
add
lock
sub
add
fidivl
sub
mov
add
fnstenv
outsl
out
cmp
jg
call
add
outsb
mov
repz
mov
lahf
dec
add
mov
add
add
jmp
pop
out
xor
mov
mov
and
mov
in
xchg
imul
dec
inc
cmp
push
add
inc
xchg
add
mov
scas
xchg
pop
addl
xchg
push
mov
mov
mov
xchg
daa
jb
mov
addr16
and
add
imull
pop
sti
and
push
test
adc
mov
push
outsl
cmp
ds
add
cld
and
mov
ss
mov
jmp
push
add
jno
add
addb
and
mov
push
ja
movsb
push
inc
and
mov
sbb
pusha
add
mov
cmc
std
and
adc
lret
addb
xor
xlat
call
mov
insb
add
mov
std
xor
aam
mov
pop
adc
fdivrs
add
mov
or
pop
lods
dec
ret
mov
mov
add
pushf
clc
mov
mov
sub
nop
add
mov
and
mov
fmull
std
subl
rolb
jae
jo
mov
inc
push
pop
div
aad
ljmp
and
mov
add
push
sub
jne
or
int3
lods
ret
fisttpll
add
mov
leave
mov
jmp
inc
add
add
fcmovne
jb
mov
in
orl
mov
mov
stc
flds
add
inc
add
fwait
jnp
jae
outsl
xor
add
jge
jbe
cwtl
cmpsb
and
inc
add
rcrl
xor
dec
inc
adc
mov
stos
mov
dec
nop
add
mov
push
xchg
cmpl
mov
mov
js
sub
push
add
jg
push
cwtl
cmp
jmp
xor
push
rolb
mov
pop
mov
in
add
cmpsl
leave
push
arpl
xchg
js
jbe
outsb
outsb
push
mov
push
mov
mov
mov
add
rolb
mov
adc
mov
add
cmpsl
xor
sahf
mov
push
lcall
rolb
sub
pop
xor
mov
pop
inc
or
scas
push
scas
and
mov
rolb
mov
and
mov
adc
xchg
lret
fdivs
push
fsubl
mov
movsl
mov
add
arpl
ja
imul
scas
jmp
xchg
inc
lret
shll
mov
vmaxsd
rolb
mov
push
out
mov
jle
or
or
repnz
js
imul
mov
mov
push
xchg
rolb
mov
out
sbb
bound
mov
in
lcall
fcoms
mov
jge
push
insb
ret
loop
mov
ret
enter
jae
in
xorl
mov
mov
dec
sbb
mov
mov
cmp
xor
mov
dec
adc
xchg
jb
mov
pop
dec
adc
test
sub
mov
push
or
jmp
fistpll
add
jo
mov
add
stos
xor
jmp
stos
test
add
jb
mov
adc
add
out
movsl
out
bound
mov
pop
xor
mov
pop
aas
stc
xor
mov
mov
sub
mov
add
dec
adc
cli
leave
in
add
and
xor
lahf
adc
mov
add
mov
cmp
xor
jbe
negl
push
jbe
gs
lods
enter
and
mov
jo
mov
inc
xorl
and
mov
lock
push
push
adc
mov
add
xchg
out
daa
fidivrl
dec
inc
fwait
or
movb
mov
ljmp
lret
jns
daa
mov
lret
xor
mov
test
clc
mov
add
push
push
adc
mov
xchg
cmp
testl
mov
add
ja
add
push
dec
sub
or
adc
ret
shll
push
xor
add
nop
add
xor
sarl
mov
add
jb
mov
xchg
mov
icebp
pop
mov
mov
add
enter
add
shl
lahf
or
scas
out
add
cmpsl
xor
mov
inc
mov
int3
sub
mov
inc
fidivl
lret
mov
and
mov
fwait
sub
add
mov
pop
aam
in
dec
outsb
adc
enter
fmul
xchg
add
add
or
mov
pop
push
or
and
add
jl
dec
popl
xchg
mov
rolb
mov
insl
cmp
mov
rcr
mov
pop
mov
cvtps2pi
jge
inc
add
fdivs
sbb
xor
mov
cmp
outsb
mov
pop
dec
aam
add
add
sub
push
xchg
int3
scas
lock
jmp
add
nop
add
jp
xchg
pusha
add
mov
add
xchg
jp
sbb
xchg
sti
dec
xor
mov
cmpsb
aam
ret
push
add
loop
mov
add
stos
cwtl
mov
inc
ficomps
dec
adc
pop
pop
inc
add
jne
pop
mov
dec
jecxz
xchg
mov
cmp
xchg
pusha
add
int
aad
lods
add
jmp
xor
mov
add
add
dec
sub
mov
mov
add
add
mov
sbb
cmp
sub
add
pop
hlt
jecxz
mov
lret
rolb
mov
aad
pop
mov
repz
xor
addb
mov
xor
mov
xchg
add
inc
test
adc
mov
cmpsl
in
mov
add
or
mov
fnstcw
xlat
xchg
add
add
mov
fists
fdivrs
jnp
dec
mov
add
add
add
test
loopne
mov
xchg
mov
imul
push
xchg
cmp
add
push
jle
add
xlat
adc
ret
out
pop
or
out
cmc
bound
mov
add
rcrl
xchg
or
add
inc
inc
adc
pop
in
cld
push
mov
mov
mov
into
xor
clc
fldl
add
cmp
add
jl
mov
jns
call
add
scas
sbb
fcom
test
add
aam
xchg
adc
push
cmpsb
mov
push
movsl
addb
cmp
in
ret
emms
std
and
lcall
mov
popa
push
xchg
aam
and
mov
inc
xor
mov
push
add
jne
inc
add
dec
ljmp
movsl
std
inc
outsl
filds
sub
mov
xchg
popf
inc
andl
mov
inc
add
pop
hlt
and
mov
popf
ficompl
xor
imul
mov
push
mov
pusha
add
xor
xor
sub
add
sbb
push
and
addb
fadds
dec
jp
add
add
sub
push
mov
jno
jo
mov
std
add
mov
outsb
push
int3
push
sub
pop
lds
pop
push
add
into
jo
mov
xchg
mov
jl
out
jecxz
push
inc
adc
dec
mov
mov
mov
cmpsb
cli
pop
int3
mov
add
les
mov
push
adc
jle
imulb
mov
and
or
addb
adc
lods
sbb
mov
test
inc
sub
adc
add
push
cmp
in
rolb
mov
cmp
add
gs
add
xor
test
add
add
mov
sub
mov
xor
mov
nop
add
inc
add
mov
add
jecxz
aad
add
push
ds
push
mov
mov
mov
add
mov
mov
int
dec
imul
aaa
loopne
mov
rolb
mov
aaa
mov
icebp
push
sub
aad
add
mov
sub
movl
aam
jl
cmp
cmpsb
mov
add
mov
ret
negb
pop
pop
jne
loopne
mov
aad
xchg
aam
sub
mov
inc
inc
add
psraw
lods
stos
bound
mov
xchg
push
addr16
sbb
and
int3
add
mov
push
test
fst
jne
cmp
or
add
mov
dec
and
mov
xchg
mov
outsb
mov
jecxz
mov
hlt
jns
jno
or
add
in
jle
adc
mov
mov
mov
xorl
push
rolb
mov
mov
push
inc
push
icebp
out
test
call
stc
jmp
pop
fwait
sub
int
sbb
add
mov
jecxz
test
mov
add
repnz
cmp
loope
add
aas
gs
enter
adc
sub
adc
xchg
pop
nop
add
ret
loopne
mov
or
sahf
lock
pop
inc
push
mov
frstor
dec
nop
add
cli
sbb
insl
das
rolb
mov
add
mov
add
add
mov
iret
xor
repnz
popa
or
pushf
or
xchg
xor
or
xchg
add
add
imul
insl
pop
push
in
pop
inc
sub
push
sar
rolb
mov
mov
mov
mov
sbb
add
mov
pop
ret
test
loopne
mov
insb
lahf
jmp
jbe
add
mov
icebp
and
mov
and
test
sbb
xchg
jmp
mov
scas
insl
mov
push
cwtl
pop
dec
xchg
add
mov
add
std
cli
mov
mov
popa
jp
jne
pop
jne
xor
imulb
xchg
pop
fyl2xp1
mov
add
gs
dec
cmp
test
fwait
mov
cltd
inc
lods
cli
lock
les
mov
fstps
add
inc
lcall
dec
mov
sub
pop
dec
addb
outsb
lahf
sub
lock
je
add
sbb
out
data16
dec
or
and
sbb
mov
mov
cmp
add
add
rcll
pop
leave
out
push
mov
add
xlat
addr16
mov
mov
add
dec
into
and
mov
add
test
sbb
daa
or
fbld
and
add
enter
mov
cmp
inc
add
xchg
loopne
mov
or
lea
push
mov
push
add
cmpsb
loopne
mov
and
les
fmulp
inc
or
in
les
mov
mov
add
add
jne
mov
addb
jno
mov
setg
or
xchg
rolb
mov
hlt
imul
rcll
cld
jno
cmp
jecxz
mov
mov
cmc
cmp
add
mov
add
lret
xlat
int
jge
jo
mov
mov
cmp
mov
add
movsl
jb
mov
mov
test
add
xor
mov
aaa
lock
sbb
and
add
add
add
cs
cmp
or
dec
mov
mov
mov
lods
cmp
and
adc
fwait
cmp
or
mov
push
addb
vmread
sarl
xchg
lock
xchg
xchg
add
aam
popf
sbb
sub
aad
pop
jns
cmp
mov
sub
out
es
or
and
cltd
rolb
mov
roll
push
add
xlat
mov
and
cmp
jns
xlat
jge
insl
cld
xchg
add
xlat
fldz
fnsave
outsl
imul
add
outsl
subl
lods
rcll
cs
adc
mov
or
lods
icebp
out
or
mov
mov
add
cltd
int
jecxz
xchg
movsl
push
adc
mov
dec
call
scas
fisttpl
into
or
cmpsb
cwtl
jnp
flds
jle
loopne
mov
jbe
inc
out
sbb
inc
mov
inc
es
pop
cmp
in
mov
rolb
mov
dec
jp
or
add
add
mov
iret
aam
or
sbb
out
js
cmp
pop
push
lretw
loop
mov
cwtl
imul
push
out
xchg
pop
aas
mov
lahf
aam
jge
cmc
xchg
jecxz
movsb
sbb
adc
mov
sub
add
dec
jmp
add
sahf
sbb
or
xor
cmp
xor
mov
add
dec
repz
mov
mov
or
mov
rolb
mov
insb
pop
repnz
lret
or
xchg
repz
rolb
mov
adc
mov
adc
push
add
push
push
mov
bswap
xor
mov
jmp
dec
cmp
clc
push
addb
ja
into
jge
loop
mov
add
les
mov
imul
lret
lret
xchg
mov
or
xlat
loope
mov
mov
arpl
inc
repnz
mov
lock
xor
movd
xchg
shrl
and
mov
mov
add
jg
test
xor
mov
cmpl
mov
cmp
mov
or
sub
fimull
fwait
out
or
mov
inc
jg
cmpsl
inc
jns
sbb
add
xchg
xchg
pop
incb
mov
fsubrs
aaa
adc
in
xchg
cmp
fs
stos
push
cld
jbe
rep
cld
scas
push
mov
pusha
add
fstpt
fcmovbe
adc
cmp
add
addb
adc
and
mov
in
xor
mov
int
dec
dec
stos
ficoml
sub
jmp
add
lods
push
jmp
imul
and
repnz
gs
xor
dec
cs
in
sub
cmp
int
sti
and
lret
push
xor
add
mov
push
push
mov
mov
mov
adc
imul
mov
add
mov
add
add
xchg
add
mov
add
sub
mov
sub
iret
lea
xor
rolb
mov
loopne
mov
add
mov
xchg
dec
jle
add
insb
and
xor
mov
xor
repnz
cmp
ret
cmc
aas
jmp
xor
sbb
xchg
cmp
movsb
adc
jns
xchg
scas
aas
mov
inc
mov
mov
xor
cwtl
ljmp
add
add
mov
mov
cmc
and
mov
add
mov
sbb
ret
sub
pushf
movsb
aaa
in
sbb
add
mov
adc
push
lods
enter
mov
sbb
add
mov
add
in
lret
mov
jns
fwait
push
dec
aas
dec
mov
sbb
dec
ret
icebp
jmp
or
xlat
push
fwait
xchg
insb
push
and
mov
scas
gs
jno
rep
mov
mov
push
push
sub
jb
mov
pop
stos
cmp
loop
mov
fs
cli
int
add
inc
add
aad
sbb
stc
mov
mov
inc
test
add
add
stc
fprem1
scas
mov
fcomps
gs
or
out
mov
mov
inc
sbb
rcl
xor
orl
sbbl
mov
rolb
cmp
sbb
mov
mov
icebp
dec
or
push
sti
stos
insb
js
add
sahf
js
jl
popf
mov
mov
jo
mov
addr16
pop
xchg
sub
scas
into
cmp
mov
mov
jecxz
inc
jbe
dec
dec
cwtl
jecxz
bound
mov
out
int
mov
mov
mov
fucom
fsts
ret
mov
jo
mov
pushf
stos
fisttps
rolb
mov
ds
adc
add
iret
fcom
add
addr16
push
addb
adc
mov
addr16
dec
movsl
aad
ljmp
mov
mov
dec
loope
add
pop
sbb
add
iret
ds
sbb
add
in
add
cmc
mov
out
fsub
out
xor
mov
sub
inc
fimull
loope
add
shll
sub
inc
bound
mov
bound
mov
dec
xchg
stc
ds
add
pop
sub
mov
in
in
pop
andl
add
add
sbb
and
enter
lods
and
mov
outsb
outsl
fcos
jecxz
mov
add
jle
mov
push
mov
daa
cwtl
ret
mov
xor
repz
push
or
addb
sbb
in
push
gs
loopne
mov
mov
test
adc
dec
jg
jbe
call
pop
add
sub
insl
rolb
stos
mov
inc
xchg
loop
mov
mov
cmp
add
inc
jae
arpl
mov
add
lds
insb
lahf
pop
les
mov
jecxz
imul
pop
das
and
mov
mov
fstpt
xchg
mov
fiadds
mov
je
sti
xor
mov
or
mov
std
xor
add
xchg
lcall
loop
mov
mov
leave
jo
mov
sahf
push
xor
or
cmpsb
es
add
adc
mov
addb
test
outsl
jo
mov
js
add
add
mov
ds
mov
sub
mov
sti
enter
mov
mov
push
sub
add
lcall
aad
pop
xchg
into
mov
scas
popa
scas
addb
sbb
add
jo
mov
add
jo
mov
fnsave
mov
sub
pop
ret
mov
cmpsl
and
mov
xchg
add
add
and
mov
and
stos
add
das
into
ret
jnp
pop
dec
push
add
stos
into
or
stc
pop
into
ljmp
filds
leave
ljmp
mov
adc
mov
jne
add
push
pop
push
add
pop
call
add
jg
addb
sbb
movl
sahf
xor
add
mov
mov
fs
mov
out
cmp
add
mov
pop
cmpsb
or
out
push
add
fdivrl
mov
dec
outsb
fiaddl
mov
mov
ss
fsub
es
add
add
hlt
ds
cltd
loop
mov
add
mov
add
outsl
in
ja
xor
shll
rolb
mov
dec
mov
and
mov
adc
add
popf
push
out
dec
mov
cmp
jg
mov
ja
in
dec
daa
and
adc
daa
cld
ret
jns
adc
add
mul
dec
jle
dec
push
xchg
add
mov
add
lods
push
xchg
add
int
cmp
jo
mov
mov
mov
add
jnp
dec
outsl
arpl
std
sbb
jmp
sub
std
add
repz
dec
dec
and
mov
add
out
test
mov
mov
mov
mov
std
jge
iret
mov
stos
inc
insb
cltd
jle
xor
mov
xlat
insl
rolb
mov
sbb
adc
add
mov
addr16
add
adc
mov
rolb
mov
ja
popl
mov
jg
out
adc
or
add
add
mov
pop
in
imul
add
stc
out
dec
roll
es
jg
mov
and
es
inc
cld
ficoms
inc
or
mov
xor
mov
add
add
pop
xchg
add
mov
jmp
gs
add
add
les
add
mov
mov
jl
sahf
mov
cmpsl
movsl
inc
jge
push
add
int3
adc
mov
pop
sbbl
lds
sub
adc
cmp
mov
lret
jns
add
data16
arpl
fdivrl
rolb
cmpsb
push
xchg
pop
enter
mov
mov
mov
xor
std
jmp
push
mov
mov
ljmp
push
inc
lods
or
push
push
pusha
add
ljmp
inc
add
insb
ret
jl
cmp
add
loop
mov
mov
mov
add
xchg
stc
mov
mov
gs
sbb
adc
mov
repnz
add
pop
add
mov
movsb
sub
xor
mov
mov
cld
hlt
mov
mov
mov
xlat
fwait
jle
fisubl
mov
xor
mov
out
lods
leave
enter
fdivrp
mov
mov
hlt
sti
ret
jmp
addr16
imul
out
sbb
mov
add
iret
divb
jmp
mov
inc
add
xor
scas
push
add
mov
jl
mov
je
pop
cmp
inc
xlat
scas
fwait
and
mov
ljmp
cli
and
cld
sub
add
cmc
dec
pop
dec
lret
adc
mov
aam
inc
into
fucomip
inc
mov
push
or
add
aaa
rcll
add
stos
mov
sti
int3
lods
mov
out
and
mov
add
scas
push
pop
xchg
add
add
mov
inc
mov
data16
add
hlt
dec
arpl
cmp
mov
add
ja
add
call
iret
cld
pusha
add
pushf
dec
loop
mov
mov
testb
jo
mov
fbstp
xor
repnz
test
adc
add
mov
iret
inc
mov
push
aaa
jmp
rolb
mov
pop
pop
insl
shll
mov
add
mov
push
sub
fwait
in
and
jne
loopne
mov
inc
sbb
xor
xchg
dec
or
mov
ljmp
add
dec
rcll
mov
inc
add
cmpsl
fisubl
mov
mov
imul
and
mov
push
ja
cli
or
je
add
mov
cmp
jl
test
out
add
jecxz
jmp
jg
mov
ss
inc
jnp
xchg
push
mov
add
rcll
cmp
movsl
sub
mov
add
add
mov
mov
cwtl
call
mov
pop
sarl
cmp
add
lahf
cli
addb
and
mov
add
add
incl
test
test
ja
inc
add
mov
mov
and
mov
add
mov
es
ljmp
jge
js
add
mov
ss
aam
push
xchg
outsb
scas
xor
add
mov
loop
mov
icebp
imul
push
add
mov
imul
xchg
lock
outsb
dec
push
add
mov
sub
add
add
jnp
lcall
add
cmpsb
into
sub
inc
popa
mov
negl
mov
inc
add
mov
dec
mov
aad
insb
les
repz
scas
mov
mov
jbe
mov
enter
inc
add
mov
add
lds
mov
std
insl
and
mov
push
cwtl
lcall
rcl
sbb
jl
push
cmpsl
xlat
shll
mov
aas
dec
jmp
or
mov
mov
mov
sbb
jnp
jbe
and
add
aaa
pusha
add
add
jle
roll
mov
lock
mov
xchg
sbb
jo
mov
add
mov
add
stos
push
sub
mov
mov
adc
scas
mov
mov
pop
cmpsb
xor
pop
jle
inc
in
jecxz
imul
jns
or
rolb
mov
mov
jno
push
cwtl
xchg
push
mov
mov
pop
lret
push
inc
add
aaa
push
inc
add
hlt
cmpsl
xor
and
add
int3
fsts
mov
cmp
mov
push
cmp
lds
xor
js
ss
xchg
enter
mov
or
xchg
repnz
ret
push
rolb
or
adc
mov
add
sub
pop
inc
inc
sbb
in
push
jb
mov
xchg
lret
push
popf
sti
shl
aam
push
add
add
cld
sbb
in
pusha
add
fsubs
ret
sub
and
mov
add
mov
mov
inc
ror
imul
mov
add
jg
dec
enter
add
bound
mov
arpl
add
mov
push
xchg
adc
popf
arpl
lea
pop
sbb
and
mov
aad
push
les
mov
rorl
fwait
or
jle
out
dec
scas
loope
sbb
scas
dec
jle
into
xor
mov
xchg
fsubs
cmp
movsb
jns
inc
inc
push
add
xchg
inc
add
aad
adc
dec
dec
push
lcall
adc
addb
test
lea
ret
add
inc
jg
push
addb
arpl
add
fstpl
inc
cwtl
aaa
inc
add
push
add
test
nop
add
mov
mov
mov
adc
mov
fnstenv
add
mov
add
xchg
push
add
push
test
decb
enter
or
push
add
into
mov
aas
bound
mov
cmp
mov
mov
sub
xchg
mov
mov
into
pop
jmp
pushf
push
pop
inc
add
stos
mov
imul
lret
ja
sub
cmc
pusha
add
mov
lea
add
les
add
mov
inc
fsubrs
mov
add
sarl
out
add
mov
mov
add
mov
or
add
mov
andl
ds
mov
add
pop
cmpl
push
sbb
mov
add
cmpsl
xor
mov
xor
push
add
adc
iret
jl
sbb
mov
or
dec
loopne
mov
rolb
lds
clc
sahf
xlat
rcrl
xchg
add
and
mov
fdiv
lea
or
mov
add
pushf
xchg
jg
or
or
imul
addr16
add
add
lea
xorl
cli
rolb
mov
and
inc
add
push
loop
mov
add
add
lcall
cmp
add
dec
push
test
mov
add
movsl
add
mov
mov
aam
add
mov
mov
pusha
add
xchg
pushf
xchg
dec
pop
mov
cld
stos
xor
mov
aas
add
lds
int
mov
pop
or
add
mov
add
lock
adc
xchg
adc
mov
pop
xchg
xchg
rcr
xchg
pop
cmp
movsl
add
sub
mov
add
mov
and
out
dec
pop
xchg
sbb
add
sub
inc
add
pop
xchg
mov
repnz
adc
ds
add
add
add
mov
pushf
mov
sbb
sub
sbb
cltd
mov
hlt
cmpsl
add
mov
add
roll
ja
cld
sbb
xchg
add
notl
cltd
cs
rolb
mov
pushf
pushf
idivb
pop
pop
or
mov
rolb
and
mov
pop
mov
fwait
cmpsb
movsb
ds
and
xchg
add
mov
scas
sub
lods
lret
xor
mov
add
add
popf
push
or
adc
adc
imul
mov
xchg
pop
jnp
jecxz
jmp
les
mov
add
nop
add
sarl
addb
xlat
test
xor
cmp
cli
adc
xchg
mov
pop
jne
add
push
rolb
and
cmpl
jge
stos
movsl
rolb
jae
mov
idivl
mov
mov
out
push
add
stos
outsb
ret
sbb
jo
mov
movsb
imul
mov
and
mov
mov
mov
push
adc
jbe
lods
adc
mov
jne
mov
adc
mov
add
cmpsb
in
jp
ja
xor
cmp
xchg
aad
dec
add
clc
loope
adc
mov
or
or
push
add
rolb
mov
mov
mov
add
mov
jns
sahf
data16
add
xor
mov
mov
in
jp
shll
in
push
add
cmp
fstpl
inc
sub
lods
push
sbb
add
testb
inc
add
mov
sub
cltd
pop
sti
push
xchg
add
sub
testb
push
add
test
jle
cld
xor
mov
sub
stos
sahf
in
push
jae
add
mulb
sub
dec
sub
jmp
xchg
cwtl
xchg
add
in
add
lock
test
fwait
mov
add
mov
mov
jae
add
stc
int3
or
add
add
or
nop
add
sbb
add
or
add
das
adc
push
and
jae
rcll
push
push
add
lds
inc
movl
jbe
fdivrs
sub
mov
cmovo
mov
add
mov
push
xchg
fsubrs
sti
mov
mov
int3
xor
iret
or
add
add
mov
addb
inc
xor
dec
and
mov
xor
mov
pop
daa
dec
pop
aam
setns
mov
inc
ds
xorl
mov
mov
daa
cmc
jmp
cmpsb
pop
loop
mov
sbb
imul
pop
call
mov
jae
cmpsl
test
addb
push
jge
add
sar
mov
icebp
imul
add
mov
push
out
pop
mov
mov
mov
pop
sahf
xor
sub
add
hlt
adc
jnp
add
or
movsb
int3
mov
repz
rolb
mov
mov
and
mov
scas
popf
fmul
push
xor
ljmp
jne
sbb
adc
mov
fldenv
add
rolb
sub
pop
aam
xchg
movsl
mov
push
iret
cmp
mov
add
cmp
push
mov
or
scas
and
mov
jmp
ja
addb
fsubrl
fs
adc
mov
insl
push
push
movsl
dec
lret
sbb
add
fnstcw
or
cmp
outsl
mov
jmp
mov
cltd
sub
and
out
add
inc
add
and
mov
xor
out
fbstp
mov
push
add
call
and
mov
test
cmp
loop
mov
push
daa
xchg
mov
push
and
add
leave
test
addr16
aam
add
sub
hlt
mov
aas
ds
jno
xor
mov
test
scas
daa
clc
dec
pop
popf
and
mov
mov
sbb
add
or
adc
mov
gs
add
add
sub
mov
adc
jge
bound
mov
sbb
mov
cwtl
rcrl
xchg
mov
mov
add
in
and
scas
loop
mov
xchg
add
test
add
add
add
stc
or
pushf
mov
fildl
mov
les
add
fildll
or
dec
rcr
imul
push
mov
sbb
mov
mov
mov
repnz
jb
mov
xlat
mov
outsb
jp
sbb
mov
mov
test
inc
add
mov
imul
ljmp
pop
fisubrl
sbb
sub
mov
mov
jmp
popf
and
mov
add
mov
ret
pop
mov
push
rorl
mov
pop
and
repnz
mov
sbb
push
outsl
mov
mov
mov
push
add
mov
in
mov
jne
lea
cwtl
frstor
add
add
add
mov
adc
add
mov
jmp
in
das
out
rolb
mov
cmpsl
inc
ret
clc
out
inc
rcrl
add
mov
jg
mov
mov
inc
add
pop
sbb
mov
lahf
or
pop
das
xchg
add
sub
pop
sub
cmp
dec
fwait
lock
fstp
loope
add
jge
add
repz
popf
lahf
nop
add
push
or
mov
sub
jge
add
inc
je
jns
jge
nop
add
mov
fnstcw
jge
xor
fwait
xor
iret
jl
xor
add
mov
pop
mov
adc
mov
jl
xchg
or
xchg
rolb
mov
add
lods
xchg
mov
lret
rolb
mov
dec
xadd
mov
iret
lahf
xchg
add
mov
cli
and
mov
mov
push
filds
mov
add
add
std
adc
mov
jecxz
push
jne
add
mov
cmpsb
xor
mov
cmp
ljmp
cmpl
repnz
ljmp
mov
divl
and
mov
add
mov
sti
mov
and
and
leave
xlat
hlt
bound
mov
mov
add
xchg
sahf
sub
xlat
imul
mov
add
call
rolb
mov
ljmp
inc
mov
mov
mov
cmpsl
xor
test
pop
paddb
mov
arpl
std
push
xchg
cld
lods
insl
in
clc
jae
dec
xchg
add
in
dec
cltd
sub
mov
adc
push
imul
cltd
mov
insl
in
bound
mov
mov
add
lods
in
pop
cwtl
jae
out
inc
stos
addb
xor
add
test
add
sbb
scas
jle,pn
or
jl
stos
test
sub
add
mov
pop
jae
add
insl
cs
cmp
push
sar
and
add
inc
incl
mov
jbe
addb
cmp
dec
push
mov
mov
jo
mov
jns
add
addr16
dec
xor
push
xlat
mov
cmp
fdivr
mov
adc
stos
mov
inc
jmp
pop
cmp
in
add
mov
mov
leave
add
jg
jb
mov
dec
pop
ljmp
add
cmp
mov
inc
cld
adc
test
push
sbb
lret
movsb
xchg
adc
mov
xor
mov
lock
adcl
xchg
lods
push
bound
mov
pusha
add
add
pop
rcll
in
addb
mov
mov
test
mov
add
sahf
int
in
xchg
mov
aas
lods
nop
add
add
divl
jle
and
jbe
addr16
fucomip
jnp
into
pusha
add
fwait
adc
mov
add
test
mov
addb
mov
or
jl
or
pop
xchg
jp
outsl
ret
lret
sub
clc
dec
jae
je
les
mov
pusha
add
leave
sub
xor
lret
mov
call
lea
cmp
insl
xchg
out
mov
add
inc
sub
add
int3
fists
inc
addb
stos
cmp
add
das
sbb
mov
inc
sbb
add
insb
mov
push
sbb
add
stos
mov
jmp
fistpll
add
movhps
add
stc
nop
add
add
cmp
or
push
add
into
ret
or
ss
sti
cmp
int3
ds
jg
jno
cmp
add
stos
xchg
xchg
bound
mov
sbb
add
jno
sbb
rolb
mov
rsm
inc
mov
push
add
adc
mov
cmpsb
into
cmpsb
outsb
mov
mov
and
xor
mov
mov
jnp
daa
out
add
mov
mov
mov
dec
pop
inc
lods
in
and
sbb
xor
testb
mov
jge
and
add
ss
add
sbb
daa
mov
repnz
cld
popa
add
mov
inc
add
dec
cwtl
and
push
mov
mov
imul
mov
les
insl
pop
push
cmp
add
sbb
test
push
add
and
mov
scas
fnsave
addr16
icebp
sub
add
sar
loopne
mov
mov
push
inc
aam
sahf
aam
ss
adc
cmp
imul
xchg
stos
add
pop
xorl
add
scas
insl
cmc
ret
push
jbe
rolb
mov
jg
adc
mov
imull
add
adc
mov
inc
sbb
add
or
jo
mov
imul
sti
bound
mov
test
push
cmpsb
hlt
jnp
cmc
pop
push
adc
mov
jae
stos
les
mov
xchg
lds
scas
jecxz
add
ljmp
push
xor
mov
add
ret
lea
pop
dec
invlpg
arpl
add
aad
rolb
mov
add
inc
add
add
pusha
add
call
ds
lock
add
and
cltd
push
test
in
push
mov
mov
and
cld
int
inc
pop
pop
mov
fmull
cltd
jae
mov
add
das
mov
mov
xor
add
add
ret
mov
add
xchg
push
std
mov
jmp
dec
shr
xor
pop
test
addb
lds
lret
pop
fs
cmp
xor
mov
mov
hlt
js
lock
xor
mov
add
out
pusha
add
mov
js
pop
add
jge
add
ja
popf
fisttpll
and
js
jl
xchg
push
int
mov
rolb
mov
push
outsb
cld
sbb
in
or
mov
scas
and
aaa
cmp
pop
push
outsl
ljmp
push
add
xor
mov
repz
loope
test
add
pop
inc
add
adc
add
add
xchg
or
pusha
add
cs
mov
mov
add
cmp
aad
repnz
inc
jle
sbb
sbb
sbb
loope
mov
dec
cmp
imul
scas
pop
xor
jl
std
adc
mov
add
push
add
jno
inc
les
add
jae
fsubrs
repnz
ljmp
cmp
push
lea
push
addl
sldt
mov
xchg
out
stc
bound
mov
mov
cmp
xor
push
sub
call
inc
lcall
mov
add
out
mov
mov
bound
mov
adc
mov
sub
add
mov
adc
ret
daa
push
add
sbbl
imul
xor
mov
loope
and
mov
push
xlat
push
push
inc
add
out
imul
adc
add
inc
push
cmp
mov
lock
mov
xchg
add
mov
shll
push
shr
pop
out
call
xorl
dec
cld
xor
xchg
mov
aas
or
pop
ds
rolb
mov
lock
in
xchg
insb
xchg
pop
mov
mov
ret
add
mov
adc
xlat
jle
scas
js
add
mov
dec
out
jo
mov
pop
inc
xchg
lret
icebp
xor
jle
loopne
mov
push
sub
add
enter
mov
adc
mov
add
mov
insl
pop
out
adc
mov
mov
add
bound
mov
divb
out
mov
jle
add
scas
mov
cwtl
sahf
cld
jo
mov
cld
mov
add
mov
and
mov
inc
add
mov
mov
sahf
rolb
mov
xchg
add
mov
repz
cmpsb
icebp
jnp
jne
sarl
lret
es
cwtl
in
fsubl
addb
movsb
arpl
pop
mov
sbb
push
mov
mov
add
adc
mov
mov
sub
iret
scas
frstor
inc
dec
and
add
push
outsl
in
mov
add
pushf
xchg
add
mov
add
lret
popa
mov
test
jb
mov
add
dec
idivl
dec
dec
jae
sub
pushf
movb
dec
leave
mov
fcmovbe
xchg
adc
mov
loope
adc
mov
fldenv
add
mov
mov
sub
adc
mov
inc
aas
pop
mov
into
addb
inc
add
add
aam
sbb
push
jmp
rorl
les
jb
mov
fsubrl
fidivrs
pop
pop
xor
mov
mov
lahf
jo
mov
rorl
jecxz
or
mov
into
adc
mov
mov
mov
icebp
jle
dec
insb
hlt
push
inc
lahf
daa
xor
and
and
mov
mov
roll
or
add
dec
test
mov
add
sub
add
inc
jmp
iret
mov
inc
lcall
fistpl
add
inc
outsb
cmp
adc
mov
mov
gs
sub
jbe
add
mov
std
scas
pop
cld
mov
and
mov
out
loop
mov
lcall
fwait
pusha
add
add
and
mov
inc
imul
cmpsb
or
cld
scas
dec
or
add
sub
leave
lods
jb
mov
jp
addb
pop
pop
mov
and
mov
fnstsw
scas
mov
xor
jno
add
addb
or
stc
sbb
dec
repnz
cmp
jns
in
popa
fisubl
add
in
inc
add
mov
call
mov
fldl
mov
iret
scas
mov
pop
std
xor
mov
dec
adc
add
xchg
pop
mov
add
addr16
leave
ljmp
dec
addr16
dec
idivl
cmp
js
mov
ret
lea
add
push
lcall
jae
add
ret
push
jge
adc
mov
std
or
mov
fstp
in
aam
lahf
das
loopne
mov
xor
xor
mov
inc
add
add
fwait
pop
cmpl
jbe
incl
mov
push
jecxz
dec
mov
cmc
xchg
adc
jbe
out
sbb
xor
xor
mov
cmpsb
cmp
test
mov
pusha
add
pusha
add
test
das
add
mov
add
movsl
xor
lods
or
pop
sub
mov
jne
adc
add
push
add
sub
xor
in
dec
inc
add
ds
stc
push
add
repz
in
add
add
pop
out
scas
lcall
mov
mov
pop
jmp
dec
sub
jno
pop
jb
mov
sti
movl
and
lods
aas
flds
xor
mov
cmpsl
scas
push
pop
inc
push
aas
mov
inc
daa
push
add
mov
daa
popf
mov
xor
mov
xlat
stos
push
sbb
jge
lret
dec
rolb
mov
xor
mov
mov
add
mov
in
outsl
or
sbb
cld
rolb
mov
clc
out
xor
mov
into
ret
and
out
int
bound
mov
cwtl
rcll
mov
hlt
sbb
and
and
outsb
addb
and
add
fstpt
jecxz
mov
dec
add
mov
mov
gs
dec
mov
ja
sub
or
add
iret
add
mov
loope
dec
filds
dec
testb
jg
loop
mov
cli
mov
adc
mov
popa
nop
add
stos
mov
push
add
mov
mov
adc
loopne
mov
add
mov
addb
inc
add
into
mov
add
mov
add
insl
lods
mov
mov
clc
dec
out
or
incl
test
mov
xor
mov
clts
enter
mov
rolb
xlat
push
mov
dec
mov
add
sbb
sbb
testb
cmp
shrl
fwait
inc
add
ja
push
xchg
clc
xchg
or
scas
adc
scas
xchg
out
out
fstl
test
add
fld
add
rolb
mov
add
push
jb
mov
dec
arpl
add
flds
in
rolb
mov
je
rolb
das
inc
add
ret
push
add
xchg
out
add
xor
mov
fildll
adc
add
cmp
add
mov
sub
fs
add
js
add
inc
add
fisttps
icebp
fstps
xchg
mov
mov
mov
mov
add
fcom
add
mov
ficoml
lret
cmp
jp
xchg
mov
leave
xchg
mov
adc
cmp
add
jae
add
ret
push
xchg
mov
stc
push
sub
cmpsl
push
add
pop
mov
xor
mov
lock
jle
movsb
and
jge
adc
or
xchg
inc
push
xchg
je
cmp
jae
pop
rolb
lds
lret
cwtl
movsl
nop
add
add
add
mov
mov
shl
pop
jb
mov
into
add
mov
into
lret
and
mov
fldt
xchg
repz
rolb
mov
mov
lock
mov
iret
loopne
mov
add
lock
add
push
add
add
mov
pop
into
jl
jmp
add
je
jno
rolb
jge
xlat
nop
add
addb
enter
loop
mov
push
int
incb
pop
fcoml
and
mov
fistpll
dec
test
outsb
xor
leave
xchg
test
push
mov
xor
fwait
out
add
push
hlt
lock
out
and
jns
imul
pop
jnp
xor
xlat
pop
xor
mov
fnstsw
hlt
nop
add
inc
add
inc
in
repz
jge
add
push
add
aad
pusha
add
mov
mov
lret
aaa
pop
pop
idivb
xchg
mov
add
out
aas
xor
xchg
ficomps
addb
xchg
inc
add
xor
stos
mov
xor
mov
rcrl
cmp
add
add
pusha
add
rcrl
mov
sub
xchg
int
lahf
shl
mov
ja
fdecstp
imul
push
mov
sbb
jns
add
sbb
cmpsl
adc
mov
mov
add
mov
call
ljmp
lahf
fistpl
xor
fwait
push
test
popf
jl
int3
imul
sbb
pop
stos
cmp
leave
out
out
add
push
adc
mov
adc
push
xor
sbb
add
imul
adc
mov
mov
movsl
xor
mov
ficompl
rolb
mov
pop
or
cmp
std
add
mov
mov
mov
rolb
pop
popf
es
and
mov
xchg
add
add
adc
inc
add
arpl
dec
mov
mov
pop
lcall
mov
add
and
add
jnp
add
add
mov
test
add
cmp
add
inc
xor
mov
add
popa
xor
add
cmpsl
cld
mov
es
push
repz
mov
jb
mov
mov
rcll
mov
out
mov
in
push
adc
mov
dec
mov
rolb
mov
add
xor
sub
les
add
mov
inc
add
sub
cmp
pop
insl
or
fmulp
fimuls
mov
enter
or
mov
cltd
lods
xchg
aas
daa
fildl
cmp
add
dec
ds
sbb
daa
bound
mov
out
jmp
add
mov
hlt
sbb
popf
inc
popf
mov
or
add
mov
lahf
es
mov
ret
push
loop
mov
push
push
add
dec
nop
add
push
add
mov
jmp
add
sub
pop
test
cmp
fs
rolb
mov
push
adc
dec
mov
mov
lahf
dec
cmp
aaa
inc
and
mov
test
leave
jmp
mov
mov
scas
les
rolb
mov
push
add
lods
mov
mov
hlt
loop
mov
call
jnp
xchg
hlt
imul
js
sbb
fwait
xchg
inc
inc
sub
ja
adc
adc
mov
mov
jg
stos
sbb
xlat
rolb
mov
push
cmc
jmp
add
or
mov
fstps
data16
pushf
pop
cs
hlt
sbb
outsb
sahf
inc
push
ljmp
push
iret
pop
fadds
jp
jmp
into
mov
jo
mov
cmpsl
push
into
lea
or
mov
pop
mov
xchg
add
add
js
add
mov
decl
ja
mov
mov
pop
or
add
mov
push
add
pop
sbb
mov
dec
test
sarl
jmp
mov
and
add
mov
dec
sub
add
mov
or
mov
jae
or
fidivs
push
mov
or
jl
push
push
mov
or
mov
adc
mov
mov
mov
movsb
cmp
cld
push
add
add
mov
add
mov
aad
jns
mov
sti
jmp
add
movb
and
add
push
adc
add
es
fdivrp
pop
loope
sbb
addb
inc
add
jmp
pusha
add
int3
jg
rcll
stos
mov
jg
xor
mov
push
in
mov
addb
sbb
aaa
in
scas
arpl
sub
rorl
xchg
pop
add
lret
add
lods
scas
notb
fsubl
hlt
jp
mov
dec
sbb
and
sbb
jge
add
jmp
add
mov
add
push
cmp
ds
rcll
and
ja
mov
or
add
leave
iret
mov
mov
jecxz
inc
mov
inc
add
add
mov
sbb
fwait
out
adc
pop
jne
mov
gs
shll
aaa
sbb
adc
sub
out
jno
add
mov
add
add
inc
add
jb
mov
mov
inc
or
sti
jnp
add
das
aas
in
sbb
pushf
jno
lahf
mov
mov
inc
sub
in
mov
add
cs
pop
gs
or
mov
in
add
jnp
push
add
mov
loope
pop
fs
insb
jmp
out
sbb
or
xchg
adc
mov
jge
fidivrl
add
jo
mov
call
sahf
aad
jns
cmp
mov
addb
and
xor
mov
mov
push
pushf
add
sub
nop
add
mov
divb
mov
mov
sbb
cmp
add
pusha
add
push
adc
xchg
mov
sub
cmp
pop
je
push
mov
xor
sbb
dec
mov
xor
negl
repz
mov
movsb
add
call
outsl
ret
rolb
mov
stos
aad
xor
jmp
negb
scas
jmp
dec
inc
sbb
sub
pop
jne
repnz
dec
cmpl
mov
mov
jne
xchg
mov
inc
mov
add
mov
mov
mov
mov
roll
arpl
in
popa
or
add
flds
or
add
xchg
add
add
stc
pop
das
sub
add
inc
add
shll
mov
or
adc
jno
popa
scas
jp
addb
fisubrl
xchg
push
mov
sub
push
int3
sbb
je
jg
push
stc
inc
hlt
fwait
push
int
pop
imul
outsl
xlat
fs
push
sarl
push
subl
mov
add
stos
lods
xchg
inc
cmpsb
fdivl
pop
nop
add
add
xor
mov
outsb
mov
outsb
mov
mov
dec
xchg
mov
adc
je
dec
iret
cld
outsl
or
mov
mov
mov
ja
call
add
pop
lret
fnsave
xchg
mov
rorl
cwtl
sub
pop
add
xor
mov
add
enter
push
stc
inc
add
mov
repnz
sbb
insl
lods
mov
and
inc
imul
cmp
test
xor
mov
xor
mov
ds
or
loopne
mov
lods
scas
rcll
lods
ret
jno
int3
cmp
jle
add
cmp
pusha
add
inc
xchg
ljmp
cmp
xor
rorl
std
mov
sub
sti
ss
cmp
add
clc
push
pushf
jb
mov
mov
sahf
rolb
mov
je
sahf
jmp
add
or
fidivl
xchg
addb
xor
mov
mov
pop
ss
idiv
stc
bound
mov
pusha
add
sbbl
inc
xchg
add
add
cmp
ljmp
mov
outsb
or
fs
dec
sub
mov
mov
mov
mov
mov
add
dec
cmp
mov
mov
mov
mov
mov
jg
lods
rolb
and
mov
xchg
adc
js
roll
cmp
repz
lret
inc
or
les
es
js
add
jb
mov
add
cltd
push
mov
cli
movsl
cwtl
mov
mov
add
add
mov
ret
mov
xchg
bound
mov
es
cwtl
sbb
add
xor
insb
cmpsl
incb
js
lods
loope
add
std
xor
mov
rcrl
add
or
lds
sbb
sub
inc
mov
mov
jp
fimuls
fmull
pop
iret
lret
xchg
pop
sahf
mov
add
push
in
xchg
xor
mov
ljmp
mov
rolb
mov
cmp
int3
jecxz
pop
pop
movsb
jno
popf
dec
or
xor
mov
add
pop
pop
ficompl
mov
add
jne
add
flds
fldt
mov
mov
call
dec
sbb
adc
in
add
in
leave
cmp
xor
mov
add
add
mov
pop
aad
cli
push
add
aam
roll
mov
fidivrs
jmp
mov
push
push
mov
rorl
add
mov
xor
jge
mov
mov
add
push
out
in
mov
push
add
dec
dec
adc
sub
or
nop
add
mov
mov
add
lock
pop
inc
lods
mov
sub
add
add
insl
fwait
in
insl
arpl
push
out
repz
enter
stos
pop
iret
and
aas
addb
add
dec
sub
mov
gs
loopne
mov
add
mov
loope
push
xchg
or
and
or
add
and
pop
jbe
push
xor
mov
add
push
jge
dec
test
mov
int
inc
add
push
add
incl
je
push
roll
cwtl
cmp
push
mov
mov
mov
mov
mov
bound
mov
cmp
ficomps
aad
jnp
mov
add
loope
mov
inc
in
xlat
xlat
setle
jnp
lahf
mov
xor
mov
js,pn
add
add
cli
rolb
mov
jbe
aam
pop
pop
psadbw
mov
cmp
dec
or
adc
out
pop
dec
int
lea
cmp
mov
mov
inc
add
fmul
addb
sarl
neg
movsl
in
sub
ffreep
add
sub
add
je
mov
mov
add
mov
insb
aas
xchg
jl
jnp
lret
lea
mov
inc
add
adc
add
push
adc
push
ret
sahf
loop
mov
test
add
add
aam
dec
js
cwtl
imul
pop
ljmp
outsl
out
jnp
jne
in
mov
and
add
add
add
mov
mulb
cli
cmp
pop
daa
mov
cmpsl
xchg
add
cmp
jge
cvtps2pi
mov
mov
lds
mov
mov
xor
cltd
and
and
call
push
and
mov
sub
mov
cmp
iret
adc
cmp
inc
and
mov
imull
dec
mov
add
push
mov
rolb
xor
mov
cmp
and
mov
push
inc
loop
mov
add
cmpsl
xor
inc
add
add
push
add
scas
cmp
pop
out
rolb
pop
into
outsb
sbb
inc
add
lret
es
lret
inc
jge
lods
adc
jge
jmp
add
add
inc
and
cmp
ljmp
dec
movsl
pop
outsl
in
mov
mov
xor
mov
mov
add
stos
adc
adc
mov
add
mov
flds
push
mov
sahf
jnp
xchg
inc
adc
jb
mov
fidivrl
jnp
mov
mov
mov
inc
add
inc
xor
test
mov
mov
vxorpd
outsl
fsubs
jl
cwtl
sub
add
add
jae
mov
mov
mov
loopne
mov
push
dec
es
and
add
rcll
mov
add
add
hlt
jmp
ja
bound
mov
and
mov
xor
pop
sub
add
jnp
cmpsl
mov
dec
fwait
xor
std
jne
leave
pop
inc
std
js
jo
mov
mov
mov
cmp
addr16
inc
mov
loope
add
mov
mov
mov
push
jnp
push
xor
mov
mov
out
pop
xchg
jnp
push
inc
xor
bound
mov
dec
cmpsb
clc
dec
fistps
cmp
inc
add
mov
mov
add
rolb
sti
jecxz
mov
mov
mov
dec
mov
scas
mov
mov
imul
sbb
push
and
add
mov
cmp
jmp
adc
push
lods
add
int3
cmc
clc
out
adc
push
mov
inc
aam
adc
mov
cltd
add
mov
into
push
add
mov
mov
filds
mov
add
movsl
push
insl
jne
nop
add
add
push
xor
addb
sbb
mov
cwtl
inc
in
xchg
aam
out
push
dec
sub
mov
add
clc
xchg
out
mov
bound
mov
add
adc
pop
loope
movsl
adc
call
add
xor
mov
mov
add
cmp
add
mov
add
dec
testl
mov
mov
add
push
and
mov
sub
add
das
and
test
iret
pop
pop
lods
loope
mov
jecxz
inc
dec
fidivrs
dec
inc
je
inc
add
cmp
mov
push
aad
jg
xchg
add
sub
rolb
mov
fldenv
sub
addb
popf
or
xor
sub
mov
jb
mov
mov
or
sub
lods
xor
mov
dec
xor
mov
mov
jg
out
add
xchg
inc
add
mov
mov
mov
add
leave
sub
add
mov
mov
mov
mov
arpl
repnz
xchg
and
mov
add
xor
addb
bound
mov
add
imul
cmp
imul
clc
mov
push
in
cwtl
das
xchg
leave
adc
mov
add
lahf
aas
das
fnstcw
inc
adc
pop
push
test
mov
sbb
loopne
mov
or
clc
repz
add
dec
cmpsb
sub
push
jmp
add
scas
test
add
add
mov
and
out
mov
add
xor
mov
jbe
out
inc
add
idivl
mov
in
add
push
push
add
mov
add
push
mov
sub
outsb
fists
add
add
pusha
add
pusha
add
lods
inc
scas
xchg
jo
mov
add
mov
aas
mov
dec
cltd
daa
int
int3
cmp
mov
dec
xor
mov
lret
in
add
out
movsl
cli
fstl
mov
lds
pop
or
xchg
xchg
mov
add
adc
mov
into
insb
mov
gs
aaa
push
cwtl
add
loope
lds
or
xchg
or
adc
insb
push
ret
mov
push
dec
inc
fistpl
push
add
mov
test
and
mov
cmc
hlt
out
icebp
mov
shll
mov
sbb
add
fidivrl
dec
je
and
mov
pop
adc
pop
cld
popa
cmp
jmp
std
fiaddl
add
mov
mov
mov
cwtl
fisttpll
cmp
xchg
stos
adc
mov
decb
sti
xchg
xor
mov
push
mov
das
andl
mov
loop
mov
leave
mov
jne
jmp
rcrl
testb
mov
add
sbb
sarl
std
int
dec
dec
in
sti
and
mov
jae
test
imul
imul
add
sbb
ds
inc
xchg
js
pushf
repz
out
mov
cmp
rcrl
add
add
jecxz
fs
pop
add
mov
cmp
lret
mov
add
outsl
sbb
lods
dec
ffreep
pop
stc
xchg
and
mov
jl
xchg
outsl
outsb
pop
push
popf
jnp
cmp
ss
add
mov
ljmp
loope
push
mov
int
add
xchg
xlat
outsb
mov
stos
inc
push
lret
mov
jmp
fildl
clc
leave
pop
outsb
out
out
mov
mov
jne
mov
shll
ljmp
mov
stos
adc
mov
rolb
mov
shll
rolb
mov
add
movsb
in
jmp
jo
mov
add
jge
push
mov
mov
sub
aam
sbb
insl
pop
jbe
push
cs
inc
jo
mov
lea
pop
dec
ljmp
add
add
add
js
dec
inc
repnz
add
outsb
cmp
and
int3
xor
mov
push
cmpsb
sbb
add
lock
dec
mov
add
add
cwtl
rcl
loope
add
inc
add
ja
push
cmp
aas
fdivrs
hlt
stos
mov
mov
fistpll
mov
mov
imul
or
out
aaa
divb
add
add
sub
sbb
mov
xchg
add
add
in
clc
testl
scas
repnz
mov
iret
leave
lret
stos
movsb
or
lods
movsb
xchg
cmc
pop
jg
faddl
add
sbb
lock
mov
fisttps
mov
arpl
xchg
das
fimuls
mov
mov
mov
mov
daa
inc
or
jnp
adc
mov
and
and
mov
add
jl
clc
push
jge
ret
sub
fs
clc
pop
push
faddl
lods
or
jp
iret
cltd
inc
mov
mov
pop
rcll
add
pop
sbb
fsqrt
rolb
mov
cmp
hlt
mov
mov
jns
adc
xchg
pop
testb
hlt
hlt
mov
fldenv
jmp
popa
sub
inc
add
mov
pop
xor
cmc
push
mov
add
mov
gs
add
or
add
adc
mov
stos
pop
cmc
das
mov
lods
imul
dec
popf
dec
daa
loop
mov
cmp
clc
bound
mov
add
call
mov
inc
std
mov
push
inc
repz
jbe
xchg
pop
jne
adc
mov
sbb
fsubrl
xlat
outsb
int3
addb
dec
jbe
pusha
add
mov
add
xchg
add
mov
mov
jno
rolb
mov
pop
sbb
add
mov
mov
ret
xchg
add
mov
mov
cwtl
popa
and
sti
int3
pop
lahf
lahf
in
xor
mov
mov
scas
add
mov
and
cmc
test
pop
imul
iret
lret
lcall
insb
or
or
jmp
out
inc
roll
or
mov
fadd
xor
mov
in
jno
xor
add
ror
cmp
popf
lods
add
mov
jl
xchg
push
movsb
sbb
add
inc
add
imul
add
inc
push
hlt
adc
rolb
dec
sahf
mov
fwait
mov
mov
mov
adc
mov
lret
sbb
jl
adc
clc
rolb
cld
cwtl
ret
mov
add
icebp
jno
into
loop
mov
and
mov
fnsave
inc
jmp
cld
outsl
sti
sahf
mov
cmpsl
popa
xor
adc
mov
pushf
sbb
inc
xor
mov
movsl
fstl
xor
mov
add
mov
mov
mov
les
add
cmpsb
faddp
dec
pop
sbb
cmpsb
add
mov
pop
jbe
popa
stos
sbb
arpl
aad
movsb
enter
push
stos
iret
dec
lret
dec
xchg
add
mov
cmc
repz
hlt
pusha
add
fbstp
cld
pop
call
stc
xor
lret
push
cmp
add
loopne
mov
pop
xor
xchg
andl
mov
mov
push
lock
xor
adc
or
add
push
jecxz
adc
mov
dec
inc
push
daa
sub
gs
shl
add
mov
lods
dec
std
push
push
inc
sbb
out
jle
dec
sub
leave
dec
jg
xor
mov
mov
cmp
movsl
std
cmc
and
mov
add
jmp
adc
test
and
sbb
dec
fcompl
adc
mov
mov
add
pop
ja
mov
sbb
inc
insb
ja
add
adc
add
mov
xchg
pop
cld
pushf
les
jg
add
add
adc
mov
addr16
xor
add
mov
add
fnclex
add
les
shr
add
cmp
add
mov
add
mov
es
push
mov
or
sub
mov
xor
rolb
mov
cmc
pusha
add
or
ss
in
lcall
add
pop
test
and
mov
cmp
sbb
cwtl
cmpsl
jnp
adc
adc
and
testb
mov
negb
loope
add
and
subl
xor
mov
add
clc
or
test
push
add
add
cltd
mov
dec
mov
repz
mov
add
cmp
add
mov
sti
inc
fists
popa
mov
arpl
and
adc
testb
cli
or
insb
ret
xchg
jb
mov
fucom
into
pushl
mov
push
or
cmp
push
mov
add
add
rorl
shll
jge
jmp
sarl
sahf
stos
push
mov
adc
mov
push
stos
leave
inc
add
movsb
jne
mov
mov
mov
je
cwtl
and
mov
xchg
add
mov
or
push
outsb
inc
push
decb
cwtl
sahf
movsl
mov
test
push
or
mov
mov
std
dec
sub
add
or
mov
movsl
sub
hlt
xor
movsb
jnp
add
pop
test
pop
stc
add
or
cs
int3
int3
inc
add
gs
fwait
lods
incb
mov
lahf
mov
ret
or
lahf
leave
fwait
arpl
ret
stos
jg
jle
push
int3
mov
add
mov
jecxz
mov
mov
fimull
push
jl
testb
adc
adc
sahf
lods
aam
pop
inc
and
cld
gs
xchg
sbb
aaa
sbb
frstor
dec
pop
js
and
fsubl
xchg
add
test
mov
jmp
add
cmp
jmp
mov
push
lcall
xchg
std
mov
add
add
add
int3
lods
mov
ljmp
mov
icebp
roll
add
mov
divb
add
mov
push
adc
add
pushl
add
mov
mov
pop
sbb
xchg
das
decb
daa
mov
mov
mov
mov
addb
pushf
imulb
into
popf
sbb
in
fistpl
testl
add
mov
hlt
inc
and
add
mov
cld
sarl
repnz
xor
mov
and
jl
iret
test
mov
ret
lock
jl
or
mov
dec
jl
add
add
inc
add
in
int3
mov
xor
mov
int
aas
lock
add
mov
add
xchg
add
push
mov
jnp
fwait
popa
ds
or
sbb
int3
jne
dec
xor
cmp
jp
xchg
jb
mov
or
mov
mov
lret
or
mov
addr16
ljmp
adc
jg
sub
mov
imul
inc
add
add
or
pop
mov
nop
add
ds
jae
add
mov
xchg
mov
fdivs
push
add
gs
push
cwtl
xor
nop
add
add
jg
add
add
mov
mov
shll
jne
outsl
out
int3
loopne
mov
into
stos
cmpl
mov
loopne
mov
add
arpl
mov
cwtl
mov
rolb
popf
cmp
sbb
adc
mov
mov
add
insb
sbb
into
mov
sahf
loop
mov
fidivs
int
outsb
sub
outsl
inc
pop
mov
rcll
mov
lods
mov
add
mov
hlt
mov
cmp
pop
xchg
dec
push
lods
cmp
jb
mov
das
inc
fs
out
sub
add
mov
lds
mov
and
dec
arpl
pop
xchg
out
sahf
jge
cmp
pop
mov
add
adc
mov
mov
mov
rolb
mov
xchg
pushf
popf
inc
sbb
sub
jl
into
sub
outsb
rolb
inc
outsl
outsl
mov
notb
jmp
add
xchg
push
dec
inc
sub
and
sbb
out
jb
mov
xor
mov
add
mov
or
add
dec
fcompl
insb
sub
lret
mul
loope
insl
mov
mov
mov
sbb
add
sbb
cmpsb
push
pop
push
cmc
jl
push
shrl
mov
popf
mov
lock
scas
popa
into
jecxz
adc
mov
mov
addr16
pop
pop
int3
xchg
cmp
sub
sbb
fdivr
lea
pop
dec
scas
dec
cmp
dec
popl
and
mov
mov
fmull
push
aas
xor
mov
stos
xchg
add
movsb
test
pop
and
lahf
loopne
mov
or
dec
jne
add
push
scas
push
add
push
add
push
or
and
pop
push
add
adc
mov
sub
ljmp
add
or
mov
movsl
pop
dec
and
mov
fsubrs
ss
mov
std
in
imul
dec
sub
push
add
add
mov
mov
push
es
sub
push
add
mov
add
outsb
push
push
adc
xor
add
push
push
add
into
scas
cmp
mov
je
stos
ss
dec
jb
mov
add
dec
aam
or
add
test
gs
add
jg
in
lcall
add
inc
cmp
xchg
enter
jne
and
add
cli
icebp
mov
shl
add
add
scas
fcoms
add
and
mov
loopne
mov
sbb
add
push
cmc
or
jne
and
fistpll
push
add
mov
add
and
lret
pop
xor
pushl
int
repnz
fistpll
mov
sbb
add
popf
movsb
test
mov
pop
cs
and
mov
in
jecxz
cmp
push
repz
pop
iret
decb
sbb
xchg
or
mov
add
rolb
mov
mov
test
and
mov
ljmp
addr16
notl
or
lcall
movd
jne
fadds
iret
cmp
mov
addb
std
inc
cmp
mov
xor
mov
and
cltd
ds
add
in
add
call
cmp
data16
mov
xorl
push
cmc
adc
mov
sbb
add
rolb
xchg
add
add
mov
pushl
in
rolb
mov
mov
dec
cmp
push
repz
mov
push
vcvtsd2ss
mov
ljmp
cmp
sub
addb
out
out
ficompl
add
xor
int3
clc
lds
xor
cmp
das
xor
mov
pop
mov
loope
jp
dec
pusha
add
add
xchg
add
bound
mov
jno
add
add
add
in
movl
inc
mov
out
inc
xor
add
and
mov
popf
bound
mov
fs
rol
insl
lret
out
adc
pop
sub
add
add
jmp
or
arpl
fisubs
mov
out
sub
mov
pop
pop
mov
psraw
push
xor
das
lret
shr
inc
roll
push
je
add
xor
out
pop
push
imul
jno
add
push
cmp
ja
add
jecxz
dec
dec
jecxz
or
repnz
pushf
pushf
addb
mov
add
mov
sbb
popa
not
ja
mov
shrl
jb
mov
ret
shrl
out
mov
lret
cld
icebp
test
jecxz
adc
add
jb
mov
cmpsl
insl
mov
mov
stc
mov
mov
mov
mov
fwait
out
jnp
and
xchg
jg
fwait
lods
push
addb
enter
fisttpl
lock
enter
sbb
push
addb
and
mov
mov
mov
and
sbb
das
xor
mov
fscale
jne
push
push
add
add
xchg
sbb
dec
inc
mov
push
mov
mov
add
lods
jg
add
movsb
popf
fdivs
xor
cmp
loopne
mov
adc
adc
mov
call
push
mov
add
jg
mov
mov
mov
sub
addb
add
jb
mov
push
lods
daa
lds
pop
sub
cmp
xchg
dec
add
sti
imulb
sub
add
lock
scas
loopne
mov
mov
push
repnz
movsl
inc
inc
add
mov
lea
aad
add
test
aaa
or
int3
inc
pop
addb
jge
add
add
xchg
mov
mov
xor
ljmp
bound
mov
push
push
and
mov
outsl
xorl
les
leave
in
sub
and
cld
lret
jmp
out
mov
lock
mov
into
mov
sahf
mov
xor
dec
mov
int3
mull
add
adc
mov
dec
into
aas
outsl
popf
ret
sub
ret
or
mov
in
xor
cld
arpl
cs
jbe
addb
push
add
xchg
cs
dec
rcrl
in
fstpt
pop
mov
mov
sbb
jmp
push
xchg
test
sbb
sbbl
mov
add
mov
and
or
push
mov
arpl
sbbl
loopne
mov
dec
iret
arpl
mov
in
dec
xchg
into
hlt
mov
add
scas
push
xchg
dec
test
ss
cmp
sub
daa
pop
lods
mov
inc
add
and
mov
jo
mov
sub
std
or
sahf
sub
sub
es
cmp
push
mov
cmp
push
jl
mov
loopne
mov
add
mov
add
or
add
punpcklwd
add
add
insl
pop
and
sti
in
and
mov
add
nop
add
push
fcmovnbe
insl
lds
mov
mov
add
imul
mov
and
mov
add
stos
jne
jge
stc
out
leave
js
les
xor
sbb
xchg
push
inc
add
or
jae
frstor
add
shll
mov
or
rolb
mov
in
push
dec
mov
xor
mov
in
xor
mov
out
mov
push
xor
mov
add
lds
jae
adc
ja
xchg
mov
push
push
push
cwtl
aas
out
hlt
fnclex
add
jl
add
fsubrl
push
add
mov
rolb
mov
mov
cmpsl
scas
popa
jns
stos
push
jmp
pop
sub
mov
mov
int3
faddl
sbb
mov
mov
mov
int
add
cmc
dec
xchg
add
hlt
xchg
sub
pop
outsb
icebp
lret
dec
ja
add
out
xchg
mov
call
ds
bswap
fadd
mov
lods
out
idiv
decl
das
cwtl
repz
and
mov
test
add
mov
mov
or
dec
mov
add
or
sti
sub
sub
nop
add
scas
iret
addr16
push
inc
je
stos
inc
inc
xor
mov
cmpsb
in
enter
add
adc
hlt
test
pop
add
mov
xor
bound
mov
imul
mov
mov
fsts
clc
pop
inc
push
xchg
rolb
mov
add
add
mov
loopne
mov
rolb
mov
dec
jbe
push
out
lods
ljmp
es
fs
out
pop
sub
pop
out
jns
loope
cmp
inc
pop
idivb
in
addb
in
sub
arpl
mov
add
loope
inc
add
mov
jae
add
jbe
inc
pushf
das
cmpsb
and
scas
ss
mov
mov
lods
and
mov
mov
shll
fisubrl
adcl
pop
imul
out
je
xchg
pop
std
fs
inc
add
mov
cmp
lods
xchg
add
push
mov
jno
sub
jp
add
sahf
lea
inc
jge
testb
mov
xor
loop
mov
dec
xchg
mov
jne
xor
mov
cmp
or
xchg
addb
sub
test
add
lods
push
mov
mov
ret
repz
imul
fwait
cmpl
or
mov
rcll
add
stc
ljmp
es
or
or
add
daa
cltd
xchg
jmp
xor
mov
mov
ficompl
sahf
adc
mov
cmpsb
sub
add
add
lahf
pop
lcall
or
add
add
cmp
sub
inc
add
add
incb
repz
movsl
and
ficoml
add
shl
or
push
js
add
jge
addr16
xchg
stc
sub
in
roll
mov
je
fildll
sbb
mov
push
add
stos
pushf
pop
adc
dec
addb
sub
xchg
add
add
xor
mov
ret
xor
dec
sbb
imul
mov
lds
xor
cmpsb
popa
mov
icebp
sti
cld
test
add
add
inc
mov
lock
mov
cltd
sbb
into
rol
inc
mov
mov
inc
stos
cmp
test
in
push
stos
es
and
faddp
add
mov
xor
outsl
fstps
cmpsl
add
mov
sbb
add
push
out
nop
add
mov
or
mov
mov
int3
lock
repz
cli
or
pop
enter
jp
or
add
fs
inc
ss
dec
pop
test
push
fisttpl
xchg
push
dec
test
add
shll
test
add
adc
aad
ds
sti
add
mov
and
or
sbb
add
add
into
fldt
mov
add
lahf
js
cwtl
lock
add
daa
mov
nop
add
dec
xlat
inc
add
mov
ja
mov
pop
fistpl
es
gs
scas
fisubrs
icebp
sbb
cld
jae
int
lea
mov
sbb
pop
out
jae
loopne
mov
scas
sbb
mov
mov
mov
popf
inc
xor
mov
add
shrl
sub
add
dec
mov
aaa
cwtl
adc
decl
jne
mov
mov
add
push
mov
cwtl
inc
and
icebp
ja
popf
xchg
add
mov
sahf
mov
es
dec
dec
stc
cld
je
mov
fdivs
cmp
mov
andl
and
add
in
mov
inc
push
mov
jl
ja
test
into
xchg
add
inc
jp
or
roll
cmp
add
add
push
les
daa
dec
xlat
dec
insl
pop
lods
call
cmp
pop
xor
mov
jb
mov
ret
dec
sbb
lcall
mov
jecxz
mov
mov
jnp
add
mov
popa
in
pop
xor
mov
out
scas
xchg
adcl
mov
push
stc
jl
cmp
and
mov
mov
mov
or
loopne
mov
xor
xchg
and
and
mov
test
lock
push
inc
add
lock
out
ror
arpl
cmc
dec
push
test
jecxz
xor
aaa
orl
sub
imul
add
mov
push
push
cmp
sub
filds
into
mov
mov
mov
mov
add
mov
mov
add
push
push
xor
stc
sbb
jge
dec
sub
mov
add
lret
pop
mov
mov
mov
push
add
int3
imul
call
lock
add
add
add
mov
add
pop
ja
add
in
out
rolb
mov
sub
aad
sbb
cmp
pop
jle
jae,pt
lcall
cmp
je
jmp
rolb
hlt
pusha
add
mov
mov
cmp
push
mov
imul
ja
call
and
mov
cwtl
jae
aas
push
sahf
loope
pop
out
nop
add
addb
mov
adc
jb
mov
addb
js
lcall
in
push
popa
xchg
int
fisubrs
leave
popf
out
mov
add
mov
xchg
hlt
push
dec
sbb
add
ficoml
push
dec
inc
in
outsl
cmpsb
stc
mov
add
add
mov
add
or
add
cmp
add
push
add
and
test
pusha
add
pop
out
pop
mov
push
data16
and
int
add
sub
adc
mov
add
addb
in
int
leave
add
mov
and
add
add
mov
and
leave
stos
rolb
mov
mov
jecxz
pop
js
push
add
adc
add
fisttpll
push
mov
sub
or
add
ss
sbb
push
std
xchg
sub
and
inc
and
es
xchg
push
add
add
add
inc
dec
push
add
adc
and
add
add
mov
mov
movsl
mov
add
ror
dec
decb
cltd
pop
insl
ja
add
outsl
push
xchg
lcall
inc
rcll
mov
mov
jge
sub
adc
add
mov
xchg
inc
jg
xchg
mov
jno
fidivl
outsl
push
pop
jp
jmp
dec
lcall
mov
mov
mov
inc
add
das
mov
es
lds
jmp
mov
or
or
pop
xchg
mov
mov
ss
in
dec
mov
sbb
dec
xlat
xchg
dec
and
mov
mov
add
push
inc
add
inc
arpl
iret
lret
jno
pop
xchg
fisubl
rcrl
mov
jnp
xchg
add
aad
aad
pop
mov
xor
mov
in
add
sub
push
xchg
cmpsb
add
mov
add
mov
lret
mov
push
mov
mov
mov
xchg
loop
mov
mov
dec
mov
dec
inc
das
cli
push
add
add
add
add
cmp
adc
mov
or
dec
or
loope
dec
fsubrp
addl
lods
aam
std
mov
lods
xchg
je
lret
mov
stos
sti
push
sbb
jp
jecxz
add
mov
std
loopne
mov
outsl
out
jno
rolb
mov
pop
test
mul
add
adc
mov
mov
aad
addb
or
xchg
inc
push
cwtl
sbbl
addb
cltd
cmpsl
xor
repz
arpl
jns
gs
xor
mov
icebp
in
cmp
inc
add
mov
les
mov
iret
dec
mov
loopne
mov
push
mov
ds
mov
lods
inc
add
in
add
mov
mov
jl
add
jmp
add
sbb
xchg
stos
rolb
mov
add
add
xor
add
lock
rolb
enter
inc
add
subl
cmp
ds
jle
stc
adc
arpl
ss
xchg
add
testl
sti
inc
add
dec
addb
jnp
out
xchg
xchg
cmp
mov
or
pop
enter
mov
int
and
mov
add
les
add
adc
mov
add
vmovdqu
mov
push
rolb
sub
insl
push
shl
lock
fsubs
mov
ljmp
mov
je
lret
scas
jmp
jge
dec
xor
and
mov
insl
scas
popa
mov
iret
imul
mov
jecxz
xchg
jle
add
mov
mov
push
pop
push
insl
and
jnp
push
insb
imul
outsb
inc
xchg
enter
int
pop
sub
dec
aas
fwait
test
sub
add
mov
rol
fmuls
lock
out
orl
add
icebp
inc
in
xchg
pop
push
mov
addb
xchg
aaa
insl
jge
sahf
fwait
jae
fstpl
or
in
loope
inc
xchg
add
xor
mov
cmp
adc
ffreep
xlat
xchg
mov
inc
add
loop
mov
pop
push
fwait
dec
jp
dec
or
pushf
rcr
lods
ja
add
call
ret
and
inc
add
je
pop
push
fdivr
adc
fimull
sub
bound
mov
mov
xor
mov
int
xchg
mov
mov
mov
lds
leave
movsl
xchg
push
push
int
mov
mov
lods
pop
in
test
mov
mov
mov
movsb
mov
addl
jl
mov
sub
add
rcr
ss
adc
mov
mov
dec
adc
mov
or
leave
ficomps
jo
mov
sub
xchg
add
enter
adc
add
pusha
add
mov
mov
rcrl
ds
xor
mov
mov
mov
pop
pop
push
mov
or
lret
mov
mov
push
insl
mov
mulps
jne
andl
pop
stc
mull
and
aas
jb
mov
add
and
mov
pop
pop
cmc
ret
xchg
pop
imul
pop
addb
std
int
gs
dec
fdivl
mov
add
add
cmpsl
xchg
add
ret
pxor
add
inc
scas
rolb
loop
mov
in
ret
sub
mov
movsb
mov
movsb
sbb
js
fdivp
mov
inc
add
sbb
lret
add
mov
sub
lret
sub
stc
lcall
add
ja
icebp
jbe
sub
xchg
and
ljmp
mov
add
mov
add
ja
sbb
add
fistpl
hlt
push
cmpsl
int3
xchg
out
lock
add
fcom
add
pop
fwait
leave
notb
cmc
mov
jne
pop
outsl
jns
push
cmpsl
jns
cmc
ds
push
add
add
add
add
fstpl
cmp
sub
or
add
mov
mov
cmp
stos
addr16
arpl
add
fists
mov
sub
data16
sub
popa
or
mov
fildl
arpl
add
add
lods
lock
adc
mov
and
jne
flds
aas
xchg
push
in
jecxz
mov
test
mov
sbb
data16
fcomp
lret
cmp
mov
xchg
add
mov
add
mov
add
mov
xor
ret
mov
cltd
and
mov
add
adc
lea
rolb
mov
sbb
xchg
unpckhps
dec
push
inc
add
incb
add
inc
add
jge
and
mov
or
pop
and
mov
mov
add
mov
dec
cmpsb
sub
rolb
mov
lret
add
movsb
das
adc
mov
mov
push
hlt
cmc
nop
add
push
pop
or
add
sbb
sbb
pushf
inc
xchg
pusha
add
scas
test
push
repz
add
mov
add
add
mov
addl
sbbl
xchg
mov
add
jbe
ret
adc
mov
mov
pushf
lods
mov
fs
pop
test
jge
popa
mov
cli
mov
mov
lret
clc
fisttpl
std
dec
ljmp
pusha
add
add
and
add
mov
imul
jg
add
icebp
stos
mov
add
add
icebp
jbe
cmpsl
xor
dec
mov
mov
dec
daa
lock
pusha
add
adc
mov
or
js
dec
insl
gs
xchg
inc
daa
jbe
push
add
mov
mov
mov
add
jecxz
add
repz
nop
add
add
ds
mov
mov
xchg
sti
xchg
ret
xor
mov
jbe
adc
or
add
mov
addb
in
iret
jns
fldt
out
add
cmpsl
pop
add
mov
lock
add
add
jp
mov
inc
sbb
addb
rolb
mov
and
out
inc
int3
ljmp
jl
ss
add
mov
mov
sub
adc
xor
mov
add
loope
mov
mov
or
repz
add
das
xor
pop
out
cmpsb
or
dec
dec
aam
or
inc
fidivrl
rolb
test
dec
lods
mov
xchg
and
cmpsb
jns
add
cmp
add
xchg
rcr
xchg
cmp
testb
mov
add
mov
add
and
add
add
mov
mov
daa
leave
ja
popf
call
add
inc
je
lea
popa
pop
adc
fisttpl
or
mov
in
pushf
pop
xchg
jmp
mov
pop
push
mov
mov
push
and
pop
in
pop
inc
xor
data16
cmp
mov
into
push
mov
mov
pop
movsb
icebp
xor
mov
jbe
in
mov
fcoml
outsl
xchg
xor
mov
add
mov
pop
or
leave
pushf
aam
rolb
mov
jo
mov
mov
jle
lcall
mov
jo
mov
fwait
push
scas
sbb
add
dec
mov
push
add
add
sub
jecxz
xchg
add
std
mov
aaa
jp
insl
xchg
outsb
in
adc
repnz
mov
mov
push
popa
pop
pop
add
xchg
sub
push
sti
cmp
mov
inc
sub
scas
sahf
and
rolb
mov
dec
mov
loopne
mov
cs
dec
nop
add
sbb
jae
popa
adc
mov
imul
cld
push
addr16
fstl
mov
jbe
pusha
add
das
inc
jp
mov
iret
add
mov
mov
adc
int3
daa
sub
pop
mull
inc
je
lock
mov
mov
add
notl
iret
in
out
filds
aas
push
sbb
jmp
dec
dec
sbb
lcall
add
mov
adc
mov
and
dec
cli
cmp
fbld
or
mov
lahf
push
addb
xchg
in
into
adc
sbb
cmp
add
imul
dec
sbb
jl
pushl
add
outsl
enter
dec
adc
pop
add
out
add
mov
add
fwait
sbb
xchg
adc
mov
cmp
das
cmp
jmp
jno
cmp
movsb
xor
cmp
and
stc
pop
das
stc
movsb
xchg
aad
lcall
divb
and
add
sbb
rolb
pop
daa
lods
cmp
or
ret
sub
stos
mov
addb
addl
in
popf
shl
cmp
loop
mov
sub
push
clc
cmc
push
add
xchg
jo
mov
mov
xor
add
mov
adc
mov
icebp
mov
bound
mov
xchg
cmpsb
inc
shrl
pop
sbb
aas
push
add
add
popf
hlt
cmp
add
out
rolb
mov
add
push
mov
sub
icebp
psrlq
test
mov
idiv
lret
std
iret
or
jecxz
mov
subl
insl
in
rolb
mov
add
int3
repnz
or
mov
or
add
mov
rolb
addl
mov
rcrl
fidivs
add
add
imul
in
aas
mov
push
push
push
dec
out
cld
push
xchg
popl
jl
add
jle
adcl
loopne
mov
mov
or
mov
call
rolb
xchg
ss
cltd
push
and
mov
push
mov
mov
mov
scas
dec
and
mov
sbb
pop
iret
sub
ds
call
subl
xchg
push
add
rorl
xchg
pop
iret
xchg
and
mov
xchg
lahf
and
mov
repnz
and
sub
adc
mov
adc
sbb
rolb
mov
mov
xor
mov
sbb
add
cmp
or
scas
js
cmp
gs
add
mov
pop
mov
push
dec
loopne
mov
add
insb
lahf
adc
sub
ljmp
cmc
inc
inc
add
adc
mov
sub
mov
rcr
repnz
add
sbb
dec
cli
add
ror
dec
pop
add
das
outsb
mov
mov
fcmovu
dec
subl
xchg
mov
mov
pop
lock
jecxz
add
cmp
and
add
dec
out
mov
movsb
icebp
lcall
mov
mov
pop
into
clc
cli
lret
mov
ret
cmp
lcall
mov
mov
adc
jns
inc
js
add
push
jne
aam
or
push
dec
mov
cltd
test
rolb
mov
cmpsb
fs
sub
sub
shrl
sub
and
pop
dec
pop
pop
je
les
and
mov
dec
inc
fisttpl
fnop
add
mov
jecxz
pop
iret
rolb
mov
mov
mov
dec
or
jns
mov
mov
add
mov
add
push
lods
jecxz
dec
sbb
mov
add
cmp
push
sbb
inc
lods
xchg
pusha
add
mov
repz
add
add
arpl
fmull
push
addr16
test
or
out
sub
dec
or
and
mov
cmp
mov
mov
sarl
lds
test
adc
sub
mov
imul
xchg
add
mov
lods
lahf
dec
leave
xorl
mov
mov
add
sarl
in
arpl
scas
sahf
sub
and
mov
mov
mov
mov
xor
mov
test
fs
add
in
add
mov
jp
jns
add
pop
jg
movsl
mov
std
mov
or
arpl
mov
loop
mov
popf
out
lods
pop
call
je
gs
test
pop
jbe
add
mov
xchg
ja
sbb
jecxz
pop
loope
rolb
mov
adc
mov
rolb
mov
mov
mov
lods
sub
jns
inc
xchg
adc
add
loope
enter
mov
sbb
shr
mov
push
and
push
add
aas
jg
mov
add
mov
jae
jl
add
mov
or
sbb
jnp
iret
jle
scas
mov
add
add
aas
xchg
push
aad
dec
enter
int3
pushf
sbb
xchg
and
dec
out
mov
push
jb
mov
scas
sub
fdivr
lea
icebp
inc
dec
mov
adc
mov
add
cwtl
loope
add
or
adc
mov
add
push
xchg
xchg
add
pusha
add
in
movsl
dec
xchg
sub
mov
clc
repz
mov
outsl
mov
addr16
jne
add
mov
addr16
ret
leave
add
imul
movsb
and
mov
inc
add
mov
insb
cmp
add
mov
pop
outsl
ja
or
or
ja
ja
jo
mov
add
mov
mov
and
mov
arpl
and
mov
mov
push
scas
je
stos
xlat
repnz
cmp
add
aaa
imul
popf
push
loop
mov
push
mov
mov
xchg
mov
fldt
in
cmp
add
mov
xor
and
rcll
data16
add
jns
loopne
mov
add
insl
mov
imul
ja
dec
repnz
rolb
cmp
mov
push
ss
mov
pop
xor
mov
pop
adc
pop
sub
pop
incl
in
push
mov
or
loop
mov
ja
mov
cltd
das
mov
inc
xchg
popfw
frstor
cmpsl
rolb
mov
mov
fcomps
mov
sbb
flds
add
mov
sub
add
cli
lcall
clc
jp
loope
insl
cmc
mov
insl
push
mov
add
jle
add
out
jne
dec
int3
clc
les
sbb
jnp
mov
add
fwait
pop
adc
mov
add
decb
push
add
adc
cltd
lods
jno
mov
jb
mov
data16
add
mov
mov
xchg
adc
and
mov
lea
movsl
jb
mov
mov
push
add
addb
movsb
out
stos
cwtl
cmp
push
jnp
scas
jns
xchg
scas
in
aad
add
mov
dec
cltd
stos
in
jmp
add
fcompl
outsl
xlat
cmp
pop
call
mov
push
dec
insl
jae
add
pop
lret
lods
mov
mov
daa
xor
xchg
add
mov
leave
mov
sub
add
mov
mov
clc
xchg
sti
pushf
lret
xor
mov
insb
std
inc
add
call
adc
pushf
mov
xor
mov
or
fcmovnb
pop
push
lods
int
add
add
das
testl
and
inc
mov
jb
mov
jmp
push
push
pop
inc
mov
cmpsb
pop
sub
mov
mov
mov
mov
mov
lds
xor
mov
movl
test
adc
mov
adc
xchg
popa
sti
push
pop
inc
add
add
std
adc
mov
mov
adc
push
fs
rolb
mov
rcl
dec
stos
or
jg
add
scas
and
stc
loop
mov
mov
pushf
jb
mov
mov
mov
add
dec
mov
out
inc
add
popa
cltd
ss
dec
loopne
mov
jp
adc
pop
inc
ret
pushf
and
mov
das
mov
mov
add
jle
dec
cmovns
cs
push
jo
mov
icebp
jg
add
push
repnz
cmp
insl
jno
or
push
xor
mov
lock
xchg
sahf
jae
outsl
push
mov
xchg
ret
sub
cmpsb
jno
and
mov
loop
mov
jo
mov
sub
mov
pop
imul
sub
mov
mov
mov
cmovae
lds
pop
dec
pop
fnstcw
imul
xchg
fdivr
je
rolb
mov
xchg
push
jge
lcall
jge
add
subl
mov
sub
fimuls
xchg
je
cmp
add
or
rolb
mov
shll
add
add
mov
mov
fwait
ret
stc
mov
mov
sub
add
and
fwait
xor
mov
sub
mov
jne
les
mov
xor
jae
xchg
add
add
fadds
sub
mov
mov
mov
mov
nop
add
mov
pop
and
jnp
push
push
in
xor
fists
daa
jno
lret
mov
mov
cwtl
lods
inc
add
sti
test
xchg
clc
jle
xchg
repnz
cmpsl
cmp
hlt
inc
pop
icebp
pusha
add
dec
mov
pushf
and
mov
xchg
ret
mov
mov
loop
mov
mov
push
cmc
frstor
cmp
sti
cmp
dec
adc
mov
scas
push
bound
mov
cmp
pushf
sub
add
mov
movsl
jbe
ret
inc
add
mov
pop
mov
push
add
push
out
inc
pop
jl
fnstenv
add
add
add
ficoms
mov
sub
mov
das
and
lods
insl
nop
add
add
add
xchg
stos
scas
lret
mov
push
pusha
add
or
arpl
mov
mov
insl
add
mov
mov
mov
jmp
jecxz
sub
cld
daa
jae
inc
xlat
nop
add
jl
inc
add
xchg
mov
inc
add
add
mov
xchg
add
jno
dec
out
sbb
jbe
xchg
pop
jnp
sub
lock
ds
dec
mov
or
sahf
push
add
into
and
or
push
nop
add
hlt
pop
adc
mov
movsl
and
loope
jnp
jecxz
mov
mov
mov
push
inc
test
mov
push
in
test
clc
js
dec
movsl
jnp
add
repz
outsb
popf
mov
scas
fwait
sub
call
jg
in
ret
adc
mov
add
fsubs
or
daa
mov
mov
mov
lcall
insb
mov
mov
ljmp
mov
cmp
pop
ds
popf
lea
ja,pt
xor
js
inc
lret
aas
dec
add
or
xchg
dec
mov
mov
jmp
clc
add
cltd
outsl
cld
cmp
push
rcrl
mov
mov
cli
hlt
jmp
mov
mov
into
cmp
in
movsb
push
movl
mov
repz
hlt
xchg
sub
cmpsl
fsubl
iret
aam
popf
inc
add
add
cli
push
data16
inc
test
in
cmpsl
pushf
dec
cmp
xlat
and
mov
push
scas
or
imul
stos
mov
push
add
inc
add
mov
ret
incb
mov
loop
mov
fwait
mov
daa
xchg
push
mov
mov
fistpl
testb
cmp
fucomp
iret
sti
jg
les
mov
add
shl
add
jl
aam
and
sarl
xor
dec
push
mov
pop
mov
mov
out
xchg
push
rolb
mov
mov
xor
cwtl
mov
es
sbb
dec
mov
out
mov
sub
inc
adc
das
inc
stos
add
and
mov
add
mov
and
int
mull
mov
mov
add
ss
mov
sub
ss
aas
out
cs
out
mov
and
pop
lock
push
mov
movsl
sub
jb
mov
fs
sub
xor
cli
loope
xchg
cmpsb
mov
clc
xchg
add
push
mov
add
jnp
push
mov
mov
xlat
js
mov
dec
flds
push
add
sarl
add
stc
sbb
add
mov
add
adc
mov
pop
adc
mov
lret
and
add
add
pop
xchg
repz
mov
mov
out
cmp
repz
add
lret
in
inc
addb
rolb
mov
inc
sbb
call
xchg
iret
xor
test
repnz
pop
ret
jg
out
ljmp
mov
decb
xor
and
xor
mov
stos
out
jne
bound
mov
movl
fdivs
rcr
jmp
sub
add
bound
mov
or
adc
mov
mov
add
cmp
adc
mov
add
mul
sbb
shll
sbb
out
addb
enter
add
jo
mov
and
mov
sbb
imul
addb
push
pop
xor
sahf
inc
add
sub
push
add
mov
xor
dec
and
inc
add
pop
jmp
cs
xchg
in
into
lods
jnp
mov
mov
adc
sti
jp
inc
push
xor
add
xchg
stc
sub
fsub
jno
outsl
insl
mov
xchg
in
std
in
add
out
add
inc
and
mov
mov
sub
addb
mov
pop
pop
arpl
loope
aam
add
mov
xchg
daa
das
idiv
jns
add
loopne
mov
push
addb
aaa
sbb
idiv
lods
xchg
aas
testl
cli
cwtl
lea
out
jle
mov
xchg
cmp
add
add
arpl
jne
nop
add
pop
sub
je
enter
add
or
mov
mov
mov
fwait
dec
mov
fsubr
jl
add
xor
add
mov
add
xchg
add
push
daa
dec
sets
push
rcl
out
je
and
mov
sti
dec
cmp
push
jns
test
add
add
stos
mov
es
sbb
mov
xor
sub
push
out
hlt
lahf
adc
jl
add
insb
or
popa
int
cli
shrl
sub
sub
arpl
push
arpl
repz
mov
call
icebp
jne
adc
mov
repnz
andl
push
test
iret
mov
add
std
push
push
imul
mov
fwait
push
scas
rcrl
fsubrs
add
mov
cli
bound
mov
adc
mov
out
and
repnz
out
xchg
pop
and
or
popa
in
fwait
out
add
lea
mov
nop
add
adc
mov
push
icebp
xchg
add
rolb
adc
add
stos
aad
call
mov
push
xchg
cmpsb
scas
mov
mov
mov
xchg
add
mov
das
jb
mov
mov
xor
mov
loopne
mov
popf
sub
sub
fcmovb
push
jle
and
mov
mov
xor
dec
jno
and
add
outsb
lahf
movsl
addl
adc
add
mov
addb
add
cmp
or
pop
out
pop
rolb
push
or
cwtl
stc
and
out
jbe
pusha
add
hlt
cld
xchg
mov
mov
add
mov
rol
inc
adc
mov
stos
dec
lock
insl
and
mov
mov
add
stos
rolb
mov
jecxz
xchg
mov
add
mov
mov
add
mov
insb
mov
mov
sub
cmpsb
dec
bound
mov
aad
xchg
mov
pop
test
les
add
sbb
mov
mov
bound
mov
mov
lcall
addb
aas
mov
push
add
push
add
mov
mov
xchg
sbb
add
inc
outsb
adc
add
mov
rolb
mov
jg
add
adc
mov
add
push
or
mov
or
lods
mov
mov
rcll
add
dec
inc
add
sbb
fnstcw
idivl
inc
add
add
pop
mov
adcl
sahf
mov
push
iret
xor
mov
pop
mov
rolb
int3
xchg
mov
arpl
add
lcall
add
loopne
mov
rolb
mov
and
mov
mov
mov
cld
xor
mov
roll
pop
pop
push
scas
negl
or
test
mov
mov
das
push
add
mov
add
jmp
sub
mov
mov
insl
mov
mov
sti
or
lods
xchg
mov
test
xor
mov
inc
gs
mov
int
in
mov
adc
mov
lods
les
decl
out
push
xchg
xchg
divb
add
in
into
xchg
jno
ret
popf
sub
add
push
roll
mov
mov
enter
lret
iret
flds
out
push
dec
popa
cmpsb
pop
icebp
lret
xor
lea
add
add
subl
movsl
mov
mov
mov
inc
lds
jmp
in
das
jge
hlt
add
add
add
mov
in
jmp
loop
mov
adc
out
popf
dec
negl
push
faddl
icebp
xchg
repnz
sub
test
cmp
dec
jmp
mov
mov
add
ljmp
xor
repnz
mov
mov
mov
push
fsubl
inc
cld
lods
in
and
mov
add
add
adc
and
fwait
insl
jle
and
lcall
dec
outsb
mov
or
stos
adc
mov
cmpsl
cld
and
cmp
adc
add
jno
in
add
mov
mov
add
mov
push
adc
lret
mov
ljmp
enter
add
mov
fdivl
adc
lds
push
adc
add
fadds
cmp
or
popa
mov
out
mov
in
addr16
andl
loopne
mov
mov
add
jge
mov
push
push
dec
or
fidivrl
aam
vunpcklps
add
push
xchg
fcmovnu
fs
mov
ret
push
ss
jne
int
inc
dec
push
sub
and
inc
add
sbb
jl
add
mov
lods
popa
daa
lds
jae
add
xor
pusha
add
aam
loopne
mov
xchg
sbb
push
lods
sbb
out
es
xchg
sar
mov
mov
add
add
add
lret
mov
ljmp
sub
lret
mov
addb
mov
add
push
mov
add
add
add
dec
jmp
pop
decb
sbb
mov
dec
fs
mov
lods
jmp
lahf
loope
aad
dec
xchg
fs
add
xchg
add
aad
pop
jg
jbe
mov
ljmp
mov
je
adc
inc
outsl
adc
add
push
mov
xor
add
lret
push
ret
lea
cld
rolb
mov
sbb
sahf
cmp
pop
xor
mov
add
pop
add
mov
mov
jb
mov
pop
jge
pop
pop
daa
popl
adc
mov
inc
mov
ds
sbb
add
repz
mov
sbb
dec
clc
mov
xchg
or
mov
jmp
mov
mov
fwait
cli
dec
mov
lret
rolb
mov
icebp
inc
dec
fwait
add
add
add
fisttps
notb
inc
xor
aad
aad
sub
and
push
pop
and
fisubl
add
jne
addb
call
pop
int
push
jbe
add
xor
mov
hlt
sbb
add
add
mov
mov
dec
in
test
mov
mov
add
add
lods
jl
fsubrl
cmpl
mov
push
mov
mov
mov
imul
aam
or
mov
enter
add
xor
mov
push
add
cs
hlt
aad
push
add
push
adc
mov
das
push
pop
loopne
mov
sahf
xchg
push
pop
fadds
addb
jmp
sbb
jnp
cmp
in
jae
jge
bound
mov
sub
add
addb
leave
pop
pop
push
faddl
out
js
dec
jecxz
and
nop
add
sbb
je
fiaddl
add
mov
mov
int3
mov
int
scas
test
ret
loop
mov
sbb
lcall
add
cmpsb
aam
addl
push
ret
xor
repz
lea
mov
add
outsb
fwait
lock
loopne
mov
loop
mov
out
lods
sbb
cwtl
push
dec
lea
push
mov
fbstp
int
add
imul
mov
push
inc
sbb
push
xchg
and
add
jno
pop
in
pop
push
jne
aad
xchg
out
lret
dec
jecxz
addr16
or
and
add
mov
sbb
pusha
add
mov
pop
leave
ljmp
mov
jg
xchg
add
and
push
out
and
mov
mov
xor
fsts
xor
or
testl
lock
std
mov
cmp
add
dec
jno
jnp
les
inc
fists
mov
rolb
mov
add
bound
mov
add
mov
add
mov
pop
icebp
pushf
dec
xchg
lahf
rolb
mov
sub
mov
cmp
ja
or
lahf
icebp
adc
mov
add
mov
mov
rolb
mov
cmpsl
jmp
xlat
sbb
filds
add
lea
add
sub
movsb
sbb
enter
mov
aam
mov
outsl
ret
mov
add
mov
pusha
add
add
mov
loope
hlt
lods
dec
pushf
pop
cmp
add
or
push
mov
mov
or
lds
rcrl
adc
mov
and
mov
lods
and
mov
mov
enter
and
lds
mov
mov
push
add
xchg
add
mov
outsl
test
aad
add
popf
inc
sbb
sbb
lret
adcl
cli
call
add
out
fdivrs
xchg
outsl
xchg
test
jae
fwait
clc
cwtl
rolb
mov
mov
ds
xchg
add
fsub
adc
mov
sbb
ficompl
pop
aad
lcall
cmp
xor
jns
add
mov
mov
lods
inc
pop
jle
lock
add
cmp
sbb
add
xchg
add
push
xor
mov
pop
popf
jp
mov
add
loope
jge
mov
hlt
inc
add
addb
je
add
pop
jge
add
or
test
popf
cmpsb
xchg
imul
add
test
addr16
loope
lea
or
jb
mov
addb
sub
sbb
scas
mov
cmp
ja
and
loope
add
ret
in
fldcw
fucomip
addb
pop
add
mov
adc
ljmp
les
cli
mov
lods
pop
insb
das
daa
mov
dec
push
pop
popa
outsl
outsb
dec
cmp
mov
fisubrs
add
scas
retw
es
cmc
jno
mov
add
mov
add
pop
or
inc
xor
pop
mul
mov
das
sbb
lret
outsb
sbb
jmp
mov
insb
fidivs
mov
rolb
ret
cwtl
inc
pop
mov
lods
out
jl
add
add
add
fbstp
in
xor
mov
xor
and
add
mov
sub
jg
or
test
mov
add
dec
xchg
adc
mov
scas
rcr
push
add
pop
mov
negb
cmp
icebp
cmc
sub
pop
int3
imul
add
sub
add
mov
addr16
add
jb
mov
pop
insl
mov
mov
ljmp
inc
insl
in
imul
mov
add
jp
iret
mov
add
shll
lock
add
dec
fmulp
jo,pt
mov
xlat
jne
dec
mov
mov
mov
jo
mov
jle
loopne
mov
mov
mov
int
les
xor
push
stc
and
dec
repz
and
mov
out
jns
pop
inc
xchg
sub
add
add
mov
pop
xchg
pushf
pop
loopne
mov
add
mov
cmp
andl
add
xchg
add
mov
add
mov
and
insl
mov
in
sub
ret
sahf
fisubrs
add
mov
mov
jne
popf
mov
subl
add
jmp
lcall
mov
mov
mov
sub
dec
add
mov
mov
pushf
stos
outsl
inc
push
and
mov
add
shr
jg
mov
jge
dec
jnp
mov
js
xchg
std
mov
call
pushf
xor
mov
jno
sub
xor
add
xchg
adc
mov
xchg
inc
pop
lret
sbb
hlt
scas
mov
mov
das
dec
es
pop
incl
fistps
push
aaa
ucomiss
add
add
add
mov
mov
mov
lock
add
ds
mov
add
clc
repz
jns
add
mov
mov
out
push
in
loopne
mov
and
fs
and
in
stos
dec
mov
and
add
cld
adc
add
jo
mov
ljmp
mov
add
jmp
fs
orl
movsl
lds
lea
jo
mov
sub
int
int
pop
sbb
pop
dec
mov
add
dec
in
push
mov
add
pop
ret
in
enter
add
sarl
add
mov
js
add
cmp
mov
adc
mov
out
xor
add
and
fsubs
movsl
cmpsl
dec
rolb
mov
dec
scas
scas
sub
test
sub
inc
and
add
jo
mov
add
add
call
mov
addb
stos
nop
add
imul
bound
mov
push
mov
ret
scas
iret
loop
mov
add
in
insb
lea
iret
loopne
mov
push
xor
add
fsts
ss
add
mov
mov
gs
add
sbb
add
mov
out
xchg
push
mov
lahf
cmp
cmpsb
out
sbb
xor
outsb
ljmp
aad
shrd
or
mov
mov
xlat
pop
rolb
mov
cmpw
add
dec
and
mov
jbe
xor
mov
add
add
pop
test
repnz
mov
mov
aam
not
add
dec
add
mov
idivb
cmc
insl
fwait
in
stos
add
movsb
sub
insl
xchg
add
mov
repz
mov
cmpsl
mov
addr16
test
push
in
std
das
and
jge
outsb
js
mov
movsl
sub
dec
push
lods
pop
mov
mov
mov
mov
cmp
lea
jb
mov
addr16
push
jo
mov
jp
add
inc
pop
cmp
repnz
stos
movsb
push
aaa
mov
mov
mov
mov
lods
cli
inc
ret
or
mov
rolb
mov
mov
jg
into
cmp
test
jae
mov
data16
test
mov
das
inc
jmp
cmp
pop
aam
jbe
or
pop
dec
adc
mov
xchg
sub
inc
push
insb
stc
shrl
add
sbb
add
cmp
xchg
psubsb
mov
loop
mov
add
or
sub
js
add
mov
insb
pop
mov
es
pop
lea
addb
loopne
mov
mov
lahf
xlat
fcmovbe
fldt
mov
sub
je
icebp
test
or
dec
mov
aaa
push
or
inc
gs
int3
mov
pop
jecxz
jnp
sti
orl
outsl
pop
jle
daa
or
pop
loop
mov
mov
pop
mov
jg
inc
add
sahf
push
xchg
mov
xchg
icebp
xchg
jmp
add
mov
jbe
cmp
arpl
fmul
movsb
jb
mov
fsubrl
mov
jg
adc
dec
fstl
add
adc
mov
ss
add
add
rol
lds
fildl
sbb
mov
push
rcrl
sbb
rolb
mov
push
jmp
test
mov
jp
addr16
push
jbe
outsl
jno
add
mov
mov
insl
jmp
mov
fstps
je
adc
add
lock
sbb
cli
fists
stos
xor
mov
mov
add
mov
in
ss
mov
dec
jl
add
fidivrl
aam
insb
xchg
in
test
std
loop
mov
lds
pop
shll
aam
add
mov
mov
mov
jle
cmp
mov
mov
adc
push
adc
sub
cwtl
cmp
push
jge
push
push
movsl
test
xor
mov
pop
mov
sahf
adc
mov
mov
sar
lea
add
loop
mov
pop
sub
stos
aaa
cmp
cmc
or
add
jge
std
jmp
addb
pop
rolb
lea
push
mov
adc
mov
push
push
daa
mov
push
add
push
pop
add
push
cmp
push
repz
daa
push
add
jl
add
pusha
add
push
push
addr16
popf
mov
lock
add
stos
pop
jg
sub
add
mov
push
add
fsubr
cmp
inc
add
jno
add
mov
jbe
pop
fs
movsl
sub
cmp
outsb
aam
xchg
nop
add
and
popf
pushf
stc
rolb
mov
mov
and
mov
daa
adc
mov
cmpsl
or
push
repz
add
or
in
fcomp
pop
and
daa
test
jge
aas
mov
stos
fsubrp
push
lret
scas
pop
call
pushf
dec
mov
mov
xor
sbb
mov
mov
mov
lret
mov
rolb
cmpsb
xor
jnp
cmpsb
mov
mov
or
scas
mov
js
and
movsb
add
push
rolb
mov
cmp
dec
in
mov
mov
addb
push
out
sbb
loope
lret
sub
add
xor
mov
push
lret
mov
movsb
js
pop
rolb
mov
rolb
mov
rolb
mov
mov
fs
inc
jle
add
cwtl
in
inc
xchg
add
jecxz
add
sbb
out
pop
or
sbb
push
sbb
subl
cmp
pop
in
pusha
add
add
lds
jb
mov
jge
pop
xchg
repnz
jmp
aas
test
inc
stc
cmc
into
in
add
lret
out
in
push
push
dec
aad
mov
fmull
add
mov
cmp
je
imul
add
bound
mov
mov
sub
insb
inc
push
cmpl
inc
rorl
mov
add
adc
mov
dec
addb
jp
ds
loop
mov
add
inc
out
add
fmul
fsubr
lcall
mov
mov
pop
add
mov
push
movsl
jb
mov
push
xchg
pop
push
push
add
aaa
xchg
add
addb
dec
dec
mov
mov
mov
add
repz
lret
fwait
daa
pop
xor
mov
push
mov
sbb
dec
test
shll
mov
jo
mov
dec
dec
dec
push
add
daa
mov
fistpl
mov
mov
xchg
stc
out
dec
or
add
push
push
bound
mov
rorl
inc
push
int3
cmpsl
lahf
push
sbb
ss
bound
mov
cs
mov
rorl
dec
shll
dec
mov
cld
sbb
xchg
pushf
paddusb
inc
mov
or
or
mov
lock
pop
mov
xchg
addl
jecxz
push
or
imul
push
rolb
imul
pop
jnp
add
mov
mov
addb
sub
loope
add
inc
jae
add
inc
add
add
add
mov
fdivp
cwtl
xor
or
push
mov
rolb
dec
loop
mov
fnstsw
and
mov
mov
lods
jbe,pt
lea
and
mov
push
fcomps
sbb
andl
addr16
mov
or
mov
lcall
ljmp
add
mov
cmp
cmpsb
and
mov
aam
es
aam
push
inc
mov
test
aad
popa
push
sub
add
fiadds
mov
cmp
sbb
jno
or
xchg
cmpsb
fnstcw
mov
adc
mov
sahf
das
loopne
mov
repz
mov
nop
add
pop
fbld
mov
mov
mov
jp
cmpsb
je
and
mov
rcll
test
aaa
cmp
lea
jg
add
out
ljmp
es
cmp
jp
add
pop
mov
mov
mov
dec
mov
loop
mov
fsubrp
jb
mov
rolb
mov
mov
add
add
cld
sub
cmp
inc
sbb
add
addr16
mov
mov
xor
jnp
add
popf
out
aaa
daa
pop
movsl
repz
out
les
add
rolb
mov
push
std
pop
loop
mov
pop
lods
xchg
add
pop
xlat
jg
jmp
leave
cmp
add
add
or
popf
movb
push
cmpsb
pop
cmp
inc
add
fiaddl
jmp
mov
cmpsl
xor
mov
xchg
cmp
add
mov
pop
adc
mov
add
mov
ja
shr
and
mov
mov
stos
addb
jno
mov
fucomi
test
mov
addb
cld
dec
mov
add
add
add
mov
mov
mov
push
pop
les
dec
movsl
int
jns
add
jmp
cltd
fidivrl
and
mov
rolb
mov
mov
add
pushf
sar
jbe
outsb
in
mov
mov
sub
xchg
add
mov
pop
sub
ds
loopne
mov
loop
mov
add
mov
cmp
add
fsubp
xchg
push
mov
mov
cs
in
adc
dec
mov
fdivl
add
lods
loopne
mov
cmp
aaa
mov
mov
and
mov
pop
pop
cmp
xor
add
add
addb
adc
mov
add
out
aad
add
add
xor
out
sub
loopne
mov
stc
adc
loopne
mov
popa
cmp
leave
sbb
fs
add
pop
mov
add
mov
add
test
add
adc
mov
cmc
loop
mov
mov
add
add
daa
es
cmpsl
xchg
xchg
push
add
add
or
and
arpl
mov
add
add
add
add
mov
mov
jbe
push
inc
sub
mov
aad
mov
and
add
mov
xor
xor
stos
mov
add
std
dec
shll
mov
inc
add
mov
cs
xor
push
aam
movsb
rolb
mov
flds
mov
mov
mov
fcmovnb
lret
add
mov
pop
sbb
lock
iret
mov
mov
add
sahf
call
xor
jb
mov
add
add
movsl
test
nop
add
pop
add
rolb
mov
in
push
aas
pop
repz
ds
test
add
cli
mov
add
mov
add
add
mov
mov
pusha
add
aam
inc
add
mov
bound
mov
add
pop
dec
pop
cli
repz
jg
out
jbe
inc
add
add
enter
mov
and
xchg
dec
pop
mov
mov
adc
mov
dec
rolb
mov
int3
jg
add
mov
sarl
jnp
arpl
xchg
sub
mov
addb
movsl
data16
xchg
add
jo
mov
mov
mov
shll
fistps
and
add
inc
adc
cmp
add
test
je
jecxz
and
loop
mov
mov
ss
int
lds
inc
iret
lds
xchg
les
dec
mov
scas
icebp
fnstenv
add
jle
pusha
add
add
pop
scas
stos
shrl
pushf
imul
call
leave
sub
add
push
mov
ffree
bound
mov
loope
add
mov
pop
cmp
push
cmp
mov
sbb
aam
rolb
mov
mov
dec
cld
mov
shld
cmpl
add
add
pop
cli
sbb
pop
icebp
add
pop
aad
pop
rolb
adc
incl
add
pop
aas
pushf
rolb
mov
stc
fdivs
sbb
dec
or
add
mov
fmulp
jle
add
mov
add
jb
mov
mov
xlat
flds
mov
inc
movsl
mov
loope
or
push
adc
mov
push
movsl
pushf
xchg
int
dec
jno
push
add
pop
out
sub
mov
inc
add
add
mov
gs
xchg
ds
rolb
enter
mov
mov
push
add
call
add
xor
dec
pop
pusha
add
sbb
xor
pop
nop
add
or
pushf
imul
imul
fisubs
jmp
mov
add
jbe
jl
add
or
add
inc
aaa
pop
pop
jno
negl
xchg
jl
jbe
add
mov
in
ffreep
imul
add
sbb
jno
fnstsw
xor
addb
cmpsl
and
mul
push
mov
add
ljmp
bound
mov
inc
add
mov
sub
aaa
inc
mov
mov
cmpsb
and
or
sbb
dec
mov
xor
mov
add
adc
mov
movsb
data16
add
lods
cmp
add
push
out
fists
add
out
mov
bound
mov
inc
add
into
lahf
cltd
rolb
mov
push
addb
outsl
pop
mov
push
loopne
mov
loop
mov
push
lcall
pop
adc
mov
add
mov
dec
pop
insl
cs
repnz
inc
inc
popf
cmpsb
push
stos
sub
jg
pop
test
or
insb
cwtl
fnstenv
mov
inc
add
mov
cmp
out
stc
in
jp
cwtl
jbe
repnz
jg,pt
xchg
add
mov
iret
aad
lret
adc
mov
jge
outsb
int3
lahf
pop
mov
outsb
arpl
and
mov
cs
push
aam
pop
mov
mov
dec
jl
add
data16
into
enter
mov
add
jle
inc
je
add
mov
icebp
rol
add
aam
or
imul
std
xor
cmpsl
sbb
loop
mov
dec
add
xchg
aas
dec
scas
stos
add
xor
add
mov
add
mov
add
add
cltd
mov
mov
inc
imul
movsl
cmp
mov
pop
or
cmp
add
mov
xor
inc
inc
xchg
mov
pop
test
sub
mov
mov
mov
jg
push
xor
fcomps
pop
stos
call
mov
mov
in
dec
addb
mov
add
hlt
aas
push
mov
rol
sub
cli
addr16
cmp
mov
mov
aas
sbb
jl
repz
add
scas
add
mov
mov
xchg
lds
mov
lahf
cmp
lods
mov
pop
scas
lret
mov
cltd
mov
sub
mov
dec
pop
push
and
add
xor
mov
pop
inc
hlt
dec
jae
push
add
push
bound
mov
add
mov
ss
xchg
in
out
je
xchg
xchg
sub
icebp
divb
and
mov
mov
jno
xchg
push
add
adc
mov
push
icebp
fsubrl
or
sbb
add
aam
add
xor
mov
repz
and
insb
dec
dec
jmp
mov
adc
push
out
outsl
cmpsb
aaa
cmp
leave
mov
xor
or
out
sub
mov
lods
pop
cwtl
inc
add
sbb
add
mov
sbb
jmp
mov
push
jge
add
mov
hlt
jg
mov
and
mov
mov
sub
xchg
push
daa
sbb
jg
add
add
pop
ljmp
inc
loop
mov
mov
mov
add
mov
mov
add
cld
out
in
or
in
movsl
stos
js
inc
out
xor
add
cmp
add
imul
mov
nop
add
in
popa
pop
push
rcr
and
mov
addr16
add
arpl
cltd
rolb
mov
mov
inc
cwtl
xchg
mov
mov
cs
lret
paddb
mov
das
inc
repnz
outsl
daa
pop
push
jae
push
add
sbb
mov
das
mov
lret
scas
arpl
addb
lock
mov
mov
imul
add
jg
cli
jecxz
iret
rolb
nop
add
aaa
imul
jno
call
sub
cmpsb
xchg
sub
es
sub
ret
add
cmp
sbb
add
mov
xchg
add
testl
addr16
push
adc
fstpt
das
sbb
loopne
mov
and
mov
shll
imul
je
add
pop
int
push
out
push
or
mov
cmp
addr16
add
add
addb
and
addr16
mov
and
fdivl
ret
mov
add
xor
mov
pushf
mov
inc
add
cmpsb
sbb
imul
clc
mov
mov
add
iret
add
mov
xor
mov
jb
mov
push
dec
lahf
js
mov
stos
push
lds
pop
pop
lea
sbb
add
pusha
add
push
xchg
xchg
push
je
xor
ret
jb
mov
cmp
lods
jecxz
clc
test
addb
jl
loop
mov
loop
mov
cld
mov
cmpsl
jae
in
add
add
add
mov
cmc
dec
gs
ljmp
lds
push
xchg
add
mov
lods
pushf
ret
nop
add
mov
inc
js
cmp
bound
mov
cwtl
xchg
add
xchg
add
xchg
add
xor
mov
ds
xchg
fdivrs
push
push
jp,pt
xor
and
cwtl
cmpsl
outsb
xchg
filds
imul
ja
adc
mov
mov
es
and
sub
add
ret
dec
cmc
iret
test
push
add
inc
flds
xor
mov
jle
mov
add
push
sub
push
or
mov
add
and
add
push
loopne
mov
outsb
inc
xor
call
jnp
add
xchg
mov
mov
daa
leave
rolb
mov
icebp
sbb
mov
inc
dec
lret
push
add
lods
push
jae
xchg
mov
push
sub
lahf
inc
jg
jbe
and
add
sbb
pop
or
mov
add
jns
test
pusha
add
add
adc
mov
and
add
add
insb
sahf
mov
popa
inc
inc
add
mov
or
cs
mov
push
mov
ds
xor
loope
and
mov
stc
repz
and
mov
mov
scas
mov
loope
loope
xor
mov
mov
movl
mov
aas
or
gs
add
imul
rolb
mov
popf
je
add
pop
insb
cmp
add
filds
je
xchg
dec
int
frstor
mov
and
adc
push
add
add
inc
outsl
adc
pop
shll
add
cwtl
dec
pushf
lods
flds
adc
xor
cmp
xlat
std
sub
loopne
mov
inc
shll
add
inc
sbb
add
cmp
pop
add
push
mov
dec
push
mov
mov
cmp
aaa
pop
lock
arpl
mov
insb
jmp
pop
xchg
add
add
push
adc
fldl
add
mov
dec
push
insb
xor
mov
mov
add
out
imul
sub
add
rolb
mov
inc
lret
xor
cs
sbb
scas
scas
cmp
push
add
and
sbb
nop
add
add
sbb
dec
scas
pop
cmp
fs
das
and
mov
push
movzwl
cld
rolb
mov
pop
lds
add
in
push
add
inc
fldt
je
or
sub
iret
psrlq
xchg
sbb
lods
les
movsb
cwtl
test
xor
cmp
push
sbb
out
sbb
dec
pop
inc
and
data16
repz
pop
cmp
cwtl
stos
pop
das
push
call
mov
mov
mov
cs
sbb
mov
out
jns
das
cmp
cmp
xchg
push
mov
loop
mov
fadds
add
add
leave
mov
add
add
sbb
and
mov
scas
dec
es
leave
fld1
pop
bound
mov
fdivs
bound
mov
lods
pop
inc
jo
mov
jno
push
xchg
ss
inc
add
imul
and
loope
lcall
lock
fisubs
add
mov
lret
xor
lahf
popl
test
mov
add
jo
mov
sbb
in
jmp
dec
cmpsb
insl
sti
lock
jg
jmp
sbb
out
jae
fcmovbe
add
mov
xchg
mov
mov
adc
add
testb
sbb
inc
fs
fmuls
pop
and
mov
or
aaa
push
sub
cmpl
mov
ficompl
jne
xchg
test
iret
jp
push
adc
jb
mov
or
add
mov
gs
call
fimull
cmp
mov
add
push
add
mov
jmp
add
xor
mov
fcoml
mov
jge
and
add
add
