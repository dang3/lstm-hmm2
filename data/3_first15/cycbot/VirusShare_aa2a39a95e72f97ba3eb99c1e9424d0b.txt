stos
add
dec
dec
lock
ja
mov
icebp
int
dec
cmp
popf
pop
dec
xchg
outsb
lcall
xor
pusha
add
les
add
add
cwtl
jg
movb
mov
sti
sub
fwait
mul
add
mov
add
lods
xchg
lods
gs
adc
inc
lods
xor
mov
decl
add
negl
sbb
movb
mov
mov
mov
rolb
cmc
xchg
nop
add
push
add
add
mov
rcr
fdivrs
arpl
sbb
jbe
pusha
add
sub
mov
add
add
inc
or
fcompl
dec
adc
lret
push
add
repnz
test
loopne
mov
jecxz
mov
add
ds
push
push
add
jle
add
jge
mov
pusha
add
xor
pop
repnz
jge
xchg
aas
push
dec
push
subl
add
repnz
add
mov
mov
shll
inc
pop
push
iret
adc
add
inc
add
or
push
add
aad
iret
xor
inc
mov
daa
lahf
fisubrl
mov
fbld
imul
mov
jl
ljmp
add
mov
mov
mov
imul
mov
xor
mov
dec
rolb
mov
addr16
sbb
std
mov
jge
mov
inc
add
add
push
cwtl
adc
add
js
andnps
add
mov
data16
roll
xchg
push
adc
mov
stc
and
mov
cs
mov
negl
inc
add
sub
add
mov
lock
pop
int3
or
lret
add
or
inc
add
or
out
dec
in
inc
add
cli
stos
ljmp
dec
cld
sub
mov
add
or
shll
pop
lahf
loopne
mov
pop
jmp
sub
ds
add
add
pop
jle
add
adc
mov
adc
pop
rcll
sti
sub
or
rolb
push
jnp
add
pop
icebp
out
pop
lods
or
adc
stos
pop
jl
std
cs
clc
addb
add
add
data16
loopne
mov
mov
es
inc
daa
test
inc
es
sbb
pop
in
hlt
scas
mov
add
repnz
into
sbbl
lods
popa
into
fiadds
add
addb
rolb
mov
xor
mov
ficoml
mov
push
xor
and
and
add
or
mov
xchg
dec
xor
mov
sbb
dec
sbb
in
pop
insl
adc
pop
mov
xchg
inc
imul
dec
sub
xchg
dec
xchg
int3
jge
subl
addb
lret
xor
mov
add
and
add
in
xchg
movsl
and
mov
mov
das
add
mov
out
mov
out
add
adc
and
sbb
hlt
inc
add
icebp
rorl
not
add
movb
sbb
mov
add
sbb
add
xchg
add
stc
scas
pop
sbb
rcrl
sbb
popf
jle
in
push
sub
mov
mov
lods
pop
dec
lret
ret
jbe
add
orl
pop
push
add
mov
loop
mov
mov
push
add
cmpsl
test
xchg
add
arpl
mov
mov
add
mov
rcr
sbb
add
add
cmp
pop
mov
pop
sbb
add
pop
sbb
cmc
sub
addr16
inc
aaa
or
data16
mov
out
cs
mull
sbb
jmp
add
rolb
mov
xor
add
mov
mov
xor
mov
adc
mov
out
and
fdivr
sub
mov
mulb
aaa
out
dec
or
add
js
push
xor
lret
mov
xor
add
xchg
in
xor
mov
sub
inc
mov
ljmp
cli
cmp
and
std
add
mov
push
inc
mov
test
mov
xchg
add
mov
jmp
jne
mov
mov
cmp
mov
lods
iret
push
add
out
add
mov
add
mov
add
bound
mov
mov
add
mov
mov
test
leave
mov
insb
loopne
mov
testb
pop
js
inc
add
fneni(8087
add
scas
fdivr
data16
cmc
and
jno
imull
lahf
mov
add
inc
in
jne
cli
push
adc
mov
lods
cld
dec
mov
add
or
int
sarl
ret
xchg
add
or
std
cmp
add
inc
popf
das
outsl
js
mov
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
xor
mov
dec
lods
cmp
bound
mov
sub
dec
loopne,pn
mov
mov
mov
ret
pop
scas
sub
or
aam
xchg
fmuls
jbe
ja
repz
lock
mov
add
popf
int3
xlat
dec
sbb
pop
push
add
pop
outsl
out
inc
je
sub
mov
ffree
add
mov
add
add
ret
xchg
sbb
inc
lods
pop
jo
mov
popa
cmp
mov
jge
add
mov
lock
add
out
sbb
repnz
mov
add
add
pop
add
mov
xor
dec
inc
pop
div
add
daa
aaa
loope
jle
mov
lea
addr16
cmp
xchg
cmp
xchg
pop
or
add
pop
pop
sbb
push
add
jecxz
in
push
dec
or
pop
xchg
push
dec
jmp
push
inc
add
arpl
push
add
mov
and
mov
jae
and
hlt
xchg
sti
push
out
pop
push
ja
add
test
and
and
mov
jl
add
add
cwtl
push
out
sbb
push
add
cmp
xchg
and
xchg
xchg
jb
mov
ds
es
mov
loopne
mov
dec
ret
xchg
in
les
pop
hlt
aam
inc
add
nop
add
movsb
mov
fwait
test
push
add
add
mov
imul
in
fs
mov
je
and
mov
jle
xor
mov
mov
imul
xchg
sub
dec
xchg
lods
int
lock
addl
cs
sbb
sbb
jl
add
dec
outsb
push
addb
dec
imull
mov
mov
in
xchg
cli
sub
add
test
ljmp
push
in
add
push
mov
sub
pusha
add
clc
rolb
mov
add
gs
lock
repnz
cmpsl
push
add
jbe
ret
push
fwait
pop
cmc
outsw
sub
xchg
loop
mov
les
mov
cmp
sbb
inc
add
push
ja
push
sub
ret
sbb
mov
sub
mov
dec
nop
add
mov
push
push
push
test
dec
xchg
add
mov
mov
add
mov
mov
mov
mov
dec
jno
add
lds
add
jbe
inc
push
add
jbe
sarl
cmp
add
ret
std
xchg
mov
push
fisubl
pop
out
mov
mov
mov
add
or
cli
lea
js
nop
add
and
mov
repz
mov
add
outsl
add
popf
sub
mov
mov
or
sub
pop
test
add
lock
jns
fisubrl
lret
push
mov
int3
loope
inc
pop
xor
mov
testb
std
jb
mov
pusha
add
jno
rolb
mov
daa
or
pop
and
sub
inc
dec
int3
es
dec
sub
sub
int3
inc
add
add
les
out
adc
mov
jge
roll
int3
inc
add
lcall
iret
hlt
ret
or
arpl
add
push
or
dec
push
cmp
mov
and
add
add
dec
mov
mov
cmc
mov
je
add
dec
xchg
add
add
lds
mov
add
stos
jae
daa
jle
sub
xchg
or
leave
jecxz
xor
scas
lcall
test
mov
jecxz
pop
scas
loopne
mov
add
and
mov
mov
sbbl
ret
mov
or
xchg
cmp
enter
fildll
add
pop
int
pop
loope
cltd
test
add
loopne
mov
add
jg
inc
pushf
jge
push
xlat
pop
ret
sti
cmp
ficoml
leave
into
jne,pn
scas
cs
clc
out
adc
add
push
add
cld
pop
adc
mov
mov
pop
sahf
jg
dec
push
sbb
out
cmp
cld
dec
mov
leave
pop
dec
nop
add
test
clc
dec
add
add
adc
jae
dec
int
dec
es
scas
ljmp
mov
or
xchg
push
pop
rolb
mov
add
repnz
stos
sub
addb
adc
dec
in
mov
in
xchg
scas
inc
sbb
movsl
jle
cmp
mov
sub
sub
pushf
sbb
add
insl
sbb
in
adc
fbld
add
mov
push
pop
lds
fisubs
rolb
incb
push
push
lret
mov
fisubl
mov
and
mov
aas
mov
fdivrs
rolb
or
ljmp
in
cmp
dec
incl
cld
pop
fsubrs
inc
scas
ds
mov
fcmovnbe
mov
out
int
add
cltd
stos
ret
xor
in
and
xchg
fiadds
mov
insb
add
mov
dec
fadd
mov
pop
fs
fidivs
adc
xor
iret
and
jb
mov
pop
push
add
into
push
loope
test
add
add
push
add
mov
int
jp
out
inc
xchg
and
daa
cli
mov
mov
movl
mov
xor
mov
inc
add
mov
fsubrl
dec
add
mov
mov
mov
or
add
imul
add
sub
mov
aam
push
add
testl
pusha
add
push
pop
pushf
jl
push
enter
push
mov
add
pop
jns
push
lcall
jl
popa
cwtl
pop
push
add
fidivrl
stos
sbb
pop
test
test
dec
cmp
xor
dec
dec
xor
mov
add
sbb
ljmp
add
xchg
add
fdivrs
inc
cmp
mov
pop
insl
and
popf
jmp
mov
dec
mov
outsb
movsl
jmp
out
adc
xor
lods
xchg
add
mov
add
inc
push
repz
pop
mov
sub
xchg
scas
fmull
stos
clc
pop
sub
mov
popa
sub
push
mov
mov
mov
mov
add
clc
lock
push
push
dec
sub
mov
or
repz
mov
dec
std
es
add
ffreep
add
rolb
lret
repnz
and
out
add
jne
dec
inc
add
das
out
scas
cmpsl
mov
mov
sbb
test
js
sbb
and
mov
loop
mov
inc
dec
xor
pop
dec
push
add
pusha
add
mov
imul
int3
test
gs
in
repz
jle
sub
xor
mov
inc
inc
ljmp
cmp
inc
cli
addb
pushf
and
mov
int3
dec
insb
xchg
sub
daa
mov
dec
lds
adc
add
mov
mov
dec
aaa
ss
mov
add
add
out
repz
mov
mov
mov
in
jg
scas
gs
add
mov
sbb
les
xchg
scas
jns
sub
cli
adc
mov
cmc
scas
mov
mov
lock
add
add
mov
add
insb
lods
sbb
in
add
mov
add
rolb
mov
mov
jnp
xor
sbb
pop
xorl
scas
mov
sbb
and
mov
dec
insb
lret
or
fcoms
adc
push
add
popf
jge
repnz
arpl
add
cmp
pop
mov
mov
in
dec
loop
mov
rorl
addb
pop
int3
mov
push
repz
mov
enter
push
dec
push
sahf
int3
dec
xchg
add
movsl
dec
cli
xor
mov
loopne
mov
call
mov
add
and
test
bound
mov
ret
clc
sub
hlt
int3
pop
jl
sti
lock
stc
and
jmp
add
mov
inc
aad
jle
and
ljmp
fcmovu
cmp
js
rolb
movsl
mov
mov
sbb
push
stos
pop
ss
enter
sub
or
fs
push
xor
insb
rclw
test
inc
add
add
cmpsb
jmp
jbe
xor
test
call
mov
and
mov
stos
xrelease
jbe
imul
icebp
sti
lods
inc
push
pop
cld
loopne
mov
adc
add
mov
fmuls
inc
pop
mov
int
jb
mov
rolb
mov
mov
fmuls
ret
or
mov
mov
push
js
loopne
mov
jge
add
rolb
mov
push
adc
add
mov
mov
push
adc
xchg
dec
into
out
pushf
cmp
add
add
pop
adc
add
sbb
jg
fistpl
jge
mov
pop
mov
mov
adc
add
xchg
xor
pop
cwtl
push
sbb
ficomps
out
pop
and
mov
loope
cmp
mov
jnp
push
aaa
adc
das
cmpsb
call
dec
pop
cli
jle
push
add
dec
rcr
leave
xchg
mov
add
mov
outsl
testb
jno
inc
fwait
rolb
mov
fucomp
mov
add
insl
push
aam
lcall
inc
add
test
js
pop
sahf
test
int
add
cmp
sbb
scas
in
rolb
mov
add
mov
cmp
js
adc
in
mov
fisubl
fwait
mov
add
mov
fucomip
mov
rolb
mov
add
add
mov
add
jb
mov
mov
inc
adc
add
in
cltd
xchg
mov
cltd
sub
and
les
add
push
xor
adcl
add
push
cmp
aas
adc
mov
mov
out
xchg
add
sbb
add
adc
mov
rorl
push
mov
add
add
hlt
xor
fcmove
out
mov
icebp
add
mov
xchg
adc
mov
add
mov
and
mov
nop
add
mov
lods
add
add
gs
lods
lds
cmp
add
add
and
mov
add
mov
xchg
call
xlat
push
and
xchg
and
nop
add
movsl
imul
subl
imul
addl
mov
testl
mov
in
cmc
mov
icebp
push
sbb
adc
xchg
mov
xchg
popa
insl
gs
jl
xchg
scas
and
js
lock
int
loopne
mov
or
dec
insl
mov
pop
dec
mov
inc
mov
and
mov
push
jnp
es
sbb
pop
fiaddl
add
add
loop
mov
mov
add
mov
data16
mov
xlat
test
pop
gs
out
imul
aas
loop
mov
xor
add
lock
inc
sbb
sub
loop
mov
es
add
add
ds
xchg
loope
add
sub
lret
jl
add
fnclex
add
or
or
adcl
mov
add
dec
xchg
ret
mov
pusha
add
xorl
movsb
out
dec
pmovmskb
lahf
cwtl
loop
mov
js
add
inc
ficoml
mov
add
add
add
pop
dec
or
xor
lea
cmpsb
xchg
test
jnp
pop
sbb
ljmp
xor
js
xchg
not
xlat
insb
and
or
add
mov
mov
cltd
push
add
add
xchg
cmp
jno
cmp
add
adc
rcrl
mov
rorl
mov
lret
fcompl
add
push
push
xchg
into
lret
imul
ljmp
mov
fs
inc
sbb
es
jge
sbb
mov
add
shrl
int3
cmp
pop
inc
or
lret
rolb
mov
lret
cwtl
mov
add
mov
add
xor
push
cmp
mov
mov
out
adc
mov
inc
add
add
pushf
aas
pop
cmpsb
mov
add
or
push
jne
scas
rcll
out
cmp
lds
mov
push
xchg
stc
movsl
mov
adc
sub
mov
adc
mov
pop
mov
mov
mov
ss
scas
sub
hlt
movsb
loope
lods
inc
push
add
das
xor
fldl
lea
adc
add
xchg
fwait
call
inc
jl
add
mov
cmp
pop
inc
xchg
sub
rorl
cmp
pop
push
add
add
daa
scas
cli
ss
das
mov
xchg
aaa
adc
mov
mov
bound
mov
mov
icebp
fs
mov
shrl
xchg
push
push
mov
out
add
cli
jl
insb
imul
out
dec
or
push
jg
dec
rcrl
mov
loopne
mov
inc
xchg
add
dec
jp
mov
mov
add
mov
pop
mov
inc
xchg
add
outsb
dec
mov
mov
xor
mov
add
add
mov
scas
ja
test
lods
ss
adc
jnp
insl
sarl
xchg
popa
mov
out
add
add
cld
scas
jg
mov
xchg
dec
movsb
inc
bound
mov
mov
inc
das
iret
ljmp
imulb
leave
mov
xchg
les
mov
add
lret
pop
addb
mov
mov
ja
xor
add
cmpsl
rolb
mov
push
add
add
xor
add
les
or
popf
imul
in
ret
lahf
mov
mov
pop
ret
sbb
add
mov
aam
jecxz
popf
movsl
test
rolb
mov
sub
push
dec
insl
loopne
mov
imul
insb
sub
mov
pushl
or
int3
or
push
cli
pop
jb
mov
xchg
in
push
adc
mov
aad
and
xlat
jno
sbb
bound
mov
add
imul
mov
lahf
push
addr16
or
pop
sahf
je
lock
addb
out
arpl
mov
repnz
dec
jno
insb
and
movsb
sti
sti
rcll
mov
ds
mov
repnz
icebp
jge
pop
mov
dec
movsb
mov
mov
push
std
mov
mov
add
cmpsl
test
mov
mov
xor
sbb
push
rcl
mov
lcall
mov
or
mov
dec
ds
mov
or
movsb
adc
mov
mov
es
stc
in
shrl
movsb
xor
mov
mov
lods
pop
push
sub
mov
inc
iret
sub
adc
mov
mov
in
mov
insb
call
add
mov
jns
adcl
inc
je
sarl
add
add
add
fdiv
lods
bswap
jo
mov
cltd
int
push
fsub
loop
mov
or
aas
mov
mov
pop
jno
loope
or
call
add
out
out
popf
mov
cmp
add
cld
or
movsb
and
mov
xchg
je
or
lret
sahf
test
addr16
in
sbb
gs
adc
xchg
aad
dec
push
jle
loopne
mov
add
cld
das
sbb
mov
xchg
add
leave
jb
mov
pop
dec
add
mov
ja
add
mov
lahf
sub
mov
mov
and
mov
sarl
xchg
out
xchg
jle
inc
outsb
or
or
int3
or
push
in
add
mov
fidivs
mov
int
cltd
lock
pop
xchg
pop
int3
mov
or
loop
mov
add
add
add
adc
mov
mov
and
xchg
loopne
mov
mov
dec
jmp
ljmp
fs
add
les
orl
outsl
aad
add
mov
add
int
stos
stos
push
cmc
in
add
mov
mov
add
ja
pushf
fiadds
ds
out
pop
xlat
mov
sbb
in
addb
loopne
mov
add
lods
call
sub
aas
clc
pop
mov
daa
in
lea
add
mov
mov
aaa
mov
xchg
loopne
mov
aam
xor
push
mov
adc
mov
mov
jnp
add
xor
add
mov
inc
ljmp
and
mov
mov
lds
incl
sbb
mov
or
xor
lods
jae
pushf
and
mov
or
test
insb
out
push
pushf
sbb
add
lods
dec
pop
fmull
mov
mov
loop
mov
int3
in
add
mov
loope
test
pop
rolb
mov
lods
mov
or
sbb
add
loop
mov
mov
push
cltd
add
mov
pop
pop
xchg
xor
movsl
jle
mov
hlt
imul
stos
mov
push
test
mov
lds
add
and
xor
mov
add
adc
mov
jb
mov
inc
cmpsl
out
adc
mov
jae
aaa
push
in
enter
sbb
ljmp
sti
add
out
into
xchg
push
sbb
xchg
mov
outsb
pop
mov
push
outsl
add
add
lock
popa
sub
cld
jns
jp
stos
cmpsl
sub
xlat
inc
add
xchg
mov
mov
pop
xchg
mov
sbb
bound
mov
mov
shll
mov
insb
lds
add
mov
lea
pop
outsl
jl
pop
jno
xor
inc
clc
push
stos
mov
stos
push
mov
sub
nop
add
push
push
out
negl
std
mov
sarl
sti
pop
orl
lret
loop
mov
mov
mov
mov
mov
add
cmp
daa
arpl
lahf
jae
cmp
std
cs
cmp
add
add
loope
popa
aas
aaa
cmp
mov
add
mov
addb
dec
and
mov
or
push
loope
stos
and
mov
mov
mov
inc
add
add
xchg
pop
addr16
rolb
cmp
add
les
xchg
sub
andl
xor
mov
mov
sub
mov
add
mov
bound
mov
or
add
leave
jmp
add
test
sub
jecxz
inc
push
push
addb
jns
push
add
mov
pop
filds
pop
and
mov
adc
lcall
dec
mov
push
dec
pop
inc
add
mov
mov
mov
sub
fidivl
stos
add
mov
xchg
addr16
aam
outsb
mov
lret
mov
ljmp
push
aaa
out
or
mov
add
mov
ljmp
bound
mov
xor
sbb
jbe
add
add
sub
add
movsb
rolb
scas
enter
mov
mov
xchg
in
push
sbb
addb
mov
add
add
mov
mov
adc
push
lcall
xchg
subl
push
add
push
sbb
jbe
fwait
xchg
add
push
popf
dec
mov
rcrl
loop
mov
fwait
jnp
ja
fcompl
loop
mov
in
sub
sbb
mov
mov
fistl
mov
mov
outsb
test
jmp
inc
add
or
adc
mov
jecxz
addb
or
add
gs
js
dec
cld
scas
sub
mov
xchg
ja
icebp
mov
mov
inc
jnp
stos
jbe
scas
adc
mov
add
lahf
aaa
mov
int3
jmp
inc
bound
mov
icebp
adc
mov
xchg
sub
mov
mov
aam
insl
push
mov
sahf
sti
in
mov
pop
aaa
mov
sbb
add
in
daa
mov
mov
popa
rolb
mov
add
mov
cld
push
cmp
add
jge
in
scas
insl
mov
pusha
add
push
sti
test
insl
push
jle
ss
popf
imul
ja
add
xor
inc
inc
hlt
fists
xor
mov
add
outsb
popf
mov
add
dec
pop
mov
daa
stos
dec
mov
add
jle
add
add
out
int3
mov
add
mov
fwait
in
push
xchg
mov
add
add
xchg
scas
sbb
roll
mov
out
stc
pop
push
xor
add
add
mov
add
hlt
pop
popa
or
add
daa
loope
xchg
cmpsl
mov
insl
test
mov
sub
push
push
incb
mov
add
mov
subl
xor
sbb
fs
mov
sbb
rorl
test
add
ds
inc
scas
sahf
aam
or
or
add
mov
mov
and
mov
push
lahf
jb
mov
lcall
add
push
mov
ss
insl
sub
pop
mov
mov
mov
mov
add
mov
mull
lea
je
repnz
loop
mov
mov
adc
outsb
addr16
mov
sahf
xchg
mov
jmp
xor
and
mov
xchg
outsb
lcall
dec
push
add
insb
clc
fistpll
add
mov
jge
inc
mov
out
xchg
jne
adc
icebp
jnp
mov
mov
adc
adc
mov
in
mov
pushf
sbb
loope
bound
mov
test
sarl
aas
lock
and
fwait
cmp
dec
xchg
mov
mov
xchg
repz
out
aas
or
add
stos
push
les
xor
mov
jl
cmp
movsl
int3
mov
mov
scas
sbb
add
mov
mov
mov
mov
fimull
bound
mov
ja
add
nop
add
mov
mov
fmuls
mov
mov
iret
cmpsl
push
cmpsb
arpl
call
cltd
loope
fisubs
jbe
add
add
add
popf
cmp
pusha
add
add
dec
mov
popa
fsubrp
scas
loope
add
mov
add
ja
jnp
popa
jecxz
and
mov
mov
add
ljmp
mov
call
add
loop
mov
mov
inc
sub
mov
add
in
mov
xchg
fsubs
add
add
inc
push
scas
jp
leave
xor
addr16
inc
jns
shll
jb
mov
sbb
or
xor
add
fwait
push
rolb
cmc
cmp
pusha
add
addb
testl
and
arpl
mov
not
movsb
or
add
mov
pop
add
or
cmovs
mov
add
jle
and
mov
pop
xchg
pop
xchg
mov
xor
int
call
loope
and
jno
add
ret
shll
rolb
mov
mov
add
das
test
rolb
cmpsb
popf
mov
add
jo
mov
adc
enter
sbb
mov
sbb
aad
and
call
push
or
add
loopne
mov
data16
jb
mov
cld
and
jb
mov
add
mov
jge
mov
iret
pop
push
or
hlt
into
mov
sahf
xchg
cmp
jae
sub
push
add
sbb
ret
rolb
divb
add
mov
test
call
jo
mov
mov
sarl
sti
push
lods
mov
mov
mov
pop
mov
shll
jmp
out
sub
sbb
mov
add
push
xchg
xchg
bound
mov
pop
jg
sti
cmp
push
xchg
sbb
sbb
add
mov
inc
loope
mov
mov
ficomps
mov
or
inc
test
pop
xor
mov
out
jb
mov
add
mov
push
adc
mov
push
icebp
push
dec
loopne
mov
jb
mov
mov
aam
or
jle
add
mov
ljmp
and
push
cs
roll
test
idivl
cwtl
lahf
rcr
mov
ret
pop
sbb
cmpsb
out
pop
ljmp
push
cmp
stos
sbb
lcall
lret
scas
jno
add
jb
mov
inc
add
pop
enter
lahf
mov
mov
fwait
sbb
xchg
pop
jl
add
hlt
fldl
insb
rcl
je
jp
xchg
push
add
mov
xchg
add
mov
and
mov
cld
gs
insb
cli
sbb
add
mov
mov
pushf
xchg
xor
mov
inc
push
push
leave
outsl
add
aad
pushf
jo
mov
loopne
mov
pop
outsl
jle
addl
inc
add
icebp
dec
cltd
rolb
mov
movsb
addb
mov
mov
add
cmc
testl
dec
dec
jb
mov
add
mov
cmp
mov
mov
jne
fsubs
inc
push
mov
pop
ret
cs
mov
xchg
add
fs
push
and
mov
push
sub
add
sbb
sub
jne
movsl
xlat
ss
xor
xchg
push
or
mov
add
inc
clc
push
jl
movsb
cmp
mov
jl
mov
push
adc
cwtl
mov
rolb
sbb
pop
mov
jo
mov
fsubl
sub
nop
add
mov
mov
pop
sbb
insl
call
mov
xor
int
xchg
add
mov
sub
ret
popa
mov
mov
push
aam
inc
add
inc
mov
inc
lock
add
lcall
mov
sti
add
pop
jb
mov
fsubrl
add
lret
in
rolb
mov
add
lahf
or
into
aad
insl
pusha
add
insl
lods
lock
mov
test
mov
jecxz
mov
loop
mov
xorl
or
jmp
aad
test
call
mov
push
dec
leave
jns
add
xor
add
hlt
lods
enter
mov
adc
ljmp
test
and
mov
jne
add
add
add
mov
lock
jg
cwtl
cmp
mov
dec
sti
and
das
mov
lea
mov
cmp
add
add
lock
clc
fldcw
jo
mov
mov
addb
add
mov
leave
stos
scas
rolb
mov
pusha
add
sbb
dec
leave
mov
xlat
in
sti
inc
add
pusha
add
aam
in
inc
add
es
out
into
push
add
mov
ja
xchg
out
dec
jb
mov
mov
mov
icebp
adc
mov
scas
dec
cltd
jnp
addb
xlat
adc
mov
subl
roll
add
lret
sbb
mov
inc
pop
test
outsl
popf
xchg
loop
mov
stos
jno
add
call
add
mov
pop
push
lds
add
push
add
mov
xchg
mov
xchg
push
fisttpl
dec
sahf
aam
jns
mov
adc
das
in
mov
sbb
mov
mov
icebp
inc
push
pop
test
test
je
or
mov
add
xor
mov
xor
mov
addps
cltd
loop
mov
mov
sahf
fwait
aam
add
adc
mov
add
lret
hlt
pop
push
add
mov
add
push
add
mov
mov
add
imul
mov
add
mov
mov
pop
and
push
mov
and
mov
cmp
cs
js
out
ret
jb
mov
lret
sbb
int
add
stos
aam
inc
cmpsb
je
push
push
scas
imull
mov
add
cmpsb
pop
lcall
mov
push
aad
mov
add
cmp
mov
jno
add
aam
fnsave
repnz
repz
add
in
fildl
jl
ret
xor
mov
dec
out
cwtl
fisubrs
iret
fisttps
mov
jp
mov
add
xchg
lea
sub
out
jle
add
adc
and
or
jnp
cmp
jb
mov
add
repz
add
and
mov
add
sub
xor
mov
cmpsb
sbb
mov
pop
xor
mov
pop
jns
add
loope,pt
sbb
out
mov
hlt
adc
cmpsb
int3
fadd
jno
xlat
jg
add
mov
mov
mov
fdivrl
add
add
push
movsb
popa
data16
mov
fsubs
add
mov
jne
push
add
adc
mov
fbld
rolb
mov
addb
jnp
rolb
fistpll
add
clc
sahf
popa
enter
mov
add
cs
pop
and
adc
inc
mov
inc
add
fidivrl
cmc
xchg
jg
cmp
mov
add
cmp
scas
in
pusha
add
mov
mov
jp
and
sbb
add
inc
xchg
insb
mov
cmp
idiv
push
add
fyl2xp1
ljmp
daa
push
add
stc
lcall
mov
adc
mov
fcomp
dec
repz
push
lea
xor
in
pop
jl
int3
mov
inc
cltd
cmpsb
aas
adc
shl
pop
lahf
jp
and
imul
add
add
test
in
xchg
inc
adc
mov
in
or
fs
add
cmp
notb
lods
or
add
stos
rorl
mov
add
test
mov
test
mov
and
js
mov
mov
mov
lea
fildll
add
rolb
mov
cli
lds
dec
sbb
cld
mov
pop
pusha
add
jae
xchg
adc
add
add
xor
inc
test
mov
add
lret
mov
test
mov
inc
leave
pop
mov
cmpsl
outsb
stos
pop
mov
jmp
ficompl
addl
in
inc
add
mov
mov
sbb
add
enter
mov
add
cmpsb
ja
add
mov
fld
dec
push
adcl
add
shll
mov
adcl
hlt
addb
xor
mov
add
inc
pop
rcrl
loop
mov
in
cmpl
add
pushf
push
add
lock
mov
fisttpll
add
loopne
mov
rcr
xor
add
add
mov
mov
xor
mov
fdivr
or
add
add
mov
loope
ds
addb
loop
mov
pop
les
cld
cmp
push
add
movsl
fs
mov
movsl
fucomp
rolb
mov
fcompl
pop
lds
inc
jbe
jg
dec
add
and
mov
add
add
js
loopne
mov
mov
add
mov
and
add
out
popf
les
adc
mov
adc
mov
push
lcall
inc
add
sub
es
int
add
lods
jg
cwtl
or
add
sbb
lret
ljmp
inc
rolb
mov
add
fldcw
sbb
mov
adc
aaa
add
dec
enter
add
mov
mov
lds
push
lock
jbe
mov
mov
xor
mov
ret
or
add
mov
add
test
inc
dec
sarl
or
jae
push
sbb
or
jle
movsb
movsb
enter
mov
aad
in
shrl
push
bound
mov
insb
xchg
mov
mov
ret
fcoml
adc
add
std
inc
add
xchg
rcrl
inc
lds
jno
scas
sbb
or
lods
leave
cltd
xchg
mov
push
mov
mov
bound
mov
popf
insl
xchg
add
mov
jns
fidivs
mov
jnp
dec
adc
mov
xchg
dec
stc
mov
mov
mov
jne
jbe
inc
jle
pushf
popf
jne
mov
mov
push
mov
aam
xor
sub
std
xchg
aam
dec
addb
popf
mov
push
add
mov
lret
add
xor
cld
add
mov
inc
ret
cmp
repnz
cmp
inc
push
jge
int
pusha
add
sahf
fsubrl
add
loope
fistpll
repz
mov
jnp
inc
sub
cwtl
test
add
dec
lret
xor
cld
push
sti
cmp
mov
inc
scas
addb
lcall
adc
mov
mov
in
addb
sbb
and
daa
or
roll
add
data16
icebp
pop
lods
cltd
push
rolb
mov
cli
fsubl
enter
pop
add
sbb
mov
rolb
mov
popf
movsb
jle
test
mov
aam
imul
in
pushf
xchg
data16
mov
add
cmp
mov
repnz
aaa
fsubr
xchg
add
mov
int
add
inc
mov
sub
xchg
add
push
sub
sbb
mov
mov
push
xchg
pop
add
sbb
jo
mov
add
icebp
movsl
outsl
xor
mov
dec
xor
stos
jmp
add
xchg
sbb
mov
add
xchg
jmp
push
xor
or
sub
mov
add
and
mov
sub
pop
out
and
mov
or
push
mov
mov
repz
adc
mov
dec
mov
fimuls
dec
data16
push
sbb
jns
cmp
sub
adc
inc
and
js
inc
push
pop
pop
or
mov
jg
add
test
adc
nop
add
lods
adc
inc
lahf
clc
add
mov
outsl
mov
sahf
js
ljmp
imul
lods
pusha
add
cld
rorl
repnz
mov
add
xchg
adc
mov
pop
fs
jne
movzbl
xchg
lds
cld
fldenv
cmpsl
pusha
add
data16
mov
pop
push
mov
mov
inc
jecxz
aas
ljmp
out
add
scas
pop
cli
or
lea
pop
stc
jmp
fidivl
loop
mov
cmp
cmp
xchg
add
aaa
sahf
dec
imul
fcompl
push
rolb
mov
mov
cmp
arpl
in
call
pusha
add
add
dec
mov
mov
jae
imul
push
cwtl
mov
dec
lods
sbbl
daa
push
andl
icebp
inc
add
add
mov
pop
fwait
iret
sbb
pop
pop
imull
mov
mov
add
stos
rolb
mov
jbe
sub
scas
mov
xor
rolb
lods
jl
paddd
arpl
sbb
xchg
shrl
push
add
mov
fucomi
sbb
mov
jmp
jmp
xor
mov
sub
push
outsb
std
fldl2e
rolb
mov
icebp
and
mov
push
push
add
and
and
mov
mov
rolb
jnp
frstor
add
or
test
mov
or
add
mov
adc
mov
and
dec
mov
mov
insb
in
add
fstpt
cld
rolb
mov
add
mov
xor
mov
arpl
xlat
popf
push
adc
mov
lds
cwtl
aam
fisttpl
xor
out
adc
mov
xchg
cmc
in
int3
sbb
or
jnp
add
insl
pop
aas
test
in
inc
add
sub
mov
dec
in
cmp
roll
add
dec
gs
adc
push
pusha
add
sarl
add
xor
fisttps
int3
pop
add
mov
sti
div
popf
sbbl
mov
fmuls
dec
pop
mov
pop
aam
loope
pushf
aas
xchg
pop
inc
les
repz
dec
mov
mov
cmp
add
mov
add
push
jp
or
mov
sbb
adc
sub
call
into
inc
add
mov
mov
jge
xchg
and
pop
test
jmp
pop
push
pusha
add
inc
add
sub
xchg
jb
mov
mov
stos
fwait
or
add
pop
cmp
sub
in
jbe
test
arpl
sbb
cmp
sbb
add
insb
xorl
int3
or
jmp
in
sub
in
hlt
xor
fstl
mov
sbb
xor
mov
js
cmpsl
movsb
lahf
fnsave
add
int3
pop
push
sub
enter
jg
pop
ds
and
add
scas
pop
addl
push
scas
in
outsl
mov
and
mov
fwait
cmc
inc
add
or
adc
mov
repz
inc
fwait
pop
push
add
sbb
inc
add
mov
psllw
adc
mov
orl
jle
add
test
dec
out
add
je
pop
cld
ja
add
add
call
ds
mov
ret
xrelease
and
movq
mov
xchg
inc
add
mov
mov
mov
mov
das
cmp
inc
sbb
cmp
bound
mov
fs
mov
inc
mov
mov
aam
repz
iret
je
add
xchg
das
scas
stos
aad
iret
ret
jb
mov
mov
push
xor
jo
mov
add
movsl
rolb
mov
cmp
add
aaa
jl
xchg
or
mov
mov
dec
mov
int3
test
pop
cs
cmpsl
lret
dec
je
outsl
lea
add
lds
jmp
add
std
jb
mov
or
mov
pop
jo
mov
pushf
jmp
inc
jecxz
jecxz
jns
cltd
jecxz
inc
add
mov
push
and
rolb
xchg
rolb
mov
roll
bound
mov
add
add
mov
add
sub
add
push
jp
jp
les
sbbl
fs
xor
mov
jmp
mov
xor
ret
sbb
fidivrl
inc
pop
addb
sub
add
sub
mov
mov
mov
jp
out
mov
mov
cltd
inc
or
jae
add
xor
mov
xchg
inc
jb
mov
push
and
mov
in
ja
pushf
rolb
mov
sub
mov
sbb
add
call
jo
mov
jecxz
xchg
adc
roll
test
sub
add
jl
divl
stos
js
push
inc
add
adc
jle
addb
pusha
add
cmp
mov
mov
add
sahf
sbb
add
dec
arpl
scas
add
add
ja
in
adc
imulb
jmp
jmp
cmp
add
leave
push
mov
inc
push
jg
lret
sar
fwait
xlat
sti
push
jecxz
rorl
xorl
cmp
pop
pop
mov
negb
jmp
fildl
mov
add
sti
andl
inc
add
fdivrs
mov
push
add
xchg
mov
cmp
add
hlt
add
dec
fmul
leave
or
stc
dec
or
mov
sbb
gs
cmp
inc
inc
imul
lods
push
add
mov
fs
lcall
rolb
hlt
mov
add
push
dec
sub
push
and
add
mov
rcrl
call
jae
ret
mov
test
icebp
or
push
jmp
stos
sbb
add
enter
sbb
mov
dec
lods
sub
jecxz
sub
cmc
pop
adc
add
mov
pop
repnz
and
test
mov
pop
repz
ds
inc
add
push
test
xchg
push
add
mov
pushf
paddsw
and
jg
repnz
pop
in
inc
jns
jb
mov
push
out
fisttps
jmp
leave
jecxz
push
cmp
or
rolb
cmp
cmp
jno
add
dec
imul
movl
addb
ja
xor
in
out
cs
lcall
stos
arpl
and
sub
or
sbb
mov
mov
mov
sbb
out
addb
daa
negl
jo
mov
mov
out
xor
xchg
imul
decl
icebp
mov
test
xor
int
add
jl
xor
ljmp
jnp
cltd
pusha
add
xchg
add
add
push
pop
mov
xchg
xchg
inc
shll
cmp
stos
and
mov
mov
out
test
mov
mov
add
js
movsl
dec
xor
mov
inc
cmp
movsb
ret
mov
enter
xchg
mov
subl
dec
or
aas
hlt
aaa
push
addb
add
add
jl
xchg
not
add
mov
add
mov
mov
decb
mov
lahf
ret
inc
xorl
fsub
scas
fs
imul
mov
xor
mov
add
inc
pushf
bound
mov
rolb
mov
repz
xor
mov
mov
scas
jg
daa
mov
mov
lret
out
mov
aas
xor
fidivl
pop
cld
cltd
push
cmpsb
out
adc
mov
inc
clc
xchg
lock
cmc
xor
jns
add
push
fwait
rolb
mov
sub
sbb
dec
sub
mov
aad
inc
das
jg
mov
repnz
inc
add
aam
xlat
sub
fildll
cmp
les
int
je
sbb
movsl
lods
mov
hlt
es
mov
mov
add
pop
cmc
sahf
inc
int3
sbb
or
xchg
mov
mov
dec
jns
and
mov
add
xor
mov
add
gs
lods
mov
insl
test
js
push
leave
negl
xchg
mov
mov
mov
sbb
mov
add
cmp
repnz
jns
xchg
or
out
push
and
test
imul
and
test
ds
xchg
iret
lea
icebp
cld
xor
popf
gs
jp
call
sub
jge
or
popa
rolb
mov
dec
adc
addb
fsts
mov
ficoml
aaa
fs
repnz
mov
aad
and
mov
mov
pushf
mov
mov
sahf
rolb
mov
pop
pop
out
insb
mov
xchg
inc
xor
mov
addr16
add
fnstcw
add
ret
mov
inc
push
add
rolb
mov
xchg
jne
out
mov
add
jb
mov
inc
or
mov
inc
inc
pop
fsubrs
and
ss
rorl
fildll
dec
or
inc
popl
add
mov
cmp
dec
aas
lock
repz
cmpsl
js
add
daa
dec
sub
lea
ficoms
add
xchg
call
mov
insl
fisubl
fsubrs
add
xor
es
fs
add
outsb
jnp
pop
insl
das
push
push
mov
cmp
add
add
neg
fistpll
addb
dec
mov
xchg
xchg
aam
mov
mov
add
int
lea
sbb
mov
xor
mov
and
imul
mov
add
daa
push
aad
add
pop
movb
sti
sub
daa
cld
les
add
in
popf
sbb
arpl
repz
pop
hlt
rolb
mov
fwait
cs
mov
sti
jo
mov
insl
jmp
call
push
jecxz
repz
cs
add
add
mov
fcmovb
push
inc
adc
xor
movsl
lock
in
pusha
add
testl
sub
mov
inc
cld
rolb
jo,pn
mov
dec
mov
dec
and
and
mov
add
stos
push
add
dec
mov
add
sbb
int
cltd
nop
add
or
outsl
lods
jnp
lcall
fisttpl
jae
push
add
fs
add
xchg
mov
cmpsb
cmp
test
ret
cmp
add
add
and
jbe
add
xor
sbb
rolb
pop
add
cli
mov
sub
pop
rcr
fwait
cmp
push
loope
bound
mov
lods
pop
mov
adc
mov
dec
imul
push
hlt
pushf
and
mov
mov
lods
lcall
jbe
push
add
sub
add
mov
add
mov
dec
cmpl
btr
outsl
sub
add
sub
add
add
es
jns
add
push
test
mov
leave
or
dec
pop
les
mov
mov
inc
xor
mov
push
push
es
in
aam
lcall
movsb
pop
push
mov
xchg
dec
cmp
test
and
loope
push
adc
xchg
sbb
loop
mov
lods
test
cmc
sbb
aaa
push
xchg
add
repz
mov
add
jne
ja
sbb
shl
out
lods
clc
repz
adc
mov
jl
cwtl
fcoml
add
mov
lcall
daa
cmp
aas
loopne
mov
jo
mov
bound
mov
xor
mov
scas
pop
pop
push
lcall
xchg
iret
leave
out
mov
ss
out
popa
pushf
push
pusha
add
mov
cmc
test
jecxz
lcall
popa
shll
ret
sbb
outsb
mov
gs
xchg
repz
faddl
mov
mov
rolb
mov
lahf
push
cs
repz
cmpsl
ljmp
sbb
scas
pop
decl
or
int3
cmp
add
outsl
sub
js
jb
mov
mov
jae
jl
xchg
decl
lea
jmp
enter
pop
push
and
and
mov
cmp
mov
dec
xchg
lock
mov
inc
add
add
mov
dec
cmp
mov
js
dec
repz
add
mov
add
or
daa
mov
imull
out
xchg
xor
mov
imul
insl
xchg
dec
push
mov
push
add
add
sub
loope
or
ret
push
pop
push
add
mov
add
mov
pop
sbb
jbe
cmp
add
jnp
pop
and
adc
pop
popf
leave
push
add
or
aam
sbb
dec
fst
test
add
arpl
pop
push
add
and
mov
and
arpl
push
test
aam
push
pop
repz
pop
scas
inc
push
sbb
add
mov
cmc
sbb
pop
and
mov
pop
cmp
jcxz
or
mov
lret
lods
inc
cli
fsubrp
pop
mov
repnz
ja
roll
lods
pop
sub
jne
and
adc
imul
jmp
addb
xor
mov
add
xor
fadd
pop
scas
popa
xchg
mov
lods
xchg
add
mov
rorl
leave
jb
mov
popa
add
mov
sbb
add
lods
xor
insl
dec
dec
das
cmp
push
loop
mov
xchg
lret
xchg
add
pop
idiv
test
and
jno
fcomi
add
jb
mov
loop
mov
adc
mov
dec
stc
adc
add
add
push
mov
test
xor
fcompl
rcll
add
mov
jns
mov
stc
mov
dec
cli
fdivl
mov
mov
aad
ljmp
jbe
pop
lock
lock
push
es
add
jno
push
stc
das
pop
push
add
push
xchg
f2xm1
add
leave
pop
pop
ss
push
js
cmc
xlat
sbb
sarl
mov
inc
or
outsb
jo
mov
loope
and
mov
mov
jne
xchg
icebp
in
pop
or
push
mov
xor
mov
sub
addb
in
es
mov
mov
mov
xor
or
add
add
in
clc
and
mov
adc
mov
sbb
sbb
or
cld
outsl
in
into
gs
mov
xor
mov
jle
jo
mov
xor
and
mov
mov
mov
mov
popf
in
insb
jg
nop
add
loop
mov
add
je
pop
into
rolb
mov
mov
std
fcmovbe
add
mov
mov
sub
mov
adc
sub
sub
nop
add
fisttpll
add
movl
cmp
rolb
stc
xchg
lea
push
push
cmp
jecxz
rolb
mov
nop
add
add
cld
push
add
arpl
loop
mov
test
jns
sbb
neg
mov
pop
pop
lock
push
movsb
pop
scas
rolb
jo
mov
add
jmp
out
mov
sbb
addb
cmp
ljmp
push
stc
aas
push
add
add
mov
loop
mov
movsb
addb
pusha
add
pop
movzbl
jge,pt
inc
push
iret
mov
mov
je
pop
arpl
add
mov
xlat
test
xchg
sbb
mov
nop
add
lds
sub
roll
stc
xchg
pushf
jb
mov
jp
add
xor
stos
sahf
mov
leave
xchg
xor
ret
ret
test
int3
dec
loopne
mov
pusha
add
cmp
mov
push
mov
out
test
jo
mov
nop
add
pop
sbb
es
and
add
pop
xor
add
add
add
add
sub
or
jecxz
add
lods
daa
mov
pop
test
das
decb
pushf
and
mov
daa
insb
xchg
imul
push
and
mov
mov
or
jno
out
int3
push
sub
push
and
xor
ret
in
sub
rolb
mov
add
lahf
or
cwtl
xchg
push
icebp
popa
mov
leave
xchg
fsubl
mov
sbb
mov
add
add
xlat
mov
ljmp
and
rolb
mov
dec
cld
sbb
rolb
mov
loopne
mov
js
add
mov
loopne
mov
add
xchg
add
enter
xor
repnz
add
mov
gs
inc
push
roll
xchg
dec
push
sbb
sub
push
addb
mov
mov
test
jbe
dec
movsl
pusha
add
add
mov
or
add
pushf
cli
jns
pusha
add
repnz
sub
and
insl
daa
adc
mov
pop
ds
jbe
adc
adc
mov
mov
add
mov
mov
mov
fisttpl
stc
pusha
add
lcall
lahf
push
mov
aaa
ret
jp
jbe
add
clc
mov
sbb
add
add
add
outsl
fistpl
cltd
pop
ljmp
cmp
add
jmp
inc
ss
pop
divl
xor
dec
xchg
cmc
pop
mov
cltd
cli
fcompl
mov
mov
mov
sti
fnstsw
adc
mov
add
imul
or
sub
or
mov
cmp
jo
mov
add
or
add
xchg
add
mov
repz
jp
add
pop
inc
add
mov
ret
clc
rep
ret
mov
mov
imul
and
mov
mov
cmp
decl
mov
add
add
loop
mov
shrl
and
cld
cmpsb
sbb
fucomip
push
add
add
pop
sub
cli
sti
sbb
add
mov
lock
add
mov
mov
xchg
mov
mov
add
cltd
pop
xor
out
push
or
cmp
adc
mov
movsb
std
out
les
lret
dec
fldcw
das
jmp
xor
aad
aaa
jg
sub
push
in
shl
pop
push
addb
pop
fxch
imul
add
and
jne
call
jp
jno
add
jb
mov
cmpsl
stos
add
add
lock
loopne
mov
in
mov
mov
mov
mov
ja
xor
fists
or
adc
and
mov
std
inc
test
mov
into
mov
mov
mov
test
into
shll
pop
popf
sbbl
fstl
loope
cmp
xchg
popa
addb
pop
rolb
mov
xchg
aas
jl
sub
mov
pushf
push
add
mov
lods
cltd
mov
outsb
das
dec
fstpl
mov
sub
iret
ret
xor
mov
daa
xor
mov
bound
mov
jmp
add
add
in
mov
aas
push
add
inc
add
fldt
mov
or
adc
call
cli
xor
mov
lahf
xor
sub
sti
sub
add
test
das
mov
filds
daa
jmp
scas
outsb
hlt
jo
mov
out
js
add
mov
pop
mov
add
leave
pop
ds
leave
test
mov
sub
add
add
mov
add
push
data16
add
ds
pop
ret
bound
mov
in
jne
add
in
jl
or
bound
mov
rolb
mov
xor
mov
mov
mov
mull
test
push
add
stos
aad
shrl
add
ljmp
inc
mov
add
cmp
cmp
mov
mov
lcall
mov
nop
add
imul
mov
out
sub
mov
add
xchg
jg
aad
jge
sysexit
fstps
orl
mov
mov
mov
mov
ret
shll
add
inc
outsb
jb
mov
mov
push
add
lahf
inc
add
xchg
test
sub
mov
aam
fwait
aas
mov
jmp
out
and
mov
inc
xchg
mov
xchg
push
mov
dec
pop
cmc
fs
nop
add
stos
inc
ret
add
add
sbb
ss
jbe
fs
lret
in
inc
shrl
and
int3
ljmp
test
mov
push
xchg
add
add
mov
rolb
jbe
out
add
dec
outsl
or
sbb
ret
arpl
xor
jecxz
xchg
lret
je
sarl
ss
lods
xor
mov
mov
add
lods
pop
pop
out
dec
hlt
jge
arpl
mov
add
mov
mov
ja
imul
ljmp
mov
nop
add
inc
add
mov
inc
add
lods
dec
bound
mov
add
sbb
mov
mov
mov
mov
mov
jle
add
insl
outsl
in
test
push
cmp
das
out
cld
xor
lcall
or
inc
add
rolb
mov
lret
loope
hlt
adc
add
arpl
add
addb
movsl
dec
push
push
loope
add
add
sbb
sbb
dec
or
in
loop
mov
add
les
inc
mov
xchg
pop
mov
mov
fcmovbe
js
mov
int
add
add
sub
and
aaa
xchg
add
jl
jge
cmp
aad
int
in
add
cltd
inc
sbb
inc
xor
mov
add
sbb
popf
rolb
mov
shl
push
test
nop
add
sahf
sub
push
mov
mov
xchg
jae
add
inc
push
add
lcall
xor
push
mov
daa
jmp
xor
sub
mov
mov
je
aaa
jbe
mov
data16
pop
aad
sbb
add
fs
push
mov
fs
pop
notb
push
xor
push
push
aad
push
push
fidivs
or
in
lods
idivb
leave
sbb
inc
iret
sti
sti
mov
lock
cmpl
addb
daa
loope
lea
add
fsubl
add
mov
mov
jno
cmc
push
repz
mov
mov
mov
add
mov
mov
pop
cmp
xor
mov
mov
insl
add
mov
pop
enter
sbb
mov
mov
add
push
ja
lods
push
mov
add
xlat
rcrl
push
add
arpl
add
pop
cmp
adc
mov
gs
and
mov
add
les
pop
sahf
jg
ficompl
sub
adc
mov
das
js
bound
mov
pop
nop
add
add
add
add
add
add
daa
adc
add
outsl
out
dec
ds
sub
shl
inc
add
lret
lcall
adc
push
in
sti
jp
add
mov
outsl
test
push
add
movsl
mov
mov
push
cld
aaa
mov
mov
pop
inc
dec
outsb
movsl
popw
hlt
pop
rolb
das
jg
sub
jae
add
mov
or
in
fstpt
scas
inc
leave
xorl
and
mov
imul
mov
inc
xchg
imul
mov
lahf
loope
add
jb
mov
add
mov
add
xor
cmp
popf
lcall
xor
mov
in
test
add
dec
sbb
cmp
push
lea
cmp
and
xchg
add
insb
cmp
andl
jno
mov
movnti
mov
jne
out
adc
xor
mov
icebp
mov
fsubrl
gs
rol
dec
popa
sub
add
mov
adc
mov
test
add
scas
lock
fldenv
add
add
into
xchg
adc
cli
in
aaa
cmp
repnz
nop
add
mov
cmpsl
call
mov
addb
cli
mov
xor
mov
push
rcr
sbb
cld
inc
insb
and
mov
and
cmc
test
push
and
mov
jo
mov
sbb
add
mov
add
sub
clc
jle
rolb
mov
hlt
jmp
add
adcl
pusha
add
mov
add
rolb
mov
jge
jns
jmp
mov
sub
add
aaa
and
mov
cmp
cmp
mov
test
mov
dec
xor
add
cmp
push
test
xor
mov
into
repz
mov
rolb
mov
mov
in
sbb
fwait
rolb
or
cmp
sbb
cwtl
ss
insb
pop
pop
cmp
add
add
mov
lds
and
lahf
imul
cmp
popf
scas
mov
xor
pop
lcall
popa
std
jnp
add
cmpsl
add
mov
incl
cmpsb
sub
xchg
pop
jmp
add
add
aaa
ret
lock
gs
mov
mov
or
mov
mov
in
add
rolb
mov
in
into
adc
sub
push
out
push
aas
adc
mov
jg
sub
mov
in
arpl
lods
adc
mov
add
push
je
jne
rolb
sub
je
fsubl
cmpsl
sti
xchg
cmp
repnz
xchg
add
mov
push
notb
mov
mov
inc
jecxz
fldt
xchg
nop
add
pusha
add
add
dec
mov
insl
mov
pop
sub
lods
das
ds
and
mov
rep
out
and
stos
outsl
cld
lcall
add
movsb
xor
add
rcrl
aas
ja
inc
add
test
loope
add
jg
push
jecxz
push
push
inc
mov
stos
stc
cld
sub
mov
inc
dec
mov
mov
sbb
outsl
int
dec
pop
rolb
mov
fcomps
testb
sub
and
add
movsl
loope
add
add
mov
add
mov
jo
mov
jp
lock
adc
ficoml
fildll
push
add
pop
or
add
lahf
xchg
js
les
add
loope
imul
adc
mov
js
xor
mov
imul
mov
inc
add
pushf
cwtl
and
adc
nop
add
loopne
mov
notl
mov
mov
rolb
mov
arpl
mov
clc
icebp
lahf
bound
mov
add
rolb
fidivrl
loope
cmp
push
add
push
or
divl
inc
cmpsl
pop
ffreep
add
test
ljmp
cmpsb
test
push
rolb
mov
xchg
cmp
and
outsl
sti
and
mov
add
pop
daa
push
jg
add
add
mov
lret
aas
adc
repz
add
mov
addb
loop
mov
inc
mov
dec
rolb
mov
shrl
inc
dec
jnp
gs
fisttpll
lods
xor
mov
aam
mov
sbb
or
mov
fildll
jp
jbe
es
cmp
mov
pop
mov
xchg
pusha
add
pop
sarl
lret
decl
js
lret
ja
ret
fs
mov
jl
jmp
mov
stos
or
inc
adc
js,pt
mov
mov
stos
mov
mov
inc
roll
add
ss
clc
lods
mov
add
sbb
push
xchg
push
icebp
sbb
out
add
mov
into
std
nop
add
aam
mov
add
test
rolb
mov
xchg
xchg
mov
leave
mov
insb
je
fwait
add
mov
pop
xchg
jne
dec
shrl
popf
mov
add
add
jg
shll
rolb
mov
mov
fstl
mov
pop
sub
lds
mov
and
nop
add
mov
push
les
mov
mov
fisubl
cs
push
xchg
add
sbb
mov
jbe
out
scas
dec
mov
cmp
pop
addb
movsl
mov
loop
mov
das
into
insl
pop
mov
sbb
fadds
dec
mov
das
stos
inc
jnp
addb
stos
and
push
fstpl
push
sub
xchg
inc
addb
inc
scas
cmp
popf
mov
mov
push
pusha
add
mov
and
sub
xchg
lods
fwait
addb
pop
push
jecxz
add
jmp
add
add
imul
add
les
fcoms
xor
mov
imul
fstpt
ja
xor
mov
add
jg
xor
add
out
lret
xchg
sbb
mov
jl,pn
rolb
mov
push
mov
in
shll
fwait
dec
xchg
mov
add
mov
cmp
add
mov
popf
mov
outsl
jo
mov
sub
mov
inc
xchg
lea
mov
and
add
rcll
mov
sub
out
out
arpl
mov
inc
nop
add
dec
or
add
pusha
add
pop
or
add
xchg
out
inc
ss
fildll
js
addl
mov
pop
xor
add
pop
addb
aaa
add
mov
js
add
mov
pushf
clc
xchg
fnstcw
add
jge
add
movsl
sub
inc
lock
pop
in
imul
add
mov
inc
add
mov
stc
dec
aas
repz
inc
insl
adc
mov
dec
jbe
aam
adc
jp
test
jae
or
lret
out
sbb
add
add
mov
ja
push
add
repnz
inc
xchg
imul
add
add
add
pop
xchg
mov
mov
icebp
lret
xchg
and
repnz
mov
dec
xchg
inc
add
jno
xlat
cmp
jp
adc
cs
add
xchg
mov
mov
mov
inc
filds
addr16
add
mov
or
addb
inc
outsl
dec
or
add
xchg
enter
clc
arpl
xchg
xlat
sti
in
ljmp
xor
xlat
ljmp
mov
shrl
lahf
mov
push
out
stos
repz
add
sahf
xlat
add
mov
pop
icebp
cmpsl
mov
pop
adc
mov
mov
ret
dec
ss
add
add
mov
repz
jno
test
cmp
stos
pop
adc
repz
and
inc
add
imul
fists
cmpsl
pop
and
jl
mov
jl
sbb
scas
aam
std
mov
sbb
mov
add
testb
mov
cmpsb
addl
add
enter
mov
stc
jne
pop
es
aad
shll
add
roll
ss
cmp
and
mov
add
call
hlt
xor
add
mov
enter
scas
jmp
add
jl
sub
add
iret
and
sbb
ret
clc
popf
push
add
mov
cmp
daa
arpl
test
xlat
roll
fidivrl
arpl
push
int3
inc
or
add
aas
addb
out
ret
pop
mov
jle
fs
stos
push
jge
test
mov
fadd
test
push
mov
gs
aad
mov
mov
jle
mov
popf
lret
dec
pop
lods
jb
mov
add
push
jae
sarl
add
mov
sbb
test
push
rolb
aas
adc
rolb
bound
mov
or
xlat
xor
test
mov
lods
fdivs
sahf
in
repz
lcall
mov
jl
add
inc
cmp
lret
popf
out
je
clc
loope
nop
add
add
dec
jae
in
xchg
jle
and
rolb
mov
or
in
mov
icebp
xchg
push
les
jo
mov
sahf
and
imul
cs
inc
stos
sub
lret
insb
div
jmp
dec
adc
mov
jg
mov
push
add
xor
mov
mov
push
add
and
mov
sub
cmp
mov
icebp
nop
add
xor
mov
or
fcomp
sub
dec
hlt
stc
es
mov
rolb
mov
outsl
insl
jp
addb
popa
das
push
inc
add
mov
pop
fnsave
push
nop
add
je
jge
mov
roll
das
pusha
add
mov
cli
stc
mov
pop
repnz
cltd
fsubrp
out
lcall
pop
rolb
push
es
jae
sbb
and
pop
ds
sahf
xchg
pop
mov
bound
mov
or
lods
or
xchg
add
aam
popf
aam
out
jge
adc
outsb
stc
jb
mov
fldt
movhps
lret
sarl
ljmp
popf
pop
call
sbb
xchg
xor
mov
mov
clc
jl
xlat
movsb
adc
scas
les
add
jno
repnz
add
scas
and
mov
rolb
mov
stc
xor
mov
mov
lods
je
popa
into
pop
mov
add
nop
add
adc
mov
rolb
mov
out
xor
in
dec
dec
loopne
mov
gs
lret
mov
push
insl
pop
jge
mov
add
push
mov
in
jecxz
sbb
jo
mov
aad
mov
xchg
add
sti
imull
pop
mov
fmuls
push
pop
mov
mov
xor
mov
xchg
out
leave
sub
inc
add
lock
add
jmp
mov
or
fs
dec
sub
mull
or
jae
test
add
add
or
add
loopne
mov
mov
add
add
fisubl
dec
jecxz
add
or
dec
pop
into
inc
leave
mov
imulb
mov
cmp
xor
rolb
mov
addb
ljmp
xchg
push
xor
jmp
in
mov
mov
ds
stos
int
sbb
cltd
addb
sub
add
cld
inc
pop
nop
add
das
dec
addb
pop
xor
sti
sub
outsb
push
rorl
mov
into
lea
gs
mov
enter
icebp
rolb
mov
mov
ja
push
in
push
lods
cmp
xchg
add
pop
addr16
in
shrl
push
add
add
js
cmpsb
dec
cs
push
pop
jp
sub
dec
rolb
mov
xor
fdivrs
rolb
mov
rolb
mov
mov
xchg
into
cmp
sub
cmp
add
jbe
add
lea
test
jae
data16
scas
jmp
jmp
push
addr16
xor
sbb
mov
xor
cmp
scas
in
adc
mov
add
add
add
push
add
push
dec
leave
jmp
add
inc
mov
adc
adc
mov
adc
call
test
add
mul
in
adc
decb
std
test
lock
mov
cmp
lahf
pop
xchg
sbb
lea
addl
inc
add
mov
ficoml
sub
adc
mov
xor
cltd
cmp
add
mov
add
dec
popf
push
cmp
lds
add
xchg
xor
inc
in
int3
out
rcrl
cli
in
stc
push
pop
xor
gs
inc
shl
pop
ret
addb
lret
mov
icebp
mov
add
add
cwtl
jg
sbb
addr16
pop
enter
mov
or
mov
mov
mov
out
push
in
out
add
xchg
add
mov
sub
add
dec
fimuls
sbb
stc
mov
mov
add
fisubrs
addr16
aad
std
mov
dec
xchg
les
pusha
add
mov
loopne
mov
or
sahf
and
mov
cltd
or
ret
sbb
adc
mov
rolb
mov
gs
ror
cmp
mov
das
adc
mov
xchg
lret
mov
lods
ret
sbb
inc
mov
inc
xchg
pop
cmp
mov
add
mov
movsl
and
sbb
mov
mov
pop
sti
loope
jmp
add
dec
xor
mov
stos
mov
add
clc
dec
stos
add
lret
arpl
mov
cld
xor
mov
mov
notb
mov
add
cmp
add
ret
out
fisubrl
rolb
ret
push
fcmovnbe
add
sbb
pusha
add
mov
mov
bound
mov
unpckhps
popa
jae
xchg
das
iret
xchg
inc
add
cwtl
lret
or
mov
in
in
ret
outsb
xor
mov
call
sbb
lds
add
mov
rolb
mov
or
mov
mov
in
adc
add
push
or
add
mov
aas
pusha
add
mov
push
mov
enter
lods
sub
mov
pop
jnp
mov
arpl
mov
push
mov
lods
sbb
jae
lods
adc
mov
or
mov
mov
fdivl
add
mov
mov
sub
addb
sbb
daa
aad
or
mov
rolb
repnz
add
add
sub
ficoms
mov
scas
xchg
sbb
push
or
mov
mov
cmp
lock
mov
sbb
inc
mov
pushf
test
xchg
sbb
ror
add
mov
ja
xchg
enter
cvtdq2ps
mov
add
sti
imul
lea
sbb
cmp
xor
movb
daa
lods
pop
in
pop
out
inc
push
cmp
imul
pushf
inc
add
add
pusha
add
out
stos
fstpt
aad
aaa
lcall
add
std
mov
xchg
dec
ja
lcall
sbb
pop
fiadds
mov
add
mov
add
add
cmp
std
out
test
pop
adc
mov
icebp
ret
rolb
mov
add
push
sub
cmp
fs
inc
hlt
push
cmp
mov
scas
in
xchg
add
mov
mov
leave
and
lods
xchg
bound
mov
sti
mov
mov
mov
lods
cmp
push
add
lret
jne
add
stos
imul
rolb
dec
stos
push
add
lret
xor
mov
add
mov
jae
push
out
xchg
shr
gs
popf
jecxz
scas
das
inc
cli
sbb
and
add
add
cwtl
cmp
mov
add
mov
adc
inc
jl
bound
mov
outsb
xchg
mov
fcom
jnp
ja
test
out
adc
mov
add
mov
add
adc
fisubl
mov
xor
inc
js
push
fs
mov
mov
mov
jl
ret
xor
mov
jp
xchg
cmp
test
sub
push
ljmp
add
sbb
jp
adc
xor
adc
mov
popa
cs
lds
pop
std
mov
divl
mov
mov
notb
add
adc
inc
in
pusha
add
lret
pop
mov
mov
add
or
mov
popf
icebp
leave
adc
roll
pusha
add
jae
or
hlt
imul
mov
push
add
ret
cmp
mov
sub
aam
and
int3
out
sti
fsin
loope
adc
cld
lods
hlt
leave
imul
add
fidivrs
pop
jmp
add
leave
inc
add
aad
pop
mov
lret
leave
loop
mov
xor
mov
xchg
xchg
outsl
ja
gs
mov
add
mov
imul
cmpsb
inc
lret
das
lock
mov
out
movsb
arpl
stc
test
fwait
push
add
sbb
or
sbb
stos
cmp
movsl
lret
push
aad
jecxz
sbb
mov
jle
imul
mov
es
loope
push
in
jmp
mov
aaa
mov
mov
out
add
mov
jecxz
mov
lret
jge
add
aad
add
test
mov
stos
mov
jp
add
xor
jp
add
arpl
aas
sti
push
and
xchg
fsubr
sbb
add
inc
add
repnz
nop
cld
jae
jecxz
aad
cltd
push
mov
pop
add
add
jnp
add
sahf
add
cltd
movl
in
pushf
add
add
jno
add
add
sub
sub
add
or
nop
cld
jae
aad
adcl
test
push
mov
xchg
ret
mov
push
lods
test
mov
mov
push
mov
xchg
ret
add
test
loop
add
add
outsb
sbb
add
mov
mov
push
mov
nop
leave
jmp
jns
jmp
not
push
mov
xchg
ret
pop
add
add
xchg
in
nop
leave
jmp
add
mul
add
add
or
add
push
mov
xchg
ret
into
nop
inc
add
add
mov
add
clc
repnz
nop
cld
jae
or
add
mov
push
mov
xchg
ret
add
nop
add
add
xchg
and
add
in
nop
leave
jmp
add
mov
push
add
jno
or
push
mov
xchg
ret
pop
add
add
add
add
push
clc
repnz
nop
cld
jae
add
add
add
addl
add
clc
repnz
nop
cld
jae
and
add
clc
inc
cwtl
mov
clc
repnz
nop
cld
jae
add
add
sahf
push
push
mov
xchg
ret
add
dec
add
data16
add
add
push
mov
xchg
ret
stc
arpl
or
stc
add
nop
cld
jae
add
jns
lret
add
mov
clc
repnz
nop
cld
jae
add
clc
clc
repnz
nop
cld
jae
sahf
add
inc
lret
repnz
sbb
repnz
nop
cld
jae
sub
mov
repnz
nop
cld
jae
add
scas
mov
push
mov
xchg
ret
testl
bound
mov
xor
push
mov
xchg
ret
pop
fdivs
add
or
icebp
clc
repnz
nop
cld
jae
cmp
pop
int
add
les
repnz
nop
cld
jae
add
jns
jnp
clc
repnz
nop
cld
jae
pop
mov
mov
incb
in
nop
leave
jmp
add
clc
aaa
add
add
add
in
nop
leave
jmp
pop
mov
lea
clc
repnz
nop
cld
jae
push
add
add
add
xlat
lahf
mov
clc
repnz
nop
cld
jae
add
sbb
clc
repnz
nop
cld
jae
add
mov
add
add
mov
xchg
ret
faddl
lret
push
push
mov
fxch
inc
add
dec
add
and
inc
add
xor
add
clc
repnz
nop
cld
jae
popf
mov
dec
dec
push
mov
nop
leave
jmp
pop
pop
aaa
pop
add
icebp
push
mov
nop
leave
jmp
inc
nop
into
add
add
push
mov
xchg
ret
sbb
add
aad
jbe
push
push
mov
xchg
ret
arpl
push
add
add
test
nop
nop
cld
jae
jmp
pop
dec
mov
clc
repnz
nop
cld
jae
add
add
popf
add
add
repnz
nop
cld
jae
ja
int
cmc
shll
dec
cmp
repnz
nop
cld
jae
add
add
add
nop
nop
cld
jae
sbb
popf
add
mov
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
mov
add
and
dec
cmp
mov
xchg
ret
inc
push
lods
add
pop
mov
in
nop
leave
jmp
cmp
mov
add
add
nop
nop
cld
jae
jno
add
xor
stc
clc
repnz
nop
cld
jae
les
outsb
mov
push
dec
mov
clc
repnz
nop
cld
jae
jns
push
les
add
inc
and
nop
cld
jae
add
add
mov
pop
mov
jmp
incl
pop
add
popf
add
lret
adc
mov
add
repnz
nop
cld
jae
outsb
push
mov
cmp
fdivrl
add
add
in
nop
leave
jmp
add
jle
out
clc
repnz
nop
cld
jae
xchg
add
add
pop
out
pusha
clc
repnz
nop
cld
jae
mov
les
inc
add
add
loop
inc
add
add
fcompl
call
clc
repnz
nop
cld
jae
add
test
lods
pop
push
mov
xchg
ret
add
add
add
je
clc
repnz
nop
cld
jae
in
sbb
cmp
nop
nop
cld
jae
aas
add
rolw
imul
clc
repnz
nop
cld
jae
add
jle
push
mov
xchg
ret
add
add
add
add
mov
je
clc
repnz
nop
cld
jae
inc
arpl
in
test
leave
push
mov
xchg
ret
lds
add
pop
add
mov
clc
repnz
nop
cld
jae
inc
add
add
in
add
call
add
add
add
sub
add
repnz
nop
cld
jae
mov
fdivrl
mov
sub
jns
inc
add
push
add
pushl
clc
repnz
nop
cld
jae
xchg
sar
add
nop
add
call
clc
repnz
nop
cld
jae
popf
add
push
mov
nop
leave
jmp
dec
cmp
add
mov
nop
leave
jmp
pop
push
add
int
aas
or
push
sub
inc
icebp
inc
add
add
jle
or
call
add
repnz
nop
cld
jae
add
mov
inc
add
clc
repnz
nop
cld
jae
lods
push
jns
jno
sbb
in
inc
add
rolb
add
jmp
push
mov
xchg
ret
nop
sbb
dec
add
jmp
clc
repnz
nop
cld
jae
add
pop
les
dec
add
sbb
inc
add
add
fadds
cmp
movb
loope
imul
clc
repnz
nop
cld
jae
jecxz
je
int
jle
push
mov
xchg
ret
sbb
aad
sbb
test
add
repnz
nop
cld
jae
testl
movb
mov
nop
leave
jmp
mov
add
mov
clc
repnz
nop
cld
jae
xorl
nop
cld
jae
aas
les
add
pop
xor
add
push
mov
xchg
ret
stc
add
add
push
clc
repnz
nop
cld
jae
add
xchg
add
mov
push
mov
nop
leave
jmp
add
lret
push
ret
cwtl
call
clc
repnz
nop
cld
jae
int
add
mov
add
clc
repnz
nop
cld
jae
add
add
sbb
repnz
nop
cld
jae
add
inc
jno
add
sahf
cli
push
push
mov
xchg
ret
add
addl
stc
test
push
mov
nop
leave
jmp
pop
add
in
or
cltd
push
push
mov
xchg
ret
mov
add
add
test
dec
push
push
mov
nop
leave
jmp
les
push
mov
add
clc
repnz
nop
cld
jae
dec
inc
inc
mov
jns
add
nop
nop
cld
jae
mov
pop
into
add
cmp
clc
repnz
nop
cld
jae
add
add
gs
push
mov
nop
leave
jmp
stc
add
jno
add
mov
xor
nop
nop
cld
jae
pop
lret
pop
add
movsl
rorl
mov
nop
leave
jmp
into
ja
add
lret
and
adc
mov
nop
leave
jmp
pop
push
sbb
mov
clc
repnz
nop
cld
jae
aas
add
add
pop
adc
fucomi
inc
add
add
rolb
mov
repnz
nop
cld
jae
mov
add
push
mov
xchg
ret
rolb
dec
add
add
jns
mov
push
clc
repnz
nop
cld
jae
jecxz
push
add
jmp
clc
repnz
nop
cld
jae
add
add
add
or
mov
push
mov
xchg
ret
nop
push
add
add
add
add
clc
repnz
nop
cld
jae
into
add
add
xor
mov
xchg
ret
aad
in
xchg
add
in
mov
push
mov
xchg
ret
fdiv
add
add
and
push
lea
repnz
nop
cld
jae
jecxz
xchg
mov
push
add
xchg
push
clc
repnz
nop
cld
jae
add
add
in
mov
push
mov
xchg
ret
add
push
mov
imul
jmp
incl
push
inc
lret
add
les
add
clc
repnz
nop
cld
jae
cmp
popf
fadds
outsb
jecxz
mov
clc
repnz
nop
cld
jae
add
add
xor
clc
repnz
nop
cld
jae
pop
pop
mov
or
nop
leave
jmp
popf
push
add
add
add
or
roll
xchg
ret
popf
add
add
xchg
fadds
in
aam
inc
clc
repnz
nop
cld
jae
mull
add
imul
sub
inc
add
and
push
add
mov
mov
xlat
das
mov
clc
repnz
nop
cld
jae
pop
push
aas
add
or
mov
push
mov
xchg
ret
jecxz
jns
add
add
cmpsl
outsb
and
push
mov
nop
leave
jmp
sahf
add
in
call
push
mov
nop
leave
jmp
push
add
add
clc
repnz
nop
cld
jae
addb
inc
add
adc
mov
nop
leave
jmp
add
addl
jmp
int
add
inc
add
add
add
push
insb
movzwl
clc
repnz
nop
cld
jae
add
into
inc
dec
arpl
nop
cld
jae
aaa
into
testl
mov
clc
repnz
nop
cld
jae
in
push
aas
dec
add
push
mov
nop
leave
jmp
add
push
jmp
pop
push
mov
add
gs
mov
add
arpl
add
and
pop
add
clc
repnz
nop
cld
jae
dec
lret
je
outsl
mov
clc
repnz
nop
cld
jae
add
mov
add
push
mov
nop
leave
jmp
add
push
add
mov
nop
leave
jmp
add
jmp
dec
mov
clc
repnz
nop
cld
jae
add
push
je
sbb
pop
clc
repnz
nop
cld
jae
int
add
add
push
mov
xchg
ret
mov
fcomps
mov
inc
push
mov
xchg
ret
add
add
mov
add
jmp
add
movb
push
addl
mov
clc
repnz
nop
cld
jae
inc
sarb
push
clc
repnz
nop
cld
jae
testl
cmp
mov
xchg
ret
and
into
add
int
xchg
add
add
pop
push
mov
xchg
ret
push
add
push
je
mov
fdivrl
push
mov
xchg
ret
push
push
xchg
add
push
ds
push
mov
xchg
ret
add
in
add
add
push
mov
nop
leave
jmp
add
add
pop
jecxz
add
rolb
mov
mov
xchg
test
push
push
mov
xchg
ret
je
add
aaa
popl
add
adc
in
nop
leave
jmp
nop
aad
stc
addb
cmp
repnz
repnz
nop
cld
jae
add
jmp
push
mov
nop
leave
jmp
push
add
dec
add
stc
movsl
jg
jo
add
push
mov
nop
leave
jmp
add
xorb
pushl
push
mov
xchg
ret
lods
popl
testl
push
mov
xchg
ret
data16
outsb
mov
jmp
inc
call
cld
jae
rolb
add
or
test
clc
repnz
nop
cld
jae
add
pop
jmp
mov
add
add
mov
jns
popl
add
mov
mov
push
mov
xchg
ret
jecxz
add
add
add
mov
push
mov
nop
leave
jmp
push
add
nop
add
add
jns
rol
push
mov
xchg
ret
into
mov
add
mov
clc
repnz
nop
cld
jae
add
aas
mov
clc
repnz
nop
cld
jae
add
inc
add
cmpl
cld
jae
jno
test
mulb
mov
adc
pop
and
repnz
nop
cld
jae
add
jle
pop
add
sub
push
mov
nop
leave
jmp
rolb
jecxz
mov
add
push
add
cmp
clc
repnz
nop
cld
jae
push
sbb
push
clc
repnz
nop
cld
jae
pop
add
les
outsb
add
jmp
mov
xchg
ret
add
sahf
inc
add
dec
xor
push
mov
xchg
ret
add
les
jecxz
add
rep
push
mov
xchg
ret
add
add
add
pop
mov
clc
repnz
nop
cld
jae
add
add
add
cmc
int3
push
clc
repnz
nop
cld
jae
mull
add
outsb
xchg
cmp
clc
repnz
nop
cld
jae
lret
xchg
jle
scas
push
push
mov
xchg
ret
add
add
cmp
dec
clc
repnz
nop
cld
jae
mov
ja
add
add
xchg
add
clc
repnz
nop
cld
jae
arpl
sahf
jle
sub
xchg
in
nop
leave
jmp
into
cmp
push
test
push
mov
nop
leave
jmp
add
fadds
sbb
mov
in
pop
ja
add
rorb
add
mov
clc
repnz
nop
cld
jae
add
lret
and
clc
repnz
nop
cld
jae
xchg
pop
add
add
and
movzwl
clc
repnz
nop
cld
jae
les
mov
mov
push
mov
nop
leave
jmp
mov
push
add
xchg
rcr
push
mov
nop
leave
jmp
add
aas
push
add
dec
nop
nop
leave
movzwl
clc
repnz
nop
cld
jae
pop
add
add
aas
add
push
mov
xchg
ret
jmp
add
leave
pop
push
mov
xchg
ret
jno
nop
rolb
add
xchg
call
in
nop
leave
jmp
add
add
add
and
mov
push
mov
nop
leave
jmp
add
add
add
fisttps
test
and
add
in
nop
leave
jmp
dec
ja
fdivr
xchg
clc
repnz
nop
cld
jae
push
jle
pop
mull
mov
push
mov
xchg
ret
and
cmp
add
add
or
repnz
nop
cld
jae
add
or
xchg
out
clc
repnz
nop
cld
jae
popl
xchg
sbb
or
cld
jae
outsb
add
push
add
lea
clc
repnz
nop
cld
jae
int
ja
add
test
repnz
nop
cld
jae
add
ja
add
xchg
push
push
mov
nop
leave
jmp
in
sahf
addb
add
mov
mov
xchg
ret
lret
add
sbb
inc
push
adc
push
mov
nop
leave
jmp
data16
outsb
add
cmpl
jae
fadds
inc
call
nop
leave
jmp
data16
add
arpl
mov
clc
repnz
nop
cld
jae
aas
faddl
xor
push
mov
nop
leave
jmp
add
add
add
pop
arpl
mov
mov
xchg
ret
lret
lds
adc
repnz
nop
cld
jae
negl
adc
clc
repnz
nop
cld
jae
add
pop
aaa
fs
outsl
nop
clc
repnz
nop
cld
jae
add
aaa
add
cmp
mov
xchg
ret
add
popl
data16
add
iret
je
clc
repnz
nop
cld
jae
add
mov
add
inc
loopne
mov
xchg
ret
add
clc
add
add
dec
add
push
mov
xchg
ret
sbb
add
add
add
adc
add
repnz
nop
cld
jae
push
add
push
clc
repnz
nop
cld
jae
add
aad
xchg
add
pop
add
clc
repnz
nop
cld
jae
add
int
pop
or
in
nop
leave
jmp
pop
add
sub
outsb
mov
inc
push
mov
xchg
ret
add
push
nop
add
add
add
xor
clc
repnz
nop
cld
jae
jmp
mov
clc
repnz
nop
cld
jae
mov
push
mov
xchg
ret
add
test
add
add
arpl
inc
and
clc
repnz
nop
cld
jae
aas
aas
inc
add
in
push
push
mov
nop
leave
jmp
xchg
add
add
arpl
clc
repnz
nop
cld
jae
nop
add
add
das
jne
push
mov
nop
leave
jmp
test
mov
repnz
nop
cld
jae
add
addb
add
movsl
jnp
fdivr
incl
lods
add
sub
pop
add
divl
add
adc
mov
push
clc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
add
add
add
pop
icebp
jg
fdivrp
repnz
nop
cld
jae
lds
add
jle
das
push
clc
repnz
nop
cld
jae
jecxz
add
stc
dec
add
fs
mov
push
mov
xchg
ret
je
add
jle
lds
mov
clc
repnz
nop
cld
jae
push
in
add
mov
addb
xchg
xor
clc
repnz
nop
cld
jae
fadds
cmp
add
add
inc
adc
repnz
nop
cld
jae
int
mov
in
es
clc
repnz
nop
cld
jae
add
repnz
nop
cld
jae
add
jecxz
clc
aas
mov
push
mov
nop
leave
jmp
push
push
add
add
aas
filds
mov
xchg
ret
jns
lods
add
mov
add
clc
repnz
nop
cld
jae
add
je
faddl
lds
push
mov
xchg
ret
ror
cmp
add
xchg
stc
adc
mov
dec
add
repnz
nop
cld
jae
je
testl
mov
push
mov
xchg
ret
lret
data16
add
add
push
mov
xchg
ret
add
add
add
mov
nop
leave
jmp
add
add
sbb
or
clc
repnz
nop
cld
jae
lret
mov
push
mov
nop
leave
jmp
add
lret
xchg
popf
repz
mov
xchg
ret
aas
add
je
add
arpl
clc
repnz
nop
cld
jae
add
sub
push
mov
nop
leave
jmp
xchg
andl
clc
repnz
nop
cld
jae
clc
pop
add
add
add
push
mov
nop
leave
jmp
int
les
outsb
push
add
nop
nop
cld
jae
add
outsb
add
in
add
and
clc
repnz
nop
cld
jae
ja
jns
aad
xchg
pusha
add
lods
push
mov
xchg
ret
add
dec
add
loopne
mov
xchg
ret
push
lret
xchg
add
je
clc
repnz
nop
cld
jae
add
rcrb
inc
add
jecxz
add
ja
add
repnz
nop
cld
jae
jecxz
add
je
into
lods
pop
clc
repnz
nop
cld
jae
add
les
clc
add
aad
pop
push
mov
mov
nop
leave
jmp
cmp
add
ror
add
xchg
push
push
push
mov
xchg
ret
xchg
adcl
movsl
clc
repnz
nop
cld
jae
clc
add
add
into
aas
mov
repnz
nop
cld
jae
add
or
repnz
nop
cld
jae
add
mov
nop
nop
cld
jae
pop
arpl
cmp
mov
out
cmp
roll
xchg
ret
int
xchg
aaa
inc
add
fwait
push
clc
repnz
nop
cld
jae
into
and
aas
ja
jecxz
je
add
adc
xlat
inc
add
add
jle
cmp
jmp
nop
cld
jae
cmp
add
into
add
mov
clc
repnz
nop
cld
jae
sbbl
decl
pushf
repnz
add
add
add
ficoms
mov
xchg
ret
add
add
pop
add
pop
mov
in
leave
scas
pop
out
mov
add
add
add
insb
and
jmp
add
popf
lret
add
sbb
mov
add
add
add
add
xor
dec
lcall
test
cli
call
in
nop
leave
jmp
push
add
clc
stc
pop
push
mov
xchg
ret
pop
jno
add
jecxz
add
mov
nop
leave
jmp
add
lds
cmp
add
add
add
in
nop
leave
jmp
add
jmp
movb
mov
xchg
ret
add
add
adc
add
clc
repnz
nop
cld
jae
add
ja
fmuls
mov
adc
repnz
nop
cld
jae
xorb
push
nop
cld
jae
sbb
add
clc
cmp
add
clc
repnz
nop
cld
jae
xchg
add
andb
add
clc
repnz
nop
cld
jae
aas
add
outsl
jne
clc
repnz
nop
cld
jae
les
add
mov
out
inc
add
addl
aad
push
push
mov
xchg
ret
lods
lods
xchg
cmpl
or
or
add
xchg
rolb
aas
arpl
test
mov
in
nop
leave
jmp
cmp
add
arpl
push
jecxz
mov
nop
cld
jae
add
lds
test
jbe
clc
repnz
nop
cld
jae
add
jecxz
sahf
add
add
clc
repnz
nop
cld
jae
push
add
stos
add
push
mov
nop
leave
jmp
add
clc
add
dec
push
mov
add
add
add
add
or
add
jnp
jle
clc
repnz
nop
cld
jae
jns
jns
into
add
jecxz
push
push
mov
nop
leave
jmp
add
arpl
pop
faddl
jmp
pusha
clc
repnz
nop
cld
jae
les
add
cmp
add
adcb
nop
leave
jmp
movb
add
mov
nop
leave
jmp
add
shrb
sahf
add
push
jle
jge
clc
repnz
nop
cld
jae
add
add
pop
add
dec
cmp
into
dec
jns
stc
jns
add
aas
add
xchg
xchg
add
sub
push
mov
nop
leave
jmp
push
add
add
push
push
mov
xchg
ret
add
pop
cmp
int
pop
jae
mov
nop
leave
jmp
add
lea
clc
repnz
nop
cld
jae
add
clc
mov
clc
repnz
nop
cld
jae
sbb
mov
in
nop
leave
jmp
add
test
jno
popa
clc
repnz
nop
cld
jae
push
and
pop
add
add
push
mov
mov
add
xor
add
mov
stos
dec
ret
scas
add
clc
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
jmp
aad
mov
lods
add
daa
xor
push
add
clc
repnz
nop
cld
jae
arpl
push
add
add
add
clc
repnz
nop
cld
jae
add
add
mov
push
mov
xchg
ret
nop
addb
je
add
clc
repnz
nop
cld
jae
add
popw
cmp
orl
nop
nop
cld
jae
add
add
mov
rclb
in
nop
leave
jmp
mov
mov
add
into
mov
nop
nop
cld
jae
addb
add
push
clc
repnz
nop
cld
jae
add
arpl
sub
addl
mov
xchg
ret
mov
jle
add
popf
addb
mov
push
mov
nop
leave
jmp
add
push
aad
lea
clc
repnz
nop
cld
jae
add
lods
inc
xchg
mov
pop
pop
push
mov
xchg
ret
dec
add
notl
inc
add
add
mov
xchg
ret
jle
mov
add
add
adc
mov
das
cmpl
push
mov
nop
leave
jmp
add
push
add
stc
jle
jne
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
push
add
push
sbb
clc
repnz
nop
cld
jae
inc
shrb
arpl
lds
dec
lock
add
test
add
mov
clc
repnz
nop
cld
jae
add
je
or
dec
cmp
repnz
nop
cld
jae
pop
and
mov
je
add
clc
repnz
nop
cld
jae
add
dec
inc
add
add
loopne
inc
add
push
jmp
mov
add
repnz
nop
cld
jae
push
add
cmp
aad
sahf
test
mov
clc
repnz
nop
cld
jae
add
repz
nop
cld
jae
push
add
add
pop
adc
repnz
nop
cld
jae
test
push
into
mov
jmp
or
add
inc
in
jmp
push
lret
popl
push
sub
repnz
nop
cld
jae
add
cli
add
push
mov
xchg
ret
sbb
add
pop
mov
push
mov
xchg
ret
add
testl
fwait
loope
clc
repnz
nop
cld
jae
je
add
mov
clc
inc
add
data16
orl
or
cmp
ret
inc
add
mov
arpl
lds
add
add
psllw
es
mov
and
mov
arpl
repnz
nop
cld
jae
push
pop
add
add
repnz
nop
cld
jae
arpl
pop
xor
push
mov
xchg
ret
in
jmp
sub
add
inc
add
add
jmp
add
mov
push
loopne
repnz
nop
cld
jae
sbb
add
cmp
add
push
mov
nop
leave
jmp
aas
add
in
push
mov
pushf
mov
addb
add
push
mov
xchg
push
test
push
mov
nop
leave
jmp
mov
push
nop
add
bound
mov
push
lret
clc
repnz
nop
cld
jae
sahf
add
add
add
sahf
push
push
mov
xchg
ret
popl
mov
add
je
je
add
jae
inc
add
add
lods
in
add
clc
repnz
nop
cld
jae
add
sub
mov
scas
enter
nop
cld
jae
add
add
outsb
add
and
clc
repnz
nop
cld
jae
add
add
popl
pop
in
je
push
mov
nop
leave
jmp
outsb
add
cmpsb
cmp
push
mov
xchg
ret
sbb
add
pop
call
in
nop
leave
jmp
fdivl
leave
push
mov
nop
leave
jmp
jmp
mov
pop
push
mov
xchg
ret
add
add
push
mov
xchg
ret
add
add
ret
inc
add
add
fdivr
repnz
nop
cld
jae
dec
ja
mov
push
push
mov
xchg
ret
jmp
movb
cmp
jmp
add
add
add
dec
add
push
pop
add
push
mov
xchg
ret
add
jecxz
pop
scas
push
mov
jnp
xchg
jb
push
pop
add
add
ret
std
jns
add
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
jns
lods
add
push
add
push
mov
scas
sbb
mov
cmp
fiadds
cmpsl
dec
mov
hlt
jg
and
push
fs
repnz
nop
cld
jae
sub
ja
pop
mov
clc
repnz
nop
cld
jae
jmp
cmp
test
add
add
repnz
nop
cld
jae
data16
lret
clc
repnz
nop
cld
jae
push
add
add
add
jmp
sbb
pop
add
push
add
lret
jecxz
notl
sub
repnz
nop
cld
jae
add
pop
push
push
in
out
call
clc
repnz
nop
cld
jae
add
add
arpl
jmp
je
add
add
ja
add
fadds
cmp
mov
mov
nop
leave
jmp
nop
lret
add
sbb
mov
clc
repnz
nop
cld
jae
pop
xchg
sub
add
cmp
mov
clc
repnz
nop
cld
jae
add
add
add
push
mov
aas
movb
insb
add
cmc
lods
pop
add
movsb
jmp
add
add
into
sbb
add
pop
stc
je
add
pop
push
mov
nop
leave
jmp
add
add
add
push
mov
nop
leave
jmp
stc
inc
jmp
int
xor
clc
repnz
nop
cld
jae
push
into
push
fdivrs
pop
gs
add
test
add
jno
jecxz
add
add
ret
fs
adc
leave
clc
repnz
nop
cld
jae
mov
clc
mov
cltd
pusha
push
mov
xchg
ret
add
lds
in
push
push
mov
xchg
ret
add
add
add
js
js
push
mov
nop
leave
jmp
add
add
add
or
nop
cld
jae
add
pop
outsb
inc
mov
cmp
repnz
nop
cld
jae
inc
add
add
orl
in
dec
add
jle
pop
push
add
mov
mov
xchg
ret
mov
add
add
test
add
in
nop
leave
jmp
xchg
add
push
aaa
sbb
nop
nop
cld
jae
add
addb
sub
sub
add
add
test
fdivrl
mov
mov
xchg
ret
ja
lret
pop
stc
xchg
mov
add
clc
repnz
nop
cld
jae
add
add
add
clc
add
dec
xlat
inc
add
add
add
mov
push
clc
repnz
nop
cld
jae
add
add
in
lea
clc
repnz
nop
cld
jae
popf
sub
or
clc
repnz
nop
cld
jae
mov
dec
inc
aad
cltd
xchg
clc
repnz
nop
cld
jae
add
into
fnstcw
lret
in
nop
leave
jmp
arpl
add
add
pop
jg
mov
adc
repnz
nop
cld
jae
add
xchg
add
mov
jmp
add
testl
add
pop
data16
and
push
mov
xchg
ret
pop
mov
aas
inc
es
mov
cmp
ret
popf
add
aas
push
mov
sub
nop
nop
cld
jae
sahf
nop
add
add
inc
add
push
clc
repnz
nop
cld
jae
jns
add
aaa
xorl
add
push
mov
nop
leave
jmp
dec
sbbb
mov
shl
push
mov
xchg
ret
je
jns
pop
aas
add
mov
int
clc
repnz
nop
cld
jae
add
mov
add
repnz
nop
cld
jae
jns
add
add
arpl
xor
mov
cmpsl
xchg
inc
clc
repnz
nop
cld
jae
add
addb
add
mov
clc
repnz
nop
cld
jae
nop
outsb
and
push
mov
nop
leave
jmp
in
add
jne
add
inc
adc
repnz
nop
cld
jae
add
int
add
call
clc
repnz
nop
cld
jae
add
outsb
add
loop
clc
repnz
nop
cld
jae
in
fadds
add
push
into
sub
clc
repnz
nop
cld
jae
rclb
ret
clc
repnz
nop
cld
jae
xchg
jecxz
sahf
add
add
mov
repnz
nop
cld
jae
divl
xchg
add
sub
repnz
nop
cld
jae
add
mov
cwtl
pop
clc
repnz
nop
cld
jae
aaa
add
add
lret
lods
push
mov
xchg
ret
or
add
add
jl
xor
repnz
nop
cld
jae
push
add
pop
pop
ret
test
fiaddl
xchg
ret
push
pop
jno
push
add
aas
lods
popa
clc
repnz
nop
cld
jae
add
add
add
add
mov
add
in
nop
leave
jmp
add
mov
add
and
mov
add
mov
jmp
clc
repnz
nop
cld
jae
sbb
mov
xchg
adc
mov
mov
inc
clc
repnz
nop
cld
jae
add
les
jne
push
clc
repnz
nop
cld
jae
lret
popf
incl
dec
cmp
repnz
nop
cld
jae
lret
stc
add
add
clc
repnz
nop
cld
jae
xchg
add
mov
mov
shl
clc
repnz
nop
cld
jae
sbb
arpl
push
add
mov
push
clc
repnz
nop
cld
jae
aad
nop
push
add
cli
mov
clc
repnz
nop
cld
jae
data16
add
add
repz
mov
repnz
nop
cld
jae
popf
inc
addb
negl
add
cmp
push
mov
nop
leave
jmp
jmp
cmpl
push
mov
nop
leave
jmp
inc
mov
les
add
sar
inc
add
add
add
add
add
push
add
push
mov
xchg
ret
clc
lds
add
arpl
xchg
add
in
add
lods
insb
add
jge
test
xchg
add
xchg
or
je
push
mov
nop
leave
jmp
sahf
jno
pop
mov
lahf
and
push
mov
xchg
ret
outsb
sub
add
add
and
add
repnz
nop
cld
jae
xchg
les
add
mov
push
mov
xchg
ret
nop
aas
add
jecxz
add
mov
nop
cld
jae
xchg
data16
sahf
jecxz
add
repnz
nop
cld
jae
lret
aaa
dec
sahf
push
ljmp
cld
jae
les
add
push
imul
nop
nop
cld
jae
add
popl
ficompl
mov
xchg
ret
popf
mov
aad
xchg
or
fs
and
jmp
jmp
sbb
stc
add
add
lret
aad
adcl
fwait
xchg
push
mov
nop
leave
jmp
aad
into
dec
testl
call
clc
repnz
nop
cld
jae
add
mov
ret
push
mov
nop
leave
jmp
push
add
pop
movb
sar
jge
push
mov
nop
leave
jmp
add
add
cmp
xchg
jp
in
add
add
push
mov
nop
leave
jmp
data16
add
call
clc
repnz
nop
cld
jae
add
pop
popf
rolb
dec
push
mov
add
rolb
add
dec
add
jg
enter
nop
nop
cld
jae
add
aaa
aaa
push
dec
add
add
nop
nop
cld
jae
add
add
xchg
fisttpl
test
repnz
nop
cld
jae
je
rolb
lcall
nop
cld
jae
ja
mov
add
xor
mov
adc
repnz
nop
cld
jae
nop
add
push
xchg
cmpsl
jmp
inc
clc
repnz
nop
cld
jae
add
add
add
je
clc
repnz
nop
cld
jae
nop
lds
out
mov
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
add
xlat
and
clc
repnz
nop
cld
jae
lret
add
push
clc
jb
clc
repnz
nop
cld
jae
sbb
add
enter
nop
cld
jae
add
add
lret
dec
push
push
mov
xchg
ret
nop
add
add
jg
jp
jbe
clc
repnz
nop
cld
jae
push
push
mov
clc
repnz
nop
cld
jae
adcl
nop
cld
jae
add
arpl
add
push
push
mov
nop
leave
jmp
addb
cmp
mov
rolb
jg
and
lret
fadds
xchg
ret
add
add
clc
ret
add
add
lods
push
add
push
push
mov
xor
mov
mov
xchg
ret
add
xchg
sahf
pop
clc
repnz
nop
cld
jae
push
nop
add
add
mov
pop
rep
push
mov
xchg
ret
jecxz
add
ret
lea
add
repnz
nop
cld
jae
test
ss
mov
clc
repnz
nop
cld
jae
add
jns
into
add
add
mov
mov
clc
repnz
nop
cld
jae
lods
clc
jle
add
clc
repnz
nop
cld
jae
add
add
cmpl
int
pop
jae
repnz
nop
cld
jae
and
add
add
add
nop
nop
cld
jae
add
sbb
push
mov
xchg
ret
arpl
add
add
push
cwtl
xchg
clc
repnz
nop
cld
jae
sahf
je
pop
add
add
jb
jae
clc
repnz
nop
cld
jae
add
pop
add
mov
clc
repnz
nop
cld
jae
add
pop
clc
repnz
nop
cld
jae
pop
add
add
je
mov
push
mov
nop
leave
jmp
add
push
inc
add
add
je
clc
repnz
nop
cld
jae
add
mov
nop
leave
jmp
add
add
aas
pop
add
add
add
pop
push
mov
xchg
ret
add
add
jecxz
add
mov
rep
clc
repnz
nop
cld
jae
add
add
ret
push
mov
nop
leave
jmp
add
je
add
add
push
mov
xchg
ret
int
add
add
add
clc
repnz
nop
cld
jae
arpl
popa
push
mov
nop
leave
jmp
add
add
mov
clc
repnz
nop
cld
jae
add
xchg
add
mov
clc
repnz
nop
cld
jae
clc
lds
add
je
push
mov
push
sbb
test
mov
nop
leave
jmp
int
jno
ds
clc
repnz
nop
cld
jae
idivl
je
add
add
jmp
lds
add
add
jns
clc
aaa
add
pop
add
push
mov
xchg
ret
int
add
les
sahf
out
les
push
mov
nop
leave
jmp
clc
sahf
add
jns
movsb
xchg
push
insb
add
push
mov
xchg
ret
push
testl
push
and
add
mov
repnz
nop
cld
jae
jle
add
jbe
mov
clc
repnz
nop
cld
jae
ja
sbb
movb
xor
clc
repnz
nop
cld
jae
add
inc
test
nop
cld
jae
add
sahf
add
add
aad
lahf
mov
clc
repnz
nop
cld
jae
add
mov
push
mov
nop
leave
jmp
sbb
cmp
rolb
mov
mov
nop
nop
cld
jae
pop
push
dec
mov
add
repnz
nop
cld
jae
add
add
mov
in
call
cmp
in
nop
leave
jmp
xchg
les
test
adc
mov
ja
and
push
mov
xchg
ret
sub
add
popf
add
mov
clc
repnz
nop
cld
jae
add
push
mov
cmpw
push
mov
nop
leave
jmp
add
and
sub
enter
nop
cld
jae
add
add
or
jne
clc
repnz
nop
cld
jae
dec
pop
mov
data16
nop
leave
jmp
xchg
add
add
add
add
cld
jae
add
add
add
mov
nop
leave
jmp
popf
add
and
push
xor
stos
clc
repnz
nop
cld
jae
add
add
sub
push
mov
nop
leave
jmp
pop
cmp
mov
sahf
popl
dec
add
push
mov
nop
leave
jmp
popf
add
add
add
nop
nop
cld
jae
sub
add
fimull
test
clc
repnz
nop
cld
jae
add
add
ljmp
nop
cld
jae
sbb
aaa
stc
add
ret
cld
mov
clc
repnz
nop
cld
jae
add
add
cmp
icebp
clc
repnz
nop
cld
jae
mov
xchg
jecxz
sbb
adc
add
clc
repnz
nop
cld
jae
divl
push
dec
addl
jae
sbb
addb
add
mov
mov
nop
leave
jmp
add
and
add
nop
push
add
add
clc
repnz
nop
cld
jae
add
sbb
clc
repnz
nop
cld
jae
fsubl
add
jne
clc
repnz
nop
cld
jae
clc
clc
addl
dec
or
in
nop
leave
jmp
lret
in
aas
sub
dec
inc
add
cmp
xchg
fadds
add
fisttps
test
add
clc
repnz
nop
cld
jae
add
xchg
pop
push
clc
repnz
nop
cld
jae
aaa
test
add
nop
nop
cld
jae
mov
add
popl
add
arpl
mov
nop
leave
jmp
testl
push
push
mov
xchg
ret
add
add
add
int
lods
or
in
nop
leave
jmp
inc
jns
add
jmp
push
fsts
repnz
nop
cld
jae
mov
add
add
mov
xchg
ret
add
dec
add
ret
inc
mov
dec
pop
clc
repnz
nop
cld
jae
inc
sbb
cmp
sbb
add
or
nop
cld
jae
lret
add
pop
lret
add
clc
repnz
nop
cld
jae
mov
add
mov
pop
jne
clc
repnz
nop
cld
jae
add
push
dec
add
push
mov
xchg
ret
add
data16
xchg
aas
xchg
fwait
mov
push
mov
nop
leave
jmp
pop
add
jecxz
stc
test
adc
fcomip
movsb
clc
repnz
nop
cld
jae
stc
add
jecxz
jns
mov
and
clc
repnz
nop
cld
jae
jecxz
cmp
data16
xchg
add
clc
repnz
nop
cld
jae
xchg
add
add
addr16
clc
repnz
nop
cld
jae
add
add
mov
nop
nop
cld
jae
add
pop
add
les
push
mov
nop
leave
jmp
add
add
stc
push
out
mov
push
mov
xchg
ret
add
add
add
clc
repnz
nop
cld
jae
arpl
ja
faddl
outsb
pop
jmp
nop
cld
jae
add
ja
stc
stc
xchg
rclb
sub
and
inc
add
pop
add
pop
push
imull
add
lret
push
add
les
sbb
repz
mov
nop
leave
jmp
add
inc
mov
add
mov
clc
repnz
nop
cld
jae
push
add
add
rorl
add
repnz
nop
cld
jae
mov
add
mov
notl
in
nop
leave
jmp
add
pop
nop
clc
movzwl
clc
repnz
nop
cld
jae
push
push
rolb
movsl
xor
mov
lea
clc
repnz
nop
cld
jae
popf
or
add
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
addb
lret
shlb
push
mov
xchg
ret
jecxz
fadds
orb
add
mov
cmp
ret
xchg
add
arpl
add
push
mov
xchg
ret
add
add
push
mov
xchg
ret
add
clc
int
add
mov
dec
ss
clc
repnz
nop
cld
jae
or
push
aas
mov
clc
repnz
nop
cld
jae
add
add
lods
jmp
xchg
add
sub
add
aas
and
push
mov
push
lret
arpl
sbb
jb
mov
addl
xchg
pop
mov
add
pushf
in
scas
dec
ret
stc
hlt
popa
lret
pop
push
cld
push
pop
sbb
sub
sub
sbb
sti
shrl
push
fldt
and
mov
rolb
rolb
mov
mov
scas
xchg
xchg
or
pop
fdivl
pop
outsb
xor
lahf
pop
xor
jle
add
add
sub
dec
pop
sub
and
mov
mov
jecxz
add
cs
rolb
mov
dec
repnz
and
rolb
mov
adc
mov
mov
xchg
push
add
loope
add
setl
xor
add
mov
loope
add
add
bound
mov
gs
add
adc
or
rcrl
sbb
add
or
mov
popa
mov
adc
rorl
mov
add
xchg
jmp
mov
jns
jnp
xchg
pop
dec
jne
pop
or
leave
fstpt
add
mov
sahf
push
inc
jecxz
and
mov
pop
std
jmp
out
addr16
pcmpeqd
add
and
push
add
test
dec
xchg
in
in
cmp
mov
pop
cmp
jae
enter
fisubs
inc
add
iret
test
int3
movsl
aaa
cltd
sub
addb
cmp
fistpll
push
sti
fldl
mov
cmp
mov
adc
mov
mov
mov
frstor
and
mov
pop
adc
mov
inc
push
inc
lcall
xchg
or
or
add
pop
mov
add
push
add
dec
mov
add
and
pop
xchg
add
add
pop
mov
add
std
pop
addr16
mov
pop
xchg
aas
cmp
sbb
stc
inc
out
fs
add
in
xchg
inc
mov
scas
xchg
lods
in
test
jae
out
addb
mov
mov
mov
mov
bound
mov
xlat
sub
mov
add
mov
add
push
cmp
std
fstpl
jae
push
fisubl
xor
pop
adc
ja
repz
inc
inc
outsb
dec
adc
test
add
cmp
fisttps
in
add
mov
mov
data16
fmul
es
pop
jo
mov
mov
inc
adc
btr
adc
mov
add
sbb
jecxz
xchg
pop
jecxz
push
mov
out
dec
fisttpl
xlat
into
mov
cmpsl
mov
jbe
or
add
loope
xor
mov
gs
mov
add
clc
mov
mov
add
add
mov
xchg
and
cmpsb
lds
mov
jno
out
out
dec
sbb
and
mov
xchg
add
cs
fwait
pop
stc
std
pop
fildll
add
or
enter
aas
fiaddl
add
pop
and
mov
mov
ljmp
mov
or
or
lods
mov
cmp
add
inc
mov
cmc
sub
push
add
cmpsb
sbb
adc
mov
mov
orl
cmp
xlat
mov
ss
cmp
add
and
mov
fs
lea
movsl
daa
dec
sbb
push
outsb
jge
pop
jmp
add
aad
add
or
xor
mov
lods
xlat
ret
dec
outsb
and
mov
data16
add
and
mov
mov
aam
fs
mov
jmp
add
add
fsubp
add
in
mov
mov
mov
mov
add
mov
push
cmp
mov
dec
into
das
cmc
shll
loope
lods
cmpsl
push
pop
cmp
scas
sub
arpl
mov
add
cld
movq
mov
clc
pushf
fmuls
add
js
test
fcmovnu
ret
mov
ret
int
add
es
add
repnz
inc
xor
mov
cmp
lsl
mull
xchg
mov
mov
and
add
push
xor
mov
dec
xor
mov
mov
add
mov
and
data16
rcrl
out
inc
add
sub
mov
arpl
add
int3
jge
cmp
repz
xlat
push
and
add
xor
mov
lods
fistl
lcall
jle
sub
or
jmp
mov
sub
mov
loope
or
cmp
test
mov
out
cwtl
call
test
and
add
lock
jmp
add
arpl
add
add
xlat
pushf
pop
jns
add
cmp
mov
insb
pusha
add
mov
mov
add
ret
sbb
popf
inc
inc
je
or
mov
leave
sti
test
push
lcall
stos
addb
sbb
pusha
add
test
jp
inc
leave
add
repz
mov
jecxz
in
add
mov
mov
dec
adc
popa
dec
cmp
mov
lret
sbb
add
test
rorl
in
dec
adc
mov
stos
sub
addb
bound
mov
pushf
loope
add
xor
insb
in
jg
adc
scas
inc
xor
add
outsl
mov
mov
mov
mov
add
stos
out
jns
aad
adc
xor
pusha
add
add
xchg
out
aad
add
jbe
pop
inc
test
mov
jns
sub
and
lods
add
sbb
enter
add
mov
mov
shll
mov
aad
and
add
dec
inc
add
cs
mov
inc
or
mov
sbb
filds
gs
add
sbb
mov
xlat
cmpsb
imull
add
pop
jge
dec
mov
push
shll
out
dec
fldenv
add
add
push
lods
out
mov
add
mov
rolb
xor
in
enter
mov
mov
aam
add
frstor
jmp
mov
add
mov
call
popa
rolb
mov
sti
inc
cmp
and
mov
test
test
add
int
inc
xchg
pop
std
rcll
pop
jg
xchg
ret
sti
es
imul
sahf
add
mov
jle
sbb
iret
and
adc
loopne
mov
gs
mov
add
adc
add
hlt
jp
sbb
push
adc
mov
sub
xor
jecxz
shll
mov
add
dec
addb
ret
aad
add
jns
enter
jg
clc
ss
roll
loop
mov
daa
outsb
sbb
ret
ret
sbbl
jnp
lret
test
mov
add
out
mov
mov
push
aam
xor
xchg
add
inc
add
pop
push
mov
cmp
fwait
and
inc
push
fldt
mov
mov
outsb
es
cld
jle
add
das
mov
int3
xor
mov
sub
pop
mov
out
fisubrl
mov
mov
addb
push
cmp
insb
dec
dec
dec
rolb
mov
add
add
leave
adc
xchg
bound
mov
and
add
mov
add
lods
das
addb
outsb
mov
test
insl
dec
add
mov
mov
stc
lahf
cmpsb
stos
popf
cwtl
or
mulb
or
mov
ss
stc
and
cmpl
xchg
ds
sbb
mov
in
cmp
sub
add
popl
mov
les
scas
movaps
add
pop
adc
mov
mov
add
leave
and
mov
mov
shrl
pop
imul
adc
stos
hlt
hlt
addb
xlat
ret
cmp
add
mov
add
xor
sub
fsts
add
add
push
inc
mull
insl
sbb
sub
mov
addr16
dec
mov
and
fmul
dec
pop
inc
mov
aas
out
hlt
inc
imulb
aaa
fcom
add
test
mov
add
addr16
popf
dec
pop
push
rorl
lods
inc
add
ret
ss
add
aaa
enter
add
push
cmp
int
rolb
mov
cli
arpl
cmp
cmp
mov
jbe
addr16
push
and
ss
mov
repz
and
ljmp
loope
aaa
into
loopne
mov
gs
push
add
add
out
es
pop
rolb
mov
add
fisubl
mov
hlt
es
mov
push
cli
icebp
push
or
addb
add
mov
loope
insl
iret
das
mov
sbb
push
mov
add
mov
nop
add
sub
fsubl
add
mov
add
dec
fists
mov
cli
lea
btc
mov
mov
es
push
add
mov
jne
adc
insb
pop
inc
mov
adc
out
cmpsb
jl
outsl
cld
pusha
add
inc
add
loop
mov
pop
xchg
add
lock
les
add
jne
add
mov
and
mov
adc
fildl
mov
cli
arpl
push
add
add
imul
fstpt
enter
pop
mov
imul
mov
jmp
fwait
stos
and
mov
mov
out
pushf
aaa
hlt
mov
add
in
int
lods
push
mov
mov
cmp
jnp
popf
mov
jle
in
mov
mov
mov
nop
add
mov
xchg
fsubl
adc
add
sub
or
dec
sti
in
add
xchg
add
sub
mov
repz
cwtl
outsl
das
addb
cs
mov
insl
lea
add
ds
xchg
xor
mov
and
add
cli
shll
add
push
test
addl
mov
pusha
add
jae
jns
add
and
mov
inc
push
shr
sahf
je
insl
loope
mov
mov
mov
add
mov
mov
jnp
mov
dec
addl
add
mov
adc
insb
sti
or
repz
mov
cmp
popa
nop
add
dec
loop
mov
mov
iret
cmpsl
data16
and
aas
mov
loope
cmp
push
mov
mov
push
and
mov
pop
add
add
add
and
stc
aad
popa
adc
jb
mov
xchg
mov
sub
xchg
and
push
sbb
out
fwait
rolb
mov
mov
mov
mov
jns
loopne
mov
and
lret
pop
movsl
pop
lahf
and
dec
sti
push
xchg
jl
scas
testl
loopne
mov
pop
xchg
sub
mov
add
jle
iret
lea
jle
ja
out
rolb
mov
add
mov
adc
or
dec
push
xor
jecxz
mov
mov
add
mov
fistpl
xchg
mov
out
and
mov
or
cmp
inc
mov
imul
add
push
add
xor
mov
pop
jp
xlat
imul
add
xor
mov
or
mov
add
gs
loopne
mov
mov
icebp
push
mov
ljmp
add
imul
sbb
add
mov
mov
insl
inc
cs
idivb
popa
rolb
mov
mov
xchg
pop
ret
mov
xlat
loope
add
add
ljmp
fildl
in
ds
mov
inc
sbb
pop
or
repnz
mov
sbb
fs
add
and
add
add
jo
mov
mov
jl
mov
or
mov
testb
add
lods
rolb
mov
movsl
add
adc
mov
add
mov
outsb
scas
fninit
les
mov
rolb
mov
add
cmp
pop
stc
pop
lret
or
icebp
pop
add
mov
push
jo
mov
shll
jno
imul
mov
dec
mov
add
inc
int3
popa
push
add
add
push
add
mov
dec
push
das
cmp
mov
sub
mov
push
add
add
push
mov
mov
add
pop
out
pop
movb
push
cmp
and
test
mov
data16
sti
inc
add
cmp
or
inc
add
test
data16
xchg
fidivl
in
dec
sbb
pop
out
fsubrl
sub
mov
mov
scas
lods
fsubl
add
outsl
roll
sub
mov
loope
add
lea
add
xchg
enter
pop
dec
in
xchg
mov
adc
fldt
add
add
mov
lcall
dec
push
icebp
sub
add
mov
push
cmp
and
cmp
add
mov
xchg
add
add
lods
xchg
bound
mov
fimuls
jmp
cmp
pop
jmp
repz
pop
lods
xchg
ret
ret
rol
aad
lods
or
mov
sahf
les
push
into
les
add
lret
jecxz
fnstsw
jb
mov
inc
dec
inc
add
mov
add
add
mov
dec
mov
mov
mov
jg
add
adc
and
mov
dec
mov
add
mov
cmp
in
add
mov
mov
dec
xlat
popf
mov
mov
cwtl
cmp
sub
add
aad
inc
jmp
add
lcall
add
inc
inc
jmp
pop
aaa
push
scas
mov
add
xchg
jg
jecxz
clc
jge
push
add
loopne
mov
mov
aaa
lods
js
jmp
sti
sbb
fstpt
loopne
mov
pop
or
xchg
addr16
pop
and
gs
add
and
mov
scas
in
add
or
loop
mov
xor
mov
mov
or
rolb
test
jno
xor
mov
xchg
xchg
mov
push
dec
pusha
add
or
push
lret
push
and
mov
add
mov
je
xchg
arpl
and
incl
aaa
add
mov
xor
fmuls
mov
nop
add
lds
or
fidivl
push
xchg
stos
jbe
add
and
mov
add
arpl
int3
in
sti
xor
ret
daa
xchg
add
pop
cmp
movsb
jmp
mov
test
pop
in
push
out
jnp
mov
jmp
das
scas
or
lock
lret
sti
pop
push
push
mov
jne
pop
pop
or
bound
mov
dec
jne
mov
dec
and
jnp
fisttpll
div
add
fs
cltd
stos
dec
rolb
imul
add
sarl
mov
push
mov
mov
mov
add
test
cmpsl
mov
mov
mov
je
scas
dec
xor
mov
sbb
lods
dec
push
mov
add
les
test
mov
stos
inc
mov
push
jmp
add
or
jno
cmpsb
mov
xchg
mov
mov
jecxz
loop
mov
xchg
std
fdivl
in
fdivrl
mov
add
add
pop
popa
shll
mov
repz
add
popf
popa
int3
daa
lcall
mov
cmp
arpl
jp
inc
std
pop
out
in
int3
inc
aas
pop
out
jg
std
cmp
stc
or
das
pushf
adc
lret
add
icebp
and
mov
nop
add
xor
cmc
scas
and
mov
andl
mov
or
add
bound
mov
fdivrs
sub
add
mov
addb
sub
adcl
push
add
mov
add
mov
mov
inc
mov
mov
add
mov
jbe
sbb
mov
xchg
cmp
cmpsb
fdivrs
iret
test
test
aas
aaa
sub
andl
mov
add
xchg
es
xor
add
pop
lea
rclw
add
stc
pop
sub
adc
push
and
mov
stc
jno
and
aam
addl
pop
rcrl
sbb
inc
xor
mov
jnp
or
imul
add
dec
pop
mov
mov
pop
inc
xor
cmpsb
pop
in
test
mov
fists
addb
push
add
sti
mov
rolb
mov
test
mov
dec
xor
mov
or
addb
jne
jbe
imul
dec
jb
mov
add
lret
mov
push
imul
pop
dec
shr
push
add
dec
cmpsl
mov
mov
cltd
ds
mov
xor
mov
aas
mov
bswap
mov
dec
out
xor
and
stc
test
iret
enter
cmp
pop
mov
icebp
insb
lahf
pusha
add
aas
out
sarl
pop
adc
sub
or
add
mov
and
dec
fs
push
xchg
jecxz
stos
cmp
out
stos
rcrl
xchg
movsl
dec
cmp
inc
xor
mov
dec
inc
add
mov
repnz
cmp
outsb
pushf
cmp
rolb
mov
inc
add
mov
iret
add
push
xchg
ffree
jns
sub
iret
mov
cmp
sub
inc
std
add
pop
sbb
fnsave
stos
mov
mov
movsl
inc
add
add
mov
pop
cwtl
inc
imul
mov
push
jne
repz
rolb
mov
mov
add
xchg
mov
fimull
sbb
push
clc
cmp
lds
mov
pushf
sbb
inc
add
lock
and
mov
in
repnz
push
sub
rolb
mov
cli
ja
in
adc
add
add
jecxz
pusha
add
pushf
je
cmp
rolb
mov
rcll
dec
inc
add
mov
pop
dec
sbb
mov
hlt
adc
mov
and
add
jecxz
enter
scas
lods
out
leave
bound
mov
mov
das
addr16
mov
inc
cmp
in
push
fwait
ret
mov
mov
aam
ljmp
out
add
pop
imul
mov
add
add
lods
push
add
stos
adc
add
or
scas
sub
movb
mov
lahf
addb
dec
mov
jge
scas
stos
mov
scas
add
mov
add
dec
push
and
mov
imul
sub
fidivs
je
mov
repnz
int
xchg
pop
mov
adc
add
push
std
pop
cmp
add
jmp
sub
mov
ds
or
sub
inc
cld
ret
and
add
mov
add
mov
adc
leave
mov
mov
dec
mov
sbb
or
rorl
jecxz
dec
mov
pop
cmpsl
cmp
scas
mov
mov
pop
inc
movsl
mov
call
push
push
and
mov
pushf
cmp
call
push
adc
mov
add
ficoml
inc
mov
sub
add
sbb
loop
mov
mov
or
add
test
inc
add
loopne
mov
test
cmp
pop
lods
mov
jp
cmp
test
add
outsl
loopne,pt
mov
cmp
addb
popa
loope
add
jno
lea
nop
add
mov
and
mov
mov
mov
add
mov
add
rolb
mov
sbb
cmpsb
out
pop
dec
ja
inc
add
movsl
push
shrl
add
rcll
cmp
aas
insb
lods
pusha
add
add
in
jle
rolb
mov
std
xor
lcall
in
fcomps
popa
out
movl
cmp
pop
repz
sti
test
enter
mov
add
sub
mov
mov
dec
daa
aad
fmuls
xchg
push
ret
es
lock
cli
xchg
data16
addb
in
xor
add
pusha
add
adc
mov
and
mov
add
sti
and
mov
mov
mov
inc
movsl
filds
jb
mov
add
popf
mov
mov
dec
xor
arpl
jp
add
cmp
pusha
add
pop
sbb
addb
movd
mov
mov
in
cmpl
addb
dec
mov
push
jmp
and
mov
imul
rolb
sub
pop
das
jne
inc
add
or
and
mov
movsb
into
cwtl
fisubs
mov
out
fmuls
mov
add
outsb
icebp
sub
repnz
rcrl
mov
mov
add
aad
jno
das
mov
insl
adc
sbb
ss
push
jno
mov
jle
aad
andl
mov
jge
add
dec
mov
or
leave
sahf
fldcw
ret
sub
add
mov
scas
iret
bound
mov
cwtl
roll
jb
mov
push
dec
sbb
js
xchg
cmpsb
fmull
ds
add
ret
or
rcrl
mov
inc
shll
add
mov
dec
data16
fistpll
mov
fwait
loop
mov
fists
add
stos
in
push
and
cmpsb
cld
lahf
add
xor
mov
xchg
inc
mov
add
iret
mov
sahf
jb
mov
shll
jb
mov
add
repnz
pushl
into
xchg
lea
fsubrs
cmc
outsl
sbb
stos
or
fs
jge
addr16
add
mov
enter
push
xchg
in
and
test
addb
adc
push
mov
lds
or
and
add
movsl
sbb
arpl
cmp
jmp
xchg
arpl
add
loopne
mov
lods
cs
aad
cmp
sub
iret
cs
enter
fildll
insl
lret
dec
cs
clc
push
lods
inc
add
mov
add
inc
pop
cmp
add
hlt
or
nop
add
movd
add
inc
add
aas
xchg
fisubl
inc
add
popf
jb
mov
out
sbb
mov
mov
cmpl
xor
test
dec
xchg
test
mov
repnz
ds
pop
add
mov
sub
insb
in
movsl
mov
add
add
int3
xchg
fcomps
add
add
fisttpl
out
cmp
jno
mov
jecxz
cmp
jae
pop
or
es
xchg
add
les
mov
enter
rolb
mov
sub
insl
aaa
sti
xchg
cmp
and
test
dec
ja
addb
iret
int
sahf
daa
arpl
push
mov
jbe
jmp
xchg
add
add
mov
sub
or
xor
dec
or
xchg
hlt
fistl
add
and
inc
mov
jmp
pop
inc
in
clc
adc
mov
mov
int
add
in
push
fdivr
push
cmp
sbb
call
pop
std
xor
repz
pop
cmp
inc
sti
mov
das
rcrl
aaa
xchg
ret
mov
jbe
pop
in
sbb
mov
ret
dec
clc
test
inc
mov
add
jg
add
je
add
aaa
pop
dec
mov
lret
imul
and
add
mov
push
imul
push
xchg
clc
hlt
and
pop
push
mov
repz
pop
leave
shll
cmpsl
test
or
or
sti
sti
push
jg
jmp
in
cmp
add
addb
stos
test
ds
sbb
dec
jo
mov
aas
int
fimull
mov
xchg
add
cmp
jmp
add
jns
in
mov
mov
mov
mov
mov
fwait
xchg
sbb
push
jecxz
nop
add
push
add
and
mov
mov
bound
mov
dec
cmovbe
inc
outsb
dec
stos
jp
icebp
lcall
fsubrp
mov
mov
jo
mov
pusha
add
add
add
cmp
outsb
test
ret
xchg
xchg
sahf
dec
sahf
mov
mov
mov
movsl
loop
mov
imul
add
fidivrl
and
mov
mov
lods
cmp
lahf
hlt
xor
xchg
cmc
and
add
pop
in
add
testb
adc
mov
inc
scas
es
ficoml
mov
add
loop
mov
movsb
jge
push
in
pop
adc
mov
sbb
test
add
aas
add
mov
add
jo
mov
cmp
cs
rolb
mov
mov
mov
pop
dec
ror
jb
mov
loope
fadds
or
clc
push
ret
push
push
fdivl
lea
add
fcompl
testb
sbb
ss
sub
add
add
or
daa
mov
push
adc
sub
popl
outsl
lcall
add
push
pop
dec
jmp
push
js
xor
mov
lahf
shr
int
scas
mov
inc
outsl
push
push
inc
add
addb
jmp
push
mov
imul
jp
es
inc
add
mov
add
lds
inc
aad
push
addr16
and
mov
movsb
cwtl
inc
repz
add
addb
adc
sbb
xchg
stc
enter
dec
inc
in
add
iret
testb
add
mov
add
add
les
hlt
scas
adc
sahf
fistpll
mov
add
addb
ja
scas
pop
je
cmc
and
xor
mov
pop
xor
mov
sbb
adc
mov
or
mov
pop
ret
ljmp
mov
sub
add
push
sbb
pop
dec
dec
lods
push
add
mov
jbe
dec
aam
cmp
cwtl
dec
fwait
out
add
rolb
mov
or
push
xchg
sbb
fdiv
add
mov
shll
add
mov
shll
xor
mov
mov
pop
and
test
outsl
enter
add
mov
sub
adc
add
pop
dec
test
add
mov
ret
popf
xchg
int3
fnsave
das
scas
out
mov
pop
sahf
int3
andl
xchg
add
pushf
cmpsl
mov
add
mov
push
ljmp
inc
mov
xchg
push
pop
fcmovnbe
shll
add
xchg
dec
movl
mov
xchg
add
mov
xchg
cmc
loop
mov
iret
mov
add
add
lea
mov
mov
and
xor
mov
call
fs
ret
xor
les
add
adc
jne
add
outsl
cwtl
dec
sti
xchg
loopne
mov
fs
add
mov
add
sbb
out
paddq
mov
mov
pop
mov
add
jbe
jecxz
pop
dec
jge
add
xor
ret
idivl
add
mov
add
test
xchg
mov
jle
pop
pop
loope
es
fucomp
cmp
leave
or
mov
mov
xchg
adc
test
jae
enter
cmp
sub
lcall
mov
arpl
es
int
aad
pop
int
mov
pop
mov
sub
add
xor
mov
jae
add
addb
mov
mov
out
ret
test
aas
rolb
mov
stos
adc
mov
mov
push
add
stos
je
mov
mov
jb
mov
in
adc
xor
mov
xor
cltd
sahf
mov
jo
mov
or
dec
rcr
xchg
inc
mov
cmp
add
push
dec
and
out
addb
sbb
cmpsl
xchg
or
push
sbb
mov
pop
or
mov
mov
and
add
jmp
mov
cli
andl
lods
xchg
or
jge
scas
mov
bound
mov
mov
sar
add
jns
addb
mov
mov
or
pop
aam
add
add
lahf
int3
xor
adc
and
mov
mov
mov
jg
into
add
into
outsb
daa
push
add
stos
sbb
in
nop
add
test
test
mov
add
mov
mov
outsl
mov
push
jl
icebp
psrld
mov
stc
clc
or
cmp
cmp
cmc
mov
lods
add
mov
das
push
out
add
dec
jae,pn
out
adc
mov
aad
lock
mov
mov
xchg
dec
addb
or
daa
mov
dec
test
test
xor
add
push
cmc
fbld
enter
jne
sub
fcomi
sti
lea
ja
sbb
je
pop
loopne
mov
imul
aam
in
add
adc
aad
lret
fcoml
mov
stc
push
std
xchg
lret
mov
mov
mov
add
xchg
dec
nop
add
push
add
lret
mov
mov
add
js
pop
add
mov
sub
pushf
adc
mov
cwtl
xor
jnp
cwtl
sub
js
mov
scas
rcrl
or
jmp
mov
pusha
add
cmc
add
xchg
cmpsb
outsb
mov
add
add
lret
nop
add
mov
add
dec
outsl
pop
push
inc
in
daa
push
out
scas
inc
add
mov
out
xchg
dec
insl
pop
rolb
mov
dec
dec
mov
sbb
mov
add
sub
mov
in
inc
jp
test
add
add
add
sbb
mov
rolb
mov
movsl
shrl
add
pop
xor
mov
imul
add
xor
mov
fcmovbe
les
aad
decl
add
push
sub
mov
xor
mov
test
add
add
pushf
dec
inc
xchg
imul
mov
add
jp
sbb
add
mov
popf
xor
adc
repnz
xchg
fstpl
sbb
imulb
pop
push
inc
fcoml
int3
xchg
and
mov
push
push
adc
int
jne
or
jnp
lea
add
add
add
mov
push
jbe
pop
cld
addr16
mov
sub
fdivl
xchg
addb
and
mov
pop
cs
dec
rcr
in
fwait
xor
imul
add
pop
enter
jge
add
loopne
mov
mov
push
out
add
add
lret
aam
and
or
pushf
mov
pop
inc
ficoml
test
cltd
aad
loope
push
pop
sub
add
lods
stos
in
clc
mov
fdivrl
sbb
push
fwait
aad
lret
inc
add
mov
mov
dec
movsb
in
enter
out
jg
or
sub
aad
ss
add
jg
loopne
mov
pop
push
mov
mov
and
push
mov
or
cli
add
mov
mov
mov
push
mov
pop
sbb
inc
add
mov
cmp
jno
loope
add
inc
xor
adc
mov
mov
add
shll
mov
or
add
jbe
or
mov
hlt
jecxz
xor
add
addb
imul
jbe
sbb
enter
enter
mov
mov
popf
gs
dec
xchg
mov
adc
sbb
add
lret
sub
mov
mov
addb
insb
xchg
sbb
pop
rolb
mov
in
add
movsl
xor
add
repnz
mov
dec
mov
and
dec
mov
mov
xchg
ds
add
mov
das
add
rcrl
mov
insb
push
sbb
add
sarl
popa
in
je
in
aam
repnz
outsb
mov
mov
add
mov
push
clc
out
movsl
rolb
mov
add
mov
add
fldenv
arpl
add
jge
dec
xor
push
bound
mov
mov
int
add
fidivrl
test
fstl
pushf
repz
rolb
mov
add
cld
dec
aam
lret
jb
mov
add
add
and
mov
rolb
das
js
push
jo
mov
sbb
and
inc
fmull
add
inc
mov
xchg
in
mov
add
fdivrs
jne
or
xchg
push
cmp
clc
ja
dec
push
add
nop
add
loop
mov
sub
adc
into
push
inc
pop
testw
add
add
mov
filds
rolb
inc
test
mov
mov
inc
jp
sub
adc
mov
in
ljmp
dec
add
mov
dec
mov
mov
add
mov
sbb
mov
mov
ss
test
push
adc
ja
cmp
adc
lea
sbb
notl
adc
fsubp
add
sub
add
mov
mov
insb
xor
mov
sbb
int
add
inc
rolb
mov
inc
fnstenv
leave
fsub
fs
notb
daa
jp
add
cwtl
addl
xor
inc
cli
and
add
mov
add
mov
mov
in
stos
insb
xchg
add
mov
mov
add
adc
imul
arpl
mov
mov
mov
repnz
adc
lcall
cmp
mov
cld
and
ja
clc
out
adc
test
add
jae
dec
ds
or
xor
fisubs
add
jl
xor
mov
add
push
movsb
ss
sub
aas
cmp
mov
mulb
mov
sarl
mov
pop
mov
add
xorl
xchg
add
push
in
sti
lods
divb
getsec
and
dec
test
fcomip
mov
mov
int
dec
rolb
or
cmp
push
jo
mov
rol
sahf
gs
push
mov
jne
or
add
add
mov
lret
stos
and
bound
mov
in
xchg
mov
add
mov
pop
cmp
int3
sub
out
jo
mov
add
xchg
stos
fldcw
mov
xlat
adc
mov
jnp
loopne
mov
and
mov
mov
pop
in
stos
pop
cmp
or
aad
out
sbb
add
add
mov
lea
ds
std
mov
add
iret
fs
lock
jp
mov
add
aaa
cmpl
in
mov
mov
sbb
loope
sub
mov
out
std
fbstp
pop
sbb
sub
xor
add
mov
add
jns
push
adc
adc
lods
stos
pop
out
adc
sahf
or
cmp
ja
shrl
rcl
mov
rolb
mov
je
xorl
add
mov
int3
ds
stos
rorl
arpl
repz
or
mov
add
dec
xchg
lds
roll
mov
mov
mov
lahf
jg
jbe
add
mov
movsl
xchg
je
jl
jo
mov
scas
jle
mov
jmp
adc
add
mov
push
xchg
push
pop
fs
test
cmc
push
repnz
cmpsb
cmc
test
fidivrs
jb
mov
int3
pushf
adc
xchg
add
pop
lods
pop
test
jb
mov
cmp
bound
mov
jne
ret
inc
xor
rolb
mov
jae
add
jecxz
xlat
xor
add
fsubrs
jl
addb
pop
and
xchg
fsubrs
sbb
clc
sahf
movsl
and
lret
out
aam
mov
mov
mov
fsubs
add
mov
mov
shrl
mov
add
cmp
add
add
push
adc
mov
fs
mov
addr16
ss
cld
loopne
mov
mov
mov
fcomp
out
gs
push
cmp
out
das
sub
add
movsl
sahf
popa
mov
rolb
mov
mov
addb
add
mov
bound
mov
std
dec
xor
mov
cli
adc
mov
icebp
cmc
pop
ret
push
mov
add
iret
test
jge
cltd
imul
sti
add
sub
add
fwait
mov
push
lock
add
mov
scas
sub
add
sahf
push
in
movsl
mov
dec
jle
mov
cmpsb
mov
mov
arpl
test
sbb
insb
jl
sub
mov
cwtl
imul
std
fsts
add
add
push
ja
mov
push
in
xor
mov
lret
aaa
cmpl
mov
lea
in
pop
addl
mov
adc
mov
addb
mov
xchg
adc
mov
ljmp
mov
sbb
lods
loopne
mov
popa
lret
mov
mov
mov
mov
mov
mov
into
loopne
mov
test
stc
adc
mov
mov
jns
rolb
mov
clc
dec
mov
mov
add
gs
lock
jne
add
aas
pop
lcall
inc
sbb
jnp
add
mov
dec
dec
push
jno
adc
mov
dec
mov
sbb
aas
push
mov
movsl
push
mov
inc
cmp
cmp
aaa
mul
stos
pop
nop
add
jp
sbb
mov
xchg
mov
adc
jmp
push
fwait
cmp
ds
mov
add
add
adc
mov
dec
and
mov
sbb
shll
fistl
xor
pop
inc
add
add
mov
cmpl
dec
adc
mov
dec
and
and
loopne
mov
js
cmpl
cmp
ret
or
mov
and
or
dec
in
aas
mov
mov
fwait
stos
daa
stc
aaa
jno
add
sub
mov
js
add
fldcw
mov
add
iret
out
repz
cmp
push
mov
push
in
mov
js
add
xor
add
ret
pusha
add
or
pop
fsts
adcl
push
add
adc
es
xor
mov
xor
xor
push
imul
adc
mov
jp
das
jl
data16
fcmovne
inc
add
adc
rolb
jnp
push
mov
add
push
clc
fs
iret
dec
inc
outsl
xchg
lods
push
imul
icebp
jne
sarl
jnp
or
inc
fnstcw
mov
fisttpl
add
cmp
clc
mov
xchg
jne
add
jo
mov
popa
inc
add
rolb
mov
pop
sub
add
rolb
mov
push
and
sbb
xchg
mov
xchg
add
mov
jne
mov
add
dec
xchg
add
mov
mov
popf
push
add
mov
sub
js
scas
out
xchg
add
sbb
jp,pt
scas
subl
aam
or
lcall
fidivl
push
push
lret
cmp
push
loopne
mov
pop
fimull
jno
loop
mov
push
sbb
mov
das
add
sbb
jno
aas
sub
add
mov
mov
or
loope
frstor
pusha
add
in
add
mov
add
mov
add
add
mov
jbe
mov
jle
cli
adc
push
add
mov
add
rolb
ja
mov
insl
out
clc
sahf
loopne
mov
mov
jg
jne
arpl
xchg
xor
cmp
sbb
lods
ja
vmovdqu
add
push
add
add
les
xor
add
jg
lods
rolb
mov
fsubs
mov
jecxz
jb
mov
stos
pop
lods
lods
push
add
add
push
adc
mov
jmp
int
add
sbb
or
mov
cmp
add
add
test
add
les
test
int
add
jl
jp
loope
gs
lret
pop
iret
inc
loop
mov
or
imul
mov
jmp
jg
pop
add
mov
cmp
add
je
add
add
idivl
or
add
divl
js
cmp
mov
fdivs
add
movsl
push
loopne
mov
inc
cmp
mov
inc
out
xor
xchg
adc
mov
cmpsb
mov
mov
add
lcall
dec
fwait
mov
xchg
jae
add
add
ficoml
add
add
jge
std
dec
pop
dec
bound
mov
add
outsl
fidivrl
push
sub
int
orl
hlt
aad
dec
push
mov
and
cli
jl
test
ficomps
pop
pop
sbb
jne
stos
sub
andl
into
das
adc
sbb
lock
inc
int3
xchg
add
outsb
rolb
mov
sub
pop
push
inc
iret
cld
fwait
out
sarl
mov
andl
mov
dec
outsl
icebp
arpl
jmp
dec
or
mov
add
or
cltd
xchg
sahf
or
add
xor
lret
addb
scas
lcall
cmp
xor
push
add
das
lcall
outsb
popf
test
insl
leave
out
add
popf
data16
mov
adc
add
sub
jecxz
sbb
jmp
mov
std
push
lods
pop
lret
ja
inc
add
mov
push
adc
mov
push
add
fwait
int
adc
mov
add
out
add
add
inc
sti
leave
inc
out
and
scas
adc
mov
addb
mov
aad
lock
test
jg
cmp
sbb
sbb
jb
mov
push
xor
divb
scas
aaa
in
fcmovu
sub
mov
add
les
insl
icebp
inc
lea
mov
inc
andl
loop
mov
sbb
add
mov
cmp
pop
loop
mov
mov
rolb
xchg
xchg
add
mov
mov
mov
mov
mov
mov
fmull
adc
mov
mov
push
lds
jmp
xor
adc
mov
mov
mov
mov
jns
xchg
push
in
and
mov
push
rolb
mov
add
add
xor
rolb
mov
mov
jg
into
xor
fisubrs
std
shll
jmp
addb
push
ret
test
cmpsl
sbb
fisubrs
add
mov
sub
mov
outsl
jl
stos
jecxz
add
and
mov
sbb
gs
jecxz
popa
xchg
xor
ljmp
push
push
and
mov
pushf
inc
add
lods
or
andl
iret
sub
mov
sbb
mov
add
mov
add
push
mov
push
icebp
mov
or
push
mov
or
cmpsb
xchg
in
push
jbe
icebp
adc
inc
add
loopne
mov
bound
mov
mov
mov
add
divl
lcall
ds
sbb
int3
push
repz
cmc
rolb
mov
dec
out
pop
hlt
out
add
mov
sbb
insb
int3
jb
mov
sub
mov
int3
fdivrs
dec
out
popa
jae
xor
mov
addr16
add
mov
mov
addl
add
and
pop
inc
push
mov
cli
jg
hlt
adc
or
cltd
adc
mov
into
inc
add
xchg
fcompl
mov
mov
jp
mov
xor
mov
leave
popf
mov
jno
mov
dec
push
xchg
cs
inc
add
mov
add
mov
ret
xor
inc
mov
mov
xchg
dec
sub
cmpsl
dec
nop
add
push
add
hlt
imulb
test
shrl
or
xchg
xchg
push
fldenv
test
xor
mov
and
add
test
pop
dec
movsb
xor
xchg
in
shrl
popf
push
inc
fstpt
xor
adc
mov
xor
js
mov
insb
arpl
lret
leave
inc
add
mov
pushaw
add
imul
movb
jae
xchg
in
icebp
mov
dec
repz
and
add
std
cmpsb
ss
mov
in
ficoms
addb
and
add
pushf
mov
dec
cmp
outsl
call
add
js
add
pop
inc
sbb
into
fs
adc
nop
add
test
mov
xor
mov
xor
mov
mov
add
mov
add
popf
lods
or
pop
push
decb
nop
add
cmc
jl
add
jno
int3
lea
add
jo
mov
add
mov
adc
mov
cwtl
pop
scas
add
mov
cwtl
jle
cwtl
loopne
mov
xchg
add
sbb
add
add
loope
push
out
sbb
cmp
dec
jge
jns
sub
cmp
imul
loop
mov
pop
push
filds
mov
jb
mov
jmp
pusha
add
aad
and
cmp
lods
xor
mov
inc
mov
jecxz
test
cmp
mov
mov
mov
mov
xor
mov
mov
mov
add
repnz
lea
mov
xor
mov
adc
sub
and
mov
add
lea
imul
mov
cmc
dec
sbb
add
leave
bound
mov
fsubrp
and
xor
add
ljmp
in
mov
test
out
sub
mov
add
add
movsb
cmpsl
mov
adc
mov
test
pop
les
sahf
mov
cmpsl
pop
sbb
jns
adc
push
adc
add
jbe
xchg
push
nop
add
pop
lods
mov
mov
outsl
bound
mov
xchg
add
aas
lret
sbb
dec
loope
jecxz
add
push
mov
adc
imul
mov
enter
lret
fdivr
aam
inc
add
sbb
mov
xor
mov
mov
inc
add
std
mov
inc
add
sahf
jo
mov
jae
and
dec
addb
dec
je
push
or
imul
add
in
cld
mov
mov
add
push
cld
inc
mov
add
add
mov
add
add
inc
push
push
fcoml
add
mov
addb
fucomip
mov
add
xchg
das
jmp
loop
mov
add
mov
inc
add
mov
adc
sub
add
popa
and
add
in
test
cmp
push
add
arpl
mov
cmc
bound
mov
lds
jmp
pop
arpl
dec
mov
cmp
mov
les
call
aam
cli
addr16
push
icebp
jnp
inc
jne
sub
mov
or
mov
mov
imul
lret
cmpsb
int3
dec
enter
in
sbb
mov
mov
add
fucomp
arpl
push
jbe
add
and
mov
pop
neg
sbb
test
adc
add
mov
aas
jge
dec
pop
decb
lds
nop
add
add
add
cmc
mov
lds
in
fsubrl
jno
sub
dec
push
sbb
add
push
add
test
add
add
not
add
add
out
popa
rolb
mov
inc
fnstcw
shrl
mov
add
pop
dec
addb
jmp
pop
pushf
clc
and
mov
rcll
fistl
shll
jns
rolb
mov
pop
cmpsl
mov
jmp
cmp
add
scas
in
lahf
ds
jg
mov
xchg
dec
mov
movsl
rolb
pop
push
popl
dec
or
jno
fld
add
mov
add
stc
ds
nop
add
or
fisubl
mov
add
mov
jmp
js
inc
dec
cld
movb
sti
negb
std
rorl
test
fidivl
and
and
pop
xchg
cmc
xchg
aam
jge
xor
mov
out
pop
fnstcw
dec
xchg
imull
mov
dec
daa
stc
cmp
fidivs
mov
add
fwait
or
cmp
add
sub
xlat
out
or
add
sahf
repz
roll
add
outsb
jno
mov
push
addb
sub
mov
mov
shll
xchg
push
jae
mov
fs
repz
add
js
dec
pop
cmpsl
inc
add
mov
ret
xchg
sbb
out
fldl
sbb
repz
test
dec
stc
mov
es
or
sbb
addb
lods
inc
cs
xor
push
cmpsb
mov
sbb
mov
xor
add
mov
fidivrs
xchg
xor
mov
jae
add
and
mov
cmp
mov
les
and
mov
pop
gs
adc
sbb
xor
mov
jo
mov
pop
jae
cltd
dec
fs
sbb
add
mov
cmp
les
xor
add
js
mov
add
fucomp
sub
push
push
out
adc
lcall
in
test
cmp
call
lock
mov
rolb
jmp
rcr
add
outsb
sub
xchg
xor
mov
in
rolb
mov
add
add
mov
and
aas
repnz
pushf
jecxz,pt
add
fs
add
outsl
rolb
mov
add
sahf
mov
mov
xchg
xor
mov
jno
xor
add
leave
lods
rcll
aas
and
mov
icebp
fldenv
add
fsubrs
call
mov
sbb
add
cmp
mov
mov
ss
adc
pusha
add
popf
lret
add
add
mov
mull
repnz
sbb
out
sub
add
mov
int3
pop
push
sub
dec
push
jb
mov
mov
pop
add
test
push
stos
push
or
mov
loop
mov
add
mov
and
mov
pop
inc
lods
mov
mov
pusha
add
fisubs
mov
pop
aam
inc
add
lds
in
add
ret
stos
ja
xchg
and
mov
cltd
lods
adc
cmp
push
das
lds
mov
ss
sbb
inc
cwtl
lcall
mov
imul
adc
mov
sahf
aam
and
mov
aam
les
bound
mov
mov
ljmp
mov
adc
mov
cmc
push
in
mov
add
mov
loop
mov
iret
pushf
imull
mov
add
aas
notl
add
outsl
addb
mov
in
ds
dec
xchg
pop
lock
pop
pop
hlt
xchg
push
sub
js
je
adc
mov
add
fcomp
fisubl
jge
je
adc
push
add
adc
out
das
gs
pop
ficomps
out
pop
mov
lahf
test
cld
mov
add
outsl
jmp
add
mov
jbe
mov
mov
xchg
add
inc
pop
jl
in
scas
mov
pop
adc
mov
enter
cmp
inc
add
mov
mov
lea
movsb
mov
std
fwait
das
hlt
movsl
dec
dec
pop
sbb
rcll
scas
jne
stos
mov
cwtl
jecxz
dec
sbb
add
xchg
pop
in
jne
jp
push
daa
imul
pop
lcall
inc
mov
rolb
mov
sub
cmp
loop
mov
sub
sti
mov
ds
aaa
and
pop
incb
add
xor
pop
pop
pusha
add
roll
out
jmp
add
cmp
or
gs
lds
lahf
mov
rolb
mov
test
inc
addb
rolb
mov
push
mov
push
jns
push
iret
sub
mov
ret
jecxz
rolb
mov
mov
fcmovnu
or
lret
scas
or
add
cmpsb
ljmp
pop
inc
add
add
xchg
mov
call
mov
push
fdivrl
cwtl
inc
add
add
fnstcw
repnz
int3
and
xor
push
mov
xor
in
pop
mov
mov
dec
pop
add
mov
jmp
inc
aad
add
mov
xchg
add
add
inc
mov
add
add
cwtl
push
mov
mov
pop
jns
movsb
fucom
add
mov
aaa
stos
xchg
test
and
loop
mov
push
sbb
sub
out
xor
and
mov
fcmovu
imull
enter
add
mov
add
cmpsb
pop
pop
pop
insl
mov
lds
orl
pop
ror
add
add
mov
or
add
add
push
insl
movsl
jnp
loopne
mov
add
add
push
fwait
xlat
cwtl
fwait
bound
mov
shll
or
add
inc
sar
outsl
inc
int
je
sbb
inc
add
sti
stc
mov
add
fsts
sbb
mov
jmp
add
add
jg
decl
icebp
dec
mov
mov
mov
push
lret
ret
stc
addb
jmp
jg
clc
dec
pop
jle
dec
cwtl
and
dec
jne
add
inc
rolb
jl
enter
fsubs
rolb
mov
add
popa
sti
push
int3
stos
xchg
add
call
adc
mov
mov
cmp
and
mov
mov
adc
mov
add
sahf
sbb
push
add
stos
aaa
repz
mov
sub
mov
out
mov
add
dec
xorl
add
inc
dec
int3
mov
mov
add
cmpsl
mov
mov
pop
pop
test
jae
xor
push
aam
jns
add
mov
mov
xchg
cmp
inc
add
repnz
daa
jne
jmp
pusha
add
or
pop
mov
inc
pop
dec
fsubr
std
enter
or
add
out
push
or
pusha
add
stc
xchg
cmp
xor
mov
or
add
mov
lds
mov
add
cmp
mov
aam
jbe
and
mov
sahf
dec
sbb
cmp
dec
mov
lea
lahf
pop
rcrl
add
push
mov
push
in
xor
mov
pop
add
das
lret
lcall
push
les
add
clc
call
add
mov
mov
popf
stc
or
push
fmull
add
pusha
add
clc
out
cmp
jmp
leave
sbb
loopne
mov
add
mov
cltd
inc
call
xor
mov
data16
or
jns
add
jae
out
jge
jl
add
push
push
add
andl
or
xchg
rolb
mov
add
pop
adc
mov
nop
add
lea
jge
lcall
push
jo
mov
loop
mov
push
stos
clc
adc
in
or
mov
mov
mov
movsl
cld
jl
loope
xchg
push
fistps
enter
repnz
push
xchg
xchg
aas
cs
cmp
dec
xchg
jmp
popa
sub
lds
mov
inc
addb
mov
add
and
stc
loopne
mov
jmp
mov
mov
outsb
imul
loop
mov
int
add
add
sub
repnz
fldcw
add
outsb
or
dec
dec
mov
or
adc
add
dec
cld
inc
add
test
mov
jb
mov
clflush
cmc
add
mov
sbb
ja
dec
jle
push
outsl
rolb
popf
xchg
ja
in
mov
xor
mov
mov
add
test
pop
stos
jl
out
cmp
add
mov
mov
test
stc
cli
fmuls
and
xlat
testl
mov
cld
into
mov
dec
insb
dec
cltd
test
shll
std
ljmp
pushf
inc
out
mov
or
enter
clc
push
gs
fldt
gs
loope
mov
add
dec
je
fstpl
xchg
mov
aam
add
jb
mov
js
add
cld
adc
movsb
test
mov
sbb
add
lds
mov
add
fadd
in
iret
call
push
mov
or
dec
ss
mov
loopne
mov
push
add
xchg
jbe
add
add
add
jbe
jge
and
mov
cltd
lods
icebp
push
inc
add
inc
add
push
scas
outsl
mov
cmp
popa
cltd
mov
add
pop
dec
int3
flds
cltd
call
std
mov
aaa
xchg
mov
mov
mov
test
add
sbb
pop
push
push
mov
mov
cmovns
pop
mov
sub
aam
adc
add
xchg
add
jb
mov
rolb
mov
adc
lret
outsb
outsl
out
inc
mov
xor
mov
xchg
jge
in
add
mov
add
hlt
popa
cli
mov
mov
mov
hlt
or
std
ret
pop
jo
mov
aaa
hlt
sarl
add
mov
dec
push
clc
add
mov
add
mov
mov
mov
xchg
sahf
lahf
pop
add
xor
into
es
pop
push
loop
mov
mov
mov
inc
add
fucomi
mov
in
mov
testl
push
push
lcall
add
out
inc
add
add
loop
mov
jl
push
add
mov
or
add
repz
mov
add
dec
test
inc
add
xchg
inc
iret
leave
sub
mov
push
mov
adc
add
repnz
cmpsb
sbb
outsb
inc
mov
and
mov
xor
pusha
add
mov
sub
mov
mov
aam
aad
test
loop
mov
sub
insl
sbb
xchg
dec
test
lock
add
ret
or
xlat
xor
mov
xlat
jnp
stos
or
loop
mov
lds
push
rolb
leave
push
icebp
les
push
ljmp
lea
push
insb
fsubrl
cmp
cs
jbe
and
mov
insb
scas
adc
mov
mov
mov
adcl
fcmovnbe
cmp
jno
test
imul
mov
ds
dec
xchg
adc
jmp
adc
rol
imul
xchg
xchg
repz
test
add
daa
leave
and
in
dec
jo
mov
jecxz
add
enter
mov
dec
nop
add
push
xor
mov
loope
cmpsb
inc
int
out
neg
test
lahf
mov
ret
pop
stc
stc
xchg
add
add
aaa
call
add
push
jbe
imul
adc
jle
and
inc
pop
fsubl
add
inc
add
es
add
nop
add
inc
cmp
mov
sbb
jmp
filds
xchg
mov
dec
jno
mov
pop
sub
or
inc
add
loop
mov
pop
cli
cwtl
xchg
sub
mov
dec
cmp
mov
push
test
push
popf
loope
rolb
mov
add
lock
mov
jnp
xchg
push
add
jp
sub
xchg
mov
add
mov
add
aam
dec
cmpsb
or
popf
mov
popf
and
lahf
leave
push
rolb
mov
sbb
call
mov
jl
sbb
daa
jmp
pushf
addb
fistps
loopne
mov
arpl
add
xor
mov
sub
bound
mov
lea
lods
inc
add
xor
mov
xor
xor
int
xchg
jbe
mov
int
pop
jns
test
add
add
pop
sub
mov
add
add
xchg
lds
add
mov
inc
add
mov
sbb
lcall
gs
add
and
mov
fwait
xchg
fcoml
xor
mov
mov
cld
and
je
xor
mov
aas
push
sbb
in
insb
jb
mov
in
mov
mov
jecxz
es
mov
ja
pop
xchg
cmp
mov
sahf
addb
pop
and
add
push
add
jp
xchg
push
add
lods
rolb
mov
adc
add
mov
outsb
lret
gs
daa
aas
out
std
es
pmuludq
fidivs
add
mov
jge
add
test
fstl
cmp
push
int3
popf
jnp
lods
dec
mov
subl
sti
addb
jp
cmpsl
adc
mov
mov
sahf
adc
xor
mov
add
xchg
aaa
addr16
sbb
xchg
jle
jmp
mov
in
xor
mov
movsl
ja
push
mov
ss
push
imul
sbb
add
fwait
les
mov
les
cmc
test
cmp
mov
jne
cmp
and
mov
test
pushf
cmpsl
inc
mov
cmpsl
add
xchg
push
fs
cmp
lods
repz
in
imul
repnz
add
mov
ret
push
add
adc
scas
or
int
or
mov
mov
fwait
bound
mov
sub
test
arpl
add
mov
cmp
add
test
sbb
xchg
add
cmp
adc
loope
dec
fnsave
insb
mov
add
push
das
mov
mov
push
xor
mov
jo
mov
add
in
int3
popl
add
xchg
or
cmp
inc
add
cltd
and
or
fcompl
dec
jbe
add
les
jo
mov
xchg
xchg
add
mov
sub
lahf
xor
call
adc
xchg
cwtl
negl
aaa
test
mov
test
sbb
jo
mov
adcl
je
mov
mov
dec
fwait
mov
fs
xchg
add
loopne
mov
xor
mov
jg
movsl
hlt
adc
add
add
mov
mov
cmp
inc
sub
mov
inc
mov
add
call
mov
pop
cmp
pusha
add
xchg
add
mov
add
jb
mov
add
pop
mov
add
add
push
pop
xchg
insl
push
add
adc
push
xchg
mov
pop
pop
inc
add
adc
dec
sub
cwtl
push
add
out
mov
jle
shll
mov
jne
aad
repnz
lret
sub
mov
fimull
add
call
cmp
push
movsb
mov
gs
dec
test
jecxz
daa
in
mul
cmp
call
add
add
add
inc
add
outsl
jne
out
scas
lret
jecxz
lock
pusha
add
pop
fnstsw
dec
in
lods
outsl
dec
int3
inc
adc
mov
add
jns
outsb
es
inc
add
mov
jae
sbb
aad
in
or
sbb
add
mov
sbb
xchg
mov
sbb
xchg
or
mov
sbb
push
sub
sti
test
in
pop
ret
fisubrl
aaa
adc
fidivrs
stos
fldl
inc
add
imul
mov
lods
cmp
push
or
add
ds
lock
in
cmp
and
mov
add
mov
adc
mov
stos
pop
idivl
add
mov
pop
loopne
mov
add
rorl
dec
xchg
mov
add
adc
mov
dec
sub
cmp
add
popf
and
mov
out
dec
xor
mov
cmp
mov
add
call
fisubl
and
mov
pop
jbe
rolb
mov
sbb
push
mov
add
out
mov
xor
mov
mov
or
mov
xor
cltd
mov
mov
jae
mov
bound
mov
fldt
movsl
rolb
xchg
bound
mov
mov
faddl
lds
mov
push
add
mov
add
std
mov
movsb
sbb
nop
add
cmc
mov
clc
hlt
adc
xor
mov
loopne
mov
add
add
mov
mov
jo
mov
lahf
fdivrs
test
and
mov
mov
mov
mov
lock
mov
mov
pop
insb
andl
mov
fdivrl
jo
mov
mov
push
mov
mov
mov
mov
sbb
jo
mov
dec
mov
pop
stos
jl
adc
fnsave
cmp
add
xor
mov
aam
pushl
int3
cmpsl
jns
add
push
in
pop
aas
jo
mov
mov
fbstp
add
push
add
stos
dec
mov
or
rolb
mov
add
add
add
iret
mov
and
mov
mov
add
iret
movl
lret
loope
das
mov
add
in
dec
adc
mov
mov
adc
mov
sbb
adc
mov
dec
aam
repnz
mov
stos
and
push
leave
popf
mov
add
mov
xchg
add
mov
outsb
fwait
mov
sbb
hlt
addb
fbld
mov
mov
jp
add
gs
fs
test
mov
sub
imul
and
add
jns
addb
push
jbe
fadds
ljmp
out
mov
jo
mov
add
push
inc
add
imul
mov
mov
pop
jnp
fsubrl
xchg
sub
cmp
mov
sbb
stc
xor
mov
add
jge
add
call
mov
mov
jmp
clc
jmp
push
add
mov
mov
mov
std
test
out
xor
insl
decb
dec
mov
mov
and
mov
addb
mov
js
enter
addb
sbb
push
add
cmpsl
in
pop
cltd
int
sarl
sbb
mov
jmp
or
pop
inc
add
out
mov
rorl
into
pop
mov
mov
aaa
test
loope
inc
sub
xor
add
xchg
dec
nop
add
mov
mov
and
sbb
and
mov
or
add
nop
add
dec
push
adc
xchg
and
add
and
mov
jmp
fsts
adc
mov
bound
mov
nop
add
mov
imul
movsl
xchg
xchg
dec
scas
mov
xor
mov
and
add
pop
repnz
les
roll
mov
add
lods
push
cmp
pop
inc
jle
sub
add
mov
mov
mov
mov
push
sbb
sbb
add
popf
cmp
out
ljmp
jo
mov
int3
xchg
movsl
mov
add
mov
mov
leave
or
sahf
push
add
mov
cmp
push
addb
mov
mov
int3
sub
int
cmp
mov
mov
daa
and
and
mov
mov
fildll
jecxz
cmp
mov
jb
mov
xchg
adc
xchg
xor
stos
test
cmp
mov
inc
add
outsb
jne
mov
add
lods
ja
mov
rolb
mov
push
test
mov
stos
scas
pop
repz
mov
popf
repz
addb
rolb
and
mov
les
into
fldt
add
add
dec
inc
xchg
or
loopne
mov
dec
xor
sbb
add
inc
add
inc
sbb
xor
mov
push
dec
gs
sub
fists
and
and
xor
add
enter
and
dec
push
clc
push
add
xchg
dec
fcoms
lret
out
xchg
ss
jne
sbb
bound
mov
mov
inc
add
dec
pop
fwait
fwait
and
mov
add
mov
sub
xchg
and
fwait
cwtl
jp
mov
mov
inc
fldl
lods
xor
out
fidivrl
mov
mov
pop
or
add
mov
add
data16
lds
xor
mov
add
out
adc
mov
mov
add
cmp
aam
sbb
and
jmp
leave
aas
pop
test
or
faddl
mov
dec
scas
cwtl
xchg
es
stc
mov
push
add
mov
jnp
in
out
jmp
push
pop
and
mov
mov
insb
push
scas
repz
loop
mov
ret
scas
mov
jmp
add
loope
add
or
and
enter
mov
mov
insl
iret
xlat
rolb
mov
cmp
mov
cmp
out
mov
mov
dec
add
lahf
mov
aad
jecxz
mov
xlat
jo
mov
cli
sbb
mov
add
mov
add
out
jge
stos
stc
scas
iret
sub
ret
fwait
mov
mov
jp
xor
jo
mov
mov
add
xor
sub
add
add
in
loope
jmp
clc
cmp
test
pusha
add
addb
xlat
in
xchg
sub
xbegin
pop
xchg
rolb
mov
xchg
notl
out
mov
pushf
jns
mov
jg
movsl
idivb
js
add
movsl
clc
repz
fldl
int3
jne
pop
or
xor
sahf
in
mov
pop
lock
cmc
mov
jo
mov
ljmp
addr16
mov
mov
xchg
pusha
add
movsb
out
dec
jecxz
cmp
push
insb
icebp
inc
jecxz
rolb
jns
lahf
pushf
xchg
or
cmp
jnp
sub
lods
lret
pushf
popf
mov
mov
mov
push
sbb
mov
leave
negl
sub
cmpsl
add
mov
add
cmc
sbb
mov
mov
sub
push
enter
pop
arpl
cmpsl
je
sbb
addb
push
sbb
and
mov
add
xor
mov
sbb
mov
call
fs
mov
add
addb
xor
push
lahf
push
add
mov
push
add
mov
add
test
loop
mov
xor
mov
add
sub
xor
std
jbe
push
add
cmpsl
mov
or
mov
mov
dec
xchg
cld
mov
fs
push
mov
add
push
js
cs
add
mov
add
mov
pop
not
fwait
jl
lea
xor
addl
mov
add
cli
sbb
pop
fs
mov
xchg
popa
and
mov
add
adc
mov
sub
int
mov
push
cmova
nop
add
mov
add
sbb
mov
das
xchg
in
cltd
lahf
jecxz
jg
sti
and
mov
xchg
cmpsb
aad
dec
call
stos
jo
mov
add
popa
mov
fdivrs
xchg
clc
addl
and
js
sub
push
dec
push
add
movsb
popa
sbb
rolb
mov
jnp
xlat
pop
ljmp
sub
test
cmp
scas
movsl
inc
dec
aam
mov
add
and
mov
add
mov
je
add
js
rcll
mov
adc
xor
mov
imul
mov
pop
mov
add
mov
add
mov
push
cmpsb
rcrl
mov
insb
fadds
add
cmp
add
add
and
mov
push
add
xor
mov
mov
add
idivl
push
sub
mov
add
and
mov
cmp
xchg
add
jecxz
add
xlat
mov
mul
jbe
call
dec
stc
xor
mov
int3
push
push
fldl
scas
imul
xor
add
add
fsubr
inc
cli
pop
ret
pop
insl
cwtl
aaa
repnz
sbb
push
sbb
ret
addb
cmp
fldcw
pusha
add
ljmp
mov
mov
cli
push
push
je
pop
out
adc
mov
or
imul
sub
mov
sub
hlt
pop
pop
or
das
pusha
add
sti
push
js
xor
mov
mov
mov
mov
add
cwtl
dec
xchg
ret
sbb
test
test
sub
ss
xchg
js
imul
dec
mov
loopne
mov
int3
aam
cmpsl
cmp
sub
loope
ss
add
sbb
pop
loopne
mov
popa
push
sbb
clc
cmpsb
sbb
sub
sti
scas
out
test
mov
mov
cmpsl
jns
or
pop
adc
sub
sahf
push
add
push
add
add
cmp
cmp
add
mov
xchg
sub
mov
rcrl
jp
aad
mov
mov
mov
dec
xor
sub
lea
push
push
push
and
addb
sbb
pop
sub
in
xor
mov
sub
adc
push
mov
xchg
imul
dec
xchg
mov
mov
vcomiss
sub
iret
mov
cwtl
cmp
push
xchg
add
popf
xchg
or
lret
add
in
adc
mov
xor
push
add
in
out
std
jnp
mov
dec
dec
and
hlt
negl
sahf
fwait
cmp
or
fldt
ljmp
fisubrs
jecxz
fidivs
mov
pushf
in
mov
mov
insb
push
add
add
popf
mov
je
add
and
call
mov
pusha
add
shl
clc
pop
shll
mov
ret
jo
mov
jp
mov
push
mov
pop
adc
mov
push
hlt
lea
mov
xor
mov
add
call
sub
sahf
cmc
and
push
jbe
jl
rolb
mov
fisttps
adc
ret
in
sbb
inc
xchg
sbb
jmp
add
cmp
mov
and
jb
mov
jae
pop
or
xor
mov
push
mov
test
addb
sbb
imul
aad
xor
mov
jne
add
xchg
inc
out
mov
stos
jnp
add
lock
fldcw
stos
pop
pusha
add
mov
cmp
mov
mov
add
fdiv
add
mov
mov
add
aad
cld
mov
insl
lahf
xchg
push
cmp
inc
add
fsubr
addb
mov
add
cmp
mov
mov
mov
adc
mov
mov
add
xlat
addr16
mov
imul
mov
arpl
push
xchg
ss
fildll
lods
mov
scas
adc
mov
dec
adc
cli
jno
mov
push
outsb
xchg
add
add
jmp
add
add
mov
outsb
repnz
in
clc
je
inc
jmp
xor
outsl
push
push
fidivrl
adc
lock
mov
leave
jb
mov
add
enter
push
add
mov
add
xor
xor
mov
insb
stc
adc
mov
lock
mov
data16
adc
jno
imul
mov
mov
mov
jnp
add
xor
push
outsl
adc
xor
add
mov
mov
adc
sti
cmc
push
pop
cmpsb
inc
imul
ds
mov
daa
fnstenv
sbb
test
cmpsl
sub
add
mov
stos
ret
jecxz
rolb
mov
lods
test
loopne
mov
xor
mov
sub
das
mulb
mov
rolb
mov
add
mov
in
std
jbe
mov
adc
add
xchg
lcall
add
mov
mov
dec
mov
xchg
and
xor
jnp
add
vpsadbw
arpl
add
ret
or
fs
mov
or
mov
adcl
jg
xchg
iret
adc
mov
and
mov
mov
mov
nop
add
mov
and
mov
fsubr
add
data16
mov
scas
push
movsb
in
mov
and
repz
fmul
sub
ret
loope
fbld
cmp
push
add
sub
jmp
ret
fnstsw
add
add
jmp
add
mov
arpl
inc
xchg
or
sub
xchg
hlt
daa
mov
scas
or
ljmp
jns
ja
rolb
mov
pop
insb
and
mov
daa
xchg
sbb
pusha
add
sub
push
fadd
outsb
imul
stos
xchg
add
sbb
mov
inc
adc
out
and
mov
xchg
mov
push
add
test
mov
push
jg
pop
mov
jb
mov
mov
call
ss
add
outsb
roll
mov
push
add
pop
xor
jle
sbb
add
mov
mov
outsl
pusha
add
mov
fisubs
or
mov
mov
sbb
pop
and
int3
lods
inc
sbb
mov
and
mov
mov
fidivrs
mov
push
shll
mov
mov
pop
int
je
inc
sbbl
cld
les
pop
mov
mov
add
sahf
mov
dec
lret
push
lea
sub
add
gs
push
gs
cmc
js
fildll
add
mov
mov
loop
mov
mov
enter
xchg
adc
mov
inc
test
dec
inc
daa
into
push
add
sahf
push
dec
aas
adc
mov
sub
dec
gs
notl
push
popf
dec
and
add
and
add
fcoms
add
scas
scas
add
mov
mov
xchg
mov
insl
mov
add
jmp
imul
mov
out
rcl
jno
ljmp
xchg
pop
ret
mov
loope
jbe
cltd
stc
popf
mov
and
mov
iret
std
cwtl
sbb
mov
ret
mov
lods
sub
dec
ficoml
add
std
cmp
out
mov
mov
xchg
decl
mov
not
xchg
aad
movl
cwtl
out
jb
mov
add
mov
sti
rolb
dec
ds
mov
fdivl
mov
push
mov
jecxz
add
repnz
cli
cmp
mov
adc
mov
mov
and
add
mov
rolb
mov
pop
test
test
mov
push
enter
lock
bound
mov
cli
aas
sahf
pushf
sbb
adc
mov
test
dec
ds
and
inc
add
js
xor
add
add
add
xor
mov
add
xor
mov
lret
wrmsr
add
dec
mov
test
mov
mov
fistps
movsl
prefetchw
addb
pop
jle
xor
gs
or
ffreep
mov
mov
xor
pusha
add
push
sbb
mov
push
mov
add
rolb
pusha
add
mov
sbb
cs
daa
jge
sbb
ljmp
push
adc
notb
pop
into
mov
sub
add
push
leave
mov
add
mov
arpl
add
add
out
call
mov
cld
aam
mov
repz
mov
mov
setge
cs
cmp
aas
pop
push
test
gs
add
nop
add
mov
inc
gs
mov
mov
aas
jae
ds
jp
add
gs
mov
add
pop
push
mov
fs
or
movsl
xor
mov
xor
mov
push
jne
rcrl
movsb
push
xchg
out
xchg
cmp
push
les
icebp
dec
insb
or
xor
int
cmp
add
pop
lahf
out
xchg
out
inc
and
jbe
jge
pop
outsb
dec
lcall
gs
xchg
ljmp
add
aam
pop
xor
add
xor
mov
push
pop
xchg
add
loope
and
mov
loop
mov
push
insb
mov
mov
mov
add
mov
cmp
add
mov
sub
pop
mov
stos
or
adc
mov
ficoml
ja
add
xor
mov
mov
mov
fwait
stos
or
mov
aas
out
add
in
cwtl
sbb
sarl
scas
mov
pop
dec
scas
add
add
addb
inc
add
mov
xor
push
sub
addr16
bound
mov
sbb
test
push
lret
add
push
or
add
inc
add
fcmovnu
push
lds
push
cmp
lock
xor
xlat
xchg
xor
js
shrl
das
and
mov
adc
cltd
mov
mov
pop
aam
in
or
add
add
sub
out
dec
cltd
xlat
or
mov
mov
mov
test
jge
lds
xchg
push
popl
cmp
adc
mov
mov
or
sub
ljmp
push
mov
lcall
dec
xchg
and
mull
lret
test
and
xchg
jmp
rolb
mov
es
fadds
cmpl
jmp
ljmp
cli
or
fdivr
inc
add
icebp
mov
mov
mov
mov
mov
add
ds
mov
push
out
int3
push
xchg
mov
add
xlat
pop
jne
and
xchg
repz
mov
mov
jbe
or
pushf
sbb
push
lds
add
mov
leave
pop
adc
mov
pop
and
sbb
lahf
dec
nop
add
mov
mov
push
mov
mov
mov
mov
test
sub
add
icebp
cwtl
sub
movsl
dec
jmp
arpl
sbb
add
add
mov
sub
fcompl
jne
mov
push
add
add
mov
out
mov
push
push
xchg
add
xchg
mov
arpl
push
rcrl
inc
jo
mov
and
pop
shl
loop
mov
mov
in
movsl
ret
adc
dec
jbe
testl
push
add
imul
daa
and
into
leave
mov
dec
adc
mov
arpl
cmp
mov
dec
and
xchg
pop
cmpsl
rolb
mov
add
rolb
loopne
mov
add
add
mov
jbe
test
sarl
push
add
add
mov
lds
mov
xor
inc
add
lock
add
dec
sahf
pop
fisubl
add
push
jl
sub
mov
aaa
mov
out
aas
mov
mov
mov
out
int
aad
lret
xor
mov
jns
pop
rolb
xchg
sub
xchg
jo
mov
mov
sbb
aas
push
negl
mov
jge
cmp
fwait
jns
inc
add
inc
jp
and
xor
pop
ss
sbb
fmull
cli
addb
xor
stos
enter
mov
das
test
jl
clc
ljmp
in
jns
jp
cmp
add
add
sti
mov
push
xor
mov
out
inc
mov
mov
pop
es
and
mov
ja
aaa
pop
mov
add
mov
jecxz
xchg
add
push
add
mov
stc
rorl
mov
and
rolb
mov
mov
mov
add
xor
in
enter
mov
sbb
add
cwtl
or
adc
in
push
jbe
scas
mov
rolb
mov
add
mov
clc
fs
clc
pusha
add
add
fadds
sbb
sbb
fnstenv
push
addb
jle
out
imul
and
mov
shll
sti
stos
sub
leave
cmpsb
loopne
mov
cmp
jp
xor
add
sbb
aam
call
sbb
add
mov
fistpll
and
mov
mov
xchg
add
push
cltd
adc
xchg
pop
insl
bound
mov
ret
out
push
mov
mov
add
mov
test
testb
shr
rolb
in
push
add
mov
push
cmpsb
cmpsb
in
sbb
push
xor
jb
mov
rolb
mov
lock
into
mov
lods
sbb
and
decl
aaa
or
loope
jge
fs
sub
inc
dec
mov
or
jle
xchg
add
js
js
mov
dec
push
adc
push
add
jle
sub
fbstp
add
add
imul
xor
mov
loope
mov
mov
or
lret
jge
fwait
mov
mov
mov
or
test
add
add
mov
dec
lea
add
sub
jle
push
add
iret
fistl
mov
pushf
in
and
sti
and
into
xor
mov
mov
scas
push
cli
mov
add
and
pop
mov
xor
add
add
loope
adc
popf
cmp
dec
dec
sbb
add
imul
xchg
push
inc
repnz
call
mov
pop
xchg
xchg
ficomps
add
test
dec
push
push
add
nop
add
mov
bound
mov
push
int
int
inc
stos
cmp
fidivrl
es
mov
mov
rcrl
test
cmpsb
movsb
shll
call
outsl
test
add
pop
adc
mov
jbe
int3
ljmp
aad
push
xchg
add
cmp
idivl
movsl
cltd
fwait
ljmp
loope
enter
call
add
or
inc
lock
pop
hlt
pop
repnz
mov
mov
sbb
add
push
jae
mov
aad
sbb
pushl
add
push
xor
shll
testl
addr16
fiadds
add
add
inc
dec
adc
xchg
dec
and
mov
xchg
cmc
jae
popf
nop
add
ljmp
je
adc
mov
sbb
inc
sbb
xchg
adc
mov
leave
movntq
lahf
ds
jo
mov
push
enter
aad
or
jne
ret
add
cmc
jno
push
gs
cmp
add
out
and
add
imul
pop
popf
mov
stc
jmp
fwait
inc
add
cmp
std
or
arpl
mov
hlt
sbb
sbb
out
xchg
mov
dec
sub
repz
test
dec
rolb
addb
or
pusha
add
in
and
mov
jle
add
add
cli
cmpsb
inc
vaddpd
adc
mov
add
loopne
mov
outsl
inc
sbb
xor
mov
add
mov
push
ja
in
lods
into
movsl
psubusb
push
pusha
add
dec
pop
mov
mov
leave
and
mov
rolb
popf
out
xor
mov
fnsave
insl
cmp
mov
loopne
mov
lds
adc
or
inc
and
mov
out
adc
inc
mov
cs
xchg
mov
addl
inc
pusha
add
jecxz
imul
fnstcw
push
add
outsl
or
sub
adcl
lock
add
std
add
mov
mov
addl
popl
fildl
mov
mov
mov
mov
mov
jb
mov
add
mov
mov
lods
pop
scas
sbb
stos
jo
mov
mov
popf
movsb
fidivrs
scas
dec
xor
mov
add
pop
out
pusha
add
mov
xchg
push
stc
and
fs
popf
sub
mov
mov
push
xor
mov
sbbl
add
das
sbb
or
or
repnz
mov
mov
jbe
add
xchg
fucom
dec
push
lcall
add
push
or
fwait
sbb
pusha
add
adc
add
loopne
mov
add
jns
add
inc
mov
lcall
insl
jle
lea
mov
add
inc
cmp
add
add
adc
mov
out
scas
mov
and
mov
mov
cmpsb
push
rolb
mov
icebp
int
das
lahf
loope
jp
pop
inc
push
aad
andl
pop
and
sub
push
and
mov
cld
or
inc
mov
sbb
pop
int
push
jmp
sbb
test
mov
icebp
mov
mov
call
xlat
outsb
aas
sub
add
add
test
ret
mov
jp
gs
push
add
ja
movups
pop
jmp
pop
filds
add
mov
mov
jmp
cmp
mov
test
mov
mov
insb
pop
push
add
gs
sar
idiv
dec
jl
jecxz
jecxz
cmp
cmp
addb
cltd
pop
inc
repnz
or
mov
dec
jle
dec
faddl
mov
or
mov
xchg
add
add
mov
mov
mov
cli
test
inc
loopne
mov
stos
sub
push
mul
mov
mov
loope
add
out
pop
push
ret
xchg
outsl
movsl
fists
imul
mov
outsl
cmp
out
add
rolb
push
mov
jno
int
mov
xchg
rolb
pop
lret
lods
cmp
xor
mov
add
mov
out
ficoml
mov
sbb
add
xor
inc
and
cwtl
sbb
jmp
lock
pushf
inc
loope
pop
sub
or
call
fs
push
dec
xchg
add
mov
cmp
shl
cs
jge
mov
rcr
paddsw
mov
mov
dec
xchg
mov
mov
ljmp
jl
cli
fwait
inc
adc
dec
or
cmp
and
push
push
lods
into
jge
fcompl
mov
imul
fs
stos
mov
or
in
fmuls
inc
rolb
mov
add
sub
jecxz
popa
cmp
inc
imul
add
outsl
adc
fidivrs
and
mov
cmpl
mov
push
xorl
lds
nop
add
mov
mov
push
xor
mov
scas
jmp
mov
add
push
data16
mov
cmpsb
or
call
out
mov
dec
dec
aas
pop
jns
add
sti
mov
in
jae
mov
cmpsl
dec
add
movsb
ss
add
mov
jae
add
mov
fnstcw
leave
dec
mov
outsb
or
add
in
xchg
jmp
inc
mov
mov
xchg
mov
dec
mov
jb
mov
xor
mov
int
xchg
cmc
fs
mov
mov
in
cld
fimuls
mov
outsl
addb
adc
pop
dec
fcmove
pushf
out
lock
cmpsb
repnz
xchg
inc
iret
jge
sub
inc
clc
je
popf
mov
loopne
mov
test
add
sub
je
leave
push
add
out
xchg
scas
add
add
mov
mov
add
xlat
adc
scas
push
xor
xchg
sub
in
or
add
add
dec
cmc
sbb
repnz
gs
pushf
in
test
mov
pop
popf
cli
or
mov
insl
push
add
decb
fs
negb
add
aas
incl
pusha
add
jnp
sub
jle
ror
pop
gs
xchg
add
mov
cmp
sub
dec
xor
rolb
aam
pushf
lods
mov
mov
mov
std
push
dec
xchg
movsb
test
dec
sbb
mov
jae
iret
inc
inc
aad
rep
mov
cmp
inc
lods
aam
ja
dec
ds
pop
outsb
stos
ja
imul
add
ljmp
lds
gs
ds
cmp
jecxz
dec
pop
xor
aaa
pop
fstpl
mov
pop
or
cli
scas
sub
aad
xchg
loop
mov
cmp
mov
clc
cwtl
cmpl
add
mov
lea
mov
cmp
lods
xchg
adc
mov
cmp
btrl
rolb
mov
daa
mov
mov
mov
shl
mov
xor
add
daa
lret
add
dec
mov
add
addl
jl
inc
cli
pop
lahf
ficoms
xorl
mov
sbb
lcall
mov
xchg
cltd
add
xor
xchg
ret
addb
hlt
or
sub
add
add
add
ljmp
add
cmp
rol
add
ficomps
pop
mov
cmp
ret
inc
add
mov
xor
dec
push
pop
add
xchg
add
cmc
xlat
lcall
cmc
imul
xor
mov
fwait
sub
mov
xor
lret
insl
and
push
add
mov
add
mov
cmp
or
push
xor
mov
mov
add
jmp
fildl
add
mov
add
ss
xchg
lock
sbb
loopne
mov
filds
cwtl
adc
outsl
jno
or
add
push
movsl
fildl
sahf
repz
in
lock
mov
add
fst
add
mov
pop
cld
mov
jnp
fucomp
mov
movsb
sbb
es
imul
scas
aam
inc
dec
notl
std
jle
iret
push
sub
call
mov
loope
push
mov
jge
xchg
sbb
mov
in
pop
cmp
add
mov
jl
add
sahf
repz
cwtl
out
sbb
ljmp
mov
movsl
or
adcl
mov
and
mov
dec
mov
mov
outsl
rcll
xlat
ss
jns
les
push
aad
mov
mov
jnp
add
mov
mov
ret
push
mov
xor
movsb
imull
push
mov
push
movsl
add
stc
inc
xchg
jmp
sub
add
cmp
popf
and
sbb
test
push
jo
mov
test
push
hlt
or
out
jl
mov
cs
add
inc
popf
scas
cld
mov
mov
in
shld
add
repnz
jl
mov
sbb
mov
out
sahf
jg
add
mov
sbb
add
sbb
mov
add
add
push
dec
in
dec
ss
dec
add
mov
sub
inc
aaa
push
pop
and
mov
sahf
ljmp
pop
mov
mov
and
test
xlat
cltd
ds
add
lea
loopne
mov
mov
add
mov
mov
pushf
add
mov
add
jae
push
mov
in
pop
fsts
scas
dec
mov
pcmpeqd
ja
add
lret
mov
sbb
mov
xchg
repnz
rolb
mov
addr16
cwtl
icebp
nop
add
in
push
movsb
mov
add
mov
test
js
lcall
test
lahf
mov
add
jo
mov
adc
inc
jnp
mov
mov
push
insb
incb
js
jp
add
dec
mov
add
stos
hlt
out
rorl
push
add
mov
mov
repz
add
movsl
test
xor
adc
mov
bound
mov
sbb
lock
ret
adc
popf
cld
push
add
scas
inc
cwtl
sub
inc
jp
dec
lods
or
enter
in
dec
mov
mov
add
push
or
repz
and
mov
imul
add
rolb
mov
jbe
add
lea
cmc
stos
push
add
cmp
mov
je
add
pushf
and
mov
add
cmp
in
push
rolb
mov
and
aad
add
cwtd
cmpsb
cwtl
enter
sbb
or
pop
or
pop
aad
das
dec
sete
in
cmp
mov
add
add
mov
add
pop
mov
into
cmp
addb
mov
shrl
cli
xchg
ja
imul
jb
mov
pop
and
fsubs
mov
xlat
stc
push
out
mov
add
out
mov
add
aas
jo
out
xchg
imul
pop
dec
rcll
jno
add
mov
das
vphsubwd
mov
push
add
mov
push
dec
mov
in
or
mov
add
add
mov
inc
ds
mov
mov
jmp
aam
test
rolb
mov
add
mov
inc
add
mov
dec
add
mov
ja
cmp
scas
int
add
add
es
cmp
mov
push
in
push
std
movsb
sti
rol
add
fcmovb
add
jecxz
jecxz
add
mov
xchg
mov
mov
lcall
xchg
add
nop
add
ret
imul
mov
lret
and
icebp
cltd
addr16
int
sbb
dec
pop
sbb
in
mov
push
xchg
mov
or
add
ljmp
jmp
add
mov
jno
xchg
add
cmp
out
inc
push
repnz
xor
add
mov
add
jns
add
js
fmuls
mov
push
add
icebp
push
std
dec
dec
push
stos
cmp
popa
addr16
clc
sti
push
push
int3
cmc
mov
jne
out
cli
enter
add
add
popf
out
mov
pop
sbb
mov
mov
adc
test
xor
mov
push
addl
fcom
add
inc
add
jb
mov
dec
pop
rolb
mov
add
pop
pop
push
sti
int3
leave
imul
mov
xor
jge
add
mov
dec
cs
cmp
mov
adc
add
add
cmpl
pop
lods
add
add
pop
lods
pop
pusha
add
addl
jp
imul
add
xchg
pop
lret
push
aas
je
les
fnstcw
xchg
add
add
add
nop
add
ret
mov
imul
out
inc
push
adc
leave
cmpsl
jl
nop
add
inc
sbb
pop
add
sub
mov
pop
out
std
cwtl
test
adc
and
jb
mov
mov
aas
pushf
out
add
mov
cmp
adc
dec
jno
nop
add
mov
enter
add
aam
sub
aad
into
or
add
add
out
inc
and
mov
sarl
push
cmp
pop
insb
jbe
push
add
adc
mov
gs
jne
movsl
dec
movsl
gs
movsl
xor
notl
iret
jns
jle
cld
inc
xchg
add
daa
mov
insb
dec
je
mov
push
cmpsl
dec
stos
fisttpl
test
mov
dec
dec
and
stos
xchg
lret
dec
movsl
inc
add
adc
mov
cmpl
loop
mov
mov
mov
mov
fmuls
movsb
fmulp
outsb
ret
dec
adc
push
pop
pop
cld
or
imul
jecxz,pn
adc
mov
or
inc
mov
push
aad
or
ss
xor
daa
fiaddl
in
scas
movsl
cmp
ret
mov
dec
jbe
add
xor
add
add
sub
dec
addb
cli
loop
mov
xchg
xor
mov
mov
aad
addb
ds
mov
lahf
mov
add
mov
into
cmpsb
in
cli
aam
jge
sbb
stos
sub
mov
xchg
add
test
pushf
loop
mov
out
xchg
mov
out
lcall
or
cmpsl
inc
add
insl
das
inc
adc
rol
rolb
mov
mov
add
imul
adc
mov
sahf
jle
cltd
adc
mov
inc
dec
testl
mov
pusha
add
add
cmp
add
add
sbb
add
mov
mov
imul
push
jb
mov
mov
pop
adc
mov
xchg
mov
inc
jp
addb
fucomi
jl
push
push
add
mov
sub
cmp
testb
mov
mov
xlat
sbb
mov
mov
fbstp
mov
add
xchg
test
fwait
scas
mov
jl
xor
mov
mov
pop
repz
dec
mov
test
add
mov
std
ljmp
or
or
outsl
iret
mov
mov
or
cltd
and
adc
insb
mov
add
jnp
add
out
std
mov
pop
ds
fimuls
mov
or
lcall
add
lods
inc
push
push
imul
arpl
jmp
pushf
lret
outsb
into
xchg
cmc
fisubs
inc
clc
xchg
pop
and
mov
add
mov
das
pop
outsb
pusha
add
ja
in
es
pop
xchg
ret
jge
push
sub
mov
mov
xor
xor
mov
lock
jmp
dec
sub
clc
ljmp
and
mov
cmp
xchg
sbb
sahf
pop
icebp
ljmp
push
or
cmp
dec
jle
ret
add
fistps
fcomi
cld
mov
sbb
push
add
lahf
sub
add
out
jns
cmpsl
pop
xor
mov
daa
sub
bound
mov
xor
push
add
add
mov
push
rolb
mov
sub
lret
or
fwait
inc
mov
add
mov
int
rorl
or
rolb
mov
lret
add
or
cli
stc
push
push
mov
imul
out
cmc
xor
mov
dec
mov
add
jp
add
dec
sbb
add
mov
mov
icebp
add
ja
popl
and
mov
lcall
or
push
fstpl
cli
sbb
and
mov
mov
push
and
mov
mov
addr16
mov
or
lds
int3
test
push
jge
pop
sub
mov
push
in
mov
mov
or
das
pop
popf
xchg
cmpsb
add
ljmp
mov
pusha
add
dec
lods
mov
mov
add
mov
mov
jae
clc
xor
mov
repz
fiadds
sbb
negl
and
add
icebp
jecxz
pop
cmp
inc
insb
sbb
sub
add
imul
pop
cli
sbb
movsl
mov
sti
addb
out
sbb
lret
bound
mov
pop
or
xlat
jecxz
daa
jmp
pop
inc
pop
add
mov
rcll
mov
stc
sub
fstpl
in
add
daa
or
xor
add
mov
cmpsl
pusha
add
jp
gs
add
and
add
add
mov
lret
mov
mov
mov
popa
or
lahf
mov
out
inc
cli
jnp
lcall
sbb
cld
lcall
pop
loop
mov
cmc
js
xchg
push
push
xchg
cwtl
shl
inc
addb
push
push
bswap
clc
add
mov
inc
add
ss
and
push
lock
out
cmp
mov
xor
dec
nop
add
cmc
jmp
xor
cmpl
mov
add
inc
add
add
xor
mov
dec
repz
out
test
mov
add
push
mov
aaa
sub
mov
jp
fnstsw
add
sti
mov
dec
cwtl
imull
les
repnz
aas
adc
add
std
stos
mov
add
cmp
mov
push
addb
scas
movsl
popa
pushl
add
das
in
std
mov
out
movsl
mov
mov
lods
mov
imull
bound
mov
add
fwait
rorl
push
dec
or
or
decl
add
in
mov
mov
int
mov
fisubrs
and
cmp
mov
add
mov
aad
and
mov
sete
gs
dec
mov
mov
mov
add
data16
and
movsb
rolb
mov
mov
std
lods
add
mov
add
and
out
push
add
xchg
cmp
mov
roll
sbb
add
test
and
sbb
add
push
ret
cmp
cmpsb
dec
fwait
xchg
fnstenv
add
arpl
mov
cltd
and
mov
add
mov
and
rolb
mov
mov
ds
ret
push
add
pop
out
ret
push
cmpsb
bound
mov
mov
mov
addb
andl
inc
and
das
xchg
mov
mov
jge
mov
pop
leave
and
sahf
jb
mov
clc
mov
add
xor
mov
adc
mov
xor
ss
adc
pop
inc
stos
push
shrl
hlt
ja
cld
cmp
imul
leave
jae
fstps
push
clc
outsl
sub
xchg
lret
jp
add
lret
popf
cwtl
push
inc
add
gs
cmp
jg
add
inc
inc
mov
mov
test
mov
inc
loopne
mov
lret
adc
mov
repz
add
jb
mov
add
add
addb
adc
mov
mov
mov
mov
sbb
mov
arpl
ret
cmpsl
xor
mov
addr16
inc
add
insb
hlt
dec
decb
push
shll
repnz
add
inc
dec
dec
mov
and
push
std
sub
popf
mov
mov
mov
ret
fistps
mov
jmp
jg
mov
loopne
mov
fwait
in
hlt
imul
add
mov
pushf
jb
mov
popa
loop
mov
addb
or
and
add
rcrl
and
mov
out
xor
fs
ret
cmp
scas
mov
mov
bound
mov
cli
add
mov
pop
sahf
push
jb
mov
add
mov
xor
repnz
lods
xor
adc
shr
sti
in
add
mov
and
inc
sbb
xor
mov
gs
xchg
push
pushf
cmp
es
gs
push
loop
mov
mov
ja
stos
lahf
push
sub
mov
xchg
les
mov
dec
lcall
loop
mov
mov
pop
inc
mov
loopne
mov
add
fiaddl
mov
sub
add
mov
into
cmpsb
jb
mov
cmp
mov
add
enter
sub
mov
mov
bound
mov
rolb
mov
add
insb
dec
push
cmp
stos
cmp
add
imul
mov
add
lods
fiadds
add
fisubs
push
lsl
xlat
cmp
sbb
pop
xor
mov
ficompl
add
adc
mov
or
add
xlat
aas
jns
sbb
cmp
fcmovnu
adc
pop
cld
mov
push
cmpsb
arpl
add
dec
jbe
push
xor
mov
add
xor
mov
add
inc
add
mov
dec
mov
add
jb
mov
clc
js
int3
mov
lcall
out
notb
sbb
cmp
cltd
xlat
rolb
lods
cltd
ss
jecxz
push
jnp
xchg
add
dec
icebp
roll
lret
mov
sub
push
out
mov
insb
pop
push
in
aas
cmp
mov
cmpsl
push
add
mov
pop
mov
loope
rolb
mov
add
andl
mov
insl
mov
mov
movsl
mov
xchg
mov
push
in
leave
push
xor
mov
ficomps
adc
mov
pop
roll
aad
insl
ret
fstpl
rolb
mov
inc
add
push
addr16
jp
mov
fsubr
cmp
add
test
js
push
in
jmp
xchg
pop
mov
add
jge,pt
dec
push
pop
and
test
rol
mov
and
mov
scas
shll
mov
mov
add
push
sbb
arpl
add
lock
add
push
faddp
in
adc
arpl
fcmovnu
sub
push
arpl
mov
add
divl
cmp
mov
add
mul
pop
repnz
mov
iret
pop
fildl
adcl
fmul
xor
jbe
jl
incl
xor
pop
sti
pop
lods
jg
adc
scas
out
sub
cmp
jg
mov
cld
mov
sahf
mov
add
xchg
pop
mov
cmc
xchg
add
dec
fdivrs
xchg
add
lcall
test
or
lcall
add
add
out
xchg
and
jns
add
push
add
push
cmp
add
mov
mov
test
mov
mov
sbb
mov
add
sbb
pop
shll
mov
push
cmp
or
inc
add
test
xchg
mov
mov
add
lahf
aaa
add
out
sub
ficoml
xchg
ss
push
jle
mov
push
mov
or
pusha
add
stc
cwtl
dec
scas
pushf
sbb
subl
mov
push
stc
rolb
mov
push
out
push
loopne
mov
cwtl
jnp
imul
stos
or
out
in
cld
nop
add
jl
pop
pop
sbb
sti
push
add
pop
xchg
adc
xchg
sbb
dec
mov
add
jecxz
push
xor
jp
add
add
add
sub
xchg
and
mov
add
arpl
popf
repnz
push
fsts
add
cld
xchg
jp
scas
shrl
xchg
insb
mov
xor
mov
push
and
and
outsb
in
in
sbb
mov
lea
mov
mov
xchg
subl
lods
lret
add
in
pop
ds
pop
clc
fwait
enter
rolb
mov
adc
cltd
or
stos
loop
mov
push
mov
pop
outsl
jge
add
inc
inc
movsl
dec
adc
dec
mov
jns
cmp
jmp
sbb
pushf
bound
mov
outsl
xchg
jmp
stos
popf
sbb
ret
dec
cmp
add
push
push
je
and
cmpsl
add
cs
add
rolb
mov
add
cmp
mov
or
js
mov
outsl
lods
inc
int3
movsl
mov
dec
push
adc
push
sbb
mov
mov
jno
cmp
adc
jb
mov
add
push
mov
out
add
fcmovnb
adc
mov
add
jp
shll
push
and
sub
and
mov
arpl
rcrl
outsl
enter
mov
fmuls
xor
sub
add
add
jmp
insb
mov
add
add
cmp
add
pop
jge
add
int3
aam
xchg
xchg
popf
push
add
add
