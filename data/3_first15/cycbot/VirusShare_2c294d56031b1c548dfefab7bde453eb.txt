push
add
in
test
jno
add
fsubs
call
mov
mov
fsubp
call
push
call
pop
xchg
lret
stos
das
clc
add
rolb
mov
call
call
add
mov
sti
add
add
xor
add
xchg
dec
xor
add
sbb
bound
add
add
dec
push
sub
test
out
divb
add
cmp
push
sub
test
mov
call
add
sahf
aam
add
sbb
add
dec
jnp
call
loop
jo
add
or
add
shr
inc
add
add
add
ljmp
call
dec
rol
call
cmp
call
add
cmp
add
in
je
cmp
add
fbld
scas
push
cmp
cli
inc
call
aad
lcall
adc
sub
call
sbb
call
add
or
mov
call
sbb
xchg
fdiv
or
out
adc
pushf
hlt
mov
xlat
jmp
call
push
int3
push
add
push
dec
fisttpl
fsubrl
add
rorb
add
mov
mov
dec
fs
adc
add
add
add
push
add
and
add
add
shr
add
lods
cmpsb
call
call
push
hlt
xchg
mov
fwait
lock
lock
or
call
xor
add
in
mov
adc
add
xor
add
xor
add
call
dec
int
call
adc
add
mov
rol
call
inc
call
test
aam
mov
add
icebp
jne
pop
outsl
leave
sub
dec
call
in
adc
add
add
mov
add
outsl
or
add
pop
jmp
out
pop
popa
add
inc
call
inc
add
cmp
stos
gs
call
pop
xor
add
xlat
cmp
leave
jecxz
adc
add
mov
push
add
mov
add
lock
call
add
cmp
add
call
xchg
movsb
call
call
icebp
inc
add
sub
stos
inc
call
call
call
repnz
rcrb
inc
add
idivl
adc
add
arpl
add
call
dec
xchg
xchg
jb
add
and
shr
mov
psubq
call
add
or
sub
adc
fiadds
call
inc
call
jae
add
add
or
sub
and
add
orps
dec
mov
add
adc
add
or
movsl
call
dec
sub
ret
call
dec
xchg
pop
fsubs
dec
pop
imul
idivb
add
shr
lret
xchg
adc
add
add
add
push
add
xor
add
es
call
je
add
aas
loop
icebp
nop
mov
stc
xor
pop
xor
add
or
add
incl
add
jne
pop
push
clc
leave
call
callw
pop
test
fisubrl
js
push
add
outsl
rcll
std
dec
test
call
push
add
pop
cld
jl
cmp
mov
add
xchg
imul
mov
jle
inc
call
call
push
call
sub
call
call
mov
cltd
repnz
add
outsl
mov
or
lret
inc
add
fcmovb
call
jg
xchg
cmp
mov
cmpsb
call
add
mov
add
add
push
call
repnz
insl
daa
call
add
call
leave
lret
call
call
in
jae
add
call
dec
adc
add
push
or
add
call
add
add
jb
add
insb
lret
call
add
add
shr
dec
dec
mov
lea
leave
int3
jp
adc
add
add
call
add
es
arpl
add
js
or
add
add
call
add
xadd
test
push
or
imul
xchg
movsl
call
test
adc
add
mov
jae
add
xor
add
add
aad
push
call
cli
fstl
add
call
leave
or
inc
add
cmp
and
add
mov
enter
adc
add
inc
call
jge
push
add
xchg
jecxz
imul
in
fimuls
call
xchg
test
mov
xchg
sbb
pusha
add
inc
call
call
cld
jle
popf
xchg
lods
dec
lahf
pop
sub
pop
call
sub
jmp
add
fimuls
fdivrs
add
pop
mov
mov
call
das
cmp
adc
add
add
add
add
push
xchg
leave
dec
jmp
cmp
sub
push
je
call
pop
pusha
add
cld
xor
add
jp
add
cs
jmp
sub
add
add
daa
call
pop
call
stc
test
mov
add
inc
add
add
add
add
xchg
cmpsl
call
call
call
adc
sub
or
mov
call
dec
insb
inc
call
call
add
mov
add
in
lret
ret
cmc
cmp
xchg
and
lret
fsubl
in
lret
div
inc
call
fisubs
insl
aam
call
xchg
loope
clc
js
xor
in
rcrl
jl
call
xchg
mov
call
ud1
adc
add
pushf
sbb
ljmp
add
add
vminps
call
call
call
push
call
add
scas
mul
call
call
call
dec
arpl
add
add
mov
inc
call
js
fwait
popf
and
add
mov
add
mov
inc
call
sub
out
in
cmp
call
call
rclb
add
add
add
add
pop
and
add
call
arpl
add
sub
call
add
insb
inc
call
add
push
ljmp
call
call
sbb
and
add
ss
call
ja
call
pop
ljmp
call
add
pop
xchg
or
add
xchg
ss
xchg
pop
cltd
adc
xor
nop
mov
add
callw
cmp
adc
add
fmul
shr
add
test
lock
call
call
pop
cmp
add
adc
call
xlat
push
call
aam
cmp
push
sub
call
add
call
ja
hlt
sub
xchg
add
add
sar
jb
add
sub
sahf
js
call
add
pop
cld
sub
add
sub
sbb
add
add
test
dec
movsb
call
call
add
xor
add
movsb
call
shr
cwtl
xor
add
push
add
jbe
pop
call
call
sbb
call
add
add
pop
jo
add
call
mov
pop
fimull
add
in
lcall
add
add
pop
call
mov
call
sub
pop
lock
xor
int3
fldenv
stc
std
and
mov
add
mov
jbe
call
pop
daa
call
sub
shr
mov
xchg
xchg
mov
dec
push
push
mov
inc
call
call
sub
push
sbb
sub
das
cmp
call
call
in
jl
call
add
lea
jp
call
inc
call
call
es
shrb
je
call
sbb
add
int3
repnz
add
mov
mov
pop
call
inc
add
es
call
or
call
cmp
jg
fcomi
xchg
nop
adc
add
xor
add
call
cmpsl
call
add
add
xor
add
ret
cmp
jecxz
test
add
cmpsb
call
call
call
xor
add
add
daa
call
add
mov
call
call
call
repnz
add
call
add
call
insl
dec
cli
dec
mov
mov
pop
outsb
aad
sub
add
mov
shlb
daa
call
add
add
call
add
es
call
and
add
cmp
mov
or
cwtl
xchg
push
jp
fisttps
pop
std
mov
outsb
adc
add
mov
and
add
mov
add
imul
mov
xor
push
add
push
pop
xor
push
add
repnz
add
sbb
call
add
mov
add
sbb
pusha
add
dec
out
add
add
add
inc
add
sbb
push
inc
add
sbb
call
mov
call
sub
cmp
add
push
push
shr
push
xchg
jecxz
sub
cmpsb
call
cmp
add
sub
call
xor
add
call
add
outsl
sbb
icebp
dec
push
pop
out
fwait
pop
out
ss
adc
call
fistps
test
cld
push
nop
sub
add
jp
fidivrs
scas
shlb
add
in
js
cli
or
add
call
xchg
adc
add
aaa
adc
add
call
add
cmp
cmc
adc
add
xchg
jae
add
shr
add
mov
push
push
call
mov
imul
xor
add
fmulp
sub
jle
add
xor
add
xor
add
jo
add
inc
add
add
add
jle
call
inc
add
cmp
cld
lcall
jp
add
push
add
fst
add
xchg
mov
insl
xor
add
out
stc
enter
call
call
pop
call
movsl
call
clc
test
jg
lods
lods
mov
sub
movsl
call
inc
add
fstpl
push
call
ret
call
jge
insb
fsubrs
push
clc
mov
mov
ret
cmp
push
sub
pop
pop
pop
add
popf
jns
call
mov
add
sub
add
je
call
sbb
imul
aaa
mov
add
xchg
sub
inc
call
ss
call
mov
aaa
call
add
mov
arpl
add
add
xchg
dec
pop
call
add
add
call
pop
or
sub
call
xchg
xchg
out
add
add
faddl
add
imul
call
test
add
push
dec
push
add
sbb
or
xchg
adc
add
mov
call
sbb
lret
test
xchg
imul
test
sbb
add
sete
arpl
add
add
inc
add
mov
shr
xchg
inc
add
pop
xchg
jmp
or
sub
adc
jge
push
test
dec
inc
add
daa
call
or
std
cmpsb
call
notb
shr
add
add
add
loop
mov
add
add
call
call
lods
mov
mov
dec
vmovups
add
inc
add
and
cmp
pop
call
test
call
add
sbb
out
and
add
add
clc
xor
add
or
add
in
xchg
dec
mov
adc
add
mov
insb
lock
mov
add
inc
add
fsubs
call
mov
imul
daa
call
leave
or
lock
cmc
mov
add
mov
call
or
add
xchg
push
cmp
add
ja
mov
repnz
call
call
jo
add
add
jne
push
or
call
pop
mov
push
dec
sub
call
lods
cmp
sub
in
inc
add
add
xor
add
call
insl
xchg
or
fucomi
dec
sub
add
call
cmpsl
call
sub
add
add
add
call
cmp
repz
add
push
dec
fisttpl
call
mov
or
xchg
mov
jo
add
call
iret
fistl
add
sbb
add
test
call
add
lods
mov
add
fiaddl
add
add
call
add
jp
or
and
add
xchg
add
add
xlat
push
jle
mov
scas
xchg
add
add
icebp
repnz
xchg
push
push
pushf
sbb
mov
movsl
call
jns
adc
add
call
call
xchg
scas
cld
daa
call
xchg
jecxz
jmp
sbb
inc
add
leave
loope
in
movsl
call
xor
add
std
lahf
out
inc
add
inc
call
add
xchg
add
add
add
add
aas
push
mov
ds
add
pop
call
mov
ret
call
push
adc
dec
mov
xor
add
call
into
mov
callw
pop
jbe
mov
cmpsl
call
call
mov
call
sbb
pop
call
dec
ss
add
mov
xchg
sub
aaa
sub
call
xor
add
mov
call
mov
xor
cs
add
mov
mov
mulb
sbb
add
call
adc
loopne
push
add
paddusb
and
test
mov
fs
and
add
mov
nop
jecxz
rclb
add
into
jl
in
inc
add
outsb
cs
daa
call
call
mov
lahf
cmc
and
add
add
arpl
add
cli
movsb
call
call
xchg
outsb
mov
add
add
loopne
int
dec
test
sub
mov
js
outsl
aaa
es
add
push
cs
or
xor
add
lcall
add
aas
das
popa
add
hlt
sub
mov
imul
call
add
fs
xchg
mov
call
mov
add
mov
call
clc
out
scas
xchg
and
add
call
add
sub
jge
sub
sahf
and
add
add
call
add
jg
add
stc
ljmp
xor
test
add
xor
test
test
aam
test
mov
out
gs
add
xor
add
mov
call
xchg
xor
mov
aas
into
negb
inc
add
lcall
add
sbb
enter
clc
gs
faddl
add
callw
call
add
stos
test
adc
std
push
jno
add
add
and
add
call
dec
in
ss
mov
call
loope
cmpsl
call
jl
push
fs
mov
notl
add
lahf
add
add
test
inc
call
out
jl
sti
jo
add
mov
mov
loope
fs
add
clc
cs
loope
dec
pop
mov
xlat
gs
add
loop
out
xchg
or
pop
add
mov
out
sub
test
mov
call
sbb
dec
lea
shr
out
cmp
enter
pop
jns
mov
inc
call
call
add
call
call
call
imul
add
clc
adc
mov
add
addr16
add
nop
xchg
jo
add
call
cmc
jnp
sub
call
addr16
add
in
fs
xchg
dec
movsb
call
add
loop
das
sub
mov
xlat
adc
shr
in
pop
loop
ds
call
add
call
call
insb
cmc
xchg
leave
adc
mov
loope
cld
cs
mov
and
cmp
xchg
push
sub
call
add
adc
xchg
into
int3
pop
fildl
int
out
adc
fldt
xor
add
jmp
pop
loop
push
xor
in
test
add
ss
pushf
sbb
je
call
add
in
mov
dec
lahf
inc
add
pusha
add
or
and
add
fyl2x
in
dec
cs
jno
add
imul
movsb
call
cltd
clc
imul
add
repnz
add
add
call
test
xor
add
jb
add
ljmp
xchg
mov
movsb
call
mov
dec
sbb
inc
call
add
leave
stos
sub
test
test
pop
clc
gs
sbb
mov
frstor
icebp
call
add
or
add
call
divl
in
push
shr
cmp
add
call
mov
fistps
call
mov
lret
leave
movsb
call
add
call
bound
add
call
leave
inc
add
loopne
es
hlt
dec
lods
test
mov
mov
call
jb
add
xchg
popf
add
add
xchg
cmpsl
call
push
call
repnz
out
or
xor
add
call
call
cmc
sub
call
test
inc
add
push
xor
add
sahf
inc
call
inc
add
and
add
call
add
call
jno
add
add
shr
adc
add
xchg
popa
add
mov
jnp
call
add
repnz
popa
add
add
add
and
aaa
aaa
mov
jmp
call
shr
lahf
sub
jno
add
inc
call
rorb
push
add
sub
pop
repnz
std
jle
adc
sub
call
icebp
lret
cmp
out
cmp
call
fcoml
add
lahf
arpl
add
sub
enter
cmpsl
call
scas
or
repz
and
dec
test
dec
add
add
add
pop
call
add
fstpt
aaa
xchg
push
add
repz
add
jge
add
loopne
flds
add
push
call
xchg
je
js
sti
adc
fwait
mov
test
movsb
call
pop
jmp
sub
arpl
add
add
xor
lret
add
repnz
add
outsb
lods
or
fldcw
fcmovu
cli
push
mov
mov
jmp
mov
and
add
icebp
mov
add
add
mov
add
adc
add
mov
jge
divb
add
out
mov
add
call
add
pop
and
add
add
inc
add
addr16
lods
das
add
add
add
repz
inc
add
scas
inc
add
std
cmpsb
call
hlt
or
add
dec
xor
mov
xchg
jg
jecxz
outsb
iret
sbb
callw
lret
or
call
push
add
insl
dec
loopne
jmp
sub
add
add
mov
add
add
call
inc
call
call
adc
sbb
add
inc
call
shr
inc
add
fcmovbe
addr16
mov
adc
add
shlb
add
int3
insl
test
fildl
xchg
sarb
xchg
or
add
call
popf
add
add
add
sub
cmp
sahf
in
xchg
add
add
mov
scas
daa
call
sarb
add
push
ret
call
sub
call
sbb
add
imull
lea
in
scas
mov
or
movsl
call
dec
cwtl
cli
xchg
scas
repnz
dec
insb
shrl
sbb
call
xchg
add
add
fs
knotw
stc
fildl
xchg
ret
movsb
call
add
xor
add
cli
imul
stos
jnp
inc
add
and
add
lret
nop
push
lcall
sahf
icebp
stos
ret
add
gs
push
call
push
ret
fadd
call
shr
dec
adc
add
or
add
jno
add
leave
lcall
test
inc
add
push
add
ficomps
inc
call
jmp
jg
add
dec
xchg
outsb
mov
cmpsb
call
add
mov
add
mov
jno
add
divl
stc
nop
and
add
psubq
nop
xchg
push
add
push
add
aaa
dec
aas
inc
call
mov
pop
aas
jne
or
mov
clc
mov
call
call
sbb
add
add
test
call
call
call
out
jns
pop
addr16
add
cwtl
aas
aam
call
mov
cmpsb
call
add
add
jge
pop
push
call
call
add
bound
add
addr16
mov
xor
cli
arpl
add
call
insl
dec
es
call
mov
jae
add
add
fidivl
fwait
pop
rorb
call
int
pop
pop
arpl
add
repnz
add
jbe
cmp
and
fdivr
outsb
jle
add
shr
call
mov
add
leave
ficomps
into
mov
ret
and
add
and
xchg
mov
xchg
test
enter
scas
insb
xor
add
inc
call
cmpsl
call
mov
add
dec
push
pop
stos
xchg
xchg
push
or
call
push
add
mov
push
add
iret
jle
add
add
xchg
fiaddl
add
xor
stos
push
cltd
sub
add
popf
adc
add
sti
pop
aad
call
xor
add
test
xchg
inc
add
push
add
notl
jbe
add
gs
add
inc
add
xor
add
jne
icebp
mov
in
fimuls
adc
add
mov
jo
add
lret
cld
cltd
adc
add
cwtl
test
call
jl
es
call
add
inc
call
call
xchg
mov
loopne
insb
cmpsl
call
movsb
call
int
call
imul
add
xchg
dec
push
add
pop
push
lcall
fisubrl
pusha
add
lret
dec
push
inc
add
scas
into
std
inc
add
add
add
add
jmp
mov
sub
movsl
call
test
jge
jno
add
pop
pop
adc
add
lcall
xchg
cmpsb
call
ljmp
test
stc
mov
addr16
or
or
add
pop
sti
xchg
mov
addr16
pop
inc
add
mov
outsb
dec
mov
lcall
test
call
sbb
sbb
pop
jb
add
add
decl
add
add
push
jge
int
add
jge
enter
add
dec
mov
add
das
dec
xor
add
cwtl
imul
push
cmpsb
call
shrl
xchg
fistpll
fsubl
add
pusha
add
mov
aaa
mov
jo
add
add
xchg
ret
sbb
push
add
pop
pop
jge
bound
add
add
fucomi
jne
add
ja
sub
call
int3
and
cmp
call
xchg
daa
call
das
dec
sbb
call
call
mov
call
call
callw
add
inc
add
jno
add
push
push
sub
hlt
inc
add
enter
call
call
cld
xchg
lock
cmp
imul
mov
add
xchg
popa
add
xor
add
push
and
add
call
inc
call
cs
out
js
mov
jecxz
jecxz
lods
sub
jns
movsl
call
leave
sbb
icebp
insb
stos
into
aaa
push
add
cmp
jno
add
mov
add
imul
dec
insb
push
xlat
jo
add
call
call
sub
add
lret
call
sbb
cltd
mov
lret
call
add
xchg
ds
add
sub
cmp
call
mov
repnz
add
lcall
lock
add
pop
xor
add
call
add
shld
jo
add
sub
clc
shr
dec
lcall
mov
call
cwtl
mov
ds
call
jp
mov
add
pop
adc
add
hlt
mov
push
popa
add
jge
push
call
clc
mov
add
call
repz
add
call
add
add
call
int
call
call
jno
add
jae
add
add
fucomp
jns
call
call
arpl
add
add
rcrb
pop
push
aas
dec
lods
or
mov
mov
mov
cli
adc
add
push
push
stc
dec
and
add
leave
jmp
add
scas
jl
jle
add
pop
fidivl
add
cmp
add
jmp
cltd
mov
adc
sbb
out
mov
lock
enter
outsb
push
add
mov
test
mov
add
call
jb
add
sub
push
push
add
rcrb
add
adc
call
push
call
repz
insb
xchg
leave
inc
add
jp
das
pop
fiadds
add
lock
fdivrl
pop
icebp
outsb
ret
call
hlt
push
cmp
add
enter
sub
call
out
aaa
call
cmp
insb
cmc
pusha
add
push
add
mov
lahf
jno
add
fstl
nop
mov
jp
fsubrs
sbb
lods
sub
pop
call
outsb
cld
ret
call
call
add
add
inc
call
loope
in
and
add
cmp
add
push
call
call
stc
sahf
mov
call
xchg
xor
sarb
xchg
popf
callw
and
fcmove
jl
add
stc
push
add
in
and
add
add
call
add
xor
add
add
add
add
jmp
iret
mov
test
jb
add
add
lret
mov
and
enter
add
sub
add
inc
add
enter
jnp
call
ss
add
call
call
pop
fidivl
mov
call
pop
loop
stc
inc
add
pop
mov
daa
call
mov
addr16
sub
jp
call
jno
add
add
adc
add
cmpsl
call
add
xor
add
icebp
mov
dec
xchg
jno
add
dec
or
add
imul
add
es
call
mov
add
cli
and
add
lock
ret
call
call
fimuls
add
adc
add
add
fbld
scas
pop
call
mov
clc
inc
call
fidivrs
adc
add
add
xchg
push
call
add
out
mov
mov
cmpsl
call
call
sbb
mov
xlat
bound
add
call
call
call
push
add
jl
fwait
or
sbb
call
lret
dec
call
call
inc
add
sub
push
jo
add
test
mov
add
aam
jae
add
cmp
call
sbb
inc
add
popf
repnz
call
cld
sub
add
cmp
add
aad
lock
add
or
call
cld
lods
sbb
mov
xor
add
sub
add
fistps
shl
call
xor
add
inc
call
cmp
lret
dec
push
js
out
repz
add
outsl
sahf
mov
lods
xchg
mov
add
pop
cli
outsb
dec
adc
add
adc
jmp
popf
in
jg
sub
call
in
sub
add
in
stc
in
add
add
add
add
xchg
sahf
cmp
fisubrs
das
and
add
xor
push
add
mov
dec
push
aaa
dec
fs
xchg
or
add
shlb
add
jmp
mov
mov
call
movsb
call
xor
add
sub
add
jns
add
sub
jecxz
and
nop
test
jmp
jb
add
mov
add
adc
adc
add
add
cmp
imul
add
cli
insl
or
or
cmpsb
call
add
add
imul
add
xchg
xchg
cltd
cmp
call
sub
add
clc
mov
popf
call
pop
loop
cmp
and
add
add
bound
add
cmpsb
call
mov
mov
call
callw
add
test
xchg
inc
call
inc
call
call
hlt
sub
dec
sub
dec
adc
call
and
add
call
loopne
loop
inc
call
sbb
je
cmp
sbb
fs
mov
jbe
jns
mov
movsb
call
xor
add
lods
and
add
pop
push
mov
add
lret
mov
add
shll
call
add
mov
sbb
mov
xchg
mov
shrl
icebp
pop
jl
call
add
jnp
push
add
icebp
and
add
and
add
jno
add
mov
int
call
add
in
jo
add
aam
ret
sub
fwait
mov
add
je
lods
lea
add
mov
pop
jle
pop
mov
ret
imul
fsubl
add
call
loop
lret
add
jb
add
add
call
add
out
cli
adc
lock
out
xor
add
cmp
push
xlat
enter
pusha
add
cmp
ret
call
cli
shlb
add
addr16
or
mov
add
ds
mov
ljmp
scas
int
add
dec
mov
call
or
add
adc
and
add
inc
add
outsl
mov
mov
mov
jmp
adc
add
call
push
test
inc
add
loopne
imul
call
push
mov
add
imul
mov
xchg
mov
lret
imul
cld
jnp
xor
bound
add
int
push
mov
dec
aad
sub
sbb
arpl
add
push
shr
gs
pop
call
out
or
add
ljmp
push
in
ljmp
and
add
outsb
mov
call
add
pop
jle
add
fists
cmp
add
cli
mov
mov
add
aad
add
jne
call
add
call
add
add
adc
add
call
add
popf
outsb
call
xchg
add
push
call
add
mov
add
gs
xchg
icebp
cmp
push
adc
xor
add
nop
insb
test
sub
xor
inc
add
lea
jns
mov
call
jl
push
add
sub
notl
lods
lret
add
aam
out
insl
cwtl
and
add
pop
jl
mov
inc
add
sub
call
shr
and
add
bound
add
call
push
call
call
popa
add
pop
into
jb
add
call
out
sbb
push
add
or
call
and
add
sbb
call
dec
stc
call
call
pop
call
sub
add
pop
xchg
mov
push
mov
push
js
call
add
cmp
jbe
xor
add
stos
sub
push
jae
add
call
add
add
sbb
jnp
sub
call
inc
add
pop
mov
jo
add
out
mov
inc
add
fsubrs
out
fcom
fsubs
cmpsb
call
lods
cmp
jp
or
call
hlt
and
add
ljmp
call
dec
add
lahf
adc
add
call
jl
push
and
add
int
add
cmc
xor
add
push
and
add
call
pop
sbb
cltd
cld
out
cmpsb
call
add
call
and
add
add
bnd
leave
adc
dec
sub
call
aaa
out
insb
call
lods
cltd
lock
cmpsl
call
call
call
call
outsb
sbb
icebp
decb
mov
int3
xor
add
testb
add
out
cmp
test
and
leave
xchg
test
call
mov
mov
add
add
stos
rorb
jns
push
mov
xor
mov
call
inc
add
imul
sub
xchg
addr16
call
add
test
add
jo
add
call
pop
mov
sbb
sub
call
icebp
stos
add
add
sub
call
cli
outsl
or
adc
leave
ror
clc
mov
dec
in
pop
cs
nop
out
sub
add
add
int3
ja
call
jb
add
add
mov
jmp
dec
mov
jnp
imul
push
in
addr16
pushf
cmp
pop
jo
add
inc
add
frstor
add
xor
call
add
push
add
pop
in
pop
cmp
incb
add
inc
call
call
gs
call
jge
add
push
sbb
call
add
inc
add
sub
mov
call
sub
rcrl
fstpt
call
add
pop
ljmp
sub
das
test
add
loop
lret
xor
add
mov
lret
xor
add
jp
call
shrl
call
call
inc
add
and
shr
inc
call
add
insb
sbb
call
jne
call
loop
sahf
pop
incb
dec
sbb
fcompl
movsb
call
xchg
sbb
add
hlt
add
loope
mov
mov
stc
xchg
shr
call
mov
jno
add
call
inc
add
cmpsl
call
add
add
dec
push
call
inc
add
adc
add
jl
inc
call
lods
pop
add
add
add
imul
push
jle
mov
jmp
fs
call
dec
mov
push
movsb
call
cld
stos
adc
add
adc
add
cmp
incb
add
pop
sbb
arpl
add
jne
mov
mov
hlt
in
mov
call
call
aam
xor
div
jne
mov
add
cmp
sarb
push
and
call
int3
mov
aaa
adc
add
add
mov
cwtl
mov
lods
mov
lcall
outsl
rcll
add
lahf
test
repnz
push
jmp
into
push
call
mov
jnp
call
call
lea
test
loopne
cmp
call
or
call
imul
shll
scas
insb
fists
pusha
add
call
call
jecxz
hlt
in
std
dec
push
call
je
sub
sub
call
call
add
inc
add
out
mov
lahf
fldl
clc
mov
call
call
call
add
in
in
loope
xor
add
into
movsb
call
push
add
add
fiaddl
add
add
add
psubsw
cmovbe
mov
push
pop
das
mov
loopne
sti
aaa
sti
sbb
add
cmp
fstpl
shr
loopne
ret
call
add
jb
add
fistpl
add
std
jns
call
add
lods
call
xlat
lods
jmp
add
mov
call
mov
cmc
pop
xchg
repnz
add
cwtl
xchg
fstpt
xchg
inc
add
or
add
sub
add
cmpsb
call
mov
add
leave
mov
xor
add
addr16
scas
add
stos
xchg
mov
jnp
call
add
into
push
add
xchg
out
xor
add
mov
sub
loope
arpl
add
call
imul
add
repnz
cmpsb
call
cmp
cmpsb
call
mov
scas
aaa
mov
add
add
add
mov
jmp
call
fcomps
cli
scas
sbb
scas
int3
mov
pop
ficomps
cltd
xor
add
outsb
jne
call
call
call
dec
mov
mov
repz
lock
xchg
adc
add
in
lret
lods
aas
loope
xor
pop
stc
call
shlb
push
mov
jnp
add
pop
or
push
add
sub
call
mov
in
mov
pop
mov
shr
push
add
imul
add
fldln2
lods
and
add
popa
add
xchg
ret
call
fnsave
xchg
xchg
aam
call
add
daa
call
lock
add
arpl
add
adc
add
dec
out
cltd
clc
dec
stos
shr
adc
bound
add
int
stc
cmpsl
call
adc
add
add
pop
cmp
into
pop
insl
fstl
or
cli
es
add
mov
add
icebp
jecxz
push
add
adc
add
add
fiadds
jg
mov
add
in
adc
add
into
push
fwait
xchg
sti
jno
add
mov
pop
call
sub
cmpsb
call
push
mov
call
add
call
push
sub
lcall
inc
call
jp
loopne
testb
bound
add
fdivp
mov
call
add
lret
add
gs
sbb
test
jmp
cs
xor
add
adc
push
jo
add
call
ret
call
xor
add
push
adc
add
cmp
call
add
scas
sub
call
call
out
in
mov
fsubs
scas
in
push
push
outsb
push
adc
add
jmp
cltd
mov
adc
add
add
xchg
rol
call
call
dec
adc
add
call
call
jns
call
call
sub
add
add
call
call
shr
call
test
adc
add
or
call
add
jno
add
cli
int
lcall
fidivs
add
or
enter
sbb
add
add
cmp
call
call
inc
add
xchg
push
int
sbb
call
or
mov
jmp
inc
call
add
fisubs
call
add
add
call
add
ret
call
adc
add
add
in
sahf
lcall
in
fimuls
mov
call
mov
stc
loopne
pop
call
das
pop
dec
out
sub
ljmp
call
fidivrs
clc
pop
call
call
movsl
call
loopne
and
add
call
add
sbb
add
test
add
add
inc
add
xchg
sub
sub
xchg
pushf
inc
add
cli
xchg
push
mov
xchg
lods
lret
mov
push
aam
call
pop
jg
call
push
inc
add
pop
jg
xchg
pop
call
mov
add
push
add
cmp
xchg
jne
je
inc
add
mov
imul
mov
call
mov
add
add
call
out
clc
and
add
pop
call
add
adc
add
or
sub
stos
mov
mov
rorb
jecxz
addr16
aam
dec
in
testb
xchg
dec
mov
call
enter
call
sub
push
add
or
pop
dec
sub
je
add
jno
add
ret
call
pop
test
and
pusha
add
mov
call
mov
in
cltd
mov
rcrl
call
mov
call
push
add
jno
add
cmp
call
add
std
xor
add
sub
call
ret
call
dec
sub
add
cmp
call
add
xlat
sbb
in
mov
call
push
mov
lcall
push
cltd
hlt
push
add
jp
cli
lods
cmp
xor
xchg
aas
add
adc
add
jnp
jle
add
arpl
add
add
jo
add
fistl
add
push
add
inc
call
or
out
loopne
pop
addr16
add
call
daa
call
pop
inc
add
xor
add
pop
push
or
add
cmpsl
call
add
call
daa
call
mov
pop
dec
test
cmp
shr
call
lcall
sub
call
fwait
aad
int
popa
add
movsb
call
in
clc
out
pop
mov
pop
pushf
xor
add
add
add
add
bswap
shr
lock
fidivl
add
jmp
add
xchg
cltd
imul
call
add
fsub
call
mov
add
cltd
lcall
cwtl
mov
pop
sub
call
ds
aas
outsb
xchg
and
add
push
and
add
mov
call
push
std
mov
call
std
jp
add
and
add
pop
xchg
cs
jge
ds
daa
call
sbb
add
test
leave
out
in
cld
test
insl
pop
pop
sahf
decb
call
push
add
jns
call
push
add
aad
jo
add
call
fidivrl
call
bound
add
mov
shll
call
sub
call
stos
sub
popa
add
mov
bound
add
call
pop
call
xor
in
mov
call
bound
add
add
testl
or
add
mov
call
add
out
call
sub
add
pop
ljmp
add
sub
add
fdivs
add
cmp
test
xchg
fsubrl
add
xchg
push
add
add
adc
xchg
ljmp
aaa
push
add
jecxz
inc
call
sub
add
je
outsl
mov
scas
jne
add
jg
call
add
add
mov
add
add
sub
call
call
add
add
adc
add
or
jl
dec
cmc
mov
pop
call
callw
add
mov
jnp
pop
ljmp
call
cmp
test
fimuls
mov
and
add
fidivl
call
mov
call
add
and
add
push
pop
sub
sbb
cmp
dec
es
call
push
add
aam
call
add
outsl
dec
test
pop
pop
xor
add
push
call
dec
fs
xchg
mov
pop
call
add
sub
add
add
sub
inc
add
stc
push
push
mov
mov
adc
mov
dec
sbb
call
pop
call
sub
fsts
add
iret
mov
and
add
call
jl
out
jle
incl
call
add
sub
call
adc
jnp
call
add
cmp
mov
clc
inc
add
scas
psllq
pusha
add
mov
add
push
push
xchg
or
sbb
popf
xlat
jo
add
dec
btr
add
cs
add
push
fmuls
cmc
mov
add
adc
add
mov
mov
add
jns
jno
add
addr16
add
or
aas
xchg
fstp
inc
add
and
add
cmc
and
add
pop
push
xchg
iret
push
add
rcll
push
mov
call
je
call
movsl
call
call
add
jle
call
xor
add
jns
or
cmc
clc
mov
add
add
call
jnp
es
mov
psubusb
call
outsb
shr
call
add
add
imul
sub
mov
add
lock
cmp
xchg
xchg
callw
callw
mov
call
out
sub
fiadds
add
mov
jg
ds
sahf
and
lock
call
add
rcrb
cs
call
mov
lods
sub
xor
add
lahf
imul
call
call
or
xchg
ja
cs
or
pop
cmp
int3
call
call
aaa
mov
add
lahf
call
call
dec
add
je
add
xchg
pop
scas
pushf
out
negb
shr
gs
add
jp
pop
cmp
fisubrs
loopne
xor
add
call
call
call
and
das
and
add
sub
push
das
adc
and
add
add
sbb
add
dec
ja
aas
clc
out
xchg
sub
mov
mov
call
fwait
lahf
dec
test
pop
or
add
mov
mov
hlt
pushf
movsb
call
call
push
push
hlt
stos
cmp
call
call
ss
lahf
jmp
add
popa
add
into
test
ja
call
add
add
cmpsb
call
add
add
pop
call
push
call
xchg
mov
aas
cmp
bound
add
add
push
int
outsb
je
call
call
add
add
and
add
outsl
push
add
callw
dec
jmp
call
daa
call
mov
add
loop
or
add
pusha
add
fdivrl
xchg
cmc
jmp
jmp
repz
call
add
add
xor
add
add
daa
call
mov
add
add
pop
idivl
mov
add
xor
mov
or
add
call
imul
add
add
sbb
loopne
add
add
fs
add
jnp
call
dec
and
add
mov
add
push
add
sub
call
mov
jnp
mov
add
sbb
add
fs
add
jle
or
ret
call
test
mov
push
mov
call
call
add
add
cwtl
loope
lahf
mov
sub
rolb
mov
call
loopne
xchg
push
add
repnz
add
call
cwtl
clc
and
add
xchg
push
push
add
test
icebp
shr
sub
call
call
insb
rcl
jge
add
jo
add
ja
push
call
ror
and
add
jb
add
add
sar
out
es
popa
add
xor
add
outsb
sub
cmp
sti
icebp
stos
dec
xchg
in
fs
sahf
add
into
outsl
ljmp
add
add
shrb
adc
and
jne
inc
push
push
push
call
test
je
and
or
and
add
mov
add
mov
shr
push
gs
push
push
call
push
call
leave
ret
push
push
lea
cld
or
and
or
mov
add
add
xor
pop
pop
ret
jmp
jmp
nop
jmp
std
inc
call
cli
jmp
add
sahf
sbb
jmp
dec
pop
arpl
jne
call
call
loope
pop
inc
add
inc
call
gs
jecxz
push
mov
movsl
call
add
es
add
add
push
call
call
call
jns
push
xor
cmc
and
add
test
adc
add
call
sub
add
bound
add
call
rorb
clc
out
nop
mov
xor
test
mov
call
push
add
imul
stc
enter
add
add
sub
call
add
imul
pop
iret
lods
jb
add
jle
jge
xor
add
sub
popa
add
in
aad
add
dec
test
add
add
xor
add
out
inc
call
mov
cmp
xor
add
or
pop
mov
call
dec
out
movsb
call
addr16
cmp
mov
add
adc
ja
add
xchg
test
call
mov
and
add
add
mov
sub
add
dec
mov
jae
add
adc
add
add
inc
add
jle
mov
lret
scas
inc
add
shr
dec
sahf
sbb
mov
sub
call
pop
call
add
cmp
sub
add
xchg
mov
sarl
push
or
add
cmp
repnz
call
add
jge
call
inc
in
push
inc
add
pushf
and
inc
add
cmp
call
add
call
movsl
call
xchg
insl
movsl
call
into
sub
decl
adc
add
add
call
fisttpll
adc
add
pop
scas
lea
test
addr16
punpckhwd
call
mov
ds
add
cmpsl
mov
nop
int
call
xchg
cmc
push
cmpsb
call
add
aam
call
call
add
call
sub
add
ret
imul
cld
dec
call
add
loopne
call
push
push
add
or
xchg
cmp
call
add
xchg
in
mov
jne
jmp
add
add
daa
call
pop
into
into
iret
aam
es
dec
xchg
imul
sub
push
test
inc
call
push
call
add
add
call
dec
arpl
add
xchg
mov
dec
sub
and
add
add
add
popa
add
cmp
call
call
add
aas
call
call
lahf
adc
add
xor
add
sub
add
mov
add
fisttpl
push
xor
add
imul
imul
call
add
fs
add
xchg
ja
call
mov
sub
mov
add
insb
cmp
call
adc
add
out
mov
jo
add
call
sub
call
call
cmp
pop
scas
test
jmp
arpl
ret
ljmp
add
add
call
sub
inc
call
add
jg
add
or
add
sub
push
stos
jmp
arpl
jne
arpl
pop
inc
call
sub
call
add
call
push
mov
add
rcll
aad
mov
pop
cwtl
dec
inc
call
push
or
dec
lret
add
call
mov
add
js
mov
int3
push
mov
jmp
arpl
ficoml
add
sbb
shr
fimuls
jp
add
out
sahf
add
add
fmull
mov
add
mov
jbe
add
popa
add
shr
dec
xchg
jno
add
movsl
call
sub
add
add
call
adc
mov
ret
call
jb
push
ret
sti
push
jb
add
mov
add
add
push
arpl
add
sahf
out
jl
call
jmp
ds
push
enter
and
add
test
add
jae
add
pop
xchg
aad
add
add
add
add
ljmp
add
add
add
aaa
ss
xor
push
add
lret
inc
call
add
fs
gs
add
cmp
rep
jmp
arpl
xchg
xor
xchg
sahf
jle
insl
push
out
push
push
lret
push
add
aas
aam
fiadds
add
in
lcall
push
add
nop
mov
testl
mov
add
dec
in
or
sub
outsl
arpl
xchg
lcall
aam
pop
lret
adc
add
jb
add
call
call
inc
add
lcall
mov
push
call
add
or
add
pop
call
scas
xchg
adc
push
in
cmpsb
call
call
push
pusha
jmp
ljmp
add
callw
pop
mov
call
and
add
add
call
aad
repnz
add
mov
jb
add
add
idivb
jns
in
lcall
aad
lret
test
call
jns
call
call
jno
add
mov
fisubrl
xchg
shr
call
faddp
call
std
sbb
add
pushf
sub
mov
call
call
mov
sbb
add
push
test
clc
jge
add
sub
add
mov
out
jo
add
adc
add
add
add
sub
fstpl
cmp
push
in
shr
call
dec
js
test
sub
push
add
sub
ljmp
lret
add
xlat
imul
scas
scas
mov
add
and
add
hlt
rcrl
adc
shr
ficomps
add
call
or
inc
add
sbb
mov
mov
sub
mov
add
inc
add
lods
insl
mov
call
movsb
call
add
xchg
call
add
dec
lods
stc
repnz
pop
lret
xchg
sbb
movsl
call
call
call
push
call
mov
jne
pop
sahf
nopl
add
and
add
lret
and
add
add
add
add
cld
aas
cmp
pop
jg
scas
jmp
jnp
scas
jmp
or
sub
mov
dec
sbb
add
scas
popa
add
inc
add
inc
call
cmpsl
call
mov
jmp
arpl
sub
add
sbb
add
inc
call
mov
stc
clc
shr
call
push
call
mov
icebp
fs
add
jp
or
call
add
jge
mov
call
scas
or
adc
add
lahf
cmpsl
call
add
inc
add
mov
add
aaa
fs
dec
sub
mov
pop
mov
cmc
and
add
setp
add
pop
int3
loop
mov
adc
sbb
test
sbb
or
jns
pusha
push
ret
arpl
sbb
int
mov
jmp
pop
mov
add
inc
add
popa
add
jp
add
sbb
add
call
call
lods
pop
call
sbb
call
fnsave
pop
lock
inc
add
fisubrl
sti
sbb
push
call
call
cmc
lods
out
callw
inc
call
call
pop
inc
call
add
push
loope
es
add
lcall
mov
call
adc
add
sub
jle
enter
movsb
call
add
movsb
call
add
jmp
mov
push
add
fwait
adc
add
pop
loop
and
add
test
call
ds
add
add
xchg
xchg
mov
call
dec
fwait
shr
add
test
inc
add
xchg
jnp
sub
mov
dec
cwtl
call
daa
call
insl
jnp
stos
aas
repz
call
call
call
push
call
sub
add
push
lret
jne
jmp
cmpsl
test
or
dec
sbb
in
add
aaa
fistpll
push
ds
jno
add
call
mov
add
inc
ret
call
mov
pop
xchg
or
jle
mov
iret
sbb
leave
dec
push
add
or
call
add
push
daa
call
jo
add
jmp
jmp
arpl
arpl
add
add
cs
inc
add
scas
cmpsl
call
add
jns
fdivr
mov
mov
icebp
cmp
add
sti
or
call
dec
fwait
adc
add
stos
ret
add
mov
movsl
call
add
sbb
add
rcr
test
cmp
add
stos
rcrl
cmpsb
call
call
jmp
arpl
filds
add
cmp
add
and
add
sub
xor
add
mov
mov
cmc
sub
add
stc
mov
add
call
mov
xchg
sbb
add
stos
push
add
popf
icebp
ja
push
add
mov
add
jmp
into
stos
dec
dec
inc
call
add
inc
add
sub
lahf
pop
sub
call
mov
call
xchg
sbb
call
call
xchg
cmp
xchg
insb
or
call
add
dec
iret
cmpsl
call
add
movsl
call
sbb
movsb
call
call
test
add
add
push
jmp
cmc
cmpsl
xchg
sti
or
jl
add
lock
rorl
add
pop
jno
add
add
inc
call
sbb
out
cltd
js
call
shr
call
add
add
cli
add
pop
add
add
aad
leave
lock
clc
callw
jle
call
sbb
lret
add
test
outsl
daa
pusha
add
shr
add
xchg
cmc
dec
xor
call
jmp
mov
sub
xor
lret
pop
test
jge
and
push
popa
add
and
pop
call
inc
call
or
movsb
mov
add
dec
arpl
imul
push
ret
jmp
adc
aaa
xor
xchg
int
lods
dec
push
sub
sub
es
lahf
fsts
bound
add
call
pusha
add
iret
rolb
add
push
add
shr
call
in
in
add
mov
sub
fld
call
mov
lods
add
add
call
add
add
cmp
add
pop
sub
mov
dec
test
decl
aad
add
dec
arpl
aad
jle
call
lods
mov
add
cmpsb
call
xchg
fistl
add
fbstp
add
sub
std
sub
add
and
and
add
test
call
inc
add
and
add
add
push
push
add
gs
inc
add
mov
call
call
call
call
xlat
dec
push
sbb
add
mov
pop
mov
and
add
movsl
call
call
add
add
xlat
fistps
add
test
enter
shr
inc
add
lods
arpl
xchg
cmp
lea
xchg
test
call
movsl
call
mov
add
push
xchg
arpl
inc
add
stos
arpl
add
xor
push
ret
pushf
imul
mov
or
testl
test
repnz
dec
fidivrs
mov
stos
jg
imul
sbb
call
add
mov
pop
cmpsb
call
push
add
dec
movsl
call
std
outsl
xlat
scas
loope
add
add
xor
add
shr
call
scas
xchg
cmp
pushf
cmp
call
call
pop
mov
pop
cmpsl
call
add
ljmp
dec
jmp
pop
xor
xor
lock
loope
outsb
or
inc
call
inc
add
push
inc
add
popa
add
inc
add
sub
into
cmp
jmp
push
pop
lods
xchg
arpl
lods
in
jbe
sub
jmp
ret
and
adc
call
call
sub
mov
adc
add
js
divb
and
add
call
ja
call
add
call
test
out
push
pop
cmp
call
or
xchg
out
push
push
cmpsl
call
call
shr
mov
roll
call
inc
call
jb
add
std
xlat
arpl
add
movsb
call
xor
cs
add
jp
arpl
in
mov
insb
inc
insb
insb
jmp
arpl
sbb
add
dec
push
add
loop
mov
add
pop
repz
clc
or
mov
icebp
pop
clc
shrl
addr16
shr
and
add
cmc
arpl
add
mov
call
add
add
call
inc
add
outsb
insl
sub
and
pushf
lods
inc
add
mov
call
mov
outsb
ficompl
push
sub
out
aam
add
inc
add
push
add
aas
adc
add
add
call
out
sbb
inc
add
pop
cmp
add
lcall
call
call
mov
adc
add
dec
sbb
call
jb
add
pop
xchg
shr
pusha
add
push
add
adc
incl
arpl
scas
into
repnz
and
add
fs
int3
or
call
lahf
add
mulb
arpl
add
shl
jmp
pop
adc
and
add
cld
jbe
test
mov
call
mov
in
or
add
call
add
inc
add
push
add
imulb
call
in
imul
push
add
lret
pop
mov
call
add
inc
call
call
add
mov
mov
call
call
pop
pop
dec
sbb
call
rcrb
inc
call
adc
add
out
ds
jo
add
call
call
js
xchg
inc
call
add
add
jbe
call
call
cmp
add
sbb
pop
push
nop
dec
xchg
jp
mov
in
lods
cmp
clc
addr16
push
call
xchg
int3
lahf
or
xchg
mov
mov
xor
add
sub
call
dec
shr
leave
jecxz
dec
hlt
fwait
mov
call
call
sbb
call
add
testb
cmp
mov
call
add
push
sbb
call
mov
jmp
sub
call
pop
call
cmc
dec
lcall
insb
pop
fs
icebp
icebp
inc
call
call
inc
add
pop
mov
add
daa
dec
pop
sbb
cld
sub
xor
pop
movsl
call
add
and
add
add
loope
mov
aas
mov
add
mov
add
mov
add
pop
mov
call
lea
and
aaa
fiadds
add
add
add
shr
mov
mov
lcall
add
test
icebp
ret
call
jbe
sub
lock
pop
call
je
call
xor
add
shr
movsb
call
aam
call
jns
jg
add
xchg
xchg
punpckhdq
push
add
jmp
call
sub
xor
lea
ucomiss
add
nop
xor
sub
and
add
add
add
and
add
call
call
cld
in
mov
call
mov
jge
aam
add
xor
add
add
js
add
xor
call
xor
add
sub
call
push
add
mov
inc
add
inc
call
in
nop
in
cwtl
mov
aad
add
jne
cmc
mov
pop
xor
call
call
adc
add
std
outsl
add
arpl
call
cmc
or
call
push
add
jo
add
call
inc
add
push
add
lea
add
mov
push
ret
jne
jne
stos
pop
cwtl
fsubl
add
push
int
add
pusha
add
xor
add
add
and
add
call
add
sub
add
jmp
sub
gs
jmp
or
lret
mov
add
call
and
add
or
inc
call
bound
add
add
mov
add
dec
cmp
sub
add
xlat
sub
fsubr
add
add
call
sti
push
cmp
mov
add
push
fsubl
add
and
add
in
or
cmp
sbb
call
cmp
aam
cmp
push
add
dec
loop
add
add
leave
adc
add
je
jae
add
rcll
add
aad
sub
jae
add
fld
call
add
call
mov
adc
add
roll
mov
inc
add
ljmp
test
cld
sub
add
fidivl
inc
call
cmp
inc
add
cmp
sbb
shr
mov
xor
add
mov
ja
icebp
je
lahf
arpl
add
push
add
add
out
gs
xadd
shlb
mov
push
add
das
mov
loop
aad
push
add
sub
call
int
test
and
dec
icebp
jnp
fs
negb
xchg
insl
in
leave
xchg
sub
lock
sub
mov
sbb
arpl
add
dec
jp
jns
cmp
xchg
in
sub
fwait
insl
in
jbe
call
call
dec
int
adc
add
negb
sbb
in
mov
add
sub
add
cmpsl
cmp
sbb
sub
add
xchg
dec
or
fbld
pop
jne
jo
add
ljmp
add
inc
jmp
mov
arpl
add
mov
add
and
add
add
add
jmp
xor
aaa
push
jne
icebp
dec
int
cltd
sbb
mov
add
mov
ljmp
gs
sub
add
cmpsb
call
call
add
imul
add
lcall
call
cmp
xchg
add
add
add
cld
jp
adc
cmp
int
inc
call
jne
fildl
add
call
xchg
push
repnz
ja
add
add
call
call
add
pop
push
pop
insb
out
outsl
xchg
cmp
fists
jmp
sbb
and
rcrb
call
add
in
pop
jmp
insl
movzwl
jle
add
shll
sub
or
push
add
ror
stc
pushf
dec
add
xchg
jae
add
push
xchg
daa
add
add
and
add
bound
add
aam
xchg
dec
jge
inc
add
incl
sti
jmp
test
lods
or
loop
loop
mov
mov
call
addr16
shll
add
lea
inc
call
js
call
call
call
in
mov
mov
add
icebp
adc
dec
adc
call
add
lods
jmp
xchg
sub
push
add
xor
arpl
int3
lahf
fsub
call
jmp
fdivrs
pop
or
or
call
fisubs
shr
dec
mov
add
outsb
mov
call
mov
lret
testl
mov
mov
sbb
mov
add
mov
add
fmuls
add
mov
adc
add
clc
push
popf
adc
push
add
in
shr
call
adc
add
pop
xchg
ss
pop
push
call
call
dec
gs
call
add
jmp
ret
pop
outsl
fsts
sbb
cmp
call
sbb
jmp
call
cmp
loop
scas
jb
add
mov
add
call
pop
arpl
add
sbb
out
jmp
dec
pop
fldenv
out
nop
mov
add
movsl
call
call
mov
jmp
dec
arpl
call
addr16
fscale
loope
add
xchg
aam
js
icebp
push
inc
add
arpl
and
add
jmp
call
outsl
aaa
imul
or
sub
call
add
outsl
push
xchg
rol
call
cmp
jg
mov
mov
xor
add
add
dec
mov
mov
or
dec
es
mov
pop
add
sar
clc
sbb
sbb
adc
add
or
xchg
add
shr
inc
call
xchg
fnsave
lcall
add
push
pop
pop
arpl
popf
push
dec
jmp
push
arpl
mov
xchg
es
adc
add
call
jg
call
cld
push
jne
mov
sbb
sbb
add
add
call
jnp
add
dec
push
jne
jmp
push
add
add
add
test
cmp
sbb
ljmp
call
mov
add
call
cmp
add
pop
adc
add
lods
call
jmp
arpl
jp
pop
stos
xchg
stos
test
das
out
inc
call
cltd
mov
call
loope
add
add
stos
movsb
call
or
xchg
daa
dec
in
ret
mov
call
xor
add
add
jmp
sub
sbb
call
add
add
call
push
call
fs
sbb
out
pushl
add
adc
add
call
add
aaa
sbb
icebp
jmp
ret
arpl
aam
sub
inc
call
jmp
push
cmp
arpl
ljmp
mov
add
test
call
push
ret
cmc
add
xchg
mov
mov
xor
add
call
or
jo
add
call
mov
xlat
shr
xchg
int3
sbb
lods
or
call
jmp
dec
and
cmp
sbb
call
ja
mov
dec
jnp
hlt
sub
add
fimull
fs
dec
mov
and
add
adc
add
add
mov
or
iret
testb
cs
call
fs
pop
mov
call
lock
add
mov
repz
ret
mov
arpl
call
andl
add
in
into
or
dec
js
call
loope
call
inc
call
add
push
call
call
jbe
lahf
bt
cs
xchg
jmp
pop
jbe
sbb
call
jmp
arpl
pop
xor
push
bound
add
in
push
fimuls
cmp
pop
jge
nop
sub
imul
call
call
add
jmp
push
insl
sbb
sbb
mov
js
leave
xchg
lret
mov
call
mov
jb
add
add
push
inc
add
push
add
arpl
add
mov
sbb
call
add
add
add
mov
call
add
test
mov
ret
call
mov
mov
loope
add
jmp
adc
add
arpl
add
jg
iret
mov
scas
inc
add
arpl
fbld
inc
add
xchg
sbb
fwait
insb
es
xor
call
jmp
sti
sbb
ljmp
add
or
add
fsubrs
call
dec
je
sub
add
cmp
call
and
add
inc
add
add
dec
push
add
sti
cmp
add
mov
call
enter
fs
add
adc
add
and
add
cmp
add
call
pop
call
call
shr
call
call
mov
mov
fildll
mov
cmp
ret
inc
and
mov
sub
add
jmp
and
add
repz
call
or
sbb
fcmovbe
and
ret
out
test
xor
add
repnz
pop
mov
call
callw
call
inc
call
add
xor
add
add
sbb
popa
add
xor
add
pushf
pop
or
mov
mov
sub
push
mov
rolb
addl
js
cwtl
outsl
daa
call
xchg
cli
fwait
daa
call
add
push
ret
lea
add
add
mov
int
xchg
cs
bound
add
in
mov
sub
repnz
ret
add
mov
inc
pop
add
jmp
arpl
call
adc
jge
pop
mov
shr
push
jmp
push
arpl
cmp
inc
sarb
pop
das
xchg
test
cmpsb
call
add
call
das
lahf
sub
fidivrs
add
add
outsb
leave
cld
cmp
test
fildl
sbb
lcall
scas
movsl
call
jg
or
mov
cmpsb
call
cmpsb
call
jge
mov
cmpsl
call
add
mov
arpl
add
sub
call
add
in
add
cs
mov
mov
jmp
ret
pop
xor
test
fiaddl
dec
mov
add
or
dec
push
adc
ror
jae
add
call
sbb
pop
pop
ss
cltd
sbb
jno
add
gs
or
jmp
loope
xchg
movsb
call
add
mov
and
add
call
add
sbb
add
call
jmp
outsl
push
dec
arpl
inc
call
call
add
imul
sub
in
inc
add
xchg
call
cmp
ss
xor
add
ret
call
push
int3
xor
add
cmp
call
call
xchg
hlt
daa
call
in
imul
gs
cmp
mov
lea
lods
sub
call
loopne
mov
add
arpl
add
out
lahf
mov
nop
xchg
mov
inc
call
and
add
ror
pop
sbb
xchg
fs
fimuls
call
loop
test
sub
call
jae
add
call
cmp
add
call
add
pop
mov
call
add
sbb
or
add
outsl
arpl
sbb
jmp
push
or
arpl
dec
or
inc
call
int3
jmp
call
adc
add
rolb
mov
add
mov
sub
bnd
call
add
add
fucomi
mov
mov
call
add
push
call
call
dec
fildl
add
call
add
adc
add
sbb
jbe
push
add
dec
fsub
call
addr16
xchg
add
add
add
jo
add
pop
pushf
decl
test
dec
add
mov
arpl
add
mov
jnp
mov
call
enter
add
mov
dec
arpl
in
sub
add
aam
jg
push
mov
sub
cwtl
jecxz
pop
sahf
mov
pushf
mov
xchg
or
lret
mov
call
add
xlat
nop
adc
add
or
push
add
addr16
call
es
fwait
je
call
inc
call
sbb
call
bound
add
inc
add
mov
iret
xor
add
call
call
repnz
add
jns
push
dec
lea
jnp
call
mov
call
mov
push
lret
push
ret
sub
add
out
stos
testl
shr
into
imul
jle
call
ror
adc
add
or
stc
push
push
jmp
and
push
daa
daa
mov
add
scas
leave
call
add
mov
mov
mov
dec
addr16
pushf
movsb
call
add
and
add
jb
add
pop
in
das
or
add
add
add
inc
call
sbb
mov
callw
jne
call
jne
push
ret
arpl
add
mov
add
mov
mov
call
pusha
add
mov
add
mov
call
add
cmp
add
add
add
add
fildll
call
movsb
call
add
mov
stos
or
stos
mov
sub
dec
shr
pop
inc
add
repnz
add
add
inc
add
out
bound
add
mov
call
call
add
add
and
add
or
bound
add
add
cli
jb
add
and
cmpsl
call
call
add
add
call
push
jmp
dec
dec
dec
sti
orb
and
xor
add
add
call
jb
add
sub
scas
cs
dec
xchg
push
add
insb
outsl
adc
add
call
scas
je
add
faddl
ret
ja
fsubs
add
insl
mov
add
fcoms
push
loop
out
popf
lret
cmp
or
cmp
call
call
jae
add
call
daa
call
jo
add
jbe
paddusb
call
fs
add
inc
call
add
add
add
add
call
daa
call
xchg
bound
add
add
add
jmp
call
test
cmp
add
sbb
add
inc
call
jg
cmpsl
call
jae
add
xchg
xchg
xchg
test
add
test
mov
pop
inc
add
not
inc
call
leave
jmp
lods
xor
test
ret
call
and
add
add
lods
pop
imul
jmp
aam
arpl
push
decl
push
ret
jne
enter
sbb
test
sub
sbb
test
cmp
add
movsb
call
out
adc
add
call
add
push
std
cmpsb
call
xchg
movsl
call
and
add
daa
pop
inc
fs
popf
push
add
insl
mov
loopne
sub
and
adc
add
call
push
sbb
xor
add
add
cmp
pop
xor
push
push
cmp
hlt
sahf
push
add
inc
add
fs
call
add
shr
int
add
mov
add
mov
imul
add
pop
fwait
jae
add
call
call
call
or
out
pop
scas
inc
call
sub
call
mov
sub
call
ss
insb
add
fimull
push
push
gs
ret
ret
and
add
fnsave
add
mov
pop
sub
call
inc
add
fcompl
stos
xchg
loopne
push
sub
jl
and
add
add
movsb
call
push
push
jmp
ds
insb
filds
add
xor
call
dec
ret
call
push
jle
call
mov
es
fisttpl
iret
dec
adc
add
call
in
pop
call
mov
shr
pop
cwtl
xchg
mov
dec
cwtl
pushf
lods
push
ret
test
out
xchg
cmp
aaa
lcall
adc
call
call
call
add
sbb
jmp
add
inc
dec
arpl
call
call
sub
je
add
lods
mov
call
dec
mov
add
add
fcom
cmp
xchg
out
mov
mov
std
cmc
lcall
xchg
pop
ret
call
das
fisubl
pusha
add
add
add
mov
push
push
ret
test
into
dec
xchg
push
jg
cmc
test
xchg
daa
call
or
int3
push
add
popf
fwait
xor
add
add
xor
fneni(8087
call
and
and
add
fwait
cmp
call
jo
add
call
sub
loop
cmc
push
and
add
add
insb
lods
sarl
add
call
add
hlt
lods
mov
call
add
lcall
xchg
fadds
dec
or
call
sub
sbb
mov
popa
jmp
inc
cmp
pop
mov
cmp
jmp
cmpsl
daa
ret
test
jl
fistpl
add
aas
movsb
call
icebp
decl
add
push
insb
call
add
add
stos
adc
add
hlt
daa
call
push
ret
arpl
lret
add
sbb
dec
imul
bound
add
add
mov
push
mov
xor
add
rcr
sbb
call
call
call
add
xchg
enter
mov
pop
imul
call
push
ret
cmpsl
aam
inc
arpl
jge
or
add
add
inc
call
ja
popa
add
sub
and
add
add
mov
lret
pusha
add
ljmp
call
add
cld
or
in
mov
mov
hlt
decl
arpl
sub
icebp
mov
popa
add
cmp
js
movsl
call
outsb
add
add
or
cmp
or
jmp
cmp
fstps
xchg
imul
jp
sahf
outsb
jno
add
enter
fstpl
loopne
enter
xor
add
daa
call
add
push
gs
mulb
cmp
jl
push
push
mov
sbb
add
add
cmp
int3
xor
add
mov
fnsave
mov
sub
push
add
mov
stos
jbe
clc
jno
add
or
pop
sbb
add
xchg
gs
lods
push
in
pop
mov
scas
roll
add
insl
std
jmp
call
pop
mov
das
popa
add
pop
es
push
xor
push
ret
adc
into
outsl
sbb
mull
add
add
adc
add
call
call
jmp
out
and
sub
cmp
mov
or
add
mov
call
in
jmp
aam
mov
cli
cmp
cmp
push
add
xchg
pop
mov
call
add
add
add
dec
dec
inc
add
pop
call
sub
mov
mov
call
xchg
xchg
xor
add
inc
call
pusha
add
and
test
adc
add
add
es
in
mov
pop
cmc
push
dec
cltd
roll
mov
sub
call
aam
repz
or
clc
jne
jne
call
or
aas
cmp
sbb
mov
call
pop
push
mov
arpl
outsb
and
add
arpl
add
add
call
jmp
mov
adc
add
add
sub
test
inc
add
adc
add
bound
add
add
imul
call
enter
push
call
vcvtdq2ps
sbb
add
repz
add
push
call
add
vdivps
repz
sarl
decl
push
and
sti
shr
call
xor
add
pop
adc
call
callw
call
mov
add
jmp
test
in
dec
inc
add
out
push
stos
jmp
cmpsl
sub
shr
rol
call
add
adc
sub
xchg
nop
dec
cmp
call
add
add
add
aas
js
mull
add
push
add
push
dec
mov
xor
add
inc
call
in
scas
into
and
add
rorl
call
daa
call
add
call
add
xor
add
call
iret
jle
rol
call
out
pop
push
call
adc
add
fnsave
add
sub
add
pushf
or
aam
call
int3
pop
mov
loope
cmp
or
add
sbb
mov
fadd
call
call
or
add
call
mulb
cmp
add
call
pop
call
call
add
call
call
adc
or
test
lret
mov
call
inc
add
mov
call
mov
mov
loopne
add
cld
push
add
mov
inc
add
dec
push
aaa
xchg
cmp
pop
hlt
imul
es
outsb
xchg
cld
lock
cmp
icebp
int3
adc
add
mov
mov
add
add
or
add
add
daa
call
jmp
jp
xchg
shl
pop
sbb
add
add
dec
mov
cmc
sbb
in
jno
add
call
pop
lods
and
add
jp
add
popa
add
jnp
mov
adc
xor
jmp
jp
dec
push
daa
pop
filds
call
dec
and
cmp
cmpsl
call
std
jmp
xchg
add
mov
call
adc
add
add
push
jnp
call
call
xor
add
dec
shr
dec
adc
add
xor
jmp
mov
jle
call
add
out
dec
ss
gs
int
xor
add
sub
call
push
jmp
adc
add
and
sti
pop
inc
call
test
js
mov
call
xor
call
call
stc
and
icebp
mov
call
shr
shrl
add
dec
icebp
add
add
add
lret
jmp
add
add
es
add
cltd
pop
mov
cltd
aam
add
test
sti
sub
dec
mov
call
cwtl
inc
add
lods
mov
push
pop
call
call
lods
inc
call
add
ds
call
add
scas
sbb
cmp
add
call
mov
call
fidivl
sub
add
jge
je
dec
mov
stos
sub
cmpsb
call
ror
shr
dec
pop
test
mov
add
into
mov
call
sub
push
pop
mov
call
lahf
idivl
call
cwtl
mov
or
call
fstl
stos
pop
repnz
pop
push
push
add
js,pn
inc
call
sub
sahf
cmp
push
call
iret
inc
add
and
add
outsl
daa
call
add
lea
add
inc
add
xor
add
add
daa
call
mov
int
call
in
xor
add
mov
add
adc
pop
mov
mov
add
adc
add
call
sub
jmp
arpl
mov
inc
add
push
pop
shrb
loopne
jmp
aaa
arpl
daa
fdivrl
inc
call
push
mov
add
dec
scas
cli
lret
add
push
add
lods
pop
repnz
sahf
inc
call
lock
add
add
enter
call
push
lock
add
add
add
or
mov
sbb
in
jmp
inc
and
mov
mov
add
sahf
dec
mov
add
call
xor
fs
call
push
xchg
xor
add
add
imul
add
sbb
or
call
inc
add
xchg
dec
clc
mov
add
ffreep
call
call
call
lahf
xor
jb
add
int3
push
jns
call
cwtl
movsl
call
add
push
xor
add
add
add
adc
add
mov
add
add
add
add
icebp
mov
mov
call
test
sub
cltd
or
call
sub
daa
call
mov
jmp
add
ret
call
cmpsl
call
call
and
add
and
add
add
mov
inc
call
sub
call
call
aaa
int
add
dec
dec
pandn
enter
add
add
pop
pop
in
cmp
add
add
jle
push
mov
add
popa
add
int
call
test
es
add
inc
call
and
add
call
add
rcl
inc
call
cltd
cmc
mov
cmpsb
call
pop
and
add
nop
aad
fxch
cmp
add
ds
lods
addr16
add
shr
mov
jbe
add
stos
mov
inc
call
dec
inc
add
jbe
add
xchg
adc
add
mov
jae
add
test
mov
xchg
fwait
mov
je
jmp
ljmp
add
cmp
in
call
aam
jmp
fs
xor
lahf
push
add
lea
add
add
add
call
insb
scas
shll
js
or
call
call
cmp
add
mov
add
add
lahf
stc
callw
rcl
inc
add
test
enter
mov
jns
call
lods
js
add
sub
mov
call
add
pop
test
fs
add
sub
pop
addr16
mov
add
add
mov
xchg
jmp
das
jbe
add
test
mov
call
cmc
in
xchg
bound
add
call
daa
sbb
add
pushf
or
arpl
mov
ss
fdivrs
sbb
jge
cwtl
mov
jae
add
xor
add
push
add
loopne
scas
xlat
cmp
sub
adc
mov
ret
or
or
call
sub
call
add
call
call
call
dec
ds
mov
cmp
call
inc
add
pop
jle
aad
call
add
scas
outsb
test
mov
push
gs
ret
adc
pop
jmp
pop
mov
rorl
jmp
xchg
mov
add
clc
into
push
test
dec
xchg
std
mov
aam
call
scas
pushf
call
inc
add
ljmp
stos
sbb
sbb
cmp
lret
in
and
mov
push
add
or
push
add
inc
add
and
add
aad
pop
dec
jg
mov
inc
add
out
xor
add
call
mov
movsb
call
call
call
call
shlb
add
in
add
fistpll
push
add
and
adc
inc
add
ds
sub
add
loop,pn
in
icebp
mov
inc
add
sub
movsl
call
sub
jg
xlat
cld
inc
add
push
lret
ds
inc
add
add
add
in
aad
xor
add
mov
aaa
popl
add
sub
sub
addr16
add
ss
call
push
call
cld
imul
shll
add
add
leave
mov
push
adc
add
mov
pop
lcall
add
call
ret
add
test
int3
xor
in
sbb
call
divb
call
cmp
add
outsb
sub
arpl
add
add
pop
mov
sub
call
call
pop
out
ret
arpl
add
es
pop
jl
call
add
call
add
mov
add
call
or
add
leave
pop
xor
add
add
arpl
add
pop
call
xchg
inc
add
sbb
and
add
dec
mov
inc
add
sub
cmp
call
inc
call
pusha
add
inc
call
call
call
fwait
mulb
call
add
xchg
pop
rclb
add
cmp
insl
cmpsb
call
int
call
jl
call
mov
xchg
lret
push
icebp
and
add
das
cmp
push
push
call
add
sub
call
int
lock
fwait
mov
fnstsw
mov
push
mov
cltd
ror
mov
add
aam
arpl
call
sub
lods
mov
call
sub
add
lock
jo
add
out
cmpsl
call
call
call
cmp
stos
xchg
add
mov
call
mov
jae
add
push
add
insl
mov
add
call
add
add
jae
add
mov
stos
fs
mov
sub
cmp
lods
aas
aad
adc
add
add
add
add
call
call
ds
into
jnp
nop
lea
mov
jns
aaa
xlat
sbb
call
addr16
add
inc
call
or
pop
adc
add
add
daa
call
insb
mov
sbb
add
mov
cltd
pop
cmp
call
xchg
mov
pushf
and
lods
popf
xor
add
push
add
jp
push
cmc
mov
add
jb
add
aas
testb
mov
call
jo
add
call
push
jmp
sti
sbb
push
mov
call
adc
jns
mov
push
js
lahf
cmp
mov
or
inc
call
mov
call
xchg
dec
push
add
pop
arpl
mov
lods
cmp
mov
mov
fildl
add
sub
add
lods
jp
xor
add
add
mov
add
push
or
xchg
and
add
aam
cmp
call
sahf
cmp
call
scas
outsl
inc
call
add
add
add
call
imul
push
ret
arpl
imul
mov
call
inc
add
shr
test
pop
call
add
mov
fwait
clc
scas
shr
mov
leave
sub
callw
push
push
cltd
shl
pop
or
add
hlt
movsl
call
mov
or
add
and
add
jle
iret
cwtl
test
fucomp
gs
sub
jmp
call
sahf
mov
call
es
lods
push
scas
mov
call
add
mov
jae
add
pop
lret
popf
ret
call
xchg
addr16
add
push
je
outsb
clc
out
cmp
lock
jae
add
call
add
xor
loopne
nop
jbe
call
iret
adc
add
mov
jmp
cmp
adc
add
call
mov
outsl
dec
stos
into
xchg
ss
cmp
dec
mov
and
movb
add
add
ss
call
mov
es
call
call
dec
movsb
call
sbb
divl
add
addr16
add
add
add
sub
cltd
mov
mov
ss
test
mov
dec
lods
xchg
arpl
add
inc
call
jae
add
add
into
pop
jle
call
call
add
add
jmp
fstps
aaa
push
xchg
and
add
add
push
add
aam
popf
and
add
fnstenv
add
add
inc
call
push
cwtl
cmp
out
icebp
bound
add
cmp
imul
add
ds
adc
shl
call
sub
lret
jb
add
shll
sbb
pop
mov
and
call
mov
int3
jmp
daa
inc
or
pop
add
pop
fst
add
add
xor
add
cmp
sbb
mov
call
dec
pop
call
add
jle
push
mov
add
mov
mov
call
add
aad
call
cmp
call
notl
in
xchg
enter
test
gs
addr16
outsl
test
mov
enter
push
imul
xchg
rcl
popf
jb
add
shlb
scas
inc
call
mov
aam
sarl
lea
add
pop
xor
add
mov
call
jns
jmp
xchg
aam
push
js
add
mov
out
jl
jne
add
in
cmp
and
int3
xlat
xchg
mov
or
call
fstl
sub
inc
jmp
fs
into
ds
pusha
add
jmp
mov
add
add
sub
add
add
xor
add
sbb
xor
add
jecxz
or
fiaddl
pop
scas
je
mov
add
dec
fisttpl
call
call
or
call
mov
call
add
sub
call
sub
loopne
imul
add
cwtl
inc
add
dec
sbb
add
cmp
pop
push
mov
sbb
inc
call
jg
or
call
loopne
xchg
insl
scas
in
mov
mov
add
mov
icebp
push
add
add
add
lcall
push
call
jecxz
push
add
dec
sahf
pop
sbb
call
jo
add
nop
shr
call
xchg
mov
call
imul
sub
push
and
add
fistps
xchg
outsb
in
out
loope
xchg
rolb
add
add
mov
sbb
in
ljmp
mov
imul
add
add
aam
call
or
pop
mov
add
pop
ret
call
inc
sub
iret
sub
add
xor
add
frstor
sub
add
dec
aam
fists
jge
jmp
call
add
sub
add
insb
mov
jns
ret
call
loopne
iret
xchg
es
call
fists
jb
add
iret
push
add
pop
jns,pt
call
add
call
pop
xor
add
inc
call
sub
fnstenv
add
dec
mov
pushf
mov
fistps
icebp
cld
lods
aam
add
xor
add
cmp
jnp
sbb
fdivrs
loop
notl
sub
xchg
not
mov
mov
add
popf
arpl
add
cmp
add
insl
mov
test
int
sbb
into
add
add
add
call
push
ret
aaa
xor
inc
call
aas
inc
add
fneni(8087
call
mov
call
mov
mov
jmp
adc
call
call
mov
add
in
jmp
add
add
add
sub
add
into
outsb
add
gs
add
and
add
add
add
add
fs
sub
mov
dec
into
into
push
cmc
sub
call
xchg
cmpsl
call
add
addr16
or
push
push
and
add
inc
call
iret
repnz
add
add
jmp
adc
shr
mov
cmpsl
call
mov
add
add
add
popa
jmp
pop
arpl
push
jg
add
pop
dec
inc
add
xor
add
sbb
push
add
xor
mov
push
ret
ret
mov
sub
add
daa
call
and
xor
add
outsl
and
add
insl
sbb
lods
cli
nop
fldenv
loope
in
popa
add
push
add
repz
callw
mov
call
jg
call
add
add
add
xor
dec
cmp
mov
jmp
xchg
mov
repnz
cmp
shlb
add
add
es
mov
jmp
fildll
add
push
ret
inc
xchg
push
mov
add
out
dec
xor
dec
nop
xchg
dec
test
loop
pop
sbb
dec
adc
add
call
push
jmp
mov
jp
or
cmp
call
call
and
add
add
call
add
nop
js
sbb
in
roll
mov
add
and
popf
inc
add
pop
cmp
xor
add
cmp
add
sbb
inc
call
into
and
add
add
or
cmpsl
call
call
call
jmp
test
add
xor
add
call
or
push
mov
inc
add
dec
lods
xchg
jge
add
mov
sbb
add
add
call
xchg
fdivrs
jbe
add
inc
call
dec
insl
xor
add
inc
add
out
add
rorb
push
add
mov
jmp
call
push
outsb
dec
push
add
inc
call
add
push
jmp
jmp
out
inc
cmpsb
call
call
pusha
jmp
inc
aam
arpl
aaa
sbb
call
jmp
cmp
dec
jp
call
std
lock
call
ljmp
dec
add
movsl
call
aas
sub
call
xlat
sbb
enter
xor
add
call
xchg
popf
jae
add
call
imul
call
cwtl
ds
sbb
add
dec
add
pop
pop
mov
addr16
xchg
lods
stos
and
add
outsl
push
rolb
adc
add
call
add
add
mov
add
arpl
ds
arpl
lcall
jp
jp
add
push
and
aaa
shll
add
sub
sarl
aad
add
fnstcw
mov
outsb
sbb
out
ljmp
call
add
add
xchg
leave
iret
push
int3
test
xchg
sub
or
shl
pushf
out
or
add
xchg
or
fiaddl
add
lea
pop
or
mov
add
aam
xor
add
sti
jecxz
into
lods
aam
sub
and
test
xor
add
add
jp
call
mulb
add
sbb
adc
repnz
pushl
arpl
dec
lret
decl
test
dec
add
push
and
xchg
sub
shr
xor
add
arpl
imul
pop
push
jle
cli
jl
mov
mov
pusha
add
call
add
out
daa
call
call
stos
stos
pop
lock
out
adc
add
push
add
cmpsl
call
rcr
mov
stos
or
call
test
cmp
call
call
jl
inc
add
daa
mov
cmp
push
add
jp
call
add
inc
add
call
fisubrs
sub
lea
add
xor
add
sub
xchg
movsb
call
call
call
inc
call
call
cmp
ficoml
call
pop
add
add
sbb
push
ret
out
mov
scas
fcoml
fistps
call
pop
mov
add
out
sub
add
pushf
dec
imull
or
add
enter
cltd
loop
jns
jmp
mov
call
dec
xor
add
mov
call
push
jnp
add
arpl
or
es
incl
jmp
cmc
add
rcll
add
cli
jecxz
bound
add
cmc
pop
mov
xchg
ret
pop
jmp
arpl
xor
jnp
xor
add
lods
bound
add
pop
imul
cmpsb
push
add
jmp
arpl
std
sub
add
insl
or
add
fidivrl
aam
call
call
adc
add
cli
or
daa
call
sbb
popf
addr16
loopne
lods
cwtl
mov
push
jmp
enter
mov
cmp
testl
je
call
or
pop
mov
das
rorb
pusha
add
sar
fcmovne
in
xchg
idivl
fisubrl
sbb
call
sub
call
insl
cmp
call
jb
add
or
add
inc
add
pop
call
mov
pop
xchg
xchg
cmp
out
mov
call
jno
add
lods
js
add
push
add
addr16
int
add
mov
add
cwtl
jg
mov
inc
call
jno
add
call
call
cmp
add
or
call
xor
add
call
sub
dec
and
or
pop
mov
add
push
cwtl
shll
add
test
ret
call
xchg
mov
cli
cmpsl
call
sub
jne
add
scas
stos
mov
cmp
jbe
xchg
das
lahf
shr
adc
add
test
clc
and
add
pop
mov
adc
add
add
jo
add
add
call
and
add
mov
jg
sbb
ljmp
sbb
sbb
inc
mov
enter
sbb
add
add
call
xlat
mov
call
jecxz
iret
adc
call
sbb
sub
xlat
xor
call
call
add
in
push
and
add
call
call
call
test
cmpsb
call
cmpsl
call
xchg
push
dec
xchg
into
outsl
inc
call
mov
jmp
push
ds
add
jne
jmp
inc
test
shll
pop
cmp
add
add
dec
decb
das
jo
add
add
adc
add
pop
dec
cs
call
push
aas
std
loope
mov
aam
sti
xor
add
sti
xlat
fnstcw
call
pushf
fsubp
call
xor
fdivrl
es
out
mov
sub
call
call
jge
call
pop
call
lret
lock
xor
add
add
inc
add
inc
call
mov
mov
push
or
daa
call
sub
mov
rorl
call
jg
call
icebp
dec
sbb
or
add
xor
add
repz
add
pop
push
call
push
xor
add
call
inc
add
jl
sti
test
call
call
add
addr16
mov
jb
add
adc
add
aas
neg
test
jno
add
lods
and
add
sub
shl
movsl
call
adc
add
sahf
inc
add
xchg
mov
mov
call
in
dec
mov
call
call
or
pop
adc
add
rcrl
imul
or
out
adc
add
repz
add
mov
mov
add
into
outsl
frstor
add
push
push
lret
add
add
cs
call
cld
mov
add
sbb
addr16
add
cmpsl
call
add
call
cmp
push
mov
inc
add
repz
add
repnz
add
add
jnp
cmp
call
cmp
or
add
mov
add
stos
sbb
mov
js
mov
add
add
push
mov
add
sbb
call
add
ja
lcall
in
jp
dec
adc
add
call
mov
xor
add
adc
add
mov
jl
adc
add
sub
call
sub
aas
sbb
add
add
inc
call
call
inc
add
jae
add
sarb
add
arpl
mov
arpl
add
call
push
push
dec
add
ds
arpl
add
test
mov
add
jp
mov
call
test
mov
add
push
mov
mov
jb
add
repnz
jle
sbb
add
fidivrs
aas
dec
inc
add
arpl
shr
call
je
adc
add
stos
and
add
jmp
xchg
pop
pop
inc
dec
push
xchg
push
mov
call
adc
add
call
add
add
es
lahf
xchg
and
cli
inc
add
imul
cmp
mov
in
ljmp
call
cmp
push
jmp
ret
daa
push
mov
sar
jmp
pop
sub
call
add
call
jne
call
gs
decl
jmp
xchg
xor
arpl
add
fs
add
inc
add
lret
stos
jp
in
mov
add
xchg
es
adc
add
test
sbb
call
call
add
je
push
jmp
arpl
adc
pop
sub
call
aad
add
add
call
pushl
jmp
push
into
or
add
aaa
outsb
aaa
jno
add
cmp
call
add
push
lret
inc
call
add
test
call
jmp
in
arpl
es
bound
add
add
sub
and
add
xor
add
sub
call
fildll
fdivrs
call
push
pop
dec
pop
pusha
add
mov
outsl
fsub
call
or
mov
call
test
int
repnz
imul
lea
add
xor
add
int3
cld
adc
add
stos
push
ret
in
arpl
xor
icebp
mov
call
and
test
call
inc
add
mov
fwait
popa
add
xor
call
xchg
flds
pushl
shr
xchg
add
add
arpl
sti
sub
fdivr
sbb
imul
call
add
insb
loopne
push
add
jno
add
popf
mov
jmp
add
adc
shr
pop
loop
nop
or
cmpsb
call
add
shr
call
pop
jns
je
add
inc
add
lods
or
test
adc
add
mov
add
es
xor
add
add
icebp
call
jne
aam
repz
add
push
dec
add
ret
daa
fbld
out
imul
add
add
pop
add
add
add
call
xor
add
imul
add
push
add
mov
adc
add
mov
call
test
mov
incl
nop
stos
lret
add
out
or
sub
mov
add
jg
call
xchg
add
add
xchg
cmp
add
repz
gs
call
add
add
scas
mov
mov
call
jae
add
add
iret
divb
add
inc
add
add
sub
add
movsl
call
xchg
xchg
xchg
mov
mov
inc
add
mov
sbb
and
add
call
mov
imul
push
add
push
add
and
add
scas
adc
pop
call
or
xor
add
cwtl
mov
add
push
ret
jp
jle
call
add
push
mov
sub
add
jnp
call
mov
dec
iret
xchg
pop
call
mov
leave
push
call
in
neg
dec
arpl
call
inc
jmp
push
arpl
insl
mov
push
jmp
push
sub
xchg
dec
jmp
add
insb
callw
mov
add
not
ret
mov
and
add
xchg
inc
call
add
fs
mov
jmp
mov
dec
adc
jns
call
push
icebp
mov
mov
call
add
call
fisubl
iret
push
popa
push
ret
adc
and
call
xchg
sbb
mov
sub
outsl
mov
stos
sbb
sub
mov
sub
ljmp
lret
xchg
mov
pop
call
push
shr
fnstenv
add
int
cwtl
daa
call
inc
add
jl
call
call
jp
push
jmp
xchg
mov
jne
xchg
push
mov
call
call
call
dec
call
loop
test
push
call
add
or
call
cli
inc
call
call
ss
adc
add
add
push
add
insb
fwait
dec
or
out
inc
add
lcall
aad
test
jo
add
shlb
add
sub
push
add
nop
pop
sbb
add
add
ret
call
in
mov
add
test
nop
sbb
add
cli
jns
push
sub
call
push
call
aad
adc
in
mov
call
repz
add
add
sub
push
add
inc
add
push
add
test
add
fwait
sub
pop
ret
call
mov
dec
jne
call
call
dec
jae
add
add
add
call
and
add
call
add
mov
cmp
and
add
or
pop
sbb
lods
ret
ds
fnstsw
fidivl
or
call
aam
or
add
inc
call
shlb
call
add
test
cld
popa
add
or
cmp
add
ffreep
call
call
add
mov
call
lock
jg
call
call
inc
call
xor
add
add
call
add
hlt
cmp
add
xchg
jge
xor
add
call
inc
add
aam
call
call
cltd
cmp
add
call
test
add
xor
mov
loopne
pop
stc
js
call
addr16
ja
add
test
dec
jbe
call
mov
call
loop
test
fcomi
repz
scas
pop
call
call
push
je
jmp
aam
inc
call
pop
adc
add
call
pavgw
pushl
mov
add
pop
idivl
push
incl
lods
arpl
outsl
scas
jo
add
call
call
call
imul
test
sub
jb
add
add
dec
jmp
xor
pop
xor
inc
add
faddl
add
add
xchg
xor
add
sub
pusha
add
jge
add
lcall
call
and
jbe
call
cmp
fsubrs
outsl
pop
call
call
push
ret
aam
in
jge
sub
call
cwtl
pushf
pushf
fisubrs
stos
push
call
pop
repnz
pop
add
add
add
pop
lahf
hlt
dec
cmp
mov
add
and
add
inc
add
sti
enter
gs
call
jmp
arpl
mov
aad
add
push
in
and
add
pop
sub
stos
push
add
push
test
mov
call
inc
add
pop
adc
push
add
je
scas
push
add
jbe
or
inc
call
adc
add
out
fwait
adc
sub
and
xor
add
add
adc
add
add
dec
fs
push
je
add
stos
lock
int3
xor
mov
ret
mov
cmp
xor
add
and
sbb
call
push
push
ret
arpl
arpl
add
stos
aaa
add
mov
es
aam
mov
sbb
call
jmp
pushf
lea
fsubr
aad
call
cmp
call
rcrb
sbb
jmp
fnstsw
das
sub
pop
sub
ret
in
mov
call
shr
and
add
in
sub
call
add
adc
add
call
hlt
mov
mov
gs
leave
xor
add
mov
call
dec
call
xchg
pop
call
out
cmp
add
push
add
sub
mov
xchg
ss
or
cld
int
call
mov
push
and
adc
add
call
fistps
shr
aas
lret
daa
call
cmp
add
imul
add
add
incl
addb
call
call
add
add
push
ret
cmp
mov
into
and
jnp
jns
and
add
call
xchg
xor
add
add
call
add
sti
testb
xor
add
bound
add
rclb
add
xlat
test
add
enter
add
add
mov
shr
call
add
push
add
repnz
ret
call
and
add
out
xchg
dec
sahf
xchg
fwait
rcr
int3
aad
call
insb
and
add
sub
fistpll
es
mov
call
jecxz
pop
insb
ds
aam
call
sarl
test
call
sub
pop
aas
adc
add
add
sub
daa
call
add
sti
lret
push
sub
call
xchg
mov
imul
call
in
ds
daa
aam
mov
sbb
daa
call
sahf
adc
add
call
add
dec
sub
add
fsubrl
xchg
push
add
out
cmpsl
call
call
add
lret
jae
add
add
and
callw
adc
stc
and
add
ret
pop
mov
insl
pop
push
dec
and
add
daa
arpl
add
into
ljmp
jae
add
pop
out
sub
call
test
loop
inc
add
mov
add
add
ss
test
and
sub
call
call
call
les
jmp
add
dec
jo
add
popf
mov
sahf
mov
call
push
mov
add
cmp
and
add
lcall
add
mov
stos
jnp
shll
add
adc
mov
or
mov
ret
call
jle
jmp
add
shl
sbb
call
cmpsb
call
faddl
add
je
pop
out
push
add
rep
cli
inc
add
push
cld
sahf
mov
dec
lahf
fcoml
call
jnp
call
jmp
arpl
dec
xor
add
jmp
dec
daa
push
jne
pop
adc
add
lret
test
stc
insl
daa
call
out
or
push
ret
dec
or
inc
call
call
add
add
repnz
sub
call
add
add
add
jmp
or
add
addr16
shl
call
sub
add
lods
sbb
call
push
pushf
jmp
cmc
andb
addr16
adc
add
cli
inc
add
and
add
call
fisttpl
add
cli
cmp
iret
in
add
add
cmp
call
push
pop
jmp
daa
outsl
ds
arpl
add
push
add
rcr
mov
xor
call
cmp
add
add
call
mov
jmp
cmp
mov
call
je
add
add
int3
xchg
fwait
outsl
in
lods
imul
aam
call
repz
mov
or
add
lcall
lods
jecxz
jp
jmp
jmp
cmc
xor
add
call
into
icebp
xchg
sgdtl
add
call
push
call
add
test
add
pop
in
pushl
push
add
lods
xchg
leave
js
in
pop
insb
std
sbb
add
lret
insb
imul
add
jmp
sbb
add
cli
mov
add
es
add
popf
dec
pop
imul
lods
lahf
cld
test
into
lcall
mov
je
jmp
pop
mov
add
call
in
inc
call
xor
add
ret
cmpb
enter
cmpsl
call
dec
xchg
or
add
icebp
sbb
and
add
dec
dec
push
add
mov
imul
add
mov
nop
sub
add
mov
add
cmp
call
add
xchg
dec
sbb
sbb
add
push
daa
add
add
ljmp
dec
and
add
add
movsl
call
pop
inc
call
push
add
mov
lea
add
rcl
es
add
jb
add
jle
pop
jbe
add
cmp
add
push
push
add
xchg
pop
add
add
das
jmp
adc
add
call
add
loop
xor
add
add
call
arpl
add
call
add
add
dec
daa
call
decb
adc
add
in
mov
test
outsl
inc
add
mov
add
mov
inc
add
cltd
int3
mov
inc
call
xchg
repz
fs
pop
call
add
mov
xchg
mov
hlt
addr16
jb
add
lahf
cmpsb
call
add
xchg
adc
add
or
inc
add
push
call
add
or
add
xchg
pop
sub
add
push
cmp
pushl
pop
or
aas
fs
add
cmp
cld
sub
call
lods
fisubrs
xlat
or
add
add
dec
mov
add
test
adc
add
add
aad
push
bound
add
sbb
call
add
add
add
add
call
fidivrl
call
sbb
add
add
add
add
gs
xor
add
test
es
adc
add
test
out
dec
lcall
add
push
add
jmp
push
xchg
xchg
jp
test
fisubs
add
dec
and
sbb
aaa
xor
add
callw
push
add
cmp
call
jmp
enter
push
lcall
add
inc
call
aaa
xchg
dec
mov
call
or
push
cmp
call
mov
sub
cmp
push
jmp
xor
scas
mov
movsb
call
push
add
loop
fstpt
add
add
call
mov
je
add
pop
orb
mov
je
and
movsb
call
sub
mov
call
call
xor
out
cwtl
cs
mov
call
leave
add
daa
call
call
inc
add
add
add
repnz
call
popf
lret
cmp
add
sbb
lods
pop
insb
sahf
sbb
call
xlat
pushf
push
add
mov
add
out
mov
outsb
rcl
cmp
fldl
add
add
imul
shr
dec
ds
pop
fdivs
xor
add
call
add
pop
inc
add
arpl
add
call
out
mov
repz
add
jmp
in
or
ret
call
gs
push
push
outsl
adc
add
fidivs
out
pshufw
test
call
xor
sub
rcrb
call
mov
mov
pop
sub
jge
dec
mov
cmc
pop
lahf
sbb
push
add
jg
mov
pop
push
ret
daa
mov
lods
add
add
test
sub
mov
lret
hlt
mov
jg
call
jmp
add
ds
call
mov
hlt
add
add
mov
int3
push
aam
sub
jg
sub
add
inc
call
mov
sub
cmp
pop
cmp
add
dec
or
shrb
inc
add
call
pop
ss
inc
add
pop
inc
add
inc
call
clc
callw
mov
push
scas
cltd
scas
fs
adc
add
add
aaa
adc
add
jb
add
jae
add
push
ljmp
add
movsl
call
call
jno
add
add
mov
outsl
pop
rcrb
call
cltd
test
jmp
in
and
call
add
call
pop
push
ret
jmp
ret
arpl
sbb
mov
js
adc
add
fcom
xlat
mov
call
add
faddl
call
add
add
fisttps
add
mov
jl
jne
cmpsb
call
clc
ret
call
call
lea
sub
add
push
add
mov
call
adc
add
push
mov
popf
inc
add
dec
adc
add
jg
add
pop
and
shr
sub
jae
add
add
cli
xchg
cmp
and
mov
add
mov
or
add
and
add
or
add
xor
cli
pushf
pop
cld
and
add
vsqrtps
add
xchg
push
mov
cmp
gs
add
sbb
shr
sbb
xchg
dec
dec
popf
add
add
call
and
add
scas
fs
inc
call
into
push
add
pushf
adc
push
add
xor
add
int
shl
call
xchg
hlt
mov
add
loop
jns
call
enter
call
call
inc
add
aas
cmp
call
and
jmp
add
push
lret
add
mov
add
mov
call
mov
mov
jmp
aaa
inc
arpl
call
call
add
add
or
push
add
mov
add
fs
call
or
add
sub
call
das
dec
push
aas
pop
cltd
and
add
test
mov
sub
call
pop
call
aas
mov
call
mov
inc
call
mov
add
add
sub
sub
call
xchg
jmp
add
pop
call
add
add
xchg
jbe
add
loop
dec
call
sub
test
jg
call
scas
pop
call
jo
add
sub
loope
mov
call
scas
xchg
jmp
call
add
mov
jmp
adc
add
pop
outsb
or
add
imul
pop
sub
call
das
mov
test
call
loopne
cmpsb
call
in
lock
sub
call
inc
call
jge
add
xor
add
mov
add
fxch
mov
inc
push
ret
sbb
add
xor
add
mov
clc
mov
call
xchg
bound
add
pop
stc
or
sub
aam
call
add
add
dec
into
and
add
test
popa
add
jp
call
add
test
callw
add
mov
call
add
call
call
mov
call
add
call
call
dec
inc
call
mov
pcmpgtb
cld
adc
add
push
jmp
pop
dec
arpl
addb
addr16
scas
mov
add
sub
pop
call
sbb
push
ret
push
push
mov
call
callw
mov
cmp
cwtl
stos
lcall
lods
sbb
jmp
cmp
pop
subb
cmp
jmp
arpl
xchg
mov
das
pop
jmp
icebp
sbb
inc
call
and
add
mov
dec
hlt
cs
bnd
scas
xor
add
call
add
push
jmp
xchg
adc
mov
stos
lock
add
inc
call
repnz
negl
call
xlat
push
add
mov
clc
sub
pushf
sub
outsb
out
inc
add
push
fsubrl
call
pop
jmp
arpl
add
mov
call
mov
call
adc
add
add
jno
add
xchg
inc
call
jb
add
jno
add
mov
jmp
mov
aaa
dec
nop
and
add
cmp
shr
fidivl
call
icebp
jbe
dec
push
add
pop
call
ffreep
call
inc
add
stc
cli
jb
add
add
fldl
add
sub
fwait
rorl
inc
add
push
lahf
cmc
out
jnp
add
cltd
cmp
pop
fstpl
add
add
adc
add
jno
add
out
mov
call
je
add
lods
sbb
jmp
pop
xor
pop
pop
push
jae
add
and
cld
adc
ret
call
hlt
into
sub
add
ret
push
call
stos
add
add
sub
call
out
mov
call
mov
and
in
int
into
in
add
add
pop
jmp
mov
jp
xchg
push
mov
add
dec
push
add
and
dec
arpl
add
jae
add
add
add
add
outsl
push
add
sub
call
add
mov
add
add
ss
xchg
gs
call
call
sub
sub
or
add
call
sbb
inc
add
or
cs
mov
push
addr16
xor
or
mov
push
call
call
out
sub
push
jmp
dec
mov
jecxz
mov
fisubl
xlat
lret
xlat
dec
mov
es
jmp
ljmp
call
call
fs
add
inc
add
xor
ror
jmp
cmc
ret
cmp
dec
loope
add
add
aam
push
jne
jmp
dec
push
call
jbe
add
divb
add
cmpsl
call
call
jmp
cmc
and
pushf
add
xchg
jle
mov
cld
arpl
add
cltd
sub
push
cltd
fnstcw
fldt
cmp
xchg
repz
add
call
dec
push
xor
add
call
sub
push
in
or
sub
enter
adc
add
add
pop
call
ss
mov
js
pop
insl
addr16
call
call
add
mov
roll
notl
xlat
xchg
jecxz
dec
sub
call
add
mov
push
ret
xchg
adc
aam
outsb
xor
cmp
call
aaa
mov
call
mov
hlt
inc
call
out
mov
add
fcompl
call
daa
call
add
pop
or
mov
call
lock
add
mov
xor
add
add
jae
push
ret
add
js
sub
mov
push
lods
mov
add
add
popf
lock
mov
lret
sahf
cmc
shr
call
cmp
add
fiadds
add
call
sub
add
mov
callw
mov
add
lock
in
mov
cmpl
jmp
cmp
call
adc
add
hlt
test
dec
ss
sub
mov
test
add
dec
insb
dec
pop
sbb
call
add
sub
imul
inc
add
flds
add
lock
fsub
call
cmc
inc
call
cwtl
call
call
adc
mov
add
add
add
pop
in
pop
cmp
call
xor
add
call
add
call
call
jge
push
jb
add
xchg
jnp
shrl
add
add
negl
add
push
dec
cmp
or
xchg
xchg
mov
inc
call
es
pushf
xchg
nop
xlat
push
jnp
sub
push
js
mov
incl
dec
xor
xor
add
out
call
pop
jne
cmp
popf
add
add
add
pop
scas
lock
enter
and
add
add
dec
lret
sub
mov
sbb
add
pop
pop
cmp
dec
dec
popa
add
and
add
ret
jl
ss
sti
xchg
lret
lret
jge
bound
add
sbb
daa
call
stos
arpl
add
jecxz
jge
int
xchg
stos
mov
call
jb
add
add
add
add
xor
cmp
add
xchg
jne
xor
add
add
mov
mov
xchg
pop
addr16
add
mov
adc
add
sbb
xchg
inc
call
cmpsb
call
imul
out
sahf
push
rclb
add
mov
jmp
adc
dec
jbe
call
mov
stos
pop
call
dec
and
add
add
xchg
inc
add
push
add
lods
push
add
jbe
sbb
jl
add
arpl
decl
add
pop
add
sub
sub
call
call
test
mov
dec
out
sub
add
cmp
dec
inc
call
arpl
add
call
call
push
add
shr
xchg
call
sub
add
add
mov
call
call
add
pop
dec
or
dec
push
jle
int
in
arpl
add
cmpsb
call
shr
xchg
push
add
stos
xor
add
add
xor
add
fmul
xchg
je
lods
aaa
mov
sti
mov
jno
add
jp
add
cmovno
add
lahf
or
add
sub
push
add
call
and
add
xor
add
sub
cmp
or
cmc
cmpsl
call
inc
add
ds
push
call
call
add
loope
movsl
call
mov
sub
call
sub
add
cmp
add
add
sbb
call
call
fisubl
sbb
shrb
push
inc
add
arpl
xchg
add
add
popf
ljmp
lods
inc
add
sahf
inc
call
call
pop
rorb
out
mov
mov
cltd
rcl
std
and
add
mov
sti
mov
jno
add
stos
hlt
inc
call
call
jge
in
sub
dec
loop
or
call
xchg
sub
hlt
aas
cmc
clc
outsb
outsl
add
mov
xchg
test
mov
pop
in
jmp
mov
call
fdivrl
in
add
add
shl
call
movsb
call
push
dec
mov
inc
call
fsubl
add
add
dec
and
add
imul
xchg
sti
inc
call
add
lods
fsubs
add
add
xchg
in
jle
jecxz
push
imul
add
test
and
add
jns
roll
add
imul
lock
call
call
add
jns
call
sahf
adc
add
jne
push
ret
enter
add
aam
cltd
adc
add
pop
dec
sbb
call
ss
pop
fcmove
jae
add
bound
add
push
ss
bound
add
push
leave
test
in
jbe
jmp
cmp
jmp
arpl
call
jbe
and
add
add
mul
call
push
sbb
imul
add
in
and
cmp
call
mov
incb
lahf
imul
xchg
jae
add
test
sub
and
add
add
jns
mov
add
xchg
sahf
call
jg
xor
add
insl
mov
popf
mov
call
mov
mov
test
call
sub
sbb
add
leave
mov
jnp
inc
add
bnd
call
cli
lahf
and
add
call
insl
dec
shr
sub
add
test
aad
or
call
call
inc
call
faddl
lret
or
jp
scas
sbb
add
mov
test
and
add
mov
ret
call
add
int3
sti
sub
add
jb
add
cmp
add
jmp
test
jmp
test
sbb
inc
add
lods
sbb
fs
add
negb
mov
push
add
popa
add
movsl
add
add
shr
ja
pop
pop
jb
add
iret
sub
stos
outsb
pusha
add
pop
int3
outsb
push
call
call
add
add
sub
add
addr16
jmp
ljmp
inc
add
fcomi
enter
mov
jne
xchg
lret
hlt
xchg
scas
inc
call
adc
add
add
add
int3
push
xor
add
call
call
xor
add
add
and
daa
call
rcl
lret
cmp
call
fildl
jmp
call
ret
call
mov
jmp
in
aam
es
jp
mov
or
out
loope
std
std
inc
add
xor
add
xor
mov
add
ret
out
xor
cmpsb
call
and
add
call
add
sub
call
dec
imul
outsb
ljmp
fdivrl
jae
add
scas
mov
add
add
xor
add
add
jmp
call
sbb
add
movsl
call
call
call
add
call
lcall
lret
add
out
fadd
call
add
pop
lahf
pop
push
add
mov
bound
add
shr
cli
adc
add
sub
jecxz
sub
push
jecxz
sbb
add
add
call
aad
mov
call
mov
lret
jl
add
enter
imul
call
call
jmp
sbb
mov
pop
push
aad
add
sub
in
inc
add
cmp
lcall
lret
xor
add
pushl
jmp
cmpsl
lods
sub
mov
add
aad
sub
add
inc
call
nop
lods
clc
xlat
imulb
int
sub
push
jmp
push
test
enter
call
call
ret
add
dec
in
aam
std
cmpsb
call
int3
xchg
inc
add
jecxz
push
add
fistpl
arpl
add
push
or
push
add
cli
or
fs
fildll
sahf
stos
or
mov
aad
add
add
lea
add
ja
or
call
add
add
add
js
call
mov
cmp
dec
daa
call
adc
add
int3
sub
sub
divb
pop
arpl
add
mov
pop
movzbl
and
add
idiv
xor
call
jbe
mov
call
add
call
pushf
mov
out
xchg
push
add
inc
add
push
add
dec
shrb
inc
call
aad
xchg
mov
lcall
callw
sub
mov
inc
call
cmp
add
xlat
gs
mov
adc
add
lret
jle
loopne
cmp
call
add
call
and
add
add
es
call
call
add
int
call
add
add
jg
add
add
mov
add
pop
jmp
pop
fbld
sbb
inc
call
lods
push
call
inc
add
mov
jmp
aad
add
jns
jg
bound
add
in
cmp
call
mov
call
add
mov
call
add
in
mov
ljmp
lea
inc
add
test
cmp
add
add
out
inc
call
jmp
jp
pop
arpl
popa
add
push
testb
jmp
fbld
daa
jp
lret
aam
pop
push
add
cmp
mov
in
xor
add
rol
call
cmpsb
call
shr
jmp
dec
into
arpl
wrmsr
add
push
pusha
jmp
push
arpl
dec
arpl
push
call
add
inc
add
fs
cwtl
or
add
xor
daa
call
pop
in
jecxz
mov
push
push
jp
add
cmpsl
call
add
push
mov
mov
inc
add
cmp
ds
int3
mov
mov
popa
add
int
ret
repnz
cld
sub
cmp
add
mov
ret
pushl
sbb
arpl
add
mov
dec
mov
rcrl
into
test
jb
add
mov
vcvtps2pd
push
mov
call
add
push
call
ljmp
jmp
inc
mov
dec
mov
call
pop
call
or
out
jns
mov
mov
add
inc
call
cmp
mov
call
sbb
test
inc
sbb
add
jp
mov
sub
add
adc
add
jle
or
cmp
push
add
incl
push
inc
mov
add
add
fsubp
call
call
add
cmp
jl
shlb
add
mov
call
stc
xor
add
call
sti
inc
call
call
call
sbb
dec
push
inc
add
inc
cmc
mov
mov
add
mov
rcll
dec
insb
push
add
xchg
test
pop
repz
dec
cmp
cli
call
mov
push
popf
fldenv
call
pop
ds
mov
adc
add
add
xchg
mov
and
add
or
mov
add
mov
adc
xchg
mov
push
add
scas
gs
cmpsl
call
lock
pop
jmp
cmc
arpl
cmc
enter
add
out
gs
add
add
add
add
sbb
push
ljmp
popl
ret
cmp
mov
add
jmp
pop
sbb
add
inc
call
call
shr
call
and
adc
mov
pop
xchg
aaa
addr16
push
or
call
sub
pop
jmp
adc
outsl
push
inc
jp
sub
jnp
add
nop
xchg
and
cltd
cmp
call
decl
test
add
movb
mov
add
sub
test
leave
addr16
add
addr16
xor
add
call
add
sahf
sub
fucomip
sbb
js
add
jl
jge
inc
add
adc
add
jle
iret
call
sub
jmp
pop
inc
lods
pop
arpl
adc
call
add
add
push
xor
add
mov
call
pop
push
test
incl
add
aam
clc
or
scas
push
and
call
push
add
mov
add
call
mov
arpl
add
mov
repz
add
mov
gs
xchg
test
shlb
add
mov
add
mov
add
fwait
and
add
add
sarl
adc
add
jnp
and
test
pop
cmp
call
lcall
call
dec
ss
sahf
inc
call
mov
xor
add
push
add
or
add
or
int3
out
cmp
add
push
fsubrl
call
repz
iret
inc
call
mov
jmp
or
arpl
call
call
inc
call
dec
sbb
repnz
add
call
shr
mov
mov
add
add
rcrb
add
mov
sbb
call
sbb
pop
jmp
pop
mov
mov
call
mov
arpl
cmp
push
aaa
call
fisttpll
adc
add
add
shl
jbe
jno
add
divl
push
xlat
mov
add
adc
add
or
and
aam
gs
push
add
dec
callw
call
add
adc
hlt
sub
add
push
push
ret
push
in
mov
dec
sbb
push
call
call
call
notl
cmp
hlt
sub
call
add
icebp
test
repz
call
call
fsub
call
out
adc
add
call
pop
arpl
add
jne
jmp
push
mov
test
cs
popf
sahf
inc
call
cmp
call
add
jmp
push
arpl
sti
push
adc
call
jae
add
ret
add
cwtl
sub
inc
call
adc
add
call
insb
cs
call
add
add
mov
jmp
mov
push
add
sub
call
push
push
sbb
aam
call
mov
call
rep
jmp
arpl
imul
sbb
cli
adc
call
loopne
ljmp
mov
sub
add
add
into
adc
call
and
xlat
xor
nop
xchg
pop
adc
add
call
add
lahf
dec
and
add
call
shlb
fisttpl
das
mov
movsb
ljmp
jp
sub
add
add
add
es
xor
stos
negb
add
into
push
sub
dec
pusha
add
sbb
mov
call
jbe
mov
add
outsb
sub
call
repnz
add
scas
pop
es
test
repz
call
pop
mov
sbb
add
callw
daa
call
fdivr
in
cmp
inc
add
xchg
loope
testl
inc
call
add
add
push
add
and
add
lret
test
and
sub
jnp
arpl
add
adc
add
mov
or
add
nop
sti
cmp
xchg
sbb
decl
sub
arpl
dec
fmuls
imul
add
jge
sub
pmullw
push
dec
in
cmp
add
sbb
fs
push
call
ja
jb
add
test
mov
aad
dec
xor
fcompl
test
add
lret
lods
fidivrl
add
push
mov
jmp
outsl
push
arpl
call
add
dec
mov
xchg
lods
pop
sub
mov
stc
push
and
rcrl
add
mov
lahf
loope
inc
add
nop
sub
jb
add
add
push
push
stc
xchg
mov
call
inc
call
sub
test
call
in
inc
call
shr
jmp
enter
xchg
aaa
cmp
xchg
repnz
add
jg
call
insb
cmpsl
call
add
call
sub
rclb
xchg
out
pop
fld1
idivb
and
add
pusha
add
addr16
xor
jecxz
or
add
push
out
xor
add
lods
std
mov
adc
inc
add
xchg
push
and
arpl
push
xchg
jmp
pop
mov
add
add
fwait
or
sub
call
jbe
pop
mov
call
mov
call
add
push
add
dec
into
sti
pop
call
call
push
call
mov
pusha
add
mov
leave
cmp
das
inc
call
xchg
pop
call
sbb
call
jae
add
jmp
arpl
call
cmpsl
call
scas
lret
xchg
lods
inc
call
pop
decl
into
jmp
arpl
add
sub
jl
add
shl
mov
mov
add
js
jnp
add
stos
imul
xor
jmp
sub
add
xor
nop
lea
dec
or
add
add
add
call
lock
call
call
sbb
jae
add
add
bound
add
call
add
add
pop
sbb
cmp
call
push
add
bound
add
into
mov
xchg
xchg
mov
call
and
out
adc
add
add
hlt
test
iret
sbb
shr
xor
add
orb
shr
and
call
jle
add
icebp
rcrl
pop
dec
xchg
into
mov
call
pop
mov
call
aas
enter
xchg
sbb
call
mov
call
add
cmp
nop
mov
add
xor
add
add
jmp
add
pushf
aaa
out
push
imul
in
lcall
or
fistpl
call
adc
add
add
add
add
out
call
sbb
call
add
dec
mulb
jg
call
add
mov
add
xor
add
push
add
sub
jo
add
out
call
inc
mov
imul
sub
jge
mov
call
mov
call
add
dec
call
jmp
aaa
push
arpl
xchg
jno
add
add
nop
in
lahf
sbb
sar
or
mov
push
call
clc
popa
add
jns
vsubps
call
add
add
jle
notl
shlb
call
test
cmp
and
add
add
dec
inc
call
outsl
dec
int3
leave
idivb
fwait
pop
mov
aam
or
call
jge
es
xchg
xchg
mov
jl
call
incb
add
and
add
push
call
push
ret
dec
cmc
into
mov
call
or
jmp
jmp
cmp
call
add
loop
stc
insb
stos
test
call
insb
call
in
in
das
mov
xchg
or
add
mov
mov
fs
dec
into
rcrb
mov
je
add
jl
push
fmuls
fsincos
stc
adc
add
aas
sbb
dec
sub
mov
inc
outsl
in
cmpsl
call
cmpsb
call
call
hlt
and
add
call
jl
cmp
out
mov
sub
jno
add
add
jb
add
pop
scas
aam
fptan
fcomps
sub
sbb
xor
add
cmpl
jmp
add
and
add
sbb
add
ret
call
sub
add
and
add
popf
popa
add
mov
call
push
sbb
push
ljmp
cltd
test
add
pushf
dec
cli
nop
push
jmp
cmc
cmp
js
call
add
jb
add
add
aas
stos
adc
sub
add
jmp
cwtl
sub
add
add
add
add
mov
adc
push
call
push
arpl
arpl
mov
push
push
jmp
flds
jne
in
inc
add
push
add
inc
add
xor
add
jg
call
loope
add
add
sub
lods
sub
callw
aam
mov
das
repz
jle
add
call
pop
push
add
mov
mov
repz
add
and
add
jmp
mov
call
xchg
addr16
cmp
sub
call
add
adc
add
nop
add
cmc
adc
add
or
mov
call
test
add
dec
insl
cmp
add
icebp
mov
or
call
fldcw
mov
jns
call
pop
jns
add
pop
fisttps
pop
dec
out
loop
mov
dec
pop
iret
sbb
xor
add
push
hlt
sbb
jge
call
xchg
in
lods
push
add
call
call
fsubrl
add
nop
dec
fwait
sub
call
ret
call
add
jge
cld
add
sbb
enter
fnstenv
inc
into
mov
dec
push
call
add
arpl
add
jmp
xchg
movsl
call
call
sub
das
jg
jmp
add
add
lcall
sbb
decl
ljmp
add
jmp
add
call
lahf
pushf
stc
mov
jo
add
add
add
inc
call
pop
adc
add
add
call
call
jo
add
push
lea
jno
add
lret
gs
add
stc
repz
inc
add
cmp
arpl
xchg
or
add
inc
push
ret
dec
adcb
ljmp
lock
add
call
push
add
test
push
add
movsb
call
push
call
and
add
bound
add
stos
stos
ss
push
stos
lock
inc
add
cs
shr
add
jnp
add
test
scas
adc
int
call
call
add
adc
add
dec
movsb
call
call
cmp
jmp
in
pop
ljmp
fs
xor
add
aas
sbb
jbe
push
jmp
or
or
psraw
jae
add
fs
call
pop
sbb
jl
call
call
add
xor
sub
adc
add
jle
add
mov
xor
add
add
add
call
call
dec
stos
daa
call
in
shr
or
add
xor
add
call
shr
ret
in
arpl
sti
mov
mov
insl
ds
fdivrs
jmp
adc
sbb
pop
add
add
xor
add
mov
adc
add
add
cmp
call
cmpsb
call
add
lahf
shr
or
push
sub
call
add
arpl
add
add
and
jns
mov
call
add
je
bound
add
or
call
adc
add
cmp
inc
call
outsb
sub
push
call
aas
cs
mov
add
ljmp
sbb
push
stos
cwtl
dec
or
lea
add
call
stos
xor
add
sub
add
mov
pop
lcall
mov
push
add
icebp
mov
movsb
call
call
or
add
stos
mov
mov
shll
imul
xlat
pusha
add
jnp
aaa
mov
call
or
jmp
outsl
pop
arpl
mov
call
movzwl
jmp
aaa
daa
push
mov
call
push
and
add
stc
call
add
ret
call
call
loop
mov
jmp
cmp
int
push
jmp
push
jne
call
add
call
add
scas
sbb
adc
add
xchg
icebp
std
xchg
or
imull
or
call
shlb
add
pop
ficoms
mov
jmp
push
fsts
add
mov
test
shr
out
sahf
movsl
call
call
mov
cmpsb
call
scas
cmpsl
call
test
arpl
add
aas
out
cmc
jb,pt
add
arpl
add
iret
cmp
mov
xchg
mov
out
xchg
sbb
imul
shr
add
inc
add
dec
mov
pusha
add
or
add
push
mov
mov
stc
mov
call
outsl
lcall
imul
call
cmc
mov
xchg
hlt
or
add
xchg
push
sub
out
sbb
out
mov
or
fistps
call
and
adc
ljmp
in
ret
call
sub
mov
test
jmp
mov
dec
and
adc
add
mov
mov
add
call
call
add
lret
add
mov
mov
ret
call
jmp
enter
mov
cld
call
call
add
push
add
push
jno
add
add
rolb
sub
call
cltd
mov
add
repz
add
out
jecxz
pusha
add
sub
xchg
and
idivl
or
dec
mov
call
inc
call
add
add
insl
jmp
hlt
inc
add
sbb
pop
stos
call
add
pushf
lock
lock
call
sub
call
pop
bound
add
lcall
add
pushf
push
inc
add
mov
call
jns
mov
jne
inc
add
push
add
shr
cmp
add
inc
add
cwtl
dec
mov
xchg
lcall
mov
mov
call
sub
into
clc
fs
shr
call
call
add
jmp
mov
vrsqrtps
add
dec
pop
pop
push
test
xchg
mov
mov
rcrb
mov
jmp
in
mov
leave
or
call
add
cmp
add
sbb
jecxz
lret
pop
jmp
add
cmp
call
sub
add
add
iret
test
add
call
sbb
add
imul
and
add
add
call
bound
add
add
mov
pop
jo
add
sub
add
call
scas
loop
cmp
add
pop
sbb
outsl
popa
fs
dec
sbb
call
call
mov
arpl
mov
in
leave
and
add
cmp
add
lea
xchg
fdivrs
add
add
add
call
or
mov
call
add
mov
jl
add
call
mov
leave
dec
mov
lahf
test
gs
popf
ss
call
inc
call
int
insb
pop
adc
add
daa
call
add
lods
add
push
add
inc
add
leave
test
fnstenv
imul
push
cwtl
outsl
ret
call
sbb
add
mov
inc
add
enter
sbb
out
addr16
int3
push
dec
punpckldq
add
call
mov
call
add
adc
add
add
imul
call
fnop
mov
insb
shr
xchg
push
mov
cmpsb
call
call
cmpsl
call
fiadds
adc
add
sbb
arpl
add
mov
call
lret
es
jecxz
adc
add
call
in
aaa
sbb
call
loop
dec
callw
jle
add
push
add
cmp
add
mov
push
push
xchg
cli
loopne
dec
in
stos
jmp
ds
dec
adc
add
add
in
leave
in
mov
mov
add
jmp
inc
adc
arpl
push
add
push
ret
inc
call
cld
call
add
dec
into
scas
sub
add
add
add
repz
addb
out
je
sahf
xor
add
pop
inc
call
add
inc
add
sbb
outsl
je
push
ret
daa
adc
add
call
or
add
add
add
ss
jecxz
in
stos
ss
dec
sarl
mov
roll
rcll
call
inc
call
or
call
in
jb
add
call
add
call
jmp
ret
ljmp
fcoml
add
pop
cmpsl
call
cs
jle
iret
imul
loope
jmp
out
cmc
dec
mov
cmp
outsb
lods
pop
in
mov
rorb
call
cmc
push
add
pop
je
pop
sub
mov
leave
decl
arpl
mov
sub
add
jo
add
imul
leave
aad
pop
sahf
or
dec
or
addr16
sub
sub
call
stc
call
call
xor
insb
hlt
outsl
dec
push
cli
xchg
push
call
add
call
call
or
call
call
jb
add
out
loopne
cmpsl
call
call
call
call
call
dec
ret
add
pop
fimull
add
xchg
callw
jmp
and
adc
fisttps
jmp
mov
nop
jb
add
jno
add
dec
icebp
pop
and
add
call
sub
add
enter
add
loope
cmp
mov
push
jmp
xor
inc
cmpsl
dec
pop
jecxz
imul
adc
inc
add
push
mov
call
add
add
loopne
sub
add
aad
shrb
pushf
fs
fmulp
mov
add
cwtl
push
add
xor
mulb
add
inc
call
jo
add
push
ret
jp
push
arpl
cmc
gs
mov
call
add
xlat
cltd
idiv
or
call
test
mov
inc
add
pop
ds
dec
aaa
mov
insb
dec
movsb
call
add
xlat
in
mov
xor
add
lahf
xchg
pusha
add
cmp
add
add
add
add
cmp
jecxz
mov
inc
call
call
call
or
add
dec
mov
in
lcall
aam
jmp
cmp
xor
add
xchg
arpl
add
ja
jg
mov
jle
inc
add
sub
call
ret
push
ret
test
aaa
mov
add
incl
pushf
decl
call
stos
inc
add
lret
shr
mov
fdivr
fwait
scas
imul
add
movsl
call
gs
xchg
and
jo
add
call
call
call
mov
call
xor
cmpsb
call
sbb
push
adc
test
mov
filds
call
add
inc
call
add
inc
call
add
sti
ss
call
sarl
sbb
scas
jb
add
into
pop
jns
mov
add
icebp
mov
add
add
add
add
jb
add
es
test
push
and
add
add
jmp
jbe
jp
and
add
stos
loop
lahf
dec
jno
add
leave
push
ret
cmpsl
daa
inc
push
aas
sbb
mov
push
dec
cltd
cltd
call
std
sub
call
call
pop
es
add
dec
cmp
mov
mov
leave
dec
jg
sub
adc
out
xchg
jnp
callw
rorb
push
cmp
add
xor
xor
add
add
call
js
or
call
mov
add
je
and
add
call
sub
add
aad
pop
gs
call
stc
cmp
std
jne
sbb
jns
cmc
mov
add
and
add
dec
clc
sub
add
mov
mov
xchg
jle
xchg
ret
call
xchg
fwait
mov
push
mov
scas
test
add
add
call
pop
jl
jb
add
dec
jge
pop
repnz
mov
add
inc
add
xchg
fnop
das
cmp
jp
fbstp
cmpsl
call
add
push
mov
cmp
add
addr16
pop
pop
sub
adc
add
add
lcall
icebp
out
iret
imul
xchg
shrl
jb
add
cmp
add
jb
add
scas
inc
add
mov
push
and
add
call
add
call
add
mov
push
add
add
adc
add
bnd
call
jle
call
call
add
lock
jo
add
adc
call
sbb
jmp
lcall
xchg
sub
push
pop
jp
jmp
in
arpl
inc
call
mov
decl
pmaxub
xchg
cs
mov
sbb
inc
add
daa
adc
mov
push
dec
jnp,pt
mull
jns
call
mov
jecxz
cmp
and
add
lods
add
add
cmpsb
call
call
sub
jae
add
call
in
jne
jno
add
stos
nop
mov
xchg
loop
lcall
mov
aas
jmp
mov
sbb
jecxz
sub
add
add
outsl
clc
adc
or
popa
add
xchg
incl
xlat
incl
inc
sub
pushf
jb
add
shr
clc
callw
add
imul
add
test
addr16
push
das
sub
add
fstps
sbb
in
xlat
and
add
dec
sbb
add
fs
add
add
cmp
jl
insb
sbb
xchg
mov
ret
call
daa
call
add
xor
add
push
call
aad
call
jb
add
cmp
pop
add
add
sbb
jle
incl
arpl
call
pop
pop
add
mov
push
sti
adc
add
add
add
jno
add
test
outsb
outsb
mov
push
add
sbb
lock
add
and
add
add
in
imulb
or
call
sahf
add
cs
es
add
rolb
pop
mov
pushf
mov
mov
ret
call
cmp
movsl
call
sahf
cs
pop
push
ret
push
sbb
arpl
shr
lock
lcall
call
add
sub
pop
cmp
nop
pop
lock
add
add
adc
and
add
adc
sub
rorb
in
sbb
mov
add
daa
call
cmp
and
add
call
test
sbb
call
and
add
mov
call
call
add
out
pop
popa
add
ss
call
popf
cwtl
lock
sub
mov
add
push
inc
call
rolb
add
dec
xor
add
inc
call
mov
push
ret
cmp
add
add
dec
and
jno
add
add
sub
add
movups
add
sbb
sbb
add
add
cmp
loopne
mov
xchg
enter
cs
add
add
popf
sbb
call
add
dec
clc
pop
mov
sub
add
shrb
inc
call
aaa
lock
add
fimull
cmp
add
ja,pn
call
add
add
cli
mov
push
arpl
add
ret
call
shr
call
mov
dec
pop
mov
sbb
add
pop
aam
call
inc
call
call
add
aas
mov
add
stos
pop
test
cmpsb
call
ljmp
inc
add
add
fabs
call
hlt
ja
dec
push
mov
add
call
fs
add
sub
add
adc
call
mov
bound
add
imul
push
repz
inc
add
mov
call
fisubl
pop
add
mov
aad
sub
inc
call
stos
out
pushl
ret
aaa
outsl
xchg
cmp
call
adc
add
xchg
jae
add
push
push
ret
adc
push
pushf
xchg
lahf
leave
bound
add
lahf
sub
out
adc
cld
dec
outsb
jecxz
out
inc
call
dec
or
bound
add
call
jno
add
adc
add
call
cld
ret
call
call
mov
jmp
in
aaa
add
add
ret
call
daa
call
repz
callw
js
or
jecxz
hlt
cmp
sarl
sub
sbb
push
jge
incl
pop
ljmp
add
outsl
iret
movsb
call
fadd
call
call
xchg
arpl
add
in
mov
enter
lcall
aaa
mov
mov
aam
push
add
jo
add
add
mov
add
add
aad
call
sub
jecxz
cmpsl
call
sub
icebp
push
jmp
arpl
xor
add
movsl
call
in
ljmp
call
pop
clc
scas
and
cmp
add
add
insb
mov
mov
add
mov
pushf
inc
call
imul
add
push
add
shr
fwait
scas
cmp
add
inc
call
xor
cmp
xlat
fcmovne
dec
bound
add
movsl
call
add
enter
add
in
pop
or
add
into
jmp
fcompl
rolb
call
call
call
adc
add
mov
sbb
test
ljmp
test
ret
fisubrl
dec
gs
clc
mov
call
bound
add
pop
syscall
call
test
call
inc
add
shr
test
inc
call
out
and
add
adc
add
call
call
mov
or
sti
jo
add
iret
adc
add
push
call
cmp
add
decl
mov
lock
pop
mov
push
add
jge
xor
add
out
mov
call
call
stos
dec
push
adc
push
call
popf
adc
add
add
idivl
xchg
xchg
dec
dec
into
mov
shr
add
add
dec
jne
push
call
add
or
jp
jle
call
xor
fstpt
cltd
ja
mov
lock
mov
ret
call
cmp
push
call
xchg
scas
push
sbb
test
xchg
repz
cmp
push
push
jmp
daa
push
mov
call
sub
es
call
pop
loope
mov
jg
call
lahf
pop
dec
adc
add
add
push
add
stos
nop
js
jae
add
aaa
inc
call
movsb
call
xor
add
call
dec
loope
cld
xchg
jp
jp
imul
add
xchg
xchg
out
or
add
popa
add
scas
or
repnz
call
or
adc
add
add
pushf
in
imul
push
jmp
aaa
arpl
push
fxch
sarb
call
xor
add
aas
push
shr
sahf
xchg
ljmp
arpl
mov
decl
lods
ljmp
sub
add
and
add
imul
aas
lock
add
hlt
mov
add
imul
and
add
add
in
icebp
push
mov
add
shlb
add
mov
xlat
pop
call
inc
add
lahf
and
add
out
nop
mov
call
lods
lahf
jnp
in
clc
jle
add
shlb
add
out
ljmp
add
or
add
add
aaa
push
int3
int3
add
add
test
cmpsl
call
add
fidivrl
call
mov
add
cmp
jmp
arpl
pop
or
or
bound
add
mov
mov
lea
insl
or
shr
fwait
jne
incl
arpl
int
add
aas
fdivrs
jo
add
call
add
sub
jmp
pushf
lods
inc
and
dec
out
roll
push
jmp
ret
and
or
ja
faddl
scas
in
mov
mov
add
call
push
repnz
call
loopne
jmp
add
inc
call
add
inc
call
sub
call
shlb
add
add
mov
add
in
fists
add
inc
call
or
jl
push
add
mov
call
mov
aad
mov
mov
mov
jno
add
iret
or
add
sbb
mov
sub
pop
sar
cmp
xor
xchg
dec
mov
inc
call
add
fsubrl
rolb
mov
call
aam
pop
ja
lcall
psubusw
jo
add
call
add
call
nop
sahf
scas
dec
shr
jno
add
add
mov
mov
add
sub
call
fstpl
call
add
push
adc
add
outsl
enter
xchg
je
mov
call
push
add
ja
gs
call
sub
cmp
call
add
push
insl
push
add
ds
dec
loop
movsl
call
lods
pop
hlt
push
ljmp
inc
flds
call
jns
test
fcmovnbe
callw
movsb
call
repz
add
add
add
addr16
loopne
fildll
jb,pn
add
outsl
pushf
or
add
fimuls
call
adc
test
add
test
test
inc
add
push
das
inc
call
call
test
call
inc
call
loopne
xor
add
call
mov
mov
test
call
add
sbb
addb
add
lock
cmp
dec
gs
call
add
add
add
add
lret
or
nop
std
cmp
add
jl
shr
daa
call
call
add
mov
xor
call
jp
repnz
imul
sar
stos
pop
test
add
add
call
xlat
cli
insb
push
call
add
lea
cmp
add
add
mov
add
call
inc
call
pop
ja
cli
or
adc
call
std
sahf
xchg
sbb
push
ret
xor
das
xor
mov
mov
and
imul
push
pop
ljmp
outsl
arpl
mov
pushl
ljmp
jmp
in
jne
ret
ffreep
call
call
bound
add
add
jmp
arpl
loope
xchg
inc
call
mov
dec
inc
call
pop
aas
loopne
jne
add
xor
add
add
lret
add
add
push
call
add
test
or
test
faddl
add
add
mov
add
xchg
dec
bound
add
sub
call
add
sbb
shr
fsubp
call
xchg
sub
mov
call
js
call
add
push
imul
and
add
call
je
xchg
xor
add
arpl
add
pop
mov
add
push
pop
shrl
xor
lods
hlt
std
adc
add
add
jmp
jp
arpl
pop
mov
aad
fildl
add
add
call
call
call
add
int3
push
or
xor
add
add
or
shr
loope
shr
mov
jmp
push
aam
pushf
pop
stc
es
add
icebp
sbb
stos
out
call
sti
sbb
or
lock
shr
call
call
add
and
add
mov
add
dec
push
sub
add
mov
push
loopne
mov
mov
inc
add
outsl
inc
lret
std
and
add
mov
jmp
enter
add
shr
inc
add
pop
push
jmp
ljmp
add
bound
add
pop
into
fwait
jae
add
add
pop
mov
call
sub
jns
jmp
fadds
add
in
add
adc
enter
add
dec
aas
and
ror
jmp
arpl
adc
call
call
xchg
mov
call
jecxz
dec
mov
call
mov
cli
jmp
enter
call
mov
lcall
incl
mov
xchg
fnsave
or
add
and
add
jmp
cmp
add
mov
mov
ss
add
add
xchg
aaa
mov
shr
aad
mov
add
gs
outsb
pop
call
jmp
sub
dec
arpl
mov
pop
shll
xor
add
push
ret
xchg
push
sub
in
push
add
enter
arpl
mov
call
in
es
inc
add
mov
add
sub
add
call
cltd
stc
test
add
stc
dec
pop
stos
enter
and
add
xchg
out
mov
xor
add
aam
and
add
mov
add
das
sub
call
add
pusha
add
xor
add
add
notb
mov
iret
jae
add
add
push
stc
mov
or
jo
add
add
cld
xor
add
call
call
aam
pop
jno
add
add
shrb
xor
add
icebp
mov
fpatan
call
imul
shrl
outsl
arpl
adc
add
call
enter
mov
scas
inc
call
add
repz
add
add
xlat
cld
pushf
xor
add
add
cltd
mov
lea
cmp
add
fsts
add
add
rcll
add
add
add
outsb
dec
jg
call
sub
push
lcall
inc
outsl
arpl
pop
jo
add
or
mov
pop
aam
push
mov
jmp
arpl
sbb
arpl
add
add
add
adc
pusha
add
mov
pop
mov
lock
cmp
repz
call
ret
call
add
mov
stos
scas
push
add
inc
add
xchg
and
inc
call
jns
clc
xchg
jl
add
jae
add
lcall
sbb
incl
arpl
xchg
bnd
loope
aas
cmpsb
call
fstpl
ss
fcoms
add
testl
fnstenv
sti
shr
call
scas
mov
xchg
dec
add
sub
call
call
add
push
xor
xor
add
call
pop
sbb
aas
inc
add
addr16
clc
mov
and
lahf
push
call
sub
outsl
fwait
lret
mov
call
and
add
xchg
mov
int3
lea
fdiv
inc
add
add
add
xchg
in
out
lahf
shr
add
cmp
call
popf
pop
in
addr16
adc
add
dec
insl
push
call
fs
and
cmpsb
call
in
sub
inc
add
ljmp
add
pop
lods
scas
pop
fiaddl
or
jmp
pop
cmp
xchg
xlat
lcall
cmpb
arpl
call
jb
add
cld
call
jmp
jp
cmp
lar
add
xor
insb
mov
sub
sub
call
add
add
add
sub
add
call
sub
sbb
ficoms
add
add
inc
call
lods
loop
ss
call
loopne
or
sbb
and
add
add
add
mov
call
call
scas
fsubs
call
gs
das
and
sub
add
aas
push
rcrl
cmc
jl
dec
jl
dec
pop
ljmp
call
push
dec
pop
adc
add
pop
sub
rorl
shr
filds
sub
add
cmp
jle
fcmovb
call
loope
cmpsb
call
cld
es
jb
add
add
idivl
fwait
incl
sahf
mov
decl
sub
adc
cmp
cli
aad
add
in
mov
pop
jmp
ret
ds
das
push
aaa
dec
dec
and
add
xchg
jp
pop
cmp
add
jmp
insb
pop
sahf
cmp
call
mov
and
cwtl
out
add
mov
xchg
jecxz
sub
add
shlb
sbb
mov
call
ljmp
add
loopne
icebp
inc
add
cmp
dec
jmp
fstpl
popa
add
aas
mov
jne
add
fucomi
cmp
cmp
add
scas
sub
mov
call
add
call
sub
inc
call
push
test
add
add
jnp
ds
dec
add
add
add
adc
stc
shr
mov
call
lock
and
jb
add
sbb
add
insl
loop
pusha
add
call
and
add
dec
push
mov
fwait
mov
je
inc
call
adc
add
int
dec
dec
jae
add
call
dec
call
and
add
fldl
call
add
cmp
push
add
adc
add
add
add
xchg
call
inc
add
lret
pop
pop
shlb
call
imul
mov
icebp
mov
sbb
lods
dec
mov
add
add
call
out
ficoms
add
leave
cltd
arpl
add
pop
test
adc
add
mov
jmp
call
inc
call
pop
cmp
loop
addr16
call
rep
pusha
add
or
ljmp
cmp
sbb
push
inc
call
add
aas
test
jae
add
call
fidivl
jnp
add
pop
lock
pusha
add
lcall
ret
inc
call
loopne
scas
aas
sub
cmpsl
call
fdivl
call
add
add
sub
pusha
add
ja
add
call
iret
rorb
call
call
inc
add
sub
dec
add
call
add
push
sub
add
add
and
add
cwtl
xor
add
call
add
sbb
call
popa
add
ret
call
or
xor
sbb
call
and
sti
push
sti
push
loopne
dec
add
add
add
jle
pop
insb
pop
jns
add
and
add
add
sbb
repnz
add
add
call
call
cwtl
mov
call
add
mov
jno
add
call
mov
call
sub
test
popf
xor
add
or
dec
jne
jb
add
cmp
divb
aad
scas
lock
mov
add
popl
add
loope
sub
add
pop
lock
call
lea
fnstenv
add
sbb
push
adc
add
add
pop
ret
call
sub
sbb
add
dec
jg
in
mov
pusha
add
in
mov
out
loop
fwait
sub
into
callw
add
dec
inc
call
in
mov
xor
add
in
outsb
outsb
inc
call
pop
call
add
aas
dec
call
es
out
xchg
add
add
sub
ds
icebp
fwait
jg
mov
insl
callw
fistps
call
fs
pushf
xchg
daa
call
mov
push
mov
repz
adc
push
jecxz
and
add
add
sub
call
add
add
cmp
pand
xor
add
es
aas
mov
add
movsb
call
jne
call
or
add
push
pushl
shr
push
scas
fisttpl
call
add
shr
loopne
sarb
call
add
imul
add
add
shrb
jp
sub
call
mov
mov
popf
dec
jle
dec
dec
xchg
xchg
push
jmp
jp
call
pushl
add
or
call
shr
call
call
add
push
or
lcall
adc
add
fcoms
add
test
dec
or
call
cmp
in
sahf
mov
shr
movsl
call
jmp
pop
mov
jns
sbb
in
xor
add
xchg
mov
jl
call
daa
call
hlt
nop
mov
in
and
jecxz
jp
shr
loopne
pop
add
add
mov
clc
xchg
call
adc
add
scas
jl
call
fdivs
sbb
pop
call
stos
xor
add
call
out
cltd
shll
rorl
inc
add
mov
add
pop
dec
gs
loop
jno
add
call
ret
call
mov
call
add
adc
add
sub
sbb
pop
mov
call
mov
pop
inc
call
or
vmovhps
call
adc
add
aad
mov
inc
call
pop
aas
fadds
add
xchg
jl
call
sbb
stc
or
and
add
add
xor
insl
jae
add
inc
add
or
xchg
outsb
inc
call
jbe
call
lock
dec
pop
fisubs
fisttps
je
call
call
call
jle
sub
mov
call
add
add
push
add
sbb
stc
cmp
add
dec
loope
lea
xchg
fnstsw
addr16
sub
cmp
cwtl
or
add
iret
pop
cmp
rorl
fistl
jle
add
add
out
inc
add
and
daa
call
add
stc
and
add
add
sti
push
dec
mov
mov
add
adc
add
add
shr
add
insb
popf
imul
loope
sbb
int3
in
jbe
call
pop
or
movsb
call
jo
add
call
mov
call
call
call
add
mov
xchg
jmp
add
mov
add
jnp
mov
ljmp
call
cmp
adc
add
rclb
xchg
mov
pop
call
into
pop
xchg
ret
add
insl
push
add
fmuls
call
lret
and
add
add
pop
loop
xchg
ret
call
out
imull
adc
add
cmc
jg
add
sbb
xchg
pop
ret
and
add
add
add
cmp
and
add
xor
call
add
sbb
in
lods
sbb
ret
call
call
call
add
pop
jae
add
shr
mov
call
jne
int3
push
add
or
mov
call
into
sub
shr
jl
and
pop
push
loope
repnz
add
call
mov
movsl
call
lea
add
add
test
sarl
add
fisubrs
mov
call
pop
xor
add
xchg
cmp
add
repnz
add
aaa
out
mov
imul
call
cmp
add
cli
cld
fsubr
inc
call
lods
roll
add
call
je
loop
dec
xchg
ja
xlat
inc
call
adc
add
loopne
add
add
call
xor
add
pop
sbb
push
loopne
call
add
add
call
add
icebp
sub
mov
call
scas
pop
and
push
add
push
call
add
jle
popf
outsl
xor
sub
call
call
push
add
cmp
call
call
call
sub
pop
hlt
lret
test
stos
lcall
imul
mov
add
pushf
cmp
inc
add
cld
add
add
mov
add
insl
popa
add
cs
pop
ljmp
bound
add
lahf
je
jp
callw
imul
call
mov
call
add
add
nop
sbb
call
mov
aad
jmp
xchg
cld
inc
add
pop
stos
enter
add
fnsave
add
enter
xchg
aam
es
enter
shrl
test
sub
jmp
jmp
rcll
adc
add
leave
or
es
loop
psllq
ret
arpl
add
ds
cld
into
xchg
scas
es
add
inc
call
popa
add
sub
push
add
or
add
add
out
lret
ja
add
fidivl
ja
add
or
add
or
mov
mov
xchg
or
aam
test
ds
adc
add
call
movsb
call
sub
call
ljmp
call
mov
call
repnz
in
sahf
icebp
pop
xor
add
rorl
daa
call
call
movsl
call
add
call
xor
add
xor
add
call
inc
add
and
adc
add
call
sub
call
call
mov
add
sub
clc
jg
adc
add
mov
movsl
call
call
mov
ss
call
das
jb
add
pop
pop
call
scas
mov
add
jno
add
cmp
jge
call
push
add
push
mov
mov
xchg
inc
call
mov
mov
xchg
jmp
add
sbb
lock
loopne
mov
aad
lock
int3
clc
push
call
xor
in
mov
dec
popa
add
xchg
sbb
outsl
sbb
fisubrs
lret
pusha
add
inc
call
call
cmpsl
call
add
call
movsb
call
push
add
and
bound
add
jbe
push
dec
hlt
mov
add
mov
add
stc
dec
add
add
add
bnd
add
add
std
sbb
ss
in
and
add
insb
call
pushf
fwait
and
add
add
call
sarb
call
insb
fadds
sbb
and
adc
add
iret
add
xchg
aaa
mov
mov
gs
cmpsl
call
cli
xor
add
add
cwtl
popf
push
loope
fs
push
add
aam
loop
call
xlat
inc
call
pushf
adc
or
lret
dec
dec
pop
popl
call
add
cmp
call
jbe
call
dec
add
add
call
test
fimull
pusha
add
push
add
popa
add
js
test
sahf
mov
add
add
xchg
or
pop
inc
add
dec
imul
call
scas
test
call
mov
sahf
or
add
fstl
xor
add
int3
outsb
mov
pusha
add
xor
scas
mov
sub
call
call
shr
imulb
add
add
outsl
pop
std
repz
call
fimuls
push
pop
out
sbb
pop
mov
shr
aad
lock
add
jo
add
sarb
or
lret
jge
callw
mov
add
add
xor
add
jb
add
push
jns
add
add
and
add
call
add
xchg
dec
dec
out
callw
push
pop
xchg
xor
add
fcmovnbe
cmc
mov
call
std
shr
jae
add
add
int3
jae
add
add
in
cmp
scas
mov
shrl
add
sbb
mov
push
adc
call
call
xchg
mov
call
add
lret
mov
dec
das
jns
call
mov
dec
add
add
and
add
adc
add
add
xchg
pop
jno
add
mov
loop
or
aad
call
mov
inc
call
call
add
fmull
loopne
add
add
mov
add
inc
call
xchg
pushf
push
jp
or
call
mov
add
mov
or
cmp
add
into
pop
jb
add
fsub
call
call
add
and
add
stc
dec
das
sub
add
popa
add
pminub
adc
add
mov
call
add
sahf
xchg
movsl
call
cmp
aaa
dec
popa
add
aad
call
xchg
sub
xlat
fwait
jnp
outsb
ret
call
xor
add
ss
add
mov
push
out
mov
mov
call
int
mov
popf
decl
icebp
push
mov
jnp
call
addr16
mov
push
sub
fcoml
sub
cmc
lea
add
add
js
call
es
sub
call
cltd
mov
call
iret
idivl
dec
fidivrl
imul
call
add
call
add
add
div
xchg
lcall
dec
xor
add
add
xchg
pop
fiaddl
call
xor
add
out
mov
lret
callw
cwtl
inc
call
call
add
and
add
test
enter
ror
loope
dec
in
jns
test
sbb
push
add
int
xchg
jne
fildl
in
mov
scas
pop
and
loopne
jl
and
add
shr
shr
imul
addr16
add
xor
call
outsb
dec
sub
call
add
add
fcmovne
out
xchg
add
add
add
jl
add
and
add
add
add
sub
call
push
mov
call
in
add
mov
mov
add
xlat
div
fnstcw
loopne
dec
jecxz
mov
cmp
add
mov
in
callw
xchg
sbb
callw
call
call
dec
jnp
add
pop
mov
test
inc
call
sbb
dec
sub
mov
mov
mov
add
dec
pop
inc
call
lods
pop
shr
xor
add
call
add
add
es
loop
movsl
call
loopne
dec
cmp
mov
push
add
xor
add
add
push
cmp
add
and
add
sbb
add
jp
mov
jnp
add
in
cmpsl
call
aam
adc
add
rcll
mov
out
cmc
xchg
shr
xchg
adc
add
repnz
add
inc
add
stos
repz
inc
call
popa
add
adc
add
iret
add
and
call
call
mov
jo
add
mov
call
and
add
sub
int3
and
add
add
or
int
call
into
mov
mov
adc
add
call
mov
jb
add
arpl
add
mov
mov
lods
mov
into
cmpsl
call
jmp
add
inc
call
jno
add
mov
xor
add
outsb
push
xchg
or
add
mov
fmuls
dec
sbb
shr
add
and
add
mov
inc
add
addr16
cmp
mov
callw
or
mov
jmp
xchg
lret
sub
call
shr
call
call
fwait
cmp
cli
lock
add
add
enter
lea
call
and
add
add
stos
mov
call
inc
add
loopne
push
outsb
jecxz
dec
xor
add
add
repnz
mov
fisubrl
push
add
mov
popf
jecxz
in
inc
add
daa
call
add
cwtl
sub
xor
add
xor
pop
mov
sub
xor
add
call
imul
xchg
pusha
add
mov
ja
dec
xchg
inc
call
add
xchg
push
xchg
jno
add
call
call
sahf
sti
iret
scas
aaa
lret
add
lea
add
inc
add
and
notl
lret
cmp
or
inc
call
sub
fstp
mov
add
cmp
call
sahf
sbb
testb
add
add
dec
outsl
movsl
call
add
ja
test
gs
add
testb
popa
add
outsb
test
jmp
add
and
add
fistpll
call
callw
shr
bnd
call
and
add
add
and
add
add
fs
je
inc
call
and
add
call
add
dec
iret
pop
mov
stos
scas
inc
add
call
sbb
push
enter
out
push
add
nop
cli
test
lahf
or
mov
pop
in
xlat
shr
mov
aam
call
add
push
jbe
jo
add
mov
adc
add
call
call
add
lods
cmc
pusha
add
jbe
sarl
push
movsl
call
add
inc
call
add
fldt
add
js
add
sub
popf
mov
fucomp
int
add
cmp
add
jmp
call
loope
push
pop
mov
sarb
call
cmp
add
and
add
cmpsb
call
out
ret
call
nop
sub
push
xchg
test
lcall
mov
fimuls
call
dec
sbb
pop
xor
add
add
ret
call
add
aas
or
call
fists
add
add
lahf
in
sbb
add
ficoml
add
add
gs
fdivl
add
scas
pop
shr
fs
call
call
sub
ja
js
lock
rorb
add
fmull
or
or
call
stc
pop
and
mov
sub
into
in
enter
ljmp
xchg
out
rcr
icebp
cmp
or
hlt
pop
int
push
int3
imulb
add
sbb
add
dec
int
or
jnp
xor
pop
call
jae
add
pushf
mov
add
add
jg
call
add
aad
call
jecxz
xchg
incb
add
fisttpll
push
xchg
pop
dec
cld
or
scas
xchg
and
add
add
push
pop
int3
bound
add
fisubl
repz
call
inc
add
push
add
adc
add
stos
xor
add
add
call
call
and
add
xor
dec
mov
add
call
add
cld
mov
call
lcall
bound
add
xchg
das
sbb
push
shll
add
shlb
add
add
call
mov
mov
add
add
add
add
mov
fcomps
mov
test
jmp
sbb
call
add
xor
mov
add
mov
call
add
xor
dec
jno
add
repnz
call
or
add
repnz
pusha
add
pop
fbld
add
out
sub
jne
pop
xor
add
add
movsb
call
out
mov
fisubrl
rolb
add
pushf
lea
fists
enter
mov
cmp
lea
call
add
int3
pop
ja
inc
call
sub
in
test
call
cmp
jg
mov
call
mov
cmp
xchg
cld
mov
shrb
xchg
cmp
pop
mov
call
add
test
callw
movsl
call
pop
call
inc
call
lahf
ss
add
push
add
sub
and
and
add
sbb
add
out
ljmp
rorb
test
mov
call
pop
not
dec
adc
add
call
in
adc
add
sbb
rorb
call
cmp
call
call
outsb
push
sub
adc
add
sub
or
call
dec
sbb
jp
sub
imul
mov
push
add
push
call
sub
call
add
lock
sbb
mov
pop
call
lcall
outsl
es
ljmp
add
sbb
call
or
add
call
call
sbb
xchg
mov
add
add
loop
aad
call
call
call
push
call
pop
repnz
mov
lods
mov
push
add
push
mov
add
call
call
call
shr
push
call
add
sbb
adc
add
out
insb
aam
dec
sbb
callw
xchg
add
pop
pop
jp
add
cmp
call
add
add
and
add
add
add
sbb
loopne
push
pop
int3
sub
xor
add
cmp
or
add
jae
add
call
out
mov
add
sub
mull
mul
call
push
aaa
and
push
and
add
iret
jno
add
addr16
call
xchg
fcmovu
loope
jbe
call
aaa
jnp
pop
rolb
call
add
or
push
add
add
add
add
add
xor
add
call
insb
aad
test
dec
cmpsl
call
call
sbb
add
sub
stos
jnp
sbb
call
iret
or
add
fwait
out
push
add
inc
call
add
call
add
mov
shlb
add
sub
cmpsb
call
dec
add
add
decb
int3
xchg
and
add
add
sbb
push
dec
es
call
movsb
call
add
callw
fdivrp
adc
add
add
push
add
cwtl
pop
sub
inc
call
add
adc
add
xor
add
shr
add
and
add
call
call
push
call
outsb
or
push
add
movsl
call
inc
call
add
call
shr
mov
call
call
sub
test
jae
add
add
jmp
inc
call
call
pop
in
cld
dec
push
sar
xchg
or
add
pop
call
xor
push
add
and
add
rclb
add
jecxz
ret
call
fs
call
add
add
add
bound
add
add
in
call
add
in
js
and
add
call
mov
or
cmp
or
pop
call
lcall
call
push
add
push
call
lahf
fnstsw
call
fwait
jl
add
in
and
arpl
add
imulb
jle
add
pop
call
xor
add
fiadds
xchg
scas
jg
fs
mov
add
add
lahf
repz
adc
add
into
lcall
add
call
add
adc
mov
aas
xchg
repz
mov
out
pop
lods
js
call
pop
adc
add
call
mov
gs
and
mov
mov
shr
pop
add
add
call
call
mov
call
aaa
and
inc
call
xchg
dec
lret
ret
call
dec
callw
add
shr
call
sbb
call
adc
add
xchg
in
and
add
call
and
add
int3
sub
call
add
xchg
je
call
sti
push
dec
ds
in
outsb
out
or
lret
add
ret
add
call
aas
rdpmc
add
dec
jbe
xchg
ret
call
add
mov
cmpsl
call
add
pusha
add
testb
call
ficompl
mov
out
and
add
add
inc
add
dec
int
call
add
repz
in
gs
js
dec
xchg
jle
enter
cmp
and
add
mov
clc
lret
ret
add
cmp
call
add
pop
xor
add
add
jb
add
in
arpl
add
call
call
ret
call
ds
jp
pushf
in
sarb
add
insb
push
add
jp
call
repz
lcall
xchg
mov
cmp
dec
dec
sub
pop
pop
notl
add
push
add
push
call
rclb
add
bnd
add
test
js
test
xor
add
push
add
pop
icebp
out
dec
popa
add
fsubrl
ljmp
mov
lods
mov
add
and
add
call
sub
and
add
stos
and
call
mov
inc
add
inc
call
cli
pop
rclb
push
and
movsl
call
xor
add
mov
mov
sbb
dec
inc
add
movsb
call
sub
push
mov
in
daa
call
lods
sub
sub
cmp
call
call
push
call
add
adc
cmc
out
call
mov
add
jge
add
callw
mov
xor
mov
add
or
inc
add
mov
add
adc
add
in
sub
fdivl
call
add
mov
add
shrb
shr
add
int
arpl
add
std
test
je
mov
inc
call
call
add
push
adc
mov
out
push
add
add
add
call
xchg
push
jge
and
add
call
add
and
pop
insb
ja
call
add
mov
add
mov
insl
mov
callw
aad
mov
push
call
xor
test
xchg
enter
nop
pop
push
in
or
mov
call
nop
aam
mov
cmpsl
call
call
pop
adc
or
add
lret
jne
cmpsb
call
dec
or
mov
push
add
inc
call
call
cmpsl
call
imul
call
call
jns
xor
add
add
xor
add
bnd
int
call
call
add
lret
add
call
sub
ret
call
jecxz
mov
xor
add
add
add
adc
add
pop
dec
cli
add
add
jno
add
call
rcrl
jnp
addr16
call
add
add
call
es
push
jle
fwait
es
sbb
pop
call
add
mov
sbb
and
add
add
adc
add
loope
popa
add
cmp
or
and
add
dec
and
add
add
cmp
call
hlt
inc
add
or
mov
nop
push
xchg
fildll
call
testb
sti
inc
add
mov
call
add
dec
out
mov
out
dec
loop
shr
or
ds
add
dec
mov
call
push
xor
add
in
scas
jnp
inc
call
call
call
sub
add
add
add
add
mov
push
insl
mov
in
rcrl
call
jl
call
add
push
ljmp
idiv
or
fldenv
out
mov
call
call
sub
rorb
jecxz
out
xchg
fisubrl
call
pop
add
test
imul
call
in
lcall
add
sub
call
call
push
das
sub
dec
xor
add
call
rcrl
cmp
cmp
add
test
push
call
jg
fdivp
adc
add
out
into
mov
sub
add
call
jne
add
add
add
aas
mov
push
mov
call
call
nop
sub
add
cltd
mov
add
jae
add
push
call
jbe
fs
idivl
pusha
add
mov
gs
addr16
mov
add
lods
icebp
inc
call
pop
ss
stc
divb
jno
add
xchg
or
loopne
repz
call
add
popa
add
mov
and
dec
push
add
adc
stc
dec
not
shr
pop
sbb
out
dec
adc
arpl
add
call
nop
adc
add
push
out
ficomps
leave
xchg
xchg
sub
call
rclb
add
mov
add
mov
int
add
inc
call
inc
add
pushf
out
jb
add
int3
outsl
aaa
in
icebp
fwait
call
xchg
dec
sub
test
call
call
ds
push
sahf
push
add
aas
pop
pop
mov
out
mov
add
adc
add
add
push
xor
add
call
add
ja
cmp
call
shll
push
loop
cs
in
push
call
cli
xchg
adc
add
push
sub
add
cli
aam
add
add
call
ja
jae
add
in
insb
test
or
insb
xor
add
call
jg
addr16
aaa
jmp
add
fimull
sbb
dec
cmp
rolb
call
mov
call
add
cmp
adc
add
sti
sub
jle
test
or
ja
call
arpl
add
jle
int
call
decl
fwait
push
mov
bound
add
lods
sbb
shr
xor
add
call
mov
call
call
inc
call
add
dec
test
movsb
call
add
mov
aad
mov
mov
lahf
jg
push
add
js
mov
add
add
sub
sub
add
sub
arpl
add
push
cs
call
lret
and
add
jecxz
aas
arpl
add
test
cmc
sub
add
add
dec
add
push
cmp
xchg
shr
call
inc
call
stos
pop
call
add
idiv
jmp
popf
aam
add
imull
xor
call
call
out
mov
add
sub
fnstsw
shr
call
jp
call
add
cmp
xor
add
call
jns
jne
pop
pop
lahf
mov
mov
sub
and
fs
call
sub
fdivs
add
mov
sub
shr
cwtl
jns
pop
push
mov
add
sub
shll
call
sub
shlb
jne
add
xchg
in
sub
call
add
call
add
and
add
call
call
and
add
lock
and
or
add
cmpsl
call
call
push
adc
add
add
or
sub
call
add
call
int3
mov
insl
loopne
mov
sbb
filds
arpl
add
pop
sbb
pop
call
call
push
and
add
add
mov
mov
fdivs
add
xlat
xor
add
lret
call
add
pop
int
xchg
cld
mov
call
add
pushf
loopne
jg
call
call
nop
callw
mov
adc
add
add
add
call
mov
pop
jae
add
mov
sti
nop
cmpsl
call
sti
std
insb
xchg
or
mov
ss
pop
push
gs
add
sbb
inc
call
add
icebp
jg
sbb
sub
add
cwtl
mov
push
push
clc
push
add
xor
add
add
jg
adc
mov
call
xchg
push
adc
add
ss
mov
cmp
adc
loopne
and
add
add
enter
cld
jo
add
call
jae
add
add
add
add
and
add
divb
add
xor
call
jmp
jne
call
clc
mov
call
fs
insb
push
mov
in
leave
stc
or
mov
add
call
push
dec
cwtl
std
adc
add
or
xor
call
call
fistpll
add
add
add
push
fisubrs
call
xchg
dec
out
add
add
add
add
lods
adc
add
cltd
out
sbb
add
mov
call
call
call
add
jb
add
push
add
mov
push
call
mov
call
loopne
fwait
cs
call
call
call
add
jne
movsl
call
fs
add
inc
add
mov
cmp
jl
add
icebp
movsb
call
shr
xchg
and
add
xchg
shll
add
push
pop
mov
in
shr
push
call
call
jge
pop
xchg
shrb
test
mov
inc
call
call
xchg
ljmp
mov
xchg
mov
mov
sub
fstpl
lods
mov
sbb
mov
call
sub
sub
out
jmp
cld
loopne
insl
pop
pop
out
mov
cs
sub
cmp
dec
ss
ficompl
add
mov
add
sub
inc
add
fidivrl
pop
out
inc
call
fdivs
or
call
add
insl
cmp
popa
add
int
call
add
add
add
mov
mov
push
sub
add
add
fcomps
jbe
dec
inc
call
add
call
mov
cmp
test
das
jmp
call
insl
cmc
mov
add
sub
add
cmp
jne
adc
add
call
enter
add
add
call
popf
dec
sub
call
pop
aas
cmp
icebp
mov
xchg
vmulps
mov
mov
lods
in
mov
call
jne
add
add
mov
aaa
jno
add
add
mov
add
outsb
cli
mov
xchg
push
add
add
call
push
and
add
sub
add
add
call
testb
or
movsb
call
add
lock
adc
add
adc
test
sbb
call
push
cmp
add
add
xor
add
jg
das
pop
push
add
fwait
rol
call
outsl
push
add
mov
cs
call
call
xchg
cmpsl
call
sub
mov
std
arpl
add
cwtl
mov
jp
int
xchg
rorb
add
jnp
or
add
cmp
add
jmp
outsb
sbb
sub
call
and
add
mov
fs
add
mov
jecxz
cmp
call
outsl
bound
add
sub
call
call
jae
add
add
call
add
add
xor
add
or
mov
addr16
dec
mov
insb
out
sub
and
add
call
call
add
lock
call
call
ret
call
add
jns
mov
push
callw
call
add
mov
add
add
ljmp
call
mov
sbb
arpl
add
add
lods
outsl
rorl
call
add
jmp
push
add
test
or
shr
add
push
add
add
cmpsl
call
call
pop
pop
cmp
lcall
add
pop
call
add
jl
dec
jmp
shr
shr
xor
sub
stos
ljmp
add
ficoms
mov
push
cld
repz
add
fsubl
in
scas
icebp
jno
add
add
shr
lea
add
ja
mov
dec
mov
add
mov
aam
lods
pop
adc
xchg
xor
add
call
add
add
add
mov
pop
aaa
inc
call
sbb
mov
repz
call
call
inc
call
add
sti
lret
scas
dec
dec
lea
fdivr
pop
adc
add
dec
mov
jnp
push
add
jecxz,pt
mov
push
sub
lea
call
add
pop
push
add
jo
add
add
mov
jmp
jl
add
add
add
push
call
aas
clc
cld
fnstcw
dec
dec
jb
add
jbe
push
add
and
add
add
popa
add
mov
or
cld
sbb
jae
add
call
mov
call
call
cmpsb
call
call
add
adc
call
and
add
call
fmuls
inc
call
push
push
test
jle
call
pushf
dec
aad
call
add
add
inc
add
dec
mov
jecxz
arpl
add
xlat
jb
add
lods
and
add
add
scas
lcall
fwait
aaa
push
fldt
call
add
jo
add
into
iret
lock
call
add
outsb
imul
aas
idivl
pop
xor
add
add
test
or
lahf
call
ret
call
loopne
or
add
adc
add
push
scas
jecxz
cmp
adc
add
add
movsl
call
add
call
rol
call
jle
call
cli
sub
out
int
call
add
add
cs
lods
fsubrl
arpl
add
add
gs
popf
icebp
shll
add
sbb
call
call
aas
sub
mov
sbb
call
es
add
aad
loope
sub
dec
hlt
jno
add
push
add
mov
xlat
fwait
and
add
add
scas
imul
add
cmp
call
call
imul
xlat
mov
call
pop
sbb
add
loop
popl
mov
shlb
push
add
cwtl
xor
push
mov
call
call
add
movsl
call
add
std
add
add
inc
add
sub
lcall
cmp
and
add
add
ds
popf
mov
add
add
popf
lret
pushf
xchg
or
dec
cmp
fadd
call
call
sbb
lahf
ret
call
call
aam
cmp
sub
sbb
add
mov
into
fmuls
out
repnz
add
add
fisttps
mov
xor
add
add
fimull
pop
fistl
add
jle
add
and
add
pop
cmpsb
call
call
iret
push
testb
add
sbb
call
and
add
mov
clc
stos
loop
out
test
adc
jne
call
add
mov
jg
cmpsl
call
into
lcall
mov
sbb
pusha
add
enter
shrb
add
sub
call
add
call
jb
add
ljmp
add
sub
add
mov
add
popf
mov
sub
pop
or
cltd
mov
call
sti
push
add
cmpsb
call
add
repz
lret
lods
fistl
add
shr
lret
pop
xor
add
dec
jmp
xchg
inc
add
xlat
fs
add
adc
sub
add
clc
push
adc
add
ja
add
dec
mov
add
js
into
jne
pop
xor
add
fldl
adc
add
add
add
cmpsl
call
cmp
call
cli
cwtl
clc
sub
aaa
xor
rol
call
add
idivb
add
jns
xor
addr16
xchg
push
call
call
inc
call
mov
dec
jmp
add
stos
xor
add
add
into
mov
into
sbb
sub
push
call
push
out
or
sbb
sbb
call
add
dec
jno
add
add
add
rclb
add
pop
outsl
pop
mov
and
add
add
and
sub
add
and
add
sub
out
insl
cli
adc
add
add
shr
call
ror
jbe
sbb
push
call
call
adc
add
insl
jmp
mov
sub
ss
fcmove
sub
call
sub
jp
xchg
mov
or
and
inc
add
in
movsb
call
or
add
pop
xor
add
xchg
in
fdivp
xlat
dec
jl
stos
arpl
add
in
imul
fistps
call
jg
add
aam
test
adc
add
cmp
filds
push
shrl
repz
dec
and
add
das
sub
call
fisttpll
call
call
in
sub
call
test
cwtl
jp
into
xlat
xchg
test
mov
add
call
pusha
add
and
add
in
aad
jne
call
add
idivb
sub
call
out
enter
sub
stos
lahf
fstps
add
add
call
adc
add
add
mov
call
xchg
mov
fs
and
add
push
jl
outsb
in
push
jg
ficompl
push
add
cwtl
pop
shlb
pop
call
jmp
aaa
das
cs
xlat
hlt
mov
adc
add
add
lret
xchg
test
dec
mov
or
inc
add
xor
add
add
lea
call
test
push
pop
lahf
jg
mov
adc
add
add
jb
add
mov
add
jge
add
adc
add
dec
mov
dec
mov
into
jns
lret
adc
add
outsb
adc
add
add
jp
pop
sub
mov
out
cmpsl
call
cmp
add
sbb
test
arpl
add
in
sbb
icebp
mov
jecxz
xor
add
out
pop
roll
xchg
mov
call
cmc
insl
js
call
je
movsl
call
int3
xor
push
cmp
stos
dec
or
call
cltd
xlat
jne
add
jl
sub
es
call
callw
call
call
call
decl
inc
add
out
push
call
mov
mov
out
xor
add
add
scas
or
in
inc
add
pop
xchg
jb
add
leave
mov
pushf
jno
add
call
je
add
popa
add
jnp
into
call
call
sub
call
push
lods
pop
mov
add
add
add
add
call
add
cltd
pop
lods
pop
fstp
cmp
add
adc
test
xor
add
cmp
add
call
lods
push
add
push
add
fldl
xchg
fsubrs
add
sbb
xor
add
sub
test
add
xchg
sbb
pop
cmp
inc
add
sub
call
loope
sub
call
jge
push
add
mov
xchg
addr16
sbb
mov
mov
pop
pop
push
inc
call
fs
lods
pusha
add
fnsave
ds
testl
add
fists
call
call
jbe
inc
call
add
xchg
mov
jmp
call
repnz
adc
add
cmpsl
call
add
clc
push
int3
call
add
leave
cmp
add
xor
add
call
jae
add
add
fwait
inc
call
cmp
inc
call
mov
lea
add
cli
sub
test
mov
cli
insl
jo
add
sub
push
in
xchg
cld
adc
add
call
call
add
mov
mov
cld
mov
outsb
ds
loope
stos
imul
xor
pslld
aas
iret
mov
add
mov
icebp
rorb
test
add
outsl
xchg
lret
or
loopne
divb
add
dec
add
dec
into
fwait
sub
call
insb
ss
add
lods
test
call
add
push
call
mov
push
add
mov
call
out
mov
mov
pop
call
lret
jno
add
add
push
xchg
movsl
call
pop
sbb
add
sub
call
mov
sub
faddl
add
scas
xchg
fstps
add
add
aam
inc
add
ljmp
dec
addr16
insl
or
add
leave
sub
movsl
call
mov
sub
cmpsl
call
sub
mov
call
call
mov
add
insl
in
adc
add
call
outsb
push
call
inc
call
mov
or
testb
imul
add
sub
adc
add
add
call
out
leave
pusha
add
aam
std
call
add
cld
stos
outsb
leave
in
pop
adc
add
add
add
mov
sbb
call
add
callw
add
push
negb
ljmp
xchg
sahf
sbb
call
sahf
mov
sahf
fwait
push
xor
sub
call
push
add
cmp
test
inc
add
mov
lods
imul
pushf
sub
add
xchg
aad
adc
jecxz
cmc
mov
xchg
mov
xchg
div
add
add
je
add
or
add
dec
dec
scas
add
aas
shr
repz
jle
mov
push
jge
repnz
adc
add
add
xchg
jns
jne
xchg
xchg
pushf
cmp
add
into
sub
jl
into
repnz
clc
jb
add
call
add
jae
add
jmp
call
add
fsubl
add
call
jp
cmp
push
dec
out
stos
shr
add
in
int
call
dec
ljmp
add
inc
add
test
add
scas
in
daa
call
sti
and
add
xor
add
add
outsl
fstpl
fnstcw
add
call
add
callw
scas
pop
pop
xor
add
add
call
add
cmp
cltd
xor
add
call
callw
add
add
add
out
arpl
add
callw
sub
call
pushf
sbb
call
mov
cmc
sub
lret
call
call
pusha
add
push
add
and
hlt
cmpsb
call
sahf
add
add
not
jp
xor
add
movsb
call
lods
jne
call
sbb
in
lret
or
movsb
call
sbb
jbe
push
add
stc
call
add
push
push
add
das
xlat
aas
mov
add
push
jle
call
mov
jle
mov
push
mov
call
add
jmp
sti
sbb
push
pop
repz
push
push
fimuls
mov
add
negb
push
pop
cwtl
ss
jmp
pusha
add
fisubs
call
add
add
or
sbb
imul
xor
add
call
call
mov
cwtl
mov
pop
cmc
cs
repz
cmpsl
call
ficomps
call
add
add
call
call
call
mov
imul
add
jg
inc
call
rorb
sub
xor
pusha
add
or
call
mov
add
mov
pop
mov
call
adc
add
mov
nop
insl
and
mov
xchg
rclb
sub
and
add
out
fnsave
jno
add
add
call
add
call
ss
sbb
call
sar
pop
xchg
aam
pop
push
call
aaa
dec
shll
adc
test
add
push
mov
add
jmp
popa
add
add
add
add
bound
add
fimuls
int
sub
mov
lcall
scas
test
pop
call
das
lret
shlb
call
mov
cmp
push
fs
sub
call
test
inc
add
daa
call
add
cmovae
add
add
add
push
mov
inc
call
call
call
cmpsb
call
add
add
push
jecxz
sahf
js
call
in
mov
movsl
call
xchg
cltd
fistpl
pushf
pusha
add
call
add
add
add
mov
push
loopne
bound
add
cld
cmp
movsb
call
sahf
out
popa
add
mov
adc
add
nop
pop
loopne
je
add
into
pop
call
das
inc
add
mov
mov
call
or
call
jno
add
add
enter
mov
push
add
mov
mov
call
callw
inc
add
pushl
add
mov
and
add
cmp
cmp
add
add
jmp
call
call
jl
call
mov
mov
add
add
mov
add
or
jbe
call
call
xor
add
ret
call
add
jecxz
jp
add
shr
add
je
call
testb
jne
call
xchg
adc
add
out
cmp
add
dec
lcall
out
mov
mov
adc
add
rcll
add
call
call
icebp
bound
add
push
add
jno
add
call
loope
ss
cwtl
fcompp
iret
das
mov
and
add
rclb
loopne
dec
push
dec
and
add
sbb
mov
stos
mov
imul
or
in
mov
sbb
call
js
and
dec
sub
push
rcr
stos
inc
call
add
push
aam
xor
add
xor
add
call
call
lods
sub
dec
add
add
mov
add
loopne
shl
xchg
jmp
daa
call
call
mov
cmp
add
cmp
call
call
add
sti
fnsave
and
mov
pop
sub
call
aad
call
call
call
ret
sub
xor
add
push
mov
fs
call
xor
call
xor
pop
shr
dec
push
mov
add
dec
pop
call
and
add
call
or
push
add
and
call
mov
call
out
mov
sub
loope
mov
add
mov
inc
add
std
sub
call
inc
call
stc
test
sub
es
stos
out
cli
push
call
sub
cmp
add
pop
test
addr16
call
xor
add
call
add
jecxz
dec
aad
mov
call
or
mov
add
mov
cmp
inc
add
push
cli
scas
cmp
and
add
fwait
mov
cmp
push
call
shr
jb
add
sahf
inc
call
rdpmc
add
xor
cs
xchg
mov
push
push
add
cwtl
pop
sbb
lret
rorb
xor
add
add
fldenv
add
mov
add
mov
lahf
inc
call
add
imul
sub
adc
add
callw
add
fistl
mov
and
mov
sub
inc
call
sbb
add
add
call
add
sbb
enter
call
callw
mov
push
or
addr16
call
in
dec
stos
and
add
lahf
jmp
cmp
fcom
int3
call
inc
add
lea
sub
aam
outsb
pusha
add
cmpsb
call
add
inc
add
inc
call
ds
inc
call
jmp
add
or
and
dec
adc
cmc
outsb
pop
call
jmp
es
add
add
push
add
cmp
je
sbb
cli
popf
pushf
aaa
call
push
add
push
add
out
mov
cs
push
add
push
push
fwait
add
add
add
scas
and
add
add
outsb
sub
hlt
sub
call
loope,pt
shll
push
add
std
jle
ja
call
sub
sub
lgs
call
or
outsl
fcomps
push
jp
call
or
push
jmp
add
dec
mov
add
cs
pop
jl
sub
mov
add
add
insb
test
cmovge
mov
inc
add
cmovb
add
add
sub
call
sub
mov
pop
mov
ret
mov
add
xchg
sub
call
sahf
sub
vmovaps
or
call
call
add
jae
add
mov
add
jmp
and
fs
dec
icebp
adc
add
addr16
cli
stos
and
add
pop
addr16
cmp
add
mov
cld
sub
test
cmp
and
add
add
gs
call
add
in
dec
in
add
call
aaa
mov
std
leave
jbe
in
push
aas
jecxz
adc
jle
add
and
add
mov
pop
jo
add
call
call
fiadds
add
pop
dec
inc
call
mov
call
mov
or
add
cmc
shrl
sti
call
call
xchg
push
add
or
adc
int
call
add
add
in
mov
dec
scas
push
add
push
repz
pop
test
shlb
add
in
mov
call
nop
xchg
vmovups
add
mov
add
int3
xchg
out
ret
call
add
push
movsl
call
jmp
adc
push
in
sbb
mov
fildl
add
shlb
add
aaa
call
push
sub
call
and
add
call
stc
ss
add
cmc
int
pop
pop
outsb
jbe
loop
bnd
call
pop
mov
call
cmp
movsb
call
cld
add
ret
call
in
push
add
aas
ds
and
out
sub
lahf
mov
call
fldenv
add
add
add
and
add
in
fldt
cltd
testb
cmp
add
add
fistpll
pusha
add
xor
hlt
add
add
fs
scas
inc
add
sub
push
daa
call
jno
add
push
sub
call
mov
push
call
icebp
mov
out
js
loop
mov
jge
inc
add
inc
add
aad
addr16
clc
enter
test
inc
call
call
add
lea
add
add
add
mov
add
fs
in
mov
sub
jb
add
add
cmc
in
sti
adc
add
into
fidivl
add
add
add
or
call
or
out
mov
call
or
add
xlat
dec
mov
add
cmp
push
push
call
push
add
xchg
and
add
add
xchg
loopne
lods
mov
call
mov
add
int3
mov
add
dec
rclb
add
loop
cmp
call
mov
mov
add
sub
leave
add
inc
add
push
xor
add
jmp
inc
call
xlat
jae
add
xor
add
jb
add
or
call
add
add
call
call
mov
js
movsb
call
rorb
add
ret
add
aam
mov
call
xchg
ljmp
ss
das
xor
fisttps
mov
arpl
add
imul
add
cltd
adc
add
inc
call
aaa
scas
call
call
cmc
loopne
mov
call
cmp
inc
add
jno
add
sub
add
push
add
movsl
call
int
mov
cs
add
mov
call
hlt
and
lret
test
pop
shr
mov
call
add
inc
call
mov
sub
call
outsl
push
call
add
test
add
clc
adc
add
test
ror
mov
call
stos
pop
dec
sub
mov
mov
call
call
mul
call
add
clc
push
add
add
mov
inc
call
mov
jno
add
sub
cli
mov
call
test
aam
add
add
aas
jnp
ret
xchg
jge
call
aaa
push
call
add
sub
dec
jns
fisubrs
call
sub
call
jge
ja
call
cs
fdivrl
call
call
frstor
sbb
mov
add
orps
call
mov
stos
je
call
call
mov
mov
dec
in
or
add
lret
add
xchg
jno
add
mov
call
nop
loope
sub
aaa
xchg
jne
sbb
inc
call
cld
dec
mov
add
adc
add
dec
push
add
cs
add
xchg
sub
nop
mov
mov
call
dec
in
movsl
call
inc
call
jmp
es
or
add
mov
call
add
call
add
daa
call
stc
sub
dec
mov
mov
call
ret
lret
int3
mov
add
aam
ljmp
call
push
fisubrs
in
setne
call
pop
ret
add
sbb
push
imul
call
ja
call
jbe
call
aas
insb
mov
add
call
lods
scas
xlat
pop
sub
add
in
pop
inc
call
out
sbb
ret
out
jp
adc
add
add
dec
sarb
outsl
or
lods
shr
pop
dec
pushf
pop
test
rolb
add
mov
call
into
jl
call
add
or
add
repnz
add
sub
sbb
int
dec
bound
add
ds
scas
test
lods
xor
sub
loopne
aad
call
repz
cwtl
popa
add
ljmp
jecxz
dec
xchg
cltd
test
aas
out
or
insl
mov
lea
call
add
mov
std
inc
add
dec
push
adc
add
sbb
call
outsb
je
cli
push
call
jg
xchg
pop
in
xor
pushf
push
cmp
call
call
mov
add
fucomip
mov
pop
inc
add
ds
push
add
call
xor
dec
aaa
xchg
mov
jne
xchg
paddq
jmp
call
add
push
xor
add
sub
call
and
add
into
push
call
xchg
dec
jbe
jge
out
testb
bound
add
call
xchg
mov
jbe
inc
call
inc
call
call
mov
mov
call
add
or
mov
insb
mov
pop
es
lods
sub
call
add
call
xchg
cmpsb
call
mulb
sub
mov
call
in
sub
es
call
outsl
sub
add
jmp
jo
add
scas
ret
call
es
xor
add
fwait
movsl
call
jl
pushf
pop
mov
mov
add
cltd
scas
ja
mov
sahf
xor
add
add
fsub
call
push
dec
outsl
xchg
pop
call
shr
add
cmp
lret
add
faddl
in
sbb
call
inc
call
push
es
add
inc
call
add
xor
into
out
push
add
int
xchg
in
lods
push
add
push
add
testb
icebp
loope
xor
call
repz
call
xor
add
lock
sub
call
hlt
int3
cwtl
push
sub
pop
callw
pop
lret
call
rclb
add
pop
sti
push
hlt
fs
xchg
test
out
in
push
call
add
sub
pop
loopne
and
add
xchg
mov
jo
add
sub
mov
out
and
add
jno
add
call
call
add
cmp
cmc
loope
fnstcw
insb
dec
decl
jg
out
xchg
js
mov
mov
dec
fisttps
call
call
add
sbb
mov
call
add
inc
add
dec
es
add
inc
call
add
call
sbb
mov
mov
mov
xor
call
add
add
or
shr
loop
cmp
add
sub
call
or
lea
call
sub
jp
pop
call
scas
pop
sbb
dec
test
or
fst
jl
fldcw
sub
xor
sub
add
call
movsl
call
std
add
xchg
sub
scas
aas
in
mov
pop
add
add
sub
aas
add
add
inc
call
popf
cmpsl
call
add
arpl
add
xor
iret
repz
lods
push
add
test
mov
add
lret
sub
call
call
add
sub
pop
adc
sbb
popf
movsb
call
in
sub
call
push
add
mov
call
add
imul
shr
stos
xchg
mov
mov
call
nop
mov
call
add
icebp
xchg
push
add
or
fcomps
fisttpl
in
mov
aaa
mov
shr
sub
gs
test
or
inc
call
call
add
in
aad
call
cmp
imul
add
cmp
rcrb
mov
adc
rcr
and
add
fidivs
mov
call
dec
inc
add
imul
pop
sub
add
xor
push
fimuls
in
or
and
add
add
xlat
and
add
pop
xchg
jecxz
cmpsl
call
or
add
pop
mov
add
aam
add
mov
incb
lret
sub
xor
add
mov
add
sbb
out
or
scas
out
aaa
cmp
call
jne
sub
add
or
add
dec
ljmp
mov
and
add
add
dec
dec
cmp
out
hlt
inc
add
callw
xlat
inc
add
push
add
cwtl
xchg
ret
call
dec
cmp
call
sub
add
mov
or
sbb
and
add
add
rclb
jp
call
jae
add
stos
mov
call
sub
mov
fs
shr
or
adc
add
jnp
in
mov
call
iret
dec
cmp
add
shrb
scas
inc
call
call
add
xchg
in
stc
push
call
call
add
test
lods
cmp
pop
dec
and
add
movsb
call
add
xor
call
aas
cmpsl
call
sub
pop
xor
add
add
lods
ja
pop
dec
inc
add
dec
je
add
punpckhbw
call
in
nop
dec
sbb
cld
sub
call
add
xchg
push
add
and
add
add
add
call
cwtl
insb
ss
int3
jp
dec
push
add
mov
sub
outsb
movsb
call
out
aad
jnp
lods
test
imul
xlat
cld
inc
add
cmpsl
call
pop
repz
add
add
lahf
aam
call
mov
call
add
add
cltd
cmpsl
call
es
push
adc
add
add
jle
xor
call
call
push
call
loopne
rcrb
mov
and
sahf
sbb
mov
call
outsb
xlat
and
insl
xchg
cmp
add
xchg
lock
jle
push
add
loope
insb
popf
imul
call
call
xchg
call
add
call
sub
test
imul
flds
aas
sub
add
or
mov
loop
or
jne
iret
xchg
test
call
imul
add
add
mov
add
cmc
in
cmp
mov
add
xchg
mov
call
loopne
xor
add
mov
std
push
add
push
mov
sbb
ljmp
add
in
je
pop
sub
out
ret
sbb
call
lcall
insl
loopne
add
add
sub
add
dec
push
add
pushf
xchg
movsl
call
mull
add
insb
scas
sub
mov
push
add
pusha
add
into
fsts
stc
es
mov
fwait
movsb
call
pop
decb
add
add
add
ljmp
mov
test
sub
call
add
int
or
fsubrl
divl
call
decl
push
or
xchg
pop
lods
lret
push
or
call
or
call
cmpsb
call
call
stos
scas
xchg
xor
add
fucomp
push
add
fsubrl
or
fisttpll
jecxz
jge
test
cld
popf
or
in
out
cmc
adc
add
cmp
pop
jbe,pt
pop
mov
add
xchg
in
inc
call
call
aas
xor
add
call
idivl
jne
mov
push
add
add
sub
and
add
add
call
cli
fcomps
xchg
cmp
add
add
movsb
call
add
sahf
sti
out
out
cmp
sub
call
mov
das
ja
or
call
add
add
and
call
mov
fnstsw
cmc
pop
cld
xor
add
push
inc
add
mov
dec
loopne
fstl
add
negb
push
xchg
sub
mov
push
out
inc
call
cmp
call
callw
daa
call
lahf
xor
cs
xchg
sub
add
xor
call
call
add
out
xor
lret
stos
mov
stos
and
add
push
call
in
dec
lahf
hlt
xchg
pop
mov
rclb
std
sarl
inc
call
mov
inc
add
and
add
inc
call
pop
sub
dec
push
fldt
loopne,pt
xor
add
pop
call
push
add
fsubr
cwtl
jb
add
add
mov
aam
add
mov
lret
call
int
fdivs
xor
add
add
mov
call
add
add
xor
add
jb
add
add
icebp
popf
mov
call
add
add
jno
add
add
push
lea
call
shr
repz
sub
icebp
mov
lea
xchg
testb
pop
mov
add
jo
add
add
call
loopne
push
add
add
jle
loop
push
je
aas
dec
inc
add
jg
ss
call
jmp
adc
dec
add
mov
lcall
call
mov
call
add
test
rol
call
add
dec
sbb
jnp
cld
lock
std
cs
repnz
add
add
add
push
add
in
xchg
pop
push
nop
lods
xor
mov
in
push
cmp
add
jp
repnz
jae
add
call
leave
sbb
scas
sbb
mov
jns
call
rcll
call
inc
call
pop
callw
xlat
lock
lret
xchg
push
jno
add
call
or
call
push
into
cld
jle
xor
add
push
call
cmpsb
call
add
adc
add
add
inc
call
call
negb
call
xchg
sub
outsl
aas
xor
add
mov
scas
sahf
and
add
xchg
sbb
call
inc
add
push
adc
add
add
push
push
call
scas
callw
xadd
xor
add
add
enter
aas
sub
call
jmp
call
movsl
call
sti
inc
call
push
add
and
add
mov
test
dec
inc
add
test
lods
dec
mov
mov
filds
push
add
mov
add
mov
call
ds
adc
add
mov
mov
and
add
cmpsl
call
ret
call
jo
add
push
add
scas
sub
add
add
lock
and
call
sub
call
and
add
add
inc
add
dec
cmp
pop
cwtl
mov
js
call
hlt
add
add
inc
add
dec
ffree
call
cmpsb
call
jp
lcall
aam
sbb
add
add
add
push
call
jne
add
add
call
call
sbb
dec
mov
call
xchg
jp
call
add
cmp
pop
push
pop
mull
add
out
push
call
xlat
test
jns
or
out
inc
call
call
jb
add
mov
inc
call
add
xor
test
sub
call
pop
test
call
xor
add
call
call
and
add
call
xchg
lahf
jl
fwait
mov
mov
add
stc
movsb
call
pop
call
add
and
add
add
imul
call
add
push
add
movsl
call
fistps
call
mov
sub
lea
stc
jp
call
cmp
jns
call
add
daa
call
xchg
jb
add
cmp
xchg
xor
loop
clc
lcall
out
popa
add
adc
xchg
inc
add
mov
stc
mov
call
fidivrs
add
jno
add
xor
add
lcall
call
ret
adc
mov
add
and
add
call
sub
add
js
repnz
test
call
add
or
test
call
add
xchg
in
mov
add
add
cmp
pop
sub
call
mov
mov
xchg
fmull
xor
add
aaa
test
outsb
mov
push
popa
add
repz
addr16
enter
dec
sub
lcall
add
insl
fdivs
add
ja
lods
jmp
xchg
dec
jb
add
cmpsl
call
call
inc
call
out
mov
sbb
lock
add
call
fsubl
dec
bound
add
add
insl
cmc
adc
add
add
fdivl
lcall
outsl
add
add
nop
in
push
adc
add
sbb
shr
lahf
pop
es
sub
movsl
call
cmc
bound
add
es
jo
add
sub
add
addr16
adc
add
pop
outsb
int
push
pop
call
xlat
mov
add
aaa
cli
cmp
inc
add
sub
sub
add
mov
add
add
xchg
lods
imul
movsl
call
dec
int3
push
add
callw
add
mov
test
jo
add
xor
mov
pop
aaa
lahf
inc
add
mov
call
mov
out
ret
call
call
add
iret
mov
in
mov
mov
call
add
and
add
and
add
call
fwait
cmp
add
lcall
lret
mov
or
call
add
call
jnp
call
ljmp
std
stc
and
add
add
add
test
xchg
aaa
inc
call
xchg
out
inc
add
mov
ljmp
mov
sub
sbb
add
push
call
add
enter
lods
cmp
or
call
test
addr16
js
call
xlat
repz
test
inc
add
push
dec
gs
call
dec
pop
call
call
mov
call
or
add
cld
jno
add
pop
xor
push
add
jns
adc
add
cltd
outsb
enter
sbb
mov
outsl
dec
jno
add
es
add
add
repz
push
add
push
pushf
adc
stos
fmull
call
arpl
add
add
call
adc
add
mov
add
add
lcall
int3
dec
jg
inc
add
push
pop
call
call
add
sub
jle
out
fcoms
add
add
call
neg
mov
push
call
add
lods
sti
or
call
add
call
out
repnz
inc
call
push
mov
jmp
fcoml
jo
add
cmp
add
call
loopne
call
xchg
inc
add
add
add
cmpsb
call
add
add
cmpsl
call
cld
mov
add
sub
jbe
call
call
add
lret
mov
call
add
popf
pop
repz
das
mov
test
add
add
sub
loopne
test
add
push
push
sbb
fsts
add
jb
add
call
add
push
add
add
call
mov
cmp
imul
out
and
add
call
sub
mulb
add
push
sub
dec
lret
call
call
pusha
add
call
call
call
and
add
or
add
jns
dec
inc
add
ja
fistps
jbe
call
test
out
lock
call
add
ret
call
add
sahf
push
push
call
iret
std
dec
pushf
and
xchg
enter
dec
sub
call
sbb
xchg
ret
call
jnp
adc
test
inc
add
movaps
call
inc
add
rcll
add
and
add
sbb
fcomip
push
call
dec
sti
sub
mov
mov
sub
hlt
dec
outsl
push
add
push
outsb
inc
call
int
call
callw
mov
insl
adc
add
js
cmpsb
call
add
jae
add
fnstsw
push
stos
test
pop
repz
mov
nop
pop
fadd
call
push
sub
xchg
test
lahf
xchg
jnp
movsb
call
add
jecxz
addr16
mov
call
cld
xchg
add
add
call
enter
pop
sub
mov
cmp
pop
insb
push
cmp
dec
loope
mov
add
loop
ret
push
add
jns
adc
add
lahf
pop
xor
add
add
pop
lods
pop
mov
push
aas
push
call
test
fscale
lcall
add
xchg
aas
dec
dec
mov
xor
cmp
pushf
in
pop
popa
add
leave
popf
xchg
test
idivb
call
mov
add
xchg
xor
add
fidivs
rclb
lcall
add
pop
sub
add
jno
add
call
xor
movsl
call
push
cwtl
loopne
test
adc
add
sub
bound
add
daa
call
call
call
call
add
callw
cmpsl
call
call
shrb
call
call
add
rol
call
ljmp
add
sbb
addr16
cmp
add
sub
call
pusha
add
repz
call
adc
mov
push
rcrb
call
mov
add
add
add
decl
aam
call
sub
ljmp
jle
xor
push
jnp
call
js
jb
add
add
add
divb
cmpsl
call
add
dec
pushf
jo
add
mov
call
cmp
add
inc
call
scas
enter
loope
mov
xchg
sarb
hlt
lcall
out
test
call
jne
arpl
add
call
out
icebp
sub
leave
xchg
xchg
aad
add
cmp
add
out
inc
call
loope
sbb
add
ds
add
xchg
bound
add
mov
mov
xchg
outsl
shr
call
add
pop
mov
lods
push
xchg
testb
add
call
pushf
xor
add
lahf
clc
es
add
add
add
call
call
add
add
push
ds
cmp
add
xor
add
jg
add
pop
push
pop
sub
add
arpl
add
call
sti
pop
fxtract
cmpsl
call
inc
call
call
push
add
pop
xchg
mov
jbe
stos
std
push
add
pop
pop
enter
xlat
push
add
rcll
lock
call
call
sub
stos
cmc
lods
dec
daa
call
cltd
into
sahf
or
call
das
das
call
call
jp
fs
call
add
add
repz
mov
add
and
add
lret
inc
add
or
call
gs
mov
lret
cmp
fsubs
icebp
sub
call
insl
pop
sahf
xlat
fstpt
hlt
push
mov
jns
call
stos
inc
add
roll
jge
sub
scas
incl
cmp
cmp
fistl
fcoms
add
add
add
add
add
add
add
add
and
mov
call
add
mov
ss
stos
cli
aad
pop
scas
jp
cld
loop
stos
stos
adc
add
insb
mov
popa
add
jbe
add
cmp
mov
sbb
mull
test
mov
push
add
pop
pop
xor
add
push
cmpsl
call
out
xcrypt-ofb
push
add
xor
add
jbe,pn
outsl
push
mov
and
push
add
or
imul
push
add
test
call
add
call
add
insl
cli
iret
rclb
push
call
ja
es
aas
xchg
dec
test
mov
mov
sub
out
pop
call
rorb
adc
call
add
dec
xor
add
stos
mov
lock
dec
inc
call
xchg
pop
fidivs
add
fisubs
cmp
pop
cmp
lcall
stc
cmp
add
imul
cmp
call
into
pushf
add
std
cli
and
add
mov
and
add
add
sub
hlt
cmp
aaa
mul
call
add
add
callw
add
jb
add
inc
call
loop
sub
jg
movsl
call
sbb
fs
mov
or
call
call
pop
sub
adc
add
mov
call
out
sub
call
xchg
mov
inc
add
xchg
push
aam
add
loopne
adc
add
repnz
push
jb
add
add
call
ljmp
add
pushf
mov
call
es
es
call
push
add
push
mov
enter
add
add
stos
inc
add
ret
call
hlt
cwtl
int
add
cmp
call
ss
add
ret
or
mov
repnz
add
cmc
mov
push
add
and
add
cmp
add
ret
call
add
add
mov
pusha
add
dec
outsb
or
call
add
mov
add
add
inc
add
push
pop
sub
push
pop
daa
call
call
push
ds
call
jp
mov
call
add
addr16
js
arpl
add
add
add
add
push
sub
mov
mov
inc
call
call
mulb
add
sub
call
int
lock
add
adc
add
call
call
neg
pop
je
call
aad
sbb
hlt
push
out
das
mov
add
cld
sti
sar
movsb
call
call
adc
add
add
addr16
sahf
mov
call
add
and
add
call
add
ljmp
mov
add
ss
add
add
cld
pop
clc
mov
add
jo
add
scas
xor
add
adc
add
add
add
call
cmc
pop
call
in
jbe
jnp
repnz
in
xor
add
cmp
xchg
xorps
ss
pop
inc
call
pop
add
ret
adc
add
add
imul
fistps
stc
pusha
add
xor
add
add
add
mov
mov
push
xor
add
add
add
sub
adc
add
aas
ljmp
call
add
cmp
test
add
or
add
call
movsb
call
xchg
mov
add
pop
ret
std
fstl
add
into
call
add
sbb
add
cwtl
in
outsb
inc
add
and
add
add
add
or
pop
in
cmp
call
add
add
add
cltd
push
add
std
pop
int3
sbb
call
cmp
daa
call
add
call
push
add
mov
mov
lret
cld
pop
mov
add
add
add
add
add
call
dec
or
div
adc
add
sub
jl
inc
add
clc
sub
add
inc
add
jnp
add
and
or
xor
or
push
mov
sub
add
jae
add
leave
movsb
call
ret
call
xchg
pop
xchg
negb
nop
callw
and
add
add
lcall
push
add
fidivrs
ds
inc
add
dec
push
adc
pushf
pop
mov
test
das
mull
add
fdivl
add
sarl
outsb
lods
in
test
add
cmp
push
pop
out
shlb
jg
call
and
add
mov
add
cmp
jo
add
call
mov
nop
xchg
imul
pop
callw
lock
call
mov
in
add
push
and
add
loope
jg
call
add
add
add
mov
adc
add
add
call
xchg
or
gs
add
xor
add
ficoms
mov
add
pop
sbb
call
inc
call
add
add
mov
call
call
mov
and
add
call
lock
ljmp
xchg
xlat
or
add
xor
add
push
or
add
pop
ret
call
add
sub
add
dec
push
add
jecxz
inc
call
xchg
mov
jbe
shr
call
pusha
add
inc
add
sbb
add
pop
adc
add
adc
add
hlt
mov
add
outsb
fisubrl
fdivrl
xor
add
scas
add
add
call
and
add
aam
stc
gs
and
add
inc
add
cs
sahf
mov
loope
fiadds
in
roll
jmp
in
cwtl
icebp
cmpsb
call
adc
add
jo
add
add
dec
pop
stc
insl
xchg
out
sbb
add
test
je
enter
add
repnz
add
adc
add
pop
inc
add
sub
in
fstpl
and
add
outsl
int
jg
call
call
ss
add
jl
cmp
call
sbb
arpl
add
push
mov
call
add
aad
call
xchg
mov
pop
cmpsb
call
xchg
mull
add
mov
jae
add
and
add
add
sbb
mov
out
xchg
clc
imul
push
add
sbb
add
in
mov
setl
add
add
add
add
add
jns
mov
lcall
sti
out
and
loopne
cmp
mov
add
jle
add
mov
call
lods
ljmp
mov
cltd
sub
test
seta
push
add
sub
inc
call
add
add
int
xchg
mov
dec
int3
inc
call
gs
add
add
sub
aas
daa
call
add
adc
add
leave
in
cmp
call
cmp
call
mov
jg
mov
call
add
adc
add
push
call
shr
call
add
jp
inc
call
add
mov
add
xchg
stos
out
icebp
dec
jae
add
xchg
cmp
ret
add
or
xchg
mov
call
shlb
dec
xchg
jg
mov
cmp
out
fwait
mov
add
and
add
xor
add
inc
call
mov
pop
fxch
add
add
xor
lods
or
mov
jns
fsts
add
mov
jg
call
dec
sahf
jbe
xchg
mov
mov
call
pop
mov
or
cmp
test
push
add
sti
movsb
call
int3
ss
dec
lea
xchg
mov
inc
add
cmp
push
nop
jge
call
add
dec
rcrb
movsl
call
and
add
add
add
add
add
add
jp
adc
add
add
push
inc
add
adc
add
js
call
xchg
ss
repz
lock
call
call
mov
and
loop
push
add
int3
adc
and
add
adc
add
push
push
add
ss
jg
push
into
movsb
call
call
add
add
sarb
call
sub
sbb
daa
call
add
adc
add
and
add
insb
mov
in
mov
jnp
call
add
sub
sbb
jbe
fucomip
xor
add
add
add
cmp
mov
call
jnp
add
test
mov
fdivrs
jns
call
adc
add
call
and
add
call
js
pop
in
in
fimull
mov
mov
es
cmpsl
call
add
add
add
and
dec
stos
add
add
scas
addr16
call
dec
pop
inc
add
testl
add
sub
add
rcll
add
push
pop
pusha
add
jns
add
sub
add
jle
lret
and
add
call
daa
call
mov
sub
add
or
mov
add
xor
add
adc
add
iret
cs
xor
sbb
stos
punpckhbw
call
dec
sti
nop
movsb
call
add
xchg
loop
test
call
xor
add
mov
xor
add
xchg
cmp
stos
jmp
sbb
jns
xchg
mov
lcall
xchg
cwtl
mov
add
call
call
aas
xlat
jge
add
aam
add
or
add
pop
icebp
jg
call
call
in
arpl
add
lods
inc
add
and
sbb
inc
call
call
mov
add
mov
sahf
mov
sbb
dec
ljmp
add
es
push
hlt
push
call
mov
add
dec
or
mov
out
outsl
repz
clc
and
add
cmp
shr
cmp
testl
mov
ss
sub
bound
add
sub
call
cmp
xor
add
lret
lret
call
sahf
inc
add
or
add
pop
addr16
dec
cltd
stos
lahf
cmc
or
dec
and
add
fsubrl
lea
imul
push
fisubs
nopl
add
call
mov
call
sbb
icebp
rcll
add
roll
pop
jno
add
add
add
pop
call
add
test
notb
xor
add
xor
add
jg
jne
call
call
add
call
xor
xchg
and
add
fs
mov
call
adc
add
inc
call
fidivl
add
cld
sti
lahf
sub
call
inc
add
stos
adc
add
gs
cmc
das
mov
add
mov
incb
stc
sub
inc
call
sbb
add
int3
jmp
mov
cltd
xor
add
add
lcall
call
mov
in
dec
sub
push
sbb
add
jns
call
sbb
ja
ficompl
call
and
add
lock
add
lret
sub
push
inc
add
popf
gs
xor
add
add
daa
call
in
adc
inc
call
mov
call
add
cmp
shlb
call
sbb
xchg
cli
adc
add
in
mov
ret
call
add
pop
or
add
call
adc
add
call
add
jbe
adc
call
add
add
cmc
ficoms
xchg
xchg
out
fs
add
ljmp
call
inc
call
mov
call
fnstenv
lret
in
cs
aad
movsb
call
sub
call
inc
add
xor
add
int
mov
jnp
call
call
push
in
sbb
mov
jae,pt
add
in
mov
insl
pop
xchg
or
add
add
out
add
add
call
fwait
loop
sbb
jbe
and
add
call
scas
xchg
add
sti
lea
add
stc
bound
add
jl
call
add
mov
pop
leave
call
add
add
iret
arpl
add
call
call
ret
call
cmp
pop
cmpsl
call
mov
mov
cmp
sub
add
jae
add
shr
call
mov
pop
test
loope
pusha
add
std
adc
add
call
xchg
inc
call
adc
add
call
add
jle
and
add
sub
add
lods
xor
or
xor
add
ret
cld
cmp
ret
call
movsb
call
sbb
in
pushf
gs
add
sub
out
imul
aad
call
call
add
ffreep
call
push
add
dec
cmp
push
pop
and
add
add
cmp
add
sbb
push
add
out
inc
call
xor
test
ret
cmp
push
add
xchg
fildll
pusha
add
push
stos
test
cltd
sbb
xchg
sub
in
ret
pop
js
add
stos
out
scas
in
repnz
add
cwtl
femms
out
nop
ds
mov
call
call
call
lahf
iret
das
sbb
add
call
add
jb
add
call
jne
xchg
lock
add
mov
sub
or
mov
push
add
xor
add
loopne
push
add
inc
add
pushf
jnp
inc
call
dec
mov
add
je
cmp
push
call
movsl
call
mov
jno
add
cmp
lock
add
jle
call
mov
call
add
shr
call
test
mov
lahf
push
adc
add
pop
test
inc
add
or
inc
add
adc
add
sub
jno
add
ds
cmp
jns
dec
scas
adc
add
push
add
inc
call
inc
call
scas
fists
add
gs
add
je
call
notb
gs
aaa
ficoml
insl
js
shr
sub
cli
xor
add
mov
call
xchg
xchg
enter
call
adc
xchg
stos
xchg
push
mov
call
call
mov
cmp
jae
add
inc
call
inc
call
pop
mov
out
mov
addr16
add
shlb
and
lcall
call
xchg
mov
adc
add
sbb
call
aas
out
sarl
sub
call
mov
add
shr
call
call
out
mov
sahf
ficompl
or
adc
add
call
add
mov
call
call
add
in
dec
scas
or
jg
call
pop
es
xlat
push
add
fstpl
push
sub
push
inc
add
mov
call
pop
vphadduwd
add
sarl
call
popa
add
push
call
mov
rorb
call
call
sub
addr16
push
test
sti
and
add
add
add
mov
adc
add
call
in
push
push
add
stos
dec
mov
das
dec
jp
sub
out
adc
add
mov
add
repnz
pop
push
call
add
mov
call
call
xchg
xchg
sub
add
sahf
push
in
xchg
mov
add
fwait
dec
jge
mov
mov
jle
call
imul
dec
sub
rcrl
ds
push
pop
jo
add
add
and
add
in
cmc
mov
mov
sub
mov
call
and
add
cltd
sub
call
bts
scas
test
out
jg
call
add
adc
movsl
call
jle
cmpsb
call
add
push
call
call
loope
fs
call
add
out
xchg
xlat
js
call
or
call
add
call
gs
dec
sub
call
enter
call
add
add
or
out
aam
mov
mov
insb
shl
fstpt
call
test
div
in
jb
add
add
adc
lock
mov
lods
lret
ret
add
repz
add
ja,pn
call
or
add
call
jl
xchg
xlat
sbb
jae
add
add
addr16
in
fs
bound
add
aaa
popf
jg
call
stos
lods
ss
dec
pop
shr
call
fidivs
rcrb
aad
xor
or
xchg
inc
add
js
jl
add
mov
xchg
mov
push
xchg
cmp
add
sub
add
cmc
out
jnp
call
adc
sbb
call
mov
ss
xchg
cmp
dec
mov
push
jnp
repnz
call
jmp
xor
add
call
xchg
lcall
xchg
sarl
call
xchg
add
add
call
mov
add
xor
add
test
call
adc
add
mov
xlat
call
jp
in
ja
call
add
mov
test
repnz
cltd
push
sahf
cwtl
outsb
loope
jecxz
clc
push
cmp
add
fsubp
call
mov
mov
call
add
cmp
add
shr
in
lret
add
leave
or
jae
add
add
call
add
add
add
shr
call
push
add
or
adc
add
xchg
popa
add
call
daa
call
xchg
push
shr
sub
add
out
sahf
jne
insb
xchg
lea
fcoml
add
pop
jbe
call
std
testb
ficompl
addr16
xchg
jp
call
call
in
dec
push
add
add
add
lock
js
add
sbb
push
inc
add
cmp
cmpsl
call
out
stc
sub
pop
dec
nop
ljmp
pop
and
add
adc
add
daa
call
xor
add
add
add
inc
call
stos
lret
lret
fidivrl
add
add
mov
xchg
or
loopne
jo
add
mov
mov
in
cli
dec
loopne
movsb
call
call
bound
add
das
or
add
sub
push
call
push
call
add
pushf
shr
daa
call
add
sbb
xor
add
mov
xor
add
add
add
pop
cs
call
push
dec
loopne
mov
mov
call
call
adc
mov
jl
add
daa
call
adc
into
push
mov
outsl
mov
sub
add
sbb
jb
add
add
dec
jl
test
add
mov
add
jne
jmp
cs
lret
mov
call
loop
xor
add
xor
add
sarb
call
inc
add
repz
jp
stc
popa
add
sub
lcall
int3
shr
imul
call
mov
adc
fists
lods
cmp
add
rol
call
dec
jne
add
outsl
pop
loop
sub
mov
add
pop
xor
xor
add
out
dec
push
sub
call
into
cmpsl
call
call
mov
inc
add
mov
jmp
mov
call
adc
add
mov
mov
xor
call
push
add
xor
add
mov
add
idiv
daa
call
dec
pop
call
add
adc
add
sub
insb
pop
sub
pusha
add
mov
fistpl
mov
in
or
sub
call
aad
add
or
aam
add
dec
adc
add
pop
cmp
xor
call
jmp
add
aad
add
or
cmp
lret
add
xor
add
stos
dec
in
mov
add
jnp
lods
xchg
sub
add
sbb
pop
call
std
cld
popf
lcall
sub
call
inc
add
insb
jne
call
loop
add
aas
popa
add
adc
add
call
repz
sarb
add
fcmovb
call
fs
call
add
bnd
add
aas
add
outsl
decl
call
call
mov
cmp
fcmovnu
push
add
jg
xchg
xor
call
imul
jle
add
je
call
mov
add
mov
mov
add
in
pop
fsub
call
jnp
add
arpl
add
setno
repnz
add
sub
repz
adc
add
and
add
or
call
aas
std
jae
add
call
out
cmc
inc
call
out
dec
xchg
xor
add
adc
add
add
sub
add
and
xor
add
add
int
pop
dec
stc
dec
mov
add
pop
mov
arpl
add
imul
adc
add
add
repz
rcrl
add
loopne
into
js
sbb
add
dec
or
call
push
call
add
jg
es
cmp
lahf
push
scas
sbb
insb
callw
push
pop
xchg
fisttpll
call
sub
dec
jne
add
sub
call
mov
add
lahf
daa
call
int
add
dec
cmpsl
call
mov
add
push
lods
jb
add
or
pop
stos
fwait
mov
fs
dec
loopne
icebp
divb
add
add
mov
imul
call
add
dec
enter
inc
add
mov
fidivs
jno
add
add
jno
add
add
add
add
add
test
icebp
push
add
adc
add
cltd
and
add
add
test
lods
mov
stos
cli
pushf
idiv
add
jmp
add
aad
add
in
xor
je
call
call
cwtl
lods
in
adc
add
push
add
sahf
outsb
push
call
pop
mov
add
add
adc
add
call
xchg
adc
xor
aam
xor
add
mov
aaa
call
inc
add
inc
add
xchg
loope
fwait
cmpsl
call
fnstsw
call
mov
add
lock
cmp
call
mov
jo
add
imul
add
call
pop
shr
mov
call
call
add
movsb
call
xchg
add
add
add
cmp
xor
add
js
call
ror
adc
add
clc
or
add
loopne
mov
hlt
sbb
std
mov
scas
cld
adc
add
movsb
call
sub
inc
call
add
lcall
popa
add
lods
scas
xchg
dec
pop
div
out
rolb
into
cmp
call
insl
mov
ljmp
clc
lahf
adc
add
call
in
mov
sub
push
pop
sub
add
pop
test
jmp
add
jl
jae
add
and
add
push
add
test
mov
call
movsl
call
cmp
mov
shrl
mov
dec
rolb
add
mov
repnz
movsb
call
call
cmc
inc
add
dec
fiaddl
jae
add
daa
call
push
call
and
push
mov
dec
xchg
pop
call
mov
call
call
nop
jmp
testl
xor
mov
sub
add
ljmp
call
addr16
jmp
insl
sub
xor
add
mov
or
add
add
call
loope
ss
call
jb
add
or
push
int3
push
add
iret
mov
mov
call
inc
call
add
add
inc
add
xlat
call
cmp
sbb
add
add
into
loope
and
bound
add
push
call
push
cwtl
mov
add
jmp
adc
add
mov
cmp
loopne
aam
pop
mov
add
xor
sbb
jb
add
cwtl
cmp
in
out
push
add
cs
add
cld
in
push
mov
jbe
ret
dec
lods
adc
inc
call
repnz
call
add
add
add
ficoms
sub
in
pop
icebp
mov
add
inc
add
xor
add
call
add
in
or
sbb
add
push
imul
add
lret
callw
push
repz
add
push
add
sahf
sub
sub
or
add
add
add
xchg
mov
add
inc
call
cli
stc
lock
call
jp
mov
pop
xchg
out
lret
cmp
sbb
or
movsl
call
mov
ss
pop
mov
xor
add
add
sub
or
fcmove
push
mov
mov
and
cmpsb
call
add
adc
add
add
std
jp
call
rcr
lods
xchg
call
callw
arpl
add
sahf
mov
add
xchg
lret
lock
xchg
xor
add
call
pop
inc
call
add
jle
call
xor
add
fs
xchg
jo
add
add
add
adc
add
call
fadd
call
cmp
or
add
push
add
xor
add
call
add
fwait
xor
add
out
out
adc
add
and
gs
pop
push
sub
call
cmp
call
sbb
mov
cmp
sarl
call
rol
call
xchg
cmp
add
in
sub
mov
jnp
shr
cmp
call
popf
sub
mov
sub
aas
push
add
pop
shrl
inc
add
push
add
mov
aam
loop
jno
add
rol
call
imul
call
imul
jne
scas
sbb
add
dec
inc
call
jne
call
and
add
push
arpl
add
add
mov
cmpsb
call
sbb
call
push
pop
lods
or
add
loope
shr
call
add
xchg
xlat
aaa
dec
add
and
add
cmc
xchg
sahf
fidivrl
add
or
mov
inc
add
adc
das
lods
enter
bound
add
call
add
popa
add
mov
push
lock
call
add
and
popf
jne
pop
imul
call
call
xchg
lods
mov
call
xlat
ffreep
call
call
test
pushf
lahf
xor
add
inc
add
lahf
adc
add
call
add
mov
add
call
call
xchg
sahf
arpl
add
int3
push
add
push
loopne
push
repz
add
movsl
call
daa
call
scas
lret
add
mov
out
lods
cmpsl
call
lods
das
inc
add
in
test
scas
sub
add
jmp
stos
mov
cmp
mov
xchg
aaa
jl
inc
call
add
add
mov
call
addr16
or
dec
pusha
add
mov
pop
call
dec
mov
call
call
inc
add
dec
inc
call
inc
call
jle
adc
dec
iret
jl
insl
push
call
inc
add
fimuls
cmpsl
call
iret
pop
outsl
mov
and
add
call
call
mov
fdivrs
int
add
xor
add
call
call
sbb
pushl
add
inc
add
mov
add
and
add
add
push
mov
xor
add
cmp
shr
addr16
call
shll
add
ljmp
in
dec
push
fldenv
add
mov
aas
and
add
aad
test
stc
or
call
add
icebp
pop
call
lods
mov
dec
dec
stos
lock
add
call
add
add
ljmp
mov
add
dec
mov
call
lcall
enter
repz
cld
sub
add
add
xchg
add
add
out
or
add
sub
call
sbb
pusha
add
sbb
xor
call
orps
call
call
add
sub
sbb
sub
add
add
or
call
sbb
call
and
add
pop
fsubrl
add
add
xchg
inc
call
add
xchg
sub
call
jge
call
jbe
inc
add
nop
shl
fdivs
add
and
add
xor
add
std
sub
movsb
call
call
mov
add
sti
int
add
add
add
inc
add
jge
xchg
sub
call
wbinvd
adc
call
add
add
add
clc
pushf
iret
shrb
movsl
call
cmp
add
bound
add
mov
leave
xor
add
rorl
lods
mov
add
and
add
call
add
sub
call
adc
add
mov
call
call
add
call
in
frstor
lods
stos
int3
fstps
inc
call
sub
je
call
mov
pusha
add
jmp
call
shrb
mov
call
call
cwtl
pop
or
fidivl
mov
push
mov
call
cmp
xor
add
mov
cmp
jmp
call
cmpsl
call
add
or
add
int
call
add
mov
aas
dec
add
add
add
call
add
adc
add
call
lods
mov
add
inc
call
addr16
cwtl
jl
add
lret
mov
enter
add
add
call
out
xchg
add
dec
mov
add
pop
call
fstl
mov
hlt
fldenv
sub
add
inc
add
mov
xchg
inc
add
and
add
add
cmp
call
test
call
pop
pushf
inc
add
movsb
call
jne
or
fiadds
popa
add
dec
jnp
push
mulb
add
scas
testb
push
add
cmp
push
and
add
movsl
call
call
inc
add
pop
cwtl
xor
add
cwtl
mov
cmpsl
call
xor
call
cld
aaa
and
fadds
add
add
es
dec
cwtl
cmp
xchg
xor
add
call
fildll
call
imul
ret
call
sub
xchg
xchg
jnp
insl
in
aas
xchg
and
add
dec
and
add
add
call
fiaddl
pop
call
scas
add
add
cmp
mov
add
mov
js
or
call
sub
add
add
push
xchg
adc
in
sub
je
add
pop
lret
shrl
push
mov
mov
mov
call
sbb
pop
fs
add
fs
call
add
ds
bound
add
add
or
dec
inc
call
call
sub
int
xchg
std
cwtl
js
mov
js
jmp
add
jmp
xchg
mov
pop
call
call
add
push
mov
call
fisubl
dec
xchg
add
xchg
xchg
fistpl
or
add
add
jl
dec
pop
mov
call
sub
std
outsb
sub
aaa
ljmp
jne
lahf
or
clc
js
add
call
push
adc
add
call
fs
mulb
add
push
push
lret
xchg
jle
jae
add
sbb
movsb
call
mov
test
mov
push
add
add
popa
add
and
add
stos
mov
repnz
pop
sbb
ljmp
sahf
jmp
hlt
and
add
add
out
gs
add
inc
call
sub
sbb
xchg
jb
add
add
jp
test
add
xor
add
sub
popa
add
add
add
push
push
adc
add
lea
call
jmp
sub
xchg
push
call
call
call
lahf
aas
pop
xor
add
fadd
call
imull
sub
pop
sbb
mov
pop
or
add
mov
push
add
or
add
add
call
out
das
xchg
fs
push
mov
call
test
std
call
call
mov
push
arpl
add
sti
pushf
inc
add
jg
push
mov
jo
add
add
jmp
push
fstl
pop
addr16
add
call
inc
call
ja
add
int
pop
xchg
jae
add
int
xor
add
pop
push
jmp
pop
call
call
jo
add
int3
aaa
in
sbb
call
outsb
shr
dec
insb
mov
add
fistpll
add
lock
mov
call
call
add
scas
sbb
inc
add
cmp
pop
call
add
mov
sbb
add
imul
inc
add
pop
mov
ljmp
test
lahf
sub
call
mov
shlb
add
mov
jns
and
sbb
scas
push
sub
mov
call
add
add
insb
gs
call
mov
call
adc
add
movsb
call
call
dec
inc
add
sub
call
adc
add
add
jno
add
and
add
mov
pusha
add
aas
push
adc
add
push
add
jl
sbb
out
adc
add
add
mov
sbb
add
test
add
or
nop
kmovw
add
xchg
jle
call
and
add
add
dec
xchg
cmpsl
call
add
sbb
movsb
call
mov
and
dec
callw
or
aam
ja
call
ja
movsb
call
loop
call
add
inc
add
mov
iret
jmp
add
mov
call
xchg
sub
mov
add
mov
dec
jbe
jne
add
int
imul
call
add
adc
add
or
xchg
ficompl
call
ljmp
mov
clc
jne
sub
mov
call
add
pop
popf
mov
call
add
lret
in
fiadds
add
cli
cld
out
int
add
pop
imul
xchg
cmpsl
call
xchg
enter
es
jmp
in
sub
outsb
pop
jno
add
adc
call
mov
popa
add
cmp
or
adc
xlat
scas
jg
mov
add
lret
call
add
movsl
call
add
insb
std
stos
pop
outsl
call
mov
add
pop
xchg
cmp
jg
fmul
mov
push
sub
pop
mov
in
ret
sub
call
add
cmc
xchg
ja
add
mov
mov
cli
push
add
call
clc
pop
add
pushf
cmp
hlt
in
popa
add
jns
sub
cs
call
inc
add
jp
or
add
add
inc
add
pop
inc
call
add
xor
and
add
add
xchg
jae
add
call
call
dec
nop
ret
call
push
push
call
call
mov
and
add
add
gs
aad
call
scas
test
add
add
add
call
call
call
add
imul
jbe
call
add
pop
aad
add
mov
cmpsl
call
mov
dec
fsts
add
mulb
call
call
call
int3
adc
add
inc
add
mov
call
inc
call
dec
fisubrl
add
call
or
xchg
stc
dec
xchg
lea
call
insb
outsb
jl
pop
das
nop
xchg
lret
inc
add
add
jbe
add
das
test
in
call
call
sub
add
push
mov
cmp
add
fs
add
push
add
fisttps
add
mov
call
je
add
es
add
adc
add
call
adc
add
aam
add
negb
add
and
add
push
xor
popf
add
add
add
popa
add
test
scas
scas
out
cwtl
dec
fs
add
mov
mov
ss
add
iret
insl
icebp
pop
rcl
loop
ret
pusha
add
jmp
mov
or
js
jo
add
jmp
stos
xor
add
sub
xor
mov
pop
and
jmp
scas
fcmovne
pop
or
add
lods
out
sub
dec
lret
push
rclb
sbb
xor
call
loop
shlb
push
or
push
call
cmc
decb
add
call
jno
add
fwait
push
add
jp
mov
call
call
mov
adc
add
jle
call
fcomps
aas
mov
mov
jp
push
push
add
add
add
add
add
add
maskmovq
negl
sti
mov
sub
add
add
sbb
call
call
call
jb
add
add
add
xor
add
add
mov
call
add
testb
or
das
xor
add
test
fs
add
mov
add
mov
add
pop
or
xor
add
dec
push
add
lcall
cmp
call
call
sbb
inc
add
cmpsb
call
cmp
fisubs
call
test
aad
popa
add
es
sbb
sub
add
sbb
cwtl
mov
call
sbb
call
call
xchg
or
xor
lods
cmp
loopne,pn
cltd
test
mov
dec
jno
add
lret
fisubrs
imulb
out
lods
sub
add
pushf
sub
jmp
stos
stc
push
pop
xor
sub
call
stos
sub
xchg
lret
mov
fisubrs
mov
mov
add
call
and
jnp
es
call
lret
xchg
mov
call
add
push
call
xchg
mov
aam
pop
xlat
ss
pop
js
pop
jg
jnp
add
decl
jecxz
hlt
hlt
pop
push
xchg
mov
enter
call
add
adc
add
ret
push
xchg
mov
call
mov
push
add
xchg
xchg
mov
cmp
call
in
mov
push
rolb
add
call
add
lcall
mov
call
inc
add
nop
rcrl
dec
cmc
addr16
inc
add
cmpsl
call
jne,pn
std
imul
ss
sbb
add
call
fwait
cmp
call
add
in
in
mov
pop
stc
loop
std
sub
sub
add
xor
add
add
push
imul
and
add
add
jbe
test
cmp
inc
add
aad
mov
pop
fidivrl
add
lahf
jnp
call
popa
add
sub
dec
ja
call
dec
xchg
add
add
call
inc
call
shlb
add
sbb
sub
es
call
or
xor
add
sub
add
loope
das
sbb
add
lods
fdivrl
hlt
push
mov
bound
add
cwtl
ljmp
mov
call
sbb
dec
mov
add
call
add
rol
call
inc
call
mov
jns
cmpsl
call
sbb
pop
gs
mov
adc
add
push
int
call
sub
aaa
mov
sub
add
fstl
ret
enter
movsb
call
add
nop
test
icebp
mov
mov
pop
jmp
aad
roll
cmp
call
in
push
in
sub
call
sti
dec
inc
call
in
xchg
mov
dec
pushl
mov
leave
dec
lock
call
add
test
sbb
call
call
das
js
enter
add
add
sub
shr
pop
pop
and
jp
testb
add
add
add
pop
and
add
inc
call
jle
add
cltd
jne
psubusb
call
call
add
add
aas
dec
rcl
mov
call
adc
add
cli
push
jns
sub
in
jl
call
sbb
fs
add
add
add
dec
or
lods
mov
lods
sub
add
mov
sbb
push
sbb
dec
dec
fwait
aam
aaa
gs
dec
fsts
add
push
add
clc
fs
dec
sub
aaa
mov
push
add
mov
push
loopne,pn
mov
cli
mov
jle
int3
mov
lea
shrl
sub
jg
xchg
lcall
leave
push
add
cmp
call
dec
or
inc
add
incl
add
jb
add
add
je
add
idivb
call
icebp
push
pop
adc
add
jbe
add
add
sub
call
mov
fwait
dec
nopl
add
push
add
jmp
call
inc
call
inc
add
std
out
and
mov
push
add
fs
cmp
call
daa
call
call
in
cld
add
add
xor
call
movsl
call
xchg
out
push
add
dec
cmpsb
call
push
stc
int
test
mov
pusha
add
and
add
mov
add
push
add
inc
call
push
add
add
mov
add
push
add
xchg
cli
fiadds
add
xlat
mov
add
test
or
call
xchg
mov
mov
pop
out
mov
inc
call
mov
call
call
call
call
mov
call
add
clc
stos
ja
in
enter
ljmp
fimull
call
lods
ds
add
sub
mov
push
add
sbb
mov
mov
es
stc
popf
or
call
adc
sub
push
add
xchg
mov
into
mov
call
xchg
aaa
inc
add
jp
lcall
fildl
add
adc
call
and
adc
add
gs
out
loope
xlat
mov
jmp
call
pop
pushf
push
push
jmp
jmp
testb
aaa
push
call
rorl
pop
shr
sbb
sbb
out
pop
adc
add
dec
add
or
lock
sub
add
fisttps
add
xchg
mov
call
add
add
pop
push
call
test
call
call
add
clc
cs
call
push
add
es
call
mov
add
add
xor
add
mov
or
call
std
inc
add
dec
jecxz
jno
add
xor
xchg
imull
call
dec
ret
and
add
xchg
std
push
fdivr
pop
sti
xor
call
call
mov
fadd
call
xor
add
call
xor
push
in
popa
add
arpl
add
imul
add
mov
sbb
call
jne
adc
add
add
pop
fisttpll
leave
roll
call
jb
add
add
mov
in
lods
jp
call
fsubs
xor
add
add
add
fs
fdivp
cmp
add
mov
call
dec
fldenv
add
call
sub
call
xchg
dec
dec
dec
jecxz
xchg
dec
xlat
gs
and
add
call
es
add
inc
call
call
fwait
outsl
fst
mov
mov
adc
add
mov
add
mov
pop
roll
call
call
push
stos
cmp
add
inc
add
sbb
pop
popa
add
adc
pop
in
add
ficompl
sub
add
pop
fidivrs
jge
in
sti
mov
dec
jae
add
xchg
mov
fadds
adc
add
call
dec
call
mov
ret
fistpll
add
jne
pushf
inc
call
mov
and
add
addr16
call
loop
dec
outsb
fcompl
add
dec
mov
cmp
xchg
jle
cs
int3
out
bound
add
sub
insl
inc
call
sbb
mov
jnp
test
inc
add
push
and
add
call
pop
wbinvd
push
push
add
xchg
jecxz
movsb
call
add
cmpsb
call
gs
add
mov
cmp
jbe
and
add
fcomps
adc
div
inc
add
imul
js
call
add
call
call
cmp
call
mov
xor
add
add
std
push
leave
mov
call
call
js
jge
add
push
add
inc
call
cwtl
call
mov
cli
and
xor
add
call
lea
add
sub
and
shr
call
call
sarl
idivb
out
pop
mov
add
call
mov
mov
in
outsl
inc
call
stos
dec
mov
add
jb
add
jne
add
cmpsl
call
sahf
divb
out
aas
mov
jae
add
cmp
pop
je
call
add
xchg
sbb
pop
clc
jnp
dec
and
cmp
call
jl
sub
mov
call
xor
add
add
mov
inc
call
add
dec
mov
jae
add
push
repnz
ds
imul
or
mov
call
call
add
lods
push
pop
add
mov
add
mov
out
mov
sbb
call
add
jp
mov
add
dec
mov
call
stos
xchg
pushf
or
jmp
ret
call
mov
add
ret
call
call
add
sub
call
pop
or
call
add
leave
lahf
stos
add
xchg
clc
lods
movsb
call
cmpsl
call
add
mov
sub
call
inc
call
sub
jo
add
jge
jmp
stc
mov
call
call
push
add
movsb
call
call
sub
ret
or
xchg
dec
adc
add
jo
add
call
and
add
jmp
call
add
inc
call
cs
xchg
ret
call
jecxz
std
stos
lret
add
call
add
pop
loope
lods
lea
arpl
add
call
add
movsl
call
mov
bnd
add
and
add
imul
adc
add
pop
stos
into
in
pop
cmp
sub
popf
pop
sub
adc
add
jae
add
add
test
call
xchg
sahf
xchg
test
sbb
call
call
xchg
pop
in
out
addr16
inc
add
lret
push
in
incl
into
mov
test
sub
add
call
sbb
push
add
mov
cmp
mov
add
mov
cltd
inc
add
shr
xchg
je
ljmp
fs
div
mov
add
sbb
add
mov
add
sbb
lret
call
insl
imul
fldl
fdivl
call
sub
outsb
lock
jb
add
call
add
sbb
call
xchg
testl
mov
jge
mov
jno
add
call
call
mov
add
sub
in
fldl
push
call
dec
mov
call
fcmovne
callw
inc
add
cmp
shr
call
cmp
add
add
add
pop
rol
call
in
add
add
pushf
inc
add
xor
add
and
add
add
or
loopne
jmp
dec
inc
call
jmp
mov
add
mov
add
add
add
pop
test
mov
add
fstpl
stos
popf
and
add
add
xchg
sbb
inc
add
adc
add
cmp
add
add
add
add
call
sahf
and
add
add
arpl
add
add
add
fs
outsb
lcall
scas
pop
cmp
and
add
scas
pop
inc
call
std
jns
sbb
add
cs
call
pcmpeqd
call
add
xor
push
imul
shll
add
push
daa
call
xor
add
call
add
add
gs
fcomip
push
add
cltd
mov
add
outsb
mov
add
fsubrl
test
add
nop
lods
sub
lods
xor
inc
call
fmuls
pop
fildl
add
xor
mov
mov
call
add
add
add
into
enter
adc
add
push
xor
add
add
repnz
add
lods
adc
add
adc
call
pushf
pop
loopne
sbb
add
test
shll
pop
dec
xchg
cld
mov
dec
fadd
call
xchg
mov
push
mov
add
insl
cmpsl
call
movsl
call
push
ja
stos
jecxz
test
es
movsl
call
add
movsb
call
jge
call
xor
add
mov
bound
add
cmp
ja
add
lock
cmc
jle
in
mov
inc
add
je
add
sbb
pushf
dec
cmpsl
call
inc
add
scas
adc
add
test
mov
pop
fdivrl
adc
popa
add
push
mov
test
xor
call
call
push
std
mov
mov
fiadds
add
xchg
jne
mov
call
call
call
add
push
add
cltd
mov
pop
pop
or
sbb
iret
ret
add
pcmpeqw
mov
call
add
call
call
call
add
dec
inc
add
xlat
mov
call
jle
add
add
sub
adc
add
jbe
adc
sub
add
add
sbb
aam
adc
add
ret
call
call
sub
idivb
add
insl
aas
movsb
call
leave
lock
repnz
cmpsl
call
add
xor
add
add
dec
outsb
cli
pop
sub
push
add
mov
cwtl
std
jl
add
clc
mov
add
inc
call
add
cmc
mov
in
popa
add
clc
mov
call
xchg
push
ljmp
scas
sub
mov
add
fcomp
ret
call
add
mov
add
xor
add
es
in
loop
loop
mov
push
lods
sti
test
lock
jl
add
es
pop
sbb
add
shrb
mov
stos
cmp
add
fwait
add
adc
add
add
pop
adc
add
or
cmpsl
call
dec
fmull
add
pop
ret
call
jl
add
mov
mov
dec
cmp
ds
cmc
jmp
add
stc
adc
add
inc
call
call
pusha
add
push
icebp
pushl
jno,pt
add
add
xor
add
add
add
loope
inc
add
pop
or
call
add
call
jno
add
insb
out
xor
xlat
in
mov
shr
sub
mov
cmp
add
call
inc
call
bound
add
sbb
call
repz
add
stos
mov
call
call
jg
leave
cld
out
cmp
in
mov
in
push
add
movsl
call
repz
call
cmp
dec
sub
mov
nop
repz
std
cmp
call
lcall
call
mov
call
mov
iret
mov
mov
jle
xchg
xchg
imul
int3
pop
xor
add
add
cmp
adc
add
add
es
add
push
xchg
aam
add
popf
adc
add
or
add
xor
add
add
call
int
call
add
inc
add
je
xor
add
mov
jmp
pop
dec
repnz
call
call
addr16
pop
adc
add
and
add
movsb
call
add
sub
and
cs
add
repnz
add
out
add
add
and
add
movsl
call
call
call
int
ss
imul
jp
add
xchg
mov
adc
add
ja
mov
jo
add
call
test
pop
xchg
dec
and
add
add
push
add
cmc
sbb
add
sub
add
mov
repnz
add
inc
add
insl
js
pop
call
push
stos
lock
addr16
aaa
test
dec
sub
dec
or
mov
mov
or
test
lcall
fbld
jp
add
push
aas
pop
and
add
jmp
dec
xchg
jge
callw
add
add
call
dec
cmp
call
enter
jg,pn
call
push
add
push
jp
xor
add
call
imul
push
mov
cmc
inc
call
and
add
clc
mov
stos
arpl
add
xchg
cli
cmpsb
call
add
in
call
enter
call
push
add
out
mov
add
divb
mov
ljmp
adc
add
out
idivb
xchg
sahf
in
mov
loopne
inc
add
mov
out
sahf
in
ret
repnz
add
add
std
push
add
and
shr
lods
sub
pop
jbe
call
jbe
pop
aam
jns
adc
add
cmp
callw
in
mov
hlt
push
add
mov
call
repz
setp
add
mov
add
sbb
call
stos
lods
mov
pusha
add
push
add
cmpsb
call
out
inc
call
sbb
lahf
mov
pop
scas
xchg
insb
push
jg
or
xchg
inc
add
push
pop
cmp
push
call
shlb
icebp
cmp
in
dec
push
dec
cmp
adc
call
inc
add
add
inc
call
bound
add
add
movsl
call
call
pop
mov
pop
outsb
mov
mov
pusha
add
pop
sbb
call
add
call
add
ret
clc
xchg
imul
in
sub
aam
call
popa
add
outsb
add
add
push
test
mov
in
push
sub
cmpsb
call
add
add
cmpsl
call
add
call
mov
shr
iret
imul
add
xchg
insb
and
add
add
mov
cmp
dec
sub
add
mov
loopne
arpl
add
mov
jmp
add
sbb
cmp
add
sti
push
out
jmp
dec
lcall
add
call
icebp
and
add
add
bound
add
dec
adc
add
cli
ss
add
add
add
mov
mov
and
add
call
call
call
call
mov
add
fpatan
aad
call
push
add
cltd
and
add
add
sbb
add
xor
add
call
mov
call
aad
pcmpgtw
enter
arpl
add
js
shrb
and
hlt
mov
add
call
push
add
lret
icebp
out
ss
lahf
sbb
add
sub
and
mov
call
outsb
or
add
mov
enter
call
call
sbb
and
cmc
jmp
aaa
mov
call
mov
add
test
in
call
add
shl
lcall
add
add
push
loopne
fistpll
add
dec
add
add
or
push
add
add
sti
mov
mov
call
add
lcall
sub
pop
out
or
push
add
mov
add
add
add
fs
add
js
aaa
add
add
jp
call
add
add
sub
fwait
dec
fildl
call
fsubrs
in
jl
into
dec
je
call
xor
add
push
add
add
add
adc
add
test
xlat
push
jne
call
popa
add
mov
loopne
pushf
outsb
pop
call
and
in
jbe
in
dec
push
add
fwait
xor
add
call
mov
cmp
add
fcompl
mul
call
cmp
fistl
add
bswap
fucomp
bound
add
call
call
or
cmp
pop
call
inc
call
xchg
jl
in
mov
add
push
sub
mov
call
call
push
mov
xchg
jmp
call
insl
sbb
pushf
aad
or
add
jbe
dec
mov
into
icebp
sahf
loope
ds
sub
add
add
movsl
call
add
inc
add
hlt
dec
cmp
test
fs
mov
jecxz
aas
inc
call
jl
das
sub
sub
pop
or
call
call
call
mov
scas
ss
call
push
add
lret
sahf
push
lret
mov
xlat
call
add
repz
call
add
call
sub
add
test
jb
add
add
mov
add
jno
add
call
add
add
flds
add
and
out
mov
mov
add
divl
add
call
lcall
mov
mov
gs
ss
add
add
jg
rorb
jmp
xor
add
cmovb
add
xor
add
add
out
mov
outsl
das
sbb
call
add
adc
ret
call
push
jo
add
aas
sbb
call
fistpl
sti
mov
jbe
add
out
sahf
xor
add
push
add
lcall
mov
out
mov
je
or
add
xchg
add
add
add
call
add
lock
xchg
in
xor
jb
add
pop
fs
mov
or
call
adc
add
hlt
mov
stos
mov
add
lea
adc
add
mov
fcmove
leave
adc
mov
call
cmp
add
and
add
enter
call
xchg
mov
sbb
stos
sbb
jl
jne
and
in
testl
xor
add
ret
call
mov
call
add
std
dec
push
add
adc
add
add
add
add
call
pop
in
cmp
call
shrb
es
lock
add
and
add
add
push
add
xchg
jl
xchg
jle
cld
dec
jg
fldt
xchg
fcomi
or
xchg
sarb
nop
int3
leave
cwtl
outsl
dec
push
call
call
add
add
jnp
add
add
int3
pavgw
sub
xor
dec
enter
test
add
push
es
test
gs
ljmp
movsl
call
add
add
pop
call
outsl
xchg
pop
ret
leave
and
pop
test
fstpt
add
outsl
call
mov
add
push
add
pushf
and
add
or
lcall
loop
push
add
fdivp
insl
push
add
push
shr
outsb
stc
cmp
dec
xchg
sarb
daa
call
negb
fsubs
add
pop
jg
call
call
jmp
add
dec
mov
push
jmp
scas
fwait
cs
jg
xlat
add
add
push
add
jl
ja
mov
add
add
shr
and
add
add
call
out
pushf
add
add
call
movsb
call
add
push
fidivrs
and
add
sub
mov
add
add
push
add
mov
call
fcomp
cmp
add
movsb
call
push
add
scas
xor
add
mov
push
add
push
mov
add
call
insb
fwait
aad
call
mov
pop
mov
add
rorl
cmp
call
push
and
add
add
callw
sti
mov
call
cmp
add
add
add
push
sti
icebp
outsl
shr
ret
call
out
push
jge
mov
cmp
add
call
push
jns
leave
lahf
pushf
inc
add
mov
scas
in
es
dec
movsl
call
rcrl
sub
call
ja
mov
add
pop
and
add
imul
jno
add
ds
call
stc
xchg
push
inc
add
add
add
call
dec
shl
call
aas
ljmp
mov
lret
cltd
mov
add
push
add
js
add
stos
mov
or
adc
stos
cs
loope
stos
fcoms
int
test
xor
xor
add
into
pop
test
add
add
ret
xchg
jbe
call
add
inc
call
loopne
pop
call
nop
cld
cmp
enter
xchg
out
jne
call
jo
add
call
addr16
int
mov
gs
push
add
pusha
add
adc
add
call
add
out
adc
insl
dec
cmp
add
sub
or
sbb
push
jl
call
add
add
add
push
pop
cmp
add
shr
inc
add
je
dec
lods
sub
sbb
and
xor
call
add
sub
jb
add
call
add
lret
add
sahf
cmp
cmp
call
mov
sahf
sub
add
in
cmp
fbld
add
add
add
add
jae
add
sub
inc
call
add
das
ffree
call
loop
push
add
pop
iret
xor
add
lea
int3
sahf
vzeroupper
xchg
sbb
mov
push
call
sub
add
sbb
out
shr
call
shlb
call
fildll
mov
mov
rcrb
fs
add
call
call
add
xchg
add
add
mov
stc
mov
mov
add
dec
in
loop
sub
xchg
mov
gs
je
mov
adc
add
or
dec
jp
call
add
cmpsb
call
inc
call
aaa
jnp
in
lock
int3
ss
call
in
loop
leave
shr
jmp
adc
mov
xchg
mov
movsb
call
or
cmp
pushf
aas
adc
call
inc
add
push
jge
call
sub
call
rcll
add
iret
push
shr
fcmovbe
shr
call
call
sbb
add
ja
call
mov
repz
mov
dec
cmp
inc
call
add
add
call
add
sets
test
call
outsb
add
call
call
push
in
cs
call
add
ret
call
call
mov
or
call
or
xlat
cs
mov
add
add
insl
rcrb
scas
xor
call
cmp
add
cld
xor
add
sahf
cmp
add
mov
ljmp
jb
add
call
and
add
add
out
lock
inc
add
pop
sub
mov
add
jae
add
repz
xchg
xchg
leave
sar
pusha
add
sbb
xchg
xor
add
out
call
mov
add
loop
pop
cmp
push
in
xchg
cmp
icebp
mov
and
add
call
je
add
mov
sbb
add
jmp
ss
push
leave
jo
add
adc
call
push
stos
sbb
loop
lcall
and
and
inc
add
inc
add
sub
or
add
out
in
int
xchg
test
shrb
xchg
mov
jecxz
mov
add
gs
daa
call
add
add
popa
add
inc
call
call
pop
mov
dec
mov
test
sbb
movsb
call
loope
aam
call
cld
in
leave
insl
jmp
call
xchg
pop
mov
call
call
lea
add
mov
call
mov
cmp
add
ret
call
push
cmp
add
add
test
call
call
call
bound
add
push
call
shr
push
add
adc
add
dec
cmpsl
call
lock
add
add
stos
cld
jle
imul
mov
xchg
pusha
add
inc
call
shr
or
cli
aaa
mov
scas
hlt
adc
jb
add
xchg
mov
call
call
jb
add
lock
ret
call
sbb
mov
ljmp
call
and
add
mov
fnsave
add
dec
jb
add
add
inc
call
daa
call
push
add
repnz
add
add
dec
fbld
add
sub
out
add
add
pop
stc
scas
stc
pop
call
popf
fistpll
in
pop
lcall
call
mov
adc
add
fsubr
imul
call
pop
pop
xchg
call
test
shr
call
cmp
mov
test
pop
xor
mov
mov
add
mov
mov
dec
cli
jge
jl
add
jmp
add
add
add
jg
int
dec
fisttps
add
cmp
inc
add
pop
call
add
call
hlt
mov
add
dec
imul
dec
cmpsl
call
iret
or
add
call
fwait
scas
popf
dec
mov
loop
jg
add
mov
icebp
push
add
fs
inc
add
dec
mov
sbb
call
add
sub
fs
push
mov
call
pop
pushf
mov
add
scas
add
scas
jmp
sbb
call
gs
push
add
shr
add
mov
adc
add
dec
outsb
pop
add
add
out
dec
imul
das
mov
xor
add
add
test
popa
add
sub
inc
add
stos
test
int
call
call
sub
imul
push
xor
add
add
lret
out
dec
push
sti
jb
add
sbb
call
sbb
dec
mov
add
sbb
call
add
fbstp
add
or
call
movsl
call
scas
aam
cmc
lret
mov
lock
fs
add
cmp
add
fnstcw
ja
ljmp
movsl
call
pop
or
jne
add
and
add
lret
mov
dec
cmc
sti
inc
call
or
cltd
cmc
mov
sub
pop
xchg
shr
lea
call
enter
addr16
mov
jnp
call
jmp
push
add
pop
push
add
add
xchg
dec
out
cmpsl
call
pusha
add
sub
test
push
call
inc
call
lret
sbb
sub
call
shr
call
add
add
add
adc
add
xor
call
mull
add
dec
inc
call
fcoml
add
add
or
call
call
mov
call
add
lret
call
mov
sub
and
xlat
and
in
jbe
dec
pop
adc
add
hlt
push
add
ja
call
lahf
js
sub
call
add
add
add
add
mov
call
call
mov
cmp
adc
push
add
jp
mov
pop
or
jns
push
jb
add
add
icebp
int
add
cmp
out
and
add
mov
sbb
call
adc
add
cmp
call
pop
xchg
push
jecxz
sub
mov
cwtl
das
rol
call
call
lcall
dec
in
das
add
add
aaa
jno
add
add
dec
inc
add
pop
mov
sbb
call
icebp
sbb
mov
call
jg
sub
nop
ficoms
push
sbb
mov
pop
push
adc
add
mov
call
pop
mov
fistpl
test
outsb
dec
test
lcall
call
add
cmc
test
jle
cmc
mov
sbb
mov
add
sub
call
sub
cmp
mov
call
fwait
jge
mov
sub
loop
test
cwtl
xchg
adc
add
add
push
add
clc
and
add
sbb
out
xchg
jns
add
bound
add
add
lea
int3
fmul
mov
xchg
aam
call
callw
fmul
mov
push
jp
or
call
call
fcoms
arpl
add
out
jmp
push
add
shlb
add
adc
in
call
call
add
imul
jnp
xchg
or
add
dec
mov
insb
adc
add
sbb
in
inc
add
lods
or
xchg
dec
sbb
into
ret
call
call
mov
jae
add
cli
xchg
dec
add
mov
add
xchg
int3
sbb
in
sub
cmp
call
call
add
add
ja
add
in
out
push
add
or
pop
xor
add
adc
insl
inc
add
lahf
aas
int
loopne
cs
sbb
call
add
add
call
add
pop
cmp
dec
add
add
add
cmp
outsb
dec
jp
call
lahf
insb
imull
in
jns
enter
add
add
dec
push
add
jns
call
pop
inc
add
pusha
add
cli
adc
add
outsl
push
pop
mov
pop
aam
pop
fbld
add
mov
lea
js
call
add
push
lret
shll
add
fistps
call
lret
inc
call
jmp
sarl
inc
call
mov
outsb
loope
pop
call
push
in
dec
inc
call
test
call
addr16
call
add
lods
fisttps
sub
mov
add
stc
shr
mov
dec
imul
mov
out
bound
add
lret
add
call
fs
mov
push
push
mov
add
add
call
sub
cli
lret
push
sub
add
sub
call
sbb
add
jecxz
and
add
call
jne
call
call
fisubl
add
cmp
mov
add
push
jae
add
pop
push
fcomps
add
add
ficomps
push
adc
add
fidivrs
mov
shrb
push
xor
add
cs
test
dec
push
call
add
imul
das
stc
jmp
add
add
int3
out
and
add
jecxz
add
add
movsb
call
callw
cltd
and
add
add
in
xchg
and
fcomi
ja
sbb
add
inc
call
call
loop
aaa
sub
add
pop
je
lock
lahf
sub
ja
call
mov
stc
pushf
movsb
call
call
xor
add
mov
out
sub
add
call
mov
add
clc
pop
lret
mov
add
in
jbe
arpl
add
inc
add
add
add
sub
call
add
sub
push
sbb
sub
test
add
add
lahf
xor
add
fs
call
and
add
arpl
add
cmp
jno
add
call
add
sub
add
notb
call
or
call
lea
add
fcmovnb
call
insl
mov
repnz
push
std
or
add
loop
sbb
loope
inc
add
cmp
cld
lea
xchg
cmp
call
or
ret
call
pusha
add
out
jae
add
sti
cmp
mov
cld
pop
mov
pop
fsubr
lret
add
add
lods
in
hlt
cltd
test
sub
cwtl
out
fbld
xchg
sub
jns
movsb
call
addr16
iret
pop
cmp
mov
clc
stc
enter
call
xor
add
fs
mov
stos
sbb
add
mov
stc
sbb
sub
call
sbb
add
xchg
sub
icebp
outsl
sub
add
inc
call
add
and
add
add
fsub
call
mov
adc
add
add
pop
sub
sbb
pop
mov
jns
cmp
jae
add
add
add
xchg
gs
dec
stos
jns
add
sub
jle
negl
in
push
xor
add
divb
add
or
add
callw
add
loope
push
call
aad
call
call
shr
mov
mov
call
es
call
in
push
mov
call
ja
call
call
addr16
call
dec
mov
cld
in
mov
sub
adc
add
callw
call
call
and
add
push
add
lods
mov
mov
jbe
aam
arpl
add
call
pop
cmp
add
es
call
int
jno
add
cmc
pushf
pop
call
jo
add
call
daa
call
call
and
add
xor
ret
dec
std
or
call
mov
ds
stos
add
add
shr
call
xor
add
sub
add
or
test
add
add
clc
or
add
add
mov
mull
call
add
adc
add
xchg
and
add
ret
movsb
call
jo
add
mov
mov
sub
in
popa
add
aaa
test
out
iret
sbb
repz
push
mov
sbb
inc
call
fbstp
add
fcoms
add
sbb
mov
jle
out
das
movsb
call
or
scas
shrb
add
popf
das
mov
divl
add
cmp
imul
popl
call
inc
call
add
xchg
das
adc
in
pop
xchg
rol
call
pop
xor
int
call
add
and
add
add
mov
sub
dec
bound
add
dec
push
call
mov
push
jno
add
pop
fwait
or
mov
jo
add
jns
dec
cli
shl
mov
jle
icebp
call
fists
mov
fistps
sub
and
add
add
inc
add
aad
mov
cld
sub
jg
call
add
mov
and
add
mov
mov
lods
lods
or
add
aas
mov
and
add
push
nop
cmc
pop
sub
add
sub
shr
das
das
test
call
pop
jl
in
ss
call
mov
call
add
cmpsb
call
add
sbb
call
mov
add
lea
add
sbb
call
call
in
cmp
inc
call
jne
ja
pop
inc
call
add
fstp
cmpsl
call
jmp
fwait
mov
call
add
add
call
xchg
dec
xchg
sar
cld
sub
jge
cmp
call
jl
sub
pop
call
aad
jbe
add
daa
call
call
in
daa
call
repnz
add
sub
mov
jae
add
add
je
test
movsb
call
cmc
aaa
or
lret
sti
mov
cld
xchg
and
add
fucomp
or
cmp
add
das
pop
movsl
call
sub
cmp
add
add
add
stc
push
add
es
stos
loop
push
sub
call
cmp
lock
sub
and
add
into
xchg
jne
call
icebp
mov
call
jmp
pop
adc
add
xchg
sbb
sub
psrlw
push
or
xchg
jo
add
add
call
mov
mov
xchg
rcl
push
in
call
push
imul
cmp
outsl
cwtl
arpl
add
rcrb
icebp
dec
movsb
call
or
push
call
xlat
xchg
int
call
add
jnp
dec
mov
cmc
cwtl
pusha
add
dec
pop
jp
adc
push
add
dec
jmp
loop
mov
mov
cmp
xchg
cmp
inc
call
mov
mov
mov
inc
call
pop
pusha
add
mov
pop
call
add
mov
sub
add
add
mov
sub
add
sbb
add
add
xchg
push
add
inc
call
enter
call
mov
add
add
jl
insb
lods
ds
sub
call
and
add
add
add
inc
call
add
out
cmpsb
call
mulb
rcrl
add
bound
add
add
stos
addr16
jne
or
jge
arpl
add
push
jle
arpl
add
adc
vandps
push
add
jnp
mov
sub
inc
add
push
add
insl
fnsave
add
add
add
call
add
aas
xchg
in
push
popa
add
push
add
inc
call
call
or
jge
call
call
call
add
dec
cld
fs
cld
out
loope
or
add
add
mov
ret
aam
add
add
add
add
call
call
das
addr16
call
call
add
mov
cs
call
sbb
sbb
stos
lret
sub
pop
outsl
stos
fnstcw
xchg
insl
push
jle
sub
fwait
test
into
xchg
aaa
psubusw
mov
xor
add
and
pop
rclb
add
push
outsb
sbb
sub
add
jle
stos
hlt
add
add
jp
push
add
xor
jg
pop
dec
cmp
adc
add
lret
imul
pop
dec
pop
divl
add
dec
add
fstpt
call
mov
shr
adc
add
cltd
icebp
push
dec
cmp
call
call
and
adc
add
xchg
testl
add
mov
push
call
popa
add
cmp
test
xchg
shr
test
fnstenv
add
add
sub
add
movsb
call
hlt
mov
pop
shr
add
or
pop
test
mov
daa
call
push
mov
call
jecxz
push
call
out
xchg
xchg
int
rcl
cld
mov
mov
adc
add
call
add
int
call
xchg
imul
negl
call
movsl
call
call
sbb
push
call
add
sbb
call
dec
ja
call
pop
push
add
inc
add
push
call
lock
mov
pop
imul
add
or
cmc
or
call
add
mov
xchg
popf
inc
call
into
mov
push
sbb
add
xlat
sbb
scas
xor
add
fs
push
out
sub
pop
pop
loope
fsubrs
out
pop
lea
cmp
call
call
rorb
xchg
out
xchg
repz
add
insl
mov
push
jbe
dec
fildll
mov
add
inc
call
mov
call
cli
aaa
xor
into
in
cmp
pusha
add
cwtl
jne
movsb
call
dec
iret
dec
cmc
insl
out
pusha
add
and
add
xchg
daa
call
add
add
jne
cmpsl
call
jne
pop
fidivrl
add
lret
fsubrl
cwtl
sub
adc
add
push
add
dec
into
popf
sub
add
inc
add
and
add
call
add
xchg
lods
js
insl
jb
add
call
mov
rclb
add
shlb
movsb
call
xlat
insb
mov
add
cli
push
in
mov
add
lret
xchg
or
movsl
call
add
negb
jmp
leave
and
add
push
mov
into
inc
add
mov
mov
jl
xchg
call
movsb
call
popf
pop
cmp
call
arpl
add
aas
mov
add
pop
jne
dec
aaa
push
add
fildl
add
outsb
xchg
mov
mov
add
shll
add
mov
call
cmpsb
call
add
ja
cld
sahf
pop
movsb
call
add
add
add
sub
sbb
pushf
mov
add
int
call
mov
cwtl
lods
jg
jge
inc
call
add
call
mov
lret
and
call
add
and
add
stos
sbb
dec
and
jl
mov
sbb
sub
outsb
xor
add
cmp
push
jecxz
pop
mov
loop
fwait
ss
fcmove
imul
pop
inc
add
imul
inc
call
fisubs
and
inc
call
call
ficoml
mov
call
ja
add
add
call
push
call
pop
call
inc
add
jmp
sub
loop
push
add
inc
add
enter
add
out
xor
jns
outsl
sub
aad
test
mov
or
add
call
add
lret
sub
add
shr
dec
pop
sbb
call
sub
pop
and
add
ja
add
shll
cmp
jae
add
add
add
mov
jecxz
cmc
pop
xor
add
add
lret
add
movsl
call
fdivl
out
ljmp
fadds
inc
add
out
insl
jp
mov
lahf
int
dec
xchg
in
in
push
xor
add
in
movsb
call
cmp
ret
call
lods
in
icebp
fiaddl
or
pushf
insb
push
call
aad
pop
sub
call
add
mov
add
lods
out
mov
push
dec
push
push
mov
cltd
or
daa
call
test
jns
leave
loope
inc
add
js
push
es
add
movsl
call
sbb
adc
hlt
pop
mov
call
cmp
mov
call
add
sahf
pop
jae
add
push
clc
pop
mov
loopne
push
sub
jge
and
add
fwait
loope
adc
add
xor
hlt
mov
call
call
add
ljmp
add
cmp
call
call
call
call
cmpsl
call
cli
xchg
xchg
jp
adc
add
cmc
mov
add
add
sub
cmp
scas
cwtl
repz
xor
add
lret
add
gs
lret
lock
add
jle
mov
pusha
add
pusha
add
xchg
fildll
jl
out
sub
xor
add
adc
add
pop
cmp
pop
test
xchg
mov
loopne
jg
push
add
cmpsb
call
add
sub
add
outsb
mov
inc
call
mov
pop
sub
add
jb
add
outsb
jnp
add
sub
mov
push
add
popf
shr
call
add
inc
call
pop
inc
call
dec
fildl
push
add
dec
or
cwtl
mov
stos
mov
int
add
testl
push
call
mov
callw
add
sbb
sub
add
call
add
cld
icebp
xchg
movsl
call
call
aad
lods
lahf
jne
add
in
xchg
sub
add
mov
stos
call
add
sub
xlat
mov
mov
lods
xchg
fidivrl
jnp
jmp
call
mov
sub
add
jge
nop
mov
pop
lock
pop
call
sbb
clc
rorb
call
add
jl
xchg
pop
fcmovnbe
sub
call
ja
insb
and
add
adc
add
add
push
call
call
push
enter
xchg
sti
scas
mov
or
shr
call
insb
jb
add
add
nop
fisubl
add
test
mov
nop
testl
lcall
call
in
ja
je
call
push
pop
cmp
call
call
jbe
and
pop
repnz
cmc
jmp
inc
call
add
clc
mov
pop
or
add
call
or
sti
mov
shr
call
adc
pop
out
dec
xchg
test
jb
add
jo
add
call
call
outsl
pop
popf
lock
lods
push
push
and
add
jnp
add
int
call
push
add
movsb
call
test
jnp
jns
xchg
cmp
call
mov
push
add
pop
out
dec
sub
add
addr16
xchg
fnstenv
add
jecxz
inc
call
pusha
add
xor
fcoms
stc
dec
popf
xchg
add
add
ret
call
add
out
jmp
call
add
cs
stos
or
fpatan
dec
loopne
lahf
lods
sbb
sbb
add
xor
add
call
add
mov
add
pop
jnp
call
add
call
cltd
gs
and
xchg
test
jno
add
xlat
fwait
pop
lods
or
call
call
add
lret
pop
sub
divb
add
push
callw
call
sbb
cmc
pop
int3
add
add
and
add
xchg
mov
add
sub
ficompl
cmpsb
call
nop
mov
or
jo
add
add
jp
add
mov
je
xchg
sub
call
call
out
leave
jmp
aas
shlb
into
fstpt
icebp
loop
pop
add
add
jnp
xchg
lock
add
gs
xor
add
call
imul
xchg
dec
inc
call
dec
and
add
ret
call
xchg
ds
icebp
sti
aas
mov
cld
cmpsl
call
dec
outsl
iret
sub
add
sub
out
cs
add
add
sub
sbb
ret
call
mov
call
add
add
call
lcall
sbb
add
add
movsb
call
sub
add
and
add
movsb
call
cs
pop
sub
xor
add
jo
add
add
add
cmpsl
call
call
shl
call
ja
call
and
add
loop
cltd
dec
mull
dec
clc
or
shlb
dec
cmp
aaa
nop
push
call
and
add
call
call
add
xor
shlb
add
add
add
es
fs
add
lock
loope
inc
call
pop
mov
enter
imul
add
popf
scas
xchg
jbe
scas
inc
add
and
add
inc
add
push
add
and
call
add
lret
add
call
inc
call
arpl
add
std
stos
stos
push
add
cmp
inc
call
add
and
add
add
in
repz
stc
mov
jmp
pop
int3
lods
iret
jp
add
aad
call
in
ja
mov
callw
shr
add
dec
mov
mov
add
xor
call
ror
xor
add
in
ror
cmp
cmp
in
aam
call
cmp
cmp
add
add
or
jp
call
mov
xor
add
add
xchg
add
add
add
call
stos
xchg
mov
mov
mov
lret
call
or
call
jl
nop
add
add
pop
lret
push
add
cld
mov
mov
outsb
shr
call
xlat
lods
adc
add
add
mov
jecxz
sub
or
hlt
jg
inc
add
xchg
ds
sub
pop
pop
and
xchg
xor
add
shl
and
add
pextrw
pop
jbe
call
add
add
out
in
pusha
add
cmp
call
inc
add
xor
mov
add
test
insb
jns
call
mov
cltd
icebp
jbe
pop
pop
shr
call
ret
call
mov
incb
add
add
call
fcomps
mov
repz
add
jecxz
dec
in
js
xor
add
fldl2t
xchg
adc
add
and
add
call
call
add
outsl
jecxz
movsl
call
call
stos
stos
and
add
mov
call
ret
call
xchg
push
pop
mov
dec
loope
imul
out
jl
call
or
pop
lods
xor
add
jbe
sbb
out
pop
add
add
ret
call
add
and
add
out
mov
jns
call
call
shr
jge
xlat
in
aas
or
sbb
cmp
mov
imul
add
add
callw
mull
add
add
mov
sahf
call
aas
ljmp
fdivr
cmp
call
test
mov
sbb
sub
xlat
xor
rclb
add
add
jno
add
add
aas
stc
cmp
scas
cmp
call
call
imul
add
push
vucomiss
add
dec
test
call
jnp
mov
pushf
lahf
dec
mov
stos
dec
repnz
push
add
mov
or
add
add
rorl
push
roll
call
and
add
jne
mov
add
add
call
push
add
sub
ja
cmp
add
call
dec
dec
aas
out
loope
aam
call
call
aaa
mov
jl
pushf
cmpsb
call
add
jl
call
or
add
loop
xor
loop
jbe
add
push
jb
add
adc
add
call
or
xor
add
call
call
mov
add
jb
add
call
mov
movsb
call
hlt
das
xchg
int
sub
and
add
stos
sbb
add
add
jmp
add
popf
jae
cmp
pop
sub
add
and
add
fcmovnu
insb
push
and
add
callw
repnz
add
mov
cwtl
pop
adc
add
ss
call
dec
jmp
call
mov
call
lahf
pop
push
daa
call
add
add
lcall
ret
add
repz
cmp
call
adc
add
enter
add
add
mov
sbb
call
test
and
add
mov
add
mov
pop
js
int3
repz
adc
lret
test
xchg
enter
cmp
jns
bound
add
add
cmp
pusha
add
jmp
popa
add
icebp
shll
add
call
call
daa
call
jg
add
adc
add
mov
push
add
call
add
stc
in
lahf
jl
sub
sub
add
xchg
daa
call
mov
add
push
call
add
add
jo
add
add
icebp
ror
xor
adc
add
call
xchg
in
inc
call
add
add
sbb
call
xchg
lret
mov
call
mov
add
jne
sub
fwait
sbb
call
lock
dec
xlat
sbb
add
test
mov
add
call
shlb
jmp
call
add
je
call
add
mov
sbb
incb
add
dec
pop
push
js
mov
mov
popf
out
cld
gs
call
test
push
call
sub
call
or
sbb
mov
bnd
dec
nop
xchg
push
mov
call
xlat
arpl
add
add
jg
aas
push
sahf
xchg
xlat
mov
add
add
mov
dec
js
push
fdivl
test
add
add
or
xlat
sub
jle
add
mull
call
jp
or
add
add
inc
call
movsl
call
call
inc
add
xor
add
lahf
enter
call
add
bound
add
call
ret
jecxz
lahf
stos
push
add
insl
mov
daa
call
insb
shr
sti
fdivr
sbb
add
popa
add
enter
inc
call
mov
out
repz
jae
add
push
cmp
add
add
add
adc
mov
insb
mov
xor
add
add
insl
popa
add
mov
jae
add
call
call
cwtl
cli
jae
add
jmp
add
call
dec
gs
add
or
dec
add
add
add
add
rcrb
daa
call
mov
shlb
add
cmp
push
fs
push
add
or
inc
add
fildl
sub
add
cmpsb
call
mov
adc
add
push
add
xlat
pop
mov
dec
pop
shr
add
test
and
add
std
lods
mov
rcrb
add
add
push
add
popa
add
mov
add
shr
jp
xchg
cli
push
sub
add
sbb
jg
fisttpll
jl
pop
mov
xor
add
adc
add
ds
jmp
add
call
fstps
push
add
mov
jnp
cmpsb
call
mull
add
xchg
sub
outsb
pushf
cmc
sarl
callw
add
loope
push
add
jmp
shr
pop
call
call
imul
int
in
push
add
xor
ds
mov
enter
rolb
mov
add
pop
dec
jo
add
call
or
call
repnz
jae
add
add
xlat
lods
mov
xchg
cmp
adc
add
call
jae
add
or
inc
call
add
sbb
push
add
int3
adc
add
add
cmc
jbe
fadd
call
add
nop
inc
call
lcall
sbb
or
add
add
add
scas
sub
call
test
cltd
mov
cwtl
out
xor
add
add
ret
call
add
call
call
add
mov
aad
call
inc
call
cmp
movsb
call
call
add
jno
add
add
jno
add
jmp
mov
sub
add
in
jecxz
stos
cmp
lods
outsl
sahf
ret
call
add
push
add
mov
add
and
add
inc
add
inc
add
mov
inc
add
lcall
call
add
add
movsl
call
aas
push
xchg
sub
cmpsb
call
and
sbb
add
ja
sahf
pushf
loop
test
mov
add
out
rolb
add
xor
add
jl
mov
call
jnp
and
fidivl
pop
inc
add
inc
call
scas
repz
shr
add
mov
jo
add
add
call
xchg
clc
es
cmc
inc
call
call
add
aad
daa
call
call
jge
add
lcall
inc
call
cmp
cmpsl
call
pop
pop
sub
sub
call
push
add
imul
or
aas
fiadds
add
jp
call
call
add
ss
jge
push
in
cmp
add
mov
loope
jmp
jmp
push
add
icebp
mov
add
add
sub
add
fstps
insl
sahf
mov
push
add
hlt
lock
cmp
call
add
divb
push
add
push
add
sub
jne
add
enter
add
std
jecxz
push
jae
add
lahf
mov
and
add
call
dec
sbb
and
add
mov
add
cmp
call
mov
cltd
idivl
jns
sbb
shr
sub
je,pt
cld
out
jmp
call
add
call
xchg
dec
popf
sbb
add
call
roll
call
mov
call
add
call
lret
lret
call
pop
pop
inc
call
add
add
lock
add
daa
call
add
imulb
cmpsl
call
incl
add
and
fsubrl
lret
add
icebp
or
lock
call
scas
sub
fs
call
add
adc
add
call
scas
out
cmp
add
sarl
call
test
mov
aaa
xor
xcrypt-ofb
jp
shrl
call
call
xor
add
dec
push
or
sarl
or
aad
call
fs
jb
add
add
dec
stos
mov
jno
add
sbb
dec
cmp
into
inc
add
stos
dec
dec
add
add
and
mov
call
popa
add
callw
call
add
js
shl
push
cmc
aad
call
add
aas
jge
mov
add
ss
lret
add
add
add
xchg
xor
add
gs
int
add
in
sbb
pop
jb
add
add
imul
pop
inc
call
sbb
js
add
inc
add
mov
add
jmp
xor
add
stos
xlat
pushf
in
shr
adc
add
sbb
test
fwait
das
jnp
out
sbb
pop
cmp
outsl
jo
add
lods
and
add
add
bound
add
xchg
cli
fisubl
movsl
call
dec
jmp
aaa
sub
ret
call
lret
mov
call
loopne
xchg
sub
add
call
call
and
add
add
jbe
call
xchg
cld
adc
add
call
call
and
add
inc
add
shr
test
call
pusha
add
or
outsb
shr
cltd
repz
pop
mov
cwtl
and
add
mov
fwait
and
add
call
adc
bound
add
add
call
popa
add
add
add
fs
add
and
add
movsl
call
ret
call
aas
outsl
and
add
add
call
in
xchg
xchg
add
add
call
add
pop
repz
sub
call
call
add
sub
sub
jge
call
das
mov
mov
pop
call
fisubs
add
rorb
jbe
inc
add
inc
call
fcomi
mov
xchg
test
es
loopne
das
sarb
stos
push
mov
fsubrl
push
out
ljmp
add
callw
add
call
or
mov
aaa
pushf
cli
mov
add
inc
add
insb
mov
jmp
insb
dec
daa
call
xor
add
test
cli
fists
stc
or
inc
add
inc
add
inc
call
add
cmp
call
mov
mov
call
add
mov
xor
add
add
add
stos
sub
out
or
test
add
jne
out
out
jg
add
lods
sub
call
in
dec
testb
call
add
clc
jecxz
jl
dec
ret
call
mov
add
add
lcall
call
call
add
out
xor
add
ficomps
xlat
test
es
or
pop
arpl
add
bound
add
pmaddwd
callw
and
xor
add
jo
add
call
call
pop
call
mov
push
jno
add
ret
call
popf
cmp
shll
fimuls
adc
add
test
mov
add
and
add
lods
stc
cmp
jl,pn
and
add
call
add
fsin
aaa
lods
lods
xchg
pushf
and
add
fildl
add
add
sbb
mov
dec
jns
enter
and
add
pop
call
shr
call
call
call
call
aad
inc
add
mov
xchg
dec
int
in
call
add
sub
mov
add
popa
add
cmpsl
call
add
xchg
ret
call
add
call
xchg
sub
mov
adc
add
add
xchg
sahf
imull
movsl
call
arpl
add
sbb
cs
add
dec
call
ds
sub
add
sbb
xlat
push
pop
jnp
js
call
pop
cld
lods
inc
call
pusha
add
sbb
call
or
sarl
shr
add
mov
nop
out
cli
insb
push
add
sysenter
push
add
mov
or
call
sbb
sbb
pop
clc
imul
popa
add
cmc
adc
call
callw
js
call
cltd
mov
nop
movsb
call
cmp
inc
call
or
sbb
or
xchg
cvtpi2ps
mov
sub
add
sub
cmp
call
fs
gs
sbb
jnp
ret
call
lahf
out
xor
add
push
jmp
call
mov
call
call
shr
add
cs
stos
mov
hlt
lea
out
out
out
test
aam
sub
je
std
sbb
add
xchg
xor
add
adc
add
call
ljmp
cltd
mov
jnp
test
inc
call
mov
xchg
dec
stos
inc
call
lahf
inc
call
add
callw
jns
mov
call
call
call
add
in
rcr
nop
jne
add
inc
call
add
into
call
callw
push
gs
call
cmp
inc
call
inc
call
push
add
cmc
mov
int3
pusha
add
outsl
mov
add
mov
jbe
inc
add
or
lret
mov
mov
jns
pusha
add
lea
call
popa
add
jle
ja
or
sub
add
cmp
adc
add
add
adc
mov
or
add
js
push
in
ss
pop
pop
test
sbb
fcmove
add
clc
jo
add
call
popa
add
dec
pop
pop
mov
push
in
rsqrtps
add
sub
test
pop
add
add
das
addr16
call
sbb
add
sahf
add
call
add
call
fadds
call
add
addr16
cmp
adc
add
scas
pop
mov
scas
test
add
enter
sbb
lret
aad
enter
call
in
jno
add
mov
add
sti
xlat
inc
add
dec
js
out
insl
inc
call
pop
cmp
out
push
sti
js
add
and
add
mov
and
add
cmc
and
add
and
add
mov
fcom
inc
add
cmp
call
mov
call
add
mov
bound
add
rclb
call
pop
lods
sbb
sbb
add
iret
cmp
nop
push
mov
add
jmp
ds
and
add
cli
arpl
add
add
lahf
fdivrl
test
cli
mov
cli
inc
add
xchg
jmp
call
mov
mov
popf
outsb
cmpsl
call
call
sub
call
call
out
add
add
enter
and
add
add
imul
call
das
mov
add
xchg
das
xor
add
add
add
inc
add
xor
add
push
call
add
pop
aam
push
call
add
lods
dec
mov
call
call
add
push
add
xlat
incb
add
shr
popf
pop
mov
sub
add
mov
or
sub
ljmp
ret
call
icebp
ljmp
jmp
fistl
add
pusha
add
sahf
or
or
je
scas
stos
test
lcall
test
ss
mov
lea
cmp
push
jecxz
pop
gs
cmp
sub
push
add
dec
jbe
call
in
xlat
cmp
mov
add
ljmp
xchg
xor
add
call
call
add
in
into
or
add
jns
call
and
mov
out
lret
xchg
dec
inc
add
inc
call
lods
scas
js
add
pop
call
mull
add
mov
jo
add
repz
add
add
enter
call
push
add
lcall
add
add
pop
cld
inc
call
sti
sub
test
cmpsb
call
addr16
outsl
mov
pushf
or
add
inc
add
int
je
js
add
xchg
mov
leave
mov
jb
add
call
mov
sbb
add
pop
inc
call
add
out
mov
add
add
fcomps
call
add
aas
xchg
pop
call
call
call
push
or
rolb
mov
add
arpl
add
add
fists
add
insb
add
cmp
jmp
push
adc
call
call
das
jl
mov
outsl
jle
call
xchg
insb
popa
add
push
add
pop
push
add
push
inc
add
stos
ret
cmp
mov
call
sub
insb
bound
add
or
call
cmpsl
call
xchg
sbb
sub
call
mov
add
push
add
sbb
add
ja
add
add
fsubrs
rol
call
call
fstps
add
xchg
hlt
dec
shl
pop
pop
and
hlt
outsb
sbb
call
es
fdivs
add
add
aam
add
cmp
call
fdivrs
call
out
xlat
es
out
xor
lahf
xchg
int3
cmp
call
sbb
int
leave
dec
xor
add
add
and
dec
dec
or
int3
pop
js
call
call
lahf
pop
push
push
push
call
xchg
fs
cli
stos
aaa
cmc
fimuls
xchg
pop
and
add
add
arpl
add
fildll
adc
add
shlb
add
shr
jnp
cmpsb
call
call
popf
xchg
push
add
dec
neg
repnz
or
call
mov
jmp
in
sub
call
dec
dec
out
adc
add
sbb
sub
xchg
jbe
add
addr16
add
pop
iret
fildl
sbb
push
add
or
cmp
xchg
or
mov
js
cmp
fcoml
dec
ror
push
call
ret
call
add
lret
mov
call
mov
call
call
add
gs
call
add
add
pop
vmaxps
call
sbb
call
icebp
callw
call
add
sub
aad
xlat
and
add
add
add
call
push
add
cmp
add
or
xor
add
ret
call
and
add
jns
add
sti
mov
dec
cmpsb
call
in
sub
cmpsl
call
call
stc
test
daa
call
push
add
or
add
or
sub
imul
add
add
addr16
push
jl
out
scas
and
add
es
or
add
xor
add
mov
call
lret
mov
add
mov
add
lret
lea
add
jge
call
add
call
push
jne
ret
jp
add
out
enter
add
add
add
lret
dec
add
add
adc
add
call
mov
inc
add
jae
add
sbb
dec
pop
ficomps
cs
fmuls
dec
hlt
inc
add
std
pop
dec
xchg
adc
add
push
add
pop
call
lock
add
sub
push
xchg
sub
xor
add
decb
mov
call
add
call
add
repz
add
add
add
mov
pop
pop
lahf
rol
call
icebp
sbb
push
out
mov
repz
add
mov
push
sub
cmp
jle
call
cltd
mov
fsubrp
cmp
nop
into
sub
notl
add
push
add
pop
call
push
add
in
mov
xchg
push
add
sub
call
mov
call
mov
jg
jg
cltd
not
outsl
enter
sbb
jo
add
xor
add
call
push
inc
add
dec
xor
add
inc
add
mov
call
cmp
push
add
xor
add
pop
imul
fidivrl
sbb
pop
call
add
push
xchg
xchg
xchg
ljmp
or
push
mov
shrb
add
shr
lods
jl
call
xor
add
call
movsl
call
push
call
add
sbb
divb
ret
inc
add
lock
inc
call
call
jbe
mov
add
sub
jae
add
add
jo
add
add
mov
add
push
call
inc
call
pop
adc
xor
mov
push
add
stos
dec
sbb
pop
xchg
mov
call
add
loopne
push
add
push
and
aas
and
ds
inc
call
lret
add
add
dec
jge
call
fisubl
add
jno
add
testb
call
add
aad
push
std
mov
inc
call
jnp
add
sbb
fwait
movsl
call
mov
push
mov
push
nop
mov
add
mov
sahf
and
add
call
lret
fisttpll
call
call
loopne
insb
cmp
pop
in
fdivp
inc
add
insl
cmpsl
call
mov
call
adc
xchg
nop
inc
add
jb
add
mov
jle
sub
cwtl
rorl
lock
sub
call
inc
call
je
inc
add
and
add
call
cmpsl
call
add
dec
pop
loope
or
call
and
add
add
nop
add
movsb
call
fs
pop
call
add
adc
add
fstpt
add
gs
stos
or
pop
cld
sub
es
add
dec
and
add
xchg
inc
add
sti
mov
shr
pushf
xchg
mov
dec
dec
mov
xor
aam
stc
cmp
add
stc
mov
call
add
ret
add
sub
xor
add
ljmp
sub
imul
stos
addr16
pop
push
add
into
and
add
call
adc
add
pop
fwait
gs
cld
sub
sub
add
fistpl
push
stos
xchg
push
rolb
call
insb
arpl
add
outsl
mov
pushf
call
nop
pop
mov
jl
cmpsb
call
add
dec
adc
add
add
sub
fldln2
and
add
add
ss
in
add
add
cmp
ljmp
add
push
adc
add
pop
sti
call
call
xchg
aaa
and
add
call
popf
push
add
rcl
sub
add
sbb
jl
call
jno
add
cmp
mov
loop
mov
cmp
xchg
adc
push
add
jbe
call
or
jp
enter
sbb
pop
cltd
insl
es
call
std
lock
loope
dec
inc
call
addr16
xor
add
call
aad
push
fs
iret
sbb
adc
call
insb
sbb
loop
fisubl
add
xor
add
call
cmpsl
call
and
add
pop
mov
add
sub
call
pop
cli
outsb
xchg
mov
xchg
push
add
xor
add
insl
test
add
add
iret
jbe
jo
add
call
sbb
stos
add
call
call
call
shr
call
inc
call
call
or
jo
add
call
pop
call
cmp
add
call
popa
add
mov
call
es
jmp
jmp
sbb
cmp
in
push
mov
decb
dec
sbb
push
call
call
dec
fwait
leave
out
ja
xlat
jecxz
callw
call
int
stc
and
call
call
call
and
add
or
scas
push
pop
test
or
aaa
sub
sbb
add
pushf
aad
mov
jp
scas
jle
das
xor
add
inc
call
jmp
call
sbb
add
ret
push
cmp
call
stos
sti
sbb
add
add
add
in
pop
jo
add
call
stos
sbb
inc
call
add
call
add
stc
ss
add
add
sub
fsubp
call
xor
add
cmp
shr
add
add
fldt
stos
push
add
rol
call
add
and
add
leave
push
ja
xor
shr
movsl
call
call
sbb
push
je
call
add
inc
add
sub
call
add
mov
call
add
mov
mov
add
gs
push
lahf
aam
inc
add
fptan
xchg
bound
add
push
call
mov
add
rorl
call
add
enter
sub
add
sbb
lahf
out
sub
out
push
add
mov
cwtl
fisubrs
call
jg
sub
or
push
je
call
out
das
or
sub
fdivl
xor
xor
add
inc
add
jmp
push
add
mov
aaa
adc
lcall
add
call
add
test
add
jb
add
call
lahf
mov
adc
add
lret
push
xchg
inc
add
dec
sub
out
mov
and
add
in
sbb
cwtl
lahf
push
mov
and
add
rcll
rcl
loope
call
add
call
sub
sbb
add
rcrl
push
ja
cmp
xchg
mov
iret
or
cld
lret
jle
adc
add
mov
imul
sub
call
xchg
or
insb
cmpsb
call
or
mov
fsts
add
out
sub
jnp
sub
loopne
cmp
ret
call
add
fbstp
add
jns
stc
outsl
test
add
mov
inc
add
mov
add
stos
ret
sub
add
add
add
shlb
call
or
ret
call
ret
call
xchg
outsl
out
pop
mov
test
movsl
call
call
jnp
call
mov
cltd
sti
in
fadd
call
cmc
cmp
pop
mov
insb
mov
call
add
push
jg,pt
sub
gs
rcl
repnz
call
jp
dec
scas
enter
mov
in
mov
sbb
sub
cmp
call
mov
call
call
add
add
push
movsb
call
jnp
mov
add
bound
add
cwtl
test
in
push
add
mov
call
lods
xor
add
add
stos
mov
hlt
ret
call
cmp
call
add
sbb
adc
add
mov
xchg
dec
outsl
inc
add
sbb
movsb
call
push
add
mov
push
inc
call
add
cs
sti
call
add
out
cmp
ret
call
pop
mov
sti
cmc
out
push
push
jo
add
ret
xor
add
pop
pop
and
lcall
add
jmp
test
and
add
flds
call
jo
add
jg
popl
add
cwtl
scas
scas
or
aas
push
call
mov
mov
dec
mov
insb
nop
out
sub
imul
dec
dec
sbb
std
or
call
sub
push
mov
add
mov
popa
add
cmp
call
mov
jo
add
add
shr
add
or
add
mov
sti
sahf
daa
call
adc
call
push
mov
add
or
xchg
and
add
call
add
mov
dec
nop
push
add
dec
inc
call
add
push
push
add
ss
cwtl
add
das
das
loope
aaa
xchg
sub
mov
push
push
fwait
jb
add
rcrb
mov
aaa
push
lret
stos
out
sbb
add
call
add
call
add
call
add
add
in
xchg
daa
call
sub
call
inc
call
call
call
add
call
add
add
outsb
push
add
add
mov
add
mov
call
xor
add
call
ret
call
add
lea
lret
cmp
sbb
call
cmpsl
call
jge
jo
add
or
inc
add
imul
callw
imul
push
inc
add
arpl
add
inc
call
xchg
xchg
icebp
call
cs
call
add
jmp
call
insl
sbb
sub
stos
stc
mov
and
add
fwait
or
call
push
add
pop
call
add
cli
xchg
mov
scas
sub
jg
call
jbe
call
call
add
aas
cld
dec
out
movsb
call
lock
loop
or
mov
call
pop
jl
cmpsl
call
je
call
mov
out
ret
lea
add
add
dec
cmpsl
call
mov
mov
mov
icebp
test
sub
callw
add
call
cmp
push
jnp
cmpsl
call
jle
add
das
insl
push
sahf
jne
lods
mov
imul
add
ljmp
hlt
stc
test
das
xchg
xor
call
lahf
mov
aad
test
jae
add
xor
add
jno
add
add
mov
push
add
aaa
pusha
add
loopne
aam
inc
add
push
jo
add
add
jb
add
mov
mov
adc
add
inc
call
add
add
in
dec
jae
add
ds
stos
scas
xor
add
xchg
mov
xchg
add
out
stc
mov
add
js
movsl
call
int
add
sub
call
sahf
push
add
or
adc
popa
add
add
add
fisttps
xor
xor
jnp
jecxz
pop
adc
adc
loop
xor
add
fs
mov
cwtl
add
add
add
push
call
call
call
add
add
add
xchg
mov
or
iret
mov
adc
add
add
add
add
add
sti
mov
call
push
dec
in
rcrl
cltd
push
icebp
shll
call
cmp
add
lahf
shr
outsb
mov
call
add
sub
adc
add
add
movsl
call
cmp
dec
sub
clc
sub
inc
call
ja
sub
push
add
call
pop
mov
add
lret
outsl
xor
add
gs
call
xor
call
shll
pop
adc
push
push
call
call
in
je
shr
incl
add
pushf
sbb
add
pop
xchg
jmp
test
add
mov
add
add
pop
aam
cli
dec
lahf
push
int
test
pop
push
xchg
call
call
movsl
call
fisttpl
mov
pop
jae
add
cltd
rorb
add
cmp
call
shr
cli
cld
mov
push
xor
add
cld
out
adc
add
fdivrs
shr
pop
push
cmp
dec
add
call
xor
xor
call
call
inc
add
int3
cmp
sub
shr
sub
fmuls
and
int
add
arpl
add
jb
add
add
push
call
jg
jns
call
jnp
insl
pop
lret
stos
ret
call
jbe
callw
call
call
add
adc
add
and
add
call
pushf
mov
add
xchg
aas
mov
or
call
ds
insb
in
dec
xchg
call
imul
dec
inc
call
mov
outsl
push
add
pusha
add
and
add
stos
lret
fiadds
add
and
cmpsl
call
add
add
cmpsl
call
cwtl
mov
rcl
push
call
nop
test
gs
aaa
lret
insl
xor
add
dec
jnp
xor
add
add
rorl
mov
dec
pop
or
cmc
or
add
mov
and
add
call
call
xchg
in
sti
sbb
xor
add
and
add
pop
in
cmp
add
xor
add
sub
sbb
hlt
mov
lods
cmpsl
call
push
add
dec
or
add
lret
xchg
lods
push
addr16
sbb
shll
add
sub
lret
add
movsl
call
cmp
add
lea
add
jb
add
lods
mov
mov
arpl
add
sub
sub
sbb
adc
das
xchg
jmp
jnp
dec
std
sub
ds
call
call
enter
call
call
iret
stos
push
add
nop
nop
stos
aaa
gs
add
lea
popf
sbb
inc
call
dec
aaa
fiaddl
push
gs
bound
add
loope
cmp
jae
add
fcos
sbb
dec
add
add
daa
call
jg
call
adc
call
jecxz
push
mov
xor
mov
call
call
add
call
add
add
das
add
scas
es
xor
add
inc
call
call
aam
dec
ret
add
inc
add
or
xchg
add
shl
aam
add
call
enter
sub
add
fistl
mov
cmc
out
mov
inc
call
mov
add
and
add
call
add
sub
das
dec
add
add
je
and
add
xor
add
fbld
call
push
adc
add
add
aas
fisttpll
arpl
add
call
add
xlat
movsb
call
add
jae
add
add
add
bound
add
add
adc
add
add
add
add
ds
jo
add
aam
call
nop
addr16
call
dec
add
add
add
jnp
add
iret
cmp
out
adc
add
call
sbb
call
mov
call
sub
jo
add
mov
add
and
add
call
cmp
or
add
xor
call
dec
mov
call
mov
call
popf
daa
call
decl
and
aaa
xor
add
call
loope
push
loope
sub
js
aam
sbb
call
add
add
mov
call
loope
add
cmpsl
call
cmc
push
in
dec
mov
add
jge
loop
js
mov
add
das
sbb
add
sahf
dec
es
and
add
call
xchg
sub
jb
add
add
test
call
call
add
xlat
xor
add
jl
call
add
call
int
cmp
dec
lods
jne
mov
ss
sub
add
call
testb
pop
ds
add
fcomip
lahf
das
cld
sti
mov
int
fst
pop
cmpsb
call
call
out
mov
shr
call
in
push
add
repnz
mov
push
call
add
scas
pusha
add
push
add
loopne
rorl
call
call
or
call
mov
add
xchg
push
pop
call
out
cmp
dec
push
testb
call
add
add
pop
sahf
je
add
shr
jns
add
mov
scas
nop
push
pop
imull
add
sub
xchg
cmpsl
call
pushf
inc
call
loop
push
jmp
xor
add
call
inc
call
add
into
sbb
add
add
aam
call
push
cmpsl
call
call
call
call
mov
add
xor
add
das
mov
mov
add
push
add
cli
jbe
add
ss
xor
add
add
fists
add
ret
call
add
add
add
call
add
pop
xchg
dec
test
faddl
add
push
add
or
in
iret
pop
xor
add
sar
or
pop
call
jg
or
mov
in
xchg
pop
cmp
push
imul
xor
leave
push
add
sbb
call
mov
adc
add
add
call
xchg
rcll
add
add
push
loope
inc
call
cmpsb
call
add
or
call
add
movsb
call
add
add
ss
jnp
test
add
lock
lods
lahf
in
movsl
call
pop
aam
push
add
inc
add
add
add
aaa
and
mov
popa
add
vmovaps
call
add
push
call
movsb
call
add
mov
add
push
lret
sub
mov
call
xor
add
xchg
xchg
fisubs
add
xor
add
add
sub
hlt
cmp
in
call
aas
xchg
pusha
add
adc
add
add
sbb
add
mov
ficoml
lods
add
add
idivl
cmp
cmc
or
add
lods
lods
sub
add
xor
add
add
fwait
push
mov
add
jl
add
and
add
add
imul
mov
daa
call
jg
sbb
cmp
call
mov
movsl
call
mov
mov
mov
ja
call
fdivl
cmp
push
out
adc
add
call
xchg
xchg
stos
jp
repnz
int3
cmpsl
call
fidivs
add
outsl
icebp
loop
sbb
pop
call
xchg
test
push
add
sbb
jo
add
scas
faddl
call
shlb
add
fsubl
add
enter
adc
add
repz
fstpl
jl
pushf
aad
call
lock
dec
test
out
lods
push
dec
add
add
repnz
call
pop
das
insl
cltd
int
add
xchg
stos
movsb
call
add
inc
call
add
arpl
add
mov
lods
cmp
fs
add
jmp
call
ret
xchg
fs
filds
sbb
call
jmp
push
xchg
jle
add
and
and
add
call
add
inc
add
sub
add
test
adc
add
call
shll
add
or
add
cmc
mov
pop
adc
stc
out
ds
sub
add
fsubs
adc
add
or
fnsave
fbld
add
sahf
pop
fbstp
add
sbb
add
je
xchg
push
add
jo
add
mov
cmp
scas
inc
add
into
sti
jns
adc
and
sub
cmp
popf
mov
add
and
add
call
add
and
add
pop
cmp
sub
call
adc
add
inc
call
sub
add
call
jl
call
push
mov
add
insb
scas
jecxz
enter
shr
icebp
bound
add
add
push
mov
push
add
mov
mov
push
jns
shll
sti
in
and
cltd
outsl
push
add
div
jp
add
sub
xchg
lods
mov
shlb
call
xor
jp
jmp
call
add
add
add
pusha
add
test
jge
call
pop
fwait
hlt
pop
sub
ret
call
add
adc
add
sti
jbe
xor
mov
pop
or
lahf
jl
add
call
add
jbe
arpl
add
test
pop
shr
call
add
add
and
add
add
inc
call
sub
stos
inc
call
fdivrs
inc
call
add
sub
add
jo
add
or
call
ja
in
sbb
leave
punpcklbw
add
call
pop
stos
rolb
push
or
call
dec
or
cmpsb
call
mov
inc
call
call
aam
adc
out
cmp
pop
aam
add
mov
test
in
fistpll
mov
call
call
jb
add
inc
call
call
call
mov
call
call
add
add
add
add
or
cmp
mov
call
ret
adc
adc
inc
call
add
cmpsb
call
call
call
and
or
call
add
cmp
and
add
inc
add
sub
sbb
call
out
push
shll
add
sub
call
xchg
sub
repz
xchg
cmp
out
adc
add
je
movsb
call
add
out
mov
ds
add
ja
xchg
nop
jmp
inc
add
mov
and
mov
jl
add
int3
dec
jbe
push
add
test
push
add
pop
cmpsl
call
repnz
popa
add
outsl
pop
idivl
iret
ficomps
add
mov
sub
arpl
add
add
ljmp
and
add
fimull
sub
call
sbb
aam
outsb
mov
ret
add
sub
insb
xchg
repz
sub
call
in
jl
call
out
xor
sub
mov
call
bnd
call
mov
mov
add
mov
call
add
xchg
xlat
xchg
insb
cmp
or
call
push
inc
call
add
and
add
nop
mov
lret
jmp
call
sub
in
stc
xor
add
aaa
fiaddl
sarl
add
icebp
sub
mov
xchg
inc
add
std
cmpsl
call
cmc
cs
add
repz
ficoms
repz
add
in
xor
stos
mov
stc
xchg
dec
cmpsl
call
jmp
fwait
int3
push
add
add
add
call
jne
dec
or
into
xor
call
inc
add
inc
add
mov
push
add
or
call
push
mov
call
ljmp
add
