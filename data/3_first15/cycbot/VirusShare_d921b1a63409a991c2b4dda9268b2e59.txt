repz
aas
divl
ret
cmp
ret
xchg
movsl
pushl
decl
adc
add
pop
shll
push
pop
push
pusha
incl
ljmp
dec
fdivrs
addr16
xor
xchg
in
inc
ljmp
divl
int
decl
lcall
or
jmp
cs
and
sbb
daa
lcall
cld
pushl
pusha
ljmp
sar
movsl
jmp
cltd
adc
lcall
xor
add
xchg
inc
pushl
incl
incl
and
int3
cwtl
inc
ljmp
add
ljmp
inc
lcall
fldcw
ret
sahf
add
dec
push
pop
out
ret
mov
pusha
pushl
sub
fcomps
cmp
ljmp
pushl
pushl
shll
clc
push
loop
push
loopne
mov
pushl
cmp
or
cmpsl
jmp
cmp
bnd
sbb
ljmp
pusha
ljmp
and
dec
mov
lea
testl
clc
sar
add
pushl
inc
mov
dec
rcrb
incl
dec
push
mov
pop
adc
pop
dec
xchg
push
mov
fdivrs
in
mov
pushl
incl
out
or
cli
lea
lcall
adc
call
dec
or
out
sbb
and
lcall
cmp
pop
mov
fists
arpl
sub
inc
lods
inc
fistps
ror
loopne
out
dec
mov
cmp
pushl
fsts
call
aad
cmc
xchg
and
cwtl
cmpsb
inc
push
nop
leave
mov
add
incl
push
lcall
mov
cmpsb
pushl
xor
mov
movsb
call
inc
incl
pushl
out
dec
mov
mov
sbb
insb
jne
fisubl
pop
dec
jge
xchg
cld
outsl
or
adc
dec
dec
movsb
decl
mov
push
add
lcall
add
cli
sbb
sub
push
adc
ljmp
ds
pop
add
decl
sar
pop
std
and
add
push
add
scas
cli
sbb
call
or
decl
cltd
out
and
sub
adc
dec
mov
out
add
incl
outsl
das
call
int
jmp
or
stos
mov
inc
decl
out
sbb
jmp
nop
pop
test
jp
mov
incl
decl
out
aad
imul
decl
adc
jle
jbe
jno
lcall
inc
mov
cmpsb
pushl
push
call
inc
ljmp
scas
jno
decl
fnstcw
mov
mulb
outsb
out
das
ret
lcall
xchg
scas
aaa
mov
repz
lcall
cltd
in
xchg
aad
stc
fs
cli
adc
jnp
jo
mov
mov
jmp
add
decl
lods
add
ljmp
inc
jmp
inc
call
aaa
push
movsb
ljmp
pop
adc
and
fstl
cmp
call
pop
repnz
mov
out
mov
call
xchg
mov
ljmp
leave
mov
incl
inc
jmp
incl
adc
decl
sar
aaa
imul
mov
incl
out
sbb
pusha
call
into
cmp
ljmp
jge
pop
in
aad
inc
cmp
lcall
xor
or
xor
decl
pushl
inc
pushl
and
pop
cmp
mov
movsl
call
clc
add
incl
in
dec
adc
inc
push
dec
mov
incl
test
fsts
call
out
sub
insl
leave
push
cmp
mov
lret
stos
inc
cmp
cmp
adc
test
ljmp
jl
cmp
jl
cmp
lcall
in
arpl
sbb
pop
xlat
ljmp
movsb
inc
jns
jl
loope
loope
mov
jle
ljmp
push
xchg
fs
imul
fildl
dec
divb
xchg
nop
add
ljmp
pop
cmp
lcall
sbb
cs
jmp
xor
xchg
out
int3
cmp
lret
stc
sbb
iret
cmp
pushl
ljmp
mov
call
jns
imul
decl
and
loope
in
sar
or
incl
ret
inc
decl
icebp
cmpsl
incl
call
pop
push
call
inc
ljmp
jp
jl
lcall
ret
mov
cmp
ss
clc
cs
and
dec
sbb
pushl
push
jmp
ja
xchg
hlt
pushl
jmp
out
jl
aad
fmull
pushl
incl
fists
leave
dec
cld
jle
cwtl
fdivl
add
or
or
xor
call
lods
call
jmp
decl
lea
sub
adc
pushl
cld
sub
int
pushl
add
jns
test
pop
test
das
je
popf
mov
fdivrs
xchg
mov
sar
stos
adc
aaa
mov
xor
or
cmp
cmpsl
jmp
movsl
pushl
call
test
lcall
mov
mov
sub
shl
outsl
xchg
cmp
movsl
inc
ljmp
jmp
xchg
aas
cwtl
js
and
in
dec
decl
jl
mov
dec
jl
decl
sbb
into
mov
lcall
incl
cmp
incl
add
pushl
mov
inc
ljmp
ja
test
movsb
std
pop
cwtl
adc
ljmp
lcall
movsb
call
jno
push
jge
mov
jmp
pop
add
and
decl
dec
loopne
in
pusha
call
fadds
mov
mov
stos
ret
ljmp
hlt
out
shrl
aas
lcall
pop
mov
adc
jge
pushl
cmpsb
incl
or
or
int
cmp
xlat
xchg
fsubrl
incl
xchg
dec
mov
nop
dec
imul
scas
lock
inc
pushl
pushf
call
fistps
mov
cli
pop
cmp
arpl
cmp
inc
lcall
cmpsb
call
sar
cltd
pop
dec
fnstsw
and
adc
cmp
iret
in
mov
cmp
scas
or
mov
push
ljmp
add
adc
jmp
decl
or
push
jno
inc
dec
cmp
movsl
ljmp
jl
add
ljmp
xchg
mov
jmp
pushl
xchg
stos
aam
ljmp
xchg
mov
push
lahf
jl
lcall
or
jmp
testl
call
outsl
pop
lcall
mov
jne
pushl
push
mov
mov
aam
testl
dec
fwait
imul
xchg
arpl
push
ja
sbb
or
pushl
icebp
fstps
mov
ljmp
call
leave
sub
call
jmp
sti
mov
fldcw
mov
dec
test
jmp
dec
xchg
in
adc
and
jnp
xor
mov
imul
adc
inc
cmp
mov
mov
fistps
lea
loop
jns
cmp
push
xchg
pop
ljmp
popf
adc
incl
int
inc
out
mov
mov
jmp
push
and
ret
cmpsl
call
jb
dec
jno
mov
jb
push
out
cmp
and
mov
imul
test
dec
mov
lods
xor
push
js,pt
cmp
push
xlat
cmp
inc
push
and
inc
jmp
jmp
mov
or
sti
ljmp
test
jmp
adc
mov
decl
cmp
pushl
sti
fidivl
sbb
dec
dec
or
dec
movsl
decl
lcall
decl
and
cmpsb
lcall
cmp
std
mov
jne
jge
push
push
pushl
mov
xchg
cmp
mov
mov
call
jmp
inc
call
icebp
pop
in
sbb
out
incb
std
popa
call
jno
dec
mov
out
das
pop
pop
pushl
aad
mov
insb
and
mov
mov
push
and
daa
stc
mov
aaa
jmp
cmp
pop
mov
pushl
xchg
out
lods
add
cmpsl
pushl
and
fdiv
jae
lcall
or
jmp
incl
lea
pop
mov
and
jb
jb
call
push
dec
in
xchg
jmp
inc
pushl
push
xchg
das
nop
ljmp
mov
aam
push
arpl
sub
cltd
xlat
aam
jae
stos
add
jmp
mov
aas
mov
test
dec
lods
mov
push
mov
roll
sbb
mov
loopne
cmp
push
loop
lcall
mov
inc
lcall
call
repnz
outsb
xlat
dec
xchg
cmp
xchg
dec
add
ljmp
xor
mov
cmp
pop
fldenv
call
shll
cwtl
fdivrp
jg
ljmp
push
jmp
inc
sti
ljmp
jmp
cmp
dec
push
xor
insb
fs
fidivrl
pushl
sarl
jmp
outsb
mov
cmp
fisubl
dec
sbb
lahf
mov
stos
jecxz
outsb
push
decl
push
fdivs
lret
arpl
add
lcall
xchg
test
and
pushl
lcall
es
dec
lret
lea
call
stc
decl
lcall
jge
jmp
ljmp
lret
push
sub
lcall
dec
jmp
icebp
and
pop
loop
inc
call
sbb
jmp
lcall
jo
mov
insl
adc
push
mov
ret
dec
rcll
lret
sub
lcall
or
dec
out
daa
incl
clc
nop
sar
pushl
mov
xchg
jno
mov
fnstcw
ljmp
sbb
pushl
push
and
lock
popf
add
lcall
enter
jmp
or
in
ja
imul
lret
js
push
cmpsl
inc
decl
decl
pop
pop
push
in
in
mov
cmp
enter
xchg
es
ficoml
lret
sbb
mov
icebp
cwtl
movsl
jmp
lock
call
mov
mov
movsl
jmp
call
incl
pop
xor
mov
jmp
hlt
inc
jg
fcmovne
ret
ljmp
sub
cmp
mov
push
push
incl
jmp
jmp
pop
adc
lcall
xchg
inc
pushl
sbb
call
inc
incl
aaa
push
movsb
cli
stos
aaa
sub
cmp
add
pushl
rorl
fxch
aad
or
push
mov
inc
decl
adc
in
inc
fists
push
decl
std
mov
dec
call
pop
adc
jmp
mov
decl
scas
cmp
std
aad
inc
call
add
mov
jmp
imul
pop
jp
and
in
sar
lcall
add
decl
ljmp
loop
xor
jmp
pusha
inc
lcall
jmp
push
or
mov
cmp
lcall
and
stos
call
sub
iret
jo
fbstp
and
pop
cmp
lcall
cmpsl
jmp
adc
imul
testl
ljmp
cli
fadds
dec
bnd
jl
mov
jmp
ljmp
call
inc
lcall
xor
call
mul
push
je
aaa
out
inc
cmp
cli
cmp
inc
jmp
add
ljmp
lock
incl
arpl
xchg
mov
mov
loop
jbe
pushl
jae
sub
repz
dec
jb
sar
inc
call
mov
ljmp
dec
inc
pushl
arpl
out
sub
pushf
loope
pop
clc
dec
xlat
sub
cmp
sar
inc
decl
xchg
lcall
mov
cmpsb
push
pop
push
fcoml
cmp
dec
sar
adc
sub
jle
pop
or
call
xchg
in
xor
jmp
mov
fwait
out
movsl
ljmp
pushf
loopne
jge
imul
mov
in
pushf
insb
dec
int
sub
ljmp
adc
and
in
xchg
fwait
xchg
in
mov
fdiv
aaa
stc
jmp
jle
cmp
mov
addr16
cmp
ljmp
aas
idiv
inc
lcall
divl
push
decl
pop
push
jns
mov
decl
jp
jp
incw
xchg
sub
pop
mov
xor
clc
loop
decl
call
or
cmp
mov
incl
jmp
pop
cmp
inc
decl
call
incl
mov
js
aaa
dec
xchg
and
cmp
pop
in
dec
xor
mov
loop
addr16
mov
cld
and
fmull
push
cmp
std
mov
sar
mov
dec
aad
xchg
and
push
jecxz
sub
fwait
outsb
incw
jnp
sub
popf
xor
pop
inc
lcall
cmp
lret
stos
dec
scas
mov
das
in
lods
adc
inc
call
and
mov
sbb
pushl
lods
push
call
call
fimull
jmp
jmp
or
jmp
pushl
jmp
decl
jb
ljmp
incl
dec
insl
pop
jl
lret
jbe
pushl
adc
popf
pop
out
or
jmp
inc
aas
push
jae
sarb
jg
adc
shrb
jae
js
loop
sub
pop
sbb
xor
push
mov
sub
xor
call
and
jne
dec
push
call
test
je
movzbl
jmp
mov
add
mov
shr
push
push
addl
call
push
call
leave
ret
push
mov
cld
push
push
mov
lods
xor
mov
sub
add
mov
add
stos
xor
pop
pop
leave
ret
jmp
jmp
jmp
mov
int
xor
push
mov
cmpsb
decl
scas
mov
pushl
imul
dec
gs
add
add
out
decl
lcall
pushf
push
cmpl
jmp
outsb
add
sbb
decl
mov
dec
fimuls
add
cmp
pushl
inc
decl
in
or
aad
std
mov
push
or
sbb
stos
cmp
adc
xchg
test
jmpw
xor
outsb
sbb
inc
add
add
fisubs
jno
cld
icebp
fistps
pushl
jmp
cmp
sbb
jmp
push
shl
out
fwait
in
xchg
xor
test
adc
pushl
jle
add
jmp
jmp
dec
mov
mov
pushf
and
test
pushl
inc
ljmp
pop
add
mov
movswl
jmp
add
add
in
mov
mov
mov
cmp
dec
js
jmp
jmp
in
add
sar
add
add
jp
pop
cld
push
rcrb
jmp
stc
pop
and
decl
adc
sar
sbb
lcall
lcall
push
ds
scas
mov
aad
jmp
jmp
incl
pushl
loop
fimuls
imul
nop
or
cltd
pop
cmp
in
mov
sar
push
movsb
ljmp
arpl
add
or
add
jnp
into
cmp
daa
jmp
incl
pushl
jmp
add
add
aaa
and
mov
stos
push
pop
jmp
mov
jmp
pushl
lcall
call
push
ret
incb
add
pop
ja
cli
cmpsb
ljmp
shlb
and
outsb
add
std
xor
jo
jmp
incl
call
xchg
mov
cwtl
test
repz
cmp
nop
cmp
in
stc
dec
decl
stos
es
ljmp
pop
add
rcrl
add
mov
pushl
outsb
lock
pop
xchg
jnp
or
mov
popa
jmp
mov
imul
outsl
imul
pop
add
add
jb
ljmp
pop
dec
mov
fdivs
incl
adc
sub
decl
mov
xchg
cmp
mov
ljmp
call
pusha
jmp
cmp
call
jmp
mov
stc
test
xchg
or
adc
cwtl
aas
dec
insl
clc
pop
insl
shrb
loopne
and
outsl
cltd
xor
cmp
mov
push
sbb
fptan
stc
dec
xchg
ret
call
or
call
jmp
dec
lcall
jmp
cmp
pushl
inc
decl
and
xchg
cmp
jmp
cli
in
or
push
cwtl
cwtl
xor
jmp
ficomps
ficoms
pop
jbe
ljmp
loopne
adc
jmp
and
icebp
cmp
call
mov
inc
add
rorl
or
ljmp
lock
movsl
cli
xlat
pop
push
pop
cmp
das
imul
ljmp
sub
jmp
pop
jne
mov
mov
jmp
leave
dec
shll
test
adc
pop
dec
cmp
ljmp
clc
xchg
inc
lcall
pop
lods
insl
adc
mov
iret
ficoml
inc
pushl
inc
jmp
pushl
sti
cmp
inc
inc
jmp
decl
clc
xor
jl
jmp
mov
jg
fisubs
dec
mov
sub
popf
adc
mov
pushl
mov
mov
jmp
lcall
mov
or
lods
stc
or
ss
dec
xor
aas
scas
xchg
add
adc
jbe
pop
movsl
ljmp
incl
ljmp
cmp
je
decl
add
adc
cmp
aas
mov
incl
jmp
call
clc
incl
mov
cli
cmpsl
ljmp
cs
pushl
lods
mov
cmp
and
adc
add
jmp
leave
push
add
add
ljmp
sbb
call
adc
adc
mov
stc
xchg
sbb
or
cwtl
or
or
incl
cmp
push
inc
incl
ljmp
gs
cmp
mov
mov
decl
xor
insl
sub
xor
outsb
xchg
push
push
ljmp
lcall
pop
int3
or
mov
pusha
jmp
call
mov
push
jae
ja
out
mov
dec
hlt
incl
decl
inc
ljmp
inc
fiadds
cmpsb
call
mov
adc
js
dec
hlt
and
incl
or
aas
lcall
cmp
cmp
jne
mov
jmp
leave
adc
adc
call
lret
inc
lcall
loopne
and
test
inc
call
dec
mov
add
push
push
add
inc
decl
mov
add
das
clc
dec
and
movsl
ljmp
int3
cmp
repnz
sub
push
fst
adc
inc
jmp
decl
int
fbstp
sbb
cmp
dec
xchg
mov
mul
call
push
js
rolb
ljmp
outsb
cli
insb
scas
repz
mov
mov
push
ret
add
lods
inc
stc
push
jl
in
pop
pop
jecxz
cld
add
jl
jnp
cmp
das
aad
inc
fcmove
and
push
inc
call
call
pushl
xchg
xchg
push
pop
div
cmp
pushl
lahf
cli
mov
call
or
jns
push
xor
cmp
ljmp
inc
incl
pushl
mov
mov
ljmp
shll
decl
add
call
mov
call
loopne
ds
add
jmp
mov
lahf
lahf
imul
call
je
pushl
xchg
jno
ljmp
jg
or
incl
clc
jmp
add
int
ds
popf
dec
pop
jno
loopne
call
add
add
push
add
add
push
stos
lock
sti
sbb
push
ret
add
jnp
call
adc
sbb
inc
cmp
in
inc
jmp
mov
mov
mov
call
pop
pop
pushf
push
call
or
jb
pop
fisttpl
in
pop
mov
xchg
mov
call
scas
daa
add
adc
adc
lock
scas
cmc
xchg
lcall
ds
jmp
pushl
rorl
jo
xor
jns
pushl
enter
pop
adc
stos
inc
dec
dec
negl
cli
push
stos
jne
mov
ss
test
and
in
negl
add
cmp
add
xchg
inc
call
lcall
fwait
loopne
or
push
movsb
jmp
sar
dec
test
pop
notb
ja
lcall
dec
lock
cmp
sub
fidivs
cmp
ljmp
add
add
test
cmp
dec
jmp
cld
cld
movsl
pushl
mov
mov
ficompl
nop
aad
push
fldl
push
imul
stc
imul
or
int
pushl
dec
cmp
ret
lcall
push
test
mov
stc
call
xchg
lahf
push
mov
jmp
add
add
call
jbe
jb
push
dec
cmp
mov
leave
inc
fnstsw
scas
mov
jge
ds
jle
clc
mov
jle
inc
lcall
adc
inc
incl
cs
and
mov
fisubl
push
imul
enter
incl
mov
scas
add
push
test
jne
decl
outsb
js
add
add
mov
push
ret
add
pop
add
call
mov
xchg
lahf
mov
outsb
cltd
lods
loop
dec
out
push
pushl
mov
stos
pop
dec
cmp
ja
dec
xchg
mov
adc
lds
add
mov
into
jbe
push
sub
mov
xlat
xchg
stos
xor
call
push
outsb
bnd
ss
stos
mov
or
pop
pushf
pusha
dec
cmp
add
incl
incl
ljmp
pushl
jmp
mov
xchg
dec
repz
out
incl
leave
mov
add
mov
adc
inc
call
xchg
fstl
inc
add
add
add
add
fbstp
jmp
loop
adc
rclb
dec
sbb
cmp
dec
lret
icebp
daa
ljmp
inc
dec
sahf
ja
or
int
sbb
lcall
xchg
aas
outsl
sbb
in
and
fwait
rol
fcoms
lahf
cmpsl
decl
cwtl
sub
lcall
inc
ljmp
fstl
clc
pop
jecxz
stc
out
repz
adc
std
cmpsb
jns
mov
xchg
mov
push
dec
jb
xor
and
push
addl
add
jmp
jg
mov
js
dec
std
mov
mov
sar
enter
xor
add
jmp
inc
push
add
popf
push
shll
call
pop
inc
call
dec
iret
roll
fistpll
jmp
aad
pop
jle
pop
sahf
push
movsl
incl
fsubp
jmp
mov
call
jmp
mov
out
cwtl
pushl
lcall
jmp
rcrl
incl
decl
cmp
scas
fsubrs
dec
jnp
jo
sar
jmp
stos
sar
sub
push
pop
push
in
rol
lcall
xchg
pop
add
xchg
mov
sub
and
vmulsd
and
push
xor
inc
inc
dec
and
cmp
cmpsb
pushl
callw
jmp
pushl
shr
inc
add
add
pop
add
icebp
mov
jge
mov
push
add
mov
and
add
add
rcl
pop
and
popf
sti
and
lods
mov
or
movsb
pushl
and
insl
outsl
cmp
push
out
or
not
push
xor
push
ret
mov
sbb
push
ret
add
cmp
mov
out
outsl
in
mov
sbb
loope
into
out
dec
mov
outsb
xchg
std
jle
addr16
fdivrp
pushf
lock
in
enter
xchg
push
jb
out
mov
jp
and
loopne
ja
cmp
mov
mov
repz
test
inc
fmuls
pop
mov
mov
nop
pushl
sbb
pushl
jge
sti
pop
movsb
cmp
data16
fsubl
sbb
sbb
call
push
add
add
add
adc
incl
sar
cli
mov
jne
or
dec
test
je
push
pushl
aad
mov
sbb
jns
call
loope
ret
jl
ror
jns
dec
push
pusha
cmp
sbb
jmp
add
out
add
push
incl
incl
push
pop
pop
sbb
mov
push
mov
adc
js
out
sbb
mov
adc
jae
ret
decl
pop
dec
pop
xor
pop
push
mov
test
sbb
cmp
lcall
lret
jle
mov
pop
cmp
jp
push
decl
jbe
ss
rcrl
ss
push
fucom
jmp
cmp
pushl
dec
mov
mov
fbld
jmp
std
out
cmpsb
jmp
mov
jmp
ror
add
cmc
rcll
sbb
in
add
add
add
adc
flds
xchg
lret
out
adc
pop
sbb
mov
mov
jmp
or
sti
cmp
push
jmp
add
add
mov
push
push
add
add
add
pop
lea
in
mov
ficomps
scas
insl
mov
push
sub
lret
incl
or
jmp
insb
insb
push
ret
add
jno
insl
outsl
mov
dec
dec
mov
mov
pop
adc
jne
jmp
jnp
out
loop
lods
jb
loopne
ljmp
cmp
xor
adc
mov
jns
jb
cmpsb
jmp
mov
cltd
out
aad
test
add
ljmp
std
call
imull
fildl
fcompl
mov
cmp
jmp
xchg
add
push
arpl
pop
ljmp
ljmp
add
mov
lret
mov
dec
cmc
movsb
call
ja
fbstp
insl
je
stc
lret
cmp
movsb
jmp
out
xchg
cmp
pop
xor
dec
inc
mov
incl
xchg
rcll
daa
call
or
push
call
arpl
jo
push
jmp
jmp
pushl
rcrb
imul
cmp
pushl
cmp
or
scas
pop
lea
cwtl
cmp
lahf
mov
mov
jge
inc
jmp
lcall
insl
inc
incl
push
jge
mov
sti
xor
xor
ljmp
pop
pushl
cmp
cli
and
dec
stos
sbb
popf
push
pop
mov
inc
call
mov
decl
add
jmp
adc
cmpsb
mov
cltd
and
sar
jmp
ljmp
jecxz
push
sti
cltd
test
xlat
leave
xchg
pushw
test
imul
cmp
mov
inc
add
out
dec
test
icebp
scas
mull
sub
jl
dec
fadd
jmp
cmp
xor
pushf
add
lcall
test
je
filds
ja
rcr
fmuls
pushl
cmp
add
pushl
jmp
call
hlt
pop
int
decl
sub
push
pop
push
ret
add
out
add
jbe
call
enter
lods
cli
dec
or
mov
adc
ret
add
cmp
adc
out
stos
aad
loope
arpl
cmp
or
lcall
push
imul
fmul
aam
call
push
incl
jge
mov
je
inc
call
data16
sti
lret
cs
testb
sbb
lea
ud2
fcmovbe
add
mov
call
jmp
push
mov
sub
clc
or
lcall
das
dec
push
xchg
out
scas
and
sub
stc
popa
fcompl
dec
push
add
jmp
add
add
imul
cli
cmp
lcall
jp
xor
cmp
incl
pusha
decl
lcall
sbb
std
out
adc
clc
inc
call
pushl
dec
scas
cmp
pop
pop
cmp
decl
jmp
incl
test
lcall
add
push
in
add
cmp
pop
push
mov
shrb
add
imul
out
incl
leave
add
sbb
mov
daa
call
cs
ret
jmp
jno
push
test
pushl
ljmp
and
pop
mov
inc
inc
add
loope
xchg
int3
xor
sub
inc
jmp
ljmp
pop
ret
mov
fdivrs
lods
mov
nop
mov
icebp
out
jbe
dec
jb
dec
sar
jl
adc
js
mov
mov
xchg
je
jmp
dec
push
fisubs
int
ljmp
add
cmp
ja
ss
xchg
popa
lcall
daa
pushl
jo
push
xchg
mov
pusha
ljmp
iret
and
std
decl
gs
out
pop
popa
lcall
mov
pop
mov
jg
ljmp
test
lcall
call
inc
ljmp
call
and
repz
or
decl
call
and
loop
ret
out
xor
push
cmp
lods
loop
dec
sub
mov
push
shl
add
jmp
xchg
cmp
pushl
jmp
add
add
inc
lcall
push
xchg
test
pop
xchg
dec
ds
ret
in
rcrb
fstl
xor
decl
imul
in
lea
and
and
mov
incl
jp
pusha
incl
aad
mov
adc
xor
add
mov
stos
adc
dec
or
into
xchg
mov
repnz
pop
decl
test
decl
clc
ss
jg
add
or
mov
xor
and
lcall
lcall
ljmp
dec
mov
decl
fsts
outsl
lock
lcall
xchg
xchg
lret
repnz
cwtl
push
sbb
pop
inc
add
roll
pop
add
incl
cmp
sub
xchg
sahf
outsb
cmp
lahf
sub
pop
je
jmp
call
adc
pop
sub
scas
pop
jmp
lcall
inc
pushl
ret
dec
pop
mov
imul
cmp
push
cs
add
shll
lcall
cld
loop
jo
inc
call
pop
cs
inc
inc
lcall
sub
dec
and
and
and
mov
das
xchg
std
sbb
jbe
push
aam
es
fldl
fwait
push
inc
pushl
je
mov
leave
jmp
leave
add
add
add
jle
jp
xchg
ja
insl
xlat
arpl
inc
call
push
ret
add
leave
add
in
sar
in
mov
push
aas
add
add
jnp
mov
xchg
xchg
adc
jmp
ljmp
outsl
sub
sar
jae
pushl
push
lcall
dec
pop
mov
decl
shlb
lcall
fldenv
fnsave
xor
or
xchg
ljmp
int
lcall
loopne
sub
dec
je
iret
ljmpw
into
inc
decl
lcall
mov
decl
sub
add
pushl
mov
jmp
mov
sahf
mov
jmp
xchg
mov
pop
and
incl
call
push
sbb
add
add
pop
out
outsb
mov
mov
rolb
mov
dec
popa
decl
pop
jnp
loope
lahf
jmp
pop
mov
mov
stc
js
scas
jae
add
jmp
add
add
jl
or
push
mov
jmp
incb
add
adc
add
ljmp
cmpsb
call
mov
inc
incl
jmp
js
aas
pop
pop
push
testl
jmp
hlt
jno
outsl
pop
mov
lock
clc
inc
lcall
ljmp
sub
ja
add
call
jno
mov
push
mov
clc
and
call
fcmove
and
pushf
mov
call
decl
jmp
push
add
add
push
inc
ljmp
jbe
mov
pop
lret
sbb
or
xchg
adc
rcrl
ja
inc
lcall
jmp
push
ret
add
popf
out
pusha
inc
call
pop
add
pushl
xchg
pushf
mov
mov
decl
lret
cld
sbb
xchg
xor
and
cmp
ljmp
mov
fsts
ljmp
push
lcall
mov
jmp
add
add
mov
cmp
cmp
je
call
xor
push
add
sub
jge
pushl
cld
add
dec
sbb
aas
push
cs
sti
pop
loope
sub
jge
mov
leave
pop
lcall
jg
ljmp
lods
das
mov
sub
decl
call
mov
movsb
pushl
call
call
pop
repnz
cmp
mov
cmpsb
ljmp
popa
incb
shlb
insb
xchg
sbb
cmp
adc
inc
jmp
jmp
decl
imul
dec
cmc
scas
jno
fmull
lock
pop
inc
pushl
je
xor
or
push
call
cmp
add
add
add
mov
call
ljmp
insl
jmp
cmp
ljmp
add
xchg
or
add
mov
add
cmp
decl
inc
add
add
add
incl
jmp
incl
inc
call
incl
insb
nop
add
jmp
mov
mov
add
pushl
mov
decl
int
in
or
iret
ljmp
mov
ljmp
sub
push
sar
fistps
lret
in
adc
cmpsl
fmull
cmp
rol
inc
jnp
jge
add
lcall
pop
call
pop
and
xor
add
aad
jb
jg
jmp
in
test
mov
sbb
cmp
add
add
jnp
mov
decl
test
cmp
jmp
incl
dec
inc
decl
dec
xor
sar
test
sahf
xor
sbb
push
std
in
fnstenv
pop
hlt
cmp
sar
out
lock
mov
jmp
mov
fsubl
ljmp
call
mov
xor
add
push
add
add
pop
lea
incl
jno
add
add
add
add
push
sub
popf
out
sbb
push
add
push
ret
jae
mov
jae
sbb
movsb
dec
sub
pushl
push
mov
cmc
mov
scas
push
incl
call
push
aas
call
push
dec
es
sti
push
iret
sub
decl
add
jmp
push
mov
push
dec
push
mov
decl
pop
xchg
ss
jb
and
mov
dec
adc
incl
dec
push
xor
sub
mov
rorb
sar
push
mov
mov
add
pop
add
shll
pop
fcoml
xchg
sti
lret
cmp
lcall
xor
push
cmp
shrl
incb
add
cmp
dec
lret
sub
sar
lcall
jp
cmp
mov
pushl
jmp
out
xchg
faddp
call
incl
cltd
mov
and
xchg
sbb
mov
ljmp
and
enter
cmpsl
decl
jmpw
mov
dec
push
ja
in
mov
or
js
add
mov
add
mov
push
ret
add
call
cmp
xchg
test
fdivs
lahf
sar
push
pushl
decl
push
jl
je
decl
inc
call
adc
mov
push
add
jb
movsl
add
decl
jg
ljmp
mov
aam
loope
xchg
ljmp
push
add
push
mov
dec
push
cmp
push
jge
jge
decl
jmp
add
add
sbb
sub
jmp
cmp
decl
lcall
ljmp
decl
dec
test
dec
jmp
decl
ljmp
cmp
mov
fcompl
cmp
jb
mov
into
xor
and
cmp
popa
incl
sar
aam
and
mov
rcrb
lcall
mov
decl
in
jp
add
push
add
shl
lcall
dec
loope
imul
pop
push
cmp
lcall
ljmp
ljmp
mov
jp
cmp
jmp
aaa
stos
dec
add
lcall
dec
dec
ljmp
xlat
test
mov
jge
ljmp
push
fistpll
xchg
jecxz
add
call
icebp
inc
cmp
mov
push
jns
add
adc
add
cmp
call
push
popa
jmp
adc
outsb
adc
dec
xchg
mov
scas
lock
mov
jmp
incl
loop
sbb
adc
mov
decl
jg
cli
cmpsl
pushl
push
sti
or
add
cwtl
xorl
fidivs
xor
fnstcw
cli
aad
inc
fisubs
rol
lcall
insb
pushl
mov
fstl
cmp
cmp
aas
push
dec
jb
mov
pop
sub
lret
jmp
out
imul
adc
mov
pop
or
lcall
repnz
incl
in
jae
outsl
fwait
xchg
arpl
xor
call
popf
addr16
mov
push
adc
imul
clc
lea
mov
pop
sbb
test
inc
call
jnp
or
ds
push
mov
incl
lock
lods
cmp
lret
mov
add
add
add
add
js
pop
decl
mov
popf
inc
add
leave
add
out
fst
loopne
in
lret
dec
push
cmp
push
mov
pushl
jmp
cmc
mov
clc
push
ret
mov
jns
xor
dec
mov
dec
inc
decl
ljmp
mov
decl
adc
je
scas
adc
shrb
or
das
jns
adc
dec
das
sub
sub
call
xor
cmp
call
shr
or
add
add
add
dec
stos
push
out
jb
sbb
scas
dec
pop
sar
aaa
jae
imul
inc
fbld
out
scas
sub
or
call
add
jmp
incl
call
mov
pop
jns
ljmp
ljmp
incl
lret
cmp
jmp
push
scas
fwait
nop
fs
int
icebp
dec
cmp
lret
dec
mov
xor
cmp
add
push
ret
add
outsl
test
mov
push
ret
add
add
push
pushl
add
sbb
add
incb
mov
test
ljmp
cmp
fcoml
sti
jge
icebp
sub
sbb
add
dec
cli
incl
pop
or
call
gs
jg
or
xchg
xchg
mov
outsb
push
outsb
and
outsl
repz
jmp
cmp
pop
incl
dec
cli
mov
sti
xchg
jno
incl
pushl
xchg
jmp
call
pop
jne
js
jmp
jbe
popf
adc
pushl
push
test
push
cmp
add
add
push
lcall
inc
call
push
and
dec
daa
jmp
jl
lcall
cmp
lock
add
jmp
add
mov
jno
jmp
and
pushf
ds
inc
dec
adc
mov
testb
roll
mov
and
insl
mov
jmp
decl
mov
ljmp
ljmp
jmp
ljmp
jmp
stos
aas
xchg
jo
into
mov
mov
fisttpl
test
int
in
sub
jb
inc
jle
xchg
lret
mov
sub
cli
faddl
decl
fwait
pop
mov
incl
xor
arpl
jmp
outsb
add
insl
sar
cmp
fstl
popa
push
inc
pushl
add
dec
mov
jmp
pushl
out
pop
fsubl
push
lea
clc
into
mov
fsubl
jmp
ljmp
lods
mov
inc
mov
cmp
enter
add
mov
mov
xchg
repz
ljmp
xor
mov
decl
push
jne
jmp
jle
jmp
cld
add
scas
call
inc
pushl
mov
fisubl
loop
push
int3
dec
push
mov
cmp
daa
jmp
addr16
mov
dec
push
out
mov
cmp
cwtl
mov
inc
incl
incl
imul
jg
xchg
mov
cmp
call
jmp
adc
jno
fldenv
push
sbb
jle
add
add
leave
leave
mov
loop
mov
lcall
mov
data16
jg
test
xor
pop
outsl
and
popa
lcall
imul
adc
push
popf
and
xchg
mov
cmp
pop
jmp
add
roll
add
loope
fucomp
or
xchg
scas
pop
sbb
cmp
jns
pop
mov
pop
jb
rcr
inc
call
cld
or
cmp
fildl
dec
jb
imul
sar
dec
lods
mov
call
sbb
jno
jecxz
mov
js
push
enter
outsl
test
or
popf
sbb
mov
push
add
add
jnp
mov
out
fptan
shll
push
sbb
push
aaa
adc
cld
push
jp
decl
fcmovnb
dec
add
push
nop
aaa
or
sub
cld
jmp
pop
inc
call
inc
jmp
jecxz
push
mov
xchg
adc
iret
jns
decl
fdivp
es
cmp
lcall
push
pushl
in
mov
decl
fnsave
decl
in
jl
pushl
add
lcall
leave
out
int3
jge
ljmp
cwtl
fldenv
cwtl
call
push
outsl
inc
add
mov
jnp
mov
mov
jmp
fcoml
gs
jg
nop
dec
xor
jae
add
push
ret
adc
rorl
lcall
dec
dec
test
sub
adc
cmpsb
aas
call
mov
popa
mov
stos
inc
decl
sbb
push
lods
or
call
rcrb
push
add
outsb
add
repnz
lcall
dec
inc
push
roll
jo
int3
fldt
jmp
aad
sub
pushl
icebp
xor
jmp
mov
jne
jmp
add
test
incl
pushf
inc
jmp
sahf
push
jmp
cmp
call
mov
jo
push
add
dec
cltd
addr16
dec
mov
int
incl
ljmp
jmp
jge
scas
or
popf
pop
mov
lahf
mov
jl
and
sub
dec
aas
adc
lcall
or
add
add
add
jnp
loope
xchg
mov
add
cmp
jp
mov
call
inc
decl
push
cmp
push
mov
ljmp
jecxz
mov
dec
ror
hlt
mov
jge
jmp
add
add
incl
mov
jmp
or
ljmp
popa
ljmp
cltd
sub
cld
fs
incl
or
pushl
push
rcrb
mov
lcall
mov
push
ret
add
mov
add
jmp
fisttps
fbld
and
icebp
in
add
pushl
jae
lret
pop
call
inc
pushl
test
adc
ljmp
decl
or
inc
incl
out
mov
dec
and
pop
xchg
adc
or
adc
sti
fnstsw
fsubrl
add
incl
movlps
stc
test
push
pushl
inc
jmp
or
add
add
xchg
add
add
push
mov
pop
add
pop
mov
add
insl
pop
mov
aaa
aaa
loop
inc
decl
imul
decl
popa
call
out
pop
xor
adc
mov
mov
cld
aas
stos
mov
call
inc
ljmp
and
sti
cmp
imul
test
dec
inc
call
lods
xor
push
add
inc
mov
ljmp
dec
cmp
add
add
add
dec
outsb
in
adc
mov
mov
outsb
stos
sar
js
incl
lods
loop
je
or
aaa
push
add
mov
pop
pop
cmp
scas
xor
adc
jb
sub
adc
jle
pop
loop
mov
sbb
incl
out
xlat
mov
jle
decl
cmp
incl
aas
jmpw
js
out
popf
and
pop
xor
xor
add
repz
add
filds
aam
iret
into
jmp
ljmp
insb
gs
ret
mov
mov
incl
inc
call
dec
jae
fsubs
pushl
cmc
mov
mov
add
mov
mov
call
leave
jbe
pusha
inc
ljmp
out
cmp
jmp
sbb
shll
xchg
jp
and
pop
push
push
mov
jg
fstpt
fldcw
iret
repnz
ljmp
out
dec
iret
cltd
lcall
or
add
add
mov
shl
lcall
adc
ffree
ljmp
dec
pop
mov
jle
jl
jbe,pt
jmp
sbb
push
lock
cmp
cmp
decl
jg
mov
jmp
int
jp
clc
testb
jl
call
dec
cmpsb
mov
int3
push
ja
fnsave
pop
sub
inc
ljmp
sbb
decl
fdiv
mov
imul
pop
cmpsl
jmp
add
call
dec
fdivs
aas
ja
incl
jnp
int3
pop
or
cmc
jbe
incl
dec
pop
mov
dec
decl
div
jnp
incb
add
std
cld
jno
leave
push
jl
sbb
decl
pop
jmp
call
cmp
ret
or
mov
std
adc
mov
mov
scas
xor
add
mov
push
in
mov
lods
jmp
add
mov
add
dec
cmp
mov
and
inc
push
mov
inc
call
imul
pop
sar
jmp
inc
ljmp
pushl
xor
rorl
pushl
sub
jl
decl
mov
add
adc
add
pop
cmp
jl
popf
mov
mov
sar
loopne
loope
inc
lcall
lret
adc
lods
jmp
add
out
add
or
dec
mov
cwtl
das
adc
dec
inc
call
int
jns
lcall
sbb
xchg
pop
test
iret
ljmp
mov
cmp
incl
decl
pusha
push
std
pop
sar
sar
stos
stos
hlt
adc
push
pop
sahf
mov
loop
push
pop
scas
sti
ds
lcall
stc
movsl
lcall
incw
lock
mov
and
pop
mov
mov
outsb
add
cmpsl
pushl
shr
or
add
add
inc
pushl
and
xlat
add
jne
push
imul
push
fistl
call
cmp
jecxz
fstpt
je
call
ds
inc
call
repz
push
push
stos
je
scas
jns
ljmp
incl
jmp
xchg
dec
jne
pop
jmp
out
mov
add
dec
jl
insl
stos
imul
inc
ljmp
arpl
jmp
stos
push
cs
dec
mov
iret
adc
leave
mov
fildll
data16
out
cmpsb
incl
push
cld
aad
imul
ljmp
incl
or
add
jmp
mov
mov
mov
inc
decl
ljmp
call
push
js
stos
pop
add
add
jp
xor
lcall
test
incb
adc
je
imul
in
adc
cmp
jnp
movsb
lcall
pop
adc
shr
outsb
jbe
pop
cmp
inc
lcall
mov
cmp
fwait
aas
scas
xor
inc
inc
decl
jmp
jmp
aaa
inc
jmp
test
mov
sbb
push
ljmp
inc
decl
call
es
stos
ja
cmp
push
xor
cmp
mov
test
lcall
dec
add
xchg
dec
cld
imul
cmp
pushl
decl
iret
jge
dec
mov
push
add
jmp
add
dec
scas
scas
pop
mov
and
push
mov
int
fdivrl
out
dec
mov
cmp
mov
into
mov
test
jo
aam
xor
add
or
cmc
sbb
lahf
scas
inc
add
roll
out
add
cmpsl
lcall
pop
xor
loopne
jle
push
in
aam
outsb
pushl
inc
clc
sub
inc
lcall
cmp
dec
jle
dec
mov
mov
jmp
add
mov
ret
clc
push
pop
js
sub
push
cld
incl
add
fiaddl
nop
pop
cmpsb
call
sahf
imul
mov
frstor
popf
fnstcw
adc
inc
add
add
pop
enter
pushl
xor
scas
dec
mov
sbb
in
inc
lcall
pushl
xlat
sub
or
dec
in
jmp
clc
xchg
sbb
call
sbb
test
pop
loopne
lcall
inc
push
xor
pushl
push
jmp
push
add
add
lcall
jno
inc
dec
outsl
adc
inc
push
jo
push
in
push
and
pop
out
push
ljmp
repz
jmp
int3
and
mov
cli
sub
pop
jle
push
mov
dec
enter
add
mov
loope
mov
sbb
push
jmp
add
add
ljmp
cmp
lcall
sub
test
enter
popf
cmp
cmpsb
cmp
xchg
lock
adc
sub
lea
decl
fisubrs
cmp
std
mov
inc
add
add
add
pop
add
decl
mov
xchg
das
lahf
stc
jl
sbb
pushl
gs
jl
lret
xchg
push
jle
cmp
ljmp
jo
inc
jmp
jmp
arpl
daa
jmp
add
pushl
shr
fistps
inc
jmp
add
xor
incl
cmpsl
jmp
scas
call
ljmp
fists
aas
stos
xchg
pop
sbb
or
call
pop
cmp
repnz
int
cs
jmp
jmp
call
movsl
ljmp
cwtl
mov
cmpsb
cli
nop
mov
ljmp
adc
dec
outsl
pop
or
adc
pushw
das
mov
pushl
adc
aad
cmp
cli
push
nop
call
add
ljmp
cmp
shll
pop
sahf
lret
in
xor
incl
mov
test
call
add
pushl
je
jmp
decl
dec
pop
stos
iret
loopne
xor
xlat
js
decl
jmp
mov
add
cmp
out
xchg
sar
mov
jge
aad
xor
iret
test
inc
dec
imul
out
and
cmp
ljmp
push
call
push
out
inc
pushl
lcall
decl
xor
stc
xchg
imul
jl
pop
jge
sub
mov
mov
jns
sub
decl
jo
xchg
xor
pop
mov
aas
insl
sar
sbb
daa
decl
imul
sbb
std
add
scas
pushf
cli
fxch
sub
dec
add
clc
jmp
add
add
add
push
inc
lcall
cmp
call
mov
mov
lcall
jecxz
adc
add
add
jmp
adc
mov
int
decl
adc
add
jmp
mov
add
decl
mov
out
hlt
stos
cmc
sub
mov
adc
inc
jmp
incl
decl
sub
shl
jmp
add
add
or
incl
jmp
sbb
sbb
add
leave
pop
add
add
mov
sbb
incl
decl
popf
jne
cmp
cmp
or
fwait
test
xchg
fadds
stos
js
aam
jne
stc
or
add
push
ret
mov
jmp
adc
leave
int3
icebp
jg
mov
ljmp
stos
and
fwait
or
pop
ja
mov
jmp
rcrb
filds
ss
or
or
fldenv
cmp
xor
push
pop
cmp
ljmp
push
add
jmp
add
add
mov
insb
push
dec
insl
jo
xchg
push
sub
incl
mov
push
ret
add
add
pushl
mov
xchg
dec
inc
call
sti
pop
jo
xchg
add
call
push
cli
scas
pop
lcall
lcall
mov
ljmp
das
jl
or
cmp
scas
jmp
pushl
mov
filds
out
xchg
cld
enter
push
mov
push
popf
pop
mov
mov
call
daa
mov
xchg
push
repnz
nop
idivb
jnp
movsl
aas
inc
decl
push
outsl
iret
cmc
sub
xor
outsb
insb
stos
out
pop
gs
mov
cmp
mov
call
outsb
xchg
dec
ret
lcall
cs
incl
add
call
fcmovb
lcall
test
fcmovbe
aad
fstpl
fdivrl
hlt
stc
ljmp
jge
call
dec
test
inc
lcall
decl
cmp
loopne
or
loope
fnstsw
mov
dec
pushf
cltd
loope
cmpsl
lcall
fcompl
decl
dec
pop
aas
pop
jmp
hlt
jns
decl
test
add
jmp
add
push
cwtl
imul
ret
mov
imul
jmp
pusha
cmp
push
xor
mov
jmp
add
add
pop
dec
popf
xchg
pop
mov
push
jmp
leave
add
mov
popa
ljmp
incl
mov
jmp
inc
call
xor
or
mov
cmp
or
cmp
js
hlt
negl
decl
push
jecxz
mov
cmp
incl
inc
ljmp
int3
enter
lcallw
icebp
sub
lock
ljmp
inc
decl
jno
mov
outsb
fcmovnu
cmpsb
decl
jecxz
outsl
ja
sar
add
pushl
jmp
add
jmp
flds
push
loope
or
pop
mov
pushl
pushl
sbb
cmp
cmp
or
cmp
dec
mov
arpl
incl
mov
add
add
ljmp
call
mov
jmp
incb
add
pushl
std
ret
incl
je
jmp
xor
mov
jns
mov
mov
in
mov
sbb
lret
divb
add
mov
call
loope
call
decl
mov
or
lcall
cmp
sub
mov
test
pop
xchg
pop
pop
loop
jmp
inc
pushl
int
mov
pop
inc
pushl
popf
dec
rcll
call
push
decl
and
pop
incl
loope
add
decl
dec
out
mov
ljmp
inc
lcall
sbb
mov
ljmp
jmp
jae
mov
jmp
jmp
mov
sti
sub
call
cmpsb
call
ljmp
push
decl
pop
popa
call
sub
pop
xlat
insb
xor
enter
jmp
hlt
xor
repnz
out
jb
call
in
test
mov
lcall
js
inc
ljmp
inc
ljmp
mov
or
mov
push
push
int3
mov
pop
decl
push
add
add
mov
arpl
mov
add
pushl
add
jmp
jmp
or
mov
adc
jp
adc
call
sub
ss
jmp
incl
jbe
add
ljmp
mov
call
jmp
add
add
add
pushl
shl
fistl
iret
in
aad
fisttpl
add
decl
cmp
push
jmp
insb
mov
mov
dec
aaa
mov
sub
mov
test
inc
call
add
ljmp
call
incl
xchg
cmp
test
std
xchg
scas
aam
shr
jmp
add
add
dec
ret
fisttpll
loopne
mov
jae
decl
call
cmc
ljmp
loope
push
xchg
xor
mov
imul
inc
mov
jmp
pushl
and
cmp
sahf
xor
dec
inc
lcall
cwtl
ret
jmp
or
lods
xchg
xchg
jle
testl
sub
pushl
jmp
jnp
add
jecxz
loopne
into
dec
sub
jmp
xchg
ljmp
and
adc
lahf
loopne
sub
jge,pn
jnp
jmp
jmp
call
jmp
cli
mov
lcall
cld
lahf
push
sub
incb
mov
lret
jmp
incl
lcall
or
scas
adc
push
arpl
xchg
insb
sar
into
icebp
push
add
outsb
outsb
push
add
pushl
mov
push
ljmp
cld
mov
fstpl
pop
ja
lcall
enter
mov
lcall
lcall
sar
js
sub
inc
dec
stos
into
stc
imul
aas
jo
int
dec
sahf
mov
sub
add
call
dec
add
ljmp
inc
push
xchg
and
hlt
mov
jnp
push
add
out
incb
add
out
push
mov
stc
sbb
xchg
inc
pushl
lret
jmp
pushl
dec
ja
push
icebp
mov
pushl
pop
jmp
inc
call
int3
movsb
push
stc
sbb
ljmp
inc
decl
out
push
add
leave
add
add
add
cmp
mov
addr16
jns
incl
decl
cmpsb
jmp
lods
xlat
mov
push
jg
stc
sar
inc
jmp
cmp
loopne
sub
dec
into
add
mov
insb
pop
dec
add
dec
pushf
xchg
dec
jg
jmp
push
inc
pushl
or
mov
jmp
decl
add
incl
xchg
xchg
pop
cmp
ss
pushl
incl
add
jmp
ljmp
hlt
or
ljmp
ss
sub
out
and
mov
jmp
call
xor
jmp
leave
outsb
add
repz
xchg
sahf
das
imul
ljmp
mov
lods
inc
add
add
add
ds
push
cmp
fbld
pop
cli
adc
jmp
sub
call
and
dec
ret
lcall
ljmp
jmp
cmp
dec
mov
cltd
and
mov
pushl
aam
push
ret
sar
sbb
je
scas
out
lret
imul
jl
sar
sub
or
cwtl
mov
addr16
fldcw
outsb
cmpsb
jl
decl
ds
sarb
sub
xor
xchg
jge
fidivl
pushl
xchg
or
mov
decl
jge
jmp
out
add
push
stc
and
lods
shrl
push
aaa
cwtl
call
mov
lcall
pusha
jmp
roll
add
out
jmp
incl
call
movsl
lcall
incl
nop
call
negl
pusha
jmp
jmp
nop
add
call
pop
pop
or
call
cs
pop
nop
pop
mov
inc
jl
incl
inc
decl
inc
ljmp
xchg
aaa
aaa
dec
insl
cmpsl
inc
pushl
jne
xchg
push
popa
call
lods
sti
xor
decl
push
ret
xchg
add
adc
aas
sub
imul
decl
and
pop
decl
lcall
sbb
add
pop
mov
dec
cld
incl
add
add
test
call
out
fstl
push
pop
jns
lcall
test
pop
jle
ljmp
aam
sar
pushf
lea
pop
mov
pushl
pushl
sbb
jns
ljmp
cltd
cmp
pop
notl
or
inc
inc
call
jmp
push
cmc
mov
ret
loopne
inc
fdivs
lock
lcall
cmpsl
pushl
cmpsb
lcall
sahf
decl
cs
decl
aas
loopne
cmp
sub
adc
jne
ljmp
inc
jmp
xchg
add
hlt
mov
sti
cmp
stc
jge
std
inc
decl
fisubl
lcall
outsl
lahf
xlat
in
out
dec
aaa
movsl
cmp
and
cld
jb
sbb
dec
xor
cmp
sar
sub
incl
jge
jge
or
cmp
inc
jmp
decl
repnz
iret
adc
sar
push
lcall
cmp
insl
pop
inc
add
add
test
jmp
add
xlat
and
cmp
lcall
sbb
cmp
pushl
in
fnstcw
adc
incl
pop
inc
pushl
or
pusha
call
lcall
lea
int3
push
cmp
into
adc
push
fdivrl
push
gs
fidivrl
lcall
fidivrl
cmp
jmp
in
mov
call
cmc
or
jp
popa
call
adc
jne
inc
dec
xchg
or
jmp
decl
into
inc
call
dec
mov
pushl
add
inc
call
das
sbb
jmp
int
lcall
decl
push
ret
add
mov
push
and
and
adc
cwtl
jg
decl
cli
adc
and
ljmp
push
mov
sbb
lcall
nop
or
jmp
and
xor
push
xor
ljmp
inc
call
adc
mov
and
out
and
add
decl
jb
mov
xor
pop
call
add
pushl
test
decl
xchg
lcall
pushf
cli
pop
jb
push
fnsave
into
idivb
jne
jmp
pushl
lcall
inc
call
sbb
jmp
jmp
add
pop
add
movsl
inc
add
add
or
imul
pushl
loope
pop
inc
pushl
pusha
jmp
call
sti
fiadds
xlat
in
add
mov
pushl
dec
ds
cmp
inc
incl
cmc
jge
pop
add
fistpl
ss
jns
cmp
outsl
jp
jne
dec
and
and
incl
in
push
stc
aad
aaa
test
ljmp
int
incl
cli
out
ret
jmp
pop
and
ljmp
xchg
mull
mov
jmp
decl
incl
adc
xor
cltd
xor
xchg
dec
or
call
into
mov
mov
jle
ret
pushl
repnz
pushl
xchg
loopne
nop
cmc
movsb
jmp
mov
mov
sub
incl
js
pushl
dec
insl
pusha
mov
inc
pushl
stc
fnstsw
dec
mov
jmp
mov
add
inc
lcall
adc
inc
ljmp
add
sbb
sub
pop
xor
test
dec
ret
mov
inc
add
pop
add
leave
add
jmp
xor
jne
pushl
dec
stos
dec
sbb
mov
inc
fdivrp
or
mov
nop
popf
ret
ljmp
arpl
sti
outsl
dec
xchg
sbb
or
fs
cmp
incl
decl
das
adc
or
mov
and
int
popa
ljmp
out
jmp
jmp
mov
testb
iret
push
jecxz
push
mov
cmp
movsl
jge
cmp
or
or
add
inc
decl
xlat
rol
pushl
cmp
lock
shll
jp
pop
das
cmpsb
decl
pop
pop
out
lock
test
sbb
imul
mov
jmp
mov
pop
inc
lcall
ret
lcall
pushl
jmp
pop
pusha
decl
push
pop
jmp
push
leave
add
cmp
lcall
jg
ljmp
repnz
sub
out
pop
add
pushl
sub
cmp
add
mov
xchg
push
ljmp
dec
cmp
adc
decl
cltd
mov
ljmp
jne
jmp
out
add
lcall
mov
jmp
add
cld
inc
call
call
mov
decl
in
aad
dec
pop
xor
sti
adc
mov
jle
dec
sar
loop
mov
cmp
pop
mov
das
jl
in
fildl
decl
cmc
add
pusha
mov
pop
stos
push
jl
jno
sar
ljmpw
mov
fnstcw
pop
push
push
daa
incl
pushl
fdivr
mov
jmp
pushl
scas
lods
mov
scas
sarb
cmpsl
call
addr16
jmp
add
movsb
jg
add
push
pop
das
inc
lcall
dec
dec
aas
test
ss
inc
jmp
push
jnp
jo
in
cltd
jbe
ja
jecxz
xchg
loop
repnz
incl
push
mov
hlt
push
dec
loopne
std
add
stc
sbb
call
test
pushl
mov
add
jmp
incb
cmp
lcall
push
das
mov
int3
scas
stos
dec
call
pushl
ljmp
shrl
inc
add
add
add
addr16
add
call
sbb
add
add
add
add
lahf
push
sub
iret
sbb
outsb
mov
fdivr
enter
lcall
addr16
fdivl
inc
pushl
xchg
push
mov
mov
call
stc
mov
inc
incl
cmp
lcall
inc
in
push
pop
jo
in
push
popf
sar
and
pop
out
sbb
mov
addr16
jb
mov
call
mov
sub
jno
ds
jmp
push
lea
decl
ds
ljmp
bt
inc
jmp
xchg
sbb
dec
inc
lcall
ljmp
jne
pop
pushf
xchg
pop
and
js
jae
call
out
mov
or
call
sub
cmp
add
add
pop
dec
xor
ja
pop
sub
or
loope
cld
pop
call
push
mov
mov
inc
pushl
xchg
mov
decl
fimuls
xlat
add
pop
pushw
or
jmp
push
lods
pushf
cmp
sub
es
mov
repz
ljmp
out
int3
shr
inc
decl
incl
dec
adc
sbb
es
cmp
and
jno
movsl
pushl
and
xchg
and
das
push
mov
psrlq
popa
aas
dec
sub
call
sub
mov
cmp
and
incl
add
inc
fistpl
mov
inc
add
add
add
push
iret
sub
mov
and
stc
mov
ljmp
push
cli
add
dec
push
xchg
cmpsl
ljmp
pop
inc
incl
push
cwtl
or
mov
pushl
cmp
mov
setle
jne
lcall
xchg
cltd
stos
or
iret
lea
push
jmp
xchg
pop
or
popa
call
adc
jb
pop
call
decl
rol
pushl
mov
push
mov
inc
dec
lret
cmpsb
decl
in
xchg
xchg
cmp
incl
dec
xor
ljmp
mov
stos
clc
pop
and
xchg
ja
push
mov
xchg
add
add
add
jp
decl
mov
mov
decl
inc
cmp
dec
imul
test
inc
ljmp
sbb
popa
jmp
out
in
stos
ss
mov
dec
cmp
ljmp
sbb
jmp
pop
adc
imul
jmp
lcall
add
clc
mov
jmp
cmp
mov
sti
flds
push
stc
rolb
lcall
sar
dec
jg
or
ds
call
or
imul
cmp
fsubr
jmp
add
add
jmp
or
lcall
call
adc
call
xchg
add
jo
mov
xor
call
pop
sbb
pop
pushl
loop
decw
incl
mov
xor
in
daa
dec
inc
decl
xlat
mov
ljmp
imull
inc
call
int
test
jmp
push
xchg
add
add
test
inc
jg
pushl
pushl
push
push
cmpsb
inc
jl
cmp
pop
stos
pop
jae
jns
callw
enter
imul
incl
push
push
mov
add
add
ds
sbb
jecxz
mov
push
shr
pop
push
add
pop
add
adc
sbb
push
jmp
add
jb
decl
mov
ljmp
in
mov
xor
inc
pushl
fistps
ljmp
add
push
or
mov
int3
mov
add
xchg
sub
xchg
fcmovu
sahf
test
mov
sub
push
add
add
test
push
ret
dec
cwtl
push
add
inc
repz
incl
add
add
jmp
jmp
incl
mov
rcrb
idiv
xchg
lods
or
push
jmp
aaa
out
push
enter
mov
cmp
pushl
sar
add
xchg
xlat
in
je
sar
repz
dec
cmp
decl
add
inc
push
inc
jmp
in
mov
rcrl
mov
jmp
push
shll
call
int
push
add
add
add
xor
hlt
loopne
call
add
jne
push
ret
add
out
sub
icebp
aaa
mov
mov
jmp
xchg
ljmp
push
and
add
add
in
cmp
push
cmp
mov
loopne
fnstenv
mov
pop
pusha
ljmp
roll
call
lret
mov
lods
mov
adc
shr
ss
incl
xchg
push
adc
add
out
ror
scas
dec
mov
inc
ljmp
cltd
mov
incl
call
ljmp
push
movsl
decl
out
popf
cmp
sub
ds
dec
and
dec
lret
into
outsl
xor
mov
add
decl
pushl
stos
leave
or
jmp
ljmp
add
push
mov
inc
sub
add
add
out
or
push
sar
decl
mov
jl
sub
inc
or
in
add
add
cmp
imul
dec
push
fcom
cwtl
repnz
mov
cs
pop
jmp
mov
mov
xlat
or
test
dec
lahf
fnstenv
adc
fdivl
fdivrs
scas
pop
in
dec
mov
cmp
push
add
sbb
shrb
jns
add
incb
add
into
pushf
es
fsubp
jmp
lcall
cmpsl
call
je
push
ret
clc
sub
lcall
and
shrb
xchg
repnz
stc
pop
fwait
rorl
decl
pop
jmp
push
add
add
pop
dec
pop
sbb
push
jne
jae
lcall
lea
adc
lcall
and
aam
sub
add
jl
test
inc
cmp
repz
ljmp
aam
pushl
push
jae
pushl
mov
fcompl
ss
cmc
faddl
pop
cs
sbb
add
add
add
add
xchg
ljmp
jecxz
jno
pop
aas
mov
lcall
cmp
ficompl
inc
ljmp
loop
int3
cmp
jmp
icebp
iret
fwait
rcll
incl
scas
inc
lcall
or
ljmp
push
xchg
daa
ljmp
mov
jo
sti
or
stc
std
cmpsl
jl
inc
mov
dec
imulb
mov
add
add
add
leave
mov
mov
push
ret
add
xchg
call
mov
aas
sar
mov
push
inc
pushl
xor
pushf
push
aam
popf
dec
into
imul
fwait
lcall
enter
ljmp
dec
dec
xor
jb
cmp
inc
jmp
jmp
push
mov
mov
decl
push
imul
popf
dec
inc
in
xor
call
adc
inc
jg
ljmp
lods
push
incl
hlt
mov
decl
incl
add
dec
or
sti
and
incl
incl
mov
jmp
out
scas
test
xchg
xchg
xchg
in
or
ljmp
push
in
and
xchg
add
inc
mov
decl
and
sbb
int
jmp
mov
das
push
cmp
sub
jg
jecxz
push
lods
pop
mov
mov
ljmp
call
cmp
jecxz
out
add
ljmp
mov
jne
jmp
add
cmp
incl
mov
cmp
sbb
insl
out
aam
push
lods
js
push
scas
sbb
push
and
push
jmp
out
cmc
sbb
fsts
dec
cmp
mov
shrb
aad
jp
add
call
ss
jns
jno
mov
cmpsl
pushl
jp
jmp
fwait
pop
cmp
aam
je
adc
ljmp
pushl
add
lcall
mov
rol
push
mov
pop
ljmp
dec
jnp
cli
je
inc
pushl
jmp
leave
test
insb
sub
ljmp
insl
sti
xchg
lret
es
cmp
sbb
pop
in
shlb
xor
call
clc
inc
out
call
push
pusha
lcall
xchg
mov
cwtl
pushf
ret
push
cli
and
push
adc
ret
jmp
jecxz
pushf
and
ljmp
nop
pushl
popl
xor
lcall
jnp
jg
insb
call
pusha
fidivs
jmp
pop
push
mov
scas
out
cmp
imul
push
mov
sbb
inc
jmp
call
into
mov
mov
pop
scas
xchg
jl
ja,pt
jmp
push
adc
incl
pop
mov
call
push
out
mov
repnz
xor
mov
dec
push
push
jmp
add
add
add
mov
or
ljmp
sar
push
jg
cli
add
jmp
jle
jp
sub
ljmp
lcall
fstpl
jmp
mov
lret
fisttps
jmp
inc
ljmp
je
ljmp
push
jmp
add
roll
pop
icebp
idivl
lcall
jno
mov
sbb
add
add
roll
add
cmp
push
mov
mov
jmp
mov
popf
ss
out
mov
pop
jp
sub
push
popf
jmp
mov
mov
push
ljmp
lea
ret
add
mov
jmp
leave
add
add
stos
dec
leave
lahf
or
inc
pushl
mov
jns
add
push
mov
ret
decl
mov
pop
jl
call
sti
mov
mov
pop
xchg
aam
inc
call
mov
inc
push
ret
add
add
mov
push
mov
push
ret
adc
nop
loop
add
test
adc
lcall
pushl
data16
fstps
dec
mov
xor
mov
fs
stc
ds
jmp
jmp
add
mov
and
cmp
inc
jmp
push
popa
lcall
je
push
ret
clc
mov
rcl
and
push
stos
fldenv
cmp
aaa
test
add
sti
cmp
inc
das
add
add
push
add
mov
xchg
dec
lret
mov
mov
cmp
sti
std
mov
call
call
js
dec
jo
call
hlt
xor
add
jmp
mov
adc
dec
pushf
cmp
ljmp
test
das
xor
adc
mov
sbb
call
mov
sub
scas
loope
jg
cmp
lret
mov
jmp
jmp
sarl
sbb
decl
outsl
lret
add
dec
out
cmp
aam
sbb
and
rorl
nop
sar
leave
inc
decl
or
mov
inc
ljmp
call
incl
ljmp
ljmp
fisttpll
aad
sub
incl
incl
sahf
xor
aam
incl
push
and
imul
inc
call
decl
ss
stos
iret
mov
leave
sar
loope
push
and
or
cmpsl
pushl
dec
mov
aas
adc
decl
imul
cmp
pushl
dec
mov
push
pop
pop
sub
ljmp
jns
dec
call
ja
or
call
fcmovnbe
pop
shll
nop
sbb
cs
sbb
incl
ljmp
dec
cmp
lcall
push
stc
scas
ss
jno
lcall
icebp
jbe
xchg
inc
xor
jmp
jmp
lcall
dec
xchg
inc
lcall
lcall
or
lcall
idivl
decl
shl
incl
adc
outsb
roll
jge
jmp
call
mov
jnp
jecxz
xchg
mov
ror
aad
fimuls
incl
ljmp
adc
push
sbb
and
dec
inc
decl
int3
fstps
ljmp
decl
aas
inc
decl
sahf
or
ljmp
xchg
stos
incw
pushl
aas
dec
ljmp
cmp
hlt
leave
hlt
jo
stc
mov
dec
cs
mov
xor
adc
insb
jb
aaa
inc
pushl
lret
ljmp
jns
fldl
dec
and
aad
jmp
lods
incl
or
pushl
decl
jl
push
jb,pt
mov
push
fisttpl
jns
adc
mov
jnp
push
inc
decl
sar
mov
in
pop
mov
mov
lods
cmp
mov
in
into
lret
pop
inc
jmp
pushl
xor
jg
jmp
decl
sar
mov
sahf
push
sti
mov
ret
filds
push
mov
push
ret
push
add
lcall
xchg
push
daa
decl
aam
xchg
push
std
stos
mov
enter
inc
add
mov
cmp
cmp
dec
int
loope
pop
lcall
cmp
adc
fwait
ss
pushl
jge
xchg
sbb
or
jmp
add
add
dec
movsb
incl
loopne
jno
call
cmp
jge
pushl
lcall
out
stc
cmc
ss
ljmp
push
inc
lcall
fiadds
incl
dec
jne
decl
xor
push
fnstsw
dec
out
shr
cmp
cmp
hlt
mov
adc
cmp
cmp
std
popf
cmp
sub
jmp
add
mov
call
incl
and
adc
notl
add
incb
jnp
add
fmull
lcall
hlt
pop
dec
sbb
lcall
inc
decl
mov
ljmp
fldt
lock
inc
jmp
lcall
adc
adc
push
and
ret
mov
jb
inc
fstps
sbb
sti
mov
decl
inc
and
and
add
insl
cs
ljmp
decl
mov
cmp
lret
gs
jl
lcall
sbb
cmp
jmp
xchg
jecxz
cmpsl
lcall
jle
dec
sbb
outsl
leave
incl
add
add
out
mulb
mov
aas
cmpsb
jmp
cmp
jmp
adc
lcall
and
loope
xor
xor
ljmp
inc
iret
or
incb
add
cmp
jmp
decl
mov
inc
jl,pt
outsl
xor
add
cli
cmp
pop
xchg
lock
pop
jmp
incl
call
push
ret
add
jnp
jmp
xchg
sbb
adc
ljmp
mov
pushl
int
sar
ljmp
clc
or
pop
decl
dec
sbb
out
jecxz
mov
repz
in
cwtl
fidivrs
cmc
and
mov
cmpsl
pushl
sub
add
add
add
mov
jmp
add
add
add
dec
adc
xor
xchg
pop
xchg
ja
lcall
mov
incl
add
add
pop
test
ljmp
test
jmp
add
add
lcall
sub
decl
adc
ljmp
fcoms
fldcw
jecxz
scas
xchg
stos
lret
enter
cli
add
add
add
adc
incl
incl
incl
out
push
jecxz
cli
loopne
xchg
jmpw
jmp
dec
mov
popf
repnz
fsubs
cmp
adc
dec
aam
in
jno
sub
pushl
mov
xor
test
add
mov
fwait
push
ljmp
or
mov
push
je
decl
add
adc
lahf
ljmp
mov
sub
and
int
push
push
push
ret
add
add
xchg
nop
mov
push
pop
pop
sarl
sahf
or
inc
ljmp
aas
xor
ljmp
or
adc
ljmp
add
incl
mov
xchg
aam
out
incl
loopne
stc
pop
jns
incl
cld
ficomps
push
jmp
add
add
or
incl
push
sub
mov
mov
cmp
jp
inc
ljmp
push
sub
incl
stc
and
push
scas
cld
jle
je
jmp
add
sar
ljmp
jmp
sub
mov
sub
inc
decl
pop
inc
lcall
add
lcall
mov
ljmp
fildl
jl
loope
mov
incl
cwtl
sbb
pop
mov
incl
add
add
sarl
mov
call
decl
fsubr
jecxz
xchg
int3
lahf
enter
cs
aas
cmp
cld
enter
jne
cmp
jmp
jmp
mov
adc
push
out
xchg
mov
xchg
pop
es
ds
decl
hlt
cmc
sub
fistps
pop
jmp
add
add
add
nop
es
fnstcw
xor
dec
mov
pop
loopne
jl
inc
decl
push
mov
mov
fs
clc
popa
ljmp
popf
add
call
add
add
mov
ja
call
cmp
lcall
mov
ds
or
hlt
stos
pop
pop
iret
imul
inc
pushl
imul
mov
ret
pushl
push
add
ret
fists
and
clc
inc
jmp
mov
xor
adc
jmp
call
xchg
lahf
sbb
dec
popf
sti
push
ljmp
jmp
adc
sbb
call
inc
fcom
test
add
fimuls
out
fidivs
aad
call
and
pop
fcomps
dec
jp
in
fstpt
push
fiaddl
loope
and
mov
sti
mov
lcall
inc
lcall
sub
std
fcmovnu
or
lcall
jle
sub
popf
leave
xchg
out
mov
popa
jmp
add
xor
xchg
mov
notl
mov
call
or
dec
in
fdivl
inc
lcall
inc
ljmp
sbb
cmp
pop
jmp
aam
push
pusha
push
test
fisubrs
mov
push
dec
lcall
je
stc
imulb
jne
call
mov
xchg
movsb
dec
fisttpll
jb
je
jmp
add
push
cltd
incl
ljmp
add
daa
inc
call
mov
or
shlb
loope
cld
xchg
push
ljmp
lea
cli
pop
cmp
mov
incl
and
jbe
lcall
add
jmp
add
add
jmp
add
lcall
data16
mov
mov
cmp
push
cmp
icebp
adc
xchg
insl
arpl
push
mov
jmp
add
adc
stos
push
sbb
dec
add
dec
xchg
aas
je
pop
fdivrl
cld
sbb
std
xor
cld
cmp
jmp
out
aad
dec
out
and
movsb
ljmp
xchg
cmp
ror
push
sub
jmp
add
add
xor
pushl
ret
ljmp
icebp
push
decl
add
incl
cmova
jo
or
div
push
pop
pop
cmp
jmp
inc
lcall
and
sub
push
xor
js
jo
aam
call
mov
mov
imul
fstpl
in
add
xor
sbb
or
lcall
sar
decl
lcall
and
push
imul
call
xlat
in
lret
jge
inc
incl
ljmp
call
pop
lahf
xchg
call
pushl
or
mov
jmp
mov
pop
jp
stc
sub
loope
dec
std
test
sub
and
mov
mov
pushl
xor
std
dec
sbb
or
jmp
xor
mov
xchg
scas
sarl
dec
push
add
cmp
decl
dec
lcall
or
repz
push
or
push
jmp
add
repnz
pushl
push
lret
push
push
mov
das
add
jle
add
add
shrb
dec
ds
jmp
push
or
sar
ljmp
enter
jecxz
in
jnp
imul
ljmp
sub
pop
pushl
pop
mov
dec
add
add
add
cmp
xor
pop
jmp
add
add
lret
jmp
aad
mov
aas
push
push
jmp
add
add
adc
cmpsb
lcall
mov
mov
mov
hlt
clc
xchg
jle
mov
leave
jmp
add
add
fsub
out
loopne
test
fsubrl
fwait
dec
lock
inc
jmp
jmp
incl
mov
or
inc
call
pop
out
jl
into
data16
inc
incl
clc
inc
call
lahf
sub
mov
cmc
popa
decl
in
imul
push
dec
xchg
jo
adc
xchg
je
fistps
lcall
cmp
mov
pushl
incl
mov
add
jmp
add
stos
repnz
cmp
xchg
int3
int3
cmp
dec
mov
inc
mov
mov
fimull
xchg
push
add
add
add
leave
add
xor
jae
incl
mulb
lods
push
cmc
inc
ljmp
fsubs
imul
adc
in
sarl
jecxz
sub
decl
lcall
cmp
sub
cmp
mov
inc
and
jmp
add
add
push
test
fadd
jmp
decl
mov
popa
lcall
sar
decl
cltd
jbe
jmp
jmp
lcall
ljmp
push
cmp
call
cmp
sbb
out
sarl
mov
cmc
xor
incl
pop
push
and
add
push
push
add
call
xchg
jp
stc
mov
xchg
push
mov
push
mov
roll
add
add
scas
test
jo
jmp
push
arpl
add
incl
sti
push
and
add
outsb
mov
adc
ret
lcall
icebp
fimuls
dec
cmp
add
pushl
ljmp
out
adc
push
cs
cmp
pop
out
outsb
adc
add
jmp
add
push
mov
ret
incl
jp
jno
stos
stos
mov
test
imul
xchg
int
xor
pushl
jnp
call
push
sbb
incl
cmp
lods
fmuls
jle
mov
pushl
fstpl
ret
ljmp
dec
xchg
rolb
pop
mov
mov
pushl
in
out
push
js
xor
pushl
mov
popa
lcall
sar
in
dec
call
cmp
sar
jno
sar
int3
sar
push
jmp
add
add
add
popa
jmp
jmp
aam
mov
lcall
or
push
je
sub
pop
out
nop
cmp
in
xchg
pop
mov
and
cmp
punpcklbw
jl
call
sbb
jecxz
sar
and
mov
push
jmp
add
fwait
loope
mov
call
jns
ljmpw
lock
mov
jmp
push
add
xchg
adc
pop
std
push
inc
add
xchg
add
add
dec
mov
jmp
add
fisubs
xor
sub
sti
leave
jae
sub
call
xchg
cmp
cli
mov
pop
addb
pop
add
mov
dec
fisttpll
xor
or
lcall
push
outsb
mov
cmp
pop
call
mov
dec
and
stc
ja
pushf
out
repz
loopne
sti
fsubs
pushl
ss
call
repz
lods
icebp
xchg
lcall
lcall
add
add
dec
insl
ss
roll
lcall
decl
ljmp
js
mov
lahf
adc
ljmp
jno
call
out
test
int
dec
call
push
cmp
pop
or
cmc
ss
mov
lcall
push
jb
fsubl
jmp
mov
jmp
and
outsb
in
sar
jb
pushl
ja
inc
ljmp
xchg
ds
jle
incl
or
jmp
pushl
in
aaa
add
leave
add
or
pop
vcmpsd
ljmp
cmc
dec
dec
icebp
arpl
sbb
leave
incl
jle
incl
sub
ljmp
imul
push
pop
jmp
jnp
leave
leave
add
xor
sub
jnp
ljmp
jmp
ret
xor
jg
stos
jmp
mov
nop
pop
call
outsb
and
add
add
xchg
add
call
xor
xchg
ret
cmp
push
mov
call
jecxz
adc
jae
das
test
repnz
jg
fcomp
sbb
mov
fcmove
cwtl
pop
decl
cmp
ljmp
mov
and
mov
and
in
aad
dec
gs
pop
lret
cmp
mov
inc
incl
idivb
test
data16
jns
loop
fcomp
pop
lcall
fistl
sub
jp
test
lret
push
hlt
lods
popf
outsb
dec
or
ljmp
fdivl
push
xor
jmp
add
add
adc
pushl
aad
and
outsb
dec
adc
cwtl
xlat
inc
incl
in
repz
push
outsl
mov
pop
and
sub
testb
cmc
cmpsb
jmp
jmp
mov
pop
jmp
xchg
add
out
test
push
out
int
jb
and
lret
stos
push
das
sbb
sbb
push
pop
adc
push
mov
add
call
jle
add
lcall
mov
lcall
inc
pushl
sar
call
adc
xor
push
decl
mov
test
add
repnz
insb
stc
mov
scas
lcall
xor
jo
mov
jmp
lahf
mov
call
dec
cmovae
cmp
daa
call
pop
sub
jmp
add
add
pop
incw
lret
cmpsl
call
jmp
decl
sbb
test
lret
jmp
add
mov
jmp
add
add
add
incl
lcall
call
jmp
adc
jmp
imul
cld
int
ljmp
sar
decl
incb
push
out
pushf
xchg
cltd
or
daa
add
add
xchg
adc
cmp
ljmp
ljmp
in
pop
mov
decl
adc
cmp
xchg
scas
pop
outsb
sahf
dec
mov
stc
call
movb
out
idiv
call
add
out
loop
lods
pop
adc
xlat
int3
add
pop
cmpsb
pushl
cmp
mov
stos
jecxz
pop
aad
call
loopne
sbb
xchg
dec
lods
lock
in
enter
mov
add
ds
lods
push
xchg
icebp
imull
add
push
ret
outsb
incb
outsl
lahf
aas
xchg
roll
inc
call
dec
mov
pushl
push
adc
enter
jo
int3
jo
mov
movsb
pushl
ljmp
fcoms
pop
add
in
adc
repz
mov
push
mov
add
push
out
imul
lcall
inc
pushl
sbb
sbb
incl
outsb
add
mov
dec
test
cmp
or
mov
and
shll
fdivs
pop
dec
pusha
call
jmp
pop
fnstsw
push
cmp
pushl
and
dec
test
mov
daa
call
rcrb
push
ret
add
test
push
incl
push
adc
add
inc
jmp
dec
decl
jmp
add
push
add
mov
mov
decl
jmp
push
add
add
adc
push
jmp
add
add
add
cmp
shr
idiv
call
add
pop
ret
pushl
fnsave
ljmp
out
add
adc
mov
or
push
test
loopne
std
jno
mov
decl
cmp
pop
in
popa
jmp
push
cwtl
fdivrs
add
call
jecxz
lret
call
mov
inc
decl
pop
sar
jbe
call
popa
lcall
and
clc
hlt
aaa
mov
push
xchg
call
inc
inc
jmp
inc
mov
stos
push
cmp
incl
lahf
lret
pop
cmp
call
jp
inc
ljmp
jg
call
jne
and
xchg
mull
jmp
hlt
and
push
push
call
sar
fsubrl
jmp
jnp
add
add
pushl
dec
cmp
inc
incl
mov
pushl
xchg
cmp
pop
lods
cmp
mov
call
xlat
shrb
call
stos
mov
cmp
inc
jmp
add
add
decl
cmp
mov
and
add
jmp
pop
jmp
add
push
add
add
jecxz
mov
lock
int
lret
das
decl
mov
decl
sldt
add
push
add
add
pop
call
inc
decl
out
adc
iret
push
push
adc
cli
inc
jmp
call
loopne
dec
cmp
jecxz
dec
gs
ljmp
push
ljmp
inc
lcall
out
mov
pop
sbb
jmp
add
jg
mov
xchg
or
pop
fidivs
and
sub
call
xor
xor
add
decl
sbb
xchg
test
test
xchg
inc
jnp
call
nop
sbb
out
mov
inc
in
lret
xchg
push
ljmp
mov
decl
xchg
hlt
enter
pop
sbb
imul
add
mov
dec
lcall
jge
aas
test
inc
lcall
stos
sbb
sti
cltd
inc
add
add
add
mov
cmpsb
call
out
cld
mov
cli
lea
pushl
ds
sub
decb
call
add
hlt
movsl
lcall
add
jmp
push
add
push
scas
mov
test
decl
jo
movsb
dec
loope
adc
sub
test
decl
push
loope
addr16
jmp
in
push
inc
inc
ljmp
xor
adc
mov
cmp
sub
call
repz
mov
jmp
add
incb
push
adc
call
cmc
adc
add
add
add
add
xor
decl
or
lcall
mov
call
call
jb
in
fadds
inc
lcall
pop
xchg
jb
or
mov
incl
roll
jmp
int3
scas
insl
jle
mov
lret
cmp
adc
sar
incl
add
incl
pop
inc
in
xchg
inc
jmp
add
decl
decl
mov
xchg
adc
add
in
xchg
fisttpll
outsb
and
inc
mov
call
add
sti
sub
ja
cmpsb
ljmp
inc
call
mov
push
pop
mov
push
test
push
pushw
dec
push
adc
mov
cmp
imul
fnsave
pushl
sub
push
ret
add
add
call
push
ret
adc
leave
fstps
xor
cmpsb
ljmp
loop
ss
sbb
push
xor
jmp
mov
push
add
aam
jmp
lret
int
sar
mov
incl
add
push
ret
outsb
add
in
stos
jne
decl
test
fwait
cli
xlat
add
jmp
sbb
push
aad
add
add
add
push
mov
push
ret
add
fisttps
stos
sbb
add
shlb
sbb
xchg
sbb
jle
inc
ljmp
add
jl
dec
ljmp
incl
enter
es
cmp
inc
ljmp
xor
push
dec
push
push
jp
outsl
adc
inc
call
lcall
std
adc
int3
ljmp
lcall
jmp
mov
mov
jg
jp
lahf
sbb
clc
outsb
pop
scas
repz
pushl
sbb
push
add
push
ret
add
fld
decl
mov
test
loopne
sbb
pop
mov
shrb
lcall
mov
mov
add
add
fsubrl
lret
inc
aas
call
push
mov
add
stos
aas
jmp
sub
mov
pop
aas
push
std
fcom
jae
loope
das
pop
push
gs
jp
ljmp
incl
xchg
aas
call
stos
aad
xchg
iret
push
adc
xor
cltd
or
lea
fnstsw
movsl
mov
jmp
add
add
out
call
add
add
sar
ja
imul
pop
inc
pushl
testl
jmp
leave
push
mov
dec
aaa
jo
lods
pop
scas
add
call
jmp
lcall
inc
in
add
call
add
xlat
pop
cmpsl
push
fisubrs
jmp
incl
hlt
incw
mov
lret
pop
mov
sub
pop
sub
mov
cmp
jecxz
mov
jmp
fisubrl
mov
stos
add
ljmp
mov
ljmp
js
pushl
lret
int3
xor
xchg
mov
sbb
in
add
add
dec
push
incl
inc
jmp
decl
stos
mulb
inc
lcall
inc
ljmp
decl
cli
adc
popa
call
pop
adc
incl
call
in
add
mov
roll
add
push
mov
cmp
jns
pop
pop
sub
lods
outsb
pop
cmp
decl
out
out
cs
push
mov
xor
decl
add
lods
xchg
jle
and
outsl
fstps
push
push
cmp
adc
pop
and
mov
xor
jmp
ljmp
ljmp
jmp
incb
add
add
ljmp
or
pop
rcrb
call
inc
out
mov
jmp
xchg
incl
add
add
add
jmp
inc
inc
incl
inc
jmp
sub
inc
pushl
daa
incl
in
mov
stc
jo
shlb
icebp
stos
ret
jmp
and
dec
pop
lock
pop
xor
pushl
mov
xor
jmp
outsb
incb
xchg
outsb
aad
cs
incl
add
add
mov
mov
pushl
push
jmp
leave
add
add
jnp
leave
call
cmp
fistl
incl
add
add
pusha
jmp
lcall
icebp
xor
test
ret
lcall
test
jmp
leave
mov
add
jmp
jl
jmp
call
xor
aas
add
incl
sahf
sbb
adc
add
add
add
mov
stc
jg
and
and
xlat
out
in
lock
dec
movsl
push
jmp
in
inc
lcall
mov
dec
adc
jmp
incl
fnstenv
lods
repnz
xor
cli
jae
outsb
pop
inc
lcall
pop
nop
cmc
and
mov
cs
pop
lods
or
lods
jmp
cmp
or
call
jmp
rcll
jl
push
imul
decl
mov
loopne
out
popf
fmul
jne
sti
xchg
rcr
out
cltd
xchg
out
ret
call
ret
jno
leave
jg
jmp
clc
push
inc
decl
hlt
pop
and
and
out
cli
fmull
incl
lcall
ljmp
jg
sbb
clc
inc
call
stc
jo
jbe
incl
push
incl
incl
das
js
add
dec
hlt
repnz
fabs
jmp
inc
inc
lcall
sub
aaa
outsb
and
pop
push
xor
clc
mov
add
push
ret
roll
outsb
pop
jle
dec
cmp
jmp
call
fcomip
jmp
ljmp
shll
loop
push
lock
mov
and
sub
enter
sahf
sahf
xchg
cmp
push
leave
dec
fisubrs
repz
ret
add
add
ljmp
mov
mov
add
dec
push
dec
xchg
cmp
mov
jmp
push
add
add
adc
inc
decl
or
jmp
jmp
pushl
mov
nop
adc
fs
mov
push
repz
decl
push
dec
lods
inc
decl
sahf
hlt
arpl
adc
dec
push
adc
hlt
mov
cmp
dec
pusha
dec
mov
pushl
out
popf
jle
call
das
push
inc
push
cmp
in
push
push
lods
movsl
jmp
decl
ja
call
jb
dec
fsub
decl
pushl
aam
ljmp
jmp
jmp
pushl
cvtps2pd
outsl
out
ret
ljmp
inc
mov
sbb
lock
ds
push
jmp
add
test
cmp
jmp
pop
int
je
inc
jmp
cmp
lcall
bnd
jbe
pusha
call
fmulp
fiaddl
test
loopne
ljmp
mov
jge
jmp
mov
mov
jmp
add
add
ds
call
test
call
ror
push
push
call
dec
jp
inc
ljmp
push
xlat
ss
cmpsb
dec
or
mov
push
inc
pushl
xchg
stc
scas
jge
sub
cmpsl
lcall
test
mov
call
and
sub
jno
push
jmp
mov
pushl
rolb
decl
incl
lods
scas
mov
movsb
dec
int3
push
jmp
add
push
pushf
mov
inc
pushl
outsb
lods
jb
decl
jmp
call
cmp
xlat
xchg
add
fnstsw
clc
insl
xor
out
repnz
lcall
call
mov
incl
mov
mov
aas
lock
cltd
xor
jns
xchg
pushl
adc
das
pop
push
test
inc
inc
jmp
jmp
dec
xor
mov
incl
add
jmp
jmp
add
pushl
notl
repz
decl
imul
cmp
xchg
clc
hlt
cmc
jge
jmp
or
ljmp
ljmp
fcomps
adc
decl
push
sbb
aaa
in
mov
dec
sub
jge
pushf
pushf
in
cmp
dec
adc
shr
repnz
call
mov
add
push
cwtl
push
sbb
inc
add
push
roll
adc
mov
cmp
mov
das
outsl
xchg
test
aas
cmc
test
cwtl
add
pushl
js
rcll
popa
fisubrl
jle
sub
xchg
into
cld
test
mov
stos
jns
lcall
xchg
push
ret
add
add
call
jmp
sub
jno
cmp
repnz
adc
mov
jb
jmp
pushl
lret
dec
stos
shlb
jmp
push
jmp
jmp
sbb
repnz
lcall
or
scas
xor
dec
jge
lcall
ljmp
dec
stos
insl
lahf
neg
ljmp
add
add
add
out
cmp
xchg
sub
fidivs
jle
pop
mov
js
xor
mov
jge
add
incb
add
int3
outsb
int
push
mov
loope
mov
fcomps
add
jmp
add
add
xchg
imul
or
xchg
sub
fistl
je
sub
mov
push
aas
cmp
sub
jno
decl
mov
or
pop
jge
cmp
dec
cmp
call
xchg
mov
mov
incl
pop
enter
jge
mov
push
ret
add
add
ljmp
cli
scas
shll
fisttps
test
xchg
or
mov
pushl
std
pop
test
incl
decl
lods
jnp
push
cmp
push
call
mov
fsubrl
incl
call
push
in
xchg
mov
lcall
pop
loopne
flds
arpl
inc
lcall
aad
xchg
jb
jb
push
jns
call
lcall
and
push
ret
add
inc
call
dec
mov
ljmp
sub
ret
mov
mov
fidivrl
lcall
cs
decl
jmp
push
adc
add
pushl
sbb
jg
jmp
adc
add
push
push
add
push
mov
add
sti
cmp
jb,pt
arpl
push
incl
or
fimull
push
ljmp
pushf
add
stc
sar
fidivrs
jmp
adc
cld
leave
cmp
push
popa
incl
int3
call
dec
out
mov
sar
xlat
cmp
and
mov
add
jmp
pop
add
or
imul
incl
push
pop
movsl
incl
icebp
cmpsl
incl
pushl
xchg
xor
jle
incl
lcall
call
ljmp
clc
test
mov
dec
lea
mov
call
mov
push
jmp
lcall
push
add
dec
daa
jmp
pushl
jns
test
popa
lcall
hlt
mov
sbb
sahf
xchg
test
push
cmpsl
cli
test
jo
pop
jmp
push
mov
incl
outsb
add
mov
mov
scas
dec
mov
enter
fldl
aas
xchg
jnp
jns
test
sar
dec
pushf
pop
push
xchg
stc
in
aas
mov
lcall
ds
mov
sub
stos
mov
xor
call
sar
decl
mov
pusha
call
jnp
lcall
jmp
div
xor
testl
mov
add
mov
jmp
add
add
imul
insl
and
xor
lcall
adc
loop
adc
scas
sbb
std
adc
add
adc
pop
add
ljmp
repz
jl
int
decl
jns
cmp
mov
movsl
call
lcall
push
hlt
pushl
cmp
jmp
ljmp
ja
jmpw
mov
popa
jmp
mov
nop
cmp
jg
or
mov
xor
ret
push
add
add
or
decl
push
outsb
jns
leave
xor
cltd
cmp
aam
sub
popa
pushl
mov
inc
ficoml
incl
jnp
gs
cmp
testb
jne
mov
cltd
push
jp
jns
ss
out
incl
dec
add
outsb
shlb
jmp
je
sahf
insl
or
cmp
ljmp
jmp
jnp
add
add
and
pop
mov
dec
pop
movsb
push
or
sbb
decl
mov
cmpsl
incl
pushl
popa
jmp
incl
xchg
cmp
aas
test
out
loope
push
fbld
lret
hlt
mov
mov
incl
incl
pushl
xchg
sar
sbb
sub
mov
call
jmp
out
ja
push
out
cltd
hlt
push
push
jl
call
add
call
jb
out
xchg
js
dec
xchg
or
jle
lret
mov
icebp
fists
std
dec
in
aam
decl
mov
pop
push
mov
ret
jmp
add
pusha
lcall
mov
or
mov
iret
xchg
inc
decl
int3
mov
and
rolb
std
fsub
call
js
sar
ljmp
decl
sbb
fists
inc
lcall
jg
jmp
add
jnp
mov
mov
push
outsb
into
mov
xchg
mov
xchg
adc
stos
adc
in
xor
in
test
movsb
pushl
mov
aas
adc
jbe
or
out
adc
fists
sar
dec
push
ret
jmp
adc
jecxz
pop
and
filds
pushl
mov
inc
lcall
cmp
cs
push
lcall
fisubrl
push
push
lret
lock
pop
sahf
movsb
push
cmp
scas
fldenv
adc
adc
cltd
test
xlat
out
dec
add
mov
jmp
xchg
mov
dec
test
add
pushl
mov
ljmp
push
hlt
adc
add
add
sti
pop
xchg
movsb
mov
adc
push
add
mov
xor
ljmp
inc
call
mov
incl
add
add
scas
xrelease
je
jmp
add
push
inc
dec
mov
fld
ljmp
ret
push
loopne
mov
pushf
inc
cmp
into
jne
dec
imul
lcall
cmp
and
and
inc
ljmp
sbb
and
ja
inc
lcall
add
lcall
sbb
jl
adc
mov
push
mov
push
mov
push
adc
dec
fstp
push
cmc
mov
incl
rolb
jmp
jbe
add
call
jmp
js
in
cmp
arpl
mov
xchg
cwtl
stos
jb
pop
decb
inc
pushl
or
pop
mov
jmp
xchg
and
stos
xor
sub
sub
mov
ljmp
out
xlat
testb
movsl
dec
in
pop
xchg
sub
jge
cmp
pop
fldcw
cmp
decl
mov
dec
pop
and
cld
in
pushl
push
lods
jmp
pop
add
adc
xchg
push
lcall
sub
add
call
popa
jmp
jmp
fucomp
mov
push
cmp
mov
popa
jmp
xor
ljmp
out
addr16
jg
xchg
xor
call
jb
cmp
call
pop
call
call
pushl
jmp
in
push
test
cmp
jbe
adc
clc
inc
call
lcall
mov
xor
testl
sub
jmp
add
push
add
call
push
in
cmp
pushl
enter
test
aad
lcall
lahf
jo
adc
lcall
faddl
leave
dec
inc
call
xor
jp
addr16
js
cmp
incl
fnstcw
arpl
test
sbb
ljmp
jnp
add
sub
loopne
inc
filds
lret
cli
ret
mov
xor
jmp
add
inc
decl
xchg
mov
jmp
out
xchg
push
or
inc
ljmp
call
ret
dec
fsubrl
arpl
add
jmp
cmp
mov
sub
dec
lods
mov
mov
inc
call
jge
out
dec
pcmpgtb
mov
or
or
cld
jmp
leave
roll
add
add
and
push
sbb
lcall
cli
or
inc
decl
mov
dec
notl
xor
fstpt
lods
incl
add
outsb
add
out
fisttps
mov
decl
inc
add
add
add
jmp
push
add
mov
inc
jmp
pushl
sar
decl
mov
or
fwait
sbb
jmp
add
adc
ljmp
mov
push
movsl
jmp
xchg
push
add
add
scas
scas
xor
mov
xchg
xchg
sar
fsubs
cmp
adc
decl
xor
dec
jnp
call
mov
add
sub
repz
pop
decl
repnz
push
ds
scas
aas
jno
and
or
sar
sub
idivl
dec
fstl
sahf
mov
mov
pop
xchg
outsb
mov
cmpsl
jmp
decl
push
decl
stc
cli
cmp
je
adc
cmp
cmp
insb
jecxz
jb
pop
or
in
push
dec
sub
push
jo
and
repz
cmp
jbe
leave
outsb
push
shr
jmp
add
mov
jno
das
outsl
stos
jnp
jb,pt
cmp
lcall
xchg
inc
incl
ljmp
cmp
lahf
cmp
cmp
decl
loopne
and
dec
xchg
push
dec
sbb
adc
incl
lcall
popf
mov
xchg
pop
jbe
decl
fdivs
add
jmp
inc
stc
icebp
icebp
std
xor
pusha
jmp
iret
mov
and
dec
dec
sbb
repnz
push
roll
pushf
dec
movsb
pushl
ret
decl
jp
lcall
jecxz
into
dec
jmp
ljmp
fcmovne
xchg
mov
jmp
shll
cmpsb
call
cmp
pop
mov
pushl
mov
xchg
mov
dec
cld
push
mov
sbb
out
sar
incl
adc
add
pop
insb
mov
mov
dec
fists
sar
mov
push
push
idivb
sarb
dec
jno
and
add
inc
lcall
mov
gs
in
mov
jbe
sub
lcall
decl
pusha
jmp
decl
les
sarb
add
incl
rorl
incl
call
lock
jnp
push
add
mov
mov
decl
incl
call
inc
call
inc
decl
pop
pop
or
call
add
inc
jmp
pop
fdivr
jmp
add
push
loope
pop
je
std
mov
je
cli
dec
xchg
inc
lcall
inc
dec
adc
incl
popa
jmp
call
lcall
cmp
inc
call
jmp
adc
dec
cs
jmp
mov
call
hlt
lcall
push
icebp
jmp
add
add
lods
and
xchg
nop
ja
push
mov
jmp
out
adc
add
int
add
lcall
cmp
xor
xchg
stos
pusha
lcall
call
push
mov
pushl
ljmp
pop
stos
mov
mov
jmp
js
imul
jl
sar
punpckhdq
pusha
call
sub
call
lods
mov
mov
add
add
mov
in
mov
call
push
push
add
decl
jecxz
loopne
mov
cltd
add
decl
jns
mov
in
dec
mov
call
jle
mov
push
scas
push
adc
jmp
ljmp
mov
add
jmp
mov
jmp
add
outsb
add
ja
push
inc
aas
pop
fwait
aam
mov
sbb
jns
add
lcall
cmp
jmp
aaa
imul
insl
call
mov
add
push
mov
fdivrl
add
push
push
inc
out
jmp
pop
dec
cli
add
lcall
xor
out
sbb
lods
mov
cmp
js
cmp
adc
inc
call
mov
iret
incl
add
jbe
call
jmp
push
add
jmp
call
jle
cmc
dec
xchg
pusha
call
dec
fwait
dec
sbb
sahf
pop
or
jmp
popa
incl
ret
jmp
mov
outsb
add
add
xchg
jmp
inc
incl
xchg
in
xchg
shrb
mov
popa
incl
aas
mov
pop
test
ljmp
cmp
in
inc
jmp
enter
pop
call
lcall
add
dec
in
lcall
repz
jmp
add
jp
insl
adc
mov
jmp
mov
cmp
call
add
xchg
leave
add
add
arpl
ljmp
addl
add
mov
adc
jnp
test
mov
and
dec
push
ds
sarl
incl
cmc
jmp
stos
lret
out
sbb
mov
decl
jl
decl
jmp
fdivrp
sahf
inc
incl
jl
xchg
imul
test
cmp
sbb
jmp
push
adc
xchg
sbb
or
jmp
cmp
pushl
cmp
adc
pushl
xchg
xchg
xchg
sbb
sub
push
pop
decl
call
add
negl
pop
xor
call
js,pn
sbb
push
adc
jge
lcall
xchg
js
mov
jmp
add
add
push
mov
dec
out
sub
jbe
add
add
add
decl
clc
pop
sub
pop
mov
nop
mov
imul
incl
add
imul
adc
lret
sbb
and
fwait
sbb
mov
push
pop
mov
in
mov
lcall
cmp
fstpt
out
imul
inc
add
add
jg
sar
je
pop
fsubr
lea
incl
xor
push
cltd
fisubs
jmp
incl
call
addps
call
sti
sub
mov
push
and
sub
inc
dec
push
insl
cltd
fldcw
cmpsb
inc
mov
dec
enter
mov
or
add
cli
out
pusha
lcall
arpl
enter
mov
loopne
lea
pushl
aas
mov
ja
push
add
insl
inc
add
add
lahf
repnz
sbb
sub
xor
add
pushl
pop
or
jmp
jnp
out
add
jmp
adc
leave
add
push
mov
lcall
push
mov
loop
jmp
pushl
mov
jnp
incl
adc
add
lcall
jo
dec
xchg
inc
lcall
xchg
fchs
jnp
xchg
xchg
test
pop
lcall
nop
jp
nop
inc
incl
sar
lcall
mov
rep
jmp
xchg
add
add
daa
call
imul
call
aaa
insl
mov
js
mov
ljmp
data16
stc
lods
mov
call
incl
incl
in
imul
js
std
lret
mov
ljmp
or
cmp
dec
add
incl
add
mov
clc
loopne
not
inc
call
pushf
pushl
and
pop
fiadds
std
lahf
movsb
jmp
lcall
call
out
lcall
add
pushl
fistpl
jno
inc
jl
pop
call
xchg
pushf
in
pop
push
mov
mov
movsb
call
mov
and
sbb
jmp
mov
mov
call
mov
mov
out
adc
cmp
decl
scas
inc
lcall
mov
cmp
push
fidivs
cmp
pushf
sbb
into
push
pusha
decl
push
jnp
in
in
mov
incl
mov
aaa
push
jmp
adc
add
jle
pushl
fnstenv
and
hlt
and
xchg
imulb
sub
and
lcall
jmp
adc
add
add
mov
neg
push
push
push
ret
add
add
pop
pop
call
test
idiv
incl
push
jnp
mov
ljmp
ret
fisubl
arpl
pop
cmp
incl
xchg
fsubl
in
sub
nop
adc
test
pop
cmp
loopne
pop
incl
pushl
and
sahf
test
loopne
into
fsts
call
add
out
jne
ljmp
inc
pushl
loop
cmp
pop
and
cwtl
pop
push
push
jmp
fidivl
shl
jmp
mov
ljmp
jne
mov
movsl
ljmp
sbb
jl
inc
jmp
xchg
push
sub
adc
jp
push
repnz
pop
sbb
dec
or
push
dec
push
pushl
inc
cli
sub
jmp
iret
adc
mov
push
mov
mov
pop
adc
add
loope
cmp
dec
clc
sbb
incl
js
xchg
and
xchg
add
jg
aaa
int
call
jmp
fdivrs
jmp
cmp
jns
inc
cmp
cli
lock
push
repnz
incl
call
xchg
cld
ret
incl
dec
enter
pop
cli
cmp
sbb
push
add
mov
incl
add
adc
leave
jmp
jmp
add
push
aas
sbb
jmp
ljmp
xor
clts
jg
scas
jg
push
adc
xlat
pop
testb
call
pop
aad
dec
fwait
pushf
mov
ja
lcall
incl
fdivr
incl
add
loope
mov
sar
add
add
add
adc
imul
repz
mov
mov
mov
into
fisubl
jge
decl
pop
xor
pop
inc
call
je
lcall
jmp
add
decl
aam
push
sub
out
dec
cmp
aam
pushl
in
lret
sahf
aaa
push
clc
incl
push
add
lods
cwtl
call
lcall
sub
and
xchg
stos
jp
adc
ljmp
sar
test
xor
jp
mov
or
lahf
sbb
cmp
loopne
fdivl
call
call
xchg
aam
xchg
aaa
and
out
xchg
adc
sub
inc
call
mov
jmp
push
add
add
and
jno
jecxz
dec
leave
mov
sub
push
loop
push
jp
pop
mov
decl
movsl
jmp
sub
enter
test
decl
jmp
pop
pop
test
jmp
jnp
fcmovbe
push
outsl
xor
adc
call
inc
lcall
pop
push
xchg
nop
inc
jmp
jl
pushl
xor
push
out
jno
lcall
call
cwtl
int
ljmp
mov
push
add
ljmp
lcall
dec
mov
cmp
cmpl
jmp
add
dec
pop
decl
mov
sub
mov
cmp
popf
pop
ror
cmc
sar
mov
and
fwait
push
or
mov
or
xor
lret
ljmp
adc
test
add
push
push
fcoml
arpl
mov
je
stos
stc
jp
sub
movsl
fdivl
movsb
mov
jbe
xchg
incl
inc
lcall
jmp
aam
inc
jmp
jnp
add
outsb
mov
decl
dec
pusha
pushl
out
das
add
lcall
call
adc
ljmp
test
cwtl
movsl
dec
int3
fscale
loope
cli
cmp
sub
loope
inc
call
cmp
out
push
lcall
je
push
ret
jno
call
adc
push
jmp
add
pop
add
test
shl
pop
shrl
jmp
ljmp
xor
cltd
incl
add
leave
add
incl
fimuls
lahf
push
sub
lods
popf
dec
and
enter
outsb
mov
push
insl
push
jg
xchg
adc
decl
or
mov
mov
cmp
pop
dec
decl
ljmp
ljmp
hlt
dec
enter
je
sti
dec
sar
pop
or
mov
inc
stc
insl
jl
pop
mov
sub
cmp
jmp
add
cs
add
dec
mov
rcll
pushf
daa
incl
pushf
incl
add
add
or
pop
incl
call
mov
call
pop
add
adc
test
adc
cmp
push
ret
add
add
decl
ja
arpl
sub
push
dec
sar
out
mov
fsubr
cmp
call
xor
je
incl
pushl
add
jmp
inc
ljmp
jmp
rcll
push
dec
test
xchg
test
adc
lcall
xor
test
pushl
adc
ret
call
cmp
pop
cmp
inc
jmp
xchg
dec
mov
push
and
xchg
call
int
das
fsubr
mov
cs
addr16
out
jl
ljmp
scas
sub
in
jmp
xchg
fmuls
mov
mov
xchg
add
ljmp
sbb
cmp
mov
ljmp
push
cld
inc
call
roll
push
in
pop
lock
mov
sub
stos
xchg
jo
cld
pop
mov
scas
jb
call
not
sar
push
jmp
add
add
add
clc
sbb
dec
mov
mov
loopne
pusha
jmp
icebp
xor
dec
enter
decl
and
push
call
jmp
add
add
xlat
scas
sub
mov
jmp
mov
scas
or
call
and
lret
sbb
lock
sbb
ret
jnp
mov
pop
adc
roll
xor
cmp
ljmp
cmp
hlt
sbb
push
adc
jp
adc
sub
jl
jmp
aad
sahf
xor
imul
rcrb
inc
inc
inc
ficomps
dec
movsl
mov
push
mov
adc
test
call
or
add
add
lods
ds
jl
call
mov
xchg
adc
jo
call
ljmp
dec
sub
sbb
fbld
hlt
scas
btr
cld
divl
jmp
and
sti
or
jmp
cmp
pop
inc
std
out
pop
je
outsb
int3
icebp
or
push
popa
jmp
stc
inc
incl
decl
inc
add
add
add
cmp
jmp
jmp
add
cmp
out
ss
mov
jns
mov
jne
sbb
pop
inc
call
jb
loop
inc
ljmp
sub
callw
mov
incl
add
dec
decl
out
jne
clc
aas
push
cli
fdivrp
dec
mov
ljmp
fdivs
and
dec
jecxz
in
push
mov
lret
pushf
test
out
sar
cs
scas
mull
xchg
insl
mov
xlat
push
adc
aad
stos
ds
push
inc
decl
out
mov
ljmp
xor
ret
incl
loop
jmp
jb
ljmp
decl
push
test
daa
inc
call
stos
xor
ficoml
mov
inc
jmp
lcall
callw
xchg
clc
clc
mov
adc
outsb
cli
incl
add
add
int
imul
lock
cld
cmpsl
ljmp
inc
cmp
lods
xchg
movzbl
out
mov
int3
lods
mov
push
cs
js
sub
aad
decl
in
inc
inc
out
insb
imull
jmp
or
jnp
xlat
in
or
clc
movsl
ljmp
icebp
mov
incl
sbb
push
lret
xor
adc
and
incl
pop
outsb
dec
sahf
mov
or
pusha
inc
call
cs
stc
inc
jmp
out
imul
ss
loop
push
sti
dec
das
shr
lods
in
nop
stos
dec
notl
cmp
in
leave
mov
xlat
fisttpl
outsb
js
lcall
in
and
mov
mov
jmp
ljmp
mov
add
add
cwtl
mov
call
sbb
call
push
add
icebp
mov
aad
push
jmp
add
pop
incl
inc
mov
adc
icebp
add
call
shl
lcall
fwait
xchg
xchg
hlt
pop
rorl
cmp
or
xlat
imul
sub
call
add
add
js
jmp
adc
mov
incl
xchg
or
jmp
cmp
pushl
jmp
push
push
push
pop
push
add
dec
jmp
lods
cmp
stc
mov
push
xor
and
pop
sar
sahf
and
adc
xor
cmp
cmc
lcall
dec
xor
fisubs
outsl
push
aaa
xchg
pop
in
popf
jmp
jle
aam
incl
incl
cs
loope
sti
sbb
xchg
and
mov
decl
stos
push
es
push
ss
sti
pop
loop
mov
jmp
jmp
add
push
add
add
inc
lcall
jmp
cmp
call
ljmp
decl
testl
and
out
xor
popa
ficomps
in
xchg
call
mov
mov
xchg
aad
popf
lcall
dec
sbb
xor
sar
push
xchg
outsl
xchg
xchg
xchg
or
jnp
or
icebp
jle
ja
rclb
stos
push
jmp
sub
jmp
call
cwtl
div
or
cmc
cmp
pop
mov
pop
decl
jmpw
xor
mov
arpl
negb
jmp
jl
ficompl
incl
outsl
daa
pushl
xchg
inc
ljmp
ret
push
lret
xchg
daa
pushl
xor
xchg
jp
lret
stc
fildl
pop
lahf
aad
loope
iret
or
sti
nop
dec
dec
and
add
jnp
incl
xchg
ja
incl
mov
test
cli
call
call
int3
jmp
fdivrs
inc
decl
jecxz
pop
add
pushl
call
out
and
sub
cmp
iret
rcll
mov
jmp
decl
jnp
add
jg
mov
adc
sbb
cltd
pop
sub
pop
and
add
jae
ljmp
xor
jmp
add
mov
dec
add
sbb
xchg
mov
incl
adc
adc
jmp
adc
push
adc
decl
inc
incl
cmp
dec
adc
repnz
mov
push
push
ret
add
mov
lcall
cmpsb
inc
dec
loope
popf
ss
cmp
lcall
lcall
aaa
or
incl
shll
xor
sbb
xchg
out
sbb
je
push
jmp
add
sar
add
in
scas
push
and
jmp
add
add
fcoml
shr
je
push
pop
pushl
pushl
mov
cs
sbb
enter
ljmp
fists
mov
imul
ljmp
incl
or
lcall
jmp
add
add
mov
and
imul
jmp
outsb
mov
pop
mov
xchg
inc
incl
dec
mov
jmp
call
arpl
jnp
xlat
mov
icebp
sbb
pop
aad
mull
ljmp
dec
test
loope
and
fwait
or
or
inc
ljmp
adc
in
push
inc
decl
inc
jmp
jmp
decl
jecxz
add
dec
xor
mov
pushf
and
je,pt
pop
xchg
mov
xchg
push
jns
pop
push
lret
xchg
inc
add
add
imul
sbb
xor
lret
mov
movb
loope
decl
call
xchg
movsb
decl
fnsave
cmpsb
call
test
inc
jmp
ljmp
jmp
cmp
push
call
cmp
sbb
clc
pop
pop
pop
xchg
mov
in
insb
adc
jmp
pop
jnp
jecxz
pop
mov
ljmp
insb
rcr
push
ljmp
das
stos
shrb
insl
clc
outsl
pop
cmp
ljmp
xchg
xchg
in
xchg
out
call
push
sbb
fdivs
fxch
aas
jbe
pushl
sub
push
repz
mov
add
jmp
add
add
cltd
dec
or
fdivs
xor
incl
out
sub
add
jmp
pushl
push
out
xor
or
jle
and
and
dec
cmp
push
lret
incl
out
add
mov
xchg
call
mov
add
inc
dec
sbb
xchg
in
pushw
cmp
insl
ljmp
jnp
outsb
mov
push
sub
sbb
rcll
scas
test
add
popa
mov
incl
add
out
mov
addr16
cmp
sub
aad
mov
mov
lods
jo
cmp
dec
jge
test
in
mov
inc
incl
leave
mov
std
cmp
adc
ljmp
pop
mov
xor
sub
call
cmp
jle
jp
sar
sar
pushl
or
ret
and
decl
test
sar
jmp
add
popa
jmp
push
repnz
jbe
incl
pop
mov
movsl
incl
mov
ret
push
sub
cmp
cmp
out
pop
inc
call
cmpsl
jmp
jmp
pushl
xchg
add
lcall
ret
in
lods
push
mov
ds
pop
lcall
test
cwtl
iret
xchg
sar
in
insb
mov
or
and
ljmpw
xlat
jb
call
dec
dec
cmp
jb
call
outsl
mov
cmp
sub
call
jo
inc
decl
cmp
cmp
push
mov
inc
add
add
add
mov
pop
aad
xor
clc
sub
call
and
jle
cli
or
sahf
mov
test
sub
pop
stos
xchg
ret
pushl
sahf
sub
out
imul
mov
jmp
inc
call
add
inc
add
add
add
sar
inc
incl
ljmp
incl
repnz
ja
sbb
jns
call
push
push
pop
rcll
push
mov
xor
js
pop
sub
notl
sub
cmp
hlt
push
pop
push
ret
add
jnp
add
cmp
ss
outsb
or
call
cld
mov
call
sub
test
ljmp
cmp
add
fstps
ds
imul
loopne
movsb
jmp
lcall
incl
lret
sbb
pop
inc
pushl
popf
jmp
fwait
mulb
ljmp
ljmp
ds
mov
push
push
or
mov
fs
in
jne
pushl
mov
call
dec
dec
jecxz
mov
daa
lcall
repnz
nop
loope
mov
stos
xor
mov
push
jnp
lcall
data16
js
mov
pushl
das
stos
ss
incl
add
inc
call
iret
pop
lret
fsubrl
je
xchg
int
sar
daa
jmp
neg
aam
sar
call
in
int3
add
dec
add
add
add
ljmp
or
adc
inc
lcall
sahf
ret
enter
cmp
mov
decl
jnp
lods
repz
xchg
adc
decl
inc
lcall
into
pop
decl
inc
sti
sbb
dec
adc
ljmp
or
add
fisubrl
mov
call
ljmp
lods
ds
repnz
jmp
incl
mov
shlb
lcall
cmp
jmp
cmp
jb
sub
add
jmp
incl
fst
pop
cs
nop
mov
cmp
mov
jb
adc
jb
out
mov
cmp
incl
pusha
cmp
cltd
dec
scas
push
ljmp
call
add
leave
dec
dec
sub
aad
jp
into
icebp
sbb
adc
aas
mov
jmp
jbe
dec
aad
dec
lcall
lahf
cmp
sar
fldt
aas
stc
test
lods
xchg
ficoml
aas
push
cwtl
inc
pushl
loop
jmp
mov
sbb
pop
inc
push
jno
pop
mov
sti
dec
and
cmp
mov
xchg
adc
ja
repnz
mov
in
or
lcall
inc
lcall
jmpw
call
jmp
pop
mov
repnz
lret
incl
incl
clc
mov
dec
hlt
or
call
out
in
jnp
imul
das
fimuls
add
cld
mov
incl
pushl
add
jmp
jmp
fisubl
pushl
xchg
dec
and
pop
and
popf
and
adc
cmp
jle
into
in
icebp
cli
push
insb
in
mov
fildl
dec
add
jmp
pop
xchg
call
ret
mov
add
fsub
call
xchg
and
pop
push
pop
stos
pushw
mov
jo
push
jno
fstl
pop
jmpw
incl
xor
adc
jmp
mov
je
push
and
mov
ret
fisttpl
pop
or
pushl
sub
jne
call
dec
push
test
jmp
cmpsl
inc
decl
out
pop
in
xchg
in
push
ret
inc
mov
movsl
jp
ljmp
cmp
or
aam
mov
jge
mov
or
sar
ljmp
mov
out
int3
das
sbb
iret
arpl
test
pop
aam
jmp
scas
push
pop
mov
jmp
call
pop
sar
sar
jno
clc
iret
add
push
fistpll
fwait
nop
jb
insb
lea
call
movsl
incl
decl
stos
cmc
sbb
xor
mov
mov
mov
sahf
lods
pop
out
jbe
add
call
pop
std
in
sub
rcl
loop
mov
push
ss
movsl
call
dec
or
pusha
call
je
pandn
cmp
lahf
outsl
mov
xchg
out
test
cmp
push
push
pushf
in
jb
pushf
incl
sub
jmp
pushf
push
lret
or
jmp
jmp
lcall
aad
nop
js
fmuls
sub
divb
ljmp
pop
sub
mov
call
iret
fbstp
or
push
fs
aas
add
pop
dec
sub
rcrb
mov
loopne
and
repz
in
jns
outsl
rcr
xor
incb
call
jno
and
push
scas
test
call
jle
fsubl
and
dec
push
inc
decl
movsl
incl
cli
out
ljmp
dec
lret
negl
push
jmp
pushl
call
data16
in
cmpsb
call
mov
into
shrb
cmpsb
lcall
test
cmp
decl
inc
pushl
hlt
inc
ljmp
cmp
mov
inc
jmp
pop
je
lcall
push
roll
ljmp
jecxz
mov
cltd
fnstenv
dec
sbb
jmp
jb
pushl
decl
ljmpw
lea
ss
pushl
jno
flds
call
sbb
cli
mov
insl
call
lcall
pop
xchg
cld
sub
aas
mov
cmp
cmp
push
dec
xchg
pusha
call
jp
adc
mov
cwtl
lock
pop
scas
mov
out
pop
pop
sub
and
mov
std
or
ret
xor
mulb
sbb
pop
mov
cmp
shl
push
pop
sti
sbb
aas
call
add
jmp
decl
mov
lcall
mov
sub
and
jge
push
call
popa
pushl
pushl
daa
ljmp
adc
ficoml
add
lcall
out
or
lcall
mov
dec
jno
adc
out
and
call
push
aad
ljmp
sbb
cwtl
sar
sar
loopne
mov
lcall
jmpw
fbstp
cs
push
out
aad
jmp
xchg
mov
jmp
jmp
rep
icebp
pop
sbb
fildll
add
mov
decl
jmp
and
pop
and
mov
outsb
test
pop
clc
jmp
jl
jmp
jnp
idiv
push
out
shlb
call
xchg
clc
mov
jmp
ficompl
sbb
dec
scas
ds
movsl
jmp
call
loope
sti
mov
mov
mov
nop
lret
ja
int
cltd
insl
dec
cmp
sbb
push
jmp
sbb
incl
sar
decl
jecxz
shll
adc
jl
and
xor
pop
cmp
and
je
aas
fdivp
and
cmp
ret
ljmp
scas
jne
fidivrs
pushl
dec
sub
mov
stc
pop
and
mov
lcall
xchg
cmp
pop
cmp
dec
out
popa
incl
lcall
cmp
jg
lods
push
mov
and
lods
aam
clc
xchg
ljmp
adc
jmp
mov
push
iret
mulps
xchg
inc
decl
scas
cld
inc
inc
push
pop
dec
ds
cs
loopne
xor
and
mov
or
dec
rorl
jb
mov
inc
lcall
sub
cs
dec
sbb
jmp
mov
enter
daa
pushl
lcall
xor
daa
jmp
push
test
decl
sar
call
mov
xchg
mov
decl
lret
xchg
jle
lcall
cmp
mov
cmpsl
call
fisubl
decl
mov
sub
call
dec
insb
cmc
mov
jno
push
cmp
lods
mov
jmp
aas
jmp
xchg
mov
lcall
cwtl
add
sub
jmp
call
jne
dec
imul
out
inc
dec
stos
cmp
shrb
icebp
sbb
sub
nop
sti
adc
fists
test
daa
lcall
cmc
inc
pushl
clc
add
push
neg
ja
fsub
ljmp
xor
stos
mov
jb
decl
decw
nop
inc
jmp
std
inc
jmp
mov
call
repnz
fisubrs
jmp
push
jb
xor
push
fadds
jb
nop
add
incl
ss
ret
pushl
push
lahf
jno
push
jnp
sar
cmc
fisubrl
loop
mov
jg
or
imul
decl
or
cmp
movsl
pushl
stc
ficoml
pushl
jmp
jmp
push
lcall
decl
add
ljmp
xor
pushl
cmpsb
arpl
lods
mov
jl
iret
fidivrs
xchg
xchg
aaa
idivl
incl
cmpsl
incl
sbb
cmpsl
inc
lcall
add
lret
mov
jge
ljmp
pushl
decl
pop
lods
xor
rclb
mov
xchg
in
mov
jl
mov
jg
or
cmp
mov
dec
mov
and
lret
std
and
xchg
sub
fcmovne
arpl
pusha
jmp
incl
add
lcall
nop
in
popa
lcall
jo
add
out
fs
jmp
jmp
pushf
mov
push
aaa
pop
incl
ret
decl
jmp
inc
lcall
jmp
mov
xlat
sbb
call
jle
pop
pop
xor
jae
idivl
adc
arpl
add
call
or
cmp
xchg
leave
int
incl
incl
outsb
incl
cmc
jnp
scas
arpl
scas
pop
ja
inc
dec
in
lahf
pop
jg
inc
incl
in
cltd
mov
mulb
xor
mov
inc
lcall
jge
decl
sahf
sbb
dec
ss
iret
lcall
movd
pop
mov
and
out
mov
incl
or
pop
pushf
or
fs
incl
or
in
inc
dec
daa
incl
incl
or
ljmp
cmp
arpl
add
shrb
jmp
ljmp
dec
jp
sbb
ljmp
jae
mov
lods
sub
mov
sahf
outsb
fsubrs
jmp
inc
out
fincstp
jmp
push
or
je
arpl
mov
ret
jmp
or
das
leave
jmp
jmp
pushl
loopne
aad
sar
aad
pushl
jmp
pusha
jmp
fwait
loopne
ds
movsl
jns
adc
push
mov
pop
lea
mov
or
inc
push
mov
push
jno
jl
jecxz
mov
cs
in
shl
cld
sbb
out
loopne
cmp
adc
dec
frstor
pushf
push
fcoms
push
add
push
int
incl
pushl
or
ljmp
call
mov
pop
loope
lock
pop
push
xchg
leave
pusha
jmp
cmp
push
ds
ljmp
or
in
or
fldl
lods
pop
pop
xor
aam
mov
leave
jmp
jmp
in
mov
lods
idivb
popf
scas
and
inc
lcall
jmp
xor
mov
sbb
pop
outsb
sub
mov
sbb
or
call
and
stos
icebp
loope
and
decl
mov
push
cmp
mov
mov
decl
popa
ljmp
cmp
dec
pop
jg
xchg
push
adc
ljmpw
push
sti
lea
incl
in
adc
pushl
lcall
add
jmp
lcall
loope
add
lcall
imul
testl
aam
pop
xor
enter
add
std
jns
call
add
push
cmp
ljmp
leave
mov
cmp
mov
ljmp
adc
int
mov
mov
xlat
inc
incl
nop
fcoml
jle
ret
incl
das
sbb
test
fildl
in
adc
mov
cltd
loope
xchg
incl
ljmp
lcall
scas
jmp
jb
call
jno
lcall
mov
cli
fcompl
sub
add
dec
cwtl
pop
iret
push
push
jnp
aad
cmp
fwait
mov
and
loop
fldcw
cmp
push
pop
lock
cmp
fstps
adc
jle
pop
call
in
int
cmpsl
pushl
ja
lcall
ficomps
decl
xchg
jge
enter
pushl
sbb
cmp
xchg
ret
pop
cmp
or
icebp
inc
lcall
jmp
ljmp
dec
sbb
jmp
cmp
call
mov
mov
testb
jge
js
xor
push
add
jl
mov
mov
sbb
cmp
int
fsubr
jns
nop
int3
rcr
xor
fwait
jecxz
lret
nop
loope
push
pop
mov
call
or
call
dec
mov
aam
fsubr
adc
incl
call
int
decl
pushl
fxch
xor
cmp
mov
push
add
decl
out
ljmp
ljmp
mov
ds
lock
and
mov
push
incl
ljmp
incl
adc
aas
stos
adc
push
int
incl
or
cmp
scas
add
faddl
sahf
pushf
adc
arpl
xchg
movsl
lcall
test
dec
neg
jno
add
push
inc
call
jmp
xchg
xor
sub
test
incl
xchg
in
inc
ljmp
inc
inc
decl
mov
sar
dec
jl
dec
adc
ljmp
mov
lcall
decl
sbb
push
testb
dec
or
lcall
add
inc
decl
fmul
jmp
mov
incl
repz
ljmp
scas
cmp
pop
jo
jmp
test
add
stos
sbb
in
mov
sbb
dec
in
outsb
pop
int
lcall
adc
movsb
pushl
pusha
lcall
jmp
ljmp
jb
test
mov
fidivrs
fldt
shll
adc
sub
loop
in
mov
push
xchg
mov
out
xor
lea
and
scas
sub
pop
lods
xlat
push
imul
pop
sti
loop
xor
mov
inc
jmp
call
adc
sub
mov
stos
mov
add
call
insb
xor
mov
jmp
scas
mov
test
call
ret
cld
loope
sbb
and
lcall
adc
call
push
flds
jge
cmp
pushl
jmp
call
jae
cmp
lock
fstpl
sub
jp
pushl
or
fs
jmp
gs
out
add
incl
pushl
loope
es
jmp
imul
mov
sti
cmp
out
imul
out
outsb
adc
icebp
js
dec
into
jns
pop
cmp
dec
xor
lcall
loope
cmp
aad
lea
pushl
shl
cmp
ja
jmp
js
arpl
jmp
mov
ret
mov
ljmp
cmp
in
pop
sub
push
sub
add
lcall
adc
repz
ljmp
pushl
cmpsl
lcall
jge
pushl
push
jmp
and
scas
int3
lcall
pop
sub
out
out
dec
pop
call
push
mov
pushl
jp
xor
sbb
cld
inc
incl
imul
fldt
loopne
jno
sub
mov
clc
leave
popf
jns
decl
xor
decl
sbb
push
mov
lods
xchg
cmp
sub
push
lcall
arpl
cwtl
xchg
inc
decl
aad
xchg
test
cmpsb
dec
or
ljmp
pushl
loop
rep
jp
jmp
dec
inc
call
xchg
push
fwait
inc
ljmp
stc
dec
es
ffreep
incl
add
incl
mov
test
push
cmpsl
pushl
ljmp
xchg
add
incl
inc
ljmp
iret
lcall
ljmpw
fsubs
decl
add
incl
xor
clc
mov
sti
add
jmp
pop
inc
mov
cli
mov
int3
jbe
pushf
hlt
out
adc
imul
int
dec
and
or
inc
jmp
decl
stos
rcr
fstl
xor
dec
fists
mov
in
mov
call
decl
lea
or
call
jmp
xor
pop
leave
pop
aas
nop
sub
push
out
cwtl
sub
fstpt
mov
movsb
decl
fbstp
sbb
jg
lcall
xor
incw
call
jp
insb
push
repnz
inc
call
dec
jns
out
cmp
cli
dec
jle
pop
cltd
imul
mov
cmp
mov
ljmp
xor
push
iret
mov
jmp
ljmp
setb
and
add
lcall
jecxz,pt
ljmp
inc
inc
push
imul
xor
adc
call
adc
mov
cmpsb
incl
sub
adc
aas
mov
jp
dec
jae
sub
std
ds
call
ljmp
lcall
adc
call
inc
call
aas
xchg
sti
int
lods
add
lcall
call
push
callw
or
sbb
incl
push
lods
or
pop
sar
xor
jns
and
pop
xor
jne
xchg
aaa
stos
movsb
jmp
push
sub
sub
incl
inc
call
inc
pushl
lret
dec
or
ss
sub
fwait
pop
lret
push
jl
sar
inc
jmp
decl
jns
inc
lcall
jmp
xchg
jecxz
cwtl
mov
sti
pusha
pushl
push
or
jmp
dec
lods
mov
div
xchg
loopne
dec
pushf
sub
push
lods
inc
call
sbb
ret
cmp
xchg
fisubs
add
push
xor
js
loop
incl
sbb
jmp
sub
or
inc
decl
push
out
shr
dec
cmp
stc
push
push
insb
nop
jmp
leave
mov
jae
pusha
push
add
call
pop
je
add
in
add
ljmp
or
aam
sarb
xor
loope
xor
mov
push
outsl
push
pop
jb
push
lahf
pop
js
mov
neg
lahf
outsl
cmc
inc
decl
nop
pop
sar
repz
es
jle
xor
inc
jno,pt
sar
pushl
dec
daa
inc
decl
in
aaa
js
sbb
call
sub
faddp
call
clc
mov
add
incl
adc
or
mov
xchg
fcmovnu
or
sahf
in
dec
aas
ss
push
jmp
ljmp
mov
incl
arpl
pop
sub
push
dec
push
nop
jns
xchg
jge
jg
jbe
dec
and
cmp
pop
sbb
ret
decl
lods
jae
ret
jmp
lcall
loop
sub
out
inc
frstor
cmp
out
shlb
call
movsl
lcall
call
dec
loopne
mov
sbb
dec
inc
incl
jmp
ljmp
mov
push
push
ss
lock
sar
pushl
inc
dec
pop
mov
decl
cmp
in
inc
incl
mov
pushl
sub
cmp
jae
in
jbe
sub
or
call
out
inc
incl
insb
pop
add
pushl
jmp
incl
mov
lret
stos
lret
test
xchg
leave
pop
das
sbb
mov
aad
dec
loopne
mov
sub
lcall
lock
insl
cmpxchg
mov
jmp
jmp
xchg
fdivrs
sub
jae
lcall
incl
dec
popf
inc
dec
push
or
cmp
decl
repnz
fisubs
ds
jl
push
popf
pop
dec
enter
xchg
fistpll
push
ljmp
cli
jecxz
stc
dec
jp
in
int3
jnp
clc
sbb
jmp
inc
mov
jb
incl
mov
sbb
ljmp
lcall
sbb
adc
mov
xor
imul
decl
pop
leave
fwait
dec
movsb
pusha
ljmp
xlat
int
call
lods
adc
jae
sbb
sbb
pop
add
cli
data16
cmp
or
in
mov
add
decl
mov
mov
lahf
int3
or
pushl
dec
aam
xchg
push
inc
std
jecxz
pop
and
xchg
push
xor
pushl
pushl
xchg
test
jnp
pop
mov
incl
lcall
cs
mov
jmp
scas
fisubrl
decl
xor
push
adc
pop
daa
jmp
inc
lcall
incl
add
jmp
call
lret
cli
jg
outsb
jmp
pushl
out
mov
incl
movsb
dec
cs
lcall
outsb
lods
mov
rcrl
lahf
fstpl
ss
cs
xchg
or
or
xlat
dec
stos
sarb
ljmp
sub
scas
mov
pushl
sbb
mov
xchg
out
test
xchg
xchg
push
cltd
decl
decl
push
incl
jmp
pushl
cmp
mov
dec
cltd
push
outsl
jo
incl
pushl
aam
arpl
lret
inc
pushl
pushl
dec
mov
sar
inc
pushl
push
pop
jecxz
push
popa
incl
mov
mov
mov
sahf
lahf
sub
dec
call
jge
ds
dec
insl
sub
jge
adc
jmp
push
inc
decl
fcmove
mov
mov
arpl
insb
das
cmp
jmp
mov
add
decl
jecxz
clc
lods
cmp
flds
not
cmp
mov
cltd
mov
lods
xor
push
in
ljmp
aad
jns,pn
call
xchg
lcall
filds
or
mov
divb
decl
js
ja
inc
jmp
mov
jmp
jno
dec
add
jno
adc
inc
jmp
inc
decl
incl
out
mov
mov
fcmovnbe
sbb
sub
lret
int3
add
pushl
xchg
xchg
add
decl
sub
pushl
dec
dec
mov
inc
call
fisttpll
lods
test
pop
dec
arpl
pushl
inc
lcall
jns
ficompl
mov
cmpsb
call
lcall
pop
push
adc
repz
push
int
test
fincstp
cmp
inc
decl
sahf
int
incl
lcall
in
sbb
call
aas
sbb
shll
add
insl
je
xor
incl
decl
sti
decl
mov
inc
jl
cld
inc
pushl
inc
ljmp
xchg
mov
xchg
cmp
jno
incl
mov
icebp
push
in
inc
decl
mov
push
fldcw
or
shll
push
inc
ljmp
call
or
mov
or
mov
incl
pushl
mov
cmp
push
jl
lea
adc
and
lret
pushl
decl
and
dec
cs
jmp
pushl
sub
mov
call
mov
cltd
mov
jge
inc
ljmp
push
arpl
push
adc
mov
inc
ljmp
add
incl
mov
jmp
cwtl
lcall
fwait
mov
add
lfs
jp
mov
push
mov
jle
decl
call
nop
mov
mov
jmp
mov
xchg
test
jmp
xor
dec
leave
frstor
dec
mov
lock
mov
push
rorl
and
loop
and
push
cmp
ja
lcall
cmp
ss
in
cmp
xchg
mov
sbb
pop
jp
fdivs
cmpsl
call
ljmp
pushf
test
popa
decl
nop
jg
call
aaa
jo
incl
dec
inc
call
push
mov
daa
inc
decl
and
mov
and
mov
dec
and
scas
aas
ret
ljmp
stos
mov
in
sub
lods
sub
cld
ss
xor
movsl
clc
push
add
lcall
dec
fadds
stos
dec
sub
call
fisubl
pop
dec
push
pop
ljmp
lods
adc
jmp
pusha
lcall
inc
ljmp
repz
jp
outsl
cmp
jb
mov
cmp
incl
ss
popf
fnstsw
mov
leave
das
jmp
ljmp
psubb
or
clc
sbb
mov
xchg
jo
pushl
in
out
incl
decl
adc
xchg
negb
xlat
dec
lcallw
push
aam
add
incl
decl
sub
or
imul
out
or
jmp
stos
ljmp
insl
stc
or
pop
int
pop
cmp
leave
mov
xchg
cltd
imul
push
lret
incl
sub
lret
pop
xchg
mov
incl
pushl
and
xchg
sbb
stc
jl
lcall
jmp
cmp
call
sub
adc
lcall
or
sbb
add
mov
push
or
jmp
cmp
cltd
dec
cmp
ds
dec
cmpsl
pushl
ljmp
out
mov
cmp
lcall
int
ljmp
mov
fists
insl
or
add
mov
ljmp
cmpsl
lcall
inc
lcall
jne
push
repz
int
cmp
incl
lcall
jge
adc
loope
push
cli
xchg
aad
jnp
fs
cmp
cmp
loope
test
sbb
incl
call
pop
call
xchg
adc
pushl
ds
aad
incl
push
jecxz
pushf
or
push
sub
jnp
lcall
sti
push
pop
lahf
or
incl
mov
sub
call
inc
inc
cltd
pop
ljmp
lcall
out
jg
decl
dec
mov
dec
push
push
mov
fs
mov
out
or
loopne
mov
jle
xchg
repz
lcall
je
sbb
dec
inc
fimuls
mov
stc
ret
call
xor
push
in
pop
jbe
jl
je
push
dec
xor
jg
cmc
sub
sar
out
movsl
lcall
mov
aam
and
push
push
or
jmp
ljmp
dec
test
popf
adc
xchg
ret
jmp
call
cmp
lcall
mov
inc
incl
add
pushl
decl
enter
mov
cmp
mov
and
push
adc
jmp
mov
ljmp
jb
lcall
mov
sar
aaa
push
call
add
pushl
enter
pushf
jg
in
inc
dec
lock
hlt
fisubs
inc
decl
ja
and
lahf
ret
decl
ds
jle
lcall
jno
cmp
shlb
or
dec
repz
xchg
jecxz
inc
dec
aam
push
loopne
jmp
or
pusha
incl
push
aad
jp
fsubrs
cmp
leave
sub
aad
jnp
decl
push
jmp
ret
ljmp
inc
lcall
std
jnp
push
xchg
ret
test
dec
lock
jmp
push
outsb
pop
add
call
out
cmp
sti
dec
outsl
adc
mov
inc
pushl
jge
jecxz
jns
ljmp
cmpsb
decl
lahf
inc
fdivs
and
sub
jl
adc
inc
ljmp
cwtl
gs
decl
insl
in
and
fwait
popa
pushl
inc
fisttpl
aaa
popf
push
adc
decl
xor
fisubl
xchg
stos
jbe
push
inc
jge
test
ret
pushl
lcall
mov
sbb
ljmp
pushl
ljmp
inc
decl
inc
incl
push
jo
adc
arpl
dec
sbb
dec
sar
or
rcrl
jp
mov
pop
sub
call
dec
inc
decl
mov
insb
mov
es
filds
insb
mov
leave
xlat
lock
xchg
popl
dec
lret
in
jns
cmp
adc
sub
call
dec
mov
jmp
dec
adc
call
dec
mov
push
dec
shlb
sub
fildl
js
incl
inc
lcall
std
test
pop
push
pop
sahf
repz
mov
jg
stos
cltd
add
lcall
dec
add
incl
cmp
sbb
sbb
mov
inc
jmp
filds
icebp
sub
pop
xor
pop
stc
imul
stc
mov
test
insb
sub
fwait
push
push
push
push
incb
fldcw
mov
cli
push
push
xchg
std
fbstp
testl
mov
incl
outsb
fldt
mov
test
cld
xor
leave
sub
int
xchg
inc
jmp
jmp
popf
adc
pop
adc
dec
sbb
mov
decl
push
loopne
insl
cwtl
mov
lea
cmp
jmp
call
jge
inc
push
cwtl
gs
jmp
pushl
xchg
lret
stos
xor
lret
and
mov
adc
incl
sub
sar
mov
ljmp
or
pushl
ljmp
jge
push
or
imul
incl
mov
jbe
call
inc
pushl
clc
xor
lahf
xor
ljmp
dec
cmpsl
pushl
mov
mov
icebp
cld
jmp
decl
aas
das
sub
aaa
not
push
or
dec
add
mov
add
lcall
clc
test
fisubs
mov
xor
jne,pn
jp
jmp
movsb
call
mov
xchg
in
fs
mov
in
push
das
mov
mov
inc
lcall
rol
jmp
cmp
call
xchg
ficoms
inc
out
adc
add
push
cld
adc
incl
decl
lret
stc
mov
fstp
jle
xlat
push
std
fneni(8087
pushl
js
sbb
enter
sbb
decl
cmp
call
loopne
lret
scas
in
push
loope
call
inc
lcall
daa
in
mov
ficompl
lret
aas
jl
pushf
pop
and
or
stos
mov
incw
lcall
aaa
and
arpl
cwtl
ds
push
out
dec
into
and
push
push
mov
mov
cmp
xchg
jbe
flds
and
xor
rcll
fwait
jae
inc
ljmp
push
mov
mov
cmp
xchg
fwait
sbb
call
xor
jmp
faddl
ljmp
push
dec
inc
mov
push
jl
in
cld
add
jmp
scas
js
xchg
daa
fstpl
jp
cld
call
call
incl
clc
mov
mov
ljmp
out
mov
jle
lret
pusha
call
mov
sbb
imul
or
jl
aaa
xchg
std
fildl
mov
dec
mov
inc
call
aam
jmp
pusha
jmp
and
and
jb
xor
decl
lcall
incl
aas
repz
pop
dec
icebp
mov
cmp
decl
incl
jno
cs
scas
or
jnp
push
mov
or
cli
push
jmp
xchg
xchg
mov
incl
jmp
in
sub
fs
stc
in
fwait
jmp
push
mov
sub
cmp
jmp
cwtl
fwait
aaa
pop
jle
or
stc
pop
add
lcall
in
add
lcall
cmp
aad
ja
sbb
or
lahf
ds
lcall
arpl
add
out
test
jbe
je
mov
jge
mov
cs
adc
or
xor
call
popa
lcall
out
stos
insb
sti
decb
mov
mov
mov
push
ljmp
jmp
fsts
inc
inc
pushl
and
scas
mov
incl
push
add
jg
lock
mov
xchg
loop
rcl
sbb
pop
outsb
mov
outsb
cmp
jge
pushl
fisubrl
ljmp
call
and
mov
pusha
lcall
inc
call
xchg
cmp
jbe
pop
or
pushl
fstpt
pop
mov
pop
out
out
shrl
adc
pop
dec
sub
call
add
mov
incl
push
insb
xchg
out
sbb
aas
mov
test
decl
jle
sub
add
in
dec
cmp
push
inc
incl
pop
shr
push
mov
cmp
in
lcall
popa
call
sbb
inc
jmp
incl
cld
sti
mov
push
fsubr
add
call
pop
nop
inc
incl
sar
insl
in
fstps
or
ja
or
jle
push
sbb
mov
out
inc
ljmp
js
mov
fimuls
mov
ljmp
jns
cmp
inc
incl
cmp
inc
inc
incl
mov
push
ja
pushf
js
sti
cmp
cmpsb
pushl
outsb
out
mov
insb
pop
sbb
cmp
mov
jmp
call
mov
cmp
mov
imul
mov
sar
add
pushl
sub
mov
mov
incl
jmp
in
dec
sbb
call
aaa
jnp
test
imul
push
mov
jle
inc
ljmp
inc
cmp
aad
cmc
mov
dec
jl
lcall
punpckhbw
cli
push
aaa
test
repnz
jnp
dec
and
test
jo
shll
xchg
lcall
inc
jmp
mov
sbb
xchg
xchg
and
push
jle
push
enter
mov
inc
pushl
or
push
add
ljmp
mull
mov
adc
shll
decl
clc
test
outsb
adc
call
and
mov
sahf
sub
pop
ret
and
fsts
push
xchg
stos
test
jg
mov
cmp
mov
xor
loope
adc
ljmp
decl
and
in
or
pushl
jmp
jmp
jb
inc
incl
mov
push
mov
pushl
dec
in
pop
mov
jle
xchg
ds
ds
out
clc
in
mov
xor
in
sar
jmp
pop
loop
xchg
inc
fimuls
aam
jp
ljmp
vcvtsd2ss
fidivl
je
push
dec
jno
mov
lret
jmp
pop
fsub
incl
xchg
adc
mov
jns
adc
sar
out
dec
cmp
lods
sub
jecxz
ljmp
mov
decl
aaa
sbb
push
mov
xchg
mov
mov
out
call
xchg
stc
jae
adc
ja
lcall
lret
imul
call
js
decl
mov
call
xrelease
mov
dec
push
arpl
movsb
lcall
in
testb
lcall
out
imul
arpl
lahf
fmull
call
mov
mov
pop
rorl
pop
call
and
push
test
xor
jb
sub
jmp
lcall
inc
call
push
mov
aas
push
dec
out
adc
stos
adc
ljmp
ljmp
mov
xchg
stc
jno
in
call
call
clc
sti
daa
js
jbe
das
out
cmp
add
pushl
mov
dec
test
jg
incl
ljmp
sub
bnd
shll
lcall
ljmp
pop
enter
mov
lcall
in
or
ljmp
and
sar
sub
ljmp
sar
xchg
or
dec
rcll
movsl
decl
mov
int
aas
jle
mov
fwait
in
sub
cli
repz
mov
pop
lods
imul
jmp
xchg
push
mov
popf
stos
jno
pop
aam
enter
xchg
push
add
push
mov
call
adc
ljmp
push
decb
fidivrs
fnsave
fcmovnb
push
jns
fwait
lret
xchg
push
and
jne
jmp
jp
enter
test
call
incl
push
js
push
xor
jb
jbe
pop
xor
or
sahf
out
push
cltd
cmpsl
call
push
lock
mov
lods
xchg
cltd
outsb
xchg
adc
jno
cli
push
xlat
mov
pushl
pop
or
aad
inc
mov
lret
pop
adc
jmp
inc
ljmp
pushl
add
push
daa
ljmp
cld
aaa
aad
pushl
jae
and
jg
sahf
jecxz
out
cli
xor
sar
push
incl
dec
nopl
pop
sub
xchg
add
call
mov
call
and
das
inc
pushl
loop
mov
std
mov
in
arpl
outsb
mov
outsb
cmpsl
mov
into
ljmp
fld
incl
cmp
fincstp
jecxz
xchg
in
pop
mov
js
mull
movsb
pushl
outsb
lock
aad
xlat
cs
sbb
ds
jle
mov
dec
pop
pushf
inc
pushl
inc
std
xchg
insb
movsb
call
mov
jns
or
ljmp
push
pop
mov
mov
jb
mov
ret
call
or
or
inc
jmp
push
xor
fsubl
mov
fbld
and
or
out
and
lret
test
push
lea
ljmp
stos
inc
call
jae
mov
lcall
stos
pop
and
cmp
jne
lea
xor
and
iret
lods
lods
cmc
test
xchg
xor
int3
cmp
loop
pop
pop
sarb
nop
insb
xchg
movsl
cmp
pop
sbb
mov
incl
fmulp
iret
ljmp
and
fidivl
aam
in
jns
stc
add
decl
dec
insl
cltd
mov
sbb
xchg
pop
inc
jmp
pushl
push
jle
inc
ljmp
aad
mov
push
dec
mov
mov
incl
lahf
xor
insl
negl
daa
decl
lcall
add
jmp
lret
mov
mov
sub
ret
pushl
dec
adc
in
xchg
xchg
decl
not
fadd
incl
out
lahf
add
jmp
dec
xlat
ds
and
mov
push
push
dec
pop
cmpsb
jmp
das
mov
lcall
mov
fsubrs
decl
fdivl
mov
sub
stc
rol
call
cmpsb
ljmp
xchg
shlb
call
ss
xchg
popa
call
lcall
jmp
push
sub
xchg
dec
insb
sub
decl
jne
fwait
loopne
cmp
jnp
scas
sub
into
mov
ljmp
push
mov
not
pusha
inc
inc
incl
mov
push
decl
sbb
sbb
lock
or
mov
shll
call
inc
call
inc
pushl
jae
push
incl
inc
mov
pop
inc
dec
push
decl
mov
mov
pushl
lcall
lcall
ret
cmp
jecxz
xor
testb
imul
xchg
imul
cmp
adc
decl
xchg
and
cli
pushf
pop
out
xor
incl
inc
decl
dec
aaa
scas
and
jmp
call
fcomps
cld
cmp
test
lcall
push
push
fisttpll
pushl
int
or
jnp
je
call
iret
and
sub
jecxz
push
pop
dec
repnz
popa
lcall
dec
mov
popa
dec
dec
xchg
or
imulb
push
cmp
push
hlt
push
stos
pop
add
pop
test
dec
in
fwait
shlb
test
cmp
jmp
call
fs
cmpsl
jmp
movsl
jmp
incl
scas
mov
lcall
lcall
dec
sar
stc
std
icebp
jg
lcall
data16
jge
mov
dec
test
jle
adc
shll
insb
dec
cmp
fiaddl
lcall
mov
cmp
fidivl
outsl
jg
std
ret
pushl
decl
movsl
jmp
xchg
icebp
mov
jmp
jo
push
or
pop
adc
push
fcmovnbe
out
add
call
stos
int3
sub
daa
ds
decl
sub
decl
mov
cmp
loop
mov
dec
js
mov
mov
out
pusha
jmp
pop
ljmp
call
push
fsubl
dec
cwtl
push
ja
jge
pushl
das
inc
call
mov
add
decl
jl
push
cld
push
push
fnstcw
pop
test
arpl
mov
jle
cs
push
sbb
add
jmp
test
xor
hlt
xor
cmp
jmp
call
dec
icebp
out
addr16
fmulp
js
push
sbb
fisttpll
lock
cmp
popa
incl
pushl
push
sub
sub
ljmp
dec
call
mov
shlb
dec
mov
inc
lcall
call
shrb
lods
in
outsl
cmp
call
into
push
cltd
lcall
js
enter
decl
mov
sub
div
cli
iret
popa
ljmp
xchg
jae
xchg
aas
push
push
dec
mov
cld
js
dec
xchg
ret
pushl
mov
loop
pop
mov
push
inc
cli
dec
ss
dec
push
push
scas
or
hlt
adc
pop
imul
test
scas
hlt
push
mov
outsb
and
call
frstor
imul
fstpt
mov
jl
ljmp
jmp
xchg
sar
cmc
jmp
sbb
sub
mov
pushl
aas
mov
jmp
call
rcrb
in
imul
pop
jmp
jg
dec
mov
faddl
mov
jnp
clc
outsl
scas
das
xor
and
add
pushl
inc
lcall
lcall
ret
ljmp
pushf
jge
pop
out
pop
xor
xor
pop
push
jnp
xor
outsb
fisubrs
stos
jne
test
and
test
int3
aaa
and
lock
cltd
ret
mov
cmp
pop
fistl
mov
insl
dec
add
jmp
ljmp
xchg
jmp
inc
jle
xor
stc
or
clc
sub
cmp
mov
add
push
mov
ret
incl
cmp
decl
clc
jno
adc
push
mov
mov
mov
cmp
mov
rcr
clc
pusha
call
popf
cmp
call
aas
jnp
lret
push
push
sbb
call
dec
sub
ljmp
mov
aaa
sub
cmp
sbb
ljmp
push
adc
jno
pushl
mov
mov
je
pop
jg
imul
outsl
dec
hlt
cmc
cmp
add
in
pushf
sub
int
jmp
xchg
out
daa
jmp
xchg
xor
out
xchg
ficompl
test
dec
roll
fcom
jecxz
pop
and
or
dec
push
inc
in
pop
sbb
xor
push
mov
aam
movsl
pushl
jmp
push
pop
mov
adc
jno
adc
fiadds
cmp
push
fbld
sar
ds
fwait
jmp
jmp
decl
pushf
xchg
lret
mov
sub
lcall
and
sar
cli
push
incl
mov
fsubrp
ror
mov
cmp
imul
shl
jl
aas
push
push
sbb
pop
incl
call
jae
cmpsb
inc
jmp
call
and
jmp
jmp
decl
xor
mov
ljmp
fisubrl
pushl
loop
adc
call
cs
cs
rcr
faddp
decl
jl
ljmp
sar
xor
stc
popa
pushl
decl
dec
mov
jmp
outsl
and
incl
adc
insb
cwtl
sbb
pop
cltd
in
cltd
mov
push
add
das
mov
jmp
insl
clc
test
repz
outsl
fists
jns
jmp
ret
jmp
xchg
idivb
pop
stc
mov
and
and
ret
sbb
decl
xchg
adc
jno
pushl
cli
out
loopne
pop
sti
jns
xchg
scas
call
outsb
push
lock
pop
adc
dec
and
mov
ljmp
test
fsubrs
inc
ljmp
aas
mov
incl
lcall
scas
loop
insb
lahf
popf
mov
mov
xchg
fcmovb
decl
outsb
push
xchg
jno
jbe
push
lahf
movsl
incl
or
sahf
je
inc
lcall
leave
xlat
jle
push
mov
incl
jmp
aas
jb
std
into
inc
inc
incl
incl
decl
clc
loopne
fstpl
rcrb
push
lcall
xchg
outsl
inc
jns
mov
ds
lcall
mov
out
cs
decl
sbb
ljmp
dec
mov
sbb
decl
sar
test
sbb
je
jp
in
cs
sub
enter
ljmp
enter
clc
add
jge
lcall
sbb
ljmp
lcall
sub
std
pop
data16
jg
add
pushl
insb
pop
cmpps
dec
insb
ja
cmp
xchg
cmp
call
cli
add
jmp
lea
xor
pop
fmulp
sti
dec
loopne
mov
std
lahf
loope
hlt
cmp
stos
insl
sub
mov
adc
dec
test
sub
sbb
decl
sub
scas
into
xchg
mov
xor
sahf
fdivrl
xchg
xchg
cmpsl
jmp
loop
push
sub
inc
decl
jmpw
push
dec
dec
mov
xchg
fistpll
dec
out
loopne
add
cmp
decl
cmp
push
jmp
mov
incl
incl
decl
ja
decl
mov
lcall
or
ljmp
das
fldenv
inc
lcall
cmp
jb
jmp
jmp
jmp
incl
je
call
enter
jmp
lcall
inc
ljmp
mov
call
pop
call
mov
cmpsl
incl
inc
inc
incl
jg
imul
lcall
xor
ljmp
cltd
jb
mov
jmp
cmp
lcall
push
ss
jmp
cwtl
adc
loop
adc
out
inc
ljmp
mov
mov
lcall
dec
cmp
daa
push
test
xor
push
xchg
out
dec
add
jl
lcall
pop
cmp
mov
inc
push
dec
outsb
test
dec
mov
mov
mov
cmp
incl
jmp
jmp
out
mov
mov
ljmp
adc
xchg
cmc
jl
out
outsb
or
xlat
loop
jmp
out
fisttps
or
mov
jge
imul
dec
mov
lods
xchg
fmull
imul
call
cmp
decl
pop
stc
das
movsb
pushl
mov
dec
adc
inc
push
lea
pop
and
inc
decl
cld
mov
pop
add
decl
call
dec
sbb
xlat
jg
decl
mov
ss
lea
pop
sub
paddsw
ljmp
mov
inc
std
dec
or
div
pop
es
cmp
lcall
xchg
test
jge
call
add
aas
pusha
lcall
cmp
mov
divb
decl
inc
decl
fmulp
push
pop
xchg
inc
jge
mov
incl
adc
or
ret
jmp
pushl
ret
jmp
dec
push
pop
dec
mov
mov
aam
mov
jecxz
lret
push
lea
cmp
das
sbb
jae
call
mov
push
mov
in
fisubrl
test
add
decl
idivb
mov
inc
dec
push
mov
mov
pop
repz
call
mov
call
inc
incl
pop
aam
sbb
int
jb
and
inc
jmp
incl
daa
ljmp
and
repnz
inc
mov
in
arpl
cld
mov
dec
mov
sub
xchg
in
in
pop
mov
decl
sbb
cmp
decl
lcall
pop
sub
cmp
push
inc
incl
cmp
shl
mov
ljmp
lcall
loopne
flds
mov
inc
call
and
mov
decl
jb
or
sbb
icebp
inc
push
pop
test
inc
jmp
call
push
movsl
lcall
sbb
cmp
sar
pop
pop
jp
xor
jmp
xchg
outsb
fwait
inc
lcall
cmp
lcall
call
hlt
inc
decl
mov
jnp
sbb
ljmp
incl
add
sbb
push
fsubrl
mov
add
xor
jae
sbb
ds
mov
ljmp
loopne
cmp
lcall
add
call
leave
dec
in
int
cmpsl
ljmp
jmp
mov
mov
ret
call
incl
sub
cmp
loop
repnz
xchg
lret
pmulhw
adc
divl
popa
incl
repz
adc
jp
cmp
jecxz
fsubp
ljmp
lcall
fldenv
rol
jmp
nop
push
enter
jmp
decl
hlt
icebp
pop
insl
roll
jmp
icebp
ds
add
pushl
push
cmp
sbb
cmp
sbb
call
fwait
push
ret
call
rcrb
ljmp
das
push
sub
test
imul
lock
sar
xor
push
scas
inc
js
xchg
pushl
mov
jmp
lcall
or
lcall
add
inc
call
dec
sbb
jecxz
or
cli
jl
fistl
aaa
cmp
push
incb
popa
dec
fsubs
ds
jmp
jmp
xor
cli
in
in
mov
seta
mov
ljmp
push
xor
push
pop
jg
arpl
push
xor
scas
mov
and
mov
push
push
cmp
incb
lret
xchg
cmp
xchg
loop
sub
pop
out
lret
push
sub
adc
jmp
cs
movsb
decl
aas
inc
ljmp
loopne
movsl
lcall
ljmp
xor
lahf
lods
pop
sahf
adc
insl
mov
aad
pop
sar
lea
call
jnp
adc
cmpsb
ljmp
push
adc
lcall
jmp
mov
cld
out
pop
sar
mov
mov
push
mov
adc
ljmpw
add
xchg
ja
repz
mov
push
repnz
jmp
decl
mov
in
sahf
icebp
pushf
adc
xchg
jg
mov
jae
aad
ja
aaa
xor
inc
pushl
decl
call
nop
test
adc
jmp
ljmp
push
jge
incl
and
jg
movsb
call
int3
dec
aad
pushl
dec
decw
xchg
mov
adc
sub
popa
pushl
ret
pusha
incl
mov
test
lcall
pop
call
push
or
jmp
lcall
das
cmc
adc
call
sub
jmp
ljmp
movsl
adc
sbb
jmp
mov
sbb
sbb
incl
scas
lret
arpl
hlt
popa
jmp
imul
sti
negl
mov
xlat
sub
jmp
jmp
leave
inc
fmul
xor
adc
das
insb
and
cmc
jbe
add
ljmp
cmp
jmp
mov
loopne
stc
dec
lods
stos
xchg
xchg
std
pop
dec
repz
call
push
nop
pop
mov
pop
sar
sub
sti
lahf
mov
sbb
lcall
xor
xor
call
or
jno
jbe
jmp
call
cmp
testl
inc
ljmp
pop
sti
xlat
jg
sub
cld
nop
jecxz
int3
xor
shr
add
jmp
sbb
int
repnz
pusha
jmp
decl
xor
mov
adc
push
sub
mov
inc
faddl
popa
inc
jmp
ljmp
mov
fdiv
push
movsl
jmp
call
mov
out
xor
in
test
movsb
lcall
int3
dec
jp
incl
scas
pop
adc
dec
test
xchg
or
ljmp
call
pop
int
pop
inc
pushl
add
decl
decl
dec
xlat
lods
push
pop
cwtl
out
repnz
and
cld
lods
mov
leave
sbb
push
daa
incl
adc
inc
fstp
jae
lcall
pushl
jno
clc
jae
lods
dec
dec
cwtl
jb
pop
push
sub
push
lock
sbb
cld
add
jp
pushl
ljmp
out
je
incl
sub
mov
in
in
jne
mov
out
push
push
cmp
fcmovbe
inc
lcall
cmp
fists
out
movsl
lcall
add
sti
push
adc
sbb
pop
pusha
pushl
in
stc
out
mov
dec
inc
lcall
push
jns
xchg
mov
std
dec
imul
cwtl
outsl
ror
inc
jmp
lcall
push
lods
nop
sub
add
pushl
ret
ds
mov
out
sbb
adc
dec
adc
call
sub
cld
gs
cmpsl
pushl
leave
jmpw
decl
clc
iret
pusha
call
inc
filds
leave
cmp
pusha
pushl
lods
inc
filds
call
cmp
xchg
add
incl
popa
fidivs
idivl
pushl
jmp
ljmp
daa
cmp
mov
lahf
das
push
daa
incl
sub
mov
lret
sub
jle
out
sbb
adc
mov
sub
inc
fnsave
pop
or
cmp
lret
jno
jmp
call
stos
adc
dec
sbb
jns
xchg
scas
lcall
lea
push
mov
jbe
test
cmpsb
incl
xchg
jo
xchg
mov
mov
ljmp
adc
popf
fdivp
imul
decl
cmpsb
jp
inc
fld
pushl
cmp
or
faddl
ljmp
pusha
call
cmp
pop
rolb
sbb
push
decl
cmpsb
decl
xor
sub
push
pop
clc
outsl
stos
sbb
fwait
xlat
inc
lcall
leave
inc
jmp
mov
cld
loop
jns
stc
and
inc
call
mov
std
push
fdivl
add
lcall
fisttpll
push
push
jmp
call
jbe
filds
mov
movsl
mov
call
and
fistps
popf
dec
xor
movsl
mov
rep
es
and
add
jmp
in
jnp
pop
pop
gs
std
js
pop
xchg
adc
dec
jns
push
jnp
jmp
lcall
in
in
adc
xor
mov
jecxz
sub
enter
mov
into
icebp
mov
iret
ds
incl
int3
cmp
jmp
call
mov
cmp
inc
incl
loop
cmc
mov
cmp
pushl
loope
mov
call
insl
push
clc
xchg
adc
out
pop
sbb
sub
cmp
adc
test
loop
mov
xor
test
fwait
cmp
test
loopne
mov
jns
pushl
xchg
mov
into
cwtl
callw
jns
incl
cmp
mov
out
mov
dec
fwait
test
and
add
dec
test
cmp
stos
adc
sti
jnp
lcall
out
in
sti
dec
ficompl
push
lret
add
pushl
inc
ljmp
mov
dec
stos
push
in
push
sub
lcall
jmp
lcall
xchg
add
incl
stc
lock
inc
lcall
pushl
pushl
pushl
movsl
ljmp
das
cmp
aam
xchg
fmuls
out
mov
out
sub
out
lods
lods
push
pushl
jg
and
mov
and
cmp
pushl
popf
movsb
lcall
lret
mov
fucomp
cmp
outsb
outsl
fwait
pop
popf
rcrl
data16
out
add
aaa
pop
mov
sub
jns
aam
pushl
aaa
add
jge
call
clc
movsb
incb
pushl
mov
rep
sbb
test
mov
sar
push
vcvttsd2si
sub
call
sahf
pop
cmp
xchg
ret
into
xor
dec
lret
sub
call
test
inc
jmp
jg
or
decl
lret
aad
ds
test
pop
mov
in
imul
mov
pushl
incl
pop
inc
jmp
ljmp
add
mov
lcall
dec
push
fmulp
mov
in
sub
mov
fiaddl
daa
incl
outsl
adc
iret
mov
pushl
mov
pusha
incl
decl
mov
mull
xor
cmp
imul
lcall
xchg
outsl
lock
test
xchg
add
jmp
jns
xlat
mov
jmpw
mov
int
adc
add
decl
inc
jmp
jecxz
mov
adc
push
mov
jge
dec
push
mov
ljmp
daa
jmp
repnz
addr16
cmp
aaa
push
add
decl
jmp
lcall
jl
call
jp
movsb
call
fdivp
lret
jne
lcall
sti
dec
repz
inc
dec
sbb
jne
sbb
lods
mov
sub
adc
cld
or
stos
outsl
sub
decl
in
scas
mov
xor
pop
fistpl
movsb
jmp
cmp
xor
add
call
and
adc
decl
ds
decl
jmp
sbb
sub
rcl
or
sbb
jecxz
jl
cld
fdivs
incl
cmp
mov
sarb
mov
incl
xor
ljmp
sub
xchg
incl
jg
or
push
cmp
decl
sbb
adc
adc
icebp
mov
push
inc
incl
xchg
jmp
pop
decl
repnz
adc
incl
jmp
fwait
cmp
cmp
push
lods
rorb
mov
call
pushl
popa
lcall
push
mov
stc
test
jecxz
inc
incl
insb
inc
lcall
jge
or
push
pushl
jmp
out
insl
out
lret
jg
test
mov
idivl
test
jne
sub
mov
aam
pop
push
inc
call
shll
cmp
jmp
mov
mov
call
es
jg
ja
sub
decl
ljmp
add
call
adc
inc
lcall
pop
dec
ljmp
pop
leave
and
aam
xchg
and
jle
loope
loope
pop
xor
test
jecxz
jb
cs
mov
ljmp
xor
pop
pop
and
iret
add
incl
ljmp
mov
aas
ljmp
in
std
pop
inc
ljmp
sbb
lea
or
sbb
mov
cmp
mov
stos
sub
push
lods
addr16
sub
scas
inc
pushl
mov
or
ljmp
cmpsl
call
decl
jmp
call
call
fdiv
xor
enter
dec
mov
sti
xchg
jns
dec
or
inc
decl
decl
dec
inc
ljmp
lcall
dec
xchg
jae
cmp
adc
mov
dec
ljmp
loope
pop
dec
pop
fxch
mov
fistl
daa
dec
xor
pop
or
pop
loope
push
jnp
cmp
decl
ret
call
cmp
xor
aaa
push
sahf
outsb
into
rcl
sahf
sar
in
push
or
and
outsb
mov
shll
jmp
icebp
jecxz
inc
decl
in
dec
aam
jge
push
jge
lcall
xchg
jns
hlt
pop
cmpsl
ljmp
fld
fcmovnbe
push
pushl
dec
sti
and
mov
or
sahf
ljmp
mov
and
sar
xchg
push
xchg
jl
sub
mov
lret
stos
inc
decl
test
dec
pop
ss
ljmp
mov
incl
dec
cmpsb
inc
incl
shlb
cmpsl
fcompl
dec
jo
push
lret
insb
mov
jge
incl
aaa
jge
decl
xlat
jne
xchg
mov
testb
sbb
icebp
cmpsb
call
std
cmp
sub
pushl
lcall
mov
jmp
lcall
decl
test
gs
push
sub
mov
outsl
sar
cmpsb
push
decl
mov
sbb
mov
sbb
insb
test
call
test
add
inc
decl
push
mov
mov
das
dec
jae
call
inc
pushl
sub
pop
popf
push
xchg
sbb
test
mov
ljmp
cmp
pop
pop
out
ret
pushl
scas
cmc
sub
cmp
or
shll
dec
xor
or
ljmp
outsb
enter
xor
or
adc
test
xlat
adc
loope
scas
xor
pop
sar
sub
int3
insl
call
or
loopne
xor
out
mov
ljmp
ljmp
xchg
jle
js
jo
pop
out
mov
incl
aad
stos
pop
pusha
push
repnz
sbb
xor
outsb
test
jmp
jmp
pushl
loopne
ror
ret
jmp
rolb
hlt
pushf
decl
int
push
dec
sub
add
mov
mov
in
push
mov
push
insl
sbb
mov
decl
sar
jnp
push
mov
pushl
mov
mov
sub
ds
fcmovb
jmp
in
jge
jmp
jns
call
xor
cmc
or
hlt
fists
inc
lcall
insl
lcall
pop
add
inc
f2xm1
xchg
cmp
std
sub
call
inc
jmp
jmp
jmp
mov
outsl
lret
sbb
sbb
in
xor
and
fiaddl
jmp
jmp
mov
out
pushf
in
push
ret
clc
stos
sub
incl
out
outsb
sbb
mov
jnp
add
out
xchg
xchg
lods
fwait
pop
jo
add
inc
lcall
out
dec
jno
mov
mov
aam
rcll
mov
out
or
inc
jmp
mov
pushl
adc
pop
loope
mov
fadds
sahf
sub
jmp
cmpsb
pushl
incl
or
dec
nop
sub
fdiv
pop
jno
das
sub
out
nop
xor
mov
int
push
decl
ljmp
add
ljmp
sub
call
out
sbb
movsb
decl
pop
out
sbb
mov
and
ds
lcall
jmp
and
cmp
out
into
jmp
pushl
loope
xchg
test
stos
sub
pushl
cmp
fxch
pop
push
push
mov
push
in
ret
decl
call
push
movsl
push
sbb
ljmp
jmp
lcall
cmp
out
imul
std
xor
inc
push
mov
call
xchg
inc
mov
mov
lcall
aas
jnp
add
sahf
mov
jae
loope
add
call
lods
js
and
push
loop
movsb
in
xlat
mov
xor
pop
xchg
daa
incl
ds
pop
fsubl
jmp
out
lcall
cmpsl
clc
pushl
sub
int
or
jmp
mov
call
into
cmpsb
lcall
popl
adc
mov
insb
mov
std
mov
cltd
and
cmp
cmp
xchg
push
lods
sbb
push
sbb
call
inc
jmp
adc
fwait
inc
jmp
adc
lcall
mov
jne
dec
adc
sbb
call
loop
mov
fsts
gs
dec
fistl
xor
sahf
cmp
inc
dec
inc
fmull
inc
incl
mov
sub
std
cmp
jb
loope
add
pushl
decl
leave
js
push
xchg
cmp
mov
ja
fdivrp
repnz
fistps
cmp
jp
loope
test
jmp
xchg
sbb
call
sar
xchg
xchg
popf
sub
into
inc
cmp
incl
mov
repnz
adc
outsb
lret
out
ja
jmp
jmp
lcall
decl
xor
scas
push
loope
sbb
mov
xchg
push
cli
or
pop
jbe
test
lcall
lahf
ja
incl
shll
ljmp
push
inc
decl
sar
js
cmp
ljmp
arpl
sbb
dec
xchg
lret
loope
mov
test
pop
loop
test
aad
jns
enter
pop
call
call
pop
jmp
push
insb
ljmp
stc
or
jmp
rorb
fcmovne
scas
sahf
mov
aam
xlat
ja
mov
mov
adc
test
jb
mov
call
xchg
stos
rcl
cmp
add
push
inc
lcall
pushl
pushl
cmpsb
mov
cmp
pop
imul
sub
fwait
mov
mov
jbe
repz
decl
pushl
mov
decl
xlat
push
call
adc
and
jns
push
mov
out
dec
loope
hlt
int3
decb
jl
imul
icebp
sti
lret
clc
and
or
decl
aad
ja
dec
pop
xor
sbb
mov
mov
mov
lcall
scas
pusha
jmp
incl
aad
pop
aas
cmp
jge
jg
inc
lcall
ret
decl
repnz
or
call
pushl
incl
cmp
ret
inc
call
xor
push
fiaddl
pop
push
sbb
call
push
pushl
and
and
dec
decl
ljmp
incl
sbb
cmp
ds
jmp
lcall
add
incl
imul
nop
loop
out
div
mov
lcall
daa
incl
xor
cmp
decl
xlat
sar
ret
xchg
mov
jmp
pushl
push
push
psrld
incl
shr
push
sbb
popa
lcall
sub
arpl
aaa
sbb
add
call
or
xor
cmc
add
jmp
fcmove
out
add
dec
xchg
and
or
or
fpatan
std
inc
pushl
lcall
add
jb
in
ljmp
dec
in
mov
cmpsb
ljmp
out
cmp
ret
icebp
leave
mov
lahf
ds
xor
pop
lods
lock
loope
pop
shr
fists
pushf
xchg
shlb
or
sub
adc
call
pop
xor
call
movsl
incl
jmp
jmp
call
cmpsl
incl
cmp
lods
sti
cmp
lret
sub
incl
sub
ficoms
adc
jmp
stos
lcall
jmpw
lcall
mov
jmp
jmp
pushl
pop
out
imul
sub
pushl
decl
rep
adc
movsl
inc
cmp
out
ljmp
cld
popl
icebp
pop
ljmp
ds
pop
arpl
push
mov
loop
add
jns
jp
jns
out
test
inc
cmp
aaa
das
and
mov
mov
and
rcrb
nop
enter
loop
cmp
pop
fsubrs
in
push
cwtl
dec
out
lahf
adc
inc
push
lcallw
jae
and
cmp
ss
sar
xchg
je
lret
push
lock
cmp
cmp
jnp
call
sarb
call
adc
dec
outsl
stos
dec
icebp
sub
decl
inc
pushl
call
pop
imulb
decl
lret
mov
lcall
push
ljmp
fidivs
mov
enter
jmp
inc
call
sub
in
push
cmp
and
fcoml
push
jmp
fidivrl
cltd
push
cmc
in
cmp
incl
jmp
cmp
jno
mov
jno
roll
xchg
dec
leave
pop
sub
int3
insb
cmp
jmp
jns
je
pusha
pushl
xchg
mov
push
xor
stos
rcll
jmp
sar
dec
notl
pop
sbb
jbe
push
lcall
jne
pushl
call
fdivrl
cmp
sahf
jmp
arpl
div
or
int3
dec
xchg
mov
pushl
out
xchg
adc
jmp
decl
out
dec
aas
leave
jno
ljmp
stos
sub
js
mov
cmp
lret
mov
flds
jl
ds
jmp
cmp
daa
call
incb
lcall
pop
pop
dec
scas
mov
cmp
and
or
incl
mov
adc
dec
adc
test
push
xchg
sahf
cmp
ja
xor
mov
push
add
call
and
push
and
sbb
push
and
decl
iret
inc
lcall
lcall
mov
je
dec
pusha
lcall
pusha
inc
ljmp
xchg
shrl
lcall
dec
das
test
pushl
daa
pushl
mov
es
cmp
jmp
jle
and
push
imul
cld
movsl
push
sbb
pushl
leave
fsubr
inc
lcall
sbb
inc
fidivs
cmp
popa
dec
sub
icebp
lea
mov
pushl
mov
incl
outsb
push
test
cmp
cs
jns
xchg
test
popf
ljmp
ljmp
xlat
jmp
pushl
in
jg
jmp
adc
xor
xchg
add
incl
enter
jmp
adc
sub
mov
adc
mov
maxps
xchg
cwtl
imul
and
mov
mov
dec
cmp
mov
lea
adc
sub
xchg
mov
sub
lcall
cmp
and
xor
fmuls
lcall
jmp
dec
xor
fdivr
mov
push
adc
jecxz
sub
ljmp
sub
mov
lret
sbb
sub
aas
lcall
push
xor
in
cli
popa
jmp
inc
cmp
lcall
ret
aam
dec
cmpsl
in
fwait
pop
pushl
popf
cmp
mov
mov
push
ljmp
inc
ljmp
in
call
fisttpll
aad
sub
ljmp
je
in
adc
push
dec
jmp
jmp
mov
mov
inc
incl
cld
test
pushl
and
nop
xchg
hlt
push
vpshuflw
lcall
or
incl
decl
cmp
push
lods
rcrb
icebp
push
fwait
xor
insl
mov
pushl
xchg
int
into
fildl
xchg
mov
jmp
aam
scas
xchg
cmpsl
call
xor
out
lcall
jmpw
imul
sub
incl
repz
push
rorb
rcll
jae
cmp
je
leave
xor
leave
mov
daa
pushl
jmp
je
xor
cmp
test
int3
stc
inc
dec
cmp
and
imul
cmp
aad
test
push
mov
adc
xchg
jbe
ljmp
out
sbb
ljmp
mov
incl
lcall
and
xchg
aas
pop
repnz
xchg
cmp
pushl
adc
sub
rcrl
stos
imul
adc
jl
push
xchg
psrad
pop
das
or
sti
cmp
decw
mov
jl
pop
push
pop
xor
ljmp
in
cmp
jecxz
xchg
lea
mov
sbb
mov
mov
push
fnsave
mov
mov
inc
call
jmp
insl
je
cmp
callw
repnz
incl
lcall
adc
inc
ljmp
sub
mov
dec
cmpsb
incl
mov
pop
or
adc
stc
cmp
cmp
in
or
cli
mov
add
ljmp
repnz
call
insb
and
mul
call
mov
incl
mov
into
lret
aaa
jecxz
dec
cld
pop
sbb
push
aad
cmp
mov
pushl
inc
jmp
incl
push
mulb
test
jecxz
jp
xchg
icebp
jmpw
decl
xchg
decl
push
push
or
mov
pop
sbb
decl
xor
out
mov
xor
jg
jmp
cmp
cmpsl
call
jge
jne
aas
insl
test
and
sti
lcall
inc
pushl
mov
das
adc
daa
call
stos
sub
jbe
cmp
inc
pushl
push
lods
xor
cwtl
in
jmp
mov
cmpsb
pushl
sbb
repnz
inc
ljmp
lcall
movsb
incl
test
repz
mov
nop
shlb
add
ljmp
std
aas
sub
push
sub
test
and
add
jp
incl
cld
xchg
push
push
cwtl
leave
lcall
mov
and
add
incl
xchg
out
inc
jmp
jmp
mov
push
pop
ret
ljmp
jae
fimull
cmpsb
call
ljmp
call
into
or
inc
ljmp
pop
adc
push
mov
decl
loope
hlt
aam
cmp
fwait
in
inc
call
adc
ljmp
mov
dec
call
sbb
int
call
sub
rcr
pushf
inc
call
repnz
sti
rcl
fisttpl
or
push
or
seto
inc
lcall
pushf
nop
dec
dec
dec
cmc
leave
xor
mov
out
repnz
sub
aad
pop
or
mov
clc
jnp
mov
cmpsb
in
sar
sar
jl
test
ret
sar
cmp
hlt
jmp
aas
mov
lcall
sub
cmp
pushl
jnp
dec
out
pusha
call
inc
cli
enter
mov
lcall
gs
add
ljmp
jmp
decl
push
iret
mov
sbb
pusha
mov
xor
out
adc
test
lahf
rcrb
jle
lcall
mov
jmp
call
cltd
lcall
cmp
decl
testl
inc
lcall
incl
jg
shll
incl
add
incl
ljmp
mov
movsl
incl
jmp
fisubs
ljmp
pushl
pushl
ficoms
sbb
dec
loopne
xchg
fidivrl
enter
dec
cmpsb
ljmp
cld
fisubrl
inc
incl
in
ljmp
sbb
in
and
push
mov
repz
incl
decl
push
lods
jle
fimuls
push
mov
adc
int
in
mov
jl
jmp
cmp
pop
gs
or
jae
sar
jg
lcall
mov
loop
cmp
rcrb
cmp
cmp
sub
incl
int3
xchg
pop
pushl
jle
ljmp
xchg
dec
jo
jbe
xor
sti
xor
mov
dec
pop
pop
pushl
cmp
icebp
cld
xor
call
decl
jo
cmp
cld
jle
mov
cs
mov
decl
sti
loopne
push
xchg
call
pushl
out
jns
aam
nop
jbe
xchg
fisubrl
mov
out
sbb
mov
xchg
repz
inc
incl
incl
lcall
sub
adc
fimull
in
in
pop
xchg
sar
dec
mov
pushl
pop
mov
cmp
clc
loopne
jnp
lcall
pop
ljmp
fnstcw
outsb
hlt
aas
pushf
in
cmp
aaa
cmpsl
dec
ret
ficompl
mov
lods
xor
lcall
call
lcall
jge
jmp
sbb
dec
xchg
repz
test
call
xlat
js
dec
mov
stos
mov
jmp
ds
in
dec
mov
lcall
add
call
mov
popf
ljmp
cltd
out
pushw
ljmp
sbb
decl
fstl
push
jmp
lcall
pusha
cmp
sbb
xor
mov
pop
decl
dec
inc
ljmp
jmp
clc
sahf
out
sub
cld
adc
call
cs
mov
cmp
outsb
add
jmp
adc
mov
loope
in
xchg
insb
push
je
cmp
fisubrs
fwait
mov
movsl
push
mov
mov
je
inc
jg
pushl
call
loope
xor
jmp
incl
xor
je
jmp
call
jbe
loopne
cmp
jnp
decl
mov
leave
cwtl
mov
cmp
dec
out
adc
inc
call
sti
push
jmp
sbb
cld
aad
movsl
fbstp
inc
inc
call
mov
jmp
out
pop
incl
push
imul
imul
and
in
aas
fmull
loop
js
jmp
lcall
outsb
mov
cmpsb
call
mov
out
or
decl
jmp
test
xor
pushl
icebp
add
lcall
popl
cmpsl
jmp
lcall
pusha
lcall
sbb
jmp
decl
dec
mov
xlat
add
incl
jp
cmp
sar
mov
push
icebp
fwait
xchg
inc
dec
adc
fbld
or
daa
ljmp
movsb
decl
int
pushf
cltd
add
sbb
pushl
insl
sbb
push
mov
scas
daa
jmp
and
push
adc
xchg
push
into
daa
ljmp
xchg
push
stc
out
ss
xchg
nop
push
mov
aam
int3
stos
jg
pop
jmp
jge
call
incl
sbb
call
xchg
push
sub
cmp
jge
and
aas
mov
push
pop
mov
or
mov
dec
inc
pushl
ret
xchg
pushl
pushf
out
fwait
adc
jae
arpl
in
imul
jne
ds
jmp
or
and
sar
mov
mov
pop
push
pop
pushl
lret
xchg
lock
outsb
push
cmp
test
ljmp
test
popf
in
sub
ljmp
decl
decl
ljmp
ljmp
icebp
mov
push
in
pop
into
push
call
mov
fsubp
mov
cmp
adc
mov
ljmp
call
xchg
aaa
sbb
mov
out
jmp
pop
or
in
call
decl
sbb
daa
incl
sar
aad
pushl
aas
jg
repz
cmpsb
lcall
jnp
sar
sub
cs
sbb
cmpsb
fbld
lea
incl
add
dec
add
mov
lret
xor
push
pushf
jno
incl
jae
jne
sti
fdivs
sbb
mov
decl
pop
dec
int3
out
sub
mov
pushl
js
incl
call
inc
pushl
dec
push
cmc
aam
jecxz
xchg
or
jmp
cmp
mov
mov
sub
lahf
pop
jae
lcall
out
lods
dec
mov
fwait
sti
inc
call
decl
das
aam
jmp
decl
out
and
inc
dec
push
imul
mov
lcall
or
es
js
sub
pushl
jmp
mov
fstl
and
dec
imul
out
xor
ljmp
adc
insb
pop
mov
jmp
lea
sbb
xor
jmp
inc
decl
mov
inc
incl
pushl
cmp
add
pushl
incl
push
add
inc
decl
lcall
push
fcompl
daa
cmp
jg
cmc
jo
or
pushl
jmp
jge
in
in
cmp
or
call
call
repz
and
add
jge
mov
call
jg,pt
shll
test
cmp
lods
into
mul
fsubs
add
sub
lcall
xlat
mov
mov
fildll
adc
or
sti
pushl
xchg
idiv
fcom
pop
cmp
lcall
call
repnz
incl
ss
xor
shll
inc
call
pop
adc
dec
mov
sub
lcall
aad
mov
cld
aam
jmp
lcall
ljmp
lret
cli
mov
pop
icebp
cwtl
mov
xlat
sbb
int3
mov
dec
push
arpl
shlb
ja
jl
lods
inc
decl
cmp
ret
sti
aas
sar
outsl
ret
dec
arpl
cmpsb
pushl
cmp
pushl
jecxz
test
push
dec
or
call
inc
call
decl
fistps
loopne
in
jg
lcall
xchg
fbld
jmp
sar
push
mov
jae
in
ds
call
test
jbe
incl
sar
repz
into
xchg
cmp
fwait
inc
filds
mov
aad
xor
xor
xchg
mov
mov
scas
sbb
jg
sbb
movsl
jmp
mov
ljmp
mov
incl
push
jnp
jne
xor
fcoms
push
push
mov
lcall
sahf
mov
mov
loop
pop
js
cli
add
jmp
jmp
mov
push
daa
call
call
in
cmp
loope
lret
mov
ljmp
jne
dec
lods
fistl
jns
lcall
mov
ljmp
stc
stc
aam
jmp
decl
xchg
push
mov
push
insl
stos
enter
mov
test
out
mov
aas
mov
push
pusha
lcall
sbb
scas
mov
jecxz
ljmp
ret
jmp
jl
call
daa
call
jp
jmp
incl
pushl
push
cli
cltd
adc
fcoms
ds
stc
fwait
adc
arpl
in
mov
push
fwait
xchg
jmp
call
or
fstl
jg
sbb
mov
and
xchg
sbb
stos
xchg
push
decl
out
xor
call
aaa
ss
lcall
mov
mov
sub
cltd
sbb
in
inc
decl
lods
cmc
sbb
sbb
dec
mov
pop
jo
test
stos
mov
push
and
faddp
jmp
lcall
pop
test
or
push
pop
sahf
out
gs
adc
pushl
incl
inc
lcall
ds
decl
out
das
add
inc
decl
popf
fwait
sti
dec
outsl
call
fists
incl
lcall
icebp
aam
lcall
pushl
incl
cmp
daa
out
ss
outsl
xor
pop
mov
data16
cmp
mov
mov
call
mov
inc
mov
pushl
test
test
dec
outsb
pop
negl
fucomip
mov
lret
adc
and
xlat
sub
in
mov
fstps
push
add
into
pop
and
pop
test
lcall
jmp
mov
inc
dec
mov
adc
call
sbb
ljmp
lods
or
lcall
inc
jmp
outsl
sbb
test
call
inc
mov
adc
mov
mov
cli
jns
pushl
mov
jge
cmpsl
dec
mov
scas
jne
nop
mov
lret
inc
mov
call
shrl
adc
ljmp
sar
out
loope
mov
and
lods
mov
enter
fisubrs
jp
lcall
cmp
fbstp
jmp
lcall
add
incl
call
inc
jmp
mov
incl
jmp
fsubl
lcall
cmp
or
call
sub
repz
lcall
add
inc
lcall
call
test
inc
lcall
cwtl
add
dec
ret
push
xchg
push
loopne
mov
push
out
nop
sbb
xchg
insb
lock
cltd
adc
call
lea
das
pop
fidivl
shld
cmp
xchg
and
cmpsb
pushl
push
in
add
mov
cmp
inc
js
dec
xchg
inc
mov
mov
adc
rcl
pop
cli
pop
xchg
fsubl
jg
leave
mov
or
in
sahf
xchg
mov
inc
call
adc
mov
lcall
mov
decl
decl
fdivrs
cli
xchg
push
jno
cmp
mov
sar
loop
inc
lcall
jl
fimull
pop
outsl
xchg
dec
lcall
pop
xor
call
and
push
add
incl
cmp
mov
jmp
cmp
sub
push
jp
incl
mov
incl
pushl
cld
pop
xchg
jp
or
inc
call
movsl
cmp
inc
lcall
inc
pushl
push
lods
hlt
js
lcall
xchg
inc
jmp
or
push
add
cmp
push
decl
or
scas
lods
aad
inc
decl
cmp
jp
test
mov
add
js
popa
cmp
ljmp
push
cmp
mov
pop
xchg
imul
push
inc
ljmp
cmp
inc
decl
dec
pop
push
ds
shlb
nop
cmp
pop
jnp
cmp
std
in
ds
push
mov
push
and
aad
cmp
testb
jmp
pop
cmp
ljmp
cmp
ret
ljmp
sbb
lahf
sub
hlt
inc
jmp
lcall
cmp
lcall
adc
lahf
xchg
dec
mov
decl
incl
fisubl
xor
dec
hlt
fbstp
jmp
and
jbe
mov
jo
sbb
mov
imul
lcall
pushl
mov
out
popa
pushl
xchg
xchg
inc
lcall
cld
push
xor
lcall
int3
mov
sub
cs
or
dec
enter
cmp
adc
xor
sub
add
lcall
pushl
fwait
lock
jmp
add
fldl
sub
call
imul
jmp
icebp
add
out
pushf
hlt
testl
jmp
call
call
xlat
xlat
es
cld
cwtl
push
fisttpl
repz
out
add
pop
imul
call
adc
test
out
inc
ljmp
xchg
xor
cld
pop
lcallw
pop
fiadds
lods
lods
xor
jmp
shrl
mov
in
push
xchg
xchg
ljmp
fdivs
data16
mov
push
cmp
call
ja
jmp
je
loopne
xlat
dec
icebp
sub
pushl
rcll
add
xchg
mov
mov
pushf
test
cltd
mov
incl
call
lret
lcall
sahf
mov
lods
fidivl
popa
incl
cmp
fsubr
clc
jns
lcall
jbe
call
mov
and
loope
pushf
lods
dec
and
mov
inc
call
rorb
decl
add
call
jp
jmp
mov
mov
scas
std
sbb
mov
ja
mov
aaa
push
jp
je
lcall
rclb
sub
jl
ud0
pop
push
adc
jmp
cmp
dec
neg
mov
ds
decl
ja
fwait
outsb
sub
inc
incl
call
cmpsb
incl
call
cmp
and
aaa
mov
pushl
rorl
pop
inc
lcall
fistps
lahf
push
ljmpw
xchg
jecxz
adc
pop
fstpl
out
mov
xchg
push
arpl
out
cmp
imul
decl
cmp
out
jnp
pop
shr
cltd
sar
adc
mov
add
pop
pushl
inc
decl
movsb
call
dec
push
decl
test
mov
cmp
out
and
push
lods
adc
ficoml
jmp
mov
rcll
pop
enter
xchg
cs
lcall
add
decl
loop
out
sahf
dec
and
sub
pushl
ljmp
pushl
imul
jle
incl
push
push
sarl
in
iret
mov
sub
dec
jmp
pushl
inc
mov
sbb
out
mov
lcall
fimuls
lcall
cmp
mov
enter
cmp
repz
ja
repz
sub
push
push
mov
jecxz
inc
pushl
jns
sbb
inc
clc
test
inc
decl
decw
out
push
loop
test
jo
sti
sub
lcall
in
mov
dec
cmp
mov
std
rol
incl
dec
sbb
push
jle
or
inc
mov
xor
test
dec
jb
call
mov
arpl
adc
cli
out
sbb
inc
jmp
inc
lcall
lret
pushl
push
push
ljmp
pushl
loope
cmp
inc
jmp
incl
pushf
cwtl
fmull
mov
fstps
icebp
pop
in
sbb
call
push
xlat
pop
cmpsb
mov
pushl
pop
push
sbb
cltd
nop
add
push
jb
scas
fdivs
push
decw
loopne
push
cmpsl
lcall
xor
xchg
std
outsl
push
cmp
repnz
jb
sub
in
ss
std
xor
rcl
fidivrl
inc
dec
add
es
push
adc
lret
dec
iret
adc
adc
incl
lcall
test
sahf
ljmp
inc
dec
hlt
xor
outsb
and
push
cmpsl
ljmp
push
out
int3
mov
lea
push
decl
arpl
adc
push
xor
pop
pop
lcall
or
jno
inc
call
push
push
adc
inc
lcall
jne
inc
jmp
call
shrb
imul
insl
jge
leave
xchg
pop
pop
ret
pushl
mov
or
ljmp
mov
sbb
push
lret
pop
sbb
cli
mov
xchg
cmp
mov
pusha
decl
lret
in
adc
aas
push
mov
icebp
je
add
ljmp
ds
lcall
loop
xchg
sahf
psubw
aad
incl
dec
ret
sbb
jle
adc
loope
mov
lcall
test
call
imul
shll
mov
lahf
sub
incl
push
in
add
inc
ljmp
js
push
inc
call
lahf
mov
ljmp
mulb
cmp
sbb
mov
add
jmp
mov
pop
aaa
push
inc
incl
add
push
mov
ror
mov
into
mov
mov
or
call
clc
pop
aas
nop
ud2
push
jno
pop
xchg
scas
inc
lcall
decl
dec
xor
xchg
aad
cld
jg
stos
mov
xor
sbb
adc
adc
adc
pushl
and
lret
outsb
dec
push
cwtl
fidivrs
sub
jmp
lcall
and
mov
jns
push
dec
cmc
dec
pop
call
pop
jno
pushf
jecxz
pop
mov
xchg
ljmp
loope
cs
push
fsubs
std
cli
jae
jmp
ljmp
lcall
aam
pop
pushl
mov
mov
and
out
and
xchg
mov
incl
lcall
mov
gs
fldenv
pop
stos
popa
jmp
incl
test
mov
and
call
lock
xchg
mov
jb
mov
sbb
pop
push
adc
cmp
sub
incb
jge
fistl
sahf
xor
jp
xchg
cld
xchg
sbb
out
pop
mov
xchg
mov
inc
jmp
jb
dec
dec
negb
sbb
aas
jo
add
sub
ss
lock
or
inc
decl
int
and
fs
fsub
jmp
std
in
and
cmp
lock
mov
call
jp
ljmp
mov
dec
xchg
shll
decl
cmpsb
call
jp
and
sahf
add
pushl
adc
cmc
and
ret
inc
push
mov
mov
inc
decl
mov
call
repz
mov
int3
nop
mov
mov
pop
pusha
ljmp
call
arpl
sar
ljmp
icebp
and
enter
test
dec
dec
fbld
pushl
mov
ljmp
push
outsb
negl
daa
jmp
xor
dec
adc
leave
fidivrl
push
inc
fimull
cmp
call
loope
dec
and
jmp
incl
shrl
push
cmpsb
pushl
aas
int
lcall
inc
lcall
idivb
aam
cmp
in
add
jmp
in
pop
flds
pushf
cmp
decl
xchg
pop
cwtl
jge
sub
in
aaa
repnz
call
jmp
into
insl
imul
mov
dec
imul
push
mov
test
sbb
lcall
jle
xlat
push
ret
aas
add
incl
lock
outsl
inc
cmp
cmp
lret
cmp
mov
jmp
jnp
jnp
jle
cmp
mov
push
xor
int3
test
clc
call
pushl
lods
test
xor
push
inc
ds
and
roll
adc
cmp
mov
mov
sub
shl
lcall
and
xchg
cmp
pop
cmp
lcall
int
sti
sbb
cmp
jo
jmp
jmp
pushl
imul
cmp
mov
jno
jge
lcall
or
sahf
mov
shl
xor
and
lahf
mov
movsl
js
enter
in
nop
mov
push
test
jmp
mov
nop
js
sbb
and
inc
push
push
jge
pushl
jecxz
xlat
sub
enter
and
sub
decl
out
sar
ljmp
dec
pop
and
adc
mov
iret
push
push
push
jns
insb
xchg
mov
mov
decl
mov
push
mov
cmp
loopne
nop
mov
cmp
jmp
and
test
ss
repz
aaa
cs
inc
inc
decl
sbb
lcall
stc
mov
push
call
mov
loopne
inc
decl
leave
mov
mov
jmp
sub
in
ret
flds
fmul
jae
loop
icebp
scas
push
decl
dec
je
rcl
and
jns
mov
imul
cmp
pushl
push
cmp
fsubl
dec
push
mov
jno
out
jmp
jmp
fsubp
jns
movsl
ljmp
xchg
pushl
out
cmp
decl
push
lret
lcall
jo
in
in
push
in
scas
add
jmp
repz
stc
dec
jae
pushl
out
push
xor
mov
aam
sbb
sti
inc
std
ret
jmp
sahf
pop
scas
or
leave
idivb
push
and
pusha
decl
stos
test
repz
aam
iret
xchg
cmp
dec
inc
inc
pushl
xor
pop
xchg
xor
xchg
sub
call
jg
mov
ds
incl
call
dec
cmp
int3
xchg
pause
or
and
jl
jne
mov
xchg
ret
pushl
popa
pushl
xchg
or
mov
push
incl
jmp
decl
popa
dec
xor
mov
cmp
aas
dec
inc
mov
incl
clc
dec
push
or
jns
call
lret
fcom
imul
aad
push
pop
rep
leave
test
add
lcall
add
incl
out
push
ss
cmp
aaa
fstpt
or
pop
or
sub
incl
pushl
call
xchg
dec
or
aam
into
pop
stos
cmc
and
mov
aaa
cmp
xchg
call
incl
test
ret
in
mov
popf
dec
test
mov
jg
pop
xor
comiss
fldt
mov
xor
mov
sbb
lcall
dec
aas
cltd
mov
adc
frstor
ffree
ljmp
dec
imul
incl
test
lcall
mov
xchg
movsb
js
repz
xor
pushl
pushf
lods
adc
cmp
scas
out
inc
incl
in
cmpsl
call
jg
push
cmp
callw
xor
pop
sarl
lock
loopne
pop
sar
decl
cmp
mov
jmp
push
jg
repz
cld
jecxz
mov
enter
jecxz
mov
call
repz
jg
push
or
flds
repnz
call
incl
dec
pop
dec
cmpsl
out
jo
lcall
arpl
inc
decl
incl
lcall
lods
call
movsl
pushl
mov
aas
hlt
pop
decl
ljmp
ljmp
out
loopne
or
sub
rorl
and
push
jo
pop
notb
mov
mov
mov
in
jmp
jg
and
cmp
mov
push
clc
push
movsb
call
call
jbe
decl
incl
jmp
pushl
lods
jp
pushl
decl
jno
jg
std
stos
pop
fnstsw
jbe
mov
mov
mov
jmp
cmp
or
call
mov
scas
mov
mov
rcrl
insb
mov
jle
cmp
int3
sub
rcll
sti
xor
and
sub
incl
incl
xchg
add
jns
jmp
fdivrl
clc
jmpw
sub
mov
push
out
cmp
iret
jno
mov
stc
jmp
fcmovb
fimull
inc
jl
mov
push
jne
lcall
ljmp
ljmp
jmp
jmp
ljmp
cmp
cmp
and
fdivrl
aas
jb
insb
pusha
call
dec
cs
xchg
loopne
or
pushl
and
pushl
pusha
ljmp
cmp
and
movsl
clc
pop
sbb
mov
cltd
inc
push
jmp
adc
loopne
jge
jmp
adc
decl
pushf
loopne
cmp
fcoml
decl
stos
adc
inc
cmp
sub
fisttpll
or
mov
ljmp
mov
push
mov
inc
incl
popf
test
jne
cmp
rcrb
jecxz
lret
inc
pushl
aad
call
push
adc
xlat
call
cmp
lcall
push
call
out
or
outsb
mov
jmp
push
cmp
xchg
push
push
into
push
lods
sar
ljmp
jmp
mov
aam
jge
xchg
xchg
and
das
mov
in
pop
aam
dec
sub
pushl
inc
ljmp
call
insl
repz
popf
jmp
cmp
push
cmp
cld
mov
cmp
inc
incl
lcall
aaa
and
cld
sbb
mov
call
in
stc
adc
lahf
out
mov
insl
sbb
mov
nop
push
arpl
push
fs
sti
sub
test
mov
adc
add
incl
pop
mov
rclb
inc
jmp
fsub
js
and
decl
jb
add
ljmp
jae
sbb
inc
pushl
sbb
jbe
incl
decl
fisubl
inc
jmp
decl
jmp
aas
mov
cmp
stos
push
out
repnz
dec
loope
adc
out
out
imul
ss
cmpsl
jmp
sti
cmovnp
pushl
mov
and
pop
stc
jne
ljmp
fistpll
decl
or
incl
test
add
dec
pop
leave
rcrb
in
mov
popa
fiaddl
xchg
sub
xchg
cmp
mov
incl
xchg
dec
mov
pusha
in
dec
negb
jnp
xor
xchg
in
dec
xlat
jmp
and
or
inc
lcall
popa
ljmp
icebp
test
inc
pushl
or
fmul
push
jmp
push
sbb
jnp
push
sbb
loope
pushf
mov
je
lahf
leave
mov
mov
mov
mov
in
sbb
and
inc
jmp
call
xchg
cld
mov
idivl
mov
push
aas
mov
das
rcr
push
fnsave
push
outsb
adc
push
push
popa
ljmp
pop
into
inc
call
js
ljmp
sbb
cs
ljmp
enter
call
call
incl
pop
and
push
jle
outsl
leave
cmp
sbb
test
leave
in
cli
push
mov
bswap
mov
mul
lcall
xchg
gs
mov
fcmovnbe
sar
lahf
in
mov
jmp
xchg
adc
scas
mov
xchg
fbld
call
pushl
in
jecxz
adc
outsl
xor
adc
adc
incl
jle
add
call
add
movsb
cmp
add
incl
cmp
sbb
ja
lcall
ljmp
adc
lods
jge
cmp
aad
pop
push
mov
cmp
cmp
out
hlt
cmp
jg
jmp
ljmp
cmp
mov
sub
ja
out
mov
sti
fcoms
cmp
pop
jmp
call
push
cmp
sbb
in
cmp
outsb
inc
call
incl
lcall
into
out
loope
pop
inc
cmp
and
jbe
incl
and
inc
sti
inc
jp
jmp
jmp
sbb
pushl
nop
push
xchg
loope
or
mov
ret
decl
idivl
lahf
xchg
neg
xchg
fs
jnp
call
xchg
shl
decl
std
jl
and
xlat
cltd
xor
adc
jbe
lcall
mov
lods
lret
xchg
adc
js
call
pop
pop
push
cmp
mov
call
xor
push
call
jmp
lcall
jmp
or
jmp
js
and
sar
jnp
push
in
sbb
loop
int3
loope
ficoms
repnz
add
ljmp
test
stos
adc
jmp
push
xchg
sub
loopne
pop
idivl
ljmp
aad
mov
test
icebp
push
sar
mov
lret
ficomps
ljmp
inc
pushl
fld
ljmp
push
add
incl
or
ljmp
sbb
jmp
add
pushl
sar
inc
jmp
jmp
mov
ds
pop
jns
jmp
lcall
sti
dec
imul
lock
xchg
ljmp
dec
mov
jp
enter
mov
jmp
sbb
sub
test
pop
jmp
lcall
in
test
inc
dec
pop
sub
push
int3
mov
jecxz
sahf
push
ss
sub
popa
ljmp
lcall
dec
mov
inc
cmp
add
mov
lcall
adc
xchg
jne
lcall
inc
lcall
lcall
jmp
inc
decl
decl
adc
lock
aaa
fld
pushl
out
push
sub
movsb
jmp
call
lcall
mov
push
add
jmp
jmp
sub
cmpsb
jmp
xchg
sub
mov
shrb
int3
sarl
and
fidivs
mov
mov
cmp
cmp
and
sar
jb
pushl
repnz
stc
pop
lcall
jmp
jmp
mov
cmp
push
loopne
inc
ljmp
inc
call
add
mov
repnz
inc
incl
add
ljmp
mov
mov
cmpsb
lcall
sub
mov
xlat
lcall
add
jmp
jmp
decl
jns
dec
scas
js
inc
ljmp
cmp
dec
or
in
jg
lcall
decl
mov
stc
mov
inc
decl
in
inc
call
sbb
cmp
inc
incl
jmp
inc
pushl
jmp
ljmp
cmp
ljmp
stc
into
test
sub
in
fdivl
push
ljmp
xchg
sbb
cmp
pushw
push
pusha
incl
incl
gs
clc
inc
sti
or
decl
loopne
xchg
imul
xchg
jno
test
or
lcall
mov
xchg
cs
ret
decl
lods
incb
incl
xchg
sub
aas
loopne
xchg
dec
push
jb
popa
ljmp
call
push
adc
ljmp
jnp
cmp
inc
lcall
jmp
lcall
incl
xlat
fistps
stc
pop
mov
adc
mov
xchg
aas
std
pop
sbb
out
jbe
ljmp
sahf
pop
pop
xchg
xlat
sbb
push
adc
lahf
add
mov
lahf
sub
mov
push
push
test
in
fmuls
jmp
dec
mov
mov
and
xchg
pop
mulb
repnz
ljmp
ret
pushl
cld
out
callw
ljmp
inc
jmp
jbe
sub
fildl
jmp
add
mov
jmp
call
arpl
pop
cltd
push
jmp
mov
xchg
inc
jmp
ljmp
inc
jnp
add
adc
sub
pusha
push
mov
movsb
fldenv
stc
dec
pusha
incb
fidivrl
loope
sbb
pushl
push
xchg
ljmp
js
incl
mov
dec
sbb
das
decl
decl
sbb
cmc
mov
shlb
lret
cmp
mov
fwait
mov
decl
mov
ljmp
nop
nop
mov
sar
movsl
jle
push
sar
ja
cmpsb
call
push
inc
decl
stos
daa
ljmp
mov
jbe
pop
cmp
sti
inc
jmp
mov
and
jg
test
sar
daa
lcall
dec
cmp
decl
loope
sbb
mov
push
out
fldenv
ljmp
insb
cmp
pushl
pusha
dec
sub
into
pop
sbb
jb
test
test
repz
fadds
lock
call
es
mov
call
push
loope
mov
aas
in
xchg
cmp
lcall
shlb
add
pushl
incl
in
ljmp
decl
push
movsb
call
dec
ja
cmp
fisttpll
pop
sbb
jmp
cmpsb
inc
ljmp
je
cld
sub
jmp
xchg
pop
dec
xchg
lret
daa
out
push
and
int
pushl
addps
pop
inc
ljmp
std
out
outsb
decl
push
mov
mov
lock
mov
in
out
xor
jne
sbb
add
decl
aas
leave
sbb
adc
ja
cltd
jnp
decl
cltd
jns
sub
stos
jp
pushl
je
decl
push
fidivrl
mov
mov
cmp
jb
lret
cmp
lret
cli
mov
call
push
xchg
xor
lahf
fprem1
push
push
pop
push
or
add
pushl
pushl
push
loop
in
lea
mov
call
jg
decl
call
add
sub
mov
dec
test
fsubs
incl
decl
mov
cs
out
jle
into
insb
push
pop
push
mov
mov
lcall
jmp
mov
xchg
jnp
push
inc
pushl
fwait
daa
decl
lret
imul
cli
jb
jmp
jmp
fstpt
sar
pop
arpl
pop
cmp
xchg
mov
dec
mov
popa
fstl
stc
sub
pushl
ljmp
jp
add
call
pop
decl
loope
cwtl
ficomps
lods
ja
jmp
jmp
lcall
push
cmp
mov
ret
fidivl
push
rolb
mov
popa
pushl
outsb
and
push
sub
jns
pop
push
cmp
stos
pop
out
jg
or
sbb
call
insb
xchg
sub
xchg
call
or
ljmp
push
jno
lcall
push
jmp
push
add
jmp
incl
push
ficoms
test
jnp
sbb
into
pop
fstpl
lcall
lcall
or
lret
stc
lcall
out
popf
sbb
fisttpl
inc
incb
scas
out
lods
icebp
or
dec
cmp
stos
js
inc
pushl
loope
lcallw
dec
pop
and
push
call
popf
clc
insb
mov
ljmp
jmp
frstor
dec
outsl
bnd
sar
adc
jo
mov
dec
mov
pushl
lcall
nop
cmp
ljmp
decl
lea
cmp
cltd
mov
into
or
dec
sar
addr16
decl
call
jmp
jbe
mov
cmpsl
pushl
call
xlat
mov
call
sar
sti
icebp
pop
test
lahf
adc
sahf
stos
add
call
addr16
call
xchg
mov
or
push
lret
mov
mov
enter
mov
lcall
xchg
sar
adc
shlb
jae
lret
mov
push
mov
setns
xor
push
in
pop
hlt
dec
push
out
fcomp
pop
ss
pushl
sar
jne
repnz
call
mov
clc
cltd
push
inc
call
clc
mov
cmpsl
mov
call
fmuls
mov
ljmp
or
icebp
and
adc
decl
arpl
adc
mov
mov
adc
leave
jno
pushl
shlb
jg
sub
call
cmp
std
sub
xchg
mov
mov
push
icebp
scas
xchg
cmp
decl
dec
std
mov
clc
push
call
call
cmp
push
or
rcll
decl
mov
js
filds
ljmp
scas
jmp
fdivl
jne
cmp
lcall
decl
je
xor
dec
out
loope
mov
lods
out
xor
mov
loop
mov
lods
imul
scas
lret
setne
or
fisubrs
push
jnp
std
sahf
test
jge
ljmp
or
xor
push
cmp
call
test
inc
decl
incl
push
add
cmc
out
push
inc
lcall
jnp
inc
jmp
incl
repnz
decl
popf
test
je
sub
sbb
xor
in
push
lahf
mov
cmc
dec
jp
call
popf
add
call
incl
inc
lcall
sarb
mov
test
and
xchg
movsb
lcall
mov
decl
inc
decl
pop
insl
lcall
jp
in
jge
xlat
into
stos
ret
jg
sbb
add
jmp
mov
pop
pushl
iret
jnp
outsl
add
jmp
decl
clc
sar
ja
filds
jnp
jmp
mov
xlat
dec
pop
dec
push
adc
and
je
jge
jno
leave
xchg
cmp
pop
std
mov
dec
and
icebp
decl
fidivl
inc
fistpl
ja
inc
jmp
push
fnstenv
jmp
jmp
ud1
in
jl
jbe
fidivrs
hlt
hlt
cmp
dec
iret
jne
ds
xchg
inc
jmp
jl
cmp
call
push
popa
incl
decl
cs
push
pushl
sbb
push
ret
pushl
mov
call
shl
ficomps
iret
icebp
or
lcall
xchg
arpl
xor
out
add
decl
jp
pushl
push
int3
mov
pop
inc
lcall
dec
pop
jb
test
and
icebp
sub
dec
jne
mov
jns
call
inc
ljmp
push
jmpw
es
jmp
mov
lcall
mov
dec
jl
or
fdivs
inc
ljmp
gs
mov
jmp
test
popf
arpl
sub
decl
inc
pushl
mov
ja
decl
cwtl
jmp
cli
fmul
pop
or
decl
fdivrs
cmp
dec
dec
mov
push
lahf
sbb
or
lods
fmuls
loope
fbstp
cltd
mov
pop
pop
or
call
ret
int3
pop
fsubl
dec
imul
and
incl
decl
mov
sar
in
mov
adc
push
add
ljmp
xor
jns
icebp
jmp
fsts
or
shrb
test
loop
filds
ds
pop
sbb
ficoml
das
pop
pop
mov
ljmp
sbb
dec
jne
dec
repnz
notl
decl
int
lcall
xlat
cmc
call
sar
cmp
call
ljmp
pushl
ret
lcall
ljmp
push
mov
stc
or
decl
pop
or
outsb
fmul
adc
ljmp
in
dec
imul
jmp
hlt
or
inc
call
incl
lahf
mov
mov
cs
insl
inc
pushl
add
inc
lcall
cltd
and
insb
dec
cmp
call
fildl
mov
dec
leave
call
loop
jno
push
xor
and
sub
gs
ljmp
decl
call
iret
packuswb
xchg
testb
jmp
jns
call
mov
jmp
xchg
stos
outsb
sub
call
arpl
xor
pop
or
push
cmp
sub
jns
and
xor
sub
mov
cmp
leave
loope
pop
call
lock
aaa
jo
push
test
jmp
or
cmp
pusha
decl
incl
lcall
adc
int3
sub
pushl
cmpsb
call
jo
test
call
pushl
test
arpl
fnstenv
pop
test
cmp
or
fnstenv
sti
pavgw
in
adc
lcall
repnz
mov
jnp
lods
xchg
push
loopne
adc
pushf
lea
stc
push
and
push
movsl
cli
test
and
call
loopne
shll
push
fwait
dec
pop
ss
call
repnz
xchg
mov
or
stos
sub
test
xor
jnp
xchg
mov
pushl
xlat
jo
jae
pushl
iret
xchg
mov
jecxz
dec
xor
dec
cld
out
cmpsb
lcall
lock
dec
and
mov
jl
jmp
movsb
mov
cmp
jmp
push
fucomp
add
js
out
lods
rep
into
in
inc
push
inc
call
jl
in
sub
adc
sahf
push
sbb
adc
dec
in
push
in
jo
xor
xchg
movsb
call
push
call
fistpll
xor
adc
jmp
jp
pop
jl
scas
flds
fstpl
repnz
in
mov
sbb
jmp
jmp
xchg
xlat
jg
pushf
or
cmc
mov
jp
aam
lcall
pop
arpl
xor
fists
push
sub
mov
dec
pop
int
call
decl
xchg
scas
cmp
loop
mov
jmp
lcall
loope
cmpsb
ljmp
mov
call
fldl
xor
scas
sub
je
mov
pushl
and
inc
clc
sub
and
shlb
adc
and
pop
sbb
add
lcall
rolb
ljmp
pop
inc
decl
xchg
stos
adc
ljmp
or
inc
pushl
sti
mov
incl
push
fdiv
cmp
mov
aaa
movsl
ljmp
popa
decl
call
fstpl
call
aam
xor
jno
in
ja
pushl
adc
or
incl
call
outsl
cmp
xchg
add
jmp
call
dec
inc
pushl
xor
and
adc
push
push
mov
incl
dec
pop
out
push
pop
jmp
fsubl
or
jmp
call
cmp
repz
sub
pop
ret
mov
pusha
fmuls
call
fistpll
dec
int
sub
jp
ljmp
add
call
daa
lcall
sbb
sar
jnp
dec
jmp
push
pushf
lock
sub
mov
out
mov
mov
adc
int3
cmp
pushl
lcall
pop
repnz
dec
inc
lcall
js
mov
mov
int3
dec
xchg
test
fadd
cmp
push
xchg
jge
test
dec
inc
mov
decl
hlt
pop
std
rorb
mov
add
imulb
inc
push
incl
icebp
add
incl
mov
jns
test
in
in
cmpsl
call
xor
out
sub
mov
cwtl
ljmp
mov
stos
scas
mov
rol
cmp
stc
cmp
data16
jmp
dec
push
ficoml
push
mov
pushl
out
xchg
push
rolb
lcall
loope
lret
lahf
xor
aad
ret
cmp
call
ljmp
inc
incl
ljmp
in
mull
int
dec
mov
pop
mov
fadd
decl
hlt
fmull
in
loope
lret
sti
xlat
push
mov
lcall
sbb
in
or
callw
ljmp
sar
incl
ja
inc
call
pop
dec
decl
incl
call
xchg
dec
insl
incl
push
push
notl
push
nop
mov
jmp
jnp
cli
jo
clts
pushl
movsb
pushl
sbb
jbe
enter
stos
rcr
into
rorb
and
push
mov
inc
pushl
lods
cmc
lods
aaa
and
out
sti
mov
jg
jmp
ljmp
daa
incl
jo
sti
mov
shrl
or
lcall
cli
aas
in
inc
incl
and
xchg
cwtl
mov
pushf
je
pushl
mov
lock
mov
call
or
enter
jmp
lcall
mov
mov
incl
call
cmp
mov
pushl
xchg
enter
inc
lcall
or
decl
aas
pop
jb
jp
jae
pop
add
ljmp
add
incl
cs
in
test
fstpt
decl
jmp
lcall
push
xlat
jne
ret
or
setae
jmpw
inc
pushl
xor
call
aas
test
adc
outsl
or
inc
decl
in
sub
jmp
lods
int
stos
sub
ljmp
movsb
dec
in
mov
decl
icebp
cs
mov
ret
call
ljmp
dec
cmp
ffree
incl
jle
sub
push
mov
jb
jmp
mov
jmp
mov
dec
test
cmp
inc
dec
push
sarb
push
sub
push
call
mov
dec
testb
inc
lcall
ljmp
add
pushl
pushl
dec
idivl
xchg
adc
xor
sub
mov
ljmp
lcall
mov
cmpsb
lcall
lcallw
imul
push
jp
ljmp
lcall
test
ss
lahf
inc
pushl
dec
sar
ljmp
sub
mov
ret
jmp
decl
ljmp
xchg
and
inc
clc
ljmp
mov
inc
mov
out
mov
push
incl
call
aad
das
jge
xlat
aad
sbb
mov
and
cmp
sar
ljmp
fbstp
lret
incl
xchg
xor
nop
mov
cmp
mov
lcall
ljmp
call
repz
mov
jmp
push
sar
jmp
inc
pushl
rorl
out
cmp
pop
sbb
mov
fwait
popf
lret
and
mov
push
dec
mov
cmp
pushl
adc
ret
jmp
mov
repz
incl
loope
out
cs
idivl
and
aas
cmp
inc
aas
insb
outsl
mov
faddl
mov
ljmp
clc
push
incl
loopne
mov
out
fisttpl
fadds
jmpw
cmp
adc
mov
ljmp
lcall
jmp
incl
dec
daa
lcall
movsl
pushl
lods
loopne
jno
lret
ds
dec
pop
fdivr
xchg
xor
decl
rolb
dec
call
inc
decl
jle
pop
push
stos
lcall
lock
add
lcall
mov
cltd
decl
sub
dec
aam
mov
cs
pop
in
xor
stc
push
pop
incl
daa
ljmp
xchg
mov
inc
dec
jns
loope
dec
cmp
mov
jmp
cmp
cmp
jmp
push
in
jne
rsqrtps
jmp
sbb
xor
jo
pushl
in
inc
jns
in
out
mov
cld
push
mov
test
pop
cli
mov
push
mull
call
leave
clc
xchg
sub
test
test
iret
inc
cmp
jle
clc
jne
ljmp
decl
mov
xchg
xchg
aam
decl
xor
aam
fstps
jno
push
mov
jmp
lcall
stc
nop
jmp
lcall
fmull
lcall
or
call
and
inc
inc
lcall
shlb
call
in
hlt
decl
and
and
and
mov
js
sbb
pushl
sub
cmpsb
ljmp
hlt
jnp
incl
inc
decl
jae
inc
incl
mov
mov
insl
popa
dec
fimull
loopne
repnz
pop
pop
mov
push
dec
imul
clc
sar
popa
decl
loop
mov
xchg
xchg
and
mov
incl
call
outsl
mov
lret
test
cmp
dec
in
push
mov
cmp
sbb
pushl
push
push
xchg
jle
incl
incl
lods
test
decl
out
mov
cltd
jp
pushl
repnz
adc
in
push
cmc
int3
mov
pop
loope
ja
xchg
sbb
inc
jp
and
mov
push
jb
xchg
mov
pop
xlat
xchg
jbe
pushl
mov
dec
mov
mov
jmp
lcall
push
sub
scas
mov
cwtl
test
jmp
loopne
lock
mov
js
mov
jl
add
jmp
lcall
sar
and
mov
sub
xchg
jmp
pushl
ret
incl
outsl
cmpsb
call
mov
jno
incl
inc
mov
jbe
cmp
inc
call
cli
or
decl
xlat
mov
jmp
decl
push
popa
decl
sbb
sbb
jg
adc
inc
pushl
inc
call
mov
cmp
and
shrl
mov
inc
lcall
cmp
add
imul
adc
and
mov
adc
or
in
daa
jmp
fcoms
jmp
mov
dec
scas
push
nop
pop
mov
pushl
imul
test
jne
pushl
pop
jbe
fcompl
jle
jmp
jle
cmp
cwtl
rolb
jge
pop
mov
fistps
push
jne
mov
insl
mov
adc
jnp
cld
fsubs
lcall
rolb
fistpll
adc
pop
push
mov
out
imul
push
adc
fbld
jmp
cmp
xor
pushl
inc
dec
inc
dec
pop
push
jmp
inc
call
inc
jmp
jmp
cltd
sbb
cmp
jmp
dec
cltd
dec
and
mov
ljmp
cmp
jp
or
mov
test
sbb
in
std
incl
imull
leave
outsb
insb
dec
sub
test
push
out
stc
push
mov
mov
xchg
jp
call
dec
into
mov
incl
lods
cmp
sub
pop
stos
fists
ja
ljmp
in
mov
add
cmp
icebp
rcl
pop
mov
pushl
and
ljmp
xor
mov
cmp
decl
test
loopne
adc
inc
ljmp
mov
push
decl
int
repnz
inc
decl
cmp
popf
sub
push
ljmp
and
sar
dec
dec
or
jecxz
mov
inc
call
lcall
mov
test
ret
int
inc
lcall
inc
cmp
pop
sar
jbe
inc
pushl
sbb
mov
pushl
sbb
incl
jb
cmp
decl
or
ja
ljmp
adc
dec
dec
jnp
sub
inc
incl
mov
sar
testb
mov
icebp
push
sar
cmp
cmp
cmp
adc
dec
mov
decl
decl
or
stos
std
scas
aas
call
push
push
pop
fsubl
in
test
aas
dec
or
mov
or
pop
cmp
out
cmp
lahf
xor
pushl
xchg
xor
enter
mov
lcall
cmp
into
cmpsl
jge
call
incl
call
decl
xchg
xchg
xchg
add
fisubl
call
cmp
stc
sbb
xchg
sub
and
mov
push
pushf
add
jnp
call
mov
sbb
loope
pushl
sub
call
pushf
mov
call
jnp
bsf
mov
push
and
mov
mov
call
test
nop
xor
inc
jmp
sbb
pushl
inc
call
nop
call
inc
pushl
insl
xor
flds
call
lcall
call
cmp
mov
incl
jmp
inc
jmp
ljmp
call
ljmp
mov
inc
incl
jbe
push
out
psrlq
add
out
inc
lcall
push
mov
inc
cmp
rolb
mov
lahf
pop
mov
lcall
pushl
mov
mov
sub
enter
insb
fiadds
sbb
dec
mov
movsl
decl
ljmp
and
jno
fwait
mov
cmp
pushf
repz
jmp
mov
adc
call
arpl
rclb
negl
rclb
clc
shlb
mov
call
cmp
ret
pushl
dec
sub
xchg
mov
and
loope
test
jmp
jmp
adc
sar
sar
imul
xor
call
pop
mov
cli
shl
repz
sub
divl
cmc
stos
mov
insb
add
call
pushf
stc
out
and
aam
int3
add
jmp
loop
xchg
imul
xchg
xchg
mov
ljmp
ljmp
mov
sbb
cmp
ret
call
hlt
frstor
ljmp
fadd
jmp
decl
cmp
sub
sar
sti
clc
cmp
flds
push
lahf
xor
mov
xor
jbe
or
mov
arpl
aad
ljmp
insb
out
cmp
sar
pop
jg
jl
dec
xor
incl
push
cmp
aaa
adc
mov
dec
inc
call
sub
jl
inc
lcall
scas
psrad
arpl
stc
decb
sbb
decl
ljmp
insl
xchg
sar
and
insb
push
cmp
pop
push
jl
int3
std
rcr
sahf
inc
pushl
insl
push
jmp
ljmp
ss
dec
popf
jno
dec
pop
pushl
mov
ret
std
ds
ljmp
decl
call
sar
lcall
call
ret
ljmp
fstp
sub
cmp
in
scas
roll
or
decl
mov
int
call
or
lcall
dec
fcompl
incw
pop
ds
incl
lcall
incl
inc
pushl
sub
xor
sbb
push
cs
mov
sti
sub
ljmp
lcall
adc
shlb
or
fisubrl
dec
hlt
push
aaa
aas
inc
dec
and
ljmp
decl
inc
lcall
test
mov
push
sbb
xor
mov
mov
xchg
and
and
sub
pushl
add
fsub
mov
adc
pushl
dec
fidivs
out
stos
stos
repnz
sub
adc
imul
pop
into
pop
push
cmp
xchg
sub
test
jo
call
or
inc
jmp
jmp
call
adc
push
incl
cmp
or
add
jg
call
insl
ljmp
xchg
jl
jmp
and
jb
jmp
outsb
adc
lock
jmp
lcall
repz
ds
cli
jp
xchg
and
call
jae
cmp
push
aaa
mov
outsl
cli
push
stos
cmp
cs
scas
push
pop
cmp
das
cmp
call
cmp
addr16
ffreep
jmp
mov
aas
or
popl
call
pop
test
mov
lret
lret
int
sub
xchg
int
jp
incl
pop
push
inc
ljmp
or
loop
push
fdivl
pop
add
ljmp
stos
cmp
push
lods
arpl
leave
adc
or
outsb
xchg
pop
lcall
pushf
dec
divb
popa
lcall
movsb
decl
cmp
sub
fsubl
pop
sar
xor
fisubl
jmp
incl
pushl
jbe
xchg
and
inc
dec
shll
mov
or
push
cld
xor
push
jbe
cmc
adc
cld
enter
es
hlt
fbld
lcall
mov
inc
lcall
add
jmp
cmpsb
sti
addr16
cmp
xchg
sub
decl
xor
nop
je,pn
pushl
sarb
xor
jecxz
repz
cmp
dec
lods
sbb
lcallw
mov
xor
pushf
jg
and
arpl
das
jecxz
push
push
roll
gs
cmp
outsl
or
pop
mov
out
sbb
pop
mov
adc
xchg
sar
inc
ljmp
dec
enter
movsb
call
in
xchg
push
lods
inc
call
mov
sbb
inc
incl
jmp
das
lods
dec
xor
pop
jb
aas
push
test
rclb
cmp
pop
or
jmp
push
in
mov
jecxz
out
imul
lret
movsl
ljmp
insb
test
jmp
out
xchg
test
into
mov
pop
ret
jl
mov
add
push
mov
sbb
inc
stc
or
test
test
mov
pop
inc
inc
incl
mov
cmp
cli
ffree
mov
cmp
incl
jl
adc
cmp
decl
mov
leave
icebp
lods
cmp
xor
iret
xchg
shrb
fdivs
add
mov
sbb
das
xchg
incw
test
jbe
test
jb
mov
adc
movsb
call
out
cmp
into
mov
call
and
sar
sbb
aad
fldcw
call
iret
lret
cmp
in
or
cmp
mov
mov
adc
mov
call
call
sbb
sub
mov
jmp
lcall
popf
enter
fstpt
xchg
fdivs
fisttpll
pusha
jnp
call
cmpsl
ljmp
sar
scas
lcall
lcall
add
fnstcw
jmp
out
das
icebp
sbb
push
loopne
mov
mov
inc
stc
dec
jle
jle
lcall
add
sbb
cmpsl
incl
mov
insl
jmp
int3
idivl
xchg
addr16
sti
push
sub
sar
icebp
sbb
lcall
xchg
mov
inc
lcall
inc
jmp
sbb
push
cmpsl
lcall
sub
dec
cli
mov
pop
xor
iret
ss
jmp
cmp
incl
dec
adc
fcompl
sub
pusha
cmp
mov
into
adc
fwait
add
pushl
ja
mov
ljmp
lcall
pop
mov
out
cld
mov
aad
jecxz
cmp
incl
enter
pop
hlt
xchg
stc
sahf
popa
jmp
call
xor
cmp
mull
dec
out
inc
lcall
cli
loope
ss
call
decl
mov
lcall
push
iret
test
lcall
jns
push
cli
imul
dec
add
cmpsl
cmp
call
or
loope
cmp
ljmp
mov
sar
stos
or
inc
out
loope
popa
jmp
jmp
lcall
xchg
xchg
in
cmp
movsl
stc
movsl
cmp
call
adc
jg
adc
xchg
add
incl
inc
jmp
fisttps
stos
mov
lods
mull
daa
lcall
popa
jge
test
mov
mov
pushl
rcll
mov
push
addr16
or
lock
std
pop
ljmp
pop
push
into
rcll
decl
addr16
mov
pushl
icebp
adc
jmp
call
incl
jmp
jmp
cmp
incl
xlat
xchg
mov
decl
aaa
mov
xchg
mov
cmp
jmp
int3
in
cmp
cmp
lret
pushl
call
mov
shrl
sti
repnz
ja
and
jnp
arpl
cmp
mov
movsl
mov
jbe
decl
cmp
inc
call
into
imul
push
dec
inc
incl
fadds
movsb
jmp
mov
dec
mov
pop
jns
xchg
push
test
cmp
stos
sbb
nop
pop
test
xor
ljmpw
inc
incl
jno
dec
int3
pop
aaa
callw
pushl
jmp
in
sbb
fildll
arpl
insl
jge
daa
call
lea
and
enter
cmove
add
jmp
xchg
pop
nop
inc
mov
test
xor
xchg
xchg
mov
cli
fsubrl
inc
ljmp
in
pop
adc
jmp
push
jno
mov
call
lea
decl
jmp
incl
lcall
push
push
lods
test
pop
sbb
call
ljmp
ljmp
jmp
aad
jmp
mov
sub
mov
lea
in
sub
pushl
test
jge
push
add
decl
in
mov
xchg
in
push
test
mov
pushl
lcall
cmp
lcall
or
pushf
adc
movsl
lcall
xlat
mov
sbb
testb
xlat
aam
inc
decl
fildl
mov
sub
pushl
popf
aad
call
call
sub
call
push
incl
inc
decl
lock
in
mov
xor
fsubs
push
jb
pop
out
adc
inc
fstps
adc
ja
pop
repnz
js
cld
cmp
incl
loop
into
or
push
pop
cmp
int3
stc
xchg
push
sbb
nop
sar
aam
add
push
or
sbb
sar
pop
and
push
popf
and
ds
sub
sub
icebp
icebp
dec
nop
mov
jmp
decl
dec
repnz
decl
aaa
dec
pop
dec
xchg
das
lods
xchg
ja
xchg
and
add
incl
lcall
push
lret
adc
or
fistpl
notb
mov
sbb
mov
adc
mov
xchg
mov
imul
sar
icebp
xor
push
stos
into
pop
xor
push
cwtl
daa
pushl
mov
hlt
dec
sub
push
sbb
fisubs
incl
push
rorl
shrd
out
das
test
decl
call
mov
jnp
inc
lcall
ljmp
xor
xlat
cmp
sar
out
dec
cmp
cld
push
cmp
lcall
sbb
push
push
dec
mov
sub
mov
jnp
mov
das
fidivrl
push
ja
dec
add
push
shrb
cmp
call
cmp
call
cmp
mov
sti
and
sar
lcall
jne
lock
clc
cmp
mov
ss
popa
inc
call
lea
dec
mov
cmp
pushl
jae
scas
sbb
decl
xchg
pop
mov
xor
lods
icebp
pop
sbb
fcompl
out
sbb
push
and
sar
call
cltd
outsb
sub
lcall
dec
jg
ljmp
mov
inc
pushl
jmp
jmp
in
push
cwtl
into
outsl
mov
scas
mov
dec
inc
call
into
fiaddl
pushl
or
incl
mov
push
push
push
pushl
into
push
pusha
jmp
jmp
nop
bswap
push
xchg
or
inc
inc
ljmp
push
push
ret
inc
dec
adc
pushl
sbb
jmp
push
jb
lcall
std
jmp
mov
icebp
rcr
sub
dec
hlt
mov
push
dec
and
lea
dec
cmp
xchg
mov
pushl
sbb
incl
jmp
ljmp
test
xchg
and
xchg
mov
pop
sub
sbb
fdivl
inc
dec
push
cmp
outsb
inc
jmp
lcall
xchg
jle
and
xor
incl
sub
insb
sub
incl
jmp
shll
fxtract
mov
and
lret
sub
jmp
inc
jmp
fisttpll
cmp
incl
mov
jmp
decl
or
push
arpl
ret
pushl
xchg
sti
aaa
cmp
push
add
incl
xchg
push
ljmp
adc
lods
xchg
push
aad
dec
out
data16
jmp
ret
jnp
lahf
leave
adc
incl
aam
inc
incl
stos
mov
fwait
cmp
stos
inc
incl
ljmp
jnp
sub
arpl
sbb
pop
fwait
mov
call
cmp
push
mov
aad
inc
pushl
bnd
adc
jecxz
hlt
leave
xor
cs
xor
adc
stc
mov
in
jle
mov
decl
lcall
lcall
cmp
int3
test
sub
popa
lcall
inc
call
or
pushl
jecxz
add
pushl
jl
pop
sbb
jnp
pop
leave
daa
incl
cmp
jmp
jmp
inc
decl
and
adc
sbb
and
hlt
stc
mov
pushl
sub
pushl
fdivp
mov
xchg
pop
lea
enter
ljmp
ljmp
jl
push
call
cmp
je
mov
mov
outsb
or
mov
xchg
push
sar
mov
cmpsl
lcall
push
inc
mov
mov
mov
mov
call
inc
lcall
lcall
sub
push
cmp
adc
dec
das
pop
aas
cmp
scas
sar
lcall
js
mov
push
xchg
sbb
inc
inc
pushl
das
test
jmp
lcall
jle
cs
mov
dec
cmp
cmpsl
push
fdivrs
imul
int
test
inc
call
add
mov
lcall
sbb
std
pushf
icebp
test
ja
incl
jmp
pop
mov
sub
dec
inc
jle
mov
cmp
jp
jmp
push
fbstp
scas
mov
jmp
jmp
in
filds
incl
sub
test
clc
loopne
mov
sub
pushl
mov
lcall
outsl
xchg
xchg
fs
cld
cmp
ror
or
jne
decl
mov
lock
decl
decl
mov
decl
adc
outsb
add
or
and
mov
ljmp
cmp
das
daa
incl
push
daa
call
cwtl
jmp
push
out
inc
jl
mov
gs
jo
adc
cmp
jle
cmp
adc
mov
mov
and
xchg
cltd
xchg
adc
jmp
cmp
cmp
fdivrl
xchg
jns
call
shlb
mov
adc
ljmp
inc
mov
sar
incl
sub
stc
stc
inc
dec
std
into
insb
das
add
jecxz
fsubrl
sub
das
call
sub
mov
call
jae
repz
incl
sahf
enter
clc
jmp
mov
jmp
hlt
fwait
repnz
fdivrs
scas
jge
mov
add
lcall
sub
fisubl
ret
inc
pushl
call
adc
cmp
xor
decl
push
cmc
jge
popf
in
fwait
cmp
hlt
or
lcall
dec
inc
ljmp
outsb
xor
daa
fldt
shl
sub
lahf
lea
jnp
lcall
inc
pushl
in
ja
sbb
lcall
stos
out
loope
popf
dec
inc
ljmp
push
xchg
add
cmp
jnp
pop
adc
xchg
cmc
push
mov
jp
fwait
movsl
incl
dec
decl
inc
mov
incl
cmp
sbb
popa
jle
cmpsb
pushl
movsl
dec
pop
ss
rcrb
jl
lcall
call
dec
ret
add
lcall
cmp
decl
push
add
pushl
sub
test
incl
call
dec
stc
test
cmpsl
fsubrl
or
xchg
push
lods
jns
push
lcall
push
pop
icebp
addr16
mov
jl
out
sbb
decl
xchg
xor
jmp
call
lea
lcall
stos
xor
jno
iret
adc
push
add
add
