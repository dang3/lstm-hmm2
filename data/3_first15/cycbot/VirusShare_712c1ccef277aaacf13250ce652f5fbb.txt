add
arpl
arpl
arpl
add
jbe
jbe
push
jge
jge
jge
add
fcmovu
fcmovu
fcmovu
mov
mov
mov
add
ret
add
or
jl
jl
jl
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
dec
dec
dec
dec
dec
add
add
add
add
xchg
test
cmp
cmp
add
dec
add
add
add
add
add
add
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
add
pop
pop
pop
pop
xchg
add
push
push
add
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
leave
leave
leave
leave
leave
leave
mov
mov
mov
mov
mov
mov
mov
jmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
daa
daa
jb
add
add
add
sub
sub
sub
sub
sub
sub
add
xor
xor
xor
cld
cld
cld
cld
cld
xor
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
pop
pop
add
add
and
outsb
outsb
outsb
outsb
outsb
add
add
add
add
or
or
or
or
or
or
out
out
out
out
out
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
jbe
and
pop
pop
pop
pop
pop
add
jge
jge
jge
scas
scas
scas
add
add
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
add
jo
jne
jne
jne
jne
add
div
dec
and
and
incl
mov
add
fdivrs
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
push
push
push
push
push
push
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
fiadds
add
add
mov
mov
sbb
sbb
add
lret
lret
dec
dec
dec
add
add
add
adc
add
add
add
or
or
or
or
add
add
add
roll
and
and
and
and
and
and
imul
add
sbb
sbb
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fildl
add
add
cmp
cmp
cmp
stc
stc
stc
stc
stc
stc
stc
add
add
push
push
push
push
push
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
lea
add
push
push
push
push
push
push
push
stos
add
add
add
add
add
add
gs
sbb
sbb
add
mov
mov
add
movsb
movsb
movsb
movsb
int
int
int
int
int
add
adc
adc
adc
adc
add
add
add
imul
add
add
or
add
add
add
rcl
rcl
jmp
jmp
jmp
add
add
sub
sub
sub
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cs
rol
rorl
dec
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
add
add
add
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
add
rol
rol
rol
rol
rol
add
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
lcall
add
mov
mov
mov
mov
mov
mov
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
xchg
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
rol
rol
rol
add
add
add
add
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
jne
add
mov
mov
add
add
add
add
jg
ja
add
jge
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
daa
daa
daa
daa
daa
add
pop
pop
pop
pop
jne
jne
jne
jne
jne
jne
jne
jne
jne
add
add
add
add
mov
add
add
fcmovnu
sub
xor
xor
xor
xor
mov
mov
sub
sldt
add
add
test
test
test
test
add
add
add
cwtl
cwtl
jb
mov
add
lods
lods
lods
lods
lods
lods
mov
mov
add
es
xchg
xchg
xchg
xchg
xchg
xchg
jl
jl
jl
add
stc
stc
rcl
shl
repz
add
push
push
push
push
push
addr16
cmp
cmp
cmp
cmp
or
or
or
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
and
and
and
and
and
add
add
adc
adc
adc
adc
adc
add
dec
dec
dec
add
arpl
arpl
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
test
test
add
add
sbb
sbb
sbb
add
push
pop
pop
pop
pop
pop
pop
pop
add
pop
pop
fwait
fwait
fwait
fwait
fwait
fwait
addl
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
mov
add
add
add
ret
ret
ret
add
add
pop
pop
pop
pop
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
xchg
xchg
adc
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
xchg
xchg
xchg
xchg
add
fsts
push
push
push
push
push
push
add
add
sti
sti
sti
sti
sti
add
addb
addb
add
add
add
xchg
add
lock
sub
add
fstp
add
xor
xor
xor
add
add
add
add
add
cmp
cmp
cmp
add
add
add
dec
dec
dec
std
std
std
std
add
mov
mov
mov
add
add
add
add
add
addr16
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
or
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
add
arpl
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
and
and
and
and
ret
ret
ret
ret
mov
add
sub
sub
sub
sti
sti
sti
add
adc
adc
lds
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
aas
aas
aas
aas
aas
add
dec
inc
inc
inc
mov
mov
mov
add
add
add
push
push
push
add
add
add
mov
mov
add
in
in
in
in
in
in
sub
sub
sub
sub
sub
or
or
rcl
rcl
rcl
rcl
rcl
rcrb
cwtl
cwtl
cwtl
cwtl
add
add
in
in
add
add
add
sub
sub
sub
add
add
cmp
cmp
cmp
cmp
add
xchg
xchg
lret
lret
hlt
hlt
hlt
hlt
hlt
hlt
hlt
popl
add
add
add
add
rol
add
jle
jle
jle
add
add
add
add
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
push
push
push
add
add
pop
pop
pop
dec
dec
dec
dec
dec
adc
adc
adc
add
inc
inc
inc
add
add
adc
add
mov
pop
pop
pop
add
add
add
add
fcmovu
fcmovu
fiaddl
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
mov
mov
add
arpl
add
and
mov
loopne
fcmovnu
pop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
ret
ret
add
add
cmp
xlat
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
mov
mov
mov
mov
mov
mov
mov
add
das
das
das
add
add
add
insb
add
incb
add
add
add
lods
add
add
add
ds
add
xchg
xchg
xchg
and
and
add
add
add
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fisttpl
push
ja
ja
add
add
add
test
sbb
sbb
add
add
sbb
jb
jb
jb
add
and
and
fiadds
dec
dec
add
add
and
and
and
and
and
and
and
and
and
add
aam
cmp
cmp
cmp
cmp
cmp
cmp
add
add
ret
ret
ret
ret
xor
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jae
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
xchg
xchg
xchg
add
xor
movsb
movsb
movsb
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
pop
adc
adc
adc
add
add
add
lahf
lahf
lahf
lahf
lahf
add
add
add
add
add
add
xlat
xlat
out
out
out
out
stos
stos
stos
stos
stos
addb
add
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
dec
dec
dec
and
and
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
mov
add
add
add
jecxz
jecxz
mov
add
xor
xchg
push
push
stos
stos
stos
stos
or
add
add
add
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
add
add
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
add
rol
rol
rol
rol
rol
rclb
adc
adc
incb
add
cli
cli
cli
cli
add
add
add
outsl
outsl
mov
add
sbb
sbb
sbb
sbb
jno
jno
jno
jno
jno
jno
add
addl
add
shl
repz
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
adc
adc
adc
mov
add
adc
adc
adc
adc
scas
scas
scas
scas
scas
scas
add
sub
sub
xor
xor
xor
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jmp
jmp
jmp
add
jmp
jmp
jmp
jmp
jmp
dec
mov
xor
xor
xor
xor
add
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
add
add
sbb
dec
dec
dec
dec
dec
add
shlb
mov
add
add
add
mov
add
cwtl
lods
add
add
add
sbb
add
add
add
add
add
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
inc
add
add
jns
jns
jns
add
add
add
add
pop
pop
add
add
ja
add
cwtl
cwtl
cwtl
cwtl
cwtl
mov
ljmp
das
das
das
or
or
or
or
or
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
popl
add
add
dec
add
add
add
dec
dec
dec
add
out
out
out
out
out
out
add
add
mov
mov
mov
repnz
add
add
mov
mov
mov
mov
mov
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
dec
dec
dec
dec
dec
dec
add
add
add
add
add
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
add
add
fcmovnu
fcmovnu
jne
jne
jne
add
add
ja
ja
add
mov
mov
xchg
mov
add
add
mov
daa
daa
daa
daa
daa
daa
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
cmp
out
out
out
xor
xor
add
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
add
add
xchg
add
lret
ljmp
dec
dec
add
add
add
add
and
and
and
and
and
and
and
and
and
and
rcl
ror
lret
lret
lret
lret
dec
dec
dec
dec
dec
dec
dec
mov
add
add
add
add
mov
mov
add
add
iret
iret
iret
iret
iret
push
push
push
push
push
push
push
push
push
push
add
and
and
scas
scas
scas
scas
scas
scas
scas
dec
add
add
add
add
dec
dec
into
into
into
into
into
into
into
into
into
into
into
into
rcl
rcl
rcl
insl
insl
insl
insl
insl
insl
insl
add
add
add
add
add
and
fiadds
add
add
add
add
mov
add
add
add
addb
addb
addb
add
gs
add
add
add
add
stos
stos
stos
stos
stos
xor
jns
jns
jns
jns
dec
add
movsl
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
jb
jb
jb
jb
jb
div
div
div
div
div
testl
add
rcl
rcl
rcl
rolb
add
add
incb
add
add
add
add
add
cld
cld
cld
cld
add
inc
inc
inc
inc
inc
inc
inc
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
or
or
or
add
add
ds
and
add
add
stos
int3
int3
int3
int3
xor
xor
xor
xor
xor
xor
xor
xor
add
add
call
call
call
call
add
add
pop
pop
pop
pop
pop
add
outsb
outsb
outsb
outsb
arpl
add
xor
xor
xor
xor
xor
rcl
rcl
shll
jbe
jbe
add
add
add
add
add
fstp
fstp
fldl
add
add
jge
jge
jge
jge
movsl
movsl
movsl
movsl
movsl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
jmp
or
add
add
jle
jle
add
out
out
out
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rolb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
adc
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fdivs
add
add
sbb
sbb
sbb
sbb
add
add
sub
sub
sub
push
push
push
push
push
push
push
push
push
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
add
sti
add
adc
test
test
test
cmp
std
std
std
std
std
std
std
std
std
std
std
add
cmp
test
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
xor
xor
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
cs
loop
add
mov
cld
repz
add
dec
and
add
add
js
add
add
add
add
ss
xor
xor
xor
xor
fcmovnu
fcmovnu
add
add
rcl
rolb
xchg
mov
add
inc
or
or
or
or
or
add
add
add
xlat
xlat
add
add
add
ret
add
and
and
and
and
add
add
dec
dec
dec
dec
dec
dec
dec
add
add
add
cmpsl
add
add
std
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xor
xor
xor
in
in
in
in
in
in
add
add
add
add
add
and
and
and
and
and
add
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
sub
sub
sub
sub
sub
sub
add
add
mov
mov
mov
mov
add
add
add
add
jns
add
add
add
add
dec
add
add
add
mov
mov
mov
mov
add
add
add
add
add
add
add
in
in
in
sub
sub
sub
sub
sub
sub
sbb
sbb
sbb
leave
leave
leave
add
add
add
adc
adc
add
add
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
add
add
dec
add
add
in
in
in
in
in
add
rol
add
add
pop
pop
pop
pop
pop
pop
add
add
add
add
mov
inc
inc
jns
jns
add
add
add
add
add
add
add
add
add
add
sbb
add
sub
sub
add
add
add
push
mov
add
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
mov
adc
adc
add
add
add
loope
loope
loope
add
adc
in
in
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
mov
lcall
lcall
lcall
add
add
lock
add
lea
lea
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
sub
sub
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
es
sbb
sbb
sbb
sbb
sbb
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
daa
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
add
add
add
add
add
add
sbb
sbb
sbb
add
add
aad
aad
aad
add
add
pop
pop
pop
pop
pop
mov
add
add
add
add
add
add
mov
mov
mov
add
inc
inc
inc
inc
inc
inc
add
add
dec
dec
dec
dec
out
ljmp
add
xor
xor
xor
mov
mov
push
push
push
push
push
push
push
add
xor
xor
add
add
cltd
cltd
cltd
cltd
cltd
add
jne
jne
jne
jne
jne
sbb
add
mov
mov
mov
mov
jmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
and
lcall
lcall
lahf
lahf
lahf
lahf
lahf
lahf
and
and
add
pop
pop
pop
pop
pop
pop
pop
lea
lea
lea
add
mov
push
push
push
add
dec
add
jmp
add
jp
jp
jp
jp
jp
jp
jp
jp
jb
jb
push
push
push
dec
dec
dec
and
and
les
add
add
scas
scas
scas
scas
mov
mov
add
cli
cli
cli
cli
cli
cli
cli
add
outsb
pop
sub
pop
test
mov
mov
and
add
xchg
push
jo
insb
test
add
push
add
cmp
add
push
fnstsw
insl
push
cmp
adc
add
add
sub
add
push
sbb
inc
int3
mov
mov
add
out
add
or
add
lea
add
jmp
and
add
pop
cwtl
test
add
add
add
pop
imull
mov
pop
stos
add
les
ficoml
mov
loop
dec
mov
add
xchg
jmp
xor
add
aaa
mov
dec
in
add
xor
push
lcall
add
dec
out
add
mov
enter
mov
xor
add
add
mov
stos
cmp
mov
add
push
out
out
rcrb
push
push
shlb
add
in
pop
xor
sbb
fisttpl
int
add
pop
mov
add
lret
aaa
xchg
sti
cli
into
xchg
mov
add
js
sbb
dec
andl
mov
add
aaa
mov
add
or
add
in
xlat
add
add
fisttps
add
xchg
and
sti
fnsetpm(287
push
xchg
scas
and
inc
dec
dec
push
push
inc
jecxz
fnstsw
add
into
inc
pop
std
mov
sbb
repnz
push
dec
gs
dec
std
or
add
cli
add
add
ja
add
imul
std
lea
jns
sahf
scas
addb
lds
mov
sbbl
add
rcl
add
add
inc
jge
inc
test
add
das
daa
test
dec
mov
mov
ficoms
add
pop
test
add
sub
leave
in
jmp
stc
in
push
cmp
mov
add
sbb
dec
push
rcll
dec
mov
inc
rcll
mov
add
pop
cmp
dec
arpl
adc
sub
add
push
into
and
add
or
add
addb
out
add
mov
pop
inc
das
pop
mov
scas
add
mov
add
inc
sbb
or
add
test
lods
add
xchg
incl
jbe
mov
ljmp
mov
testb
daa
loopne
lcall
push
mov
scas
add
out
or
negb
add
mov
add
add
add
cmp
imul
popa
sete
add
add
sarb
hlt
mov
add
mov
mov
push
addb
pop
sbb
mov
add
add
je
push
gs
scas
add
js
dec
mov
or
add
aam
add
sub
add
jecxz
in
add
and
add
jns
pop
pop
push
add
mov
add
outsb
ret
or
test
add
sbb
add
jmp
in
repz
adc
cmpsb
add
lret
icebp
mov
add
repz
lods
jns
xor
into
inc
sub
add
out
addl
test
add
loop
enter
mov
into
stos
je
adc
or
add
pop
test
in
sub
xor
cmp
push
push
inc
cmp
mov
scas
sub
add
mov
mov
pop
aaa
aam
cmp
mov
ja
pop
test
sub
pop
xor
xor
xchg
leave
into
jge
add
dec
mov
lret
push
mov
xor
inc
mov
add
add
pop
dec
aad
xchg
cmpsl
mov
cltd
pop
mov
add
pusha
dec
and
add
add
lods
loopne
idivl
add
insb
adc
push
add
inc
or
add
cmp
int3
mov
jp
xchg
test
mov
pop
pushl
lea
popf
lods
and
dec
sarl
ljmp
add
mov
ljmp
cmp
add
add
ret
fdivl
push
add
mov
add
add
push
dec
jge
mov
pop
xchg
movsl
xchg
adc
lahf
add
add
ret
mov
add
add
push
jge
mov
add
xor
mov
jecxz
repz
mov
mov
mov
add
movsb
add
pop
mov
andps
lret
mov
leave
cmpsl
add
add
mov
xor
ss
daa
add
add
pop
lods
addb
and
jmp
movsl
test
add
cmp
lea
les
or
faddl
clc
insl
jecxz
dec
dec
repnz
pusha
aas
inc
out
xlat
mov
ljmp
or
add
and
and
add
sahf
je
push
test
push
fwait
mov
add
add
xchg
mov
scas
hlt
jne
add
test
mov
pop
cmp
mov
fwait
mov
add
sub
add
adc
sub
add
sahf
jl
inc
mov
cmp
xchg
mov
rorb
add
dec
stos
mov
add
lds
push
mov
add
add
add
ret
call
pusha
scas
add
jg
jg
imul
repz
add
pop
cli
fucomi
jl
mov
mov
out
add
das
jo
inc
call
add
and
pop
cmpsb
add
ljmp
push
mov
or
add
adc
pop
popf
mov
clc
pop
cmp
mov
xchg
mov
lock
add
roll
mov
mov
pop
pop
mov
add
xchg
push
add
fwait
mov
add
call
jnp
jno
cli
xchg
fwait
das
cmpsb
add
gs
mov
jg
fwait
mov
add
into
lcall
add
insl
cmpl
add
pop
rcll
shrb
adc
out
cmp
mov
add
divb
xor
sbb
addb
pop
sbb
push
xchg
add
and
push
or
add
xorl
xchg
into
add
mov
sti
maskmovq
testl
cmpsb
add
ja
shlb
clc
iret
dec
mov
adc
mov
add
mov
lock
leave
adc
mov
add
add
xchg
add
negb
push
je
int3
rcll
and
add
pop
mov
add
add
sbb
out
aaa
sti
jle
jae
in
jne
ds
add
push
cmpsl
fsubrs
xchg
pusha
mov
mov
add
aad
push
movsb
add
pop
outsb
xchg
ljmp
add
push
add
xchg
je
loopne
pop
scas
add
loopne
mov
or
add
add
add
icebp
dec
mov
out
fstpl
jb
pop
pop
pop
xor
sbb
ret
mov
jecxz
add
imul
push
add
std
mov
add
mov
xchg
adc
leave
out
repz
cmp
add
lds
add
add
pop
int
repnz
outsb
cmpsl
adc
imul
out
sbb
add
test
lahf
xchg
add
jae
xchg
das
sbb
jle
add
cmp
xchg
adc
xchg
iret
aaa
adc
jg
add
push
movsb
add
pop
cmp
push
sub
add
xor
into
sbb
scas
add
int3
hlt
divb
sub
fnstsw
rcr
pop
cmpl
add
and
loope
mov
add
jl
testl
and
loopne
mov
add
add
push
add
and
imul
mov
ret
add
daa
pop
rol
sti
loopne
test
add
mov
or
bound
addb
stos
add
or
add
sub
or
add
lcall
add
icebp
out
xor
addb
lods
add
jmp
lea
pusha
shlb
pmulhuw
je
xchg
add
out
push
add
push
ja
push
pushf
in
sti
mov
and
add
push
add
and
add
inc
bound
add
dec
addb
mov
add
cmpsl
jge
dec
imul
dec
ja
add
mov
sbb
sbb
add
imul
cmpsl
ror
stc
popf
pop
fxch
pushf
cmp
in
pop
inc
sbbl
add
pop
or
add
mov
add
cmp
leave
in
aas
testl
add
test
add
icebp
scas
sub
add
jmp
icebp
mov
add
jae
into
mov
fcomps
mov
add
sbb
mov
mov
add
cltd
xor
add
mov
add
add
ret
pop
xor
cmp
movsl
sarl
inc
clc
mov
mov
hlt
mov
xchg
add
add
mov
push
imul
add
mov
add
inc
mov
push
imul
push
push
add
add
inc
js
xorl
jecxz
aaa
mov
add
add
shrb
inc
shrb
ret
scas
jg
xchg
mov
rolb
and
and
add
sub
add
add
add
add
in
jl
in
mov
xor
jb
or
sub
aas
xor
gs
and
add
in
sarb
add
sub
add
stc
and
add
gs
pop
nop
add
fisubrl
dec
idivb
push
xor
mov
add
dec
and
add
sub
add
popf
add
dec
dec
ret
cli
das
aad
mov
inc
push
xchg
fimuls
or
jno
js
mov
jecxz
push
and
add
jmp
insb
jl
inc
push
add
jno
sahf
jecxz
into
lcall
add
inc
push
cmpsb
add
sahf
add
add
add
jp
push
mov
shl
push
loop
mov
xlat
add
addb
shl
jmp
imul
fsubrl
ret
in
pop
in
jle
add
inc
mov
movsl
bound
jnp
add
int3
mov
add
inc
fsts
add
adc
or
add
add
mov
mov
mov
repnz
clc
jae
pushf
inc
jge
sarl
dec
loopne
pop
xchg
fimull
fcmove
fisubrl
movsl
push
lds
add
sub
mov
test
add
repz
in
dec
dec
pusha
addb
add
or
add
add
shrl
add
push
add
or
add
xchg
push
stc
in
mov
inc
or
add
aam
arpl
adc
mov
test
das
repnz
lcall
xchg
jb
ret
mov
fsubrl
loope
jg
cmp
add
push
xchg
add
repnz
sbb
add
ds
dec
gs
lahf
movsb
add
mov
add
negl
push
add
jg
inc
adc
add
insl
mov
add
test
adc
or
add
add
sti
test
add
sahf
adc
popf
cmp
add
jbe
aad
adc
push
cltd
cmp
add
sbb
sbb
sbb
loope
add
mov
add
fcmove
add
add
add
test
xor
jae
and
jo
lock
out
repz
into
mov
pusha
cmc
push
add
pop
sbb
add
gs
and
add
dec
dec
add
push
cmpsb
add
les
add
pop
jecxz
in
repz
sub
add
add
add
dec
mov
pop
cmp
add
jae
add
ljmp
cmp
add
jl
add
adc
test
add
add
inc
ret
add
imul
cmc
add
add
sbb
and
add
std
aas
cmp
fimull
into
add
add
lods
add
icebp
loope
jns
clc
das
ret
push
add
ljmp
test
jg
mov
add
add
stos
add
lock
addl
into
addr16
add
imul
add
mov
push
inc
jnp
mov
add
frstor
test
add
popa
lcall
call
add
mov
add
and
add
in
push
add
add
pop
mov
add
cmp
fwait
addb
mov
adc
imul
jge
das
push
icebp
negl
roll
push
add
ret
add
cmpsl
stc
inc
int
or
add
lret
and
out
jnp
add
and
inc
mov
cmp
push
decb
add
mov
add
xchg
insb
movsl
mov
cmp
add
jae
aad
xor
lock
add
push
stc
je
xor
fs
add
push
add
or
add
adc
push
js
insl
ror
sahf
in
xchg
push
daa
stc
addb
and
dec
arpl
sbb
add
add
stos
push
movsb
add
adc
mov
add
aam
mov
aam
mov
xor
popf
inc
cld
or
add
into
add
jle
int3
aam
add
and
add
xchg
mov
add
cmp
add
les
call
dec
rep
cmp
mov
add
addb
pushf
mov
add
lcall
add
push
jnp
insb
xlat
mov
pushf
dec
sub
add
jg
mulb
lods
insb
mov
push
into
pop
sbb
inc
das
jbe
add
pop
testb
add
add
mov
gs
mov
mov
out
cltd
addb
clc
popa
stos
xor
mov
add
add
addb
outsl
rcll
add
mov
ret
icebp
nop
mov
fwait
push
add
fwait
add
and
add
add
add
add
xchg
outsl
push
cmpsb
add
sub
add
or
cmp
jno
and
add
int3
stos
js
pop
push
lea
add
add
add
imul
movlhps
and
add
push
out
or
add
add
add
divl
lods
add
fnstenv
mov
not
daa
movsb
add
in
lods
add
stos
hlt
lods
add
in
imul
add
inc
fidivrs
add
stc
xor
cmp
pop
jbe
faddl
add
push
or
add
lock
les
add
mov
add
add
pop
stc
mov
adc
sbb
in
mov
lret
or
add
inc
inc
stos
xlat
je
aas
cmc
clc
addb
xor
pusha
lahf
sub
add
mov
out
mov
ret
cli
daa
pop
push
fistps
pop
jns
je
or
inc
pop
jmp
sti
mov
test
add
add
ficomps
add
pop
push
push
dec
cmpsb
add
scas
add
ret
insb
cli
or
add
in
pusha
inc
shl
dec
adc
and
add
imul
cmpl
dec
pop
stos
add
out
rcl
popa
and
add
fadds
sub
add
out
lds
xor
shr
icebp
adc
test
add
rcrb
addb
pop
dec
call
and
add
push
stos
pop
and
add
lret
insb
xor
cmpsl
cmp
xor
jae
jns
xor
or
add
aam
inc
lret
stos
add
fildl
shrl
add
les
xchg
add
popa
or
insb
inc
adc
push
out
mov
call
into
jl
enter
mov
add
add
loope
ss
add
mov
add
add
sahf
loopne
mov
fsts
into
sub
mov
sti
add
pop
xor
hlt
mov
add
xchg
xlat
xchg
pushl
mov
add
test
inc
or
add
push
sbb
dec
fbstp
or
add
shrb
push
mov
mov
sbb
pop
push
nop
aas
scas
add
popa
jns
out
xchg
adc
outsl
mov
add
add
shr
mov
test
pop
mov
jae
add
lcall
int3
sbb
push
fisttpl
shlb
int3
sahf
clc
int
lds
mov
cmc
sbb
push
jl
inc
sbb
lock
add
inc
mov
loope
add
push
add
xchg
cld
loopne
sub
inc
mov
in
jno
movsl
push
and
jecxz
sub
push
sub
add
jp
test
push
and
add
add
mov
movsl
lcall
call
add
sub
repz
xor
test
add
scas
add
loopne
add
adcl
add
aad
add
cmp
dec
out
xchg
and
add
fcmove
mov
add
or
add
in
fisttps
add
sti
and
jecxz
add
dec
insb
aad
mov
pop
in
xor
add
lret
push
mov
mov
jmp
decl
inc
push
add
add
adc
mulb
or
add
add
addb
mov
mov
scas
insb
push
fdivrs
add
pop
dec
mov
push
mov
lret
push
xchg
shll
push
lcall
add
cmp
jl
xchg
stos
add
neg
xchg
mov
in
sub
add
divw
into
mov
sub
lds
pop
inc
popf
adc
xor
adc
xchg
adc
shlb
add
sahf
adc
add
mov
inc
xchg
mov
in
movsb
add
dec
call
cltd
sub
test
addr16
cmp
jle
sbb
je
add
out
stc
pop
jmp
add
nop
insb
and
add
stos
add
xchg
in
les
popf
push
add
loop
ds
jb
and
pop
mov
stos
adc
shl
icebp
and
xor
cltd
ficomps
mov
add
add
addb
dec
sbb
pop
pop
shll
add
movsb
add
call
pusha
xor
pop
cli
xor
add
xor
fcompl
add
into
loop
push
xor
ljmp
add
dec
subl
mov
cmp
mul
push
add
add
aam
jb
mov
outsb
mov
pop
mov
and
add
xor
cli
pop
sub
add
mov
inc
or
incb
jb
sbb
test
add
push
add
mov
pop
jmp
out
insl
add
aas
xorl
int3
pop
mov
adc
mov
cmpl
stos
cld
add
jbe
xchg
add
inc
jge
cmp
ret
dec
out
sti
lods
repz
add
imul
inc
or
dec
and
lea
xchg
bound
add
dec
jg
sbb
push
loope
jne
pushf
movsb
add
xor
mov
add
and
mov
add
cmpsl
mov
sahf
stc
popfw
cmpsl
sbb
sub
add
fwait
movsl
ljmp
xchg
xor
sub
into
push
sbb
add
mov
into
aaa
pop
pop
push
add
add
add
add
arpl
testl
add
andl
add
add
add
gs
mov
and
add
add
mov
add
popf
xor
sub
add
stos
lret
jo
addb
sub
add
jg
fldcw
inc
mov
stos
clc
je
adc
cmpsl
sub
add
shl
sub
adc
add
addb
ja
inc
jg
xchg
sbb
add
push
scas
nop
movsl
cmp
leave
pop
xor
push
xlat
nop
mov
add
dec
mov
arpl
and
jne
ljmp
push
pop
push
mov
push
test
shlb
out
add
popa
bound
test
das
add
mov
cmc
test
cmp
jmp
or
add
divb
add
pop
push
add
aam
das
add
shll
jns
jo
add
test
add
pop
mov
or
add
add
inc
sub
add
jl
inc
out
adc
ja
jno
pushl
add
mov
and
popf
push
and
add
adc
add
repnz
add
scas
test
add
xor
sub
sti
pop
push
jecxz
mov
add
add
aad
pushf
mov
cmp
lods
add
pop
aas
aaa
or
push
cmpsb
add
lcall
add
std
add
lahf
mov
push
aam
cwtl
shrb
loopne
rorb
ret
fmuls
mov
cmp
test
add
adc
jecxz
mov
fmul
lcall
dec
mov
add
pop
lock
dec
xchg
jge
xlat
jne
inc
test
shlb
add
add
or
and
add
add
push
lret
fisttpll
aad
jp
jge
inc
dec
pop
addb
mov
add
or
inc
mov
add
in
xchg
add
add
lahf
out
push
sub
fistpll
push
aad
in
insl
mov
pusha
pop
push
add
repz
xor
push
cltd
pop
or
add
pop
add
addb
add
adc
add
hlt
pusha
lock
fdivs
fs
ja
jnp
pop
or
add
sarb
gs
ret
test
add
jae
lods
add
loopne
shrl
mov
in
in
movb
outsl
dec
roll
add
sarb
pop
dec
lea
sbb
add
xlat
fdivl
insb
fildl
add
outsb
sbb
repz
add
rep
in
call
xchg
cwtl
jo
sub
add
xchg
xchg
adc
mov
and
add
add
mov
ds
sbb
mov
add
cli
inc
ret
addb
and
add
icebp
push
add
dec
mov
or
add
add
rol
push
adc
add
test
add
mov
out
cmp
add
mov
out
mov
cli
gs
rep
fstpl
cld
addb
cmp
mov
icebp
sbb
pushf
pop
dec
scas
jbe
mov
add
xchg
sub
or
mov
add
std
setp
pop
and
loopne
divl
add
loope
jecxz
gs
and
adc
int3
repz
mul
pushf
ja
addb
cmp
repz
adc
add
pop
outsb
mov
sub
fisttpll
cmp
jmp
push
mov
mov
sub
movl
lea
push
call
sub
add
and
mov
mov
and
test
je
mov
push
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
and
jne
call
rorb
notrack
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jmp
pop
pop
or
lahf
lods
testb
cmp
dec
dec
sub
hlt
push
add
mov
add
test
pop
imul
adc
cld
and
imul
leave
movsl
sub
add
inc
pusha
loope
add
fs
push
dec
popa
add
movsl
mov
mov
jle
cli
test
test
cmc
in
lahf
cmpsb
add
insb
or
pop
std
scas
faddp
out
xchg
mov
inc
jg
add
cmc
and
leave
iret
and
sub
pop
and
add
push
mov
cld
andl
add
add
pop
outsl
jle
sub
add
popf
ror
cmc
cmpsl
push
jbe
adc
push
hlt
sbb
xor
pop
dec
dec
sub
add
sti
xchg
test
scas
add
mov
dec
arpl
add
xor
add
pop
scas
inc
push
jb
mov
or
add
xor
adc
mov
in
sbb
lods
jno
jnp
cmp
xchg
cmc
adc
mov
mov
add
pusha
inc
pop
nop
insl
jne
movsb
add
std
jo
fwait
in
stos
dec
insl
xchg
add
add
xor
dec
add
fisubrl
jns
add
fimuls
clc
aas
cld
add
negl
push
pushl
aad
std
ds
add
add
enter
rcrb
mov
cmp
shr
shl
icebp
lods
add
shlb
clc
mov
xchg
stc
push
pushf
insl
fcompl
loopne
mov
add
sarl
add
push
imul
ficoml
mul
test
xchg
pop
fstpt
in
xor
leave
mov
mov
xchg
add
add
pop
lret
push
add
add
testb
adc
fwait
mov
pop
outsl
add
or
add
lahf
loop
sub
add
ss
xchg
sub
mov
scas
fucom
dec
jb
xor
dec
mov
mov
test
arpl
add
in
add
push
test
mov
mov
sar
xchg
hlt
stos
movsb
add
js
jne
lods
add
js
sub
add
repz
mov
add
outsb
or
xor
dec
mov
loope
push
lods
mov
test
inc
pop
or
xchg
cwtl
add
add
dec
push
xor
sbb
dec
aam
mov
and
and
iret
cltd
popa
mov
add
enter
and
add
add
dec
js
minps
fiadds
and
add
push
jo
add
mov
add
mov
incb
jge
jecxz
setae
xchg
or
xlat
xchg
fsubrp
push
add
inc
movsb
add
imul
lcall
mov
adc
js
in
out
andl
and
add
ffreep
push
out
cmp
fimuls
cmpsb
add
or
add
je
pop
imul
iret
iret
rorb
iret
ds
icebp
sub
add
ss
or
adc
dec
ret
pop
xchg
add
inc
lea
test
add
xchg
in
sub
dec
cli
ja
add
add
add
add
sbb
add
jbe
add
dec
xchg
fs
mov
xchg
mov
js
loope
jl
sub
add
push
add
pop
dec
das
xor
add
mov
add
out
addb
das
addb
xchg
jg
testl
pop
bound
add
fcompl
fmuls
stos
add
adc
sub
add
fsub
xor
inc
dec
imul
cwtl
stos
add
lcall
or
daa
xlat
and
sbb
int3
jl
mov
adc
mov
add
cli
ja
icebp
mov
addb
into
lcall
imul
pop
fadds
sbb
pop
xor
jl
mov
mov
push
adc
or
fcmovb
dec
cld
mov
adc
out
inc
out
inc
addb
mov
lea
add
add
and
mov
movsb
add
in
jmp
xchg
mov
jns
pop
stos
mov
add
mov
add
xor
add
add
inc
cld
cltd
xor
cmp
add
push
test
add
lcall
icebp
aad
lods
inc
add
dec
out
mov
ret
mov
xor
add
pusha
enter
or
add
fnsave
pop
jl
cmp
in
xchg
ja
fwait
repz
into
arpl
add
add
in
ja
mov
add
adc
add
xor
or
add
mov
mov
add
jmp
mov
jl
loop
or
push
pushf
xchg
add
add
sub
add
std
sub
add
mov
push
ficoml
sub
mov
pop
and
add
add
xchg
pop
xor
cmp
push
sub
add
ds
cmc
cmp
push
add
cmp
cmp
mov
sub
add
inc
cld
sub
test
add
pushf
jo
lods
add
decl
mov
aaa
mov
xor
add
popf
aaa
cmpsl
inc
mov
push
stc
push
adc
add
aaa
sti
push
inc
add
add
sub
insb
aad
pop
push
jmp
add
add
test
nop
lret
arpl
cltd
mov
dec
xor
add
popa
pop
inc
movsl
shll
addr16
push
mov
daa
push
xchg
addr16
bound
gs
add
xor
clc
sbb
and
add
add
add
test
testb
jo
ret
loop
add
ret
push
test
or
add
jp
ss
ret
sub
add
scas
scas
add
rcll
jnp
add
pop
aas
mov
addb
pop
in
mov
aas
ss
add
add
aaa
addr16
xchg
ficoml
jle
add
push
arpl
push
add
popa
sarb
hlt
push
add
lcall
xor
mov
add
cmp
add
add
stos
sub
add
repnz
mov
push
in
jge
push
add
hlt
pushf
imul
sti
jae
xor
add
ljmp
cld
lret
adc
cmp
cmp
nop
sub
add
add
mov
jno
out
cwtl
dec
push
inc
add
add
cld
and
pop
lret
rclb
mov
add
or
add
lods
hlt
in
cwtl
mov
jns
in
iret
mov
aam
fidivl
repz
iret
xor
sub
add
mov
add
push
jb
and
jne
cwtl
dec
mov
addb
adc
icebp
inc
data16
iret
jp
add
lods
add
into
xor
adc
add
in
and
mov
scas
xchg
add
add
pop
push
cli
sub
add
inc
mov
add
xchg
sti
xchg
dec
inc
xor
pop
lods
add
outsl
jbe
mov
js
cmpsb
add
push
cmp
int
arpl
sub
add
gs
int3
repnz
cltd
movsb
add
scas
add
mov
mov
xchg
das
and
add
test
and
add
jnp
out
ret
dec
sub
add
push
add
lock
jae
push
repz
sub
adc
mov
dec
xchg
mov
popl
lods
in
sbb
add
mov
out
mov
sub
add
add
mov
sub
in
and
ficompl
dec
dec
in
cwtl
dec
add
add
insb
add
add
xchg
xlat
jnp
sub
addr16
inc
fwait
mov
cmpsl
add
lds
pop
jno
or
add
int
add
inc
out
ret
add
pinsrw
cmovle
jmp
fwait
pop
and
add
sub
lcall
mov
add
pop
add
in
xor
stos
add
dec
test
stos
lahf
inc
or
xor
addb
sub
add
or
add
jo
pop
aam
lea
dec
jge
jns
hlt
pop
fldl
hlt
xchg
movsl
stc
xchg
push
add
xchg
xor
add
out
xchg
adc
xchg
addr16
mov
add
add
jg
stos
stos
cmp
outsb
lcall
push
or
and
dec
add
add
insb
xor
test
add
adc
add
add
xchg
push
mov
shll
xor
add
jg
enter
add
add
and
fwait
fs
out
rcll
js
jl
arpl
scas
outsl
mov
add
inc
sbb
adc
in
ret
xchg
outsl
mov
add
jae
cmp
mov
shlb
dec
out
adc
repz
add
inc
pop
jno
ficompl
jge
data16
cli
mov
xchg
jge
fldenv
add
cmp
and
jmp
aas
ss
gs
inc
cmp
push
push
jecxz
pushf
push
outsb
pop
jne
mov
iret
mov
fwait
adc
lahf
ds
add
in
push
xor
mov
sub
add
dec
adc
sahf
popf
mov
dec
dec
sub
add
sbb
add
fs
nop
ss
pusha
lds
ret
icebp
add
add
lret
lret
nop
andl
push
jge
out
addb
jge
push
mov
int
dec
notb
xchg
jns
adc
mov
fbld
fs
pop
outsb
insl
ret
inc
int3
cmpsl
jge
or
add
aas
cmp
sub
add
xor
inc
fbstp
fisubs
add
pop
mov
cmp
add
sbb
add
je
pusha
in
cld
push
loopne
add
dec
mov
int3
in
xor
pop
or
add
stos
add
sbb
mov
add
imul
bnd
stos
add
jmp
dec
sbb
leave
xchg
push
add
pop
insl
int3
push
add
push
add
cmp
push
lahf
sbb
add
xor
jecxz
mov
add
adc
mov
dec
loop
jmp
mov
add
jmp
ret
mov
dec
clc
fwait
movsb
add
les
add
popa
nop
push
pushw
or
add
push
sub
call
add
ds
fs
or
add
add
push
stos
cmpsl
cmp
jmp
int
sbb
leave
aad
std
inc
xchg
lret
inc
cltd
imul
fldt
add
push
clc
ret
in
add
aas
daa
xor
stc
xchg
or
adc
sbb
leave
rcrl
or
idivl
add
pop
push
mov
add
jne
test
add
and
add
add
and
jno
scas
xchg
imul
cmpsb
add
scas
mov
or
add
pop
cmp
and
add
or
add
add
sbb
add
xchg
out
mov
sbb
movsb
add
sbb
jge
stos
mov
add
push
pusha
nop
outsl
stos
pop
push
scas
xchg
repnz
lods
lret
imul
out
mov
push
add
mov
add
mov
push
test
sbb
add
or
shll
add
inc
sahf
mov
stc
lret
inc
cmp
add
add
or
jo
addr16
jge
push
add
push
mov
sub
add
ds
pop
jecxz
add
clc
test
add
cwtl
mov
in
push
add
cmp
add
sbb
add
add
add
lahf
sbb
sbb
add
sahf
cmp
add
testb
and
add
jmp
sub
add
bound
test
add
xor
xor
jp
push
add
ds
dec
shlb
jns
addb
aad
pop
pop
lret
pop
mov
xchg
outsl
fistps
enter
lock
add
jae
and
fmuls
add
jp
adc
and
lcall
add
test
add
add
in
sahf
clc
dec
frstor
cli
test
add
push
fstpl
push
lock
dec
fbld
das
in
mov
add
mov
insl
aam
jg
int
je
add
adc
divb
or
add
sbb
mov
add
sub
add
fnstsw
add
addb
clc
mov
mov
add
enter
add
sub
add
jp
loop
arpl
sub
lods
add
mov
js
add
std
xchg
jl
add
adc
stos
add
and
mov
fildl
inc
cltd
dec
adcl
pop
cmp
popf
ret
jle
mov
add
aas
imul
test
add
pop
ficoml
add
lret
add
nop
loop
inc
mov
sbb
out
or
add
add
cmp
imul
push
add
and
add
das
test
add
add
xchg
dec
jne
addr16
cld
lret
imul
test
sbb
sbb
inc
sti
div
into
dec
inc
mov
add
add
add
inc
shll
mov
popa
enter
js
loopne
dec
mov
add
inc
data16
imul
add
bound
add
ficompl
mov
add
fs
rep
rcr
aad
outsl
cmp
mov
add
test
jmp
fstpl
test
add
arpl
cmc
add
add
push
insb
aas
daa
lods
jmp
out
cmp
movsb
add
push
addb
mov
sub
mov
add
int
mov
fs
sub
add
lret
fs
dec
ret
sbb
xchg
mov
xor
jmp
lods
xor
push
push
lahf
mov
outsl
xor
add
pop
sub
add
les
mov
js
movsl
or
jo
add
ret
jo
bound
add
cmc
cld
sbb
or
cmpsl
mov
add
decl
and
sub
add
jbe
shrb
push
sbb
addl
xor
iret
mov
inc
sub
lret
push
push
aam
add
sbb
or
lea
add
inc
xchg
rcrl
mov
adc
movsl
pop
mov
push
lret
add
add
or
add
dec
loop
fnsave
mov
and
add
aas
cmp
push
dec
lods
add
inc
jns
lcall
cli
adc
sub
cmpsl
sarb
mov
add
and
add
add
out
clc
repnz
nop
nop
jae
add
dec
int
je
sub
mov
cmp
ret
fiadds
add
adc
xchg
imul
mov
mov
or
cld
nop
nop
jae
shl
add
add
jp
sub
nop
push
mov
leave
nop
jmp
sbb
popa
fmuls
add
clc
repnz
nop
nop
jae
les
mov
clc
repnz
nop
nop
jae
add
add
les
lea
xchg
ret
add
add
jne
clc
repnz
nop
nop
jae
add
add
add
test
mov
add
adc
add
push
xchg
outsl
inc
add
fisubrs
mov
push
push
mov
xchg
ret
add
jle
xor
xor
jecxz
in
push
mov
xchg
ret
dec
add
add
add
insb
xor
clc
repnz
nop
nop
jae
add
add
mov
push
mov
xchg
ret
add
mov
add
xchg
add
add
mov
leave
nop
jmp
adc
xor
add
inc
clc
repnz
nop
nop
jae
leave
add
push
add
clc
repnz
nop
nop
jae
add
add
pusha
pop
fs
add
nop
push
mov
leave
nop
jmp
xor
std
pop
add
add
pop
push
mov
xchg
ret
add
add
pop
add
popa
sbb
push
clc
repnz
nop
nop
jae
ljmp
addl
mov
push
push
mov
xchg
ret
out
add
lcall
add
repnz
nop
nop
jae
add
add
std
fdivrp
and
add
jmp
ljmp
cli
fistpll
jle
lcall
add
add
repnz
nop
nop
jae
add
pop
and
push
mov
leave
nop
jmp
add
fisttps
lret
mov
nop
push
mov
leave
nop
jmp
add
filds
xchg
fisubrs
add
test
add
les
repnz
nop
nop
jae
lahf
jb
add
add
dec
imul
cmp
repnz
nop
nop
jae
add
mov
clc
repnz
nop
nop
jae
add
mov
shl
fstp
call
nop
jae
add
add
add
add
addb
or
add
insl
shl
push
mov
xchg
ret
inc
xor
add
pop
pop
addb
pop
push
push
mov
xchg
ret
add
add
pop
out
fdivrp
add
test
xor
add
nop
jmp
jle
xor
mov
clc
repnz
nop
nop
jae
scas
fisttps
and
push
sbb
fwait
nop
push
mov
leave
nop
jmp
mov
add
xor
sbb
repnz
nop
nop
jae
leave
xor
add
add
add
clc
repnz
nop
nop
jae
pusha
add
add
nop
push
mov
leave
nop
jmp
stc
add
add
mov
dec
push
clc
repnz
nop
nop
jae
pusha
add
xor
add
movsb
add
push
dec
push
add
clc
repnz
nop
nop
jae
add
add
leave
ljmp
clc
repnz
nop
nop
jae
in
stc
add
add
xor
push
pop
lea
nop
push
mov
leave
nop
jmp
pop
add
add
or
clc
dec
pop
mov
clc
repnz
nop
nop
jae
outsb
add
add
xchg
add
clc
repnz
nop
nop
jae
fs
and
adc
clc
dec
inc
clc
repnz
nop
nop
jae
stc
rcl
cmp
in
leave
nop
jmp
add
add
cli
add
add
ja
inc
or
repnz
nop
nop
jae
add
lcall
add
test
add
add
cmp
leave
nop
jmp
add
andl
aad
add
xor
add
add
add
add
adc
jbe
clc
repnz
nop
nop
jae
add
pushf
mov
dec
mov
test
sbb
add
repnz
nop
nop
jae
std
add
lea
clc
repnz
nop
nop
jae
dec
add
mov
add
lock
add
call
inc
add
scas
pop
scas
fiadds
dec
pop
adc
mov
nop
push
mov
leave
nop
jmp
lds
add
mov
push
push
mov
xchg
ret
pop
lds
add
add
dec
add
push
mov
leave
nop
jmp
add
dec
cmp
add
adc
repnz
nop
nop
jae
add
add
add
aaa
push
clc
repnz
nop
nop
jae
stc
stc
scas
pop
filds
add
dec
jb
or
sbb
clc
repnz
nop
nop
jae
add
add
std
add
cmpw
nop
push
mov
leave
nop
jmp
roll
add
add
add
sbb
nop
push
mov
leave
nop
jmp
jb
xchg
add
add
add
inc
dec
testb
leave
ret
xor
rorl
in
leave
nop
jmp
popa
dec
pop
adc
add
xor
addb
or
add
lret
clc
repnz
nop
nop
jae
mov
add
cmp
mov
push
mov
xchg
ret
pop
inc
add
mov
or
add
mov
clc
repnz
nop
nop
jae
lds
add
add
add
lret
clc
repnz
nop
nop
jae
out
mov
mov
cld
nop
nop
jae
pop
lcall
rclb
and
push
mov
leave
nop
jmp
add
add
add
stos
mov
clc
repnz
nop
nop
jae
add
adc
repz
mov
xchg
ret
in
add
popa
stc
imul
in
sldt
clc
repnz
nop
nop
jae
add
cmp
repnz
nop
nop
jae
inc
add
fs
pop
in
or
repnz
nop
nop
jae
mov
loopne,pt
or
add
push
mov
xchg
ret
xor
test
add
add
push
push
clc
repnz
nop
nop
jae
and
add
mov
repnz
nop
nop
jae
dec
add
sub
cld
nop
nop
jae
add
jle
out
cli
shll
sar
cld
nop
nop
jae
add
mov
ret
lss
clc
repnz
nop
nop
jae
std
fucomi
mov
add
add
add
shll
xor
add
add
test
add
sbb
push
mov
xchg
ret
add
cmp
mov
clc
repnz
nop
nop
jae
mov
sbb
fadd
lea
ja
clc
repnz
nop
nop
jae
popa
jo
jns
inc
and
push
mov
xchg
ret
incl
add
loop
clc
repnz
nop
nop
jae
add
adc
shr
clc
repnz
nop
nop
jae
add
loopne
mov
sub
clc
repnz
nop
nop
jae
inc
add
add
add
mov
xchg
ret
mov
add
dec
mov
lea
xchg
ret
xor
add
xor
push
and
add
add
repnz
nop
nop
jae
add
add
or
add
add
clc
repnz
nop
nop
jae
add
jbe
add
add
add
cmp
mov
clc
repnz
nop
nop
jae
or
out
add
scas
add
cmp
xchg
repnz
nop
nop
jae
jb
pop
or
add
add
cmp
cld
nop
nop
jae
add
add
push
clc
repnz
nop
nop
jae
adc
lcall
or
clc
repnz
nop
nop
jae
dec
or
jb
add
add
mov
clc
repnz
nop
nop
jae
mov
add
push
clc
repnz
nop
nop
jae
fisubs
lcall
nop
push
mov
leave
nop
jmp
xor
or
xor
add
clc
push
mov
xchg
ret
lahf
cli
add
add
fistpl
push
mov
xchg
ret
in
add
push
stos
add
stos
add
cmpsb
add
pop
dec
push
mov
xchg
ret
add
add
add
add
pop
lea
push
mov
xchg
ret
add
dec
jb
add
outsl
inc
add
mov
pop
or
add
pop
nop
push
mov
leave
nop
jmp
dec
roll
popa
ds
add
repnz
nop
nop
jae
incl
add
filds
iret
je
clc
repnz
nop
nop
jae
xchg
jno
mov
repnz
nop
nop
jae
xchg
lcall
leave
cli
sar
push
mov
xchg
ret
stos
jo
add
sbb
mov
clc
repnz
nop
nop
jae
leave
std
add
mov
mov
ficomps
testb
stc
push
add
das
lods
and
inc
jge
rcrb
repnz
nop
nop
jae
add
add
mov
add
cld
cmp
add
and
add
lret
nop
push
mov
leave
nop
jmp
arpl
add
repnz
nop
nop
jae
jmp
lcall
push
mov
leave
nop
jmp
add
add
repnz
nop
nop
jae
add
pop
fists
sub
push
mov
xchg
ret
add
add
add
add
mov
add
js
repnz
nop
nop
jae
add
inc
sbb
sbb
cmp
ret
add
les
inc
xchg
leave
nop
push
mov
leave
nop
jmp
fbld
stos
mov
fld1
push
mov
xchg
ret
add
fs
les
xor
cld
nop
nop
jae
add
dec
add
jmp
flds
cld
nop
nop
jae
lahf
fisttps
add
add
add
xchg
mov
xchg
ret
test
and
adc
loopne
mov
xchg
ret
add
shr
sub
test
add
clc
repnz
nop
nop
jae
add
add
push
clc
repnz
nop
nop
jae
ja
dec
add
mov
add
mov
clc
repnz
nop
nop
jae
xor
add
fcoms
nop
nop
jae
popa
pushf
ljmp
rep
nop
push
mov
leave
nop
jmp
add
add
add
lds
test
stc
clc
repnz
nop
nop
jae
roll
inc
add
clc
repnz
nop
nop
jae
add
inc
add
add
fdivrl
les
mov
xchg
ret
add
outsb
pop
add
pop
in
add
nop
push
mov
leave
nop
jmp
and
xchg
xor
mov
popl
clc
repnz
nop
nop
jae
ds
mov
das
imul
clc
repnz
nop
nop
jae
mov
jb
inc
clc
repnz
nop
nop
jae
pop
xor
add
add
dec
testl
nop
push
mov
leave
nop
jmp
add
out
jbe
clc
repnz
nop
nop
jae
roll
xor
lock
jge
clc
repnz
nop
nop
jae
add
add
add
jle
add
aas
jmp
add
add
add
xor
add
add
add
adc
mov
cld
nop
nop
jae
mov
inc
fstl
repnz
nop
nop
jae
fs
jo
scas
ficomps
push
mov
leave
nop
jmp
add
pushf
add
mov
clc
repnz
nop
nop
jae
add
add
add
jmp
fs
mov
add
stc
pop
pop
clc
repnz
nop
nop
jae
pusha
xchg
add
add
push
add
mov
add
clc
repnz
nop
nop
jae
stc
inc
add
jo
inc
push
xchg
call
clc
repnz
nop
nop
jae
add
add
cld
nop
nop
jae
add
jno
stos
shll
xchg
mov
nop
push
mov
leave
nop
jmp
add
add
xor
add
add
nop
nop
jae
push
outsb
add
add
cmp
add
push
clc
repnz
nop
nop
jae
or
add
jle
pop
add
and
clc
repnz
nop
nop
jae
leave
add
add
loopne
jle
rcll
add
jle
lds
pop
mov
fs
add
push
add
lods
add
or
add
and
add
clc
repnz
nop
nop
jae
add
ljmp
pusha
sbb
add
clc
repnz
nop
nop
jae
add
xor
add
push
clc
repnz
nop
nop
jae
add
pop
outsb
add
pop
add
push
mov
xchg
ret
xor
adc
and
add
cmpl
nop
push
mov
leave
nop
jmp
add
pop
lahf
add
push
push
mov
xchg
ret
fisttps
or
add
pop
mov
lea
add
add
add
incl
leave
dec
add
push
mov
xchg
ret
add
std
stc
add
add
add
and
add
pop
clc
repnz
nop
nop
jae
addl
roll
mov
clc
repnz
nop
nop
jae
fbld
add
add
jb
je
clc
repnz
nop
nop
jae
fdivrp
add
add
clc
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
add
jb
outsb
and
nop
push
mov
leave
nop
jmp
add
xor
add
jno
add
repnz
nop
nop
jae
add
add
jae
clc
repnz
nop
nop
jae
add
xor
leave
cmp
mov
add
dec
push
mov
ret
scas
cmp
add
sahf
add
add
test
add
add
mov
nop
push
mov
leave
nop
jmp
add
cmp
push
clc
repnz
nop
nop
jae
add
add
xor
rorl
test
and
add
repnz
nop
nop
jae
add
cmp
fld1
push
mov
xchg
ret
addl
xchg
xor
les
add
or
test
xchg
ret
add
add
arpl
mov
cmp
add
xor
push
clc
repnz
nop
nop
jae
add
mov
add
pop
pusha
push
mov
xchg
ret
add
cmp
filds
mov
clc
repnz
nop
nop
jae
mov
pop
sarb
dec
inc
lahf
mov
nop
push
mov
leave
nop
jmp
add
add
leave
mov
inc
inc
add
nop
push
mov
leave
nop
jmp
std
add
filds
mov
add
aas
pop
push
mov
xchg
ret
lahf
add
mov
mov
es
nop
push
mov
leave
nop
jmp
add
fildll
fwait
xchg
xchg
clc
repnz
nop
nop
jae
dec
stos
add
scas
add
clc
repnz
nop
nop
jae
add
add
adc
nop
jmp
ja
add
lods
lea
clc
repnz
nop
nop
jae
add
pop
add
add
clc
repnz
nop
nop
jae
add
incl
add
fistpll
clc
repnz
nop
nop
jae
add
scas
gs
clc
repnz
nop
nop
jae
add
pop
add
clc
dec
and
clc
repnz
nop
nop
jae
add
or
nop
nop
jae
push
pusha
add
fs
mov
clc
repnz
nop
nop
jae
stc
add
cli
mov
repnz
nop
nop
jae
pop
add
pop
pusha
pop
pop
clc
repnz
nop
nop
jae
stc
arpl
add
add
clc
repnz
nop
nop
jae
add
dec
filds
leave
dec
inc
fld1
push
mov
xchg
ret
in
add
add
nop
push
mov
leave
nop
jmp
mov
lahf
scas
ds
add
clc
repnz
nop
nop
jae
ds
add
push
clc
repnz
nop
nop
jae
cli
add
mov
sub
add
pop
nop
push
mov
leave
nop
jmp
lcall
scas
scas
push
clc
repnz
nop
nop
jae
pop
add
add
je
add
or
adc
add
add
ja
or
add
cltd
push
push
mov
xchg
ret
pop
stc
add
jno
add
add
sbb
mov
leave
nop
jmp
outsb
stos
add
xor
int3
mov
jb
repnz
nop
nop
jae
add
jmp
and
add
add
ljmp
add
stos
add
mov
add
add
clc
repnz
nop
nop
jae
add
inc
jmp
repnz
nop
nop
jae
add
add
std
add
pop
sub
add
je
nop
push
mov
leave
nop
jmp
add
xor
les
repnz
nop
nop
jae
add
test
add
push
mov
xchg
ret
jmp
mov
addr16
clc
repnz
nop
nop
jae
xor
add
iret
mov
clc
repnz
nop
nop
jae
add
add
inc
add
pop
lods
clc
repnz
nop
nop
jae
xor
ljmp
xor
pop
push
mov
xchg
ret
lahf
xor
pop
filds
scas
xor
add
clc
repnz
nop
nop
jae
lds
mov
add
xchg
sub
push
mov
xchg
ret
out
add
pop
cli
stc
popa
clc
repnz
nop
nop
jae
adc
add
add
add
jle
inc
add
test
adc
add
test
cld
nop
nop
jae
dec
mov
repnz
nop
nop
jae
dec
push
leave
sbb
aas
lea
clc
repnz
nop
nop
jae
pop
out
add
add
or
repnz
nop
nop
jae
lds
pop
add
pusha
nop
push
mov
leave
nop
jmp
add
cmp
pushf
xor
add
add
js
add
add
add
lcall
inc
add
add
add
pushf
add
add
clc
repnz
nop
nop
jae
add
add
xor
clc
repnz
nop
nop
jae
add
add
add
mov
cltd
and
clc
repnz
nop
nop
jae
add
add
outsl
fld1
clc
repnz
nop
nop
jae
add
mov
xor
add
nop
jmp
outsb
ljmp
sbb
add
clc
repnz
nop
nop
jae
rcrl
stc
and
add
xor
call
leave
nop
jmp
add
cli
add
mov
add
clc
repnz
nop
nop
jae
mov
mov
out
clc
clc
repnz
nop
nop
jae
add
lcall
cld
nop
nop
jae
add
add
jo
jnp
les
repnz
nop
nop
jae
xor
pop
add
test
add
lcall
cld
nop
nop
jae
add
pop
out
stos
ret
clc
repnz
nop
nop
jae
add
add
rorl
add
xor
sbb
push
mov
xchg
ret
add
add
subl
add
nop
jmp
add
arpl
jne
push
mov
xchg
ret
add
add
add
clc
repnz
nop
nop
jae
pusha
add
test
popa
clc
repnz
nop
nop
jae
xor
pop
xor
mov
sbb
push
mov
xchg
ret
add
leave
pusha
add
dec
cmpl
nop
push
mov
leave
nop
jmp
add
sbb
shl
nop
push
mov
leave
nop
jmp
ffreep
dec
add
xor
push
mov
xchg
ret
mov
addl
adc
loopne
clc
repnz
nop
nop
jae
pop
or
add
nop
push
mov
leave
nop
jmp
leave
filds
lds
add
jp
push
nop
push
mov
leave
nop
jmp
add
xor
popa
mov
les
push
mov
xchg
ret
incl
pusha
scas
les
dec
push
clc
repnz
nop
nop
jae
dec
xor
outsb
add
add
repnz
nop
nop
jae
pop
jo
add
les
push
mov
xchg
ret
dec
outsb
filds
xor
mov
add
clc
repnz
nop
nop
jae
fisubrs
pop
add
add
test
nop
nop
jae
and
add
notl
nop
jmp
add
roll
add
test
sbb
add
repnz
nop
nop
jae
add
ret
push
or
repnz
nop
nop
jae
add
adc
sub
add
jno
add
add
and
add
add
add
leave
nop
jmp
pop
add
lcall
nop
jae
leave
add
xor
dec
add
sub
add
repnz
nop
nop
jae
xchg
pop
mov
add
insl
sub
clc
repnz
nop
nop
jae
les
dec
fists
loope
clc
repnz
nop
nop
jae
add
add
add
adc
repnz
nop
nop
jae
pop
mov
add
out
and
nop
push
mov
leave
nop
jmp
dec
add
add
repnz
nop
nop
jae
les
pop
add
cmp
cld
nop
nop
jae
add
pop
lahf
add
nop
push
mov
leave
nop
jmp
ds
ja
jmp
in
leave
nop
jmp
mov
add
sub
add
lock
and
mov
leave
nop
jmp
add
pusha
arpl
ret
clc
repnz
nop
nop
jae
xchg
stc
mov
xor
pop
mov
push
clc
repnz
nop
nop
jae
add
not
push
mov
xchg
ret
or
pop
xor
nop
push
mov
leave
nop
jmp
mov
filds
dec
mov
xchg
inc
add
add
dec
add
mov
inc
bound
repnz
nop
nop
jae
add
add
add
add
push
pop
mov
clc
repnz
nop
nop
jae
add
scas
jb
pop
call
clc
repnz
nop
nop
jae
add
andl
push
add
repnz
nop
nop
jae
add
add
xor
repnz
nop
nop
jae
add
out
outsb
add
add
loope
push
mov
xchg
ret
add
ljmp
push
mov
leave
nop
jmp
mov
add
pushf
fiaddl
sbb
xbegin
jae
add
add
push
clc
repnz
nop
nop
jae
add
pop
fs
std
cmp
pusha
clc
repnz
nop
nop
jae
add
dec
add
xor
mov
repnz
nop
nop
jae
mov
outsb
add
jl
popa
clc
repnz
nop
nop
jae
add
add
add
mov
add
add
add
popa
lahf
stc
outsb
add
add
add
jmp
call
add
add
pop
sbb
pushf
inc
cmp
sar
cld
nop
nop
jae
or
xor
mov
xor
clc
repnz
nop
nop
jae
add
xor
test
add
ror
push
mov
xchg
ret
pop
add
ja
pushf
pop
pop
imul
nop
nop
jae
add
add
mov
pop
push
mov
xchg
ret
add
in
pop
stc
fiadds
lcall
mov
xchg
ret
add
xor
add
xchg
add
add
clc
repnz
nop
nop
jae
add
add
add
dec
mov
xchg
ret
popa
add
add
add
add
push
clc
repnz
nop
nop
jae
cmp
leave
cli
cli
mov
cmpl
cld
nop
nop
jae
outsb
xor
outsb
cmp
cld
nop
nop
jae
dec
leave
mov
pop
push
mov
xchg
ret
add
add
add
add
add
rcrl
repnz
nop
nop
jae
add
cmp
add
push
or
add
add
popa
clc
repnz
nop
nop
jae
roll
inc
or
add
rorl
adc
add
add
xchg
adcl
stc
call
nop
jmp
add
add
nop
nop
jae
add
fs
add
cmp
sub
clc
repnz
nop
nop
jae
add
sub
repnz
nop
nop
jae
mov
in
in
mov
clc
repnz
nop
nop
jae
mov
add
aaa
mov
clc
repnz
nop
nop
jae
add
outsb
push
or
outsb
inc
add
jb
xor
sbb
sar
cld
nop
nop
jae
popa
add
adc
lods
add
movsl
rep
nop
push
mov
leave
nop
jmp
jb
add
arpl
add
add
push
clc
repnz
nop
nop
jae
add
add
dec
add
add
pop
adc
mov
leave
nop
jmp
add
scas
mov
add
clc
repnz
nop
nop
jae
in
add
pop
arpl
xor
add
push
mov
xchg
ret
add
jno
add
add
nop
nop
jae
rcl
jo
add
add
mov
xchg
inc
add
outsb
add
scas
add
mov
clc
repnz
nop
nop
jae
std
ds
add
arpl
inc
pop
clc
repnz
nop
nop
jae
mov
add
add
test
nop
push
mov
leave
nop
jmp
roll
filds
lcall
mov
leave
nop
jmp
add
mov
enter
nop
nop
jae
add
scas
lcall
mov
clc
repnz
nop
nop
jae
add
mov
mov
das
add
push
mov
xchg
ret
add
add
add
add
push
clc
repnz
nop
nop
jae
ljmp
repnz
nop
nop
jae
add
cli
add
mov
add
pusha
inc
add
adc
xor
add
add
outsl
push
clc
repnz
nop
nop
jae
add
clc
repnz
nop
nop
jae
add
dec
add
add
add
bound
xchg
ret
fistps
scas
fimuls
push
les
clc
repnz
nop
nop
jae
shll
add
add
fucomi
fs
clc
repnz
nop
nop
jae
pusha
cmp
add
test
nop
nop
jae
or
add
fs
nop
jae
add
add
jle
add
xor
push
mov
xchg
ret
lcall
add
cs
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
add
mov
cmp
push
mov
xchg
ret
add
add
add
xchg
nop
push
mov
leave
nop
jmp
add
cmp
add
add
cmp
mov
xchg
ret
xchg
add
add
dec
pop
clc
repnz
nop
nop
jae
roll
xor
jb
add
sbb
push
mov
xchg
ret
shll
add
add
add
push
mov
xchg
ret
add
add
lahf
jae
inc
clc
repnz
nop
nop
jae
add
and
dec
mov
clc
repnz
nop
nop
jae
or
add
add
push
mov
test
cs
call
jb
lds
dec
rep
clc
repnz
nop
nop
jae
xor
add
dec
mov
repnz
nop
nop
jae
add
roll
ljmp
add
nop
push
mov
leave
nop
jmp
add
lcall
fldpi
push
mov
xchg
ret
add
add
add
jecxz
roll
repnz
nop
nop
jae
add
jno
add
mov
clc
repnz
nop
nop
jae
jno
mov
push
clc
repnz
nop
nop
jae
fs
jle
aam
jecxz
add
nop
push
mov
leave
nop
jmp
add
jle
add
cmp
mov
clc
repnz
nop
nop
jae
inc
add
add
clc
repnz
nop
nop
jae
pushf
add
fs
sbb
inc
in
clc
repnz
nop
nop
jae
add
out
jno
add
jg
clc
repnz
nop
nop
jae
arpl
jle
add
mov
clc
repnz
nop
nop
jae
cmp
rorl
jb
add
cmp
sar
repnz
nop
nop
jae
pushf
add
add
mov
clc
repnz
nop
nop
jae
add
add
cli
add
mov
xchg
ret
mov
jo
add
incb
clc
repnz
nop
nop
jae
lahf
add
add
mov
clc
repnz
nop
nop
jae
add
add
add
jg
clc
repnz
nop
nop
jae
add
add
or
jnp
inc
add
leave
xor
repz
repnz
nop
nop
jae
add
add
add
test
add
clc
repnz
nop
nop
jae
cmp
add
loopne
sbb
clc
repnz
nop
nop
jae
add
arpl
jbe
adc
in
add
fwait
clc
repnz
nop
nop
jae
add
add
std
fiadds
add
mov
xchg
ret
arpl
add
xchg
bnd
add
fld
jmp
nop
nop
jae
lds
cmp
push
and
add
add
xor
xor
add
adc
repnz
nop
nop
jae
add
mov
clc
repnz
nop
nop
jae
mov
add
pop
add
cld
nop
nop
jae
xor
add
add
pushf
fiadds
add
push
mov
leave
nop
jmp
add
filds
fucomip
pop
addb
fwait
mov
push
mov
xchg
ret
add
popa
push
lret
dec
cmp
repnz
nop
nop
jae
pusha
add
dec
jle
push
les
inc
push
mov
xchg
ret
inc
fs
xor
ds
fildl
in
leave
nop
jmp
pop
pushf
or
movzwl
clc
repnz
nop
nop
jae
pop
and
lds
push
mov
xchg
ret
sarl
sbb
add
add
add
pop
mov
push
mov
xchg
ret
add
pop
pop
scas
add
push
mov
leave
nop
jmp
add
mov
fisttpl
nop
nop
jae
add
add
xlat
rep
clc
repnz
nop
nop
jae
pushf
add
add
sar
repnz
nop
nop
jae
outsb
adc
rcll
clc
repnz
nop
nop
jae
xor
add
pop
clc
repnz
nop
nop
jae
incl
add
pushf
add
pushf
push
add
fs
adc
mov
xchg
ret
pusha
sarl
add
pop
nop
push
mov
leave
nop
jmp
stos
mov
pop
xor
add
xor
call
nop
jmp
xchg
add
sbb
dec
xor
nop
nop
jae
stc
add
mov
xor
add
test
nop
nop
jae
add
pop
fiadds
fiadds
add
mov
xchg
ret
add
add
add
add
add
add
les
cld
nop
nop
jae
add
add
adc
mov
rcll
repnz
nop
nop
jae
add
in
add
in
mov
push
mov
xchg
ret
add
add
jo
pop
sub
add
call
clc
repnz
nop
nop
jae
add
pop
and
mov
xchg
ret
mov
test
repnz
nop
nop
jae
jb
add
add
jmp
nop
push
mov
leave
nop
jmp
add
add
in
add
pop
dec
testl
clc
repnz
nop
nop
jae
test
add
add
stos
nop
push
mov
leave
nop
jmp
outsb
stc
or
add
add
jns
enter
nop
nop
jae
add
mov
lcall
cld
nop
nop
jae
add
add
sbb
dec
xor
push
push
mov
xchg
ret
pop
add
add
dec
add
add
mov
inc
add
jle
add
clc
repnz
nop
nop
jae
add
jo
add
outsb
pusha
mov
clc
clc
repnz
nop
nop
jae
add
add
les
lret
nop
push
mov
leave
nop
jmp
rorl
lcall
dec
cmp
push
mov
leave
nop
jmp
add
add
sarl
push
mov
xchg
ret
mov
xor
jno
cwtl
push
add
enter
addb
fisttpl
nop
nop
jae
popa
dec
add
test
mov
clc
repnz
nop
nop
jae
popa
add
mov
clc
repnz
nop
nop
jae
add
add
mov
xchg
ret
lds
xor
clc
repnz
nop
nop
jae
xor
add
jg
clc
repnz
nop
nop
jae
les
add
push
mov
leave
nop
jmp
dec
add
add
fiadds
jb
pushl
clc
repnz
nop
nop
jae
xor
add
xor
push
clc
repnz
nop
nop
jae
add
add
push
mov
leave
nop
jmp
add
add
xchg
ja
repz
repnz
nop
nop
jae
add
lahf
pop
add
sbb
jg
nop
push
mov
leave
nop
jmp
fbstp
add
add
add
mov
clc
repnz
nop
nop
jae
mov
out
adc
and
add
test
clc
repnz
nop
nop
jae
add
pop
jne
clc
repnz
nop
nop
jae
std
add
add
dec
pushf
mov
pause
push
mov
leave
nop
jmp
dec
add
leave
jo
add
jns
clc
repnz
nop
nop
jae
add
lds
into
shrb
lods
push
mov
xchg
ret
add
add
add
add
mov
clc
repnz
nop
nop
jae
push
fs
sarl
or
add
jne
nop
push
mov
leave
nop
jmp
fbld
gs
clc
repnz
nop
nop
jae
add
add
outsb
les
clc
repnz
nop
nop
jae
outsb
ljmp
add
pop
mov
clc
repnz
nop
nop
jae
jb
sbb
xchg
test
add
nop
jae
and
jbe
mov
clc
repnz
nop
nop
jae
pop
ja
filds
add
nop
nop
jae
add
add
vpsubsb
repnz
nop
nop
jae
push
jle
add
jno
ret
clc
repnz
nop
nop
jae
or
add
les
add
add
mov
clc
repnz
nop
nop
jae
add
add
mov
pop
cld
cwtl
cmp
mov
leave
nop
jmp
xor
std
add
mov
and
inc
add
add
add
fs
jmp
loop
clc
repnz
nop
nop
jae
add
roll
fisubs
add
hlt
xchg
clc
repnz
nop
nop
jae
and
add
fistpl
and
repnz
nop
nop
jae
add
mov
add
add
repnz
nop
nop
jae
std
add
repnz
nop
nop
jae
jle
jle
xor
push
add
add
sub
add
add
fisubl
add
aad
test
add
clc
repnz
nop
nop
jae
leave
add
mov
push
mov
xchg
ret
xor
add
leave
and
mov
xchg
ret
lahf
push
add
mov
aaa
fwait
push
mov
xchg
ret
add
add
cli
mov
repz
clc
repnz
nop
nop
jae
add
cli
fdivp
jecxz
test
repnz
nop
nop
jae
add
cmp
add
push
mov
xchg
ret
add
outsb
incl
xor
push
mov
leave
nop
jmp
add
add
dec
add
clc
repnz
nop
nop
jae
cli
add
add
pop
clc
repnz
nop
nop
jae
arpl
pusha
add
fidivs
call
clc
repnz
nop
nop
jae
std
filds
jno
call
clc
repnz
nop
nop
jae
sbb
mov
nop
push
mov
leave
nop
jmp
test
mov
mov
nop
push
mov
leave
nop
jmp
add
push
jo
add
addl
pop
inc
add
pop
lcall
add
cmp
push
add
xor
add
mov
test
pop
add
clc
repnz
nop
nop
jae
add
nop
push
mov
leave
nop
jmp
pop
add
fs
add
pop
mov
clc
repnz
nop
nop
jae
dec
dec
leave
lcall
add
add
test
xchg
ret
les
add
add
add
add
imul
clc
repnz
nop
nop
jae
fistps
cmp
mov
xchg
ret
lahf
xor
add
add
ret
add
mov
popa
pop
ljmp
xor
addb
jl
mov
push
mov
xchg
ret
pop
add
dec
filds
add
xchg
add
or
cld
nop
nop
jae
add
in
add
int
push
mov
xchg
ret
ljmp
add
adc
add
push
mov
xchg
ret
add
push
mov
push
mov
xchg
ret
jno
popa
add
add
add
sbb
repnz
nop
nop
jae
jo
add
cmp
push
mov
xchg
ret
pop
in
add
add
add
test
repnz
clc
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
shll
mov
clc
repnz
nop
nop
jae
add
aad
clc
repnz
nop
nop
jae
add
mov
cmp
mov
clc
repnz
nop
nop
jae
test
stos
clc
repnz
nop
nop
jae
mov
add
mov
repnz
nop
nop
jae
add
add
addb
jecxz
sar
cld
nop
nop
jae
sbb
or
imul
cmp
repnz
nop
nop
jae
jb
lahf
add
leave
sbb
repnz
nop
nop
jae
add
iret
push
clc
repnz
nop
nop
jae
add
add
in
pop
jnp
add
nop
push
mov
leave
nop
jmp
add
jo
add
nop
push
mov
leave
nop
jmp
add
add
adc
add
repnz
nop
nop
jae
mov
lock
mov
xchg
ret
scas
filds
add
vminss
add
nop
push
mov
leave
nop
jmp
pop
stc
stos
je
push
push
mov
xchg
ret
pop
add
add
rcr
clc
repnz
nop
nop
jae
add
add
mov
nop
nop
jae
add
ljmp
xchg
push
mov
xchg
ret
mov
or
rorb
mov
xchg
ret
incl
pop
add
sbb
fs
fld1
clc
repnz
nop
nop
jae
in
inc
leave
addl
jge
nop
push
mov
leave
nop
jmp
pushf
add
shll
mov
clc
repnz
nop
nop
jae
add
or
add
add
test
call
cld
nop
nop
jae
std
roll
adc
pushl
cli
ficoms
add
push
add
add
sub
sub
nop
jmp
add
push
push
mov
xchg
ret
jmp
push
push
add
stc
fsubrp
je
clc
repnz
nop
nop
jae
leave
std
add
cmp
nop
push
mov
leave
nop
jmp
add
mov
ret
push
mov
xchg
ret
add
pop
pop
scas
add
add
add
arpl
repnz
nop
nop
jae
xchg
jno
add
cld
nop
nop
jae
add
push
outsb
add
jl
xor
xchg
je
add
outsb
add
sub
pop
loopne
jmp
add
add
add
xor
add
rclb
cld
nop
nop
jae
add
std
add
les
movb
repnz
nop
nop
jae
mov
add
add
clc
repnz
nop
nop
jae
stos
add
inc
fistpl
clc
repnz
nop
nop
jae
ljmp
xor
xchg
mov
leave
nop
jmp
test
add
xchg
jne
nop
push
mov
leave
nop
jmp
add
add
nop
pop
sub
push
mov
leave
nop
jmp
add
adc
pop
mov
nop
push
mov
leave
nop
jmp
inc
jle,pt
jg
clc
repnz
nop
nop
jae
pop
add
mov
fisttpll
push
mov
xchg
ret
add
std
scas
xor
pop
dec
mov
clc
repnz
nop
nop
jae
les
pusha
loope
je
add
clc
repnz
nop
nop
jae
stos
fisubs
mov
xor
repnz
nop
nop
jae
add
add
bnd
adc
clc
repnz
nop
nop
jae
add
add
cli
mov
nop
nop
jae
filds
add
in
lds
inc
jmp
mov
js
add
add
add
fisttpl
cli
sar
push
loopne
repnz
nop
nop
jae
add
dec
add
or
clc
repnz
nop
nop
jae
pusha
xor
xor
mov
nop
push
mov
leave
nop
jmp
stc
add
add
push
int
sar
repnz
nop
nop
jae
adc
add
lods
add
mov
nop
nop
jae
add
incl
ja
pop
ljmp
nop
jae
pop
add
pushl
fsubp
and
clc
repnz
nop
nop
jae
les
add
lods
add
and
add
adc
repnz
nop
nop
jae
and
xor
fbstp
mov
add
pop
add
add
repnz
nop
nop
jae
add
add
jne
clc
repnz
nop
nop
jae
add
scas
add
mov
pop
or
push
mov
leave
nop
jmp
jno
ljmp
push
mov
xchg
ret
add
add
add
lahf
add
adc
nop
push
mov
leave
nop
jmp
test
mov
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
out
pop
add
add
xchg
add
nop
nop
jae
arpl
dec
lcall
addl
out
add
pushf
add
add
testl
add
pop
inc
pushf
arpl
pushf
add
pop
pushl
clc
repnz
nop
nop
jae
add
in
add
nop
push
mov
leave
nop
jmp
add
pop
add
mov
clc
repnz
nop
nop
jae
add
pop
mov
jl
movzwl
clc
repnz
nop
nop
jae
push
add
jb
jbe
jmp
leave
add
cli
inc
stos
dec
add
xor
adc
stc
clc
repnz
nop
nop
jae
add
xor
arpl
jecxz
inc
add
cmp
and
mov
push
clc
repnz
nop
nop
jae
add
jle
mov
mov
xchg
ret
dec
add
add
xor
push
mov
xchg
ret
add
roll
add
add
xchg
add
aaa
dec
aam
add
ret
add
add
clc
repnz
nop
nop
jae
mov
sbb
adc
add
clc
repnz
nop
nop
jae
add
add
filds
mov
add
add
push
mov
xchg
ret
add
add
xchg
scas
mov
add
icebp
pop
push
mov
xchg
ret
popa
add
add
add
add
clc
repnz
nop
nop
jae
dec
dec
stos
in
stos
scas
ja
xor
push
mov
xchg
ret
add
pop
pusha
or
repnz
nop
nop
jae
add
add
push
clc
repnz
nop
nop
jae
cmp
pop
add
dec
add
mov
adc
repnz
nop
nop
jae
add
add
nop
push
mov
leave
nop
jmp
add
cli
add
add
pushf
jo
push
mov
add
mov
imul
cld
nop
nop
jae
outsb
mov
jno
nop
push
mov
leave
nop
jmp
adc
mov
mov
add
clc
repnz
nop
nop
jae
inc
adc
dec
cmp
repnz
nop
nop
jae
jo
add
add
jnp
adc
mov
xchg
ret
in
push
jle
add
pop
mov
clc
repnz
nop
nop
jae
xor
pop
roll
fistpl
push
mov
xchg
ret
in
jo
jb
add
xor
addb
movsb
add
and
add
test
nop
push
mov
leave
nop
jmp
pop
add
add
leave
arpl
sbb
clc
repnz
nop
nop
jae
lcall
div
nop
push
mov
leave
nop
jmp
popa
std
add
ffreep
add
add
add
mov
clc
repnz
nop
nop
jae
out
mov
ljmp
clc
repnz
nop
nop
jae
xor
mov
repnz
nop
nop
jae
add
add
jno
add
add
add
out
mov
nop
push
mov
leave
nop
jmp
mov
rol
loop
nop
push
mov
leave
nop
jmp
add
add
ds
push
nop
push
mov
leave
nop
jmp
lds
dec
shll
pop
clc
repnz
nop
nop
jae
roll
add
scas
sub
clc
repnz
nop
nop
jae
add
add
subl
push
mov
xchg
ret
filds
add
add
nop
nop
jae
add
add
roll
lcall
clc
repnz
nop
nop
jae
xchg
add
arpl
add
dec
mov
clc
repnz
nop
nop
jae
add
fstl
push
mov
leave
nop
jmp
ljmp
lds
add
jle
cmp
xrelease
push
mov
xchg
ret
pop
filds
lahf
roll
or
mov
xchg
ret
leave
add
inc
ret
clc
repnz
nop
nop
jae
add
leave
pop
add
jne
push
mov
xchg
ret
xor
add
adc
inc
out
clc
repnz
nop
nop
jae
sbb
add
aaa
push
clc
repnz
nop
nop
jae
add
add
cmp
jmp
nop
nop
jae
add
add
xchg
add
cli
cmp
repnz
nop
nop
jae
add
add
out
sbb
nop
jae
cmp
add
push
jae
cli
nop
push
mov
leave
nop
jmp
add
stc
cmpl
pop
dec
push
mov
xchg
ret
push
stos
add
inc
add
mov
cld
nop
nop
jae
add
xchg
jecxz
shrl
push
mov
leave
nop
jmp
pop
add
out
add
push
add
lret
imul
clc
repnz
nop
nop
jae
lahf
add
pop
lcall
cmpl
nop
jae
pusha
add
add
fs
nop
push
mov
leave
nop
jmp
inc
add
lcall
cld
nop
nop
jae
add
jo
add
add
mov
ss
repnz
nop
nop
jae
cli
xchg
add
pop
std
add
mov
nop
push
mov
leave
nop
jmp
filds
sarl
or
cld
nop
nop
jae
arpl
leave
stc
addl
loop
mov
push
mov
xchg
ret
lahf
add
add
scas
add
mov
push
mov
xchg
ret
add
fs
add
jmp
mov
xchg
ret
lahf
add
add
add
ret
push
clc
repnz
nop
nop
jae
ffreep
pusha
mov
jne
nop
push
mov
leave
nop
jmp
jo
std
nop
sub
aas
test
xchg
ret
add
add
ja
test
nop
nop
jae
pusha
add
std
or
add
pop
clc
repnz
nop
nop
jae
add
add
add
call
nop
jmp
add
add
mov
insb
outsl
rep
clc
repnz
nop
nop
jae
add
xor
sbb
inc
sub
add
mov
push
mov
xchg
ret
rorl
add
add
rcr
push
push
add
shlb
push
mov
xchg
ret
or
add
cmp
leave
add
cmp
nop
push
mov
leave
nop
jmp
xor
add
push
push
mov
xchg
ret
pop
add
dec
dec
outsb
mov
jbe
nop
push
mov
leave
nop
jmp
add
test
test
nop
push
mov
leave
nop
jmp
add
add
add
nop
push
mov
leave
nop
jmp
add
mov
mov
push
mov
xchg
ret
pushf
jle
add
popa
add
je
add
add
add
add
push
add
push
icebp
clc
repnz
nop
nop
jae
or
arpl
add
add
fs
mov
pop
aaa
mov
clc
repnz
nop
nop
jae
outsb
ljmp
inc
and
clc
repnz
nop
nop
jae
pop
stc
outsb
mov
cld
or
in
leave
nop
jmp
dec
add
jae
add
add
clc
repnz
nop
nop
jae
lds
add
push
mov
xchg
ret
lcall
add
clc
clc
repnz
nop
nop
jae
pop
leave
adc
nop
pop
push
mov
dec
jecxz
push
xor
insl
sti
add
jns
dec
aas
cmp
mov
sub
add
push
nop
and
add
pop
dec
fadd
xchg
cli
das
sub
add
push
pop
or
add
xor
sub
add
inc
lret
inc
stos
stc
rolb
divl
jns
add
out
mov
dec
sub
add
fdivs
lcall
cmp
push
scas
add
popf
mov
cmp
add
add
push
add
pop
out
adc
aaa
pop
ret
aad
add
mov
add
sti
mov
andl
or
add
movsl
mov
xor
fidivs
mov
mov
sub
mov
jl
fs
dec
mov
jb
mov
jae
addb
and
xchg
out
iret
ljmp
fbld
and
add
xchg
ja
xor
mov
cwtl
jo
add
addb
dec
movzbl
pop
xchg
push
testb
ja
cld
rorb
push
cwtl
xor
fwait
inc
out
ret
push
sbb
loopne
jbe
add
iret
sbb
fbld
add
jmp
lods
add
cmc
cmp
mov
add
add
sbb
cmp
sub
add
add
scas
add
mov
or
add
add
dec
mov
add
xlat
sub
jmp
movsl
or
add
aad
or
sub
xchg
and
dec
cli
loopne
pop
mov
add
into
scas
repz
jmp
sub
push
fstpl
pop
mov
jl
sub
add
cmc
in
add
cmp
outsb
sub
add
loope
and
test
fadds
sbb
fsts
push
into
les
add
or
inc
mov
push
fnstcw
sub
add
add
lea
cmpsb
add
mov
push
shl
push
nop
outsb
loopne
test
pop
and
and
call
data16
test
add
add
jl
lds
cwtl
cmp
jb
cmpsb
add
das
xor
dec
comiss
loopne
cmp
mov
add
jmp
add
int
cmp
push
add
jge
out
sub
add
pusha
lds
ds
pop
ljmp
add
in
mov
sar
test
add
outsl
in
xor
lea
add
mov
test
popf
mov
add
xor
test
addb
jge
pushf
xchg
sub
add
data16
cmp
lods
xchg
xlat
call
add
dec
mov
popf
jne
dec
divb
inc
cwtl
insl
xchg
add
das
push
dec
insl
aam
sub
add
arpl
add
nop
aaa
cmc
jg
jecxz
aaa
test
add
loopne
js
adc
add
addb
je
add
add
adc
mov
jnp
add
push
mov
xor
inc
cmp
jne
lea
mov
adc
add
xor
inc
cmpsb
add
ljmp
add
enter
outsb
push
out
scas
add
andl
mov
add
add
add
mov
or
cli
shlb
add
outsb
nop
fnstcw
mov
add
sbb
ret
dec
add
out
mov
jae
cmpsb
add
cmp
add
icebp
mov
jns
pop
xchg
add
adc
adc
iret
dec
aaa
popa
cmp
shrl
cmp
add
gs
add
inc
push
lret
mov
add
das
pop
ss
push
cwtl
and
add
mov
lahf
test
add
insb
mov
add
in
pop
pop
movsb
add
xchg
push
movsl
cmc
jmp
fstpl
rcll
das
pop
insl
jge
push
imul
push
cmpsb
add
sbb
int
add
sub
test
aad
mov
mov
add
xchg
pop
lcall
stos
add
imul
clc
aad
lock
push
mov
cwtl
push
popf
mov
sbb
das
xor
ljmp
in
jg
out
or
add
or
mulb
add
xchg
inc
out
mov
cmp
repz
in
cmpsl
push
bound
adc
or
into
push
sahf
ljmp
add
in
fidivs
jp
add
dec
fdivrs
pusha
fdivl
std
inc
and
add
add
adc
mov
add
xchg
add
fs
push
jnp
daa
push
fs
dec
leave
mov
add
out
cmp
add
popa
fs
pop
int
push
lahf
test
add
dec
inc
iret
mov
add
mov
inc
dec
jns
ror
in
aad
aam
daa
idivb
sub
add
add
lret
aaa
and
inc
xor
addb
jno
add
gs
add
add
addr16
add
iret
mov
push
push
ss
add
sbb
push
sbb
enter
cmp
idiv
mov
inc
xor
dec
aad
pop
jp
jb
inc
mov
add
addb
ficomps
jg
add
mov
mov
add
clc
dec
out
jmp
pop
xchg
shrb
data16
add
imull
mov
lds
sbb
addl
push
push
xor
das
or
cmpsb
add
cmpsb
add
aas
push
add
dec
push
and
add
aad
xchg
lcall
ja
outsb
callw
add
xor
stos
mov
jns
pop
fidivl
inc
repnz
xchg
cmp
mov
add
xchg
sarl
jb
sbb
mov
or
and
rcll
in
movsb
add
push
inc
inc
jp
and
stos
add
mov
loop
or
ss
push
cmp
push
xchg
pop
mov
mov
pop
pop
dec
lock
mov
dec
mov
mov
add
mov
mull
add
push
and
add
int3
add
mov
lahf
jne
add
jge
lea
push
sub
jmp
outsl
iret
shlb
add
cmp
cmp
jg
xor
inc
push
fmuls
and
test
cmp
xor
pop
insb
mov
pop
js
inc
and
add
outsl
lea
icebp
sub
add
cld
repnz
sbbl
imul
call
out
or
xchg
add
push
mov
xchg
fldl
add
mov
js
xchg
das
xchg
arpl
add
cmpsb
add
decb
std
fwait
lret
arpl
in
popf
pop
inc
sbb
or
add
movb
add
in
imul
inc
aam
push
add
jle
lahf
mov
and
add
xor
movsl
in
xchg
cmp
cmp
sbb
hlt
xor
aaa
xchg
dec
cmp
inc
xchg
mov
add
sub
add
cmp
cmp
leave
hlt
adc
inc
mov
add
cltd
pushf
sub
scas
add
ljmp
and
xor
add
out
jae
jmp
xor
or
add
sti
out
addb
sar
mov
add
js
mov
rorl
add
leave
xor
inc
jl
lret
dec
out
sbb
sti
ja
test
add
add
pop
ret
push
cmp
popf
fdivr
jg
fstpt
push
aam
in
jbe
mov
mov
xchg
add
negb
add
cld
movsb
add
lods
add
lea
add
add
jge
xlat
jmp
aaa
or
jg
mov
lret
jmp
add
aas
sbb
cmp
jnp
xlat
and
add
xor
rcr
mov
push
dec
mov
add
push
iret
pusha
sbbl
add
out
lods
sbb
mov
sbb
testb
add
xor
add
aas
insb
insl
cmpsl
jo
add
mov
push
sbb
dec
leave
movl
dec
and
add
movaps
add
xor
jmp
add
clc
fs
dec
mov
arpl
out
or
add
mov
inc
xor
add
into
push
in
js
jns
add
std
xchg
inc
and
add
jne
add
ljmp
fsubs
jle
icebp
mov
xchg
enter
les
insl
stos
cmp
sti
jno
or
add
fistpll
mov
in
bnd
xchg
leave
mov
sahf
iret
cld
pop
xchg
pushl
aam
lret
hlt
push
iret
imul
int
stc
in
cmpsl
ss
nop
cltd
add
add
push
mov
pop
adc
adc
sbb
mov
add
jnp
jo
jae
pop
sahf
push
cmp
shrb
cmpsl
orl
add
rolb
mov
adc
add
pusha
out
mov
jge,pt
mov
jno
cmp
frstor
iret
int3
cmp
push
in
inc
aas
mov
jmp
sar
xchg
mov
repz
mov
shl
jecxz
cmpsl
ljmp
jae
or
jae
push
add
dec
lea
mov
push
xor
add
pop
jge
out
mov
lahf
addb
aad
adc
in
fnstcw
mov
cmc
test
outsl
xchg
lock
add
outsl
xor
outsl
iret
cmp
ds
xchg
add
dec
aad
xor
xchg
push
cmovge
sub
add
sarb
and
add
pop
pop
sbb
push
imul
add
add
pop
or
add
mov
add
les
add
push
icebp
fwait
push
add
pop
loope
add
cmp
insb
insb
mov
push
inc
jae
ja
xor
add
add
cmp
jne
mov
add
add
xchg
popf
pop
andl
fstp
jo
jg
add
and
add
add
nop
loop
imul
pop
jae
rol
sbb
scas
and
xor
bnd
or
sbb
repz
dec
cmpsl
push
mov
xchg
insl
lcall
xchg
add
add
adc
shll
icebp
inc
or
add
shlb
mov
add
xchg
or
add
xchg
int
test
mov
cltd
aas
movsb
add
jmp
repnz
inc
mov
jmp
outsb
iret
xchg
pushf
idivl
lcall
lahf
cmp
lcall
or
add
in
insb
fs
stos
jb
lret
mov
add
js
dec
out
push
add
std
mov
push
add
mov
lds
add
aas
or
add
scas
add
mov
movsl
adc
push
mov
cld
pop
jbe
inc
xchg
xchg
cmp
pop
gs
xor
add
mov
add
andl
add
dec
popf
jge
sub
add
into
aam
lods
add
cmp
ja
roll
mov
aad
and
lcall
add
add
sub
add
daa
push
fstpt
inc
mov
popa
sub
push
add
cmc
sub
roll
mov
std
sbb
mov
loop
icebp
sub
add
faddp
rcll
inc
addb
inc
push
add
fmuls
fs
into
pop
fisttpl
sbb
xchg
dec
popf
add
add
add
mov
push
add
or
add
and
jp
pop
stos
nop
xchg
pop
mov
add
inc
movsb
add
cmpsl
mov
ret
enter
add
cmpsb
add
push
add
mov
add
push
cwtl
cmpsl
popf
cmp
mov
test
add
add
add
jns
jb
add
add
sbb
push
gs
push
add
repz
mov
iret
stos
add
inc
xchg
repnz
mov
add
orl
add
pop
xor
xor
pop
clc
sahf
outsl
pop
fs
inc
mov
add
add
in
jmp
jb
or
add
sti
xchg
test
add
inc
mov
stc
scas
add
loope
sbb
mov
sti
ret
in
movsl
outsb
xchg
sbb
inc
push
xchg
jg
stc
adc
in
inc
rcl
jns
mov
insb
mov
call
stos
aaa
sub
hlt
lcall
ds
mov
lods
int3
inc
inc
xchg
add
ljmp
ret
mov
add
mov
cmp
jns
adc
test
add
popl
jge
xchg
or
mov
gs
jb
dec
shll
jmp
sbbl
jbe
dec
das
int3
mov
add
lret
add
nop
jbe
mov
aas
flds
cmp
mov
add
mov
or
call
int3
add
add
in
pop
and
add
push
sahf
addb
push
or
add
pop
test
and
add
and
add
jp
insb
aam
lret
add
push
stos
add
xor
outsb
add
add
add
mov
add
lods
add
lret
pusha
leave
lret
lods
xchg
lods
add
add
inc
sub
add
out
inc
sbb
call
adc
add
lock
add
jmp
stos
or
scas
addb
sti
gs
add
fsub
dec
mov
xchg
add
add
test
add
stos
icebp
popa
xchg
add
add
sbb
dec
lea
add
mov
stos
add
mov
xchg
sti
mov
add
sbb
sbb
popa
popa
push
push
push
insb
jmp
sub
xchg
push
inc
sub
sub
add
add
inc
lods
sbb
out
scas
add
adc
add
nop
mov
adc
cmp
xchg
xor
add
stos
push
fstps
fldt
enter
in
addb
shll
cmp
add
sarb
sub
mov
add
push
xchg
mov
add
scas
scas
xchg
clc
xchg
jl
add
dec
psubusw
push
sbb
aas
push
inc
mov
adc
add
mov
add
mov
add
push
xchg
add
sbb
xchg
pop
addb
stos
add
inc
adc
les
pusha
xor
add
test
fbstp
nop
xchg
mov
mov
add
bound
cmp
add
inc
mov
add
add
inc
or
push
mov
pop
sahf
mov
add
mov
adc
mov
notl
add
lret
daa
inc
lret
cmp
add
xchg
shr
mov
test
add
lock
push
aas
pop
icebp
push
add
arpl
add
jmp
outsl
mov
add
add
add
cmp
inc
lods
add
sbb
add
cmp
sub
push
add
push
dec
ja
add
adc
xchg
popf
add
mov
pop
add
add
pop
rolb
sti
xchg
cltd
xchg
lods
into
out
add
jne
ret
add
nop
jge
into
test
add
mov
push
push
push
xchg
jo
dec
mov
adc
sub
add
std
ret
push
add
pusha
pop
pop
add
add
out
and
dec
out
sahf
mov
jl
add
sbb
fiaddl
add
mov
sti
lds
sbb
pop
pop
dec
les
stos
add
add
outsl
sub
mov
add
inc
jge
or
add
pop
pop
adc
rolb
or
or
add
adc
rcrb
scas
mov
stos
out
test
add
pop
test
add
xchg
movsl
jae
xlat
cmp
adc
cmc
divl
mov
add
dec
mov
adc
add
add
add
fisubrl
adc
popl
addb
xor
pop
rcrb
jl
add
jb
out
pop
test
mov
mov
ret
pop
pop
jle
int
cmpsb
add
dec
sub
add
out
mov
loop
mov
dec
dec
addb
mov
clc
adc
pop
jle
cmp
cmp
outsb
enter
je
movsb
add
mov
add
aad
das
movb
cmpsb
add
jmp
mov
in
add
adc
in
or
add
add
flds
add
mov
dec
lods
jmp
int3
cmp
adc
jae
add
adc
xlat
mov
push
lods
xchg
dec
ss
repnz
cmp
mov
add
push
mov
pop
push
jne
adc
add
lea
add
jmp
das
in
mov
add
sub
add
xlat
and
mov
gs
xchg
mov
cld
data16
lahf
and
add
js
add
out
jmp
add
bound
shl
dec
jns
add
jnp
or
add
adc
dec
pushf
push
fimull
add
sub
add
mov
sbb
shlb
mov
add
xchg
in
incl
fstp
and
add
add
push
push
out
sahf
pop
mov
or
cltd
ret
ljmp
push
add
xlat
and
add
gs
in
fisubl
add
int3
sub
pop
shlb
add
mov
gs
mov
imul
je
dec
jno
sbb
sub
add
stos
add
pop
je
out
insl
lret
add
out
add
adc
xor
add
add
add
pop
lcall
adc
push
add
mov
sub
arpl
add
push
test
add
mov
aas
cmpsl
sub
jmp
sbb
mov
lea
dec
or
add
push
iret
imul
add
mov
jae
cli
shll
loopne
stos
popa
stos
add
je
cmc
das
fs
icebp
adc
insl
ds
aas
or
add
xchg
daa
xchg
ss
jnp
js
mov
movsl
aad
int
add
dec
into
test
add
add
dec
push
add
call
push
sub
add
cmpsb
add
stos
add
pop
in
cmp
ss
sub
and
add
and
add
insb
xor
rcrl
add
xchg
sub
jbe
test
lods
add
xor
add
bswap
mov
lcall
mov
add
sub
add
mov
sti
rol
jno
lods
out
shrl
add
jne
rcrl
sbb
and
sub
add
add
add
frstor
add
xchg
or
add
add
add
stc
aam
scas
push
mov
xor
in
mov
add
mov
and
add
je
pop
mov
add
loope
add
add
mov
add
sarb
add
rcll
bound
add
add
add
pop
mov
xchg
pop
mov
fcmovu
jp
out
sti
in
out
add
inc
xchg
and
shl
add
jbe
in
mov
push
add
mov
add
jae
movsb
add
fsubl
adc
shrl
arpl
add
subl
fcoms
mov
mov
add
or
add
add
inc
lret
hlt
or
ret
dec
pushf
inc
cli
dec
test
dec
jmp
push
add
jp
mov
push
pop
mov
jp
push
cmp
adc
mov
sub
add
pop
aaa
lea
add
add
add
mov
add
icebp
adc
add
clc
fsub
jle
adc
mov
mov
pusha
punpcklbw
jb
jle
or
add
jae
mov
add
or
add
sub
add
add
cmp
test
or
push
jb
hlt
test
add
test
add
subl
xor
aad
add
fwait
xchg
leave
stc
sahf
sbb
mov
stos
lea
test
add
add
rcl
mov
add
sbb
cmp
add
or
add
dec
add
add
add
pop
cmp
pop
call
idivl
add
mulb
xorl
add
add
dec
or
divb
sbb
add
js
pushf
aaa
xor
add
push
inc
lahf
cmp
sbb
sbb
add
or
add
cmp
into
xchg
mov
lods
add
add
add
xlat
jecxz
add
out
xchg
add
xchg
lahf
mov
jno
lds
add
sub
jp
aam
movsl
insl
nop
addb
stos
and
add
jmp
dec
inc
andl
mov
push
into
je
aas
mov
add
sbb
or
add
insl
inc
adc
add
cmp
add
jbe
loope
fildll
cwtl
xor
std
jnp
sub
mov
mov
add
mov
cld
jmp
sahf
loop
add
aaa
iret
lock
incb
jle
adc
test
add
push
push
aas
and
dec
gs
adc
push
leave
loopne
lea
dec
mov
add
pop
mov
movsl
rol
sub
push
jo
pop
pop
mov
pop
xchg
jno
add
add
xor
add
sti
push
dec
mov
pushf
push
mov
xchg
out
add
adc
jmp
add
loop
outsb
add
fdivrl
add
repz
jg
in
cli
std
lods
add
pusha
jne
outsl
sarb
sbb
add
add
cli
popf
push
lods
push
popf
xchg
je
in
add
leave
xchg
add
loope
add
sti
fs
in
pop
lock
xor
in
jecxz
pop
mov
pop
mov
jns
mov
add
inc
dec
sti
and
add
insb
int3
mov
ss
outsb
xchg
out
add
and
push
aad
add
into
div
rorb
shlb
and
add
rcll
or
jo
cwtl
jae
rol
mov
push
xor
stc
fst
pop
pop
lcall
int3
montmul
cmpsb
add
mov
add
cmp
add
add
add
out
mov
add
or
addb
adc
mov
push
repz
inc
pop
jns
inc
lock
push
sub
popf
mov
scas
add
sbb
in
sub
add
call
mov
cli
cmp
jmp
add
loope
out
add
sbb
cmp
gs
add
cli
xchg
xchg
js
add
mov
cmp
mov
test
add
add
enter
cmp
call
xor
and
add
aad
ss
and
add
add
add
insb
and
fldenv
add
add
arpl
adcl
fdivrl
or
rorb
dec
or
add
xchg
mov
add
mov
add
jbe
add
iret
std
mov
add
adc
jno
add
addr16
hlt
bnd
add
push
adc
lahf
jo
fnstcw
arpl
pushf
les
test
add
inc
add
add
add
or
add
addb
dec
aas
pop
cmp
in
push
pop
cmpsl
lods
addr16
ret
cwtl
addb
cld
sub
mov
shlb
nop
aas
ficoms
mov
add
xchg
mov
xor
imul
movsl
mov
add
data16
mov
jnp
rclb
add
add
ja
int3
nop
or
add
in
lahf
or
add
dec
mov
sbb
sub
add
pop
xchg
enter
sbb
pop
cmp
movsb
add
sub
push
sahf
fwait
jle
mov
push
adc
mov
add
add
loop
cmp
scas
movb
lea
add
sti
out
mov
rorl
call
lock
test
pop
fwait
jnp
loope
sti
xchg
add
cltd
mov
inc
aas
jno
sahf
pop
arpl
mov
add
add
sub
xchg
pop
jmp
push
out
mov
cmp
gs
fucomip
cmc
xchg
js
and
add
pop
adc
cmc
in
inc
sahf
or
int3
xlat
xor
lret
mov
add
mov
add
adc
add
cmp
in
mov
lretw
add
sub
add
cltd
ja
sbb
cld
push
aam
iret
inc
sbb
jg
xchg
mov
add
dec
enter
test
add
mov
repz
movsb
add
xlat
clc
jp
out
dec
inc
ret
add
out
loope
je
mov
mov
add
add
push
add
pop
addb
or
add
jne
icebp
push
cmpsl
jle
js
inc
sub
add
divb
pop
stos
add
jmp
mov
popf
push
add
aad
push
test
mov
add
inc
leave
dec
icebp
adc
add
hlt
out
stos
add
pusha
jae
xchg
out
pop
or
dec
gs
xor
sarl
in
int3
or
rcrb
jmp
mov
mov
repz
out
inc
shlb
add
inc
dec
xorl
add
add
pop
push
mov
add
test
daa
negl
mov
add
aas
gs
aaa
ret
xchg
or
add
test
add
sbb
mov
pmulhuw
mov
cmpsl
cmp
addr16
add
jg
insl
xchg
addb
rclb
das
outsb
add
dec
dec
nop
sti
cwtl
and
add
test
add
add
cmp
leave
sub
add
add
lret
cmp
jp
sub
add
loopne
into
out
shrl
sbb
inc
jle
lea
add
xor
xchg
div
sub
add
dec
mov
add
ret
addb
and
je
add
mov
daa
xchg
push
lods
xor
pusha
inc
shll
sub
add
push
fwait
push
cmp
or
add
cmp
rol
add
push
fistpll
add
push
mov
addr16
push
out
test
add
pop
iret
fstpl
iret
les
or
add
add
add
ja
insb
mov
mov
add
sahf
js
ret
dec
inc
jae
xchg
nop
sarb
add
pop
mov
lods
inc
cmp
shrb
adc
test
add
xor
sarb
add
add
mov
mov
mov
js
mov
orl
add
je
fs
jno
jl
and
add
pop
or
jo
dec
sub
out
outsb
inc
xor
xchg
clc
push
dec
sub
add
lahf
mov
cmp
test
add
add
lock
jg
in
call
add
daa
nop
jge
ljmp
out
rcrl
loope
cmpsb
add
sub
lods
add
addl
dec
cmp
cmp
adc
mov
addb
xchg
in
add
mulb
stos
add
add
sbb
pop
push
pop
push
add
push
in
notl
leave
jmp
add
mov
jmp
mov
fnsave
and
add
cli
or
add
sbb
jge
sbbl
cli
push
or
add
adc
xchg
inc
stos
add
push
jge
and
add
add
add
adc
inc
int
sub
jle
cmc
stc
inc
pop
jg
sbb
cltd
aaa
fiadds
gs
int3
out
ret
add
or
sti
popa
enter
add
in
cmp
push
int
dec
in
movsl
imul
ret
add
ja
mulb
mov
mov
add
adc
mov
add
in
push
push
inc
imull
mov
repz
push
inc
push
inc
xor
test
add
add
into
cli
and
add
cltd
sub
add
jmp
addb
jp
sub
jae
dec
xchg
and
add
jmp
cmpsb
add
xchg
mov
add
movsb
add
push
jb
lret
add
add
mov
addr16
mov
in
andl
push
jo
add
add
sub
jmp
add
ss
das
dec
cmp
add
and
dec
mov
or
sbb
xchg
pop
push
add
jmp
push
inc
xor
pop
cpuid
add
xor
sub
add
cld
mov
cmp
cmp
mov
shl
in
inc
dec
lea
add
aas
or
add
in
adc
icebp
xchg
add
addb
loope
jg
loope
dec
std
ret
dec
jno
int
xchg
xor
xlat
cld
mov
add
lahf
sub
and
add
mov
add
js
push
add
cmp
jp
pop
in
imul
int
pop
inc
add
mov
add
adc
call
ffree
xchg
sbb
sbb
add
clc
sbb
add
aam
int3
add
add
jne
push
pop
xor
lcall
mov
mov
add
dec
push
add
shl
sbb
test
add
cmpsb
add
push
add
xchg
xor
fdivrp
push
sbb
cltd
sub
add
inc
adc
je
pushf
iret
sbb
sbb
dec
shrb
fcoms
leave
cmpsl
push
xor
shll
int
fsubrl
mov
add
insb
sbb
mov
stos
add
mov
add
ds
mov
add
add
mov
add
add
and
add
cmp
jge
mov
movsl
rcll
cmp
leave
mov
sbb
fsub
in
jecxz
adc
adc
clc
ljmp
popa
cltd
adc
fsub
data16
add
push
in
ss
in
cmc
stos
int3
add
adc
push
xor
add
int
lahf
mov
add
cmp
cmc
mov
pop
dec
repz
adc
add
rcrl
cmpsl
test
outsb
xor
outsl
and
add
adc
add
add
cli
push
cltd
ficomps
mov
lds
add
ljmp
adc
adc
adc
lahf
mov
xchg
jo
and
add
inc
neg
mov
out
test
add
out
add
jns
add
or
sbb
aaa
push
add
xchg
add
popa
adc
aas
jmp
push
pop
adc
sbb
pop
jg
and
add
movsb
add
xchg
ja
mov
add
out
call
xchg
pushf
fisubs
add
push
fisubl
fistpl
cmp
push
in
lods
ds
add
sbb
testb
jno
xlat
fbstp
dec
xchg
or
test
in
aad
dec
add
add
pop
test
add
lea
imul
add
cmc
inc
stos
add
je
sub
add
xor
jno
lds
call
test
add
inc
movd
add
emms
mov
test
dec
push
add
std
popa
fldl
lcall
ret
xchg
mov
xchg
outsl
arpl
aam
stc
pop
add
add
rolb
mov
mov
add
out
sbb
sahf
divl
das
out
addb
sbb
in
xor
repz
sbb
pop
or
add
iret
test
mov
pop
inc
xor
lret
sarb
leave
sarl
repnz
pop
push
add
cmp
sar
mov
add
mov
clc
lea
jae
adcl
add
inc
jecxz
cmp
inc
push
sbb
das
imul
mov
add
mov
add
lahf
add
jge
jmp
inc
mov
add
scas
loopne
xor
std
cltd
test
cmp
sub
add
data16
int3
sub
add
xor
add
stc
repnz
dec
je
add
jl
mov
mov
xchg
inc
add
loop
xchg
fmul
addr16
sbb
add
cwtl
outsl
pop
xor
in
ja
push
dec
stos
subl
add
jno
add
add
pop
mov
inc
lea
add
lods
add
sarb
add
push
std
inc
rcl
call
outsb
mov
in
inc
shll
mov
pop
shr
mov
xlat
xor
jl
add
mov
adc
add
insl
movsb
add
pop
or
add
jge
push
out
add
add
add
mov
pop
pop
lahf
addr16
loope
rorb
fmul
cmpsb
add
sbb
jmp
cmc
lcall
ss
jo
add
jmp
cmp
loope
rcrl
popa
out
lcall
pop
addr16
dec
std
or
adc
sarl
add
and
add
add
push
mov
scas
add
ficompl
add
stos
add
test
xor
movsb
add
fcomps
add
cmp
orl
add
daa
or
add
add
inc
fisubl
add
adc
add
lds
ja
mov
fcoml
jae
sahf
rolw
or
add
add
or
add
lret
add
dec
ds
lods
sbb
ror
inc
loop
mov
xchg
mov
xor
push
add
mov
jno
movsl
and
add
or
add
sub
xor
mov
add
fnstsw
in
into
jmp
pushf
sti
sub
addr16
push
je
add
into
sbb
ret
xchg
sub
in
pop
repnz
loopne
add
cmpsl
inc
cmp
pop
arpl
push
push
jnp
or
jg
leave
xor
loopne
addr16
rclb
mov
add
lret
adc
ret
xor
dec
sub
adc
add
imul
add
push
add
add
into
jmp
add
ss
jp
dec
mov
lods
mov
testb
ja
push
sbb
xchg
pop
addr16
lret
lret
sbb
cmp
push
mov
add
push
add
cli
pop
cmp
in
jno
pop
xchg
mov
adc
jns
in
jp
mov
aad
jnp
xchg
mov
add
cmp
scas
add
repz
stos
call
adc
push
sub
add
leave
rol
divl
arpl
imul
enter
xchg
add
dec
dec
movsl
sbb
mov
int3
lcall
push
pushf
lret
jecxz
add
fcomp
xchg
push
add
add
mov
daa
push
js
addb
ror
das
fmul
sti
adc
pop
adc
rorb
std
adc
mov
fadds
add
in
popf
or
mov
push
das
sbb
inc
add
in
add
nop
int
iret
push
jge
add
xor
popa
outsl
insb
add
jo
aad
mov
enter
or
adc
imul
jecxz
mov
add
aad
sub
pop
cwtl
cmp
fwait
insb
daa
adc
insb
je
lods
or
add
pop
sbb
out
add
pop
je
aas
repnz
add
je
add
popa
dec
stos
dec
cmp
add
icebp
lret
jae
repz
outsb
cmp
add
jno
dec
pop
in
pop
add
jbe
mov
add
add
add
jno
sub
add
insl
gs
mov
arpl
xchg
lods
add
lret
cld
or
inc
notl
push
dec
addb
mov
das
adc
mov
add
or
shl
pushf
dec
mov
mov
iret
inc
cmc
out
dec
mov
pop
fcmovbe
aam
stos
bound
in
fsubs
pop
ficoml
push
add
xchg
xor
push
mov
daa
andl
add
mov
lret
outsb
dec
mov
mov
add
pop
movsl
jb
xchg
xorl
and
arpl
add
xchg
pop
daa
push
mov
add
push
dec
arpl
pusha
lret
sub
add
adc
add
into
fs
mov
and
add
add
out
mov
adcl
or
loope
xchg
and
pusha
lds
dec
sbb
ds
add
sbb
mov
add
pushf
pusha
and
add
xor
lea
dec
adc
mov
sub
push
jg
pop
or
add
fs
jg
add
fsubl
inc
pusha
and
add
int3
push
and
add
add
mov
ds
push
pop
scas
jnp
scas
xor
mov
test
add
orl
sbb
rorl
add
jbe
insb
mov
fists
std
add
add
mov
lds
bound
sbb
lahf
push
insb
out
and
out
jge
xchg
sub
add
mov
mov
lds
add
lods
add
int
xor
mov
aad
pop
ljmp
add
fistl
add
xor
mov
add
out
mov
add
mov
add
and
pushf
cmp
and
jae
push
xchg
lock
fs
cmpsl
adc
stos
mov
jb
je
data16
dec
inc
push
or
add
adc
add
pusha
aad
loope
int3
xor
shl
pop
jmp
aaa
sbb
pushf
jns
cmp
lret
add
push
dec
mov
xchg
mov
sub
push
movsl
add
stc
jae
xor
sbb
add
icebp
cmp
mov
lcall
fwait
hlt
push
stos
fwait
scas
add
xchg
jns
lds
add
mov
stc
sub
push
push
add
ljmp
sub
test
add
cwtl
repnz
sbb
push
or
add
inc
inc
xchg
test
je
sub
add
sub
add
or
add
jae
int3
rclb
adc
lods
add
cld
popa
int3
test
add
stc
sahf
xchg
cld
lret
xchg
fmull
sub
loop
mov
cli
ljmp
add
jecxz
jl
add
sbb
lcall
and
add
add
mov
add
addb
stc
xchg
fistps
cld
mov
aas
mov
jb
in
and
add
and
cmp
cli
jp
xchg
test
add
inc
icebp
xchg
add
xchg
sbb
imul
add
cmpsl
cmp
pop
xchg
mov
out
xor
sbb
mov
in
pop
xchg
testl
jo
add
mov
add
or
sahf
int3
ret
movsl
sti
or
ljmp
add
cwtl
xor
jecxz
data16
and
pop
aaa
cmpsb
add
popa
sti
sbb
data16
add
je
ret
lock
enter
xor
loopne
mov
jl
xor
add
push
lock
ja
adc
in
and
add
sahf
movsl
xchg
xchg
jecxz
inc
ljmp
add
add
add
or
add
sbb
fmuls
call
push
in
pop
int
loope
ror
inc
push
add
adc
add
push
bnd
mov
push
add
das
fdivrl
cmpsl
mov
xlat
push
and
cli
sbb
xor
enter
jmp
icebp
pop
sti
mov
leave
sbb
in
jg
js
add
js
popl
jg
push
sbb
in
hlt
jbe
jnp
add
xchg
and
out
pop
xor
je
adc
pop
fcoml
pop
jle
test
pop
dec
or
decb
stc
jecxz
or
add
mov
add
mov
add
jbe
inc
mov
jo
or
add
xchg
mov
dec
and
push
stc
push
je
inc
cmp
das
xchg
xabort
or
add
bound
add
push
pop
mov
popf
xchg
lock
inc
in
ljmp
add
add
movsl
xor
mov
push
cld
dec
pop
rcrl
dec
inc
or
sbb
rcrl
mov
add
mov
jmp
hlt
or
adc
jge
cltd
dec
aas
xor
sbb
add
mov
jecxz
fldenv
jnp
dec
aas
repz
lret
xchg
add
jmp
add
add
add
add
sub
add
sub
add
in
pop
xchg
pop
mov
jae
jmp
add
mov
add
in
adc
add
mov
stos
cli
enter
fcomp
lret
gs
insb
cmp
add
ja
pop
popa
and
xchg
test
add
and
add
mov
pop
and
add
loope
aaa
mov
add
add
add
adc
arpl
or
add
mov
addb
jbe
mov
add
sbb
add
test
add
fsubrl
mov
repnz
add
or
dec
mov
add
add
and
add
add
mov
add
aas
jbe,pt
pop
outsl
push
mov
mov
mov
add
lcall
cmc
mov
cltd
cld
mov
add
dec
aas
and
aaa
jae
ljmp
xor
adc
daa
icebp
lds
jo
sarl
test
add
mov
stos
cli
movsb
add
loopne,pt
mov
jmp
test
add
add
push
add
add
cmp
repz
add
shlb
fimuls
xor
add
rcll
xor
jg
push
or
add
stc
popa
and
add
jge
mov
push
popf
mov
cmp
dec
pop
add
add
add
ja
ret
scas
xchg
and
add
insb
sub
xor
test
out
xchg
popf
pop
add
push
xor
and
add
out
ljmp
fldcw
jge
rclb
pushf
nop
sarl
inc
add
jno
les
adc
xor
add
loop
fdivrl
jnp
or
jo
mov
add
xchg
insl
js
inc
nop
mov
mov
movsl
inc
sub
mov
xor
sti
in
sbb
push
out
and
add
sbb
ljmp
add
pop
rclb
insb
or
add
loope
or
dec
push
scas
add
adcl
cld
scas
xchg
add
add
data16
add
push
push
add
dec
mov
add
mov
mov
add
jecxz
stc
add
add
add
das
cmp
inc
lods
add
add
xchg
xchg
dec
aam
xchg
adc
out
xlat
xlat
rcrl
mov
and
jecxz
call
sub
pop
xor
pop
sub
inc
ror
icebp
cmp
cmpsb
add
ja
pop
push
inc
dec
sub
add
les
cmc
jae
fld
ds
mov
mov
and
add
call
push
add
aad
addr16
jl
aad
add
test
mov
xor
sbb
push
mov
inc
mov
add
cmp
mov
leave
lret
mov
add
add
shl
mov
ret
xchg
inc
js
mov
push
xchg
in
jnp
push
cmc
stos
jmp
cwtl
jp
sbb
add
mov
outsl
negb
and
add
or
add
mov
adc
imul
mov
add
lods
lock
negb
add
mov
sti
jo
xor
xchg
pop
inc
std
push
arpl
call
push
movsl
out
ss
mov
mov
lahf
mov
iret
mov
push
scas
add
out
cmp
add
or
add
or
out
add
xchg
mov
test
add
mov
add
inc
mov
sarl
mov
mov
push
dec
jp
lret
dec
xchg
mov
js
and
add
pusha
xchg
push
shld
mov
in
xchg
hlt
arpl
add
mov
jge
xor
mov
lds
pop
lea
xor
adc
js
sub
add
xor
daa
fdivrs
lods
add
stos
out
add
lds
add
xor
mov
add
fisubs
idivl
jns
int
bnd
xchg
add
xchg
test
add
cmp
cld
xchg
add
sahf
sbb
and
mov
ss
xchg
clc
cmpsl
pop
test
add
cmp
cmp
aaa
loopne
in
xchg
add
add
adc
addb
xchg
pop
xor
push
mov
add
mov
insl
mov
add
aad
push
mov
pop
fidivs
mov
add
add
pop
push
push
ljmp
fsubrl
adc
jne
shll
shlb
and
cmpsb
add
dec
sub
add
inc
push
lock
lods
mov
jge
add
jno
or
add
lea
adc
and
and
add
jb
or
cltd
jbe
jnp
sbb
stc
inc
lret
test
and
pop
out
jp
mov
add
or
add
mov
add
and
add
sbbl
sub
add
jl
pop
test
push
add
push
sbb
dec
repnz
insl
movsb
add
lret
mov
fiadds
add
pop
arpl
add
cmp
cmpsl
xor
add
movsl
mov
mov
add
mov
add
negl
add
icebp
cmp
imul
je
and
outsl
cmp
cmp
lods
mull
loope
faddl
ret
leave
inc
lret
test
rolb
int
xchg
xchg
js
add
arpl
shlb
popf
xchg
lret
mulb
add
push
cmpsb
add
int
dec
pop
stc
test
add
xor
jnp
js
fsubl
outsl
inc
cmp
xlat
cli
jg
mov
fcmovne
cwtl
dec
mov
cmp
sbb
cltd
jno
push
xor
or
mov
add
cmpsl
fsubrs
add
pop
xchg
add
inc
fcompl
gs
or
jecxz
add
push
mov
push
dec
movsb
add
aaa
pushf
xchg
mov
sub
add
push
jae
jle
add
pop
add
add
lock
arpl
dec
lcall
cmp
mov
dec
test
add
outsw
sbb
fcoms
aam
leave
push
divl
add
jmp
add
sbb
inc
push
stc
mov
loope
out
add
fcmovb
scas
mov
mov
in
mov
pop
jmp
or
add
in
adc
fbstp
nop
shrl
jge
pop
add
add
xchg
sbb
cmc
in
add
insb
mov
add
add
push
jno
add
in
loop
incb
jp
idivl
dec
pusha
lods
cmpsb
add
fs
sub
add
xor
mov
jbe
dec
sub
out
bound
iret
fdiv
imul
adc
addl
lahf
sbb
roll
mov
mov
add
xchg
pop
imul
mov
fsubrs
js
add
mov
mov
mov
push
add
shll
scas
add
or
pop
cmp
mov
add
add
mov
add
add
cmpsb
add
dec
mov
add
int
test
jb
stos
iret
cmc
sti
out
jg
add
out
or
add
xor
aam
sub
mov
add
lcall
ds
or
iret
add
jg
movsl
scas
add
ss
out
sarb
jg
add
pop
lahf
int3
pop
or
jmp
fnsave
ret
ret
add
mov
cli
push
add
stc
test
add
jmp
add
decb
pop
out
push
mov
push
clc
add
add
xchg
shlb
push
mov
xchg
sahf
stc
imul
add
add
mov
add
fst
pushf
lods
in
add
mov
cmp
push
scas
add
mov
add
add
mov
add
lahf
jae
push
pop
adc
xor
jae
mov
insb
sti
add
add
imul
mov
add
call
jmp
lahf
clc
add
add
int
in
adc
icebp
dec
push
mov
pop
loopne
sarl
add
repz
add
test
repnz
test
arpl
cld
incl
jecxz
pop
add
add
incb
jne
add
pop
pop
fsubrs
add
inc
mov
jl
push
cmp
out
popa
int
loop
divb
or
push
add
mov
add
gs
inc
aam
movsl
std
pop
shll
add
xchg
push
dec
out
stos
add
ret
out
stc
fisubs
jo
adcl
mov
jle
add
cmp
or
add
xor
xlat
in
fnsave
aas
mull
in
inc
sub
jecxz
adc
test
add
add
jp
xchg
fstps
in
add
dec
sub
add
add
sub
add
push
push
or
add
inc
dec
and
add
add
movl
stos
fistpl
std
xor
negb
add
leave
dec
add
add
cmp
push
add
xchg
cwtl
rcll
dec
fs
add
mov
add
inc
inc
and
add
pop
int3
inc
test
add
adc
pop
call
add
add
leave
xchg
xchg
fildll
out
popf
scas
rorl
adc
out
mov
cwtl
fildll
mov
sti
jmp
ljmp
xchg
add
in
inc
dec
push
js
add
ljmp
add
and
mov
adc
jge
add
mov
add
mov
add
or
add
sub
out
in
loope
xchg
dec
mov
gs
mov
mov
add
jns
addr16
adc
sbb
cli
test
add
add
pop
mov
dec
mov
add
xchg
push
std
mov
add
lock
fucomp
cmp
push
push
dec
addr16
push
js
aas
pusha
out
js
clc
sub
xor
cmp
add
add
mov
add
xor
add
fldlg2
push
add
xor
add
js
ss
xchg
cwtl
xor
add
add
mov
add
out
add
cld
in
pop
or
in
rorl
outsl
inc
aas
add
lahf
rcrb
psadbw
jecxz
add
add
pop
pop
or
cmp
int3
outsb
or
add
loop
pop
and
add
in
and
stc
xchg
sub
jno
add
stos
add
mov
add
in
mov
in
test
add
lods
xchg
cmpsb
add
scas
push
add
inc
dec
stos
add
outsb
iret
xchg
mov
fidivl
insl
movsl
add
add
add
ljmp
cmp
daa
pop
shll
iret
inc
das
addb
inc
push
les
xchg
push
xor
sub
add
inc
pop
mov
add
stos
addb
sti
push
add
or
add
add
pop
push
add
mov
sti
std
fcomps
add
or
dec
aaa
xchg
jge
cli
aas
jmp
jle
fs
mov
ds
push
jl
add
jno
add
dec
and
xor
out
lcall
hlt
and
add
lret
fdivrp
adc
sbb
xor
and
add
mov
call
movsl
and
pop
or
add
and
in
call
loop
sar
rol
dec
addr16
push
jbe
repnz
lods
add
ljmp
xchg
das
and
mov
add
addr16
add
rclb
add
mov
test
pusha
xor
or
add
stos
add
dec
mov
or
xchg
addb
aam
sub
inc
cmp
bound
mov
add
push
loope
dec
mov
jp
cli
add
adc
xor
or
adc
js
adc
xchg
cmp
mov
and
xor
int3
mov
add
cwtl
lret
add
add
fsubrl
push
mov
push
aam
push
dec
push
test
add
std
pop
lods
add
int
xchg
faddl
cmp
mov
daa
jecxz
or
add
add
xor
xlat
clc
jle
ljmp
arpl
jns
int
jae
inc
ljmp
aaa
ss
je
add
lock
add
mov
add
mov
cmpsb
add
pop
push
shll
pop
cltd
cmp
test
add
mov
and
add
inc
in
sarb
add
jae
rorl
daa
inc
or
add
and
stc
lods
pop
ret
add
cwtl
xchg
cmp
add
cwtl
addb
or
xchg
mov
mov
jl
repnz
add
pop
push
dec
xor
add
jno
cwtl
das
push
sahf
test
sub
add
scas
add
mov
add
add
std
das
pop
xchg
add
sub
add
sbb
aam
jg
cmc
test
add
mov
cmp
in
mov
add
xor
sbb
push
mov
inc
lods
add
jbe
add
pushl
ret
outsb
stos
push
mov
cmp
in
pop
sahf
or
add
push
pushf
cli
in
and
add
mov
add
sbb
dec
xlat
fcomps
jp
xchg
nop
push
fldenv
mov
xchg
je
mov
add
add
jbe
test
add
dec
and
add
lcall
inc
sbb
js
std
das
jno
push
xchg
loopne
pop
push
icebp
cmpsl
jo
jno
ja
and
add
shl
sub
sbb
dec
int
pop
insl
out
jmp
cmpsb
add
std
push
ret
sub
sbb
add
sub
mov
mov
rorl
gs
ja
push
sbb
and
test
add
mov
add
add
xor
js
hlt
mov
and
test
rorl
into
mov
cltd
inc
sub
push
add
ss
les
popl
call
xchg
xchg
jp
repnz
iret
xor
mov
hlt
pop
cmpl
mov
in
cmp
pop
in
sub
jl
add
out
push
xchg
in
testl
negb
cmp
fbstp
outsb
xchg
sub
add
or
add
mov
and
pop
mov
add
inc
sbb
push
add
cltd
cmp
mov
loope
mov
pushf
jno
loope
pop
and
add
lahf
lock
cmp
test
enter
push
and
add
imull
sub
fildl
add
sti
mov
add
jg
add
pop
mov
push
pop
cmp
sarb
dec
adc
xchg
add
rolb
frstor
mov
add
jecxz
xor
jae
shll
push
repnz
sub
add
add
inc
std
in
push
lahf
addb
xchg
jnp
or
add
fcmove
loopne
sub
lcall
call
pop
test
add
scas
add
in
or
ljmp
jo
insl
dec
and
add
das
xor
push
push
dec
inc
lods
in
iret
xor
add
loop
mov
imul
add
xor
rclb
add
xchg
jb
jecxz
lret
cmp
sub
fs
ja
push
inc
popa
lods
add
dec
mov
add
add
xchg
pop
push
enter
add
add
lcall
dec
imul
xor
addb
mov
mov
jb
xchg
add
add
mov
add
in
leave
jle
lods
inc
sbb
add
xor
xchg
out
pop
mov
addb
sahf
or
std
and
add
xchg
pop
xlat
scas
std
xchg
dec
in
mov
and
add
lcall
repz
pop
or
xchg
add
add
cmp
push
loop
imul
add
xor
in
fs
add
mov
adc
in
je
scas
dec
ret
mov
repnz
dec
lods
lea
add
fs
pop
jge
or
jno
push
jbe
inc
sub
pop
or
mov
add
int
out
in
push
add
test
test
xor
jg
or
test
push
add
add
add
push
imulb
sub
add
pusha
flds
add
and
add
pop
out
xchg
jge
rol
mov
iret
imul
int
int
add
dec
mov
mov
stc
cmp
jge
pop
jo
push
aaa
rcrl
push
mov
clc
rol
addr16
cltd
mov
add
jno
pop
cmp
add
sbb
repnz
sbb
sahf
mov
mov
xor
add
jl
fwait
sub
xchg
test
add
xchg
add
dec
addb
leave
xchg
push
fsubrl
cld
outsl
clc
in
add
shl
pop
mul
jnp
ljmp
push
popa
xor
add
add
xor
cmp
enter
loope
sub
sbb
sbb
add
fdivl
jbe
inc
adcl
nop
mov
sar
add
push
add
dec
mov
add
add
and
add
sbb
push
test
rcr
dec
xor
lea
popf
pop
in
fwait
jge
jno
ljmp
cld
shlb
xor
jbe
orl
mov
stos
int3
je
iret
js
loopne
mov
sbb
mov
pop
std
jae
daa
add
shlb
add
pop
add
cmpl
cmpsb
add
ss
cmp
or
add
dec
mov
push
add
mov
sub
push
add
daa
inc
pop
ds
js
adc
pop
mov
hlt
shl
push
add
stos
xchg
adc
faddp
stc
cltd
out
test
add
bound
lods
sbbl
push
aam
imul
add
cmp
add
add
xor
xchg
sub
xor
imul
stos
out
adc
dec
je
pop
mov
pop
sbb
notb
add
xor
mov
xlat
mov
add
imul
pop
sarl
add
xchg
js
add
mov
call
cmp
int
enter
into
jp
add
add
add
test
add
outsb
sub
dec
fiadds
pusha
lock
bnd
add
repnz
imul
jo
mov
add
js
idivb
movsb
add
push
int3
adc
xor
lods
scas
testb
inc
in
jmp
xor
leave
cwtl
fsubl
int3
hlt
mov
pop
cmp
addr16
mov
mov
pop
cmp
pop
dec
or
add
lods
add
into
icebp
mov
popa
ret
mov
aaa
xchg
inc
lahf
rcr
add
out
dec
mov
add
add
out
repnz
dec
xor
add
push
jle
out
leave
cli
pop
pop
mov
push
int3
mov
dec
enter
mov
add
and
add
add
and
add
add
icebp
fs
adc
out
dec
rcr
jbe
imul
mov
pusha
ret
insb
mov
dec
popa
ret
mov
aaa
sub
add
pushl
lret
nop
mov
jne
cltd
jbe
sbb
xchg
or
add
add
sbb
cmpsb
add
addb
test
add
scas
push
xor
jmp
xor
add
jle
in
cmp
enter
pop
stos
push
add
sbb
push
dec
add
fisubrs
arpl
outsl
sbb
int
sahf
lahf
inc
xchg
xchg
fidivrs
movsb
add
clc
rol
add
jbe
cmp
add
xor
add
cld
jl
xchg
add
xor
roll
add
lret
je
add
pop
test
pop
aad
mov
fsubrl
add
push
iret
pop
movhps
add
or
add
sarb
cmovnp
add
mov
add
mov
rcll
movsb
add
adc
fwait
shlb
inc
inc
jle
call
addr16
sub
cmp
add
imul
pop
pop
mov
in
addb
mov
add
add
pop
mov
stos
add
aad
mov
fstps
fdivrl
pusha
xor
lds
pop
mov
cmp
test
add
lods
add
mov
ds
rolb
add
ss
mov
add
xchg
or
add
add
jno
add
addb
sub
add
mov
nop
pop
mov
dec
adc
jns
pop
or
decb
push
lea
inc
in
xchg
loop
sub
test
add
testl
cmpsb
add
pop
pop
hlt
cmpsl
pop
adc
mov
push
lret
test
add
in
jg
add
add
push
notb
push
cmpsb
add
xchg
lods
jo
xor
push
inc
pop
jno
mov
add
or
add
cld
insb
shl
add
jmp
cmp
arpl
insl
inc
into
je
mov
add
or
dec
int3
cmp
dec
sub
add
add
test
and
add
xchg
add
inc
push
add
jae
imul
add
hlt
sbb
pop
jb
xor
add
xchg
push
out
add
or
fistps
add
add
rol
add
push
add
sti
insb
cmpsl
mov
sti
and
cld
loopne
addb
sub
add
push
subl
pop
adc
xchg
xchg
add
stc
xchg
add
lret
lret
inc
arpl
lcall
add
add
dec
pop
mov
add
sbb
popf
mov
rcll
cmc
rol
add
add
xchg
pop
inc
adc
movsb
add
push
scas
add
sub
add
cli
push
push
or
add
mov
add
dec
sub
sub
add
xchg
fldcw
imul
fistpl
push
je
pop
lahf
dec
int3
adc
dec
mov
add
mov
gs
add
xchg
jne
ja
outsl
mov
pop
outsb
add
push
xlat
mov
ret
inc
cltd
mov
add
addb
cld
les
add
pop
ret
jbe
in
aam
xor
jmp
aad
loope
inc
push
xor
jnp
dec
sbb
xchg
sbb
add
fdivp
scas
add
xchg
ficomps
bound
call
mov
jns
and
or
add
jle
xchg
shl
xor
mov
mov
add
test
add
stos
add
add
push
jmp
pusha
pop
lods
add
sub
add
add
sub
add
dec
addb
inc
or
sub
add
jecxz
int
bound
mov
mov
cmp
xchg
fwait
xchg
dec
imul
push
pusha
movsb
add
mov
out
dec
push
inc
jne
add
add
add
adc
push
mov
lods
add
jg
pop
sub
add
or
rorb
add
push
inc
daa
ja
out
mov
fidivl
clc
enter
loop
add
xchg
test
cmp
in
mov
add
and
add
add
inc
mov
mov
pop
cmp
loop
add
addb
gs
jge
jg
pop
mov
add
in
lcall
in
mov
xor
cmp
pop
push
movl
lods
lds
out
xor
xchg
cmp
outsl
ja
add
ljmp
sbb
popf
adc
add
mov
add
and
add
aam
mov
add
fdivrp
int
aam
pop
je
aaa
add
in
add
fwait
push
jmp
sbb
add
jle
jbe
mov
add
add
lahf
nop
pusha
xchg
test
add
dec
std
mov
or
idivb
cld
in
in
cmpsl
gs
add
xchg
clc
sbb
loope
pop
in
mov
fnsave
and
add
daa
ja
add
sub
add
push
jl
ret
add
add
jp
ljmp
add
stc
std
push
hlt
pusha
mov
add
push
add
inc
sbb
insb
sub
pop
sbb
jl
cmc
add
add
add
mov
int3
xchg
sub
movsl
cmpsb
add
inc
pop
cmp
add
add
push
aas
test
add
add
inc
adc
test
add
scas
pop
sbb
xacquire
addl
jno
imul
in
mov
sbb
add
out
enter
mov
add
mov
lcall
clc
shlb
fsubrs
add
mov
add
fisubrl
add
shl
add
add
insb
and
stos
sbb
add
xor
dec
mov
xchg
jne
test
mov
xchg
addb
mov
mov
mov
add
fisttps
and
inc
lods
add
outsl
jns
ret
std
lods
mov
add
or
add
enter
pop
fstl
test
add
clc
repnz
iret
insb
mov
mov
push
push
shl
add
ljmp
add
jns
mov
and
push
shll
add
mov
add
xchg
inc
in
and
add
mov
lds
adc
xor
add
cld
rolb
sbb
add
push
inc
add
add
dec
jmp
mov
add
dec
and
add
cwtl
push
dec
aas
mov
lea
divb
xchg
std
add
ds
pushf
popa
ljmp
sub
add
cmp
inc
jge
xchg
jo
rcrl
ss
int3
and
add
dec
mov
adc
add
push
add
mov
ja
add
jp
lock
jnp
adc
add
lea
push
push
cmp
pop
ret
cmp
add
and
aad
add
pop
aam
pop
daa
xor
or
push
mov
add
add
add
mov
inc
add
or
add
xor
repnz
push
aaa
inc
dec
push
add
cmpsb
add
mov
fs
jno
shlb
jmp
mov
add
enter
add
mov
add
xor
fnstcw
pusha
clc
pop
dec
cmc
jmp
sbb
dec
les
lahf
ret
sub
add
stos
and
add
clc
push
nop
lret
mov
out
inc
push
add
add
mov
add
add
push
add
lods
ret
lcall
add
add
add
in
out
xchg
jmp
sbb
js
add
add
loope
lret
lea
cmp
inc
push
push
xlat
pop
jb
je
xchg
xor
pop
inc
jl
sbb
popf
imul
fldenv
sub
sbb
push
inc
ljmp
mov
lcall
inc
pop
xchg
mov
sbb
cmp
xlat
lock
lret
or
pop
mov
pop
add
jp
inc
add
add
mov
add
push
add
inc
stos
add
and
add
or
add
fidivs
ficoms
adc
lods
sbb
mov
or
call
add
mov
add
enter
cmpsb
add
inc
mov
lahf
and
add
add
pushf
fs
add
mov
mov
add
xchg
inc
push
add
and
add
xor
ret
jnp
sbb
cli
mov
pop
jae
in
push
add
sbb
mov
fnstenv
pop
jmp
add
push
inc
push
mov
add
pop
loopne
jle
push
cwtl
dec
imul
loop
jae
lret
and
jno
loope
cmp
xlat
adc
add
test
add
jnp
enter
add
add
pop
ds
push
lret
add
std
dec
call
insb
jo
pop
outsb
ret
add
add
add
add
push
push
lcall
or
add
ss
je
int
sub
xchg
xchg
pop
pop
sbb
sub
add
xor
sub
add
dec
mov
push
aam
add
loope
sbb
dec
dec
jmp
repz
xchg
popf
xchg
std
out
push
add
mov
add
popf
mov
add
and
pop
sbb
add
add
push
add
clc
out
aad
lcall
add
add
add
clc
scas
or
shlb
or
add
fwait
movsl
out
inc
in
add
stc
mov
sub
jmp
pop
xchg
add
loopne
imul
add
mov
aad
and
dec
shrl
mov
out
mov
xchg
sub
icebp
adc
mov
inc
je
div
insb
push
lret
xchg
scas
add
cmp
arpl
add
dec
dec
adc
adc
dec
decl
add
push
arpl
daa
add
add
mov
add
add
cmp
add
inc
and
xchg
cmp
add
loope
jp
or
add
mov
add
pop
push
outsb
ja
js
cli
arpl
stos
add
cmp
and
jae
add
fcmove
push
repz
add
daa
mov
cli
or
add
call
in
mov
add
mov
xchg
out
pushf
icebp
cmp
add
or
add
popl
movsb
add
dec
hlt
mov
add
add
jl
ret
add
add
add
jmp
lret
xchg
out
aad
xor
sub
add
add
push
movl
jno
mov
fisubl
cmp
mov
add
shll
xchg
out
pop
lahf
sub
add
push
loopne
xchg
xchg
sbb
ss
add
sub
add
push
cmp
add
inc
add
dec
xchg
add
add
adc
or
add
pop
add
les
adc
xchg
xchg
lret
fs
dec
into
lods
add
sbb
pop
loope
ljmp
add
not
fisubrl
add
lods
push
jge
add
xor
cltd
push
cmpsl
lret
lods
add
jne
jmp
adc
add
filds
inc
mull
add
dec
push
push
adc
xchg
dec
sub
mov
fidivrs
mov
add
push
jb
add
ljmp
xlat
incl
add
in
sbb
add
and
add
je
sarl
cmp
pop
sub
add
add
jp
push
jb
cmp
pushf
fisubs
ds
xchg
add
imul
lret
add
orl
and
add
add
nop
xor
rcll
pop
dec
fcomps
insb
icebp
shrb
jp
hlt
xchg
add
add
add
push
adc
jecxz
inc
aad
mov
add
inc
ret
add
adc
pusha
loope
sub
mov
imull
inc
sbb
xchg
add
add
add
sub
add
repnz
add
add
add
push
xchg
fadds
iret
add
add
or
add
pop
sbb
add
ret
and
add
mov
add
ds
add
lret
jg
fidivs
pop
aam
in
insb
ds
xor
dec
mov
pop
shlb
sub
add
jno
and
add
pusha
int3
je
mov
xlat
repnz
add
fiaddl
hlt
stc
xchg
or
add
outsb
inc
imul
mov
adc
jnp
pusha
insb
add
or
add
push
adc
add
outsl
mov
add
fcmovnu
push
mov
sub
push
ret
adc
push
pop
insb
adc
imulb
add
jp
leave
lret
inc
pop
mov
lahf
sarb
dec
push
stos
add
push
sub
xchg
rclb
ret
add
adc
shl
mov
aas
jecxz
sbb
loope
add
scas
aad
cwtl
fidivrl
ds
imul
shll
bts
sub
xor
add
mov
out
loopne
outsl
dec
sbb
addb
les
add
cld
xchg
cld
jle
mov
push
mov
and
iret
pop
pushf
or
push
add
insb
dec
xor
xlat
jno
push
lods
add
imul
jmp
add
jl
ret
cmpsl
push
dec
cmpsb
add
cmp
add
mov
aas
jo
ja
scas
xchg
inc
aaa
xchg
add
mov
fldcw
push
mov
int
loope
dec
push
push
add
fwait
sbb
movb
aad
add
pop
sti
dec
inc
mov
add
add
add
lcall
add
scas
add
add
add
add
xor
add
add
shlb
lods
add
je
add
aaa
stos
adc
mov
add
add
add
dec
push
add
sub
add
add
in
lret
imul
mov
jg
xchg
ret
in
xchg
inc
xlat
les
sub
ja
mov
sub
add
bound
loop
lea
hlt
int
pop
loopw
adc
call
loop
add
xchg
out
or
fisttpll
mov
dec
out
cmpsl
push
test
add
addb
arpl
pop
or
loope
add
mov
add
add
test
add
roll
addb
adc
ret
mov
sbb
movsb
add
mov
mov
pop
adc
cltd
cmpl
lahf
adc
push
add
push
les
jl
cmpsb
add
xchg
and
add
jmp
push
jmp
hlt
aad
or
pop
and
add
sbb
inc
andl
add
lods
sarb
mov
xchg
add
or
cld
push
pop
inc
and
add
add
xor
decl
pop
repz
xor
mov
pop
mov
fcmove
add
add
cmp
add
sbb
and
xchg
add
jno
push
dec
out
mov
add
mov
and
adc
xchg
repz
sbb
mov
add
adc
lahf
cmp
sbb
imul
stc
int3
adc
xchg
hlt
int3
aad
ja
adc
outsb
pop
jb
scas
add
movsb
add
xor
mov
add
cmpsb
add
add
add
repz
mov
in
sbb
add
add
ret
add
push
add
add
js
fs
mov
mov
pop
dec
add
add
ss
add
aad
out
lds
mov
jns
add
dec
in
and
fcomps
inc
cli
cli
ljmp
sub
add
push
add
add
xor
add
add
stos
add
push
dec
cwtl
add
jne
jl
add
jbe
jne
mul
jb
dec
lds
mov
jb
imul
out
jmp
inc
jl
mov
pop
jb
mov
ja
xlat
ds
dec
nop
aaa
faddp
jno
jnp
sub
add
add
add
add
in
dec
scas
add
jno
out
pushf
lods
add
iret
jnp
lods
add
ret
add
sub
push
xchg
cmp
aaa
lds
stos
pop
push
call
lcall
or
imul
add
add
dec
ljmp
imul
add
sbb
mov
jns
dec
into
inc
leave
mov
cmp
fisubl
xor
dec
inc
pusha
add
push
pop
push
stos
jg
adc
mov
adc
jmp
and
xor
add
add
xor
into
mov
add
popa
mov
add
out
addr16
divl
dec
dec
jge
add
adc
push
jnp
pop
loop
add
std
adc
inc
add
add
testb
test
add
test
cmp
dec
aaa
ret
add
movsl
js
add
mov
sbb
cwtl
outsl
jmp
pop
pop
fs
inc
test
add
jne
push
leave
bound
add
repz
iret
cltd
rcrl
jns
or
rcrb
aad
xchg
leave
and
add
xor
mov
sbb
sub
inc
rcrb
dec
sbb
sahf
mov
add
add
fstl
movsb
add
sbb
push
bound
xor
out
aam
int
add
jge
add
mov
scas
dec
mov
outsl
daa
mov
adc
and
add
icebp
cmp
fiaddl
add
out
rcll
mov
adc
and
mov
mov
dec
dec
repnz
movsb
add
xor
add
fildl
jo
sti
lret
out
adc
mov
sbb
push
les
push
cmc
adc
repnz
bound
add
pop
jp
add
int3
cmpsl
sub
add
dec
test
add
fdivrl
lret
add
jae
xor
inc
fstps
jb
jle
mov
mov
mov
out
pusha
jmp
jp
add
add
xchg
jg
add
std
pop
add
xchg
xchg
jg
add
imul
add
add
add
lock
cmc
lods
add
iret
addb
stos
mov
mov
loop
pop
jp
mov
outsb
mov
add
xor
dec
mov
add
jnp
inc
jnp
mov
cmp
add
sbb
cmpsb
add
lret
inc
adc
insl
sahf
or
add
xor
add
push
and
add
pop
ret
mov
adc
sti
and
jb
je
xor
test
add
and
add
mov
fistpll
dec
push
add
insb
pop
imul
cmc
fists
stc
adc
cmc
cmpsl
xchg
rol
add
mov
pop
fistl
cmc
fs
xor
add
jne
fistps
cmp
push
add
movsb
add
xlat
or
add
pop
sti
cmp
push
add
std
and
add
cli
jno
loope
push
add
cmp
mov
add
add
add
lahf
jecxz
xlat
and
add
addr16
filds
xchg
or
add
mov
mov
add
lock
add
add
hlt
test
and
push
add
mov
add
add
pop
add
add
cmp
add
repnz
fwait
and
jp
push
adc
imul
cwtl
mov
mov
dec
mov
add
jbe
dec
hlt
mov
test
add
cmp
add
paddsw
cmpsb
add
stos
xor
dec
push
arpl
add
or
push
pop
daa
or
add
arpl
sub
add
sbb
jecxz
ret
dec
pop
addr16
les
push
mov
sub
add
jmp
or
sub
add
add
cmp
dec
lcall
sub
add
movsb
add
cmp
push
or
add
repnz
add
jnp
xchg
arpl
pop
scas
add
sbb
add
add
add
mov
sub
add
testl
add
mov
repz
add
daa
fstl
xor
jae
sub
add
mov
add
sub
add
loope
call
xchg
mov
adc
sbb
xchg
mov
stc
inc
popf
out
adc
fmuls
fisttps
add
arpl
dec
inc
mov
ja
push
add
push
mov
das
cmp
add
stos
add
sahf
and
push
adc
fdivl
and
add
or
lds
xchg
dec
add
arpl
or
add
sahf
and
loop
push
add
pusha
xlat
mov
adc
lods
pusha
stos
xor
add
xchg
in
sub
add
adcl
add
add
inc
xchg
out
xchg
jle
pop
xchg
pushf
inc
sub
rcr
shrl
or
add
add
add
sbb
clc
shll
ljmp
inc
stos
xchg
mov
add
add
push
dec
jb
add
add
pop
sbb
adc
xor
or
cmp
mov
add
pop
sbb
sbb
lahf
leave
sub
mov
add
mov
dec
adc
ret
adc
enter
or
add
dec
test
xor
out
xor
cmp
hlt
aaa
jbe
scas
add
cmp
stos
add
xchg
outsb
sbb
stc
push
adc
shrb
sbb
add
loopne
inc
xchg
test
add
mov
add
or
mov
or
push
test
add
test
add
int
sbb
mov
out
mov
add
push
mov
sbb
add
mov
pop
push
nop
out
jmp
pop
addb
mov
add
inc
mov
mov
add
fwait
inc
push
adc
and
int
out
mov
or
add
dec
cmp
inc
adc
jp
movsb
add
sub
add
nop
push
movsl
js
hlt
fcomps
add
inc
in
test
add
push
fs
xchg
in
push
add
leave
mov
lahf
mov
pop
int3
stos
add
xchg
sahf
inc
add
add
add
clc
adc
add
sbb
or
add
pop
nop
test
pop
fucomi
test
mov
add
xchg
fs
popf
mov
add
out
xlat
inc
mov
aaa
lret
leave
imul
loope
mov
add
add
aad
mov
stc
jb
jnp
test
add
push
add
out
adc
jmp
mov
and
add
sub
rcr
mov
sub
sbb
ljmp
mov
jbe
add
adc
rcll
sbb
add
xchg
xchg
add
add
add
into
divl
mov
add
jg
inc
mov
add
sarl
mov
cltd
iret
jg
xor
jo
stos
or
cmp
test
jmp
fcmovnbe
lret
sub
add
inc
sub
fistpll
add
pop
mov
pop
lock
shll
and
rorb
xchg
sub
add
pusha
jae
dec
cmpsb
add
pop
xchg
mov
add
xor
cwtl
icebp
cmp
mov
int
jl
mov
pop
and
add
movsl
mov
and
cmp
mov
push
mov
mov
and
into
add
add
xchg
lahf
lods
add
or
add
aas
les
inc
into
mov
fnstcw
xchg
jmp
lahf
cltd
js
js
out
push
mov
add
repnz
mov
add
push
add
mov
add
jg
sub
push
adc
pop
xor
add
add
add
cmpsb
add
mov
loop
add
mov
leave
xchg
mov
or
add
jne
call
mov
outsl
xchg
into
fs
in
out
repz
mov
ds
inc
loop
inc
or
add
add
sahf
scas
out
and
mov
jo
addb
roll
repz
adcl
xchg
lea
push
cmp
sbb
mov
or
add
jg
dec
mov
stc
mov
mov
add
fidivl
adcl
pop
pusha
lret
mov
add
inc
xlat
negb
fs
xchg
add
fwait
nop
movsb
add
add
inc
std
lds
xchg
rcrl
add
mov
adc
cld
lds
add
lods
pop
mov
adc
add
add
jmp
inc
push
jb
mov
add
lahf
hlt
xorl
in
or
add
jge
pop
sbb
add
add
push
xchg
xchg
std
push
je
or
push
daa
addb
push
add
push
add
cmc
hlt
sbb
dec
imul
add
mov
add
jmp
add
fiadds
add
add
add
sub
mov
add
lcall
add
out
lret
orl
jo
fisubl
out
add
or
add
sub
add
mov
ds
lea
add
aas
pop
mov
add
adcl
movl
popf
pop
sbb
pop
mov
add
into
outsb
jne
push
add
xchg
push
add
xchg
pop
loopne
adc
test
test
add
sub
sub
cmpsl
push
xor
outsl
adc
add
arpl
add
xchg
inc
insb
sbb
push
add
daa
cmp
rcll
mov
jmp
add
jnp
aas
stos
add
and
ljmp
call
fidivs
enter
or
pop
push
not
sub
add
negl
add
in
add
clc
in
lret
inc
out
inc
ljmp
fists
rorl
sub
clc
mov
pop
fisttpl
aad
mov
mov
add
and
add
sub
xchg
aaa
dec
inc
sbb
push
sub
or
add
cmp
fwait
into
xor
lods
add
add
pop
and
mov
add
les
hlt
add
ljmp
add
sbb
shll
push
xor
mov
out
int3
push
mov
add
add
add
dec
adc
push
cld
and
add
mov
mov
add
pop
scas
lods
add
cmp
dec
in
pop
and
add
cmp
aam
stos
sub
add
push
dec
pop
xor
shrl
mov
pusha
add
mov
movsb
add
lahf
xchg
push
add
dec
cmp
mov
mov
arpl
push
enter
xor
or
add
jecxz
sbb
rclb
imul
adc
cmp
imul
add
mov
inc
std
das
lahf
adc
mov
stos
add
mov
test
add
or
mov
add
mov
ret
add
mov
shr
xchg
cmp
mov
jle
push
mov
add
jno
add
fsubs
add
and
add
jl
fbstp
inc
add
add
mov
add
shll
jl
jp
jp
cmp
ret
pop
cmpsl
mov
add
cmp
inc
push
stos
add
add
lock
jecxz
mov
into
mov
mov
sarl
stc
mov
pop
inc
outsl
insb
jo
test
add
add
aad
xchg
addb
pop
insl
pavgb
loop
push
add
mov
add
rclb
imul
imul
std
pop
jl
aaa
add
sub
dec
imull
add
mov
or
add
inc
stos
mov
cmc
push
add
daa
add
aas
and
add
or
add
mov
push
pop
jb
inc
movsl
xchg
js
insb
xor
je
sub
add
pop
cmp
mov
mov
push
leave
push
test
add
loopne
ds
cmpsl
xor
adc
jb
push
lret
add
out
xchg
outsb
pop
fimuls
add
jo
mov
add
jb
and
pop
xchg
add
add
mov
shrb
orl
push
jle
add
add
jno
push
cld
pop
movsb
add
mov
jg
push
mov
lcall
push
stc
ss
insb
outsl
mov
pusha
mov
push
std
dec
mov
out
sahf
les
mov
add
aam
cmpsl
fldcw
add
mov
add
pop
out
pop
mov
std
lock
std
lret
vpunpckhbw
add
cmpsl
ret
mov
sub
or
add
fld
and
pop
pop
push
add
pop
add
mov
xchg
lret
pop
outsb
fwait
inc
lds
add
push
int
lods
add
adc
jns
out
adc
cmc
dec
rcll
fstl
in
insb
ret
test
add
iret
in
mov
jbe
sbb
add
jp
sti
xchg
fucomp
fstpl
cltd
sbb
int
mov
xlat
mov
pop
or
add
cmp
jnp
jp
push
push
mov
insb
sub
add
clc
addb
test
seta
out
push
and
add
je
mov
ja
mov
add
and
cld
mov
mov
or
daa
xchg
mov
add
idivl
add
pop
and
dec
daa
pop
cltd
leave
mov
sub
add
call
out
inc
leave
push
addr16
mov
addr16
xchg
sbb
lret
xchg
loope
inc
sbb
add
addr16
adc
add
mov
negl
test
add
xchg
push
add
shr
insb
mov
pop
popf
jno
jns
cmp
stos
add
lcall
add
xor
xchg
jecxz
ljmp
add
xlat
cmp
rcr
fs
roll
pop
add
add
imul
add
cmp
cmp
adc
movsb
add
pop
jbe
inc
jl
xor
lods
add
sub
pop
repnz
decl
add
dec
pop
jl
out
movb
mov
xlat
sahf
out
in
shll
add
xor
cmp
lret
xchg
add
push
jne
sbb
add
cltd
jne
jbe
jmp
push
add
xchg
shl
in
push
add
jae
outsl
mov
push
popf
inc
test
sbb
adc
les
add
sub
add
and
inc
cmpsl
mov
add
add
movsb
add
xor
ret
mov
jb
fiaddl
add
sti
sub
add
rorl
jnp
mov
add
mov
mov
bound
pop
icebp
cwtl
mov
movsb
add
imul
fbld
xor
and
add
dec
or
fdivr
xchg
adc
xor
and
add
outsb
clc
jl
fisubs
mov
add
das
daa
sub
add
or
andl
push
add
sahf
les
and
add
ljmp
int3
out
add
add
mov
aas
xchg
add
and
mov
dec
pop
mov
pop
push
shrb
add
push
add
sarl
cmc
or
add
addb
jl
js
mov
push
mov
jnp
clc
jge
cld
inc
loope
xor
cmp
add
inc
pop
test
add
add
jns
addb
pop
sti
lcall
je
jns
cmp
push
dec
jns
push
add
negl
jae
test
pop
inc
arpl
add
rol
push
mov
add
push
decb
add
imul
mov
add
adc
sub
fmul
lods
add
pop
fimuls
add
jne
test
add
add
add
pusha
repnz
xchg
and
xchg
jne
add
and
fwait
xchg
add
add
mov
add
inc
add
out
lods
add
mov
add
push
jg
test
add
inc
dec
jl
iret
adc
fstl
and
add
dec
jge
addb
decl
out
test
in
add
and
add
fdivrs
mov
add
arpl
outsl
scas
xchg
xor
add
cmp
jl
scas
add
lret
add
in
lcall
add
dec
add
mov
add
lcall
cmpxchg
push
add
jmp
mov
add
mov
int3
and
add
dec
inc
out
aas
jbe
jb
sbb
arpl
popa
jbe
sub
add
pop
into
sub
xchg
movsl
xchg
add
test
add
sub
add
in
scas
popa
or
add
divl
pop
pushf
lods
das
dec
stos
add
and
add
add
sbb
flds
adc
rolb
les
sbb
popf
xorl
add
popa
push
xchg
std
mov
inc
dec
outsl
pop
cmp
xchg
sub
movsb
add
aaa
sub
add
inc
sub
add
jmp
stc
mov
add
iret
lods
and
add
cld
aam
pusha
bound
push
pop
ret
xor
jg
add
imul
add
jae
dec
ljmp
or
add
mov
rcrl
add
mov
add
repz
pop
hlt
fstpl
and
add
add
addr16
add
fsub
and
add
lods
inc
sub
add
add
push
sbb
xor
rcll
cmc
push
add
lahf
mov
aam
clc
cmpl
repz
dec
out
dec
add
add
sti
xchg
loope
pop
mov
ljmp
aad
fadd
cmovno
fstpt
adc
iret
hlt
push
sbb
repz
adc
add
pop
fcomip
and
add
das
fs
add
adc
xchg
add
sub
imul
popf
shl
add
sbb
into
xchg
push
or
add
and
add
add
cli
daa
or
add
add
fcompl
add
sbb
add
mov
xor
divl
mov
sub
scas
add
fxtract
add
add
inc
pop
addr16
ffree
cmp
or
pop
jo
inc
lds
enter
and
add
in
sub
and
add
mov
cli
shll
cmpsl
jp
aam
push
cwtl
dec
fadd
scas
mov
fs
inc
lret
divl
push
jnp
pop
insl
mov
add
adc
xor
add
leave
push
jge
push
inc
cltd
pop
push
add
outsb
cmp
aam
mov
adc
and
popa
push
dec
outsb
idivb
stc
pop
mov
push
aaa
push
adc
push
add
add
and
add
js
cld
lahf
pop
fildll
inc
push
bound
popf
ja
outsl
loop
imul
fnsave
movsl
push
out
aad
inc
adc
jmp
cmp
addb
sub
dec
pop
insl
and
add
pop
cmpsb
add
mov
jae
push
add
cmp
pop
jl
push
xchg
pusha
in
push
loopne
add
xlat
les
mov
add
insl
mov
add
add
inc
out
add
arpl
and
in
mov
icebp
inc
popf
stc
stc
or
sarl
fxch
bound
add
add
xchg
addb
iret
out
cld
sub
add
cmp
pop
call
push
dec
inc
cwtl
loop
add
push
mov
add
jmp
mov
add
dec
dec
add
cwtl
mov
inc
lods
add
xor
jl
cmpsl
nop
icebp
xchg
jmp
lea
in
and
add
jecxz
add
sub
add
push
xor
daa
mov
fists
mov
lret
add
mov
add
push
out
lahf
lds
and
add
popf
and
add
sub
add
dec
test
add
cmpxchg
add
lds
jmp
cld
scas
in
adc
shrl
cmpsl
or
add
sar
mov
and
adc
scas
xchg
ds
je
lret
stos
add
test
add
psubsw
ja
dec
cli
sub
mov
add
lock
dec
icebp
mov
adc
daa
dec
mov
bound
add
sub
ss
jno
dec
dec
add
or
add
jbe
scas
mov
add
in
add
pop
in
loop
repnz
shlb
add
dec
push
inc
int3
cmpl
xchg
and
jb
push
add
mov
cmp
les
lock
insb
ret
mov
add
add
in
cmp
sub
push
add
stc
and
leave
mov
jg
sbb
fcmovnu
mov
add
outsb
pop
outsl
cmp
cld
add
add
dec
push
jns
add
push
xchg
xchg
mov
jae
stos
js
daa
aas
test
add
and
aad
cmp
add
mov
add
cwtl
push
add
outsl
jne
lcall
mov
add
mov
pop
sbb
adcl
add
push
mov
add
add
lods
pop
sbb
inc
xor
mov
jecxz
sar
jl
jle
push
sbb
mov
mov
das
or
add
shl
adc
or
add
dec
cmp
lahf
clc
xchg
sti
fstl
pop
sbb
cmpsb
add
mov
lea
lret
in
mov
fcompl
jno
dec
js
addb
add
add
bound
clc
popf
jb
add
mov
add
jns
cltd
jns
sbb
icebp
push
hlt
xor
xchg
push
imul
ljmp
cltd
inc
push
sub
add
xchg
outsl
aam
sbb
or
add
xor
add
leave
push
loope
std
add
push
popf
lods
jecxz
repz
aam
pop
dec
sbb
pop
dec
and
add
jle
mov
test
add
adc
addb
xor
cmc
mov
xor
dec
mov
add
add
cmpsl
jno
add
sub
addb
dec
into
pushf
sub
add
jae
in
stc
and
cmp
testl
and
add
mov
add
add
jbe
add
repnz
lods
jno
add
xchg
dec
jbe
add
add
add
imul
mov
sbb
icebp
push
out
inc
lods
inc
inc
dec
not
xchg
test
jno
negb
push
jns
push
sub
or
add
jp
into
ss
loope
fdivrl
add
add
push
push
imul
add
add
add
sbb
dec
sub
add
loopne
push
dec
repz
add
popf
xlat
cmp
add
xchg
jmp
xor
add
fs
push
push
mov
jnp
popf
call
add
mov
add
push
jp
cwtl
iret
inc
jne
jecxz
add
sub
add
adc
std
mov
add
cmp
add
imul
add
mov
add
scas
add
pushf
and
add
mov
lret
cltd
mov
movsl
sub
add
cmp
add
adc
push
lods
adc
xchg
repz
movsb
add
mov
clc
popf
xor
dec
out
mov
xchg
add
shl
daa
mov
pop
je
pop
adc
sahf
loope
xor
test
in
add
pop
and
add
leave
add
add
mov
test
add
je
arpl
int3
mov
test
add
jmp
out
aad
rolb
add
adc
xchg
dec
sub
add
das
add
add
movsl
ljmp
adc
les
sub
inc
das
dec
lahf
ret
xchg
leave
lret
and
push
mov
inc
sub
add
or
add
add
scas
add
fstl
add
inc
and
add
add
cmp
mov
add
paddsw
jns
push
in
xchg
and
add
ja
jmp
inc
sub
add
sbb
xor
or
or
mov
push
dec
push
xor
xchg
pushf
push
lods
add
loop
add
dec
sbb
add
nop
addl
stos
mov
movsl
xchg
icebp
popf
aad
in
push
cmp
dec
dec
clc
jae
je
pusha
pop
lock
inc
lock
mov
or
and
stc
jge
sub
add
aaa
push
add
in
or
add
cmp
movsb
add
jp
or
add
mov
add
aas
jne
inc
mov
dec
dec
inc
addb
push
mov
add
dec
push
add
sub
add
sahf
add
nop
adc
inc
jge
cmp
xchg
pushf
inc
hlt
nop
inc
nop
lahf
outsl
mov
push
add
outsl
mov
jbe
shlb
dec
icebp
movsb
add
mov
stc
mov
sub
add
enter
fst
dec
or
add
push
scas
and
test
add
add
movsb
add
in
test
push
addb
xchg
add
adc
jge
test
add
mov
into
arpl
std
push
scas
outsl
scas
add
adc
das
sbb
cmp
push
mov
aam
add
aas
scas
add
mov
add
mov
add
cltd
mov
ja
and
add
daa
jae
aad
test
xchg
jge
or
add
and
push
add
push
jg
mov
mov
sbb
les
sbb
add
push
les
cli
xchg
add
add
add
mov
mov
ss
fs
xchg
pop
xchg
arpl
hlt
outsl
add
sub
cmp
jmp
in
jp
js
cli
fstl
fsubrs
inc
enter
jp
sti
daa
bound
or
add
xchg
loopne
push
sarb
sbb
in
insl
rolb
xchg
sbb
mov
add
mov
jle
add
or
add
js
push
add
sub
add
icebp
and
add
mov
add
cmp
add
add
add
sub
std
out
ret
mov
add
add
xor
add
ret
jbe
add
fistps
inc
lahf
bound
movsb
add
cmp
mov
add
sbb
mov
inc
shll
xor
mov
mov
rolb
xchg
push
push
add
cmpsl
jno
mull
add
mov
sub
add
and
add
mov
add
sub
add
insl
lds
add
sbb
add
add
je
xorl
add
add
add
in
inc
and
add
mov
add
xchg
jae
out
add
xchg
cwtl
add
xor
push
bound
mov
rcr
push
cmc
jecxz
sub
mov
and
add
xor
push
jae
fucomp
and
add
inc
pop
mov
or
push
mov
or
or
imul
add
ja
pop
or
add
std
mov
outsb
adc
mov
cmc
mov
lahf
mov
gs
mov
icebp
push
outsl
repz
add
push
call
in
mov
add
xchg
je
popf
inc
arpl
xchg
dec
cmpsb
add
int
add
cmp
fstpt
jge
cmpsb
add
imul
iret
push
jl
lcall
rcll
mov
sahf
imul
dec
in
enter
pop
pushf
adc
or
pop
mov
in
pop
rol
jle
outsb
rcll
icebp
dec
in
mov
inc
dec
loop
add
add
add
push
fsubs
sti
mov
and
add
fs
mov
add
add
test
add
or
add
inc
data16
add
push
sub
add
push
xchg
or
add
cmp
add
fnsave
xchg
jp
das
pop
ret
clc
into
repnz
repz
add
cmpsb
add
xorl
add
lret
pushf
add
add
mov
add
mov
dec
jl
data16
add
mov
adc
add
add
dec
xchg
add
mov
cltd
cmc
jns
add
push
inc
outsl
dec
ss
insb
jmp
lahf
inc
sub
add
iret
mov
testb
loop
fisubl
pop
jae
pushf
int
mov
cmp
push
aad
rorl
pop
jae
pop
mov
mov
out
adc
cli
dec
fsts
lcall
push
bound
lahf
jl
add
dec
xor
pop
sti
adc
fistpl
shr
add
sbb
add
add
dec
fimuls
add
mov
add
push
push
repz
fwait
out
push
cmp
jno
mov
add
lea
add
out
ds
mov
mov
adc
inc
divl
add
pop
xor
rcrb
fidivs
sbb
xchg
lcall
add
dec
rol
popf
loopne
sub
add
add
mov
pushf
movsl
daa
adc
sbb
push
xchg
push
add
and
add
pop
inc
mov
add
add
mov
add
js
out
loopne
fwait
repz
sbb
out
dec
addb
lds
ss
nop
push
jbe
and
add
mov
inc
adc
lods
add
in
js
je
jnp
leave
repz
cmpsl
dec
add
and
rcr
in
dec
pop
sub
pop
insb
mov
imul
jle
add
xor
add
arpl
mov
mov
fidivl
pop
xchg
sahf
mov
add
cmp
xchg
out
pop
fldl
mov
aad
nop
mov
add
lds
add
adc
add
lock
jp
movsb
add
sub
add
dec
mov
and
add
add
add
and
add
imul
imul
add
lret
shll
addb
add
pop
lret
sub
add
adc
add
shll
add
add
test
fcompl
loop
aaa
sbb
mull
or
movsb
add
ret
dec
std
jo
add
adc
pop
mov
stos
add
fdivrp
mov
loope
roll
inc
ret
ret
jecxz
in
mov
les
fcmovne
sub
add
sahf
clc
mov
jle
in
push
add
or
pop
fldcw
jg
push
loopne
cmp
add
test
add
xchg
rcr
adc
pop
inc
and
add
add
add
push
mov
xchg
pop
leave
mov
mov
mov
lods
add
jno
mov
addl
adc
lahf
dec
addr16
addb
push
fnstsw
int
sub
add
outsb
inc
pop
jo
jle
add
add
add
pusha
movsl
mov
pushf
fsub
aad
sub
in
pop
inc
mov
add
lock
add
inc
xor
dec
adc
rolb
nop
and
add
xor
mov
add
mov
add
lret
cmpsb
add
icebp
repz
add
iret
adc
in
mov
add
stos
mov
scas
call
lea
outsb
xchg
in
ja
test
add
dec
pop
addb
aad
inc
add
pop
cld
setnp
mov
add
add
mov
fistpll
into
mov
or
xor
int
sbb
insb
xchg
sbb
push
add
jmp
loop
add
lahf
imul
add
and
add
rcll
add
add
mov
jecxz
rorl
jb
dec
hlt
sbb
in
add
notb
add
push
jne
dec
scas
add
push
dec
push
pop
pop
jbe
add
fcompl
sbb
mov
add
loopne
mov
add
mov
add
add
add
sarb
sbb
out
adc
pop
xchg
call
mov
add
add
sbb
aad
push
ds
andl
add
mulb
cmp
cmp
hlt
lahf
add
add
push
imul
add
jns
aam
movsl
sti
test
add
and
add
sbb
dec
mov
lods
add
rclb
dec
repnz
add
aad
sbb
add
iret
out
je
jle
loop
out
repnz
lods
add
jmp
cmc
xor
clc
mov
add
pop
push
lock
or
jbe
lret
add
cwtl
dec
stc
cmp
xchg
adc
pusha
push
xchg
test
add
daa
shlb
push
js
xchg
in
leave
enter
mov
mov
add
out
add
xor
mov
out
add
mov
add
adc
fildll
shll
add
sti
test
sbb
mov
xor
sbb
mov
add
add
add
addb
ficompl
mov
scas
out
mov
sti
jnp
cld
test
aad
enter
jno
and
add
dec
mov
add
add
add
add
mov
add
in
in
mov
rcll
test
add
add
dec
add
vpmaxub
std
sbb
adc
lods
mov
outsl
or
push
outsl
cmp
or
add
add
hlt
sbb
addb
cmpl
cmpsl
and
add
dec
mov
xchg
add
shrb
xor
in
mov
push
mov
lds
mov
add
mov
add
xor
test
add
ljmp
repz
add
cltd
rclb
push
add
cld
fists
add
cmp
sub
add
outsb
xchg
xchg
dec
in
xor
cmc
cli
push
or
mov
push
add
lcall
sub
add
outsl
adc
mov
inc
popa
or
add
add
add
add
mov
add
inc
ror
sbb
imul
pop
fdivrp
and
lret
loope
add
pop
pop
dec
daa
fnstsw
add
repz
or
add
stc
push
sbb
push
mov
xor
dec
lock
add
add
mov
pop
scas
or
add
push
push
sbb
add
cmp
and
add
sahf
and
mov
cltd
fwait
pop
pop
jmp
add
add
fimull
pop
mov
add
repz
jmp
add
dec
dec
push
mov
insl
daa
fwait
in
repnz
test
addb
jmp
stos
push
add
jge
xor
stc
jmp
add
cmp
mov
sbb
ds
xchg
cmp
add
add
hlt
xor
les
cmp
ret
lock
ja
jmp
xor
add
data16
add
add
test
add
sub
add
ret
sub
add
add
mov
ret
jle
pop
shlb
jg
add
cltd
insl
xchg
add
add
inc
sub
add
mov
out
mov
mov
add
adc
data16
add
inc
jne
scas
bound
movb
xchg
sub
add
into
out
mov
cmpsl
xor
stos
add
hlt
dec
ss
sbb
out
shll
sbb
mov
int3
loope
xlat
cwtl
mov
mov
mov
cmc
inc
mov
mov
add
adc
jge
insb
add
test
add
jae
mov
push
idivl
or
add
and
pop
adc
add
and
add
rorb
mov
inc
jmp
aas
ss
imull
cmp
xor
std
rcl
add
daa
dec
pop
inc
or
add
fdivs
popl
scas
add
adc
testb
mov
dec
and
add
imul
jns
insl
shll
xchg
sahf
pop
sub
jns
adc
add
mov
dec
repnz
mov
jns
xchg
loopne
addb
call
jbe
mov
adc
add
in
add
xchg
xchg
add
jp
int
push
jbe
add
lret
add
decl
pop
fldenv
add
sti
push
aad
xor
inc
push
cmc
call
add
add
scas
push
add
push
outsl
enter
dec
sti
push
add
and
out
push
xchg
mov
fiaddl
sbb
aam
add
and
add
jl
xor
sub
add
test
iret
js
icebp
rcrl
add
rcrl
insl
ret
ret
add
cmpsl
sbb
shlb
add
xchg
add
add
jge
andps
jge
ds
add
icebp
aas
outsl
leave
test
xor
outsl
mov
adc
add
enter
test
adc
addb
test
jo
add
lahf
push
xchg
add
add
add
xor
dec
push
stos
or
add
pop
xchg
hlt
xor
sbbl
enter
cld
stos
js
push
ret
out
xchg
jmp
add
addb
inc
movsb
add
rolb
scas
add
or
add
xor
add
add
shll
and
add
push
xor
cmpsb
add
sarl
aaa
cmp
cld
mov
add
add
and
add
je
sub
push
jl
inc
stos
dec
xchg
mov
add
push
inc
stos
add
negb
mov
add
push
add
mov
popa
dec
movsb
add
jg
in
jl
inc
sub
sbb
cmp
divl
call
cmp
fdivr
aas
scas
addb
mov
add
in
ja
and
stc
sub
nop
inc
cmp
jecxz
test
add
outsl
dec
push
lock
int3
sub
or
add
jl
add
fisubl
add
sbb
cwtl
mov
jne
fstps
lcall
lcall
pop
and
jb
push
jl
out
in
mov
add
dec
bound
add
mov
add
push
dec
lcall
scas
cld
xchg
mov
pop
dec
mov
addr16
sbb
cmp
add
cmp
xor
jbe
inc
fwait
sub
nop
pop
xchg
fidivrs
push
add
mov
xchg
push
repnz
add
incb
add
test
add
pushf
or
add
out
sub
jns
addb
or
add
mov
pop
mov
mov
sbb
mov
add
jns
lock
add
xor
loope
dec
jl
scas
sub
add
adc
cmc
fwait
outsb
pop
jle
imul
xchg
add
add
or
mov
sbb
mov
mov
bound
add
or
add
dec
jge
movsb
add
out
jecxz
inc
lods
add
cmp
test
add
push
push
lcall
and
dec
lea
add
movsl
and
in
inc
xchg
xchg
add
push
shl
and
sbb
add
xchg
lea
imul
xlat
and
add
pop
mov
jnp
xchg
mov
hlt
cwtl
addb
repnz
pop
fidivrl
mov
pop
pushf
loopne
add
fwait
mov
add
add
sub
sbb
xor
aad
sbb
popa
sub
add
xchg
sarb
add
cltd
sbb
add
add
movsb
add
hlt
pop
inc
jg
dec
inc
scas
add
pop
int
mov
cmp
add
cwtl
cmp
add
push
test
add
not
insl
xor
add
add
add
mov
aad
add
in
add
push
sub
add
xchg
sarl
push
fimull
pop
fstpl
add
add
cmp
jo
test
add
sub
add
mov
add
pop
cld
out
adc
sarl
enter
mov
adc
fwait
lret
jg
stc
addb
lds
jl
ljmp
xor
int
inc
imul
in
dec
mov
aam
sub
add
sbb
xlat
pop
addb
push
repnz
mov
push
std
adc
int3
fadds
lahf
movsl
dec
cmpsb
add
and
loopne
mov
add
shl
pop
push
sbb
add
pop
enter
dec
das
inc
cmp
xchg
add
push
add
add
add
ss
add
rcr
fs
add
adc
or
add
insb
xchg
add
and
xchg
xchg
add
add
push
divb
out
xchg
scas
ss
lcall
add
test
sarl
out
and
jg
fcom
xor
add
std
cmp
mov
test
add
xchg
test
out
insb
adc
jnp
add
add
aas
push
jne
fstl
mov
cltd
dec
pop
jp
cmp
jp
fidivrs
mov
jp
cmp
push
add
gs
add
cmp
ret
leave
movsb
add
mov
pop
pop
dec
add
mov
add
xchg
std
ret
test
add
fisubrl
punpckhwd
add
push
mov
add
jle
mov
xor
mov
ret
mov
and
add
push
out
cmp
dec
dec
add
adc
mov
pop
add
add
leave
sub
and
add
mov
fs
or
add
fs
jne
sahf
in
push
addr16
sbb
daa
push
jb
mov
add
test
add
bound
add
add
add
mov
xchg
cmpl
inc
pop
dec
test
pop
mov
add
and
add
fiadds
mov
xchg
add
inc
pushf
add
jne
addb
inc
inc
sti
sub
add
fcoml
push
leave
add
xchg
adc
popf
dec
add
xor
test
add
jbe
sub
iret
xchg
les
xor
int
pop
ss
mov
xchg
pop
movsb
add
inc
in
loop
push
mov
add
clc
lret
fcmove
sub
add
mov
add
push
fidivl
arpl
push
sub
ja
enter
fldenv
out
std
test
lea
add
shl
stc
sub
add
sub
add
cli
fidivl
jp
jecxz
add
cltd
pop
addb
pusha
xchg
ret
push
adc
call
add
lret
or
cmp
sbb
hlt
stc
pop
cmp
xchg
pop
je
mov
cmp
aaa
ret
loop
std
mov
xor
xchg
sarl
jmp
mov
xlat
lds
cmc
mov
stos
add
sbb
mov
mov
mov
add
add
out
insl
push
add
mov
add
mov
mov
cmp
sbb
in
and
add
fwait
cmpsb
add
out
mov
or
add
repz
cmp
shl
cltd
and
mov
pop
xchg
hlt
pop
inc
jl
dec
or
add
std
sbbl
sub
add
jg
mov
cmp
rorb
add
adc
ja
into
stc
and
add
pusha
or
add
call
popf
sub
int3
test
hlt
cmc
push
add
push
outsl
subl
stos
add
mov
add
movsb
add
aas
inc
cwtl
inc
add
fbstp
xlat
inc
push
add
aam
pop
mov
out
in
inc
xchg
add
push
fcom
mov
cmc
movsl
out
out
in
cmp
sahf
cwtl
cli
jle
mov
add
int
insb
pushf
pop
stos
jge
add
test
add
addr16
daa
sub
add
mov
jns
scas
sti
xor
push
call
sbb
push
pop
sub
negl
sbb
inc
add
add
add
repz
sbb
jecxz
pop
mov
test
adcl
fnop
negl
daa
add
add
dec
or
jge
addb
add
xchg
dec
cmp
xchg
and
scas
add
inc
xor
xchg
test
add
mov
add
repz
mov
sbb
adc
dec
rclb
add
ret
mov
push
rolb
lcall
je
or
add
icebp
push
jnp
or
add
loopne
add
lahf
rolb
adc
clc
fbld
sbb
xchg
addb
and
inc
mov
add
sub
add
lret
jae
mov
mov
add
sub
or
mov
add
ja
mov
icebp
mov
popf
outsl
xor
aam
les
and
sbb
dec
mov
leave
or
dec
pushf
lahf
cmova
add
roll
jnp
mov
in
jp
lock
dec
imul
imul
sub
push
filds
jb
push
cmp
arpl
stos
test
xor
add
add
pusha
movsb
add
add
shl
rcl
xor
add
inc
aaa
test
add
andl
add
stc
icebp
dec
in
add
add
bound
mov
rclb
data16
inc
xor
jo
ret
add
add
sbb
stos
aad
addb
dec
fstl
jno
rolb
xchg
rorb
add
add
add
and
add
xor
add
mov
add
fwait
xor
addb
sbb
jle
pop
jns
hlt
dec
dec
dec
push
add
lcall
add
add
sti
popa
and
cltd
push
jge
loopne
mov
add
mov
fsubrl
inc
ret
push
push
popf
lea
jnp
jge
shr
lahf
mov
sub
or
int3
daa
out
cli
fadd
loopne
adc
push
sbb
adc
xchg
mov
fstenv
add
push
imul
push
in
aad
pusha
inc
loope
sbb
aad
add
out
mov
add
sahf
ss
add
add
and
lock
imul
add
lret
add
sub
add
addb
cltd
jg
into
add
cmpsl
jnp
imul
rol
and
add
mov
add
jns
lods
add
addr16
cmp
and
add
arpl
fstpl
loop
add
loopne
add
jmp
add
into
xchg
xor
data16
add
jnp
lahf
dec
movsl
pop
or
subl
and
add
nop
add
add
add
add
jne
hlt
push
daa
xor
add
add
inc
jle
roll
add
popa
cmp
add
icebp
add
js
dec
les
add
mov
add
and
or
mov
inc
add
inc
inc
pop
add
sub
add
add
ret
add
jle
ja
and
add
aas
in
dec
lds
pop
inc
inc
jecxz
out
push
enter
mov
subl
das
inc
xlat
jl
mov
mov
fcoms
xor
add
inc
jbe
fninit
sub
add
inc
mov
sahf
js
add
pop
rol
and
add
push
sub
add
fistpl
fmull
and
jno
dec
imul
dec
mov
mov
sub
push
mov
add
or
add
push
hlt
mov
lret
mulb
test
add
xor
push
push
add
adc
shrl
inc
je
ret
sbb
scas
sub
mov
test
push
mov
add
test
mov
cmp
loopne
vucomiss
add
add
xchg
ja
mov
pop
jo
in
dec
cli
pop
into
add
dec
xor
cmp
cmp
or
cltd
jno
iret
mov
clc
adc
mov
add
ud0
popa
arpl
sub
loope
add
or
add
ret
lahf
cli
movsl
js
and
add
stos
add
fcomp
loop
nop
push
add
and
add
xor
add
mov
add
cmp
in
pop
pusha
into
mov
add
fbld
xchg
fiadds
push
cld
xor
clc
or
mov
add
jbe
xlat
scas
mov
mov
sub
add
sbb
adc
fsub
fdivrl
add
dec
mov
imul
add
mov
add
leave
out
add
cmp
adc
add
sub
testb
jecxz
add
mov
out
xor
add
add
inc
inc
mov
push
add
dec
enter
sbb
jno
cmpsb
add
sub
add
inc
out
jmp
lret
add
sti
jns
imul
fsub
inc
shrl
ret
add
ja
fwait
int
add
inc
out
sub
add
xor
pop
bnd
rolb
jle
add
pop
out
ret
test
add
cmp
mov
pop
cmp
movsb
add
or
add
dec
add
cmp
xchg
xchg
insb
aad
out
jmp
push
add
sbb
call
call
pop
cmpsl
inc
adc
in
mov
add
inc
test
add
jnp
hlt
jnp
mov
mov
shll
add
or
add
jb
add
addb
add
add
xchg
push
or
test
add
xor
lahf
inc
xor
add
ds
call
fwait
mov
ficompl
mov
push
shl
je
sti
or
add
push
push
iret
pop
push
cmp
add
popf
rep
add
add
daa
dec
leave
out
fsubs
sbb
xchg
jno
test
add
add
subl
adc
addb
push
cmp
daa
fs
or
add
lds
add
add
sbb
add
sub
fs
push
jg
sub
add
arpl
outsb
and
or
add
loope
add
adc
out
xchg
clc
and
add
add
xor
shr
pop
mov
add
ss
out
and
stos
add
push
pusha
int
lods
add
std
sub
loope
mov
xor
add
sub
add
fwait
xor
add
rcr
jge
rolb
and
add
jbe
fnstenv
mov
insb
pop
xchg
aam
ja
jecxz
pop
inc
pop
mov
xor
dec
cmp
mov
pop
jno
pop
pop
push
rcll
lahf
sti
xor
fsts
dec
push
mov
mov
add
jle
lods
jge
xchg
push
addb
mov
add
fisubl
pop
or
dec
lods
add
sub
insb
add
sub
add
addr16
call
jle
mov
arpl
add
aaa
jmp
ja
lret
push
addr16
rcrb
add
cmp
inc
pushl
add
les
mov
shrl
inc
mov
lods
add
sbb
rcrl
xchg
daa
jbe
cmp
xchg
fwait
out
or
add
add
pusha
arpl
jno
bound
add
push
imul
add
xor
adc
lcall
add
gs
mov
push
fimuls
inc
inc
sbb
xchg
mulb
add
loop
shrl
add
cmpsb
add
stos
pop
or
add
xchg
add
and
add
clc
das
adc
jmp
inc
inc
adc
ficoml
add
add
add
pushf
mov
cli
dec
mov
cmp
ret
call
pop
nop
xor
icebp
push
jl
pop
pop
pop
xchg
mov
js
dec
fstps
or
add
add
xchg
not
push
out
aam
xchg
mov
add
jp
and
add
lahf
nop
js
add
aas
mov
pop
add
add
add
popf
or
add
add
rcrb
loope
add
aaa
mov
xor
jne
shrl
inc
xchg
jge
sbb
add
stos
add
testl
lahf
inc
push
popf
mov
add
sbb
add
outsb
or
add
adc
pop
mov
add
fcmovne
loop
inc
dec
sbb
inc
imull
pop
jb
push
xchg
lods
add
mov
int
ds
std
xor
stc
cmp
fsts
push
fs
cmp
roll
cmp
add
add
stc
mov
sbb
fnstsw
les
add
or
add
loop
movsl
stos
add
loope
adc
cmp
arpl
push
loope
dec
push
push
lahf
shl
add
add
push
dec
inc
lods
xorl
mov
pop
and
push
popa
cmp
lahf
sub
mov
add
xchg
cmp
add
add
sar
int
fcoml
dec
popf
mov
fwait
int3
ffree
or
inc
jl
cli
xchg
add
add
add
add
add
mov
pop
mov
data16
add
xchg
jp
gs
jg
ret
test
fcmovb
dec
dec
insl
jb
enter
fwait
loop
mov
add
add
inc
mov
fistpl
mov
or
add
add
lahf
adc
in
mov
add
dec
pusha
push
fs
scas
add
mov
movsb
add
pop
xor
pop
aam
sub
inc
enter
mov
lahf
inc
sub
test
add
ss
add
iret
mov
lds
lods
add
sub
add
add
sub
add
mov
test
add
add
inc
movsl
fldcw
pusha
push
inc
or
add
add
in
sbb
xchg
lcall
add
pop
inc
xor
mov
adc
lds
cld
xchg
add
jns
movsb
add
mov
arpl
stc
test
mov
add
add
push
mov
lahf
cmp
roll
outsl
lret
nop
in
xchg
xchg
mov
int
push
add
add
mov
add
dec
dec
loop
test
add
fcmovb
data16
cmp
inc
movsl
and
add
imul
dec
add
add
jp
dec
adc
scas
add
pop
push
xor
mov
dec
stos
add
stos
int3
clc
out
cmc
int
fimuls
add
stos
jecxz
add
stc
or
lahf
mov
cmpsl
jp,pt
scas
hlt
fwait
test
add
movsb
add
sub
add
jne
cld
repz
add
ret
arpl
sbb
sbb
add
ficompl
sub
add
add
add
add
test
add
jl
jno
inc
xchg
popf
push
mov
mov
add
pop
add
xor
ljmp
cmpsb
add
sti
fldt
movsb
add
xor
in
cld
jl
mov
add
arpl
inc
mov
mov
add
mov
out
ja
aaa
insl
js
jnp
add
pop
dec
into
fdivrl
mov
jo
dec
sbb
mov
pop
xchg
pop
loope
add
cmp
or
das
inc
add
sahf
pop
cmp
dec
cmp
cmp
add
adc
dec
xchg
popa
sub
add
sarb
sub
add
add
out
adc
out
inc
cltd
mov
lds
add
fwait
enter
lea
addb
pop
mov
js
lahf
in
ds
and
add
jns
lds
cmp
push
push
xchg
jb
push
mov
lcall
ljmp
mov
ret
sbb
jno
xchg
add
cmc
add
mov
add
or
pop
cltd
ja
jle
jnp
jle
xchg
add
add
in
add
aaa
fnstcw
add
int
rcll
nop
sub
sti
fstpl
mov
mov
mov
add
pop
cmp
movsb
add
xchg
add
cld
sbb
xchg
push
data16
add
add
add
inc
scas
add
and
add
pop
outsb
divb
add
ret
jae
mov
jle
add
add
pop
popf
je
clc
scas
add
sbb
pop
out
loopne
mov
in
cmpsl
stc
cmp
add
add
mov
add
add
xor
xlat
xlat
push
cli
data16
or
mov
fwait
cmpsb
add
mov
dec
scas
int3
dec
or
add
add
pushf
int
jo
notb
or
imul
frstor
aad
add
or
add
nop
call
xor
data16
dec
cli
push
rcrl
lods
int3
pop
je
and
push
add
adc
jbe
push
ret
adc
and
add
sbb
dec
jle
bound
out
adc
addb
fdiv
pop
and
icebp
jnp
push
enter
add
lret
aam
adc
not
ja
push
dec
mov
dec
mov
add
jae
fisttps
mov
jns
fsubrs
sbb
sbb
jecxz
add
addl
jns
push
mov
xchg
add
add
scas
pop
push
lea
add
imul
add
pusha
lret
xor
std
xor
aad
cmp
dec
cmpl
add
xor
push
mov
out
or
add
rorb
mov
mov
fcmovbe
fistpll
jecxz
and
add
pop
and
out
xor
add
inc
inc
outsb
jmp
jae
scas
add
or
add
push
or
add
fdivrs
add
inc
or
xor
mov
sub
add
push
mov
mov
cmc
or
pop
leave
daa
lods
add
and
lock
add
inc
push
add
in
add
and
adc
scas
mov
gs
ror
add
add
dec
cmp
ds
jnp
lcall
xor
fnsave
add
dec
cmpsl
xor
je
sub
add
xor
adcl
add
insl
mov
lcall
inc
add
mov
outsl
push
add
dec
mov
rolb
fucomp
dec
xchg
imul
fdivl
pop
sbb
add
adc
mov
or
jno
loopne
xorl
sar
sbb
mov
add
aad
nop
ja
mov
add
repnz
sub
out
lock
add
cmpsl
iret
or
notl
frstor
sub
fldl
stos
shll
dec
hlt
out
sbb
lock
or
add
or
add
add
add
in
jb
mov
in
mov
ret
xchg
jp
xchg
repnz
icebp
mov
add
jge
xor
add
cmpsl
aaa
xor
sbb
addr16
jae
push
mov
push
mov
dec
push
fcompl
xor
add
call
or
mov
push
mov
add
test
jb
stc
jns
mov
pop
push
lret
bound
mov
fstps
xchg
add
mov
push
bound
pop
outsb
sub
add
pop
jno
add
fwait
int3
dec
popa
xor
add
push
mov
fisttps
std
push
mov
add
pop
test
add
ja
push
xor
add
mov
cmp
add
movsl
push
mov
je
inc
pop
mov
cmc
jp
enter
iret
cmp
les
jp
xchg
pushf
inc
inc
scas
pop
adc
add
out
jp
cmp
int
movsl
lea
test
push
pop
sahf
fcomp
mov
daa
aas
or
add
or
add
inc
out
insb
or
add
das
push
sub
add
lock
inc
xor
ret
jnp
add
mov
dec
pop
popf
dec
fwait
addl
adc
add
cltd
in
jle
imul
dec
enter
dec
push
cmc
jecxz
xchg
int3
call
add
inc
fcoms
pop
loop
mov
adc
pop
jno
inc
jbe
inc
inc
xlat
xor
mov
nop
arpl
shll
add
insb
xor
outsl
lods
lods
mov
add
add
std
aam
add
or
add
call
xor
mov
les
add
ret
xchg
pop
or
add
xor
add
mov
add
add
pop
xchg
scas
add
mov
add
lea
add
pop
dec
and
add
jbe
cmp
jg
pop
pop
jne
mov
add
popf
std
mov
pop
fcomip
jb
add
clc
insb
fsubrl
add
inc
push
and
xor
jg
add
xchg
lock
notb
add
sbb
sub
add
insl
cli
jnp
pop
addb
jae
call
add
jo
shlb
dec
jl
add
lock
and
mov
sbb
jge
into
add
out
or
add
pop
out
xor
sub
sub
cli
push
mull
or
add
ljmp
jnp
arpl
pop
fucomip
out
inc
cmpsl
xchg
flds
mov
xchg
pop
xchg
testl
dec
fisubrl
add
xchg
adc
scas
add
sub
fwait
incb
add
lods
add
jbe
sbb
in
add
bound
and
add
scas
add
cli
int
repnz
adc
pop
mov
push
inc
mov
push
add
xchg
add
fsubrp
jmp
dec
rorb
lock
xchg
push
cmp
pop
sarb
dec
inc
mov
test
add
je
ret
jae
pop
add
add
in
clc
mov
add
dec
inc
pop
mov
add
push
add
out
mov
add
dec
xchg
test
add
add
push
mov
add
repz
sbb
add
push
and
add
or
add
jno
xor
mov
add
or
out
movsb
add
negl
add
add
pusha
addb
pop
sbb
sbb
mov
xchg
test
adc
add
sub
add
add
mov
add
rolb
xor
aad
xor
popa
cmp
add
in
int
add
shrb
add
push
add
in
sti
inc
inc
xchg
and
adc
lahf
cltd
inc
iret
lahf
cmp
fldlg2
mov
int3
cld
add
push
popf
loop
inc
roll
add
xor
adc
mov
testb
add
into
jbe
add
cmp
add
iret
ret
jp
add
jle
add
popf
call
xor
mov
add
lds
jno
sarl
add
aad
aas
movsl
sub
add
fldenv
iret
ja
add
mov
pop
ret
cmpsl
xlat
add
add
add
xchg
jne
jge
add
iret
imulb
mov
shl
repnz
loope
add
add
add
add
add
add
loope
lret
push
mov
add
add
mov
add
mov
add
mov
mov
lods
add
pop
mov
or
add
nop
popf
pop
sub
add
int3
outsb
xchg
and
popf
jo
xchg
fcomp
cmp
lahf
jbe
fiadds
add
fcmovne
repnz
mov
add
rorl
jbe
addl
add
mov
xor
mov
shr
imull
fstpl
subl
ret
shlb
add
scas
pop
sbb
ficompl
clc
push
add
add
fisubl
iret
and
add
sub
add
sti
fsubr
mov
pop
sti
mov
add
loope
mov
adc
nop
sahf
cmpsl
in
popf
addb
mov
sbb
fsubrl
add
repz
push
into
mov
add
inc
push
jecxz
add
adc
and
add
sub
add
loopne
repnz
rol
add
push
add
out
and
add
mov
into
fisubs
add
xchg
pop
xlat
xchg
cld
outsl
das
or
add
cmpsl
ret
mov
pop
mov
leave
fadds
jl
pushf
add
add
add
imul
daa
xchg
cmpsl
jl
or
scas
adc
and
or
mov
add
push
xor
inc
mov
aam
out
aaa
outsb
xlat
xchg
adc
dec
mov
bound
push
add
pushl
xor
jne
jge
add
add
pop
adc
in
cmpsl
add
add
add
push
inc
repz
push
sub
add
ja
ret
int3
xchg
pop
clc
lds
cmp
test
aaa
sbb
mov
add
lods
or
add
das
gs
dec
sbb
add
mov
adc
cmp
xchg
outsb
add
adc
mov
mov
add
add
lret
test
xchg
mov
scas
add
mov
sbb
dec
jne
xchg
cmp
xchg
sbb
les
add
insl
aad
sti
lods
add
addr16
inc
and
xor
add
pop
lods
add
pop
cld
xchg
hlt
out
loopne
jnp
lret
add
jb
dec
mov
add
inc
push
or
lahf
int
jbe
pop
mov
add
add
adc
push
test
stc
int
enter
add
movsl
push
lahf
gs
mov
add
mov
rorb
addb
imul
and
add
add
outsb
pop
jne
and
sti
scas
add
adc
shl
add
xchg
add
fstpt
jb
cmpsl
push
scas
add
mov
add
mov
pushaw
insb
add
add
cmpsb
add
lret
mov
mov
add
pop
fucomi
lods
scas
add
lds
fcmovnb
push
jmp
adc
orl
aas
sarw
add
pop
mov
xor
jb
jbe
add
push
loope
add
add
add
outsl
in
out
and
pop
nop
add
add
lahf
mov
add
add
mov
test
jmp
in
leave
inc
mov
add
stos
or
add
fidivs
add
jb
aad
jl
outsb
mov
add
push
mov
mov
add
fistps
adc
add
adc
enter
xchg
jne
add
dec
rcll
fists
mov
add
add
pusha
or
add
sub
inc
jno
dec
pop
int3
rol
add
in
int
add
push
fmull
dec
pusha
pushf
sub
cld
stc
js
gs
or
ss
mov
gs
adc
jp
inc
push
add
or
sub
iret
test
add
aam
stc
int
inc
xor
outsb
jmp
push
mov
add
jge
xchg
add
adc
sahf
push
mov
cwtl
adc
test
icebp
icebp
dec
push
push
xlat
push
fcompp
cmp
mov
push
mov
xor
sbb
jae
add
dec
stc
jne
add
out
test
pusha
iret
fwait
mov
dec
insl
cmpsb
add
mov
fiaddl
xor
xchg
add
adc
inc
xchg
add
iret
mov
push
rcll
mov
inc
add
add
cmp
sub
fwait
sbb
xor
adc
jp
fstl
cmp
fidivrl
ja
cmp
fwait
int3
fxch
aad
and
add
add
push
push
add
lock
pop
mov
adc
sbb
inc
xchg
call
fsubl
addr16
mov
add
add
shrb
ss
fbstp
mov
add
int
fldpi
pop
roll
xchg
dec
xchg
aad
add
imul
or
add
xor
test
or
xor
cli
popa
cld
push
pop
call
cmp
lret
add
add
cltd
sbb
push
jo
rcll
scas
repnz
push
std
jle
je
mov
add
pop
sub
hlt
mov
push
add
outsb
fdivrl
mov
add
and
xor
test
push
mov
add
add
imul
jge
mov
add
imul
jp
outsl
fstpl
scas
mov
xchg
outsl
lods
nop
inc
mov
jp
sub
add
add
cmp
add
int
inc
push
mov
add
jno
outsl
addb
cmp
fs
out
rcrl
add
fdivrl
jecxz
int3
push
push
pop
add
xacquire
fistps
icebp
int3
xor
ret
lcall
cmp
mov
add
data16
pop
out
lret
pusha
xor
in
inc
lods
add
xchg
add
ds
addb
movsb
add
jo
xlat
mov
ficoms
add
testb
leave
ljmp
pop
cld
stc
sbb
inc
or
addb
mov
test
frstor
iret
loopne
add
add
and
add
fwait
lea
sbb
jle
ljmp
add
jecxz
inc
mov
add
pop
push
inc
inc
in
adc
rcrl
int
sub
add
pop
fidivs
movsl
jle
in
movsl
mov
add
pop
adc
jmp
test
add
adc
inc
mov
std
mov
mov
dec
mov
or
outsb
repz
and
cmp
add
jns
dec
xor
test
add
add
push
add
sub
sbb
std
ret
cmpsl
mov
sbb
add
pusha
push
jns
ljmp
add
daa
or
add
pop
out
rolb
ss
add
mov
sbb
insb
sahf
insb
pop
call
dec
sub
add
mov
push
add
push
ljmp
int3
cwtl
daa
add
cmp
mov
mov
sbbl
loopne
dec
dec
xchg
mov
xchg
in
add
mov
add
cmp
inc
jo
movsb
add
nop
sahf
push
cmpsl
mov
add
iret
iret
repz
fdivrl
in
sti
popa
pop
xchg
and
add
or
arpl
addb
push
push
mov
add
fwait
mov
outsb
leave
xor
dec
jo
sub
add
add
jp
xchg
fs
and
add
int
add
fsubs
add
lcall
jns
and
add
push
add
fcompl
mov
add
dec
xchg
jae
out
add
dec
and
lea
push
ds
jb
out
sbb
add
add
ja
pushf
nop
insl
xor
mov
aad
mov
mov
add
shll
test
add
inc
jp
cmpsb
add
adc
add
mov
into
nop
lods
add
add
adc
cmc
lds
mov
add
leave
dec
push
cmpl
bound
or
add
xchg
popa
daa
and
jno
mov
jl
dec
cmp
sahf
scas
add
push
mov
cltd
xor
scas
add
lahf
testb
mov
add
imul
js
pop
inc
jne
add
shrb
mov
add
enter
mov
sbb
cmpsl
test
fmull
btr
jp
add
or
add
push
mov
rcrb
in
jge
into
rclb
and
add
pop
mov
add
mov
mov
add
sbbl
add
outsb
push
shll
add
out
add
pusha
imul
fidivrs
std
and
add
pop
inc
cwtl
xchg
mov
pop
xchg
lock
arpl
dec
cmp
add
and
inc
sahf
out
cmpsb
add
jae
cmc
lds
lock
inc
jae
push
rcll
push
jns
add
std
push
stos
or
das
fisttps
add
gs
sti
aas
lock
add
push
test
xchg
repnz
inc
lods
or
add
add
or
add
movsl
and
add
fs
cmp
in
mov
mov
xlat
push
xchg
mov
insl
mov
add
pop
pop
sbb
sub
pop
popa
pop
inc
jae
mov
adc
add
iret
xlat
out
pop
push
inc
clc
negl
add
add
fnsave
scas
add
lods
sbb
ds
jle
inc
fistps
enter
add
lcall
insb
sub
jno
pop
lcall
jl
xor
scas
xor
fists
cli
fisubrl
lcall
adc
fstpt
add
mov
in
nop
sub
add
cmp
shlb
ds
in
std
lea
fsubrl
add
jb
sub
dec
stc
jmp
dec
inc
pop
iret
cmp
add
mov
mov
hlt
fcomps
mov
add
jmp
stos
adc
cld
push
jnp
inc
add
pop
fisubs
ret
lea
push
call
sbb
sub
add
add
push
add
add
add
or
add
sbb
loopne
fildll
clc
xchg
mov
add
cld
lea
mov
add
add
xor
mov
adc
xor
lret
mov
sub
add
cmc
add
add
jl
mov
in
sbb
inc
outsl
push
sub
pop
sub
icebp
dec
pop
decb
add
std
mov
jno
sti
mov
std
cmp
cmp
mov
mov
insl
test
inc
nop
hlt
repz
push
push
jmp
add
or
cmpl
inc
push
add
inc
adc
mov
push
inc
and
add
mov
test
add
add
jle
and
xlat
sbb
insb
mov
push
pop
fs
add
mov
scas
add
and
push
sbb
add
dec
jp
add
jl
add
lea
aam
loope
xor
xchg
ds
add
cmp
rolb
out
lock
add
mov
pushf
int
pop
sbb
mov
add
movsb
add
or
add
add
aad
sbb
addb
aam
add
addb
out
add
mov
addb
in
shlb
sub
mov
pop
movsl
xchg
add
lods
mov
add
cld
loope
outsb
fistps
sub
add
rolb
add
shlb
xor
xchg
movsl
stos
pushf
iret
inc
pop
ss
stc
cmp
push
cwtl
adc
lods
add
les
mov
and
add
push
daa
and
add
add
and
movsl
inc
out
add
jno
add
add
and
xor
xchg
xchg
addb
rol
arpl
sarb
add
loopne
stos
ret
and
add
scas
add
mov
add
add
mov
jae
dec
leave
push
add
inc
xchg
add
add
test
lods
add
cmp
xor
push
add
mov
add
add
testb
adc
add
or
pop
add
add
cmp
add
data16
push
or
lods
add
daa
cmp
pop
mov
mov
movsb
add
dec
push
add
jno
cli
mov
add
loopne
aad
sbb
dec
sbb
xchg
add
add
mov
add
sahf
into
aad
add
sarb
imulb
rorb
add
stos
push
addb
ss
ret
add
add
jge
xchg
mov
pop
jb
outsl
out
xchg
test
sub
add
add
push
out
call
sti
in
lret
pop
cli
xchg
into
or
add
xlat
xor
ss
ljmp
loopne
add
movl
dec
lea
add
and
add
sbb
cld
test
add
not
sub
push
inc
and
add
and
fldcw
or
add
add
pop
pop
scas
pop
cld
into
adc
push
mov
add
add
push
lods
add
sti
cmp
jnp
add
nop
mov
cwtl
adc
loope
add
add
adc
stos
sbb
xchg
cli
popf
dec
sbb
lcall
insb
iret
int
sbb
jno,pt
sub
out
cmp
jno
add
dec
mov
mov
dec
fs
lock
add
icebp
push
movsb
add
adc
add
out
aam
add
add
nop
fistpll
mov
pop
sbb
cmp
add
pop
xor
sub
add
add
mov
int3
out
and
add
xor
inc
mov
add
jecxz
adc
xor
cmp
pop
mov
pusha
xor
lret
fisubl
out
pushf
lret
popa
js
xchg
mov
fsubs
jne
pop
or
clc
mov
mov
stc
bound
test
add
push
add
add
add
scas
out
loope
ds
idivb
xchg
or
add
add
ljmp
push
mov
xchg
adc
dec
cltd
cmp
add
mov
gs
adc
or
add
mov
add
dec
sbb
and
add
adc
add
shl
push
adc
dec
mov
int
ret
xor
add
movsb
add
mov
lret
into
inc
sub
add
add
popf
jbe
rorb
xlat
pop
in
and
and
add
ljmp
pop
test
add
loop
test
add
pushf
xchg
fsubr
movsb
add
outsl
and
adc
jne
dec
adc
fsubl
cli
cmp
add
movsb
add
inc
mov
or
add
insb
adc
sub
pop
je
cwtl
sbb
out
add
add
ja
sbb
cmp
enter
das
xchg
mov
dec
jo
jp
gs
lahf
add
add
jl
stos
mov
pop
mov
adc
add
add
xchg
cmp
ljmp
mov
out
je
mov
sbb
fwait
adc
xchg
sub
jmp
clc
jb
fdivrl
sahf
pusha
sbb
mov
out
dec
movsl
xchg
cmp
mov
add
add
test
add
add
aas
sbb
int
daa
sub
add
js
outsl
mov
add
inc
aad
xlat
shrb
sub
add
mov
add
addb
xor
add
push
jp
pop
mov
jge
add
aam
add
sbb
mov
mov
add
rcrb
mov
cwtl
fadds
adc
add
repz
data16
push
test
mov
jmp
jl
add
jo
add
and
add
pop
jp
mov
sub
add
pop
jecxz
cmpsl
lea
jns
incb
jbe
repz
add
shl
test
add
neg
sti
in
popf
mov
xor
addr16
or
xor
mov
mov
pop
add
add
hlt
mov
repz
inc
mov
add
add
mov
iret
out
std
mov
shrb
mov
sbb
scas
add
ficompl
mov
add
mov
mov
add
out
in
sbb
ss
add
inc
cwtl
pop
xor
leave
popa
jle
add
mov
add
pop
test
add
test
push
add
fs
inc
lds
sub
fnstcw
pop
bound
xor
insb
dec
sbb
add
cwtl
mov
dec
inc
xchg
add
pop
and
add
or
je
sub
add
add
mov
or
add
sbb
mov
or
xchg
imul
mov
pusha
adc
rcrl
add
push
test
outsl
int
popa
imul
ret
sahf
lcall
xchg
mov
dec
lock
adc
or
movsb
add
pop
mov
push
imul
push
lcall
lret
in
insb
loopne
add
loop
dec
pop
mov
addl
or
dec
loop
lret
add
sbb
add
fmull
add
stos
add
pop
imul
negl
inc
int3
mov
cli
or
cmc
pusha
gs
aas
sub
add
out
fs
lds
push
cmc
mov
add
pavgw
add
in
add
inc
push
jmp
push
add
add
add
add
add
sbb
addr16
ret
inc
cmp
lcall
jl
jmp
ret
outsb
repz
mov
jbe
cmp
mov
add
sbb
stos
jg
mov
jae
addr16
adc
jg
in
shlb
loop
mov
add
push
scas
and
add
xchg
add
addr16
iret
or
add
add
test
add
sub
jne
cmp
cmp
adc
xlat
das
pop
jl
ss
sub
cwtl
fcmovnb
dec
inc
sub
add
mov
in
push
sub
push
jo
imul
xor
jge
inc
outsb
aad
adc
nop
mov
enter
popf
xor
sbb
data16
aas
rcll
mov
or
add
fsts
cmp
addb
enter
movsb
add
jmp
add
mull
add
pop
gs
adc
add
jecxz
std
push
jae
pop
sbb
rcl
mov
popf
pop
cmp
cwtl
jecxz
add
inc
dec
pop
sub
add
pop
and
add
into
imul
add
xor
outsl
imul
xor
xchg
mov
divl
ljmp
addb
loope
add
shrb
fnstsw
add
or
lds
or
add
add
mov
add
mov
and
sub
add
das
add
cmp
push
into
sub
add
add
cltd
mov
add
jle,pt
dec
mov
push
cltd
xlat
icebp
stos
jae
push
popf
push
dec
daa
std
sbb
add
sub
hlt
pop
mov
mov
add
add
sub
fxch
dec
in
aas
daa
fsubr
shrl
fists
cwtl
stc
rol
push
cmpsl
or
add
jns
sbb
add
mov
add
fsubrp
das
sbb
lock
add
inc
les
xor
mov
dec
add
push
add
ret
mov
add
sub
add
xchg
add
inc
imul
add
int3
pop
cmp
pop
mov
add
or
test
add
adc
enter
lea
or
add
and
add
cmp
add
mov
jbe
jl
xor
ret
add
and
add
mov
mov
add
fildll
inc
dec
ss
xor
add
and
add
sti
add
data16
hlt
mov
daa
in
shrl
add
push
fists
xor
xchg
mov
sub
cwtl
shlb
fsts
ja
mov
pop
scas
outsl
sub
add
add
mov
ror
out
in
mov
mov
add
insb
fidivrl
cmp
neg
push
rorb
cmpsl
xor
fcmovne
sub
add
mov
daa
mov
push
daa
pop
dec
and
add
jnp
and
add
repz
pusha
mov
icebp
xchg
fwait
inc
insb
mov
fwait
inc
insl
sbb
add
pop
jns
mov
add
dec
cld
hlt
jae
add
mov
add
leave
out
clc
cltd
ss
pop
scas
add
add
add
pop
and
add
sahf
int3
dec
mov
loope
mov
inc
mov
cmp
xlat
enter
pop
test
add
int
sbb
mov
add
outsb
sarb
add
ja
sbb
dec
adcl
rclb
bound
test
add
pop
push
add
push
push
jne
addr16
aas
ss
test
nop
fcoms
movsl
ficomps
and
add
jge
ret
adcl
xlat
xchg
xor
push
lcall
int
add
fdivs
lods
add
add
add
add
mov
inc
ss
fucomp
fimull
add
gs
xor
and
add
jnp
in
pushf
mov
dec
in
addb
out
stc
dec
lcall
arpl
add
dec
fildll
add
enter
add
mov
add
outsl
xchg
add
fdivl
lods
push
cmp
arpl
or
add
mov
dec
sbb
xchg
les
jge
adc
iret
pop
mov
add
add
inc
test
test
add
add
add
das
or
add
lahf
xor
repz
repz
cmc
xchg
test
add
leave
pand
jmp
add
add
inc
mov
int
sbb
pop
xchg
test
add
mov
add
sbb
sbb
jns
ja
inc
aaa
das
xchg
xchg
js
mov
cli
and
add
shlb
add
push
addb
sub
mulb
ss
add
mov
test
add
or
add
test
cmpsb
add
and
add
scas
add
add
add
add
push
add
stos
ja
in
in
add
add
lcall
add
lcall
inc
test
add
push
add
in
inc
mov
outsl
cmp
inc
xchg
add
and
cli
pop
fdivs
test
add
add
add
mov
fcomip
lds
xlat
int
add
ds
and
loope
mov
mov
add
inc
scas
cwtl
adc
push
sub
add
leave
mov
cmp
add
push
add
stos
daa
rclb
mov
and
add
jae
add
lret
clc
pusha
jb
cmc
imul
add
pop
jl
popf
dec
add
fidivl
imul
bound
dec
mov
push
repz
or
xchg
add
pop
inc
loopne
arpl
imul
lahf
sub
lcall
pop
into
lods
sbb
jecxz
add
mov
xlat
xor
por
stos
add
inc
xor
add
dec
idivl
mov
add
push
outsl
cmp
and
mov
push
add
dec
dec
pop
xor
dec
jp
shrl
push
add
clc
je
mov
lahf
fcompl
xor
hlt
dec
addb
add
add
nop
xor
cmp
pop
adc
add
push
and
push
add
add
fdiv
je
sub
add
cmp
lea
roll
cld
adc
xchg
mov
add
movsb
add
or
cmp
push
mov
fidivs
pop
inc
cmp
xchg
sti
pop
jmp
xchg
xchg
mov
test
add
cmp
imul
ds
jecxz
decl
push
mov
das
cld
or
add
add
addb
push
stos
add
lret
add
add
and
add
aam
pushf
das
add
pop
and
fisubrs
add
lods
add
rcr
cmpsl
jmp
add
cmp
push
xor
pusha
les
add
pop
imul
inc
and
xchg
add
add
cltd
jecxz
std
addb
or
add
ds
and
add
aad
push
leave
adc
ret
or
call
mov
mov
xchg
add
add
addb
jns
rorl
shlb
add
das
xchg
aad
cwtl
push
add
les
add
leave
sbb
sbb
shlb
loopne
jno
leave
sbb
mov
int
or
add
jmp
add
cmp
add
mov
add
add
add
shl
ja
adc
nop
and
add
jl
or
pop
sub
jno
and
sub
add
pop
and
fildl
add
movsb
add
push
inc
jl
scas
jns
add
sarb
dec
mov
xor
popl
add
sbb
fisubs
je
lods
add
pop
mov
fistps
add
insl
mov
sbb
cmovle
add
mov
fimuls
add
mov
add
js
out
ret
in
sub
ss
popa
inc
jg
out
add
cmp
add
push
add
shlb
adc
push
add
cmp
mov
push
xorl
xchg
mov
add
and
add
test
test
add
jmp
int3
cmp
push
xlat
ds
imul
add
lock
add
stos
push
pop
or
add
fdivrp
or
xlat
repnz
loopne
lret
adc
push
pop
je
int
add
mov
mov
inc
call
sub
and
fists
add
mov
add
adc
loope
inc
repnz
pusha
negb
outsl
adc
mov
jnp
dec
fisttpll
add
push
add
in
cmp
inc
shll
js
gs
mov
add
jmp
and
into
or
add
dec
jecxz
adc
xlat
lret
dec
aam
mov
add
sti
or
add
ret
or
add
cmp
mov
pop
int3
into
popf
inc
cld
fs
pop
jl
cmp
mov
add
rolb
mov
add
add
fmull
add
jg
clc
cld
xor
int3
adc
stos
mov
mov
mov
adc
lea
add
sbb
pop
push
lcall
dec
int3
outsb
fnstenv
les
icebp
out
xchg
add
outsb
jo
jle
dec
jno
sti
xchg
arpl
pop
ljmp
or
insl
pop
stos
add
adc
add
fcoml
sbb
or
xor
faddp
add
pop
push
mov
push
add
adc
lret
cld
mov
xchg
sbb
je
dec
mov
lds
cmp
cwtl
add
or
add
ljmp
movsb
add
push
mov
daa
addb
xchg
ret
add
cmpsb
add
sbb
jae,pt
mov
add
inc
and
add
divb
and
add
ds
or
jp
mov
add
mov
add
pusha
hlt
xchg
adc
inc
jge
jle
push
pushl
cmp
fiaddl
in
add
dec
mov
add
shlb
add
push
fistps
addb
or
add
add
sahf
cmp
sbb
xlat
nop
dec
inc
pop
jb
loop
xchg
into
add
add
push
xor
fldln2
addb
loope
xchg
inc
push
mov
addb
xor
stc
cwtl
mov
add
pop
lock
fistpl
mov
push
add
add
mov
add
jns
add
adc
add
mov
mov
cmp
sub
dec
dec
ficoms
imul
cmp
add
push
js
test
add
add
je
test
add
dec
pushf
pop
inc
ss
mov
dec
out
add
jne
sbb
pop
push
loopne
mov
add
insl
mov
pop
push
cmp
add
or
add
sarb
addb
jp
pop
shll
sahf
cmp
add
out
insb
cmpsb
add
push
push
aas
dec
sbb
mov
mov
js
popf
daa
push
jae
add
insl
xor
dec
cmp
push
push
ljmp
arpl
pop
xor
jmp
adc
jae
fmull
arpl
cwtl
jae
jg
inc
add
cmc
mov
add
rcl
ffreep
test
mov
dec
rorb
and
add
mov
nop
sti
lcall
dec
jl
mov
add
inc
dec
lret
lock
sub
add
dec
mov
add
aaa
pop
shl
xchg
add
cmp
add
jns
jno
add
cmc
and
push
add
cmp
xor
mov
cmp
pop
sbb
xchg
mov
cmp
nop
jae
pop
push
mov
add
and
add
mov
fmuls
out
fnstcw
push
add
pop
lds
in
inc
push
add
pop
push
add
leave
push
cmp
mov
sbb
sbb
movsb
add
push
mov
push
mov
dec
cwtl
subl
mov
add
adc
addr16
and
add
mov
imul
outsb
js
popa
or
add
mov
jp
ret
scas
popf
and
add
add
incb
add
negb
and
jecxz
mov
rcll
sbb
push
add
inc
addr16
cmp
fcoms
inc
mov
add
add
das
icebp
rcl
jg
push
jle
in
ja
mov
add
lret
rorl
sbb
add
out
out
fidivrl
sub
inc
fbld
add
xor
add
imul
sub
add
inc
mov
or
add
bound
cld
hlt
mov
add
add
jns
ret
add
xor
sbb
movsb
add
fidivl
ret
testb
addb
cmp
fiaddl
add
movsl
decl
cmp
sub
or
insl
ja
dec
out
int
test
add
mov
fldl
add
jae
test
add
add
sbbl
push
arpl
movsb
add
cli
movb
mov
add
ljmp
cmpsl
cmc
repz
or
add
rep
repnz
xchg
sub
add
add
daa
cmpsb
add
lret
mov
je
add
mov
sub
add
sbb
add
loope
push
jae
leave
mov
inc
jl
jge
lods
add
aas
jmp
inc
aam
add
mov
ret
shll
adc
outsl
enter
add
pusha
and
add
add
dec
stc
test
add
addb
push
add
add
mov
add
rolb
add
add
sub
add
and
add
lcall
push
pop
nop
sub
add
dec
and
add
mov
lock
cmpsl
xor
cmp
das
je
dec
aas
lods
add
add
add
push
add
adc
sbb
mov
add
fstpl
add
sbb
add
fidivrl
add
dec
mov
dec
int3
or
fsubrp
paddw
jge
cmp
pop
out
mov
popf
out
jno
add
mov
sbb
mov
add
sbb
out
cmp
add
add
jns
or
add
add
sbb
dec
push
inc
out
sti
cmp
add
add
out
add
mov
add
xchg
add
add
test
add
pop
add
inc
cmp
sti
loop
mov
mov
stos
in
cmp
add
fsubs
add
pop
xchg
add
testb
insb
inc
mov
pusha
mov
inc
fwait
sbb
pusha
inc
cmp
xchg
addb
std
push
scas
add
cmp
jle
sub
icebp
xchg
add
insl
xchg
jne
add
add
xor
add
adc
loop
mov
add
test
add
sbb
pop
addb
in
lock
into
cmp
inc
mov
ret
lds
pop
fwait
pop
cmpsb
add
das
jp
add
repnz
inc
sub
add
add
lret
push
lret
dec
dec
dec
test
ds
clc
mov
xor
leave
out
cmp
sahf
insb
jle
pushf
xchg
add
inc
push
roll
add
jmp
inc
inc
jo
adc
add
mov
jge
add
add
sbb
addr16
loope
ficoml
or
add
stos
enter
cmovg
mov
lds
push
mov
loopne
add
add
iret
icebp
inc
in
add
add
cmp
mov
inc
dec
scas
dec
insb
xchg
or
add
pop
push
push
mov
add
loope
cld
xchg
add
leave
inc
addb
imul
and
add
add
add
cwtl
mov
mov
lods
xor
add
mov
or
xchg
add
push
xchg
test
push
movsl
std
jecxz
xlat
insb
or
add
shll
repnz
pop
data16
mov
xor
add
mov
fs
or
add
add
cmp
add
cld
xchg
add
cmpsb
add
ret
lods
xchg
mov
xor
test
adcw
add
call
inc
xor
add
xchg
addb
popa
fwait
je
lock
mov
ss
mov
cmc
hlt
cmp
test
add
imul
mov
popa
jle
imul
fs
add
xor
jp
fstp
xorl
pop
push
pop
cmp
out
jle
pop
ja
inc
cli
mov
mov
add
pop
sti
icebp
xor
shl
cmp
mov
add
add
add
add
add
inc
das
push
out
push
stc
cmp
dec
adc
xchg
or
add
add
or
add
out
cltd
popf
cli
cmp
in
sub
add
add
lcall
cmpsb
add
add
cmp
addb
sub
leave
ja
shr
in
out
add
sti
push
test
test
add
cmp
clc
add
xchg
mov
and
jmp
pop
cld
test
add
mov
jecxz
imul
loope
stos
inc
cmpsl
div
mov
pop
mov
mov
add
int
addr16
add
add
mov
add
sbb
add
mov
sbb
lret
push
mov
add
cmp
fs
outsb
mov
sub
add
add
lods
add
arpl
lods
mov
mov
pop
shl
xchg
test
add
jne
sar
xchg
enter
add
mov
add
add
jmp
xor
jns
ds
sub
add
or
popa
jp
gs
in
fnstcw
shlw
ljmp
jne
jo
mov
lret
cmp
lock
mov
arpl
add
mov
add
je
arpl
xor
sub
dec
sbb
insl
or
add
and
add
popf
push
add
int3
movsb
add
das
out
lret
cmp
xor
mov
mulb
add
push
testb
sub
add
pop
or
add
outsb
stos
add
test
sbb
inc
into
push
fsts
cmp
jecxz
in
mov
jae
aas
adc
stos
add
loop
cmp
lret
jbe
sbb
pop
jle
add
call
mov
add
pop
dec
cli
push
lahf
fs
out
xchg
add
sub
add
jnp
xchg
add
outsb
dec
nop
mov
add
or
scas
xchg
add
xor
jae
xchg
mov
add
das
cmc
xchg
movsb
add
adc
jmp
lea
add
xor
mov
add
xlat
adc
leave
loopne
mov
cmp
sub
add
adc
add
fmuls
movsb
add
lret
fdivr
jno
loop
jbe
sbb
int
mov
mov
mov
fdiv
insb
shlb
addb
out
adc
scas
dec
add
xchg
sti
sbb
mov
mov
dec
mov
cmp
xchg
fs
push
xchg
pop
xor
jae
dec
loope
mov
mov
fcomi
bound
in
dec
daa
std
mov
add
mov
xlat
sub
add
jnp
jmp
in
dec
push
fcomps
or
add
add
gs
pop
push
sbb
add
add
repnz
push
add
lcall
add
test
add
arpl
imul
jno
mov
jbe
dec
loopne
xlat
xor
cmpsb
add
add
add
cltd
imul
rcr
jne
adcl
xchg
add
daa
add
add
and
add
mov
sti
pop
insb
lock
je
je
add
inc
sub
add
out
mov
mov
add
loop
pop
or
add
or
test
add
add
sub
add
mov
jg
inc
and
add
mov
enter
xchg
aas
cmp
sbb
sahf
mov
add
ds
add
mov
sub
add
xor
arpl
sub
add
and
icebp
scas
jg
sbb
add
push
sti
scas
xchg
sub
add
jnp
jg
pop
cld
mov
push
cmovb
add
and
scas
repz
push
xor
add
fmul
dec
addb
les
add
inc
sbb
xor
outsb
out
test
enter
loopne
xchg
or
mov
dec
cmp
enter
lods
ljmp
nop
jns
add
push
cmp
cli
out
push
sbb
fcomps
ss
mov
add
mov
add
sub
adc
sub
add
add
ljmp
mov
pop
fwait
lahf
lcall
xchg
out
jno
pop
dec
adc
ljmp
jp
shlb
add
jno
out
das
rolb
cmp
adc
hlt
inc
addb
sub
mov
pop
xchg
lret
add
add
mov
add
in
testb
leave
lret
mov
cld
mov
mov
add
jbe
mov
pop
xchg
stos
imul
sarl
add
lahf
mov
stos
add
popa
stos
add
jne
out
add
cmp
int3
repnz
mov
add
or
cmc
push
jo
popf
arpl
jg
bound
roll
adc
insb
adc
das
inc
sub
add
pop
sbb
pop
mov
jno
add
loope
aam
pmaxub
testb
add
dec
jge
sub
cmpsb
add
loopne
mov
push
xchg
lahf
clc
dec
sub
add
sub
mov
das
sbb
add
xchg
mov
and
loopne
add
jnp
rolb
add
int
cmc
pop
xchg
ficompl
push
dec
vpshld
jne
rcrl
xchg
daa
xor
ret
icebp
xchg
adc
inc
push
push
add
cmpsb
add
into
xchg
fmuls
xlat
and
xchg
inc
popa
mov
xchg
dec
push
sbb
je
add
jle
in
mov
cmp
dec
aad
repz
out
cmp
lahf
mov
add
add
xor
push
rclb
cmpsl
cmp
jae
cmp
fwait
mov
js
push
and
add
icebp
stos
add
cmp
mov
mov
sub
add
add
add
add
mov
add
dec
ret
gs
sbb
imul
aas
fwait
push
push
stos
xchg
xor
stos
inc
jmp
add
add
sub
add
fadd
daa
sbb
add
gs
addb
insb
jle
mov
arpl
add
fcoml
stos
shr
add
add
cmc
enter
add
adc
sbb
jns,pt
add
daa
mov
movsl
sahf
xchg
jmp
ss
mov
fdivl
popa
leave
repz
aas
pop
jnp
cmp
dec
push
sub
add
fcompl
data16
cmp
cmpsb
add
pusha
cmp
push
inc
push
add
popf
cltd
pop
xor
add
ja
shrl
add
and
sbb
std
pop
loop
test
jmp
lahf
mov
shlb
test
add
xchg
test
add
lock
loop
pushf
adc
mov
add
mov
add
loope
repnz
mov
das
sub
add
lret
stos
add
aad
dec
pop
lods
add
jecxz
add
inc
sbb
lea
js
add
inc
icebp
movsb
add
dec
enter
in
sub
add
pop
movsl
ret
mov
out
jl
add
lods
adc
lret
mov
sbb
mov
xchg
cmp
jg
aas
insl
mov
add
test
add
lcall
xchg
testb
add
fsubrl
and
or
add
test
add
inc
fldt
les
or
add
add
sbb
std
bnd
outsl
and
pop
cmp
cmp
adc
mov
fnstenv
mov
mov
out
xchg
mov
popf
sbb
imul
lahf
fs
sub
add
nop
mov
add
push
adc
enter
lods
decl
mov
add
pop
and
dec
sub
add
lods
and
aam
cltd
add
add
jo
lock
sub
test
push
pop
jns
into
inc
mov
pushf
lods
sbb
aam
insb
sub
add
cld
sub
lea
pop
loopne
daa
push
add
popf
imull
add
add
pop
lock
std
sbb
int
popf
cmp
dec
inc
cli
js
mov
add
add
mov
push
fcoms
ds
call
lods
add
jl
add
call
pop
sbb
outsl
lods
add
and
add
cmpsl
cmpl
cmc
push
dec
mov
addb
addr16
jb
lret
cmc
leave
pop
jae
pop
aad
pop
jle
fs
add
clc
mov
mov
cmpsb
add
gs
adc
add
mov
ret
clc
jo
lea
gs
out
xchg
add
add
arpl
mov
je
scas
add
jno
loope
cmp
sbb
insl
cmp
and
add
dec
mov
mov
push
add
addb
mov
iret
xchg
push
aad
inc
jecxz
dec
xor
repz
jmp
pop
aas
or
add
aaa
lods
xor
jle
out
fildll
dec
push
pop
sarl
xchg
mov
int
lds
out
out
fcomps
mov
add
leave
add
add
movsb
add
notb
ficompl
jne
movsb
add
hlt
dec
in
cwtl
mov
mov
or
add
aas
mov
test
add
pop
add
add
jae
stos
add
push
pusha
xchg
cwtl
sub
add
add
mov
add
add
add
add
and
add
call
clc
add
add
cmp
and
arpl
sub
mov
adc
not
in
xchg
in
pop
sbb
pop
cli
sub
ljmp
xchg
dec
mov
pop
out
sti
push
adc
and
add
add
mov
add
add
add
add
fadds
les
orl
add
add
mov
pop
sub
push
xchg
pop
adc
inc
mov
pop
adc
mov
add
jno
cmpsb
add
ja
fstpt
pop
add
vpsrad
add
repz
into
xchg
mov
fstl
in
in
add
mov
lret
pop
and
imul
je
inc
mov
add
add
mov
ja
xorps
movsb
add
sbb
add
mov
add
dec
mov
add
add
sbb
mov
imul
mov
push
jmp
add
test
add
mov
int3
lock
lcall
pop
test
addr16
push
xchg
addb
or
roll
stc
mov
mov
add
add
out
inc
xchg
fists
loop
test
add
cmp
outsb
cmp
lea
xchg
adc
mov
hlt
xor
nop
lahf
mov
pop
divb
add
fiadds
add
clc
cli
pushf
addb
and
mov
add
insb
in
mov
insl
mov
add
xor
add
mov
push
or
add
lcall
lods
jle
movsb
add
fmull
pop
inc
mov
add
cli
jmp
repz
sbb
mov
add
mov
fcmove
sar
jmp
adc
ja
mov
rcll
notl
hlt
xor
mov
add
jl
xor
add
gs
fldenv
add
mov
add
add
dec
push
add
jae
mov
add
xchg
jbe
add
dec
jo
dec
push
pop
imul
mov
sarb
shr
stc
repz
sbb
fnstenv
pop
rcrl
movsb
add
lock
sarl
inc
xchg
mov
cltd
dec
push
dec
leave
ficomps
in
mov
xchg
push
fiadds
add
orl
dec
lahf
out
add
rolb
add
add
push
fs
or
clc
stc
or
add
ret
addb
test
add
xor
add
push
pop
pop
ds
daa
adc
or
jne
movsl
pop
add
pushf
iret
push
xor
cmpsb
add
stc
jl
add
jmp
cltd
inc
jbe
add
add
add
xchg
scas
out
nop
and
add
push
loopne
add
mov
add
sbb
fcompl
push
add
into
xor
push
xlat
loopne
add
lods
loopne
xor
addb
pop
push
movsb
add
lahf
lods
add
mov
mov
mov
out
test
add
push
outsb
push
ret
add
xor
and
add
add
or
add
imul
outsl
dec
repnz
mov
aas
outsl
shrl
std
mov
xchg
lea
xlat
pop
add
in
pop
aas
push
les
data16
sub
ljmp
adc
add
and
nop
inc
xor
jae
std
mov
xor
pop
cli
arpl
outsb
int
js
inc
push
add
std
push
int
ficoml
adc
into
mov
in
fsts
add
fmull
add
add
push
add
mov
clc
xchg
jmp
pop
ficoms
push
loop
push
add
add
into
mov
mov
add
dec
lahf
push
lods
add
test
add
out
fdiv
les
mov
add
lahf
mov
xchg
add
push
jmp
add
adc
scas
ds
or
add
add
addb
fidivl
call
xchg
add
add
popf
mov
push
add
lcall
add
pop
jbe
adc
add
add
add
add
mov
add
adc
les
out
popa
dec
ljmp
jno
fs
out
ja
add
mov
out
pop
add
ror
lret
test
pop
and
add
sahf
and
add
hlt
pushf
xorl
sbb
add
xor
add
mov
mov
call
mov
les
idivl
inc
mov
add
cmp
xchg
inc
mov
xlat
int3
mov
add
mov
mov
add
jge
add
dec
xor
call
dec
sub
loop
je
sbb
pusha
mov
mov
add
or
add
leave
fsubr
insl
and
add
mov
lret
iret
out
cmp
add
fs
sbb
xor
cmp
xchg
jno
inc
lods
lcall
push
add
pushf
sub
add
fwait
push
mov
clc
sahf
and
pop
add
add
mov
adc
aaa
aam
jmp
adc
mov
push
nop
inc
inc
enter
add
and
mov
add
or
add
int
jecxz
pop
mov
mov
xchg
pop
jb
int3
jmp
add
add
xchg
ret
addr16
push
push
les
xor
xchg
aaa
add
cmp
jg
push
add
cld
sbb
cmp
pop
scas
add
mov
xchg
xor
gs
mov
jo
push
add
pop
mov
jns
pop
cmc
cld
int
push
add
rcrl
test
add
test
add
into
sub
mov
addl
fdivs
bound
bound
stos
add
xor
mov
xor
jo
mov
push
add
xchg
insb
roll
add
punpcklbw
insl
push
add
xchg
mov
dec
enter
icebp
cmpsl
out
push
add
mov
push
mov
mov
add
cmp
add
and
add
add
inc
dec
icebp
shlb
insl
insl
iret
ss
add
sub
add
cltd
cmp
xlat
jge,pt
jns
pandn
sbb
addr16
adc
stc
jl
jmp
add
scas
add
pop
jle
sti
lds
setb
ret
scas
imul
add
addb
jns
iret
outsb
inc
jnp
mov
add
xchg
pushf
mov
jnp
bound
or
add
test
add
addb
sub
add
notl
add
push
add
aas
or
xor
int
sbb
mov
movsl
inc
push
test
add
jno
add
andl
rclb
ret
add
pop
jnp
or
add
xchg
add
xor
add
and
pop
jg
test
jge
stos
add
mov
in
addb
sbb
mov
add
add
shll
add
adc
push
dec
xchg
add
xchg
add
insl
cltd
lret
sub
out
stos
add
test
add
add
add
and
add
xchg
add
xchg
call
enter
inc
xchg
loope
add
push
cmp
or
add
adc
dec
test
add
fldcw
add
dec
and
cmp
nop
cmpsl
mov
and
add
js
xchg
xor
jmp
ss
jo,pt
add
xor
add
xchg
cmp
add
add
jb
inc
pop
and
add
fwait
shl
add
add
dec
ss
push
add
mov
xchg
push
jns
or
add
push
idivb
rcrl
jle
addr16
std
push
adc
pop
xor
jg
pusha
fcompl
dec
nop
fistps
dec
lds
add
add
add
imul
pop
test
add
mov
add
jo
jle
mov
movntq
out
repz
add
sub
mov
xchg
fnop
popl
add
insb
bound
out
jge
dec
sarl
aas
and
add
int3
sbb
idivl
xchg
dec
xchg
stos
invd
add
and
jae
into
decl
xchg
sahf
mov
pop
sti
stc
add
mov
dec
jecxz
add
push
push
andl
add
adc
add
add
mov
add
add
push
mov
add
add
mov
jae
xchg
out
sbb
test
dec
and
sbb
aas
or
add
jg
push
sub
pop
repz
push
lods
add
add
movsb
add
out
cli
pop
int
xchg
add
add
add
xchg
jnp
add
add
adc
dec
sbb
jns
pop
push
imul
add
test
add
lea
add
int
insl
ja
adcl
add
orl
or
add
add
pop
popa
push
lcall
xchg
add
xor
add
add
loope
cmp
or
add
or
add
add
xorl
xchg
neg
dec
js
out
xchg
cmp
lods
add
movsl
mov
mov
out
or
jbe
cwtl
ds
cmp
xor
add
push
xor
mov
cmp
out
mov
into
or
inc
jge
jl
mov
jbe
xor
add
push
adc
loop
jb
mov
clc
loope
out
jmp
inc
push
mov
lea
outsb
rcll
pusha
xor
fs
and
adc
pop
cmp
test
add
fs
xor
data16
add
mov
add
mov
add
imul
add
add
mov
scas
ror
xor
insl
push
dec
mov
add
and
add
pop
lcall
pop
rcll
mov
add
sbb
jl
imul
adc
push
and
mov
add
enter
sbb
addb
dec
sub
add
xchg
jg
repz
addb
adc
push
inc
sbb
arpl
repz
xchg
popa
adc
lods
add
nop
jmp
clc
mov
add
xchg
adc
add
cmpsb
add
sbb
stos
add
nop
add
add
adc
jg
cld
mov
roll
loopne
scas
add
ds
incl
add
push
mov
push
and
add
cmpsl
pop
push
inc
out
fidivrl
jmp
scas
adc
repz
bound
shrb
add
push
mov
add
cld
sti
sub
add
pusha
in
ss
repz
mov
inc
adc
in
adc
outsb
push
aad
fwait
into
pop
in
and
add
push
addb
outsl
cmp
mov
xor
add
xor
push
mov
add
add
enter
add
scas
add
cmpsl
stos
xor
lret
add
icebp
mov
xchg
push
fstl
stos
xchg
xor
aas
xchg
xchg
fldl
add
imul
cmp
mov
dec
insb
fld
xchg
mov
sub
add
bnd
jl
add
jne
xchg
jmp
mov
or
add
enter
mov
cld
cmp
sbb
add
xchg
pop
pop
aad
arpl
sub
add
dec
stc
pop
pop
jae
addr16
aam
add
sbb
lret
xor
outsb
and
add
pusha
sbb
gs
out
cmpsl
xor
scas
add
push
add
jo
add
test
add
add
add
add
imulb
outsb
mov
dec
mov
push
fsubrs
push
push
or
add
push
push
pop
mov
in
or
iret
aam
add
repnz
addb
sub
add
movsl
into
ss
fistps
lcall
imul
inc
pushf
push
mov
add
adc
push
addr16
cmp
add
mov
xlat
mov
into
push
stos
add
xchg
dec
or
add
jmp
mov
add
jnp
sbb
mov
mov
sbb
jge
adc
cld
adc
mov
push
je
adc
jge
addb
fimull
add
xchg
add
sub
cmp
sub
add
pop
mov
add
add
jmp
add
repnz
add
popl
add
lahf
ret
gs
dec
in
mov
data16
cmp
ret
aam
add
incb
outsl
lcall
pop
fcom
push
push
sub
add
add
or
add
sub
mov
jecxz
aad
lretw
add
add
mov
sbb
jmp
cmp
stc
incb
xor
cld
cwtl
push
add
add
add
mov
lret
dec
inc
push
int
pop
jl
fldenv
add
dec
fsts
sahf
sbb
scas
lahf
shll
add
adc
addb
movsb
add
mov
add
imul
add
mov
add
add
call
jp
push
add
add
inc
sub
add
dec
int
ret
add
xor
aas
xor
loope
xchg
add
sbb
dec
xchg
mov
sbb
test
sbb
rclb
aad
mov
add
xor
stc
push
xchg
ficompl
adc
mov
adc
sbbl
aam
shll
adc
mov
mov
add
test
sub
in
data16
add
imul
and
add
ret
jp
or
add
sub
aam
jb
cmp
xor
push
dec
inc
pop
jle
jl
xchg
push
mov
add
ret
mov
shl
cmp
add
movsl
jecxz
pop
xlat
je
pop
inc
mov
add
mov
add
rclb
push
mov
pop
mov
jl
sub
add
jl
mov
add
addb
fdiv
xor
add
jge
fldt
ds
insb
std
sub
add
int3
pop
ljmp
subl
in
push
jecxz
int3
scas
in
das
xlat
adc
das
xchg
movsb
add
mov
add
cmc
mov
mov
add
ds
insl
mov
add
cmp
xor
add
jge
cmp
add
xchg
mov
add
push
inc
loop
add
add
das
popf
aaa
loopne
and
les
add
shrb
xor
into
dec
sbb
insb
jno
flds
xchg
insb
stos
mov
call
rcrl
js
cmp
add
mov
add
lret
lret
mov
ds
popf
pop
sbb
add
sti
or
cld
cmp
and
add
add
add
inc
aam
add
divl
out
int3
out
daa
test
add
popf
mov
jp
lret
mov
push
jg
leave
movsb
add
adc
add
loop
out
cmpsb
add
popf
hlt
int3
adc
adc
mov
push
add
adc
add
inc
xorl
mov
idivl
pop
jp
cmp
add
daa
test
add
push
icebp
in
aaa
std
jle
jae
pop
outsl
xor
adc
arpl
add
in
sbb
fdivp
mov
cwtl
aas
addb
mov
add
or
add
out
jb
sbbl
lods
add
xchg
sbb
cmp
xor
test
add
add
lret
cld
dec
sbb
add
cmp
roll
scas
movsb
add
pop
and
xchg
mov
add
add
je
mov
loopne
ret
scas
add
pop
leave
ror
lods
mov
out
lcall
push
mov
pop
cmp
out
pusha
aas
sub
repz
sti
jecxz
add
addr16
or
loope
shrb
addr16
aam
mov
adc
add
mov
and
add
add
pop
sbb
xor
jns
add
jb
shrb
add
add
repnz
pop
cltd
jg
xor
or
add
popf
pop
mov
stos
add
cli
xchg
pop
out
mov
lcall
bound
sub
or
add
push
ret
cmpsl
loopne
lods
inc
sub
add
add
xchg
je
add
jg
dec
mov
add
mov
outsl
fisttpl
in
inc
xchg
aad
scas
and
add
add
inc
xchg
inc
mov
add
xchg
idiv
pop
sub
add
test
add
mov
add
add
cli
inc
gs
jle
outsb
repnz
loope
mull
mov
inc
inc
sbb
jbe
mov
add
add
or
add
add
mov
pop
sub
adc
test
add
test
or
add
add
addb
xchg
je
pop
inc
push
mov
xlat
add
add
mov
and
add
icebp
push
add
inc
out
mov
pop
xchg
add
add
sar
leave
pop
push
and
add
sti
lods
add
mov
loopne
out
stos
add
ljmp
dec
out
cmc
xchg
decl
add
add
xchg
stc
jmp
shll
das
sub
pop
fstps
mov
add
sbb
stos
add
mov
dec
mov
add
loop
fmuls
add
sbb
int3
add
add
add
mov
mov
and
add
sub
sahf
mov
mov
sbb
jae
xchg
arpl
sbb
repnz
inc
cld
add
negl
popf
inc
mov
add
mov
add
mov
add
imul
or
add
stos
cmp
lahf
in
jbe
hlt
cwtl
xor
add
mov
jp
jle
xor
ds
out
xor
add
inc
in
pop
stc
repnz
xchg
add
jb
or
add
push
sar
fs
sub
add
mov
test
xchg
add
xchg
add
add
pop
movsl
or
add
imul
add
hlt
pushf
shlb
test
add
xor
xchg
insl
popa
inc
push
js
add
jl
test
mov
in
lret
aas
mov
add
lods
add
inc
mov
lods
add
out
clc
mov
add
loopne
add
cmpl
add
lahf
push
add
or
add
stc
mov
sahf
add
and
add
or
add
add
inc
pusha
mov
mov
inc
aam
out
xor
lods
scas
add
cmp
lret
inc
add
add
cmpsb
add
mov
add
add
mov
add
add
mov
out
into
jae
add
add
push
and
add
xchg
add
jno
hlt
add
add
insl
mov
fadd
bound
sbb
xor
add
xchg
inc
mov
add
movsb
add
mov
aad
fsts
cwtl
push
inc
test
add
add
push
rolb
xor
add
mov
jo
xlat
repnz
add
mov
or
add
repnz
and
jno
movsl
lea
add
mov
pop
add
add
mov
addb
push
lods
add
inc
dec
rcl
sub
add
mov
int
add
addr16
add
and
fistl
arpl
pushf
mov
jo
cwtl
iret
lds
lahf
mov
add
andl
lret
mov
call
add
mov
add
add
mov
add
or
or
add
add
out
rcrl
add
dec
xlat
jo
sub
pop
sbb
mov
in
stc
sbb
stc
fcomps
fstpl
jg
sbb
or
add
add
fstl
shlb
lds
imul
add
add
push
sbb
add
adc
xor
xchg
shlb
fwait
popf
sub
add
push
pop
stc
mov
inc
cltd
fisubs
xor
mov
add
xor
jns
jecxz
mov
addr16
sbb
mov
jb
add
pop
repnz
aas
inc
mov
xchg
inc
jbe
mov
or
add
sbb
sub
add
dec
push
std
push
add
icebp
mov
add
fstl
add
mov
add
add
lahf
jb
dec
xor
cltd
jne
js
mov
mov
xlat
std
jnp
sbb
sbb
add
push
add
add
dec
mov
add
fisttpl
inc
out
jecxz
fbld
loop
add
ljmp
xorl
jns
and
add
cmp
fdivrs
test
pop
mov
add
adc
or
das
movsb
add
pushf
cmpsb
add
aad
les
pusha
sbb
push
mov
or
add
add
fildl
wrmsr
push
cmpsl
fsubl
mov
lods
add
and
sarl
add
adc
cltd
rorl
jae
inc
scas
jl
mov
add
sbb
aaa
stos
push
ds
xchg
add
add
mov
mov
add
pop
shr
pop
dec
pop
sbb
idivl
ret
inc
sbb
add
sti
cmovo
add
test
add
mov
inc
xchg
mov
fcomp
and
add
int
cmp
jne
call
aas
sbb
add
ljmp
sbb
mov
add
inc
dec
inc
mov
sbb
add
xchg
fisubrl
sub
mov
add
jl
scas
and
movsl
or
add
add
insl
mov
out
cmp
das
dec
xor
jae
adc
stos
add
pop
xchg
test
mov
mov
outsl
imul
pop
int3
cmpsb
add
push
orl
dec
test
add
xchg
add
ret
cmp
mov
in
addb
pop
out
ror
and
add
xchg
ds
jbe
add
and
add
sub
add
pop
mov
fwait
jo
xchg
xor
pop
pop
test
add
stos
sub
add
push
lds
push
cmpsb
add
repnz
fdivrl
idivl
pop
aam
lods
add
aas
push
push
or
add
push
in
outsl
mov
into
dec
jp
repnz
add
into
das
sub
add
pop
jp
jmp
lcall
loopne
lods
cmc
sbb
add
add
int
push
stos
add
xor
lock
sahf
dec
adc
sub
or
lea
sbb
int3
pop
pushl
add
xchg
mov
pushf
aam
sti
fwait
xchg
jl
adc
ljmp
insb
sub
fdivrl
mov
jl
std
loop
pop
subl
pop
jge
add
cmp
add
cli
inc
xor
add
aam
fadds
lret
add
add
xor
add
into
loopne
add
xchg
lahf
pop
adc
cmpsb
add
sbb
call
add
add
adc
push
nop
add
xchg
xchg
in
hlt
int3
loopne
sub
fxch
gs
aaa
inc
push
add
negb
addr16
and
or
add
enter
add
add
add
in
adc
add
nop
repnz
jg
or
cltd
jmp
lahf
mov
sub
push
dec
loopne
fistpl
dec
jb
xchg
push
pop
cmp
addl
inc
lds
add
lods
flds
fcoms
add
test
mov
into
jae
add
div
pop
inc
add
jmp
std
je
sbb
aam
iret
in
mov
jl
inc
xchg
leave
lcall
adc
lahf
insl
inc
add
add
add
dec
cwtl
inc
add
xchg
xchg
mov
add
cmp
loop
add
sub
add
pop
xor
loop
aaa
mov
add
or
add
movsb
add
icebp
or
add
add
popf
add
frstor
fwait
or
and
sbb
add
mov
lcall
add
mov
pop
aaa
jge
add
leave
dec
cmp
dec
cmpsl
test
add
inc
add
imul
in
add
push
jl
addb
lret
jae
or
add
xor
dec
add
add
inc
xchg
rcll
jnp
mov
gs
jns
fstl
js
ret
add
add
and
xchg
add
pop
adc
inc
loopne
test
add
insl
jbe
sbb
insb
and
add
mov
cwtl
xchg
cmp
fs
rolb
movsb
add
lahf
enter
cli
or
push
and
add
test
pop
std
cltd
mov
add
addb
mov
add
scas
xchg
sub
lret
fwait
inc
push
popa
xor
add
xchg
add
add
cmpsb
add
push
imulb
add
incl
add
sub
out
lret
lret
and
add
pop
shll
xchg
add
leave
nop
push
adc
add
jmp
add
jmp
add
add
push
mov
pop
and
inc
sbb
lods
enter
mov
or
add
push
test
add
xor
repnz
push
inc
push
sbb
add
or
sahf
das
jp
dec
mov
add
add
add
add
movsl
out
mov
addr16
add
je
mov
add
shll
cwtl
rcl
inc
push
add
stos
add
out
jne
mov
jbe
add
mov
add
xor
xchg
int
popl
cmp
add
and
leave
sti
add
das
mov
or
add
icebp
sub
add
add
push
pop
fdivrs
dec
jmp
cmp
xchg
xchg
xchg
jl
mov
dec
addr16
imull
xchg
add
fdiv
arpl
lret
xor
lds
cmp
pop
jg
test
mov
sbb
stos
add
add
push
movsl
dec
fcomps
add
aaa
dec
int
loope
nop
xor
or
jns
add
add
ja
mov
in
add
mov
test
add
mov
fimull
pop
push
sbb
cld
fs
insb
pop
iret
fwait
sarl
cld
add
add
and
add
sahf
mov
xchg
enter
std
mov
add
xor
imul
push
push
add
jg
xor
arpl
add
xor
add
test
add
push
adcl
jg
xchg
outsb
cmp
mov
adc
int3
jg
test
add
pavgb
add
mov
pop
loopne
out
aas
xchg
jmp
add
clc
sub
mov
mov
add
add
cwtl
fnstsw
test
add
mov
sbb
cmc
xchg
icebp
jl
mov
cmp
push
test
add
xor
or
cmp
pop
fwait
cmp
add
jmp
popl
sar
mov
add
fsubrl
sub
add
add
cwtl
add
add
aaa
das
stos
add
jnp
adcl
addb
inc
in
sbb
test
mov
push
and
add
cmp
inc
lds
push
in
flds
jo
mov
gs
cmp
lea
cmp
jae
repz
inc
ljmp
push
roll
add
loop
add
pop
cwtl
push
jo
std
adc
add
pushl
fnstsw
cmpsb
add
inc
jmp
dec
mov
xchg
sbb
scas
fmul
or
jno
nop
pusha
sub
add
add
adc
sbb
ds
dec
sub
add
add
add
jmp
inc
aas
mov
add
cmp
dec
lods
add
sub
add
cmc
fcmovbe
xchg
fwait
fs
sbb
add
jnp
jl
dec
in
rcl
fwait
aaa
ja
jbe
pop
and
add
out
aaa
xor
lret
push
popa
popa
pop
adc
mov
add
mov
add
mov
and
mov
ja
test
fsubrl
insb
mov
push
add
ret
int3
shl
adc
dec
addr16
add
and
fcomip
or
dec
mov
add
cmpsb
add
test
add
xlat
lods
test
add
popf
add
sti
outsb
addl
mov
in
rcrb
add
notb
add
mov
add
mulw
ror
or
add
add
inc
movsl
add
lods
add
mov
pop
xchg
repnz
daa
jae
stos
add
sbb
outsb
aaa
leave
mov
push
add
cmp
or
dec
pop
fadd
popf
xorl
sbb
add
ljmp
sbb
mov
hlt
sti
adc
sbb
push
gs
insb
rorb
add
xchg
push
add
or
or
mov
imul
in
sub
add
lret
pop
sbb
jg
sub
mov
repz
adc
cmp
push
bound
sbbl
xor
insb
repnz
dec
dec
data16
add
xchg
xchg
lret
pop
cmp
addr16
cmp
or
add
push
add
imul
test
add
pop
mov
in
add
add
add
inc
adc
add
cmpsl
pop
adc
inc
push
filds
enter
jp
into
dec
repz
shlb
xor
adc
add
xor
add
xlat
inc
cld
lret
jbe
xor
mov
add
add
testb
push
fimuls
and
add
cmp
in
sahf
inc
jle
jnp
jge
jg
loopne
jae
inc
cli
insb
cmp
add
add
add
add
lret
xor
pop
cwtl
repnz
fcomp
pop
add
add
add
pop
ja
or
add
mov
loopne
jle
fs
lahf
ret
adc
imul
add
sub
add
mov
push
push
shrb
add
add
add
sub
idivl
mov
pop
icebp
sti
mov
add
ljmp
cld
sub
add
mov
xchg
dec
dec
scas
add
in
cmpsb
add
fnsave
add
out
mov
adc
mov
sbb
add
inc
mov
add
add
fwait
das
clc
mov
adc
pusha
push
fistpl
out
leave
mov
add
outsl
decb
lds
dec
mov
in
pop
inc
das
jnp
xchg
rdtsc
imul
add
add
add
mov
test
aam
int
js
scas
add
pusha
stos
add
idivb
add
negb
adc
push
out
test
sub
add
addl
iret
push
daa
outsb
popf
xchg
adc
sbb
or
add
adc
lret
jecxz
les
add
and
in
outsb
and
add
mov
aaa
jmp
or
add
pop
xchg
in
mov
cmp
rcll
add
notb
mov
add
cmp
dec
sti
mov
mov
shlb
repnz
ds
test
sbb
shl
xchg
scas
or
add
add
push
add
or
mov
mov
add
loope
mov
add
add
ds
mov
add
rcrl
jecxz
mov
daa
psrlq
cld
add
negb
jae
lcall
xor
sub
add
int
sbb
repz
iret
insl
or
and
addr16
sti
pusha
aaa
hlt
lock
aam
mov
dec
fistpl
xlat
imul
fwait
cmp
call
add
aad
in
movsb
add
test
add
in
movsb
add
jecxz
mov
and
add
shrl
add
and
add
rcll
xchg
mov
dec
loopne
add
shll
mov
xlat
or
add
scas
mov
das
pop
test
add
push
sbb
fdivs
xchg
xchg
push
aas
xor
jbe
lret
pop
add
leave
fistps
push
imul
ret
repnz
test
add
jne
add
add
inc
cmpsb
add
push
mov
pop
cmp
ret
inc
add
xor
xchg
add
mov
sub
pop
jno
add
inc
cmp
addr16
out
mov
jmp
lea
add
jo
mov
cwtl
inc
cld
dec
popa
imul
hlt
mov
xor
xor
add
mov
test
cmpsl
adc
roll
adc
sub
add
add
add
add
cmc
inc
roll
add
push
inc
fidivrl
bound
add
lret
add
aas
movsl
ljmp
pop
pop
call
rorb
jl
ficoms
daa
je
add
xadd
cltd
jl
mov
add
inc
mov
xor
pop
mov
cltd
push
iret
jne
mov
js
mov
add
hlt
cmc
pushf
inc
push
and
xchg
add
add
add
lock
ficoms
sub
add
xorl
das
lret
cltd
movsl
lahf
mov
add
pop
aas
push
add
lea
add
fimuls
hlt
clc
add
pop
mov
rsm
add
fimuls
push
pop
fidivl
fs
ret
repz
inc
mov
mov
mov
shll
or
add
add
push
add
stos
add
mov
rolb
pop
fcomp
jmp
sbb
mov
mov
cmp
add
loop
sbb
stc
cmp
inc
adc
pusha
stc
aad
enter
add
in
mov
iret
mov
add
pop
into
or
add
setno
or
add
add
xor
mov
sbb
mov
gs
out
inc
leave
mov
int3
call
or
fldcw
add
inc
call
xor
popa
add
sbb
pop
sub
repz
add
jle
add
mov
lcall
inc
addb
cli
into
xchg
mov
repz
stos
add
dec
lret
pusha
sbb
jno
add
jmp
orl
pop
xor
or
test
add
add
inc
loopne
cli
add
mov
add
mov
cmpsb
add
pop
popf
aad
push
add
addb
outsl
outsl
jo
add
cmp
push
add
sub
push
cld
cli
inc
push
inc
fmull
add
add
xlat
mov
jbe
stc
push
adc
push
aaa
pop
inc
das
fs
addb
pop
outsb
jnp
push
mov
insb
imul
add
rolb
inc
mov
ljmp
add
out
add
enter
cwtl
or
add
and
add
add
addb
sbb
lods
add
xor
shrb
cmovle
negb
push
loop
push
lods
add
dec
cwtl
jns
add
negb
pusha
and
ret
or
push
aas
movsl
add
add
outsb
push
popa
sub
add
dec
add
imul
not
addb
rcll
cmp
dec
ljmp
repz
xlat
or
add
rcr
insl
pop
dec
inc
into
imul
add
jecxz
fistl
push
out
sub
add
rclb
cmp
sti
push
fwait
pop
inc
mov
lahf
ss
paddsb
aaa
stos
inc
mov
add
fdivs
ja
jl
out
push
iret
loope
sbb
jmp
push
outsl
loope
mov
add
xor
cwtl
rcrb
leave
addb
sbb
push
ret
stos
pop
xchg
les
xor
add
rclb
addb
les
outsl
mov
mov
add
add
add
